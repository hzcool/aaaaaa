[
    {
        "content": "\u8fd9\u9898\u6211\u62ff\u4e8c\u5206\u7b54\u6848+\u5e76\u67e5\u96c6\u505a\u7684\uff0c\u5c31\u662f\u4e0d\u65ad\u7684\u4e8c\u5206\u65f6\u95f4\uff0c\u7136\u540e\u5c31\u8981\u68c0\u6d4b\u5728\u8fd9\u4e2a\u65f6\u95f4\u5185\u80fd\u4e0d\u80fd\u6210\u529f\u5f62\u6210\u8fde\u901a\u5757\uff0c\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u6765\u505a\uff1a\u8981\u662f\u4e24\u70b9\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff08\u5c31\u662f\u6a2a\u7eb5\u5750\u6807\u7684\u5dee\u503c\u548c\uff09\u4e0d\u8d85\u8fc7\u65f6\u95f4\u7684**2\u500d**\uff08\u8fd9\u4e2a\u5730\u65b9\u5f88\u5751\uff0c\u56e0\u4e3a\u4e24\u4e2a\u70b9\u90fd\u80fd\u6269\u6563\uff0c\u6240\u4ee5\u76f8\u5bf9\u7684\u6269\u6563\u901f\u5ea6\u4f1a\u589e\u500d\uff09\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u4e24\u4e2a\u70b9\u80fd\u5728\u4e00\u8d77\u7136\u540e\u5c31\u62ff\u5e76\u67e5\u96c6\u8fde\u8fb9\uff0c\u6700\u540e\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u5c31\u8bf4\u660e\u8be5\u65f6\u95f4\u5408\u6cd5\uff0c\u5c31\u5411\u5de6\u533a\u95f4\u53bb\u4e8c\u5206\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint xs[51];\nint ys[51];//\u5750\u6807\nint ints[51];//\u5e76\u67e5\u96c6\nint find(int n){\n    if(ints[n]==n)return(n);\n    return(ints[n]=find(ints[n]));\n}\nint main(){\n    int n;\n    cin>>n;\n    for(int i=0;i<n;i++)cin>>xs[i]>>ys[i];\n    int l=0,r=1000000000;\n    int ans=0;//\u6700\u7ec8\u7b54\u6848\n    while(l<=r){\n        int mid=(l+r)>>1;//\u4e8c\u5206\u7b54\u6848\n        for(register int i=0;i<n;i++){\n            ints[i]=i;\n        }//\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n        for(register int i=0;i<n;i++){\n            for(register int j=i+1;j<n;j++){\n               int dis=abs(xs[i]-xs[j])+abs(ys[i]-ys[j]);\n               if(dis<=mid*2){//\u80fd\u6269\u6563\u5230\u5c31\u8fde\u8fb9\n                   int aa=find(i),ab=find(j);\n                   if(aa!=ab)ints[aa]=ab;\n               }\n            }\n        }\n        int cnt=0;//\u8fde\u901a\u5757\u4e2a\u6570\n        for(register int i=0;i<n;i++){\n            if(ints[i]==i)cnt++;\n        }\n        if(cnt==1){\n            ans=mid;\n            r=mid-1;\n        }//\u53ea\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u5c31\u66f4\u65b0\u7b54\u6848\u5411\u4e0b\u67e5\u627e\n        else{\n            l=mid+1;\n        }\n    }\n    cout<<ans<<endl;\n    return(0);\n}\n```",
        "postTime": 1517973259,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u672c\u4eba\u611f\u89c9\u8fd9\u9053\u9898\u5e76\u4e0d\u9700\u8981\u90a3\u4e48\u9ebb\u70e6\u7684\u5e76\u67e5\u96c6\u548c\u4e8c\u5206\u7b54\u6848\uff0c\u5f53\u6211\u770b\u5230\u9898\u89e3\u91cc\u90fd\u662f\u4e8c\u5206\u7b54\u6848\u7684\u65f6\u5019\uff0c\u6211\u8499\u4e86\u3002\n\n#### \u662f\u6211\u592a\u83dc\u4e86\u5417\uff1f\uff1f\uff08\u597d\u50cf\u662f\u7684\uff09\n\u4ed4\u7ec6\u5730\u5206\u6790\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u8ba4\u4e3a\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u7684\u53cb\u5584\u3002\u4e5f\u5c31\u662f\u8bf4n\u4e09\u6b21\u65b9\u7684\u66b4\u529b\u662f\u5b8c\u5168\u53ef\u4ee5\u8fc7\u7684\u3002\n\n### \u73b0\u5728\u6211\u4eec\u4ed4\u7ec6\u6765\u8bfb\u9898\uff1a\n\u4e00\u4e2a\u70b9\u6bcf\u8fc7\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u5c31\u4f1a\u5411\u56db\u4e2a\u65b9\u5411\u6269\u6563\u4e00\u4e2a\u8ddd\u79bb\u3002\n\n\u4e24\u4e2a\u70b9a\u3001b\u8fde\u901a\uff0c\u8bb0\u4f5ce(a,b),\u5f53\u4e14\u4ec5\u5f53a\u3001b\u7684\u6269\u6563\u533a\u57df\u6709\u516c\u5171\u90e8\u5206\u3002\u8fde\u901a\u5757\u7684\u5b9a\u4e49\u662f\u5757\u5185\u7684\u4efb\u610f\u4e24\u4e2a\u70b9u\u3001v\u90fd\u5fc5\u5b9a\u5b58\u5728\u8def\u5f84e(u,a0),e(a0,a1),\u2026,e(ak,v)\u3002\u7ed9\u5b9a\u5e73\u9762\u4e0a\u7684n\u7ed9\u70b9\uff0c\u95ee\u6700\u65e9\u4ec0\u4e48\u65f6\u523b\u5b83\u4eec\u5f62\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5047\u8bbe\u6709\u4e24\u4e2a\u70b9A\uff0cB\uff0c\u4ed6\u4eec\u7684\u5750\u6807\u5206\u522b\u4e3a\uff08x1,y1\uff09,\uff08x2,y2\uff09.\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u8981\u8fd9\u4e24\u4e2a\u70b9\u6269\u6563\uff0c\u8981\u591a\u4e45\u7684\u65f6\u95f4\u4ed6\u4eec\u7684\u6269\u6563\u8303\u56f4\u4f1a\u76f8\u4ea4\u5462\uff1f\n\n### \u7b54\u6848\u662f\uff08\u5b83\u4eec\u7684\u66fc\u54c8\u987f\u8ddd\u79bb+1\uff09/2;\n\u8ba9\u6211\u4eec\u6765\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u6211\u4eec\u5047\u8bbex1<x2 \u5e76\u4e14 y1<y2\u3002\u90a3\u4e48\u73b0\u5728A\u548cB\u60f3\u8981\u76f8\u9047\uff0c\u5b83\u4eec\u80af\u5b9a\u4f1a\u5c3d\u91cf\u5f80\u5bf9\u65b9\u7684\u65b9\u5411\u9760\u3002\n\u90a3\u4e48A\u70b9\u6bcf\u6269\u6563\u4e00\u6b21\uff08\u5047\u8bbeB\u4e0d\u52a8\uff09\uff0c\u4ed6\u548cB\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u90fd\u4f1a\u51cf\u5c111\uff0c\u90a3\u4e48B\u6bcf\u6b21\u6269\u6563\u4e00\u6b21\uff08\u5047\u8bbeA\u4e0d\u52a8\uff09\uff0c\u4ed6\u4e0eA\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4e5f\u4f1a\u51cf\u5c111\u3002\n\n#### \u90a3\u4e48\u8fd9\u8bf4\u660e\u4ec0\u4e48\u5462\uff1f\n\u563f\u563f\uff01\u8fd9\u5c31\u8bf4\u660e\u6bcf\u6b21\u6269\u6563A\u548cB\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u90fd\u4f1a\u51cf\u5c112\u3002\n#### 1.\u5982\u679c\u66fc\u54c8\u987f\u8ddd\u79bb\uff08\u8bbe\u5176\u4e3adis\uff09\u4e3a\u5947\u6570\uff0c\u90a3\u6700\u540e\u4e00\u6b21\u8ddd\u79bb\u53ea\u5dee1\u3002\u6240\u4ee5\u9700\u8981dis/2+1\u7684\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\uff08dis+1\uff09/2;\n#### 2,\u5982\u679c\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a\u5076\u6570\uff0c\u90a3\u6b63\u597ddis/2\u7684\u65f6\u95f4\u540e\u4ed6\u4eec\u4f1a\u6b63\u597d\u76f8\u9047\u3002\u800c\uff08dis+1\uff09/2\u540e\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff08\u56e0\u4e3a\u662f\u4e0b\u53d6\u6574\uff09\n\n## \u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u6709\u591a\u4e2a\u70b9\u7684\u60c5\u51b5\uff1a\n\u5148\u5047\u8bbe\u6709\u4e09\u4e2a\u70b9A\uff0cB\uff0cC\uff0c\u4ed6\u4eec\u7684\u5173\u7cfb\u662fA\u79bbB\u8fd1\uff0cB\u79bbC\u8fd1\uff0c\u7531\u4e8e\u662f\u540c\u65f6\u5f00\u59cb\u6269\u6563\u7684\u3002\n\n\u6211\u4eec\u8bbeAB\u7528\u4e86t1\u79d2\u76f8\u9047\uff0cBC\u7528\u4e86t2\u79d2\u76f8\u9047\uff0c\u5982\u679c\u4e0d\u8003\u8651B\uff0c\u8bbeAC\u7528\u4e86t3\u79d2\u76f8\u9047\u3002\u90a3\u663e\u7136\u4f1a\u6709min(t1,t2)<t3\uff0c\n\n#### \u4e3a\u4ec0\u4e48\u5462\uff1f\n\u56e0\u4e3aAB\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u6216\u8005BC\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4e00\u5b9a\u4f1a\u5c0f\u4e8eAC\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff08\u56e0\u4e3aB\u52a0\u5728A\u548cC\u7684\u4e2d\u95f4\uff09\uff0c\u7531\u4e8e\u662f\u540c\u65f6\u6269\u6563\uff0c\u6240\u4ee5\u80af\u5b9a\u662fB\u8fd9\u4e2a\u4e2d\u95f4\u8282\u70b9\u5c06A\u548cC\u66f4\u5feb\u5730\u8fde\u63a5\u8d77\u6765\u4e86\u3002\n\n\u90a3\u4e48\u62d3\u5c55\u5230\u591a\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u6bcf\u4e24\u4e2a\u70b9\u90fd\u662f\u88ab\u79bb\u5b83\u6700\u8fd1\u7684\u70b9\u6269\u6563\u5230\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u65f6\u95f4\u5c3d\u91cf\u7684\u5c11\u3002\n\n#### \u6570\u636e\u8303\u56f4\u4e3a50\uff0c\u53d1\u73b0\u53ef\u4ee5\u7528floyd\u76f4\u63a5\u5904\u7406\u51fa\u6bcf\u4e24\u4e2a\u70b9\u95f4\u7684\u8def\u5f84\u4e2d\u3002\u6700\u5927\u7684\u4e00\u6761\u8def\u5f84\u662f\u8c01\uff08\u663e\u7136\u53ea\u8981\u8d70\u5b8c\u4e86\u8fd9\u6761\u8def\u5f84\uff0c\u5176\u4ed6\u7684\u8def\u5f84\u5728\u54ea\u4e4b\u524d\u5c31\u5df2\u7ecf\u6269\u6563\u5b8c\u4e86\uff09\u3002\n\n\u6700\u540e\u6211\u4eec\u53ea\u9700\u8981n\u65b9\u679a\u4e3e\u6bcf\u4e24\u4e2a\u8282\u70b9\uff0c\u7528ans\u66f4\u65b0\u6700\u5927\u503c\u5373\u53ef\uff0c\u627e\u5230\u7684\u8fd9\u4e2a\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\u3002\uff08\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u8282\u70b9\u5982\u679c\u6269\u6563\u5b8c\u4e86\uff0c\u5176\u4ed6\u7684\u8282\u70b9\u80af\u5b9a\u65e9\u5c31\u6269\u6563\u5b8c\u4e86\uff09\u3002\n\n\u4ee3\u7801\u975e\u5e38\u7684\u77ed\uff0c\u4e5f\u5f88\u597d\u7406\u89e3\uff0cAC\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\nstruct vode\n{\n\tint x;\n\tint y;\n}a[105];\nint place[105][105];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\tplace[i][j]=1e9;\n\t}\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tfor(int j=1+i;j<=n;j++)\n\t\t{\n\t\t\tplace[i][j]=place[j][i]=(abs(a[i].x-a[j].x)+abs(a[i].y-a[j].y));\n\t\t}\n\t}\n\tfor(int k=1;k<=n;k++)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\tplace[i][j]=min(place[i][j],max(place[i][k],place[k][j]));\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tans=max(ans,place[i][j]);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",(ans+1)/2);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1567166363,
        "uid": 114514,
        "name": "zzr8178541919",
        "ccfLevel": 7,
        "title": "\u6269\u6563"
    },
    {
        "content": "\u628a\u9898\u76ee\u8981\u6c42\u8f6c\u6362\u4e00\u4e0b\uff0c\u5047\u8bbe\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u6709\u8fb9\uff0c\u76f8\u5f53\u4e8e\u6c42\u6240\u6709\u70b9\u6784\u6210\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6700\u957f\u7684\u4e00\u6761\u8fb9\u3002\n\n\u628a\u4e24\u70b9\u6269\u6563\u8fde\u63a5\u7684\u65f6\u957f\u4f5c\u4e3a\u8fb9\u7684\u6743\u503c\uff0c\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u8fb9\uff0c\u7136\u540e\u7528kruskal\u7b97\u6cd5\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u627e\u5230\u5176\u4e2d\u6700\u957f\u7684\u8fb9\u5373\u53ef\u3002\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstruct edge\n{\n    int x,y,val;\n}e[3000];\nint father[3000];\nint cnt,n,ans;\nbool mycomp(edge x,edge y)\n{\n    return x.val<y.val;\n}\nvoid input()\n{\n    int x[51],y[51];\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>x[i]>>y[i];\n    for(int i=1;i<=n;i++)\n    {    \n        for(int j=1;j<i;j++)//\u5c06\u8fb9\u5b58\u5165\u7ed3\u6784\u4f53\u4e2d \n        {\n            e[++cnt].x=i;\n            e[cnt].y=j;\n            int d=abs(x[i]-x[j])+abs(y[i]-y[j]);\n            if(d&1) //\u6269\u6563\u662f\u53cc\u5411\u7684\uff0c\u6240\u4ee5\u6c42\u51fa\u4e24\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u5224\u65ad\u5947\u5076\u540e\u6c42\u51fa\u65f6\u95f4 \n                e[cnt].val=(d>>1)+1; \n            else \n                e[cnt].val=(d>>1);\n        }\n    }\n}\nint Find(int x) \n{\n    int root=x;\n    while(father[root]!=root)\n        root=father[root];\n    while(root!=x)\n    {\n        int temp=father[x];\n        father[x]=root;\n        x=temp;\n    }\n    return root;\n}\nvoid kruskal()\n{\n    int p=1;\n    for(int i=1;i<=n;i++)\n        father[i]=i;\n    for(int i=1;i<=cnt;i++)\n        if(Find(e[i].x)!=Find(e[i].y))\n        {\n            father[Find(e[i].x)]=Find(e[i].y);\n            ans=max(e[i].val,ans);//\u5bfb\u627e\u6700\u5927\u7684\u8fb9 \n            p++;\n            if(p==n)\n                return ;\n        }\n    return ;\n}\nint main()\n{\n    input();\n    sort(e+1,e+cnt+1,mycomp);//\u6309\u8fb9\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n    kruskal();//\u5e76\u67e5\u96c6 \n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1507442148,
        "uid": 48500,
        "name": "AntaresQAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u989d\uff0c\u8fd9\u9053\u9898\u597d\u50cf\u76f4\u63a5\u7528\u7c7b\u4f3c\u4e8eFloyd\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fc7\u4e86\u8036\n\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,maxx;\nint x[55],y[55];\nint g[55][55];\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n      cin>>x[i]>>y[i];\n    \n\t//\u8ba1\u7b97\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u521d\u59cb\u8ddd\u79bb\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            g[i][j]=abs(x[i]-x[j])+abs(y[i]-y[j]);\n    \n    //i\u548cj\u53ef\u4ee5\u901a\u8fc7k\u6765\u8fde\u63a5\uff0c\u8def\u5f84\u957f\u5ea6\u4e3a\u4e24\u8005\u5230k\u7684\u8ddd\u79bb\u4e2d\u66f4\u5927\u7684\u90a3\u4e2a\n    for(int k=1;k<=n;k++)\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                g[i][j]=min(max(g[i][k],g[k][j]),g[i][j]);\n                \n    //\u5bfb\u627e\u6700\u5927\u8ddd\u79bb\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            maxx=max(maxx,g[i][j]);\n            \n    //\u6ce8\u610f\u8981\u53d6\u4e0a\u6574\uff0c\u672c\u4eba\u5c31\u56e0\u4e3a\u8fd9\u4e2aWA\u4e86\u597d\u51e0\u4e2a\u70b9\n    cout<<int(ceil(maxx*1.0/2));\n    return 0;\n}\n```\n",
        "postTime": 1565870574,
        "uid": 86945,
        "name": "\u674e\u5c0f\u6cfd\u5475\u5475\u54d2",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "### ****\u6b64\u9898\u672c\u4eba\u7684\u601d\u8def\u4e3a\uff1a\u4e00\u6b21\u51fd\u6570+\u6392\u5e8f+\u5e76\u67e5\u96c6****\n\n\u7531\u9898\u610f\u5f97\uff0c\u6bcf\u4e2a\u70b9\u5f80\u56db\u4e2a\u65b9\u5411\u6269\u6563\uff0c\u5c06\u56db\u7aef\u70b9\u76f8\u8fde\u53ef\u5f97\u5230\u56db\u4e2a\u4e00\u6b21\u51fd\u6570\u3002\n\n\u5f53\u4e24\u70b9\u8fde\u901a\u65f6\uff0c\u8fd9\u4e24\u70b9\u7684\u67d0\u4e00\u6761\u51fd\u6570\u4f1a\u91cd\u5408\uff08\u8fd9\u6761\u51fd\u6570\u53ef\u4f9d\u636e\u4e24\u70b9\u7684\u4f4d\u7f6e\u5173\u7cfb\u5224\u65ad\uff09\u3002\n\n**\u4ee5\u4e0b\u5217\u4e3e\u4e00\u79cd\u60c5\u51b5\uff1a**\n\n![](https://cdn.luogu.com.cn/upload/pic/58908.png )\n\n\u5f53\u4ed6\u4eec\u8fde\u901a\u65f6\u51fd\u6570\uff08A1\uff0cA2\uff09\u4f1a\u4e0e\u51fd\u6570\uff08B4\uff0cB3\uff09\u91cd\u5408\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/58909.png)\n\n\u4f60\u53ef\u4ee5\u8bd5\u8bd5\u4e0d\u4f1a\u6709\u9519\u3002\n\n**\u5217\u4e3e\u56db\u4e2a\u51fd\u6570\uff1a**\n\u8bbeA(a,b)\n\n\u6240\u4ee5A1(a-t,b),A2(a,b-t),A3(a+t,b),A4(a,b+t)\n\n\u51fd\u6570\uff08A1\uff0cA2\uff09=-x+b+a-t\n\n\u51fd\u6570\uff08A2\uff0cA3\uff09=x+b-a-t\n\n\u51fd\u6570\uff08A3\uff0cA4\uff09=-x+b+a+t\n\n\u51fd\u6570\uff08A1\uff0cA4\uff09=x+b-a+t\n\n\u63a5\u4e0b\u6765\u4fbf\u662f\u7528\u6240\u7528\u7684t\u6765\u6392\u5e8f\n\n\u518d\u7528\u5e76\u67e5\u96c6\u6765\u8ba1\u7b97\u5f62\u6210\u8fde\u901a\u5757\u7684\u65f6\u95f4\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4ee3\u7801\u5b9e\u73b0\u4e86\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,x[100],y[100],cnt,father[100],cnt2=1;\nstruct Node{\n\tint t,a,b;\n}wrx[3000];\ninline int v(Node q,Node w){\n\treturn q.t<w.t;\n}\ninline int findd(int x){\n\tif(x!=father[x]){\n\t\tfather[x]=findd(father[x]);\n\t}\n\treturn father[x];\n}\ninline void bcj(){\n\tfor(int i=1;i<=cnt;i++){\n\t\tint q=findd(wrx[i].a),w=findd(wrx[i].b);\n\t\tif(q!=w){\n\t\t\tfather[q]=w;\n\t\t\tcnt2++;\n\t\t\tif(cnt2==n){\t//\u5f53\u6bcf\u4e2a\u70b9\u90fd\u8fde\u901a\u65f6\u8f93\u51fat,\u7ed3\u675f \n\t\t\t\tcout<<wrx[i].t;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)father[i]=i;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>x[i]>>y[i];\n\t}\n\tfor(int i=1;i<=n;i++){\t//\u5173\u952e\u4ee3\u7801 \n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tcnt++;\n//\t\t    \u5224\u65ad\u4f4d\u7f6e\u5173\u7cfb \n\t\t\tif(x[i]==x[j]){\t//\u6b64\u65f6\u662f\u4e24\u4e2a\u7aef\u70b9\u4f1a\u76f8\u9047 \n\t\t\t\twrx[cnt].t=abs(y[i]-y[j])*0.5+0.5;\n\t\t\t}\n\t\t\telse if(y[i]==y[j]){//\u540c\u4e0a \n\t\t\t\twrx[cnt].t=abs(x[i]-x[j])*0.5+0.5;\n\t\t\t}\n\t\t\telse{//\u4f9d\u636e\u4f4d\u7f6e\u5173\u7cfb\u5224\u65ad\u54ea\u4e24\u6761\u51fd\u6570\u4f1a\u91cd\u5408 \n\t\t\t\t//\u81ea\u5df1\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5728\u6b64\u4e0d\u591a\u505a\u89e3\u91ca \n\t\t\t\tif(x[i]>x[j]){\n\t\t\t\t\tif(y[i]>y[j]){\n\t\t\t\t\t\twrx[cnt].t=(x[i]+y[i]-x[j]-y[j])*0.5+0.5;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\twrx[cnt].t=(y[j]-x[j]+x[i]-y[i])*0.5+0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(x[i]<x[j]){\n\t\t\t\t\tif(y[i]>y[j]){\n\t\t\t\t\t\twrx[cnt].t=(x[j]-y[j]-x[i]+y[i])*0.5+0.5;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\twrx[cnt].t=(y[j]-x[i]-y[i]+x[j])*0.5+0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twrx[cnt].a=i;\n\t\t\twrx[cnt].b=j;\n\t\t}\n\t}\n\tsort(wrx+1,wrx+1+cnt,v);\n\tbcj();\n\treturn 0;\t//\u8c22\u8c22\u89c2\u8d4f \n}\n```\n",
        "postTime": 1558092706,
        "uid": 99247,
        "name": "\u5514\u554a\u5514",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u9884\u5904\u7406\u4efb\u610f\u4e24\u521d\u59cb\u5750\u6807\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u82e5t\u79d2\u65f6\u53ef\u4ee5\u6c47\u805a\uff0c\u90a3\u4e48\u8d85\u8fc7t\u79d2\u65f6\u80af\u5b9a\u4e5f\u80fd\u6c47\u805a\uff0c\u56e0\u6b64\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\n\u4e8c\u5206\u7684\u5de6\u8fb9\u754c\u4e3a0\uff0c\u89c2\u5bdf\u5230\u53ef\u80fd\u7684\u6700\u8fdc\u8ddd\u79bb\uff08 0,0 \uff09\u5230\uff081e9 ,1 e9 \uff09\uff0c\u56e0\u6b64 \u4e8c\u5206 \u7684\u53f3\u8fb9 \u7684\u53f3\u8fb9 \u754c\u4e3a\uff08 1e9+1e9  \uff09/2 =1e9\u3002\u6bcf\u6b21\u53d6\u5230\u4e2d\u70b9mid \u540e\uff0c\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u51fa\u53d1\u5c1d\u8bd5\u904d\u5386\u6240\u6709\u70b9 \uff0ca\u80fd\u591f\u5230\u8fbe\u70b9b\u7684\u6761\u4ef6\u4e00\u5b9a\u662fa\u5230b\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc72\u500d\u7684mid\u503c\u3002\u5982\u679c\u80fd\u591f\u6210\u529f\u904d\u5386\u6240\u6709\u70b9\uff0c\u8bf4\u660e\u5f53\u524d mid \u7b26\u5408\u6761\u4ef6\uff0c\u53cd\u4e4b\u5219\u4e0d\u7b26\u5408\u6761\u4ef6\u3002\n\n\u4e0b\u9762\u9644\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\n\nint n,dis[55][55],l,r=1e9,mid;\nint pd[55],q[55],hd,tl;\nstruct node\n{\n    int x,y;\n}p[55];//\u7ed3\u6784\u4f53\u7528\u6765\u5b58\u5750\u6807\nbool check(int mid)//\u5224\u65ad2\u5206\u4e2d\u70b9\n}\n{\n    int cnt=1;\n    memset(pd,0,sizeof(pd));//\u5148\u6e05\u96f6\u6570\u7ec4\n    hd=0,tl=1;\n    q[1]=1;\n    pd[1]=1;\n    while(hd^tl)//\u5229\u7528\u5f02\u6216\u6765\u5224\u65ad\n    {\n        ++hd;\n        for(int i=1;i<=n;++i)\n        {\n            if(pd[i])continue;\n            if(dis[q[hd]][i]<=mid*2)pd[i]=1,q[++tl]=i;\n        }\n    }\n    return tl==n;\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n    scanf(\"%d%d\",&p[i].x,&p[i].y);\n    for(int i=1;i<n;++i)\n    for(int j=i+1;j<=n;++j)\n    dis[i][j]=dis[j][i]=abs(p[i].x-p[j].x)+abs(p[i].y-p[j].y);\n    while(l+1<r)\n    {\n    \tmid=l+r>>1;\n    \tif(check(mid))r=mid;//\u6307\u9488\u5411\u53f3\u79fb\n    \telse l=mid;//\u6307\u9488\u5411\u5de6\u79fb\u52a8\n    }\n    printf(\"%d\",r);\n    return 0; \n}\n```\n\u4ee3\u7801\u5c31\u8fd9\u6837\u4e86\uff0c\u5e0c\u671b\u5927\u5bb6\u559c\u6b22\u3002\u8c22\u8c22Thanks\u266a(\uff65\u03c9\uff65)\uff89\uff0c\u5982\u679c\u6709\u597d\u7684\u65b9\u6cd5\u53ef\u4ee5\u6559\u6559\u849f\u84bb\u3002",
        "postTime": 1572349863,
        "uid": 230323,
        "name": "\u10e6\ufe4f\ufeec\u5317\u2766\u6800",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u8fd9\u9898\u76ee\u521a\u4e00\u5165\u624b\uff0c\u4f1a\u8ba4\u4e3a\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u4e00\u9053\u6a21\u62df\u9898\uff0c\u4f46\u9898\u76ee\u8bfb\u5230\u5b83\u662f\u8981\u6c42\u5728\u6700\u77ed\u7684\u65f6\u95f4\u5185\u8054\u901a\u5c31\u4f1a\u660e\u767d\u8fd9\u662f\u4e00\u9053\u5178\u578b\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u4f46\u662f\u8fd9\u98982\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u6709\u70b9\u96be\u5904\u7406\uff0c\u4f46\u4ed4\u7ec6\u4e00\u60f3\u5c31\u4f1a\u53d1\u73b0\u8ddd\u79bb\u5c31\u662f$(abs(a[i].x-a[j].x)+abs(a[i].y-a[j].y)+1)/2$,\u8fd9\u9898\u5c31\u8f7b\u677e\u89e3\u51b3\u6389\u4e86\u3002\n\nPrim:\n```cpp\n#include<bits/stdc++.h>\n#define maxn 2005\nusing namespace std;\nstruct ZS{\n\tint x,y;\n} a[maxn];\nint n,dis[maxn],g[maxn][maxn],ans;\nbool vis[maxn];\nvoid Prim(){\n\tfor (int i=1;i<=n;i++)\n\tfor (int j=i;j<=n;j++) g[i][j]=g[j][i]=(abs(a[i].x-a[j].x)+abs(a[i].y-a[j].y)+1)/2;\n\tfor (int i=1;i<=n;i++) dis[i]=g[1][i];\n\tvis[1]=1;\n\tfor (int i=1;i<n;i++){\n\t\tint Min=1e9,k;\n\t\tfor (int j=1;j<=n;j++)\n\t\t  if (!vis[j]&&dis[j]<Min) Min=dis[j],k=j;\n\t\tans=max(ans,dis[k]),vis[k]=1;\n\t\tfor (int j=1;j<=n;j++)\n\t\t  if (!vis[j]&&g[k][j]<dis[j]) dis[j]=g[k][j];\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++) scanf(\"%d%d\",&a[i].x,&a[i].y);\n\tPrim();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\nKruskal:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct ZS{\n\tint x,y,w;\n\tbool operator <(const ZS b)const{return w<b.w;}\n}a[4000005];\nint n,len,ans;\nint fa[4000005];\nint b[2][2005];\nint getfa(int x){\n\tint y=x;\n\tif(x!=fa[x])x=getfa(fa[x]);\n\treturn fa[y]=x;\n}\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n\twhile(isdigit(ch)){ret=ret*10+ch-'0';ch=getchar();}\n\treturn ret*f;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){b[0][i]=read();b[1][i]=read();}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=i+1;j<=n;j++)a[++len]=(ZS){i,j,((abs(b[0][i]-b[0][j])+abs(b[1][i]-b[1][j]))+1)/2};\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tsort(a+1,a+1+len);\n\tfor(int i=1;i<=len;i++){\n\t\tint fx=getfa(a[i].x),fy=getfa(a[i].y);\n\t\tif(fx!=fy)fa[fx]=fy,ans=a[i].w;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u6362\u4e2a\u89d2\u5ea6\u601d\u8003\uff0c\u8fd9\u9053\u9898\u662f\u8981\u6c42\u6700\u77ed\u65f6\u95f4\u5185\u8054\u901a\uff0c\u6700\u5927\u503c\u4e2d\u6c42\u6700\u5c0f\uff0c\u5178\u578b\u7684\u4e8c\u5206\u6765\u679a\u4e3e\u7ed3\u675f\u7684\u65f6\u523b\uff0c\u4e5f\u53ef\u4ee5$n(logn)$\u89e3\u4e0b\u6765\uff0c\u4ee3\u7801\u5c31\u4e0d\u914d\u4e86\u3002\n\n\u849f\u84bb\u7684\u7b2c3\u7bc7\u9898\u89e3\uff0c\u6c42\u8fc7\u3002",
        "postTime": 1595934752,
        "uid": 188879,
        "name": "VioletIsMyLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u4e8c\u5206\u7b54\u6848\u7684\u9898\uff0c\u663e\u800c\u6613\u89c1\uff0c\u4e8c\u5206\u65f6\u95f4\uff0c\u4f46\u662f\u6211\u4eec\u600e\u4e48\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff1f\n\n\u9996\u5148\uff0c\u8fd9\u4e9b\u70b9\u5448\u83f1\u5f62\u6269\u6563\uff0c\u90a3\u4e48\u5982\u679c\u4e24\u70b9\u57282t\u4e2a\u5355\u4f4d\u65f6\u95f4\u80fd\u76f8\u9047\uff0c\u90a3\u4e48\u4e24\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb < t\n\n\u7b2c\u4e8c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad\u4e24\u70b9\u662f\u5426\u8054\u901a\n\n```cpp\n\n#include <cstdio>\n#include <cmath>\nstruct node {\n\tint x , y;\n}a[1005];\nint f[1005];\nint n;\nbool c(int x , int y , int z) {return ((fabs(a[x].x - a[y].x)+ fabs(a[x].y - a[y].y)) <= z);}\nint getf(int v) {return v == f[v]?f[v]:f[v] = getf(f[v]);}\nbool check(int x) {\n\tint cnt = 0;\n\tfor (int i = 1; i <= n; ++i) f[i] = i;\n\tfor (int i = 1; i <= n; ++i) for (int j = i + 1; j <= n; ++j) if(c(i , j , x * 2) && getf(j) != getf(i)) f[getf(j)] = getf(i);\n\tfor (int i = 1; i <= n; ++i) if(f[i] == i) cnt ++;\n\treturn (cnt == 1);\n}\nint main() {\n\t\n\tscanf(\"%d\" , &n);\n\tfor (int i = 1; i <= n; ++i) scanf(\"%d %d\" , &a[i].x , &a[i].y);\n\tint l = 0 , r = 1e9 , ans = 0; // \u4e8c\u5206\u65f6\u95f4\uff0c\u57281e9\u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u4e00\u5b9a\u80fd\u76f8\u9047\n\twhile(l <= r) {\n\t\tint mid = (l + r) / 2;\n\t\tif(check(mid)) ans = mid , r = mid - 1; // \u5982\u679c\u5728mid\u4e2a\u5355\u4f4d\u65f6\u95f4\u80fd\u76f8\u9047\u5219\u79fb\u52a8\u53f3\u8fb9\u754c\uff0c\u8bb0\u5f55\u7b54\u6848\uff0c\u5bfb\u627e\u66f4\u4f18\u7b54\u6848\n\t\telse l = mid + 1;// \u5426\u5219\u8bc1\u660e\u65f6\u95f4\u5c0f\u4e86\uff0c\u5bfb\u627e\u7b54\u6848\n\t}\n\tprintf(\"%d\" ,ans);\n\treturn 0;\n}\n```",
        "postTime": 1563709713,
        "uid": 171554,
        "name": "Reanap",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "## NO1 \u5173\u4e8e\u601d\u8def\n\n\u9c81\u8fc5\u66fe\u7ecf\u8bf4\u8fc7\uff1a\u201c\u5728\u5f88\u591a\u9898\u91cc\u9762\uff0c\u56fe\u662f\u9690\u6027\u7684\u3002\u201d\n\n\u8fd9\u9053\u9898\u9a8c\u8bc1\u4e86~~\u9c81\u8fc5\u5148\u751f\u7684\u8bf4\u6cd5~~\uff0c\u5176\u5b9e\u4e5f\u4e0d\u662f\u9690\u6027\u56fe\u5566...\uff08\u6ca1\u6709\u8bef\u5bfc\u4eba\u7684\u610f\u601d\uff09\n\n\u8fd9\u9053\u9898\u662f\u540c\u673a\u623f\u4e00[\u9000\u5f79\u7701\u961f\u7237](https://www.luogu.org/space/show?uid=36465)\u5728\u73ed\u8f66\u4e0a\u7ed9\u7684\u601d\u8def\n\n\u5f53\u6211\u770b\u5230\u9898\u89e3\u6709\u4e00\u70b9\u649e\u6709\u4e00\u4e22\u4e22\u4f24\u5fc3\u5462\n\n**\u201c\u770b\u5230\u8fd9\u6837\u7684\u9898\u76ee\u5c31\u60f3\u5199\u6a21\u62df\u5417\uff1f\u201d\u4ed6\u95ee\u9053\u201c\u4f60\u9519\u4e86\u3002\u201d**\n\n\u663e\u7136\uff0c\u4e00\u70b9\u4e00\u70b9\u7684\u53bb\u63a8\u80af\u5b9a\u662f\u8981\u8d85\u65f6\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u5efa\u56fe\n\n\u770b\u5230\u8054\u901a\u5757\uff0c\u5927\u5bb6\u90fd\u4f1a\u60f3\u5230\u6700\u5c0f\u751f\u6210\u6811\u5427\uff0c\u4f46\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u600e\u4e48\u6837\u624d\u80fd\u5229\u7528\u6211\u4eec\u53ef\u7231\u7684\u6700\u5c0f\u751f\u6210\u6811\u5462\uff1f\u9996\u5148\u6211\u4eec\u4f1a\u77e5\u9053\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u8f93\u5165\u800c\u5f97\u5230\u82e5\u5e72\u4e2a\u70b9\uff0c\u5982\u679c\u628a\u4ed6\u4eec\u5168\u90e8\u7528\u8fb9\u8fde\u8d77\u6765\uff0c\u83b7\u5f97\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u518d\u8dd1\u4e00\u4e0b\u6700\u5c0f\u751f\u6210\u6811\uff0c\u770b\u770b\u8fde\u4e0a\u7684\u65f6\u5019\u4e00\u5171\u7528\u4e86\u591a\u5c11\u4e2a\u5355\u4f4d\u7684\u65f6\u95f4\u5c31\u597d\u4e86\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u6211\u4eec\u600e\u4e48\u6837\u5f97\u5230\u65f6\u95f4\u3002\u663e\u7136\u6b64\u56fe\u6709\u5f88\u591a\u6761\u8fb9\uff0c\u4f46\u662f\u662f\u6bcf\u4e00\u4e2a\u70b9\u540c\u65f6\u5411\u5916\u6269\u5c55\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6700\u957f\u7684\u8fb9\uff0c\u5176\u957f\u5ea6\u4e5f\u5c31\u662f\u6211\u4eec\u8fde\u5b8c\u6240\u6709\u8fb9\u6240\u7528\u6389\u7684\u65f6\u95f4\u4e86\u3002\n\n\u6211\u4eec\u5148\u5f97\u5230\u5927\u4f53\u7684\u601d\u8def\n\n**\u8f93\u5165 -> \u5efa\u56fe -> \u8dd1\u6700\u5c0f\u751f\u6210\u6811\u6c42\u6700\u957f\u8fb9 -> \u8f93\u51fa\u7b54\u6848**\n\n## NO2 \u5173\u4e8e\u4ee3\u7801\n\n**1\u8f93\u5165**\n\n```cpp\nn = read ();\nfor (int i = 1; i <= n; i ++) x[i] = read (), y[i] = read ();\n```\n**2\u5efa\u56fe**\n\n```cpp\nvoid This_is_for_you ()\n{\n\tfor (int i = 1; i <= n; i ++)\n\t  for (int j = 1; j < i; j ++)\n\t\t{\n\t\t\tif (i == j) continue;//\u5982\u679c\u4e24\u70b9\u662f\u4e00\u4e2a\u70b9\u5c31\u76f4\u63a5continue\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge[++ cnt].q = i;\n\t\t\t\tedge[cnt].z = j;\n\t\t\t\tint heng = abs (x[i] - x[j]);//heng\u5411\u8ddd\u79bb\n\t\t\t\tint zong = abs (y[i] - y[j]);//zong\u5411\u8ddd\u79bb\n\t\t\t\tif ( (heng + zong) % 2 == 0) edge[cnt].v = heng + zong >> 1;\n\t\t\t\telse edge[cnt].v = (heng + zong >> 1) + 1;\n\t\t\t}\n\t\t}\n}\n```\n**3\u6700\u5c0f\u751f\u6210\u6811**\n\n```cpp\nvoid So_go_and_do_it ()\n{\n\tint num = 0;//\u8fde\u597d\u7684\u8fb9\u7684\u6570\u76ee\n\tfor (int i = 1; i <= cnt; i ++)//\u6240\u6709\u7684\u8fb9\n\t{\n\t\tint p1 = edge[i].q; int p2 = edge[i].z;\n\t\tint f1 = find (p1); int f2 = find (p2);//\u627e\u7238\u7238\n\t\tif (f1 == f2) continue;//\u5982\u679c\u76f8\u7b49\u76f4\u63a5continue\n\t\tf[f1] = f2;\n\t\tans = max (ans, edge[i].v);//\u627e\u51fa\u6700\u957f\u7684\u8fb9\u4f5c\u4e3aans\n\t\tnum ++;//\n\t\tif (num == n - 1) return ; //\u5982\u679c\u8fb9\u7684\u6570\u76ee\u7b49\u4e8e\u70b9\u7684\u6570\u76ee + 1\u90a3\u4e48\u5c31\u662f\u8fde\u5b8c\u8fb9\u4e86\n\t}\n}\n```\n### \u653e\u4e00\u4e0b\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n\n#define WA AC\n#define TLE AC\n#define MLE AC\n#define RE AC\n#define CE AC\n#define maxn 55\n\nusing namespace std;\n\ninline int read ()\n{\n    int f = 1, x = 0;\n    char ch;\n    do {ch = getchar (); if (ch== '-') f = -1;} while (ch < '0' || ch > '9');\n    do {x = x * 10 + ch - '0'; ch = getchar ();} while (ch >= '0' && ch <= '9');\n    return f * x;\n}\n\nstruct node\n{\n\tint q, z, v; \n} edge[23333];\n\nint n;\nint a, b;\nint cnt;\nint f[maxn];\nint x[maxn], y[maxn];\nint ans;\n\nvoid This_is_for_you ()\n{\n\tfor (int i = 1; i <= n; i ++)\n\t  for (int j = 1; j < i; j ++)\n\t\t{\n\t\t\tif (i == j) continue;\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge[++ cnt].q = i;\n\t\t\t\tedge[cnt].z = j;\n\t\t\t\tint heng = abs (x[i] - x[j]);\n\t\t\t\tint zong = abs (y[i] - y[j]);\n\t\t\t\tif ( (heng + zong) % 2 == 0) edge[cnt].v = heng + zong >> 1;\n\t\t\t\telse edge[cnt].v = (heng + zong >> 1) + 1;\n\t\t\t}\n\t\t}\n}\n\nbool cmp (node a, node b)\n{\n\treturn a.v < b.v;\n}\n\nint find (int x)\n{\n\tif (x == f[x]) return x;\n\treturn f[x] = find (f[x]);\n}\n\nvoid So_go_and_do_it ()\n{\n\tint num = 0;\n\tfor (int i = 1; i <= cnt; i ++)\n\t{\n\t\tint p1 = edge[i].q; int p2 = edge[i].z;\n\t\tint f1 = find (p1); int f2 = find (p2);\n\t\tif (f1 == f2) continue;\n\t\tf[f1] = f2;\n\t\tans = max (ans, edge[i].v);\n\t\tnum ++;\n\t\tif (num == n - 1) return ; \n\t}\n}\n\nint main ()\n{\n\tn = read ();\n\tfor (int i = 1; i <= n; i ++) x[i] = read (), y[i] = read ();\n\tThis_is_for_you ();\n\tfor (int i = 1; i <= n; i ++) f[i] = i;\n\tsort (edge + 1, edge + cnt + 1, cmp);\n\tSo_go_and_do_it ();\n\tprintf (\"%d\", ans);\n\treturn 0;\n}\n```\n\n\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u9898\u7684\u601d\u8def\u4e0d\u662f\u5f88\u597d\u50cf\uff0c\u56e0\u6b64\u8bc4\u4e86\u4e2a\u7eff\u9898\n\n",
        "postTime": 1551950941,
        "uid": 136006,
        "name": "s_Shot\u10e6Maki",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cc\u8c8c\u4f3c\u6ca1\u6709\u7528\u6700\u77ed\u8def\u7684\u505a\u6cd5\u505a\u7684\uff0c\u8fd9\u91cc\u849f\u84bb\u5c31\u63d0\u4f9b\u4e00\u4efd\u7528floyd\u505a\u7684\u9898\u89e3\uff0c\u601d\u8def\u57fa\u672c\u76f8\u540c\uff0c\u5148\u6c42\u6bcf\u4e24\u70b9\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u7136\u540efloyd\u677e\u5f1b\uff0c\u8fd8\u662f\u76f4\u63a5\u770b\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nll n,f[55][55],ans;\nstruct Point{\n  ll x,y;\n}p[55];\ninline ll read()\n{\n  char ch=getchar();ll num=0;bool flag=false;\n  while(ch<'0'||ch>'9'){if(ch=='-')flag=true;ch=getchar();}\n  while(ch>='0'&&ch<='9'){num=num*10+ch-'0';ch=getchar();}\n  return flag?-num:num;\n}\nvoid ready()\n{\n  n=read();\n  for(int i=1;i<=n;i++)\n    {p[i].x=read();p[i].y=read();}\n}\ninline ll Abs(int x)\n{return x>=0?x:-x;}\ninline ll getman(int i,int j)\n{\n  ll ka=Abs(p[i].x-p[j].x);\n  ll lu=Abs(p[i].y-p[j].y);\n  return (ka+lu);\n}\nvoid work()\n{\n  for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n      if(i!=j)f[i][j]=(getman(i,j)+1)/2;\n  for(int k=1;k<=n;k++)\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n    if(i!=j&&j!=k&&i!=k)\n      f[i][j]=min(f[i][j],max(f[i][k],f[k][j]));\n  for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n      if(i!=j)ans=max(ans,f[i][j]);\n  cout<<ans<<endl;\n}\nint main()\n{\n  ready();work();return 0;\n}\n\n```",
        "postTime": 1510120406,
        "uid": 49058,
        "name": "HolseLee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "# \u300a\u6269\u6563\u300b \u9898\u89e3\n\n\u9898\u76ee\uff1aloj10015 / luogu1661\n\n\u53ef\u4ee5\u5c06\u7b97\u6cd5\u6d41\u7a0b\u5206\u4e3a2\u90e8\u5206\uff1a  \n1. \u8ba1\u7b97\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5efa\u56fe\n2. \u5bf9\u56fe\u8fdb\u884c\u5904\u7406\n\n## 1.\u8ba1\u7b97\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n\u53ef\u4ee5\u4ee4\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684[\u66fc\u54c8\u987f\u8ddd\u79bb](https://baike.baidu.com/item/%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB/743092)$x$\uff0c\u5219\u4e24\u70b9\u91cd\u5408\u9700\u8981$\\lceil x / 2 \\rceil$\uff0c\u4ee3\u7801\u5199\u6210\uff1a\n\n```cpp\n(x + 1) / 2\n```\n\n\u539f\u56e0\uff1a\n> \u70b9A\u548c\u70b9B\u8981\u60f3\u91cd\u5408\uff0cA\u5c3d\u91cf\u8981\u5f80B\u9760\uff0c\u540c\u65f6B\u5c3d\u91cf\u8981\u5f80A\u9760\uff0c\u4e24\u8005\u4f1a\u6d88\u8017\u4e24\u4e2a\u66fc\u54c8\u987f\u8ddd\u79bb\n\n\u4ee5\u4e24\u70b9\u4e4b\u95f4\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a\u8def\u5f84\u957f\u5ea6\uff0c\u4efb\u610f\u4e24\u70b9\u8fde\u8fb9\u5efa\u56fe\n\n## 2.\u5bf9\u56fe\u8fdb\u884c\u5904\u7406\n\n\u4ecb\u7ecd\u4e09\u79cd\u65b9\u6cd5\uff1a\n\n### 1.\u4e8c\u5206\u7b54\u6848+\u5e76\u67e5\u96c6\n\u4e8c\u5206\u679a\u4e3e\u7b54\u6848\uff0c\u82e5\u4e24\u70b9\u4e4b\u95f4\u91cd\u5408\u9700\u8981\u65f6\u95f4\u5c0f\u4e8e\u679a\u4e3e\u7684\u7b54\u6848\u65f6\uff0c\u5e76\u67e5\u96c6\u8fde\u8fb9\u3002\u6700\u540e\u56fe\u662f\u5426\u8fde\u901a\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 60;\n\nstruct Edge{\n    int u, v, w;\n    Edge(int u = 0, int v = 0, int w = 0): u(u), v(v), w(w){}\n} G[MAXN * MAXN];\n\nstruct Node{\n    int x, y;\n    Node(int x = 0, int y = 0): x(x), y(y){}\n} a[MAXN];\n\nint n;\nint cnt = 0;\nint fa[MAXN];\n\ninline int read(){\n    int x = 0,f = 1, c = getchar();\n    while(!isdigit(c)) f = (c == '-' ? -f : f), c = getchar();\n    while(isdigit(c)) x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n\nint Find(int x){\n    return x == fa[x] ? x : fa[x] = Find(fa[x]);\n}\n\ninline void Merge(int x, int y){\n    int fx = Find(x), fy = Find(y);\n    fa[fx] = fa[fy];\n}\n\ninline bool check(int x){\n    for(register int i = 1; i <= n; ++i) fa[i] = i;\n    for(register int i = 1; i <= cnt; ++i){\n        if(G[i].w <= x * 2) Merge(G[i].u, G[i].v);\n    }\n    int p = Find(1);\n    for(register int i = 2; i <= n; ++i){\n        if(Find(i) != p) return false;\n    }\n    return true;\n}\n\nint main(){\n    n = read();\n    for(register int i = 1; i <= n; ++i)\n        a[i].x = read(), a[i].y = read();\n    for(register int i = 1; i <= n; ++i){\n        for(register int j = 1; j <= n; ++j)\n            if(i != j)\n                G[++cnt] = Edge(i, j, abs(a[i].x - a[j].x) + abs(a[i].y - a[j].y));\n    }\n    int l = 0, r = 2e9, ans;\n    while(l <= r){\n        int mid = l + r >> 1;\n        if(check(mid)) ans = mid, r = mid - 1;\n        else l = mid + 1;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n### 2.\u6700\u5c0f\u751f\u6210\u6811\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u8fd9\u6837\u5efa\u56fe\uff0c\u90a3\u4e48\u7b54\u6848\u5176\u5b9e\u662f\u6c42\u6700\u5c0f\u74f6\u9888\u751f\u6210\u6811\u7684\u74f6\u9888\u3002\u7531\u4e8e[\u6700\u5c0f\u751f\u6210\u6811\u662f\u6700\u5c0f\u74f6\u9888\u751f\u6210\u6811](https://baike.baidu.com/item/%E7%93%B6%E9%A2%88%E7%94%9F%E6%88%90%E6%A0%91/2397900)\uff0c\u6240\u4ee5\u53ea\u8981\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u7684\u8fb9\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 60;\n\nstruct Edge{\n    int u, v, w;\n    Edge(int u = 0, int v = 0, int w = 0): u(u), v(v), w(w){}\n    friend bool operator < (const Edge &x, const Edge &y){\n        return x.w < y.w;\n    }\n} G[MAXN * MAXN];\n\nstruct Node{\n    int x, y;\n    Node(int x = 0, int y = 0): x(x), y(y){}\n} a[MAXN];\n\nint n;\nint cnt = 0;\nint fa[MAXN];\n\ninline int read(){\n    int x = 0,f = 1, c = getchar();\n    while(!isdigit(c)) f = (c == '-' ? -f : f), c = getchar();\n    while(isdigit(c)) x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n\nint Find(int x){\n    return x == fa[x] ? x : fa[x] = Find(fa[x]);\n}\n\ninline void Merge(int x, int y){\n    int fx = Find(x), fy = Find(y);\n    fa[fx] = fa[fy];\n}\n\ninline void solve(){\n    for(register int i = 1; i <= n; ++i) fa[i] = i;\n    int t = 0;\n    for(register int i = 1; i <= cnt; ++i){\n        Edge &edge = G[i];\n        if(Find(edge.u) == Find(edge.v)) continue;\n        Merge(edge.u, edge.v);\n        if(++t == n - 1){printf(\"%d\\n\", (edge.w + 1) / 2); exit(0);}\n    }\n}\n\nint main(){\n    n = read();\n    for(register int i = 1; i <= n; ++i)\n        a[i].x = read(), a[i].y = read();\n    for(register int i = 1; i <= n; ++i){\n        for(register int j = 1; j <= n; ++j)\n            if(i != j)\n                G[++cnt] = Edge(i, j, abs(a[i].x - a[j].x) + abs(a[i].y - a[j].y));\n    }\n    sort(G + 1, G + cnt + 1);\n    solve();\n    return 0;\n}\n```\n\n### 3. floyd\n\u8fd9\u4e00\u9898\u7684\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528floyd\u7b97\u6cd5\u3002  \n\u6b64\u9898\u662ffloyd\u7b97\u6cd5\u7684\u53d8\u5f62\u3002\n\nfloyd\u7b97\u6cd5\u6a21\u677f\uff1a\n```cpp\nfor(register int k = 1; k <= n; ++k)\n    for(register int i = 1; i <= n; ++i)\n        for(register int j = 1; j <= n; ++j)\n            if(i != j && i != k && j != k)\n                G[i][j] = min(G[i][j], G[i][k] + G[k][j]);\n```\n\n\u6b64\u9898\u7684floyd\u7b97\u6cd5\uff1a\n```cpp\n    for(register int k = 1; k <= n; ++k)\n        for(register int i = 1; i <= n; ++i)\n            for(register int j = 1; j <= n; ++j)\n                if(i != j && i != k && j != k)\n                    G[i][j] = min(G[i][j], max(G[i][k], G[k][j]));\n```\n\n\u539f\u56e0\uff1a\n> floyd\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662fdp\uff0c\u82e5\u70b9i\u5230\u70b9j\u901a\u8fc7\u70b9k\uff0c\u90a3\u4e48\u70b9i\u5230\u70b9j\u7684\u8ddd\u79bb\u5c31\u662f\u70b9i\u5230\u70b9k\u7684\u8ddd\u79bb\u52a0\u4e0a\u70b9k\u5230\u70b9j\u7684\u8ddd\u79bb\u3002\u7136\u800c\u7531\u4e8e\u6b64\u9898\u7279\u6b8a\uff0c\u8981\u6c42\u4e24\u70b9\u8fde\u901a\uff0c\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4f1a\u540c\u65f6\u7f29\u5c0f\uff0c\u6240\u4ee5\u662f\u53d6\u6700\u5927\u503c\u3002\n\n\u6700\u540e\u53ea\u9700\u8981\u627e\u5230\u4e24\u70b9\u8fde\u901a\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 60;\n\npair<int, int> dot[MAXN];\nint n;\nint G[MAXN][MAXN];\n\ninline int read(){\n    int x = 0,f = 1, c = getchar();\n    while(!isdigit(c)) f = (c == '-' ? -f : f), c = getchar();\n    while(isdigit(c)) x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n\nint main(){\n    int n = read();\n    for(register int i = 1; i <= n; ++i){\n        int x = read(), y = read();\n        dot[i] = make_pair(x, y);\n    }\n    for(register int i = 1; i <= n; ++i)\n        for(register int j = i + 1; j <= n; ++j)\n            G[i][j] = G[j][i] = abs(dot[i].first - dot[j].first) + abs(dot[i].second - dot[j].second);\n    for(register int k = 1; k <= n; ++k)\n        for(register int i = 1; i <= n; ++i)\n            for(register int j = 1; j <= n; ++j)\n                if(i != j && i != k && j != k)\n                    G[i][j] = min(G[i][j], max(G[i][k], G[k][j]));\n    int ans = 0;\n    for(register int i = 1; i <= n; ++i)\n        for(register int j = 1; j <= n; ++j)\n            if(i != j) ans = max(ans, G[i][j]);\n    printf(\"%d\\n\", (ans + 1) / 2);\n    return 0;\n}\n```\n\u8fd9\u79cd\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u5bf9\u8f83\u9ad8\uff0c\u4f46\u662f\u4f9d\u7136\u503c\u5f97\u5b66\u4e60\u3002",
        "postTime": 1589622767,
        "uid": 84626,
        "name": "sss7020",
        "ccfLevel": 0,
        "title": "P1661 \u9898\u89e3"
    },
    {
        "content": "\u601d\u8def\uff1a\n## \u4efb\u610f\u4e24\u70b9\u7684\u8ddd\u79bb\u4e3a\u4e24\u70b9\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\n\u5047\u8bbe\u4efb\u610f\u4e24\u70b9\u95f4\u6709\u8fb9\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u6c42\u6240\u6709\u70b9\u6784\u6210\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e2d**\u6700\u957f\u7684\u8fb9+1 \u518d\u9664\u4ee5 2\uff0c** \u56e0\u6b64 **\u5229\u7528 Kruskal** \u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\uff0c\u627e\u5230\u5176\u4e2d\u6700\u957f\u8fb9\u5373\u53ef\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define LL long long\nconst int MOD = 1E9+7;\nconst int N = 1000000+5;\nusing namespace std;\nstruct Edge{\n    int x,y;\n    int dis;\n    Edge(){}\n    Edge(int x,int y,int dis):x(x),y(y),dis(dis){}\n    bool operator < (const Edge &rhs)const{\n        return dis<rhs.dis;\n    }\n}edge[N];\nstruct Node{\n    int x,y;\n    Node(){}\n    Node(int x,int y):x(x),y(y){}\n}node[N];\nint tot;\nint father[N];\nint getDis(int i,int j){\n    return abs(node[i].x-node[j].x)+abs(node[i].y-node[j].y);\n}\nint Find(int x){\n    return father[x]==x?x:father[x]=Find(father[x]);\n}\nint Kruskal(int n){\n    for(int i=1;i<=n;i++)\n        father[i]=i;\n    int num=0;\n    int res=-INF;\n    for(int i=1;i<=tot;i++){\n        int x=edge[i].x;\n        int y=edge[i].y;\n        x=Find(x);\n        y=Find(y);\n        if(x!=y){\n            res=max(res,edge[i].dis);\n            num++;\n            father[x]=y;\n        }\n        if(num==n)\n            break;\n    }\n    return res;\n}\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&node[i].x,&node[i].y);\n \n    for(int i=1;i<n;i++){\n        for(int j=i+1;j<=n;j++){\n            edge[++tot].x=i;\n            edge[tot].y=j;\n            edge[tot].dis=getDis(i,j);\n        }\n    }\n    sort(edge+1,edge+1+tot);\n    int res=Kruskal(n);\n    printf(\"%d\\n\",(res+1)/2);\n    return 0;\n}",
        "postTime": 1570020894,
        "uid": 126633,
        "name": "liyichun001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "P1661 \u6269\u6563\uff1a[https://www.luogu.org/problemnew/show/P1661](https://www.luogu.org/problemnew/show/P1661)\n\n\u9898\u76ee\u5f88\u5bb9\u6613\u8ba9\u4eba\u8054\u60f3\u5230[P1111 \u4fee\u590d\u516c\u8def](https://www.luogu.org/problemnew/show/P1111)\uff0c\u8fd9\u662f\u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u7684\u6c34\u9898\u3002\n\u548cP1111\u7684\u533a\u522b \u53ea\u662f \u591a\u5bf9\u8f93\u5165\u6570\u636e\u5904\u7406\u4e00\u4e0b\u3002\n\n\n\u5bf9\u4e8e\u8f93\u5165\u7684\u70b9\uff0c\u6211\u4eec\u6c42\u51fa\u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bbs\uff0c\u4e3a\u201c\u4e00\u4e2a\u70b9\u6bcf\u8fc7\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u5c31\u4f1a\u5411\u56db\u4e2a\u65b9\u5411\u6269\u6563\u4e00\u4e2a\u8ddd\u79bb\u201d\uff0c\u6240\u4ee5\u7528\u7684\u65f6\u95f4\u5c31\u662f(s+1)/2\uff0c\u7528Kruskal\u7b97\u6cd5\u6c42\u6700\u5c0f\u751f\u6210\u6811\u5c31\u884c\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define N 51\n\nint n;\nint x[N],y[N],father[N],top=0,maxn;\n\nstruct d{\n\tint x,y,co;\n\tbool operator < (const d x) const\n\t{\n\t\treturn co < x.co;\n\t}\n}qwq[N*N];//\u5b58\u8fb9\n\n\nint wyh(int xx,int yy)\n{\n\treturn abs(x[xx]-x[yy])+abs(y[xx]-y[yy]);//\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb \n}\n\n\n\nint find(int x)\n{\n\tif(father[x]!=x)\n\t{\n\t\tfather[x]=find(father[x]);//\u8def\u5f84\u538b\u7f29 \n\t}\n\treturn father[x];\n}\nvoid join(int x,int y)\n{\n\tint fx=find(x),fy=find(y);\n\tfather[fx]=fy;\n\treturn ;\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>x[i]>>y[i];\n\t\tfather[i]=i;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int o=i+1;o<=n;o++)\n\t\t{\n\t\t\ttop++;\n\t\t\tqwq[top].x=i;\n\t\t\tqwq[top].y=o;\n\t\t\tqwq[top].co=wyh(i,o);\n\t\t}\n\t}\n\tsort(qwq+1,qwq+top+1);\n\tfor(int i=1,o=1;i<=top,o<=n-1;i++)\n\t{\n\t\tint u=qwq[i].x,v=qwq[i].y,co=qwq[i].co;\n\t\tif(find(u)!=find(v))\n\t\t{\n\t\t\to++;\n\t\t\tjoin(u,v);\n\t\t\tmaxn=co;\n\t\t}\n\t}\n\tcout<<(maxn+1)/2;//\u6211\u4eecmaxn\u6c42\u7684\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u8fb9\u7684\u957f\u5ea6s\uff0c\u65f6\u95f4\u5219\u4e3a\uff08s+1\uff09/2\uff1b \n}\n```\n",
        "postTime": 1563062037,
        "uid": 104319,
        "name": "Why_not_use_longlong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u6570\u636e\u5f88\u5f31\uff0c\u53c8\u56e0\u4e3a\u6211\u6bd4\u8f83\u61d2\uff0c\u5c31\u5199\u4e86\u4e2a$\\mathcal{O(n^3)}$\u7684$\\text{floyed}$\uff0c\u867d\u7136\u6bd4\u4e8c\u5206\u7b54\u6848\u548c\u6700\u5c0f\u751f\u6210\u6811\u6162\uff0c\u4f46\u4e5f\u662f\u53ef\u4ee5\u8f7b\u677eAC\u7684\n\n------------\n\n### \u5148\u8d34\u4e0aAC\u4ee3\u7801\uff1a\n\n```\nvar\n\tx,y:array[0..60] of longint;\n\ts:array[0..60,0..60] of int64;\n\tn,i,j,k,max,t:longint;\nfunction sum(a,b:longint):int64;\nbegin\n\tsum:=abs(x[a]-x[b])+abs(y[a]-y[b]);\nend;\nbegin\n\treadln(n);\n\tfor i:=1 to n do read(x[i],y[i]);\n\tfor i:=1 to n do\n\t\tfor j:=1 to n do s[i,j]:=(sum(i,j)+1) div 2; \n\tfor k:=1 to n do\n\t\tfor i:=1 to n do\n\t\t\tfor j:=1 to n do\n\t\t\t\tif (i<>j) and (j<>k) and (i<>k) then\n\t\t\t\tbegin\n\t\t\t\t\tif s[i,k]>s[k,j] then t:=s[i,k] else t:=s[k,j];\n\t\t\t\t\tif t<s[i,j] then s[i,j]:=t;\n\t\t\t\tend;\n\tmax:=0;\n\tfor i:=1 to n do\n\t\tfor j:=1 to n do\n\t\t\tif s[i,j]>max then max:=s[i,j];\n\twriteln(max);\nend.\n```\n\n--------\n\n### \u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n1. $\\text{sum}$\u51fd\u6570\u8ba1\u7b97\u7684\u662f\u4e24\u70b9\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\n\t\n    \u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\uff1a\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\uff0c\u8bbe\u4e24\u70b9\u5750\u6807\u5206\u522b\u4e3a$(x_a,y_a)$\u548c$(x_b,y_b)$\uff0c\u90a3\u4e48\u8fd9\u4e24\u70b9\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u5c31\u662f$|x_a-x_b|+|y_a-y_b|$\u3002\n    \n    \u5176\u5b9e\u505a\u8fd9\u9053\u9898\u5e76\u4e0d\u9700\u8981\u4e86\u89e3\u5173\u4e8e\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u77e5\u8bc6\uff0c\u53ea\u8981\u6ce8\u610f\u5230**\u4e24\u70b9\u4e4b\u95f4\u6309\u76f4\u7ebf\u6269\u6563\u7684\u65b9\u5f0f\u7f29\u77ed\u8ddd\u79bb**\uff0c\u5c31\u53ef\u4ee5\u7406\u89e3\u8fd9\u4e00\u70b9\u4e86\u3002\n\n2. \u4e3a\u4ec0\u4e48\u5f00$\\text{int64(long long)}$ \uff1f\n\n\t\u9898\u76ee\u8bf4$1 \\leq x_i,y_i \\leq 10^9$\uff0c\u6240\u4ee5\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u6700\u5927\u53ef\u4ee5\u5230\u7ea6$\\text{2e9}$\uff0c\u8ba1\u7b97\u6700\u77ed\u8def\u65f6\uff0c\u4e24\u70b9\u8ddd\u79bb\u76f8\u52a0\u5c31\u53ef\u4ee5\u7206$\\text{longint(int)}$\u4e86\u3002\n    \n    \u6709\u6ca1\u6709\u8fd9\u6837\u7684\u6570\u636e\u5462\uff1f\u6211\u4e0d\u77e5\u9053qwq\n\n3.  $\\text{(sum(i,j)+1) div 2}$\u8868\u793a\u4ec0\u4e48\uff1f\uff08$\\text{Pascal}$\u4e2d\u7684$\\text{div}$\u540c$\\text{C++}$\u4e2d\u7684\u6574\u9664\uff09\n\n\t\u5f88\u5bb9\u6613\u770b\u51fa\uff0c\u4e24\u70b9\u95f4\u8ddd\u79bb\u7684\u51cf\u5c11\u901f\u5ea6\u662f\u70b9\u6269\u6563\u901f\u5ea6\u7684**2\u500d**\uff08\u56e0\u4e3a\u4e24\u4e2a\u70b9\u90fd\u5728\u6269\u6563\uff09\uff0c\u90a3\u4e48\u6b64\u5904\u672c\u6765\u5e94\u8be5\u5199\u6210\u8fd9\u6837\uff1a\n    \n    ```\n    \t// \u8fd9\u4e2a\u662f\u4f2a\u4ee3\u7801\n        if (sum(i,j)\u4e3a\u5947\u6570) \n        \t\u4e24\u70b9\u95f4\u8ddd\u79bb\u4e3asum(i,j)/2+1;\n        else\n        \t\u4e24\u70b9\u95f4\u8ddd\u79bb\u4e3asum(i,j)/2;\n        // '/'\u8868\u793a\u6574\u9664\n    ```\n    \n    \u8ba9$\\text{sum(i,j)}$\u5206\u522b\u53d6\u5947\u6570\u548c\u5076\u6570\uff0c\u5206\u522b\u4ee3\u5165$\\text{(sum(i,j)+1) div 2}$\u548c\u4f2a\u4ee3\u7801\uff0c\u5c31\u4f1a\u53d1\u73b0\u5b83\u4eec\u662f\u7b49\u4ef7\u7684\u3002\u6240\u4ee5\u8fd9\u5904\u4ee3\u7801\u6ca1\u6709\u95ee\u9898\u3002\n    \n4. \u4f3c\u4e4e\u548c\u666e\u901a\u7684$\\text{floyed}$\u4e0d\u592a\u4e00\u6837\uff1f\n\n\t\u56e0\u9898\u800c\u5f02\uff1a\u4e2d\u8f6c\u70b9$\\text{k}$\u5728**\u540c\u65f6**\u5f80\u4e24\u8fb9\u6269\u6563\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u4e0d\u662f\u4e24\u6bb5\u65f6\u95f4\u7684\u548c\uff0c\u800c\u662f\u5b83\u4eec\u4e2d\u7684\u8f83\u5927\u503c\u3002\n    \n-----------------\n\n\u672c\u4eba\u8bed\u6587\u4e0d\u662f\u5f88\u597d\uff0c\u5982\u6709\u8bed\u75c5\u6b22\u8fce\u6307\u51faqwq",
        "postTime": 1549546554,
        "uid": 38785,
        "name": "icyM3tra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u53d1\u73b0\u6ca1\u6709\u4e8c\u5206\u7b54\u6848\u52a0\u5e7f\u641c\u7684\u9898\u89e3\uff0c\u6765\u53d1\u4e00\u4e2a\u3002\n\n\u5177\u4f53\u601d\u8def\u5c31\u662f\u5148\u4e8c\u5206\u6269\u5c55\u7684\u65f6\u95f4\uff0c\u7136\u540e\u4ece\u7b2c\u4e00\u4e2a\u70b9\u8fdb\u884c\u5e7f\u641c\uff0c\u770b\u662f\u5426\u80fd\u5230\u8fbe\u6240\u6709\u70b9\u3002\n\n\u6ce8\u610f\uff1a\u8ddd\u79bb\u516c\u5f0f\u662fabs(x0 - x1) + abs(y0 +y1)\uff0c\u4e24\u4e2a\u70b9\u8fde\u901a\u4ec5\u5f53\u8ddd\u79bb<=\u65f6\u95f4*2\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <queue>\n#define rep(x, l, r) for(int x = l; x <= r; x++)\n#define repd(x, r, l) for(int x = r; x >= l; x--)\n#define clr(x, y) memset(x, y, sizeof(x))\n#define mp make_pair\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define SZ(x) ((int)x.size())\n#define MAXN 100005\n#define fi first\n#define se second\nusing namespace std;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\ntypedef long long LL;\nconst int INF = 1 << 30;\nconst int p = 1e9 + 7;\n\nqueue<int> que;\nint n;\npii a[MAXN];\nbool vis[MAXN];\n\nint judge(int i, int j){\n\treturn \tabs(a[i].fi - a[j].fi) + abs(a[i].se - a[j].se);\n}\n\nbool check(int mid){\n\tclr(vis, 0);\n\tque.push(1);\n\tvis[1] = 1;\n\twhile(!que.empty()){\n\t\tint u = que.front();que.pop();\n\t\trep(i, 1, n){\n\t\t\tif(vis[i] || judge(u, i) > 2 * mid) continue;\n\t\t\tvis[i] = 1;\n\t\t\tque.push(i);\n\t\t}\n\t}\n\trep(i, 1, n)\n\t\tif(!vis[i]) return 0;\n\treturn 1;\n}\n\nint main(){\n\tscanf(\"%d\", &n);\n\tint r = 0;\n\trep(i, 1, n){\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\ta[i] = mp(x, y);\n\t\tr = max(r, max(x, y));\n\t}\n\tint l = 1, ans;\n\twhile(l <= r){\n\t\tint mid = (l + r) >> 1;\n\t\tif(check(mid)){\n\t\t\tans = mid;\n\t\t\tr = mid - 1;\n\t\t}\n\t\telse l = mid + 1;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1543027211,
        "uid": 149312,
        "name": "wze\u63cd\u6241\u4e86nm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u8ddd\u79bb\u4e0d\u662f\u4e25\u683c\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u5e94\u8be5\u662f\n\n```cpp\ndis[i,j]=(max(x[i]-x[j],x[j]-x[i])+max(y[i]-y[j],y[j]-y[i])-1)/2+1;\n```\n\u53ef\u4ee5\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4f46\u662f\u9898\u76ee\u53ef\u4ee5\u770b\u51fa\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u8fb9\uff0c\u6240\u4ee5\u4e8c\u5206\u7b54\u6848\u5e94\u8be5\u4e5f\u53ef\u4ee5\u505a\uff0c\u4f46\u662f\u4e8c\u5206\u7b54\u6848\u4e0d\u597d\u8c03\uff0c\u6240\u4ee5\u653e\u6700\u5c0f\u751f\u6210\u6811\u4ee3\u7801\u3002\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#define mysister\nusing namespace std;\nconst int maxn=50;\nstruct bian\n{\n    int u,v,w;\n    bian(int a,int b,int c):u(a),v(b),w(c){}\n    bool operator < (bian b)\n    {\n        return w<b.w;\n    }\n};\nint n,x[maxn],y[maxn],ans=0,fa[maxn];\nvector<bian>g;\nint find(int u)\n{\n    return fa[u]==u?u:fa[u]=find(fa[u]);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n      scanf(\"%d%d\",&x[i],&y[i]);\n      fa[i]=i;\n      for(int j=0;j<i;j++)\n        g.push_back(bian(i,j,(max(x[i]-x[j],x[j]-x[i])+max(y[i]-y[j],y[j]-y[i])-1)/2+1));\n    }\n    sort(g.begin(),g.end());\n    for(int i=0;i<g.size();i++)\n      if(find(g[i].u)!=find(g[i].v))\n      {\n          fa[find(g[i].u)]=find(g[i].v);\n          ans=max(ans,g[i].w);\n      }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1505956119,
        "uid": 43178,
        "name": "\u7693\u82b7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u7136\u540e\u6700\u5c0f\u751f\u6210\u6811\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<map>\n#include<set>\n#define inf 0x7fffffff>>1\n#define N 100005\n#define MAXN 1000005\n#define LL long long \n#define mod 1000000007\nusing namespace std;\ninline int ra()\n{\n    int x=0,f=1; char ch=getchar();\n    while (ch<'0' || ch>'9') {if (ch=='-') f=-1; ch=getchar();}\n    while (ch>='0' && ch<='9') {x=x*10+ch-'0'; ch=getchar();}\n    return x*f;\n}\nstruct node{\n    int x,y,v;\n}a[MAXN],b[MAXN];\nint n,fa[1005],ans,cnt;\nint find(int x)\n{\n    return fa[x]==x?x:fa[x]=find(fa[x]);\n}\nbool cmp(node a, node b)\n{\n    return a.v<b.v;\n}\nint c(double x)\n{\n    double orz=(double)int(x);\n    if (orz<x) return orz+1;\n        else return orz;\n}\nint main()\n{\n//    freopen(\"connection.in\",\"r\",stdin);\n//    freopen(\"connection.out\",\"w\",stdout);\n    n=ra();\n    for (int i=1; i<=n; i++)\n    {\n        a[i].x=ra(),a[i].y=ra();\n    }\n    for (int i=1; i<=n; i++)\n        for (int j=i+1; j<=n; j++)\n        {\n            b[++cnt].x=i;\n            b[cnt].y=j;\n            b[cnt].v=c((double)((double)(abs(a[i].x-a[j].x)+(double)abs(a[i].y-a[j].y))/2));\n        }\n    sort(b+1,b+cnt+1,cmp);\n    for (int i=1; i<=n; i++) fa[i]=i;\n    int tot=0;\n    for (int i=1; i<=cnt; i++)\n    {\n        int p=find(b[i].x),q=find(b[i].y);\n        if (p!=q)\n        {\n            fa[p]=q;\n            ans=max(ans,b[i].v);\n            ++tot;\n        }\n        if (tot==n-1) break;\n    }\n    cout<<ans;\n//    fclose(stdin); fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1478855458,
        "uid": 1787,
        "name": "ws_ccd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u5f88\u591a\u4eba\u90fd\u7528\u6700\u5c0f\u751f\u6210\u6811\u6216\u5e76\u67e5\u96c6\n### \u7136\u800c\u6211\u770b\u5230\u6570\u636e\u8303\u56f4\u4e3a50\u540e\u60f3\u5230\u7684\u65b9\u6cd5\u5374\u662f\n# Floyd\n### O(n^3)\u7edd\u5bf9\u5b8c\u7f8e\uff01\n### \u63a5\u4e0b\u6765\u5c31\u662f\u5efa\u56fe\u4e86\n### \u672c\u9898\u4e2d\u8fd9\u70b9\u5f88\u660e\u663e\n## \u53ef\u662f\u9700\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\n```c\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tint d=(abs(a[i].x-a[j].x)+abs(a[i].y-a\t\t\t\t[j].y)+1)/2;//\u8bb0\u5f55\u66fc\u54c8\u987f\u8ddd\u79bb\n\t\t\tdist[j][i]=dist[i][j]=d;\n\t\t}\n\t}\n```\n## \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981+1\u540e/2\u5462\uff1f\uff1f\uff1f\n### /2\u597d\u7406\u89e3\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e24\u4e2a\u70b9\u540c\u65f6\u5411\u5916\u6269\u5f20\n## \u53ef\u662f\u4e3a\u4ec0\u4e48\u8981\u5148\u52a0\u4e00\u5462\uff1f\n### \u5982\u679c\u96be\u4ee5\u5224\u65ad\uff0c\u53ef\u4ee5\u5148\u8111\u8865\u4e00\u4e9b\u7b80\u5355\u60c5\u51b5\n### \u6211\u4eec\u8ba8\u8bba\u4ec5\u6709\u4e24\u4e2a\u70b9\u7684\u60c5\u51b5\uff0c\u8bbe\u5b83\u4eec\u76f8\u8dddd\uff0c\u8981\u8d70x\u6b65\n### \u5f53d=1 x=1\n### \u5f53d=2 x=1\n### \u5f53d=3 x=2\n### \u5f53d=4 x=2\n### ~~~\n### \u5bb9\u6613\u603b\u7ed3\u51fa\u4ee5\u4e0a\u5efa\u56fe\u7684\u4ee3\u7801\u6bb5\n#### ~~\u8fd9\u7684\u6545\u4e8b\u544a\u8bc9\u6211\u4eec\uff0c\u9047\u5230\u590d\u6742\u7684\u60c5\u51b5\u65f6\u8010\u4e0b\u5fc3\u6765\u624d\u662f\u738b\u9053~~\n### P.s. \u66fc\u54c8\u987f\u8ddd\u79bb\n### \u6211\u76f8\u4fe1\u5927\u5bb6\u66f4\u4e86\u89e3\u7684\u662f\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff08\u5373\u4e24\u70b9\u4e4b\u95f4\u76f4\u7ebf\u8ddd\u79bb\uff09\n### \u66fc\u54c8\u987f\u8ddd\u79bb\u2014\u2014\u4e24\u70b9\u5728\u5357\u5317\u65b9\u5411\u4e0a\u7684\u8ddd\u79bb\u52a0\u4e0a\u5728\u4e1c\u897f\u65b9\u5411\u4e0a\u7684\u8ddd\u79bb\uff0c\u5373d\uff08i\uff0cj\uff09=|xi-xj|+|yi-yj|\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5177\u6709\u6b63\u5357\u6b63\u5317\u3001\u6b63\u4e1c\u6b63\u897f\u65b9\u5411\u89c4\u5219\u5e03\u5c40\u7684\u57ce\u9547\u8857\u9053\uff0c\u4ece\u4e00\u70b9\u5230\u8fbe\u53e6\u4e00\u70b9\u7684\u8ddd\u79bb\u6b63\u662f\u5728\u5357\u5317\u65b9\u5411\u4e0a\u65c5\u884c\u7684\u8ddd\u79bb\u52a0\u4e0a\u5728\u4e1c\u897f\u65b9\u5411\u4e0a\u65c5\u884c\u7684\u8ddd\u79bb\uff0c\u56e0\u6b64\uff0c\u66fc\u54c8\u987f\u8ddd\u79bb\u53c8\u79f0\u4e3a\u51fa\u79df\u8f66\u8ddd\u79bb\u3002\n[\u66fc\u54c8\u987f\u8ddd\u79bb\u56fe\u793a](https://baike.baidu.com/pic/\u66fc\u54c8\u987f\u8ddd\u79bb/743092/0/8697397f2ff8561b29388a48?fr=lemma&ct=single#aid=0&pic=8697397f2ff8561b29388a48)\n### \u56fe\u4e2d\u7ea2\u7ebf\u4ee3\u8868\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u7eff\u8272\u4ee3\u8868\u6b27\u6c0f\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u76f4\u7ebf\u8ddd\u79bb\uff0c\u800c\u84dd\u8272\u548c\u9ec4\u8272\u4ee3\u8868\u7b49\u4ef7\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\n##### \t\t\t\t\t\t--\u56fe\u7247\u4e0e\u89e3\u91ca\u6765\u6e90\u4e3a\u767e\u5ea6\u767e\u79d1\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst int maxn=55;\nconst int inf=0x3f3f3f3f;\nint n,dist[maxn][maxn],ans=0;\n\nstruct node{\n\tint x,y;\n} a[maxn];\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tdist[i][j]=inf;\n\tfor(int i=1;i<=n;i++)\n\t\tdist[i][i]=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tint d=(abs(a[i].x-a[j].x)+abs(a[i].y-a[j].y)+1)/2;//\u8bb0\u5f55\u66fc\u54c8\u987f\u8ddd\u79bb\n\t\t\tdist[j][i]=dist[i][j]=d;\n\t\t}\n\t}\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tdist[i][j]=min(dist[i][j],max(dist[i][k],dist[k][j]));//Floyd\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(i!=j) ans=max(ans,dist[i][j]);\n\tcout<<ans<<endl;\n\treturn 0;//AC\uff01\uff01\uff01\n}\n```",
        "postTime": 1539591444,
        "uid": 111107,
        "name": "gb530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    },
    {
        "content": "\u7eb5\u89c2\u6240\u6709\u9898\u89e3\u6ca1\u6709\u64cd\u4f5c\uff08\u96fe\uff09\u6bd4\u5728\u4e0b\u66f4\u7b80\u5355\u7684\u4e86\uff0c\u5728\u4e0b\u7528\u7684\u662f\u5e76\u67e5\u96c6+\u5faa\u73af\u66f4\u6362\u7b54\u6848\u6765A\u8fd9\u9898\u7684\u3002\n\n\u5177\u4f53\u601d\u8def\u5728\u4e8e\u5148\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\u8fde\u70b9\u5efa\u8fb9,\u7136\u540e\u518d\u4ee5\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e4b\u540e\u5728\u4e00\u904d\u5faa\u73af\u626b\u8fc7\u53bb\uff0c\u8be5\u8fb9\u4e24\u70b9\u5728\u4e00\u4e2a\u8054\u901a\u5757\u5c31\u4e0d\u7ba1\uff0c\u4e0d\u5728\u5c31\u5224\u65ad\u8be5\u8fb9\u6743\u4e0e\u6700\u5927\u503c\u5173\u7cfb\uff0c\u76f8\u540c\u5c31\u8fde\u63a5\uff0c\u5927\u4e86\u5c31\u66ff\u6362\u3002\u3002\n\n\n---------------------~~\u534e\u4e3d\u4e3d\u7684\u5206\u5272\u7ebf~~---------------------\n\n\n```cpp\n#include <bits/stdc++.h>\n#define lolo long long \n#define INF 1000000 \n#define Mod 1000000\n#define pln printf(\"\\n\");\n#define Open(s) freopen(s\".in\",\"r\",stdin); freopen(s\".out\",\"w\",stdout);\n#define Close fclose(stdin); fclose(stdout);\nusing namespace std; \nstruct stt{int x,y,c;}a[110],ed[100100];\nbool cmp(const stt &a,const stt &b)\n{return a.c<b.c;}\nint ans,n,cnt;\n\nint fa[100];\nint f_fa(int x)\n{\n\tif (fa[x]==x) \t   return x;\n\tfa[x]=f_fa(fa[x]); returnX fa[x];\n}\n\ninline int read()\n{\n\tint k=1,sum=0;\n\tchar c=getchar();\n\tfor(; '0'>c || c>'9';  c=getchar())\n\t\tif(c=='-') k=-1;\n\tfor(; '0'<=c && c<='9';c=getchar())\n\t\tsum=sum*10+c-'0';\n\treturn sum*k;\n}\n\ninline void write(int x)\n{\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\n\nvoid in_1()\n{\n\tn=read();\n\tfor (int i=1; i<=n; i+=1)\n\t  a[i]=(stt){read(),read()};\n}\n\nint mhd(int x,int y)\n{\n\treturn abs(a[x].x-a[y].x)+abs(a[x].y-a[y].y);\n}\n\nvoid cl()\n{\n\tfor (int i=1; i<=n; i+=1) fa[i]=i;\n\tfor (int i=1; i<n; i+=1)\n\t  for (int j=i+1; j<=n; j+=1)\n\t    ed[++cnt].x=i,ed[cnt].y=j,ed[cnt].c=mhd(i,j);\n\tsort(ed+1,ed+cnt+1,cmp);\n}\n\nvoid out_1()\n{\n\tprintf(\"%d\\n\",ans);\n}\n\nvoid work()\n{\n\tint hd=1,now=0;\n\tif (ed[hd].c%2) now=(ed[hd].c+1)/2;\n\telse \t\t\tnow= ed[hd].c   /2;\n\tfor (int i=1; i<=cnt; i+=1)\n\t{\t\n\t\tint fx=f_fa(ed[i].x),fy=f_fa(ed[i].y),nt=0;\n\t\tif (ed[i].c%2) nt=(ed[i].c+1)/2;\n\t\telse \t\t   nt= ed[i].c   /2;\n\t\t//printf(\"%d %d %d\\n\",ed[i].x,ed[i].y,nt);\n\t\tif (fx!=fy)\n\t\t{\n\t\t\tif (nt<=now) fa[fy]=fx;\n\t\t\telse\t\t fa[fy]=fx,now=nt;\n\t\t}\t\n\t}\n\tans=now;\n}\n\nint main()\n{\n  \t//Open(\"ppg\");\n\n    in_1();\n    cl();\n    work();\n    out_1();\n    \n  \tClose;\n  \treturn 0;  \n}\n```",
        "postTime": 1537603465,
        "uid": 48537,
        "name": "msxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1661 \u3010\u6269\u6563\u3011"
    }
]