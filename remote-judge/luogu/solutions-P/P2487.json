[
    {
        "content": "## \u4e00\u4e9b\u95f2\u8bdd\n\n**\u8fd9\u662f\u4e00\u4e2a\u5fe7\u4f24\u4f46\u53c8\u632f\u594b\u4eba\u5fc3\u7684\u6545\u4e8b\u3002**\u6211\u5728\u505a\u8fd9\u9898\u7684\u65f6\u5019\u683d\u4e86\u4e0d\u5c11\u8ddf\u5934\uff0c\u4e5f\u6ca1\u6709\u4eba\u80fd\u5e2e\u6211\uff0c\u7f51\u4e0a\u627e\u4e0d\u5230\u76f8\u4f3c\u7684\u9898\u89e3\uff0c\u4ee3\u7801\u91cd\u6784\u4e86\u81f3\u5c11\u4e09\u6b21\u3002\u4e00\u5929\u4ece\u65e9\u4e0a\u516b\u4e5d\u70b9\u4e00\u76f4\u505a\u5230\u63a5\u8fd1\u51cc\u6668\u3002\n\n[\u5341\u4e00\u70b9\u7684\u63d0\u4ea4](https://www.luogu.org/record/show?rid=9859743)\n\n\u628a\u505a\u8fd9\u9898\u7684\u7ecf\u8fc7\u5199\u4e0b\u6765\uff0c\u4ee5\u201c\u8d3b\u5176\u540e\u4e4b\u6765\u8005\u201d\u3002\n\n## \u9898\u76ee\u5927\u610f\n\n\u6709$n$\u4e2a\u5bfc\u5f39\uff0c\u6bcf\u4e2a\u5bfc\u5f39\u6709\u4e09\u4e2a\u53c2\u6570$t$\uff0c$h$\u548c$v$\u3002\u4f60\u9700\u8981\u6c42\u51fa\u4e00\u4e2a\u6700\u957f\u7684\u5e8f\u5217${a}$\uff0c\u6ee1\u8db3\u5bf9\u4e8e\u6240\u6709\u7684$i$\uff0c\u5747\u6709$t_i\\le t_{i+1}~h_i\\ge h_{i+1}~v_i\\ge v_{i+1}$\u3002\u8f93\u51fa\u6700\u957f\u7684\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u7531\u4e8e\u53ef\u80fd\u6709\u591a\u79cd\u6700\u957f\u7684\u5e8f\u5217\u7684\u65b9\u6848\uff0c\u6bcf\u6b21\u968f\u673a\u9009\u4e00\u79cd\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u5bfc\u5f39\uff0c\u5176\u6210\u4e3a\u6700\u957f\u5e8f\u5217\u4e2d\u7684\u4e00\u9879\u7684\u6982\u7387\u3002\n\n$n\\le 5\\times 10^4,1\\le h_i,v_i\\le 10^9,1\\le t_i\\le n$\n\n## \u89e3\u6cd5\n\n\u8bb0$f1_i$\u8868\u793a\u4ee5$i$\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u975e\u751f\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff08\u4ee5\u540e\u7b80\u79f0LDS\uff09\uff0c$g1_i$\u8868\u793a\u8fd9\u6837\u7684LDS\u7684\u4e2a\u6570\u3002\n\n\u76f4\u63a5\u7528\u5e38\u89c4\u7684DP\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^2)$\uff0c\u9700\u8981\u4f18\u5316\u3002\n\n\u6761\u4ef6\u5f88\u663e\u7136\u662f\u4e2a\u4e09\u7ef4\u504f\u5e8f\u7684\u5f62\u6001\u3002\u9898\u76ee\u4e2d\u7684$t$\u5df2\u7ecf\u6392\u597d\u4e86\u5e8f\u3002\n\n\u8003\u8651\u8fdb\u884cCDQ\u5206\u6cbb\u3002\u6bcf\u6b21\u5c06\u5e8f\u5217\u5206\u6210\u5de6\u548c\u53f3\u4e24\u90e8\u5206\u3002\u6bcf\u6b21\u8003\u8651\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u5f71\u54cd\u3002\n\n\u9012\u5f52\u5904\u7406\u5de6\u4fa7\uff1b\n\n\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u503c\uff1b\n\n\u9012\u5f52\u6c42\u89e3\u53f3\u4fa7\u3002\n\n\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u503c\u65f6\uff0c\u5148\u5c06\u5de6\u53f3\u4e24\u4fa7\u6309$h$\u4ece\u5927\u5230\u5c0f\u6392\u597d\u5e8f\u3002\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u6309$t$\u6392\u597d\u5e8f\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u5de6\u8fb9\u5bf9\u53f3\u4fa7\u7684\u5f71\u54cd\u65f6\uff0c$t$\u7684\u5927\u5c0f\u5173\u7cfb\u4e00\u5b9a\u6ee1\u8db3\u6761\u4ef6\u3002\u7528\u7c7b\u4f3c\u4e8e\u5f52\u5e76\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u5904\u7406\u5230\u7684\u5de6\u4fa7\u533a\u95f4\u7684\u4f4d\u7f6e\u548c\u53f3\u4fa7\u533a\u95f4\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u5f53\u524d\u6307\u5411\u53f3\u4fa7\u533a\u95f4\u7684$h$\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5de6\u8fb9\u533a\u95f4\u6307\u9488\u6307\u5411\u7684\u503c\uff0c\u5c06\u5de6\u6307\u9488\u7684$v_i$\uff0c$f1_i$\u548c$g1_i$\u52a0\u5165\u6570\u636e\u7ed3\u6784\u4e2d\uff1b\u53cd\u4e4b\uff0c\u67e5\u8be2$v$\u5927\u4e8e$v_j$\u7684\u6240\u6709\u6570\u4e2d\u6700\u5927\u7684$f1$\u548c\u5bf9\u5e94\u7684$g1$\u3002\n\n\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\uff08\u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4\uff09\u9700\u8981\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1.\u4fee\u6539\u5355\u70b9\u7684\u503c\uff1b\n\n2.\u67e5\u8be2\u533a\u95f4\u7684\u6700\u5927\u503c\u548c\u5bf9\u5e94\u7684\u6570\u503c\u3002\n\n\u5b9a\u4e49$f2_i$\u548c$g2_i$\u4e3a\u4ee5$i$\u4e3a\u5f00\u5934\u7684\u6700\u957f\u975e\u751f\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff08\u4ee5\u540e\u7b80\u79f0LDS\uff09\uff0c$g1_i$\u8868\u793a\u8fd9\u6837\u7684LDS\u7684\u4e2a\u6570\u3002\n\n\u5c06\u6570\u7ec4\u9006\u5e8f\uff0c\u6570\u5b57\u53d6\u53cd\uff0c\u5373\u53ef\u7528\u540c\u6837\u7684\u8fc7\u7a0b\u6c42\u89e3$f2$\u548c$g2$\u3002\n\n\u6700\u540e$max(f1)$\u5373\u4e3aLDS\u7684\u6700\u5927\u957f\u5ea6\u3002\n\n$\\sum_{i=1}^n g1_i(f1_i=max(f1))$\u5373\u4e3a\u6240\u6709\u53ef\u80fd\u7684\u6700\u957fLDS\u7684\u65b9\u6848\u603b\u6570\uff0c\u8bb0\u4e3a$sum$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9$i$\uff0c**\u5f53\u4e14\u4ec5\u5f53**$f1_i+f2_i-1=max(f1)$\u65f6\uff08\u51cf\u53bb\u7684$1$\u662f\u91cd\u590d\u8ba1\u7b97\u7684\u8282\u70b9$i$\uff09\uff0c\u8be5\u8282\u70b9\u53ef\u80fd\u6210\u4e3aLDS\u4e0a\u7684\u4e00\u70b9\u3002\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u6240\u6709\u7ecf\u8fc7\u8be5\u8282\u70b9\u7684LDS\u65b9\u6848\u603b\u6570\u4e3a$g1_i\\times g2_i$\uff0c\u90a3\u4e48\u6982\u7387\u5373\u4e3a$\\frac{g1_i\\times g2_i}{sum}$\u3002\n\n## \u5b9e\u73b0\u7ec6\u8282\n\n\u7528\u7c7b\u4f3c\u4e8e\u4e2d\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8fdb\u884cCDQ\u8fc7\u7a0b\u3002\n\n\u7531\u4e8e$v$\u8f83\u5927\uff0c\u800c$n$\u8f83\u5c0f\uff0c\u9700\u8981\u5bf9$v$\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u65b9\u4fbf\u8fdb\u884c\u6570\u636e\u7ed3\u6784\u3002\n\n\u5c06\u5de6\u4fa7\u5bf9\u53f3\u4fa7\u7684\u5f71\u54cd\u8ba1\u7b97\u5b8c\u4ee5\u540e\uff0c\u9700\u8981**\u6e05\u7a7a\u6570\u636e\u7ed3\u6784**\u3002\u76f4\u63a5```memset```\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u9700\u8981\u8fdb\u884c$DFS$\u5e76\u5728\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u503c\u65f6\u526a\u679d\u3002\n\n**\u91cd\u8981\u5fc5\u8bfb\uff01**\n\n$g1_i$\uff0c$g2_i$\u548c$sum$\u5fc5\u987b\u8981\u7528```double```\u7c7b\u578b\u5b58\u50a8\uff0c\u5426\u5219\u76f8\u52a0\u6216\u76f8\u4e58\u4f1a\u7206```long long```\u3002\u5728\u6570\u5b57\u592a\u5927\u7684\u65f6\u5019\uff0c```double```\u4f1a\u820d\u5f03\u4e00\u4e9b\u7cbe\u5ea6\u6362\u53d6\u5b58\u50a8\u66f4\u5927\u7684\u503c\u3002\n\n## \u4ee3\u7801\u5c55\u793a\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u7684\u7248\u672c\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<set>\n#include<map>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=50010;\nll n,cnt,maxh,maxx,f1[maxn],f2[maxn];\ndouble sum,g1[maxn],g2[maxn];\nstruct node{ll t,h,v;}s[maxn];\nconst bool cmpt(node a,node b){return a.t<b.t;}\nconst bool cmph(node a,node b){return (a.h==b.h)?(a.t<b.t):a.h>b.h;}\nset<ll>st;\nmap<ll,ll>id;\nll max_[maxn*4];\ndouble cnt_[maxn*4];\nvoid clear(ll o,ll l,ll r)\n{\n    if(!max_[o])return;\n    max_[o]=0;\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    clear(o<<1,l,mid);\n    clear(o<<1|1,mid+1,r);\n}\nvoid update(ll o,ll l,ll r,ll x,ll v,double v2)\n{\n    if(l>x||x>r)return;\n    if(l==r)\n    {\n        if(max_[o]<v)max_[o]=v,cnt_[o]=0;\n        if(max_[o]==v)cnt_[o]+=v2;\n        return;\n    }\n    ll mid=(l+r)>>1;\n    update(o<<1,l,mid,x,v,v2);\n    update(o<<1|1,mid+1,r,x,v,v2);\n    max_[o]=max(max_[o<<1],max_[o<<1|1]);\n    cnt_[o]=0;\n    if(max_[o]==max_[o<<1])cnt_[o]+=cnt_[o<<1];\n    if(max_[o]==max_[o<<1|1])cnt_[o]+=cnt_[o<<1|1];\n}\nll query(ll o,ll l,ll r,ll ql,ll qr,double&cntt)\n{\n    if(ql>r||l>qr){cntt=0;return 0;}\n    if(ql<=l&&r<=qr){cntt=cnt_[o];return max_[o];}\n    ll mid=(l+r)>>1;\n    double cntl=0,cntr=0;\n    ll al=query(o<<1,l,mid,ql,qr,cntl),ar=query(o<<1|1,mid+1,r,ql,qr,cntr);\n    cntt=0;\n    if(mid>=ql&&max(al,ar)==al)cntt+=cntl;\n    if(mid<=qr&&max(al,ar)==ar)cntt+=cntr;\n    return max(al,ar);\n}\nvoid CDQ1(ll l,ll r)\n{\n    if(l==r)return;\n    ll mid=(l+r)>>1;\n    sort(s+l,s+r+1,cmpt);\n    CDQ1(l,mid);\n    sort(s+l,s+mid+1,cmph);\n    sort(s+mid+1,s+r+1,cmph);\n    clear(1,1,n);\n    for(int i=l,j=mid+1;j<=r;j++)\n    {\n        while(i<=mid&&s[i].h>=s[j].h)update(1,1,n,s[i].v,f1[s[i].t],g1[s[i].t]),i++;\n        double cn=0;\n        ll t=query(1,1,n,s[j].v,n,cn);\n        if(!t)continue;\n        if(f1[s[j].t]<t+1)f1[s[j].t]=t+1,g1[s[j].t]=0;\n        if(f1[s[j].t]==t+1)g1[s[j].t]+=cn;\n    }\n    CDQ1(mid+1,r);\n}\nvoid CDQ2(ll l,ll r)\n{\n    if(l==r)return;\n    ll mid=(l+r)>>1;\n    sort(s+l,s+r+1,cmpt);\n    CDQ2(l,mid);\n    sort(s+l,s+mid+1,cmph);\n    sort(s+mid+1,s+r+1,cmph);\n    clear(1,1,n);\n    for(int i=l,j=mid+1;j<=r;j++)\n    {\n        while(i<=mid&&s[i].h>=s[j].h)update(1,1,n,s[i].v,f2[s[i].t],g2[s[i].t]),i++;\n        double cn=0;\n        ll t=query(1,1,n,s[j].v,n,cn);\n        if(!t)continue;\n        if(f2[s[j].t]<t+1)f2[s[j].t]=t+1,g2[s[j].t]=0;\n        if(f2[s[j].t]==t+1)g2[s[j].t]+=cn;\n    }\n    CDQ2(mid+1,r);\n}\nint main()\n{\n    scanf(\"%lld\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%lld%lld\",&s[i].h,&s[i].v),s[i].t=i,st.insert(s[i].v),maxh=max(maxh,s[i].h);\n    for(set<ll>::iterator it=st.begin();it!=st.end();it++)id[*it]=++cnt;\n    for(int i=1;i<=n;i++)s[i].v=id[s[i].v];\n    for(int i=1;i<=n;i++)f1[i]=f2[i]=1,g1[i]=g2[i]=1.0;\n    CDQ1(1,n);\n    for(int i=1;i<=n;i++)maxx=max(maxx,f1[i]);\n    for(int i=1;i<=n;i++)if(f1[i]==maxx)sum+=g1[i];\n    printf(\"%lld\\n\",maxx);\n    for(int i=1;i<=n;i++)s[i].t=n-s[i].t+1,s[i].h=maxh-s[i].h+1,s[i].v=cnt-s[i].v+1;\n    sort(s+1,s+n+1,cmpt);\n    CDQ2(1,n);\n    for(int i=1;i<=n;i++)\n    {\n        if(f1[i]+f2[n-i+1]-1!=maxx)printf(\"%.5lf \",0.0);\n        else printf(\"%.5lf \",g1[i]*g2[n-i+1]/sum);\n    }\n    return 0;\n}\n```",
        "postTime": 1534521181,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2487 \u3010[SDOI2011]\u62e6\u622a\u5bfc\u5f39\u3011"
    },
    {
        "content": "# \u5047 long long \u5bb3\u4eba\uff01\u4e00\u5b9a\u8981\u5f00double\uff01\n\n\u8fd9\u9053\u9898\u7684\u8bdd\u9996\u5148\u4f60\u8981\u6ce8\u610f\u5230\u4e00\u4e2a\u9690\u85cf\u6761\u4ef6\uff0c\u6240\u6709\u5bfc\u5f39\u6309\u7167\u9898\u76ee\u7ed9\u51fa\u7684\u987a\u5e8f\u6309\u65f6\u95f4\u53d1\u5c04\u2026\u2026\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u5c31\u53d1\u73b0\u4e00\u4e2a\u5bfc\u5f39\u67093\u4e2a\u5c5e\u6027(h,v,t)\uff0c\u6211\u4eec\u4f3c\u4e4e\u53ef\u4ee5dp\uff1f\n\n\u7136\u540e\u4f1a\u53d1\u73b0\u6211\u4eec\u7684dp\u65b9\u7a0b\u5927\u6982\u957f\u8fd9\u6837\uff0c\u4ee4dp\\[i]\u8868\u793a\u4ee5i\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u53d1\u73b0\n\ndp\\[i]=max(dp\\[j])+1\u6ee1\u8db3i>j,hi<hj,vi<vj\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0a3\u4e2a\u9650\u5236\u624d\u53ef\u4ee5dp\uff0c\u4f46\u662f\u53cd\u8fc7\u6765\uff0c\u5982\u679c\u6211\u4eec\u6ee1\u8db3\u4e86\u8fd93\u4e2a\u6761\u4ef6\uff0c\u5e76\u4e14\u6ee1\u8db3\u6d89\u53ca\u5230\u7684\u6240\u6709\u72b6\u6001\u5df2\u7ecf\u662f\u51c6(\u503c\u4e0d\u4f1a\u518d\u53d8\u5316)\u7684\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5**\u968f\u4fbfdp**\u4e86\n\n\u5982\u679c\u662f\u6b63\u5e38\u7684\u66b4\u529b\u7684\u8bdd\uff0c\u6bcf\u4e2adp\\[i]\u53ea\u4f1a\u88ab\u8ba1\u7b97\u4e00\u6b21\uff0c\u66f4\u65b0\u5bf9\u8c61\u662f\u6240\u6709\u7684\u504f\u5e8f\u70b9\n\n\u66f4\u65b0\u662fO(n)\u7684\uff0c\u4f46\u66f4\u65b0\u4e00\u6b21\uff0c\u975e\u5e38\u7684\u4e0d\u5e73\u8861\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u91c7\u53d6\u4e00\u4e9b\u6709\u8da3\u7684\u64cd\u4f5c\u4f7f\u5f97\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u90fd\u53d8\u6210log\u7ea7\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\n\n## CDQ\u5206\u6cbb\n\n\u8fd9\u91cc\u7684cdq\u5206\u6cbb\u662f\u5904\u7406\u591a\u7ef4\u5143\u7d20\u7684\u53cc\u6392\u578b\u5206\u6cbb\uff0c\u4e0d\u662f\u5904\u7406\u64cd\u4f5c-\u8be2\u95ee\u5e8f\u5217\u7684\u5206\u6cbb\n\n _(\u4f46\u662f\u5199\u6cd5\u90fd\u5f88\u50cf\u6240\u4ee5\u4e00\u822c\u4e0d\u505a\u533a\u5206)_ \n \n \u601d\u8def\u548c\u7ebf\u6bb5\u6811\u5341\u5206\u76f8\u4f3c\uff0c\u6211\u4eec\u8003\u8651cdq\u5206\u6cbb\u7684\u5b9e\u9645\u64cd\u4f5c\u8fc7\u7a0b\uff0c\u5927\u5bb6\u4e00\u822c\u90fd\u4f1a\u544a\u8bc9\u4f60\n \n 1.\u5206\u6cbb\u5de6\u4fa7\n \n 2.\u8003\u8651\u5de6\u4fa7\u5bf9\u53f3\u4fa7\u7684\u5f71\u54cd\n \n 3.\u5206\u6cbb\u53f3\u4fa7\n \n\u7b80\u76f4\u662f\u7384\u5b66\u554a\u2026\u2026\uff0c\u6216\u8005\u8bf4\uff0ccdq\u5206\u6cbb\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5199\uff1f\n\n\u4e0d\u5982\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u70b9\u5728\u6574\u4e2a\u7b97\u6cd5\u4e2d\u4f1a\u53d1\u751f\u4ec0\u4e48\n\n\u6211\u4eec\u53d1\u73b0\u628a\u5bfc\u5f39\u6309\u65f6\u95f4\u4ece**\u5927\u5230\u5c0f**\u6392\u5e8f\u4e4b\u540e\uff0c\u53ef\u4ee5\u66f4\u65b0dp\\[i]\u7684\u70b9\u4e00\u5b9a\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u5177\u4f53\u6765\u8bb2\uff0c\u662f\u4e00\u4e2a\u524d\u7f00\uff0c\u800c\u8fd9\u4e2a\u524d\u7f00\uff0c\u662f\u53ef\u4ee5\u88ab\u62c6\u5206\u4e3alog\u4e2a2^i\u7684\u6574\u533a\u95f4\u7684(\u4e0b\u9762\u7684\u201c\u5de6\u4fa7\u201d\uff0c\u201c\u53f3\u4fa7\u201d\uff0c\u201c\u533a\u95f4\u201d\u7684\u6982\u5ff5\u90fd\u662f\u6307\u6309i\u6392\u597d\u5e8f\u7684\u533a\u95f4)\n\n\u6211\u4eec\u5047\u8bbe\u8fd9\u4e2a\u70b9\u5728\u53f3\u534a\u90e8\u5206\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u5206\u6cbb\u5b8c\u5de6\u4fa7\u4e4b\u540e**\u5047\u8bbe\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e9b\u5965\u5999\u91cd\u91cd\u7684\u65b9\u6cd5\u4f7f\u5f97\u5de6\u4fa7\u70b9\u7684dp\u503c\u5168\u90e8\u53d8\u6210\u4e86\u51c6\u7684\u503c**\uff0c\u90a3\u4e48dp\u503c\u8981\u51c6\u7684\u6761\u4ef6\u5c31\u88ab\u6ee1\u8db3\u4e86\u3002\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u5de6\u4fa7\u7684i\u503c\u90fd\u5927\u4e8e\u53f3\u4fa7\u7684i\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c**\u53ea\u8003\u8651**\u5de6\u4fa7\u7684\u72b6\u6001\u53bb\u66f4\u65b0\u53f3\u8fb9\u7684\u72b6\u6001\u7684\u8bdd**i\u7684\u9650\u5236\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86**\uff0c\u56e0\u6b64\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5bf9\u5de6\u53f3\u7684\u72b6\u6001\u8fdb\u884c\u4e00\u4e9b\u4e71\u641e\u3002\n\n\u6bd4\u5982**\u6392\u5e8f**\uff0c\u6211\u4eec\u5c06\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u5e8f\u5217\u6309**H**\u6392\u5e8f\uff0c\u6b64\u65f6\u6211\u4eec\u5f00\u59cb\u8003\u8651\u5de6\u4fa7\u5bf9\u53f3\u4fa7\u7684\u66f4\u65b0\u9650\u5236\n\n\u6211\u4eec\u6b64\u65f6\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488(\u6570\u7ec4\u4e0b\u6807?)\uff0c\u5047\u8bbe\u5de6\u4fa7\u7684\u6307\u9488\u662fp\uff0c\u53f3\u4fa7\u662fi\uff0c\u6211\u4eec\u5982\u679c\u8981\u66f4\u65b0i\u7684\u8bdd\uff0c\u53ef\u4ee5\u5c06\u6307\u9488p\u5411\u53f3\u79fb\uff0c\u76f4\u5230hp\u662f\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8ehi\u7684\u6570\uff0c\u6b64\u65f6\u6211\u4eec\u4f1a\u53d1\u73b0\u4ece\u5de6\u4fa7\u8d77\u59cb\u70b9\u5230p\u7684\u8fd9\u4e00\u6bb5\u533a\u95f4\u6765\u8bb2\uff0c\u5b83\u4eec\u7684h\u503c\u90fd\u662f\u5c0f\u4e8ehi\u7684\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6b64\u65f6\u7684h\u8fd9\u4e00\u7ef4\u7684\u9650\u5236\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u8981\u89e3\u51b3\u6700\u540e\u4e00\u7ef4\u7684\u95ee\u9898\uff0c\u5c34\u5c2c\u7684\u53d1\u73b0\u6211\u4eec\u5df2\u7ecf**\u4e0d\u53ef\u4ee5\u518d\u4e71\u52a8**\u8fd9\u4e2a\u5e8f\u5217\u4e86\n\n\u4e0d\u8fc7\u6211\u4eec\u6709\u6570\u636e\u7ed3\u6784~\uff0c\u79bb\u6563\u5316v\u4e4b\u540e\u6309v\u63d2\u5230\u6811\u72b6\u6570\u7ec4\u91cc\uff0c\u53d1\u73b0v<vi\u8fd9\u4e2a\u6761\u4ef6\u662f\u4e00\u4e2a\u524d\u7f00\u9650\u5236\u6761\u4ef6\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u67e5\u524d\u7f00\u6700\u5927\u503c~\n\n\u81f3\u6b64\u6298\u817e\u6765\u6298\u817e\u53bb\uff0c\u6211\u4eec\u7ec8\u4e8e\u66f4\u65b0\u4e86\u4e00\u4e2a\u70b9\uff0c\u800c\u4e14\uff0c\u8fd9\u4e2a\u70b9\u8fd8\u6ca1\u88abdp\u5168\u2026\u2026\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u70b9**\u6700\u524d\u9762\u7684\u533a\u95f4**\u5df2\u7ecf\u88ab\u66f4\u65b0\u4e86\uff0c\u540c\u65f6\uff0c\u5c06\u6765**\u6709\u53ef\u80fd**\u53bb\u66f4\u65b0i\u7684\u70b9\u4e5f\u5168\u90e8\u88ab\u66f4\u65b0\u4e86\uff0c\u800c\u4e14\u6211\u4eec\u4f1a\u53d1\u73b0\u6bcf\u6b21\u90fd\u662f\u91c7\u53d6**\u5206\u6cbb\u5de6-\u66f4\u65b0-\u5206\u6cbb\u53f3**\u7684\u7b56\u7565\n\n\u975e\u5e38\u50cf\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff0c\u800c\u6211\u4eec\u77e5\u9053\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u662f\u6709\u5e8f\u7684\uff0c\u56e0\u6b64\uff0c**\u5404\u4e2a\u70b9\u53d8\u51c6\u7684\u65f6\u95f4**\u662f\u548c\u539f\u6765\u6309\u65f6\u95f4\u6392\u5e8f\u4e4b\u540e\u66b4\u529bdp\u7684\u65f6\u95f4\u662f\u4e00\u6837\u7684\u3002\u5e76\u4e14\uff0c\u6bcf\u6b21\u66f4\u65b0\u5b8c\u4e4b\u540e\u603b\u662f\u4f1a\u6709\u4e00\u4e2a\u70b9\u7684\u503c\u53d8\u51c6\uff0c\u5c31\u662f\u53f3\u4fa7\u533a\u95f4\u7684\u6700\u5de6\u70b9\uff0c\u5df2\u7ecf\u662f\u51c6\u7684\u4e86\uff0c\u56e0\u4e3a\u6ca1\u6709\u70b9\u53ef\u4ee5\u66f4\u65b0\u5b83\u4e86\n\n\u53e6\u5916\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u70b9i\u63a5\u4e0b\u6765\u8fd8\u4f1a\u518d\u5206\u6cbb\u53f3\u7684\u8fc7\u7a0b\u4e2d\u518d\u6b21\u88ab\u66f4\u65b0log\u6b21\uff0c\u76f4\u5230\u4ed6\u6210\u4e3a\u67d0\u4e2a\u53f3\u4fa7\u533a\u95f4\u7684\u6700\u5de6\u70b9\uff0c\u6b64\u65f6\u4ed6\u5c31\u51c6\u4e86\uff0c\u800c\u66f4\u65b0\u5b83\u7684log\u4e2a\u533a\u95f4\uff0c\u521a\u597d\u662f\u6309\u7ebf\u6bb5\u6811\u65b9\u5f0f\u5256\u5206\u51fa\u6765\u7684log\u4e2a\u533a\u95f4\u3002\u56e0\u6b64\u5f00\u5934\u90a3\u4e2a\u5965\u5999\u91cd\u91cd\u7684\u65b9\u5f0f\uff0c\u4e0d\u8fc7\u662f\u9012\u5f52\u5b9a\u4e49\u800c\u5df2\uff0c\u4e00\u65e6\u8fd9\u4e2a\u70b9\u6210\u4e3a\u4e86\u53f3\u4fa7\u6700\u5de6\u70b9\uff0c\u5c31\u4f1a\u53d8\u51c6\uff0c\u6210\u4e3a\u63a5\u4e0b\u6765\u7684\u5de6\u4fa7\u533a\u95f4\u3002\n\n\u5206\u6cbb\u6cd5\u548cdp\u7684\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u975e\u5e38\u50cf\uff0c\u90fd\u662f\u4e0d\u6539\u53d8\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7a7a\u95f4\u4f18\u5316\uff0c**\u901a\u8fc7\u65f6\u95f4\u4e0a\u751f\u6210\u4e00\u68f5\u5206\u6cbb\u6811**\uff0c\u53ef\u4ee5\u770b\u51fa\u6765\uff0ccdq\u5206\u6cbb\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e**\u7ebf\u6bb5\u6811\u4e0a\u8dd1\u4e00\u904d\u4e2d\u5e8f\u904d\u5386\uff0c**\u4ee3\u66ff\u4e86\u5e73\u5e38\u6811\u5957\u6811\u7684\u5916\u5c42\u6811\uff0c\u5f53\u7136\u4e5f\u51cf\u5c11\u4e86\u4ee3\u7801\u96be\u5ea6\uff0c\u6bd4\u5982\u8fd9\u9053\u9898\u5199\u8d77\u6765\u5c31\u8d3c\u77ed\n\n----------------\n\n\n\u5173\u4e8e\u6982\u7387\uff0c\u663e\u7136\u6bcf\u4e2a\u70b9\u7684\u6982\u7387=\u5305\u542b\u4ed6\u7684\u65b9\u6848\u6570/\u603b\u65b9\u6848\u6570\n\n(\u4ee5\u4e0b\u7684\u524d\u8fb9\u548c\u540e\u8fb9\u5747\u6307\u6309\u65f6\u95f4\u6392\u597d\u5e8f\u7684\u5bfc\u5f39\u5e8f\u5217)\n\n\u53e6\u4e00\u4e2a\u663e\u7136\u7684\u4e8b\u5b9e\u662f\uff0c\u5305\u542b\u5b83\u7684\u65b9\u6848\u6570=\u524d\u8fb9\u6700\u957f\u5e8f\u5217\u7684\u65b9\u6848\u6570\\*\u540e\u8fb9\u6700\u957f\u5e8f\u5217\u7684\u65b9\u6848\u6570\n\n\u8fd8\u6709\u4e00\u4e2a\u663e\u7136\u7684\u4e8b\u5b9e\u662f\uff0c\u5b83\u7684\u957f\u5ea6=\u524d\u8fb9\u6700\u957f\u5e8f\u5217\u7684\u957f\u5ea6+\u540e\u8fb9\u6700\u957f\u5e8f\u5217\u7684\u957f\u5ea6-1\n\ndp\u65b9\u6848\u6570\u7684\u65f6\u5019\uff0c\u5982\u679cmax\u53d8\u4e86\uff0c\u5c31\u8981\u91cd\u65b0\u8d4b\u503c\uff0c\u5982\u679c\u76f8\u7b49\u7684\u8bdd\uff0c\u5c31\u8981\u76f8\u52a0\n\n\u603b\u65b9\u6848\u6570\u7684\u8bdd\uff0c\u6211\u4eec\u53d1\u73b0\u6240\u6709\u7684\u70b9\u524d\u65b9\u6848\\*\u540e\u65b9\u6848\u518d\u76f8\u52a0\u7684\u8bdd\u4f1a\u91cd\u590d\u7edf\u8ba1\uff0c\u6240\u4ee5\u6211\u4eec\u4eec\u53ea\u662f\u679a\u4e3e\u7ed3\u5c3e\u70b9(\u6216\u5f00\u5934\u70b9)\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u8dd1\u4e24\u8fb9cdq\u4e00\u904d\u6b63\u7740\u8dd1\u4e00\u8fb9\u5012\u7740\u8dd1\uff0c\u6700\u540e\u5229\u7528\u4e24\u8fb9\u7684\u7ed3\u679c\u7b97\u51fa\u7b54\u6848\u5373\u53ef\n _\n(\u5e94\u8be5\u77e5\u9053\u53ea\u6709\u6700\u5927\u503c\u624d\u80fd\u8fdb\u5165\u7b97\u6982\u7387\u8fd9\u4e2a\u73af\u8282\u5427\u2026\u2026\u5426\u5219\u76f4\u63a5\u8f93\u51fa0\u5c31\u597d\u4e86)_ \n\n\n\n------------\n\n# \u5751\n\n\u8fd9\u91cc\u6211\u7a81\u53d1\u5947\u60f3\uff0c\u60f3\u8981\u628a\u5c0f\u4e8e\u53f7\u5168\u90e8\u6539\u6210\u5927\u4e8e\u53f7\u8dd1\u7b2c\u4e8c\u904dcdq\u8fd9\u6837\u5c31\u53ea\u7528\u5199\u4e00\u4e2acdq\u4e86\u2026\u2026\n\n\u6240\u4ee5\u6211\u673a(zhi)\u667a(zhang)\u7684\u5728cmp\u4e2d\u52a0\u4e86\u8fd9\u4e48\u4e00\u53e5\n\n```c\nreturn (a.v<b.v)^tr;\n\n```\n\u7136\u540e\u628atr\u6539\u62101\u5c31\u53ef\u4ee5\u5c0f\u4e8e\u53d8\u5927\u4e8e\u4e86\uff0c\u4ee3\u7801\u4ec0\u4e48\u7684\u5b8c\u5168\u4e0d\u7528\u6539\n\n\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8db3\u591f\u719f\u7ec3\u7684\u8bdd\uff0c\u4f1a\u53d1\u73b0\u5c0f\u4e8e\u53f7\u53d6\u53cd\uff0c\u662f**\u5927\u4e8e\u7b49\u4e8e**\uff0c\u4e0d\u662f\u5927\u4e8e\uff01\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5927\u4e8e\u7b49\u4e8e/\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u73a9\u610f\uff0c\u4f20\u5230sort\u91cc\u662f\u4f1a\u6302\u6389\u7684\u2026\u2026\u4f1are\u7684\n\n( _\u771f\u662f\u4ee4\u4eba\u667a\u7184\u7684\u64cd\u4f5c)_ \n\n\u89e3\u51b3\u65b9\u6848\uff1a\u6362stable_sort\u6216\u8005\u8001\u8001\u5b9e\u5b9e\u5199\u4e00\u4e2a\u6839\u636etr\u5224\u5b9a\u7684cmp\n\n\u53e6\u4e00\u4e2a\u5751\u5c31\u662f\u4e0d\u8981\u5f00longlong\uff0c\u5f00\u4e86long long\u8fd8\u662f\u4f1a\u4e58\u7206/\u52a0\u7206\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5f00double\uff0c\u56e0\u4e3adouble\u7684\u672c\u8d28\u662f\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0c\u5f53\u6570\u53d8\u5f97\u8fc7\u5927\u65f6\u4f1a**\u727a\u7272\u7cbe\u5ea6\u6765\u6362\u53d6\u503c\u57df\u5927\u5c0f**(\u6bd4\u5982\u8868\u793a\u4e00\u4e2a233\\*10^1\u6b64\u65f6\u4f60\u52a01\u662f\u4e0d\u4f1a\u6709\u53cd\u5e94\u7684)\u6240\u4ee5\u4e58\u7206\u4ec0\u4e48\u7684\u4e0d\u5b58\u5728\u7684\u2026\u2026\n\n\u4e0a\u4ee3\u7801~(\u5176\u5b9e\u975e\u5e38\u77ed233)\n\n```c\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef double db;const int N=1e6+10;\nstruct data{int h;int v;int p;int ma;db ca;}a[2][N];int n;bool tr;//\u4e0d\u8981\u53d6\u53cd\uff01 \ninline bool cmp1(const data& a,const data& b){if(tr)return a.h>b.h;else return a.h<b.h;}\ninline bool cmp2(const data& a,const data& b){if(tr)return a.v>b.v;else return a.v<b.v;}\ninline bool cmp3(const data& a,const data& b){if(tr)return a.p<b.p;else return a.p>b.p;}\ninline bool cmp4(const data& a,const data& b){return a.v==b.v;}\nstruct treearray//\u6811\u72b6\u6570\u7ec4\uff0c\u8bb0\u5f97\u518d\u7ef4\u62a4\u4e00\u4e2a\u65b9\u6848\u6570 \n{\n    int ma[2*N];db ca[2*N];\n    inline void c(int x,int t,db c)//\u4fee\u6539 \n    {for(;x<=n;x+=x&(-x)){if(ma[x]==t){ca[x]+=c;}else if(ma[x]<t){ca[x]=c;ma[x]=t;}}}\n    inline void d(int x){for(;x<=n;x+=x&(-x)){ma[x]=0;ca[x]=0;}}//\u5220\u9664 \n    inline void q(int x,int& m,db& c)//\u8be2\u95ee(\u5176\u5b9e\u8fd9\u91cc\u4e0d\u662f\u6545\u610f\u53ebcdq\u7684) \n    {for(;x>0;x-=x&(-x)){if(ma[x]==m){c+=ca[x];}else if(m<ma[x]){c=ca[x];m=ma[x];}}}\n}ta;int rk[2][N];\ninline void solve(int l,int r,int t)//\u5206\u6cbb \n{\n    if(r-l==1){return;}int mid=(l+r)/2;\n    solve(l,mid,t);sort(a[t]+mid+1,a[t]+r+1,cmp1);int p=l+1;\n    for(int i=mid+1;i<=r;i++)//\u7ef4\u62a4\u53cc\u6307\u9488 \uff0c\u8bb0\u5f97\u5224\u76f8\u7b49 \n    {\n        for(;(cmp1(a[t][p],a[t][i])||a[t][p].h==a[t][i].h)&&p<=mid;p++)\n        {ta.c(a[t][p].v,a[t][p].ma,a[t][p].ca);}db c=0;int m=0;ta.q(a[t][i].v,m,c);\n        if(a[t][i].ma<m+1){a[t][i].ma=m+1;a[t][i].ca=c;}else if(a[t][i].ma==m+1){a[t][i].ca+=c;}\n    }for(int i=l+1;i<=mid;i++){ta.d(a[t][i].v);}//\u8bb0\u5f97\u56de\u64a4 \n    sort(a[t]+mid,a[t]+r+1,cmp3);solve(mid,r,t);//\u8fd9\u91cc\u6ce8\u610f\uff0c\u5927\u529bsorth\u540e\u8981sort\u56de\u6765\uff0c\u4f60\u540e\u8fb9\u8fd8\u6ca1\u89e3\u51b3\u5462 \n    sort(a[t]+l+1,a[t]+r+1,cmp1);//\u6700\u540e\u6309h\u6392\u597d\u5e8f \n}\ninline void ih(int t)//\u8fd9\u91cc\u662f\u79bb\u6563\u5316 \n{\n    sort(a[t]+1,a[t]+n+1,cmp2);rk[t][1]=1;//\u8fd9\u6837\u4e24\u6b21\u6811\u72b6\u6570\u7ec4\u90fd\u53ef\u4ee5\u53ea\u67e5\u524d\u7f00\u4e86 \n    for(int i=2;i<=n;i++){rk[t][i]=(cmp4(a[t][i],a[t][i-1]))?rk[t][i-1]:i;}\n    for(int i=1;i<=n;i++){a[t][i].v=rk[t][i];}sort(a[t]+1,a[t]+n+1,cmp3);\n    for(int i=1;i<=n;i++){a[t][i].ma=1;a[t][i].ca=1;}//\u8d4bdp\u521d\u503c \n}int len;db ans;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&a[0][i].h,&a[0][i].v);a[0][i].p=i;\n        a[1][i].h=a[0][i].h;a[1][i].v=a[0][i].v;a[1][i].p=i;\n    }ih(0);solve(0,n,0);tr=1;ih(1);solve(0,n,1);tr=1;//\u4e24\u8fb9cdq \n    sort(a[0]+1,a[0]+n+1,cmp3);sort(a[1]+1,a[1]+n+1,cmp3);//\u7edf\u8ba1\u7b54\u6848\u8981sort\u56de\u6765 \n    for(int i=1;i<=n;i++){len=max(len,a[0][i].ma);}printf(\"%d\\n\",len);\n    for(int i=1;i<=n;i++){if(a[0][i].ma==len){ans+=a[0][i].ca;}}\n    for(int i=1;i<=n;i++)//\u7136\u540e\u5f3a\u884c\u8ba1\u7b97\u671f\u671b\u5c31\u597d\u4e86 \n    {\n        if(a[0][i].ma+a[1][i].ma-1==len){printf(\"%.5lf \",(a[0][i].ca*a[1][i].ca)/ans);}\n        else {printf(\"0.00000 \");}\n    }return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n\n\n",
        "postTime": 1520492745,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2487 \u3010[SDOI2011]\u62e6\u622a\u5bfc\u5f39\u3011"
    },
    {
        "content": "### cdq\u5206\u6cbb\u4f18\u5316dp\n\n[\u5bfc\u5f39\u62e6\u622a](https://www.luogu.com.cn/problem/P1020)\u62d3\u5c55\u7248\n\n\u4e0e\u5927\u5bb6\u90fd\u505a\u8fc7\u7684\u5165\u95e8\u7ea7\u4e60\u9898\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u9898\u4e0d\u4ec5\u6709\u9ad8\u5ea6\u8fd8\u6709\u901f\u5ea6\n\n\u4e5f\u5c31\u662f\u662f\u4e00\u4e2a**\u4e09\u7ef4**\u95ee\u9898(\u5206\u522b\u662f\u9ad8\u5ea6\uff0c\u901f\u5ea6\uff0c\u65f6\u95f4\u5373\u8f93\u5165\u987a\u5e8f\uff0c\u4e0b\u9762\u6211\u4f1a\u5206\u522b\u7528x,y,z\u8868\u793a\u8fd9\u4e09\u7ef4)\n\n\u6211\u4eec\u8003\u8651\u501f\u9274\u53ea\u6709\u4e8c\u7ef4\u65f6\u7684\u601d\u8def\n\n\u8fd9\u4e00\u9053\u9898\u7684\u7b2c\u4e00\u95ee\u5176\u5b9e\u5c31\u662f\u8ba9\u6211\u4eec\u6c42\u591a\u4e86\u4e00\u7ef4\u9650\u5236\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\n\n\u800c\u7b2c\u4e8c\u95ee\u662f\u6c42\u6bcf\u679a\u5bfc\u5f39\u88ab\u62e6\u622a\u6389\u7684\u6982\u7387\uff0c\u5373\u6bcf\u679a\u5bfc\u5f39\u5728\u6240\u6709\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u65b9\u6848\u91cc\u7684\u51fa\u73b0\u6b21\u6570/\u603b\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u65b9\u6848\u6570\n\n\u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5957\u8def\u7684\u5b9a\u4e49\u4e00\u4e0bdp\n\n\u5b9a\u4e49\uff1a\n\ndp1[i]\u8868\u793a\u4ee5\u7b2ci\u679a\u5bfc\u5f39\u4e3a\u7ed3\u5c3e\u7684\u65b9\u6848\u4e2d\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\n\ndp2[i]\u8868\u793a\u4ee5\u7b2ci\u679a\u5bfc\u5f39\u4e3a\u5f00\u5934\u7684\u65b9\u6848\u4e2d\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\n\nf1[i]\u8868\u793a\u4ee5\u7b2ci\u679a\u5bfc\u5f39\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u65b9\u6848\u603b\u6570\n\nf2[i]\u8868\u793a\u4ee5\u7b2ci\u679a\u5bfc\u5f39\u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u65b9\u6848\u603b\u6570\n\n\u90a3\u4e48\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u5373max{dp1[i]}\u6216\u8005max{dp2[i]}\n\n\u7b2c\u4e8c\u95ee\u7b2ci\u679a\u5bfc\u5f39\u7684\u7b54\u6848\u5373f1[i]*f2[i]\uff08\u4e58\u6cd5\u539f\u7406\uff09\u4e14dp1[i]+dp2[i]=ans-1,ans\u4e3a\u7b2c\u4e00\u95ee\u7b54\u6848\uff0c\u51cf1\u662fi\u5bfc\u5f39\u88ab\u8ba1\u7b97\u4e86\u4e24\u6b21\n\n\u6545\u6211\u4eec\u53ea\u8981\u628adp\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5c31\u7ed3\u675f\u4e86\n\n\u663e\u7136O(n^2)\u7684dp\u7c7b\u6bd4\u5bfc\u5f39\u62e6\u622a\u80fd\u5f88\u5bb9\u6613\u7684\u5f97\u51fa\n\n```cpp\n//dp1\u7684\u4ee3\u7801\uff0cdp2\u5bf9\u79f0\u4e00\u4e0b\u5bb9\u6613\u5f97\u5230\n//\u8fd9\u91cc\u9ed8\u8ba4z\u6309\u4ece\u5c0f\u5230\u5927\u6392\u597d\u4e86\nfor(int i=1;i<=n;i++){\n\tfor(int j=1;j<i;j++){\n\t\tif(a[i].x<=a[j].x&&a[i].y<=a[j].y){\n            if(dp1[i]==dp1[j]+1)\n                f1[i]+=f1[j];\n            else if(dp1[i]<dp1[j]+1){\n\t\t\t\tdp1[i]=dp1[j]+1;\n                f1[i]=f1[j];\n            }\n        }\n    }\n}\n```\n\n\u8fd9\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u7684\u76f8\u5173\u95ee\u9898\n\n\u6211\u4eec\u8003\u8651\u7528cdq\u5206\u6cbb\u6765\u4f18\u5316dp\n\n\u8fd9\u91cc\u7531\u4e8e\u8981\u7528\u5230\u6811\u72b6\u6570\u7ec4\uff0c\u6211\u61d2\u5f97\u79bb\u6563\u5316x\u548cy\u6240\u4ee5\u6211\u7528z\u641e\u6811\u72b6\u6570\u7ec4\uff0c\u7528\u7b2c\u4e00\u7ef4\u6392\u5e8f\n\n\u6211\u4eec\u628a\u6309x\u6392\u597d\u5e8f\u540e\u53d1\u73b0\u53ea\u80fd\u5de6\u8fb9\u7684\u5bfc\u5f39\u7684dp\u503c\u8d21\u732e\u7ed9\u53f3\u8fb9\n\n\u8fd9\u91cc\u6211\u4eec\u5e94\u8be5\u5148\u628a\u5de6\u8fb9\u7684dp\u503c\u90fd\u7b97\u5b8c\u4e86\u518d\u53bb\u66f4\u65b0\u53f3\u8fb9\u7684\n\n**\u6545\u8fd9\u91cc\u7684\u9012\u5f52\u987a\u5e8f\u5e94\u662f\u5de6\u4e2d\u53f3**\n\n\u8fd9\u4e2a\u5730\u65b9\u7279\u522b\u6ce8\u610f\n\n```cpp\nbool cmp1(node i,node j){\n\treturn i.x==j.x?(i.y==j.y?i.z<j.z:i.y>j.y):i.x>j.x;\n}\nbool cmp2(node i,node j){\n\treturn i.x==j.x?(i.y==j.y?i.z<j.z:i.y<j.y):i.x<j.x;\n}\nbool cmp3(node i,node j){\n\treturn i.y>j.y;\n}\nbool cmp4(node i,node j){\n\treturn i.y<j.y;\n}\n//\u987a\u5e8f\u4ec0\u4e48\u7684\u53ef\u4ee5\u81ea\u5df1\u641e\u5b9a\nvoid cdq(int l,int r,int opt){//opt==1\u662f\u8ba1\u7b97dp1\uff0c2\u662f\u8ba1\u7b97dp2\n\tif(l==r)return ;\n\tint mid=l+((r-l)>>1);\n\tcdq(l,mid,opt);//\u5148\u628a\u5de6\u8fb9\u7b97\u597d\n\tif(opt==1){\n\t\tsort(a+l,a+mid+1,cmp3);\n\t\tsort(a+mid+1,a+r+1,cmp3);\n\t}\n\telse{\n\t\tsort(a+l,a+mid+1,cmp4);\n\t\tsort(a+mid+1,a+r+1,cmp4);\n\t}\n\tmerge_sort(l,r,opt);//\u628a\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\u52a0\u5230\u53f3\u8fb9\u4e0a\n    //\u8fd9\u6837\u5199\u800c\u4e0d\u662f\u5148\u53bb\u9012\u5f52\u53f3\u8fb9\u4e3b\u8981\u662f\u6015\u53f3\u8fb9\u7684\u5de6\u534a\u90e8\u5206\u8fd8\u6bcf\u52a0\u4e0a\u5de6\u8fb9\u7684\u8d21\u732e\u5c31\u53bb\u7b97\u5bf9\u53f3\u8fb9\u53f3\u534a\u90e8\u5206\u7684\u8d21\u732e\u4e86\n\tif(opt==1)sort(a+mid+1,a+r+1,cmp1);\n\telse sort(a+mid+1,a+r+1,cmp2);\n    //\u8bb0\u5f97\u6392\u56de\u6765\n\tcdq(mid+1,r,opt);\n\treturn ;\n}\n```\n\n\u7136\u540e\u6ce8\u610f\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u65f6\u7b97f\u4f1a\u6bd4\u8f83\u9ebb\u70e6\n\n\u56e0\u4e3af\u9700\u8981\u6240\u6709\u65b9\u6848\u7684\u548c\n\n\u653e\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=50005;\nstruct node{\n\tint x,y,z;\n\tint dp;\n\tdouble f;\n}a[maxn];\nint n;\nint tree1[maxn];\ndouble tree2[maxn];\nint dp1[maxn],dp2[maxn];\ndouble f1[maxn],f2[maxn];\nint read(){\n\tint x=0,y=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x*y;\n}\nbool cmp1(node i,node j){\n\treturn i.x==j.x?(i.y==j.y?i.z<j.z:i.y>j.y):i.x>j.x;\n}\nbool cmp2(node i,node j){\n\treturn i.x==j.x?(i.y==j.y?i.z<j.z:i.y<j.y):i.x<j.x;\n}\nbool cmp3(node i,node j){\n\treturn i.y>j.y;\n}\nbool cmp4(node i,node j){\n\treturn i.y<j.y;\n}\nint lowbit(int x){\n\treturn x&-x;\n}\nvoid update(int x,int dp,double f){\n\twhile(x<=n){\n\t\tif(tree1[x]<dp){\n\t\t\ttree1[x]=dp;\n\t\t\ttree2[x]=f;\n\t\t}\n\t\telse if(tree1[x]==dp)\n\t\t\ttree2[x]+=f;\n\t\tx+=lowbit(x);\n\t}\n\treturn ;\n}\nint query1(int x){\n\tint ans=0;\n\twhile(x){\n\t\tans=max(ans,tree1[x]);\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\ndouble query2(int x,int dp){\n\tdouble ans=0;\n\twhile(x){\n\t\tif(tree1[x]==dp)ans+=tree2[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\nvoid del(int x){\n\twhile(x<=n){\n\t\ttree1[x]=tree2[x]=0;\n\t\tx+=lowbit(x);\n\t}\n\treturn ;\n}\nbool check(int p,int q,int opt){\n\tif(opt==1)return a[p].y>=a[q].y;\n\treturn a[p].y<=a[q].y;\n}\nvoid merge_sort(int l,int r,int opt){\n\tint mid=l+((r-l)>>1);\n\tint p=l,q=mid+1;\n\twhile(p<=mid&&q<=r){\n\t\tif(check(p,q,opt)){\n\t\t\tupdate(a[p].z,a[p].dp,a[p].f);\n\t\t\tp++;\n\t\t}\n\t\telse{\n\t\t\tint val=query1(a[q].z)+1;\n\t\t\tif(a[q].dp<val){\n\t\t\t\ta[q].dp=val;\n\t\t\t\ta[q].f=query2(a[q].z,val-1);\n\t\t\t}\n\t\t\telse if(a[q].dp==val)\n\t\t\t\ta[q].f+=query2(a[q].z,val-1);\n\t\t\tq++;\n\t\t}\n\t}\n\twhile(q<=r){\n\t\tint val=query1(a[q].z)+1;\n\t\tif(a[q].dp<val){\n\t\t\ta[q].dp=val;\n\t\t\ta[q].f=query2(a[q].z,val-1);\n\t\t}\n\t\telse if(a[q].dp==val)\n\t\t\ta[q].f+=query2(a[q].z,val-1);\n\t\tq++;\n\t}\n\tfor(int i=l;i<p;i++)del(a[i].z);\n\treturn ;\n}\nvoid cdq(int l,int r,int opt){\n\tif(l==r)return ;\n\tint mid=l+((r-l)>>1);\n\tcdq(l,mid,opt);\n\tif(opt==1){\n\t\tsort(a+l,a+mid+1,cmp3);\n\t\tsort(a+mid+1,a+r+1,cmp3);\n\t}\n\telse{\n\t\tsort(a+l,a+mid+1,cmp4);\n\t\tsort(a+mid+1,a+r+1,cmp4);\n\t}\n\tmerge_sort(l,r,opt);\n\tif(opt==1)sort(a+mid+1,a+r+1,cmp1);\n\telse sort(a+mid+1,a+r+1,cmp2);\n\tcdq(mid+1,r,opt);\n\treturn ;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].x=read();a[i].y=read();a[i].z=i;\n\t\ta[i].dp=1;a[i].f=1;\n\t}\n\tsort(a+1,a+n+1,cmp1);\n\tcdq(1,n,1);\n\tint ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tdp1[a[i].z]=a[i].dp;\n\t\tf1[a[i].z]=a[i].f;\n\t\tans=max(ans,dp1[a[i].z]);\n\t}\n\tprintf(\"%d\\n\",ans);\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].z=n-a[i].z+1;\n\t\ta[i].dp=1;a[i].f=1;\n\t}\n\tsort(a+1,a+n+1,cmp2);\n\tcdq(1,n,2);\n\tdouble k=0;\n\tfor(int i=1;i<=n;i++){\n\t\tdp2[n-a[i].z+1]=a[i].dp;\n\t\tf2[n-a[i].z+1]=a[i].f;\n\t\tif(dp2[n-a[i].z+1]==ans)k+=f2[n-a[i].z+1];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(dp1[i]+dp2[i]==ans+1)\n\t\t\tprintf(\"%.5lf \",f1[i]*f2[i]/k);\n\t\telse\n\t\t\tprintf(\"0.00000 \");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1587224706,
        "uid": 98527,
        "name": "juju527",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2487 \u3010[SDOI2011]\u62e6\u622a\u5bfc\u5f39\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P2487)\n\n~~\u666e\u53ca\u7ec4\u9898\u76ee~~\n\n\u8fd9\u9053\u9898\u8ba9\u6211\u91cd\u65b0\u8ba4\u8bc6\u4e86CDQ\u8ba1\u7b97\u987a\u5e8f\u7684\u95ee\u9898\n\n\u7b2c\u4e00\u95ee\u6c42\u7684\u5c31\u662f\u4e8c\u7ef4\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u8bbe$f1_i$\u8868\u793a\u4ee5$i$\u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c$g1_i$\u8868\u793a\u4ee5$i$\u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u65b9\u6848\u6570\u3002\u90a3\u4e48\u8f6c\u79fb\u4e3a\n\n$f1_i=\\max_{j=1}^{i-1}f1_j+1(h_i\\leq h_j,v_i\\leq v_j)$\n\n$g1_i=\\sum_{j=1}^{i-1}g1_j(f1_i=f1_j+1,h_i\\leq h_j,v_i\\leq v_j)$\n\n\u628aDP\u7684\u8fc7\u7a0b\u8f6c\u6210\u79bb\u7ebf\uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\u3002\u8bb0\u4e09\u5143\u7ec4$(pos,h,v)$\uff0c$pos$\u662f\u4f4d\u7f6e\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u65f6\u95f4\uff09\uff0c\u7528CDQ\u89e3\u51b3\u5c31\u53ef\u4ee5\u4e86\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u6570\u636e\u7ed3\u6784\u652f\u6301\uff1a\u4fee\u6539\u5355\u70b9\u7684\u503c\uff0c\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u4ee5\u53ca\u6700\u5927\u503c\u5bf9\u5e94\u7684\u6570\u91cf$(g_i)$\uff0c\u4e0d\u59a8\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u90a3\u4e48\u6700\u591a\u80fd\u62e6\u622a\u7684\u5bfc\u5f39\u6570$ans=\\max_{i=1}^{n}f1_i$\uff0c\u603b\u65b9\u6848\u6570\u4e3a$\\sum_{i=1}^{n}g1_i[f1_i=ans]$\n\n\u81f3\u4e8e\u7b2c\u4e8c\u95ee\u5462\uff1f\n\n\u5148\u8bbe$f2_i$\u8868\u793a\u4ee5$i$\u5f00\u5934\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c$g2_i$\u8868\u793a\u4ee5$i$\u5f00\u5934\u7684\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u65b9\u6848\n\n\u9996\u5148\uff1a\u4e00\u4e2a\u5bfc\u5f39\u88ab\u62e6\u622a\u7684\u6982\u7387$=$\u5305\u542b\u8fd9\u4e2a\u5bfc\u5f39\u7684\u65b9\u6848\u6570$/sum$\u3002\u800c\u4e00\u4e2a\u5bfc\u5f39\u6709\u53ef\u80fd\u5305\u542b\u5728\u65b9\u6848\u4e2d\uff0c\u5f53\u4e14\u4ec5\u5f53$f1_i+f2_i-1=ans$\uff0c\u5305\u542b\u5b83\u7684\u65b9\u6848\u79cd\u6570\u5c31\u662f$g1_i\\times g2_i$\uff0c\u6240\u4ee5\u5f97\u5230\uff1a\n\n$P(i)=\\frac{g1_i\\times g2_i}{sum}[f1_i+f2_i-1=ans]$\n\n\u81f3\u4e8e\u8ba1\u7b97$f2$\u548c$g2$\uff0c\u628a\u539f\u5e8f\u5217\u5012\u8fc7\u6765\uff0c\u5e76\u53d6\u8d1f\u6570\u5c31\u53ef\u4ee5\u7528\u540c\u4e00\u9897\u7ebf\u6bb5\u6811\u4e86\u3002\n\n\u6ce8\u610f$v$\u6216$h$\u7528\u6570\u636e\u7ed3\u6784\u8ba1\u7b97\u7684\u90a3\u4e2a\u8981\u79bb\u6563\u5316\n\n\u601d\u8def\u5176\u5b9e\u662f\u633a\u7b80\u5355\u7684\uff0c\u91cd\u70b9\u662f\u4ee5\u4e0b\u90e8\u5206\uff1a\n\n\u5728\u7ecf\u8fc7\u8c03\u4ee3\u7801$5h$\u540e\uff0c\u53d1\u73b0\u6700\u91cd\u8981\u7684\u9519\u8bef\u5176\u5b9e\u5728\u4e8eCDQ\u7684\u8ba1\u7b97\u987a\u5e8f\u95ee\u9898\n\n\u4e0b\u9762\u5c06\u4ee5\u6211\u8c03\u4ee3\u7801\u7684\u5fc3\u8def\u5386\u7a0b\u6765\u5c55\u73b0\u8fd9\u4e2a\u95ee\u9898\uff1a\n\n\u6ce8\u610f\uff1a\u6211\u4e00\u5f00\u59cb\u7684\u5199\u6cd5\u662f\u7528\u5f52\u5e76\u6392\u5e8f\u5bf9$h$\u8fdb\u884c\u6392\u5e8f\uff08\u7528\u5230\u8f85\u52a9\u7684\u6570\u7ec4\uff09\uff0c$v$\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\n\n- \u7b2c\u4e00\u9636\u6bb5\uff1a\u8ba1\u7b97\u987a\u5e8f\n\n\u4e00\u5f00\u59cb\u5b66CDQ\u7684\u65f6\u5019\uff0c\u770b\u5230\u7684\u90fd\u662f\u8fd9\u6837\u7684\uff1a\n\n _\u9012\u5f52\u8ba1\u7b97\u5de6\u534a\u90e8\u5206_ \n\n _\u8ba1\u7b97\u5de6\u534a\u90e8\u5206\u5bf9\u53f3\u534a\u90e8\u5206\u7684\u8d21\u732e_ \n\n _\u9012\u5f52\u8ba1\u7b97\u53f3\u8fb9\u90e8\u5206_ \n \n\u6211\u76f8\u4fe1\u5f88\u591a\u4eba\u5b66CDQ\u770b\u7684\u7b2c\u4e00\u9053\u9898\u662f\u5f52\u5e76\u6392\u5e8f\u8ba1\u7b97\u9006\u5e8f\u5bf9\u5427\uff1f\u800c\u6211\u4eec\u5728\u5199\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u90fd\u662f\u5148\u6392\u5e8f\u597d$[l,mid],[mid+1,r]$\uff0c\u7136\u540e\u518d\u6392\u5e8f$[l,r]$\u7684\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u9006\u5e8f\u5bf9\u3002\u8fd9\u5e76\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u518d\u52a0\u4e0a\u672c\u4eba\u4e4b\u524d\u505a\u7684\u51e0\u9053CDQ\u7684\u95ee\u9898\uff08[P3810](https://www.luogu.com.cn/problem/P3810) [P4169](https://www.luogu.com.cn/problem/P4169)\uff09\u8fd9\u6837\u5199\u90fd\u4e0d\u4f1a\u6709\u9505\u3002\u5c31\u662f\u5148\u8ba1\u7b97\u5de6\u53f3\u4e24\u4e2a\u90e8\u5206\uff0c\u518d\u8ba1\u7b97\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\u3002\n\n\u7136\u800c\u5728\u8fd9\u9053\u9898\u4e2d\u8fd9\u662f\u9519\u7684\uff0c\u9012\u5f52\u5230$[l,mid],[mid+1,r]$\u4e2d\u4f1a\u8ba1\u7b97\u5b83\u5185\u90e8\u7684\u76f8\u4e92\u8d21\u732e\uff0c\u7136\u540e\u901a\u8fc7$[l,mid]$\u8ba1\u7b97\u5bf9$[mid+1,r]$\u7684\u8d21\u732e\u3002\u4f46\u4f1a\u6709\u8fd9\u79cd\u60c5\u51b5\uff0c$[l,mid]$\u5bf9$[mid+1,r]$\u7684$a$\u8ba1\u7b97\u8d21\u732e\uff0c\u7136\u540e$a$\u5bf9$[mid+1,r]$\u7684$b$\u4f5c\u51fa\u8d21\u732e\u3002\u8fd9\u6837\u5b50\uff0c\u6309\u7167\u4e0a\u9762\u90a3\u79cd\u8ba1\u7b97\u65b9\u6cd5\u5c31\u4f1a\u6709\u9057\u6f0f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c**\u53ea\u6709\u5f53\u53f3\u8fb9\u4f5c\u51fa\u7684\u8d21\u732e\u4e0d\u4f1a\u53d7\u5230\u5de6\u8fb9\u5f71\u54cd\u65f6\u624d\u80fd\u5148\u8ba1\u7b97\u5de6\u53f3\u90e8\u5206**\n\n\u6240\u4ee5\u6211\u4eec\u8c03\u6574\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5148\u9012\u5f52\u5230$[l,mid]$\u4e2d\uff0c\u4f46\u6211\u4eec\u5728\u8ba1\u7b97\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\u65f6\uff0c\u7c7b\u4f3c\u5f52\u5e76\u6392\u5e8f\uff0c\u8981\u4fdd\u8bc1\u4e24\u8fb9\u7684$h$\u90fd\u662f\u975e\u4e25\u683c\u9012\u51cf\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u624b\u52a8\u5bf9\u53f3\u534a\u90e8\u5206\u6392\u5e8f$(sort)$\n\n- \u6570\u7ec4\u95ee\u9898\n\n\u8fd9\u4e2a\u95ee\u9898\u4e0e\u4e2a\u4eba\u7684\u5199\u6cd5\u6709\u5173\u5427\n\n\u53ef\u80fd\u53ea\u6709\u6211\u90a3\u4e48\u50bb(\u2299_\u2299)?\n\n\u6309\u7167\u4e0a\u9762\u7684\uff0c\u8ba1\u7b97\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\u662f\u7c7b\u4f3c\u5f52\u5e76\u6392\u5e8f\u4e00\u6837\u7684\u8fc7\u7a0b\uff0c\u662f\u7528\u4e24\u4e2a\u6307\u9488\u5728\u4e24\u4e2a\u90e8\u5206\u626b\uff0c\u628a\u8f83\u5927\u7684\u90a3\u4e00\u4e2a\u653e\u5230\u6570\u7ec4\u91cc\uff08\u4e0d\u59a8\u8bbe\u4e3a$w$\uff09\uff0c\u7136\u540e\u518d\u7528$w$\u8986\u76d6\u539f\u6570\u7ec4\u3002\u8fd9\u6837\u6392\u5e8f\uff0c**\u6709\u53ef\u80fd\u4f1a\u8ba9\u53f3\u534a\u90e8\u5206\u7684\u6392\u5230\u524d\u9762\u53bb**\uff0c\u8fd9\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u4f46\u95ee\u9898\u662f\uff0c\u6211\u4eec\u8981\u8ba1\u7b97\u53f3\u8fb9\u5185\u90e8\u81ea\u8eab\u7684\u8d21\u732e\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u80fd\u63d0\u524d\u7ed9\u5b83\u6392\u597d\u5e8f\uff0c\u4f46\u53c8\u8981\u5148\u8ba1\u7b97\u5de6\u53f3\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u53ea\u80fd\u5f00\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\uff08\u8bb0\u4e3a$tmp$\uff09\u3002\u5bf9\u4e8e\u5de6\u534a\u90e8\u5206\u9012\u5f52\u56de\u6765\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\uff0c\u53f3\u534a\u90e8\u5206\u53ea\u80fd\u5bf9$tmp$\u624b\u52a8\u6392\u5e8f\u3002\u4e8e\u6b64\u540c\u65f6\uff0c\u4e5f\u8bf4\u660e\u4e86\uff0c$w$\u8986\u76d6\u539f\u6570\u7ec4\u7684\u6b65\u9aa4\u5e94\u8be5\u653e\u5728\u6700\u540e\u8fdb\u884c\u3002\n\n\u5f53\u9012\u5f52\u5230\u53f3\u534a\u90e8\u5206$[mid+1,r]$\u65f6\uff0c\u6211\u4eec\u8c03\u7528\u7684\u662f\u6ca1\u6709\u6392\u8fc7\u5e8f\u7684\u6570\u7ec4\uff0c**\u6240\u4ee5\u53f3\u534a\u90e8\u5206\u4e0d\u7ba1\u600e\u4e48\u53d8\u5316\u90fd\u8fd8\u662f\u4f1a\u5728\u53f3\u534a\u90e8\u5206**\u3002\u6ce8\u610f\u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u4f1a\u4fee\u6539$w$\u6570\u7ec4\uff0c\u5f53\u56de\u6eaf\u5230$[l,r]$\u65f6\uff0c$w$\u6570\u7ec4\u5c31\u88ab\u6539\u5f97\u4e0d\u6210\u4eba\u6837\u4e86\u3002\n\n\u90a3\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u65e2\u7136$w$\u6570\u7ec4\u6709\u95ee\u9898\uff0c\u90a3\u5e72\u8106\u4e0d\u8981$w$\u6570\u7ec4\u4e86\uff0c\u6211\u4eec\u5c31\u8ba1\u7b97\u5de6\u5bf9\u53f3\u8d21\u732e\u7684\u65f6\u5019\u5c31\u53ea\u8ba1\u7b97\u8d21\u732e\uff0c\u800c\u4e0d\u6392\u5e8f\u3002\u5f53\u6700\u540e\u8ba1\u7b97\u5b8c\u53f3\u8fb9\u5185\u90e8\u81ea\u8eab\u8d21\u732e\u540e\uff0c\u518d\u7edf\u4e00\u5bf9$[l,r]$\u6392\u5e8f\u3002\n\n\u5199\u5f97\u6709\u70b9\u4e71\uff0c\u770b\u7740\u4ee3\u7801\u4f1a\u597d\u4e00\u70b9\u3002\u3002\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int N=5e4+10;\nint n,tot;\nint tmp[N];\nstruct ask\n{\n\tint t;//\u4f4d\u7f6e\n\tint x;//\u9ad8\u5ea6\n\tint y;//\u901f\u5ea6\n}num[N],v[N],rt[N];//num\u662f\u4e00\u5f00\u59cb\u8f93\u5165\u548c\u5012\u5e8f\u7684\u6570\u7ec4\uff0cv\u662fCDQ\u4e2d\u4e00\u5c42\u5c42\u6392\u5e8f\u7684\u6570\u7ec4\uff0crt\u662f\u7528\u6765\u6392\u5e8f\u53f3\u534a\u90e8\u5206\u7684\u4e34\u65f6\u6570\u7ec4\nstruct node\n{\n\tint maxn;\n\tdouble cnt;\n\tnode operator + (const node &a) const//\u91cd\u8f7d\u52a0\u53f7\uff0c\u65b9\u4fbf\u8ba1\u7b97\n\t{\n\t\tif(maxn>a.maxn) return *this;\n\t\tif(maxn<a.maxn) return a;\n\t\treturn (node){maxn,cnt+a.cnt};\n\t}\n}f[N][2];\nstruct tree\n{\n\tint left,right;\n\tnode val;\n}t[4*N];\ninline bool cmp1(ask a,ask b)//\u6309\u7167\u4f4d\u7f6e\u6392\u5e8f\n{\n\treturn a.t<b.t;\n}\ninline bool cmp2(ask a,ask b)//\u6309\u7167\u9ad8\u5ea6\u6392\u5e8f\n{\n\treturn a.x>b.x;\n}\ninline void build(int p,int l,int r)//\u7ebf\u6bb5\u6811\u5efa\u6811\n{\n\tt[p].left=l,t[p].right=r;\n\tt[p].val=(node){0,0};\n\tif(l==r) return;\n\tint mid=(t[p].left+t[p].right)/2;\n\tbuild(p*2,l,mid);\n\tbuild(p*2+1,mid+1,r);\n}\ninline void change(int p,int pos,node c)//\u5355\u70b9\u4fee\u6539\n{\n\tif(t[p].left==t[p].right)\n\t{\n\t\tt[p].val=t[p].val+c;\n\t\treturn;\n\t}\n\tint mid=(t[p].left+t[p].right)/2;\n\tif(pos<=mid) change(p*2,pos,c);\n\telse change(p*2+1,pos,c);\n\tt[p].val=t[p*2].val+t[p*2+1].val;\n}\ninline void clear(int p,int pos)//\u628a\u4fee\u6539\u7684\u6e05\u7a7a\n{\n\tt[p].val=(node){0,0};\n\tif(t[p].left==t[p].right) return;\n\tint mid=(t[p].left+t[p].right)/2;\n\tif(pos<=mid) clear(p*2,pos);\n\telse clear(p*2+1,pos);\n}\ninline node query(int p,int l,int r)//\u533a\u95f4\u67e5\u8be2\n{\n\tif(l<=t[p].left&&r>=t[p].right) return t[p].val;\n\tint mid=(t[p].left+t[p].right)/2;\n\tnode ans=(node){0,0};\n\tif(l<=mid) ans=ans+query(p*2,l,r);\n\tif(r>mid) ans=ans+query(p*2+1,l,r);\n\treturn ans;\n}\ninline void CDQ(int l,int r,int stg)\n{\n\tif(l==r){ if(f[v[l].t][stg].maxn==0) f[v[l].t][stg]=(node){1,1}; return; }//\u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u7528+\u53f7\uff0c\u800c\u662f\u5224\u65ad\u662f\u5426\u4e3a0\n\tint mid=(l+r)/2,p=l,q=mid+1;\n\tCDQ(l,mid,stg);//\u9012\u5f52\u8ba1\u7b97\u5de6\u534a\u90e8\u5206\n\tfor(int i=mid+1;i<=r;i++)//\u628a\u53f3\u534a\u90e8\u5206\u7684\u585e\u8fdb\u4e34\u65f6\u6570\u7ec4\n\t\trt[i]=v[i];\n\tsort(rt+mid+1,rt+r+1,cmp2);//\u5bf9\u53f3\u534a\u90e8\u5206\u76f4\u63a5\u6392\u5e8f\n\tfor(int i=l;i<=r;i++)\n\t{\n\t\tif((p<=mid&&v[p].x>=rt[q].x)||q>r) change(1,v[p].y,f[v[p].t][stg]),p++;\n\t\telse \n\t\t{ \n\t\t\tnode cmp=query(1,rt[q].y,tot); \n\t\t\tif(cmp.maxn) cmp.maxn++,f[rt[q].t][stg]=f[rt[q].t][stg]+cmp;//\u4e0d\u4e3a0\u65f6\u624d\u66f4\u65b0\u7b54\u6848\uff0c\u6ce8\u610f\u8981+1\n\t\t\tq++;\n\t\t}\n\t}\n\tfor(int i=l;i<=mid;i++)\n\t\tclear(1,v[i].y);//\u628a\u4fee\u6539\u7684\u6e05\u7a7a\n\tCDQ(mid+1,r,stg);//\u9012\u5f52\u8ba1\u7b97\u53f3\u534a\u90e8\u5206\n\tsort(v+l,v+r+1,cmp2);//\u5bf9\u5f53\u524d\u533a\u95f4[l,r]\u6392\u5e8f\n}\ninline void solve(int stg)\n{\n\tfor(int i=1;i<=n;i++)\n\t\tv[i]=num[i],tmp[i]=num[i].y;\n\tsort(v+1,v+n+1,cmp1);\n\tsort(tmp+1,tmp+n+1);\n\ttot=unique(tmp+1,tmp+n+1)-(tmp+1);\n\tfor(int i=1;i<=n;i++)\n\t\tv[i].y=lower_bound(tmp+1,tmp+tot+1,v[i].y)-tmp;//\u79bb\u6563\u5316\n\tbuild(1,1,tot);\n\tCDQ(1,n,stg);\n}\nint main()\n{\n\tint ans=0;\n\tdouble sum=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tnum[i].t=i;\n\t\tscanf(\"%d%d\",&num[i].x,&num[i].y);\n\t}\n\tsolve(0);\n\tfor(int i=1;i<=n;i++)\n\t\tnum[i]=(ask){n-i+1,-num[i].x,-num[i].y};//\u628a\u6570\u7ec4\u5012\u8fc7\u6765\uff0c\u9ad8\u5ea6\u548c\u901f\u5ea6\u53d6\u8d1f\n\tsolve(1);\n\tfor(int i=1;i<=n;i++)\n\t\tans=max(ans,f[i][0].maxn);//\u8ba1\u7b97\u6700\u5927\u957f\u5ea6\n\tprintf(\"%d\\n\",ans);\n\tfor(int i=1;i<=n;i++)\n\t\tif(f[i][0].maxn==ans) sum+=f[i][0].cnt;//\u8ba1\u7b97\u603b\u65b9\u6848\u6570\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(f[i][0].maxn+f[n-i+1][1].maxn==ans+1) printf(\"%.5lf \",(f[i][0].cnt*f[n-i+1][1].cnt)/sum);//\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5bfc\u5f39\u88ab\u62e6\u622a\u7684\u6982\u7387\n\t\telse printf(\"0.00000 \");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1585893341,
        "uid": 81238,
        "name": "MCAdam",
        "ccfLevel": 7,
        "title": "P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39"
    },
    {
        "content": "## [\u9898\u610f](https://www.luogu.com.cn/problem/P2487)\n\n\u7b2c\u4e00\u95ee\u663e\u7136\u662f\u5728\u95ee\u4f60\u4e8c\u7ef4$LIS$\u957f\u5ea6\u3002  \n\u7b2c\u4e8c\u95ee\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u95ee\u4f60\u6bcf\u4e2a\u4f4d\u7f6e\u5728\u591a\u5c11$LIS$\u7684\u65b9\u6848\u4e2d\u51fa\u73b0\u8fc7\uff0c\u62ff\u5b83\u9664\u603b\u65b9\u6848\u6570\u5c31\u662f\u6982\u7387\u3002\n\n\u6211\u4eec\u8bbe$f_i$\u8868\u793a\u4ee5$i$\u4e3a\u7ed3\u5c3e\u7684$LIS$\u957f\u5ea6\uff0c$g_i$\u8868\u793a\u4ee5$i$\u4e3a\u5f00\u5934\u7684$LIS$\u957f\u5ea6\uff0c$f'_i$\u8868\u793a\u4ee5$i$\u4e3a\u7ed3\u5c3e\u7684$LIS$\u65b9\u6848\u6570\uff0c$g'_i$\u8868\u793a\u4ee5$i$\u4e3a\u5f00\u5934\u7684$LIS$\u65b9\u6848\u6570\u3002\n\n\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u4e0a\u9762\u90a3\u56db\u4e2a\u4e1c\u897f\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e$i$\uff0c\u6211\u4eec\u5148\u5224\u65ad\u4e0b$f_i+g_i-1$\u662f\u5426\u4e3a$LIS$\u957f\u5ea6\uff0c\u5176\u4e2d$-1$\u662f\u56e0\u4e3a$i$\u8fd9\u4e2a\u4f4d\u7f6e\u88ab\u7b97\u4e86\u4e24\u6b21\u3002\u5982\u679c$f_i+g_i-1$\u7b49\u4e8e$LIS$\u957f\u5ea6\uff0c\u90a3\u4e48$i$\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u65b9\u6848\u6570\u4e3a$f'_i*g'_i$\u3002\n\n\u90a3\u4e48\u56de\u5230\u600e\u4e48\u6c42\u7684\u95ee\u9898\u4e0a\uff0c\u8fd9\u663e\u7136\u662f\u4e2a\u4e09\u7ef4\u504f\u5e8f\uff1a\u65f6\u95f4+\u9ad8\u5ea6+\u901f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u7528$CDQ$\u5206\u6cbb\u89e3\u51b3:  \n\u4ee5\u6c42$f,f'$\u4e3a\u4f8b\uff0c\u6c42$g,g'$\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u5e8f\u5217\u5012\u8fc7\u6765\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u3002  \n\u9996\u5148\u5bfc\u5f39\u5c31\u662f\u6309\u65f6\u95f4\u7ed9\u7684\uff0c\u65f6\u95f4\u5df2\u7ecf\u6709\u5e8f\u4e86\uff0c\u6211\u4eec\u8fdb\u884c$CDQ$\u5206\u6cbb\uff0c\u5047\u8bbe\u6c42\u51fa\u4e86$[l,mid]$\u7684$f$\uff0c\u6309\u7167$CDQ$\u5206\u6cbb\u7684\u65b9\u6cd5\u7528$[l,mid]$\u66f4\u65b0$[mid+1,r]$\uff0c\u4e4b\u540e\u9012\u5f52\u6c42$[mid+1,r]$\u7684\u7b54\u6848\u3002\n\n\u4e8e\u662f\u5c31\u8fd9\u4e48\u4e2a\u677f\u5b50\u6211\u56e0\u4e3a\u6392\u5e8f\u4e0d\u8bb0\u5f55$id$\u5199\u4e86\u4e00\u665a\u4e0a\uff0c\u6211\u4e5f\u662f\u771f\u7684\u83dc\u3002\n\n\u4e3a\u60f3\u770b\u4ee3\u7801\u7684\u4eba\u89e3\u91ca\u70b9\u4e1c\u897f~~\u4e00\u773c\u628a\u6211\u770b\u5230\u5e95\u7684\u4eba\u8bf7\u65e0\u89c6~~\uff1a  \n1.\u6211\u5c06$f,f'$\u3001$g,g'$\u5408\u5e76\u6210\u4e86$STL\\ pair$\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u662f\u957f\u5ea6\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u662f\u65b9\u6848\u6570\uff0c\u5e76\u5199\u4e86\u4e2a\u53d6$max$\u51fd\u6570\u3002  \n2.\u6211\u5f00\u4e86\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4$tr1,tr2$\uff0c$tr1$\u7ef4\u62a4\u540e\u7f00$min$\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u540e\u7f00\u4fe1\u606f\u7684\u8bf7\u81ea\u884c\u767e\u5ea6\u3002\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define lowbit(x) (x&-x)\n#define pid pair<int,double>\n#define mkp make_pair\n#define fir first\n#define sec second\nconst int maxn=5e4+10;\nint n,num;\nint a[maxn];\npid ans;\npid f[maxn],g[maxn];\nstruct Flies{int h,v,id;}fly_pre[maxn],fly[maxn];\ninline bool cmp1(Flies x,Flies y){return x.h>y.h;}\ninline bool cmp2(Flies x,Flies y){return x.h<y.h;}\ninline pid operator+(pid a,pid b){return mkp(a.fir+b.fir,a.sec+b.sec);}\ninline pid max(pid a,pid b)\n{\n\tif(a.fir!=b.fir)return a.fir>b.fir?a:b;\n\telse return mkp(a.fir,a.sec+b.sec);\n}\nstruct Tree_arry1\n{\n\tpid a[maxn];\n\tinline void clear(int x){for(int i=x;i;i-=lowbit(i))a[i]=mkp(0,0);}\n\tinline void add(int x,pid k){for(int i=x;i;i-=lowbit(i))a[i]=max(a[i],k);}\n\tinline pid query(int x){pid res=mkp(0,0);for(int i=x;i<=num;i+=lowbit(i))res=max(res,a[i]);return res;}\n}tr1;\nvoid cdq1(int l,int r)\n{\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tcdq1(l,mid);\n\tfor(int i=l;i<=r;i++)fly[i]=fly_pre[i];\n\tsort(fly+l,fly+mid+1,cmp1);sort(fly+mid+1,fly+r+1,cmp1);\n\tfor(int i=l,j=mid+1;j<=r;j++)\n\t{\n\t\twhile(i<=mid&&fly[i].h>=fly[j].h)tr1.add(fly[i].v,f[fly[i].id]),i++;\n\t\tf[fly[j].id]=max(f[fly[j].id],tr1.query(fly[j].v)+mkp(1,0));\n\t}\n\tfor(int i=l;i<=mid;i++)tr1.clear(fly[i].v);\n\tcdq1(mid+1,r);\n}\nstruct Tree_arry2\n{\n\tpid a[maxn];\n\tinline void clear(int x){for(int i=x;i<=num;i+=lowbit(i))a[i]=mkp(0,0);}\n\tinline void add(int x,pid k){for(int i=x;i<=num;i+=lowbit(i))a[i]=max(a[i],k);}\n\tinline pid query(int x){pid res=mkp(0,0);for(int i=x;i;i-=lowbit(i))res=max(res,a[i]);return res;}\n}tr2;\nvoid cdq2(int l,int r)\n{\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tcdq2(l,mid);\n\tfor(int i=l;i<=r;i++)fly[i]=fly_pre[i];\n\tsort(fly+l,fly+mid+1,cmp2);sort(fly+mid+1,fly+r+1,cmp2);\n\tfor(int i=l,j=mid+1;j<=r;j++)\n\t{\n\t\twhile(i<=mid&&fly[i].h<=fly[j].h)tr2.add(fly[i].v,g[fly[i].id]),i++;\n\t\tg[fly[j].id]=max(g[fly[j].id],tr2.query(fly[j].v)+mkp(1,0));\n\t}\n\tfor(int i=l;i<=mid;i++)tr2.clear(fly[i].v);\n\tcdq2(mid+1,r);\n}\nint main()\n{\n\t//freopen(\"test.in\",\"r\",stdin);\n\t//freopen(\"test.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&fly_pre[i].h,&fly_pre[i].v),fly_pre[i].id=i,a[++num]=fly_pre[i].v;\n\tsort(a+1,a+num+1);num=unique(a+1,a+num+1)-(a+1);\n\tfor(int i=1;i<=n;i++)fly_pre[i].v=lower_bound(a+1,a+num+1,fly_pre[i].v)-a;\n\tfor(int i=1;i<=n;i++)f[i]=g[i]=mkp(1,1);\n\tcdq1(1,n);\n\treverse(fly_pre+1,fly_pre+n+1);cdq2(1,n);\n\tfor(int i=1;i<=n;i++)ans=max(ans,f[i]);\n\tprintf(\"%d\\n\",ans.fir);\n\tfor(int i=1;i<=n;i++)\n\t\tif((f[i].fir+g[i].fir-1)==ans.fir)printf(\"%.5lf \",1.0*(f[i].sec*g[i].sec)/ans.sec);\n\t\telse printf(\"%.5lf \",0.0);\n\treturn 0;\n}\n```\n",
        "postTime": 1579274650,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39(CDQ\u5206\u6cbb)"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u4e00\u4e2a\u6570\u5bf9\u5e8f\u5217\u7684\u4e8c\u7ef4\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u6211\u4eec\u79f0\u5176\u4e3a Q\u3002\n\n\u5e76\u6c42\u51fa\u6bcf\u4e00\u4e2a\u5143\u7d20\u5206\u522b\u5728\u53ef\u80fd\u7684 Q \u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002\n\n\u76f4\u63a5 Dp\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$ \u4e0d\u884c\u3002\u8003\u8651 CDQ \u5206\u6cbb \u4f18\u5316 Dp\u3002\n\n\u5373\u6211\u4eec\u6bcf\u6b21\u5728\u5206\u6cbb\u65f6\uff0c\u5148\u9012\u5f52\u5de6\u534a\u90e8\u5206\uff0c\u5728\u6839\u636e\u5de6\u534a\u90e8\u5206\u8f6c\u79fb\u53f3\u534a\u90e8\u5206\uff0c\u6700\u540e\u9012\u5f52\u53f3\u534a\u90e8\u5206\u3002\n\n\u55ef\u3002\u5f88\u6709\u9053\u7406\u3002\n\nCDQ \u7ef4\u62a4\u4e24\u7ec4 pair \u503c\uff0cfirst \u7edf\u4e00\u8868\u793a\u957f\u5ea6\uff0csecond \u7edf\u4e00\u8868\u793a\u65b9\u6848\u6570\u3002\n\n\u800c $dp_{i, 0}$ \u548c $dp_{i, 1}$ \u5206\u522b\u6307\u4ee5 $i$ \u7ed3\u5c3e\u548c\u4ee5 $i$ \u5f00\u5934\u7684 Q \u7684\u4fe1\u606f\u3002\n\n\u56e0\u4e3a\u662f\u4e8c\u7ef4\u4fe1\u606f\u518d\u52a0\u4e00\u4f4d\u65f6\u95f4\uff0c\u6240\u4ee5\u5927\u4f53\u6846\u67b6\u7c7b\u4f3c\u4e09\u7ef4\u504f\u5e8f\u3002\n\n\u53ea\u4e0d\u8fc7\u5728 CDQ \u4e2d\u7684\u5206\u6cbb\u5f52\u5e76\u6392\u5e8f\u5fc5\u987b\u6392\u4f46\u53c8\u4e0d\u5b8c\u5168\u6392\u3002\n\n\u5373\u8981\u5148\u62ce\u51fa\u6765\u653e\u8fdb\u5907\u4efd\uff0c\u7136\u540e\u5728\u5907\u4efd\u4e0a\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u5f53\u524d\u8fd8\u672a\u5185\u90e8\u8f6c\u79fb\u7684\u53f3\u534a\u90e8\u5206\u4fdd\u6301\u987a\u5e8f\u4e0d\u52a8\uff0c\u7136\u540e\u5728\u540e\u9762\u5728\u9012\u5f52\u8fdb\u884c\u5185\u90e8\u8f6c\u79fb\u3002\n\n\u800c\u5907\u4efd\u4e0a\u7684\u64cd\u4f5c\u53c8\u53ef\u4ee5\u628a\u5de6\u534a\u90e8\u5206\u5230\u53f3\u534a\u90e8\u5206\u7684\u5916\u90e8\u8f6c\u79fb\u505a\u4e86\u3002\n\n\u55ef\u3002\u53ef\u4ee5\u6253\u4e86\u3002\n\n\u8865\u5145\u4e00\u4e0b\uff0c\u5f97\u51fa $dp_{i, 0}$ \u548c $dp_{i, 1}$ \u9700\u8981\u6b63\u53cd\u8dd1\u4e24\u6b21 CDQ\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint Abs (int x) { return x < 0 ? -x : x; }\nint Max (int x, int y) { return x > y ? x : y; }\nint Min (int x, int y) { return x < y ? x : y; }\n\nint Read () {\n    int x = 0, k = 1;\n    char s = getchar();\n    while (s < '0' || s > '9') {\n        if(s == '-')\n            k = -1;\n        s = getchar ();\n    } \n    while ('0' <= s && s <= '9') \n        x = (x << 3) + (x << 1) + (s ^ 48), s = getchar ();\n    return x * k;\n}\n\nvoid Write (int x) {\n    if(x < 0) \n        x = -x, putchar ('-');\n    if(x > 9)\n        Write (x / 10);\n    putchar (x % 10 + '0');\n}\n\nvoid Print (int x, char s) { Write (x), putchar (s); }\n\nconst int MAXN = 5e4 + 5;\n\nbool Type; \n// \u628a\u4e24\u4e2a CDQ Rua \u5230\u4e00\u8d77\u53c8\u8981\u5728\u4e00\u4e9b\u7ec6\u8282\u6709\u6240\u533a\u5206\uff0c\u6240\u4ee5\u5f00\u4e2a bool\u3002\nint Num[MAXN], Len;\n#define pid pair<int, double>\n// long long \u662f\u5047\u7684\uff0c\u8fd9\u9053\u9898\u4e2d\u95f4\u8fc7\u7a0b\u4e0d\u6b62 long long\u3002\n// \u800c double \u949f\u7231\u5b58\u50a8\u5927\u5c0f\uff0c\u539f\u56e0\u56e0\u6b64\u820d\u5f03\u4e00\u4e9b\u7cbe\u5ea6\uff0c\u800c\u8fd9\u521a\u597d\u7b26\u5408\u6211\u4eec\u7684\u9700\u6c42\u3002\npid Dp[MAXN][2], BIT[MAXN][2];\n\npid operator + (pid a, pid b) { // pair \u7684\u52a0\u6cd5\u91cd\u8f7d\u3002\n    return make_pair (a.first + b.first, a.second + b.second);\n}\n\npid Max_Pair (pid x, pid y) { // \u4fbf\u4e8e\u65b9\u7a0b\u8f6c\u79fb\u7684\u624b\u5199 Max\u3002\n    if (x.first != y.first)\n        return x.first > y.first ? x : y;\n    return make_pair (x.first, x.second + y.second);\n}\n\nint Low_Bit (int x) { return x & -x; }\n\nvoid Clear (int k) {\n    if (!Type) {\n        for (int i = k; i; i -= Low_Bit(i))\n            BIT[i][0] = make_pair (0, 0);        \n    }\n    else {\n        for (int i = k; i <= Len; i += Low_Bit(i))\n            BIT[i][1] = make_pair (0, 0);            \n    }  \n}\n\nvoid Update (int k, pid x) {\n    if (!Type) {\n        for (int i = k; i; i -= Low_Bit(i))\n            BIT[i][0] = Max_Pair (BIT[i][0], x);        \n    }\n    else {\n        for (int i = k; i <= Len; i += Low_Bit(i))\n            BIT[i][1] = Max_Pair (BIT[i][1], x);            \n    }  \n}\n\npid Query (int k) {\n    pid Res = make_pair (0, 0);\n    if (!Type) {\n        for (int i = k; i <= Len; i += Low_Bit(i))\n            Res = Max_Pair (Res, BIT[i][0]);\n        return Res;        \n    }\n    else {\n        for (int i = k; i; i -= Low_Bit(i))\n            Res = Max_Pair (Res, BIT[i][1]);\n        return Res;               \n    }\n}\n// \u5c06\u4e24\u9897 BIT Rua \u5728\u4e00\u8d77\uff0c\u7528 Type \u4f7f\u5f97\u4e24\u4e2a CDQ \u7ef4\u62a4\u7684\u4fe1\u606f\u521a\u597d\u53cd\u8fc7\u6765\u3002\n\nstruct Node {\n    int h, v, Id;\n    Node () {}\n    Node (int H, int V, int I) {\n        h = H, v = V, Id = I;\n    }\n} q[MAXN], Tmp[MAXN];\n// Tmp \u5373\u6211\u4eec\u64cd\u4f5c\u7684\u5907\u4efd\u3002\n\nbool Check (int x, int y) { return !Type ? x >= y : x <= y; }\nbool Cmp (Node x, Node y) { return !Type ? x.h > y.h : x.h < y.h; }\n// \u4e24\u79cd\u4e0d\u540c\u7684\u6392\u5e8f\u65b9\u5f0f\uff0c\u56e0\u504f\u5e8f\u5b9e\u73b0\u4e0d\u540c\u56e0\u4eba\u800c\u5f02\u3002\u7528 Type \u63a7\u5236\u76f8\u53cd\u3002\n\nvoid CDQ (int l, int r) {\n    if (l == r)\n        return ;\n    int Mid = (l + r) >> 1;\n    CDQ (l, Mid);\n    for (int i = l; i <= r; i++)\n        Tmp[i] = q[i];\n    sort (Tmp + l, Tmp + Mid + 1, Cmp);\n    sort (Tmp + Mid + 1, Tmp + r + 1, Cmp);\n    // \u6392\u5e8f\uff0c\u53c8\u4e0d\u5b8c\u5168\u6392\u5e8f\u3002\u6ce8\u610f\u8fd9\u91cc\u662f\u5728\u5907\u4efd\u4e0a\u64cd\u4f5c\uff0c\u4ee5\u5b8c\u6210\u504f\u5e8f\u3002\n    for (int i = l, j = Mid + 1; j <= r; j++) {\n        while (i <= Mid && Check (Tmp[i].h, Tmp[j].h))\n            Update (Tmp[i].v, Dp[Tmp[i].Id][Type]), i++ /*, printf (\"%d %d\\n\", Type, i)*/ ;  // \u904d\u5386\u65b0\u7684\u53ef\u80fd\u5bf9\u5f53\u524d j \u4ea7\u751f\u8f6c\u79fb\u8d21\u732e\u7684 i\u3002\n        Dp[Tmp[j].Id][Type] = Max_Pair (Dp[Tmp[j].Id][Type], Query (Tmp[j].v) + make_pair (1, 0));\n        // \u8f6c\u79fb\u65b9\u7a0b\u3002Type \u63a7\u53cd\u3002\n        // printf (\"%d %d %d %d\\n\", Type, Tmp[j].Id, Dp[Tmp[j].Id][Type].first, (Query (Tmp[j].v) + make_pair (1, 0)).first);\n    }\n    for (int i = l; i <= Mid; i++)\n        Clear (Tmp[i].v);\n    // \u8bb0\u5f97\u5c06 BIT \u6e05\u7a7a\uff0c\u4e0d\u5f71\u54cd\u4ee5\u540e\u7684\u8f6c\u79fb\u3002\n    CDQ (Mid + 1, r);\n}\n\n/*\n133 \u884c\uff0c\u66fe\u51fa\u73b0\u4e86\u4e00\u4e2a ub\u3002\nUpdate (Tmp[i].v, Dp[Tmp[i].Id][Type]), i++; \n\u4e0d\u7b49\u4ef7\u4e8e\nUpdate (Tmp[i].v, Dp[Tmp[i++].Id][Type]); \n\u539f\u56e0\u6216\u8bb8\u662f\u51fd\u6570\u4f20\u53c2\u4ece\u53f3\u5230\u5de6\u3002\n*/\n\nint main () {\n    int n = Read ();\n    for (int i = 1; i <= n; i++) {\n        q[i].h = Read (), q[i].v = Read (), q[i].Id = i;\n        Num[i] = q[i].v;\n    }\n    sort (Num + 1, Num + n + 1);\n    Len = unique (Num + 1, Num + n + 1) - Num - 1;\n    for (int i = 1; i <= n; i++)\n        q[i].v = lower_bound (Num + 1, Num + Len + 1, q[i].v) - Num; \n   \t// BIT \u548c\u503c\u57df\u6709\u5173\uff0c\u6240\u4ee5\u79bb\u6563\u5316\u3002\n\n    for (int i = 1; i <= n; i++)\n        Dp[i][0] = Dp[i][1] = make_pair (1, 1);\n   \t// Dp \u521d\u503c\uff0c\u5373\u5f53\u524d Q \u53ea\u6709 i \u4e00\u4e2a\u5143\u7d20\u3002\n    CDQ (1, n);\n    reverse (q + 1, q + n + 1);\n    Type = 1, CDQ (1, n);\n\n    pid Ans = make_pair (0, 0);\n    for (int i = 1; i <= n; i++)\n        Ans = Max_Pair (Ans, Dp[i][0]);\n    Print (Ans.first, '\\n');\n    // for (int i = 1; i <= n; i++) \n    //     printf (\"%d %f %d %f\\n\", Dp[i][0].first, Dp[i][0].second, Dp[i][1].first, Dp[i][1].second);\n    for (int i = 1; i <= n; i++)\n        if (Dp[i][0].first + Dp[i][1].first - 1 == Ans.first)\n        // \u5224\u65ad\u5f53\u524d i \u662f\u5426\u88ab\u81f3\u5c11\u4e00\u4e2a Q \u6240\u5305\u542b\n            printf (\"%.5f \", Dp[i][0].second * Dp[i][1].second / Ans.second);\n        else\n            printf (\"0.00000 \");\n    return 0;\n}\n\n/*\n180 \u884c\u4e5f\u66fe\u6709\u4e00\u4e2a\u672a\u53d1\u73b0\u539f\u56e0\u7684 ub\u3002\nprintf (\"0.00000 \");\n\u4e0d\u7b49\u4ef7\u4e8e\nprintf (\"%.5f \", 0);\n*/\n```\n\n\n\n",
        "postTime": 1644665830,
        "uid": 266779,
        "name": "STrAduts",
        "ccfLevel": 6,
        "title": "\u300cSDOI2011\u300d\u62e6\u622a\u5bfc\u5f39"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u7bc7k-d tree\u9898\u89e3\u3002\n\n\u9996\u5148\u7b2c\u4e00\u95ee\u5c31\u662f\u88f8\u7684\u4e09\u7ef4\u504f\u5e8f\uff0c\u8fd8\u7ed9\u4f60\u6392\u597d\u5e8f\u6d88\u53bb\u4e86\u4e00\u7ef4\u3002\n\n\u90a3\u4e48\u5728k-d tree\u4e2d\u52a0\u4e00\u4e2a\u6a2a\u7eb5\u5750\u6807\u90fd\u662f\u65e0\u9650\u5927\u7684\u70b9\u505a\u8d77\u70b9\uff0c\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u662f0\uff0c\u65b9\u6848\u6570\u662f1\uff08\u540e\u9762\u53cd\u7740\u505a\u7684\u65f6\u5019\u8981\u52a0\u4e00\u4e2a\u6a2a\u7eb5\u5750\u6807\u90fd\u662f\u65e0\u9650\u5c0f\u7684\u70b9\uff09\u3002\u4e4b\u540e\u7528k-d tree\u6a21\u62df\u5c31\u597d\u4e86\u3002\u6ce8\u610f\u8981\u5728k-d tree\u4e2d\u7ef4\u62a4\u5f53\u524d\u77e9\u5f62\u7684\u7b54\u6848\u548c\u65b9\u6848\u6570\u3001\u5f53\u524d\u70b9\u7684\u7b54\u6848\u548c\u65b9\u6848\u6570\u3002\u6211\u7684\u5199\u6cd5\u662f\u5148\u628a\u6240\u6709\u70b9\u53bb\u91cd\u540e\u90fd\u52a0\u8fdbk-d tree\u91cc\uff0c\u6240\u4ee5\u8981\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u662f\u5426\u88ab\u6fc0\u6d3b\uff0c\u8fd9\u79cd\u505a\u6cd5\u6bd4\u63d2\u5165\u8282\u70b9\u5b9a\u671f\u91cd\u6784\u5feb\u3002\n\n\u4e4b\u540e\u6bcf\u4e2a\u70b9\u88ab\u9009\u4e2d\u7684\u6982\u7387=\u7ecf\u8fc7\u5b83\u7684\u65b9\u6848\u6570/\u603b\u65b9\u6848\u6570\u3002\n\n\u800c\u7ecf\u8fc7\u5b83\u7684\u65b9\u6848\u6570=\u4ece\u524d\u9762\u7ecf\u8fc7\u5b83\u7684\u65b9\u6848\u6570*\u4ece\u540e\u9762\u7ecf\u8fc7\u5b83\u7684\u65b9\u6848\u6570\u3002\n\n\u8fd9\u91cc\u8bf4\u7684\u4ece\u524d\u9762\u548c\u4ece\u540e\u9762\u5c31\u662f\u6b63\u7740dp\u548c\u5012\u7740dp\u7684\u610f\u601d\uff0c\u53cd\u6b63\u5f88\u7b80\u5355\u5927\u5bb6\u90fd\u660e\u767d\u3002\n\n\u800c\u4e00\u4e2a\u70b9\u80fd\u88ab\u7ecf\u8fc7\u9996\u5148\u9700\u8981\u4ece\u524d\u9762\u7ecf\u8fc7\u5b83\u7684\u7b54\u6848+\u4ece\u540e\u9762\u7ecf\u8fc7\u5b83\u7684\u7b54\u6848-1=\u6574\u4e2a\u5e8f\u5217\u7684\u7b54\u6848\u3002\n\n\u53cd\u6b63\u5c31\u662f\u628a\u66b4\u529b\u7684dp\u52a0\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4f18\u5316\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u4f46\u662f\u4e0d\u662f\u592a\u597d\u5199\u3002\u3002\u6211\u4e3a\u4e86\u53ea\u5199\u4e00\u904dk-d tree\u8d39\u5c3d\u4e86\u5fc3\u601d\u3002\n\n```c++\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#ifdef ONLINE_JUDGE\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){if(A==B){B=(A=ss)+fread(ss,1,1<<17,stdin);if(A==B)return EOF;}return*A++;}\ntemplate<class T>inline void read(T&x){\n\tstatic char c;static int y;\n\tfor(c=gc(),x=0,y=1;c<48||57<c;c=gc())if(c=='-')y=-1;\n\tfor(;48<=c&&c<=57;c=gc())x=((x+(x<<2))<<1)+(c^'0');\n\tx*=y;\n}\n#else\nvoid read(int&x){scanf(\"%d\",&x);}\n#endif\nstruct point{int d[2],h;}a[50010],b[50010],c[50010];\nstruct mis{int u; double v;}dp[50010][2],ans;\nstruct kdtree{\n\tint d[2],x[2],y[2],ch[2],sz,lv,u,u1;\n\tdouble v,v1;\n}t[50010];\nint root,tot,n,u,f,p,res,m;\ndouble sum,pos[50010];\ninline bool cmp(point x,point y){return x.d[u]<y.d[u];}\ninline bool cmp2(point x,point y){\n\treturn (x.d[0]<y.d[0])||(x.d[0]==y.d[0]&&x.d[1]<y.d[1]);\n}\ninline void pushup(int rt){\n\tint l=t[rt].ch[0],r=t[rt].ch[1];\n\tif (l){\n\t\tt[rt].x[0]=min(t[rt].x[0],t[l].x[0]);\n\t\tt[rt].y[0]=min(t[rt].y[0],t[l].y[0]);\n\t\tt[rt].x[1]=max(t[rt].x[1],t[l].x[1]);\n\t\tt[rt].y[1]=max(t[rt].y[1],t[l].y[1]);\n\t}\n\tif (r){\n\t\tt[rt].x[0]=min(t[rt].x[0],t[r].x[0]);\n\t\tt[rt].y[0]=min(t[rt].y[0],t[r].y[0]);\n\t\tt[rt].x[1]=max(t[rt].x[1],t[r].x[1]);\n\t\tt[rt].y[1]=max(t[rt].y[1],t[r].y[1]);\n\t}\n}\ninline int build(int d,int l,int r){\n\tif (l>r) return 0; u=d;\n\tint mid=(l+r)>>1,rt=++tot;\n\tnth_element(c+l,c+mid,c+r+1,cmp);\n\tt[rt].x[0]=t[rt].x[1]=t[rt].d[0]=c[mid].d[0];\n\tt[rt].y[0]=t[rt].y[1]=t[rt].d[1]=c[mid].d[1];\n\tt[rt].ch[0]=build(d^1,l,mid-1);\n\tt[rt].ch[1]=build(d^1,mid+1,r);\n\tpushup(rt); return rt;\n}\ninline void up(int rt){\n\tint l=t[rt].ch[0],r=t[rt].ch[1];\n\tt[rt].sz=t[l].sz+t[r].sz+t[rt].lv;\n\tint x=max(t[l].u,t[r].u); double y=0;\n\ty+=t[l].v*(x==t[l].u)+t[r].v*(x==t[r].u);\n\tif (t[rt].u1>x) t[rt].v=t[rt].v1;\n\tif (t[rt].u1==x) t[rt].v=y+t[rt].v1;\n\tif (t[rt].u1<x) t[rt].u=x,t[rt].v=y;\n}\nvoid ins(int rt,point x){\n\tif (t[rt].d[0]==x.d[0]&&t[rt].d[1]==x.d[1]){\n\t\tt[rt].lv++; t[rt].sz++;\n\t\tif (t[rt].u1<dp[x.h][f].u)\n\t\t\tt[rt].u1=dp[x.h][f].u,t[rt].v1=dp[x.h][f].v;\n\t\telse\n\t\t\tif (t[rt].u1==dp[x.h][f].u) t[rt].v1+=dp[x.h][f].v;\n\t\tif (t[rt].u<dp[x.h][f].u)\n\t\t\tt[rt].u=dp[x.h][f].u,t[rt].v=dp[x.h][f].v;\n\t\telse\n\t\t\tif (t[rt].u==dp[x.h][f].u) t[rt].v+=dp[x.h][f].v;\n\t\treturn;\n\t}\n\tint l=t[rt].ch[0],r=t[rt].ch[1];\n\tif (t[l].x[0]<=x.d[0]&&x.d[0]<=t[l].x[1]&&\n\t\tt[l].y[0]<=x.d[1]&&x.d[1]<=t[l].y[1])\n\t\tins(l,x);\n\tif (t[r].x[0]<=x.d[0]&&x.d[0]<=t[r].x[1]&&\n\t\tt[r].y[0]<=x.d[1]&&x.d[1]<=t[r].y[1])\n\t\tins(r,x);\n\tup(rt); return;\n}\nvoid query(int rt,point x){\n\tif (!rt||!t[rt].sz) return;\n\tif (t[rt].x[f^1]*p<x.d[0]*p||t[rt].y[f^1]*p<x.d[1]*p)\n\t\treturn;\n\tif (t[rt].x[f]*p>=x.d[0]*p&&t[rt].y[f]*p>=x.d[1]*p){\n\t\tif (t[rt].u==ans.u) ans.v+=t[rt].v;\n\t\tif (t[rt].u>ans.u) ans.u=t[rt].u,ans.v=t[rt].v;\n\t\treturn;\n\t}\n\tif (t[rt].d[0]*p>=x.d[0]*p&&t[rt].d[1]*p>=x.d[1]*p&&t[rt].lv){\n\t\tif (t[rt].u1==ans.u) ans.v+=t[rt].v1;\n\t\tif (t[rt].u1>ans.u) ans.u=t[rt].u1,ans.v=t[rt].v1;\n\t}\n\tint l=t[rt].ch[0],r=t[rt].ch[1];\n\tif (t[l].u>t[r].u){\n\t\tif (t[l].u>=ans.u) query(l,x);\n\t\tif (t[r].u>=ans.u) query(r,x);\n\t}\n\telse{\n\t\tif (t[r].u>=ans.u) query(r,x);\n\t\tif (t[l].u>=ans.u) query(l,x);\n\t}\n}\nint main(){\n\tread(n);\n\tfor (int i=1; i<=n; i++){\n\t\tread(a[i].d[0]),read(a[i].d[1]);\n\t\ta[0].d[0]=max(a[0].d[0],a[i].d[0]);\n\t\ta[0].d[1]=max(a[0].d[1],a[i].d[1]);\n\t\tb[i]=a[i]; b[i].h=i;\n\t}\n\ta[n+1].d[0]=0,a[n+1].d[1]=0;\n\tb[0]=a[0]; b[n+1]=a[n+1]; b[n+1].h=n+1;\n\tsort(a,a+n+2,cmp2); c[++m]=a[0];\n\tfor (int i=1; i<=n+1; i++)\n\t\tif (a[i].d[0]!=a[i-1].d[0]||a[i].d[1]!=a[i-1].d[1])\n\t\t\tc[++m]=a[i];\n\troot=build(0,1,m);\n\tp=1; f=0; dp[0][0]=(mis){0,1};\n\tins(root,b[0]);\n\tfor (int i=1; i<=n; i++){\n\t\tquery(root,b[i]); ans.u++;\n\t\tdp[i][f]=ans; ins(root,b[i]);\n\t\tres=max(res,ans.u); ans=(mis){0,0};\n\t}\n\tprintf(\"%d\\n\",res);\n\tfor (int i=1; i<=n; i++)\n\t\tif (dp[i][0].u==res) sum+=dp[i][0].v;\n\tfor (int i=1; i<=tot; i++)\n\t\tt[i].lv=t[i].sz=t[i].u1=t[i].u=t[i].v1=t[i].v=0;\n\tf=1; p=-1; dp[n+1][1]=(mis){0,1};\n\tins(root,b[n+1]);\n\tfor (int i=n; i>=1; i--){\n\t\tquery(root,b[i]); ans.u++;\n\t\tdp[i][f]=ans; ins(root,b[i]);\n\t\tans=(mis){0,0};\n\t}\n\tfor (int i=1; i<=n; i++){\n\t\tif (dp[i][0].u+dp[i][1].u-1==res)\n\t\t\tpos[i]=(dp[i][0].v*dp[i][1].v)/sum;\n\t\tprintf(\"%.5lf \",pos[i]);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1565873705,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2487 \u3010[SDOI2011]\u62e6\u622a\u5bfc\u5f39\u3011"
    },
    {
        "content": "Tag\uff1a\u52a8\u6001\u89c4\u5212 \u79bb\u6563\u5316 \u4e09\u7ef4\u504f\u5e8f \u4e8c\u7ef4\u7ebf\u6bb5\u6811 \u52a8\u6001\u5f00\u70b9\n\n\u8bbeF[i],rF[i]\u5206\u522b\u8868\u793a\u4ee5\u7b2ci\u4e2a\u7ed3\u5c3e\u3001\u4ee5\u7b2ci\u4e2a\u5f00\u59cb\u7684\u6700\u591a\u53ef\u9009\u5143\u7d20\u4e2a\u6570\uff08\u7b2ci\u4e2a\u5fc5\u987b\u9009\uff09\uff0cG[i],rG[i]\u8868\u793a\u4ee5\u4e0a\u9009\u53d6\u6700\u591a\u5143\u7d20\u4e2a\u6570\u7684\u65b9\u6848\u6570\uff0c\u5219\u6709\uff1a\n\nF[i]=max\u2061{F[j]}+1(j\u2264i\u4e14$h_j$\u2265$h_i$\u4e14$v_j$\u2265$v_i$)\n\nG[i]=\u2211G[j] (j\u2264i\u4e14$h_j$\u2265$h_i$\u4e14$v_j$\u2265$v_i$\u4e14F[i]=F[j]+1)\n\n\u7c7b\u4f3c\u5730\uff0c\u6709\uff1a\n\nrF[i]=max\u2061{rF[j]}+1(j\u2265i\u4e14$h_j$\u2264$h_i$\u4e14$v_j$\u2264$v_i$)\n\nrG[i]=\u2211rG[j] (j\u2265i\u4e14$h_j$\u2264$h_i$\u4e14$v_j$\u2264$v_i$\u4e14rF[i]=rF[j]+1)\n\n\u5219\u6700\u591a\u5143\u7d20\u4e2a\u6570ans=max\u2061{F[i]}.\n\n\u603b\u7684\u65b9\u6848\u6570tot=\u2211G[i] (F[i]=ans),\n\n\u7b2ci\u4e2a\u70b9\u88ab\u9009\u62e9\u7684\u65b9\u6848\u6570H[i]=0(F[i]+rF[i]-1\u2260ans), \u6216H[i]=G[i]\\*rG[i] (F[i]+rF[i]-1=ans)\n\n\n\u6211\u4eec\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u8fd9\u4e2a\u9012\u63a8\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u4ee5$h_i$\u4e3a\u6a2a\u5750\u6807\uff0c$v_i$\u4e3a\u7eb5\u5750\u6807\u5efa\u7acb\u5750\u6807\u7cfb\uff0c\u5e76\u4e14\u6309\u4e0b\u6807\u7684\u987a\u5e8f\u63d2\u5165\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u9012\u63a8\u7684\u8fc7\u7a0b\u5c31\u662f\u67e5\u8be2\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u5185\u7684\u6700\u5927\u503c\u548c\u6700\u5927\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u6216\u8005\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u8003\u8651\u5230\u672c\u9898\u4e0d\u80fd\u63a5\u53d7$O(n^2)$\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u4e8e\u662f\u6211\u4eec\u653e\u5f03\u4f7f\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u800c\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\u7684\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u3002\u6211\u4eec\u9700\u8981\u652f\u6301\u7684\u64cd\u4f5c\u6709\uff1a\u5355\u70b9\u4fee\u6539\u3001\u77e9\u5f62\u67e5\u8be2\u3002\u800c\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u7684\u4fe1\u606f\u4e3a\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u548c\u533a\u95f4\u5185\u6700\u5927\u503c\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u81f3\u6b64\uff0c\u5373\u53ef\u89e3\u51b3\u672c\u9898\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog_2^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(nlog_2^2 n)$.\n\n\u6ce8\uff1a\u6b64\u9898\u4ea6\u53ef\u4f7f\u7528CDQ\u5206\u6cbb\u89e3\u51b3\uff0c\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u90fd\u4f1a\u66f4\u52a0\u4f18\u79c0\u3002\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nusing ld = long double;\nconst size_t    MaxN = 50005;\n\nconst size_t    _M_size = 1 << 28;\nchar            _M_pool[_M_size], *_M_cur;\n\ninline void* operator new(size_t size)\n{ return _M_cur -= size; }\ninline void operator delete(void* ptr)\n{ }\n\nint N, H[MaxN], V[MaxN];\nint H0[MaxN], HN, V0[MaxN], VN;\nint F[MaxN], rF[MaxN];\nld  G[MaxN], rG[MaxN];\nint Ans;\nld  Cnt;\n\nclass segtreenode {\n    struct node {\n        int    max;\n        ld    cnt;\n        node    *lc, *rc;\n\n        node(): max(0), cnt(0), lc(nullptr), rc(nullptr){ }\n    } *root;\n    void modify(node *&o, int l, int r, int pos, int w, ld d)\n    {\n        if(!o)\n            o = new node();\n        if(w > o->max)\n            o->max = w, o->cnt = d;\n        else if(w == o->max)\n            o->cnt += d;\n        if(l == r)\n            return;\n        int    m = l + r >> 1;\n        if(pos <= m)\n            modify(o->lc, l, m, pos, w, d);\n        else\n            modify(o->rc, m + 1, r, pos, w, d);\n    }\n    void query(node *o, int l, int r, int tl, int tr, int& w, ld& d)\n    {\n        if(!o)\n            return;\n        if(l >= tl && r <= tr) {\n            if(w < o->max)\n                w = o->max, d = o->cnt;\n            else if(w == o->max)\n                d += o->cnt;\n            return;\n        }\n        int    m = l + r >> 1;\n        if(tl <= m)\n            query(o->lc, l, m, tl, tr, w, d);\n        if(tr > m)\n            query(o->rc, m + 1, r, tl, tr, w, d);\n    }\npublic:\n    segtreenode(): root(nullptr) {}\n    inline void modify(int pos, int w, ld d)\n    { modify(root, 1, VN, pos, w, d); }\n    inline void query(int tl, int tr, int& w, ld& d)\n    { query(root, 1, VN, tl, tr, w, d); }\n} ;\nclass segtree {\n    struct node {\n        segtreenode    x;\n        node        *lc, *rc;\n\n        node(): x(), lc(nullptr), rc(nullptr){ }\n    } *root;\n    void modify(node *&o, int l, int r, int posx, int posy, int w, ld d)\n    {\n        if(!o)\n            o = new node();\n        (o->x).modify(posy, w, d);\n        if(l == r)\n            return;\n        int    m = l + r >> 1;\n        if(posx <= m)\n            modify(o->lc, l, m, posx, posy, w, d);\n        else\n            modify(o->rc, m + 1, r, posx, posy, w, d);\n    }\n    void query(node *o, int l, int r, int tlx, int trx, int tly, int _try, int& w, ld& d)\n    {\n        if(!o)\n            return;\n        if(l >= tlx && r <= trx) {\n            (o->x).query(tly, _try, w, d);\n            return;\n        }\n        int    m = l + r >> 1;\n        if(tlx <= m)\n            query(o->lc, l, m, tlx, trx, tly, _try, w, d);\n        if(trx > m)\n            query(o->rc, m + 1, r, tlx, trx, tly, _try, w, d);\n    }\npublic:\n    segtree(): root(nullptr) { _M_cur = _M_pool + _M_size; }\n    inline void modify(int posx, int posy, int w, ld d)\n    { modify(root, 1, HN, posx, posy, w, d); }\n    inline void query(int tlx, int trx, int tly, int _try, int& w, ld& d)\n    { query(root, 1, HN, tlx, trx, tly, _try, w, d); }\n} SegTree;\n\nint main()\n{\n    cin >> N;\n    for(int i = 1; i <= N; ++i)\n        scanf(\"%d%d\", H + i, V + i), H0[i] = H[i], V0[i] = V[i];\n    sort(H0 + 1, H0 + 1 + N), sort(V0 + 1, V0 + 1 + N);\n    HN = unique(H0 + 1, H0 + 1 + N) - H0 - 1, VN = unique(V0 + 1, V0 + 1 + N) - V0 - 1;\n\n    for(int i = 1; i <= N; ++i) {\n        H[i] = lower_bound(H0 + 1, H0 + 1 + HN, H[i]) - H0, V[i] = lower_bound(V0 + 1, V0 + 1 + VN, V[i]) - V0;\n        int w = 0;\n        ld  cnt = 1;\n        SegTree.query(H[i], HN, V[i], VN, w, cnt);\n        F[i] = ++w, G[i] = cnt;\n        SegTree.modify(H[i], V[i], w, cnt);\n    }\n    SegTree = segtree();\n    for(int i = N; i; --i) {\n        int w = 0;\n        ld  cnt = 1;\n        SegTree.query(1, H[i], 1, V[i], w, cnt);\n        rF[i] = ++w, rG[i] = cnt;\n        SegTree.modify(H[i], V[i], w, cnt);\n        if(F[i] > Ans)\n            Ans = F[i], Cnt = G[i];\n        else if(F[i] == Ans)\n            Cnt += G[i];\n    }\n\n    cout << Ans << endl;\n    for(int i = 1; i <= N; ++i)\n        if(F[i] + rF[i] - 1 != Ans)\n            printf(\"0.00000 \");\n        else\n            printf(\"%.5Lf \", G[i] * rG[i] / Cnt);\n\n    return 0;\n}\n```",
        "postTime": 1513607595,
        "uid": 3144,
        "name": "\u6d6e\u5c18ii",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2487 \u3010[SDOI2011]\u62e6\u622a\u5bfc\u5f39\u3011"
    },
    {
        "content": "[\u62e6\u622a\u5bfc\u5f39](https://www.luogu.com.cn/problem/P2487)\n\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u82e5\u5e72\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709 $3$ \u4e2a\u5c5e\u6027 $t_i,h_i,v_i$\uff0c\u6c42\u51fa\u4e00\u4e2a\u4f7f\u5f97\u5bf9\u4e8e $\\forall i,j,i>j$\uff0c$t_i>t_j,h_i\\le h_j,v_i\\le v_j$ \u5747\u6210\u7acb\u7684\u6700\u957f\u7684\u5b50\u5e8f\u5217 $a$ \u7684\u957f\u5ea6\u3002\u5e76\u8ba1\u7b97\u6bcf\u4e2a\u5143\u7d20\u5728\u6240\u6709\u7684\u53ef\u80fd\u7684 $a$ \u65b9\u6848\u4e2d\u7684\u51fa\u73b0\u6982\u7387\u3002\n\n### \u601d\u8def\u5206\u6790\n\n- **\u5148\u770b\u7b2c\u4e00\u4e2a\u95ee\u9898**\uff1a\n\n\u6309 $t$ \u6392\u597d\u5e8f\u540e\u5bb9\u6613\u53d1\u73b0\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u95ee\u9898\u3002\n\n\u9996\u5148\u6709\u4e00\u4e2a $n^2$ \u7684 DP \u65b9\u7a0b\uff1a\n\n$$f_i=\\max(f_j)+1,j<i,h_j\\ge h_i,v_j\\ge v_i$$\n\n\u5176\u4e2d $f_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n\n\u4f46\u95ee\u9898\u7c7b\u4f3c\u4e8e\u4e09\u7ef4\u504f\u5e8f\u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u8003\u8651\u7528 CDQ \u5206\u6cbb\u8fdb\u884c\u4f18\u5316\u3002\n\n\u8003\u8651 CDQ \u5206\u6cbb\u7684\u8fc7\u7a0b\uff0c\u53d1\u73b0\u53ea\u9700\u8981\u5728\u5f52\u5e76\u65f6\u67e5\u8be2\u524d\u7f00\u6700\u503c\u5373\u53ef\u3002\n\n\u5177\u4f53\u7684\u8bf4\u3002\u5728 CDQ \u5206\u6cbb\u65f6\uff0c\u5148\u9012\u5f52\u5de6\u534a\u90e8\u5206\uff0c\u518d\u5c06\u5de6\u53f3\u90e8\u5206\u5206\u522b\u6309\u7167 $h$ \u6392\u5e8f\uff0c\u7ef4\u62a4\u5de6\u53f3\u53cc\u6307\u9488 $j,i$\uff0c\u82e5 $h_i\\le h_j$\uff0c\u90a3\u4e48\u5728\u6811\u72b6\u6570\u7ec4\u7684 $v_j$ \u4f4d\u7f6e\u52a0\u5165 $f_j$ \u7684\u8d21\u732e\uff0c\u5426\u5219\u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u4e2d $v_i$ \u7684\u524d\u7f00\u6700\u503c\u66f4\u65b0 $f_i$\uff0c\u6700\u540e\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\uff0c\u590d\u539f\u6570\u7ec4\uff0c\u9012\u5f52\u53f3\u534a\u90e8\u5206\u3002\n\n- **\u518d\u770b\u7b2c\u4e8c\u4e2a\u95ee\u9898**\uff1a\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6982\u7387\u53ef\u4ee5\u901a\u8fc7\u8ba1\u6570\u7684\u65b9\u6cd5\u8ba1\u7b97\u3002\n\n\u5177\u4f53\u7684\u8bf4\uff0c\u6211\u4eec\u5728\u7ef4\u62a4 $f_i$ \u65f6\u987a\u4fbf\u7ef4\u62a4 $g_i$\uff0c\u8868\u793a\u957f\u5ea6\u4e3a $f_i$ \u4ee5 $i$ \u7ed3\u5c3e\u7684\u7684\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002\n\n\u4f46\u8fd9\u6837\u8fd8\u662f\u4e0d\u884c\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u5143\u7d20\u53ef\u80fd\u4f4d\u4e8e\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2d\u95f4\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee4 $f'_i$ \u8868\u793a\u4ee5 $i$ \u5f00\u59cb\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u4ee4 $g'_i$ \u8868\u793a\u957f\u5ea6\u4e3a $f'_i$ \u4ee5 $i$ \u5f00\u59cb\u7684\u7684\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u8fd9\u65f6\u5c31\u53ef\u4ee5\u7edf\u8ba1\u7b54\u6848\u4e86\uff0c\u5f53 $f_i+f'_i-1=\\text{len}$ \u65f6\uff08$\\text{len}$ \u8868\u793a\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff09\uff0c\u5373\u8fd9\u4e2a\u5143\u7d20\u53ef\u4ee5\u7ec4\u6210\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u65f6\uff0c\u5b83\u51fa\u73b0\u7684\u6982\u7387\u4e3a\uff1a\n\n$$\\frac{g_ig'_i}{\\text{sum}}$$\n\n\u5176\u4e2d $\\text{sum}$ \u8868\u793a\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002\n\n\u800c $f'$ \u548c $g'$ \u53ef\u4ee5\u901a\u8fc7\u5c06\u6570\u7ec4\u9006\u5e8f\u53d6\u53cd\u540e\u518d\u8dd1\u4e00\u904d\u4e00\u6a21\u4e00\u6837\u7684 CDQ \u89e3\u51b3\u3002\n\n- **\u5176\u4ed6**\n\n\u9700\u8981\u5bf9 $v$ \u79bb\u6563\u5316\u3002\n\n\u8bb0\u5f97\u5f00 `double`\u3002\n\n### \u4ee3\u7801\n\n\u4ee3\u7801\u5c0f\u5361\u4e86\u4e00\u4e0b\u5e38\uff0c\u76ee\u524d\u662f\u6700\u4f18\u89e3\u3002\n\n```\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\nconst int N=50100;\n\nint n,m,in1,in2;\nint Y[N],c[N];\n\n#define getchar() (S==T&&(T=(S=B)+fread(B,1,1<<16,stdin),S==T)?EOF:*S++)\nchar B[1<<16],*S=B,*T=B;\n\ninline int read(){\n    int x=0;char ch=getchar();\n    while(ch<'0'||'9'<ch) ch=getchar();\n    while('0'<=ch&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x;\n}//\u6574\u6570\u5feb\u8bfb\n\ninline void dwrite(int x){\n    if(!x){putchar('0');return ;}\n    int bit[20],p=0,i;\n    for (;x;x/=10) bit[++p]=x%10;\n    for (i=p;i>0;--i) putchar(bit[i]+48);\n}//\u6574\u6570\u5feb\u5199\n\ninline void write(double x){\n    static int n=100000,k=5;\n    int y=(int)(x*n)%n;x=(int)x;\n    dwrite(x),putchar('.');\n    int bit[8],p=0,i;\n    for(;p<k;y/=10) bit[++p]=y%10;\n    for(i=p;i>0;i--) putchar(bit[i]+48);\n}//\u5c0f\u6570\u5feb\u5199\n\nstruct Node{\n    int x,y,id;\n}a[N],b[N];\n\nstruct Data{\n    int maxn;\n    double cnt;\n    Data operator + (const Data &b){\n        Data c;\n        c.maxn=max(maxn,b.maxn);\n        c.cnt=((maxn==c.maxn)?cnt:0)+((b.maxn==c.maxn)?b.cnt:0);\n        return c;//f \u548c g \u7684\u7ed3\u6784\u9898\uff0c\u4ee5\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u5f62\u5f0f\u66f4\u65b0\n    }\n}f[N],f2[N],ans;\n\nstruct Tree_Array{\n    Data a[N];\n    int tt[N],times;//\u6811\u72b6\u6570\u7ec4\u65f6\u95f4\u6233 O(1) \u6e05\u7a7a\n    #define lowbit(x) ((x)&(-(x)))\n    inline void add(int x,Data v){\n        for(;x;x-=lowbit(x)){\n            if(tt[x]==times) a[x]=a[x]+v;\n            else a[x]=v,tt[x]=times;\n        }\n    }\n    inline void clear(){times++;}\n    inline Data ask(int x){\n        Data ans=Data{0,0};\n        for(;x<=m;x+=lowbit(x))\n            if(tt[x]==times) ans=ans+a[x];\n        return ans;\n    }\n}tree;\n\nvoid CDQ(int l,int r){\n    if(l==r){f[a[l].id]=f[a[l].id]+Data{1,1};return ;}//\u8fb9\u754c\n    int mid=l+r>>1,j=l;\n    CDQ(l,mid);\n    sort(a+l,a+mid+1,[](Node a,Node b){return a.x>b.x;});\n    sort(a+mid+1,a+r+1,[](Node a,Node b){return a.x>b.x;});//\u6309 x \u6392\u5e8f\n    for(register int i=mid+1;i<=r;++i){\n        while(j<=mid&&a[j].x>=a[i].x) tree.add(a[j].y,f[a[j].id]),j++;//\u52a0\u5165\u6811\u72b6\u6570\u7ec4\n        Data temp=tree.ask(a[i].y);temp.maxn++;//\u7edf\u8ba1\u7b54\u6848\n        f[a[i].id]=f[a[i].id]+temp;\n    }\n    tree.clear();\n    int minn=n+1,maxn=0;//\u624b\u5199\u7684\u6876\u6392\uff0c\u6309\u7167 id \u6765\u6392\n    for(int i=mid+1;i<=r;++i){\n        c[a[i].id]=i;\n        minn=min(minn,a[i].id);\n        maxn=max(maxn,a[i].id);\n    }\n    for(int i=minn;i<=maxn;++i)\n        b[i]=a[c[i]];\n    for(int i=mid+1;i<=r;++i)\n        a[i]=b[i];\n    CDQ(mid+1,r);\n}\n\nint main(){\n    n=read();\n    for(register int i=1;i<=n;++i){\n        in1=read();in2=read();\n        a[i]=Node{in1,in2,i};\n        Y[i]=in2;\n    }\n    sort(Y+1,Y+n+1);\n    m=unique(Y+1,Y+n+1)-Y-1;\n    for(register int i=1;i<=n;++i)\n        a[i].y=lower_bound(Y+1,Y+m+1,a[i].y)-Y;//\u79bb\u6563\u5316\n    CDQ(1,n);\n    for(register int i=1;i<=n;++i) ans=ans+f[i];//\u66f4\u65b0\u7b54\u6848\uff0c\u53ea\u9700\u8981\u4e00\u8fb9\n    dwrite(ans.maxn);putchar('\\n');\n    for(register int i=1;i<=n;++i){//\u6570\u7ec4\u53cd\u8f6c\n        f2[i]=f[i];\n        f[i]=Data{0,0};\n        a[i].id=n-a[i].id+1;\n        a[i].x=-a[i].x;\n        a[i].y=m-a[i].y+1;\n    }\n    for(int i=1;i<=n;++i)//\u4e00\u6837\u7684\u6876\u6392\n        c[a[i].id]=i;\n    for(int i=1;i<=n;++i)\n        b[i]=a[c[i]];\n    for(int i=1;i<=n;++i)\n        a[i]=b[i];\n    CDQ(1,n);\n    reverse(f+1,f+n+1);\n    for(register int i=1;i<=n;++i){\n        if(f[i].maxn+f2[i].maxn-1==ans.maxn)\n            write(1.0*f[i].cnt*f2[i].cnt/ans.cnt),putchar(' ');\n        else putchar('0'),putchar(' ');//\u5224\u5b9a\u7b54\u6848\n    }\n    return 0;\n}\n```",
        "postTime": 1683794610,
        "uid": 986683,
        "name": "_Ponder_",
        "ccfLevel": 0,
        "title": "P2487 \u62e6\u622a\u5bfc\u5f39 \u9898\u89e3"
    },
    {
        "content": "## K-D Tree \u89e3\u6cd5\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u7528 K-D Tree \u505a\uff0c\u4f46\u662f\u9700\u8981\u4e00\u4e2a\u5c0f Trick\u3002\n\n\u9996\u5148\u539f\u9898\u76f8\u5f53\u4e8e\u6c42\uff1a**\u7ecf\u8fc7 $i$ \u7684\u4e8c\u7ef4\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570** \u9664\u4ee5 **\u603b\u7684\u4e8c\u7ef4\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570**\uff0c\u53ea\u9700\u8981\u524d\u540e\u5404\u505a\u4e00\u904d\u4e8c\u7ef4 LIS \u5373\u53ef\u3002\n\n\u8003\u8651\u5982\u4f55\u5feb\u901f\u7ef4\u62a4\u3002\u6b63\u5e38\u60f3\u6cd5\u662f\u5728 K-D Tree \u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ef4\u62a4\u6700\u5c0f\u5750\u6807\uff0c\u6700\u5927\u5750\u6807\uff0c\u5f53\u524d\u7b54\u6848\uff0c\u5f53\u524d\u7b54\u6848\u65b9\u6848\u6570\uff0c\u533a\u57df\u5185\u6700\u5927\u7b54\u6848\uff0c\u533a\u57df\u5185\u6700\u5927\u7b54\u6848\u65b9\u6848\u6570\u3002\u6bcf\u6b21\u5148\u67e5\u8be2\uff0c\u7136\u540e\u5c06\u5f53\u524d\u70b9\u63d2\u5165\u3002\n\n\u53ef\u662f\u8fd9\u6837\u5fc5\u987b\u91cd\u6784\uff0c\u5426\u5219\u4f1a TLE\u3002\uff08\u5f53\u7136\u5728 Luogu \u4e0a\u52a0\u4e0a\u4e00\u5927\u5806 `#pragma` \u53ef\u4ee5\u83bd\u8fc7\u53bb\uff0c\u4f46\u662f\u5728\u6781\u6162\u7684\u672c\u6821 oj \u4e0a\u4ecd\u7136 TLE\u3002\uff09\u91cd\u6784\u7684\u8bdd\u4ee3\u7801\u91cf\u592a\u5927\uff0c\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff1f\n\n\u8fd9\u65f6\u5c31\u6709\u4e00\u4e2a Trick\uff1a\u5148\u5efa\u51fa\u4e00\u68f5**\u5e73\u8861\u7684** K-D Tree\uff0c\u521d\u59cb\u4fe1\u606f\u53ea\u6709\u70b9\u7684\u5750\u6807\uff0c\u5176\u4ed6\u4fe1\u606f\u5747\u4e3a $0$\uff0c\u53ef\u4ee5\u770b\u505a\u662f\u672a\u6fc0\u6d3b\u7684\u70b9\u3002\u6bcf\u6b21\u63d2\u5165\u4e0d\u65b0\u5efa\u8282\u70b9\uff0c\u800c\u662f**\u6fc0\u6d3b**\u4e00\u4e2a\u70b9\uff0c\u987a\u4fbf\u66f4\u65b0\u4fe1\u606f\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1 K-D Tree \u7684\u7edd\u5bf9\u5e73\u8861\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\sqrt{n})$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nint D,n,ql[2],qr[2],root,a[50005],b[50005],fl[50005],fr[50005],qmax,al;\ndouble ed[50005],st[50005],qsum;\nstruct TreeNode{\n\tint a[2],mi[2],mx[2],ls,rs,ans,maxans;\n\t//ans:\u76ee\u524d\u70b9\u7b54\u6848\n\t//maxans:\u533a\u57df\u6700\u5927\u7b54\u6848 \n\t//sum:\u76ee\u524d\u70b9\u7b54\u6848\u6709\u51e0\u79cd\u65b9\u6cd5\n\t//maxsum:\u533a\u57df\u6700\u5927\u6709\u51e0\u79cd\u65b9\u6cd5\n\tdouble maxsum,sum;\n\tTreeNode(){\n\t\tmi[0]=mi[1]=0x3f3f3f3f,mx[0]=mx[1]=-0x3f3f3f3f,ls=rs=0,sum=ans=maxsum=maxans=0;\n\t}\n\tvoid Clear(){\n\t\tmi[0]=mi[1]=0x3f3f3f3f,mx[0]=mx[1]=-0x3f3f3f3f,ls=rs=0,sum=ans=maxsum=maxans=0;\n\t}\n\tbool operator <(const TreeNode yy) const {\n\t\treturn a[D]==yy.a[D]?a[D^1]<yy.a[D^1]:a[D]<yy.a[D];\n\t}\n\tint& operator [](int x){\n\t\treturn a[x];\n\t}\n}t[200005];\nvoid Pushup(int p){\n\tfor(int i=0;i<2;i++){\n\t\tt[p].mi[i]=min(min(t[t[p].ls].mi[i],t[t[p].rs].mi[i]),t[p][i]);\n\t\tt[p].mx[i]=max(max(t[t[p].ls].mx[i],t[t[p].rs].mx[i]),t[p][i]);\n\t}\n\tt[p].maxans=t[p].ans,t[p].maxsum=t[p].sum;\n\tif(t[t[p].ls].maxans>t[p].maxans)t[p].maxans=t[t[p].ls].maxans,t[p].maxsum=t[t[p].ls].maxsum;\n\telse if(t[t[p].ls].maxans==t[p].maxans)t[p].maxsum+=t[t[p].ls].maxsum;\n\tif(t[t[p].rs].maxans>t[p].maxans)t[p].maxans=t[t[p].rs].maxans,t[p].maxsum=t[t[p].rs].maxsum;\n\telse if(t[t[p].rs].maxans==t[p].maxans)t[p].maxsum+=t[t[p].rs].maxsum;\n}\nvoid Insert(int &p,int x,int y,int z,double w,int d){\n\tif(t[p][0]==x&&t[p][1]==y){\n\t\tif(z>t[p].ans)t[p].ans=z,t[p].sum=w;\n\t\telse if(z==t[p].ans)t[p].sum+=w;\n\t\tif(z>t[p].maxans)t[p].maxans=z,t[p].maxsum=w;\n\t\telse if(z==t[p].maxans)t[p].maxsum+=w;\n\t\treturn ;\n\t}\n\tif(d){\n\t\tif(y<t[p][1]||(y==t[p][1]&&x<t[p][0]))Insert(t[p].ls,x,y,z,w,d^1);\n\t\telse Insert(t[p].rs,x,y,z,w,d^1);\n\t}\n\telse {\n\t\tif(x<t[p][0]||(x==t[p][0]&&y<t[p][1]))Insert(t[p].ls,x,y,z,w,d^1);\n\t\telse Insert(t[p].rs,x,y,z,w,d^1);\n\t}\n\tPushup(p);\n}\nbool any(int p){\n\tfor(int i=0;i<2;i++)if(t[p].mx[i]<ql[i]||t[p].mi[i]>qr[i])return 0;\n\treturn 1;\n}\nbool all(int p){\n\tfor(int i=0;i<2;i++)if(t[p].mx[i]>qr[i]||t[p].mi[i]<ql[i])return 0;\n\treturn 1;\n}\nbool ok(int p){\n\tfor(int i=0;i<2;i++)if(t[p][i]>qr[i]||t[p][i]<ql[i])return 0;\n\treturn 1;\n}\nvoid Query(int p){\n\tif(!p||!any(p))return ;\n\tif(all(p)){\n\t\tif(t[p].maxans>qmax)qmax=t[p].maxans,qsum=t[p].maxsum;\n\t\telse if(t[p].maxans==qmax)qsum+=t[p].maxsum;\n\t\treturn ;\n\t}\n\tif(ok(p)){\n\t\tif(t[p].ans>qmax)qmax=t[p].ans,qsum=t[p].sum;\n\t\telse if(t[p].ans==qmax)qsum+=t[p].sum;\n\t}\n\tQuery(t[p].ls),Query(t[p].rs);\n}\nint Rebuild(int l,int r,int d){\n\tif(l>r)return 0;\n\tD=d;\n\tint mid=(l+r)/2;\n\tnth_element(t+l,t+mid,t+r+1);\n\tt[mid].ls=Rebuild(l,mid-1,d^1);\n\tt[mid].rs=Rebuild(mid+1,r,d^1);\n\tPushup(mid);\n\treturn mid;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&a[i],&b[i]),t[i][0]=a[i],t[i][1]=b[i];\n\troot=Rebuild(1,n,0);\n\tfor(int i=1;i<=n;i++){\n\t\tqsum=qmax=0,qr[0]=qr[1]=1e9,ql[0]=a[i],ql[1]=b[i];\n\t\tQuery(root);\n\t\tfl[i]=qmax+1,ed[i]=qsum;\n\t\tif(!qsum)ed[i]=1;\n\t\tInsert(root,a[i],b[i],fl[i],ed[i],0);\n\t\tal=max(al,fl[i]);\n\t}\n\tprintf(\"%d\\n\",al);\n\tfor(int i=1;i<=n;i++)t[i].Clear(),t[i][0]=a[i],t[i][1]=b[i];\n\troot=Rebuild(1,n,0);\n\tfor(int i=n;i>=1;i--){\n\t\tqsum=qmax=0,ql[0]=ql[1]=0,qr[0]=a[i],qr[1]=b[i];\n\t\tQuery(root);\n\t\tfr[i]=qmax+1,st[i]=qsum;\n\t\tif(!qsum)st[i]=1;\n\t\tInsert(root,a[i],b[i],fr[i],st[i],0);\n\t}\n\tdouble alls=0;\n\tfor(int i=1;i<=n;i++)if(fl[i]==al)alls+=ed[i];\n\tfor(int i=1;i<=n;i++)if(fl[i]+fr[i]==al+1)printf(\"%.5lf \",st[i]*ed[i]/alls);else printf(\"0 \");\n}\n```",
        "postTime": 1586940340,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2487 \u3010[SDOI2011]\u62e6\u622a\u5bfc\u5f39\u3011"
    },
    {
        "content": "### \u5b89\u5229\u535a\u5ba2 $\\Longrightarrow\\Longrightarrow\\Longrightarrow$[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/y2823774827y/p/10294798.html)\n\n\u505a$SDOI$\u6709\u79cd\u60f3\u8bc4\u9ed1\u7684\u611f\u89c9\uff0c\u679c\u7136\u8fd8\u662f\u592a\u5f31\u4e86\n\n##\u505a\u6cd5\n\u72ec\u7acb\u5199(\u8c03)\u4ee3\u7801\u4e09\u4e2a\u5c0f\u65f6\u796d\n\n\u7b80\u5316\u9898\u76ee\uff1a\u6c42\u4e8c\u7ef4\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u53ca\u6bcf\u4e2a\u70b9\u51fa\u73b0\u5728\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u6982\u7387\n\n\u6211\u4eec\u7684\u9650\u5236\u6761\u4ef6\uff1a$t_j<t_i,h_j \\geqslant h_i,v_j\\geqslant v_i$\uff0c\u6c42\u957f\u5ea6\u968f\u4fbf\u5957\u4e2a$cdq$\u968f\u4fbf\u5c31\u505a\u51fa\u6765\u4e86\u561b\n\n\u6bd2\u7624\u7684\u51fa\u9898\u4eba\u600e\u4e48\u53ef\u80fd\u8fd9\u4e48\u7b80\u5355\u5c31\u8ba9\u6211\u4eec\u5207\u4e86\u8fd9\u9053\u9898\uff0c\u90a3\u600e\u4e48\u6c42\u6982\u7387\u5462\uff1f\n\n\u8bbe$L_i$\u4e3a\u4ee5$i$\u7ed3\u5c3e\u7684\u6700\u957f\u957f\u5ea6(\u4e0d\u5305\u62ec$i$)\uff0c\u90a3\u5305\u542b$i$\u7684\u6700\u957f\u957f\u5ea6\u4e3a$L_i+1+R_i$\n\n\u8bbe$Lnum_i$\u4e3a\u4ee5$i$\u7ed3\u5c3e\u7684\u6700\u957f\u957f\u5ea6(\u4e0d\u5305\u62ec$i$)\u7684\u4e2a\u6570\uff0c\n\u90a3\u5305\u542b$i$\u7684\u6700\u957f\u957f\u5ea6\u4e3a$L_i+1+R_i$\u7684\u603b\u4e2a\u6570\u4e3a\uff1a$Lnum_i\u00d7Rnum_i$\u3002\u7279\u6b8a\u5730\uff0c\u957f\u5ea6\u4e3a$0$\u662f\uff0c\u4e2a\u6570\u4e3a$1$\n\n\u90a3\u603b\u4e2a\u6570\u5462\uff1f$\\sum\\limits_{i=1}^n(Lnum_i\u00d7Rnum_i)$\u7136\u540e\u53d1\u73b0\u5168$WA$\u4e86\uff0c\u6211\u4eec\u91cd\u590d\u7edf\u8ba1\uff0c\u56e0\u4e3a\u540c\u4e00\u5b50\u5e8f\u5217\u4f1a\u5728\u6240\u4ee5\u70b9\u91cc\u7b97\u4e00\u904d\n\u6b63\u786e\u7684\u505a\u6cd5\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c\u5373$R_i==0$&&$L_i+1==ans$\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u518d\u7edf\u8ba1\u65b9\u6848\u5c31\u4e0d\u4f1a\u91cd\u590d\u8ba1\u7b97\u4e86\n\n\u62b1\u7740\u80fdshi\u505ashi\u51fakan\u6765\u7684\u5fc3\u6001\u6253\u4e86\u4e00\u904d[\u5197\u957f\u7684\u4ee3\u7801](https://www.luogu.org/paste/gspznpc3)\uff0c\u53d1\u73b0\u53ea\u67097\u5206\uff0c\u60f3*\u7684\u5fc3\u90fd\u6709\u4e86\uff0c\u7136\u540e\u9020\u51fa\u4e00\u7ec4\u6570\u636e\u62cd\u6389\u4e86\n\n```cpp\n6\n4 25\n4 30\n4 35\n4 40\n4 45\n4 50\n```\n\n\u56e0\u4e3a\u957f\u5ea6\u4e3a$0$\u65f6\uff0c\u67e5\u8be2\u540e\u76f8\u52a0\u65b9\u6848\u6570\u4f1a\u53d8\u6210$2$\uff0c\u6240\u4ee5\u5728\u6bcf\u6b21\u67e5\u8be2\u540e\u66b4\u529b\u52a0\u4e2a\u5224\u65ad\u6539\u56de$1$\uff0c\u7136\u540e\u60ca\u5947\u7684\u53d1\u73b0$85$\u5206\u4e86\n\n\u5269\u4e0b\u662f\u7531\u4e8elong long\u7206\u4e86\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u65b9\u6848\u6570\u6362double\uff0c\u6492\u82b1\u6492\u82b1\uff01\uff01\n\n### [code](https://www.cnblogs.com/y2823774827y/p/10294798.html)\n",
        "postTime": 1547965776,
        "uid": 88804,
        "name": "y2823774827y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2487 \u3010[SDOI2011]\u62e6\u622a\u5bfc\u5f39\u3011"
    },
    {
        "content": "## P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39\n\nlkytxdy \u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u634f~\uff08\u96fe\uff09\n\n> \u6709 $n$ \u4e2a\u4e8c\u5143\u7ec4 $(a,b)$\uff0c\u4e00\u4e2a\u5b50\u5e8f\u5217\u5408\u6cd5\uff0c\u6ee1\u8db3\u5bf9\u4e8e $j<i$\uff0c$a_j\\geq a_i,b_j\\geq b_i$\u3002\u6c42\u51fa\u6700\u957f\u7684\u5408\u6cd5\u5b50\u5e8f\u5217\uff0c\u548c\u6bcf\u4e2a\u4e8c\u5143\u7ec4\u51fa\u73b0\u5728\u6700\u957f\u5408\u6cd5\u5b50\u5e8f\u5217\u7684\u6982\u7387\uff08\u53ef\u80fd\u6709\u591a\u4e2a\u6700\u957f\u5408\u6cd5\u5b50\u5e8f\u5217\uff09\u3002\n>\n> $1\\leq n\\leq 5\\times 10^4$\uff0c$1\\leq a_i,b_i\\leq 10^9$\u3002\n\n\u7b2c\u4e8c\u95ee\u5176\u5b9e\u662f\u6c42\u6709\u591a\u5c11\u4e2a\u6700\u957f\u7684\u5408\u6cd5\u5b50\u5e8f\u5217\u3001\u6bcf\u4e2a\u4e8c\u5143\u7ec4\u5728\u6240\u6709\u6700\u957f\u5408\u6cd5\u5b50\u5e8f\u5217\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u8bb0 $f_1[i],g_1[i]$ \u8868\u793a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u3001\u65b9\u6848\u6570\uff0c$f_2[i],g_2[i]$ \u8868\u793a\u4ee5 $i$ \u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u3001\u65b9\u6848\u6570\u3002\n\n$f,g$ \u663e\u7136\u53ef\u4ee5\u505a\u4e24\u904d CDQ \u6c42\u3002\n\n\u90a3\u4e48\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u4e3a $ans=\\max\\limits_{1\\leq i\\leq n} f_1[i]$\uff08\u6216 $\\max f_2[i]$\uff09\uff0c\u65b9\u6848\u603b\u6570\u4e3a $tot=\\sum_{i=1}^n g_1[i]\\times [f_1[i]=ans]$\uff0c\u7b2c\u4e8c\u95ee $i$ \u7684\u7b54\u6848\u4e3a $\\dfrac{g_1[i]\\times g_2[i]}{tot}\\,(f_1[i]+f_2[i]-1=ans)$\u3002\n\n\u6ce8\u610f $g_1,g_2,tot$ \u8981\u5f00 `double`\uff0c\u5426\u5219\u4f1a\u7206 `long long`\u3002\n\n\u63d0\u4f9b\u4e00\u4e2a\u7b80\u6d01\u7684\u4ee3\u7801~\n\n```cpp\n//lkytxdy\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e4+5;\nint n,t,v[N];\nstruct node{int x,y,id;}a[N];\nstruct data{\n\tint mx; double cnt;\n\tfriend data operator+(data a,data b){\n\t\tdata c; c.mx=max(a.mx,b.mx),c.cnt=(a.mx==c.mx)*a.cnt+(b.mx==c.mx)*b.cnt;\n\t\treturn c;\n\t}\n}f[N],f2[N],c[N],tmp,ans;\nvoid modify(int x,data y){\n\tfor(int i=x;i;i-=i&(-i)) c[i]=c[i]+y;\n}\nvoid clear(int x){\n\tfor(int i=x;i;i-=i&(-i)) c[i]={0,0};\n}\ndata query(int x){\n\tdata ans={0,0};\n\tfor(int i=x;i<=t;i+=i&(-i)) ans=ans+c[i];\n\treturn ans;\n}\nvoid cdq(int l,int r){\n\tif(l==r){f[a[l].id]=f[a[l].id]+(data){1,1};return ;}\n\tint mid=(l+r)/2,j=l;\n\tcdq(l,mid);\n\tsort(a+l,a+1+mid,[](node x,node y){return x.x>y.x;});\n\tsort(a+mid+1,a+1+r,[](node x,node y){return x.x>y.x;});\n\tfor(int i=mid+1;i<=r;i++){\n\t\twhile(j<=mid&&a[j].x>=a[i].x) modify(a[j].y,f[a[j].id]),j++;\n\t\ttmp=query(a[i].y),tmp.mx++;\n\t\tf[a[i].id]=f[a[i].id]+tmp;\n\t} \n\tfor(int i=l;i<j;i++) clear(a[i].y);\n\tsort(a+mid+1,a+1+r,[](node x,node y){return x.id<y.id;});\n\tcdq(mid+1,r);\n}\nsigned main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].y),a[i].id=i,v[++t]=a[i].y;\n\tsort(v+1,v+1+t),t=unique(v+1,v+1+t)-v-1;\n\tfor(int i=1;i<=n;i++) a[i].y=lower_bound(v+1,v+1+t,a[i].y)-v;\n\tcdq(1,n);\n\tfor(int i=1;i<=n;i++) ans=ans+f[i],f2[i]=f[i];\n\tprintf(\"%d\\n\",ans.mx);\n\tfor(int i=1;i<=n;i++)\n\t\tf[i]={0,0},a[i].id=n-a[i].id+1,a[i].x=-a[i].x,a[i].y=t-a[i].y+1;\n\tsort(a+1,a+1+n,[](node x,node y){return x.id<y.id;});\n\tcdq(1,n),reverse(f+1,f+1+n);\n\tfor(int i=1;i<=n;i++){\n\t\tif(f[i].mx+f2[i].mx-1==ans.mx) printf(\"%.5lf \",1.0*f[i].cnt*f2[i].cnt/ans.cnt);\n\t\telse printf(\"0 \");\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1640084631,
        "uid": 381985,
        "name": "lkytxdy",
        "ccfLevel": 0,
        "title": "P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39"
    },
    {
        "content": "### P.S.\n\u4e5f\u5c31 WA \u4e86\u5341\u56db\u53d1\uff0c\u4e0d\u591a\u4e0d\u591a/px/px/px  \n\u4e5f\u5c31\u5199\u4e86 3 \u4e2a\u5c0f\u65f6\uff0c\u4e0d\u957f\u4e0d\u5e38/px/px/px  \n\u5199\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u622a\u81f3\u76ee\u524d\u662f\u6700\u4f18\u89e3\u7b2c\u4e00\u9875\u3002  \n\n### Description.\n\u770b\u4f3c\u719f\u6089\u7684\u9898\u9762\uff0c\u4e5f\u5c31\u662f\u628a [\u8fd9\u9898](https://www.luogu.com.cn/problem/P1020) \u7684\u7b2c\u4e00\u95ee\u8d3a\u8fc7\u6765\uff0c\u52a0\u4e0a\u4e00\u4e2a\u6743\u503c\u3002  \n\u7136\u540e\u8be2\u95ee\u6bcf\u4e2a\u70b9\u51fa\u73b0\u5728\u4e00\u4e2a\u6700\u4f18\u65b9\u6848\u4e2d\u7684\u6982\u7387\u3002  \n\n### Solution.\n\u7b2c\u4e00\uff0c\u6211\u4eec\u5148\u8003\u8651\u5982\u4f55\u6c42\u51fa\u7b2c\u4e00\u95ee\u3002  \n\u9996\u5148\uff0c\u52a0\u4e0a\u65f6\u95f4\u8f74\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\u3002  \n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230 `CDQ\u4e8c\u5206`\u3002  \n\u6839\u636e `CDQ\u4e8c\u5206` \u7684\u601d\u60f3\uff0c\u8003\u8651\u7528\u5de6\u8fb9\u7684\u7b54\u6848\u8d21\u732e\u5230\u53f3\u8fb9\u7684\u7b54\u6848\u3002  \n\u6839\u636e `\u4e09\u7ef4\u504f\u5e8f` \u57fa\u672c\u5957\u8def\uff0c\u76f4\u63a5\u6392\u5e8f\u7b2c\u4e00\u7ef4\uff0c\u5f52\u5e76\u7b2c\u4e8c\u7ef4\uff0c\u6570\u636e\u7ed3\u6784\u7b2c\u4e09\u7ef4\u5c31\u597d\u4e86\u3002  \n\u6211\u4eec\u73b0\u5728\u9700\u8981\u652f\u6301\u5355\u70b9\u52a0\u4e0a\u4e00\u79cd\u53ef\u80fd\u53d6\u503c\uff0c\u518d\u6c42\u524d\u7f00 $min$\u3002  \n\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\u7b49 $\\log$ \u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002  \n\u52a0\u4e0a `CDQ\u4e8c\u5206` \u81ea\u5e26\u7684 $\\log$\uff0c\u6211\u4eec\u5c31\u5728\u4e24\u53ea $\\log$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u4e86\u7b2c\u4e00\u95ee\u3002  \n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u7b2c\u4e8c\u95ee\u3002  \n\u663e\u7136\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u53ef\u80fd\u51fa\u73b0\u5728\u6700\u4f18\u65b9\u6848\u4e2d\u3002  \n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u505a\u4e24\u904d `CDQ` \u6c42\u51fa\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u5f00\u5934/\u7ed3\u5c3e\u7684\u6700\u957f\u5408\u6cd5\u5b50\u5e8f\u5217\u3002  \n\u7136\u540e\u518d\u5728\u5f53\u524d\u4f4d\u7f6e\u62fc\u63a5\u4e00\u4e0b\uff0c\u68c0\u67e5\u662f\u5426\u662f\u7b54\u6848\u5c31\u597d\u4e86\u3002  \n\u4e0d\u8fc7\u5982\u679c\u8fd9\u4e2a\u90fd\u8003\u8651\u5230\u4e86\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\u3002  \n\u6211\u4eec\u8bb0\u5f55\u4ee5\u5f53\u524d\u70b9\u4e3a\u7ed3\u5c3e/\u5f00\u5934\u7684\u5c40\u90e8\u6700\u957f\u5408\u6cd5\u5b57\u5e8f\u5217\u7684\u4e2a\u6570\u3002  \n\u7136\u540e\u62fc\u63a5\u4e00\u4e0b\uff0c\u9664\u4ee5\u603b\u65b9\u6848\u6570\u5c31\u662f\u7b54\u6848\u4e86\u3002  \n\u800c\u65b9\u6848\u6570\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6700\u5927\u503c\u6570\u91cf\u6765\u6c42\u51fa\u3002  \n\n\u8fd8\u6709\uff0c\u6ce8\u610f\u65b9\u6848\u6570\u6570\u7ec4\u9700\u8981\u5f00 `double`\uff0c\u4e0d\u7136\u4f1a\u70b8\u3002  \n\n### Coding.\n```cpp\n//\u613f\u4f60\u6709\u4e00\u5929\u80fd\u548c\u4f60\u91cd\u8981\u7684\u4eba\u91cd\u9022\u3002\n#include<bits/stdc++.h>\nusing namespace std;typedef double ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}\nint n,T[50005],cnt,f[50005],ff[50005];ll g[50005],gg[50005],sm=0;struct node{int a,b,t;}a[50005];\nstruct segm{int mx;ll wh;}t[50005];//\u6811\u72b6\u6570\u7ec4\u7ed3\u6784\u9898\uff08\u540d\u5b57\u5947\u602a\ninline bool cmpt(node a,node b) {return a.t<b.t;}\ninline bool cmpb(node a,node b) {return a.b>b.b;}\ninline segm operator+(segm a,segm b) {return a.mx>b.mx?a:(a.mx<b.mx?b:(segm){a.mx,a.wh+b.wh});}\ninline void clear(int x) {for(;x;x-=x&(-x)) t[x]=(segm){0,0};}\ninline void upd(int x,segm w) {for(;x;x-=x&(-x)) t[x]=t[x]+w;}\ninline segm qry(int x) {segm r=(segm){0,0};for(;x<=cnt;x+=x&(-x)) r=r+t[x];return r;}\ninline void cdq(int l,int r)\n{//CDQ\n\tint md=(l+r)>>1;if(l==r) return(void)(f[a[l].t]=max(f[a[l].t],1),g[a[l].t]+=f[a[l].t]==1);\n\tsort(a+l,a+r+1,cmpt),cdq(l,md),sort(a+l,a+md+1,cmpb),sort(a+md+1,a+r+1,cmpb);\n\tint j=l;for(int i=md+1;i<=r;i++)\n\t{\n\t\tfor(;j<=md&&a[j].b>=a[i].b;j++) upd(a[j].a,(segm){f[a[j].t],g[a[j].t]});\n\t\tsegm z=qry(a[i].a);if(z.mx==0) continue;\n\t\tif(f[a[i].t]<z.mx+1) f[a[i].t]=z.mx+1,g[a[i].t]=z.wh;else if(f[a[i].t]==z.mx+1) g[a[i].t]+=z.wh;\n\t}\n\t{for(int i=l;i<=j;i++) clear(a[i].a);}cdq(md+1,r);\n}\nint main()\n{\n\tread(n);for(int i=1;i<=n;i++) read(a[i].a),read(a[i].b),a[i].t=i,T[i]=a[i].a;\n\t//mt19937 rnd(time(0));int n=7;for(int i=1;i<=n;i++) a[i].a=rnd()%10,a[i].b=rnd()%10,a[i].t=i,T[i]=a[i].a;\n\t//for(int i=1;i<=n;i++) printf(\"%d %d\\n\",a[i].a,a[i].b);\n\tsort(T+1,T+n+1),cnt=unique(T+1,T+n+1)-T-1;\n\tfor(int i=1;i<=n;i++) a[i].a=lower_bound(T+1,T+cnt+1,a[i].a)-T;\n\tmemset(T,0,sizeof(T)),cdq(1,n);int rs=0;for(int i=1;i<=n;i++) rs=max(rs,f[i]);\n\tsm=0;for(int i=1;i<=n;i++) gg[i]=g[i],ff[i]=f[i],sm+=(rs!=f[i]?0:g[i]),g[i]=f[i]=0;\n\tfor(int i=1;i<=n;i++) a[i].t=n+1-a[i].t,a[i].a=cnt+1-a[i].a,a[i].b=-a[i].b;\n\tcdq(1,n),reverse(g+1,g+n+1),reverse(f+1,f+n+1),printf(\"%d\\n\",rs);\n\t//for(int i=1;i<=n;i++) printf(\"<%d,%d>%c\",f[i],ff[i],i==n?'\\n':' ');\n\t//for(int i=1;i<=n;i++) printf(\"<%.0lf,%.0lf>%c\",g[i],gg[i],i==n?'\\n':' ');\n\tfor(int i=1;i<=n;i++) printf(\"%.10lf%c\",f[i]+ff[i]-1==rs?1.0*g[i]*gg[i]/sm:0.0,i==n?'\\n':' ');\n\treturn 0;//\u2191\u6ce8\u610f\u7279\u5224 0\uff0c\u65b9\u6848\u6570\u5408\u5e76\u663e\u7136\u76f8\u4e58\n}\n```",
        "postTime": 1612788477,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "### [P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39](https://www.luogu.com.cn/problem/P2487)\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u7b2c\u4e00\u95ee\u5c31\u662f\u6c42\u4e00\u4e2a\u4e8c\u7ef4\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u53ef\u4ee5\u7528 CDQ \u5206\u6cbb\u4f18\u5316\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u4ee4 $f_{0,i}$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5bf9\u4e8e\u7b2c\u4e00\u7ef4\u65f6\u95f4\u76f4\u63a5\u6392\u5e8f\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u7ef4\u9ad8\u5ea6\u7528 CDQ \u5206\u6cbb\u5904\u7406\uff0c\u7b2c\u4e09\u7ef4\u901f\u5ea6\u7528\u5176\u6743\u503c\u7ebf\u6bb5\u6811\u5904\u7406\u3002\u5047\u8bbe\u5f53\u524d\u5904\u7406\u7684\u533a\u95f4\u662f $[L,R]$\uff0c\u6309\u7167\u4e00\u822c\u7684\u5199\u6cd5\uff0c\u6211\u4eec\u5148\u9012\u5f52\u5904\u7406\u5de6\u534a\u8fb9\u548c\u53f3\u534a\u8fb9\uff0c\u7136\u540e\u5904\u7406\u8de8\u533a\u95f4\u7684\u3002\u4f46\u662f\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u8fd9\u6837\u5199\u5c31\u662f\u9519\u7684\u3002\u539f\u56e0\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5c5e\u4e8e\u53f3\u534a\u8fb9\u7684\u72b6\u6001 $x$\uff0c\u5b83\u5728\u53d7\u5230\u5de6\u534a\u8fb9\u7684\u5f71\u54cd\u540e\u53c8\u4f1a\u53bb\u5f71\u54cd\u540c\u5728\u53f3\u534a\u8fb9\u7684\u53e6\u4e00\u4e2a\u72b6\u6001 $y$\u3002\u4e5f\u5c31\u662f\u8bf4 $x$ \u5728\u66f4\u65b0 $y$ \u7684\u65f6\u5019\u662f\u4e2a\u534a\u6210\u54c1\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\u81f3\u4e8e\u5176\u4ed6\u6ca1\u6709\u8fd9\u79cd\u95ee\u9898\u7684\u9898\u76ee\uff0c\u987a\u5e8f\u600e\u4e48\u6837\u90fd\u662f\u53ef\u4ee5\u7684\u3002\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u8fb9\u5904\u7406\u8fb9\u6392\u5e8f\u7684\u8bdd\u6211\u4eec\u5904\u7406\u5b8c\u8de8\u533a\u95f4\u7684\u540e\u4f1a\u53d1\u73b0\u53f3\u534a\u8fb9\u7684\u53ef\u80fd\u4f1a\u8dd1\u5230\u5de6\u534a\u8fb9\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\u628a\u53f3\u534a\u8fb9\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u7528\u4e34\u65f6\u6570\u7ec4\u64cd\u4f5c\uff0c\u90a3\u4e48\u518d\u505a\u53f3\u534a\u8fb9\u7684\u65f6\u5019\u5c31\u662f\u539f\u59cb\u7684\u987a\u5e8f\u3002\u81f3\u4e8e\u6392\u5e8f\uff0c\u6211\u4eec\u7b49\u505a\u5b8c\u53f3\u534a\u8fb9\u540e\u76f4\u63a5 sort\u3002\n\n\u90a3\u4e48\u6982\u7387\u600e\u4e48\u7edf\u8ba1\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u5c31\u8981\u518d\u8bb0\u5f55\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u4eec\u4ee4 $f_{i,1}$ \u8868\u793a\u4ee5 $i$ \u5f00\u59cb\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c$cnt_{i,0/1}$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684/\u5f00\u59cb\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u65b9\u6848\u6570\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u5bfc\u5f39\uff0c\u5b83\u53ef\u4ee5\u88ab\u9009\u5f53\u4e14\u4ec5\u5f53 $f_{i,0}+f_{i,1}-1=ans$\uff0c\u5176\u4e2d $ans$ \u8868\u793a\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u6982\u7387\u4e3a $cnt_{i,0} \\times cnt_{i,1} / sum$\uff0c\u5176\u4e2d $sum$ \u8868\u793a\u603b\u7684\u65b9\u6848\u6570\u3002\n\ncode\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=50010;\nint n,tot;\nstruct Missil{\n    int times,high,speed;\n}m[N],task[N],tmp[N];\nstruct Dp{\n    int maxn;\n    double cnt;\n    Dp operator+ (const Dp &t) const\n    {\n        if (maxn>t.maxn) return *this;\n        else if (maxn<t.maxn) return t;\n        else return (Dp){maxn,cnt+t.cnt};\n    }\n}f[2][N];\nstruct Node{\n    int l,r;\n    Dp val;\n}tr[N<<2];\nint num[N];\ninline bool cmp1(Missil a,Missil b)\n{\n    return a.times<b.times;\n}\ninline bool cmp2(Missil a,Missil b)\n{\n    return a.high>b.high;\n}\ninline void pushup(int p)\n{\n    tr[p].val=tr[p<<1].val+tr[p<<1|1].val;\n}\nvoid build(int p,int inl,int inr)\n{\n    tr[p]={inl,inr,(Dp){0,0}};\n    if (inl==inr) return;\n    int mid=inl+inr>>1;\n    build(p<<1,inl,mid);\n    build(p<<1|1,mid+1,inr);\n}\nvoid modify(int p,int x,Dp k)\n{\n    if (tr[p].l==x&&tr[p].r==x)\n    {\n        tr[p].val=tr[p].val+k;\n        return;\n    }\n    int mid=tr[p].l+tr[p].r>>1;\n    if (x<=mid) modify(p<<1,x,k);\n    else modify(p<<1|1,x,k);\n    pushup(p);\n}\nDp query(int p,int x,int y)\n{\n    if (x<=tr[p].l&&tr[p].r<=y) return tr[p].val;\n    int mid=tr[p].l+tr[p].r>>1;\n    Dp res={0,0};\n    if (x<=mid) res=res+query(p<<1,x,y);\n    if (y>mid) res=res+query(p<<1|1,x,y);\n    return res;\n}\nvoid clear(int p,int x)\n{\n    if (tr[p].l==x&&tr[p].r==x)\n    {\n        tr[p].val={0,0};\n        return;\n    }\n    int mid=tr[p].l+tr[p].r>>1;\n    if (x<=mid) clear(p<<1,x);\n    else clear(p<<1|1,x);\n    pushup(p);\n}\ninline void CDQ(int l,int r,int type)\n{\n    if (l==r)\n    {\n        if (f[type][task[l].times].maxn==0) f[type][task[l].times]={1,1};\n        return;\n    }\n    int mid=l+r>>1,p=l,q=mid+1;\n    CDQ(l,mid,type);\n    for (int i=mid+1;i<=r;++i) tmp[i]=task[i];\n    sort(tmp+mid+1,tmp+r+1,cmp2);\n    for (int i=l;i<=r;++i)\n    {\n        if ((p<=mid&&task[p].high>=tmp[q].high)||q>r) modify(1,task[p].speed,f[type][task[p].times]),p++;\n        else\n        {\n            auto cur=query(1,tmp[q].speed,tot);\n            if (cur.maxn>0) cur.maxn++,f[type][tmp[q].times]=f[type][tmp[q].times]+cur;\n            q++;\n        }\n    }\n    for (int i=l;i<=mid;++i) clear(1,task[i].speed);\n    CDQ(mid+1,r,type);\n    sort(task+l,task+r+1,cmp2);\n}\ninline void solve(int type)\n{\n    for (int i=1;i<=n;++i) task[i]=m[i],num[i]=m[i].speed;\n    sort(num+1,num+n+1);//\u56e0\u4e3a\u901f\u5ea6\u7684\u503c\u57df\u592a\u5927\uff0c\u6211\u4eec\u8981\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u8bdd\u5c31\u8981\u79bb\u6563\u5316\n    sort(task+1,task+n+1,cmp1);\n    tot=unique(num+1,num+n+1)-(num+1);\n    for (int i=1;i<=n;++i) task[i].speed=lower_bound(num+1,num+tot+1,task[i].speed)-num;\n    build(1,1,tot);//\u5efa\u6811\n    CDQ(1,n,type);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;++i)\n    {\n        int h,v;\n        scanf(\"%d%d\",&h,&v);\n        m[i]={i,h,v};\n    }\n    solve(0);\n    for (int i=1;i<=n;++i) m[i]={n-i+1,-m[i].high,-m[i].speed};//\u7ffb\u8f6c\u540e\u518d\u505a\u5c31\u53ef\u4ee5\u4e0d\u7528\u5199\u4e24\u904d\u4e86\n    solve(1);\n    int ans=0;\n    for (int i=1;i<=n;++i) ans=max(ans,f[0][i].maxn);\n    printf(\"%d\\n\",ans);\n    double sum=0;\n    for (int i=1;i<=n;++i) if (f[0][i].maxn==ans) sum+=f[0][i].cnt;\n    for (int i=1;i<=n;++i)\n    {\n        if (f[0][i].maxn+f[1][n-i+1].maxn==ans+1) printf(\"%.5lf \",f[0][i].cnt*f[1][n-i+1].cnt/sum);\n        else printf(\"0.00000 \");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1683299246,
        "uid": 767793,
        "name": "_ZSR_",
        "ccfLevel": 0,
        "title": "P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39"
    },
    {
        "content": "## \u7b80\u5316\u9898\u610f\n\u7ed9\u4f60\u4e00\u4e9b\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709 $h_i$ \u548c $v_i$ \u4e24\u4e2a\u5c5e\u6027\uff0c\u6c42\u6700\u957f\u7684\u5b50\u5e8f\u5217\u6ee1\u8db3\u5176\u4e2d\u6bcf\u4e2a\u70b9\u90fd\u6709\uff1a\u82e5 $i<j$ \uff0c\u5219 $h_i \\geq h_j$ \u4e14 $v_i \\geq v_j$ \u3002\u5e76\u4e14\u8f93\u51fa\u6bcf\u4e2a\u70b9\u51fa\u73b0\u7684\u6982\u7387\u3002\n## \u9898\u89e3\n\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u7c7b\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528CDQ\u5206\u6cbb\u4f18\u5316DP\u89e3\u51b3\u3002\n\n\u6211\u4eec\u8bbe\u60f3\u4e00\u4e0b\u5f52\u5e76\u7684\u5206\u6cbb\u6a21\u578b\uff0c\u5728\u5de6\u534a\u8fb9\u5904\u7406\u597d\u4e86\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5bf9\u53f3\u534a\u8fb9\u66f4\u65b0\uff0c\u8fd9\u4e2a\u7528\u4e2a\u4e34\u65f6\u6570\u7ec4\u5b58\u4e00\u4e0b\uff0c\u5de6\u53f3\u5206\u522b\u6309 $h_i$ \u6392\u5e8f\uff0c\u7528\u53cc\u6307\u9488\u628a\u5de6\u8fb9\u7684\u52a0\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u53f3\u8fb9\u7684\u53bb\u66f4\u65b0\u5c31\u53ef\u4ee5\u3002\n\n\u96be\u641e\u7684\u5730\u65b9\u5728\u4e8e\u6c42\u6982\u7387\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6c42\u8fc7\u8fd9\u4e2a\u70b9\u7684\u65b9\u6848\u6570\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u6c42\u65b9\u6848\u6570\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u662f\u4e2a\u62d3\u6251\u56fe\uff0c\u53ea\u8981\u6b63\u53cd\u56fe\u8dd1\u4e00\u4e0b\u628a\u6bcf\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u70b9\u5230\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u65b9\u6848\u4e58\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u76f4\u63a5\u7528\u56fe\u663e\u7136\u4e0d\u73b0\u5b9e\uff0c\u70b9\u592a\u591a\u4e86\uff0c\u6240\u4ee5\u9700\u8981CDQ\u6765\u7edf\u8ba1\u65b9\u6848\uff0c\u6700\u540e\u7684\u8ba1\u7b97\u8fd8\u662f\u4e58\u8d77\u6765\uff0c\u6211\u4eec\u9700\u8981\u8dd1\u4e24\u6b21CDQ\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u65b9\u6848\u6570\u592a\u5927\u4e86,long long\u4f1a\u7206\u6389\uff0c\u5fc5\u987b\u7528double\u6216\u8005long double\u3002\n\n\u6700\u540e\u5410\u69fd\u4e00\u4e0b\uff0c\u8fd9\u4e2aSPJ\u6839\u672c\u6ca1\u6709\u90e8\u5206\u5206\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e4+5;\nint n,f[N],h[N],sum,id[N],tr1[N];\nint f2[N];double g2[N],g[N],tr2[N];\nstruct node\n{\n\tint h,v,t;\n}q[N];\nbool cmp2(node i,node j)\n{\n\treturn i.t>j.t;\n}\nbool cmp(int i,int j)\n{\n\treturn q[i].h>q[j].h;\n}\nbool cmp1(int i,int j)\n{\n\treturn q[i].h<q[j].h;\n}\nvoid add(int x,int y,double z)\n{\n\tfor(int i=x;i<=sum;i+=(i&(-i)))\n\t{\n\t\tif(y>tr1[i]) tr1[i]=y,tr2[i]=z;\n\t\telse if(y==tr1[i]) tr2[i]+=z;\n\t}\n}\npair<int,double> query(int x)\n{\n\tpair<int,double> res=make_pair(0,0);\n\tfor(int i=x;i;i-=(i&(-i)))\n\t{\n\t\tif(tr1[i]>res.first) res=make_pair(tr1[i],tr2[i]);\n\t\telse if(tr1[i]==res.first) res.second+=tr2[i];\n\t}\n\treturn res;\n}\nvoid clear(int x)\n{\n\tfor(int i=x;i<=sum;i+=(i&(-i))) tr1[i]=tr2[i]=0;\n}\nvoid merge_sort(int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tf[l]=max(1,f[l]);g[l]=max(1.0,g[l]);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;merge_sort(l,mid);\n\tfor(int i=l;i<=r;i++) id[i]=i;\n\tsort(id+l,id+mid+1,cmp);sort(id+mid+1,id+r+1,cmp);\n\tint now=l;\n\tfor(int i=mid+1;i<=r;i++)\n\t{\n\t\twhile(now<=mid && q[id[now]].h>=q[id[i]].h)\n\t\t{\n\t\t\tadd(sum-q[id[now]].v+1,f[id[now]],g[id[now]]);\n\t\t\tnow++;\n\t\t}\n\t\tauto res=query(sum-q[id[i]].v+1);\n\t\tif(res.first+1>f[id[i]]) f[id[i]]=res.first+1,g[id[i]]=res.second;\n\t\telse if(res.first+1==f[id[i]]) g[id[i]]+=res.second;\n\t}\n\tfor(int i=l;i<=mid;i++) clear(sum-q[id[i]].v+1);\n\tmerge_sort(mid+1,r);\n}\nvoid solve(int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tf2[l]=max(1,f2[l]);g2[l]=max(1.0,g2[l]);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;solve(l,mid);\n\tfor(int i=l;i<=r;i++) id[i]=i;\n\tsort(id+l,id+mid+1,cmp1);sort(id+mid+1,id+r+1,cmp1);\n\tint now=l;\n\tfor(int i=mid+1;i<=r;i++)\n\t{\n\t\twhile(now<=mid && q[id[now]].h<=q[id[i]].h)\n\t\t{\n\t\t\tadd(q[id[now]].v,f2[id[now]],g2[id[now]]);\n\t\t\tnow++;\n\t\t}\n\t\tauto res=query(q[id[i]].v);\n\t\tif(res.first+1>f2[id[i]]) f2[id[i]]=res.first+1,g2[id[i]]=res.second;\n\t\telse if(res.first+1==f2[id[i]]) g2[id[i]]+=res.second;\n\t}\n\tfor(int i=l;i<=mid;i++) clear(q[id[i]].v);\n\tsolve(mid+1,r);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&q[i].h,&q[i].v);\n\t\tq[i].t=i;h[++sum]=q[i].v;\n\t}\n\tsort(h+1,h+sum+1);sum=unique(h+1,h+sum+1)-h-1;\n\tfor(int i=1;i<=n;i++)\n\t\tq[i].v=lower_bound(h+1,h+sum+1,q[i].v)-h;\n\tmerge_sort(1,n);\n\tsort(q+1,q+n+1,cmp2);\n\tsolve(1,n);\n\treverse(f2+1,f2+n+1);reverse(g2+1,g2+n+1);\n\tint ans=0;double cnt=0;\n\tfor(int i=1;i<=n;i++) ans=max(ans,f[i]);\n\tfor(int i=1;i<=n;i++) if(f[i]==ans) cnt+=g[i];\n\tcout<<ans<<endl;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(f[i]+f2[i]-1!=ans) printf(\"0 \");\n\t\telse printf(\"%.5lf \",1.0*(g[i]*g2[i])/cnt);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1670726799,
        "uid": 300710,
        "name": "xuyuansu",
        "ccfLevel": 0,
        "title": "P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39"
    },
    {
        "content": "> \u8bf7\u5728\u9605\u8bfb\u6b64\u7bc7\u524d\u5df2\u7ecf\u5bf9 CDQ\u5206\u6cbb\u6709\u57fa\u672c\u7684\u4e86\u89e3\uff0c\u4e0d\u4f1a\u8bf7\u6233 [CDQ \u5206\u6cbb1](https://www.luogu.com.cn/blog/lgzhou/cdq-fen-zhi-1-post)\u3002\n\nCDQ \u5206\u6cbb\u4f18\u5316 dp\u3002\u901a\u5e38\u72b6\u6001\u662f\u4e00\u7ef4\uff0c\u8f6c\u79fb\u662f $O(n)$\uff0c\u5982\u679c\u6761\u4ef6\u826f\u597d\uff0c\u53ef\u4ee5\u5c06 $O(n^2)$ \u7684\u590d\u6742\u5ea6\u4f18\u5316\u5230 $O(nlogn)$\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4e8c\u7ef4\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n\n\u8bbe\u6bcf\u4e2a\u5143\u7d20\u4f4d\u7f6e\u662f $pos_i$, \u4e24\u4e2a\u5c5e\u6027\u5206\u522b\u662f $x_i,y_i$\u3002\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20 $i$\uff0c\u53ea\u80fd\u4ece $pos_j<pos_i, x_j<x_i, y_j<y_i$ \u7684\u5143\u7d20 $j$ \u8f6c\u79fb\u800c\u6765\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4e09\u7ef4\u504f\u5e8f\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u6bcf\u6b21\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u7528 $[l,mid]$ \u7684 $dp$ \u503c\u66f4\u65b0 $[mid+1,r]$ \u7684 $dp$ \u503c\u3002\n\n\u53ef\u662f\u6709\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1 $[l,mid]$ \u7684 $dp$ \u503c\u5df2\u7ecf\u66f4\u65b0\u5b8c\u6bd5\uff0c\u624d\u80fd\u518d\u62ff\u5b83\u66f4\u65b0 $[mid+1,r]$ \u7684 $dp$ \u503c\u3002\n\n\u6240\u4ee5\u9012\u5f52\u7684\u65f6\u5019\uff0c\u5148\u9012\u5f52 $[l,mid]$ \uff0c\u518d\u62ff $[l,mid]$ \u7684 $dp$ \u503c\u66f4\u65b0 $[mid+1,r]$ \u7684 $dp$ \u503c\uff0c\u6700\u540e\u9012\u5f52 $[mid+1,r]$\u3002\u5728\u9012\u5f52 $[l,mid]$ \u7684\u65f6\u5019\uff0c\u5176\u4e2d\u7684 $dp$ \u503c\u80af\u5b9a\u5df2\u7ecf\u66f4\u65b0\u5b8c\u6bd5\u3002\u800c\u5e38\u89c4\u7684\u4e09\u7ef4\u504f\u5e8f\u662f\u4e0d\u7528\u8003\u8651\u9012\u5f52\u987a\u5e8f\u7684\u3002\n\n\u5728\u9012\u5f52\u65f6\uff0c\u5c31\u662f\u5957\u8def\u7684\u4e24\u8fb9\u90fd\u6309 $x$ \u5173\u952e\u5b57\u6392\u5e8f\uff0c\u62ff\u53cc\u6307\u9488\u626b\u4e00\u904d\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u6bcf\u6b21\u53d6\u51fa\u5408\u6cd5\u7684\u6700\u5927 $dp$ \u503c $+1$ \u6765\u66f4\u65b0\u3002\n\n***\n\n\u4f8b\u9898\uff1a [P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39](https://www.luogu.com.cn/problem/P2487)\n\n\u8fd9\u9053\u9898\u7b2c\u4e00\u95ee\u548c\u4e0a\u9762\u8bb2\u7684\u4e00\u6a21\u4e00\u6837\u3002\u770b\u6570\u636e\u8303\u56f4\u6211\u4eec\u9700\u8981\u79bb\u6563\u5316\uff0c\u5176\u5b9e\u5747\u53ef\u3002\u6211\u4eec\u53ef\u4ee5\u5c06 $pos$ \u8fd9\u4e00\u7ef4\u8fdb\u884c\u7ef4\u62a4\u503c\u57df\uff0c\u5176\u4ed6\u4e24\u7ef4\u5ea6\u8fdb\u884c\u6392\u5e8f\uff0c\u4f46\u5c31\u820d\u5f03\u4e86\u4f4d\u7f6e\u8fd9\u4e00\u7ef4\u5df2\u7ecf\u6392\u597d\u4e86\u7684\u4fe1\u606f\u3002\n\n\u95ee\u9898\u5c31\u662f\u600e\u4e48\u7b97\u51fa\u6bcf\u4e2a\u5bfc\u5f39\u88ab\u62e6\u622a\u7684\u6982\u7387\u3002\n\n\u5f88\u663e\u7136\uff0c\u5982\u679c\u8fd9\u4e2a\u5bfc\u5f39\u4e0d\u5728\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u91cc\uff0c\u6982\u7387\u5c31\u4e3a\u96f6\u3002\n\n\u600e\u4e48\u5224\u65ad\uff1f\u8bbe\u5bfc\u5f39\u5e8f\u5217\u4e3a $a$\uff0c\u6570\u7ec4 $f_1$ \u8bb0\u5f55\u4ee5 $a[i]$ \u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6, \u5176\u4e2d\u6700\u957f\u7684\u957f\u5ea6\u5c31\u662f\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u8bb0\u4e3a $len$\u3002\u6570\u7ec4 $f_2$ \u8bb0\u5f55\u4ee5 $a[i]$ \u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\u3002\u5982\u679c $f_1+f_2-1 == len$ \uff0c\u90a3\u4e48 $a[i]$ \u5c31\u5728\uff0c\u5426\u5219\u5c31\u4e0d\u5728\u3002 $f_2$ \u6570\u7ec4\u53ef\u4ee5\u5c06 $a$ \u5012\u7f6e\uff0c\u8dd1\u4e00\u8fb9\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5c31\u884c\u3002\n\n\u5982\u679c\u5df2\u7ecf\u5728\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u91cc\u4e86\u3002\u6982\u7387 $p_i$ \u5c31\u7b49\u4e8e\u542b $a[i]$ \u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u65b9\u6848\u6570 \u9664\u4ee5 \u603b\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u65b9\u6848\u6570\u3002\n\n\u62ff\u6570\u7ec4 $g_1$ \u8bb0\u5f55\u4ee5 $a[i]$ \u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u65b9\u6848\u6570\uff0c\u6570\u7ec4 $g_2$ \u8bb0\u5f55\u4ee5 $a[i]$ \u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u65b9\u6848\u6570\u3002\u542b $a[i]$ \u7684\u65b9\u6848\u6570\u5c31\u7b49\u4e8e $g_1[i]*g_2[i]$\u3002\u800c\u603b\u65b9\u6848\u6570\u5c31\u7b49\u4e8e $\\sum\\limits_{i=1}^ng_1[i]*[f[i]==len]$\u3002\n\n\u5173\u952e\u662f $g$ \u6570\u7ec4\u600e\u4e48\u6c42\u3002\u539f\u5148\u6811\u72b6\u6570\u7ec4\u4e2d\u5b58\u7684\u662f $f$ \u503c\u7684\u6700\u5927\u503c\u3002\u73b0\u5728\u591a\u5b58\u4e00\u4e2a\uff0c\u6700\u5927\u503c\u7684\u65b9\u6848\u6570\u6709\u591a\u5c11\u3002\u5982\u679c\u6bcf\u6b21 $f$ \u6570\u7ec4\u88ab\u66f4\u65b0\uff0c\u90a3\u4e48 $g$ \u6570\u7ec4\u5c31\u76f4\u63a5\u7b49\u4e8e\u6700\u5927\u503c\u7684\u65b9\u6848\u6570\u3002\u5982\u679c $f$ \u6570\u7ec4\u6070\u597d\u7b49\u4e8e\u6b64\u6b21\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u5c06 $g$ \u8fdb\u884c\u7d2f\u52a0\u3002\n\n\u53ea\u653e\u7b2c\u4e00\u6bb5\u7b97 $f_1,g_1$ `CDQ` \u5206\u6cbb\u7684\u4ee3\u7801\u548c\u6811\u72b6\u6570\u7ec4\u7684\u4ee3\u7801\uff0c\u7b97 $f_2,g_2$ \u7684\u5927\u540c\u5c0f\u5f02\uff0c\u5176\u4f59\u7684\u4ee3\u7801\u4e5f\u6ca1\u4ec0\u4e48\u610f\u4e49\u653e\uff0c\u53cd\u800c\u8ba9\u4eba\u770b\u4e0d\u4e0b\u53bb\uff1a\n\n```cpp\nvoid CDQ(int l, int r){\n\tif (l >= r) return;\n\n\tint mid = (l+r)/2;\n\tCDQ(l,mid); //\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u5148\u628a\u5de6\u8fb9\u9012\u5f52\u4e86\uff0c\u518d\u66f4\u65b0\uff0c\u518d\u9012\u5f52\u53f3\u8fb9\n\tfor (int i = l; i <= r; i++) t[i] = a[i]; //\u4e34\u65f6\u6570\u7ec4\n\tsort(t+l,t+mid+1,cmpv);//\u6309 v \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff08\u672c\u9898\u6211\u5c06 h \u8fd9\u4e00\u7ef4\u8fdb\u884c\u4e86\u79bb\u6563\u5316\uff09\n\tsort(t+mid+1,t+r+1,cmpv);\n\tint ll = l, rr = mid+1; //\u4e24\u4e2a\u6307\u9488\n\twhile(rr <= r){\n\t\twhile(ll <= mid && t[ll].v >= t[rr].v){\n\t\t\tadd(maxn-t[ll].h, f[t[ll].id], g[t[ll].id]);\n         \t//\u56e0\u4e3a\u8981\u7ef4\u62a4\u7684\u662f\u540e\u7f00\u6700\u5927\u503c\uff0c\u76f4\u63a5\u62ff\u8303\u56f4\u51cf\u4e00\u4e0b\u3002\n\t\t\t//\u5c06\u5f53\u524d\u4f4d\u7f6e\u7684 f \u503c\u548c g \u503c\u653e\u5728\u6811\u72b6\u6570\u7ec4\u91cc\u7ef4\u62a4 \n\t\t\tll++;\n\t\t}\n\t\t\n\t\tint mx = get(maxn-t[rr].h).mx+1; //\u53d6\u51fa\u6700\u5927\u7684 f \n\t\tint ct = get(maxn-t[rr].h).ct; //\u5bf9\u5e94\u7684\u65b9\u6848\u6570\u7684\u548c g \n\t\tif (mx > f[t[rr].id]) { // \u5982\u679c\u66f4\u65b0\u4e86\uff0cg \u76f4\u63a5\u53d8 \n\t\t\tf[t[rr].id] = mx;\n\t\t\tg[t[rr].id] = ct;\n\t\t}\n\t\telse if (mx == f[t[rr].id]) g[t[rr].id] += ct; // \u5982\u679c\u76f8\u7b49\uff0cg\u7d2f\u52a0 \n\t\trr++;\n\t}\n\tfor (int i = l; i < ll; i++) init(maxn-t[i].h); // \u590d\u539f\u6811\u72b6\u6570\u7ec4 \n\tCDQ(mid+1,r); // \u9012\u5f52\u53f3\u8fb9 \n}\n```\n\u6811\u72b6\u6570\u7ec4\u4ee3\u7801\uff0c\u6ca1\u4ec0\u4e48\u597d\u6ce8\u91ca\u7684\u4e86\uff1a\n\n```cpp\n//\u6811\u72b6\u6570\u7ec4 \nstruct mit{\n\tint mx,ct;\n};\nint C[maxn+5], cnt[maxn+5];\nint lowbit(int x){\n\treturn x&-x;\n}\n\nvoid add(int pos, int v, int vv){\n\tfor (int i = pos; i <= maxn; i+=lowbit(i)){\n\t\tif (C[i] < v){\n\t\t\tC[i] = v;\n\t\t\tcnt[i] = vv;\n\t\t}\n\t\telse if (C[i] == v) cnt[i] += vv;\n\t}\n}\nmit get(int pos){\n\tint mx = 0, ct = 0;\n\tfor (int i = pos; i; i-=lowbit(i)){\n\t\tif (C[i] > mx){\n\t\t\tmx = C[i];\n\t\t\tct = cnt[i];\n\t\t}\n\t\telse if (C[i] == mx)ct += cnt[i]; \n\t}\n\treturn mit{mx,ct};\n}\n\nvoid init(int pos){\n\tfor (int i = pos; i <= maxn; i+=lowbit(i)) C[i] = cnt[i] = 0;\n}\n```\n\n[$to$ \u6211\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/lgzhou/)\n",
        "postTime": 1649423595,
        "uid": 127682,
        "name": "lg_zhou",
        "ccfLevel": 7,
        "title": "CDQ\u5206\u6cbb 2"
    },
    {
        "content": "## \u9898\u76ee\n[Link.](https://www.luogu.com.cn/problem/P2487)\n\n## \u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u66b4\u529b\u7684 dp\uff0c\u8bbe $dp_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u591a\u7684\u5bfc\u5f39\u62e6\u622a\u957f\u5ea6\uff0c\u5219 $dp_i=\\max(dp_j+1), h_i<h_j \\wedge v_i<v_j$\uff0c\u663e\u7136\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\u3002\u8003\u8651\u5982\u4f55\u4f18\u5316\uff0c\u53d1\u73b0\u53ef\u4ee5\u7528 CDQ \u5206\u6cbb\u3002\n\n\u4f46\u662fCDQ\u5206\u6cbb\u6709\u4e2a\u95ee\u9898\uff0c \u5728\u5904\u7406 $l \\sim r$ \u7684\u533a\u95f4\u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u7528\u524d\u9762\u533a\u95f4\u7684\u4fe1\u606f\uff0c\u4f46\u56e0\u4e3a\u6211\u4eec\u8981\u6bd4\u6700\u5927\u503c\uff0c\u6240\u4ee5\u5c31\u4e0d\u53ef\u4ee5\u76f4\u63a5 CDQ\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8f6c\u6362 CDQ \u9012\u5f52\u7684\u987a\u5e8f\uff0c\u8ba9\u5b83\u4e2d\u5e8f\u904d\u5386\uff0c\u5148\u628a\u5de6\u533a\u95f4\u7684\u7b54\u6848\u8f6c\u79fb\u5230\u53f3\u533a\u95f4\uff0c\u518d\u8ba1\u7b97\u53f3\u533a\u95f4\u5185\u90e8\u7684\u7b54\u6848\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f18\u5316 dp \u4e86\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u6982\u7387\u5176\u5b9e\u5c31\u7b49\u4e8e\u9009\u62e9\u5f53\u524d\u5bfc\u5f39\u7684\u65b9\u6848\u6570\u9664\u4ee5\u603b\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5206\u522b\u6c42\u51fa\u4ee5\u8fd9\u4e2a\u5bfc\u5f39\u7ed3\u5c3e\u548c\u5f00\u59cb\u7684\u6700\u957f\u7684\u957f\u5ea6\uff0c\u5982\u679c\u8fd9\u4e24\u6bb5\u957f\u5ea6\u76f8\u52a0 -1 \u7b49\u4e8e\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\u3002\n\n\u6240\u4ee5\u6b63\u7740\u5012\u7740\u5404\u8dd1\u4e00\u8fb9 CDQ \u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define int ll\n#define db double\n\nint n,m,N;\nint f[4000005];\ndb f1[1000005],f2[1000005];\nint dp1[1000005],dp2[100005];\n\nstruct zz{\n\tint x,y,z,dp;\n\tdb f;\n}a[4000005],b[4000005];\nbool cmp1(zz x,zz y){ return x.y>y.y; }\nbool cmp2(zz x,zz y){ return x.y<y.y; }\nbool cmp3(zz x,zz y){ return x.x==y.x?(x.y==y.y?x.z<y.z:x.y>y.y):x.x>y.x; }\nbool cmp4(zz x,zz y){ return x.x==y.x?(x.y==y.y?x.z<y.z:x.y<y.y):x.x<y.x; }\nbool Check(int p,int q,int op){ return op==1? a[p].y>=a[q].y:a[p].y<=a[q].y; }\n\nstruct Bit_Tree{\n\tll bit1[4000005];\n\tdb bit2[4000005];\n\tint Lowbit(int x){ return x&(-x); }\n\tvoid Insert(int x,int dp,db f){ while(x<=n){ if(bit1[x]<dp)bit1[x]=dp,bit2[x]=f; else if(bit1[x]==dp)bit2[x]+=f; x+=Lowbit(x);  }\t }\n\tll Find1(int x){ ll ans=0;while(x)  ans=max(ans,bit1[x]),x-=Lowbit(x); return ans;\t\t}\n\tdb Find2(int x,int dp){ db ans=0;while(x){ if(bit1[x]==dp) ans+=bit2[x]; x-=Lowbit(x);}; return ans;}\n\tvoid Delete(int x){  while(x<=n) bit1[x]=bit2[x]=0,x+=Lowbit(x); }\n}T; \t\t//\u6811\u72b6\u6570\u7ec4\uff0c\u7ef4\u62a4dp\u4ee5\u53ca\u65b9\u6848\u6570f \n\nvoid CDQ(int l,int r,int op){\n\tif(r<=l) return ; \n\tint mid=(l+r)>>1;CDQ(l,mid,op);\n\tif(op==1) sort(a+l,a+mid+1,cmp1),sort(a+mid+1,a+r+1,cmp1);\n\telse sort(a+l,a+mid+1,cmp2),sort(a+mid+1,a+r+1,cmp2);\t\t\t//\u6392\u5e8f\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5de6\u8fb9\u8f6c\u79fb\u5230\u53f3\u8fb9\u3002 \n\t\n\tint p=l,q=mid+1;\t\t\t\t\t\t\t\t\t\t\t\t//\u8ba1\u7b97\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e \n\twhile(q<=r){\n\t\twhile(p<=mid&&Check(p,q,op)) T.Insert(a[p].z,a[p].dp,a[p].f),p++;\n\t\tint now=T.Find1(a[q].z)+1;\n\t\tif(a[q].dp<now) a[q].dp=now,a[q].f=T.Find2(a[q].z,now-1);   //\u5982\u679c\u5f53\u524d\u7684\u7b54\u6848\u66f4\u4f18\uff0c\u5c31\u53ea\u80fd\u66f4\u65b0\u7b54\u6848\uff0c\u91cd\u65b0\u8ba1\u7b97\u65b9\u6848\u6570\u3002\t \n\t\telse if(a[q].dp==now) a[q].f+=T.Find2(a[q].z,now-1);\t\t//\u5982\u679c\u8bf4\u7b54\u6848\u548cdp\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u7d2f\u52a0\u65b9\u6848\u6570\u5c31\u597d\u4e86\u3002 \n\t\tq++;\n\t}\n\tfor(int i=l;i<p;i++) T.Delete(a[i].z);\t\t\t\t\t\t\t//\u6e05\u7a7a \n\t\n\tif(op==1) sort(a+mid+1,a+r+1,cmp3); else sort(a+mid+1,a+r+1,cmp4);//\u91cd\u65b0\u6392\u5e8f \n\tCDQ(mid+1,r,op);\n\t\n}\n\nsigned main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) scanf(\"%lld%lld\",&a[i].x,&a[i].y),a[i].z=i,a[i].dp=1,a[i].f=1; //\u8d4b\u521d\u503c \n\tsort(a+1,a+n+1,cmp3),CDQ(1,n,1);\n\tint ans1=0;db sum=0;\n\tfor(int i=1;i<=n;i++) ans1=max(ans1,a[i].dp); printf(\"%lld\\n\",ans1);\n\tfor(int i=1;i<=n;i++) dp1[a[i].z]=a[i].dp,f1[a[i].z]=a[i].f;\t\t\n\tfor(int i=1;i<=n;i++) a[i].z=(n-a[i].z+1),a[i].dp=1,a[i].f=1;\t\t\n\tsort(a+1,a+n+1,cmp4);CDQ(1,n,2);\t\t//\u6b63\u53cd\u5404\u8dd1\u4e00\u6b21 \n\tfor(int i=1;i<=n;i++) dp2[n-a[i].z+1]=a[i].dp,f2[n-a[i].z+1]=a[i].f;\n\tfor(int i=1;i<=n;i++) if(dp2[n-a[i].z+1]==ans1) sum+=f2[n-a[i].z+1];\n\tfor(int i=1;i<=n;i++) if(dp1[i]+dp2[i]==ans1+1) printf(\"%.5lf \",f1[i]*f2[i]/sum); else printf(\"0.00000 \");\n\treturn 0;\n}\n\n```\n",
        "postTime": 1644714033,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "P2487 \u62e6\u622a\u5bfc\u5f39 \u9898\u89e3"
    },
    {
        "content": "## \u7b80\u5355\u9898\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u6570\u5bf9 $(h_i, v_i)$\u3002  \n\n\u6c42\uff1a  \n1. \u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002  \n2. \u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u5206\u522b\u6c42\u51fa\u5305\u542b\u6570\u5bf9 $(h_i, v_i)$ \u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u548c\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u548c\u7684\u6bd4\u3002  \n\n**\u6570\u636e\u8303\u56f4**\uff1a$1 \\leq n \\leq 5 \\times {10} ^ 4$\uff0c$\\forall 1 \\leq i \\leq n, 1 \\leq h_i, v_i \\leq {10}^9$\u3002  \n\n## \u5206\u6790\n\n### \u95ee\u9898 $1$\n\n\u5148\u8003\u8651 $O(n^2)$ \u505a\u6cd5\uff0c\u672c\u8d28\u4e0e\u4e00\u7ef4\u7684\u76f8\u540c\u3002  \n\n\u5b9a\u4e49 $f_i$ \u8868\u793a\u4ee5\u6570\u5bf9 $(h_i, v_i)$ \u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002  \n\n\u90a3\u4e48\u6709\n\n$$\n\\begin{aligned}\nf_i & = \\max(1, \\max\\{ f_j + 1 \\}), h_i \\leq h_j \\wedge v_i \\leq v_j \\\\\n\\end{aligned}\n$$\n\n\u63a8\u51fa\u4e86\u5f0f\u5b50\u540e\u8003\u8651\u4f18\u5316\uff0c\u53ef\u4ee5\u4f7f\u7528 $\\texttt{cdq}$ \u5206\u6cbb\u3002  \n\n\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $\\texttt{[l, r]}$ \u7684\u8f6c\u79fb\u3002  \n\n$\\texttt{int mid = (l + r) >> 1}$  \n\n\u5148\u9012\u5f52 $\\texttt{cdq(l, mid)}$\u3002\n\n\u5047\u8bbe $\\texttt{[l, mid]}$ \u5df2\u7ecf\u6c42\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u5373 $f_{\\texttt{l} \\sim \\texttt{r}}$ \u90fd\u662f\u6b63\u786e\u7684\u3002  \n\n\u8003\u8651\u5982\u4f55\u8f6c\u79fb\uff0c\u5373 $\\texttt{[l, mid]}$ \u5bf9 $\\texttt{[mid + 1, r]}$ \u7684\u8d21\u732e\u3002  \n\n\u4e0e\u4e09\u7ef4\u504f\u5e8f\u4e00\u6837\uff0c\u5408\u5e76 $h$\uff0c\u4ee5 $v$ \u4e3a\u4e0b\u6807\u628a $f$ \u5b58\u653e\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u3002  \n\n\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u7684 $f$ \u9700\u8981\u53d6\u6700\u5927\u503c\u3002  \n\n\u6700\u540e\u9012\u5f52 $\\texttt{cdq(mid + 1, r)}$\u3002  \n\n\u56e0\u4e3a\u662f\u6700\u540e\u9012\u5f52 $\\texttt{cdq(mid + 1, r)}$\uff0c\u6240\u4ee5\u8be2\u95ee\u4e0d\u80fd\u771f\u6b63\u5408\u5e76\uff0c\u5728\u7ed3\u675f\u65f6\u9700\u8981\u8fd8\u539f\u6210\u539f\u6765\u7684\u987a\u5e8f\u3002  \n\n### \u95ee\u9898 $2$\n\n\u95ee\u9898 $1$ \u89e3\u51b3\u540e\u95ee\u9898 $2$ \u5c31\u7b80\u5355\u4e86\u3002  \n\n\u53ea\u9700\u8981\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u518d\u7ef4\u62a4\u4e00\u4e2a\u7edf\u8ba1\u4e2a\u6570\u6570\u7ec4\u5373\u53ef\u3002  \n\n- \u4fee\u6539\u7684\u503c\u5927\u4e8e\u5f53\u524d\u6700\u5927\u503c\u5c31\u4fee\u6539\u3002  \n- \u4fee\u6539\u7684\u503c\u7b49\u4e8e\u5f53\u524d\u6700\u5927\u503c\u5c31\u7d2f\u52a0\u3002  \n\n\u56e0\u4e3a\u6c42\u7684\u662f **\u5305\u542b** \u6570\u5bf9 $(h_i, v_i)$ \u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u53cd\u7740\u6c42\u4e00\u904d\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002  \n\n\u4e24\u4e2a\u6570\u76f8\u4e58\u518d\u9664\u4ee5\u603b\u6570\u5c31\u662f\u7b54\u6848\uff0c\u524d\u63d0\u662f\u8fd9\u4e2a\u6570\u5bf9\u88ab\u5305\u542b\u5728\u81f3\u5c11\u4e00\u4e2a\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2d\u3002  \n\n\u6e29\u99a8\u63d0\u793a\uff0c\u4e2a\u6570\u53ef\u80fd\u4f1a\u8d85\u8fc7 $\\texttt{long long}$ \u7684\u8303\u56f4\uff0c\u5efa\u8bae\u4f7f\u7528 $\\texttt{double}$\u3002  \n\n## $\\texttt{code}$\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <utility>\n#include <iostream>\n#include <algorithm>\n\nint rint() {\n\tint x = 0, fx = 1;\n\tchar c = getchar();\n\t\n\twhile (c < '0' || c > '9') {\n\t\tfx ^= (c == '-');\n\t\tc = getchar();\n\t}\n\t\n\twhile ('0' <= c && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\t\n\tif (!fx) {\n\t\treturn -x;\n\t}\n\t\n\treturn x;\n}\n\nvoid read(int &x) {\n\tx = rint();\n}\n\ntemplate<typename... Ts>\nvoid read(int &x, Ts &...rest) {\n\tread(x);\n\tread(rest...);\n}\n\nint Max(int u, int v) {\n\treturn (u > v) ? u : v;\n}\n\nint Min(int u, int v) {\n\treturn (u < v) ? u : v;\n}\n\nconst int MAX_n = 5e4;\n\nint n, Time; // Time \u662f\u65f6\u95f4\u6233\u4f18\u5316\u6811\u72b6\u6570\u7ec4\uff0c\u53ef\u4ee5\u4e0d\u7528\u6e05\u7a7a \nint dp1[MAX_n + 5]; // \u6b63 \nint dp2[MAX_n + 5]; // \u53cd \nint vis[MAX_n + 5]; // \u6811\u72b6\u6570\u7ec4\u65f6\u95f4\u6233 \nint Bit[MAX_n + 5];\ndouble bit[MAX_n + 5];\ndouble num1[MAX_n + 5]; // \u6b63 \ndouble num2[MAX_n + 5]; // \u53cd \n\nstd::vector<int> lsh; // \u79bb\u6563\u5316 v \n\nstruct Missile {\n\tint idx, h, v;\n} q[MAX_n + 5];\nMissile tmp[MAX_n + 5];\n\nbool cmph1(Missile x, Missile y) {\n\treturn x.h > y.h;\n}\n\nbool cmph2(Missile x, Missile y) {\n\treturn x.h < y.h;\n}\n\nint lowbit(int x) {\n\treturn x & (-x);\n}\n\nvoid add(int k, int x, double y) {\n\twhile (k <= n) {\n\t\tif (vis[k] != Time) {\n\t\t\tvis[k] = Time;\n\t\t\tBit[k] = x;\n\t\t\tbit[k] = y;\n\t\t} else {\n\t\t\tif (x > Bit[k]) {\n\t\t\t\tBit[k] = x;\n\t\t\t\tbit[k] = y;\n\t\t\t} else if (x == Bit[k]) {\n\t\t\t\tbit[k] += y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tk += lowbit(k);\n\t}\n}\n\nstd::pair<int, double> ask(int k) {\n\tint resmax = 0;\n\tdouble ressum = 0.0;\n\t\n\twhile (k > 0) {\n\t\tif (vis[k] == Time) {\n\t\t\tif (Bit[k] > resmax) {\n\t\t\t\tresmax = Bit[k];\n\t\t\t\tressum = bit[k];\n\t\t\t} else if (Bit[k] == resmax) {\n\t\t\t\tressum += bit[k];\n\t\t\t}\n\t\t}\n\t\t\n\t\tk -= lowbit(k);\n\t}\n\t\n\treturn std::make_pair(resmax, ressum);\n}\n\nvoid merge1(int L1, int R1, int L2, int R2) {\n\t++Time;\n\tint i = L1, j = L2;\n\t\n\tfor (int k = L1; k <= R2; k++) {\n\t\ttmp[k] = q[k];\n\t}\n\t\n\tstd::sort(q + L1, q + R1 + 1, cmph1);\n\tstd::sort(q + L2, q + R2 + 1, cmph1);\n\t\n\twhile (i <= R1 || j <= R2) {\n\t\tif (i <= R1 && (j > R2 || q[i].h >= q[j].h)) {\n\t\t\tadd((int)lsh.size() + 1 - q[i].v, dp1[q[i].idx], num1[q[i].idx]);\n\t\t\ti++;\n\t\t} else {\n\t\t\tstd::pair<int, double> now = ask((int)lsh.size() + 1 - q[j].v);\n\t\t\t\n\t\t\tif (now.first + 1 > dp1[q[j].idx]) {\n\t\t\t\tdp1[q[j].idx] = now.first + 1;\n\t\t\t\tnum1[q[j].idx] = now.second;\n\t\t\t} else if (now.first + 1 == dp1[q[j].idx]) {\n\t\t\t\tnum1[q[j].idx] += now.second;\n\t\t\t}\n\t\t\t\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\tfor (int k = L1; k <= R2; k++) {\n\t\tq[k] = tmp[k];\n\t}\n}\n\nvoid cdq1(int L, int R) {\n\tif (L == R) {\n\t\treturn ;\n\t}\n\t\n\tint Mid = (L + R) >> 1;\n\tcdq1(L, Mid);\n\tmerge1(L, Mid, Mid + 1, R);\n\tcdq1(Mid + 1, R);\n}\n\nvoid merge2(int L1, int R1, int L2, int R2) {\n\t++Time;\n\tint i = L1, j = L2;\n\t\n\tfor (int k = L1; k <= R2; k++) {\n\t\ttmp[k] = q[k];\n\t}\n\t\n\tstd::sort(q + L1, q + R1 + 1, cmph2);\n\tstd::sort(q + L2, q + R2 + 1, cmph2);\n\t\n\twhile (i <= R1 || j <= R2) {\n\t\tif (i <= R1 && (j > R2 || q[i].h <= q[j].h)) {\n\t\t\tadd(q[i].v, dp2[q[i].idx], num2[q[i].idx]);\n\t\t\ti++;\n\t\t} else {\n\t\t\tstd::pair<int, double> now = ask(q[j].v);\n\t\t\t\n\t\t\tif (now.first + 1 > dp2[q[j].idx]) {\n\t\t\t\tdp2[q[j].idx] = now.first + 1;\n\t\t\t\tnum2[q[j].idx] = now.second;\n\t\t\t} else if (now.first + 1 == dp2[q[j].idx]) {\n\t\t\t\tnum2[q[j].idx] += now.second;\n\t\t\t}\n\t\t\t\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\tfor (int k = L1; k <= R2; k++) {\n\t\tq[k] = tmp[k];\n\t}\n}\n\nvoid cdq2(int L, int R) {\n\tif (L == R) {\n\t\treturn ;\n\t}\n\t\n\tint Mid = (L + R) >> 1;\n\tcdq2(L, Mid);\n\tmerge2(L, Mid, Mid + 1, R);\n\tcdq2(Mid + 1, R);\n}\n\nsigned main() {\n\tn = rint();\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tread(q[i].h, q[i].v);\n\t\tq[i].idx = i;\n\t\tlsh.push_back(q[i].v);\n\t}\n\t\n\tstd::sort(lsh.begin(), lsh.end());\n\tlsh.resize(std::unique(lsh.begin(), lsh.end()) - lsh.begin());\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tq[i].v = std::lower_bound(lsh.begin(), lsh.end(), q[i].v) - lsh.begin() + 1;\n\t\tdp1[i] = dp2[i] = 1;\n\t\tnum1[i] = num2[i] = 1.0;\n\t}\n\t\n\tcdq1(1, n);\n\t\n\tfor (int i = n / 2; i >= 1; i--) {\n\t\tstd::swap(q[i], q[n + 1 - i]);\n\t}\n\t\n\tcdq2(1, n);\n\tint res = 0;\n\tdouble sum = 0;\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (dp1[i] > res) {\n\t\t\tres = dp1[i];\n\t\t\tsum = num1[i];\n\t\t} else if (dp1[i] == res) {\n\t\t\tsum += num1[i];\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\", res);\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (dp1[i] + dp2[i] - 1 != res) {\n\t\t\tprintf(\"0.00000\");\n\t\t} else {\n\t\t\tprintf(\"%.5f\", 1.0 * num1[i] * num2[i] / sum);\n\t\t}\n\t\t\n\t\tputchar((i == n) ? '\\n' : ' ');\n\t}\n\t\n\treturn 0;\n}\n\n```\n",
        "postTime": 1644672612,
        "uid": 331660,
        "name": "mqxmm",
        "ccfLevel": 0,
        "title": "\u300c \u9898\u89e3 \u300dP2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39"
    },
    {
        "content": "\u6734\u7d20\u7684\u505a\u6cd5\u5c31\u662f\u4e8c\u5143\u7ec4 $(a_i,b_i)$ \u5e8f\u5217\u7684 LIS dp\uff0c\u540c\u65f6\u7ef4\u62a4 LIS \u7684\u6570\u91cf\u3002$i$ \u53ef\u5728 $j$ \u51b3\u7b56\u7684\u6761\u4ef6\u662f $i>j,a_j<a_i,b_j<b_i$\uff08\u5c06\u65f6\u95f4\u89c6\u4e3a\u4e0b\u6807\uff09\u3002\n\n\u4e8e\u662f\u8054\u60f3\u5230\u4f7f\u7528 cdq dac \u4f18\u5316\uff0c\u4f7f\u7528\u6811\u72b6\u6570\u7ec4 / \u7ebf\u6bb5\u6811\u652f\u6301\u5355\u70b9\u5408\u5e76 dp \u503c\uff0c\u6700\u5927\u503c\u3002\n\n\u7136\u540e\uff0c\uff0c\u7b2c\u4e8c\u95ee\u8981\u7ef4\u62a4\u53cd\u8f6c\u8fc7\u6765\u7684 dp \u503c\uff0c\u518d\u8dd1\u4e00\u904d\u5c31\u884c\u4e86\u3002\n\n\u8bf4\u51e0\u4e2a\u5751\u70b9\uff0c\u5728 dac \u65f6 $l=r$ \u7ed9 dp \u8d4b\u521d\u503c\u65f6\uff0cdp \u5728 $l$ \u4e0a\u7684\u70b9\u503c\u4e0d\u4e00\u5b9a\u662f\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\uff0c\u6240\u4ee5\u4e0d\u80fd\u7b80\u5355\u7684\u8d4b\u4e3a $(1,1)$\uff0c\u8981\u53d6 max\uff08\u5bf9\u7740 xtw \u7684\u4ee3\u7801\u7075\u9b42\u5bf9\u7167\u624d\u627e\u51fa\u6765 \u61a8\u7b11\uff09\u3002\n\n\u56e0\u4e3a $[l,mid]$ \u7684 dp \u51b3\u7b56\u662f\u5bf9 $(mid,r]$ \u7684\u51b3\u7b56\u6709\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u5148\u628a\u5de6\u53f3\u4e24\u8fb9\u8dd1\u5b8c\u518d\u8ba1\u7b97\u8de8\u533a\u95f4\u8d21\u732e\uff0c\u800c\u662f\u5e94\u8be5\u5148\u628a $[l,mid]$ \u8dd1\u5b8c\uff0c\u7136\u540e\u518d\u8dd1\u53f3\u533a\u95f4\u3002\u8fd9\u53c8\u5e26\u6765\u4e00\u4e2a\u7ec6\u8282\uff0c\u5bf9\u5de6\u53f3\u533a\u95f4\u7684\u4ee5 $a_i$ \u4e3a\u5173\u952e\u5b57\u7684\u6392\u5e8f\u4f1a\u4f7f\u5f97\u539f\u533a\u95f4\u7684 $t_i$\uff08\u4e0b\u6807\uff09\u65e0\u5e8f\uff0c\u9700\u8981\u5728\u9012\u5f52\u4e4b\u524d\u6392\u56de\u6765\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define cmin(x, y) x = min(x, y)\n#define cmax(x, y) x = max(x, y)\n#define fors(i, l, r, ...) for(int i = (l), REP##i = (r), ##__VA_ARGS__; i <= REP##i; ++i)\n#define dfors(i, r, l, ...) for(int i = (r), REP##i = (l), ##__VA_ARGS__; i >= REP##i; --i)\nint f1[50100], f2[50100];\ndouble g1[50100], g2[50100];\nint n, _n;\nstruct request {\n    int t, x, y;\n} req[50100], tmp[50100];\nstruct S {\n    int x = 0;\n    double p = 0;\n} bit[50100];\nvoid merge(S& x, const S& y) {\n    if(x.x > y.x) x = x;\n    else if(x.x < y.x) x = y;\n    else x = (S){x.x, x.p+y.p};\n}\nvoid add(int x, const S& v) {\n    for(; x; x -= x&-x) merge(bit[x], v);\n}\nvoid reset(int x) {\n    for(; x; x -= x&-x) bit[x] = (S){0, 0};\n}\nS ask(int x) {\n    S res;\n    for(; x <= _n; x += x&-x) merge(res, bit[x]);\n    return res;\n}\nvoid solve(const int l, const int r, int f[], double g[]) {\n    if(l == r) {\n        cmax(f[req[l].t], 1), g[req[l].t] += f[req[l].t] == 1;\n        return;\n    }\n    int mid = (l+r)>>1;\n    sort(req+l, req+r+1,\n        [](const request& lhs, const request& rhs) { return lhs.t < rhs.t; });\n    solve(l, mid, f, g);\n    sort(req+l, req+mid+1,\n        [](const request& lhs, const request& rhs) { return lhs.y > rhs.y; });\n    sort(req+mid+1, req+r+1,\n        [](const request& lhs, const request& rhs) { return lhs.y > rhs.y; });\n    int j = l;\n    fors(i, mid+1, r) {\n        for(; j <= mid && req[j].y >= req[i].y; ++j) add(req[j].x, (S){f[req[j].t], g[req[j].t]});\n        S ret = ask(req[i].x);\n        if(ret.x == 0) continue;\n        if(f[req[i].t] < ret.x+1) f[req[i].t] = ret.x+1,g[req[i].t] = ret.p;\n        else if(f[req[i].t] == ret.x+1) g[req[i].t] += ret.p;\n    }\n    fors(i, l, j) reset(req[i].x);\n    solve(mid+1, r, f, g);\n}\nsigned main() {\n    ios::sync_with_stdio(0), cin.tie(0);\n    cin >> n;\n    vector<int> v;\n    fors(i, 1, n) {\n        cin >> req[i].x >> req[i].y;\n        req[i].t = i;\n        v.emplace_back(req[i].x);\n    }\n    sort(v.begin(), v.end());\n    v.erase(unique(v.begin(), v.end()), v.end());\n    _n = static_cast<int>(v.size());\n    fors(i, 1, n) req[i].x = lower_bound(v.begin(), v.end(), req[i].x)-v.begin()+1;\n    solve(1, n, f1, g1);\n    int max_f1 = *max_element(f1+1, f1+n+1);\n    double sum_g1 = 0;\n    fors(i, 1, n) sum_g1 += (max_f1 == f1[i])*g1[i];\n    fors(i, 1, n) req[i].t = n-req[i].t+1,req[i].x = _n-req[i].x+1,req[i].y *= -1;\n    solve(1, n, f2, g2);\n    reverse(f2+1, f2+n+1);\n    reverse(g2+1, g2+n+1);\n    cout << max_f1 << \"\\n\";\n    fors(i, 1, n) cout << (f1[i]+f2[i]-1 == max_f1 ? g1[i]*g2[i]/sum_g1 : 0.0) << \" \\n\"[i == n];\n    return 0;\n}\n```",
        "postTime": 1644649901,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "STARLIGHT \u4e0d\u80fd\u53ea\u6709\u666e\u901a\u6bbf\u5802\uff011"
    },
    {
        "content": "\u5199\u8d77\u6765\u548c\u8c03\u8d77\u6765\u90fd\u5f88\u6076\u5fc3\u7684 CDQ+dp\u3002\n\n$f1_i$ \u8868\u793a\u4ee5\u7b2c $i$ \u4e2a\u5bfc\u5f39\u7ed3\u5c3e\u7684\u6700\u957f LIS \u957f\u5ea6\uff0c$f2_i$ \u8868\u793a\u4ee5\u7b2c $i$ \u4e2a\u5bfc\u5f39\u5f00\u5934\u7684\u6700\u957f LIS \u957f\u5ea6\uff0c$g1_i$ \u8868\u793a\u4ee5\u7b2c $i$ \u4e2a\u5bfc\u5f39\u7ed3\u5c3e\u7684\u6700\u957f LIS \u65b9\u6848\u6570\uff0c$g2_i$ \u540c\u7406\u3002\n\n\u4ee5\u4e0b\u6211\u4eec\u53ea\u8003\u8651 $f1,g1$\uff0c\u5e76\u7528 $f$ \u4ee3\u66ff $f1$\uff0c$g$ \u4ee3\u66ff $g1$\u3002\n\n$$f_i=\\max f_j+1(1\\le j<i,h_i\\le h_j,v_i\\le v_j)$$\n\n$$g_i=\\max g_j+1(1\\le j<i,h_i\\le h_j,v_i\\le v_j,f_i=f_j+1)$$\n\n\u8fd9\u4e2a $f$ \u7684\u9650\u5236\u662f\u4e2a\u4e09\u7ef4\u504f\u5e8f\uff0c\u76f4\u63a5 cdq \u5957\u6811\u72b6\u6570\u7ec4\u4f18\u5316 dp \u5c31\u884c\u4e86\u3002~~\u540d\u5b57\u83ab\u540d\u5413\u4eba~~\n\n\u90a3 $g$ \u5462\uff1f\u56db\u4f4d\u504f\u5e8f\uff1f\u7b97\u5b8c\u4e86 $f$ \u518d\u6765\u7b97 $g$ \u663e\u7136\u662f\u884c\u4e0d\u901a\u7684\uff0c\u6240\u4ee5\u8981\u5728\u8ba1\u7b97 $f$ \u7684\u65f6\u5019\u987a\u5e26\u8ba1\u7b97 $g$\u3002\n\n\u7136\u540e\u8ba1\u7b97 $f2,g2$ \u540c\u7406\uff0c\u628a\u5e8f\u5217\u53cd\u8fc7\u6765\uff0c$h,v$ \u53d6\u4e2a\u53cd\uff08\u4f8b\u5982\u90fd\u8bbe\u4e3a $114514-h_i$)\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u7b97\u51fa\u4e86\u8fd9\u4e2a\u540e\u7b2c\u4e00\u95ee\u5c31\u89e3\u51b3\u4e86\uff0c\u7b2c\u4e8c\u95ee\u5bf9\u4e8e\u5bfc\u5f39 $i$\uff0c\u5047\u8bbe\u603b\u65b9\u6848\u6570\u4e3a $tot$\uff0c\u5b83\u88ab\u62e6\u622a\u7684\u6982\u7387\u663e\u7136\u662f\u82e5 $f1_i+f2_i-1$ \u4e0d\u7b49\u4e8e\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u5c31\u662f $0$ \u7684\u6982\u7387\uff0c\u5426\u5219\u5c31\u662f $\\frac{g1_i\\cdot g2_i}{tot}$\u3002\n\n\u5b8c\u4e86\uff1f\u5b8c\u4e86\u3002\n\n\u4f46\u8fd9\u6837\u8bf4\u8fc7\u4e8e\u7b3c\u7edf\uff0c~~\u8bf4\u4e86\u7b49\u4e8e\u6ca1\u8bf4~~\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u7406\u4e00\u4e0b\u5177\u4f53\u7684\u4e1c\u897f\u548c\u5b9e\u73b0\u7ec6\u8282\uff1a\n\n\u5bf9\u4e8e $f_i$ \u7684\u8ba1\u7b97\uff0c\u7b2c\u4e00\u7ef4 $j<i$ \u7684\u9650\u5236\u5929\u7136\u6ee1\u8db3\uff0c\u7b2c\u4e8c\u7ef4 $h_i\\le h_j$ \u6211\u4eec cdq \u5206\u6cbb\u524a\u6389\uff0c\u7b2c\u4e09\u7ef4 $v_i\\le v_j$ \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u7531\u4e8e\u6811\u72b6\u6570\u7ec4\u67e5\u6700\u5927\u503c\u53ea\u80fd\u67e5 $[1,x]$ \u4e0d\u80fd\u67e5 $[x,n]$\uff0c\u6240\u4ee5\u6211\u4eec cdq \u65f6\u8981\u628a $h$ \u548c $v$ \u53d6\u4e2a\u53cd\u53d8\u6210 $h_j\\le h_i,v_j\\le v_i$\u3002\n\n\u5bf9\u4e8e $g_i$ \u7684\u8ba1\u7b97\uff0c\u5728\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6700\u5927\u503c\u65f6\uff0c\u987a\u5e26\u7ef4\u62a4\u4ee5\u4e0b\u6709\u591a\u5c11\u79cd\u65b9\u6848\u53ef\u4ee5\u5f97\u5230\u8fd9\u79cd\u6700\u5927\u503c\u3002$g$ \u7684\u8f6c\u79fb\u4e5f\u662f\u4e00\u4e2a dp\uff0c\u6240\u4ee5\u548c $f$ \u4e00\u8d77\u7b97\u5176\u5b9e\u5f88\u81ea\u7136\u3002\n\n\u8fd8\u6709\u5c31\u662f\u65b9\u6848\u6570\u8981\u5f00 `double`\uff0c`long long` \u4f1a\u70b8\uff0c\u603b\u65b9\u6848\u6570 `tot` \u4e5f\u8981\u5f00 `double`\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\ninline int max(const int x, const int y) {return x > y ? x : y;}\ninline int min(const int x, const int y) {return x < y ? x : y;}\nint f1[50005], f2[50005], h[50005], v[50005], n;\ndouble g1[50005], g2[50005];\nstruct Node {\n\tint x, y, z;\n\tinline bool operator < (const Node a) const {return x < a.x;}\n} a[50005];\nstruct Initer {\n\tint v, id;\n\tinline bool operator < (const Initer a) {return v < a.v;}//\u79bb\u6563\u5316\u7528\u7684\uff0c\u4e0d\u7528\u7ba1\n} b[50005];\nstruct cmp {//functor\u6392\u5e8f\u6bd4\u51fd\u6570\u5feb\u5f97\u591a\n\tinline bool operator () (const Node a, const Node b) const {return a.y < b.y;}\n};\nstruct cmp2 {\n\tinline bool operator() (const Node a, const Node b) {return a.x > b.x;}\n};\nstruct BIT {//\u6811\u72b6\u6570\u7ec4\u6211\u7528\u4e86\u65f6\u95f4\u6233\u6e05\u7a7a\uff0c\u4e0d\u4f1a\u7684\u5de6\u8f6chttps://www.cnblogs.com/imakf/p/14071208.html\n\tint nowtime, c[50005], t[50005];\n\tdouble cnt[50005];//\u65b9\u6848\u6570\u5f00double\n\tvoid update(int x, int d, double d2) {//\u6ce8\u610fupdate\u6709\u4e09\u4e2a\u53c2\uff0c\u591a\u51fa\u6765\u7684\u4e00\u4e2a\u662f\u65b9\u6848\u6570\n\t\tfor (int i = x; i <= n; i += (i & ~i + 1))\n\t\t\tif (nowtime ^ t[i]) t[i] = nowtime, c[i] = d, cnt[i] = d2;\n\t\t\telse {\n\t\t\t\tif (c[i] < d) c[i] = d, cnt[i] = d2;\n\t\t\t\telse if (c[i] == d) cnt[i] += d2;\n\t\t\t}\n\t}\n\tinline std::pair<int, double> query(int x) {\n\t\tint sum = 0;\n\t\tdouble sum2 = 0;\n\t\tfor (int i = x; i; i -= (i & ~i + 1))\n\t\t\tif (nowtime == t[i]) {\n\t\t\t\tif (sum < c[i]) sum = c[i], sum2 = cnt[i];//\u6811\u72b6\u6570\u7ec4\u987a\u5e26\u7ef4\u62a4\n\t\t\t\telse if (sum == c[i]) sum2 += cnt[i];\n\t\t\t}\n\t\treturn std::make_pair(sum, sum2);//\u6811\u72b6\u6570\u7ec4\u8fd4\u56de\u7684\u662fpair,first\u4e3aLIS\u957f\u5ea6\uff0csecond\u4e3a\u65b9\u6848\u6570\n\t}\n\tinline void clear() {++ nowtime;}\n} bitf;\n\nvoid CDQ1(int l, int r) {\n\tif (l == r) return;\n\tint mid = l + r >> 1, i = l, j = mid + 1;\n\tCDQ1(l, mid);\n\tstd::sort(a + l, a + mid + 1, cmp()), std::sort(a + mid + 1, a + r + 1, cmp());\n\twhile (i <= mid && j <= r) {\n\t\tif (a[i].y <= a[j].y) bitf.update(a[i].z, f1[a[i].x], g1[a[i].x]), ++ i;\n\t\telse {\n\t\t\tstd::pair<int, double> ans = bitf.query(a[j].z);\n\t\t\tif (ans.first + 1 > f1[a[j].x])\n\t\t\t\tf1[a[j].x] = ans.first + 1, g1[a[j].x] = ans.second;\n\t\t\telse if (ans.first + 1 == f1[a[j].x]) g1[a[j].x] += ans.second;\n\t\t\t++ j;\n\t\t}\n\t}\n\twhile (j <= r)  {\n\t\tstd::pair<int, double> ans = bitf.query(a[j].z);\n\t\tif (ans.first + 1 > f1[a[j].x])\n\t\t\tf1[a[j].x] = ans.first + 1, g1[a[j].x] = ans.second;\n\t\telse if (ans.first + 1 == f1[a[j].x]) g1[a[j].x] += ans.second;\n\t\t++ j;\n\t}\n\tstd::sort(a + mid + 1, a + r + 1);//cdq\u5b8c\u4e86\u8fc7\u540e\u539f\u59cb\u4e0b\u6807\u662f\u4e71\u5e8f\u7684\uff0c\u6240\u4ee5\u8981sort\u56de\u53bb\n\tbitf.clear(), CDQ1(mid + 1, r);\n}\nvoid CDQ2(int l, int r) {//\u590d\u5236cdq1\uff0c\u628af1\u6539\u4e3af2\uff0c\u628ag1\u6539\u4e3ag2\uff0c\u8fde\u4e2a\u5927\u4e8e\u5c0f\u4e8e\u7684\u7b26\u53f7\u90fd\u4e0d\u7528\u6539\uff0c\u8c03\u7528\u524d\u76f4\u63a5\u53cd\u8f6c\u5e8f\u5217\n\tif (l == r) return;\n\tint mid = l + r >> 1, i = l, j = mid + 1;\n\tCDQ2(l, mid);\n\tstd::sort(a + l, a + mid + 1, cmp()), std::sort(a + mid + 1, a + r + 1, cmp());\n\twhile (i <= mid && j <= r) {\n\t\tif (a[i].y <= a[j].y) bitf.update(a[i].z, f2[a[i].x], g2[a[i].x]), ++ i;\n\t\telse {\n\t\t\tstd::pair<int, double> ans = bitf.query(a[j].z);\n\t\t\tif (ans.first + 1 > f2[a[j].x])\n\t\t\t\tf2[a[j].x] = ans.first + 1, g2[a[j].x] = ans.second;\n\t\t\telse if (ans.first + 1 == f2[a[j].x]) g2[a[j].x] += ans.second;\n\t\t\t++ j;\n\t\t}\n\t}\n\twhile (j <= r)  {\n\t\tstd::pair<int, double> ans = bitf.query(a[j].z);\n\t\tif (ans.first + 1 > f2[a[j].x])\n\t\t\tf2[a[j].x] = ans.first + 1, g2[a[j].x] = ans.second;\n\t\telse if (ans.first + 1 == f2[a[j].x]) g2[a[j].x] += ans.second;\n\t\t++ j;\n\t}\n\tstd::sort(a + mid + 1, a + r + 1, cmp2());\n\tbitf.clear(), CDQ2(mid + 1, r);\n}\n\nvoid init(int *a, int &mx) {\n\tfor (int i = 1; i <= n; ++ i) b[i].id = i, b[i].v = a[i];\n\tstd::sort(b + 1, b + n + 1);\n\tfor (int i = 1; i <= n; ++ i)\n\t\ta[b[i].id] = a[b[i - 1].id] + 1 - (b[i].v == b[i - 1].v);\n\tmx = a[b[n].id] + 1;\n\tfor (int i = 1; i <= n; ++ i) a[i] = mx - a[i];//\u4f17\u6240\u5468\u77e5\u6811\u72b6\u6570\u7ec4\u53ea\u80fd\u6c42\u524d\u7f00max\uff0c\u53d6\u4e2a\u53cd\u8f6c\u5316\u4e00\u4e0b\u628a\u540e\u7f00\u6539\u4e3a\u524d\u7f00\n}\n\nint main() {\n\tint mxh, mxv;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++ i)\n\t\tscanf(\"%d%d\", h + i, v + i), f1[i] = g1[i] = f2[i] = g2[i] = 1;\n\tinit(h, mxh), init(v, mxv);\n\tfor (int i = 1; i <= n; ++ i) a[i].x = i, a[i].y = h[i], a[i].z = v[i];\n\tCDQ1(1, n);\n\tint ans = 0;\n\tdouble sum = 0;\n\tfor (int i = 1; i <= n; ++ i) ans = max(ans, f1[i]);\n\tfor (int i = 1; i <= n; ++ i)\n\t\tif (f1[i] == ans) sum += g1[i];//sum\u5373\u4e3atot\n\tprintf(\"%d\\n\", ans);\n\tstd::sort(a + 1, a + n + 1);\n\tstd::reverse(a + 1, a + n + 1);\n\tfor (int i = 1; i <= n; ++ i) a[i].y = mxh - a[i].y, a[i].z = mxv - a[i].z;//\u53d6\u53cd\u56de\u6765\u518dcdq2\n\tCDQ2(1, n);\n\tfor (int i = 1; i <= n; ++ i)\n\t\tif (f1[i] + f2[i] - 1 == ans) printf(\"%.5lf \", g1[i] * g2[i] / sum);\n\t\telse printf(\"0.00000 \");\n\treturn 0;\n}\n```",
        "postTime": 1628602848,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39\u3011"
    },
    {
        "content": "~~\u53c8\u6765\u6c34\u9898\u89e3\u4e86~~\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P2487 \"\u9898\u76ee\u94fe\u63a5\")\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u7ed9 $n$ \u4e2a\u7684\u9ad8\u5ea6 $h_i$ \u3001\u901f\u5ea6 $v_i$ \u4fe1\u606f\uff0c\u8981\u6c42\u540e\u62e6\u622a\u7684\u5bfc\u5f39\u4e0d\u5f97\u9ad8\u4e8e\u5feb\u4e8e\u5148\u524d\u62e6\u622a\u7684\u5bfc\u5f39\uff0c\u6c42\u6700\u5927\u62e6\u622a\u6570\u91cf\uff0c\u4ee5\u53ca\u5728\u62e6\u622a\u6570\u6700\u5927\u65f6\uff0c\u6bcf\u4e2a\u5bfc\u5f39\u88ab\u62e6\u622a\u7684\u6982\u7387\u3002\n\n## \u9898\u89e3\n\n\u6ce8\u610f\u5230\u62e6\u622a\u7684\u5bfc\u5f39\u9700\u6ee1\u8db3 $t_i \\le t_{i+1} , h_i \\le h_{i+1} , v_i \\le v_{i+1} $ \uff0c\u53ef\u4ee5\u7528 CDQ \u5206\u6cbb\u89e3\u51b3\u201c\u62e6\u622a\u6570\u6700\u5927\u201d\u95ee\u9898\uff0c\u4e14\u5b9e\u73b0\u8d77\u6765\u6ca1\u4ec0\u4e48\u56f0\u96be\u3002\n\n\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5904\u7406\u201c\u6982\u7387\u201d\u95ee\u9898\u3002\n\n\u6ce8\u610f\u5230\u6240\u8c13\u201c\u6982\u7387\u201d\u5176\u5b9e\u89e3\u91ca\u201c\u5305\u542b\u8be5\u70b9\u7684\u65b9\u6848\u6570\u201d\u4e0e\u201c\u603b\u65b9\u6848\u6570\u201d\u7684\u6bd4\u503c\u3002\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u9700\u7b97\u51fa\u201c\u5305\u542b\u8be5\u70b9\u7684\u65b9\u6848\u6570\u201d\uff0c\u6700\u540e\u4e0e\u201c\u603b\u65b9\u6848\u6570\u201d\u4e00\u9664\u5373\u53ef\u3002\n\n\u540c\u65f6\u56e0\u4e3a\u6761\u4ef6\u201c $t_i \\le t_{i+1} , h_i \\le h_{i+1} , v_i \\le v_{i+1} $ \u201d\uff0c\u5219\u6700\u7ec8\u5bfc\u5f39\u7684\u62e6\u622a\u987a\u5e8f\u662f\u4e00\u4e2a\u62d3\u6251\u5e8f\u3002\n\n\u8fd9\u5c31\u597d\u529e\uff01\u53ea\u9700\u5c06\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\u201c\u8fdb\u5165\u8be5\u70b9\u7684\u65b9\u6848\u6570\u201d\u4e0e\u201c\u79bb\u5f00\u8be5\u70b9\u7684\u65b9\u6848\u6570\u201d\u76f8\u4e58\u5c31\u662f\u201c\u5305\u542b\u8be5\u70b9\u7684\u65b9\u6848\u6570\u201d\u3002\n\n\u6b63\u53cd\u4e24\u6b21 CDQ \u5206\u6cbb\u5373\u53ef\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002\n\n## \u5b9e\u73b0\n\n\u5404\u70b9\u6574\u4f53\u4e0a\u6309\u7167\u65f6\u95f4 $t_i$ \u6392\u5e8f\uff0c\u5728\u9012\u5f52\u65f6\u5728\u6309\u7167 $h_i$ \u6392\u5e8f\uff0c\u518d\u7528 BIT \u5904\u7406 $v_i$ \u7684\u5927\u5c0f\uff0c\u5b9e\u73b0\u4e0a\u6ca1\u4ec0\u4e48\u5927\u7684\u95ee\u9898\u3002\n\n\u552f\u4e00\u6bd4\u8f83\u91cd\u8981\u7684\u7ec6\u8282\u5c31\u662f\u5173\u4e8e\u65b9\u6848\u6570\u7684\u7edf\u8ba1\uff0c long long \u4e0d\u591f\u7528\uff0c\u9700\u8981\u7528 double\n\n\u4ee3\u7801\u6709\u70b9\u5c0f\u957f\uff0c\u4f46\u5934\u5c31\u6709 30 \u884c\uff0c\u52a0\u4e0a\u5927\u90e8\u5206\u5185\u5bb9\u90fd\u662f\u76f8\u4f3c\u7684\uff0c\u6240\u4ee5\u5b9e\u9645\u6253\u8d77\u6765\u8fd8\u597d\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define db double\n#define reg register\n#define LL long long\n#define pb push_back\n#define lb lower_bound\n#define ub upper_bound\n#define ull unsigned long long\n#define rep(i,a,b) for(int i=a,i##end=b;i<=i##end;++i)\n#define drep(i,a,b) for(int i=a,i##end=b;i>=i##end;--i)\n#define erep(i,a) for(int i=head[a];i;i=e[i].nxt)\n\n\nusing namespace std;\nbool Handsome;\ninline void Mi(int &x,int y){if(x>y && (x=y));}\ninline void Mx(int &x,int y){if(x<y && (x=y));}\nconst int M=5e4+5;\nint n,c[M],ct;\nstruct node{int h,v,id;}a[M],b[M];\nstruct NODE{int mx;db val;}f1[M],f2[M],ans;\nNODE operator + (const NODE &x,const NODE &y){\n\tNODE z;\n\tif(x.mx<y.mx)z=y;\n\tif(x.mx>y.mx)z=x;\n\tif(x.mx==y.mx)z=(NODE){x.mx,x.val+y.val};\n\treturn z;\n}\nbool cmp1(node a,node b){\n\treturn a.h>b.h;\n}\nstruct BIT1{\n\tNODE t[M];\n\tvoid add(int x,NODE y){\n\t\tfor(;x;x-=x&-x)t[x]=t[x]+y;\n\t}\n\tvoid clr(int x){\n\t\tfor(;x;x-=x&-x)t[x]=(NODE){0,0};\n\t}\n\tNODE ask(int x){\n\t\tNODE res=(NODE){0,0};\n\t\tfor(;x<=ct;x+=x&-x)res=res+t[x];\n\t\treturn res;\n\t}\n}bit1;\nvoid CDQ1(int l,int r){\n\tif(l==r)return;\n\tint mid=(l+r)>>1,p=l;\n\tCDQ1(l,mid);\n\trep(i,l,r)b[i]=a[i];\n\tsort(b+l,b+mid+1,cmp1);\n\tsort(b+mid+1,b+r+1,cmp1);\n\trep(i,mid+1,r){\n\t\twhile(p<=mid && b[p].h>=b[i].h){\n\t\t\tbit1.add(b[p].v,f1[b[p].id]);\n\t\t\t++p;\n\t\t}\n\t\tNODE res=bit1.ask(b[i].v);++res.mx;\n\t\tf1[b[i].id]=f1[b[i].id]+res;\n\t}\n\twhile(l<p)bit1.clr(b[--p].v);\n\tCDQ1(mid+1,r);\n}\nbool cmp2(node a,node b){\n\treturn a.h<b.h;\n}\nstruct BIT2{\n\tNODE t[M];\n\tvoid add(int x,NODE y){\n\t\tfor(;x<=ct;x+=x&-x)t[x]=t[x]+y;\n\t}\n\tvoid clr(int x){\n\t\tfor(;x<=ct;x+=x&-x)t[x]=(NODE){0,0};\n\t}\n\tNODE ask(int x){\n\t\tNODE res=(NODE){0,0};\n\t\tfor(;x;x-=x&-x)res=res+t[x];\n\t\treturn res;\n\t}\n}bit2;\nvoid CDQ2(int l,int r){\n\tif(l==r)return;\n\tint mid=(l+r)>>1,p=mid+1;\n\tCDQ2(mid+1,r);\n\trep(i,l,r)b[i]=a[i];\n\tsort(b+l,b+mid+1,cmp2);\n\tsort(b+mid+1,b+r+1,cmp2);\n\trep(i,l,mid){\n\t\twhile(p<=r && b[p].h<=b[i].h){\n\t\t\tbit2.add(b[p].v,f2[b[p].id]);\n\t\t\t++p;\n\t\t}\n\t\tNODE res=bit2.ask(b[i].v);++res.mx;\n\t\tf2[b[i].id]=f2[b[i].id]+res;\n\t}\n\twhile(mid+1<p)bit2.clr(b[--p].v);\n\tCDQ2(l,mid);\n}\nbool Most;\nint main(){\n//\tprintf(\"%.2lfMB\\n\",(&Most-&Handsome)/1024.0/1024.0);\n\tscanf(\"%d\",&n);\n\trep(i,1,n)scanf(\"%d%d\",&a[i].h,&a[i].v),a[i].id=i;\n\trep(i,1,n)c[i]=a[i].v;\n\tsort(c+1,c+n+1);ct=unique(c+1,c+n+1)-c-1;\n\trep(i,1,n)a[i].v=lb(c+1,c+ct+1,a[i].v)-c;\n\trep(i,1,n)f1[i]=f2[i]=(NODE){1,1};\n\tCDQ1(1,n);CDQ2(1,n);\n\trep(i,1,n)ans=ans+f1[i];\n\tprintf(\"%d\\n\",ans.mx);\n\trep(i,1,n){\n\t\tif(f1[i].mx+f2[i].mx-1<ans.mx)puts(\"0\");\n\t\telse printf(\"%lf \",f1[i].val/ans.val*f2[i].val);\n\t}\n\treturn 0;\n}\n```\n\n$\\mathcal{By}\\quad\\mathcal{Most}\\ \\mathcal{Handsome}$\n\n$\\mathcal{2021.07.16}$",
        "postTime": 1626416812,
        "uid": 51733,
        "name": "Most_Handsome",
        "ccfLevel": 7,
        "title": "\u9898\u89e3P2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39"
    },
    {
        "content": "[Link](https://www.luogu.com.cn/problem/P2487)\n\n[Blog\u9605\u8bfb\u4f53\u9a8c\u66f4\u4f73](https://tony102.xyz/index.php/2021/03/23/luogu2487-sdoi2011%e6%8b%a6%e6%88%aa%e5%af%bc%e5%bc%b9/)\n\n\u8fd9\u9053\u9898\u4e0d\u8981\u53bbdarkbzoj\u4e0a\u4ea4\uff0c\u4f30\u8ba1\u662f\u5f53\u65f6\u6ca1\u52a0SPJ\u5bfc\u81f4\u4f60\u65e0\u8bba\u5982\u4f55\u90fd\u8fc7\u4e0d\u53bb\n\n\n\n### Sol\n\n\u5bfc\u5f39\u62e6\u622a\u5927\u5bb6\u90fd\u4f1a\n\n\u73b0\u5728\u5df2\u7ecf\u7ed9\u4f60\u4e86\u5bfc\u5f39\u6765\u7684\u987a\u5e8f\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u987a\u5e8f\u8bb0\u505a $t_i$\n\n\u6211\u4eec\u5148\u6765\u89e3\u51b3\u7b2c\u4e00\u95ee\uff0c\u4e5f\u5c31\u662f\u6700\u591a\u80fd\u62e6\u622a\u7684\u5bfc\u5f39\u6570\u91cf\u3002\u6211\u4eec\u8bbe $f_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6700\u540e\u4e00\u679a\u62e6\u622a\u7684\u5bfc\u5f39\u524d\u9762\u6700\u591a\u80fd\u62e6\u591a\u5c11\u679a\uff0c\u8bb0 $g_i$ \u4e3a\u8fbe\u5230 $f_i$ \u7684\u65b9\u6848\u6570\u3002\u90a3\u4e48 $O(n^2)$ \u7684\u8f6c\u79fb\u975e\u5e38\u597d\u5199\u3002\u5728 $f_i$ \u8f6c\u79fb\u7684\u65f6\u5019\u770b\u4e00\u4e0b\u7b54\u6848\u66f4\u65b0\u7684\u60c5\u51b5\uff0c\u5982\u679c $f_i$ \u4e0d\u53d8\u5c31\u4e58\u6cd5\u539f\u7406\u4e58\u4e00\u4e0b $g_i$ \uff0c \u5426\u5219\u53d8\u6210 $0$ \n\n\u6ce8\u610f\u5230 $f_i$ \u53ea\u80fd\u662f\u4ece $i$ \u7684\u5de6\u8fb9\u8f6c\u79fb\u8fc7\u6765\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u7528 cdq \u5206\u6cbb\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u73b0\u5728 $t_i$ \u5df2\u7ecf\u88ab\u786e\u5b9a\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5df2\u7ecf\u6709\u4e00\u7ef4\u88ab\u786e\u5b9a\uff0c\u628a $h_i$ \u5f53\u505a\u7b2c\u4e8c\u7ef4\uff0c\u6bcf\u6b21 cdq \u7684\u65f6\u5019\u67e5\u4e00\u67e5\u5de6\u8fb9\u7684$h$\u6bd4\u53f3\u8fb9\u7684 $h$ \u5927\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\u66f4\u52a0\u5177\u4f53\u7684\uff0c\u6211\u4eec\u628a $f_i$ \u548c $g_i$ \u63d2\u5230\u7ebf\u6bb5\u6811\u4e2d\uff0c\u5f53\u8981\u66f4\u65b0\u7b54\u6848\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4ece\u7ebf\u6bb5\u6811\u4e2d\u53d6\u51fa\u6700\u5927\u7684 $f_i$ \u548c $g_i$ \u66f4\u65b0\u5f53\u524d\u7684\u7ed3\u679c\u3002\n\n\u5c31\u8fd9\u4e48\u5199\u8fd8\u662f\u6709\u9505\uff0c\u56e0\u4e3a\u4e00\u79cd\u65b9\u6848\u7684\u65b9\u6848\u6570\u5e94\u8be5\u662f\u4ee5\u5b83\u5f00\u5934\u548c\u4ee5\u5b83\u7ed3\u5c3e\u7684\u65b9\u6848\u6570\u7684\u6210\u7ee9\u3002\u6240\u4ee5\u6211\u4eec\u628a\u4e09\u7ef4\u5168\u90e8\u9006\u8fc7\u6765\uff0c\u7136\u540e\u518d\u505a\u4e00\u904d cdq \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6b64\u5916\uff0c\u6ce8\u610f\u65b9\u6848\u6570\u76f8\u52a0\u76f8\u4e58\u4f1a\u7206`long long`\uff0c\u7528`double`\u5b58\u5c31\u53ef\u4ee5\u4e86\n\n\n\n### Code\n**[Code\u6233\u8fd9\u91cc](https://tony102.xyz/index.php/2021/03/23/luogu2487-sdoi2011%e6%8b%a6%e6%88%aa%e5%af%bc%e5%bc%b9/)**",
        "postTime": 1616505108,
        "uid": 230933,
        "name": "Tony102",
        "ccfLevel": 7,
        "title": "Luogu2487 [SDOI2011]\u62e6\u622a\u5bfc\u5f39"
    }
]