[
    {
        "content": "\u8fd9\u9898\u592a\u795e\u4e86\uff0c\u65e0\u9650$orz$\u51fa\u9898\u4eba\n\n$30$\u5206\u7684\u90e8\u5206\u5206\u5f88\u663e\u7136\u5c31\u662f\u4e00\u4e2a\u80cc\u5305\u3002\u5e76\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n\u7eaf\u968f\u673a\u7684\u6570\u636e\u5e76\u4e0d\u77e5\u9053\u600e\u4e48\u4e71\u641e\u3002\n\n\u6240\u4ee5\u6211\u76f4\u63a5\u5199\u6211\u7684\u65b9\u6cd5\u4e86\u3002\u3002\u3002\u3002\n\n\u65e2\u7136\u80cc\u5305\u505a\u4e0d\u4e86\uff0c\u53c8\u662f\u6c42\u4e00\u7c7b\u8ba1\u6570\u95ee\u9898\u7684\u7b54\u6848\uff0c\u518d\u52a0\u4e0a\u6211\u6700\u8fd1\u6b63\u597d\u518d\u505a\u751f\u6210\u51fd\u6570\u8fd9\u4e00\u5957\u7406\u8bba\u3002\u8fd9\u9053\u9898\u76ee\u5c31\u5f80\u8fd9\u65b9\u9762\u60f3\u4e86\u3002\n\n\u6211\u4eec\u5047\u8bbe\u7269\u54c1\u7684\u6570\u91cf\u6bd4\u8f83\u5c11\uff0c\u6765\u770b\u770b\u600e\u4e48\u505a\u8fd9\u9053\u9898\u76ee\u3002\u9996\u5148\u6bcf\u4e2a\u7269\u54c1\u7684\u4e2a\u6570\u53ef\u4ee5\u76f4\u63a5\u770b\u6210\u65e0\u9650\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u4f53\u79ef\u4e3a$V$\u7684\u7269\u54c1\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6784\u5efa\u751f\u6210\u51fd\u6570\u3002\n\n$$A(x)=\\sum_{i=0}^{\\infty}[i\\%V=0]x^i=\\frac{1}{1-x^V}$$\n\n\u663e\u7136\u7b54\u6848\u5c31\u662f$m$\u4e2a\u751f\u6210\u51fd\u6570\u7684\u5377\u79ef\u3002\n\n\u5982\u679c\u76f4\u63a5\u505a\u7b54\u6848\u662f$O(mn\\log n)$\uff0c\u663e\u7136\u4e0d\u662f\u6b63\u786e\u7684\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u770b\u770b\u600e\u4e48\u4f18\u5316\u3002\n\n\u751f\u6210\u51fd\u6570\u9664\u4e86\u5f62\u5f0f\u5e42\u7ea7\u6570\u7684\u5f62\u5f0f\u8fd8\u6709\u5c01\u95ed\u5f62\u5f0f\uff0c\u6211\u5728$A(x)$\u7684\u540e\u9762\u5df2\u7ecf\u5199\u51fa\u4e86\u5c01\u95ed\u5f62\u5f0f\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u628a\u5c01\u95ed\u5f62\u5f0f\u7684\u5377\u79ef\u6c42\u51fa\u6765\uff0c\u7136\u540e\u6c42\u4e2a\u9006\u8fd8\u539f\u591a\u9879\u5f0f\u5c31\u884c\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(2^m)$\uff0c\u8fd8\u662f$GG$\n\n\u6211\u4eec\u8981\u8003\u8651\u4e00\u4e2a\u65b9\u6cd5\uff0c\u80fd\u591f\u628a\u4e58\u6cd5\u5316\u7b80\u3002~~\u5f88\u81ea\u7136\u7684~~\u60f3\u5230\u540c\u65f6\u53d6\u5bf9\u6570\u4e4b\u540e\u5c31\u53d8\u6210\u4e86\u52a0\u6cd5\uff0c\u4f46\u662f\u591a\u9879\u5f0f\u6c42$\\ln$\u7684\u590d\u6742\u5ea6\u4e5f\u662f$O(n\\log n)$\u7684\uff0c\u4f46\u662f\u6211\u4eec\u7684\u591a\u9879\u5f0f\u5f88\u7279\u6b8a\uff0c\u5177\u4f53\u7684\uff0c\u6211\u4eec\u6709\n\n$$\\ln(1-x^V)=-\\sum_{i\\ge 1}\\frac{x^{Vi}}{i}$$\n\n\u63a8\u5bfc\u5982\u4e0b\uff1a\n\n$$\\begin{aligned}\\ln F(x)=G(x)\\\\\\frac{F'(x)}{F(x)}=G'(x)\\\\\\frac{-Vx^{V-1}}{1-x^V}=G'(x)\\\\-\\sum_{i\\ge 0}Vx^{V-1+Vi}=G'(x)\\\\-\\sum_{i \\ge 0}\\frac{Vx^{V+Vi}}{V+Vi}=G(x)\\\\-\\sum_{i \\ge 1}\\frac{x^{Vi}}{i}=G(x)\\end{aligned}$$\n\n\n\u4e8e\u662f\uff0c\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u5bb9\u91cf\u7684\u7269\u54c1\u4e2a\u6570\uff0c\u7136\u540e$O(m/V)$\u7ed9\u5bf9\u5e94\u7684\u4f4d\u7f6e\u52a0\u4e0a\u7cfb\u6570\uff0c\u8fd9\u6837\u603b\u7684\u590d\u6742\u5ea6\u662f$O(n\\log n)$\u7684\u3002\n\n\u505a\u5b8c\u8fd9\u4e00\u6b65\u76f8\u5f53\u4e8e\u7ed9\u6bcf\u4e2a\u5c01\u95ed\u5f62\u5f0f\u6c42$\\ln$\u4e4b\u540e\u6c42\u5b8c\u4e86\u548c\u3002\n\n\u76f4\u63a5\u591a\u9879\u5f0f$\\exp$\u518d\u591a\u9879\u5f0f\u6c42\u9006\u4e4b\u540e\u8fd8\u539f\u591a\u9879\u5f0f\uff0c\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u63d0\u4f9b\u6211\u7684\u5927\u5e38\u6570\u4ee3\u7801\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<set>\n#include<map>\n#include<vector>\n#include<queue>\nusing namespace std;\n#define ll long long\n#define RG register\n#define MAX 277777\nconst int MOD=998244353;\nconst int Phi=MOD-1;\nconst int gr=3;\ninline int read()\n{\n    RG int x=0,t=1;RG char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n    if(ch=='-')t=-1,ch=getchar();\n    while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nint fpow(int a,int b)\n{\n    int s=1;\n    while(b){if(b&1)s=1ll*s*a%MOD;a=1ll*a*a%MOD;b>>=1;}\n    return s;\n}\nint r[MAX],N,l,M;\nint Og[MAX];\nvoid NTT(int *P,int opt,int n)\n{\n    for(N=1,l=0;N<n;N<<=1)++l;\n    for(RG int i=0;i<N;++i)r[i]=(r[i>>1]>>1)|((i&1)<<(l-1));\n    for(RG int i=0;i<N;++i)if(i<r[i])swap(P[i],P[r[i]]);\n    for(RG int i=1;i<N;i<<=1)\n    {\n        RG int W=fpow(gr,Phi/(i<<1));Og[0]=1;\n        for(RG int j=1;j<i;++j)Og[j]=1ll*Og[j-1]*W%MOD;\n        for(RG int p=i<<1,j=0;j<N;j+=p)\n            for(RG int k=0;k<i;++k)\n            {\n                RG int X=P[j+k],Y=1ll*Og[k]*P[i+j+k]%MOD;\n                P[j+k]=(X+Y)%MOD;P[i+j+k]=(X+MOD-Y)%MOD;\n            }\n    }\n    if(opt==-1)\n    {\n        reverse(&P[1],&P[N]);\n        for(RG int i=0,inv=fpow(N,MOD-2);i<N;++i)P[i]=1ll*P[i]*inv%MOD;\n    }\n}\nint inv[MAX];\nvoid initinv(int N)\n{\n    inv[0]=inv[1]=1;\n    for(RG int i=2;i<N;++i)inv[i]=1ll*inv[MOD%i]*(MOD-MOD/i)%MOD;\n}\nint A[MAX],B[MAX];\nvoid Inv(int *a,int *b,int len)\n{\n    if(len==1){b[0]=fpow(a[0],MOD-2);return;}\n    Inv(a,b,len>>1);\n    for(RG int i=0;i<len;++i)A[i]=a[i],B[i]=b[i];\n    NTT(A,1,len<<1);NTT(B,1,len<<1);\n    for(RG int i=0;i<(len<<1);++i)A[i]=1ll*A[i]*B[i]%MOD*B[i]%MOD;\n    NTT(A,-1,len<<1);\n    for(RG int i=0;i<len;++i)b[i]=(b[i]+b[i])%MOD;\n    for(RG int i=0;i<len;++i)b[i]=(b[i]+MOD-A[i])%MOD;\n    for(RG int i=0;i<(len<<1);++i)A[i]=B[i]=0;\n}\nint C[MAX],D[MAX];\nvoid Dao(int *a,int *b,int len)\n{\n    for(RG int i=1;i<len;++i)b[i-1]=1ll*i*a[i]%MOD;\n    b[len]=b[len-1]=0;\n}\nvoid Jifen(int *a,int *b,int len)\n{\n    for(RG int i=1;i<len;++i)b[i]=1ll*a[i-1]*inv[i]%MOD;\n    b[0]=0;\n}\nvoid Getln(int *a,int *b,int len)\n{\n    int A[MAX],B[MAX];\n    memset(A,0,sizeof(A));memset(B,0,sizeof(B));\n    Dao(a,A,len);\n    Inv(a,B,len);\n    NTT(A,1,len<<1);NTT(B,1,len<<1);\n    for(RG int i=0;i<(len<<1);++i)A[i]=1ll*A[i]*B[i]%MOD;\n    NTT(A,-1,len<<1);\n    Jifen(A,b,len);\n    for(RG int i=0;i<(len<<1);++i)A[i]=B[i]=0;\n}\nint E[MAX];\nvoid Exp(int *a,int *b,int len)\n{\n    if(len==1){b[0]=1;return;}\n    Exp(a,b,len>>1);\n    for(RG int i=0;i<len;++i)D[i]=b[i];\n    Getln(b,E,len);\n    for(RG int i=0;i<len;++i)E[i]=(MOD-E[i]+a[i])%MOD;E[0]=(E[0]+1)%MOD;\n    NTT(E,1,len<<1);NTT(D,1,len<<1);\n    for(RG int i=0;i<(len<<1);++i)D[i]=1ll*D[i]*E[i]%MOD;\n    NTT(D,-1,len<<1);\n    for(RG int i=0;i<len;++i)b[i]=D[i];\n    for(RG int i=0;i<(len<<1);++i)D[i]=E[i]=0;\n}\nvoid FastPow(int *a,int *b,int K,int len)\n{\n    int E[MAX];memset(E,0,sizeof(E));\n    Getln(a,E,len);\n    for(RG int i=0;i<len;++i)E[i]=1ll*K*E[i]%MOD;\n    Exp(E,b,len);\n}\nint X[MAX],Y[MAX];\nint n,K,TT[MAX],m;\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;++i)TT[read()]++;\n    int N;for(N=1;N<=m;N<<=1);initinv(N);\n    for(int i=1;i<=m;++i)\n        if(TT[i])\n            for(int j=i;j<N;j+=i)\n                X[j]=(X[j]+1ll*TT[i]*(MOD-inv[j/i]))%MOD;\n    Exp(X,Y,N);memset(X,0,sizeof(X));Inv(Y,X,N);\n    for(int i=1;i<=m;++i)printf(\"%d\\n\",X[i]);\n    return 0;\n}\n\n```",
        "postTime": 1522497814,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "T25293 \u4ed8\u516c\u4e3b\u7684\u80cc\u5305"
    },
    {
        "content": "## Description\n\u6709$n(n\\le 10^5)$\u79cd\u7269\u54c1,\u7b2c$i$\u79cd\u7269\u54c1\u4f53\u79ef\u4e3a$V_i$,\u6570\u91cf\u4e3a\u65e0\u7a77\u591a.\u5bf9\u4e8e$1\\le v\\le m(m\\le 10^5)$\u6c42\u51fa\u4ece\u8fd9\u4e9b\u7269\u54c1\u79cd\u9009\u51fa\u4e00\u4e9b\u7269\u54c1\u4f53\u79ef\u548c\u4e3a$v$\u7684\u65b9\u6848\u6570.\n## Idea\n\u9996\u5148\u4e00\u4e2a\u5927\u5c0f\u4e3a$v$\u7684\u7269\u54c1\u7684\u9009\u53d6\u65b9\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a$f(x)=\\sum_{i\\ge 0}[i\\equiv 0\\pmod v]x^i=\\sum_{i\\ge 0}x^{vi}=\\frac{1}{1-x^v}$,\u7136\u800c\u66b4\u529b\u5c06\u6bcf\u4e00\u4e2a\u591a\u9879\u5f0f\u4e58\u8d77\u6765\u590d\u6742\u5ea6\u662f$O(NMlogM)$,\u65e0\u6cd5\u627f\u53d7.  \n\u8003\u8651\u901a\u8fc7\u5c06\u8fd9\u4e9b\u591a\u9879\u5f0f\u53d6\u5bf9\u6570\u540e\u5168\u90e8\u52a0\u8d77\u6765,\u6700\u540e\u591a\u9879\u5f0fexp\u56de\u53bb.  \n$ln(f(x))=g(x)$  \n$g'(x)=\\frac{f'(x)}{f(x)}=(1-x^v)\\sum_{i\\ge 1}vi\\cdot x^{vi-1} =\\sum_{i\\ge 1}v\\cdot x^{vi-1}$  \n$g(x)=\\sum_{i\\ge 1}\\frac{v}{v\\cdot i}\\cdot x^{v\\cdot i}$.  \n\u8fd9\u6837\u4f53\u79ef\u4e3a$v$\u7684\u7269\u54c1\u7684\u51fd\u6570\u4e2d\u6709$n\\over v$\u9879,\u52a0\u6cd5\u4e0a\u7684\u590d\u6742\u5ea6\u662f$O(NlogN)$,exp\u7684\u590d\u6742\u5ea6\u662f$O(NlogN)$.\u5982\u679c\u7528\u5206\u6cbb\u6c42exp,\u5219\u590d\u6742\u5ea6$O(Nlog^2N)$.\n## [Code](https://github.com/TheUnbeatable/Packup_Logdown/blob/master/Codes/LuoguP4389.cpp)",
        "postTime": 1524395311,
        "uid": 20952,
        "name": "Simphoni",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4389 \u3010\u4ed8\u516c\u4e3b\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "\u5728\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73\uff1a[https://www.cnblogs.com/PinkRabbit/p/10423084.html](https://www.cnblogs.com/PinkRabbit/p/10423084.html)\u3002\r\n\r\n### \u9898\u610f\u7b80\u8ff0\uff1a\r\n\r\n\u6709 $n$ \u4e2a\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\u90fd\u6709\u65e0\u9650\u591a\uff0c\u7b2c $i$ \u4e2a\u7269\u54c1\u7684\u4f53\u79ef\u4e3a $v_i$\uff08$v_i\\le m$\uff09\u3002\r\n\r\n\u95ee\u7528\u8fd9\u4e9b\u7269\u54c1\u6070\u597d\u88c5\u6ee1\u5bb9\u91cf\u4e3a $i$ \u7684\u80cc\u5305\u7684\u65b9\u6848\u6570\uff0c\u4e24\u4e2a\u65b9\u6848\u4e0d\u540c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u67d0\u4e00\u4e2a\u7269\u54c1\u7684\u9009\u53d6\u6570\u91cf\u4e0d\u540c\u3002\r\n\r\n\u4f60\u9700\u8981\u5bf9 $i\\in [1,m]$ \u56de\u7b54\uff0c\u7b54\u6848\u5bf9 $998,244,353$ \u53d6\u6a21\u3002\r\n\r\n### \u9898\u89e3\uff1a\r\n\r\n\u5bf9\u4e8e\u4e00\u4e2a\u4f53\u79ef\u4e3a $v$ \u7684\u7269\u54c1\uff0c\u5b83\u88c5\u6ee1\u5bb9\u91cf\u4e3a $x$ \u7684\u80cc\u5305\u7684\u65b9\u6848\u6570\u5e8f\u5217\u4e3a $a_x=[v|x]$\u3002\r\n\r\n\u4f8b\u5982 $v=3$ \u65f6\u6709\u5e8f\u5217\uff08\u4ece $0$ \u5f00\u59cb\uff09\uff1a$\\{1,0,0,1,0,0,1,0,0,1,0,\\cdots\\}$\u3002\r\n\r\n\u5b83\u7684\u666e\u901a\u751f\u6210\u51fd\u6570\u4e3a $\\frac{1}{1-x^v}$\u3002\r\n\r\n\u8bb0\u7b54\u6848\u7684\u666e\u901a\u751f\u6210\u51fd\u6570\u4e3a $F$\uff0c\u5219\u6709 $F=\\prod_{i=1}^{n}\\frac{1}{1-x^{v_i}}$\u3002\r\n\r\n\u4e24\u8fb9\u53d6\u5bf9\u6570\uff1a$\\ln F=\\sum_{i=1}^{n}\\ln\\frac{1}{1-x^{v_i}}$\u3002\r\n\r\n\u6709\u4e00\u4e2a\u5f0f\u5b50\uff1a$\\ln\\frac{1}{1-x^k}=\\sum_{i=1}^{\\infty}\\frac{1}{i}x^{ik}$\u3002\r\n\r\n\u8fd9\u4e2a\u5f0f\u5b50\u7684\u8bc1\u660e\uff1a\r\n\r\n\u8bb0 $f(x)=\\frac{1}{1-x^k}$\uff0c\u8bbe $g(x)=\\ln f$\u3002\r\n\r\n$$\\begin{aligned}g(x)&=\\ln f(x)\\\\&=\\int(\\frac{\\mathrm{d}}{\\mathrm{d}x}\\ln f)(x)\\mathrm{d}x\\\\&=\\int(\\frac{f'(x)}{f(x)})\\mathrm{d}x\\\\&=\\int((1-x^k)f'(x))\\mathrm{d}x\\\\&=\\int((1-x^k)\\sum_{i=1}^{\\infty}k\\cdot i\\cdot x^{ki-1})\\mathrm{d}x\\\\&=\\int(\\sum_{i=1}^{\\infty}k\\cdot i\\cdot x^{ki-1}-\\sum_{i=1}^{\\infty}k\\cdot i\\cdot x^{ki-1}\\cdot x^k)\\mathrm{d}x\\\\&=\\int(\\sum_{i=1}^{\\infty}k\\cdot i\\cdot x^{ki-1}-\\sum_{i=1}^{\\infty}k\\cdot (i-1)\\cdot x^{ki-1})\\mathrm{d}x\\\\&=\\int(\\sum_{i=1}^{\\infty}k\\cdot x^{ki-1})\\mathrm{d}x\\\\&=\\sum_{i=1}^{\\infty}\\frac{1}{i}x^{ki}\\end{aligned}$$\r\n\r\n\u5efa\u8bae\u80cc\u4e00\u4e9b\u5e38\u7528\u5f0f\u5b50\u3002\r\n\r\n\u90a3\u4e48\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff1a\r\n\r\n$$\\begin{aligned}\\ln F&=\\sum_{i=1}^{n}\\sum_{j=1}^{\\infty}\\frac{1}{j}x^{v_{i}j}\\\\&=\\sum_{k=1}^{m}\\sum_{j=1}^{\\infty}\\frac{\\sum_{i=1}^{n}[v_i=k]}{i}x^{kj}\\end{aligned}$$\r\n\r\n\u8bb0 $b_k$ \u4e3a\u4f53\u79ef\u4e3a $k$ \u7684\u7269\u54c1\u6570\u91cf\uff0c\u5e76\u4e14\u6211\u4eec\u53ea\u9700\u8981\u6b21\u6570\u5c0f\u4e8e\u7b49\u4e8e $m$ \u7684\u9879\uff0c\u6709 $\\ln F\\equiv \\sum_{k=1}^{m}\\sum_{j=1}^{\\lfloor\\frac{m}{k}\\rfloor}\\frac{b_k}{i}x^{kj}\\pmod{x^{m+1}}$\u3002\r\n\r\n\u53f3\u8fb9\u53ef\u4ee5\u5728 $\\sum_{i=1}^{m}\\frac{m}{i}=O(m\\ln m)$ \u7684\u65f6\u95f4\u5185\u5f97\u5230\uff0c\u5de6\u8fb9\u4f7f\u7528\u591a\u9879\u5f0f $\\mathrm{Exp}$ \u5728 $O(m\\log m)$ \u7684\u65f6\u95f4\u5185\u5f97\u5230\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log m)$\u3002\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n\r\ntypedef long long LL;\r\nconst int Mod = 998244353;\r\nconst int G = 3, iG = 332748118;\r\nconst int MS = 1 << 19 | 7;\r\n\r\ninline LL qPow(LL b, int e) {\r\n\tLL a = 1;\r\n\tfor (; e; e >>= 1, b = b * b % Mod)\r\n\t\tif (e & 1) a = a * b % Mod;\r\n\treturn a;\r\n}\r\n\r\nLL Inv[MS];\r\n\r\ninline void Init(int N) {\r\n\tInv[1] = 1;\r\n\tfor (int i = 2; i < N; ++i) Inv[i] = -(Mod / i) * Inv[Mod % i] % Mod;\r\n}\r\n\r\nint Sz, R[MS]; LL InvSz;\r\n\r\ninline void InitFNTT(int N) {\r\n\tint Bt = 0;\r\n\tfor (; 1 << Bt < N; ++Bt) ;\r\n\tif (Sz == (1 << Bt)) return ;\r\n\tSz = 1 << Bt; InvSz = -(Mod - 1) / Sz;\r\n\tfor (int i = 1; i < Sz; ++i) R[i] = R[i >> 1] >> 1 | (i & 1) << (Bt - 1);\r\n}\r\n\r\ninline void FNTT(LL *A, int Ty) {\r\n\tfor (int i = 0; i < Sz; ++i) if (R[i] < i) std::swap(A[R[i]], A[i]);\r\n\tfor (int j = 1, j2 = 2; j < Sz; j <<= 1, j2 <<= 1) {\r\n\t\tLL gn = qPow(~Ty ? G : iG, (Mod - 1) / j2), g, X, Y;\r\n\t\tfor (int i = 0, k; i < Sz; i += j2) {\r\n\t\t\tfor (k = 0, g = 1; k < j; ++k, g = g * gn % Mod) {\r\n\t\t\t\tX = A[i + k], Y = g * A[i + j + k] % Mod;\r\n\t\t\t\tA[i + k] = (X + Y) % Mod, A[i + j + k] = (X - Y) % Mod;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (!~Ty) for (int i = 0; i < Sz; ++i) A[i] = A[i] * InvSz % Mod;\r\n}\r\n\r\ninline void PolyInv(LL *A, int N, LL *B) {\r\n\tstatic LL tA[MS], tB[MS];\r\n\tB[0] = qPow(A[0], Mod - 2);\r\n\tfor (int L = 1; L < N; L <<= 1) {\r\n\t\tint L2 = L << 1, L4 = L << 2;\r\n\t\tInitFNTT(L4);\r\n\t\tmemcpy(tA, A, 8 * L2);\r\n\t\tmemset(tA + L2, 0, 8 * (Sz - L2));\r\n\t\tmemcpy(tB, B, 8 * L);\r\n\t\tmemset(tB + L, 0, 8 * (Sz - L));\r\n\t\tFNTT(tA, 1), FNTT(tB, 1);\r\n\t\tfor (int i = 0; i < Sz; ++i) tB[i] = (2 - tB[i] * tA[i]) % Mod * tB[i] % Mod;\r\n\t\tFNTT(tB, -1);\r\n\t\tfor (int i = 0; i < L2; ++i) B[i] = tB[i];\r\n\t}\r\n}\r\n\r\ninline void PolyLn(LL *A, int N, LL *B) {\r\n\tstatic LL tA[MS], tB[MS];\r\n\tPolyInv(A, N - 1, tB);\r\n\tInitFNTT(N * 2 - 3);\r\n\tfor (int i = 1; i < N; ++i) tA[i - 1] = i * A[i] % Mod;\r\n\tmemset(tA + N - 1, 0, 8 * (Sz - N + 1));\r\n\tmemset(tB + N - 1, 0, 8 * (Sz - N + 1));\r\n\tFNTT(tA, 1), FNTT(tB, 1);\r\n\tfor (int i = 0; i < Sz; ++i) tA[i] = tA[i] * tB[i] % Mod;\r\n\tFNTT(tA, -1);\r\n\tB[0] = 0;\r\n\tfor (int i = 1; i < N; ++i) B[i] = tA[i - 1] * Inv[i] % Mod;\r\n}\r\n\r\ninline void PolyExp(LL *A, int N, LL *B) {\r\n\tstatic LL tA[MS], tB[MS];\r\n\tB[0] = 1;\r\n\tfor (int L = 1; L < N; L <<= 1) {\r\n\t\tint L2 = L << 1, L4 = L << 2;\r\n\t\tmemset(B + L, 0, 8 * (L2 - L));\r\n\t\tPolyLn(B, L2, tB);\r\n\t\tInitFNTT(L4);\r\n\t\tmemcpy(tA, B, 8 * L);\r\n\t\tmemset(tA + L, 0, 8 * (Sz - L));\r\n\t\tfor (int i = 0; i < L2; ++i) tB[i] = ((!i) - tB[i] + A[i]) % Mod;\r\n\t\tmemset(tB + L2, 0, 8 * (Sz - L2));\r\n\t\tFNTT(tA, 1), FNTT(tB, 1);\r\n\t\tfor (int i = 0; i < Sz; ++i) tA[i] = tA[i] * tB[i] % Mod;\r\n\t\tFNTT(tA, -1);\r\n\t\tfor (int i = 0; i < L2; ++i) B[i] = tA[i];\r\n\t}\r\n}\r\n\r\nint N, M;\r\nint buk[MS];\r\nLL A[MS], B[MS];\r\n\r\nint main() {\r\n\tscanf(\"%d%d\", &N, &M);\r\n\tInit(MS);\r\n\tfor (int i = 1, v; i <= N; ++i) scanf(\"%d\", &v), ++buk[v];\r\n\tfor (int i = 1; i <= M; ++i) if (buk[i]) {\r\n\t\tfor (int j = 1; j <= M / i; ++j) {\r\n\t\t\tA[i * j] = (A[i * j] + buk[i] * Inv[j]) % Mod;\r\n\t\t}\r\n\t}\r\n\tPolyExp(A, M + 1, B);\r\n\tfor (int i = 1; i <= M; ++i) printf(\"%lld\\n\", (B[i] + Mod) % Mod);\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1550910073,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4389 \u3010\u4ed8\u516c\u4e3b\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "\u524d\u7f6e\u829d\u58eb\uff1a[NTT\u4e0e\u591a\u9879\u5f0f\u5168\u5bb6\u6876](https://www.luogu.org/blog/command-block/ntt-yu-duo-xiang-shi-quan-jia-tong)+\u751f\u6210\u51fd\u6570OGF+(\u65e0\u6807\u53f7\u8ba1\u6570)\n\n\u8fd9\u9053\u9898\u597d\u50cf\u662fWC2019\u8bb2\u4e49\u4e0a\u7684\u7ecf\u5178\u4f8b\u9898?\n\n\u5927\u5bb6\u90fd\u76f4\u63a5`OGF`\u7136\u540e\u4e22\u5f0f\u5b50,\u6211\u89c9\u5f97\u4e0d\u592a\u53cb\u597d,\u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u9053Euler\u65e0\u6807\u53f7\u8ba1\u6570\u7684**\u6a21\u677f**\u9898\u3002\n\n\u5148\u8bb2\u4e00\u8bb2\u8fd9\u9898\u4e3a\u5565\u662f\u65e0\u6807\u53f7\u8ba1\u6570\u3002\n\n\u8bbe$C[i]$\u4e3a\u5927\u5c0f\u4e3a$i$\u7684\u7269\u54c1\u4e2a\u6570,\u76f8\u5f53\u4e8e\u6211\u4eec\u6709$C[i]$\u79cd\u65b9\u6848\u5f97\u5230\u4e00\u4e2a\u5927\u5c0f\u4e3a$i$\u7684\u5143\u7d20\u3002\n\n\u968f\u540e,\u6211\u4eec\u8981\u9009\u53d6\u82e5\u5e72\u4e2a\u5143\u7d20\u4f7f\u5f97\u4ed6\u4eec\u7684\u5927\u5c0f\u548c\u4e3a$m$,\u5143\u7d20\u4e4b\u95f4\u65e0\u987a\u5e8f\u4e4b\u5206\u3002\n\n\u8fd9\u4e0d\u5c31\u662f\u80cc\u5305\u95ee\u9898\u5417?\u6240\u4ee5\u80cc\u5305\u95ee\u9898\u662f\u6700\u7ecf\u5178\u7684\u65e0\u6807\u53f7\u8ba1\u6570\u3002\n\n------------\n\n- `EGF`\u7684 $\\exp$\n\n\u5927\u5bb6\u90fd\u77e5\u9053,\u5982\u679c\u662f\u6709\u6807\u53f7\u8ba1\u6570,\u9009\u7528`EGF`\u7684\u8bdd:\n \n\u6211\u4eec\u5f97\u5230\u4e86\u5355\u4e2a\u5143\u7d20\u7684`EGF`,\u53ea\u8981`EXP`\u4e00\u4e0b\u5c31\u80fd\u5f97\u5230\u8fd9\u4e9b\u5143\u7d20\u751f\u6210\u7684\u96c6\u5408\u7684`EGF`,\u8fd9\u4e2a\u53ef\u4ee5\u6cf0\u52d2\u5c55\u5f00\u7136\u540e\u89c2\u5bdf\u5f0f\u5b50\u3002\n\n\u6709$\\exp(F(x))=\\sum\\limits_{i=0}\\dfrac{F(x)^i}{i!}$\n\n\u6ce8\u610f$\\dfrac{F(x)^i}{i!}$\u7684\u610f\u4e49 : \u9009\u62e9$i$\u4e2a\u5143\u7d20\u6620\u5c04\u5230\u6807\u53f7\u4e0a,\u4f46\u4ed6\u4eec\u4e4b\u95f4\u6ca1\u6709\u5173\u8054,\u987a\u5e8f\u4e0d\u7528\u8003\u8651\u3002\n\n\u73b0\u5728\u662f\u65e0\u6807\u53f7\u8ba1\u6570,\u6211\u4eec\u81ea\u7136\u4e5f\u60f3\u8981\u4f18\u7f8e\u7684\u53d8\u6362\u5566\u3002\n\n\u65e0\u6807\u53f7\u8ba1\u6570\u4e2d,\u5982\u679c\u4e24\u4e2a\u5143\u7d20\u5927\u5c0f\u76f8\u540c\u4e14\u5185\u90e8\u76f8\u540c,\u5219\u65e0\u6cd5\u533a\u5206\u3002\n\n\u4e5f\u5c31\u662f\u8bf4,\u6211\u4eec\u8003\u8651\u5355\u72ec\u7684$F[i]$,\u5176\u8d21\u732e\u4e3a : $(1+x^i+x^{2i}+...)^{F[i]}$\n\n\u610f\u601d\u5c31\u662f\u5bf9\u5927\u5c0f\u4e3a$i$\u7684\u6bcf\u79cd\u65b9\u6848\u5206\u522b\u5efa\u7acb`OGF`\u7136\u540e\u4e58\u8d77\u6765\u3002\n\n\u6211\u4eec\u5c31\u5f97\u5230\u4e86Euler\u53d8\u6362:\n\n$$Euler(F(x))=\\prod\\limits_{i=0}\\Big(\\dfrac{1}{1-x^i}\\Big)^{F[i]}$$\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86,\u600e\u4e48\u8ba1\u7b97\u8fd9\u4e2a\u4e1c\u897f?\n\n\u5bb9\u6613\u60f3\u5230 $\\ln$ \u4e4b\u540e\u53d8\u4e3a\u52a0\u6cd5,\u518d $\\exp$ ,\u5219\u6709:\n\n$$\\exp\\sum\\limits_{i=0}\\ln\\Big(\\dfrac{1}{1-x^i}\\Big)^{F[i]}$$\n\n- $\\ln\\Big(\\dfrac{1}{1-x^p}\\Big)^{c}$\n\n  \u8003\u8651$\\ln(x^c)=c\u00b7\\ln x$,\u6b21\u6570$c$\u6211\u4eec\u5c31\u6682\u4e14\u6309\u4e0b\u4e0d\u8868\u3002\n  \n  \u5148\u6765\u641e$\\frac{1}{1-x}$,\u8fd9\u4e1c\u897f\u7684\u5c55\u5f00\u662f$\\{1,1,1,1,1...\\}$\n  \n  \u4f17\u6240\u5468\u77e5 $\\ln A(x)=\u222b(\\frac{A'(x)}{A(x)})$\n  \n  \u5148\u5bf9\u8fd9\u4e1c\u897f\u6c42\u5bfc,\u5f97\u5230$\\{1,2,3,4,5...\\}=\\dfrac{1}{(1-x)^2}$\n  \n  \u7136\u540e\u6c42\u9006,\u662f$1-x$,\u4e58\u5728\u4e00\u8d77\u53c8\u56de\u5230\u4e86$\\frac{1}{1-x}$\n  \n  \u7136\u540e\u662f\u79ef\u5206,\u5f97\u5230$\\{0,1,\\frac{1}{2},\\frac{1}{3},\\frac{1}{4},...\\}$\n  \n  \u4e5f\u5c31\u662f$\\ln \\frac{1}{1-x}=\\sum\\limits_{i=1}\\dfrac{x}{i}$\n  \n  \u73b0\u5728\u7528$x^p$\u66ff\u6362$x$\u5f97\u5230$\\ln \\frac{1}{1-x^p}=\\sum\\limits_{i=1}\\dfrac{x^{ip}}{i}$\n  \n  \u5728$\\!\\pmod{x^n}$\u4e0b\u4e5f\u5c31$n/p$\u4e2a\u6709\u6548\u9879\u3002\n  \n\u7ed9\u51fa\u4e00\u4e2a\u6bd4\u8f83\u65b9\u4fbf\u5316\u7b80\u7684\u4e2d\u95f4\u7ed3\u679c : $Euler(F(x))=\\exp\\sum\\limits_{i=0}-F[i]*\\ln(1-x^i)$\n  \n\u5bf9\u4e8e\u6bcf\u4e2a$p$\u66b4\u529b\u6c42\u548c\u590d\u6742\u5ea6\u662f$O(\\sum_{i=1}^n\\frac{n}{i})=O(nlogn)$\u7684,\u968f\u540e`EXP`\u5373\u53ef\u3002\n\n\u8fd9\u9898\u5c31\u662f\u76f4\u63a5\u8ba1\u7b97$Euler(C(x))$,\u975e\u5e38\u7684\u6a21\u677f\u554a\u3002\n\n**Code:**\n\n```cpp\n// luogu-judger-enable-o2\n#include<algorithm>\n#include<cstdio>\n#define mod 998244353\n#define G 3\n#define Maxn 100500\nusing namespace std;\ninline int read()\n{\n  register int X=0;\n  register char ch=0;\n  while(ch<48||ch>57)ch=getchar();\n  while(ch>=48&&ch<=57)X=X*10+(ch^48),ch=getchar();\n  return X;\n}\nint n,m,r[Maxn<<2],invn,invG;\nlong long powM(long long a,long long t=mod-2)\n{\n  long long ans=1,buf=a;\n  while(t){\n  \tif(t&1)ans=(ans*buf)%mod;\n  \tbuf=(buf*buf)%mod;\n  \tt>>=1;\n  }return ans;\n}\nvoid NTT(long long *f,int n,short op)\n{\n  for (int i=0;i<n;i++)\n   if (r[i]<i)swap(f[r[i]],f[i]);\n  for (int p=2;p<=n;p<<=1){\n  \tint len=p>>1,\n  \t    w=powM(op==1 ?G:invG,(mod-1)/p);\n  \tfor (int k=0;k<n;k+=p){\n  \t  long long buf=1;\n  \t  for (int i=k;i<k+len;i++){\n  \t  \tint sav=f[len+i]*buf%mod;\n  \t  \tf[len+i]=(f[i]-sav+mod)%mod;\n  \t  \tf[i]=(f[i]+sav)%mod;\n  \t  \tbuf=buf*w%mod;\n  \t  }\n    }\n  }\n}\nlong long _g[Maxn<<2];\nvoid times(long long *f,long long *gg,int len1,int len2,int limit)\n{\n  int n=1;\n  for(;n<len1+len2;n<<=1);\n  long long *g=_g;\n  for (int i=0;i<len2;i++)g[i]=gg[i];\n  for (int i=len2;i<n;i++)g[i]=0;\n  invn=powM(n);\n  for(int i=0;i<n;i++)\n   r[i]=(r[i>>1]>>1)|((i&1)?n>>1:0);\n  NTT(f,n,1);NTT(g,n,1);\n  for(int i=0;i<n;++i)f[i]=(f[i]*g[i])%mod;\n  NTT(f,n,-1);\n  for(int i=0;i<limit;++i)f[i]=f[i]*invn%mod;\n  for(int i=limit;i<n;++i)f[i]=0;\n}\nlong long _r[Maxn<<2],_rr[Maxn<<2];\nvoid invp(long long *f,int plen)\n{\n  long long *r=_r,*rr=_rr;\n  int n=1;for(;n<plen;n<<=1);\n  rr[0]=powM(f[0]);\n  for (int len=2;len<=n;len<<=1){\n  \tfor (int i=0;i<len;i++)\n  \t  r[i]=rr[i]*2%mod;\n  \ttimes(rr,rr,len/2,len/2,len);\n  \ttimes(rr,f,len,len,len);\n  \tfor (int i=0;i<len;i++)\n  \t  rr[i]=(r[i]-rr[i]+mod)%mod;\n  }for (int i=0;i<plen;i++)\n    f[i]=rr[i];\n  for (int i=0;i<n;i++)rr[i]=r[i]=0;\n}\nvoid dao(long long *f,int m)\n{\n  for (int i=1;i<m;i++)\n   f[i-1]=f[i]*i%mod;\n  f[m-1]=0;\n}\nvoid jifen(long long *f,int m)\n{\n  for (int i=m;i;i--)\n   f[i]=f[i-1]*powM(i)%mod;\n  f[0]=0;\n}\nlong long _lns[Maxn<<2];\nvoid lnp(long long *f,int m)\n{\n  long long *sav=_lns;\n  for (int i=0;i<m;i++)sav[i]=f[i];\n  invp(sav,m);dao(f,m);\n  times(f,sav,m-1,m,m);\n  jifen(f,m-1);\n  for (int i=0;i<m;i++)sav[i]=0;\n}\nlong long _xp[Maxn<<2],_xp2[Maxn<<2];\nvoid exp(long long *f,int m)\n{\n  long long *s=_xp,*ss=_xp2;\n  int n=1;for(;n<m;n<<=1);\n  ss[0]=1;\n  for (int len=2;len<=n;len<<=1){\n  \tfor (int i=0;i<len/2;i++)s[i]=ss[i];\n  \tfor (int i=len/2;i<len;i++)s[i]=0;\n  \tlnp(s,len);\n  \tfor (int i=0;i<len;i++)\n  \t s[i]=(f[i]-s[i]+mod)%mod;\n  \ts[0]=(s[0]+1)%mod;\n  \ttimes(ss,s,len/2,len,len);\n  }for (int i=0;i<m;i++)f[i]=ss[i];\n  for (int i=0;i<n;i++)s[i]=ss[i]=0;\n}\nlong long f[Maxn<<2],inv[Maxn];\nint c[Maxn];\nint main()\n{\n  invG=powM(G);\n  scanf(\"%d%d\",&n,&m);m++;\n  for (int i=0;i<n;i++)c[read()]++;\n  inv[0]=inv[1]=1;\n  for (int i=2;i<m;i++)\n\tinv[i]=(mod-mod/i)*inv[mod%i]%mod;\n  for (int i=0;i<m;i++)\n   if (c[i])\n\tfor (int j=i;j<m;j+=i)\n\t f[j]=(f[j]+inv[j/i]*c[i])%mod;\n  exp(f,m);\n  for (int i=1;i<m;i++)\n    printf(\"%lld\\n\",f[i]);\n  return 0;\n}\n```\n\n- **\u9644** : $Eular(F(x))=\\exp\\bigg(\\sum\\limits_{i=1}\\dfrac{F(x^i)}{i}\\bigg)$\n\n\u5176\u5b9e\u5c31\u662f\u8fd9\u9053\u9898\u7684\u6b63\u89e3\u4eba\u8bdd\u6362\u6210\u4e86\u516c\u5f0f\u3002\n\n$$Eular(F(x))=\\exp\\sum\\limits_{i=0}\\ln\\Big(\\dfrac{1}{1-x^i}\\Big)^{F[i]}$$\n\n$$=\\exp\\sum\\limits_{i=0}F[i]\\sum\\limits_{j=1}\\dfrac{x^{ij}}{j}$$\n\n$$=\\exp\\sum\\limits_{j=1}\\frac{1}{j}\\sum\\limits_{i=0}F[i]x^{ij}$$\n\n$$=\\exp\\bigg(\\sum\\limits_{i=1}\\frac{F(x^i)}{i}\\bigg)$$\n\n\u66f4\u591a\u6280\u5de7\u8bf7\u89c1[Link](https://www.luogu.com.cn/blog/command-block/post-shuo-xue-ji-lu-p5900-wu-biao-hao-wu-gen-shu-ji-shuo)",
        "postTime": 1558624744,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4389 \u3010\u4ed8\u516c\u4e3b\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "## \u89e3\u6cd5\n\n\u7b54\u6848\u663e\u7136\u662f$n$\u4e2a\u5f62\u5982$\\sum_{i \\geq 1} x^{vi}$\u7684\u591a\u9879\u5f0f\u7684\u5377\u79ef\n\n\u7136\u800c\u76f4\u63a5NTT\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(nm\\log n)$\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u591a\u9879\u5f0f$k$\u6c42$\\ln$\u7136\u540e\u76f8\u52a0\uff0c \u5728$\\exp$\u56de\u53bb\n\n\u6211\u4eec\u8bbe$f(x) = \\sum_{i \\geq 1} x^{vi}$\uff0c $g(x) = \\ln(f(x))$\n\n\u6211\u4eec\u77e5\u9053$f(x) = \\frac{1}{1-x^v}$\n\n\u4e8e\u662f\n$$g'(x) = \\frac{f'(x)}{f(x)} = \\frac{f'(x))}{\\frac{1}{1-x^v}} = (1-x^v)f'(x) = (1-x^v)\\sum_{i \\geq 1} v\\times i\\times x^{vi-1} = \\sum_{i \\geq 1} v\\times [i - (i-1)]\\times x^{vi-1} = \\sum_{i \\geq 1} v\\times x^{vi-1}$$\n\n$$g(x) = \\sum_{i \\geq 1} \\frac{1}{i}x^{vi}$$\n\n\u518d\u8dd1\u591a\u9879\u5f0f$\\exp$\u5c31\u884c\u4e86\n\n## \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 400010;\n\nconst LL mod = 998244353LL;\n\ninline LL power(LL a, LL n, LL mod)\n{\tLL Ans = 1;\n\twhile (n)\n\t{\tif (n & 1) Ans = (Ans * a) % mod;\n\t\ta = (a * a) % mod;\n\t\tn >>= 1;\n\t}\n\treturn Ans;\n}\n\ninline LL Plus(LL a, LL b) { return a + b > mod ? a + b - mod : a + b; }\n\ninline LL Minus(LL a, LL b) { return a - b < 0 ? a - b + mod : a - b; }\n\nstruct Mul\n{\tint Len;\n\n\tint rev[N];\n\n\tLL wn[N];\n\n\tvoid getReverse()\n\t{\tfor (int i = 0; i < Len; i++)\n\t\t\trev[i] = (rev[i>>1] >> 1) | ((i&1) * (Len >> 1));\n\t}\n\n\tvoid NTT(LL * a, int opt)\n\t{\tgetReverse();\n\t\tfor (int i = 0; i < Len; i++)\n\t\t\tif (i < rev[i]) swap(a[i], a[rev[i]]);\n\t\tint cnt = 0;\n\t\tfor (int i = 2; i <= Len; i <<= 1)\n\t\t{\tcnt++;\n\t\t\tfor (int j = 0; j < Len; j += i)\n\t\t\t{\tLL w = 1;\n\t\t\t\tfor (int k = 0; k < (i>>1); k++)\n\t\t\t\t{\tLL x = a[j + k];\n\t\t\t\t\tLL y = (w * a[j + k + (i>>1)]) % mod;\n\t\t\t\t\ta[j + k] = Plus(x, y);\n\t\t\t\t\ta[j + k + (i>>1)] = Minus(x, y);\n\t\t\t\t\tw = (w * wn[cnt]) % mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (opt == -1)\n\t\t{\treverse(a + 1, a + Len);\n\t\t\tLL num = power(Len, mod-2, mod);\n\t\t\tfor (int i = 0; i < Len; i++)\n\t\t\t\ta[i] = (a[i] * num) % mod;\n\t\t}\n\t}\n\n\tvoid init()\n\t{\tfor (int i = 0; i < 23; i++)\n\t\t\twn[i] = power(3LL, (mod-1) / (1 << i), mod);\n\t}\n\n\tvoid getLen(int l)\n\t{\tLen = 1;\n\t\tfor (; Len <= l; Len <<= 1);\n\t}\n} Calc;\n\nvoid cpy(LL * A, LL * B, int len1, int len2)\n{\tfor (int i = 0; i < len1; i++) A[i] = B[i];\n\tfor (int i = len1; i < len2; i++) A[i] = 0;\n}\n\nvoid getInv(LL * A, LL * B, int len)\n{\tstatic LL tmp1[N], tmp2[N];\n\tB[0] = power(A[0], mod-2, mod);\n\tfor (register int i = 2; i <= len; i <<= 1)\n\t{\tCalc.Len = i << 1;\n\t\tcpy(tmp1, A, i, Calc.Len);\n\t\tcpy(tmp2, B, i >> 1, Calc.Len);\n\t\tCalc.NTT(tmp1, 1);\n\t\tCalc.NTT(tmp2, 1);\n\t\tfor (register int j = 0; j < Calc.Len; j++)\n\t\t\ttmp1[j] = Minus(Plus(tmp2[j], tmp2[j]), tmp2[j] * tmp2[j] % mod * tmp1[j] % mod);\n\t\tCalc.NTT(tmp1, -1);\n\t\tfor (register int j = 0; j < i; j++)\n\t\t\tB[j] = tmp1[j];\n\t}\n}\n\nvoid getDeri(LL * a, int len)\n{\tfor (int i = 0; i < len; i++)\n\t\ta[i] = a[i+1] * (LL) (i+1) % mod;\n}\n\nvoid getInte(LL * a, int len)\n{\tfor (int i = len-1; i >= 1; i--)\n\t\ta[i] = a[i-1] * power(i, mod-2, mod) % mod;\n\ta[0] = 0;\n}\n\nvoid getLn(LL * A, int len)\n{\tstatic LL tmp1[N], tmp2[N], tmp3[N];\n\tCalc.Len = len << 1;\n\tcpy(tmp1, A, len, Calc.Len);\n\tcpy(tmp2, A, len, Calc.Len);\n\tgetDeri(tmp1, len);\n\tgetInv(tmp2, tmp3, len);\n\tCalc.Len = len << 1;\n\tCalc.NTT(tmp1, 1);\n\tCalc.NTT(tmp3, 1);\n\tfor (int i = 0; i < Calc.Len; i++)\n\t\ttmp1[i] = tmp1[i] * tmp3[i] % mod;\n\tCalc.NTT(tmp1, -1);\n\tfor (int i = len; i < Calc.Len; i++)\n\t\ttmp1[i] = 0;\n\tgetInte(tmp1, len);\n\tfor (int i = 0; i < len; i++)\n\t\tA[i] = tmp1[i];\n}\n\nvoid getExp(LL * A, LL * B, int len)\n{\tstatic LL tmp1[N], tmp2[N];\n\tB[0] = 1;\n\tfor (int i = 2; i <= len; i <<= 1)\n\t{\tCalc.Len = i << 1;\n\t\tcpy(tmp1, B, Calc.Len, Calc.Len);\n\t\tcpy(tmp2, B, Calc.Len, Calc.Len);\n\t\tgetLn(tmp1, i);\n\t\tCalc.Len = i << 1;\n\t\tfor (int j = 0; j < i; j++)\n\t\t\ttmp1[j] = Minus(A[j], tmp1[j]);\n\t\ttmp1[0]++;\n\t\tCalc.NTT(tmp1, 1);\n\t\tCalc.NTT(tmp2, 1);\n\t\tfor (int j = 0; j < Calc.Len; j++)\n\t\t\ttmp1[j] = (tmp1[j] * tmp2[j]) % mod;\n\t\tCalc.NTT(tmp1, -1);\n\t\tfor (int j = 0; j < Calc.Len; j++)\n\t\t\tB[j] = tmp1[j];\n\t}\n}\n\nLL A[N], B[N], Ans[N];\n\nint cnt[N];\n\nint v[N];\n\nint main()\n{\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tCalc.init();\n\tfor (int i = 1; i <= n; i++)\n\t{\tscanf(\"%d\", &v[i]);\n\t\tcnt[v[i]]++;\n\t}\n\tCalc.init();\n\tCalc.getLen(m);\n\tint len = Calc.Len;\n\tfor (int i = 1; i <= m; i++)\n\t{\tif (!cnt[i]) continue;\n\t\tfor (int j = i; j <= m; j += i)\n\t\t\tA[j] = Plus(A[j], (LL) cnt[i] * i % mod * power(j, mod-2, mod) % mod);\n\t}\n\tgetExp(A, Ans, len);\n\tfor (int i = 1; i <= m; i++)\n\t\tprintf(\"%lld\\n\", Ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1534215527,
        "uid": 21126,
        "name": "wangyuchen",
        "ccfLevel": 0,
        "title": "\u4ed8\u516c\u4e3b\u7684\u80cc\u5305"
    },
    {
        "content": "UPD\uff1a\u4fee\u4e86\u9505\u6389\u7684\u56fe\n\n>   Github \u535a\u5ba2\u539f\u6587\u94fe\u63a5 [[Link\u2197]](https://longlongzhu123.github.io/sol-luogu-P4389/)\n\n\u751f\u6210\u51fd\u6570\u7ecf\u5178\u5165\u95e8\u9898\uff01\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n1.  $\\displaystyle \\sum _ {i = 0} ^ {\\infty} x ^ i = \\dfrac {1} {1 - x}$ [[Link\u2197]](https://longlongzhu123.github.io/math-notes/#note-3)\n\n## \u5f53 n = 2 \u65f6\u2026\u2026\n\n\u8bbe $A[i]$ \u8868\u793a\u4ec5\u7528\u7b2c\u4e00\u79cd\u7269\u54c1\u88c5\u6ee1 $i$ \u4f53\u79ef\u7684\u65b9\u6848\u6570\uff0c\u663e\u7136 $A[i] = [v _ 1 \\bmod i = 0]$\u3002\n\n\u8bbe $B[i]$ \u8868\u793a\u4ec5\u7528\u7b2c\u4e8c\u79cd\u7269\u54c1\u88c5\u6ee1 $i$ \u4f53\u79ef\u7684\u65b9\u6848\u6570\uff0c\u663e\u7136 $B[i] = [v _ 2 \\bmod i = 0]$\u3002\n\n\u76f4\u63a5\u4e0a DP\u3002\u8bbe $C[i]$ \u4e3a\u7ed3\u679c\uff0c\u5373\u4efb\u610f\u4f7f\u7528\u7b2c\u4e00\u79cd\u6216\u7b2c\u4e8c\u79cd\u7269\u54c1\uff0c\u88c5\u6ee1 $i$ \u4f53\u79ef\u7684\u65b9\u6848\u6570\u3002DP \u65b9\u7a0b\u4e3a\uff1a\n\n$$C[i] = \\displaystyle \\sum _ {j + k = i} A[j] B[k] (i \\le m)$$\n\n\u6734\u7d20\u7b97\u6cd5\u9700\u8981 $O(m ^ 2)$ \u7684\u65f6\u95f4\u3002\u4e0d\u8fc7\u76f8\u4fe1\u6765\u8fd9\u91cc\u7684\u8bfb\u8005\u5f88\u8f7b\u677e\u80fd\u770b\u51fa\u6765\uff1a\u8fd9\u662f\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\u3002\n\n## \u751f\u6210\u51fd\u6570\n\n\u8bbe $F(x) = 1 + x ^ {v _ 1} + x ^ {2 v _ 1} + \\cdots$\uff0c\u5373 $\\displaystyle \\sum _ {i = 0} ^ {\\infty} x ^ {i v _ 1}$\u3002\n\n\u8bbe $G(x) = 1 + x ^ {v _ 2} + x ^ {2 v _ 2} + \\cdots$\uff0c\u5373 $\\displaystyle \\sum _ {i = 0} ^ {\\infty} x ^ {i v _ 2}$\u3002\n\n\u8fd9\u662f\u628a\u4e0a\u9762\u7684\u5377\u79ef\u5199\u6210\u591a\u9879\u5f0f\u5f62\u5f0f\u4e4b\u540e\u7684\u7ed3\u679c\u3002\n\n\u7528 FFT \u5c06\u4e24\u4e2a\u591a\u9879\u5f0f\u76f8\u4e58\uff0c\u65b0\u591a\u9879\u5f0f\u7684\u7cfb\u6570\u521a\u597d\u5c31\u662f DP \u7684\u7b54\u6848\u3002\u8fd9\u76f8\u5f53\u4e8e\u5b8c\u6210\u4e86\u4e00\u6b21\u5377\u79ef\u3002\n\n\u5f53\u7136\uff0c\u522b\u770b\u5f0f\u5b50\u7684\u9879\u6570\u662f $\\infty$\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u7528\u5230\u524d $m$ \u9879\uff08\u628a $m$ \u4e4b\u540e\u7684\u9879\u780d\u6389\u5373\u53ef\uff09\u3002\n\n\u8fd9\u4e00\u6b65\u6211\u4eec\u7528 FFT \u4f18\u5316\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684 DP \u65b9\u7a0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m \\log m)$\u3002\n\n## \u5f53 n \u66f4\u5927\u65f6\u2026\u2026\n\n\u4e0a\u9762\u7684\u65b9\u6cd5\u8fd8\u884c\u5f97\u901a\u5417\uff1f\n\n\u5206\u522b\u7ed9 $n$ \u4e2a\u7269\u54c1\u9020\u4e00\u6761\u591a\u9879\u5f0f\uff08$F(x), G(x), \\dots$\uff09\uff0c\u957f\u5ea6\u90fd\u8981\u662f $m$\u3002\u8017\u65f6 $O(nm)$\n\n\u9010\u4e00\u76f8\u4e58\uff0c\u6bcf\u6b21\u8017\u65f6 $O(m \\log m)$\uff0c\u603b\u5171 $n$ \u6b21\u4e58\u6cd5\u3002\u603b\u65f6\u95f4 $O(nm \\log m)$\u3002\n\n\u522b\u5fd8\u4e86 $n, m \\le 10 ^ 5$\u2026\u2026\u62ff\u4e2a 30pts \u8fd8\u662f\u53ef\u4ee5\u7684\uff08\u72d7\u5934\uff09\uff0c\u603b\u6bd4\u76f4\u63a5 DP $O(nm ^ 2)$ \u5f3a\uff08\n\n```\nfor i = 1 to n:\n    for j = 0 to m, j += v[i]:\n        f[i][j] += 1\nans = Poly()\nfor i = 1 to n:\n    ans = ans * f[i] // O(m log m)\nprint(ans, i = 1 to m)\n```\n\n## \u5e72\u561b\u8981\u76f8\u4e58\uff1f\n\n\u5168\u90e8\u53d6 $\\ln$\uff0c**\u52a0\u8d77\u6765**\uff0c\u518d $\\exp$ \u56de\u53bb\u3002\u53ea\u7528\u4e24\u6b21 FFT\u3002\u4e0d\u7528\u4e00\u6761\u4e00\u6761\u76f8\u4e58\u4e86\u3002\n\n\u74f6\u9888\u4ecd\u5728\u9020\u5f0f\u5b50\u7684 $O(nm)$ \u4e0a\uff0c\u540c\u65f6\u76f8\u52a0\u8d77\u6765\u4e5f\u8981 $O(nm)$ \u65f6\u95f4\n\n## \u5229\u7528\u51fd\u6570\u7684\u6027\u8d28\n\n\u8bbe\u7b2c $i$ \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u662f $v$\uff0c\u4ee4\u5176\u751f\u6210\u51fd\u6570\u4e3a $F(x)$\u3002\n\n\u5219 $F(x) = 1 + x ^ {v} + x ^ {2v} + x ^ {3v} + \\cdots$\n\n\u4e0d\u7528\u7ba1 $x$ \u7684\u53d6\u503c\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u5173\u6ce8\u7cfb\u6570\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u5730\u4ee4 $|x| < 1$\u3002\n\n$$\\begin {aligned}    F(x) & = 1 + x ^ {v} + x ^ {2v} + x ^ {3v} + \\cdots \\\\         & = 1 + (x ^ v) + (x ^ v) ^ 2 + (x ^ v) ^ 3 + \\cdots \\\\         & = \\dfrac {1} {1 - x ^ v}\\end {aligned}$$\n\n\u751f\u6210\u51fd\u6570\u7684\u53d6\u503c\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u5b83\u7684\u6838\u5fc3\u5728\u4e8e\u7cfb\u6570\u7684\u53d8\u6362\u3002\n\n## \u6211\u4eec\u8981\u5e72\u4ec0\u4e48\uff1f\n\n\u5bf9\u8fd9 $n$ \u4e2a $\\dfrac {1} {1 - x ^ v}$ \u53d6\u4e00\u904d $\\ln$\uff0c\u52a0\u8d77\u6765\uff0c$\\exp$\u3002\n\n## \u6c42\u8fd9\u4e2a\u5206\u5f0f\u7684 Ln\n\n$$\\begin {aligned}    \\ln \\dfrac {1} {1 - x ^ v} & = \\ln 1 - \\ln (1 - x ^ v) \\\\                               & = 0 - \\ln (1 - x ^ v)\\end {aligned}$$\n\n\u8bf6\u7b49\u7b49\u2026\u2026$\\ln (1 - x ^ v)$ \u600e\u4e48\u7b97\u5462\uff1f\n\n## \u5927\u80c6\u731c\u60f3\uff0c~~\u4e0d\u7528\u6c42\u8bc1~~\n\n\u522b\u5fd8\u4e86\u6211\u4eec\u662f OIer\uff0c\u53ef\u4ee5\u501f\u52a9\u7a0b\u5e8f\u6765\u627e\u627e\u89c4\u5f8b\u554a\u3002\n\n\u62f7\u4e2a $\\ln$ \u677f\u5b50\u6765\u73a9\u73a9\n\n```cpp\nint main() {\n  cin >> n >> v;\n  a[0] = 1; a[v] = -1; // \u8868\u793a\u51fd\u6570\uff1aF(x) = 1 - x ^ v\n  lim = 1;\n  while (lim < n) lim <<= 1;\n  Log(a, lim);\n  for (int i = 0; i < lim; ++i)\n    cout << a[i] << ' ';\n  cout << endl;\n  return 0;\n}\n```\n\n\u8bd5\u8bd5\u8fd0\u884c\u7ed3\u679c\uff1f\n\n![](https://i.loli.net/2020/03/29/GrCmbvS2cfjQZlN.png)\n\n\u9996\u5148\u627e\u5230\u4e00\u4e2a\u89c4\u5f8b\uff1a\u6570\u5b57\u53ea\u5728 $v, 2v, 3v, \\cdots$ \u8fd9\u4e9b\u4f4d\u7f6e\u51fa\u73b0\u3002\n\n\u5bf9\u6570\u5b57\u654f\u611f\u70b9\u5427\u3002\u5f88\u660e\u663e\uff0c\u7b2c $v$ \u4f4d\u4e0a\u7684\u6570\u5b57 $998244352 \\equiv -1 \\pmod {998244353}$\u3002\n\n\u90a3\u7b2c $2v$ \u4f4d\u4e0a\u7684 $499122176$ \u662f\u4ec0\u4e48\u5462\uff1f\u6ce8\u610f\u5230\u8fd9\u4e2a\u6570\u5b57\u5dee\u4e0d\u591a\u662f $998244353$ \u7684\u4e00\u534a\u3002\n\n![](https://i.loli.net/2020/03/30/5swyjbhGAlBeEZJ.png)\n\n\u6240\u4ee5 $499122176 \\equiv -\\dfrac {1} {2}$\n\n![](https://i.loli.net/2020/03/30/4WarUEQVKjsz98Y.png)\n\n\u6240\u4ee5\u7b2c $3v$ \u4f4d\u4e0a\u7684 $665492635 \\equiv -\\dfrac {1} {3}$\n\n\u53ef\u4ee5\u7ee7\u7eed\u9a8c\u8bc1\u7b2c $4v$ \u4f4d\u4e0a\u7684 $249561088 \\equiv -\\dfrac {1} {4}$\u3002\n\n\u5927\u80c6\u731c\u60f3\uff1a$\\ln (1 - x ^ v) = \\displaystyle \\sum _ {i = 1} ^ {\\infty} - \\dfrac {1} {i} x ^ {iv} = - \\displaystyle \\sum _ {i = 1} ^ {\\infty} \\dfrac {1} {i} x ^ {iv}$\n\n## \u4e25\u8c28\u8bc1\u660e\n\n\u8bbe $G(x) = \\ln F(x) = \\ln (1 - x ^ v)$\n\n\u53d6\u5bfc\u6570\uff0c$G'(x) = \\dfrac {F'(x)} {F(x)} = \\dfrac {(1 - x ^ v)'} {1 - x ^ v} = \\dfrac {- v x ^ {v - 1}} {1 - x ^ v} = - v x ^ {v - 1} \\dfrac {1} {1 - x ^ v}$\n\n\u6ce8\u610f\u5230 $\\dfrac {1} {1 - x ^ v} = \\displaystyle \\sum _ {i = 0} ^ {\\infty} x ^ {iv}$\u3002\n\n$$\\begin {aligned}    G'(x) &= - v x ^ {v - 1} \\displaystyle \\sum _ {i = 0} ^ {\\infty} x ^ {iv} \\\\          &= \\displaystyle \\sum _ {i = 0} ^ {\\infty} - v x ^ {iv + v - 1} \\\\          &= \\displaystyle \\sum _ {i = 0} ^ {\\infty} - v x ^ {(i + 1)v - 1} \\\\          &= \\displaystyle \\sum _ {i = 1} ^ {\\infty} - v x ^ {iv - 1} \\\\\\end {aligned}$$\n\n\u6c42\u5bfc\u3002$\\displaystyle \\int ax ^ k = \\dfrac {1} {k + 1} a x ^ {k + 1}$ [[Link\u2197]](https://longlongzhu123.github.io/math-notes/#note-2)\u3002\u56e0\u4e3a $G_0 = 0$\uff0c\u6240\u4ee5 $C = 0$\u3002\n\n$$\\begin {aligned}    \\int G'(x) &= \\int \\displaystyle \\sum _ {i = 1} ^ {\\infty} - v x ^ {iv - 1} \\\\               &= \\displaystyle \\sum _ {i = 1} ^ {\\infty} \\int - v x ^ {iv - 1} \\\\               &= \\displaystyle \\sum _ {i = 1} ^ {\\infty} - \\dfrac {1} {iv} v x ^ {iv} \\\\               &= \\displaystyle \\sum _ {i = 1} ^ {\\infty} - \\dfrac {1} {i} x ^ {iv} \\\\               &= - \\displaystyle \\sum _ {i = 1} ^ {\\infty} \\dfrac {1} {i} x ^ {iv}\\end {aligned}$$\n\n\u8bc1\u6bd5\u3002\n\n## \u6c42 Ln \u5b8c\u6210\n\n\u7ed3\u8bba\uff1a$\\ln \\dfrac {1} {1 - x ^ v} = \\ln 1 - \\ln (1 - x ^ v) = 0 - \\left ( -\\displaystyle \\sum _ {i = 1} ^ {\\infty} \\dfrac {1} {i} x ^ {iv} \\right ) = \\displaystyle \\sum _ {i = 1} ^ {\\infty} \\dfrac {1} {i} x ^ {iv}$\n\n\u5f53\u7136\u4e0a\u9650 $\\infty$ \u4e5f\u662f\u53d6\u5230 $m$ \u5c31\u53ef\u4ee5\u4e86\u3002\u7a0b\u5e8f\u4e0a\uff0c\u5c06\u6240\u6709 `a[k * v[i]]`\uff08$k \\cdot v[i] \\le m$\uff09\u7684\u5730\u65b9\u52a0\u4e0a $\\dfrac {1} {k}$\u3002\n\n\u4e0b\u4e00\u6b65\u8981\u628a\u5b83\u4eec\u5168\u90e8\u52a0\u8d77\u6765\u3002\n\n\u597d\u50cf\u53c8\u9047\u5230\u4e86\u4e2a\u95ee\u9898\u3002\u521d\u59cb\u5316\u4e00\u6761\u591a\u9879\u5f0f\u7684\u65f6\u95f4\u4e3a $O(\\dfrac {m} {v})$\uff0c\u6700\u591a\u4e3a $O(m)$\u3002\u800c\u6211\u4eec\u6709 $n$ \u6761\u5f0f\u5b50\u8981\u5904\u7406\u2026\u2026\n\n\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u6240\u6709 $v$ \u76f8\u540c\u7684\u591a\u9879\u5f0f\u4e00\u8d77\u5904\u7406\u3002\u5373 $\\displaystyle \\sum _ {i = 1} ^ {m} \\dfrac {1} {i} x ^ {iv}$ \u4e58\u4e0a $\\mathrm {cnt} [v]$ \u500d\u3002\n\n\u603b\u65f6\u95f4\u662f\u8c03\u548c\u7ea7\u6570\u7ea7\u522b\u7684\uff0c\u590d\u6742\u5ea6\u4e3a $O(m \\log m)$\u3002\u52a0\u4e0a Exp \u7684 $O(m \\log m)$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(m \\log m)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int kMaxN = 100000 * 8 + 10; // \u5f00\u8db3\u7a7a\u95f4\uff01\nconst int kMod = 998244353;\nconst int kPri = 3;\nconst int kPriInv = 332748118;\ninline LL Read() {\n  int get = getchar();\n  LL res = 0;\n  while (!isdigit(get)) get = getchar();\n  while (isdigit(get)) {\n    res = res * 10 + get - '0';\n    get = getchar();\n  }\n  return res;\n}\ninline LL Fpow(LL x, LL k) {\n  LL ans = 1;\n  for (; k; k >>= 1) {\n    if (k & 1) ans = ans * x % kMod;\n    x = x * x % kMod;\n  }\n  return ans;\n}\ninline LL Fadd(LL x, LL y) {\n  return (x += y) >= kMod ? x - kMod : x;\n}\ninline LL Fdec(LL x, LL y) {\n  return (x -= y) < 0 ? x + kMod : x;\n}\ninline void RaderSort(LL* a, int n) {\n  int j = 0;\n  for (int i = 0; i < n; ++i) {\n    if (i < j) swap(a[i], a[j]);\n    for (int l = (n >> 1); (j ^= l) < l; l >>= 1)\n      continue;\n  }\n}\ninline void Ntt(LL* a, int n, bool opt) {\n  RaderSort(a, n);\n  LL pri = opt ? kPri : kPriInv;\n  for (int len = 2; len <= n; len <<= 1) {\n    LL unit = Fpow(pri, (kMod - 1) / len);\n    for (int i = 0; i < n; i += len) {\n      LL w = 1;\n      int mid = i + (len >> 1);\n      for (int j = 0; j < (len >> 1); ++j) {\n        LL tmp = w * a[mid + j] % kMod;\n        a[mid + j] = Fdec(a[i + j], tmp);\n        a[i + j] = Fadd(a[i + j], tmp);\n        w = w * unit % kMod;\n      }\n    }\n  }\n  if (!opt) {\n    LL inv = Fpow(n, kMod - 2);\n    for (int i = 0; i < n; ++i)\n      a[i] = a[i] * inv % kMod;\n  }\n}\nLL inv_t[kMaxN];\ninline void InvIter(LL* a, LL* b, int n) {\n  int lim = (n << 1);\n  fill(inv_t, inv_t + lim, 0);\n  copy(a, a + n, inv_t);\n  Ntt(inv_t, lim, true);\n  Ntt(b, lim, true);\n  for (int i = 0; i < lim; ++i)\n    b[i] = Fdec(2, inv_t[i] * b[i] % kMod) * b[i] % kMod;\n  Ntt(b, lim, false);\n  fill(b + n, b + lim, 0);\n}\ninline void Inv(LL* a, LL* b, int n) {\n  fill(b, b + n, 0);\n  b[0] = Fpow(a[0], kMod - 2);\n  for (int len = 2; len <= n; len <<= 1)\n    InvIter(a, b, len);\n}\ninline void Deri(LL* a, int n) {\n  for (int i = 0; i < n - 1; ++i)\n    a[i] = (i + 1) * a[i + 1] % kMod;\n  a[n - 1] = 0;\n}\ninline void Inte(LL* a, int n) {\n  for (int i = n - 2; i >= 0; --i)\n    a[i + 1] = a[i] * Fpow(i + 1, kMod - 2) % kMod;\n  a[0] = 0;\n}\nLL log_t[kMaxN];\ninline void Log(LL* a, int n) {\n  int lim = (n << 1);\n  fill(log_t, log_t + lim, 0);\n  Inv(a, log_t, n);\n  Deri(a, lim);\n  fill(a + n, a + lim, 0);\n  Ntt(a, lim, true);\n  Ntt(log_t, lim, true);\n  for (int i = 0; i < lim; ++i)\n    a[i] = a[i] * log_t[i] % kMod;\n  Ntt(a, lim, false);\n  Inte(a, n);\n  fill(a + n, a + lim, 0);\n}\nLL exp_t[kMaxN], exp_a[kMaxN]; // \u603b\u8981\u8bb0\u5f97\u6e05\u7a7a\u4e34\u65f6\u6570\u7ec4\uff01\ninline void ExpIter(LL* a, LL* b, int n) {\n  int lim = (n << 1);\n  fill(exp_t, exp_t + lim, 0);\n  copy(b, b + n, exp_t);\n  Log(exp_t, n);\n  for (int i = 0; i < n; ++i)\n    exp_t[i] = Fdec(a[i], exp_t[i]);\n  Ntt(b, lim, true);\n  Ntt(exp_t, lim, true);\n  for (int i = 0; i < lim; ++i)\n    b[i] = b[i] * (exp_t[i] + 1) % kMod;\n  Ntt(b, lim, false);\n}\ninline void Exp(LL* a, LL* b, int n) {\n  fill(b, b + n, 0); // \u603b\u8981\u8bb0\u5f97\u6e05\u7a7a\u8f93\u51fa\u6570\u7ec4\uff01\n  b[0] = 1;  // a[0] = 0, b[0] = e ^ a[0] = e ^ 0 = 1.\n  for (int len = 2; len <= n; len <<= 1)\n    ExpIter(a, b, len);\n}\n// n\uff1a\u5546\u54c1\u6570\n// m\uff1a\u8f93\u51fa\u7684\u6570\u91cf\nint n, m, lim;\nLL v[kMaxN];\nLL cnt[kMaxN];\nLL a[kMaxN], b[kMaxN];\nint main() {\n  n = Read(), m = Read();\n  // \u6ce8\u610f\uff1a\u8f93\u51fa\u65f6\u8981\u7528 [1, m]\uff01\n  for (int i = 0; i < n; ++i) {\n    v[i] = Read();\n    ++cnt[v[i]];\n  }\n  // O(mlogm)\n  for (int i = 1; i <= m; ++i) {\n    if (cnt[i]) {\n      int cur = 0;\n      for (int j = i; j <= m; j += i) {\n        ++cur;\n        a[j] = (a[j] + Fpow(cur, kMod - 2) * cnt[i] % kMod) % kMod;\n      }\n    }\n  }\n  lim = 1;\n  while (lim < m + 10) lim <<= 1;\n  Exp(a, b, lim);\n  for (int i = 1; i <= m; ++i)\n    printf(\"%lld\\n\", b[i]);\n  return 0;\n}\n```\n",
        "postTime": 1585537103,
        "uid": 57525,
        "name": "longlongzhu123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4389 \u3010\u4ed8\u516c\u4e3b\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "~~\u8c8c\u4f3c\u524d\u5e74\u521d\u4e2d\u6559\u7ec3\u628a\u8fd9\u9898\u4e22\u5230\u57fa\u7840\u80cc\u5305\u7ec3\u4e60\u9898\u5f53\u4f5c\u4e1a\u6765\u7740~~\n\n\u9996\u5148\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7269\u54c1\u5199\u51fa\u4ed6\u7684\u751f\u6210\u51fd\u6570$S(x)$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4f53\u79ef\u4e3a$V_i$\u7684\u7269\u54c1\uff0c\u6211\u4eec\u6709$S(x) = \\sum_{j\\%V_i=0}x^j$\n\n$$S(x)=\\sum_{j=0}^{\\infty}x^{V_i\\times j}, x^{V_i}\\times S(x)=\\sum_{j=1}^{\\infty}x^{V_i\\times j}$$\n\n$S(x)-x^{V_i}\\times S(x)=x^0=1$\uff0c\u6240\u4ee5\u6211\u4eec\u6709\uff1a$S(x)=\\dfrac{1}{1-x^{V_i}}$\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5feb\u4e50\u7684\u628a\u6240\u6709\u751f\u6210\u51fd\u6570\u6c42\u9006\u4e4b\u540e\u5377\u5728\u4e00\u8d77\uff0c\u590d\u6742\u5ea6\u4e3a$O(NMlogN)$\n\n\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff1a$e^{ln(S(x))}=S(x)$\uff0c\u8fd9\u4e2a\u770b\u8d77\u6765\u5f88\u65e0\u804a\u7684\u67ff\u5b50\u786e\u5b9e\u89e3\u9898\u7684\u5173\u952e\uff0c\u56e0\u4e3a\u4ed6\u628a\u4e58\u53f7\u53d8\u6210\u4e86\u52a0\u53f7\uff0c\u591a\u9879\u5f0f\u52a0\u6cd5\u6211\u4eec\u6709\u5f88\u4f18\u79c0\u7684$O(N)$\u590d\u6742\u5ea6\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u5f88\u597d\u8fdb\u4e00\u6b65\u4f18\u5316\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5427\u6240\u6709\u751f\u6210\u51fd\u6570\u53d6$ln$\uff0c\u7136\u540e\u5168\u90e8\u52a0\u8d77\u6765\uff0c$exp$\u56de\u53bb\u5373\u53ef\u3002\n\n\u73b0\u5728\u6765\u8003\u8651\u600e\u4e48\u6c42$ln(\\dfrac{1}{1-x^{V_i}})$\u3002\u6839\u636e\u4e00\u822c\u5957\u8def\uff0c\u6211\u4eec\u5148\u6c42\u5bfc\uff1a\n\n\u4ee4$G(x)=ln(\\dfrac{1}{1-x^{V_i}})$\uff0c\u5219$G'(x)=ln'(\\dfrac{1}{1-x^{V_i}})$\n\n\u6839\u636e\u5bf9\u6570\u51fd\u6570\u7684\u6027\u8d28\uff0c\u6211\u4eec\u6709$ln(x^c)=c\\times  ln(x)$\uff0c\u5e26\u5165\u5f97\uff1a$G'(x)=-ln'(1-x^{V_i})=(\\dfrac{V_i\\times x^{V_i-1}}{1-x^{V_i}})=S(x)\\times V_i\\times x^{V_i-1}=V_i\\times \\sum_{j=0}^{\\infty}x^{V_i\\times j+V_i-1}$\n\n\u518d\u6765\u628a\u8fd9\u4e2a\u67ff\u5b50\u79ef\u5206\u56de\u53bb\uff0c\u6211\u4eec\u6709\uff1a$G(x)=\\int G'(x)=V_i\\times \\sum_{j=0}^{\\infty}\\dfrac{x^{V_i\\times j+V_i}}{V_i\\times j+V_i}=\\sum_{j=0}^{\\infty}\\dfrac{x^{V_i\\times j+V_i}}{j+1}=\\sum_{j=1}^{\\infty}\\dfrac{x^{V_i\\times j}}{j}$\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u7684\u4efb\u52a1\u53d8\u6210\u4e86\uff0c\u6c42\u51fa\u6240\u6709$\\sum_{j=1}^{\\infty}\\dfrac{x^{V_i\\times j}}{j}$\u7684\u548c\uff0c\u518d\u8fdb\u884c$exp$\n\n\u6c42\u548c\u7528\u8c03\u548c\u7ea7\u6570\u53ef\u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6$\\rm O(NlogN)$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f$\\rm O(NlogN)$\n### $\\rm Code:$\n```cpp\n/* This code is written by Nemlit */\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\n#define rep(i, a, b) for(re int i = (a); i <= (b); ++ i)\n#define mod 998244353\nil int read() {\n    re int x = 0, f = 1; re char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n    return x * f;\n}\nil int Mul(int a, int b) { return 1ll * a * b % mod; }\nil int Inc(int a, int b) { return (a += b) >= mod ? a - mod : a; }\nil int Dec(int a, int b) { return (a -= b) < 0 ? a + mod : a; }\nil int qpow(int a, int b) { int r = 1; while(b) { if(b & 1) r = Mul(r, a); a = Mul(a, a), b >>= 1; } return r; }\n#define maxn 800005\nint n, m, a[maxn], r[maxn], h[maxn], f[maxn], g[maxn], p[maxn], w[maxn], lim, l, invG, G, cnt[maxn], pax, inv[maxn];\nil void NTT(int *a, int opt, int lim) {\n\trep(i, 0, lim - 1) if(i > r[i]) swap(a[i], a[r[i]]);\n\tw[0] = 1;\n\tfor(re int mid = 1; mid < lim; mid <<= 1) {\n\t\tint base = qpow(opt == 1 ? G : invG, (mod - 1) / (mid << 1));\n\t\trep(j, 1, mid - 1) w[j] = Mul(w[j - 1], base);\n\t\tfor(re int j = 0; j < lim; j += mid << 1) {\n\t\t\trep(k, 0, mid - 1) {\n\t\t\t\tint x = a[j + k], y = Mul(w[k], a[j + k + mid]);\n\t\t\t\ta[j + k] = Inc(x, y), a[j + k + mid] = Dec(x, y);\n\t\t\t}\n\t\t}\n\t}\n\tif(opt == -1) rep(i, 0, lim - 1) a[i] = Mul(a[i], inv[lim]);\n}\nil void Inv(int *a, int *b, int n) {\n\trep(i, 0, n * 4) b[i] = h[i] = 0;\n\tb[0] = qpow(a[0], mod - 2);\n\tint k = 1, lim = 2, l = 1;\n\twhile(k <= n) {\n\t\tk <<= 1, lim <<= 1, ++ l;\n\t\trep(i, 0, k - 1) h[i] = a[i];\n\t\trep(i, 0, lim - 1) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (l - 1));\n\t\tNTT(h, 1, lim), NTT(b, 1, lim);\n\t\trep(i, 0, lim - 1) b[i] = Dec(Mul(2, b[i]), Mul(Mul(b[i], b[i]), h[i]));\n\t\tNTT(b, -1, lim);\n\t\trep(i, k, lim) b[i] = 0;\n\t}\n}\nil void ln(int *a, int *b, int n) {\n\trep(i, 0, n * 2) b[i] = f[i] = 0;\n\trep(i, 1, n - 1) b[i - 1] = Mul(a[i], i);\n\tInv(a, f, n);\n\tint lim = 1, l = 0;\n\twhile(lim <= n * 2) lim <<= 1, ++ l;\n\trep(i, 0, lim - 1) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (l - 1));\n\tNTT(f, 1, lim), NTT(b, 1, lim);\n\trep(i, 0, lim - 1) f[i] = Mul(b[i], f[i]);\n\tNTT(f, -1, lim), b[0] = 0;\n\trep(i, 0, n - 2) b[i + 1] = Mul(f[i], inv[i + 1]);\n\trep(i, n, lim - 1) b[i] = 0;\n}\nil void Exp(int *a, int *b, int n) {\n\trep(i, 0, n * 4) b[i] = g[i] = p[i] = 0;\n\tint k = 1, lim = 2, l = 1;\n\tb[0] = 1;\n\twhile(k <= n) {\n\t\tk <<= 1, lim <<= 1, ++ l;\n\t\tln(b, g, k);\n\t\trep(i, 0, k - 1) g[i] = Dec(a[i], g[i]);\n\t\tg[0] = Inc(g[0], 1);\n\t\trep(i, 0, lim - 1) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (l - 1));\n\t\tNTT(b, 1, lim), NTT(g, 1, lim);\n\t\trep(i, 0, lim - 1) b[i] = Mul(b[i], g[i]);\n\t\tNTT(b, -1, lim);\n\t\trep(i, k, lim - 1) b[i] = 0;\n\t}\n}\nsigned main() {\n\tn = read(), m = read(), G = 3, invG = qpow(G, mod - 2), inv[1] = 1;\n\trep(i, 2, 800000) inv[i] = Mul(inv[mod % i], (mod - mod / i));\n\trep(i, 0, n - 1) pax = read(), ++ cnt[pax];\n\trep(i, 1, m) {\n\t\tif(!cnt[i]) continue;\n\t\tfor(re int j = i; j <= m; j += i) a[j] = Inc(a[j], Mul(cnt[i], inv[j / i]));\n\t}\n\tExp(a, p, m);\n\trep(i, 1, m) printf(\"%d\\n\", p[i]);\n\treturn 0;\n}\n```",
        "postTime": 1583223235,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4389 \u3010\u4ed8\u516c\u4e3b\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "\u65e0\u6807\u53f7 $\\text{Multiset}$ \u6784\u9020\u677f\u5b50\u9898\u3002\u770b\u5230\u9898\u89e3\u91cc\u6ca1\u4e00\u4e2a\u7528\u6cf0\u52d2\u5c55\u5f00\u505a\u7684\uff0c\u5c31\u81ea\u5df1\u5199\u4e86\u4e00\u7bc7\u9898\u89e3\u3002\r\n\r\n\u8bbe\u7b2c $i$ \u4e2a\u7269\u54c1\u7684\u7ec4\u5408\u7c7b\u4e3a $\\mathcal{A}_i$\u3002\u672c\u9898\u7b54\u6848\u6ee1\u8db3**\u7ec4\u5408\u79ef**\u5b9a\u4e49\uff0c\u56e0\u6b64\u4f7f\u7528\u65e0\u6807\u53f7\u8ba1\u6570\uff0c\u751f\u6210\u51fd\u6570\u4e3a OGF\u3002\r\n\r\n\u663e\u7136\u7b2c $i$ \u4e2a\u7269\u54c1\u7684 OGF $A_i(x)=1+x^{v_i}+x^{2v_i}+\\cdots=(x^{v_i})^0+(x^{v_i})^1+(x^{v_i})^2+\\cdots=\\dfrac{1}{1-x^{v_i}}$\u3002\r\n\r\n\u90a3\u4e48\u672c\u9898\u7b54\u6848\u7684 OGF \u5c31\u662f\uff1a\r\n\r\n$$F(x)=\\prod_{i=1}^nA_i(x)=\\prod_{i=1}^n\\dfrac{1}{1-x^{v_i}}$$\r\n\r\n\u8fd9\u73a9\u610f\u600e\u4e48\u5316\u7b80\uff1f\u6211\u4eec\u8003\u8651\u5148 $\\ln$\uff0c\u628a\u4e58\u6cd5\u5316\u6210\u52a0\u6cd5\uff0c\u518d $\\exp$ \u56de\u53bb\uff1a\r\n\r\n$$\r\n\\begin{aligned}\r\nF(x)&=\\prod_{i=1}^n\\dfrac{1}{1-x^{v_i}}\\\\\r\n&=\\exp\\ln\\prod_{i=1}^n\\dfrac{1}{1-x^{v_i}}\\\\\r\n&=\\exp\\sum_{i=1}^n\\ln\\dfrac{1}{1-x^{v_i}}\\\\\r\n\\end{aligned}\r\n$$\r\n\r\n$f(x)=\\ln\\dfrac{1}{1-x}$ \u53ef\u4ee5\u76f4\u63a5\u5728\u96f6\u70b9\u5904\u6cf0\u52d2\u5c55\u5f00\u3002\r\n\r\n\u624b\u73a9\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff1a\r\n\r\n$$\r\n\\begin{aligned}\r\nf'(x)&=\\dfrac{\\mathrm d\\ln(1-x)^{-1}}{\\mathrm d(1-x)^{-1}}\\dfrac{\\mathrm d(1-x)^{-1}}{\\mathrm d(1-x)}\\dfrac{\\mathrm d(1-x)}{\\mathrm dx}\\\\\r\n&=(1-x)(-1)(1-x)^{-2}(-1)\\\\\r\n&=(1-x)^{-1}\\\\\r\nf''(x)&=\\dfrac{\\mathrm d(1-x)^{-1}}{\\mathrm d(1-x)}\\dfrac{\\mathrm d(1-x)}{\\mathrm dx}\\\\\r\n&=(-1)(1-x)^{-2}(-1)\\\\\r\n&=(1-x)^{-2}\\\\\r\nf'''(x)&=\\dfrac{\\mathrm d(1-x)^{-2}}{\\mathrm d(1-x)}\\dfrac{\\mathrm d(1-x)}{\\mathrm dx}\\\\\r\n&=(-2)(1-x)^{-3}(-1)\\\\\r\n&=2(1-x)^{-3}\r\n\\end{aligned}\r\n$$\r\n\r\n\u603b\u7ed3\u51fa\u4e00\u4e2a\u89c4\u5f8b\uff1a\r\n\r\n$$f^{(k)}(x)=(k-1)!(1-x)^{-k},n>0$$\r\n\r\n\u56e0\u6b64\u5728\u96f6\u70b9\u5904\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\uff1a\r\n\r\n$$\r\n\\begin{aligned}\r\nf(x)&=\\sum_{k \\ge 0}\\dfrac{f^{(k)}(0)}{k!}x^k\\\\\r\n&=\\ln\\dfrac{1}{1-0}+\\sum_{k \\ge 1}\\dfrac{(k-1)!(1-0)^{-k}}{k!}x^k\\\\\r\n&=\\sum_{k \\ge 1}\\dfrac{(k-1)!}{k!}x^k\\\\\r\n&=\\sum_{k \\ge 1}\\dfrac{x^k}{k}\r\n\\end{aligned}\r\n$$\r\n\r\n\u4ee3\u56de\u5230\u539f\u5f0f\u5b50\u91cc\u53bb\uff1a\r\n\r\n$$\r\n\\begin{aligned}\r\nF(x)&=\\exp\\sum_{i=1}^n\\ln\\dfrac{1}{1-x^{v_i}}\\\\\r\n&=\\exp\\sum_{i=1}^nf(x^{v_i})\\\\\r\n&=\\exp\\sum_{i=1}^n\\sum_{k \\ge 1}\\dfrac{x^{kv_i}}{k}\\\\\r\n&=\\exp\\sum_{i=1}^n\\sum_{v_i \\mid k}\\dfrac{v_ix^k}{k}\r\n\\end{aligned}\r\n$$\r\n\r\n\u7531\u4e8e $\\exp F(x)\\equiv\\exp(F(x) \\bmod x^m)\\pmod{x^m}$\uff0c\u53f3\u8fb9\u7684\u548c\u5f0f\u8ba1\u7b97\u5230 $m$ \u6b21\u5373\u53ef\u3002\u5355\u6b21\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\Theta\\left(\\dfrac{m}{v_i}\\right)$\u3002\r\n\r\n\u5f53 $v_i$ \u90fd\u5f88\u5c0f\u7684\u65f6\u5019\u4f1a\u88ab\u5361\u6210 $\\Theta(nm)$\u3002\u4f46\u662f\u52a0\u6cd5\u7684\u5408\u5e76\u8fdc\u6bd4\u4e58\u6cd5\u65b9\u4fbf\uff0c\u5f00\u4e00\u4e2a\u6876 $a_i$ \u8bb0\u5f55\u6bcf\u4e2a $v_i$ \u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6700\u5927\u7684\u7269\u54c1\u91cd\u91cf\u4e3a $b$\uff0c\u90a3\u4e48\uff1a\r\n\r\n$$\r\n\\begin{aligned}\r\nF(x)&=\\prod_{i=1}^b\\left(\\dfrac{1}{1-x^{i}}\\right)^{a_i}\\\\\r\n&=\\exp\\sum_{i=1}^ba_i\\ln\\left(\\dfrac{1}{1-x^i}\\right)\\\\\r\n&=\\exp\\sum_{i=1}^ba_i\\sum_{k \\ge 1}\\dfrac{x^{ik}}{k}\\\\\r\n&=\\exp\\sum_{i=1}^ba_i\\sum_{i \\mid k}\\dfrac{ix^k}{k}\r\n\\end{aligned}\r\n$$\r\n\r\n\u8fd9\u5c31\u662f\u5927\u5bb6\u559c\u95fb\u4e50\u89c1\u7684 $\\text{P\\'olya Exp}$\uff0c\u6216\u8005\u53eb\u6b27\u62c9\u53d8\u6362\u3002\r\n\r\n\u8ba1\u7b97\u53f3\u8fb9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u6700\u52a3 $\\Theta(b \\log b)$\uff0c\u7531\u4e8e $b \\le m$ \u53ef\u4ee5\u770b\u4f5c\u662f $\\Theta(m \\log m)$\u3002\u800c $\\exp$ \u7684\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u5b9e\u73b0\u53ef\u4ee5\u662f $\\Theta(m \\log m)$ \u6216\u5c0f\u5e38\u6570\u7684 $\\Theta(m \\log^2 m)$\u3002\r\n\r\n$n$ \u5f88\u5927\uff08$10^7$ \u7ea7\u522b\uff09\u800c $m$ \u5f88\u5c0f\uff08$10^4$ \u7ea7\u522b\uff09\u4e14\u6ca1\u6709 NTT \u6a21\u6570\u7684\u80cc\u5305\u8ba1\u6570\u95ee\u9898\u4e5f\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u5904\u7406\uff0c\u5199\u4e00\u4e2a\u57fa\u4e8e\u9012\u63a8\u7684 $\\Theta(m^2)$ \u590d\u6742\u5ea6 $\\exp$ \u5373\u53ef\u3002\u5982\u679c $m$ \u518d\u5927\u4e00\u70b9\u5c31\u9700\u8981\u4efb\u610f\u6a21\u6570 NTT \u4e86\u3002",
        "postTime": 1658558050,
        "uid": 370281,
        "name": "m256i",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3]P4389 \u4ed8\u516c\u4e3b\u7684\u80cc\u5305"
    },
    {
        "content": "[$\\Large\\texttt{My Blog}$](https://www.cnblogs.com/AThousandMoons/p/10524935.html)\n\n---\n\n\u8fd9\u9053\u9898\uff0c\u770b\u5230\u6570\u636e\u8303\u56f4\u5c31\u77e5\u9053\u662f\u751f\u6210\u51fd\u6570\u3002\n$$Ans=\\prod_{i=1}^n\\frac{1}{1-x^{v_i}}$$\n\n\u4f46\u662f\u8fd9\u4e2a\u5f0f\u5b50\u76f4\u63a5\u4e58\u4f1atle\uff0c\u6211\u4eec\u8003\u8651\u8fdb\u884c\u4f18\u5316\u3002\n\n\u770b\u89c1\u8fd9\u4e2a\u8fde\u4e58\u7684\u5f0f\u5b50\uff0c\u5e94\u8be5\u662f\u8981\u4e0a$\\ln$.\n\n$$Ans=\\exp(\\sum_{i=1}^n\\ln(\\frac{1}{1-x^{v_i}}))$$\n\n\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5feb\u901f\u8ba1\u7b97$\\ln(\\frac{1}{1-x^{v_i}})$\u3002\n\n$$\\ln(f(x))=\\int f'f^{-1}dx$$\n\u6240\u4ee5\n$$\\ln(\\frac{1}{1-x^v})=\\int\\sum_{i=1}^{+\\infty}vix^{vi-1}*(1-x^v)dx$$\n$$=\\int(\\sum_{i=1}^{+\\infty}vix^{vi-1}-\\sum_{i=2}^{+\\infty}v(i-1)x^{vi-1})dx$$\n$$=\\int(\\sum_{i=1}^{+\\infty}vx^{vi-1})dx$$\n$$=\\sum_{i=1}^{+\\infty}\\frac{1}{i}x^{vi}$$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ee3\u516c\u5f0f\u4e86\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define Rint register int\nusing namespace std;\ntypedef long long LL;\nconst int N = 400003, P = 998244353, G = 3, Gi = 332748118;\nint n, m, cnt[N], A[N];\ninline int kasumi(int a, int b){\n    int res = 1;\n    while(b){\n        if(b & 1) res = (LL) res * a % P;\n        a = (LL) a * a % P;\n        b >>= 1;\n    }\n    return res;\n}\nint R[N];\ninline void NTT(int *A, int limit, int type){\n    for(Rint i = 1;i < limit;i ++)\n        if(i < R[i]) swap(A[i], A[R[i]]);\n    for(Rint mid = 1;mid < limit;mid <<= 1){\n        int Wn = kasumi(type == 1 ? G : Gi, (P - 1) / (mid << 1));\n        for(Rint j = 0;j < limit;j += mid << 1){\n            int w = 1;\n            for(Rint k = 0;k < mid;k ++, w = (LL) w * Wn % P){\n                int x = A[j + k], y = (LL) w * A[j + k + mid] % P;\n                A[j + k] = (x + y) % P;\n                A[j + k + mid] = (x - y + P) % P;\n            }\n        }\n    }\n    if(type == -1){\n        int inv = kasumi(limit, P - 2);\n        for(Rint i = 0;i < limit;i ++)\n            A[i] = (LL) A[i] * inv % P;\n    }\n}\nint ans[N];\ninline void poly_inv(int *A, int deg){\n    static int tmp[N];\n    if(deg == 1){\n        ans[0] = kasumi(A[0], P - 2);\n        return;\n    }\n    poly_inv(A, (deg + 1) >> 1);\n    int limit = 1, L = -1;\n    while(limit <= (deg << 1)){limit <<= 1; L ++;}\n    for(Rint i = 1;i < limit;i ++)\n        R[i] = (R[i >> 1] >> 1) | ((i & 1) << L);\n    for(Rint i = 0;i < deg;i ++) tmp[i] = A[i];\n    for(Rint i = deg;i < limit;i ++) tmp[i] = 0;\n    NTT(tmp, limit, 1); NTT(ans, limit, 1);\n    for(Rint i = 0;i < limit;i ++)\n        ans[i] = (2 - (LL) tmp[i] * ans[i] % P + P) % P * ans[i] % P;\n    NTT(ans, limit, -1);\n    for(Rint i = deg;i < limit;i ++) ans[i] = 0;\n}\nint Ln[N];\ninline void get_Ln(int *A, int deg){\n    static int tmp[N];\n    poly_inv(A, deg);\n    for(Rint i = 1;i < deg;i ++)\n        tmp[i - 1] = (LL) i * A[i] % P;\n    tmp[deg - 1] = 0;\n    int limit = 1, L = -1;\n    while(limit <= (deg << 1)){limit <<= 1; L ++;}\n    for(Rint i = 1;i < limit;i ++)\n        R[i] = (R[i >> 1] >> 1) | ((i & 1) << L);\n    NTT(ans, limit, 1); NTT(tmp, limit, 1);\n    for(Rint i = 0;i < limit;i ++) Ln[i] = (LL) ans[i] * tmp[i] % P;\n    NTT(Ln, limit, -1);\n    for(Rint i = deg + 1;i < limit;i ++) Ln[i] = 0;\n    for(Rint i = deg;i;i --) Ln[i] = (LL) Ln[i - 1] * kasumi(i, P - 2) % P;\n    for(Rint i = 0;i < limit;i ++) tmp[i] = ans[i] = 0;\n    Ln[0] = 0;\n}\nint Exp[N];\ninline void get_Exp(int *A, int deg){\n    if(deg == 1){\n        Exp[0] = 1;\n        return;\n    }\n    get_Exp(A, (deg + 1) >> 1);\n    get_Ln(Exp, deg);\n    for(Rint i = 0;i < deg;i ++) Ln[i] = (A[i] + (i == 0) - Ln[i] + P) % P;\n    int limit = 1, L = -1;\n    while(limit <= (deg << 1)){limit <<= 1; L ++;}\n    for(Rint i = 1;i < limit;i ++)\n        R[i] = (R[i >> 1] >> 1) | ((i & 1) << L);\n    NTT(Exp, limit, 1); NTT(Ln, limit, 1);\n    for(Rint i = 0;i < limit;i ++) Exp[i] = (LL) Exp[i] * Ln[i] % P;\n    NTT(Exp, limit, -1);\n    for(Rint i = deg;i < limit;i ++) Exp[i] = 0;\n    for(Rint i = 0;i < limit;i ++) Ln[i] = ans[i] = 0;\n}\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for(Rint i = 1;i <= n;i ++){\n        int x;\n        scanf(\"%d\", &x);\n        ++ cnt[x];\n    }\n    for(Rint i = 1;i <= m;i ++){\n        if(!cnt[i]) continue;\n        for(Rint j = i;j <= m;j += i)\n            A[j] = (A[j] + (LL) cnt[i] * kasumi(j / i, P - 2) % P) % P;\n    }\n    get_Exp(A, m + 1);\n    for(Rint i = 1;i <= m;i ++)\n        printf(\"%d\\n\", Exp[i]);\n}\n```",
        "postTime": 1552471693,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4389 \u3010\u4ed8\u516c\u4e3b\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "\u751f\u6210\u51fd\u6570\u597d\u9898\n\n\u9996\u5148\u6211\u4eec\u5bf9\u6bcf\u4e00\u79cd\u7269\u54c1\uff08\u8bbe\u4f53\u79ef\u4e3a$v_{i}$\uff09\u6784\u9020\u751f\u6210\u51fd\u6570$F(x)=\\sum_{j=1}^{\\infty}x^{jv_{i}}$\n\n \u90a3\u4e48\u5f88\u663e\u7136\u7b54\u6848\u5c31\u662f\u8fd9\u4e00\u5806\u4e1c\u897f\u4e58\u5728\u4e00\u8d77\n\n\u4f46\u662f...\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f$O(nmlog_{2}m)$\u7684\uff0c\u663e\u7136\u4e0d\u5408\u7406\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u628a\u6240\u6709\u751f\u6210\u51fd\u6570\u53d6\u5bf9\u6570\uff0c\u90a3\u4e48\u591a\u9879\u5f0f\u4e58\u6cd5\u5c31\u53ef\u4ee5\u53d8\u6210\u591a\u9879\u5f0f\u52a0\u6cd5\u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u7d2f\u8ba1\u6bcf\u4e00\u4f4d\u4e0a\u7684\u8d21\u732e\u5373\u53ef\n\n\u53ef\u662f...\u8fd9\u79cd\u4e1c\u897f\u5982\u679c\u6211\u4eec\u6328\u4e2a\u5199\u591a\u9879\u5f0f$ln$\u7684\u8bdd\u8fd8\u662f$O(nmlog_{2}m)$...\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u8f6c\u5316\uff1a\n\n\u628a\u751f\u6210\u51fd\u6570\u5199\u6210$F(x)=\\frac{1}{1-x^{v_{i}}}$\u7684\u5f62\u5f0f\n\n\u7136\u540e\u6c42$ln$\uff1a\n\n$lnF(x)=ln\\frac{1}{1-x^{v_{i}}}=-ln(1-x^{v_{i}})$\n\n\u5c55\u5f00\u8fd9\u4e2a\u4e1c\u897f\u7684\u6b65\u9aa4\uff1a\n\n\u8bbe$v_{i}=a$\n\n\u4e8e\u662f\u53ea\u9700\u5c55\u5f00$-ln(1-x^{a})$\u5373\u53ef\n\n\u90a3\u4e48\u5bf9\u8fd9\u4e2a\u4e1c\u897f\u6c42\u5bfc\u5f97\u5230\uff1a\n\n$\\frac{ax^{a-1}}{1-x^{a}}$\n\n\u7136\u540e\u628a\u4e0b\u9762\u6062\u590d\u6210\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u7684\u5f62\u5f0f\uff1a\n\n$ax^{a-1}\\sum_{i=0}^{\\infty}x^{ai}$\n\n\u518d\u628a\u7cfb\u6570\u4e58\u8fdb\u53bb\n\n$a\\sum_{i=0}^{\\infty}x^{ai+a-1}$\n\n\u518d\u79ef\u5206\uff0c\u8003\u8651\u5bf9\u540c\u4e00\u51fd\u6570\u5148\u6c42\u5bfc\u518d\u79ef\u5206\u5f97\u5230\u7684\u5c31\u662f\u539f\u51fd\u6570\uff0c\u56e0\u6b64\uff1a\n\n$lnF(x)=\\int a\\sum_{i=0}^{\\infty}x^{ai+a-1}$\n\n\u4e5f\u5c31\u662f\uff1a\n\n$lnF(x)=a\\sum_{i=0}^{\\infty}\\frac{1}{ai+a}x^{ai+a}$\n\n\u518d\u628a\u7cfb\u6570\u6254\u8fdb\u53bb\uff1a\n\n$lnF(x)=\\sum_{i=0}^{\\infty}\\frac{1}{i+1}x^{ai+a}$\n\n\u6539\u4e00\u4e0b\u679a\u4e3e\u8303\u56f4\uff1a\n\n$lnF(x)=\\sum_{i=1}^{\\infty}\\frac{1}{i}x^{ai}$\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5$O(nlnm)$\uff08\u5373\u8c03\u548c\u7ea7\u6570\uff09\u679a\u4e3e\u500d\u6570\u8ba1\u7b97\u8d21\u732e\uff0c\u6700\u540e\u591a\u9879\u5f0fexp\u5373\u53ef\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#define uint unsigned int\n#define ll long long\nusing namespace std;\nconst ll mode=998244353;\nint to[(1<<20)+5];\nint v[1000005];\nuint inv[2000005];\nuint G[1000005];\nuint F[1000005];\nuint Ff[1000005];\nuint ig[1000005];\nuint lg[1000005];\nuint tg[1000005];\nuint has[1000005];\nint n,m;\nvoid init()\n{\n\tinv[0]=inv[1]=1;\n\tfor(int i=2;i<=200000;i++)inv[i]=1ll*(mode-mode/i)*inv[mode%i]%mode;\n}\nuint pow_mul(uint x,uint y)\n{\n\tuint ret=1;\n\twhile(y)\n\t{\n\t\tif(y&1)ret=1ll*ret*x%mode;\n\t\tx=1ll*x*x%mode,y>>=1;\n\t}\n\treturn ret;\n}\nuint MOD(uint x,uint y)\n{\n\treturn x+y>=mode?x+y-mode:x+y;\n}\nvoid NTT(uint *a,int len,int k)\n{\n\tfor(int i=0;i<len;i++)if(i<to[i])swap(a[i],a[to[i]]);\n\tfor(int i=1;i<len;i<<=1)\n\t{\n\t\tuint w0=pow_mul(3,(mode-1)/(i<<1));\n\t\tfor(int j=0;j<len;j+=(i<<1))\n\t\t{\n\t\t\tuint w=1;\n\t\t\tfor(int o=0;o<i;o++,w=1ll*w*w0%mode)\n\t\t\t{\n\t\t\t\tuint w1=a[j+o],w2=1ll*a[j+o+i]*w%mode;\n\t\t\t\ta[j+o]=(w1+w2)%mode,a[j+o+i]=(w1+mode-w2)%mode;\n\t\t\t}\n\t\t}\n\t}\n\tif(k==-1)\n\t{\n\t\tuint Inv=pow_mul(len,mode-2);\n\t\tfor(int i=1;i<(len>>1);i++)swap(a[i],a[len-i]);\n\t\tfor(int i=0;i<len;i++)a[i]=1ll*a[i]*Inv%mode;\n\t}\n}\nuint A[(1<<20)+5],B[(1<<20)+5],C[(1<<20)+5];\nvoid mul(uint *f,uint *g,int len)\n{\n\tint lim=1,l=0;\n\twhile(lim<=2*len)lim<<=1,l++;\n\tfor(int i=0;i<lim;i++)A[i]=B[i]=0,to[i]=((to[i>>1]>>1)|((i&1)<<(l-1)));\n\tfor(int i=0;i<len;i++)A[i]=f[i],B[i]=g[i];\n\tNTT(A,lim,1),NTT(B,lim,1);\n\tfor(int i=0;i<lim;i++)C[i]=1ll*A[i]*B[i]%mode;\n\tNTT(C,lim,-1);\n}\nvoid get_inv(uint *f,uint *g,int dep)\n{\n\tif(dep==1)\n\t{\n\t\tg[0]=pow_mul(f[0],mode-2);\n\t\treturn;\n\t}\n\tint nxt=(dep+1)>>1;\n\tget_inv(f,g,nxt);\n\tint lim=1,l=0;\n\twhile(lim<=2*dep)lim<<=1,l++;\n\tfor(int i=0;i<lim;i++)A[i]=B[i]=0,to[i]=((to[i>>1]>>1)|((i&1)<<(l-1)));\n\tfor(int i=0;i<dep;i++)A[i]=f[i];\n\tfor(int i=0;i<nxt;i++)B[i]=g[i];\n\tNTT(A,lim,1),NTT(B,lim,1);\n\tfor(int i=0;i<lim;i++)C[i]=1ll*A[i]*B[i]%mode*1ll*B[i]%mode;\n\tNTT(C,lim,-1);\n\tfor(int i=0;i<dep;i++)g[i]=(2*g[i]+mode-C[i])%mode;\n}\nvoid get_ln(uint *f,uint *g,int dep)\n{\n\tfor(int i=0;i<dep;i++)ig[i]=0;\n\tget_inv(f,ig,dep);\n\tfor(int i=0;i<dep-1;i++)Ff[i]=1ll*f[i+1]*(i+1)%mode;\n\tmul(ig,Ff,dep);\n\tfor(int i=0;i<dep;i++)g[i+1]=1ll*C[i]*inv[i+1]%mode;\n}\nvoid get_exp(uint *f,uint *g,int dep)\n{\n\tif(dep==1)\n\t{\n\t\tg[0]=1;\n\t\treturn;\n\t}\n\tint nxt=(dep+1)>>1;\n\tget_exp(f,g,nxt);\n\tget_ln(g,lg,dep);\n\tfor(int i=0;i<dep;i++)tg[i]=(f[i]+mode-lg[i])%mode;\n\ttg[0]++;\n\tmul(g,tg,dep);\n\tfor(int i=0;i<dep;i++)g[i]=C[i];\n}\ninline int read()\n{\n\tint f=1,x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint main()\n{\n\tinit();\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)v[i]=read(),has[v[i]]++;\n\tfor(int i=1;i<=100000;i++)if(has[i])for(int j=1;i*j<=m;j++)G[i*j]=MOD(G[i*j],1ll*has[i]*inv[j]%mode);\n\tget_exp(G,F,m+1);\n\tfor(int i=1;i<=m;i++)printf(\"%u\\n\",F[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1561291454,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4389 \u3010\u4ed8\u516c\u4e3b\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "\u7070\u5e38\u6709\u8da3\u7684\u9898\u76ee...\uff08\u5047\u7684\u80cc\u5305\uff09\n\n\u4e4d\u4e00\u770b\u5b8c\u5168\u80cc\u5305\uff0c\u7136\u800c\u53d1\u73b0\u590d\u6742\u5ea6\u662f $O(nm)$ \u7684\u4e8e\u662f\u5f03\u7597\n\n\n\u5b9e\u9645\u4e0a\u8fd9\u9898\u8981\u7528\u751f\u6210\u51fd\u6570\u89e3...\u5173\u4e8e\u751f\u6210\u51fd\u6570\u51fd\u6570\u53ef\u4ee5\u8003\u8651\u98df\u7528 [\u8fd9\u7bc7blog](https://www.cnblogs.com/RabbitHu/p/9178645.html)\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u79cd\u7269\u54c1\u6ca1\u6709\u4ef7\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8003\u8651\u5b83\u7684\u4f53\u79ef\u80fd\u53d6\u5230\u7684\u503c\u662f $x\u00b7v_i$ \uff0c\u4e5f\u5c31\u662f\u8bf4\u4f53\u79ef\u7684\u500d\u6570\uff0c\u90a3\u4e48\u8f6c\u5316\u4e3a\u751f\u6210\u51fd\u6570\u4e5f\u5c31\u662f $1\\over 1-x^{vi}$\n\n\n\u6211\u4eec\u8003\u8651\u6700\u7684\u7b2c s \u4e2a\u7b54\u6848\u662f $\\prod{1\\over 1-x^{vi}}$ \u8fd9\u4e2a\u591a\u9879\u5f0f\u7684\u7b2c s \u9879\u90a3\u4e48\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u53d8\u6210\u4e86\u6c42\u51fa\u8fd9\u4e2a\u591a\u9879\u5f0f\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5316\u5f0f\u5b50\uff1a\n\n$$\\begin{aligned}  &\\prod{1\\over 1-x^{vi}}   \\\\ =& {1\\over \\prod 1-x^{vi}}   \\\\=& {1\\over Exp\\Big({\\sum Ln(1-x^{vi})}\\Big)} \\end{aligned}$$\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u7269\u54c1\u6c42\u51fa\u5bf9\u5e94\u591a\u9879\u5f0f\u7684 $Ln$ \u7136\u540e\u52a0\u8d77\u6765 $Exp$ \u4e00\u4e0b\u518d\u6c42\u4e2a\u9006\u5c31\u53ef\u4ee5\u51fa\u89e3\u4e86\n\n\u4f46\u662f...\u5173\u952e\u662f...\u8fd9\u4e2a\u6c42 Ln \uff1f\u590d\u6742\u5ea6\u6709\u70b9\u4e0d\u5927\u5bf9\u52b2\u554a\uff0c\u597d\u50cf\u662f $n^2log~n$ \u7684\u590d\u6742\u5ea6\uff1f\n\n\u77ac\u95f4\u6c89\u9ed8...\n\n\u5176\u5b9e\u6211\u4eec\u8003\u8651 $Ln$ \u7684\u5c55\u5f00\uff0c\u9996\u5148\u5bf9\u4e8e $Ln(1-x)$ \u800c\u8a00\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u7684\u5c55\u5f00\u5f0f\u4e3a\uff1a\n\n$$Ln(1-x)=\\sum_{i=1}^\\infty (-1)^i x^i$$\n\n\u73b0\u5728\u6211\u4eec\u628a $x$ \u53d8\u6210 $x^{v}$ \uff1a\n\n$$Ln(1-x^{v})=\\sum_{i=1}^\\infty (-1)^i x^{iv}   $$\n\n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u4e00\u4e2a\u7269\u54c1\u5bf9\u5e94\u591a\u9879\u5f0f\u7684 $Ln$ \uff0c\u5e76\u4e14\u62ff\u51fa\u6307\u6570\u5c0f\u4e8e\u7b49\u4e8e m \u7684\u9879\u5373\u53ef\n\n\u7136\u9e45\u8fd9\u53c8\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u53ea\u4e0d\u8fc7\u51cf\u6389\u4e86\u4e00\u4e2a $log$ \u7f62\u4e86\uff0c\u590d\u6742\u5ea6\u7167\u6837\u7206\u70b8\uff0c\u8fd8\u4e0d\u5982\u6eda\u56de\u53bb\u505a\u5b8c\u5168\u80cc\u5305...\n\n\u4f46\u662f\u6362\u4e00\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u53d1\u73b0\u590d\u6742\u5ea6\u4e4b\u6240\u4ee5\u662f $n^2$ \u539f\u56e0\u5c31\u662f\u6ee1\u8db3\u6761\u4ef6\u7684 $i$ \u662f $O(n)$ \u7684\uff0c\u5982\u679c\u6bcf\u4e2a\u7269\u54c1\u7684 $v$ \u90fd\u662f $1$ \u7684\u8bdd\u5c31\u8dd1\u6ee1\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u628a $v$ \u4e00\u6837\u7684\u653e\u4e00\u8d77\u52a0\u8d21\u732e\uff08\u5373\u6876\u6392\uff09\uff0c\u7136\u540e $O(m)$ \u4e00\u904d\u626b\u8fc7\u53bb\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\uff1a $O(m+{m\\over 2}+{m\\over 3}+...+{m\\over m})=O(m(1+{1\\over 2}+{1\\over 3}+...+{1\\over m}))=O(m~ log ~m)$\n\n\u8fd9\u4e2a\u590d\u6742\u5ea6...\u53ef\u4ee5\u63a5\u53d7\u4e86\u4e2b~\n\n\u7136\u540e\u548c\u6700\u524d\u9762\u8bf4\u7684\u4e00\u6837...\n\n\n\n\n# code\n\n\u6700\u540e\u6570\u7ec4\u8981\u5f00\u5927\u5426\u5219\u5b8c\u86cb...\u5927\u6982\u5f00\u5c0f\u4e9b\u5c31 30 \u5206\u4e86...\n\n```cpp\n//by Judge\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\nusing namespace std;\nconst int mod=998244353;\nconst int iG=332748118;\nconst int M=6e5+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int mul(int x,int y){return 1ll*x*y%mod;}\ninline int dec(int x,int y){return (x-=y)<0?x+mod:x;}\ninline int inc(int x,int y){return (x+=y)>=mod?x-mod:x;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(int x,char chr='\\n'){\n\tif(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n\twhile(z[++Z]=x%10+48,x/=10);\n\twhile(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n} int n,m,limit; arr v,a,b,r,inv;\ninline int qpow(int x,int p=mod-2){ int s=1;\n\tfor(;p;p>>=1,x=mul(x,x)) if(p&1) s=mul(s,x); return s;\n}\ninline void Rev(int n){ int len=-1;\n\tfor(limit=1;limit<=n;limit<<=1)++len;\n\tfp(i,1,limit-1) r[i]=(r[i>>1]>>1)|((i&1)<<len);\n}\ninline void NTT(int* a,int tp){\n\tfp(i,0,limit-1) if(i<r[i]) swap(a[i],a[r[i]]);\n\tfor(int mid=1;mid<limit;mid<<=1){\n\t\tint Gn=qpow(tp?3:iG,(mod-1)/(mid<<1));\n\t\tfor(int j=0,x,y;j<limit;j+=mid<<1)\n\t\t\tfor(int k=0,g=1;k<mid;++k,g=mul(g,Gn))\n\t\t\t\tx=a[j+k],y=mul(g,a[j+k+mid]),\n\t\t\t\ta[j+k]=inc(x,y),a[j+k+mid]=dec(x,y);\n\t} if(tp) return ; int inv=qpow(limit);\n\tfp(i,0,limit-1) a[i]=mul(a[i],inv);\n}\nvoid Inv(int* a,int* b,int n){ static arr C,D;\n\tif(n==1) return b[0]=inv[a[0]],void();\n\tInv(a,b,n>>1),Rev(n); fp(i,0,n-1) C[i]=a[i],D[i]=b[i];\n\tfp(i,n,limit-1) C[i]=D[i]=0; NTT(C,1),NTT(D,1);\n\tfp(i,0,limit-1) C[i]=mul(C[i],mul(D[i],D[i])); NTT(C,0);\n\tfp(i,0,n-1) b[i]=dec(inc(b[i],b[i]),C[i]);\n}\ninline void Direv(int* a,int* b,int n){\n\tfp(i,1,n-1) b[i-1]=mul(a[i],i); b[n-1]=0;\n}\ninline void Inter(int* a,int* b,int n){\n\tfp(i,1,n-1) b[i]=mul(a[i-1],inv[i]); b[0]=0;\n}\ninline void Ln(int* a,int* b,int n){ static arr A,B;\n\tDirev(a,A,n),Inv(a,B,n),Rev(n),NTT(A,1),NTT(B,1);\n\tfp(i,0,limit-1) A[i]=mul(A[i],B[i]);\n\tNTT(A,0),Inter(A,b,limit); fp(i,0,limit-1) A[i]=B[i]=0;\n}\ninline void Exp(int* a,int* b,int n){\n\tstatic arr F; if(n==1) return b[0]=1,void();\n\tExp(a,b,n>>1),Ln(b,F,n),Rev(n); F[0]=dec(a[0]+1,F[0]);\n\tfp(i,1,n-1) F[i]=dec(a[i],F[i]); NTT(F,1),NTT(b,1);\n\tfp(i,0,limit-1) b[i]=mul(b[i],F[i]); NTT(b,0);\n\tfp(i,n,limit-1) b[i]=F[i]=0;\n}\nint main(){ n=read(),m=read();\n\tRev(m),inv[0]=inv[1]=1;\n\tfp(i,2,limit) inv[i]=mul(mod-mod/i,inv[mod%i]);\n\tfp(i,1,n) ++v[read()];\n\tfp(i,1,m) if(v[i]) fp(j,1,m/i)\n\t\ta[i*j]=inc(a[i*j],mul(v[i],dec(mod,inv[j])));\n\tExp(a,b,limit),memset(a,0,(limit+1)<<2);\n\tInv(b,a,limit); fp(i,1,m) print(a[i]);\n\treturn Ot(),0;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1559875064,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4389 \u3010\u4ed8\u516c\u4e3b\u7684\u80cc\u5305\u3011"
    }
]