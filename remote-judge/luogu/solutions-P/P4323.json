[
    {
        "content": "> \u672c\u6587\u540c\u6b65\u53d1\u5e03\u4e8e[\u80e1\u5c0f\u5154\u7684\u535a\u5ba2](https://www.cnblogs.com/RabbitHu/p/9165770.html)\uff0c\u6b22\u8fce\u4ea4\u6d41 >v<\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u5224\u65ad\u65e0\u6839\u6811\u540c\u6784\u7684\u6a21\u677f\u9898\uff0c\u5224\u65ad\u540c\u6784\u4e3b\u8981\u7684\u601d\u8def\u5c31\u662f\u54c8\u5e0c\u3002\n\n\u4e00\u9047\u5230\u54c8\u5e0c\u9898\uff0c\u4e00\u767e\u4e2a\u4eba\u80fd\u6709\u4e00\u767e\u96f6\u4e00\u79cd\u54c8\u5e0c\u65b9\u5f0f\uff0c\u8fd9\u7bc7\u9898\u89e3\u968f\u4fbf\u9009\u7528\u4e86\u4e00\u79cd\u2014\u2014\u7c7b\u4f3c[\u6768\u5f0b\u300aHash\u5728\u4fe1\u606f\u5b66\u7ade\u8d5b\u4e2d\u7684\u4e00\u7c7b\u5e94\u7528\u300b](https://wenku.baidu.com/view/72d3d14f852458fb770b560d.html)\u4e2d\u7684\u8fd9\u79cd\uff0c\u53ef\u80fd\u4e0d\u662f\u6700\u7b80\u6d01\u597d\u5199\u7684\uff0c\u4f46\u662f\u80fd\u7528\u3002\n\n\u6211\u7684\u54c8\u5e0c\u89c4\u5219\uff1a\u5b50\u6811$u$\u7684\u54c8\u5e0c\u503c\u7531\u5b83\u7684\u6bcf\u4e00\u4e2a\u5b50\u6811$v_i$\u7684\u54c8\u5e0c\u503c\u5f97\u6765\uff0c\u9996\u5148\u5c06\u6240\u6709$f(v)$\u6392\u4e2a\u5e8f\uff08\u9632\u6b62\u987a\u5e8f\u4e0d\u540c\u9020\u6210\u5f71\u54cd\uff09\uff0c\u7136\u540e$f(u) = size(u) * \\sum_i f(v_i)W^{i - 1} \\bmod P$\uff0c$W$\u662f\u4e8b\u5148\u9009\u53d6\u7684\u4e00\u4e2a\u4f4d\u6743\uff0c$P$\u662f\u6a21\u6570\uff0c$size(u)$\u662f\u5b50\u6811$u$\u7684\u5927\u5c0f\u3002\n\n\u8fd9\u6837DFS\u4e00\u904d\u53ef\u6c42\u51fa\u4ee5$1$\u53f7\u8282\u70b9\u4e3a\u6839\u65f6\uff0c\u6240\u6709\u5b50\u6811\u7684\u54c8\u5e0c\u503c$f(u)$\u3002\n\n\u4f46\u662f\u8fd9\u662f\u65e0\u6839\u6811\uff0c\u6211\u4eec\u60f3\u6c42\u51fa\u4ee5\u4efb\u610f\u8282\u70b9\u4e3a\u6839\u65f6\u6574\u68f5\u6811\u7684\u54c8\u5e0c\u503c\u3002\n\n\u8bbe$fa_u$\u4e3a\u4ee5$1$\u4e3a\u6839\u65f6$u$\u7684\u7236\u4eb2\uff0c\u5219\u4e0a\u9762\u7684$f(u)$\u4e5f\u662f\u4ee5$fa_u$\u4e3a\u6839\u65f6\u5b50\u6811$u$\u7684\u54c8\u5e0c\u503c\u3002\n\n\u518d\u6c42\u4e00\u4e2a$g(u)$\u8868\u793a\u4ee5$u$\u4e3a\u6839\u65f6\u5b50\u6811$fa_u$\u7684\u54c8\u5e0c\u503c\u3002\u8fd9\u4e2a$g(u)$\u600e\u4e48\u6c42\u5462\uff1f\u518dDFS\u4e00\u904d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c$g(u)$\u7531$g(fa_u)$\u4ee5\u53ca$u$\u7684\u6bcf\u4e2a\u5144\u5f1f$v_i$\u7684$f(v_i)$\u5f97\u6765\u3002\u4f46\u662f\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u7684\u8bdd\u5728\u83ca\u82b1\u56fe\u4e0a\u662f$O(n^2)$\u7684\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9$u$\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b58\u50a8\u5b83\u6240\u6709\u513f\u5b50\u7684\u54c8\u5e0c\u503c$f(v)$\uff0c\u5982\u679c\u6709\u7236\u4eb2\uff0c\u5219$g(u)$\u4e5f\u5728\u91cc\u9762\uff0c\u628a\u8fd9\u4e2a\u6570\u7ec4\u6392\u597d\u5e8f\uff0c\u6c42\u51fa\u6bcf\u4e2a\u524d\u7f00\u7684\u54c8\u5e0c\u503c\u548c\u6bcf\u4e2a\u540e\u7f00\u7684\u54c8\u5e0c\u503c\u3002\u8fd9\u65f6\uff0c\u4ee5$u$\u4e3a\u6839\u65f6\u6574\u68f5\u6811\u7684\u54c8\u5e0c\u503c\u5c31\u662f\u6574\u4e2a\u6570\u7ec4\u7684\u54c8\u5e0c\u503c\uff08\u518d\u4e58\u4e0a\u5b50\u6811\u5927\u5c0f$n$\uff09\u3002\n\n\u6b64\u65f6\u6c42\u6bcf\u4e2a\u513f\u5b50$v$\u7684$g(v)$\uff0c\u5c31\u662f\u4ece\u90a3\u4e2a\u6570\u7ec4\u4e2d\u95f4\u53bb\u6389$f(v)$\u540e\u7684\u54c8\u5e0c\u503c\uff0c\u4e8c\u5206\u67e5\u627e\u540e\u628a\u524d\u7f00\u54c8\u5e0c\u503c\u548c\u540e\u7f00\u54c8\u5e0c\u503c\u62fc\u8d77\u6765\u5c31\u53ef\u4ee5\u5f97\u5230\u3002\u8bb0\u5f97\u4e58\u4e0a$v$\u4e3a\u6839\u65f6$u$\u7684$size$\u5373$n - size(v)$\u3002\n\n\u8fd9\u6837\u5c31\u6c42\u51fa\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u54c8\u5e0c\u503c\u4e86\u3002\n\n\u628aA\u7684\u6240\u6709\u54c8\u5e0c\u503c\u5b58\u5230\u4e00\u4e2aset\u91cc\uff0c\u7136\u540e\u679a\u4e3eB\u7684\u6bcf\u4e2a\u5ea6\u4e3a1\u7684\u70b9$u$\uff0c\u6c42\u51fa\u4ee5$u$\u4e3a\u6839\u5b83\u7684\u552f\u4e00\u5b50\u6811$v$\u7684\u54c8\u5e0c\u503c\uff0c\u5982\u679cset\u91cc\u6709\u8fd9\u4e2a\u503c\uff0c$u$\u5c31\u662f\u6240\u6c42\u7684\u70b9\u4e4b\u4e00\u3002\n\n\u4ee3\u7801\u6bd4\u8f83\u4e11\uff0c\u89c1\u8c05 ><\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <set>\n#define space putchar(' ')\n#define enter putchar('\\n')\ntypedef long long ll;\nusing namespace std;\ntemplate <class T>\nvoid read(T &x){\n    char c;\n    bool op = 0;\n    while(c = getchar(), c < '0' || c > '9')\n        if(c == '-') op = 1;\n    x = c - '0';\n    while(c = getchar(), c >= '0' && c <= '9')\n        x = x * 10 + c - '0';\n    if(op) x = -x;\n}\ntemplate <class T>\nvoid write(T x){\n    if(x < 0) putchar('-'), x = -x;\n    if(x >= 10) write(x / 10);\n    putchar('0' + x % 10);\n}\n\nconst int N = 100005, W = 1000000021, P = 999999137;\nint n, m, fa[N], f[N], g[N], pw[N], Sze[N], deg[N], ans = P;\nint ecnt, adj[N], nxt[2*N], go[2*N];\nvector <int> son[N], sl[N], sr[N];\nset <int> vis;\nbool isB;\n\nvoid add(int u, int v){\n    if(isB) deg[u]++;\n    go[++ecnt] = v;\n    nxt[ecnt] = adj[u];\n    adj[u] = ecnt;\n}\nint dfs1(int u, int pre){\n    Sze[u] = 1;\n    fa[u] = pre;\n    son[u].clear();\n    for(int e = adj[u], v; e; e = nxt[e])\n\tif((v = go[e]) != pre){\n\t    son[u].push_back(dfs1(v, u));\n\t    Sze[u] += Sze[v];\n\t}\n    if(son[u].empty()) return f[u] = 1;\n    sort(son[u].begin(), son[u].end());\n    ll ret = 0;\n    for(int i = 0; i < (int)son[u].size(); i++)\n\tret = (ret * W + son[u][i]) % P;\n    return f[u] = Sze[u] * ret % P;\n}\n\nvoid dfs2(int u){\n    if(fa[u]){\n\tson[u].push_back(g[u]);\n\tsort(son[u].begin(), son[u].end());\n    }\n    int sze = son[u].size();\n    sl[u].resize(sze);\n    sl[u][0] = son[u][0];\n    for(int i = 1; i < sze; i++)\n\tsl[u][i] = ((ll)sl[u][i - 1] * W + son[u][i]) % P;\n    sr[u].resize(sze);\n    sr[u][sze - 1] = son[u][sze - 1];\n    for(int i = sze - 2; i >= 0; i--)\n\tsr[u][i] = (sr[u][i + 1] + (ll)son[u][i] * pw[sze - i - 1]) % P;\n    for(int e = adj[u], v; e; e = nxt[e])\n\tif((v = go[e]) != fa[u]){\n\t    if(sze == 1){\n\t\tg[v] = 1;\n\t\tdfs2(v);\n\t\tbreak;\n\t    }\n\t    int p = lower_bound(son[u].begin(), son[u].end(), f[v]) - son[u].begin();\n\t    g[v] = 0;\n\t    if(p + 1 < sze) g[v] = sr[u][p + 1];\n\t    if(p - 1 >= 0) g[v] = (g[v] + (ll)sl[u][p - 1] * pw[sze - 1 - p]) % P;\n\t    g[v] = (ll)g[v] * (n - Sze[v]) % P;\n\t    if(isB && deg[v] == 1 && vis.find(g[v]) != vis.end()) ans = min(ans, v);\n\t    dfs2(v);\n\t}\n    if(!isB) vis.insert((ll)sl[u][sze - 1] * n % P);\n}\n\nint main(){\n\n    pw[0] = 1;\n    for(int i = 1; i < N; i++)\n\tpw[i] = (ll)pw[i - 1] * W % P;\n    read(n);\n    for(int i = 1, u, v; i < n; i++)\n\tread(u), read(v), add(u, v), add(v, u);\n    dfs1(1, 0);\n    dfs2(1);\n    ecnt = 0, isB = 1, n++;\n    memset(adj, 0, sizeof(adj));\n    for(int i = 1, u, v; i < n; i++)\n\tread(u), read(v), add(u, v), add(v, u);\n    dfs1(1, 0);\n    if(deg[1] == 1 && vis.find(f[go[adj[1]]]) != vis.end())\n\tans = 1;\n    dfs2(1);\n    write(ans), enter;\n\n    return 0;\n}\n```",
        "postTime": 1528682671,
        "uid": 8947,
        "name": "RabbitHu",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4323 \u3010[JSOI2016]\u72ec\u7279\u7684\u6811\u53f6\u3011"
    },
    {
        "content": "## \u9898\u76ee\u94fe\u63a5\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4323)\n### Update1:\u66f4\u65b0\u4e86$\\LaTeX$\n## \u601d\u8def\uff1a\n\u601d\u8def\u53c2\u8003\u4e86\u8fd9\u7bc7[\u535a\u5ba2](https://www.cnblogs.com/huyufeifei/p/10817673.html)\u7684\u4ee3\u7801\u3002\n\n\u6211\u9009\u62e9\u7684\u54c8\u5e0c\u65b9\u5f0f\u662f\u4f7f\u7528\u8d28\u6570\u8868\u8fdb\u884c\u54c8\u5e0c\uff0c\u5373\uff1a\n\n$$f(x)=\\sum\\limits_{y\\in Son_x}f(y)\\times\\text{P}(Size(y))\\mod M$$\n\n\u5176\u4e2d $P(x)$ \u8868\u793a\u8d28\u6570\u8868\u4e2d\u7684\u7b2c $x$ \u9879\uff0c $Size(x)$ \u8868\u793a\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c $f(x)$ \u521d\u59cb\u5316\u4e3a 1 \uff0c$M$ \u4e3a\u6a21\u6570\u3002\n\n\u5bf9\u4e8e\u4e00\u68f5\u6709\u6839\u6811\u6765\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5728 $\\mathcal{O(n)}$ \u7684\u65f6\u95f4\u5185\u5904\u7406\u51fa\u8be5\u6811\u7684\u54c8\u5e0c\u503c\u3002\n\n\u800c\u9898\u76ee\u662f\u4e00\u9897\u6709\u6839\u6811\uff0c\u53ef\u4ee5\u60f3\u5230\u4e00\u79cd\u6734\u7d20\u505a\u6cd5\uff0c\u5373\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u8dd1\u4e00\u8fb9\u54c8\u5e0c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O(n^2)}$ \u65e0\u6cd5\u6ee1\u8db3\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\u3002\n\n\u4ee5\u9898\u76ee\u6837\u4f8b\u7ed9\u7684\u56fe\u4e3a\u4f8b\uff1a\n\n![1](https://cdn.luogu.com.cn/upload/image_hosting/6ilq82xj.png)\n\n\u53ef\u4ee5\u5148\u6c42\u51fa\u4ee5 $x$ \u4e3a\u6839\u7684\u6811\u7684\u54c8\u5e0c\u503c\uff0c\u8bb0\u4e3a $f(x)$ \uff0c\u540c\u65f6\u88ab\u4e00\u5e76\u6c42\u51fa\u7684\u8fd8\u6709\u4ee5 $y$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u54c8\u5e0c\u503c\uff0c\u8bb0\u4e3a $f(y)$ \u3002\n\n\u6839\u636e\u4e0a\u9762\u7684\u5b9a\u4e49\u6211\u4eec\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4ee5 $y$ \u4e3a\u6839\u7684\u54c8\u5e0c\u503c $g(y)$ \u4e3a $f(y)+h(x)$ \n\n $h(x)$ \u4e3a\u4ee5 $x$ \u4e3a\u6839\u65f6\u6574\u68f5\u6811\u9664\u53bb\u4ee5 $y$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u54c8\u5e0c\u503c\u3002\n\n\u6839\u636e\u5b9a\u4e49\u53ef\u5f97:\n\n$$h(x)=(f(x)-f(y)\\times\\text{P}(Size(y))\\times\\text{P}(n-Size(y))\\mod M$$\n\n\u5bf9\u4e8e\u4efb\u610f\u7684 $y$ \uff0c\u6709\uff1a\n\n$$g(y)=f(y)+(f(x)-f(y)\\times\\text{P}(Size(y))\\times\\text{P}(n-Size(y))\\mod M$$\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21 DFS \u6765\u6c42\u51fa\u4ee5\u4efb\u610f\u8282\u70b9\u4e3a\u6839\u7684\u6811\u7684\u54c8\u5e0c\u503c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3a $\\mathcal{O(n)}$ \n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 std::set \u6765\u7ef4\u62a4\u7b2c\u4e00\u9897\u6811\u7684\u54c8\u5e0c\u503c\u3002\n\n\u800c\u5bf9\u4e8e\u7b2c\u4e8c\u68f5\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8bb0\u5f55\u4e0b\u8be5\u6811\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u5e76\u4e14\u901a\u8fc7\u540c\u6837\u7684\u65b9\u5f0f\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u54c8\u5e0c\u503c\u3002\n\n\u518d\u901a\u8fc7\u679a\u4e3e\u8ba1\u7b97\u5220\u9664\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u540e\u8be5\u6811\u7684\u54c8\u5e0c\u503c\u5e76\u5c06\u8be5\u503c\u4e0e\u5148\u524d std::set \u4e2d\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\u5c31\u53ef\u5224\u65ad\u5220\u9664\u53f6\u5b50\u8282\u70b9\u540e\u7684\u6811\u662f\u5426\u4e0e\u7b2c\u4e00\u9897\u6811\u540c\u6784\u3002\n\n\u7279\u522b\u7684\uff0c\u7531\u4e8e\u53f6\u5b50\u8282\u70b9\u7684\u5927\u5c0f\u4e3a 1 \uff0c\u6240\u4ee5\u5220\u9664\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u540e\u7684\u54c8\u5e0c\u503c\u4e3a\u4ee5\u8be5\u53f6\u5b50\u7ed3\u70b9\u7684\u7236\u4eb2\u4f5c\u4e3a\u6839\u7684\u54c8\u5e0c\u503c\u51cf\u53bb $\\text{P}(1)$ \uff0c\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u3002\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u54c8\u5e0c\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal{O(n)}$ \u3002\n\n\u5904\u7406\u8d28\u6570\u8868\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u7ebf\u6027\uff0c\u5373 $\\mathcal{O(n)}$ \u3002\n\n std::set \u7684\u672c\u8d28\u662f\u4e00\u9897\u7ea2\u9ed1\u6811\uff0c\u5355\u6b21\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O(\\log n)}$ \u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O(n \\log n)}$\n\n## \u4ee3 \u7801 \u653e \u9001\uff1a\n\n\u65e2\u7136\u4f60\u80fd\u627e\u5230\u8fd9\u9898\uff0c\u6211\u76f8\u4fe1\u4f60\u80fd\u77ac\u95f4\u505a\u51fa\u6765\u7684\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define Max(x,y) (x>y?x:y)\n#define Min(x,y) (x<y?x:y)\nusing namespace std;\nconst long long N=100010,M=1000010,lpw=1e9+7;\nlong long head[N],ver[M],Next[M],tot;\nlong long n,P[M<<1],v[M<<1],cnt;\nlong long f[N],g[N],Size[N];\nlong long ind[N],fa[N];\nset<long long> st;\nvoid add(long long x,long long y){\n\tver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n}\nvoid init(){\n\tmemset(head,0,sizeof(head)),tot=0,n++;\n}\nvoid Hash1(long long x,long long fa){\n\tSize[x]=f[x]=1;\n\tfor(long long i=head[x];i;i=Next[i]){\n\t\tlong long y=ver[i];\n\t\tif(y==fa)continue;\n\t\tHash1(y,x);\n\t\tSize[x]+=Size[y];\n\t\tf[x]=(f[x]+f[y]*P[Size[y]]%lpw)%lpw;\n\t}\n}\nvoid Hash2(long long x,long long fa,long long L){\n\tg[x]=(f[x]+L*P[n-Size[x]]%lpw)%lpw;\n\tfor(long long i=head[x];i;i=Next[i]){\n\t\tlong long y=ver[i];\n\t\tif(y==fa)continue;\n\t\tHash2(y,x,(g[x]-f[y]*P[Size[y]]%lpw+lpw)%lpw);\n\t}\n}\nvoid GetP(long long x){\n\tfor(long long i=2;i<=x;i++){\n\t\tif(!v[i])P[++cnt]=i;\n\t\tfor(long long j=1;j<=cnt&&i*P[j]<=x;j++){\n\t\t\tv[i*P[j]]=1;\n\t\t\tif(!(i%P[j]))break;\n\t\t}\n\t}\n}\nint main(){\n\tGetP((M<<1)-1);\n\tscanf(\"%lld\",&n);\n\tfor(long long i=1;i<n;i++){\n\t\tlong long x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tHash1(1,0);\n\tHash2(1,0,0);\n\tfor(long long i=1;i<=n;i++)\n\t\tst.insert(g[i]);\n\tinit();\n\tfor(long long i=1;i<n;i++){\n\t\tlong long x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tadd(x,y),add(y,x);\n\t\tind[x]++,ind[y]++;\n\t\tfa[x]=y,fa[y]=x;\n\t}\n\tHash1(1,0);\n\tHash2(1,0,0);\n\tfor(long long i=1;i<=n;i++){\n\t\tif(ind[i]>1)continue;\n\t\tint x=(g[fa[i]]-P[1]+lpw)%lpw;\n\t\tif(st.find(x)!=st.end()){\n\t\t\tprintf(\"%lld\\n\",i);\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1586066155,
        "uid": 137242,
        "name": "Dia\u043esi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4323 \u3010[JSOI2016]\u72ec\u7279\u7684\u6811\u53f6\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u8fd9\u9898\u8c03\u4e86\u6211\u4e24\u5929\uff0c\u6700\u7ec8\u5728\u673a\u623f\u5927\u4f6c\u7684\u6307\u5bfc\u4e0bA\u4e86\u3002\n\u6cea\u76ee\uff0c\u53d1\u9898\u89e3\u5e86\u795d\u4e00\u4e0b\u3002\n\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e24\u68f5\u6811 $A$\uff0c$B$\uff0c\u8981\u6c42\u5224\u65ad\u51fa $B$ \u53bb\u6389\u54ea\u4e2a\u53f6\u5b50\u4e0e $A$ \u540c\u6784\uff08\u4e0d\u77e5\u9053\u6811\u7684\u540c\u6784\u7684\u540c\u5b66\u53ef\u4ee5\u53bb[\u8fd9\u91cc](https://www.luogu.com.cn/problem/P5043)\uff09\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u6811\u54c8\u5e0c\uff08\u84bb\u849f\u4e0d\u4f1a\u76f4\u5f84\u4e4b\u7c7b\u7684\u5224\u540c\u6784qwq\uff09\u3002\n\n\u8fd9\u91cc\u91c7\u7528 $hash(u)=size(u)\\times\\sum_{i}hash(v)*base^{i - 1}\\mod P $  \u7684\u65b9\u5f0f\u505a\u54c8\u5e0c\u3002\n\n\u6ce8\u610f\u4e00\u70b9\u6ce8\u610f\u4e00\u70b9\uff01$P$ \u548c $base$ \u7684\u9009\u62e9\u4e0d\u80fd\u9009\u5c0f\u4e86\uff08\u4e0d\u7136\u5c31\u4f1a\u5c11\u5206\uff0c\u55ef\uff0c\u522b\u95ee\u6211\u548b\u77e5\u9053\u7684\u3002\n\n\u54c8\u5e0c\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\u5c31\u662f\u5bf9\u4e8e $\\sqrt P$ \u4ee5\u4e0b\u7684\u6570\u636e\u51b2\u7a81\u6982\u7387\u6781\u5c0f\uff0c\u4f46\u65e0\u6cd5\u4fdd\u8bc1$\\sqrt P$\u4ee5\u4e0a\u7684\uff0c\u6240\u4ee5P\u548cbase\u9009\u62e9\u8981\u5408\u9002\u3002\n\n\u7136\u540e\u5c31\u662f\u8f6c\u79fb\u95ee\u9898\uff0c\u8003\u8651\u4e8c\u6b21\u626b\u63cf\u6362\u6839\u6811\u5f62dp\u3002\n\n\u63d2\u5165\u65f6\u5904\u7406\u4e00\u4e2a $degree(u)$ \u8868\u793a $B$ \u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u3002\n\n\u7136\u540e\u5148\u4ee5 1 \u4e3a\u6839\u626b\u4e00\u904d dfs\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9 $f_{u}$ \uff0c\u54c8\u5e0c\u503c$hash(u)$\uff0c\u5b50\u6811\u5927\u5c0f$size(u)$\uff0c\u4ee5\u53ca\u5b50\u6811\u7684\u54c8\u5e0c\u503c\u96c6\u5408 $t(u)$ \u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u8bbe$g(u)$\u8868\u793au\u4e3a\u6839\u65f6\u5b50\u6811$f_{u}$\u7684\u54c8\u5e0c\u503c\uff08\u8fd9\u91cc$f_{u}$\u6307\u7684\u662f\u521a\u521a\u9884\u5904\u7406\u51fa\u7684\u6570\u636e\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9\u7684\u54c8\u5e0c\u503c\u5c31\u662f$g(u)$\u548c$t(u)$\u5408\u5e76\u800c\u6765\u3002\n\n\u90a3\u4e48\u600e\u4e48\u7ef4\u62a4$g(u)$\uff1f\n\n\u6ce8\u610f\u5230$t(u)$\u4e0e$g(u)$\uff08\u5982\u679c$g(u)$\u5b58\u5728\uff09\u5171\u540c\u6784\u6210\u7684\u96c6\u5408\u4e2d\uff0c\u53bb\u6389$hash(v)$\u5c31\u662f$g(v)$\uff0c\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u4e00\u4e2a\u540e\u7f00\uff0c\u4e8c\u5206\u67e5\u627e\u5230$hash(v)$\u7684\u4f4d\u7f6e\u540e\u524d\u540e\u7f00\u4e00\u62fc\u5c31\u662f$g(v)$\u3002\n\nemm\u5982\u679c\u6ca1\u770b\u61c2\uff0c\u5c31\uff0c\u7ed3\u5408\u4ee3\u7801\uff0c\u518d\u753b\u753b\u56fe\uff0c\u5e94\u8be5\uff0c\u5c31\u884c\uff0c\u4e86\u3002\n\n\u67e5\u8be2\u5c31\u7b80\u5355\u4e86\uff0c$A$\u4e2d\u7684\u6240\u6709\u70b9\u4f5c\u4e3a\u6839\u5bf9\u5e94\u7684\u54c8\u5e0c\u503c\u7528\u4e2a$set$\u4ec0\u4e48\u7684\u8bb0\u5f55\u4e00\u4e0b\uff0c\u7136\u540e\u5728\u505a$B$\u7684\u54c8\u5e0c\u7684\u65f6\u5019\u67e5\u627e\uff0c\u5982\u679c\u6709\u5ea6\u6570\u4e3a1\u7684\u70b9\u4e0e$A$\u7684\u54c8\u5e0c\u6709\u91cd\u5408\u5c31\u7528\u5b83\u66f4\u65b0\u7b54\u6848\n\n\u6ce8\u610f$1$\u8981\u7279\u6b8a\u5904\u7406\uff0c\u56e0\u4e3adfs\u65e0\u6cd5\u67e5\u5230$1$\u3002\n\n**\uff08PS \u8fd9\u79cd\u524d\u540e\u7f00\u5408\u5e76\u7684\u601d\u60f3\u5728\u6362\u6839dp\u4e2d\u86ee\u5e38\u7528\uff0c\u8bb0\u5230\u5c31\u662f\u8d5a\u5230\uff09**\n\n## \u5173\u4e8e\u4ee3\u7801\n\n\u56e0\u4e3a\u8c03\u4e86\u86ee\u4e45\uff0c\u6240\u4ee5\u53ef\u80fd\u6709\u70b9\u4e11\u964b\u3002\u800c\u4e14\u5176\u5b9e\u53ef\u4ee5\u5bf9\u4e8e$A$,$B$\uff0cdfs1\u548cdfs2\u5b8c\u5168\u53ef\u4ee5\u5408\u5e76\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e2a\u662f\u5426\u662fB\u7684\u53d8\u91cf\u6765\u5224\u65ad\u6267\u884c\u8bb0\u5f55\u64cd\u4f5c\u8fd8\u662f\u67e5\u627e\u64cd\u4f5c\u5c31\u884c\u4e86\uff0c\u4e5f\u53ef\u4ee5\u53ea\u5efa\u4e00\u4e2a\u56fe\uff08\u7136\u540e\u6211\u8fd9\u4e2a\u61a8\u6279\u6ca1\u60f3\u52305555\uff09\u3002\n\n\u6700\u540e\u6ce8\u610f\u54c8\u5e0c\u503c\u7684\u9009\u62e9\n\n## \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <set>\nusing std::vector;\nusing std::sort;\nusing std::lower_bound;\nusing std::set;\ntypedef long long ll;\nconst int N = 1e5 + 10, base = 1000000021, mod = 999999137;\nstruct edge\n{\n\tint v, next;\n}A[N * 2], B[N * 2];\nint a[N], b[N], ca, cb, n, ans = 99999999, faa[N], fab[N], deg[N];\n\nvoid init()\n{\n\tmemset(a, -1, sizeof a);\n\tmemset(b, -1, sizeof b);\n\tca = cb = 0;\n}\n\nvoid insertA(int u, int v)\n{\n\tA[ca].v = v;\n\tA[ca].next = a[u];\n\ta[u] = ca++;\n}\n\nvoid insertB(int u, int v)\n{\n\tB[cb].v = v;\n\tdeg[u]++;\n\tB[cb].next = b[u];\n\tb[u] = cb++;\n}\n\nll hashA[N], hashB[N], sza[N], szb[N];\nvector<ll> ta[N], sla[N], sra[N], tb[N], slb[N], srb[N];\nll dfsA1(int u, int fa)\n{\n\tta[u].clear(), faa[u] = fa, sza[u] = 1;\n\tll ret = 0;\n\tfor (int i = a[u]; i + 1; i = A[i].next)\n\t{\n\t\tint v = A[i].v;\n\t\tif (v == fa)\n\t\t\tcontinue;\n\t\tta[u].push_back(dfsA1(v, u));\n\t\tsza[u] += sza[v];\n\t}\n\tif (ta[u].empty())\n\t\treturn hashA[u] = 1;\n\t\t\n\tsort(ta[u].begin(), ta[u].end());\n\tfor (int i = 0; i < (int)ta[u].size(); i++)\n\t\tret = (ret * base + ta[u][i]) % mod;\n\treturn hashA[u] = (ret * sza[u]) % mod;\n}\n\nll dfsB1(int u, int fa)\n{\n\ttb[u].clear(), fab[u] = fa, szb[u] = 1;\n\tll ret = 0;\n\tfor (int i = b[u]; i + 1; i = B[i].next)\n\t{\n\t\tint v = B[i].v;\n\t\tif (v == fa)\n\t\t\tcontinue;\n\t\ttb[u].push_back(dfsB1(v, u));\n\t\tszb[u] += szb[v];\n\t}\n\tif (tb[u].empty())\n\t\treturn hashB[u] = 1;\n\n\tsort(tb[u].begin(), tb[u].end()); \n\tfor (int i = 0; i < (int)tb[u].size(); i++)\n\t\tret = (ret * base + tb[u][i]) % mod; \n\treturn hashB[u] = (ret * szb[u]) % mod;\n}\n\nll gA[N], gB[N], pb[N];\nset<ll> vis;\nvoid dfsA2(int u)\n{\n\tif (faa[u] != -1)\n\t{\n\t\tta[u].push_back(gA[u]);\n\t\tsort(ta[u].begin(), ta[u].end());\n\t}\n\tint sze = ta[u].size();\n\tsla[u].resize(sze);\n\tsla[u][0] = ta[u][0];\n\tfor (int i = 1; i < sze; i++)\n\t\tsla[u][i] = (sla[u][i - 1] * base + ta[u][i]) % mod;\n\t\n\tsra[u].resize(sze);\n\tsra[u][sze - 1] = ta[u][sze - 1];\n\tfor (int i = sze - 2; i >= 0; i--)\n\t\tsra[u][i] = (sra[u][i + 1] + ta[u][i] * pb[sze - i - 1]) % mod;\n\t\n\tfor (int i = a[u]; i + 1; i = A[i].next)\n\t{\n\t\tint v = A[i].v;\n\t\tif (v == faa[u])\n\t\t\tcontinue;\t\t\t\n\t\tif (sze == 1)\n\t\t{\n\t\t\tgA[v] = 1;\n\t\t\tdfsA2(v);\n\t\t\tbreak;\n\t\t}\n\t\tint p = lower_bound(ta[u].begin(), ta[u].end(), hashA[v]) - ta[u].begin();\n\t\tgA[v] = 0;\n\t\tif (p + 1 < sze)\n\t\t\tgA[v] = sra[u][p + 1];\n\t\tif (p - 1 >= 0)\n\t\t\tgA[v] = (gA[v] + sla[u][p - 1] \n\t\t\t* pb[sze - 1 - p]) % mod;\n\t\tgA[v] = gA[v] * (n - sza[v]) % mod;\n\t\tdfsA2(v);\n\t\t\n\t} \n\tvis.insert(sla[u][sze - 1] * n % mod);\t\n}\n\nvoid dfsB2(int u)\n{\n\tif (fab[u] != -1)\n\t{\n\t\ttb[u].push_back(gB[u]);\n\t\tsort(tb[u].begin(), tb[u].end());\n\t}\n\tint sze = tb[u].size();\n\tslb[u].resize(sze);\n\tslb[u][0] = tb[u][0];\n\tfor (int i = 1; i < sze; i++)\n\t\tslb[u][i] = (slb[u][i - 1] * base + tb[u][i]) % mod;\n\t\n\tsrb[u].resize(sze);\n\tsrb[u][sze - 1] = tb[u][sze - 1];\n\tfor (int i = sze - 2; i >= 0; i--)\n\t\tsrb[u][i] = (srb[u][i + 1] + tb[u][i] * pb[sze - i - 1]) % mod;\n\t\n\tfor (int i = b[u]; i + 1; i = B[i].next)\n\t{\n\t\tint v = B[i].v;\n\t\tif (v == fab[u])\n\t\t\tcontinue;\t\t\n\t\tif (sze == 1)\n\t\t{\n\t\t\tgB[v] = 1;\n\t\t\tdfsB2(v);\n\t\t\tbreak;\n\t\t}\n\t\tint p = lower_bound(tb[u].begin(), tb[u].end(), hashB[v]) - tb[u].begin();\n\t\tgB[v] = 0;\n\t\tif (p + 1 < sze)\n\t\t\tgB[v] = srb[u][p + 1];\n\t\tif (p - 1 >= 0)\n\t\t\tgB[v] = (gB[v] + slb[u][p - 1] * pb[sze - 1 - p]) % mod;\n\t\tgB[v] = gB[v] * (n - szb[v]) % mod;\n\t\tif (deg[v] == 1 && vis.find(gB[v]) != vis.end())\n\t\t\tans = std::min(ans, v);\t\n\t\tdfsB2(v);\t\n\t} \n}\n\nint main()\n{\n\tinit();\n\tpb[0] = 1;\n    for (int i = 1; i < N; i++)\n\t\tpb[i] = pb[i - 1] * base % mod;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tinsertA(x, y);\n\t\tinsertA(y, x);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tinsertB(x, y);\n\t\tinsertB(y, x);\n\t}\n\tdfsA1(1, -1);\n\tdfsA2(1);\n\tn++;\n\tdfsB1(1, -1);\n\tif(deg[1] == 1 && vis.find(hashB[B[b[1]].v]) != vis.end())\n\t\tans = 1;\n\tdfsB2(1);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1612392634,
        "uid": 137603,
        "name": "zhiyangfan",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4323 \u3010[JSOI2016]\u72ec\u7279\u7684\u6811\u53f6\u3011"
    },
    {
        "content": "\u6811 $\\mathrm{hash}$ + \u6362\u6839 $\\mathrm{DP}$ \u3002\n\n\u5148\u8003\u8651\u4e00\u4e2a $O(n^2)$ \u7684\u505a\u6cd5\u3002\n\n\u5148\u6c42\u51fa\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\uff0c\u6574\u68f5\u6811\u7684 $\\mathrm{hash}$ \u503c\u3002\u53ef\u4ee5\u505a $n$ \u904d $\\mathrm{dfs}$ \u5f97\u5230\u3002\n\n\u7136\u540e\uff0c\u628a $A$ \u7684\u6240\u6709 $n$ \u4e2a $\\mathrm{hash}$ \u503c\u4e22\u5230\u4e00\u4e2a $\\mathrm{map}$ \u91cc\u53bb\uff0c\u7136\u540e\u679a\u4e3e $B$ \u7684\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5224\u65ad\u5220\u6389\u540e\u7684\u54c8\u5e0c\u503c\u662f\u5426\u5728 $\\mathrm{map}$ \u4e2d\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u4e3b\u8981\u74f6\u9888\u5728\u4e8e $O(n^2)$ \u6c42 $\\mathrm{hash}$ \u503c\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\u5f02\u6216\u6ee1\u8db3\u53ef\u51cf\u6027\uff0c\u5f88\u5bb9\u6613\u62b5\u6d88\u6389\u3002\u6240\u4ee5\u6211\u4eec\u8bbe\u54c8\u5e0c\u51fd\u6570 $f_i=\\bigoplus\\limits_{j\\in Son_i}(f_j\\times W+sz_j)$ \u3002\n\n\u5bf9\u4e8e\u6bcf\u68f5\u6811\uff0c\u6211\u4eec\u8bbe $f_i$ \u8868\u793a\u4e0a\u9762\u7684\u54c8\u5e0c\u51fd\u6570\uff0c $h_i$ \u4e3a\u4ee5 $i$ \u4e3a\u6839\u65f6\u6574\u68f5\u6811\u7684 $\\mathrm{hash}$ \u503c\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5148\u4e00\u904d $\\mathrm{dfs}$ \u6c42\u51fa $f$ \uff0c\u518d\u4e00\u904d\u6362\u6839 $\\mathrm{DP}$ \u6c42\u51fa $h$ \u4e86\u3002\n\n\u5177\u4f53\u7684\uff0c$h_i=f_i\\oplus\\Big\\{\\big[h_{fa}\\oplus(f_i\\times W+sz_i)\\big]\\times W+(n-sz_i)\\Big\\}$ \u3002\u7279\u6b8a\u7684\u662f\u5f53 $i$ \u4e3a\u6839\u65f6 $h_i=f_i$ \u3002\n\n\u8fd9\u4e2a\u5f0f\u5b50\u4e0d\u592a\u597d\u89e3\u91ca\uff0c\u5efa\u8bae\u81ea\u5df1\u753b\u56fe\u7406\u89e3\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u5b50\u6c42 $\\mathrm{hash}$ \u503c\u5c31\u964d\u5230\u4e86 $O(n)$ \uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$ \u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ca\u7ec6\u8282\u89c1[\u4ee3\u7801](http://m-sea-blog.com/archives/2693/)\u3002",
        "postTime": 1557231163,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4323 \u3010[JSOI2016]\u72ec\u7279\u7684\u6811\u53f6\u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u597d\u7684**\u6811Hash**\u7684\u9898\u76ee\uff0c\u63d0\u4f9b\u4e00\u79cd\u4e0d\u4e00\u6837\u7684Hash\u65b9\u6cd5\u3002\n\n\u9996\u5148\u65e0\u6839\u6811\u7684**\u540c\u6784**\u5224\u65ad\u4e00\u822c\u7684\u505a\u6cd5\u53ea\u6709\u6811Hash\uff0c\u6240\u4ee5\u4e0d\u4f1a\u7684\u540c\u5b66\u53ef\u4ee5\u505a\u4e86[Luogu P5043 \u3010\u6a21\u677f\u3011\u6811\u540c\u6784\uff08[BJOI2015]\u6811\u7684\u540c\u6784\uff09](https://www.luogu.org/problemnew/show/P5043)\u518d\u6765\u3002\n\n\u9996\u5148\u6211\u4eec\u76f4\u63a5\u8003\u8651\u4e00\u79cd\u6734\u7d20\u7684\u60f3\u6cd5\uff0c\u66b4\u529b\u6c42\u51fa$A$\u6811\u4e2d\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u4e3a\u6839\u65f6\u7684Hash\u503c\n\n\u7136\u540e\u6254\u5230\u4e00\u4e2a```set```\uff08\u4f60\u8981\u518d\u5199\u4e2aHash\u4e5f\u6ca1\u4e8b\uff09\u91cc\uff0c\u518d\u5728$B$\u6811\u4e2d\u679a\u4e3e\u53f6\u5b50\u8282\u70b9\uff0c\u5224\u65ad\u53bb\u6389\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u540e\u7684Hash\u503c\u662f\u5426\u5728```set```\u91cc\u5373\u53ef\u3002\n\n\u53d1\u73b0\u8fd9\u6837\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u74f6\u9888\u5728\u6c42$A$\u6811Hash\u503c\u65f6\u7684$O(n^2)$\uff0c\u90a3\u4e48\u8003\u8651\u4f18\u5316\u3002\n\n\u7531\u4e8e\u6811Hash\u7684\u539f\u7406\u5c31\u662f\u4e0d\u8981\u8ba9\u8282\u70b9\u7f16\u53f7\u53bb\u5f71\u54cdHash\u503c\uff0c\u6240\u4ee5\u53ef\u884c\u7684Hash\u65b9\u5f0f\u4e0d\u6b62\u4e00\u79cd\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u7528**\u5f02\u6216+\u5b50\u6811\u5927\u5c0f**\u7684\u65b9\u5f0f\u7ed3\u5408Hash\u7684\u8fdb\u5236\u89c4\u5219\u6765\u505a\u3002\n\n\u5177\u4f53\u7684\u8bf4\u5c31\u662f\u5b9a\u4e49Hash\u503c$H_i=\\bigoplus_{j\\in son_i}H_j \\times seed+size_j$\uff0c\u5176\u4e2d$\\bigoplus$\u8868\u793a\u5f02\u6216\u548c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5148\u6c42\u51fa\u4ee5\u67d0\u4e2a\u70b9\u4e3a\u6839\u65f6\u7684Hash\u503c\uff0c\u7136\u540e\u5728\u9012\u63a8\u5230\u6bcf\u4e00\u4e2a\u70b9\u4e3a\u6839\u7684\u60c5\u51b5\u5373\u53ef\uff0c\u8fd9\u4e2a\u76f4\u63a5\u7528\u5f02\u6216\u7684\u6027\u8d28\u5f02\u6216\u56de\u53bb\u62b5\u6d88\u5373\u53ef\u3002\n\n\u90a3\u4e48\u95ee\u9898\u89e3\u51b3\uff0c\u590d\u6742\u5ea6\u4e3a$O(n\\log n)$\uff08\u522b\u5fd8\u4e86```set```\u7684\u590d\u6742\u5ea6\uff09\uff0c\u5982\u679c\u7528Hash\u4ee3\u66ff\u7684\u82b1\u662f$O(n)$\u7684\u3002\n\nCODE\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<set>\n#define RI register int\n#define CI const int&\n#define Tp template <typename T>\nusing namespace std;\ntypedef unsigned long long ull;\nconst int N=100005; const ull seed=1e9+7;\nint n; set <ull> s;\nclass FileInputOutput\n{\n    private:\n        static const int S=1<<21;\n        #define tc() (A==B&&(B=(A=Fin)+fread(Fin,1,S,stdin),A==B)?EOF:*A++)\n        char Fin[S],*A,*B;\n    public:\n        Tp inline void read(T& x)\n        {\n            x=0; char ch; while (!isdigit(ch=tc()));\n            while (x=(x<<3)+(x<<1)+(ch&15),isdigit(ch=tc()));\n        }\n        #undef tc\n}F;\ninline ull updata(CI x,CI y)\n{\n    return x*seed+y;\n}\nclass Tree_Hash_Solver\n{\n    private:\n        struct edge\n        {\n            int to,nxt;\n        }e[N<<1]; int head[N],cnt,deg[N],size[N],g[N],x,y;\n    public:\n        int n,f[N]; //g only in subtree,f include all tree\n        inline void add(CI x,CI y)\n        {\n            e[++cnt]=(edge){y,head[x]}; head[x]=cnt; ++deg[x];\n        }\n        inline void init(void)\n        {\n            for (RI i=1;i<n;++i) F.read(x),F.read(y),add(x,y),add(y,x);\n        }\n        #define to e[i].to\n        inline void DFS1(CI now,CI fa)\n        {\n            size[now]=g[now]=1; for (RI i=head[now];i;i=e[i].nxt)\n            if (to!=fa) DFS1(to,now),size[now]+=size[to],g[now]^=updata(g[to],size[to]);\n        }\n        inline void DFS2(CI now,CI fa)\n        {\n            if (!fa) f[now]=g[now]; else f[now]=g[now]^updata(f[fa]^updata(g[now],size[now]),n-size[now]);\n            for (RI i=head[now];i;i=e[i].nxt) if (to!=fa) DFS2(to,now);\n        }\n        #undef to\n        inline bool isleaf(CI now)\n        {\n            return deg[now]==1;\n        }\n        inline bool check(CI now)\n        {\n            return s.count(f[e[head[now]].to]^updata(g[now],1));\n        }\n}A,B;\nint main()\n{\n    //freopen(\"CODE.in\",\"r\",stdin); freopen(\"CODE.out\",\"w\",stdout);\n    RI i; for (F.read(n),A.n=n,A.init(),A.DFS1(1,0),A.DFS2(1,0),i=1;i<=n;++i) s.insert(A.f[i]);\n    for (B.n=n+1,B.init(),i=1;i<=B.n;++i) if (!B.isleaf(i)) { B.DFS1(i,0); B.DFS2(i,0); break; }\n    for (i=1;i<=B.n;++i) if (B.isleaf(i)&&B.check(i)) return printf(\"%d\",i),0; return 0;\n}\n```\n\n",
        "postTime": 1549034628,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4323 \u3010[JSOI2016]\u72ec\u7279\u7684\u6811\u53f6\u3011"
    },
    {
        "content": "# [P4323](https://www.luogu.com.cn/problem/P4323)\n\n## \u524d\u8a00\n\n\u4e4b\u524d\u5728 BDFS \u6811\u54c8\u5e0c\u65f6\u53d1\u73b0\u4e86 UOJ \u7684\u4e00\u7bc7\u6587\u7ae0 [\u4e00\u79cd\u597d\u5199\u4e14\u5361\u4e0d\u6389\u7684\u6811\u54c8\u5e0c](https://peehs-moorhsum.blog.uoj.ac/blog/7891)\uff0c\u73b0\u5728\u7684 [OI-Wiki \u6811\u54c8\u5e0c](https://oi-wiki.org/graph/tree-hash/) \u4e5f\u66f4\u65b0\u4e3a\u4e86\u8fd9\u4e2a\u7b80\u5355\u6613\u5199\u4e14\u6b63\u786e\u6027\u9ad8\u7684\u505a\u6cd5\u3002\n\n\u5177\u4f53\u505a\u6cd5\u662f\u5b9a\u4e49\u968f\u673a\u51fd\u6570\uff0c\u539f\u6587\u7ae0\u91cc\u51fd\u6570\u4e3a\uff1a\n\n```cpp\null G(ull x) {return x*x*x*1237123+19260817;}\null F(ull x) {return G(x&UINT_MAX)+G(x>>31);}\n\n```\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5f88\u7b80\u5355\uff0c\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u7684 $hash$ \u503c $f_u$ \u4e3a\uff1a\n\n$$\nf_u=1+\\sum_{v\\in{son_u}} F(f_v)\n$$\n\n\u8fd9\u4e2a\u505a\u6cd5\u7684\u6700\u8bf1\u4eba\u7684\u4f18\u70b9\uff1a\n\n- \u6811\u5f62 dp \u597d\u8f6c\u79fb\n- \u4ee3\u7801\u91cf\u5c0f\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u542b\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6811 $A$ \u548c\u8fd8\u6709 $n+1$ \u4e2a\u8282\u70b9\u7684\u6811 $B$\u3002\u5176\u4e2d\u6811 $A$ \u662f\u7531\u6811 $B$ \u5220\u9664\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5f97\u5230\u7684\uff0c\u6c42\u6811 $B$ \u4e2d**\u7f16\u53f7\u6700\u5c0f**\u7684\u7b26\u5408\u6761\u4ef6\u7684\u53f6\u5b50\u8282\u70b9\u3002\n\n## Solution\n\n\u7b97\u6cd5\uff1a\u6811\u54c8\u5e0c\u3002\u8bbe $f_u$ \u4e3a\u4ee5 $1$ \u4e3a\u6839\u65f6\u5b50\u6811 $u$ \u7684 $hash$ \u503c\uff0c $g_u$ \u4e3a\u4ee5 $u$ \u4e3a\u6839\u65f6\u6574\u68f5\u6811\u7684 $hash$ \u503c\u3002\n\n\u6839\u636e\u524d\u8a00\u91cc\u7684\u505a\u6cd5\u548c\u6362\u6839 dp \u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$\n\\begin{aligned}\n    f_u&=1+\\sum_{v\\in{son_u}} F(f_v)\\\\\n    g_u&=\n    \\begin{cases}\n        f_1&{u=1}\\\\\n        f_u+F(g_{fa}-F(f_u))&{u\\not=1}\n    \\end{cases}\n\\end{aligned}\n$$\n\n\u5f97\u5230 $f,g$ \u540e\uff0c\u679a\u4e3e\u6811 $B$ \u7684 $n+1$ \u4e2a\u8282\u70b9\uff0c\u82e5\u5ea6\u6570\u4e3a $1$ \u5219\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u6b64\u65f6**\u4ee5\u8fd9\u4e2a\u53f6\u5b50\u552f\u4e00\u8fde\u5411\u7684\u90a3\u4e2a\u8282\u70b9 $x$ \u4e3a\u6839**\uff0c\u5bb9\u6613\u5f97\u5230\u4ee5 $x$ \u4e3a\u6839\u5220\u53bb\u8fd9\u4e2a\u53f6\u5b50\u540e\u7684 $hash$ \u503c\u4e3a $g_x-F(1)$\uff0c\u7136\u540e\u53bb\u6811 $A$ \u7684 $g$ \u4e2d\u5224\u65ad\u662f\u5426\u5b58\u5728\u5373\u53ef\u3002\n\n\u9884\u5904\u7406 $f,g$ \u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u74f6\u9888\u5728\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\ntypedef unsigned long long ull;\ninline ull G(const ull &x) {return x*x*x*1237123+19260817;}\ninline ull F(const ull &x) {return G(x&UINT_MAX)+G(x>>31);}\nstruct tree\n{\n    vector<int> e[N];\n    ull f[N], g[N];\n    void init(int n)\n    {\n        for (int i = 1, u, v; i < n; i++)\n        {\n            cin >> u >> v;\n            e[u].emplace_back(v);\n            e[v].emplace_back(u);\n        }\n        dp(1, 0);\n    }\n    ull dfs(int u, int fa)\n    {\n        f[u] = 1;\n        for (const int &v : e[u])\n            if (v != fa)\n                f[u] += F(dfs(v, u));\n        return f[u];\n    }\n    void dp(int u, int fa)\n    {\n        g[u] = (u == 1) ? dfs(1, 0) : (f[u] + F(g[fa] - F(f[u])));\n        for (const int &v : e[u])\n            if (v != fa)\n                dp(v, u);\n    }\n    \n} A, B;\nint n;\nunordered_map<ull,bool> vis;\nsigned main()\n{\n    cin >> n;\n    A.init(n + 0);\n    B.init(n + 1);\n    for (int i = 1; i <= n; i++) vis[A.g[i]];\n    for (int i = 1; i <= n + 1; i++)\n        if (B.e[i].size() == 1 && vis.count(B.g[*B.e[i].begin()] - F(1)))\n            return cout << i, 0;\n    return 0;\n}\n```",
        "postTime": 1678542553,
        "uid": 760799,
        "name": "MarchKid_J0e",
        "ccfLevel": 0,
        "title": "P4323 [JSOI2016]\u72ec\u7279\u7684\u6811\u53f6 \u9898\u89e3"
    },
    {
        "content": "\u91c7\u7528\u5982\u4e0b\u6280\u672f\u5bf9\u6811\u8fdb\u884chash: \n$$\nf(x) = 1 + \\sum_{y \\in son(x)} f(y) \\times prime(y)\n$$\n\u8fd9\u6837\u5b50\u78b0\u649e\u6982\u7387\u6781\u4f4e , hash\u503c\u76f8\u540c\u7684\u6811\u88ab\u8ba4\u4e3a\u540c\u6784\u3002  \n\u8fd0\u7528\u6811\u5f62DP + \u6362\u6839\u601d\u60f3\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u6c42\u51fa\u65e0\u6839\u6811\u4e2d\u4ee5\u6240\u6709\u70b9\u4e3a\u6839\u65f6\u5404\u81ea\u7684hash\u503c\u3002    \n\u5728\u6811 $B$ \u4e2d\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9 , \u68c0\u67e5\u53bb\u6389\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u4e4b\u540e\u662f\u5426\u80fd\u591f\u4f7f\u4e24\u68f5\u6811\u540c\u6784\u3002\u5177\u4f53\u5730 , \u5728\u7ed9 $A$ \u8282\u70b9\u52a0\u4e0a\u4e00\u4e2a\u53f6\u5b50\u4e4b\u540e , \u6240\u6709\u5176\u4f59\u8282\u70b9\u4e3a\u6839\u7684\u6811\u7684hash\u503c\u5747\u53d1\u751f\u53d8\u5316 , \u6211\u4eec\u5728\u679a\u4e3e\u53bb\u6389\u6811 $B$ \u7684\u67d0\u4e2a\u53f6\u5b50\u65f6\u53ef\u4ee5\u5f88\u5feb\u5730\u6c42\u51fa\u4e0e\u8be5\u53f6\u5b50\u76f8\u90bb\u7684\u70b9\u7684hash\u503c\u7684\u53d8\u5316 , \u5982\u679c\u53bb\u6389\u7684\u6b63\u662f\u591a\u51fa\u6765\u7684\u53f6\u5b50 , \u5b83\u5e94\u5f53\u5728\u6811 $A$ \u4e2d\u51fa\u73b0\u8fc7\u4e00\u6b21\u3002  \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <map>\n\nusing namespace std;\n\nconst int N = 100010;\n\nconst int Mod = 998244353;\ninline int Inc(int a, int b) { return (a += b) >= Mod ? a - Mod : a; }\ninline int Dec(int a, int b) { return (a -= b) < 0 ? a + Mod : a; }\ninline int Mul(int a, int b) { return 1ll * a * b % Mod; }\n\nint Prime[N], vp[15 * N], top;\nvoid seive(int n) {\n\tfor(int i = 2; top < n; ++i) {\n\t\tif(!vp[i]) Prime[++top] = i;\n\t\tfor(int j = 1; j <= top && i * Prime[j] <= 14 * N; ++j) {\n\t\t\tvp[i * Prime[j]] = 1;\t\t\t\n\t\t\tif(!(i % Prime[j])) break;\n\t\t}\n\t}\n}\n\nint head[N], ver[N << 1], nex[N << 1], deg[N], tot;\ninline void graphInit() {\n\tmemset(head, -1, sizeof(head));\n\ttot = 0;\n}\ninline void addedge(int u, int v) {\n\tver[tot] = v; nex[tot] = head[u]; head[u] = tot++;\t\n}\nmap<int, bool> hsh;\nint f[N], siz[N], n;\nvoid dfs1(int cur, int pre) {\n\tsiz[cur] = f[cur] = 1;\n\tfor(int i = head[cur]; ~i; i = nex[i])\n\t\tif(ver[i] != pre) {\n\t\t\tdfs1(ver[i], cur);\n\t\t\tsiz[cur] += siz[ver[i]];\n\t\t\tf[cur] = Inc(f[cur], Mul(f[ver[i]], Prime[siz[ver[i]]]));\n\t\t}\n}\n\nvoid dfs2(int cur, int pre) {\n\tfor(int i = head[cur]; ~i; i = nex[i])\n\t\tif(ver[i] != pre) {\n\t\t\tf[ver[i]] = Inc(f[ver[i]], Mul(Dec(f[cur], Mul(f[ver[i]], Prime[siz[ver[i]]])), Prime[n - siz[ver[i]]]));\n\t\t\tdfs2(ver[i], cur);\n\t\t}\n}\nint main() {\n\tint u, v;\n\tscanf(\"%d\", &n);\n\tseive(n + 1);\n\tgraphInit();\n\tfor(int i = 1; i < n; ++i) {\n\t\tscanf(\"%d %d\", &u, &v);\n\t\taddedge(u, v);\n\t\taddedge(v, u);\n\t}\n\tdfs1(1, 0);\n\tdfs2(1, 0);\n\tfor(int i = 1; i <= n; ++i) hsh.insert(pair<int, bool>(f[i], true));\n\t++n;\n\tgraphInit();\n\tfor(int i = 1; i < n; ++i) {\n\t\tscanf(\"%d %d\", &u, &v);\n\t\taddedge(u, v);\n\t\taddedge(v, u);\n\t\t++deg[u]; ++deg[v];\n\t}\n\tdfs1(1, 0);\n\tdfs2(1, 0);\n\tfor(int i = 1; i <= n; ++i) {\n\t\tif(deg[i] == 1 && hsh.find(f[ver[head[i]]] - 2) != hsh.end()) {\n\t\t\tprintf(\"%d\\n\", i);\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597804066,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4323 \u3010[JSOI2016]\u72ec\u7279\u7684\u6811\u53f6\u3011"
    }
]