[
    {
        "content": "### \u5927\u4f6c\u4eec\u7684\u9898\u89e3\u771f\u662f\u7b80\u6d01\uff0c\u7136\u800c\u6211\u8fd9\u79cd\u849f\u84bb\u5e76\u6ca1\u6709\u770b\u61c2\uff0c\u7136\u540e\u81ea\u5df1\u624b\u73a9\u4e00\u4e0b~~\u597d\u50cf\u633a\u7b80\u5355~~\uff1f\n\n-----------------------------------------\u534e\u4e3d\u5206\u5272\u7ebf--------------------------------------\n\n\u4f60\u5728\u624b\u73a9\u7684\u65f6\u5019\u53ef\u4ee5\u770b\u89c1\u51e0\u4e2a\u6027\u8d28\uff1a\n\n\u2460\uff1a\u6bcf\u4e00\u884c\u6700\u591a\u7ffb\u8f6c\u4e00\u6b21\uff0c\u591a\u4e8e\u4e00\u6b21\u5176\u5b9e\u6ca1\u6709\u610f\u4e49\u3002\n\n\u2461\uff1a\u6bcf\u4e00\u5217\u7684\u4ea4\u6362\u53ea\u4e0d\u8fc7\u6539\u53d8\u4e86\u6bcf\u4e00\u5217\u7684\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u5047\u8bbe\u8fd9\u4e2a\u9b54\u677f\u53ea\u53c8\u4e00\u79cd\u64cd\u4f5c\uff0c\u5373\u4ee4\u67d0\u51e0\u5217\u4ea4\u6362\uff0c\u90a3\u4e48\u6211\u4eec\u603b\u53ef\u4ee5\u627e\u5230\u4e00\u79cd\u6392\u5217\u987a\u5e8f\uff0c\u4f7f\u5f97\u5b83\u548c\u76ee\u6807\u9b54\u677f\u76f8\u540c\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u5173\u5fc3\u539f\u9b54\u677f\u67d0\u4e00\u5217\u548c\u76ee\u6807\u9b54\u677f\u7684\u4efb\u610f\u4e00\u5217\u5339\u914d\u5c31\u53ef\u4ee5\u4e86\uff0c\u6211\u4eec\u901a\u8fc7\u8f6c\u6362\u64cd\u4f5c\uff0c\u4f7f\u5f97\u8fd9\u4e00\u5217\u548c\u76ee\u6807\u9b54\u677f\u7684\u968f\u4fbf\u4e00\u5217\uff08\u5927\u5bb6\u597d\u50cf\u90fd\u9009\u7684\u7b2c\u4e00\u5217\uff09\uff0c\u5339\u914d\u7684\u540c\u65f6\uff0c\u8ba9\u5176\u4ed6\u5217\u4e5f\u8ddf\u7740\u8f6c\u6362\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u76ee\u6807\u9b54\u677f\uff0c\u9664\u4e86\u7b2c\u4e00\u5217\u4ee5\u5916\u7684\u6240\u6709\uff0c\u662f\u5426\u548c\u5f53\u524d\u9b54\u677f\u4e00\u6837\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#define mem(a, i) memset(a, i, sizeof(a))\n#define rep(i, a, b) for(int i = a; i <= b ; i++)\nconst int maxn = 128;\nusing namespace std;\nint n, m, k, f;\nint map[maxn][maxn], tar[maxn][maxn], temp[maxn][maxn];\n//\u8f6c\u6362 i \u884c\u64cd\u4f5c\u3002 \nvoid converse(int i) { rep(j, 1, m)\tmap[i][j] = !map[i][j]; }\n// \u5224\u65ad\u76ee\u6807\u9b54\u677f\u9664\u4e86\u7b2c\u4e00\u5217\u4ee5\u5916\u65f6\u5019\u90fd\u548c\u5f53\u524d\u9b54\u677f\u5339\u914d\u3002 \nbool Check(int choose) {\n\tbool vis[maxn];\n\tmem(vis, 0);\n\trep(jt, 2, m) {\n\t\trep(jp, 1, m) {\n\t\t\tif(jp == choose)\tcontinue;\n\t\t\tbool pd = 0;\n\t\t\trep(i, 1, n)\n\t\t\t\tif(map[i][jp] != tar[i][jt]) {\n\t\t\t\t\tpd = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(!pd && !vis[jt])\t{\n\t\t\t\tvis[jt] = 1;\n\t\t\t\tbreak;\n\t\t\t}\t\t\n\t\t}\n\t}\n\trep(i, 2, m)\tif(!vis[i])\treturn false;\n\treturn true;\n}\n//\u5c06\u539f\u9b54\u677f\u7684 cur \u5217\uff0c \u5f3a\u5236\u548c\u76ee\u6807\u9b54\u677f\u7684\u7b2c 1 \u5217 \u5339\u914d\u3002\n//\u4f34\u968f\u7740\uff0c\u4e5f\u628a\u539f\u9b54\u677f\u7684\u5176\u4ed6\u5217\u4e5f\u7ffb\u8f6c\u3002 \nvoid Search(int cur) {\n\trep(i, 1, n)\n\t\tif(map[i][cur] != tar[i][1]) //\u4e0d\u540c\u5c31\u7ffb\u8f6c \n\t\t\tconverse(i);\n\treturn ;\n}\n//\u590d\u539f \nvoid Getback() {\n\trep(i, 1, n)\n\t\trep(j, 1, m)\n\t\t\tmap[i][j] = temp[i][j];\n\treturn ;\n}\nint main() {\n\tscanf(\"%d\", &k);\n\trep(p, 1 ,k) {\n\t\tmem(map, 0);\n\t\tmem(tar, 0);\n\t\tmem(temp, 0);\n\t\tf = 0;\n\t\tscanf(\"%d %d\", &n, &m);\n\t\t//\u8bfb\u5165\u539f\u9b54\u677f \n\t\trep(i, 1, n)\n\t\t\trep(j, 1, m)\n\t\t\t\tscanf(\"%d\", &map[i][j]),\n\t\t\t\ttemp[i][j] = map[i][j];\n\t\t//\u8bfb\u5165\u76ee\u6807\u9b54\u677f \n\t\trep(i, 1, n)\n\t\t\trep(j, 1, m)\n\t\t\t\tscanf(\"%d\", &tar[i][j]);\n\t\t//\u679a\u4e3e\u539f\u9b54\u677f\u7684 i \u5217\uff0c\u4f7f\u5176\u548c\u76ee\u6807\u9b54\u677f\u5339\u914d\u3002 \n\t\trep(i, 1, m) {\n\t\t\tSearch(i); \n\t\t\tif(Check(i)) {\n\t\t\t\tf = 1;\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tGetback();\t//\u8bb0\u5f97\u590d\u539f \n\t\t}\n\t\tif(!f)\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540986816,
        "uid": 51180,
        "name": "Ellen7ions",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1275 \u3010\u9b54\u677f\u3011"
    },
    {
        "content": "#### \u5176\u5b9e\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u7279\u522b\u5173\u952e\u7684\u601d\u8def\u3002\n\n# \u62ff\u7740\u4f60\u8981\u786e\u5b9a\u7684\u9b54\u677f\u4e2d\u7684\u5217\u53bb\u679a\u4e3e\u8981\u5339\u914d\u7684\u9b54\u677f\u7684\u6bcf\u4e00\u5217\u3002\n\n#### \u56e0\u4e3a\u5217\u662f\u53ef\u4ee5\u4ea4\u6362\u7684\u3002\n\n#### \u800c\u4e14\u8fd8\u6709\u6700\u5173\u952e\u7684\u4e00\u4e2a\u70b9\u3002\n\n# \u5982\u679c\u4f60\u786e\u5b9a\u4e86\u5176\u4e2d\u6709\u4e00\u5217\u5bf9\u5e94\u4e86\uff0c\u90a3\u4e48\u4f60\u7684\u9b54\u677f\u5176\u5b9e\u5c31\u5df2\u7ecf\u56fa\u5b9a\u4e86\u3002\u884c\u5c31\u4e0d\u80fd\u53d8\u6362\u4e86\u3002\n\n#### \u4e0a\u8fb9\u8fd9\u4e2a\u5173\u952e\u70b9\u7684\u786e\u4e0d\u597d\u60f3\uff0c\u4f46\u662f\u60f3\u901a\u4e86\u8fd9\u4e2a\u9898\u4e5f\u5c31\u597d\u89e3\u51b3\u4e86\u3002\n\n### \u7136\u540e\u5c31\u53ef\u4ee5\u7528map\u8fdb\u884c\u5bf9\u5e94\u5f00\u59cb\u67e5\u8be2\u3002\n\n### \u5982\u679c\u624b\u91cc\u7684\u9b54\u677f\u7684\u6570\u548c\u8981\u786e\u5b9a\u4e86\u4e00\u4e00\u5bf9\u5e94\u4e86\u5c31YES\u4e86\u3002\n\n### \u7136\u540e\u4f60\u624b\u91cc\u7684\u9b54\u677f\u548c\u9700\u8981\u5bf9\u5e94\u7684\u9b54\u677f\u5bf9\u5e94\u6210\u529f\u5c31\u53ef\u4ee5\u8f93\u51faYES\u4e86\u3002\n\n### \u8981\u8bb0\u7740\u5728\u6bcf\u6b21\u679a\u4e3e\u7684\u65f6\u5019clear\u4e00\u6b21\u3002\n\n## \u5177\u4f53\u770b\u4e0b\u9762\u4ee3\u7801\u3002\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cctype>\n#include<map> \n#define rg register\n#define int long long \nusing namespace std;\ninline int read(){\n\trg int s=0,f=0;\n\trg char ch=getchar();\n\twhile(!isdigit(ch)) f|=(ch=='-'),ch=getchar();\n\twhile(isdigit(ch)) s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n\treturn f?-s:s;\n}\nint n,m,k;\nconst int MAX=115;\nint a1[MAX][MAX],a2[MAX][MAX],vis[MAX];\nstring S;\nmap<string,int>hsh;\nvoid init(){\n\tn=read(),m=read();\n\tfor(rg int i=1;i<=n;++i){\n\t\tfor(rg int j=1;j<=m;++j){\n\t\t\ta1[i][j]=read();\n\t\t}\n\t}\n\tfor(rg int i=1;i<=n;++i){\n\t\tfor(rg int j=1;j<=m;++j){\n\t\t\ta2[i][j]=read();\n\t\t}\n\t}\n}\nsigned main(){\n\tk=read();\n\t++k;\n\twhile(--k){\n\t\tbool flag=0;\n\t\tinit();//\u521d\u59cb\u5316\u3002\n\t\tfor(rg int i=1;i<=m;++i){\n\t\t\thsh.clear();//\u6bcf\u6b21\u90fd\u8981\u6e05\u7a7a\u3002\n\t\t\tfor(rg int j=1;j<=n;++j){\n\t\t\t\tvis[j]=(a1[j][1]==a2[j][i])?0:1;\n\t\t\t}//\u679a\u4e3e\u662f\u5426\u80fd\u591f\u5bf9\u5e94\u3002\n\t\t\tfor(rg int j=1;j<=n;++j){\n\t\t\t\tfor(rg int k=1;k<=m;++k){\n\t\t\t\t\ta1[j][k]^=vis[j];\n\t\t\t\t}\n\t\t\t}//\u5bf9\u5e94\u5c31\u53ef\u4ee5^1\uff08\u4ee3\u8868\u7ffb\u8f6c\u8fc7\u4e86\uff09\u3002\n\t\t\tfor(rg int j=1;j<=m;++j){\n\t\t\t\tstring s=S;\n\t\t\t\tfor(rg int k=1;k<=n;++k){\n\t\t\t\t\ts+=(char)(a1[k][j]+'0');\n\t\t\t\t}\n\t\t\t\t++hsh[s];\n\t\t\t}//\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u3002\n\t\t\tfor(rg int j=1;j<=n;++j){\n\t\t\t\tfor(rg int k=1;k<=m;++k){\n\t\t\t\t\ta1[j][k]^=vis[j];\n\t\t\t\t}\n\t\t\t}//\u8fd8\u539f\n\t\t\tfor(rg int j=1;j<=m;++j){\n\t\t\t\tstring s=S;\n\t\t\t\tfor(rg int k=1;k<=n;++k){\n\t\t\t\t\ts+=(char)(a2[k][j]+'0');\n\t\t\t\t}\n\t\t\t\tif(!hsh[s]) break;//\u8fd9\u91cc\u6ca1\u88ab\u6539\u8fc7\u5c31\u8df3\u8fc7\u3002\n\t\t\t\t--hsh[s];\n\t\t\t\tif(j==m) flag=1;\n\t\t\t}\n\t\t}\n\t\tif(flag) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```\n## \u5b8c\u7f8e\u3002",
        "postTime": 1547118182,
        "uid": 121619,
        "name": "Prev1ous",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1275 \u3010\u9b54\u677f\u3011"
    },
    {
        "content": "\n### \u8865\u8865\u7f00\u7f00\uff0c\u5f04\u4e86\u4e00\u5929\u624d\u5b8c\u6210\u8fd9\u9053\u9898\u3002 32ms \n###\t\u9996\u5148\u60f3\u5230\u7684\u7a81\u7834\u53e3\u662f\uff1a\u4ea4\u6362\u5217\u7684\u79fb\u52a8\u5e76\u4e0d\u4f1a\u6539\u53d8\u67d0\u4e00\u884c\u76841\u7684\u6570\u91cf\u4e4b\u548c(0\u4e5f\u4e00\u6837),\u6539\u53d8\u884c\u53ef\u4ee5\u4ea4\u63620\u548c1\u7684\u6570\u91cf\u3002\u56e0\u6b64\u53ef\u4ee5\u5148\u7edf\u8ba10\u548c1\u7684\u6570\u91cf\uff0c\u5982\u679c\u5bf9\u5e94\u884c\u4e0a\u76841\u7684\u6570\u91cf\u4e24\u5757\u677f\u4e0d\u540c\u4e14\u548c\u4e0d\u7b49\u4e8e\u884c\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u5fc5\u5b9a\u65e0\u6cd5\u4e92\u76f8\u8f6c\u5316\u3002\n###\t\u63a5\u4e0b\u6765\u8003\u8651\uff0c\u5982\u679c\u4e24\u79cd\u72b6\u6001\u76840\u548c1\u7684\u4e2a\u6570\u7b26\u5408\u4e0a\u8ff0\u6761\u4ef6\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u884c\uff0c\u6211\u6539\u53d8A\u9b54\u677f\u7edf\u4e00\u5230B\u9b54\u677f(\u5982\u679cA+B\u76841\u7684\u4e2a\u6570\u7b49\u4e8e\u884c\u957f)\u548c\u6539\u53d8B\u9b54\u677f\u7edf\u4e00\u5230A\u9b54\u677f\u6216\u8005\u6539\u53d8A\u3001B(\u5982\u679cA\u3001B\u72b6\u6001\u76f8\u7b49) \u7edf\u4e00\u5230\u53e6\u4e00\u79cd\u72b6\u6001\uff0c\u662f\u5426\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\u5462\uff1f \n###\t\u7ed3\u8bba\u662f\u4e0d\u4f1a\u7684\u3002\u8fd9\u6837\u5b50\u60f3\uff0c\u5047\u8bbe\u6211\u5df2\u7ecf\u64cd\u4f5c\u5f97\u5230\u4e86\u76f8\u540c\u7684\u677f\uff0c\u90a3\u4e48\u6211\u5bf9\u8be5\u884c\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u5f97\u5230\u7684\u5c31\u662f\u5728\u53e6\u4e00\u79cd\u72b6\u6001\u4e0b\u7684\u7edf\u4e00\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e1\u7684\u603b\u6570\u7b49\u4e8e\u884c\u957f\u4e4b\u548c\u7684\u9b54\u677f\uff0c\u4efb\u610f\u6539\u53d8\u4e00\u8005\uff0c\u5c31\u5b8c\u6210\u4e86\u6240\u6709\u7684\u884c\u64cd\u4f5c\u3002\n###\t\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5339\u914d\u5217\uff0c\u5982\u679c\u4efb\u610f\u7684\u5217\u53ef\u4ee5\u4e24\u4e24\u914d\u5bf9\uff0c\u90a3\u4e48\u5c31\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25(\u5bf9\u4e8e\u884c\u7684\u64cd\u4f5c\u5df2\u7ecf\u5b8c\u6210)\u3002\n###\t\u4ee5\u4e0a\u90fd\u662f\u57fa\u4e8e\u8d2a\u5fc3\uff0c\u53ef\u4ee5\u5f88\u66b4\u529b\u5730\u505a\u51fa\u6765\u3002 \n###\t\u4f46\u662f\u8fd9\u6837\u505a\u4f1a\u6709\u4e09\u4e2a\u70b9WA\uff0c\u5bf9\u4e8e1\u7684\u4e2a\u6570\u76f8\u7b49\uff0c\u4e14\u7b49\u4e8e\u4e8c\u5206\u4e4b\u4e00\u884c\u957f\u7684\u6a21\u677f\uff0c\u6211\u4eec\u4e0d\u80fd\u786e\u5b9a\u7528\u54ea\u4e00\u79cd\u5f62\u5f0f\uff0c\u5728\u8fd9\u91cc\uff0c\u6539\u53d8\u72b6\u6001\u4f1a\u5f71\u54cd\u80fd\u5426\u5230\u8fbe\u6700\u7ec8\u7ed3\u679c\u3002\n###\t\u56e0\u800c\u5bf9\u8fd9\u51e0\u884c\uff0c\u6211\u4eec\u9700\u8981\u679a\u4e3e\u4e24\u79cd\u72b6\u6001\u3002\u5bf9\u4e8e\u666e\u901a\u7684\u884c\uff0c\u76f4\u63a5\u786e\u5b9a\u4e0b\u6765\u5373\u53ef\u3002\n###\t\u7136\u800c\u66b4\u529b\u679a\u4e3e\u4f1a\u8d85\u65f6\uff0c\u56e0\u800c\u9700\u8981\u5728\u534a\u8def\u4e0a\u5224\u65ad\u526a\u679d\uff0c\u5373\u5728\u4e8c\u5206\u4e4b\u4e00\u884c\u957f\u7684\u884c\u5206\u51fa\u4e24\u7c7b\u72b6\u6001\u65f6\u5bf9\u5148\u524d\u7684\u884c\u8fdb\u884c\u5339\u914d\u3002\n###\t\u7531\u4e8e\u6211\u7684\u4ee3\u7801\u521a\u5f00\u65f6\u6ca1\u6709\u8003\u8651\u7b49\u4e8e\u4e8c\u5206\u4e4b\u4e00\u884c\u957f\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u662f\u4fee\u6539\u800c\u6210\u7684\uff0c\u4ee3\u7801\u5f88\u4e11\uff0c\u8fd8\u6709\u53ef\u4ee5\u5408\u5e76\u3001\u6539\u8fdb\u7684\u5730\u65b9\u3002 \n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nconst int size = 105;\nint bd1[size][size], bd2[size][size], n1[size], n2[size], nx, ny;\n\nvoid turn(int i) {\n    for(int j = 1; j <= ny; j++)\n        bd1[i][j] ^= 1;\n}\n\nbool same(int i, int j) {\n    bool flag = true;\n    for(int k = 1; k <= nx; k++)\n        if(bd1[k][i] != bd2[k][j]) {\n            flag = false;\n            break;\n        }\n    return flag;\n}\n\nbool match() {\n    int match[size];\n    memset(match, 0, sizeof(match));\n    for(int i = 1; i <= ny; i++) {\n        bool fl = false;\n        for(int j = 1; j <= ny; j++) {\n            if(!match[j] && same(i, j)) {\n                match[j] = i;\n                fl = true;\n                break;\n            }\n        }\n        if(!fl) return false;\n    }\n    return true;\n}\n\nbool sm(int i, int j, int cur) {\n    bool flag = true;\n    for(int k = 1; k <= cur; k++)\n        if(bd1[k][i] != bd2[k][j]) {\n            flag = false;\n            break;\n        }\n    return flag;\n}\n\nbool check(int cur) {\n    int match[size];\n    memset(match, 0, sizeof(match));\n    for(int i = 1; i <= ny; i++) {\n        bool fl = false;\n        for(int j = 1; j <= ny; j++) {\n            if(!match[j] && sm(i, j, cur)) {\n                match[j] = i;\n                fl = true;\n                break;\n            }\n        }\n        if(!fl) return false;\n    }\n    return true;\n}\n\nbool flg;\nvoid dfs(int cur) {\n    if(flg == true) return;\n    if(cur == nx+1) {\n        flg = match();\n        return;\t\n    }\n    dfs(cur+1);\n    if(n1[cur] == ny / 2) {\n        turn(cur);\n        if(check(cur))\n        \tdfs(cur+1);\n    }\n}\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while(t--) {\n        scanf(\"%d %d\", &nx, &ny);\n        memset(n1, 0, sizeof(n1));\n        memset(n2, 0, sizeof(n2));\n        for(int i = 1; i <= nx; i++)\n            for(int j = 1; j <= ny; j++) {\n                scanf(\"%d\", &bd1[i][j]);\n                n1[i] += bd1[i][j];\n            }\n        for(int i = 1; i <= nx; i++)\n            for(int j = 1; j <= ny; j++) {\n                scanf(\"%d\", &bd2[i][j]);\n                n2[i] += bd2[i][j];\n            }\n        bool flag = true;\n        for(int i = 1; i <= nx; i++)\n            if(n1[i] + n2[i] == ny)\n                turn(i);\n            else if(n1[i] != n2[i]) {\n                flag = false;\n                break;\n            }\n        if(!flag) {\n            printf(\"NO\\n\");\n        } else if(match()){\n            printf(\"YES\\n\");\n        } else if(!(ny % 2)){\n            flg = false;\n            dfs(1);\n            if(flg) printf(\"YES\\n\");\n            else printf(\"NO\\n\");\n        } else {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n```cpp",
        "postTime": 1543157852,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1275 \u3010\u9b54\u677f\u3011"
    },
    {
        "content": "## \u5199\u5728\u524d\u9762\n\u8fd9\u9898\u4e0d\u7b97\u592a\u96be, \u770b\u770b\u4efb\u610f\u4e00\u7bc7\u9898\u89e3\u90fd\u80fd\u770b\u61c2\u7684. \u6211\u7684\u505a\u6cd5\u6bd4\u8f83\u6bd2\u7624, \u4e3b\u8981\u662f~~\u95f2\u7684\u6ca1\u4e8b~~\u4e3a\u4e86\u63d0\u4f9b\u53e6\u5916\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5\u800c\u5199\u4e0b\u8fd9\u7bc7\u4f7f\u7528~~\u5047~~\u4f4d\u8fd0\u7b97\u4f18\u5316~~\u8fd8\u8d8a\u4f18\u5316\u8d8a\u6162~~\u7684\u9898\u89e3. \u4ee3\u7801\u5947\u957f, \u5e38\u6570\u5de8\u5927, STL\u6781\u6162, \u5bf9\u4e8e\u8fd9\u9053\u9898~~\u5982\u6b64\u6c34~~\u7684\u6570\u636e\u6765\u8bf4\u610f\u4e49\u4e0d\u5927, \u8fd8\u51e0\u4e4e\u964d\u4f4e\u4e0d\u4e86\u590d\u6742\u5ea6. \u89c9\u5f97\u6211\u7684\u4ee3\u7801\u4e0d\u582a\u5165\u76ee\u7684\u8bdd(\u600e\u4e48\u4f1a\u5462)\u8bf7\u79fb\u6b65\u5176\u4ed6dalao\u7684\u9898\u89e3.\n\n## \u601d\u8def\n### \u57fa\u672c\u601d\u8def\n\u7531\u4e8e\u9898\u4e2d\u8981\u6c42\u884c\u53ef\u4ee5\u7ffb\u8f6c, \u5217\u53ef\u4ee5\u4ea4\u6362, \u4e0d\u7b26\u5e73\u65f6\u7684\u4e60\u60ef, \u6240\u4ee5\u53ef\u4ee5\u5bf9\u68cb\u76d8\u8fdb\u884c\u8f6c\u7f6e, \u5373\u628a`board[i][j]`\u5b58\u6210`board[j][i]`, \u65b9\u4fbf\u4e0b\u4e00\u6b65\u64cd\u4f5c. \u4ee5\u4e0b\u6240\u8bf4\u7684\u884c\u5217\u90fd\u662f\u6307\u8f6c\u7f6e\u540e\u7684\u884c\u5217.\n\n\u6b63\u5982\u5176\u4ed6\u51e0\u7bc7\u9898\u89e3\u6240\u8bf4\u7684, \u770b\u770b\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u5c31\u50cf\u662f\u66b4\u529b\u679a\u4e3e. \u56e0\u4e3a\u4e0d\u80fd\u76f4\u63a5\u679a\u4e3e\u8981\u7ffb\u8f6c\u54ea\u4e9b\u5217(\u590d\u6742\u5ea6$O(2^n)$\u76f4\u63a5\u7206\u70b8), \u6240\u4ee5\u5c31\u8981\u7f29\u5c0f\u679a\u4e3e\u8303\u56f4. \u7531\u4e8e\u672b\u72b6\u6001\u6bcf\u4e00\u884c\u90fd\u9700\u8981\u5bf9\u5e94\u4e00\u884c\u521d\u72b6\u6001\u7ffb\u8f6c\u540e\u7684\u7ed3\u679c, \u56e0\u6b64, \u53ea\u9700\u8ba9\u6bcf\u4e00\u884c\u4f5c\u4e3a\u672b\u72b6\u6001\u7b2c\u4e00\u884c\u7ffb\u8f6c\u524d\u7684\u6837\u5b50\u5c31\u53ef\u4ee5\u4e86, \u5f97\u5230$n$\u79cd\u7ffb\u8f6c\u65b9\u5f0f. \u5bf9\u4e8e\u6bcf\u4e00\u79cd\u7ffb\u8f6c\u65b9\u5f0f, \u53ea\u9700\u518d\u5224\u65ad\u521d\u6001\u7ffb\u8f6c\u540e\u80fd\u5426\u4e0e\u672b\u6001\u6bcf\u4e00\u884c\u90fd\u6709\u5bf9\u5e94\u5173\u7cfb\u5c31\u884c\u4e86. \n\n#### \u590d\u6742\u5ea6\u5206\u6790\n```\nk\u4e2a\u6570\u636e\u70b9 (k)\n\t\u8bfb\u5165 (nm)\n    \u679a\u4e3e\u7ffb\u8f6c\u65b9\u6848 (n)\n    \t\u7ffb\u8f6c (nm)\n    \t\u68c0\u9a8c (m^2)\n```\n\u603b\u590d\u6742\u5ea6\u4e3a$O(knm(n+m))$. \u663e\u7136\u5df2\u7ecf\u5f88\u4e0d\u9519\u4e86, \u5b8c\u5168\u53ef\u4ee5A\u6389\n\n### \u4e71\u641e(\u5047)\u4f18\u5316\n\u56de\u8fc7\u5934\u6765\u518d\u770b\u8fd9\u9053\u9898, \u677f\u5b50\u4e0a\u6bcf\u4e00\u4e2a\u706f\u6ce1\u53ea\u6709\u5f00\u548c\u5173\u4e24\u79cd\u72b6\u6001, \u800c\u4e14\u6bcf\u4e00\u884c\u7684\u706f\u6ce1\u4e2a\u6570\u4e5f\u5f88\u5c11, \u662f\u4e0d\u662f\u60f3\u5230\u4e86~~\u72b6\u538bdp~~\u4f4d\u8fd0\u7b97\u4f18\u5316\u5462? \u5bf9\u4e8e\u7ffb\u8f6c\u64cd\u4f5c\u800c\u8a00, \u6c42\u53cd~\u8fd0\u7b97\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u95ee\u9898(\u7136\u9e45\u7528\u4e0d\u5230); \u8981\u6c42\u521d\u672b\u6001\u5230\u5e95\u7ffb\u8f6c\u4e86\u54ea\u4e9b\u5217, \u5f02\u6216^\u8fd0\u7b97\u53ef\u4ee5\u5feb\u901f\u6c42\u89e3; \u5df2\u77e5\u7ffb\u8f6c\u7684\u5217, \u6c42\u7ffb\u8f6c\u540e\u7684\u72b6\u6001\u540c\u6837\u662f\u7528\u5f02\u6216. \u793a\u4f8b\u5982\u4e0b:\n```\na, e = \u521d\u6001\u67d0\u884c, b = \u672b\u6001\u67d0\u884c, c = \u7ffb\u8f6c\u4e86\u54ea\u4e9b\u5217, d = \u521d\u6001\u7ffb\u8f6c\u540e\u7684\u67d0\u884c\n\na         = 0 1 0 1\nb         = 1 1 0 0\nc = a ^ b = 1 0 0 1\ne         = 0 0 1 0\nd = e ^ c = 1 0 1 1\n```\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u628a\u6bcf\u4e00\u884c\u7528\u4e8c\u8fdb\u5236\u8868\u793a, \u90a3\u4e48\u95ee\u9898\u53c8\u6765\u4e86: \u6570\u636e\u8303\u56f4\u5230\u4e86~~\u5de8\u5927\u7684~~$100$, `unsigned long long`\u768464\u4f4d\u5df2\u7ecf\u4e0d\u591f\u7528\u4e86, \u8feb\u4e0d\u5f97\u5df2\u53ea\u80fd\u6c42\u52a9STL\u7684... $\\color{red}bitset!!!$\n\u8f7b\u677e\u5904\u7406100\u4f4d\u7684\u4f4d\u8fd0\u7b97\u65e0\u538b\u529b(\u7136\u9e45\u8fd8\u662f\u5f88\u6162\u9e2d). So, \u57fa\u4e8e\u4ee5\u4e0a, \u4ee3\u7801\u5c31\u8981\u51fa\u6765\u4e86...\n\n\u522b\u6025, \u5148\u6765\u770b\u770b\u590d\u6742\u5ea6.\n\n#### \u590d\u6742\u5ea6\u5206\u6790\n```\nk\u4e2a\u6570\u636e\u70b9 (k)\n\t\u8bfb\u5165 (nm)\n    \u679a\u4e3e\u7ffb\u8f6c\u65b9\u6848 (n)\n    \t\u7ffb\u8f6c (m)  \u5047\u88c5bitmap\u662fO(1)\n    \t\u68c0\u9a8c (m^2)\n```\n\u603b\u590d\u6742\u5ea6\u4e3a$O(knm^2)$. ~~\u5e76\u6ca1\u6709\u964d\u4f4e~~\n\n## \u5927\u62ec\u53f7\u6362\u884c, \u4e0b\u6807\u4ece\u96f6\u5f00\u59cb\u7684\u4ee3\u7801\n#### \u4f18\u5316\u795e\u5668: \u5438\u6c27\n#### \u8fd8\u662f\u6709\u4e00\u4e9b\u6280\u5de7\u503c\u5f97\u6ce8\u610f, \u6bd4\u5982\u6570\u636e\u8bfb\u5165\u90e8\u5206\n```cpp\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <bitset>\n\nusing namespace std;\n\nint k, n, m;\nchar buf[105][105];\nbitset<101> book;\n\nint main(void)\n{\n    cin >> k;\n\n    while (k--)\n    {\n        bool okay = false;\n\n        cin >> n >> m;\n        bitset<101> colume[101], tarcolume[101];   // STL\u5927\u6cd5\u597d\n        bitset<101> mask;   // \u8bbe\u7f6e\u63a9\u7801, \u65b9\u4fbf\u63a5\u4e0b\u6765\u8fdb\u884c\u5bf9\u5217\u662f\u5426\u53ef\u9009\u7684\u5224\u65ad\n        for (int i = 0; i < n; i++)\n            mask.set(i);\n\n        // \u8bfb\u5165\u521d\u59cb\u68cb\u76d8\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < m; j++)\n                // \u8f6c\u7f6e\u68cb\u76d8, \u4fbf\u4e8e\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\n                scanf(\" %c\", &buf[j][i]);   // scanf\u683c\u5f0f\u5b57\u7b26\u4e32\u524d\u52a0\u7a7a\u683c, \u5f3a\u5236\u626b\u63cf\u524d\u5bfc\u7a7a\u767d\n        // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u5316\u4e3abitmap\u7c7b\u578b\n        for (int i = 0; i < m; i++)\n            for (int j = 0; j < n; j++)\n                if (buf[i][j] == '0')\n                    colume[i].reset(j);\n                else\n                    colume[i].set(j);\n        // \u8bfb\u5165\u76ee\u6807\u68cb\u76d8\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < m; j++)\n                scanf(\" %c\", &buf[j][i]);\n        for (int i = 0; i < m; i++)\n            for (int j = 0; j < n; j++)\n                if (buf[i][j] == '0')\n                    tarcolume[i].reset(j);\n                else\n                    tarcolume[i].set(j);\n\n        for (int x = 0; x < m; x++)\n        {\n            // \u5bf9\u4e8e\u6bcf\u4e00\u884c, \u90fd\u8bd5\u8bd5\u5b83\u80fd\u4e0d\u80fd\u505a\u7b2c0\u884c\n                // \u8fd9\u91cc\u8bf4\u7684\u884c, \u662f\u6309\u7167\u8f6c\u7f6e\u540e\u7684\u68cb\u76d8\u8bf4\u7684, \u5171\u6709m\u884c\n            book.reset();\n            bitset<101> flip = colume[x] ^ tarcolume[0];    // \u6c42\u51fa\u54ea\u4e9b\u5217\u88ab\u7ffb\u8f6c\u4e86\n\n            for (int i = 0; i < m; i++)\n                // \u7ffb\u8f6c\u521d\u6001\u7684\u6bcf\u4e00\u5217, \u4e00\u4f1a\u8fd8\u8981\u8bb0\u5f97\u7ffb\u8f6c\u56de\u53bb\n                colume[i] ^= flip;\n\n            // \u51c6\u5907\u5de5\u4f5c\u505a\u597d\u4e86, \u63a5\u4e0b\u6765\u53ea\u9700\u5224\u65ad\u521d\u59cb\u884c\u4e0e\u76ee\u6807\u884c\u4e4b\u95f4\u53ef\u5426\u4e00\u4e00\u5bf9\u5e94\u5c31\u884c\u4e86\n            bool matched;\n            for (int i = 0; i < m; i++)\n            {\n                matched = false;\n                for (int j = 0; j < m; j++)\n                    if (book[j])\n                        continue;\n                    else\n                        if ((colume[i] & mask) == (tarcolume[j] & mask))    // & mask\u6765\u5ffd\u7565\u65e0\u6709\u6548\u6570\u636e\u7684\u90a3\u51e0\u4f4d\n                        {\n                            book.set(j);\n                            matched = true;\n                            break;\n                        }\n                if (matched == false)\n                    goto bad_attempt;\n            }\n            okay = true;\n            bad_attempt:\n\n            for (int i = 0; i < m; i++)\n                colume[i] ^= flip;\n\n            if (okay)\n                break;\n        }\n\n        if (okay)\n            cout << \"YES\" << endl;\n        else\n            cout << \"NO\" << endl;\n    }\n\n    return 0;\n}\n```\n\n## Before the End\n\u4ee3\u7801\u7684\u8fa3\u4e2a`goto`\u8fd8\u8bf7dalao\u4e0d\u8981\u55b7, \u68c0\u9a8c\u90e8\u5206\u5176\u5b9e\u53ef\u4ee5\u4f18\u5316\u6210\u76f4\u63a5\u5224\u65ad\u4e24\u5217\u5dee\u5f02\u662f\u5426\u4e3a\u8981\u7ffb\u8f6c\u7684\u5217, \u53ef\u4ee5\u7701\u53bb\u9884\u5148\u7684\u7ffb\u8f6c\u548c\u4e4b\u540e\u7684\u8fd8\u539f. \u5176\u4ed6\u6709\u8bef\u7684\u5730\u65b9\u548c\u4e0d\u8db3\u8fd8\u8bf7\u5927\u5bb6\u6307\u51fa.",
        "postTime": 1538495636,
        "uid": 48672,
        "name": "leylee",
        "ccfLevel": 6,
        "title": "[P1275] \u641e\u4e8b\u7684\u4f4d\u8fd0\u7b97\u4f18\u5316\u8d8a\u4f18\u5316\u8d8a\u6162\u7684\u9898\u89e3"
    },
    {
        "content": "\u603b\u7684\u601d\u60f3\u662f\u679a\u4e3e\u73b0\u5728\u72b6\u6001\u4e2d\u7684\u6bcf\u4e00\u884c\u4f5c\u4e3a\u7b2c\u4e00\u884c\uff0c\u5728\u6839\u636e\u6b64\u884c\u786e\u5b9a\u8981\u4e0d\u8981\u5bf9\u6a2a\u6392\u8fdb\u884c\u64cd\u4f5c\uff0c\u64cd\u4f5c\u540e\u518d\u786e\u5b9a\u7ad6\u884c\u4ea4\u6362\u4f4d\u7f6e\u540e\u80fd\u5426\u8fbe\u5230\u76ee\u6807\u72b6\u6001\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<iomanip>\n#include<climits>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,m,k;\nint mb[101][101],now[101][101];\nbool lm[101],yp[101];\nint search(int fir){\n  int i,j,t,bj=0;\n  for(i=1;i<=n;i++){//\u5982\u679c\u548c\u7b2c\u4e00\u884c\u4e0d\u4e00\u6837\uff0c\u5219\u6539\u53d8\n    if(now[i][fir]!=mb[i][1])lm[i]=1;//lm:\u8bb0\u5f55\u6a2a\u884c\u662f\u5426\u53d1\u751f\u6539\u53d8\n    else lm[i]=0;\n    }\n  yp[fir]=1;//\u7b2c\u4e00\u884c\u5df2\u7ecf\u548cfir\u914d\u5bf9\n  //if(fir==5)for(i=1;i<=n;i++)cout<<lm[i]<<endl;\n  for(i=2;i<=m;i++){//\u679a\u4e3e\u76ee\u6807\u72b6\u6001\n    bj=0;\n    for(j=1;j<=m;j++){//\u679a\u4e3e\u5f53\u524d\u72b6\u6001\n      if(yp[j]==0)//\u5982\u679c\u5f53\u524d\u884c\u6ca1\u6709\u88ab\u5360\u7528\n        for(t=1;t<=n;t++){\n           if((lm[t]==1&&now[t][j]!=mb[t][i])||(lm[t]==0&&now[t][j]==mb[t][i]))\n            { \n            if(t==n){bj=1;yp[j]=1;}}\n           else {break;}\n         }\n      if(bj==1)break;\n      if(j==m)return 0;\n    }\n  }\n  return 1;\n}\nint main()\n{\n  freopen(\"lx.in\",\"r\",stdin);\n  freopen(\"lx.out\",\"w\",stdout);\n  int i,j,t,na;\n  scanf(\"%d\",&k);\n  for(t=1;t<=k;t++){\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++)\n      for(j=1;j<=m;j++)scanf(\"%d\",&now[i][j]);\n    for(i=1;i<=n;i++)\n      for(j=1;j<=m;j++)scanf(\"%d\",&mb[i][j]);\n    for(i=1;i<=m;i++){\n         memset(yp,0,sizeof(yp));\n         na=search(i);\n        if(na==1){printf(\"YES\\n\");break;}\n        if(na==0&&i==m){printf(\"NO\\n\");break;}\n        }\n  }\n  return 0;\n}\n```",
        "postTime": 1485695071,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1275 \u3010\u9b54\u677f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u672c\u8d28\u4e0a\u662f\u641c\u7d22\n\n\u7b2c\u4e00\u6b65:\u5728\u6700\u5916\u5c42\u5faa\u73af\u679a\u4e3e\u521d\u59cb\u7684\u6bcf\u4e00\u5217\u5f53\u505a\u76ee\u6807\u72b6\u6001\u7684\u7b2c\u4e00\u5217\n\n\u7b2c\u4e8c\u6b65:\u5728\u6bcf\u5c42\u5faa\u73af\u4e2d\u6bd4\u8f83\u5f53\u524d\u8fd9\u5217\u548c\u76ee\u6807\u72b6\u6001\u7684\u7b2c\u4e00\u5217\u7684\u540c\u884c\u7684\u6570\uff0c\u5982\u679c\u4e0d\u76f8\u540c\u5219\u628a\u521d\u59cb\u7684\u90a3\u4e00\u884c\u7ffb\u8f6c\uff08\u524d\u9762\u5148\u8bb0\u5f55\uff0c\u540e\u9762\u8bb0\u5f97\u8fd8\u539f\uff09\n\n\u7b2c\u4e09\u6b65:\u770b\u770b\u5269\u4e0b\u7684\u5217\u662f\u5426\u53ef\u4ee5\u4e00\u4e00\u5bf9\u5e94\uff0c\u5982\u679c\u53ef\u4ee5\u5c31yes\uff0c\u4e0d\u53ef\u4ee5\u5c31\u7ee7\u7eed\u679a\u4e3e\u3002\n\n\uff08\u8fd8\u6709\u4e00\u4e2a\u4f18\u5316\uff0c\u5c31\u662f\u5728\u6700\u5f00\u59cb\u8bb0\u5f55\u521d\u59cb\u72b6\u6001\u6bcf\u4e00\u884c\u4e00\u7684\u4e2a\u6570\uff0c\u7136\u540e\u8f93\u5165\u76ee\u6807\u72b6\u6001\u65f6\u770b\u770b\u540c\u4e00\u884c\u521d\u59cb\u4e2d\u4e00\u7684\u4e2a\u6570\u662f\u5426\u4e0e\u76ee\u6807\u90a3\u884c\u7684\u4e00\u4e2a\u6570\u6216\u96f6\u4e2a\u6570\u76f8\u540c\uff0c\u56e0\u4e3a\u540c\u610f\u884c\u53ea\u53ef\u4ee5\u7ffb\u8f6c\uff0c\u4e2a\u6570\u662f\u56fa\u5b9a\u7684\uff0c\u5982\u679c1\u6216\u7ffb\u8f6c0\u540e\u76841\u5bf9\u4e0d\u4e0a\uff0c\u6839\u672c\u65e0\u6cd5\u5b9e\u73b0\u6240\u4ee5\u76f4\u63a5\u5c31no\u4e86\uff09\n",
        "postTime": 1502112431,
        "uid": 35107,
        "name": "0\u901d\u8005\u5982\u65af\u592b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1275 \u3010\u9b54\u677f\u3011"
    },
    {
        "content": "- $\\texttt{P1275}$ \u6bd4\u8f83\u6709\u610f\u601d\u7684\u6a21\u62df\uff08\u8003\u8bd5\uff09\u9898\u3002/kk\n\n### \u9898\u89e3\n\n\u679a\u4e3e\u6bcf\u4e00\u5217\uff0c\u4e0e\u7b2c1\u5217\u4ea4\u6362\u3002\n\n\u4e4b\u540e\u548c\u76ee\u6807\u9b54\u677f\u6bd4\u5bf9\uff0c\u5982\u679c\u7b2c\u4e00\u5217\u4e0a\u7684\u6570\u5b57\u4e0d\u540c\uff0c\u90a3\u4e48\u90a3\u4e00\u884c\u6539\u53d8\uff08\u6bcf\u4e00\u884c\u6700\u591a\u6539\u53d8\u4e00\u6b21\uff0c\u56e0\u4e3a\u6539\u53d8\u4e24\u6b21\u548c\u6ca1\u6539\u53d8\u662f\u4e00\u6837\u7684\uff09\n\n```cpp\ninline void change_line(int j)\n{\n    for(int i=1; i<=m; i++) a[j][i] ^= 1; \n}\n\n```\n\n\u4e4b\u540e\u5bf9\u5df2\u7ecf\u88ab\u53d8\u6362\u8fc7\u7684\u77e9\u9635\uff0c\u679a\u4e3e\u7b2c 2~m \u5217\u4e0e\u76ee\u6807\u77e9\u9635\u7684 2~m \u5217\u5206\u522b\u6bd4\u8f83\u3002\u5982\u679c\u4e00\u6837\uff0c\u5c31\u4ea4\u6362\u3002\n\n### Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nconst int N = 100 + 7;\n\nint t, n, m;\nint a[N][N], b[N][N], c[N][N], f[N];\n\ninline void inp()\n{\n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++)\n            scanf(\"%d\", &c[i][j]);\n    \n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++)\n            scanf(\"%d\", &b[i][j]);\n}\n\ninline void swap(int &x, int &y)\n{\n    int t = x;\n    x = y;\n    y = t;\n}\n\ninline void change(int f, int l)\n{\n    for(int i=1; i<=n; i++) swap(a[i][f], a[i][l]);\n}\n\ninline void change_line(int j)\n{\n    for(int i=1; i<=m; i++) a[j][i] ^= 1; \n}\n\ninline void copy()\n{\n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++)\n            a[i][j] = c[i][j];\n}\n\ninline int doit(int x, int y)\n{\n    for(int i=1; i<=n; i++)\n    {\n        if(b[i][x] != a[i][y]) return 0;\n    }\n    return 1;\n}\n\ninline void P()\n{\n    for(int i=1; i<=n; i++)\n    {\n        for(int j=1; j<=m; j++)\n            printf(\"%d \", a[i][j]);\n        puts(\"\");\n    }\n    puts(\"\");\n}\n\nint main()\n{\n    freopen(\"panel.in\", \"r\", stdin);\n    freopen(\"panel.out\", \"w\", stdout);\n\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d%d\", &n, &m);\n        inp(); // \u8bfb\u5165\n        int ttt = 0;\n        for(int i=1; i<=m; i++) // \u679a\u4e3e\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u548c\u7b2c\u4e00\u4e2a\u4ea4\u6362\u7684\n        {    \n            copy();\n            memset(f, 0, sizeof(f));\n            change(1, i); // \u4ea4\u6362\n            for(int j=1; j<=n; j++)\n            {\n                if(a[j][1] != b[j][1]) change_line(j); // \u6362\u5230\u4e0e\u76ee\u6807\u4e00\u6837\n            }\n            //P();\n            //if(n == 4 && m == 3) printf(\"%d\\n\", doit(2, 3));\n            int eee = 1;\n            for(int j=2; j<=m; j++) // \u679a\u4e3e\u8981\u4ea4\u6362\u7684\u7b2c\u51e0\u4e2a\n            {\n                int mmm = 0;\n                for(int t=2; t<=m; t++) // \u5bfb\u627e\u53ef\u4ee5\u4e0e\u4ed6\u4ea4\u6362\u7684\n                {\n                    int flag = doit(j, t);\n                    //ttt++;\n                    if(flag && !f[j]) change(j, t), f[j] = 1, mmm = 1;\n                }\n                if(mmm == 0) {eee = 0; break;}\n                //if(!ttt) {puts(\"NO\"); eee = 1; break;}\n            }\n            if(eee) {puts(\"YES\"); ttt = 1; break;}\n        }\n        if(!ttt) {puts(\"NO\");}\n    }\n    return 0;\n}\n\n```\n\n\u7b2c\u4e00\u6b21WA\u5728\u4e86\u7b2c\u4e00\u4e2a\uff0c\u539f\u56e0\u662f `doit` \u51fd\u6570 `a`, `b` \u6570\u7ec4\u5199\u53cd\u4e86\uff0c\u545c\u545c\u545c\u3002\n\n$in$:\n```\n3\n4 3\n0 0 1 \n0 0 0 \n1 1 0 \n1 1 1 \n1 1 0 \n1 1 1 \n0 1 1 \n1 1 1 \n10 10\n1 1 0 1 1 0 0 1 0 0 \n1 1 1 1 0 1 0 0 0 1 \n0 0 1 1 1 1 0 1 1 0 \n1 0 0 1 1 0 1 0 1 1 \n1 1 0 1 1 1 1 1 0 1 \n0 0 0 0 0 0 0 0 1 0 \n0 1 1 0 1 1 1 0 1 1 \n1 1 1 1 0 1 1 0 0 0 \n1 1 0 1 0 1 1 1 0 0 \n0 0 1 0 0 1 0 0 1 0 \n1 0 0 0 0 1 0 1 1 1 \n0 0 1 0 1 0 0 1 0 1 \n0 1 1 1 0 1 0 1 0 1 \n0 0 1 0 1 1 1 1 1 0 \n1 1 0 0 1 1 1 1 1 1 \n1 1 0 1 1 1 1 1 1 1 \n1 1 1 1 1 0 1 1 0 0 \n0 0 1 0 0 0 1 1 0 1 \n1 1 0 0 1 1 0 0 1 1 \n0 1 1 1 0 0 0 0 0 0 \n7 8\n0 1 1 1 1 1 0 1 \n1 1 1 1 0 0 1 0 \n1 1 1 0 1 1 1 1 \n1 1 1 1 1 1 1 1 \n0 1 0 0 1 0 1 1 \n1 1 0 1 1 1 1 1 \n1 0 1 0 1 1 1 1 \n0 0 0 0 0 0 1 1 \n1 0 1 0 0 1 0 0 \n0 0 0 1 0 0 0 0 \n1 1 1 1 1 1 1 1 \n0 1 1 0 0 1 0 1 \n1 1 1 1 0 1 1 1 \n1 0 1 0 1 1 1 1 \n\n```\n\n$out$:\n```\nNO\nYES\nYES\n```",
        "postTime": 1593767061,
        "uid": 107253,
        "name": "Water_Cows",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1275 \u3010\u9b54\u677f\u3011"
    },
    {
        "content": "[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P1275)\u7684\u601d\u8def\u603b\u4f53\u6bd4\u8f83\u660e\u786e\u3002 \n\n-----------------\n\n### \u601d\u8def\n\n-----------\n\n\u9996\u5148\uff0c\u4ecb\u7ecd\u4e00\u4e2a `change\u200b` \u51fd\u6570\u3002\n\n\u8fd9\u9053\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c2\u8868\u8ff0\u4e3a\uff1a\n\n- \u4efb\u9009\u4e24\u5217\uff0c\u4ea4\u6362\u5176\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5199\u4e00\u4e2a\u51fd\u6570\u7528\u4e8e\u5b8c\u6210\u8fd9\u4e00\u4e2a\u64cd\u4f5c\u3002\n\n\u5047\u8bbe\u8981\u4ea4\u6362 $x$ \uff0c $y$ \u4e24\u5217\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u5faa\u73af\u5373\u53ef\u5b9e\u73b0\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nvoid change(int x,int y){\n    for(int i=1;i<=n;i++){\n        swap(a[i][x],a[i][y]);\n    }\n}\n```\n\n\u5f53\u7136\uff0c\u5728\u6211\u81ea\u5df1\u7684\u4ee3\u7801\u4e2d\uff0c\u76f4\u63a5\u628a\u8fd9\u51e0\u6bb5\u5185\u5d4c\u4e3b\u51fd\u6570\u4e86\uff0c\u4f46\u5176\u5b9e\u7528\u4e86\u4e24\u6b21\uff0c\u5199\u4e2a\u51fd\u6570\u4f1a\u66f4\u7b80\u6d01\u3002\n\n-------------\n\n\u63a5\u7740\uff0c\u5c31\u662f\u4e00\u4e2a `check\u200b` \u51fd\u6570\uff0c\u7528\u4e8e\u6bd4\u8f83\u4ea4\u6362\u540e\u7684 $x$ \u5217\u4e0e\u76ee\u6807\u7684 $y$ \u5217\u7684\u5143\u7d20\u662f\u5426\u5339\u914d\u3002\u4e0d\u52a0\u8d58\u8ff0\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nbool check(int x,int y){\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i][x]!=b[i][y]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n```\n\n-------------\n\n\u81f3\u4e8e\u7b2c\u4e00\u9879\u64cd\u4f5c\uff1a\n\n- \u4efb\u9009\u4e00\u884c\uff0c\u6539\u53d8\u8be5\u884c\u4e2d\u6240\u6709\u706f\u6ce1\u7684\u72b6\u6001\uff0c\u5373\u4eae\u7684\u53d8\u6697\u3001\u6697\u7684\u53d8\u4eae\u3002\n\n\u6211\u4eec\u5206\u6790\u53ef\u4ee5\u77e5\u9053\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\u6765\u8bf4\uff0c\u6700\u591a\u53ea\u4f1a\u8fdb\u884c\u4e00\u6b21\u8fd9\u79cd\u64cd\u4f5c\u3002\u5982\u679c\u8d85\u8fc7\u4e00\u6b21\uff0c\u8fdb\u884c\u4e86 $n$ \u6b21\u8fd9\u4e00\u79cd\u64cd\u4f5c\uff0c\u5c31\u76f8\u5f53\u4e8e\u8fdb\u884c\u4e86 $n\\%2$ \u6b21\u64cd\u4f5c\uff0c\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u4e86\uff0c\u4ee3\u7801\u5f88\u77ed\uff0c\u76f4\u63a5\u5185\u5d4c\u5373\u53ef\u3002\n\n-----------\n\n\u603b\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u7b2c\u4e00\u5217\u4e0e\u6bcf\u4e00\u5217\u4ea4\u6362\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u5c06\u53d8\u6362\u540e\u7684\u9b54\u677f\u4e0e\u76ee\u6807\u7684\u9b54\u677f\u8fdb\u884c\u5bf9\u6bd4\uff0c\u53ea\u8981\u5bf9\u6bd4\u7b2c\u4e00\u5217\u7684\u5143\u7d20\uff0c\u5982\u679c\u4e0d\u540c\uff0c\u90a3\u4e48\u5c31\u5c06\u8fd9\u4e00\u884c\u5168\u90e8\u8fdb\u884c\u7b2c\u4e00\u9879\u64cd\u4f5c\u3002\n\n\u6700\u540e\uff0c\u5bf9\u53d8\u6362\u540e\u7684\u9b54\u677f\uff0c\u679a\u4e3e\u7b2c $2$~$m$ \u5217\u4e0e\u76ee\u6807\u77e9\u9635\u7684 $2$~$m$ \u5217\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u662f\u4e00\u6837\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e00\u79cd\u4ea4\u6362\u65b9\u5f0f\u662f\u53ef\u884c\u7684\u3002\n\n-----------------\n\n### \u4ee3\u7801\n\n\u603b\u4f53\u6765\u8bb2\uff0c\u8fd9\u4e00\u9053\u9898\u7684\u601d\u8def\u6bd4\u8f83~~\u7b80\u5355~~\uff0c\u5bb9\u6613\u7406\u89e3\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u770b\u4ee3\u7801\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fsyjmao5.png)",
        "postTime": 1613028886,
        "uid": 169574,
        "name": "Enucai",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1275 \u3010\u9b54\u677f\u3011"
    },
    {
        "content": "\u4e24\u5217\u4ea4\u6362\uff0c\u53ef\u4ee5\u53d8\u4e3a\u539f\u6a21\u677f\u53d8\u5316\u540e\u7684\u6a21\u677f\u7684\u4e00\u5217\u548c\u76ee\u6807\u6a21\u677f\u7684\u4e00\u5217\u4e00\u4e00\u5bf9\u5e94\u3002\u8fd9\u6837\u53ea\u589e\u52a0\u6211\u4eec\u5224\u65ad\u7684\u96be\u5ea6\uff0c\u51cf\u5c11\u641c\u7d22\u7684\u590d\u6742\u5ea6\u3002\n\u884c\u53d8\u5316\uff0c\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53ea\u8003\u8651\u9009\u6216\u4e0d\u9009\u3002\u56e0\u4e3a\u5217\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5bf9\u4e00\u5217\u641c\u7d22\uff0c\u5c06\u539f\u6a21\u677f\u7684\u4e00\u5217\uff0c\u5339\u914d\u76ee\u6807\u6a21\u677f\u7684\u6bcf\u4e00\u5217\u3002\n```\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N = 110;\nint map[N][N],tarmap[N][N],n,m; \nbool is[N];\nvoid change(int map[]){\n\tfor(int i = 1;i<=m;i++){\n\t\tmap[i]^=1;\n\t}\n}\nbool check(int map[][N],int tarmap[][N],int j,int k){\n\tfor(int i = 1;i<=n;i++){\n\t\tif(map[i][j]!=tarmap[i][k]) return false;\n\t}\n\treturn true;\n}\nvoid p(){\n\tfor(int i = 1;i<=n;i++){\n\t\tfor(int j = 1;j<=m;j++){\n\t\t\tcout<<map[i][j]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t}\n\tcout<<endl;\n}\nbool dfs(){\n\tfor(int i = 1;i<=m;i++){//\u539f\u6a21\u677f\u7b2c\u4e00\u5217\u5339\u914d\u76ee\u6807\u6a21\u677f\u7b2ci\u5217\n\t\tfor(int j = 1;j<=n;j++){\n\t\t\tif(map[j][1]!=tarmap[j][i]) change(map[j]);\n\t\t}\n\t\tfor(int j = 1;j<=m;j++){//\u5224\u65ad\u4efb\u610f\u4e24\u5217\u662f\u5426\u5339\u914d\u3002 \n\t\t\tbool flag = 0;\n\t\t\tfor(int k = 1;k<=m;k++){\n\t\t\t\tif(is[k]==false){\n\t\t\t\t\tflag = check(map,tarmap,j,k);\n\t\t\t\t\tif(flag==1){\n\t\t\t\t\t\tis[k] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag == 0){//\u5339\u914d\u5931\u8d25 \n\t\t\t\tmemset(is,0,sizeof is);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(j==m){\n\t\t\t\tmemset(is,0,sizeof is);\n\t\t\t\treturn true; \n\t\t\t} \n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tcin>>n>>m;\n\t\tfor(int i = 1;i<=n;i++){\n\t\t\tfor(int j = 1;j<=m;j++){\n\t\t\t\tcin>>map[i][j];\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1;i<=n;i++){\n\t\t\tfor(int j = 1;j<=m;j++){\n\t\t\t\tcin>>tarmap[i][j];\n\t\t\t}\n\t\t}\n\t\tif(dfs())cout<<\"YES\"<<endl;\n\t\telse cout<<\"NO\"<<endl; \n\t\t\n\t}\n}\n\n```\n",
        "postTime": 1597802985,
        "uid": 245756,
        "name": "\u5927\u6210\u62f3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1275 \u3010\u9b54\u677f\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e24\u4e2a\u7531 $01$ \u7ec4\u6210\u7684\u77e9\u9635 $A, B$\uff0c\u5206\u522b\u4e3a\u6a21\u677f\u77e9\u9635\u548c\u76ee\u6807\u77e9\u9635\u3002\u7ed9\u5b9a\u4e24\u79cd\u53d8\u6362\uff1a\n\n 1. \u53d6\u53cd\u53d8\u6362\u3002\u5373\u5c06\u7b2c $a$ \u884c\u5168\u90e8\u53d6\u53cd\u3002\n \n 2. \u4ea4\u6362\u53d8\u6362\u3002\u5373\u5c06 $a, b$ \u4e24\u5217\u4ea4\u6362\u3002\n \n\u8be2\u95ee\u6a21\u677f\u77e9\u9635\u662f\u5426\u53ef\u4ee5\u8f6c\u6362\u4e3a\u76ee\u6807\u77e9\u9635\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u672c\u9898\u6709\u4ee5\u4e0b\u7684\u6027\u8d28\uff1a\n\n 1. \u5bf9\u4e8e\u67d0\u4e00\u884c\uff0c\u6700\u591a\u53ea\u80fd\u7528\u4e00\u6b21\u53bb\u53cd\u53d8\u6362\u3002\u56e0\u4e3a\u4e24\u6b21\u53d6\u53cd\u53d8\u6362\u76f8\u5f53\u4e8e\u6ca1\u53d8\u3002\n \n 2. \u5bf9\u4e8e\u67d0\u4e00\u5217\uff0c\u5982\u679c\u5b83\u4e0e\u76ee\u6807\u77e9\u9635\u4e2d\u7684\u4e00\u5217\u5b8c\u5168\u76f8\u540c\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u77e9\u9635\u4e0d\u80fd\u7ee7\u7eed\u8fdb\u884c**\u53d6\u53cd**\u53d8\u6362\u4e86\u3002\n \n\u6709\u4e86\u4e0a\u9762\u4e24\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u6784\u9020\u65b9\u6848\uff1a\n\n\u9996\u5148\u9009\u53d6\u6a21\u677f\u77e9\u9635\u4e2d\u7684\u4e00\u5217\u548c\u76ee\u6807\u77e9\u9635\u4e2d\u7684\u4e00\u5217\uff0c\u901a\u8fc7\u53d6\u53cd\u53d8\u6362\u4f7f\u5f97\u8fd9\u4e24\u5217\u76f8\u540c\u3002\u63a5\u4e0b\u6765\u5c31\u4e0d\u80fd\u8fdb\u884c\u53d6\u53cd\u53d8\u6362\u4e86\u3002\n\n\u7136\u540e\u901a\u8fc7\u8c03\u6574\u5217\u7684\u987a\u5e8f\uff0c\u4f7f\u5f97\u6a21\u677f\u77e9\u9635\u4e0e\u76ee\u6807\u77e9\u9635\u76f8\u540c\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u76f4\u63a5\u9009\u53d6\u6a21\u677f\u77e9\u9635\u7684\u7b2c $1$ \u5217\u548c\u76ee\u6807\u77e9\u9635\u7684\u7b2c $i$ \u5217\uff08$i \\in [1, m]$\uff09\uff0c\u4f7f\u5f97\u8fd9\u4e24\u5217\u76f8\u540c\u3002\u7136\u540e\u679a\u4e3e\u6a21\u677f\u77e9\u9635\u7684\u7b2c $j$ \u5217\u548c\u76ee\u6807\u77e9\u9635\u7684 $k$ \u5217\uff0c\uff08$j, k \\in [1, m]$\uff09\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u4efb\u610f $j$\uff0c\u90fd\u6709\u552f\u4e00\u7684 $k$ \u4e0e\u4ed6\u5bf9\u5e94\uff08\u5373\u4e24\u5217\u76f8\u7b49\uff09\uff0c\u5b8c\u6210\u5339\u914d\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(Tn^3)$\u3002\uff08$T$ \u4e3a\u6570\u636e\u7ec4\u6570\uff09\u3002\n\n\u53e6\u5916\u8fd8\u6709\u4f7f\u7528 bitset \u4e4b\u7c7b\u7684\u6280\u5de7\uff0c\u5728\u6b64\u4e0d\u52a0\u8d58\u8ff0\u3002\n\n## \u4ee3\u7801\u793a\u4f8b\n\n\u8fd9\u662f\u4e0d\u4f7f\u7528 bitset \u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstring>\n#include <vector>\n#include <cstdio>\n\nusing namespace std;\n\nconst int N = 110;\nint g[N][N], t[N][N];\nvector<int> path; // \u8bb0\u5f55\u4e0a\u6b21\u53d6\u53cd\u7684\u884c\uff0c\u4fbf\u4e8e\u8fd8\u539f\nint n, m, T;\n\nvoid change(int k) { // \u53d6\u53cd\u64cd\u4f5c\n\tfor (int i = 1; i <= m; i ++ )\n\t\tg[k][i] ^= 1;\n}\nbool equal(int a, int b) { // \u5224\u65ad\u4e24\u5217\u662f\u5426\u76f8\u7b49\n\tfor (int i = 1; i <= n; i ++ )\n\t\tif (g[i][a] != t[i][b]) return false;\n\treturn true;\n}\nbool solve(int k) {\n\tif (path.size()) for (auto i : path) change(i); // \u8fd8\u539f\n\tpath.clear(); bool st[N] = {0};\n    // \u901a\u8fc7\u53d6\u53cd\u4f7f\u5f97\u6a21\u677f\u77e9\u9635\u7b2c 1 \u5217\u548c\u76ee\u6807\u77e9\u9635\u7b2c k \u5217\u76f8\u540c\u3002\n\tfor (int i = 1; i <= n; i ++ )\n\t\tif (g[i][1] != t[i][k])\n\t\t\tchange(i), path.emplace_back(i);\n\t\n\t// \u627e\u5230\u4e00\u79cd\u5217\u7684\u987a\u5e8f\uff0c\u4f7f\u5f97\u4e8c\u8005\u53ef\u4ee5\u5b8c\u5168\u5339\u914d\u3002\n\tst[k] = true;\n\tfor (int i = 2; i <= m; i ++ ) {\n\t\tbool flag = false;\n\t\tfor (int j = 1; j <= m; j ++ ) {\n\t\t\tif (st[j]) continue;\n\t\t\tif (equal(i, j)) {\n\t\t\t\tflag = st[j] = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!flag) return false; // \u5c0f\u526a\u679d\n\t}\n\treturn true;\n}\nint main() {\n\tscanf(\"%d\", &T);\n\twhile (T -- ) {\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tfor (int i = 1; i <= n; i ++ )\n\t\t\tfor (int j = 1; j <= m; j ++ )\n\t\t\t\tscanf(\"%d\", &g[i][j]);\n\t\tfor (int i = 1; i <= n; i ++ )\n\t\t\tfor (int j = 1; j <= m; j ++ )\n\t\t\t\tscanf(\"%d\", &t[i][j]);\n\t\tfor (int i = 1; i <= m; i ++ )\n\t\t\tif (solve(i)) {\n\t\t\t\tputs(\"YES\");\n\t\t\t\tgoto EXIT;\n\t\t\t}\n\t\tputs(\"NO\");\n\t\tEXIT:;\n\t}\n\treturn 0;\n}\n```\n\n\u4f7f\u7528 bitset \u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u8fd9\u91cc\uff1a[\u4f7f\u7528bitset\u4ee3\u7801](https://www.luogu.com.cn/record/105015980)",
        "postTime": 1679113687,
        "uid": 519384,
        "name": "Link_Cut_Y",
        "ccfLevel": 0,
        "title": "P1275 \u9b54\u677f\u9898\u89e3"
    }
]