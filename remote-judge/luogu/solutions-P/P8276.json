[
    {
        "content": "USACO \u7684\u9898\u90fd\u8d85\u6709\u610f\u601d\u7684\u3002\u5fd8\u4e86\u9898\u610f\u7684\u540c\u5fd7\u4eec\uff0c\u6211\u4eec\u518d\u6765\u56de\u987e\u4e00\u4e0b\uff1a\n\n### \u9898\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u65e0\u91cd\u8fb9\u3001\u81ea\u73af\u7684\u6709\u5411\u56fe\u3002\u7532\u4e59\u4e24\u4eba\u73a9\u6e38\u620f\uff0c\u8d77\u521d\u5728\u56fe\u4e0a $x,y$ \u70b9\u5904\u5404\u653e\u4e00\u4e2a\u68cb\u5b50\uff0c\u7532\u5148\u9009\u62e9\u4e00\u4e2a\u68cb\u5b50\uff0c\u4e59\u5fc5\u987b\u5c06\u8fd9\u4e2a\u68cb\u5b50\u6cbf\u7740\u8fb9\u79fb\u52a8\uff0c\u8fd8\u9700\u4fdd\u8bc1\u4e24\u4e2a\u68cb\u5b50\u4e0d\u91cd\u5408\u3002\u8f6e\u6d41\u8fdb\u884c\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u82e5\u4e59\u4e0d\u80fd\u79fb\u52a8\u5219\u4e59\u8f93\uff0c\u82e5\u6e38\u620f\u80fd\u65e0\u9650\u8fdb\u884c\u5219\u7532\u8f93\u3002\u5bf9 $q$ \u7ec4\u8be2\u95ee $(x,y)$\uff0c\u6c42\u8c01\u6709\u5fc5\u80dc\u7b56\u7565\u3002$n,q\\le 10^5$\uff0c$m\\le 2\\times 10^5$\u3002\n\n### \u5206\u6790\n\n\u5728\u505a\u5b8c P \u7ec4\u7684 T3 \u540e\uff0c\u53d1\u73b0\u7b2c\u4e00\u9898~~\u662f Benq \u51fa\u7684\uff0c\u6240\u4ee5\u5f88\u4e0d\u53ef\u505a~~\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u5927\u628a\u7684\u65f6\u95f4\u6765\u597d\u597d\u7814\u7a76\u8fd9\u9053 T2\u3002\u6240\u4ee5\u6211\u4eec\u4e00\u6b65\u6b65\u5730\u5206\u6790\u8fd9\u4e2a\u9898\u76ee\u3002\u4e0b\u9762\u79f0\u9898\u76ee\u4e2d\u7684\u8111 (Brain,B) \u4e3a\u7532\uff0c\u8e44 (Hoof,H) \u4e3a\u4e59\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8u8t5tuw.png)\n\n\u9996\u5148\uff0c\u89c2\u5bdf\u6837\u4f8b\u7684\u8be2\u95ee\uff0c\u4e3a\u4ec0\u4e48 $(1,5)$ \u7532\u4f1a\u8d62\u5462\uff1f\u56e0\u4e3a $5$ \u70b9\u6ca1\u6709\u51fa\u8fb9\uff0c\u4e8e\u662f\u7532\u9009\u62e9\u8fd9\u4e2a\u68cb\u5b50\uff0c\u4e59\u65e0\u5904\u53ef\u8d70\u3002\u6240\u4ee5\u521d\u6b65\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u68cb\u5b50\u6240\u5728\u7684\u70b9\u51fa\u53d1**\u53ea\u80fd\u8d70\u6709\u9650\u6b65**\uff0c\u5c31\u4e00\u5b9a\u662f\u7532\u8d62\u3002\u5982\u4f55\u627e\u5230\u8fd9\u6837\u7684\u70b9\u5462\uff1f\u7ecf\u5178\u7684\u5904\u7406\u529e\u6cd5\u662f\u5efa\u53cd\u56fe\u8dd1\u62d3\u6251\u6392\u5e8f\uff0c\u5728\u62d3\u6251\u5e8f\u91cc\u7684\u70b9\u5c31\u662f\u65e0\u6cd5\u5230\u8fbe\u73af\u7684\u70b9\uff0c\u81ea\u7136\u53ea\u80fd\u8d70\u6709\u9650\u6b65\u3002\u6240\u4ee5\u5728\u63a5\u4e0b\u6765\u7684\u5206\u6790\u4e2d\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u70b9\u5220\u53bb\uff0c\u4ece\u800c\u4e0d\u59a8\u8bbe**\u6240\u6709\u70b9\u51fa\u53d1\u90fd\u80fd\u5230\u8fbe\u73af**\u3002\n\n\u9898\u76ee\u6ca1\u6709\u7ed3\u675f\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u6837\u4f8b\u4e2d\u8fd8\u6709 $(2,4)$ \u7532\u4f1a\u8d62\u3002\u7532\u53ef\u4ee5\u6307\u5b9a $4$\uff0c\u6b64\u65f6\u4e59\u53ea\u80fd\u79fb\u52a8\u5230 $7$\uff0c\u7136\u540e\u7532\u9009 $7$\uff0c\u4e59\u65e0\u5904\u53ef\u8d70\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u68cb\u5b50\u6240\u5728\u70b9 $u$\uff0c\u5b83\u60f3\u8d70\u65e0\u9650\u591a\u6b65**\u5fc5\u987b\u7ecf\u8fc7\u70b9** $v$\uff0c\u4e14\u53e6\u5916\u4e00\u4e2a\u68cb\u5b50\u5728 $v$\uff0c\u90a3\u4e48\u5c31\u662f\u7532\u8d62\u3002\u8fd9\u4e2a\u8981\u6c42\u611f\u89c9\u6709\u4e9b\u82db\u523b...\u6709\u6ca1\u6709\u66f4\u4e00\u822c\u7684\u7ed3\u8bba\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/quhbhwmx.png)\n\n\u6bd4\u5982\u4e0a\u56fe\u4f8b\u5b50\uff0c\u5982\u679c\u68cb\u5b50\u521d\u59cb\u5728 $(2,4)$\uff0c\u90a3\u4e48\u7532\u53ef\u4ee5\u5148\u9009 $2$ \u518d\u9009 $4$\uff0c\u8fd9\u4e24\u4e2a\u68cb\u5b50\u90fd\u5fc5\u987b\u5230 $3$\uff0c\u4ea7\u751f\u76f8\u9047\uff0c\u7532\u8d62\u3002\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\u8fd9\u4e2a\u7ed3\u8bba\u52a0\u5f3a\uff0c\u82e5 $u_1,u_2$ \u60f3\u8d70\u65e0\u9650\u6b65\u90fd\u4e00\u5b9a\u4f1a\u7ecf\u8fc7\u4e00\u4e2a\u70b9 $v$\uff0c\u90a3\u4e48 $(u_1,u_2)$ \u4e00\u5b9a\u662f\u7532\u8d62\u3002\u5f62\u5f0f\u5316\u5730\uff1a\n> \u5b9a\u4e49 $v$ \u662f $u$ \u7684\u201c**\u652f\u914d\u70b9**\u201d\uff0c\u5f53\u4e14\u4ec5\u5f53 $u$ \u8d70\u65e0\u9650\u591a\u6b65\u5fc5\u987b\u7ecf\u8fc7 $v$\u3002\u4e5f\u5373\uff0c\u5728\u5220\u53bb $v$ \u540e\uff0c$u$ \u4e0d\u5728\u4efb\u4f55\u5927\u5c0f $>1$ \u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u3002$u$ \u4e5f\u662f $u$ \u7684\u652f\u914d\u70b9\u3002\u4ee4 $F(u)$ \u4e3a $u$ \u7684\u6240\u6709\u652f\u914d\u70b9\u6784\u6210\u7684\u96c6\u5408\uff0c\u79f0\u4e3a**\u652f\u914d\u96c6**\u3002\u5bf9\u4e8e\u8be2\u95ee $u_1,u_2$\uff0c\u82e5 $F(u_1)\\cap F(u_2)$ \u975e\u7a7a\uff0c\u5219\u7532\u8d62\u3002\n\n\u5bf9\u4e8e\u76f8\u4ea4\u4e3a\u7a7a\u7684\u60c5\u5f62\uff0c\u4e8b\u5b9e\u4e0a\u4e59\u4f1a\u83b7\u80dc\uff0c\u56e0\u4e3a\u6bcf\u6b21\u90fd\u53ef\u4ee5\u907f\u514d\u8d70\u5230\u53e6\u4e00\u4e2a\u68cb\u5b50\u7684\u652f\u914d\u70b9\u4e0a\u3002\u6240\u4ee5\u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u7532\u83b7\u80dc\u7684\u7b49\u4ef7\u6761\u4ef6\uff1a**\u652f\u914d\u96c6\u76f8\u4ea4\u975e\u7a7a**\u3002\n\n\u63a5\u4e0b\u6765\u81ea\u7136\u5c31\u6709\u4e86 $O(n^2+qn)$ \u7684\u7b97\u6cd5\uff1a\u6bcf\u6b21\u5220\u6389\u4e00\u4e2a\u70b9\uff0c\u770b\u6709\u591a\u5c11\u70b9\u65e0\u6cd5\u8d70\u5230\u73af\u4e0a\uff0c\u5c31\u66f4\u65b0\u8fd9\u4e9b\u70b9\u7684\u652f\u914d\u96c6\u3002\u8be2\u95ee\u7684\u65f6\u5019\u76f4\u63a5\u66b4\u529b\u5224\u4ea4\u5373\u53ef\u3002\u4e8b\u5b9e\u4e0a\uff0c\u540e\u8005\u8fd8\u53ef\u4ee5\u7528 bitset \u4f18\u5316\u5230 $O(\\dfrac{qn}{w})$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u70b9 1-9\u3002\n\n\u60f3\u8981\u83b7\u5f97\u66f4\u52a0\u4f18\u79c0\u7684\u505a\u6cd5\uff0c\u5c31\u4e0d\u80fd\u66b4\u529b\u6c42\u51fa\u652f\u914d\u96c6\uff0c\u800c\u662f\u7814\u7a76\u652f\u914d\u7684\u7279\u6b8a\u6027\u8d28\u3002\u8fd9\u91cc\u6211\u4eec\u7ed9\u51fa\u4e24\u6761\uff1a\n\n> 1. **\u4f20\u9012\u6027**\uff1a$v$ \u652f\u914d $u$\uff0c$w$ \u652f\u914d $v$\uff0c\u5219 $w$ \u652f\u914d $u$\u3002     \n> 2. **\u504f\u5e8f\u6027**\uff1a$v_1,v_2$ \u90fd\u652f\u914d $u$\uff0c\u5219 $v_1,v_2$ \u4e4b\u95f4\u4e5f\u6709\u652f\u914d\u5173\u7cfb\u3002\n\n\u6839\u636e\u652f\u914d\u70b9\u7684\u5b9a\u4e49\uff0c\u5bb9\u6613\u8bc1\u660e\u4ee5\u4e0a\u4e24\u6761\u3002\u5176\u4e2d\u7b2c\u4e8c\u6761\u7ed9\u4e86\u6211\u4eec\u542f\u53d1\uff1a\u65e2\u7136 $v_1,v_2$ \u6709\u5171\u540c\u652f\u914d\u7684\u70b9\uff0c\u90a3\u4e48\u5b83\u4eec\u4e4b\u95f4\u4e5f\u4f1a\u4e92\u76f8\u652f\u914d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c$u,v_1,v_2$ \u4e24\u4e24\u6709\u5171\u540c\u652f\u914d\u70b9\u3002\u90a3\u4e48...\u5982\u679c\u5c06\u652f\u914d\u5173\u7cfb\u770b\u4f5c\u65e0\u5411\u56fe\u7684\u8bdd\uff0c\u662f\u4e0d\u662f\u8fde\u901a\u5757\u5185\u7684\u4efb\u4e24\u70b9\u90fd\u6709\u5171\u540c\u652f\u914d\u70b9\u5462\uff1f\n\n\u56de\u987e [NOI2021 \u5e86\u5178](https://www.luogu.com.cn/problem/P7737)\u3002\u53d1\u73b0\u90a3\u9053\u9898\u5bf9\u56fe\u7684\u9650\u5236\u548c\u7b2c\u4e8c\u6761\u5f88\u76f8\u4f3c\uff0c\u6700\u540e\u7684\u7ed3\u8bba\u662f\u5728\u7f29\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u540e\u56fe\u4e3a\u4e00\u68f5\u6811\u3002\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u4efb\u4e24\u70b9\u81ea\u7136\u6709\u5171\u540c\u652f\u914d\u70b9\uff1b\u5728\u6811\u4e0a\u7684\u4e24\u70b9\uff0c\u56e0\u4e3a\u5b83\u4eec\u5171\u540c\u6307\u5411\u7956\u5148\uff0c\u90a3\u4e48\u5b83\u4eec\u4e5f\u4f1a\u6709\u5171\u540c\u652f\u914d\u70b9\u2014\u2014\u7956\u5148\uff01\u6240\u4ee5\u81f3\u6b64\u6211\u4eec\u53d1\u73b0\uff0c**\u82e5\u5c06\u652f\u914d\u7684\u5173\u7cfb\u770b\u4f5c\u65e0\u5411\uff0c\u90a3\u4e48\u8fde\u901a\u5206\u652f\u91cc\u7684\u4efb\u4e24\u70b9\u7684\u652f\u914d\u96c6\u76f8\u4ea4\u975e\u7a7a**\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e00\u7ed3\u8bba\u5341\u5206\u91cd\u8981\uff1f\u56e0\u4e3a\u5b83\u8ba9\u8fd9\u9053\u9898\u53d8\u5f97\u53ef\u505a\uff1a\u53ea\u9700\u8981\u627e\u5230\u4e0d\u8d85\u8fc7 $n-1$ \u4e2a\u652f\u914d\u5173\u7cfb\uff0c\u5c31\u80fd\u627e\u5230\u6240\u6709\u7684\u8fde\u901a\u5206\u652f\uff0c\u8fdb\u800c\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u5feb\u901f\u5730\u5904\u7406\u8be2\u95ee\uff01\n\n\u90a3\u4e48\u5982\u4f55\u627e\u5230\u8fd9\u4e9b\u652f\u914d\u5173\u7cfb\u5462\uff1f\u5bb9\u6613\u60f3\u5230\u7684\u662f\uff0c\u82e5\u51fa\u5ea6 $\\deg u=1$\uff0c\u8bbe $u$ \u8fde\u5411 $v$\uff0c\u5219 $v$ \u4e00\u5b9a\u652f\u914d $u$\u3002\u90a3\u518d\u60f3\uff0c\u65e2\u7136 $u,v$ \u5728\u652f\u914d\u5173\u7cfb\u56fe\u4e2d\u540c\u5c5e\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u662f\u5426\u80fd\u5728\u539f\u56fe\u91cc\u628a\u5b83\u4eec\u5408\u5e76\u5462\uff1f\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\uff0c\u56e0\u4e3a\u4f46\u51e1\u7ecf\u8fc7 $u$ \u7684\u70b9\u4e00\u5b9a\u4f1a\u4e0b\u4e00\u6b65\u7ecf\u8fc7 $v$\uff0c\u6545\u5c06\u4ed6\u4eec\u5408\u5e76\u8d77\u6765\u5e76\u65e0\u5927\u788d\u3002\u5408\u5e76\u65f6\uff0c\u6ce8\u610f $u,v$ \u7f29\u6210\u7684\u70b9 $u'$ \u53ef\u80fd\u5b58\u5728\u81ea\u73af\u3002\u5220\u53bb\u91cd\u8fb9\u540e\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u65b0\u7684 $u_0$ \u6ee1\u8db3 $\\deg u_0=1$\uff0c\u5c31\u63a5\u7740\u7f29\u70b9\u5c31\u597d\u4e86\u3002\u4e3a\u4e86\u5feb\u901f\u5730\u7ef4\u62a4\u7f29\u70b9\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u56de\u987e [WC2021 \u62ec\u53f7\u8def\u5f84](https://www.luogu.com.cn/problem/P7323) \u8fd9\u4e00\u9898\uff0c\u7528\u7ebf\u6bb5\u6811\u5408\u5e76/\u542f\u53d1\u5f0f\u5408\u5e76\u89e3\u51b3\u3002\u5b9e\u73b0\u7684\u597d\u53ef\u4ee5 $O(n\\log n)$\uff0c\u4e0d\u8fc7\u4e24\u4e2a $\\log $ \u4e5f\u95ee\u9898\u4e0d\u5927\u3002\n\n\u5f53\u7136\u5728\u7f29\u70b9\u540e\uff0c\u867d\u7136\u6240\u6709\u70b9\u7684\u51fa\u5ea6\u90fd $\\ge 2$ \u4e86\uff0c\u4f46\u4ecd\u7136\u4e0d\u77e5\u9053\u662f\u5426\u627e\u5168\u4e86\u652f\u914d\u5173\u7cfb\u3002\u8fd9\u65f6\u60ca\u5947\u5730\u53d1\u73b0\uff1a\u5f53\u524d\u6c42\u51fa\u7684\u8fde\u901a\u5206\u652f\u5c31\u662f\u6b63\u786e\u7684\uff01\n\n> **\u5f15\u7406**\uff1a\u82e5\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6 $\\ge 2$\uff0c\u5219\u4e0d\u5b58\u5728\u4efb\u4f55\u4e0d\u76f8\u540c\u4e24\u70b9\u7684\u652f\u914d\u5173\u7cfb\u3002   \n> **\u8bc1\u660e**\uff1a\u6bcf\u6b21\u4ece $u$ \u90fd\u53ef\u627e\u5230\u4e0d\u7ecf\u8fc7\u70b9 $v$ \u7684\u8def\u5f84\uff0c\u6545\u5bf9\u4efb\u610f $u\\not=v$\uff0c$v$ \u90fd\u4e0d\u652f\u914d $u$\u3002\u8bc1\u6bd5\u3002\n\n\u81f3\u6b64\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u3002\u6216\u8bb8\u4f60\u5728\u62c5\u5fc3\u5b9e\u73b0\u8d77\u6765\u662f\u4e0d\u662f\u975e\u5e38\u9ebb\u70e6\uff0c\u6216\u662f\u5728\u540e\u6094\u8d5b\u65f6\u6ca1\u6709\u60f3\u5230\u6b63\u89e3...\u4e0d\u8fc7\u6ca1\u5173\u7cfb\uff0c~~USACO \u7b97\u4ec0\u4e48~~ \u65e0\u8bba\u4f55\u65f6\uff0c\u53ea\u8981\u9886\u609f\u4e86\u8fd9\u9053\u9898\u7684\u7cbe\u9ad3\uff0c\u4ece\u6bcf\u9053\u9898\u91cc\u5b66\u5230\u65b0\u77e5\u8bc6\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u503c\u5f97\u9ad8\u5174\u5462\uff1f:)\n\nTalk is cheap, show you the code... \u63d0\u524d\u58f0\u660e\uff0c\u4ee3\u7801\u592a\u4e11\uff0c\u4ec5\u4f9b\u53c2\u8003~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nint n,m,q;\nstruct Edge{\n\tint u,v;\n\tint nxt;\n}edge[N<<1];\nint head[N],tot=0;\nint ind[N],outd[N];\nbool ok[N];\nint fa[2][N];\nint rt[2][N];\nstruct Tree{\n\tint siz;\n\tint ch[2];\n}t[N<<6];\nint ttot=0,was[N<<5],wastot=0;\nbool have[N];\nqueue<int> tq;\nstring ans;\ninline void add_edge(int u,int v){\n\ttot++;\n\tedge[tot]=(Edge){u,v,head[u]};\n\thead[u]=tot;\n\tind[v]++,outd[u]++;\n}\n#define lson t[id].ch[0]\n#define rson t[id].ch[1]\ninline void pushup(int id){\n\tt[id].siz=t[lson].siz+t[rson].siz;\n}\ninline int NewNode(){ // \u52a0\u4e86\u7a7a\u95f4\u56de\u6536\uff0c\u4e0d\u7136\u4f1a MLE\n\tif(wastot){\n\t\treturn was[wastot--];\n\t}\n\treturn (++ttot);\n}\ninline void addwas(int id){\n\tif(wastot>=(N<<5)) return ;\n\tt[id].siz=t[id].ch[0]=t[id].ch[1]=0;\n\twas[++wastot]=id;\n}\nvoid Add(int &id,int L,int R,int k,bool del){\n\tif(!id) id=NewNode();\n\tif(L==R){\n\t\tt[id].siz=del;\n\t\tif(!del) addwas(id),id=0;\n\t\treturn ;\n\t}\n\tint mid=(L+R)>>1;\n\tif(k<=mid) Add(lson,L,mid,k,del);\n\telse Add(rson,mid+1,R,k,del);\n\tpushup(id);\n\tif(!t[id].siz) addwas(id),id=0;\n}\nbool Have(int id,int L,int R,int k){\n\tif(!id) return false;\n\tif(L==R&&t[id].siz) return true;\n\tint mid=(L+R)>>1;\n\treturn (k<=mid)?Have(lson,L,mid,k):Have(rson,mid+1,R,k);\n}\nint Findson(int id,int L,int R){\n\tif(L==R) return L;\n\tint mid=(L+R)>>1;\n\tif(t[lson].siz) return Findson(lson,L,mid);\n\telse return Findson(rson,mid+1,R);\n}\ninline int find(int k,int x){\n\tif(x==fa[k][x]) return x;\n\treturn fa[k][x]=find(k,fa[k][x]);\n}\nint shanx,shany;\nvoid Merge(int &x,int y,int L,int R){\n\tif(!y) return ;\n\tif(!x) x=y;\n\tif(L==R){\n\t\tif(t[y].siz){\n\t\t\tAdd(rt[1][shanx],1,n,L,1);\n\t\t\tint pp=find(0,L);\n\t\t\tAdd(rt[0][pp],1,n,shany,0),Add(rt[0][pp],1,n,shanx,1);\n\t\t\tif(t[rt[0][pp]].siz==1 && !have[pp]) tq.push(pp);\n\t\t}\n\t\tt[x].siz=(t[x].siz|t[y].siz);\n\t\treturn ;\n\t}\n\tint mid=(L+R)>>1;\n\tMerge(t[x].ch[0],t[y].ch[0],L,mid);\n\tMerge(t[x].ch[1],t[y].ch[1],mid+1,R);\n\tpushup(x);\n}\ninline int makemerge(int k,int x,int y){ // y merge in x\n\tint fx=find(k,x),fy=find(k,y);\n\tif(fx!=fy) fa[k][fy]=fx;\n}\nvoid Topo(){\n\tfor(int i=1;i<=n;i++){\n\t\tif(!ind[i]) tq.push(i),ok[i]=true;\n\t}\n\twhile(!tq.empty()){\n\t\tint tp=tq.front();tq.pop();\n\t\tfor(int i=head[tp];i;i=edge[i].nxt){\n\t\t\tint v=edge[i].v;\n\t\t\tif(!(--ind[v])) tq.push(v),ok[v]=true;\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd_edge(v,u);\n\t}\n\tTopo();\n\tfor(int i=1;i<=m;i++){\n\t\tint u=edge[i].u,v=edge[i].v;\n\t\tif(ok[u] || ok[v]) continue;\n\t\tAdd(rt[0][v],1,n,u,1);\n\t\tAdd(rt[1][u],1,n,v,1);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfa[0][i]=fa[1][i]=i;\n\t\tif(ok[i]) continue;\n\t\tif(t[rt[0][i]].siz==1) tq.push(i);\n\t}\n\twhile(!tq.empty()){\n\t\tint tp=tq.front();tq.pop();\n\t\tint now=find(0,tp),now1=find(1,tp);\n\t\tif(t[rt[0][now]].siz!=1 || have[now]) continue;\n\t\tint to=Findson(rt[0][now],1,n),nowto=find(0,to),nowto1=find(1,to);\n\t\tmakemerge(0,to,tp);\n\t\tif(Have(rt[0][nowto],1,n,now1)) Add(rt[0][nowto],1,n,now1,0),Add(rt[1][now1],1,n,nowto,0),have[nowto]=true;\n\t\tAdd(rt[1][nowto1],1,n,now,0);\n\t\tif(t[rt[1][now1]].siz < t[rt[1][nowto1]].siz){\n\t\t\tmakemerge(1,nowto1,now1);\n\t\t\tshanx=nowto1,shany=now1,Merge(rt[1][nowto1],rt[1][now1],1,n);\n\t\t}\n\t\telse{\n\t\t\tmakemerge(1,now1,nowto1);\n\t\t\tshanx=now1,shany=nowto1,Merge(rt[1][now1],rt[1][nowto1],1,n);\n\t\t}\n\t}\n\tscanf(\"%d\",&q);\n\tfor(int i=1;i<=q;i++){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tif(ok[u] || ok[v]){\n\t\t\tans+='B';\n\t\t\tcontinue; \n\t\t}\n\t\tint fu=find(0,u),fv=find(0,v);\n\t\tif(fu==fv) ans+='B';\n\t\telse ans+='H';\n\t}\n\tcout<<ans<<endl;\n}\n```",
        "postTime": 1649038369,
        "uid": 146478,
        "name": "peppaking8",
        "ccfLevel": 9,
        "title": "P8276 [USACO22OPEN] Hoof and Brain P \u9898\u89e3"
    },
    {
        "content": "\u725b\u9898\uff0c\u573a\u4e0a\u786c\u78d5 2.5h \u6de6\u51fa\u6765\u4e86\u3002\n\n\u5148\u5bf9**\u53cd\u56fe**\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u62d3\u6251\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u5165\u5ea6\u53d8\u4e3a\u4e86 $0$\uff0c\u90a3\u4e48\u79f0\u8fd9\u4e2a\u70b9\u4e3a\u597d\u70b9\u3002\n\n\u5982\u679c\u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u4e2d\u6709\u81f3\u5c11\u4e00\u4e2a\u662f\u597d\u70b9\uff0c\u90a3\u4e48\u663e\u7136 Brain \u5fc5\u80dc\u3002\n\n\u7531\u4e8e Hoof \u4e00\u65e6\u8d70\u5230\u597d\u70b9\u4e0a\u5c31\u6b7b\u5b9a\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u6240\u6709\u597d\u70b9\u90fd\u5220\u9664\uff0c\u8003\u8651\u8fd9\u4e2a\u65b0\u56fe\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u65b0\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u90fd\u4e0d\u4e3a $0$\u3002\n\n\u6211\u4eec\u8003\u8651\u7ed9\u6bcf\u4e00\u4e2a\u70b9 $u$ \u67d3\u4e00\u79cd\u989c\u8272 $col_u$\u3002\u8fdb\u884c\u5982\u4e0b\u8fc7\u7a0b\uff1a\n\n- \u521d\u59cb\u65f6\u6bcf\u4e2a\u70b9 $u$ \u90fd\u6709 $col_u=u$\u3002\n\n- \u5982\u679c $u$ \u7684\u6240\u6709\u51fa\u8fb9\u6307\u5411\u7684 $v$ \u989c\u8272\u5168\u90e8\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u5c06\u6240\u6709\u989c\u8272\u4e3a $col_u$ \u7684\u70b9\u7684\u989c\u8272\u6539\u4e3a $col_v$\u3002\n\n- \u91cd\u590d\u4e0a\u4e00\u6b65\u76f4\u5230\u989c\u8272\u4e0d\u518d\u53d8\u5316\u3002\n\n\u5148\u7ed9\u51fa\u7ed3\u8bba\uff1a\u5982\u679c\u521d\u59cb\u4e24\u4e2a\u70b9\u989c\u8272\u76f8\u540c\uff0c\u5219 Brain \u5fc5\u80dc\uff0c\u5426\u5219 Hoof \u5fc5\u80dc\u3002\n\n\u4e3a\u4ec0\u4e48\u5b83\u662f\u5bf9\u7684\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u70b9\u7684\u989c\u8272\u7684\u5b9e\u9645\u610f\u4e49\uff1a\u5047\u8bbe\u6709\u4e00\u9897\u68cb\u5b50\u5728 $u$ \u4e0a\uff0c\u4ee4 Brain \u4e0d\u65ad\u5730\u94a6\u5b9a\u8fd9\u9897\u68cb\u5b50\uff0c\u90a3\u4e48\u5b83\u65e0\u8bba\u600e\u4e48\u79fb\u52a8\u4e00\u5b9a\u5728\u67d0\u4e2a\u65f6\u523b\u7ecf\u8fc7\u4e86 $col_u$ \u8fd9\u4e2a\u70b9\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u8ba8\u8bba\uff1a\n\n- \u5982\u679c\u521d\u59cb\u4e24\u4e2a\u70b9\u989c\u8272\u90fd\u4e3a $c$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u4eec\u5728 $c$ \u8fd9\u4e2a\u70b9\u4e0a\u5835\u6b7b\u3002\u56e0\u6b64 Brain \u5fc5\u80dc\u3002\n\n- \u5982\u679c\u521d\u59cb\u4e24\u4e2a\u70b9\u989c\u8272\u5206\u522b\u4e3a $c_1,c_2$\uff0c\u90a3\u4e48\u65e0\u8bba Brain \u600e\u4e48\u9009\uff0cHoof \u90fd\u6709\u81f3\u5c11\u4e00\u79cd\u8d70\u6cd5\u53ef\u4ee5\u4f7f\u5f97\u8d70\u5b8c\u540e\u4e24\u4e2a\u70b9\u989c\u8272\u4e0d\u540c\u3002\u56e0\u6b64 Hoof \u5fc5\u80dc\u3002\n\n\u6709\u4e86\u8fd9\u4e9b\u7ed3\u8bba\u540e\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5feb\u901f\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684 $col$ \u5373\u53ef\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u5b83\u7684\u51fa\u8fb9\u6307\u5411\u7684\u70b9\u7684\u989c\u8272\u79cd\u6570\uff0c\u6bcf\u6b21\u542f\u53d1\u5f0f\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log n)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 100005\n#define pb push_back\nint n,m,c,dg[N],q[N],rt[N],w1[N],ps[N];bool vs[N];\nvector<int> e[N],e1[N],vc[N];map<int,int> w[N];\nvoid upd(int u,int vl)\n{\n\tfor(auto v:e[u]) if(!vs[v])\n\t{\n\t\t--w[v][rt[u]];if(!w[v][rt[u]]) --w1[v];\n\t\tif(!w[v][vl]) ++w1[v];++w[v][vl];\n\t\tif(w1[v]==1) vs[v]=1,q[++q[1]]=v;\n\t}rt[u]=vl;\n}\nvoid merge(int u,int v)\n{\n\tu=rt[u];v=rt[v];if(u==v) return;\n\tif(vc[u].size()>vc[v].size()) swap(u,v);\n\tfor(auto i:vc[u]) upd(i,v),vc[v].pb(i);vc[u].clear();\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);q[0]=2;q[1]=1;\n\tfor(int i=1,u,v;i<=m;++i)\n\t\tscanf(\"%d %d\",&u,&v),e1[v].pb(u),++dg[u];\n\tfor(int i=1;i<=n;++i) {vc[i].pb(i);if(!dg[i]) q[++q[1]]=i;}\n\twhile(q[0]<=q[1])\n\t{\n\t\tint u=q[q[0]++];rt[u]=0;\n\t\tfor(auto v:e1[u]) {--dg[v];if(!dg[v]) q[++q[1]]=v;}\n\t}q[0]=2;q[1]=1;\n\tfor(int i=1;i<=n;++i) if(dg[i])\n\t\tfor(auto j:e1[i]) if(dg[j]) e[i].pb(j),ps[j]=i;\n\tfor(int i=1;i<=n;++i) if(dg[i])\n\t{rt[i]=i;for(auto j:e[i]) {if(!w[j][i]) ++w1[j];++w[j][i];}}\n\tfor(int i=1;i<=n;++i) if(w1[i]==1) q[++q[1]]=i;\n\twhile(q[0]<=q[1]) {int u=q[q[0]++];merge(u,ps[u]);}\n\tscanf(\"%d\",&c);\n\tfor(int i=1,u,v;i<=c;++i)\n\t{\n\t\tscanf(\"%d %d\",&u,&v);u=rt[u];v=rt[v];\n\t\tif(!u || !v) putchar('B');else putchar(u==v?'B':'H');\n\t}return 0;\n}\n```",
        "postTime": 1648985238,
        "uid": 119621,
        "name": "Kubic",
        "ccfLevel": 10,
        "title": "P8276 [USACO22OPEN] Hoof and Brain P"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5982\u679c\u67d0\u4e2a\u68cb\u5b50\u6240\u5728\u7684\u70b9\u6ca1\u6709\u51fa\u8fb9\uff0c\u90a3\u4e48\u7532\u53ea\u9700\u8981\u9009\u62e9\u8fd9\u4e2a\u68cb\u5b50\u5c31\u80fd\u591f\u83b7\u80dc\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u70b9\u6807\u8bb0\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u4ece\u539f\u56fe\u4e2d\u5220\u9664\u3002\u4f46\u5728\u5b8c\u6210\u5220\u9664\u64cd\u4f5c\u540e\uff0c\u53ef\u80fd\u53c8\u4f1a\u6709\u65b0\u7684\u8282\u70b9\u51fa\u8fb9\u6570\u91cf\u53d8\u6210\u4e86 $0$\uff0c\u6211\u4eec\u9700\u8981\u91cd\u590d\u8fd9\u6837\u7684\u5220\u9664\u64cd\u4f5c\u53ea\u5230\u56fe\u4e2d\u4efb\u610f\u8282\u70b9\u90fd\u6709\u81f3\u5c11 $1$ \u6761\u51fa\u8fb9\u3002\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u53ea\u6709 $1$ \u6761\u51fa\u8fb9\u7684\u8282\u70b9 $x$\uff0c\u5047\u8bbe\u8fd9\u6761\u8fb9\u6307\u5411\u7684\u8282\u70b9\u662f $y$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f $x$ \u4e0a\u7684\u68cb\u5b50\uff0c\u79fb\u52a8\u540e\u90fd\u4e00\u5b9a\u4f1a\u5230\u8fbe $y$\u3002\u5982\u679c\u7532\u80fd\u591f\u901a\u8fc7\u8ba9\u4e24\u4e2a\u68cb\u5b50\u90fd\u79fb\u52a8\u5230 $x$ \u83b7\u80dc\uff0c\u90a3\u4e48\u7532\u663e\u7136\u4e5f\u80fd\u591f\u901a\u8fc7\u8ba9\u4e24\u4e2a\u68cb\u5b50\u90fd\u79fb\u52a8\u5230 $y$ \u83b7\u80dc\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06 $x$ \u548c $y$ \u5408\u5e76\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6761\u8fb9 $z \\to x$\uff0c\u5c06\u5176\u5220\u9664\uff0c\u7136\u540e\u82e5 $z \\to y$ \u4e0d\u5b58\u5728\u5219\u52a0\u5165\u8fb9 $z \\to y$\u3002\u548c\u4e4b\u524d\u76f8\u540c\uff0c\u6b64\u65f6\u53ef\u80fd\u53c8\u4f1a\u6709\u65b0\u7684\u8282\u70b9\u51fa\u8fb9\u6570\u91cf\u53d8\u4e3a $1$\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u7ee7\u7eed\u5408\u5e76\u3002\n\n\u5408\u5e76\u540e\uff0c\u65b0\u56fe\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u6709\u81f3\u5c11 $2$ \u6761\u51fa\u8fb9\uff0c\u6216\u6709\u4e00\u4e2a\u81ea\u73af\u3002\u5148\u8003\u8651\u6240\u6709\u70b9\u90fd\u81f3\u5c11\u6709 $2$ \u6761\u51fa\u8fb9\u7684\u60c5\u51b5\uff0c\u663e\u7136\u4e59\u7684\u6bcf\u6b21\u64cd\u4f5c\u90fd\u80fd\u591f\u907f\u514d\u4f7f\u4e24\u4e2a\u68cb\u5b50\u8fdb\u5165\u540c\u4e00\u4e2a\u8282\u70b9\u3002\u800c\u6709\u81ea\u73af\u7684\u60c5\u51b5\u540c\u6837\u5e73\u51e1\u3002\n\n\u4e8e\u662f\uff0c\u5bf9\u4e8e\u8be2\u95ee $(x,y)$\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u5224\u5b9a\u80dc\u8d1f\uff1a\n\n\u82e5 $x$ \u6216 $y$ \u88ab\u5220\u9664\uff0c\u90a3\u4e48\u7532\u5fc5\u80dc\u3002\u5426\u5219\uff0c\u5982\u679c $x$ \u548c $y$ \u88ab\u5408\u5e76\u6210\u4e86\u4e00\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u7532\u5fc5\u80dc\uff0c\u5426\u5219\u4e59\u5fc5\u80dc\u3002\n\n\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76 ```set``` \u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684\u51fa\u8fb9\u96c6\u5408 $f$ \u548c\u5165\u8fb9\u96c6\u5408 $g$\uff0c\u5e76\u67e5\u96c6\u7ef4\u62a4\u5408\u5e76\u540e\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u96c6\u5408\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(m \\log n + q)$\u3002 \n\n```cpp\n#include <bits/stdc++.h>\n#define ins insert\n#define era erase\nusing namespace std;\nconst int N = 2e5 + 5;\nint n, m, k, fa[N];\nset <int> f[N], g[N]; // f : out, g : in\nqueue <int> q;\nint gf(int x) {\n    return x == fa[x] ? x : fa[x] = gf(fa[x]);\n}\nint main() {\n    ios :: sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) \n        fa[i] = i;\n    for (int i = 1, x, y; i <= m; i++) {\n        cin >> x >> y;\n        f[x].ins(y);\n        g[y].ins(x);\n    }\n    for (int i = 1; i <= n; i++)\n        if (f[i].size() == 0) q.push(i);\n    while (!q.empty()) {\n        int v = q.front();\n        q.pop();\n        fa[v] = 0;\n        for (auto u : g[v]) {\n            f[u].era(v);\n            if (f[u].size() == 0) q.push(u);\n        }\n    }\n    for (int i = 1; i <= n; i++)\n        if (f[i].size() == 1) q.push(i);\n    while (!q.empty()) {\n        int x = q.front();\n        q.pop();\n        int y = 0;\n        for (auto v : f[x]) y = v;\n        x = gf(x);\n        y = gf(y);\n        if (x == y) continue;\n        if (g[x].size() > g[y].size())\n            swap(x, y);\n        for (auto z : g[x]) {\n            f[z].era(x);\n            f[z].ins(y);\n            g[y].ins(z);\n            if (f[z].size() == 1) q.push(z);\n        }\n        fa[x] = y;\n    }\n    cin >> k;\n    while (k--) {\n        int x, y; cin >> x >> y;\n        x = gf(x);\n        y = gf(y);\n        if (x == 0 || y == 0 || x == y) {\n            cout << \"B\";\n        } else {\n            cout << \"H\";\n        }\n    }\n    return 0;   \n}\n```\n",
        "postTime": 1674638991,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "P8276 [USACO22OPEN] Hoof and Brain P"
    }
]