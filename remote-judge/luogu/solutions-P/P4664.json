[
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u4e0d\u4e00\u6837\u7684\u80cc\u5305\u89e3\u6cd5\uff1a\uff08\u65f6\u7a7a\u90fd\u662f$O(n)$)\n\n\n------------\n\n\u5f53\u7b2c$i$\u4e2a\u515a\u6d3e\u662f\u8fc7\u5269\u515a\u6d3e\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u6ee1\u8db3\u4e0d\u7b49\u5f0f\uff1a\n\n$k - a_i\\leq s/2$\n\n\uff08\u5176\u4e2d$a_i$\u662f\u515a\u6d3e\u7684\u4eba\u6570\uff0c$s$\u662f\u603b\u4eba\u6570\uff0c$k$\u662f\u8054\u5408\u653f\u5e9c\u4eba\u6570\uff09\n\n\u8fd9\u4e2a\u662f\u5f88\u663e\u7136\u7684\n\n\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5207\u7684$a_i$\uff0c\u6211\u4eec\u80fd\u77e5\u9053\u8fd9\u4e2a$a_i$\uff0c\u5728$k$\u7b49\u4e8e\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a$a_i$\u662f\u53ef\u4ee5\u88ab\u9009\u8fdb\u8054\u5408\u653f\u5e9c\u7684\uff08\u4e5f\u5c31\u662f\u8bf4\u80af\u5b9a\u4e0d\u4f1a\u662f\u8fc7\u5269\u515a\u6d3e\uff09\n\n\u5176\u5b9e\u5c31\u662f\u53d8\u5f62\u4e00\u4e0b:\n\n$a_i \\leq k \\leq a_i + s/2$\n\n\uff08\u5de6\u8fb9\u8981\u5927\u4e8e\u7b49\u4e8e$a_i$\u662f\u56e0\u4e3a\u65e2\u7136\u8981\u9009$a_i$\u90a3\u80af\u5b9a\u6709$a_i$\u4e2a\u561b\uff09\n\n\u8003\u8651\u66b4\u529b\uff0c\u6211\u4eec\u53ea\u7528\u679a\u4e3e$k$\uff0c\u7136\u540e\u5148\u7528\u4e0a\u8ff0\u7684\u4e0d\u7b49\u5f0f\u6311\u9009\u51fa\u5408\u9002\u7684\u515a\u6d3e\uff0c\u7136\u540e\u518d\u8dd1\u4e00\u4e2a01\u80cc\u5305\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u521a\u597d\u51d1\u5230$k$\u4eba\u3002\u4f46\u662f\u8fd9\u6837\u80af\u5b9a\u590d\u6742\u5ea6\u4e0d\u5bf9\u3002\n\n\u6211\u4eec\u7a81\u7136\u53d1\u73b0\uff0c\u597d\u50cf\u53ef\u4ee5\u4e0d\u679a\u4e3e\u8fd9\u4e2a$k$\uff0c\u76f4\u63a5\u8dd101\u80cc\u5305\uff0c\u627e\u51fa\u6700\u5927\u80fd\u5230\u8fbe\u7684\u80cc\u5305\u72b6\u6001\uff08\u4e5f\u5c31\u662f\u6700\u5927\u7684$k$\uff09\u4e0d\u5c31\u53ef\u4ee5\u4e86\u5417\u3002\u5176\u5b9e\u8fd9\u4e2d\u95f4\u6709\u540e\u6548\u6027\u95ee\u9898\uff0c\u6211\u4eec\u62ff\u6837\u4f8b\u4e3e\u4f8b\uff1a\n\n```\n4\n1 3 2 4\n```\n\u4ed6\u4eec\u5206\u522b\u5bf9\u5e94\u7684\u6700\u5927$k$\u503c\u662f\uff08\u5176\u5b9e\u5c31\u662f$s/2+a_i$\uff09\uff1a\n```\n6 9 7 8\n```\n\u5728\u6700\u540e\u4e00\u4e2a4\u7684\u65f6\u5019\uff0c\u5b83\u53ef\u4ee5\u548c3\u7ec4\u62107\uff0c\u8fd9\u662f\u5408\u6cd5\u7684\uff0c\u7b54\u6848\u4e5f\u662f\u8fd9\u4e2a\u3002\n\n\u4f46\u662f\u6309\u716701\u80cc\u5305\uff0c\u4ed6\u548c1\u30012\u7ec4\u62107\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u8fd9\u91cc\u7684\u95ee\u9898\u662f\uff0c1\u7684\u6700\u5927$k$\u662f6\uff0c\u800c\u73b0\u5728$k$\u5df2\u7ecf\u52307\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u5176\u5b9e\u662f\u975e\u6cd5\u7684\u3002\u770b\u6765\u5982\u679c\u76f4\u63a5\u505a01\u80cc\u5305\u4f1a\u6709\u540e\u6548\u6027\u3002\n\n\u73b0\u5728\u95ee\u9898\u53d8\u6210\u4e86\uff0c\u6709\u4e00\u5806\u7269\u54c1\uff0c\u6709\u91cd\u91cf\uff0c\u4f46\u662f\u67d0\u4e9b\u7269\u54c1\u5728\u80cc\u5305\u91cd\u91cf\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c\u7684\u65f6\u5019\u662f\u975e\u6cd5\u7684\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e5f\u5f88\u7b80\u5355\uff0c~~\u56e0\u4e3a\u6211\u4eec\u7684\u4e0d\u7b49\u5f0f\u592a\u7b80\u5355\u4e86\u3002~~\n\n\u53ea\u8981\u6309\u201c\u5bf9\u5e94\u7684\u6700\u5927$k$\u503c\u201d\uff08\u5176\u5b9e\u5c31\u662f\u628a$a_i$\uff09\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u518d\u6309\u987a\u5e8f\u505a01\u80cc\u5305\u5c31\u53ef\u4ee5\u6d88\u9664\u540e\u6548\u6027\u4e86\u3002\u4e00\u4e2a\u7269\u54c1\u5728\u585e\u5165\u80cc\u5305\u7684\u65f6\u5019\uff0c\u4e4b\u524d\u7684\u7269\u54c1\u7684\u6700\u5927$k$\u503c\u80af\u5b9a\u6bd4\u5b83\u5927\uff0c\u6240\u6709\u8fd9\u4e2a\u7269\u54c1\u53ef\u4ee5\u968f\u610f\u7ec4\u5408\u5728\u5b83\u81ea\u5df1\u7684\u6700\u5927$k$\u503c\u5185\u7684\u7269\u54c1\u3002\n\n\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u8f93\u51fa\u65b9\u6848\u7684\u95ee\u9898\uff1a\u5176\u5b9e\u6211\u4eec\u4e0a\u9762\u7684\u80cc\u5305\u53ea\u7528\u8bb0\u5f55\u5b58\u4e0d\u5b58\u5728\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e2a\u80cc\u5305\u662f\u6ca1\u6709\u7c7b\u4f3c\u6807\u51c601\u80cc\u5305\u90a3\u6837\u8fd8\u6709\u4ef7\u94b1\u7684\u3002\u6211\u4eec\u53ea\u7528\u5728\u80cc\u5305\u7684\u6743\u503c\u5904\u8bb0\u5f55\u8fd9\u4e2a\u91cd\u91cf\u5176\u5b9e\u662f\u52a0\u4e86\u67d0\u4e2a\u7269\u54c1$a_i$\u4ee5\u540e\u5230\u8fbe\u7684\uff0c\u90a3\u6211\u4eec\u6bcf\u6b21\u51cf\u53bb$a_i$\u5c31\u53ef\u4ee5\u6162\u6162\u56de\u6eaf\u5230\u80cc\u5305\u76840\u91cd\u91cf\u72b6\u6001\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\ntypedef pair<int,int> pii;\nconst int MAXN=305,MAXT=1e5+5;\npii a[MAXN];//\uff08\u7ed3\u6784\u4f53\u90fd\u61d2\u5f97\u5199.jpg\uff09\nint bag[MAXT];\nint ans[MAXN],tail;\nint n,s,mx;\n\nsigned main(void)\n{\n\tcin>>n;\n\tfor(int i=1,x;i<=n;i++) scanf(\"%d\",&x),s+=x,a[i]={x,i};\n\tsort(a+1,a+n+1),bag[0]=n+1;\n\tfor(int i=n;i>=1;i--)\n\t\tfor(int k=s/2+a[i].first;k>=a[i].first;k--)\n\t\t\tif(bag[k-a[i].first]&&!bag[k]) bag[k]=i;\n\tfor(int i=1e5;i>=0;i--)\n\t\tif(bag[i]) {mx=i;break;}\n\twhile(mx) ans[++tail]=a[bag[mx]].second,mx=mx-a[bag[mx]].first;\n\tprintf(\"%d\\n\",tail);\n\tfor(int i=1;i<=tail;i++) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1609895130,
        "uid": 29354,
        "name": "CodyTheWolf",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4664 \u3010[BalticOI 2008]\u9009\u4e3e Hard\u3011"
    },
    {
        "content": "\u5176\u4ed6\u4eba\u7684\u65b9\u6cd5\u90fd\u597d\u9ebb\u70e6\u554a\u2026\u54b1\u5199\u4e2a\u7b80\u4ecb\u4e00\u70b9\u7684\uff1f\n\n> $n$ \u4e2a\u653f\u515a\u8981\u7ec4\u6210\u4e00\u4e2a\u8054\u5408\u5185\u9601\uff0c\u6bcf\u4e2a\u515a\u90fd\u6709\u81ea\u5df1\u7684\u5e2d\u4f4d\u6570\u3002 \n>\n> \u73b0\u5728\u5e0c\u671b\u4f60\u627e\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u4f60\u9009\u4e2d\u7684\u515a\u7684\u5e2d\u4f4d\u6570\u8981\u5927\u4e8e\u603b\u6570\u7684\u4e00\u534a\uff0c\u5e76\u4e14\u8054\u5408\u5185\u9601\u7684\u5e2d\u4f4d\u6570\u8d8a\u591a\u8d8a\u597d\u3002 \n>\n> \u5bf9\u4e8e\u4e00\u4e2a\u8054\u5408\u5185\u9601\uff0c\u5982\u679c\u67d0\u4e2a\u653f\u515a\u9000\u51fa\u540e\uff0c\u5176\u5b83\u515a\u7684\u5e2d\u4f4d\u4ecd\u5927\u4e8e\u603b\u6570\u7684\u4e00\u534a\uff0c\u5219\u8fd9\u4e2a\u653f\u515a\u88ab\u79f0\u4e3a\u662f\u591a\u4f59\u7684\uff0c\u8fd9\u662f\u4e0d\u5141\u8bb8\u7684\u3002\n>\n> \u6c42\u6700\u5927\u5e2d\u4f4d\u5e76\u6784\u9020\u4e00\u7ec4\u89e3\u3002\n>\n> $1\\leq n\\leq 300,1\\leq m\\leq 10^5$ \u3002\n\n\u53d1\u73b0\u5012\u7740\u8d2a\u5fc3\u5e76\u4e0d\u662f\u5bf9\u7684\u2026\u867d\u7136\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u53d1\u73b0 $O(nm)$ \u53ef\u8fc7\uff0c\u4f46\u662f\u4e00\u822c\u60c5\u51b5\u4e0b\u5f88\u96be\u60f3\u5230\u8981\u53bb\u80cc\u5305\uff0c\u56e0\u4e3a\u6709\u4e00\u4e2a\u300c\u591a\u4f59\u300d\u7684\u9650\u5236\u2026\n\n\u4f46\u662f\u53d1\u73b0\u5982\u679c\u4ece\u5927\u5230\u5c0f\u6392\u5b8c\u5e8f\u4e4b\u540e\u518d\u80cc\u5305\uff0c\u5f53\u524d\u52a0\u8fdb\u53bb\u7684\u4e1c\u897f\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\u3002\u6b64\u65f6\u5982\u679c\u51fa\u73b0\u628a\u8fd9\u4e2a\u4e1c\u897f\u62ff\u51fa\u6765\uff0c\u5269\u4e0b\u7684\u90fd\u4e00\u5b9a\u6bd4\u8fd9\u4e2a\u5927\u3002\u6240\u4ee5\u4e0d\u96be\u7406\u89e3\u8fd9\u4e48\u66f4\u65b0\u7684\u6b63\u786e\u6027\u3002\n\n\u8003\u8651\u5982\u4f55\u8bb0\u5f55\u65b9\u6848\u3002\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u79cd\u6743\u503c\u90fd\u5f00\u4e00\u4e2a `bitset`\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u6743\u503c\uff0c\u7b2c\u4e00\u6b21\u66f4\u65b0\u7684\u65f6\u5019\u987a\u4fbf\u66f4\u65b0 `bitset`\uff08\u6839\u636e\u5355\u8c03\u6027\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u5408\u6cd5\u7684\u90a3\u4e2a\uff09\u3002\u90a3\u4e48\u6700\u540e\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(nm+\\frac{nm}{w})$\u3002\u6ce8\u610f\u5230\u8fd9\u4e48\u5199\u7684\u610f\u4e49\u5728\u4e8e\uff0c\u901a\u8fc7\u805a\u548c\u5206\u6790\u53ef\u4ee5\u5f97\u77e5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6743\u503c $m$ \u81f3\u591a\u4f1a\u4e0e\u5176\u4ed6\u7684\u4ef7\u503c $or$ \u4e00\u6b21\uff0c\u6240\u4ee5\u672c\u8d28\u4e0a\u662f $O(\\frac{nm}{w})$ \u800c\u4e0d\u662f $O(\\frac{n^2m}{w})$\uff08\u867d\u7136\u4e5f\u80fd\u8fc7\u5c31\u662f\u4e86\uff09\u3002\n\n```cpp\nint f[MAXM] ;\nint half, sum ;\nint i, v, ans, n ; \nbitset <MAXN> b[MAXM] ;\npair<int,int> base[MAXN] ; \n\ninline bool cmp(pair<int,int> a, pair<int,int> b){ return a.fr > b.fr ;}\nint main(){\n\tcin >> n ; f[0] = 1 ;\n\tfor(i = 1; i <= n ; i ++){\n\t\tscanf(\"%d\", &base[i].fr) ;\n\t\tsum += base[i].fr, base[i].sc = i ; \n\t}\n\tsort(base + 1, base + n + 1, cmp) ; half = sum >> 1 ;\n\tfor(i = 1; i <= n ; i ++){\n\t\tfor (v = sum ; v >= base[i].fr ; v --){ \n\t\t\tif (!f[v] && f[v - base[i].fr])\n\t\t\t\tb[v] = b[v - base[i].fr], b[v].set(base[i].sc), f[v] = 1 ;    \n\t\t\tif (v > half && f[v] && v - base[i].fr <= half) ans = max(ans, v) ; \n\t\t\t\n\t\t}\n\t}\n\tcout << b[ans].count() << '\\n' ; \n\tfor (int i = 1 ; i <= n ; ++ i)\n\t\tif (b[ans][i]) cout << i << ' ' ; \n}\n```\n\n",
        "postTime": 1588062081,
        "uid": 328064,
        "name": "Irisany",
        "ccfLevel": 0,
        "title": "P4664 [BalticOI 2008]\u9009\u4e3e Hard"
    },
    {
        "content": "\u53c8\u4e00\u9053\u5361\u7a7a\u95f4\u9898\n\n\u8fd9\u9898\u53ea\u7ed932MB\u7a7a\u95f4\uff0c\u770b\u8d77\u6765\u4e0d\u662fDP\uff0c\u800c\u662f\u8d2a\u5fc3\n\n\u4f46\u662f\u5982\u679c\u4f60\u771f\u7684\u5199\u8d2a\u5fc3\uff0c\u4f1a\u53d1\u73b0\uff1aWA?!\n\n\u8fd9\u9898\u72b6\u6001\u53ef\u80fd\u6709\u70b9\u96be\u60f3\n\n\u9996\u5148\u5bf9\u6bcf\u4e2a\u515a\u6d3e\u6392\u5e8f\n\n\u8fd9\u6837\u5728\u76f8\u540c\u4eba\u6570\u4e0b\uff0c\u4eba\u6570\u6700\u5c11\u7684\u515a\u6d3e\u8981\u6709\u6700\u591a\u4eba\u6570\n\n\u8003\u8651```dp[i][j]```\u8868\u793a\u5df2\u7ecf\u8003\u8651\u524di\u4e2a\u515a\u6d3e\uff0c\u73b0\u5728\u5171\u6709j\u4e2a\u4eba\u80fd\u5f97\u5230\u4ec0\u4e48\u72b6\u6001\n\n\u8fd9\u91cc\u5408\u6cd5\u7684\u5b9a\u4e49\u662f\u80fd\u62fc\u51d1\u51fa\u8fd9\u4e2a\u6570\n\n\u5982\u679c\u6570\u503c\u4e3a0\uff0c\u8868\u793a\u975e\u6cd5\n\n\u5982\u679c\u4e3a1\uff0c\u8868\u793a\u4e0d\u9009\u7b2ci\u4e2a\u515a\u6d3e\n\n\u5982\u679c\u4e3a2\uff0c\u5219\u8868\u793a\u9009\u8fd9\u4e2a\u515a\u6d3e\n\n\u8f6c\u79fb\u65f6\uff0c\u9996\u5148\u8003\u8651\u4e0d\u9009\u8fd9\u4e2a\u515a\u6d3e\n\n\u7136\u540e\u8003\u8651\u9009\u8fd9\u4e2a\u515a\u6d3e\uff0c\u6c42\u51fa\u9009\u540e\u7684\u4eba\u6570\u8f6c\u79fb\u5c31\u884c\n\n\u5982\u679c\u8003\u8651\u9009\u5f53\u524d\u515a\u6d3e\uff0c\u5c31\u5224\u65ad\u5f53\u524d\u72b6\u6001\u662f\u5426\u4e3a\u5408\u6cd5\u89e3\uff0c\u5982\u679c\u5408\u6cd5\uff0c\u4e0e\u5f53\u524d\u6700\u4f18\u89e3\u6bd4\u8f83\uff0c\u53d6\u66f4\u4f18\n\n\u5728\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\uff0c\u4e0a\u4e00\u4e2a\u515a\u6d3e\u662f\u5426\u9009\u5e76\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u53ea\u8981\u80fd\u51d1\u51fa\u6765\u5c31\u53ef\u4ee5\u8f6c\u79fb\n\n\u6700\u540e\u5229\u7528\u8bb0\u5f55\u7684\u4fe1\u606f\uff0c\u5728dp\u6570\u7ec4\u91cc\u8df3\u5c31\u80fd\u5f97\u5230\u65b9\u6848\n\n\u8fd9\u5c31\u662f\u524d\u9762\u8bb0\u5f551\u548c2\u7684\u539f\u56e0\uff0c\u53ef\u4ee5\u628adp\u6570\u7ec4\u548c\u524d\u9a71\u6570\u7ec4\u538b\u7f29\u5230\u4e00\u8d77\n\n\u4e5f\u53ef\u4ee5\u8bd5\u8bd5\u6309\u4f4d\u538b\u7f29\u7701\u7a7a\u95f4\n\n\u8fd9\u6837\u6570\u7ec4\u5927\u5c0f\u4e0d\u4f1a\u7206\u7a7a\u95f4\uff0c\u80fd\u591f\u901a\u8fc7\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N=302,M=100002;\nstruct group{\n\tint num,id;\n};\nbool operator<(group a,group b){\n\treturn a.num>b.num;\n}\ngroup list[N];\nint n;\nchar pr[N][M];\nint termid,termcnt;\nint sum;\nint cnt;\nint ans[N];\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>list[i].num;\n\t\tlist[i].id=i;\n\t\tsum+=list[i].num;\n\t}\n\tsort(list+1,list+n+1);\n\tpr[0][0]=1;\n    //\u521d\u59cb\u72b6\u6001\uff0c\u53ef\u4ee5\u770b\u51fa\u4e0d\u4f1a\u5bfc\u81f4\u540e\u9762\u8df3\u7684\u65f6\u5019\u51fa\u95ee\u9898\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<=sum;j++){\n\t\t\tif(pr[i-1][j]){\n\t\t\t\tpr[i][j]=1;\n\t\t\t}else{\n\t\t\t\tpr[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tfor(int j=0;j<=sum-list[i].num;j++){\n\t\t\tif(pr[i-1][j]){\n\t\t\t\tpr[i][list[i].num+j]=2;\n\t\t\t\tif(j<=sum/2&&list[i].num+j>sum/2){\n\t\t\t\t\tif(termcnt<list[i].num+j){\n\t\t\t\t\t\ttermid=i;\n\t\t\t\t\t\ttermcnt=list[i].num+j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=termid,j=termcnt;i>0;i--){\n\t\tif(pr[i][j]==2){\n\t\t\tans[cnt++]=list[i].id;\n\t\t\tj-=list[i].num;\n\t\t}\n        //\u5426\u5219\u8868\u793a\u6ca1\u9009\n\t}\n\tcout<<cnt<<endl;\n\tfor(int i=0;i<cnt;i++){\n\t\tcout<<ans[i]<<\" \";\n\t}\n\tcout<<endl;\n}\n```",
        "postTime": 1553436309,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4664 \u3010[BalticOI 2008]\u9009\u4e3e\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u505a\u6cd5\u8ddf[\u8fd9\u9053\u9898](https://www.luogu.org/problem/P4394)\u5f88\u50cf\uff0c~~\u53cc\u500d\u7ecf\u9a8c\uff1f~~\uff0c\u53ef\u4ee5\u5177\u4f53\u53c2\u8003\u8fd9\u9053\u9898\uff0c\u4e0d\u540c\u7684\u662f\u8f93\u51fa\u5177\u4f53\u65b9\u6848\u3002\u8f93\u51fa\u65b9\u6848\u6211\u4eec\u5229\u7528\u65b0\u7684\u6570\u7ec4$mem[i][j]$\u8868\u793a\u524d$i$\u4e2a\u4eba\u4e2d\u9009\u53d6\u7684\u586b\u6ee1$j$\u4e2a\u80cc\u5305\u6700\u540e\u4e00\u4e2a\u9009\u53d6\u7684\u662f\u54ea\u4e2a\u7269\u54c1\uff0c\u6700\u540e\u6211\u4eec\u8fdb\u884c\u4e00\u6b21\u9012\u5f52\uff0c\u5229\u7528$vector$\u4ece\u524d\u5f80\u540e\u8bb0\u5f55\u6bcf\u6b21\u9009\u53d6\u7684\u65b9\u6848\u5c31\u597d\uff0c\u81f3\u4e8e\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u6bcf\u6b21\u627e$dg([i-1][j-v[i]],j-v[i])$\u5373\u53ef  \n\n------------\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u88ab\u5361\u7a7a\u95f4\u4e86  \n\u8fd9\u91cc\u6211\u4eec\u501f\u9898\u89e3\u7684\u65b9\u6848\u7528 $char$\u578b\u5b9a\u4e49$mem$\u6570\u7ec4\uff0c\u5c31\u53ef\u8fc7\n\n\n------------\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch;\n\tdo{ch=getchar();if(ch=='-')f=-1;}while(ch>'9'||ch<'0');\n\tdo{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n\treturn f*x;\n}\nvector<int> q;\nstruct data{\n\tint v,h;\n}a[310];\nint comp(const data a,const data b)\n{\n\treturn a.v>b.v;\n}\nint n,m,f[100010],sum;\nchar mem[310][100010];\nvoid dg(char i,int j)\n{\n\tif (i==0) return ;\n\tdg(mem[i-1][j-a[i].v],j-a[i].v);\t\n\tq.push_back(a[i].h);\n\treturn;\n}\nint main()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\ta[i].h=i;\n\t\ta[i].v=read();\n\t\tsum+=a[i].v;\n\t}\n\tsort(a+1,a+n+1,comp);\n\tf[0]=0;\n\tint ans=0,book1=0,book2=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=0;j<=sum;j++) mem[i][j]=mem[i-1][j];//\u4e0d\u9009i\u4ef6\u7269\u54c1\n\t\tfor (int j=sum;j>=a[i].v;j--)//\u9009\n\t\t{\n\t\t\tif (f[j]<f[j-a[i].v]+a[i].v)\n\t\t\t{\n\t\t\t\tf[j]=f[j-a[i].v]+a[i].v;\n\t\t\t\tmem[i][j]=i;\n\t\t\t}\n            //\u66f4\u65b0\u7b54\u6848\n\t\t\tif (ans<f[j]&&f[j]>sum/2&&f[j]-a[i].v<=sum/2)\n\t\t\t{\n\t\t\t\tans=f[j];\n\t\t\t\tbook1=i;\n\t\t\t\tbook2=j;\n\t\t\t}\n\t\t}\n\t}\n    //\u9012\u5f52\n\tdg(book1,book2);\n\tcout<<q.size()<<endl;\n\tfor (int i=0;i<q.size();i++) cout<<q[i]<<\" \";\n\tcout<<endl;\n}\n```\n",
        "postTime": 1572850619,
        "uid": 16035,
        "name": "huangxuhan",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4664 \u3010[BalticOI 2008]\u9009\u4e3e\u3011"
    }
]