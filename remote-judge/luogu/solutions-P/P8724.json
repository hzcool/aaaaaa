[
    {
        "content": "\u663e\u7136\uff0c\u662f\u4e00\u9053\u5206\u5c42\u56fe\u677f\u9898\uff0c\u4f46\u9ec4\u662f\u4e0d\u662f\u6709\u70b9\u8fc7\u5206\u4e86\u3002\n\n\u5982\u679c\u4e00\u6761\u8def\u6709\u9650\u9ad8\u6746\u5c31\u4e0d\u80fd\u8d70\u3002\u4e00\u5171\u53ef\u4ee5\u62c6\u9664\u4e24\u9053\u9650\u9ad8\u6746\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u4e09\u5c42\u56fe\u3002\u6bcf\u4e00\u5c42\u56fe\u4e2d\u7684\u9053\u8def\u8868\u793a\u4e0d\u62c6\u9664\u9650\u9ad8\u6746\u7684\u9053\u8def\uff0c\u5c42\u4e0e\u5c42\u4e4b\u95f4\u5c06\u8fd9\u6761\u9053\u8def\u4e0a\u7684\u9650\u9ad8\u6746\u62c6\u9664\u3002\u6bcf\u5411\u4e0b\u8d70\u4e00\u5c42\uff0c\u5c31\u76f8\u5f53\u4e8e\u62c6\u9664\u4e86\u4e00\u6761\u9650\u9ad8\u6746\u3002\n\n\u5efa\u56fe\u90e8\u5206\uff1a\u5982\u679c\u8fd9\u6761\u9053\u8def\u6ca1\u6709\u9650\u9ad8\u6746\uff0c\u5c31\u5728\u5c31\u5728\u6bcf\u4e00\u5c42\u4e2d\u76f8\u8fde\uff1b\u6709\u9650\u9ad8\u6746\u5c31\u5728\u76f8\u90bb\u4e24\u5c42\u8fde\u8fb9\u3002\n\n#### \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nstruct a1{\n\tint nex,to,dis;\n}x[4000001];\nint dis[400001],head[400001],p=0,v[400001];\nvoid add(int a,int b,int c){\n\tx[++p].nex=head[a];\n\tx[p].to=b;\n\tx[p].dis=c;\n\thead[a]=p;\n\treturn ;\n}\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-48;ch=getchar();}\n\treturn x*f;\n}\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >z;\nint pre[1000001];\nsigned main(){\n\tint n,m;\n\tn=read();m=read();\n\tfor(int q=1;q<=m;q++){\n\t\tint a,b,c,d;\n\t\ta=read();b=read();c=read();d=read();\n\t\tif(d==1){//\u6709\u9650\u9ad8\u6746\n\t\t\tadd(a,b+n,c);//\u7b2c\u4e00\u5c42\u548c\u7b2c\u4e8c\u5c42\u76f8\u8fde\uff0c\u6ce8\u610f\u662f\u4ece\u4e0a\u5f80\u4e0b\u8fde\uff0c\u7b2c\u4e00\u5c42\u4e2d\u7684a\u548c\u7b2c\u4e8c\u5c42\u4e2d\u7684b\u76f8\u8fde\uff0c\u7b2c\u4e00\u5c42\u4e2d\u7684b\u548c\u7b2c\u4e8c\u5c42\u4e2d\u7684a\u76f8\u8fde\u3002\n\t\t\tadd(b,a+n,c);\n\t\t\tadd(b+n,a+n+n,c);//\u540c\u4e0a\n\t\t\tadd(a+n,b+n+n,c);\n\t\t}\n\t\telse{//\u65e0\u9650\u9ad8\u6746\n\t\t\tadd(a,b,c);\n\t\t\tadd(b,a,c);\n\t\t\tadd(b+n,a+n,c);\n\t\t\tadd(a+n,b+n,c);\n\t\t\tadd(b+n+n,a+n+n,c);\n\t\t\tadd(a+n+n,b+n+n,c);\n\t\t}\n\t}\n\tfill(dis,dis+1+n*3,1e9);//\u4e09\u5c42\u56fe\u4e09\u500d\u6570\u7ec4\u521d\u59cb\u5316\n\tz.push(make_pair(0,1));\n\tdis[1]=0;\n\twhile(!z.empty()){\n\t\tint i=z.top().second;\n\t\tz.pop();\n\t\tif(v[i])continue;\n\t\tv[i]=1;\n\t\tfor(int q=head[i];q;q=x[q].nex){\n\t\t\tint o=x[q].to;\n\t\t\tif(dis[o]>dis[i]+x[q].dis){\n\t\t\t\tdis[o]=dis[i]+x[q].dis;\n\t\t\t\tpre[o]=i;\n\t\t\t\tz.push(make_pair(dis[o],o));\n\t\t\t}\n\t\t}\n\t}//\u5355\u6e90\u6700\u77ed\u8def\u6a21\u677f\n\tcout<<dis[n]-min(dis[n*3],min(dis[n],dis[n*2]));;//\u6ce8\u610f\u6700\u77ed\u8def\u4e0d\u4e00\u5b9a\u8981\u62c6\u4e24\u4e2a\u9650\u9ad8\u6746\n\treturn 0;\n}\n```\n",
        "postTime": 1678625935,
        "uid": 649108,
        "name": "Shanganze",
        "ccfLevel": 5,
        "title": "P8724"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8724)  \n### \u9898\u76ee\u5927\u610f\uff1a\n\u7ed9\u5b9a\u4e00\u4e2a $ n $\uff0c$ m $\uff0c\u8868\u793a\u8def\u53e3\u6570\u91cf\u548c\u9053\u8def\u7684\u6bb5\u6570\u3002\u63a5\u4e0b\u6765 $ m $ \u884c\uff0c\u6bcf\u884c\u56db\u4e2a\u6574\u6570 $ a $\uff0c$ b $\uff0c$ c $\uff0c$ d $\uff0c\u8868\u793a\u8def\u53e3 $ a $ \u548c\u8def\u53e3 $ b $ \u4e4b\u95f4\u6709\u4e00\u6bb5\u957f\u5ea6\u4e3a $ c $ \u7684\u9053\u8def\u3002\u5982\u679c $ d $ \u4e3a $ 0 $\uff0c\u8868\u793a\u8fd9\u6bb5\u9053\u8def\u4e0a\u6ca1\u6709\u9650\u9ad8\u6746, \u5982\u679c $ d $ \u4e3a $ 1 $\uff0c\u8868\u793a\u8fd9\u6bb5\u9053\u8def\u4e0a\u6709\u9650\u9ad8\u6746(\u4e0d\u80fd\u8d70)\u3002\u6c42\u51fa\u62c6\u9664\u4e24\u4e2a\u6216\u4e00\u4e2a\u9650\u9ad8\u6746\u540e\uff0c\u4ece $ 1 $ \u5230 $ n $ \u6700\u591a\u53ef\u4ee5\u51cf\u5c11\u591a\u5c11\u8ddd\u79bb\u3002\n### \u5927\u81f4\u601d\u8def\uff1a\n\u548c\u5148\u524d\u7684\u6700\u77ed\u8def\u4e00\u6837\u5efa\u8fb9\uff0c\u518d\u5b58\u4e00\u4e0b\u6709\u6ca1\u6709\u9650\u9ad8\u6746\uff0c\u56fe\u5c31\u5efa\u597d\u4e86\u3002\u6ce8\u610f\u8981\u5efa\u53cc\u5411\u8fb9\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u904d\u5386\u56fe\uff0c\u6c42\u51fa\u62c6\u9664\u4e00\u4e2a\u6216\u4e24\u4e2a\u9650\u9ad8\u6746\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u7528\u6ca1\u6709\u62c6\u9664\u9650\u9ad8\u6746\u7684\u6700\u77ed\u8ddd\u79bb\u51cf\u53bb\u5373\u53ef\u3002\n### \u672c\u9898\u6838\u5fc3\uff1a\n\u5982\u4f55\u6c42\u62c6\u9664\u4e00\u4e2a\u6216\u4e24\u4e2a\u9650\u9ad8\u6746\u7684\u6700\u77ed\u8ddd\u79bb\u3002  \n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8bb0\u5f55\u5f53\u524d\u62c6\u4e86\u591a\u5c11\u4e2a\u9650\u9ad8\u6746\uff0c\u518d\u5224\u65ad\u4e00\u4e0b\u5f53\u524d\u662f\u5426\u53ef\u4ee5\u62c6\u6746\uff0c\u52a0\u4e0a\u6700\u77ed\u8def\u7684\u5224\u65ad\u3002\u7528\u5c01\u88c5\u7ed3\u6784\u4f53\u5b58\u4e0b\u6765\uff0c\u6309\u8d70\u7684\u9053\u8def\u7684\u957f\u5ea6\u6392\u4e0b\u5e8f\uff0c\u8dd1\u4e00\u904d dij \u5373\u53ef\u3002\u4e00\u4e9b\u5c0f\u7ec6\u8282\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n### \u6838\u5fc3\u4ee3\u7801:\n```cpp\nvoid dij()\n{\n\tmemset(dis , 0x3f , sizeof(dis)); //\u521d\u59cb\u5316 \n\tdis[1][0] = 0; //\u8bbe\u4e00\u7ef4\u4e3ax\uff0c\u4e8c\u7ef4\u4e3ay\uff0c\u6307\u7684\u662f\u62c6\u4e86y\u4e2a\u6746\u540e\u5230x\u7684\u6700\u77ed\u8ddd\u79bb \n\tq.push(Node(1 , 0 , 0)); //\u5c01\u88c5\u7ed3\u6784\u4f53\u5c0f\u6839\u5806 \n\twhile(!q.empty())\n\t{\n\t\tint x = q.top().x; //x\u662f\u5f53\u524d\u8282\u70b9 \n\t\tint k = q.top().k; //k\u662f\u5f53\u524d\u62c6\u4e86\u591a\u5c11\u4e2a\u6746 \n\t\tq.pop();\n\t\tif(vis[x][k]) continue; // vis\u6570\u7ec4\u542b\u4e49\u548cdis\u6570\u7ec4\u4e00\u6837\uff0c\u5b58\u7684\u662f\u662f\u5426\u8bbf\u95ee\u8fc7 \n\t\tvis[x][k] = 1;\n\t\tfor(register int i = head[x] ; i ; i = e[i].net) // \u94fe\u5f0f\u524d\u5411\u661f\u904d\u5386 \n\t\t{\n\t\t\tint to = e[i].to , w = e[i].w , f = e[i].xz; // f\u662f\u662f\u5426\u6709\u6746\uff0c\u6709\u5219k\u52a01 \n\t\t\tif(k + f <= 2 && dis[x][k] + w < dis[to][k + f]) //\u5f53\u524d\u62c6\u7684\u6746\u4e0d\u80fd\u8d85\u8fc7\u9650\u5236 \n\t\t\t{\n\t\t\t\tdis[to][k + f] = dis[x][k] + w;\n\t\t\t\tq.push(Node(to , k + f , dis[to][k + f]));\n\t\t\t}\n\t\t}\n\t}\n}\n```\n### \u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\nusing namespace std;\ninline int read()\n{\n\tint s = 0 , w = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-') w = -1; ch = getchar();};\n\twhile(ch >= '0' && ch <= '9'){s = s * 10 + ch - '0'; ch = getchar();};\n\treturn s * w;\n}\nint n , m , cnt , sum1 , sum2;\nstruct node\n{\n\tint to , net , w , xz;\n\tnode(){xz = 0;} //\u521d\u59cb\u5316\u6807\u8bb0\u6570\u7ec4 \n}e[(int)2e5 + 10];\nint head[(int)1e4 + 10] ,  dis[(int)1e4 + 10][5] , vis[(int)1e4 + 10][5];\nstruct Node // \u5c01\u88c5\u7ed3\u6784\u4f53\u5c0f\u6839\u5806 \n{\n\tint x , k , v;\n\tNode(int X , int K , int V)\n\t{x = X , k = K , v = V;}\n};\nbool operator<(const Node &ix , const Node &iy)\n{\n\treturn ix.v > iy.v;\n}\npriority_queue <Node> q;\ninline void add(int x , int y , int z , int f) //\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff0c\u4e5f\u53ef\u4ee5\u7528vector\u5b58 \n{\n\te[++cnt].w = z;\n\te[cnt].to = y;\n\te[cnt].xz = f;\n\te[cnt].net = head[x];\n\thead[x] = cnt;\n}\nvoid dij()\n{\n\tmemset(dis , 0x3f , sizeof(dis)); //\u521d\u59cb\u5316 \n\tdis[1][0] = 0; //\u8bbe\u4e00\u7ef4\u4e3ax\uff0c\u4e8c\u7ef4\u4e3ay\uff0c\u6307\u7684\u662f\u62c6\u4e86y\u4e2a\u6746\u540e\u5230x\u7684\u6700\u77ed\u8ddd\u79bb \n\tq.push(Node(1 , 0 , 0)); //\u5c01\u88c5\u7ed3\u6784\u4f53\u5c0f\u6839\u5806 \n\twhile(!q.empty())\n\t{\n\t\tint x = q.top().x; //x\u662f\u5f53\u524d\u8282\u70b9 \n\t\tint k = q.top().k; //k\u662f\u5f53\u524d\u62c6\u4e86\u591a\u5c11\u4e2a\u6746 \n\t\tq.pop();\n\t\tif(vis[x][k]) continue; //vis\u6570\u7ec4\u542b\u4e49\u548cdis\u6570\u7ec4\u4e00\u6837\uff0c\u5b58\u7684\u662f\u662f\u5426\u8bbf\u95ee\u8fc7 \n\t\tvis[x][k] = 1;\n\t\tfor(register int i = head[x] ; i ; i = e[i].net) //\u94fe\u5f0f\u524d\u5411\u661f\u904d\u5386 \n\t\t{\n\t\t\tint to = e[i].to , w = e[i].w , f = e[i].xz; // f\u662f\u662f\u5426\u6709\u6746\uff0c\u6709\u5219k\u52a01 \n\t\t\tif(k + f <= 2 && dis[x][k] + w < dis[to][k + f]) //\u5f53\u524d\u62c6\u7684\u6746\u4e0d\u80fd\u8d85\u8fc7\u9650\u5236 \n\t\t\t{\n\t\t\t\tdis[to][k + f] = dis[x][k] + w;\n\t\t\t\tq.push(Node(to , k + f , dis[to][k + f]));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn = read() , m = read();\n\tfor(register int i = 1 ; i <= m ; i++)\n\t{\n\t\tint u = read() , v = read() , z = read() , f = read();\n\t\tadd(u , v , z , f); //\u5efa\u53cc\u5411\u8fb9 \n\t\tadd(v , u , z , f);\n\t}\n\tdij();\n\tcout << dis[n][0] - min(dis[n][1] , dis[n][2]); //\u6709\u53ef\u80fd\u6709\u53ea\u6709\u4e00\u4e2a\u6746\u7684\u60c5\u51b5\uff0c\u53d6\u6700\u5c0f\u503c \n\treturn 0;\n}\n```\n",
        "postTime": 1677237719,
        "uid": 753402,
        "name": "wtwk33",
        "ccfLevel": 5,
        "title": "P8724 [\u84dd\u6865\u676f 2020 \u7701 AB3] \u9650\u9ad8\u6746 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u901a\u8fc7\u5efa\u7acb**\u5206\u5c42\u56fe**\u6765\u6c42\u89e3\uff0c[\u5206\u5c42\u56fe\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P4568)\u3002\n\n\u5206\u5c42\u56fe\u5e76\u4e0d\u96be\uff0c\u53ea\u9700\u8981\u628a\u56fe\u5efa\u597d\u5373\u53ef\u3002\n\n\u4e00\u5171\u53ef\u4ee5\u62c6\u4e24\u6761\u8def\u7684\u9650\u9ad8\u6746\uff0c\u90a3\u6211\u4eec\u5c31\u5efa\u4e09\u5c42\u56fe\uff0c\u5206\u522b\u662f\u4e0d\u62c6\u7684\uff0c\u62c6\u4e00\u6761\u7684\uff0c\u62c6\u4e24\u6761\u7684\u3002\u6bcf\u5411\u4e0b\u8d70\u4e00\u5c42\uff0c\u5c31\u7b49\u4e8e\u62c6\u4e86\u4e00\u6761\u9650\u9ad8\u6746\u3002\n\n\u5148\u770b\u6ca1\u6709\u6746\u7684\u60c5\u51b5\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u662f\u4e0d\u4f1a\u591a\u62c6\u7684\uff0c\u4e4b\u524d\u62c6\u4e86\u51e0\u6761\u8fd8\u662f\u51e0\u6761\uff0c\u6545\u6bcf\u5c42\u5185\u90e8\u6b63\u5e38\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u5f53\u6709\u6746\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u8054\u901a\u6bcf\u4e00\u5c42\u7684\u4e0a\u4e0b\u3002\u6ce8\u610f\u6709\u4e00\u79cd\u60c5\u51b5\u662f\u62c6\u800c\u4e0d\u8d70\uff0c\u9700\u8981\u989d\u5916\u679a\u4e3e\u4e00\u6b21\u5efa\u51fa\u8fb9\uff0c\u4f46\u662f\u8fd9\u9898\u4e0d\u7528\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u3002\u56e0\u4e3a\u4f60\u62c6\u4e86\u4e0d\u8d70\u4e0d\u662f\u767d\u767d\u6d6a\u8d39\u4e00\u6b21\u673a\u4f1a\uff1f\u5f53\u7136\u505a\u522b\u7684\u5206\u5c42\u56fe\u9898\u7684\u65f6\u5019\u8981\u5c0f\u5fc3\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u7136\u540e\u8dd1\u4e00\u904d Dijkstra \u5373\u53ef\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u8fd8\u6709\u6ce8\u610f\u8f93\u51fa\u7684\u65f6\u5019\uff0c\u4e24\u6839\u90fd\u62c6\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u6545\u6700\u4f18\u89e3\u5e94\u8be5\u662f\u4e09\u5c42\u56fe\u7684\u7ec8\u70b9\u7684\u6700\u5c0f\u503c\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=1e6+10;\nconst int INF=0x3f3f3f3f;\nint num,ans;\nint n,m,s,t,k; \nstruct node{\n\tint id;\n\tint dist;\n\tnode()\n\t{\n\t\tid=0;dist=0;\n\t}\n\tnode(int c,int d)\n\t{\n\t\tid=c;dist=d;\n\t}\n\tbool operator < (const node &x)const\n\t{\n\t\treturn x.dist<dist;\n\t}\n};\npriority_queue<node> que;\nstruct linkstar{//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n\tint to,from;\n\tint w;\n\tint next;\n}edge[11000000];\nint head[11000000];\nint dis[11000000];\nbool vis[11000000];\nint escnt;\nvoid add(int from,int to,int w)\n{\n\tedge[escnt].from=from;\n\tedge[escnt].to=to;\n\tedge[escnt].w=w;\n\tedge[escnt].next=head[from];\n\thead[from]=escnt;\n\tescnt++;\n}\nvoid Dijkstra(int u)//Dijkstra\u6700\u77ed\u8def\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[u]=0;\n\tque.push(node(u,0));\n\twhile(que.size())\n\t{\n\t\tnode cp=que.top();\n\t\tque.pop();\n\t\tif(vis[cp.id]) continue;\n\t\tvis[cp.id]=true;\n\t\tfor (int i=head[cp.id];i!=-1;i=edge[i].next)\n\t\t{\n\t\t\tif(dis[edge[i].to]>dis[cp.id]+edge[i].w)\n\t\t\t{\n\t\t\t\tdis[edge[i].to]=dis[cp.id]+edge[i].w;\n\t\t\t\t//cout<<dis[edge[i].to]<<endl;\n\t\t\t\tque.push(node(edge[i].to,dis[edge[i].to]));\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tcin>>n;\n\tcin>>m;\n\tfor (int i=0;i<m;i++)\n\t{\n\t\tint x,y,w;\n\t\tbool flag=0;\n\t\tcin>>x>>y>>w;\n\t\tcin>>flag;\n\t\tif(flag)//\u5982\u679c\u62c6\uff0c\u5c31\u8054\u901a\u4e0a\u4e0b\u4e24\u5c42\n\t\t{\n\t\t\tadd(x,y+n,w);\n\t\t\tadd(y,x+n,w);\n\t\t\tadd(x+n,y+n+n,w);\n\t\t\tadd(y+n,x+n+n,w);\n\t\t}\n\t\telse//\u5982\u679c\u4e0d\u62c6\uff0c\u5c31\u5728\u672c\u5c42\u5185\u8fde\u8fb9\n\t\t{\n\t\t\tadd(x,y,w);\n\t\t\tadd(y,x,w);\n\t\t\tadd(x+n,y+n,w);\n\t\t\tadd(y+n,x+n,w);\n\t\t\tadd(x+n+n,y+n+n,w);\n\t\t\tadd(y+n+n,x+n+n,w);\t\n\t\t}\n\t}\n\tDijkstra(1);\n\tcout<<dis[n]-min(dis[n+n+n],min(dis[n+n],dis[n]))<<endl;\n\treturn 0;\n}\n\n\n```\n\n\n\n\n\n",
        "postTime": 1683375364,
        "uid": 409774,
        "name": "Maysoul",
        "ccfLevel": 3,
        "title": "P8724"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u5f88\u7b80\u5355\u3002\n\n\u7528\u6700\u77ed\u8def\u53ef\u4ee5\u7b80\u5355\u901a\u8fc7\u3002\n\n\u5173\u4e8e SPFA\uff0c\u4ed6\u6b7b\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u6765\u7528 Dijkstra \u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u7528\u62c6\u9650\u9ad8\u6746\u540e\u7684\u6700\u77ed\u8ddd\u79bb\u51cf\u4e0d\u62c6\u9650\u9ad8\u6746\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u600e\u4e48\u8bb0\u5f55\u62c6\u7684\u9650\u9ad8\u6746\u5462\uff1f\n\n\u5176\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u62c6\u4e00\u4e2a\u9650\u9ad8\u6746\u540e\u52a0 $n$\u3002\u6309\u7167\u9898\u76ee\uff0c\u6700\u591a\u53ef\u4ee5\u62c6\u4e24\u4e2a\u9650\u9ad8\u6746\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u5efa\u8def\u65f6\u8ba9\u6709\u9650\u9ad8\u6746\u7684\u8def\u5230\u8def\u53e3\u7f16\u53f7\u52a0 $n$ \u7684\u8def\u53e3\u3002\u518d\u5728\u52a0 $n$ \u7684\u8def\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u5230\u8def\u53e3\u7f16\u53f7\u52a0\u4e24\u4e2a $n$ \u7684\u8def\u53e3\u3002\u6700\u540e\uff0c\u518d\u505a\u6700\u77ed\u8def\u3002\n\n#### \u8ba9\u4eba\u6fc0\u52a8\u7684\u4ee3\u7801\u6765\u4e86\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint x,y;\n\tbool operator<(node l)const{\n\t\treturn l.y<y;\n\t}\n};\npriority_queue<node>qi;\nvector<node>vi[300005];\nint n,m,a,b,c,d,di[30005];\nbool vis[30005];\nvoid dij(){\n\tmemset(vis,false,sizeof(vis));\n\tmemset(di,127,sizeof(di));\n\tdi[1]=0;\n\tqi.push(node{1,0});\n\twhile(!qi.empty()){\n\t\tint x=qi.top().x;\n\t\tqi.pop();\n\t\tif(vis[x]){\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int i=0;i<vi[x].size();i++){\n\t\t\tint a=vi[x][i].x,b=vi[x][i].y;\n\t\t\tif(di[a]>di[x]+b){\n\t\t\t\tdi[a]=di[x]+b;\n\t\t\t\tqi.push(node{a,di[a]});\n\t\t\t}\n\t\t}\n\t\tvis[x]=true;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\tif(d==0){\n\t\t\tvi[a].push_back(node{b,c});\n\t\t\tvi[b].push_back(node{a,c});\n\t\t\tvi[a+n].push_back(node{b+n,c});\n\t\t\tvi[b+n].push_back(node{a+n,c});\n\t\t\tvi[a+n+n].push_back(node{b+n+n,c});\n\t\t\tvi[b+n+n].push_back(node{a+n+n,c});\n\t\t}\n\t\telse{\n\t\t\tvi[a].push_back(node{b+n,c});\n\t\t\tvi[b].push_back(node{a+n,c});\n\t\t\tvi[a+n].push_back(node{b+n+n,c});\n\t\t\tvi[b+n].push_back(node{a+n+n,c});\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tvi[a].push_back(node{a+n,0});\n\t\tvi[a+n].push_back(node{a+n+n,0});\n\t}\n\tdij();\n\tcout<<di[n]-min(di[n*2],di[n*3]);\n}\n```",
        "postTime": 1677915963,
        "uid": 380406,
        "name": "shenx989",
        "ccfLevel": 0,
        "title": "dijstra\u7b97\u6cd5"
    },
    {
        "content": "\u663e\u7136\u662f\u5206\u5c42\u56fe\u6700\u77ed\u8def\u7684\u677f\u5b50\u9898\uff0c\u62c6\u4e24\u6bb5\u9650\u9ad8\u6746\uff0c\u56e0\u6b64\u5efa 3 \u5c42\u56fe\u3002\n\n\u5982\u679c\u4e00\u6761\u9053\u8def\u6ca1\u6709\u9650\u9ad8\u6746\uff0c\u5219\uff1a\n\n- \u7b2c\u4e00\u5c42\u5728 $u, v$ \u4e4b\u95f4\u8fde\u53cc\u5411\u8fb9\n\n- \u7b2c\u4e8c\u5c42\u5728 $u, v$ \u4e4b\u95f4\u8fde\u53cc\u5411\u8fb9\n\n- \u7b2c\u4e09\u5c42\u5728 $u, v$ \u4e4b\u95f4\u8fde\u53cc\u5411\u8fb9\n\n\u5982\u679c\u4e00\u6761\u9053\u8def\u6709\u9650\u9ad8\u6746\uff0c\u5219\uff1a\n\n- \u7b2c\u4e00\u5c42 $u$ \u4e0e\u7b2c\u4e8c\u5c42 $v$ \u8fde\u8fb9\n\n- \u7b2c\u4e00\u5c42 $v$ \u4e0e\u7b2c\u4e8c\u5c42 $u$ \u8fde\u8fb9\uff08\u6ce8\u610f\u65e0\u5411\u56fe\uff0c\u4e00\u5b9a\u662f\u53cc\u5411\u8fb9\uff01\uff01\uff09\n\n- \u7b2c\u4e8c\u5c42 $u$ \u4e0e\u7b2c\u4e09\u5c42 $v$ \u8fde\u8fb9\n\n- \u7b2c\u4e09\u5c42 $v$ \u4e0e\u7b2c\u4e8c\u5c42 $u$ \u8fde\u8fb9\uff08\u6ce8\u610f\u65e0\u5411\u56fe\uff0c\u4e00\u5b9a\u662f\u53cc\u5411\u8fb9\uff01\uff01\uff09\n\n\u5f53\u7136\u5728\u5b9e\u9645\u8dd1\u6700\u77ed\u8def\u8def\u65f6\u4e0d\u9700\u8981\u660e\u786e\u5206\u5c42\uff0c\u7528 $u,u+n,u+2n$ \u8868\u793a\u8fd9\u4e09\u5c42\u7684\u8282\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u6ce8\u610f\u5230\u5c31\u7b97\u62c6\u4e86\u9650\u9ad8\u6746\u8d27\u8f66\u4e5f\u53ef\u80fd\u4e0d\u8d70\u90a3\u6761\u9053\u8def\uff0c\u6240\u4ee5\u76f8\u90bb\u4e24\u5c42\u76f4\u63a5\u5bf9\u5e94\u7684\u70b9\u4e5f\u9700\u8981\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a 0 \u7684\u8fb9\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct Edge\n{\n    int u, v, w, next;\n} e[1000005];\nstruct state\n{\n    int dis, v;\n    bool operator<(const state t) const\n    {\n        return dis > t.dis;\n    }\n};\nint n, m, pos, head[100005], dis[100005];\nbool vis[100005];\nvoid addEdge(int u, int v, int w)\n{\n    e[++pos] = {u, v, w, head[u]};\n    head[u] = pos;\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= m; i++)\n    {\n        int u, v, w, op;\n        scanf(\"%d%d%d%d\", &u, &v, &w, &op);\n        if (op & 1)\n        {\n            addEdge(u, v + n, w);\n            addEdge(v, u + n, w);\n            addEdge(u + n, v + 2 * n, w);\n            addEdge(v + n, u + 2 * n, w);\n        }\n        else\n        {\n            addEdge(u, v, w);\n            addEdge(v, u, w);\n            addEdge(u + n, v + n, w);\n            addEdge(v + n, u + n, w);\n            addEdge(u + 2 * n, v + 2 * n, w);\n            addEdge(v + 2 * n, u + 2 * n, w);\n        }\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        addEdge(i, i + n, 0);\n        addEdge(i + n, i + 2 * n, 0);\n    }\n    dij(1); // Dijkstra \u6700\u77ed\u8def\uff0c\u5c31\u4e0d\u7528\u8d34\u4e0a\u6765\u4e86\u5427\n    printf(\"%d\", dis[n] - dis[3 * n]); // dis[n] \u662f\u539f\u56fe\u6700\u77ed\u8def\n    return 0;\n}\n```\n\n\n",
        "postTime": 1672019707,
        "uid": 533854,
        "name": "CodingShark",
        "ccfLevel": 5,
        "title": "P8724 \u9898\u89e3"
    }
]