[
    {
        "content": "~~\u4e22\u4eba\u6839\u53f7\u5206\u6cbb\uff0c\u6253\u4e0d\u8fc7\u62c6\u4e00\u5806\u8be2\u95ee\u7684\u83ab\u961f~~\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u89c4\u907f\u83ab\u961f\u7684\u505a\u6cd5\n\n_____________________\n\n\n# \u672c\u9898\u9898\u89e3\n\n\u7ed9\u5b9a\u4e00\u9897\u6811\uff0c\u6811\u4e0a\u6bcf\u4e2a\u70b9\u6709\u70b9\u6743\uff0c\u8be2\u95eex\u548cy\u7684\u5b50\u6811\u5f53\u4e2d\u6709\u591a\u5c11\u5bf9\u70b9\u7684\u989c\u8272\u76f8\u7b49\uff0c\u652f\u6301\u6362\u6839\n\n\u4e0d\u8fc7\u6211\u4eec\u5f88\u5feb\u53d1\u73b0\u6362\u6839\u662f\u5047\u7684\u2026\u2026\uff0c\u6211\u4eec\u7528dfs\u5e8f\u628a\u8fd9\u9897\u6811\u62cd\u5e73\u6210\u4e00\u4e2a\u5e8f\u5217\n\n\u4e4b\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u65e0\u8bba\u6839\u5728\u54ea\u91cc\uff0c\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u53ea\u5bf9\u5e94\u7740\u4e24\u79cd\u8054\u901a\u5757\uff0c\u4e00\u79cd\u662f\u6839\u4e3a1\u65f6\u7684\u5b50\u6811\uff0c\u53e6\u4e00\u4e2a\u662f\u6240\u6709\u70b9\u5228\u53bb\u8fd9\u4e2a\u70b9\u7684\u4e00\u4e2a\u5b69\u5b50\u7684\u5b50\u6811\uff0c\u8fd9\u4e2a\u81ea\u884c\u753b\u56fe\u7406\u89e3\u4e00\u4e0b\u5373\u53ef\uff0c\u5e94\u8be5\u4e0d\u96be\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u96c6\u4e2d\u7cbe\u529b\u89e3\u51b3\u6ca1\u6709\u6362\u6839\u64cd\u4f5c\u65f6\u7684\u95ee\u9898\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6027\u8d28\uff0c\u5728\u8fd9\u9897\u6811\u4e0a\u51fa\u73b0\u6b21\u6570\u5927\u4e8e$\\sqrt{N}$\u7684\u989c\u8272\u6570\u76ee\u4e0d\u4f1a\u8d85\u8fc7$\\sqrt{N}$\u79cd\n\n\u90a3\u4e48\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u79cd\u66b4\u529b\u62fc\u5728\u4e00\u8d77\uff0c\u4e00\u79cd\u662f$O(cntm)$\u7684\u66b4\u529b\uff0c\u5176\u4e2d$cnt$\u662f\u989c\u8272\u6570\u76ee\uff0c\u53e6\u4e00\u79cd\u662f$O(\\sum_{i}cnt(i)^2+m\\sqrt{n})$\u7684\u66b4\u529b\uff0c\u5176\u4e2d$cnt(i)$\u662f\u6bcf\u4e00\u79cd\u989c\u8272\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u5bf9\u6240\u6709\u51fa\u73b0\u6b21\u6570\u5927\u4e8e$\\sqrt{N}$\u7684\u989c\u8272\u8dd1\u7b2c\u4e00\u79cd\u66b4\u529b\u800c\u5bf9\u6240\u6709\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e$\\sqrt{N}$\u7684\u989c\u8272\u8dd1\u7b2c\u4e8c\u79cd\u66b4\u529b\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u590d\u6742\u5ea6\u4e3a$O(m\\sqrt{n})$\u4f18\u79c0\u505a\u6cd5\n\n\n\u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u522b\u4ecb\u7ecd\u4e24\u79cd\u66b4\u529b\n\n## case1\uff1a\u5f53\u989c\u8272\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u6839\u53f7n\u65f6\n\n~~\u606d\u559c\u4f60\u53d1\u73b0\u4e86\u4e00\u9053\u601d\u535a\u9898~~\n\n\u679a\u4e3e\u6bcf\u4e2a\u989c\u8272\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u4ee4$siz(i)$\u8868\u793a$i$\u8fd9\u4e2a\u5b50\u6811\u91cc\u6709\u591a\u5c11\u4e2a\u70b9\u7684\u989c\u8272\u662f\u6211\u4eec\u679a\u4e3e\u7684\u989c\u8272\uff0c\u90a3\u4e48\u8fd9\u4e2a\u989c\u8272\u5bf9\u4e00\u4e2a\u8be2\u95ee$(x,y)$\u7684\u8d21\u732e\u5c31\u662f$siz(x)siz(y)$\n\n\u7136\u540e\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5927\u4e8e$\\sqrt{n}$\u7684\u989c\u8272\u8dd1\u4e00\u904d\u521a\u624d\u7684\u66b4\u529b\u5c31\u884c\u4e86\uff0c\u590d\u6742\u5ea6$O((n+m)\\sqrt{n})$\n\n## case 2:\u5f53\u989c\u8272\u7684\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e\u6839\u53f7n\u65f6\n\n~~\u606d\u559c\u4f60\u53d1\u73b0\u4e86\u53e6\u4e00\u9053\u601d\u535a\u9898~~\n\n\u6b64\u65f6\u6211\u4eec\u53ea\u9700\u8981\u60f3\u4e00\u4e2a$O(\\sum_{i}cnt(i)^2)$\u7684\u66b4\u529b\u5c31\u884c\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u540c\u8272\u7684\u70b9\u5bf9$(x,y)$\u62c9\u51fa\u6765\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u8be2\u95ee\uff0c\u8be2\u95ee\u7684\u9650\u5236\u662f\u5b50\u6811\uff0c\u4e00\u4e2a\u5b50\u6811\u5728dfs\u5e8f\u4e0a\u88ab\u6620\u5c04\u4e3a\u4e86\u4e00\u6bb5\u533a\u95f4\uff0c\u90a3\u4e48\u8f6c\u5316\u4e00\u4e0b\u8be2\u95ee\u7684\u8981\u6c42\u5c31\u662f\u7b2c\u4e00\u4e2a\u70b9\u5728\u4e00\u6bb5\u533a\u95f4$(l1,r1)$\u7b2c\u4e8c\u4e2a\u70b9\u5728\u53e6\u4e00\u6bb5\u533a\u95f4$(l2,r2)$\n\n\u8fd9\u4e1c\u897f\u4f3c\u4e4e\u662f\u4e00\u4e2a\u77e9\u5f62\u8be2\u95ee?\n\n\u90a3\u4e48\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\u88f8\u9898\uff0c\u8be2\u95ee\u4e00\u4e2a\u77e9\u5f62\u91cc\u6709\u591a\u5c11\u70b9\u2026\u2026\n\n\u5982\u679c\u76f4\u63a5\u62d6\u4e8c\u7ef4\u6570\u70b9\u7684\u677f\u5b50\u79bb\u7ebf\u540e\u8dd1\u626b\u63cf\u7ebf\u7684\u8bdd\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e22\u4eba\u7684$O(n\\sqrt{n}logn+m\\sqrt{n})$\u505a\u6cd5\n\n\u5982\u679c\u6211\u4eec\u8c03\u6574\u4e00\u4e0b\u6839\u53f7\u5206\u6cbb\u7684\u4e0a\u4e0b\u754c\u7684\u8bdd\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a$O((n+m)\\sqrt{nlogn})$\u7684\u4e22\u4eba\u505a\u6cd5\n\n\u6240\u4ee5\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u7c98\u4e8c\u7ef4\u6570\u70b9\u677f\u5b50\uff0c\u89c2\u5bdf\u5230\u8be2\u95ee\u53ea\u6709$O(m)$\u6b21\uff0c\u4f46\u662f\u4fee\u6539\u5374\u6709$O(n\\sqrt{n})$\u6b21\uff0c\u90a3\u4e48\u8fd9\u542f\u793a\u6211\u4eec\u5c06\u6811\u72b6\u6570\u7ec4\u66ff\u6362\u4e3a\u5206\u5757\uff0c\u6b64\u65f6\u6211\u4eec\u7684\u590d\u6742\u5ea6\u5c31\u662f$O((n+m)\\sqrt{n})$\u4e86\n\n\u5b9e\u9645\u5199\u7684\u65f6\u5019\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u6570\u70b9\u5341\u5206\u6076\u5fc3\uff0c\u9700\u8981\u624b\u52a8\u62c6\u626b\u63cf\u7ebf\u624d\u80fd\u4fdd\u8bc1\u6211\u4eec\u8be2\u95ee\u7684\u6b21\u6570\u4e0d\u662f\u5f88\u591a\u2026\u2026\n\n\u7136\u540e\u6211\u4eec\u5c31\u505a\u5b8c\u8fd9\u9053\u9898~\u5341\u5206\u597d\u5199\u4e5f\u4e0d\u9700\u8981\u5361\u4ec0\u4e48\u5e38\u6570\u5c31\u8fc7\u53bb\u4e86\n\n\u4e0a\u4ee3\u7801~\n\n```C\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<map>\nusing namespace std;const int N=1e5+10;const int BC=230;typedef long long ll;\nnamespace INPUT_SPACE{\n    const int BS=(1<<24)+5;char Buffer[BS],*HD,*TL;\n    char gc() { if(HD==TL) TL=(HD=Buffer)+fread(Buffer,1,BS,stdin);return (HD==TL)?EOF:*HD++; }\n    inline void read(int& t)\n    {\n        int x,ch,sgn=1;while(((ch=gc())<'0'||ch>'9')&&ch!='-');\n        if(ch=='-') sgn=-1,x=0;else x=ch^'0';\n        while((ch=gc())>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^'0');\n        t=x*sgn;\n    }\n}using INPUT_SPACE::read;\nconst int HB=1<<25;const int TB=(1<<25)-1;\ntemplate <typename T>\ninline void gm(T* &bas,int siz,T* & op){op=bas;bas=bas+siz+1;}\nint dfn[N];int nfd[N];int siz[N];int df;int dg[N];int col[N];int nrt;\nstruct qry{int u;int v;ll ans;}qr[N*5];int n;int m;int ccnt[N];int bel[N];\ninline int isson(int u,int rt){return (nfd[u]<=nfd[rt])&&(nfd[rt]<nfd[u]+siz[u]);}\nnamespace lsh\n{\n    map <int,int> mp;\n    inline void pre()\n    {\n        for(int i=1;i<=n;i++)mp[col[i]]=1;map <int,int> :: iterator it,it1;\n        for(it=mp.begin(),it1=it,it1++;it1!=mp.end();++it,++it1)it1->second+=it->second;\n        for(int i=1;i<=n;i++)col[i]=mp[col[i]];for(int i=1;i<=n;i++)ccnt[col[i]]++;\n    }\n}\nnamespace brusolve1\n{\n    int* v[N];int Eg_bas[N<<2];int* A_t;int csiz[N];int afn[N];int af;\n    inline void ih(){A_t=Eg_bas;for(int i=1;i<=n;i++)gm(A_t,dg[i]-(i!=1),v[i]),dg[i]=0;}\n    inline void ins(int u,int V){v[u][++dg[u]]=V;}\n    inline void pb(int u){afn[++af]=u;}\n    inline void calc(int cc)\n    {\n        for(int i=1;i<=n;i++)csiz[i]=(col[i]==cc);\n        for(int i=1;i<=n;i++)\n        {int u=afn[i];for(int j=1;j<=dg[u];j++)csiz[u]+=csiz[v[u][j]];}\n        for(int i=1,tot=csiz[1];i<=m;i++)\n        {\n            qry& p=qr[i];\n            int c1=(p.u&HB)?tot-csiz[p.u&TB]:csiz[p.u&TB];\n            int c2=(p.v&HB)?tot-csiz[p.v&TB]:csiz[p.v&TB];p.ans+=(ll)c1*c2;\n        }\n    }inline void solve(){for(int i=1;i<=n;i++)if(ccnt[i]>BC)calc(i);}\n}\nnamespace brusolve2\n{\n    const int B=270;\n    struct sqry{int l;int r;int id;};vector <sqry> ve[N];vector <sqry> ed; \n    int* vc[N];int V_bas[N<<2];int* A_t;int a1[N];int sub[N];int bi[N];\n    inline int cqry(int l,int r)\n    {\n        if(bi[l]==bi[r]){int ret=0;for(int i=l;i<=r;i++)ret+=a1[i];return ret;}\n        int ret=0;for(int i=l;bi[i]==bi[l];i++)ret+=a1[i];\n        for(int i=r;bi[i]==bi[r];i--)ret+=a1[i];\n        for(int i=bi[l]+1;i<bi[r];i++)ret+=sub[i];return ret;\n    }\n    inline void pre()\n    {\n        A_t=V_bas;for(int i=1;i<=n;i++)\n            if(ccnt[i]<=BC){gm(A_t,ccnt[i],vc[i]),ccnt[i]=0;}\n        for(int i=1;i<=n;i++)\n            {int nc=col[i];if(ccnt[nc]<=BC)vc[nc][++ccnt[nc]]=nfd[i];}\n        for(int i=1;i<=n;i++)bi[i]=(i-1)/B+1;\n        for(int i=1;i<=m;i++)\n        {\n            qry& t=qr[i];int tp=(((t.u&HB)>>25)<<1)|((t.v&HB)>>25);\n            int u=t.u&TB;int v=t.v&TB;sqry nw=(sqry){nfd[v],nfd[v]+siz[v]-1,0};\n            vector <sqry>& q1=ve[nfd[u]-1];vector <sqry>& q2=ve[nfd[u]+siz[u]-1];\n            switch(tp)\n            {\n                case 0:{nw.id=i<<2|1;q1.push_back(nw);nw.id=i<<2|0;q2.push_back(nw);break;}\n                case 1:{nw.id=i<<2|3;q1.push_back(nw);nw.id=i<<2|2;q2.push_back(nw);break;}\n                case 2:\n                {\n                    nw.id=i<<2|0;q1.push_back(nw);nw.id=i<<2|1;q2.push_back(nw);\n                    ed.push_back((sqry){nfd[v],nfd[v]+siz[v]-1,i<<2|0});break;\n                }\n                case 3:\n                {\n                    nw.id=i<<2|2;q1.push_back(nw);nw.id=i<<2|3;q2.push_back(nw);\n                    ed.push_back((sqry){nfd[v],nfd[v]+siz[v]-1,i<<2|2});break;\n                }\n            }\n        }\n    }\n    inline void solve()\n    {\n        pre();ll tot=0;\n        for(int i=1;i<=n;i++)\n        {\n            int nc=col[dfn[i]];\n            if(ccnt[nc]<=BC)for(int j=1;j<=ccnt[nc];j++)\n                    a1[vc[nc][j]]++,sub[bi[vc[nc][j]]]++,tot++;\n            for(vector <sqry>:: iterator it=ve[i].begin();it!=ve[i].end();++it)\n            {\n                int ans=cqry(it->l,it->r);ll& tar=qr[it->id>>2].ans;\n                switch(it->id&3)\n                {\n                    case 0:{tar+=ans;break;}case 1:{tar-=ans;break;}\n                    case 2:{tar+=tot-ans;break;}case 3:{tar-=tot-ans;break;}\n                }\n            }\n        }for(int i=1;i<=n;i++)a1[i]+=a1[i-1];\n        for(vector <sqry>:: iterator it=ed.begin();it!=ed.end();++it)\n        {\n            int ans=a1[it->r]-a1[it->l-1];ll& tar=qr[it->id>>2].ans;\n            if((it->id&3)==0)tar+=ans;else tar+=tot-ans;\n        }\n    }\n}\nnamespace oldtree\n{\n    int v[N<<1];int x[N<<1];int ct;int al[N];int fa[N][22];int dep[N];\n    inline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;dg[u]++;dg[V]++;}\n    inline int dfs(int u,int f)\n    {\n        for(int i=0;fa[u][i];i++)fa[u][i+1]=fa[fa[u][i]][i];\n        dfn[++df]=u;nfd[u]=df;\n        for(int i=al[u];i;i=x[i])\n            if(v[i]!=f)fa[v[i]][0]=u,dep[v[i]]=dep[u]+1,brusolve1::ins(u,v[i]),siz[u]+=dfs(v[i],u);\n        brusolve1::pb(u);return ++siz[u];\n    }\n    inline int cbt(int u,int v)\n    {\n        int del=dep[v]-dep[u];del--;\n        for(int i=0;del;del>>=1,i++)if(del&1)v=fa[v][i];return v;\n    }\n    inline void build(){brusolve1::ih();dfs(1,0);}\n}\nint main()\n{\n    read(n);read(m);\n    for(int i=1;i<=n;i++)read(col[i]);lsh::pre();\n    for(int i=1,u,v;i<n;i++)read(u),read(v),oldtree::add(u,v),oldtree::add(v,u);nrt=1;\n    oldtree::build();\n    for(int i=1,tp,u,v;i<=m;i++)\n    {\n        read(tp);if(tp==1){read(nrt);m--,i--;continue;}\n        read(u);read(v);\n        if(u==nrt)u=1;else if(isson(u,nrt))u=oldtree::cbt(u,nrt)|(1<<25);\n        if(v==nrt)v=1;else if(isson(v,nrt))v=oldtree::cbt(v,nrt)|(1<<25);\n        qr[i]=(qry){u,v,0};\n    }brusolve1::solve();brusolve2::solve();\n    for(int i=1;i<=m;i++)printf(\"%lld\\n\",qr[i].ans);return 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1547608265,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u68f5\u6811,\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u6743\u503c,\u8fd9\u4e2a\u6570\u7684\u6839\u8282\u70b9\u4f1a\u6539\u53d8,\u6bcf\u6b21\u67e5\u8be2\u4e24\u9897\u5b50\u6811\u4e2d\u5404\u53d6\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u76f8\u540c\u7684\u65b9\u6848\u6570.\n\n# \u5206\u6790\n\n\u5148\u8f6c\u6362\u4e00\u4e0b\u95ee\u9898,\u53d6\u51fa\u7684\u8282\u70b9\u7684\u503c\u76f8\u540c\u7684\u65b9\u6848\u6570 $=\\sum_{i=1}^n(count(i,x)\\times count(i,y))$(\u5176\u4e2d $count(a,b)$ \u8868\u793a\u5728 $b$ \u7684\u5b50\u6811\u4e2d\u503c $a$ \u51fa\u73b0\u7684\u6b21\u6570).\n\n\u7136\u540e\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u548c [P5268](https://www.luogu.com.cn/problem/P5268) \u5dee\u4e0d\u591a\u7684\u4e00\u4e2a\u95ee\u9898.\n\n\u5728 DFS \u5e8f\u4e2d\u67e5\u8be2\u7684\u5b50\u6811\u5fc5\u5b9a\u4e3a\u5176\u4e2d\u7684\u4e00\u6bb5\u533a\u95f4\u6216\u8005\u4e24\u6bb5\u533a\u95f4(\u5176\u4e2d\u4e00\u6bb5\u7684\u4e00\u7aef\u4e3a\u5934,\u53e6\u4e00\u6bb5\u7684\u4e00\u7aef\u4e3a\u5c3e).\n\n\u5bf9\u4e8e\u62c6\u6210\u6700\u591a $16$ \u4e2a\u533a\u95f4\u7684\u505a\u6cd5\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86,\u8fd9\u91cc\u5c31\u5206\u4eab\u4e00\u4e2a\u53ea\u9700\u8981\u62c6\u6210 $4$ \u4e2a\u533a\u95f4\u7684\u5927\u5e38\u6570\u505a\u6cd5\u4ee5\u53ca\u4e00\u4e2a\u53ef\u80fd\u6709\u70b9\u7528\u7684\u5361\u5e38\u65b9\u6cd5.\n\n\u5bf9\u4e8e\u62c6\u51fa\u6765\u7684\u4e24\u4e2a\u533a\u95f4\u90fd\u662f\u4ece\u6570\u5217\u7684\u8fb9\u4e0a\u5f00\u59cb,\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4e00\u4e2a\u73af,\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u5904\u7406\u73af\u7684\u65b9\u6cd5\u5904\u7406\u8fd9\u4e2a\u4e1c\u897f,\u5bf9\u4e8e $[1,a]$ \u548c $[b,n]$($a<b$) \u8fd9\u6837\u4e24\u6bb5\u533a\u95f4\u53ef\u4ee5\u5148\u5c06\u539f\u5e8f\u5217\u53d8\u6210\u4e24\u4e2a\u76f8\u8fde\u7684\u539f\u5e8f\u5217,\u90a3\u4e48\u8fd9\u4e24\u4e2a\u533a\u95f4\u5c31\u53d8\u6210\u4e86 $[b,n+a]$,\u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\u5c31\u6bd4\u8f83\u597d\u5904\u7406\u4e86(\u4f46\u662f\u8fd9\u91cc\u7684 $n$ \u76f8\u5f53\u4e8e\u4e58\u4e86 $2$ \u6240\u4ee5\u5e38\u6570\u5de8\u5927\u5b9e\u6d4b\u57fa\u672c\u4f1a TLE).\n\n\u8003\u8651 lxl \u662f\u6bd2\u7624,\u6240\u4ee5\u6570\u636e\u4e5f\u4f1a\u5f88\u6bd2\u7624,\u5bf9\u4e8e\u6700\u591a\u62c6 $16$ \u4e2a\u533a\u95f4\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5361\u6ee1,\u90a3\u4e48\u8003\u8651\u6700\u5f00\u59cb\u5efa\u6811\u7684\u65f6\u5019**\u968f\u673a**\u4e00\u4e2a\u8282\u70b9\u4e3a $root$ \u5efa\u6811,\u5bf9\u4e8e\u8fd0\u6c14\u597d\u7684\u65f6\u5019\u53ef\u4ee5\u8dd1\u98de\u5feb.\n\n\u5229\u7528\u4e0a\u9762\u4e24\u4e2a\u65b9\u6cd5\u786e\u5b9e\u662f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u9053\u9898\u7684(\u4f46\u4e0d\u80fd\u505a\u5230\u6b21\u6b21\u8fc7).\n\n\u4ee3\u7801\u592a\u4e11\u4e86,\u60f3\u8981\u770b\u7684\u70b9[\u8fd9\u91cc](https://www.luogu.com.cn/record/34067785)\u5427(~~\u6211\u89c9\u5f97 $60$ \u5206\u8fd8\u662f\u633a\u5bb9\u6613\u505a\u5230\u7684~~).",
        "postTime": 1591068055,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u662f\u7b2c\u4e00\u6b21\u5b8c\u5168\u8131\u79bb\u9898\u89e3\u5207\u6389\u4e00\u4e2a\u9ed1\u9898\u5462\uff1f\n\n\u8fdb\u5165\u6b63\u9898\u3002\n\n\u9996\u5148\u5982\u679c\u4f60\u7684\u505a\u9898\u91cf\u591f\u591a\u7684\u8bdd\u4e00\u773c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u8be2\u95ee\u5c31\u662f [P5268 [SNOI2017]\u4e00\u4e2a\u7b80\u5355\u7684\u8be2\u95ee](https://www.luogu.com.cn/problem/P5268) \u642c\u5230\u4e86\u5b50\u6811\u4e0a\u9762\u3002\n\n\u7136\u540e\u5b50\u6811\u8f6c\u5e8f\u5217\u6709\u4e00\u4e2a\u5f88\u5957\u8def\u7684\u65b9\u5f0f\u5c31\u662f\u7528 dfs \u5e8f\u3002\n\n\u4f46\u662f\u6362\u6839\u600e\u4e48\u641e\u5462\uff1f\n\n\u5176\u5b9e\u4f60\u53ea\u9700\u8981\u7a0d\u5fae\u60f3\u4e00\u4e0b\u5c31\u4f1a\u77e5\u9053\u6362\u6839\u662f\u5047\u7684\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u5b9a\u4e49\u6b64\u65f6 $u$ \u7684\u5b50\u6811\u662f\u6309\u4ee5 $1$ \u4e3a\u6839\u8ba1\u7b97\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u5982\u679c\u6b64\u65f6\u7684\u6839\u662f\u4e0d\u5728 $u$ \u7684\u5b50\u6811\u5185\u7684\uff0c\u90a3\u4e48\u663e\u7136\u4ee5\u6b64\u65f6\u7684\u6839\u8ba1\u7b97\u7684\u5b50\u6811\u4e0e\u4ee5 $1$ \u4e3a\u6839\u8ba1\u7b97\u7684\u5b50\u6811\u662f\u4e00\u6837\u7684\u3002\n2. \u5982\u679c\u6b64\u65f6\u7684\u6839\u662f $u$\uff0c\u90a3\u4e48\u663e\u7136\u5b50\u6811\u5c31\u662f\u6574\u68f5\u6811\u3002\n3. \u5982\u679c\u6b64\u65f6\u7684\u6839\u5728 $u$ \u7684\u4e00\u4e2a\u5b69\u5b50 $v$ \u7684\u5b50\u6811\u91cc\u9762\uff0c\u90a3\u4e48\u663e\u7136\u6b64\u65f6 $u$ \u7684\u5b50\u6811\u5c31\u662f\u6574\u68f5\u6811\u53bb\u6389 $v$ \u7684\u5b50\u6811\u3002\n\n\u663e\u7136\u4e0a\u9762\u4e09\u79cd\u60c5\u51b5\u90fd\u53ef\u4ee5\u5728 dfs \u5e8f\u4e0a\u9762\u627e\u5230\u5bf9\u5e94\u7684 $1\\sim 2$ \u6bb5\u8fde\u7eed\u533a\u95f4\u3002\n\n\u6240\u4ee5\u6362\u6839\u662f\u5047\u7684~\n\n\u8fd9\u65f6\u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u76f4\u63a5\u5728 dfs \u5e8f\u4e0a\u9762\u505a P5268\u3002\n\n\u4e0b\u9762\u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u6211\u4eec\u8bb0 $f(a, b, c, d)$ \u4e3a $[a,b]$ \u533a\u95f4\u548c $[c,d]$ \u533a\u95f4\u4e4b\u95f4\u7684\u67e5\u8be2\u7ed3\u679c\uff0c$g(x,y)=f(1,x,1,y)$\u3002\n\n\u6211\u4eec\u5728\u8ba1\u7b97 $f(l_1,r_1,l_2,r_2)$ \u7684\u65f6\u5019\u662f\u62c6\u4e86 $4$ \u4e2a\u8be2\u95ee\uff0c\u53d8\u6210 $g(r_1,r_2)-g(l_1-1,r_2)-g(r_1,l_2-1)+g(l_1-1,l_2-1)$\u3002\n\n\u7136\u540e\u5982\u679c\u6839\u540c\u65f6\u51fa\u73b0\u5728 $u$ \u548c $v$ \u7684\u5b50\u6811\u91cc\u9762\uff0c\u6211\u4eec\u8981\u7b97\u7684\u662f $f(1,l_1,1,l_2)+f(1,l_1,r_2,n)+f(r_1,n,r_2,n)+f(r_1,n,1,l_2)$\u3002\n\n\u76f4\u63a5\u62c6\u5f97\u5230 $4\\times 4=16$ \u4e2a\u8be2\u95ee\u7136\u540e\u505a\u83ab\u961f\uff01\n\n~~\u62b1\u6b49\u4f60\u8fd9\u6837\u662f\u8fc7\u4e0d\u6389\u7684~~\n\n\u7136\u540e\u4f60\u53d1\u73b0\u53ef\u4ee5\u500d\u957f dfs \u5e8f\u5217\uff0c\u7136\u540e\u5c31\u4e0d\u7528\u62c6\u533a\u95f4\u4e86\uff0c\u5c31\u53ea\u5269 $4$ \u500d\u7684\u8be2\u95ee\u4e86\uff01\n\n~~\u62b1\u6b49\u83ab\u961f\u7684\u590d\u6742\u5ea6\u662f $\\sout {O(n\\sqrt m)}$ \u7684\uff0c\u4f60\u628a $\\sout n$ \u4e58 $\\sout 2$ \u548c\u628a $\\sout m$ \u4e58 $\\sout 4$ \u6728\u6709\u533a\u522b~~\n\n~~mmp~~\n\n\u6240\u4ee5\u53ea\u80fd\u53bb\u6316\u6398\u4e00\u4e0b\u8fd9\u4e2a $f$ \u7684\u6027\u8d28\uff0c\u53d1\u73b0\u6709\u5982\u4e0b\u4e24\u4e2a\u6027\u8d28\uff1a\n\n- $f(a,b,c,d)=f(c,d,a,b)$\n- $f(a,b,c,d)=f(a,b,1,d)-f(a,b,1,c-1)$\n\n\u524d\u8005\u663e\u7136\uff0c\u540e\u8005\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\u4e3a\u5982\u679c\u8981\u5728 $[1,d]$ \u533a\u95f4\u5185\u9009\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u8981\u4e48\u5728 $[c,d]$ \u91cc\u9762\u8981\u4e48\u5728 $[1,c-1]$ \u91cc\u9762\uff0c\u800c\u4e14\u4e24\u8005\u7684\u65b9\u6848\u662f\u53ef\u4ee5\u52a0\u51cf\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u8f6c\u5316\u8fd9\u4e2a\u5f0f\u5b50\u3002\n\n\u9996\u5148\u8003\u8651 $u$ \u662f\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\uff0c$v$ \u662f\u4e24\u6bb5\u8fde\u7eed\u533a\u95f4\u7684\u60c5\u51b5\u3002\n\n\u8fd9\u65f6\u8981\u8ba1\u7b97\u7684\u662f $f(l_1,r_1,1,l_2)+f(l_1,r_1,r_2,n)$\u3002\n\n\u5229\u7528\u4e0a\u9762\u7684\u7b49\u5f0f\u53ef\u4ee5\u7b97\u51fa\uff1a\n\n$$f(l_1,r_1,1,l_2)+f(l_1,r_1,r_2,n)=g(r_1,l_2)-g(l_1-1,l_2)+g(r_1,n)-g(l_1-1,n)-g(r_1,r_2-1)+g(l_1-1,r_2-1)$$\n\n\u53d1\u73b0\u53ef\u4ee5\u9884\u5904\u7406 $g(i,n)$\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u8fd9\u91cc\u9700\u8981\u62c6\u7684\u8be2\u95ee\u53ea\u6709 $4$ \u4e2a\u3002\n\n\u8bb0 $h(i)=g(i,n)$\u3002\n\n\u7136\u540e\u8003\u8651\u90fd\u662f\u4e24\u6bb5\u8be2\u95ee\u7684\u60c5\u51b5\u3002\n\n\u6b64\u65f6\u8981\u8ba1\u7b97\uff1a\n\n$$f(1,l_1,1,l_2)+f(1,l_1,r_2,n)+f(r_1,n,1,l_2)+f(r_1,n,r_2,n)$$\n\n\u5316\u4e3a\u4e0b\u5f0f\uff1a\n\n$$g(l_1,l_2)+h(l_1)-g(l_1,r_2-1)+h(l_2)-g(l_2,r_1-1)+h(n)-h(r_1-1)-h(r_2-1)+g(r_1-1,r_2-1)$$\n\n\u53d1\u73b0\u4f9d\u7136\u53ea\u9700\u8981\u62c6 $4$ \u4e2a\u8be2\u95ee\u3002\n\n\u6240\u4ee5\u6240\u6709\u8be2\u95ee\u90fd\u53ef\u4ee5\u53ea\u62c6 $4$ \u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\u7b97\u6cd5\u53ea\u5e26 $2$ \u500d\u65f6\u95f4\u5e38\u6570\u548c $4$ \u500d\u7a7a\u95f4\u5e38\u6570\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86~\n\n\u6700\u7ec8\u65f6\u95f4 $O(n\\sqrt m)$\uff0c\u7a7a\u95f4 $O(n+m)$\u3002\n\n\u7136\u540e\u5c31\u662f\u6ce8\u610f\u83ab\u961f\u5757\u957f\u9700\u8981\u53d6 $\\dfrac{n}{\\sqrt m}$ \u6765\u8fbe\u5230\u6700\u4f18\u590d\u6742\u5ea6\uff0c\u76f4\u63a5\u53d6 $\\sqrt n$ \u4f1a\u5bfc\u81f4\u590d\u6742\u5ea6\u5347\u9ad8\u5230 $O((n+m)\\sqrt n)$\uff0c\u4ee5\u53ca\u6ce8\u610f\u67e5\u8be2\u8282\u70b9\u662f\u6839\u7684\u65f6\u5019\u7684\u4e00\u4e9b\u7ec6\u8282\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nconst int N = 100005, M = 500005;\n\nstruct Edge {\n\tint to, nxt;\n\tEdge() {\n\t\tnxt = -1;\n\t}\n};\nEdge e[N << 1];\nint n, hd[N], pnt, m, pos[N], qcnt, dfn[N], dep[N], post[N], a[N], b[N], S, fa[N][25], _time, cnt1[N], cnt2[N], atmp[N];\nbool isquery[M];\nlong long ans[M], pref[N], curval; // pref[i] = f(1, i, 1, n)\nstruct Query {\n\tint l, r, id;\n\tQuery(int l = 0, int r = 0, int id = 0) : l(l), r(r), id(id) {}\n\tbool operator < (const Query& b) const {\n\t\treturn (pos[l] ^ pos[b.l] ? pos[l] < pos[b.l] : (pos[l] & 1 ? r < b.r : r > b.r));\n\t}\n};\nQuery qry[M << 2];\n\ninline void AddEdge(int u, int v) {\n\te[++pnt].to = v;\n\te[pnt].nxt = hd[u];\n\thd[u] = pnt;\n}\n\ninline void Read() {\n\tn = qread(); m = qread();\n\tfor (register int i = 1;i <= n;i++) b[i] = a[i] = qread();\n\tfor (register int i = 1;i < n;i++) {\n\t\tregister int u = qread(), v = qread();\n\t\tAddEdge(u, v);\n\t\tAddEdge(v, u);\n\t}\n}\n\ninline void Dfs(int u) {\n\tdfn[u] = ++_time;\n\tatmp[_time] = a[u];\n\tfor (register int i = hd[u];~i;i = e[i].nxt) {\n\t\tif (e[i].to != fa[u][0]) {\n\t\t\tfa[e[i].to][0] = u;\n\t\t\tdep[e[i].to] = dep[u] + 1;\n\t\t\tDfs(e[i].to);\n\t\t}\n\t}\n\tpost[u] = _time;\n}\n\ninline int Up(int u, int k) {\n\tfor (register int j = 20;j >= 0;j--) {\n\t\tif ((k >> j) & 1) u = fa[u][j];\n\t}\n\treturn u;\n}\n\ninline void AddQuery(int l, int r, int i) {\n\tif (l < 1 || l > n) return;\n\tif (r < 1 || r > n) return;\n\tif (l > r) swap(l, r);\n\tqry[++qcnt] = Query(l, r, i);\n}\n\ninline void Prefix() {\n\tsort(b + 1, b + n + 1);\n\tregister int vtop = unique(b + 1, b + n + 1) - b - 1;\n\tfor (register int i = 1;i <= n;i++) a[i] = lower_bound(b + 1, b + vtop + 1, a[i]) - b;\n\tfor (register int j = 1;j <= 20;j++) {\n\t\tfor (register int i = 1;i <= n;i++) fa[i][j] = fa[fa[i][j - 1]][j - 1];\n\t}\n\tfor (register int i = 1;i <= n;i++) cnt1[a[i]]++;\n\tfor (register int i = 1;i <= n;i++) pref[i] = pref[i - 1] + cnt1[a[i]];\n\tregister int rt = 1;\n\tfor (register int i = 1;i <= m;i++) {\n\t\tregister int opt = qread();\n\t\tif (opt == 1) rt = qread();\n\t\telse {\n\t\t\tisquery[i] = 1;\n\t\t\tregister int u = qread(), v = qread(), type = 0;\n\t\t\tif (dfn[u] <= dfn[rt] && dfn[rt] <= post[u]) type |= 2;\n\t\t\tif (dfn[v] <= dfn[rt] && dfn[rt] <= post[v]) type |= 1;\n\t\t\t//printf(\"T=%d\\n\", type);\n\t\t\tif (type == 0) {\n\t\t\t\tregister int l1 = dfn[u], r1 = post[u], l2 = dfn[v], r2 = post[v];\n\t\t\t\t//printf(\"l1=%d r1=%d l2=%d r2=%d\\n\", l1, r1, l2, r2);\n\t\t\t\tAddQuery(r1, r2, i);\n\t\t\t\tAddQuery(l1 - 1, r2, -i);\n\t\t\t\tAddQuery(r1, l2 - 1, -i);\n\t\t\t\tAddQuery(l1 - 1, l2 - 1, i);\n\t\t\t} else if (type == 1) {\n\t\t\t\tregister int l1, r1, l2, r2;\n\t\t\t\tl1 = dfn[u]; r1 = post[u];\n\t\t\t\tif (v != rt) {\n\t\t\t\t\tregister int sv = Up(rt, dep[rt] - dep[v] - 1);\n\t\t\t\t\tl2 = dfn[sv] - 1; r2 = post[sv] + 1;\n\t\t\t\t} else {\n\t\t\t\t\tl2 = 0;\n\t\t\t\t\tr2 = 1;\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t  f(l1, r1, 1, l2) + f(l1, r1, r2, n)\n\t\t\t\t= f(1, r1, 1, l2) - f(1, l1 - 1, 1, l2) + f(l1, r1, 1, n) - f(l1, r1, 1, r2 - 1)\n\t\t\t\t= f(1, r1, 1, l2) - f(1, l1 - 1, 1, l2) + fpre(r1) - fpre(l1 - 1) - f(1, r1, 1, r2 - 1) + f(1, l1 - 1, 1, r2 - 1)\n\t\t\t\t*/\n\t\t\t\tans[i] += pref[r1] - pref[l1 - 1];\n\t\t\t\tAddQuery(r1, l2, i);\n\t\t\t\tAddQuery(l1 - 1, l2, -i);\n\t\t\t\tAddQuery(r1, r2 - 1, -i);\n\t\t\t\tAddQuery(l1 - 1, r2 - 1, i);\n\t\t\t} else if (type == 2) {\n\t\t\t\tswap(u, v);\n\t\t\t\tregister int l1, r1, l2, r2;\n\t\t\t\tl1 = dfn[u]; r1 = post[u];\n\t\t\t\tif (v != rt) {\n\t\t\t\t\tregister int sv = Up(rt, dep[rt] - dep[v] - 1);\n\t\t\t\t\tl2 = dfn[sv] - 1; r2 = post[sv] + 1;\n\t\t\t\t} else {\n\t\t\t\t\tl2 = 0;\n\t\t\t\t\tr2 = 1;\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t  f(l1, r1, 1, l2) + f(l1, r1, r2, n)\n\t\t\t\t= f(1, r1, 1, l2) - f(1, l1 - 1, 1, l2) + f(l1, r1, 1, n) - f(l1, r1, 1, r2 - 1)\n\t\t\t\t= f(1, r1, 1, l2) - f(1, l1 - 1, 1, l2) + fpre(r1) - fpre(l1 - 1) - f(1, r1, 1, r2 - 1) + f(1, l1 - 1, 1, r2 - 1)\n\t\t\t\t*/\n\t\t\t\tans[i] += pref[r1] - pref[l1 - 1];\n\t\t\t\tAddQuery(r1, l2, i);\n\t\t\t\tAddQuery(l1 - 1, l2, -i);\n\t\t\t\tAddQuery(r1, r2 - 1, -i);\n\t\t\t\tAddQuery(l1 - 1, r2 - 1, i);\n\t\t\t} else if (type == 3) {\n\t\t\t\tregister int l1, r1, l2, r2;\n\t\t\t\tif (u != rt) {\n\t\t\t\t\tregister int su = Up(rt, dep[rt] - dep[u] - 1);\n\t\t\t\t\tl1 = dfn[su] - 1; r1 = post[su] + 1;\n\t\t\t\t} else {\n\t\t\t\t\tl1 = 0;\n\t\t\t\t\tr1 = 1;\n\t\t\t\t}\n\t\t\t\tif (v != rt) {\n\t\t\t\t\tregister int sv = Up(rt, dep[rt] - dep[v] - 1);\n\t\t\t\t\tl2 = dfn[sv] - 1; r2 = post[sv] + 1;\n\t\t\t\t} else {\n\t\t\t\t\tl2 = 0;\n\t\t\t\t\tr2 = 1;\n\t\t\t\t}\n\t\t\t\tans[i] += pref[l1] + pref[l2] + pref[n] - pref[r1 - 1] - pref[r2 - 1];\n\t\t\t\tAddQuery(l1, r2 - 1, -i);\n\t\t\t\tAddQuery(l1, l2, i);\n\t\t\t\tAddQuery(l2, r1 - 1, -i);\n\t\t\t\tAddQuery(r1 - 1, r2 - 1, i);\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void Addl(int x) {curval += cnt2[x]; cnt1[x]++;}\ninline void Dell(int x) {curval -= cnt2[x]; cnt1[x]--;}\ninline void Addr(int x) {curval += cnt1[x]; cnt2[x]++;}\ninline void Delr(int x) {curval -= cnt1[x]; cnt2[x]--;}\n\ninline void Solve() {\n\t//for (register int i = 1;i <= n;i++) printf(\"%d \", a[i]);\n\t//puts(\"\");\n\tS = (int)(1.0 * n / sqrt(qcnt));\n\tfor (register int i = 1;i <= n;i++) pos[i] = (i - 1) / S + 1;\n\tsort(qry, qry + qcnt + 1);\n\tmemset(cnt1, 0, sizeof(cnt1));\n\tmemset(cnt2, 0, sizeof(cnt2));\n\tregister int lp = 0, rp = 0;\n\tfor (register int i = 1;i <= qcnt;i++) {\n\t\t//printf(\"%d %d %d\\n\", qry[i].l, qry[i].r, qry[i].id);\n\t\twhile (lp < qry[i].l) Addl(a[++lp]);\n\t\twhile (rp < qry[i].r) Addr(a[++rp]);\n\t\twhile (lp > qry[i].l) Dell(a[lp--]);\n\t\twhile (rp > qry[i].r) Delr(a[rp--]);\n\t\tif (qry[i].id > 0) ans[qry[i].id] += curval;\n\t\telse ans[-qry[i].id] -= curval;\n\t}\n\tfor (register int i = 1;i <= m;i++) {\n\t\tif (isquery[i]) printf(\"%lld\\n\", ans[i]);\n\t}\n}\n\nint main() {\n\tmemset(hd, -1, sizeof(hd));\n\tRead();\n\tdep[1] = 1; Dfs(1); memcpy(a, atmp, sizeof(a));\n\tPrefix();\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1599709931,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    },
    {
        "content": "[P5268 [SNOI2017]\u4e00\u4e2a\u7b80\u5355\u7684\u8be2\u95ee](https://www.luogu.com.cn/problem/P5268)\u7684\u6811\u4e0a\u52a0\u5f3a\u7248\uff0c\u96be\u5ea6\u5f97\u5230\u4e86\u4e00\u5b9a\u7684\u63d0\u9ad8\n\n---\n\n### \u9898\u89e3\uff1a\n\n\u9996\u5148\u4e0d\u8003\u8651\u6362\u6839\u64cd\u4f5c\u7684\u8bdd\uff0c\u8be2\u95ee\u53ef\u4ee5\u7528dfs\u5e8f\u8f6c\u4e3a\u4e24\u4e2a\u533a\u95f4\uff0c\u5206\u522b\u5bf9\u5e94\u4e24\u68f5\u5b50\u6811\uff0c\u4e8e\u662f\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86P5268\n\n\u7136\u540e\u8003\u8651\u6362\u6839\u64cd\u4f5c\uff0c\u5ef6\u7eed\u4e0d\u6362\u6839\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u73b0\u5728\u4e5f\u8981\u641e\u51fa$x,y$\u5728\u7684dfs\u5e8f\u4e0a\u7684\u5bf9\u5e94\u533a\u95f4\n\n\u8bbe$rt$\u4e3a\u5f53\u524d\u6839\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u53ea\u6709\u5f53$rt$\u5728$x$(\u6216$y$)\u7684\u5b50\u6811\u5185\u7684\u65f6\u5019\u624d\u4f1a\u6709\u5f02\u4e8e\u4e0d\u6362\u6839\u505a\u6cd5\u7684\u60c5\u51b5\u51fa\u73b0\n\n\u753b\u51fa\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n![](https://s1.ax1x.com/2020/06/02/tYeQzj.png)\n\n\u7a0d\u52a0\u89c2\u5bdf\u5c31\u80fd\u53d1\u73b0\u4ee5rt\u4e3a\u6839\u65f6\uff0c$x$\u7684\u5b50\u6811\u662f\u6574\u68f5\u6811\u6263\u6389$1$\u7684\u5b50\u6811\uff0c\u800c$1$\u662f$rt$\u7684\u7956\u5148\u4e2d\u6700\u63a5\u8fd1$x$\u7684\u4e00\u4e2a\n\n![](https://s1.ax1x.com/2020/06/02/tYe1Qs.png)\n\n\u7136\u540e\u7c7b\u6bd4\uff0c\u6240\u6709\u7684\u8fd9\u79cd\"1\"\u90fd\u53ef\u4ee5\u7528\u6811\u4e0ak\u7ea7\u7956\u5148$O(1)-O(log n)$\u89e3\u51b3\uff0c\u4e8e\u662f$x$\u7684\u5bf9\u5e94\u533a\u95f4\u5c31\u662f\u6574\u68f5\u6811\u6263\u6389\"1\"\u7684\u5b50\u6811\u533a\u95f4\n\n\u641e\u51fa\u6bcf\u4e2a\u8be2\u95ee\u5bf9\u5e94\u7684\u5b9e\u9645\u533a\u95f4\u540e\u5c31\u53ef\u4ee5\u4eff\u7167P5268\u7684\u505a\u6cd5\u62c6\u8be2\u95ee\u641e\u83ab\u961f\u5566qwq\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#pragma GCC target(\"avx,avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\n#ifdef ONLINE_JUDGE\n#define getchar gc\ninline char gc(){\n\tstatic char buf[1<<16],*p1=buf,*p2=buf;\n\tif(p1==p2){\n\t\tp2=(p1=buf)+fread(buf,1,1<<16,stdin);\n\t\tif(p2==p1) return EOF;\n\t}\n\treturn *p1++;\n}\n#endif\ntemplate<class t> inline t read(t &x){\n    char c=getchar();bool f=0;x=0;\n    while(!isdigit(c)) f|=c=='-',c=getchar();\n    while(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    if(f) x=-x;return x;\n}\ntemplate<class t> inline void write(t x){\n    if(x<0) putchar('-'),write(-x);\n    else{if(x>9) write(x/10);putchar('0'+x%10);}\n}\n\n#define pii pair<int,int>\n#define l first\n#define r second\n\nconst int N=5e5+5,M=1e6+5; //\u7406\u6027\u5f00\u5927\uff0c\u6ca1\u5565\u574f\u5904\uff08\u96fe\uff09\nint dfn[N],cnt,sz[N],d[N],f[N][18],qn,ans[M],t,rt,bl[N],n,m,num[N],un,a[N],col[N],cntl[N],cntr[N];\nvector<int> g[N];\n\nstruct que{\n\tint l,r,i;\n\tinline bool operator < (const que &nt) const {\n\t\treturn bl[l]^bl[nt.l]?bl[l]<bl[nt.l]:bl[l]&1?r<nt.r:r>nt.r;\n\t}\n}q[M<<2];\n\nvoid dfs(int x,int fa){ //\u9884\u5904\u7406\n\tdfn[x]=++cnt;sz[x]=1;d[x]=d[fa]+1;\n\tf[x][0]=fa;\n\tfor(int i=1;f[f[x][i-1]][i-1];i++) f[x][i]=f[f[x][i-1]][i-1];\n\tfor(int y:g[x]) if(y^fa) dfs(y,x),sz[x]+=sz[y];\n}\n\nvoid add(int l,int r,int ll,int rr,int i){ //\u62c6\u8be2\u95ee\uff0c\u7c7b\u6bd4P5268\n\tq[++qn]=(que){r,rr,i};\n\tq[++qn]=(que){l-1,rr,-i}; \n\tq[++qn]=(que){ll-1,r,-i};\n\tq[++qn]=(que){l-1,ll-1,i};\n}\n\nint getk(int x,int k){ //logn\u627ek\u7956\u5148\n\tfor(int i=17;~i;i--) if(k>=(1<<i)) k-=1<<i,x=f[x][i];\n\treturn x;\n}\n\nvector<pii> calc(int x){\n\tvector<pii> res;\n\tif(x==rt) res.push_back(pii(1,n)); //\u662f\u6839\u5c31\u662f[1,n]\n\telse if(dfn[x]<=dfn[rt]&&dfn[rt]<=dfn[x]+sz[x]-1){ //rt\u5728x\u5b50\u6811\u5185\u5c31\u627e\u51fa\u8981\u88ab\u6263\u6389\u7684\u90a3\u68f5\u6811\u7684\u6839\u8282\u70b9son\n\t\tint son=getk(rt,d[rt]-d[x]-1);\n\t\tif(1<=dfn[son]-1) res.push_back(pii(1,dfn[son]-1));\n\t\tif(dfn[son]+sz[son]<=n) res.push_back(pii(dfn[son]+sz[son],n));\n\t}\n\telse res.push_back(pii(dfn[x],dfn[x]+sz[x]-1)); //\u5426\u5219\u5c31\u76f4\u63a5\u8fd4\u56dex\u5b50\u6811\u7684dfs\u5e8f\u533a\u95f4\n\treturn res;\n}\n\nsigned main(){\n    srand(time(NULL));\n\tread(n);read(m);rt=1;\n\tfor(int i=1;i<=n;i++) num[i]=read(a[i]);\n\tsort(num+1,num+1+n);\n\tun=unique(num+1,num+1+n)-num-1;\n\tfor(int i=1,x,y;i<n;i++){\n\t\tread(x);read(y);\n\t\tg[x].push_back(y);\n\t\tg[y].push_back(x);\n\t}\n\tdfs(rand()%n+1,0); //\u5c0f\u4f18\u5316\uff0c\u968f\u673a\u4e3a\u6839\u8ba9\u6bd2\u7624\u51fa\u9898\u4eba\u5f88\u96be\u6765\u5361\u4f60\n\tfor(int i=1;i<=n;i++) col[dfn[i]]=lower_bound(num+1,num+1+un,a[i])-num; //\u5c06\u539f\u6570\u5217\u70b9\u6743\u8f6c\u4e3a\u5bf9\u5e94dfs\u5e8f\u5217\u7684\u70b9\u6743\uff0c\u5e76\u987a\u4fbf\u79bb\u6563\u5316\n\twhile(m--){\n\t\tint op;\n\t\tread(op);\n\t\tif(op==1) read(rt);\n\t\telse{\n\t\t\tint x,y;\n\t\t\tvector<pii> px,py; //\u5206\u522b\u5bf9\u5e94\u4e24\u4e2a\u8be2\u95ee\u70b9\u7684\u5bf9\u5e94ds\u533a\u95f4\n\t\t\tt++;\n\t\t\tread(x);read(y);\n\t\t\tpx=calc(x);\n\t\t\tpy=calc(y);\n\t\t\tfor(auto x:px) for(auto y:py) add(x.l,x.r,y.l,y.r,t); //\u5206\u522b\u679a\u4e3e\uff0c\u8fdb\u884c\u62c6\u5206\u8be2\u95ee\n\t\t}\n\t}\n    //\u4e0b\u9762\u5c31\u4e0eP5268\u76f8\u540c\u4e86\n\tint len=n/sqrt(t);\n\tfor(int i=1;i<=n;i++) bl[i]=(i-1)/len+1;\n\tfor(int i=1;i<=qn;i++) if(q[i].l>q[i].r) swap(q[i].l,q[i].r);\n\tsort(q+1,q+1+qn);\n\tfor(int i=1,l=1,r=1,cur=0;i<=qn;i++){\n\t\twhile(l<q[i].l) cur+=cntr[col[++l]],cntl[col[l]]++;\n\t\twhile(l>q[i].l) cur-=cntr[col[l]],cntl[col[l--]]--;\n\t\twhile(r<q[i].r) cur+=cntl[col[++r]],cntr[col[r]]++;\n\t\twhile(r>q[i].r) cur-=cntl[col[r]],cntr[col[r--]]--;\n\t\tans[abs(q[i].i)]+=cur*(q[i].i/abs(q[i].i));\n\t}\n\tfor(int i=1;i<=t;i++) write(ans[i]),puts(\"\");\n}\n```",
        "postTime": 1591054730,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    },
    {
        "content": "\u4e0d\u96be\u53d1\u73b0\u6362\u6839\u662f\u5047\u7684\u3002\u4ee51\u4e3a\u6839\u5c06\u6811\u62cd\u6210dfs\u5e8f\uff0c\u5219\uff1a\n\n>1\u3001\u82e5x\u4e3a\u5f53\u524d\u6839\uff0c\u5219x\u7684\u5b50\u6811\u5bf9\u5e94\u533a\u95f4\u4e3a\u6574\u4e2adfs\u5e8f\u5217\u3002\n\n>2\u3001\u82e5x\u5728\u5f53\u524d\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u5219x\u7684\u5b50\u6811\u5bf9\u5e94\u533a\u95f4\u4e3a\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u3002\n\n>3\u3001\u82e5\u5f53\u524d\u6839\u5728x\u7684\u5b50\u6811\u4e2d\uff0c\u5219x\u7684\u5b50\u6811\u5bf9\u5e94\u533a\u95f4\u4e3a\u6574\u4e2a\u5e8f\u5217\u6316\u53bb\u4e00\u6bb5\u533a\u95f4\u3002\n\n\u81f3\u6b64\uff0c\u53ef\u4ee5\u5c06\u5b50\u6811\u95ee\u9898\u8f6c\u5316\u4e3a\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u95ee\u9898\u3002\n\n\u8bbe$ans(l1,r1,l2,r2)$\u4e3a\u533a\u95f4$[l1,r1]$\u4e0e$[l2,r2]$\u7684\u7b54\u6848\u3002\n\u5219\u6709\uff1a\n\n$$ans(l1,r1,l2,r2)=ans(1,r1,1,r2)+ans(1,l1-1,1,l2-1)-ans(1,r1,1,l1-1)-ans(1,r2,1,l2-1)$$\n\n\u83ab\u961f\u5904\u7406\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long lint;\nconst int MAXN = 500050;\nvoid read(int &x) {\n\tchar ch; while(ch = getchar(), ch < '!'); x = ch - 48;\n\twhile(ch = getchar(), ch > '!') x = (x << 3) + (x << 1) + ch - 48;\n}\nvoid write(lint x) {if(x > 9) write(x/10); putchar(x%10+48);}\nstruct Edge {int to, next;} e[MAXN];\nstruct Qry {int l, r, id, f;} q[8000050];\nint Q, m, in[MAXN], out[MAXN], idx, _dfn, st[MAXN][21], dfn[MAXN], dep[MAXN], fa[MAXN], h[MAXN], en, rt, cnt[MAXN][2];\nint is_q[MAXN], top[MAXN], son[MAXN], siz[MAXN], tl[MAXN], tr[MAXN], o[MAXN], c[MAXN], a[MAXN], n, lg2[MAXN]; lint ans[MAXN], ima, _c, SIZ;\nvoid addedge(int u, int v) {e[en] = (Edge) {v, h[u]}; h[u] = en++;}\nbool cmp(Qry a, Qry b) {return a.l/SIZ == b.l/SIZ ? a.r < b.r : a.l < b.l;}\nvoid dfs1(int u, int p) {\n\tst[++idx][0] = u; in[u] = ++_dfn; dfn[u] = idx; c[_dfn] = a[u];\n\tdep[u] = dep[p] + 1; fa[u] = p; siz[u] = 1;\n\tfor(int v, i = h[u]; ~i; i = e[i].next)\n\t\tif((v = e[i].to) != p) {\n\t\t\tdfs1(v, u); st[++idx][0] = u; siz[u] += siz[v];\n\t\t\tif(siz[v] > siz[son[u]]) son[u] = v;\n\t\t}\n\tout[u] = _dfn;\n}\nvoid dfs2(int u, int f) {\n\ttop[u] = f; if(son[u]) dfs2(son[u], f);\n\tfor(int v, i = h[u]; ~i; i = e[i].next)\n\t\tif((v = e[i].to) != fa[u] && v != son[u]) dfs2(v, v);\n}\nint find(int y, int x) {//\u627ex\u5728y\u7684\u54ea\u4e2a\u5b50\u6811\u5185\n\tint u; for(; top[x] != top[y]; u = top[x], x = fa[u]);\n\treturn x == y ? u : son[y]; \n}\nvoid init() {\n\tdep[1] = 1; dfs1(1, 1); dfs2(1, 1);\n\tfor(int i = 2; i <= (n << 1); ++i) lg2[i] = lg2[i>>1] + 1;\n\tfor(int j = 1; j <= 21; ++j)\n\t\tfor(int i = 1; i + (1 << j) - 1 <= (n << 1); ++i)\n\t\t\tst[i][j] = dep[st[i][j-1]] < dep[st[i+(1<<(j-1))][j-1]] ? st[i][j-1] : st[i+(1<<(j-1))][j-1];\n}\nint LCA(int u, int v) {\n\tint x = dfn[u], y = dfn[v];\n\tif(x > y) swap(x, y);\n\tint k = lg2[y-x+1];\n\treturn dep[st[x][k]] < dep[st[y-(1<<k)+1][k]] ? st[x][k] : st[y-(1<<k)+1][k];\n}\nvoid RC(int l1, int r1, int l2, int r2, int id) {//\u5c06\u533a\u95f4\u8be2\u95ee\u8f6c\u5316\u4e3a\u51e0\u4e2a\u5b50\u95ee\u9898\u7684\u5bb9\u65a5\n\tq[++m] = (Qry) {r1, r2, id, 1}; q[++m] = (Qry) {l1-1, l2-1, id, 1};\n\tq[++m] = (Qry) {r1, l2-1, id, -1}; q[++m] = (Qry) {l1-1, r2, id, -1};\n}\nvoid devide(int x) { //\u5904\u7406x\u7684\u5b50\u6811\u5bf9\u5e94\u7684\u533a\u95f4\n\tif(x == rt) tl[++_c] = 1, tr[_c] = n;\n\telse {\n\t\tint z = LCA(x, rt);\n\t\tif(z != x) tl[++_c] = in[x], tr[_c] = out[x];\n\t\telse {\n\t\t\tint y = find(x, rt);\n\t\t\tif(1 <= in[y]-1) tl[++_c] = 1; tr[_c] = in[y]-1;\n\t\t\tif(out[y]+1 <= n) tl[++_c] = out[y]+1, tr[_c] = n;\n\t\t}\n\t}\n}\nvoid build(int x, int y, int id) {//\u5c06\u4e24\u4e2a\u5b50\u6811\u95ee\u9898\u8f6c\u5316\u4e3a\u533a\u95f4\u95ee\u9898\n\t_c = 0; devide(x); int mid = _c; devide(y);\n\tfor(int i = 1; i <= mid; ++i)\n\t\tfor(int j = mid+1; j <= _c; ++j)\n\t\t\tRC(tl[i], tr[i], tl[j], tr[j], id);\n}\nvoid add(int x, int p) {ima += cnt[c[x]][p^1]; ++cnt[c[x]][p];}\nvoid del(int x, int p) {ima -= cnt[c[x]][p^1]; --cnt[c[x]][p];}\nint main() {\n\tread(n); read(Q); SIZ = sqrt(n); memset(h, -1, sizeof h);\n\tfor(int i = 1; i <= n; ++i) read(a[i]), o[i] = a[i];\n\tsort(o+1, o+n+1); int _n = unique(o+1, o+n+1)-o-1;\n\tfor(int i = 1; i <= n; ++i) a[i] = lower_bound(o+1, o+_n+1, a[i])-o;\n\tfor(int u, v, i = 1; i < n; ++i) read(u), read(v), addedge(u, v), addedge(v, u);\n\tinit(); rt = 1;\n\tfor(int opt, x, y, i = 1; i <= Q; ++i) {\n\t\tread(opt); read(x);\n\t\tif(opt == 1) rt = x;\n\t\telse is_q[i] = 1, read(y), build(x, y, i);\n\t}\n\tfor(int i = 1; i <= m; ++i) if(q[i].l > q[i].r) swap(q[i].l, q[i].r);\n\tsort(q+1, q+m+1, cmp);\n\tfor(int L = 0, R = 0, i = 1; i <= m; ++i) {\n\t\tint l = q[i].l, r = q[i].r;\n\t\twhile(L < l) add(++L, 0); while(L > l) del(L--, 0); \n\t\twhile(R < r) add(++R, 1); while(R > r) del(R--, 1);\n\t\tans[q[i].id] += ima * q[i].f;\n\t}\n\tfor(int i = 1; i <= Q; ++i) if(is_q[i]) write(ans[i]), putchar('\\n');\n}\n\n```",
        "postTime": 1572577127,
        "uid": 2491,
        "name": "\u8bd7\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    },
    {
        "content": "\u5177\u4f53\u601d\u8def\u770b\u522b\u7684\u9898\u89e3\u5427\u3002\u8fd9\u91cc\u53ea\u63d0\u4e24\u4e2a\u53ef\u80fd\u5bf9\u5e38\u6570\u548c\u4ee3\u7801\u957f\u5ea6\u6709\u4f18\u5316\u7684\u5904\u7406\u65b9\u6cd5\u3002\n\n### I\n\n\u628a\u4e00\u4e2a\u8be2\u95ee\u62c6\u6210$9$\u4e2a\u751a\u81f3$16$\u4e2a\u83ab\u961f\u8be2\u95ee\u5b9e\u5728\u662f\u6709\u70b9\u73c2\u6015\u3002\n\n\u53d1\u73b0\u8be2\u95ee\u7684\u4e00\u8fb9\u8981\u4e48\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u8981\u4e48\u662f$[1,n]$\u6316\u53bb\u4e00\u4e2a\u533a\u95f4\u3002\n\n\u8bb0$pre_i=f_{[1,i],[1,n]}$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4e00\u904d\u9884\u5904\u7406\u6c42\u51fa\u6765\u3002\n\n\u7b80\u5355\u5bb9\u65a5\u4e00\u4e0b\uff1a\n\n$$f_{[l,r],[1,L)\\cup(R,n]}=f_{[l,r],[1,n]}-f_{[l,r],[L,R]}=pre_r-pre_{l-1}-f_{[l,r],[L,R]}$$\n\n$$f_{[1,l)\\cup(r,n],[1,L)\\cup(R,n]}=f_{[1,n],[1,n]}-f_{[l,r],[1,n]}-f_{[1,n],[L,R]}+f_{[l,r],[L,R]}=...$$\n\n\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u62c6\u6210$4$\u4e2a\u83ab\u961f\u8be2\u95ee\u5c31\u591f\u4e86\uff0c\u56e0\u4e3a\u53ea\u5dee\u6c42$f_{[l,r],[L,R]}$\u3002\n\n### II\n\n\u5982\u4f55\u6c42\u67d0\u4e00\u4e2a\u70b9\u5f80\u65b0\u6839\u65b9\u5411\u4e0a\u7684\u513f\u5b50\uff1f\u6811\u5256\u500d\u589e\u4ec0\u4e48\u7684\u90fd\u592a\u5446\u4e86\u3002\n\n\u9884\u5904\u7406\u6811\u7684dfn\u5e8f\uff0c\u6bcf\u4e2a\u70b9\u5f00\u4e00\u4e2amap\u6309dfn\u5e8f\u6302\u4e0a\u5b83\u6240\u6709\u7684\u513f\u5b50\uff0c\u67e5\u8be2\u65f6\u62ff\u7740\u65b0\u6839\u7684dfn\u5e8f\u76f4\u63a5lower_bound\u5373\u53ef\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee52kb\u5199\u5b8c\u8fd9\u9053\u4e0d\u7b97\u592a\u6bd2\u7624\u7684\u7531\u4e43\u9898\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define RG register\n#define R RG int\n#define G if(++ip==ie)if(fread(ip=buf,1,SZ,stdin))\nusing namespace std;\nconst int SZ=1<<19,N=1e5+9,M=5e5+9;\nchar buf[SZ],*ie=buf+SZ,*ip=ie-1;\ninline int in(){\n    G;while(*ip<'-')G;\n    R x=*ip&15;G;\n    while(*ip>'-'){x*=10;x+=*ip&15;G;}\n    return x;\n}\nstruct Qry{\n    int x,y,b,id;\n    inline bool operator<(const Qry&t)const{\n        return b!=t.b?b<t.b:(1&b)?y>t.y:y<t.y;\n    }\n}t[4*M];\nint dfn,a[N],b[N],c1[N],c2[N],l[N],r[N],he[N],ne[2*N],to[2*N];\nLL pre[N],ans[M];\nmap<int,int>ch[N];\nvoid dfs(R x,R f){//\u9884\u5904\u7406dfn\u5e8f\n    l[x]=++dfn;\n    for(R y,i=he[x];i;i=ne[i])\n        if((y=to[i])!=f)dfs(y,x),ch[x][r[y]]=y;\n    r[x]=dfn;\n}\nint main(){\n    R n=in(),m=in(),q=0,B=sqrt(n);\n    for(R i=1;i<=n;++i)\n        a[i]=b[i]=in();\n    for(R i=1,p=0;i<n;++i){\n        R x=in(),y=in();\n        ne[++p]=he[x];to[he[x]=p]=y;\n        ne[++p]=he[y];to[he[y]=p]=x;\n    }\n    dfs(1,0);\n    sort(a+1,a+n+1);\n    for(R i=1;i<=n;++i)b[i]=lower_bound(a+1,a+n+1,b[i])-a;\n    for(R i=1;i<=n;++i)++c1[a[l[i]]=b[i]];//\u9884\u5904\u7406pre\n    for(R i=1;i<=n;++i)pre[i]=pre[i-1]+c1[a[i]];\n    for(R i=1,rt=1;i<=m;++i){\n        if(in()&1){rt=in();--i;--m;continue;}\n        R x=in(),y=in();\n        R tx=l[x]<=l[rt]&&r[rt]<=r[x];if(x==rt)x=1,tx=0;\n        R ty=l[y]<=l[rt]&&r[rt]<=r[y];if(y==rt)y=1,ty=0;\n        if(tx)x=ch[x].lower_bound(l[rt])->second;//map\u627e\u513f\u5b50\n        if(ty)y=ch[y].lower_bound(l[rt])->second;\n        R lx=l[x]-1,ly=l[y]-1,rx=r[x],ry=r[y];\n        if(tx&&ty)ans[i]=pre[n];\n        if(tx)ans[i]+=(pre[ry]-pre[ly])*(tx==ty?-1:1);\n        if(ty)ans[i]+=(pre[rx]-pre[lx])*(tx==ty?-1:1);\n        t[++q]=(Qry){rx,ry,rx/B,tx==ty?i:-i};//\u56db\u4e2a\u83ab\u961f\u8be2\u95ee\uff0c\u5e26\u4e0a\u5bb9\u65a5\u7cfb\u6570\n        t[++q]=(Qry){rx,ly,rx/B,tx==ty?-i:i};\n        t[++q]=(Qry){lx,ry,lx/B,tx==ty?-i:i};\n        t[++q]=(Qry){lx,ly,lx/B,tx==ty?i:-i};\n    }\n    sort(t+1,t+q+1);\n    LL now=0;memset(c1+1,0,4*n);\n    for(R i=1,x=0,y=0;i<=q;++i){//\u83ab\u961f\n        while(x<t[i].x)++c1[a[++x]],now+=c2[a[x  ]];\n        while(x>t[i].x)--c1[a[  x]],now-=c2[a[x--]];\n        while(y<t[i].y)++c2[a[++y]],now+=c1[a[y  ]];\n        while(y>t[i].y)--c2[a[  y]],now-=c1[a[y--]];\n        R j=t[i].id;j>0?ans[j]+=now:ans[-j]-=now;\n    }\n    for(R i=1;i<=m;++i)\n        printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1554221544,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    },
    {
        "content": "\u8fd9\u53ef\u80fd\u662f\u6211\u89c1\u8fc7\u7684\u6700\u6c34\u7684\u9ed1\u9898\u4e86~~\uff08\u4e0d\u8fc7\u849f\u84bb\u6211\u4e5f\u6ca1\u505a\u8fc7\u51e0\u9053\uff09~~\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u7070\u5e38\u7b80\u5355\u554a\n\n\u505a\u8fc7bzoj3083\u548cbzoj5016\u5c31\u80fd\u719f\u7ec3\u62cd\u677f\u5b50\u4e86~~\uff08\u84dd\u800c\u6211\u8fd8\u662f\u6ca1\u505a\u8fc7\uff09~~\n\n\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u67e5\u8be2\u7684\u70b9\u6765\u8bf4 \n\n\u5982\u679c\u5b83\u662froot \u90a3\u4e48\u5b50\u6811\u5c31\u662f\u6574\u68f5\u6811\n\n\u5982\u679c\u5b83\u548croot\u7684lca\u662f\u5b83\u672c\u8eab \n\n\u90a3\u4e48\u53bb\u6389\u5b83\u4e0eroot\u7684\u8def\u5f84\u4e0a\u5b83\u7684\u90a3\u4e2a\u53f6\u7ed3\u70b9\u7684\u5b50\u6811\n\n\u5269\u4e0b\u7684\u5c31\u662f\u8981\u627e\u7684\u533a\u95f4 \uff0c\u800c\u8fd9\u6bb5\u533a\u95f4\u5fc5\u5b9a\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u5c31\u662f\u4e24\u6bb5\u533a\u95f4\n \n\u800c\u5176\u4ed6\u60c5\u51b5\u4e0b \u8981\u67e5\u627e\u7684\u5c31\u662f\u5b83\u73b0\u5728\u7684\u5b50\u6811\n\n\u8fd9\u91cc\u6709\u4e00\u4e2adalao\u7684\u56fe\uff0c\u867d\u7136\u4e11\u4e86\u70b9\uff0c\u4f46\u662f\u5341\u5206\u5f62\u8c61\n\nhttps://blog.csdn.net/lcomyn/article/details/45718295\n\n\u7136\u540e\u53ef\u4ee5\u770b\u51fa\u53e6\u4e00\u4e2a\u6709\u7528\u7684\u6027\u8d28\n\n\u5bf9\u4e8edfs\u5e8f\u7684\u5e8f\u5217\u4e0a\u4e00\u4e2a\u533a\u95f4[l1,r1]  \u548c[l2,r2]\u7684\u67e5\u8be2\n\n\u53ef\u4ee5\u62c6\u5206\u4e3a\u56db\u4e2a\u67e5\u8be2\u6765\u8fdb\u884c\n\n\u4e5f\u5c31\u662f**[1\uff0cr1]\u548c[1,r2] + [1,l1-1]\u548c[1,l2-1]- [1,l1-1]\u548c[1,r2]- [1,l2-1]\u548c[1,r1]**\n\n\u65e2\u7136\u5df2\u7ecf\u5230\u4e86\u8fd9\u79cd\u5730\u6b65\n\n\u53d1\u73b0\u6bcf\u4e2a\u8be2\u95ee\u53ef\u4ee5\u62c6\u6210\u6700\u591a16\u4e2a\u7531dfs\u5e8f\u5217\u7684\u5de6\u7aef\u70b9\u4f5c\u4e3a\u5de6\u7aef\u70b9\u7684\u533a\u95f4\n\n\u662f\u4e0d\u662f\u9707\u60ca\u7684\u53d1\u73b0 \uff1a**\u4f3c\u4e4e\u53ef\u4ee5\u7528\u83ab\u961f\u7b97\u6cd5\u5904\u7406\uff01**\n\n\u7136\u540e\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u88f8\u7684\u83ab\u961f\u6a21\u7248\n\n\u5bf9\u4e86\u8bb0\u5f97\u8981\u5199\u7684\u597d\u770b\u4e00\u70b9\n\n**\u8fd9\u9053\u9898\u8d85\u7ea7\u5361\u5e38\u7684\uff01\uff01\uff01**\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4ee3\u7801\u4e86\n\n\u987a\u624b\u9644\u8d60\u4e00\u7ec4\u5c0f\u6837\u4f8b\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nint in[100005],out[100005],all,dp[100005][20],dfs_num,l[10],r[10];\nint di[100005],pos1,pos2,b[100005],now,to[200005],next[200005];\nint head[100005],tot,depth[100005],root,n,tong[100005][2];\nint m,shu1,shu2,a[100005],shu,c[100005];\nlong long ans[500005],ans_here;\nbool pd[500005];\nstruct node\n{\n    int id,l,r;\n    bool judge;\n}ask[8000005];\nvoid add(int x,int y)\n{\n    to[++tot]=y;\n    next[tot]=head[x];\n    head[x]=tot;\n}\nvoid dfs(int x,int fa)\n{\n    in[x]=++dfs_num;\n    c[dfs_num]=a[x];\n    dp[x][0]=fa;\n    for(int i=1;i<=17;i++)\n    {\n        dp[x][i]=dp[dp[x][i-1]][i-1];\n    }\n    for(int i=head[x];i;i=next[i])\n    {\n        int y=to[i];\n        if(y==fa) continue;\n        depth[y]=depth[x]+1;\n        dfs(y,x);\n    }\n    out[x]=dfs_num;\n}\nint lca(int x,int y)\n{\n    if(depth[x]<depth[y])\n    swap(x,y);\n    int delta=depth[x]-depth[y];\n    for(int i=0;i<=17;i++)\n    if(delta&(1<<i))\n    {\n        x=dp[x][i];\n    }\n    if(x==y) return x;\n    for(int i=17;i>=0;i--)\n    if(dp[x][i]!=dp[y][i])\n    {\n        x=dp[x][i];\n        y=dp[y][i];\n    }\n    return dp[x][0];\n}\nint find(int x,int y)\n{\n    if(depth[x]<depth[y])\n    swap(x,y);\n    int delta=depth[x]-depth[y]-1;\n    for(int i=0;i<=17;i++)\n    if(delta&(1<<i))\n    {\n        x=dp[x][i];\n    }\n    return x;\n}\nvoid add_query(int x,int y,int id)\n{\n    int cnt=0;\n    if(x==root) l[++cnt]=1,r[cnt]=n;\n    else\n    {\n        int temp=lca(x,root);\n        if(temp!=x) l[++cnt]=in[x],r[cnt]=out[x];\n        else \n        {\n            int now=find(x,root);\n            l[++cnt]=1,r[cnt]=in[now]-1;\n            if(l[cnt]>r[cnt]) cnt--;\n            l[++cnt]=out[now]+1,r[cnt]=n;\n            if(l[cnt]>r[cnt]) cnt--;\n        }\n    }\n    int mid=cnt;\n    if(y==root) l[++cnt]=1,r[cnt]=n;\n    else\n    {\n        int temp=lca(y,root);\n        if(temp!=y) l[++cnt]=in[y],r[cnt]=out[y];\n        else \n        {\n            int now=find(y,root);\n            l[++cnt]=1,r[cnt]=in[now]-1;\n            if(l[cnt]>r[cnt]) cnt--;\n            l[++cnt]=out[now]+1,r[cnt]=n;\n            if(l[cnt]>r[cnt]) cnt--;\n        }\n    }\n    for(int i=1;i<=mid;i++)\n    {\n        for(int j=mid+1;j<=cnt;j++)\n        {//\u5c3d\u91cf\u4e0d\u8981\u7528\u6784\u9020\u51fd\u6570\uff0c\u4e00\u4f4d\u673a\u623f\u7684\u540c\u5b66\u56e0\u6b64TLE\u4e86\u4e09\u4e2a\u70b9\n            ask[++all].l=r[i],ask[all].id=id,ask[all].r=r[j],ask[all].judge=true;\n            ask[++all].l=l[i]-1,ask[all].id=id,ask[all].r=l[j]-1,ask[all].judge=true;\n            ask[++all].l=r[i],ask[all].id=id,ask[all].r=l[j]-1,ask[all].judge=false;\n            ask[++all].l=l[i]-1,ask[all].id=id,ask[all].r=r[j],ask[all].judge=false;\n        }\n    }\n}\nbool cmp(const node &a,const node &b)\n{\n    if(di[a.l]!=di[b.l])\n    return di[a.l]<di[b.l];\n    return a.r<b.r;\n}\nvoid ad(int x,int kind)\n{\n    int y=c[x];\n    ans_here+=tong[y][kind^1];\n    tong[y][kind]++;\n}\nvoid de(int x,int kind)\n{\n    int y=c[x];\n    ans_here-=tong[y][kind^1];\n    tong[y][kind]--;\n}\nint read()\n{\n    char c;\n    int x;\n    for(c=getchar();c>'9'||c<'0';c=getchar());\n    x=c-'0';\n    for(c=getchar();c>='0'&&c<='9';c=getchar())\n    x=x*10+c-'0';\n    return x;\n}\nint main()\n{\n    cin>>n>>m;\n    int piece=sqrt(n);\n    for(int i=1;i<=n;i++)\n    {\n        di[i]=(i-1)/piece+1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        a[i]=read();\n        b[i]=a[i];\n    }\n    for(int i=1;i<=n-1;i++)\n    {\n        shu1=read();\n        shu2=read();\n        add(shu1,shu2);\n        add(shu2,shu1);\n    }\n    depth[1]=1;\n    root=1;\n    sort(b+1,b+n+1);\n    now=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i<=n;i++)\n    a[i]=lower_bound(b+1,b+n+1,a[i])-b; //\u9884\u5148\u5904\u7406\u51fa\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\n    dfs(1,1);\n    for(int i=1;i<=m;i++)\n    {\n        shu=read();\n        if(shu==1)\n        {\n            shu1=read();\n            root=shu1;\n        }\n        else \n        {\n            shu1=read();\n            shu2=read();\n            add_query(shu1,shu2,i);\n            pd[i]=true;\n        }\n    }\n    for(int i=1;i<=all;i++)\n    {\n        if(ask[i].l>ask[i].r) swap(ask[i].l,ask[i].r);\n    }\n    sort(ask+1,ask+all+1,cmp);\n    pos1=0;\n    pos2=0;\n    for(int i=1;i<=all;i++)\n    {\n        while(pos1<ask[i].l) ad(++pos1,0);\n        while(pos1>ask[i].l) de(pos1--,0);\n        while(pos2<ask[i].r) ad(++pos2,1);\n        while(pos2>ask[i].r) de(pos2--,1);\n        if(ask[i].judge)\n        ans[ask[i].id]+=ans_here;\n        else ans[ask[i].id]-=ans_here;\n    }\n    for(int i=1;i<=m;i++)\n    if(pd[i])\n    {\n        printf(\"%lld\\n\",ans[i]);\n    }\n    return 0;\n} \n/*\n10 10\n36088 87629 24511 26212 51285 80251 18887 5484 17567 41736 \n1 10\n1 4\n10 3\n10 6\n3 2\n6 7\n4 8\n2 5\n2 9\n2 4 9\n2 7 2\n2 8 10\n1  2\n1  6\n1  8\n1  7\n2 3 4\n2 10 6\n1  10\n*/\n```",
        "postTime": 1536928665,
        "uid": 79871,
        "name": "ENESAMA",
        "ccfLevel": 0,
        "title": "\u4e00\u4eba\u5f97\u9053 \u673a\u623fAK"
    },
    {
        "content": "\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u6c42\u533a\u95f4\u76f8\u540c\u989c\u8272\u7684\u6570\u5bf9\u6570\uff0c\u4e0a\u6811\u505a\uff0c\u8981\u6c42\u652f\u6301\u6362\u6839\u3002\n\n\u5728\u505a\u8fd9\u9898\u4e4b\u524d\u6211\u89c1\u8fc7[[Snoi2017]\u4e00\u4e2a\u7b80\u5355\u7684\u8be2\u95ee](https://www.lydsy.com/JudgeOnline/problem.php?id=5016)\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u5e8f\u5217\u4e0a\u7684\u95ee\u9898\u7684\u8bdd\uff1a\n\n$f(l1,r1,l2,r2)$\u8868\u793a\u8be2\u95eel1,r1,l2,r2\u7684\u7b54\u6848\uff0c\u663e\u7136\u56db\u4e2a\u5173\u952e\u5b57\u4e0d\u80fd\u83ab\u961f\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5bb9\u65a5\u3002\n$$\nf(l1,r1,l2,r2)=f(1,r1,1,r2)-f(1,l1-1,l2,r2)-f(l1,r1,l2-1,r2)+f(1,l1-1,1,l2-1)\n$$\n\u5f88\u591a\u95ee\u4f60\u4e24\u4e2a\u533a\u95f4\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u7684\u6570\u5bf9\u6570\u90fd\u53ef\u4ee5\u5bb9\u65a5\u6210\u8fd9\u6837\uff0c\u6bd4\u5982[[HAOI2011 Problem b]](https://www.luogu.org/problemnew/show/P2522)\u3002\n\n\u8fd9\u6837\u4e00\u4e2a\u8be2\u95ee\u5c31\u53ea\u6709\u4e24\u4e2a\u5173\u952e\u5b57\u4e86\u3002\n\n\u5728\u6811\u4e0a\u7684\u505a\u6cd5\uff1a\n\n\u56e0\u4e3a\u6709\u6362\u6839\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u662f\u4e00\u4e2a\u533a\u95f4\u5bf9\u591a\u4e2a\u533a\u95f4\u751a\u81f3\u591a\u4e2a\u533a\u95f4\u5bf9\u591a\u4e2a\u533a\u95f4\u3002\n\n\u4f8b\u5982\uff1a\u4e09\u4e2a\u533a\u95f4[l1,r1],[l2,r2],[l3,r3]\u548c\u4e09\u4e2a\u4e2a\u533a\u95f4[l1\u2018,r1\u2019],[l2',r2'],[l3',r3']\u4e2d\u7684\u7b54\u6848\u6570\u3002\n\n\u628a\u4e24\u8fb9\u533a\u95f4\u6bcf\u4e00\u5bf9\u90fd\u5bf9\u5e94\u5373\u53ef\uff0c\u5c31\u662f3*3=9\u4e2a\u8be2\u95ee\u3002\n\n\u6362\u6839\u7684\u8bdd\u5206\u7c7b\u8ba8\u8bba\uff0c\u5982\u679c\u65b0\u6839\u4e0d\u5728x\u7684\u5b50\u6811\u5185\u76f8\u5b89\u65e0\u4e8b\uff0c\u5426\u5219x\u5b50\u6811\u7684\u533a\u95f4\u5c31\u662f\u9664\u4e86**x\u5411\u65b0\u6839\u90a3\u4e2a\u65b9\u5411\u7684**\u513f\u5b50\u7684\u5b50\u6811\uff0c\u4ee5\u5916\u7684\u6240\u6709\u70b9\uff0cdfs\u5e8f\u641e\u4e00\u641e\u5c31\u597d\u4e86\u3002\n\n```c++\n#include<cmath>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define ll long long\nusing namespace std;\n#ifdef ONLINE_JUDGE\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){if(A==B){B=(A=ss)+fread(ss,1,1<<17,stdin);if(A==B)return EOF;}return*A++;}\ntemplate<class T>inline void read(T&x){\n    static char c;static int y;\n    for(c=gc(),x=0,y=1;c<48||57<c;c=gc())if(c=='-')y=-1;\n    for(;48<=c&&c<=57;c=gc())x=((x+(x<<2))<<1)+(c^'0');\n    x*=y;\n}\n#else\nvoid read(int&x){scanf(\"%d\",&x);}\n#endif\nstruct node{\n\tint next,to;\n}w[400001];\nstruct ques{\n\tint h,l,r,f;\n}q[8000011];\nstruct ls{\n\tint h,z;\n}a[100001];\nint rt,now,num,hs[100001],head[100001],idx[100001],size[100001];\nint r,lx[201],n,b[100001],dfn[100001],fa[100001],bl[100001],cnt;\nint m,l,ly[201],o[100001][2],que,fx[201],fy[201],blo,top[100001];\nll ans[500001],sum;\ninline bool cmp2(ls c,ls d){return c.z<d.z;}\ninline bool cmp(ques c,ques d){\n\tif (bl[c.l]!=bl[d.l]) return c.l<d.l;\n\tif (bl[c.l]&1) return c.r<d.r;\n\telse return c.r>d.r;\n\t// return (c.r<d.r)^(bl[c.l]&1)^1;\n}\ninline void add_edge(int x,int y){\n\tw[++cnt].next=head[x];\n\tw[cnt].to=y; head[x]=cnt;\n}\nvoid dfs1(int x,int da){\n\tdfn[++num]=b[x]; idx[x]=num; size[x]=1;\n\tfor (int i=head[x]; i; i=w[i].next){\n\t\tif (w[i].to!=da){\n\t\t\tfa[w[i].to]=x;\n\t\t\tdfs1(w[i].to,x);\n\t\t\tsize[x]+=size[w[i].to];\n\t\t\tif (size[w[i].to]>size[hs[x]]) hs[x]=w[i].to;\n\t\t}\n\t}\n}\nvoid dfs2(int x,int tp){\n\ttop[x]=tp;\n\tif (hs[x]) dfs2(hs[x],tp);\n\t// top[x]=x;\n\tfor (int i=head[x]; i; i=w[i].next)\n\t\tif (w[i].to!=hs[x]&&w[i].to!=fa[x])\n\t\t\tdfs2(w[i].to,w[i].to);\n}\ninline int find(int y,int x){\n\tint u;\n\twhile (top[x]!=top[y]) u=top[x],x=fa[u];\n\tif (x==y) return u; return hs[y];\n}\ninline void build(int x,int y){\n\tint nx=0,ny=0;\n\tint l1=idx[x],r1=idx[x]+size[x]-1;\n\tint l2=idx[y],r2=idx[y]+size[y]-1;\n\tif (x==rt) lx[++nx]=n,fx[nx]=1;\n\telse\n\t\tif (idx[x]<=idx[rt]&&idx[rt]<=idx[x]+size[x]-1){\n\t\t\tint z=find(x,rt);\n\t\t\tlx[++nx]=idx[z]-1; fx[nx]=1;\n\t\t\tlx[++nx]=idx[z]+size[z]-1; fx[nx]=-1;\n\t\t\tlx[++nx]=n; fx[nx]=1;\n\t\t}\n\t\telse{\n\t\t\tlx[++nx]=r1; fx[nx]=1;\n\t\t\tlx[++nx]=l1-1; fx[nx]=-1;\n\t\t}\n\tif (y==rt) ly[++ny]=n,fy[ny]=1;\n\telse\n\t\tif (idx[y]<=idx[rt]&&idx[rt]<=idx[y]+size[y]-1){\n\t\t\tint z=find(y,rt);\n\t\t\tly[++ny]=idx[z]-1; fy[ny]=1;\n\t\t\tly[++ny]=idx[z]+size[z]-1; fy[ny]=-1;\n\t\t\tly[++ny]=n; fy[ny]=1;\n\t\t}\n\t\telse{\n\t\t\tly[++ny]=r2; fy[ny]=1;\n\t\t\tly[++ny]=l2-1; fy[ny]=-1;\n\t\t}\n\tfor (int i=1; i<=nx; i++)\n\t\tfor (int j=1; j<=ny; j++)\n\t\t\tif (lx[i]&&ly[j])\n\t\t\t\tq[++que].h=now,q[que].l=lx[i],q[que].r=ly[j],q[que].f=fx[i]*fy[j];\n}\ninline void add(int x,int y){o[dfn[x]][y]++; sum+=o[dfn[x]][y^1];}\ninline void del(int x,int y){o[dfn[x]][y]--; sum-=o[dfn[x]][y^1];}\nint main(){\n\tint x,y,opt;\n\tread(n),read(m);\n\tfor (int i=1; i<=n; i++) read(a[i].z),a[i].h=i;\n\tsort(a+1,a+n+1,cmp2);\n\tfor (int i=1; i<=n; i++){\n\t\tb[a[i].h]=b[a[i-1].h]; if (a[i].z!=a[i-1].z) b[a[i].h]++;\n\t}\n\n\t// puts(\"dllxl\");\n\tfor (int i=1; i<n; i++){\n\t\tread(x),read(y);\n\t\tadd_edge(x,y); add_edge(y,x);\n\t}\n\tdfs1(1,0); dfs2(1,1); rt=1;\n\tfor (int i=1; i<=m; i++){\n\t\tread(opt);\n\t\tif (opt==1) read(rt);\n\t\telse{\n\t\t\tread(x),read(y);\n\t\t\tnow++; build(x,y);\n\t\t}\n\t}\n\tblo=sqrt(n);\n\tfor (int i=1; i<=n; i++) bl[i]=(i-1)/blo+1;\n\tsort(q+1,q+que+1,cmp);//\treturn 0;\n\tfor (int i=1; i<=que; i++){\n\t\twhile (l<q[i].l) l++,add(l,0);\n\t\twhile (l>q[i].l) del(l,0),l--;\n\t\twhile (r<q[i].r) r++,add(r,1);\n\t\twhile (r>q[i].r) del(r,1),r--;\n\t\tans[q[i].h]+=sum*q[i].f;\n\t}\n\tfor (int i=1; i<=now; i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1552282962,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    },
    {
        "content": "### \u5e7f\u544a  \n\n[\u672c\u849f\u84bb\u7684Blog](https://www.chnxuzhiyuan.cn/2019/03/06/%E3%80%8CYNOI2016%E3%80%8D%E8%BF%99%E6%98%AF%E6%88%91%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8F%91%E6%98%8E-Solution/)\n\n### \u9898\u89e3\n\n\u53c8\u662f\u4e00\u9053\u7531\u4e43OI\u7684\u6bd2\u7624\u9898QwQ\u3002\n\n\u524d\u7f6e\u6280\u80fd\uff0c\u8fd9\u9898\u7684\u7b80\u5316\u7248\uff1a[SNOI2017 \u4e00\u4e2a\u7b80\u5355\u7684\u8be2\u95ee](https://www.chnxuzhiyuan.cn/2019/03/04/%E3%80%8CSNOI2017%E3%80%8D%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%A2%E9%97%AE-Solution/)\u3002\n\n\u505a\u5b8c\u4e0a\u9762\u4e00\u9898\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u8981\u722c\u5230\u6811\u4e0a\u505a\u8fd9\u9898\u5c31\u884c\u4e86\u3002\n\n\u5148~~\u4e00\u5df4\u638c\u628a\u6811\u62cd\u6241~~\u6309\u7167DFS\u5e8f\u5c06\u6811\u5316\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u8fd9\u6837\u6bcf\u4e00\u9897\u5b50\u6811\u5bf9\u5e94\u7740\u5e8f\u5217\u4e0a\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u7136\u540e\u5c31\u548c\u4e4b\u524d\u90a3\u4e00\u9898\u6ca1\u4ec0\u4e48\u533a\u522b\u4e86\u3002\n\n\u4f46\u662f\uff01\uff01\uff01\u7adf\u7136\u6709\u6362\u6839\u8fd9\u79cd\u64cd\u4f5c\u3002\n\n\u4e0d\u8fc7\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u6362\u6839\u7684\u64cd\u4f5c\u5c31\u662f\u5047\u7684\u3002\n\n\u5148\u8bbe\u5f53\u524d\u7684\u6839\u4e3a$rt$\uff0c\u8be2\u95ee\u5b50\u6811\u7684\u8282\u70b9\u4e3a$x$\uff0c\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u4eec\u5c31\u8ba4\u4e3a\u6839\u59cb\u7ec8\u662f\u8282\u70b9$1$\u3002\n\n\u7136\u540e\u53c8\u8fd9\u4e48\u51e0\u79cd\u60c5\u51b5\uff1a\n\n- $x=rt$\n\n\u6b64\u65f6\u8be2\u95ee\u7684\u5c31\u662f\u6574\u68f5\u6811\u3002\n\n![1.png](https://www.chnxuzhiyuan.cn/images/%E3%80%8CYNOI2016%E3%80%8D%E8%BF%99%E6%98%AF%E6%88%91%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8F%91%E6%98%8E-1.png)\n\n- $LCA(x,rt)\\neq x$\n\n\u6b64\u65f6\u67e5\u8be2\u7684\u5c31\u662f\u5f53$1$\u4e3a\u6839\u65f6$x$\u7684\u5b50\u6811\u3002\n\n![2.png](https://www.chnxuzhiyuan.cn/images/%E3%80%8CYNOI2016%E3%80%8D%E8%BF%99%E6%98%AF%E6%88%91%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8F%91%E6%98%8E-2.png)\n\n- $LCA(x,rt)=x$\n\n![3.png](https://www.chnxuzhiyuan.cn/images/%E3%80%8CYNOI2016%E3%80%8D%E8%BF%99%E6%98%AF%E6%88%91%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8F%91%E6%98%8E-3.png)\n\n\u6b64\u65f6\u67e5\u8be2\u6574\u68f5\u6811\u9664\u53bbrt\u5230x\u8def\u5f84\u4e0a\u79bbx\u6700\u8fd1\u7684\u4e00\u4e2a\u8282\u70b9\uff08\u5c31\u662f\u56fe\u4e2d\u597d\u51e0\u4e2a\u7bad\u5934\u6307\u7684\u90a3\u4e2a\u70b9\uff09\u7684\u5b50\u6811\u3002\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a\u5e8f\u5217\u89e3\u51b3\u3002\u90a3\u4e2a\u8282\u70b9\u53ef\u4ee5\u901a\u8fc7\u500d\u589e\u627e\u5230\u3002\n\n\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u5e8f\u5217\u4e4b\u540e\uff0c\u76f4\u63a5\u83ab\u961f\u5373\u53ef\u3002\n\n\u8fd8\u6709\u8bb0\u5f97\u8981\u79bb\u6563\uff0c\u6743\u503c\u662f\u6bd4\u8f83\u5927\u7684\u3002~~\u6211\u5c31\u56e0\u4e3a\u6ca1\u770b\u6570\u636e\u8303\u56f4\uff0c\u5fd8\u8bb0\u79bb\u6563\uff0c\u7ed3\u679c\u5d29\u63891\u4e2a\u70b9QwQ~~\n\n### \u4ee3\u7801\n\n```cpp\n#include<map>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int maxn=100005,maxm=500005;\nint n,m,q,rt,idx,tot,lnk[maxn],son[maxn*2],nxt[maxn*2],St[maxn],En[maxn],father[maxn][20],dep[maxn],A[maxn],B[maxn],S,Area[maxn],num,cnt1[maxn],cnt2[maxn],p1,p2;LL ans[maxm],now;   //\u8981\u5f00\u7684\u4e1c\u897f\u5b9e\u5728\u592a\u591a\uff0c\u5199\u7684\u597d\u4e11QwQ\nmap<int,int> hsh;\ninline int read()\n{\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){ret=ret*10+ch-'0';ch=getchar();}\n\treturn ret*f;\n}\ninline void add_e(int x,int y){tot++;son[tot]=y;nxt[tot]=lnk[x];lnk[x]=tot;}\nvoid Build(int now,int fa)        //\u4ee5\u8282\u70b91\u4f5c\u4e3a\u6839\u8282\u70b9\u521d\u59cb\u5316\n{\n\tfather[now][0]=fa;dep[now]=dep[fa]+1;idx++;A[idx]=B[now];St[now]=idx;\n\tfor(int i=1;i<=16;i++) father[now][i]=father[father[now][i-1]][i-1];\n\tfor(int i=lnk[now];i;i=nxt[i])\n\t\tif(son[i]!=fa)\n\t\t\tBuild(son[i],now);\n\tEn[now]=idx;\n}\nint LCA(int u,int v)              //\u500d\u589eLCA\n{\n\tif(dep[u]<dep[v]) swap(u,v);\n\tfor(int i=16;i>=0;i--) if(dep[father[u][i]]>=dep[v]) u=father[u][i];\n\tfor(int i=16;i>=0;i--) if(father[u][i]!=father[v][i]){u=father[u][i];v=father[v][i];}\n\tif(u!=v) return father[u][0];\n\treturn u;\n}\nint GetSon(int u,int v)\n{\n\tif(dep[u]<dep[v]) swap(u,v);\n\tfor(int i=16;i>=0;i--) if(dep[father[u][i]]>dep[v]) u=father[u][i];\n\treturn u;\n}\nstruct Interval\n{\n\tint R1,R2,f,id;\n\tvoid Init(){if(R1>R2)swap(R1,R2);}\n\tbool operator < (const Interval& b)const{return Area[R1]<Area[b.R1]||(Area[R1]==Area[b.R1]&&((Area[R1]&1)?R2<b.R2:R2>b.R2));}\n}Q[maxm*16];            //\u6ce8\u610f\u4e00\u4e2a\u8be2\u95ee\u6700\u5de6\u53ef\u4ee5\u62c6\u621016\u4e2a\u533a\u95f4\ninline void Add(int L1,int R1,int L2,int R2,int id)\n{\n\tnum++;Q[num].R1=R1;Q[num].R2=R2;Q[num].f=1;Q[num].Init();Q[num].id=id;\n\tif(L1>1){num++;Q[num].R1=L1-1;Q[num].R2=R2;Q[num].f=-1;Q[num].Init();Q[num].id=id;}\n\tif(L2>1){num++;Q[num].R1=R1;Q[num].R2=L2-1;Q[num].f=-1;Q[num].Init();Q[num].id=id;}\n\tif(L1>1&&L2>1){num++;Q[num].R1=L1-1;Q[num].R2=L2-1;Q[num].f=1;Q[num].Init();Q[num].id=id;}\n}\nint main()\n{\n\tn=read();m=read();S=sqrt(n)+1e-10;rt=1;\n\tfor(int i=1;i<=n;i++) A[i]=B[i]=read();\n\tsort(B+1,B+1+n);int tep=0;\n\tfor(int i=1;i<=n;i++) if(!hsh[B[i]]) hsh[B[i]]=++tep;\n\tfor(int i=1;i<=n;i++) B[i]=hsh[A[i]];                //\u79bb\u6563\n\tfor(int i=1;i<=n;i++) Area[i]=(i-1)/S+1;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint a=read(),b=read();\n\t\tadd_e(a,b);add_e(b,a);\n\t}\n\tBuild(1,0);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(read()==1) rt=read();\n\t\telse\n\t\t{\n\t\t\tint x=read(),y=read();q++;\n\t\t\tint len1=0,L1[3],R1[3],len2=0,L2[3],R2[3];\n\t\t\tif(x==rt){len1++;L1[len1]=1;R1[len1]=n;}\n\t\t\telse if(LCA(x,rt)!=x){len1++;L1[len1]=St[x];R1[len1]=En[x];}\n\t\t\telse{int v=GetSon(rt,x);len1++;L1[len1]=1;R1[len1]=St[v]-1;if(En[v]<n){len1++;L1[len1]=En[v]+1;R1[len1]=n;}}\n\t\t\tif(y==rt){len2++;L2[len2]=1;R2[len2]=n;}\n\t\t\telse if(LCA(y,rt)!=y){len2++;L2[len2]=St[y];R2[len2]=En[y];}\n\t\t\telse{int v=GetSon(rt,y);len2++;L2[len2]=1;R2[len2]=St[v]-1;if(En[v]<n){len2++;L2[len2]=En[v]+1;R2[len2]=n;}}\n\t\t\tfor(int j=1;j<=len1;j++)\t\n\t\t\t\tfor(int k=1;k<=len2;k++)\n\t\t\t\t\tAdd(L1[j],R1[j],L2[k],R2[k],q);          //\u62c6\u6210\u533a\u95f4\u4e0a\u83ab\u961f\n\t\t}\n\t}\n\tsort(Q+1,Q+1+num);                //\u83ab\u961f\n\tfor(int i=1;i<=num;i++)\n\t{\n\t\twhile(p2<Q[i].R2){p2++;cnt2[A[p2]]++;now+=cnt1[A[p2]];}\n\t\twhile(p1>Q[i].R1){cnt1[A[p1]]--;now-=cnt2[A[p1]];p1--;}\n\t\twhile(p2>Q[i].R2){cnt2[A[p2]]--;now-=cnt1[A[p2]];p2--;}\n\t\twhile(p1<Q[i].R1){p1++;cnt1[A[p1]]++;now+=cnt2[A[p1]];}\n\t\tans[Q[i].id]+=now*Q[i].f;\n\t}\n\tfor(int i=1;i<=q;i++)\n\t\tprintf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1551855254,
        "uid": 42392,
        "name": "\u5f90\u81f4\u8fdc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    },
    {
        "content": "# [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u8fd9\u91cc](https://www.cnblogs.com/owencodeisking/p/10003463.html)\n\n\u8bdd\u8bf4\u8fd9\u9053\u9898\u6570\u636e\u662f\u4e0d\u662f\u90fd\u662f\u94fe\u554a\uff0c\u6211\u4e0d\u624b\u52a8\u6269\u6808\u5c31\u5168 $RE$...\n\n\u4e0d\u8fc7 $A$ \u4e86\u8fd9\u9898\u8fd8\u662f\u5f88\u723d\u7684\uff0c\u901a\u8fc7\u6628\u665a\u5230\u4eca\u5929\u65e9\u4e0a\u7684\u594b\u6597\uff0c\u7ec8\u4e8e\u809d\u51fa\u4e86\u8fd9\u9898\n\n\u5176\u5b9e\u697c\u4e0a\u8bf4\u7684\u4e5f\u5dee\u4e0d\u591a\u4e86\uff0c\u5c31\u662f\u628a\u533a\u95f4\u62c6\u6389\u7136\u540e\u83ab\u961f\u778e\u641e\n\n\u5f31\u5316\u7248\uff1a[bzoj [SNOI2017]\u4e00\u4e2a\u7b80\u5355\u7684\u8be2\u95ee](https://www.lydsy.com/JudgeOnline/problem.php?id=5016)\n\n\u90a3\u6211\u5148\u8bb2\u5f31\u5316\u7248\u5427\n\n\u53ef\u4ee5\u53d1\u73b0 \n$$\\sum_{x=0}^{inf}get(l_1,r_1,x)\\times get(l_2,r_2,x)=\\sum_{x=0}^{inf}get(0,r_1,x)\\times get(0,r_2,x)-\\sum_{x=0}^{inf}get(0,l_1-1,x)\\times get(0,r_2,x)$$\n$$-\\sum_{x=0}^{inf}get(0,r_1,x)\\times get(0,l_2-1,x)+\\sum_{x=0}^{inf}get(0,l_1-1,x)\\times get(0,l_2-1,x)$$\n\n\u6211\u4eec\u5bf9\u4e0a\u9762\u7684\u5f0f\u5b50\u76f4\u63a5\u4e0a\u83ab\u961f\uff0c\u5f00\u4e24\u4e2a\u6570\u7ec4\u7edf\u8ba1\u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=100000+10;\nint n,m,a[maxn],b[maxn],c[maxn],tot,blo;ll ans[maxn],now;\n\nstruct Query{\n\tint l,r,id,v;\n}q[maxn<<2];\n\nbool cmp(Query a,Query b){\n\tif((a.l-1)/blo!=(b.l-1)/blo)\n\t\treturn (a.l-1)/blo<(b.l-1)/blo;\n\treturn a.r<b.r;\n}\n\ninline int read(){\n\tregister int x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn (f==1)?x:-x;\n}\n\ninline void addb(int x){now+=(ll)c[a[x]];b[a[x]]++;}\ninline void delb(int x){now-=(ll)c[a[x]];b[a[x]]--;}\ninline void addc(int x){now+=(ll)b[a[x]];c[a[x]]++;}\ninline void delc(int x){now-=(ll)b[a[x]];c[a[x]]--;}\n\nint main()\n{\n\tn=read();blo=sqrt(n);\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tm=read();\n\tint l1,r1,l2,r2;\n\tfor(int i=1;i<=m;i++){\n\t\tl1=read(),r1=read(),l2=read(),r2=read();\n\t\tq[++tot]=(Query){r1,r2,i,1};\n\t\tif(l1>1) q[++tot]=(Query){l1-1,r2,i,-1};\n\t\tif(l2>1) q[++tot]=(Query){l2-1,r1,i,-1};\n\t\tif(l1>1&&l2>1) q[++tot]=(Query){l1-1,l2-1,i,1};\t\n\t}\n\tsort(q+1,q+tot+1,cmp);\n\tint L=0,R=0;\n\tfor(int i=1;i<=tot;i++){\n\t\twhile(L<q[i].l) addb(++L);\n\t\twhile(L>q[i].l) delb(L--);\n\t\twhile(R<q[i].r) addc(++R);\n\t\twhile(R>q[i].r) delc(R--);\n\t\tans[q[i].id]+=(ll)q[i].v*now;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n\u7136\u540e\u5199\u5b8c\u5f31\u5316\u7248\u5c31\u6765\u505a\u8fd9\u9898\u4e86\u2026\u2026\u6211\u7684\u4ee3\u7801\u6d1b\u8c37 $AC$\uff0c$bzoj\\ AC$\uff0c$loj\\ TLE$\uff0c\u5f3a\u884c\u4e0a $fread\\ fwrite$ \u624d\u5361\u8fc7\u53bb\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5dee\u4e0d\u591a\uff0c\u8f6c\u5316\u4e3a $dfs$ \u5e8f\uff0c\u7136\u540e\u7c7b\u4f3c\u6811\u5256\u6362\u6839\u7684\u601d\u60f3\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1\u3001$x=rt$ \n\n2\u3001$rt$ \u5728\u4ee5 $1$ \u4e3a\u6839\u65f6 $x$ \u7684\u5b50\u6811\u4e2d\n\n3\u3001$rt$ \u4e0d\u5728\u4ee5 $1$ \u4e3a\u6839\u65f6 $x$ \u7684\u5b50\u6811\u4e2d\n\n\u7136\u540e\u7b2c\u4e00\u79cd\u548c\u7b2c\u4e09\u79cd\u60c5\u51b5\u6bd4\u8f83\u7b80\u5355\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u8981\u627e $rt$ \u5728\u54ea\u91cc\uff0c\u6211\u7528\u7684\u6811\u5256\uff0c\u5176\u5b9e\u8fd8\u53ef\u4ee5\u7528\u500d\u589e\uff0c\u8f6c\u5316\u4e3a\u4e24\u6bb5\u533a\u95f4\uff0c\u7136\u540e\u5408\u5e76 $x$ \u7684\u533a\u95f4\u548c $y$ \u7684\u533a\u95f4\n\n\u90a3\u4e48\u5c31\u8981\u5206\u4e5d\u79cd\u60c5\u51b5\u8ba8\u8bba\u4e86 ~~\u602a\u4e0d\u5f97lxl\u7684\u9898\u76ee\u90a3\u4e48\u6bd2\u7624~~\n\n\u4e25\u91cd\u538b\u884c\u540e $91$ \u884c\uff0c\u8fd8\u662f\u6bd4\u8f83\u6e05\u723d\u7684\n\n$Code\\ Below:$\n\n```cpp\n#pragma comment(linker, \"/STACK:102400000,102400000\")\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=100000+10;\nint n,m,rt=1,a[maxn],mp[maxn],b[maxn],c[maxn],cnt,blo,t;ll ans[maxn*5],now;\nint top[maxn],siz[maxn],son[maxn],fa[maxn],id[maxn],head[maxn],to[maxn<<1],nxt[maxn<<1],tot,tim;\nstruct Query{int l,r,id,v;}q[maxn*80];\nbool cmp(Query a,Query b){return ((a.l-1)/blo!=(b.l-1)/blo)?((a.l-1)/blo<(b.l-1)/blo):(a.r<b.r);}\ninline int read(){\n    register int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return (f==1)?x:-x;\n}\ninline void add(int x,int y){to[++tot]=y;nxt[tot]=head[x];head[x]=tot;}\nvoid dfs1(int x,int f){\n    siz[x]=1;fa[x]=f;int maxson=-1;\n    for(int i=head[x];i;i=nxt[i])\n        if(to[i]!=f){\n            dfs1(to[i],x);siz[x]+=siz[to[i]];\n            if(maxson<siz[to[i]]) maxson=siz[to[i]],son[x]=to[i];\n        }\n}\nvoid dfs2(int x,int topf){\n    id[x]=++tim;mp[tim]=a[x];top[x]=topf;\n    if(son[x]) dfs2(son[x],topf);\n    for(int i=head[x];i;i=nxt[i])\n        if(to[i]!=fa[x]&&to[i]!=son[x]) dfs2(to[i],to[i]);\n}\ninline int getson(int x,int y){\n    while(top[x]!=top[y]){x=top[x];if(fa[x]==y) return x;x=fa[x];}\n    return son[y];\n}\ninline void addb(int x){now+=(ll)c[mp[x]];b[mp[x]]++;}\ninline void delb(int x){now-=(ll)c[mp[x]];b[mp[x]]--;}\ninline void addc(int x){now+=(ll)b[mp[x]];c[mp[x]]++;}\ninline void delc(int x){now-=(ll)b[mp[x]];c[mp[x]]--;}\ninline void Add(int l1,int r1,int l2,int r2,int id){\n    if(l1<1||l2<1||r1>n||r2>n||l1>r1||l2>r2) return ;\n    q[++cnt]=(Query){r1,r2,id,1};\n    if(l1>1) q[++cnt]=(Query){l1-1,r2,id,-1};\n    if(l2>1) q[++cnt]=(Query){l2-1,r1,id,-1};\n    if(l1>1&&l2>1) q[++cnt]=(Query){l1-1,l2-1,id,1};\t\n}\nint main()\n{\n    n=read(),m=read();blo=sqrt(n);\n    int i,opt,x,y,z,l1,r1,j=0,L=0,R=0;\n    for(i=1;i<=n;i++) mp[i]=a[i]=read();\n    sort(mp+1,mp+n+1);t=unique(mp+1,mp+n+1)-mp-1;\n    for(i=1;i<=n;i++) a[i]=lower_bound(mp+1,mp+t+1,a[i])-mp;\n    for(i=1;i<n;i++){x=read(),y=read();add(x,y);add(y,x);}\n    dfs1(rt,0);dfs2(rt,rt);\n    for(i=1;i<=m;i++){\n        opt=read();\n        if(opt==1) rt=read();\n        if(opt==2){\n            j++;x=read(),y=read();\n            if(x==rt){\n                if(y==rt) Add(1,n,1,n,j);\n                else if(id[y]<id[rt]&&id[rt]+siz[rt]<=id[y]+siz[y]) \n                    z=getson(rt,y),Add(1,n,1,id[z]-1,j),Add(1,n,id[z]+siz[z],n,j);\n                else Add(1,n,id[y],id[y]+siz[y]-1,j);\n            }\n            else if(id[x]<id[rt]&&id[rt]+siz[rt]<=id[x]+siz[x]){\n                z=getson(rt,x);l1=id[z];r1=id[z]+siz[z]-1;\n                if(y==rt) Add(1,l1-1,1,n,j),Add(r1+1,n,1,n,j);\n                else if(id[y]<id[rt]&&id[rt]+siz[rt]<=id[y]+siz[y])\n                    z=getson(rt,y),Add(1,l1-1,1,id[z]-1,j),Add(1,l1-1,id[z]+siz[z],n,j),Add(r1+1,n,1,id[z]-1,j),Add(r1+1,n,id[z]+siz[z],n,j);\n                else Add(1,l1-1,id[y],id[y]+siz[y]-1,j),Add(r1+1,n,id[y],id[y]+siz[y]-1,j);\n            }\n            else {\n                if(y==rt) Add(id[x],id[x]+siz[x]-1,1,n,j);\n                else if(id[y]<id[rt]&&id[rt]+siz[rt]<=id[y]+siz[y])\n                    z=getson(rt,y),Add(id[x],id[x]+siz[x]-1,1,id[z]-1,j),Add(id[x],id[x]+siz[x]-1,id[z]+siz[z],n,j);\n                else Add(id[x],id[x]+siz[x]-1,id[y],id[y]+siz[y]-1,j);\n            }\n        }\n    }\n    sort(q+1,q+cnt+1,cmp);\n    for(i=1;i<=cnt;i++){\n        while(L<q[i].l) addb(++L);\n        while(L>q[i].l) delb(L--);\n        while(R<q[i].r) addc(++R);\n        while(R>q[i].r) delc(R--);\n        ans[q[i].id]+=(ll)q[i].v*now;\n    }\n    for(i=1;i<=j;i++) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1542846386,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    },
    {
        "content": "### [[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e](https://www.luogu.com.cn/problem/P4689)\n\n\u5148\u770b\u5f31\u5316\u7248[[Snoi2017]\u4e00\u4e2a\u7b80\u5355\u7684\u8be2\u95ee](http://www.lydsy.com/JudgeOnline/problem.php?id=5016)\n\n\u6211\u4eec\u8bbe$f(l_1,r_1,l_2,r_2)$\u4e3a\u533a\u95f4$[l_1,r_1]$\u548c$[l_2,r_2]$\u4e2d\u5404\u53d6\u4e00\u4e2a\u7684\u6743\u503c\u76f8\u540c\u60c5\u51b5\u603b\u6570\n\n\u4f464\u5143\u6211\u4eec\u4e0d\u597d\u5904\u7406\n\n\u5bb9\u65a5\n\n$f(l_1,r_1,l_2,r_2)=f(1,r_1,1,r_2)-f(1,l_2-1,1,r_1)-f(1,l_1-1,1,r_2)+f(1,l_1-1,1,l_2-1)$\n\n\u8fd9\u6837\u7684\u8bdd\u6bcf\u4e00\u4e2af\u5c31\u53ea\u6709\u4e24\u5143\u4e86\n\n\u6211\u4eec\u7528\u56fe\u6765\u5f62\u8c61\u7684\u770b\u4e00\u770b\u8fd9\u4e2a\u5bb9\u65a5\n\n![](https://s1.ax1x.com/2020/04/02/GtVQRH.png)\n\n\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u4e86\u4e24\u4e2a\u7d2b\u8272\u533a\u95f4\u7684f\n\n\u90a3\u4e48\uff0c\u68d5\u8272\u533a\u95f4([1,l2-1])\u548c\u7eff\u8272\u533a\u95f4([1,r1])\u7684f\u662f\u6211\u4eec\u4e0d\u5e94\u8be5\u8ba1\u7b97\u7684\n\n\u540c\u7406[1,l1-1]\u548c[1,r2]\u662f\u6211\u4eec\u4e0d\u8be5\u8ba1\u7b97\u7684\n\n\u4e24\u4e2a\u5747\u51cf\u53bb\u7684\u8bdd\uff0c\u628a[1,l1-1]\u548c[1,l2-1]\u7684f\u51cf\u4e86\u4e24\u904d\uff0c\u52a0\u56de\u6765\u5373\u53ef\n\n\u7136\u540e\u5bf9\u4e8e\u533a\u95f41\u7edf\u8ba1\u67d0\u6570\u5b57\u4e2a\u6570\u7684\u95ee\u9898\u6211\u4eec\u7528\u666e\u901a\u83ab\u961f\u89e3\u51b3\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u90fd\u662ff(1,x,1,y)\u8fd9\u4e2a\u5f62\u5f0f\n\n\u4e0d\u59a8\u8bbex\u5c0f\u4e8ey\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57k\uff0c\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373[1,x]\u5185k\u6570\u91cf\u4e58\u4ee5[1,y]\u5185k\u6570\u91cf\n\n\u8bbes1=[1,x]\u5185k\u6570\u91cf,s2=[1,y]\u5185k\u6570\u91cf\n\n\u5728\u83ab\u961fl\u6307\u9488\u5411\u5de6\u65f6\uff0c\u67d0\u4e2ak\u7684s1\u5e94\u8be5\u51cf\u5c111\uff0c\u6240\u6709s2\u4e0d\u53d8\uff0c\u5bf9\u7b54\u6848\u8d21\u732e-s2\n\nl\u6307\u9488\u5411\u53f3\uff0c\u67d0\u4e2ak\u7684s1\u5e94\u8be5\u589e\u52a01\uff0c\u6240\u6709s2\u4e0d\u53d8\uff0c\u5bf9\u7b54\u6848\u8d21\u732es2\n\n\u5728\u83ab\u961fr\u6307\u9488\u5411\u5de6\u65f6\uff0c\u67d0\u4e2ak\u7684s2\u5e94\u8be5\u51cf\u5c111\uff0c\u6240\u6709s1\u4e0d\u53d8\uff0c\u5bf9\u7b54\u6848\u8d21\u732e-s1\n\nr\u6307\u9488\u5411\u53f3\uff0c\u67d0\u4e2ak\u7684s2\u5e94\u8be5\u589e\u52a01\uff0c\u6240\u6709s1\u4e0d\u53d8\uff0c\u5bf9\u7b54\u6848\u8d21\u732es1\n\n\u6211\u4eec\u62ff\u4e24\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6570\u91cf\u5c31\u597d\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=50005,maxm=50005;\nint block;\nstruct Query{\n\tint id,x,y;\n\tbool operator <(Query i)const{\n\t\treturn ((x-1)/block==(i.x-1)/block)?y<i.y:x<i.x;\n\t}\n}q[4*maxm];\nint a[maxn];\nlong long ans=0;\nint cnt1[maxn],cnt2[maxn];\nlong long ANS[maxm];\nint read(){\n\tint x=0,y=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x*y;\n}\nvoid ins1(int x){\n\tans+=cnt2[a[x]];\n\tcnt1[a[x]]++;\n\treturn ;\n}\nvoid ins2(int x){\n\tans+=cnt1[a[x]];\n\tcnt2[a[x]]++;\n\treturn ;\n}\nvoid del1(int x){\n\tans-=cnt2[a[x]];\n\tcnt1[a[x]]--;\n\treturn ;\n}\nvoid del2(int x){\n\tans-=cnt1[a[x]];\n\tcnt2[a[x]]--;\n\treturn ;\n}\nint main(){\n\tint n,m,Q=0;\n\tn=read();\n\tblock=sqrt(n);\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tm=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint l1,r1,l2,r2;\n\t\tl1=read();r1=read();l2=read();r2=read();\n\t\tQ++;q[Q].id=i;q[Q].x=r1;q[Q].y=r2;\n\t\tif(q[Q].x>q[Q].y)swap(q[Q].x,q[Q].y);\n\t\tQ++;q[Q].id=-i;q[Q].x=l2-1;q[Q].y=r1;\n\t\tif(q[Q].x>q[Q].y)swap(q[Q].x,q[Q].y);\n\t\tQ++;q[Q].id=-i;q[Q].x=l1-1;q[Q].y=r2;\n\t\tif(q[Q].x>q[Q].y)swap(q[Q].x,q[Q].y);\n\t\tQ++;q[Q].id=i;q[Q].x=l1-1;q[Q].y=l2-1;\n\t\tif(q[Q].x>q[Q].y)swap(q[Q].x,q[Q].y);\n\t}\n\tsort(q+1,q+Q+1);\n\tint l=0,r=0;\n\tfor(int i=1;i<=Q;i++){\n\t\tint id=q[i].id,x=q[i].x,y=q[i].y;\n\t\twhile(l<x)ins2(++l);\n\t\twhile(l>x)del2(l--);\n\t\twhile(r<y)ins1(++r);\n\t\twhile(r>y)del1(r--);\n\t\tANS[abs(id)]+=(id<0?-ans:ans);\n\t}\n\tfor(int i=1;i<=m;i++)printf(\"%lld\\n\",ANS[i]);\n\treturn 0;\n}\n\n```\n\n\u6211\u4eec\u770b\u5230\u8fd9\u4e00\u9898\n\n\u9700\u8981\u4e24\u79cd\u64cd\u4f5c\n\n\u6362\u6839\u548c\u8be2\u95ee\u4e24\u9897\u5b50\u6811\u5185\u70b9\u6743\u76f8\u7b49\u60c5\u51b5\u603b\u6570\n\n\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2adfs\u6c42\u51fadfs\u5e8f\n\n\u6211\u4eec\u77e5\u9053\u4e00\u68f5\u5b50\u6811x\u7684\u6240\u6709\u70b9\u5728dfs\u5e8f\u4e0a\u7684\u4f4d\u7f6e\u662f[dfn[x],dfn[x]+son[x]-1]\n\ndfn[x]\u662fx\u7684dfs\u5e8f\uff0cson[x]\u662fx\u7684\u5b50\u6811\u5927\u5c0f\n\n\u800c\u6362\u6839\u5bf9\u4e8e\u4e00\u4e2ax\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\n\n\u5373\u6839\u5728x\u7684\u5b50\u6811\u91cc\uff08\u6307\u6839\u4e3a1\u65f6\u6811\u7684\u5f62\u6001\u4e2d\uff09\u548c\u4e0d\u5728\n\n\u5728\u65f6\uff0c\u4e0d\u96be\u53d1\u73b0\uff0cx\u7684\u5b50\u6811\u4f1a\u53d8\u6210\u6240\u6709\u8282\u70b9\u9664\u53bbx\u7684\u67d0\u4e2a\u513f\u5b50\u7684\u5b50\u6811\n\n\u8fd9\u4e2a\u513f\u5b50\u662f\u6839\u5f80x\u8d70\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\n\n\u4e0d\u5728x\u5b50\u6811\u91cc\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u4f1a\u53d1\u751f\uff0cx\u7684\u5b50\u6811\u8fd8\u662fx\u7684\u5b50\u6811\n\n\u7531\u4e8e\u533a\u95f4\u8981\u4e48\u662f\u67d0\u68f5\u5b50\u6811\uff0c\u8981\u4e48\u662f\u5168\u90e8\u8282\u70b9\u53bb\u6389\u67d0\u68f5\u5b50\u6811\n\n\u6211\u4eec\u628adfs\u5e8f\u590d\u5236\u4e00\u904d\u7c98\u540e\u9762\n\n\u66b4\u653f\u4e00\u5b9a\u80fd\u53d8\u6210\u4e00\u4e2a\u533a\u95f4\n\n\u7136\u540e\u5c31\u6309\u5f31\u5316\u7248\u7684\u65b9\u6cd5\u641e\u5373\u53ef\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005,maxm=500005;\nint block;\nstruct Query{\n\tint id,x,y;\n\tbool operator <(Query i)const{\n\t\treturn ((x-1)/block==(i.x-1)/block)?y<i.y:x<i.x;\n\t}\n}q[4*maxm];\nstruct node{\n\tint id,val;\n\tbool operator <(node i)const{\n\t\treturn val<i.val;\n\t}\n}b[maxn];\nstruct Edge{\n\tint to;\n\tint nxt;\n}e[2*maxn];\nint cnt;\nint head[maxn];\nint dfsnum;\nint a[maxn];\nint c[2*maxn],dfn[maxn],son[maxn];\nint dep[maxn],f[maxn][21];\nlong long ans=0;\nint cnt1[maxn],cnt2[maxn];\nlong long ANS[maxm];\nint read(){\n\tint x=0,y=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x*y;\n}\nvoid add(int u,int v){\n\te[cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt++;\n\treturn ;\n}\nvoid dfs(int x,int fa){\n\tdfn[x]=++dfsnum;\n\tc[dfsnum]=x;\n\tson[x]=1;\n\tdep[x]=dep[fa]+1;\n\tf[x][0]=fa;\n\tfor(int i=1;i<=20;i++)f[x][i]=f[f[x][i-1]][i-1];\n\tfor(int i=head[x];i!=-1;i=e[i].nxt){\n\t\tint tmp=e[i].to;\n\t\tif(tmp==fa)continue;\n\t\tdfs(tmp,x);\n\t\tson[x]+=son[tmp];\n\t}\n\treturn ;\n}\nint lca(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(int i=20;i>=0;i--)\n\t\tif(dep[f[x][i]]>=dep[y])\n\t\t\tx=f[x][i];\n\tif(x==y)return x;\n\tfor(int i=20;i>=0;i--)\n\t\tif(f[x][i]!=f[y][i]){\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\treturn f[x][0];\n}\nint get(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(int i=20;i>=0;i--)\n\t\tif(dep[f[x][i]]>dep[y])\n\t\t\tx=f[x][i];\n\treturn x;\n}\nvoid ins1(int x){\n\tans+=cnt2[a[c[x]]];\n\tcnt1[a[c[x]]]++;\n\treturn ;\n}\nvoid ins2(int x){\n\tans+=cnt1[a[c[x]]];\n\tcnt2[a[c[x]]]++;\n\treturn ;\n}\nvoid del1(int x){\n\tans-=cnt2[a[c[x]]];\n\tcnt1[a[c[x]]]--;\n\treturn ;\n}\nvoid del2(int x){\n\tans-=cnt1[a[c[x]]];\n\tcnt2[a[c[x]]]--;\n\treturn ;\n}\nint main(){\n\tint n,m,Q=0;\n\tn=read();m=read();\n\tblock=sqrt(2*n);\n\tmemset(head,-1,sizeof(head));\n\tfor(int i=1;i<=n;i++){b[i].id=i;b[i].val=read();}\n\tsort(b+1,b+n+1);\n\tint w=0;\n\tb[0].val=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(b[i].val>b[i-1].val)w++;\n\t\ta[b[i].id]=w;\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\tu=read();v=read();\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tdfs(1,0);\n\tfor(int i=n+1;i<=2*n;i++)c[i]=c[i-n];\n\tint rt=1;\n\tfor(int i=1;i<=m;i++){\n\t\tint opt,x,y;\n\t\tint l1,r1,l2,r2,u;\n\t\topt=read();x=read();\n\t\tif(opt==1){rt=x;ANS[i]=-1;}\n\t\telse{\n\t\t\ty=read();\n\t\t\tif(rt==x)l1=1,r1=n;\n\t\t\telse if(lca(rt,x)!=x)l1=dfn[x],r1=dfn[x]+son[x]-1;\n\t\t\telse{\n\t\t\t\tu=get(rt,x);\n\t\t\t\tl1=dfn[u]+son[u];r1=n+dfn[u]-1;\n\t\t\t}\n\t\t\tif(rt==y)l2=1,r2=n;\n\t\t\telse if(lca(rt,y)!=y)l2=dfn[y],r2=dfn[y]+son[y]-1;\n\t\t\telse{\n\t\t\t\tu=get(rt,y);\n\t\t\t\tl2=dfn[u]+son[u];r2=n+dfn[u]-1;\n\t\t\t}\n\t\t\tQ++;q[Q].id=i;q[Q].x=r1;q[Q].y=r2;\n\t\t\tif(q[Q].x>q[Q].y)swap(q[Q].x,q[Q].y);\n\t\t\tQ++;q[Q].id=-i;q[Q].x=l2-1;q[Q].y=r1;\n\t\t\tif(q[Q].x>q[Q].y)swap(q[Q].x,q[Q].y);\n\t\t\tQ++;q[Q].id=-i;q[Q].x=l1-1;q[Q].y=r2;\n\t\t\tif(q[Q].x>q[Q].y)swap(q[Q].x,q[Q].y);\n\t\t\tQ++;q[Q].id=i;q[Q].x=l1-1;q[Q].y=l2-1;\n\t\t\tif(q[Q].x>q[Q].y)swap(q[Q].x,q[Q].y);\n\t\t}\n\t}\n\tsort(q+1,q+Q+1);\n\tint l=0,r=0;\n\tfor(int i=1;i<=Q;i++){\n\t\tint id=q[i].id,x=q[i].x,y=q[i].y;\n\t\twhile(l<x)ins2(++l);\n\t\twhile(l>x)del2(l--);\n\t\twhile(r<y)ins1(++r);\n\t\twhile(r>y)del1(r--);\n\t\tANS[abs(id)]+=(id<0?-ans:ans);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tif(ANS[i]>-1)\n\t\t\tprintf(\"%lld\\n\",ANS[i]);\n\treturn 0;\n}\n\n```",
        "postTime": 1585839932,
        "uid": 98527,
        "name": "juju527",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4689 \u3010[Ynoi2016]\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u53d1\u660e\u3011"
    }
]