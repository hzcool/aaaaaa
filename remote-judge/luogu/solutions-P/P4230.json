[
    {
        "content": "\u5b98\u65b9\u9898\u89e3\u6709\u5267\u60c5\u54e6~\n\n\u5267\u60c5\u7248\u9898\u89e3\u89c1\u6700\u4e0b\u9762\n\n\u53ef\u8bfb\u9898\u9762\uff1a\n\n\u4e00\u5f20n\u70b9m\u8fb9\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u6709\u7f16\u53f7\n\n\u82e5\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u8fb9\u80fd\u8fde\u6210\u4e00\u4e2a\u73af(cycle)\uff0c\u5219\u79f0\u8fd9\u4e2a\u533a\u95f4\u4e3a\u597d\u533a\u95f4\n\n\u6c42\u6bcf\u6761\u8fb9\u5206\u522b\u5728\u591a\u5c11\u4e2a\u597d\u533a\u95f4\u5185\n\n\u89e3\u6cd50\uff1a\n\n\u6211\u4e0d\u4f1a\u505a\uff01\u8f93\u51fa\u4e00\u58060\u8bd5\u8bd5\u770b\n\n\u671f\u671b\u5f97\u52060\u5206\uff0c\u5b9e\u9645\u5f97\u52065\u5206\n\n\u8fd9\u4e2a\u6d4b\u8bd5\u70b9\u662f\u7528\u6765\u5b89\u6170\u6b63\u89e3\u5199\u6302\u7684\u540c\u5b66\u4eec\u7684\n\n\u89e3\u6cd51\uff1a\n\n\u6211\u4f1aDFS/\u5e76\u67e5\u96c6\uff01\n\n\u679a\u4e3e\u6bcf\u4e2a\u533a\u95f4\uff0cDFS\u5224\u65ad\u6709\u6ca1\u6709\u73af\uff0c\u518d\u66f4\u65b0\u533a\u95f4\u5185\u7684\u8fb9\u7684\u7b54\u6848\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\u6216$O(n^2 \\alpha(n))$\uff0c\u671f\u671b\u5f97\u520660\u5206\uff0c\u5b9e\u9645\u5f97\u520660\u5206\n\n\u89e3\u6cd52\uff1a\n\n\u6211\u4f1aLCT\uff01\n\n\u56fa\u5b9a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c\u5c06\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u5411\u53f3\u79fb\u52a8\uff0c\u7528LCT\u7ef4\u62a4\u533a\u95f4\u5185\u662f\u5426\u6709\u73af\uff0c\u5982\u679c\u6709\u73af\u5c31\u628a\u5de6\u7aef\u70b9\u5411\u53f3\u79fb\u52a8\u76f4\u5230\u6ca1\u6709\u73af\u4e3a\u6b62\n\n\u7528\u4e24\u6b21\u524d\u7f00\u548c\u7ef4\u62a4\u4e00\u4e0b\u7b54\u6848\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\uff0c\u671f\u671b\u5f97\u5206100\u5206\uff0c\u5b9e\u9645\u5f97\u520675~100\u5206\n\nFAQ\uff1a\u4e3a\u4ec0\u4e48\u6211\u5199\u4e86LCT\u5374\u53ea\u5f97\u4e8675\u5206/90\u5206\n\nA\uff1a\u56e0\u4e3afindroot\u540e\u8981splay\u624d\u80fd\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u4e0dsplay\u7684\u90fd\u88ab\u6211\u5361\u5230$O(n^2)$\u5566\uff01\n\n-----------------------------------\u4e0b\u9762\u662f\u5267\u60c5---------------------------------------\n\n\uff08\u4e8c\uff09\u8fde\u73af\u75c5\u539f\u4f53\n\n\u5176\u5b9e\uff0c\u8fd9\u4e2a\u95ee\u9898\u5e76\u4e0d\u590d\u6742\u5462\u3002\n\n\u6211\u4eec\u628a\u75c5\u539f\u4f53\u770b\u505a\u70b9\uff0c\u5f71\u54cd\u770b\u505a\u8fb9\u3002\n\n\u8fd9\u4e9b\u8fb9\u6309\u7167\u7f16\u53f7\u6392\u5e8f\uff0c\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u5e8f\u5217\u3002\n\n\u4e00\u4e2a\u533a\u95f4\uff0c\u5c31\u662f\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u7684\u67d0\u4e00\u6bb5\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u533a\u95f4\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u70b9\u548c\u8fb9\u753b\u51fa\u6765\uff0c\u770b\u770b\u6709\u6ca1\u6709\u73af\u5c31\u53ef\u4ee5\u4e86\uff0c\u6709\u73af\u7684\u8bdd\uff0c\u8bf4\u660e\u533a\u95f4\u5185\u7684\u6bcf\u4e00\u6761\u8fb9\u7684\u91cd\u8981\u7a0b\u5ea6\u90fd\u8981\u589e\u52a01\u3002\n\n\u628a\u8fd9\u4e2a\u60f3\u6cd5\u544a\u8bc9\u5c71\u5973\u5427\u3002\n\n\"\u5bf9\u54e6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\u5462\"\uff0c\u5c71\u5973\u8bf4\u9053\u3002\n\n\"\u4e0d\u8fc7\u5148\u522b\u6025\u7740\u8d70\"\n\n\"\u4f60\u770b\uff0c\u6211\u8fd9\u91cc\u6709\u51e0\u4e07\u4e2a\u75c5\u6bd2\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u5f71\u54cd\u751a\u81f3\u670920 \u4e07\u79cd\uff0c\u90a3\u4e48\u533a\u95f4\u7684\u6570\u91cf\u53ef\u80fd\u8fbe\u523020 \u4e07\u7684\u5e73\u65b9\uff01\u8fd9\u592a\u591a\u4e86\u5427\uff01\"\n\n\u5bf9\u54e6\uff0c\u60f3\u4e00\u60f3\uff0c\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u6709m \u79cd\u9009\u62e9\uff0c\u53f3\u7aef\u70b9\u7684\u9009\u62e9\u6570\u91cf\u4e5f\u662fm \u8fd9\u4e2a\u7ea7\u522b\u7684\uff0c\u90a3\u4e48\u533a\u95f4\u7684\u6570\u91cf\u786e\u5b9e\u662fm \u7684\u5e73\u65b9\u7ea7\u522b\u7684\uff0c20 \u4e07\u7684\u5e73\u65b9\u592a\u53ef\u6015\u4e86\u3002\n\n\u54c7\uff0c\u5979\u5c45\u7136\u61c2\u8fd9\u4e9b\uff0c\u5730\u5e95\u7684\u5996\u602a\u679c\u7136\u4e0d\u53ef\u5c0f\u770b\u5462\u3002\n\n\u4e0d\u8fc7\uff0c\u5979\u6ca1\u6709\u610f\u8bc6\u5230\u4e00\u70b9\u54e6\uff0c\u6211\u8fd8\u5f97\u89e3\u91ca\u4e00\u4e0b\u3002\n\n\"\u5176\u5b9e\uff0c\u4e5f\u6ca1\u6709\u8fd9\u4e48\u591a\u5427\uff1f\"\u6211\u8bf4\u9053\u3002\n\n\"\u4f60\u770b\uff0c\u5982\u679c\u6211\u8ba9\u5de6\u7aef\u70b9\u4e3a1\uff0c\u53f3\u7aef\u70b9\u548c\u5de6\u7aef\u70b9\u91cd\u5408\uff0c\u7136\u540e\u53f3\u7aef\u70b9\u4e0d\u65ad\u5411\u53f3\u8fb9\u63a8\u8fdb\uff0c\u6269\u5927\u8fd9\u4e2a\u533a\u95f4\u3002\"\n\n\"\u6bcf\u6b21\u9047\u5230\u4e00\u6761\u8fb9\uff0c\u90fd\u52a0\u8fdb\u8fd9\u5e45\u56fe\u91cc\uff0c\u76f4\u5230\u4ea7\u751f\u4e86\u4e00\u4e2a\u73af\u4e3a\u6b62\u3002\"\n\n\u5c71\u5973:\"\u90a3\u53c8\u600e\u6837\u5462\uff1f\u6ca1\u770b\u51fa\u5c11\u4e86\u54ea\u554a\"\n\n\"\u4e0d\uff0c\u4ea7\u751f\u4e00\u4e2a\u73af\u4e4b\u540e\uff0c\u53f3\u7aef\u70b9\u5c31\u4e0d\u9700\u8981\u518d\u5f80\u53f3\u63a8\u8fdb\u4e86\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u533a\u95f4\u80af\u5b9a\u90fd\u662f\u6709\u73af\u7684\u3002\u5728\u53ea\u589e\u52a0\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u73af\u662f\u4e0d\u4f1a\u6d88\u5931\u7684\uff01\"\n\n\u5c71\u5973:\"\u5bf9\u54e6\uff0c\u8fd9\u6837\u5c31\u7701\u4e86\u5f88\u591a\u529f\u592b\uff0c\u4f46\u533a\u95f4\u7684\u6570\u91cf\u8fd8\u662f\u5e73\u65b9\u7ea7\u522b\u7684\u554a\uff0c\u6709\u53ef\u80fd\u4e00\u76f4\u6ca1\u9047\u5230\u73af\uff0c\u63a8\u5230\u6700\u540e\u4e86\u5462\u3002\"\n\n\u6211:\"\u7136\u540e\uff0c\u8fd9\u91cc\u5c31\u662f\u91cd\u70b9\u4e86\u3002\u5728\u9047\u5230\u7b2c\u4e00\u4e2a\u73af\u65f6\uff0c\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u5c31\u4e0d\u7528\u7ee7\u7eed\u63a8\u8fdb\u4e86\uff0c\u53ea\u8981\u8bb0\u5f55\u4e0b\u7ed3\u679c\uff0c\u7136\u540e\u5de6\u7aef\u70b9+1 \u5c31\u884c\u3002\"\n\n......\n\n\u5c71\u5973:\"\u7136\u540e\u53f3\u7aef\u70b9\u56de\u5230\u5de6\u7aef\u70b9\uff0c\u7ee7\u7eed\u52a0\u8fb9\uff0c\u91cd\u590d\u521a\u624d\u7684\u52a8\u4f5c\uff1f\"\n\n\u6211:\"\u53f3\u7aef\u70b9\u4e0d\u7528\u56de\u5230\u5de6\u7aef\u70b9\uff01\u53ea\u8981\u7ee7\u7eed\u63a8\u8fdb\u5c31\u53ef\u4ee5\u3002\u56e0\u4e3a\u5de6\u7aef\u70b9+1 \u540e\uff0c\u5c11\u4e86\u4e00\u4e2a\u8fb9\u554a\uff0c\n\n\u521a\u624d\u6ca1\u5c11\u8fb9\u65f6\uff0c\u53f3\u7aef\u70b9\u4e4b\u524d\u7684\u90a3\u4e00\u6bb5\u8fb9\u5168\u52a0\u8fdb\u53bb\u90fd\u6ca1\u6709\u51fa\u73b0\u73af\uff0c\u5c11\u4e86\u4e00\u6761\u8fb9\u5c31\u66f4\u4e0d\u53ef\u80fd\u6709\u73af\u4e86\u3002\"\n\n......\n\n\u5c71\u5973:\"\u55ef....\u5999\u554a\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u90fd\u53ea\u5411\u53f3\u63a8\u8fdb\uff0c\u800c\u4e0d\u56de\u5934\uff0c\u6211\u8981\u5904\u7406\u7684\u533a\u95f4\u6570\u91cf\u5c31\u4e0d\u518d\u662fm \u5e73\u65b9\u7ea7\u522b\uff0c\u800c\u662fm \u7ea7\u522b\u7684\u4e86\uff0c\u662f\u4e00\u4e2a\u5927\u7684\u8fdb\u6b65\u554a\u3002\"\n\n......\n\n\u5c71\u5973:\"\u4f46\u662f\uff0c\u8fd8\u6709\u4e2a\u95ee\u9898\"\n\n\"\u4ec0\u4e48\uff1f\"\n\n\u5c71\u5973:\"\u600e\u6837\u7edf\u8ba1\uff1f\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u7ed9\u5f88\u591a\u6bb5\u533a\u95f4\u7684\u503c\u90fd+1 \u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u770b\u6210\u7ed9\u4e00\u6bb5\u533a\u95f4\u589e\u52a0\u4e00\u4e2a\u6bcf\u6b21\u9012\u51cf1 \u7684\u7b49\u5dee\u6570\u5217\"\n\n\u610f\u6599\u4e4b\u5916\u7684\u4e8b\u60c5\u51fa\u73b0\u4e86\u3002\n\n\u6211\u7684\u8111\u5b50\u7a81\u7136\u4e00\u7247\u7a7a\u767d\uff0c\u597d\u50cf\u786e\u5b9e\u5ffd\u7565\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\"\u54c7\uff0c\u8fd9\u4e2a\u6211\u4e5f\u4e0d\u4f1a\u8bf6\",\u6211\u53ea\u597d\u8fd9\u4e48\u8bf4\u3002\n\n\u5c71\u5973:\"\u597d\u5427\u597d\u5427\uff0c\u4e0d\u4f1a\u5c31\u7b97\u4e86\uff0c\u4eca\u5929\u4f60\u5e2e\u6211\u4e86\u4e00\u4e2a\u5927\u5fd9\u5462\uff0c\u4f60\u4eec\u5148\u7ee7\u7eed\u65c5\u884c\u5427\uff0c\u6211\u8bf7\u6865\u59ec\u7ed9\u4f60\u4eec\u5e26\u8def\"\u3002\n\n......\n\n\u5c31\u8fd9\u6837\uff0c\u65c5\u884c\u8fd8\u8981\u7ee7\u7eed\u4e0b\u53bb\u3002\n\n\u6c34\u6865\u5e15\u9732\u897f\u4f5c\u4e3a\u5e26\u8def\u4eba\u52a0\u5165\u4e86\u6211\u4eec\u7684\u65c5\u884c\uff0c\u5979\u4f1a\u628a\u6211\u4eec\u5e26\u5230\u65e7\u5730\u72f1\u7684\u8857\u5e02\u3002\n\n\u5e15\u9732\u897f:\"\u771f\u5ac9\u5992\u554a\uff0c\u4f60\u4eec\u8bf4\u7684\u8bdd\u6211\u5b8c\u5168\u542c\u4e0d\u61c2\"\n\n\u6211:\"\u6211\u4e5f\u6ca1\u60f3\u5230\u5462\uff0c\u5730\u5e95\u7684\u5996\u602a\u7684\u7406\u89e3\u529b\u8fd9\u4e48\u5f3a\u3002\"\n\n\u5e15\u9732\u897f:\"\u5979\u4e3a\u4e86\u66f4\u597d\u5730\u7814\u7a76\u75be\u75c5\uff0c\u53bb\u7ea2\u9b54\u9986\u7684\u5927\u56fe\u4e66\u9986\u501f\u4e86\u5404\u79cd\u65b9\u9762\u7684\u4e66\uff0c\u6240\u4ee5\u4f1a\u61c2\u90a3\u4e48\u591a\u7684\u5427\u3002\"\n\n\u6211:\"\u53ef\u80fd\u5427\"\n\n\u5e15\u9732\u897f:\"\u5bf9\u4e86\uff0c\u8fd9\u4e9b\u6211\u542c\u4e0d\u61c2\u7684\u4e1c\u897f\u662f\u5173\u4e8e\u54ea\u4e2a\u65b9\u9762\u7684\"\n\n\u6211:\"\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u7b97\u6cd5\uff0c\u6570\u636e\u7ed3\u6784\"\u3002\n\n\u5e15\u9732\u897f:\"\u8ba1\u7b97\u673a\uff1f\uff1f\uff1f \u6211\u5728\u5996\u602a\u4e4b\u5c71\u7684\u6cb3\u7ae5\u90a3\u91cc\u542c\u5230\u8fc7\uff0c\u4e0d\u662f\u53ea\u80fd\u8bb0\u5f55\u4e1c\u897f\uff0c\u7b97\u7b97\u6570\u5b66\uff0c\u73a9\u73a9\u6e38\u620f\u5417\uff1f\"\n\n\u6211:\"\u8ba1\u7b97\u673a\u5f88\u6df1\u5965\u7684\u5566\"\n\n\u5e15\u9732\u897f:\"\u771f\u662f\u5ac9\u5992\uff0c\u6211\u4e00\u70b9\u90fd\u4e0d\u61c2\"\n\n\uff08\u63a5t2\uff09",
        "postTime": 1518669571,
        "uid": 3346,
        "name": "oscar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4230 \u3010\u8fde\u73af\u75c5\u539f\u4f53\u3011"
    },
    {
        "content": "\u9898\u610f\u5927\u6982\u662f\u8fd9\u6837\uff0c\u6709m\u6761\u65e0\u5411\u8fb9\u6309\u8f93\u5165\u987a\u5e8f\u6807\u53f7\uff0c\u5982\u679c\u4e00\u6bb5\u533a\u95f4$[l,r]$\u4e0a\u7684\u65e0\u5411\u8fb9\u5305\u542b\u73af\u5c31\u79f0\u533a\u95f4$[l,r]$\u662f\u201c\u52a0\u5f3a\u533a\u95f4\u201d\uff0c\u6c42\u6bcf\u6761\u8fb9\u5206\u522b\u5728\u591a\u5c11\u4e2a\u201c\u52a0\u5f3a\u533a\u95f4\u201d\u5185\u3002\n\n\u8bbe$ans[i]$\u8868\u793a\u7b2c$i$\u6761\u8fb9\u5728\u591a\u5c11\u4e2a\u52a0\u5f3a\u533a\u95f4\u5185\u3002\u6211\u4eec\u53ef\u4ee5\u6362\u4e2a\u89c6\u89d2\uff1a\u5982\u679c\u6211\u4eec\u80fd\u627e\u51fa\u6240\u6709\u201c\u52a0\u5f3a\u533a\u95f4\u201d\uff0c\u90a3\u4e48\u5c31\u53ea\u8981\u7ed9\u6bcf\u4e2a\u52a0\u5f3a\u533a\u95f4\u4e0a\u7684$ans$\u503c\u90fd\u589e\u52a0$1$\u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48\u5982\u4f55\u627e\u51fa\u6240\u6709\u201c\u52a0\u5f3a\u533a\u95f4\u201d\uff1f\u6211\u4eec\u6709\u4e2a\u8001\u5957\u8def\uff1a\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u67e5\u8be2\u53f3\u7aef\u70b9\u3002\n\n\u7136\u800c\u5f53\u5de6\u7aef\u70b9\u56fa\u5b9a\u7684\u65f6\u5019 \u53f3\u7aef\u70b9\u4e0d\u6b62\u4e00\u4e2a\uff0c\u771f\u8981\u628a\u6240\u6709\u52a0\u5f3a\u533a\u95f4\u90fd\u627e\u51fa\u6765\u5e94\u8be5\u662f\u4e0d\u73b0\u5b9e\u7684\uff08\u800c\u4e14\u5e94\u8be5\u662f$O(n^2)$\u7684\uff09\n\n\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5f88\u597d\u7684\u6027\u8d28\uff1a\u5982\u679c$[l,r]$\u662f\u52a0\u5f3a\u533a\u95f4\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709$r\\leq r'\\leq m$\uff0c\u533a\u95f4$[l,r']$\u90fd\u662f\u52a0\u5f3a\u533a\u95f4\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u5de6\u7aef\u70b9$l$\uff0c\u67e5\u627e\u6700\u5c0f\u7684\u53f3\u7aef\u70b9$r$\uff0c\u7136\u540e\u8bb0\u5f55\u7b54\u6848\uff08\u4e00\u4f1a\u518d\u8bb2\u600e\u4e48\u8bb0\u5f55\uff09\n\n\u4f46\u662f\u5f88\u663e\u7136\u8fd9\u4e2a\u53f3\u7aef\u70b9\u6ca1\u6cd5\u5f88\u5feb\u5730\u627e\u51fa\u6765\uff0c\u4f3c\u4e4e\u8fd8\u9700\u8981\u4e00\u4e2a\u6027\u8d28\n\n\u6211\u4eec\u53d1\u73b0\uff1a\u968f\u7740$l$\u7684\u9012\u589e\uff0c\u6700\u5c0f\u7684\u53f3\u7aef\u70b9$r$\u5355\u8c03\u4e0d\u51cf\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53cc\u6307\u9488\u8fa3\uff01\u7528lct\u6765\u52a0\u8fb9\u5220\u8fb9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(mlogn)$\u3002\n\n\u7136\u540e\u6765\u8bf4\u4e00\u8bf4\u600e\u4e48\u5f97\u5230\u7b54\u6848\u3002\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u52a0\u5f3a\u533a\u95f4$[l,r]$\u7684\u65f6\u5019\uff0c\u610f\u5473\u7740$[l,r], [l,r+1], [l,r+2], ..., [l,m]$\u90fd\u662f\u52a0\u5f3a\u533a\u95f4\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ed9$ans[l],ans[l+1],...,ans[r]$\u90fd\u52a0\u4e0a$m-r+1$\uff08\u5373\u9996\u9879\u4e3a$m-r+1$\uff0c\u516c\u5dee\u4e3a$0$\u7684\u7b49\u5dee\u6570\u5217\uff09\uff0c\u7136\u540e\u7ed9$[r+1,m]$\u52a0\u4e0a\u4e00\u4e2a\u9996\u9879\u4e3a$m-r$\uff0c\u516c\u5dee\u4e3a$-1$\u7684\u7b49\u5dee\u6570\u5217\u3002\n\n\u5982\u679c\u628a\u7b49\u5dee\u6570\u5217\u5dee\u5206\uff0c\u5c31\u4f1a\u53d1\u73b0\u533a\u95f4\u52a0\u7b49\u5dee\u7684\u64cd\u4f5c\u53d8\u6210\u4e86\u533a\u95f4\u52a0\u3002\u7ebf\u6bb5\u6811\uff1f\u5f53\u7136\u4e0d\u9700\u8981\u3002\u56e0\u4e3a\u5982\u679c\u628a\u5dee\u5206\u6570\u5217\u518d\u5dee\u5206\uff08\u4e8c\u9636\u5dee\u5206\uff09\uff0c\u533a\u95f4\u52a0\u5c31\u53d8\u6210\u4e86\u5355\u70b9\u52a0\u3002\uff08\u8fd9\u91cc\u53ef\u4ee5\u81ea\u5df1\u63a8\u4e00\u4e0b\uff09\u6700\u7ec8\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u53ef\u4ee5\u5148\u6c42\u51fa\u4e00\u9636\u5dee\u5206\u518d\u6c42\u51fa\u539f\u6570\u5217\uff0c\u6bd4\u8f83\u65b9\u4fbf\u4e86\u3002\n\n~~\uff08\u611f\u89c9\u8bdd\u6709\u70b9\u591a\uff09~~\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& t) {\n    int f = 0, c = getchar(); t = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) t = t * 10 + c - 48, c = getchar();\n    if (f) t = -t;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& t, Args&... args) {\n    read(t); read(args...);\n}\n\n#ifdef WIN32\n#define LLIO \"%I64d\"\n#else\n#define LLIO \"%lld\"\n#endif\t// WIN32 long long\n#define rep(I, A, B) for (int I = (A); I <= (B); ++I)\n#define rrep(I, A, B) for (int I = (A); I >= (B); --I)\n#define erep(I, X) for (int I = head[X]; I; I = next[I])\n\nconst int maxn = 4e5 + 207;\nint fa[maxn], ch[maxn][2];\nbool rev[maxn];\nint m;\n\ninline int iden(int x) {\n    if (ch[fa[x]][0] == x) return 0;\n    if (ch[fa[x]][1] == x) return 1;\n    return -1;\n}\ninline void rotate(int x) {\n    if (!x) return;\n    int d = iden(x), y = fa[x];\n    if (~iden(y)) ch[fa[y]][iden(y)] = x;\n    fa[x] = fa[y];\n    if ((ch[y][d] = ch[x][d ^ 1]))\n        fa[ch[x][d ^ 1]] = y;\n    fa[ch[x][d ^ 1] = y] = x;\n}\ninline void pushdown(int x) {\n    if (rev[x]) {\n        rev[ch[x][0]] ^= 1;\n        rev[ch[x][1]] ^= 1;\n        rev[x] = 0; std::swap(ch[x][0], ch[x][1]);\n    }\n}\nint s[maxn];\ninline void splay(int x) {\n    int t = 0;\n    for (int i = x; ; i = fa[i]) {\n        s[++t] = i;\n        if (!~iden(i)) break;\n    }\n    while (t) pushdown(s[t--]);\n    while (~iden(x)) {\n        int y = fa[x];\n        if (~iden(y)) rotate(iden(y) ^ iden(x) ? x : y);\n        rotate(x);\n    }\n}\ninline void access(int x) {\n    for (int y = 0; x; x = fa[y = x])\n        splay(x), ch[x][1] = y;\n}\ninline void makeroot(int x) {\n    access(x); splay(x); rev[x] ^= 1;\n}\ninline void link(int x, int y) {\n    makeroot(x); fa[x] = y;\n}\ninline void cut(int x, int y) {\n    makeroot(x); access(y); splay(y);\n    fa[x] = ch[y][0] = 0;\n}\ninline int findroot(int x) {\n    access(x); splay(x);\n    while (pushdown(x), ch[x][0]) x = ch[x][0];\n    splay(x);\n    return x;\n}\ninline bool connected(int x, int y) {\n    return findroot(x) == findroot(y);\n}\n\nstruct Edge {\n    int x, y;\n};\nEdge e[maxn];\ntemplate <> inline void read<Edge>(Edge& ee) {\n    read(ee.x, ee.y);\n}\n\nlong long d2[maxn], d1[maxn], ans[maxn];\ninline void add(int l, int r, int a1, int d) {\n    if (l > r) return;\n    d2[l] += a1;\n    d2[l + 1] += d - a1;\n    d2[r + 1] -= a1 + 1ll * (r - l + 1) * d;\n    d2[r + 2] += a1 + 1ll * (r - l) * d;\n}\n\nint main() {\n    read(m);\n    rep(i, 1, m) read(e[i]);\n    for (int l = 1, r = 0; l <= m; ++l) {\n        bool found = 0;\n        while (r < m) {\n            ++r;\n            if (connected(e[r].x, e[r].y)) {\n                found = 1;\n                break;\n            }\n            link(e[r].x, e[r].y);\n        }\n        if (found) {\n            add(l, r, m - r + 1, 0);\n            add(r + 1, m, m - r, -1);\n            --r;\n        } else break;\n        cut(e[l].x, e[l].y);\n    }\n    rep(i, 1, m) d1[i] = d1[i - 1] + d2[i];\n    rep(i, 1, m) ans[i] = ans[i - 1] + d1[i];\n    rep(i, 1, m) printf(LLIO \" \", ans[i]);\n    puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1536397404,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4230 \u3010\u8fde\u73af\u75c5\u539f\u4f53\u3011"
    },
    {
        "content": "LCT \u597d\u9898\n\n\n------------\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u533a\u95f4 $[l,r]$  \u4e2d\u6709\u73af\uff0c\u90a3\u4e48 $[l,r+1],[l,r+2]...[l,n]$ \u5fc5\u7136\u6709\u73af\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e2a $l$  \uff0c\u53ea\u9700\u627e\u5230\u6700\u5c0f\u7684 $r$ \u6ee1\u8db3\u6709\u73af\u5373\u53ef\u3002\n\n\u6211\u4eec\u53c8\u53d1\u73b0\u8fd9\u4e2a $r$ \u5bf9\u4e8e\u6bcf\u4e2a $l$ \uff0c\u5355\u8c03\u4e0d\u51cf\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u53cc\u6307\u9488\u7ef4\u62a4\u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\uff0c\u6211\u4eec\u8981\u652f\u6301\u7684\u64cd\u4f5c\uff1a\u52a0\u8fb9\uff0c\u5220\u8fb9\uff0c\u5224\u65ad\u662f\u5426\u6709\u73af\uff0c\u8fd9\u4e2a\u5f88\u663e\u7136\u53ef\u4ee5\u7528 LCT \u7ef4\u62a4\u3002\n\n\u8003\u8651\u6bcf\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $l$ \u6211\u4eec\u6709 $[l,r],[l,r+1]...[l,n]$ \u8fd9\u4e48\u591a\u533a\u95f4\u5bf9\u4f1a\u7b54\u6848\u6709\u8d21\u732e\u3002\u8f6c\u5316\u4e00\u4e0b\u5373\u4e3a\uff0c\u5bf9 $[l,r]$ \u4e2d\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e $n-r+1$ \uff0c\u5bf9 $[r+1,n]$ \u7684\u8d21\u732e\u4e3a\u4e00\u4e2a\u516c\u5dee\u4e3a\u7684\u7b49\u5dee\u6570\u5217\u3002\n\n\u5bf9\u4e8e $[l,r]$  \uff0c\u76f4\u63a5\u5dee\u5206\u5373\u53ef\u3002\u5bf9\u4e8e $[r+1,n]$ \uff0c\u8003\u8651\u8fd9\u4e2a\u7b49\u5dee\u6570\u5217\u6bd4\u8f83\u7279\u6b8a\uff0c\u56e0\u4e3a\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e $x$ \u8981\u52a0\u7684\u6570\u5fc5\u7136\u662f $n-x+1$ \uff0c\u6240\u4ee5\u4e5f\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\u5373\u53ef\u3002 \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \n\n\n\n------------\n\n\n\u6ce8\u610f : findroot \u51fd\u6570\u7528\u5b8c\u4e00\u5b9a\u8981 Splay \uff0c\u4e0d\u7136\u4f1a\u88ab\u5361\u5230 $n^2$ \u3002\n\n\n\n------------\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n// Problem: P4230 \u8fde\u73af\u75c5\u539f\u4f53\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P4230\n// Memory Limit: 125 MB\n// Time Limit: 1000 ms\n// 2022-03-25 20:47:12\n// Author : louhao088\n// \n// Powered by CP Editor (https://cpeditor.org)\n#include<bits/stdc++.h>\nusing namespace std;\n//static char buf[1000000],*p1=buf,*p2=buf;\n//#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++\n#define pi pair<int,int>\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define ls c[x][0]\n#define rs c[x][1]\n#define mid (l+r>>1)\n#define lowbit(x) (x&-x)\n#define get(x) (c[fa[x]][1]==x)\n#define isrt(x) (c[fa[x]][0]!=x&&c[fa[x]][1]!=x)\nconst int maxn=3e5+5,M=34005;\ninline int read()\n{\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\ninline void print(int x)\n{\n    static int a[55];int top=0;\n    if(x<0) putchar('-'),x=-x;\n    do{a[top++]=x%10,x/=10;}while(x);\n    while(top) putchar(a[--top]+48);\n}\nint n,m,a[maxn],b[maxn],ans=1e9,f[maxn],u[maxn],v[maxn],s2[maxn];\nlong long sum[maxn];\nint s[maxn],c[maxn][2],fa[maxn],r[maxn],st[maxn];\nvoid pushup(int x){}\nvoid pushx(int x){if(!x)return;r[x]^=1;swap(ls,rs);}\nvoid push(int x){if(r[x]){pushx(ls),pushx(rs);r[x]=0;}}\nvoid rotate(int x)\n{\n\tint f1=fa[x],f2=fa[f1];int s1=get(x),s2=get(f1);int p=c[x][!s1];\n\tif(!isrt(f1))c[f2][s2]=x;fa[x]=f2;\n\tc[x][!s1]=f1;fa[f1]=x;\n\tc[f1][s1]=p;if(p)fa[p]=f1;pushup(f1);pushup(x);\n}\nvoid splay(int x)\n{\n\tint y=x,top=0;st[++top]=x;\n\twhile(!isrt(y))y=fa[y],st[++top]=y;\n\twhile(top)push(st[top]),top--;\n\twhile(!isrt(x))\n\t{\n\t\tif(!isrt(fa[x]))\n\t\t\trotate((get(x)!=get(fa[x]))?x:fa[x]);\n\t\trotate(x);\n\t}\n}\nvoid access(int x){for(int y=0;x;y=x,x=fa[x])splay(x),rs=y,pushup(x);}\nvoid makert(int x){access(x);splay(x);pushx(x);}\nint findrt(int x){access(x);splay(x);while(ls)push(x),x=ls;splay(x);return x;}\nvoid split(int x,int y){makert(x);access(y);splay(y);}\nvoid link(int x,int y){makert(x);fa[x]=y;}\nvoid cut(int x,int y){split(x,y);c[y][get(x)]=0;fa[x]=0;pushup(y);}\nbool check(int x,int y){makert(x);if(findrt(y)==x)return 1;return 0;}\nvoid add(int l,int r){sum[l]+=(n-r+1);sum[r+1]-=(n-r+1);s2[r+1]++;}\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read();int l=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tu[i]=read(),v[i]=read();\n\t\twhile(check(u[i],v[i]))add(l,i),cut(u[l],v[l]),l++;\n\t\tlink(u[i],v[i]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tsum[i]=sum[i-1]+sum[i];s2[i]=s2[i-1]+s2[i];\n\t\tprintf(\"%lld \",sum[i]+1ll*(n-i+1)*s2[i]);\n\t}\n \treturn 0;\n}\n```\n",
        "postTime": 1648274680,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3P4230 \u8fde\u73af\u75c5\u539f\u4f53"
    },
    {
        "content": "\u7528\u53cc\u6307\u9488\u626b\u63cf\u6765\u627e\u73af\uff0c\u52a0\u5165 $r$ \u4f4d\u7f6e\u7684\u8fb9\u540e\uff0c\u82e5\u5f62\u6210\u4e86\u73af\uff0c\u5c31\u5220\u53bb $l$ \u4f4d\u7f6e\u7684\u8fb9\uff0c\u76f4\u5230\u73af\u65ad\u6389\uff0c\u52a0\u8fb9\u5220\u8fb9\u548c\u5224\u5b9a\u8fde\u901a\u6027\u7528 $LCT$ \u7ef4\u62a4\u5373\u53ef\u3002\n\n\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u73af\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u533a\u95f4 $[l,r]$\uff0c\u82e5\u5176\u5f62\u6210\u4e86\u73af\uff0c\u5219\u533a\u95f4 $[l,r+1],[l,r+2] \\dots [l,m]$ \u90fd\u5f62\u6210\u4e86\u73af\u3002\u5f97\u6700\u7ec8\u7684\u8d21\u732e\u4e3a\u533a\u95f4 $[l,r]$ \u90fd\u52a0\u4e0a $m-r+1$\uff0c\u533a\u95f4 $[r+1,m]$ \u52a0\u4e0a\u4e00\u4e2a\u9996\u9879\u4e3a $m-r$\uff0c\u516c\u5dee\u4e3a $-1$ \u7684\u7b49\u5dee\u6570\u5217\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5dee\u5206\u6570\u5217\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 200010\n#define maxm 800010\n#define ls (cur<<1)\n#define rs (cur<<1|1)\n#define mid ((l+r)>>1)\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint m,root=1,pos=1;\nint fa[maxn],ch[maxn][2],rev[maxn];\nll sum[maxm],add[maxm],ans[maxn];\nstruct edge\n{\n    int x,y;\n}e[maxn];\nvoid pushadd(int cur,int l,int r,ll v)\n{\n    sum[cur]+=v*(r-l+1),add[cur]+=v;\n}\nvoid pushdown(int cur,int l,int r)\n{\n    if(!add[cur]) return;\n    pushadd(ls,l,mid,add[cur]),pushadd(rs,mid+1,r,add[cur]),add[cur]=0;\n}\nvoid modify(int L,int R,int l,int r,ll v,int cur)\n{\n    if(L>R) return;\n    if(L<=l&&R>=r)\n    {\n        pushadd(cur,l,r,v);\n        return;\n    }\n    pushdown(cur,l,r);\n    if(L<=mid) modify(L,R,l,mid,v,ls);\n    if(R>mid) modify(L,R,mid+1,r,v,rs);\n    sum[cur]=sum[ls]+sum[rs];\n}\nvoid dfs(int l,int r,int cur)\n{\n    if(l==r)\n    {\n        ans[l]=sum[cur];\n        return;\n    }\n    pushdown(cur,l,r);\n    dfs(l,mid,ls),dfs(mid+1,r,rs);\n}\nbool check(int x)\n{\n    return ch[fa[x]][1]==x;\n}\nbool notroot(int x)\n{\n    return ch[fa[x]][0]==x||ch[fa[x]][1]==x;\n}\nvoid pushrev(int x)\n{\n    rev[x]^=1,swap(ch[x][0],ch[x][1]);\n}\nvoid spread(int x)\n{\n    if(!rev[x]) return;\n    pushrev(ch[x][0]),pushrev(ch[x][1]),rev[x]=0;\n}\nvoid rotate(int x)\n{\n    int y=fa[x],z=fa[y],k=check(x),w=ch[x][k^1];\n    if(notroot(y)) ch[z][check(y)]=x;\n    ch[x][k^1]=y,ch[y][k]=w;\n    if(w) fa[w]=y;\n    fa[x]=z,fa[y]=x;\n}\nvoid all(int x)\n{\n    if(notroot(x)) all(fa[x]);\n    spread(x);\n}\nvoid splay(int x)\n{\n    all(x);\n    for(int y;notroot(x);rotate(x))\n        if(notroot(y=fa[x]))\n            rotate(check(x)^check(y)?x:y);\n}\nvoid access(int x)\n{\n    for(int y=0;x;y=x,x=fa[x]) splay(x),ch[x][1]=y;\n}\nvoid makeroot(int x)\n{\n    access(x),splay(x),pushrev(x);\n}\nvoid split(int x,int y)\n{\n    makeroot(x),access(y),splay(y);\n}\nint findroot(int x)\n{\n    access(x),splay(x);\n    while(ch[x][0]) x=ch[x][0];\n    splay(x);\n    return x;\n}\nvoid link(int x,int y)\n{\n    split(x,y),fa[x]=y;\n}\nvoid cut(int x,int y)\n{\n    split(x,y),fa[x]=ch[y][0]=0;\n}\nint main()\n{\n    read(m);\n    for(int i=1;i<=m;++i) read(e[i].x),read(e[i].y);\n    for(int i=1;i<=m;++i)\n    {\n        int x=e[i].x,y=e[i].y;\n        while(findroot(x)==findroot(y))\n        {\n            modify(pos,pos,1,m,m-i+1,root);\n            modify(i+1,m,1,m,-1,root);\n            cut(e[pos].x,e[pos].y),pos++;\n        }\n        link(x,y);\n    }\n    dfs(1,m,root);\n    for(int i=1;i<=m;++i)\n        ans[i]+=ans[i-1],printf(\"%lld \",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1596977763,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4230 \u3010\u8fde\u73af\u75c5\u539f\u4f53\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n$n$\u4e2a\u70b9\uff0c$m$\u6761\u8fb9\uff0c\u5bf9\u6bcf\u6761\u8fb9\u8fdb\u884c\u7f16\u53f7\uff0c\u82e5\u7f16\u53f7\u4e3a$[l,r]$\u7684\u533a\u95f4\u5185\u51fa\u73b0\u4e86\u73af\uff0c\u5219\u7ed9\u6bcf\u4e00\u6761\u8fb9\u7684$val$\u52a0$1$\uff0c\u6700\u540e\u8f93\u51fa\u6bcf\u6761\u8fb9\u7684$val$\u3002\n\n# \u5927\u4f53\u601d\u8def\n\u6ce8\u610f\u5230\uff1a\u82e5$[l,r]$\u4e4b\u95f4\u5b58\u5728\u73af\uff0c\u5219\u533a\u95f4$[l,r]$\u5230\u533a\u95f4$[l,m]$\u90fd\u5305\u542b\u6709\u73af\u3002\n\n\u518d\u6574\u7406\u4e00\u4e0b\u5f97\u5230\uff1a\n\n- \u7ed9\u533a\u95f4$[l,r]$\u4e2d\u7684\u8fb9\uff0c\u6bcf\u6761\u8fb9\u7684$val$\u90fd\u52a0\u4e0a\"$m-r+1$\"\n\n- \u7ed9\u533a\u95f4$[r+1,m]$\u4e2d\u7684\u8fb9\uff0c\u52a0\u4e0a\u4e00\u4e2a\u9996\u76f8\u4e3a\"$m-r$\"\uff0c\u516c\u5dee\u4e3a\"$-1$\"\u7684\u7b49\u5dee\u6570\u5217\u3002\n\n\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u7528\u4e8c\u7ef4\u5dee\u5206\u5f97\u5230\u3002\n\n\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\uff1a\u5982\u4f55\u627e\u5230\u53c8\u73af\u7684\u533a\u95f4\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u53cc\u6307\u9488\uff0c\u56e0\u4e3a\u968f\u7740 $l$ \u7684\u589e\u5927\uff0c$r$ \u5fc5\u7136\u4e0d\u4f1a\u51cf\u5c0f\u3002\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=400005;\nstruct edge{\n\tint u,v;\n} e[N];\nll delta1[N],delta2[N];\nint val[N],fa[N],rev[N],ch[N][2];\nint m,q,opt;\nint wh(int x){return ch[fa[x]][1]==x;}\nbool isrt(int x){return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;}\nvoid rever(int x){rev[x]^=1,swap(ch[x][0],ch[x][1]);}\nvoid pushdown(int x){\n\tif (rev[x]){\n\t\tif (ch[x][0]) rever(ch[x][0]);\n\t\tif (ch[x][1]) rever(ch[x][1]);\n\t\trev[x]=0;\n\t}\n}\nvoid Allpushdown(int x){\n\tif (!isrt(x)) Allpushdown(fa[x]);\n\tpushdown(x);\n}\nvoid rotate(int x){\n\tint y=fa[x],z=fa[y],c=wh(x);\n\tif (!isrt(y)) ch[z][wh(y)]=x;\n\tfa[x]=z;\n\tch[y][c]=ch[x][c^1];\n\tfa[ch[y][c]]=y;\n\tch[x][c^1]=y;\n\tfa[y]=x;\n}\nvoid splay(int x){\n\tAllpushdown(x);\n\tfor (;!isrt(x);rotate(x))\n\t\tif (!isrt(fa[x])) rotate(wh(fa[x])==wh(x)?fa[x]:x);\n}\nvoid access(int x){\n\tfor (int y=0;x;y=x,x=fa[x]) splay(x),ch[x][1]=y;\n}\nvoid makert(int x){\n\taccess(x),splay(x),rever(x);\n}\nint findrt(int x){\n\taccess(x),splay(x);\n\twhile (ch[x][0]) pushdown(x),x=ch[x][0]; \n\tsplay(x);\n\treturn x;\n}\nvoid link(int x,int y){\n\tmakert(x),fa[x]=y;\n}\nvoid cut(int x,int y){\n\tmakert(x),access(y),splay(y);\n\tif (ch[y][0]!=x&&!ch[ch[y][0]][1]) return;\n\tfa[x]=ch[y][0]=0;\n}\nvoid query(int x,int y){\n\tmakert(x),access(y),splay(y);\n}\nvoid solve(int l,int r,ll head,ll delta){\n\tif (l>r) return;\n\tdelta1[l]+=head;\n\tdelta1[r+1]+=-head;\n\tdelta2[l+1]+=delta;\n\tdelta2[r+1]+=-delta;\n}\nint main(){\n\tscanf(\"%d\",&m);\n\tfor (int i=1;i<=m;i++) scanf(\"%d%d\",&e[i].u,&e[i].v);\n\tint r=1;\n\tfor (int l=1;l<=m;l++){\n\t\twhile (r<=m){\n\t\t\tint u=e[r].u,v=e[r].v;\n\t\t\tif (findrt(u)==findrt(v)){\n\t\t\t\tsolve(l,r,m-r+1,0);\n\t\t\t\tsolve(r+1,m,m-r,-1);\n\t\t\t\tbreak;\n\t\t\t} else link(u,v);\n\t\t\t++r;\n\t\t}\n\t\tcut(e[l].u,e[l].v);\n\t}\n\tll x=0,y=0;\n\tfor (int i=1;i<=m;i++){\n\t\tx+=delta1[i],y+=delta2[i],x+=y;\n\t\tprintf(\"%lld \",x);\n\t}\n\tputs(\"\");\n\treturn 0;\n}\n```\n",
        "postTime": 1558417303,
        "uid": 111449,
        "name": "AFO_WR_Eternity",
        "ccfLevel": 0,
        "title": "[Luogu P4230]\u8fde\u73af\u75c5\u539f\u4f53"
    }
]