[
    {
        "content": "$\\text{updated:}$   \n\u4e4b\u524d\u7684\u4ee3\u7801\u6570\u7ec4\u5f00\u7684\u4e0d\u591f\u5927\uff0c\u5bfc\u81f4\u67d0\u4e9b\u6284\u4ee3\u7801\u7684\u540c\u5b66RE\u4e86\uff0c\u5728\u6b64\u8868\u793a\u975e\u5e38\u62b1\u6b49\uff01\u73b0\u5df2\u4fee\u590d\u3002\n\n\u8981\u505a\u8fd9\u9053\u9898\uff0c\u5f97\u5148\u77e5\u9053 [\u591a\u9879\u5f0f\u5f00\u6839](https://www.luogu.org/problemnew/show/P5205) \u600e\u4e48\u505a\u3002\n\n\u7ed9\u5b9a\u4e00\u4e2a\u591a\u9879\u5f0f $F(x)$\uff0c\u6c42\u4e00\u4e2a $G(x)$\uff0c\u6ee1\u8db3  \n$$G(x)\\equiv\\sin^{-1}F(x)\\space (\\text{mod }x^n)$$  \n\n\u8003\u8651\u5c06\u4e24\u904d\u6c42\u5bfc\uff0c\u5f97\u5230  \n$$G'(x)\\equiv \\frac{F'(x)}{\\sqrt{1-F(x)^2}}\\space ({\\text{mod }x^n})$$  \n\u7136\u540e\u518d\u79ef\u5206\u56de\u6765     \n$$G(x)\\equiv \\int \\frac{F'(x)}{\\sqrt{1-F(x)^2}}\\text dx\\space ({\\text{mod }x^n})$$   \n\u8fd9\u91cc\u7528\u5230\u7684\u601d\u60f3\uff0c\u548c\u6c42\u591a\u9879\u5f0f $\\ln$ \u7684\u5730\u65b9\u5f88\u7c7b\u4f3c\u3002  \n\n\u6c42 $\\tan^{-1}$ \u7684\u65b9\u5f0f\uff0c\u4e5f\u5dee\u4e0d\u591a   \n$$ H(x)\\equiv\\tan^{-1}F(x)\\space (\\text{mod }x^n)$$  \n$$ H'(x)\\equiv\\frac{F'(x)}{1+F(x)^2}\\space (\\text{mod }x^n)$$   \n$$H(x)\\equiv\\int\\frac{F'(x)}{1+F(x)^2} \\text dx\\space (\\text{mod }x^n)$$   \n\u7136\u540e\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u3002  \nCode\uff1a  \n```cpp\n#pragma GCC optimize (\"unroll-loops\")\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#define N 262147\n#define ll long long\n#define reg register\n#define p 998244353\nusing namespace std;\n\ninline int add(const int& x,const int& y){ return x+y>=p?x+y-p:x+y; }\ninline int dec(const int& x,const int& y){ return x<y?x-y+p:x-y; }\n\ninline int power(int a,int t){\n    int res = 1;\n    while(t){\n        if(t&1) res = (ll)res*a%p;\n        a = (ll)a*a%p;\n        t >>= 1;\n    }\n    return res;\n}\n\ninline int getlen(int n){\n    return 1<<(32-__builtin_clz(n));\n}\n\nint rt[N],rev[N],inv[N];\nint siz;\n\nvoid init(int n){\n    int w,lim = 1;\n    while(lim<=n) lim <<= 1,++siz;\n    for(reg int i=1;i!=lim;++i) rev[i] = (rev[i>>1]>>1)|((i&1)<<(siz-1));\n    w = power(3,(p-1)>>siz);\n    inv[1] = rt[lim>>1] = 1;\n    for(reg int i=lim>>1|1;i!=lim;++i) rt[i] = (ll)rt[i-1]*w%p;\n    for(reg int i=(lim>>1)-1;i;--i) rt[i] = rt[i<<1];\n    for(reg int i=2;i<=n;++i) inv[i] = (ll)(p-p/i)*inv[p%i]%p;\n}\n\ninline void NTT(int *f,int type,int lim){\n    if(type==-1) reverse(f+1,f+lim);\n    static unsigned long long a[N];\n    reg int x,shift = siz-__builtin_ctz(lim);\n    for(reg int i=0;i!=lim;++i) a[rev[i]>>shift] = f[i];\n    for(reg int mid=1;mid!=lim;mid<<=1)\n    for(reg int j=0;j!=lim;j+=(mid<<1))\n    for(reg int k=0;k!=mid;++k){\n        x = a[j|k|mid]*rt[mid|k]%p;\n        a[j|k|mid] = a[j|k]+p-x;\n        a[j|k] += x;\n    }\n    for(reg int i=0;i!=lim;++i) f[i] = a[i]%p;\n    if(type==1) return;\n    x = p-((p-1)>>(siz-shift));\n    for(reg int i=0;i!=lim;++i) f[i] = (ll)f[i]*x%p;\n}\n\ninline void inverse(const int *f,int n,int *R){\n    static int g[N],h[N],s[30];\n    memset(g,0,getlen(n<<1)<<2);\n    int lim = 1,top = 0;\n    while(n){\n        s[++top] = n;\n        n >>= 1;\n    }\n    g[0] = power(f[0],p-2);\n    while(top--){\n        n = s[top+1];\n        while(lim<=(n<<1)) lim <<= 1;\n        memcpy(h,f,(n+1)<<2);\n        memset(h+n+1,0,(lim-n)<<2);\n        NTT(g,1,lim),NTT(h,1,lim);\n        for(reg int i=0;i!=lim;++i) g[i] = g[i]*(2-(ll)g[i]*h[i]%p+p)%p;\n        NTT(g,-1,lim);\n        memset(g+n+1,0,(lim-n)<<2);\n    }\n    memcpy(R,g,(n+1)<<2);\n}\n\ninline void sqrt(const int *f,int n,int *R){\n    static int g[N],h[N];\n    memset(g,0,getlen(n<<1)<<2);\n    int lim = 1,top = 0;\n    int s[30];\n    while(n){\n        s[++top] = n;\n        n >>= 1;\n    }\n    g[0] = 1;\n    while(top--){\n        n = s[top+1];\n        while(lim<=(n<<1)) lim <<= 1;\n        memcpy(h,g,(n+1)<<2);\n        for(int i=0;i<=n;++i) h[i] = add(h[i],h[i]);\n        inverse(h,n,h);\n        NTT(g,1,lim);\n        for(reg int i=0;i!=lim;++i) g[i] = (ll)g[i]*g[i]%p;\n        NTT(g,-1,lim);\n        for(reg int i=0;i<=n;++i) g[i] = add(g[i],f[i]);\n        memset(g+n+1,0,(lim-n)<<2);\n        NTT(g,1,lim),NTT(h,1,lim);\n        for(reg int i=0;i!=lim;++i) g[i] = (ll)g[i]*h[i]%p;\n        NTT(g,-1,lim);\n        memset(g+n+1,0,(lim-n)<<2);\n    }\n    memcpy(R,g,(n+1)<<2);\n}\n\ninline void asin(const int *f,int n,int *R){\n    static int g[N],h[N];\n    int lim = getlen(n<<1);\n    memcpy(g,f,(n+1)<<2);\n    memset(g+n+1,0,(lim-n)<<2);\n    NTT(g,1,lim);\n    for(reg int i=0;i!=lim;++i) g[i] = (ll)g[i]*g[i]%p;\n    NTT(g,-1,lim);\n    memset(g+n+1,0,(lim-n)<<2);\n    for(reg int i=0;i<=n;++i) g[i] = g[i]?p-g[i]:0;\n    ++g[0];\n    sqrt(g,n,g);\n    inverse(g,n,g);\n    for(reg int i=0;i!=n;++i) h[i] = (ll)(i+1)*f[i+1]%p;\n    memset(h+n,0,(lim-n+1)<<2);\n    NTT(g,1,lim),NTT(h,1,lim);\n    for(reg int i=0;i!=lim;++i) g[i] = (ll)g[i]*h[i]%p;\n    NTT(g,-1,lim);\n    for(reg int i=1;i<=n;++i) R[i] = (ll)g[i-1]*inv[i]%p;\n    R[0] = 0;\n}\n\ninline void atan(const int *f,int n,int *R){\n    static int g[N],h[N];\n    int lim = getlen(n<<1);\n    memcpy(g,f,(n+1)<<2);\n    memset(g+n+1,0,(lim-n)<<2);\n    NTT(g,1,lim);\n    for(reg int i=0;i!=lim;++i) g[i] = (ll)g[i]*g[i]%p;\n    NTT(g,-1,lim);\n    memset(g+n+1,0,(lim-n)<<2);\n    ++g[0];\n    inverse(g,n,g);\n    for(reg int i=0;i!=n;++i) h[i] = (ll)(i+1)*f[i+1]%p;\n    memset(h+n,0,(lim-n+1)<<2);\n    NTT(g,1,lim),NTT(h,1,lim);\n    for(reg int i=0;i!=lim;++i) g[i] = (ll)g[i]*h[i]%p;\n    NTT(g,-1,lim);\n    for(reg int i=1;i<=n;++i) R[i] = (ll)g[i-1]*inv[i]%p;\n    R[0] = 0;\n}\n\nint n,tp;\nint F[N];\n\nint main(){\n    scanf(\"%d%d\",&n,&tp);\n    init(n<<2);\n    for(reg int i=0;i!=n;++i) scanf(\"%d\",&F[i]);\n    if(tp==0) asin(F,n-1,F);\n    else atan(F,n-1,F);\n    for(reg int i=0;i!=n;++i) printf(\"%d \",F[i]);\n    return 0;   \n}\n```",
        "postTime": 1552805416,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011\u591a\u9879\u5f0f\u53cd\u4e09\u89d2\u51fd\u6570"
    },
    {
        "content": "AC 800 \u7eaa\u5ff5\n\n\u6839\u672c\u4e0d\u9700\u8981\u5565\u5fae\u79ef\u5206\uff08\n\n\u9996\u5148\uff0c\u6709\u51e0\u4e2a\u5f0f\u5b50\uff1a\n\n$$\\arcsin(x)=-i\\ln(ix+\\sqrt{1-x^2})$$\n$$\\arctan(x)=\\frac i2[\\ln(1-ix)-\\ln(1+ix)]$$\n\n\u4e00\u4e2a\u4e00\u4e2a\u7684\u8bc1\u660e\n\n## $\\arcsin$\n\n$$\\sin\\theta=x\\implies\\arcsin x=\\theta$$\n$$\\sin\\theta=x\\iff\\frac{e^{\\theta i}-e^{-\\theta i}}{2i}=x$$\n$$p=e^{\\theta i}$$\n$$\\frac{p-\\frac 1p}{2i}=x$$\n$$p-2xi-\\frac 1p=0$$\n$$p^2-2xip-1=0$$\n$$p=e^{i\\theta}=ix\\pm\\sqrt{1-x^2}$$\n\u9009\u53d6 $+$  \n$$i\\theta=\\ln(ix+\\sqrt{1-x^2})$$\n$$\\theta=-i\\ln(ix+\\sqrt{1-x^2})$$\n$\\boxed{}$\n\n## $\\arctan$\n\n$$\\tan\\theta=x\\implies\\arctan x=\\theta$$\n$$\\tan\\theta=x\\iff\\frac{e^{\\theta i}-e^{-\\theta i}}{2i}\\frac{2}{e^{\\theta i}+e^{-\\theta i}}=x$$\n$$\\frac{e^{\\theta i}-e^{-\\theta i}}{i(e^{\\theta i}+e^{-\\theta i})}=x$$\n$$p=e^{\\theta i}$$\n$$\\frac{p-\\frac 1p}{i(p+\\frac 1p)}=x$$\n$$\\frac{p^2-1}{p^2+1}=xi$$\n\uff08\u6254\u5230 w|a \u91cc\n$$p=\\pm\\frac{\\sqrt{-xi-1}}{\\sqrt{xi-1}}$$\n\u9009\u53d6 $+$\n$$p=e^{i\\theta}=\\frac{\\sqrt{-xi-1}}{\\sqrt{xi-1}}$$\n$$i\\theta=\\ln\\frac{\\sqrt{-xi-1}}{\\sqrt{xi-1}}=\\frac 12\\ln\\frac{-xi-1}{xi-1}$$\n$$\\theta=-\\frac i2\\ln\\frac{1+xi}{1-xi}$$\n$$\\theta=-\\frac i2[\\ln(1+xi)-\\ln(1-xi)]$$\n$$\\theta=\\frac i2[\\ln(1-xi)+\\ln(1+xi)]$$\n$\\boxed{}$\n\n\u5b8c\u7ed3\uff0c\u5957\u677f\u5b50\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n// begin fast read template by CYJian (source: https://www.luogu.com.cn/paste/i11c3ppx)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) { *s = __c; } *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) { x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; } return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) { qu[++ qr] = x % 10 + '0',  x /= 10; } while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\n// end fast read template by CYJian\n\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define fi first\n#define se second\n#define pb push_back\n \n#define ll long long\n#define pii pair<int, int>\n//#define int ll\n\nnamespace poly {\n\tconst int MOD = 998244353;\n\tconst int IMAG = 86583718;\n\tconst int NTTG = 3;\n\t\n\tint rev[262160];\n\tint minv[262160];\n\tint w[20][2][262160];\n\t\n\tint qpow(int b, int e) {\n\t\tint re=1;\n\t\twhile(e){\n\t\t\tif(e&1)re=1ll*re*b%MOD;\n\t\t\tb=1ll*b*b%MOD;e>>=1;\n\t\t}\n\t\treturn re;\n\t}\n\t\n\tvoid constructrev(int n) {\n\t\tfor(int i=1, j=0; i < n; i++) {\n\t\t\tint bit=n>>1;\n\t\t\tfor(;j&bit;bit>>=1)j^=bit;\n\t\t\tj^=bit; rev[i] = j;\n\t\t}\n\t}\n\n\tvoid constructroot(int n) {\n\t\tminv[1] = 1;\n\t\titer(i, 2, n+1)\n\t\t\tminv[i]=1ll*(MOD-MOD/i)*minv[MOD%i]%MOD;\n\t\tfor(int l=1; (1<<l)<=n; l++)\n\t\t\trep(inv, 2) {\n\t\t\t\tint re = inv?qpow(minv[NTTG],(MOD-1)>>l):qpow(NTTG,(MOD-1)>>l);\n\t\t\t\tw[l][inv][0] = 1;\n\t\t\t\trep1(i,(1<<(l-1))-1) w[l][inv][i] = 1ll*w[l][inv][i-1]*re%MOD;\n\t\t\t}\n\t}\n\t\n\tvoid ntt(int *v, int n, bool inv) {\n\t\trep(i, n) if(i < rev[i]) swap(v[i], v[rev[i]]);\n\t\tfor(int l=1;(1<<l)<=n;l++)\n\t\t\tfor(int i=0;i<n;i+=(1<<l)) {\n\t\t\t\tint p=i+(1<<(l-1));\n\t\t\t\titer(j, i, p) {\n\t\t\t\t\tint a=v[j],b=1ll*v[j+(1<<(l-1))]*w[l][inv][j-i]%MOD;\n\t\t\t\t\tv[j]=(a+b>=MOD?a+b-MOD:a+b);\n\t\t\t\t\tv[j+(1<<(l-1))]=(a<b?a+MOD-b:a-b);\n\t\t\t\t}\n\t\t\t}\n\t\tif(inv) rep(i, n) v[i] = 1ll*v[i]*minv[n]%MOD;\n\t}\n\t\n\tvoid mult(int *a, int as, int *b, int bs, int *o, bool construct, bool clean = 0, int th = 100000000) {\n\t\tint n = as+bs-1;\n\t\twhile(n - (n & (-n))) n += (n & (-n));\n\t\tif(construct) constructroot(n);\n\t\tconstructrev(n);\n\t\tntt(a, n, 0); ntt(b, n, 0);\n\t\trep(i, n) o[i] = 1ll*a[i]*b[i]%MOD;\n\t\tntt(o, n, 1);\n\t\titer(i, th, n) o[i] = 0;\n\t\tif(clean) rep(i, n) a[i] = b[i] = 0;\n\t}\n\n\tvoid cfn(int* a, int as, int *o) {\n\t\tstatic int tmp[262160];\n\t\tif(as == 1) { tmp[0] = a[0]; o[0] = qpow(a[0], MOD - 2); return; }\n\t\tcfn(a, (as+1)/2, o); int le = 0;\n\t\twhile((1 << le) < (as << 1)) le++;\n\t\tconstructrev(1 << le);\n\t\trep(i, as) tmp[i] = a[i];\n\t\titer(i, as, 1<<le) tmp[i] = o[i] = 0;\n\t\tntt(tmp, 1<<le, 0); ntt(o, 1<<le, 0);\n\t\trep(i, 1<<le) o[i] = 1ll * (MOD + (2 - 1ll * tmp[i] * o[i]) % MOD) * o[i] % MOD;\n\t\tntt(o, 1<<le, 1);\n\t\titer(i, as, 1<<le) o[i] = 0;\n\t}\n\n\tvoid deriv(int *a, int as, int *o) { rep1(i, as-1) { o[i-1] = 1ll * i * a[i] % MOD; } o[as-1] = 0; }\n\tvoid integ(int *a, int as, int *o) { for(int i=as-2; i>=0; i--) { o[i+1] = 1ll * minv[i+1] * a[i] % MOD; } o[0] = 0; }\n\n\tvoid ln(int *a, int as, int *o) {\n\t\tstatic int iv[262160]; \n\t\tcfn(a, as, iv); \n\t\tderiv(a, as, a);\n\t\tmult(iv, as, a, as, o, 0, 1, as);\n\t\tinteg(o, as, o);\n\t}\n\t\n\tvoid exp(int *a, int as, int *o) {\n\t\tstatic int tmp[262160], tmp2[262160], tmp3[262160];\n\t\tif(as == 1) { o[0] = 1; return; }\n\t\texp(a, (as+1)/2, o);\n\t\trep(i, as) tmp[i] = o[i], tmp3[i] = 0; \n\t\tln(tmp, as, tmp3);\n\t\trep(i, as) tmp3[i] = (MOD + a[i] - tmp3[i] + (i == 0)) % MOD, tmp2[i] = o[i];\n\t\tmult(tmp2, as, tmp3, as, o, 0, 1);\n\t}\n\t\n\tvoid sqrt(int *a, int as, int *o) {\n\t\tstatic int tmp[262160];\n\t\tln(a, as, tmp);\n\t\trep(i, as) tmp[i] = 1ll * minv[2] * tmp[i] % MOD;\n\t\texp(tmp, as, o);\n\t\titer(i, as, 2*as) o[i] = 0;\n\t}\n\t\n\tvoid asin(int *a, int as, int *o) {\n\t\tstatic int v[262160], sq[262160];\n\t\tint li = 1; while(li < (2*as-1)) li <<= 1;\n\t\trep(i, as) v[i] = a[i];\n\t\tconstructrev(li);\n\t\tntt(v, li, 0);\n\t\trep(i, li) v[i] = (MOD + 1 - 1ll * v[i] * v[i] % MOD) % MOD;\n\t\tntt(v, li, 1);\n\t\titer(i, as, li) v[i] = 0;\n\t\tsqrt(v, as, sq);\n\t\trep(i, as) sq[i] = (sq[i] + 1ll * IMAG * a[i]) % MOD;\n\t\tln(sq, as, o);\n\t\trep(i, as) o[i] = 1ll * (MOD - IMAG) * o[i] % MOD;\n\t}\n\n\tvoid atan(int *a, int as, int *o) {\n\t\tstatic int v[262160], o1[262160], o2[262160];\n\t\trep(i, as) v[i] = (1ll * (MOD - IMAG) * a[i] + (i == 0)) % MOD;\n\t\tln(v, as, o1);\n\t\trep(i, as) v[i] = (1ll * IMAG * a[i] + (i == 0)) % MOD;\n\t\tln(v, as, o2);\n\t\tll p = 1ll * minv[2] * IMAG % MOD;\n\t\trep(i, as) o[i] = p * (MOD + o1[i] - o2[i]) % MOD;\n\t}\n\n\tvoid init(int n) { constructroot(n); }\n}\n\nint a[262160];\nint b[262160];\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int n, t; gi(n), gi(t);\n    int f = 1; while(f <= (n << 1)) f <<= 1;\n    rep(i, n) gi(a[i]);\n    poly::init(f);\n    if(t) poly::atan(a, n, b);\n    else poly::asin(a, n, b);\n    rep(i, n) print(b[i]), pc(' ');\n}\n\n```",
        "postTime": 1592192765,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5265 \u3010\u591a\u9879\u5f0f\u53cd\u4e09\u89d2\u51fd\u6570\u3011"
    },
    {
        "content": "# P5265 \u9898\u89e3\n~~\u4ec0\u4e48\u65f6\u5019\u849f\u84bb\u4e5f\u80fd\u5199\u9ed1\u9898\u9898\u89e3\u4e86~~\n### \u524d\u7f6e\u829d\u58eb\uff1a\u591a\u9879\u5f0f\u6c42\u6839\uff0c\u591a\u9879\u5f0f\u5bf9\u6570\u51fd\u6570\uff0c\u6b27\u62c9\u6052\u7b49\u5f0f\n\u5176\u5b9e\u8fd9\u9053\u9898\u4e0d\u9700\u8981\u5fae\u79ef\u5206\uff0c\u53ea\u9700\u8981\u4e00\u4e9b\u5c0f\u6280\u5de7\u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u4e2d\u7684\u5173\u952e\u70b9\u5728\u4e8e\u6b27\u62c9\u6052\u7b49\u5f0f\u3002\n\n\u4e09\u89d2\u51fd\u6570\u548c\u53cd\u4e09\u89d2\u51fd\u6570\u5e76\u4e0d\u662f\u5f88\u597d\u5904\u7406\uff0c\u5982\u679c\u6211\u4eec\u628a\u5b83\u8f6c\u6362\u6210\u5176\u4ed6\u51fd\u6570\u5c31\u4f1a\u6bd4\u8f83\u5bb9\u6613\u3002\u6b27\u62c9\u6052\u7b49\u5f0f\u80fd\u591f\u5b9e\u73b0\u6307\u6570\u51fd\u6570\u548c\u4e09\u89d2\u51fd\u6570\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u6240\u4ee5\u4ee5\u6b64\u4e3a\u5207\u5165\u70b9\u5f00\u59cb\u63a8\u67ff\u5b50\u3002\u5e94\u5bf9\u6307\u6570\u51fd\u6570\u6211\u4eec\u6709\u8bb8\u591a\u5de5\u5177\uff0c\u5373\u53ef\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u725b\u987f\u8fed\u4ee3\u6cd5\uff0c\u4ee5\u7c7b\u4f3c\u591a\u9879\u5f0f\u6c42\u6839\u7684\u65b9\u5f0f\u5b9e\u73b0\u53cd\u4e09\u89d2\u51fd\u6570\uff0c\u4f46\u8fd9\u6837\u5b9e\u6d4b\u5e38\u6570\u8f83\u5927\uff0c\u800c\u4e14\u7801\u91cf\u8f83\u5927\uff0c\u4e0d\u8fdb\u884c\u4e00\u4e9b\u6bd2\u7624\u5361\u5e38\u6bd4\u8f83\u96beAC\uff0c\n~~\u679c\u7136\u7cfb\u7edf\u6027\u7684\u65b9\u6cd5\u90fd\u6709\u8fd9\u4e9b\u90a3\u4e9b\u7f3a\u70b9~~\u3002\n## 1.arcsin(x)\n\u8003\u8651\u6b27\u62c9\u6052\u7b49\u5f0f\uff1a\n$$ e^{i\\theta}=\\cos\\theta+i\\sin\\theta $$\n\u7a0d\u52a0\u53d8\u6362\u53ef\u5f97\uff1a\n$$ \\sin\\theta=\\frac{e^{i\\theta}-e^{-i\\theta}}{2i} $$\n$$ \\cos\\theta=\\frac{e^{i\\theta}+e^{-i\\theta}}{2} $$\n\u4ee4 $ e^{i\\theta}=t $ \u5219\u6709\uff1a\n$$ \\sin\\theta=\\frac{t-\\frac{1}{t}}{2i} $$\n\u53d8\u6362\u53ef\u5f97\uff1a\n$$ t^2-2i\\sin\\theta-1=0 $$\n\u89e3\u5f97\uff1a\n$$ t=\\frac{2i\\sin\\theta\\pm\\sqrt{4-4\\sin^2\\theta}}{2} $$\n\u6216\uff1a\n$$ t=i\\sin\\theta\\pm\\sqrt{1-\\sin^2\\theta} $$\n\u9009\u53d6 $\\pm$ \u4e2d\u7684 $+$ ,\u540c\u65f6\u5e26\u5165 $ e^{i\\theta}=t $ \uff1a\n$$ e^{i\\theta}=i\\sin\\theta+\\sqrt{1-\\sin^2\\theta} $$\n\u4e24\u8fb9\u53d6 $\\ln$ \u540e\u9664\u4ee5 $i$\uff1a\n$$ \\theta=\\frac{\\ln(i\\sin\\theta+\\sqrt{1-\\sin^2\\theta})}{i} $$\n\u5373\uff1a\n$$ \\arcsin x=\\frac{\\ln(ix+\\sqrt{1-x^2})}{i} $$\n\u53ef\u80fd\u6709\u4eba\u6709\u95ee\u9898\uff1a\u5bf9\u4e8e\u590d\u6570\u7684\u5bf9\u6570\u51fd\u6570\u4e0d\u662f\u4e0d\u552f\u4e00\u5417\uff1f\u5176\u5b9e\u6211\u4eec\u8fd9\u91cc\u7684\u6240\u8c13\u201c\u5355\u4f4d\u865a\u6570\u201d\u53ea\u4e0d\u8fc7\u662f\u6a21\u610f\u4e49\u4e0b $-1$ \u7684\u4e8c\u6b21\u5269\u4f59\uff0c\u4ece\u6765\u90fd\u6ca1\u6709\u51fa\u73b0\u8fc7\u4ec0\u4e48\u590d\u6570\uff0c\u591a\u9879\u5f0f $ln$ \u81ea\u7136\u4e5f\u662f\u826f\u5b9a\u4e49\u7684\u3002\n\n\u53ef\u4ee5\u5229\u7528\u591a\u9879\u5f0f $\\ln$ \u548c\u591a\u9879\u5f0f\u5f00\u65b9\u6c42\u89e3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n## 2.arctan(x)\uff1a\n\u7531\u4e0a\u7ed3\u8bba\u6709\uff1a\n$$ \\sin\\theta=\\frac{e^{i\\theta}-e^{-i\\theta}}{2i} $$\n$$ \\cos\\theta=\\frac{e^{i\\theta}+e^{-i\\theta}}{2} $$\n\u5373\uff1a\n$$ \\tan\\theta= \\frac{e^{i\\theta}-e^{-i\\theta}}{i(e^{i\\theta}+e^{-i\\theta})} $$\n\u4ee4 $t=e^{i\\theta}$ \u5219\u6709\uff1a\n$$ \\tan\\theta=\\frac{t-\\frac{1}{t}}{it+\\frac{i}{t}} $$\n\u53d8\u6362\u53ef\u5f97\uff1a\n$$ (1-i\\tan\\theta)t^2-(1+i\\tan\\theta)=0 $$\n\u89e3\u5f97\uff1a\n$$ t=\\pm\\sqrt{\\frac{1+i\\tan\\theta}{1-i\\tan\\theta}} $$\n\u9009\u53d6 $\\pm$ \u4e2d\u7684 $+$ ,\u540c\u65f6\u5e26\u5165 $ e^{i\\theta}=t $\uff1a\n$$ e^{i\\theta}=\\sqrt{\\frac{1+i\\tan\\theta}{1-i\\tan\\theta}} $$\n\u4e24\u8fb9\u53d6 $\\ln$ \u540e\u9664\u4ee5 $i$\uff1a\n$$ \\theta=i\\ln{\\sqrt{\\frac{1+i\\tan\\theta}{1-i\\tan\\theta}}} $$\n\u6ce8\u610f\u5230 $ \\ln{\\sqrt{x}}=\\frac{1}{2}\\ln{x} $\uff1a\n$$ \\theta=\\frac{i}{2}\\ln{\\frac{1+i\\tan\\theta}{1-i\\tan\\theta}} $$\n\u5373\uff1a\n$$ \\arctan x=\\frac{i}{2}(\\ln(1+ix)-\\ln(1-ix)) $$\n\u53ef\u4ee5\u5229\u7528\u591a\u9879\u5f0f $\\ln$ \u6c42\u89e3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$ \u3002\n## Code\n~~\u770b\u6211\u8fd9\u7cdf\u7cd5\u7684\u7801\u98ce~~\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\nusing namespace std;\n\nvoid read(int &x){\n\tx=0;\n\tchar c=getchar();\n\twhile(!('0'<=c && c<='9')){\n\t\tc=getchar();\n\t}\n\twhile('0'<=c && c<='9'){\n\t\tx=(x<<3)+(x<<1)+(c^48);\n\t\tc=getchar();\n\t}\n}\nconst int md=998244353,g=3,rg=332748118;\nint powr(int b,int k){\n\tint res=1;\n\tfor(;k;b=(1ll*b*b)%md,k>>=1){\n\t\tif(k%2){\n\t\t\tres=(1ll*res*b)%md;\n\t\t}\n\t}\n\treturn res;\n}\nint mod(int k){\n\tif(k>md){\n\t\treturn k-md;\n\t}else{\n\t\treturn k;\n\t}\n}\nint flp[2100010],inv[200010];\ninline void flip(int siz){\n\tfor(int i=0;i<siz;i++){\n\t\tflp[i]=flp[i>>1]>>1;\n\t\tif(i&1){\n\t\t\tflp[i]|=siz>>1;\n\t\t}\n\t}\n}\nstruct Poly{\n\tvector<int> val;\n\tPoly(){}\n\tPoly(const vector<int>& v){\n\t\tval=v;\n\t}\n\tPoly(int* v,int siz){\n\t\tfor(int i=0;i<siz;i++){\n\t\t\tval.push_back(v[i]);\n\t\t}\n\t}\n\tPoly(int k){\n\t\tval.push_back(1);\n\t}\n\tvoid show(){\n\t\tfor(int i=0;i<val.size();i++){\n\t\t\tprintf(\"%d \",val[i]);\n\t\t}\n\t}\n\tint size(){\n\t\treturn val.size();\n\t}\n\tint& operator[](int k){\n\t\twhile(val.size()<=k){\n\t\t\tval.push_back(0);\n\t\t}\n\t\treturn val[k];\n\t}\n\tfriend Poly operator+(Poly a,Poly b){\n\t\tPoly res;\n\t\tif(a.size()<b.size()){\n\t\t\tswap(a,b);\n\t\t}\n\t\tfor(int i=0;i<a.size();i++){\n\t\t\tres[i]=(a[i]+b[i])%md;\n\t\t}\n\t\treturn res;\n\t}\n\tfriend Poly operator-(Poly a,Poly b){\n\t\tPoly res;\n\t\tfor(int i=0;i<max(a.size(),b.size());i++){\n\t\t\tres[i]=mod(a[i]-b[i]+md);\n\t\t}\n\t\treturn res;\n\t}\n\tfriend Poly operator*(Poly a,int b){\n\t\tfor(int i=0;i<a.size();i++){\n\t\t\ta[i]=(1ll*a[i]*b)%md;\n\t\t}\n\t\treturn a;\n\t}\n\tfriend Poly operator*(int b,Poly a){\n\t\treturn a*b;\n\t}\n\tvector<int> NTT(){\n\t\tint siz=val.size();\n\t\tvector<int> res=val;\n\t\tfor(int i=0;i<siz;i++){\n\t\t\tif(i<flp[i]){\n\t\t\t\tswap(res[i],res[flp[i]]);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<siz;i<<=1){\n\t\t\tint rt=powr(g,(md-1)/(i<<1));\n\t\t\tfor(int j=0;j<siz;j+=(i<<1)){\n\t\t\t\tint cur=1;\n\t\t\t\tfor(int k=0;k<i;k++){\n\t\t\t\t\tcur=(1ll*cur*rt)%md;\n\t\t\t\t\tint x=res[j+k],y=1ll*cur*res[i+j+k]%md;\n\t\t\t\t\tres[j+k]=mod(x+y);\n\t\t\t\t\tres[i+j+k]=mod(x-y+md);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n};\nPoly INTT(const vector<int> &val){\n\tint siz=val.size();\n\tPoly res(val);\n\tfor(int i=0;i<siz;i++){\n\t\tif(i<flp[i]){\n\t\t\tswap(res[i],res[flp[i]]);\n\t\t}\n\t}\n\tfor(int i=1;i<siz;i<<=1){\n\t\tint rt=powr(rg,(md-1)/(i<<1));\n\t\tfor(int j=0;j<siz;j+=(i<<1)){\n\t\t\tint cur=1;\n\t\t\tfor(int k=0;k<i;k++){\n\t\t\t\tcur=(1ll*cur*rt)%md;\n\t\t\t\tint x=res[j+k],y=1ll*cur*res[i+j+k]%md;\n\t\t\t\tres[j+k]=mod(x+y);\n\t\t\t\tres[i+j+k]=mod(x-y+md);\n\t\t\t}\n\t\t}\n\t}\n\treturn Poly(res);\n}\nPoly operator*(Poly a,Poly b){\n\tint tt=a.size()+b.size()-1,siz=1;\n\twhile(siz<tt){\n\t\tsiz<<=1;\n\t}\n\ta[siz-1];\n\tb[siz-1];\n\tflip(siz);\n\tvector<int> an=a.NTT(),bn=b.NTT(),res(siz,0);\n\tswap(an[0],an[siz-1]);\n\tfor(int i=siz-1;i>1;i--){\n\t\tswap(an[i],an[i-1]);\n\t}\n\tswap(bn[0],bn[siz-1]);\n\tfor(int i=siz-1;i>1;i--){\n\t\tswap(bn[i],bn[i-1]);\n\t}\n\tfor(int i=0;i<siz;i++){\n\t\tres[i]=1ll*an[i]*bn[i]%md;\n\t\t//printf(\"%lld \",res[i]);\n\t}\n\tPoly k=INTT(res);\n\tswap(k[0],k[siz-1]);\n\tfor(int i=siz-1;i>1;i--){\n\t\tswap(k[i],k[i-1]);\n\t}\n\tint inv=powr(siz,md-2);\n\tfor(int i=0;i<siz;i++){\n\t\tk[i]=(1ll*k[i]*inv)%md;\n\t}\n\treturn k;\n}\nPoly derivative(Poly a){\n\tPoly res;\n\tfor(int i=1;i<a.size();i++){\n\t\tres[i-1]=1ll*a[i]*i%md;\n\t}\n\treturn res;\n}\nPoly integral__(Poly a){\n\tPoly res;\n\tfor(int i=0;i<a.size();i++){\n\t\tres[i+1]=1ll*a[i]*inv[i+1]%md;\n\t}\n\treturn res;\n}\nPoly rev(Poly a){\n\tint n=a.size(),siz=1;\n\twhile(siz<n){\n\t\tsiz<<=1;\n\t}\n\ta[siz-1];\n\tPoly res,tot;\n\tres[0]=powr(a[0],md-2);\n\ttot[0]=2;\n\twhile(res.size()<siz){\n\t\tPoly ct;\n\t\tfor(int i=0;i<2*res.size();i++){\n\t\t\tct[i]=a[i];\n\t\t}\n\t\tPoly k=1ll*res*(tot-res*ct);\n\t\tint ss=res.size();\n\t\tfor(int i=0;i<ss*2;i++){\n\t\t\tres[i]=k[i];\n\t\t}\n\t}\n\tPoly cc;\n\tfor(int i=0;i<n;i++){\n\t\tcc[i]=res[i];\n\t}\n\treturn res;\n}\nPoly Ln(Poly a){\n\tPoly res=integral__(derivative(a)*rev(a));\n\tPoly cc;\n\tfor(int i=0;i<a.size();i++){\n\t\tcc[i]=res[i];\n\t}\n\treturn cc;\n}\nPoly Exp(Poly a){\n\tint len=a.size();\n\tPoly res,cnst;\n\tres[0]=cnst[0]=1;\n\tint siz=1;\n\twhile(siz<a.size()){\n\t\tsiz<<=1;\n\t}\n\tsiz<<=1;\n\ta[siz-1];\n\twhile(res.size()<siz){\n\t\tPoly kt=cnst-Ln(res)+a;\n\t\tPoly tmp;\n\t\tfor(int i=0;i<res.size();i++){\n\t\t\ttmp[i]=kt[i];\n\t\t}\n\t\tPoly k=tmp*res;\n\t\tint cc=res.size();\n\t\tfor(int i=0;i<cc*2;i++){\n\t\t\tres[i]=k[i];\n\t\t}\n\t}\n\tPoly cck;\n\tfor(int i=0;i<len;i++){\n\t\tcck[i]=res[i];\n\t}\n\treturn cck;\n}\nPoly powr(Poly a,int k){\n\tPoly y=Exp(Ln(a)*k),cc;\n\tfor(int i=0;i<a.size();i++){\n\t\tcc[i]=y[i];\n\t}\n\treturn cc;\n}\nPoly rt(Poly a){\n\tPoly res;\n\tres[0]=1;\n\tint siz=1,len=a.size();\n\twhile(siz<a.size()){\n\t\tsiz<<=1;\n\t}\n\tsiz<<=1;\n\ta[siz-1];\n\twhile(res.size()<siz){\n\t\tPoly kt=a+res*res,tmp;\n\t\tfor(int i=0;i<res.size();i++){\n\t\t\ttmp[i]=kt[i];\n\t\t}\n\t\tPoly k=tmp*rev(2*res);\n\t\tint cc=res.size();\n\t\tfor(int i=0;i<cc*2;i++){\n\t\t\tres[i]=k[i];\n\t\t}\n\t}\n\tPoly rr;\n\tfor(int i=0;i<len;i++){\n\t\trr[i]=res[i];\n\t}\n\treturn rr;\n} \nPoly sin(Poly k){\n\tint img=powr(3,(md-1)/4);\n\tPoly kk=Exp(k*img);\n\treturn (kk-rev(kk))*powr(2,md-2)*(md-img);\n}\nPoly cos(Poly k){\n\tint img=powr(3,(md-1)/4);\n\tPoly kk=Exp(k*img);\n\treturn (kk+rev(kk))*powr(2,md-2);\n}\nPoly asin(Poly k){\n\tint img=powr(3,(md-1)/4);\n\treturn (md-img)*Ln(rt(1-k*k)+img*k);\n}\nPoly atan(Poly k){\n\tint img=powr(3,(md-1)/4);\n\treturn (Ln(1-img*k)-Ln(1+img*k))*img*powr(2,md-2);\n}\nsigned main(){\n\tint n,t;\n\tPoly a;\n\tread(n);\n\tinv[1]=1;\n\tfor(int i=2;i<=2*n;i++){\n\t\tinv[i]=1ll*(md-md/i)*inv[md%i]%md;\n\t}\n\tread(t);\n\tfor(int i=0;i<n;i++){\n\t\tread(a[i]);\n\t}\n\tif(t){\n\t\tPoly res=atan(a);\n\t\tfor(int i=0;i<n;i++){\n\t\t\tprintf(\"%d \",res[i]);\n\t\t}\n\t}else{\n\t\tPoly res=asin(a);\n\t\tfor(int i=0;i<n;i++){\n\t\t\tprintf(\"%d \",res[i]);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1647927958,
        "uid": 367387,
        "name": "cainiaoshanglu",
        "ccfLevel": 7,
        "title": "P5265 \u9898\u89e3"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a[FFT/NTT](https://www.luogu.com.cn/problem/P3803)\uff0c[\u591a\u9879\u5f0f\u5f00\u6839](https://www.luogu.com.cn/problem/P5205)\uff0c[\u591a\u9879\u5f0f\u4e58\u6cd5\u9006](https://www.luogu.com.cn/problem/P4238)\uff0c\u591a\u9879\u5f0f\u6c42\u5bfc/\u79ef\u5206\uff0c[\u53cd\u4e09\u89d2\u51fd\u6570\u6c42\u5bfc\u516c\u5f0f\u548c\u590d\u5408\u51fd\u6570\u6c42\u5bfc\u516c\u5f0f](https://www.luogu.com.cn/paste/wun0hgni)\u3002\n\n~~\u4e0d\u4f1a\u6765\u505a\u8fd9\u9898\u7684\u4eba\u4e0d\u4f1a\u8fd9\u4e9b\u5427\uff0c\u4e0d\u4f1a\u5427\u4e0d\u4f1a\u5427\uff08~~\n\n---\n\n### $Solution:$\n\n\u6a21\u4eff\u591a\u9879\u5f0f $\\ln$ \u65f6\u7684\u505a\u6cd5\uff1a\u5148\u6c42\u5bfc\u518d\u79ef\u5206\uff01\n\n\u9996\u5148\u6c42 $\\arcsin :$\n\n$$F(x)\\equiv \\arcsin A(x)(\\bmod \\ x^n)$$\n\n\u8fd9\u91cc\u9700\u8981\u8fd0\u7528\u53cd\u4e09\u89d2\u51fd\u6570\u6c42\u5bfc\u516c\u5f0f\u548c\u590d\u5408\u51fd\u6570\u6c42\u5bfc\u516c\u5f0f\uff1a\n\n$$F'(x)\\equiv\\dfrac{A'(x)}{\\sqrt{1 - A(x)^2}}(\\bmod\\ x^{n-1})$$\n\n\u79ef\u56de\u53bb\uff1a\n\n$$F(x)\\equiv\\int\\dfrac{A'(x)}{\\sqrt{1-A(x)^2}}dx(\\bmod \\ x^n)$$\n\n\u7136\u540e\u662f $\\arctan :$\n\n$$F(x)\\equiv \\arctan A(x)(\\bmod \\  x^n)$$\n\n$$F'(x)\\equiv \\dfrac{A'(x)}{1 + A(x)^2}(\\bmod \\ x^{n-1})$$\n\n$$F(x)\\equiv \\int \\dfrac{A'(x)}{1+A(x)^2}dx(\\bmod\\ x^n)$$\n\n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u662f $O(n\\log n)$\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\log n)$\u3002\n\n### $Code:$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\nusing namespace std;\n#define ll long long\nconst ll N = 300010, mod = 998244353, g_ = 3, invg = 332748118, I = 86583718;\ninline ll read(){\n    ll x = 0, f = 1; char ch = getchar();\n    while(ch < '0' || ch > '9'){if(ch == '-') f = -1; ch = getchar();}\n    while(ch >= '0' && ch <= '9'){x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n    return x * f;\n}\ninline ll fpow(ll n, ll p){\n    ll ans = 1, base = n;\n    while(p){\n        if(p & 1) ans = ans * base % mod;\n        base = base * base % mod;\n        p >>= 1;\n    }\n    return ans;\n}\nll n, m, r[N], A[N], B[N], a[N], b[N], f[N], rev, c[N], d[N], e[N], inv[N], g[N], h[N], C[N], D[N];\nbool is_inv;\ninline void clr(ll *A, ll x, ll y){\n    for(int i = x; i < y; ++i) A[i] = 0;\n}\ninline void cpy(ll *A, ll *B, ll x, ll y){\n    for(int i = x; i < y; ++i) A[i] = B[i];\n}\ninline void NTT(ll typ, ll *a, ll lim){\n    if(lim != rev){\n        rev = lim;\n        for(int i = 0; i < lim; ++i) r[i] = (r[i >> 1] >> 1) | ((i & 1) ? (lim >> 1) : 0); \n    }\n    for(int i = 0; i < lim; ++i) if(i < r[i]) swap(a[i], a[r[i]]);\n    for(int mid = 1; mid < lim; mid <<= 1){\n        int R = mid << 1; ll rt = fpow(typ == 1 ? g_ : invg, (mod - 1) / R);\n        for(int j = 0; j < lim; j += R){\n            ll w = 1;\n            for(int k = 0; k < mid; k++, w = w * rt % mod){\n                ll x = a[j | k], y = w * a[j | k | mid] % mod;\n                a[j | k] = (x + y) % mod;\n                a[j | k | mid] = (x - y + mod) % mod;\n            }\n        }\n    }\n    if(typ < 0) for(ll i = 0, k = fpow(lim, mod - 2); i < lim; ++i) a[i] = a[i] * k % mod; \n}\ninline void ptm(ll *A, ll *B, ll len){\n    for(int i = 0; i < len; ++i) A[i] = A[i] * B[i] % mod; \n} \ninline void print(ll *A, ll len){\n    for(int i = 0; i < len; ++i) printf(\"%lld \", A[i]);\n    printf(\"\\n\");\n}\ninline void Polymul(ll *A, ll *B, ll len, ll m){\n    int lim = 1; while(lim < len) lim <<= 1;\n    cpy(e, B, 0, lim); clr(e, len, lim);\n    NTT(1, A, lim); NTT(1, e, lim); ptm(A, e, lim);\n    NTT(-1, A, lim); clr(A, m, lim);\n}\ninline void Polyinv(ll *A, ll len){\n    int lim = 1; while(lim < len) lim <<= 1;\n    a[0] = fpow(A[0], mod - 2);\n    for(int m = 2; m <= lim; m <<= 1){\n        for(int i = 0; i < (m >> 1); ++i) b[i] = (a[i] << 1) % mod;\n        cpy(f, A, 0, m);\n        NTT(1, a, m << 1); ptm(a, a, m << 1);\n        NTT(1, f, m << 1); ptm(a, f, m << 1);\n        NTT(-1, a, m << 1); clr(a, m, m << 1);\n        for(int i = 0; i < m; ++i) a[i] = (b[i] - a[i] + mod) % mod;\n    }\n    cpy(A, a, 0, len);\n    clr(f, 0, lim << 1); clr(a, 0, lim << 1); clr(b, 0, lim << 1);\n}\ninline void Polyder(ll *A, ll len){\n    for(int i = 1; i < len; ++i) A[i - 1] = A[i] * i % mod;\n    A[len - 1] = 0;\n} \ninline void prework(){\n    if(is_inv) return; is_inv = 1; inv[0] = inv[1] = 1ll;\n    for(int i = 2; i <= N; ++i) inv[i] = (mod - mod / i) * inv[mod % i] % mod;\n}\ninline void Polyint(ll *A, ll len){\n    prework();\n    for(int i = len; i >= 1; --i) A[i] = A[i - 1] * inv[i] % mod;\n    A[0] = 0;\n}\ninline void Polysqrt(ll *A, ll len){\n    int lim = 1; while(lim < len) lim <<= 1;\n    c[0] = 1;\n    for(int m = 2; m <= lim; m <<= 1){\n        for(int i = 0; i < (m >> 1); ++i) d[i] = (c[i] << 1) % mod;\n        Polyinv(d, m);\n        NTT(1, c, m); ptm(c, c, m); NTT(-1, c, m);\n        for(int i = 0; i < m; ++i) c[i] = (A[i] + c[i]) % mod;\n        Polymul(c, d, m << 1, m);\n    }\n    cpy(A, c, 0, len); clr(c, 0, lim << 1); clr(d, 0, lim << 1);\n}\ninline void Polyasin(ll *A, ll len){\n\tcpy(C, A, 0, len); Polyder(A, len);\n\tPolymul(C, C, len << 1, len); \n\tfor(int i = 0; i < len; ++i) C[i] = mod - C[i]; \n\tC[0] = (C[0] + 1) % mod;\n\tPolysqrt(C, len); Polyinv(C, len);\n\tPolymul(A, C, len << 1, len); Polyint(A, len - 1); clr(C, 0, len);\n}\ninline void Polyatan(ll *A, ll len){\n\tcpy(C, A, 0, len); Polyder(A, len);\n\tPolymul(C, C, len << 1, len); C[0] = (C[0] + 1) % mod;\n\tPolyinv(C, len); Polymul(A, C, len << 1, len);\n\tPolyint(A, len - 1); clr(C, 0, len); \n}\nsigned main(){\n\tn = read(); m = read();\n\tfor(int i = 0; i < n; ++i) A[i] = read();\n\tif(m == 0) Polyasin(A, n);\n\telse Polyatan(A, n);\n\tprint(A, n); \n    return 0;\n}\n```",
        "postTime": 1603343394,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5265 \u3010\u591a\u9879\u5f0f\u53cd\u4e09\u89d2\u51fd\u6570\u3011"
    },
    {
        "content": "[$\\texttt{link}$](https://www.luogu.com.cn/problem/P5265)\n\n\u8fd9\u4e2a\u9898\u5f88\u7b80\u5355\uff0c\u51e0\u4e2a\u677f\u5b50\u5957\u4e00\u5957\u5c31\u505a\u5b8c\u4e86\uff0c\u9700\u8981\u4e86\u89e3\u4e00\u4e9b\u7b80\u5355\u5fae\u79ef\u5206\u3002\n\n\u9996\u5148\u4e24\u4e2a\u7ed3\u8bba\n$$\\arcsin'x=\\dfrac{1}{\\sqrt{1-x^2}}$$\n$$\\arctan'x=\\dfrac{1}{1+x^2}$$\n\n\u8bc1\u660e\u4e5f\u5f88\u597d\u8bc1\uff0c\u7ecf\u5178\u9690\u51fd\u6570\u8bc1\u660e\u3002\n\n\u5148\u770b $\\arcsin'x$ \u7684\uff0c\u8bbe $\\sin y=x$\uff0c\u5219\n\n$$\\sin'y=x'$$\n$$y'\\cos y=1$$\n$$y'=\\dfrac{1}{\\cos y}$$\n$$y'=\\dfrac{1}{\\sqrt{1-\\sin^2y}}$$\n$$\\arcsin'x=\\dfrac{1}{\\sqrt{1-x^2}}$$\n\n$\\arctan'x$ \u540c\u7406\uff0c\u8bbe $\\tan y=x$\uff0c\u5219\n$$\\tan'y=x'$$\n$$y'\\sec^2y=1$$\n$$y'=\\dfrac{1}{\\sec^2y}$$\n$$y'=\\dfrac{1}{1+\\tan^2y}$$\n$$\\arctan'x=\\dfrac{1}{1+x^2}$$\n\n\u56de\u5230\u8fd9\u9898\uff0c\u8bbe $G=\\arcsin F$\uff0c\u5219\n$$\\begin{aligned}G'&=\\arcsin'F\\\\&=\\dfrac{F'}{\\sqrt{1-F^2}}\\end{aligned}$$\n\n\u79ef\u56de\u6765\n\n$$G=\\int \\dfrac{F'}{\\sqrt{1-F^2}}dx$$\n\n\n\u540c\u7406\uff0c\u8bbe $G=\\arctan F$\uff0c\u5219\n$$\\begin{aligned}G'&=\\arctan'F\\\\&=\\dfrac{F'}{1+F^2}\\end{aligned}$$\n\n\u79ef\u56de\u6765\n\n$$G=\\int\\dfrac{F'}{1+F^2}dx$$\n\u5957\u4e00\u4e0b\u591a\u9879\u5f0f\u6c42\u5bfc\uff0c\u79ef\u5206\uff0c\u5f00\u6839\uff0c\u4e58\u6cd5\uff0c\u6c42\u9006\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO {\n\t//read and write\n} using namespace IO;\nconst int N = 2.7e5 + 10;\nnamespace Polynomial {\n    const int mod = 998244353, G = 3, Gi = 332748118, inv2 = 499122177;\n    int lim, rev[N], a[N], b[N], c[N];\n    int qpow(int n, int k) {\n        int res = 1;\n        for(; k; n = 1ll * n * n % mod, k >>= 1)\n            if(k & 1) res = 1ll * res * n % mod;\n        return res;\n    }\n    void NTT(int *f, int T) {\n        for(int i = 0; i < lim; i++)\n            if(i < rev[i]) \n                swap(f[i], f[rev[i]]);\n        for(int mid = 1; mid < lim; mid <<= 1) {\n            int wn = qpow(T == 1 ? G : Gi, (mod - 1) / (mid << 1));\n            int len = mid << 1;\n            for(int i = 0; i < lim; i += (mid << 1)) {\n                int w = 1;\n                for(int j = 0; j < mid; j++, w = 1ll * w * wn % mod) {\n                    int x = f[i + j], y = 1ll * w * f[i + j + mid] % mod;\n                    f[i + j] = (x + y) % mod;\n                    f[i + j + mid] = (x - y + mod) % mod;\n                }\n            }\n        }\n        if(T == -1) {\n            int inv = qpow(lim, mod - 2);\n            for(int i = 0; i < lim; i++) \n                f[i] = 1ll * f[i] * inv % mod;\n        }\n    }\n    void init(int n) {\n        for(lim = 1; lim < n; lim <<= 1);\n        for(int i = 0; i < lim; i++)\n            rev[i] = (rev[i >> 1] >> 1) | ((i & 1) * (lim >> 1));\n    } \n    void mul(int *f, int *g, int *h, int n, int m) {\n        static int a[N], b[N];\n        init(n + m - 1);\n        memset(a, 0, lim << 2);\n        memcpy(a, f, n << 2);\n        memset(b, 0, lim << 2);\n        memcpy(b, g, m << 2);\n        NTT(a, 1), NTT(b, 1);\n        for(int i = 0; i < lim; i++) \n            h[i] = 1ll * a[i] * b[i] % mod;\n        NTT(h, -1);\n    }\n    void inv(int *f, int *g, int n) {\n        if(n == 1) { g[0] = qpow(f[0], mod - 2); return; }\n        inv(f, g, n + 1 >> 1);\n        init(n << 1);\n        copy(f, f + n, a);\n        fill(a + n, a + lim, 0);\n        NTT(a, 1), NTT(g, 1);\n        for(int i = 0; i < lim; i++)\n            g[i] = (2 - 1ll * a[i] * g[i] % mod + mod) % mod * g[i] % mod;\n        NTT(g, -1);\n        fill(g + n, g + lim, 0);\n    }\n    void sqrt(int *f, int *g, int n) {\n        if(n == 1) { g[0] = 1; return; }\n        sqrt(f, g, n + 1 >> 1);\n        memset(b, 0, n << 2);\n        inv(g, b, n);\n        mul(f, b, b, n, n);\n        for(int i = 0; i < n; i++)\n            g[i] = 1ll * (g[i] + b[i]) * inv2 % mod;\n    }\n    void dev(int *f, int *g, int n) {\n        for(int i = 1; i < n; i++)\n            g[i - 1] = 1ll * i * f[i] % mod;\n        g[n - 1] = 0;\n    }\n    void invdev(int *f, int *g, int n) {\n        for(int i = n - 1; i; i--)\n            g[i] = 1ll * f[i - 1] * qpow(i, mod - 2) % mod;\n        g[0] = 0;\n    }\n    void arcsin(int *f, int *g, int n) {\n    \tstatic int a[N], b[N], c[N];\n    \tdev(f, a, n); \n    \tmul(f, f, b, n, n);\n    \tfor(int i = 0; i < n; i++)\n    \t\tb[i] = (mod - b[i]) % mod;\n    \tb[0] = (b[0] + 1) % mod;\n    \tsqrt(b, c, n);\n    \tmemset(b, 0, lim << 2);\n    \tinv(c, b, n);\n    \tmemset(c, 0, lim << 2);\n    \tmul(a, b, c, n, n);\n    \tinvdev(c, g, n);\n\t}\n\tvoid arctan(int *f, int *g, int n) {\n\t\tstatic int a[N], b[N], c[N];\n\t\tdev(f, a, n); \n    \tmul(f, f, b, n, n);\n    \tb[0] = (b[0] + 1) % mod;\n    \tinv(b, c, n);\n    \tmemset(b, 0, lim << 2);\n    \tmul(a, c, b, n, n);\n    \tinvdev(b, g, n);\n\t}\n} using namespace Polynomial;\nint n, type, f[N], g[N];\nint main() {\n\tn = read(), type = read();\n\tfor(int i = 0; i < n; i++)\n\t\tf[i] = read();\n\tif(!type) arcsin(f, g, n);\n\telse arctan(f, g, n);\n\tfor(int i = 0; i < n; i++)\n\t\twrite(g[i]), putc(' ');\n\tflush();\n\treturn 0;\n}\n```\n",
        "postTime": 1657682556,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5265 \u591a\u9879\u5f0f\u53cd\u4e09\u89d2\u51fd\u6570"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002](https://www.luogu.com.cn/blog/happydef-blog/duo-xiang-shi-quan-jia-tong-xue-xi-bi-ji)\n\n\u548c\u591a\u9879\u5f0f$\\ln$\u5dee\u4e0d\u591a\u3002\u3002\u3002\n\n\u9996\u5148\u63a8\u4e00\u53d1$\\arcsin$\n$$y=\\arcsin x$$\n$$\\sin y=x$$\n$$d(\\sin y)=dx$$\n$$dy\\times \\cos y=dx$$\n$$\\frac{dy}{dx}=\\frac{1}{\\cos y}=\\frac{1}{\\sqrt{1-\\sin y^2}}=\\frac{1}{\\sqrt{1-x^2}}$$\n\u8fd4\u56de\u539f\u9898\n$$G\\equiv \\arcsin F\\pmod {x^n}$$\n$$G'\\equiv \\frac{F'}{\\sqrt{1-F^2}}\\pmod {x^{n-1}}$$\n$$G\\equiv \\int \\frac{F'}{\\sqrt{1-F^2}}dx\\pmod {x^n}$$\nover\u3002\n\n\u4e0b\u9762\u662f$y=\\arctan x$\uff1a\n$$y=\\arctan x$$\n$$\\tan y=x$$\n$$d(\\tan y)=dx$$\n$$dy\\times \\sec^2 y=dx$$\n$$\\frac{dy}{dx}=\\frac{1}{\\sec^2 y}=\\frac{1}{1+\\tan^2 y}=\\frac{1}{1+x^2}$$\n\u8fd4\u56de\u539f\u9898\n$$G\\equiv \\arctan F\\pmod {x^n}$$\n$$G'\\equiv \\frac{F'}{1+F^2}\\pmod {x^{n-1}}$$\n$$G\\equiv \\int \\frac{F'}{1+F^2}dx\\pmod {x^n}$$\nover\u3002\n\n\u603b\u590d\u6742\u5ea6\u4f9d\u7136\u662f$O(n\\log n)$\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std; \ntypedef long long ll; \nconst ll N=100005*3,P=998244353,G=3;\nll n,tp,f[N],g[N],inv[N]={1,1};\nnamespace Poly{\n\tconst ll P=998244353,G=3;\n\tll lmt,rev[N],a[N],b[N],c[N],d[N],e[N],h[N],x[N],y[N],z[N];\n\tinline ll qpow(ll a,ll k){\n\t\tll ret=1;\n\t\twhile(k){\n\t\t\tif(k&1)ret=ret*a%P;\n\t\t\ta=(a*a)%P;\n\t\t\tk>>=1;\n\t\t}\n\t\treturn ret%P;\n\t}\n\tinline void init(ll n){\n\t\tlmt=1;ll t=0;\n\t\twhile(lmt<n)lmt<<=1,t++;\n\t\tfor(ll i=1;i<lmt;i++)rev[i]=(rev[i>>1]>>1)|(i&1)<<(t-1);\n\t}\n\tinline void NTT(ll *A,ll lmt,ll tp){\n\t\tfor(ll i=0;i<lmt;i++)if(i<rev[i])swap(A[i],A[rev[i]]);\n\t\tfor(ll m=1;m<lmt;m<<=1)\n\t\t\tfor(ll j=0,Wn=qpow(G,(P-1)/(m<<1));j<lmt;j+=m<<1)\n\t\t\t\tfor(ll k=0,w=1,x,y;k<m;k++,w=w*Wn%P)\n\t\t\t\t\tx=A[j+k],y=w*A[j+k+m]%P,A[j+k]=(x+y)%P,A[j+k+m]=(x-y+P)%P;\n\t\tif(tp==1)return;\n\t\treverse(A+1,A+lmt);\n\t\tfor(ll i=0,inv=qpow(lmt,P-2);i<=lmt;i++)A[i]=A[i]*inv%P;\n\t} \n\tinline void mul(ll *f,ll *g,ll len){\n\t\tinit(len);\n\t\tNTT(f,lmt,1);NTT(g,lmt,1);\n\t\tfor(ll i=0;i<lmt;i++)f[i]=(f[i]*g[i])%P;\n\t\tNTT(f,lmt,-1);\n\t} \n\tvoid getinv(ll*f,ll*g,ll len){\n\t\tif(len==1){g[0]=inv[f[0]];return;}\n\t\tgetinv(f,g,len+1>>1);\n\t\tinit(len<<1);\n\t\tfor(ll i=0;i<len;i++)c[i]=f[i];\n\t\tfor(ll i=len;i<lmt;i++)c[i]=0;\n\t\tNTT(c,lmt,1),NTT(g,lmt,1);\n\t\tfor(ll i=0;i<lmt;i++)g[i]=(2LL-g[i]*c[i]%P+P)%P*g[i]%P;\n\t\tNTT(g,lmt,-1);\n\t\tfor(ll i=len;i<lmt;i++)g[i]=0; \n\t}\n\tinline void getdev(ll*f,ll*g,ll len){\n\t\tfor(ll i=1;i<len;i++)g[i-1]=i*f[i]%P;\n\t\tg[len-1]=g[len]=0;\n\t}\n\tinline void getinvdev(ll*f,ll*g,ll len){\n\t\tfor(ll i=1;i<=len;i++)g[i]=f[i-1]*inv[i]%P;\n\t\tg[0]=0;\n\t}\n\tinline void getln(ll*f,ll*g,ll len){\n\t\tmemset(a,0,(len*3)<<3);\n\t\tmemset(b,0,(len*3)<<3);\n\t\tgetdev(f,a,len);\n\t\tgetinv(f,b,len);\n\t\tmul(a,b,len<<1);\n\t\tgetinvdev(a,g,len);\n\t}\n\tvoid getexp(ll*f,ll*g,ll len){\n\t\tif(len==1){g[0]=1;return;}\n\t\tgetexp(f,g,len+1>>1);\n\t\tinit(len<<1);\n\t\tfor(ll i=0;i<(len<<1);i++)d[i]=e[i]=0;\n\t\tgetln(g,d,len);\n\t\tfor(ll i=0;i<len;i++)e[i]=f[i];\n\t    NTT(g,lmt,1),NTT(d,lmt,1),NTT(e,lmt,1);\n    \tfor(ll i=0;i<lmt;i++)g[i]=(1-d[i]+e[i]+P)*g[i]%P;\n    \tNTT(g,lmt,-1);\n    \tfor(ll i=len;i<lmt;i++)g[i]=0; \n\t}\n\tinline void getsqrt(ll*f,ll*g,ll len){\n\t\tgetln(f,h,len);\n\t\tfor(ll i=0;i<len;i++)h[i]=h[i]*inv[2]%P;\n\t\tgetexp(h,g,len);\n\t}\n\tinline void arcsin(ll*f,ll*g,ll len){\n\t\tgetdev(f,x,len);\n\t\tinit(len<<1);\n\t\tNTT(f,lmt,1);\n\t\tfor(ll i=0;i<lmt;i++)y[i]=(1+P-f[i]*f[i]%P)%P;\n\t\tNTT(y,lmt,-1);\n\t\tfor(ll i=len;i<lmt;i++)y[i]=0;\n\t\tgetsqrt(y,z,len);\n\t\tmemset(y,0,(len+1)<<3);\n\t\tgetinv(z,y,len);\n\t\tNTT(x,lmt,1),NTT(y,lmt,1);\n\t\tfor(ll i=0;i<lmt;i++)x[i]=x[i]*y[i]%P;\n\t\tNTT(x,lmt,-1);\n\t\tgetinvdev(x,g,len);\n\t}\n\tinline void arctan(ll*f,ll*g,ll len){\n\t\tgetdev(f,x,len);\n\t\tinit(len<<1);\n\t\tNTT(f,lmt,1);\n\t\tfor(ll i=0;i<lmt;i++)y[i]=(1+f[i]*f[i]%P)%P;\n\t\tNTT(y,lmt,-1);\n\t\tfor(ll i=len;i<lmt;i++)y[i]=0;\n\t\tgetinv(y,z,len);\n\t\tNTT(x,lmt,1),NTT(z,lmt,1);\n\t\tfor(ll i=0;i<lmt;i++)x[i]=x[i]*z[i]%P;\n\t\tNTT(x,lmt,-1);\n\t\tgetinvdev(x,g,len);\n\t}\n}\nusing Poly::arcsin;\nusing Poly::arctan;\nint main(){\n\tscanf(\"%lld%lld\",&n,&tp);\n\tll lmt=1;\n\twhile(lmt<n)lmt<<=1;\n\tfor(ll i=2;i<lmt;i++)inv[i]=(P-P/i)*inv[P%i]%P;\n\tfor(ll i=0;i<n;i++)scanf(\"%lld\",&f[i]);\n\tif(tp==0)arcsin(f,g,n);\n\telse arctan(f,g,n);\n\tfor(ll i=0;i<n;i++)printf(\"%lld \",g[i]); \n\treturn 0;\n}\n```",
        "postTime": 1595173327,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5265 \u3010\u591a\u9879\u5f0f\u53cd\u4e09\u89d2\u51fd\u6570\u3011"
    },
    {
        "content": "\n\n\u2192_\u2192 OI \u751f\u6daf\u665a\u671f\u624d\u5f00\u59cb\u5237\u677f\u5b50\u9898\u7684\u54b1\n\n\n\u5176\u5b9e\u8fd9\u9898\u5c31\u662f\u9053\u516c\u5f0f\u9898\uff0c\u641e\u8fc7\u591a\u9879\u5f0f\u5168\u5bb6\u6876\u7684\u540c\u5b66\u8d34\u8d34\u677f\u5b50\u7167\u7740\u516c\u5f0f\u7801\u4e24\u4e0b\u90fd\u80fd\u8fc7...\n\n\u81f3\u4e8e\u516c\u5f0f\u7684\u8bc1\u660e\u561b...\u603b\u4e4b\u8d34\u4e0a\u516c\u5f0f\uff1a\n\n$$Arcsin(F)=\\int{F'\\over \\sqrt{1-F^2}}$$\n\n$$Arctan(F)=\\int{F'\\over 1+F^2}$$\n\n\u7136\u540e\u53ef\u4ee5\u5eb7\u51fa\u8fd9\u91cc\u5c31\u662f\u4e00\u4e2a\u8981\u7528 Sqrt\u3001 Inv\u3001Inter\u3001Direv \u7684 ~~\u666e\u901a~~ \u591a\u9879\u5f0f\u9898\n\n\n# Code\n\n```\n//by Judge\n#include<bits/stdc++.h>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define ll long long\nusing namespace std;\nconst int mod=998244353;\nconst int iG=332748118;\nconst int M=3e5+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int dec(int x,int y){return (x-=y)<0?x+mod:x;}\ninline int inc(int x,int y){return (x+=y)>=mod?x-mod:x;}\ninline int mul(int x,int y){return 1ll*x*y%mod;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(int x,char chr=' '){\n    if(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n} int n,tp,d,limit; arr a,b,r[21],lg,inv,G[2];\ninline int qpow(Rg int x,Rg int p=mod-2,Rg int s=1){\n\tfor(;p;p>>=1,x=mul(x,x)) if(p&1) s=mul(s,x); return s;\n}\nnamespace Poly{\n\tinline void init(Rg int n){ d=0;\n\t\tfor(limit=1;limit<=n<<1;limit<<=1)++d;\n\t}\n\tinline void prep(int n){ inv[1]=1,init(n);\n\t\tfp(i,2,limit) inv[i]=mul(mod-mod/i,inv[mod%i]);\n\t\tfp(d,1,19){ lg[1<<d]=d; fp(i,0,(1<<d)-1)\n\t\t\tr[d][i]=(r[d][i>>1]>>1)|((i&1)<<(d-1));\n\t\t}\n\t\tfor(Rg int t=(mod-1)>>1,i=1,x,y;i<262144;i<<=1,t>>=1){\n\t\t\tx=qpow(3,t),y=qpow(iG,t),G[0][i]=G[1][i]=1;\n\t\t\tfp(k,1,i-1) G[1][i+k]=mul(G[1][i+k-1],x),G[0][i+k]=mul(G[0][i+k-1],y);\n\t\t}\n\t}\n\tinline void NTT(int* a,int tp){ fp(i,0,limit-1) if(i<r[d][i]) swap(a[i],a[r[d][i]]);\n\t\tfor(Rg int mid=1,I=2;mid<limit;mid<<=1,I<<=1) for(Rg int j=0,y;j<limit;j+=I) fp(k,0,mid-1)\n\t\t\ty=mul(G[tp][mid+k],a[j+k+mid]),a[j+k+mid]=dec(a[j+k],y),a[j+k]=inc(a[j+k],y);\n\t\tif(tp) return ; fp(i,0,limit-1) a[i]=mul(a[i],inv[limit]);\n\t}\n\tvoid Inv(int* a,int* b,int n){\n\t\tstatic arr C,D; if(n==1) return b[0]=qpow(a[0]),void();\n\t\tInv(a,b,(n+1)>>1),init(n); fp(i,0,n-1) C[i]=a[i],D[i]=b[i];\n\t\tfp(i,n,limit-1) C[i]=D[i]=0; NTT(C,1),NTT(D,1);\n\t\tfp(i,0,limit-1) C[i]=mul(C[i],mul(D[i],D[i])); NTT(C,0);\n\t\tfp(i,0,n-1) b[i]=dec(inc(b[i],b[i]),C[i]); fp(i,n,limit-1) b[i]=0;\n\t}\n\tvoid Sqrt(int* a,int* b,int n){\n\t\tstatic arr D,F; if(n==1) return b[0]=sqrt(a[0]),void();\n\t\tSqrt(a,b,(n+1)>>1); fp(i,0,n<<1) F[i]=0;\n\t\tInv(b,F,n),init(n); fp(i,0,n-1) D[i]=a[i];\n\t\tfp(i,n,limit-1) D[i]=0; NTT(D,1),NTT(b,1),NTT(F,1);\n\t\tfp(i,0,limit-1) b[i]=mul(inc(b[i],mul(D[i],F[i])),inv[2]);\n\t\tNTT(b,0); fp(i,n,limit-1) b[i]=0;\n\t\tmemset(D,0,limit<<2),memset(F,0,limit<<2);\n\t}\n\tinline void Direv(int* a,int* b,int n){\n\t\tfp(i,1,n-1) b[i-1]=mul(a[i],i); b[n-1]=b[n]=0;\n\t}\n\tinline void Inter(int* a,int* b,int n){\n\t\tfp(i,1,n-1) b[i]=mul(a[i-1],inv[i]); b[0]=0;\n\t}\n\tinline void Arcsin(int* a,int* b,int n){\n\t\tstatic arr A,B,C; Direv(a,A,n),init(n),NTT(a,1);\n\t\tfp(i,0,limit-1) B[i]=dec(1,mul(a[i],a[i])); NTT(B,0);\n\t\tfp(i,n,limit-1) B[i]=0; Sqrt(B,C,n),Inv(C,B,n),NTT(A,1),NTT(B,1);\n\t\tfp(i,0,limit-1) A[i]=mul(A[i],B[i]); NTT(A,0); Inter(A,b,n);\n\t}\n\tinline void Arctan(int* a,int* b,int n){\n\t\tstatic arr A,B,C; Direv(a,A,n),init(n),NTT(a,1);\n\t\tfp(i,0,limit-1) B[i]=inc(mul(a[i],a[i]),1);\n\t\tNTT(B,0),Inv(B,C,n),NTT(A,1),NTT(C,1);\n\t\tfp(i,0,limit-1) A[i]=mul(A[i],C[i]);\n\t\tNTT(A,0); Inter(A,b,n);\n\t}\n} using namespace Poly;\nint main(){\n\tn=read(),tp=read(),prep(n);\n\tfp(i,0,n-1) a[i]=read();\n\tif(tp) Arctan(a,b,n);\n\telse Arcsin(a,b,n);\n\tfp(i,0,n-1) print(b[i]);\n\treturn Ot(),0;\n}\n\n\n```\n\n\n\u5e95\u5c42\u4f18\u5316\u4e86\u4e00\u4e0b\u624d\u8dd1\u5230\u7b2c\u4e00\u9875...\n\n\n\n\u987a\u4fbf\u7b49\u54b1\u5eb7\u61c2\u4e86\u8bc1\u660e\u4e4b\u540e\u53ef\u80fd\u4f1a Update \u4e00\u4e0b\u9898\u89e3\uff08\u867d\u8bf4\u611f\u89c9\u54b1\u6c38\u8fdc\u4e5f\u5eb7\u4e0d\u61c2\u5c31\u662f\u4e86\uff09\n\n\n# Upd\n\n\u5728\u795e\u9c7c\u7684\u5e2e\u52a9\u4e0b\u5eb7\u61c2\u4e86\u6c42\u5bfc\u8fc7\u7a0b...orz \u795e\u9c7c Nacly_Fish\n\n\u9996\u5148\u54b1\u90fd\u77e5\u9053\u5bf9\u4e8e\u4e00\u4e2a\u51fd\u6570\u5b58\u5728\uff1a\n\n$$F(x)=\\int F'(x)$$\n\n>\u4e0d\u8981\u5728\u610f\u8fb9\u754c\u3001\u5b9a\u4e0d\u5b9a\u548c\u4ec0\u4e48\u4f59\u9879\u4e0d\u4f59\u9879\u7684...\n\n\u597d\u5427\u6b63\u786e\u7684\u5f0f\u5b50\u5e94\u8be5\u662f\u8fd9\u4e2a\u4e2b\u5b50\u7684\uff1a\n\n$$F(x)=\\int F'(x)  +R(x)$$\n\n\u5176\u4e2d $R(x)$ \u5c31\u662f\u4e2a~~\u5f1f\u5f1f~~\u4f59\u9879\uff0c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u5f3a\u884c\u5bf9\u4e8e\u79ef\u5206\u540e\u7684\u672b\u9879\u8fdb\u884c\u8865\u5dee\uff08\u56e0\u4e3a\u6c42\u5bfc\u4e4b\u540e\u5e38\u6570\u9879\u4fe1\u606f\u4e22\u5931\uff0c\u79ef\u5206\u4e4b\u540e\u4fe1\u606f\u88ab\u641e\u6210\u4e86 0 \uff09\n\n\n\u7531\u4e8e\u4e09\u89d2\u51fd\u6570\u4e0e\u53cd\u4e09\u89d2\u51fd\u6570\u7684\u4f18\u826f\u6027\u8d28\uff08\u8279\uff0c\u65e0\u9650\u9879\u6570\uff09\uff0c\u8fd9\u4e2a R \u5c31\u6728\u6709\u6389\u4e86\n\n\n\u7136\u540e\u54b1\u8003\u8651\u539f\u95ee\u9898\uff1a\n\n\u9996\u5148\u5bf9\u4e8e arcsin \uff0c \u54b1\u53ef\u4ee5\u8fd9\u4e48\u6c42\u51fa\u5b83\u7684\u5bfc\u6570\uff0c\u7136\u540e\u8fdb\u884c\u79ef\u5206\u6c42\u89e3\uff0c\u90a3\u4e48\u8fd9\u4e2a\u73a9\u610f\u513f\u7684\u5bfc\u6570\u600e\u4e48\u6c42\u5462\uff1f\n\n\u7b97\u4e86\u4e0d\u5e9f\u8bdd\u4e86\u76f4\u63a5\u4e00\u987f\u8bc1\u660e\u5b8c\u4e8b\u513f\u597d\u4e86\uff1a\n\n$$\\begin{aligned}     \\begin{cases} sin'(x)={dy\\over dx}  \\\\sin'(x) =cos(x)  \\end{cases}    \\\\        \\Rightarrow  {dy\\over dx}=cos(x) \\\\ {dx\\over dy} ={1\\over cos(x)}  \\\\{d ~arcsin (y)\\over dy} ={1\\over \\sqrt{1-y^2}}          \\end{aligned}$$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5df2\u77e5\u503c x \uff0c\u5b58\u5728\uff1a\n\n$$\\begin{aligned}  arcsin'(x)={1\\over \\sqrt{1-x^2}}  \\\\arcsin(x)=\\int{1\\over \\sqrt{1-x^2}} \\end{aligned}$$\n\n\u4ee4 $Arcsin(x)$ \u8868\u793a\u4ee5 $x$ \u4e3a\u53d8\u91cf\u7684 $arcsin(F(x))$ \u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u591a\u9879\u5f0f\u6709\uff1a\n\n$$\\begin{aligned}Arcsin(x)&=arcsin(F(x))  \\\\     Arcsin'(x) &=arcsin(F(x))' \\\\   Arcsin'(x) &=arcsin'(F(x)) F'(x)\\\\   Arcsin'(x) &={F'(x)\\over \\sqrt{1-F^2(x)}}  \\\\  Arcsin(x) &=\\int{F'(x) \\over \\sqrt{1-F^2(x)}} \\end{aligned}$$\n\n\u8bc1\u6bd5\n\n\n\n\u7136\u540e\u5543\u5543 $Arctan$ ? \u8fd9\u4e2a\u60a8\u53ef\u4ee5\u81ea\u5df1\u5543\uff0c\u53ea\u8981\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u628a $tan'(x)={1\\over cos^2(x)}$ \u5957\u4e00\u5957\u5c31\u597d\u4e86\n\n\u60a8\u53ef\u4ee5\u81ea\u5df1\u63a8\u4e00\u63a8\uff0c\u5982\u679c\u60f3\u770b\u54b1\u7684\u63a8\u5bfc\u53ef\u4ee5\u79fb\u6b65\u54b1\u7684 [$cnblogs$](https://www.cnblogs.com/Judge/p/11615446.html)\n\n\n\n\n\n\n\n\n",
        "postTime": 1569910919,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5265 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u53cd\u4e09\u89d2\u51fd\u6570\u3011"
    },
    {
        "content": "# \u60f3\u8981\u5199\u4ee3\u7801\u8bf7\u5148\u5b66\u4f1a[\u591a\u9879\u5f0f\u5f00\u6839](https://www.luogu.org/problemnew/show/P5205)\uff0c\u591a\u9879\u5f0f\u7684\u5fae\u79ef\u5206(\u5fc5\u5907\u524d\u7f6e\u6761\u4ef6)\n\n\u539f\u7406\u5f88\u7b80\u5355\n\n\u5148\u7531\n\n$\\dfrac{dsin(x)}{dx}=cos(x)$\n\n$\\dfrac{dtan(x)}{dx}=sec^2(x)$\n\n$\\dfrac{dy}{dx}*\\dfrac{dx}{dy}=1$\n\n\u53ef\u5f97\u5230\n\n$\\dfrac{dasin(x)}{dx}=\\dfrac{1}{(1-x^2)^{\\frac{1}{2}}}$\n\n$\\dfrac{datan(x)}{dx}=\\dfrac{1}{1+x^2}$\n\n\u7136\u540e\u7528\n\n$\\dfrac{dy}{dx}=\\dfrac{dy}{du}*\\dfrac{du}{dx}$\n\n\u7b97\u51fa\u5c06\u591a\u9879\u5f0f\u5e26\u5165\u53cd\u4e09\u89d2\u51fd\u6570\u7684\u5bfc\u6570\uff0c\u6700\u540e\u79ef\u5206\u4e00\u4e0b\u3002\n\n# \u7ed3\u8bba\n\n$asin(A(x))=\\int{\\dfrac{dA(x)}{(1-A(x)^2)^\\frac{1}{2}}}$\n\n$atan(A(x))=\\int\\dfrac{dA(x)}{1+A(x)*A(x)}$\n\n\u6838\u5fc3\u4ee3\u7801\u5728\u8fd9\u91cc\n\n```\nfriend polymerization asin(const polymerization &a){\n\tpolymerization up(a),down(-(a*a).resize(a.len));//resize\u7528\u6765\u4fdd\u8bc1\u8fd0\u7b97\u7ed3\u679c\u7684\u6b21\u6570\n\tup.differential();\n\tdown[0]=(down[0]+1)%P;\n\tdown=pow(down,pow(2,P-2)).resize(a.len);\n\treturn (up*down.inverse()).resize(a.len).integral();\n}\nfriend polymerization atan(const polymerization &a){\n\tpolymerization up(a),down((a*a).resize(a.len));\n\tup.differential();\n\tdown[0]=(down[0]+1)%P;\n\treturn (up*down.inverse()).resize(a.len).integral();\n}\n```\n\n[\u5b8c\u6574\u4ee3\u7801](https://www.luogu.org/paste/2jwxubxq)",
        "postTime": 1552888573,
        "uid": 81705,
        "name": "\u5bc6\u671f\u671b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5265 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u53cd\u4e09\u89d2\u51fd\u6570\u3011"
    }
]