[
    {
        "content": "poi\u7684\u4f17\u591a\u597d\u9898\u4e4b\u4e00\uff0c\u53ef\u60dc\u6d1b\u8c37\u7684\u6570\u636e\u6709\u70b9\u5f31\uff0c\u53ef\u80fd\u662f\u81ea\u5df1\u9020\u7684\u3002\u62ff\u5230\u8fd9\u9053\u9898\uff0c\u4e00\u770b0<=p<=3\uff0c\u5206\u7c7b\u8ba8\u8bba\u5427\u3002\n- \u5f53p=0\u65f6\uff0c\u663e\u7136\u9664\u4e86n=1\u7684\u7b54\u6848\u662f1\u4e4b\u5916\u5176\u5b83\u7b54\u6848\u90fd\u662f0\uff0c\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\u7f16\u53f7\u81f3\u5c11\u5dee1\u3002\n- \u5f53p=1\u65f6\uff0c\u663e\u7136\u53ea\u6709n=1\u6216(n=2\u4e14k=0)\u65f6\u7b54\u6848\u4e3a1,\u5176\u5b83\u90fd\u662f0\uff0c\u56e0\u4e3a\u5176\u5b83\u65b9\u6848\u7b2cn-1\u4e2a\u6570\u4e0en\u7684\u7f16\u53f7\u5dee\u81f3\u5c11\u4e3a2\u3002\n- \u5f53p=2\u65f6\uff0c\u6211\u4eec\u6765\u753b\u753b\u770b\uff0c\u9996\u5148\u662f\u4e00\u4e2an\uff0c\u7136\u540e\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u586bn-1\u6216\u662fn-2\uff0c\u5047\u8bbe\u5b83\u586b\u4e86n-1,\u90a3\u4e48\u7b2cn-1\u4e2a\u4f4d\u7f6e\u53ea\u80fd\u586bn-2,\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u53ea\u80fd\u586bn-3\uff0c\u7b2cn-2\u4e2a\u4f4d\u7f6e\u53ea\u80fd\u586bn-4\u2026\u2026\n\n\t\tn\n     n-2 n-1\n     \n     n-4 n-3\n     \n     n-6 n-5\n     \n     ...\n     \n\t\u4f9d\u6b21\u6784\u9020\uff0c\u5e76\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u9650\u5236\u5173\u7cfb\u5373\u53ef\u3002\n- \u5f53p=3\u65f6\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u5c31\u4e0d\u53ea\u6709\u4e24\u79cd\u9009\u62e9\u4e86\uff0c\u65e2\u7136\u6d89\u53ca\u5230\u9009\u62e9\uff0c\u5c31\u5e94\u8be5\u60f3\u5230dp\uff0c\u600e\u4e48dp\u5462\uff1f\u5e38\u89c4\u7684\u65b9\u6cd5\u4f3c\u4e4e\u65e0\u4ece\u4e0b\u624b\uff0c\u5982\u679c\u4ece\u4f4d\u7f6e\u4e0a\u8003\u8651\u7684\u8bdd\uff0c\u6bcf\u6b21\u8981\u540c\u65f6\u8f6c\u79fb\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u770b\u8d77\u6765\u4e0d\u53ef\u884c\u3002\u4ece\u7f16\u53f7\u4e0a\u8003\u8651\u5462\uff1f\u6211\u4eec\u4ecen\u52301\u4f9d\u6b21\u8003\u8651\u8fd9n\u4e2a\u5143\u7d20\uff0c\u4e0d\u65ad\u6269\u5927\u73af\u7684\u5927\u5c0f\u3002n\u663e\u7136\u653e\u4e0b\u5c31\u884c\u4e86\uff0cn-1\u653e\u5728\u73af\u7684\u53e6\u4e00\u4fa7\uff0c\u6b64\u65f6n\u548cn-1\u6709\u4e4b\u95f4\u6709\u4e24\u4e2a\u7a7a\u4f4d\u53ef\u4ee5\u63a5\u7740\u653e\u4e1c\u897f\uff0c\u63a5\u7740\u518d\u5c06n-2\u653e\u5728\u73af\u91cc\uff0c\u6b64\u65f6\u6709\u4e24\u79cd\u65b9\u6848\uff0c\u5bf9\u5e94\u7684\u987a\u5e8f\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6b64\u65f6\u67093\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u653e\uff0c\u6bcf\u653e\u5165\u4e00\u4e2a\u5143\u7d20x\u65f6\uff0c\u53ea\u7528\u8003\u8651x+1\uff0cx+2\uff0cx+3\u8fd9\u4e09\u4e2a\u5143\u7d20\u5468\u56f4\u53ef\u4ee5\u653e\u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86\uff0c\u6211\u4eec\u75283\u4f4d\u4e8c\u8fdb\u5236\u6570\u8868\u793ax+1\u548cx+2\u4e2d\u662f\u5426\u6709\u7a7a\u4f4d\uff0cx+1\u548cx+3\u662f\u5426\u6709\u7a7a\u4f4d\uff0c\u4ee5\u53cax+2\u548cx+3\u4e4b\u95f4\u662f\u5426\u6709\u7a7a\u4f4d\u3002\u6ce8\u610f\u53ea\u662f\u8bb0\u5f55\u4e4b\u95f4\u662f\u5426\u6709\u7a7a\u4f4d\uff0c\u4e0d\u8003\u8651\u4e2d\u95f4\u6709\u6ca1\u6709\u5176\u5b83\u5143\u7d20\u3002\u56e0\u4e3a\u9700\u8981\u8003\u8651\u9650\u5236\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u5f97\u77e5\u9053x+1,x+2,x+3\u7684\u987a\u5e8f\u3002\u6211\u4eec\u53e6\u5f00\u4e00\u7ef40/1\u8868\u793a\u662f\u5426\u662f\u9006\u65f6\u9488\u987a\u5e8f\u3002\u8f6c\u79fb\u65b9\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u4e3b\u8981\u9760\u624b\u52a8\u5206\u7c7b\u8ba8\u8bba\uff0c\u8fd8\u662f\u753b\u56fe\u6bd4\u8f83\u597d\u7406\u89e3\u3002![](https://cdn.luogu.com.cn/upload/pic/17863.png )\n\n- \u540e\u9762\u7684\u7b2c\u4e09\u4e2a\u72b6\u6001\u4e3a\u4e09\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0cx\u4ee3\u8868\u4e0a\u4e00\u4e2a\u72b6\u6001\u4e2dx+1\u548cx+2\u4e4b\u95f4\u662f\u5426\u6709\u7a7a\u4f4d\uff0c\u8fd9\u91cc\u81ea\u5df1\u753b\u4e00\u753b\u56fe\u5c31\u884c\u4e86\u3002\u5de6\u8fb9\u7684\u7ea2\u7ebf\u4e3a\u5f53\u524d\u53ef\u4ee5\u653e\u7684\u4f4d\u7f6e\uff0c\u5de6\u4e0b\u88ab\u6d1b\u8c37\u7684\u6c34\u5370\u6321\u4f4f\u4e86\uff0c\u52c9\u5f3a\u770b\u5427\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n\nusing namespace std;\n\n#define maxn 1000010\n#define abs(i) ((i)>=0?(i):-(i))\nconst int mod=1e9+7;\nint n,ki,pi,dp[maxn][2][8],cha[maxn][7];\n\ninline int readin(){\n    int x=0,s=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')s=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*s;\n}\n\ninline void solve0(){\n    if(n==1)puts(\"1\");\n    else puts(\"0\");\n}\n\ninline void solve1(){\n    if(n==1)puts(\"1\");\n    else if(n==2&&!ki)puts(\"1\");\n    else puts(\"0\");\n}\n\ninline bool ck(int x,int y){//can x be the right of y\n    //cerr<<x<<' '<<y<<endl;\n    if(abs((x-y))>pi)return false;\n    if(cha[y][x-y+3])return false;\n    return true;\n}\n\ninline void solve2(){\n    int ans=0,ok=1;\n    if(n==1){puts(\"1\");return;}\n    else if(n==2){\n    \tif(!ki)puts(\"1\");\n    \telse puts(\"0\");\n    \treturn;\n    }\n    if(ck(n,n-1)&&ck(n-2,n)){\n    \tif(n==3)ok=ck(n-1,n-2);\n    \tfor(int i=2,j=n-2;i<=j;++i,--j){\n        \tif(!ck(n-((i-2)<<1|1),n-((i-1)<<1|1))){ok=0;break;}\n        \tif(!ck(n-((n-j)<<1),n-((n-j-1)<<1))){ok=0;break;}\n        \tif(i==j){\n        \t\tif(!ck(n-((i-1)<<1|1),n-((n-j-1)<<1)))ok=0;\n        \t\tbreak;\n        \t}\n        \tif(j==i+1){\n        \t\tif(!ck(n-((i-1)<<1|1),n-((n-j)<<1)))ok=0;\n        \t\tbreak;\n        \t}\n    \t}\n    \tans+=ok;ok=1;\n    }\n    if(ck(n,n-2)&&ck(n-1,n)){\n    \tif(n==3)ok=ck(n-2,n-1);\n    \tfor(int i=2,j=n-2;i<=j;++i,--j){\n        \tif(!ck(n-((i-1)<<1),n-(i<<1))){ok=0;break;}\n        \tif(!ck(n-((n-j-1)<<1|1),n-((n-j-2)<<1|1))){ok=0;break;}\n        \tif(i==j){\n        \t\tif(!ck(n-((i-1)<<1),n-((n-j-1)<<1|1)))ok=0;\n        \t\tbreak;\n        \t\t}\n        \tif(j==i+1){\n        \t\tif(!ck(n-(i<<1),n-((n-j-1)<<1|1)))ok=0;\n        \t\tbreak;\n        \t}\n    \t}\n    \tans+=ok;ok=1;\n    }\n    printf(\"%d\\n\",ans);\n}\n\ninline bool jg(int x,int s,int j,int k){\n    bool s1=j&4,s2=j&2,s3=j&1;\n    if(!s){\n    if(k==0)\n        return ((s2||ck(x+1,x+3))&&(s3||ck(x+3,x+2)));\n    else if(k==1)\n        return ((s3||ck(x+3,x+2))&&ck(x,x+3));\n    else if(k==2)\n        return ((s2||ck(x+1,x+3))&&ck(x+3,x));\n    }\n    else{\n    if(k==0)\n        return ((s2||ck(x+3,x+1))&&(s3||ck(x+2,x+3)));\n    else if(k==1)\n        return ((s3||ck(x+2,x+3))&&ck(x+3,x));\n    else if(k==2)\n        return ((s2||ck(x+3,x+1))&&ck(x,x+3));\n    }\n}\n\ninline bool exjg(int x,int s,int j,int k){\n    if(x>1)return true;\n    bool s1=j&4;\n    if(!s){\n    if(k==0)\n        return (ck(x,x+1)&&ck(x+2,x));\n    else if(k==1)\n        return (ck(x+1,x)&&(s1||ck(x+2,x+1)));\n    else if(k==2)\n        return (ck(x,x+2)&&(s1||ck(x+2,x+1)));\n    }\n    else{\n    if(k==0)\n        return (ck(x,x+2)&&ck(x+1,x));\n    else if(k==1)\n        return (ck(x,x+1)&&(s1||ck(x+1,x+2)));\n    else if(k==2)\n        return (ck(x+2,x)&&(s1||ck(x+1,x+2)));\n    }\n}\n\ninline void calc(int i,int s,int j){\n    int sig=bool(j&4);\n    //12\n    if(!sig&&jg(i-1,s,j,0)&&exjg(i-1,s,j,0))\n    \tdp[i-1][s^1][1]=(dp[i-1][s^1][1]+dp[i][s][j])%mod;\n    //13\n    if(!(j&2)&&jg(i-1,s,j,1)&&exjg(i-1,s,j,1))\n    \tdp[i-1][s][2|sig]=(dp[i-1][s][2|sig]+dp[i][s][j])%mod;\n    //23\n    if(!(j&1)&&jg(i-1,s,j,2)&&exjg(i-1,s,j,2))\n    \tdp[i-1][s][4|sig]=(dp[i-1][s][4|sig]+dp[i][s][j])%mod;\n}\n\ninline void solve3(){\n    int ans=0;\n    if(n==1){puts(\"1\");return;}\n    else if(n==2){\n    \tif(!ki)puts(\"1\");\n    \telse puts(\"0\");\n    \treturn;\n    }\n    dp[n-2][0][0]=1;\n    dp[n-2][1][0]=1;\n    for(int i=n-2;i>1;--i)\n    \tfor(int j=0;j<8;++j){\n        \tif(dp[i][0][j])\n        \t\tcalc(i,0,j);\n        \tif(dp[i][1][j])\n        \t\tcalc(i,1,j);\n    \t}\n    for(int i=0;i<8;++i)ans=((ans+dp[1][0][i])%mod+dp[1][1][i])%mod;\n    printf(\"%d\\n\",ans);\n}\n\nint main(){\n    n=readin();ki=readin();pi=readin();\n    for(int i=1,x,y;i<=ki;++i){\n    \tx=readin();y=readin();\n    \tif(abs((x-y))<=pi)\n    \t    cha[x][y-x+3]=1;\n   \t}\n    if(pi==0)solve0();\n    else if(pi==1)solve1();\n    else if(pi==2)solve2();\n    else solve3();\n    return 0;\n}\n\n```",
        "postTime": 1524304719,
        "uid": 35465,
        "name": "Hunter_Will",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3581 \u3010[POI2015]CZA\u3011"
    },
    {
        "content": "\u5bf9\u4e8e$p\\le2$\u7684\u60c5\u51b5\u6211\u4eec\u90fd\u80fd\u76f4\u63a5\u5224\u65ad,\u8003\u8651$p=3$.\n\n\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u60f3\u6cd5\u662f\u628a\u6240\u6709\u6570\u5b57\u4ece\u5c0f\u5230\u5927\u653e\u5230\u73af\u4e0a,\u8bb0\u5f55\u4e4b\u524d\u653e\u7684\u4e09\u4e2a\u6570\u4e4b\u95f4\u6709\u6ca1\u6709\u7a7a\u4f4d,\u4ee5\u53ca\u8fd9\u4e09\u4e2a\u6570\u662f\u5426\u5728\u73af\u7684\u7aef\u70b9\u4e0a.\n\n\u4f46\u8fd9\u4e2a\u505a\u6cd5\u975e\u5e38\u9ebb\u70e6,\u5e76\u4e14\u590d\u6742\u5ea6\u5e76\u4e0d\u662f\u5f88\u4f18\u79c0.\n\n\u5b98\u7f51\u4e0a\u7ed9\u51fa\u4e86\u4e00\u79cd\u66f4\u52a0\u5de7\u5999\u7684\u89e3\u6cd5.\n\n\u6211\u4eec\u5148\u628a\u7f16\u53f7$i$\u53d8\u6210$n-i$,\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u8981\u6c42\u7684\u662f\u4ee5$0$\u5f00\u5934,\u4ee5$1/2/3$\u7ed3\u5c3e\u7684,\u6ee1\u8db3\u9898\u76ee\u91cc\u9644\u52a0\u6761\u4ef6\u7684\u6570\u5217\u7684\u6570\u91cf.\n\n\u6211\u4eec\u8bbe$f[i]$\u8868\u793a\u4ee5$i$\u5f00\u5934$i+1$\u7ed3\u5c3e,\u503c\u57df\u4e3a$[i,n)$\u7684,\u6ee1\u8db3\u9898\u76ee\u9644\u52a0\u6761\u4ef6\u7684\u6570\u5217\u7684\u6570\u91cf.\n\n\u540c\u65f6\u6211\u4eec\u8bbe$g[i]$\u8868\u793a\u4ee5$i+1$\u5f00\u5934$i$\u7ed3\u5c3e,\u503c\u57df\u4e3a$[i,n)$\u7684,\u6ee1\u8db3\u9898\u76ee\u9644\u52a0\u6761\u4ef6\u7684\u6570\u5217\u7684\u6570\u91cf.\n\n\u770b\u4e0a\u53bb\u4f3c\u4e4e\u5b8c\u5168\u4e0d\u80fd\u8f6c\u79fb.\n\n\u6211\u4eec\u5148\u8003\u8651$n$\u8f83\u5c0f\u7684\u60c5\u51b5,\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\u6c42\u51fa$f$\u6570\u7ec4\u548c$g$\u6570\u7ec4.\u5177\u4f53\u7684\u8fc7\u7a0b\u5927\u6982\u662f\u5148\u786e\u5b9a\u5934\u5c3e,\u7136\u540e\u4e0d\u65ad\u5f80\u4e2d\u95f4\u63d2\u5165\u6570\u5b57\u77e5\u9053\u586b\u6ee1\u6574\u4e2a\u6570\u5217\u4e3a\u6b62.\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u8bb0\u5fc6\u5316,\u5982\u679c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u6570\u5217\u4e24\u7aef\u7684\u6570\u7684\u5dee\u4e3a$1$,\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u6b64\u505c\u6b62\u641c\u7d22.\n\n\u597d\u7684\u8ba9\u6211\u4eec\u6765\u770b\u770b\u641c\u51fa\u7684\u662f\u4ec0\u4e48\u4e1c\u897f.\n\n![\u76d7\u4e00\u5f20\u56fe](https://images2018.cnblogs.com/blog/1180874/201804/1180874-20180413200840344-1061677236.png)\n\n\u4e8e\u662f\u6709$f[i]=g[i+1]+g[i+2]+g[i+4]+g[i+5]$\n\n\u56e0\u4e3a$f$\u548c$g$\u7684\u72b6\u6001\u8bbe\u8ba1\u662f\u5bf9\u79f0\u7684\u6240\u4ee5$g[i]=f[i+1]+f[i+2]+f[i+4]+f[i+5]$\n\n\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u5f0f\u5b50\u53ea\u5728$i\\le n-8$\u7684\u65f6\u5019\u6210\u7acb,\u5bf9\u4e8e$i$\u66f4\u5927\u7684\u60c5\u51b5\u662f\u9700\u8981\u771f\u7684\u53bb\u641c\u7684.\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u5206\u522b\u7edf\u8ba1\u4ee5$1/2/3$\u7ed3\u5c3e\u7684\u6570\u5217\u7684\u6570\u91cf$Ans_1/Ans_2/Ans_3$,\u663e\u7136$Ans_1=f[0]$,\u81f3\u4e8e$Ans_2$\u548c$Ans_3$,\u6211\u4eec\u624b\u73a9\u4e00\u4e0b.\n\n![](https://images2018.cnblogs.com/blog/1180874/201804/1180874-20180413200947514-1059687436.png)\n![](https://images2018.cnblogs.com/blog/1180874/201804/1180874-20180413201025449-801614152.png)\n\n\u597d\u7684\u90a3\u4e48$Ans_2=f[1]+f[3]+f[4]$\n\n$Ans_3=f[2]+f[4]+f[5]+g[3]+g[4]$\n\n\u590d\u6742\u5ea6$O(n)$,\u4ee3\u7801\u96be\u5ea6\u4e0d\u5927.\n\n```\n#include<bits/stdc++.h>\n#define read() Read<int>()\nnamespace pb_ds{   \n    namespace io{\n        const int MaxBuff=1<<15;\n        const int Output=1<<23;\n        char B[MaxBuff],*S=B,*T=B;\n\t\t#define getc() ((S==T)&&(T=(S=B)+fread(B,1,MaxBuff,stdin),S==T)?0:*S++)\n        char Out[Output],*iter=Out;\n        inline void flush(){\n            fwrite(Out,1,iter-Out,stdout);\n            iter=Out;\n        }\n    }\n    template<class Type> inline Type Read(){\n        using namespace io;\n        register char ch;\n        register Type ans=0; \n        register bool neg=0;\n        while(ch=getc(),(ch<'0' || ch>'9') && ch!='-');\n        ch=='-'?neg=1:ans=ch-'0';\n        while(ch=getc(),'0'<= ch && ch<='9') ans=ans*10+ch-'0';\n        return neg?-ans:ans;\n    }\n    template<class Type> inline void Print(register Type x,register char ch='\\n'){\n        using namespace io;\n        if(!x) *iter++='0';\n        else{\n            if(x<0) *iter++='-',x=-x;\n            static int s[100]; \n            register int t=0;\n            while(x) s[++t]=x%10,x/=10;\n            while(t) *iter++='0'+s[t--];\n        }\n        *iter++=ch;\n    }\n}\nusing namespace pb_ds;\nusing namespace std;\ntypedef long long ll;\nconst int N=1e6+5;\nconst int Mod=1e9+7;\ninline void ad(int &x,int y){\n\tx+=y;\n\tif (x>=Mod) x-=Mod;\n}\nint n,m,k,ans;\nint f[N],g[N];\nbool a[N][7],vis[N];\n#define chk(x,y) (!a[(x)][(y)-(x)+3])\nnamespace sub2{\n\tint tot,ans;\n\tint p[N];\n\tinline void work(){\n\t\tans=2;\n\t\tfor (int i=1;i<=n;++i){\n\t\t\tif (i&1) p[(i+1)>>1]=n-i;\n\t\t\telse p[n-(i>>1)+1]=n-i;\n\t\t}\n\t\tp[0]=p[n],p[n+1]=p[1];\n\t\tfor (int i=1;i<=n;++i)\n\t\t\tif (!chk(p[i],p[i+1])){\n\t\t\t\t--ans;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tfor (int i=1;i<=n;++i)\n\t\t\tif (!chk(p[i],p[i-1])){\n\t\t\t\t--ans;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t\texit(0);\n\t}\n}\nint dfs(int las,int t,int len,int pos,int mn){\n\tif (pos==len){\n\t\tif (abs(las-t)<=3 && chk(las,t)) return 1;\n\t\treturn 0;\n\t}\n\tint res=0;\n\tfor (int i=max(mn+1,las-3);i<=min(n-1,las+3);++i){\n\t\tif (!vis[i] && chk(las,i)){\n\t\t\tvis[i]=1;\n\t\t\tres+=dfs(i,t,len,pos+1,mn);\n\t\t\tvis[i]=0;\n\t\t}\t\n\t}\n\treturn res;\n}\ninline int get_val(int s,int t){\n\tvis[s]=vis[t]=1;\n\tint k=min(s,t);\n\tint res=dfs(s,t,n-k,2,k);\n\tvis[s]=vis[t]=0;\n\treturn res;\n}\nint main(){\n\tn=read(),m=read(),k=read();\n\tfor (int i=1;i<=m;++i){\n\t\tint u=n-read(),v=n-read();\n\t\tif (abs(u-v)<=k) a[u][v-u+3]=1;\n\t}\n\tif (n==1) return puts(\"1\"),0;\n\tif (!k) return puts(\"0\"),0;\n\tif (n==2) return puts(m?\"0\":\"1\"),0;\n\tif (k==1) return puts(\"0\"),0;\n\tif (k==2) sub2::work();\n\tif (n<=7){\n\t\tif (chk(1,0)) ad(ans,get_val(0,1));\n\t\tif (chk(2,0)) ad(ans,get_val(0,2));\n\t\tif (n>=4 && chk(3,0)) ad(ans,get_val(0,3));\n\t\tprintf(\"%d\\n\",ans);\n\t\treturn 0;\n\t}\n\tfor (int i=n-1;n-i<=7 && ~i;--i){\n\t\tg[i]=get_val(i+1,i);\n\t\tf[i]=get_val(i,i+1);\n\t}\t\n\tfor (int i=max(-1,n-8);~i;--i){\n\t\tf[i]=g[i]=0;\n\t\tif (chk(i,i+2)) ad(f[i],g[i+1]);\n\t\tif (chk(i,i+3)){\n\t\t\tif (chk(i+2,i+1)) ad(f[i],g[i+2]);\n\t\t\tif (chk(i+4,i+1)){\n\t\t\t\tif (chk(i+3,i+2) && chk(i+2,i+5)) ad(f[i],g[i+4]);\n\t\t\t\tif (chk(i+3,i+6) && chk(i+5,i+2) && chk(i+2,i+4)) ad(f[i],g[i+5]);\n\t\t\t}\n\t\t}\n\t\tif (chk(i+2,i)) ad(g[i],f[i+1]);\n\t\tif (chk(i+3,i)){\n\t\t\tif (chk(i+1,i+2)) ad(g[i],f[i+2]);\n\t\t\tif (chk(i+1,i+4)){\n\t\t\t\tif (chk(i+2,i+3) && chk(i+5,i+2)) ad(g[i],f[i+4]);\n\t\t\t\tif (chk(i+6,i+3) && chk(i+2,i+5) && chk(i+4,i+2)) ad(g[i],f[i+5]);\n\t\t\t}\n\t\t}\n\t}\n\tif (chk(1,0)) ad(ans,f[0]);\n\tif (chk(2,0)){\n\t\tif (chk(0,1)) ad(ans,f[1]);\n\t\tif (chk(0,3)){\n\t\t\tif (chk(4,1) && chk(1,2)) ad(ans,f[3]);\n\t\t\tif (chk(3,1) && chk(1,4) && chk(5,2)) ad(ans,f[4]);\n\t\t}\n\t}\n\tif (chk(3,0)){\n\t\tif (chk(0,1)){\n\t\t\tif (chk(1,2)) ad(ans,f[2]);\n\t\t\tif (chk(1,4)){\n\t\t\t\tif (chk(5,2) && chk(2,3)) ad(ans,f[4]);\n\t\t\t\tif (chk(4,2) && chk(2,5) && chk(6,3)) ad(ans,f[5]);\n\t\t\t}\t\n\t\t}\n\t\tif (chk(0,2)){\n\t\t\tif (chk(2,1) && chk(1,4)) ad(ans,g[3]);\n\t\t\tif (chk(2,5) && chk(4,1) && chk(1,3)) ad(ans,g[4]);\n\t\t}\t\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n\n",
        "postTime": 1561975162,
        "uid": 8601,
        "name": "disposrestfully",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3581 \u3010[POI2015]CZA\u3011"
    }
]