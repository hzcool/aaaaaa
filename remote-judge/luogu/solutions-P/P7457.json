[
    {
        "content": "[\u70b9\u51fb\u6b64\u5904\u4ee5\u83b7\u5f97\u66f4\u4f73\u9605\u8bfb\u4f53\u9a8c](https://www.macesuted.cn/article/lg7457/)\n\n[\u9898\u9762](https://www.luogu.com.cn/problem/P7457)\n\n# \u9898\u610f\n\n\u7ed9\u51fa $n$ \u4e2a\u70b9\u548c $q$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u5c5e\u4e8e\u4e0b\u9762\u4e09\u4e2a\u4e2d\u7684\u4e00\u79cd\uff1a\n\n1. \u5728\u70b9 $u,~v$ \u4e4b\u95f4\u52a0\u5165\u4e00\u6761\u8fb9\u6743\u4e3a $d$ \u7684\u65e0\u5411\u8fb9\u3002\n2. \u5220\u9664 $u,~v$ \u4e4b\u95f4\u7684\u8fb9\u3002\n3. \u8be2\u95ee $u,~v$ \u4e4b\u95f4\u7684\u6240\u6709\u8def\u5f84\u4e2d\u6700\u5c0f\u503c\u6700\u5927\u4e3a\u591a\u5c11\u3002\n\n\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u6ca1\u6709\u91cd\u8fb9\uff0c$n,~q \\le 10^5,~0 \\le d \\le 10$\u3002\n\n# \u5206\u6790\n\n\u53d1\u73b0\u8fb9\u6743 $d$ \u7684\u53d6\u503c\u8303\u56f4\u5f88\u5c0f\uff0c\u6211\u4eec\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\uff08$0 \\sim 10$\uff09\uff0c\u7136\u540e\u627e\u5230\u7b54\u6848\u4e3a\u5f53\u524d\u679a\u4e3e\u6570\u503c\u7684\u8be2\u95ee\u5e76\u6807\u8bb0\u3002\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u540c\u65f6\u6709\u52a0\u8fb9\u548c\u5220\u8fb9\u64cd\u4f5c\uff0c\u5220\u8fb9\u65f6\u6211\u4eec\u65e0\u6cd5\u5f88\u597d\u5730\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u6700\u5927\u8fd9\u4e00\u4fe1\u606f\uff0c\u6240\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u6309\u65f6\u95f4\u5206\u6cbb\u53bb\u6389\u5220\u8fb9\u64cd\u4f5c\u3002\n\n\u8f93\u5165\u65f6\u76f4\u63a5\u5c06\u6bcf\u6761\u8fb9\u63d2\u5165\u5230\u7ebf\u6bb5\u6811\u4e2d\uff0c\u7136\u540e\u5148\u5728\u8303\u56f4 $0 \\sim 10$ \u4e4b\u95f4\u679a\u4e3e\u7b54\u6848 $ans$\uff0c\u63a5\u7740\u904d\u5386\u4e00\u904d\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u53ea\u63d2\u5165\u8fb9\u6743 $\\le ans$ \u7684\u8fb9\uff0c\u9047\u5230\u542b\u6709\u8be2\u95ee\u7684\u7ed3\u70b9\u65f6\u5224\u65ad\u5df2\u52a0\u5165\u7684\u8fb9\u662f\u5426\u53ef\u8ba9\u4e24\u70b9\u8054\u901a\uff0c\u5982\u679c\u8054\u901a\u5219\u6807\u8bb0\u6b64\u8be2\u95ee\u7b54\u6848\u4e3a $ans$ \u5e76\u4e14\u5728\u4e4b\u540e\u7684\u904d\u5386\u4e2d\u4e0d\u518d\u8003\u8651\u3002\u5224\u65ad\u8054\u901a\u4f7f\u7528\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n\u6ce8\u610f\u53ef\u80fd\u5b58\u5728\u52a0\u8fb9\u662f $u,~v$\uff0c\u5220\u8fb9\u662f $v,~u$ \u7684\u60c5\u51b5\uff0c\u5982\u679c\u6ca1\u6709\u5224\u65ad\u53ef\u80fd\u4f1a\u62ff\u5230 94 \u5206\u3002\u8f93\u5165\u65f6\u6307\u5b9a $u,~v$ \u5927\u5c0f\u5173\u7cfb\uff0c\u6216\u662f\u4f7f\u7528\u65e0\u5e8f\u6570\u5bf9\u4fdd\u7559\u8fb9\u4fe1\u606f\u5747\u53ef\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\n\n```cpp\n/**\n * @author Macesuted (macesuted@qq.com)\n * @copyright Copyright (c) 2021\n */\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nnamespace io {\n\n// fread\n\n}  // namespace io\nusing io::getch;\nusing io::getstr;\nusing io::putch;\nusing io::putstr;\nusing io::read;\nusing io::write;\n\n#define maxn 200005\n\ntypedef pair<int, int> pii;\n\nstruct Edge {\n    int x, y, dist;\n};\n\nvector<Edge> tree[maxn << 2];\nmap<pii, pii> S;\npii ask[maxn];\nint answer[maxn], fa[maxn], siz[maxn];\nbool vis[maxn];\n\nvoid insert(int p, int l, int r, int ql, int qr, Edge edge) {\n    if (ql <= l && r <= qr) return tree[p].push_back(edge);\n    int mid = (l + r) >> 1;\n    if (ql <= mid) insert(p << 1, l, mid, ql, qr, edge);\n    if (qr > mid) insert(p << 1 | 1, mid + 1, r, ql, qr, edge);\n    return;\n}\n\nstack<pii> rec;\nint getfa(int p) { return fa[p] == p ? p : getfa(fa[p]); }\nvoid insert(int x, int y) {\n    x = getfa(x), y = getfa(y);\n    if (x == y) return rec.push((pii){-1, -1});\n    if (siz[x] < siz[y]) swap(x, y);\n    fa[y] = x, siz[x] += siz[y];\n    return rec.push((pii){x, y});\n}\nvoid rollback(void) {\n    if (rec.top().first == -1 && rec.top().second == -1) return rec.pop();\n    fa[rec.top().second] = rec.top().second, siz[rec.top().first] -= siz[rec.top().second];\n    return rec.pop();\n}\nvoid dfs(int p, int l, int r, int lim) {\n    for (vector<Edge>::iterator i = tree[p].begin(); i != tree[p].end(); i++)\n        if (i->dist <= lim) insert(i->x, i->y);\n    if (l == r && vis[l] && answer[l] == -1 && getfa(ask[l].first) == getfa(ask[l].second))\n        answer[l] = lim;\n    int mid = (l + r) >> 1;\n    if (l != r) dfs(p << 1, l, mid, lim), dfs(p << 1 | 1, mid + 1, r, lim);\n    for (vector<Edge>::iterator i = tree[p].begin(); i != tree[p].end(); i++)\n        if (i->dist <= lim) rollback();\n    return;\n}\n\nint main() {\n    int n = read<int>(), q = read<int>();\n    for (register int i = 1; i <= q; i++) {\n        int opt = read<int>();\n        if (opt == 0) {\n            int x = read<int>(), y = read<int>(), dist = read<int>();\n            if (x > y) swap(x, y);\n            S[(pii){x, y}] = (pii){dist, i};\n        } else if (opt == 1) {\n            int x = read<int>(), y = read<int>();\n            if (x > y) swap(x, y);\n            insert(1, 1, q, S[(pii){x, y}].second, i, (Edge){x, y, S[(pii){x, y}].first});\n            S.erase((pii){x, y});\n        } else\n            vis[i] = true, ask[i].first = read<int>(), ask[i].second = read<int>();\n    }\n    for (map<pii, pii>::iterator i = S.begin(); i != S.end(); i++)\n        insert(1, 1, q, i->second.second, q, (Edge){i->first.first, i->first.second, i->second.first});\n    memset(answer, -1, sizeof(answer));\n    for (register int i = 0; i <= 10; i++) {\n        for (register int j = 0; j < n; j++) fa[j] = j, siz[j] = 1;\n        dfs(1, 1, q, i);\n    }\n    for (register int i = 1; i <= q; i++)\n        if (vis[i]) write(answer[i]), putch('\\n');\n    return 0;\n}\n```",
        "postTime": 1622527545,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "P7457"
    },
    {
        "content": "### \u7b80\u8981\u9898\u610f\n\n> \u6709\u4e00\u5f20 $n$ \u4e2a\u70b9\u7684\u65e0\u5411\u56fe\uff0c $q$ \u4e2a\u64cd\u4f5c\uff1a\n> \n> 1. \u5728 $x,y$ \u4e4b\u95f4\u6dfb\u52a0\u4e00\u6761\u8fb9\u6743\u4e3a $v$ \u7684\u8fb9\u3002\n> 2. \u5220\u9664 $x,y$ \u4e4b\u95f4\u7684\u8fb9\u3002\n> 3. \u8be2\u95ee $x,y$ \u4e4b\u95f4\u7684\u8def\u5f84\u4e2d\u6700\u5927\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u3002\n> \n> $1\\le n,q\\le 10^5,1\\le x,y\\le n,0\\le v\\le 10$\n\n### \u5206\u6790\n\n\u9996\u5148\u5c06\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\u3002\n\n\u6211\u4eec\u628a\u6bcf\u6761\u8fb9\u641e\u51fa\u5b58\u5728\u533a\u95f4\u3002\u7136\u540e\u6309\u65f6\u95f4\u6765\u505a\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\n\n\u6211\u4eec\u5728\u65f6\u95f4\u8f74\u4e0a\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\u3002\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u6211\u4eec\u628a\u5b83\u6240\u5728\u7684\u65f6\u95f4\u6bb5\u5206\u4e3a\u7ebf\u6bb5\u6811\u4e0a\u7684\u82e5\u5e72\u4e2a\u533a\u95f4\u8bb0\u4e0b\u6765\u3002\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5728\u8be5\u8282\u70b9\u4e0a\u7ef4\u62a4\u4e00\u4e2a`vector`\uff0c\u8868\u793a\u5b8c\u5168\u8986\u76d6\u8fd9\u4e2a\u533a\u95f4\u7684\u8fb9\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u201c\u6700\u5927\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u201d\u4e0d\u662f\u5f88\u597d\u7ef4\u62a4\u3002\u90a3\u600e\u4e48\u529e\u5462\uff1f\u6ce8\u610f\u5230 $0\\le v\\le 10$ \uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4ece $0$ \u5230 $10$ \u90fd\u505a\u4e00\u904d\u67e5\u8be2\uff01\u6bcf\u6b21\u6211\u4eec\u53ea\u63d2\u5165\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u679a\u4e3e\u7684\u201c\u6700\u5927\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u201d\u7684\u8fb9\uff0c\u7136\u540e\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u662f\u5426\u8054\u901a\u4e0d\u5c31\u597d\u4e86\u5417\uff1f\n\n\u7531\u4e8e\u6211\u4eec\u7ebf\u6bb5\u6811\u5206\u6cbb\u904d\u5386\u5b8c\u4e00\u4e2a\u8282\u70b9\u540e\u9700\u8981\u64a4\u56de\u63d2\u5165\u7684\u8fb9\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u8bb0\u5f55\u63d2\u5165\u64cd\u4f5c\u3002\n\n\u6ce8\u610f\u53ef\u80fd\u6709\u7c7b\u4f3c\u63d2\u5165 $(3,5)$ \u5220\u9664 $(5,3)$ \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u6bcf\u6b21\u8bfb\u53d6\u4e00\u6761\u8fb9\u5c31\u94a6\u5b9a $x<y$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nmap<pair<int,int>,pair<int,int> > mp;\nstruct nade{\n\tint x,y,val;\n};\nint askx[1000005],asky[1000005],opt[1000005];\nint ans[1000005];\nvector<nade>v[4000005];\nint n,q;\nint fa[1000005],dis[2000005];\nstruct node{\n    int x,y,ds;\n};\nstack<node> st;\nint get(int x){\n    if(x==fa[x])return x;\n    else return get(fa[x]);\n}\nvoid add(int x,int y){\n    x=get(x),y=get(y);\n    if(x==y)return;\n    if(dis[x]>dis[y])swap(x,y);\n    fa[x]=y;\n    st.push({x,y,dis[y]});\n    dis[y]+=dis[x];\n}\nvoid pop(){\n    int x=st.top().x,y=st.top().y;\n    dis[y]=st.top().ds;\n    fa[x]=x;\n    st.pop();\n}\nvoid insert(int k,int l,int r,int x,int y,nade z){\n    if(l>=x&&r<=y){\n        v[k].push_back(z);\n        return;\n    }\n    int mid=l+r>>1;\n    if(mid>=x)insert(k*2,l,mid,x,y,z);\n    if(mid<y)insert(k*2+1,mid+1,r,x,y,z);\n}\nvoid solve(int k,int l,int r,int x){\n    int ht=st.size();\n    for(int i=0;i<v[k].size();i++)\n\t\tif(v[k][i].val<=x)add(v[k][i].x,v[k][i].y);\n    if(l==r){\n    \tif(opt[l]==2&&get(askx[l])==get(asky[l])&&ans[l]<0)ans[l]=x;\n        while(st.size()>ht)pop();\n        return;\n    }\n    int mid=l+r>>1;\n    solve(k*2,l,mid,x);\n    solve(k*2+1,mid+1,r,x);\n    while(st.size()>ht)pop();\n}\nint main(){\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<=q;i++){\n    \tint o;scanf(\"%d\",&o);\n    \topt[i]=o;\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        if(x>y)swap(x,y);\n        askx[i]=x,asky[i]=y;\n        if(o==0){\n        \tint val;scanf(\"%d\",&val);\n        \tmp[make_pair(x,y)]=make_pair(i,val);\n        }else if(o==1){\n            insert(1,1,q,mp[make_pair(x,y)].first,i-1,(nade){x,y,mp[make_pair(x,y)].second});\n            mp.erase(make_pair(x,y));\n        }\n    }\n    for(int i=1;i<=n;i++)fa[i]=i,dis[i]=1;\n    for(map<pair<int,int>,pair<int,int> >::iterator i=mp.begin();i!=mp.end();i++)\n        insert(1,1,q,(*i).second.first,q,(nade){(*i).first.first,(*i).first.second,(*i).second.second});\n    memset(ans,-1,sizeof(ans));\n    for(int i=0;i<=10;i++)solve(1,1,q,i);\n    for(int i=1;i<=q;i++)if(opt[i]==2)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1622508428,
        "uid": 233462,
        "name": "Umbrella_Leaf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3P7457 [CERC2018] The Bridge on the River Kawaii"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u6709\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u56fe\uff0c\u6709 $q$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u5f62\u5982\uff1a\n\n$ \\texttt{0 x y v\uff1a}$ \u5728 $x,y$  \u95f4\u6dfb\u52a0\u4e00\u6761\u6743\u503c\u4e3a $v$ \u7684\u8fb9\u3002\n\n$ \\texttt{1 x y\uff1a}$ \u5220\u9664 $x,y$ \u4e4b\u95f4\u7684\u8fb9\uff0c\u4fdd\u8bc1\u5b58\u5728\u3002\n\n$ \\texttt{2 x y\uff1a}$ \u8be2\u95ee $x,y$ \u6240\u6709\u8def\u5f84\u6700\u5927\u6743\u503c\u7684\u6700\u5c0f\u503c\u3002\n\n$ 1 \\leq n, q \\leq 2 \\times 10 ^ 5, 1 \\leq v \\leq 10$\n\n<!--more--> \t\n\n### \u9898\u76ee\u5206\u6790\n\n\u6211\u4eec\u5148\u5ffd\u7565\u8fd9\u4e2a $v$ \uff0c\u770b\u770b\u6211\u4eec\u5f97\u5230\u4e86\u4ec0\u4e48\uff1a\u52a0\u5165\u4e00\u6761\u8fb9\uff0c\u5220\u9664\u4e00\u6761\u8fb9\uff0c\u8be2\u95ee\u4e24\u70b9\u662f\u5426\u8054\u901a\u3002\n\n\u8fd9\u8ba9\u6211\u4eec\u8054\u60f3\u5230\u4ec0\u4e48\uff1f\u6ca1\u9519\uff0c[\u52a8\u6001\u56fe\u8fde\u901a\u6027](https://loj.ac/p/121)\uff01\n\n\u518d\u4e00\u770b\uff0c\u8fd9\u4e2a $v$ \u8303\u56f4\u975e\u5e38\u7684\u5c0f\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u679a\u4e3e $v$ \u7684\u6700\u5927\u503c\uff0c\u6bcf\u6b21\u628a\u6743\u503c\u4e0d\u8d85\u8fc7 $v$ \u7684\u8fb9\u52a0\u5165\u56fe\u4e2d\uff0c\u8be2\u95ee\u4e24\u70b9\u4e4b\u95f4\u662f\u5426\u8054\u901a\u3002\n\n\u8fd9\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u4f7f\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u89e3\u51b3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $ \\Theta (vn \\log^2 n) $ \u3002\n\n### \u4ee3\u7801\n\n``` cpp\n#include <bits/stdc++.h>\n\n#define R register\n#define ll long long\n#define pair std::pair<int, int>\n#define mp(i, j) std::make_pair(i, j)\n#define meow(cat...) fprintf(stderr, cat)\n#define sum(a, b, mod) (((a) + (b)) % mod)\n\nconst int MaxN = 2e5 + 10;\nconst int MaxM = 5e5 + 10;\n\nstruct Modify\n{\n    int x, y;\n} p[MaxM];\n\nstruct Operation\n{\n    int op, x, y, v, id;\n} op[MaxM];\n\nstruct Query\n{\n    int x, y, t, id;\n} q[MaxM], lq[MaxM], rq[MaxM];\n\nstd::vector<int> v[MaxM << 2];\nint cnt, ans[MaxM], Ans[MaxM]; pair st[MaxM];\nstd::unordered_map<int, int> tim[MaxN];\nint n, m, top, num, maxv, fa[MaxN], rk[MaxN];\n\nint getf(int x)\n{\n    if (x == fa[x])\n        return fa[x];\n    return getf(fa[x]);\n}\n\nvoid del(int cur)\n{\n    while (top > cur)\n    {\n        pair pre = st[top--];\n        fa[pre.first] = pre.first;\n        rk[pre.first] = pre.second;\n    }\n}\n\nvoid merge(int x, int y)\n{\n    x = getf(x), y = getf(y);\n    if (x == y) return;\n    if (rk[x] < rk[y]) std::swap(x, y);\n    fa[y] = x, st[++top] = mp(y, rk[y]);\n    if (rk[x] == rk[y])\n        st[++top] = mp(x, ++rk[x]);\n}\n\nvoid modify(int id, int l, int r, int ql, int qr, int pos)\n{\n    if (ql <= l && r <= qr)\n        return (void)v[id].push_back(pos);\n    int mid = (l + r) >> 1;\n    if (ql <= mid) modify(id << 1, l, mid, ql, qr, pos);\n    if (qr > mid) modify(id << 1 | 1, mid + 1, r, ql, qr, pos);\n}\n\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n        ch = getchar();\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return x;\n}\n\nvoid solve(int id, int l, int r, int st, int ed)\n{\n    if(st > ed) return; int cur = top;\n    for(int i = 0; i < v[id].size(); i++)\n        merge(p[v[id][i]].x, p[v[id][i]].y);\n    if(l == r)\n    {\n        for(int i = st; i <= ed; i++)\n            ans[q[i].id] = (getf(q[i].x) == getf(q[i].y));\n        return;\n    }\n    int mid = (l + r) >> 1, lt = 0, rt = 0;\n    for(int i = st; i <= ed; i++)\n        if(q[i].t <= mid) lq[++lt] = q[i];\n        else rq[++rt] = q[i];\n    for(int i = 1; i <= lt; i++) q[st + i - 1] = lq[i];\n    for(int i = 1; i <= rt; i++) q[st + i + lt - 1] = rq[i];\n    solve(id << 1, l, mid, st, st + lt - 1);\n    solve(id << 1 | 1, mid + 1, r, st + lt, ed), del(cur);\n}\n\nint main()\n{\n    n = read(), m = read(),  memset(Ans, -1, sizeof(Ans));\n    for(int i = 1; i <= m; i++)\n    {\n        op[i].op = read(), op[i].x = read() + 1, op[i].y = read() + 1, op[i].id = i;\n        if(op[i].op == 0) op[i].v = read(), maxv = std::max(maxv, op[i].v);\n        if(op[i].x > op[i].y) std::swap(op[i].x, op[i].y); \n    }\n    for(int V = 0; V <= maxv; V++)\n    {\n        for(int i = 1; i <= n; i++)\n            tim[i].clear(); cnt = num = top = 0;\n        for(int i = 1; i <= n; i++) fa[i] = i, rk[i] = 1;\n        for(int i = 1; i <= m * 4; i++) v[i].clear();\n        for(int i = 1; i <= m; i++)\n        {\n            int x = op[i].x, y = op[i].y;\n            if(op[i].op == 0 && op[i].v <= V) tim[x][y] = i;\n            else if (op[i].op == 1 && tim[x][y])\n            {\n                modify(1, 1, m, tim[x][y], i, ++cnt);\n                p[cnt] = (Modify) {x, y}, tim[x][y] = 0;\n            }\n            else if(op[i].op == 2) q[++num] = (Query) {x, y, i, num}; \n        }\n        for(int i = 1; i <= n; i++)\n            for(auto x : tim[i])\n                if(x.second)\n                {\n                    modify(1, 1, m, x.second, m, ++cnt);\n                    p[cnt] = (Modify) {i, x.first}; \n                }\n        solve(1, 1, m, 1, num);\n        for(int i = 1; i <= num; i++)\n        {\n            if(ans[i] && Ans[i] == -1)\n                Ans[i] = V;\n            ans[i] = 0;\n        }\n    }\n    for(int i = 1; i <= num; i++)\n        printf(\"%d\\n\", Ans[i]);\n    return 0;\n}\n```",
        "postTime": 1633601147,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7457 [CERC2018] The Bridge on the River Kawaii"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a $O(n\\log V \\log n)$ \u7684\u79bb\u7ebf\u505a\u6cd5\uff08 $V$ \u4e3a\u503c\u57df \uff09\uff0c\u81f3\u4e8e\u5f3a\u5236\u5728\u7ebf\u80fd\u505a\u5230\u4ec0\u4e48\u590d\u6742\u5ea6\u8fd8\u6709\u5f85\u5546\u91cf\u3002\n\n\u5bf9\u7ed9\u51fa\u7684\u56fe\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u8f6c\u5316\uff1a\u8fde\u63a5\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u8fb9\uff0c\u5e76\u5c06\u8fb9\u6743\u8bbe\u4e3a $Inf$\u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\n\n- $1.$ \u4fee\u6539\u8fb9\u6743\uff08\u5176\u4e2d\u5220\u8fb9\u89c6\u4e3a\u8d4b $Inf$\uff09\uff1b\n\n- $2.$ \u6700\u5c0f\u5316\u4e24\u70b9 $(x, y)$ \u4e4b\u95f4\u8def\u5f84\u6700\u5927\u503c\u3002\n\n\u5148\u6765\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u4e8c\u5206\u6700\u5927\u8def\u5f84\u957f\u5ea6 $val$\uff0c\u90a3\u4e48\u7b49\u4ef7\u4e8e\u53ea\u4fdd\u7559\u8fb9\u6743\u4e0d\u5927\u4e8e $val$ \u7684\u8fb9\u540e $(x, y)$ \u662f\u5426\u8054\u901a\u3002\n\n\u91cd\u65b0\u5ba1\u89c6\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\uff0c\u73b0\u5728\u6709\u591a\u6b21\u8be2\u95ee\uff0c\u8fb9\u6743\u53ef\u80fd\u53d1\u751f\u53d8\u5316\uff0c\u4e0d\u59a8\u57fa\u4e8e\u503c\u57df\u5206\u6cbb\u3002\n\n- \u5c06\u8be2\u95ee\u6302\u5230\u65f6\u95f4\u8f74\u4e0a\u7684\u5bf9\u5e94\u4f4d\u7f6e\uff1b\n\n- \u5047\u8bbe\u5f53\u524d\u7b54\u6848\u5019\u9009\u533a\u95f4\u4e3a $[l, r]$\uff0c\u6211\u4eec\u6309\u7167\u65f6\u95f4\u52a0\u5165\u6743\u503c\u5728 $[0, r]$ \u4e4b\u95f4\u7684\u8fb9\uff0c\u540c\u65f6\u5229\u7528\u5e76\u67e5\u96c6\u5bf9\u5e94\u65f6\u95f4\u4e0a\u7684\u8be2\u95ee\uff1b\n\n- \u6ce8\u610f\u5230\u6bcf\u6b21\u52a0\u5165 $[0, r]$ \u4e4b\u95f4\u7684\u8fb9\u65f6\u95f4\u590d\u6742\u5ea6\u96be\u4ee5\u63a5\u53d7\uff0c\u6211\u4eec\u6765\u89c2\u5bdf\u4e00\u4e0b\u54ea\u4e9b\u6b65\u9aa4\u65f6\u4e0d\u5fc5\u8981\u7684\uff0c\u53ef\u4ee5\u53d1\u73b0\u6743\u503c\u8f83\u5c0f\u7684\u8fb9\u4f1a\u88ab\u52a0\u5165\u5f88\u591a\u6b21\uff1b\n\n- \u57fa\u4e8e\u503c\u57df\u5206\u6cbb\u5e26\u6765\u4e86\u503c\u57df\u4e0a\u7684\u504f\u5e8f\u5173\u7cfb\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u8bbe $mid = \\frac{l + r}{2}$\uff0c\u5728\u52a0\u5165\u6743\u503c\u5728 $[0, mid]$ \u5185\u7684\u8fb9\u540e\uff0c\u76f4\u63a5\u5904\u7406 $[mid + 1, r]$\uff1b\n\n- \u7531\u4e8e\u5e76\u67e5\u96c6\u9700\u8981\u64a4\u9500\uff0c\u6240\u4ee5\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n\\log V \\log n)$ \u7684\u4f18\u79c0\u505a\u6cd5\u3002",
        "postTime": 1631713991,
        "uid": 145078,
        "name": "RainSong",
        "ccfLevel": 0,
        "title": "[CERC2018] The Bridge on the River Kawaii \u9898\u89e3"
    }
]