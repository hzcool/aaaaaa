[
    {
        "content": "\u8fd9\u6b21\u6539\u4e00\u4e0b\u9898\u89e3\u98ce\u683c\uff0c\u5148\u4e0d\u653eAC\u4ee3\u7801 ~~\uff08\u56e0\u4e3a\u5b9e\u5728\u662f\u592a\u957f\u4e86\uff09~~\n\n[\uff08\u54e6\u5bf9\u4e86\uff09](https://www.luogu.org/problemnew/show/P3627)\n\n\u5148\u653e\u4e0a\u7a0b\u5e8f\u201c\u7f29\u7565\u56fe\u201d\uff1a\n\n![\u201c\u5206\u5757\u201d\u5199\u7a0b\u5e8f\u2026\u2026](https://cdn.luogu.com.cn/upload/pic/60233.png)\n\n\u4f60\u770b\u8fd9\u4e2a\u6570\u7ec4\u4e2a\u6570\uff0c\u4f60\u770b\u8fd9\u4e2a\u8fc7\u7a0b\uff08void\uff09\u4e2a\u6570\uff0c ~~\uff08\u4f60\u770b\u8fd9\u4e2a\u597d\u770b\u7684\u9a6c\u8702\uff09~~ \u662f\u4e0d\u662f\u6709\u70b9\u5934\u5927\n\n\u4e0d\u6025\uff0c\u6211\u4eec\u5c31\u6309\u7167\u6211\u4ee3\u7801\u4e2d\u4e00\u90e8\u5206\u4e00\u90e8\u5206\u6765\u8bb2\u2014\u2014\n\n\u524d\u7f6e\u829d\u58eb\uff1a\n1. \u90bb\u63a5\u8868\u5b58\u50a8/\u904d\u5386\uff08\u5982\u679c\u4f60\u8fd9\u4e2a\u90fd\u4e0d\u4f1a\u7684\u8bdd\u505a\u8fd9\u79cd\u7efc\u5408\u5927\u9898\u6709\u70b9\u65e9\u2026\u2026\u5148\u597d\u597d\u5b66\u56fe\u8bba\u5427\uff09\n2. SPFA\u8dd1\u6700\u957f\u8def\uff08\u5176\u5b9e\u6539\u4e2a\u7b26\u53f7\u5c31\u597d\uff0c\u6ca1\u6709\u5fc5\u8981\u5efa\u8d1f\u6743\u8fb9\u8dd1\u6700\u77ed\u8def\uff09\n3. Tarjan\u7f29\u70b9\uff08\u4e0d\u4f1a\u7684\u540c\u5b66\u5148\u5b66\u597dTarjan\u518d\u6765\u505a\u8fd9\u9053\u9898\u54e6\uff0c[Tarjan\u7ec3\u4e60\u9898](https://www.luogu.org/problemnew/show/P2002)\uff09\n\nOK\uff0c\u73b0\u5728\u5047\u8bbe\u4e0a\u9762\u7684\u4e1c\u897f\u4f60\u90fd\u4f1a\uff0c\u90a3\u4e48\u6b63\u5f0f\u5f00\u59cb\u8bb2\u89e3\uff1a\n\n_\u518d\u8865\u5145\u4e00\u53e5\uff1a\u8fd9\u9053\u9898\u786e\u5b9e\u662f\u9053\u597d\u9898\uff0c\u6211\u7684\u9898\u89e3\u4f1a\u8bb2\u7684\u5f88\u8be6\u7ec6\uff0c\u5982\u679c\u4f60\u5f88\u60f3\u7406\u89e3\uff0c\u505a\u51fa\u8fd9\u9053\u9898\uff0c\u6700\u597d\u8010\u5fc3\u770b\u5b8c\u3002\u5982\u679c\u6ca1\u6709\u8010\u5fc3\uff0c\u5403\u4e8f\u7684\u53ef\u4e0d\u662f\u6211\u3002_\n\n## 1.\u90bb\u63a5\u8868\u5b58\u50a8\n\n\u8fd9\u91cc\u6211\u4eec\u7528\u4e24\u4e2a\u8fc7\u7a0b\u6765\u5b58\uff0c\u4e00\u4e2aadd\uff08\u5b58\u65e0\u8fb9\u6743\u7684\u56fe\uff09\uff0c\u4e00\u4e2abuild\uff08\u6709\u8fb9\u6743\uff09\n\n\u5148\u653e\u4e0a\u4ee3\u7801\uff0c\u7b49\u4f1a\u5c31\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u7528\u4e24\u4e2a\u4e86\n\n```\n void add(int u,int v)\n {\n \tcnt++;\n \te[cnt].to=v;\n \te[cnt].next=hd[u];\n \thd[u]=cnt;\n }\n```\n```\n void build(int u,int v,int w)\n {\n \tcnt++;\n \te[cnt].to=v;\n \te[cnt].val=w;\n \te[cnt].next=hd[u];\n \thd[u]=cnt;\n }\n```\n## 2.\u8f93\u5165\u90e8\u5206\n\n\u8fd9\u9053\u9898\u7684\u8f93\u5165\u6570\u636e\u8fd8\u662f\u6bd4\u8f83\u9ebb\u70e6\u7684\n\n\u9996\u5148\u7528\u6570\u7ec4\u5b58\u4e00\u4e0b\u6bcf\u6761\u8fb9\u7684\u8d77\u70b9\u7ec8\u70b9\n\n\u7b49\u7b49\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528\u6570\u7ec4\u5b58\u5462\uff0c\u76f4\u63a5\u8f93\u5165\u4e0d\u884c\u5417\n\n\u81ea\u5df1\u5148\u60f3\u4e00\u4e0b\uff0c\u867d\u7136\u6211\u4e00\u5f00\u59cb\u4e5f\u6ca1\u60f3\u5230\n\n```latex\n\u8fd9\u5012\u8ddf\u5efa\u8fb9\u6ca1\u4ec0\u4e48\u5173\u7cfb\n\u6211\u4eec\u8fd9\u4e48\u505a\u4e3b\u8981\u662f\u4e3a\u4e86\u540e\u9762\u670d\u52a1\u7684\n\u56e0\u4e3a\u540e\u9762\u6211\u4eec\u8981\u7528Tarjan\u7f29\u70b9\uff0c\u7f29\u5b8c\u70b9\u4ee5\u540e\u6709\u53ef\u80fd\u4f60\u4e00\u5f00\u59cb\u8f93\u5165\u7684\u90a3\u7ec4\u8fb9\u201c\u5c31\u662f\u4e00\u4e2a\u70b9\u4e86\u201d\n\u4e0d\u7528\u6570\u7ec4\u5b58\u4e00\u4e0b\u7684\u8bdd\u65e0\u6cd5\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c\u4e86\n\u5982\u679c\u4e0d\u7406\u89e3\u7684\u8bdd\u5c31\u5148\u6401\u7740\uff0c\u540e\u5934\u4e3b\u51fd\u6570\u548cTarjan\u4e2d\u4f1a\u8be6\u7ec6\u8bb2\u89e3\n```\n\u7136\u540e\u518d\u8f93\u5165s\uff0cp\n\n\u518d\u8f93\u5165\u6bcf\u4e2a\u9152\u5427\uff0c\u8fd9\u4e2a\u662f\u4e3a\u4e86\u6700\u540e\u904d\u5386\u4e00\u904ddis[\u9152\u5427]\u6240\u670d\u52a1\u7684\u3002\n\n\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5728main\u4e2d\u8f93\u5165\uff0c\u7701\u6389\u4e00\u4e2a\u5b58\u9152\u5427\u4f4d\u7f6e\u7684\u6570\u7ec4\n\n\u7b49\u4f1a\u8be6\u7ec6\u8bf4\n\n\u4ee3\u7801\u5c31\u957f\u8fd9\u6837\uff1a\n\n```cpp\n void readln()\n {\n \tclear();\n \tscanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&u[i],&v[i]);\n        add(u[i],v[i]);\n    }\n    for(int i=1;i<=n;i++) scanf(\"%d\",&w[i]);\n    scanf(\"%d%d\",&s,&p);\n    for(int i=1;i<=p;i++) scanf(\"%d\",&bar[i]);\n }\n```\nu,v,w\u8868\u793a\u8fb9\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u70b9\u6743\u7684\u6570\u7ec4\nbar\u662f\u9152\u5427\u7684\u82f1\u6587\uff0c\u8868\u793a\u9152\u5427\u4f4d\u7f6e\n\n\u773c\u5c16\u7684\u540c\u5b66\u8fd9\u65f6\u5019\u8981\u95ee\u4e86\uff1aclear\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\n\n\u653e\u5fc3\u8fd9\u6b21\u6ca1 ~~\u5f00\u6302~~ \u4f7f\u7528stl\uff0c\u8fd9\u662f\u6211\u624b\u5199\u7684\u4e00\u4e2a\u6e05\u7a7a\u6570\u7ec4\u7684\u51fd\u6570\n\n\u957f\u8fd9\u6837\uff1a\n\n```cpp\n void clear()\n {\n \tcnt=0;\n \tmemset(e,0,sizeof(e));\n \tmemset(hd,0,sizeof(hd));\n }\n```\n\u5bf9\u90bb\u63a5\u8868\u5f88\u719f\u6089\u7684\u540c\u5b66\u4e00\u770b\u5c31\u61c2\uff1a\u8fd9\u662f\u6e05\u7a7a\u90bb\u63a5\u8868\u7684\u64cd\u4f5c\u554a\uff08cnt\u5f52\u96f6\uff0chd\u6e05\u96f6\uff0c\u8fb9\u8868\u4e5f\u6e05\u96f6\uff09\n\n\u8fd9\u91cc\u6559\u5927\u5bb6\u4e00\u79cdmemset\u7684\u7528\u6cd5\uff08\u6211\u4e5f\u662f\u4ece\u697c\u4e0b\u5927\u4f6c\u4e2d\u627e\u7684\uff09\n\nmemset(\u7ed3\u6784\u4f53\u540d\u5b57\uff0c\u503c\uff0csizeof(\u7ed3\u6784\u4f53\u540d\u5b57))\n\n\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u6e05\u7a7a\uff08\u8d4b\u503c\uff09\u4e00\u4e2a\u7ed3\u6784\u4f53\u54e6\n\n\u524d\u63d0\u662f\u4f60\u7ed3\u6784\u4f53\u4e2d\u7684\u7c7b\u578b\u8981\u7edf\u4e00\uff0c\u6bd4\u5982\u8bf4\u90fd\u662fint\n\n## 3.Tarjan\u7f29\u70b9\n\n```\nvoid Tarjan(int x)\n {\n \tdfn[x]=low[x]=++total;\n \tstk[++top]=x;vis[x]=true;\n \tfor(int i=hd[x];i;i=e[i].next)\n \t{\n \t\tint t=e[i].to;\n \t\tif(!dfn[t])\n \t\t{\n \t\t\tTarjan(t);\n \t\t\tlow[x]=min(low[x],low[t]);\n \t\t}\n \t\telse if(vis[t])\n \t\t low[x]=min(low[x],dfn[t]);\n \t}\n \tif(dfn[x]==low[x])\n \t{\n \t\ttot++;\n \t\tdo{\n \t\t\tint tp=stk[top];\n \t\t\tsum[tot]+=w[tp];\n \t\t\tvis[tp]=false;\n \t\t\tg[tp]=tot;\n \t\t}while(stk[top--]!=x);\n \t}\n }\n```\n\u57fa\u672c\u5c31\u662f\u6807\u51c6Tarjan\uff0c\u6211\u8bb2\u4e0b\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5427\uff1a\n\n```latex\ntot++;\ndo{\n int tp=stk[top];\n sum[tot]+=w[tp];\n vis[tp]=false;\n g[tp]=tot;\n}while(stk[top--]!=x);\n```\n```latex\n\u8fd9\u91cc\u6211\u662f\u7528\u7684\u6570\u7ec4\u6a21\u62df\u6808\uff0c\u9996\u5148int tp=stk[top]\u53d6\u51fa\u6808\u9876\n\nsum\u8868\u793a\u7f29\u5b8c\u70b9\u540e\u8fd9\u4e2a\u70b9\u7684\u70b9\u6743\n\u4e0d\u662f\u5f88\u61c2Tarjan\u7684\u597d\u597d\u7406\u89e3\u4e0bTarjan\u5f39\u6808\u7684\u90e8\u5206\u518d\u770b\u8fd9\u91cc\u5c31\u61c2\u4e86\n\u61c2Tarjan\u7684\u6a21\u62df\u4e00\u4e0b\u5e94\u8be5\u5c31\u61c2\u4e86\uff0c\u6bcf\u6b21\u5f39\u6808\u65f6\uff0c\u6240\u6709\u88ab\u5f39\u51fa\u7684\u70b9\u90fd\u662f\u7f29\u5b8c\u70b9\u540e\u7684\u4e00\u4e2a\u70b9\n\u5373sum[tot]+=w[tp]\uff0c\u7f29\u5b8c\u70b9\u540e\u7684\u70b9\u6743+=\u539f\u70b9\u6743\n\u5f88\u597d\u7406\u89e3\u5427\n\u4e0d\u61c2\u7684\u8bf4\u660e\u4f60\u5bf9Tarjan\u8fd8\u662f\u7406\u89e3\u4e0d\u5230\u4f4d\u2026\u2026\u8fd9\u7bc7\u9898\u89e3\u4e0d\u662f\u8bb2Tarjan\u7684\uff0c\u697c\u4e0b\u5927\u4f6c\u5e94\u8be5\u6709\u8be6\u7ec6\u8bb2\u89e3\u3002\n\n\u7136\u540evis[tp]=false\u8868\u793atp\u5df2\u7ecf\u51fa\u6808\n\ng\u8868\u793a\u7f29\u5b8c\u70b9\u540e\u6bcf\u4e2a\u70b9\u5728\u54ea\u4e2a\u70b9\u4e2d\n\u5373g[tp]=tot\uff0ctp\u8fd9\u4e2a\u70b9\u5728\u7f29\u5b8c\u70b9\u540e\u7684\u7b2ctot\u4e2a\u70b9\u91cc\n\u7136\u540e\u7528\u6808\u9876\u548cx\u6bd4\u8f83\uff0c\u6807\u51c6Tarjan\u64cd\u4f5c\n\nstk[top--]\u5c31\u76f8\u5f53\u4e8epop\u5f39\u6808\u4e86\n```\n\u5927\u5bb6\u5e94\u8be5\u90fd\u770b\u61c2\u4e86\u5427\n\n\u90a3\u73b0\u5728\u6211\u4eec\u5c31\u5df2\u7ecf\u7f29\u597d\u70b9\u4e86\uff0cg\u5df2\u7ecf\u8bb0\u5f55\u597d\u4e86\uff0csum\u4e5f\u8bb0\u5f55\u597d\u6bcf\u4e2a\u65b0\u70b9\u7684\u70b9\u6743\u4e86\n\n## 5.\u5148\u6765\u770b\u4e0b\u4e3b\u51fd\u6570\n\n```\nint main()\n{\n    readln();\n    for(int i=1;i<=n;i++)\n     if(!dfn[i]) Tarjan(i);\n    clear();\n    for(int i=1;i<=m;i++)\n     if(g[u[i]]!=g[v[i]])\n      build(g[u[i]],g[v[i]],sum[g[v[i]]]);\n    Spfa(s);\n    for(int i=1;i<=p;i++)\n     ans=max(ans,dis[g[bar[i]]]);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u9996\u5148readln\u8f93\u5165\uff0c\u5c31\u662f\u7b2c\u4e8c\u90e8\u5206\uff08P\u515a\u8f6c\u6765\u7684\u6211\u559c\u6b22\u7528readln\u563f\u563f\uff09\n\n\u7136\u540e\u6807\u51c6Tarjan\uff0cif(!dfn[i]) Tarjan(i);\n\n_---(\u8fd9\u91cc\u4e5f\u662f\u542c\u522b\u7684\u5927\u4f6c\u8bf4\u7684\uff0cTarjan\u9996\u5b57\u6bcd\u6700\u597d\u5927\u5199\uff0c\u907f\u514d\u4e00\u4e9b\u795e\u5947\u7684\u9519\u8bef)_\n\n\u8fd9\u65f6\u5019clear\u5c31\u6709\u7528\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u4e4b\u524dadd\u5efa\u7684\u56fe\u662f\u4e3a\u4e86Tarjan\u7f29\u70b9\u7528\u7684\uff0c\u73b0\u5728\u7f29\u597d\u70b9\u4e86\u90a3\u5f20\u56fe\u5c31\u6ca1\u7528\u4e86\uff01\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u65b0\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u53cd\u800c\u6d6a\u8d39\u5f88\u591a\u5185\u5b58\uff0c\u628a\u521a\u521a\u7684\u56feclear\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u7136\u540e\u6211\u4eec\u904d\u5386\u6bcf\u4e00\u6761\u8f93\u5165\u7684\u8fb9\uff0c\u8fd9\u4e2a\u65f6\u5019\u4e4b\u524d\u7684u,v\u6570\u7ec4\u5c31\u6709\u7528\u4e86\uff01\u6211\u4eec\u901a\u8fc7\u5224\u65adu[i],v[i]\u662f\u5426\u5728\u4e00\u4e2a\u65b0\u70b9\u91cc\uff0c\u5982\u679c\u4e0d\u5728\u7684\u8bdd\u5c31build\u4e00\u6761\u65b0\u8fb9\uff0c\u8fd9\u6837\u5c31\u80fd\u5efa\u4e00\u4e2a\u7f29\u5b8c\u70b9\u540e\u7684\u56fe\n\n\u6ce8\u610fbuild\uff1a\u8d77\u70b9\u662fu[i]\u6240\u5728\u7684\u7f29\u70b9\uff0c\u7ec8\u70b9\u662fv[i]\u6240\u5728\u7684\u7f29\u70b9\uff08\u5982\u679cu[i]\u548cv[i]\u5728\u4e00\u4e2a\u7f29\u70b9\u91cc\u5c31\u4e0d\u4f1a\u6267\u884cbuild\u4e86\uff09\uff0c\u8fb9\u6743\u662fv[i]\u6240\u5728\u7f29\u70b9\u7684\u70b9\u6743\uff08sum\uff09\uff01\uff01\uff01\n\n\u8fd9\u6837\uff0c\u8fd9\u5f20\u65b0\u56fe\u5c31\u8868\u660e\uff1a\u4eceU\u8d70\u5230V\u53ef\u4ee5\u62a2\u52abW\u7684\u94b1\uff0c\u94b1\u6570\u5f53\u7136\u662f\u7f29\u70b9\u70b9\u6743\u554a\n\n\u6ca1\u95ee\u9898\n\n\u5427\uff1f\n\n\u6709\u70b9\u95ee\u9898\u7684\u54e6\uff1a\u76f8\u4fe1\u4e0d\u5c11\u540c\u5b66\u4e5f\u770b\u51fa\u6765\u4e86\u2014\u2014\u90a3\u4f60\u8fd9\u6837\u6bcf\u6b21\u628a\u8fb9\u6743\u8bbe\u7f6e\u4e3a\u540e\u5934\u90a3\u4e2a\u7f29\u70b9\u7684\u70b9\u6743\uff0c\u524d\u5934\u90a3\u4e2a\u70b9\u88ab\u51b7\u843d\u4e86\uff0c\u70b9\u6743\u4e0d\u5c31\u6ca1\u7528\u4e86\u5417\uff1f\n\n\u80fd\u60f3\u5230\u8fd9\uff0c\u606d\u559c\u4f60\u4f60\u7406\u89e3\u8fd9\u9053\u9898\u4e86\n\n\u4e0d\u8fc7\u8fd9\u4e2a\u95ee\u9898\u786e\u5b9e\u5b58\u5728\uff0c\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4e5f\u5f88\u7b80\u5355\u7c97\u66b4\n\n###### \u76f4\n##### \u63a5\n#### \u6765\n### \u770b\n\n## 6.Spfa\u8dd1\u6700\u957f\u8def\n\n\u6b63\u5982\u4e00\u5f00\u59cb\u6240\u8bf4\uff0c\u6211\u5c31\u662f\u6539\u4e86\u4e2a\u7b26\u53f7\uff0c\u6ca1\u6709\u5efa\u8d1f\u8fb9\u6743\u8dd1\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u8fd9\u4e00\u90e8\u5206\u4e5f\u662f\u975e\u5e38\u597d\u7406\u89e3\u7684\u5566\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\u54af\uff0cspfa\u677f\u5b50\n\n```\n void Spfa(int s)\n {\n \tfor(int i=1;i<=tot;i++) dis[i]=0;\n \tint gs=g[s];\n    q.push(gs);\n \tvis[gs]=true;\n \tdis[gs]=sum[gs];\n \twhile(!q.empty())\n \t{\n \t\tint h=q.front();q.pop();\n \t\tvis[h]=false;\n \t\tfor(int i=hd[h];i;i=e[i].next)\n \t\t{\n \t\t\tint t=e[i].to;\n \t\t\tif(dis[t]<dis[h]+e[i].val)\u6700\u77ed\u8def\u4e2d\u8fd9\u91cc\u662f>\u53f7\uff0c\u6539\u6210<\u53f7\u5c31\u662f\u6700\u957f\u8def\u54af\n \t\t\t{\n \t\t\t\tdis[t]=dis[h]+e[i].val;\n \t\t\t\tif(!vis[t])\n \t\t\t\t{\n \t\t\t\t\tq.push(t);\n \t\t\t\t\tvis[t]=true;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t}\n }\n \u4e00\u770b\u8fd9\u4e2a\u9b3c\u755c\u7684\u5927\u62ec\u53f7\u5c31\u662fspfa hhhhhhhh\n```\n\n\u6211\u4eec\u6765\u89e3\u51b3\u521a\u521a\u7684\u95ee\u9898\uff0c\u8d77\u70b9\u7684\u70b9\u6743\u600e\u4e48\u529e\n\n\u4f60\u4f1a\u53d1\u73b0\uff0cspfa\u53c8\u4e0d\u5b8c\u5168\u662f\u677f\u5b50\uff0c\u6211\u6539\u4e86\u51e0\u4e2a\u5730\u65b9\uff1a\n\n```\nint gs=g[s];\nq.push(gs);\nvis[gs]=true;\ndis[gs]=sum[gs];\n```\n\u8d77\u70b9\u4e0d\u662fs\u4e86\uff0c\u800c\u662fg[s]\uff0cdis[\u8d77\u70b9]\u4e5f\u4e0d\u662f0\u4e86\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u4f60\u5148\u60f3\u4e00\u4e0b\n\n\u2014\u2014\n\n\u2014\u2014\n\n\u2014\u2014\n\n\u60f3\u4e0d\u51fa\u6765\uff1f\u7f29\u70b9\u662f\u5e72\u5565\u7528\u7684\u6765\u7740\uff1f\n\n\u2014\u2014\n\n\u2014\u2014\n\n\u2014\u2014\n\n\u60f3\u51fa\u6765\u4e86\u5427\uff1a\n\n\u6211\u4eec\u521a\u521abuild\u5efa\u7684\u56fe\u662f\u4e00\u5f20\u7f29\u5b8c\u70b9\u540e\u7684\u7f29\u70b9\u56fe\uff0c\u6240\u4ee5\u6211\u4eecpush\u8d77\u70b9\u7684\u65f6\u5019\u5f53\u7136\u662fpush\u7f29\u5b8c\u70b9\u540es\u6240\u5728\u7684\u70b9\u554a\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u4e07\u4e00s\u672c\u8eab\u5c31\u5728\u4e00\u4e2a\u73af\u91cc\uff0cpush\uff08s)\u7684\u8bdd\u95ee\u9898\u5c31\u5927\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u628a\u8d77\u70b9\u4e00\u5f8b\u6539\u6210g[s]\u6765\u64cd\u4f5c\n\n\u5e76\u4e14\uff0c\u6211\u4eec\u628a\u8d77\u70b9\u7684dis\u503c\u76f4\u63a5\u52a0\u4e0a\u70b9\u6743\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6f0f\u6389\u8d77\u70b9\u70b9\u6743\u4e86\n\n\u800c\u4e14\u653e\u5fc3\uff0c\u4e00\u5f00\u59cb\u66f4\u6539dis\u503c\u4e0d\u4f1a\u5bf9\u540e\u7eed\u677e\u5f1b\u64cd\u4f5c\u9020\u6210\u65e0\u6cd5\u66f4\u6539\u7684\u5f71\u54cd\uff0c\u6bd5\u7adf\u8fd9\u662f\u6700\u957f\u8def\n\n\u7136\u540e\n\n\u7136\u540e\n\n\u8fd9\u9053\u9898\u5c31\u6ca1\u4ec0\u4e48\u53ef\u8bb2\u7684\u4e86\u5427\n\n\u6700\u540e\u518d\u5904\u7406\u5b8c\u4e3b\u51fd\u6570\u4e2d\u8fd9\u4e00\u90e8\u5206\uff1a\n\n```\nfor(int i=1;i<=p;i++)\n ans=max(ans,dis[g[bar[i]]]);\nprintf(\"%d\",ans);\nreturn 0;\n```\n\n\u6700\u540e\u8fd8\u662f\u653e\u4e0a\u5b8c\u6574AC\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#define N 500005\nusing namespace std;\nstruct edge{\n    int to,val,next;\n} e[N];\nint m,n,p,s,cnt,g[N],u[N],v[N],w[N],hd[N],bar[N],dis[N],dfn[N],low[N],stk[N],sum[N];\nbool vis[N];\nqueue <int> q;\nint ans=0,top=0,tot=0,total=0;\n inline int min(int a,int b)\n  {return a<b?a:b;}\n void add(int u,int v)\n {\n \tcnt++;\n \te[cnt].to=v;\n \te[cnt].next=hd[u];\n \thd[u]=cnt;\n }\n void build(int u,int v,int w)\n {\n \tcnt++;\n \te[cnt].to=v;\n \te[cnt].val=w;\n \te[cnt].next=hd[u];\n \thd[u]=cnt;\n }\n void clear()\n {\n \tcnt=0;\n \tmemset(e,0,sizeof(e));\n \tmemset(hd,0,sizeof(hd));\n }\n void readln()\n {\n \tclear();\n \tscanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&u[i],&v[i]);\n        add(u[i],v[i]);\n    }\n    for(int i=1;i<=n;i++) scanf(\"%d\",&w[i]);\n    scanf(\"%d%d\",&s,&p);\n    for(int i=1;i<=p;i++) scanf(\"%d\",&bar[i]);\n }\n void Tarjan(int x)\n {\n \tdfn[x]=low[x]=++total;\n \tstk[++top]=x;vis[x]=true;\n \tfor(int i=hd[x];i;i=e[i].next)\n \t{\n \t\tint t=e[i].to;\n \t\tif(!dfn[t])\n \t\t{\n \t\t\tTarjan(t);\n \t\t\tlow[x]=min(low[x],low[t]);\n \t\t}\n \t\telse if(vis[t])\n \t\t low[x]=min(low[x],dfn[t]);\n \t}\n \tif(dfn[x]==low[x])\n \t{\n \t\ttot++;\n \t\tdo{\n \t\t\tint tp=stk[top];\n \t\t\tsum[tot]+=w[tp];\n \t\t\tvis[tp]=false;\n \t\t\tg[tp]=tot;\n \t\t}while(stk[top--]!=x);\n \t}\n }\n void Spfa(int s)\n {\n \tfor(int i=1;i<=tot;i++) dis[i]=0;\n \tint gs=g[s];\n    q.push(gs);\n \tvis[gs]=true;\n \tdis[gs]=sum[gs];\n \twhile(!q.empty())\n \t{\n \t\tint h=q.front();q.pop();\n \t\tvis[h]=false;\n \t\tfor(int i=hd[h];i;i=e[i].next)\n \t\t{\n \t\t\tint t=e[i].to;\n \t\t\tif(dis[t]<dis[h]+e[i].val)\n \t\t\t{\n \t\t\t\tdis[t]=dis[h]+e[i].val;\n \t\t\t\tif(!vis[t])\n \t\t\t\t{\n \t\t\t\t\tq.push(t);\n \t\t\t\t\tvis[t]=true;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t}\n }\nint main()\n{\n    readln();\n    for(int i=1;i<=n;i++)\n     if(!dfn[i]) Tarjan(i);\n    clear();\n    for(int i=1;i<=m;i++)\n     if(g[u[i]]!=g[v[i]])\n      build(g[u[i]],g[v[i]],sum[g[v[i]]]);\n    Spfa(s);\n    for(int i=1;i<=p;i++)\n     ans=max(ans,dis[g[bar[i]]]);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1559824524,
        "uid": 183448,
        "name": "Lucaster_",
        "ccfLevel": 0,
        "title": "\u672c\u9898\u6838\u5fc3\uff1aTarjan\u548c\u6700\u957f\u8def"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u770b\u89c1\u53ef\u4ee5\u91cd\u590d\u8d70\u8def\u5f84\uff0c\u90a3\u4e48\u5c31\u60f3\u5230\u5176\u5b9e\u8fd9\u4e9b\u8def\u53e3\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u56e0\u4e3a\u53ea\u8981\u6211\u4eec\u80fd\u5230\u8fbe\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5176\u4e2d\u67d0\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u5230\u8fbe\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5176\u4f59\u6240\u6709\u70b9\u5e76\u4e14\u4fdd\u8bc1\u66f4\u4f18\uff09\u3002\u90a3\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u7f29\u70b9\u52a0\u6700\u957f\u8def\uff0c\u81f3\u4e8e\u6700\u957f\u8def\uff0c\u6211\u662f\u628a\u70b9\u6743\u8f6c\u79fb\u5230\u8fb9\u6743\uff0c\u7136\u540e\u628a\u8fb9\u6743\u7f6e\u4e3a\u8d1f\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u8dd1\u6700\u77ed\u8def\u5566\n\n\u81f3\u4e8e\u5982\u4f55\u7528tarjan\u6c42\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u5c31\u53ef\u4ee5\u6765\u770b\u6211\u7684\u535a\u5ba2\u5566(https://www.luogu.org/blog/sincereactor/)\n\n\n```\n#include<iostream>\n#include<stdio.h>\n#include<cstring>\nusing namespace std;\nstruct ss{\n\tint next,to,val;\n};ss data[500010];\nint head[200010],qe[500010],used[500010],dis[500010],color[500010],sum[500010];\nint n,m,p,q,timeclock,ans,tot,top,S,s,t,P,jiu;\nint x[500010],y[500010],dfn[500010],low[500010],instack[500010],stack[500010],money[500010];\nvoid add(int a,int b)//\u5efa\u4e2a\u56fe\u8dd1tarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\n{\n\tdata[++p].to=b;\n\tdata[p].next=head[a];\n\thead[a]=p;\n}\nvoid Add(int a,int b,int c)//\u518d\u5efa\u4e2a\u56fe\u8dd1spfa\u6c42\u6700\u957f\u8def\n{\n\tdata[++p].to=b;\n\tdata[p].next=head[a];\n\tdata[p].val=c;\n\thead[a]=p;\n}\nvoid tarjan(int a)//\u6807\u51c6tarjan\n{\n\tdfn[a]=low[a]=++timeclock;\n\tinstack[a]=1;\n\tstack[++top]=a;\n\tfor(int i=head[a];i;i=data[i].next)\n\t{\n\t\tint v=data[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[a]=min(low[a],low[v]);\n\t\t}\n\t\telse\n\t\tif(instack[v])\n\t\tlow[a]=min(low[a],dfn[v]);\n\t}\n\tif(dfn[a]==low[a])\n\t{\n\t\ttot++;\n\t\twhile(stack[top+1]!=a)\n\t\t{\n\t\t\tcolor[stack[top]]=tot;\n\t\t\tsum[tot]+=money[stack[top]];\n\t\t\tinstack[stack[top--]]=0;\n\t\t}\n\t}\n}\nvoid spfa()//\u6807\u51c6spfa\n{\n\tfor(int i=1;i<=tot;i++)\n\tdis[i]=0x7fffffff;\n\tint ts=color[S];\n\tdis[ts]=-sum[ts];\n\tqe[0]=ts;p=q=0;\n\twhile(p<=q)\n\t{\n\t\ts=qe[p%n];\n\t\tused[s]=0;\n\t\tt=head[s];\n\t\twhile(t)\n\t\t{\n\t\t\tif(dis[s]+data[t].val<dis[data[t].to])\n\t\t\t{\n\t\t\t\tdis[data[t].to]=dis[s]+data[t].val;\n\t\t\t\tif(!used[data[t].to])\n\t\t\t\t{\n\t\t\t\t\tqe[++q%n]=data[t].to;\n\t\t\t\t\tused[data[t].to]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tt=data[t].next;\n\t\t}\n\t\tp++;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t    scanf(\"%d%d\",&x[i],&y[i]);\n\t    add(x[i],y[i]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d\",&money[i]);\n\tfor(int i=1;i<=n;i++)\n\tif(!dfn[i])\n\t{\n\t   tarjan(i);\n    }\n\tmemset(data,0,sizeof(data));\n\tmemset(head,0,sizeof(head));\n\tp=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(color[x[i]]!=color[y[i]])\n\t\tAdd(color[x[i]],color[y[i]],-(sum[color[y[i]]]));\n\t}\n\tscanf(\"%d\",&S);\n\tspfa();\n\tscanf(\"%d\",&P);\n\tfor(int i=1;i<=P;i++)//\u628a\u6240\u6709\u9152\u5427\u770b\u4e00\u904d\uff0c\u6c42\u4e2a\u6700\u5927\n\t{\n\t\tscanf(\"%d\",&jiu);\n\t\tif(-dis[color[jiu]]>ans)\n\t\tans=-dis[color[jiu]];\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1523502671,
        "uid": 63035,
        "name": "Danny_boodman",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u4f20\u9001\u95e8](https://www.cnblogs.com/LLTYYC/p/9712088.html)\n## \u7b97\u6cd5\uff1aTarjan & DP\n### \u7f29\u5b8c\u70b9\u540e\u7adf\u7136\u6ca1\u9898\u89e3\u641eDP\uff1f\uff1f\uff1f\n#### \u663e\u7136\u7f29\u70b9\u540e\u7684\u56fe\u662f\u4e00\u4e2aDAG\n#### DAG\u4e0a\u641eDP\u662f\u57fa\u672c\u64cd\u4f5c\u554a\n\u6309\u62d3\u6251\u5e8f\u641e\u4e00\u6ce2DP\u5c31\u597d\u4e86\n\n\u8bbe f[ i ] \u8868\u793a\u4ece\u8d77\u70b9\u62a2\u52ab\u5230 DAG \u4e0a\u7684\u70b9 i \u65f6\u80fd\u5f97\u5230\u7684\u6700\u591a\u7684\u94b1\n\n\u90a3\u4e48 f[ i ] = max( f [ i ] , f[ j ] + sval[ i ]) \uff08 j \u6709\u4e00\u6761\u8fb9\u6307\u5411 i , sval[ i ] \u8868\u793aDAG\u4e0a\u70b9 i \u7684\u94b1\u6570\uff09\n\n\u81f3\u4e8e Tarjan \u7684\u5177\u4f53\u64cd\u4f5c\u5176\u4ed6\u9898\u89e3\u8bb2\u7684\u5f88\u8be6\u7ec6\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\n\n\u6d4b\u4e86\u4e00\u6ce2\uff0c\u81ea\u5df1\u7684DP\u6bd4SPFA\u5feb\u4e2a100ms\uff08\u90fd\u5f00\u4e86O2\uff09\n\n#### \u4e00\u4e9b\u4e0e\u672c\u9898\u65e0\u5173\u7684\u8bdd\uff1a\n\n\u5176\u5b9e\u771f\u6b63\u610f\u4e49\u7684\u7f29\u70b9\u8fd8\u8981\u628a\u91cd\u590d\u7684\u8fb9\u7ed9\u53bb\u6389\uff08\u7f29\u70b9\u540e\u53ef\u80fd\u4e24\u4e2a\u5757\u4e4b\u95f4\u6709\u591a\u6761\u8fb9\uff09\n\n\u53ef\u4ee5\u628a\u8fb9\u7ed9\u79bb\u6563\u5316\uff0c\u7136\u540e\u53bb\u91cd\n\n\u5177\u4f53\u64cd\u4f5c\uff1a\n\n\n------------\n\n```cpp\nstruct edge\n{\n    int a,b;\n}e[N];//\u5b58\u8fb9\nint cnt3,du[N];//cnt\u5b58\u603b\u8fb9\u6570\uff0cdu\u5b58\u5165\u5ea6\nint firr[N],fromm[N],too[N],cntt;//\u94fe\u5f0f\u524d\u5411\u661f\u5b58DAG\ninline void add2(int &a,int &b)//\u7ed9DAG\u8fde\u8fb9\n{\n    fromm[++cntt]=firr[a];\n    firr[a]=cntt; too[cntt]=b;\n}\ninline bool cmp(const edge &x,const edge &y) { return x.a==y.a ? x.a<y.a : x.b<y.b; }//\u6392\u5e8f\u51fd\u6570\uff0c\u628a\u8fb9\u6309 a,b \u53cc\u5173\u952e\u5b57\u6392\u5e8f\nvoid build()//\u6784\u9020\u7f29\u70b9\u540e\u7684\u56fe\n{\n    for(int i=1;i<=n;i++)\n    {\n        if(!be[i]) continue;//\u56e0\u4e3a\u6211\u7684\u4e3b\u51fd\u6570\u53ea\u7f29\u4e86\u4ece\u8d77\u70b9\u80fd\u5230\u7684\u70b9\uff0c\u6240\u4ee5\u8981\u5224\u65ad\u4e00\u6ce2\n        //\u8fd9\u91ccbe\u5b58\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8054\u901a\u5757\n        for(int j=fir[i];j;j=from[j])//\u904d\u5386\u539f\u56fe\u7684\u8fb9\n        {\n        \tif(be[i]==be[to[j]) continue;//\u540c\u4e00\u4e2a\u5757\u7684\u8fb9\u4e0d\u8981\u8fde\n            e[++cnt3].a=be[i],e[cnt3].b=be[to[j]];//\u628a\u8fb9\u5148\u7edf\u4e00\u5b58\u5230e\u91cc\u9762\n        }\n    }\n    sort(e+1,e+cnt3+1,cmp);//\u6392\u5e8f\n    for(int i=1;i<=cnt3;i++)\n        if(e[i].b!=e[i-1].b||e[i].a!=e[i-1].a)//\u56e0\u4e3a\u6392\u597d\u5e8f\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fd9\u6837\u5224\u65ad\u91cd\u590d\u7684\u8fb9\n        \tadd2(e[i].a,e[i].b),du[e[i].b]++;//\u5982\u679c\u6ca1\u91cd\u590d\u5c31\u52a0\u5165DAG\n}\n```\n\n\n------------\n\n\u4f46\u662f\u5bf9\u4e8e\u672c\u9898\u6839\u672c\u4e0d\u9700\u8981\u53bb\u9664\u91cd\u590d\u8fb9\n\n\u8981\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662fsort\u591a\u4e00\u4e2alog,\u53cd\u800c\u66f4\u6162...\n\n\u5e9f\u8bdd\u7ed3\u675f\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<queue>\nusing namespace std;\ninline int read()\n{\n    int x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\nconst int N=5e5+7;\nint n,m,k,sta;\nint val[N];\nint fir[N],from[N],to[N],cnt;\ninline void add(int &a,int &b)//\u7ed9\u539f\u56fe\u8fde\u8fb9\n{\n    from[++cnt]=fir[a];\n    fir[a]=cnt; to[cnt]=b;\n}\n\n//\u51e0\u4e4e\u5c31\u662fTarjan\u7684\u6a21\u677f\nint dfn[N],low[N],be[N],sval[N],st[N],cnt2,dfs_clock,_top;\nbool bar[N],Bar[N];//bar\u8868\u793a\u539f\u56fe\u7684\u9152\u5427,Bar\u8868\u793aDAG\u4e0a\u7684\u9152\u5427\nvoid Tarjan(int x)\n{\n    dfn[x]=low[x]=++dfs_clock; st[++_top]=x;\n    for(int i=fir[x];i;i=from[i])\n    {\n        int &v=to[i];\n        if(!dfn[v]) Tarjan(v),low[x]=min(low[x],low[v]);\n        else if(!be[v]) low[x]=min(low[x],dfn[v]);\n    }\n    if(dfn[x]==low[x])\n    {\n        cnt2++;\n        while(st[_top]!=x)\n        {\n            if(bar[st[_top]]) Bar[cnt2]=1;\n            sval[cnt2]+=val[st[_top]];\n            be[st[_top--]]=cnt2;\n        }\n        if(bar[st[_top]]) Bar[cnt2]=1;\n        sval[cnt2]+=val[st[_top]];\n        be[st[_top--]]=cnt2;\n    }\n}\n\nint du[N];//\u5b58\u5165\u5ea6\uff0cDP\u8981\u7528\nint firr[N],fromm[N],too[N],cntt;//\u5b58DAG\ninline void add2(int &a,int &b)//\u8fdeDAG\u7684\u8fb9\n{\n\tfromm[++cntt]=firr[a];\n\tfirr[a]=cntt; too[cntt]=b;\n}\nvoid build()//\u6ca1\u6709\u53bb\u91cd\u8fb9\u7684DAG\u6784\u9020\u51fd\u6570\n{\n    for(int i=1;i<=n;i++)\n    {\n        if(!be[i]) continue;//\u6211\u7684\u4e3b\u51fd\u6570\u53ea\u7f29\u4e86\u4ece\u8d77\u70b9\u80fd\u5230\u7684\u70b9\uff0c\u6240\u4ee5\u8981\u5224\u65ad\u4e00\u6ce2\n        for(int j=fir[i];j;j=from[j])\n        {\n            if(be[i]==be[to[j]]) continue;//\u540c\u5757\u5185\u7684\u8fb9\u5c31\u4e0d\u8981\u8fde\u4e86\n            add2(be[i],be[to[j]]),du[be[to[j]]]++;//\u4e0d\u7136\u5c31\u8fde\u8d77\u6765\uff0c\u66f4\u65b0\u5165\u5ea6\n        }\n    }\n}\n\nint f[N],ans;\nqueue <int> q;\nvoid DP()//\u6309\u62d3\u6251\u5e8f\u7684DP\n{\n    q.push(be[sta]); f[be[sta]]=sval[be[sta]];\n    while(!q.empty())\n    {\n        int u=q.front(); q.pop();\n        for(int i=firr[u];i;i=fromm[i])\n        {\n            int &v=too[i];\n            f[v]=max(f[v],f[u]+sval[v]);//\u5c1d\u8bd5\u66f4\u65b0f[v]\n            if(!(--du[v])) q.push(v);//\u66f4\u65b0\u5165\u5ea6\n        }\n    }\n    for(int i=1;i<=cnt2;i++) if(Bar[i]) ans=max(ans,f[i]);//\u5728\u6709\u9152\u5427\u7684\u5757\u5185\u627e\u4e00\u4e2a\u94b1\u6700\u591a\u7684\u5757\n}\n\nint main()\n{\n    int a,b;\n    n=read(); m=read();\n    for(int i=1;i<=m;i++)\n    {\n        a=read(); b=read();\n        add(a,b);\n    }\n    for(int i=1;i<=n;i++) a=read(),val[i]=a;\n    sta=read() ;k=read();\n    for(int i=1;i<=k;i++) a=read(),bar[a]=1;\n\n    Tarjan(sta);//\u53ea\u8981\u4ece\u8d77\u70b9Tarjan\u5c31\u597d\u4e86\uff0c\u5176\u4ed6\u7684\u53cd\u6b63\u4e5f\u5230\u4e0d\u4e86\n    build();//\u6784\u9020DAG\n    DP();\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1537965242,
        "uid": 34274,
        "name": "javalyc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u6a21\u62df\u8d5bT3\uff0c\u7136\u800c\u8fd9\u4e48\u88f8\u7684\u7f29\u70b9\u6211\u5374\u5fd8\u8bb0\u6a21\u677f\u4e86\u3002\u3002\u3002\n\n------------\n\n\u7136\u540e\u6211\u5c31\u5f00\u59cb\u60f3\u5176\u4ed6\u505a\u6cd5\uff0c\u8d39\u7528\u6d41(\u5176\u5b9e\u5c31\u662fSPFA\u6211\u5374\u786c\u8981\u5728\u5957\u70b9\u4e1c\u897f)\uff1f\u7136\u540e\u5c31\u5f00\u59cb\u5199\uff0c\u518d\u7136\u540e\u5c31\u5199\u6302\u4e86\uff0c\u4e00\u76f4\u8dd1\u8d1f\u73af\uff08\u5176\u5b9e\u662f\u7b97\u6b63\u73af\uff0c\u56e0\u4e3a\u662f\u6700\u957f\u8def\u561b\uff09\uff0c\u6ca1\u6709\u529e\u6cd5\uff0c\u8003\u5b8c\u518d\u52a0\u4e0a $tarjan$ \u5427\u3002\n\n\u4e0d\u8fc7\u8bf4\u5b9e\u8bdd\u8fd9\u9898\u4e5f\u633a\u6c34\u7684\uff0c\u7f29\u70b9\u5957 $SPFA$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u8fc7\u65e2\u7136\u8981\u5199\u9898\u89e3\uff0c\u4e3a\u4e86\u81ea\u5df1\u9898\u89e3\u80fd~~\u8fc7\u5ba1~~\u8ba9\u5927\u5bb6\u770b\u5f97\u61c2\uff0c\u8fd8\u662f\u8bb2\u8bb2 $tarjan$ \u5427\uff08~~\u53cd\u6b63\u4e5f\u662f\u5bf9\u7740\u4e66\u6284\u561b~~\uff09\u3002\n\n\u56e0\u4e3a\u662f\u81ea\u5df1\u7684\u7406\u89e3\uff0c\u6240\u4ee5\u8fd9\u91cc\u8bb2\u7684\u4f1a\u5f88\u7b80\u5355\uff0c\u4f46\u5927\u5bb6\u5e94\u8be5\u80fd\u542c\u61c2\u5427\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5f15\u5165\u65f6\u95f4\u6233 $dfn$\uff08\u662f\u4e2a\u6570\u7ec4\uff09\uff0c\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u9700\u8981\u89e3\u91ca\u5427\uff0c\u5b66 $DFS$ \u65f6\u5e94\u8be5\u5b66\u8fc7\u5427\uff0c $dfn$ \u5c31\u662f\u7b2c\u4e00\u6b21\u904d\u5386\u5230i\u8fd9\u4e2a\u70b9\u7684\u65f6\u95f4 $N$ \u4e2a\u8282\u70b9\u91cc $1$~$N$ \u7684 $DFS$ \u987a\u5e8f\uff08\u8fd8\u662f\u8bb2\u4e86\u561b\uff09\u3002\n\n\u7136\u540e\uff08**\u5212\u91cd\u70b9**\uff09\u6211\u4eec\u9700\u8981\u5224\u65ad\u5728\u6df1\u641c\u4ee5 $x$ \u4e3a\u6839\u7684\u6811\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8981\u5224\u65ad\u662f\u5426\u5b50\u6811\u4e2d\u6709\u8282\u70b9\u8fde\u8fb9\u4e0a\u6765\uff08\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5f80\u5b83\u7684\u51e0\u4e2a\u7956\u5148\u8282\u70b9\u90fd\u8fde\u4e86\u8fb9\uff0c\u90a3\u4e48\u627e\u8f88\u5206\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u5373\u65f6\u95f4\u6233\u6700\u5c0f\u7684\u90a3\u4e2a\uff09\uff0c\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u5f15\u8fdb\u8ffd\u6eaf\u503c $low[x]$\uff0c\u6307\u7684\u662f\u5728\u4ee5$x$\u4e3a\u6839\u7684\u6811\u4e2d\uff0c\u662f\u5426\u6709\u5411\u4e0a\uff08\u7956\u5148\uff09\u8fde\u8fb9\u7684\u8282\u70b9\uff08\u6ca1\u6709\u5219 $low[x]=dfn[x]$\uff08\u81ea\u5df1\u8fde\u81ea\u5df1\uff09\uff09\uff0c\u5982\u679c\u6709\uff0c\u8fde\u7684\u65f6\u95f4\u6233\u6700\u5c0f\uff08\u5373\u8f88\u5206\u6700\u5927\uff09\u7684\u662f\u8c01\u3002\n\n$low[x]$ \u662f\u8fd9\u6837\u66f4\u65b0\u7684\uff1a\n\n1.\u521d\u59cb\u5316 $low[x]$ = $dfn[x]$ \n\n2.\u626b\u63cf\u4e0e $x$ \u76f8\u8fde\u7684\u6bcf\u6761\u8fb9\uff0c\u8bbe\u8fb9\u7684\u53e6\u4e00\u7aef\u662f $y$\n\n\uff081\uff09\u82e5 $y$ \u6ca1\u6709\u904d\u5386\u8fc7\uff0c\u5c31\u5f80\u4e0b\u904d\u5386\uff0c\u904d\u5386\u5b8c\u540e $low[x]=min(low[x],low[y])$\uff0c\u5373\u8bb0\u5f55 $x$ \u7684\u5b50\u6811\u4e2d\u6709\u6ca1\u6709\u5411\u4e0a\u8fde\u8fb9\u7684\u8282\u70b9\uff0c\u6709\u5c31\u53d6\u65f6\u95f4\u6233\u6700\u5c0f\u7684\u90a3\u4e2a\uff08\u5373\u8fde\u7684\u8f88\u5206\u6700\u5927\u7684\u90a3\u4e2a\uff09\n\n\uff082\uff09\u82e5 $y$ \u88ab\u904d\u5386\u8fc7\u4e86\u5e76\u4e14 $y$ \u8fd8\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u90a3\u4e48 $low[x]=min(low[x],dfn[y])$\uff0c\u56e0\u4e3a\u524d\u9762\u8bf4\u660e\u8fc7\uff0c\u8981\u53d6\u65f6\u95f4\u6233\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u4e0d\u7136\u7f29\u70b9\u540e\u56fe\u4e2d\u4ecd\u7136\u5b58\u5728\u73af\u3002\n\n\u4f46\u662f\u600e\u4e48\u5224\u4e00\u4e2a\u8282\u70b9\u8fd8\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u7528\u6808\uff0c\u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5b58\u4e00\u4e2a\u8282\u70b9\u3002\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u5728\u6808\u4e2d\u5373\u53ef\u3002\n\n\u6700\u540e\u5728 $x$ \u56de\u6eaf\u524d\uff0c\u5224\u65ad $low[x]$ \u662f\u5426\u7b49\u4e8e $dfn[x]$\uff0c\u82e5\u7b49\u4e8e\uff0c\u5c31\u8bf4\u660e $x$ \u4e3a\u6839\u7684\u8282\u70b9\u7684\u6811\u6784\u6210\u4e86\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u8981\u4e48\u81ea\u5df1\u8fde\u81ea\u5df1\uff0c\u8981\u4e48\u5b50\u6811\u8282\u70b9\u8fde\u5230\u4e86 $x$\uff0c\u5e76\u4e14\u8fd9\u662f\u80fd\u8fde\u7684\u8fb9\u4e2d\u65f6\u95f4\u6233\u6700\u5c0f\u7684\u4e00\u4e2a \uff09\uff0c\u7136\u540e\u5c06\u6808\u4e2d\u5b58\u653e\u7684\u8282\u70b9\u4e0d\u65ad\u5f39\u51fa\uff0c\u76f4\u81f3\u5f39\u51fa\u81ea\u5df1\u4e3a\u6b62\uff0c\u8fd9\u6837\u5f39\u51fa\u7684\u8282\u70b9\u5c31\u662f\u4ee5 $x$ \u4e3a\u6839\u7684\u6811\u7684\u6240\u6709\u8282\u70b9\uff08\u5373\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6240\u6709\u8282\u70b9\uff09\u3002\u5982\u679c\u8981\u7f29\u70b9\u5c31\u628a\u5b83\u4eec\u53d8\u6210\u4e00\u4e2a\u70b9\u5373\u53ef\u3002\n\n\u5230\u8fd9\u91cc\uff0c$tarjan$ \u5c31\u8bb2\u5b8c\u4e86\u3002\n\n\u7136\u540e\u5bf9\u8fd9\u9053\u9898\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u8bb8\u591a\u4e2a\u7ec8\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5b66\u4e60\u7f51\u7edc\u6d41\uff08\u4e0d\u77e5\u9053\u7684\u53ef\u4ee5\u70b9[\u8fd9\u91cc](https://www.luogu.org/blog/71403/solution-p3376)\uff09\u7684\u601d\u60f3\uff0c\u5c06\u8d85\u7ea7\u6e90\u70b9\u5411\u8d77\u70b9\u8fde\u8fb9\uff0c\u5c06\u6240\u6709\u7ec8\u70b9\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u8fb9\uff0c\u7136\u540e\u8f93\u51fa\u8d85\u7ea7\u6e90\u70b9\u5230\u8d85\u7ea7\u6c47\u70b9\u7684\u6700\u957f\u8def\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u4f60\u5b9e\u5728\u4e0d\u60f3\u53bb\u770b\u5173\u4e8e\u7f51\u7edc\u6d41\u7684\u4e1c\u897f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4e00\u628a\u6700\u957f\u8def\uff0c\u7136\u540e\u5728\u6240\u6709\u7ec8\u70b9\u91cc\u518d\u53d6\u4e00\u4e2a\u6700\u5927\u503c\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#define maxn 500005\n#define maxm 500005\n#define INF 0x3f3f3f3f\ninline int read(){\n    int r=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){r=(r<<3)+(r<<1)+c-'0';c=getchar();}\n    return r*f;\n}\nint s,t,n,m,N,head[maxn],dis[maxn],q[maxn],uu[maxn],vv[maxn];\nbool vis[maxn];\nint s_e;\nstruct E{//\u7f29\u70b9\u540e\u7684\u8fb9\n    int v,w,nxt;\n}e[maxm];\nstruct E1{//\u7f29\u70b9\u524d\u7684\u8fb9\n    int v,nxt;\n}e1[maxm];\nint head1[maxn],s_e1;\nint sd[maxn],dfn[maxn],low[maxn];\nint cnt,stac[maxn*10],top,s_dfn;\nbool ins[maxn];\nint d[maxn],c[maxn],diss[maxn];\nstruct Max_fei{//\u7ed3\u6784\u4f53\u8bf7\u89c1\u8c05\n    inline void a_e(int u,int v,int w){\n        e[++s_e]=(E){v,w,head[u]};\n        head[u]=s_e;\n    }\n    inline int spfa(){//\u5f53\u7136\u7528SPFA\u8dd1\u6700\u957f\u8def\u4e86\n        for(int i=0;i<=N;i++){\n            dis[i]=-INF;\n            vis[i]=false;\n        }\n        dis[s]=0;\n        vis[s]=true;\n        q[0]=s;\n        int hd=0,tl=1;\n        while(hd^tl){\n            int u=q[hd++];\n            hd%=maxn;\n            for(int i=head[u];i!=-1;i=e[i].nxt){\n                int v=e[i].v;\n                if(dis[v]<dis[u]+e[i].w){\n                    dis[v]=dis[u]+e[i].w;\n                    if(vis[v])continue;\n                    vis[v]=true;\n                    q[tl++]=v;\n                    tl%=maxn;\n                }\n            }\n            vis[u]=false;\n        }\n        return dis[t]; //\u8fd4\u56de\u8d85\u7ea7\u6e90\u70b9\u5230\u8d85\u7ea7\u6c47\u70b9\u7684\u6700\u957f\u8def\n    }\n}Flow;\ninline void a_e(int u,int v){\n    e1[++s_e1]=(E1){v,head1[u]};\n    head1[u]=s_e1;\n}\ninline int min(int a,int b){\n\treturn a<b?a:b;\n}\ninline int max(int a,int b){\n\treturn a>b?a:b;\n}\nvoid tarjan(int u){//\u7f29\u70b9\n\tdfn[u]=low[u]=++s_dfn;\n\tstac[++top]=u;\n  \tins[u]=1;\n\tfor(int i=head1[u];i;i=e1[i].nxt){\n\t\tint v=e1[i].v;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(ins[v])low[u]=min(low[u],dfn[v]); \n\t}\n\tif(low[u]==dfn[u]){\n\t\tcnt++;\n\t\tint v=0;\n\t\twhile(v!=u){\n\t\t\tv=stac[top--];\n\t\t\td[v]=cnt;//d\u662f\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n\t\t\tins[v]=0;\n\t\t\tc[cnt]+=diss[v];//c\u662f\u7f29\u70b9\u5b8c\u4ee5\u540e\u8fd9\u4e2a\u70b9\u4e00\u5171\u80fd\u62a2\u7684\u94b1\u6570\n\t\t}\n\t}\n}\ninline void work(){\n    n=read();m=read();\n    for(int i=1;i<=m;i++){\n        int u=read(),v=read();\n        uu[i]=u,vv[i]=v;//\u6570\u7ec4\u5b58\u4e0b\uff0c\u7b49\u4f1a\u513f\u8fd8\u8981\u518d\u52a0\u4e00\u6b21\u8fb9\n        if(u==v)continue;\n        a_e(u,v);\n    }\n    for(int i=1;i<=n;i++)\n    \tdiss[i]=read();\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])tarjan(i);//\u8fd8\u6ca1\u6709\u904d\u5386\u8fc7\u8fd9\u4e2a\u8282\u70b9\u5c31\u904d\u5386\n    s=0;t=cnt+1;//\u8d85\u7ea7\u6e90\u70b9\u4e0e\u8d85\u7ea7\u6c47\u70b9\n    N=cnt+1;\n\tfor(int i=1;i<=m;i++){//\u7f29\u5b8c\u70b9\u91cd\u65b0\u52a0\u8fb9\n\t\tif(d[uu[i]]==d[vv[i]])continue;\u73b0\u5728\u662f\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u4e86\uff0c\u4e0d\u7528\u518d\u52a0\u4e86\n        Flow.a_e(d[uu[i]],d[vv[i]],c[d[vv[i]]]);\n\t}\n    int S=read(),P=read();\n    Flow.a_e(s,d[S],c[d[S]]);//\u8d85\u7ea7\u6e90\u70b9\u8fde\u8d77\u70b9\n    for(int i=1;i<=P;i++){\n    \tint bh=read();\n    \tFlow.a_e(d[bh],t,0);//\u5404\u4e2a\u7ec8\u70b9\u8fde\u8d85\u7ea7\u6c47\u70b9\n    }\n    int flow=0;\n    int ans=Flow.spfa();\n    printf(\"%d\\n\",ans);\n}\nint main(){\n    work();\n    return 0;\n}\n```\n\n~~\u5b8c\u7ed3\u5077\u5077\u6492\u82b1~~ \u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f",
        "postTime": 1565012576,
        "uid": 71403,
        "name": "\u4e00\u53f6\u77e5\u79cb\u3002",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u3010\u53c2\u8003\u8d44\u6599\u3011\n\nliusu201601\u7684\u535a\u5ba2 - bzoj1179: [Apio2009]Atm\uff08\u5f3a\u8054\u901a+\u6700\u77ed\u8def\uff09\uff1a https://blog.csdn.net/liusu201601/article/details/79234724\n\n\u767e\u5ea6\u767e\u79d1 - \u5f3a\u8fde\u901a\u5206\u91cf\uff1a https://baike.baidu.com/item/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/7448759?fr=aladdin\n\n\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\nSiruseri \u57ce\u4e2d\u7684\u9053\u8def\u90fd\u662f\u5355\u5411\u7684\u3002\u4e0d\u540c\u7684\u9053\u8def\u7531\u8def\u53e3\u8fde\u63a5\u3002\u6309\u7167\u6cd5\u5f8b\u7684\u89c4\u5b9a\uff0c \u5728\u6bcf\u4e2a\u8def\u53e3\u90fd\u8bbe\u7acb\u4e86\u4e00\u4e2a Siruseri \u94f6\u884c\u7684 ATM \u53d6\u6b3e\u673a\u3002\u4ee4\u4eba\u5947\u602a\u7684\u662f\uff0cSiruseri \u7684\u9152\u5427\u4e5f\u90fd\u8bbe\u5728\u8def\u53e3\uff0c\u867d\u7136\u5e76\u4e0d\u662f\u6bcf\u4e2a\u8def\u53e3\u90fd\u8bbe\u6709\u9152\u5427\u3002\n\nBanditji \u8ba1\u5212\u5b9e\u65bd Siruseri \u6709\u53f2\u4ee5\u6765\u6700\u60ca\u5929\u52a8\u5730\u7684 ATM \u62a2\u52ab\u3002\u4ed6\u5c06\u4ece\u5e02\u4e2d\u5fc3 \u51fa\u53d1\uff0c\u6cbf\u7740\u5355\u5411\u9053\u8def\u884c\u9a76\uff0c\u62a2\u52ab\u6240\u6709\u4ed6\u9014\u5f84\u7684 ATM \u673a\uff0c\u6700\u7ec8\u4ed6\u5c06\u5728\u4e00\u4e2a\u9152\u5427\u5e86 \u795d\u4ed6\u7684\u80dc\u5229\u3002\n\n\u4f7f\u7528\u9ad8\u8d85\u7684\u9ed1\u5ba2\u6280\u672f\uff0c\u4ed6\u83b7\u77e5\u4e86\u6bcf\u4e2a ATM \u673a\u4e2d\u53ef\u4ee5\u63a0\u53d6\u7684\u73b0\u91d1\u6570\u989d\u3002\u4ed6\u5e0c \u671b\u4f60\u5e2e\u52a9\u4ed6\u8ba1\u7b97\u4ece\u5e02\u4e2d\u5fc3\u51fa\u53d1\u6700\u540e\u5230\u8fbe\u67d0\u4e2a\u9152\u5427\u65f6\u6700\u591a\u80fd\u62a2\u52ab\u7684\u73b0\u91d1\u603b\u6570\u3002\u4ed6\u53ef \u4ee5\u7ecf\u8fc7\u540c\u4e00\u8def\u53e3\u6216\u9053\u8def\u4efb\u610f\u591a\u6b21\u3002\u4f46\u53ea\u8981\u4ed6\u62a2\u52ab\u8fc7\u67d0\u4e2a ATM \u673a\u540e\uff0c\u8be5 ATM \u673a \u91cc\u9762\u5c31\u4e0d\u4f1a\u518d\u6709\u94b1\u4e86\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u8be5\u57ce\u4e2d\u6709 6 \u4e2a\u8def\u53e3\uff0c\u9053\u8def\u7684\u8fde\u63a5\u60c5\u51b5\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/4396.png)\n\n\u5e02\u4e2d\u5fc3\u5728\u8def\u53e3 1\uff0c\u7531\u4e00\u4e2a\u5165\u53e3\u7b26\u53f7\u2192\u6765\u6807\u8bc6\uff0c\u90a3\u4e9b\u6709\u9152\u5427\u7684\u8def\u53e3\u7528\u53cc\u5708\u6765\u8868\n\n\u793a\u3002\u6bcf\u4e2a ATM \u673a\u4e2d\u53ef\u53d6\u7684\u94b1\u6570\u6807\u5728\u4e86\u8def\u53e3\u7684\u4e0a\u65b9\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cBanditji \u80fd\u62a2 \u52ab\u7684\u73b0\u91d1\u603b\u6570\u4e3a 47\uff0c\u5b9e\u65bd\u7684\u62a2\u52ab\u8def\u7ebf\u662f\uff1a1-2-4-1-2-3-5\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u3011\n\n- \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $N$\u3001$M$\u3002$N$ \u8868\u793a\u8def\u53e3\u7684\u4e2a\u6570\uff0c$M$ \u8868\u793a\u9053\u8def\u6761\u6570\u3002\u63a5\u4e0b\u6765 $M$ \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570\uff0c\u8fd9\u4e24\u4e2a\u6574\u6570\u90fd\u5728 $1$ \u5230 $N$ \u4e4b\u95f4\uff0c\u7b2c $i+1$ \u884c\u7684\u4e24\u4e2a\u6574\u6570\u8868\u793a\u7b2c $i$ \u6761\u9053\u8def\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u8def\u53e3\u7f16\u53f7\u3002\u63a5\u4e0b\u6765 $N$ \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u6309\u987a\u5e8f\u8868\u793a\u6bcf \u4e2a\u8def\u53e3\u5904\u7684 ATM \u673a\u4e2d\u7684\u94b1\u6570\u3002\u63a5\u4e0b\u6765\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $S$\u3001$P$\uff0c$S$ \u8868\u793a\u5e02\u4e2d\u5fc3\u7684 \u7f16\u53f7\uff0c\u4e5f\u5c31\u662f\u51fa\u53d1\u7684\u8def\u53e3\u3002$P$ \u8868\u793a\u9152\u5427\u6570\u76ee\u3002\u63a5\u4e0b\u6765\u7684\u4e00\u884c\u4e2d\u6709 $P$ \u4e2a\u6574\u6570\uff0c\u8868\u793a $P$ \u4e2a\u6709\u9152\u5427\u7684\u8def\u53e3\u7684\u7f16\u53f7\u3002\n\n- \u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a Banditji \u4ece\u5e02\u4e2d\u5fc3\u5f00\u59cb\u5230\u67d0\u4e2a\u9152\u5427\u7ed3\u675f\u6240\u80fd\u62a2\u52ab\u7684\u6700\u591a \u7684\u73b0\u91d1\u603b\u6570\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u3011\n\n- \u8f93\u5165\u6837\u4f8b\n```\n6 7 \n1 2 \n2 3 \n3 5 \n2 4 \n4 1 \n2 6 \n6 5 \n10 \n12 \n8 \n16 \n1 \n5 \n1 4 \n4 3 5 6\n```\n- \u8f93\u51fa\u6837\u4f8b\n```\n47\n```\n\n\u3010\u6570\u636e\u8303\u56f4\u3011\n\n$50\\%$\u7684\u8f93\u5165\u4fdd\u8bc1 $N, M \\leq 3000$\u3002\n\n\u6240\u6709\u7684\u8f93\u5165\u4fdd\u8bc1 $N, M \\leq 500000$\u3002\u6bcf\u4e2a ATM \u673a\u4e2d\u53ef\u53d6\u7684\u94b1\u6570\u4e3a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u4e14\u4e0d\u8d85\u8fc7 $4000$\u3002\n\n\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u4f60\u53ef\u4ee5\u4ece\u5e02\u4e2d\u5fc3 \u6cbf\u7740 Siruseri \u7684\u5355\u5411\u7684\u9053\u8def\u5230\u8fbe\u5176\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\u9152\u5427\u3002\n\n\u8fd9\u662f\u4e00\u9053\u5f3a\u8fde\u901a\u7684\u9898\u76ee\uff0c\u4ec0\u4e48\u662f\u5f3a\u8fde\u901a\uff1f\u4e0d\u59a8\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u6559\u7a0b\u3002\n\n\u73b0\u5728\u6211\u4eec\u6709\u4e00\u5f20$n$\u4e2a\u70b9$m$\u6761\u8fb9\u7684**\u6709\u5411\u56fe**\uff0c\u5982\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/16684.png)\n\n\u4e0a\u56fe\u4e2d\uff0c\u6709\u4e09\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u3002\u5206\u522b\u662f[1]\u3001[5]\u4ee5\u53ca[2,3,4,6]\u3002\n\n\u4ec0\u4e48\u662f\u5f3a\u8fde\u901a\u5206\u91cf\uff1f\u4e0d\u59a8\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u8fd9\u6bb5\u8bdd\u3002\n\n- **\u5f3a\u8fde\u901a\u56fe\u7684\u5b9a\u4e49**\n\n> \u6709\u5411\u56fe\u5f3a\u8fde\u901a\u5206\u91cf\uff1a\u5728\u6709\u5411\u56fe$G$\u4e2d\uff0c\u5982\u679c\u4e24\u4e2a\u9876\u70b9$v_i,v_j$\u95f4\uff08$v_i>v_j$\uff09\u6709\u4e00\u6761\u4ece$v_i$\u5230$v_j$\u7684\u6709\u5411\u8def\u5f84\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u6761\u4ece$v_j$\u5230$v_i$\u7684\u6709\u5411\u8def\u5f84\uff0c\u5219\u79f0\u4e24\u4e2a\u9876\u70b9\u5f3a\u8fde\u901a(strongly connected)\u3002\u5982\u679c\u6709\u5411\u56fe$G$\u7684\u6bcf\u4e24\u4e2a\u9876\u70b9\u90fd\u5f3a\u8fde\u901a\uff0c\u79f0$G$\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u3002\u6709\u5411\u56fe\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe\uff0c\u79f0\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf(strongly connected components)\u3002\n\n\u90a3\u4e48\u600e\u4e48\u627e\u5230\u8fd9\u5f20\u56fe\u4e2d\u6709\u591a\u5c11\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5462\uff1f\u4e0b\u9762\u6211\u5c06\u6a21\u62df\u4e00\u6b21\u5f3a\u8fde\u901a\u7684\u8fc7\u7a0b\uff0c\u4e0d\u4f1a\u7684\u540c\u5b66\u53ef\u4ee5\u8ba4\u771f\u5730\u770b\u4e00\u4e0b\u6574\u4e2a\u8fc7\u7a0b\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u6bcf\u4e2a\u70b9\u6709$2$\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u65f6\u95f4\u6233\uff0c\u6211\u7528\u5b57\u6bcd $i$\uff08\u5f88\u591a\u9898\u89e3\u7528$dfn$\uff09\uff0c\u4e00\u4e2a\u662f\u81ea\u5df1\u56e2\u7684\u8001\u5927\uff0c\u6211\u7528\u5b57\u6bcd$d$\uff08\u5f88\u591a\u9898\u89e3\u7528$low$\uff09\u3002\u63a5\u4e0b\u6765\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5468\u56f4\u4f1a\u6709\u4e24\u4e2a\u6570\u5b57\uff0c\u5206\u522b\u4ee3\u8868$i$\u548c$d$\u3002\u8fd8\u6709\u6211\u4eec\u7528\u4e00\u4e2a\u6808\u6765\u5b58\u50a8\u65b0\u52a0\u5165\u7684\u70b9\uff0c\u5f53\u8fd9\u4e2a\u70b9\u641c\u5b8c\u4e86\u6240\u6709\u548c\u5b83\u4e0e\u4e4b\u76f8\u90bb\u7684\u70b9\u7684\u8bdd\u5c31\u5c06\u5176\u51fa\u6808\u3002\u6211\u4eec\u5148\u4ece$1$\u53f7\u70b9\u5f00\u59cb\u8be2\u95ee\u4e00\u76f4\u76f4\u5230$n$\u53f7\u70b9\uff0c\u6bcf\u6b21\u8be2\u95ee\u95ee$i$\u53f7\u70b9\u662f\u5426\u6709\u65f6\u95f4\u6233\u3002\u82e5\u6ca1\u6709\u7684\u8bdd\u5c31\u4ece\u7b2c$i$\u53f7\u70b9\u5f00\u59cb\u641c\uff08$i \\in [1,n]$\uff09\u3002\u73b0\u5728\u6211\u4eec\u5148\u8bbf\u95ee$1$\u53f7\u70b9\uff0c\u5e76\u7ed9\u51fa$1$\u53f7\u70b9\u4e00\u4e2a\u65f6\u95f4\u6233\u548c\u4ed6\u7684\u8001\u5927\uff08\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u4ed6\u7684\u8001\u5927\u662f\u5b83\u81ea\u5df1\uff09\uff0c\u5982\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/16689.png)\n\n\u73b0\u5728$1$\u53f7\u70b9\u5df2\u7ecf\u5165\u6808\u4e86\uff0c\u63a5\u7740\uff0c\u6211\u4eec\u4ece$1$\u53f7\u70b9\u5f00\u59cb\u8fdb\u884c\u6df1\u641c\uff0c\u6211\u5728\u8fd9\u91cc\u7701\u7565\u4e86\u4e00\u4e9b\u4e2d\u95f4\u7684\u8fc7\u7a0b\uff0c\u5927\u5bb6\u5982\u679c\u5bf9\u6b64\u611f\u5174\u8da3\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u6a21\u62df\u4e00\u4e0b\uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\uff0c\u6ce8\u610f\uff0c\u641c\u7684\u987a\u5e8f\u662f\u6309\u8fb9\u7684\u8f93\u5165\u987a\u5e8f\u6765\u5b9a\u4e49\u7684\uff0c\u4f8b\u5982\u6709``1 2``\u3001``1 3``\u3001``3 2``\u8fd9\u4e09\u6761\u8fb9\uff0c\u82e5\u6211\u4eec\u4ece$1$\u53f7\u70b9\u5f00\u59cb\u8fdb\u884c\u6df1\u641c\u7684\u8bdd\uff0c\u90a3\u4e48\u4f18\u5148\u641c$3$\u53f7\u70b9\u3002\u540c\u7406\uff0c\u5982\u679c\u6211\u4eec\u4ece$3$\u53f7\u70b9\u5f00\u59cb\u8fdb\u884c\u6df1\u641c\u7684\u8bdd\uff0c\u90a3\u4e48\u4f18\u5148\u641c\u7d22\u7684\u5c31\u662f$2$\u53f7\u70b9\uff0c\u5b66\u8fc7\u6700\u77ed\u8def\u7684\u540c\u5b66\u5e94\u8be5\u90fd\u6709\u6240\u4e86\u89e3\uff0c\u641c\u7d22\u51e0\u6b21\u4e4b\u540e\u7684\u7ed3\u679c\u5982\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/16690.png)\n\n\u73b0\u5728\u6808\u7684\u60c5\u51b5\u4e3a[1,2,3,4,5]\u3002\u73b0\u5728\u641c\u5230\u4e86$5$\u53f7\u70b9\uff0c\u7531\u4e8e$5$\u53f7\u70b9\u73b0\u5728\u6ca1\u5f97\u641c\u7d22\u4e86\uff0c\u6240\u4ee5\u5c06$5$\u53f7\u70b9\u5f39\u51fa\u6808\uff0c\u5e76\u4e14\u7531\u4e8e$5$\u53f7\u70b9\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u5b83\u7684\u8001\u5927\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u8fd9\u4e2a\u56e2\u4f53\u4e2d\u7684\u8001\u5927\uff0c\u4e5f\u5373\uff1a\n\n- **\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u56de\u6eaf\u65f6\u5b83\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u5b83\u7684\u8001\u5927\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u8fd9\u4e2a\u56e2\u4f53\u4e2d\u7684\u8001\u5927\uff0c\u5e76\u5c06\u56e2\u4f53\u4e2d\u7684\u6240\u6709\u70b9\u51fa\u6808\u3002**\n\n\u73b0\u5728\u6808\u7684\u60c5\u51b5\u4e3a[1,2,3,4]\u3002\u73b0\u5728\uff0c$4$\u53f7\u70b9\u641c\u7d22\u5230\u4e86$6$\u53f7\u70b9\uff0c\u53d1\u73b0$6$\u53f7\u70b9\u8fd8\u6ca1\u6709\u65f6\u95f4\u6233\u548c\u8001\u5927\u3002\u4e8e\u662f\u6211\u4eec\u66f4\u65b0$6$\u53f7\u70b9\u7684\u8001\u5927\u4ee5\u53ca\u65f6\u95f4\u6233\uff0c\u540c\u65f6\u6211\u4eec\u8fd8\u8981\u5c06$6$\u53f7\u70b9\u52a0\u5165\u6808\u5185\uff0c\u5982\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/16692.png)\n\n\u73b0\u5728\u6808\u5185\u7684\u60c5\u51b5\u4e3a[1,2,3,6]\u3002\n\n\u73b0\u5728\u6211\u4eec\u4ece$6$\u53f7\u70b9\u5f00\u59cb\u6269\u5c55\u5b83\u5468\u56f4\u7684\u70b9\u5566~\n\n\u73b0\u5728\u6211\u4eec\u641c\u5230\u4e86$2$\u53f7\u70b9\u3002\u7531\u4e8e$2$\u53f7\u70b9\u73b0\u5728\u5728\u6808\u5185\uff0c\u90a3\u4e48$2$\u53f7\u70b9\u7684\u65f6\u95f4\u6233\u5c0f\u4e8e$6$\u53f7\u70b9\u7684\u8001\u5927\uff0c\u90a3\u4e48$2$\u53f7\u70b9\u53ef\u80fd\u5c31\u662f$6$\u53f7\u70b9\u7684\u6700\u7ec8\u7684\u8001\u5927\uff0c\u4e5f\u5373\uff1a\n\n- **\u82e5\u5f53\u524d\u6240\u5728\u7684\u70b9\u4e3a$x$\u53f7\u70b9\uff0c\u5f53\u524d\u6269\u5c55\u5230\u7684\u70b9\u4e3a$y$\u53f7\u70b9\uff0c\u90a3\u4e48\u5982\u679c$a[y].i<a[x].d$\uff0c\u90a3\u4e48\u5c31\u7528$a[y].i$\u6765\u66f4\u65b0$a[x].d$\u3002**\n\n\u66f4\u65b0\u540e\u5982\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/16697.png)\n\n\u73b0\u5728\u4ece$6$\u53f7\u70b9\u56de\u6eaf\u5230\u4e86$4$\u53f7\u70b9\uff0c\u53d1\u73b0$6$\u53f7\u70b9\u7684\u8001\u5927\u5c0f\u4e8e$4$\u53f7\u70b9\u7684\u8001\u5927\u6240\u4ee5\u5c06$4$\u53f7\u70b9\u7684\u8001\u5927\u6539\u4e3a$2$\uff0c\u4e5f\u5373\uff1a\n\n- **\u5982\u679c$y$\u70b9\u5df2\u7ecf\u641c\u5b8c\u4e86\u5b83\u5468\u56f4\u7684\u70b9\uff0c\u56de\u6eaf\u5230\u4e86$x$\u53f7\u70b9\u65f6\uff0c\u53d1\u73b0$y$\u53f7\u70b9\u7684\u8001\u5927\u6bd4$x$\u53f7\u70b9\u7684\u8001\u5927\u8981\u5c0f\uff0c\u5c31\u7528$y$\u53f7\u70b9\u7684\u8001\u5927\u6765\u66f4\u65b0$x$\u53f7\u70b9\u7684\u8001\u5927\u3002**\n\n\u4fee\u6539\u540e\u7684\u7ed3\u679c\u5982\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/16718.png)\n\n\u73b0\u5728\uff0c$4$\u53f7\u70b9\u5df2\u7ecf\u5b8c\u6210\u4e86\u4efb\u52a1\uff0c\u56de\u6eaf\u5230\u4e86$3$\u53f7\u70b9\u3002\u56e0\u4e3a$4$\u53f7\u70b9\u7684\u8001\u5927\u6bd4$3$\u53f7\u70b9\u7684\u8001\u5927\u8981\u5c0f\uff0c\u6240\u4ee5\u4fbf\u7528$4$\u53f7\u70b9\u7684\u8001\u5927\u6765\u66f4\u65b0$3$\u53f7\u70b9\u7684\u8001\u5927\uff0c\u4fee\u6539\u540e\u7684\u7ed3\u679c\u5982\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/16719.png)\n\n\u73b0\u5728\uff0c$2$\u53f7\u70b9\u4e5f\u641c\u7d22\u5b8c\u4e86\u5468\u56f4\u7684\u70b9\uff0c\u51c6\u5907\u56de\u6eaf\uff0c\u4f46\u662f\u7531\u4e8e$2$\u53f7\u70b9\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u4ed6\u7684\u8001\u5927\uff0c\u90a3\u4e48\u5c31\u8868\u660e$2$\u53f7\u70b9\u662f\u73b0\u5728\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u56e2\u961f\uff09\u4e2d\u7684\u8001\u5927\uff0c\u4e5f\u5373\uff1a\n\n- **\u5982\u6709$x$\u53f7\u70b9\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u4ed6\u7684\u8001\u5927\uff0c\u90a3\u4e48\u5c31\u8868\u660e$x$\u53f7\u70b9\u662f\u73b0\u5728\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u56e2\u961f\uff09\u4e2d\u7684\u8001\u5927\u3002**\n\n\u4ece$2$\u53f7\u70b9\u56de\u6eaf\u5230$1$\u53f7\u70b9\u540e\uff0c\u56e0\u4e3a$1$\u53f7\u70b9\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u4ed6\u7684\u8001\u5927\uff0c\u6240\u4ee5$1$\u53f7\u70b9\u662f\u73b0\u5728\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u56e2\u961f\uff09\u4e2d\u7684\u8001\u5927\u3002\n\n\u6a21\u62df\u5b8c\u6bd5~\n\n\u3010\u9898\u76ee\u5927\u610f\u3011\n\n\u5728\u6709\u5411\u56fe\u91cc\uff0c\u53ef\u4ee5\u7ed5\u5708\u7684\u60c5\u51b5\u4e0b\uff0c\u53d6\u5c3d\u53ef\u80fd\u5927\u7684\u503c\u3002\u7136\u540e\u8981\u6c42\u5728\u6709\u9152\u5427\u7684\u70b9\u91cc\u5c3d\u53ef\u80fd\u5927\u3002\n\n\u3010\u9898\u89e3\u3011\n\n\u901a\u8fc7\u9898\u76ee\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5f3a\u8054\u901a\uff0c\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff08\u8054\u901a\u5757\uff09\u5185\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u4f18\u89e3\uff0c\u5e76\u7531\u6b64\u53ef\u4ee5\u60f3\u5230\u7528**\u6700\u957f\u8def**\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6ce8\u610f\uff0c\u662f\u6700\u957f\u8def\u54e6\u3002\u7531\u4e8e\u5728\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148**\u7f29\u70b9**\uff08\u4e5f\u5373\u5c06\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u89c6\u4e3a\u4e00\u4e2a\u70b9\uff09\u518d\u8dd1\u4e00\u6b21\u6700\u957f\u8def\uff0c\u6700\u540e\u518d\u626b\u4e00\u6b21\u6709\u9152\u5427\u7684\u70b9\u5373\u53ef\uff0c\u56e0\u4e3a\u6211\u5728\u4ee3\u7801\u91cc\u7684\u70b9\u548c\u8fb9\u7684\u7ed3\u6784\u4f53\u90fd\u6709\u91cd\u590d\u5e94\u7528\uff0c\u6240\u4ee5\u8981\u8bb0\u5f97\u5148\u6e05\u96f6\uff0c\u8fd8\u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\u662f\u5c06\u56e2\u4f53\u8fde\u8fb9\uff0c\u4e0d\u662f\u8ba9\u70b9\u4e8e\u70b9\u4e4b\u95f4\u8fde\u8fb9\u54e6~\n\n\u4e0b\u9762\u4e0aAC\u4ee3\u7801~\n```\n#include <cstdio>\nint f[2000001],chu[2000001],bb[2000001],l[2000001];\nstruct nodea{ int h,i,b,v,d; } a[5000001];\nstruct nodeb{ int x,y,gg; } b[5000001];\nint len=0,tou=0,lx=0,lb=0,n=0,m=0,st=0,p=0;\nvoid ins(int x,int y)\n{\n\tlen++;\n\tb[len].x=x;\n\tb[len].y=y;\n\tb[len].gg=a[x].h;\n\ta[x].h=len;\n}\nvoid dfs(int x)\n{\n\tl[++tou]=x;\n\ta[x].i=++lx;\n\ta[x].d=lx;\n\ta[x].v=1;\n\tfor(int i=a[x].h;i>0;i=b[i].gg)\n\t{\n\t\tint y=b[i].y;\n\t\tif(a[y].i==0)\n\t\t{\n\t\t\tdfs(y);\n\t\t\tif(a[y].d<a[x].d)\n\t\t\t{\n\t\t\t\ta[x].d=a[y].d;\n\t\t\t}\n\t\t}\n\t\telse if(a[y].v==1)\n\t\t{\n\t\t\tif(a[y].i<a[x].d)\n\t\t\t{\n\t\t\t\ta[x].d=a[y].i;\n\t\t\t}\n\t\t}\n\t}\n\tif(a[x].i==a[x].d)\n\t{\n\t\tlb++;\n\t\twhile(true)\n\t\t{\n\t\t\tint k=l[tou--];\n\t\t\ta[k].v=0;\n\t\t\ta[k].b=lb;\n\t\t\tif(k==x)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid spfa()\n{\n\tint tou=1,wei=2;\n\tf[1]=st;\n\ta[st].v=1;\n\ta[st].d=bb[st];\n\twhile(tou!=wei)\n\t{\n\t\tint x=f[tou];\n\t\tfor(int i=a[x].h;i>0;i=b[i].gg)\n\t\t{\n\t\t\tint y=b[i].y;\n\t\t\tif(a[y].d<a[x].d+bb[y])\n\t\t\t{\n\t\t\t\ta[y].d=a[x].d+bb[y];\n\t\t\t\tif(a[y].v==0)\n\t\t\t\t{\n\t\t\t\t\ta[y].v=1;\n\t\t\t\t\tf[wei]=y;\n\t\t\t\t\twei++;\n\t\t\t\t\tif(wei>lb)\n\t\t\t\t\t{\n\t\t\t\t\t\twei=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ta[x].v=0;\n\t\ttou++;\n\t\tif(tou>lb)\n\t\t{\n\t\t\ttou=1;\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=0,y=0;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tins(x,y);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i].i==0)\n\t\t{\n\t\t\tdfs(i);\n\t\t}\n\t}\n\tint td=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i].h=0;\n\t\ta[i].v=0;\n\t\ta[i].d=0;\n\t\tscanf(\"%d\",&td);\n\t\tbb[a[i].b]+=td;\n\t}\n\tscanf(\"%d %d\",&st,&p);\n\tint now=len;\n\tlen=0;\n\tfor(int i=1;i<=now;i++)\n\t{\n\t\tint x=b[i].x;\n\t\tint y=b[i].y;\n\t\tif(a[x].b!=a[y].b)\n\t\t{\n\t\t\tins(a[x].b,a[y].b);\n\t\t}\n\t}\n\tst=a[st].b;\n\tspfa();\n\tint ans=0;\n\tint tx=0;\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%d\",&tx);\n\t\tif(ans<a[a[tx].b].d)\n\t\t{\n\t\t\tans=a[a[tx].b].d;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1522587204,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "### \u9898\u89e3\u4e2d\u7adf\u7136\u6ca1\u6709\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u65b9\u6cd5\uff0c\u6211\u6765\u8865\u5145\u4e00\u4e2a\n\u8fd9\u9053\u9898\u524d\u9762\u7684\u601d\u8def\u548c\u5176\u4ed6\u9898\u89e3\u4e00\u6837\uff0c\u90fd\u662ftarjan\u7f29\u70b9\u3002\u7136\u540e\u662f\u8981\u6c42\u91d1\u5e01\u7684\u6700\u5927\u503c\uff0c\u6211\u7528\u7684\u662f\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u7528jiyi[i]\u6765\u8868\u793a\u4ece\u7f16\u53f7\u4e3ai\u7684\u8054\u901a\u5757\u51fa\u53d1\uff0c\u6700\u591a\u53ef\u4ee5\u62a2\u5230\u591a\u5c11\u94b1\uff0c\u641c\u7d22\u65f6\u5982\u679c\u9047\u5230\u5df2\u7ecf\u641c\u8fc7\u7684\u70b9\uff08\u77e5\u9053\u4ece\u90a3\u4e2a\u70b9\u5f00\u59cb\u6700\u591a\u80fd\u62a2\u591a\u5c11\u94b1\uff09\u5c31\u76f4\u63a5return\u3002\u56e0\u4e3a\u8bb0\u5fc6\u5316\u641c\u7d22\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u904d\u5386\u4e00\u6b21\uff0c\u6240\u4ee5\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u590d\u6742\u5ea6\u5e94\u8be5\u662fO(n)\u3002\n\n\u53e6\u5916\u6211\u7684\u7801\u98ce\u6709\u70b9\u5947\u602a\uff0c\u5148\u89e3\u91ca\u4e00\u4e0b\uff1astk[tk]\u5206\u522b\u662f\u6808\u548c\u6808\u7684\u6307\u9488\uff08tarjan\u7528\uff09\uff0cnum\u8868\u793a\u8054\u901a\u5757\u4e2a\u6570\uff0ctim\u65f6\u95f4\u6233\uff0cshuyu[i]\u8868\u793a\u70b9i\u5c5e\u4e8e\u54ea\u4e2a\u8054\u901a\u5757\uff0che[]\u8868\u793a\u67d0\u4e2a\u8054\u901a\u5757\u5185\u603b\u5171\u6709\u591a\u5c11\u94b1\uff0cvis[]\u8868\u793a\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u6808\u4e2d\uff0cjiuba[]\u8868\u793a\u67d0\u4e2a\u70b9\u662f\u5426\u6709\u9152\u5427\uff0csuojb[]\u8868\u793a\u7f29\u70b9\u540e\u7684\u8fde\u901a\u5757\u4e2d\u662f\u5426\u6709\u9152\u5427\u3002bian[],head[],ecnt\u90fd\u662f\u7f29\u70b9\u524d\u56fe\u4e2d\u7684\u8fb9\uff0c\u5982\u679c\u540e\u9762\u6709\u540e\u7f00x\uff0c\u5219\u8868\u793a\u7f29\u70b9\u540e\u65b0\u56fe\u4e2d\u7684\u8fb9\uff1b\n## AC\u4ee3\u7801\u5982\u4e0b\uff0c\u5177\u4f53\u770b\u6ce8\u91ca\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=500005;\nint n,m,ecnt,s,p,tk,num,tim,ecntx,ans;\nint qian[N],head[N],dfn[N],low[N],stk[N],shuyu[N],he[N],headx[N],jiyi[N];\nbool vis[N],jiuba[N],suojb[N];\nstruct aaa\n{\n\tint to,nxt;\n}bian[N],bianx[N];\ninline int read()//\u6807\u51c6\u5feb\u8bfb\n{\n    int x=0;bool f=0;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+c-'0';c=getchar();}\n    return f?-x:x;\n}\ninline void add(int a,int b)//\u94fe\u5f0f\u524d\u5411\u661f\u52a0\u8fb9\uff1b\n{\n\tbian[++ecnt].to=b;\n\tbian[ecnt].nxt=head[a];\n\thead[a]=ecnt;\n}\ninline void addx(int a,int b)//\u7f29\u70b9\u540e\u8054\u901a\u5757\u4e0e\u8054\u901a\u5757\u52a0\u8fb9\uff1b\n{\n\tbianx[++ecntx].to=b;\n\tbianx[ecntx].nxt=headx[a];\n\theadx[a]=ecntx;\n}\nvoid tarjan(int u)//\u6807\u51c6tarjan\n{\n\tdfn[u]=low[u]=++tim;\n\tstk[++tk]=u;vis[u]=1;\n\tfor(int i=head[u];i;i=bian[i].nxt)\n\t{\n\t\tint v=bian[i].to;\n\t\tif(!dfn[v])\n\t\t\ttarjan(v),low[u]=min(low[u],low[v]);\n\t\telse if(vis[v])low[u]=min(low[u],low[v]);\n\t}\n\tif(dfn[u]==low[u])\n\t{\n\t\tnum++;\n\t\twhile(stk[tk]!=u)\n\t\t{\n\t\t\tshuyu[stk[tk]]=num;//\u8bb0\u5f55\u70b9\u5c5e\u4e8e\u7684\u8054\u901a\u5757\uff1b\n\t\t\tvis[stk[tk]]=0;\n\t\t\tstk[tk]=0;tk--;\n\t\t}\n\t\tshuyu[stk[tk]]=num;//\u6b64\u65f6\u6808\u9876\u8fd8\u6709\u4e00\u4e2a\u70b9\u5728\u6b64\u8054\u901a\u5757\u4e2d\uff0c\u518d\u6267\u884c\u4e00\u6b21\n\t\tvis[stk[tk]]=0;\n\t\tstk[tk]=0;tk--;\n\t}\n}\nvoid suo()//\u7f29\u70b9\uff1b\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\the[shuyu[i]]+=qian[i];//\u66f4\u65b0\u6bcf\u4e2a\u8054\u901a\u5757\u5185\u7684\u603b\u94b1\u6570\n\t\tif(jiuba[i])suojb[shuyu[i]]=1;\u66f4\u65b0\u8054\u901a\u5757\u5185\u662f\u5426\u6709\u9152\u5427\n\t\tfor(int j=head[i];j;j=bian[j].nxt)\n\t\t{\n\t\t\tint v=bian[j].to;\n\t\t\tif(shuyu[i]!=shuyu[v])\n\t\t\t\taddx(shuyu[i],shuyu[v]);//\u5982\u679c\u8d77\u70b9\u548c\u7ec8\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u5c31\u5728\u8fd9\u4e24\u4e2a\u8054\u901a\u5757\u4e4b\u95f4\u52a0\u8fb9\uff1b\n\t\t}\n\t}\n}\nint dfs(int dian)//\u7f29\u4e86\u70b9\uff0c\u65b0\u56fe\u4e3a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u6b64\u65f6\u624d\u80fddfs\n{\n\tif(jiyi[dian])return jiyi[dian];//\u5982\u679c\u8fd9\u4e2a\u8054\u901a\u5757\u5df2\u7ecf\u88ab\u641c\u7d22\u8fc7\uff0c\u5373\u6211\u4eec\u77e5\u9053\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u7684\u6700\u5927\u94b1\u6570\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\uff1b\n\tif(headx[dian]==0&&suojb[dian]==1)//\u5982\u679c\u8fd9\u4e2a\u8054\u901a\u5757\u51fa\u5ea6\u4e3a0\u5e76\u4e14\u6b64\u5904\u6709\u9152\u5427\uff0c\u5c31\u53ef\u4ee5\u5728\u6b64\u5904\u505c\u6b62\uff0c\u8fd4\u56de\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u603b\u94b1\u6570\uff1b\n\t{\n\t\tjiyi[dian]=he[dian];\n\t\treturn he[dian];\n\t}\n\tif(headx[dian]==0&&suojb[dian]==0)return 0;//\u5982\u679c\u8fd9\u4e2a\u8054\u901a\u5757\u51fa\u5ea6\u4e3a0\u4f46\u662f\u6ca1\u6709\u9152\u5427\uff0c\u5c31\u4e0d\u80fd\u505c\u6b62\u5728\u6b64\u5904\uff0c\u6240\u4ee5\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f0\uff1b\n\tfor(int i=headx[dian];i;i=bianx[i].nxt)\n\t{\n\t\tjiyi[dian]=max(jiyi[dian],dfs(bianx[i].to));//\u4e00\u4e2a\u8054\u901a\u5757\u7684\u591a\u4e2a\u51fa\u5ea6\u4e2d\u53d6\u4e00\u4e2a\u6700\u5927\u7684\uff1b\n\t}\n\tif(jiyi[dian]==0&&suojb[dian]==0)return 0;\n   \t//\u6ce8\u610f\uff1a\u6211\u4eec\u6b64\u65f6\u5c11\u8003\u8651\u4e86\u4e00\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u4e00\u6761\u8def\u5f84\u4e0a\u4e00\u8fde\u4e32\u7684\u70b9\u90fd\u6ca1\u6709\u9152\u5427\uff0c\u90a3\u4e48\u52ab\u532a\u662f\u4e0d\u53ef\u4ee5\u5728\u8fd9\u6761\u8def\u5f84\u4e0a\u505c\u4e0b\u7684\uff0c\u4f46\u5982\u679c\u6ca1\u4e86\u8fd9\u53e5\u8bdd\uff0c\u7a0b\u5e8f\u8fd8\u662f\u4f1a\u8d70\u8fd9\u6761\u8def\uff1b\u52a0\u4e0a\u8fd9\u53e5\u8bdd\uff0c\u5982\u679c\u540e\u9762\u7684\u70b9\u6ca1\u6709\u9152\u5427 \u5e76\u4e14 \u6b64\u5904\u4e5f\u6ca1\u6709\u9152\u5427\uff0c\u90a3\u4e48\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f0,\u76f4\u63a5return 0;\n\tjiyi[dian]+=he[dian];//\u628a\u81ea\u5df1\u7684\u70b9\u6743\u52a0\u8fdb\u8bb0\u5fc6\u5316\u6570\u7ec4\u4e2d\uff1b\n\treturn jiyi[dian];//\u8fd4\u56de\u4ece\u8fd9\u70b9\u5f00\u59cb\u7684\u6700\u5927\u94b1\u6570\uff1b\n}\nint main()\n{\n\tint a,b;\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\ta=read();b=read();\n\t\tadd(a,b);\n                //\u6709\u4e2a\u5947\u602a\u7684\u9519\u8bef\uff0c\u4e0d\u80fd\u5199add(read(),read());\u5426\u5219\u4f1a\u51fa\u9519\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff1b\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tqian[i]=read();\n\ts=read();p=read();\n\tfor(int i=1;i<=p;i++)\n\t\tjiuba[read()]=1;\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\tsuo();\n\tans=dfs(shuyu[s]);\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1563377377,
        "uid": 119288,
        "name": "zhenyan2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u4e0e[Luogu P2656 ](https://www.luogu.org/problemnew/show/P2656)\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002            \n\u8fd9\u4e00\u9898\u7684\u505a\u6cd5\u57fa\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8b\u5b9e:\n```\n\u4e0a\u5e1d\u8bf4\uff0c\u4e16\u754c\u4e0a\u6709\u4e24\u79cd\u70b9(\u4eba)\uff0c\n\u4e00\u79cd\u662f\u5728\u73af\u5185\u7684(\u5927\u62ec\u53f7\u6362\u884c\u7684)\uff0c\n\u4e00\u79cd\u662f\u5728\u73af\u95f4\u7684(\u5927\u62ec\u53f7\u4e0d\u6362\u884c\u7684)\n```\n\u65e2\u7136\u4e0a\u5e1d\u4ed6\u8001\u4eba\u5bb6\u90fd\u8fd9\u6837\u8bf4\u4e86\uff0c\u6211\u4eec\u5c31~~\u52c9\u4e3a\u5176\u96be\u5730~~\u770b\u770b\u6362\u5728\u8fd9\u4e00\u9898\u91cc\u9762\u6709\u4ec0\u4e48\u610f\u4e49\u5427\u3002       \n\u5176\u5b9e\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\uff0c\u5728\u4e00\u4e2a\u73af\u5185\u7684\u6240\u6709\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u62a2\u4e86\u73af\u5185\u7684\u4e00\u4e2a\u70b9\uff0c\u5c31\u53ef\u4ee5\u5c06\u73af\u5185\u6240\u6709\u70b9\u62a2\u5149\uff0c\u5c82\u4e0d\u7f8e\u54c9?       \n\u4e8e\u662f\u6211\u4eec\u8dd1\u4e00\u8fb9Tarjan\uff0c\u5c06\u56fe\u7f29\u6210\u4e00\u4e2aDAG\u3002     \nTarjan\u7b97\u6cd5\u8fc7\u7a0b(\u4f1a\u7684\u53ef\u4ee5\u8df3\u8fc7\u4e86):      \ntarjan\u7b97\u6cd5\u57fa\u4e8e\u65f6\u95f4\u6233\u4e0edfs\u5b9e\u73b0\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u70b9\u88ab\u53d1\u73b0\u7684\u65f6\u95f4\u5b58\u5165dfn\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u5c06\u4e00\u4e2a\u70b9\u591f\u8ffd\u6eaf\u5230\u7684\u6700\u65e9\u7684\u6808\u4e2d\u8282\u70b9\u7684\u6b21\u5e8f\u8ba1\u5165low\u6570\u7ec4\u4e2d\u3002        \n\u6211\u4eec\u6765\u8fc7\u4e00\u904d\u7b97\u6cd5\u6d41\u7a0b\uff1a\n1.\u521d\u59cb\u5316:\n```cpp\nvoid tarjan(int u)\n{\n    low[u]=dfn[u]=++now;\n    hep[++top]=u;vis[u]=1;\n```\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0ctarjan\u7684\u521d\u59cb\u5316\u4e2d\u8981\u5b8c\u62102\u4e2a\u5de5\u4f5c:     \n\u2460.\u66f4\u65b0\u65f6\u95f4\u6233\u4e0elow\u6570\u7ec4      \n\u2461.\u5c06\u8282\u70b9\u538b\u6808\u5e76\u6253\u4e0a\u6807\u8bb0       \n2.tarjan\u4e3b\u8fc7\u7a0b:\n```cpp\n    for(int i=head[u];i!=-1;i=a[i].next)\n    {\n\t\tint v=a[i].to;\n\t\tif(!dfn[v]){tarjan(v);low[u]=min(low[u],low[v]);}\n        \telse if(vis[v])low[u]=min(low[u],dfn[v]);\n    }\n```\n\u6211\u4eec\u6765\u6162\u6162\u5206\u6790\u5b83\uff1a    \n\u6211\u4eec\u9996\u5148\u904d\u5386\u6bcf\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u5bf9\u80fd\u5230\u8fbe\u7684\u70b9\u8fdb\u884c\u8bbf\u95ee:     \n```cpp\n    for(int i=head[u];i!=-1;i=a[i].next)\n    {\n\t\tint v=a[i].to;\n```\n\u6211\u4eec\u9700\u8981\u5206\u51fa\u4e09\u79cdv\u70b9\uff1a     \n1.\u4ece\u6ca1\u8bbf\u95ee\u8fc7\u7684     \n\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\uff0c\u6211\u4eec\u5c06\u5b83\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u70b9\uff0c\u9012\u5f52\u5730\u8fdb\u884ctarjan\u8fc7\u7a0b\u3002    \n\u5728tarjan\u7ed3\u675f\u540e\uff0c\u66f4\u65b0\u5b83\u7684low\u6570\u7ec4\u3002      \n\u4f60\u53ef\u4ee5\u628a\u66f4\u65b0\u7684\u8fc7\u7a0b\u7406\u89e3\u6210\u4ecetarjan\u8fc7\u7a0b\u91cc\u56de\u4f20\u6765\u4e86\u5b83\u7684low\u503c\uff0c\u6211\u4eec\u5c06\u5b83\u7684low\u503c\u4e0e\u73b0\u5728\u8fd9\u4e2a\u8282\u70b9\u7684low\u503c\u6bd4\u8f83\uff0c\u5e76\u53d6\u8f83\u5c0f\u503c\u3002\n```cpp\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n```\n2.\u8bbf\u95ee\u8fc7\uff0c\u5e76\u5728\u6808\u91cc\u7684       \n\u8fd9\u79cd\u8282\u70b9\u662f\u53ef\u4ee5\u5230\u8fbe\u5f53\u524d\u8282\u70b9\u7684\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u8fd9\u6837\u4e00\u4e2a\u70b9\uff0c\u5c31\u662f\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4e8e\u662f\u6211\u4eec\u5bf9\u5f53\u524d\u70b9\u7684low\u503c\u8fdb\u884c\u66f4\u65b0\n```cpp\n        else if(vis[v])low[u]=min(low[u],dfn[v]);\n```\n3.\u8bbf\u95ee\u8fc7\uff0c\u4f46\u4e0d\u5728\u6808\u91cc\u7684          \n\u90fd\u4e0d\u80fd\u5230\u8fbe\u4f60\uff0c\u8ddf\u4f60\u6709\u4ec0\u4e48\u5173\u7cfb\u5417\uff0c\u76f4\u63a5\u5ffd\u89c6\u6389\u5c31\u884c\u4e86\u3002      \n3.\u9000\u6808:\n```cpp\n    if(dfn[u]==low[u])\n    {\n        ++tot;\n        vis[u]=0;\n        while(hep[top+1]!=u)\n        {\n            fa[hep[top]]=tot;\n            vis[hep[top--]]=0;\n        }\n    }\n}\n```\n\u6574\u4e2a\u9000\u6808\u8fc7\u7a0b\u5c31\u662f\u8bb0\u5f55\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8fc7\u7a0b\uff0c\u4e0b\u9762\u6211\u5c31\u6765\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b\u3002         \n\u9000\u6808\u7684\u6761\u4ef6\u662f```dfn[u]==low[u]```\uff0c\u4ee3\u8868\u7740\u6211\u4eec\u7684\u904d\u5386\u8fc7\u7a0b\u5df2\u7ecf\u89e6\u5e95\uff0c\u5e76\u4e14\u56de\u6eaf\u56de\u6765\u4e86\u3002      \n\u5728\u6211\u4eec\u5f53\u524d\u70b9\u4e0a\u65b9\u7684\u90fd\u662f\u4ec0\u4e48\u70b9\u5462\uff1f\u90fd\u662f\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u5168\u90e8\u53d6\u51fa\uff0c\u5e76\u8bb0\u5f55\u8fdb\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d(\u4e00\u822c\u7ba1\u8fd9\u4e2a\u53eb\u201c\u67d3\u8272\u201d)\u3002       \ntarjan\u7f29\u70b9\u8fc7\u7a0b\u5b8c\u6574\u4ee3\u7801:\n```cpp\nvoid tarjan(int u)\n{\n    low[u]=dfn[u]=++now;\n    hep[++top]=u;vis[u]=1;\n    for(int i=head[u];i!=-1;i=a[i].next)\n    {\n\t\tint v=a[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n        else if(vis[v])low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u])\n    {\n        ++tot;\n        vis[u]=0;\n        while(hep[top+1]!=u)\n        {\n            fa[hep[top]]=tot;\n            vis[hep[top--]]=0;\n        }\n    }\n}\n```\n\u6709\u4e86\u8fd9\u4e2a\u6709\u529b\u6b66\u5668\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u770b\u770b\u5b8c\u6574\u7684\u7b97\u6cd5\u6d41\u7a0b\u4e86\u3002         \n1.\u5efa\u56fe:\n```cpp\nint main()\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d\",&n,&m);\n    while(m--)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        addedge(x,y);\n        edges[cnt].from=x;\n        edges[cnt].to=y;\n    }\n    for(int i=1;i<=n;i++)scanf(\"%d\",&p[i]);\n    scanf(\"%d%d\",&s,&m);\n    for(int i=1;i<=m;i++){int x;scanf(\"%d\",&x);isbar[x]=1;}\n```\n2.\u6211\u4eec\u628a\u56fe\u5efa\u597d\u4e4b\u540e\uff0c\u8fd8\u8981\u91cd\u65b0\u5efa\u56fe(\u8fd9\u5c31\u662f\u524d\u9762\u7684edges\u6570\u7ec4\u7684\u4f5c\u7528)\u3002        \n```cpp\n    tarjan(s);\n    memset(vis,0,sizeof(vis));\n    memset(head,-1,sizeof(head));\n    memset(a,0,sizeof(a));\n    for(int i=0;i<=cnt-1;i++)\n    {\n        int u,v;\n        u=edges[i].from;\n        v=edges[i].to;\n        if(!fa[u]||!fa[v])continue;\n        if(fa[u]==fa[v]){int x=fa[u];if(isbar[u]||isbar[v])flg[x]=1;}\n        else{addedge(fa[u],fa[v]);if(isbar[u])flg[fa[u]]=1;if(isbar[v])flg[fa[v]]=1;in[fa[v]]++;}\n    }\n    for(int i=1;i<=n;i++)dq[fa[i]]+=p[i];\n```\n\u8fd9\u4e9b\u641e\u5b9a\u4e4b\u540e\uff0c\u8fd9\u4e00\u9898\u57fa\u672c\u5c31\u6ca1\u6709\u96be\u5ea6\u4e86\u3002      \n\u5269\u4e0b\u7684\u5c31\u662f\u6c42\u6700\u5927\u70b9\u6743\u548c\uff0ctopo+dp\u5373\u53ef\u3002     \n\uff08\u987a\u5e26\u4e00\u63d0\uff0cspfa\u4e5f\u53ef\u4ee5\u6c42\u6700\u5927\u70b9\u6743\u548c\uff0c\u4f46topo\u597d\u5199\u554a\uff09      \n```cpp\n    solve(fa[s]);\n    int ans(-1);\n    for(int i=1;i<=tot;i++)if(flg[i])ans=max(d[i],ans);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\nsolve\u51fd\u6570(\u53ef\u66ff\u6362\u4e3aspfa):\n```cpp\nvoid solve(int s)\n{\n    memset(d,-INF,sizeof(d));\n    memset(vis,0,sizeof(vis));\n    queue<int> q;\n    q.push(s);\n    d[s]=dq[s];\n    vis[s]=1;\n    while(!q.empty())\n    {\n        int t=q.front();\n        q.pop();\n        vis[t]=0;\n        for(int i=head[t];i!=-1;i=a[i].next)\n        {\n            int v=a[i].to;\n            d[v]=max(d[v],d[t]+dq[v]);\n            if(!(--in[v])){q.push(v);vis[v]=1;}\n        }\n    }\n}\n```\n\u5b8c\u6574\u4ee3\u7801:\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<ctime>\n#include<climits>\n#include<cstdlib>\n#include<algorithm>\n#include<complex>\n#include<iostream>\n#include<map>\n#include<queue>\n#include<vector>\n#define INF 0x3f3f3f3f\n#define ll long long\nusing namespace std;\nstruct node\n{\n    int to,next;\n}a[2000020];\nint head[1000010];\nint cnt(0);\nvoid addedge(int xi,int yi)\n{\n    a[cnt].to=yi;\n    a[cnt].next=head[xi];\n    head[xi]=cnt++;\n}\nstruct arcs\n{\n    int from,to;\n}edges[2000020];\nint dfn[1000010];\nint low[1000010];\nint p[1000010];\nint dq[1000010];\nint d[1000010];\nint fa[1000010];\nint isbar[1000010];\nint vis[1000010];\nint flg[1000010];\nint in[1000010];\nint now(0);\nint hep[1000010];\nint top(0);\nint tot(0);\nint n,m,s;\nvoid tarjan(int u)\n{\n    low[u]=dfn[u]=++now;\n    hep[++top]=u;vis[u]=1;\n    for(int i=head[u];i!=-1;i=a[i].next)\n    {\n        int v=a[i].to;\n        if(!dfn[v])\n        {\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(vis[v])low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u])\n    {\n        ++tot;\n        vis[u]=0;\n        while(hep[top+1]!=u)\n        {\n            fa[hep[top]]=tot;\n            vis[hep[top--]]=0;\n        }\n    }\n}\nvoid solve(int s)\n{\n    memset(d,-INF,sizeof(d));\n    memset(vis,0,sizeof(vis));\n    queue<int> q;\n    q.push(s);\n    d[s]=dq[s];\n    vis[s]=1;\n    while(!q.empty())\n    {\n        int t=q.front();\n        q.pop();\n        vis[t]=0;\n        for(int i=head[t];i!=-1;i=a[i].next)\n        {\n            int v=a[i].to;\n            d[v]=max(d[v],d[t]+dq[v]);\n            if(!(--in[v])){q.push(v);vis[v]=1;}\n        }\n    }\n}\nint main()\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d\",&n,&m);\n    while(m--)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        addedge(x,y);\n        edges[cnt].from=x;\n        edges[cnt].to=y;\n    }\n    for(int i=1;i<=n;i++)scanf(\"%d\",&p[i]);\n    scanf(\"%d%d\",&s,&m);\n    for(int i=1;i<=m;i++){int x;scanf(\"%d\",&x);isbar[x]=1;}\n    tarjan(s);\n    memset(vis,0,sizeof(vis));\n    memset(head,-1,sizeof(head));\n    memset(a,0,sizeof(a));\n    for(int i=0;i<=cnt-1;i++)\n    {\n        int u,v;\n        u=edges[i].from;\n        v=edges[i].to;\n        if(!fa[u]||!fa[v])continue;\n        if(fa[u]==fa[v]){int x=fa[u];if(isbar[u]||isbar[v])flg[x]=1;}\n        else{addedge(fa[u],fa[v]);if(isbar[u])flg[fa[u]]=1;if(isbar[v])flg[fa[v]]=1;in[fa[v]]++;}\n    }\n    for(int i=1;i<=n;i++)dq[fa[i]]+=p[i];\n    solve(fa[s]);\n    int ans(-1);\n    for(int i=1;i<=tot;i++)if(flg[i])ans=max(d[i],ans);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1544779954,
        "uid": 105496,
        "name": "KevinYu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u539f\u9898\u94fe\u63a5[\u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011](https://www.luogu.org/problem/P3627)\n\n\u7f29\u70b9\uff0c\u6c34\u9898\u4e00\u9053~~\n\n\u9898\u610f\n\n\t\t\u5927\u6982\u5c31\u662f\u8981\u6c42\u4e00\u4e2a\u4ece 1 \u5f00\u59cb\u7684\u8def\u5f84\uff0c\n\n\t\t\u8981\u6c42\u7ed3\u675f\u7684\u4e00\u4e2a\u70b9\u662f\u6709\u9152\u5427\uff0c\n\n\t\t\u8def\u5f84\u4e0a\u70b9\u53ef\u91cd\u590d\u7ecf\u8fc7\uff0c\u4f46\u540c\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u53ea\u8ba1\u7b97\u4e00\u6b21\u3002\n\n~~\u8fd9\u4e00\u770b\u5c31\u662f\u7f29\u70b9\u4e86\u5566~~\n\n**\u53ef\u91cd\u590d\u7ecf\u8fc7**~~\uff0c\n\n\u8fd9\u53e5\u8bdd\u7ecf\u5e38\u5c31\u662f\u6211\u4eec\u5224\u65ad\u4e00\u9053\u56fe\u4e0a\u7684\u9898\u662f\u5426\u5c31\u662f tarjan ~~\u6c34~~\u9898\u7684\u6807\u51c6\n\n\u90a3\u4e48\u672c\u9898\uff0c\u7f29\u5b8c\u70b9\u4e86\uff0c\u5efa\u5b8c\u65b0\u56fe\u4e86\uff0c\u7136\u540e\u5462~~\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\u662f\u5728\u65b0\u56fe\u4e0a\u8dd1\u4e00\u8fb9\u6700\u957f\u8def\uff08\u548c\u6700\u77ed\u8def\u51e0\u4e4e\u4e00\u6837\uff09\n\n\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6362\u6210 dp , \u6216\u8005\u8bb0\u641c\u4ec0\u4e48\u7684\n\n\u7136\u540e\u5728\u6240\u6709\u7684\u6709\u9152\u5427\u7684\u8fde\u901a\u5757\u91cc\u9009\u62e9\u4e00\u4e2a\u6700\u4f18\u7684\n\n\u65b0\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u8dd1\u6700\u77ed\u8def\n\n\u70b9\u6743\u8f6c\u8fb9\u6743~~\n\n\u600e\u4e48\u4e2a\u8f6c\u6cd5\uff1f\n\n\u6211\u89c9\u5f97\u6211\u7684\u601d\u8def\u4e0d\u9519\uff0c\u56e0\u6b64\u53d1\u4e86\u8fd9\u7bc7\u9898\u89e3\n\n**\u62c6\u70b9\uff0c\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u8be5\u8fb9\u8fb9\u6743\u5373\u4e3a\u8be5\u70b9\u70b9\u6743**\n\n\u7136\u540e\u8dd1 spfa \u6700\u957f\u8def\u5c31\u597d\u4e86\n\n\u7ed9\u51fa\u4ee3\u7801\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <cmath>\n\nusing namespace std;\nconst int maxn = 5e5 + 10;\nconst int INF = 1 << 25;\n\ninline int read() {\n    char c = getchar(); int x = 0, f = 1;\n    for (; c > '9' || c < '0'; c = getchar()) if (c == '-') f = -1;\n    for (; c >='0' && c <='9'; c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n    return x * f;\n}\n\nint a[maxn], id[maxn], sum[maxn], stack[maxn], top, gg, k;\nint dis[maxn << 1], ver[maxn], nxt[maxn], head[maxn], tot;\nvector <int> h[maxn << 1], hh[maxn << 1];\nint p[maxn], dfn[maxn], low[maxn], cnt;\nbool ins[maxn], vis[maxn << 1];\nint n, m, u, v, S, P, ans;\nqueue <int> q;\n\nvoid add_edge () {\n    u = read(), v = read();\n    ver[++ tot] = v;\n    nxt[tot] = head[u];\n    head[u] = tot;\n}\n\nvoid tarjan (int x) {\n    dfn[x] = low[x] = ++ cnt;\n    stack[++ top] = x;\n    ins[x] = 1;\n    for (register int i = head[x]; i; i = nxt[i]) {\n        if (!dfn[ver[i]])\n            tarjan (ver[i]), low[x] = min (low[x], low[ver[i]]);\n        else if (ins[ver[i]])\n            low[x] = min (low[x], dfn[ver[i]]);\n    }\n    if (dfn[x] == low[x]) {\n        ++ gg;\n        do {\n            k = stack[top --];\n            ins[k] = 0;\n            id[k] = gg;\n            sum[gg] += a[k];\n        } while (x != k);\n    }\n}\n\nvoid djj () {\n    n = read(), m = read();\n    for (; m; m --)\n        add_edge ();\n    for (register int i = 1; i <= n; i ++)\n        a[i] = read();\n    for (register int i = 1; i <= n; i ++)\n        if (!dfn[i]) tarjan (i);\n    S = read(), P = read();\n    for (register int i = 1; i <= P; i ++)\n        p[i] = read();\n}\n\nvoid lxy () {\n    for (register int i = 1; i <= n; i ++)\n        for (register int j = head[i]; j; j = nxt[j])\n            if (id[i] != id[ver[j]])\n                h[id[i] + gg].push_back (id[ver[j]]), hh[id[i] + gg].push_back (0);\n    for (register int i = 1; i <= gg; i ++)\n        h[i].push_back (i + gg), hh[i].push_back (sum[i]);\n    memset (dis, - INF, sizeof dis);\n    vis[id[S]] = 1, dis[id[S]] = 0;\n    q.push (id[S]);\n    for (; !q.empty (); ) {\n        int u = q.front ();\n        q.pop (), vis[u] = 0;\n        for (register int i = 0; i < h[u].size(); i ++) {\n            int v = h[u][i], w = hh[u][i];\n            if (dis[v] < dis[u] + w) {\n                dis[v] = dis[u] + w;\n                if (!vis[v]) {\n                    q.push (v);\n                    vis[v] = 1;\n                }\n            }\n        }\n    }\n    for (register int i = 1; i <= P; i ++)\n        ans = max (ans, dis[id[p[i]] + gg]);\n    printf (\"%d\\n\", ans);\n}\n\nvoid djj_lxy () {\n    djj (), lxy ();\n}\n\nint main() {\n    djj_lxy ();\n}\n\n/* \u6837\u4f8b\uff0c\u672c\u9898\u6837\u4f8b\u8fd8\u7b97\u4e0d\u9519\u4e86\n6 7\n1 2\n2 3\n3 5\n2 4\n4 1\n2 6\n6 5\n10\n12\n8\n16\n1\n5\n1 4\n4 3 5 6\n\n47\n*/\n\n```\n\n\u672c\u9898\u5c31\u5b8c\u4e86\uff0c\u5b8c\u7ed3\u6492\u82b1~~\n\n\u8ddd\u79bb\u65b0 Noip \u8fd8\u6709\u4e0d\u5230 2 \u4e2a\u6708\u7684\u65f6\u95f4\uff0c\u795d\u5927\u5bb6 rp ++\n\n\u4e5f\u5e0c\u671b\u81ea\u5df1\u80fd\u66f4\u52aa\u529b\u4e00\u4e9b\uff0c**\u52a0\u6cb9\uff01**\n",
        "postTime": 1568625383,
        "uid": 162867,
        "name": "shame_djj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\n### \u9898\u76ee\u7ffb\u8bd1:\n\n\u7ed9\u51fa\u4e00\u4e2a\u6709\u5411\u6709\u73af\u56fe\uff0cn\u4e2a\u8282\u70b9\uff0cm\u6761\u6709\u5411\u8fb9\u3002\n\n\u6c42\u4ece\u8d77\u70b9S\u5230\u591a\u4e2a\u7ec8\u70b9\u7684\u5355\u6e90\u6700\u957f\u8def\uff08\u6ce8\u610f\u6709\u53ef\u80fd\u5b58\u5728\u6b63\u73af\uff01\uff01\uff01\uff09\n\n### \u7b97\u6cd5\u5206\u6790\uff1a\n\n\u6700\u77ed\u8def+\u5f3a\u8fde\u901a\u5206\u91cf:\n\n(SPFA+Tarjan)\n\n\u9996\u5148\uff0c\u9898\u76ee\u4e2d\u8bf4\u201c\u4ece\u5e02\u4e2d\u5fc3\u5f00\u59cb\u5230\u67d0\u4e2a\u9152\u5427\u7ed3\u675f\u6240\u80fd\u62a2\u52ab\u7684\u6700\u591a\u7684\u73b0\u91d1\u603b\u6570\u201d\uff0c\u4ece\u4e00\u4e2a\u5730\u65b9\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\uff0c\u6c42\u6700\u957f\uff0c\u5f88\u81ea\u7136\u5730\u60f3\u5230\u5355\u6e90\u6700\u957f\u8def\u3002\u81f3\u4e8e\u5982\u4f55\u6c42\u5355\u6e90\u6700\u957f\u8def\uff0c\u540e\u9762\u4f1a\u89e3\u91ca\u3002\n\n\u4f46\u662f\uff0c\u56fe\u4e2d\u6709\u53ef\u80fd\u5b58\u5728\u6b63\u73af\u3002\u6309\u7167\u5e38\u7406\u8bb2\uff0c\u201c\u6700\u957f\u8def\u201d\u5c31\u662f\u8dd1\u5f97\u8d8a\u591a\u8d8a\u597d\u3002\u5982\u679c\u5b58\u5728\u6b63\u73af\uff0c\u5f88\u663e\u7136\u4f1a\u4e0d\u505c\u5730\u5728\u8fd9\u4e2a\u73af\u4e2d\u904d\u5386\u3002\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u6700\u4f18\u89e3\u3002\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u9898\u76ee\u8bf4\u201c\u53ea\u8981\u4ed6\u62a2\u52ab\u8fc7\u67d0\u4e2a ATM \u673a\u540e\uff0c\u8be5 ATM \u673a \u91cc\u9762\u5c31\u4e0d\u4f1a\u518d\u6709\u94b1\u4e86\u3002\u201d\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u80fd\u7ecf\u8fc7\u91cd\u590d\u7684\u8def\u5f84\uff0c\u65e2\u6bcf\u4e2a\u73af\u53ea\u80fd\u8dd1\u4e00\u6b21\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u8fd9\u79cd\u60c5\u51b5\uff01\uff01\uff01\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6b63\u73af\uff0c\u6211\u4eec\u600e\u4e48\u5904\u7406\u5462\uff1f\n\n\u5176\u5b9e\uff0c\u73af\u5c31\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u56fe\u4e2d\u4efb\u610f\u4e24\u70b9\u90fd\u4e92\u76f8\u8fde\u901a\u7684\u5b50\u56fe\uff09\u3002\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528Tarjan\uff08\u4e00\u79cd\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7b97\u6cd5\uff09\u7f29\u70b9\uff0c\u7136\u540e\u5f62\u6210\u7684\u65b0\u70b9\u7684\u6743\uff08\u6216\u8005\u8bf4\u80fd\u62a2\u5230\u7684\u94b1\u5427\uff09\u5c31\u662f\u4e4b\u524d\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6240\u6709\u70b9\u6743\u7684\u548c\u3002\n\n\u8bc1\u660e\uff1a\u4e00\u65e6\u8fdb\u5165\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u4e4b\u540e\uff0c\u56e0\u4e3a\u8981\u6c42\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u4e0d\u505c\u5730\u904d\u5386\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u6240\u6709\u70b9\u4e00\u5b9a\u4e0d\u4f1a\u6bd4\u5176\u4ed6\u51b3\u7b56\u5dee\u3002\n\n\u5173\u4e8e\u5982\u4f55\u6c42\u6700\u957f\u8def\uff1a\n\n\u56e0\u4e3a\u9898\u76ee\u7ed9\u7684\u662f\u70b9\u6743\uff0c\u6211\u4eec\u9700\u8981\u70b9\u6743\u8f6c\u8fb9\u6743\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u70b9\u6240\u6709\u5165\u8fb9\u7684\u8fb9\u6743\u7b49\u4e8e\u8fd9\u4e2a\u70b9\u7684\u8fb9\u6743\u3002\n\n\u56e0\u4e3a\u7ad9\u5728\u8d77\u70b9\u4e0a\uff0c\u4e0d\u9700\u8981\u8d70\u8def\u4e5f\u53ef\u4ee5\u62a2\u8fd9\u4e2a\u70b9\uff0c\u6240\u4ee5\u8d77\u70b9\u7684dis\u662f\u5b83\u81ea\u5df1\u7684\u70b9\u6743\u3002\n\n\u81f3\u4e8e\u6700\u957f\uff1a\n\n\u5982\u679c\u4e00\u4e2a\u6570\u662f\u6b63\u6570\uff0c\u90a3\u4e48\u5b83\u672c\u8eab\u8d8a\u5927\uff0c\u5b83\u7684\u76f8\u53cd\u6570\u8d8a\u5c0f\u3002\n\u6240\u4ee5\u6211\u4eec\u5c31\u628a\u6240\u6709\u8fb9\u6743\u90fd\u4e58-1\uff0c\u6309\u7167\u6700\u77ed\u8def\u8dd1\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848\u65f6\u518d\u4e58-1\u5c31OK\u4e86\uff01\uff01\uff01\n\n\u56e0\u4e3a\u591a\u4e2a\u7ec8\u70b9\uff0c\u6240\u4ee5\u8fd8\u8981\u518d\u626b\u4e00\u904d\u3002\n\n### \u6700\u540e\uff0c\u518d\u634b\u4e00\u904d\u601d\u8def\uff1a\n\u901a\u8fc7\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9\uff08\u7edf\u8ba1\u70b9\u6743\uff09->\u70b9\u6743\u8f6c\u8fb9\u6743 -> \u8fb9\u6743\u4e58-1-> \u6c42\u6700\u957f\u8def -> \u7edf\u8ba1\u7b54\u6848\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<stack>\n#include<queue>\n#include<map>\n\n#define maxn 500001\n#define maxm 500001\n\n#define INF 0x7fffffff/2\n\nusing namespace std;\n\nint cnt;\nint cnt1;\nstruct Node{\n\tint head;\n\tint dfn,low;\n\tint color;\n\tint dis;\n\tint len;\n\tbool vis;\n}node[maxn],car[maxn];\n//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nstruct Edge{\n\tint next;\n\tint to;\n\tint from;\n}edge[maxm],edg[maxm];\n//\u6211\u5b58\u4e86\u4e24\u4e2a\u56fe\uff0c\u4e00\u4e2a\u662f\u539f\u6765\u7684\uff0c\u53e6\u4e00\u4e2a\u662f\u7f29\u70b9\u4ee5\u540e\u7684\n\nint n,m,S,P;\nint u,v,p[maxn];\n\nint deep,col;//Tarjan\u65f6\u95f4\u6233\n\nstack<int>s;\n\nvoid add_edge(int u,int v)\n{\n\tedge[++cnt].next=node[u].head;\n\tedge[cnt].from=u;\n\tedge[cnt].to=v;\n\tnode[u].head=cnt;\n}\n//\u5b58\u8fb9\n\nvoid Add_edge(int u,int v)\n{\n\tedg[++cnt1].next=car[u].head;\n\tedg[cnt1].to=v;\n\tcar[u].head=cnt1;\n}\n//\u4e24\u4e2a\u56fe\uff0c\u4e24\u4e2a\u51fd\u6570\n\nvoid Tar(int u)//Tarjan\u7b97\u6cd5\n{\n\tif(!node[u].dfn){\n\t\tdeep++;\n\t\tnode[u].dfn=node[u].low=deep;\n\t\tnode[u].vis=true;\n\t\ts.push(u);\n\t}\n\tint v;\n\tfor(int e=node[u].head;e;e=edge[e].next){\n\t\tv=edge[e].to;\n\t\tif(!node[v].dfn){\n\t\t\tTar(v);\n\t\t\tnode[u].low=min(node[u].low,node[v].low);\n\t\t}\n\t\telse{\n\t\t\tif(node[v].vis){\n\t\t\t\tnode[u].low=min(node[u].low,node[v].dfn);\n\t\t\t}\n\t\t}\n\t}\n\tif(node[u].dfn==node[u].low){\n\t\tcol++;\n\t\twhile(s.top()!=u){\n\t\t\tint t=s.top();\n\t\t\tnode[t].color=col;//\u67d3\u8272\uff0c\u4ee3\u8868\u7b2c\u51e0\u4e2a\u5206\u91cf\n\t\t\tnode[t].vis=false;\n\t\t\tcar[col].len+=node[t].len;//\u7edf\u8ba1\u7f29\u5b8c\u4e4b\u540e\u70b9\u7684\u6743\n\t\t\ts.pop();\n\t\t}\n\t\ts.pop();\n\t\tnode[u].color=col;\n\t\tnode[u].vis=false;\n\t\tcar[col].len+=node[u].len;\n\t}\n}\n\n\nvoid SPFA(int s)//SPFA\u6700\u77ed\u8def\n{\n\t//\u4e00\u79cd\u989c\u8272\uff08\u6216\u8005\u8bf4\u4e00\u4e2a\u5206\u91cf\uff09\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u70b9\u6570\u5c31\u662f\u989c\u8272\u79cd\u6570\n\tfor(int i=1;i<=col;i++){\n\t\tcar[i].dis=INF;\n\t}\n\tqueue<int>q;\n\tq.push(s);\n\tcar[s].vis=true;\n\tcar[s].dis=car[s].len;//\u4e0d\u8d70\u4e5f\u53ef\u4ee5\u62a2\u94b1\n\twhile(!q.empty()){\n\t\tint u=q.front(),v;\n\t\tq.pop();\n\t\tcar[u].vis=false;\n\t\tfor(int e=car[u].head;e;e=edg[e].next){\n\t\t\tv=edg[e].to;\n\t\t\tif(car[v].dis>car[u].dis+car[v].len){\n\t\t\t\tcar[v].dis=car[u].dis+car[v].len;//\u8fd9\u91cc\u6211\u76f4\u63a5\u7528\u70b9\u6743\u4ee3\u66ff\u8fb9\u6743\uff0c\u6ca1\u6709\u76f4\u63a5\u5199\u51fa\u70b9\u6743\u8f6c\u8fb9\u6743\u7684\u8fc7\u7a0b\n\t\t\t\tif(!car[v].vis){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tcar[v].vis=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>u>>v;\n\t\tadd_edge(u,v);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>node[i].len;\n\t\tnode[i].len*=-1;//\u8fb9\u6743\u4e58-1\n\t}\n\tcin>>S>>P;\n\tfor(int i=1;i<=P;i++){\n\t\tcin>>p[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!node[i].color){\n\t\t\tTar(i);//\u9632\u6b62\u7279\u6b8a\u6570\u636e\u51fa\u73b0\u4e0d\u8fde\u901a\u7684\u56fe\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint u=edge[i].from,v=edge[i].to;\n\t\tif(node[u].color!=node[v].color){\n        //\u5982\u679c\u5c5e\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u5206\u91cf\u5c31\u52a0\u8fb9\n\t\t\tAdd_edge(node[u].color,node[v].color);\n            //\u4ee5\u70b9\u7684\u989c\u8272\uff08\u5c5e\u4e8e\u7b2c\u51e0\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff09\u4f5c\u4e3a\u4e0b\u6807\n\t\t}\n\t}\n\tint ans=INF;\n\tSPFA(node[S].color);\n\tfor(int i=1;i<=P;i++){\n\t\tans=min(ans,car[node[p[i]].color].dis);//\u7edf\u8ba1\u7b54\u6848\n\t}\n\tcout<<-ans<<endl;//\u7b54\u6848\u518d\u5012\u8fc7\u6765\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1579092416,
        "uid": 153139,
        "name": "\u98ce\u7fbd\u8dc3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": " ## P3627(\u62a2\u63a0\u8ba1\u5212\uff09\n\u8fd9\u9053\u9898\u5f00\u59cb\u7684\u65f6\u5019\u6ca1\u5565\u601d\u8def\uff0c\u4f46\u56e0\u4e3a\u4e4b\u524d\u505a\u8fc7\u7f29\u70b9\u7684\u6a21\u677f\uff0c\n\u6240\u4ee5\u5bf9\u8fd9\u6837\u7684\u9898\u76ee\u63cf\u8ff0\u5f88\u654f\u611f\uff0c\u6240\u4ee5tarjan\u7f29\u70b9\u4e5f\u5c31\u5927\u6982\u60f3\u51fa\u6765\u4e86\uff0c\u81f3\u4e8e\u539f\u56e0\uff0c\u6211\u662f\u8fd9\u6837\u60f3\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u548c\u8fb9\u90fd\u662f\u53ef\u4ee5\u91cd\u590d\u904d\u5386\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5230\u8fbe\u4e86\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u5982\u5168\u90e8\u8d70\u4e00\u904d\uff0c\u8fd9\u6837\u4e00\u5b9a\u66f4\u597d\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u7f29\u70b9\uff0c\u9501\u5b8c\u70b9\u4e4b\u540e\u7684\u6743\u503c\u4e3a\u4e4b\u524d\u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u7684\u6743\u503c\u548c\u3002\u4e4b\u540e\u6211\u4eec\u673a\u623f\u7684\u4e00\u4e2a\u795e\u4ed9\u53c8\u7ed9\u6211\u6307\u5bfc\u4e86\u4e00\u4e0b\u4e4b\u540e\u8be5\u600e\u4e48\u505a\uff1a\u6211\u4eec\u628a\u70b9\u7684\u6743\u503c\u8f6c\u5316\u4e3a\u8fb9\u7684\u6743\u503c\uff0c\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u53d8\u6210\u4ed6\u7684\u51fa\u8fb9\u7684\u6743\u503c\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u4f1a\u4f7f\u7ec8\u70b9\u7684\u6743\u503c\u4e22\u5931\uff0c\u6240\u4ee5\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u6c47\u70b9\uff0c\u8ba9\u7ec8\u70b9\u8fde\u5411\u4ed6\uff0c\u6743\u503c\u4e3a\u7ec8\u70b9\u7684\u6743\u503c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u70b9\u6743\u8f6c\u5316\u4e3a\u8fb9\u6743\uff0c\u4f46\u662f\u8fd9\u6837\u600e\u4e48\u7ef4\u62a4\u7ec8\u70b9\u5fc5\u987b\u4e3a\u9152\u5427\u5462\uff0c\u60f3\u5230\u53ef\u4ee5\u4ec5\u4ec5\u53ea\u628a\u9152\u5427\u70b9\u4e0e\u6c47\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u7ec8\u70b9\u7684\u5408\u6cd5\u6027\uff0c\u7136\u540e\u6211\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5efa\u4e86\u4e2a\u6e90\u70b9\u5411\u8d77\u70b9\u6240\u5728\u8054\u901a\u5757\u8fde\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff0c\u6700\u540e\u4ee5\u6e90\u70b9\u5f00\u59cb\uff0c\u8dd1\u4e00\u904dSPFA\u6c42\u6700\u957f\u8def\u7b54\u6848\u5c31\u51fa\u6765\u4e86\uff0c\u81f3\u4e8etarjan\u548cspfa\u672c\u849f\u84bb\u5c31\u4e0d\u8bb2\u89e3\u4e86\uff0c\u524d\u9762\u90fd\u6709\u5927\u4f6c\u7684\u8bb2\u89e3\uff0cAC\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<stack>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int maxn = 500040;\nconst int maxm = 500050;\nstruct edge{\n\tint v,nxt;\n}e[maxm];\nint weight[maxn];\nint low[maxn];\nint dfn[maxn];\nint ins[maxn];\nint used[maxn];\nint tot;\nint Head[maxn];\nstruct Edge{\n\tint v,nxt,w;\n}E[maxm];\nint head[maxn];\nint cnt;\nint dis[maxn];\nint vis[maxn];\nint color;\nint colorname[maxn];\nint n,m;\nint ans;\nint bar[maxn];\nint Bar[maxn];\nint Weight[maxn];\nstack<int>s;\nint read(){\n\tint s = 0,w = 1;\n\tchar g = getchar();\n\twhile(g < '0'||g > '9'){\n\t\tif(g == '-')\n\t\tw *= -1;\n\t\tg = getchar();\n\t}\n\twhile(g >= '0'&&g <= '9'){\n\t\ts = s * 10 + g - '0';\n\t\tg = getchar();\n\t}\n\treturn s * w;\n}\nvoid paint(int x){\n\tins[x] = 0;\n\tcolorname[x] = color;\n\tWeight[color] += weight[x];\n\tif(bar[x])\n\tBar[color] = 1;\n\ts.pop();\n}\nvoid Add(int u,int v,int w){\n\tE[++tot].nxt = Head[u];\n\tE[tot].v = v;\n\tE[tot].w = w;\n\tHead[u] = tot;\n}\nvoid add(int u,int v){\n\te[++tot].nxt = head[u];\n\te[tot].v = v;\n\thead[u] = tot;\n}\nvoid tarjan(int x){\n\tdfn[x] = low[x] = ++cnt;\n\tused[x] = ins[x] = 1;\n\ts.push(x);\n\tfor(int i = head[x];i;i = e[i].nxt){\n\t\tint y = e[i].v;\n\t\tif(!dfn[y]){\n\t\t\ttarjan(y);\n\t\t\tlow[x] = min(low[x],low[y]);\n\t\t}\n\t\telse if(ins[y])\n\t\tlow[x] = min(low[x],dfn[y]);\n\t}\n\tif(low[x] == dfn[x]){\n\t\tcolor++;\n\t\twhile(s.top() != x){\n\t\t\tint t = s.top();\n\t\t\tpaint(t);\n\t\t}\n\t\tpaint(x);\n\t}\n}\nvoid spfa(int x){\n\tqueue<int>q;\n\tq.push(x);\n\tdis[x] = 0;\n\tvis[x] = 1;\n\twhile(!q.empty()){\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tvis[u] = 0;\n\t\tfor(int i = Head[u];i;i = E[i].nxt){\n\t\t\tint v = E[i].v;\n\t\t\tif(dis[v] < dis[u] + E[i].w){\n\t\t\t\tdis[v] = dis[u] + E[i].w;\n\t\t\t\tq.push(v);\n\t\t\t\tvis[v] = 1;\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tn = read(),m = read();\n\tfor(int i = 1;i <= m;i ++){\n\t\tint u = read(),v = read();\n\t\tadd(u,v);\n\t}\n\tfor(int i = 1;i <= n;i ++){\n\t\tweight[i] = read();\n\t}\n\tint s = read(),t = read();\n\tfor(int i = 1;i <= t;i ++){\n\t\tint x = read();\n\t\tbar[x] = 1;\n\t}\n\tfor(int i = 1;i <= n;i ++){\n\t\tif(!used[i])\n\t\ttarjan(i);\n\t}\n\ttot = 0;\n\tfor(int i = 1;i <= n;i ++){\n\t\tfor(int j = head[i];j;j = e[j].nxt){\n\t\t\tint k = e[j].v;\n\t\t\tif(colorname[i] != colorname[k]){\n\t\t\t\tAdd(colorname[i],colorname[k],Weight[colorname[i]]);\n\t\t\t}\n\t\t}\n\t}\n\tAdd(0,colorname[s],0);\n\tfor(int i = 1;i <= color;i ++){\n\t\tif(Bar[i])\n\t\tAdd(i,color + 1,Weight[i]);\n\t}\n\tmemset(dis,0xff,sizeof(dis));\n\tspfa(0);\n\tprintf(\"%d\",dis[color + 1]);\n\treturn 0;\n}\n```\n\u6c42\u5ba1\u6838\u5927\u5927\u901a\u8fc7",
        "postTime": 1566393585,
        "uid": 128582,
        "name": "\u5168\u7f51\u6700\u84bb",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "##\u5c45\u7136\u6ca1\u6709P\u7684\uff0c\u5f3a\u884c\u6c34\u4e00\u53d1\n\n##NOIP2017\u8003\u524d\u6211\u4eec\u4e00\u6b21\u819c\u4f60\u8d5b\u7684t4\u3002\u3002\u3002\u6211\u662fpj\u3002\u3002\u3002\uff08\u8fd9\u662f\u6700\u9a9a\u7684\n\n\u7528\u8fb9\u8868\u5b58\u56fe\uff0c\u5148\u7528tarjan\u7f29\u70b9\uff0c\u5373\u628a\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u7528color[i]\u8868\u793a\u67d3\u8272\uff0c\u5373\u7b2ci\u4e2a\u70b9\u5728\u7f29\u70b9\u540e\u5c5e\u4e8e\u7b2c\u51e0\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n\n\u7136\u540e\u7528spfa\u8dd1\u4e00\u4e2a\u6700\u957f\u8def\n\n**\u6628\u5929\u624d\u5b66tarjan\u7684\u849f\u84bb**~~\u6ed1\u7a3d~~\n\n\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n\n```cpp\nuses math;\nvar\n  a,next,last,b,c,q,color,x,y,dfn,low,dis,f:array[0..500001]of longint;\n  vis,bar:array[0..500001]of boolean;\n  n,m,i,j,tot,top,k,start,d,sum,ans,t:longint;\nprocedure add(x,y:longint);\nbegin\n  inc(tot); \n  a[tot]:=y; \n  next[tot]:=last[x]; \n  last[x]:=tot;\nend;\nprocedure tarjan(k:longint);\nvar\n  i,t:longint;\nbegin\n  inc(d); inc(top);\n  q[top]:=k;vis[k]:=true;\n  low[k]:=d;dfn[k]:=d;\n  i:=last[k];\n  while i>0 do \n    begin\n      t:=a[i];\n      if dfn[t]=0 then //\u5982\u679c\u8282\u70b9t\u672a\u88ab\u8bbf\u95ee\u8fc7\n        begin\n          tarjan(t); //\u7ee7\u7eed\u5411\u4e0b\u627e\n          low[k]:=min(low[k],low[t]);\n        end\n        else\n          if vis[t] then low[k]:=min(low[k],dfn[t]); //\u5982\u679c\u8282\u70b9t\u8fd8\u5728\u6808\u5185\n      i:=next[i];\n    end;\n  if dfn[k]=low[k] then //\u8bf4\u660ek\u4e3a\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839\n    begin\n      inc(sum);\n      while q[top+1]<>k do\n        begin\n          color[q[top]]:=sum;\n          vis[q[top]]:=false;\n          inc(b[sum],c[q[top]]);\n          dec(top);\n        end;//\u66f4\u65b0\u65b0\u7684\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n    end;\nend; //tarjan\nprocedure spfa(start:longint);\nvar\n  i,y,h,t:longint;\nbegin\n  fillchar(vis,sizeof(vis),0);\n  h:=0; t:=1;\n  f[1]:=start;\n  dis[start]:=b[start];\n  while h<t do \n    begin\n      inc(h);\n      y:=f[h];\n      vis[y]:=false;\n      i:=last[y];\n      while i>0 do \n        begin\n          if dis[y]+b[a[i]]>dis[a[i]] then \n            begin\n              dis[a[i]]:=dis[y]+b[a[i]];\n              if not vis[a[i]] then \n                begin\n                  inc(t);\n                  f[t]:=a[i];\n                  vis[a[i]]:=true;\n                end;\n            end;\n          i:=next[i];\n        end;\n    end;\n  for i:=1 to sum do \n    if bar[i] then ans:=max(ans,dis[i]);\nend;//\u666e\u901a\u7684SPFA \u4e0d\u89e3\u91ca\nbegin\n  readln(n,m);\n  for i:=1 to m do \n    begin\n      readln(x[i],y[i]);\n      add(x[i],y[i]);\n    end;\n  for i:=1 to n do read(c[i]);//\u8bfb\u5165\n  for i:=1 to n do \n    if color[i]=0 then tarjan(i);//\u5bf9\u6ca1\u6709\u67d3\u8272\u70b9\u8fdb\u884c\u4e00\u6b21tarjan\n  //for i:=1 to n do write(color[i],' ');\n  fillword(a,sizeof(a) >> 1,0);\n  fillword(next,sizeof(next) >> 1,0);\n  fillword(last,sizeof(last) >> 1,0);\n  tot:=0;\n  for i:=1 to m do \n    if color[x[i]]<>color[y[i]] then add(color[x[i]],color[y[i]]);//\u91cd\u65b0\u5efa\u56fe\n  readln(start,k);\n  start:=color[start];\n  for i:=1 to k do \n    begin\n      read(t);\n      bar[color[t]]:=true;\n    end;//\u8bb0\u5f55\u9152\u5427\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\n  spfa(start);\n  writeln(ans);\nend.\n\n```",
        "postTime": 1511270771,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "## $$\\color{green}{\\text{\u6d1b\u8c37P3627\\ \\ \\ \\ \\ [APIO2009]\u62a2\u63a0\u8ba1\u5212}}$$\n\n$\\color{blue}{\\text{\u3010\u9898\u610f\u3011\uff1a}}$ `Siruseri` \u57ce\u4e2d\u7684\u9053\u8def\u90fd\u662f $\\color{red}{\\text{\u5355\u5411}}$ \u7684\u3002\u4e0d\u540c\u7684\u9053\u8def\u7531\u8def\u53e3\u8fde\u63a5\u3002\u6309\u7167\u6cd5\u5f8b\u7684\u89c4\u5b9a\uff0c \u5728\u6bcf\u4e2a\u8def\u53e3\u90fd\u8bbe\u7acb\u4e86\u4e00\u4e2a `Siruseri` \u94f6\u884c\u7684 `ATM` \u53d6\u6b3e\u673a\u3002\u4ee4\u4eba\u5947\u602a\u7684\u662f\uff0c`Siruseri` \u7684\u9152\u5427\u4e5f\u90fd\u8bbe\u5728\u8def\u53e3\uff0c\u867d\u7136\u5e76\u4e0d\u662f\u6bcf\u4e2a\u8def\u53e3\u90fd\u8bbe\u6709\u9152\u5427\u3002\n\n`Banditji` \u8ba1\u5212\u5b9e\u65bd `Siruseri` \u6709\u53f2\u4ee5\u6765\u6700\u60ca\u5929\u52a8\u5730\u7684 `ATM` \u62a2\u52ab\u3002\u4ed6\u5c06\u4ece\u5e02\u4e2d\u5fc3 \u51fa\u53d1\uff0c\u6cbf\u7740\u5355\u5411\u9053\u8def\u884c\u9a76\uff0c\u62a2\u52ab\u6240\u6709\u4ed6\u9014\u5f84\u7684 `ATM` \u673a\uff0c\u6700\u7ec8\u4ed6\u5c06\u5728\u4e00\u4e2a\u9152\u5427\u5e86\u795d\u4ed6\u7684\u80dc\u5229\u3002\n\n\u4f7f\u7528\u9ad8\u8d85\u7684\u9ed1\u5ba2\u6280\u672f\uff0c\u4ed6\u83b7\u77e5\u4e86\u6bcf\u4e2a `ATM` \u673a\u4e2d\u53ef\u4ee5\u63a0\u53d6\u7684\u73b0\u91d1\u6570\u989d\u3002\u4ed6\u5e0c\u671b\u4f60\u5e2e\u52a9\u4ed6\u8ba1\u7b97\u4ece\u5e02\u4e2d\u5fc3\u51fa\u53d1\u6700\u540e\u5230\u8fbe\u67d0\u4e2a\u9152\u5427\u65f6\u6700\u591a\u80fd\u62a2\u52ab\u7684\u73b0\u91d1\u603b\u6570\u3002**\u4ed6\u53ef\u4ee5\u7ecf\u8fc7\u540c\u4e00\u8def\u53e3\u6216\u9053\u8def\u4efb\u610f\u591a\u6b21\u3002\u4f46\u53ea\u8981\u4ed6\u62a2\u52ab\u8fc7\u67d0\u4e2a `ATM` \u673a\u540e\uff0c\u8be5 `ATM` \u673a \u91cc\u9762\u5c31\u4e0d\u4f1a\u518d\u6709\u94b1\u4e86\u3002**\n\n\u4f8b\u5982\uff0c\u5047\u8bbe\u8be5\u57ce\u4e2d\u6709 $6$ \u4e2a\u8def\u53e3\uff0c\u9053\u8def\u7684\u8fde\u63a5\u60c5\u51b5\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200329134943889.png)\n\n\u5e02\u4e2d\u5fc3\u5728\u8def\u53e3 $1$\uff0c\u7531\u4e00\u4e2a\u5165\u53e3\u7b26\u53f7 $\\to$ \u6765\u6807\u8bc6\uff0c\u90a3\u4e9b\u6709\u9152\u5427\u7684\u8def\u53e3\u7528\u53cc\u5708\u6765\u8868\u793a\u3002\u6bcf\u4e2a `ATM` \u673a\u4e2d\u53ef\u53d6\u7684\u94b1\u6570\u6807\u5728\u4e86\u8def\u53e3\u7684\u4e0a\u65b9\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c`Banditji` \u80fd\u62a2\u52ab\u7684\u73b0\u91d1\u603b\u6570\u4e3a $47$\uff0c\u5b9e\u65bd\u7684\u62a2\u52ab\u8def\u7ebf\u662f\uff1a$1 \\to 2 \\to 4 \\to 1 \\to 2 \\to 3 \\to 5$\u3002\n\n$\\color{blue}{\\text{\u3010\u601d\u8def\u3011\uff1a}}$ \u6709\u5411\u56fe\u7684\u9898\u76ee\uff0c\u5f88\u5bb9\u6613\u8ba9\u4eba\u60f3\u5230\u6709\u5411\u65e0\u73af\u56fe\uff08`DAG`\uff09\u3002\u56e0\u4e3a `DAG` \u6bd4\u6709\u5411\u6709\u73af\u56fe\u65f6\u7684\u60c5\u51b5\u8981\u7b80\u5355\u5f97\u591a\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7528 `tarjan` \u628a\u539f\u56fe\u7f29\u70b9\uff0c\u987a\u4fbf\u7ef4\u62a4\u51fa\u6bcf\u4e2a `scc` \uff08\u5f3a\u8fde\u901a\u5206\u91cf\uff09\u4e2d\u6240\u6709 `ATM` \u5185\u94b1\u7684\u603b\u91cf $\\text{money}$ \u548c\u662f\u5426\u6709\u9152\u5e97\u3002\n\n\u7f29\u70b9\u540e\uff0c\u539f\u56fe\u53d8\u4e3a\u4e86\u4e00\u4e2a `DAG`\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u62d3\u6251\u7b97\u6cd5\u6c42\u89e3\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200329135709659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pIVVlJTkdZRV8xMjM0NTY=,size_16,color_FFFFFF,t_70)\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u662f\u53ef\u4ee5\u7684\u5462\uff1f\u56e0\u4e3a `Banditji` \u53ef\u4ee5\u91cd\u590d\u8d70\u4e00\u6761\u8def\u5f88\u591a\u6b21\u3002\u6211\u4eec\u8fdb\u5165\u4e00\u4e2a `scc` \u540e\uff0c\u56e0\u4e3a `scc` \u5185\u6240\u6709\u70b9\u53ef\u4ee5\u76f4\u63a5\u6216\u95f4\u63a5\u4e92\u76f8\u5230\u8fbe\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u5b9a\u8981\u628a\u5b83\u5185\u7684\u6240\u6709 `ATM` \u5168\u90e8\u62a2\u5b8c\uff0c\u5426\u5219\u4e0d\u4f18\u3002\u540c\u65f6\uff0c\u56e0\u4e3a `Banditji` \u53ef\u4ee5\u91cd\u590d\u8d70\u4e00\u6761\u8def\u5f88\u591a\u5f88\u591a\u6b21\uff0c\u6240\u4ee5\u62a2\u5b8c\u540e\uff0c\u65e0\u8bba\u4ed6\u5728\u4ec0\u4e48\u5730\u65b9\uff0c\u4ed6\u603b\u80fd\u8d70\u5230\u5176\u5b83\u70b9\u4ece\u800c\u5230\u8fbe\u5176\u5b83 `scc`\u3002\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200329140406178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pIVVlJTkdZRV8xMjM0NTY=,size_16,color_FFFFFF,t_70)\n\n\u5982\u56fe\uff0c\u84dd\u5708\u8868\u793a\u4e00\u4e2a `scc`\uff0c\u9ed1\u5708\u8868\u793a\u4e00\u4e2a\u70b9\u3002\u5f53 `Banditji` \u5728 `SCC 1` \u4e2d\u968f\u610f\u8d70\u5230\u5bb9\u6613\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u4ed6\u90fd\u53ef\u4ee5\u6cbf\u8fb9\u8d70\u5230 $3$ \u53f7\u70b9\uff0c\u4ece\u800c\u5230\u8fbe `SCC 2`\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u662f\u6b63\u786e\u7684\u3002\n\n\u4e0b\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u6c42\u7b54\u6848\uff1f\u5f88\u7b80\u5355\uff0c\u6c42\u51fa\u6240\u6709\u6709\u9152\u5e97\u7684 `SCC` \u4e2d\u6700\u5927\u7684 $\\text{dp}$ \u503c\u5373\u53ef\u3002\u6b63\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a `scc`\uff0c\u6240\u4ee5 `Banditji` \u65e0\u8bba\u5728\u5929\u6daf\u6d77\u89d2\uff0c\u4ed6\u90fd\u53ef\u4ee5\u8d70\u5230\u90a3\u4e2a\u9152\u5e97\u4e2d\u7ed3\u675f\u4ed6\u7684\u884c\u7a0b\u3002\u6b63\u7b26\u5408\u9898\u610f\uff01\uff01\uff01\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200329140922646.png)\n\u505a\u5230\u8fd9\u91cc\uff0c\u8fd9\u9053\u9898\u5c31\u7b97\u53ef\u4ee5 `AC` \u4e86\u3002\u5269\u4e0b\u7684\u95ee\u9898\u5c31\u662f\u6253 `tarjan` \u7b97\u6cd5\u7684\u677f\u5b50\u4e86\u3002\u6700\u540e\u6574\u7406\u4e00\u4e0b\u6211\u4eec\u7684\u601d\u8def\uff1a\n\n- 1. `tarjan` \u7b97\u6cd5\u7f29\u70b9\u2014\u2014\u628a\u6709\u5411\u6709\u73af\u56fe\u53d8\u6210 `DAG`\u3002\n- 2. \u5efa\u7acb\u4e00\u4e2a\u53ea\u6709 `scc` \u7684\u65b0\u56fe\u3002\n- 3. \u8c03\u7528\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\u8f85\u4ee5 $\\text{dp}$ \u6c42\u89e3\uff08\u5373 `topo_algorithm_and_dp` \u51fd\u6570\uff09\n- 4. \u8f93\u51fa\uff08\u5373 `print_the_answer` \u51fd\u6570\uff09\n\n$\\color{blue}{\\text{\u3010\u4ee3\u7801\u3011\uff1a}}$\n\n```cpp\nconst int N=5e5+100;\nstruct edge{\n\tint next,to;\n}e[N],E[N];int H[N],Tot,h[N],tot;\ninline void add(int a,int b){\n\te[++tot]=(edge){h[a],b};h[a]=tot;\n}\ninline void ADD(int a,int b){\n\tE[++Tot]=(edge){H[a],b};H[a]=Tot;\n}\nbool have_a_bar[N];\nint n,m,s,p,value[N];\nvoid read_the_data(){\n\tn=read();m=read();//\u4e13\u53f8\u8f93\u5165 \n\tfor(int i=1,u,v;i<=m;i++){\n\t\tu=read();v=read();add(u,v);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tvalue[i]=read();\n\ts=read();p=read();\n\tfor(int i=1;i<=p;i++)\n\t\thave_a_bar[read()]=1;\n}\nint Stack[N],stack_top;\nint dfn[N],low[N],dfscnt;\nint belong[N],scc,num[N];\nint money[N];bool bar[N];\nvoid tarjan(int u){\n\tStack[++stack_top]=u;\n\tlow[u]=dfn[u]=++dfscnt;\n\tfor(int i=h[u];i;i=e[i].next){\n\t\tregister int to=e[i].to;\n\t\tif (dfn[to]==0){\n\t\t\ttarjan(to);//\u9012\u5f52\u8fdb\u884c\u8ba1\u7b97 \n\t\t\tlow[u]=min(low[u],low[to]);\n\t\t}\n\t\telse if (belong[to]==0)\n\t\t\tlow[u]=min(low[u],dfn[to]);\n\t}\n\tif (dfn[u]==low[u]){\n\t\tnum[belong[u]=++scc]=1;\n\t\tbar[scc]=have_a_bar[u];\n\t\tmoney[belong[u]]=value[u];\n\t\twhile (Stack[stack_top]!=u){\n\t\t\tint t=Stack[stack_top];\n\t\t\tnum[belong[t]=scc]++;\n\t\t\tmoney[scc]+=value[t];\n\t\t\tbar[scc]|=have_a_bar[t];\n\t\t\t--stack_top;\n\t\t}\n\t\t--stack_top;\n\t}\n}\nint ind[N],dp[N],ans;\nvoid build_new_picture(){\n\tfor(int u=1;u<=n;u++)\n\t\tfor(int i=h[u];i;i=e[i].next){\n\t\t\tregister int to=e[i].to;\n\t\t\tif (belong[u]!=belong[to]){\n\t\t\t\t++ind[belong[to]];\n\t\t\t\tADD(belong[u],belong[to]);\n\t\t\t}\n\t\t}\n}\nvoid topo_algorithm_and_dp(){\n\tqueue<int> q;//\u62d3\u6251\u6240\u9700\u7684\u961f\u5217 \n\tmemset(dp,128,sizeof(dp));\n\tfor(int i=1;i<=scc;i++)\n\t\tif (ind[i]==0) q.push(i);\n\tdp[belong[s]]=money[belong[s]];\n\twhile (q.size()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=H[u];i;i=E[i].next){\n\t\t\tregister int to=E[i].to;\n\t\t\tdp[to]=max(dp[to],dp[u]+money[to]);\n\t\t\tif ((--ind[to])==0) q.push(to);\n\t\t}\n\t}\n}\nvoid print_the_answer(){\n\tfor(int i=1;i<=scc;i++)\n\t\tif (bar[i]&&dp[i]>ans)\n\t\t\tans=dp[i];\n\tprintf(\"%d\",ans);\n}\nint main(){\n\tread_the_data();\n\tfor(int i=1;i<=n;i++)\n\t\tif (!dfn[i]) tarjan(i);\n\tbuild_new_picture();\n\ttopo_algorithm_and_dp();\n\tprint_the_answer();\n\treturn 0;\n}\n\n\n\u672c\u4ee3\u7801\u5df2\u7ecf AC\uff08\u672c\u4eba\u4eb2\u81ea\u5b9e\u9a8c\uff09\u4e14\u65e0\u4efb\u4f55\u53cd\u4f5c\u5f0a\u7cfb\u7edf\u3002\u8bf7\u8bfb\u8005\u653e\u5fc3\u3002\n\n\u4ee3\u7801\u4e2d\u7684 read \u51fd\u6570\u5c31\u662f\u5feb\u70b9\u51fd\u6570\uff08\u53cd\u6b63\u6ca1\u4eba\u770b\uff0c\u5e72\u8106\u4e0d\u7ed9\u4e86\uff09\n```\n\n------------------------------\n\n\u5982\u679c\u6d1b\u8c37\u7684 `LaTeX` \u70b8\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u6211\u7684\u535a\u5ba2\u91cc\u770b ~~\uff08\u968f\u4fbf\u5237\u5237\u8bbf\u95ee\u91cf\u548c\u70b9\u8d5e\uff09~~\u3002\n\n[https://blog.csdn.net/ZHUYINGYE_123456/article/details/105177708](https://blog.csdn.net/ZHUYINGYE_123456/article/details/105177708)",
        "postTime": 1585462683,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u6a21\u677f\u7684\u9898\uff0c\u53ea\u662f\u5728\u7f29\u70b9\u7684\u57fa\u7840\u4e0a\u591a\u4e86\u4e00\u4e2a\u6700\u77ed\u8def\uff0c\u5e76\u4e14\u7ed9\u5b9a\u4e86\u7ec8\u70b9\u7684\u8303\u56f4\uff08\u5fc5\u987b\u662f\u9152\u5427\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5904\u7406\u5904\u5185\u90e8\u6240\u6709\u8282\u70b9\u70b9\u6743\uff08\u94f6\u884c\u91cc\u7684\u94b1\uff09\u4e4b\u548c\uff0c\u4ece\u7ed9\u5b9a\u7684\u8d77\u70b9\u5f00\u59cb\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\u3002\u6700\u540e\u7edf\u8ba1\u6240\u6709\u542b\u6709\u9152\u5427\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8ddd\u79bb\u6700\u5927\u503c\n\nPS\uff1adijkstra\u4f1a\u7206\uff0c\u5f97\u7528SPFA  \n~~\u4eca\u5929\u4e24\u6b21DAG\u4e0a\u6700\u77ed\u8defdij\u90fd\u6302\u4e86QwQ~~\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<stack>\n#include<queue>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int Maxn=500010,inf=0x3f3f3f3f;\nvector <int> e[Maxn],g[Maxn];\nint dfn[Maxn],low[Maxn],f[Maxn];\nint c[Maxn],dis[Maxn],a[Maxn];\nstack <int> s;\nbool vis[Maxn];\nint n,m,k;\nint timecnt,st,ans;\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nvoid tarjan(int x)\n{\n\tdfn[x]=low[x]=++timecnt;\n\tvis[x]=1,s.push(x);\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i];\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(vis[y])low[x]=min(low[x],dfn[y]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\twhile(s.size())\n\t\t{\n\t\t\tint y=s.top();\n\t\t\ts.pop();\n\t\t\tf[y]=x,vis[y]=0;\n\t\t\tif(x==y)break;\n\t\t\tc[x]+=c[y];\n\t\t}\n\t}\n}\nvoid spfa()\n{\n\tqueue <int> q;\n\tfill(dis+1,dis+1+n,-inf);\n\tst=f[st];\n\tdis[st]=c[st],vis[st]=1;\n\tq.push(st);\n\twhile(q.size())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvis[x]=0;\n\t\tfor(int i=0;i<g[x].size();++i)\n\t\t{\n\t\t\tint y=g[x][i];\n\t\t\tif(dis[y]<dis[x]+c[y])\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+c[y];\n\t\t\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=read(),y=read();\n\t\te[x].push_back(y);\n\t}\n\tfor(int i=1;i<=n;++i)\n\tc[i]=read();\n\t\n\tfor(int i=1;i<=n;++i)\n\tif(!dfn[i])tarjan(i);\n\t\n\tst=read(),k=read();\n\tst=f[st];\n\tfor(int i=1;i<=k;++i)\n\ta[i]=read(),a[i]=f[a[i]];\n\t\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=0;j<e[i].size();++j)\n\t\t{\n\t\t\tint x=i,y=e[i][j];\n\t\t\tif(f[x]==f[y])continue;\n\t\t\tg[f[x]].push_back(f[y]);\n\t\t}\n\t}\n\tspfa();\n\t\n\tfor(int i=1;i<=k;++i)\n\tans=max(ans,dis[a[i]]);\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1577949607,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u5728\u6709\u5411\u56fe\u4e2d,\u8fb9\u53c8\u6ca1\u5565\u9650\u5236,\u56e0\u800c\u8003\u8651\u7f29\u70b9\u3002\u7f29\u70b9\u7684\u540c\u65f6\u8bb0\u5f55\u8be5\u70b9\u5185\u90e8\u6709\u65e0\u9152\u5427\u4ee5\u53ca\u8be5\u70b9\u7684\u603b\u94b1\u6570\u3002    \n\u7f29\u5b8c\u70b9\u4e4b\u540e,\u5f88\u81ea\u7136\u5730\u5f97\u5230\u4e00\u4e2aDAG\u3002\u53ea\u8981\u62a2,\u5c31\u8fde\u540c\u8be5DAG\u4e2d\u7684\u70b9\u4e00\u8d77\u5305\u5706\u3002  \n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728DAG\u4e0a\u8dd1DP,\u6839\u636etarjan\u7684\u6027\u8d28,\u7f29\u70b9\u7684\u7f16\u53f7\u662f\u9006\u62d3\u6251\u5e8f\u7684,\u56e0\u6b64\u53ea\u8981\u6309\u4ece\u8d77\u70b9\u6240\u5728\u70b9\u51fa\u53d1\u7ed3\u70b9\u5e8f\u9012\u51cf\u7684\u987a\u5e8f\u9012\u63a8\u5373\u53ef,\u6bcf\u6b21\u63a8\u5230\u6709\u9152\u5427\u7684\u70b9\u66f4\u65b0\u7b54\u6848\u3002  \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 567890;\n\nint head[N<<1], ver[N<<1], nex[N<<1], my[N<<1], tot, n;\ninline void addedge(int u, int v) {\n\tver[tot] = v; nex[tot] = head[u]; my[tot] = u; head[u] = tot++;\n}\n\nint a[N], isba[N], s;\n\nint dfn[N], low[N], co[N], bar[N], mon[N], sta[N], dfs_clock = 1, col = 1, top;\nvoid tarjan(int cur) {\n\tdfn[cur] = low[cur] = dfs_clock++;\n\tsta[top++] = cur;\n\tfor(int i = head[cur]; ~i; i = nex[i])\n\t\tif(!dfn[ver[i]]) {\n\t\t\ttarjan(ver[i]);\n\t\t\tlow[cur] = min(low[cur], low[ver[i]]);\n\t\t} else if(!co[ver[i]]) {\n\t\t\tlow[cur] = min(low[cur], dfn[ver[i]]);\n\t\t}\n\tif(dfn[cur] == low[cur]) {\n\t\t--top;\n\t\twhile(sta[top] != cur) {\n\t\t\tif(isba[sta[top]]) bar[col] = 1;\n\t\t\tmon[col] += a[sta[top]];\n\t\t\tco[sta[top--]] = col;\n\t\t}\n\t\tco[cur] = col;\n\t\tmon[col] += a[cur];\n\t\tif(isba[cur]) bar[col] = 1;\n\t\t++col;\n\t}\n}\n\nint f[N], ans;\n\nint main() {\n\tmemset(head, -1, sizeof(head));\n\tint m, u, v, p;\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i = 1; i <= m; ++i) {\n\t\tscanf(\"%d %d\", &u, &v);\n\t\taddedge(u, v);\n\t}\n\tfor(int i = 1; i <= n; ++i) scanf(\"%d\", a + i);\n\tscanf(\"%d %d\", &s, &p);\n\twhile(p--) scanf(\"%d\", &u), isba[u] = 1;\n\tfor(int i = 1; i <= n; ++i) if(!dfn[i]) tarjan(i);\n\t--col;\n\tfor(int i = 0, end = tot; i < end; ++i) \n\t\tif(co[my[i]] != co[ver[i]])\n\t\t\taddedge(co[my[i]] + n, co[ver[i]]);\n\tfor(int i = co[s]; i; --i) {\n\t\tf[i] += mon[i];\n\t\tif(bar[i]) ans = max(ans, f[i]);\n\t\tfor(int j = head[i+n]; ~j; j = nex[j])\n\t\t\tf[ver[j]] = max(f[ver[j]], f[i]);\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1573356287,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u5148\u5410\u69fd\u4e0b\uff1a\u672c\u849f\u84bb\u8fd9\u9053\u9898\u505a\u4e86\u597d\u4e45\u3002\u3002\n\n\u8fd9\u9053\u9898\u7684\u9898\u89e3\u6211\u57fa\u672c\u4e0a\u90fd\u770b\u4e86\u4e00\u904d\uff0c\u5927\u90e8\u5206\u90fd\u7528\u7684\u662fTarjan\u7f29\u70b9\uff0cTarjan\u7684\u539f\u7406\u6211\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5176\u4ed6\u7684\u9898\u89e3\u91cc\u5df2\u7ecf\u8bb2\u89e3\u7684\u5f88\u8be6\u7ec6\u4e86\uff0c\u8fd9\u91cc\u4e3b\u8981\u662f\u603b\u7ed3\u4e00\u4e0b\u8dd1\u6700\u957f\u8def\u7684\u51e0\u79cd\u65b9\u6cd5\u3002\n## Dijkstra\n\u8fd9\u662f\u6211\u7528\u7684\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0cWA\u4e86\u4e24\u4e2a\u70b9\u3002\n\n\u767e\u601d\u4e0d\u5f97\u5176\u89e3\uff0c\u627e\u4e86\u5404\u79cd\u7a00\u5947\u53e4\u602a\u7684\u5730\u65b9\u4ecd\u7136WA\uff0c\u76f4\u5230\u770b\u5230\u4e86[\u8fd9\u4e2a](https://www.luogu.org/discuss/show/118707)\n\nemmm\uff08\u8bf7\u539f\u8c05\u672c\u849f\u84bb\u7684\u65e0\u77e5\uff09\n\n\u6240\u4ee5\uff0c\u505a\u4e2a\u603b\u7ed3\uff1a\n### Dijkstra\u4e0d\u80fd\u8dd1\u6700\u957f\u8def\uff01\uff01\n## \u62d3\u6251\u6392\u5e8f+DP\n\u8fd9\u79cd\u65b9\u6cd5\u6211\u53ea\u5f97\u4e8655\u5206\uff0c\u540e\u6765~~\u67e5\u770b\u8ba8\u8bba\u540e~~\u53d1\u73b0\uff0c\u8d77\u70b9\u5e76\u4e0d\u4e00\u5b9a\u5165\u5ea6\u4e3a0\uff0c\u9700\u8981\u4e00\u4e2a\u7279\u522b\u9ebb\u70e6\u7684\u7279\u5224\u3002\n\n\u4e0d\u8fc7\u9898\u89e3\u4e2d\u6709\u4f4d\u5927\u4f6c\u5229\u7528\u53ea\u5bf9\u8d77\u70b9\u8fdb\u884cTarjan\u907f\u514d\u4e86\u8fd9\u4e00\u70b9(\u96fe\n\n\u5176\u5b9e\u5230\u5e95\u80fd\u4e0d\u80fd\u5b8c\u5168\u907f\u514d\u6211\u4e5f\u4e0d\u6e05\u695a\uff08\u5176\u5b9e\u5c31\u662f\u61d2\u5f97\u6253\u4e86\uff09\uff0c\u6240\u4ee5\u6b22\u8fce\u795e\u7287\u6765hack\u3002\n## SPFA\n\u8fd9\u662f\u9898\u89e3\u4e2d\u7528\u7684\u6700\u591a\u7684\u4e00\u79cd\u65b9\u6cd5\u4e86\uff0c\u786e\u5b9e\u662f\u6b63\u786e\u7684\uff0c\u65e0\u8bba\u662f\u8d1f\u6743\u8dd1\u6700\u77ed\u8def\uff0c\u8fd8\u662f\u53ea\u6539\u53d8\u677e\u5f1b\u65f6\u5224\u65ad\u7684\u7b26\u53f7\uff0c\u90fd\u80fd\u80dc\u4efb\uff0c\u636e\u8bf4\u5728\u7a00\u758f\u56fe\u4e0a\u8dd1\u5f97\u8fd8\u66f4\u5feb\uff1f\uff01\n\n\u90a3\u597d\u4e86\uff0c\u4ee5\u540e\u8dd1\u6700\u957f\u8def\u7684\u6700\u4f73\u7b97\u6cd5\u5c31\u662f\n# SPFA\n\u6700\u540e\u9644\u4e0aSPFA\u4ee3\u7801\u5427\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxN = 1000010;\nconst int maxE = 1000010;\nint N,M;\nint head[maxN],cnt;\nstruct qxx\n{\n    int next,to,cost;\n}edge[maxE];\nint a[maxN];//dian quan\nint b[maxN];\nbool bar[maxN];\nvoid add(int u,int v)\n{\n    cnt++;\n    edge[cnt].next=head[u];\n    edge[cnt].to=v;\n    head[u]=cnt;\n}\nint mystack[maxN],top;\nbool instack[maxN];\nint dfn[maxN],db[maxN],timeclock;\nint belong[maxN],tot;\nbool bar2[maxN];\nvoid Tarjan(int u)\n{\n    mystack[++top]=u;\n    instack[u]=1;\n    db[u]=dfn[u]=++timeclock;\n    for(int i=head[u];i;i=edge[i].next)\n    {\n        int v=edge[i].to;\n        if(!dfn[v])\n        {\n            Tarjan(v);\n            db[u]=min(db[u],db[v]);\n        }\n        else if(instack[v])\n        {\n            db[u]=min(db[u],db[v]);\n        }\n    }\n    if(dfn[u]==db[u])\n    {\n        tot++;\n        while(mystack[top]!=u)\n        {\n            int x=mystack[top--];\n            instack[x]=0;\n            belong[x]=tot;\n            b[tot]+=a[x];\n            if(bar[x])bar2[tot]=1;\n        }\n        instack[u]=0;\n        belong[u]=tot;\n        b[tot]+=a[u];\n        top--;\n        if(bar[u])bar2[tot]=1;\n    }\n}\nint head2[maxN],cnt2;\nqxx edge2[maxE];\nvoid add2(int u,int v,int w)\n{\n    cnt2++;\n    edge2[cnt2].next=head2[u];\n    edge2[cnt2].to=v;\n    edge2[cnt2].cost=w;\n    head2[u]=cnt2;\n}\nint dist[maxN];\nbool vis[maxN];\nvoid SPFA(int s)\n{\n    queue <int> q;\n    vis[s]=1;\n    dist[s]=0;\n    q.push(s);\n    while(!q.empty())\n    {\n        int temp=q.front();\n        q.pop();\n        vis[temp]=0;\n        for(int i=head2[temp];i;i=edge2[i].next)\n        {\n            int v=edge2[i].to;\n            int c=edge2[i].cost;\n            if(dist[v]<dist[temp]+c)\n            {\n                dist[v]=dist[temp]+c;\n                if(!vis[v])\n                {\n                    q.push(v);\n                    vis[v]=1;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    cin>>N>>M;\n    for(int i=1;i<=M;i++)\n    {\n        int u,v;\n        cin>>u>>v;\n        add(u,v);\n    }\n    for(int i=1;i<=N;i++)\n        cin>>a[i];\n    int s,P;\n    cin>>s>>P;\n    for(int i=1;i<=P;i++)\n    {\n        int x;cin>>x;\n        bar[x]=1;\n    }\n    for(int i=1;i<=N;i++)\n        if(!dfn[i])Tarjan(i);\n    for(int i=1;i<=N;i++)\n    {\n        for(int j=head[i];j;j=edge[j].next)\n        {\n            int v=edge[j].to;\n            if(belong[i]!=belong[v])\n                add2(belong[i],belong[v],b[belong[v]]);\n        }\n    }\n    add2(0,belong[s],b[belong[s]]);\n    SPFA(0);\n    int ans=0;\n    for(int i=1;i<=tot;i++)\n        if(bar2[i])ans=max(ans,dist[i]);\n    cout<<ans<<endl;\n}\n\n```\n\u539f\u8c05\u8fd9\u5947\u602a\u7684\u9a6c\u8702",
        "postTime": 1563889280,
        "uid": 178867,
        "name": "kevin006",
        "ccfLevel": 0,
        "title": "\u62a2\u63a0\u8ba1\u5212"
    },
    {
        "content": "\u5495\u4e86\u56db\u4e2a\u5c0f\u65f6\u6574\u6574\u4e00\u665a\u4e0a\n\n\u7279\u6b64\u6765\u53d1\u9898\u89e3\n\n[P3627 [APIO2009]\u62a2\u63a0\u8ba1\u5212](https://www.luogu.org/problemnew/show/P3627)\n\n\n\n------------\n### \u4e0d\u96be\u770b\u51fa\u7b54\u6848\u5373\u4e3a\u8be5\u6709\u5411\u56fe\u7684\u6700\u957f\u94fe\u957f\u5ea6\uff08\u5141\u8bb8\u91cd\u590d\n\n### \u6211\u4f1adp\uff01\n\n### \u4f46\u662f\u56fe\u4e2d\u53ef\u80fd\u6709\u73af\uff0c\u4e0d\u6ee1\u8db3dp\u7684\u65e0\u540e\u6548\u6027\u5047\u8bbe\n\n### \u6211\u4f1atarjan\uff01\n\n~~\uff08\u60a8\u592a\u5f3a\u4e86\uff09~~\n\n\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u70b9\u4e00\u5b9a\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0ctarjan\u7f29\u70b9\u4e4b\u540e\uff0c\u5c06\u6bcf\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u4ef7\u503c\u5c31\u662f\u5176\u4e2d\u6240\u6709\u94f6\u884c\u7684\u4ef7\u503c\u603b\u548c\n\n\u7f29\u70b9\u5b8c\u6210\u4e4b\u540e\u6211\u4eec\u91cd\u65b0\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u56fe\uff0c\u539f\u6765\u8fde\u63a5\u4e24\u4e2a\u70b9\u7684\u8fb9\u6539\u6210\u8fde\u5411\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u5982\u679c\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\uff1f\u8fd9\u5c31\u662f\u73af\u4e86\u4e0d\u7528\u7ba1\uff09\n\n\u63a5\u7740\u672c\u6765\u60f3\u5199bfs\u6c42\u6700\u957f\u8def\u2026\u2026\u5199\u7740\u5199\u7740\u611f\u89c9\u5c31\u53d8\u6210spfa\u4e86\uff08\u7b11\u54ed\uff09\n\n\u6700\u540e\u6211\u4eec\u7b97\u51fa\u8d77\u70b9\u5230\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6700\u957f\u8def\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5224\u65ad\u6709\u9152\u5427\u5c31\u66f4\u65b0\u7b54\u6848\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define inf 0x7fffffff\nusing namespace std;\nint n,m; \n#define maxn 500009\nvector<int> son[maxn];\nint c[maxn];\nbool bar[maxn];\nvoid add(int x,int y)\n{\n    son[x].push_back(y);\n}\nint s,p;\nint dfsn[maxn],lowlink[maxn];\nint sta[maxn];\nint top=0;\nint dfs_clock=0; \nint scc_cnt=0;//\u6709\u591a\u5c11\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf \nint scc[maxn];//\u6bcf\u4e2a\u70b9\u5728\u90a3\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc \nint val[maxn];//\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4ef7\u503c\u603b\u548c \nint q[maxn];\nint vy[maxn];//\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4ef7\u503c\u603b\u548c \nvoid dfs_scc(int x)//tarjan!!!\n{\n    dfsn[x]=lowlink[x]=++dfs_clock;\n    sta[++top]=x;\n    for(int i=0;i<son[x].size();i++)\n    {\n        int now=son[x][i];\n        if(!dfsn[now])\n        {\n            dfs_scc(now);\n            lowlink[x]=min(lowlink[x],lowlink[now]);\n        }else if(!scc[now])\n        {\n            lowlink[x]=min(lowlink[x],dfsn[now]);\n        }\n    }\n    if(lowlink[x]==dfsn[x])\n    {\n        scc_cnt++;\n        int ans=0;\n        int p=0;\n        while(sta[top]!=x)\n        {\n            q[++p]=sta[top];//\u6316\u5751\u63d0\u793a\uff1aq\u662f\u4e00\u4e2a\u7528\u6765\u8bb0\u5f55\u7684\u6570\u7ec4\uff0c\u628a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u4e2aq\u4e00\u5b9a\u8981\u5f00\u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u7528memset\n            //\u5982\u679c\u6bcf\u6b21\u5728\u9012\u5f52\u4e2d\u5b9a\u4e49\u4e00\u4e2aq\uff0c\u4e00\u8f6e\u5c31\u4f1a\u7206\u6808\uff01\uff01\uff01\uff01\u672c\u5730\u51fa\u73b0\u871c\u6c41\u9519\u8bef\uff0c\u6d1b\u8c37ide\u5374\u6ca1\u95ee\u9898\uff01\uff01\n            ans+=c[sta[top]];\n            scc[sta[top--]]=scc_cnt;\n        }\n        top--;\n        scc[x]=scc_cnt;\n        q[++p]=x;\n        ans+=c[x];\n        vy[scc_cnt]=ans;\n        for(int i=1;i<=p;i++)\n        {\n            val[q[i]]=ans;\n        }\n    }\n}\nstruct node{\n    int x,y;\n}e[maxn];;\nvector<int> newmap[maxn];\nint in[maxn],d[maxn];\nstruct point{\n    int x,step;\n};\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n        e[i].x=x,e[i].y=y;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&c[i]);\n    }\n    scanf(\"%d%d\",&s,&p);\n    memset(bar,0,sizeof(bar));\n    for(int i=1;i<=p;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        bar[x]=1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!dfsn[i])dfs_scc(i);\n    }\n    for(int i=1;i<=m;i++)//\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u5fc5\u987b\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc \n    {\n        if(scc[e[i].x]!=scc[e[i].y])\n        {\n            newmap[scc[e[i].x]].push_back(scc[e[i].y]);\n        }\n    }\n     \n    queue<int> q;\n    q.push(scc[s]);\n    d[scc[s]]=val[s];\n    while(!q.empty())//\u5e7f\u641c\uff0c\u4e0d\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u662f\u4e00\u4e2aspfa \n    {\n        int xx=q.front();\n        int x=xx;\n        q.pop();\n        for(int i=0;i<newmap[x].size();i++)\n        {\n            int to=newmap[x][i];\n            if(d[to]>=d[x]+vy[to])continue; //\u7c7b\u4f3c\u4e8e\u677e\u5f1b\u7684\u64cd\u4f5c\u2026\u2026 \n            d[to]=max(d[to],d[x]+vy[to]);\n\t\t\tq.push(to);\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(bar[i])//\u5982\u679c\u8fd9\u4e2a\u70b9\u6709\u9152\u5427\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7edf\u8ba1\u4e00\u4e0b\u5b83\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7b54\u6848 \n        {\n            ans=max(ans,d[scc[i]]);\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1563806286,
        "uid": 52577,
        "name": "404_notfound",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "### \u56fe\u8bba tarjan\u7f29\u70b9+\u6700\u77ed\u8def \u7684\u4e00\u9053\u9898\n\n- tarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u4e3a\u4ee5\u540e\u7f29\u70b9\u6253\u4e0b\u826f\u597d\u7684\u57fa\u7840\uff09\n\n(\u5982\u679c\u4e0d\u4f1atarjan\u7684\u8bf7\u70b9\u51fb[\u8fd9\u513f](https://www.cnblogs.com/hulean/p/10856030.html))\n\n```cpp\n\u4f60\u9700\u8981\u7684\u4e1c\u897f\uff1a\n(1)\u3001dfn[]\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u5728dfs\u65f6\u662f\u7b2c\u51e0\u4e2a\u88ab\u641c\u5230\u7684\u3002\n(2)\u3001low[]\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u4ee5\u53ca\u5176\u5b50\u5b59\u8282\u70b9\u8fde\u7684\u6240\u6709\u70b9\u4e2ddfn\u6700\u5c0f\u7684\u503c\n(3)\u3001stack[]\uff0c\u8868\u793a\u5f53\u524d\u6240\u6709\u53ef\u80fd\u80fd\u6784\u6210\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u3002\n(4)\u3001vis[]\uff0c\u8868\u793a\u4e00\u4e2a\u70b9\u662f\u5426\u5728stack\u4e2d\u3002\n(5)\u3001color[],\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7f16\u53f7\u3002\n(6)\u3001deep,\u8bb0\u5f55dfs\u6811\u7684\u6df1\u5ea6\ninline void tarjan(int now)\n{\n\tdfn[now]=++deep;\n\tlow[now]=deep;\n\tvis[now]=1;\n\tst.push(now);\n\tfor(int i=0;i<ver[now].size();i++)\n\t{\n\t\tint x=ver[now][i];\n\t\tif(!dfn[x])\n\t\t{\n\t\t\ttarjan(x);\n\t\t\tlow[now]=min(low[now],low[x]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(vis[x])\n\t\t\t\tlow[now]=min(low[now],low[x]);\n\t\t}\n\t}\n\tif(dfn[now]==low[now])\n\t{\n\t\tcolor[now]=++sum;\n\t\tvis[now]=0;\n\t\twhile(st.top()!=now)\n\t\t{\n\t\t\tcolor[st.top()]=sum;\n\t\t\tvis[st.top()]=0;\n\t\t\tst.pop();\n\t\t}\n\t\tst.pop();\n\t}\n}\n```\n- \u7f29\u70b9\uff08\u53bb\u9664\u56fe\u4e2d\u7684\u73af\uff09\n\n```cpp\n//\u91cd\u70b9\uff1a\u8fd9\u91cc\u5efa\u65b0\u56fe\u662f\u4f9d\u6258\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7f16\u53f7\u6765\u5efa\u7684\nfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=0;j<ver[i].size();j++)\n\t\t{\n\t\t\tint x=ver[i][j];\n\t\t\tif(color[i]!=color[x])//\u5982\u679c\u4e0d\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u90a3\u4e48\u5c31\u5408\u5e76\n\t\t\t{\n\t\t\t\tg[color[i]].push_back(color[x]);\n           //\u5343\u4e07\u4e0d\u80fd\u5199\u6210g[i].push_back(x);\u5751\u6b7b\u6211\u4e86\n\t\t\t}\n\t\t}\n\t}\n//\u8fd9\u4e00\u90e8\u5206\u4ee3\u7801\u8fd8\u53ef\u4ee5\u9002\u5f53\u4f18\u5316...\uff08\u60f3\u4e00\u60f3\uff09\n```\n\n- \u5bf9\u4e8e\u70b9\u6743\u4e0e\u9152\u9986\u7684\u4e00\u4e9b\u5904\u7406\uff08\u65b9\u4fbf\u6c42\u6700\u77ed\u8def\uff09\n\n```cpp\nfor(int i=1;i<=n;i++)\n\t{\n\t\tww[color[i]]+=w[i];//\u5c06\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6240\u6709\u7684\u70b9\u6743\u5168\u90e8\u52a0\u8d77\u6765\n\t\tif(tf[i])tf[color[i]]=1;//\u53ea\u8981\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6709\u4e00\u4e2a\u7ed3\u70b9\u6709\u9152\u9986\uff0c\u90a3\u4e48\u5c31\u8bbe\u5b9a\u4e3a\u6709\u9152\u9986\n\t}\n```\n\n- \u6c42\u6700\u77ed\u8def\u6a21\u677f\uff08\u7136\u800c\u5b9e\u9645\u662f\u6700\u957f\u8def\uff09\n\n```cpp\n//\u6a21\u677f\u4e0d\u505a\u89e3\u91ca\ninline void spfa()\n{\n\td[color[s]]=ww[color[s]];\n\tqueue<int>q;\n\tq.push(color[s]);\n\twhile(q.size())\n\t{\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<g[now].size();i++)\n\t\t{\n\t\t\tint x=g[now][i];\n\t\t\tif(d[now]+ww[x]>d[x])\n\t\t\t{\n\t\t\t\td[x]=d[now]+ww[x];\n\t\t\t\tq.push(x);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n**\u6240\u4ee5...**\n\n\u5728\u6240\u6709\u6709\u9152\u9986\u7684\u8282\u70b9\u4e2d\u9009\u4e00\u4e2a\u6700\u5927\u503c\u8f93\u51fa\u5c31\u597d\u4e86\n\n```cpp\nfor(int i=1;i<=sum;i++)\n\t{\n\t\t//cout<<d[i]<<\" \";\n\t\tif(tf[i])ans=max(ans,d[i]);\n\t}\n```\n\n\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=500000+10;\nint n,m;\nvector<int>ver[MAXN];\nvector<int>g[MAXN];\nint w[MAXN],ww[MAXN];\nbool tf[MAXN];\nint s,p,ans=0;\nint dfn[MAXN],color[MAXN],low[MAXN];\nint deep,sum;\nbool vis[MAXN];\nint d[MAXN];\nstack<int>st;\ninline int read()\n{\n\tint tot=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')\n\t\tc=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\ttot=tot*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn tot;\n}\ninline void tarjan(int now)\n{\n\tdfn[now]=++deep;\n\tlow[now]=deep;\n\tvis[now]=1;\n\tst.push(now);\n\tfor(int i=0;i<ver[now].size();i++)\n\t{\n\t\tint x=ver[now][i];\n\t\tif(!dfn[x])\n\t\t{\n\t\t\ttarjan(x);\n\t\t\tlow[now]=min(low[now],low[x]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(vis[x])\n\t\t\t\tlow[now]=min(low[now],low[x]);\n\t\t}\n\t}\n\tif(dfn[now]==low[now])\n\t{\n\t\tcolor[now]=++sum;\n\t\tvis[now]=0;\n\t\twhile(st.top()!=now)\n\t\t{\n\t\t\tcolor[st.top()]=sum;\n\t\t\tvis[st.top()]=0;\n\t\t\tst.pop();\n\t\t}\n\t\tst.pop();\n\t}\n}\ninline void spfa()\n{\n\td[color[s]]=ww[color[s]];\n\tqueue<int>q;\n\tq.push(color[s]);\n\twhile(q.size())\n\t{\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<g[now].size();i++)\n\t\t{\n\t\t\tint x=g[now][i];\n\t\t\tif(d[now]+ww[x]>d[x])\n\t\t\t{\n\t\t\t\td[x]=d[now]+ww[x];\n\t\t\t\tq.push(x);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\t//freopen(\"testdata.in\",\"r\",stdin);\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tver[x].push_back(y);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tw[i]=read();\n\ts=read();p=read();\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tint x=read();\n\t\ttf[x]=1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\t}\n\t/*cout<<endl;\n\tfor(int i=1;i<=n;i++)\n\t\tcout<<color[i]<<\" \";\n\tcout<<endl;*/\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=0;j<ver[i].size();j++)\n\t\t{\n\t\t\tint x=ver[i][j];\n\t\t\tif(color[i]!=color[x])\n\t\t\t{\n\t\t\t\t//cout<<i<<\" \"<<x<<\" \"<<color[i]<<\" \"<<color[x]<<endl;\n\t\t\t\tg[color[i]].push_back(color[x]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tww[color[i]]+=w[i];\n\t\tif(tf[i])tf[color[i]]=1;\n\t}\n\t/*cout<<color[s]<<endl;\n\tcout<<endl;\n\tfor(int i=1;i<=sum;i++)\n\t{\n\t\tfor(int j=0;j<g[i].size();j++)cout<<i<<\" \"<<g[i][j]<<\"\\n\";\n\t}\n\tcout<<endl;\n\tfor(int i=1;i<=sum;i++)\n\t\tcout<<ww[i]<<\" \";cout<<endl;\n\tfor(int i=1;i<=sum;i++)\n\t\tcout<<tf[i]<<\" \";cout<<endl;\n\tcout<<ww[color[s]]<<endl;*/\n\tspfa();\n\tfor(int i=1;i<=sum;i++)\n\t{\n\t\t//cout<<d[i]<<\" \";\n\t\tif(tf[i])ans=max(ans,d[i]);\n\t}\n\t//cout<<endl;\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1561990002,
        "uid": 107468,
        "name": "hulean",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "[*\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c*](https://www.cnblogs.com/Lemir3/p/11089583.html)\n\n[*\u9898\u9762*](https://www.luogu.org/problemnew/show/P3627)\n\n\u547c\u547c\u547c,\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u597d\u770b\u51fa\u8981\u7f29\u70b9\u5427.\n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u904d\u5386\u4e00\u904d\u53ea\u52a0\u4e00\u6b21\u6743\u503c,\u4f46\u662f\u53ef\u4ee5\u591a\u6b21\u904d\u5386\u4e00\u4e2a\u70b9.\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528Tarjan\u5148\u628a\u70b9\u7f29\u4e86,\u5c31\u662f\u8bf4\u628a\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u67d3\u6210\u540c\u4e00\u4e2a\u989c\u8272,\u5982\u679c\u8d77\u70b9\u5728\u5206\u91cf\u5185\u7684\u8bdd,\u5c31\u628a\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u6807\u8bb0\u4e3a\u8d77\u6765,\u5982\u679c\u6709\u9152\u9986\u7684\u8bdd,\u5c31\u628a\u8fd9\u4e2a\u5206\u91cf\u6807\u8bb0\u4e3a\u7ec8\u70b9.\n\n\u4e4b\u540e\u628a\u7f29\u8fc7\u7684\u70b9\u8fde\u6210\u4e00\u4e2a\u65b0\u56fe,\u8dd1\u4e00\u904d\u6700\u957f\u8def\u6c42\u51fa\u6700\u5927\u6536\u76ca.\n\n\u6709\u591a\u4e2a\u9152\u9986,\u5c31\u6709\u591a\u4e2a\u7ec8\u70b9,\u5728\u6700\u540e\u6709\u9152\u9986\u6807\u8bb0\u4e2d\u7684\u70b9\u5237\u4e00\u904d\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86.\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f,\u8fd9\u9053\u9898\u662f\u70b9\u6743\u56fe,\u5728\u67d3\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\u8981\u628a\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u53e0\u52a0\u5230\u5206\u91cf\u4e2d,\u7136\u540e\u5f00\u53e6\u4e00\u4e2a\u7528\u4e8e\u8bb0\u5f55\u8fbe\u5230\u8be5\u70b9\u65f6\u6700\u957f\u8def\u7684\u6570\u7ec4.\n\n\u6211\u7528\u7684Dijkstra\u5806\u4f18\u5316\u8dd1\u6700\u957f\u8def,\u4f46\u662f#3T\u6389\u4e86,\u4e8e\u662f\u52a0\u4e86O3\u4f18\u5316\u624d\u8dd1\u8fc7\u7684.[*zsx*](https://www.cnblogs.com/zsx6/)\u5927\u4f6c\u7ed9\u6211\u8bf4\u8fd9\u9053\u9898\u662f\u7a00\u758f\u56fe,\u8dd1SPFA\u5176\u5b9e\u8fd8\u8981\u5feb\u4e00\u4e9b.\u5e0c\u671b\u5927\u5bb6\u4ee5\u540e\u7262\u8bb0\u8b66\u949f,\u5c0f\u5fc3\u6c42\u8bc1,\u5927\u80c6\u5b9e\u9a8c(\u96fe).\n\n\u7528Dijkstra\u7684\u4ee3\u7801,\u4e0d\u7b97\u6ce8\u91ca\u521a\u597d200\u884c:\n\n```cpp\n\n#pragma GCC diagnostic error \"-std=c++11\"\n#pragma GCC target(\"sse2\")\n#pragma GCC optimize(3)\n#pragma GCC target(\"avx\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n\n#include<cstdio>\n#include<queue>\n#include<stack>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<map>\n\nusing namespace std;\n\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >q;\nvector<int>NodeEdge[500010];\nstack<int>s;\n\nstruct edge\n{\n        int to,next;\n}e[500010],NewE[500010];\n\nint n,m,s_,p,size,time_cnt,cnt,start,ans=-2147483645;\nint dis[500010],head[500010],dfn[500010],low[500010],color[500010],NodeDis[500010],TheLongestPath[500010];\nbool wine[500010],flag[500010],NodeWine[500010],NodeFlag[500010];\n\nvoid EdgeAdd(int,int);\nvoid Tarjan(int);\nvoid Dijkstra();\n\nint main()\n{\n        memset(head,-1,sizeof(head));\n        scanf(\"%d%d\",&n,&m);\n        for(int _=1;_<=m;_++)\n        {\n                int father,son;\n                scanf(\"%d%d\",&father,&son);\n                EdgeAdd(father,son);\n        }\n        for(int _=1;_<=n;_++)\n        {\n                scanf(\"%d\",dis+_);\n        }\n        scanf(\"%d%d\",&s_,&p);\n        for(int _=1;_<=p;_++)\n        {\n                int a;\n                scanf(\"%d\",&a);\n                wine[a]=true;\n        }\n        for(int _=1;_<=n;_++)\n        {\n            if(dfn[_]==0)\n            {\n                Tarjan(_);\n            }\n        }\n        for(int _=1;_<=n;_++)\n        {\n            for(int __=head[_];__!=-1;__=e[__].next)\n            {\n                int to=e[__].to;\n                if(color[_]!=color[to])\n                {\n                    NodeEdge[color[_]].push_back(color[to]);\n //                   printf(\"edge:%d %d val:%d %d\\n\",color[_],color[to],NodeDis[color[_]],NodeDis[color[to]]);\n                }\n            }\n        }\n        Dijkstra();\n        for(int _=1;_<=cnt;_++)\n        {\n            if(NodeWine[_]==true)\n            {\n                   ans=max(ans,TheLongestPath[_]);\n            }\n        }\n        printf(\"%d\\n\",ans);\nreturn 0;\n}\n\nvoid EdgeAdd(int from,int to)\n{\n        e[++size].to=to;\n        e[size].next=head[from];\n        head[from]=size;\n}\n\nvoid Tarjan(int from)\n{\n    dfn[from]=low[from]=++time_cnt;\n    s.push(from);\n    flag[from]=true;\n    for(int _=head[from];_!=-1;_=e[_].next)\n    {\n        int to=e[_].to;\n        if(dfn[to]==0)\n        {\n            Tarjan(to);\n            low[from]=min(low[from],low[to]);\n        }\n        else if(flag[to]==true)\n        {\n            low[from]=min(low[from],dfn[to]);\n        }\n    }\n    if(dfn[from]==low[from])\n    {\n        cnt++;\n        while(!s.empty())\n        {\n            int temp=s.top();\n            s.pop();\n            flag[temp]=false;\n            color[temp]=cnt;\n            if(wine[temp]==true)\n            {\n                NodeWine[cnt]=true;\n            }\n            if(temp==s_)\n            {\n                start=cnt;\n            }\n            NodeDis[cnt]+=dis[temp];\n            if(temp==from)break;\n        }\n    }\n}\n\nvoid Dijkstra()\n{\n    memset(NodeFlag,false,sizeof(NodeFlag));\n    memset(TheLongestPath,-0x3f,sizeof(TheLongestPath));\n    q.push(make_pair(dis[start],start));\n    TheLongestPath[start]=NodeDis[start];\n    while(!q.empty())\n    {\n        int from=q.top().second;\n        q.pop();\n        if(NodeDis[from]==true)continue;\n        NodeFlag[from]=true;\n        for(int _=0;_<NodeEdge[from].size();_++)\n        {\n            int to=NodeEdge[from][_];\n            if(TheLongestPath[to]<TheLongestPath[from]+NodeDis[to])\n            {\n                TheLongestPath[to]=TheLongestPath[from]+NodeDis[to];\n //               printf(\"path:%d %d TheLongestPath:%d\\n\",from,to,TheLongestPath[to]);\n                q.push(make_pair(NodeDis[to],to));\n            }\n        }\n     }\n}\n\n```\n",
        "postTime": 1561529972,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "P3627_[APIO2009]\u7279\u6717\u666e\u62a2\u63a0\u671d\u9c9c\u7684\u8ba1\u5212\u88ab\u6211\u519b\u7c89\u788e!"
    },
    {
        "content": "\n\u7b2c\u4e00\u9053\u81ea\u5df1AC\u7684APIO\u7684\u96be(~~shui~~)\u9898\n\n\u548c\u6d59\u6c5f07\u5e74\u7701\u9009\u7684[ZJOI2007]\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u5f88\u50cf\n\n\u4e00\u9053\u6700\u77ed\u8def\u7684\u9898\n\n\u6211\u7528spfa\u5904\u7406\n\n\u7531\u4e8e\u9053\u8def\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u73af\n\n\u6240\u4ee5\u6211\u4eec\u9996\u5148\u9700\u8981\u7528\u5230\u5f3a\u8fde\u901a\u5206\u91cf(Tarjan)\u7f29\u70b9\n\n\u7136\u540e\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2aDAG\n\n\u4ee5\u94b1\u505a\u70b9\u6743 \n\n\u53d8\u6210\u4e00\u4e2a\u5bfb\u627e\u4ece\u8d77\u70b9\u51fa\u53d1\u5230\u6743\u6700\u5927\u7684\u6709\u9152\u5427\u7684\u70b9\n\n\u7528spfa\u5f31\u5f31\u7684\u641e\u51fa\u6765\n\n\u8be6\u89c1\u4ee3\u7801\n\n```.cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#define rep(i,a,b) for(long long i=a;i<=b;i++)\n#define MAXN 500005\nusing namespace std;\ntypedef long long ll;\nll n,m,val[MAXN],to[MAXN],nxt[MAXN],fir[MAXN],s,maxx=0,tot,p,ans;\nbool book[MAXN],bookk[MAXN],bookkk[MAXN];\nll dfn[MAXN],low[MAXN],sta[MAXN],top,num,col,co[MAXN],si[MAXN],cnt,dis[MAXN];\nstruct zlk{\n\tll x,y;\n}a[MAXN];\nqueue<ll> Q;\nbool cmpp(zlk r,zlk t)\n{\n\tif(r.x!=t.x) return r.x<t.x;\n\telse return r.y<=t.y;\n}\nvoid ade(ll u,ll v)\n{\n\tto[++tot]=v;\n\tnxt[tot]=fir[u];\n\tfir[u]=tot;\n}\nvoid dfs(ll x)\n{\n\tdfn[x]=low[x]=++num;\n\tsta[++top]=x;\n\tfor(ll k=fir[x];k;k=nxt[k]){\n\t\tif(!dfn[to[k]]){\n\t\t\tdfs(to[k]);low[x]=min(low[x],low[to[k]]);\n\t\t}\n\t\telse if(!co[to[k]]) low[x]=min(low[x],dfn[to[k]]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tco[x]=++col;\n\t\tsi[col]=val[x];//\u5904\u7406\u6bcf\u4e2a\u7f29\u70b9\u7684\u6743 \n\t\tbookk[col]=book[x];//\u5224\u65ad\u6bcf\u4e2a\u7f29\u70b9\u662f\u5426\u6709\u9152\u5427 \n\t\twhile(sta[top]!=x){\n\t\t\tco[sta[top]]=col;\n\t\t\tif(!bookk[col]) bookk[col]=book[sta[top]];\n\t\t\tsi[col]+=val[sta[top--]];\n\t\t}\n\t\ttop--;\n\t}\n}\nvoid work()//\u91cd\u7f6e\u8fb9 \n{\n\trep(i,1,n){\n\t\tfor(ll k=fir[i];k;k=nxt[k]){\n\t\t\tif(co[i]!=co[to[k]]){\n\t\t\t\ta[++cnt].x=co[i];\n\t\t\t\ta[cnt].y=co[to[k]];\n\t\t\t}\n\t\t}\n\t}\n\tsort(a+1,a+1+cnt,cmpp);\n\tmemset(fir,0,sizeof(fir));\n\ttot=0;\n\tto[++tot]=a[1].y;\n\tnxt[tot]=fir[a[1].x];\n\tfir[a[1].x]=tot;\n\tde[a[1].y]++;\n\trep(i,2,cnt){\n\t\tif(a[i].x!=a[i-1].x || a[i].y!=a[i-1].y){\n\t\t\tto[++tot]=a[i].y;\n\t\t\tnxt[tot]=fir[a[i].x];\n\t\t\tfir[a[i].x]=tot;\n\t\t\tde[a[i].y]++;\n\t\t}\n\t}\n}\nvoid spfa()//\u5f31\u5f31\u7684spfa \n{\n\tQ.push(co[s]);\n\tif(bookk[co[s]]) ans=co[s];\n\telse ans=0;\n\tbookkk[co[s]]=1;\n\tdis[co[s]]=si[co[s]];\n\twhile(!Q.empty()){\n\t\tll x=Q.front();Q.pop();\n\t\tfor(ll k=fir[x];k;k=nxt[k]){\n\t\t\tif(dis[to[k]]<dis[x]+si[to[k]]){\n\t\t\t\tdis[to[k]]=dis[x]+si[to[k]];\n\t\t\t\tif(dis[to[k]]>dis[ans] && bookk[to[k]]) ans=to[k];\n\t\t\t\tif(!bookkk[to[k]]) Q.push(to[k]),bookkk[to[k]]=1;\n\t\t\t}\n\t\t}\n\t\tbookkk[x]=0;\n\t}\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\trep(i,1,m){\n\t\tll u,v;\n\t\tscanf(\"%lld%lld\",&u,&v);\n\t\tade(u,v);//\u8fde\u8fb9 \n\t}\n\trep(i,1,n) scanf(\"%lld\",&val[i]);\n\tscanf(\"%lld%lld\",&s,&p);\n\trep(i,1,p){\n\t\tll x;scanf(\"%lld\",&x);\n\t\tbook[x]=1;\n\t}\n\trep(i,1,n) if(!dfn[i]) dfs(i);//\u7f29\u70b9 \n\twork();\n\tspfa();\n\tprintf(\"%lld\",dis[ans]);//\u54c8\u54c8\u54c8 \n}\n```",
        "postTime": 1538892730,
        "uid": 67840,
        "name": "niolle",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "#### ~~\u4e3a\u4e86\u5e86\u795d\u8fd9\u9053\u9898\u4e0d\u518d\u7206\u6808\u7279\u6765\u6c34\u4e00\u53d1\u9898\u89e3~~\n\u524d\u9762\u7684\u5927\u4f6c\u90fd\u662f\u7528\u7684tarjan\uff0c\u4e8e\u662f\u6765\u539a\u989c\u65e0\u803b\u7684\u8865\u4e00\u7bc7kosaraju  \n\u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8d77tarjan\u6765\uff0ckosaraju\u7684\u4ee3\u7801\u66f4\u5bb9\u6613\u7406\u89e3\u4e00\u4e9b  \n\u4e0d\u8fc7\u8fd8\u662f\u4e0d\u63a8\u8350\u5728\u505a\u9898\u7684\u65f6\u5019\u4f7f\u7528kosaraju  \n\u4e00\u662f\u9700\u8981\u518d\u5efa\u4e00\u4e2a\u53cd\u5411\u56fe\u5c31\u5f88\u9ebb\u70e6  \n\u4e8c\u662f\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u6837\u4f46\u662f\u8dd1\u8d77\u6765\u4e5f\u6ca1\u6709tarjan\u5feb  \n\u4e4b\u524d\u8fd9\u9053\u9898\u6808\u7a7a\u95f4\u5f00\u5c0f\u4e86\uff0c\u4f1aRE\u4e09\u4e2a\u70b9\uff0c\u6bd4tarjan\u591a\u4e00\u4e2a\uff0c\u8fd8\u662f\u6bd4\u8f83\u80fd\u8bf4\u660e\u95ee\u9898  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,m,s,p,ans,val[500010]/*\u521d\u59cb\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743*/;\nint cnt/*\u5f3a\u8054\u901a\u5206\u91cf\u4e2a\u6570*/,cmp[500010]/*\u6bcf\u4e2a\u70b9\u6240\u5c5e\u4e8e\u7684\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7f16\u53f7*/,scc[500010]/*\u8868\u793a\u7f29\u70b9\u4e4b\u540e\u7684\u70b9\u6743*/,dis[500010];\nvector<int> G[500010];//\u6b63\u5411\u56fe\nvector<int> rG[500010];//\u53cd\u5411\u56fe\nvector<int> sccG[500010];\nvector<int> vs;\nbool used[500010];\ninline int read(){\n    int x=0,k=1; char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')k=-1;c=getchar();}\n    while(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*k;\n}\n//\u52a0\u8fb9\uff0c\u540c\u65f6\u52a0\u4e0a\u6b63\u5411\u56fe\u548c\u53cd\u5411\u56fe\u7684\u8fb9\nvoid add_edge(int from,int to){\n\tG[from].push_back(to);\n\trG[to].push_back(from);\n}\n//\u7b2c\u4e00\u904ddfs\u627e\u51fa\u62d3\u6251\u5e8f\nvoid dfs(int v){\n\tused[v]=true;\n\tfor(int i=0;i<G[v].size();i++){\n\t\tif(!used[G[v][i]])dfs(G[v][i]);\n\t}\n\tvs.push_back(v);\n}\n//\u7b2c\u4e8c\u904ddfs\u627e\u5f3a\u8054\u901a\u5206\u91cf\n//\u5f53\u524d\u8282\u70b9\u548c\u5979\u5728\u53cd\u5411\u56fe\u4e2d\u80fd\u8bbf\u95ee\u7684\u70b9\u90fd\u5728\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\nvoid rdfs(int v){\n\tused[v]=true;\n\tcmp[v]=cnt;\n\tscc[cnt]+=val[v];//\u628a\u5f53v\u7684\u6743\u503c\u52a0\u5230\u5979\u5c5e\u4e8e\u7684\u5f3a\u8054\u901a\u5206\u91cf\u7684\u6743\u503c\u4e0a\n\tfor(int i=0;i<rG[v].size();i++){\n\t\tif(!used[rG[v][i]]){\n\t\t\trdfs(rG[v][i]);\n\t\t}\n\t}\n}\nvoid sscc(){\n\tmemset(used,0,sizeof(used));\n\tvs.clear();\n\tfor(int i=1;i<=n;i++){\n\t\tif(!used[i]) dfs(i);\n\t}\n\tmemset(used,0,sizeof(used));\n\tfor(int i=vs.size()-1;i>=0;i--){\n\t\tif(!used[vs[i]]){\n\t\t\tcnt++;\n\t\t\trdfs(vs[i]);\n\t\t}\n\t}\n    //\u7f29\u70b9\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<G[i].size();j++){\n\t\t\tif(cmp[G[i][j]]!=cmp[i]){\n            //\u5982\u679ci\u548cG[i][j]\u4e0d\u518d\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\uff0c\u5c06\u5979\u4eec\u6240\u5c5e\u7684\u5f3a\u8054\u901a\u5206\u91cf\u8fde\u8fb9\n\t\t\t\tsccG[cmp[i]].push_back(cmp[G[i][j]]);\n\t\t\t}\n\t\t}\n\t}\n}\nqueue<int> q;\n//\u4ee5\u4e0b\u5c31\u662f\u6c42\u6700\u77ed\uff08ch\u00e1ng\uff09\u8def\nvoid spfa(){\n    int u,v;\n    q.push(cmp[s]);\n    dis[cmp[s]]=scc[cmp[s]];\n    while(!q.empty()){\n        u=q.front(),v;\n        q.pop();\n        used[u]=false;\n        for(int i=0;i<sccG[u].size();i++){\n            v=sccG[u][i];\n            if(dis[v]<dis[u]+scc[v]){\n                dis[v]=dis[u]+scc[v];\n                if(!used[v]){\n                      used[v]=true;\n                      q.push(v);\n                }\n            }\n        }\n    }\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tint a,b;\n\t\ta=read();b=read();\n\t\tadd_edge(a,b);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tval[i]=read();\n\t}\n\ts=read();p=read();\n\tsscc();\n\tmemset(used,0,sizeof(used));\n\tspfa();\n\tfor(int i=1;i<=p;i++){\n\t\tint a;\n\t\ta=read();\n        //\u4ece\u6709\u9152\u9986\u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u627e\u4e00\u4e2a\u80fd\u6700\u540e\u80fd\u62a2\u6700\u591a\u7684\n\t\tans=max(ans,dis[cmp[a]]);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n[![iCKhE4.md.jpg](https://s1.ax1x.com/2018/09/06/iCKhE4.md.jpg)](https://imgchr.com/i/iCKhE4)  \n\u8fd9\u662f\u8bc4\u6d4b\u7ed3\u679c  \n\u52a0\u4e86\u8bfb\u5165\u4f18\u5316\u8fd8\u662f\u8dd1\u5f97\u5de8\u6162  \n~~\u4f46\u6211\u8fd8\u662f\u86ee\u559c\u6b22\u5199\u5199kosaraju\u73a9\u73a9\u7684~~",
        "postTime": 1536153041,
        "uid": 46751,
        "name": "\u672c\u5c45\u5c0f\u94c3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u76f8\u4fe1\u597d\u591a\u5199DP\u7684\u62ff\u5230\u4e8687\u5206\uff0c\u800c\u4e14\u770b\u4e0a\u53bb\u5199\u7684\u6ca1\u6709\u9519\u8bef\uff08~~\u6211\u5c31\u662f\u8fd9\u4e48\u4e2a....~~\uff09\n\n\u5199DP\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u6ce8\u610f\u4e00\u4e0b\u6761\u4ef6\uff08\u5176\u5b9e\u53d8\u6210\u4e86\u6700\u957f\u8def\uff09\n\n```cpp\ninline void work(){\n\tq.push(bl[s]);dp[bl[s]]=val[bl[s]];\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=hea[x];i;i=nex[i]){\n\t\t\tint y=ver[i];\n\t\t\tdp[y]=max(dp[y],dp[x]+val[y]);\n\t\t\tdu[y]--;\n\t\t\tif(du[y]==0)q.push(y);\n\t\t}\n\t}\n}\n\n```\n\n\u6ce8\u610f\u8fd9\u91cc\uff0c\u4e0d\u8981\u8ba9du[y]==0\u65f6\u518d\u5165\u961f\uff0c\u56e0\u4e3a\u4eba\u5bb6\u53c8\uff0c\u6ca1\u6709\u8bf4\u5fc5\u987b\u5165\u5ea6\u4e3a\u96f6\u624d\u80fd\u8d70\n\n![\u8fd9\u4e2a\u56fe](file:///C:/Documents%20and%20Settings/Administrator/%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%91%BD%E5%90%8D.bmp)\n\n~~\u56fe\u7247\u574f\u4e86~~\n\n\u90a3\u53ea\u597d\u518d\u8111\u5b50\u91cc\u9762\u60f3\u8c61\uff1a\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9\u5c31\u662f\u7ec8\u70b9\uff0c\u800c\u5de6\u9762\u6709\u4e24\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u53ef\u80fd\u4e0d\u4f1a\u5165\u961f\uff0c\u56e0\u4e3a\u8d77\u70b9\u53ea\u6709\u4e00\u4e2a\uff0c\u8fd9\u4e2a\u70b9\u7684\u5165\u5ea6\u53ef\u80fd\u4e00\u76f4\u4e0d\u56de\u53d8\u62100\uff0c\u4f46\u662f\u4e0d\u53d8\u62100\u5c31\u4e0d\u80fd\u8d70\u4e86\u5417\uff1f\uff1f\u6240\u4ee5\u8fd9\u4e48\u5199\u53ea\u670987\u5206\u5566(~~\u8bdd\u8bf4\u6570\u636e\u8fd8\u662f\u5f88\u6c34\u7684\u5427~~)\n\n\u662f\u4e0d\u662f\u53d1\u73b0\u81ea\u5df1\u6839\u672c\u8dd1\u4e0d\u5230\u7ec8\u70b9\uff1f\uff1f\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<map>\nusing namespace std;\nconst int N=5e5+10;\nint ver[N],nex[N],hea[N];\nint w[N],val[N];\nint bl[N],du[N],st[N];\nint dfn[N],low[N];\nint n,m,num,tot,cnt,top,s,p;\nbool ins[N];\nint a[N],b[N];\nint dp[N];\nbool v1[N],v2[N];\nqueue<int>q;\nmap<pair<int,int>,bool>v;\n\ninline void add(int x,int y){\n\tver[++tot]=y;nex[tot]=hea[x];hea[x]=tot;\n}\n\ninline void tr(int x){\n\tdfn[x]=low[x]=++cnt;\n\tst[++top]=x;ins[x]=1;\n\tfor(int i=hea[x];i;i=nex[i]){\n\t\tint y=ver[i];\n\t\tif(!dfn[y]){\n\t\t\ttr(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(ins[y])low[x]=min(low[x],dfn[y]);\n\t}\n\tif(dfn[x]==low[x]){\n\t\tnum++;\n\t\twhile(st[top+1]!=x){\n\t\t\tint y=st[top--];\n\t\t\tins[y]=0;val[num]+=w[y];bl[y]=num;\n\t\t\tif(v1[y])v2[num]=1;\n\t\t}\n\t}\n}\n\ninline void work(){\n\tq.push(bl[s]);dp[bl[s]]=val[bl[s]];\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=hea[x];i;i=nex[i]){\n\t\t\tint y=ver[i];\n\t\t\tif(dp[y]<dp[x]+val[y]){\n\t\t\t\tdp[y]=dp[x]+val[y];\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\ta[i]=x,b[i]=y;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&w[i]);\n\t}\n\tscanf(\"%d%d\",&s,&p);\n\tfor(int i=1;i<=p;i++){\n\t\tint x;scanf(\"%d\",&x);v1[x]=1;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!dfn[i])tr(i);\n\t}\n\tmemset(hea,0,sizeof(hea));tot=0;\n\tfor(int i=1;i<=m;i++){\n\t\tint fx=bl[a[i]],fy=bl[b[i]];\n\t\tif(fx==fy||v[make_pair(fx,fy)])continue;\n\t\telse{\n\t\t\tadd(fx,fy);\n\t\t\tdu[fy]++;\n\t\t}\n\t}\n//\tfor(int i=1;i<=m;i++)cout<<a[i]<<\"  \"<<b[i]<<\"  \";cout<<endl;\n//\tfor(int i=1;i<=num;i++)cout<<val[i]<<\"  \";cout<<endl;\n//\tfor(int j=1;j<=num;j++){\n//\t\tfor(int i=hea[j];i;i=nex[i]){\n//\t\t\tcout<<ver[i]<<\"  \";\n//\t\t}\n//\t\tcout<<endl;\n//\t}\n\twork();\n\tint ans=0;\n\tfor(int i=1;i<=num;i++){\n\t\tif(v2[i])ans=max(ans,dp[i]);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1571960918,
        "uid": 169137,
        "name": "k\uff0c\u706b\u9b42",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u6253\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\uff0c\u5fc3\u7d2f\u554a\uff0c\u5dee\u70b9\u5c31\u6253\u4e0d\u4e0b\u53bb\u4e86\uff0c\u8fd8\u597d\u575a\u6301\u4e0b\u6765\u4e86\n\n\u6700\u540e\u7684\u5ef6\u65f6\u5956\u52b1\u5c31\u662f\u4e00\u904dAC\u5566\n\n\u7531\u4e8eSiruseri\u80fd\u5728\u591a\u6b21\u7ecf\u8fc7\u4e00\u4e2a\u8def\u53e3\uff0c\u6240\u4ee5\u5982\u679c\u8be5\u8def\u53e3\u5904\u4e8e\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\uff0c\u5219\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u5176\u4ed6\u7684ATM\u673a\u4e00\u5b9a\u80fd\u591f\u5230\u8fbe\uff0c\u6240\u4ee5\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5bf9\u6b64\u56fe\u8fdb\u884c\u7f29\u70b9\uff0c\u7f29\u5b8c\u540e\u5728\u65b0\u5efa\u7684\u56fe\u4e2d\u8dd1\u4e00\u904d\u6700\u957f\u8def\u5373\u53ef\n\n\u6700\u540e\u8ba1\u7b97\u6700\u5927\u503c\u7684\u65f6\u5019\uff0c\u5f53\u4e14\u4ec5\u5f53\u8be5\"\u70b9\"\u4e2d\u5b58\u5728\u9152\u5427\u624d\u7b97\u4e0a\u8fd9\u4efd\uff0c\n\u5426\u5219\u5c31\u662f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684(\u56e0\u4e3aSiruseri\u8981\u53bb\u9152\u5427\u5e86\u795d)\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 500005;\n\nint s, p, n, m, num, idx, top, tot;\nint a[N], dl[N], dfn[N], low[N];\nint val1[N], bar1[N], head1[N];\nint val2[N], bar2[N], head2[N];\nint in[N], dis[N];\n\nqueue <int> q;\n\nstruct edge {\n\tint to;\n\tint next;\n}s1[N], s2[N];\n\ninline int Min(int x, int y) {\n\treturn x < y ? x : y;\n}\n\ninline int Max(int x, int y) {\n\treturn x > y ? x : y;\n}\n\nvoid add1(int u, int v) {\n\ts1[num].to = v;\n\ts1[num].next = head1[u];\n\thead1[u] = num ++;\n}\n\nvoid add2(int u, int v) {\n\ts2[num].to = v;\n\ts2[num].next = head2[u];\n\thead2[u] = num ++;\n}\n\nvoid tarjan(int x) {\n\tdfn[x] = low[x] = ++ idx;\n\tdl[++ top] = x;\n\tfor(int i = head1[x]; ~i; i = s1[i].next) {\n\t\tif(!dfn[s1[i].to])\n\t\t\ttarjan(s1[i].to), low[x] = Min(low[x], low[s1[i].to]);\n\t\telse if(!a[s1[i].to]) low[x] = Min(low[x], dfn[s1[i].to]);\n\t}\n\t\n\tif(dfn[x] == low[x]) {\n\t\ta[x] = ++tot;\n\t\twhile(dl[top] != x) {\n\t\t\ta[dl[top]] = tot;\n\t\t\tif(bar1[dl[top]] && !bar2[tot])\n\t\t\t\tbar2[tot] = 1;\n\t\t\tval2[tot] += val1[dl[top]];\n\t\t\ttop --;\n\t\t}\n\t\tif(bar1[dl[top]] && !bar2[tot])\n\t\t\tbar2[tot] = 1;\n\t\tval2[tot] += val1[dl[top]];\n\t\ttop --;\n\t}\n}\n\nvoid build() {\n\tfor(int i = 1; i <= n; i ++)\n\t\tif(a[i]) {\n\t\t\tfor(int j = head1[i]; ~j; j = s1[j].next)\n\t\t\t\tif(a[i] != a[s1[j].to]) {\n\t\t\t\t\tadd2(a[i], a[s1[j].to]);\n\t\t\t\t\t++ in[a[s1[j].to]];\n\t\t\t\t}\n\t\t}\n}\n\nvoid topsort() {\n\tmemset(dis, 0xaf, sizeof dis);  dis[a[s]] = val2[a[s]];\n\tfor(int i  = 1; i <= tot; i ++)\n\t\tif(!in[i]) q.push(i);\n\t\n\twhile(!q.empty()) {\n\t\tint x = q.front();  q.pop();\n\t\tfor(int i = head2[x]; ~i; i = s2[i].next) {\n\t\t\tdis[s2[i].to] = Max(dis[s2[i].to], dis[x] + val2[s2[i].to]);\n\t\t\tif(!(-- in[s2[i].to])) q.push(s2[i].to);\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d %d\", &n, &m);\n\t\n\tmemset(head1, -1, sizeof head1);\n\tmemset(head2, -1, sizeof head2);\n\tfor(int i = 1; i <= m; i ++) {\n\t\tint u, v;\n\t\tscanf(\"%d %d\", &u, &v);\n\t\tadd1(u, v);\n\t}\n\tfor(int i = 1; i <= n; i ++) scanf(\"%d\", &val1[i]);\n\t\n\tint x;\n\tscanf(\"%d %d\", &s, &p);\n\tfor(int i = 1; i <= p; i ++)\n\t\tscanf(\"%d\", &x), bar1[x] = 1;\n\t\n\tnum = 0;\n\ttarjan(s);\n\tbuild();\n\ttopsort();\n\t\n\tint mx = -1e9;\n\tfor(int i = 1; i <= tot; i ++)\n\t\tif(bar2[i]) mx = Max(dis[i], mx);\n\tprintf(\"%d\\n\", mx);\n\t\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1568812286,
        "uid": 160501,
        "name": "\u4e0e\u6211\u5e38\u5728",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "### \u9898\u9762\n\n1518\uff1a\u62a2\u63a0\u8ba1\u5212\n\n\u65f6\u95f4\u9650\u5236: 1000 ms \u5185\u5b58\u9650\u5236: 131072 KB\n\n\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u539f\u9898\u6765\u81ea\uff1aAPIO 2009\n\n$Siruseri$\u57ce\u4e2d\u7684\u9053\u8def\u90fd\u662f\u5355\u5411\u7684\u3002\u4e0d\u540c\u7684\u9053\u8def\u7531\u8def\u53e3\u8fde\u63a5\u3002\u6309\u7167\u6cd5\u5f8b\u7684\u89c4\u5b9a\uff0c\u5728\u6bcf\u4e2a\u8def\u53e3\u90fd\u8bbe\u7acb\u4e86\u4e00\u4e2a$Siruseri$\u94f6\u884c\u7684$ATM$\u53d6\u6b3e\u673a\u3002\u4ee4\u4eba\u5947\u602a\u7684\u662f\uff0c$Siruseri$\u7684\u9152\u5427\u4e5f\u90fd\u8bbe\u5728\u8def\u53e3\uff0c\u867d\u7136\u5e76\u4e0d\u662f\u6bcf\u4e2a\u8def\u53e3\u90fd\u8bbe\u6709\u9152\u5427\u3002\n\n$Banditji$\u8ba1\u5212\u5b9e\u65bd$Siruseri$\u6709\u53f2\u4ee5\u6765\u6700\u60ca\u5929\u52a8\u5730\u7684$ATM$\u62a2\u52ab\u3002\u4ed6\u5c06\u4ece\u5e02\u4e2d\u5fc3\u51fa\u53d1\uff0c\u6cbf\u7740\u5355\u5411\u9053\u8def\u884c\u9a76\uff0c\u62a2\u52ab\u6240\u6709\u4ed6\u9014\u5f84\u7684$ATM$\u673a\uff0c\u6700\u7ec8\u4ed6\u5c06\u5728\u4e00\u4e2a\u9152\u5427\u5e86\u795d\u4ed6\u7684\u80dc\u5229\u3002\n\n\u4f7f\u7528\u9ad8\u8d85\u7684\u9ed1\u5ba2\u6280\u672f\uff0c\u4ed6\u83b7\u77e5\u4e86\u6bcf\u4e2a$ATM$\u673a\u4e2d\u53ef\u4ee5\u63a0\u53d6\u7684\u73b0\u91d1\u6570\u989d\u3002\u4ed6\u5e0c\u671b\u4f60\u5e2e\u52a9\u4ed6\u8ba1\u7b97\u4ece\u5e02\u4e2d\u5fc3\u51fa\u53d1\u6700\u540e\u5230\u8fbe\u67d0\u4e2a\u9152\u5427\u65f6\u6700\u591a\u80fd\u62a2\u52ab\u7684\u73b0\u91d1\u603b\u6570\u3002\u4ed6\u53ef\u4ee5\u7ecf\u8fc7\u540c\u4e00\u8def\u53e3\u6216\u9053\u8def\u4efb\u610f\u591a\u6b21\u3002\u4f46\u53ea\u8981\u4ed6\u62a2\u52ab\u8fc7\u67d0\u4e2a$ATM$\u673a\u540e\uff0c\u8be5$ATM$\u673a\u91cc\u9762\u5c31\u4e0d\u4f1a\u518d\u6709\u94b1\u4e86\u3002\n\n\u4f8b\u5982\uff0c\u5047\u8bbe\u8be5\u57ce\u4e2d\u6709$6$\u4e2a\u8def\u53e3\uff0c\u9053\u8def\u7684\u8fde\u63a5\u60c5\u51b5\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/4396.png)\n\n\u5e02\u4e2d\u5fc3\u5728\u8def\u53e3$1$\uff0c\u7531\u4e00\u4e2a\u5165\u53e3\u7b26\u53f7 \u2192 \u6765\u6807\u8bc6\uff0c\u90a3\u4e9b\u6709\u9152\u5427\u7684\u8def\u53e3\u7528\u53cc\u5708\u6765\u8868\u793a\u3002\u6bcf\u4e2a$ATM$\u673a\u4e2d\u53ef\u53d6\u7684\u94b1\u6570\u6807\u5728\u4e86\u8def\u53e3\u7684\u4e0a\u65b9\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c$Banditji$\u80fd\u62a2\u52ab\u7684\u73b0\u91d1\u603b\u6570\u4e3a$47$\uff0c\u5b9e\u65bd\u7684\u62a2\u52ab\u8def\u7ebf\u662f\uff1a1\u22122\u22124\u22121\u22122\u22123\u22125\u3002\n\n\u3010\u8f93\u5165\u3011\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570$N,M$\u3002$N$\u8868\u793a\u8def\u53e3\u7684\u4e2a\u6570\uff0c$M$\u8868\u793a\u9053\u8def\u6761\u6570\u3002\n\n\u63a5\u4e0b\u6765$M$\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570\uff0c\u8fd9\u4e24\u4e2a\u6574\u6570\u90fd\u5728$1$\u5230$N$\u4e4b\u95f4\uff0c\u7b2c$i+1$\u884c\u7684\u4e24\u4e2a\u6574\u6570\u8868\u793a\u7b2c$i$\u6761\u9053\u8def\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u8def\u53e3\u7f16\u53f7\u3002\n\n\u63a5\u4e0b\u6765$N$\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u6309\u987a\u5e8f\u8868\u793a\u6bcf\u4e2a\u8def\u53e3\u5904\u7684$ATM$\u673a\u4e2d\u7684\u94b1\u6570\u3002\n\n\u63a5\u4e0b\u6765\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570$S,P$\uff0c$S$\u8868\u793a\u5e02\u4e2d\u5fc3\u7684\u7f16\u53f7\uff0c\u4e5f\u5c31\u662f\u51fa\u53d1\u7684\u8def\u53e3\u3002$P$\u8868\u793a\u9152\u5427\u6570\u76ee\u3002\n\n\u63a5\u4e0b\u6765\u7684\u4e00\u884c\u4e2d\u6709$P$\u4e2a\u6574\u6570\uff0c\u8868\u793a$P$\u4e2a\u6709\u9152\u5427\u7684\u8def\u53e3\u7684\u7f16\u53f7\u3002\n\n\u3010\u8f93\u51fa\u3011\n\n\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a$Banditji$\u4ece\u5e02\u4e2d\u5fc3\u5f00\u59cb\u5230\u67d0\u4e2a\u9152\u5427\u7ed3\u675f\u6240\u80fd\u62a2\u52ab\u7684\u6700\u591a\u7684\u73b0\u91d1\u603b\u6570\u3002\n\n\u3010\u8f93\u5165\u6837\u4f8b\u3011\n\n6 7\n\n1 2\n\n2 3\n\n3 5\n\n2 4\n\n4 1\n\n2 6\n\n6 5\n\n10\n\n12\n\n8\n\n16\n\n1 5\n\n1 4\n\n4\n\n3\n\n5\n\n6\n\n\u3010\u8f93\u51fa\u6837\u4f8b\u3011\n\n47\n\n\u3010\u63d0\u793a\u3011\n\n\u6570\u636e\u8303\u56f4\u4e0e\u63d0\u793a:\n\n$50%$\u7684\u8f93\u5165\u4fdd\u8bc1$N,M\u22643000$\u3002\n\n$100%$\u7684\u8f93\u5165\u4fdd\u8bc1$N,M\u2264500000$\u3002\n\n\u6bcf\u4e2a$ATM$\u673a\u4e2d\u53ef\u53d6\u7684\u94b1\u6570\u4e3a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u4e14\u4e0d\u8d85\u8fc7$400$0\u3002\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u4f60\u53ef\u4ee5\u4ece\u5e02\u4e2d\u5fc3\u6cbf\u7740$Siruseri$\u7684\u5355\u5411\u7684\u9053\u8def\u5230\u8fbe\u5176\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\u9152\u5427\u3002\n\n### \u7b97\u6cd5\n\nTarjan\u7f29\u70b9+SPFA\u6700\u957f\u8def\n\n>\u6709\u5411\u56fe\u5f3a\u8fde\u901a\u5206\u91cf\uff1a\u5728\u6709\u5411\u56fe$G$\u4e2d\uff0c\u5982\u679c\u4e24\u4e2a\u9876\u70b9$vi,vj$\u95f4\uff08$vi>vj$\uff09\u6709\u4e00\u6761\u4ece$vi$\u5230$vj$\u7684\u6709\u5411\u8def\u5f84\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u6761\u4ece$vj$\u5230$vi$\u7684\u6709\u5411\u8def\u5f84\uff0c\u5219\u79f0\u4e24\u4e2a\u9876\u70b9\u5f3a\u8fde\u901a$(strongly$ $connected)$\u3002\u5982\u679c\u6709\u5411\u56fe$G$\u7684\u6bcf\u4e24\u4e2a\u9876\u70b9\u90fd\u5f3a\u8fde\u901a\uff0c\u79f0$G$\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u3002\u6709\u5411\u56fe\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe\uff0c\u79f0\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf$(strongly$ $connected$ $components)$\u3002\n\n\u5bf9\u4e8e\u672c\u9898\u4e2d\u7684\u5f3a\u76d7\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u5fc5\u5b9a\u80fd\u5c06\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684$ATM$\u673a\u7684\u94b1\u62a2\u5b8c\uff08\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u5f3a\u8fde\u901a\uff0c\u5e76\u4e14\u4e00\u6761\u8fb9\u53ef\u4ee5\u8d70\u5f88\u591a\u6b21\uff09\uff0c\u6240\u6709\u5c06\u539f\u56fe\u8ba1\u7b97\u5f3a\u8fde\u901a\u5206\u91cf\u5e76\u7f29\u70b9\uff0c\u53d8\u6210\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe\uff0c\u5b9a\u4e49\u8fb9\u6743\u4e3a\u6307\u5411\u7684\u7ed3\u70b9\u6240\u4ee3\u8868\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684$ATM$\u673a\u7684\u94b1\u7684\u603b\u6570\uff0c\u518d\u5728\u8fd9\u5f20\u6709\u5411\u65e0\u73af\u56fe\u4e2d\u6c42\u6700\u957f\u8def\uff08\u8d77\u59cb\u7ed3\u70b9\u7684\u6700\u957f\u8def\u5f84\u8bbe\u7f6e\u4e3a\u5f53\u524d\u8282\u70b9\u4ee3\u8868\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u91d1\u989d\u548c\uff09\u3002\n\n\u6709\u5411\u65e0\u73af\u56fe\u6c42\u6700\u957f\u8def\u6709\u5f88\u591a\u529e\u6cd5\uff0c\u6b64\u5904\u4f7f\u7528\u7684\u662f\u56fe\u8bba\u6700\u77ed\u8def / \u6700\u957f\u8def\u7684SPFA\u7b97\u6cd5\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<stack>\n#include<queue>\n#define mini(a,b) ((a)<(b)?(a):(b))\n#define maxi(a,b) ((a)>(b)?(a):(b))\nconst unsigned int N=500005;\nunsigned int n,m,s,p,b[N],u[N],v[N];\nunsigned short int a[N];\nlong long int ans;\nstruct node\n{\n\tunsigned int to,next;\n\tunsigned long long int w;\n}edge[N];\nunsigned int cnt,head[N];\ninline void add(unsigned int x,unsigned int y)\n{\n\tcnt++;\n\tedge[cnt].to=y;\n\tedge[cnt].next=head[x];\n\thead[x]=cnt;\n}\ninline void addw(unsigned int u,unsigned int v,unsigned long long int w)\n{\n\tcnt++;\n\tedge[cnt].to=v;\n\tedge[cnt].next=head[u];\n\thead[u]=cnt;\n\tedge[cnt].w=w;\n}//\u94fe\u5f0f\u524d\u5411\u5fc3\u5b58\u8fb9\u3001\u52a0\u8fb9\uff08\u5bf9\u4e8e\u65b0\u7684\u56fe\uff0c\u91c7\u7528\u65e7\u56fe\u7684\u7ed3\u6784\u4f53\u5b58\uff0c\u7701\u5185\u5b58\uff09\nunsigned int dfn[N],low[N],step,col[N],num;\nunsigned long long int sum[N];\nstd::stack<unsigned int> stack;\nvoid Tarjan(unsigned int i)\n{\n\tstep++;\n\tdfn[i]=step;\n\tlow[i]=step;\n\tstack.push(i);\n\tunsigned int k;\n\tfor(unsigned int j=head[i];j!=0;j=edge[j].next)\n\t{\n\t\tk=edge[j].to;\n\t\tif(dfn[k]==0)\n\t\t{\n\t\t\tTarjan(k);\n\t\t\tlow[i]=mini(low[i],low[k]);\n\t\t}\n\t\telse if(col[k]==0)\n\t\t{\n\t\t\tlow[i]=mini(low[i],dfn[k]);\n\t\t}\n\t}\n\tif(dfn[i]==low[i])\n\t{\n\t\tnum++;\n\t\tcol[i]=num;\n\t\tsum[num]+=a[i];\n\t\twhile(stack.top()!=i)\n\t\t{\n\t\t\tcol[stack.top()]=num;\n\t\t\tsum[num]+=a[stack.top()];//\u7edf\u8ba1\u603b\u91d1\u989d\n\t\t\tstack.pop();\n\t\t}\n\t\tstack.pop();\n\t}\n\treturn;\n}//\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9Tarjan\u7b97\u6cd5\nlong long int dis[N];\nstd::queue<unsigned int> q;\nbool book[N];\nint main()\n{\n\tscanf(\"%u%u\",&n,&m);\n\tfor(register unsigned int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%u%u\",&u[i],&v[i]);\n\t\tadd(u[i],v[i]);\n\t}\n\tfor(register unsigned int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%hu\",&a[i]);\n\t}\n\tscanf(\"%u%u\",&s,&p);\n\tfor(register unsigned int i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%u\",&b[i]);\n\t}//\u8bfb\u5165\u3001\u52a0\u8fb9\n\tfor(register unsigned int i=1;i<=n;i++)\n\t{\n\t\tif(dfn[i]==0)\n\t\t{\n\t\t\tTarjan(i);\n\t\t}\n\t}//Tarjan\u7b97\u6cd5\n\tcnt=0;\n\tmemset(head,0,sizeof(head));\n\tfor(register unsigned int i=1;i<=m;i++)\n\t{\n\t\tif(col[u[i]]!=col[v[i]])\n\t\t{\n\t\t\taddw(col[u[i]],col[v[i]],sum[col[v[i]]]);\n\t\t}\n\t}//\u91cd\u65b0\u52a0\u8fb9\n\tdis[col[s]]=sum[col[s]];\n\tq.push(col[s]);\n\tregister unsigned int i,k;\n\twhile(!q.empty())\n\t{\n\t\ti=q.front();\n\t\tq.pop();\n\t\tbook[i]=0;\n\t\tfor(register unsigned int j=head[i];j!=0;j=edge[j].next)\n\t\t{\n\t\t\tk=edge[j].to;\n\t\t\tif(dis[k]<dis[i]+edge[j].w)\n\t\t\t{\n\t\t\t\tdis[k]=dis[i]+edge[j].w;\n\t\t\t\tif(book[k]==0)\n\t\t\t\t{\n\t\t\t\t\tq.push(k);\n\t\t\t\t\tbook[k]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}//SPFA\u6700\u957f\u8def\n\tfor(register unsigned int i=1;i<=p;i++)\n\t{\n\t\tans=maxi(ans,dis[col[b[i]]]);\n\t}//\u7edf\u8ba1\u7b54\u6848\n\tprintf(\"%llu\",ans);\n\treturn 0;\n}\n```\n\n#### \u8fd0\u884c\u7ed3\u679c\n\n\u4e00\u672c\u901aOJ\uff1a\n\n1518\n\n\u672a\u901a\u8fc7 93\u5206\n\n\u6d4b\u8bd5\u70b91: \u7b54\u6848\u6b63\u786e 2456KB 7MS \n\n\u6d4b\u8bd5\u70b92: \u7b54\u6848\u6b63\u786e 2452KB 7MS \n\n\u6d4b\u8bd5\u70b93: \u7b54\u6848\u6b63\u786e 2460KB 7MS \n\n\u6d4b\u8bd5\u70b94: \u7b54\u6848\u6b63\u786e 2560KB 9MS \n\n\u6d4b\u8bd5\u70b95: \u7b54\u6848\u6b63\u786e 2572KB 8MS \n\n\u6d4b\u8bd5\u70b96: \u7b54\u6848\u6b63\u786e 2584KB 9MS \n\n\u6d4b\u8bd5\u70b97: \u7b54\u6848\u6b63\u786e 2572KB 9MS \n\n\u6d4b\u8bd5\u70b98: \u7b54\u6848\u6b63\u786e 2620KB 9MS \n\n\u6d4b\u8bd5\u70b99: \u7b54\u6848\u6b63\u786e 2612KB 9MS \n\n\u6d4b\u8bd5\u70b910: \u7b54\u6848\u6b63\u786e 25180KB 536MS \n\n\u6d4b\u8bd5\u70b911: \u7b54\u6848\u6b63\u786e 24668KB 560MS \n\n\u6d4b\u8bd5\u70b912: \u8fd0\u884c\u9519\u8bef 33164KB 539MS \n\n\u6d4b\u8bd5\u70b913: \u7b54\u6848\u6b63\u786e 31632KB 568MS \n\n\u6d4b\u8bd5\u70b914: \u7b54\u6848\u6b63\u786e 24140KB 517MS \n\n\u6d4b\u8bd5\u70b915: \u7b54\u6848\u6b63\u786e 24160KB 504MS \n\n\u624d2MB\u6808\u7a7a\u95f4\uff0c\u7b2c12\u70b9\u7206\u6808\u4e86\uff01\n\n\u6d1b\u8c37\uff1a\n\n\u7528\u65f6 1.58s \u5185\u5b58 37.66MB\n\n\u6d4b\u8bd5\u70b9\u4fe1\u606f\n\n8ms/18.63MB AC #1\n\n276ms/21.32MB AC #2\n\n298ms/20.53MB AC #3\n\n256ms/37.66MB AC #4\n\n257ms/35.27MB AC #5\n\n233ms/24.74MB AC #6\n\n202ms/26.70MB AC #7\n\n5ms/2.52MB AC #8\n\n4ms/2.68MB AC #9\n\n6ms/2.78MB AC #10\n\n6ms/2.82MB AC #11\n\n5ms/2.70MB AC #12\n\n10ms/18.79MB AC #13\n\n8ms/18.64MB AC #14\n\n5ms/2.64MB AC #15",
        "postTime": 1566373775,
        "uid": 158626,
        "name": "lzcjoe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627\u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212 \u4e00\u672c\u901a\u63d0\u9ad8\u7bc7 3.5.4 1518 \u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "### ~~\u5927\u5bb6\u597d\uff01\u8fd9\u91cc\u849f\u84bb\u4e00\u679a~~\n# \u6211\u4eec\u6765\u89e3\u8bfb\u4e00\u4e0b\u8fd9\u9053\u6709\u8da3\uff08po gai\uff09\u7684\u9898\u76ee\n### 1.\u7f29\u70b9\n\u9996\u5148\uff0c\u6211\u4eec\u8bfb\u4e00\u4e0b\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c**\u9898\u4e2d\u201c\u5355\u5411\u8fb9\u201d\u201c\u53ef\u4ee5\u7ecf\u8fc7\u9053\u8def\u6216\u8def\u53e3\u4efb\u610f\u591a\u6b21\u201d**\uff0c\u8fd9\u4e9b\u4fe1\u606f\u90fd\u63d0\u9192\u6211\u4eec\u5f88\u591a\u73af\uff0c\u5e76\u4e14\u6bcf\u4e2a\u73af\u4e2d\u7684ATM\u90fd\u53ef\u4ee5\u63a0\u593a\u5149\u3002\u6b64\u5916\uff0c\u53ea\u8981\u4e00\u4e2a\u73af\u6709\u4e00\u4e2a\u9152\u5427\uff0c\u6700\u7ec8\u5c31\u80fd\u505c\u7559\u5728\u8fd9\u4e2a\u73af\u4e0a\u3002\u4e8e\u662f\uff0c\u53ef\u4ee5**\u7f29\u70b9**\u3002\u4e8e\u662f\u4e4e\uff0c\u6211\u4eec\u5c31tarjan\u4e00\u4e0b\u3002\n```c++\ninline void tarjan(int p) {\n\tdfn[p] = low[p] = ++ tot;\n\tvis[p] = true;\n\tsta[++ cnt] = p;\n\tfor (int e = head[p]; e; e = l[e].nex) {\n\t\tint u = l[e].to;\n\t\tif (!dfn[u]) {\n\t\t\ttarjan(u);\n\t\t\tlow[p] = min(low[p], low[u]);\n\t\t}\n\t\telse if (vis[u]) low[p] = min(low[p], dfn[u]);\n\t}\n\tif (dfn[p] == low[p]) {\n\t\tint fr = 0; len ++;\n\t\twhile(fr != p) {\n\t\t\tfr = sta[cnt --];\n\t\t\tvis[fr] = false;\n\t\t\tbel[fr] = len;\n\t\t\tsum[len] += mon[fr];\uff08\u63a0\u593a\u94b1\u6570\u7d2f\u52a0\uff09\n\t\t\tif (lub[fr]) bar[len] = true; \uff08\u6709\u9152\u5427\u5c31\u80fd\u505c\uff09\n\t\t}\n\t}\n}\n```\n\u7136\u540e\u522b\u5fd8\u4e86\u53bb\u91cd\u5efa\u8fb9\n```c++\n(set <pair <int, int> > s) //ps\uff1as\u662f\u96c6\u5408\uff0c\u80fd\u53bb\u91cd\uff1bpair\u662f\u5bf9\u53d8\u91cf\uff0c\u8bb0\u4e00\u5bf9\u6570\nfor (int i = 1; i <= n; i ++) {\n\tfor (int j = head[i]; j; j = l[j].nex) {\n\t\tint u = l[j].to;\n\t\tif (bel[u] != bel[i]) s.insert(make_pair(bel[i], bel[u]));\n\t}\n}\nset<pair <int, int> > :: iterator  it;\nint ii = 0;\nfor (it = s.begin(); it != s.end(); it ++) {\n\tg[++ ii] = (info) {it->first, tail[it->second]};\n\ttail[it->second] = ii;\n\tr[it->first] ++;\n}\n```\n### 2.\u52a8\u89c4\n\u5f88\u591a\u4eba\u7f29\u70b9\u540e\u8dd1\u6700\u957f/\u6700\u77ed\u8def\uff0c\u7136\u800c\u6211\u60f3\u521b\u65b0~~\u5b9e\u9645\u662f\u6211\u4e0d\u60f3\u62cd\u5197\u957f\u4ee3\u7801~~\n\n**\u52a8\u89c4\u5927\u6cd5\u597d\uff01**\n\n\u5b9a\u4e49val[]\u4e3a\u8be5\u70b9\u63d0\u4f9b\u6700\u5927\u4ef7\u503c\uff0csum\u5373\u4e3a[]\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\n\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\uff1a\u7f29\u70b9\u540e\uff0c\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u7684\u6700\u5927val\uff0c\u5fc5\u7136\u4e3a**\u8be5\u70b9\u6743\u503csum+\u5b50\u8282\u70b9\u4e2d\u6700\u5927val**\n\n**\u5373val[a] = max(val[a], val[b] + sum[a]);(b\u4e3aa\u5b50\u8282\u70b9**\n\n\u6709\u4e86\u8fd9\u6837\u7684\u52a8\u89c4\u65b9\u7a0b\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6b21\u5e8f\u3002\u518d\u6765\u60f3\uff0c**\u51fa\u5ea6**\u4e3a0\u7684\u70b9\u4ef7\u503c\u5fc5\u7136\u5c31\u662f\u81ea\u5df1\u7684\u6743\u503c\uff08\u5b83\u6ca1\u513f\u5b50\uff09\u3002\u4e8e\u662f\u4e4e\uff0c\u6211\u4eec\u5c31\u56de\u5fc6\u8d77\u4e00\u4e2a\u719f\u6089\u7684\u666e\u53ca\u7ec4\u7b97\u6cd5\u3002\n### 3.\u62d3\u6251\ntopo\uff08\uff09+\u52a8\u89c4\uff0c\u5927\u5bb6\u90fd\u5f88\u719f\u6089\uff0c\u4f46\u5728\u8fd9\u91cc\u6211\u4eec\u53d1\u73b0\uff0c\n## **\u51fa\u5ea6**\u4e0d\u662f\u62d3\u6251\u80fd\u89e3\u51b3\u7684\uff0c**\u5165\u5ea6**\u624d\u662f\u3002\n\n\u4e8e\u662f\u4e4e\uff0c\u6211\u4eec\u5bf9\u5b83\u6539\u9020\u4e00\u4e0b\u3002\n\u5177\u4f53\u6765\u8bb2\uff0c\u5c31\u662f\u5c06\u539f\u56fe\u4e2d\u7684\u8fb9\u6240\u6307\u65b9\u5411\u7ffb\u8f6c\uff0c\u8fd9\u6837\u51fa\u5ea6\u53d8\u5165\u5ea6\uff0c\u8d77\u70b9\u53d8\u7ec8\u70b9\uff0c\u8fd9\u6837\u62d3\u6251\u5e8f+\u52a8\u89c4\u5c31\u80fd\u8f7b\u677eAC\u672c\u9898\u4e86\u3002\n### 4.\u4ee3\u7801\uff08~~\u7801\u98ce\u4e4b\u6c14\u5929\u4e0a\u6765\uff0cAC\u4e4b\u529b\u4e0d\u590d\u56de~~\uff09\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T> inline void read(T &x) {\n\tx = 0;\n\tT f = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n\tfor (; isdigit(c); c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n\tx *= f;\n}\ninline void d_read(double &x) {\n\tx = 0.0;\n\tint f = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n\tfor (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n\tif (c == '.'){\n\t\tdouble num = 1.0;\n\t\tc = getchar();\n\t\tfor (; isdigit(c); c = getchar()) x = x + (num /= 10) * (c ^ 48);\n\t}\n\tx *= f;\n}\n\ntemplate <typename T> inline void w(T x) {\n\tif (x > 9) w(x / 10);\n\tputchar(x % 10 + 48);\n}\ntemplate <typename T> inline void write(T x, char c) {\n\tif (x < 0){\n\t\tputchar('-');\n\t\tx = -x;\n\t}\n\tw(x);\n\tputchar(c);\n}\nconst int M = 5e5 + 5;\nstruct info{\n\tint to, nex;\n}l[M], g[M];\nint ans, cnt, tot, len, val[M], r[M], tail[M], dfn[M], low[M], sum[M], sta[M], bel[M], mon[M], head[M];\nbool lub[M], vis[M], bar[M], flg[M];\nset<pair <int, int> >s;\nqueue <int> q;\ninline void tarjan(int p) {\n\tdfn[p] = low[p] = ++ tot;\n\tvis[p] = true;\n\tsta[++ cnt] = p;\n\tfor (int e = head[p]; e; e = l[e].nex) {\n\t\tint u = l[e].to;\n\t\tif (!dfn[u]) {\n\t\t\ttarjan(u);\n\t\t\tlow[p] = min(low[p], low[u]);\n\t\t}\n\t\telse if (vis[u]) low[p] = min(low[p], dfn[u]);\n\t}\n\tif (dfn[p] == low[p]) {\n\t\tint fr = 0; len ++;\n\t\twhile(fr != p) {\n\t\t\tfr = sta[cnt --];\n\t\t\tvis[fr] = false;\n\t\t\tbel[fr] = len;\n\t\t\tsum[len] += mon[fr];\n\t\t\tif (lub[fr]) bar[len] = true; \n\t\t}\n\t}\n}\ninline void dfs(int p, int num) {\n\tif (bar[p]) ans = max(ans, num); \n\tfor (int e = tail[p]; e; e = g[e].nex) {\n\t\tint u = g[e].to;\n\t\tdfs(u, num + sum[u]);\n\t}\n}\nint main(void) {\n\tint n, m, id;\n\tread(n); read(m);\n\tfor (int i = 1; i <= m; i ++) {\n\t\tread(id); read(l[i].to);\n\t\tl[i].nex = head[id];\n\t\thead[id] = i;\n\t}\n\tfor (int i = 1; i <= n; i ++) read(mon[i]);\n\tint S, P;\n\tread(S); read(P);\n\tfor (int i = 1; i <= P; i ++) {\n\t\tread(id); lub[id] = true;\n\t}\n\tfor (int i = 1; i <= n; i ++) {\n\t\tif (!dfn[i]) tarjan(i);\n\t}\n\tfor (int i = 1; i <= n; i ++) {\n\t\tfor (int j = head[i]; j; j = l[j].nex) {\n\t\t\tint u = l[j].to;\n\t\t\tif (bel[u] != bel[i]) s.insert(make_pair(bel[i], bel[u]));\n\t\t}\n\t}\n\tset<pair <int, int> > :: iterator  it;\n\tint ii = 0;\n\tfor (it = s.begin(); it != s.end(); it ++) {\n\t\tg[++ ii] = (info) {it->first, tail[it->second]};\n\t\ttail[it->second] = ii;\n\t\tr[it->first] ++;\n\t}\n\tfor (int i = 1; i <= len; i ++) {\n\t\tif (!r[i]) {\n\t\t\tq.push(i);\n\t\t}\n\t}\n\twhile(!q.empty()) {\n\t\tint d = q.front();\n\t\tq.pop();\n\t\tval[d] += sum[d];\n\t\tif (bar[d]) flg[d] = true;\n\t\tif (d == bel[S]) {\n\t\t\twrite(val[d], '\\n');\n\t\t\treturn 0;\n\t\t}\n\t\tfor (int e = tail[d]; e; e = g[e].nex) {\n\t\t\tint u = g[e].to;\n\t\t\tr[u] --;\n\t\t\tif (!r[u]) {\n\t\t\t\tq.push(u);\n\t\t\t}\n\t\t\tif (flg[d]) {\n\t\t\t\tval[u] = max(val[u], val[d]);\n\t\t\t\tflg[u] = true;\n\t\t\t}\n\t\t} \n\t}\n\treturn 0;\n}\n```\n### 5.\u5f69\u86cb \u89c9\u5f97\u8c41\u7136\u5f00\u6717\uff08yun li wu li\uff09\u5c31\u70b9\u4e2a\u8d5e\uff01",
        "postTime": 1565014282,
        "uid": 46820,
        "name": "Wall_breaker",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "#### \u8fd9\u662f\u4e00\u9053\u597d\u9898\n\u4e3b\u9898\u601d\u8def\uff1a\n\n1.\u7f29\u70b9\u53bb\u73af\n\n2.\u91cd\u65b0\u5efa\u56fe\n\n3.SPFA\u6c42\u6700\u957f\u8def\n\n4.\u7ef4\u62a4\u66f4\u65b0\u7b54\u6848\n\n## 1.\u7f29\u70b9\n\n1\u4e2a\u7ed3\u70b9\u672c\u8eab\u662f\u5f3a\u8fde\u901a\u5206\u91cf dfn\u6df1\u641c\u4e2d\u8282\u70b9\u6b21\u5e8f\u53f7\uff0clow\u4ee5u\u4e3a\u6839\u7684\u6700\u5c0f\u6b21\u5e8f\u53f7 \n\n\u5982\u679clow\u4e0edfn\u76f8\u540c\uff0c\u5219\u662f\u53d1\u73b0\u4e86\u4e00\u4e2a\u73af\u3002\u5219\u5f39\u6808\u8fdb\u884c\u7f29\u70b9\uff0c\u5e76\u4e14\u7d2f\u52a0\u94b1\u3002\n\n\u6ce8\u610f\uff1a\u81f3\u5c11\u8981\u64cd\u4f5c\u4e00\u6b21\uff0c\u56e0\u6b64\u7528dowhile\n\n## 2.\u5efa\u56fe\n\n\u7f29\u5b8c\u70b9\u4ee5\u540e\uff0c\u5e8f\u53f7\u5df2\u88ab\u7834\u574f\uff0c\u56e0\u6b64\u8981\u91cd\u5efa\u4e00\u4e2a\u65b0id\u542b\u70b9\u6743\u7684\u56fe\u6765\u8fdb\u884cSPFA\n\n## 3.SPFA\u70b9\u6743\u6700\u957f\u8def\n\n1.\u8d77\u70b9\u6253\u6807\u8bb0,\u8ddd\u79bb\u7684\u6570\u7ec4\u8bbe\u521d\u503c,\u8fdb\u961f \n\n2.\u51fa\u961f\u4fdd\u5b58\u5230\u4e34\u65f6\u53d8\u91cf,\u6807\u8bb0\u53d6\u6d88\n\n3.\u5faa\u73af\u627e\u4e0b\u4e00\u4e2a\u70b9 \n\n4.\u5224\u65ad f[]\u4ee3\u8868\u4ece\u8d77\u70b9s\u5230v\u70b9\u7684\u80fd\u53d6\u7684\u6700\u591a\u7684\u94b1\uff0c\u5982\u679c\u6709\u66f4\u591a\uff0c\u5c31\u66f4\u65b0 \n\n5.\u66f4\u65b0\n\n6.\u5224\u65ad\u662f\u5426\u8fdb\u961f\uff0c\u5982\u679cv\u70b9\u4e0d\u5728\u961f\u5217\u91cc\uff0c\u8fdb\u961f\uff0c\u5e76\u4e14\u6253\u4e0a\u6807\u8bb0 \n\n## 4.\u7ef4\u62a4\u66f4\u65b0\u7b54\u6848\n\u5c06f[\u9152\u5427\u7684\u65b0\u5e8f\u53f7]\u4e0eans\u6bd4\u8f83\n\n## \u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\n\n```cpp\n//3627\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<algorithm>\n#define inf 1e9\nusing namespace std;\nconst int N=500100,M=500500; \nstack<int> stk;\nint last[N],last2[N],f[N],nid[N],money[N],dfn[N],low[N],ax[N],ay[N],vis[N],val[N],mark[N],bar[N]; \nint n,m,cnt,ans,tot,s,p;\nstruct edge{\n\tint to,prev; \n}e[M*3];\ninline void add(int u,int v,int *last){\n\te[++tot]=edge{v,last[u]};\n\tlast[u]=tot;\n}\ninline void tarjan(int u){//\u7f29\u70b9 \n  \tdfn[u]=low[u]=++tot;vis[u]=1;stk.push(u); //1\u4e2a\u7ed3\u70b9\u672c\u8eab\u662f\u5f3a\u8fde\u901a\u5206\u91cf dfn\u6df1\u641c\u4e2d\u8282\u70b9\u6b21\u5e8f\u53f7\uff0clow\u4ee5u\u4e3a\u6839\u7684\u6700\u5c0f\u6b21\u5e8f\u53f7 \n  \tint v;\n\tfor(int p=last[u];p;p=e[p].prev){ \n\t\tv=e[p].to; \n    \tif(!dfn[v])tarjan(v),low[u]=min(low[u],low[v]);\n    \telse if(vis[v])low[u]=min(low[u],dfn[v]); //u\u548c\u5df2\u7ecf\u6c42\u5f97\u5e8f\u53f7\u53d6\u6700\u5c0f \n  \t} \n\tif(low[u]==dfn[u]){\n\t\tcnt++;//\u7f29\u70b9\u540e\u65b0\u7684\u5e8f\u53f7 \n        do{\n            v=stk.top();stk.pop();\n            money[cnt]+=val[v];//\u7d2f\u52a0\u94b1 \n            vis[v]=0;\n\t\t\tnid[v]=cnt;  //\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\u7684\u6240\u6709\u70b9\u90fd\u662f\u540c\u4e00\u4e2a\u65b0\u5e8f\u53f7 \n        }while(u!=v);  //\u76f4\u5230\u73af\u7ed5\u56de\u53bb \n  \t}\n}\ninline void spfa(){\n\tqueue<int> qu;//mark\u4ee3\u8868\u5f53\u524d\u7684\u70b9\u662f\u5426\u5728\u961f\u5217\u91cc \n\tqu.push(nid[s]);f[nid[s]]=money[nid[s]];mark[nid[s]]=true;//1.\u8d77\u70b9\u6253\u6807\u8bb0,\u8ddd\u79bb\u7684\u6570\u7ec4\u8bbe\u521d\u503c,\u8fdb\u961f \n\twhile(!qu.empty()){\n\t\tint u=qu.front();qu.pop();mark[u]=false;//2.\u51fa\u961f\u4fdd\u5b58\u5230\u4e34\u65f6\u53d8\u91cf,\u6807\u8bb0\u53d6\u6d88\uff0c \n\t\tfor(int i=last2[u];i;i=e[i].prev){//3.\u5faa\u73af\u627e\u4e0b\u4e00\u4e2a\u70b9 \n\t\t\tint v=e[i].to;//\u53d6\u5230\u4e0b\u4e00\u4e2a\u70b9 \n\t\t\tif(f[v]<f[u]+money[v]){ //4.\u5224\u65ad f[]\u4ee3\u8868\u4ece\u8d77\u70b9s\u5230v\u70b9\u7684\u80fd\u53d6\u7684\u6700\u591a\u7684\u94b1\uff0c\u5982\u679c\u6709\u66f4\u591a\uff0c\u5c31\u66f4\u65b0 \n\t\t\t\tf[v]=f[u]+money[v];//5.\u66f4\u65b0 \n\t\t\t\tif(!mark[v])qu.push(v),mark[v]=true;//6.\u5224\u65ad\u662f\u5426\u8fdb\u961f\uff0c\u5982\u679cv\u70b9\u4e0d\u5728\u961f\u5217\u91cc\uff0c\u8fdb\u961f\uff0c\u5e76\u4e14\u6253\u4e0a\u6807\u8bb0 \n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main() {\n  \tscanf(\"%d%d\",&n,&m); \n  \tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&ax[i],&ay[i]);\n    \tadd(ax[i],ay[i],last); \n  \t} \n  \tfor(int i=1;i<=n;i++)scanf(\"%d\",&val[i]);\n  \tscanf(\"%d%d\",&s,&p);\n  \tfor(int i=1;i<=p;i++)scanf(\"%d\", &bar[i]);\n  \tfor(int i=1;i<=n;i++)if(!dfn[i])tarjan(i);  //\u7f29\u70b9 \n\tfor(int i=1;i<=m;i++){\n    \tint x=nid[ax[i]],y=nid[ay[i]];\n    \tif(x!=y)add(x,y,last2); //\u4e0d\u5728\u73af\u4e0a,\u5efa\u8fb9 \n  \t} \n\tspfa();  \n  \tfor(int i=1;i<=p;i++)ans=max(ans,f[nid[bar[i]]]); // \u6700\u5927\u503c \n  \tprintf(\"%d\\n\",ans);\n  \treturn 0; \n} \n```\n",
        "postTime": 1558873419,
        "uid": 165561,
        "name": "lian_sama",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "## Tarjan+dp\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u4e0d\u9519\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5165\u95e8\u9898\uff0c\u5982\u679c\u60a8\u662f\u5927\u4f6c~~\u90a3\u8fd8\u770b\u4ec0\u4e48\u9898\u89e3\u554a\u76f4\u63a55\u5206\u949f\u7206\u5207~~\uff0c\u5982\u679c\u60a8\u4e0d\u4f1a\u5f3a\u8fde\u901a\u5206\u91cf\u90a3\u8fd9\u7bc7\u9898\u89e3\u5c31\u662f\u5199\u7ed9\u60a8\u7684\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u4ece\u67d0\u4e2a\u8282\u70b9\u5bf9\u6574\u4e2a\u56fe\u8fdb\u884c$DFS$\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u56fe\u4e2d\u4f1a\u6709\u56db\u79cd\u8fb9\uff1a\u6811\u8fb9\uff0c\u56de\u8fb9\uff0c\u524d\u5411\u8fb9\uff0c\u6a2a\u53c9\u8fb9\u3002\n\n\u653e\u5f20\u56fe\u611f\u53d7\u4e00\u4e0b\uff08\u56fe\u4e2d\u8fde\u63a53\u30015\u8282\u70b9\u7684\u8fb9\u753b\u53cd\u4e86\uff09\n\n![digraph.png](https://i.loli.net/2019/05/01/5cc90433ccfed.png)\n\n\u5982\u4f55\u533a\u5206\u8fd9\u56db\u79cd\u8fb9\u5462\uff1f\n\n\u6211\u4eec$dfs$\u7684\u65f6\u5019\uff0c\u4f1a\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684$dfs$\u5e8f$dfn$\uff08\u5373\u8fd9\u4e2a\u70b9\u7b2c\u4e00\u6b21\u88ab$dfs$\u5230\u7684\u65f6\u95f4\uff09\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9$u$\uff0c\u8003\u8651\u4ece\u5b83\u51fa\u53d1\u7684\u4e00\u6761\u8fb9$e$\u8fde\u5411\u7684\u70b9$v$\uff1a\n\n\u5982\u679c$v$\u7684$dfn$\u4e3a$0$\uff0c\u5373\u5b83\u8fd8\u6ca1\u6709\u88ab$dfs$\u8fc7\uff0c\u8bf4\u660e$e$\u662f\u6811\u8fb9\u3002\n\n\u5982\u679c$v$\u7684$dfn$\u6bd4$u$\u5c0f\uff0c\u5e76\u4e14$v$\u662f$u$\u7684\u7956\u5148\uff0c\u8bf4\u660e$e$\u662f\u56de\u8fb9\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48$e$\u662f\u6a2a\u53c9\u8fb9\u3002\n\n\u5982\u679c$v$\u7684$dfn$\u6bd4$u$\u5927\uff0c\u8bf4\u660e$e$\u662f\u524d\u5411\u8fb9\u3002\n\n\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u73af\uff0c\u5bb9\u6613\u53d1\u73b0\u4e00\u4e2a\u73af\u5c31\u662f\u4e00\u5806\u6811\u8fb9\u3001\u4e00\u5806\u6a2a\u53c9\u8fb9\u3001\u548c\u4e00\u5806\u56de\u8fb9\u6784\u6210\u7684\u3002\u8fd9\u91cc\u524d\u5411\u8fb9\u6ca1\u4ec0\u4e48\u7528\uff0c\u56e0\u4e3a\u603b\u80fd\u88ab\u4e00\u5806\u6811\u8fb9\u4ee3\u66ff\u3002\u800c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u662f$u$\u4e0e\u6240\u6709\u80fd\u4e0e$u$\u6784\u6210\u4e00\u4e2a\u73af\u7684\u8282\u70b9\u7684\u96c6\u5408\u3002\n\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6808\u3002\u5f53$dfs$\u5230$u$\u8282\u70b9\u65f6\uff0c\u6808\u5185\u4fdd\u5b58u\u7684\u7956\u5148\u8282\u70b9\u548c\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u5e76\u4e14\u53ef\u4ee5\u5230\u8fbe$u$\u7684\u7956\u5148\u8282\u70b9\u7684\u8282\u70b9\u3002\u663e\u7136\u6808\u91cc\u7684\u8282\u70b9\u80fd\u4e0e\u4ece$u$\u51fa\u53d1\u7684\u56de\u8fb9\u6216\u6a2a\u53c9\u8fb9\u6784\u6210\u73af\u3002\n\n\n\n\u4e3a\u4e86\u7ef4\u62a4\u8fd9\u4e2a\u6808\uff0c\u6211\u4eec\u5b9a\u4e49\u8ffd\u6eaf\u503c$low$\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u8282\u70b9$u$\u901a\u8fc7\u6700\u591a\u4e00\u6b21\u56de\u8fb9\u6216\u6a2a\u53c9\u8fb9\u80fd\u591f$dfs$\u5230\u7684$dfn$\u6700\u5c0f\u7684\u5728\u6808\u5185\u7684\u8282\u70b9\u3002\n\n\u90a3\u4e48\u6709\n$$\nlow[u]=\n\\min_{\\texttt{v\u4e3au\u7684\u90bb\u5c45}}{\\begin{cases}\nlow[v] \\quad\\texttt{u\u5230v\u7684\u8fb9\u4e3a\u6811\u8fb9}\\\\\ndfn[v] \\quad\\texttt{u\u5230v\u7684\u8fb9\u4e0d\u4e3a\u6811\u8fb9\uff0c\u5373v\u88ab\u8bbf\u95ee\u8fc7\u4e14\u5728\u6808\u91cc}\n\\end{cases}\n}\n$$\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a$dfs$\u5230\u7684\u8282\u70b9$u$\uff0c\u6211\u4eec\u5148\u5c06\u5b83\u5165\u6808\u3002\u63a5\u4e0b\u6765\u5bf9\u4e8e$u$\u6bcf\u4e2a\u90bb\u5c45$v$\uff0c\u5982\u679c$v$\u6ca1\u6709$dfs$\u8fc7\uff08\u7b2c\u4e00\u79cd\u60c5\u51b5\uff09\uff0c\u90a3\u4e48\u5bf9$v$\u8fdb\u884c$dfs$\uff0c\u7136\u540e\u66f4\u65b0$u$\u7684$low$\uff0c\u5982\u679c$v$\u88ab$dfs$\u8fc7\u5e76\u4e14\u5728\u6808\u91cc\uff08\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff09\uff0c\u90a3\u4e48\u76f4\u63a5\u66f4\u65b0$u$\u7684$low$\u3002\n\n\u63a5\u4e0b\u6765\u5982\u679c$low[u]$\u4ecd\u7136\u7b49\u4e8e$dfn[u]$\uff0c\u8bf4\u660e\u4ece$u$\u5230\u6808\u9876\u7684\u6240\u6709\u8282\u70b9\u5355\u72ec\u6784\u6210\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u56e0\u4e3a\u8fd9\u4e00\u90e8\u5206\u8282\u70b9\u53ca\u65e0\u6cd5\u4e0e\u6808\u5185\u7684\u5176\u4ed6\u8282\u70b9\u6784\u6210\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4e5f\u4e0d\u53ef\u80fd\u4e0e\u5c1a\u672a$dfs$\u5230\u7684\u8282\u70b9\u6784\u6210\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u56e0\u6b64\u5c06$u$\u548c$u$\u4e0a\u65b9\u7684\u8282\u70b9\u5168\u90e8\u5f39\u51fa\uff0c\u5e76\u628a\u8fd9\u4e9b\u8282\u70b9\u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\u5168\u90e8\u6807\u8bb0\u4e3a$u$\u3002\n\n\u914d\u5408\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\n\n```cpp\nint cnt;\nint dfn[N],low[N],scc[N],ins[N];\nstack<int> s;\nvoid tarjan(int u)\n{\n    dfn[u]=low[u]=++cnt;\n    s.push(u);ins[u]=1;\n    for (int e=head[u];e;e=nex[e])\n    {\n        int v=tail[e];\n        if (!dfn[v])\n        {\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if (ins[v])\n        {\n            low[u]=min(low[u],dfn[v]);\n        }\n    }\n    if (dfn[u]==low[u])\n    {\n        while (!s.empty())\n        {\n            int w=s.top();w.pop();\n            scc[w]=u;ins[w]=0;\n            if (w==u) break;\n        }\n    }\n}\n```\n\n\u7136\u540e\u5c31\u662f\u672c\u9898\u4e86\u3002\u9996\u5148\u6211\u4eec\u8dd1\u51fa\u56fe\u4e0a\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7136\u540e\u628a\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u90fd\u5f53\u4f5c\u4e00\u4e2a\u70b9\u770b\u5f85\uff0c\u8fd9\u6837\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u6210\u4e86\u4e00\u5f20DAG\u3002\u56e0\u6b64\u6211\u4eec\u5bf9\u5b83\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u540c\u65f6\u8fdb\u884cDP\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define debug printf(\"Running %s on line %d...\\n\",__FUNCTION__,__LINE__)\n#define re register\n#define mid (l+r>>1)\nusing namespace std;\nint read()\n{\n    int ans=0,f=1;char c=getchar();\n    for (;!isdigit(c);c=getchar()) if (c=='-') f=-1;\n    for (;isdigit(c);c=getchar()) ans=(ans<<3)+(ans<<1)+(c^48);\n    return ans*f;\n}\nconst int N=1000005;\nstruct Graph\n{\n    int tot;\n    int head[N],tail[N],nex[N];\n    Graph () \n    {\n        tot=0;\n        memset(head,0,sizeof(head));\n        memset(tail,0,sizeof(tail));\n        memset(nex,0,sizeof(nex));\n    }\n    void addedge(int u,int v)\n    {\n        nex[++tot]=head[u];\n        head[u]=tot;\n        tail[tot]=v;\n    }\n};\nint val[N],bar[N];\nGraph a,b;\nint cnt;\nint dfn[N],low[N],scc[N];\nstack<int> s;\nvoid tarjan(int u)\n{\n    dfn[u]=low[u]=++cnt;\n    s.push(u);\n    for (int e=a.head[u];e;e=a.nex[e])\n    {\n        int v=a.tail[e];\n        if (!dfn[v])\n        {\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if (!scc[v])\n        {\n            low[u]=min(low[u],dfn[v]);\n        }\n    }\n    if (dfn[u]==low[u])\n    {\n        int w;\n        do\n        {\n            w=s.top();s.pop();\n            scc[w]=u;\n            if (w==u) break;\n            val[u]+=val[w],bar[u]|=bar[w];\n        } while (w!=u);\n    }\n}\nint st[N],en[N],in[N],dis[N];\nint main()\n{\n    int n=read(),m=read(),s,p;\n    for (int i=1;i<=m;i++)\n    {\n        int u=read(),v=read();\n        a.addedge(u,v);\n        st[i]=u,en[i]=v;\n    }\n    for (int i=1;i<=n;i++) val[i]=read();\n    s=read(),p=read();\n    for (int i=1;i<=p;i++) bar[read()]=1;\n    tarjan(s);\n    for (int i=1;i<=m;i++)\n    {\n        if (scc[st[i]] && scc[st[i]]!=scc[en[i]]) b.addedge(scc[st[i]],scc[en[i]]),in[scc[en[i]]]++;\n    }\n    dis[scc[s]]=val[scc[s]];\n    queue<int> q;\n    q.push(scc[s]);\n    while (!q.empty())\n    {\n        int u=q.front();q.pop();\n        for (int e=b.head[u];e;e=b.nex[e])\n        {\n            int v=b.tail[e];\n            dis[v]=max(dis[v],dis[u]+val[v]);\n            if (!(--in[v])) q.push(v);\n        }\n    }\n    int ans=0;\n    for (int i=1;i<=n;i++) if (scc[i] && bar[i]) ans=max(ans,dis[i]);\n    cout<<ans<<endl;\n    return 0;\n}\n\n```\n\n",
        "postTime": 1556687643,
        "uid": 107935,
        "name": "Thomasguo666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u4e00\u773c\u671b\u53bb\u9898\u89e3\u91cc\u90fd\u662f\u6700\u957f\u8def\uff0c\u56e0\u6b64\u51b3\u5b9a\u5199\u4e00\u7bc7$DP$\u3002\n\n------------\n\n### \u601d\u8def\n\n\u5f88\u660e\u663e\u8fd9\u9898\u662f\u4e00\u9053$tarjan$\u7f29\u70b9\u7684\u9898\u76ee\uff0c\u95ee\u9898\u5728\u4e8e\uff0c\u7f29\u5b8c\u70b9\u540e\u5982\u4f55\u6c42\u51fa\u7b54\u6848\uff1f\n\n\u601d\u8def\u6709\u4e24\u79cd\uff1a\u4e00\u79cd\u662f\u8c8c\u4f3c\u4e3b\u6d41\u7684$SPFA$\u6700\u957f\u8def\uff0c\u5373\u5c06\u70b9\u6743\u8f6c\u6362\u4e3a\u8fb9\u6743\u7136\u540e\u53cd\u8dd1\u6700\u77ed\u8def\uff1b\u53e6\u4e00\u79cd\uff0c\u5219\u662f\u91c7\u7528$DP$\u7684\u601d\u8def\u3002\n\n\u5b50\u72b6\u6001\u4e3a$dp[i]$\uff0c\u8868\u793a\u62a2\u52ab\u7b2ci\u4e2a\u8282\u70b9\u7684\u6700\u5927\u503c\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u4e3a$dp[i]=max(dp[i],dp[j]+sum[j])$\uff0c\u5176\u4e2d$j$\u4e3a\u6307\u5411i\u7684\u8282\u70b9\u3002\n\n\u8f6c\u79fb\u65f6\u6211\u4eec\u91c7\u53d6\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684\u65b9\u6cd5\uff0c\u5c06\u6240\u6709\u5165\u5ea6\u4e3a$0$\u7684\u8282\u70b9\u5165\u6808\uff0c\u7136\u540e\u6301\u7eed\u5f39\u51fa/\u63d2\u5165\u3002\n\n\u672c\u9898\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff1a$tarjan$\u7f29\u70b9\u7684\u65f6\u5019\u53ea\u7528\u7f29\u8d77\u70b9\uff0c\u8fd9\u662f\u56e0\u4e3a\u8d77\u70b9\u65e0\u6cd5\u5230\u8fbe\u7684\u8282\u70b9\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\n\n------------\n\n### \u4ee3\u7801\n\n`995ms 66564kb`\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nnamespace StandardIO {\n\n\ttemplate<typename T>inline void read (T &x) {\n\t\tx=0;T f=1;char c=getchar();\n\t\tfor (; c<'0'||c>'9'; c=getchar()) if (c=='-') f=-1;\n\t\tfor (; c>='0'&&c<='9'; c=getchar()) x=x*10+c-'0';\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write (T x) {\n\t\tif (x<0) putchar('-'),x*=-1;\n\t\tif (x>=10) write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n\n}\n\nusing namespace StandardIO;\n\nnamespace Fate {\n\n\tconst int N=500500;\n\n\tint n,m,s,p,ans=0;\n\tint cnt,cntt;\n\tint head[N],headd[N],to[N<<1],too[N<<1],next[N<<1],nextt[N<<1];\n\tint is_bar[N],Bar[N],val[N];\n\tint bcnt,index;\n\tint low[N],dfn[N],instack[N],belong[N],sum[N];\n\tstack<int> st;\n\tint dp[N],indeg[N];\n\t\n\tinline void add (int a,int b) {\n\t\tto[++cnt]=b,next[cnt]=head[a],head[a]=cnt;\n\t}\n\tinline void add2 (int a,int b) {\n\t\ttoo[++cntt]=b,nextt[cntt]=headd[a],headd[a]=cntt;\n\t}\n\tvoid tarjan (int now) {\n\t\tdfn[now]=low[now]=++index;\n\t\tst.push(now),instack[now]=1;\n\t\tfor (register int i=head[now]; i; i=next[i]) {\n\t\t\tif (!dfn[to[i]]) {\n\t\t\t\ttarjan(to[i]);\n\t\t\t\tlow[now]=min(low[now],low[to[i]]);\n\t\t\t} else if (instack[to[i]]) {\n\t\t\t\tlow[now]=min(low[now],dfn[to[i]]);\n\t\t\t}\n\t\t}\n\t\tif (low[now]==dfn[now]) {\n\t\t\tint v=-1;bcnt++;\n\t\t\twhile (v!=now) {\n\t\t\t\tv=st.top(),st.pop();\n\t\t\t\tinstack[v]=0,belong[v]=bcnt,sum[bcnt]+=val[v];\n\t\t\t}\n\t\t}\n\t}\n\tvoid calc () {\n\t\tqueue<int> q;\n\t\tq.push(belong[s]),dp[belong[s]]=sum[belong[s]];\n\t\twhile (!q.empty()) {\n\t\t\tint now=q.front();q.pop();\n\t\t\tfor (register int i=headd[now]; i; i=nextt[i]) {\n\t\t\t\tdp[too[i]]=max(dp[too[i]],dp[now]+sum[too[i]]);\n\t\t\t\t--indeg[too[i]];\n\t\t\t\tif (indeg[too[i]]==0) {\n\t\t\t\t\tq.push(too[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tinline void Stay_Night () {\n\t\tread(n),read(m);\n\t\tfor (register int i=1; i<=m; ++i) {\n\t\t\tint x,y;\n\t\t\tread(x),read(y);\n\t\t\tadd(x,y);\n\t\t}\n\t\tfor (register int i=1; i<=n; ++i) {\n\t\t\tread(val[i]);\n\t\t}\n\t\tread(s),read(p);\n\t\tfor (register int i=1; i<=p; ++i) {\n\t\t\tint x;\n\t\t\tread(x);\n\t\t\tis_bar[x]=1;\n\t\t}\n\t\ttarjan(s);\n\t\tfor (register int i=1; i<=n; ++i) {\n\t\t\tif (!belong[i]) continue;\n\t\t\tBar[belong[i]]=max(Bar[belong[i]],is_bar[i]);\n\t\t\tfor (register int j=head[i]; j; j=next[j]) {\n\t\t\t\tif (belong[i]!=belong[to[j]]) {\n\t\t\t\t\tadd2(belong[i],belong[to[j]]);\n\t\t\t\t\tindeg[belong[to[j]]]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcalc();\n\t\tfor (register int i=1; i<=bcnt; ++i) {\n\t\t\tif (Bar[i]) ans=max(ans,dp[i]);\n\t\t}\n\t\twrite(ans);\n\t}\n\t\n}\n\nint main () {\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n//\tfreopen(\"test.out\",\"w\",stdout);\n\tFate::Stay_Night();\n}\n\n```",
        "postTime": 1541340070,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u6211\u7684\u505a\u6cd5\u53ef\u80fd\u6709\u7565\u5fae\u7684\u533a\u522b \u6765\u53d1\u4e00\u7bc7\u9898\u89e3\n\n\u9996\u5148\u53ef\u4ee5\u6bd4\u8f83\u660e\u663e\u5730\u770b\u51fa\uff0c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u662f\u53ef\u4ee5\u968f\u4fbf\u8d70\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u7528Tarjan\u7b97\u6cd5\u6c42\u51fa\u6240\u6709\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u7136\u540e\u7f29\u70b9\uff0c\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u5728\u65b0\u56fe\u4e2d\u5bf9\u5e94\u7684\u70b9\u6743\u5c31\u662f\u6240\u6709\u5c5e\u4e8e\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u70b9\u7684\u70b9\u6743\u4e4b\u548c\n\n\u7136\u540e\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff0c\u7ed9\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u548c\u4e00\u4e2a\u7ed9\u5b9a\u6e90\u70b9\uff0c\u6c42\u4ece\u8fd9\u4e2a\u6e90\u70b9\u51fa\u53d1\u5230\u8fbe\u67d0\u4e9b\u70b9\u7684\u8def\u5f84\u7684\u70b9\u6743\u548c\u7684\u6700\u5927\u503c\u3002\u770b\u8d77\u6765\u8fd9\u8ddf\u5355\u6e90\u6700\u957f\u8def\u95ee\u9898\u5f88\u50cf\uff0c\u4f46\u662f\u8fd9\u91cc\u662f\u70b9\u6743\u548c\u800c\u4e0d\u662f\u8fb9\u6743\u548c\u3002\u5982\u679c\u6211\u4eec\u80fd\u628a\u70b9\u6743\u8f6c\u5316\u4e3a\u8fb9\u6743\u5c31\u597d\u4e86\u3002\n\n\u70b9\u6743\u5316\u4e3a\u8fb9\u6743\u7684\u65b9\u6cd5\u53ef\u4ee5\u662f\u628a\u70b9\u6743\u653e\u5230\u5b83\u7684\u6bcf\u6761\u5165\u8fb9\u4e0a\uff0c\u4e0d\u8fc7\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u62c6\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u70b9$x$\u62c6\u6210\u4e24\u4e2a\u70b9$x_0,x_1$\uff0c\u7136\u540e\u4ece$x_0$\u5230$x_1$\u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u5c31\u662f\u539f\u6765$x$\u7684\u70b9\u6743\u3002\u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u8fb9$(x,y)$\uff0c\u8fde\u8fb9$(x_1,y_0)$\uff0c\u8fb9\u6743\u4e3a0\uff0c\u7136\u540e\u8dd1\u6700\u957f\u8def\u5373\u53ef\u3002\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u8fb9\u6743\u5168\u90e8\u53d6\u76f8\u53cd\u6570\u8dd1\u6700\u77ed\u8def\uff09\u3002\n\n\u6700\u540e\u5bf9\u6bcf\u4e2a\u9152\u5427\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& t) {\n    int f = 0, c = getchar(); t = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) t = t * 10 + c - 48, c = getchar();\n    if (f) t = -t;\n}\ntemplate <typename T> inline bool chkMin(T& x, const T& y) { return y < x ? (x = y, 1) : 0; }\ntemplate <typename T> inline bool chkMax(T& x, const T& y) { return x < y ? (x = y, 1) : 0; }\n#ifdef WIN32\n#define LLIO \"%I64d\"\n#else\n#define LLIO \"%lld\"\n#endif\n#define rep(i, a, b) for (int i = (a); i <= (b); ++i)\n#define dwn(i, a, b) for (int i = (a); i >= (b); --i)\n#define erp(i, x) for (int i = head[x]; i; i = next[i])\n\nconst int maxn = 1e6 + 7, inf = INT_MAX;\nstruct Graph {\n    int v[maxn], w[maxn], head[maxn], next[maxn], value[maxn], tot;\n    void ae(int x, int y, int z = 0) {\n        v[++tot] = y; w[tot] = z; next[tot] = head[x]; head[x] = tot;\n    }\n};\nGraph G, N;\nint stk[maxn], tp;\nint low[maxn], pre[maxn], belong[maxn], clck, cnt;\nint bar[maxn], nv[maxn], dist[maxn], q[maxn << 2];\nint n, m, s, p;\nvoid dfs1(int x) {\n    stk[++tp] = x; low[x] = pre[x] = ++clck;\n    for (int i = G.head[x]; i; i = G.next[i]) {\n        int v = G.v[i];\n        if (!pre[v]) {\n            dfs1(v);\n            chkMin(low[x], low[v]);\n        } else if (!belong[v])\n            chkMin(low[x], pre[v]);\n    }\n    if (low[x] == pre[x]) {\n        ++cnt;\n        while (0207) {\n            int t = stk[tp--];\n            belong[t] = cnt;\n            nv[cnt] += G.value[t];\n            if (t == x) break;\n        }\n    }\n}\ninline void findscc() {\n    rep(i, 1, n) if (!pre[i]) dfs1(i);\n}\ninline void rebuild() {\n    rep(i, 1, (cnt << 1)) N.head[i] = 0;\n    rep(x, 1, cnt) N.ae(x, x + cnt, -nv[x]);\n    rep(x, 1, n) for (int i = G.head[x]; i; i = G.next[i])\n        if (belong[x] ^ belong[G.v[i]])\n            N.ae(belong[x] + cnt, belong[G.v[i]], 0);\n}\nvoid spfa() {\n    int l = 0, r = 0;\n    q[++r] = belong[s];\n    rep(i, 1, (cnt << 1)) dist[i] = inf;\n    dist[belong[s]] = 0;\n    while (l < r) {\n        int x = q[++l];\n        for (int i = N.head[x]; i; i = N.next[i]) {\n            int v = N.v[i], w = N.w[i];\n            if (dist[v] > dist[x] + w)\n                dist[q[++r] = v] = dist[x] + w;\n        }\n    }\n}\nint main() {\n    read(n); read(m);\n    G.tot = N.tot = 0;\n    rep(i, 1, n) G.head[i] = 0;\n    rep(i, 1, m) {\n        int x, y;\n        read(x); read(y);\n        G.ae(x, y);\n    }\n    rep(i, 1, n) read(G.value[i]);\n    read(s); read(p);\n    rep(i, 1, p) read(bar[i]);\n    findscc();\n    rebuild();\n    spfa();\n    int ans = 0;\n    rep(i, 1, p) chkMax(ans, -dist[belong[bar[i]] + cnt]);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1540457265,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "# P3627 [APIO2009]\u62a2\u63a0\u8ba1\u5212 \n\n## \u6807\u7b7e\uff1aSPFA\uff0cTarjan\uff0c\u6808\n\n## [\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P3627)\n\n\u5176\u5b9e\u8fd9\u662f\u4e4b\u524d\u8003\u8bd5\u7684\u4e00\u9053\u9898\uff0c\u5f53\u65f6\u7684\u505a\u6cd5\u662f\u2014\u2014**\u641c\u7d22**\uff0c\u7136\u540e\u597d\u50cf\u8fc7\u4e86\u4e00\u4e2a\u70b9\uff01\n\n\u641c\u7d22\u8fc7\u7a0b\u5c31\u4e0d\u8bf4\u4e86\uff0c\u7eaf\u6a21\u62df\u3002\n\n## \u4ee3\u78011\uff08\u66b4\u529b\u641c\u7d22\uff097\u5206\uff1a\n~~~\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nint gi()\n{\n    char x=getchar();int t=0,fh=1;\n    while(x>'9'||x<'0') { if(x=='-') fh=-1; x=getchar(); }\n    while(x>='0'&&x<='9') { t=t*10+x-'0';   x=getchar(); }\n    return fh*t;\n}\n\nint n,m;\nint tot,head[500010];\nstruct edge{\n    int nxt,to;\n}e[500010];\nint du[500010],atm[500010];\nbool bar[500010];//\u662f\u5426\u662f\u7ec8\u70b9\uff08\u9152\u5427\uff09 \nint s,p;\nint ans;\nint vis[500010];//\u641c\u7d22\u65f6\u8bbf\u95ee\u7684\u6b21\u6570 \n\nvoid add(int x,int y)\n{\n    e[++tot].to=y;e[tot].nxt=head[x];head[x]=tot;\n}\n\nvoid dfs(int now,int sum)\n{\n    if(atm[now]&&sum>ans) ans=sum;\n    for(int j=head[now];j;j=e[j].nxt)\n    {\n        int g1=e[j].to;\n        if(vis[g1]<du[g1])\n        {\n            vis[g1]++;\n            if(vis[g1]==1)\n            dfs(g1,sum+atm[g1]);\n            else dfs(g1,sum);\n            vis[g1]--;\n        }\n    }\n    return ;\n}\n\ninline void openfile()\n{\n    freopen(\"atm.in\",\"r\",stdin);\n    freopen(\"atm.out\",\"w\",stdout);\n}\n\nint main()\n{\n    n=gi();m=gi();\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        x=gi();y=gi();\n        add(x,y);\n        du[x]++;du[y]++;\n    }\n    for(int i=1;i<=n;i++)\n    atm[i]=gi();\n    s=gi();p=gi();\n    for(int i=1;i<=p;i++)\n    {\n      int barr=gi();\n      bar[barr]=true;\n    }\n    dfs(s,0);\n    cout<<ans;\n    return 0;\n}\n~~~\n\n\u4e8e\u662f\u75db\u4e0b\u51b3\u5fc3\uff0c\u8981\u7206\u809d\u6b64\u9898\u3002\n\n\u9898\u76ee\u610f\u601d\u6ca1\u6709\u8f6c\u6362\u6210\u6a21\u578b\uff0c\u6240\u4ee5\u611f\u89c9\u8fd9\u9053\u9898\u5f88\u96be\u7684\u6837\u5b50\u3002\u8003\u8bd5\u5b8c\u4e86\u6709\u4eba\u8bf4\u8981tarjan\u7f29\u70b9\uff0c\u6211\u8fd8\u662f\u5f88\u61f5\uff0c\u540e\u6765\u5728~~\u9898\u89e3~~\u5e2e\u52a9\u4e0b\u5927\u6982\u60f3\u660e\u767d\u4e86\u8fd9\u9053\u9898\u3002\n\n### \u7531\u4e8e\u8def\u5f84\u662f\u53ef\u4ee5\u91cd\u590d\u7684\uff01\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u8054\u901a\u5757\u6765\u8bf4\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u70b9\u8fdb\u51fa\u5e76\u4e14\u53ef\u4ee5\u904d\u5386\u5b8c\u6574\u4e2a\u8054\u901a\u5757\uff01\n### \u6240\u4ee5\u8fd9\u91cc\u8981\u7528\u5230tarjan\u7f29\u70b9\uff01\uff01\uff01\uff08\u8fd9\u662f\u7b2c\u4e00\u6b65\uff09\n\n\u7f29\u70b9\u4e4b\u540e\uff0c\u9898\u76ee\u5c31\u8f6c\u5316\u6210\u4e86\uff1a\n### \u7ed9\u5b9a$x$\u4e2a\u70b9\u6743\uff0c\u6c42\u4ece$col(S)$\u51fa\u53d1,$col(bar_i)$\u7ed3\u675f\u80fd\u591f\u904d\u5386\u6700\u5927\u6743\u503c\u548c\u3002\n### \u8fd9\u91cc\u7528SPFA\u6c42\u51fa\u6700\u957f\u8def\u5f84\uff0c\u7136\u540e\u6bd4\u8f83\u8f93\u51fa\u5c31\u884c\u4e86\uff08\u8fd9\u662f\u7b2c\u4e8c\u6b65\uff09\n\n\n$Tarjan$\u7f29\u70b9+$SPFA$\u6c42\u6700\u957f\u8def\uff0c\u770b\u8d77\u6765\u5c31\u662f\u6b63\u89e3\u4e86\uff01\u4e8e\u662f\u6709\u4e86\u8fd9\u4e2a\u4ee3\u7801\uff1a\n## \u4ee3\u78012\uff08Tarjan+SPFA\u83ab\u540dRE\uff09$88$\u5206\n### \u76f8\u4fe1\u6709\u4e0d\u5c1188\u5206\u7684\u5927\u4f6c\uff08\u522b\u6025\u540e\u9762\u6709\u89e3\u91ca\uff09\n~~~\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\n\nstruct edge{\n    int fro,nxt,to;\n}e[500010],s[500010];\nint tot,head[500010];\nint inde,dfn[500010],low[500010];\nint sta[500010],tp;\nint col[500010],cnt,sum[500010],dis[500010];\nint atm[500010];\nbool vis[500010];\nint n,m,ans;\nint S,T;\n\nvoid add(int x,int y)\n{\n    e[++tot].to=y;\n    e[tot].fro=x;\n    e[tot].nxt=head[x];\n    head[x]=tot;\n}\n\nvoid add2(int x,int y)\n{\n    s[++tot].to=y;\n    s[tot].nxt=head[x];\n    head[x]=tot;\n}\n\nvoid tarjan(int v)\n{\n    dfn[v]=low[v]=++inde;\n    sta[++tp]=v;\n    vis[v]=true;\n    for(int j=head[v];j;j=e[j].nxt)\n    {\n        int g1=e[j].to;\n        if(!dfn[g1])\n        {\n            tarjan(g1);\n            low[v]=min(low[v],low[g1]);\n        }\n        else if(vis[g1])\n        low[v]=min(low[v],dfn[g1]);\n    }\n    if(low[v]==dfn[v])\n    {\n        cnt++;\n        while(sta[tp+1]!=v)\n        {\n            col[sta[tp]]=cnt;\n            sum[cnt]+=atm[sta[tp]];\n            vis[sta[tp]]=false;\n            tp--;\n        }\n    }\n}\n\nqueue<int>q;\nbool used[500010];\n\nvoid spfa(int v)\n{\n    dis[v]=sum[v];\n    q.push(v);\n    while(!q.empty())\n    {\n      int u=q.front();\n      q.pop();\n      used[u]=false;\n    for(int j=head[u];j;j=s[j].nxt)\n    {\n        int g1=s[j].to;\n        if(dis[g1]<dis[u]+sum[g1])\n        {\n            dis[g1]=dis[u]+sum[g1];\n            if(!used[g1])\n            {\n                q.push(g1);\n                used[g1]=true;\n            }\n        }\n     }\n    }\n    return ;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y); \n    }\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&atm[i]);\n    for(int i=1;i<=n;i++)\n    if(!dfn[i]) tarjan(i);\n    tot=0;\n    memset(head,0,sizeof(head));\n    for(int i=1;i<=m;i++)\n    {\n        if(col[e[i].fro]!=col[e[i].to])\n        add2(col[e[i].fro],col[e[i].to]);\n    }\n    scanf(\"%d%d\",&S,&T);\n    spfa(col[S]);\n    for(int i=1;i<=T;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        ans=max(ans,dis[col[x]]);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n~~~\n\u672c\u6765\u6ee1\u5fc3\u6b22\u559c\u5730\u63d0\u4ea4\u4e0a\u53bb\uff0c\u7ed3\u679c\u83ab\u540dRE\u7b2c$4,5$\u4e24\u4e2a\u70b9\u3002\n\n\u6700\u521d\u4ee5\u4e3a\u662f\u6570\u7ec4\u5927\u5c0f\u7684\u95ee\u9898\uff0c\u7136\u540e\u5f00\u5927\u6570\u7ec4\u8fd8\u662f$RE$.\n\n\u7136\u540e\u4ee5\u4e3a\u662f\u81ea\u5df1\u7a0b\u5e8f\u7684\u95ee\u9898\uff0c\u7ed3\u679c\u63d0\u4ea4\u9898\u89e3\u4e0a\u53bb\u8fd8\u662f$RE88$\u5206\n\n\u540e\u9762\u60f3\u8d77\u597d\u50cf\u6709\u4e2a\u4ec0\u4e48**\u65e0\u9650\u6808\u5f00\u5173**\u7684\u4e1c\u897f\uff0c$Luogu$\u8fd9\u9053\u9898\u8c8c\u4f3c\u6ca1\u6709\u6253\u5f00\u8fd9\u4e2a\u5f00\u5173\u5427\uff0c\u4e8e\u662f\u5c31\u7206\u6808\u7a7a\u95f4\u4e86\uff1f\uff01\n\n\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u4f1a\u7206\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\uff0c\u6570\u636e\u8303\u56f4\u662f$5e5$\u3002\n\n\u4e8e\u662f\u540c\u673a\u623f\u7684\u5927\u4f6c\u544a\u8bc9\u6211\u662f\u8fd9\u4e2a$tarjan$\u5728\u9012\u5f52\u7684\u65f6\u5019\u7206\u6389\u7684\u3002\n\n### \u90a3\u4e48\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\n\n\u8fd9\u4f4d[\u5927\u4f6c](https://www.luogu.org/space/show?uid=44317)\u544a\u8bc9\u6211\u76f4\u63a5\u65b0\u5efa\u7acb\u4e00\u4e2a\u6808\u6a21\u62df\u9012\u5f52\u7684\u6808\u5c31\u884c\u4e86\uff0c**\u907f\u514d\u51fa\u73b0\u9012\u5f52\u51fd\u6570**\u3002\n\n### \u5927\u6982\u5c31\u50cf\u8fd9\u6837\uff1a\n\uff08\u4e0d\u8981\u5728\u610f\u6211\u7684\u7801\u98ce\uff09\n~~~\nstack<int>K;\nvoid tarjan(int v)\n{\n    dfn[v]=low[v]=++inde;\n    sta[++tp]=v;\n    vis[v]=true;\n    K.push(v);\n    while(!K.empty())\n    {\n      int tmp=K.top();\n      for(int j=head[tmp];j;j=e[j].nxt)\n    {\n\t\tint g1=e[j].to;\n        if(!dfn[g1])\n        {\n            dfn[g1]=low[g1]=++inde;\n            vis[g1]=true;\n            sta[++tp]=g1;\n            K.push(g1);\n            break;\n        }\n    }\n     if(tmp==K.top())\n     {\n       for(int j=head[tmp];j;j=e[j].nxt)\n       {\n       \tint g1=e[j].to;\n       \t if(dfn[g1]>dfn[tmp])\n       \t low[tmp]=min(low[tmp],low[g1]);\n       \t else if(vis[g1])\n       \t low[tmp]=min(low[tmp],dfn[g1]);\n\t   }\n    if(low[tmp]==dfn[tmp])\n     {\n        cnt++;\n        while(sta[tp+1]!=tmp)\n        {\n            col[sta[tp]]=cnt;\n            sum[cnt]+=atm[sta[tp]];\n            vis[sta[tp]]=false;\n            tp--;\n        }\n     }\n     K.pop();\n    }\n   }\n}\n~~~\n## \u81f3\u6b64\uff0c\u5df2\u7ecf\u89e3\u51b3\u4e86\u6240\u6709\u95ee\u9898\uff01\n~~\u6211\u4eec\u6709\u8033\u6735\uff0c\u6b22\u4e50\u591a\u591a~~\n## \u4ee3\u78013 \uff08Tarjan+SPFA+\u6808\uff09$100$\u5206\uff1a\n~~~\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#include<stack>\nusing namespace std;\n\nstruct edge{\n    int fro,nxt,to;\n}e[500010],s[500010];\nint tot,head[500010];\nint inde,dfn[500010],low[500010];\nint sta[500010],tp;\nint col[500010],cnt,sum[500010],dis[500010];\nint atm[500010];\nbool vis[500010];\nint n,m,ans;\nint S,T;\n\nvoid add(int x,int y)\n{\n    e[++tot].to=y;\n    e[tot].fro=x;\n    e[tot].nxt=head[x];\n    head[x]=tot;\n}\n\nvoid add2(int x,int y)\n{\n    s[++tot].to=y;\n    s[tot].nxt=head[x];\n    head[x]=tot;\n}\nstack<int>K;\nvoid tarjan(int v)\n{\n    dfn[v]=low[v]=++inde;\n    sta[++tp]=v;\n    vis[v]=true;\n    K.push(v);\n    while(!K.empty())\n    {\n      int tmp=K.top();\n      for(int j=head[tmp];j;j=e[j].nxt)\n    {\n\t\tint g1=e[j].to;\n        if(!dfn[g1])\n        {\n            dfn[g1]=low[g1]=++inde;\n            vis[g1]=true;\n            sta[++tp]=g1;\n            K.push(g1);\n            break;\n        }\n    }\n     if(tmp==K.top())\n     {\n       for(int j=head[tmp];j;j=e[j].nxt)\n       {\n       \tint g1=e[j].to;\n       \t if(dfn[g1]>dfn[tmp])\n       \t low[tmp]=min(low[tmp],low[g1]);\n       \t else if(vis[g1])\n       \t low[tmp]=min(low[tmp],dfn[g1]);\n\t   }\n    if(low[tmp]==dfn[tmp])\n     {\n        cnt++;\n        while(sta[tp+1]!=tmp)\n        {\n            col[sta[tp]]=cnt;\n            sum[cnt]+=atm[sta[tp]];\n            vis[sta[tp]]=false;\n            tp--;\n        }\n     }\n     K.pop();\n    }\n   }\n}\nqueue<int>q;\nbool used[500010];\n\nvoid spfa(int v)\n{\n    dis[v]=sum[v];\n    q.push(v);\n    while(!q.empty())\n    {\n      int u=q.front();\n      q.pop();\n      used[u]=false;\n    for(int j=head[u];j;j=s[j].nxt)\n    {\n        int g1=s[j].to;\n        if(dis[g1]<dis[u]+sum[g1])\n        {\n            dis[g1]=dis[u]+sum[g1];\n            if(!used[g1])\n            {\n                q.push(g1);\n                used[g1]=true;\n            }\n        }\n     }\n    }\n    return ;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y); \n    }\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&atm[i]);\n    for(int i=1;i<=n;i++)\n    if(!dfn[i]) tarjan(i);\n    tot=0;\n    memset(head,0,sizeof(head));\n    for(int i=1;i<=m;i++)\n    {\n        if(col[e[i].fro]!=col[e[i].to])\n        add2(col[e[i].fro],col[e[i].to]);\n    }\n    scanf(\"%d%d\",&S,&T);\n    spfa(col[S]);\n    for(int i=1;i<=T;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        ans=max(ans,dis[col[x]]);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n~~~",
        "postTime": 1535337964,
        "uid": 86210,
        "name": "Fellyhosn",
        "ccfLevel": 6,
        "title": "P3627 [APIO2009]\u62a2\u63a0\u8ba1\u5212"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u663e\u7136\u662f\u6c42\u5355\u6e90\u6700\u957f\u8def\u3002\n\n\u8981\u8dd1\u6700\u957f\u8def\u5fc5\u987b\u628a\u539f\u56fe\u53d8\u4e3aDAG\uff0c\u6240\u4ee5\u7528tarjan\u7f29\u70b9\n\n\u628a\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u7edf\u8ba1\u4e00\u4e0b\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u70b9\u6743\u548c\uff0c\u7136\u540e\u8dd1spfa\u5c31\u884c\u4e86\u3002\n\n\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\u5c31\u662f\u82e5\u6709\u4e00\u6761\u8fb9$(u,v)$\uff0c\u5219\u628a\u8be5\u8fb9\u7684\u6743\u503c\u8bbe\u4e3a$v$\u7684\u70b9\u6743\uff0c\u7136\u540e\u4ece$0$\u70b9\u5f80\u8d77\u70b9\u8fde\u4e00\u6761\u6743\u503c\u4e3a\u8d77\u70b9\u7684\u70b9\u6743\u7684\u8fb9\uff0c\u7136\u540e\u5c31\u76f4\u63a5\u628a$0$\u5f53\u4e3a\u6e90\u70b9\u8dd1spfa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u987a\u4fbf\u63d0\u4e00\u53e5\uff0c\u9898\u91cc\u7684\u56fe$1$\u53f7\u70b9\u662f\u6709\u4e00\u6761\u5165\u8fb9\u7684\uff0c\u5c31\u662f$0$\u5411\u4ed6\u8fde\u7684\u90a3\u6761\u3002\n\n~~\u81ea\u8ba4\u4e3a\u6bd4\u9898\u89e3\u533a\u4ee3\u7801\u597d\u770b\u7684~~\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nconst int MAXN = 5005000;\nint n, m, cnt, a[MAXN], s, p, U[MAXN], V[MAXN], dis[MAXN], vis[MAXN], Q[MAXN], h, t;\nint scc, tot, top, sta[MAXN], ins[MAXN], dfn[MAXN], low[MAXN], bel[MAXN], val[MAXN];\nint ans;\nstruct edge {\n\tint v, w;\n\tedge *next;\n}pool1[MAXN], *head1[MAXN], pool2[MAXN], *head2[MAXN];\ninline void addedge1(int u, int v) {\n\tedge *p = &pool1[++cnt];\n\tp->v = v, p->next = head1[u], head1[u] = p;\n}\ninline void addedge2(int u, int v, int w) {\n\tedge *p = &pool2[++cnt];\n\tp->v = v, p->w = w, p->next = head2[u], head2[u] = p;\n}\ninline void tarjan(int u) {\n\tdfn[u] = low[u] = ++tot; ins[u] = 1, sta[++top] = u;\n\tfor(edge *p = head1[u]; p; p = p->next) {\n\t\tint v = p->v;\n\t\tif(!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[u] = min(low[u], low[v]); \n\t\t} \n\t\telse if(ins[v]) low[u] = min(low[u], dfn[v]);\n\t}\n\tif(dfn[u] == low[u]) {\n\t\t++scc;\n\t\twhile(sta[top + 1] != u) {\n\t\t\tbel[sta[top]] = scc;\n\t\t\tins[sta[top]] = 0;\n\t\t\tval[scc] += a[sta[top]]; --top;\n\t\t} \n\t}\n}\ninline void spfa() {\n\tdis[0] = 0, Q[++t] = 0, vis[0] = 1;\n\twhile(h <= t) {\n\t\tint u = Q[h++]; vis[u] = 0;\n\t\tfor(edge *p = head2[u]; p; p = p->next) {\n\t\t\tint v = p->v;\n\t\t\tif(dis[v] < dis[u] + p->w) {\n\t\t\t\tdis[v] = dis[u] + p->w;\n\t\t\t\tif(!vis[v]) Q[++t] = v, vis[v] = 1;\n\t\t\t} \n\t\t}\n\t}\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &m)\uff1b\n    for(int i = 1; i <= m; i++) {\n    \tscanf(\"%d%d\", &U[i], &V[i])\uff1b\n    \taddedge1(U[i], V[i])\uff1b\n\t}\n\tfor(int i = 1; i <= n; i++) scanf(\"%d\", &a[i])\uff1b\n\tscanf(\"%d%d\", &s, &p)\uff1b\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(!dfn[i]) tarjan(i)\uff1b\n\t} \n\taddedge2(0, bel[s], val[bel[s]]);\n\tfor(int i = 1; i <= m; i++) {\n\t\tif(bel[U[i]] != bel[V[i]]) \n\t\t    addedge2(bel[U[i]], bel[V[i]], val[bel[V[i]]])\uff1b\n\t}\n\tspfa();\n\tfor(int i = 1; i <= p; i++) {\n\t\tint x; scanf(\"%d\", &x)\uff1b\n\t\tans = max(ans, dis[bel[x]])\uff1b\n\t}\n\tprintf(\"%d\\n\", ans)\uff1b\n \treturn 0\uff1b\n}\n```",
        "postTime": 1531543988,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "## \u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9+spfa\u6700\u957f\u8def\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 500000;\nconst int maxm = 500000;\nconst int inf = 0x3f3f3f3f;\nint n,m;\nint money[maxn];\nint sccSum[maxn];\nvector<int> barList;\nbool isBar[maxn];\nint S_,P_;\nstruct edge{\n    int v;\n    int next;\n}E[maxm];\nint p[maxn],eid = 0;\nvoid init(){\n    memset(p,-1,sizeof p);\n    eid = 0;\n    memset(isBar,0,sizeof isBar);\n}\nvoid insert(int u,int v){\n    E[eid].v = v;\n    E[eid].next = p[u];\n    p[u] = eid++;\n}\nint times = 0;\nint dfn[maxn], low[maxn];\nint scc_cnt = 0; \nint sccno[maxn];\nset<int> scc[maxn];\nstack<int> S;\nvoid dfs(int u){\n    dfn[u] = low[u] = ++times;\n    S.push(u);\n    for(int i=p[u];~i;i=E[i].next){\n        int v = E[i].v;\n        if(dfn[v] == 0){\n            dfs(v);\n            low[u] = min(low[u],low[v]);\n        }else if(!sccno[v]){\n            low[u] = min(low[u],low[v]);\n        }\n    }\n    if(low[u] == dfn[u]){\n        ++scc_cnt;\n        while(true){\n            int x = S.top();\n            S.pop();\n            sccno[x] = scc_cnt;\n            scc[scc_cnt].insert(x);\n            if(x == u){\n                break;\n            }\n        }\n    }\n}\nstruct edgeNew{\n    int v,w;\n    int next;\n};\nedgeNew new_E[maxm];\nint new_p[maxn],new_eid = 0;\nvoid new_init(){\n    memset(new_p,-1,sizeof(new_p));\n    new_eid = 0;\n}\nvoid new_insert(int u,int v,int w){\n    new_E[new_eid].v = v;\n    new_E[new_eid].next = new_p[u];\n    new_E[new_eid].w = w;\n    new_p[u] = new_eid++;\n}\n\nint dis[maxn];\nbool vis[maxn];\nvoid spfa(int u){\n    memset(vis,false,sizeof vis);\n    vis[u] = true;\n    //memset(dis,inf,sizeof dis);\n    for(int i=1;i<=maxn;i++){\n        dis[i] = -inf;\n    }\n    dis[u] = 0;\n    queue<int> q;\n    q.push(u);\n    while(!q.empty()){\n        u = q.front();\n        q.pop();\n        vis[u] = false;\n        for(int j=new_p[u];~j;j = new_E[j].next){\n            int v = new_E[j].v;\n            int w = new_E[j].w;\n            if(dis[v] < dis[u] + w){\n                dis[v] = dis[u] + w;\n                if(!vis[v]){\n                    q.push(v);\n                    vis[v] = true;\n                }\n            }\n        }\n    }\n}\n\nint main(){\n    //freopen(\"3627.txt\",\"r\",stdin);\n    scanf(\"%d%d\",&n,&m);\n    init();\n    for(int i=0;i<m;i++){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        insert(u,v);\n    }\n    for(int i=1;i<=n;i++) scanf(\"%d\",&money[i]);\n    scanf(\"%d%d\",&S_,&P_);\n    //barList[]\n    for(int i=1;i<=P_;i++){\n        int t;\n        scanf(\"%d\",&t);\n        isBar[t] = true;\n        barList.push_back(t);\n    }\n    memset(dfn, 0, sizeof(dfn));\n    times = scc_cnt = 0;\n    for (int i = 1; i <= n; ++i) {\n        if (!dfn[i]) {\n            dfs(i);\n        }\n    }\n    for(int i=1;i<=n;i++){\n    \t//printf(\"sccSum[%d] += %d\\n\",sccno[i],money[i]);\n        sccSum[sccno[i]] += money[i];\n    }\n    new_init();\n    for(int u=1;u<=n;++u){\n        for(int i=p[u];i != -1;i=E[i].next){\n            int v = E[i].v;\n            if(sccno[u] != sccno[v]){\n            \t//printf(\"insert(u:%d,v:%d,w:%d)\\n\",sccno[u],sccno[v],sccSum[sccno[v]]);\n                new_insert(sccno[u],sccno[v],sccSum[sccno[v]]);\n            }\n        }\n    }\n    //printf(\"scc_cnt:%d\\n\",scc_cnt);\n    new_insert(0,sccno[S_],sccSum[sccno[S_]]);\n    spfa(0);\n    /*\n    cout << dis[sccno[4]] << endl;\n    cout << dis[sccno[3]] << endl;\n    cout << dis[sccno[5]] << endl;\n    cout << dis[sccno[6]] << endl;\n    */\n    int ans = -inf;\n    for(int i=0;i<barList.size();i++){\n        ans = max(ans,dis[sccno[barList[i]]]);\n    }\n    cout << ans;\n    return 0;\n}\n```\n",
        "postTime": 1531214262,
        "uid": 83266,
        "name": "aRenBigFather",
        "ccfLevel": 0,
        "title": "[P3627]\u62a2\u63a0\u8ba1\u5212"
    },
    {
        "content": "\u4e00\u9053tarjan\u7f29\u70b9+\u5355\u6e90\u6700\u957f\u8def\u7684\u95ee\u9898\n\n\u56e0\u4e3a\u6bcf\u4e00\u6761\u9053\u8def\u53ef\u4ee5\u91cd\u590d\u8d70\uff0c\u6240\u4ee5\u5982\u679c\u5b58\u5728\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u904d\u5386\u6b64\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u6bcf\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u4e3a\u6b64\u5f3a\u8fde\u901a\u5206\u91cf\u53ef\u62a2\u52ab\u603b\u91d1\u989d\uff0c\u5373\u8fd9\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u4e3a\u5176\u4e2d\u6240\u6709\u70b9\u7684\u6743\u503c\u4e4b\u548c\uff0c\u4e14\u53ea\u8981\u5176\u4e2d\u6709\u4e00\u4e2a\u70b9\u4e3a\u9152\u5427\uff0c\u6b64\u5f3a\u8fde\u901a\u5206\u91cf\u5373\u53ef\u89c6\u4e3a\u9152\u5427\n\n\u63a5\u4e0b\u6765\uff0c\u5728\u5b8c\u6210\u7f29\u70b9\u7684\u56fe\u4e0a\u6c42\u4e00\u6b21\u5355\u6e90\u6700\u957f\u8def\u3002\u5728\u6b64\u56fe\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u8f6c\u5316\u4e3a\u8fb9\u7684\u6743\u503c\uff0c\u5373\u5f53x\u5230y\u5b58\u5728\u4e00\u6761\u8def\u5f84\u65f6\uff0c\u6b64\u8def\u5f84\u7684\u6743\u503c\u5373\u4e3ay\u70b9\u53ef\u62a2\u52ab\u7684\u603b\u91d1\u989d\u3002\u4e00\u6b21spfa\u5373\u53ef\u6c42\u51fa\u5355\u6e90\u6700\u957f\u8def\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7528dijkstra\u7ed3\u679cwa\u4e86\u4e24\u4e2a\u70b9\uff09\n\n\u6700\u540e\u904d\u5386\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5982\u679c\u662f\u9152\u5427\uff0c\u5c31\u7528\u5b83\u7684\u8ddd\u79bb\u66f4\u65b0\u7b54\u6848\n\n\u5177\u4f53\u7ec6\u8282\u770b\u6ce8\u89e3\uff0c\u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define a(a,b,c) for(int a=b;a<=c;a++)\n#define b(a,b,c) for(int a=b;a>=c;a--)\nusing namespace std;\nconst int INF=0x3f3f3f3f,N=500050,M=500050;\nstruct ab{\n\tint y,z;\n};\nbool operator < (ab i,ab j)\n{\n\treturn i.z<j.z;\n}\nint ver[M],Next[M],head[N],d[N];\nint vc[M],nc[M],hc[M],dc[N],k[N];\nint dfn[N],low[N],stack[N],v[N],c[N],f[N];\nbool vis[N],vv[N],used[N];\nint n,m,tot,tc,t,num,cnt,top,ans,s,p;\ninline void add(int x,int y)\n{\n\tver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n}\ninline void add_c(int x,int y)//\u7f29\u70b9\u7528\n{\n\tvc[++tc]=y,nc[tc]=hc[x],hc[x]=tc;\n}\nvoid tarjan(int x)//\u8dd1\u4e00\u8fb9tarjan\n{\n\tdfn[x]=low[x]=++num;\n\tstack[++top]=x,v[x]=1;\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(v[y]) low[x]=min(low[x],dfn[y]);\n\t}\n\tif(low[x]==dfn[x])\n\t{\n\t\tcnt++;int y;\n\t\tdo{\n\t\ty=stack[top--],v[y]=0;\n\t\tc[y]=cnt;\n\t\tdc[cnt]+=d[y];\n\t\tif(vis[y]) vv[cnt]=1;\n        //\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6743\u503c\u4e3a\u5404\u70b9\u7684\u6743\u503c\u4e4b\u548c\uff0c\u5e76\u5224\u65ad\u6b64\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u662f\u5426\u5b58\u5728\u9152\u5427\n\t\t}while(x!=y);\n\t}\n}\nvoid spfa(int x)\n{\n//\u5728\u5b8c\u6210\u7f29\u70b9\u540e\u7684\u56fe\u4e0a\u6c42\u51fa\u5355\u6e90\u6700\u957f\u8def\n\tqueue<int> q;\n\tq.push(x);\n\tmemset(f,0,sizeof(f));\n\tf[x]=dc[x];\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tused[x]=0;\n\t\tfor(int i=hc[x];i;i=nc[i])\n\t\t{\n\t\t\tint y=vc[i],z=dc[y];\n            //\u70b9\u6743\u8f6c\u5316\u4e3a\u8fb9\u6743\n\t\t\tif(f[y]<f[x]+z)\n\t\t\t{\n\t\t\t\tf[y]=f[x]+z;\n\t\t\t\tif(!used[y]) q.push(y),used[y]=1;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\ta(i,0,m-1)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t}\n\ta(i,1,n)\n\tscanf(\"%d\",&d[i]);\n\tscanf(\"%d%d\",&s,&p);\n\ta(i,0,p-1)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tvis[x]=1;\n\t}\n\ta(i,1,n)\n\tif(!dfn[i]) tarjan(i);\n\ta(x,1,n)\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(c[x]!=c[y]) add_c(c[x],c[y]);\n\t}\n\tspfa(c[s]);\n\ta(i,1,cnt)\n\tif(vv[i]) ans=max(ans,f[i]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1528441341,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "### \u3010\u9898\u76ee\u5927\u610f\u3011\n -  \u7ed9\u51fa\u4e00\u5e45\u56fe\u3001\u4e00\u4e2a\u8d77\u70b9\u3001\u4e00\u4e9b\u7ec8\u70b9\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u7684\u6570\u503c\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u5c31\u628a\u8fd9\u4e2a\u70b9\u7684\u6570\u503c\u7d2f\u8ba1\u4e0b\u6765\uff08\u91cd\u590d\u7ecf\u8fc7\u7684\u53ea\u7b97\u4e00\u6b21\uff09\uff0c\u95ee\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u6700\u591a\u53ef\u4ee5\u7d2f\u8ba1\u591a\u5c11\u6570\u3002\n\n### \u3010\u89e3\u9898\u601d\u8def\u3011\n- \t\u53ea\u8981\u7528Tarjan\u7f29\u70b9\uff0c\u7136\u540e\u8dd1\u4e00\u6b21SPFA\u201c\u6700\u957f\u8def\u5f84\u201d\u5c31\u884c\u4e86\u3002\n\n### \u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n```\n#include<cstdio>\n#include<iostream>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int M=500005;\n\nint d[M],a[M],b[M];\nint n,m,s,T;\n\nstruct EDGE{\n\tint t,next;\n}e[M];\nint cur;\nint head[M];\nvoid add(int a,int b)\n{\n\tcur++;\n\te[cur].t=b;\n\te[cur].next=head[a];\n\thead[a]=cur;\n}\n\nint DFN[M],LOW[M],sta[M],In[M],color[M],sum[M];\nint Index,tot,tp;\nvoid Tarjan(int x)\n{\n\tDFN[x]=LOW[x]=++Index;\n\tsta[++tp]=x;\n\tIn[x]=true;\n\tfor (int h=head[x];h!=-1;h=e[h].next)\n\t{\n\t\tint t=e[h].t;\n\t\tif (!DFN[t])\n\t\t{\n\t\t\tTarjan(t);\n\t\t\tif (LOW[t]<=LOW[x])\n\t\t\t\tLOW[x]=LOW[t];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (In[t])\n\t\t\t\tif (DFN[t]<=LOW[x])\n\t\t\t\t\tLOW[x]=DFN[t];\n\t\t}\n\t}\n\tif (DFN[x]==LOW[x])\n\t{\n\t\ttot++;\n\t\twhile (sta[tp+1]!=x)\n\t\t{\n\t\t\tcolor[sta[tp]]=tot;\n\t\t\tsum[tot]+=d[sta[tp]];\n\t\t\tIn[sta[tp]]=false;\n\t\t\ttp--;\n\t\t}\n\t}\n}\n\nint dis[M],vis[M];\nqueue <int> q;\nvoid SPFA(int s)\n{\n\tdis[s]=sum[s];\n\tq.push(s);\n\twhile (!q.empty())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tvis[x]=false;\n\t\tfor (int h=head[x];h!=-1;h=e[h].next)\n\t\t{\n\t\t\tint t=e[h].t;\n\t\t\tif (dis[x]+sum[t]>dis[t])\n\t\t\t{\n\t\t\t\tdis[t]=dis[x]+sum[t];\n\t\t\t\tif (!vis[t])\n\t\t\t\t{\n\t\t\t\t\tq.push(t);\n\t\t\t\t\tvis[t]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(head,-1,sizeof(head));\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\tadd(a[i],b[i]);\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&d[i]);\n\t\n\tfor (int i=1;i<=n;i++)\n\t\tif (!DFN[i])\n\t\t\tTarjan(i);\n\t\t\t\n\tcur=0;\n\tmemset(head,-1,sizeof(head));\n\tmemset(e,0,sizeof(e));\n\tfor (int i=1;i<=m;i++)\n\t\tif (color[a[i]]!=color[b[i]])\n\t\t\tadd(color[a[i]],color[b[i]]);\n\t\n\tscanf(\"%d%d\",&s,&T);\n\tSPFA(color[s]);//\u6ce8\u610f\u662f\u8d77\u70b9\u5bf9\u5e94\u7684\u7f29\u70b9\n\t\n\tint ans=0;\n\tfor (int i=1;i<=T;i++)\n\t{\n\t\tint t;\n\t\tscanf(\"%d\",&t);\n\t\tans=max(ans,dis[color[t]]);//\u6ce8\u610f\u662f\u7ec8\u70b9\u5bf9\u5e94\u7684\u7f29\u70b9\n\t}\n\t\n\tprintf(\"%d\",ans);\n\t\n\treturn 0;\n}",
        "postTime": 1526363253,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u5148\u8dd1tarjan\uff0c\u628a\u6bcf\u4e2a\u70b9\u67d3\u8272\uff0c\u4e00\u6837\u989c\u8272\u7684\u70b9\uff08\u5373\u5728\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u91cc\uff09\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u70b9\uff08\u6211\u6ce8\u91ca\u91cc\u7684\u201c\u8054\u901a\u5757\u201d\uff09\uff1b\n\n\u6c42\u51fa\u6bcf\u4e2a\u8054\u901a\u5757\u80fd\u62a2\u5230\u7684\u94b1\uff08\u7b49\u4e8e\u5b83\u91cc\u9762\u6bcf\u4e2a\u70b9\u80fd\u62a2\u5230\u94b1\u7684\u603b\u548c\uff09\uff1b\n\n\u7136\u540e\u8dd1SPFA\uff0c\u627e\u6700\u957f\u8def\u5f84\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u662f\u70b9\u6743\u4e0d\u662f\u8fb9\u6743\uff1b\n\n\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\uff1b\n\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<vector>\n#include<set>\n#include<cstdlib>\n#include<queue>\nusing namespace std; \nint n,m;//n,m<=50W(\u6211\u4eec\u5b66\u6821\u5185\u7f51\u6570\u636e\u597d\u50cf\u53ea\u67093000,\u6240\u4ee5\u6211\u5c31\u4e0d\u5199\u8bfb\u5165\u4f18\u5316\u4e86\u5427 )\nint cl=0;//\u989c\u8272\u603b\u6570 \nstruct E{\n    int v,next;\n};\nE edge[500001];//\u70b9\u4e4b\u95f4\u8fb9 \nE Edge[500001];//\u8054\u901a\u5757\u4e4b\u95f4\u7684\u8fb9 \nint cash[500001];//\u6bcf\u4e2a\u70b9\u80fd\u62a2\u5230\u7684\u94b1 \nint bar[500001];//\u9152\u5427\u6240\u5728\u7684\u4f4d\u7f6e \nint color[500001];//color[i]\u8868\u793a\u70b9i\u7684\u989c\u8272 \nint tarcash[500001];//\u6bcf\u4e2a\u8054\u901a\u5757\u80fd\u62a2\u7684\u94b1 \nvector<int> ccom[500001]; //ccom[i]\u8868\u793a\u989c\u8272\u4e3ai\u7684\u70b9\u6709\u54ea\u4e9b \nint dfn[500001];\nint dfnn;//\u6807\u8bb0dfn\u7684 \nint low[500001],stack[600001];\nint head=0;//stack\u6808\u9876 \nint dis[500001];//SPFA\u4e2d\u7684dis \nbool vis[500001];//SPFA\u4e2d\u7684vis\n//\uff08\u6211\u8fd9\u9053\u9898\u5b58\u8fb9\u65b9\u6cd5\u9ebb\u70e6\u4e86\uff0c\u4ed6\u4eec\u597d\u50cf\u7528vector\u5b58\uff0c\u80fd\u7a0d\u5fae\u5c11\u5199\u51e0\u884c\uff0c\u4e5f\u80fd\u7701\u4e00\u70b9\u70b9\u5185\u5b58\uff09 \nint sum=0;\nint fir[500001];//\u4e00\u822c\u5927\u4f6c\u628a\u8fd9\u4e2a\u6570\u7ec4\u53eb\u505ahead\uff0c\u5b58\u8fb9\u7684\u90a3\u4e2a\nvoid add(int u,int v){//\u589e\u52a0\u70b9\u4e4b\u95f4\u7684\u8fb9\n    edge[++sum].next=fir[u];\n    fir[u]=sum;\n    edge[sum].v=v;\n}\nint Fir[500001],Sum=0;\nvoid Add(int u,int v){//\u589e\u52a0\u8054\u901a\u5757\u4e4b\u95f4\u7684\u8fb9\n    Edge[++Sum].next=Fir[u];\n    Fir[u]=Sum;\n    Edge[Sum].v=v;\n}\nint s;\nint p;\nvoid tarjan(int x){\n    //tarjan\uff0c\u6a21\u677f\u4e0d\u89e3\u91ca \n    stack[++head]=x;\n    vis[x]=1;\n    dfn[x]=++dfnn;\n    low[x]=dfnn;\n    for(int i=fir[x];i;i=edge[i].next)\n    {\n        int t=edge[i].v;\n        if(!dfn[t])\n        {\n            tarjan(t);\n            low[x]=min(low[x],low[t]);\n        }\n        else if(vis[t])low[x]=min(low[x],dfn[t]);\n    }\n    if(dfn[x]==low[x])\n    {\n        color[x]=++cl;//\u67d3\u8272 \n        vis[x]=0;\n        ccom[cl].push_back(x);\n        while(stack[head]!=x)\n        {\n            color[stack[head]]=cl;//\u67d3\u8272 \n            vis[stack[head]]=0;\n            ccom[cl].push_back(stack[head]);//\u989c\u8272\u4e3acl\u7684\u70b9\u53c8\u589e\u52a0\u4e00\u4e2a \n            head--;\n        }\n        head--;\n    }\n}\nint main(){\n    //\u5f00\u59cb\u8bfb\u5165 \n    cin>>n>>m;\n    int x,y;\n    memset(dfn,0,sizeof(dfn));\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n    }\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&cash[i]);\n    cin>>s>>p;\n    for(int i=1;i<=p;i++)\n        scanf(\"%d\",&bar[i]);\n    //\u8bfb\u5165\u7ed3\u675f \n    for(int i=1;i<=n;i++)\n    {\n        if(dfn[i]==0)tarjan(i);//\u5982\u679ci\u8fd8\u6ca1\u6709\u641c\u5230\uff0c\u5219\u5bf9i\u8fdb\u884ctarjan \n    } \n    for(int i=1;i<=cl;i++)\n        for(int j=0;j<ccom[i].size();j++)\n        {\n            tarcash[i]+=cash[ccom[i][j]];//\u6bcf\u4e2a\u8054\u901a\u5757\u80fd\u62a2\u5230\u7684\u94b1\u7b49\u4e8e\u5b83\u91cc\u9762\u6bcf\u4e2a\u70b9\u7684cash[]\u4e4b\u548c \n        }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=fir[i];j;j=edge[j].next)//\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9 \n        {\n            if(color[i]!=color[edge[j].v])//\u5982\u679c\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e0d\u5728\u4e00\u4e2a\u8054\u901a\u5757\u91cc \n                Add(color[i],color[edge[j].v]); //\u5219\u8fd9\u6761\u8fb9\u5c31\u662f\u4e00\u4e2a\u8054\u901a\u5757\u6307\u5411\u53e6\u4e00\u4e2a\u8054\u901a\u5757\u7684\u8fb9 \n        }\n    }\n    //SPFA\u5f00\u59cb \n    memset(vis,0,sizeof(vis));\n    dis[color[s]]=tarcash[color[s]];\n    queue<int> q;\n    q.push(color[s]);//\u5c06\u8d77\u70b9s\u6240\u5728\u7684\u8054\u901a\u5757\u52a0\u5165SPFA\u7684\u961f\u5217 \n    vis[color[s]]=1;\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        vis[u]=0;\n        for(int i=Fir[u];i;i=Edge[i].next)\n        {\n            int v=Edge[i].v;\n            if(dis[v]<dis[u]+tarcash[v])//\u5982\u679c\u8d70\u5230\u8054\u901a\u5757u\u80fd\u62a2\u5230\u7684\u94b1\u52a0\u4e0av\u80fd\u62a2\u7684\u94b1\u5927\u4e8e\u539f\u5148\u8d70\u5230v\u80fd\u62a2\u7684\u94b1 \n            {\n                dis[v]=dis[u]+tarcash[v];\n                if(vis[v]==0)\n                    q.push(v);\n            }\n        }\n    }\n    //SPFA\u7ed3\u675f \n    int ans=0;\n    for(int i=1;i<=p;i++)\n    {\n        ans=max(ans,dis[color[bar[i]]]);//\u679a\u4e3e\u8d70\u5230\u6bcf\u4e2a\u9152\u5427\u80fd\u83b7\u5f97\u7684\u94b1\uff0c\u627e\u6700\u5927\u503c \n    }\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1501301343,
        "uid": 43591,
        "name": "John_Fu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "Tarjan\u7f29\u70b9\u4e4b\u540e\n\n\u8ba1\u7b97\u73af\u7684\u957f\u5ea6\n\n\u518d\u6c42\u6700\u957f\u8def\u5f84\u5373\u53ef\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<vector> \n#include<algorithm>\nusing namespace std;\nconst int MAX=500001;\nint Dfn[MAX],Low[MAX],S[MAX],Time=0,Top=0;\nbool vis[MAX];\nvector<int> e[MAX];\nint G[MAX];\nlong long GN[MAX];\nint Group=0;\nint Money[MAX];\nint s,p;\nvector<int> To[MAX];\nvector<int> W;\nint n,m;\nlong long Dis[MAX];\nbool change[MAX];\nvoid Tarjan(int u)//Tarjan\u7f29\u70b9 \n{\n    Time++;\n    Top++;\n    Dfn[u]=Time;\n    Low[u]=Time;\n    vis[u]=true;\n    S[Top]=u;\n    int v;\n    for(int i=0;i<e[u].size();++i)\n    {\n        v=e[u][i];\n        if(!Dfn[v])\n         {\n             Tarjan(v);\n             Low[u]=min(Low[u],Low[v]);\n         }\n        else\n         if(vis[v])\n            Low[u]=min(Low[u],Dfn[v]);\n    }\n    if(Dfn[u]==Low[u])\n    {\n        v=-1;\n        ++Group;\n        //cout<<\"Group:\"<<Group<<\":\";\n        while(v!=u)\n        {\n            v=S[Top--];\n            vis[v]=false;\n            G[v]=Group;\n            //cout<<v<<' ';\n            GN[Group]+=Money[v];\n        }\n        //cout<<endl;\n    }\n}\nvoid Line()//\u628a\u8d85\u7ea7\u70b9\u8fde\u63a5\u8d77\u6765 \n{\n    for(int i=1;i<=n;++i)\n     for(int j=0;j<e[i].size();++j)\n     {\n         if(G[i]!=G[e[i][j]])\n          To[G[i]].push_back(G[e[i][j]]);\n     }\n}\nvoid Count()\n{\n    //memset(vis,0,sizeof(vis));\n    memset(S,0,sizeof(S));\n    int h=0,t=1;\n    memset(Dis,0,sizeof(Dis));\n    vis[G[s]]=true;\n    int u,v,max1;\n    u=G[s];\n    Dis[u]=GN[u];\n    S[1]=u;\n    while(h<t)//\u8fd9\u91cc\u4e0d\u80fd\u7528\u8fea\u6770\u65af\u7279\u62c9\uff0c\u56e0\u4e3a\u5b83\u65e0\u6cd5\u89e3\u51b3\u6700\u5927\u8def\uff08\u53ef\u4ee5\u770b\u4e3a\u8d1f\u6743\u503c\uff09 \n    {\n        ++h;\n        u=S[h];\n        for(int i=0;i<To[S[h]].size();++i)\n        {\n            if(Dis[To[u][i]]<Dis[u]+GN[To[u][i]])\n            {\n                Dis[To[u][i]]=Dis[u]+GN[To[u][i]];\n                t++;\n                S[t]=To[u][i]; \n            }\n        }\n    }\n    /*for(int i=1;i<=Group;++i)\n    {\n        max1=0;\n        if(i!=1)\n        for(int j=1;j<=Group;++j)\n        {\n            if(!vis[j]&&Dis[j]>max1)\n             u=j,max1=Dis[j];\n        }\n        vis[u]=true;\n        memset(change,0,sizeof(change)); \n        for(int j=0;j<To[u].size();++j)\n        {\n            if(!change[To[u][j]])\n            {\n                change[To[u][j]]=true;\n                Dis[To[u][j]]=max(Dis[To[u][j]],Dis[u]+GN[To[u][j]]);\n            }\n        }\n    }*/\n    \n    //for(int i=1;i<=Group;++i)\n    // cout<<Dis[i]<<' ';\n    // cout<<endl;\n    long long max0=0;\n    for(int i=0;i<W.size();++i)\n    {\n        max0=max(max0,Dis[G[W[i]]]);\n    }\n    cout<<max0<<endl;\n}\n \nint main()\n{\n    int a,b;\n    cin>>n>>m;\n    for(int i=1;i<=m;++i)\n    {\n        cin>>a>>b;\n        e[a].push_back(b);\n    }\n    for(int i=1;i<=n;++i)\n     cin>>Money[i];\n    cin>>s>>p;\n    for(int i=1;i<=p;++i)\n    {\n        cin>>a;\n        W.push_back(a);\n    }\n    for(int i=1;i<=n;++i)\n     if(!Dfn[i])\n      Tarjan(i);\n    Line();\n    Count();\n    return 0;\n}\n```",
        "postTime": 1496736021,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "Tarjan\u7f29\u70b9+\u6700\u957f\u8def\n\n\u6b63\u786e\u6027\uff1a\u6bcf\u4e00\u4e2a\u73af\u6211\u4eec\u4f1a\u8d70\u5c3d\u91cf\u5c11\u6b21 \u4e14\u5047\u5982\u6211\u4eec\u8d70\u5b8c\u4e86\u67d0\u4e00\u4e2a\u73af\u5728\u4e4b\u540e\u8fd9\u4e2a\u73af\u5c31\u6ca1\u6709\u8d21\u732e\u4e86 \u80fd\u8d70\u73af\u4e00\u5b9a\u5c3d\u91cf\u8d70\u73af\n\n\n \n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<iomanip>\n#include<stack>\n#include<map>\n#include<set>\n#include<cmath>\n#define debug(x) cerr<<#x<<\"=\"<<x<<endl\n#define INF 0x7f7f7f7f\n#define llINF 0x7fffffffffffll\nusing namespace std;\ntypedef pair<int,int> pii;\ntypedef long long ll;\ninline int init()\n{\n    int now=0,ju=1;char c;bool flag=false;\n    while(1)\n    {\n        c=getchar();\n        if(c=='-')ju=-1;\n        else if(c>='0'&&c<='9')\n        {\n            now=now*10+c-'0';\n            flag=true;\n        }\n        else if(flag)return now*ju;\n    }\n}\ninline long long llinit()\n{\n    long long now=0,ju=1;char c;bool flag=false;\n    while(1)\n    {\n        c=getchar();\n        if(c=='-')ju=-1;\n        else if(c>='0'&&c<='9')\n        {\n            now=now*10+c-'0';\n            flag=true;\n        }\n        else if(flag)return now*ju;\n    }\n}\nint scc[500005],head[500005],h[500005],belong[500005],v[500005],sccnumber,cnt,cou;\nstruct edge\n{\n    int from,to,val,pre;\n}Edge[500005],road[500005];\ninline void addedge(int from,int to,int val)\n{\n    ++cnt;\n    Edge[cnt]=((edge){from,to,val,head[from]});\n    head[from]=cnt;\n}\ninline void insert(int from,int to,int val)\n{\n    ++cou;\n    road[cou]=((edge){from,to,val,h[from]});\n    h[from]=cou;\n}\nint dfs_time=0;\nstack<int> s;\nint dfn[500005],low[500005];\nbool bar[500005],instack[500005];\nint n,m,p,k,st;\nvoid tarjan(int now)\n{\n    dfn[now]=low[now]=++dfs_time;\n    s.push(now);instack[now]=true;\n    for(int j=h[now];j;j=road[j].pre)\n    {\n        if(!dfn[road[j].to])\n        {\n            tarjan(road[j].to);\n            low[now]=min(low[now],low[road[j].to]);\n        }\n        else if(instack[road[j].to])\n        {\n            low[now]=min(low[now],dfn[road[j].to]);\n        }\n    }\n    int topt;\n    if(dfn[now]==low[now])\n    {\n        ++sccnumber;\n        while(1)\n        {\n            topt=s.top();s.pop();\n            belong[topt]=sccnumber;\n            scc[sccnumber]+=v[topt];\n            instack[topt]=false;\n            if(dfn[topt]==low[topt])\n            {\n                break;\n            }\n        }\n    }\n}\nvoid rebuild()\n{\n    for(int i=1;i<=cou;i++)\n    {\n        if(belong[road[i].from]!=belong[road[i].to])\n        {\n            addedge(belong[road[i].from],belong[road[i].to],-scc[belong[road[i].to]]);\n        }\n    }\n}\nqueue<int> q;\nbool inq[500005];\nint dis[500005];\nint spfa()\n{\n    int now;\n    for(int i=1;i<=n;i++)dis[i]=INF;\n    dis[belong[st]]=-scc[belong[st]];\n    q.push(belong[st]);inq[belong[st]]=1;\n    while(!q.empty())\n    {\n        now=q.front();q.pop();\n        inq[now]=false;\n        for(int j=head[now];j;j=Edge[j].pre)\n        {\n            if(dis[Edge[j].to]>dis[now]+Edge[j].val)\n            {\n                dis[Edge[j].to]=dis[now]+Edge[j].val;\n                if(!inq[Edge[j].to])\n                {\n                    q.push(Edge[j].to);\n                    inq[Edge[j].to]=true;\n                }\n            }\n        }\n    }\n    int maxx=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(bar[i])\n        {\n            maxx=max(maxx,-dis[belong[i]]);\n        }\n    }\n    return maxx;\n}\nint main()\n{\n    int a,b;\n    n=init();m=init();\n    for(int i=1;i<=m;i++)\n    {\n        a=init();b=init();\n        insert(a,b,1);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        v[i]=init();\n    }\n    st=init();k=init();\n    for(int i=1;i<=k;i++)\n    {\n        a=init();\n        bar[a]=1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!dfn[i])\n        {\n            tarjan(i);\n        }\n    }\n    rebuild();\n    printf(\"%d\\n\",spfa());\n    return 0;\n}\n```\n/\\*\nsrO xudyh davidlee1999WTK linkct1999 Orz\n\ncompiler TDM-GCC 5.9.2\n\n\\*/",
        "postTime": 1489565638,
        "uid": 39523,
        "name": "\u79d8\u5bc6\u89c2\u6d4b\u8005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u7f29\u70b9+spfa.\n\n\u5f88\u5bb9\u6613\u7684\u53d1\u73b0\u5728\u56fe\u4e0a\u5982\u679c\u5b58\u5728\u73af\uff0c\u5e76\u4e14\u4eba\u5728\u73af\u4e0a\u7684\u8bdd\uff0c\u628a\u73af\u5168\u90e8\u8d70\u4e00\u904d\uff0c\u7b54\u6848\u4e0d\u4f1a\u53d8\u5dee\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u7f29\u70b9\uff0c\u7136\u540e\u5bf9\u6574\u4e2a\u7f29\u70b9\u540e\u7684dag\u8dd1\u4e00\u904d\u6700\u957f\u8def\u3002\n\n\u5e76\u4e14\u7f29\u70b9\u540e\u7684\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\uff0c\u4e00\u65e6\u6709\u4e00\u4e2a\u9152\u5427\uff0c\u90a3\u4e48\u6574\u4e2a\u8fde\u901a\u5206\u91cf\u90fd\u53ef\u4ee5\u770b\u6210\u9152\u5427\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u88ab\u5207\u6389\u4e86\u3002\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\u3002\uff08\u6211\u56e0\u4e3a$N$\u5f00\u5927\u4e86\u4e00\u4f4d\u5bfc\u81f4MLE\u4e86\u4e24\u6b21...\u592a\u8822\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 500005;\n\nint s , p ,head[N] , a[N] , cnt , n , m;\nint b[N];\nbool flag[N];\nbool check[N];\nstruct Edge {\n\tint to , nxt;\n}e[N] ,e1[N];\n\nvoid add(int u , int v) {\n\te[++ cnt].to = v;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\nint head1[N] , cnt1;\nvoid add1(int u , int v) {\n\te1[++ cnt1].to = v;\n\te1[cnt1].nxt = head1[u];\n\thead1[u] = cnt1;\n}\n\nvector <int> S[N];\nint wic[N] , tot;\nint idx , dfn[N] , low[N] , st[N] , top , ins[N];\nvoid Tarjan(int now) {\n\tdfn[now] = low[now] = ++ idx;\n\tst[++ top] = now;\n\tins[now] = 1;\n\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif(!dfn[v]) {Tarjan(v); low[now] = min(low[now] , low[v]);}\n\t\telse if(ins[v]) low[now] = min(low[now] , dfn[v]);\n\t}\n\tif(dfn[now] == low[now]) {\n\t\tint p; tot ++;\n\t\tdo {\n\t\t\tp = st[top --];\n\t\t\tins[p] = 0;\n\t\t\tS[tot].push_back(p);\n\t\t\twic[p] = tot;\n\t\t} while(p != now);\n\t}\n}\n\nint dis[N];\nbool inq[N];\nvoid Spfa(int s) {\n\tqueue <int> q;\n\tq.push(s);\n\tmemset(dis , -0x3f , sizeof(dis));\n\tdis[s] = b[s];\n\twhile(! q.empty()) {\n\t\tint now = q.front(); q.pop();\n\t\tinq[now] = 0;\n\t\tfor(int i = head1[now]; i ; i = e1[i].nxt) {\n\t\t\tint v = e1[i].to;\n\t\t\tif(dis[v] < dis[now] + b[v]) {\n\t\t\t\tdis[v] = dis[now] + b[v];\n\t\t\t\tif(!inq[v]) q.push(v) , inq[v] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0;\n\tfor(int i = 1 ; i <= tot ; i ++) if(check[i]) ans = max(ans , dis[i]);\n\tprintf(\"%d\\n\" , ans);\n}\n\nint main () {\n//\tfreopen(\"data.txt\" , \"r\" , stdin);\n\tscanf(\"%d %d\" , &n ,&m);\n\twhile(m --) {\n\t\tint u , v; scanf(\"%d %d\" , &u, &v);\n\t\tadd(u , v);\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%d\" , a + i);\n\tscanf(\"%d %d\" , &s , &p);\n\twhile(p --) {\n\t\tint o; scanf(\"%d\" , &o); flag[o] = 1;\n\t}\n\tfor(int i = 1 ; i <= n ;i ++) if(!dfn[i]) Tarjan(i);\n\tfor(int i = 1 ; i <= tot ; i ++) {\n\t\tfor(int j = 0 ; j < S[i].size() ; j ++) {\n\t\t\tb[i] += a[S[i][j]];\n\t\t\tif(flag[S[i][j]]) check[i] = 1;\n\t\t\tint now = S[i][j];\n\t\t\tfor(int k = head[now] ; k ; k = e[k].nxt) {\n\t\t\t\tint v = e[k].to;\n\t\t\t\tif(wic[v] == wic[now]) continue;\n\t\t\t\tadd1(wic[now] , wic[v]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tSpfa(wic[s]);\n\treturn 0;\n}\n\n```",
        "postTime": 1573519680,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u601d\u8def : \n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053Tarjan + \u6700\u957f\u8def\u7684\u9898\u3002\u9996\u5148\uff0c\u6211\u4eec\u7528Tarjan\u628a\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u5e76\u8bb0\u5f55\u90a3\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u6743\u548c(\u56e0\u4e3a\u5f53\u90a3\u4e2a\u4eba\u8d70\u8fdb\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u540e\u90a3\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u6240\u6709money\u90fd\u4f1a\u88ab\u4ed6\u62ff\u8d70(\u7ed5\u4e00\u5708\u4e0d\u5c31\u5b8c\u4e86\uff1f))\uff0c\u7136\u540e\u6211\u4eec\u5316\u70b9\u6743\u4e3a\u8fb9\u6743\uff0c\u518d\u4ee5\u8d77\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u8dd1\u6700\u957f\u8def\uff0c\u6700\u540e\u5c31\u80fd\u8ba1\u7b97\u51fa\u4ece\u8d77\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5230\u4efb\u610f\u4e00\u4e2a\u7ec8\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6700\u957f\u8ddd\u79bb\u4e86(\u6700\u5927money\u503c)\uff0c\u8f93\u51fa\u7684\u662f\u53d6\u4ece\u8d77\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5230\u4efb\u610f\u4e00\u4e2a\u7ec8\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6700\u5927\u503c\u3002\n\n\u5168\u6587 + \u4ee3\u7801\uff1ahttps://www.cnblogs.com/qqq1112/p/11255179.html",
        "postTime": 1564818096,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    },
    {
        "content": "\u5199\u6302\u4e86n\u904d\u7684tarjan\uff0c\u51c4\u51c4\u60e8\u60e8\u621a\u621a\uff0c\u7136\u800c\u88ab\u903c\u65e0\u5948\u4e4b\u4e0b\u7167\u7740\u677f\u5b50\u6539\uff0c\u56e0\u4e3a\u660e\u663e\u53ef\u4ee5\u770b\u51fa\u9014\u4e2d\u662f\u6709\u73af\u7684\uff0c\u6211\u4eec\u8981\u6c42\u7684\u53c8\u662f\u4e00\u4e2a\u6700\u957f\u8def\uff0c\u56e0\u6b64\uff0c\u9996\u5148\u9009\u62e9\u7f29\u70b9\uff0c\u4e5f\u5c31\u662ftarjan\u628a\u76f8\u8fde\u901a\u7684\u70b9\u770b\u6210\u4e00\u4e2a\u5927\u70b9\uff0c\u56e0\u4e3a\u70b9\u5185\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u6240\u4ee5\u53ea\u7528\u8003\u8651\u70b9\u4e4b\u5916\uff0c\u6211\u4eectarjan\u4e4b\u540e\u518d\u5efa\u4e00\u5f20\u65b0\u56fe\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u518d\u65b0\u56fe\u4e0a\u8dd1\u6700\u957f\u8def\u4e86\uff0c\u56e0\u4e3a\u6700\u540e\u53ea\u80fd\u505c\u5728\u9152\u5427\uff0c\u679a\u4e3e\u6bcf\u4e2a\u9152\u5427\u4f4d\u7f6e\u4f5c\u4e3a\u7ed3\u5c3e\u70b9\u7684\u6700\u5927\u503c\uff01\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int maxn=5000000;\nint ans,n,m,vis[maxn],uu[maxn],hd[maxn],vv[maxn],head[maxn],k,di[maxn],val[maxn],dis[maxn],s,p,bar[maxn],dfn[maxn],low[maxn],belong[maxn],cnt,ins[maxn],stack[maxn],top,sum,al[maxn];\nstruct node{\n\tint nxt,v;\n}e[maxn];\nvoid add1(int u,int vi){\n\te[++k].v=vi;\n\te[k].nxt=head[u];\n\thead[u]=k;\n}\nstruct nod{\n\tint nxt,v,w;\n}ee[maxn];\nvoid add2(int u,int vi,int wi){\n\tee[++k].v=vi;\n\tee[k].w=wi;\n\tee[k].nxt=hd[u];\n\thd[u]=k;\n}\nvoid tarjan(int a)\n{\n    dfn[a]=low[a]=++cnt;\n    ins[a]=1;\n    stack[++top]=a;\n    for(int i=head[a];i;i=e[i].nxt){\n        int vi=e[i].v;\n        if(!dfn[vi]){\n            tarjan(vi);\n            low[a]=min(low[a],low[vi]);\n        }\n        else if(ins[vi])   low[a]=min(low[a],dfn[vi]);\n    }\n    if(dfn[a]==low[a]){\n        sum++;\n        while(stack[top+1]!=a){\n            belong[stack[top]]=sum;\n            al[sum]+=val[stack[top]];\n            ins[stack[top--]]=0;\n        }\n    }\n}\nqueue<int>q;\nvoid spfa(int x){\n\tdis[x]=0;\n\tvis[x]=1;\n\tq.push(x);\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvis[x]=0;\n\t\tfor(int i=hd[x];i;i=ee[i].nxt){\n\t\t\tint vi=ee[i].v;\n\t\t\tif(dis[vi]<dis[x]+ee[i].w){\n\t\t\t\tdis[vi]=dis[x]+ee[i].w;\n\t\t\t\tif(!vis[vi]){\n\t\t\t\t\tq.push(ee[i].v);\n\t\t\t\t\tvis[ee[i].v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&uu[i],&vv[i]);\n\t\tadd1(uu[i],vv[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&val[i]);\n\t}\n\tscanf(\"%d%d\",&s,&p);\n\tfor(int i=1;i<=p;i++){\n\t\tscanf(\"%d\",&di[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!dfn[i]) tarjan(i);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tif(belong[uu[i]]!=belong[vv[i]]){\n\t\t\tadd2(belong[uu[i]],belong[vv[i]],al[belong[vv[i]]]);\n\t\t}\n\t}\n\tadd2(0,belong[s],al[belong[s]]);\n\tspfa(0);\n\tfor(int i=1;i<=p;i++){\n\t\tans=max(ans,dis[belong[di[i]]]);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1537621089,
        "uid": 46743,
        "name": "loaky",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3627 \u3010[APIO2009]\u62a2\u63a0\u8ba1\u5212\u3011"
    }
]