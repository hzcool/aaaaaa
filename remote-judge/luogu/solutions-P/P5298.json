[
    {
        "content": "\u597d\u5999\u7684\u4e00\u4e2a\u9898\u2026\n\n\u6211\u4eec\u8bbe $f_{i,j}$ \u4e3a $i$ \u8282\u70b9\u51fa\u73b0 $j$ \u7684\u6982\u7387\n\n\u8bbe $l = ch[i][0] , r = ch[i][1]$\n\u5373\u5de6\u513f\u5b50\u53f3\u513f\u5b50\n\n\u8bbe $m$ \u4e3a\u53f6\u5b50\u7ed3\u70b9\u7684\u4e2a\u6570\n\n\u663e\u7136\uff0c$i$ \u51fa\u73b0 $j$ \u7684\u6982\u7387\u4e3a\n$$f_{i,j} = f_{l,j} * (p_i \\sum_{k=1}^{j-1}f_{r,k} + (1-p_i)\\sum_{k=j+1}^{m}f_{r,k}) + f_{r,j} * (p_i \\sum_{k=1}^{j-1}f_{l,k} + (1-p_i)\\sum_{k=j+1}^{m}f_{l,k})$$\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e2a\u67ff\u5b50\u6709\u5173\u524d\u7f00\u548c\u548c\u540e\u7f00\u548c\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u64cd\u4f5c\u6765\u8fdb\u884c\u8f6c\u79fb\uff0c\u4ece\u4e0b\u5230\u4e0a\u8f6c\u79fb\uff0c\u6c42\u51fa\u6839\u8282\u70b9\u7684\u6982\u7387\u5c31\u597d\u4e86\u2026\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nint read() {\n  int x = 0;\n  char c = 0;\n  while (c < 48) c = getchar();\n  while (c > 47) x = (x << 1) + (x << 3) + (c & 15), c = getchar();\n  return x;\n}\n\nconst int mod = 998244353;\nint qpow(int x, int y) {\n  int ans = 1;\n  for (; y; y >>= 1, x = 1ll * x * x % mod)\n    if (y & 1) ans = 1ll * ans * x % mod;\n  return ans;\n}\n\nint n;\nconst int maxn = 3e5 + 10;\nint ch[maxn][2], fa[maxn], cnt[maxn], val[maxn], tmp[maxn], qwq = 0, s[maxn];\nint rt[maxn], ls[maxn << 5], rs[maxn << 5], sum[maxn << 5], mul[maxn << 5];\nint ans = 0, tot = 0;\n\nvoid pushup(int rt) { sum[rt] = (sum[ls[rt]] +sum[rs[rt]]) % mod; }\nvoid pushmul(int rt, int v) {\n  if (!rt) return;\n  sum[rt] = 1ll * sum[rt] * v % mod;\n  mul[rt] = 1ll * mul[rt] * v % mod;\n}\n\nvoid pushd(int rt) {\n  if (mul[rt] == 1) return;\n  if (ls[rt]) pushmul(ls[rt], mul[rt]);\n  if (rs[rt]) pushmul(rs[rt], mul[rt]);\n  mul[rt] = 1;\n}\n\nint newnode() {\n\tint x = ++ tot; \n\tls[x] = rs[x] = sum[x] = 0, mul[x] = 1 ;\n\treturn x ;\n}\nvoid upd(int& p, int l, int r, int x, int v) {\n  if (!p) p = newnode() ;\n  if (l == r) {\n    sum[p] = v;\n    return;\n  }\n  pushd(p);\n  int mid = l + r >> 1;\n  (x <= mid) ? upd(ls[p], l, mid, x, v) : upd(rs[p], mid + 1, r, x, v);\n  pushup(p);\n}\n\nint merge(int x, int y, int l, int r, int xmul, int ymul, int v) {\n  if (!x && !y) return 0;\n  if (!x) {\n    pushmul(y, ymul);\n    return y;\n  }\n  if (!y) {\n    pushmul(x, xmul);\n    return x;\n  }\n  pushd(x), pushd(y);\n  int mid = l + r >> 1;\n  int lsx = sum[ls[x]], lsy = sum[ls[y]], rsx = sum[rs[x]], rsy = sum[rs[y]];\n  ls[x] = merge(ls[x], ls[y], l, mid, (xmul + 1ll * rsy % mod * (1 - v + mod)) % mod,\n                (ymul + 1ll * rsx % mod * (1 - v + mod)) % mod, v);\n  rs[x] = merge(rs[x], rs[y], mid + 1, r, (xmul + 1ll * lsy % mod * v) % mod,\n                (ymul + 1ll * lsx % mod * v) % mod, v);\n  pushup(x);\n  return x;\n}\n\nvoid out(int x, int l, int r) {\n  if (!x) return;\n  if (l == r) {\n    s[l] = sum[x];\n    return;\n  }\n  int mid = l + r >> 1;\n  pushd(x);\n  out(ls[x], l, mid);\n  out(rs[x], mid + 1, r);\n}\n\nvoid dfs(int u) {\n  if (!cnt[u]) upd(rt[u], 1, qwq, val[u], 1);\n  if (cnt[u] == 1) dfs(ch[u][0]), rt[u] = rt[ch[u][0]] ;\n  if (cnt[u] == 2) dfs(ch[u][0]), dfs(ch[u][1]), rt[u] = merge(rt[ch[u][0]], rt[ch[u][1]] ,1 , qwq , 0 , 0 , val[u]);\n}\n\nint main() {\n  n = read();\n  for (int i = 1; i <= n; i++) fa[i] = read();\n  for (int i = 1; i <= n; i++)\n    if (fa[i]) ch[fa[i]][cnt[fa[i]]++] = i;\n  for (int i = 1; i <= n; i++) val[i] = read();\n  for (int i = 1; i <= n; i++) {\n    if (cnt[i]) {\n      val[i] = 1ll * val[i] * qpow(10000, mod - 2) % mod;\n    } else {\n      tmp[++qwq] = val[i];\n    }\n  }\n  std ::sort(tmp + 1, tmp + qwq + 1);\n  for (int i = 1; i <= n; i++)\n    if (!cnt[i]) val[i] = std ::lower_bound(tmp + 1, tmp + qwq + 1, val[i]) - tmp;\n  dfs(1);\n  out(rt[1], 1, qwq);\n  for (int i = 1; i <= qwq; i++) ans = (ans + 1ll * i * tmp[i] % mod * s[i] % mod * s[i]) % mod;\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n```",
        "postTime": 1581923108,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5298 \u3010[PKUWC2018]Minimax\u3011"
    },
    {
        "content": "[\u9898\u76eeLink](https://www.luogu.org/problem/P5298)\n\n\u9898\u610f\u590d\u6742,\u96be\u4ee5\u6982\u62ec\u2026\u2026\n\n------------\n\n\u80af\u5b9a\u9996\u5148\u79bb\u6563\u5316\u3002\n\n\u9898\u76ee\u4e2d\u5199\u7740\u8fd9\u73a9\u610f\u662f\u4e2a\u4e8c\u53c9\u6811,\u90a3\u4e48\u53ef\u80fd\u662f\u8003\u8651\u5de6\u53f3\u5b50\u6811\u95f4\u8d21\u732e\u4ec0\u4e48\u7684\u3002\n\n\u9898\u76ee\u91cc\u8981\u6c42\u7684\u662f\u8fd9\u4e2a:$\\sum_{i=1}^{m}i\\cdot V_i\\cdot D_i^2$\n\n\u76f4\u63a5\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u80af\u5b9a\u662f\u5e03\u661f\u7684(\u65e0\u6cd5\u8f6c\u79fb),\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4$D_{[1...n]}$\n\n\u91c7\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6765\u7ef4\u62a4,\u6b63\u597d\u5408\u9002$3*10^5$\u7684\u8303\u56f4\u3002\n\n\u5bf9\u4e8e\u67d0\u4e2a\u53f6\u8282\u70b9,\u5c31\u662f\u5728$D_{?}$\u5904\u662f1,\u5176\u4ed6\u90fd\u662f0;\n\n\u7136\u540e,\u5982\u679c\u67d0\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u513f\u5b50,\u90a3\u4e48\u76f4\u63a5\u7ee7\u627f\u6574\u4e2a$D$\u6570\u7ec4\u5c31\u597d\u3002\n\n\u5bf9\u4e8e\u67d0\u4e2a\u70b9$u$\u6709\u4e24\u4e2a\u513f\u5b50:\n\n\u9996\u5148,\u6211\u4eec\u8bbe\u5de6\u513f\u5b50\u7684\u6982\u7387\u6570\u7ec4\u4e3a$DL$,\u76f8\u5e94\u5730\u53f3\u513f\u5b50\u4e3a$DR$\n\n\u90a3\u4e48,\u5bf9\u4e8e\u5de6\u513f\u5b50\u6743\u4e3a$x$(\u662f\u79bb\u6563\u5316\u4e4b\u540e\u7684)\u7684\u60c5\u51b5,\u8981\u4ee5\u7ee7\u627f\u5230$u$\u7684\u6982\u7387\u662f:\n\n- \u6700\u5c0f\u503c:$D_{i}+=DL_i*(1-p_u)\\sum\\limits_{i=x+1}^nDR_i$\n\n- \u6700\u5927\u503c:$D_{i}+=DL_i*p_u\\sum\\limits_{i=1}^{x-1}DR_i$\n\n\u7531\u4e8e\u5404\u4e2a\u53f6\u8282\u70b9\u6743\u503c\u4e0d\u540c,\u5de6\u53f3\u6743\u76f8\u540c\u7684\u60c5\u51b5\u662f\u4e0d\u5b58\u5728\u7684\u3002\n\n\u603b\u7684\u6765\u8bf4\u662f$D_i+=DL_i*\\left((1-p_u)\\sum\\limits_{i=x+1}^nDR_i+p_u\\sum\\limits_{i=1}^{x-1}DR_i\\right)$\n\n\u5bf9\u4e8e\u53f3\u513f\u5b50\u540c\u7406\u3002\n\n\u8fd9\u4e48\u770b,\u9700\u8981\u5bf9$D$\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u548c\u548c\u540e\u7f00\u548c,\u52a8\u6001\u7ef4\u62a4\u597d\u50cf\u5f88\u9ebb\u70e6,\u53ef\u4ee5\u8fb9\u5408\u5e76\u8fb9\u7b97(\u5229\u7528\u533a\u95f4\u548c),\u7528\u5b8c\u5c31\u4e22\u6389\u3002\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u65f6,\u5982\u679c\u4e24\u65b9\u90fd\u6709\u8282\u70b9,\u90a3\u4e48\u5206\u4e0b\u53bb,`pushup`\u89e3\u51b3\u3002\n\n\u5982\u679c\u53ea\u6709\u4e00\u65b9\u6709\u8282\u70b9\u7684\u8bdd(\u5047\u8bbe\u662f\u5de6\u65b9):\n\n\u8d21\u732e\u5173\u7cfb\u5f0f\u662f:\n\n$D_i=DL_i*\\left((1-p_u)\\sum\\limits_{i=x+1}^nDR_i+p_u\\sum\\limits_{i=1}^{x-1}DR_i\\right)$\n\n\u53ea\u6709\u4e00\u65b9\u6709\u8282\u70b9,\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u5185\u518d\u6ca1\u6709\u53f3\u65b9\u8282\u70b9\u4e86\u3002\n\n\u90a3\u4e48\u62ec\u53f7\u91cc\u9762\u90a3\u4e2a\u5f0f\u5b50\u662f\u5b9a\u503c,\u6253\u533a\u95f4\u4e58\u6cd5tag\u5373\u53ef\u3002\n\n\u8fd9\u662f\u4e00\u9053\u597d\u9898\u554a!\u5b8c\u7f8e\u7684\u5229\u7528\u4e86\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u6027\u8d28!Orz\u51fa\u9898\u4eba!\n\n**Code:**\n\n\u5047\u5982\u601d\u8def\u6e05\u6670,\u90a3\u4e48\u4ee3\u7801\u5e76\u4e0d\u96be\u5199\u3002\n\n\u83ab\u540d\u5176\u5999\u8dd1\u5230\u4e86$rk1$?\u4e0d\u8fc7\u5e94\u8be5\u5f88\u5feb\u5c31\u4f1a\u88ab\u8d85\u8fc7\u53bb\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#define MaxN 300500\n#define mod 998244353\n#define ll long long\nusing namespace std;\ninline int read()\n{\n  register int X=0;\n  register char ch=0;\n  while(ch<48||ch>57)ch=getchar();\n  while(ch>=48&&ch<=57)X=X*10+(ch^48),ch=getchar();\n  return X;\n}\nll powM(ll a,ll t=mod-2)\n{\n  ll ans=1;\n  while(t){\n  \tif(t&1)ans=ans*a%mod;\n  \ta=a*a%mod;\n  \tt>>=1;\n  }return ans;\n}\nconst ll inv10=powM(10000);\nint n,xx[MaxN],tot;\nstruct TreeNode\n{int l,r,x;}b[MaxN];\nstruct Node\n{\n  int l,r;ll x,tag;\n  inline void ladd(ll c)\n  {tag=tag*c%mod;x=x*c%mod;}\n}a[MaxN<<6];\nint tn;\ninline int create()\n{a[++tn].tag=1;return tn;}\ninline void up(int num)\n{a[num].x=(a[a[num].l].x+a[a[num].r].x)%mod;}\nint to;\nvoid change(int l,int r,int &num)\n{\n  a[num=create()].x=1;\n  if (l==r)return ;\n  int mid=(l+r)>>1;\n  if (to<=mid)change(l,mid,a[num].l);\n  else change(mid+1,r,a[num].r);\n}\ninline void ladd(int num)\n{\n  if (a[num].tag==1)return ;\n  if (a[num].l)a[a[num].l].ladd(a[num].tag);\n  if (a[num].r)a[a[num].r].ladd(a[num].tag);\n  a[num].tag=1;\n}\nlong long lc,rc;\nint marge(int x,int y,ll xl,ll xr,ll yl,ll yr)\n{\n  if (!x&&!y)return 0;\n  if (x&&y){\n    ladd(x);ladd(y);\n    ll sav1=a[a[x].l].x,sav2=a[a[y].l].x;\n    a[x].l=marge(a[x].l,a[y].l,xl,xr+a[a[x].r].x,yl,yr+a[a[y].r].x);\n    a[x].r=marge(a[x].r,a[y].r,xl+sav1,xr,yl+sav2,yr);\n    up(x);\n  }else {\n    if (!x){swap(x,y);yl=xl;yr=xr;}\n    yr%=mod;yl%=mod;\n    a[x].ladd((lc*yr+rc*yl)%mod);\n  }return x;\n}\nint rt[MaxN];\nvoid dfs(int num)\n{\n  if (!b[num].l){\n    to=b[num].x;\n    change(1,tot,rt[num]);\n  }else if (!b[num].r){\n    dfs(b[num].l);\n    rt[num]=rt[b[num].l];\n  }else {\n    dfs(b[num].l);dfs(b[num].r);\n    lc=mod+1-b[num].x;rc=b[num].x;\n    rt[num]=marge(rt[b[num].l],rt[b[num].r],0,0,0,0);\n  }\n}\nll ans;\nvoid getans(int l,int r,int num)\n{\n  ladd(num);\n  if (l==r){\n    ans=(ans+1ll*l*xx[l]%mod*a[num].x%mod*a[num].x)%mod;\n    return ;\n  }int mid=(l+r)>>1;\n  getans(l,mid,a[num].l);\n  getans(mid+1,r,a[num].r);\n}\nint main()\n{\n  n=read();\n  for (int i=1,fa;i<=n;i++){\n    fa=read();\n    if (b[fa].l)b[fa].r=i;\n    else b[fa].l=i;\n  }for (int i=1;i<=n;i++){\n    b[i].x=read();\n    if (!b[i].l)xx[++tot]=b[i].x;\n    else b[i].x=b[i].x*inv10%mod;\n  }sort(xx+1,xx+tot+1);\n  for (int i=1;i<=n;i++)\n    if (!b[i].l)\n      b[i].x=lower_bound(xx+1,xx+tot+1,b[i].x)-xx;\n  dfs(1);\n  getans(1,tot,rt[1]);\n  printf(\"%lld\",ans);\n  return 0;\n}\n```",
        "postTime": 1564375152,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5298 \u3010[PKUWC2018]Minimax\u3011"
    },
    {
        "content": "[\u5728\u535a\u5ba2\u67e5\u770b](https://www.cnblogs.com/chenxiaoran666/p/Luogu5298.html)\n\n**\u5927\u81f4\u9898\u610f\uff1a** \u6709\u4e00\u68f5\u6811\uff0c\u7ed9\u51fa\u6bcf\u4e2a\u53f6\u8282\u70b9\u7684\u70b9\u6743\uff08\u4e92\u4e0d\u76f8\u540c\uff09\uff0c\u975e\u53f6\u8282\u70b9$x$\u81f3\u591a\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u4e14\u5176\u70b9\u6743\u6709$p_x$\u7684\u6982\u7387\u662f\u5b50\u8282\u70b9\u70b9\u6743\u8f83\u5927\u503c\uff0c\u6709$1-p_x$\u7684\u6982\u7387\u662f\u5b50\u8282\u70b9\u70b9\u6743\u8f83\u5c0f\u503c\u3002\u5047\u8bbe\u6839\u8282\u70b9$1$\u53f7\u8282\u70b9\u7684\u70b9\u6743\u6709$m$\u79cd\u53ef\u80fd\u6027\uff0c\u5176\u4e2d\u6743\u503c\u7b2c$i$\u5c0f\u7684\u53ef\u80fd\u70b9\u6743\u662f$V_i$\uff0c\u53ef\u80fd\u6027\u4e3a$D_i$\uff0c\u6c42$\\sum_{i=1}^mi\\cdot V_i\\cdot D_i^2$\u3002\n\n### \u524d\u8a00\n\n\u597d\u5999\u7684\u9898\u76ee\uff0c\u50cf\u6211\u8fd9\u79cd\u849f\u84bb\u6839\u672c\u60f3\u4e0d\u5230\u7ebf\u6bb5\u6811\u5408\u5e76\u8fd8\u53ef\u4ee5\u8fd9\u4e48\u73a9\u3002\n\n\u540c\u65f6\uff0c\u5728\u65e0\u6570\u4e2a\u5730\u65b9\u6f0f\u6389$PushDown$\u7684\u6211\u611f\u89c9\u81ea\u5df1\u771f\u662f\u5f31\u5230\u8fde\u7ebf\u6bb5\u6811\u90fd\u4e0d\u4f1a\u4e86......\n\n### \u9898\u610f\u8f6c\u5316\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u4fdd\u8bc1$0<p_x<1$\uff0c\u6240\u4ee5\u6bcf\u79cd\u70b9\u6743\u90fd\u53ef\u80fd\u88ab\u53d6\u5230\u3002\n\n\u5982\u679c\u6211\u4eec\u5c06\u70b9\u6743\u6392\u4e2a\u5e8f\uff0c\u90a3\u4e48$i$\u548c$V_i$\u90fd\u662f\u663e\u7136\u7684\uff0c\u53ea\u8981\u60f3\u4e2a\u529e\u6cd5\u6c42\u51fa$D_i$\u5373\u53ef\u3002\n\n### \u63a8\u5f0f\u5b50\n\n\u9996\u5148\uff0c\u6211\u4eec\u628a\u6743\u503c\u79bb\u6563\u5316\u3002\n\n\u8bbe$f_{x,i}$\u8868\u793a\u8282\u70b9$x$\u7684\u6743\u503c\u4e3a$i$\u7684\u6982\u7387\uff0c\u5219$D_i=f_{1,i}$\u3002\n\n\u8003\u8651\u5982\u4f55\u8f6c\u79fb\u3002\n\n\u5982\u679c$x$\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u8bbe\u5176\u7ed9\u5b9a\u6743\u503c\u4e3a$v$\uff0c\u90a3\u4e48$f_{x,i}=[i=v]$\u3002\n\n\u5982\u679c$x$\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u8bbe\u5176\u4e3a$son$\uff0c\u90a3\u4e48$f_{x,i}=f_{son,i}$\u3002\n\n\u5982\u679c$x$\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u5206\u522b\u4e3a$lc$\u548c$rc$\u3002\n\n\u9898\u76ee\u544a\u8bc9\u6211\u4eec\uff0c\u6743\u503c\u662f\u4e92\u4e0d\u76f8\u540c\u7684\u3002\n\n\u5219\u5bf9\u4e8e\u4e00\u4e2a\u6743\u503c$i$\uff0c\u82e5\u5176\u6ee1\u8db3$f_{lc,i}>0$\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u6743\u503c\u5728\u5de6\u5b50\u6811\u4e2d\u3002\n\n\u4e0b\u9762\u4fbf\u4ee5\u5728\u5de6\u5b50\u6811\u4e2d\u7684\u6743\u503c$i$\u4e3a\u4f8b\uff0c\u8bb2\u8bb2$f_{x,i}$\u5982\u4f55\u8f6c\u79fb\uff0c\u800c\u5728\u53f3\u5b50\u6811\u4e2d\u662f\u540c\u7406\u7684\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u6709$p_x$\u7684\u6982\u7387\uff0c$x$\u7684\u6743\u503c\u53d6\u8f83\u5927\u503c\uff0c\u5219\u6b64\u65f6$i$\u5e94\u5927\u4e8e\u53f3\u513f\u5b50\u7684\u6743\u503c\uff0c\u5373\u6982\u7387\u4e3a$p_x(\\sum_{k=1}^{i-1}f_{rc,k})$\u3002\n\n\u540c\u7406\uff0c\u6709$(1-p_x)$\u7684\u6982\u7387\uff0c$x$\u7684\u6743\u503c\u53d6\u8f83\u5c0f\u503c\uff0c\u5219\u6b64\u65f6$i$\u5e94\u5c0f\u4e8e\u53f3\u513f\u5b50\u7684\u6743\u503c\uff0c\u5373\u6982\u7387\u4e3a$(1-p_x)(\\sum_{k=i+1}^mf_{rc,k})$\u3002\n\n\u800c\u8fd9\u4e2a\u6982\u7387\u5b9e\u9645\u4e0a\u8fd8\u8981\u4e58\u4e0a$f_{lc,i}$\uff0c\u6240\u4ee5\uff1a\n\n$$f_{x,i}=f_{lc,i}\\cdot(p_x(\\sum_{k=1}^{i-1}f_{rc,k})+(1-p_x)(\\sum_{k={i+1}}^mf_{rc,k}))$$\n\n### \u7ebf\u6bb5\u6811\u5408\u5e76\n\n\u4ed4\u7ec6\u89c2\u5bdf\u4e0a\u9762\u7684\u5f0f\u5b50\uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c$\\sum_{k=1}^{i-1}f_{rc,k}$\u548c$\\sum_{k={i+1}}^mf_{rc,k}$\u5206\u522b\u662f\u524d\u7f00\u548c\u4e0e\u540e\u7f00\u548c\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u80fd\u591f\u7ef4\u62a4\u6570\u7ec4\u4e4b\u95f4\u7684\u8f6c\u79fb\uff0c\u8fd8\u5728\u524d\u7f00\u548c\u4e0e\u540e\u7f00\u548c\u7684\u7ef4\u62a4\u65b9\u9762\u6709\u4f18\u52bf\uff0c\u4e8e\u662f\u4e0d\u96be\u60f3\u5230\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002\n\n\u800c\u8fd9\u4e2a\u8f6c\u79fb\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6765\u5b9e\u73b0\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\n\n\u5c31\u662f\u5728\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u7ef4\u62a4\u4e0b$f_{lc}$\u548c$f_{rc}$\u7684\u524d\u7f00\u548c\u4e0e\u540e\u7f00\u548c\uff0c\u8fd9\u6837\u5c31\u80fd\u5f88\u65b9\u4fbf\u5730\u8fdb\u884c\u8f6c\u79fb\u4e86\u3002\n\n\u5f53\u9047\u5230\u67d0\u4e00\u4e2a\u8282\u70b9\uff0c\u5728\u4e00\u68f5\u6811\u4e2d\u4e3a\u7a7a\uff0c\u4e00\u68f5\u6811\u4e2d\u975e\u7a7a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u501f\u52a9\u7ef4\u62a4\u4e0b\u7684\u524d\u7f00\u548c\u4e0e\u540e\u7f00\u548c\uff0c\u6253\u4e00\u4e2a\u4e58\u6cd5\u6807\u8bb0\uff0c\u4fbf\u53ef\u5b8c\u6210\u8f6c\u79fb\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u8be6\u89c1\u4ee3\u7801\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define Reg register\n#define RI Reg int\n#define Con const\n#define CI Con int&\n#define I inline\n#define W while\n#define N 300000\n#define LN 20\n#define X 998244353\n#define add(x,y) (e[++ee].nxt=lnk[x],e[lnk[x]=ee].to=y)\nusing namespace std;\nint n,ee,dc,a[N+5],dv[N+5],Rt[N+5],lnk[N+5];struct edge {int to,nxt;}e[N+5];\nI int Qpow(RI x,RI y) {RI t=1;W(y) y&1&&(t=1LL*t*x%X),x=1LL*x*x%X,y>>=1;return t;}\nclass FastIO\n{\n\tprivate:\n\t\t#define FS 100000\n\t\t#define tc() (A==B&&(B=(A=FI)+fread(FI,1,FS,stdin),A==B)?EOF:*A++)\n\t\t#define tn (x<<3)+(x<<1)\n\t\t#define D isdigit(c=tc())\n\t\tchar c,*A,*B,FI[FS];\n\tpublic:\n\t\tI FastIO() {A=B=FI;}\n\t\tTp I void read(Ty& x) {x=0;W(!D);W(x=tn+(c&15),D);}\n}F;\ntemplate<int PS> class SegmentTree//\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\n{\n\tprivate:\n\t\t#define PD(x) F[x]^1&&\\\n\t\t(\\\n\t\t\tV[S[x][0]]=1LL*V[S[x][0]]*F[x]%X,F[S[x][0]]=1LL*F[S[x][0]]*F[x]%X,\\\n\t\t\tV[S[x][1]]=1LL*V[S[x][1]]*F[x]%X,F[S[x][1]]=1LL*F[S[x][1]]*F[x]%X,F[x]=1\\\n\t\t)\n\t\tint Nt,V[PS+5],F[PS+5],S[PS+5][2];\n\tpublic:\n\t\tI void Ins(int& rt,CI x,CI l=1,CI r=dc)//\u63d2\u5165\n\t\t{\n\t\t\tif(rt=++Nt,V[rt]=F[rt]=1,l==r) return;int mid=l+r>>1;\n\t\t\tx<=mid?Ins(S[rt][0],x,l,mid):Ins(S[rt][1],x,mid+1,r);\n\t\t}\n\t\tI int Qry(CI rt,CI x,CI l=1,CI r=dc)//\u8be2\u95ee\n\t\t{\n\t\t\tif(l==r) return V[rt];int mid=l+r>>1;PD(rt);\n\t\t\treturn x<=mid?Qry(S[rt][0],x,l,mid):Qry(S[rt][1],x,mid+1,r);\n\t\t}\n\t\tI int Merge(CI x,CI y,CI p,CI l=1,CI r=dc,CI lx=0,CI rx=0,CI ly=0,CI ry=0)//\u7ebf\u6bb5\u6811\u5408\u5e76\n\t\t{\n\t\t\tif(!x&&!y) return 0;RI rt=++Nt;//\u7686\u4e3a\u7a7a\u76f4\u63a5\u8fd4\u56de\n\t\t\tif(!y) return PD(x),F[rt]=(1LL*p*ly+1LL*(1-p+X)*ry)%X,//\u4fee\u6539\uff0c\u6ce8\u610f\u4fee\u6539\u524d\u4e0b\u4f20\u6807\u8bb0\n\t\t\t\tV[rt]=1LL*F[rt]*V[x]%X,S[rt][0]=S[x][0],S[rt][1]=S[x][1],rt;//\u62f7\u8d1d\u4fe1\u606f\n\t\t\tif(!x) return PD(y),F[rt]=(1LL*p*lx+1LL*(1-p+X)*rx)%X,//\u4fee\u6539\uff0c\u6ce8\u610f\u4fee\u6539\u524d\u4e0b\u4f20\u6807\u8bb0\n\t\t\t\tV[rt]=1LL*F[rt]*V[y]%X,S[rt][0]=S[y][0],S[rt][1]=S[y][1],rt;//\u62f7\u8d1d\u4fe1\u606f\n\t\t\tint mid=l+r>>1;PD(x),PD(y),F[rt]=1,//\u5148\u4e0b\u4f20\u6807\u8bb0\n\t\t\tS[rt][0]=Merge(S[x][0],S[y][0],p,l,mid,lx,(rx+V[S[x][1]])%X,ly,(ry+V[S[y][1]])%X),//\u9012\u5f52\u5904\u7406\u5de6\u5b50\u6811\n\t\t\tS[rt][1]=Merge(S[x][1],S[y][1],p,mid+1,r,(lx+V[S[x][0]])%X,rx,(ly+V[S[y][0]])%X,ry);//\u9012\u5f52\u5904\u7406\u53f3\u5b50\u6811\n\t\t\treturn V[rt]=(V[S[rt][0]]+V[S[rt][1]])%X,rt;//\u6ce8\u610f\u4e0a\u4f20\u4fe1\u606f\n\t\t}\n};SegmentTree<N*LN<<1> S;\nI void dfs(CI x)\n{\n\tif(!lnk[x]) return S.Ins(Rt[x],lower_bound(dv+1,dv+dc+1,a[x])-dv);//\u5904\u7406\u53f6\u8282\u70b9\uff0c\u6ce8\u610f\u79bb\u6563\u5316\n\tfor(RI i=lnk[x];i;i=e[i].nxt) dfs(e[i].to),//\u5148\u5904\u7406\u5b50\u8282\u70b9\n\t\tRt[x]=Rt[x]?S.Merge(Rt[x],Rt[e[i].to],a[x]):Rt[e[i].to];//\u5408\u5e76\u5b50\u8282\u70b9\n}\nint main()\n{\n\tRI i,x,ans;for(F.read(n),i=1;i<=n;++i) F.read(x),x&&add(x,i);\n\tfor(i=1;i<=n;++i) F.read(a[i]),lnk[i]?(a[i]=1LL*a[i]*Qpow(10000,X-2)%X):(dv[++dc]=a[i]);\n\tsort(dv+1,dv+dc+1),dfs(1);//\u6392\u5e8f\n\tfor(ans=0,i=1;i<=dc;++i) x=S.Qry(Rt[1],i),ans=(1LL*i*dv[i]%X*x%X*x+ans)%X;//\u7edf\u8ba1\u7b54\u6848\n\treturn printf(\"%d\",ans),0;\n}\n```",
        "postTime": 1576725144,
        "uid": 28382,
        "name": "TheLostWeak",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5298 \u3010[PKUWC2018]Minimax\u3011"
    },
    {
        "content": "\u7531\u4e8e\u6982\u7387\u4e0d\u4e3a0\u4e14\u4e0d\u4e3a1\uff0c\u6240\u4ee5\u6240\u6709\u70b9\u6743\u90fd\u53ef\u80fd\u53d6\u5230\u3002\n\n\u8bbe$f_i,g_i$\u5206\u522b\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50\u3001\u53f3\u513f\u5b50\u70b9\u6743\u4e3a$i$\u7684\u6982\u7387\u3002\n\n\u82e5$i$\u5728\u5de6\u513f\u5b50\u4e2d\uff0c\u5219\u5f53\u524d\u8282\u70b9\u53d6\u5230$i$\u7684\u6982\u7387\u4e3a\uff1a\n\n$$f_i\\times(p\\times(\\sum_{j=1}^i g_j)+(1-p)\\times(\\sum_{j=i+1}^m g_j))$$\n\n\u53f3\u513f\u5b50\u540c\u7406\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u5408\u5e76\u5230\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019\u663e\u7136\u53ea\u4f1a\u6709\u4e00\u4e2a\u70b9\u6709\u503c\u3002\n\n\u8fb9\u5411\u4e0b\u4f20\u9012\uff0c\u8fb9\u7ef4\u62a4\u5de6\u513f\u5b50\u7684\u524d\u7f00\u3001\u540e\u7f00\uff0c\u53f3\u513f\u5b50\u7684\u524d\u7f00\u3001\u540e\u7f00\u6982\u7387\u548c\uff0c\u7136\u540e\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u7c7b\u4f3c\u8f6c\u79fb\u5373\u53ef\uff08\u6b64\u65f6\u53ef\u80fd\u8f6c\u79fb\u5230\u7684\u662f\u4e00\u4e2a\u533a\u95f4\u7684\u503c\uff09\u3002\n\n\u7ebf\u6bb5\u6811\u4e0a\u6253\u4e58\u6cd5\u6807\u8bb0\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\u7531\u4e8e\u5408\u5e76\u65f6\u9700\u8981\u52a8\u6001\u5f00\u70b9\uff08\u5426\u5219\u524d\u7f00\u3001\u540e\u7f00\u548c\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff09\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f$O(n\\log n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<vector>\ntypedef long long LL;\nconst int md=998244353,N=3e5+5,iv1e4=796898467;\nstruct edge{\n    int to,nxt;\n}e[N];\nint n,fa[N],head[N],cnt,p[N],rt[N];\nstd::vector<int>vec;\nint ls[N<<6],rs[N<<6],g[N<<6],tag[N<<6],nd,ans;\ninline void upd(int&a){a+=a>>31&md;}\ninline int mod(int a){return(a>>31&md)+a;}\nvoid pushdown(int o){\n    if(tag[o]!=1){\n        if(ls[o])\n            tag[ls[o]]=(LL)tag[ls[o]]*tag[o]%md,g[ls[o]]=(LL)g[ls[o]]*tag[o]%md;\n        if(rs[o])\n            tag[rs[o]]=(LL)tag[rs[o]]*tag[o]%md,g[rs[o]]=(LL)g[rs[o]]*tag[o]%md;\n        tag[o]=1;\n    }\n}\nvoid add(int&o,int l,int r,const int&pos){\n    if(!o)o=++nd,tag[o]=1;\n    upd(g[o]+=1-md);\n    if(l<r){\n        const int mid=l+r>>1;\n        if(pos<=mid)add(ls[o],l,mid,pos);else add(rs[o],mid+1,r,pos);\n    }\n}\nint merge(int ld,int rd,int pl,int pr,int sl,int sr,const int&P){\n    if(!ld&&!rd)return 0;\n    pushdown(ld),pushdown(rd);\n    int o=++nd;tag[o]=1;\n    if(!ld){\n        g[o]=((LL)P*pl+(md+1LL-P)*sl)%md*g[rd]%md;\n        tag[o]=((LL)P*pl+(md+1LL-P)*sl)%md*tag[rd]%md;\n        ls[o]=ls[rd],rs[o]=rs[rd];\n        return o;\n    }\n    if(!rd){\n        g[o]=((LL)P*pr+(md+1LL-P)*sr)%md*g[ld]%md;\n        tag[o]=((LL)P*pr+(md+1LL-P)*sr)%md*tag[ld]%md;\n        ls[o]=ls[ld],rs[o]=rs[ld];\n        return o;\n    }\n    ls[o]=merge(ls[ld],ls[rd],pl,pr,mod(sl+g[rs[ld]]-md),mod(sr+g[rs[rd]]-md),P);\n    rs[o]=merge(rs[ld],rs[rd],mod(pl+g[ls[ld]]-md),mod(pr+g[ls[rd]]-md),sl,sr,P);\n    upd(g[o]=g[ls[o]]+g[rs[o]]-md);\n    return o;\n}\nvoid dfs(int now){\n    if(head[now])\n        for(int i=head[now];i;i=e[i].nxt){\n            dfs(e[i].to);\n            if(!rt[now])rt[now]=rt[e[i].to];else\n                rt[now]=merge(rt[now],rt[e[i].to],0,0,0,0,p[now]);\n        }\n    else\n        add(rt[now],1,n,p[now]);\n}\nvoid getans(int o,int l,int r){\n    if(!o)return;\n    if(l==r){\n        ans=(ans+(LL)l*vec[l]%md*g[o]%md*g[o])%md;\n        return;\n    }\n    pushdown(o);\n    const int mid=l+r>>1;\n    getans(ls[o],l,mid),getans(rs[o],mid+1,r);\n}\nint main(){\n    std::ios::sync_with_stdio(0),std::cin.tie(0);\n    std::cin>>n;\n    for(int i=1;i<=n;++i)\n        std::cin>>fa[i],e[++cnt]=(edge){i,head[fa[i]]},head[fa[i]]=cnt;\n    for(int i=1;i<=n;++i){\n        std::cin>>p[i];\n        if(head[i])p[i]=(LL)p[i]*iv1e4%md;else vec.push_back(p[i]);\n    }\n    vec.push_back(0);\n    std::sort(vec.begin(),vec.end());\n    vec.erase(std::unique(vec.begin(),vec.end()),vec.end());\n    for(int i=1;i<=n;++i)if(!head[i])p[i]=std::lower_bound(vec.begin(),vec.end(),p[i])-vec.begin();\n    dfs(1);\n    getans(rt[1],1,n);\n    std::cout<<ans<<std::endl;\n    return 0;\n}\n\n```",
        "postTime": 1555150399,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5298 \u3010[PKUWC2018]Minimax\u3011"
    },
    {
        "content": "\u9996\u5148\u53d1\u73b0\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u6743\u503c\u90fd\u6709\u53ef\u80fd\u6210\u4e3a\u6700\u7ec8\u6839\u8282\u70b9\u7684\u6743\u503c\uff0c\u89c2\u5bdf\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u5f0f\u5b50\uff1a\n\n$$\n\t\\sum_{i=1}^m i V_i D_i^2\n$$\n\n\u53d1\u73b0\u53ea\u8981\u7b97\u51fa\u6bcf\u4e2a\u6743\u503c\u88ab\u6839\u8282\u70b9\u53d6\u5230\u7684\u6982\u7387 $D_i$\uff0c\u7136\u540e\u5c31\u80fd\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u8bbe $f_{x,i}$ \u4e3a\u8282\u70b9 $x$ \u53d6\u5230\u7b2c $i$ \u5c0f\u6743\u503c\u7684\u6982\u7387\uff0c\u6839\u636e\u662f\u4ece\u5de6\u513f\u5b50\u8fd8\u662f\u4ece\u53f3\u513f\u5b50\u53d6\u5230\u7684\u6743\u503c\u6765\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n$$\nf_{x,i} = f_{ls,i}(p_x \\sum_{j=1}^{i-1}f_{rs,j}+(1-p_x) \\sum_{j=i+1}^m f_{rs,j}) + f_{rs,i}(p_x \\sum_{j=1}^{i-1}f_{ls,j}+(1-p_x) \\sum_{j=i+1}^m f_{ls,j})\n$$\n\n\u76f4\u63a5\u8fdb\u884c\u8f6c\u79fb\u7684\u8bdd\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u90fd\u65e0\u6cd5\u63a5\u53d7\uff0c\u7531\u672c\u9898\u4e3a\u6811\u5f62 $DP$ \u548c\u8f6c\u79fb\u65b9\u7a0b\u7684\u7279\u70b9\u5f97\uff0c\u53ef\u4ee5\u901a\u8fc7\u6574\u4f53 $DP$ \u6765\u4f18\u5316\u3002\n\n\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u7b2c\u4e8c\u7ef4\uff0c\u901a\u8fc7\u7ebf\u6bb5\u6811\u5408\u5e76\u5b9e\u73b0\u4ece\u5de6\u53f3\u513f\u5b50\u8f6c\u79fb\u3002\u5f53\u4e00\u4e2a\u8282\u70b9\u6ca1\u6709\u513f\u5b50\u65f6\u5c31\u76f4\u63a5\u8d4b\u521d\u503c\uff0c\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u5c31\u76f4\u63a5\u8f6c\u79fb\u3002\u7ebf\u6bb5\u6811\u5408\u5e76\u65f6\u8bb0\u5f55\u524d\u7f00\u548c\u548c\u540e\u7f00\u548c\uff0c\u6765\u8ba1\u7b97\u5de6\u53f3\u533a\u95f4\u4e92\u76f8\u7684\u8d21\u732e\uff0c\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u4e58\uff0c\u6253\u6807\u8bb0\u5373\u53ef\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 600010\n#define maxm 10000010\n#define p 998244353\n#define inv 796898467\n#define mid ((l+r)>>1)\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,tot,cnt;\nll ans;\nint ch[maxn][2],rt[maxn],ls[maxm],rs[maxm];\nll val[maxn],s[maxn],d[maxn],sum[maxm],tag[maxm];\nvoid pushtag(int x,ll v)\n{\n    sum[x]=sum[x]*v%p,tag[x]=tag[x]*v%p;\n}\nvoid pushdown(int x)\n{\n    if(tag[x]==1) return;\n    pushtag(ls[x],tag[x]),pushtag(rs[x],tag[x]),tag[x]=1;\n}\nvoid insert(int l,int r,int pos,int &cur)\n{\n    if(!cur) cur=++tot,tag[cur]=1;\n    sum[cur]++;\n    if(l==r) return;\n    if(pos<=mid) insert(l,mid,pos,ls[cur]);\n    else insert(mid+1,r,pos,rs[cur]);\n}\nint merge(int x,int y,ll lx,ll rx,ll ly,ll ry,ll v)\n{\n    if(!x&&!y) return 0;\n    pushdown(x),pushdown(y);\n    if(x&&!y)\n    {\n        pushtag(x,(v*ly%p+(1-v+p)*ry%p)%p);\n        return x;\n    }\n    if(!x&&y)\n    {\n        pushtag(y,(v*lx%p+(1-v+p)*rx%p)%p);\n        return y;\n    }\n    ll px=sum[ls[x]],sx=sum[rs[x]],py=sum[ls[y]],sy=sum[rs[y]];\n    ls[x]=merge(ls[x],ls[y],lx,(rx+sx)%p,ly,(ry+sy)%p,v);\n    rs[x]=merge(rs[x],rs[y],(lx+px)%p,rx,(ly+py)%p,ry,v);\n    sum[x]=(sum[ls[x]]+sum[rs[x]])%p;\n    return x;\n}\nvoid solve(int x)\n{\n    if(!ch[x][0])\n    {\n        insert(1,cnt,val[x],rt[x]);\n        return;\n    }\n    if(!ch[x][1])\n    {\n        solve(ch[x][0]),rt[x]=rt[ch[x][0]];\n        return;\n    }\n    solve(ch[x][0]),solve(ch[x][1]);\n    rt[x]=merge(rt[ch[x][0]],rt[ch[x][1]],0,0,0,0,val[x]);\n}\nvoid dfs(int l,int r,int cur)\n{\n    if(l==r)\n    {\n        d[l]=sum[cur];\n        return;\n    }\n    pushdown(cur),dfs(l,mid,ls[cur]),dfs(mid+1,r,rs[cur]);\n}\nint main()\n{\n    read(n);\n    for(int i=1;i<=n;++i)\n    {\n        int fa;\n        read(fa);\n        if(ch[fa][0]) ch[fa][1]=i;\n        else ch[fa][0]=i;\n    }\n    for(int i=1;i<=n;++i)\n    {\n        read(val[i]);\n        if(ch[i][0]) val[i]=val[i]*inv%p;\n        else s[++cnt]=val[i];\n    }\n    sort(s+1,s+cnt+1);\n    for(int i=1;i<=n;++i)\n        if(!ch[i][0])\n            val[i]=lower_bound(s+1,s+cnt+1,val[i])-s;\n    solve(1),dfs(1,cnt,rt[1]);\n    for(int i=1;i<=cnt;++i)\n        ans=(ans+i*s[i]%p*d[i]%p*d[i]%p)%p;\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1595469795,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5298 \u3010[PKUWC2018]Minimax\u3011"
    },
    {
        "content": "### P.S.\n\u9ad8\u8d28\u91cf\u597d\u9898\u3002  \n### Discription.\n\u7ed9\u4f60\u4e00\u9897**\u4e8c\u53c9**\u6811\uff0c\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u6709\u4e00\u4e2a\u6743\u503c $V_i$\uff0c\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u6709\u4e00\u4e2a\u6982\u7387 $P_i$\u3002  \n\u73b0\u5728\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5b83\u6709 $P_i$ \u7684\u6982\u7387\u53d6\u5b83**\u513f\u5b50**\u7684\u6700\u5c0f\u503c\uff0c\u6709 $1-P_i$ \u7684\u6982\u7387\u53d6\u6700\u5927\u503c\u3002  \n\u73b0\u5728\u6c42\u6839\u8282\u70b9\u7684\u53d6\u6240\u6709\u503c\u7684\u6982\u7387\uff0c\u5e76\u628a\u5b83\u4eec\u6309\u7167\u9898\u76ee\u4e2d\u7684 Hash \u51fd\u6570 Hash \u8d77\u6765\u8f93\u51fa Hash \u503c\u3002  \n### Solution.\n\u9898\u76ee\u91cd\u70b9\u6216\u5bb9\u6613\u8bfb\u9519\u7684\uff08\u81f3\u5c11\u7b14\u8005\u8bfb\u9519\u4e86\uff09\u7684\u5730\u65b9\u5df2\u52a0\u7c97\u3002  \n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u6734\u7d20\u9012\u63a8\uff0c\u5047\u8bbe $F_{x,i}$ \u4e3a\u7b2c $x$ \u70b9\u53d6\u6743\u503c $i$ \u7684\u6982\u7387\u3002  \n\u90a3\u4e48\u56e0\u4e3a\u5b83\u662f\u68f5\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5206\u7c7b\u8ba8\u8bba\u3002  \n#### Case 1.\n\u5982\u679c\u5b83\u6ca1\u6709\u5b69\u5b50\u3002  \n\u5f88\u663e\u7136\uff0c\u90a3\u4e48\u53ea\u6709\u6743\u503c\u4e3a $V_x$ \u7684\u5730\u65b9\u6982\u7387\u4e3a $1$\uff0c\u5176\u4ed6\u5730\u65b9\u6982\u7387\u4e3a $0$\u3002  \n#### Case 2.\n\u5982\u679c\u5b83\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\u3002  \n\u4e5f\u5f88\u663e\u7136\uff0c\u90a3\u4e48\u5b83\u7684\u6743\u503c\u80af\u5b9a\u662f\u5b83\u5b69\u5b50\u7684\u6743\u503c\uff0c\u76f4\u63a5\u628a\u5b69\u5b50\u7684\u4fe1\u606f\u590d\u5236\u8fc7\u6765\u5c31\u597d\u4e86\u3002  \n#### Case 3.\n\u5982\u679c\u5b83\u6709\u4e24\u4e2a\u5b69\u5b50\uff0c\u5047\u8bbe\u4e24\u4e2a\u5b69\u5b50\u662f $a$ \u548c $b$\u3002  \n\u6211\u4eec\u8003\u8651\u5206\u7c7b\uff1a\u5f53\u524d\u8fd9\u4e2a\u6743\u503c\u662f\u4ece\u90a3\u4e2a\u5b69\u5b50\u8f6c\u79fb\u8fc7\u6765\u7684\u4ee5\u53ca\u662f\u88ab\u5f53\u4f5c\u6700\u5927\u503c\u8fd8\u662f\u6700\u5c0f\u503c\u8f6c\u79fb\u8fc7\u6765\u7684\u3002  \n1. From a & Max : $(1-P_x)\\times F_{a,i}\\times\\sum_{j=i+1}^{+\\infty}F_{b,j}$\n2. From b & Max : $(1-P_x)\\times F_{b,i}\\times\\sum_{j=i+1}^{+\\infty}F_{a,j}$\n3. From a & Min : $P\\times F_{a,i}\\times\\sum_{j=-\\infty}^{i-1}F_{b,j}$\n4. From b & Min : $P\\times F_{b,i}\\times\\sum_{j=-\\infty}^{i-1}F_{a,j}$\n\n\u522b\u770b\u90a3\u91cc\u6709\u4e00\u4e2a $\\infty$\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u9898\u7684\u64cd\u4f5c\u53ea\u4f1a\u53d6\u6700\u5c0f\u503c\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6700\u7ec8\u7684 $i$ \u80af\u5b9a\u53ea\u4f1a\u5728\u4e0d\u8d85\u8fc7 $\\max_{i=1}^n V_i$ \u7684\u8303\u56f4\u5185\u6709\u4f5c\u7528\u3002  \n***\n\u4f46\u662f\uff0c\u66b4\u529b\u8f6c\u79fb\u663e\u7136\u662f $O(n\\times \\max_{i=1}^nV_i)$ \u7684\uff0c\u79bb\u6563\u5316\u4e00\u4e0b\u540e\u8fd8\u662f $O(n^2)$ \u7684\u3002  \n\u56e0\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u7684\u74f6\u9888\u662f\u5728\u72b6\u6001\u6570\uff0c\u72b6\u6001\u6570\u91cf\u5c31\u662f $O(n^2)$ \u7684\u4e86\u3002  \n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u600e\u4e48\u4f18\u5316\u72b6\u6001\u6570\uff0c\u663e\u7136\u8fd9\u91cc\u6709\u5f88\u591a\u65e0\u7528\u7684\u72b6\u6001\uff08\u7a7a\u72b6\u6001\u3002  \n\n\u9047\u5230\u5206\u5e03\u5730\u65e0\u89c4\u5f8b\u7684\u7a7a\u72b6\u6001\uff0c\u6211\u4eec\u80af\u5b9a\u80fd\u60f3\u5230\u4e00\u4e2a\u4f18\u826f\u7684\u505a\u6cd5\u2014\u2014**\u7ebf\u6bb5\u6811\u5408\u5e76**\u3002  \n~~\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u5b8c\u7ed3\u6492\u82b1~~\n\n\u5728\u7ebf\u6bb5\u6811\u5408\u5e76\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u90fd\u9700\u8981\u8003\u8651\u5206\u522b\u9012\u5f52\u5408\u5e76\u5de6\u533a\u95f4\u548c\u53f3\u533a\u95f4\u3002  \n\u6b64\u65f6\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6309\u7167\u4e0a\u9762 4 \u7c7b\u5206\u7c7b\u8ba8\u8bba\u5206\u522b\u8ba1\u7b97\u5de6\u533a\u95f4\u5bf9\u53f3\u533a\u95f4\u3001\u53f3\u533a\u95f4\u5bf9\u5de6\u533a\u95f4\u7684\u8d21\u732e\u3002  \n\u7136\u540e\u6211\u4eec\u4f1a\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u8d21\u732e\u662f\u4ee5\u500d\u6570\u5f62\u5f0f\u589e\u52a0\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u4e58\u79ef\u64cd\u4f5c\u3002  \n\u7136\u540e\u8fd9\u9898\u5c31\u771f\u505a\u5b8c\u4e86\uff0c\u6ce8\u610f\u7ed9 $V_i$ \u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u6bd5\u7adf\u503c\u57df\u8fd9\u4e48\u5927\u3002  \n~~\u4e0d\u8fc7\u4e0d\u79bb\u6563\u5316\u4e5f\u80fd\u505a\uff1f\u6bd5\u7adf\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u53ea\u662f\u590d\u6742\u5ea6\u4ece logn \u53d8\u6210\u4e86 log\u503c\u57df\u4e86qwq~~\n### Coding.\n\u5728\u8fd9\u91cc\u7ed9\u51fa\u7b14\u8005\u8ba4\u4e3a\u6700\u91cd\u8981\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u64cd\u4f5c\u7684\u4ee3\u7801\uff0c\u5176\u4ed6\u5c31\u4e0d\u7ed9\u4e86\uff08\n```cpp\ninline int Mrg(int x,int y,int a,int b,int p)\n{\n\tif(!x) return allc(y,b),y;else if(!y) return allc(x,a),x;else down(x),down(y);\n\tint sxl=t[t[x].ls].sm,sxr=t[t[x].rs].sm,syl=t[t[y].ls].sm,syr=t[t[y].rs].sm,p1=p,p2=(1+P-p)%P;\n\tt[x].ls=Mrg(t[x].ls,t[y].ls,(a+1ll*p2*syr%P)%P,(b+1ll*p2*sxr%P)%P,p);\n\tt[x].rs=Mrg(t[x].rs,t[y].rs,(a+1ll*p1*syl%P)%P,(b+1ll*p1*sxl%P)%P,p);\n\treturn up(x),x;\n}\n```",
        "postTime": 1605698917,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P5298 [PKUWC2018]Minimax\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u8fd9\u7c7b\u7ebf\u6bb5\u6811\u5408\u5e76\u4f18\u5316\u6811\u5f62 DP \u7684\u9898\u4e00\u822c\u90fd\u662f\u5148\u8003\u8651\u4e00\u4e2a $O(n^2)$ \u7684 DP\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5176\u5b50\u6811\u5185\u6240\u6709\u7684\u6743\u503c\u90fd\u53ef\u4ee5\u53d6\u5230\u3002\n\n\u6545\u8bbe $f_{i,j}$ \u4e3a $i$ \u7684\u6743\u503c\u53d6\u5230\u6240\u6709\u53f6\u5b50\u4e2d\u7b2c $j$ \u5c0f\u7684\u6743\u503c\u3002\n\n\u8bbe $l$ \u4e3a $u$ \u7684\u5de6\u5b50\uff0c$r$ \u4e3a $u$ \u7684\u53f3\u5b50\uff0c\u5219\u6709\u5982\u4e0b\u8f6c\u79fb\uff1a\n\n$$f_{u,i}=p_u\\left(f_{l,i}\\cdot\\sum_{j=1}^{i-1}f_{r,j}+f_{r,i}\\cdot\\sum_{j=1}^{i-1}f_{l,j}\\right)+(1-p_u)\\left(f_{l,i}\\cdot\\sum_{j=i+1}^{n}f_{r,j}+f_{r,i}\\cdot\\sum_{j=i+1}^{n}f_{l,j}\\right)$$\n\n\u521d\u59cb\u72b6\u6001\u5c31\u662f\u53f6\u5b50\u53d6\u5230\u81ea\u5df1\u7684\u6982\u7387\u4e3a $1$\u3002\n\n\u524d\u7f00\u548c\u4f18\u5316\u53ef\u4ee5\u505a\u5230 $O(n^2)$\u3002\n\n\u7531\u4e8e\u53f6\u5b50\u4e0a\u53ea\u6709 $1$ \u4e2a\u72b6\u6001\uff0c\u6240\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u5728\u5408\u5e76\u5230\u7a7a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e00\u6bb5\u7684\u6240\u6709\u72b6\u6001\u90fd\u662f $0$\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u5728 $\\operatorname{merge}(l,r)$ \u8fc7\u7a0b\u4e2d\u4fdd\u5b58 $[1,l-1]$ \u548c $[r+1,n]$ \u7684\u4e24\u4e2a\u548c\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86~\n\n\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $O(n\\log n)$\u3002\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nconst int N = 300005;\nconst long long mod = 998244353;\nstruct Edge {\n\tint to, nxt;\n\tEdge() {\n\t\tnxt = -1;\n\t}\n};\nint n, hd[N], pnt, bcnt, scnt[N];\nlong long p[N], b[N];\nEdge e[N << 1];\n\ninline long long Add(long long x, long long y) {return (x + y >= mod ? x + y - mod : x + y);}\ninline long long Subt(long long x, long long y) {return (x < y ? x - y + mod : x - y);}\n\ninline long long Power(long long x, long long y) {\n\tlong long ans = 1;\n\twhile (y) {\n\t\tif (y & 1) ans = ans * x % mod;\n\t\tx = x * x % mod;\n\t\ty >>= 1;\n\t}\n\treturn ans;\n}\n\n#define Sum(p) (p ? p->sum : 0)\nstruct Node {\n\tlong long sum, mul;\n\tNode *l, *r;\n\tNode() {\n\t\tl = r = NULL;\n\t\tsum = 0;\n\t\tmul = 1;\n\t}\n\tinline void Update() {\n\t\tsum = Add(Sum(l), Sum(r));\n\t}\n};\nNode nd[N * 40];\nint top;\nstruct Segtree {\n\tNode *_root[N];\n\tinline void Pushdown(Node *p, int pl, int pr) {\n\t\tif (p->l) {\n\t\t\tp->l->sum = p->l->sum * p->mul % mod;\n\t\t\tp->l->mul = p->l->mul * p->mul % mod;\n\t\t}\n\t\tif (p->r) {\n\t\t\tp->r->sum = p->r->sum * p->mul % mod;\n\t\t\tp->r->mul = p->r->mul * p->mul % mod;\n\t\t}\n\t\tp->mul = 1;\n\t}\n\tinline void Modify(Node *&p, int pl, int pr, int idx, int v) {\n\t\tif (!p) p = &nd[++top];\n\t\tif (pl == idx && pr == idx) {\n\t\t\tp->sum = v;\n\t\t\treturn;\n\t\t}\n\t\tPushdown(p, pl, pr);\n\t\tint mid = pl + pr >> 1;\n\t\tif (idx <= mid) Modify(p->l, pl, mid, idx, v);\n\t\telse Modify(p->r, mid + 1, pr, idx, v);\n\t\tp->Update();\n\t}\n\tinline long long Query(Node *p, int pl, int pr, int l, int r) {\n\t\tif (!p) return 0;\n\t\tif (pl == l && pr == r) return Sum(p);\n\t\tPushdown(p, pl, pr);\n\t\tint mid = pl + pr >> 1;\n\t\tif (mid >= r) return Query(p->l, pl, mid, l, r);\n\t\telse if (mid + 1 <= l) return Query(p->r, mid + 1, pr, l, r);\n\t\telse return Add(Query(p->l, pl, mid, l, mid), Query(p->r, mid + 1, pr, mid + 1, r));\n\t}\n\tinline Node* Merge(Node *p1, Node *p2, int pl, int pr, long long pu, long long ps1, long long ss1, long long ps2, long long ss2) {\n\t\tlong long lmul = Add(pu * ps2 % mod, Subt(1, pu) * ss2 % mod);\n\t\tlong long rmul = Add(pu * ps1 % mod, Subt(1, pu) * ss1 % mod);\n\t\tif (!p1 && !p2) return NULL;\n\t\tif (!p2) {\n\t\t\t//printf(\"p1 %d %d %lld\\n\", pl, pr, lmul);\n\t\t\tp1->mul = p1->mul * lmul % mod;\n\t\t\tp1->sum = p1->sum * lmul % mod;\n\t\t\treturn p1;\n\t\t}\n\t\tif (!p1) {\n\t\t\t//printf(\"p2 %d %d %lld\\n\", pl, pr, rmul);\n\t\t\tp2->mul = p2->mul * rmul % mod;\n\t\t\tp2->sum = p2->sum * rmul % mod;\n\t\t\treturn p2;\n\t\t}\n\t\tPushdown(p1, pl, pr); Pushdown(p2, pl, pr);\n\t\tint mid = pl + pr >> 1;\n\t\tlong long s1l = Sum(p1->l), s1r = Sum(p1->r), s2l = Sum(p2->l), s2r = Sum(p2->r);\n\t\tp1->l = Merge(p1->l, p2->l, pl, mid, pu, ps1, Add(ss1, s1r), ps2, Add(ss2, s2r));\n\t\tp1->r = Merge(p1->r, p2->r, mid + 1, pr, pu, Add(ps1, s1l), ss1, Add(ps2, s2l), ss2);\n\t\tp1->Update();\n\t\treturn p1;\n\t}\n};\nSegtree sgt;\n\ninline void AddEdge(int u, int v) {\n\te[++pnt].to = v;\n\te[pnt].nxt = hd[u];\n\thd[u] = pnt;\n\tscnt[u]++;\n}\n\ninline void Read() {\n\tn = qread();\n\tfor (int i = 1;i <= n;i++) {\n\t\tint fa = qread();\n\t\tAddEdge(fa, i);\n\t}\n\tlong long inv1e4 = Power(10000, mod - 2);\n\tfor (int i = 1;i <= n;i++) {\n\t\tint x = qread();\n\t\tif (!~hd[i]) p[i] = b[++bcnt] = x;\n\t\telse p[i] = x * inv1e4 % mod;\n\t}\n}\n\ninline void Prefix() {\n\tsort(b + 1, b + bcnt + 1);\n\tbcnt = unique(b + 1, b + bcnt + 1) - b - 1;\n\tfor (int i = 1;i <= n;i++) {\n\t\tif (!~hd[i]) p[i] = lower_bound(b + 1, b + bcnt + 1, p[i]) - b;\n\t}\n}\n\ninline void Dfs(int u) {\n\tif (!~hd[u]) {\n\t\tsgt.Modify(sgt._root[u], 1, bcnt, p[u], 1);\n\t\t//dp[u][p[u]] = 1;\n\t\treturn;\n\t}\n\tif (scnt[u] == 1) {\n\t\tDfs(e[hd[u]].to);\n\t\t//memcpy(dp[e[hd[u]].to], dp[u], sizeof(dp[u]));\n\t\tsgt._root[u] = sgt._root[e[hd[u]].to];\n\t\treturn;\n\t}\n\tint ls = e[hd[u]].to;\n\tint rs = e[e[hd[u]].nxt].to;\n\tDfs(ls);\n\tDfs(rs);\n\tsgt._root[u] = sgt._root[ls];\n\t//sgt._root[u]->mul = sgt._root[u]->mul * p[u] % mod;\n\t//sgt._root[rs]->mul = sgt._root[rs]->mul * Subt(1, p[u]) % mod;\n\tsgt._root[u] = sgt.Merge(sgt._root[u], sgt._root[rs], 1, bcnt, p[u], 0, 0, 0, 0);\n}\n\nint main() {\n\tmemset(hd, -1, sizeof(hd));\n\tRead();\n\tPrefix();\n\tDfs(1);\n\tlong long ans = 0;\n\tfor (int i = 1;i <= bcnt;i++) {\n\t\tlong long val = sgt.Query(sgt._root[1], 1, bcnt, i, i);\n\t\t//printf(\"%lld \", val);\n\t\tans = (ans + 1ll * i * b[i] % mod * val % mod * val % mod) % mod;\n\t}\n\t//puts(\"\");\n\tprintf(\"%lld\", ans);\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n\n```",
        "postTime": 1610253779,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5298 \u3010[PKUWC2018]Minimax\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u5728[\u6211\u7684blog](https://www.cnblogs.com/TEoS/p/13289222.html)\n\n------------\n\n\u6839\u636e\u9898\u610f\uff0c\u82e5\u4e00\u4e2a\u70b9\u6709\u5b50\u8282\u70b9\uff0c\u5219\u7ed9\u51fa\u6743\u503c\uff1b\u5426\u5219\u53ef\u4ee5\u4ece\u5b50\u8282\u70b9\u8f6c\u79fb\u5f97\u6765\u3002\n\n\u82e5\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u7ed9\u51fa\u6743\u503c\uff1b\n\n\u82e5\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u5219\u6982\u7387\u60c5\u51b5\u4e0e\u8be5\u5b50\u8282\u70b9\u5b8c\u5168\u76f8\u540c\uff1b\n\n\u82e5\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u5219\u9700\u8981\u4ece\u4e24\u4e2a\u5b50\u8282\u70b9\u4e2d\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u5982\u4f55\u8f6c\u79fb\uff1f\u663e\u7136\uff0c\u82e5\u6743\u503c $i$ \u5728\u5de6\u5b50\u6811\uff0c\u8981\u53d6\u5230\u5b83\uff0c\u9700\u8981\u5728 $p_i$ \u7684\u6982\u7387\u4e2d\u5de6\u5b50\u6811\u8f83\u5927\uff0c\u5728 $(1-p_i)$ \u7684\u6982\u7387\u4e2d\u5de6\u5b50\u6811\u8f83\u5c0f\uff0c\u53f3\u5b50\u6811\u540c\u7406\u3002\u56e0\u4e3a\u5f53\u6743\u503c $i$ \u5728\u5de6\u5b50\u6811\u65f6\u53f3\u5b50\u6811\u53d6\u5230\u5b83\u7684\u6982\u7387\u4e3a $0$ \uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5c06\u4e24\u4e2a\u5b50\u6811\u7684\u8f6c\u79fb\u5f0f\u76f8\u52a0\u5408\u5e76\uff0c\u6ca1\u6709\u5f71\u54cd\u3002\u5373\uff1a\n\n\u8bbe\u8282\u70b9 $x$ \u53d6\u5230\u6743\u503c $i$ \u7684\u6982\u7387\u4e3a $f_{x,i}$ \uff0c\u8282\u70b9\u6570\u4e3a $n$ \uff0c\u5219\u6709\uff1a\n\n$$f_{x,i}=f_{lson(x),i}*(p_x*\\sum_{j=1}^{i-1} f_{rson(x),j}+(1-p_x)*\\sum_{j=i+1}^{n} f_\n{rson(x),j})+f_{rson(x),i}*(p_x*\\sum_{j=1}^{i-1} f_{lson(x),j}+(1-p_x)*\\sum_{j=i+1}^{n} f_\n{lson(x),j})$$\n\n\u5982\u4f55\u6c42\u503c\uff1f\u901a\u8fc7\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u540c\u65f6\u9700\u8981\u5de6\u513f\u5b50\u7684\u503c\u3001\u53f3\u513f\u5b50\u7684\u503c\u4ee5\u53ca\u5176\u524d\u7f00\u3001\u540e\u7f00\u548c\uff0c\u53ef\u4ee5\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u8fdb\u884c\u6c42\u503c\u3002\n\n\u5982\u4f55\u5b9e\u73b0\uff1f\u5728\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u540c\u65f6\u7ef4\u62a4\u524d\u3001\u540e\u7f00\u548c\uff0c\u6253\u4e0a\u4e58\u6cd5\u6807\u8bb0\u5373\u53ef\u3002\u8bb0\u5f97\u79bb\u6563\u5316\u3002\n\n\u672c\u9898\u9700\u8981\u7528\u5230\u5206\u6570\u53d6\u6a21\uff1a$\\frac{a}{b}\\bmod k=\\frac{a}{b}*b^{k-1}\\bmod k=a*b^{k-2}\\bmod k$ \u3002\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=3e5+100;\nconst int P=998244353;\nint qpow(int x,int y)\n{\n\tint ans=1;\n\twhile(y)\n\t{\n\t\tif(y&1)\n\t\t\tans=1LL*ans*x%P;\n\t\tx=1LL*x*x%P,y>>=1;\n\t}\n\treturn ans;\n}//\u5feb\u901f\u5e42\nconst int D=qpow(10000,P-2);\nstruct Seg\n{\n\tint lson,rson,sum,tag;\n\t#define lson(i) t[i].lson\n\t#define rson(i) t[i].rson\n\t#define sum(i) t[i].sum\n\t#define tag(i) t[i].tag//\u4e58\u6cd5\u6807\u8bb0\n}t[N<<5];\nint n,cnt,h,ans;\nint v[N],r[N],a[N],cnts[N],anss[N],s[N][2];\nint newp()\n{\n\tint p=++cnt;\n\ttag(p)=1;\n\treturn p;\n}//\u65b0\u5efa\u8282\u70b9\nvoid update(int p,int val)\n{\n\tsum(p)=1LL*sum(p)*val%P;\n\ttag(p)=1LL*tag(p)*val%P;\n}//\u66f4\u65b0\nvoid pushdown(int p)\n{\n\tif(tag(p)>1)\n\t\tupdate(lson(p),tag(p)),update(rson(p),tag(p)),tag(p)=1;\n}//\u4e0b\u4f20\u6807\u8bb0\nvoid change(int &p,int l,int r,int k,int val)\n{\n\tif(!p)\n\t\tp=newp();\n\tif(l==r)\n\t{\n\t\tsum(p)=val;\n\t\treturn ;\n\t}\n\tpushdown(p);\n\tint mid=l+r>>1;\n\tif(k<=mid)\n\t\tchange(lson(p),l,mid,k,val);\n\telse\n\t\tchange(rson(p),mid+1,r,k,val);\n\tsum(p)=sum(lson(p))+sum(rson(p))%P;\n}//\u4fee\u6539\nvoid ask(int p,int l,int r)\n{\n\tif(!p)\n\t\treturn ;\n\tif(l==r)\n\t{\n\t\tanss[l]=sum(p);\n\t\treturn ;\n\t}\n\tpushdown(p);\n\tint mid=l+r>>1;\n\task(lson(p),l,mid),ask(rson(p),mid+1,r);\n}//\u8f93\u51fa\u7b54\u6848\u5230\u5bf9\u5e94\u6570\u7ec4\nint merge(int x,int y,int l,int r,int xtag,int ytag,int val)\n{\n\tif(!x && !y)\n\t\treturn 0;\n\tif(!x)\n\t{\n\t\tupdate(y,ytag);\n\t\treturn y;\n\t}\n\tif(!y)\n\t{\n\t\tupdate(x,xtag);\n\t\treturn x;\n\t}\n\tpushdown(x),pushdown(y);//\u4e0b\u4f20\u6807\u8bb0\n\tint mid=l+r>>1,lx=sum(lson(x)),ly=sum(lson(y)),rx=sum(rson(x)),ry=sum(rson(y));//\u5148\u5b58\u503c\uff0c\u5426\u5219\u4e4b\u540e\u4f1a\u88ab\u6539\u52a8\n\tlson(x)=merge(lson(x),lson(y),l,mid,(xtag+1LL*ry*(1-val+P)%P)%P,(ytag+1LL*rx*(1-val+P)%P)%P,val);\n\trson(x)=merge(rson(x),rson(y),mid+1,r,(xtag+1LL*ly*val%P)%P,(ytag+1LL*lx*val%P)%P,val);\n\tsum(x)=(sum(lson(x))+sum(rson(x)))%P;\n\treturn x;\n}\nvoid pre()\n{\n\tsort(a+1,a+h+1);\n\tfor(int i=1;i<=n;i++)\n\t\tif(!cnts[i])\n\t\t\tv[i]=lower_bound(a+1,a+h+1,v[i])-a;//\u6743\u503c\u79bb\u6563\u5316\n\t\telse\n\t\t\tv[i]=1LL*v[i]*D%P;//\u5b58\u6982\u7387\uff0c\u5206\u6570\u53d6\u6a21\n}//\u9884\u5904\u7406\u6743\u503c\nvoid solve(int x)\n{\n\tif(!cnts[x])\n\t{\n\t\tchange(r[x],1,h,v[x],1);\n\t\treturn ;\n\t}//\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u63d2\u5165\u6743\u503c\n\tif(cnts[x]==1)\n\t{\n\t\tsolve(s[x][0]);\n\t\tr[x]=r[s[x][0]];\n\t\treturn ;\n\t}//\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\n\tsolve(s[x][0]),solve(s[x][1]);\n\tr[x]=merge(r[s[x][0]],r[s[x][1]],1,h,0,0,v[x]);//\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1,x;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(x)\n\t\t\ts[x][cnts[x]++]=i;\n\t}\n\tfor(int i=1,x;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&v[i]);\n\t\tif(!cnts[i])\n\t\t\ta[++h]=v[i];\n\t}\n\tpre(),solve(1),ask(r[1],1,h);\n\tfor(int i=1;i<=h;i++)\n\t\tans=(ans+1LL*i*a[i]%P*anss[i]%P*anss[i])%P;//\u8ba1\u7b97\u7b54\u6848\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1594552784,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "P5298 [PKUWC2018]Minimax"
    },
    {
        "content": "\n[\u672c\u849f\u84bb\u7684Blog](https://www.chnxuzhiyuan.cn/2019/12/19/%E3%80%8CPKUWC2018%E3%80%8D%E9%A2%98%E8%A7%A3-Solution/)\n\n### \u9898\u89e3\n\n\u7b54\u6848\u7684\u8868\u8fbe\u5f0f\u770b\u4e0a\u53bb\u6781\u5176\u8be1\u5f02\uff0c\u4f46\u662f\u89c2\u5bdf\u8fc7\u540e\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u8981\u6c42\u51fa\u6bcf\u79cd\u6743\u503c\u51fa\u73b0\u7684\u6982\u7387\uff0c\u95ee\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\uff08\u5e9f\u8bdd\uff09\u3002\n\n\u9996\u5148\u9700\u8981\u6293\u4f4f\u9898\u76ee\u4e2d\u4fdd\u8bc1\u7684\u4e24\u4e2a\u6027\u8d28\uff0c\u4e00\u4e2a\u662f\u6743\u503c\u4e92\u4e0d\u76f8\u540c\uff0c\u53e6\u4e00\u4e2a\u662f\u6709\u513f\u5b50\u7684\u8282\u70b9\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u513f\u5b50\u3002\n\n\u8bbe\u7b2c$i$\u4e2a\u8282\u70b9\u51fa\u73b0\u6743\u503c$j$\u7684\u6982\u7387\u4e3a$g_{i,j}$\uff0c\u90a3\u4e48\u7531\u4e8e\u6743\u503c\u4e92\u4e0d\u76f8\u540c\uff0c\u5de6\u53f3\u513f\u5b50\u4e2d\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u53ef\u80fd\u51fa\u73b0\u6743\u503c$j$\u3002\n\n\u8bbe\u5de6\u513f\u5b50\u7684\u7f16\u53f7\u4e3a$L$\uff0c\u53f3\u513f\u5b50\u4e3a$R$\uff0c\u5982\u679c\u5de6\u513f\u5b50\u53ef\u80fd\u51fa\u73b0\u6743\u503c$j$\uff0c\u90a3\u4e48\u5c31\u6709\uff1a\n$$\ng_{i,j}=g_{L,j}\\cdot(\\sum_{k=1}^{j-1}{g_{R,k}\\cdot p_i}+\\sum_{k=j+1}^{n}{g_{R,k}\\cdot(1-p_i))}\n$$\n\u53f3\u513f\u5b50\u53ef\u80fd\u51fa\u73b0\u6743\u503c$j$\u7684\u60c5\u51b5\u540c\u7406\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u8f6c\u79fb\u7684\u8fc7\u7a0b\uff0c\u76f8\u5f53\u4e8e\u6743\u503c$j$\u51fa\u73b0\u7684\u6982\u7387\u88ab\u4e58\u4e0a\u4e86$(\\sum_{k=1}^{j-1}{g_{R,k}\\cdot p_i}+\\sum_{k=j+1}^{n}{g_{R,k}\\cdot(1-p_i))}$\u3002\n\n\u4ed4\u7ec6\u89c2\u5bdf\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u91cc\u9762\u662f\u4e00\u4e2a\u524d\u7f00\u548c\u548c\u4e00\u4e2a\u540e\u7f00\u548c\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u5bf9\u652f\u6301\u4e58\u6cd5\u64cd\u4f5c\u7684\u7ebf\u6bb5\u6811\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u6765\u5b9e\u73b0\u8f6c\u79fb\uff0c\u4e0d\u65ad\u5411\u4e0a\u5408\u5e76\u4e4b\u540e\u5c31\u53ef\u4ee5\u6c42\u51fa\u6839\u8282\u70b9\u6bcf\u79cd\u6743\u503c\u51fa\u73b0\u7684\u6982\u7387\u4e86\u3002\u5177\u4f53\u5b9e\u73b0\u53c2\u89c1\u4ee3\u7801\uff08\u611f\u89c9\u8fd8\u662f\u633a\u5999\u7684\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f$O(n\\log n)$\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int maxn=300005,TT=998244353,inv=796898467;\nint n,P[maxn],W[maxn],num[maxn],tot,lnk[maxn],son[maxn],nxt[maxn],ans;\ninline int read()\n{\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){ret=ret*10+ch-'0';ch=getchar();}\n\treturn ret*f;\n}\ninline void add_e(int x,int y){tot++;son[tot]=y;nxt[tot]=lnk[x];lnk[x]=tot;}\nstruct SegmentTree\n{\n\tint tot,R[maxn];\n\tinline int New(){tot++;Tree[tot].Tag=1;return tot;}\n\tstruct Node{int Sum,Tag,L,R;}Tree[maxn*40];\n\tinline void PushUp(int rt){Tree[rt].Sum=(Tree[Tree[rt].L].Sum+Tree[Tree[rt].R].Sum)%TT;}\n\tinline void PushDown(int rt)\n\t{\n\t\tTree[Tree[rt].L].Sum=(LL)Tree[Tree[rt].L].Sum*Tree[rt].Tag%TT;Tree[Tree[rt].L].Tag=(LL)Tree[Tree[rt].L].Tag*Tree[rt].Tag%TT;\n\t\tTree[Tree[rt].R].Sum=(LL)Tree[Tree[rt].R].Sum*Tree[rt].Tag%TT;Tree[Tree[rt].R].Tag=(LL)Tree[Tree[rt].R].Tag*Tree[rt].Tag%TT;\n\t\tTree[rt].Tag=1;\n\t}\n\tinline int Merge(int rt1,int rt2,int P,int Pre1=0,int Suf1=0,int Pre2=0,int Suf2=0)\n\t{\n\t\tif(!rt1&&!rt2) return 0;\n\t\tPushDown(rt1);PushDown(rt2);\n\t\tint rt=New();\n\t\tif(!rt1)\n\t\t{\n\t\t\tint mul=((LL)P*Pre1+(LL)(1-P+TT)*Suf1)%TT;\n\t\t\tTree[rt]=Tree[rt2];\n\t\t\tTree[rt].Sum=(LL)Tree[rt2].Sum*mul%TT;\n\t\t\tTree[rt].Tag=(LL)Tree[rt2].Tag*mul%TT;\n\t\t}\n\t\telse if(!rt2)\n\t\t{\n\t\t\tint mul=((LL)P*Pre2+(LL)(1-P+TT)*Suf2)%TT;\n\t\t\tTree[rt]=Tree[rt1];\n\t\t\tTree[rt].Sum=(LL)Tree[rt1].Sum*mul%TT;\n\t\t\tTree[rt].Tag=(LL)Tree[rt1].Tag*mul%TT;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tTree[rt].L=Merge(Tree[rt1].L,Tree[rt2].L,P,Pre1,(Suf1+Tree[Tree[rt1].R].Sum)%TT,Pre2,(Suf2+Tree[Tree[rt2].R].Sum)%TT);\n\t\t\tTree[rt].R=Merge(Tree[rt1].R,Tree[rt2].R,P,(Pre1+Tree[Tree[rt1].L].Sum)%TT,Suf1,(Pre2+Tree[Tree[rt2].L].Sum)%TT,Suf2);\n\t\t\tPushUp(rt);\n\t\t}\n\t\treturn rt;\n\t}\n\tinline int NewTree(int P,int L=1,int R=num[0])\n\t{\n\t\tint rt=New();\n\t\tif(L==R){Tree[rt].Sum=1;return rt;}\n\t\tint M=(L+R)>>1;\n\t\tif(P<=M) Tree[rt].L=NewTree(P,L,M);\n\t\telse Tree[rt].R=NewTree(P,M+1,R);\n\t\tPushUp(rt);\n\t\treturn rt;\n\t}\n}ST;\nvoid DFS(int now)\n{\n\tif(!lnk[now]){ST.R[now]=ST.NewTree(W[now]);return;}\n\tfor(int i=lnk[now];i;i=nxt[i])\n\t{\n\t\tDFS(son[i]);\n\t\tif(!ST.R[now]) ST.R[now]=ST.R[son[i]];\n\t\telse ST.R[now]=ST.Merge(ST.R[now],ST.R[son[i]],P[now]);\n\t}\n}\nvoid Solve(int L=1,int R=num[0],int rt=ST.R[1])\n{\n\tif(L==R){ans=(ans+(LL)L*num[L]%TT*ST.Tree[rt].Sum%TT*ST.Tree[rt].Sum%TT)%TT;return;}\n\tint M=(L+R)>>1;\n\tST.PushDown(rt);\n\tSolve(L,M,ST.Tree[rt].L);\n\tSolve(M+1,R,ST.Tree[rt].R);\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint fi=read();\n\t\tif(fi) add_e(fi,i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(lnk[i]) P[i]=(LL)read()*inv%TT;\n\t\telse W[i]=num[++num[0]]=read();\n\t}\n\tsort(num+1,num+1+num[0]);\n\tfor(int i=1;i<=n;i++)\n\t\tif(!lnk[i])\n\t\t\tW[i]=lower_bound(num+1,num+1+num[0],W[i])-num;\n\tDFS(1);Solve();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1576804475,
        "uid": 42392,
        "name": "\u5f90\u81f4\u8fdc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5298 \u3010[PKUWC2018]Minimax\u3011"
    },
    {
        "content": "\u7531\u4e8e\u4e00\u4e2a\u70b9\u6700\u591a\u6709\u4e24\u4e2a\u513f\u5b50\n\n\u6240\u4ee5\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\uff0c\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u5408\u5e76\u5f97\u5230\u6bcf\u4e2a\u6743\u503c\u7684\u6982\u7387\uff1b\n\n\u3007\u6ca1\u6709\u513f\u5b50\uff1a\u6743\u503c\u63d2\u5165\u7ebf\u6bb5\u6811\uff0creturn\uff1b\n\n\u2460\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff1a\u76f4\u63a5\u7ee7\u627f\u513f\u5b50\u7684\u6240\u6709\u6982\u7387\n\n\u2461\u6709\u4e24\u4e2a\u513f\u5b50\uff1a\n\n```cpp\n\n\u67d0\u4e2a\u513f\u5b50\u7684\u67d0\u4e2a\u6743\u503c\u51fa\u73b0\u7684\u6982\u7387\n\n=P[\u4f5c\u4e3a\u6700\u5927\u503c\u51fa\u73b0]+P[\u4f5c\u4e3a\u6700\u5c0f\u503c\u51fa\u73b0]\n\n=P[\u8be5\u513f\u5b50\u6743\u503c\u662fta]*P[\u53d6\u4e86\u6700\u5927\u503c]*P[\u53e6\u4e00\u513f\u5b50\u6743\u503c\u6bd4ta\u5c0f]\n\n+P[\u8be5\u513f\u5b50\u6743\u503c\u662fta]*P[\u53d6\u4e86\u6700\u5c0f\u503c]*P[\u53e6\u4e00\u513f\u5b50\u6743\u503c\u6bd4ta\u5927]\n```\n\n\u9012\u5f52\u5408\u5e76\u5230\u5355\u4e00\u8282\u70b9\u65f6\u6253\u4e58\u6cd5\u6807\u8bb0\u5c31\u597d\u4e86\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=3e5+5;\nconst int MOD=998244353;\n\nint n,np,ct,cnt;\nlong long sum;\nint h[MAXN],p[MAXN],deg[MAXN],so[2][MAXN];\nbool nlf[MAXN];\nint rt[MAXN],sn[2][MAXN<<5],siz[MAXN<<5],tag[MAXN<<5];\nstruct rpg{\n\tint li,nx;\n}a[MAXN];\n\nint read()\n{\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||'9'<ch) ch=getchar();\n\twhile('0'<=ch&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x;\n}\n\nvoid add(int ls,int nx){a[++np]=(rpg){h[ls],nx};h[ls]=np;}\nint Fpw(int a,int b)\n{\n\tint x=1;\n\twhile(b){\n\t\tif(b&1) x=1ll*x*a%MOD;\n\t\tb>>=1;a=1ll*a*a%MOD;\n\t}return x;\n}\n\nvoid ins(int &k,int l,int r,int v)\n{\n\tif(!k) k=++ct;siz[k]=tag[k]=1;\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tif(v<=mid) ins(sn[0][k],l,mid,v);\n\telse ins(sn[1][k],mid+1,r,v);\n}\n\nvoid pushdown(int x)\n{\n\tif(tag[x]==1) return;\n\tif(sn[0][x]){\n\t\ttag[sn[0][x]]=1ll*tag[sn[0][x]]*tag[x]%MOD;\n\t\tsiz[sn[0][x]]=1ll*siz[sn[0][x]]*tag[x]%MOD;\n\t}if(sn[1][x]){\n\t\ttag[sn[1][x]]=1ll*tag[sn[1][x]]*tag[x]%MOD;\n\t\tsiz[sn[1][x]]=1ll*siz[sn[1][x]]*tag[x]%MOD;\n\t}tag[x]=1;\n\treturn;\n}\n\nint un(int x,int y,int p,int srx,int sry)\n{\n\tif(!x||!y){\n\t\tif(x){\n\t\t\tint v=(1ll*(1-sry+MOD)*p+1ll*sry*(1-p+MOD))%MOD;\n\t\t\ttag[x]=1ll*tag[x]*v%MOD;\n\t\t\tsiz[x]=1ll*siz[x]*v%MOD;\n\t\t\treturn x;\n\t\t}if(y){\n\t\t\tint v=(1ll*(1-srx+MOD)*p+1ll*srx*(1-p+MOD))%MOD;\n\t\t\ttag[y]=1ll*tag[y]*v%MOD;\n\t\t\tsiz[y]=1ll*siz[y]*v%MOD;\n\t\t\treturn y;\n\t\t}return 0;\n\t}pushdown(x);pushdown(y);\n\tint tp1=siz[sn[1][x]],tp2=siz[sn[1][y]];\n\tsn[0][x]=un(sn[0][x],sn[0][y],p,(srx+tp1)%MOD,(sry+tp2)%MOD);\n\tsn[1][x]=un(sn[1][x],sn[1][y],p,srx,sry);\n\tsiz[x]=siz[sn[0][x]]+siz[sn[1][x]];siz[x]%=MOD;\n\treturn x;\n}\n\nvoid dfs(int x)\n{\n\tif(!nlf[x]){ins(rt[x],1,1e9,p[x]);return;}\n\tif(so[0][x]) dfs(so[0][x]);\n\tif(so[1][x]) dfs(so[1][x]);\n\tif(deg[x]==1) rt[x]=rt[so[0][x]];\n\telse rt[x]=un(rt[so[0][x]],rt[so[1][x]],p[x],0,0);\n}\n\nvoid ddfs(int k,int l,int r)\n{\n\tpushdown(k);\n\tif(l==r){\n\t\t++cnt;\n\t\tsum+=1ll*siz[k]*siz[k]%MOD*l%MOD*cnt%MOD;\n\t\treturn;\n\t}int mid=l+r>>1;\n\tif(sn[0][k]) ddfs(sn[0][k],l,mid);\n\tif(sn[1][k]) ddfs(sn[1][k],mid+1,r);\n\treturn;\n}\n\nint main()\n{\n\tn=read();int inv=Fpw(10000,MOD-2);\n\tfor(int i=1;i<=n;++i){\n\t\tint f=read();\n\t\tif(i>1) add(f,i),nlf[f]=1,so[deg[f]++][f]=i;\n\t}for(int i=1;i<=n;++i){\n\t\tp[i]=read();\n\t\tif(nlf[i]) p[i]=1ll*p[i]*inv%MOD;\n\t}dfs(1);\n\tddfs(rt[1],1,1e9);\n\tprintf(\"%lld\\n\",sum%MOD);\n\treturn 0;\n}\n```",
        "postTime": 1555296719,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5298 \u3010[PKUWC2018]Minimax\u3011"
    }
]