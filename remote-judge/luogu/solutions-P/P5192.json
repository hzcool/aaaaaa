[
    {
        "content": "# Zoj3229 Shoot the Bullet|\u4e1c\u65b9\u6587\u82b1\u5e16|\u3010\u6a21\u677f\u3011\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\u89e3\u9898\u62a5\u544a\n\n\u6807\u7b7e\uff1a \u89e3\u9898\u62a5\u544a\n\n---\n\n[Zoj3229 Shoot the Bullet|\u4e1c\u65b9\u6587\u82b1\u5e16|\u3010\u6a21\u677f\u3011\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41](https://www.luogu.com.cn/problem/P5192)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1694812)\n\n~~\u5148\u5410\u69fd\u4e00\u4e0b\uff0c\u8fd9\u867d\u7136\u662f\u677f\u5b50\u9898\uff0c\u4f46\u770b\u61c2\u600e\u4e48\u5efa\u6a21\u8fd8\u8981\u4e00\u5c0f\u4f1a\u513f~~\n\n~~\u8fd8\u6709\uff0c\u4e3a\u4ec0\u4e48\u8981\u628a\u4e09\u500d\u7ecf\u9a8c\u5408\u5e76\u554a~~\n\n## \u9898\u610f\u4e0e\u5206\u6790\n\n\u9898\u610f\uff1a\u4e00\u5171\u6709$n$\u5929\uff0c\u6bcf\u5929\u6700\u591a\u62cd$D_i$\u5f20~~\u7167\u9a97~~\u7167\u7247\uff0c\u6709$C_i$\u4e2a\u53d6\u6750\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u53d6\u6750\u5bf9\u8c61$T_{i,j}$\u9700\u8981\u62cd$[L_{i,j},R_{i,j}]$\u7684\u7167\u7247\uff0c\u540c\u65f6$m$\u4e2a\u5c11\u5973\u4e2d\u6bcf\u4e2a\u5c11\u5973\u7684~~\u7167\u9a97~~\u6570\u91cf\u4e0d\u5f97\u5c11\u4e8e$G_i$\u3002\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u4ece~~\u6807\u9898\uff1a\u3010\u6a21\u677f\u3011\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41~~$\u201c[L_{i,j},R_{i,j}]$\u201d\u548c\u201c\u4e0d\u5f97\u5c11\u4e8e$G_i$\u201d\u770b\u51fa\u6765\u9700\u8981\u6c42\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\n## \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u5728\u4e00\u5f20\u56fe\u4e2d\uff0c\u6bcf\u6761\u8fb9\u6709\u6d41\u91cf\u4e0b\u754c\u548c\u6d41\u91cf\u4e0a\u754c\uff0c\u6c42\u662f\u5426\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u5728\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u6240\u6709\u8fb9\u6ee1\u8db3\u4e0a\u4e0b\u754c\u9650\u5236\u3002\n\n\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u6d41\u91cf\u5e73\u8861\u6307\uff1a\u5bf9\u4e8e\u6240\u6709\u70b9$x$\uff0c\u6ee1\u8db3$\\forall_{e\\in E,e.to==x}e.flow=\\forall_{e'\\in E,e'.from==x}e'.flow$\uff08$e.from$\u4e0e$e.to$\u5206\u522b\u4e3a\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u70b9\uff0c$e.flow$\u4e3a\u8fd9\u6761\u8fb9\u5b9e\u9645\u7684\u6d41\u91cf\uff09\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u6ee1\u8db3\u6d41\u5165\u5b83\u7684\u6d41\u91cf\u7b49\u4e8e\u6d41\u51fa\u5b83\u7684\u6d41\u91cf\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u79cd\u60f3\u6cd5\uff0c\u6211\u4eec\u628a\u4e0a\u9650\u51cf\u53bb\u4e0b\u9650\uff0c\u7136\u540e\u8dd1\u6700\u5927\u6d41\u3002\u4f46\u662f\u8fd9\u4e2a\u5f88\u663e\u7136\u662f\u4e0d\u6ee1\u8db3\u7684\uff0c\u56e0\u4e3a\u7ecf\u8fc7\u64cd\u4f5c\u540e\u53ef\u80fd\u4f1a\u5f62\u6210\u8fd9\u6837\u7684\u56fe\uff1a![](https://fp1.fghrsh.net/2020/04/18/62949618f868b69820ab66b7d4c6cc04.png)\uff0c\u8fd9\u5f20\u56fe\u662f\u5f88\u663e\u7136\u6ca1\u6709\u53ef\u884c\u6d41\u7684\u3002\u4f46\u662f\u7ecf\u8fc7\u64cd\u4f5c\u540e\uff0c\u539f\u56fe\u4f1a\u53d8\u4e3a\uff1a![](https://fp1.fghrsh.net/2020/04/18/6ad7119438309c2e5cdc0ad9fcdadcc8.png)\uff0c\u6b64\u65f6\u5b58\u5728\u53ef\u884c\u6d41\u3002\n\n\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u524d\u540e\u4e0d\u4e00\u7684\u539f\u56e0\u662f\u7ecf\u8fc7\u8fd9\u79cd\u64cd\u4f5c\u540e\u65b0\u56fe\u4e0d\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\u4e86\uff0c\u8fd9\u5c31\u5f88\u9ebb\u70e6\u4e86\uff0c\u8dd1\u4e0d\u4e86\u6700\u5927\u6d41\uff0c~~\u800c\u4e14\u4e5f\u4e0d\u80fd\u968f\u4fbf\u53d1\u660e\u4e00\u4e2a\u4e0d\u9700\u8981\u6d41\u91cf\u5e73\u8861\u7684\u6700\u5927\u6d41\u7b97\u6cd5~~\uff0c\u56e0\u6b64\u6211\u4eec\u60f3\u60f3\u5982\u4f55\u7ecf\u8fc7\u7384\u5b66\u64cd\u4f5c\u662f\u65b0\u56fe\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\u3002\n\n\u5bf9\u4e86\uff01\u539f\u70b9\u548c\u6c47\u70b9\u8fd8\u5728\u65c1\u8fb9\u667e\u7740\uff0c\u6211\u4eec\u8981\u8ba9\u5b83\u4eec\u5e72\u6d3b\u3002\u56e0\u4e3a\u6700\u5927\u6d41\u7b97\u6cd5\u4e2d\u6e90\u70b9\u548c\u6c47\u70b9\u53ef\u4ee5\u4e0d\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u9505\u63a8\u5230\u6e90\u70b9\u548c\u6c47\u70b9\u4e0a\uff0c\u540c\u6837\u662f\u628a\u6bcf\u6761\u8fb9\u4e0a\u9650\u51cf\u53bb\u4e0b\u9650\uff0c\u4f46\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u8ba1\u7b97$in_x=\\forall_{e\\in E,e.to==x}e.flow$\uff0c$out_x=\\forall_{e\\in E,e.from==x}e.flow$\uff0c\u4e3a\u4e86\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\uff0c$x$\u53ef\u4ee5\u83b7\u5f97\u7684\u6d41\u91cf\u80af\u5b9a\u662f$min(in_x,out_x)$\uff0c\u6b64\u65f6\u4e0d\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\u7684\u5730\u65b9\u5c31\u662f$\\left|in_x-out_x\\right|$\u4e86\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6240\u6709\u7684$in_x>out_x$\uff0c\u6211\u4eec\u4ece$s$\u5411$x$\u8fde\u4e00\u6761\u4e0a\u9650\u4e3a$in_x-out_x$\u7684\u8fb9\u6765\u8865\u9f50\u7531\u4e8e\u6d41\u91cf\u5e73\u8861\u635f\u5931\u7684\u6d41\u91cf\uff1b\u5bf9\u4e8e\u6240\u6709\u7684$in_x==out_x$\uff0c\u53ef\u4ee5\u8fde\u8fb9\u53ef\u4ee5\u4e0d\u8fde\u8fb9\uff1b\u5bf9\u4e8e\u6240\u6709\u7684$in_x<out_x$\uff0c\u6211\u4eec\u4ece$x$\u5411$t$\u8fde\u4e00\u6761\u4e0a\u9650\u4e3a$out_x-in_x$\u7684\u8fb9\u8865\u9f50\u7531\u4e8e\u6d41\u91cf\u5e73\u8861\u635f\u5931\u7684\u6d41\u91cf\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u6240\u6709\u8fde\u5411$x$\u7684\u8fb9\u62ac\u9ad8\u4e86$x$\u4e00\u5171$in_x$\u7684\u4e0b\u9650\uff0c\u6240\u6709\u4ece$x$\u8fde\u51fa\u7684\u8fb9\u62ac\u9ad8\u4e86$x$\u4e00\u5171$out_x$\u7684\u4e0b\u9650\u3002\u4e3a\u4e86\u8ba9$x$\u8fde\u5165\u548c\u8fde\u51fa\u5904\u4e8e\u540c\u4e00\u4e2a\u6c34\u5e73\uff0c\u6211\u4eec\u9700\u8981\u7528\u53ef\u4ee5\u4e0d\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\u7684$s$\u548c$t$\u62ac\u9ad8\u6216\u964d\u4f4e$x$\u7684\u4e0b\u9650\uff08\u7b49\u4e8e\u4ece\u8fde\u5165\u7ecf\u8fc7\u4e00\u6b21\u62ac\u9ad8/\u964d\u4f4e\u518d\u8fde\u51fa\uff09\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9$x$\u5904\u4e8e\u6d41\u91cf\u5e73\u8861\u7684\u72b6\u6001\u3002\n\n\u56e0\u6b64\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u5df2\u7ecf\u5f88\u660e\u4e86\u4e86\uff1a\n1. \u7edf\u8ba1\u6bcf\u4e2a\u70b9$x$\u7684$in_x$\u4e0e$out_x$\uff0c\u5373\u8fde\u5411$x$\u7684\u8fb9\u7684\u6d41\u91cf\u4e4b\u548c\u4e0e\u8fde\u51fa$x$\u7684\u8fb9\u7684\u6d41\u91cf\u4e4b\u548c\u3002\n2. \u5bf9\u4e8e\u6bcf\u4e00\u6761\u539f\u56fe\u91cc\u7684\u8fb9\uff0c\u6d41\u91cf\u8bbe\u4e3a\u4e0a\u9650\u51cf\u53bb\u4e0b\u9650\uff0c\u56e0\u6b64\u5f97\u5230\u4e00\u5f20\u65b0\u56fe\u3002\n3. \u865a\u62df\u6e90\u70b9\u4e0e\u6c47\u70b9$s$\u548c$t$\uff0c\u5bf9\u4e8e\u6240\u6709\u7684$x$\uff0c\u5982\u679c$in_x>out_x$\uff0c\u5219\u4ece$s$\u5411$x$\u8fde\u4e00\u6761$in_x-out_x$\u7684\u8fb9\uff0c\u5426\u5219\u4ece$x$\u5411$t$\u8fde\u4e00\u6761$out_x-in_x$\u7684\u8fb9\u3002\n4. \u8dd1\u4e00\u904d\u4ece$s$\u5230$t$\u7684\u6700\u5927\u6d41\uff0c\u5982\u679c$s$\u8fde\u51fa\u7684\u8fb9\u53ef\u4ee5\u6ee1\u6d41\uff08\u7531\u4e8e\u6d41\u91cf\u5e73\u8861\uff0c\u7b49\u4ef7\u4e8e\u8fde\u5411$t$\u7684\u8fb9\u53ef\u4ee5\u6ee1\u6d41\uff09\uff0c\u8bc1\u660e\u5b58\u5728\u53ef\u884c\u6d41\u3002\n\n## \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\u8003\u8651\u6709\u6e90\u70b9\u548c\u6c47\u70b9\u7684\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\uff0c\u5373\u5728\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e24\u4e2a\u70b9\u4e0d\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\u3002\n\n\u7531\u4e8e\u6d41\u91cf\u5e73\u8861\u6d41\u51fa$s$\u7684\u6d41\u91cf\u5f88\u663e\u7136\u4e0e\u6d41\u5165$t$\u7684\u6d41\u91cf\u662f\u76f8\u7b49\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u53ea\u8981\u8fde\u63a5\u4e00\u6761$(t,s,inf)$\u7684\u8fb9\uff0c\u539f\u56fe\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u7684\u88f8\u9898\u4e86\uff01\n\n\u56e0\u6b64\uff0c\u6b65\u9aa4\u4e3a\uff1a\n1. \u4ece\u539f\u56fe\u4e2d\u7684\u6c47\u70b9\u5411\u6e90\u70b9\u8fde\u4e00\u6761\u4e0a\u9650\u4e3a$inf$\u7684\u8fb9\u3002\n2. \u8dd1\u4e00\u904d\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u3002\n\n## \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u6709\u6e90\u6c47\u7684\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\u3002\u6211\u4eec\u5e76\u4e0d\u6ee1\u8db3\u4e8e\u6c42\u53ef\u884c\u6d41\uff0c\u5728\u627e\u53ef\u884c\u6d41\u7684\u57fa\u7840\u4e0a\uff0c\u8fd8\u60f3\u627e\u6700\u5927\u6d41\uff0c\u8fd9\u6837\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u5148\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u6d41$flow1$\uff0c\u6b64\u65f6\u6211\u4eec\u201c\u69a8\u5e72\u201d\u4e86\u8fde\u63a5\u865a\u62df\u6e90\u70b9\u548c\u865a\u62df\u6c47\u70b9\u7684\u8fb9\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u518d\u8dd1\u4e00\u904d\u4ece\u865a\u62df\u6e90\u70b9\u5230\u865a\u62df\u6c47\u70b9\u7684\u6700\u5927\u6d41\uff0c\u56e0\u4e3a\u8fd9\u6839\u672c\u6ca1\u6709\u610f\u4e49\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u53ef\u884c\u6d41\u4e0d\u4e00\u5b9a\u662f\u6700\u5927\u6d41\uff0c\u56e0\u4e3a\u53ef\u884c\u6d41\u53ea\u4f1a\u8dd1\u6ee1\u4e0e\u865a\u62df\u6e90\u70b9\u548c\u865a\u62df\u6c47\u70b9\u76f8\u8fde\u7684\u8fb9\uff0c\u56e0\u6b64$flow1$\u6700\u591a\u5c31\u662f\u8fd9\u4e9b\u8fb9\u7684\u4e0a\u9650\u548c\uff0c\u6b64\u65f6\u5728\u539f\u56fe\u4e2d\u53ef\u80fd\u4f1a\u6709\u8fb9\u662f\u8dd1\u4e0d\u6ee1\u7684\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u8ba1\u7b97$flow2$\u4e3a$flow1$\u8fd8\u80fd\u5411\u4e0a\u6d6e\u52a8\u7684\u6d41\u91cf\uff08\u8fd9\u91cc\u9700\u8981\u611f\u6027\u7406\u89e3\uff09\uff0c\u90a3\u4e48\u5982\u4f55\u6c42$flow2$\u5462\uff1f\u5176\u5b9e\u5411\u4e0a\u6d6e\u52a8\u67d0\u4e9b\u6d41\u91cf\u53ef\u4ee5\u7b49\u4ef7\u4e8e\u5728\u539f\u56fe\u4e2d\u8dd1\u51fa\u589e\u5e7f\u8def\uff08\u5f88\u663e\u7136\uff0c\u56e0\u4e3a\u6bcf\u8dd1\u51fa\u4e00\u4e2a\u589e\u5e7f\u8def\u5c31\u4f1a\u8ba9\u7b54\u6848$+1$\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8dd1\u4e00\u904d\u4ece\u539f\u56fe\u4e2d\u7684\u6e90\u70b9\u5230\u539f\u56fe\u4e2d\u7684\u6c47\u70b9\u7684\u6700\u5927\u6d41\uff0c\u5e76\u8bbe\u5176\u7b54\u6848\u4e3a$flow2$\u3002\n\n\u6b64\u65f6$ans=flow1+flow2$\u3002\n\n\u6ce8\u610f\u4e00\u70b9\uff0c\u5728\u8dd1\u539f\u56fe\u7684\u6700\u5927\u6d41\u65f6\u9700\u8981\u5220\u53bb\u4ece\u539f\u56fe\u6c47\u70b9\u5230\u539f\u56fe\u6e90\u70b9\u7684\u8fb9\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u6ca1\u6709\u5220\u53bb\uff0c\u5219\u4f1a\u5bfc\u81f4\u6b7b\u5faa\u73af\u3002\n\n\u4f46\u662f\u4e0e\u865a\u62df\u6e90\u70b9\u548c\u865a\u62df\u6c47\u70b9\u76f8\u8fde\u7684\u8fb9\u53ef\u4ee5\u4e0d\u5220\u53bb\uff0c\u56e0\u4e3a\u5728\u6c42\u7b2c\u4e00\u6b21\u6700\u5927\u6d41\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5c06\u8fd9\u4e9b\u8fb9\u201c\u69a8\u5e72\u201d\u4e86\uff08\u56e0\u4e3a\u662f\u6ee1\u6d41\uff09\uff0c\u5426\u5219\u6839\u672c\u4e0d\u5b58\u5728\u53ef\u884c\u6d41\u3002\n\n\u6b65\u9aa4\uff1a\n1. \u8dd1\u51fa\u4e00\u4e2a\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\uff0c\u5982\u679c\u6ee1\u6d41\u5219\u8bbe\u5176\u7b54\u6848\u4e3a$flow1$\uff0c\u5426\u5219\u4e0d\u5b58\u5728\u7b54\u6848\u3002\n2. \u5220\u53bb\u4ece\u539f\u56fe\u6c47\u70b9\u5230\u539f\u56fe\u6e90\u70b9\u7684\u8fb9\u3002\n3. \u8dd1\u4ece\u539f\u56fe\u6e90\u70b9\u5230\u539f\u56fe\u6c47\u70b9\u7684\u6700\u5927\u6d41\uff0c\u8bbe\u7b54\u6848\u4e3a$flow2$\uff0c\u5219\u603b\u7b54\u6848$ans=flow1+flow2$\u3002\n\n## \u56de\u5f52\u9898\u76ee\n\u8ba9\u6211\u4eec\u56de\u5f52\u9898\u76ee\uff0c~~\u5f88\u5bb9\u6613~~\u53ef\u4ee5\u770b\u51fa\u6765\u9898\u76ee\u7684\u5efa\u6a21\u65b9\u5f0f\uff1a\u5148\u865a\u62df\u4e00\u4e2a\u6e90\u70b9$s$\u548c\u4e00\u4e2a\u6c47\u70b9$t$\uff0c\u7136\u540e\u6bcf\u5929\u548c\u6bcf\u4f4d\u5c11\u5973\u5206\u522b\u5efa\u4e00\u4e2a\u70b9\uff0c$P_i$\u4e0e$Q_i$\u3002\u9996\u5148\u8fde\u63a5\u6240\u6709\u7684$Q_i$\u548c$t$\uff0c\u4e0b\u9650\u4e3a$G_i$\uff0c\u4e0a\u9650\u4e3a$inf$\u3002\u7136\u540e\uff0c\u8fde\u63a5$s$\u548c\u6240\u6709\u7684$P_i$\uff0c\u4e0b\u9650\u4e3a$0$\uff0c\u4e0a\u9650\u4e3a$D_i$\u3002\u5bf9\u4e8e\u7b2c$i$\u5929\uff0c\u53d6\u6750\u5bf9\u8c61\u4e3a$T_{i,j}$\uff0c\u53d6\u6750\u6570\u91cf\u4e3a$[L_{i,j},R_{i,j}]$\u65f6\uff0c\u8fde\u63a5$D_i$\u548c$T_{i,j}$\uff0c\u4e0b\u9650\u4e3a$L$\uff0c\u4e0a\u9650\u4e3a$T$\u3002\u8fd9\u6837\uff0c\u5c31\u5b8c\u6210\u4e86\u539f\u56fe\u7684\u5efa\u6a21\u3002\n\n\u7136\u540e\u5c31\u6309\u7167\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\u7684\u5efa\u6a21\u7ee7\u7eed\u5c31ok\u4e86\u3002\n\n## \u4ee3\u7801\n\u6ce8\u610f\uff1a\u5c11\u5973\u7684\u7f16\u53f7\u662f\u4ece$0$\u5f00\u59cb\u7684\uff0c\u800c\u4e14\u6709\u591a\u7ec4\u6570\u636e\uff0c\u8bb0\u5f97\u6e05\u96f6\u6570\u7ec4\u4e0e\u53d8\u91cf\n```\n#include<stdio.h>\n#include<queue>\n#include<string.h>\n#define inf 2147483647\nusing namespace std;\nconst int maxn=1000005,maxm=1000005;\nint i,j,k,m,n,s,t,s1,t1,s2,t2,e,flg,ans,sum,anss;\nint start[maxn],to[maxm],then[maxm],worth[maxm],rev[maxm],dep[maxn],vis[maxn],in[maxn],out[maxn],G[maxn];\nqueue<int>q;\ninline int min(int a,int b){\n\treturn a<b? a:b;\n}\ninline void add(int x,int y,int z,int r){\n\tthen[++e]=start[x],start[x]=e,to[e]=y,worth[e]=z,rev[e]=r;\n}\ninline void addedge(int x,int y,int z){\n\tadd(x,y,z,e+2),add(y,x,0,e);\n}\nvoid bfs(){\n\twhile(!q.empty())\n\t\tq.pop();\n\tfor(int i=1;i<maxn;i++)\n\t\tdep[i]=inf,vis[i]=0;\n\tdep[s]=0;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvis[x]=0;\n\t\tfor(int i=start[x];i;i=then[i]){\n\t\t\tint y=to[i];\n\t\t\tif(worth[i]&&dep[y]>dep[x]+1){\n\t\t\t\tdep[y]=dep[x]+1;\n\t\t\t\tif(vis[y]==0){\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t\tq.push(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint dfs(int x,int flw){\n\tif(x==t){\n\t\tflg=1,ans+=flw;\n\t\treturn flw;\n\t}\n\tint rest=flw;\n\tfor(int i=start[x];i;i=then[i]){\n\t\tint y=to[i];\n\t\tif(worth[i]&&dep[y]==dep[x]+1){\n\t\t\tint newflw=dfs(y,min(rest,worth[i]));\n\t\t\tif(newflw>0){\n\t\t\t\trest-=newflw;\n\t\t\t\tworth[i]-=newflw,worth[rev[i]]+=newflw;\n\t\t\t\tif(rest==0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse dep[y]=0;\n\t\t}\n\t}\n\treturn flw-rest;\n}\nint Dinic(){\n\tans=0;\n\twhile(1){\n\t\tbfs();\n\t\tif(dep[t]==inf)\n\t\t\tbreak;\n\t\tflg=1;\n\t\twhile(flg){\n\t\t\tflg=0;\n\t\t\tdfs(s,inf);\n\t\t}\n\t}\n\treturn ans;\n}\nint main(){\n\twhile(~scanf(\"%d%d\",&n,&m)){\n\t\tsum=e=0;\n\t\tmemset(start,0,sizeof(start));\n\t\tmemset(in,0,sizeof(in));\n\t\tmemset(out,0,sizeof(out));\n\t\ts1=n+m+1,t1=n+m+2,s2=n+m+3,t2=n+m+4;\n\t\ts=s2,t=t2;\n\t\tfor(i=1;i<=m;i++){\n\t\t\tscanf(\"%d\",&G[i]);\n\t\t\tin[t1]+=G[i],out[n+i]+=G[i];\n\t\t\taddedge(n+i,t1,inf-G[i]);\n\t\t}\n\t\tfor(i=1;i<=n;i++){\n\t\t\tint C,D,T,L,R;\n\t\t\tscanf(\"%d%d\",&C,&D);\n\t\t\taddedge(s1,i,D);\n\t\t\tfor(j=1;j<=C;j++){\n\t\t\t\tscanf(\"%d%d%d\",&T,&L,&R);\n\t\t\t\tT++;\n\t\t\t\tin[n+T]+=L,out[i]+=L;\n\t\t\t\taddedge(i,n+T,R-L);\n\t\t\t}\n\t\t}\n\t\tfor(i=1;i<=n+m+2;i++){\n\t\t\tif(in[i]>out[i])\n\t\t\t\taddedge(s,i,in[i]-out[i]),sum+=in[i]-out[i];\n\t\t\telse addedge(i,t,out[i]-in[i]);\n\t\t}\n\t\taddedge(t1,s1,inf);\n\t\tif(Dinic()!=sum){\n\t\t\tputs(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tanss=worth[e];\n\t\tworth[e]=worth[rev[e]]=0;\n\t\ts=s1,t=t1;\n\t\tanss+=Dinic();\n\t\tprintf(\"%d\\n\\n\",anss);\n\t}\n\treturn 0;\n}\n```\n\n## \u6269\u5c55-\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\n\u6211\u4eec\u770b\u5230\u6709\u6e90\u70b9\u548c\u6c47\u70b9\u7684\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\uff0c\u5373\u5728\u53ef\u884c\u6d41\u7684\u57fa\u7840\u4e0a\u8981\u6c42\u6d41\u91cf\u6700\u5c0f\u3002\n\n\u6211\u4eec\u5148\u8dd1\u4e00\u904d\u53ef\u884c\u6d41\uff0c\u8bbe\u53ef\u884c\u6d41\u4e3a$flow1$\n\n\u5219\u6700\u5c0f\u6d41\u4e3a\u53ef\u884c\u6d41$-$\u8fd8\u80fd\u5411\u4e0b\u6d6e\u52a8\u7684\u6d41\u91cf$flow2$\n\n\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd8\u80fd\u5411\u4e0b\u6d6e\u52a8\u7684\u6d41\u91cf\u5c31\u662f\u4ece\u539f\u56fe\u6c47\u70b9\u5230\u539f\u56fe\u6e90\u70b9\u7684\u6700\u5927\u6d41\uff08\u611f\u6027\u7406\u89e3\uff09\u3002\n\n\u56e0\u6b64\u6b65\u9aa4\u4e3a\uff1a\n1. \u8dd1\u51fa\u4e00\u4e2a\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\uff0c\u5982\u679c\u6ee1\u6d41\u5219\u8bbe\u5176\u7b54\u6848\u4e3a$flow1$\uff0c\u5426\u5219\u4e0d\u5b58\u5728\u7b54\u6848\u3002\n2. \u5220\u53bb\u4ece\u539f\u56fe\u6c47\u70b9\u5230\u539f\u56fe\u6e90\u70b9\u7684\u8fb9\u3002\n3. \u8dd1\u4ece\u539f\u56fe\u6c47\u70b9\u5230\u539f\u56fe\u6e90\u70b9\u7684\u6700\u5927\u6d41\uff0c\u8bbe\u7b54\u6848\u4e3a$flow2$\uff0c\u5219\u603b\u7b54\u6848$ans=flow1-flow2$\u3002\n",
        "postTime": 1587306844,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5192 \u3010Zoj3229 Shoot the Bullet|\u4e1c\u65b9\u6587\u82b1\u5e16|\u3010\u6a21\u677f\u3011\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\nAya\u8d85\u53ef\u7231\u7684~ [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5192)\n\n$\\qquad$\u9898\u610f\u975e\u5e38\u6e05\u6670\uff1a\u5171\u6709\u82e5\u5e72\u7ec4\u6570\u636e$( \\leq 10)$\u3002\u6bcf\u7ec4\u6570\u636e\u6587\u6587\u8981\u4ece$m$\u540d$\\stackrel{BBA}{\\text{\u5c11\u5973}}$\u4e2d\u6536\u96c6$n$\u5929\u7684\u7167\u7247\uff0c\u5176\u4e2d\u7b2c$i$\u540d\u5c11\u5973\u5171\u8981\u6536\u96c6**\u81f3\u5c11**$G_i$\u5f20\u3002\n\n$\\qquad$\u6587\u6587\u7b2c$i$\u5929\u53ef\u4ee5\u62cd\u6444$D_i$\u5f20\u7167\u7247\uff0c\u53d6\u6750\u8303\u56f4\u4e3a$C_i$\u4f4d\u7f16\u53f7\u4e3a$T_{i,j}$\u7684$\\stackrel{BBA}{\\text{\u5c11\u5973}}$\uff0c\u5176\u4e2d\u7b2c$j$\u4f4d$\\stackrel{BBA}{\\text{\u5c11\u5973}}$\u9700\u8981\u62cd\u6444$[L_{i,j},R_{i,j}]$\u5f20\u7167\u7247\u3002\n\n$\\qquad$\u73b0\u5728\u6c42\u6587\u6587$n$\u5929\u6700\u591a\u6536\u96c6\u591a\u5c11\u5f20\u7167\u7247\u3002\u5982\u679c\u65e0\u89e3\uff0c\u8f93\u51fa$-1$\u3002\n\n$n\\leq365,m\\leq 1000,G_x\\in[0,10^5],(1\\leq C\\leq 300,0\\leq D\\leq30000),(0\\leq T_i<m,0\\leq L_{i,j} \\leq R_{i,j}\\leq 100)$\n\n## \u9898\u89e3\n\n(**\u524d\u7f6e\u77e5\u8bc6**\uff1a\u7f51\u7edc\u6d41\u6700\u5927\u6d41\u3002)\n\n\u867d\u7136\u9898\u76ee\u8981\u6c42\u6709\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u7684\u6700\u5927\u6d41\uff0c\u4f46\u5148\u8ba9\u6211\u4eec\u8003\u8651**\u65e0\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\u3002\n\n### \u65e0\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n\u5b83\u7684\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\uff1a\u4e00\u5f20$n$\u4e2a\u70b9$m$\u6761\u8fb9\u7f51\u7edc\u6d41\uff0c\u5176\u4e2d\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a\u6d41\u91cf\u9650\u5236$[L_i,R_i]$\u8868\u793a\u8fd9\u6761\u8fb9**\u6d41\u91cf\u7684\u8303\u56f4**\u3002\u56e0\u4e3a\u6ca1\u6709\u6e90\u6c47\uff0c\u6240\u4ee5\u8fd9\u5f20\u7f51\u7edc\u6d41\u9700\u8981\u6ee1\u8db3**\u6d41\u5165\u6bcf\u4e2a\u70b9\u7684\u6d41\u91cf\u603b\u91cf$=$\u6d41\u51fa\u7684\u6d41\u91cf\u603b\u91cf**\u3002\n\n\u65e2\u7136\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e0a\u4e0b\u754c\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u6ee1\u8db3\u5b83\u7684\u4e0b\u754c\u597d\u4e86\u3002\u5373**\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u5148\u586b\u5145$\\mathbf{L_i}$\u7684\u6d41\u91cf**\u3002\u4f46\u662f\u8fd9\u6837\u663e\u7136\u6d41\u91cf\u4e0d\u5e73\u8861\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6709\u7684\u70b9\u51ed\u7a7a\u6d41\u51fa\u4e86\u6d41\u91cf\uff0c\u4f46\u662f\u53c8\u6709\u6d41\u91cf\u6d41\u5165\u70b9\u4e4b\u540e\u6d88\u5931\u4e86\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u53ef\u4ee5\u60ca\u559c\u7684\u53d1\u73b0\uff0c\u95ee\u9898\u5df2\u7ecf\u8f6c\u5316\u4e3a\u4e86\uff1a\n\n\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c$\\mathbf{W_i}$\u8868\u793a\u5f53\u524d\u5728\u8fd9\u4e2a\u70b9\u4e0a**\u79ef\u84c4/\u6b20\u7f3a\u7684\u6d41\u91cf**\uff0c\u540c\u65f6\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a\u6d41\u91cf\u9650\u5236$\\mathbf{[0,R_{i}-L_{i}]}$\u3002\u73b0\u5728\u8981\u4f60\u6c42\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u79ef\u84c4/\u6b20\u7f3a\u7684\u6d41\u91cf\u5168\u90e8\u7528\u5b8c\uff0c\u5e76\u4e14\u6bcf\u6761\u8fb9\u6ee1\u8db3\u6d41\u91cf\u9650\u5236\u3002\n\n\u5982\u679c\u6211\u4eec\u518d\u6539\u4e00\u4e0b\u9898\u9762\uff1a\u6709\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9$S$\u5411\u6ee1\u8db3$W_i>0$\u7684\u70b9\u8fde\u4e86\u4e00\u6761\u5bb9\u91cf\u4e3a$|W_i|$\u7684\u8fb9\u3002\u540c\u65f6\u53c8\u6709\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9$T$\u4f7f\u5f97\u6240\u6709\u6ee1\u8db3$W_i<0$\u7684\u8fb9\u90fd\u6709\u4e00\u6761\u5bb9\u91cf\u4e3a$|W_i|$\u8fde\u5411\u4e86$T$\u3002\u8fd9\u6761\u9898\u76ee\u662f\u4e0d\u662f\u975e\u5e38\u50cf\u6709\u6e90\u6c47\u7684\u7f51\u7edc\u6d41\u6700\u5927\u6d41\uff1f\n\n**\u8ba9\u6211\u4eec\u91cd\u65b0\u68b3\u7406\u4e00\u4e0b\u4e0a\u8ff0\u5185\u5bb9**:\u6211\u4eec\u5f3a\u5236\u7ed9\u6bcf\u6761\u8fb9\u6dfb\u4e0a\u4e86\u4e00\u4e9b\u6d41\uff0c\u6216\u8005\u8bf4\u5c06\u8fd9\u6761\u8fb9\u7684\u6d41\u91cf\u8303\u56f4\u53d8\u4e3a\u4e86$[0,R_i-L_i]$\u7684\u666e\u901a\u7248\u6700\u5927\u6d41\u3002\u8fd9\u6837\u505a\u4f1a\u9020\u6210\u4e00\u4e9b\u70b9\u4e0a\u591a\u51fa\u6216\u6b20\u7f3a\u4e00\u4e9b\u6d41\u91cf\u3002\u8fd9\u65f6\u6211\u4eec\u5c06\u6b20\u7684\u6d41\u91cf\u5f53\u4f5c\u662f$S$\u7ed9\u4ed6\u4eec\u7684\u6d41\u91cf\uff0c\u591a\u51fa\u6765\u7684\u6d41\u91cf\u8981\u8fd8\u7ed9$T$\uff0c\u6211\u4eec\u5c31\u80fd\u7528\u6700\u5927\u6d41\u7ed9\u4ed6\u4eec\u758f\u901a\u758f\u901a\u7ecf\u8109\uff0c\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\u3002**\u6b64\u65f6\u6211\u4eec\u80fd\u591f\u4f7f\u5f97\u6bcf\u6761\u8fb9\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\u5e76\u4e14\u6d41\u91cf\u5e73\u8861**\u3002\n\n\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u6761\u8fb9$(u,v,w)$\uff0c\u6211\u4eec\u90fd\u8ba9\u5b83\u7684\u8d77\u59cb\u70b9$u$\u201c\u900f\u652f\u201d\u4e86$w$\u7684\u6d41\u91cf\uff0c\u800c\u7ed9\u7ec8\u6b62\u70b9$v$\u201c\u501f\u4e86\u201d$w$\u6d41\u91cf\uff0c\u56e0\u6b64\u6574\u5f20\u7f51\u7edc\u4e0a\u7684\u6d41\u91cf\u603b\u548c\u4e3a$0$\u3002\n\n\u4f46\u662f\u5148\u522b\u9ad8\u5174\uff0c\u6211\u4eec\u8981\u89e3\u51b3\u7684\u662f**\u6709\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\u3002\n\n### \u6709\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n**\u6709\u6e90\u6c47**\u8fd9\u4e2a\u6761\u4ef6\u7ed9\u4e86\u6211\u4eec\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f\u4ed6\u7ed9\u4e86\u6211\u4eec\u6e90\u70b9$s$\u548c\u6c47\u70b9$t$\uff0c\u5176\u4e2d$s$\u53ea\u8f93\u51fa\u6d41\u91cf\uff0c\u800c$t$\u53ea\u63a5\u53d7\u6d41\u91cf\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u70b9\uff0c\u6211\u4eec\u4e0d\u8981\u6c42\u5b83\u4eec\u6d41\u5165\u7684\u91cf=\u6d41\u51fa\u7684\u91cf\u3002\u4f46\u662f\u5982\u4f55\u628a\u5b83\u8f6c\u5316\u4e3a\u65e0\u6e90\u6c47\u7684\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u5462\uff1f\n\n\u5176\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u4e00\u6761\u8fb9$t\\to s$\uff0c\u5bb9\u91cf\u4e3a$[0,+\\infty]$\uff0c\u8fd9\u6837\u5c31\u80fd\u4f7f\u5f97$S$\u6d41\u51fa\u7684\u6d41\u91cf\u7531$T$\u63d0\u4f9b\uff0c$T$\u6d41\u5165\u7684\u91cf\u7531$S$\u63d0\u4f9b\uff0c\u8fdb\u800c\u8fbe\u5230\u6536\u652f\u5e73\u8861\u3002\u8fd9\u6837\u5b50\u8dd1\u4e00\u904d\u65e0\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\uff0c\u5c31\u53ef\u4ee5\u4f7f\u5f97\u5230\u4e00\u7ec4\u53ef\u884c\u89e3\u4e86\u3002\u5176\u4e2d\uff0c\u5728$t\\to s$\u8fd9\u6761\u8fb9\u4e0a**\u6d41\u8fc7\u7684**\u6d41\u91cf\u5c31\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u65b9\u6848\u7684\u7b54\u6848\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728$t\\to s$\u8fd9\u6761\u8fb9\u6d41\u8fc7\u7684\u6d41\u91cf\u5c31\u662f\u5b83\u7684\u53cd\u5411\u8fb9\uff08\u5373\u6b8b\u91cf\u7f51\u7edc\u7684\u5bf9\u5e94\u8fb9\uff09\u7684\u6d41\u91cf\u3002\n\n### \u6709\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\n\u4f46\u662f\u6211\u4eec\u7684\u95ee\u9898\u662f\u8981\u6c42\u6700\u5927\u6d41\u5440\uff01\u4e0d\u8981\u614c\uff0c\u81f3\u5c11\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u4e00\u79cd\u5408\u6cd5\u7684\u60c5\u51b5\u4e86\u3002\u6700\u5927\u6d41\u7b97\u6cd5\u9700\u8981\u6269\u5927\u7b54\u6848\u600e\u4e48\u529e\uff1f\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u8dd1\u589e\u5e7f\u8def\u3002\u800c\u6709\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\u4e5f\u4e0d\u4f8b\u5916\uff08\u56e0\u4e3a\u6211\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u6700\u5927\u6d41\u95ee\u9898\uff0c\u4e0d\u8fc7\u662f\u591a\u51fa\u4e86\u4e24\u4e2a\u7279\u6b8a\u70b9$S$\u548c$T$\uff09\u3002\u5982\u679c\u6211\u4eec\u4ece$s$\u5411$t$\u589e\u5e7f\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\n\n\u8ba9\u6211\u4eec\u91cd\u65b0\u56de\u5fc6\u4e00\u4e0b\u589e\u5e7f\u8def\u7684\u6982\u5ff5\uff1a\u4ece\u70b9$s$\u5230\u70b9$t$\u589e\u5e7f\uff0c\u5c31\u662f\u5c3d\u53ef\u80fd\u5730\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u5bfb\u627e\u4e00\u6761$s\\to t$\u7684\u9053\u8def\u5e76\u8f6c\u5316\u4e3a$s\\to t$\u7684\u6d41\u91cf\u3002\n\n\u7531\u4e8e$S$\u6ca1\u6709\u5165\u8fb9\uff0c\u800c$T$\u6ca1\u6709\u51fa\u8fb9\uff0c\u56e0\u6b64\u589e\u5e7f\u8def\u4e0d\u4f1a\u7ecf\u8fc7$S,T$\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u5bfc\u81f4\u7ea6\u675f\u6761\u4ef6\u5931\u6548\uff08\u5373\u59cb\u7ec8\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\uff09\u3002\n\n### \u5efa\u56fe\n\n\u8bf4\u4e86\u90a3\u4e48\u591a\uff0c\u5e94\u8be5\u56de\u5230\u9898\u76ee\u4e86\u3002\u8bb0$D'_i$\u8868\u793a\u6bcf\u4e00\u5929\u5bf9\u5e94\u7684\u70b9\uff0c$G'_i$\u4e3a\u6bcf\u4e00\u4f4d\u5c11\u5973\u5bf9\u5e94\u7684\u70b9\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u6e90\u70b9$s$\uff0c\u7531\u4e8e\u6bcf\u4e00\u5929\u62cd\u6444\u7684\u7167\u7247\u6570\u91cf\u4e0d\u8d85\u8fc7$D_i$\uff0c\u56e0\u6b64\u4ece$s$\u5411$D_i$\u8fde\u4e0a\u7ea6\u675f\u4e3a$[0,D_i]$ \u7684\u8fb9\u3002\u5bf9\u4e8e\u7b2c$i$\u5929\uff0c\u6211\u4eec\u4ece\u8be5\u5929\u5411\u5c11\u5973$T_{i,j}$\u8fde\u4e0a\u8fb9$D'_i\\to G'_{T_{i,j}}$\uff0c\u7ea6\u675f\u6761\u4ef6\u4e3a$[L_{i,j},R_{i,j}]$\u3002\u6700\u540e\uff0c\u6bcf\u540d\u5c11\u5973\u9700\u8981\u5411\u6c47\u70b9$T$\u8fde\u8fb9$G'_i\\to T$\uff0c\u7ea6\u675f\u6761\u4ef6\u4e3a$[G_i,+\\infty]$\u3002\u8dd1\u4e00\u904d\u6709\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n**\u603b\u7ed3**\uff1a\u8fd9\u6761\u9898\u76ee\u7684\u6d41\u7a0b\u4e3a\u8bfb\u5165\u8fb9\uff0c\u5904\u7406\u8fb9\uff0c\u8dd1\u666e\u901a\u7248\u6700\u5927\u6d41\u3002\u56e0\u6b64\u7f16\u5199\u96be\u5ea6\u5e76\u4e0d\u662f\u5f88\u5927\u3002\n\n\n### \u6269\u5c55\uff1a\u5173\u4e8e\u6700\u9ad8\u6807\u53f7\u9884\u7559\u63a8\u8fdb\uff08HLPP\uff09\n\n\u5f88\u663e\u7136\uff0c\u4e0a\u9762\u5229\u7528\u8d85\u7ea7\u6e90\u6c47\u70b9\u758f\u901a\u8fb9\u6743\u8fbe\u5230\u8fdb\u51fa\u5e73\u8861\u7684\u7b97\u6cd5\u53ef\u4ee5\u7528$\\text{HLPP}$\u5b9e\u73b0\u3002\u9884\u7559\u63a8\u8fdb\u7b97\u6cd5\u5b9e\u8d28\u5c31\u662f\u4ece\u6bcf\u4e2a\u70b9\u5411\u5176\u4ed6\u70b9\u201c\u63a8\u9001\u201d\u6d41\u91cf\uff0c\u8fd9\u521a\u597d\u7b26\u5408\u6211\u4eec\u7684\u610f\u56fe\u3002\n\n\u4e0d\u8fc7\uff0c\u7531\u4e8e\u4f7f\u7528HLPP\u7b97\u6cd5\u6709\u70b9\u5927\u70ae\u6253\u868a\u5b50\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528\u7684$\\text{Dinic}$\u7b97\u6cd5\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n#define up(l,r,i) for(int i=l;i<=r;i++)\n#define dn(l,r,i) for(int i=l;i>=r;i--)\nusing namespace std;\n\ntypedef long long LL;\nconst int INF =2147483647;\nint qread(){\n    int w=1,c,ret;\n    while((c=getchar())> '9'||c< '0')\n    w=(c=='-'?-1:1); ret=c-'0';\n    while((c=getchar())>='0'&&c<='9')\n    ret=ret*10+c-'0';\n    return ret*w;\n}\nconst int MAXN =365+3,MAXM=1e3+3,MAXC=300+3,MAXT=MAXN*MAXC;\nint head[MAXN+MAXM],ver[MAXT*2],nxt[MAXT*2],val[MAXT*2],tot;\nvoid _add(int u,int v,int w){\n    ver[++tot]=v,nxt[tot]=head[u],val[tot]=w,head[u]=tot;\n}\nvoid  add(int u,int v,int w){\n    _add(u,v,w),_add(v,u,0);\n}\nint F[MAXT],T[MAXT],L[MAXT],R[MAXT];\nint _D[MAXN],_G[MAXM],tp1,tp2;\nint G[MAXN],C[MAXN],D[MAXN],n,m;\nint W[MAXN+MAXM],dis[MAXN+MAXM];\nbool bfs(int s,int t){  //Dinic\u7b97\u6cd5\u7684\u5bbd\u641c\u90e8\u5206\n    queue <int> q; q.push(t);\n    up(1,tp1,i) dis[i]=INF; dis[t]=1;\n    while(!q.empty()){\n        int u=q.front(); q.pop();\n        for(int i=head[u];i;i=nxt[i]){\n            int v=ver[i]; if(!val[i^1]||dis[v]!=INF) continue;\n            else dis[v]=dis[u]+1,q.push(ver[i]);\n        }\n    }\n    return dis[s]!=INF;\n}\nint dfs(int s,int t,int u,int f){  //Dinic\u7b97\u6cd5\u7684\u6df1\u641c\u90e8\u5206\n    if(u==t) return f; int ret=0;\n    for(int i=head[u];i;i=nxt[i]){\n        if(!val[i]||dis[ver[i]]!=dis[u]-1) continue;\n        int v=ver[i],flw=min(f,val[i]);\n        int res=dfs(s,t,v,flw);\n        ret+=res,val[i]-=res,val[i^1]+=res,f-=res;\n        if(ret==f) return f;\n    }\n    return ret;\n}\nint calc(int s,int t){  //\u4e3b\u7b97\u6cd5\u7247\u6bb5\n    memset(W,0,sizeof(W));\n    up(1,tp2,i){        //\u5bf9\u8f93\u5165\u7684\u8fb9\u8fdb\u884c\u5904\u7406\n        int u=F[i],v=T[i],l=L[i],r=R[i];\n        add(u,v,r-l),W[u]-=l,W[v]+=l;\n    }\n    int _s=++tp1,_t=++tp1,sum=0,res=0,ret=0;\n    add(t,s,INF); up(1,tp1,i) if(W[i]>0) //\u8fde\u4e0a\u8d85\u7ea7\u6e90\u70b9\u548c\u6c47\u70b9\n    add(_s,i,W[i]),sum+=W[i]; else if(W[i]<0) add(i,_t,-W[i]);\n    while(bfs(_s,_t)) res+=dfs(_s,_t,_s,INF);\n    if(res!=sum) return -1;             //\u5224\u65ad\u53ef\u884c\u6027(\u5373\u662f\u5426\u6536\u652f\u5e73\u8861)\n    while(bfs( s, t)) ret+=dfs( s, t, s,INF);\n    return ret; //\u4eces->t\u8dd1\u6b8b\u91cf\u7f51\u7edc\u6c42\u5f97\u7684\u5c31\u662f\u7b54\u6848\n}\nint main(){\n    while(~scanf(\"%d%d\",&n,&m)){\n        tp1=tp2=0; memset(head,0,sizeof(head)),tot=1;\n        int s=++tp1,t=++tp1; up(1,n,i) _D[i]=++tp1; up(1,m,i) _G[i]=++tp1;\n        up(1,m,i){  //\u5bf9\u4e8e\u6bcf\u4e2aG[i]\uff0c\u8fde\u63a5_G[i]\u5230t\u7684\u8fb9\u3002\n            G[i]=qread(),F[++tp2]=_G[i],\n            T[tp2]=t,L[tp2]=G[i],R[tp2]=INF;\n        }\n        up(1,n,i){  //\u8bfb\u5165\u6bcf\u4e00\u5929\n            int _t,_l,_r; C[i]=qread(),D[i]=qread();\n            up(1,C[i],j) _t=qread()+1,_l=qread(),_r=qread(),\n            F[++tp2]=_D[i],T[tp2]=_G[_t],L[tp2]=_l,R[tp2]=_r;\n            //\u5bf9\u4e8e\u6bcf\u4e00\u5929\u7684\u6bcf\u4e00\u4e2a\u5c11\u5973\uff0c\u8fde\u63a5\u5bf9\u5e94\u5929\u4e0e\u5bf9\u5e94\u5c11\u5973\u3002\n            F[++tp2]=s,T[tp2]=_D[i],L[tp2]=0,R[tp2]=D[i];\n            //\u5c06s\u8fde\u63a5\u4e0a\u6bcf\u4e00\u5929\u3002\n        }\n        printf(\"%d\\n\\n\",calc(s,t));\n    }\n    return 0;\n}\n```\n\n\n## \u540e\u8bb0\n\n\u660e\u660e\u8bf4\u597d\u7684\u662f\u6a21\u677f\u9898\uff0c\u7136\u800c\u5e76\u4e0d\u662f\u8d64\u88f8\u88f8\u7684\u677f\u9898\uff08\u867d\u7136\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u6765\u662f\u677f\u5b50\uff09\uff0c\u6240\u4ee5\u8c03\u8bd5\u8d77\u6765\u633a\u9ebb\u70e6\u7684\u3002\u4f46\u53ea\u8981\u4f60\u6709\u8db3\u591f\u624e\u5b9e\u7684\u6700\u5927\u6d41\u529f\u5e95\uff0c\u8fd9\u6761\u9898\u76ee\u5bf9\u4e8e\u4f60\u5c31\u662f\u5c0f\u83dc\u4e00\u789f\u3002\n\n\u53e6\u5916\uff0c\u8981\u6ce8\u610f\u5c11\u5973\u7684\u4e0b\u6807\u4ece$0$\u5f00\u59cb\u3002\u867d\u7136\u9898\u76ee\u660e\u786e\u6307\u51fa\uff0c\u4f46\u8fd8\u662f\u8981\u5c0f\u5fc3\u6210\u4e3a\u661f\u9645\u73a9\u5bb6orz\u3002\n\n~~\u5176\u5b9e\u6211\u505a\u8fd9\u6761\u9898\u76ee\u7684\u52a8\u673a\u5b8c\u5168\u662f\u56e0\u4e3a\u6587\u6587~~\n\n$$\\Large\\color{white}\\text{\u9e26\u5929\u72d7\u662f\u5375\u751f\u7684\uff01\uff01\uff01}$$",
        "postTime": 1582891336,
        "uid": 68344,
        "name": "\u79bb\u6563\u5c0f\u6ce2\u53d8\u6362\u00b0",
        "ccfLevel": 9,
        "title": "\u3010\u9898\u89e3\u3011P5192 \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41"
    },
    {
        "content": "\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u5982\u6709\u4e0d\u5b8c\u5584\u7684\u5730\u65b9\uff0c\u671b\u5404\u4f4d dalao \u4eec\u6307\u51fa\u3002\n\n## 1.  \u77e5\u8bc6\u50a8\u5907\n\u7f51\u7edc\u6d41 + \u6700\u5927\u6d41\u3002\n\n\uff08\u5982\u679c\u5404\u4f4d dalao \u5df2\u7ecf\u6eda\u74dc\u70c2\u719f\uff0c\u8bf7\u8df3\u8fc7\uff09\u3002\n\n#### 1. \u7f51\u7edc\u6d41\n\n\u901a\u4fd7\u7684\u8bb2\uff0c\u7f51\u7edc\u6d41\u5c31\u662f\u4e00\u4e2a\u6c34\u7cfb\uff0c\u6709\u6e90\u70b9\uff08\u6c34\u5e93\uff0c S \uff09\u548c\u6c47\u70b9\uff08\u5927\u6d77\uff0c T \uff09\uff0c\u4e2d\u95f4\u6709\u5f88\u591a\u8282\u70b9\uff0c\u4e2d\u95f4\u7684\u8282\u70b9\u4e0d\u50a8\u5b58\u6d41\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e2d\u8f6c\u7ad9\u3002\n\n\u6bcf\u4e00\u6761\u8fb9\u6709\u4e00\u4e2a\u5bb9\u91cf\uff08\u6cb3\u9053\u5bbd\u5ea6\uff09\uff0c\u4e5f\u6709\u4e00\u4e2a\u6d41\u91cf\u3002\u663e\u7136\u6d41\u91cf\u5c0f\u4e8e\u7b49\u4e8e\u5bb9\u91cf\u3002\n\n\u5982\u56fe\u662f\u4e00\u5f20\u7f51\u7edc\u6d41\u3002\n\n![\u4e00\u5f20\u7f51\u7edc\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/qfa0af16.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5df2\u7ecf\u6709\u6d41\u91cf\u7684\u56fe\u88ab\u79f0\u4e3a\u6b8b\u7559\u7f51\u7edc\u3002\n\n\u6ce8\u610f\uff1a\u6b8b\u7559\u7f51\u7edc\u4e2d\uff0c\u6709\u53cd\u5411\u8fb9\uff0c\u800c\u4e00\u822c\u8ba4\u4e3a\u539f\u56fe\u4e2d\u6ca1\u6709\u53cd\u5411\u8fb9\u3002\n\u53cd\u5411\u8fb9\u7684\u5bb9\u91cf\u662f\u6b63\u5411\u8fb9\u7684\u6d41\u91cf\u3002\n\n\uff08\u53ef\u4ee5\u8fd9\u4e48\u8ba4\u4e3a\uff0c\u53cd\u5411\u8fb9\u662f\u7528\u6765\u9000\u56de\u6b63\u5411\u8fb9\u7684\u6d41\u91cf\uff0c\u800c\u6700\u591a\u5c31\u9000\u56de\u539f\u6765\u6d41\u8fc7\u7684\u91cf\uff09\n\n\u521a\u624d\u90a3\u5f20\u56fe\u7684\u6b8b\u7559\u7f51\u7edc\u662f\u5982\u4e0b\uff1a\n\n![\u6b8b\u7559\u7f51\u7edc](https://cdn.luogu.com.cn/upload/image_hosting/135e9u9d.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u589e\u5e7f\u8def\uff1a\u6cbf\u7740\u5bb9\u91cf\u5927\u4e8e0\u7684\u8fb9\uff0c\u4ece S \u5230\u8fbe T \u7684\u8def\u5f84\uff0c\n\n\uff08\u8fd9\u4e48\u591a\u5df2\u7ecf\u8db3\u591f\uff0c\u8be6\u7ec6\u89e3\u91ca\u8bf7\u89c1\u767e\u5ea6 ~~\u9003~~ \uff09\n\n#### 2. \u6700\u5927\u6d41\n\n\u6211\u4eec\u73b0\u5728\u60f3\u8981\u6c42\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u80fd\u6d41\u7684\u6700\u5927\u503c\u3002\n\n\u663e\u7136\uff0c\u4e0a\u9762\u7684\u90a3\u5f20\u56fe\u4e0d\u662f\u6700\u5927\u6d41\u3002\n\n\u6700\u5927\u6d41\u5e94\u8be5\u662f\u8fd9\u6837\u3002\n\n![\u6700\u5927\u6d41](https://cdn.luogu.com.cn/upload/image_hosting/s9ngtdta.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n#### 3. Edmonds-Karp \u4e0e Dinic \u2014\u2014\u6c42\u6700\u5927\u6d41\u7684\u7b97\u6cd5\n\nEdmonds-Karp \u7684\u4e3b\u8981\u601d\u8def\u662f\u6bcf\u6b21\u5bfb\u627e\u4e00\u6761\u589e\u5e7f\u8def\u3002\n\n\u539f\u7406\u53ef\u4ee5\u7406\u89e3\u4e3a\u641c\u7d22\uff0c\u76f4\u5230\u6d41\u4e0d\u8fc7\u53bb\u4e3a\u6b62\u3002\n\nCode\uff1a\n\n``` cpp\n\nqueue<int> q;\n\nbool bfs()// \u5e7f\u641c\n{\n\tfor (int i=0;i<N;++i) vis[i]=0;\n\td[S]=1e8;\n\twhile (q.size()) q.pop();\n\tvis[S]=1;\n\tq.push(S);\n\twhile (q.size())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor (int i=h[x];i!=-1;i=ne[i])\n\t\t{\n\t\t\tif (vis[e[i]]) continue;\n\t\t\tif (w[i]!=0)\n\t\t\t{\n\t\t\t\tvis[e[i]]=1;\n\t\t\t\td[e[i]]=min(d[x],w[i]);\n\t\t\t\tpre[e[i]]=i;//\u8bb0\u5f55\u524d\u9a71\n\t\t\t\tif (e[i]==T) return true;\n\t\t\t\tq.push(e[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nint Edmonds_Karp()\n{\n\tint r=0;\n\twhile (bfs())\n\t{\n\t\tint f=d[T];\n\t\tfor (int i=T;i!=S;i=e[pre[i]^1])\n\t\t{\n\t\t\tw[pre[i]]-=f;\n\t\t\tw[pre[i]^1]+=f;//\u53cd\u5411\u8fb9\u52a0\u4e0a\u5bf9\u5e94\u6d41\u91cf\n\t\t}\n\t\tr+=f;\n\t}\n\treturn r;\n}\n```\nDinic \u662f EK \u7684\u4f18\u5316\uff0c\u4e3b\u8981\u601d\u60f3\u662f\u5efa\u7acb\u5206\u5c42\u56fe\uff0c\u4e00\u6b21\u627e\u591a\u4e2a\u589e\u5e7f\u8def\n\nCode\uff1a\n\n``` cpp\nqueue <int> q;\n\nbool bfs()\n{\n    memset(d,-1,sizeof d);\n    while (q.size()) q.pop();\n    q.push(S);\n    d[S]=0;cur[S]=h[S];//cur \u662f\u6307\u5f53\u524d\u5230\u7684\u51fa\u8fb9\n    while (q.size())\n    {\n        int t=q.front();q.pop();\n        \n        for (int i=h[t];i!=-1;i=ne[i])\n        {\n\t\t\tif (d[e[i]]==-1&&w[i])\n\t\t\t{\n\t\t\t\td[e[i]]=d[t]+1;\n\t\t\t\tcur[e[i]]=h[e[i]];\n\t\t\t\tif (e[i]==T) return true;\n\t\t\t\tq.push(e[i]);\n            }\n        }\n    }\n    return false;\n    \n}\n\nint find(int u,int lim)\n{\n    if (u==T) return lim;\n    int flow=0;\n    for (int i=cur[u];i!=-1&&flow<lim;i=ne[i])\n    {\n        cur[u]=i;// \u5f53\u524d\u5f27\u4f18\u5316\uff0c\u4e0b\u4e00\u6b21\u4ece\u8fd9\u4e00\u6761\u8fb9\u51fa\u53d1\n        if (d[e[i]]==d[u]+1&&w[i])\n        {\n            int t=find(e[i],min(w[i],lim-flow));\n            if (t!=0) d[e[i]]=-1;\n            // \u6ca1\u6709\u8def\u5f84\uff0c\u5c31\u4e0d\u518d\u8bbf\u95ee\uff0c\u8d4b\u503c\u4e3a-1\n            w[i]-=t,w[i^1]+=t,flow+=t;\n        }\n    }\n    return flow;\n}\nint dinic()\n{\n    int r=0,flow=0;\n    while (bfs())\n        while (flow=find(S,INF)) r+=flow;\n    return r;\n}\n```\n\n\n## 2. \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\n\u6211\u4eec\u5f53\u7136\u5e0c\u671b\u4ed6\u4e0d\u8981\u6709\u4e0a\u4e0b\u754c\uff0c\u6240\u4ee5\u8981\u8f6c\u5316\u6210\u666e\u901a\u7684\u6700\u5927\u6d41\u3002\n\n\u8bbe\u8fb9 (u,v) \u6d41\u91cf\u4e3a f(u,v), \u90a3\u4e48\u6709 \n$$ cmin(u,v)\\le f(u,v) \\le cmax(u,v) $$\n\n\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$ 0 \\le f(u,v) \\le cmax(u,v) - cmin(u,v) $$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u76f4\u63a5\u4ece u \u8fde\u4e00\u6761 cmax(u,v) - cmin(u,v) \u4e3a\u5bb9\u91cf\u7684\u8fb9\u5373\u53ef\uff01\n\n\u771f\u7684\u53ef\u4ee5\u4e86\u5417\uff1f\uff08~~\u96fe~~\uff09\n\n\u56de\u987e\u539f\u6765\u7684\u5b9a\u4e49\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u8981\u4e0d\u50a8\u5b58\u6d41\u91cf\u7684\uff0c\u4f46\u8fd9\u6837\u7684\u8bdd\uff0c\u4f1a\u5bfc\u81f4\u8282\u70b9 u \u5b58\u50a8\u7684\u4e00\u4e9b\u6d41\u91cf\uff0c\u4e3a\n\n$$ \\sum_{(u,v)\\in E}c(u,v)-\\sum_{(t,u)\\in E}c(t,u)$$\n\n\u4e3a\u4e86\u5f25\u8865\u8fd9\u4e00\u7f3a\u9677\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u5efa\u7acb\u4e00\u4e2a\u6e90\u70b9\u548c\u6c47\u70b9\uff08\u5176\u4ed6\u70b9\u65e0\u6cd5\u5728\u6d41\u5165\u6216\u6d41\u51fa\uff09\n\n\u5982\u679c\u8be5\u9879\u5927\u4e8e 0 \uff0c\u6211\u4eec\u5c31\u4ece\u6e90\u70b9\u8fde\u4e00\u6761\u8fb9\u5230\u8be5\u70b9\uff0c\u5426\u5219\u5c31\u4ece\u8be5\u70b9\u6d41\u51fa\u5230\u6c47\u70b9\uff08\u522b\u65e0\u9009\u62e9\uff09\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6700\u5927\u6d41\u4e86\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5047\u8bbe\u4ece\u6e90\u70b9\u4e0d\u80fd\u6bcf\u4e00\u6761\u8fb9\u90fd\u662f\u6ee1\u6d41\uff1f\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e0d\u662f\u6ee1\u6d41\uff0c\u6bcf\u4e00\u4e2a\u70b9\u8fd8\u662f\u8981\u50a8\u5b58\u6d41\u91cf\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6027\u8d28\u65e0\u6cd5\u6ee1\u8db3\u3002\n\n\u6700\u540e\u7684\u6700\u5927\u6d41\uff0c\u5c31\u662f\u4ece\u6e90\u70b9\u51fa\u53d1\u7684\u6d41\u52a0\u4e0a\u6bcf\u4e00\u6761\u8fb9\u539f\u6765\u6ca1\u6709\u8ba1\u7b97\u7684\u6d41\u91cf\u3002\n\n\uff08\u53ef\u4ee5\u5148\u7406\u89e3\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u6d41\u90fd\u4f1a\u4ece\u6e90\u70b9\u6d41\u51fa\uff0c\u4e0d\u7136\u5c31\u4f1a\u6709\u5176\u4ed6\u70b9\u4e0d\u6d41\u91cf\u5b88\u6052\u4e86\uff09\n\nCode: \u7565\uff08~~\u4e3b\u8981\u662f\u4e0d\u60f3\u6253~~\uff09\n\n## 3. \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\n\u6709\u6e90\u6c47\u5bf9\u4e8e\u65e0\u6e90\u6c47\u6765\u8bf4\uff0c\u6709\u4e00\u70b9\u4e0d\u540c\uff1a\u539f\u6765\u7684\u6e90\u70b9\uff08\u8bb0\u4e3a s \uff09\u548c\u6c47\u70b9\uff08\u8bb0\u4e3a t \uff09\u4e5f\u662f\u4e0d\u6d41\u91cf\u5b88\u6052\u7684\u3002\n\n\u663e\u800c\u6613\u89c1\u7684\u65b9\u6cd5\u662f\uff0c\u4ece t \u5230 s \u8fde\u4e00\u6761 $+\\infty$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u5c31\u5148\u4ece S \u5230 T \u7528 Dinic \uff0c\u518d s \u5230 t \u7528 Dinic \u3002\n\u4e24\u6b21\u7684\u6d41\u91cf\u76f8\u52a0\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\uff08~~\u5c31\u53ef\u4ee5\u4e86~~\uff09\n\n\u4f46\u771f\u7684\u53ef\u4ee5\u5417\uff1f\uff08~~\u96fe~~\uff09\n\n\u662f\u53ef\u4ee5\u7684\uff08~~\u4e0d\u8981\u88ab\u6211\u95ee\u4e00\u6b21\u5c31\u72b9\u8c6b\u4e86~~\uff09\n\n\u4f46\u662f\u6211\u8fd9\u91cc\u9700\u8981\u4e25\u8c28\u8bc1\u660e\u4e00\u4e0b\u3002\uff08\u770b\u4e0d\u61c2\u53ef\u4ee5\u7565\u8fc7\uff09\n\n### \u8bc1\u660e\n\n\u6211\u4eec\u9700\u8981\u8bc1\u660e\u7684\u662f\u539f\u56fe\u4e2d\u4ece s \u5230 t \u7684\u53ef\u884c\u6d41\u4e0e\u65b0\u56fe\u7b2c\u4e00\u6b21 Dinic \u540e\u4ece s \u5230 t \u7684\u53ef\u884c\u6d41\u662f\u4e00 \u4e00\u5bf9\u5e94\u7684\u3002\n\n\u9996\u5148\uff0c\u539f\u56fe\u7684\u53ef\u884c\u6d41\u4e0e\u65b0\u56fe\u4e2d\u7684\u6ee1\u6d41\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\n\n#### 1. \u539f\u56fe\u81f3\u65b0\u56fe\n\u5047\u8bbe\u65b0\u56fe\u6709\u4e00\u4e2a\u6ee1\u6d41 f(S,T) \uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u539f\u56fe\u7684\u53ef\u884c\u6d41\uff0c\u5373\u4e00\u4e2a\u65b0\u56fe\u7684\u6ee1\u6d41\uff0c\u76f8\u51cf\u540e\uff0c S \u548c T \u76f8\u5173\u7684\u8fb9\uff0c\u6d41\u91cf\u90fd\u4f1a\u53d8\u6210 0 \u3002\n\n\u53c8\u7531\u4e8e\u6709 c(t,s)=$+\\infty$ \uff0c\u53bb\u6389\u8fd9\u6761\u8fb9\u540e\uff0c\u5c31\u662f\u4ece s \u5230 t \u7684\u53ef\u884c\u6d41\u3002\n\n#### 2. \u65b0\u56fe\u81f3\u539f\u56fe\n\n\u8bbe\u65b0\u56fe\u4e2d\u6709\u4e00\u4e2a\u6ee1\u6d41 f(S,T) \uff0c\u5e76\u6709\u4efb\u610f\u4e00\u4e2a s \u5230 t \u7684\u53ef\u884c\u6d41  f(s,t).\n\n\u90a3\u4e48\uff0cf(S,T)+f(s,t) \u4e5f\u4e00\u5b9a\u662f\u4e00\u4e2a\u6ee1\u6d41\uff0c\u540c\u65f6\u7531\u4e8e f(s,t) \u4e0d\u7ecf\u8fc7 S \u548c T \uff0c\u6bcf\u4e2a\u70b9\u4e5f\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\u3002\n\n\u6240\u4ee5\u5bf9\u4efb\u610f\u4e00\u4e2a f(s,t) \uff0c\u90fd\u6709\u4e00\u4e2a\u6ee1\u6d41\u4e0e\u4e4b\u5bf9\u5e94\uff0c\u4e5f\u5c31\u662f\u6709\u539f\u56fe\u7684\u53ef\u884c\u6d41\u3002\n\n### \u8bc1\u6bd5\uff01\n\n## 4.\u56de\u5f52\u672c\u9898\n### ~~\u7531\u6807\u9898\u53ef\u4ee5\u770b\u51fa~~\uff0c\u672c\u9898\u662f\u4e00\u4e2a\u6a21\u677f\u9898\u3002\n- \u5148\u5efa\u7acb\u4e00\u4e2a\u6e90\u70b9\u3002\n- \u4ece\u6e90\u70b9\u5230\u6bcf\u4e2a\u5c11\u5973\uff0c\u6d41\u91cf\u4e3a [gi,$+\\infty$)\n- \u4ece\u6bcf\u4e2a\u5c11\u5973\u5230\u6bcf\u4e00\u5929\uff0c\u6d41\u91cf\u4e3a [li,ri]\n\n- \u4ece\u6bcf\u4e00\u5929\u5230\u6c47\u70b9\uff0c\u6d41\u91cf\u4e3a [0,di]\n\n\u8bb0\u5f97\u6e05\u96f6\uff0c\u4ee5\u53ca\u5c11\u5973\u7684\u7f16\u53f7\u95ee\u9898\u3002\n\n\n\u6700\u540e\uff0c\u732e\u4e0a\u4ee3\u7801\u3002\u5176\u5b83\u95ee\u9898\u770b\u6ce8\u91ca\uff0c\u6216\u8005\u79c1\u4fe1\u3002\n\nCode\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\n\nconst ll N=5e4+10,M=4e5+10,INF=1e9+7;\nll h[N],e[M],ne[M],w[M],A[N],d[N],cur[N],idx,n,m,S,T,q[N],s,t;\n\nvoid add(ll a,ll b,ll c)\n{\n\te[idx]=b,w[idx]=c,ne[idx]=h[a],h[a]=idx++;\n\te[idx]=a,w[idx]=0,ne[idx]=h[b],h[b]=idx++;\n}\n//\u52a0\u6bcf\u4e00\u4e2a\u6709\u4e0a\u4e0b\u754c\u7684\u8fb9\nvoid addedge(ll from,ll to,ll least,ll most)\n{\n\tadd(from,to,most-least);\n\tA[from]-=least,A[to]+=least;\n}\n\nbool bfs()\n{\n\tmemset(d,0,sizeof d);\n\tll hh=1,tt=1;\n\tq[tt]=S;d[S]=1;cur[S]=h[S];\n\twhile (hh<=tt)\n\t{\n\t\tll x=q[hh++];\n\t\tfor (ll i=h[x];i!=-1;i=ne[i])\n\t\t\tif (!d[e[i]]&&w[i])\n\t\t\t{\n\t\t\t\td[e[i]]=d[x]+1;\n\t\t\t\tcur[e[i]]=h[e[i]];\n\t\t\t\tif (e[i]==T) return true;\n\t\t\t\tq[++tt]=e[i];\n\t\t\t}\n\t}\n\treturn false;\n}\n\ninline ll read()\n{\n\tchar c;\n\tll res=0,f=1;\n\twhile ((c=getchar())<'0'||c>'9')\n\t\tif (c=='-') f=-1;\n\tres=c-'0';\n\twhile ((c=getchar())<='9'&&c>='0') res=(res<<3)+(res<<1)+c-'0';\n\treturn res*f;\n}\n\nll findflow(ll x,ll limit)\n{\n\t\n\tll flow=0;\n\tif (x==T) return limit;\n\tfor (ll i=cur[x];i!=-1&&flow<limit;i=ne[i])\n\t{\n\t\tcur[x]=i;//\u5f53\u524d\u5f27\u4f18\u5316\n\t\tif ((d[e[i]]==d[x]+1)&&w[i])\n\t\t{\n\t\t\tll t=findflow(e[i],min(limit-flow,w[i]));\n\t\t\tif (!t) d[e[i]]=-1000;\n\t\t\tw[i]-=t,w[i^1]+=t,flow+=t;\n\t\t}\n\t}\n\treturn flow;\n}\n//dinic \u6a21\u677f\nll dinic()\n{\n\tll r=0,flow;\n\twhile (bfs())\n\t\twhile (flow=findflow(S,INF)) r+=flow;\n\treturn r;\n}\n\nint main()\n{\n\twhile (~scanf(\"%d%d\",&n,&m))//\u6572\u9ed1\u677f\n\t{\n\t\tmemset(h,-1,sizeof h);\n\t\tmemset(A,0,sizeof A);//A \u662f\u6307\u591a\u51fa\u6765\u7684\u6d41\u91cf\n\t\ts=0,t=m+n+1;ll tot=0;idx=0;//\u539f\u56fe\u7684\u6e90\u6c47\u70b9\n\t\tfor (ll i=1,x;i<=m;++i)\n\t\t{\n\t\t\tx=read();\n\t\t\taddedge(s,i,x,INF);\n\t\t}\n\t\tfor (ll i=1,C,D;i<=n;++i)\n\t\t{\n\t\t\tC=read();D=read();\n\t\t\taddedge(m+i,t,0,D);\n\t\t\tfor (ll j=1,x,L,R;j<=C;++j)\n\t\t\t{\n\t\t\t\tx=read(),L=read(),R=read();\n\t\t\t\taddedge(x+1,m+i,L,R);\n\t\t\t}\n\t\t}\n\t\tS=m+n+2;T=m+n+3;//\u65b0\u56fe\u7684\u6e90\u6c47\u70b9\n\t\tfor (ll i=0;i<=m+n+1;++i)\n\t\t{\n\t\t\tif (A[i]>0) add(S,i,A[i]),tot+=A[i];\n\t\t\telse if (A[i]<0) add(i,T,-A[i]);\n\t\t}\n\t\tadd(t,s,INF);\n\t\tif (dinic()<tot)//\u5224\u65ad\u662f\u5426\u4e3a\u6ee1\u6d41\n\t\t{\n\t\t\tputs(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tll res=w[idx-1];\n\t\tw[idx-1]=w[idx-2]=0;\n\t\tS=s,T=t;\n\t\tprintf(\"%d\\n\\n\",res+dinic());\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1616916250,
        "uid": 342891,
        "name": "mydcwfy",
        "ccfLevel": 9,
        "title": "\u96f6\u57fa\u7840P5192\u9898\u89e3"
    },
    {
        "content": "\u7ec8\u4e8e\u53ef\u4ee5\u6709\u4e00\u7bc7\u9ed1\u9898\u7684\u9898\u89e3\u8fa3\uff01~~\u81f3\u5c11\u5728\u5199\u9898\u89e3\u65f6\u8fd9\u9898\u662f\u9ed1\u7684~~\n\n\u5148~~\u65e0\u803b\u5730~~\u53d1\u4e00\u6ce2\u5e7f\u544a\uff1a[$\\texttt{BLOG}$](https://stevebraveman.github.io/)\n\n\u4e0b\u9762\u8fdb\u5165\u6b63\u9898\uff1a\n\n# \u6709\u6e90\u6c47\u7684\u4e0a\u4e0b\u754c\u7f51\u7edc\u6700\u5927\u6d41\n\n\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u5730\u65b9\u544a\u8bc9\u4f60\u8981\u7528\u6709\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\uff1a\n\n> \u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u53d6\u6750\u5bf9\u8c61\u62cd\u7684\u7167\u7247**\u5fc5\u987b**\u5728\u95ed\u533a\u95f4$[L_{k_i},R_{k_i}]$\u4e2d\n\n\u90a3\u4e48\u600e\u4e48\u6c42\u6709\u6e90\u6c47\u7684\u4e0a\u4e0b\u754c\u7f51\u7edc\u6700\u5927\u6d41\u5462\uff1f\n\n\u6211\u4eec\u629b\u5f00\u6709\u6e90\u6c47\u7684\u6700\u5927\u6d41\uff0c\u5148\u641e\u65e0\u6e90\u6c47\u7684\u4e0a\u4e0b\u754c\u7f51\u7edc\u53ef\u884c\u6d41\n\n\u5173\u4e8e\u65e0\u6e90\u6c47\u7684\u4e0a\u4e0b\u754c\u7f51\u7edc\u53ef\u884c\u6d41\u7684\u8bc1\u660e\u53ca\u505a\u6cd5\uff0c\u4e2a\u4eba\u8bb2\u5f97\u4e0d\u592a\u6e05\u695a\uff0c\u53ef\u53c2\u8003\u8fd9\u7bc7[\u535a\u5ba2](https://blog.csdn.net/wu_tongtong/article/details/73320968)~~\uff08\u5176\u5b9e\u5c31\u662f\u6211\u61d2\u5f97\u5199\uff09~~\n\n\u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u6c42\u51fa\u4e86\u53ef\u884c\u6d41\uff0c\u90a3\u4e48\u8be5\u600e\u6837\u6c42\u6709\u6e90\u6c47\u7684\u7f51\u7edc\u6700\u5927\u6d41\u5462\uff1f\n\n\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8fde\u4e00\u6761\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u5bb9\u91cf\u4e3aINF\u7684\u8fb9\uff0c\u7136\u540e\u518d\u5728\u6b8b\u91cf\u7f51\u7edc\u8dd1\u4e00\u8fb9\u6700\u5927\u6d41\u5c31\u53ef\u4ee5\u4e86\u3002~~\u5177\u4f53\u8bc1\u660e\u89c1\u767e\u5ea6~~\n\n\u6700\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u9898\u610f\u5efa\u8fb9\u4e86~~\u8868\u793a\u8bfb\u9898\u7528\u4e8620min~~\n\n\u4e0b\u9762\u662f~~\u6109\u5feb\u7684~~\u4ee3\u7801\u65f6\u95f4\uff1a\n\n```cpp#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define MAXN 1000100\n#define INF 2000000000\n#define clear(x) memset(x, 0, sizeof(x));\nstruct Edge {\n    int v, nx, w;\n} e[MAXN];\nint min(int a, int b) {\n    if (a < b) return a;\n    else return b;\n}\nint head[MAXN], ecnt = 1, n, m, p, x, _l, _r;\nint dep[MAXN], cur[MAXN], di[MAXN], r, k, ans, tot, _s, _t, _c, _d;\nvoid add(int f, int t, int w) {\n    e[++ecnt] = (Edge){ t, head[f], w };\n    head[f] = ecnt;\n    e[++ecnt] = (Edge){ f, head[t], 0 };\n    head[t] = ecnt;\n}\nbool bfs(int s, int t) {\n    memset(dep, 0x7f, sizeof(dep));\n    for (int i = 1; i <= k; i++) {\n        cur[i] = head[i];\n    }\n    std::queue<int> q;\n    q.push(s);\n    dep[s] = 0;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (int i = head[u]; i; i = e[i].nx) {\n            int to = e[i].v;\n            if (dep[to] > INF && e[i].w) {\n                dep[to] = dep[u] + 1;\n                q.push(to);\n            }\n        }\n    }\n    return dep[t] < INF;\n}\nint dfs(int s, int t, int l) {\n    if (!l || s == t) return l;\n    int fl = 0, f;\n    for (int i = cur[s]; i; i = e[i].nx) {\n        cur[s] = i;\n        int to = e[i].v;\n        if (dep[to] == dep[s] + 1 && (f = dfs(to, t, min(l, e[i].w)))) {\n            fl += f;\n            l -= f;\n            e[i].w -= f;\n            e[i ^ 1].w += f;\n            if (!l) break;\n        }\n    }\n    return fl;\n}\nint Dinic(int s, int t) {\n    int maxf = 0;\n    while (bfs(s, t)) {\n        maxf += dfs(s, t, INF);\n    }\n    return maxf;\n}\nint main() {\n    while (scanf(\"%d%d\", &m, &n) != EOF) {\n        _s = n + m + 1;\n        _t = _s + 1;\n        r = _t + 1;\n        k = r + 1;\n        clear(head);\n        clear(di);\n        ecnt = 1;\n        ans = 0;\n        for (int i = 1; i <= n; i++) {\n            scanf(\"%d\", &p);\n            add(i, _t, INF);\n            di[i] -= p;\n            di[_t] += p;\n        }\n        for (int i = 1; i <= m; i++) {\n            scanf(\"%d%d\", &_c, &_d);\n            add(_s, i + n, _d);\n            for (int j = 1; j <= _c; j++) {\n                scanf(\"%d%d%d\", &x, &_l, &_r);\n                x++;\n                add(i + n, x, _r - _l);\n                di[i + n] -= _l;\n                di[x] += _l;\n            }\n        }\n        for (int i = 1; i <= n + m + 2; i++) {\n            if (di[i] > 0) {\n                ans += di[i];\n                add(r, i, di[i]);\n            }\n            else {\n                add(i, k, -di[i]);\n            }\n        }\n        add(_t, _s, INF);\n        tot = Dinic(r, k);\n        if (tot != ans) puts(\"-1\");\n        else {\n            printf(\"%d\\n\", Dinic(_s, _t));\n        }\n        puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1551360526,
        "uid": 96570,
        "name": "RiverFun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5192 \u3010Zoj3229 Shoot the Bullet|\u4e1c\u65b9\u6587\u82b1\u5e16\u3011"
    },
    {
        "content": "\u6765[$\\mathbf\\color{Orchid}Code \\mathbf{\\color{Orchid}{\\underline{\\ \\ }}}\\mathbf\\color{Orchid}{\u661f\u4e91\u7684\u535a\u5ba2}$](https://www.cnblogs.com/CodeQuantum/p/maxflow-upperAndlower.html)\u770b\uff0c\u6548\u679c\u66f4\u4f73\u3002\n\n------------\n\n### \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6d41\u91cf\u4e0b\u754c\u548c\u6d41\u91cf\u4e0a\u754c $c,d$\u3002\u6c42\u4e00\u79cd\u53ef\u884c\u65b9\u6848\u4f7f\u5f97\u5728\u6240\u6709\u70b9\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\u6761\u4ef6\u7684\u524d\u63d0\u4e0b\uff0c\u6240\u6709\u8fb9\u6ee1\u8db3\u6d41\u91cf\u9650\u5236\u3002\n\n\u5efa\u56fe\uff1a\u65b0\u5efa\u4e00\u4e2a\u56fe $G'$\u3002$G'$ \u76f8\u5bf9\u4e8e\u539f\u56fe $G$\uff0c\u628a\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u4e0b\u754c\u8c03\u4e3a $0$ \uff0c\u628a\u4e0a\u754c\u8c03\u4e3a $d-c$\u3002\u90a3\u4e48\u5047\u82e5\u5728 $G'$ \u4e0a\u67d0\u8fb9\u7684\u6d41\u91cf\u503c\u4e3a $f_0$\uff0c\u5219\u5728 $G$ \u4e0a\uff0c\u8be5\u8fb9\u7684\u6d41\u91cf\u503c\u4e3a $c+f_0$\u3002\u6b64\u65f6\u4f1a\u53d1\u73b0\uff0c\u5728 $G'$ \u4e0a\u660e\u663e\u6ee1\u8db3\u5bb9\u91cf\u9650\u5236\uff0c\u4f46\u4e0d\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\u3002\u90a3\u4e48\u5bf9\u4e8e\u65b0\u56fe\u4e0a\u7684\u6bcf\u4e2a\u70b9\uff0c\u5982\u679c\u5c11\u8fdb\u7684\u6d41\u91cf $f_{in}$\uff08\u88ab\u51cf\u6389\u7684 $c$\uff09\u5927\u4e8e\u7684\u5c11\u51fa\u7684\u6d41\u91cf $f_{out}$\uff0c\u5219\u4ece $G'$ \u7684\u6e90\u70b9 $S$ \u8fde\u4e00\u6761\u901a\u5f80\u8be5\u70b9\u7684\u5bb9\u91cf\u4e3a $f_{in}-f_{out}$ \u7684\u8fb9\uff0c\u5426\u5219\u8fde\u5411\u6c47\u70b9\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e $G'$ \u7684\u4e00\u4e2a\u6700\u5927\u6d41\uff0c\u5373 $S,T$ \u7ed9\u6bcf\u4e2a\u70b9\u8865\u7684\u6d41\u91cf\u521a\u597d\u4e0e\u67d0\u70b9\u7684\u6d41\u91cf\u5dee\u503c\u8fbe\u5230\u5e73\u8861\u65f6\uff0c\u6620\u5c04\u5230 $G$ \u4e0a\u5c31\u662f\u4e00\u4e2a\u53ef\u884c\u6d41\u3002\n\n\u8bc1\u660e\uff1a\u9996\u5148\u8bc1\u660e $G'$ \u7684\u6d41\u6ee1\u8db3\u53ef\u884c\u6d41\u6027\u8d28\u3002\u663e\u7136\uff0c\u6211\u4eec\u7684\u6784\u9020\u5df2\u7ecf\u6ee1\u8db3\u3002\n\n   \u5176\u6b21\uff0c\u8bc1\u660e $G'$ \u4e0a\u7684\u4efb\u4f55\u4e00\u4e2a\u6ee1\u6d41\uff08\u6700\u5927\u6d41\uff09\u90fd\u662f $G$ \u7684\u4e00\u4e2a\u53ef\u884c\u6d41\u3002\u5bf9\u4e8e $G'$ \u7684\u6ee1\u6d41 $f_{1},...,f_{inf}$\uff0c\u663e\u7136\u5bf9\u4e8e $\\forall i \\ne j$\uff0c\u6709 $f_i \\ne f_j$\u3002\u56e0\u6b64\uff0c\u6620\u5c04\u5230 $G$ \u4e0a\u7684\u53ef\u884c\u6d41\u4e5f\u4e92\u4e0d\u76f8\u540c\u3002\u800c\u53c8\u7531\u4e8e\u8fd8\u539f\u540e\u6ee1\u8db3\u5bb9\u91cf\u9650\u5236\u548c\u6d41\u91cf\u5b88\u6052\uff0c\u56e0\u6b64\u53ef\u5f97\u8fd9\u4e24\u4e2a\u96c6\u5408\u76f8\u7b49\u3002\n\n   \u7136\u540e\uff0c\u5bf9\u4e8e $G$ \u7684\u53ef\u884c\u6d41\u4e00\u5b9a\u662f $G'$ \u7684\u6ee1\u6d41\uff0c\u6211\u4eec\u7684\u6784\u9020\u64cd\u4f5c\u5c31\u662f\u76f4\u63a5\u6620\u5c04\u8fc7\u53bb\u7684\uff0c\u6240\u4ee5\u4e00\u5b9a\u6ee1\u8db3\u3002\u8bc1\u6bd5\u3002\n   \n\n------------\n### \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n\u95ee\u9898:\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6d41\u91cf\u4e0b\u754c\u548c\u6d41\u91cf\u4e0a\u754c\u3002\u7ed9\u5b9a\u6e90\u70b9 $S$ \u548c\u6c47\u70b9 $T$\uff0c\u6c42\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u4efb\u4f55\u4e00\u79cd\u53ef\u884c\u65b9\u6848\u3002\n\n\u5efa\u56fe\uff1a\u6211\u4eec\u628a\u95ee\u9898\u4e2d\u7ed9\u5b9a\u7684 $S$ \u548c $T$\uff0c\u5728\u4ee5\u4e0b\u8bba\u8ff0\u4e2d\u79f0\u4e3a $s$ \u548c $t$\u3002\u4e0e\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u4e0d\u540c\u7684\u662f\uff0c$s,t$ \u4e0d\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\u3002\u90a3\u4e48\u6211\u4eec\u5728\u539f\u56fe\u4e2d\u8fde\u4e00\u6761\u4ece $t$ \u5230 $s$\uff0c\u5bb9\u91cf\u8303\u56f4\u4e3a $[0,+inf]$ \u7684\u8fb9\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u6d41\u7f51\u7edc\u5c31\u6210\u4e86\u6240\u6709\u70b9\u90fd\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\u7684\u56fe\u3002\u7136\u540e\u518d\u8dd1\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\uff0c\u5373\u53ef\u6c42\u51fa\u3002\n\n---\n### \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6d41\u91cf\u4e0b\u754c\u548c\u6d41\u91cf\u4e0a\u754c\u3002\u7ed9\u5b9a\u6e90\u70b9 $S$ \u548c\u6c47\u70b9 $T$\uff0c\u6c42\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u5927\u6d41\u3002\n\n\u5efa\u56fe\uff1a\u6211\u4eec\u628a\u95ee\u9898\u4e2d\u7ed9\u5b9a\u7684 $S$ \u548c $T$\uff0c\u5728\u4ee5\u4e0b\u8bba\u8ff0\u4e2d\u79f0\u4e3a $s$ \u548c $t$\uff0c\u800c\u628a\u65b0\u56fe\u4e2d\u7684\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\u79f0\u4e3a $S$ \u548c $T$\u3002\u5148\u6309\u7167\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u7684\u505a\u6cd5\u8dd1\u4e00\u904d\uff0c\u6c42\u5f97\u7b54\u6848\u4e3a $g_1$\u3002\u7136\u540e\u5220\u6389 $t$ \u8fde\u5230 $s$ \u7684\u8fb9\u3002\u5176\u6b21\u8dd1 $s$ \u5230 $t$ \u7684\u6700\u5927\u6d41\uff08\u627e\u589e\u5e7f\u8def\uff09\uff0c\u6c42\u5f97 $s$ \u5230 $t$ \u7684\u6d41\u4e3a $g_2$\u3002\u90a3\u4e48\u603b\u7b54\u6848\u5c31\u662f $g_1+g_2$\u3002\n\n\u901a\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u6211\u4eec\u5f97\u51fa\u4e86\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u4e92\u76f8\u53ef\u63a8\u7684\u4e24\u4e2a\u96c6\u5408\uff1a\u539f\u56fe\u7684\u53ef\u884c\u6d41\u548c\u65b0\u56fe\u4e2d $s$ \u5230 $t$ \u7684\u53ef\u884c\u6d41\u3002\n\n\u8bc1\u660e\uff1a\u9996\u5148\uff0c\u663e\u7136\u5728\u65b0\u56fe\u4e2d\u7684\u6700\u5927\u6d41\u6ee1\u8db3\u6d41\u7684\u6027\u8d28\u3002\n\n   \u5176\u6b21\uff0c\u8bc1\u660e\u4e24\u4e2a\u96c6\u5408\u95f4\u7684\u5145\u8981\u6027\u3002\u6211\u4eec\u4ee4\u539f\u56fe\u4e3a $G$\uff0c\u539f\u56fe\u4e2d\u7684\u4e00\u4e2a\u53ef\u884c\u6d41 $f$\uff0c\u65b0\u56fe\u4e3a $G'$\uff0c\u65b0\u56fe\u4e2d\u7684\u4e00\u4e2a\u6700\u5927\u6d41\u4e3a $f'$\uff0c\u65b0\u56fe\u6700\u5927\u6d41\u7684\u6b8b\u4f59\u7f51\u7edc\u4e3a $G'_{f'}$\u3002\n\n   \u6b64\u65f6\uff0c\u7531\u4e8e $f'$ \u662f\u6700\u5927\u6d41\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728 $G'_{f'}$ \u4e2d\uff0c\u4ee5 $S$ \u4e3a\u59cb\u7684\u8fb9\u5bb9\u91cf\u4e3a $0$\u3002\u5219\u5982\u679c\u4ece $s$ \u5f00\u59cb\uff0c\u5728 $G'_{f'}$ \u4e0a\u627e\u589e\u5e7f\u8def\u5f84\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u7ecf\u8fc7 $S$\u3002\u5bf9\u4e8e $T$ \u540c\u7406\u3002\u8fd9\u662f $(1)$ \u7ed3\u8bba\u3002\n\n   \u5176\u6b21\uff0c\u627e $s$ \u5230 $t$ \u7684\u53ef\u884c\u6d41\uff0c\u5b9e\u8d28\u662f\u4e0d\u65ad\u627e $G'_{f'}$ \u4e0a $s$ \u5230 $t$ \u7684\u589e\u5e7f\u8def\u5f84\uff08\u8fd9\u662f\u7ed3\u8bba $(2)$\uff09\uff0c\u4e5f\u5c31\u662f $G'_{f'}$ \u4e0a\u7684\u67d0\u4e2a\u6d41\uff0c\u8bb0\u4f5c $f'_0$\u3002\uff08\u4e5f\u5c31\u662f $f'$ \u5728\u7ea2\u6846\u5185\u7684\u6d41\uff09\u7531\u4e8e\u7ed3\u8bba $(1)$ \u7684\u652f\u6491\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u6210\u7acb\u7684\uff08\u7531\u4e8e $S,T$ \u8d70\u4e0d\u901a\uff0c\u6240\u4ee5\u589e\u5e7f\u8def\u5f84\u53ef\u4ee5\u770b\u505a $S$ \u5230 $T$ \u7684\u589e\u5e7f\u8def\u5f84\uff0c\u53ea\u662f\u7b2c\u4e00\u6bb5\u8def\u5f84\u548c\u6700\u540e\u4e00\u6bb5\u8def\u5f84\u7684\u6d41\u91cf\u4e3a $0$\u3002\uff09\u3002\u7136\u540e\uff0c\u7531\u4e8e\u7f51\u7edc\u6d41\u4e4b\u6700\u5927\u6d41\u5f15\u74061\uff0c\u6211\u4eec\u6709 $f' \\uparrow f'_0$ \u4e5f\u662f $G'$ \u7684\u4e00\u4e2a\u53ef\u884c\u6d41\u3002\n   \n![](https://cdn.luogu.com.cn/upload/image_hosting/ifenesp1.png?x-oss-process=image/resize,m_lfit,h_1250,w_1505)\n\n\u540c\u65f6\uff0c\u56e0\u4e3a $(f \\uparrow f')(u,v)=f(u,v)+f'(u,v)-f'(v,u)\\ ((u,v) \\in E)$\u3002\u653e\u5230\u8fd9\u4e2a\u95ee\u9898\u91cc\u9762\u6765\u770b\uff0c$f'_0(u,v)$ \u548c $f'_0(v,u)$ \u5728\u9ec4\u8272\u8fb9\u4e0a\u7684\u6d41\u91cf\u4e3a $0$\uff08\u7ed3\u8bba $(2)$\uff09\u3002\u56e0\u6b64\uff0c\u5728\u9ec4\u8272\u8fb9\u4e0a\uff0c\u6d41\u91cf\u4ecd\u7136\u4e3a\u6ee1\u3002\u5728\u7ea2\u8272\u6846\u5185\uff0c\u6d41\u91cf\u624d\u6709\u53d8\u5316\u3002\u90a3\u4e48\uff0c$f' \\uparrow f'_0$ \u4ecd\u7136\u662f $G'$ \u7684\u6ee1\u6d41\uff0c\u56e0\u6b64\u4ecd\u7136\u662f $G$ \u7684\u53ef\u884c\u6d41\u3002\u56e0\u6b64\u53ef\u77e5\uff0c$s$ \u5230 $t$ \u7684\u4efb\u610f\u53ef\u884c\u6d41\uff08\u53ea\u7ecf\u8fc7\u7ea2\u8272\u6846\u5185\u7684\u53ef\u884c\u6d41\uff09\u90fd\u80fd\u6620\u5c04\u5230 $G$ \u7684\u4e00\u4e2a\u53ef\u884c\u6d41\u4e0a\u3002\n\n   \u901a\u8fc7\u4e0a\u8ff0\u8bba\u8bc1\uff0c\u7b2c\u4e8c\u4e2a\u96c6\u5408\u53ef\u4ee5\u63a8\u51fa\u7b2c\u4e00\u4e2a\u7ed3\u8bba\u3002\u8003\u8651\u7b2c\u4e00\u4e2a\u63a8\u7b2c\u4e8c\u4e2a\u3002\u4ecd\u7136\u8bbe\u6709\u4e00\u4e2a\u539f\u56fe $G$\uff0c\u5176\u4e00\u4e2a\u53ef\u884c\u6d41 $f$\uff0c\u65b0\u56fe $G' $\u548c\u6ee1\u6d41 $f'$\uff0c\u6b8b\u4f59\u7f51\u7edc $G'_{f'}$ \uff0c\u548c $s$ \u5230 $t$ \u7684\u4e00\u4e2a\u53ef\u884c\u6d41 $f'_0$\uff08\u4ecd\u7136\u53ef\u4ee5\u770b\u4f5c $S$ \u5230 $T$ \u7684\u7279\u6b8a\u589e\u5e7f\u8def\u5f84\uff09\u3002 \u6b64\u65f6 $f'$ \u4e0e $f$ \u5448\u4e92\u6620\u5c04\u5173\u7cfb\u3002\u6211\u4eec\u518d\u5728 $G'$ \u4e0a\u627e\u4e00\u4e2a\u7279\u5b9a\u7684\u6ee1\u6d41 $f''$\u3002\u5219 $\\forall f',f' \\downarrow f''$ \u5728 $G'_{f'}$ \u4e2d\u53ea\u6709\u7ea2\u8272\u6846\u6d41\u5411 $S,T$ \u7684\u6d41\u548c\u7ea2\u8272\u6846\u5185\u90e8\u6d41\u91cf\uff08\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u6d41\u90fd\u662f $G'$ \u4e0a\u7684\u6d41\uff0c\u6545\u56fe\u4e2d\u4e0d\u5b58\u5728\u53cd\u5411\u8fb9\u3002\u53e6\u5916\uff0c$f'$ \u548c $f''$ \u5728\u9ec4\u8fb9\u4e0a\u90fd\u662f\u6ee1\u6d41\uff0c\u56e0\u6b64\u9012\u51cf\u540e\u9ec4\u8fb9\u7684\u6d41\u91cf\u4e3a $0$\uff0c\u4e5f\u5c31\u662f\u53ea\u5728\u7ea2\u6846\u5185\u6709\u6d41\u91cf\uff09\u3002\u7ea2\u8272\u6846\u6d41\u51fa\u7684\u6d41\u91cf\u65e0\u6cd5\u6d41\u56de\u7ea2\u8272\u6846\uff0c\u56e0\u6b64 $f' \\downarrow f''$ \u6620\u5c04\u5230\u4e86\u7ea2\u6846\u5185\u7684\u4e00\u4e2a\u53ef\u884c\u6d41\uff0c\u5373 $s$ \u5230 $t$ \u7684\u4e00\u4e2a\u53ef\u884c\u6d41\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c$s$ \u5230 $t$ \u7684\u53ef\u884c\u6d41\u80fd\u6620\u5c04 $G'$ \u7684\u67d0\u4e2a\u6ee1\u6d41\uff0c\u662f\u7531\u4e8e\u672c\u9898\u7684\u7279\u6b8a\u6027\uff0c\u9ec4\u8272\u8fb9\u7684\u6d41\u91cf\u8fbe\u5230\u4e0a\u9650\uff0c\u6ee1\u6d41\u9012\u51cf\u540e\u53ea\u5269\u4e0b\u7ea2\u6846\u5185\u7684\u6d41\u91cf\u4e86\u3002\u56e0\u6b64\u53ef\u5f97\uff0c$f$ \u552f\u4e00\u6620\u5c04 $f'$\uff0c$f'$ \u80fd\u6620\u5c04\u5230 $s$ \u5230 $t$ \u4e00\u4e2a\u7684\u53ef\u884c\u6d41\u4e0a\u3002\n\n   \u4e24\u4e2a\u96c6\u5408\u4e92\u76f8\u6620\u5c04\uff0c\u6240\u4ee5\u53ef\u4ee5\u63a8\u51fa\u4e24\u4e2a\u96c6\u5408\u76f8\u7b49\u3002\u8bc1\u6bd5\u3002\n\n\u56e0\u6b64\uff0c\u6c42 $G$ \u7684\u6700\u5927\u6d41\uff0c\u9664\u4e86\u8981\u6c42\u51fa $G'$ \u6ee1\u6d41\u65f6 $s$ \u5230 $t$ \u7684\u6d41\u91cf\uff0c\u8fd8\u9700\u6c42\u51fa\u5220\u6389 $S,T$ \u548c\u8fde\u7684 $t$ \u5230 $s$ \u7684\u8fb9\u540e $s$ \u5230 $t$ \u7684\u6700\u5927\u6d41\u3002\n\n---\n\u56de\u5230\u8fd9\u9053\u9898\uff0c\u8fd9\u4e0d\u5c31\u662f\u6a21\u677f\u9898\u5417\uff1f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c11\u5973\u7684\u7f16\u53f7\u662f\u4ece\u4e00\u5f00\u59cb\u7684\u3002\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#define M 500005\n#define N 2005\nusing namespace std;\nconst int inf=1e8;\nstruct e{int to,next,c;}edge[2*M];\nint n,m,s,t,S,T,dlt[N],cnt=0,head[N];\nint q[N],cur[N],d[N];\nvoid add_edge(int u,int v,int w){\n\tedge[cnt].to=v; edge[cnt].c=w;\n\tedge[cnt].next=head[u]; head[u]=cnt++;\n}\nbool bfs(){\n\tint hh=0,tt=0;\n\tmemset(d,-1,sizeof d);\n\tq[0]=S; d[S]=0; cur[S]=head[S];\n\twhile(hh<=tt){\n\t\tint u=q[hh++];\n\t\tfor(int v,i=head[u];i!=-1;i=edge[i].next){\n\t\t\tv=edge[i].to; if(d[v]!=-1||!edge[i].c) continue;\n\t\t\td[v]=d[u]+1; cur[v]=head[v];\n\t\t\tif(v==T) return true;\n\t\t\tq[++tt]=v;\n\t\t}\n\t}return false;\n}\nint find(int u,int limit){\n\tif(u==T) return limit;\n\tint flow=0;\n\tfor(int v,i=cur[u];i!=-1&&flow<limit;i=edge[i].next){\n\t\tcur[u]=i; v=edge[i].to; if(d[v]!=d[u]+1||!edge[i].c) continue;\n\t\tint t=find(v,min(edge[i].c,limit-flow));\n\t\tif(!t) d[v]=-1;\n\t\tedge[i].c-=t; edge[i^1].c+=t; flow+=t;\n\t}return flow;\n}\nint dinic(){\n\tint res=0,flow=0;\n\twhile(bfs()) while(flow=find(S,inf)) res+=flow;\n\treturn res;\n}\nint main(){\n\twhile(scanf(\"%d%d\",&n,&m)!=EOF){\n\t\ts=0; t=n+m+1; cnt=0;\n\t\tmemset(head,-1,sizeof head);\n\t\tmemset(dlt,0,sizeof dlt);\n\t\tfor(int i=n+1;i<=m+n;i++){\n\t\t\tint x; scanf(\"%d\",&x);\n\t\t\tadd_edge(i,t,inf-x); add_edge(t,i,0); \n\t\t\tdlt[i]-=x; dlt[t]+=x;\n\t    }\n\t    for(int i=1;i<=n;i++){\n\t    \tint C,D; scanf(\"%d%d\",&C,&D);\n\t    \tadd_edge(s,i,D); add_edge(i,s,0);\n\t    \tfor(int j=1;j<=C;j++){\n\t    \t\tint x,l,r; scanf(\"%d%d%d\",&x,&l,&r); x=n+x+1;\n\t    \t\tadd_edge(i,x,r-l); add_edge(x,i,0);\n\t    \t\tdlt[i]-=l; dlt[x]+=l;\n\t\t\t}\n\t\t}\n\t\tS=n+m+2; T=n+m+3; int sum=0;\n\t\tfor(int i=0;i<=n+m+1;i++)\n\t\t  if(dlt[i]>0){add_edge(S,i,dlt[i]);add_edge(i,S,0);sum+=dlt[i];}\n\t\t  else{add_edge(i,T,-dlt[i]);add_edge(T,i,0);}\n\t\tadd_edge(t,s,inf); add_edge(s,t,0);\n\t\tif(dinic()!=sum){puts(\"-1\\n\");continue;}\n\t\tint res=edge[cnt-1].c; S=s; T=t;\n\t\tedge[cnt-1].c=edge[cnt-2].c=0;\n\t\tprintf(\"%d\\n\\n\",dinic()+res);\n\t}return 0;\n}\n```\n",
        "postTime": 1674028184,
        "uid": 464947,
        "name": "Code_\u661f\u4e91",
        "ccfLevel": 5,
        "title": "P5192 Zoj3229 Shoot the Bullet|\u4e1c\u65b9\u6587\u82b1\u5e16|\u3010\u6a21\u677f\u3011\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41 \u9898\u89e3"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b14\u8bb0,\u6574\u7406\u4e00\u4e0b\u5b66\u4e86\u8fd9\u4e48\u4e45\u7684\u601d\u8def,\u5e0c\u671b\u80fd\u5e2e\u5230\u4f60,\u82e5\u6709\u4e0d\u6ee1\u2014\u2014~~\u6211\u529d\u4f60\u4e0d\u8981\u4e0d\u8bc6\u62ac\u4e3e,\u4e0d\u7136\u6211\u5c31\u8dea\u4e0b\u6c42\u4f60[doge]~~\u3002\n# \u4e00\u3001\u77e5\u8bc6\u50a8\u5907\uff08\u4f1a\u7684\u8df3\u5427)\n## \u7f51\u7edc\u6d41\u7684\u57fa\u672c\u6982\u5ff5\uff1a\n\u4e00\u4e2a\u6709\u5411\u56fe $G=(V,E)$ \uff0c\u6bcf\u6761\u6709\u5411\u8fb9 $(x,y)$ \u90fd\u6709\u4e00\u4e2a\u7ed9\u5b9a\u7684**\u5bb9\u91cf**\u8bb0\u4e3a $c(x,y)$ \uff08\u82e5 $c(x,y)=0$ \uff0c\u5c31\u8bf4\u660e\u4e0d\u5b58\u5728\u8fb9 $(x,y)$ \uff09\uff0c\u56fe\u4e2d\u8fd8\u6709\u4e24\u4e2a\u7279\u6b8a\u8282\u70b9**\u6e90\u70b9**\u3001**\u6c47\u70b9**\u5206\u522b\u8bb0\u4e3a $S$ \u3001 $T$ \u3002 $S$ \u4f1a\u6e90\u6e90\u4e0d\u65ad\u5730\u6d41\u51fa\u65e0\u7a77\u7684\u6c34\u6d41\uff0c\u4f46\u6bcf\u6761\u8fb9\u53ea\u80fd\u901a\u8fc7 $c(x,y)$ \u7684\u6c34\u6d41\uff0c $T$ \u53ef\u4ee5\u5bb9\u7eb3\u65e0\u7a77\u7684\u6c34\u6d41\uff0c\u800c\u5176\u4f59\u4e2a\u70b9\u65e0\u6cd5\u5bb9\u7eb3\u6c34\u6d41\uff08\u5373\u6d41\u5165\u5c31\u5fc5\u987b\u5168\u90e8\u6d41\u51fa\uff09\u3002  \n\u4efb\u610f\u4e00\u79cd\u6ee1\u8db3\u6761\u4ef6\u7684\u6d41\u6c34\u65b9\u6cd5\uff08\u5373\u8ba9\u6c34\u6d41\u4ece $S$ \u6d41\u5230 $T$ \uff09\u53eb\u505a**\u6d41\u51fd\u6570**\uff0c\u8bb0\u4e3a $f(x,y)$ \uff08\u8868\u793a\u4ece\u70b9 $x$ \u6d41\u5411 $y$ \u7684\u6c34\u6d41\uff09\uff0c\u660e\u663e\uff0c\u6d41\u51fd\u6570\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a\n- $0 \\le f(x,y) \\le c(x,y)$\n\n- $f(x,y)=-f(y,x)$ \uff08\u5373\u4ece $x$ \u6d41\u5411 $y$ \u7684\u6d41\u91cf\u4e5f\u5c31\u662f\u4ece $y$ \u6d41\u5411 $x$ \u7684\u6d41\u91cf\u7684\u76f8\u53cd\u6570\uff09\n- $\\forall x \\ne S,T, \\sum\\limits_{u,x\\in \tE}^{}f(u,x)= \\sum\\limits_{x,v\\in \tE}^{}f(x,v)$ \uff08\u5373\u9664 $S$ \uff0c $T$ \u5916\u5176\u4f59\u70b9\u6d41\u5165\u6d41\u91cf\u7b49\u4e8e\u6d41\u51fa\u6d41\u91cf\uff0c\u6d41\u91cf\u5b88\u6052\uff09\n## \u6b8b\u91cf\u7f51\u7edc\n\u5bf9\u4e8e\u4efb\u610f\u5408\u6cd5\u7684\u6d41\u51fd\u6570 $f$ \uff0c\u90fd\u53ef\u6784\u5efa\u4e00\u4e2a\u65b0\u56fe $G2$ \uff08\u5176\u5b9e\u5e94\u8be5\u8bb0\u505a $G'$ \u4f46\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u8bb0\u4e3a $G2$ \uff09\uff0c\u6784\u5efa\u65b9\u6cd5\u5982\u4e0b\uff1a\n1. \u5c06\u539f\u56fe\u6bcf\u6761\u8fb9\u5bb9\u91cf\u53d8\u4e3a $c(x,y)-f(x,y)$ \uff08\u5373\u51cf\u6389\u5df2\u7ecf\u7528\u6389\u7684\u6d41\u91cf\uff09\n1. \u5bf9\u4e8e\u6bcf\u6761\u8fb9 $(x,y)$ \uff0c\u521b\u5efa\u5b83\u7684\u53cd\u5411\u8fb9 $(y,x)$ \u5e76\u4ee4 $c(y,x)=f(x,y)$ \uff08\u5373\u4ee5\u6d41\u7684\u6d41\u91cf\u8ba9\u5b83\u53ef\u4ee5\u53cd\u6094\u518d\u6d41\u56de\u6765\uff09\n\n\u8be5\u56feG2\u88ab\u6211\u4eec\u53eb\u505a**\u6b8b\u91cf\u7f51\u7edc**  \n\u9700\u8981\u6ce8\u610f\u7684\u662f,\u53cd\u5411\u8fb9\u662f\u6211\u4eec\u65b0\u52a0\u7684,\u539f\u56fe\u4e2d\u5e76\u4e0d\u5b58\u5728,\u82e5\u539f\u56fe\u4e2d\u672c\u5c31\u6709\u8fb9 $(x,y)$ \u548c\u8fb9 $(y,x)$ \uff08\u5373\u539f\u56fe\u5c31\u6709\u53cd\u5411\u8fb9\uff09\uff0c\u5e94\u5728\u6784\u5efa\u539f\u56fe $G$ \u65f6\u5c31\u65b0\u5efa\u4e00\u70b9 $z$ \uff0c\u4f7f\u5f97 $(y,x)$ \u53d8\u4e3a $(y,z)$ \uff0c $(z,x)$ \u3002  \n\u5982\u56fe\uff08\u753b\u7684\u4e11\u6c42\u4f60\u618b\u7740\u5427\uff01\uff09\n![\u8f93\u5165](https://cdn.luogu.com.cn/upload/image_hosting/2fzwiq9k.png)\n $\\uparrow$ \u8fd9\u662f\u8f93\u5165\u7684\u6709\u5411\u56fe\u3002\n![G](https://cdn.luogu.com.cn/upload/image_hosting/qp8a10w5.png)\n $\\uparrow$ \u8fd9\u662f\u53bb\u6389\u53cd\u5411\u8fb9\u7684\u539f\u56fe $G$ \u3002\n![f](https://cdn.luogu.com.cn/upload/image_hosting/eri7qydk.png)\n $\\uparrow$ \u8fd9\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u6d41\u51fd\u6570\uff0c\u56fe\u4e2d\u7eff\u8272\u4ee3\u8868 $f(x,y)$ \u3002 \n![G2](https://cdn.luogu.com.cn/upload/image_hosting/pq7ur9ym.png)\n $\\uparrow$ \u8fd9\u662f\u8be5\u6d41\u51fd\u6570\u7684\u6b8b\u91cf\u7f51\u7edc\uff0c\u84dd\u8272\u4e3a\u539f\u56fe\u8fb9\u5bb9\u91cf\uff08\u5df2\u6539\u53d8\uff09\uff0c\u7d2b\u8272\u4e3a\u52a0\u5165\u7684\u53cd\u5411\u8fb9\u3002\n## \u6700\u5927\u6d41\n\u7ed9\u5b9a\u4e00\u4e2a\u7f51\u7edc $G$ ,\u5bf9\u4e8e\u6240\u6709\u5408\u6cd5\u7684 $f$ ,\u4ece $S$ \u6d41\u51fa\u7684\u6d41\u91cf\u6700\u5927\u7684\u8bb0\u4e3a\u8be5\u7f51\u7edc\u7684\u6700\u5927\u6d41\uff0c\u5982\u4e0a\u56fe\u4e2d\u6700\u5927\u6d41\u4e3a $7$ \uff08\u5373\u662f\u7eff\u8272\u7684\u6d41\u51fd\u6570\uff09  \n\u6700\u5927\u6d41\u7684\u6c42\u6cd5\u5f88\u591a,\u4f46\u57fa\u672c\u601d\u8def\u5927\u4f53\u76f8\u540c\uff1a\n1. \u5148\u627e\u5230\u4efb\u610f\u7684\u4e00\u4e2a\u6d41\u51fd\u6570 $f$ \uff0c\u5e76\u6784\u5efa\u5b83\u7684\u6b8b\u91cf\u7f51\u7edc $G2$ \n\n1. \u5728 $G2$ \u4e2d\u5bfb\u627e $G2$ \u7684\u5408\u6cd5\u6d41\u51fd\u6570\uff08\u6211\u4eec\u4e00\u822c\u8bb0\u5176\u4e3a $f'$ \uff0c\u6587\u4e2d\u79f0\u5176\u4e3a $f2$ \uff0c $f2$ \u4e5f\u53eb\u505a**\u589e\u5e7f\u8def**\uff09\n1. \u5c06\u627e\u5230\u7684\u589e\u5e7f\u8def\u52a0\u4e0a\u539f\u56fe\u7684\u6d41\u51fd\u6570\u6784\u6210\u65b0\u7684\u6d41\u51fd\uff08\u5373 $f_{now}=f+f2$ \u5e76\u5c06 $G2$ \u66f4\u65b0\u6210\u4e3a $f_{now}$ \u7684\u6b8b\u91cf\u7f51\u7edc\uff09\n1. \u91cd\u590d\u7b2c $2$ \uff0c $3$ \u6b65\u76f4\u5230\u65e0\u589e\u5e7f\u8def\uff0c\u6b64\u65f6\u7684 $f$ \u5373\u662f\u6700\u5927\u6d41\n\n\u8be5\u601d\u8def\u7684\u8bc1\u660e\u6bd4\u8f83\u7b80\u5355\uff0c\u60f3\u4e86\u89e3\u7684\u53ef\u4ee5\u81ea\u5df1\u767e\u5ea6\uff0c\u4e0b\u9762\u653e\u4e24\u79cd\u7b97\u6cd5\uff08\u90fd\u5df2\u901a\u8fc7[P3376](https://www.luogu.com.cn/problem/P3376)\uff09\uff1a\n#### \u4e00.Edmonds-Karp(EK\u7b97\u6cd5)  \n\u8be5\u7b97\u6cd5\u5c31\u662f\u4ee5\u4e0a\u601d\u8def\u7684\u76f4\u63a5\u5b9e\u73b0\uff0c\uff08\u672a\u4f18\u5316\u7248\uff09\u51e0\u4e4e\u4e0d\u4f1a\u7528\uff0c\u4ec5\u4e86\u89e3\u5373\u53ef\n```cpp\n//Edmonds-Karp    O(nm^2)\n//n+m = 10^3~10^4\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nconst int N=1000+5,M=20000+5;\nconst int INF=0x3f3f3f3f;\nint n,m,S,T;\t\nint q[N],incf[N],pre[N];\t\t//q\u961f\u5217,incf\u6b8b\u7559\u7f51\u7edc\u6d41\u91cf,pre\u524d\u9a71\u8fb9 \nbool vis[N]; \nint h[N],e[M],f[M],ne[M],idx=0;\t\t//e\u76ee\u6807\u7f16\u53f7,f\u8be5\u8fb9\u6d41\u91cf\t\nvoid add(int x,int y,int c){\t\t//\u4f7f\u7528\u6210\u5bf9\u50a8\u5b58\u7684\u6280\u5de7i^1\u53ca\u662fi\u7684\u53cd\u5411\u8fb9,\u4e0d\u61c2\u7684\u8bf7\u770b\u7b2c\u4e8c\u5927\u90e8\u5206\n\te[idx]=y,f[idx]=c;\n\tne[idx]=h[x],h[x]=idx++;\n\t\n\te[idx]=x,f[idx]=0;\n\tne[idx]=h[y],h[y]=idx++;\n\treturn ;\n}\nbool bfs(){\t\t\t//\u5bfb\u627e\u589e\u5e7f\u8def \n\tint hh=0,tt=0;\n\tmemset(vis,false,sizeof vis);\n\tq[0]=S,vis[S]=true,incf[S]=INF;\t\t//\u521d\u59cb\u5316,\u628aS\u7684\u51fa\u6d41\u91cf\u5b9a\u4e3a\u65e0\u7a77\u5927 \n\twhile(hh<=tt){\n\t\tint t=q[hh++];\n\t\tfor(int i=h[t];i!=-1;i=ne[i]){\n\t\t\tint ver=e[i];\n\t\t\tif(!vis[ver]&&f[i]){\t\t//\u672a\u5230\u8fc7\u4e14\u8fd8\u6709\u6d41\u91cf \n\t\t\t\tvis[ver]=true;\n\t\t\t\tincf[ver]=min(incf[t],f[i]);\t//\u6700\u5927\u6d41\u91cf\u4e3a\u5404\u8fb9\u6d41\u91cf\u6700\u5c0f\u503c \n\t\t\t\tpre[ver]=i;\t\t\t\t\t//\u8bb0\u5f55\u524d\u9a71\u8fb9 \n\t\t\t\tif(ver==T) return true;\t\t\n\t\t\t\tq[++tt]=ver;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nlong long EK(){\n\tlong long maxflow=0;\t\t//\u8fd9\u91cc\u4ec5\u662f\u672c\u4eba\u4e60\u60ef\u5f00\u4e86long long\n\twhile(bfs()){\t\t//\u82e5\u5b58\u5728\u589e\u5e7f\u8def \n\t\tmaxflow+=incf[T];\t\t \n\t\tfor(int i=T;i!=S;i=e[pre[i]^1]){\t//pre[i]\u4e3a\u524d\u9a71\u8fb9->pre[i]^1\u4e3a\u524d\u9a71\u8fb9\u7684\u53cd\u5411\u8fb9 \n                                                        //->e[pre[i]^]\u4e3a\u8be5\u53cd\u5411\u8fb9\u7684\u76ee\u6807\u70b9,\u5373\u662f\u524d\u4e00\u4e2a\u70b9\n\t\t\t//\u66f4\u6539\u6b8b\u7559\u7f51\u7edc\t\t\t\t\t\t\t\t \n\t\t\tf[pre[i]]-=incf[T];\n\t\t\tf[pre[i]^1]+=incf[T];\n\t\t}\n\t}\n\treturn maxflow;\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&S,&T);\n\tmemset(h,-1,sizeof h);\n\tfor(int i=1;i<=m;++i){\n\t\tint x,y,c;\n\t\tscanf(\"%d%d%d\",&x,&y,&c);\n\t\tadd(x,y,c);\n\t}\t\n\tprintf(\"%ld\",EK());\n\treturn 0;\n}\n```\n#### \u4e8c.Dinic\u7b97\u6cd5\n\u901a\u8fc7\u6784\u5efa**\u5206\u5c42\u56fe**\u6765\u4f7f\u589e\u5e7f\u65f6\u4e00\u6b21\u6027\u589e\u5e7f\u591a\u6761\u589e\u5e7f\u8def,\u662f\u4ee5\u4e0a\u601d\u8def\u7684\u4f18\u5316,\u672c\u4eba\u8f83\u4e3a\u504f\u7231\u8be5\u7b97\u6cd5\n```cpp\n//Dinic   O(n^2m)\n//n+m = 10^4~10^5\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll; \nconst ll N=1000+5,M=20000+5;\t\t//\u6709\u65b9\u5411\u8fb9M\u8981\u5f002\u500d \nconst ll INF=0x3f3f3f3f;\nll n,m,S,T;\t\nll q[N],d[N],cur[N];\t\t//q\u961f\u5217,d\u9ad8\u5ea6,cur\u5f53\u524d\u5f27\u4f18\u5316 \nll h[N],e[M],f[M],ne[M],idx=0;\t\t//h,e,ne,idx\u90bb\u63a5\u8868,f\u6d41\u91cf \nvoid add(ll x,ll y,ll c){\t\t \n\te[idx]=y,f[idx]=c;\n\tne[idx]=h[x],h[x]=idx++;\n\t\n\te[idx]=x,f[idx]=0;\n\tne[idx]=h[y],h[y]=idx++;\n\treturn ; \n}\nbool bfs(){\t\t\t//\u5bfb\u627e\u6709\u65e0\u589e\u5e7f\u8def\u5e76\u5efa\u7acb\u5206\u5c42\u56fe \n\tll hh=0,tt=0;\n\tmemset(d,-1,sizeof d);\n\tq[0]=S,d[S]=0,cur[S]=h[S];\t //S\u521d\u59cb\u9ad8\u5ea6\u4e3a0,\u5f53\u524d\u5f27\u521d\u59cb\u4e3a\u7b2c\u4e00\u6761\u51fa\u8fb9 \n\twhile(hh<=tt){\n\t\tll t=q[hh++];\n\t\tfor(ll i=h[t];i!=-1;i=ne[i]){\n\t\t\tll ver=e[i];\n\t\t\tif(d[ver]==-1 &&f[i]){\t\t//\u4e00\u5b9a\u8981\u5224\u65ad\u5bb9\u91cf\u5927\u4e8e0 \n\t\t\t\td[ver]=d[t]+1;\t\t//\u5c42\u6570 \n\t\t\t\tcur[ver]=h[ver];\t//\u5f53\u524d\u5f27\u521d\u59cb\u4e3a\u7b2c\u4e00\u6761\u51fa\u8fb9 \t\t\n\t\t\t\tif(ver==T) return true;\t\t\n\t\t\t\tq[++tt]=ver;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nll find(ll u,ll limit){\t//\u627e\u5230\u589e\u5e7f\u8def,find(u,limit)\u8868\u793a\u4ece\u70b9u\u5f00\u59cb,\n\t\t\t\t\t\t\t\t\t//\u4eceS\u5230u\u7684\u6700\u5927\u5bb9\u91cf\u4e3alimit \n\tif(u==T) return limit;\n\tll flow=0;\t\t//flow\u8868\u793a\u4eceu\u5411T\u6d41\u7684\u6700\u5927\u6d41\u91cf \n\tfor(ll i=cur[u];i!=-1&&flow<limit;i=ne[i]){\t\t//\u4ece\u672a\u6ee1\u7684\u8def\u5f84\u5f00\u59cb\u641c\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//flow<limit\u662f\u5f88\u91cd\u8981\u7684\u4f18\u5316! \n\t\tcur[u]=i;\t\t//\u5f53\u524d\u5f27\u4f18\u5316,\u641c\u5230i\u5c31\u610f\u5473\u7740i\u524d\u7684\u8fb9\u5df2\u7528\u5b8c,\u5c06\u5f53\u524d\u5f27\u66f4\u65b0 \n\t\tll ver=e[i];\n\t\tif(d[ver]==d[u]+1&&f[i]){\t\t//\u4fdd\u8bc1\u5f53\u524d\u70b9\u5728\u4e0a\u4e00\u70b9\u7684\u4e0b\u4e00\u5c42,\u540c\u6837\u8981\u6ce8\u610ff>0 \n\t\t\tll t=find(ver,min(f[i],limit-flow));\t\n\t\t\tif(!t) d[ver]=-1;\t\t//\u82e5t\u5230\u7ec8\u70b9\u65e0\u589e\u5e7f\u8def\u5f84,\u5c31\u5220\u53bb\u70b9ver(\u628aver\u9ad8\u5ea6\u5b9a\u4e3a-1) \n\t\t\t\n\t\t\tf[i]-=t;\n\t\t\tf[i^1]+=t;\n\t\t\tflow+=t; \n\t\t} \n\t}\n\treturn flow;\n}\nll Dinic(){\n\tll maxflow=0,flow;\t\n\twhile(bfs())\t\t//\u82e5\u5b58\u5728\u589e\u5e7f\u8def \n\t\twhile(flow=find(S,INF)) \t\t//\u627e\u51fa\u5f53\u524d\u56fe\u4e0a\u6240\u6709\u589e\u5e7f\u8def \n\t\t\tmaxflow+=flow;\t\t\n\treturn maxflow;\n}\nint main(){\n\tscanf(\"%lld%lld%lld%lld\",&n,&m,&S,&T);\n\tmemset(h,-1,sizeof h);\n\tfor(int i=1;i<=m;++i){\n\t\tll x,y,c;\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&c);\n\t\tadd(x,y,c);\n\t}\t\n\tprintf(\"%lld\",Dinic());\n\treturn 0;\n}\n```\n#### \u4e09.\u5176\u4ed6\u8fd8\u6709ISAP\uff08\u4f18\u5316\u540e\u7684EK\uff09\uff0cHLPP\uff08\u9876\u6d41\u63a8\u8fdb\uff09\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c\u5bf9\u4e8e\u4ee5\u4e0a\u6240\u6709\u7b97\u6cd5\u4ecd\u5b58\u95ee\u9898\u7684\u5efa\u8bae\u53bb\u5148\u770b\u770b[P3376\u7684\u9898\u89e3](https://www.luogu.com.cn/problem/solution/P3376)\n## \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\u5728\u8fd9\u7c7b\u95ee\u9898\u4e2d\u4e0d\u5728\u4ec5\u5b58\u5728\u5bb9\u91cf\u4e0a\u754c $c$ \uff0c\u8fd8\u5b58\u5728\u4e0b\u754c\uff08\u4e0d\u59a8\u8bb0\u4e3a $l$ \uff09\uff0c\u5e76\u4e14\u4e0d\u5b58\u5728 $S$ \uff0c $T$ \u4e24\u70b9\u3002  \n\u5bf9\u4e8e\u6b64\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5982\u4e0b\u64cd\u4f5c\u53d8\u4e3a\u7f51\u7edc\u6700\u5927\u6d41\uff1a\n1. \u65b0\u5efa\u6e90\u70b9\u548c\u6c47\u70b9\n\n1. \u4e3a\u6ee1\u8db3\u6027\u8d281\uff08\u5fd8\u4e86\u7684\u4e0a\u53bb\u770b\uff09\uff0c\u5c06 $c$ \u53d8\u4e3a $c-l$ \uff0c\u5373\u539f\u6765 $(x,y) \\le f(x,y) \\le c(x,y)$ \u53d8\u4e3a $0 \\le f(x,y) \\le c(x,y)-l(x,y)$ \n1. \u7ecf\u8fc7\u7b2c2\u6b65\u540e\u6211\u4eec\u53d1\u73b0\u6d41\u91cf\u4e0d\u5b88\u6052\uff0c\u6545\u7528\u4e00\u4e2a\u6570\u7ec4 $ve$ \uff08Virtual Edge\uff09\u50a8\u5b58\u6bcf\u4e2a\u70b9\u7684\u6d41\u91cf\u53d8\u5316\u91cf\uff0c\u5373\u5bf9\u4e8e\u8fb9 $(x,y)$ \uff0c\u7ecf\u7b2c2\u6b65\u53d8\u5316\u540e\uff0c $x$ \u7684\u51fa\u6d41\u91cf\u5c11\u4e86 $l(x,y)$ \uff0c $y$ \u7684\u5165\u6d41\u91cf\u5c11\u4e86 $l(x,y)$ \uff0c\u6545 $ve(x)-=l(x,y)$ \uff0c $ve(y)+=l(x,y)$ \n1. \u5229\u7528\u7b2c3\u6b65\u7edf\u8ba1\u7684 $ve$ \u6570\u7ec4\uff0c\u65b0\u5efa\u865a\u62df\u8fb9\u4f7f\u6d41\u91cf\u5b88\u6052\uff0c\u5373\u82e5 $ve(x)>0$ \uff0c\u65b0\u5efa\u8fb9 $(S,x)$ \u5e76\u4ee4 $c(S,x)=ve(x)$ \uff1b\u82e5 $ve(x)<0$ \uff0c\u65b0\u5efa\u8fb9 $(x,T)$ \u5e76\u4ee4 $c(x,T)=-ve(x)$ \uff1b\n1. \u8dd1\u4e00\u904d $S$ \u5230 $T$ \u7684\u6700\u5927\u6d41\uff0c\u82e5 $S$ \uff08\u6216 $T$ \uff09\u7684\u6240\u6709\u8fb9\u90fd\u53ef\u4ee5\u6d41\u6ee1\uff0c\u5c31\u8bf4\u660e\u5b58\u5728\u53ef\u884c\u6d41\n\n\u7ecf\u8fc7\u5982\u4e0a\u64cd\u4f5c\uff0c\u5c31\u5c06\u5176\u53d8\u4e3a\u4e00\u4e2a\u57fa\u672c\u7684\u6700\u5927\u6d41\u95ee\u9898\uff0c\u6211\u4eec\u628a\u8fd9\u6837\u5efa\u6210\u7684\u56fe\u79f0\u4f5c\u865a\u62df\u56fe\uff08\u4ec5\u662f\u672c\u4eba\u4e60\u60ef\uff09\uff0c\u8bb0\u4e3a $G3$ \u3002\n## \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\u7ec8\u4e8e\u6b65\u5165\u6b63\u9898\u4e86  \n\u6b64\u7c7b\u95ee\u9898\u76f8\u6bd4\u4e8e\u4e0a\u4e00\u7c7b\u533a\u522b\u5728\u4e8e\u539f\u9898\u4e2d\u5c31\u5b58\u5728\u6e90\u70b9\u548c\u6c47\u70b9\uff08\u4e3a\u4ee5\u793a\u533a\u522b\u8bb0\u4e3a $s$ \u3001 $t$ \uff09\u3002  \n\u800c\u89e3\u51b3\u65b9\u5f0f\u4e0e\u4e0a\u7c7b\u95ee\u9898\u7c7b\u4f3c\uff0c\u533a\u522b\u4ec5\u5728\u4e8e\u6211\u4eec\u8981\u5c06\u70b9 $s$ \u3001 $t$ \u8fd9\u4e24\u4e2a\u4e0d\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\u7684\u70b9\u53d8\u4e3a\u666e\u901a\u70b9\uff0c\u518d\u7528\u65b0\u5efa\u7684 $S$ \u3001 $T$ \u5f53\u4e3a\u6e90\u70b9\u3002  \n\u800c\u4f7f\u5176\u5b88\u6052\u7684\u65b9\u5f0f\u5373\u662f\u65b0\u5efa\u4e00\u6761\u8fb9 $(t,s)$ \u5e76\u4ee4\n $c(t,s)= \\infty$ \uff08\u6b63\u65e0\u7a77\uff09\u3002\n## \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\u597d\uff0c\u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u6c42\u89e3\u53ef\u884c\u6d41\u65f6\u5c31\u662f\u6c42\u7684 $G3$ \u7684\u6700\u5927\u6d41\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u73b0\u5728\u8981\u6c42\u539f\u56fe $G$ \u7684\u53ef\u884c\u6d41\u4e2d\u7684\u6700\u5927\u6d41\u6211\u4eec\u8be5\u600e\u4e48\u529e\uff1f  \n\u4ed4\u7ec6\u601d\u8003\uff0c\u53d1\u73b0\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u56fe\u6ca1\u7528\u2014\u2014\u539f\u56fe\u7684\u6b8b\u91cf\u7f51\u7edc $G2$ \uff01\u8fa3\u4e48\uff0c\u6211\u4eec\u53ef\u5426\u4f7f\u7528\u8fd9\u4e09\u4e2a\u56fe\u6c42\u51fa\u7b54\u6848\u5462\uff1f  \n\u5f53\u7136\u662f\u53ef\u4ee5\u7684\uff0c~~\u4e0d\u7136\u6211\u8bb2\u4e2a\u5c41\u554a~~\uff0c\u800c\u65b9\u6cd5\u5982\u4e0b\uff1a \n1. \u540c\u4e0a\u7c7b\u95ee\u9898\u8dd1\u51fa $G3$ \u7684\u6700\u5927\u6d41\u8bb0\u4e3a $flow3$ \uff0c\u5e76\u5c06\u6b64\u65f6\u539f\u56fe\u4e2d\u7684\u6d41\u51fd\u6570\u8bb0\u4e3a $f3$ \u3002\n1. \u6784\u5efa\u539f\u56fe $G$ \u5173\u4e8e $f3$ \u7684\u6b8b\u91cf\u7f51\u7edc $G2$ \uff0c\u6c42\u51fa $G2$ \u4e2d\u7684\u66fe\u5e7f\u8def\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u5c31\u7b49\u4ef7\u4e8e\u6c42\u51fa $G$ \u7684\u6700\u5927\u6d41 $flow$ \uff08\u6ce8\u610f\u6b64\u65f6\u7528\u7684\u662f\u539f\u56fe $G$ \uff0c\u6545\u5e94\u5220\u53bb\u8fb9 $(t,s)$ \uff09\n1. \u6700\u540e\u7b54\u6848\u5373\u662f $flow+flow3$ \n# \u4e8c\u3001\u672c\u9898\u5206\u6790\n## \u9898\u76ee\u5927\u610f\n\u6709 $n$ \u5929\uff0c $m$ \u4f4d\u5c11\u5973\uff0c\u81f3\u5c11\u4e3a\u5979\u4eec\u6bcf\u4eba\u62cd $G(i)$ \u5f20\u7167\u7247\uff0c\u6bcf\u5929\u603b\u7684\u6700\u591a\u62cd $D(i)$ \u5f20\uff0c\u4e14\u6bcf\u5929\u53ea\u80fd\u4e3a\u7279\u5b9a\u7684\u5c11\u5973\u62cd\u7167\uff0c\u5f20\u6570\u4e3a $x \\in [L,R]$ \u3002\n## \u5efa\u7acb\u6a21\u578b\n\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684~~\u7531\u9898\u76ee\u6807\u9898~~\u5f97\u51fa\u5e94\u4f7f\u7528\u7f51\u7edc\u6d41\uff0c\u5e76\u5728\u7a0d\u5fae\uff0c~~\u63073\u5929~~\uff0c\u601d\u8003\u540e\u5f97\u51fa\u5982\u4e0b\u65b9\u6cd5\uff1a\n- \u5efa\u7acb\u539f\u56fe $G$ \uff1a\n\t1. \u5efa\u7acb\u6e90\u70b9 $s=1$ \uff0c\u6c47\u70b9 $t=m+n+2$ \uff0c\u5e76\u5c06\u5c11\u5973\u5efa\u4e3a\u70b9 $2 \\sim  m+1$ \uff0c\u5929\u6570\u5efa\u4e3a\u70b9 $m+2 \\sim n+m+1$ \n    1. \u5c06\u5c11\u5973\u81f3\u5c11\u8981\u62cd\u7684\u7167\u7247\u6570 $G(i)$ \u5b9a\u4e3a\u4e0b\u754c\uff0c\u65e0\u7a77\u5927\u5b9a\u4e3a\u4e0a\u754c\uff0c\u8ba9\u5c11\u5973 $x$ \u4e0e\u6e90\u70b9 $s$ \u76f8\u8fde\uff0c\u5373\u5efa\u7acb\u8fb9 $(s,x)$ \uff08 $x \\in [2,m+1]$ \uff09\u5e76\u4f7f $c(s,x)=\\infty -G(i)$ \n    1. \u5c06\u6bcf\u5929\u7684\u6700\u5927\u62cd\u7167\u91cf\u5b9a\u4e3a\u4e0a\u754c\uff0c $0$ \u4e3a\u4e0b\u754c\uff0c\u8ba9\u5929\u6570 $y$ \u4e0e\u6c47\u70b9 $t$ \u76f8\u8fde\uff0c\u5373\u5efa\u8fb9 $(y,t)$ \uff08 $y \\in [m+2,m+n+1]$ \uff09\u5e76\u4f7f $c(y,t)=D(i)-0$ \n    1. \u5c06\u5c11\u5973\u4e0e\u5929\u76f8\u8fde\uff0c\u5b9a\u4e0a\u4e0b\u754c\u4e3a $[L,R]$ \uff0c\u5373\u5efa\u8fb9 $(x,y)$ \uff08 $x \\in [2,m+1],y \\in [m+2,m+n+1]$ \uff09\u5e76\u4f7f $c(x,y)=R-L$ \n    1. \u5728\u6784\u5efa\u539f\u56fe\u7684\u540c\u65f6\u7ef4\u62a4 $ve$ \u6570\u7ec4\n- \u6784\u5efa\u865a\u62df\u56fe $G3$ \uff1a\n\t1. \u5efa\u7acb\u6e90\u70b9 $S=0$ \uff0c $T=n+m+3$ \n    1. \u7528 $ve$ \u6570\u7ec4\u5efa\u7acb\u8fde\u63a5 $S$ \uff0c $T$ \u4e0e\u5176\u4ed6\u70b9\u7684\u8fb9\n    1. \u589e\u52a0\u8fb9 $(t,s)$ \uff0c\u5e76\u4f7f $c(t,s)=\\infty$ \n    1. \u5e76\u540c\u65f6\u7ef4\u62a4 $outflow$ \uff08\u8bb0\u5f55\u4eceS\u6d41\u51fa\u7684\u6d41\u91cf,\u7528\u4e8e\u5224\u5b9a\u662f\u5426\u6ee1\u6d41\uff09\n- \u6c42\u89e3 $G3$ \u7684\u6700\u5927\u6d41\n\t1. \u76f4\u63a5\u7528Dinic\u6c42\u89e3\n    1. \u5224\u65ad $Dinic()$ \u662f\u5426\u7b49\u4e8e $outflow$ \uff0c\u82e5\u4e0d\u7b49\uff0c\u5219\u8bf4\u660e\u539f\u56fe\u65e0\u53ef\u884c\u6d41\uff08\u539f\u9898\u65e0\u89e3\uff09\n    1. \u82e5\u76f8\u7b49\uff0c\u7528 $res$ \u8bb0\u5f55\u6b64\u65f6 $s$ \u5230 $t$ \u7684\u6d41\u91cf\uff0c\u5e76\u8fdb\u5165\u4e0b\u4e00\u6b65\n- \u6c42\u89e3 $G$ \u7684\u6700\u5927\u6d41\uff08\u5373\u662f $G2$ \u4e2d\u7684\u66fe\u5e7f\u8def\uff09\n\t1. \u5220\u53bb\u8fb9 $(t,s)$ \n    1. \u4f7f $S=s$ \uff0c $T=t$ \uff08\u5373\u5c06 $G3$ \u53d8\u4e3a $G$ \uff09\n    1. Dinic\u6c42\u89e3\u6700\u5927\u6d41\uff0c\u7b54\u6848\u5373\u4e3a $Dinic()+res$ \n# \u4e09\u3001\u4ee3\u7801\n\u5982\u4e0b\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=1000000+5,M=1000000+5,INF=2147483647;\nint n,m;\t//\u5982\u9898\u610f \nint nn,s,t,S,T;\t\t//nn:\u539f\u56fe\u4e2d\u7684\u70b9\u6570,s:\u539f\u56fe\u7684\u6e90\u70b9,S\u865a\u62df\u56fe\u7684\u6e90\u70b9,t,T\u540c\u7406 \nint q[N],d[N],cur[N],ve[N];\t\t\t//q:\u961f\u5217,d:\u9ad8\u5ea6,cur:\u5f53\u524d\u5f27\u4f18\u5316,ve(Virtual Edge):\u865a\u62df\u8fb9 \nint h[N],e[N],f[N],ne[N],idx=0;\t\t\t//h,e,ne,idx:\u90bb\u63a5\u8868,f:\u6d41\u91cf \ninline void add(int x,int y,int c){\n\te[idx]=y,f[idx]=c,ne[idx]=h[x],h[x]=idx++;\n\te[idx]=x,f[idx]=0,ne[idx]=h[y],h[y]=idx++;\t\t\t//\u4f7f\u7528\u6210\u5bf9\u50a8\u5b58\u7684\u6280\u5de7 \n\treturn ;\n}\ninline int min(int a,int b){\n\treturn a<b? a:b;\n}\nbool bfs(){\t\t\t\t//\u5bfb\u627e\u6709\u65e0\u589e\u5e7f\u8def\u5e76\u5efa\u7acb\u5206\u5c42\u56fe \n\tint hh=0,tt=0;\n\tmemset(d,-1,sizeof d);\n\tq[hh]=S,d[S]=0,cur[S]=h[S];\t\t\t//S\u521d\u59cb\u9ad8\u5ea6\u4e3a0,\u5f53\u524d\u5f27\u521d\u59cb\u4e3a\u7b2c\u4e00\u6761\u51fa\u8fb9 \n\twhile(hh<=tt){\n\t\tint p=q[hh++];\n\t\tfor(int i=h[p];i!=-1;i=ne[i]){\n\t\t\tint ver=e[i];\n\t\t\tif(d[ver]==-1&&f[i]){\t\t\t//\u4e00\u5b9a\u8981\u5224\u65ad\u5bb9\u91cf\u5927\u4e8e0 \n\t\t\t\td[ver]=d[p]+1;\t\t\t\t//\u5c42\u6570  \n\t\t\t\tcur[ver]=h[ver];\t\t\t//\u5f53\u524d\u5f27\u521d\u59cb\u4e3a\u7b2c\u4e00\u6761\u51fa\u8fb9 \n\t\t\t\tif(ver==T) return true;\n\t\t\t\tq[++tt]=ver;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint find(int u,int limit){\t\t\t//\u627e\u5230\u589e\u5e7f\u8def,find(u,limit)\u8868\u793a\u4ece\u70b9u\u5f00\u59cb,\n\t\t\t\t\t\t\t\t\t//\u4eceS\u5230u\u7684\u6700\u5927\u5bb9\u91cf\u4e3alimit \n\tif(u==T) return limit;\n\tint nowflow=0;\t\t\t\t\t//nowflow\u8868\u793a\u4eceu\u5411T\u6d41\u7684\u6700\u5927\u6d41\u91cf \n\tfor(int i=cur[u];i!=-1&&nowflow<limit;i=ne[i]){\t\t//\u4ece\u672a\u6ee1\u7684\u8def\u5f84\u5f00\u59cb\u641c\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//nowflow<limit\u662f\u5f88\u91cd\u8981\u7684\u4f18\u5316! \n\t\tcur[u]=i;\t\t\t//\u5f53\u524d\u5f27\u4f18\u5316,\u641c\u5230i\u5c31\u610f\u5473\u7740i\u524d\u7684\u8fb9\u5df2\u7528\u5b8c,\u5c06\u5f53\u524d\u5f27\u66f4\u65b0 \n\t\tint ver=e[i];\n\t\tif(d[ver]==d[u]+1&&f[i]){\t\t\t\t//\u4fdd\u8bc1\u5f53\u524d\u70b9\u5728\u4e0a\u4e00\u70b9\u7684\u4e0b\u4e00\u5c42,\u540c\u6837\u8981\u6ce8\u610ff>0 \n\t\t\tint tflow=find(ver,min(f[i],limit-nowflow));\n\t\t\tif(!tflow) d[ver]=-1;\t\t\t\t//\u82e5t\u5230\u7ec8\u70b9\u65e0\u589e\u5e7f\u8def\u5f84,\u5c31\u5220\u53bb\u70b9ver(\u628aver\u9ad8\u5ea6\u5b9a\u4e3a-1) \n\t\t\tf[i]-=tflow,f[i^1]+=tflow,nowflow+=tflow;\n\t\t}\n\t}\n\treturn nowflow;\n}\nint Dinic(){\n\tint maxflow=0,inflow;\n\twhile(bfs())\t\t\t\t//\u82e5\u5b58\u5728\u589e\u5e7f\u8def \n\t\twhile(inflow=find(S,INF))  maxflow+=inflow;\t\t\t//\u627e\u51fa\u5f53\u524d\u56fe\u4e0a\u6240\u6709\u589e\u5e7f\u8def \n\treturn maxflow;\n}\nint main(){\n\twhile(~scanf(\"%d%d\",&n,&m)){\n\t\tmemset(h,-1,sizeof h);\n\t\tmemset(ve,0,sizeof ve);\n\t\t//\u6784\u5efa\u539f\u56fe \n\t\ts=1,t=n+m+2;\t\t//\u539f\u56fe\u4e2ds=1\u4e3a\u6e90\u70b9,t=n+m+2\u4e3a\u6c47\u70b9 \n\t\tnn=n+m+2;\t\t\t//nn:\u539f\u56fe\u7684\u70b9\u6570 \n\t\tfor(int i=2;i<=m+1;++i){\t//\u5c06\u5c11\u5973\u7f16\u53f7\u4e3a2~m+1,\u5e76\u548c\u6e90\u70b9\u8fde\u901a \n\t\t\tint G;\n\t\t\tscanf(\"%d\",&G);\n\t\t\tadd(s,i,INF-G);\t\n\t\t\tve[i]+=G;\n\t\t\tve[s]-=G;\n\t\t}\n\t\tfor(int i=m+2;i<=m+n+1;++i){\t//\u5c06\u5929\u6570\u7f16\u53f7\u4e3am+2~m+n+1,\u5e76\u548c\u6c47\u70b9\u8fde\u901a \n\t\t\tint C,D;\n\t\t\tscanf(\"%d%d\",&C,&D);\n\t\t\tadd(i,t,D);\n\t\t\tfor(int j=1;j<=C;++j){\t\t//\u5c06\u5929\u4e0e\u5c11\u5973\u8fde\u901a \n\t\t\t\tint TT,L,R;\t\t//TT\u5373\u4e3a\u9898\u4e2d\u7684T\n\t\t\t\tscanf(\"%d%d%d\",&TT,&L,&R);\n\t\t\t\tTT+=2;\t\t//\u6ce8\u610f\u8f93\u5165\u4e2d\u7684\u5c11\u5973\u662f\u4ece0\u7f16\u53f7\u7684\n\t\t\t\tadd(TT,i,R-L);\t\n\t\t\t\tve[TT]-=L;\t\t\t//\u4e00\u5b9a\u8981\u51cfL,\u522b\u51cfR\uff01 \n\t\t\t\tve[i]+=L; \n\t\t\t}\n\t\t}\n\t\t//\u6784\u5efa\u865a\u62df\u56fe \n\t\tS=0,T=n+m+3;\t\t//S=0\u4e3a\u865a\u62df\u56fe\u6e90\u70b9,T=n+m+3\u4e3a\u865a\u62df\u56fe\u6c47\u70b9 \n\t\tint outflow=0;\t\t//\u8bb0\u5f55\u4ece\u865a\u62df\u6e90\u70b9\u51fa\u6d41\u91cf,\u7528\u4e8e\u5224\u65ad\u662f\u5426\u662f\u6ee1\u6d41 \n\t\tfor(int i=1;i<=nn;++i){\t\t//\u521b\u5efa\u865a\u62df\u8fb9\u4fdd\u8bc1\u865a\u62df\u56fe\u4e2d\u6d41\u91cf\u5b88\u6052 \n\t\t\tif(ve[i]>0){\n\t\t\t\tadd(S,i,ve[i]);\n\t\t\t\toutflow+=ve[i]; \n\t\t\t} \n\t\t\telse if(ve[i]<0) add(i,T,-ve[i]);\n\t\t}\n\t\tadd(t,s,INF);\t\t//\u589e\u52a0\u4e00\u6761\u4ecet\u5230s\u7684\u8fb9,\u4fdd\u8bc1\u6d41\u91cf\u5b88\u6052 \n\t\tif(Dinic()<outflow) printf(\"-1\\n\\n\");\t\t//\u52a1\u5fc5\u4e24\u4e2a\\n \n\t\telse{\n\t\t\tint res=f[idx-1];\t\t//\u6700\u540e\u52a0\u7684\u8fb9\u7684\u53cd\u5411\u8fb9\u7684\u6d41\u91cf\n\t\t\t\t\t\t\t\t\t//\u5373\u662f\u5f53\u524d(\u865a\u62df\u56fe\u7684)\u6ee1\u6d41\u4e2ds->t\u7684\u6d41\u91cf\n\t\t\tf[idx-1]=f[idx-2]=0;\t//\u5220\u9664\u8be5\u8fb9\t\n\t\t\tS=s,T=t;\t\t//\u56e0\u4e3a\u73b0\u5728\u6c42\u7684\u662fs->t\u7684\u6700\u5927\u6d41\u91cf,\n\t\t\t\t\t\t\t//\u6240\u4ee5\u91cd\u65b0\u521d\u59cb\u5316\u6e90\u70b9\u548c\u6c47\u70b9 \n\t\t\tprintf(\"%d\\n\\n\",res+Dinic()); \t\t//ans\u5373\u4e3a\u865a\u62df\u56fe\u4e2ds->t\u7684\u6d41\u91cf+\n\t\t\t\t\t\t\t\t\t\t\t\t//\u65b0\u589e\u52a0\u7684\u53ef\u884c\u6d41\u91cf \n\t\t}\n\t}\n\treturn 0;\n}\n```\n# \u5168\u5267\u7ec8 The End",
        "postTime": 1617285342,
        "uid": 141393,
        "name": "Dyd\u672c\u4eba",
        "ccfLevel": 0,
        "title": "P5192+\u7f51\u7edc\u6d41\u5b66\u4e60\u7b14\u8bb01"
    },
    {
        "content": "## \u7b97\u6cd5\u8bb2\u89e3\n\u8fd9\u4e2a\u9898\u6ca1\u90a3\u4e48\u6a21\u677f\uff0c\u8fd9\u91cc\u653e\u51e0\u4e2a Loj \u7684\u6a21\u677f\u9898\u3002\n\n- [\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41](https://loj.ac/p/115)\n\n- [\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41](https://loj.ac/p/116)\n\n- [\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41](https://loj.ac/p/117)\n\n\u6211\u5c06\u4f9d\u6b21\u8bb2\u89e3\u8fd9\u51e0\u4e2a\u95ee\u9898\uff0c\u8fd9\u51e0\u4e2a\u95ee\u9898\u524d\u540e\u6709\u5173\u8054\u6027\uff0c\u5efa\u8bae\u987a\u5e8f\u9605\u8bfb\u3002\n\n\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u548c\u666e\u901a\u6700\u5927\u6d41\u4e00\u6837\uff0c\u672c\u6587\u7528 Dinic \u5b9e\u73b0\uff0c\u590d\u6742\u5ea6 $O(n^2m)$\u3002\n\n### \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n- \u524d\u7f6e\u77e5\u8bc6\uff1a\u6700\u5927\u6d41\n\n\u7531\u4e8e\u6ca1\u6709\u6e90\u6c47\uff0c\u6240\u4ee5\u5c31\u4f1a\u5f62\u6210\u73af\u6d41\uff0c\u6839\u636e\u6d41\u91cf\u5e73\u8861\u6027\u8d28\uff0c\u603b\u5165\u5ea6 = \u603b\u51fa\u5ea6\u3002\n\n\u6211\u4eec\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u5165\u5ea6\u548c\u51fa\u5ea6**\u4e0b\u9650**\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5165\u5ea6\u5c0f\uff0c\u90a3\u4e48\u8bf4\u660e\u5fc5\u987b\u8981\u4ece\u524d\u9762\u6d41\u51fa\u66f4\u591a\u7684\u6d41\u91cf\uff0c\u5426\u5219\u8bf4\u660e\u8981\u6d41\u51fa\u66f4\u591a\u7684\u6d41\u91cf\u3002\n\n- \u5efa\u56fe\uff1a\n\n\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u6e90\u70b9\u548c\u4e00\u4e2a\u865a\u62df\u6c47\u70b9\uff0c\u5e76\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u51fa\u5ea6\u4e0b\u9650 $in_i$ \u548c $out_i$\u3002\n\n1. \u5165\u5ea6\u521d\u8bfb\u5904\u7406\n\n\u5982\u679c $out_i \\lt in_i$ \u90a3\u4e48\u6211\u4eec\u4ece\u865a\u62df\u6e90\u70b9 $S$ \u5f80 $i$ \u8282\u70b9\u5efa\u4e00\u6761\u8fb9\u6743\u4e3a $in_i - out_i$ \u7684\u8fb9\u3002\n\n\u5982\u679c $in_i \\lt out_i$ \u90a3\u4e48\u6211\u4eec\u4ece $i$ \u5f80\u865a\u62df\u6c47\u70b9\u5efa\u7acb\u4e00\u6761\u8fb9\u6743\u4e3a $out_i - in_i$ \u7684\u8fb9\u3002\n\n2. \u4e0a\u4e0b\u9650\u5904\u7406\n\n\u5bf9\u4e8e\u4e00\u6761\u5df2\u6709\u7684\u8fb9\uff0c\u6211\u4eec\u5efa\u8bae\u4e00\u6761\u65b0\u7684\u8fb9\uff0c\u8fb9\u6743\u4e3a\u4e0a\u9650\u51cf\u4e0b\u9650\u3002\n\n- \u7b97\u6cd5\u7406\u89e3\n\n\u7406\u89e3\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u5165\u5ea6\u591a\u4e86\uff0c\u5c31\u4ece\u524d\u9762\u51d1\uff0c\u5982\u679c\u51fa\u5ea6\u591a\u4e86\uff0c\u5c31\u5f80\u540e\u8fb9\u4f7f\u547d\u6d41\u3002\u6bcf\u6761\u8fb9\u7684\u6700\u5927\u627f\u53d7\u91cf\u5c31\u662f\u4e0a\u9650\u51cf\u4e0b\u9650\u3002\n\n\u865a\u62df\u6e90\u70b9\u548c\u865a\u62df\u6c47\u70b9\u7684\u4f5c\u7528\u5728\u4e8e\u7edf\u8ba1\u51fa\u6709\u591a\u5c11\u6d41\u91cf\u201c\u6b20\u6b3e\u201d\uff0c\u548c\u591a\u5c11\u6d41\u91cf\u201c\u8fd8\u6b3e\u201d\uff0c\u4ece\u865a\u62df\u8282\u70b9\u8dd1\u6700\u5927\u6d41\uff0c\u770b\u201c\u8fd8\u6b3e\u201d\u591f\u4e0d\u591f\u62b5\u201c\u6b20\u6b3e\u201d\u3002\n\n- \u4ee3\u7801 \uff08Loj 115\uff09\n```cpp\ntdc++.h>\nusing namespace std;\nconst int mxn = 210, mxm = 20410, Inf = 2000000000;\nint S, T, ecnt = 1, n, m, tot;\nstruct edge\n{\n\tint to, nxt, fl;\n}e[mxm << 1];\nint head[mxn], In[mxn], dis[mxn], lst[mxn], Low[mxm << 1];\nvoid add(int f, int t, int fl)\n{\n\te[++ecnt] = (edge){t, head[f], fl};\n\thead[f] = ecnt;\n}\nbool bfs()\n{\n\tqueue <int> q;\n\twhile (!q.empty()) q.pop();\n\tmemset(dis, -1, sizeof(dis));\n\tdis[S] = 1; q.push(S);\n\twhile (!q.empty())\n\t{\n\t\tint node = q.front(); q.pop();\n\t\tlst[node] = head[node];\n\t\tfor (int i = head[node]; i; i = e[i].nxt)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif (e[i].fl && dis[to] == -1)\n\t\t\t{\n\t\t\t\tdis[to] = dis[node] + 1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\treturn (dis[T] != -1);\n}\nint Dinic(int node, int Limit)\n{\n\tif (node == T) return Limit;\n\tint tmp = Limit;\n\tfor (int &i = lst[node]; i;\ti = e[i].nxt)\n\t{\n\t\tint to = e[i].to;\n\t\tif (dis[to] == dis[node] + 1 && e[i].fl)\n\t\t{\n\t\t\tint a = Dinic(to, min(tmp, e[i].fl));\n\t\t\te[i].fl -= a;\n\t\t\te[i ^ 1].fl += a;\n\t\t\ttmp -= a;\n\t\t\tif (tmp == 0) return Limit;\t\n\t\t}\n\t}\n\treturn Limit - tmp;\n}\nint Maxflow()\n{\n\tint res = 0;\n\twhile (bfs())\n\t\tres += Dinic(S, Inf);\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tS = 0; T = n + 1;\n\tfor (int i = 1, f, t, l, u; i <= m; ++i)\n\t{\n\t\tscanf(\"%d %d %d %d\", &f, &t, &l, &u);\n\t\tIn[t] += l; In[f] -= l;\n\t\tLow[i * 2] = l;\n\t\tadd(f, t, u - l); add(t, f, 0);\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif (In[i] > 0)\n\t\t{\n\t\t\tadd(S, i, In[i]); add(i, S, 0);\n\t\t\ttot += In[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tadd(i, T, -In[i]);\n\t\t\tadd(T, i, 0);\n\t\t}\n\t}\n\tif (tot != Maxflow()) printf(\"NO\\n\");\n\telse\n\t{\n\t\tprintf(\"YES\\n\");\n\t\tfor (int i = 2; i <= m * 2; i += 2)\n\t\t\tprintf(\"%d\\n\", e[i ^ 1].fl + Low[i]); \n\t}\n\treturn 0;\n}\n```\n\n### \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n- \u524d\u7f6e\u77e5\u8bc6\uff1a\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n- \u5efa\u56fe\u65b9\u6cd5\uff08\u5148\u7ed9\u7ed3\u8bba\uff09\n\n\n\u5728\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u7684\u57fa\u7840\u4e0a\uff0c\u5efa\u7acb $S$ \u5230 $T$ \u7684\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743 $inf$\u3002\u7136\u540e\u770b $S$ \u5230 $T$ \u662f\u5426\u80fd\u6ee1\u6d41\u3002\n\n- \u7b97\u6cd5\u7406\u89e3\n\n\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u6e90\u6c47\uff0c\u90a3\u4e48\u6bcf\u4e2a\u70b9\u6d41\u91cf\u5e73\u8861\u3002\u6709\u6e90\u6c47\u7684\u8bdd\uff0c\u5c31\u4f1a\u6ee1\u8db3 $out_S = in_T$ \uff08\u6d41\u5165\u591a\u5c11\u6c34\uff0c\u7ecf\u8fc7\u4e00\u756a\u5468\u6298\uff0c\u5c31\u4f1a\u6d41\u51fa\u591a\u5c11\uff09\uff0c\u6211\u4eec\u8981\u8f6c\u5316\u4e3a\u73af\u6d41\u95ee\u9898\uff0c\u5c31\u628a $T$ \u548c $S$ \u4e5f\u8fde\u8d77\u6765\uff0c\u628a $T$ \u6d41\u51fa\u7684\u6d41\u91cf\u6d41\u5230 $S$ \u91cc\uff0c\u4f7f\u5f97\u6d41\u91cf\u5b8c\u6210\uff0c\u8f6c\u5316\u5b8c\u6bd5\u3002\n\n\n### \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\u4e0e\u6700\u5c0f\u6d41\n\n\u6211\u4eec\u5148\u5224\u65ad\u662f\u5426\u6709\u53ef\u884c\u6d41\uff0c\u4f46\u662f\u6211\u4eec\u6c42\u51fa\u7684\u53ef\u884c\u6d41\u4e0d\u4e00\u5b9a\u662f\u6700\u5927\u7684\u6216\u8005\u662f\u6700\u5c0f\u7684\u3002\n\n- \u6700\u5927\u6d41\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u8dd1\u5b8c\u53ef\u884c\u6d41\u7684\u6b8b\u91cf\u7f51\u7edc\u4e0a\uff0c\u4ece $S$ \u5230 $T$ \u770b\u8fd8\u80fd\u589e\u5e7f\u51fa\u591a\u5c11\u6d41\u91cf\u3002\u7b54\u6848\u5c31\u662f\u53ef\u884c\u6d41\u52a0\u589e\u5e7f\u91cf\u3002\n\n- \u4ee3\u7801\uff08Loj 116\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int mxn = 210, mxm = 20410, Inf = 2000000000;\nint S, T, ecnt = 1, n, m, tot, a, b;\nstruct edge\n{\n\tint to, nxt, fl;\n}e[mxm << 1];\nint head[mxn], In[mxn], dis[mxn], lst[mxn], Low[mxm << 1];\nvoid add(int f, int t, int fl)\n{\n\te[++ecnt] = (edge){t, head[f], fl};\n\thead[f] = ecnt;\n}\nbool bfs()\n{\n\tqueue <int> q;\n\twhile (!q.empty()) q.pop();\n\tmemset(dis, -1, sizeof(dis));\n\tdis[S] = 1; q.push(S);\n\twhile (!q.empty())\n\t{\n\t\tint node = q.front(); q.pop();\n\t\tlst[node] = head[node];\n\t\tfor (int i = head[node]; i; i = e[i].nxt)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif (e[i].fl && dis[to] == -1)\n\t\t\t{\n\t\t\t\tdis[to] = dis[node] + 1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\treturn (dis[T] != -1);\n}\nint Dinic(int node, int Limit)\n{\n\tif (node == T) return Limit;\n\tint tmp = Limit;\n\tfor (int &i = lst[node]; i;\ti = e[i].nxt)\n\t{\n\t\tint to = e[i].to;\n\t\tif (dis[to] == dis[node] + 1 && e[i].fl)\n\t\t{\n\t\t\tint a = Dinic(to, min(tmp, e[i].fl));\n\t\t\te[i].fl -= a;\n\t\t\te[i ^ 1].fl += a;\n\t\t\ttmp -= a;\n\t\t\tif (tmp == 0) return Limit;\t\n\t\t}\n\t}\n\treturn Limit - tmp;\n}\nint Maxflow()\n{\n\tint res = 0;\n\twhile (bfs())\n\t\tres += Dinic(S, Inf);\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%d %d %d %d\", &n, &m, &a, &b);\n\tS = 0; T = n + 1;\n\tfor (int i = 1, f, t, l, u; i <= m; ++i)\n\t{\n\t\tscanf(\"%d %d %d %d\", &f, &t, &l, &u);\n\t\tIn[t] += l; In[f] -= l;\n\t\tLow[i * 2] = l;\n\t\tadd(f, t, u - l); add(t, f, 0);\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif (In[i] > 0)\n\t\t{\n\t\t\tadd(S, i, In[i]); add(i, S, 0);\n\t\t\ttot += In[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tadd(i, T, -In[i]);\n\t\t\tadd(T, i, 0);\n\t\t}\n\t}\n\tadd(b, a, Inf); add(a, b, 0);\n\tif (tot != Maxflow()) printf(\"please go home to sleep\\n\");\n\telse\n\t{\n\t\tS = a; T = b;\n\t\ttot = e[ecnt].fl;\n\t\te[ecnt - 1].fl = e[ecnt].fl = 0;\n\t\tprintf(\"%d\\n\", Maxflow() + tot);\n\t}\n\treturn 0;\n}\n```\n\n- \u6700\u5c0f\u6d41\n\n\u601d\u8def\u4e5f\u5dee\u4e0d\u591a\uff0c\u8dd1\u51fa\u53ef\u884c\u6d41\u540e\uff0c\u4ece $T$ \u5230 $S$ \u8dd1\u6700\u5927\u6d41\uff0c\u770b\u80fd\u9000\u8fd8\u591a\u5c11\u6d41\u91cf\uff0c\u7b54\u6848\u4e3a\u53ef\u884c\u6d41\u51cf\u9000\u8fd8\u7684\u6700\u5927\u6d41\u3002\n\n\u8fd9\u91cc\u53e6\u5916\u63d0\u4e00\u4e0b\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8c\u5206\u6cd5\u5224\u65ad\u662f\u5426\u5b58\u5728\u53ef\u884c\u6d41\uff0c\u4f46\u662f\u7531\u4e8e\u590d\u6742\u5ea6\u591a\u4e00\u4e2a $\\log$ \u6b64\u5904\u4e0d\u8be6\u7ec6\u5c55\u5f00\u3002\n\n- \u4ee3\u7801 \uff08Loj 117\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int mxn = 50010, mxm = 125010 * 2, Inf = 2000000000;\nint S, T, ecnt = 1, n, m, tot, a, b;\nstruct edge\n{\n\tint to, nxt, fl;\n}e[mxm << 1];\nint head[mxn], In[mxn], dis[mxn], lst[mxn], Low[mxm << 1];\nvoid add(int f, int t, int fl)\n{\n\te[++ecnt] = (edge){t, head[f], fl};\n\thead[f] = ecnt;\n}\nbool bfs()\n{\n\tqueue <int> q;\n\twhile (!q.empty()) q.pop();\n\tmemset(dis, -1, sizeof(dis));\n\tdis[S] = 1; q.push(S);\n\twhile (!q.empty())\n\t{\n\t\tint node = q.front(); q.pop();\n\t\tlst[node] = head[node];\n\t\tfor (int i = head[node]; i; i = e[i].nxt)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif (e[i].fl && dis[to] == -1)\n\t\t\t{\n\t\t\t\tdis[to] = dis[node] + 1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\treturn (dis[T] != -1);\n}\nint Dinic(int node, int Limit)\n{\n\tif (node == T) return Limit;\n\tint tmp = Limit;\n\tfor (int &i = lst[node]; i;\ti = e[i].nxt)\n\t{\n\t\tint to = e[i].to;\n\t\tif (dis[to] == dis[node] + 1 && e[i].fl)\n\t\t{\n\t\t\tint a = Dinic(to, min(tmp, e[i].fl));\n\t\t\te[i].fl -= a;\n\t\t\te[i ^ 1].fl += a;\n\t\t\ttmp -= a;\n\t\t\tif (tmp == 0) return Limit;\t\n\t\t}\n\t}\n\treturn Limit - tmp;\n}\nint Maxflow()\n{\n\tint res = 0;\n\twhile (bfs())\n\t\tres += Dinic(S, Inf);\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%d %d %d %d\", &n, &m, &a, &b);\n\tS = 0; T = n + 1;\n\tfor (int i = 1, f, t, l, u; i <= m; ++i)\n\t{\n\t\tscanf(\"%d %d %d %d\", &f, &t, &l, &u);\n\t\tIn[t] += l; In[f] -= l;\n\t\tLow[i * 2] = l;\n\t\tadd(f, t, u - l); add(t, f, 0);\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif (In[i] > 0)\n\t\t{\n\t\t\tadd(S, i, In[i]); add(i, S, 0);\n\t\t\ttot += In[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tadd(i, T, -In[i]);\n\t\t\tadd(T, i, 0);\n\t\t}\n\t}\n\tadd(b, a, Inf); add(a, b, 0);\n\tif (tot != Maxflow()) printf(\"please go home to sleep\\n\");\n\telse\n\t{\n\t\tS = b; T = a;\n\t\ttot = e[ecnt].fl;\n\t\te[ecnt - 1].fl = e[ecnt].fl = 0;\n\t\tprintf(\"%d\\n\", tot - Maxflow());\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1670989661,
        "uid": 425694,
        "name": "\u90d1\u671d\u66e6zzx",
        "ccfLevel": 6,
        "title": "\u3010\u6a21\u677f\u3011\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41 \u9898\u89e3"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1ahttps://www.cnblogs.com/Tenshi/p/14716271.html\n\n## \u5206\u6790\n\u8fd9\u662f\u4e00\u9053**\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41**\u7684\u6a21\u677f\u9898\uff08~~\u5e9f\u8bdd~~\uff09\u3002\n\n\u65e2\u7136\u662f\u7f51\u7edc\u6d41\u7684\u95ee\u9898\uff0c\u6545\u5e94\u8be5\u5148\u5c06\u56fe\u5efa\u51fa\u6765\uff1a\n\n\u6839\u636e\u9898\u76ee\u7279\u5f81\uff0c\n+ \u6211\u4eec\u5c06\u5c11\u5973\u548c\u6bcf\u4e00\u5929\u770b\u4f5c\u662f\u56fe\u4e2d\u7684\u70b9\u3002\n\n+ \u5f53\u7136\uff0c\u56e0\u4e3a\u6bcf\u4e00\u5929\u90fd\u6709\u62cd\u7167\u6b21\u6570\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u4e00\u4e2a\u6e90\u70b9 $s$ \uff0c\u5411\u6bcf\u4e00\u5929\u8fde\u8fb9\uff0c\u8fd9\u4e2a\u8fb9\u7684\u5bb9\u91cf\u8303\u56f4\u662f $[0,D_i]$ \u3002\n+ \u7c7b\u4f3c\u5730\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5c11\u5973\u90fd\u6709\u4e00\u4e2a\u81f3\u5c11\u62cd\u7167\u5f20\u6570\u7684\u9650\u5b9a\uff0c\u6240\u4ee5\u52a0\u4e00\u4e2a\u6c47\u70b9 $t$ \uff0c\u7136\u540e\u8ba9\u6bcf\u4e2a\u5c11\u5973\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u8303\u56f4\u81ea\u7136\u662f $[G_i,\u221e]$ \u3002\n+ \u81f3\u4e8e\u5c11\u5973\u548c\u6bcf\u4e00\u5929\uff0c\u6839\u636e\u9898\u610f\uff0c\u5979\u4eec\u4e4b\u95f4\u8fde\u8fb9\u7684\u5bb9\u91cf\u662f $[L, R]$ \u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u4fbf\u5c06\u56fe\u5efa\u597d\u4e86\uff0c\u4ece\u56fe\u7684\u7279\u5f81\u4ee5\u53ca\u9898\u610f\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u4e2a\u6c42**\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41**\u7684\u95ee\u9898\u3002\n\n\u600e\u4e48\u89e3\u51b3\u5462\uff1f\n\n\u5982\u679c\u5bf9\u7ea6\u5b9a\u7684\u8bb0\u53f7\u4e0d\u719f\u6089\u53ef\u4ee5\u770b\u770b\u6211\u7684\u535a\u5ba2\uff1a\n[\u8fd9\u91cc](https://www.cnblogs.com/Tenshi/p/14706721.html)\n\n### \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\u9996\u5148\uff0c\u5148\u4ecb\u7ecd\u4e00\u4e0b**\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\u7684\u6c42\u6cd5\uff08\u5373\uff1a**\u53ef\u884c\u5faa\u73af\u6d41**\u7684\u6c42\u6cd5\uff09\uff1a\n\np.s. \u5982\u679c\u4f1a\u7684\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u770b\u4e0b\u9762\u7684\u90e8\u5206\n\n\u5bf9\u4e8e**\u53ef\u884c\u5faa\u73af\u6d41**\u4e2d\u7684\u8fb9 $(u,v)$ \u6709\u5982\u4e0b\u5bb9\u91cf\u9650\u5236\uff1a $\\underline{c}(u,v)\\le f(u,v) \\le \\overline{c}(u,v)$\n\n\u7b80\u5355\u7684\u60f3\u6cd5\u662f\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42**\u6709\u6e90\u6c47\u6700\u5927\u6d41**\u3002\u8f6c\u5316\u7684\u65b9\u6cd5\u81ea\u7136\u662f\u6784\u9020\uff0c\u6784\u9020\u7684\u539f\u5219\u662f\u4fdd\u8bc1\u95ee\u9898\u7684**\u7b49\u4ef7\u3002**\n\n#### \u6784\u9020\u65b9\u5f0f\uff1a\n\u52a0\u5165\u865a\u62df\u6e90\u70b9 $S$ \uff0c\u865a\u62df\u6c47\u70b9 $T$ \u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $x$\uff0c\u8bb0\u5b83\u7684\u5165\u8fb9\uff08\u5047\u8bbe\u5165\u70b9\u4e3a $u$ \uff09\u5bf9\u5e94\u7684\u5bb9\u91cf\u4e0b\u754c\u4e3a $\\underline{c}(u,x)$ \uff0c\u51fa\u8fb9 \uff08\u5047\u8bbe\u51fa\u70b9\u4e3a $v$ \uff09\u5bf9\u5e94\u7684\u5bb9\u91cf\u4e0b\u754c\u4e3a $\\underline{c}(x,v)$ \u3002\n\n\u5982\u679c $c=\\sum \\underline{c}(u,x)-\\sum \\underline{c}(x,v)>0$ \uff0c\u90a3\u4e48\u8fde\u8fb9 $(S,x)$ \uff0c\u5bb9\u91cf\u4e3a $c$ \u3002\n\n\u5982\u679c $c=\\sum \\underline{c}(u,x)-\\sum \\underline{c}(x,v)<0$ \uff0c\u90a3\u4e48\u8fde\u8fb9 $(x,T)$ \uff0c\u5bb9\u91cf\u4e3a $-c$ \u3002\n\n\u6839\u636e\u4e0a\u8ff0\u89c4\u5219\u5f97\u5230\u65b0\u56fe $G'$ \u3002\n\n\u53ea\u9700\u8bc1\u660e\uff1a$G'$ \u7684\u6700\u5927\u6d41\u4e0e\u539f\u56fe $G$ \u7684\u53ef\u884c\u6d41\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\n\n\u8bc1\u660e\u4e00\u4e2a\u6d41\u5bf9\u5e94\u53e6\u4e00\u4e2a\u6d41\u7684\u65b9\u6cd5\uff1a\u4ece\u4e00\u4e2a\u6d41\u8fdb\u884c\u7b49\u4ef7\u53d8\u6362\uff0c\u6240\u5f97\u5230\u7684\u65b0\u6d41\u4ecd\u7136\u5408\u6cd5\uff1a\u5373\u6ee1\u8db3**\u5bb9\u91cf\u9650\u5236\uff0c\u6d41\u91cf\u5b88\u6052**\u3002\n\n\u5bb9\u91cf\u9650\u5236\u8f83\u5bb9\u6613\u8bc1\u660e\uff0c\u6545\u672c\u6587\u51fa\u73b0\u7684\u8bc1\u660e\u90fd\u662f\u5173\u4e8e\u8bc1\u660e**\u6d41\u91cf\u5b88\u6052**\u7684\u3002\n\n#### \u8bc1\u660e\uff1a\n\n\u5148\u8bc1\u660e $G$ \u7684\u4e00\u4e2a\u53ef\u884c\u6d41\u5bf9\u5e94\u7740 $G'$ \u7684\u4e00\u4e2a\u6700\u5927\u6d41\uff08\u8fd9\u91cc\u7684\u6700\u5927\u6d41\u8981\u6c42\u6e90\u70b9\u3001\u6c47\u70b9\u4e0e\u5176\u5b83\u70b9\u7684\u8fde\u8fb9**\u6ee1\u6d41**\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u8ba8\u8bba\u4e2d\u53ef\u4ee5\u53d1\u73b0\u9700\u8981\u8fd9\u4e2a\u7ea6\u675f\uff09\u3002\n\n**\u7ea6\u5b9a**\uff1a\u70b9 $x$ \u7684\u5165\u70b9\u6784\u6210\u7684\u96c6\u5408\u4e3a $U$ \uff0c\u51fa\u70b9\u6784\u6210\u7684\u96c6\u5408\u4e3a $V$ \uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u7701\u53bb\u6c42\u548c $\\sum$ \uff0c\u8868\u8ff0\u65b9\u4fbf\uff0c\u5373 $\\sum \\underline{c}(u,x)=c(U,x)$ \n\uff0c$\\sum \\underline{c}(x,v)=c(x,V)$ \u7b49\u7b49\u3002\n\n\u5bf9 $G$ \u7684\u4e00\u4e2a\u53ef\u884c\u6d41\uff0c\u81ea\u7136\u6709\uff1a $f(U,x)=f(x,V)$\n\n\u7b49\u4ef7\u53d8\u5f62\uff1a $f'(U,x)+\\underline{c}(U,x)=f'(x,V)+\\underline{c}(x,V)$\n\n\u8fdb\u800c\u6709\uff1a$f'(U,x)+\\underline{c}(U,x)-\\underline{c}(x,V)=f'(x,V)$\n\n\u4e0d\u59a8\u8bbe $\\underline{c}(U,x)-\\underline{c}(x,V)>0$ \uff0c \u6ce8\u610f\u5230 $\\underline{c}(U,x)-\\underline{c}(x,V)$ \u6070\u597d\u662f $c(S,x)$\uff0c$\\underline{c}(U,x)-\\underline{c}(x,V)<0$ \u7684\u60c5\u51b5\u540c\u7406\uff0c\u6545\u5bf9\u4e8e\u65b0\u56fe\uff0c\u6d41\u91cf\u4e5f\u662f\u5b88\u6052\u7684\u3002\n\n\u800c\u4e14\u4ece\u4e2d\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u91cc\u7684\u6700\u5927\u6d41\u8981\u6c42\u6e90\u70b9\u3001\u6c47\u70b9\u4e0e\u5176\u5b83\u70b9\u7684\u8fde\u8fb9**\u6ee1\u6d41**\u3002\n\n\u4ece\u4e0a\u9762\u7684\u8bc1\u660e\u53ef\u4ee5\u53d1\u73b0 $G'$ \u7684\u4e00\u4e2a\u6700\u5927\u6d41\u4e5f\u5bf9\u5e94\u7740 $G$ \u7684\u4e00\u4e2a\u53ef\u884c\u6d41\uff0c\u53ea\u9700\u8981\u5c06\u516c\u5f0f\u5012\u7740\u5199\u4e00\u904d\u5373\u53ef\uff08\u56e0\u4e3a\u662f\u6052\u7b49\u53d8\u6362\uff09\u3002\n\n\u81f3\u6b64\uff0c\u8bc1\u660e\u7ed3\u675f\u3002\n\n\u5728\u5177\u4f53\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u8981\u6ce8\u610f\u8dd1\u5b8c\u6700\u5927\u6d41\u4e4b\u540e\uff0c\u5bf9\u5e94\u7684\u8fb9\u9700\u8981\u52a0\u4e0a**\u8865\u507f\u503c**\u624d\u662f\u6240\u8981\u6c42\u7684\u7f51\u7edc\uff08\u53c2\u89c1\u8bc1\u660e\u4e2d\u7684\u516c\u5f0f\u4ee5\u53ca\u4e0b\u9762\u7684\u4ee3\u7801\uff09\u3002\n\n\u6c42\u53d6**\u53ef\u884c\u5faa\u73af\u6d41**\u5177\u4f53\u8fc7\u7a0b\u53ef\u4ee5\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=205, M=12005+N<<1;\nconst int INF=0x3f3f3f3f;\n\nint n, m, S, T;\nstruct node{\n    int to, c, l, next;\n}e[M];\nint h[N], tot;\n\nvoid add(int u, int v, int lc, int uc){\n    e[tot].to=v, e[tot].c=uc-lc, e[tot].l=lc, e[tot].next=h[u], h[u]=tot++;\n    e[tot].to=u, e[tot].c=0, e[tot].next=h[v], h[v]=tot++;\n}\n\nint imo[N]; // in minus out\n\nint d[N], q[N], cur[N];\n\nbool bfs(){\n    memset(d, -1, sizeof d);\n    int tt=-1, hh=0;\n    q[++tt]=S, d[S]=0, cur[S]=h[S];\n    while(tt>=hh){\n        int hd=q[hh++];\n        for(int i=h[hd]; ~i; i=e[i].next){\n            int go=e[i].to;\n            if(d[go]==-1 && e[i].c){\n                cur[go]=h[go];\n                d[go]=d[hd]+1;\n                if(go==T) return true;\n                q[++tt]=go;\n            }\n        }\n    }\n    return false;\n}\n\nint find(int u, int limit){\n    if(u==T) return limit;\n    int flow=0;\n    for(int i=cur[u]; ~i && limit>flow; i=e[i].next){\n        int go=e[i].to;\n        cur[u]=i;\n        if(e[i].c && d[go]==d[u]+1){\n            int t=find(go, min(limit-flow, e[i].c));\n            if(!t) d[go]=-1;\n            flow+=t, e[i].c-=t, e[i^1].c+=t;\n        }\n    }\n    return flow;\n}\n\nint dinic(){\n    int res=0, flow;\n    while(bfs()) while(flow=find(S, INF)) res+=flow;\n    return res; \n}\n\nint main(){\n    memset(h, -1, sizeof h);\n    cin>>n>>m;\n    S=0, T=n+1;\n    for(int i=1; i<=m; i++){\n        int u, v, lc, uc; cin>>u>>v>>lc>>uc;\n        add(u, v, lc, uc);\n        imo[u]-=lc, imo[v]+=lc;\n    }   \n\n    int tot=0;\n    for(int i=1; i<=n; i++)\n        if(imo[i]>0) add(S, i, 0, imo[i]), tot+=imo[i];\n        else if(imo[i]<0) add(i, T, 0, -imo[i]);\n\n    if(dinic()!=tot) puts(\"NO\");\n    else{\n        puts(\"YES\");\n        for(int i=0; i<2*m; i+=2) cout<<e[i].l+e[i^1].c<<endl;\n    }\n    return 0;\n}\n```\n\n\n\u63a5\u4e0b\u6765\u6c42**\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41**\uff1a\n\n\u5728\u4e0a\u9762\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u600e\u6837\u6c42**\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\uff0c\u90a3\u5148\u770b\u770b**\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\u600e\u4e48\u6c42\uff1a\u65b9\u6cd5\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c06\u6c47\u70b9 $t$ \u5411\u6e90\u70b9 $s$ \u8fde\u4e00\u6761\u5bb9\u91cf $\u221e$ \u7684\u8fb9\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a**\u865a\u8fb9**\uff09\u5373\u53ef\uff0c\u6709\u4e2a\u76f4\u89c2\u7684\u6bd4\u55bb\uff1a\u5c31\u50cf\u662f\u5728\u6c47\u70b9 $t$ \u8fde\u63a5\u4e00\u53f0\u6c34\u6cf5\uff0c\u5c06\u6e90\u70b9 $s$ \u6d41\u5f80 \u6c47\u70b9 $t$ \u7684\u6c34\u91cd\u65b0\u6cf5\u4e0a\u53bb\u3002\u8fd9\u6837\u505a\u5c31\u5c06\u95ee\u9898\u8f6c\u6362\u4e3a\u4e86\u719f\u6089\u7684**\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\u95ee\u9898\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff1a\n\n$t$ \u5411\u6e90\u70b9 $s$ \u8fde\u4e00\u6761\u5bb9\u91cf $\u221e$ \u7684\u8fb9\uff0c\u5f97\u5230\u5faa\u73af\u6d41\u3002\n\n\u4ece\u865a\u62df\u6e90\u70b9 $S$ \u5411 $T$ \u8dd1\u4e00\u904d\u6700\u5927\u6d41\u3002\n\n\u8bb0\u5f55 $t$ \u5411 $s$ \u8fde\u7684\u8fb9\u7684\u6d41\u91cf\uff08\u5373\u865a\u8fb9\u6d41\u91cf $res_1$ \uff09\uff0c\u7136\u540e\u65ad\u5f00\u865a\u8fb9\uff0c\u4ece $s$ \u5411 $t$ \u8dd1\u4e00\u904d\u6700\u5927\u6d41\u5f97\u5230\u65b0\u589e\u7684\u6d41\u91cf $res_2$ \uff0c\u7b54\u6848\u5c31\u662f $res_1+res_2$ \u3002\n\n\n\u6ce8\u610f\u5230\uff0c**\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\u5bf9\u5e94\u7684\u6d41\u7f51\u7edc\u4e0e\u865a\u62df\u6e90\u6c47\u70b9 $S,T$ \u76f8\u8fde\u7684\u8fb9\u90fd\u662f\u6ee1\u6d41\uff0c\u6240\u4ee5\u5728\u8dd1\u5b8c\u4e00\u904d\u6700\u5927\u6d41\u4e4b\u540e\uff0c\u4e0e\u865a\u62df\u6e90\u6c47\u70b9 $S,T$ \u76f8\u8fde\u7684\u8fb9\u90fd\u4e0d\u53ef\u80fd\u518d\u88ab\u7528\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5b83\u4eec\u5168\u90e8\u62c6\u6389\uff0c\u7136\u540e\uff0c\u518d\u5c06**\u865a\u8fb9**\uff08\u6c34\u6cf5\uff09\u62c6\u6389\uff0c\u53d1\u73b0\u53ea\u9700\u8981\u52a0\u56de**\u8865\u507f\u503c**\uff08\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u56e0\u4e3a $t$ \u5411 $s$ \u8fde\u7684\u8fb9\u5bb9\u91cf\u8303\u56f4\u662f $[0,\u221e)$ \uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u8865\u507f\uff09\uff0c\u6240\u5f97\u5230\u7684\u6d41\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684**\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\u4e86\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u65b0\u56fe\u7684\u53ef\u884c\u6d41\u548c\u539f\u56fe\uff08\u6ca1\u6709\u7ecf\u8fc7\u53d8\u6362\u7684\uff0c\u6700\u539f\u59cb\u7684\uff09\u7684\u53ef\u884c\u6d41\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u90a3\u4e48\u65b0\u56fe\u7684\u6700\u5927\u6d41\u4e5f\u5fc5\u7136\u662f\u5bf9\u5e94\u7740\u539f\u56fe\u7684\u6700\u5927\u6d41\u4e86\u3002\n\n\u56e0\u6b64\uff0c\u6700\u540e\u6211\u4eec\u4ece $s$ \u5411 $t$ \u8dd1\u4e00\u904d\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=1550, M=365+1000+365*1000+N<<1, INF=0x3f3f3f3f; \n\nint n, m, s, t, S, T;\nstruct node{\n\tint to, c, next;\n}e[M];\nint h[N], tot;\n\n// \u8fde\u8fb9\u51fd\u6570\uff0c\u6709\u8fd9\u6837\u7684\u6027\u8d28\uff1a\u6b63\u5411\u8fb9^1=\u53cd\u5411\u8fb9\nvoid add(int u, int v, int c){\n\te[tot].to=v, e[tot].c=c, e[tot].next=h[u], h[u]=tot++;\n\te[tot].to=u, e[tot].c=0, e[tot].next=h[v], h[v]=tot++;\n}\n\nint imo[N]; // imo \u7684\u610f\u601d\u662f\uff1a in minus out \u5165\u51cf\u53bb\u51fa\n\nint q[N], d[N], cur[N];\nbool bfs(){\n\tmemset(d, -1, sizeof d);\n\tint tt=-1, hh=0;\n\tq[++tt]=S, d[S]=0, cur[S]=h[S];\n\twhile(tt>=hh){\n\t\tint hd=q[hh++];\n\t\tfor(int i=h[hd]; ~i; i=e[i].next){\n\t\t\tint go=e[i].to;\n\t\t\tif(d[go]==-1 && e[i].c){\n\t\t\t\td[go]=d[hd]+1;\n\t\t\t\tcur[go]=h[go];\n\t\t\t\tif(go==T) return true;\n\t\t\t\tq[++tt]=go;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nint find(int u, int limit){\n\tif(u==T) return limit;\n\tint flow=0;\n\tfor(int i=cur[u]; ~i && limit>flow; i=e[i].next){\n\t\tint go=e[i].to;\n\t\tcur[u]=i; // \u5f53\u524d\u5f27\u4f18\u5316\n\t\tif(d[go]==d[u]+1 && e[i].c){\n\t\t\tint t=find(go, min(e[i].c, limit-flow));\n\t\t\tif(!t) d[go]=-1;\n\t\t\te[i].c-=t, e[i^1].c+=t, flow+=t;\n\t\t}\n\t}\n\treturn flow;\n}\n\nint dinic(){\n\tint res=0, flow;\n\twhile(bfs()) while(flow=find(S, INF)) res+=flow;\n\treturn res;\n}\n\nint main(){\n\twhile(cin>>n>>m){\n\t\tmemset(h, -1, sizeof h), tot=0;\n\t\tmemset(imo, 0, sizeof imo);\n\t\t\n\t\ts=0, t=n+m+1, S=n+m+2, T=S+1;\n\t\tfor(int i=1; i<=m; i++){\n\t\t\tint G; cin>>G;\n\t\t\tadd(i, t, INF-G);\n\t\t\timo[i]-=G, imo[t]+=G;\n\t\t}\n\t\t\n\t\tfor(int i=m+1; i<=m+n; i++){\n\t\t\tint C, D; cin>>C>>D;\n\t\t\tadd(s, i, D); // \u8303\u56f4\u662f [0,D] \u56e0\u6b64\u4e0d\u9700\u8981\u66f4\u65b0 imo[]\n\t\t\twhile(C--){\n\t\t\t\tint id, lc, uc; cin>>id>>lc>>uc;\n\t\t\t\tid++;\n\t\t\t\tadd(i, id, uc-lc);\n\t\t\t\timo[i]-=lc, imo[id]+=lc;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint cnt=0;\n\t\tfor(int i=0; i<=n+m+1; i++)\n\t\t\tif(imo[i]>0) add(S, i, imo[i]), cnt+=imo[i];\n\t\t\telse if(imo[i]<0) add(i, T, -imo[i]);\n\t\t\n\t\tadd(t, s, INF); // \u6dfb\u52a0\u201c\u6c34\u6cf5\u201d\n\t\t\n\t\tif(dinic()!=cnt) cout<<-1<<endl<<endl;\n\t\telse{\n\t\t\tint res=e[tot-1].c;\n\t\t\te[tot-1].c=0, e[tot-2].c=0;\n\t\t\tS=s, T=t;\n\t\t\tres+=dinic();\n\t\t\tcout<<res<<endl<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n\n",
        "postTime": 1619624463,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "\u3010\u6a21\u677f\u3011\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41"
    },
    {
        "content": "#P5192 \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\n~~Aya \u8d85\u53ef\u7231\u7684\\~~~\n\n\u901a\u8bfb\u9898\u9762\uff0c\u6211\u4eec\u6574\u7406\u51fa\u4ee5\u4e0b\u51e0\u70b9\n\n- ~~\u6587\u6587\u60f3\u641e\u4e2a\u5927\u65b0\u95fb~~\n- 1.\u6bcf\u5929\u6700\u591a\u62cd $D_i$ \u5f20\u7167\u7247\u3002\n- 2.\u6bcf\u5929\u53ea\u80fd\u8bbf\u95ee\u7ed9\u51fa\u7684 $C_k$ \u4e2a\u5c11\u5973\u3002\n- 3.\u5bf9\u4e8e\u6bcf\u4e2a\u5c11\u5973\uff0c\u81f3\u5c11\u62cd $L_{k_i}$ \u5f20\uff0c\u6700\u591a\u62cd $R_{k_i}$ \u5f20\u3002\n- 4.\u5230\u6700\u540e\u6bcf\u4e2a\u5c11\u5973\u81f3\u5c11\u8981\u62cd $G_i$ \u5f20\n- 5.\u6211\u4eec\u7684\u76ee\u6807\u662f\u8981\u6700\u5927\u5316\u7167\u7247\u6570\u76ee\u3002\n\n\u6211\u4eec\u6709\u5145\u8db3\u7684\u52a8\u673a\uff0c\u5c06\u7167\u7247\u4f5c\u4e3a\u6d41\uff0c\u8bd5\u56fe\u4f7f\u7528\u6700\u5927\u6d41\u89e3\u51b3\u95ee\u9898\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4e3a\u4e86\u4f53\u73b0\u4e0a\u9762\u7684\u5404\u70b9\u9650\u5236\uff0c\u5982\u4e0b\u65b9\u5f0f\u5efa\u56fe\uff1a\n\n- \u9996\u5148\u5efa\u7acb\u6e90\u6c47\u70b9 $s,t$ \u3002\n- \u6211\u4eec\u5bf9\u6bcf\u4e00\u5929 $k$ \u5efa\u7acb\u4e00\u4e2a\u8282\u70b9 $d_k$ \uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5c11\u5973 $i$ \u5efa\u7acb\u4e00\u4e2a\u8282\u70b9 $g_i$ \u3002\n- \u6e90\u70b9 $s$ \u5411\u6bcf\u4e00\u4e2a $d_k$ \u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $D_k$\u3002\n- \u6bcf\u4e00\u5929\u5411\u5bf9\u5e94\u7684 $C_k$ \u4e2a\u5c11\u5973\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e0a\u4e0b\u9650\u5206\u522b\u4e3a $R_{k_i},L_{k_i}$\u3002\n- \u6240\u6709\u7684\u5c11\u5973\u5411\u6c47\u70b9 $t$ \u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e0a\u4e0b\u754c\u4e3a $G_i,+\\infty$ \u3002\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u662f\u4e00\u4e2a**\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41**\u95ee\u9898\u3002\u6211\u4eec\u6700\u5927\u5316\u7684\u6d41\u91cf\u503c\u5c31\u662f\u7167\u7247\u6570\u3002\n\n\u73b0\u5728\u6211\u4eec\u7684\u95ee\u9898\u662f\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\u600e\u4e48\u641e\u3002\n\n\u7531\u4e8e\u53ea\u9700\u8981\u5728\u8fd9\u4e2a\u56fe\u7684\u6e90\u6c47\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $+\\infty$ \u8fb9\u672c\u95ee\u9898\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u95ee\u9898\uff0c\u6211\u4eec\u4e5f\u5c31\u5148\u4ece\u65e0\u6e90\u6c47\u7f51\u7edc\u6d41\u8bb2\u8d77\u3002\n\n### \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u6709\u5411\u56fe $G<V,E,C>$\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6d41\u91cf\u4e0b\u754c\u548c\u6d41\u91cf\u4e0a\u754c\u3002\n\n\u6c42\u4e00\u79cd\u53ef\u884c\u65b9\u6848\u4f7f\u5f97\u5728\u6240\u6709\u70b9\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\u6761\u4ef6\u7684\u524d\u63d0\u4e0b\uff0c\u6240\u6709\u8fb9\u6ee1\u8db3\u6d41\u91cf\u9650\u5236\u3002\n\n\u6211\u4eec\u8bbe\u6d41\u91cf\u4e0b\u754c\u4e3a $c_l$ \uff0c\u4e0a\u754c\u4e3a $c_r$ \u3002\u9a6c\u4e0a\u53ef\u4ee5\u60f3\u5230\u5982\u4e0b\u5f0f\u5b50\uff1a\n\n$$c_l(u,v)\\le f(u,v)\\le c_r(u,v)$$\n\n$$0\\le f(u,v)-c_l(u,v)\\le c_r(u,v)-c_l(u,v)$$\n\n\u6211\u4eec\u8bd5\u7740\u5efa\u7acb\u4e00\u4e2a\u65b0\u7f51\u7edc\uff0c$G<V,E>$ \uff0c\u4f7f\u5f97\u65b0\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9\u7684\u6d41\u91cf\u51cf\u53bb\u4e00\u4e2a\u8fd9\u4e2a\u8fb9\u7684\u5bb9\u91cf\u9650\u5236\uff0c\u5bb9\u91cf\u4e5f\u8981\u51cf\u53bb\u4e00\u4e2a\u5bb9\u91cf\u4e0b\u754c\uff0c\n\n\u5373\uff1a$f^{\\prime}(u,v)=f(u,v)-c_l(u,v),c^{\\prime}=c_r(u,v)-c_l(u,v)$\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5b83\u6ee1\u8db3\u4e0d\u4e86\u6d41\u5411\u5b88\u6052\u539f\u5219\uff01\n\n\u6bd4\u5982\u5bf9\u4e8e $x$ \u70b9 \uff0c\u5b83\u5c11\u51fa\u53bb\u4e86 $C_\\text{\u51fa}=\\sum\\limits_{(x,v)\\in E}c_l(x,v)$ \u8fd9\u4e48\u591a\u6d41\u91cf\uff0c\u5c11\u8f93\u5165\u4e86 $C_\\text{\u5165}=\\sum\\limits_{(v,x)\\in E}c_l(v,x)$ \u8fd9\u4e48\u591a\u6d41\u91cf\u3002\u7531\u4e8e\u539f\u56fe\u662f\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\u7684\uff0c\u4f46\u5efa\u65b0\u56fe\u4f1a\u51fa\u73b0 $C_\\text{\u5165}>C_\\text{\u51fa}$ \u7684\u60c5\u51b5\uff0c\u65b0\u56fe\u5c31\u65e0\u6cd5\u5b88\u6052\u4e86\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u501f\u9274\u7684\u662f Johnson\u5168\u6e90\u6700\u77ed\u8def \u7684\u89e3\u9898\u601d\u8def\uff0c\u5efa\u7acb\u8d85\u7ea7\u6e90\u6c47\u70b9$s,t$\uff0c\u7531\u6e90\u70b9\u5411\u6bcf\u4e2a\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $c^{\\prime}(s,u)=C_\\text{\u5165}-C_\\text{\u51fa}$ \u7684\u8fb9\uff0c\u8865\u9f50\u6240\u9700\u6d41\u91cf\uff0c\u65b0\u56fe\u5c31\u6d41\u91cf\u5b88\u6052\u4e86\u3002\n\n\u800c\u5bf9\u4e8e $C_\\text{\u5165}<C_\\text{\u51fa}$  \u7684\u70b9\uff0c\u6211\u4eec\u4e5f\u8fde\u4e0a\u4e00\u6761 $c^{\\prime}(u,t)=|C_\\text{\u5165}-C_\\text{\u51fa}|$ \u7684\u8fb9\uff0c\u5c06\u5176\u591a\u4f59\u7684\u6d41\u91cf\u5f15\u5165\u6c47\u70b9\u3002\n\n\u7ecf\u6b64\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u65b0\u56fe\u6c42\u6700\u5927\u6d41\u5e76\u5224\u5b9a\u4e0e\u6e90\u70b9\u6c47\u70b9\u76f8\u5173\u8054\u7684\u8fb9\u662f\u5426\u6d41\u91cf\u7b49\u4e8e\u5bb9\u91cf(\u5373\u6ee1\u6d41)\u5373\u53ef\n\n### \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u6709\u5411\u56fe $G<V,E>$ \uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6d41\u91cf\u4e0b\u754c\u548c\u6d41\u91cf\u4e0a\u754c\u3002\n\n\u7ed9\u5b9a\u6e90\u70b9 $s$ \u548c\u6c47\u70b9 $t$\uff0c\u6c42\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u5927\u6d41\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4ece\u6c47\u70b9 $t$ \u5411\u6e90\u70b9 $s$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $+\\infty$ \u7684\u865a\u8fb9 \uff0c\u6574\u4e2a\u56fe\u5c31\u6d41\u91cf\u5b88\u6052\u4e86\u3002\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u6c42\u51fa\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u7684\u6700\u5927\u6d41\u3002\n\n\u6309\u7167\u6211\u4eec\u4e4b\u524d\u7684\u6784\u9020\u65b9\u5f0f\uff0c\u53ef\u4ee5\u6784\u9020\u51fa\u65b0\u56fe $G^{\\prime}$ \u4f7f\u5f97\u539f\u56fe\u4e2d\u4e00\u4e2a\u786e\u5b9a\u7684\u53ef\u884c\u6d41 $f_0$ \u53ef\u4ee5\u53d8\u4e3a\u65b0\u56fe\u4e2d\u7684\u4e00\u4e2a\u6ee1\u6d41 $f_0^{\\prime}$ \u3002\u65b0\u56fe\u7684\u6e90\u6c47\u70b9\u5206\u522b\u4e3a $S,T$\u3002\n\n\u4e0b\u9762\u6211\u4eec\u8003\u8651\u65b0\u56fe $G^{\\prime}$ \u5bf9\u4e8e $f_0^{\\prime}$ \u7684\u6b8b\u7559\u7f51\u7edc $G^{\\prime}_{f_0^{\\prime}}$\u3002\n\n\u6b64\u65f6\u4ee4 $f^{\\prime}$ \u662f\u4e00\u4e2a\u6b8b\u7559\u7f51\u7edc\u4e2d\u4ece $S\\rightarrow T$ \u7684\u4e00\u4e2a\u6ee1\u6d41\uff0c\u5e76\u4e14\u5176\u4e2d\u6709\u4e00\u90e8\u5206\u662f\u4ece $s\\rightarrow t$ \u6d41\u8fc7\u53bb\u7684\uff0c\u8bbe\u5176\u4e3a $f_{s\\rightarrow t}^{\\prime}$\u3002$f_{s\\rightarrow t}^{\\prime}$ \u662f\u53ef\u6c42\u7684\uff0c\u5c31\u662f\u6211\u4eec\u4e00\u5f00\u59cb\u52a0\u7684\u865a\u8fb9\u91cc\u9762\u7684\u6d41\u91cf\u3002\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u6b8b\u7559\u7f51\u7edc\u4e2d\u6240\u6709\u7ecf\u8fc7 $s\\rightarrow t$ \u7684\u53ef\u884c\u6d41 $f^{\\prime}$\n\n\u4efb\u53d6\u4e00\u4e2a $f_{s\\rightarrow t}^{\\prime}$\uff0c\u8ba9\u5b83\u52a0\u4e0a $f_0^{\\prime}$\n\n\u5219 $|f_{s\\rightarrow t}^{\\prime}+f_0^{\\prime}|$ \u4e2d\uff0c $f_{s\\rightarrow t}^{\\prime}$ \u5e94\u8be5\u662f\u548c $S,T$ \u53ca\u5176\u76f8\u90bb\u7684\u8fb9\u6ca1\u4ec0\u4e48\u5173\u7cfb\u7684\uff0c\u8be5\u6ee1\u6d41\u8fd8\u662f\u6ee1\u6d41\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5fc5\u8003\u8651\u8fd9\u4e9b\u4e1c\u897f\u3002\n\n\u5bf9\u4e8e\u4e2d\u95f4\u8fd9\u90e8\u5206\u7684\u7684\u70b9\uff0c\u4e0d\u8003\u8651\u865a\u8fb9\u7684\u8bdd\u9664\u4e86 $s,t$ \u4ee5\u5916\u90fd\u662f\u5b88\u6052\u7684\uff0c\u8003\u8651\u7684\u8bdd\u90fd\u5b88\u6052\u3002\n\n\u603b\u4e4b\uff0c$f_{s\\rightarrow t}^{\\prime}+f_0^{\\prime}$ \uff0c\u5f97\u5230\u7684\u8fd8\u662f\u65b0\u56fe\u7684\u4e00\u4e2a\u6ee1\u6d41\uff0c\u8fd8\u662f\u539f\u56fe\u7684\u4e00\u4e2a\u53ef\u884c\u6d41\u3002\n\n\u6240\u4ee5\uff0c\u4efb\u610f\u7684 $f^{\\prime}_{s\\rightarrow t}$ \u5728\u539f\u56fe\u4e2d\u90fd\u80fd\u627e\u5230\u4e00\u4e2a\u552f\u4e00\u7684 $f$ \u4e0e\u4e4b\u5bf9\u5e94\u3002\n\n\u53cd\u5411\u8bc1\u660e\uff1a\u5728\u539f\u56fe\u4e2d\u4efb\u53d6\u4e00\u4e2a\u53ef\u884c\u6d41 $f$ , \u5bf9\u5e94\u5230\u65b0\u56fe\u4e2d\u662f $f^{\\prime}$\n\n\u53c2\u8003\u4e0a\u9762\u7684\u8bc1\u660e\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u8bd5 $f^{\\prime}-f_0^{\\prime}$ \u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\n\u51cf\u5b8c\u4e4b\u540e\uff0c$S,T$ \u90bb\u8fb9\u7684\u6d41\u91cf\u5168\u90e8\u62b5\u6d88\u4e86\uff0c\u6240\u6709\u7684\u6d41\u91cf\u90fd\u5728\u4e2d\u95f4\u8fd9\u90e8\u5206\uff0c\u6d41\u91cf\u5b88\u6052\u53ef\u4ee5\u5f97\u77e5\uff0c\u6b64\u65f6\u51cf\u5f97\u7684\u6d41\u91cf\u4e5f\u53ef\u4ee5\u662f $s\\rightarrow t$ \u7684\u53ef\u884c\u6d41\u3002\u4e5f\u5c31\u662f\u80fd\u5bf9\u5e94\u4e00\u4e2a $f^{\\prime}_{s\\rightarrow t}$ \u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u5728\u65b0\u56fe\u4e2d\u4efb\u53d6\u4e00\u4e2a\u6ee1\u6d41 $f_0^{\\prime}$ \u4f7f\u5f97\u8fd9\u4e2a\u56fe\u4e2d\u4efb\u610f\u4e00\u4e2a\u6ee1\u6d41 $f^{\\prime}$ \u90fd\u53ef\u4ee5\u7531 $f_0^{\\prime}$ \u548c $f^{\\prime}_{s\\rightarrow t}$ \u53e0\u52a0\u5f97\u5230\uff0c\u4e5f\u5c31\u4e0e\u539f\u56fe\u53ef\u884c\u6d41\u4e00\u4e00\u5bf9\u5e94\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee4 $f^{\\prime}_{0,s\\rightarrow t}$ \u8868\u793a\u6d41 $f_0^{\\prime}$ \u6d41\u7ecf $s\\rightarrow t$ \u7684\u90e8\u5206\uff0c\u6211\u4eec\u53ea\u8981\u6700\u5927\u5316 $|f^{\\prime}_{0,s\\rightarrow t}+f^{\\prime}_{s\\rightarrow t}|$ \u5373\u53ef\n\n\u7531\u4e8e $|f^{\\prime}_{0,s\\rightarrow t}|$ \u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u5176\u5bb9\u91cf\u5c31\u662f\u6211\u4eec\u5224\u5b9a\u53ef\u884c\u6d41\u5f0f\u4ece\u6c47\u70b9\u5411\u6e90\u70b9\u8fde\u8fb9\u4e2d\u7684\u6d41\u91cf\uff0c \u8ba9 $|f^{\\prime}_{s\\rightarrow t}|$ \u6700\u5927\u53ea\u9700\u8981\u5728\u65b0\u56fe\u4e0a\u6c42\u4e00\u6b21 $s\\rightarrow t$ \u7684\u6700\u5927\u6d41\u5c31\u53ef\u4ee5\u4e86\u3002\n\n$Talk\\ is\\ easy\\ ,\\ show\\ me\\ the\\ code$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N=4e6+10,M=4e7+10,INF=1e9;\n\nint n,m,s,t,S,T;\nint head[N],ver[M],nxt[M],cc[M],tot=0;\nvoid add(int x,int y,int c)\n{\n\tver[tot]=y; cc[tot]=c; nxt[tot]=head[x]; head[x]=tot++;\n\tver[tot]=x; cc[tot]=0; nxt[tot]=head[y]; head[y]=tot++;\n}\nint q[N],d[N],cur[N];\nint A[N];\n\nbool bfs()\n{\n\tint hh=0,tt=0;\n\tmemset(d,-1,sizeof d);\n\tq[0]=S,d[S]=0,cur[S]=head[S];\n\twhile(hh<=tt)\n\t{\n\t\tint x=q[hh++];\n\t\tfor(int i=head[x];~i;i=nxt[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(d[y]==-1 &&cc[i])\n\t\t\t{\n\t\t\t\td[y]=d[x]+1;\n\t\t\t\tcur[y]=head[y];\n\t\t\t\tif(y==T) return 1;\n\t\t\t\tq[++tt]=y;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint find(int u,int lim)\n{\n\tif(u==T) return lim;\n\tint flow=0;\n\tfor(int i=cur[u];~i && flow<lim;i=nxt[i])\n\t{\n\t\tcur[u]=i;\n\t\tint y=ver[i];\n\t\tif(d[y]==d[u]+1 &&cc[i])\n\t\t{\n\t\t\tint tmp=find(y,min(cc[i],lim-flow));\n\t\t\tif(!tmp) d[y]=-1;\n\t\t\tcc[i]-=tmp;cc[i^1]+=tmp;flow+=tmp;\n\t\t}\n\t}\n\treturn flow;\n}\n\nint dinic()\n{\n\tint res=0,flow;\n\twhile(bfs())\n\t{\n\t\twhile(flow=find(S,INF)) res+=flow;\n\t}\n\treturn res;\n}\n\nint main()\n{\n\twhile(scanf(\"%d%d\",&n,&m)!=EOF)\n\t{\n\t\tmemset(A,0,sizeof A);\n\t\tmemset(head,-1,sizeof head);tot=0;\n\t\ts=N-4,t=N-3;\n\t\tS=t+1,T=t+2;\n\t\t/*1-m \u5c11\u5973 , m+1-m+n \u5929*/\n\t\tfor(int i=1;i<=m;i++)//\u5c11\u5973\u4e0e\u8fde\u8fb9\n\t\t{\n\t\t\tint G;\n\t\t\tscanf(\"%d\",&G);\n\t\t\tadd(i,t,INF-G);\n\t\t\tA[i]-=G,A[t]+=G;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint C,D;\n\t\t\tscanf(\"%d%d\",&C,&D);\n\t\t\tadd(s,m+i,D);//\u6e90\u70b9\u4e0e\u5929\u6570\u8fde\u8fb9\n\t\t\tfor(int j=1;j<=C;j++)\n\t\t\t{\n\t\t\t\tint tt,L,R;\n\t\t\t\tscanf(\"%d%d%d\",&tt,&L,&R);\n\t\t\t\t++tt;//\u7f16\u53f7\u4ece 0 \u5f00\u59cb->\u4ece 1 \u5f00\u59cb\n\t\t\t\tadd(m+i,tt,R-L);//\u5929\u6570\u4e0e\u5c11\u5973\u8fde\u8fb9\n\t\t\t\tA[m+i]-=L;A[tt]+=L;\n\t\t\t}\n\t\t}\n\t\tint sum=0;\n\t\tfor(int i=1;i<=n+m;i++)//\u65e0\u6e90\u6c47\u8f6c\u5316\u4e3a\u6700\u5927\u6d41\n\t\t{\n\t\t\tif(A[i]>0) add(S,i,A[i]),sum+=A[i];\n\t\t\telse if(A[i]<0) add(i,T,-A[i]);\n\t\t}\n\t\tif(A[s]>0) add(S,s,A[s]),sum+=A[s];\n\t\telse if(A[s]<0) add(s,T,-A[s]);\n\t\tif(A[t]>0) add(S,t,A[t]),sum+=A[t];\n\t\telse if(A[t]<0) add(t,T,-A[t]);\n        \n\t\tadd(t,s,INF);//\u6709\u6e90\u6c47\u8f6c\u65e0\u6e90\u6c47\n\t\tif(dinic()<sum) printf(\"-1\\n\\n\");\n\t\telse\n\t\t{\n\t\t\tint ff=cc[tot-1];//f'(0,s->t)\n\t\t\tS=s,T=t;//\u91cd\u65b0\u6307\u5b9a\u6e90\u6c47\u70b9\uff0c\u6c42f'(s->t)\n\t\t\tcc[tot-1]=cc[tot-2]=0;//\u5220\u8fb9\n\t\t\tprintf(\"%d\\n\\n\",ff+dinic());\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1614309654,
        "uid": 278259,
        "name": "RemiliaScarlet\u25ce",
        "ccfLevel": 4,
        "title": "\u3010\u9898\u89e3\u3011P5192 \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41"
    },
    {
        "content": "### \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41 \n\n\u9996\u5148\u4fdd\u8bc1\u6700\u5c0f\u6d41\u91cf\n\n\u8bbe\u6bcf\u4e2a\u70b9  $\\delta(t)=f_{(N^+(t),t)}-f_{(N^-(t),t)}$ \n\n\u7136\u540e\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf $flownew=flowmax-flowmin$\n\n\u6b64\u65f6\u82e5 $\\delta(t)<0$ \u8868\u793a $t$ \u6d41\u51fa\u4e0d\u8db3\uff0c\u56e0\u6b64\u5b83\u7684\u51fa\u8fb9\u8981\u589e\u52a0\u6d41\u91cf\uff0c\u8fde\u4e00\u6761 $t,T$ \u7684\u8fb9,\u5bb9\u91cf\u4e3a$\\delta(t)$\n\n\u82e5$ \\delta(t)=0$ \u6d41\u91cf\u5b88\u6052\uff0c\u4e0d\u7ba1\n\n\u82e5$\\delta(t)>0$ \u90a3\u4e48\u8bf4\u660e\u6d41\u51fa\u8fc7\u591a\uff0c\u56e0\u6b64\u8981\u589e\u52a0\u5165\u90bb\u57df\u7684\u6d41\u91cf\uff0c\u8fde\u4e00\u6761$S,T$ \u7684\u8fb9\n\n\u82e5 $S$ \u5230 $T$ \u6ee1\u6d41\uff0c\u8bf4\u660e\u53ef\u4ee5\u5b9e\u73b0\u6d41\u91cf\u5e73\u8861\n\n\u4e3a\u4ec0\u4e48\u53ef\u884c\u5462\uff0c\u4e00\u4e2a\u70b9\u4e0d\u53ef\u80fd\u540c\u65f6\u548c $S,T$ \u76f8\u8fde\uff0c\u5e76\u4e14\u4e0e $S,T$ \u76f8\u8fde\u7684\u8fb9\u90fd\u53ef\u4ee52\u5b9e\u73b0\u5e76\u4e14\u6211\u4eec\u5728\u65b0\u56fe\u5df2\u7ecf\u5ffd\u7565\u8fd9\u4e9b\u8fb9\u5e26\u6765\u7684\u8d21\u732e\uff08\u5fc5\u7136\u8d21\u732e\u8fdb\u5165\u7b54\u6848\uff09\uff0c\u56e0\u6b64\u5728\u65b0\u56fe\u4e2d\u9700\u8981\u589e\u52a0\u4e00\u4e9b\u8fb9\u7684\u6d41\u91cf\u624d\u80fd\u5b9e\u73b0\u8fd9\u8fd9\u5f20\u56fe\u7684\u6d41\u91cf\u5e73\u8861\uff0c\u800c\u5224\u65ad\u6d41\u91cf\u5e73\u8861\u7684\u53ea\u9700\u8981\u6ee1\u8db3\u8fd9\u4e9b\u4e0d\u6ee1\u8db3\u6d41\u91cf\u5e73\u8861\u7684\u70b9\uff08\u4e0e $S,T$ \u76f8\u8fde \uff09\u5e73\u8861\uff08\u5373 $S,T$ \u6ee1\u6d41\uff09 \u5373\u53ef\u3002\n\n### \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41 \n\n\u8fde\u63a5 $T,S$ \u53d8\u4e3a\u65e0\u6e90\u6c47\u5373\u53ef\n\n### \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\n\u9996\u5148\u6c42\u5f97\u53ef\u884c\u6d41\uff0c\u63a5\u7740\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u9762\u8dd1\u4e00\u6b21\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u5f88\u663e\u7136\u4e86\uff08\n\n\n### P5192 Zoj3229 Shoot the Bullet|\u4e1c\u65b9\u6587\u82b1\u5e16|\u3010\u6a21\u677f\u3011\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\n\n\u6709\u6e90\u6c47\u7684\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\uff0c~~\u8fd9\u9898\u96be\u7684\u5730\u65b9\u662f\u5efa\u56fe\u800c\u4e0d\u662f\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41~~\n\n\u9996\u5148\u8003\u8651\u72b6\u6001\uff0c\u628a\u6bcf\u4e00\u5929\u548c\u6bcf\u4e2a\u5c11\u5973\u4f5c\u4e3a\u4e00\u4e2a\u70b9\u653e\u5728\u56fe\u4e2d\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8p4z7xy1.png)\n\n\u6bcf\u5929\u7684 $C_k$ \u4e2a\u5c11\u5973\u4e2d\u62cd\u7167\u7684\u4e2a\u6570\u90fd\u5728\u95ed\u533a\u95f4 $L_{k_i},R_{k_i}$ \u4e2d\uff0c\u663e\u7136\u662f\u6bcf\u5929\u5bf9\u8fd9\u4e2a\u70b9\u8fde\u4e00\u4e2a $R_{k_i}-L_{k_i}$ \u7684\u8fb9\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nd5j168c.png)\n\n\u6bcf\u4e2a\u5c11\u5973\u81f3\u5c11\u62cd\u6444 $G_i$ \u5f20\uff0c\u56e0\u6b64\u52a0\u4e00\u4e2a\u6c47\u70b9\uff0c\u8fde\u4e00\u4e2a $+\\infin$ \u7684\u8fb9\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/thq2kv0q.png)\n\n\u6b64\u65f6\u8fd8\u8981\u8003\u8651\u6bcf\u5929\u7684\u9650\u5236\uff08\u5c31\u662f\u52a0\u4e00\u4e2a\u6e90\u70b9\uff0c\u56fe\u5c31\u4e0d\u753b\u4e86\uff09\n\n\u7136\u540e\u56fe\u5c31\u51cf\u51fa\u6765\u4e86~~\u6211\u53c8\u8001\u53c8\u7b28\u4e0d\u77e5\u9053\u4e3a\u5565\u7ed9\u6bcf\u5929\u88c2\u70b9\u4e86~~\n\n\u7136\u540e\u5c31\u6309\u7167\u4e0a\u9762\u8bb2\u7684\u505a\u6cd5\u505a\u4e86\uff0c\u6ce8\u610f\u6700\u540e\u8dd1$s,t$ \u7684\u65f6\u5019\u8981\u5220\u8fb9\n\n```cpp\n#include<touwenjian.h>\n\nusing namespace std;\n\nconst int maxn=100100;\n\nint n,m,head[maxn],st,ed,_st,_ed,g[maxn],d[maxn],_delta[maxn],cnt[maxn];\nint mmf[maxn];\nint size=1,dep[maxn],vis[maxn];\nint looker;\nint c[maxn];\n\nstruct edge{\n\tint next,to,flow;\n}e[maxn<<1];\n\ninline void addedge(int next,int to,int flow)\n{\n\te[++size].to=to;\n\te[size].flow=flow;\n\te[size].next=head[next];\n\thead[next]=size;\n\te[++size].to=next;\n\te[size].flow=0;\n\te[size].next=head[to];\n\thead[to]=size;\n}\n\ninline int bfs()\n{\n\tqueue <int> q;\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dep,0,sizeof(dep));\n\tq.push(st);\n\tdep[st]=1,vis[st]=1;\n\twhile(!q.empty())\n\t{\n\t\tint t=q.front();\n\t\tq.pop();\n\t\tint i,j,k;\n\t\tfor(i=head[t];i;i=e[i].next)\n\t\t{\n\t\t\tj=e[i].to;\n\t\t\tk=e[i].flow;\n\t\t\tif(k<=0||dep[j]||vis[j]) continue;\n\t\t\tvis[j]=1,dep[j]=dep[t]+1;\n\t\t\tq.push(j);\n\t\t}\n\t}\n\treturn vis[ed];\n}\n\nint dinic(int t,int nowt)\n{\n\tif(t==ed||!nowt) return nowt;\n\tint tot=0,j,k,f;\n\tfor(int &i=cnt[t];i;i=e[i].next)\n\t{\n\t\tj=e[i].to;\n\t\tk=e[i].flow;\n\t\tif(k>0&&dep[t]+1==dep[j])\n\t\t{\n\t\t\tf=dinic(j,min(nowt-tot,k));\n\t\t\te[i].flow-=f;\n\t\t\te[i^1].flow+=f;\n\t\t\ttot+=f;\n\t\t\tif(tot==nowt) return tot;\n\t\t}\n\t}\n\treturn tot;\n}\n\ninline int getflow()\n{\n\tint ans=0;\n\twhile(bfs())\n\t{\n\t\tmemcpy(cnt,head,sizeof(cnt));\n\t\tans+=dinic(st,0x3f3f3f3f);\n\t}\n\treturn ans;\n}\n\ninline void solve()\n{\n\tint i,j;\n\tst=n+n+m+4,ed=n+n+m+5;\n\t_st=0,_ed=n+n+m+1;\n\tint tmp;\n\tfor(i=1;i<=m;i++) cin>>mmf[i],_delta[_ed]-=mmf[i],_delta[n+n+i]+=mmf[i],addedge(n+n+i,_ed,0x3f3f3f3f);\n \tfor(i=1;i<=n;i++) \n\t{\n \t\tcin>>c[i]>>d[i],addedge(_st,i,d[i]);\n \t\taddedge(i,i+n,d[i]);\n \t\tint t1,t2,t3;\n \t\tfor(j=1;j<=c[i];j++) \n \t\t{\n\t\t\tcin>>t1>>t2>>t3;\n\t\t\tt1++;\n \t\t\taddedge(i+n,n+n+t1,t3-t2);\n \t\t\t_delta[n+n+t1]-=t2;\n \t\t\t_delta[n+i]+=t2;\n\t\t}\n\t}\n\tfor(i=0;i<=n+n+m+1;i++) \n\t{\n\t\tif(_delta[i]==0) continue;\n\t\tif(_delta[i]<0) addedge(st,i,-_delta[i]);\n\t\tif(_delta[i]>0) addedge(i,ed,_delta[i]),looker+=_delta[i];\n\t}\t\n\taddedge(_ed,_st,0x3f3f3f3f);\n\tint lok=getflow();\n\tif(lok!=looker)\n\t{\n\t\tcout<<\"-1\\n\\n\";\n\t\treturn ;\n\t}\n\tst=_st,ed=_ed;\n\thead[st]=e[head[st]].next;\n\thead[ed]=e[head[ed]].next;\n\tlok+=getflow();\n\tcout<<lok<<\"\\n\\n\";\n}\n\ninline void memclr()\n{\n\tmemset(_delta,0,sizeof(_delta));\n\tmemset(head,0,sizeof(head));\n\tsize=1;\n\tlooker=0;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\twhile(cin>>n>>m)\n\t{\n\t\tmemclr();\n\t\tsolve();\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1601954421,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5192 \u3010Zoj3229 Shoot the Bullet|\u4e1c\u65b9\u6587\u82b1\u5e16|\u3010\u6a21\u677f\u3011\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5927\u6d41\u3011"
    }
]