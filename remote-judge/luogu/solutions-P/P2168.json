[
    {
        "content": "### \u6b64\u9898\u672c\u4f53\u4e3aHuffman\u6811  \n   \uff08\u4e0b\u6587\u5747\u5c06huffman\u6811\u8bb2\u4e3a\u54c8\u592b\u66fc\u6811\uff09\n- \u54c8\u592b\u66fc\u6811\u7684\u5b9a\u4e49\n\t\n   \u54c8\u592b\u66fc\u6811\uff1a\u5e26\u6743\u8def\u5f84\u957f\u5ea6WPL\u6700\u77ed\u7684\u591a\u53c9\u6811\uff08\u6700\u4f18\u591a\u53c9\u6811\uff09\u6784\u9020\u8fd9\u79cd\u6811\u7684\u7b97\u6cd5\u6700\u65e9\u662f\u7531\u54c8\u592b\u66fc(Huffman)1952\u5e74\u63d0\u51fa\uff0c\u8fd9\u79cd\u6811\u5728\u4fe1\u606f\u68c0\u7d22\u4e2d\u5f88\u6709\u7528\u3002\n   \n  \u4e0b\u9762\u4ee5\u4e8c\u53c9\u54c8\u592b\u66fc\u6811\u4e3a\u4f8b\n  \u7ed9n\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u6743\u503c\uff0c\u6784\u9020\u4e00\u68f5\u54c8\u592b\u66fc\u6811\u3002\u6bcf\u6b21\u9009\u5269\u4e0b\u7684\u4e24\u68f5\u6839\u6743\u503c\u6700\u5c0f\u7684\u6811\u5408\u5e76\u6210\u4e00\u68f5\u65b0\u6811\uff0c\u65b0\u6811\u7684\u6839\u6743\u503c\u7b49\u4e8e\u4e24\u68f5\u5408\u5e76\u524d\u6811\u7684\u6839\u6743\u503c\u548c\u3002\uff08\u4e00\u5f00\u59cb\u4e00\u4e2a\u70b9\u4e5f\u770b\u6210\u4e00\u68f5\u6811\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u68f5\u6811\u6ca1\u6709\u5b69\u5b50\u8282\u70b9\uff09\n  \n\t\u4f8b1\uff1a4\u4e2a\u70b9\uff0ca\u3001b\u3001c\u3001d\uff0c\u6743\u503c\u5206\u522b\u4e3a7\u30015\u30012\u30014\u3002\n\t\n    \u6784\u6811\u8fc7\u7a0b\uff1a\u56e0\u4e3a4\u4e2a\u70b9\uff0c\u6240\u4ee5\u5408\u5e763\u6b21\uff08n\u4e2a\u70b9\uff0c\u5408\u5e76n-1\u6b21\uff09\n    \n    \u7b2c\u4e00\u6b65\uff1a\u9009\u6839\u6743\u503c\u6700\u5c0f\u7684\u4e24\u68f5\u68112\uff08c\uff09\u548c4\uff08d\uff09\u5408\u5e76\uff0c\u65b0\u6811\u7684\u6839\u8282\u70b9\u4e3a6\uff0c\u5982\u56fe(b)\uff1b\n    \n    \u7b2c\u4e8c\u6b65\uff1a\u9009\u6839\u6743\u503c\u6700\u5c0f\u7684\u4e24\u68f5\u68115\uff08b\uff09\u548c6\u5408\u5e76\uff0c\u65b0\u6811\u7684\u6839\u8282\u70b9\u4e3a11\uff0c\u5982\u56fe(c)\uff1b\n    \n    \u7b2c\u4e09\u6b65\uff1a\u9009\u6839\u6743\u503c\u6700\u5c0f\u7684\u4e24\u68f5\u68117\uff08a\uff09\u548c11\u5408\u5e76\uff0c\u65b0\u6811\u7684\u6839\u8282\u70b9\u4e3a18\uff0c\u5982\u56fe(d)\uff1b\n    \n    \n   ![\u4f8b\u4e00](https://cdn.luogu.com.cn/upload/pic/47027.png)\n   - \u57fa\u672c\u6982\u5ff5\n    \n    \u6811\u7684\u8def\u5f84\u957f\u5ea6PL\uff1a\u4ece\u6811\u6839\u5230\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\uff08\u6bcf\u6761\u8fb9\u957f\u5ea6\u4e3a1\uff09\u4e4b\u548c\uff08\u5b8c\u5168\u4e8c\u53c9\u6811\u4e3a\u8fd9\u79cd\u8def\u5f84\u957f\u5ea6\u6700\u77ed\u7684\u4e8c\u53c9\u6811\uff09\u3002\n    \n   \t\u6811\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6WPL\uff1a\u6811\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\uff08\u8be5\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u957f\u5ea6\u4e0e\u8282\u70b9\u4e0a\u6743\u7684\u4e58\u79ef\uff09\u4e4b\u548c\u3002\n\n\t\u900f\u5f7b\u7406\u89e3\u6811\u7684\u8def\u5f84\u957f\u5ea6\u548c\u6811\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u8fd9\u4e24\u4e2a\u6982\u5ff5\u975e\u5e38\u91cd\u8981\u3002\n   - \u5173\u4e8ek\u53c9\u54c8\u592b\u66fc\u6811\n   \n   \t\u4ee5\u4e0b\u9009\u81ealyd\u5927\u4f6c\u7684\u8bdd\uff1a\n    \n    \u5bf9\u4e8ek\u53c9\u54c8\u592b\u66fc\u6811\u7684\u6c42\u89e3,\u76f4\u89c2\u7684\u60f3\u6cd5\u662f\u5728\u8d2a\u5fc3\u7684\u57fa\u7840\u4e0a,\u6539\u4e3a\u6bcf\u6b21\u4ece\u5806\u4e2d\u53bb\u9664\u6700\u5c0f\u7684k\u4e2a\u6743\u503c\u5408\u5e76\u3002\u7136\u800c\uff0c\u4ed4\u7ec6\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5728\u6267\u884c\u6700\u540e\u4e00\u6b21\u5faa\u73af\u65f6\uff0c\u5806\u7684\u5927\u5c0f\u5728\uff082~k-1\uff09\u4e4b\u95f4\uff08\u4e0d\u8db3\u4ee5\u53d6\u51fak\u4e2a\uff09\uff0c\u90a3\u4e48\u6574\u4e2a\u54c8\u592b\u66fc\u6811\u7684\u6839\u7684\u5b50\u8282\u70b9\u4e2a\u6570\u5c31\u5c0f\u4e8ek\u3002\u8fd9\u663e\u7136\u4e0d\u662f\u6700\u4f18\u89e3\u2014\u2014\u2014\u2014\u6211\u4eec\u4efb\u610f\u53d6\u54c8\u592b\u66fc\u6811\u4e2d\u4e00\u4e2a\u6df1\u5ea6\u6700\u5927\u7684\u8282\u70b9\uff0c\u6539\u4e3a\u6811\u6839\u7684\u5b50\u8282\u70b9\uff0c\u5c31\u4f1a\u4f7f$\u2211w_i*l_i$\u53d8\u5c0f\u3002\n   \n   \u56e0\u6b64\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u6267\u884c\u4e0a\u8ff0\u8d2a\u5fc3\u7b97\u6cd5\u4e4b\u524d\uff0c\u8865\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u6743\u503c\u4e3a0\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u4f7f\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6811\u6ee1\u8db3(n-1)%(k-1)=0\u3002\n   \n   \n    ![\u4f8b\u4e8c](https://cdn.luogu.com.cn/upload/pic/47030.png)\n   - \u91cd\u4e2d\u4e4b\u91cd\uff1a\u54c8\u592b\u66fc\u7f16\u7801\n   \n   \u54c8\u592b\u66fc\u7f16\u7801\u539f\u5219\uff1a n\u4e2a\u8282\u70b9\u7684\u54c8\u592b\u66fc\u6811\u542b\u67092n-1\u4e2a\u8282\u70b9\uff0c\u6ca1\u6709\u5ea6\u4e3a1\u7684\u8282\u70b9 \u7f16\u7801\u4ece\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\uff0c\u8bd1\u7801\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u3002\n\n\t\u4ece\u54c8\u592b\u66fc\u6811\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5bf9\u5de6\u5b50\u6811\u5206\u914d\u7801\u201c0\u201d\uff0c\u53f3\u5b50\u6811\u5206\u914d\u7801\u201c1\u201d\uff0c\u4e00\u76f4\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u4e3a\u6b62\uff0c\u7136\u540e\u5c06\u4ece\u6811\u6839\u6cbf\u6bcf\u6761\u8def\u5f84\u5230\u8fbe\u53f6\u5b50\u7ed3\u70b9\u7684\u4ee3\u7801\u6392\u5217\u8d77\u6765\uff0c\u4fbf\u5f97\u5230\u4e86\u54c8\u592b\u66fc\u7f16\u7801\u3002\n    \n    \u4f8b\u5b50\n    \n    \u4e00\u7bc7\u7535\u6587\uff0c\u539f\u6587\u4e3a\uff1aAMCADEDDMCCAD\u3002\u73b0\u5728\u8981\u628a\u539f\u6587\u8f6c\u6362\u621001\u4e32\u53d1\u9001\u7ed9\u5bf9\u65b9\u3002\u4e3a\u4e86\u8282\u7701\u8d44\u6e90\uff0c\u6211\u4eec\u5f53\u7136\u5e0c\u671b\u7ffb\u8bd1\u597d\u768401\u4e32\u957f\u5ea6\u5c3d\u91cf\u7684\u77ed\u3002\u600e\u4e48\u529e\uff1f\n    \n\t\u7814\u7a76\u53d1\u73b0\uff1a1\u3001\u53ea\u67095\u4e2a\u5b57\u6bcdE,M,C,A,D\uff1b 2\u3001\u8fd95\u4e2a\u5b57\u6bcd\u7684\u4f7f\u7528\u9891\u5ea6\u5206\u522b\u4e3a\uff5bE,M,C,A,D\uff5d= \uff5b1,2,3,3,4\uff5d\u3002\n\t\u7528\u9891\u5ea6\u4e3a\u6743\u503c\u751f\u6210\u54c8\u592b\u66fc\u6811\uff0c\u5e76\u5728\u53f6\u5b50\u4e0a\u6807\u6ce8\u5bf9\u5e94\u7684\u5b57\u6bcd\uff0c\u5728\u6811\u679d\u4e0a\u6807\u6ce8\u5206\u914d\u7801\u201c0\u201d\u6216\u201c1\u201d\uff08\u6ce8\uff1a\u5206\u914d\u7801\u4e0d\u662f\u8fb9\u7684\u957f\u5ea6\uff0c\u800c\u662f\u533a\u5206\u5de6\u53f3\u5b69\u5b50\u4ee3\u8868\u65b9\u5411\uff09:\n\n\t![](https://cdn.luogu.com.cn/upload/pic/47029.png)\n    ![](https://cdn.luogu.com.cn/upload/pic/47031.png)\n    \n    \u5404\u5b57\u6bcd\u7684\u7f16\u7801\u5373\u4e3a\u54c8\u592b\u66fc\u7f16\u7801\uff1a EMCAD \u6240\u6709\u7f16\u7801\u957f\u5ea6\u548c\u4e3a12\u4f4d\uff0c\u5373PL=12\uff0c\u6b64\u65f6\u7684PL\u5e76\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u4f46\u6b64\u65f6\u7684WPL\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\u3002WPL\u6700\u5c0f\u624d\u80fd\u4f7f\u5f97\u5bc6\u62a5\u7ffb\u8bd1\u768401\u4e32\u957f\u5ea6\u6700\u77ed\u3002\n    \n   - \u56de\u5f52\u672c\u4f53\n    \n    \u672c\u9898\u6240\u6784\u9020\u7684\u7f16\u7801\u5176\u5b9e\u5c31\u662fhuffman\u7f16\u7801\uff08~~\u8fd9\u8fd8\u7528\u8bf4\u5417~~\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5355\u8bcd\u7684\u6b21\u6570\u4f5c\u4e3a\u54c8\u592b\u66fc\u6811\u53f6\u5b50\u8282\u70b9\u7684\u6743\u503c\uff0c\u6c42\u51fak\u53c9\u54c8\u592b\u66fc\u6811\u5c31\u884c\u4e86\u3002\n    \u7b54\u6848\u5c31\u4e3a\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684wpl\uff0c\u6700\u6df1\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u4e86\n   - \u4ee3\u7801\n```\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nstruct node\n{\n    ll w,h;\n    node(){w=0,h=0;}\n    node(ll w,ll h):w(w),h(h){}\n    bool operator <(const node &a)const{return a.w==w?h>a.h:w>a.w;}\n};\nll ans;\npriority_queue<node>q;\nint main()\n{\n    ll n,k;ans=0;scanf(\"%lld%lld\",&n,&k);\n    for(int i=1;i<=n;i++)\n    {\n        ll w;scanf(\"%lld\",&w);\n        q.push(node(w,1));\n    }\n    while((q.size()-1)%(k-1)!=0)q.push(node(0,1));\n    while(q.size()>=k)\n    {\n        ll h=-1;ll w=0;\n        for(int i=1;i<=k;++i)\n        {\n            node t=q.top();q.pop();\n            h=max(h,t.h);\n            w+=t.w;\n        }\n        ans+=w;\n        q.push(node(w,h+1));\n    }\n    printf(\"%lld\\n%lld\\n\",ans,q.top().h-1);\n    return 0;\n}\n   ```\n    \n    \n   \n    \n    \n",
        "postTime": 1545551048,
        "uid": 106232,
        "name": "_Sein",
        "ccfLevel": 0,
        "title": "[NOI2015]\u8377\u9a6c\u53f2\u8bd7"
    },
    {
        "content": "\n# \u601d\u8def\n\n\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u54c8\u592b\u66fc\u6811\uff0c\u54c8\u592b\u66fc\u6811\u4e5f\u53eb\u6700\u4f18\u4e8c\u53c9\u6811\uff0c\u662f\u4e00\u79cd\u5e26\u6743\u8def\u5f84\uff08\u53f6\u5b50\u8282\u70b9\u6743\u503c\u4e58\u8be5\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u957f\u5ea6\uff09\u4e4b\u548c\u6700\u77ed\u7684\u4e8c\u53c9\u6811\u3002\u901a\u8fc7\u54c8\u592b\u66fc\u6811\u53ef\u4ee5\u6784\u9020\u51fa\u54c8\u592b\u66fc\u7f16\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u6570\u636e\u538b\u7f29\u548c\u6570\u636e\u52a0\u5bc6\u3002\n\n\n\u54c8\u592b\u66fc\u7f16\u7801\u7684\u539f\u7406\u662f\uff0c\u5229\u7528\u54c8\u592b\u66fc\u6811\u4e2d\u6743\u503c\u8d8a\u9ad8\uff08\u6570\u636e\u51fa\u73b0\u9891\u7387\u8d8a\u9ad8\uff09\u7684\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u8d8a\u5c0f\uff08\u5bf9\u5e94\u54c8\u592b\u66fc\u7f16\u7801\u8d8a\u77ed\uff09\u7684\u6027\u8d28\uff0c\u5c06\u6570\u636e\u538b\u7f29\u6210\u54c8\u592b\u66fc\u7f16\u7801\u3002\u6b63\u662f\u7531\u4e8e\u6bcf\u4e00\u4e2a\u6570\u636e\u5bf9\u5e94\u4e8e\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u800c\u5bf9\u5e94\u7684\u7f16\u7801\u4e3a\u6839\u5230\u8be5\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u4e00\u4e32\u54c8\u592b\u66fc\u7f16\u7801\u624d\u80fd\u5bf9\u5e94\u60df\u4e00\u7684\u4e00\u4e32\u539f\u7801\uff08\u5373\u9898\u76ee\u4e2d\u6240\u8bf4si\u4e0d\u662fsj\u7684\u524d\u7f00\u3002\uff09\uff0c\u89e3\u7801\u65f6\u624d\u4e0d\u4f1a\u4ea7\u751f\u6df7\u6dc6\u3002\n\n\n\u4f9d\u636e\u9898\u610f\u548c\u9898\u76ee\u80cc\u666f\u91cc\u9762\u7684\u4e00\u4e9b\u6697\u793a\uff0c\u601d\u8def\u53ef\u4ee5\u660e\u786e\uff0c\u5c31\u662f\u8981\u6c42\u6784\u9020\u4e00\u4e2aK\u8fdb\u5236\u7684\u54c8\u592b\u66fc\u7f16\u7801\u3002\u5e73\u65f6\u6211\u4eec\u6240\u8bf4\u7684\u54c8\u592b\u66fc\u7f16\u7801\u4e3a2\u8fdb\u5236\u7684\uff0c\u6784\u9020\u7684\u65b9\u6cd5\u4e5f\u5f88\u5bb9\u6613\uff08\u7c7b\u4f3c\u4e8eNOIP2004 \u5408\u5e76\u679c\u5b50\uff09\uff0c\u672c\u9898\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u601d\u60f3\u3002\n\n\n\u9996\u5148\u660e\u786e\u9700\u8981\u7ef4\u62a4\u4ec0\u4e48\u3002\u8f6c\u6362\u4e00\u4e0b\u9898\u610f\uff0c\u4e0d\u96be\u77e5\u9053\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u662f\u6700\u77ed\u7684\u5e26\u6743\u8def\u5f84\u4e4b\u548c\u548c\u8be5\u54c8\u592b\u66fc\u6811\u7684\u9ad8\u5ea6\u3002\u7136\u540e\u4fbf\u662f\u5982\u4f55\u7ef4\u62a4\uff0c\u7531\u4e8e\u4e0d\u9700\u8981\u77e5\u9053\u54c8\u592b\u66fc\u6811\u7684\u5177\u4f53\u5f62\u6001\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u6309\u7167\u54c8\u592b\u66fc\u6811\u7684\u6784\u9020\u65b9\u5f0f\uff0c\u5c06\u5f53\u524d\u6700\u5c0f\u7684K\u4e2a\u8282\u70b9\u5408\u5e76\u4e3a1\u4e2a\u7236\u8282\u70b9\uff0c\u76f4\u81f3\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\u3002\u770b\u5230\u201c\u5c06\u6700\u5c0fK\u4e2a\u8282\u70b9\u5408\u5e76\u201d\u4fbf\u53ef\u4ee5\u660e\u786e\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff08\u4e8c\u53c9\u5806\uff09\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\n\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\u3002\u56e0\u4e3a\u6bcf\u6b21\u90fd\u662f\u5c06k\u4e2a\u8282\u70b9\u5408\u5e76\u4e3a1\u4e2a\uff08\u51cf\u5c11k-1\u4e2a\uff09\uff0c\u4e00\u5171\u8981\u5c06n\u4e2a\u8282\u70b9\u5408\u5e76\u4e3a1\u4e2a\uff0c\u5982\u679c\uff08n-1\uff09%\uff08k-1\uff09\uff01=0 \u5219\u6700\u540e\u4e00\u6b21\u5408\u5e76\u65f6\u4e0d\u8db3k\u4e2a\u3002\u4e5f\u5c31\u8868\u660e\u4e86\u6700\u9760\u8fd1\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\u53cd\u800c\u6ca1\u6709\u88ab\u6392\u6ee1\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u52a0\u5165k-1-\uff08n-1\uff09%\uff08k-1\uff09\u4e2a\u7a7a\u8282\u70b9\u4f7f\u6bcf\u6b21\u5408\u5e76\u90fd\u591fk\u4e2a\u8282\u70b9\uff08\u4e5f\u5c31\u662f\u5229\u7528\u7a7a\u8282\u70b9\u5c06\u5176\u4f59\u7684\u8282\u70b9\u6324\u5230\u66f4\u4f18\u7684\u4f4d\u7f6e\u4e0a\uff09\u3002\n\n# \u4ee3\u7801#\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <ext/pb_ds/priority_queue.hpp> //pb_ds\u5e93\n#define LL long long \nusing namespace std;\nstruct node{\n    LL w,h;\n    node(LL W, LL H){\n        w=W,h=H;\n    }\n};\nbool operator<(node a, node b){\n    if(a.w!=b.w) return a.w>b.w; \n    return a.h>b.h;  //\u5982\u679c\u957f\u5ea6\u76f8\u7b49\uff0c\u9ad8\u5ea6\u5c0f\u7684\u4f18\u5148\n} //\u6784\u9020\u5c0f\u6839\u5806\u7684\u64cd\u4f5c\u3002\n__gnu_pbds::priority_queue <node, std::less<node>, __gnu_pbds::pairing_heap_tag> q; //\u4f18\u5148\u961f\u5217\nint n,k,cnt;\nLL temp,maxh,ans;\n\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1; i<=n; i++){\n        scanf(\"%lld\",&temp);\n        q.push(node(temp,1));\n    }\n    if((n-1)%(k-1) != 0) cnt=k-1-(n-1)%(k-1);  //\u5224\u65ad\u662f\u5426\u8981\u8865\u7a7a\u8282\u70b9\n    for (int i=1; i<=cnt; i++)\n        q.push(node(0,1)); //\u8865\u7a7a\u8282\u70b9\n    cnt+=n;     //cnt\u4e3a\u6839\u8282\u70b9\u4e2a\u6570(\u6700\u521d\u6bcf\u4e2a\u6839\u8282\u70b9\u90fd\u4e3a\u5176\u672c\u8eab\uff09\n    while(cnt>1){\n        temp=maxh=0;\n        for(int i=1; i<=k; i++){\n            temp+=q.top().w;\n            maxh=max(maxh,q.top().h);\n            q.pop();\n        }\n        ans+=temp; //\u7ef4\u62a4\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\n        q.push(node(temp, maxh+1)); //\u5408\u5e76\uff0c\u9ad8\u5ea6\u4e3a\u6700\u9ad8\u5b50\u6811\u9ad8\u5ea6+1\n        cnt-=k-1; //\u51cf\u5c11\u6839\u8282\u70b9\n    }\n    printf(\"%lld\\n%lld\\n\",ans,q.top().h-1);\n    return 0;\n}\n\n```",
        "postTime": 1516627781,
        "uid": 56316,
        "name": "crazydave",
        "ccfLevel": 0,
        "title": "\u9898\u89e32168 \u3010\u8377\u9a6c\u53f2\u8bd7\u3011"
    },
    {
        "content": "## \u672c\u9898\u89e3\u5f15\u5bfc\n1. **\u9898\u76ee\u5927\u610f**\n2. $Solution$\n3. $AC code$\n4. **\u7c7b\u4f3c\u9898\u578b**\n\n\u4ee3\u7801\u7c7b\u578b\uff1a$C++$\n\n\u662f\u5426\u5438\u6c27\uff1a\u5426\n\n\u4e0d\u538b\u884c\u4ee3\u7801\u957f\u5ea6\uff1a36\n\n------------\n\n## \u9898\u76ee\u5927\u610f\n\u9898\u9762\uff1a[<\u4f20\u9001\u95e8>](https://www.luogu.com.cn/problem/P2168)\n\n\u9898\u610f\uff1a\u7ed9\u51fa$n$\u4e2a\u503c\uff0c\u5e76\u7ed9\u51fa$k$\uff0c\u6c42\u7f16\u7801\u540e\u603b\u957f\u5ea6\u53ca\u6240\u6709\u7f16\u7801\u4e2d\u6700\u77edk\u8fdb\u5236\u7f16\u7801\u957f\u5ea6\n\n~~\u672f\u8bed\u7406\u89e3\uff1ak\u53c9Huffman\u677f\u5b50~~\n\n## $Solution$\n\u4e0d\u61c2$Huffman$\u662f\u4ec0\u4e48\u7684\u8d70\u8fd9\u91cc[<\u4f20\u9001\u95e8>](https://www.luogu.com.cn/blog/wugu-2333/shu-di-ji-ben-zhi-shi)\n\n\uff08\u63a5\u4e0b\u6765\u8bb2\u7684\u4f20\u9001\u95e8\u91cc\u90fd\u6709\uff0c\u56e0\u4e3a\u662f\u677f\u5b50\u9898\uff09\n\n\u9996\u5148\u8bb2**\u6570\u636e\u7ed3\u6784**\uff0c\u56e0\u4e3a$Huffman$\u6bcf\u6b21\u5408\u5e76\u90fd\u8981\u6392\u5e8f\uff0c\u6240\u4ee5\u4f7f\u7528\u5806\uff08\u76f4\u63a5\u7528$priority$_$queue$\u66f4\u65b9\u4fbf\uff09\u3002\n\n\u518d\u6765\u8bb2$k$\u53c9$Huffman$\uff0c\u53ca\u7531\u4e24\u4e2a\u5206\u53c9\u53d8\u4e3a$k$\u4e2a\u5206\u53c9\uff08$k$\u53c9\u6811\uff09\u3002\n\n\u4f46\u771f\u6b63\u53bb\u8dd1\u7684\u65f6\u5019\u4f60\u624d\u53d1\u73b0\uff0c\u6700\u540e\u4e00\u6b21\u5408\u5e76\u4e4b\u540e\uff0c\u5806\u4e2d\u5269\u4e0b$m$\u4e2a\u503c\u3002\u4f46\u5982\u679c$1<m<k$\uff0c\u5373\u6ca1\u6709\u8fbe\u5230\u300c\u5806\u4e2d\u53ea\u5269\u4e00\u4e2a\u503c\u300d\u5374\u4e0d\u80fd\u300c\u5408\u5e76\u300d\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u300c\u8865\u70b9\u300d\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4ee5\u8fbe\u5230\u300c\u5806\u4e2d\u53ea\u5269\u4e00\u4e2a\u503c\u300d\u8fd9\u4e2a\u76ee\u7684\u3002\n\n\u4ecb\u7ecd\u4e00\u4e0b\u300c\u8865\u70b9\u300d\uff1a\u9996\u5148\uff0c\u6211\u4eec\u6bcf\u6b21\u5408\u5e76\u7528\u6389$k$\u4e2a\u503c\u53c8\u5408\u5e76\u51fa$1$\u4e2a\u503c\uff0c\u90a3\u4e48\u6309\u6bcf\u6b21\u5408\u5e76\u6765\u7b97\uff0c\u6211\u4eec\u6bcf\u6b21\u7528\u6389\u4e86$k-1$\u4e2a\u503c\u3002\u7136\u540e\uff0c\u6211\u4eec\u6700\u7ec8\u9700\u8981\u53ea\u5269$1$\u4e2a\u503c\uff0c\u5373\u9700\u8981\u5408\u5e76$n-1$\u4e2a\u503c\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8ba9$(n-1)$%$(k-1)=0$\u6210\u7acb\u4e0d\u5c31\u884c\u4e86\u5417\uff1f\u4f46\u8981\u4f7f$(n-1)$%$(k-1)=0$\u6210\u7acb\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8865$(n-1)-((n-1)$%$(k-1))$\u4e2a\u70b9\uff08\u81ea\u5df1\u597d\u597d\u601d\u8003\u4e0b\u4e3a\u4ec0\u4e48\uff09\uff0c\u4f46\u8981\u4f7f\u7b54\u6848\u4e0d\u53d7\u5f71\u54cd\uff0c\u6211\u4eec\u5c31\u7528\u6743\u503c\u4e3a$0$\u7684\u70b9\u6765\u8865\u3002\n\n\u4e0b\u9762\u9488\u5bf9\u6bcf\u4e2a\u95ee\u9898\u8bb2\u89e3\u4e00\u4e0b\uff1a\n\n1. \n```\n\u300a\u8377\u9a6c\u53f2\u8bd7\u300b\u7ecf\u8fc7\u91cd\u65b0\u7f16\u7801\u4ee5\u540e\u7684\u6700\u77ed\u957f\u5ea6\u3002\n```\n\u5168\u6587\u7684\u6700\u77ed\u957f\u5ea6\uff0c\u90a3\u4e48\u4e0d\u5c31\u662f\u7ecf\u8fc7\u5904\u7406\u540e\u7684\u603b\u548c\u5417\uff1f\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u628a\u6bcf\u4e2a\u503c\u90fd\u52a0\u4e00\u904d\u5c31\u662f\u4e86\u3002\n\n2. \n```\n\u4e3a\u4fdd\u8bc1\u6700\u77ed\u603b\u957f\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u957f\u5b57\u7b26\u4e32s_i\u7684\u6700\u77ed\u957f\u5ea6\u3002\n```\n\u8fd9\u4e2a\u66f4\u7b80\u5355\u4e86\uff0c\u5c31\u662f\u8bf4\u7ecf\u8fc7\u5904\u7406\u540e\uff0c\u6bcf\u4e2a\u503c\u90fd\u8dd1\u4e00\u8fb9\u627e\u51fa\u6700\u5c0f\u503c\u5c31\u662f\u4e86\u3002\n\n\n## $AC code$\n\u9996\u5148\u8bf4\u4e0b\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u6ce8\u91ca\u6211\u90fd\u5199\u5728\u91cc\u9762\u4e86\u3002\u62d2\u7edd\u6284\u88ad\uff0c\u4ece\u6211\u505a\u8d77\uff08\u4e3b\u8981\u61c2\u4e86\u5c31\u80fd\u5199\u51fa\u6765\uff0c\u6ca1\u5fc5\u8981\u6284\u4ee3\u7801\uff0c\u4e0d\u7136\u8fd8\u62ff\u4e2a\u68d5\u540d\uff09\n\n```cpp\n#include<iostream>//\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6d41\n#include<cstdio>//c\u8bed\u8a00\u6807\u51c6\u8f93\u5165\u8f93\u51fa\n#include<cmath>//c\u6570\u5b66\u8fd0\u7b97\n#include<cstring>//c\u8bed\u8a00\u5b57\u7b26\u4e32\n#include<queue>//\u961f\u5217\nusing namespace std;//\u8c03\u7528\u547d\u540d\u7a7a\u95f4\ntypedef long long ll;//\u5c06\"long long\"\u7528\"ll\"\u4ee3\u66ff\nstruct Tree{//\u5b9a\u4e49\u7ed3\u6784\u4f53\"Tree\"\n    ll w,h;//\u6ce8\u610f\u662flong long\u7c7b\u578b\uff0c\u7b2c\u4e00\u4e2aw\u8868\u793a\u6743\u503c\uff0c\u7b2c\u4e8c\u4e2ah\u8868\u793a\u9ad8\u5ea6\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u957f\u5ea6\uff0c\u56e0\u4e3a\u4e00\u5c42\u5c31\u662f\u4e00\u4e2a\u5b57\u7b26\u957f\u5ea6\uff09\n    bool operator<(const Tree &x)const{//\u91cd\u8f7d\u8fd0\u7b97\u7b26\n        if(w!=x.w)return w>x.w;//\u4f18\u5148\u8003\u8651\u6743\u503c\u5927\n        return h>x.h;//\u5176\u6b21\u8003\u8651\u957f\u5ea6\n    }\n};priority_queue<Tree>tree;//\u7c7b\u578b\u4e3a\"Tree\"\u7684\u4f18\u5148\u961f\u5217\"tree\"\nll n,k,ans1=0,ans2,x;//\u5355\u8bcd\u6570\u91cf\u3001\u8fdb\u5236\u3001\u7b54\u68481\u3001\u7b54\u68482\u3001\u66ff\u6b7b\u9b3c\"x\"\uff08\u5565\u90fd\u5e72\uff0c\u65e0\u5177\u4f53\u610f\u4e49\uff0c\u4f46\u51fa\u4e8e\u61d2\u5c31\u5b9a\u4e49\u4e86\u5168\u5c40\u53d8\u91cf\uff09\nint main(){\n    scanf(\"%lld %lld\",&n,&k);//\u6ce8\u610f\u662f\"%lld\"\uff0c\u4ee5\u9632RE\n    for(int i=1;i<=n;i++){\n        scanf(\"%lld\",&x);//\u8bfb\u5165\u66ff\u6b7b\u9b3c\uff08\u6743\u503c\uff09\n        tree.push((Tree){x,1});//\u9ed8\u8ba4\u9ad8\u5ea6\u4e3a1\uff08\u8fd9\u91cc\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u6709\u70b9\u9ebb\u70e6\uff09\n    }if((n-1)%(k-1)){//\u5148\u68c0\u6d4b\uff0c\u5982\u679c\u4e0d\u662f0\u624d\u8fdb\u5165\u5224\u65ad\n        x=k-1-(n-1)%(k-1);//\u6c42\u51fa\u8981\u8865\u7684\u7ed3\u70b9\u4e2a\u6570\n        for(int i=1;i<=x;i++)tree.push((Tree){0,1});//\u300c\u8865\u70b9\u300d\u64cd\u4f5c\n    }ll sumw,maxh;//ans1\u548cans2\u7684\u4e34\u65f6\u503c\n    while(tree.size()!=1){//\u56e0\u4e3a\u4e0d\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u53ea\u8981\u5927\u4e8e1\u4e2a\u70b9\u5c31\u8dd1\n        sumw=0,maxh=-2147483647;//\u521d\u59cb\u503c\u8981\u5728\u5faa\u73af\u5b9a\u4e49\n        for(int i=1;i<=k;i++){//\u6bcf\u6b21\u9009\u51fak\u4e2a\u503c\n            sumw+=tree.top().w;//\u53d6\u51fa\u961f\u9996\u52a0\u5230\u603b\u548c\u91cc\n            maxh=max(tree.top().h,maxh);//\u627e\u6700\u5c0f\u957f\u5ea6\n            tree.pop();//\u961f\u5934\u51fa\u961f\n        }tree.push((Tree){sumw,maxh+1});//\u52a0\u4e0a\u5408\u5e76\u7684\u503c\uff0c\u8fd9\u91cc\u4e0d\u76f4\u63a5\u7528ans1\u3001ans2\u7684\u597d\u5904\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff08\u52a01\u662f\u56e0\u4e3a\u5408\u5e76\u540e\u7684\u957f\u5ea6\u662f\u8981\u589e\u52a01\u7684\uff09\n        ans1+=sumw;//\u7136\u540e\u624d\u662f\u5b58\u50a8\u6570\u636e\n        ans2=max(maxh,ans2);//\u5b58\u50a8\u6570\u636e\n    }printf(\"%lld\\n%lld\",ans1,ans2);//\u8fd9\u65f6\u5019\u4e00\u53e3\u6c14\u8f93\u51fa\n    return 0;//\u597d\u4e60\u60ef\u517b\u6210\n}\n```\n$AC$\u8bb0\u5f55[<\u4f20\u9001\u95e8>](https://www.luogu.com.cn/record/list?pid=P2168&user=359422)\n\n## \u7c7b\u4f3c\u9898\u578b\n\u6682\u65e0\uff0c\u56e0\u4e3a\u67d0\u8c37\u4e2d$Huffman$\u7684\u9898\u5c31\u5f88\u5c11\uff0c\u522b\u8bf4\u662f$k$\u53c9$Huffman$\u4e86\u3002",
        "postTime": 1610257015,
        "uid": 359422,
        "name": "\u65e0\u5495_",
        "ccfLevel": 4,
        "title": "P2168 [NOI2015] \u8377\u9a6c\u53f2\u8bd7 \u9898\u89e3"
    },
    {
        "content": "k\u53c9\u54c8\u592b\u66fc\u6811\u7684\u6784\u9020\u6a21\u677f\u9898\u3002\n\n\u5982\u679ck=2\uff0c\u5de6\u8f6cNOIP\u5408\u5e76\u679c\u5b50\u3002\u5806\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5982\u679ck>2\uff0c\u5f53(n-1)%(k-1)!=0\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u6700\u540e\u4e00\u6b21\u5c11\u4e8ek\u4e2a\uff0c\u901a\u8fc7\u589e\u52a0w=0\u7684\u5355\u8bcd\u89e3\u51b3\u3002\n\n\u4e3a\u4e86\u6700\u5c0f\u5316\u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\uff0c\u5728struct\u91cc\u9762\u4e0d\u4ec5\u8981\u8bb0\u5f55\u5f53\u524d\u7684w\uff0c\u8fd8\u8981\u8bb0\u5f55\u6df1\u5ea6\uff0c\u5e76\u4ee5\u4ed6\u4eec\u4f5c\u4e3a\u5c0f\u6839\u5806\u7684\u5173\u952e\u5b57\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u53d6\u51fa\u5806\u5934k\u4e2a\u5408\u5e76\u540e\u52a0\u5165\u5373\u53ef\u3002\u8d2a\u5fc3\u601d\u60f3\u60f3\u4e00\u60f3\u5c31\u660e\u767d\u4e86\u3002\n",
        "postTime": 1437484864,
        "uid": 8072,
        "name": "immortalCO",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2168 \u3010\u8377\u9a6c\u53f2\u8bd7\u3011"
    },
    {
        "content": "\u597d\u4e45\u6ca1\u53d1\u9898\u89e3\u4e86\u3002\n\n\n\u8fd9\u9898\u5c31\u662f\u57fa\u672c\u7684huffman+\u5806\uff0c\u5982\u679c(n-1)\u662f(k-1)\u7684\u500d\u6570\uff0c\u90a3\u4e48ok\uff0c\u6211\u4eec\u53ef\u4ee5\u5408\u5e76\uff0c\u5426\u5219\u6211\u4eec\u9700\u8981\u8865\u5145\u865a\u62df\u8282\u70b9\u2014\u2014\u6743\u503c\u4e3a0\u7684\u7ed3\u70b9\uff08\u5bf9\u7ed3\u679c\u65e0\u5f71\u54cd\uff09\uff0c\u518d\u8fdb\u884c\u5408\u5e76\u5373\u53ef\u3002\n\n\n\u00b7\u00b7\u00b7cpp\n\n\n\n\n\n\n\n\n    \n    \n    \n        \n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <queue>\nusing namespace std;\ntypedef long long LL;\nconst int inf = 1 << 26;\nstruct trees {\n    LL v, h;\n};\nbool operator<(trees a, trees b){\n    if(a.v != b.v) return a.v > b.v;\n    return a.h > b.h;    \n}\npriority_queue<trees> q;\nint n, k;\nint main(){\n    scanf(\"%d %d\", &n, &k);\n    for ( int i = 1; i <= n; i ++ ) {\n        trees a;\n        scanf(\"%lld\", &a.v);\n        a.h = 1;\n        q.push(a);\n    }\n    LL top = 0;\n    if((n-1)%(k-1) != 0) top += k-1-(n-1)%(k-1);    // \u9700\u8981\u8865\u4e3a 0 \u7684\u7ed3\u70b9\u7684\u4e2a\u6570\n    for ( int i = 1; i <= top; i ++ ) {\n        trees need;\n        need.v = 0; need.h = 1;\n        q.push(need);\n    } \n    top += n;\n    LL ans = 0;\n    while(top != 1) {\n        trees a;\n        LL temp = 0, mx = 0;\n        for ( int i = 1; i <= k; i ++ ) {\n            a = q.top(); temp += a.v;\n            mx = max(mx, a.h); q.pop();\n        }\n        ans += temp;\n        a.v = temp; a.h = mx+1;\n        q.push(a);\n        top -= k-1;\n    }\n    printf(\"%lld\\n%lld\\n\", ans, q.top().h-1);\n    return 0;\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1491708094,
        "uid": 17170,
        "name": "Deny_\u5c0f\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2168 \u3010\u8377\u9a6c\u53f2\u8bd7\u3011"
    },
    {
        "content": "**description**\n\n\u73b0\u5728\u6709\u4e00\u68f5\u6709 $n$ \u4e2a\u53f6\u5b50\u8282\u70b9 $k$ \u53c9\u6811\uff0c\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u6709\u4e00\u4e2a\u6743\u503c $s_i$\uff0c\u8be5\u8282\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u4e3a $l_i$\uff0c\u73b0\u5728\u8981\u6700\u5c0f\u5316 $\\sum s_il_i$\n\n**solution**\n\n\u4e00\u4e2a $k$ \u53c9\u54c8\u592b\u66fc\u6811\u7684\u677f\u5b50\u9898\n\n\u663e\u7136\u6211\u4eec\u8981\u628a\u6743\u503c\u5927\u7684\u5c3d\u91cf\u5f80\u4e0a\u9762\u653e\uff0c\u628a\u6743\u503c\u5c0f\u7684\u5c3d\u91cf\u5f80\u4e0b\u9762\u653e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5806\u6765\u7ef4\u62a4\uff0c\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\u7684 $k$ \u4e2a\u5143\u7d20\uff0c\u6c42\u51fa\u4ed6\u4eec\u7684\u548c $sum$\uff0c\u7d2f\u52a0\u5230 $ans$ \u4e2d\uff0c\u7136\u540e\u518d\u5411\u5806\u4e2d\u63a8\u5165\u4e00\u4e2a\u6743\u503c\u4e3a $sum$ \u7684\u6570\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6700\u540e\u53d6\u5230\u4e0d\u8db3 $k$ \u4e2a\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u6839\u8282\u70b9\u7684\u5ea6\u6570\u53ef\u80fd\u4f1a\u4e0d\u8db3 $k$\uff0c\u8fd9\u4e2a\u65f6\u5019\u663e\u7136\u4e0d\u4f18\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u4e0a\u534a\u90e8\u5206\u7684\u6570\u5c3d\u91cf\u662f\u6ee1\u7684\u3002\n\n\u89e3\u51b3\u65b9\u6cd5\u662f\u521d\u59cb\u7684\u65f6\u5019\u5f80\u91cc\u9762\u8865 $0$\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u6211\u4eec\u8981\u628a\u70b9\u7684\u6570\u91cf\u51cf\u5c11 $k-1$\uff0c\u4e00\u5171\u8981\u6d88\u6389 $n-1$ \u4e2a\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8865\u5230 $n-1\\bmod k-1=0$ \u65f6\u5373\u53ef\n\n\u6ce8\u610f\u6b64\u9898\u7b2c\u4e8c\u95ee\u8981\u6c42\u6700\u957f\u7684\u5b57\u7b26\u4e32\u5c3d\u91cf\u7684\u77ed\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u5728\u6743\u503c\u76f8\u540c\u7684\u65f6\u5019\u4f18\u5148\u53d6\u51fa\u6df1\u5ea6\u4f4e\u7684\u70b9\u3002\n\n```cpp\n# include <bits/stdc++.h>\n\nusing namespace std;\n\n# define Rep(i,a,b) for(register int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(register int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=3e5+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n,k;\nll ans;\n\nstruct misaka{\n\tll val;\n\tint dep;\n\tbool operator < (const misaka &cmp)const{\n\t\tif(val!=cmp.val)return val>cmp.val;\n\t\treturn dep>cmp.dep;\n\t}\n};\n\npriority_queue<misaka> q;\n\nint main()\n{\n\tread(n),read(k);\n\tRep(i,1,n){\n\t\tll x;\n\t\tread(x);\n\t\tq.push((misaka){x,0});\t\n\t}\n\tint qwq=(k-1-(n-1)%(k-1))%(k-1);\n\tRep(i,1,qwq)q.push((misaka){0,0});\n\twhile(q.size()>1){\n\t\tll val_new=0;\n\t\tint dep_new=0;\n\t\tRep(i,1,k){\n\t\t\tmisaka u=q.top();q.pop();\n\t\t\tval_new+=u.val;\n\t\t\tdep_new=max(dep_new,u.dep);\n\t\t}\n\t\tans+=val_new;\n\t\tq.push((misaka){val_new,dep_new+1});\n\t} \n\tprintf(\"%lld\\n%d\\n\",ans,q.top().dep);\n\treturn 0;\n}\n```\n",
        "postTime": 1608181307,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2168 \u3010[NOI2015]\u8377\u9a6c\u53f2\u8bd7\u3011"
    },
    {
        "content": "//\u6b64\u9898\u662f\u54c8\u592b\u66fc\u6811\u6a21\u677f\uff0c\u52a0\u4e0a\u5806\u4f18\u5316\uff0c\u7136\u540e\u5176\u4e2d\u6ce8\u610f\u8bb0\u5f55\u6bcf\u6b21\u7684\u503c\u548c\u5f53\u524d\u5c42\u6570\uff0c\u6709\u4e2a\u5c0f\u6280\u5de7\uff0c\u53ef\u4ee5\u7528pair+\u4f18\u5148\u961f\u5217\u65b9\u4fbf\u6392\u5e8f\uff0c\u6bd4\u7ed3\u6784\u4f53\u52a0\u91cd\u8f7d\u66f4\u52a0\u65b9\u4fbf\u3002\n\n\n\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\n\n\n\n\n\n\n    \n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <utility>\n#include <queue>\nusing namespace std;\ntypedef pair<long long,long long> aii;//\u5b9a\u4e49pair\uff0c\u7b2c\u4e00\u4f4d\u653e\u8282\u70b9\u7684\u503c\uff0c\u7b2c\u4e8c\u4f4d\u653e\u5b83\u7684\u5c42\u6570 \npriority_queue< aii,vector<aii>,greater<aii> > que;//\u5c0f\u6839\u5806\uff0c\u54c8\u592b\u66fc\u6811\u4ece\u5c0f\u5230\u5927\u5408\u5e76 \nint n,k,Num = 0;\nlong long  Length = 0,Ans = 0,x;//\u6ce8\u610f10^14\u8981\u5f00long long \nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&x);\n        que.push(aii(x,1));\n```\n}//\u521d\u59cb\u65f6\u6bcf\u4e2a\u7ed3\u70b9\u662f\u7b2c\u4e00\u5c42\n    \nif((n-1)%(k-1)!=0) Num=k-1-(n-1)%(k-1);//\uff01\uff01\uff01\u6ce8\u610f\uff0c\u5f53\u7ed3\u70b9\u4e0d\u591f\u65f6\uff0c\u63d2\u5165\u503c\u4e3a\u96f6\u7684\u865a\u8282\u70b9\uff0c\u4e0d\u7136\u7b97\u51fa\u6765\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u89e3\n\n    \n        \n    \n        \n        \n```cpp\n    for(int i=1;i<=Num;i++)\n        que.push(aii(0,1));//\u63d2\u5165\u865a\u8282\u70b9 \n    Num+=n;//Num\u4ee3\u8868\u4e00\u5171\u6709\u591a\u5c11\u5143\u7d20 \n    while(Num!=1)//Num=1\u65f6\uff0c\u6240\u6709\u5143\u7d20\u5df2\u7ecf\u5408\u5e76\uff0c\u9000\u51fa \n    {\n        aii a;\n        long long Temp = 0,Max_h = 0;//Temp\u7b97\u5408\u5e76\u540e\u7684\u503c\uff0cMax_h\u4ee3\u8868\u6700\u5927\u5c42\u6570 \n        for(int i=1;i<=k;i++)\n        {\n            a = que.top();\n            Temp+=a.first;\n            Max_h=max(Max_h,a.second);\n            que.pop(); \n```\n}//\u5c06\u524dk\u4e2a\u5143\u7d20\u5408\u5e76\n        \nAns+=Temp;//\u6839\u636e\u54c8\u592b\u66fc\u6811\u7684\u6027\u8d28\uff0c\u6613\u8bc1\u6700\u77ed\u957f\u5ea6\u662f\u6bcf\u6b21\u5408\u5e76\u540e\u7684\u503c\u4e4b\u548c\n\n        \nque.push(aii(Temp,Max\\_h+1));//\u628a\u5408\u5e76\u540e\u7684\u5143\u7d20\u653e\u5165\uff0c\u8bb0\u5f97\u5c42\u6570\u8981\u52a0\u4e00\n\n        \n    \n    \n    \n```cpp\n        Num-=k;//\u5c11\u4e86k\u4e2a \n        Num++;//\u591a\u4e86\u4e00\u4e2a \n    }\n    Length = que.top().second - 1;//\u6700\u957f\u5b57\u4e32\uff0c\u6709k\u5c42\u65f6\u7b2c\u4e00\u5c42\u4e0d\u7b97\uff0c\u7b2c\u4e8c\u5c42s=1\uff0c\u7b2c\u4e09\u5c42s=2\uff0c\u7b2cn\u5c42s=n-1 \n    printf(\"%lld\\n%lld\",Ans,Length);//\u8f93\u51falong long \n    return 0;\n}\n```",
        "postTime": 1481984633,
        "uid": 21673,
        "name": "Sor4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2168 \u3010\u8377\u9a6c\u53f2\u8bd7\u3011"
    },
    {
        "content": "\n##\u9898\u89e3by\uff1a\u843d\u5bde\u97f3\u7bab\n\n##\u770b\u5230\u5f88\u591a\u5927\u4f6c\u90fd\u7528\u4f18\u5148\u961f\u5217\u554a\uff0c\u5806\u554a\u4ec0\u4e48\u7684\uff0c\u4f46\u662f\u6211\u6709\u4e00\u4e2aO\uff08N\uff09\u7684\u7b97\u6cd5\u3002\u3002\u3002\u6709\u4e00\u4e9b\u5c40\u9650\u7684\u53cc\u961f\u5217\u3002\u3002\u3002\u3002\n\n- \u5176\u5b9eylsoi[https://www.luogu.org/space/show?uid=20059]\u5927\u4f6c\u65e9\u57287\u6708\u5c31\u5728\u5408\u5e76\u679c\u5b50\u91cc\u53d1\u4e86\u8fd9\u79cd\u9898\u7684\u6700\u4f18\u505a\u6cd5\u2014\u2014\u53cc\u961f\u5217\uff0c\u4f46\u662f\u4f3c\u4e4e\u5e76\u6ca1\u6709\u5f15\u8d77\u4ec0\u4e48\u5173\u6ce8\uff0c\u6240\u4ee5\u6211\u73b0\u5728\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5c31\u53c8\u60f3\u6765\u53d1\u4e00\u53d1\uff0c\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u79cd\u7b97\u6cd5\u3002\n\n- \u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u7b97\u6cd5\uff1a\n\n---------------\n\n\n```cpp\n    For(i,1,top){\n        c=0,maxx=0;\n        For(j,1,k){\n                if((a[nua].w<b[nub].w||a[nua].w==b[nub].w&&a[nua].h<=b[nub].h)&&a[nua].w!=-1||b[nub].w==-1){\n                sum+=a[nua].w;\n                maxx=Max(maxx,a[nua].h);\n                c+=a[nua++].w;\n            }\n            else if((a[nua].w>b[nub].w||a[nua].w==b[nub].w&&a[nua].h>b[nub].h)&&b[nub].w!=-1||a[nua].w==-1){\n                sum+=b[nub].w;\n                maxx=Max(maxx,b[nub].h);\n                c+=b[nub++].w;\n            }\n        }\n        b[++note].w=c;\n        b[note].h=maxx+1;\n    }\n```\n\n-------------------------------\n\n\u5728\u8fd9\u4e2a\u4ee3\u7801\u5757\u4e2d\uff0c\u6211\u7528**nua**\u6765\u5b58**\u539f\u7ed3\u6784\u4f53a**\u8fdb\u884c\u5230\u54ea\u91cc\u4e86\uff0c\u7528**nub**\u6765\u5b58**\u5408\u6210\u7684\u6570\u7684\u7ed3\u6784\u4f53b**\u8fdb\u884c\u5230\u7684\u4f4d\u7f6e\u3002\u4ece1\u5f00\u59cb\uff0c\u8fdb\u884ctop\u6b21\uff08\u5373Huffman\u6811\u91cc\u8981\u5408\u5e76\u591a\u5c11\u6b21\uff09\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8df3\u51fa\u6a21\u62df\u9898\u610f\u7684\u684e\u688f\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4fdd\u8bc1\u627e\u5230\u6700\u4f18\u89e3\u3002\n\n**\u90a3\u4e48\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u5462\uff1f**\n\n\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u5c06a\u6392\u8fc7\u5e8f\u4e86\uff0c\u90a3\u4e48\u662f\u4e0d\u662fa\u662f\u4ece\u5927\u5230\u5c0f\uff0c\u4ece\u9ad8\u4ef7\u503c\u5230\u4f4e\u4ef7\u503c\u4ee5\u6b64\u6392\u5217\u7684\uff1f\u65e2\u7136\u5982\u6b64\uff0c\u4e14\u5408\u6210\u7684b\u662f\u7531a\u4ece\u524d\u5230\u540e\u4f9d\u6b21\u52a0\u4e0a\u6765\u7684\uff0c\u90a3\u4e48b\u662f\u4e0d\u662f\u4e5f\u662f\u9012\u589e\u7684\uff1f\u89e3\u51b3\u4e86b\u4e3a\u4ec0\u4e48\u662f\u5355\u8c03\u9012\u589e\u7684\u4e86\u5417\uff1f\n\n\u90a3\u4e48a\u9012\u589e\uff0cb\u9012\u589e\uff0c\u4e3a\u4ec0\u4e48\u5c31\u53ef\u4ee5\u7528O\uff08n\uff09\u7684\u65f6\u95f4\u5408\u5e76\u5462\uff1f\n\n\u5728\u4ee3\u7801\u5757\u4e2d\uff0c\u53ea\u8981**a\u3010nua\u3011**\u4ef7\u503c\u5927\u4e8e\u7b49\u4e8e**b\u3010nub\u3011**\u6216\u8005\u6ca1\u6709**b\u3010nub\u3011**\u4e86\uff0c\u6211\u4eec\u5c31\u52a0\u5165\u5b83\uff1b\u53ea\u8981**a\u3010nua\u3011**\u4ef7\u503c\u5c0f\u4e8e\u7b49\u4e8e**b\u3010nub\u3011**\u6216\u8005\u6ca1\u6709**a\u3010nua\u3011**\u4e86\uff0c\u6211\u4eec\u5c31\u52a0\u5165\u5b83\u3002\n\n\u52a0\u5b8c\u4e00\u8f6e\u540e\u518d\u52a0\u5230**b\u7ed3\u6784\u4f53**\u91cc\u9762\u3002\u8fd9\u6837\u662f\u4e0d\u662f\u5c31\u53ef\u4ee5\u65e2\u4fdd\u6301\u8dd1\u7684\u6700\u4f18\uff0c\u53c8\u53ef\u4ee5\u4fdd\u8bc1**b**\u59cb\u7ec8\u5355\u8c03\u9012\u589e\u3002\n\n\n--------------\n\n##\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u8bf7\u52a1\u5fc5\u89c2\u5bdf\u524d\u9762\u7684\u5b8f\u5b9a\u4e49\uff01\uff09\n\n```cpp\n//\u8fd9\u662f\u4ee3\u7801\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\n#define MAXN 100005\n#define re register\n#define ll long long\n#define For(i,a,b) for(re ll i=a;i<=b;++i)\n#define Max(a,b) ((a)>(b)?(a):(b))\n#define Min(a,b) ((a)<(b)?(a):(b))\nll n,k,top;\nll nua=1,nub=1,sum;\nstruct node{\n    ll w,h;//h\u8ba1\u7b97\u5df2\u7ecf\u52a0\u4e86\u591a\u5c11\u6b21\uff0c\u5176\u5b9ea\u7ed3\u6784\u4f53\u59cb\u7ec8\u662f1\n}a[MAXN],b[MAXN];//\u539f\u7ed3\u6784\u4f53\u6570\u7ec4\u4e0e\u5408\u6210\u7684\u7ed3\u6784\u4f53\u6570\u7ec4\nint cmp(node aa,node bb){\n    if(aa.w<bb.w)return 1;\n    if(aa.h<bb.h)return 1;\n    return 0;\n}//\u5904\u7406sort\uff1b\nll read(){\n    ll x=0,f=1;char ch=getchar();\n    for(;ch<48||ch>57;ch=getchar())if(ch=='-')f=-f;\n    for(;ch>=48&&ch<=57;x=(x<<1)+(x<<3)+(ch^48),ch=getchar());\n    return x*f;\n}\nint main(){\n    ll note=0;//note\u7528\u4e8e\u8ba1\u7b97\u5df2\u7ecf\u5408\u6210\u7684\u7ed3\u6784\u4f53\n    n=read(),k=read();\n    For(i,1,n)a[i].w=read(),a[i].h=1;\n    top=(n-1)%(k-1);//\u7528\u6765\u68c0\u6d4b\u662f\u5426\u9700\u8981\u52a0\u5165\u865a\u62df\u8282\u70b9\n    if(top)top=(k-1)-top;//\u5982\u679c\u8981\u52a0\u7684\u8bdd\uff0c\u52a0\u591a\u5c11\n    For(i,1,top)a[++n].w=0,a[n].h=1;//\u52a0\u5165\u8282\u70b9\n    sort(a+1,a+1+n,cmp);//\u6392\u5e8f\n    a[n+1].w=-1;//\u628aa\u7ed3\u6784\u4f53\u7684\u6700\u540e\u4e00\u4e2a\u6807\u8bb0\u4e3a\u4e0d\u80fd\u7ee7\u7eed\u52a0\n    For(i,1,n+1)b[i].w=-1;//\u5148\u628ab\u7ed3\u6784\u4f53\u90fd\u6807\u8bb0\u4e00\u4e0b\n    ll c=0,maxx=0;\n    top=(n-1)/(k-1);//\u9700\u8981\u52a0\u5165\u7684\u6b21\u6570\n    For(i,1,top){\n        c=0,maxx=0;//\u6bcf\u6b21\u8bb0\u5f55\u4e00\u4e0b\n        For(j,1,k){\n            if((a[nua].w<b[nub].w||a[nua].w==b[nub].w&&a[nua].h<=b[nub].h)&&a[nua].w!=-1||b[nub].w==-1){//\u5982\u679ca\u7ed3\u6784\u4f53\u66f4\u4f18\n                sum+=a[nua].w;\n                maxx=Max(maxx,a[nua].h);//\u627e\u52a0\u7684\u6b21\u6570\u6700\u591a\u7684\u8282\u70b9\n                c+=a[nua++].w;\n            }\n            else if((a[nua].w>b[nub].w||a[nua].w==b[nub].w&&a[nua].h>b[nub].h)&&b[nub].w!=-1||a[nua].w==-1){//\u5c06\u4e0a\u4e00\u4e2a\u518d\u5224\u65ad\u4e00\u6b21\n                sum+=b[nub].w;\n                maxx=Max(maxx,b[nub].h);\n                c+=b[nub++].w;\n            }\n        }\n        b[++note].w=c;//\u5408\u6210\u7684\u8282\u70b9\n        b[note].h=maxx+1;//\u5df2\u7ecf\u53c8\u52a0\u8fc7\u8fd9\u4e00\u6b21\u4e86\u3002\n    }\n    printf(\"%lld\\n%lld\",sum,b[note].h-1);//\u8f93\u51fa\u52a0\u8fc7\u7684sum\u4e0e\u6700\u591a\u52a0\u8fc7\u7684\u6b21\u6570\u3002\n    return 0;\n}\n```",
        "postTime": 1509363677,
        "uid": 20810,
        "name": "\u843d\u5bde\u97f3\u7bab",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2168 \u3010\u8377\u9a6c\u53f2\u8bd7\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u5fd8\u5f00 $long\\ long$ \u8c03\u4e86\u534a\u5929\u3002\u3002\u3002\n\n# \u9898\u9762\n\n[\u9898\u9762](https://www.luogu.org/problem/P2168)\n\n# Solution\n\n\u6bcf\u4e00\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\u770b\u505a\u6743\u503c\u3002\n\n\u56e0\u4e3a\u4e24\u4e2a\u5355\u8bcd\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u4e0d\u80fd\u6709\u5305\u542b\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5bf9\u6240\u6709\u7684\u5b57\u7b26\u4e32\u5efa\u4e00\u9897 $Trie$ \u6811\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u4e00\u5b9a\u662f\u4f4d\u4e8e\u53f6\u8282\u70b9\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u5355\u8bcd\u7684\u6743\u503c\u4ed8\u7ed9\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u7684\u53f6\u8282\u70b9\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u5efa\u7acb\u4e00\u9897 $Trie$ \u6811\uff0c\u6700\u5c0f\u5316 $\\sum val_i*l_i$ \u3002\u5176\u4e2d $val$ \u8868\u793a\u53f6\u8282\u70b9\u7684\u6743\u503c\uff0c $l$ \u8868\u793a\u5355\u8bcd\u957f\u5ea6\uff08\u5373\u5728\u6811\u4e2d\u7684\u6df1\u5ea6\uff09\u3002\n\n\u53c8\u56e0\u4e3a\u662f $k$ \u8fdb\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u5efa\u51fa\u7684\u4e00\u5b9a\u662f\u4e00\u4e2a $k$ \u53c9\u6811\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u4e0a\u9762\u7684\u8f6c\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u9053\u9898\u5c31\u662f\u8981\u6211\u4eec\u6c42\u4e00\u4e2a $k$ \u53c9\u7684 $Huffman$ \u6811\u3002\n\n\u540c\u65f6\u6211\u4eec\u8fd8\u8981\u4fdd\u8bc1\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6700\u5927\u503c\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u5408\u5e76\u65f6\uff0c\u5c3d\u91cf\u9009\u62e9\u957f\u5ea6\u77ed\u7684\u6765\u5408\u5e76\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il print(T x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nll n,k,sum,val,res,cnt;\nstruct Node{\n\tll val,st;\n\tNode(){}\n\tNode(ll val,ll st):val(val),st(st){}\n\tbool operator <(const Node &t) const{\n\t\treturn val==t.val?st>t.st:val>t.val;\n\t}\n};\npriority_queue<Node> q;\nint main()\n{\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(k);\n\tfor(ri i=1;i<=n;++i) read(val),q.push(Node(val,0));\n\twhile((n-1)%(k-1)) q.push(Node(0,0)),++n;\n\twhile(q.size()>=k){\n\t\tsum=0;rl s=0;\n\t\tfor(ri i=1;i<=k;++i){\n\t\t\tNode tmp=q.top();q.pop();\n\t\t\tsum+=tmp.val,s=max(s,tmp.st);\n\t\t}\n\t\tres+=sum,q.push(Node(sum,s+1));\n\t}\n\tNode ans=q.top();\n\tprint(res),puts(\"\"),print(ans.st);\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u5f88\u5de7\u5999\u7684\u4e00\u9053\u9898\u3002\n\n\u53ea\u8981\u60f3\u5230\u4e86\u95ee\u9898\u8f6c\u5316\uff0c\u5c31\u53d8\u5f97\u5f88\u7b80\u5355\u4e86\u3002",
        "postTime": 1567414720,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P2168 [NOI2015]\u8377\u9a6c\u53f2\u8bd7 \u9898\u89e3"
    },
    {
        "content": "\u7b80\u5316\u9898\u610f\uff1a\n\n\u6784\u9020\u4e00\u68f5\u5305\u542bn\u4e2a\u53f6\u5b50\u8282\u70b9\u7684 $k$ \u53c9\u6811 , \u7b2c $i$ \u4e2a\u53f6\u5b50\u8282\u70b9\u6df1\u5ea6\u4e3a $dep[i]$ , \u6743\u503c\u4e3a $w[i]$ \u3002\n\n$1.$ \u6700\u5c0f\u5316 $\\sum_{i=1}^n w[i] \\times dep[i]$ .\n\n$2.$ \u5728\u6ee1\u8db3\u6b64\u6761\u4ef6\u4e0b , \u6700\u5c0f\u5316 $max_{i=1}^n{dep[i]}$ .\n\n\u5148\u6765\u8bf4\u660e\u7b80\u5316\u540e\u7684\u9898\u610f\u4e0e\u539f\u95ee\u9898\u7b49\u4ef7\uff1a\u8bbe\u6bcf\u4e2a\u5b57\u6bcd\u4ee3\u8868\u6811\u4e2d\u7684\u4e00\u4e2a\u7ed3\u70b9\uff0c\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u5355\u8bcd\u90fd\u4ee5\u4e00\u4e2a\u53f6\u5b50\u7ed3\u675f\uff0c\u6240\u4ee5\u4fdd\u8bc1\u4e86\u5355\u8bcd\u4e92\u4e0d\u76f8\u540c\u3002\n\n\u8003\u8651\u6761\u4ef6$1$ , \u6ee1\u8db3\u6b64\u6761\u4ef6\u7684\u6811\u53eb **\u6700\u4f18\u4e8c\u53c9\u6811** , \u522b\u79f0 **Huffman** \u6811 \u3002\n\n\u5148\u8003\u8651 $k=2$ \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u8ba9\u6743\u503c\u5c0f\u7684\u53f6\u5b50\u6df1\u5ea6\u5c3d\u91cf\u5927\u3002\n\n\u81ea\u4e0b\u800c\u4e0a\u5efa\u6811\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n\t    1. \u5c06 n \u4e2a\u53f6\u5b50\u8282\u70b9\u63d2\u5165\u4e00\u4e2a\u5c0f\u6839\u5806\u3002\n    \n        2. \u53d6\u51fa2\u4e2a\u6743\u503c\u6700\u5c0f\u7684\u53f6\u5b50 a, b \uff0c\u65b0\u5efa\u4e00\u4e2a\u7ed3\u70b9 c \uff0c\u5219\uff1a\n           - c\u4e3aHuffman\u6811\u4e0a\u70b9a,b\u7684\u7236\u4eb2\n           - w[c]=w[a]+w[b]\n       \n        3. \u5c06c\u63d2\u5165\u5c0f\u6839\u5806\uff0c\u91cd\u590d\u6267\u884c 2 \u64cd\u4f5c\u76f4\u81f3 n=1 \u3002\n    \n\u81f3\u6b64\uff0c$k=2$ \u7684\u60c5\u51b5\u5df2\u7ecf\u5f97\u5230\u89e3\u51b3\uff0c\u4e0b\u9762\u8003\u8651 $k>2$ \u7684\u60c5\u51b5\u3002\n\n\u4e0a\u8ff0\u8d2a\u5fc3\u4e0d\u80fd\u89e3\u51b3 $k>2$ \u7684\u60c5\u51b5\uff0c\u662f\u56e0\u4e3a\u6700\u540e\u4e00\u6b21 $2$ \u64cd\u4f5c\u53ef\u80fd $n<k$ \u5bfc\u81f4\u6b64\u65f6\u4ece\u4efb\u610f\u4e00\u5c42\u53d6\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u8be5\u5c42\u90fd\u6bd4\u6b64\u65b9\u6848\u4f18\u3002\n\n\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6848\u4e3a\uff1a\u865a\u62df\u6dfb\u52a0\u82e5\u5e72\u4e2a\u6743\u503c\u4e3a $0$ \u7684\u53f6\u5b50\u7ed3\u70b9\uff0c\u4f7f\u5f97 $(n-1) \\mod (k-1)=0$ \uff0c\u4e0a\u8ff0\u95ee\u9898\u5f97\u4ee5\u89e3\u51b3\u3002\n\n\u518d\u8003\u8651\u6761\u4ef6$2$\uff1a\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u5b50\u6811\u7684\u6df1\u5ea6\uff0c\u5728\u6743\u503c\u76f8\u7b49\u7684\u7ed3\u70b9\u4e2d\uff0c\u9009\u62e9\u5b50\u6811\u6df1\u5ea6\u8f83\u5c0f\u7684\u7ed3\u70b9\u5408\u5e76\u5373\u53ef\u3002\n\n\u4e0b\u9762\u8d34 [[NOI2015]\u8377\u9a6c\u53f2\u8bd7](https://www.luogu.com.cn/problem/P2168) \u7684\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N=1002019;\n#define int long long\nint n,k,ans,mxd,tot,val[N],v[N];\nstruct Edge{int to,next;}e[N<<1];\nvoid add(int x,int y){\n    e[++tot].to=y; e[tot].next=v[x]; v[x]=tot;\n}\nstruct node{\n    int id,w,dep;\n    // id :\u7f16\u53f7, w :\u6743\u503c, dep :\u5b50\u6811\u6df1\u5ea6 . \n    node(int a,int b,int c){id=a;w=b;dep=c;};\n    bool operator >(const node &rhs)const{\n    \treturn rhs.w==w?rhs.dep<dep:rhs.w<w;\n    }\n};\npriority_queue<node,vector<node>,greater<node> > q;\nvoid dfs(int x,int d){ // \u7edf\u8ba1\u7b54\u6848 \n    if(x<=n)ans+=val[x]*d,mxd=max(mxd,d);\n    for(int p=v[x];p;p=e[p].next)dfs(e[p].to,d+1);\n}\nint read(){\n    int x=0,f=1; char ch=getchar();\n    while(ch<'0' || ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0' && ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n#undef int\nint main()\n{\n    #define int long long\n    n=read(); k=read();\n    for(int i=1;i<=n;i++)\n    \tq.push(node(i,val[i]=read(),0));\n    while((n-1)%(k-1)!=0)q.push(node(++n,0,0));\n    // \u63d2\u5165\u82e5\u5e72\u865a\u62df\u7ed3\u70b9\n    int id=n,n1=n;\n    while(n1-=k-1,n1>=1){\n    \tint th=0,mx=0; ++id; // \u65b0\u5efa\u7f16\u53f7\u4e3a id \u7684\u70b9 th \n        for(int i=1;i<=k;i++,q.pop()){ // \u53d6\u51fa k \u4e2a\u6700\u4f18\u5143\u7d20\n\t    node nw=q.top(); th+=nw.w;\n\t    mx=max(mx,nw.dep); add(id,nw.id);\n\t} q.push(node(id,th,mx+1)); // \u63d2\u5165\u8be5\u7ed3\u70b9 \n    } dfs(id,0); // \u7edf\u8ba1\u7b54\u6848 \n    printf(\"%lld\\n%lld\",ans,mxd);\n    return 0;\n}\n```\n",
        "postTime": 1574778069,
        "uid": 61072,
        "name": "lindongli2004",
        "ccfLevel": 0,
        "title": "[NOI2015]\u8377\u9a6c\u53f2\u8bd7 - Huffman\u6811"
    },
    {
        "content": "/\\*\n\u521a\u521a\u9898\u89e3\u53d1\u9519\u4e86\uff0c\u9ebb\u70e6\u7ba1\u7406\u5458\u4fee\u6539\u4e00\u4e0b\u3002\u3002\u3002\u3002\u3002\n\n\u4f9d\u65e7\u6ca1\u7528\u961f\u5217 \u5806\u6392\u5e8f\n\n\\*/\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#define ll long long\nusing namespace std;\nint k;\nconst int M=200001;\nstruct node{\n    ll id,data;\n    ll lenth;\n}temp,s[M],x;\nint r,l;\nll n,all;\nll asize,size,w[100001],fa[200001][10];\nbool cmp(node a,node b)\n{ return a.data<b.data||(a.data==b.data&&a.lenth<b.lenth);}\nvoid swapx(int i, int j){\n    node tmp;\n    tmp=s[i]; s[i]=s[j]; s[j]=tmp;\n}\n/*void out (){\n    for(int i=0;i<=r;i++){\n        printf(\"%lld \",s[i].data);\n    }\n    cout<<endl;\n```\n}\\*/\u7528\u4e8e\u8c03\u8bd5\n    \n```cpp\nvoid insert(node x){    //\u5c06\u6570x\u63d2\u5165\u5806\u4e2d\n    r++;s[r]=x; l=r;\n    while ((l>1)&&(cmp(s[l],s[l>>1]))){\n        swapx(l,l>>1); l=l>>1;\n    }\n}\nvoid change(node x){  //\u8c03\u6574\u5c0f\u6839\u5806\n    int rc,lc;\n    node min=x; lc=2*x.id; rc=2*x.id+1;\n    if ((lc<=r)&&(cmp(s[lc],s[min.id]))) min.id=lc;\n    if ((rc<=r)&&(cmp(s[rc],s[min.id]))) min.id=rc;\n    if (min.id!=x.id){\n        swapx(x.id,min.id); change(min);\n    }\n}\nnode get(){    // \u53d6\u5806\u9876\u5143\u7d20\u5e76\u4ece\u5806\u4e2d\u5220\u9664\n    node res,a1;\n    a1.data=1,a1.id=1,a1.lenth=1;\n    res=s[1];  s[1]=s[r]; r--;\n    if (r>1) change(a1);\n    return res;\n}\nvoid init(){\n    cin>>n>>k;\n    temp.lenth=0;\n    for(int i=1;i<=n;i++){\n        cin>>w[i];\n        fa[i][k]=1;\n        temp.id=i;\n        temp.data=w[i];\n        l++;\n        insert(temp);\n        //out();\n    }\n    if(k!=2){\n        while(n%(k-1)!=1){\n            n++;\n            temp.id=n;\n            temp.data=0;\n            fa[n][k]=1;\n            insert(temp);\n        }\n    }\n    all=n+1;\n    while(r){\n        temp.data=0;\n        temp.lenth=0;\n        temp.id=all++;\n        for(int i=0;i<k;i++){\n            temp.lenth=max((s[1].lenth)+1,temp.lenth);\n            temp.data+=(s[1]).data;\n            fa[temp.id][i]=(s[1]).id;\n            get();\n        }\n        if(!r)break;\n        fa[temp.id][k]=1;\n        insert(temp);\n    }\n}\nvoid dfs(ll x){\n    if(x<=n)return;\n    for(int i=0;i<k;i++){\n        fa[fa[x][i]][k]+=fa[x][k];\n        dfs(fa[x][i]);\n    }\n}\nint main(){\n    //freopen(\"P2168.in\",\"r\",stdin);\n    //freopen(\"P2168.in\",\"w\",stdout);\n    init();\n    dfs(all-1);\n    for(int i=1;i<=n;i++){\n        asize+=fa[i][k]*w[i];\n        size=max(size,fa[i][k]);\n    }\n    cout<<asize<<endl<<size;\n    //fclose(stdin);\n    //fclose(stdout);\n}\n```",
        "postTime": 1488516743,
        "uid": 18063,
        "name": "XiaQiang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2168 \u3010\u8377\u9a6c\u53f2\u8bd7\u3011"
    },
    {
        "content": "# <font color=red>\u7ebf\u6027\u6784\u5efa\u4e00\u9897\u54c8\u592b\u66fc\u6811\u8bb2\u89e3</font>\n\u54c8\u592b\u66fc\u6811\u90fd\u6700\u4f18\u7684\u6784\u5efa\u65b9\u6cd5\u5e94\u8be5\u662f\u7ebf\u6027\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u9053\u9898\u6570\u636e\u8f83\u6c34\uff0cnlogn\u4e5f\u662f\u80fd\u901a\u8fc7\u6b64\u9898\u7684\uff0c\u867d\u7136\u590d\u6742\u5ea6\u4e0d\u662f\u6700\u4f18\u7684\n\u5b9e\u9645\u4e0a\uff0c\u4e0d\u9700\u8981\u5806\uff0c\u53cc\u961f\u5217\u5c31\u53ef\u4ee5\u5b8c\u6210\u54c8\u592b\u66fc\u6811\u7684\u6784\u5efa\n\u4e0b\u9762\u662f\u8bc1\u660e:\uff08\u66f4\u52a0\u8be6\u7ec6\u7684\uff0c\u5168\u9762\u7684\uff0c\u8bf7\u770b[<font color=green>\u6211\u7684\u535a\u5ba2</font>](https://thewalker88.com/?p=173)\uff09\nLeeuwen\u57281976\u5e74\u7684\u300aOn the construction of Huffman tree\u300b\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd**\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6**\u7684\u53cc\u961f\u5217\u6784\u5efa\u54c8\u592b\u66fc\u6811\u7684\u65b9\u6cd5\n\u6211\u4eec\u4ee4in\u4e3a\u521a\u5f00\u59cb\u6309\u7167\u9891\u7387\u5347\u5e8f\u7ed9\u51fa\u7684\u8282\u70b9\uff0cQ\u4e3a\u8f85\u52a9\u7684\u961f\u5217\n\u6211\u4eec\u5047\u5b9a\u5df2\u7ecf\u5b8c\u6210\u4e86k-1\u6b65\uff0c\u73b0\u5728\u8981\u8fdb\u884c\u7b2ck\u6b65\uff0c\u6211\u4eec\u8981\u8003\u8651\u7684\u662f\u7b2ck+1\u6b65\u65f6\u662f\u5426\u4ecd\u65e7\u5408\u6cd5\n#### Case I\n![](https://thewalker88.com/wp-content/uploads/2018/05/case1-300x130.png)\n\u5728w(i)+w(i+1)\uff0cw(i)+q(1),q(1)+q(2)\u4e2d\uff0cw(i)+w(i+1)\u6700\u5c0f\uff0c\u628a\u5b83\u4eec\u7684\u548c\u52a0\u5165Q\u7684\u5c3e\u90e8\n\u73b0\u5728\u770b\u7b2ck+1\u6b65\n\u7b2ck+1\u6b65\u4e2d\uff0c\u6211\u4eec\u4ecew(i+2)+w(i+3),w(i+2)+q(1)\uff0cq(1)+q(2)\u4e2d\u9009\u4e00\u4e2a\u6700\u5c0f\u7684\u52a0\u5165Q\uff0c\u6ce8\u610f\u5230\u7531\u4e8e\u4e09\u4e2a\u7684\u5927\u5c0f\u5173\u7cfb\u4e0d\u786e\u5b9a\uff0c\u6211\u4eec\u5fc5\u987b\u80fd\u591f\u786e\u4fddw(i)+w(i+1)\u5c0f\u4e8e\u4ed6\u4eec\u4e09\u4e2a\n\u9996\u5148\uff0cin\u662f\u5355\u589e\u7684\uff0cw(i)+w(i+1)<=w(i+2)+w(i+3)\n\u5176\u6b21\uff0cw(i)+w(i+1)<=w(i)+q(1)<=w(i+2)+q(1)  (in\u5355\u8c03\u9012\u589e)\n\u6700\u540e\uff0cw(i)+w(i+1)<=q(1)+q(2)\uff0c\u8bc1\u6bd5\n#### Case II\n![](https://thewalker88.com/wp-content/uploads/2018/05/case2-256x300.png)\n\u5728w(i)+w(i+1)\uff0cw(i)+q(1),q(1)+q(2)\u4e2d\uff0cw(i)+q(1)\u6700\u5c0f\uff0c\u628a\u5b83\u4eec\u7684\u548c\u52a0\u5165Q\u7684\u5c3e\u90e8\n\u73b0\u5728\u770b\u7b2ck+1\u6b65\n\u7b2ck+1\u6b65\u4e2d\uff0c\u6211\u4eec\u4ecew(i+1)+w(i+2)\uff0cw(i+1)+q(2),q(2)+q(3)\u4e2d\u9009\u4e00\u4e2a\u6700\u5c0f\u7684\u52a0\u5165Q\uff0c\u6ce8\u610f\u5230\u7531\u4e8e\u4e09\u4e2a\u7684\u5927\u5c0f\u5173\u7cfb\u4e0d\u786e\u5b9a\uff0c\u6211\u4eec\u5fc5\u987b\u80fd\u591f\u786e\u4fddw(i)+q(1)\u5c0f\u4e8e\u4ed6\u4eec\u4e09\u4e2a\n\u9996\u5148\uff0c\u7531\u4e8e\u5728w(i)+w(i+1)\uff0cw(i)+q(1),q(1)+q(2)\u4e2d\uff0cw(i)+q(1)\u6700\u5c0f\uff0c\u6240\u4ee5q(1)<=w(i+1)\uff0c\u53c8\u56e0\u4e3ain\u5355\u589e\uff0c\u6240\u4ee5w(i)<=w(i+1)\uff0c\u6240\u4ee5w(i)+q(i)<=w(i+1)+w(i+1)<=w(i+1)+w(i+2)\n\u5176\u6b21\uff0cin\u548cQ\u90fd\u662f\u5355\u589e\u7684\uff0c\u6240\u4ee5w(i)+q(1)<=w(i+1)+q(1)<=w(i+1)+q(2)\n\u6700\u540e\uff0cw(i)+q(1)<=q(1)+q(2)<=q(2)+q(3)\n#### Case III\n![](https://thewalker88.com/wp-content/uploads/2018/05/case3-300x138.png)\n\u5728w(i)+w(i+1)\uff0cw(i)+q(1),q(1)+q(2)\u4e2d\uff0cq(1)+q(2)\u6700\u5c0f\uff0c\u628a\u5b83\u4eec\u7684\u548c\u52a0\u5165Q\u7684\u5c3e\u90e8\n\u7b2ck+1\u6b65\u4e2d\uff0c\u6211\u4eec\u4ecew(i)+w(i+1)\uff0cw(i)+q(3),q(3)+q(4)\u4e2d\u9009\u4e00\u4e2a\u6700\u5c0f\u7684\u52a0\u5165Q\uff0c\u6ce8\u610f\u5230\u7531\u4e8e\u4e09\u4e2a\u7684\u5927\u5c0f\u5173\u7cfb\u4e0d\u786e\u5b9a\uff0c\u6211\u4eec\u5fc5\u987b\u80fd\u591f\u786e\u4fddq(1)+q(2)\u5c0f\u4e8e\u4ed6\u4eec\u4e09\u4e2a\n\u9996\u5148\uff0c\u7531\u4e8eQ\u662f\u5355\u589e\u7684\uff0c\u6240\u4ee5q(1)+q(2)<=q(3)+q(4)\n\u5176\u6b21\uff0c\u7531\u4e8e\u5728w(i)+w(i+1)\uff0cw(i)+q(1),q(1)+q(2)\u4e2d\uff0cq(1)+q(2)\u6700\u5c0f,\u6240\u4ee5q(1)+q(2)<=w(i)+w(i+1)\n\u6700\u540e\uff0cq(1)+q(2)<=w(i)+q(1)<=w(i)+q(3)\n\u81f3\u6b64\uff0c\u8bc1\u6bd5\uff0c\u53ea\u9700\u4e24\u4e2a\u961f\u5217\u5373\u53ef\u5b8c\u6210\u54c8\u592b\u66fc\u6811\u7684\u6784\u5efa\n\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 100010\n#define MAXM 300010\n#define ll long long\n#define inf (0x7fffffff)\n#define base 1048575\n\nusing namespace std;\n#define fastcall __attribute__((optimize(\"-O3\")))\n#define IL __inline__ __attribute__((always_inline))\nfastcall IL char nc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline ll read(){\n    ll x=0,f=1;char ch=nc();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=nc();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=nc();}\n    return x*f;\n}\nstruct node{\n    ll w,h;\n};\nnode in[MAXN],Q[MAXN],b[MAXN];\nint head_in,head_Q,tail_Q;\nint cnt[base+1];\nint n;\nint k;\nint ex_point;\nll sum;\nint num;\nll temp,maxh;\nfastcall IL void RadixSort(){\n    for(register ll i=1;i<=n;++i) ++cnt[in[i].w&base];\n    for(register ll i=1;i<=base;++i) cnt[i]+=cnt[i-1];\n    for(register ll i=n;i;--i) b[cnt[in[i].w&base]--]=in[i];\n    memset(cnt,0,sizeof(cnt));\n    for(register ll i=1;i<=n;++i) ++cnt[(b[i].w>>20)&base];\n    for(register ll i=1;i<=base;++i) cnt[i]+=cnt[i-1];\n    for(register ll i=n;i;--i) in[cnt[(b[i].w>>20)&base]--]=b[i];\n}\n\nfastcall int main(){\n    n=read();k=read();\n    ex_point=(n-1)%(k-1);\n    if(ex_point)ex_point=(k-1)-ex_point;\n    for(register int i=1;i<=n;++i){\n        in[i].w=read();in[i].h=1;\n        Q[i].w=-1;\n    }\n    for(register int i=1;i<=ex_point;++i)in[++n].w=0,in[n].h=1,Q[n].w=-1;//\u8865\u5145\u8282\u70b9\n    RadixSort();//\u4f7fin\u6709\u5e8f\n    in[n+1].w=Q[n+1].w=-1;\n    num=(n-1)/(k-1);\n    head_in=1;head_Q=1;tail_Q=0;\n    for(register int i=1;i<=num;++i){\n        temp=maxh=0;\n        for(register ll j=1;j<=k;++j){\n            if((((in[head_in].w<Q[head_Q].w)||(in[head_in].w==Q[head_Q].w&&in[head_in].h<=Q[head_Q].h))&&in[head_in].w!=-1)||Q[head_Q].w==-1){\n                sum+=in[head_in].w;\n                maxh=max(maxh,in[head_in].h);\n                temp+=in[head_in++].w;\n            }\n            else {\n                sum+=Q[head_Q].w;\n                maxh=max(maxh,Q[head_Q].h);\n                temp+=Q[head_Q++].w;\n            }\n        }\n        Q[++tail_Q].w=temp;\n        Q[tail_Q].h=maxh+1;//\u5c06\u53d6\u51fa\u6765\u7684\u91cd\u65b0\u5165\u961f\n    }\n    printf(\"%lld\\n%lld\\n\",sum,Q[tail_Q].h-1);\n}\n```",
        "postTime": 1527564108,
        "uid": 55679,
        "name": "\u971e\u5ba288",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2168 \u3010[NOI2015]\u8377\u9a6c\u53f2\u8bd7\u3011"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u4e0b\u4f18\u5148\u961f\u5217\u7684Huffman\u6811\n\nhttp://blog.csdn.net/benoble\\_/article/details/59703062\n",
        "postTime": 1488687665,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2168 \u3010\u8377\u9a6c\u53f2\u8bd7\u3011"
    }
]