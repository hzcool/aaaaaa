[
    {
        "content": "\u522b\u7684\u9898\u89e3\u7684\u505a\u6cd5\u90fd\u597d\u6b63\u7ecf\u554a\uff0c\n\n\u6211\u6765\u4e00\u53d1 random_shuffle \u7684\u9898\u89e3\u3002\n\n---\n\n\u9898\u610f\uff1a\u4e00\u4e2a\u5e73\u9762\u4e0a\u6709\u597d\u591a\u70b9\uff0c\u5206\u522b\u4e3a $G$ \u548c $H$ \uff0c\u6c42\u4e0d\u5305\u542b $G$ \u4e14\u5305\u542b $H$  \u6700\u591a\u7684\u5b50\u77e9\u9635\uff0c\u5e76\u8f93\u51fa\u5305\u542b\u591a\u5c11\u4e2a $H$ \u548c\u6240\u6709\u60c5\u51b5\u4e0b\u6700\u5c11\u7684\u9762\u79ef\u3002\n\n---\n\n\u6211\u4e00\u770b\u5230 $n \\leq 500 $ \u5c31\u60f3\u5230\u4e86\u90a3\u4e2a\u795e\u5947\u7684 random_shuffle \u3002\n\n\u5982\u679c\u4f60\u4e0d\u77e5\u9053 random_shuffle \uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662fc++\u5185\u7f6e\u7684\u968f\u673a\u6253\u4e71\u4e00\u4e2a\u6570\u7ec4\u7684\u51fd\u6570\u3002\n \n\n\u90a3\u4e48\u76f4\u63a5\u8003\u8651\u7b54\u6848\u57fa\u4e8e\u6392\u5217\u987a\u5e8f\u7684\u5047\u8d2a\u5fc3\u3002\n\n\u6211\u4eec\u76f4\u63a5\u6309\u7167\u6570\u7ec4\u91cc\u9762\u7684\u6392\u5217\u987a\u5e8f\u52a0\u5165\u70b9\uff0c\u82e5\u8fd9\u4e2a\u70b9\u52a0\u5165\u4e86\u540e\u5b50\u77e9\u9635\u4e2d\u5305\u542b\u4e86\u81f3\u5c11\u4e00\u4e2a $G$ \uff0c\u90a3\u4e48\u5c31\u4e0d\u52a0\u5165\u8fd9\u4e2a\u70b9\uff0c\u5426\u5219\u8d2a\u5fc3\u52a0\u5165\u3002\n\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6548\u679c\uff1a\u5927\u6982\u5e73\u5747\u51e0\u5341\u6b21\u968f\u673a\u4e4b\u540e\u5c31\u53ef\u4ee5\u641e\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u7136\u800c\u5982\u679c\u6309\u71671s\u6765\u7b97\u6700\u591a\u53ef\u4ee5\u8dd1\u5927\u7ea6 $1$W \u6b21\u5de6\u53f3\uff0c\u663e\u7136\u662f\u968f\u968f\u4fbf\u4fbf\u5c31 $AC$ \u6389\u4e86\u3002\n\n\u7528\u4e8c\u4f4d\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u4e00\u6b21\u968f\u673a\u7684\u590d\u6742\u5ea6\u662f $O(n\\times \\log ^2(n))$ \u3002 ($n \\leq 500 $ )\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int R()\n{\n\tchar c;int res,sign=1;\n\twhile((c=getchar())>'9'||c<'0') if(c=='-') sign=-1;res=c-'0';\n\twhile((c=getchar())>='0'&&c<='9') res=res*10+c-'0';\n\treturn res*sign;\n}\ninline int min(int a,int b){return a<b?a:b;}\ninline int max(int a,int b){return a>b?a:b;}\nconst int Maxn=505;\nstruct point \n{\n\tint x,y;\n}a[Maxn],b[Maxn];\n#define lowbit(x) (x&-x)\nint n,ans=1,M=0,top1,top2,V[Maxn*2][Maxn*2];\nvoid up(int x,int y)\n{\n\tfor(int i=x;i<=1001;i+=lowbit(i))\n\tfor(int j=y;j<=1001;j+=lowbit(j))\n\tV[i][j]++;\n}\ninline int sum(int x,int y)\n{\n\tint res=0;\n\tfor(int i=x;i>0;i-=lowbit(i))\n\tfor(int j=y;j>0;j-=lowbit(j))\n\tres+=V[i][j];\n\treturn res;\n}\ninline void work()\n{\n\trandom_shuffle(a+1,a+top1+1);\n\tint Mix=a[1].x,Max=a[1].x,Miy=a[1].y,May=a[1].y;\n\tint p1,p2,p3,p4,res=1;\n\tfor(int i=2;i<=top1;i++)\n\t{\n\t\tp1=Mix;p2=Max;p3=Miy;p4=May;\n\t\tMix=min(Mix,a[i].x);Max=max(Max,a[i].x);\n\t\tMiy=min(Miy,a[i].y);May=max(May,a[i].y);\n\t\tint p=sum(Max,May);\n\t\tp+=sum(Mix-1,Miy-1)-sum(Mix-1,May)-sum(Max,Miy-1);\n\t\tif(p){res--;Mix=p1;Max=p2;Miy=p3;May=p4;}\n\t\tres++;\n\t}\n\tif(res==ans)\n\t{\n\t\tM=min(M,(Max-Mix)*(May-Miy));\n\t}\n\telse if(res>ans)\n\t{\n\t\tans=res;\n\t\tM=(Max-Mix)*(May-Miy);\n\t}\n}\nint main()\n{\n\tn=R();int x,y;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tx=R()+1;y=R()+1;\n\t\tchar c;\n\t\twhile((c=getchar())!='H'&&c!='G');\n\t\tif(c=='H') \n\t\t{\n\t\t\ta[++top1].x=x;\n\t\t\ta[  top1].y=y;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tb[++top2].x=x;\n\t\t\tb[  top2].y=y;\n\t\t\tup(x,y);\n\t\t}\n\t}\n\tfor(int i=1;i<=1000;i++)work();\n\tprintf(\"%d\\n%d\\n\",ans,M);\n}\n```",
        "postTime": 1603087612,
        "uid": 220857,
        "name": "\u7d20\u8d28\u73a9\u5bb6\u5b591\u8d85",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3117 \u3010[USACO15JAN]Cow Rectangles G\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u8f83\u5c0f\uff0c$n$ \u53ea\u6709 500\uff0c\u4eff\u4f5b\u5c31\u5728\u6697\u793a\u6211\u4eec\u7528 $O(n^3)$ \u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u6765\u901a\u8fc7\u8fd9\u9053\u9898\u3002\u4f46\u7531\u4e8e $x, y$ \u7684\u8303\u56f4\u6bd4 $n$ \u8981\u5927\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u8981\u5148\u5c06\u6bcf\u4e2a\u70b9\u7684\u503c\u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u679a\u4e3e\u4e0a\u4e0b\u4e24\u884c $x1,x2$\u3002\u7136\u540e\u6211\u4eec\u8003\u8651\u5bf9\u4e2d\u95f4\u7684\u90e8\u5206\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u5bf9\u4e8e\u4e2d\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u4e3a\u597d\u51e0\u4e2a\u90e8\u5206\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u90e8\u5206\u90fd\u4e0d\u542b\u6709 G \u725b\u3002\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u5217 $y$\uff08\u8fd9\u4e00\u5217\u4e0a\u5fc5\u987b\u6709\u4e00\u4e2a H \u725b\uff0c\u5426\u5219\u6211\u4eec\u53ef\u4ee5\u5c06 $y$ \u52a0\u4e0a 1 \u4f7f\u5f97\u9762\u79ef\u66f4\u5c0f\uff09\uff0c\u8fdb\u884c\u5c3a\u53d6\uff0c\u76f4\u5230\u626b\u63cf\u5230\u4e86\u4e00\u4e2a\u6709 G \u725b\u7684\u5217\u4e3a\u6b62\u3002\u5728\u5c3a\u53d6\u7684\u65f6\u5019\uff0c\u6ce8\u610f\u66f4\u65b0\u7b54\u6848\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3)$\u3002\u5efa\u8bae\u5927\u5bb6\u81ea\u5df1\u5148\u5199\u4e00\u904d\uff0c\u518d\u53bb\u770b\u4ee3\u7801\u3002\u8fd9\u4e2a\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u4f46\u5bf9\u4e8e\u57fa\u7840\u76f8\u5bf9\u8f83\u5dee\u7684\u540c\u5b66\u800c\u8a00\u5229\u4e8e\u7406\u89e3\uff0c\u5e76\u4e14\u4e5f\u80fd\u8fc7\u4e86\u6b64\u9898\u3002\u51b5\u4e14\uff0c\u5927\u591a\u6570\u60c5\u51b5\u8dd1\u4e0d\u6ee1\u3002\u4e3a\u4e86\u65b9\u4fbf\u7edf\u8ba1\u77e9\u9635\u4e2d\u725b\u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u5f00\u4e8c\u7ef4\u6570\u7ec4\u8bb0\u4e00\u4e0b\u524d\u7f00\u548c\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntemplate <class T>\ninline void Rd(T &x) {\n    x = 0;\n    bool f = 0;\n    char ch = getchar();\n    while (!isdigit(ch)) f |= ch == '-', ch = getchar();\n    while (isdigit(ch)) x = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n    if (f)\n        x = -x;\n}\nint n;\nstruct P {\n    int x, y;\n    bool p;\n} a[505];\nint b[505], c[505], bm, cm, s[505][505][2];\nint calc(int x, int y, int _x, int _y, bool p) {\n    return s[_x][_y][p] - s[_x][y - 1][p] - s[x - 1][_y][p] + s[x - 1][y - 1][p];\n}\nvoid Chk(int &ans, int &area, int x, int y) {\n    if (x > ans)\n        ans = x, area = y;\n    else if (ans == x && y < area)\n        area = y;\n}\nint main() {\n    Rd(n);\n    for (int i = 1; i <= n; ++i) {\n        char op[5];\n        scanf(\"%d%d%s\", &a[i].x, &a[i].y, op);\n        if (op[0] == 'G')\n            a[i].p = 0;\n        else\n            a[i].p = 1;\n        b[++bm] = a[i].x, c[++cm] = a[i].y;\n    }\n    sort(b + 1, b + bm + 1);\n    sort(c + 1, c + cm + 1);\n    bm = unique(b + 1, b + bm + 1) - b - 1;\n    cm = unique(c + 1, c + cm + 1) - c - 1;\n    for (int i = 1; i <= n; ++i) a[i].x = lower_bound(b + 1, b + bm + 1, a[i].x) - b;\n    for (int i = 1; i <= n; ++i) a[i].y = lower_bound(c + 1, c + cm + 1, a[i].y) - c;\n    for (int i = 1; i <= n; ++i) ++s[a[i].x][a[i].y][a[i].p];\n    for (int i = 1; i <= bm; ++i)\n        for (int j = 1; j <= cm; ++j)\n            for (int p = 0; p <= 1; ++p) s[i][j][p] += s[i - 1][j][p] + s[i][j - 1][p] - s[i - 1][j - 1][p];\n    int area = 1e9, ans = 0;\n    for (int x1 = 1; x1 <= bm; ++x1)\n        for (int x2 = x1; x2 <= bm; ++x2) {\n            int p = 0;\n            for (int y = 1; y <= cm; ++y) {\n                if (calc(x1, y, x2, y, 0) == 1) {\n                    p = y;\n                    continue;\n                }\n                if (calc(x1, y, x2, y, 1) == 0) continue;\n                if (p >= y)\n                    Chk(ans, area, calc(x1, y, x2, p, 1), (b[x2] - b[x1]) * (c[p] - c[y]));\n                while (p + 1 <= cm && calc(x1, y, x2, p + 1, 0) == 0)\n                    ++p, Chk(ans, area, calc(x1, y, x2, p, 1), (b[x2] - b[x1]) * (c[p] - c[y]));\n            }\n        }\n    printf(\"%d\\n%d\", ans, area);\n}\n```",
        "postTime": 1640433399,
        "uid": 162196,
        "name": "\u4f1f\u5927\u7684\u738b\u592b\u5b50",
        "ccfLevel": 6,
        "title": "P3117 [USACO15JAN]Cow Rectangles G\u9898\u89e3"
    },
    {
        "content": "######\u9996\u5148\uff0c\u8fd9\u9053\u9898\u6d89\u53ca\u5230\u4e86\u6700\u5927\u5b50\u77e9\u9635\u7b49\u4e00\u7cfb\u5217\u95ee\u9898\n\n######\u8fd9\u91cc\u63a8\u8350\u7531\u56fd\u5bb6\u96c6\u8bad\u961f\u6210\u5458\u738b\u77e5\u6606\u64b0\u5199\u7684\u8bba\u6587:http://blog.csdn.net/twtsa/article/details/8120269\n\n\u8fd9\u7bc7\u8bba\u6587\u4e2d\u9996\u5148\u63d0\u51fa\u4e86\u6781\u5927\u5b50\u77e9\u9635\u7684\u6982\u5ff5\uff0c\u4e25\u8c28\u8bc1\u660e\u4e86\u6700\u5927\u5b50\u77e9\u9635\u4e00\u5b9a\u5728\u6781\u5927\u5b50\u77e9\u9635\u4e2d\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u8981\u679a\u4e3e\u51fa\u6240\u6709\u6781\u5927\u5b50\u77e9\u9635\u5373\u53ef\u3002\n\n\n\u6587\u4e2d\u4ecb\u7ecd\u4e86\u4e24\u79cd\u7b97\u6cd5\uff1a1\u3001O(\u70b9\u7684\u4e2a\u6570^2)       2\u3001O(n\\*m)\n\n######\u5bf9\u4e8e\u672c\u9898\u800c\u8a00\uff0c\u660e\u663e\u9009\u7528\u7b2c\u4e00\u79cd\u7b97\u6cd5\n\n\n\u7531\u4e8e\u8fd9\u91cc\u7684\u6ce8\u91ca\u4e2d\u5199\u4e0d\u4e86\u4e2d\u6587\uff0c\u6211\u628a\u6574\u4e2a\u5b9e\u73b0\u4ee3\u7801\u7684\u6280\u5de7\u603b\u7ed3\u5148\u5199\u5728\u8fd9\u91cc\uff1a\n\n1\u3001\u9996\u5148\u8981\u7406\u6e05\u601d\u8def\uff0c\u5206\u4e3a4\u4e2d\u60c5\u51b5\u8ba8\u8bba\n\nA\u5faa\u73af\u89e3\u51b3 \u6240\u6709\u70b9\u4e4b\u95f4\u7684\u6781\u5927\u5b50\u77e9\u9635  \u548c  \u53f3\u8fb9\u754c\u4e3a\u6574\u4e2a\u77e9\u5f62\u53f3\u8fb9\u754c\u7684\u60c5\u5f62\n\nB\u5faa\u73af\u89e3\u51b3\u5de6\u8fb9\u754c\u4e3a\u6574\u4e2a\u77e9\u5f62\u5de6\u8fb9\u754c\u7684\u60c5\u5f62\n\nC\u5faa\u73af\u89e3\u51b3\u5de6\u53f3\u8fb9\u754c\u5747\u4e3a\u77e9\u5f62\u8fb9\u754c\u7684\u60c5\u5f62\n\n\n2\u3001\u4e3a\u4e86\u5728O(1)\u65f6\u95f4\u5185\u7b97\u51fa\u4e00\u5b9a\u533a\u57df\u5185h\u70b9\u7684\u4e2a\u6570\uff0c\u5fc5\u7136\u8981\u9884\u5904\u7406\n\n\u6211\u4f7f\u7528\u7684\u662ff[i,j]\u8868\u793a\u77e9\u5f62[1~i][1~j]\u4e2dh\u70b9\u7684\u4e2a\u6570\n\n\n3\u3001\u5728\u8fdb\u884c\u4e0a\u4e0b\u754c\u5224\u65ad\u65f6=\u53f7\u4e0d\u80fd\u4e22\n\n\n4\u3001string.size()\u8fd4\u56de\u7684\u662funsigned int\uff0c\u6ce8\u610f\u5f3a\u5236\u8f6c\u6362\n\n\n\u9644\u4e0a\u4ee3\u7801\uff08\u68c0\u7d22\u6ca1\u6709\u4f7f\u75282\u5206\uff0c\u53ef\u4ee5\u9009\u62e9\u75282\u5206\u5b9e\u73b0\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\nstruct cow\n{\n    int x,y;\n    cow(int a,int b)\n    {\n        x=a;y=b;\n    } \n};\n\nvector<cow> g,h;\nint n,km,kn,f[1005][1005];\nchar data[1005][1005];\n\nbool cmp(cow a,cow b)\n{\n    if(a.x!=b.x) return a.x<b.x;\n    else return a.y<b.y;\n}\n\nbool cmpx(cow a,cow b)\n{\n    if(a.y!=b.y) return a.y<b.y;\n    else return a.x<b.x;\n}\n\nint calarea(int i,int j,int maxy,int miny)\n{\n    if(maxy<=miny) return 0;\n    int m1=0,m2=0,m3=1<<27,m4=1<<27;\n    for (int k=0;k<h.size();k++) \n    {\n        if(h[k].x<=j && h[k].x>=i && h[k].y>=miny && h[k].y<=maxy)\n        {\n            m1=max(m1,h[k].x);\n            m3=min(m3,h[k].x);\n            m2=max(m2,h[k].y);\n            m4=min(m4,h[k].y);\n        }\n    }\n    return (m1-m3)*(m2-m4);\n}\n\nint main()\n{\n    cin >> n;\n    g.push_back(cow(0,0));\n    \n    for(int i=1;i<=n;i++)\n    {\n        int t1,t2;char r;\n        cin >> t1 >> t2 >> r;\n        data[t1+1][t2+1]=r;  //\u8fd9\u91cc\u7684+1\u5904\u7406\u662f\u4e3a\u4e86\u4f7f\u5c060\u884c0\u5217\u7a7a\u51fa\uff0c\u4f5c\u4e3a\u7f13\u51b2\u533a \n        km=max(t1+1,km);\n        kn=max(t2+1,kn);\n        if(r=='H') \n            h.push_back(cow(t1+1,t2+1));\n        else\n        {\n            g.push_back(cow(t1+1,t2+1));\n        }            \n    }\n    \n    g.push_back(cow(km+1,0));\n    sort(g.begin(),g.end(),cmp);\n    sort(h.begin(),h.end(),cmp);\n    \n    memset(f,0,sizeof(f));  //\u8fd9\u91cc\u7684\u9884\u5904\u7406\u8981\u7559\u5fc3\uff0c\u53ef\u4ee5\u5728O(1)\u65f6\u95f4\u5185\u7b97\u51fa\u533a\u57df\u5185\u7684\u5408\u683c\u70b9\u7684\u4e2a\u6570 \n    for(int i=1;i<=km;i++)\n        for(int j=1;j<=kn;j++)\n        {\n            f[i][j]=f[i-1][j]+f[i][j-1]-f[i-1][j-1];\n            if(data[i][j]=='H') f[i][j]++;            \n        }\n    \n    int maxy,miny;\n    int res=-1,area=-1;\n    for(int i=1;i<g.size();i++)  //\u8fd9\u91cc\u8003\u8651\u7684\u60c5\u51b5\u662f\u6240\u6709\u70b9\u4e4b\u95f4\u7684\u6781\u5927\u5b50\u77e9\u9635  \u548c  \u53f3\u8fb9\u754c\u4e3a\u6574\u4e2a\u77e9\u5f62\u53f3\u8fb9\u754c\u7684\u60c5\u5f62 \n    {\n        miny=0;maxy=kn+1;\n        for(int j=i+1;j<g.size();j++)\n        {\n            if(g[j].x-g[i].x<2)\n            {\n                if(g[j].y<=g[i].y && miny < g[j].y) miny=g[j].y;\n                if(g[j].y>=g[i].y && maxy > g[j].y) maxy=g[j].y;\n                continue;\n            }\n            int cnt=f[g[j].x-1][maxy-1]-f[g[j].x-1][miny]-f[g[i].x][maxy-1]+f[g[i].x][miny];\n            int mina=calarea(g[i].x+1,g[j].x-1,maxy-1,miny+1);\n            if(cnt>res || (cnt==res && mina<area))\n            {\n                res=cnt;\n                area=mina;\n            }\n            \n            if(g[j].y<=g[i].y && miny < g[j].y) miny=g[j].y;  //\u8fd9\u91cc\u7684\u7b49\u4e8e\u5f88\u91cd\u8981\uff0c\u6ce8\u610f\u7ec6\u8282\uff01\uff01\uff01 \n            if(g[j].y>=g[i].y && maxy > g[j].y) maxy=g[j].y;  //\u7b49\u53f7\u8981\u5355\u72ec\u8003\u8651\uff01\uff01\uff01 \n        }\n    }\n    \n    for(int i=int(g.size()-2);i>=1;i--)  //\u8fd9\u91cc\u8981\u8003\u8651\u5de6\u8fb9\u754c\u4e3a\u6574\u4e2a\u77e9\u5f62\u5de6\u8fb9\u754c\u7684\u60c5\u5f62 \n    {                                    //\u518d\u6b21\u6ce8\u610f\u8fd9\u91cc\u7684\u5f3a\u5236\u8f6c\u6362\uff01\uff01\uff01 \n        miny=0;maxy=kn+1;\n        for(int j=i-1;j>=0;j--)\n        {\n            if(g[j].y<=g[i].y && miny < g[j].y) miny=g[j].y;\n            if(g[j].y>=g[i].y && maxy > g[j].y) maxy=g[j].y;\n                        \n            if(j!=0) continue;\n            \n            int cnt=f[g[i].x-1][maxy-1]-f[g[i].x-1][miny]-f[g[j].x][maxy-1]+f[g[j].x][miny];\n            int mina=calarea(g[j].x+1,g[i].x-1,maxy-1,miny+1);\n            if(cnt>res || (cnt==res && mina<area))\n            {\n                res=cnt;\n                area=mina;\n            }\n        }\n    }\n    \n    g.push_back(cow(0,kn+1));  //\u8fd9\u91cc\u8003\u8651\u7684\u662f\u5de6\u53f3\u8fb9\u754c\u5747\u4e3a\u77e9\u5f62\u8fb9\u754c\u7684\u60c5\u5f62 \n    sort(g.begin(),g.end(),cmpx);\n    for(int i=1;i<g.size();i++)\n    {\n        if(g[i].y-g[i-1].y<2) continue;\n        int cnt=f[km][g[i].y-1]-f[km][g[i-1].y];\n        int mina=calarea(1,km,g[i].y-1,g[i-1].y+1);\n        if(cnt>res || (cnt==res && mina<area))\n        {\n            res=cnt;\n            area=mina;\n        }        \n    }\n    \n    cout << res << endl << area;\n    return 0;\n}\n```",
        "postTime": 1501251114,
        "uid": 18490,
        "name": "NewErA",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3117 \u3010[USACO15JAN]\u725b\u7684\u77e9\u5f62Cow Rectangles\u3011"
    },
    {
        "content": "\u6c42\u6700\u5927\u5b50\u77e9\u9635\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u60ac\u7ebf\u6cd5\u3002\n\n\u5148\u4e0d\u8003\u8651\u9762\u79ef\u7684\u9650\u5236\uff0c\u53ea\u6709\u4e24\u79cd\u5976\u725b\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u505a\u6cd5\uff1a\u4e00\u4e2a\u5f53\u4f5c\u969c\u788d\u70b9\uff0c\u7136\u540e\u5957\u60ac\u7ebf\u6cd5\u3002\u53e6\u4e00\u4e2a\u5976\u725b\u53ef\u4ee5\u901a\u8fc7\u4e8c\u7ef4\u524d\u7f00\u548c\u7ef4\u62a4\uff0c\u8fd9\u6837\u53ef\u4ee5 $O(1)$ \u8ba1\u7b97\u6570\u91cf\u3002\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u4e0d\u8fc7\u8dd1\u4e0d\u6ee1\uff0c\u56e0\u4e3a\u4e0d\u662f\u6bcf\u4e2a\u90fd\u662f\u969c\u788d\u70b9\u3002\n\n\u7136\u540e\u518d\u770b\u9762\u79ef\u6700\u5c0f\u3002\u7531\u4e8e\u6570\u636e\u8303\u56f4 500 \uff0c\u6240\u4ee5\u53ef\u4ee5\u66b4\u529b\u6c42\u6700\u5c0f\u9762\u79ef\uff1a\u679a\u4e3e\u6bcf\u4e2a\u5305\u542b\u5728\u5185\u7684\u975e\u969c\u788d\u5976\u725b\u70b9\uff0c\u628a\u5916\u5708\u7f29\u5c0f\u3002\n\n\u603b\u5171\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^3)$\uff0c\u4e0d\u8fc7\u8dd1\u4e0d\u6ee1\u3002\n\n**\u6ce8\u610f\u51e0\u4e2a\u5751\u70b9\uff1a**\n\n1. \u8fb9\u7f18\u4e5f\u7b97\u5728\u5185\u3002\n2. \u8f93\u5165\u65f6\u5750\u6807\u8981+1.\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,m,s;\nint f[1005][1005];\nstruct node\n{\n\tint x,y;\n}a[600],b[600];\nint cnt,cntt;\nvoid add(int x,int y)\n{\n\ta[++cnt]=(node){x,y};\n}\nvoid addd(int x,int y)\n{\n\tb[++cntt]=(node){x,y};\n}\nbool cmp(node x,node y)\n{\n\treturn x.x<y.x;\n}\nint cal(int x1,int y1,int x2,int y2)\n{\n\treturn f[x2][y2]-f[x1-1][y2]-f[x2][y1-1]+f[x1-1][y1-1];\n}\nint cals(int x1,int y1,int x2,int y2)\n{\n\tif(y1>y2||x1>x2) return 0;\n\tint xx1=0,xx2=n,yy1=0,yy2=m;\n\tfor(int i=1;i<=cntt;i++)\n\t{\n\t\tif(x1<=b[i].x&&b[i].x<=x2&&y1<=b[i].y&&b[i].y<=y2)\n\t\t{\n\t\t\txx1=max(xx1,b[i].x);\n\t\t\txx2=min(xx2,b[i].x);\n\t\t\tyy1=max(yy1,b[i].y);\n\t\t\tyy2=min(yy2,b[i].y);\n\t\t}\n\t}\n\treturn (xx1-xx2)*(yy1-yy2);\n}\nint main()\n{\n\tcin>>s;\n\tfor(int i=1;i<=s;i++)\n\t{\n\t\tint x,y;\n\t\tchar c;\n\t\tcin>>x>>y>>c;\n\t\tx++;y++;\n\t\tn=max(n,x);m=max(m,y);\n\t\tif(c=='H') f[x][y]=1,addd(x,y);\n\t\telse add(x,y);\n\t}\n\tn++,m++;\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\tf[i][j]+=f[i-1][j]+f[i][j-1]-f[i-1][j-1];\n\tadd(0,0);add(n,0);add(0,m);add(n,m);\n\ts=cnt;\n\tsort(a+1,a+s+1,cmp);\n\tint ans=0,anss=1e9,up,down;\n\tfor(int i=1;i<=s;i++)\n\t{\n\t\tup=0;down=m;\n\t\tfor(int j=i+1;j<=s;j++)\n\t\t{\n\t\t\tif(a[i].x+1<=a[j].x-1)\n\t\t\t{\n\t\t\t\tint cow=cal(a[i].x+1,up+1,a[j].x-1,down-1);\n\t\t\t\tint S=cals(a[i].x+1,up+1,a[j].x-1,down-1);\n\t\t\t\tif(cow>ans)\n\t\t\t\t{\n\t\t\t\t\tans=cow;\n\t\t\t\t\tanss=S;\n\t\t\t\t//\tcout<<a[i].x<<\" \"<<up<<\" \"<<a[j].x<<\" \"<<down<<\" \"<<ans<<\" \"<<anss<<endl; \n\t\t\t\t}\n\t\t\t\telse if(cow==ans&&S<anss) anss=S;\n\t\t\t}\n\t\t\tif(a[j].y>=a[i].y) down=min(down,a[j].y);\n\t\t\telse up=max(up,a[j].y);\n\t\t}\n\t}\n\tcout<<ans<<\"\\n\"<<anss;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1591427556,
        "uid": 196899,
        "name": "lndjy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3117 \u3010[USACO15JAN]Cow Rectangles G\u3011"
    },
    {
        "content": "\u590d\u6742\u5ea6$O(n^3)$\u6b21\u7684\u66b4\u529b\u7b97\u6cd5~~\uff08\u4e0d\u8fc7\u597d\u50cf\u80fd\u8fc7\u5c31\u4e0d\u662f\u66b4\u529b\uff09~~\n\n\u628a\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u79bb\u6563\u5316\uff0c\u628a$n$\u4ece1000\u964d\u4e3a500\u3002\n\n\u7136\u540e\u679a\u4e3e\u77e9\u9635\u7684\u4e0a\u4e0b\u754c\uff0c\u5728\u4e24\u6761\u7ebf\u4e4b\u95f4\u6574\u4e00\u4e2a\u7c7b\u4f3c\u5355\u8c03\u961f\u5217\u7684\u4e1c\u897f\u3002\u4f46\u56e0\u4e3a\u8fd9\u91cc\u8981\u662f\u77e9\u9635\u6700\u5c0f\uff0c\u6240\u4ee5\u5728\u79fb\u52a8\u53f3\u7aef\u70b9\u65f6\u8981\u5b9e\u65f6\u66f4\u65b0\u77e9\u9635\u4e2d\u7684\u6700\u5927\u70b9\u6570\u548c\u6700\u5927\u70b9\u6570\u65f6\u7684\u6700\u5c0f\u9762\u79ef\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5728\u7eb5\u5750\u6807\u4e0a\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8fd9\u91cc$f[i][j]$\u6307\u7b2c$i$\u5217\u4e0a\u524d$j$\u884c\u7684$H$\u70b9\u4e2a\u6570\uff1b$g[i][j]$\u6307\u7b2c$i$\u5217\u4e0a\u524d$j$\u884c\u7684$G$\u70b9\u4e2a\u6570\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5199\u9898\u4e86\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,X,Y;\nint x[510],y[510];\nchar c[510];\nint a[510],b[510];\nint f[510][510],g[510][510];\nint main(){\n//\tfreopen(\"1.in\",\"r\",stdin);\n    cin>>n;\n    for(int i=1;i<=n;++i){\n        char op[2];\n        scanf(\"%d%d%s\",x+i,y+i,op);\n        c[i]=op[0];\n        a[i]=x[i],b[i]=y[i];\n    }\n    sort(a+1,a+n+1);X=unique(a+1,a+n+1)-a-1;\n    for(int i=1;i<=n;++i){\n        x[i]=lower_bound(a+1,a+X+1,x[i])-a;\n    }\n    sort(b+1,b+n+1);Y=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i<=n;++i){\n        y[i]=lower_bound(b+1,b+Y+1,y[i])-b;\n    }\n    for(int i=1;i<=n;++i){\n        if(c[i]=='H'){\n            f[x[i]][y[i]]++;\n        }else{\n            g[x[i]][y[i]]++;\n        }\n    }\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=n;++j){\n            f[i][j]+=f[i-1][j];\n            g[i][j]+=g[i-1][j];\n        }\n    }\n    int mx=0,mn=0;\n    for(int i=1;i<=X;++i){\n        for(int j=i;j<=X;++j){\n            int l=1,r=1,ans=0;\n            while(r<=Y){\n                while(l<=Y&&(g[j][l]-g[i-1][l]||!(f[j][l]-f[i-1][l])))l++,ans-=f[j][l]-f[i-1][l];\n                r=l;ans=0;\n                while(!(g[j][r]-g[i-1][r])&&r<=Y){\n                    ans+=f[j][r]-f[i-1][r];\n                    if(ans>mx)mx=ans,mn=(a[j]-a[i])*(b[r]-b[l]);\n                    if(ans==mx)mn=min(mn,(a[j]-a[i])*(b[r]-b[l]));\n                    r++;\n                }\n                l=r;\n            }\n        }\n    }\n    cout<<mx<<endl;\n    cout<<mn<<endl; \n}\n```",
        "postTime": 1543924904,
        "uid": 48143,
        "name": "zhenglier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3117 \u3010[USACO15JAN]\u725b\u7684\u77e9\u5f62Cow Rectangles\u3011"
    },
    {
        "content": "# [P3117](https://www.luogu.com.cn/problem/P3117)\n~~\u53c8\u6c34\u4e00\u9053\u7d2b\u9898~~\u3002\n\n## \u89e3\u9898\u601d\u8def\uff1a\n\u9996\u5148\u53d1\u73b0\u6700\u5c0f\u7684\u77e9\u5f62\u4e00\u5b9a\u6ee1\u8db3\u77e9\u9635\u7684\u6bcf\u4e00\u6761\u8fb9\u4e0a\u90fd\u6709 $\\verb!H!$ \u725b\uff0c\u663e\u7136\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u53ef\u4ee5\u5e73\u79fb\u90a3\u6761\u8fb9\uff0c\u4f7f\u5f97\u90a3\u6761\u8fb9\u78b0\u5230\u4e00\u5934 $\\verb!H!$ \u725b\uff0c\u4e14\u5305\u542b\u725b\u7684\u4e2a\u6570\u4e0d\u53d8\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u77e9\u5f62\u7684\u4e0a\u4e0b\u8fb9\u754c\uff0c\u5728\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u3002\n\n\u5c06\u6240\u6709\u725b\u6309\u7167 $y$ \u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u679a\u4e3e\u77e9\u5f62\u4e0a\u8fb9\u754c\u8986\u76d6\u5230\u7684\u725b $j$\uff0c\u4e0b\u8fb9\u754c\u8986\u76d6\u5230\u7684\u725b $i$\uff0c\u8bbe $A$ \u8868\u793a $y$ \u5750\u6807\u5c5e\u4e8e $[y_i,y_j]$ \u7684\u725b\u7684\u96c6\u5408\uff0c\u6309 $x$ \u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4ece\u5de6\u5f80\u53f3\u626b\u3002\n\n\u5047\u8bbe\u73b0\u5728\u679a\u4e3e\u5230 $k$\uff0c\u8bbe $l$ \u8868\u793a\u5f53\u524d\u6700\u9760\u5de6\u4e14\u6ee1\u8db3 $l$ \u5230 $k$ \u4e4b\u95f4\u6ca1\u6709 $\\verb!G!$ \u725b\u7684\u725b\uff0c$sum$ \u8868\u793a $l$ \u5230 $k$ \u4e4b\u95f4\u725b\u7684\u4e2a\u6570\u3002\n\n\u5982\u679c\u5f53\u524d $x$ \u5750\u6807\u5728 $[y_i,y_j]$ \u4e0a\u6709 $\\verb!G!$ \u725b\uff0c\u90a3\u4e48\u628a $l,sum$ \u6e05\u96f6\uff0c\u5426\u5219\u7528 $sum$ \u548c $(y_i-y_j)\\times (x_i-x_l)$ \u66f4\u65b0\u7b54\u6848\u3002\n\n## Code:\n\n```cpp\nstruct cow\n{\n\tint x,y,ki;\n}c[N];\n\nbool comp(const cow &P,const cow &Q)\n{\n\treturn P.y<Q.y;\n}\n\nbool comp2(const cow &P,const cow &Q)\n{\n\treturn P.x<Q.x;\n}\n\nbool bo[N<<1];\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\trep(i,1,n)\n\t{\n\t\tchar s[2];\n\t\tscanf(\"%d%d %s\",&c[i].x,&c[i].y,s);\n\t\tif(*s=='H') c[i].ki=1;\n\t}\n\tsort(c+1,c+1+n,comp);\n\tpi ans=mk(0,0);\n\trep(i,1,n)\n\t\trep(j,i,n)\n\t\tif(c[i].ki&&c[j].ki)\n\t\t{\n\t\t\tint l=i,r=j;\n\t\t\twhile(l>1&&c[l-1].y==c[i].y) l--;\n\t\t\twhile(r<n&&c[r+1].y==c[j].y) r++;\n\t\t\tvector<cow>a;\n\t\t\ta.push_back((cow) {0,0,0});\n\t\t\tmemset(bo,0,sizeof(bo));\n\t\t\trep(k,l,r)\n\t\t\t{\n\t\t\t\tif(!c[k].ki) bo[c[k].x]=1;\n\t\t\t\ta.push_back(c[k]);\n\t\t\t}\n\t\t\tsort(a.begin(),a.end(),comp2);\n\t\t\tint mx=0;\n\t\t\tl=0;\n\t\t\trep(k,1,(int) a.size()-1)\n\t\t\t{\n\t\t\t\tcow b=a[k];\n\t\t\t\tif(bo[b.x]) mx=0;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(!mx) l=b.x;\n\t\t\t\t\tmx++;\n\t\t\t\t\tif(mx>ans.fi) ans=mk(mx,(c[j].y-c[i].y)*(b.x-l));\n\t\t\t\t\telse if(mx==ans.fi) ans.se=min(ans.se,(c[j].y-c[i].y)*(b.x-l));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tprintf(\"%d\\n%d\",ans.fi,ans.se);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1668349982,
        "uid": 571634,
        "name": "hgzxwzf",
        "ccfLevel": 7,
        "title": "P3117"
    },
    {
        "content": "\u770b\u5230 NewErA \u9898\u89e3\u4e2d\u63a8\u8350\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u53bb\u4e0b\u8f7d\u4e0b\u6765\u770b\u4e86\u770b\uff0c\u786e\u5b9e\u503c\u5f97\u63a8\u8350\uff1a[\u6d45\u8c08\u7528\u6781\u5927\u5316\u601d\u60f3\u89e3\u51b3\u6700\u5927\u5b50\u77e9\u5f62\u95ee\u9898](https://wenku.baidu.com/view/728cd5126edb6f1aff001fbb.html)\n\n\u6587\u4e2d\u63d0\u52302\u79cd\u7b97\u6cd5\uff08\u56fe\u7247\u6765\u81ea\u4e0a\u8ff0\u6587\u7ae0\uff09\uff1a\n\n1.\u679a\u4e3e\u969c\u788d\u70b9\u4f5c\u4e3a\u5de6\u8fb9\u754c\uff0c\u7136\u540e\u4f9d\u6b21\u5411\u53f3\u626b\u63cf\u969c\u788d\u70b9\uff0c\u5e76\u4e0d\u65ad\u8c03\u6574\u4e0a\u4e0b\u8fb9\u754c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(\u969c\u788d\u70b9^2)\uff0c\u5bf9\u4e8e\u672c\u9898\u5df2\u7ecf\u8db3\u591f\u3002\n\n\u4f8b\u5982\uff1a**\u4ee5\u969c\u788d\u70b91\u4e3a\u77e9\u5f62\u5de6\u8fb9\u754c**\uff0c\u5411\u53f3\u9047\u5230\u969c\u788d\u70b92\uff0c\u6b64\u65f6\u5206\u5272\u7684\u77e9\u5f62\u4e0a\u4e0b\u8fb9\u754c\u4e3a\u5927\u77e9\u5f62\u7684\u4e0a\u4e0b\u8fb9\u754c\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q6vqls80.png)\n\n\n\u7ee7\u7eed\u5411\u540e\u626b\u63cf\u9047\u5230\u969c\u788d\u70b93\uff0c\u56e0\u4e3a\u4e0d\u80fd\u5305\u542b\u969c\u788d\u70b92\uff0c\u56e0\u6b64\u8c03\u6574\u4e0b\u8fb9\u754c\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vw5un3s8.png)\n\n\u7ee7\u7eed\u5f80\u540e\u79fb\u52a8\uff0c\u4e0d\u5f97\u5305\u542b\u969c\u788d3\uff0c\u56e0\u6b64\u8c03\u6574\u4e0a\u8fb9\u754c\uff08\u53f3\u8fb9\u754c\u5462\uff1f\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3yut4mgd.png)\n\n\u6613\u9519\u70b91\uff1a\u6700\u5927\u5b50\u77e9\u9635\u7684\u8fb9\u754c\u548c\u5927\u77e9\u5f62\u7684\u8fb9\u754c\u91cd\u5408\n\n\u5904\u7406\u6280\u5de7\uff1a\u989d\u5916\u63d2\u51654\u4e2a\u969c\u788d\u70b9\uff0c\u5373\u5927\u77e9\u5f62\u7684\u53f3\u4e0a\u3001\u53f3\u4e0b\u3001\u5de6\u4e0a\u3001\u5de6\u4e0b\u56db\u4e2a\u70b9\n\n\u6613\u9519\u70b92\uff1a\u6b64\u9898\u8fb9\u754c\u4e0a\u4e0d\u80fd\u6709\u969c\u788d\u70b9\uff0c\u56e0\u6b64\u9700\u8981\u5de6\u8fb9\u754c\u4ece\u969c\u788d\u70b9lx\u5411\u53f3\u79fb\u52a81\u4e2a\u5355\u4f4d\uff0c\u53f3\u8fb9\u754c\u4ece\u969c\u788d\u70b9rx\u5411\u5de6\u79fb\u52a81\u4e2a\u5355\u4f4d\uff0c\u8981\u4fdd\u8bc1\u6784\u6210\u7684\u5b50\u77e9\u9635\u662f\u5408\u7406\u7684\u5fc5\u987b\u6709\uff1arx-1>=lx+1\uff0c\u5373rx-lx>=2\n\n\u5feb\u901f\u8ba1\u7b97\u5b50\u77e9\u9635\u5305\u542b\u7684H\u70b9\uff1a\u524d\u7f00\u548c+\u5bb9\u65a5\u539f\u7406\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=505,M=N<<1;\nstruct node{\n\tint x,y;\n\tnode(int a=0,int b=0):x(a),y(b){}\n\tbool operator<(node a)const{return x<a.x;}\n};\nvector<node>h,g;\nint n,mx,my,ans,s=1e9,sum[M][M];\nint calS(int lx,int ly,int rx,int ry){\n\tif(ly>ry)return 0;\n\tint x=mx,xx=0,y=my,yy=0;\n\tfor(int i=0;i<h.size();i++)\n\t\tif(h[i].x>=lx&&h[i].x<=rx&&h[i].y>=ly&&h[i].y<=ry){\n\t\t\tx=min(x,h[i].x);\n\t\t\txx=max(xx,h[i].x);\n\t\t\ty=min(y,h[i].y);\n\t\t\tyy=max(yy,h[i].y);\n\t\t}\n\treturn (xx-x)*(yy-y);\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n;\n\tchar c;\n\tfor(int i=1,x,y,t;i<=n;i++){\n\t\tcin>>x>>y>>c;x++,y++;//\u4e3a\u4e86\u5c06(0,0)\u8bbe\u7f6e\u4e3a\u969c\u788d\u70b9\uff0c\u56e0\u6b64\u6240\u6709\u70b9\u53f3\u4e0a\u79fb\u52a8 \n\t\tif(c=='H'){\n\t\t\tsum[x][y]=1;\n\t\t\th.push_back(node(x,y));\n\t\t}\n\t\telse g.push_back(node(x,y));\n\t\tmx=max(mx,x),my=max(my,y);\n\t}\n\tmx++,my++;\n\tg.push_back(node(mx,my));//\u53f3\u4e0a\u89d2\u63d2\u5165\u969c\u788d\u70b9 \n\tg.push_back(node(0,0));//\u5de6\u4e0b\u89d2\u63d2\u5165\u969c\u788d\u70b9 \n\tg.push_back(node(0,my));//\u5de6\u4e0a\u89d2\u63d2\u5165\u969c\u788d\u70b9 \n\tg.push_back(node(mx,0));//\u53f3\u4e0b\u89d2\u63d2\u5165\u969c\u788d\u70b9 \n\tsort(g.begin(),g.end());\n\tsort(h.begin(),h.end());\n\tfor(int x=1;x<=mx;x++)\n\t\tfor(int y=1;y<=my;y++)\n\t\t\tsum[x][y]+=(sum[x][y-1]+sum[x-1][y]-sum[x-1][y-1]);\n\tfor(int i=0;i<g.size();i++){//\u4ee5i\u4e3a\u5de6\u8fb9\u754c\u7684\u77e9\u5f62\uff0c\u4e0d\u80fd\u5305\u542bi,\u56e0\u6b64\u5de6\u8fb9\u754c \n\t\tint miny=0,maxy=my;//\u4e0a\u4e0b\u8fb9\u754c \n\t\tfor(int j=i+1;j<g.size();j++){//\u5411\u53f3\u626b\u63cf\uff0c\u4e0d\u65ad\u8c03\u6574\u4e0a\u4e0b\u8fb9\u754c \n\t\t\tif(g[j].x-g[i].x>=2){//\u77e9\u5f62\u4e0d\u542b\u969c\u788d\uff0c\u56e0\u6b64lx+1<=rx-1,\u5373rx-lx>=2 \n\t\t\t\tint t=sum[g[j].x-1][maxy-1]-sum[g[j].x-1][miny]-sum[g[i].x][maxy-1]+sum[g[i].x][miny];\n\t\t\t\tint ss=calS(g[i].x+1,miny+1,g[j].x-1,maxy-1);\n\t\t\t\tif(ans<t)ans=t,s=ss;\n\t\t\t\telse if(ans==t&&s>ss)s=ss;\n\t\t\t}\n\t\t\tif(g[j].y<=g[i].y)miny=max(miny,g[j].y);\n\t\t\tif(g[j].y>=g[i].y)maxy=min(g[j].y,maxy);\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\tcout<<s<<endl;\n\treturn 0;\n} \n```\n\n2.\u7b2c\u4e8c\u79cd\u7b97\u6cd5\uff0c~~\u624d\u60f3\u8d77\u6765\uff0c\u8fd8\u6ca1\u770b~~\n",
        "postTime": 1584066713,
        "uid": 39079,
        "name": "yqw2486",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3117 \u3010[USACO15JAN]Cow Rectangles G\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u7684\u9898\u89e3\u90fd\u597d\u9ad8\u5927\u5c1a\uff0c\u849f\u84bb\u4e5f\u6765\u6253\u4e00\u53d1\n\n\u66b4\u529b\u4ec0\u4e48\u7684\u5c31\u7b97\u4e86\uff0c~~\u8d2a\u5fc3\u4ed6\u4e0d\u9999\u5417~~\n\n\u8fd9\u9898\u5176\u5b9e\u5982\u679c\u5206\u5f00\u60f3\uff0c\u5c31\u4e09\u79cd\u60c5\u51b5\u9700\u8981\u8ba8\u8bba\uff1a\uff08~~\u7531\u4e8e\u4e0d\u4f1a\u53d1\u56fe\uff0c\u53ea\u80fd\u624b\u6253~~\uff09\n\n1\uff09\n\n5 . . . . .\n\n4 . . . . .\n\n3 . . . H .\n\n2 . . G . . \n\n1 . H . . .\n\n0 1 2 3 4 5\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0b\u9762\u4e24\u4e2aH\u7edd\u5bf9\u4e0d\u5728\u4e00\u7ec4\uff08\u56e0\u4e3a\u4ed6\u4eec\u4e2d\u6709G\uff09\n\n2)\n\n5 . . G . .\n\n4 . . H . .\n\n3 . . . H .\n\n2 . H . . .\n\n1 . G . . .\n\n0 1 2 3 4 5\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6240\u6709H\u90fd\u80fd\u62ff\uff0c\u56e0\u4e3aG\u5728\u6240\u6709H\u4e4b\u4e0a/\u4e4b\u4e0b\n\n3)\n\n5 . . H . . \n\n4 . . G . .\n\n3 . . . H .\n\n2 . . . . H\n\n1 . H . . .\n\n0 1 2 3 4 5\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0b\u9762\u6240\u6709H\u90fd\u80fd\u62ff\uff0c\u4f46\u662f\u4e0a\u9762\u90a3\u4e2a\u8fde\u4e0d\u4e86\uff08\u88abG\u6321\u4f4f\u4e86\uff09\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u8fd9\u4e09\u79cd\u60c5\u51b5\u8fdb\u884c\u5224\u65ad\u5c31\u884c\u4e86\uff08\u5224\u65ad\u65b9\u6cd5\u89c1\u6ce8\u91ca\uff09\n\n```cpp\npp find_pair(int aa, int bb){\n  int mini = 1e8,maxi = 0;\n  int low = aa, high = bb;\n  while(cow[low-1].x==cow[aa].x) {low--;if (low==0)break;}\n  while(cow[high-1].x==cow[bb].x) {high++; if (high == 0) break;}\n  //\u8fd9\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u5224\u65ad\uff1a\n  //\u56e0\u4e3a\u6211\u4eec\u5728\u6392\u5e8f\u7684\u65f6\u5019\u6709\u53ef\u80fd\u9047\u5230x\u76f8\u7b49\u7684\u70b9\uff0c\u8fd9\u4e2a\u70b9\u5e76\u4e0d\u4f1a\u88ab\u641c\u7d22\uff0c\u4f46\u662f\u8fd9\u4e2a\u70b9\u4ecd\u7136\u9700\u8981\u5224\u65ad\u3002\u5728\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5f80\u524d\u548c\u540e\u641c\u7d22x\u76f8\u7b49\u7684\u70b9\n  for (int i=low;i<=high;i++){\n    if (cow[i].id=='G'){\n      if (cow[i].y>max(cow[aa].y,cow[bb].y)) mini = min(mini,cow[i].y);\n      else if (cow[i].y<min(cow[aa].y,cow[bb].y)) maxi = max(maxi,cow[i].y);\n      else posible = false;\n    }\n  }//\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u95f4\u6709G\u5c31\u8fdb\u884c\u4ee5\u4e0b\u5224\u65ad\uff1a\n  //1.\u5982\u679c\u8fd9\u4e2aG\u7684y\u5750\u6807\u5728\u8fd9\u4e24\u4e2a\u70b9\u7684y\u4e4b\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u6700\u9ad8\u503c\u66f4\u65b0\n  //2.\u5982\u679c\u8fd9\u4e2aG\u7684\u5750\u6807\u5728y\u4e4b\u4e0b\uff0c\u6211\u4eec\u5c06\u6700\u5c0f\u503c\u4e4b\u4e0b\uff0c\u6211\u4eec\u66f4\u65b0\u6700\u5c0f\u503c\n  //3.\u5982\u679c\u8fd9\u4e2aG\u5728\u4e24\u4e2a\u5750\u6807\u4e2d\u95f4\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u5fc5\u7136\u4e0d\u53ef\u80fd\u9009\uff08\u56e0\u4e3a\u65e0\u8bba\u600e\u4e48\u6837\u8fde\u6700\u540eG\u90fd\u4f1a\u5728\u8fd9\u4e2a\u8303\u56f4\u91cc\uff09\n  return make_pair(mini,maxi);\n}\n```\n\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u4fdd\u8bc1\u627e\u7684G\u5728\u4e24\u4e2aH\u7684\u4e2d\u95f4\u5462\uff1f\n\n~~\u8fd8\u7528\u95ee\u5417\uff0c\u52a0\u4e2asort\u5c31\u597d\u4e86~~\n\n*\u6ce8\u610f\u4e8b\u9879\uff1a\u5728\u627eG\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u8bb0\u4f4f\u5982\u679c\u8fd9\u4e2aG\u548cH\u7684x\u5750\u6807\u76f8\u7b49\uff0c\u5728sort\u7684\u65f6\u5019\u672a\u5fc5\u4f1a\u5728\u4ed6\u7684\u8303\u56f4\u5185\u3002\u90a3\u600e\u4e48\u529e\uff1f\n\n~~\u8fd8\u7528\u95ee\u5417\uff0c\u5982\u679cx\u5750\u6807\u76f8\u7b49\u5c31\u51cf/\u52a0\u5230\u4ed6\u4e0d\u76f8\u7b49\u4e3a\u6b62~~\n```cpp\nwhile(cow[low-1].x==cow[aa].x) {low--;if (low==0)break;}\n  while(cow[high-1].x==cow[bb].x) {high++; if (high == 0) break;}\n```\n\u627e\u5b8cG\u4e4b\u540e\uff0c\u6211\u4eec\u5bf9\u4e24\u70b9\u4e4b\u95f4\u7684\u6240\u6709H\u8fdb\u884c\u5224\u65ad\uff1a\n\n\u5982\u679c\u8fd9\u4e2aH\u5728\u4e0a\u4e0bG\u7684y\u7684\u8303\u56f4\u4ee5\u5185\uff0c\u90a3\u4e48\u6211\u4eec\u66f4\u65b0\u6700\u5927/\u6700\u5c0f\u503c\u3002\uff08\u76f8\u5f53\u4e8e\u66f4\u65b0\u9ad8\uff09\n\n```cpp\npp in_range(int aa, int bb, pp bo){\n  int maxi = 0,mini = 1e8;\n  for (int i=aa;i<=bb;i++){\n    if (cow[i].id!='G'){\n      if (between(bo,cow[i].y)){\n        maxi = max(maxi,cow[i].y);\n        mini = min(mini,cow[i].y);\n        temp++;\n      }\n    }\n  }//\u73b0\u5728\u5df2\u7ecf\u627e\u51fa\u4e86\u5728\u8fd9\u4e2a\u70b9\u4e0a\u9762\u6700\u4f4e\u7684G\u70b9\u548c\u4e0b\u9762\u6700\u9ad8\u7684G\u70b9\n  //\u6211\u4eec\u5728\u8fd9\u4e2a\u8303\u56f4\u91cc\u9762\u641c\u7d22\u6240\u4ee5\u7684H\uff0c\u66f4\u65b0\u6700\u9ad8\u70b9\u548c\u6700\u4f4e\u70b9\uff08\u524d\u63d0\u662f\u8981\u5728G\u70b9\u7684\u8303\u56f4\u5185\uff09\n  return make_pair(maxi,mini);\n}\n```\n\u627e\u5b8c\u4e4b\u540e\u600e\u4e48\u529e\uff1f\n\n~~\u8fd8\u7528\u95ee\u5417\uff0c\u5f53\u7136\u627e\u9762\u79ef\u554a~~\n\n\u9762\u79ef = \u5e95*\u9ad8 = (x2-x1)*abs(y2-y1) [\u56e0\u4e3asort\u4e86\uff0c\u6240\u4ee5x2\u4e00\u5b9a>=x1]\n\n```cpp\nif (temp){\n        if(temp>breed){\n          //\u5982\u679cH\u7684\u6570\u91cf\u5927\u4e8e\u4e4b\u524d\u7684\uff0c\u76f4\u63a5\u66f4\u65b0\n          breed = temp;\n          ans = abs(res.first-res.second)*abs(cow[j].x-cow[i].x);\n        }else if (temp==breed) ans = min(ans,abs(res.first-res.second)*abs(cow[j].x-cow[i].x));//\u5426\u5219\u66f4\u65b0\u9762\u79ef\uff08\u5e95\u300ex\u7684\u5dee\u300f\u4e58\u9ad8\u300e\u6700\u9ad8y\u503c\u548c\u6700\u4f4ey\u503c\u7684\u5dee\u300f\n      }\n```\n\n\u7531\u4e8e\u5224\u65ad\u4e0d\u9700\u8981\u50a8\u5b58\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u7528500\u7684\u7a7a\u95f4\u5176\u5b9e\u5c31\u591f\u4e86\uff08800-KB\u5e94\u8be5\u591f\u5c0f\u4e86\u5427\uff09\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <math.h>\n#include <stdio.h>\nusing namespace std;\n#define pp pair<int,int>\nstruct node{\n  int x,y;\n  char id;\n}cow[505];\nint tot = 0, temp = 0;\nint a,b,c; char d;\nvoid add(int aa, int bb, char cc){\n  cow[++tot].x = aa;\n  cow[tot].y = bb;\n  cow[tot].id = cc;\n}\nbool sorted(node aa, node bb){\n  return aa.x<bb.x;\n}\nbool between(pp aa,int b){\n  return aa.first>b && aa.second<b;\n}//\u8fd9\u4e2a\u662f\u8868\u793a\u4e00\u4e2a\u6570\u662f\u5426\u5728\u4e24\u4e2a\u6570\u4e4b\u95f4\nbool posible = true;\npp find_pair(int aa, int bb){\n  int mini = 1e8,maxi = 0;\n  int low = aa, high = bb;\n  while(cow[low-1].x==cow[aa].x) {low--;if (low==0)break;}\n  while(cow[high-1].x==cow[bb].x) {high++; if (high == 0) break;}\n  //\u8fd9\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u5224\u65ad\uff1a\n  //\u56e0\u4e3a\u6211\u4eec\u5728\u6392\u5e8f\u7684\u65f6\u5019\u6709\u53ef\u80fd\u9047\u5230x\u76f8\u7b49\u7684\u70b9\uff0c\u8fd9\u4e2a\u70b9\u5e76\u4e0d\u4f1a\u88ab\u641c\u7d22\uff0c\u4f46\u662f\u8fd9\u4e2a\u70b9\u4ecd\u7136\u9700\u8981\u5224\u65ad\u3002\u5728\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5f80\u524d\u548c\u540e\u641c\u7d22x\u76f8\u7b49\u7684\u70b9\n  for (int i=low;i<=high;i++){\n    if (cow[i].id=='G'){\n      if (cow[i].y>max(cow[aa].y,cow[bb].y)) mini = min(mini,cow[i].y);\n      else if (cow[i].y<min(cow[aa].y,cow[bb].y)) maxi = max(maxi,cow[i].y);\n      else posible = false;\n    }\n  }//\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u95f4\u6709G\u5c31\u8fdb\u884c\u4ee5\u4e0b\u5224\u65ad\uff1a\n  //1.\u5982\u679c\u8fd9\u4e2aG\u7684y\u5750\u6807\u5728\u8fd9\u4e24\u4e2a\u70b9\u7684y\u4e4b\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u6700\u9ad8\u503c\u66f4\u65b0\n  //2.\u5982\u679c\u8fd9\u4e2aG\u7684\u5750\u6807\u5728y\u4e4b\u4e0b\uff0c\u6211\u4eec\u5c06\u6700\u5c0f\u503c\u4e4b\u4e0b\uff0c\u6211\u4eec\u66f4\u65b0\u6700\u5c0f\u503c\n  //3.\u5982\u679c\u8fd9\u4e2aG\u5728\u4e24\u4e2a\u5750\u6807\u4e2d\u95f4\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u5fc5\u7136\u4e0d\u53ef\u80fd\u9009\uff08\u56e0\u4e3a\u65e0\u8bba\u600e\u4e48\u6837\u8fde\u6700\u540eG\u90fd\u4f1a\u5728\u8fd9\u4e2a\u8303\u56f4\u91cc\uff09\n  return make_pair(mini,maxi);\n}\npp in_range(int aa, int bb, pp bo){\n  int maxi = 0,mini = 1e8;\n  for (int i=aa;i<=bb;i++){\n    bool update = true;\n    while(update){\n      if (cow[i].id!='G'){\n        if (between(bo,cow[i].y)){\n          maxi = max(maxi,cow[i].y);\n          mini = min(mini,cow[i].y);\n          temp++;\n        }\n      }\n    }\n  }//\u73b0\u5728\u5df2\u7ecf\u627e\u51fa\u4e86\u5728\u8fd9\u4e2a\u70b9\u4e0a\u9762\u6700\u4f4e\u7684G\u70b9\u548c\u4e0b\u9762\u6700\u9ad8\u7684G\u70b9\n  //\u6211\u4eec\u5728\u8fd9\u4e2a\u8303\u56f4\u91cc\u9762\u641c\u7d22\u6240\u4ee5\u7684H\uff0c\u66f4\u65b0\u6700\u9ad8\u70b9\u548c\u6700\u4f4e\u70b9\uff08\u524d\u63d0\u662f\u8981\u5728G\u70b9\u7684\u8303\u56f4\u5185\uff09\n  return make_pair(maxi,mini);\n}\nint main(){\n  ios::sync_with_stdio(0);\n  cin >> a;\n  for (int i=0;i<a;i++){\n    cin >> b >> c >> d;\n    add(b,c,d);\n  }\n  int ans = 0, breed = 1;\n  sort(cow+1,cow+tot+1,sorted);\n  //\u4ee5\u4e0a\u4e0d\u89e3\u91ca\n  for (int i=1;i<=a;i++){\n    for (int j=i+breed;j<=a;j++){\n      if (cow[i].id=='G'||cow[j].id == 'G') continue;//\u5982\u679c\u4e24\u4e2a\u70b9\u4e2d\u6709G\u5c31\u4e0d\u9700\u8981\u5224\u65ad\n      posible = true;\n      temp = 0;\n      pp bounds = find_pair(i,j);//\u5148\u627eG\u7684\u8303\u56f4\n      if (!posible) continue;\n      pp res = in_range(i,j,bounds);//\u518d\u627eH\u7684\u8303\u56f4\n      if (temp){\n        if(temp>breed){\n          //\u5982\u679cH\u7684\u6570\u91cf\u5927\u4e8e\u4e4b\u524d\u7684\uff0c\u76f4\u63a5\u66f4\u65b0\n          breed = temp;\n          ans = abs(res.first-res.second)*abs(cow[j].x-cow[i].x);\n        }else if (temp==breed) ans = min(ans,abs(res.first-res.second)*abs(cow[j].x-cow[i].x));//\u5426\u5219\u66f4\u65b0\u9762\u79ef\uff08\u5e95\u300ex\u7684\u5dee\u300f\u4e58\u9ad8\u300e\u6700\u9ad8y\u503c\u548c\u6700\u4f4ey\u503c\u7684\u5dee\u300f\n      }\n    }\n  }\n  cout << breed << endl << ans;\n}\n\n```\n\n~~\u4f60\u6284\u4efb\u4f60\u6284\uff0c\u8fc7\u5f97\u4e86\u7b97\u6211\u8f93~~",
        "postTime": 1575404128,
        "uid": 219099,
        "name": "pocafup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3117 \u3010[USACO15JAN]\u725b\u7684\u77e9\u5f62Cow Rectangles\u3011"
    }
]