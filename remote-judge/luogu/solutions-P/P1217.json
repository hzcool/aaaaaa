[
    {
        "content": "\u8fd9\u9898\u5417\u2026\u2026\n\n\u6211\u7528\u7684\u4e0d\u662f\u5236\u9020\u56de\u6587\u6570\uff0c\u662f\u4ecea\u627e\u5230b\u3002\u90a3\u600e\u4e48\u4f1a\u4e0d\u8d85\u65f6\u5462\uff1f\n\n1\u3001\u6211\u4ece\u5947\u6570\u5f00\u59cb\u627e\uff0c\u6bcf\u6b21+2\uff1b\n\n2\u3001\u6211\u53d1\u73b0\uff0c\u6ca1\u6709\u5076\u6570\u4f4d\u7684\u56de\u6587\u8d28\u6570\uff01\u7701\u4e86\u4e00\u5927\u628a\u7684\u65f6\u95f4\u554a\uff01\n\n\u867d\u8bf4\u8fd8\u662f\u5f88\u6162\uff0c\u4e0d\u8fc7\u5f88\u597d\u5199\u5c31\u662f\u4e86\uff01\u54c8\u54c8\u3002\n\n\u4e0b\u9762\u5217\u6838\u5fc3\u7684\u4e09\u4e2a\u5224\u65ad\uff1a\n\n```cpp\n    bool ok(int k)   //\u56de\u6587\u6570\n    {     \n        int a[10],i=0;     \n        while (k>0){a[i]=k%10;k/=10;i++;}\n        for(int j=0;j<i;j++)if(a[j]!=a[i-j-1])return false;   \n        return true;     \n    }\n    bool ws(int k)  //\u4f4d\u6570\n    {\n        if(k>=10 && k<100 && k!=11 || k>=1000 && k<10000)return false;\n        if(k>=100000 && k<1000000 || k>=10000000 && k<100000000)return false;\n        return true;\n    }\n    bool ss(int k)   //\u7d20\u6570\n    {     \n        for(int i=3;i*i<=k;i+=2)if(k%i==0)return false;     \n        return true;\n    }\n\u66f4\u4f18\u7684\u65b9\u6cd5\u662f\u5236\u9020\u56de\u6587\u6570\uff0c\u8fd9\u4e2a\u6211\u5c31\u4e0d\u8bf4\u4e86\u3002\u7ed9\u4e2a\u8d5e\u5427\uff01\n```",
        "postTime": 1379769521,
        "uid": 163,
        "name": "linyorson",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "# \u56de\u6587\u8d28\u6570\n### \u987e\u540d\u601d\u4e49\uff0c\u56de\u6587\u7684\u8d28\u6570\uff0c\u5148\u601d\u8003:\n1. \u66b4\u529b\u679a\u4e3e[l\uff0c r]\u7684\u6ca1\u4e00\u4e2a\u6570\uff0cTLE\u7b49\u7740\u4f60\u3002\u3002\u3002\n1. \u56e0\u4e3a\u5224\u65ad\u56de\u6587\u5feb\uff0c\u800c\u56de\u6587\u6570\u53c8\u5c11\uff0c\u6240\u4ee5\u5148\u5224\u65ad\u56de\u6587\uff0c\u518d\u5224\u65ad\u8d28\u6570\uff0c~~\u606d\u559c\u4f60~~\u8fd8\u662fTLE\u3002\u3002\u3002\n1. \u6709\u4e00\u79cd~~\u7384\u5b66~~\u7684\u8bc1\u660e\u65b9\u6cd5,\u6709\u5076\u6570\u4f4d\u7684\u56de\u6587\u6570\uff08\u9664\u4e8611\uff09\u5fc5\u7136\u4e0d\u662f\u8d28\u6570\n##### \u8bc1\u660e\u65b9\u6cd5\uff1a~~\u663e\u7136~~\n##### \u8fd9\u4e2a\u6570\u5fc5\u4e3a11\u7684\u500d\u6570\uff0c~~\u5c0f\u5b66\u9898\uff0c\u4e0d\u4f1a\u7684\u95ee\u5c0f\u5b66\u6570\u5b66\u8001\u5e08~~\n4. \u4eb2\u6d4b\u4e4b\u540e\uff0c\u53d1\u73b0\u4ee5\u4e0a\u60f3\u6cd5\u5b9e\u73b0\u540e\uff0c\u4e0d\u7528\u5feb\u8bfb\u5feb\u51fa\u5df2\u7ecf\u53ef\u4ee5\u8fc7\u4e86\uff0c\u4f46\u5728TLE\u7684\u8fb9\u7f18\u5f98\u5f8a\uff0c\u518d\u60f3\uff0c\u6b63\u5076\u6570\uff08\u9664\u4e862\uff09\u662f\u4e0d\u662f\u90fd\u4e0d\u53ef\u80fd\u662f\u8d28\u6570\u5462\uff1f\u65f6\u95f4\u5927\u7ea6\u5c11\u4e86\u4e00\u534a\n###  _\u81f3\u6b64\uff0c\u60f3\u6cd5\u5df2\u7ecf\u57fa\u672c\u6709\u4e86\uff0c\u73b0\u5728\u4ee3\u7801\u5b9e\u73b0_ \n\n------------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint l, r;\nbool check1(int x)//\u68c0\u67e5\u4f4d\u6570\n{\n\tif((1000 <= x && x <= 9999) || (100000 <= x && x <= 999999)) return 0;//\u4e0d\u77e5\u9053&&\u548c||\u4f18\u5148\u7ea7\u7684\u53ef\u4ee5\u6253\u4e2a\u62ec\u53f7 \n\treturn 1;\n} \nbool check2(int x)//\u68c0\u67e5\u662f\u5426\u56de\u6587\n{\n\tint a[20], flag = 1;//\u53cd\u6b63\u5f00\u5f97\u4e0b\uff0c\u591a\u5f00\u70b9\n\twhile (x > 0)\n\t{\n\t\ta[flag] = x % 10;\n\t\tx /= 10;\n\t\tflag++;\n\t} \n\tfor (int i = 1; i <= flag / 2; i++)\n\t\tif(a[i] != a[flag-i]) return 0;//\u4e0d\u7b26\u5408\u56de\u6587 \n\treturn 1;\n} \nbool check3(int x)//\u68c0\u67e5\u662f\u5426\u4e3a\u8d28\u6570 \n{\n\tif(x == 2) return 1;\n\tfor(int i = 2; i <= sqrt(x); i++)\n\t\tif(x % i == 0) return 0;\n\treturn 1;\n}\nint main()\n{\n\tscanf(\"%d %d\", &l, &r);\n\tif(l == 2) printf(\"2\\n\");//\u4e00\u5b9a\u8981\u6ce8\u610f2\uff01\uff01\uff01 \n\tif(l % 2 == 0) l++; \n\tr = min(9999999, r);//\u518d\u5927\u7684\u6570\u90fd\u4e0d\u53ef\u80fd\u662f\u56de\u6587\u8d28\u6570\n\tfor(int i = l; i <= r; i = i + 2)//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5947\u6570\n\t{\n\t\tif(check1(i) == 0) continue;\n\t\tif(check2(i) == 0) continue;\n\t\tif(check3(i) == 0) continue;\n\t\tprintf(\"%d\\n\", i);//printf\u4f1a\u6bd4cout\u5feb\u5f88\u591a \n\t}\t\n\treturn 0;\n}\n```\n### \u672c\u4eba\u53d1\u8868\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u671b\u70b9\u8d5e!\n\n\n",
        "postTime": 1543674405,
        "uid": 88704,
        "name": "min_\u8fdb\u51fb\u7684\u706d\u9738",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "# \u6253\u8868\n###### \n\n------------\n~~\u54c8\u54c8\u54c8\u54c8~~\u771f\u723d\n\n------------\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint a,b,db[800]={0,2,3,5,7,11,101,131,151,181,\n191,313,353,373,383,727,757,787,797,\n919,929,10301,10501,10601,11311,11411,12421,12721,\n12821,13331,13831,13931,14341,14741,15451,15551,16061,\n16361,16561,16661,17471,17971,18181,18481,19391,19891,\n19991,30103,30203,30403,30703,30803,31013,31513,32323,\n32423,33533,34543,34843,35053,35153,35353,35753,36263,\n36563,37273,37573,38083,38183,38783,39293,70207,70507,\n70607,71317,71917,72227,72727,73037,73237,73637,74047,\n74747,75557,76367,76667,77377,77477,77977,78487,78787,\n78887,79397,79697,79997,90709,91019,93139,93239,93739,\n94049,94349,94649,94849,94949,95959,96269,96469,96769,\n97379,97579,97879,98389,98689,1003001,1008001,1022201,1028201,\n1035301,1043401,1055501,1062601,1065601,1074701,1082801,1085801,1092901,\n1093901,1114111,1117111,1120211,1123211,1126211,1129211,1134311,1145411,\n1150511,1153511,1160611,1163611,1175711,1177711,1178711,1180811,1183811,\n1186811,1190911,1193911,1196911,1201021,1208021,1212121,1215121,1218121,\n1221221,1235321,1242421,1243421,1245421,1250521,1253521,1257521,1262621,\n1268621,1273721,1276721,1278721,1280821,1281821,1286821,1287821,1300031,\n1303031,1311131,1317131,1327231,1328231,1333331,1335331,1338331,1343431,\n1360631,1362631,1363631,1371731,1374731,1390931,1407041,1409041,1411141,\n1412141,1422241,1437341,1444441,1447441,1452541,1456541,1461641,1463641,\n1464641,1469641,1486841,1489841,1490941,1496941,1508051,1513151,1520251,\n1532351,1535351,1542451,1548451,1550551,1551551,1556551,1557551,1565651,\n1572751,1579751,1580851,1583851,1589851,1594951,1597951,1598951,1600061,\n1609061,1611161,1616161,1628261,1630361,1633361,1640461,1643461,1646461,\n1654561,1657561,1658561,1660661,1670761,1684861,1685861,1688861,1695961,\n1703071,1707071,1712171,1714171,1730371,1734371,1737371,1748471,1755571,\n1761671,1764671,1777771,1793971,1802081,1805081,1820281,1823281,1824281,\n1826281,1829281,1831381,1832381,1842481,1851581,1853581,1856581,1865681,\n1876781,1878781,1879781,1880881,1881881,1883881,1884881,1895981,1903091,\n1908091,1909091,1917191,1924291,1930391,1936391,1941491,1951591,1952591,\n1957591,1958591,1963691,1968691,1969691,1970791,1976791,1981891,1982891,\n1984891,1987891,1988891,1993991,1995991,1998991,3001003,3002003,3007003,\n3016103,3026203,3064603,3065603,3072703,3073703,3075703,3083803,3089803,\n3091903,3095903,3103013,3106013,3127213,3135313,3140413,3155513,3158513,\n3160613,3166613,3181813,3187813,3193913,3196913,3198913,3211123,3212123,\n3218123,3222223,3223223,3228223,3233323,3236323,3241423,3245423,3252523,\n3256523,3258523,3260623,3267623,3272723,3283823,3285823,3286823,3288823,\n3291923,3293923,3304033,3305033,3307033,3310133,3315133,3319133,3321233,\n3329233,3331333,3337333,3343433,3353533,3362633,3364633,3365633,3368633,\n3380833,3391933,3392933,3400043,3411143,3417143,3424243,3425243,3427243,\n3439343,3441443,3443443,3444443,3447443,3449443,3452543,3460643,3466643,\n3470743,3479743,3485843,3487843,3503053,3515153,3517153,3528253,3541453,\n3553553,3558553,3563653,3569653,3586853,3589853,3590953,3591953,3594953,\n3601063,3607063,3618163,3621263,3627263,3635363,3643463,3646463,3670763,\n3673763,3680863,3689863,3698963,3708073,3709073,3716173,3717173,3721273,\n3722273,3728273,3732373,3743473,3746473,3762673,3763673,3765673,3768673,\n3769673,3773773,3774773,3781873,3784873,3792973,3793973,3799973,3804083,\n3806083,3812183,3814183,3826283,3829283,3836383,3842483,3853583,3858583,\n3863683,3864683,3867683,3869683,3871783,3878783,3893983,3899983,3913193,\n3916193,3918193,3924293,3927293,3931393,3938393,3942493,3946493,3948493,\n3964693,3970793,3983893,3991993,3994993,3997993,3998993,7014107,7035307,\n7036307,7041407,7046407,7057507,7065607,7069607,7073707,7079707,7082807,\n7084807,7087807,7093907,7096907,7100017,7114117,7115117,7118117,7129217,\n7134317,7136317,7141417,7145417,7155517,7156517,7158517,7159517,7177717,\n7190917,7194917,7215127,7226227,7246427,7249427,7250527,7256527,7257527,\n7261627,7267627,7276727,7278727,7291927,7300037,7302037,7310137,7314137,\n7324237,7327237,7347437,7352537,7354537,7362637,7365637,7381837,7388837,\n7392937,7401047,7403047,7409047,7415147,7434347,7436347,7439347,7452547,\n7461647,7466647,7472747,7475747,7485847,7486847,7489847,7493947,7507057,\n7508057,7518157,7519157,7521257,7527257,7540457,7562657,7564657,7576757,\n7586857,7592957,7594957,7600067,7611167,7619167,7622267,7630367,7632367,\n7644467,7654567,7662667,7665667,7666667,7668667,7669667,7674767,7681867,\n7690967,7693967,7696967,7715177,7718177,7722277,7729277,7733377,7742477,\n7747477,7750577,7758577,7764677,7772777,7774777,7778777,7782877,7783877,\n7791977,7794977,7807087,7819187,7820287,7821287,7831387,7832387,7838387,\n7843487,7850587,7856587,7865687,7867687,7868687,7873787,7884887,7891987,\n7897987,7913197,7916197,7930397,7933397,7935397,7938397,7941497,7943497,\n7949497,7957597,7958597,7960697,7977797,7984897,7985897,7987897,7996997,\n9002009,9015109,9024209,9037309,9042409,9043409,9045409,9046409,9049409,\n9067609,9073709,9076709,9078709,9091909,9095909,9103019,9109019,9110119,\n9127219,9128219,9136319,9149419,9169619,9173719,9174719,9179719,9185819,\n9196919,9199919,9200029,9209029,9212129,9217129,9222229,9223229,9230329,\n9231329,9255529,9269629,9271729,9277729,9280829,9286829,9289829,9318139,\n9320239,9324239,9329239,9332339,9338339,9351539,9357539,9375739,9384839,\n9397939,9400049,9414149,9419149,9433349,9439349,9440449,9446449,9451549,\n9470749,9477749,9492949,9493949,9495949,9504059,9514159,9526259,9529259,\n9547459,9556559,9558559,9561659,9577759,9583859,9585859,9586859,9601069,\n9602069,9604069,9610169,9620269,9624269,9626269,9632369,9634369,9645469,\n9650569,9657569,9670769,9686869,9700079,9709079,9711179,9714179,9724279,\n9727279,9732379,9733379,9743479,9749479,9752579,9754579,9758579,9762679,\n9770779,9776779,9779779,9781879,9782879,9787879,9788879,9795979,9801089,\n9807089,9809089,9817189,9818189,9820289,9822289,9836389,9837389,9845489,\n9852589,9871789,9888889,9889889,9896989,9902099,9907099,9908099,9916199,\n9918199,9919199,9921299,9923299,9926299,9927299,9931399,9932399,9935399,\n9938399,9957599,9965699,9978799,9980899,9981899,9989899,\n781};\nint main()\n{\n    scanf(\"%d %d\",&a,&b);\n    for(int i=1;i<=781;i++)\n    if(db[i]>=a && db[i]<=b) printf(\"%d\\n\",db[i]);\n    return 0;\n}\n/*const int N=100000001;\nint P[N],a,b,ans,sum;\nbool Isp[N];\nvoid Euler(int x){>//\u6b27\u62c9\u7b5b\u6cd5\n    for(int i=2;i<=x;i++){\n        if(Isp[i]) P[++P[0]]=i;\n        for(int j=1;i*P[j]<=x && j<=P[0];j++){\n            Isp[i*P[j]]=false;\n            if(i%P[j]==0) break;\n        }\n    }\n}\nbool hw(int x)\n{\n    int x2=x,y=0;\n    while (x2!=0)\n    {\n        y=y*10+x2%10;\n        x2/=10;\n    } \n    if (x==y) return true;\n    else return false;\n}\nint main()\n{\n    memset(Isp,true,sizeof(Isp));Isp[1]=0;\n    scanf(\"%d %d\",&a,&b);\n    Euler(b);\n    for(int i=a;i<=b;i++)\n        if(hw(i) && Isp[i]){\n            printf(\"%d,\",i);\n            sum++;\n            if(sum%9==0) printf(\"\\n\");\n        }\n    printf(\"\\n%d\",sum);\n    return 0;\n}*/\n```\n",
        "postTime": 1553599327,
        "uid": 94838,
        "name": "\u26a1best_hacker\u26a1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "# \u57c3\u6c0f\u7b5b\u9009\u6cd5+\u56de\u6587\u6570\u5224\u65ad\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nbool book[100000001];\n\n// \u7528\u57c3\u6c0f\u7b5b\u6cd5\u751f\u6210\u8d28\u6570\u8868\nvoid prime(int b) {\n    //\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u5168\u90e8\u90fd\u662f\u8d28\u6570\n    memset(book, true, sizeof(book));\n    book[1]=false;//1\u4e0d\u662f\u8d28\u6570\n    int n=sqrt(b);\n    for (int i=2;i<=n;i++) {\n        if (book[i]) {\n            //\u8d28\u6570\u7684\u500d\u6570\u7edd\u5bf9\u4e0d\u662f\u8d28\u6570\uff0c\u628a\u6240\u6709\u8d28\u6570\u7684\u500d\u6570\u5168\u90e8\u8bbe\u4e3afalse\n            for (int j=2;j<=b/i;j++)\n                book[i*j]=false;  // i*j<=b \n        }\n    }\n}\n\n//\u5224\u65ad\u56de\u6587\u6570\nbool isHWS(int num) {\n\n    int temp=num,ans=0;\n    while (temp!=0) {\n        ans=ans*10+temp%10;\n        temp/=10;\n    }\n    if (ans==num)\n        return true;\n    else\n        return false;\n}\n\nint main() {\n    int a,b;\n    cin>>a>>b;\n    //b<=10000000\u8fd9\u4e2a\u5224\u65ad\u6761\u4ef6\u6765\u81ea\uff1a\u9664\u4e8611\u4ee5\u5916\uff0c\u4e00\u4e2a\u6570\u7684\u4f4d\u6570\u662f\u5076\u6570\u7684\u8bdd\uff0c\u4e0d\u53ef\u80fd\u4e3a\u56de\u6587\u6570\u7d20\u6570\u3002\n    // \u5982\u679c\u4e00\u4e2a\u56de\u6587\u7d20\u6570\u7684\u4f4d\u6570\u662f\u5076\u6570\uff0c\u5219\u5b83\u7684\u5947\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u548c\u4e0e\u5076\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u548c\u5fc5\u7136\u76f8\u7b49\uff1b\n    // \u6839\u636e\u6570\u7684\u6574\u9664\u6027\u7406\u8bba\uff0c\u5bb9\u6613\u5224\u65ad\u8fd9\u6837\u7684\u6570\u80af\u5b9a\u80fd\u88ab11\u6574\u9664\uff0c\u6240\u4ee5\u5b83\u5c31\u4e0d\u53ef\u80fd\u662f\u7d20\u6570\u3002\n    if (b>=10000000)\n        b=9999999;\n\n    prime(b);\n    \n    if(a>b)\n    \treturn 0;\n\n    if (a%2==0) a++;//\u9664\u4e862\u4ee5\u5916\uff0c2\u7684\u500d\u6570\u4e0d\u53ef\u80fd\u662f\u8d28\u6570\n    for (int i=a;i<=b;i+=2) {\n        if (book[i] && isHWS(i))\n            cout<<i<<endl;//\u5982\u679c\u65e2\u662f\u8d28\u6570\u540c\u65f6\u4e5f\u662f\u56de\u6587\u6570\uff0c\u5c31\u8f93\u51fa\u3002\n    }\n    return 0;\n}\n```",
        "postTime": 1532921447,
        "uid": 112529,
        "name": "QAQ\u6c38\u52a8\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002  \n~~\u8fd9\u91cc\u5148\u5c0f\u5c0f\u7684\u81ea\u5938\u4e00\u4e0b\uff0c\u6211\u7684\u65b9\u6cd5\u6bd4\u524d\u51e0\u4e2a\u90fd\u77ed\uff0c\u800c\u4e14\u548c\u4ed6\u4eec\u90fd\u4e0d\u4e00\u6837\u54c8\u54c8\u54c8\u54c8~~  \n\u672c\u4eba\u751f\u5e73\u6700\u8ba8\u538c\u91cd\u590d\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\u770b\u5230\u697c\u4e0b\u4e00\u5927\u5806\u6253\u8868\u3001\u5206\u522b\u5faa\u73af3\uff0c5\uff0c7\u4f4d\u7684\u6570\u7684\u4ee3\u7801\u5c31\u89c9\u5f97\uff0c\u6211\u7684\u673a\u4f1a\u6765\u4e86  \n\u2026\u2026\u7b49\u7b49\uff0c\u7b2c\u4e00\u7bc7\u9898\u89e3\u5c31\u8fd9\u4e48\u8bf4\u4f3c\u4e4e\u4e0d\u592a\u597d\u2026\u2026  \n\u6211\u7684\u601d\u8def\u548c\u697c\u4e0b\u51e0\u4e2a\u4e00\u6837\uff0c\u4f46\u662f\u5b9e\u73b0\u7528\u4e86\u4e00\u4e2a\u9012\u5f52\u7684\u51fd\u6570\uff1a  \n1.**\u521b\u9020**\u4e00\u4e2a\uff08k\u4f4d\u7684\uff09\u56de\u6587\u6570  \n2.**\u5224\u65ad**\u662f\u5426\u7b26\u5408\u7ed9\u51fa\u7684\u8303\u56f4\uff0c\u5c0f\u4e86\u5c31\u8df3\u8fc7\uff0c\u5927\u4e86\u5c31\u76f4\u63a5\u9000\u51fa  \n3.\u5982\u7b26\u5408\u8303\u56f4\uff0c\u5c31\u5224\u65ad\u662f\u5426\u662f\u8d28\u6570\uff0c\u662f\u5c31**\u8f93\u51fa**  \n**\u5176\u5b9e\u5c31\u662f\u4e2a\u6df1\u641c\u3002**\n### \u6ce8\u610f\u7279\u5224\uff1a\n1.\u9898\u76ee\u7ed9\u51fa\u7684\u8303\u56f4\u662f\uff1a**5<=l,r<=1,0000,0000**.\u6240\u4ee51\u4f4d\u7684\u56de\u6587\u8d28\u6570\u53ea\u67095\u548c7\uff1b  \n2.2\u4f4d\u7684\u56de\u6587\u8d28\u6570\u53ea\u670911\uff1b  \n3.\u901a\u8fc7\u67d0\u79cd~~\u7384\u5b66~~\u5965\u6570\u65b9\u6cd5\u53ef\u4ee5\u8bc1\u660e\u5076\u6570\u4f4d\u7684\u56de\u6587\u6570\u90fd\u4e0d\u662f\u8d28\u6570\uff0c\u53ef\u4ee5\u8df3\u8fc7\uff1b  \n4.9\u4f4d\u7684\u6570\u53ea\u67091\u4ebf\u4e00\u4e2a\uff0c\u800c\u4e14\u65e2\u4e0d\u662f\u56de\u6587\u6570\u4e5f\u4e0d\u662f\u8d28\u6570\uff0c\u6240\u4ee5\u8df3\u8fc7\u3002\n\u597d\u7684\u7ec8\u4e8e\u5230\u4ee3\u7801\u7684\u90e8\u5206\u4e86\uff08**\u5e76\u4e0d\u4f1a**\u51fa\u73b0\u5947\u602a\u7684\u51fd\u6570\uff0c\u90fd\u662f\u624b\u6253\u7684\uff0c\u5e94\u8be5\u6bd4\u8f83\u5bb9\u6613\u9605\u8bfb\uff09\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nbool isprime(int x){ //\u5224\u65ad\u8d28\u6570\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u4e0d\u7528\u6211\u591a\u89e3\u91ca\n\tif(x<2)return false;\n\tif(x==2)return true;\n\tfor(int i=2;i*i<=x;i++){\n\t\tif(x%i==0)return false;\n\t}\n\treturn true;\n}\nint l,r,x,y; //l,r\u662f\u9898\u76ee\u8303\u56f4\uff0cx,y\u662f\u4ed6\u4eec\u7684\u957f\u5ea6\nint a[10];  //\u50a8\u5b58\u521b\u9020\u51fa\u6765\u7684\u6570\nbool b=true;  //\u7528\u6765\u4f5c\u4e3a\u662f\u5426\u8df3\u51fa\u7684\u5224\u65ad\nvoid go(int x,int k){  //k\u662f\u603b\u4f4d\u6570\uff0cx\u662f\u76ee\u524d\u679a\u4e3e\u5230\u7684\u4f4d\u7f6e\n\tif(x==(k+1)/2){  //(k+1)/2\u662fk\u4f4d\u7684\u4e2d\u95f4\u6570\uff0c\u53ef\u4ee5\u81ea\u5df1\u7b97\u4e00\u4e0b\n\t\tfor(int i=k;i>x;i--){  //\u628a\u5269\u4e0b\u7684\u4f4d\u6570\u5b8c\u5584\n\t\t\ta[i]=a[k-i+1];\n\t\t}\n\t\tint shu=0;  //\u5c06\u6570\u7ec4\u8f6c\u5316\u6210\u6570\n\t\tfor(int i=1;i<=k;i++){\n\t\t\tshu=shu*10+a[i];\n\t\t}\n\t\tif(shu<l)return; //\u5c0f\u4e8el\u5c31\u8df3\u8fc7\n\t\tif(shu>r){ //\u5927\u4e8er\u5c31\u8df3\u51fa\n\t\t\tb=false;\n\t\t\treturn;\n\t\t}\n\t\tif(isprime(shu))cout<<shu<<endl; //\u662f\u8d28\u6570\u5c31\u8f93\u51fa\n\t\treturn; //\u8fd9\u4e2a\u4e00\u5b9a\u4e0d\u80fd\u6f0f\uff0c\u8981\u4e0d\u7136\u4f1a\u4e00\u76f4\u641c\u4e0b\u53bb\uff08\u672c\u4eba\u662f\u4eb2\u8eab\u4f53\u9a8c\u8fc7\u7684\u53d7\u5bb3\u8005\uff09\n\t}\n\tint i;\n\tif(x)i=0;\n\telse i=1; //\u6700\u9ad8\u4f4d\u4e0d\u80fd\u662f0\n\tfor(i=i;i<=9;i++){ //dfs(\u6df1\u5ea6\u4f18\u5148\u641c\u7d22)\u4e0b\u4e00\u4f4d\uff0c\u6ca1\u5b66\u8fc7\u53ef\u4ee5\u53bb\u770b\u4e0bP1706\n\t\tif(b==false)return; //\u5982\u679c\u5df2\u7ecf\u51fa\u73b0\u5927\u4e8er\u7684\u6570\uff0c\u5c31\u8df3\u51fa\u51fd\u6570\n\t\ta[x+1]=i;\n\t\tgo(x+1,k);\n\t}\n\treturn;\n}\nint weishu(int j){ //\u8ba1\u7b97\u4e00\u4e2a\u6570\u7684\u957f\u5ea6\n\tint b=j,count=0;\n\twhile(b>0){\n\t\tb/=10;\n\t\tcount++;\n\t}\n\treturn count;\n}\nint main(){\n\tcin>>l>>r;\n\tx=weishu(l);\n\ty=weishu(r);\n\tfor(int i=x;i<=y;i++){\n\t\tif(i==1){ //\u4e00\u4f4d\u6570\u7279\u5224\n\t\t\tif(l<=5&&r>=5)cout<<5<<endl;\n\t\t\tif(l<=7&&r>=7)cout<<7<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(i==2){ //\u4e24\u4f4d\u6570\u7279\u5224\n\t\t\tif(l<=11&&r>=11)cout<<11<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(i%2==0)continue; //\u5076\u6570\u4f4d\u5c31\u8df3\u8fc7\n\t\tif(i==9)break; //\u4e5d\u4f4d\u76f4\u63a5\u8df3\u51fa\n\t\tb=true; //\u6bcf\u6b21\u641c\u7d22\u8981\u5148\u91cd\u7f6e\u8fd9\u4e2a\u53d8\u91cf\n\t\tgo(0,i); //\u4ece\u7b2c0\u4f4d\u5f00\u59cb\u641c\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1529246519,
        "uid": 86712,
        "name": "lenfrey",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u770b\u5404\u4f4d\u5927\u4f6c\u5982\u6b64\u4f18\u79c0\uff0c\u672c\u849f\u84bb\u6df1\u611f\u65e0\u529b\u3002\n\u5176\u5b9e\u672c\u9898\u6700\u8ba8\u538c\u5c31\u662f\u5f53\u8fd0\u884c\u52309989899\u4f1aTLE\uff0c~~\u66b4\u9732\u6d4b\u8bd5\u6570\u636e~~\uff08\u4e0b\u4e86\u6d4b\u8bd5\u6570\u636e\u53ef\u4ee5\u77e5\u9053\uff0c\u540e\u9762\u6ca1\u6709\u4e86\uff0c\u4f46\u662f\u4f1a\u8d85\u65f6\uff09\n\u6240\u4ee5\u6211\u505a\u4e86\u4e2a\u5224\u65ad\uff1a\u5f53\u5b83\u4e3a\u4e0a\u8ff0\u6570\u662f\uff0c\u6211\u5c31\u8df3\u51fa\u4e0d\u5c31\u884c\u4e86\u5417\u3002~~\u6253\u8868\u601d\u60f3~~\u3002\n\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint prime(int n) {//\u5224\u5b9a\u7d20\u6570 \n\tif(n==1)//\u7279\u52241 \n\t\treturn 0;\n\tif(n%2==0)//2\u7684\u500d\u6570\u5c31\u56de\u5bb6\u5427 \n\t\treturn 0;\n\telse {//\u4e0d\u7136\u5c31\u66b4\u529b\u679a\u4e3e \n\t\tint i;\n\t\tfor(i=2; i<=sqrt(n); i++) {\n\t\t\tif(n%i==0)\n\t\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t}\n}\nint hw(int n) {//\u5224\u5b9a\u56de\u6587\uff0c\u4e0d\u61c2\u8bf7\u53c2\u8003\u6570\u5b57\u53cd\u8f6c \n\tint sum=0;\n\tint k=n;\n\twhile(n!=0) {\n\t\tsum=sum*10+n%10;\n\t\tn/=10;\n\t}\n\tif(sum==k)//\u5224\u65ad\u662f\u5426\u56de\u6587 \n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\nint main() {\n\tint i,n,sum=0,m;\n\tcin>>n>>m;  //\u8bfb\u5165\u4e24\u4e2a\u6570 \n\tfor(i=n; i<=m; i++) {\n\t\tif(i==9989900) //\u5982\u679c\u5230\u4e86\u8fd9\u4e2a\u6570\uff0c\u5c31break \n\t\t\tbreak;\n\t\tif(hw(i)&&prime(i))//\u5426\u5219\u5224\u65ad\u662f\u5426\u56de\u6587\u548c\u7d20\u6570 \n\t\t\tcout<<i<<endl;//\u8f93\u51fa\u6bcf\u4e2a\u56de\u6587\u8d28\u6570 \n\t}\n\treturn 0;//\u7ed3\u675f\u7a0b\u5e8f \n}\n```",
        "postTime": 1532870227,
        "uid": 95050,
        "name": "\u65e0\u58f0\u544a\u767d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u6b64\u9898\u5f02\u5e38\u7684\u5751\uff0c\u9700\u8981\u5f88\u591a\u7684\u5904\u7406\u548c\u7b80\u5316\uff1a\n\n1\u3001\u56de\u6587\u8d28\u6570\u4e00\u5b9a\u4e0d\u662f2\u7684\u500d\u6570\uff0c\u56e0\u4e3a\u8d28\u6570\u4e0d\u53ef\u80fd\u662f2\u7684\u500d\u6570\uff1b\n\n2\u3001\u6700\u5927\u7684\u56de\u6587\u8d28\u6570\u662f9989899\uff08\u81ea\u5df1\u6d4b\uff09\u3002\n\n\u4e8e\u662f\uff0c\u672c\u849f\u84bb\u7684\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a,b,s[10];\nbool prime(int x)//\u5224\u65ad\u8d28\u6570\n{\n\tint i;\n\tfor(i=3;i<=sqrt(x);i++)\n\t\tif(x%i==0) return 0;\n\treturn 1;\n}\nbool huiwen(int x)//\u5224\u65ad\u56de\u6587\n{\n\tint k,len=0,j;\n\twhile(x!=0)\n\t{\n\t\tlen++;\n\t\ts[len]=x%10;\n\t\tx/=10;\n\t}\n\tif(len==1) \n\t{\n\t\ts[len]=0;\n\t\treturn 1;\n\t}\n\tfor(k=1;k<=len/2;k++)\n\t\t\tif(s[k]!=s[len-k+1]) return 0;\n\tfor(k=1;k<=len;k++) s[k]=0;\n\treturn 1;\n}\nint main()\n{\n\tint i;\n\tcin>>a>>b;\n\tif(b>=9999999) b=9999999; //\u6700\u5927\u7684\u56de\u6587\u8d28\u6570\u5904\u7406\n\tif(a%2==0)a++;//\u4ece2\u7684\u500d\u6570+1\u5f00\u59cb\u641c\u7d22\n\tfor(i=a;i<=b;i+=2)//2\u7684\u500d\u6570\u4e0d\u4e3a\u56de\u6587\u8d28\u6570\n\t{\n\t\tif(huiwen(i)==0) continue;\n\t\telse if(prime(i)) cout<<i<<endl; \n\t}\n\treturn 0;\n}\n```\n\u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u81ea\u5df1\u7ec4\u6210\u56de\u6587\u6570\u518d\u5224\u65ad\u662f\u5426\u4e3a\u8d28\u6570\u6765\u505a\uff0c\u53ef\u4ee5\u53bb\u770b\u770b\u5176\u5b83\u7684dalao\u7684\u4ee3\u7801qwq!\n",
        "postTime": 1533956382,
        "uid": 119580,
        "name": "\u5047\u7684\u592a\u771f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u8981\u662f\u679a\u4e3e\u51fa2-10,000,000\u4e4b\u5185\u6240\u6709\u7684\u8d28\u6570\u7684\u8bdd\u518d\u6328\u4e2a\u5224\u65ad\u662f\u5426\u662f\u56de\u6587\u6570\u7684\u8bdd\uff0c\u5fc5\u5b9a\u4f1a\u8d85\u65f6\u3002\u4f46\u662f\u6211\u4eec\u53ef\u80fd\u4f1a\u60f3\u5230\uff0c\u5982\u679c\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff08\u5728\u8bc4\u6d4b\u673a\u5916\uff09\u679a\u4e3e\u51fa\u56de\u6587\u8d28\u6570\u4ee5\u540e\uff0c\u628a\u8fd9\u4e9b\u56de\u6587\u8d28\u6570**\u6253\u5230\u4ee3\u7801\u91cc**\u4f1a\u600e\u4e48\u6837\u5462\uff1f\n\n\u4e0b\u9762\u662f\u4ea7\u751f\u56de\u6587\u8d28\u6570\u7684\u4ee3\u7801\uff0c\u5934\u6587\u4ef6\u5df2\u7701\u7565\u3002\n\n\nconst int m = 10000000, sqrtm = 3163; //sqrtm = (int)sqrt(m)\uff0c\u4e8b\u5148\u8ba1\u7b97\u4ee5\u514d\u5728\u5faa\u73af\u6761\u4ef6\u5224\u65ad\u7684\u65f6\u5019\u6d6a\u8d39\u65f6\u95f4\n\n    \n    \n\n```cpp\n    bool w[m + 10]; //w[i]\u8bb0\u5f55i\u662f\u5426\u4e3a\u8d28\u6570\n    bool ispal(int w) { //\u662f\u5426\u662f\u56de\u6587\u6570\n        string p = to_string(w);\n        string k(p); reverse(k.begin(), k.end());\n        return p == k; //k\u662fp\u5012\u8fc7\u6765\uff0c\u5982\u679ck==p\u90a3\u4e48p\u4e00\u5b9a\u662f\u56de\u6587\n    }\n    int main() {\n        memset(w, 1, sizeof(w));\n        freopen(\"prim.txt\", \"w\", stdout);\n        w[0] = w[1] = false;\n        for (int i = 2; i <= sqrtm; ++i) { //\u7b5b\u6cd5\u4e3b\u4f53\n            if (!w[i]) continue;\n            for (int j = i + i; j < m; j += i)\n                w[j] = false;\n        }\n        cout << \"int p[] = {\";\n        for (int i = 2; i < m; ++i) {\n            if (w[i] && ispal(i)) cout << i << \", \"; //\u8f93\u51fa\n        }\n        cout << \"};\";\n    }\n```\n\u6709\u4e86\u8fd9\u4e2a\u4ee5\u540e\uff0c\u5269\u4e0b\u7684\u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\uff1a\n\n    \n```cpp\n    int p[] = { /*\u592a\u957f\uff0c\u7701\u7565*/ };\n    int main() {\n        int l, r; cin >> l >> r;\n        for (int i = 0; i < sizeof(p) / sizeof(int); ++i) //sizeof(p) / sizeof(int)\u662fp\u6570\u7ec4\u91cc\u7684\u5143\u7d20\u4e2a\u6570\n            if (l <= p[i] && p[i] <= r) cout << p[i] << '\\n';\n        return 0;\n}\n```",
        "postTime": 1515506053,
        "uid": 64757,
        "name": "huang_yue",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u66b4\u529b\u6253\u8868\u9898\u76ee\n# \u7b2c\u4e00\u6b65\uff0c\u628a\u4e00\u4ebf\u4ee5\u5185\u7684\u8d28\u6570\u6253\u51fa\u6765\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n#define maxn 100000000\nbool k[maxn];//\u8fd9\u91cc\u7528int\u7c7b\u578b\u7684\u6570\u7ec4\u592a\u5927\uff0c\u56e0\u6b64\u4f7f\u7528bool\u7c7b\u578b\u7684\u6570\u7ec4\nint cnt;\nint main(){\n\tfreopen(\"1.in\",\"w\",stdout);//\u628a\u6253\u8868\u7ed3\u679c\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\n\tfor(int i=2;i<=maxn;i++){\n\tif(!k[i]){\n\t\tint j=1;\n\t\tcnt++;\n\t\tprintf(\"%d \",i);\n\t\twhile(i*j<=maxn){\n\t\t\tk[i*j]=true;\n\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n} \n```\n# \u7b2c\u4e8c\u6b65\uff0c\u628a\u5f97\u5230\u7684\u8d28\u6570\u4e2d\u7684\u56de\u6587\u8d28\u6570\u627e\u51fa\u6765\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nchar k[100];\nint ans;//\u8bb0\u5f55\u56de\u6587\u8d28\u6570\u7684\u4e2a\u6570\n\nint main(){\n\tfreopen(\"1.in\",\"r\",stdin);\n\tfreopen(\"2.out\",\"w\",stdout);\n\twhile(scanf(\"%s\",k)!=EOF){\n\t\tint n=strlen(k);\n\t\tint flg=0;\n\t\tfor(int i=0;i<=n/2;i++){\n\t\t\tif(k[i]!=k[n-i-1]) {\n\t\t\t\tflg=1;break;\t\n\t\t\t}\n\t\t}\n\t\tif(flg==0) {\n\t\t\tans++;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tprintf(\"%c\",k[i]);\n\t\t\t}\n\t\t\tprintf(\",\");\n\t\t}\n\t\tmemset(k,0,sizeof(k));\n\t}\n\tprintf(\"\\n\\n%d\",ans);\n\treturn 0;\n}\n```\n# \u7b2c\u4e09\u6b65\uff0c\u6253\u51fa\u6700\u7ec8\u7a0b\u5e8f\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint ans[1000]={0,2,3,5,7,11,101,131,151,181,191,313,353,373,383,727,757,787,797,919,929,10301,10501,10601,11311,11411,12421,12721,12821,13331,13831,13931,14341,14741,15451,15551,16061,16361,16561,16661,17471,17971,18181,18481,19391,19891,19991,30103,30203,30403,30703,30803,31013,31513,32323,32423,33533,34543,34843,35053,35153,35353,35753,36263,36563,37273,37573,38083,38183,38783,39293,70207,70507,70607,71317,71917,72227,72727,73037,73237,73637,74047,74747,75557,76367,76667,77377,77477,77977,78487,78787,78887,79397,79697,79997,90709,91019,93139,93239,93739,94049,94349,94649,94849,94949,95959,96269,96469,96769,97379,97579,97879,98389,98689,1003001,1008001,1022201,1028201,1035301,1043401,1055501,1062601,1065601,1074701,1082801,1085801,1092901,1093901,1114111,1117111,1120211,1123211,1126211,1129211,1134311,1145411,1150511,1153511,1160611,1163611,1175711,1177711,1178711,1180811,1183811,1186811,1190911,1193911,1196911,1201021,1208021,1212121,1215121,1218121,1221221,1235321,1242421,1243421,1245421,1250521,1253521,1257521,1262621,1268621,1273721,1276721,1278721,1280821,1281821,1286821,1287821,1300031,1303031,1311131,1317131,1327231,1328231,1333331,1335331,1338331,1343431,1360631,1362631,1363631,1371731,1374731,1390931,1407041,1409041,1411141,1412141,1422241,1437341,1444441,1447441,1452541,1456541,1461641,1463641,1464641,1469641,1486841,1489841,1490941,1496941,1508051,1513151,1520251,1532351,1535351,1542451,1548451,1550551,1551551,1556551,1557551,1565651,1572751,1579751,1580851,1583851,1589851,1594951,1597951,1598951,1600061,1609061,1611161,1616161,1628261,1630361,1633361,1640461,1643461,1646461,1654561,1657561,1658561,1660661,1670761,1684861,1685861,1688861,1695961,1703071,1707071,1712171,1714171,1730371,1734371,1737371,1748471,1755571,1761671,1764671,1777771,1793971,1802081,1805081,1820281,1823281,1824281,1826281,1829281,1831381,1832381,1842481,1851581,1853581,1856581,1865681,1876781,1878781,1879781,1880881,1881881,1883881,1884881,1895981,1903091,1908091,1909091,1917191,1924291,1930391,1936391,1941491,1951591,1952591,1957591,1958591,1963691,1968691,1969691,1970791,1976791,1981891,1982891,1984891,1987891,1988891,1993991,1995991,1998991,3001003,3002003,3007003,3016103,3026203,3064603,3065603,3072703,3073703,3075703,3083803,3089803,3091903,3095903,3103013,3106013,3127213,3135313,3140413,3155513,3158513,3160613,3166613,3181813,3187813,3193913,3196913,3198913,3211123,3212123,3218123,3222223,3223223,3228223,3233323,3236323,3241423,3245423,3252523,3256523,3258523,3260623,3267623,3272723,3283823,3285823,3286823,3288823,3291923,3293923,3304033,3305033,3307033,3310133,3315133,3319133,3321233,3329233,3331333,3337333,3343433,3353533,3362633,3364633,3365633,3368633,3380833,3391933,3392933,3400043,3411143,3417143,3424243,3425243,3427243,3439343,3441443,3443443,3444443,3447443,3449443,3452543,3460643,3466643,3470743,3479743,3485843,3487843,3503053,3515153,3517153,3528253,3541453,3553553,3558553,3563653,3569653,3586853,3589853,3590953,3591953,3594953,3601063,3607063,3618163,3621263,3627263,3635363,3643463,3646463,3670763,3673763,3680863,3689863,3698963,3708073,3709073,3716173,3717173,3721273,3722273,3728273,3732373,3743473,3746473,3762673,3763673,3765673,3768673,3769673,3773773,3774773,3781873,3784873,3792973,3793973,3799973,3804083,3806083,3812183,3814183,3826283,3829283,3836383,3842483,3853583,3858583,3863683,3864683,3867683,3869683,3871783,3878783,3893983,3899983,3913193,3916193,3918193,3924293,3927293,3931393,3938393,3942493,3946493,3948493,3964693,3970793,3983893,3991993,3994993,3997993,3998993,7014107,7035307,7036307,7041407,7046407,7057507,7065607,7069607,7073707,7079707,7082807,7084807,7087807,7093907,7096907,7100017,7114117,7115117,7118117,7129217,7134317,7136317,7141417,7145417,7155517,7156517,7158517,7159517,7177717,7190917,7194917,7215127,7226227,7246427,7249427,7250527,7256527,7257527,7261627,7267627,7276727,7278727,7291927,7300037,7302037,7310137,7314137,7324237,7327237,7347437,7352537,7354537,7362637,7365637,7381837,7388837,7392937,7401047,7403047,7409047,7415147,7434347,7436347,7439347,7452547,7461647,7466647,7472747,7475747,7485847,7486847,7489847,7493947,7507057,7508057,7518157,7519157,7521257,7527257,7540457,7562657,7564657,7576757,7586857,7592957,7594957,7600067,7611167,7619167,7622267,7630367,7632367,7644467,7654567,7662667,7665667,7666667,7668667,7669667,7674767,7681867,7690967,7693967,7696967,7715177,7718177,7722277,7729277,7733377,7742477,7747477,7750577,7758577,7764677,7772777,7774777,7778777,7782877,7783877,7791977,7794977,7807087,7819187,7820287,7821287,7831387,7832387,7838387,7843487,7850587,7856587,7865687,7867687,7868687,7873787,7884887,7891987,7897987,7913197,7916197,7930397,7933397,7935397,7938397,7941497,7943497,7949497,7957597,7958597,7960697,7977797,7984897,7985897,7987897,7996997,9002009,9015109,9024209,9037309,9042409,9043409,9045409,9046409,9049409,9067609,9073709,9076709,9078709,9091909,9095909,9103019,9109019,9110119,9127219,9128219,9136319,9149419,9169619,9173719,9174719,9179719,9185819,9196919,9199919,9200029,9209029,9212129,9217129,9222229,9223229,9230329,9231329,9255529,9269629,9271729,9277729,9280829,9286829,9289829,9318139,9320239,9324239,9329239,9332339,9338339,9351539,9357539,9375739,9384839,9397939,9400049,9414149,9419149,9433349,9439349,9440449,9446449,9451549,9470749,9477749,9492949,9493949,9495949,9504059,9514159,9526259,9529259,9547459,9556559,9558559,9561659,9577759,9583859,9585859,9586859,9601069,9602069,9604069,9610169,9620269,9624269,9626269,9632369,9634369,9645469,9650569,9657569,9670769,9686869,9700079,9709079,9711179,9714179,9724279,9727279,9732379,9733379,9743479,9749479,9752579,9754579,9758579,9762679,9770779,9776779,9779779,9781879,9782879,9787879,9788879,9795979,9801089,9807089,9809089,9817189,9818189,9820289,9822289,9836389,9837389,9845489,9852589,9871789,9888889,9889889,9896989,9902099,9907099,9908099,9916199,9918199,9919199,9921299,9923299,9926299,9927299,9931399,9932399,9935399,9938399,9957599,9965699,9978799,9980899,9981899,9989899};\n\nint main(){\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n    for(int i=1;i<=781;i++){//781\u662f\u4e0a\u4e2a\u7a0b\u5e8f\u4e2d\u6c42\u51fa\u7684\u56de\u6587\u8d28\u6570\u4e2a\u6570\n    if(ans[i]>=a&&ans[i]<=b) printf(\"%d\\n\",ans[i]);\n    }\n    return 0;\n}\n```\n## OK\uff0c\u8fd9\u6837\u7a0b\u5e8f\u5c31\u5199\u5b8c\u4e86\n\u6ce8\uff1a\u6253\u8868\u65f6\u5982\u679c\u7528\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u7684\u8bdd\uff0c\u4f1a\u6bd4\u76f4\u63a5\u8f93\u5165\u8f93\u51fa\u66f4\u5feb\u4e00\u70b9\n",
        "postTime": 1546429362,
        "uid": 69422,
        "name": "xyzhouh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011\u66b4\u529b\u6253\u8868"
    },
    {
        "content": "    \n```cpp\n//C\u8bed\u8a00\u9898\u89e3\uff1a\n//\u9996\u5148\u5728\u56de\u6587\u6570\u4e2d\uff0c\u5982\u679c\u4f4d\u6570\u4e3a\u5076\u6570\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e9b\u56de\u6587\u6570\u90fd\u53ef\u4ee5\u88ab11\u6574\u9664\uff0c\u59821001\u30011221\u3001345543\u90fd\u662f11\u7684\u500d\u6570\n//\u6240\u4ee5\u56de\u6587\u6570\u4f4d\u6570\u4e3a\u5076\u6570\u65f6\uff0c\u53ea\u670911\u4e3a\u7d20\u6570\u3002\n#include<stdio.h>\nint m[100000],n[100000];//\u5b9a\u4e49\u6570\u7ec4\u5b58\u6240\u6709\u56de\u6587\u6570\u3002\nint pd(int a)\uff1f//\u5224\u65ad\u8d28\u6570\n{\n    int i;\n    for(i=2;i*i<=a;i++)\n    if(a%i==0)return 0;\n    return 1;\n}\nint main()\n{\n    long long i1,i2,i3,i4,i5,a,b,t=1,tt=1,i;\n    scanf(\"%lld %lld\",&a,&b);\uff1f//\u533a\u95f4\n    for(i1=0;i1<=9;i1++)\n    for(i2=0;i2<=9;i2++)\n    for(i3=0;i3<=9;i3++)\n    for(i4=0;i4<=9;i4++)\n    for(i5=0;i5<=9;i5++)\n    {\n        if(i4==0&&i3==0&&i2==0&&i1==0)m[t++]=i5;\n        else if(i3==0&&i2==0&&i1==0)m[t++]=i5*10+i4*101;\n        else if(i2==0&&i1==0)m[t++]=i5*100+i4*1010+i3*10001;\n        else if(i1==0)m[t++]=i5*1000+i4*10100+i3*100010+i2*1000001;\n        else m[t++]=i5*10000+i4*101000+i3*1000100+i2*10000010+i1*100000001;\n    }\n```\n/\\*\u5f53\u56de\u6587\u6570\u4f4d\u6570\u4e3a\u5947\u6570\u65f6\u7684\u60c5\u51b5\u3002\u56e0\u4e3a\u6700\u5927\u6570\u503c\u4e3a\u4e00\u4ebf\uff0c\u6709\u4e5d\u4f4d\uff0c\u6211\u4eec\u4e0d\u59a8\u8bbe\u4e94\u4e2a\u6570\u5b57\u6765\u8868\u793a\u56de\u6587\u6570\u3002\n\u7528\u4e94\u91cd\u5faa\u73af\u8868\u793a\u51fa\u6240\u6709\u56de\u6587\u6570\uff0c\u5e76\u8ba8\u8bba\u56de\u6587\u6570\u662f1\u4f4d\u30013\u4f4d\u30015\u4f4d\u30017\u4f4d\u30019\u4f4d\u7684\u60c5\u51b5\u3002\u5b58\u5165\u6570\u7ec4m\\*/\n\n\n    \n   \n```cpp\n    t--;//m\u6570\u7ec4\u6709t\u4e2a\u6570\n    for(i=1;i<=t;i++)\n    if(pd(m[i])==1)n[tt++]=m[i];//\u628a\u56de\u6587\u6570\u4e2d\u7684\u8d28\u6570\u627e\u51fa\u6765\uff0c\u5b58\u5165n\u6570\u7ec4\n    tt--;\n    for(i=1;i<=tt;i++)\n    if(n[i]>=a&&n[i]<=b)\n    {\n     printf(\"%d\\n\",n[i]);\n     if(i==6)printf(\"11\\n\");//\u5f53\u56de\u6587\u8d28\u6570\u5728\u8303\u56f4\u5185\u65f6\uff0c\u8f93\u51fa\uff0c\u5f53101\u53ef\u4ee5\u8f93\u51fa\u65f6\uff0c11\u80af\u5b9a\u53ef\u4ee5\u8f93\u51fa\uff0c\u52a0\u8f93\u51fa11.\n    }\n    return 0;\n}\n```",
        "postTime": 1475675301,
        "uid": 20822,
        "name": "cn_lemon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u70b9\n\n\u600e\u4e48\u8bf4\u5462\n\n\u6709\u70b9__\u5475\u5475O(\u2229_\u2229)O~\n\n~~\u5728\u51a5\u601d\u82e6\u60f3\u51e0\u5929\u540e\uff0c~~\u6211\u6bc5\u7136\u51b3\u7136\u7684\u51b3\u5b9a~~~~~~~~\n\n\n\n\n\n\n\n**\u6253\u8868**\n\n\u771f\u7684\u662f\uff0c\u5475\u5475\n\n\u4e0b\u9762\u662f\u672c\u849f\u84bb\u7684\u6253\u8868\u4ee3\u7801\n\n\u4ee5\u4e0b\u662f\u534e\u4e3d\u7684\u5206\u5272\u7ebf\n\n\n\n------------\n\n\n------------\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long a[3000]={};\nint main()\n{\n\tint x,y,i;\n\tcin>>x>>y;\n\tfor(i=0;a[i]<=y;i++)\n\t{\n\t\tif(a[i]>=x) cout<<a[i]<<endl;\n\t}\n}\n```\n\n------------\n",
        "postTime": 1540430710,
        "uid": 111910,
        "name": "\u662f\u6bd4\u5229\u554a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83H2O\u7684\uff0c\u6bd5\u7adf\u672c\u849f\u84bb\u90fd\u505a\u51fa\u6765\u4e86\uff0c\u5148\u5224\u65ad\u56de\u6587\uff0c\u5728\u5224\u65ad\u7d20\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6bd5\u7adf\u56de\u6587\u53ef\u4ee5\u7b5b\u6389\u5f88\u591a\u7d20\u6570\u3002\u5224\u65ad\u7d20\u6570\u65b9\u6cd5\u5219\u4f7f\u7528\u5927\u4e8e5\u7684\u7d20\u6570\u90fd\u662f6\u7684\u500d\u6570+-1\uff0c\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\uff1b\n```CPP\n#include<bits/stdc++.h>\nusing namespace std;\nint p(int n)\n{\n\tint k=0;\n\tint m=n;\n\twhile(n!=0)\n\t{\n\t\tk=k*10+n%10;\n\t\tn=n/10;\n\t}\n\tif(k==m) return 1;\n\treturn 0;\n}\nvoid prime(int a) {\n    if(a==1||(a%6!=1&&a%6!=5)) return;\n    if(a==2||a==3) {\n    \tprintf(\"%d\\n\",a);\n\t\treturn;\n\t}\n    for(int i=5;i<=floor(sqrt(a));i+=6)\n    {\n\t\tif(a%i==0||a%(i+2)==0) return;\n    }\n    printf(\"%d\\n\",a);\n    return;\n}\nint main()\n{\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=n;i<=m;i++)\n\t{\n\t\tif(i==9989900) break;\n\t\tif(p(i))prime(i);\n\t\telse continue;\n\t}\n\treturn 0;\n}\n```\n\u671b\u5927\u4f6c\u901a\u8fc7\u9898\u89e3\uff0c\u8c22\u8c22\uff0c\uff08\u9003",
        "postTime": 1533608923,
        "uid": 107377,
        "name": "Cryin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u5148\u5224\u65ad\u662f\u4e0d\u662f\u56de\u6587\u6570\u518d\u5224\u65ad\u662f\u4e0d\u662f\u7d20\u6570\u3002\u76f4\u63a5\u8d70\u7684\u8bdd\u80af\u5b9a\u4f1a\u8d85\u5e02\uff0c\u5c06ab\u4fe9\u4e2a\u503c\u505a\u9002\u5f53\u7684\u622a\u53d6\uff0c\u6bcf\u6b21\u90fd\u662f\u5947\u6570\u7684\u5faa\u73af\u904d\u5386\n```C++\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\n\nint isprime(int a)//\u5224\u65ad\u662f\u5426\u4e3a\u7d20\u6570\u7684\u4ee3\u7801\n{\nfor(int i=2;i<=sqrt(a);i++)\nif(a%i==0) return 0;\nreturn 1;\n}\n\nbool isRev(int x){//\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570\u7684\u4ee3\u7801\n\tint t = x;\n\tint value = 0;\n\twhile (x / 10){\n\t\tvalue = 10 * value + x % 10;\n\t\tx /=  10;\n\t}\n\tif(value*10 + x == t) return 1;\n\telse return 0;\n}\n\nint main()\n{\n\tint a,b;\n\tcin>>a>>b;\n    //\u6295\u673a\u53d6\u5de7\uff0c\u5c06a\u53d8\u4e3a\u5947\u6570\uff0c\u5c06\u5f88\u5927\u7684b\u53d8\u4e3a9999999\uff0c\u6bcf\u6b21\u5faa\u73af\uff0b2\uff0c\u65b0\u5224\u65ad\u662f\u4e0d\u662f\u56de\u6587\u6570\uff0c\u5728\u5224\u65ad\u662f\u4e0d\u662f\u7d20\u6570\n\tif(a%2==0) a+=1;\n\tif(b>9999999) b=9999999;\n\tfor(int i=a;i<=b;i+=2){\n\t\tif(isRev(i)){\n\t\t\tif(isprime(i)){\n\t\t\t\tcout<<i<<endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1537948381,
        "uid": 133969,
        "name": "Sail",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u5bb9\u6613\u773c\u9ad8\u624b\u4f4eqwq \u524d\u524d\u540e\u540e\u6539\u4e86\u597d\u591a\u904d\uff0c\u771f\u7684\u6ca1\u60f3\u5230\u88ab\u8fd9\u6837\u4e00\u9053\u9898\u5361\u4e86\u5f88\u4e45\u3002\u3002\u3002 \u8fd9\u662f1.0\u7684\u4ee3\u7801\n```cpp\n#include<iostream>\nusing namespace std;\n#include<cstdio>\n#include<cmath>    \nint a[100000001]={1};\nbool find(int x)\n{\n    if (x<=1) return 0;\n    for(int i=2;i<=sqrt(x);i++)\n    {\n        if (x%i==0) return 0;\n    }\n    return 1;\n}\nbool dou(int x)\n{\n    int a[11],i=1;\n    while (x!=0)\n    {\n        a[i]=x%10;\n        x=x/10;\n        i++;\n    }\n        i--;\n    for(int j=1;j<=i/2;j++)\n    {\n        if (a[j]!=a[i-j+1]) return 0;\n    }\n    return 1;\n}\nint main()\n{\n    int st,en;\n    cin>>st>>en;\n    for(int i=st;i<=en;i++)\n    {\n        if (dou(i)&a[i]==1) cout<<i<<endl;\n\n    }\n    return 0;\n\n}\n```\n\n\n\u5f88\u660e\u663etle\u4e86\u5bf9\u5427\u3002\u3002\u3002 2.0\uff0c\u52a0\u4e86\u4e00\u4e2a\u7ebf\u6027\u7b5b \u4e5f\u4e0d\u77e5\u9053\u662f\u5199\u7684\u592a\u4e11\u8fd8\u662f\u3002\u3002\u3002 \u86d9\u58f0\u4e00\u7247\u3002\u3002\u3002\u3002\uff08\u4e0d\u5c55\u793a\u4e86\uff09 \u4e8e\u662f\u6211\u6253\u7b97\u91cd\u65b0\u6784\u601d\u4e00\u4e0b\n\n3.0 \u8fd9\u4e2a\u662f\u628a\u6240\u6709\u7684\u5076\u4f4d\u6570\u5168\u90e8\u5220\u9664\u4e86\uff0c\u56e0\u4e3a\u3002\u3002\u3002 \n\n\u6240\u6709\u7684\u5076\u4f4d\u6570\u9664\u4e8611\u90fd\u4e0d\u662f\u8d28\u6570\uff08\u90fd\u53ef\u4ee5\u88ab11\u6574\u9664\uff09\n\n\u8bdd\u8bf4\u5224\u65ad\u662f\u4e0d\u662f\u80fd\u88ab11\u6574\u9664\u7684\u65b9\u6cd5\u662f \u5947\u6570\u4f4d\u6570\u76f8\u52a0-\u5076\u6570\u4f4d\u6570\u76f8\u52a0\u770b\u4e00\u770b\u662f\u4e0d\u662f=11\u7684\u500d\u6570 \u4f8b\u598213577531 \u5947\u6570\u4f4d\u6570\u76f8\u52a0=1+3+5+7 \u5076\u6570\u4f4d\u6570\u76f8\u52a0=1+3+5+7 \u4e24\u4e2a\u5f0f\u5b50\u5dee\u662f0\u662f11\u7684\u500d\u6570 \u6240\u4ee5\u80fd\u88ab11\u6574\u9664\uff08\u5c0f\u5b66\u5965\u6570\uff09\n\n\u4f46\u662f\u6211\u6f0f\u4e86\u4e00\u70b9\uff0c\u5176\u5b9e\u5bf9\u4e8e\u5076\u6570\u7684\u5224\u65ad\u6240\u7528\u7684\u65f6\u95f4\u4e5f\u662f\u5f88\u957f\u7684\uff0c\u6240\u4ee5\u5373\u4f7f\u4f18\u5316\u5230\u8fd9\u6837\uff0c\u8fd8\u662ftle\u3002\u3002\u3002\n\n\u4e8e\u662f4.0\uff01\uff01\uff01\uff01\n\n\uff08\u53c2\u8003\u4e0a\u9762\u67d0\u4f4d\u5927\u4f6c\u7684\u6784\u9020\u56de\u6587\u6570\u7684\u65b9\u6cd5\uff09 \u5185\u542b\u6211\u7684\u5c0f\u9519\u8bef\u89e3\u6790\uff1a\uff09\n\n```\n#include<iostream>\nusing namespace std;\n#include<cstdio>\n#include<cmath>\n    int st,en;\nint wei(int x)//\u8ba1\u7b97\u6570\u4f4d \n{    \n    int sum=0;\n    while (x!=0)\n    {\n        sum++;\n        x=x/10;\n    }\n    return sum;\n}\nbool find(int x)//\u627e\u8d28\u6570\uff0c\u8fd9\u91cc\u5077\u4e86\u4e2a\u61d2\uff0c\u7ebf\u6027\u7b5b\u7684\u8bdd\u53ef\u4ee5\u66f4\u5feb\u4e00\u70b9 \n{\n    if (x<=1) return 0;\n    for(int i=2;i<=sqrt(x);i++)\n    {\n        if (x%i==0) return 0;\n    }\n    return 1;\n}\n\nvoid wri(int x)//\u5224\u65ad\u662f\u4e0d\u662f\u8d28\u6570\uff0c\u5982\u679c\u662f\u8d28\u6570\uff0c\u90a3\u4e48\u8f93\u51fa \n{\n    if(find(x)==1)//\u6ce8\u610f\u51fd\u6570\u8c03\u7528\u987a\u5e8f\n    cout<<x<<endl; return;\n}\nvoid zushu3(int x,int y)//\u7ec4\u4e00\u4e2a\u4e09\u4f4d\u56de\u6587\u6570\uff0c\u8fd9\u91cc\u6211\u4e0d\u60f3\u60f3\u592a\u591a\uff0c\u4e8e\u662f\u5c31\u76f4\u63a5\u5206\u4e86\u4e09\u7c7b\uff0c\u6bcf\u4e00\u7c7b\u590d\u5236\u7c98\u8d34\u4e86\u4e00\u4e0b\uff0c\u770b\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u5199\u8d77\u6765\u6bd4\u8f83\u7b80\u5355 \n{\n\n    for(int i=1;i<=9;i+=2)\n    {\n        for(int j=0;j<=9;j++)\n        {        \n        if((i*100+j*10+i)<=en&&(i*100+j*10+i)>=st)//\u7406\u8bba\u4e0a\u53ef\u4ee5\u518d\u4f18\u5316\uff0c\u628a\u8303\u56f4\u9650\u5236\u5728\u5faa\u73af\u91cc\u9762 \n        wri(i*100+j*10+i);\n\n        }\n    }\n}\n\nvoid zushu5(int x,int y)//\u7ec4\u4e00\u4e2a\u4e94\u4f4d\u56de\u6587\u6570\n{\n    for(int i=1;i<=9;i+=2)\n    {\n        for(int j=0;j<=9;j++)\n        {\n            for(int k=0;k<=9;k++)\n            if((i*10000+j*1000+k*100+j*10+i)<=en&&(i*10000+j*1000+k*100+j*10+i)>=st)\n            wri(i*10000+j*1000+k*100+j*10+i);\n        }\n\n    }\n}\n\nvoid zushu7(int x,int y)//\u7ec4\u4e00\u4e2a\u4e03\u4f4d\u56de\u6587\u6570\n{\n    for(int i=1;i<=9;i+=2)\n    {\n        for(int j=0;j<=9;j++)\n            for(int k=0;k<=9;k++)\n                for(int l=0;l<=9;l++)\n        if((i*1000000+j*100000+k*10000+l*1000+k*100+j*10+i)<=en&&(i*1000000+j*100000+k*10000+l*1000+k*100+j*10+i)>=st)\n        wri(i*1000000+j*100000+k*10000+l*1000+k*100+j*10+i);\n    }\n}\n\n\n\n\nint main()\n{\n\n    int ls,le;\n    cin>>st>>en;\n    ls=wei(st);\n    le=wei(en);\n    for(int i=ls;i<=le;i++)\n    {\n        if(i==1) \n        {\n            if(st==5)cout<<5<<endl<<7<<endl;\n            else cout<<7<<endl;\n        }\n        if(i==2) \n        {\n            if(st<=11)cout<<11<<endl;\n        }\n        if(i==3) zushu3(101,997);//\u5f53\u7136\uff0c\u8fd9\u91cc\u4e5f\u5077\u4e86\u4e2a\u61d2\uff0c\u5982\u679cen=500\u7684\u8bdd\uff0c\u6839\u672c\u4e0d\u7528\u7ec4\u6570\u7ec4\u5230997 \n        if(i==5) zushu5(10001,99997);\n        if(i==7) zushu7(1000001,9999997);\n    }\n\n    return 0;\n}\n```\n\n\u5f53\u7136\u4e86\uff0c\u8fd9\u79cd\u5199\u6cd5\u5728\u8003\u573a\u4e0a\u5f53\u7136\u662f\u8981\u70b8\u9505\u4e86\uff0c\u56e0\u4e3a\u592a\u9ebb\u70e6\u4e86\u800c\u4e14\u5f88\u5bb9\u6613\u624b\u6ed1\u3002\u3002\u3002\n\n\u6240\u4ee5\u63d0\u9192\u5927\u5bb6\u591a\u601d\u8003 \n\n\u800c\u4e14\u63d0\u9192\u5927\u5bb6\u5982\u679c\u5199\u8fd9\u4e48\u957f\u7684\u7a0b\u5e8f\u7684\u65f6\u5019\u4e00\u5b9a\u8981\uff01\uff01\uff01\uff01 \n\n\u6309\u65f6\u4fdd\u5b58\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u6c5f\u67ab\u6e14\u706b\u5bf9\u6101\u7720\uff0c\u795d\u4f60ac\u4e00\u4e07\u5e74",
        "postTime": 1545064174,
        "uid": 22463,
        "name": "shangkevin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u539f\u672c\u53ef\u4ee5\u6253\u8868\u8fc7\u7684\uff0c\u4e0d\u8fc7\u8fd9\u6837\u5b50\u591a\u6ca1\u610f\u601d\n\n\u4e3a\u4e86\u5199\u8fd9\u9053\u9898\uff0c\u6211\u7279\u610f\u628aint\u7c7b\u578b\u7ed9\u91cd\u5199\u4e86\u4e00\u904d\uff0c\u52a0\u4e86\u4e00\u4e9b\u529f\u80fd\uff0c\u5148\u796d\u51faAC\u4ee3\u7801\n```cpp\n#include <stdio.h>\n#include <math.h>\n\nclass binInt\n{\npublic:\n\tbinInt();\n\tvoid set(int n);\n\tint get();\n\tint getLenth();\n\tvoid invert();           // invert the num[] and change to num[]\n\tint checkhuiwen();\n\tint checksushu();\n\tvoid madehuiwen(int mode);\t// 1 is HUiwen include middle num\uff0c0 is mirror huiwen\nprivate:\n\tint number;\t\t// save num mode\n\tint num[20];\t// save num[] mode\n\tint length;\t\t// the length is real length\n\tvoid shuzuhua();// let the num mode to num[]mode\n\tvoid shuzihua();// let the num[] mode to num mode\n};\nbinInt::binInt()\n{\n\tnumber = 0;\n\tlength = 0;\n}\nvoid binInt::set(int n)\n{\n\tnumber = n;\n\tlength = 0;\n\tshuzuhua();\n}\nint binInt::get()\n{\n\treturn number;\n}\nint binInt::getLenth()\n{\n\treturn length;\n}\nvoid binInt::invert()\n{\n    for (int s = 0; s < length / 2; s++)\n    {\n        int temp = num[s];\n        num[s] = num[length - 1 - s];\n        num[length - 1 - s] = temp;\n    }\n    shuzihua();\n}\nint binInt::checkhuiwen()\n{\n\tfor (int s = 0; s < length; s++)\n\t{\n\t\tif (num[s] != num[length - 1 - s])\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\nint binInt::checksushu()\n{\n\tfor (int s = 2; s <= sqrt(number); s++)\n\t{\n\t\tif (number % s == 0)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\nvoid binInt::shuzuhua()\n{\n\tint n = number;\n\tfor (int s = 0; ; s++)\n\t{\n\t\tif (n == 0)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tint temp;\n\t\ttemp = n % 10;\n\t\tlength++;\n\t\tnum[s] = temp;\n\t\tn /= 10;\n\t}\n\tinvert();\n}\nvoid binInt::shuzihua()\n{\n\tnumber = 0;\n\tfor (int s = 1, len = 0; len < length; s *= 10, len++)\n\t{\n\t\tnumber += num[len] * s;\n\t}\n}\nvoid binInt::madehuiwen(int mode)\n{\n\tif (mode == 0)\n\t{\n\t\tlength *= 2;\n\t\tfor (int s = 0; s < length / 2; s++)\n\t\t{\n\t\t\tnum[length - 1 - s] = num[s];\n\t\t}\n\t}\n\tif (mode == 1)\n\t{\n\t\tlength *= 2;\n\t\tlength--;\n\t\tfor (int s = 0; s < length / 2; s++)\n\t\t{\n\t\t\tnum[length - 1 - s] = num[s];\n\t\t}\n\t}\n\tshuzihua();\n}\n\nint main(void)\n{\n    int a, b;\n    scanf(\"%d%d\", &a, &b);\n    binInt num;\n    for (int s = 1; true; s *= 10)\n    {\n        // first run the 1 mode huiwen\n        int numLength = -1;\n        for (int u = s; true; u++)\n        {\n            num.set(u);\n            if (numLength == -1)\n                numLength = num.getLenth();\n            if (numLength != -1 && numLength < num.getLenth())\n                break;\n            num.madehuiwen(1);\n            if (num.get() > b)\n                return 0;\n            if (num.checksushu() == 1 && num.get() >= a)\n            {\n                printf(\"%d\\n\", num.get());\n            }\n        }\n        numLength = -1;\n        // Second run the 0 mode huiwen\n        for (int u = s; true; u++)\n        {\n            num.set(u);\n            if (numLength == -1)\n                numLength = num.getLenth();\n            if (numLength != -1 && numLength < num.getLenth())\n                break;\n            num.madehuiwen(0);\n            if (num.get() > b)\n                return 0;\n            if (num.checksushu() == 1 && num.get() >= a)\n            {\n                printf(\"%d\\n\", num.get());\n            }\n        }\n    }\n\n    return 0;\n}\n```\n\n\u5199\u7684\u65b0int\u4e3b\u8981\u6709\u51e0\u4e2a\u529f\u80fd\n1. \u628a\u6570\u5b57\u8f6c\u6210\u6570\u7ec4\n2. \u628a\u6570\u7ec4\u8f6c\u6210\u6570\u5b57\n3. \u83b7\u5f97\u6570\u5b57\u7684\u957f\u5ea6\n4. \u68c0\u67e5\u662f\u5426\u662f\u7d20\u6570\n5. \u5c06\u6570\u5b57\u53d8\u6210\u56de\u6587\n\nPS\uff1a\u5176\u4e2d\uff0c\u5c06\u6570\u5b57\u53d8\u6210\u56de\u6587\u6709\u4e24\u79cd\u6a21\u5f0f\uff0c\u5947\u6570\u6a21\u5f0f\u548c\u5076\u6570\u6a21\u5f0f\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f8b\u5982123\u8fd9\u4e2a\u6570\u5b57\uff0c\u7528\u5947\u6570\u6a21\u5f0f\u4f1a\u53d8\u621012321\uff0c\u7528\u5076\u6570\u6a21\u5f0f\u4f1a\u53d8\u6210123321\n\n\u73b0\u5728\u91cd\u70b9\u6765\u4e86\uff0c\u5982\u679c\u521d\u59cb\u6570\u5b57\u53ea\u6709\u4e00\u4f4d\uff0c\u4f8b\u5982\u662f1\uff0c\u54b1\u4eec\u5148\u7528\u5947\u6570\u6a21\u5f0f\uff0c\u4f1a\u751f\u6210\u539f\u6570\u5b57\uff0c\u4e0d\u53d8\u3002\u54b1\u4eec\u518d\u7528\u5076\u6570\u6a21\u5f0f\uff0c\u4f1a\u751f\u621011\uff0c\u591a\u4e86\u4e00\u4f4d\n\n\u5982\u679c\u521d\u59cb\u6570\u5b57\u662f\u4e24\u4f4d\uff0c\u4f8b\u598212\uff0c\u7528\u5947\u6570\u6a21\u5f0f\u751f\u6210121\uff0c\u662f\u4e09\u4f4d\u6570\u3002\u7528\u5076\u6570\u6a21\u5f0f\u751f\u62101221\uff0c\u662f\u56db\u4f4d\u6570\u3002\n\n\u5982\u6b64\u5faa\u73af\u4e0b\u53bb\uff0c\u54b1\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u5f88\u5feb\u6309\u7167\u987a\u5e8f\u679a\u4e3e\u51fa\u6240\u6709\u7684\u56de\u6587\u6570\u5b57\uff0c\u6bcf\u4e2a\u6570\u5b57\u679a\u4e3e\u51fa\u6765\u518d\u5224\u65ad\u662f\u5426\u662f\u7d20\u6570\uff0c\u662f\u7d20\u6570\u5c31\u8f93\u51fa\uff0c\u4e8e\u662f\u9898\u5c31\u505a\u51fa\u6765\u4e86\u3002\n\n\u4e0d\u8fc7\u6709\u70b9\u5c0f\u95ee\u9898\uff0c\u56e0\u4e3a\u8d77\u59cb\u503c\u4ece1\u5f00\u59cb\uff0c\u5fc5\u7136\u4f1a\u679a\u4e3e\u51fa\u6bd4a\u8981\u5c0f\u7684\u6570\uff0c\u6240\u4ee5\u8981\u52a0\u5165\u5224\u65ad\uff0c\u6bd4a\u8981\u5c0f\u5c31\u4e0d\u8f93\u51fa\u4e86\u3002\u540c\u65f6\u8fd8\u8981\u5224\u65ad\uff0c\u5982\u679c\u679a\u4e3e\u51fa\u7684\u6570\u6bd4b\u8981\u5927\uff0c\u5c31\u8981\u76f4\u63a5return 0\u8df3\u51fa\u53bb\u4e86\u3002\n\n\u6b64\u5916\uff0c\u9700\u8981\u4e24\u4e2a\u5faa\u73af\uff0c\u5916\u5faa\u73af\u4ece1\u5f00\u59cb\uff0c\u6bcf\u6b21\u90fd\u8981\u4e58\u4ee510\uff0c\u4e5f\u5c31\u662f\u8fdb\u4f4d\u3002\u5185\u5faa\u73af\u9700\u8981\u4ece\u5916\u5faa\u73af\u7684\u6570\u5b57\u5f00\u59cb\uff0c\u6bcf\u6b21+1\uff0c\u540c\u65f6\u9700\u8981\u68c0\u6d4b\u662f\u5426\u6709\u8fdb\u4f4d\uff0c\u4f8b\u5982100\uff0c\u52a0\u5230999\uff0c\u518d\u52a0\u5230\u4e861000\uff0c\u8fd9\u65f6\u5019\u5c31\u4e0d\u80fd\u7ee7\u7eed\u5faa\u73af\u4e86\uff0c\u5e94\u8be5\u8df3\u51fa\uff0c\u6362\u6a21\u5f0f\u7ee7\u7eed\u8f93\u51fa\u3002",
        "postTime": 1521354767,
        "uid": 84783,
        "name": "Srauni",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u975e\u5e38\u6c34\uff0c\u53ea\u4e0d\u8fc7\u662f\u751f\u6210\u7684\u95ee\u9898\uff0c\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n\n#include <iostream>\n#include <cmath> \nusing namespace std;\nbool prime(int x)\n{\n    bool b=true;\n    for(int i=2;i<=sqrt(x);i++)\n    {\n        if(x%i==0)\n            b=false;\n    }\n    return b;\n}//\u5224\u65ad\u8d28\u6570\u7684\u51fd\u6570\nint main()\n{\n    int a,b;\n    int c[100000];\n    int i=3;\n    int d1,d2,d3,d4,d5;\n    c[0]=5;c[1]=7;c[2]=11;//2\u4f4d\u6570\u548c1\u4f4d\u6570\u53ea\u6709\u8fd9\u4e09\u4e2a\u662f\u56de\u6587\u8d28\u6570\n    for(d1=1;d1<=9;d1+=2)\n        for(d2=0;d2<=9;d2++)\n        {\n            c[i]=d1*100+d2*10+d1;\n            i++;\n        }//\u751f\u62103\u4f4d\u56de\u6587\u6570\n    for(d1=1;d1<=9;d1+=2)\n        for(d2=0;d2<=9;d2++)\n            for(d3=0;d3<=9;d3++)\n            {\n                c[i]=d1*10000+d2*1000+d3*100+d2*10+d1;\n                i++;\n            }//\u751f\u62105\u4f4d\u56de\u6587\u6570\n    for(d1=1;d1<=9;d1+=2)\n        for(d2=0;d2<=9;d2++)\n            for(d3=0;d3<=9;d3++)\n                for(d4=0;d4<=9;d4++)\n                {\n                    c[i]=d1*1000000+d2*100000+d3*10000+d4*1000+d3*100+d2*10+d1;\n                    i++;\n                }//\u751f\u62107\u4f4d\u56de\u6587\u6570\n    for(d1=1;d1<=9;d1+=2)\n        for(d2=0;d2<=9;d2++)\n            for(d3=0;d3<=9;d3++)\n                for(d4=0;d4<=9;d4++)\n                    for(d5=0;d5<=9;d5++)\n                    {\n                        c[i]=d1*100000000+d2*10000000+d3*1000000+d4*100000+d5*10000+d4*1000+d3*100+d2*10+d1;\n                        i++;\n                    }//\u751f\u62109\u4f4d\u56de\u6587\u6570\n    cin>>a>>b;//\u8f93\u5165\u8303\u56f4\n    for(int i=0;i<100000000;i++)\n    {\n        if(c[i]>=a&&c[i]<=b&&prime(c[i])==true)\n        {\n            cout<<c[i]<<endl;\n        }//\u5224\u65ad\u56de\u6587\u6570\u662f\u5426\u662f\u8d28\u6570\n        if(c[i]>b)\n            break;//\u5f53\u8d85\u51fa\u8303\u56f4\u65f6\u53ca\u65f6\u9000\u51fa\u5faa\u73af\n    }\n}\n\n```",
        "postTime": 1431062363,
        "uid": 6201,
        "name": "herofox",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u5927\u5bb6\u521a\u770b\u5230\u8fd9\u4e00\u9898\u7684\u65f6\u5019\u80af\u5b9a\u6709\u60f3\u6cd5\u7684\n\n\u60f3\u6cd51\uff1a\u4ece5\u523010^8\u7684\u6570\u5168\u90e8\u679a\u4e3e\u4e00\u904d\uff0c\u518d\u6bcf\u4e00\u4e2a\u90fd\u770b\u4e00\u770b\u662f\u4e0d\u662f\u8d28\u6570\uff0c\u5982\u679c\u662f\u5c31\u8f93\u51fa\u561b\uff0c\u8fd9\u4e48\u7b80\u5355\u3002\u4f46\u662f\u4e00\u770b\u4e4b\u95f4\u9650\u5236\u5c31\u54ed\u4e86\uff08\u5f53\u7136\u8fd9\u4e00\u79cd\u505a\u6cd5\u662f\u4e0d\u53ef\u53d6\u7684\uff09\u3002\n\n\u60f3\u6cd52\uff1a\u5f53\u7136\u662f\u679a\u4e3e\uff0c\u53ea\u679a\u5947\u6570\u3002\uff08\u633a\u597d\uff0c\u4f46\u4f9d\u7136\u8dd1\u5f97\u98de\u6162\uff09\n\n\u60f3\u6cd53\uff1a\u6211\u53d1\u73b0\u5982\u679c\u6570\u4f4d\u662f\u5076\u6570\u7684\u8bdd\u5f53\u7136\u5c31\u662f11\u7684\u500d\u6570\u5566\uff0c\u53ea\u8981\u679a\u4e3e\u5947\u6570\u6570\u4f4d\u7684\u5c31\u597d\u4e86\u3002\uff08\u6ce8\u610f\uff1a11\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u597d\u60f3\u6cd5\uff0c\u8fd8\u662f\u633a\u6162\uff09\n\n\u60f3\u6cd54\uff1a\u5728\u60f3\u6cd53\u7684\u57fa\u7840\u4e0a\u628a\u5224\u65ad\u8d28\u6570\u7684\u5faa\u73af\u6539\u53d8\u6210\n```cpp\nfor(int i=3;i<=sqrt(n);i+=2)\n```\n\n\u60f3\u6cd55\uff1a\u5f00\u5934\u662f\u8981\u662f2\uff0c4\uff0c5\uff0c6\uff0c8\u7684\u8bdd\uff0c\u672b\u5c3e\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u5747\u4e0d\u53ef\u53d6\uff08\u597d\u60f3\u6cd5\uff0c\u4f46\u662f\u8fd9\u6837\u5728\u522b\u7684\u5730\u65b9\u53ef\u80fd\u8fd8\u662f\u9700\u8981\u4f18\u5316\uff0c\u770b\u522b\u7684\u9898\u89e3\u5427\uff09\n\n\u60f3\u6cd56\uff1a\u6253\u8868\uff08\u53c8\u6d6a\u8d39\u4e00\u9053\u9898\uff09\n\n\u60f3\u6cd57\uff1a\u8fd9\u662f\u4e00\u4e2a\u633a\u5feb\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece10^1\u679a\u4e3e\u523010^4\uff0c\u518d\u5c06\u6bcf\u4e00\u4e2a\u6570\u53d8\u6210\u4e00\u4e2a\u5947\u6570\u6570\u4f4d\u7684\u56de\u6587\u6570\uff0c\u518d\u5224\u65ad\u662f\u5426\u662f\u8d28\u6570\uff0c\u4e0d\u5c31\u53ef\u4ee5\u4e86\u5417\uff0c\u5728\u7efc\u5408\u4ee5\u4e0a\u60f3\u6cd5\uff0c\u4e0d\u5c31\u8dd1\u5f97\u98de\u5feb\u4e86\u5417\uff1f\uff01\uff08\u522b\u7684\u8bdd\u4e0d\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int foc[9]={1,10,100,1000,10000,100000,1000000,10000000,100000000};\nset<int> s;\nint dic(int n){\n\tint c[foc[1]]={0},l=0;\n\twhile(n){//\u5206\u79bb\u6570\u4f4d\n\t\tc[++l]=n%10;\n\t\tn/=10;\n\t}\n\tfor(int i=l;i>=2;i--)//\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4f7f\u5176\u53d8\u6210\u56de\u6587\u6570\n\t\tn+=c[i]*(foc[(i-1)*2]+1)*foc[l-i];\n\tn+=c[1]*foc[l-1];//\u4e2d\u95f4\u7684\u4f4d\u7f6e\n\treturn n;\n}\nint l(int n){//\u8ba1\u7b97\u6570\u4f4d\n\tint len=0;\n\twhile(n/=10) len++;\n\treturn len+1;\n/*\n\u4e00\u5b9a\u8981\u8bb0\u4f4f\u52a0\u4e00\uff0c\u56e0\u4e3a\u4e0a\u9762\u5176\u5b9e\u662f\nwhile(1){\n    n/=10; \n    if(!n) break;//\u8fd9\u91cc\u662f\u9664\u540e\u7684\u5224\u65ad\uff0c\u6ca1\u6709\u8ba9\u957f\u5ea6\u52a0\u4e00 \n    len++;\n}\n*/\n}\nbool pd(int n){//\u5224\u65ad\u662f\u5426\u662f\u8d28\u6570\n\tfor(int i=3;i<=sqrt(n);i+=2)\n\t\tif(n%i==0) return false;\n\treturn true;\n}\nint main(){\n\tint pri[foc[4]]={-1,5,7,11},tot=3,a,b;\u3001\u3001\u521d\u59cb\u5316\n\tscanf(\"%d %d\",&a,&b);\n\ts.insert(2);//\u96c6\u5408\u521d\u59cb\u5316\n\ts.insert(4); \n\ts.insert(5);\n\ts.insert(6);\n\ts.insert(8);\n\tfor(int i=foc[1];i<=foc[4]-1;i++){\n\t\tif(s.count(i/foc[l(i)-1])){//\u5c31\u662f\u9996\u4f4d\u662f\u5426\u662f2\uff0c4\uff0c5\uff0c6\uff0c8\n\t\t\ti+=foc[l(i)-1]-1;\n\t\t\tcontinue;\n\t\t}\n\t\tint fuc=dic(i);\n\t\tif(pd(fuc)) pri[++tot]=fuc;//\u63d2\u5165\u6570\u7ec4\n\t}\n\tfor(int i=1;pri[i];i++){//\u8f93\u51fa\n\t\tif(b+1<=pri[i]) break;\n\t\tif(a<=pri[i]) printf(\"%d\\n\",pri[i]);\n\t}\n}\n```",
        "postTime": 1533274332,
        "uid": 53734,
        "name": "\u547c\u98ce\u5524\u96e8abc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u4e48\u5927\u7684\u8303\u56f4,\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u901a\u8fc7\u7ebf\u6027\u7b5b\u8d28\u6570\u8868\u6765\u89e3\u9898.\u7136\u540e\u5728\u8d28\u6570\u8868\u627e\u5230\u56de\u6587\u6570.\n\u7ed3\u679c\u4ea4\u4e0a\u53bb\u4e4b\u540e\u6700\u540e\u4e00\u7ec4tle\u4e86,\u901a\u8fc7\u89c2\u5bdf\u8f93\u51fa\u7ed3\u679c,\u6211\u53d1\u73b0100000000\u4ee5\u5185\u7684\u6700\u5927\u7684\u56de\u6587\u8d28\u6570\u662f9989899,\u4e8e\u662f\u4e4e\u6211\u8d28\u6570\u8868\u7684\u4e0a\u9650\u52a0\u4e869989899,\u518d\u6b21\u63d0\u4ea4\u5c31ac\u5566~.\nbtw,\u6709\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u8bd5\u8bd5\u6253\u8868\n```c\n#include<stdio.h>\n#define N 100000000\nchar notpalpri[N];\nlong long palpri[N],prime[N],tot,total;\nvoid palindrome(long long m,long long n);\n\nint  main(int argc, char const *argv[])\n{\n    long long m,n;\n    scanf(\"%lld%lld\",&m,&n);\n    palindrome(m,n);\n    return 0;\n}\n/*\u901a\u8fc7\u7b5b\u6cd5\u5f97\u51fa\u8d28\u6570\u8868,\u5728\u8d28\u6570\u8868\u4e2d\u627e\u56de\u6587\u6570*/\nvoid palindrome(long long m,long long n)\n{\n   \tfor(long long i=2;i<=n&&i<=9989899;i++)//\u5728\u7b2c\u4e00\u6b21\u63d0\u4ea4tle\u540e\u53d1\u73b0\u8be5\u8303\u56f4\u5185\u6700\u5927\u7684\u56de\u6587\u8d28\u6570\u4e3a9989899,\u6240\u4ee5\u53ef\u4ee5\u9664\u53bb\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\n    {\n \t\tif(!notpalpri[i])\n \t\t{\n            long long s=i,y=0;\n            while(s>0){\n                 y=y*10+s%10;\n                 s/=10;\n            }\n            if(y==i&&i>=m){\n                palpri[++tot]=i;\n                printf(\"%lld\\n\", palpri[tot]);\n            }//\u5224\u65ad\u56de\u6587\u6570\n            prime[++total]=i;\t\t \n \t\t}\n   \t\tfor(int j=1;j<=total&&prime[j]*i<=n;j++)\n   \t\t{\n   \t\t\tnotpalpri[prime[j]*i]=1;\n   \t\t\tif(i%prime[j]==0)break;\n   \t\t}//\u7b5b\u6cd5\u6838\u5fc3\n    }\n}\n```",
        "postTime": 1546505730,
        "uid": 140125,
        "name": "MercyBO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u4f7f\u7528\u7684\u662f\u66b4\u529bdfs\u52a0\u526a\u679d\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u7528\u4e00\u4e9b\u9898\u89e3\u6240\u53d1\u73b0\u7684\u5076\u6570\u4f4d\u6ca1\u6709\u56de\u6587\u6570\u7684\u65b9\u6cd5\u6765\u51cf\u5c11\u641c\u7d22\u91cf\uff0c\u7528\u4e86\u4f30\u8ba1\u66f4\u5feb\u4e00\u4e9b\u5427\u3002\n\n\u8fd0\u884c\u901f\u5ea6\u6700\u6162\u7684\u4e00\u4e2a\u70b9\u4e5f\u4e0d\u523050ms\u3002\n\n\u4e0b\u9762\u6211\u5c31\u6765\u8bb2\u8bb2\u6211\u7684\u601d\u8def\uff1a\n\n1\u3001\u9996\u5148\uff0c\u6df1\u641c\u641c\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u77e5\u9053\uff0c\u76f4\u63a5\u679a\u4e3e\u6240\u6709\u7684\u6570\uff0c\u7136\u540e\u518d\u5206\u522b\u5224\u65ad\u56de\u6587\u6570\u548c\u8d28\u6570\uff0c\u51e0\u904d\u4f60\u5224\u65ad\u7684\u8fc7\u7a0b\u662fo\uff081\uff09\uff0c\u4e5f\u4e00\u5b9a\u4f1a\u8d85\u65f6\u3002\u56e0\u6b64\uff0c\u6709\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u601d\u8def\uff0c\u90a3\u5c31\u662f\u6211\u4eec\u5148\u679a\u4e3e\u5176\u4e2d\u7684\u4e00\u79cd\uff0c\u518d\u5224\u65ad\u662f\u5426\u7b26\u5408\u53e6\u4e00\u6761\u4ef6\u3002\u8fd9\u91cc\u5f53\u7136\u53ea\u80fd\u679a\u4e3e\u56de\u6587\u6570\u4e86\uff08\u6253\u8868\u679a\u4e3e\u8d28\u6570\u6ca1\u6709\u610f\u4e49\uff0c\u6253\u8868\u7684\u8bdd\u76f4\u63a5\u679a\u56de\u6587\u8d28\u6570\u5c31\u597d\u4e86\uff09\u3002\n\n2\u3001\u73b0\u5728\u6574\u4f53\u7684\u601d\u8def\u6709\u4e86\uff0c\u6211\u4eec\u5c06\u7a0b\u5e8f\u5206\u4e3a\u4e24\u5927\u90e8\u5206\u3002\n\n\u7b2c\u4e00\uff1a\u5224\u65ad\u7d20\u6570\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u5730\u65b9\u6211\u4e5f\u662f\u4f7f\u7528\u7684\u6bd4\u8f83\u6734\u7d20\u7684o\uff08\u221an\uff09\u7684\u7b97\u6cd5\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n```cpp\nbool check(int a)\n{\n\tif(a==1) return false;\n\tfor(int i=2;i<=sqrt(a);i++) \n\t if(a%i==0) return false;\n\treturn true;\n}\n```\n\u7b2c\u4e8c\uff1a\u5c31\u662f\u8981\u6df1\u641c\u627e\u56de\u6587\u6570\u3002\u679a\u4e3e\u4e00\u4e2a\u5b9a\u957f\u7684\u56de\u6587\u6570\uff0c\u6bcf\u6b21\u5f80\u5934\u5c3e\u586b\u4e00\u4e2a\u6570\uff0c\u76f4\u5230\u6b63\u4e2d\u95f4\uff0c\u8fd9\u65f6\u5982\u679c\u662f\u5076\u6570\uff0c\u53ea\u8981\u76f4\u63a5\u5224\u65ad\u7d20\u6570\u5373\u53ef\uff0c\u5982\u679c\u662f\u5947\u6570\uff0c\u6211\u5c31\u8981\u518d\u679a\u4e3e\u4e00\u6b210~9\u586b\u8fdb\u53bb\u5224\u65ad\u7d20\u6570\uff0c\u5982\u662f\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u957f\u5ea6\u7684\u56de\u6587\u6570\u90fd\u679a\u4e3e\u5b8c\u4e86\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9996\u5c3e\u4e0d\u80fd\u4e3a0\uff0c\u800c\u4e2d\u95f4\u53ef\u4ee5\uff0c\u6240\u4ee5\u5faa\u73af\u65f6\u52a0\u4e86\u4e00\u4e2a\u4e09\u76ee\u8fd0\u7b97\u7b26\u3002\u4e0b\u9762\u653e\u4e00\u4e0b\u6df1\u641c\u8fc7\u7a0b\u3002\n\n```cpp\nvoid dfs(int t,int l)\n{\n\tfor(int i=(t==1?1:0);i<=9;i++)\n\t{\n\t\tdouble a=t-1,b=l-t;\n\t\tp=p+i*pow(10.0,a)+i*pow(10.0,b);\n\t\t//////////////////////////////////\n        if(p>m)\n\t\t{\n\t\t\tp=p-i*pow(10.0,a)-i*pow(10.0,b);\n\t\t\tbreak;\n\t\t}  \n        //\u8bf7\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u5c31\u662f\u526a\u679d\u7684\u8fc7\u7a0b\u4e86\n        //\u5982\u679c\u4e24\u5934\u5f00\u59cb\u6784\u9020\u7684\u56de\u6587\u6570\u5df2\u7ecf\u8d85\u8fc7m\uff0c\n        //\u90a3\u4e48\u518d\u5f80\u4e0b\u586b\u6570\u5f88\u660e\u663e\u4e5f\u4f1a\u8d85\u8fc7\u3002\n        //////////////////////////////////\n\t\tif(t>=l/2)\n\t\t{\n\t\t\tif(l%2==0)\n\t\t\t{\n\t\t\t\tif(check(p)&&p>=n&&p<=m) printf(\"%d\\n\",p);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int i=0;i<=9;i++)\n\t\t\t\t{\n\t\t\t\t\tdouble a=t;\n\t\t\t\t\tp=p+i*pow(10.0,a);\n\t\t\t\t\tif(check(p)&&p>=n&&p<=m) printf(\"%d\\n\",p);\n\t\t\t\t\tp=p-i*pow(10.0,a);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse dfs(t+1,l);\n\t\tp=p-i*pow(10.0,a)-i*pow(10.0,b);\n\t}\n}\n```\n\u90a3\u4e48\u5c31\u8fd9\u6837\uff0c\u518d\u52a0\u4e0a\u4e3b\u7a0b\u5e8f\uff0c\u8fd9\u9053\u9898\u5c31\u8fd9\u6837\u89e3\u51b3\u4e86\u3002\n\u4e0b\u9762\u662f\u5b8c\u6574\u7a0b\u5e8f\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n,m,ans,l,p=0;\nbool check(int a)\n{\n\tif(a==1) return false;\n\tfor(int i=2;i<=sqrt(a);i++) \n\t if(a%i==0) return false;\n\treturn true;\n}\nvoid dfs(int t,int l)\n{\n\tfor(int i=(t==1?1:0);i<=9;i++)\n\t{\n\t\tdouble a=t-1,b=l-t;\n\t\tp=p+i*pow(10.0,a)+i*pow(10.0,b);\n\t\tif(p>=m)\n\t\t{\n\t\t\tp=p-i*pow(10.0,a)-i*pow(10.0,b);\n\t\t\tbreak;\n\t\t}\n\t\tif(t>=l/2)\n\t\t{\n\t\t\tif(l%2==0)\n\t\t\t{\n\t\t\t\tif(check(p)&&p>=n&&p<=m) printf(\"%d\\n\",p);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int i=0;i<=9;i++)\n\t\t\t\t{\n\t\t\t\t\tdouble a=t;\n\t\t\t\t\tp=p+i*pow(10.0,a);\n\t\t\t\t\tif(check(p)&&p>=n&&p<=m) printf(\"%d\\n\",p);\n\t\t\t\t\tp=p-i*pow(10.0,a);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse dfs(t+1,l);\n\t\tp=p-i*pow(10.0,a)-i*pow(10.0,b);\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\tint mm=m;\n\twhile(mm>0)\n\t{\n\t\tl++;\n\t\tmm/=10;\n\t}\n\tfor(int i=5;i<=9;i++) if(i>=n&&i<=m&&check(i)) cout<<i<<endl;\n\tfor(int i=2;i<=l;i++) \n\t{\n\t\tp=0;\n\t\tdfs(1,i);\n\t}\n} \n```",
        "postTime": 1541945661,
        "uid": 101873,
        "name": "bzcxl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u5982\u679c\u4ee5\u4f20\u7edf\u65b9\u6cd5\u505a\u53ea\u80fd\u62ff\u90e8\u5206\u5206\uff0c#7\u5230#9\u90fd\u4f1aTLE\u3002\n\n\u56e0\u6b64\uff0c\u6211\u6709\u65b0\u7684\u6784\u601d\uff1a**[color=red]\u6784\u9020\u56de\u6587\u6570[/color]**\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4efb\u610f\u7684\u6b63\u6574\u6570N\uff0c\u5c06\u5176\u8f6c\u4e3a\u5b57\u7b26\u4e32\u540e\u5176\u957f\u5ea6\u6709\u4e24\u79cd\u53ef\u80fd\uff1a\n\n1.\u5982\u679c\u5b83\u6709\u5947\u6570\u4f4d\uff0c\u90a3\u4e48\u53ef\u4ee5\u88ab\u5206\u6210copy(s,1,length(s) div 2+1)\u548ccopy(s,length(s) div 2+2,length(s))\u8fd9\u4e24\u90e8\u5206\u3002\u59821\u88ab\u5206\u4e3a'1'\u548c''\uff0c123\u88ab\u5206\u4e3a'12'\u548c'3'\u7b49\u7b49\u3002\n\n2.\u5982\u679c\u5b83\u6709\u5076\u6570\u4f4d\uff0c\u90a3\u4e48\u53ef\u4ee5\u88ab\u5206\u6210copy(s,1,length(s) div 2)\u548ccopy(s,length(s) div 2+1,length(s))\u8fd9\u4e24\u90e8\u5206\u3002\u598212\u88ab\u5206\u4e3a'1'\u548c'2'\uff0c1234\u88ab\u5206\u4e3a'12'\u548c'34'\u7b49\u7b49\u3002\n\n\u56de\u6587\u6570\u540c\u6837\u9002\u7528\u4e8e\u4e0a\u8ff0\u89c4\u5219\u3002\u5982101\u88ab\u5206\u4e3a'10'\u548c'1'\uff0c1221\u88ab\u5206\u4e3a'12'\u548c'21'\u7b49\u3002\u901a\u8fc7\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u56de\u6587\u6570\uff0c\u5982\u679c\u5c06\u5206\u89e3\u540e\u7684\u7b2c\u4e00\u4e2a\u5b50\u4e32\u79f0\u4e3as1\uff0c\u5c06\u7b2c\u4e8c\u4e2a\u5b50\u4e32\u79f0\u4e3as2\uff0c\u90a3\u4e48\u901a\u8fc7s1\u53ef\u4ee5\u9020\u51fa\u4e24\u4e2a\u56de\u6587\u6570\uff0c\u5206\u522b\u662fs2:=\u53cd\u8f6c(copy(s1,1,length(s1)-1))\u548cs2:=\u53cd\u8f6c(s1)\u3002\u9020\u51fa\u6765\u7684\u56de\u6587\u6570\u5c31\u662fs1+s2\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3es1\u6765\u5b9e\u73b0\u5bf9\u56de\u6587\u6570\u7684\u679a\u4e3e\u3002\n\n\u6ce8\u610f\uff1a\u679a\u4e3e\u51fa\u7684\u56de\u6587\u6570\u5e76\u4e0d\u662f\u6709\u5e8f\u7684\u3002\u4f8b\u5982\uff0cs1\u4ece1\u679a\u4e3e\u52309\uff0c\u5206\u522b\u9020\u51fa1\uff0c11\uff0c2\uff0c22\uff0c3\uff0c33\uff0c4\uff0c44\u2026\u2026\u56e0\u6b64\uff0c\u9020\u51fa\u56de\u6587\u6570\u540e\u9996\u5148\u5224\u65ad\u5b83\u662f\u5426\u5728\u6307\u5b9a\u7684\u8303\u56f4\u5185\uff0c\u7136\u540e\u5224\u65ad\u5176\u662f\u5426\u4e3a\u8d28\u6570\uff0c\u5168\u90e8\u6784\u9020\u5b8c\u6bd5\u540e\u518d\u8fdb\u884c\u6392\u5e8f\u3002\u56e0\u4e3a\u56de\u6587\u8d28\u6570\u7684\u6570\u91cf\u5f88\u5c11\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u6700\u4f4e\u7ea7\u7684\u9009\u62e9\u6392\u5e8f\u3002\n\n```delphi\n\nvar nn,mm,len1,len2,i:longint;\n    s1,s2:string;\n    a:array [0..10000] of longint;\n\nfunction prime(n:longint):boolean;//\u5224\u65ad\u8d28\u6570\nvar i:longint;\nbegin\n if n=1 then exit(false);\n prime:=true;\n for i:=2 to trunc(sqrt(n)) do if n mod i=0 then exit(false);\nend;\n\nprocedure work_(s:string;min,max:longint);//\u5bf9\u56de\u6587\u6570\u662f\u5426\u5408\u6cd5\u7684\u5224\u65ad\nvar n:longint;\nbegin\n val(s,n);\n if (n>=min) and (n<=max) then//\u8303\u56f4\u5224\u65ad\n  if prime(n) then//\u8d28\u6570\u5224\u65ad\n  begin\n   inc(a[0]);\n   a[a[0]]:=n;\n  end;\nend;\n\nprocedure work(s1,s2:string);\nvar n,m,i,j,temp:longint;\n    s,ss:string;\nbegin\n val(s1,n);val(s2,m);\n for i:=n to m do//\u679a\u4e3e\u56de\u6587\u6570\n begin\n  str(i,s);\n  ss:='';\n  for j:=length(s)-1 downto 1 do ss:=ss+s[j];\n  work_(s+ss,nn,mm);\n  work_(s+s[length(s)]+ss,nn,mm);\n end;\n for i:=1 to a[0]-1 do//\u6392\u5e8f\n  for j:=i+1 to a[0] do\n   if a[i]>a[j] then\n    begin\n     temp:=a[i];a[i]:=a[j];a[j]:=temp\n    end;\n for i:=1 to a[0] do writeln(a[i]);\nend;\n\nbegin\n read(nn,mm);\n str(nn,s1);str(mm,s2);\n if odd(length(s1)) then len1:=length(s1) div 2+1 else len2:=length(s2) div 2;\n if odd(length(s2)) then len2:=length(s2) div 2+1 else len2:=length(s2) div 2;\n s1:='1';\n for i:=1 to len1-1 do s1:=s1+'0';\n s2:='';\n for i:=1 to len2 do s2:=s2+'9';\n fillchar(a,sizeof(a),0);\n work(s1,s2);\nend.\n\n```",
        "postTime": 1426894542,
        "uid": 2699,
        "name": "Ufowoqqqo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u56de\u6587\u6570\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u9009\u53d6\u5bf9\u79f0\u8f74\u5c06\u53e6\u4e00\u534a\u6570\u5b57\u8865\u56de\u5f97\u5230\n\u6bd4\u5982\u8bf4321.\n\u5bf9\u79f0\u8f74\u9009\u62e93\u7684\u8bdd\u3002\u53ef\u4ee5\u5f97\u523012321\n\u518d\u5f80\u9ad8\u4f4d\u4e00\u70b9\u9009\u62e9\u5bf9\u79f0\u8f74\u3002\u53ef\u4ee5\u5f97\u5230123321\n\u518d\u9ad8\u4f4d\u8fd8\u80fd\u5f97\u52301230321\uff0c12300321\u7b49\u3002\n\u6309\u7167\u8fd9\u4e2a\u601d\u8def\u5904\u7406\u51fa0-100000000\u7684\u5168\u90e8\u56de\u6587\u6570\u3002\u7136\u540e\u5728\u3010a\uff0cb\u3011\u533a\u95f4check\u7d20\u6570\u5373\u53ef\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll MAXN = 100000000;\n\n//\u672c\u5730\u8dd1\u4e00\u904d\u4e4b\u540e\u53d1\u73b0tot\u53ea\u670911110\uff0c\u5f00\u8fd9\u4e48\u591a\u7a7a\u95f4\u5c31\u591f\u4e86\nint palind[15000],tot = 0; //\u50a8\u5b58\u5168\u90e8\u7684\u56de\u6587\u6570\nvoid palindromes(int x){\n    int y = 0, tmp = x, ten = 1;\n    while(tmp){\n        y = y * 10 + tmp % 10;\n        tmp /= 10;\n        ten *= 10;\n    }\n    if((ll)y/10*ten+x < MAXN)palind[tot++] = y/10*ten+x;         // x=123  \u7c7b\u4f3c12321\u7684\u60c5\u51b5\n    for(;(ll)y * ten + x < MAXN; ten *= 10){//\u4e58\u6cd5\u4f1a\u7206int\u8303\u56f4\uff0c\u9700\u8981\u5f00ll\n        palind[tot++] = y * ten + x;    //\u7c7b\u4f3c123321\u30011230321\u300112300321\n    }\n}\n\n//\u56de\u6587\u6570\u7684\u6570\u91cf\u603b\u5171\u53ea\u67091w\u591a\u4e2a\uff0ccheck\u7d20\u6570\u7528sqrt\u7684\u590d\u6742\u5ea6\u5c31\u591f\u4e86\uff0c\u53e6\u5916\u8fd8\u6709\u4e00\u79cd\u5e38\u6570\u7ea7\u522b\u7684check\u7b97\u6cd5\u53ef\u81ea\u884c\u767e\u5ea6\nbool isprime(int x){\n    bool flag = 1;\n    for(int i = 2; i*i <= x; i++){\n        if(x % i == 0){\n            flag = 0;break;\n        }\n    }\n    return flag;\n}\n\nint main(){\n    //\u9884\u5904\u7406\u51fa1e8\u5185\u6240\u6709\u56de\u6587\u6570\uff0c\u56e0\u4e3a\u56de\u6587\u6570\u5bf9\u79f0\uff0c\u7528\u56db\u4f4d\u6570\u5bf9\u6298\u5904\u7406\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\n    for(int i=1;i<10000;i+=2){\n        palindromes(i);\n    }\n    sort(palind, palind + tot);\n    int a, b;\n    scanf(\"%d %d\",&a,&b);\n    int L = lower_bound(palind, palind + tot, a) - palind;\n    int R = upper_bound(palind, palind + tot, b) - palind;\n    for(; L < R; L ++)\n        if(isprime(palind[L]))\n            printf(\"%d\\n\", palind[L]);\n    return 0;\n}\n\n```",
        "postTime": 1541399037,
        "uid": 92597,
        "name": "kangzenan111",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "MillerRabin \u7b97\u6cd5\n\n\u672c\u7a0b\u5e8f\u65f6\u95f4\u590d\u6742\u5ea6$O(nk\\log^3n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(1)$\n\n\u601d\u8def\uff1a\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570\u3001\u8d28\u6570\uff0c\u662f\u5219\u8f93\u51fa\u3002\u5173\u952e\u90e8\u5206\u5728\u4e8e\u526a\u679d\u548c\u4f18\u5316\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\ntypedef long long ll;\n\nll pow_mod ( ll a, ll b, ll m )\n{\n\ta %= m;\n\tll ans = 1;\n\tdo\n\t{\n\t\tif ( b & 1 )\n\t\t\tans = ans * a % m;\n\t\ta = a * a % m;\n\t}\n\twhile ( b >>= 1 );\n\treturn ans;\n}\n\nbool Miller_Rabin ( ll n, ll a, ll d )\n{\n\tif ( n < 2 ) return false;\n\tif ( n == 2 ) return true;\n\tif ( n == a ) return false;\n\tif ( ~ n & 1 ) return false;\n\twhile ( ~ d & 1 ) d >>= 1;\n\tll t = pow_mod ( a, d, n );\n\twhile ( d != n - 1 && t != n - 1 && t != 1 )\n\t{\n\t\tt = t * t % n; //\u4e0b\u9762\u4ecb\u7ecd\u9632\u6b62\u6ea2\u51fa\u7684\u529e\u6cd5\uff0c\u5bf9\u5e94\u6570\u636e\u91cf\u4e3a10^18\u6b21\u65b9\uff1b\n\t\td <<= 1;\n\t}\n\treturn t == n - 1 || ( d & 1 ) == 1; //\u8981\u4e48t\u80fd\u53d8\u6210n-1\uff0c\u8981\u4e48\u4e00\u5f00\u59cbt\u5c31\u7b49\u4e8e1\n}\n\nbool isprime ( ll n )\n{\n\tstatic const int a[] = {2, 7, 61}; //\u6216\u8005\u81ea\u5df1\u751f\u6210[2,N-1]\u4ee5\u5185\u7684\u968f\u673a\u6570rand\uff08\uff09%\uff08n-2\uff09+2\n\tfor ( int i = 0; i < 3; ++i )\n\t{\n\t\tif ( n == a[i] ) return true;\n\t\tif ( !Miller_Rabin ( n, a[i], n - 1 ) ) return false;\n\t}\n\treturn true;\n}\n\nbool reversable ( int num )\n{\n\tstatic char buf[16];\n\tsprintf ( buf, \"%d\", num );\n\n\tint len = strlen ( buf );\n    // \u6ce8\u610f\u8fd9\u91cc\uff0c\u5076\u6570\u4f4d\u7684\u56de\u6587\u4e32\u4e00\u5b9a\u4e0d\u662f\u8d28\u6570\uff0c11\u9664\u5916\n\tif(num != 11 && ~len & 1) return false;\n\n\tint i = 0, j = len -1;\n\twhile(i < j)\n\t{\n\t\tif(buf[i++] != buf[j--])\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tint a, b;\n\tcin >> a >> b;\n\tb = min(b, 9999999);//\u4e00\u5f00\u59cb\u770b\u9519\u4e86\uff0c\u4ee5\u4e3an\u53d6\u523010\u4ebf\uff0c\u5b9e\u9645\u4e0a\uff0c1\u5343\u4e07\u5230\u4e00\u4ebf\u8303\u56f4\u5185\u4e0d\u5b58\u5728\u56de\u6587\u8d28\u6570\uff08\u56e0\u4e3a\u5076\u6570\u4f4d\u957f\u5ea6\uff09\n\tfor(int i = a; i <= b; ++i)\n\t\tif(i == 2 or (i & 1 and reversable(i) and isprime(i)))\n\t\t\tcout << i << endl;\n\n}\n\n\n```",
        "postTime": 1535776866,
        "uid": 61724,
        "name": "\u90b1\u6c5f\u5764",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u5b9e\u8df5\u8bc1\u660e\uff0c\u672c\u9898\u7528\u5efa\u7d20\u6570\u8868\u7684\u65b9\u6cd5\u53ef\u4ee5AC\u3002\n\u5efa\u7d20\u6570\u8868\u7684\u601d\u8def\uff1a\n**\u5c06\u8d28\u6570\u7684\u500d\u6570\u5e72\u6389\u3002**\n\u6709\u4ee5\u4e0b\u51e0\u4e2a\u8981\u70b9\uff1a\n**\n1.\u7a7a\u95f4\u6362\u65f6\u95f4\u9ad8\u6027\u80fd\u7684\u9898\u76ee\u5343\u4e07\u4e0d\u80fd\u7528vector!!!!!\n2.\u6700\u91cd\u8981\u7684\u4e00\u70b9\u4f18\u5316\u5c31\u662f\u56de\u6587\u6570\u731c\u60f3\uff08\u9664\u4e8611\uff0c\u5076\u6570\u4f4d\u8d28\u6570\u4e0d\u53ef\u80fd\u662f\u56de\u6587\u6570\uff09\uff0c\u5c06\u4e00\u5343\u4e07\u4ee5\u4e0a\u7684\u591a\u4f59\u64cd\u4f5c\u5168\u90e8\u5e72\u6389\uff0c\u5927\u5927\u63d0\u9ad8\u6548\u7387\n**\n\u4e5f\u5c31\u662f\u8fd9\u884c\u4ee3\u7801\uff1a\n```\nif (b > 10000000)b = 10000000;\n```\n\n\u4ee5\u4e0b\u662f\u5168\u90e8\u4ee3\u7801:\n```\n#include <iostream>\n\nusing namespace std;\n\nbool isHw(int x);\nbool v[100000001];\nint main()\n{\n\tint a, b;\n\tcin >> a >> b;\n\tif (b > 10000000)b = 10000000;\n\tfor (int i = 2; i<b / 2; i++)\n\t{\n\t\tif (v[i] == true) continue;\n\t\tfor (int j = 2; i*j < b; j++)  //\u500d\u6570\n\t\t\tv[i*j] = true;\n\t}\n\tfor (int i = a; i <= b; i++)\n\t{\n\t\tif (!v[i] && isHw(i))\n\t\t\tcout << i << endl;\n\t}\n\treturn 0;\n}\n\nbool isHw(int x) \n{\n\tint x1, y = 0, xx = x;\n\twhile (x > 0)\n\t{\n\t\tx1 = x % 10, x /= 10;\n\t\ty = y * 10 + x1;\n\t}\n\treturn xx == y ? true : false;\n}\n```",
        "postTime": 1524842202,
        "uid": 96463,
        "name": "\u4f20\u8bf4\u996d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217  \u7d20\u6570\u8868\u6cd5"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u601d\u8def\u5f88\u57fa\u7840\uff0c\u5c31\u662f\u5224\u65ad\u56de\u6587\u6570\u548c\u7d20\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7d20\u6570\u4ee3\u7801\uff1a\n\n```cpp\nbool ss (long long n) {\n\tfor (j=2; j<=sqrt (n); j++)//\u6ce8\u610f\u4ece2\u5f00\u59cb\n\t\tif (n%j==0) return false;\n\treturn true;\n}\n```\n\n\u56de\u6587\u6570\u4ee3\u7801\uff1a\n\n```cpp\nbool hws (long long n) {\n\tll y=n,num=0;\n\twhile (y!=0) num=num*10+y%10,y/=10;//\u901a\u7528\u65b9\u6cd5\n\tif (num==n) return true;//\u5224\u65ad\u56de\u6587\n\telse return false;\n}\n```\n\n\u7ed3\u679c\u8fd9\u4e24\u4e2a\u4ee3\u7801\u5e76\u6ca1\u6709\u8ba9\u6211\u9ad8\u6795\u65e0\u5fe7\uff0c\u8fd9\u9053\u9898\u6700\u5f00\u59cb\u4ea4\u7684\u65f6\u5019\u6700\u540e\u4e00\u4e2a\u70b9TLE\uff01\uff01\uff01\n\n\u7136\u540e\u5982\u679c\u8981\u8fdb\u884c\u5404\u79cd\u4f18\u5316\u7684\u8bdd\uff0c\u611f\u89c9\u4f1a\u6bd4\u8f83\u9ebb\u70e6\u3002\u4f8b\u5982\u7528\u4e9b\u4ec0\u4e48\u9ad8\u7aef\u7684\u51fd\u6570\uff0c\u6216\u8005\u662f\u4e00\u4e9b\u9ad8\u7aef\u7684\u7b97\u6cd5\uff0c\u6211\u89c9\u5f97\u597d\u9ebb\u70e6\u3002\u7136\u540e\u5c31\u51c6\u5907\u627e\u627e\u89c4\u5f8b......\n\n\u7ed3\u679c\u5e76\u6ca1\u6709\u627e\u5230\u4ec0\u4e48\u9ad8\u7aef\u7684\u89c4\u5f8b\uff0c\u53cd\u800c\u627e\u5230\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u4e8b\u5b9e\uff1a\n\n5-100000000\uff0810^8\uff09\u4e4b\u95f4\u56de\u6587\u7d20\u6570\u6700\u5927\u4e0d\u8d85\u8fc710000000\uff0810^7\uff09\uff0c\u7136\u540e\u5c31\u80fd\u8fdb\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u5224\u65ad\u2014\u2014\n```cpp\nif (b>10000000) \n\tfor (i=a; i<=10000000; i++)\nelse for (i=a; i<=b; i++)\n```\n\n\u8fd9\u662f\u6211\u80fd\u60f3\u5230\u6700\u597d\u7684\u201c\u4f18\u5316\u201d\u65b9\u6848\uff01\uff08\u7c7b\u4f3c\u6253\u8868\u4e00\u6837\uff09\n\n\u73b0\u5728\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#define ll long long//\u6bd4\u8f83\u559c\u6b22\u5f00long long,\u597d\u50cfint\u4e5f\u80fd\u8fc7\nll i,j;\nbool ss (ll n) {\n\tfor (j=2; j<=sqrt (n); j++)\n\t\tif (n%j==0) return false;\n\treturn true;\n}\nbool hws (ll n) {\n\tll y=n,num=0;\n\twhile (y!=0) num=num*10+y%10,y/=10;\n\tif (num==n) return true;\n\telse return false;\n}\nint main () {\n\tll a,b;\n\tscanf (\"%lld %lld\",&a,&b);\n\tif (b>10000000) {\n\t\tfor (i=a; i<=10000000; i++)\n\t\t\tif ((hws(i))&&(ss(i)))\n\t\t\t\tprintf (\"%lld\\n\",i);//\u6ce8\u610f\u8981\u6253\u62ec\u53f7\uff0c\u4e0d\u7136\u4f1a\u53d8\u6210\u91cc\u5c42\u7684if-else\n\t} else {\n\t\tfor (i=a; i<=b; i++)\n\t\t\tif ((hws(i))&&(ss(i)))\n\t\t\t\tprintf (\"%lld\\n\",i);\n\t}\n\treturn 0;//\u597d\u4e60\u60ef\n}\n```\n\n\u603b\u4f53\u8fd8\u662f\u6bd4\u8f83\u77ed\u7684la\uff01\n\n\u597d\u50cf\u4e0d\u7528\u6211\u90a3\u4e48\u4f18\u5316\u7684\u8bdd\uff0c\u5f00O2\u5c31\u80fd\u8fc7\u4e86\u3002\uff08\u6700\u597d\u8fd8\u662f\u4e0d\u7528\u5440\uff09\n\n\u8c22\u8c22O(\u2229_\u2229)O\u8c22\u8c22",
        "postTime": 1541398328,
        "uid": 117883,
        "name": "mengyi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u770b\u5230\u90a3\u4e48\u591a\u66b4\u641c\u7684\u9898\u89e3\u2026\u2026~~\u771f\u662f\u591f\u4e86~~\n\n\u6211\u8fd9\u6b21\u7528\u7684\u751f\u6210\u56de\u6587\u6570\uff0c\u597d\u50cf\u53eb\u6df1\u641c\u2026\u2026\n\n## \u601d\u8def\n\n1.\u56e0\u4e3a\u672b\u4f4d\u4e00\u5b9a\u662f1,3,7,9;\u6240\u4ee5\u9996\u4f4d\u4e5f\u5e94\u8be5\u662f1,3,7,9\u3002\n\n2.\u5f53\u53f3\u8fb9\u754c\u5c0f\u4e8e\u7b49\u4e8ei^2(\u751f\u6210\u524d\u7684\u6570)\u65f6\uff0c\u5e94\u7ed3\u675f\u9012\u5f52(\u56e0\u4e3a\u751f\u6210\u7684\u56de\u6587\u6570\u5927\u7ea6\u4e0ei^2\u76f8\u7b49)\n\n3.\u6bcf\u641c\u51fa\u4e00\u4e2a\u6570\uff0c\u8981\u653e\u5230\u6570\u7ec4\u91cc\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u8f93\u51fa\u3002\uff08\u8981\u4e0d\u7136\u4f1a\u4e0d\u6309\u987a\u5e8f\uff09\n\n4.\u6df1\u641c\u662f\u5bf9\u4e8e\u4e09\u4f4d\u4ee5\u4e0a\u56de\u6587\u7d20\u6570\uff0c\u6240\u4ee55,7,11\u5e94\u7279\u5224\uff1b\n\n5.\u56de\u6587\u4f4d\u6570\u4e3a\u5076\u6570\u7684\u6570\u53ef\u88ab11\u6574\u9664\uff0c\u5728\u6b64\u5141\u8bb8\u6211\u89e3\uff08zhuang\uff09\u91ca(bi)\u4e00\u4e0b\n  \n  \uff081\uff09\u4e24\u4f4d\u6570\u7684\u56de\u6587\u6570\u5fc5\u662f11\u7684\u500d\u6570\uff08\u8fd9\u8981\u518d\u4e0d\u660e\u767d\u56de\u53bb\u5b66\u6570\u5b66\u5427\uff09\n  \n  \uff082\uff09abba\u5f0f\u7684\u56de\u6587\u6570\u53ef\u62c6\u62101001a+110b=11(91a)+11(10b)*\uff0c\u4e58\u6cd5\u5206\u914d\u5f8b\uff0c\u5f97 \n     \uff0891a+10*b\uff09*11\u3002\u6240\u4ee5\u56db\u4f4d\u6570\u7684\u56de\u6587\u6570\u662f11\u7684\u500d\u6570\n  \n  \uff083\uff09abccba\u5f0f\u7684\u56de\u6587\u6570\u53ef\u62c6\u6210100001a+10(bccb)=11(9091)a+10(bccb) \u56e0 \n      \u4e3abccb\u662f11\u7684\u500d\u6570\uff0c\u6240\u4ee5abccba\u662f11\u7684\u500d\u6570\n  \n  \uff084\uff09\u2026\u2026\n  \n  \uff085\uff09\u6240\u4ee5\u56de\u6587\u4f4d\u6570\u4e3a\u5076\u6570\u7684\u6570\u53ef\u88ab11\u6574\u9664\n\n# \u63a5\u4e0b\u6765\u662f\u4f60\u4eec\u60f3\u8981\u7684\u4e1c\u897f\u4e86\uff01\n\n------------\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;//cout\uff0ccin\uff0cswap\u7b49\u51fd\u6570\u6216\u8bed\u53e5\u9700\u8c03\u7528\u3002\n                    //\u4e0d\u8c03\u7528\u5c31\u5199\u6210std::cout\u2026\u2026\nint l,r;\nint turn(int n)//\u751f\u6210\n{\n\tint a[10],i,sum=0,t=n;\n\tfor(i=0;n>0;i++,n/=10)a[i]=n%10;//\u5206\u79bb\u6570\u4f4d\uff0c\u653e\u5165\u6570\u7ec4\n\tfor(int j=1;j<i;j++)sum=sum*10+a[j];//\u5012\u5e8f\u653e\u5165\n\treturn sum+t*pow(10,i-1);//t\u662f\u539f\u6570\uff0c\u4e58\u4f4d\u6570\u540e\u4e0esum\u76f8\u52a0\n}\nbool check(int n)//\u5224\u65ad\u7d20\u6570\n{\n\tif(n%3==0)return false;//\u5148\u7279\u5224\uff0c\u5feb\u4e00\u70b9\n     \t\t\t\t\t   //\u601d\u8def\u4e0a\u7b2c\u4e00\u70b9\u5df2\u7ecf\u4fdd\u8bc1\u4e0d\u662f2,5\u500d\u6570\n\tfor(int i=7;i<=sqrt(n);i++)\n\t  if(n%i==0)return false;\n\treturn true;\n}\nvoid dfs(int i)\n{\n\tint x=turn(i);//\u751f\u6210x\u4e3a\u56de\u6587\u6570\n\tif(x>r)return;//\u5982\u679cx>\u53f3\u8fb9\u754c\u8fd4\u56de\n\tif(check(x)&&x!=7&&x>=l)printf(\"%d\\n\",x);\n\tfor(int j=0;j<10;j++)//\u641c\u7d220~9\n\t  if(i*i<r)dfs(i*10+j);\n\t  else return;\n}\nint main()\n{\n\tcin>>l>>r;\n\tif(l==5)printf(\"%d\\n%d\\n%d\\n\",5,7,11); \n\telse if(l<=7)printf(\"%d\\n%d\\n\",7,11); \n\telse if(l<=11)printf(\"%d\\n\",11);//5,7,11\u7279\u5224\n\tdfs(1);dfs(3);dfs(7);dfs(9);//\u601d\u8def\u4e0a\u7b2c\u4e00\u70b9\n    return 0;\n}\n```\n------------\n\n\u53ef\u662f\uff0c\n\n# \u5b83WA\u4e86\uff01\uff01\uff01\n\n\u968f\u4fbf\u8bd5\u4e00\u4e2a\u7a0d\u5927\u7684\u6570\u636e\u5c31\u77e5\u9053\uff0c\u987a\u5e8f\u4e0d\u5bf9\u3002\n\n\u4e8e\u662f\u6709\u4e86\u540e\u6765\u7684\u5feb\u6392\u2026\u2026\n\n------------\n\n```cpp\n#include<bits/stdc++.h>us\ning namespace std;\nint l,r,sum,a[1000000];\nint turn(int n)//\u751f\u6210\n{\n\tint a[10],i,sum=0,t=n;\n\tfor(i=0;n>0;i++,n/=10)a[i]=n%10;\n    for(int j=1;j<i;j++)sum=sum*10+a[j];\n    return sum+t*pow(10,i-1);\nbool check(int n)//\u5224\u65ad\u7d20\u6570\n{\n\tif(n%3==0)return false;\n\tfor(int i=7;i<=sqrt(n);i++)\n\t  if(n%i==0)return false;\n\treturn true;\n}\nvoid qsort(int l,int r)//\u5feb\u6392\n{\n\tint i=l,j=r,mid=a[(l+r)/2];\n\twhile(i<=j)\n\t{ while(a[i]<mid)i++;//\u627e\u5230\u5de6\u8fb9\u6bd4mid\u5927\u7684\u6570\n\t  while(a[j]>mid)j--;//\u627e\u5230\u53f3\u8fb9\u6bd4mid\u5c0f\u7684\u6570\n\t  if(i<=j)swap(a[i++],a[j--]);}//\u627e\u5230\u4ea4\u6362\n         //\u76f8\u5f53\u4e8eswap(a[i],a[j]);i++;j--;\n\tif(i<r)qsort(i,r);//\u6700\u540e\u4e00\u5b9a\u662fi>j,\n    if(l<j)qsort(l,j);//\u5de6\u8fb9\u4e00\u5b9a\u5168\u90e8\u6bd4\u53f3\u8fb9\u5c0f\uff0c\u9012\u5f52\u6392\u5e8f\n}\nvoid dfs(int i)//\u641c\u7d22\n{\n\tint x=turn(i);\n\tif(x>r)return;\n\tif(check(x)&&x!=7&&x>=l)a[sum++]=x;\n\tfor(int j=0;j<10;j++)\n\t  if(i*i<r)dfs(i*10+j);//\u9012\u5f52\u641c\u7d22,\u4e00\u6b21\u591a\u4e00\u4f4d\n\t  else return;\n}\nint main()\n{\n\tcin>>l>>r;\n\tif(l==5){a[0]=5;a[1]=7;a[2]=11;sum=3;} \n\telse if(l<=7){a[0]=7;a[1]=11;sum=2;} \n\telse if(l<=11)a[sum++]=11;//5,7,11\u7279\u5224\n\tdfs(1);dfs(3);dfs(7);dfs(9);\n\tqsort(0,sum-1);//\u8c03\u7528\u5feb\u6392\n\tfor(int i=0;i<sum;i++)printf(\"%d\\n\",a[i]);\n\treturn 0;\n}\n```\n\n------------\n\n### \u5c0f\u7287\u4eec\u770b\u4e0d\u61c2\u6b63\u5e38\uff0c\u56e0\u4e3a\u6211\u4e5f\u662f\u57fa\u672c\u778e\u5199\u7684\uff0c\u53ef\u5b83\u5c31\u662f\u8fc7\u4e86~~\n\n\u4e0d\u884c\u8fd8\u662f\u7528~~\u8349\u7387\u7684~~\u66b4\u641c\u5427\u2026\u2026\u2026\u2026",
        "postTime": 1537701755,
        "uid": 118040,
        "name": "\u4ec0\u4e48\u53eb\u4e2d\u4e8c\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\nusing namespace std;\nint Begin,End;\nint hwss;\nint digit;\nvoid ss(int cnt) //\u7d20\u6570\n{\n    for (int w = 2; w <= sqrt(cnt); ++w)\n    {\n        if (!(cnt % w))\n            return;\n    }\n    cout << cnt << endl;\n}\nvoid huiwen(int Digit,int pd,int hwss)\n{\n    if (Digit == digit / 2)\n    {\n        if (hwss > End) //\u5982\u679c\u56de\u6587\u6570\u5927\u4e8e\u6700\u5927\u503c\u76f4\u63a5\u7ed3\u675f\n            {\n                exit(0);\n            }\n        else if(hwss < Begin) //\u5982\u679c\u56de\u6587\u6570\u5c0f\u4e8e\u6700\u5c0f\u503c\u5c31\u7ee7\u7eed\u627e\u4e0b\u4e00\u4e2a\n            return;\n        else\n        {\n            ss(hwss); //\u4e2d\u95f4\u7684\u8bdd\u5c31\u5224\u65ad\u662f\u5426\u7d20\u6570\n            return;\n        }\n    }\n    if (!pd) //\u662f\u5426\u7b2c\u4e00\u4e2a\u6570\u5b57\n    {\n        for (int w = 1;w <= 9; w += 2){\n            if (pow(10,digit-1) / pow(10,Digit-1) == pow(10,Digit-1))\n            {                                   //\u987a\u6570\u548c\u9006\u6570\u7b2cn\u4e2a\u662f\u5426\u540c\u4e00\u4e2a\u6570\n                huiwen(Digit - 1,1,hwss + w * pow(10,Digit-1));\n            }\n            else\n                {\n                    huiwen(Digit - 1,1,hwss + w * pow(10,Digit-1) + w * (pow(10,digit-1) / pow(10,Digit-1)));\n                }\n        }\n    }\n    else\n    {\n        for (int w = 0;w <= 9; w++){\n            if (pow(10,digit-1) / pow(10,Digit-1) == pow(10,Digit-1))\n            {                                   //\u987a\u6570\u548c\u9006\u6570\u7b2cn\u4e2a\u662f\u5426\u540c\u4e00\u4e2a\u6570\n                huiwen(Digit - 1,1,hwss + w * pow(10,Digit-1));\n            }\n            else\n                {\n                    huiwen(Digit - 1,1,hwss + w * pow(10,Digit-1) + w * (pow(10,digit-1) / pow(10,Digit-1)));\n                }\n        }\n    }\n}\nint main()\n{\n    cin >> Begin >> End;\n    digit = 0;\n    int bg = Begin;\n    do{\n        bg /= 10;\n        digit++;\n    }while (bg > 0);//\u5224\u65ad\u6700\u5c0f\u4e3a\u591a\u5c11\u4f4d\n    while (digit <= 9)\n    {\n        huiwen(digit,0,0);\n        ++digit;\n    }\n}\n```\n# \u4e0d\u77e5\u9053\u4f60\u4eec\u770b\u4e0d\u770b\u5f97\u61c2\uff0c\u8fd9\u4e2a\u5168ac\uff0c\u65f6\u95f4\u5145\u8db3\uff0c\u6700\u957f\u7684\u65f6\u95f4\u70b9\u4e5f\u5c3127ms\u5c31\u662f\u6709\u70b9\u957f- -\n\u90a3\u6211\u5148\u8ba1\u7b97\u8981\u6c42\u8303\u56f4\u5185\u6700\u5c0f\u7684\u90a3\u4e2a\u6570\u7684\u4f4d\u6570\uff0c\u7136\u540e\u4f9d\u6b21\u5faa\u73af\u52a0\u4f4d\u6570\uff0c\u6700\u9ad8\u4f4d\u6570\u662f9\u4f4d\uff0c\u5c31\u662f\u4e00\u4ebf\uff0c\u6bcf\u5230\u4e00\u4f4d\u6570\uff0c\u6211\u5c31\u627e\u51fa\u8fd9\u4f4d\u6570\u7684\u6240\u6709\u56de\u6587\u6570\uff0c\t\u8fd9\u91cc\u627e\u56de\u6587\u6570\u6211\u6709\u4f18\u5316\uff0c\u5177\u4f53\u81ea\u5df1\u770b- -\uff0c\u522b\u95ee\u4e3a\u5565\uff0c\u6211\u4e0d\u4f1a\u8bb2\uff0c\u627e\u5230\u4e00\u4e2a\u56de\u6587\u6570\u5c31\u5224\u65ad\u662f\u5426\u7d20\u6570\uff0c\u5e76\u4e14\u6bcf\u6b21\u5224\u65ad\u56de\u6587\u6570\u7684\u65f6\u5019\u6211\u90fd\u4f1a\u5224\u65ad\u662f\u5426\u8d85\u51fa\u8303\u56f4\uff0c\u5982\u679c\u8d85\u51fa\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5exit\uff080\uff09\u9000\u51fa\u7a0b\u5e8f\uff0c\u5982\u679c\u4e0d\u7528exit\uff0c\u5c31\u4e0d\u4f1a\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5199\u4e2a\u5224\u65adbool\u53d8\u91cf",
        "postTime": 1536236690,
        "uid": 47371,
        "name": "LamoJunity",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u56de\u6eaf\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n```cpp\nvar  \n        l1,l2,i,a,b:longint;  \n        s1,s2:string;  \nfunction pd(k:longint):boolean;//\u5224\u65ad\u662f\u5426\u4e3a\u8d28\u6570  \nvar  \ni:longint;  \nbegin  \nfor i:=2 to trunc(sqrt(k)) do  \nif k mod i=0 then exit(false);  \nexit(true);  \nend;  \nprocedure yx(n,i:longint;s:string);  \nvar  \nj,k:longint;  \nc:char;  \nbegin  \nif i>(n+1) div 2 then begin//\u8fb9\u754c\u6761\u4ef6  \n                        if n div 2>0 then begin  \n                                                for j:=n div 2 downto 1 do  \n                                                        s:=s+s[j];  \n                                          end;  \n                        val(s,k);  \n                        if (k>=a) and (k<=b) and (pd(k)) then writeln(k);//\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6  \n                        exit;  //\u9000\u51fa\n                      end;  \nfor c:='0' to '9' do  \nbegin  \n        if (i=1) and (c='0') then continue;//\u9996\u4f4d\u4e0d\u4e3a0  \n        yx(n,i+1,s+c);  //\u9012\u5f52\nend;  \nend;  \nbegin  \n        read(a,b);  \n        str(a,s1);  \n        str(b,s2);  \n        l1:=length(s1);  \n        l2:=length(s2);  \n        for i:=l1 to l2 do  \n        yx(i,1,''); //\u9012\u5f52\u4ea7\u751fi\u4f4d\u56de\u6587\u6570 \nend.\n```",
        "postTime": 1443835334,
        "uid": 9087,
        "name": "fl_334",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "**\u8fd9\u9053\u9898\u5e94\u8be5\u7b97\u662f\u5165\u95e8\u9898\uff0c\u4f46\u662f\u9700\u8981\u5bf9\u4f20\u7edf\u505a\u6cd5\u8fdb\u884c\u4f18\u5316\u624d\u53ef\u4ee5\u3002**\n\n\n**Hinis:**\n\n1\u3001\u5148\u8fdb\u884c\u56de\u6587\u6570\u7684\u5224\u65ad\uff0c\u518d\u8fdb\u884c\u7d20\u6570\u7684\u5224\u65ad\u3002\n\n2\u3001\u8981\u6ce8\u610f\uff0c\u9664\u4e8611\u4ee5\u5916\uff0c\u5076\u6570\u4f4d\u7684\u6570\u4e0d\u5b58\u5728\u56de\u6587\u7d20\u6570\u3002\n\n\\_\u8bc1\u660e\uff1a\u5982\u679c\u4e00\u4e2a\u56de\u6587\u7d20\u6570\u7684\u4f4d\u6570\u662f\u5076\u6570\uff0c\u5219\u5b83\u7684\u5947\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u548c\u4e0e\u5076\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u548c\u5fc5\u7136\u76f8\u7b49\u3002\u6839\u636e\u6570\u7684\u6574\u9664\u6027\u7406\u8bba\uff0c\u8fd9\u6837\u7684\u6570\u80af\u5b9a\u80fd\u88ab11\u6574\u9664\uff0c\u6240\u4ee5\u5b83\u5c31\u4e0d\u53ef\u80fd\u662f\u7d20\u6570\u3002\\_\n\n\n```cpp\n\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\n\nconst int maxn=10000000;\nconst int maxm=5761489;\nconst int INF=1e9;\n\nint prime[maxm],a,b,cur=0;\n\nbool Check1(int x){\n    if(x==11)return true;\n    \n    char c[13];\n    \n    itoa(x,c,10);\n    \n    int l=strlen(c);\n    \n    if(l%2==0)return false;\n    \n    for(int i=0;i<l;i++)\n    if(c[i]!=c[l-i-1])return false;\n    \n    return true;\n}\n\nbool Check2(int x){\n    for(int i=2;i<=sqrt(x+0.0);i++)\n    if(x%i==0)return false;\n    \n    return true;\n}\n\nint main()\n{\n    //freopen(\"c.in\",\"r\",stdin);\n    //freopen(\"c.out\",\"w\",stdout);\n    \n    scanf(\"%d%d\",&a,&b);\n    \n    b=min(b,maxn);\n    \n    for(int i=a;i<=b;i++)\n    if(Check1(i))\n    if(Check2(i))\n    printf(\"%d\\n\",i);\n    \n    return 0;\n}\n\n```",
        "postTime": 1439619157,
        "uid": 5680,
        "name": "\u4e0a\u8fdb\u7684z\u541b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u4ee3\u7801\u53ef\u80fd\u6bd4\u8f83\u957f\uff0c150\u884c\u5de6\u53f3\uff0c\u4f46\u662f\u662f\u80fdac\u7684\u3002\n\n\u57fa\u672c\u601d\u8def\u5c31\u662f\uff0c\u7531\u4e8e\u5076\u6570\u4f4d\u7684\u56de\u6587\u6570\u90fd\u662f11\u7684\u500d\u6570\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u3002\n\n\u7528\u4e00\u4e2aswitch\u6765\u786e\u5b9a\u8303\u56f4\uff0c\u5206\u522b\u751f\u62101\uff0c3\uff0c5\uff0c7\uff0c9\u4f4d\u7684\u56de\u6587\u8d28\u6570\uff08\u6ce8\u610f11\u662f\u552f\u4e00\u4e00\u4e2a\u5076\u6570\u4f4d\u7684\u56de\u6587\u8d28\u6570\uff09\n\n\n```cpp\n\n#include<iostream>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nbool isprime(int a)\n{\n    int i;\n    for(i=3;i<=floor(sqrt(a)+0.5);i++)\n        if(a%i==0)\n            return false;\n    return true;\n}\nint weishu(int a)\n{\n    int i=0;\n    while(a>0)\n    {\n        a/=10;\n        i++;\n    }\n    return i;\n}\nint main()\n{\n    int start,end,i1,i2,i3,i4,i5,hw,ws[2];\n    cin>>start>>end;\n    ws[0]=weishu(start);\n    ws[1]=weishu(end);\n    switch(ws[0])\n    {\n        case 1:\n        {\n            if(ws[1]<1)\n                break;\n            for(i1=5;i1<=9;i1+=2)\n            {\n                   hw=i1;\n                   if(hw>end)\n                       break;\n                   else if(hw>=start&&isprime(hw))\n                       cout<<hw<<endl;\n            }\n        }\n        case 2:\n        {\n            if(ws[1]<2)\n                break;\n            if(end>=11&&start<=11)\n                cout<<\"11\"<<endl;\n        }\n        case 3:\n        {\n            if(ws[1]<3)\n                break;\n            for(i1=1;i1<=9;i1+=2)\n            {\n                for(i2=0;i2<=9;i2++) \n                {\n                       hw=100*i1+10*i2+i1;\n                       if(hw>end)\n                           break;\n                       else if(hw>=start&&isprime(hw))\n                           cout<<hw<<endl;\n                }\n            }\n        }\n        case 4:\n        {\n            if(ws[1]<4)\n                break;\n        }\n        case 5:\n        {\n            if(ws[1]<5)\n                break;\n            for(i1=1;i1<=9;i1+=2)\n            {\n                for(i2=0;i2<=9;i2++) \n                {\n                    for(i3=0;i3<=9;i3++)\n                    {\n                           hw=10000*i1+1000*i2+100*i3+10*i2+i1;\n                           if(hw>end)\n                               break;\n                           else if(hw>=start&&isprime(hw))\n                               cout<<hw<<endl;\n                       }\n                }\n            }\n        }\n        case 6:\n        {\n            if(ws[1]<6)\n                break;\n        }\n        case 7:\n        {\n            if(ws[1]<7)\n                break;\n            for(i1=1;i1<=9;i1+=2)\n            {\n                for(i2=0;i2<=9;i2++) \n                {\n                    for(i3=0;i3<=9;i3++)\n                    {\n                        for(i4=0;i4<=9;i4++)\n                        {\n                               hw=1000000*i1+100000*i2+10000*i3+1000*i4+100*i3+10*i2+i1;\n                               if(hw>end)\n                                   break;\n                               else if(hw>=start&&isprime(hw))\n                                   cout<<hw<<endl;\n                           }\n                    }\n                }\n            }\n        }\n        case 8:\n        {\n            if(ws[1]<8)\n                break;\n        }\n        case 9:\n        {\n            if(ws[1]<7)\n                break;\n            for(i1=1;i1<=9;i1+=2)\n            {\n                for(i2=0;i2<=9;i2++) \n                {\n                    for(i3=0;i3<=9;i3++)\n                    {\n                        for(i4=0;i4<=9;i4++)\n                        {\n                            for(i5=0;i5<=9;i5++)\n                            {\n                                   hw=100000000*i1+10000000*i2+1000000*i3+100000*i4+10000*i5+1000*i4+100*i3+10*i2+i1;\n                                   if(hw>end)\n                                       break;\n                                   else if(hw>=start&&isprime(hw))\n                                       cout<<hw<<endl;\n                               }\n                           }\n                    }\n                }\n            }\n        }\n    }\n}\n\n```",
        "postTime": 1427374788,
        "uid": 5543,
        "name": "Neil1110",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "1.\u56de\u6587\u8d28\u6570\u4e00\u5b9a\u662f\u5947\u6570\uff0c\u6240\u4ee5\u6570\u636e\u53ef\u4ee5\u780d\u4e00\u534a\u6389\n2.\u6570\u636e\u603b\u5171\u67098\u4f4d\u6570\u7684\uff0c7\u4f4d\u6570\u7684\uff0c6\u4f4d\u6570\u7684\uff0c5\u4f4d\u6570\u7684\uff0c\u76f4\u5230\u4e00\u4f4d\u6570\u3002\u6211\u628a8\u4f4d\u6570\u5206\u62104\u4f4d\u6570\u5199\u56db\u4e2afor\u5faa\u73af\uff0c\u540e\u56db\u4f4d\u6570\u76f4\u63a5\u7ffb\u8fc7\u53bb\u5c31\u884c\uff0c\u5c31\u50cf\u628a\u7eb8\u5bf9\u6298\u4e00\u4e0b\u3002\u540e\u9762\u76847\u4f4d6\u4f4d\u7b49\u4ee5\u6b64\u7c7b\u63a8\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```python\nimport math\n\n\ndef fun(a):\n    for i in range(2, int(math.sqrt(a))+1):\n        if a % i == 0:\n            return 0\n    return 1\n\n\nx = [2, 3, 5, 7, 11]\nfor i in range(1, 10):\n    for j in range(0, 10):\n        for k in range(0, 10):\n            for l in range(0, 10):\n                temp = i * 10000000 + j * 1000000 + k * 100000 + l * 10000+l * 1000+k * 100+j * 10+i\n                if fun(temp) == 1:\n                    x.append(temp)\n    i += 1\nfor i in range(1, 10):\n    for j in range(0, 10):\n        for k in range(0, 10):\n            temp = i * 100000 + j * 10000 + k * 1000 + k * 100 + j * 10 + i\n            if fun(temp) == 1:\n                x.append(temp)\n            for l in range(0, 10):\n                temp = i * 1000000 + j * 100000 + k * 10000 + l * 1000+k * 100+j * 10+i\n                if fun(temp) == 1:\n                    x.append(temp)\n    i += 1\nfor i in range(1, 10):\n    for j in range(0, 10):\n        temp = i * 1000 + j * 100 + j * 10 + i\n        if fun(temp) == 1:\n            x.append(temp)\n        for k in range(0, 10):\n            temp = i * 10000 + j * 1000 + k * 100 + j * 10 + i\n            if fun(temp) == 1:\n                x.append(temp)\n    i += 1\nfor i in range(1, 10):\n    for j in range(0, 10):\n        temp = i * 100 + j * 10 + i\n        if fun(temp) == 1:\n            x.append(temp)\n    i += 1\n\na, b = map(int, input().split())\nx.sort()\nfor i in range(len(x)):\n    if x[i] > b:\n        break\n    if x[i] >= a:\n        print(x[i])\n\n\n```",
        "postTime": 1537267937,
        "uid": 42028,
        "name": "scanf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u6709\u70b9bug  \n\u53ef\u4ee5\u5e94\u7528\u5230\u6240\u6709\u6c42\u8fd9\u79cd\u6570\u7684\u9898  \n\u53ea\u662f\u901f\u5ea6\u4f1a\u6162  \n\u4e0b\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cmath>  //sqrt\uff08\u5f00\u5e73\u65b9\uff09\u7528\u7684\u51fd\u6570\u5e93\nusing namespace std;\n\nbool su(int n){  //\u5224\u65ad\u7d20\u6570\u51fd\u6570\uff08\u5fc5\u719f\u7ec3\uff09\n    if (n<=1) return false;\n    for (int i=2;i<=sqrt(n);i++) if (n%i==0) return false;\n    return true;\n}\n\nbool hui(int n){  //\u5224\u65ad\u56de\u6587\u6570\u51fd\u6570\n    int a=n,b=0;\n    while(a){  //\u9010\u4f4d\u5206\u89e3\n\t\tb*=10;\n    \tb+=a%10;\n    \ta=a/10;\n    }\n    return b==n;  //\u76f8\u5f53\u4e8e if (b==n) return true ; else return false ;\n}\n\nint main(){\n    int n,m;\n    cin>>n>>m;\n    for (int i=n;i<=m;i++){\n        if (hui(i)) {  //\u56e0\u4e3a\u56de\u6587\u6570\u6bd4\u7d20\u6570\u5c11\uff0c\u6240\u4ee5\u5148\u5224\u65ad\u56de\u6587\n        \tif (su(i)) cout<<i<<endl;\n        \tif (i==9989899) return 0;  //\u8fd9\u91cc\u7684\u6d4b\u8bd5\u6570\u636e\u5230\u4e00\u4ebf\u5c31\u6ca1\u4e86\uff0c\u4f46\u662f\u4e00\u5343\u4e07\u5230\u4e00\u4ebf\u4e4b\u95f4\u662f\u6ca1\u6709\u4e00\u4e2a\u56de\u6587\u7d20\u6570\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u5728\u6700\u540e\u4e00\u4e2a\u56de\u6587\u7d20\u6570\u7ed3\u675f\uff0c\u4e0d\u7136\u4f1aTLE\n        }\n    }\n}\n```\n\u5982\u679c\u8981\u7528\u5230\u5b9e\u9645\u91cc\uff0c\u5f53\u7136\u697c\u4e0b\u7684\u66f4\u5b9e\u7528\uff0c\u849f\u84bb\u7684\u4ec5\u4f9b\u53c2\u8003",
        "postTime": 1530596422,
        "uid": 90298,
        "name": "Taurus_Lzc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u5982\u679c\u5b9e\u5728\u5728\u6b63\u89c4\u505a\u6cd5\u4e0a\u9762\u6709\u56f0\u96be\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u6253\u8868\u6cd5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u6211\u505a\u6b64\u9898\u65f6\uff0c\u6253\u8868\u53ef\u5206\u4e3a2\u6b65\n\n1.\u5236\u8868\n\n2.\u8f93\u51fa\n\n\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u9762\uff0c\u53ef\u4ee5\u5199\u51fa\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5c06\u8868\u5b58\u50a8\u5728\u4e00\u4e2a\u53ebresult.out\u7684\u6587\u4ef6\u91cc\u9762\n\n    \n    \n    \n    \n```cpp\n    #include<bits/stdc++.h>\n    #pragma GCC optimize(2) //\u7531\u4e8e\u662f\u81ea\u5df1\u7684\u7535\u8111\uff0c\u968f\u610f\u5f00\u542f\u4f18\u5316\n    using namespace std;\n    bool is_prime(int k)////\u5224\u65ad\u662f\u5426\u4e3a\u7d20\u6570\n    {\n        for (int i = 2; i<=(int)sqrt((double)k); i++)\n            if(k % i == 0)\n                return false;\n        return true;\n    }\n    bool is_palind(int k)//\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570\n    {\n        char a[100];\n        sprintf(a, \"%d\", k);\n        int len = strlen(a);\n        for (int i = 0; i<=len/2; i++)\n        {\n            if (a[i] != a[len-i-1])\n                return false;\n        }\n        return true;\n    }\n    int main()\n    {\n        freopen(\"result.out\", \"w\", stdout);\n        for (int i = 2; i<=100000000; i++)\n        {\n            if (is_palind(i) && is_prime(i)) //\u5c0f\u4f18\u5316\uff0c\u5982\u679c\u5148\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570\u518d\u5224\u65ad\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u8981\u8282\u7ea6\u4e00\u4e9b\u65f6\u95f4\n                cout<<i<<\" \";\n        }\n        return 0;\n    }\n```\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u5f20\u8868\u4e86\u3002\n\u6211\u4eec\u7528\u8bb0\u4e8b\u672c\u628a\u7a7a\u683c\u6362\u6210\u4e00\u4e2a\u9017\u53f7\uff0c\u4e4b\u540e\u88c5\u586b\u6210\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5927\u6982\u662f\u8fd9\u6837\u5b50\uff1a\n\n`int a[] = {2, 3};`\n\n\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e86\u6700\u7ec8\u4ee3\u7801\n\n        \n        \n        \n```cpp\n    #include<iostream>\n    using namespace std;\n    int a[] = {5, 7, 11, 101, \u00b7\u00b7\u00b7\u7701\u7565\u4e00\u5806\u6570\u5b57- -\u00b7\u00b7\u00b7 , 9981899, 9989899};\n    int main()\n    {\n        int l, r;\n        cin>>l>>r;\n        for (int i = 0; i<779; i++)\n        {\n            if (a[i] >= l && a[i] <= r)\n                cout<<a[i]<<endl;\n        }\n        return 0;\n    }\n\n```",
        "postTime": 1514453007,
        "uid": 60139,
        "name": "ABlueCat",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u6570\u7ec4\u5927\u5c0f\u5f88\u91cd\u8981\uff01\u6570\u7ec4\u5927\u5c0f\u5f88\u91cd\u8981\uff01\u6570\u7ec4\u5927\u5c0f\u5f88\u91cd\u8981\uff01\uff01\uff01\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\uff01\uff01\uff01\n\n\uff08\u4e3a\u4e86\u4e00\u4e2a\u5185\u5b58\u548c\u6570\u7ec4\u8d8a\u754cwa\u4e86\u65e0\u6570\u6b21\uff09\n\n```cpp\n#include <iostream>  \n#include <cmath>   \nusing namespace std;  \nbool a[100000001];  //\u5fc5\u987b\u8fd9\u4e48\u5f00\u6807\u8bb0\u6570\u7ec4\uff01\uff01\uff01\nint pz;  \nint zs(int z)  \n{  \n    for (int i=2;i<=sqrt(z);i++)  \n      if (z%i==0) return 0;  \n    return 1;  \n}  //\u5224\u65ad\u662f\u5426\u4e3a\u8d28\u6570\u7684\u51fd\u6570\nvoid hwzsb(int y)  \n{  \n    a[2]++;a[3]++;a[5]++;a[7]++;a[11]++;//\u7528\u6807\u8bb0\u6cd5\uff0c\u8fd9\u51e0\u4e2a\u5148\u6807\u8bb0\u4e3a\u56de\u6587\u8d28\u6570  \n    if (y<=100) return;  //\u5c0f\u4e8e100\u65e0\u9700\u5224\u65ad\uff08\u5c31\u4e0a\u9762\u90a3\u51e0\u4e2a\uff09\n    for (int d1=1;d1<=9;d1+=2)  //\u56de\u6587\u8d28\u6570\u4e3a\u5947\u6570\uff0c\u9996\u5c3e\u6bcf\u6b21+2\n      for (int d2=0;d2<=9;d2++)  \n      {  \n          pz=d1*100+d2*10+d1;  \n          if (zs(pz)) a[pz]=1;  \n      }  //\u751f\u6210\u4e09\u4f4d\u7684\u56de\u6587\u8d28\u6570\n    if (y<=10000) return;  //\u5c0f\u4e8e\u4e94\u4f4d\u5728\u8fd9\u91cc\u7ec8\u6b62\n    for (int d1=1;d1<=9;d1+=2)  \n      for (int d2=0;d2<=9;d2++)  \n        for (int d3=0;d3<=9;d3++)  \n        {  \n            pz=d1*10000+d2*1000+d3*100+d2*10+d1;  \n            if (zs(pz)) a[pz]=1;  \n        }  //\u4ea7\u751f\u4e94\u4f4d\u56de\u6587\u8d28\u6570\n    if (y<=1000000) return;  //\u5c0f\u4e8e\u4e03\u4f4d\u5728\u6b64\u7ec8\u6b62\n    for (int d1=1;d1<=9;d1+=2)  \n      for (int d2=0;d2<=9;d2++)  \n        for (int d3=0;d3<=9;d3++)  \n          for (int d4=0;d4<=9;d4++)  \n          {  \n              pz=d1*1000000+d2*100000+d3*10000+d4*1000+d3*100+d2*10+d1;  \n              if (zs(pz)) a[pz]=1;  \n          }   //\u4ea7\u751f\u4e03\u4f4d\u56de\u6587\u8d28\u6570 \n}  \nint main()  \n{  \n    int x,y;  \n    cin>>x>>y;  \n    hwzsb(y);  \n    for (int i=x;i<=y;i++)  \n      if (a[i]) cout<<i<<endl;  //\u88ab\u6807\u8bb0\u4e86\u5c31\u8f93\u51fa\n    return 0;  \n}\n```",
        "postTime": 1457176712,
        "uid": 14380,
        "name": "24680esz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "```cpp\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>//\u5f15\u7528\u5934\u6587\u4ef6\nint prime(long num)//\u5224\u65ad\u7d20\u6570\n{\n  int i=2;\n  for (i=2;i*i<=num;i++)//\u5224\u65ad\u5230\u8be5\u6570\u7684\u5f00\u65b9\u53d6\u6574\n  {\n    if (num%i==0) return 0;//\u80fd\u88ab\u9664\u5c3d\u5c31\u4e0d\u662f\u7d20\u6570\n  }\n  return 1;\n}\nint hw(long num)//\u5224\u65ad\u56de\u6587\u6570\n{\n  char s[101];\n  int r=0,l=-1;\n  itoa(num,s,10);//\u628a\u6570\u5b57\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\n  r=strlen(s);\n  while(r>l)//\u53ea\u8981\u5de6\u53f3\u4e0b\u6807\u4e0d\u78b0\u5934\u5c31\u5224\u65ad\n  {\n    r--;//\u53f3\u4e0b\u6807\u5411\u4e2d\u5fc3\u79fb\u4e00\u4f4d\n    l++;//\u5de6\u4e0b\u6807\u5411\u4e2d\u5fc3\u79fb\u4e00\u4f4d\n    if (s[l]!=s[r]) return 0;//\u5982\u679c\u4e24\u4e2a\u4e0b\u6807\u6240\u5728\u7684\u5b57\u7b26\u4e0d\u4e00\u6837\u5c31\u4e0d\u662f\u56de\u6587\u6570\n  }\n  return 1;//\u662f\u56de\u6587\u6570\u8fd4\u56de1\n}\nvoid main()//\u4e3b\u7a0b\u5e8f\n{\n  long i=0,x=0,y=0;\n  scanf(\"%d %d\",&x,&y);//\u8bfb\u5165\u8303\u56f4\n  for (i=x;i<=y;i++)//\u679a\u4e3e\n  {\n    if (hw(i)==1)//\u5148\u5224\u65ad\u662f\u5426\u662f\u56de\u6587\n    {\n      if (prime(i)==1)//\u540e\u5224\u65ad\u662f\u5426\u662f\u7d20\u6570\n        printf(\"%d\\n\",i);//\u662f\u7684\u5c31\u8f93\u51fa\n    }\n  }\n}//\u7ed3\u675f\n\n```\n\u4e3b\u7a0b\u5e8f\u8bf7\u6539\u6210int\u8fd4\u56de\n",
        "postTime": 1444202771,
        "uid": 9924,
        "name": "LEXUGE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u4e94\u697c\u7684\u6709\u95ee\u9898\u7684\uff0c\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a\n\n   \n   \n   \n   \n```cpp\nvar a,b,l:longint;  \nfunction w(k:longint):integer;  \n  var t:longint;  \n      s:integer;  \n  begin  \n    t:=k;  \n    s:=0;  \n    while t<>0 do  \n      begin  \n        s:=s+1;  \n        t:=t div 10;  \n      end;  \n    w:=s;  \n  end;  \nprocedure init;  \n  begin  \n    readln(a,b);  \n    l:=w(b);  \n  end;  \nfunction judge(st:string):longint;  \n  var i,t,code:longint;  \n  begin  \n    if (length(st) mod 2=0) and (st<>'11') then exit(0); //\uff0811\u90a3\u7684\u4e24\u4e2a\\\u8981\u53bb\u6389\uff09 \n    val(st,t,code);  \n    if (t<a) or (t>b) then exit(0);  \n    for i:=2 to trunc(sqrt(t)) do  \n      if t mod i=0 then begin exit(0); break; end;  \n    judge:=t;  \n  end;  \nprocedure search(k:integer);  \n  var s,e,i,j,g:longint;  \n      st1,st2:string;  \n  begin  \n    if k>l then exit;  \n    if k mod 2=0 then  \n      begin  \n        s:=1;  \n        e:=9;  \n        for i:=1 to k div 2-1 do  \n          begin  \n            s:=s*10;  \n            e:=e*10+9;  \n          end;  \n        for i:=s to e do  \n          begin  \n            str(i,st1);  \n            st2:=st1;  \n            for j:=length(st1) downto 1 do  \n              st2:=st2+st1[j];  \n            g:=judge(st2);  \n            if g<>0 then writeln(g);  \n          end;  \n      end  \n    else  \n      begin  \n        s:=1;  \n        e:=9;  \n        for i:=1 to (k+1) div 2-1 do  \n          begin  \n            s:=s*10;  \n            e:=e*10+9;  \n          end;  \n        for i:=s to e do  \n          begin  \n            str(i,st1);  \n            st2:=st1;  \n            for j:=length(st1)-1 downto 1 do  \n              st2:=st2+st1[j];  \n            g:=judge(st2);  \n            if g<>0 then writeln(g);  \n          end;  \n      end;  \n    search(k+1);  \n  end;  \nbegin  \n  init;  \n  search(1);  \nend.\n```",
        "postTime": 1429081906,
        "uid": 6293,
        "name": "\u672b\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8be5\u9898\u91cd\u8981\u7684\u662f\u5148\u6c42\u56de\u6587\u518d\u6c42\u7d20\u6570\uff0c\u5426\u5219\u8d85\u65f6\u3002\n\n\u6211\u662f\u5148\u628a\u6240\u6709\u76841-8\u4f4d\u6570\u7684\u56de\u6587\u7d20\u6570\u5b58\u5728\u6570\u7ec4\u91cc\uff0c\u8f93\u51fa\u53ea\u8981\u627e\u8303\u56f4\u5c31\u884c\u4e86\u3002\n\n\u6700\u7ec8\u53d1\u73b0\u6ca1\u67094\u4f4d\uff0c6\u4f4d\uff0c8\u4f4d\u7684\u56de\u6587\u7d20\u6570\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\nvar\n  m,n,i,j,k,y,count:longint;\n  aa:array [1..1000000] of longint;\nfunction shushu(x:longint):boolean;\nvar\n  f:boolean; a:longint;\nbegin\n  f:=true;\n  for a:=2 to trunc(sqrt(x)) do\n    if x mod a=0 then\n     begin f:=false;break;\n     end;\n  exit(f);\nend;\nfunction fan2(x:longint):longint;\nvar\n a:longint;\nbegin\n  A:=x div 10;\n  while x<>0 do\n    begin\n       a:=a*10+x mod 10;\n       x:=x div 10;\n    end;\n  fan2:=a;\nend;\nprocedure build(x:longint);\nvar\n  i,j:longint;\nbegin\n  case x of\n   1: begin aa[1]:=2;aa[2]:=3;aa[3]:=5;aa[4]:=7;k:=4;end;\n   2: for i:=1 to 9 do\n          if shushu(i*10+i) then begin k:=k+1;aa[k]:=i*10+i;end;\n   3:for i:=10 to 99 do\n          if shushu(i*10+(i div 10)) then begin k:=k+1;aa[k]:=i*10+(i div 10);end;\n   5:for i:=100 to 999 do\n          if shushu(fan2(i)) then begin k:=k+1;aa[k]:=fan2(i);end;\n   7:for i:=1000 to 9999 do\n          if shushu(fan2(i)) then begin k:=k+1;aa[k]:=fan2(i);end;\n  end;\nend;\nbegin\n  readln(m,n);\n  k:=0;\n  for i:=1 to 8 do\n    build(i);\n  i:=1;\n  while aa[i]<m do i:=i+1;\n  for i:=i to k do\n    begin\n      if aa[i]>n then break;\n      writeln(aa[i]);\n    end;\nend.\n\n```",
        "postTime": 1426686208,
        "uid": 6371,
        "name": "nbgulong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "### \u9898\u610f\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u672c\u849f\u84bb\u662f\u4e2a\u6b7b\u5fc3\u773c\uff0c\u672c\u6765\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u56de\u6587\u6570\u518d\u5224\u65ad\u7684\uff0c\u53ef\u662f\u672c\u849f\u84bb\u5c31\u60f3\u7528\u7b5b\u6cd5\u628a\u4ed6\u5199\u5b8c\uff0c\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u4e0b\u5076\u6570\uff08\u5927\u4e8e\u4e8c\uff09\u4e3a\u7684\u56de\u6587\u6570\u4e0d\u53ef\u80fd\u662f\u8d28\u6570\u3002\n \n**\u8bc1\u660e\u4e00\u4e0b\u5076\u6570\u4f4d\u6570\u7684\u56de\u6587\u6570\u90fd\u4e0d\u662fprime number(11\u9664\u5916)\u3002**\n\n**\u8bc1\u660e\u4e00\u4e0b\u6700\u96be\u76848\u4f4d\u6570\u5427\uff0c\u5176\u4ed6\u7684\u540c\u7406\u3002**\n\n**\u8bbex=10000001i+1000010j+100100k+11000l(i\u4e3a1-9\u7684\u81ea\u7136\u6570,j,k,l\u4e3a0-9\u7684\u81ea\u7136\u6570)\u3002**\n\n**\u5206\u89e3\u5f97x=11(909091i+90910j+9100k+1000l)\u3002**\n\n**\u53c8909091i+90910j+9100k+1000l>2\u3002**\n\n**\u223411|x\u3002**\n\n**x\u5fc5\u5b9a\u4e3a\u5408\u6570\u3002**\n\n### \u540c\u7406\u53ef\u5f97\u5f53\u56de\u6587\u6570x\u7684\u4f4d\u6570\u4e3a\u5076\u6570\u4f4d\u65f6\u5fc5\u670911|x\u5f53x/11>2\u65f6x\u5fc5\u4e3a\u5408\u6570\u3002\n\n**\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\u5c31\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u5947\u6570\u4f4d\u7684\u56de\u6587\u6570\u3002**\n\n### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint l,r,a[100];\nbool p[100000001];\nvoid make()//\u5f00\u59cb\u60f3\u5199\u7b5b\u6cd5\uff0c\u4e0d\u8fc7\u540e\u6765\u4e00\u7b97\u65f6\u95f4\u4e0d\u5927\u591f\uff0c\u5c31\u7528\u4e86\u4e00\u822c\u5224\u65ad\u3002\u4e0d\u60f3\u770b\u7b5b\u6cd5\u81ea\u884c\u7565\u8fc7\n{\n    p[1]=0;//\u628a1\u6807\u8bb0\u4e3a0\n    int q=(int)sqrt(r);//i\u5faa\u73af\u5230sqrt(r)\n    for (int i=2;i<=q;i++)\n        if (p[i])//\u5982\u679ci\u662f\u8d28\u6570\u90a3\u4e48\u5b83\u6240\u6709\u7684\u500d\u6570\u6807\u8bb0\u4e3a0\n            for (int j=2;j<=r/i;j++)//2\u500d\uff5er/i\u500d\n                p[i*j]=0;//\u6807\u8bb0\n}\nbool pd(int x)//\u4e00\u822c\u8d28\u6570\u5224\u65ad\n{\n    int q=(int)sqrt(x);\n    for (int i=2;i<=q;i++)\n        if (x%i==0)\n            return 0;\n    return 1;\n}\nvoid tab(int n,int t)//\u5982\u679c\u4e0d\u56de\u6587\u7684\u90e8\u5206\u586b\u5b8c\u4e86\n{\n    if (t>(n+1)/2)\n    {\n        int s=0;\n        for (int i=1;i<=n/2;i++)//\u628a\u586b\u7684\u6570\u6269\u5c55\u6210\u56de\u6587\u6570\n            a[n-i+1]=a[i];\n        for (int i=1;i<=n;i++)//\u4ece\u6570\u7ec4\u8f6c\u5316\u4e3a\u6570\n            s=s*10+a[i];\n        if (s>r||s<l)//\u5982\u679c\u5927\u4e86\u6216\u5c0f\u4e86\u5c31return\uff08\u8fd9\u4f60\u5b8c\u5168\u53ef\u4ee5\u653e\u5728\u524d\u9762\u5224\u65ad\uff0c\u6548\u7387\u66f4\u9ad8\uff09\n            return;\n        if (pd(s))//\u5982\u679cs\u662f\u8d28\u6570\n            printf(\"%d\\n\",s);\n\t\t} \n    else\n        for (int i=(t==1);i<=9;i+=(t==1)+1)//\u5982\u679c\u662f\u7b2c\u4e00\u4f4d\u90a3\u4e48\u4ece1\u52309\u5faa\u73af\uff0c\u5426\u5219\u4ece0\u52309\u5faa\u73af\uff1b\u5982\u679c\u662f\u7b2c\u4e00\u4f4d\u90a3\u4e48\u6bcf\u6b21\u52a02\uff08\u8d28\u6570\uff09\uff0c\u5426\u5219\u6bcf\u6b21\u52a01\n        {\n            a[t]=i;//\u8bb0\u5f55\n            tab(n,t+1);//\u9012\u5f52\u586b\u4e0b\u4e00\u4f4d\u7684\u6570\n        }\n}\nint main()\n{\n    scanf(\"%d%d\",&l,&r);\n    memset(p,1,sizeof(p));\n    for (int i=ceil(log10(l));i<=ceil(log10(r));i++)//\u9488\u5bf9i\uff5ej\u533a\u95f4\u7684\u6570\u8fdb\u884c\u4ea7\u751f\uff0cceil(log10(r))\u662fr\u7684\u4f4d\u6570\n        tab(i,1);//\u4ea7\u751f\n}\n```",
        "postTime": 1542287223,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6253\u66b4\u529b\u7adf\u7136\u4e0d\u4f1a\u8d85\u65f6\uff0c\u771f\u795e\u5947\uff08\u53ef\u80fd\u662f\u56e0\u4e3a\u52a0\u4e86register\uff08\u6ed1\u7a3d\uff09\uff09\uff0c\u597d\u4e86\u8fdb\u5165\u6b63\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u4e3a\uff1a\n\n1\uff0c\u5224\u65ad\u8d28\u6570\u7684\u51fd\u6570\u3002\n\n2\uff0c\u56de\u6587\u6570\u51fd\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u5f00\u59cb\u6253\u66b4\u529b\u4e86\uff0c\u628a\u6240\u6709\u60c5\u51b5\u6709\u5e8f\u7684\u679a\u4e3e\u5b8c\u5373\u53ef\uff0c\u601d\u8def\u5f88\u7b80\u5355\uff0c\u53ea\u662f\u4ee3\u7801\u6709\u70b9\u96be\u5199\uff0c\u770b\u4ee3\u7801\u5c31\u884c\u4e86\u3002\n\nC++ Code\uff1a\n\n```cpp\n    #include<bits/stdc++.h>\n    #define Runtime int//\u6240\u4ee5\u53ef\u4ee5\u5ffd\u89c6\u8fd9\u4e00\u884c\n    #define Error main//\u8fd9\u4e00\u884c\u4e5f\u5ffd\u89c6\n    using namespace std;\n    inline bool zhishu(int n) {//\u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570\n    for(int k=2; k<=sqrt(n); ++k)\n    if(n%k==0)\n    return false;\n    return true;\n    }\n    inline int huiwen(int n) {//\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570\u7684\u51fd\u6570\n        int m=1,k=n;\n        while(k>9) {//\u5f53k>9\u6267\u884c\u5faa\u73af\n            k/=10;\n            ++m;\n        }\n        return m;\n    }\n    Runtime Error(void) {//\u8fd9\u4e00\u884c\u8c8c\u4f3c\u4e0d\u80fd\u5ffd\u89c6\u2026\u2026\n        int l,m,n,q,w,i,j,k;\n        cin>>m>>n;\n        q=huiwen(m);//\n        w=huiwen(n);//\u7528\u4e24\u4e2a\u53d8\u91cf\u5206\u522b\u8868\u793a\u56de\u6587\u6570\n        if(q<=1&&w>=1) {//\u4ee5\u4e0b\u5c31\u662f\u679a\u4e3e\u7684\u601d\u60f3\uff0c\u8981\u6709\u5e8f\u7684\u5c1d\u8bd5\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u5148\u5224\u65ad\u518d\u5faa\u73af\u3002\u5c31\u4e0d\u7528\u8bf4\u4e86\n            if((m<=5)&&(n>=5))\n                cout<<5<<endl;\n            if((m<=7)&&(n>=7))\n                cout<<7<<endl;\n        }\n        if((q<=2)&&(w>=2)) {//\u7b2c\u4e00\u7c7b\n            if((m<=11)&&(n>=11))\n                cout<<11<<endl;\n        }\n        if((q<=3)&&(w>=3)) {//\u7b2c\u4e8c\u7c7b\n            for(register int a=1; a<=9; a+=2)\n                for(int b=0; b<=9; ++b) {\n                    int f=a*100+b*10+a;\n                    if(f<m)\n                        continue;\n                    if(f>n)\n                        return 0;\n                    if(zhishu(f))\n                        cout<<f<<endl;\n                }\n        }\n        if((q<=5)&&(w>=5)) {//\u7b2c\u4e09\u7c7b\n            for(register int a=1; a<=9; a+=2)\n                for(register int b=0; b<=9; ++b)\n                    for(register int c=0; c<=9; ++c) {\n                        int f=a*10000+b*1000+c*100+b*10+a;\n                        if(f<m)\n                            continue;\n                        if(f>n)\n                            return 0;\n                        if(zhishu(f))\n                            cout<<f<<endl;\n                    }\n        }\n        if((q<=7)&&(w>=7)) {//\u7b2c\u56db\u7c7b\n            for(register int a=1; a<=9; a+=2)\n                for(register int b=0; b<=9; ++b)\n                    for(register int c=0; c<=9; ++c)\n                        for(register int d=0; d<=9; ++d) {\n                            int f=a*1000000+b*100000+c*10000+d*1000+c*100+b*10+a;//\u6700\u540e\u8d4b\u4e00\u4e0b\u503c\n                            if(f<m)\n                                continue;\n    if(f>n)\n    return 0;\n    if(zhishu(f))\n    cout<<f<<endl;//\u5224\u65ad\u4e4b\u540e\u5c31\u53ef\u4ee5\u8f93\u51fa\u4e86\n                        }\n        }\n        return 0;//\u517b\u6210\u826f\u597d\u4e60\u60ef\n}\n```",
        "postTime": 1513834245,
        "uid": 79986,
        "name": "dBook",
        "ccfLevel": 0,
        "title": "\u6240\u4ee5\u8fd8\u662f\u5149\u8363\u7684\u6253\u4e86\u66b4\u529b\u2026\u2026\u52a0\u6cb9\uff01\uff01"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u697c\u4e0b\u7684\u7a0b\u5e8f\uff0c\u6bd4\u8f83\u957f\uff08\u697c\u4e0b\u5e94\u8be5\u8fd8\u6ca1\u5b66\u56de\u6eaf\uff09\u3002\u56de\u6eaf\u5199\u7684\uff0c\u76f8\u5bf9\u6765\u8bf4\u4ee3\u7801\u8981\u77ed\u4e9b\u6709\u4e9b\u6761\u4ef6\u662f\u53ef\u4ee5\u5728\u4e2d\u95f4\u52a0\u4e0a\u5224\u65ad\u7684\uff0c\u672c\u4eba\u61d2\n\n\u7684\u5199\uff0c\u5168\u90e8\u4e0d\u8d85\u8fc730ms\u8fc7\u4e86\u9664\u4e86\u4e00\u4e2a\u662f32ms\u3002\u6c34\u5e73\u4e0d\u9ad8\u89c1\u8c05\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\nint l,r,a[100];\nbool p[100000001];\nvoid make()                   //\u5f00\u59cb\u60f3\u5199\u7b5b\u6cd5\uff0c\u4e0d\u8fc7\u540e\u6765\u4e00\u7b97\u65f6\u95f4\u4e0d\u5927\u591f\uff0c\u5c31\u7528\u4e86\u4e00\u822c\u5224\u65ad\u3002\u4e0d\u60f3\u770b\u7b5b\u6cd5\u81ea\u884c\u7565\u8fc7\n{\n    p[1]=0;                  //\u628a1\u6807\u8bb0\u4e3a0\n    int q=(int)sqrt(r);   //i\u5faa\u73af\u5230sqrt(r)\n    for (int i=2;i<=q;i++)\n        if (p[i])          //\u5982\u679ci\u662f\u8d28\u6570\u90a3\u4e48\u5b83\u6240\u6709\u7684\u500d\u6570\u6807\u8bb0\u4e3a0.\n            for (int j=2;j<=r/i;j++)           //2\u500d\uff5er/i\u500d\n                p[i*j]=0;        //\u6807\u8bb0\n}\nbool pd(int x)           //\u4e00\u822c\u8d28\u6570\u5224\u65ad\uff0c\u4e0d\u89e3\u91ca\n{\n    int q=(int)sqrt(x);\n    for (int i=2;i<=q;i++)\n        if (x%i==0)\n            return 0;\n    return 1;\n}\nvoid tab(int n,int t)\n{\n    if (t>(n+1)/2)                             //\u5982\u679c\u4e0d\u56de\u6587\u7684\u90e8\u5206\u586b\u5b8c\u4e86\n    {\n        int s=0;                             //\u9884\u5907\u8f93\u51fa\n        for (int i=1;i<=n/2;i++)           //\u628a\u586b\u7684\u6570\u6269\u5c55\u6210\u56de\u6587\u6570\n            a[n-i+1]=a[i];\n        for (int i=1;i<=n;i++)             //\u4ece\u6570\u7ec4\u8f6c\u5316\u4e3a\u6570\n            s=s*10+a[i];\n        if (s>r||s<l)                  //\u5982\u679c\u5927\u4e86\u6216\u5c0f\u4e86\u5c31return\uff08\u8fd9\u4f60\u5b8c\u5168\u53ef\u4ee5\u653e\u5728\u524d\u9762\u5224\u65ad\uff0c\u6548\u7387\u66f4\u9ad8\uff09\n            return;\n        if (pd(s))                   //\u5982\u679cs\u662f\u8d28\u6570\n            cout<<s<<endl;          //\u8f93\u51fa\n    } \n    else\n        for (int i=(t==1);i<=9;i+=(t==1)+1)              \n                //\u5982\u679c\u662f\u7b2c\u4e00\u4f4d\u90a3\u4e48\u4ece1\u52309\u5faa\u73af\uff0c\u5426\u5219\u4ece0\u52309\u5faa\u73af\uff1b\u5982\u679c\u662f\u7b2c\u4e00\u4f4d\u90a3\u4e48\u6bcf\u6b21\u52a02\uff08\u8d28\u6570\uff09\uff0c\u5426\u5219\u6bcf\u6b21\u52a01\n        {\n            a[t]=i;              //\u8bb0\u5f55\n            tab(n,t+1);        //\u9012\u5f52\u586b\u4e0b\u4e00\u4f4d\u7684\u6570\n        }\n}\nint main()\n{\n    cin>>l>>r;                          //\u8bfb\u5165l\u548cr\n    memset(p,1,sizeof(p));\n//    make();                              //\u8fd9\u91cc\u6ce8\u91ca\u6389\u4e86\n    for (int i=ceil(log10(l));i<=ceil(log10(r));i++)           //\u9488\u5bf9i\uff5ej\u533a\u95f4\u7684\u6570\u8fdb\u884c\u4ea7\u751f\uff0cceil(log10(r))\u662fr\u7684\u4f4d\u6570\n        tab(i,1);                         //\u4ea7\u751f\n}\n```",
        "postTime": 1471771917,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\n\n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint a,b,ans;\nstring cst=\"0123456789\";//\u540e\u9762\u7528\u6765\u8d4b\u503c\nbool pri(int x) {//\u5224\u65ad\u8d28\u6570\n    for(int i=sqrt(x);i>=2;i--)\n        if(x%i==0) return false;\n    return true;\n}\nvoid DFS(int d,int bts,string s) {//\u5df2\u7ecf\u4e3e\u51fa\u7684\u4f4d\u6570,\u603b\u4f4d\u6570,\u5df2\u7ecf\u679a\u4e3e\u7684\u6570\u5b57\u5f62\u6210\u7684\u4e32\n    if(d==bts/2+(bts%2) +1 ) {//\u5076\u4f4d\u6570\u8981\u679a\u4e3e\u5230bts/2\u4f4d,\u5947\u4f4d\u6570\u8981\u679a\u4e3e\u5230bts/2+1\u4f4d \n        int num=0;\n        for(int i=0;i<s.length();i++) num=num*10+(s[i]-'0');\n        if(bts%2==0) for(int i=s.length()-1;i>=0;i--) num=num*10+(s[i]-'0');\n        else for(int i=s.length()-2;i>=0;i--) num=num*10+(s[i]-'0');\n        if(a<=num&&num<=b&&pri(num)) printf(\"%d\\n\",num); \n        return;\n    }\n    for(int i= (d==1) ? 1:0;i<=9;i++) {\n        if(d==1&&i%2==0) continue;\n        string p=cst.substr(i,1);//\u5199\u6cd5\u62d9\u52a3,\u53ea\u4f1a\u8fd9\u6837\u5c06\u53d8\u91cf\u8d4b\u7ed9\u5b57\u7b26\u4e32\n/*s.substr() \u51fd\u6570\u53c2\u6570\u586b\u4e24\u4e2a(a,b)\u8fd4\u56des\u7684\u4ee5a\u5f00\u59cb\u957f\u5ea6b\u7684\u5b50\u4e32,\u53ea\u586b\u4e00\u4e2a\u53c2\u6570(a)\u8fd4\u56des\u7684\u4ee5a\u5f00\u59cb\u81f3\u672b\u5c3e\u7684\u5b50\u4e32*/\n        DFS(d+1,bts,s+p);\n    }\n}\nint main() {\n    scanf(\"%d%d\",&a,&b);\n    int x=a,y=b,la=0,lb=0;\n    while(x) x/=10,la++;\n    while(y) y/=10,lb++;\n    for(int i=la;i<=lb;i++) DFS(1,i,\"\");//\u751f\u6210\u4f4d\u6570\u5728a\u548cb\u7684\u4f4d\u6570\u4e4b\u95f4\u7684\u56de\u6587\u6570\n    return 0;\n}\n```",
        "postTime": 1448091054,
        "uid": 11743,
        "name": "_s_t_d_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    },
    {
        "content": "\u751f\u6210\u8d28\u6570\u8868\uff0c\u7edf\u8ba1\u8d28\u6570\u8868\u7684A\u5230B\u5185\u7684\u56de\u6587\u6570\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint a,b;\nbool excel[100000005];\nvoid prime(int b)//\u751f\u6210\u8d28\u6570\u8868 \n{\n    for (int i=1;i<=b;i++) excel[i]=true;//\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u5168\u90e8\u90fd\u662f\u8d28\u6570 \n    excel[1]=false;//1\u4e0d\u662f\u8d28\u6570 \n    for (int i=2;i<=b;i++)\n    {\n        if (excel[i]==true)\n        {\n            for (int j=2;j<=b/i;j++)\n            excel[i*j]=false;//\u8d28\u6570\u7684\u500d\u6570\u7edd\u5bf9\u4e0d\u662f\u8d28\u6570\uff0c\u628a\u6240\u6709\u8d28\u6570\u7684\u500d\u6570\u5168\u90e8\u8bbe\u4e3a\u5047 \n        }\n    }\n}\nbool hws(int num)//\u5224\u65ad\u56de\u6587\u6570 \n{\n    \n    int temp=num,ans=0;\n    while (temp!=0)\n    {\n        ans=ans*10+temp%10;\n        temp/=10;\n    }//\u56de\u6587\u6570\u5c31\u662f\u5012\u8fc7\u6765\u548c\u6b63\u7740\u8bfb\u90fd\u4e00\u6837\uff0c\u8fd9\u91cc\u662f\u628a\u6570\u5b57\u5012\u8fc7\u6765\u3002 \n    if (ans==num) return true;\n    else return false;//\u5224\u65ad\u6b63\u7740\u7684\u6570\u5b57\u548c\u5012\u7740\u7684\u6570\u5b57\u662f\u5426\u4e00\u6837 \n}\nint main()\n{\n    cin>>a>>b;\n    if (b<=10000000) prime(b);//b<=10000000\u8fd9\u4e2a\u5224\u65ad\u6761\u4ef6\u6765\u81ea\u56de\u6587\u6570\u731c\u60f3\uff0c\u4ee3\u7801\u540e\u9762\u4f1a\u89e3\u91ca\u56de\u6587\u6570\u731c\u60f3 \n    else \n    {\n        b=b/10;\n        prime(b);\n    }//\u751f\u6210\u8d28\u6570\u8868 \n    if (a!=2&&a%2==0) a++;//\u9664\u4e862\u4ee5\u5916\uff0c2\u7684\u500d\u6570\u4e0d\u53ef\u80fd\u662f\u8d28\u6570 \n    for (int i=a;i<=b;i+=2)\n    {\n        if (excel[i]==true&&hws(i)) cout<<i<<endl;//\u5982\u679c\u65e2\u662f\u8d28\u6570\u540c\u65f6\u4e5f\u662f\u56de\u6587\u6570\uff0c\u5c31\u8f93\u51fa\u3002 \n    }\n    return 0;\n} \n//Zehra\u662f\u6211\u7684\u8001\u5e08\uff0c\u6240\u4ee5\u6211\u7684\u4ee3\u7801\u548cZehra\u6bd4\u8f83\u50cf \n\n```\n\u56de\u6587\u6570\u731c\u60f3\uff1a\u9664\u4e8611\u4ee5\u5916\uff0c\u6240\u6709\u6570\u7684\u4f4d\u6570\u662f\u5076\u6570\u7684\u8bdd\uff0c\u4e0d\u53ef\u80fd\u4e3a\u56de\u6587\u6570\uff0c\u6240\u4ee5\u7a0b\u5e8f\u91cc\u9762\u5728\u4e00\u5343\u4e07\u4ee5\u4e0a\u7684\u90fd\u5ffd\u7565\u3002\n\n\u5177\u4f53\u8d44\u6599\u6765\u81ea\u767e\u5ea6\u767e\u79d1\uff1ahttp://baike.baidu.com/link?url=J2morq-RROT2ef-MZ5xLXg7Kn7P0GpljEQBbdt32ZyAUhN\\_wvr6DGwdBp6ILmjABylvOiLs4igHTjSL-tIynZq\n",
        "postTime": 1446615017,
        "uid": 6322,
        "name": "woshiren",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1217 \u3010[USACO1.5]\u56de\u6587\u8d28\u6570 Prime Palindromes\u3011"
    }
]