[
    {
        "content": "[$$\\Large\\texttt{My Blog}$$](https://hydingsy.github.io/)\n\n---\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[Luogu 4662](https://www.luogu.org/problemnew/show/P4662)\n\nByteland \u56fd\u8b66\u65b9\u6536\u5230\u4e86\u4e00\u6761\u533f\u540d\u4e3e\u62a5\uff0c\u5176\u4e2d\u8bf4\u5f53\u5730\u9ed1\u5e2e\u8001\u5927\u6b63\u8ba1\u5212\u4e00\u6b21\u4ece\u6e2f\u53e3\u5230\u90ca\u533a\u4ed3\u5e93\u7684\u8fd0\u8f93\u3002\u8b66\u65b9\u77e5\u9053\u8fd0\u8f93\u7684\u65f6\u95f4\u5e76\u4e14\u77e5\u9053\u8fd0\u8f93\u9700\u8981\u7528\u5230\u56fd\u5bb6\u7684\u9ad8\u901f\u516c\u8def\u7f51\u3002\n\n\u9ad8\u901f\u516c\u8def\u7f51\u5305\u542b $n$ \u4e2a\u6536\u8d39\u7ad9\u548c $m$ \u6761\u53cc\u5411\u7684\u9ad8\u901f\u516c\u8def\uff0c\u6bcf\u4e2a\u8def\u6bb5\u76f4\u63a5\u8fde\u7740\u4e24\u4e2a\u4e0d\u540c\u7684\u6536\u8d39\u7ad9\u3002\u4e00\u4e2a\u6536\u8d39\u7ad9\u53ef\u80fd\u4e0e\u5f88\u591a\u5176\u4ed6\u7684\u6536\u8d39\u7ad9\u76f8\u8fde\u3002\u6c7d\u8f66\u53ea\u80fd\u901a\u8fc7\u6536\u8d39\u7ad9\u8fdb\u5165\u6216\u79bb\u5f00\u9ad8\u901f\u516c\u8def\u7f51\u3002\u636e\u6240\u77e5\uff0c\u9ed1\u5e2e\u4f1a\u8ddd\u6e2f\u53e3\u8fb9\u6700\u8fd1\u7684\u6536\u8d39\u7ad9\u8fdb\u5165\u9ad8\u901f\u516c\u8def\uff0c\u4ece\u8ddd\u4ed3\u5e93\u6700\u8fd1\u7684\u6536\u8d39\u7ad9\u79bb\u5f00\uff08\u4e0d\u4f1a\u5728\u51fa\u9ad8\u901f\u540e\u91cd\u65b0\u8fdb\u5165\uff09\u3002\u7279\u8b66\u7ec4\u4f4d\u4e8e\u9009\u5b9a\u7684\u6536\u8d39\u7ad9\u5904\u3002\u5f53\u8fd0\u8f93\u8f66\u8f86\u8fdb\u5165\u88ab\u76d1\u63a7\u7684\u6536\u8d39\u7ad9\u65f6\uff0c\u5b83\u5c31\u4f1a\u88ab\u8b66\u5bdf\u6293\u4f4f\u3002\n\n\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u770b\uff0c\u6700\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u5728\u6bcf\u4e2a\u6536\u8d39\u7ad9\u5904\u90fd\u5b89\u6392\u7279\u8b66\u73ed\u3002\u7136\u800c\uff0c\u63a7\u5236\u7b2c $i$ \u4e2a\u6536\u8d39\u7ad9\u9700\u8981\u7279\u5b9a\u7684\u8d39\u7528 $c_i$\uff0c\u6bcf\u4e2a\u6536\u8d39\u7ad9\u8d39\u7528\u4e0d\u540c\u3002\u8b66\u65b9\u60f3\u8981\u8ba9\u82b1\u8d39\u6700\u5c0f\uff0c\u6240\u4ee5\u4ed6\u4eec\u9700\u8981\u5236\u5b9a\u4e00\u4e2a\u6536\u8d39\u7ad9\u7684\u6700\u5c0f\u63a7\u5236\u96c6\uff0c\u8fd9\u4e2a\u96c6\u5408\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n- \u6240\u6709\u4ece\u6e2f\u53e3\u5230\u4ed3\u5e93\u7684\u4ea4\u901a\u5fc5\u987b\u81f3\u5c11\u7ecf\u8fc7\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6536\u8d39\u7ad9\u3002\n- \u76d1\u63a7\u8fd9\u4e9b\u6536\u8d39\u7ad9\u7684\u8d39\u7528\uff08\u5373\u76d1\u63a7\u6bcf\u4e00\u4e2a\u6536\u8d39\u7ad9\u8d39\u7528\u4e4b\u548c\uff09\u6700\u5c0f\u3002\n- \u4f60\u53ef\u4ee5\u5047\u8bbe\u4f7f\u7528\u9ad8\u901f\u516c\u8def\u53ef\u4ee5\u4ece\u6e2f\u53e3\u5230\u4ed3\u5e93\u3002\n\n\u4f60\u9700\u8981\u627e\u5230\u6536\u8d39\u7ad9\u7684\u6700\u5c0f\u63a7\u5236\u96c6\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le 200$\uff0c$1\\le m\\le 2\\times 10^4$\uff0c$1\\le c_i\\le 10^7$\n\n------\n\n## Solution\n\n\u6211\u4eec\u9700\u8981\u5c06\u4e00\u4e9b\u6536\u8d39\u7ad9\u5b89\u6392\u7279\u8b66\u73ed\uff0c\u4f7f\u5f97\u6e90\u70b9\u548c\u6c47\u70b9\u4e0d\u8fde\u901a\uff0c\u4e8e\u662f\u8fd9\u4e2a\u95ee\u9898\u5c31\u662f\u6700\u5c0f\u5272\u95ee\u9898\u3002\n\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u5c06\u5272\u70b9\u8f6c\u5316\u6210\u5272\u8fb9\u3002\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u80fd\u88ab\u5272\u4e00\u6b21\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u62c6\u70b9\uff1a\u5c06\u70b9 $i$ \u62c6\u6210 $i_1$ \u548c $i_2$ \u4e24\u4e2a\u70b9\uff0c\u5176\u4e2d $i_1$ \u548c $i_2$ \u4e4b\u95f4\u8fde\u5bb9\u91cf\u4e3a**\u4ee3\u4ef7**\uff08\u672c\u9898\u4e2d\u4ee3\u4ef7\u4e3a $1$\uff09\u7684\u8fb9\u3002\u5bf9\u4e8e\u5bf9\u4e8e\u4e00\u6761\u8fb9 $(u,v)$\uff0c\u4e5f\u5c31\u8f6c\u5316\u4e3a $(u_2,v_1,\\texttt{INF})$ \u548c $(v_2,u_1,0)$\uff0c\u5176\u4e2d\u5bb9\u91cf\u4e3a $\\texttt{INF}$ \u4f7f\u5f97\u8fd9\u6761\u8fb9\u4e0d\u53ef\u80fd\u88ab\u5272\u6389\uff0c\u5373\u5272\u6389\u7684\u8fb9\u4e00\u5b9a\u4e3a $(i_1,i_2)$ \u8fd9\u6837\u7684\u8fb9\u3002\n\n\u7531\u4e8e\u6e90\u70b9\u548c\u6c47\u70b9\u4e5f\u53ef\u4ee5\u88ab\u5272\uff0c\u6240\u4ee5\u6e90\u70b9\u8f6c\u5316\u4e3a $s_1$\uff0c\u6c47\u70b9\u8f6c\u5316\u4e3a $t_2$\u3002\n\n\u6700\u540e\u6211\u4eec\u8bc1\u660e\u4e00\u4e0b**\u6b63\u786e\u6027**\u3002\u6b64\u65f6\uff0c\u6574\u5f20\u56fe\u7684\u5f62\u6001\u6ca1\u6709\u6539\u53d8\uff0c\u6bcf\u4e2a\u70b9\u53ea\u80fd\u88ab\u5272\u4e00\u6b21\u5bf9\u5e94\u7740\u6bcf\u6761\u8fb9 $(i_1,i_2)$ \u53ea\u80fd\u88ab\u5272\u4e00\u6b21\uff0c\u6b63\u786e\u6027\u5f97\u8bc1\u3002\n\n\u5bf9\u4e8e\u63a7\u5236\u96c6\uff0c\u6211\u4eec\u4ece\u6e90\u70b9 $s_1$ \u51fa\u53d1\u6cbf\u7740\u6b8b\u91cf\u5927\u4e8e $0$ \u7684\u8fb9\u5f00\u59cb $\\texttt{DFS}$\uff0c\u5c06\u6240\u6709\u8bbf\u95ee\u7684\u70b9\u6253\u6807\u8bb0\u3002\u5bf9\u4e8e\u4e00\u6761\u6b63\u5411\u8fb9 $(u,v)$\uff0c\u5982\u679c $u$ \u88ab\u6253\u4e86\u6807\u8bb0\u800c $v$ \u6ca1\u6709\u88ab\u6253\u6807\u8bb0\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740\u8fd9\u6761\u8fb9\u6240\u4ee3\u8868\u7684\u70b9\u88ab\u5272\u6389\u4e86\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a$O(n^2m)$\n\n------\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <vector>\n\nconst int N=4e2+5,M=1e5+5;\nconst int INF=1<<30;\nint n,m,tot=1,lnk[N],ter[M],nxt[M],val[M],dep[N],cnr[N];\nbool vis[N];\n\nvoid add(int u,int v,int w) {\n    ter[++tot]=v,nxt[tot]=lnk[u],lnk[u]=tot,val[tot]=w;\n}\nvoid addedge(int u,int v,int w) {\n    add(u,v,w),add(v,u,0);\n}\nint bfs(int s,int t) {\n    memset(dep,0,sizeof(dep));\n    memcpy(cnr,lnk,sizeof(lnk));\n    std::queue<int> q;\n    q.push(s),dep[s]=1;\n    while(!q.empty()) {\n        int u=q.front(); q.pop();\n        for(int i=lnk[u];i;i=nxt[i]) {\n            int v=ter[i];\n            if(val[i]&&!dep[v]) q.push(v),dep[v]=dep[u]+1;\n        }\n    }\n    return dep[t];\n}\nint dfs(int u,int t,int flow) {\n    if(u==t) return flow;\n    int ans=0;\n    for(int i=cnr[u];i&&ans<flow;i=nxt[i]) {\n        cnr[u]=i;\n        int v=ter[i];\n        if(val[i]&&dep[v]==dep[u]+1) {\n            int x=dfs(v,t,std::min(val[i],flow-ans));\n            if(x) val[i]-=x,val[i^1]+=x,ans+=x;\n        }\n    }\n    if(ans<flow) dep[u]=-1;\n    return ans;\n}\nvoid dinic(int s,int t) {\n    while(bfs(s,t)) while(dfs(s,t,INF));\n}\nvoid dfs(int u) {\n    vis[u]=1;\n    for(int i=lnk[u];i;i=nxt[i]) if(val[i]&&!vis[ter[i]]) dfs(ter[i]);\n}\nint main() {\n    int s,t;\n    scanf(\"%d%d%d%d\",&n,&m,&s,&t);\n    for(int i=1;i<=n;++i) {\n        int x;\n        scanf(\"%d\",&x);\n        addedge(i,i+n,x);\n    }\n    while(m--) {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        addedge(u+n,v,INF),addedge(v+n,u,INF);\n    }\n    dinic(s,t+n);\n    dfs(s);\n    std::vector<int> ans;\n    for(int i=2;i<=tot;i+=2) {\n        int u=ter[i^1],v=ter[i];\n        if(vis[u]&&!vis[v]) ans.push_back(u);\n    }\n    std::sort(ans.begin(),ans.end());\n    for(int sz=(int)ans.size()-1,i=0;i<=sz;++i) {\n        printf(\"%d%c\",ans[i],\" \\n\"[i==sz]);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1545045296,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4662 \u3010[BalticOI 2008]\u9ed1\u624b\u515a\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u6700\u5c0f\u5272\u554a\u3002\u3002\n\n\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\u5165\u70b9 $(x)$ \u548c\u51fa\u70b9 $(x+n)$\uff0c\u7136\u540e\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf\u4e3a\u6536\u8d39\u7ad9\u7684\u8d39\u7528\u3002\n\n\u7136\u540e\u5982\u679c\u8fd9\u6761\u8fb9\u88ab\u5272\u4e86\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u6536\u8d39\u7ad9\u88ab\u76d1\u89c6\u4e86\u3002\n\n**\u95ee\u9898\u5728\u4e8e\u8f93\u51fa\u65b9\u6848\uff1a**\n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u53e6\u4e00\u7bc7\u9898\u89e3\u8981\u91cd\u65b0\u8dd1\u597d\u591a\u904d $dinic$ \uff0c\u76f4\u63a5\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a $dfs$ \u4e00\u904d\u5c31\u597d\u4e86\u3002\n\n$dfs$ \u7684\u65f6\u5019\u53ea\u8d70\u8fd8\u6709\u6d41\u91cf\u5269\u4f59\u7684\u8fb9\uff0c\u7136\u540e\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u5165\u70b9\u88ab\u8bbf\u95ee\u5230\u4e86\uff0c\u4f46\u51fa\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u5230\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u70b9\u88ab\u76d1\u89c6\u4e86\u3002\u6700\u540e\u6392\u4e2a\u5e8f\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n$100+ms$\uff0c\u7528\u7684 $dinic$ \u7b97\u6cd5\uff0c\u76ee\u524d\u6700\u4f18\u89e3\u524d\u4e09\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\n#define INF 1<<29\nusing namespace std;\n\ninline void rd(int &X){\n    X=0;int w=0;char ch=0;\n    while(!isdigit(ch))w|=ch=='-',ch=getchar();\n    while(isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    X=w?-X:X;\n}\n\nvector<int> ans;\nint n,m,s,t,f,k;\nint head[N],cnt=1,d[N],v[N];\nstruct nd{int nxt,to,v;}e[N<<1];\n#define For(x) for(int y,i=head[x];(y=e[i].to);i=e[i].nxt)\n\nvoid add(int x,int y,int w){\n    e[++cnt]=(nd){head[x],y,w};head[x]=cnt;\n    e[++cnt]=(nd){head[y],x,0};head[y]=cnt;\n}\nbool bfs()\n{\n    queue<int> q; q.push(s);\n    memset(d,0,sizeof d); d[s]=1;\n    while(!q.empty()){\n        int x=q.front();q.pop();\n        For(x) if(e[i].v&&!d[y]){\n            q.push(y); d[y]=d[x]+1;\n            if(y==t) return 1;\n        }\n    } return 0;\n}\n\nint dinic(int x,int flow)\n{\n    if(x==t) return flow; int re=flow;\n    for(int y,i=head[x];(y=e[i].to)&&re;i=e[i].nxt)\n        if(e[i].v&&d[y]==d[x]+1)\n        {\n            int k=dinic(y,min(re,e[i].v));\n            if(!k) d[y]=0;\n            e[i].v-=k;e[i^1].v+=k;re-=k; \n        }\n    return flow-re;\n}\nvoid build()\n{\n\trd(n);rd(m);rd(s);rd(t);t+=n;\n\tfor(int x,i=1;i<=n;i++)\n\t\trd(x),add(i,i+n,x);\n\tfor(int x,y,i=1;i<=m;i++)\n\t\trd(x),rd(y),add(x+n,y,INF),add(y+n,x,INF);\n}\nvoid dfs(int x){\n\tv[x]=1;\n\tFor(x) if(e[i].v>0 and !v[y])\n\t\tdfs(y);\n}\nvoid print()\n{\n\tdfs(s);\n\tfor(int i=2;i<cnt;i+=2)\n\t\tif(v[e[i^1].to] and !v[e[i].to])\n\t\t\tans.push_back(e[i^1].to);\n\tsort(ans.begin(),ans.end());\n\tfor(int x:ans) printf(\"%d \",x);\n}\nint main()\n{\n   \tbuild();\n    while(bfs())\n        while(f=dinic(s,INF));\n   \tprint();\n}\n```",
        "postTime": 1543287038,
        "uid": 56659,
        "name": "AubRain",
        "ccfLevel": 0,
        "title": "[BalticOI 2008]\u9ed1\u624b\u515a\u2014\u2014\u6700\u5c0f\u5272\u8f93\u51fa\u65b9\u6848"
    },
    {
        "content": "### Problem\n\n\u6709 $n$ \u4e2a\u6536\u8d39\u7ad9\u548c $m$ \u6761\u9ad8\u901f\u516c\u8def\uff0c\u9ed1\u5e2e\u4f1a\u4ece\u7b2c $s$ \u4e2a\u6536\u8d39\u7ad9\u8fdb\u5165\u9ad8\u901f\u516c\u8def\uff0c\u4ece $t$ \u4e2a\u6536\u8d39\u7ad9\u79bb\u5f00\u3002\u8b66\u65b9\u76d1\u63a7\u4e00\u4e2a\u6536\u8d39\u7ad9\u7684\u8d39\u7528\u662f $1$\uff0c\u6c42\u6700\u5c11\u9700\u8981\u591a\u5c11\u8d39\u7528\u4f7f\u9ed1\u5e2e\u88ab\u5b8c\u5168\u63a7\u5236\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u63a7\u5236\u65b9\u6848\u3002\n\n### Solve\n\n\u7b2c\u4e00\u9053\u7d2b\u9898\u7684\u9898\u89e3 QwQ\n\n\u53cc\u500d\u7ecf\u9a8c\uff1a[P1345 \u5976\u725b\u7684\u7535\u4fe1](https://www.luogu.com.cn/problem/P1345)\n\n\u5c31\u662f\u6c42\u4e00\u4e2a\u7f51\u7edc\u6d41\u7684\u6700\u5c0f\u5272\u3002\n\n\u4f46\u662f\u9898\u76ee\u4e2d\u8bf4\u7684\u662f\u5272\u70b9\uff0c\u800c\u4e0d\u662f\u5272\u8fb9\uff0c\u6211\u4eec\u8981\u628a\u5b83\u8f6c\u5316\u6210\u5272\u70b9\u3002\n\n\u600e\u4e48\u8f6c\u5316\u5462\uff1f\n\n\u8003\u8651\u628a\u4e00\u4e2a\u70b9\u62c6\u6210 \u70b9\u2014\u8fb9\u2014\u70b9 \u7684\u5f62\u5f0f\u3002\n\n\u5373\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$\uff0c\u6211\u4eec\u628a\u5b83\u62c6\u6210 $u_1=u,u_2=u+n$\uff0c$u_1$ \u8d1f\u8d23\u5165\uff0c$u_2$ \u8d1f\u8d23\u51fa\uff0c\u8fde\u63a5\u4e00\u6761 $u_1\\to u_2$ \u7684\u6709\u5411\u8fb9\uff0c\u6743\u503c\u4e3a $1$\uff0c\u5373\u5272\u6389\u8fd9\u6761\u8fb9\uff08\u4e5f\u5c31\u662f\u539f\u6765\u7684\u70b9 $u$\uff09\u7684\u8d39\u7528\u4e3a $1$\uff1b\n\n\u800c\u5bf9\u4e8e\u8f93\u5165\u7684 $m$ \u6761\u65e0\u5411\u8fb9 $a\\leftrightarrow b$\uff0c\u5b83\u4eec\u7684\u4f5c\u7528\u5c31\u662f\u7528\u6765\u8fde\u63a5\u70b9\uff0c\u4e5f\u5c31\u662f\u628a $a,b$ \u4e24\u70b9\u9996\u5c3e\u76f8\u8fde\uff0c\u5373\u8fde\u63a5 $a_2\\to b_1$\uff0c$b_2\\to a_1$\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u8ba9\u8fd9\u4e24\u6761\u8fb9\u88ab\u5272\u6389\uff0c\u8981\u628a\u5b83\u4eec\u7684\u6743\u503c\u8bbe\u4e3a $\\texttt{INF}$\u3002\n\n\u56e0\u4e3a\u6700\u5927\u6d41 = \u6700\u5c0f\u5272\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528 Dinic \u8dd1\u4e00\u904d $s_1$ \u5230 $t_2$ \u7684\u6700\u5927\u6d41\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u6700\u5c0f\u7684\u8d39\u7528\u3002\n\n\u4f46\u662f\u8fd8\u6ca1\u6709\u505a\u5b8c\uff0c\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u4e00\u4e2a\u53ef\u884c\u65b9\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6e90\u70b9 $s_1$ \u5bf9\u6b8b\u91cf\u5927\u4e8e $0$ \u7684\u8fb9 dfs\uff0c\u7136\u540e\u904d\u5386\u6240\u6709\u7684\u8fb9\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9 $u_1\\to u_2$\uff0c\u5982\u679c\u5728\u521a\u624d\u7684 dfs \u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u5230\u4e86 $u_1$ \u800c\u6ca1\u6709\u8bbf\u95ee\u5230 $u_2$\uff0c\u5c31\u8bf4\u660e $u$ \u70b9\u88ab\u5272\u6389\u4e86\u3002\n\n\u6700\u540e\u522b\u5fd8\u4e86\u628a\u7b54\u6848\u7684\u96c6\u5408\u6392\u5e8f\u540e\u518d\u8f93\u51fa\u3002\n\n\n### Code\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n#define MAXN 100010\n#define MAXM 100010\n#define int long long\nconst int INF = 1e18;\nint head[MAXN], cnt = 1;\nstruct edge {\n\tint v, w, nxt;\n\tedge() {}\n\tedge(int vv, int ww, int nn) {\n\t\tv = vv, w = ww, nxt = nn;\n\t}\n} e[MAXM];\nvoid add_edge(int u, int v, int w) {\n\te[++cnt] = edge(v, w, head[u]);\n\thead[u] = cnt; \n}\nvoid addedge(int u, int v, int w) {\n\tadd_edge(u, v, w);\n\tadd_edge(v, u, 0);\n}\nint n, m, s, t;\nint dep[MAXN];\nbool book[MAXN];\nbool bfs() {\n\tmemset(dep, 0, sizeof dep);\n\tdep[s] = 1;\n\tqueue<int> q;\n\tq.push(s);\n\twhile (!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].v, w = e[i].w;\n\t\t\tif (w && !dep[v]) {\n\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\nint dfs(int u, int in) {\n\tif (u == t) return in;\n\tif (dep[u] > dep[t]) return 0;\n\tif (in <= 0) return 0;\n\tint out = 0;\n\tfor (int i = head[u]; i && in; i = e[i].nxt) {\n\t\tint v = e[i].v;\n\t\tif (e[i].w && dep[v] == dep[u] + 1) {\n\t\t\tint res = dfs(v, min(e[i].w, in));\n\t\t\te[i].w -= res;\n\t\t\te[i ^ 1].w += res;\n\t\t\tin -= res;\n\t\t\tout += res;\n\t\t}\n\t}\n\tif (out == 0)\n\t\tdep[u] = 0;\n\treturn out;\n}\nint Dinic() {\n\tint ans = 0;\n\twhile (bfs()) \n\t\tans += dfs(s, INF);\n\treturn ans;\n}\nbool vis[MAXN];\nvoid ddfs(int u) {\n\tvis[u] = true;\n\tfor (int i = head[u]; i; i = e[i].nxt)\n\t\tif (e[i].w && !vis[e[i].v])\n\t\t\tddfs(e[i].v);\n}\nint ans[MAXN], cntt;\nsigned main() {\n\tcin >> n >> m >> s >> t;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint c; cin >> c;\n\t\taddedge(i, i + n, c);\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\taddedge(u + n, v, INF);\n\t\taddedge(v + n, u, INF); \n\t}\n\tt += n;\n\tDinic();\n\tddfs(s);\n\tfor (int i = 2; i <= cnt; i += 2)\n\t\tif (vis[e[i ^ 1].v] && !vis[e[i].v])\n\t\t\tans[++cntt] = e[i ^ 1].v;\n\tsort(ans + 1, ans + cntt + 1);\n\tfor (int i = 1; i <= cntt; i++)\n\t\tcout << ans[i] << \" \";\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1660125524,
        "uid": 534654,
        "name": "Network_Error",
        "ccfLevel": 0,
        "title": "P4662 [BalticOI 2008] \u9ed1\u624b\u515a \u9898\u89e3"
    },
    {
        "content": ">\u9898\u610f:\u9547\u5b88\u6bcf\u4e2a\u70b9\u90fd\u9700\u8981\u4e00\u5b9a\u7684\u4ee3\u4ef7.\u73b0\u5728\u9700\u8981\u9009\u62e9\u6700\u5c11\u4ee3\u4ef7\u7684\u9547\u5b88\u65b9\u6cd5\u4f7f\u5f97$st\\rightarrow ed$\u7684\u6bcf\u4e00\u6761\u8def\u5f84\u90fd\u6709\u70b9\u88ab\u9009\u62e9.\n\n\u7531\u4e8e\u662f\u70b9\u6709\u9650\u5236,\u6240\u4ee5\u6211\u4eec\u8003\u8651\u62c6\u70b9\u2014\u2014\u6bcf\u4e2a\u70b9\u8f6c\u6362\u4e3a\u5165\u70b9\u3001\u51fa\u70b9\uff0c\u7136\u540e\u4e4b\u95f4\u8fde\u5bb9\u91cf\u7b49\u4e8e\u4ee3\u4ef7\u7684\u8fb9\u3002\u539f\u56fe\u7684\u8fb9\u8f6c\u5316\u4e3a\u51fa\u70b9\u548c\u5165\u70b9\u4e4b\u95f4\u5bb9\u91cf\u4e3a$INF$\u7684\u8fb9\u5373\u53ef.\n\n\u7136\u540e\u8fd9\u5c31\u5f88\u660e\u663e\u662f\u6700\u5c0f\u5272\u7684\u6a21\u578b\u4e86\u2014\u2014\u7528\u6700\u5c11\u7684\u4ee3\u4ef7\u5272\u8fd9\u4e2a\u7f51\u7edc\u3002\n\n\u6240\u4ee5\u95ee\u9898\u5c31\u5176\u5b9e\u5c31\u662f\u627e\u5272\u8fb9\u3002\n\n\u8dd1\u4e00\u904d\u6700\u5927\u6d41,\u518d\u4ece\u8d77\u70b9\u51fa\u53d1\u904d\u5386\u6b8b\u4f59\u7f51\u7edc,\u8bbe\u904d\u5386\u5230\u7684\u70b9\u96c6\u4e3a$S$,\u5176\u4ed6\u90e8\u5206\u4e3a$T$,\u5219$S\\rightarrow T$\u7684\u8fb9\u662f\u5272\u8fb9.\n\n$Isap$\u505a\u6cd5(\u6700\u540e$bfs/dfs$\u5224\u65ad\u8054\u901a\u6027):\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define gc getchar()\nusing namespace std;\nconst int N = 520, M = 1e5 + 10, inf = 1 << 30;\n\nvoid qr(int &x) {\n    x = 0;\n    char c = gc;\n    while (!isdigit(c)) c = gc;\n    while (isdigit(c)) x = x * 10 + c - '0', c = gc;\n}\n\nint n, m, d[N], q[N], st, ed, c[N], ans, l, r;\nstruct edge {\n    int y, next, c;\n} a[M];\nint len = 1, last[N], cur[N];\nvoid ins(int x, int y, int c) {\n    a[++len] = (edge){ y, last[x], c };\n    last[x] = len;\n}\nvoid add(int x, int y, int c) {\n    ins(x, y, c);\n    ins(y, x, 0);\n}\n\nvoid bfs() {\n    q[l = r = 1] = ed;\n    ++c[d[ed] = 1];\n    for (int i = 1; i <= 2 * n; i++) cur[i] = last[i];\n    while (l <= r) {\n        int x = q[l++];\n        for (int k = last[x], y; k; k = a[k].next)\n            if (!d[y = a[k].y]) {\n                ++c[d[y] = d[x] + 1];\n                q[++r] = y;\n            }\n    }\n}\n\nint dfs(int x, int f) {\n    if (x == ed)\n        return f;\n    int s = 0, t;\n    for (int &k = cur[x], y, z; k; k = a[k].next) {\n        y = a[k].y;\n        z = a[k].c;\n        if (z && d[y] + 1 == d[x]) {\n            s += t = dfs(y, min(f - s, z));\n            a[k].c -= t;\n            a[k ^ 1].c += t;\n            if (s == f)\n                return f;\n        }\n    }\n    if (!--c[d[x]])\n        d[st] = 2 * n + 1;\n    ++c[++d[x]];\n    cur[x] = last[x];\n    return s;\n}\n\nvoid BFS() {\n    q[l = r = 1] = st;\n    memset(d + 1, 0, n << 3);\n    d[st] = 1;\n    for (int x = st; l <= r; x = q[++l])\n        for (int k = last[x], y; k; k = a[k].next)\n            if (!d[y = a[k].y] && a[k].c)\n                d[y] = 1, q[++r] = y;\n}\n\nint main() {\n    qr(n);\n    qr(m);\n    qr(st);\n    qr(ed);\n    ed += n;\n    for (int i = 1, x; i <= n; i++) qr(x), add(i, i + n, x);\n    for (int i = 1, x, y; i <= m; i++) qr(x), qr(y), add(x + n, y, inf), add(y + n, x, inf);\n    bfs();\n    while (d[st] <= 2 * n) ans += dfs(st, inf);\n    BFS();\n    for (int i = 1; i <= n; i++)\n        if (d[i] && !d[i + n])\n            printf(\"%d \", i);\n    return 0;\n}\n```\n\u5f53\u7136\u5982\u679c\u6211\u4eec\u7528$dicnic$\u7684\u8bdd\u76f4\u63a5\u5229\u7528\u6700\u540e\u4e00\u6b21\u7684$bfs$\u5c31\u4e0d\u7528\u53e6\u5916\u7684$dfs/bfs$\u6c42\u5272\u8fb9\u4e86.\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int N = 422, M = 1e5 + 10, inf = 1 << 30;\n\nvoid qr(int &x) { scanf(\"%d\", &x); }\n\nint n, m, d[N], q[N], l, r, ans, st, ed;\nstruct edge {\n    int y, next, c;\n} a[M];\nint len = 1, last[N], cur[N];\nvoid ins(int x, int y, int c) {\n    a[++len] = (edge){ y, last[x], c };\n    last[x] = len;\n}\nvoid add(int x, int y, int c) {\n    ins(x, y, c);\n    ins(y, x, 0);\n}\n\nbool bfs() {\n    q[l = r = 1] = st;\n    memset(d, 0, sizeof d);\n    d[st] = 1;\n    for (int x = st; l <= r; x = q[++l])\n        for (int k = last[x], y; k; k = a[k].next)\n            if (a[k].c && !d[y = a[k].y])\n                d[y] = d[x] + 1, q[++r] = y;\n    return d[ed];\n}\n\nint dfs(int x, int f) {\n    if (x == ed)\n        return f;\n    int s = 0, t;\n    for (int &k = cur[x], y, z; k; k = a[k].next) {\n        y = a[k].y;\n        z = a[k].c;\n        if (z && d[y] == d[x] + 1) {\n            s += t = dfs(y, min(f - s, z));\n            a[k].c -= t;\n            a[k ^ 1].c += t;\n            if (s == f)\n                return f;\n        }\n    }\n    if (!s)\n        d[x] = 0;\n    return s;\n}\n\nint main() {\n    qr(n);\n    qr(m);\n    qr(st);\n    qr(ed);\n    ed += n;\n    for (int i = 1, x; i <= n; i++) qr(x), add(i, i + n, x);\n    for (int i = 1, x, y; i <= m; i++) qr(x), qr(y), add(x + n, y, inf), add(y + n, x, inf);\n    while (bfs()) memcpy(cur + 1, last + 1, n << 3), ans += dfs(st, inf);\n    for (int i = 1; i <= n; i++)\n        if (d[i] && !d[i + n])\n            printf(\"%d \", i);\n    return 0;\n}\n```\nPS:\u8fd9\u4e2a\u4ee3\u7801\u5728$loj$\u6682\u65f6\u8dd1\u5230$rk 1$.",
        "postTime": 1591065108,
        "uid": 118826,
        "name": "2018LZY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4662 \u3010[BalticOI 2008]\u9ed1\u624b\u515a\u3011"
    },
    {
        "content": "## \u505a\u6cd5\n\n\u6700\u5c0f\u5272\u3002\n\n\u8003\u8651\u5efa\u56fe\uff0c\u7531\u4e8e\u53ea\u80fd\u63a7\u5236\u6536\u8d39\u7ad9\uff0c\u6240\u4ee5\u8981\u628a\u4e00\u4e2a\u6536\u8d39\u7ad9\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u5206\u522b\u4e3a $i$ \u548c $i+n$\uff0c\u4ece $i$ \u5230 $i+n$ \u8fde\u6d41\u91cf\u4e3a $c_i$ \u7684\u8fb9\uff1b\u5bf9\u4e8e\u539f\u56fe\u7684\u4e00\u6761\u8fb9 $(u_i,v_i)$\uff0c\u9700\u8981\u4ece $u_i+n$ \u5230 $v_i$ \u548c $v_i+n$ \u5230 $u_i$ \u8fde\u6d41\u91cf\u4e3a `inf` \u7684\u8fb9\uff1b\u6e90\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a `inf` \u7684\u8fb9\u5230 $a$\uff0c$b+n$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a `inf` \u7684\u8fb9\u5230\u6c47\u70b9\u3002\u6700\u540e\u8dd1\u4e00\u904d\u7f51\u7edc\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u4f46\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u65b9\u6848\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8dd1\u5b8c\u7f51\u7edc\u6700\u5927\u6d41\u7684\u56fe\u4e0a\u8dd1 `dfs`\u3002\u4ece\u6e90\u70b9\u51fa\u53d1\uff0c\u53ea\u7ecf\u8fc7\u8fd8\u6709\u6d41\u91cf\u7684\u8fb9\uff0c\u5e76\u4e14\u8bbf\u95ee\u5230\u4e00\u4e2a\u70b9\u5c31\u628a\u5b83\u6807\u8bb0\u3002\u8fd9\u6837\u8dd1\u5b8c\u4e4b\u540e\uff0c\u5982\u679c\u7b2c $i$ \u6761\u8fb9 $u_i$ \u88ab\u6807\u8bb0\u4e86\u4f46 $v_i$ \u6ca1\u6709\uff0c\u5c31\u8bf4\u660e\u6536\u8d39\u7ad9 $u_i$ \u88ab\u63a7\u5236\u4e86\u3002\n\n## AC \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#include <vector>\n\nusing namespace std;\n\n#define S 100005\n#define MS 10005\n\ntypedef long long ll;\n\nint n,m,s,t;\nll need[MS];\nint esum,to[S],nxt[S],h[MS];\nll c[S];\nint cur[MS],dep[MS];\nbool vis[MS];\n\ninline void add(int x,int y,ll w)\n{\n\tto[++esum]=y;\n\tc[esum]=w;\n\tnxt[esum]=h[x];\n\th[x]=esum;\n}\n\ninline void init()\n{\n\tmemset(h,0,sizeof(h));\n\tesum=1;\n}\n\ninline bool bfs()\n{\n\tmemset(dep,0,sizeof(dep));\n\tqueue<int> q;\n\tq.push(s);\n\tdep[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=h[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(c[i]>0&&dep[v]==0)\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t]>0;\n}\n\nll dfs(int u,ll w)\n{\n\tif(u==t)\n\t{\n\t\treturn w;\n\t}\n\tll sum=0;\n\tfor(int &i=cur[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(c[i]>0&&dep[v]==dep[u]+1)\n\t\t{\n\t\t\tll re=dfs(v,min(w,c[i]));\n\t\t\tc[i]-=re;\n\t\t\tc[i^1]+=re;\n\t\t\tw-=re;\n\t\t\tsum+=re;\n\t\t\tif(w==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\n\ninline ll dinic()\n{\n\tll ans=0;\n\twhile(bfs())\n\t{\n\t\tfor(int i=1;i<=n*2;i++)\n\t\t{\n\t\t\tcur[i]=h[i];\n\t\t}\n\t\tans+=dfs(s,1e17);\n\t}\n\treturn ans;\n}\n\nvoid dfss(int u)\n{\n\tvis[u]=true;\n\tfor(int i=h[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(c[i]>0&&!vis[v])\n\t\t{\n\t\t\tdfss(v);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%d%d\",&s,&t);\n\tt+=n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&need[i]);\n\t}\n\tinit();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u+n,v,1e17);\n\t\tadd(v,u+n,0);\n\t\tadd(v+n,u,1e17);\n\t\tadd(u,v+n,0);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tadd(i,i+n,need[i]);\n\t\tadd(i+n,i,0);\n\t}\n\tdinic();\n\tdfss(s);\n\tvector<int> v;\n\tfor(int i=2;i<=esum;i+=2)\n\t{\n\t\tif(!vis[to[i]]&&vis[to[i^1]])\n\t\t{\n\t\t\tv.push_back(to[i^1]);\n\t\t}\n\t}\n\tsort(v.begin(),v.end());\n\tfor(int i=0;i<v.size();i++)\n\t{\n\t\tprintf(\"%d \",v[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1634515280,
        "uid": 251130,
        "name": "lovely_ckj",
        "ccfLevel": 0,
        "title": "P4662 [BalticOI 2008]\u9ed1\u624b\u515a \u9898\u89e3"
    },
    {
        "content": "```\n\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u5176\u4e2d\u8282\u70b9\u6709\u9650\u5236\uff0c\n\u6c42\u51fa\u6700\u5c0f\u5272\u70b9\u96c6\uff0c\n\u6309\u7167\u5b57\u5178\u5e8f\u8f93\u51fa\u5272\u70b9\u3002\n\u7f51\u7edc\u6d41\u7684\u57fa\u7840\u662f\u8fb9\u9650\u5236\uff0c\n\u6240\u4ee5\u6211\u4eec\u5c06\u4e00\u4e2a\u70b9i\u62c6\u4e3ai\u2018\u548ci\u2019\u2018\uff0c\n\u5e76\u4e14\u8fde\u63a5i\u2019\u81f3i\u2018\u2019\uff0c\n\u5bb9\u91cf\u4e3a\u70b9\u9650\u5236\u3002\n\u5bf9\u4e8e\u539f\u56fe\u4e2d\u5b58\u5728\u7684\u8fb9\uff08i\uff0cj\uff09\uff0c\n\u6211\u4eec\u5c06i\u2018\u2019\u8fde\u5411j\u2018\uff0c\u5bb9\u91cf\u4e3ainf\u3002\n\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u901a\u8fc7\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u5927\u6d41\u6c42\u51fa\u6700\u5c0f\u5272\uff0c\n\u4e5f\u5c31\u662f\u8981\u53d6\u51fa\u7684\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\u4f46\u662f\u9898\u76ee\u7684\u8981\u6c42\u662f\u6309\u5b57\u5178\u5e8f\u8f93\u51fa\u70b9\u7684\u7f16\u53f7\uff0c\n\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u80fd\u7528dfs\u7684\u65b9\u5f0f\u6765\u6c42\u51fa\u5272\u70b9\u96c6\u3002\n\u6240\u4ee5\u6211\u4eec\u5c06\u539f\u56fe\u62f7\u8d1d\u540e\uff0c\n\u4f9d\u6b21\u679a\u4e3e\u65ad\u8fb9e\u3002\n\u5982\u679c\u65ad\u8fb9\u540e\u7684\u6700\u5927\u6d41\uff0c\n\u8bbe\u4e3aG\u2019\uff0c\n\u548c\u539f\u6765\u6700\u5927\u6d41G\u7684\u5dee\u503c\u6070\u597d\u4e3a\u8be5\u8fb9\u7684\u5bb9\u91cf\uff0c\n\u90a3\u4e48e\u5fc5\u4e3a\u539f\u56fe\u4e2d\u7684\u6700\u5c0f\u5272\u3002\n```\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nint N,M,n;\nint st,ed;\nint a[205];\nstruct Pipe{int next,to,flow,f;}pipe[500005];//\u901a\u8fc7f\u6807\u8bb0\u8868\u793a\u8be5\u8fb9\u662f\u5426\u5b58\u5728 \nPipe tg[500005],ttg[500005];\nint h[2005],cnt=1;\ninline void add(int x,int y,int z){\n\tpipe[++cnt].to=y;pipe[cnt].next=h[x];h[x]=cnt;pipe[cnt].flow=z;pipe[cnt].f=1;\n\tpipe[++cnt].to=x;pipe[cnt].next=h[y];h[y]=cnt;pipe[cnt].flow=0;pipe[cnt].f=1;//\u53cc\u5411\u52a0\u8fb9\uff0c\u5e76\u4e14\u6253\u4e0a\u6807\u8bb0\n        return;\n}\ninline int read(){\n\tchar c;int rec=0;\n\twhile((c=getchar())<'0'||c>'9');\n\twhile(c>='0'&&c<='9')rec=rec*10+c-'0',c=getchar();\n\treturn rec;\n}\nint Gap[5005],dis[5005];\nint ans=0,sum;\ninline int SAP(int v,int maxflow){\n\tif(v==ed+N)return maxflow;\n\tint temp=maxflow,i,j,p;\n\tfor(i=h[v];i;i=pipe[i].next){\n\t\tif(pipe[i].f==0)continue;//\u5df2\u5220\u9664\u7684\u8fb9\u5c31\u4e0d\u518d\u8003\u8651 \n\t\tj=pipe[i].to;\n\t\tif(pipe[i].flow&&dis[v]==dis[j]+1){\n\t\t\tp=SAP(j,min(pipe[i].flow,temp));\n\t\t\ttemp-=p;pipe[i].flow-=p;pipe[i^1].flow+=p;\n\t\t\tif(dis[st]==n||temp==0)return maxflow-temp;\n\t\t}\n\t}\n\tif(--Gap[dis[v]]==0)dis[st]=n;\n\telse Gap[++dis[v]]++;\n\treturn maxflow-temp;\n}\ninline void GET(){\n\tmemset(Gap,0,sizeof(Gap));\n\tmemset(dis,0,sizeof(dis));\n\tGap[0]=n;sum=0;\n\twhile(dis[st]<n)sum+=SAP(st,inf);//\u5f97\u51fa\u5f53\u524d\u7f51\u7edc\u4e2d\u7684\u6700\u5927\u6d41 \n\treturn ;\n}\nvoid Solve(){\n        int i,j,k;\n\tans=sum;\n\tfor(i=1;i<=N;i++){//\u53ea\u8003\u8651\u5220\u9664\u70b9\u9650\u5ea6\u7684\u8fb9\uff0c\u800c\u975e\u539f\u6709\u7684\u5bb9\u91cf\u4e3ainf\u7684\u8fb9 \n\t\tif(pipe[i*2].f){//\u8be5\u8fb9\u5b58\u5728 \n\t\t\tfor(j=1;j<=cnt;j++)tg[j]=pipe[j];//\u62f7\u8d1d \n\t\t\tfor(j=1;j<=cnt;j++)pipe[j]=ttg[j];//\u8fd8\u539f \n\t\t\tpipe[i*2].f=0;pipe[i*2+1].f=0;\n\t\t\tGET();\n\t\t\tif(ans-sum==a[i]){//\u5f53\u4e14\u4ec5\u5f53\u5dee\u503c\u4e3a\u8be5\u8fb9\u5bb9\u91cf\u65f6\uff0c\u8be5\u8fb9\u4e00\u5b9a\u5c5e\u4e8e\u6700\u5c0f\u5272\u96c6 \n\t\t\t\tcout<<i<<\" \";\n\t\t\t\tttg[i*2].f=ttg[i*2+1].f=0;//\u5220\u9664\u8be5\u8fb9 \n\t\t\t\tans=sum;\n\t\t\t}\n\t\t\telse for(j=1;j<=cnt;j++)pipe[j]=tg[j];//\u8fd8\u539f \n\t\t}\n\t}\n\treturn ;\n}\nint main(){\n\tN=read();M=read();st=read();ed=read();\n\tint i,x,y;\n\tfor(i=1;i<=N;i++)a[i]=read();\n\tfor(i=1;i<=N;i++)add(i,i+N,a[i]);//\u8fde\u4e0a\u9650\u5236\u6761\u4ef6 \n\tfor(i=1;i<=M;i++){\n\t\tx=read();y=read();\n\t\tadd(x+N,y,inf);add(y+N,x,inf);//\u65e0\u5411\u56fe \n\t}\n\tn=N*2;//\u62c6\u70b9\u540e\u7684\u603b\u70b9\u6570 \n\tfor(i=1;i<=cnt;i++)ttg[i]=pipe[i];\n\tGET();\n\tSolve();\n\treturn 0;\n}\n\n```",
        "postTime": 1535990905,
        "uid": 123679,
        "name": "okbj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4662 \u3010[BalticOI 2008]\u9ed1\u624b\u515a\u3011"
    }
]