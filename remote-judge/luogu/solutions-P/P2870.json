[
    {
        "content": "[P2870 [USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold](https://www.luogu.com.cn/problem/P2870)\n\n## \u9898\u610f\n\n- \u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u53ea\u80fd\u4ece\u4e24\u8fb9\u53d6\uff0c\u52a0\u5165\u5230\u7b54\u6848\uff0c\u8981\u6c42\u53d6\u51fa\u6765\u4e4b\u540e\u7b54\u6848\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n- $len$<=$500000$\n\n## \u601d\u8def\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u8981\u6c42\u7b54\u6848\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\uff1a**\u6bcf\u4e00\u6b21\u90fd\u53d6\u4e24\u7aef\u7684\u8f83\u5c0f\u8005\uff0c\u4e00\u76f4\u53d6\u5b8c**\u3002\u8fd9\u4e00\u5b9a\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u6b64\u65f6\u5c40\u90e8\u6700\u4f18\u89e3\u5c31\u662f\u5168\u5c40\u6700\u4f18\u89e3\u3002\u5173\u952e\u662f\u5f53\u4e24\u7aef\u76f8\u540c\u65f6\u5e94\u8be5\u600e\u4e48\u529e\u3002\n\n\u5f53\u5b57\u7b26\u4e32\u4e3a $ACERHA$ \u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u53d6\u54ea\u4e00\u4e2a $A$ \u90fd\u53ef\u4ee5\uff0c\u56e0\u4e3a $C$ \u548c $H$ \u90fd\u6bd4$A$ \u5927\uff0c\u6211\u4eec\u4e00\u5b9a\u4f1a\u53d6\u5b8c\u4e24\u4e2a $A$ \u518d\u53d6\u91cc\u9762\u7684\u5b57\u6bcd\u3002\n\n\u5f53\u5b57\u7b26\u4e32\u4e3a $CAEAAC$ \u65f6\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u53d6\u5de6\u8fb9\u7684 $C$\uff0c\u7b54\u6848\u4f1a\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a $CACAAE$ \uff0c\u800c\u53d6\u53f3\u8fb9\u4f1a\u662f\uff1a $CAACAE$\u3002\n\n\u591a\u73a9\u51e0\u7ec4\u6570\u636e\u4f1a\u53d1\u73b0\uff0c**\u5982\u679c\u4e24\u7aef\u5b57\u6bcd\u4e00\u6837\uff0c\u5c31\u770b\u770b\u91cc\u9762\u7684\u90a3\u4e00\u4f4d\u4e00\u6837\u4e0d\u4e00\u6837\u3002\u5982\u679c\u91cc\u9762\u90a3\u4e00\u4f4d\u4e0d\u540c\uff0c\u5219\u53d6\u8f83\u5c0f\u7684\u5b57\u6bcd\u6240\u5728\u7684\u4e00\u7aef\uff1b\u5982\u679c\u91cc\u9762\u90a3\u4e00\u4f4d\u76f8\u540c\uff0c\u5c31\u7ee7\u7eed\u770b\u91cc\u9762\u7684\u91cc\u9762\uff0c\u4e00\u76f4\u5230\u6bd4\u51fa\u7ed3\u679c\u4e3a\u6b62**\u3002\uff08\u5f53\u7136\uff0c\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e32\u672c\u8eab\u5c31\u662f\u4e2a\u56de\u6587\u4e32\uff0c\u5c31\u53d6\u54ea\u7aef\u90fd\u884c\u4e86\uff09\n\n## \u4f18\u5316\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u505a\u6700\u574f\u662f $n^2$ \u7684\u3002\u6bd4\u5982\uff0c\u7ed9\u4e00\u4e2a $AAAAAAAAAAA$\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u8981\u5224\u65ad\u4e24\u7aef\u53d6\u54ea\u4e00\u4e2a\u66f4\u4f18\uff0c\u8fd9\u662f $O(n)$ \u7684\uff0c\u9700\u8981\u505a $n$ \u6b21\uff0c\u590d\u6742\u5ea6\u7206\u70b8\u3002\u6211\u4eec\u4e0d\u5f97\u4e0d\u8003\u8651\u4f18\u5316\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u9488\u5bf9\u8fd9\u79cd\u6700\u52a3\u60c5\u51b5\uff0c\u8981\u662f\u80fd\u7528\u67d0\u79cd\u65b9\u6cd5\u8fc5\u901f\u627e\u51fa\u4e24\u7aef\u76f8\u540c\u7684\u957f\u5ea6\uff0c\u5c31\u53ef\u4ee5\u628a\u6700\u52a3\u60c5\u51b5\u7684\u6bcf\u4e00\u6b21\u5224\u65ad\u505a\u5230 $logn$\uff0c\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\u4f60\u4e00\u5b9a\u80fd\u60f3\u5230\uff0c\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u7528\u54c8\u5e0c\u3002\n\n\u5982\u679c\u4f60\u4e0d\u4f1a\u54c8\u5e0c\u7684\u57fa\u672c\u64cd\u4f5c\u7684\u8bdd\uff0c\u53ef\u4ee5\u53c2\u8003\u673a\u623f\u5927\u4f6c\u7684\u535a\u5ba2\uff1a[lhm_\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/lhm126/zi-fu-chuan-hash)\n\n$Code$:\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <cmath>\n#define N 500010\n#define M 98244353\n#define base 131\ntemplate<typename T> inline void read(T &x) {\n\tx = 0; char c = getchar(); bool flag = false;\n\twhile (!isdigit(c)) {if (c == '-') flag = true; c = getchar(); }\n\twhile (isdigit(c)) {x = (x << 1) + (x << 3) + (c ^ 48); c = getchar(); }\n\tif (flag)\tx = -x;\n}\nusing namespace std;\nint n;\nchar s[N];\nlong long ha1[N], ha2[N], bas[N];\n//\u56e0\u4e3a\u8981\u6b63\u7740\u7684\u4e32\u548c\u53cd\u7740\u7684\u4e32\u6bd4\u8f83\uff0c\u6240\u4ee5\u8981\u7528\u4e24\u4e2a\u54c8\u5e0c \n//bas[i]:base^i\nchar ans[N];\nint top;\nint lef, rig;//left, right\ninline int che(int len) {//hash\u57fa\u672c\u64cd\u4f5c\uff1a\u6bd4\u8f83\u4e24\u7aef\u662f\u5426\u76f8\u540c \n\tlong long l = ((ha1[lef + len - 1] - ha1[lef - 1] * bas[len]) % M + M) % M;\n\tlong long r = ((ha2[rig - len + 1] - ha2[rig + 1] * bas[len]) % M + M) % M;\n\treturn l == r;\n}\ninline int halffind() {\n\tint l = 1, r = (rig - lef + 1) >> 1;\n\tint mid, res = 1;\n\twhile (l <= r) {\n\t\tmid = (l + r) >> 1;\n\t\tif (che(mid)) {\n\t\t\tres = mid;\n\t\t\tl = mid + 1;\n\t\t} else {\n\t\t\tr = mid - 1;\n\t\t}\n\t}\n\treturn res;\n}\nint main() {\n\tread(n);\n\tfor (register int i = 1; i < n; ++i) {\n\t\ts[i] = getchar();\n\t\tgetchar();\n\t}\n\ts[n] = getchar();\n\tbas[0] = 1;\n\tfor (register int i = 1; i <= n; ++i) {\n\t\tha1[i] = (ha1[i - 1] * base + s[i]) % M;\n\t\tbas[i] = bas[i - 1] * base % M;\n\t}\n\tfor (register int i = n; i; --i) {\n\t\tha2[i] = (ha2[i + 1] * base + s[i]) % M;\n\t}\n\t\n\tlef = 1, rig = n;\n\tint len;\n\tfor (register int i = 1; i < n; ++i) {\n\t\tif (s[lef] < s[rig]) {\n\t\t\tans[++top] = s[lef++];\n\t\t} else if (s[rig] < s[lef]) {\n\t\t\tans[++top] = s[rig--];\n\t\t} else {\n\t\t\tlen = halffind();\n\t\t\tans[++top] = s[lef + len] < s[rig - len] ? s[lef++] : s[rig--];\n\t\t}\n\t}\n\tans[n] = s[lef];//\u6700\u540e\u4e00\u4e2a\u76f4\u63a5\u6254\u5230\u7b54\u6848\u7ed3\u5c3e\u5373\u53ef\uff0c\u4e0d\u7528\u5224\u65ad \n\tfor (register int i = 1; i <= n; ++i) {\n\t\tputchar(ans[i]);\n\t\tif (i % 80 == 0)\tputchar('\\n');\n\t}\n\treturn 0;\n}\n\n```\n\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u5982\u679c\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u6307\u51fa\u3002",
        "postTime": 1575767726,
        "uid": 221897,
        "name": "jiazhaopeng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold\u3011"
    },
    {
        "content": "\u9996\u5148\u8d2a\u5fc3\uff0c\u5de6\u8fb9\u548c\u53f3\u8fb9\u4e2d\u9009\u5b57\u5178\u5e8f\u5c0f\u7684\u3002\n\n\u4f46\u662f\u5f53\u5de6\u53f3\u76f8\u540c(\u5982AABCAA)\u65f6\u5c31\u4e0d\u597d\u5224\u65ad\u4e86\u3002\n\n~~\u8fd9\u4e2a\u9898\u6570\u636e\u5f31\u4e86\uff0c\u66b4\u529b\u7684n\u65b9\u4e5f\u80fd\u8fc7\uff0c\u6570\u636e\u6539\u5230500000\u597d\u4e86233~~\n\n\u6211\u4eec\u7528$f[i]$\u8868\u793a\u4ece$i$\u5f00\u59cb\u7684\u540e\u7f00\uff0c\u7528$g[i]$\u8868\u793a\u4ece$i$\u5f00\u59cb\u7684\u524d\u7f00\u3002\u90a3\u4e48\u9047\u5230$str[L]=str[R]$\u65f6\uff0c\u6bd4\u8f83$f[L]$\u548c$g[R]$\u5373\u53ef\u3002\n\n\u5982\u679c\u66b4\u529b\u53bb\u7b97$f$\u548c$g$\u663e\u7136\u4f1a\u8d85\u65f6\uff0c\u5c06\u539f\u4e32\u7684\u540e\u9762\u6dfb\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u5b57\u7b26\uff0c\u7136\u540e\u628a\u539f\u4e32\u5012\u8fc7\u6765\u63a5\u4e0a\u53bb\u3002\n\n$AABCAA==>AABCAA0AACBAA$\n\n\u5bf9\u65b0\u4e32\u6c42\u51fa\u540e\u7f00\u6570\u7ec4\uff0c$f[i]$\u5c31\u662f$rank[i]$\uff0c$g[i]$\u5c31\u662f$rank[2(n+1)-i]$\u3002\n\n~~%\u697c\u4e0b\u90a3\u4e2a\u8bf4\u96be\u5ea6\u8bc4\u9ad8\u4e86\u7684daolao~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 110000;\nint n, m;\nchar str[MAX];\nint SA[MAX], rnk[MAX], height[MAX], tax[MAX], tp[MAX], a[MAX];\nvoid Sort()\n{\n    for (int i = 0; i <= m; ++i)\n        tax[i] = 0;\n    for (int i = 1; i <= n; ++i)\n        tax[rnk[tp[i]]] ++;\n    for (int i = 1; i <= m; ++i)\n        tax[i] += tax[i - 1];\n    for (int i = n; i >= 1; --i)\n        SA[tax[rnk[tp[i]]] --] = tp[i];\n}\nbool cmp(int *f, int x, int y, int w)\n{\n    return (f[x] == f[y] && f[x + w] == f[y + w]);\n}\nvoid getSA()\n{\n    for (int i = 1; i <= n; ++i)\n        rnk[i] = a[i], tp[i] = i;\n    m = 127, Sort();\n    for (int w = 1, p = 1, i; p < n; w += w, m = p)\n    {\n        for (p = 0, i = n - w + 1; i <= n; ++i)\n            tp[++p] = i;\n        for (i = 1; i <= n; ++i)\n            if (SA[i] > w)\n                tp[++p] = SA[i] - w;\n        Sort(); swap(rnk, tp); rnk[SA[1]] = p = 1;\n        for (int i = 2; i <= n; ++i)\n            rnk[SA[i]] = cmp(tp, SA[i], SA[i - 1], w) ? p : ++p;\n    }\n}\nvoid init()\n{\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i)\n        scanf(\"%s\", str + i);\n    for (int i = 0; i < n; ++i)\n        a[2 * (n + 1) - i - 1] = a[i + 1] = str[i];\n    n = 2 * n + 1;\n    getSA();\n}\nchar ans[MAX];\nint cnt;\nint main()\n{\n    init();\n    getSA();\n    n = (n - 1) / 2;\n    int L = 1, R = n;\n    while (L < R)\n    {\n        if (a[L] < a[R])\n            ans[++cnt] = (char)(a[L++]);\n        else if (a[L] > a[R])\n            ans[++cnt] = (char)(a[R--]);\n        else\n        {\n            if (rnk[L] < rnk[2 * (n + 1) - R])\n                ans[++cnt] = (char)(a[L++]);\n            else\n                ans[++cnt] = (char)(a[R--]);\n        }\n    }\n    ans[++cnt] = (char)(a[L]);\n    n = strlen(ans + 1);\n    for (int i = 1; i <= n; ++i)\n    {\n        printf(\"%c\", ans[i]);\n        if (i % 80 == 0) putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1514430267,
        "uid": 37070,
        "name": "Ameyax",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold\u3011"
    },
    {
        "content": "# \u9898\u610f\n\n\u9898\u76ee\u94fe\u63a5\uff1a[P2870 [USACO07DEC]Best Cow Line G](https://www.luogu.com.cn/problem/P2870)\n\n# \u5206\u6790\n\n\u5bb9\u6613\u60f3\u5230\u8d2a\u5fc3\u5904\u7406\uff0c\u5c3d\u53ef\u80fd\u9009\u9996\u5c3e\u5b57\u7b26\u4e2d\u8f83\u5c0f\u7684\u90a3\u4e2a\uff1b\u800c\u5f53\u5b83\u4eec\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u6bd4\u8f83\u7b2c\u4e8c\u4e2a\u548c\u5012\u6570\u7b2c\u4e8c\u4e2a\uff0c\u624d\u80fd\u6309\u6700\u4f18\u7b56\u7565\u5b9e\u73b0\uff1b\u82e5\u8fd8\u76f8\u7b49\uff0c\u5c31\u9012\u5f52\u8fdb\u884c\u4e0b\u53bb\u3002\n\n\u8fd9\u5176\u5b9e\u5c31\u662f\u5728\u5bf9\u5b57\u7b26\u4e32\u6bd4\u5927\u5c0f\u2014\u2014\u4e00\u6bb5\u540e\u7f00\u548c\u4e00\u6bb5\u53cd\u4e32\u7684\u540e\u7f00\u3002\n\n\u8fd9\u5c31\u662f\u6bd4\u8f83\u4e24\u4e2a\u540e\u7f00\u7684\u5927\u5c0f\uff0c\u5bb9\u6613\u8054\u60f3\u5230\u540e\u7f00\u6570\u7ec4\u3002\u800c\u8981\u4f7f\u7528\u540e\u7f00\u6570\u7ec4\uff0c\u53ea\u9700\u8981\u628a\u53cd\u4e32\u63a5\u5728\u539f\u4e32\u540e\u9762\uff0c\u5e76\u5728\u63a5\u7f1d\u5904\u63d2\u5165\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u5b57\u7b26\uff08\u5176\u5b9e\u53ea\u9700\u8981\u6bd4\u539f\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u5c0f\u5373\u53ef\uff09\uff0c\u7136\u540e\u5728\u65b0\u4e32\u4e0a\u76f4\u63a5\u6c42\u540e\u7f00\u6570\u7ec4\u5373\u53ef\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u63d2\u5165\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u5b57\u7b26\uff1f\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7ed3\u5c3e\u6807\u8bc6\uff0c\u6709\u4e86\u5b83\uff0c\u7b49\u4ef7\u4e8e\u63a5\u5728\u539f\u4e32\u540e\u9762\u7684\u53cd\u4e32\u4e0d\u4f1a\u88ab\u7b97\u5165\u539f\u4e32\u7684\u540e\u7f00\u4e2d\u3002\u5982\u679c\u4e0d\u7406\u89e3\u53ef\u4ee5\u624b\u52a8\u6a21\u62df\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u6d1b\u8c37 #22 \u662f\u4e2a hack \u70b9\uff0c\u5bb9\u6613 TLE\uff0c~~\u800c\u4e14\u6700\u8fd1\u6d1b\u8c37\u8bc4\u6d4b\u673a\u65e5\u5e38\u6ce2\u52a8~~\uff0c\u6240\u4ee5\u8981\u4f18\u5316\u7ec6\u8282\u5361\u5e38\u3002\u5177\u4f53\u5361\u5e38\u6280\u5de7\u53ef\u4ee5\u53c2\u8003 [oi-wiki](https://oi-wiki.org/string/sa/#_4) \u3002\n\n# \u6e90\u7801\n\n```cpp\nconst int N = 2*(5e5+5);\n#define gc getchar\n\nint n, w;\nchar s[N];\nint sa[N], rk[N<<1], oldrk[N<<1], cnt[N], id[N], p[N]; \n\ninline bool cmp(int x, int y, int j) {\n\treturn oldrk[x] == oldrk[y] && oldrk[x+j] == oldrk[y+j];\n}\n\nint main()\n{\t\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\ts[i] = gc();\n\t\twhile (s[i] < 'A' || s[i] > 'Z') s[i] = gc();\n\t\ts[(n<<1)-i+2] = s[i];\n\t}\n\ts[n+1] = 'A' - 1;//\u8d4b\u503c\u4e3a\u6781\u5c0f, \u907f\u514d\u5bf9\u540e\u7f00\u6392\u5e8f\u4ea7\u751f\u5f71\u54cd \n\tn = (n<<1)+1;\n\t\n\tfor (int i = 1; i <= n; i++) cnt[(int)s[i]]++;\n\tw = 'Z'+5;\n\tfor (int i = 1; i <= w; i++) cnt[i] += cnt[i-1];\n\tfor (int i = n; i >= 1; i--) sa[cnt[(int)s[i]]--] = i;\n\tw = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\trk[sa[i]] = s[sa[i]] == s[sa[i-1]] ? w : ++w;\n\t\n\tfor (int j = 1; j < n; j <<= 1) {\n\t\tint t = 0;\n\t\tfor (int i = n; i > n - j; i--) id[++t] = i;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (sa[i] > j) id[++t] = sa[i] - j;\n\t\t\n\t\tmemset(cnt, 0, sizeof(cnt));\n\t\tfor (int i = 1; i <= n; i++) cnt[p[i] = rk[id[i]]]++;\n\t\tfor (int i = 1; i <= w; i++) cnt[i] += cnt[i-1];\n\t\tfor (int i = n; i >= 1; i--) sa[cnt[p[i]]--] = id[i];\n\t\t\n\t\tmemcpy(oldrk, rk, sizeof(oldrk));\n\t\tw = 0;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\trk[sa[i]] = cmp(sa[i-1], sa[i], j) ? w : ++w;\n\t}\n\t\n\tint l = 1, r = (n-1)>>1, tot = 0;\n\twhile (l <= r) {\n\t\tprintf(\"%c\", rk[l] < rk[n-r+1] ? s[l++] : s[r--]);\n\t\tif (++tot % 80 == 0) printf(\"\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595678097,
        "uid": 138041,
        "name": "cyh_toby",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]Best Cow Line G\u3011"
    },
    {
        "content": "# \u9898\u610f\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2870)\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u73c2\u4ee5\u53d6\u51fa\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u5934\u6216\u8005\u5c3e\uff0c\u5c06\u5176\u52a0\u5165\u7b54\u6848\u4e32\u4e2d\uff08\u653e\u5230\u6700\u540e\u9762\uff09\uff0c\u8981\u6c42\u5fc5\u987b\u628a\u8be5\u5b57\u7b26\u4e32\u53d6\u5b8c\uff0c\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u65b9\u6848\n\n# \u5206\u6790\n\nSA\u7b80\u5355\u9898\n\n\u9898\u76ee\u8981\u6c42\u7684\u662f\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c~~\u5f88\u5bb9\u6613\u60f3\u5230SA\u6765\u6c42~~\n\n\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u53ef\u80fd\u7684\u60c5\u51b5\u5c31\u53ea\u6709\u4e24\u79cd\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u8d2a\u5fc3\u5730\u53d6\uff0c\u6bcf\u6b21\u53d6\u5f53\u524d\u5934\u548c\u5c3e\u5f53\u4e2d\u8f83\u5c0f\u7684\u90a3\u4e2a\u5b57\u7b26\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u5934\u548c\u5c3e\u76f8\u540c\u8be5\u600e\u4e48\u529e\uff1f\n\n\u6bd4\u5982\u8fd9\u6837\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1aBCAB\n\n\u73b0\u5728\u6211\u4eec\u53d6\u8fd9\u4e2a\u4e32\u5c31\u4e0d\u77e5\u9053\u8be5\u53d6\u5934\u8fd8\u662f\u5c3e\uff0c\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u6211\u4eec\u8d38\u7136\u53d6\u5934\u7684\u8bdd\uff08\u53d8\u6210CAB\uff09\uff0c\u6211\u4eec\u4e0b\u4e00\u6b65\u53ea\u80fd\u53d6\u5230C\u6216B\uff08\u5f53\u524d\u5c31\u5e94\u8be5\u53d6B\uff09\n\n\u8fd9\u6837\u5e72\u4e4b\u540e\u6211\u4eec\u4f1a\u53d6\u5230BB\u4f5c\u4e3a\u5f53\u524d\u5df2\u7ecf\u53d6\u4e86\u7684\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u6709\u66f4\u4f18\u7684\u9009\u62e9\uff0c\u90a3\u5c31\u662f\u7b2c\u4e00\u6b21\u53d6\u7684\u65f6\u5019\u53d6\u5c3e\uff0c\u7136\u540e\u6211\u4eec\u73c2\u4ee5\u53d6\u5230BA\u8fd9\u4e2a\u4e32\uff0c\u5b83\u7684\u5b57\u5178\u5e8f\u66f4\u5c0f\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u600e\u4e48\u641e\u3002\n\n\u73c2\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e\u6bcf\u6b21\u53d6\u90fd\u662f\u5728\u67e5\u770b\u5f53\u524d\u72b6\u6001\u4e0b\uff0c\u662f\u5f53\u524d\u4e32\u7684\u5b57\u5178\u5e8f\u5c0f\uff0c\u8fd8\u662f\u5f53\u524d\u53cd\u4e32\u7684\u5b57\u5178\u5e8f\u5c0f\uff0c\u90a3\u4e48\u8fd9\u5c31\u76f8\u5f53\u4e8e\u662f\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u8c01\u5927\u8c01\u5c0f\u7684\u95ee\u9898\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u540e\u7f00\u6570\u7ec4SA\u6765\u505a\u3002\n\n\u5177\u4f53\u5c31\u662f\u8bbe\u539f\u4e32\u4e3aA\uff0c\u8bbeA\u7684\u53cd\u4e32\u662f~A\uff0c\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u8003\u8651\u62fc\u63a5\u8fd9\u6837\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32 B=A+\uff08\u5206\u9694\u7b26\uff09+ ~A\n\n\u6b64\u65f6\u6211\u4eec\u5bf9B\u4e32\u8dd1\u4e00\u8fb9SA\u5c31\u53ef\u4ee5\u5f97\u5230\u539f\u4e32\u548c\u53cd\u4e32\u5b57\u5178\u5e8f\u6392\u5e8f\u4e4b\u540e\u7684\u76f8\u5bf9\u5927\u5c0f\u4e86\uff08rk\u6570\u7ec4\uff09\n\n\u6bcf\u6b21\u9009\u5b57\u7b26\u7684\u65f6\u5019$O(1)$\u6bd4\u8f83\u4e00\u4e0b\u5c31\u884c\u4e86\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x){\n\tx=0;char ch=getchar();bool f=false;\n\twhile(!isdigit(ch)){if(ch=='-'){f=true;}ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\tx=f?-x:x;\n\treturn ;\n}\ntemplate <typename T,typename... Args> inline void read(T& t, Args&... args){read(t);read(args...);}\ntemplate <typename T>\ninline void write(T x){\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) write(x/10);\n\tputchar(x%10^48);\n\treturn ;\n}\ntemplate <typename T>\ninline void print(T x){write(x),putchar(' ');}\n#define ll long long\n#define ull unsigned long long\n#define inc(x,y) (x+y>=MOD?x+y-MOD:x+y)\n#define dec(x,y) (x-y<0?x-y+MOD:x-y)\n#define min(x,y) (x<y?x:y)\n#define max(x,y) (x>y?x:y)\nconst int N=1e6+5,M=1e6+5,MOD=1e9+7;\nchar str[N];\nint n,m,k,sa[N],rk[N],oldrk[N],id[N],px[N],cnt[N];\nbool cmp(int x,int y,int w){return oldrk[x]==oldrk[y] && oldrk[x+w]==oldrk[y+w];}\nvoid SA(){\n\tint i,p=0,w;\n\tm=300;\n\tfor(i=1;i<=n;i++) ++cnt[rk[i]=str[i]];\n\tfor(i=1;i<=m;i++) cnt[i]+=cnt[i-1];\n\tfor(i=n;i>=1;i--) sa[cnt[rk[i]]--]=i;\n\tfor(w=1;w<n;w<<=1,m=p){\n\t\tfor(p=0,i=n;i>n-w;i--) id[++p]=i;\n\t\tfor(i=1;i<=n;i++) if(sa[i]>w) id[++p]=sa[i]-w;\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tfor(i=1;i<=n;i++) ++cnt[px[i]=rk[id[i]]];\n\t\tfor(i=1;i<=m;i++) cnt[i]+=cnt[i-1];\n\t\tfor(i=n;i>=1;i--) sa[cnt[px[i]]--]=id[i];\n\t\tmemcpy(oldrk,rk,sizeof(rk));\n\t\tfor(p=0,i=1;i<=n;i++) rk[sa[i]]=cmp(sa[i],sa[i-1],w) ? p : ++p;\n\t\t\n\t}\n\treturn ;\n}\nint main(){\n\tread(k);char ch;\n\tfor(int i=1;i<=k;i++) while(isalpha(ch=getchar())) str[i]=ch;\n\tn=k<<1|1;\n\tfor(int i=1;i<=k;i++) str[i+k+1]=str[k-i+1];\n\tSA();\n\tint l=1,r=k,tot=0;\n\twhile(l<=r){\n\t\tif(rk[l]<rk[n+1-r]) putchar(str[l++]);\n\t\telse putchar(str[r--]);\n\t\tif((++tot)%80==0) puts(\"\");\n\t}\n\tsystem(\"Pause\");\n\treturn 0;\n}\n```\n",
        "postTime": 1609228002,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]Best Cow Line G\u3011"
    },
    {
        "content": "\u601d\u8def\u5927\u6982\u548c\u5176\u4ed6\u7684\u9898\u89e3\u4e00\u6837\uff1a\n> \u4ece\u5f53\u524d\u5b57\u7b26\u4e32\u6700\u524d\u9762\uff0c\u6700\u540e\u9762\u9009\u4e00\u4e2a\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u7136\u540e\u62c9\u5230\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u5e8f\u5217\u4e2d\uff0c\u5982\u679c\u76f8\u540c\u5c31\u4e00\u76f4\u5f80\u4e2d\u95f4\u626b\u63cf\u76f4\u5230\u53d1\u73b0\u4e0d\u540c\u4e3a\u6b62\uff08\u4e00\u4e2a\u5b57\u7b26\u5982\u679c\u88ab\u9009\u4e2d\u4e4b\u540e\u90a3\u4e48\u5c31\u4e0d\u53ef\u4ee5\u518d\u6b21\u9009\u62e9\u4e86\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5de6\u53f3\u5404\u8bbe\u4e00\u4e2a\u6307\u9488\u626b\u63cf\u5c31\u597d\u4e86\uff0c\u4e0d\u9700\u8981\u9012\u5f52\u3002 \u2014\u2014 WuPengrui_666 \n\n\u6b64\u9898\u89e3\u7ec8\u7ed3\u2026\u2026\u8bf6\u7b49\u4e00\u4e0b\uff0184\u5206\u662f\u600e\u4e48\u56de\u4e8b\uff01\n\n\u54e6\uff0c\u5bf9\u4e86\uff0c\u6570\u636e\u88ab\u52a0\u5f3a\u4e86\n\n![\u6bd2\u7624chen_zhe](https://i.loli.net/2019/01/24/5c49c67b275d8.png)\n\n\u8fd9\u91cc\u7684\u9898\u89e3\u90fd\u6bd4\u8f83\u53e4\u8001\u2026\u2026\u90fd\u5728\u6570\u636e\u88ab\u589e\u5f3a\u4e4b\u524d\u5199\u7684\n\n\u90a3\u2026\u2026\u6211\u4eec\u8c08\u4e00\u4e0b\u6b63(you)\u786e(hua)\u89e3(bao)\u6cd5(li)\n\n\u6734\u7d20\u66b4\u529b\u6700\u574f\u53ef\u4ee5\u8fbe\u5230$O(n^2)$\uff0c\u5c31\u662f\u5168\u90e8\u90fd\u662f\u540c\u4e00\u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\n\n\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u7279\u5224\u3002\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\uff0c\u53d6\u51fa\u7684\u5b57\u4e32\u4e5f\u5c31\u53ea\u6709\u4e00\u79cd\u53ef\u80fd\uff0c\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u8f93\u51fa\u8fd9n\u4e2a\u5b57\u7b26\u4e0d\u5c31\u597d\u4e86\u5462~\n\ncode : \n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n    int cnt = 0, l = 1, r, n, flag = 1;\n    scanf(\"%d\", &n);\n    char a[500010], c;\n    for(int i = 1; i <= n; i++) {\n        getchar(); a[i] = getchar();\n        if(i == 1) c = a[i];\n        else if(a[i] != c) flag = 0;\n    }\n    if(flag) {\n        for(int i = 1; i <= n; i++) {\n            putchar(c);\n            if(i % 80 == 0) putchar(10);\n        }\n        return 0;\n    }\n    r = n;\n    while(l < r) {\n        cnt++;\n        if(a[l] < a[r]) {\n            putchar(a[l]);\n            l++;\n        } else {\n            if(a[r] < a[l]) {\n                putchar(a[r]);\n                r--;\n            } else {\n                int x = l, y = r;\n                while(x < y && a[x] == a[y]) x++, y--;\n                if(a[x] < a[y]) {\n                    putchar(a[l]);\n                    l++;\n                } else {\n                    putchar(a[r]);\n                    r--;\n                }\n            }\n        }\n        if(cnt % 80 == 0) putchar(10);\n    }\n    putchar(a[l]);\n    return 0;\n}\n```\n\n\u6b64\u9898\u89e3\u7ec8\u7ed3~~\uff08\u771f\u7684\uff09~~\n\n----\n\n----",
        "postTime": 1548339212,
        "uid": 108185,
        "name": "Acanthe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u5199\u4e00\u7bc7**\u5b57\u7b26\u4e32\u54c8\u5e0c**\u7684\u9898\u89e3\u3002~~\u5176\u5b9e\u662f\u56e0\u4e3a\u540e\u7f00\u6570\u7ec4\u7801\u91cf\u7a0d\u5927\u4e00\u4e01\u70b9\u6211\u4e0d\u60f3\u5199\u4e86~~\u3002\u2190\u4e0d\u8fc7\u63d0\u4e00\u53e5\u6709\u7684\u9898\u76eehash\u786e\u5b9e\u4e5f\u53ef\u4ee5\u4f5c\u4e3aSA\u7684\u66ff\u4ee3\u54c1\uff0c _**\u7801\u91cf\u6781\u77ed\uff0c\u8fd8\u4e0d\u6613\u5199\u9519**_ \u3002\u5728\u6bd4\u8f83\u8c01\u5b57\u5178\u5e8f\u5c0f\u7684\u65f6\u5019\uff0c\u4e8c\u5206\u67e5\u627e\u54c8\u5e0c\u503c\uff0c\u627e\u5230\u6700\u5c0f\u5143\u7d20\u4f7f\u5f97\u54c8\u5e0c\u503c\u4e0d\u4e00\u6837\uff0c\u7136\u540e\u6bd4\u8f83\u4e4b\uff0c\u5c31\u53ef\u4ee5\u4e86\u54df\uff0c\u5177\u4f53\u770bcode\u3002\n\n\u601d\u8def\u8d2a\u5fc3\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u770b\u697c\u4e0a\u4e0b\uff0c\u4e0d\u8fc7\u8c8c\u4f3c\u6ca1\u6709\u4eba\u7ed9\u8bc1\u660e\u6b63\u786e\u6027\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4efd[dalao\u7684\u8bc1\u660e](https://www.cnblogs.com/liu-runda/p/6478318.html)\u3002\u987a\u4fbf\u5b89\u5229\u4e00\u9053[\u7c7b\u4f3c\u7684\u9898](https://www.lydsy.com/JudgeOnline/problem.php?id=4278).\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define dbg(x) cerr<<#x<<\" = \"<<x<<endl\n#define ddbg(x,y) cerr<<#x<<\" = \"<<x<<\"   \"<<#y<<\" = \"<<y<<endl\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntemplate<typename T>inline char MIN(T&A,T B){return A>B?A=B,1:0;}\ntemplate<typename T>inline char MAX(T&A,T B){return A<B?A=B,1:0;}\ntemplate<typename T>inline T _min(T A,T B){return A<B?A:B;}\ntemplate<typename T>inline T _max(T A,T B){return A>B?A:B;}\ntemplate<typename T>inline T read(T&x){\n    x=0;int f=0;char c;while(!isdigit(c=getchar()))if(c=='-')f=1;\n    while(isdigit(c))x=x*10+(c&15),c=getchar();return f?x=-x:x;\n}\nconst int N=500000+7;\nconst ull base=137;\nint n,m;\null ha[N],hb[N],p[N];\nint a[N],b[N],c[N];\nchar ch[3];\ninline ull get_ha(int l,int r){return ha[r]-ha[l-1]*p[r-l+1];}\ninline ull get_hb(int l,int r){return hb[r]-hb[l-1]*p[r-l+1];}\ninline int find_distinc(int i,int j){\n\tint L=0,R=n-j-i+2,mid;\n\twhile(L<R){\n\t\tmid=L+R>>1;\n\t\tif(get_ha(i,i+mid)^get_hb(j,j+mid))R=mid;\n\t\telse L=mid+1;\n\t}\n\treturn L;\n}\n\nint main(){//freopen(\"test.in\",\"r\",stdin);freopen(\"test.out\",\"w\",stdout);\n\tread(n);p[0]=1;\n\tfor(register int i=1;i<=n;++i)scanf(\"%s\",ch),a[i]=b[n-i+1]=ch[0]-'A';\n\tfor(register int i=1;i<=n+1;++i)p[i]=p[i-1]*base;\n\tfor(register int i=1;i<=n;++i)ha[i]=ha[i-1]*base+a[i];\n\tfor(register int i=1;i<=n;++i)hb[i]=hb[i-1]*base+b[i];\n\tint i=1,j=1;\n\twhile(i<=n-j+1){//ddbg(i,n-j+1);\n\t\tint len=find_distinc(i,j);//dbg(len);\n\t\tif(a[i+len]<=b[j+len])c[++m]=a[i++];\n\t\telse c[++m]=b[j++];\n\t}\n\tfor(register int i=1;i<=m;++i)printf(\"%c\",c[i]+'A'),i%80?0:puts(\"\");\n\treturn 0;\n}\n```\n",
        "postTime": 1552395673,
        "uid": 28913,
        "name": "Utsuji_rissh\u016b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold\u3011[\u5b57\u7b26\u4e32\u54c8\u5e0c]"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u8fd9\u9898\u96be\u5ea6\u4e3a\u4ec0\u4e48\u8bc4\u90a3\u4e48\u9ad8\n\n\u7b2c\u4e00\u773c\u5c31\u89c9\u5f97\u662f\u8d2a\u5fc3\n\n\u4e00\u4e2a\u5934\u6307\u9488\uff0c\u4e00\u4e2a\u5c3e\u6307\u9488\uff0c\u54ea\u8fb9\u5b57\u6bcd\u5c0f\u5c31\u8f93\u51fa\u54ea\u8fb9\n\n\u5982\u679c\u4e00\u6837\u5462\uff1f\u5c31\u8ba9\u5934\u5c3e\u6307\u9488\u5f80\u540e\u627e\uff0c\u76f4\u5230\u4e0d\u4e00\u6837\u4e3a\u6b62\n\n\u9644\u4e0a\u975e\u5e38\u7b80\u77ed\u7684\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,sum;\nchar s[200005];\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++) cin>>s[i];\n    int head=1,tail=n;\n    while(head<tail)\n    {\n        if(s[head]<s[tail]) cout<<s[head++];\n        else if(s[head]>s[tail]) cout<<s[tail--];\n        else {\n            int x=head,y=tail;\n            while(x<y&&s[x]==s[y])\n            x++,y--;\n            if(s[x]<s[y])  cout<<s[head++];\n            else cout<<s[tail--];\n        }\n        sum++;\n        if(sum%80==0) cout<<endl;\n    }\n    cout<<s[head]<<endl;\n    return 0; \n}\n```\n\u6765\u81ea\u4e4b\u524d\u65e0\u77e5\u7684\u6211\u5199\u76842b\u9898\u89e3,\u6781\u9650\u590d\u6742\u5ea6\u662fn^2\u7684\n\n--------------------------------------------\n\n\u5b66\u4e86\u540e\u7f00\u6570\u7ec4\u540e\uff0c\u624d\u77e5\u9053\u53ea\u662f\u4e2aSA\u7684\u88f8\u9898\uff0c\u4f46\u6709\u4e00\u7ec430000\u4e2aA\u7684\u6570\u636e\u6211\u7684\u8fd9\u4e2an^2\u7a0b\u5e8f\u8fd8\u662f\u8fc7\u4e86\uff0c\u5f88\u6709\u610f\u601d\u554a\u3002\n\n\u540e\u7f00\u6570\u7ec4\u505a\u6cd5\uff0c\u76f4\u63a5\u7ed9\u4e32\u7684\u540e\u9762\u52a0\u4e00\u4e2a'0' \u7136\u540e\u518d\u52a0\u4e00\u4e2a\u53cd\u8fc7\u6765\u7684\u7a7f\u5728\u540e\u9762\uff0c\u7136\u540e\u6c42\u540e\u7f00\u6570\u7ec4\u540e\u548c\u4e0a\u9762\u90a3\u7a0b\u5e8f\u5dee\u4e0d\u591a\u4e86\uff0c\u53ea\u662f\u6bd4\u8f83\u5927\u5c0f\u7684\u65f6\u5019\u4ece$O(n)$\u5230$O(1)$\u4e86\uff0c\u590d\u6742\u5ea6 $nlogn$\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=300055;\nchar s[N];\nint sa[N],x[N],t[N],y[N],n,m,a[N],sum;\nbool cmp(int o,int p,int q)\n{\n    return y[o]==y[p]&&y[o+q]==y[p+q];\n}\nvoid SA()\n{\n    m=28;\n    for(int i=0;i<=m;i++) t[i]=0;\n    for(int i=1;i<=n;i++) t[x[i]=a[i]]++;\n    for(int i=1;i<=m;i++) t[i]+=t[i-1];\n    for(int i=n;i>=1;i--) sa[t[x[i]]--]=i;\n    for(int k=1;k<=n;k<<=1)\n    {\n        int p=0;\n        for(int i=0;i<=m;i++) t[i]=y[i]=0;\n        for(int i=n-k+1;i<=n;i++) y[++p]=i;\n        for(int i=1;i<=n;i++) if(sa[i]>k) y[++p]=sa[i]-k;\n        for(int i=1;i<=n;i++) t[x[y[i]]]++;\n        for(int i=1;i<=m;i++) t[i]+=t[i-1];\n        for(int i=n;i>=1;i--) sa[t[x[y[i]]]--]=y[i];\n        swap(x,y);\n        x[sa[1]]=p=1;\n        for(int i=2;i<=n;i++) x[sa[i]]=cmp(sa[i],sa[i-1],k)?p:++p;\n        if(p>=n) break;m=p;\n    } \n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    cin>>s[i],s[2*n+2-i]=s[i];\n    for(int i=1;i<=2*n+1;i++)\n    a[i]=s[i]-'A'+1;a[n+1]=0;\n    n=n*2+1;\n    SA();\n    int a1=1,a2=1;\n    n>>=1;\n    while(a1+a2<n+2)\n    {\n        if(x[a1]>x[a2+n+1])\n        cout<<s[n+1-a2],a2++;\n        else cout<<s[a1],a1++;\n        sum++;\n        if(sum%80==0) puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1507615514,
        "uid": 36103,
        "name": "wxgwxg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4eec\u7528\u4e00\u79cd\u6bd4\u8f83\u7279\u6b8a\u7684\u65b9\u6cd5\n\n\u9898\u76ee\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\n\n\u6211\u4eec\u5728\u5e8f\u5217\u4e24\u5934\u627e\u5c0f\u7684\u653e\u5c31\u884c\u4e86\n\n\u5f53\u7136\u8fd9\u53ea\u662f\u4e00\u4e2a\u521d\u6b65\u601d\u8def~~\u4e0d\u7136\u600e\u4e48\u662f\u84dd\u9898~~\n\n### \u95ee\u9898\n\n\u5982\u679c\u4e24\u5934\u4e00\u6837\u600e\u4e48\u529e\uff1f\uff1f\uff1f\n\n\u90a3\u4e48\u4f60\u5c31\u6bd4\u8f83\u4e0b\u4e00\u4e2a\uff0c\u7136\u540e\u53d6\u4e0b\u4e00\u4e2a\u5c0f\u7684\n\n\u5982\u679c\u4e0b\u4e00\u4e2a\u8fd8\u4e00\u6837\u7ee7\u7eed\u6bd4\u8f83\n\n\u5982\u679c\u4f60\u8fd9\u4e48\u5199\uff0c\u5c06\u4f1a\u6536\u83b7\u4e00\u4e2aTLE\n\n\u6240\u4ee5\u8981\u4f18\u5316\n\n\u6211\u4eec\u5148\u5224\u65ad\u53c8\u56de\u6587\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5230\u4e2d\u95f4\u4e00\u4e2a\u90fd\u6bd4\u524d\u9762\u5927\u7684\n\n\u90a3\u5c31\u76f4\u63a5\u8f93\u51fa\uff08\u7384\u5b66\u4f18\u5316\uff0c\u4ece84->100\uff09\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nchar ans[500005],a[500005];\nint n,p=0,k=0,same=0;\nint main()\n{\n    scanf(\"%d\",&n);\n    same=1;\n    for (int i=1;i<=n;i++)\n        while (1)\n        {\n        \tscanf(\"%c\",&a[i]);\n        \tif (a[i]!=a[i-1]&&a[i]>1) same=0;\n        \tif (a[i]>='A'&&a[i]<='Z') break;\n        }\n    same=1; \n    for (int i=1;i<=n;i++) if (a[i]!=a[n-i+1]) same=0;\n    for (int i=2;i<=n/2;i++) if (a[i]>a[i-1]) same=0;\n    if (same)\n    {\n        for (int k=1;k<=n;k++)\n        if (k%80==0) printf(\"%c\\n\",a[k]);\n        else printf(\"%c\",a[k]); \n        return 0;\n    }\n    \n    \n    \n    int i=1,j=n;\n    while (i<j)\n    {\n    \tif (a[i]>a[j])\n    \t{\n    \t\tp++;\n    \t\tans[p]=a[j];\n    \t\tj--;\n    \t\t//cout<<\"> \";\n        }\n        else if (a[j]>a[i])\n             {\n                 p++;\n                 ans[p]=a[i];\n                 i++;\n                 //cout<<\"< \";\n             }\n             else\n             {\n                 int i1=i,j1=j,win=-1;\n                 while (a[i1]==a[j1]&&i<j)\n                 {\n                     i1++;\n                     j1--;\t\n                     if (i1>j1) break;\n                     if (a[i1]>a[j1]/*&&a[j1]<=a[j]*/)\n                     {\n                         win=0;\n                         break;\n                     }\n                     else if (a[i1]<a[j1]/*&&a[i1]<=a[i]*/)\n                          {\n                              win=1;\n                              break;\n                          }\n                          //else if (a[i1]>a[i]&&a[j1]>a[j])\n                               //{\n                     \t           //win=2;\n                     \t           //break;\n                               //}\n                               else continue;\n                 }\n                 //if (win==-1)\n                 //{\n                 \t//for (k=i;k<=j;k++)\n                 \t//{\n                 \t    //p++;\n                        //ans[p]=a[k];\n                    //}\n                    //cout<<\"win=-1 \";\n                    //break;\n                 //}\n                 if (win==-1)\n                 {\n                 \tp++;\n                    ans[p]=a[i];\n                    i++;\n                 }\n                 else if (win==0)\n                      {\n                          //for (k=j;k>=j1;k--)\n                          //{\n                          //    p++;\n                          //    ans[p]=a[k]; \n                          //}\n                          //j=j1-1;\n                          p++;\n                          ans[p]=a[j];\n                          j--;\n                          //cout<<\"win=0 \";\n                      }\n                      else if (win==1)\n                           {\n                               //for (k=i;k<=i1;k++)\n                               //{\n                                   //p++;\n                                   //ans[p]=a[k];\n                               //}\n                               //i=i1+1;\n                               p++;\n                               ans[p]=a[i];\n                               i++;\n                               //cout<<\"win=1 \";\n                           }\n                           //else\n                           //{\n                            //   for (k=i;k<=i1-1;k++)\n                            //   {\n                             //  \t   p++;\n                             //  \t   ans[p]=a[k];\n                             //  }\n                             //  for (k=j;k>=j1+1;k--)\n                             //  {\n                             //      p++;\n                             //      ans[p]=a[k];\n                              // }\n                              // i=i1;\n                             // j=j1;\n                               //cout<<\"win=2 \";\n                           //}\n             }\n        //cout<<i<<\" \"<<j<<\" \";\n        //for (int k=1;k<=n;k++)\n        //if (k%80==0) printf(\"%c\\n\",ans[k]);\n        //else printf(\"%c\",ans[k]);\n        //cout<<endl;\n    }\n    if (p<n)\n    {\n        p++;\n        ans[p]=a[i];\n    }\n    for (int k=1;k<=n;k++)\n        if (k%80==0) printf(\"%c\\n\",ans[k]);\n        else printf(\"%c\",ans[k]);\n    return 0;\n}\n```\n\n\u65f6\u95f42965ms,\u7a7a\u95f41532kb,\u4ee3\u7801\u957f\u5ea64.12kb\n\n\u8fd9\u662f\u6211\u5728\u6d1b\u8c37\u4e0a\u63d0\u4ea4\u7684\u51e0\u4e4e\u6700\u957f\u7684\u4ee3\u7801\uff08\u9664\u4e86p4420\uff09\n\n\u8c22\u8c22\u5927\u4f6c\u4eec\u7684\u89c2\u8d4f",
        "postTime": 1550499801,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold\u3011"
    },
    {
        "content": "- \u957f\u5ea6\u4e3aN\u7684\u5b57\u7b26\u4e32S\uff0c\u8981\u8ba9\u4f60\u6784\u9020\u4e00\u4e2a\u5b57\u7b26\u4e32T\uff0c\u4f60\u53ef\u4ee5\u6bcf\u6b21\u5728S\u4e2d\u5220\u53bb\u5934\u90e8\u4e00\u4e2a\u5b57\u7b26\uff0c\u52a0\u5230T\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u5728S\u7684\u5c3e\u90e8\u5220\u53bb\u4e00\u4e2a\u5b57\u7b26\u52a0\u5230T\u4e2d\uff0c\u95ee\u4f60T\u7684\u5b57\u5178\u6700\u5c0f\u7684\u7b54\u6848\u662f\u4ec0\u4e48\n- \u6311S\u7684\u5934\u548c\u5c3e\u90e8\u5b57\u5178\u5e8f\u5217\u6700\u5c0f\u7684\u5b57\u7b26\n- \u5982\u679c\u76f8\u7b49\u90a3\u4e48\u5c31\u7ee7\u7eed\u5411\u4e0b\u4e00\u5c42\u6311S\u7684\u6b21\u5934\u548c\u6b21\u5c3e\u90e8\u5b57\u5178\u5e8f\u5217\u6700\u5c0f\u7684\u5b57\u7b26\n\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <map>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\nint n,ji=0;\nchar a[30100];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tgetchar(),scanf(\"%c\",&a[i]);\n\tint h=1,t=n;\n\twhile(h<t)\n\t{\n\t\tif(a[h]<a[t])\n\t\t\tprintf(\"%c\",a[h++]);\n\t\telse if(a[h]>a[t])\n\t\t\tprintf(\"%c\",a[t--]);\n\t\telse\n\t\t{\n\t\t\tint x=h,y=t;\n\t\t\twhile(x<y&&a[x]==a[y])\n\t\t\t\tx++,y--;\n\t\t\tif(a[x]<a[y])\n\t\t\t\tprintf(\"%c\",a[h++]);\n\t\t\telse\n\t\t\t\tprintf(\"%c\",a[t--]);\n\t\t}\n\t\tji++;\n\t\tif(ji==80)\n\t\t\tprintf(\"\\n\"),ji=0;\n\t}\n\tprintf(\"%c\",a[h]);\n    return 0;\n}\n```",
        "postTime": 1520617397,
        "uid": 48934,
        "name": "cold_cold",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold\u3011"
    },
    {
        "content": "\u5c31\u662f\u6bcf\u6b21\u4ece\u5f53\u524d\u4e32\u627e\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u5b57\u7b26\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u54ea\u8fb9\u5c0f\u5c31\u53d6\u54ea\u8fb9\u3002\u5982\u679c\u76f8\u7b49\u5c31\u9ebb\u70e6\u70b9\uff0c\u8981\u4e00\u4f4d\u4e00\u4f4d\u5f80\u91cc\u5934\u627e\uff0c\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u662f\u5426\u4e0d\u76f8\u7b49\u3002\u5f53\u627e\u5230\u4e4b\u540e\u5c31\u6309\u521a\u624d\u7684\u5904\u7406\u5c31\u597d\u4e86\n\n\n\u8fd8\u6709\u6700\u540e\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u8981\u6bcf80\u4e2a\u6362\u884c\uff0c\u88ab\u5751\u4e86\n\n \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n//by zrt\n//problem:\nusing namespace std;\ntypedef long long LL;\nconst int inf(0x3f3f3f3f);\nconst double eps(1e-9);\nchar s[60005];\nint n,m;\nconst int MAXN=60005;\nint sa[MAXN],t[MAXN],t2[MAXN],c[MAXN],rank[MAXN];\nvoid build_sa(int m){\n    int *x=t,*y=t2;\n    for(int i=0;i<m;i++) c[i]=0;\n    for(int i=0;i<n;i++) c[x[i]=s[i]]++;\n    for(int i=1;i<m;i++) c[i]+=c[i-1];\n    for(int i=n-1;i>=0;i--) sa[--c[x[i]]]=i;\n    for(int k=1;k<=n;k<<=1){\n        int p=0;\n        for(int i=n-k;i<n;i++) y[p++]=i;\n        for(int i=0;i<n;i++) if(sa[i]>=k) y[p++]=sa[i]-k;\n        for(int i=0;i<m;i++) c[i]=0;\n        for(int i=0;i<n;i++) c[x[y[i]]]++;\n        for(int i=1;i<m;i++) c[i]+=c[i-1];\n        for(int i=n-1;i>=0;i--) sa[--c[x[y[i]]]]=y[i];\n        swap(x,y);\n        p=1;x[sa[0]]=0;\n        for(int i=1;i<n;i++){\n            x[sa[i]]=y[sa[i-1]]==y[sa[i]]&&y[sa[i-1]+k]==y[sa[i]+k]?p-1:p++;\n        }\n        if(p>=n) break;\n        m=p;\n    }\n}\nint main(){\n    #ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++) scanf(\"%s\",&s[i]);\n    s[n]='$';\n    for(int i=0;i<n;i++) s[i+n+1]=s[n-i-1];\n    m=n;n<<=1;\n    n=n+1;\n    s[n]='\\0';\n    build_sa(128);\n    for(int i=0;i<n;i++) rank[sa[i]]=i;\n    int cc=0;\n    int l=0,r=m-1;\n    for(int i=0;i<m;i++){\n        int a=rank[l];\n        int b=rank[(m-r)+m];\n        cc++;\n        if(a<b){\n            putchar(s[l++]);\n        }else putchar(s[r--]);\n        if(cc==80) cc=0,putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1477119597,
        "uid": 9538,
        "name": "\u5434\u56fd\u94e8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold\u3011"
    },
    {
        "content": "\u672c\u4eba\u84bb\u849f\uff0c\u4e00\u79cd\u6bd4\u8f83\u7b28\u7684\u65b9\u6cd5\uff0c\u80fd\u8fc7\n\n\u4ece\u5b57\u5178\u5e8f\u6027\u8d28\u6765\u770b\uff0c\u65e0\u8bba\u5b57\u7b26\u4e32\u672b\u5c3e\u6709\u591a\u5927\uff0c\u53ea\u8981\u4fdd\u8bc1\u524d\u9762\u90e8\u5206\u8f83\u5c0f\u5c31\u53ef\u4ee5\n\n\u6bd4\u8f83\u961f\u9996\uff0c\u961f\u5c3e\uff0c\u5c0f\u7684\u76f4\u63a5\u8f93\u51fa\n\n\u76f8\u7b49\u6bd4\u8f83\u9ebb\u70e6\n\n\u9644\u4e0a\u7684\u7a0b\u5e8f\u6bd4\u8f83\u66b4\u529b\uff08\u5176\u5b9e\u8fd8\u53ef\u4ee5\u4f18\u5316\uff09\n\n\u6bcf\u6b21\u76f8\u7b49\u65f6\uff0c\u5f80\u91cc\u9762\u641c\uff0c\u627e\u5230\u4e00\u4e2a\u80fd\u591f\u6bd4\u51fa\u5927\u5c0f\u7684\u4fbf\u8f93\u51fa\n\n\u518d\u52a0\u4e2a\u5224\u65ad\uff1a\u5982\u679c\u5f53\u524d\u5b57\u6bcd\u4e3a\u5e8f\u5217\u4e2d\u6700\u5c0f\u5143\u7d20\uff0c\u76f4\u63a5\u8f93\u51fa\n\n\u9644\u4e0a\u4ee3\u7801\uff0c\u5fc5\u8981\u65f6\u6709\u6ce8\u89e3\uff1a\n\n```cpp\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<algorithm>\nint n;\nchar a[30005];\nint num[500];//\u4fdd\u5b58\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\nint l,r;\nchar minc;\nint main()\n{\n    scanf(\"%d\",&n);\n    getchar();\n    for (int i=1; i<=n; i++)\n    {\n        scanf(\"%c\",&a[i]);\n        num[a[i]]++;\n        getchar();\n    }\n    for (int i='A'; i<='Z'; i++)\n        if (num[i]!=0)//\u6c42\u51fa\u51fa\u73b0\u6700\u5c0f\u5b57\u6bcd\n        {\n            minc=i;\n            break;\n        }\n    l=1;\n    r=n;\n    for (int i=1; i<=n; i++)\n    {\n        if (num[minc]==0)//\u82e5\u6700\u5c0f\u5b57\u6bcd\u5df2\u8f93\u51fa\u5b8c\uff0c\u518d\u627e\u6b21\u5c0f\n        {\n            for (int j=minc; j<='Z'; j++)\n                if (num[j]!=0)\n                {\n                    minc=j;\n                    break;\n                }\n        }\n        if (a[l]<a[r]||a[l]==minc)//\u4e4b\u524d\u6240\u8bf4\u7684\u5224\u65ad\n        {\n            num[a[l]]--;\n            putchar(a[l]);\n            l++;\n        }\n        else if (a[l]>a[r])\n        {\n            putchar(a[r]);\n            num[a[r]]--;\n            r--;\n        }\n        else if (a[l]==a[r])\n        {\n            int j;\n            for (j=1; j<=(n-i+1)/2; j++)\n            {\n                if (a[l+j]<a[r-j])\n                {\n                    putchar(a[l]);\n                    num[a[l]]--;\n                    l++;\n                    break;\n                }\n                else if (a[l+j]>a[r-j])\n                {\n                    putchar(a[r]);\n                    num[a[r]]--;\n                    r--;\n                    break;\n                }\n            }\n            if (j>(n-i+1)/2)\n            {\n                    putchar(a[l]);\n                    num[a[l]]--;\n                    l++;\n            }\n        }\n        if (i%80==0) cout<<endl;\n    }\n    return;\n}\n\u4ee3\u7801\u505a\u4e86\u4e9b\u624b\u811a\uff0c\u6284\u9898\u89e3\u7684\u6ce8\u610f\u4e86\uff01\uff01\uff01\n```",
        "postTime": 1486349407,
        "uid": 11773,
        "name": "NaVi_Awson",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2870 \u3010[USACO07DEC]\u6700\u4f73\u725b\u7ebf\uff0c\u9ec4\u91d1Best Cow Line, Gold\u3011"
    }
]