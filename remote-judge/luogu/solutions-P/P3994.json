[
    {
        "content": "### \u9898\u9762\u63cf\u8ff0\n\n\u7ed9\u5b9a\u4e00\u9897\u6811\uff0c\u5728\u6811\u4e0a\u505adp\u3002\n\n### \u89e3\u6790\n\n\u8fd9\u9053\u9898\u8f6c\u79fb\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\uff0c\u6734\u7d20\u7684\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$$f(i)=min(f(j)+(deep(i)-deep(j))*Pi+Qi)(j\u2208Prei)$$\n\n\u4f46\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(n^2)$\u7684\uff0c\u8fc7\u4e0d\u63891000000\u7684\u6570\u636e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u659c\u7387\u4f18\u5316\uff1a\u8bbe\u51b3\u7b56$j$\u6bd4\u51b3\u7b56$k$\u4f18\u79c0\uff08$j<k$\uff09\u3002\n\n\u90a3\u4e48\u5c31\u6709\uff1a\n\n$$f(j)+(deep(i)-deep(j))*Pi+Qi<f(k)+(deep(i)-deep(k))*Pi+Qi$$\n\n\u5373\uff1a\n\n$$f(j)-deep(j)*Pi<f(k)-deep(k)*Pi$$\n\n$$Pi<\\frac{f(k)-f(j)}{deep(k)-deep(j)}$$\n\n\u8003\u8651\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/36216.png)\n\n$j2$\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u8f6c\u79fb\uff0c\u6240\u4ee5\u6700\u4f18\u8f6c\u79fb\u4e3a\u4e0b\u51f8\u5305\u3002\n\n\u53c8\u56e0\u4e3a$Pi$\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4f46\u662f\uff0c\u6b64\u9898\u662f\u5728\u6811\u7684\u94fe\u4e0a\u8f6c\u79fb\uff0c\u6240\u4ee5$dfs$\u65f6\u4e00\u9897\u5b50\u6811\u7684\u51b3\u7b56\u4f1a\u5f71\u54cd\u53e6\u4e00\u9897\u5b50\u6811\u7684\u51f8\u5305\uff0c\u800c\u8fd9\u4e0d\u7b26\u5408\u9898\u610f\u3002\n\n\n\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u5355\u8c03\u961f\u5217\u7684\u6027\u8d28\uff1a\u53d1\u73b0\u6bcf\u6b21\u4fee\u6539\u53ea\u662f$++h$,\u800c\u961f\u5217\u5143\u7d20\u672c\u8eab\u6ca1\u6709\u53d8\u5316\uff0c\u81f3\u4e8e\u961f\u5c3e\uff0c\u6bcf\u6b21\u662f$--t$,\u5e76\u4e14\u53ea\u4fee\u6539\u4e00\u4e2a\u5143\u7d20\u3002\n\n\u6211\u4eec\u4fbf\u6709\u4e86\u4e00\u4e2a\u81ea\u7136\u7684\u601d\u8def\uff1a\u8bb0\u4e0b\u6bcf\u4e00\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684$h$\uff0c$t$\u548c\u5bf9\u5e94\u7684\u88ab\u4fee\u6539\u7684\u5143\u7d20\uff0c\u6bcf\u4e00\u6b21\u56de\u6eaf\u65f6\u8fd8\u539f\u3002\n\n\u4f46\u8fd9\u6837\u4e00\u4e2a\u8282\u70b9\u4f1a\u5165\u961f\u51fa\u961f\u591a\u6b21\uff0c\u590d\u6742\u5ea6\u4e0a\u754c\u4ecd\u4e3a$O(n^2)$\u3002\n\n\u6211\u4eec\u8003\u8651\u4e8c\u5206\u67e5\u627e\u6bcf\u4e00\u6b21\u66f4\u65b0\u7684$h$\uff0c$t$\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u6709\u4e24\u6b21\u4e8c\u5206\u67e5\u627e\uff0c\n\u56de\u6eaf\u8fd8\u539f\u3001\u72b6\u6001\u8f6c\u79fb\u590d\u6742\u5ea6\u7686\u4e3a$Q(1)$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a$O(nlogn)$\u3002\n\n### \u4ee3\u7801\u5982\u4e0b\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#define re register\n#define N 1000005\n#define LL long long\nusing namespace std;\nint n,h,t,Etot=0,head[N],p[N],q[N];\nLL deep[N],f[N];\nstruct Edge{ int to,next,dis; }edge[N];\ninline void add(int u,int v,int dis){ edge[++Etot]=(Edge){v,head[u],dis};head[u]=Etot; }\ninline double slope(int j,int k){ return 1.0*(f[k]-f[j])/(deep[k]-deep[j]); }\nvoid dfs(int u,int depth){\n    deep[u]=depth;\n    for(re int i=head[u];i;i=edge[i].next) dfs(edge[i].to,depth+edge[i].dis);\n}\nvoid dp(int u){\n    int now_h=h,now_t=t,l,r,mid,tmp;\n    l=h;r=t-1;tmp=-1;\n    while(l<=r){\n        mid=(l+r)>>1;\n        if(1.0*p[u]<=slope(q[mid],q[mid+1])) tmp=mid,r=mid-1;\n        else l=mid+1;\n    }\n    if(tmp!=-1) h=tmp;else h=t;\n    f[u]=f[q[h]]+(deep[u]-deep[q[h]])*p[u]+q[u];\n    l=h;r=t-1;tmp=-1;\n    while(l<=r){\n        mid=(l+r)>>1;\n        if(slope(q[mid],q[mid+1])<slope(q[mid+1],u)) tmp=mid,l=mid+1;\n        else r=mid-1;\n    }\n    if(tmp!=-1) t=tmp+1;else t=h;\n    int now_q=q[++t];q[t]=u;\n    for(re int i=head[u];i;i=edge[i].next) dp(edge[i].to);\n    h=now_h;q[t]=now_q;t=now_t;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(re int i=2,u,w;i<=n;++i){\n        scanf(\"%d%d%d%d\",&u,&w,&p[i],&q[i]);\n        add(u,i,w);\n    }\n    dfs(1,0);\n    for(re int i=head[1];i;i=edge[i].next) h=t=1,q[h]=1,dp(edge[i].to);\n    for(re int i=2;i<=n;++i) printf(\"%lld\\n\",f[i]);\n    return 0;\n}\n```\n\n### \u540e\u8bb0\n\n\u8fd9\u9053\u9898\u601d\u8def\u975e\u5e38\u5de7\u5999\uff0c\u5728$dfs$\u65f6\u6ca1\u6709\u6309\u5957\u8def\u66f4\u6539$h$\uff0c$t$\uff0c\u800c\u662f\u7528\u4e8c\u5206\u67e5\u627e\u964d\u4f4e\u4e86\u590d\u6742\u5ea6\uff08\u56e0\u4e3a\u6bcf\u4e00\u6b21\u53ea\u4fee\u6539\u4e86\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8981\u4ed4\u7ec6\u4f53\u4f1a\u3002",
        "postTime": 1538744278,
        "uid": 86324,
        "name": "pkh68",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3994 \u3010\u9ad8\u901f\u516c\u8def\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u9898\u89e3\u90fd\u662f\u8bf7\u4e00\u8272\u7684\u4e8c\u5206\u8fd8\u539f\u554a...\n\n~~\u603b\u611f\u89c9\u6709\u9898\u89e3\u5f7c\u6b64\u6f6e\u6c50\u7684\u5acc\u7591~~\n\n~~\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9700\u8981\u4ec0\u4e48\u4e8c\u5206~~\n\n\u628a\u6734\u7d20\u7684$dp$\u8f6c\u79fb\u5199\u51fa\u6765\n\n\u53d1\u73b0\u662f\u8fd9\u6837\u7684\uff1a\n\n$dp_x=\\min(dp_{u}+(dis_x-dis_u)*p_x+c_x)$\n\n\u8bbe$u,v$\u5747\u53ef\u4ee5\u8f6c\u79fb\u7ed9$k$\uff0c\u4e14$u<v$\n\n$$dp_u+(dis_k-dis_u)*p_k+c_k>dp_v+(dis_k-dis_v)*p_k+c_k$$\n\n$$dp_u-dis_u*p_k>dp_v-dis_v*p_k$$\n\n$$(dis_v-dis_u)*p_k>dp_v-dp_u$$\n\n$$p_k>\\dfrac{dp_v-dp_u}{dis_v-dis_u}$$\n\n\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u51f8\u58f3\n\n\u56e0\u4e3a\u6709$p_{fa}\\le p_u$\n\n\u6240\u4ee5\u6cbf\u9014\u8d70\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5$O(n)$\u7684$dp$\u4e0b\u6765\n\n\u4f46\u662f\u8de8\u8d8a\u5b50\u6811\u5c31\u505a\u4e0d\u5230\u4e86...\n\n\u4ed4\u7ec6\u601d\u8003\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u5bf9\u4e8e\u8fd9\u4e2a\u5355\u8c03\u961f\u5217\u53ea\u505a\u4e86\u5982\u4e0b\u4e09\u79cd\u64cd\u4f5c\uff1a\n\n$++head$\n\n$--tail$\n\n$q[tail]=x$\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u662f\u4fee\u6539\u4e86$head,tail$\u548c$q[tail]$\u800c\u5df2$...$\n\n\u6240\u4ee5\u5c31\u5206\u522b\u8bb0\u5f55\u4e00\u4e0b\u672c\u6b21\u4fee\u6539\u524d\u7684\u72b6\u6001\uff0c\u7136\u540e\u8fd8\u539f\u56de\u53bb\u5373\u53ef$...$\n\n\u5982\u679c\u6309\u7167\u51fa\u8fb9\u5bf9\u5e94\u70b9\u7684\u70b9\u6743\u6392\u5e8f\uff0c\u590d\u6742\u5ea6\u5e94\u8be5\u53ef\u4ee5\u505a\u5230$O(n\\log n)$\n\n\u4f46\u6211\u6bd4\u8f83\u61d2\uff0c\u6240\u4ee5\u6ca1\u6392\uff0c\u4f46\u8fd8\u662f\u8fc7\u4e86...\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next ) \n#define drep( i, t, s ) for( register int i = t; i >= s; -- i )\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define LL long long\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int N = 1e6 + 5;\nint n, num, L[N], q[N], fr, ed; \nint cnt, head[N], p[N], c[N] ;\nLL dp[N], dis[N] ; \nstruct E {\n    int to, next, w ;\n} e[N * 2];\nvoid add( int x, int y, int z ) {\n\te[++ cnt] = (E){ y, head[x], z }, head[x] = cnt ; \n}\ndouble K( int x, int y ) {\n\tdouble yy = dp[x] - dp[y], xx = dis[x] - dis[y] ;\n\treturn yy / xx ; \n}\ninline void dfs( int x ) {\n\tint Hev = fr, Eev = ed ; \n\twhile( fr < ed && K( q[fr], q[fr + 1] ) < 1.0 * p[x] ) ++ fr ; \n\tdp[x] = dp[q[fr]] + 1ll * p[x] * ( dis[x] - dis[q[fr]] ) + c[x] ; \n\twhile( fr < ed && K( q[ed], q[ed - 1] ) > K( q[ed], x ) ) -- ed ; \n\tint ru = ++ ed, rm = q[ed] ; q[ed] = x ; \n\tNext( i, x ) {\n\t\tdis[e[i].to] = dis[x] + e[i].w, dfs(e[i].to) ;\n\t}\n\tq[ru] = rm, fr = Hev, ed = Eev ; \n}\nsigned main()\n{\n    n = read() ; fr = 1 ; int x, y ; \n\trep( i, 2, n ) {\n\t\tx = read(), y = read(), add( x, i, y ), p[i] = read(), c[i] = read() ; \n\t}\n\tdfs( 1 ) ;\n    rep( i, 2, n ) printf(\"%lld\\n\", dp[i] ); \n    return 0;\n}\n```",
        "postTime": 1568959378,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3994 \u3010\u9ad8\u901f\u516c\u8def\u3011"
    },
    {
        "content": "\u8bbedp[i] \u8868\u793a\u7b2ci\u4e2a\u57ce\u5e02\u5230\u6839\u8282\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\n\ndp[i]=min{ (dis[i]-dis[j])*P[i]+Q[i]+dp[j] } \n\n\u8fd9\u662fO\uff08n^2\uff09\u7684\n\n\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u659c\u7387\u4f18\u5316\n\ndp[i]+dis[j]*P[i]=dis[i]*P[i]+Q[i]+dp[j]\n\n\u5c31\u662f\u4e00\u6761\u659c\u7387\u4e3aP[i]\u7684\u76f4\u7ebf\uff0c\u622a\uff08dis[j],dp[j]\uff09\u7684\u6700\u5c0f\u622a\u8ddd\n\n\u5728\u6839\u5f80\u4e0b\u8d70\u7684\u8fc7\u7a0b\u4e2d\uff0c\u659c\u7387\u5355\u8c03\u9012\u589e\n\n\u8fd9\u5c31\u4f53\u73b0\u4e86 \u4e3a\u4ec0\u4e48\u9898\u76ee\u4e2d\u8bf4\u201ci\u53f7\u57ce\u5e02\u662fj\u53f7\u57ce\u5e02\u7684\u67d0\u4e2a\u7956\u5148\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728Pi<=Pj\u201d\n\n\u6211\u4eec\u6309dfs\u5e8fdp\n\n\u73b0\u5728\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5f97\u5230 \u4e00\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u5355\u8c03\u961f\u5217\n\n\u53ea\u9700\u8981\u8003\u8651\u5982\u4f55\u53bb\u9664\u5144\u5f1f\u8282\u70b9\u7684\u5b50\u6811\u5bf9\u5355\u8c03\u961f\u5217\u7684\u5f71\u54cd\n\n\u5373\u5728\u4e00\u4e2a\u8282\u70b9\u9000\u51fadfs\u65f6\uff0c\u5c06\u5355\u8c03\u961f\u5217\u6062\u590d\u4e3a\u8fd9\u4e2a\u8282\u70b9\u5f00\u59cbdfs\u7684\u60c5\u51b5\n\n\u5934\u6307\u9488\u53ea\u662f\u4e0d\u65ad\u7684+1\uff0c\u6ca1\u6709\u6d89\u53ca\u5230\u5355\u8c03\u961f\u5217\u4e2d\u5143\u7d20\u7684\u4fee\u6539\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e0b\u5934\u6307\u9488\u5728\u54ea\u4e2a\u4f4d\u7f6e\u5373\u53ef\n\n\u5c3e\u6307\u9488\u6d89\u53ca\u5230\u5143\u7d20\u7684\u66ff\u6362\uff0c\u4f46\u662f\u5b83\u53ea\u4f1a\u66ff\u6362\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e0b\u5c3e\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u88ab\u5f53\u524d\u70b9\u66ff\u6362\u7684\u5143\u7d20\u662f\u8c01\n\n\u5f53\u8282\u70b9\u9000\u51fadfs\u65f6\uff0c\u6062\u590d\u8bb0\u5f55\u7684\u8fd9\u4e09\u4e2a\u503c\u5373\u53ef\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u4e00\u4e2a\u8282\u70b9\u591a\u6b21\u51fa\u961f\u5165\u961f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e0d\u662fO\uff08n\uff09\u4e86\n\n\u6240\u4ee5\u4e8c\u5206\u51fa\u961f\u4f4d\u7f6e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08nlogn\uff09\n\n\u4ee3\u7801\u94fe\u63a5\uff1a\n[http://www.cnblogs.com/TheRoadToTheGold/p/8468557.html](http://www.cnblogs.com/TheRoadToTheGold/p/8468557.html)\nn^2 \u66b4\u529bdp\u4ee3\u7801\u3001\u659c\u7387\u4f18\u5316+\u66b4\u529b\u51fa\u961f\u4ee3\u7801\u3001\u659c\u7387\u4f18\u5316+\u4e8c\u5206\u51fa\u961f\u4ee3\u7801",
        "postTime": 1519518816,
        "uid": 21351,
        "name": "xuxinyu",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3994 \u3010\u9ad8\u901f\u516c\u8def\u3011"
    },
    {
        "content": "[My Blog](https://www.cnblogs.com/luoshuitianyi/p/10896213.html)\n# Algorithm\n\n$DP$\uff0c\u659c\u7387\u4f18\u5316\n\n# Mentality\n\n\u770b\u770b\u8fd9\u4e2a\u9898\u76ee\uff0c\u5176\u5b9e\u4e00\u4e0b\u5b50\u5c31\u80fd\u60f3\u5230\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e00\u6761\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7ebf\u6027 $DP$ \u3002\n\n\u90a3\u4e48\u65b9\u7a0b\u4e5f\u5f02\u5e38\u7b80\u5355\uff1a\u8bbe $f[i]$ \u4e3a\u4ece $i$ \u70b9\u5230\u8fbe\u6839\u8282\u70b9\u6240\u9700\u6700\u5c0f\u8d39\u7528\uff0c$pre_i$ \u4e3a $i$ \u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684\u96c6\u5408\uff0c$lj[i]$ \u4e3a $i$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u81ea\u7136\u6709\uff1a\n$$\nf[i]=Min_{j\\in pre_i}(f[j]+(lj[i]-lj[j])*P[i]+Q[i])\n$$\n\u5f53\u7136\uff0c\u8fd9\u4e2a $DP$ \u65b9\u7a0b\u7684\u590d\u6742\u5ea6\u662f\u4e0d\u8fc7\u5173\u7684\u3002\u6309\u7167\u4e00\u8d2f\u7684\u5957\u8def\uff0c\u8fd9\u79cd\u5f88\u5bb9\u6613\u60f3\u5f0f\u5b50\u7684 $DP$ \u9898\u603b\u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\u6027\u3002\u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e0b\u5217\u51fa\u5b83\u7684\u51b3\u7b56\u4e4b\u95f4\u6709\u4ec0\u4e48\u5173\u7cfb\u3002\n\n\u8bbe $i$ \u7684\u4e24\u4e2a\u51b3\u7b56\u70b9\u4e3a $j,k$ \uff0c\u5176\u4e2d $j\\in pre_k$ \uff0c$j,k\\in pre_i$ \u3002\n\n\u5982\u679c\u4ece\u70b9 $k$ \u8f6c\u79fb\u6bd4\u4ece\u70b9 $j$ \u8f6c\u79fb\u66f4\u4f18\uff0c\u90a3\u4e48\u81ea\u7136\u6709\uff1a\n\n$$\nf[k]+(lj[i]-lj[k]) \u00d7 P[i]+Q[i]<f[j]+(lj[i]-lj[j]) \u00d7 P[i]+Q[i]\n$$\n\n$$\nf[k]-lj[k] \u00d7 P[i]<f[j]-lj[j] \u00d7 P[i]\n$$\n\n$$\nf[k]-f[j]<(lj[k]-lj[j])\u00d7P[i]\n$$\n\n$$\n\\frac{f[k]-f[j]}{lj[k]-lj[j]}<P[i]\n$$\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u9898\u76ee\u6709 $P_i>P_{pre_i}$ \u7684\u6761\u4ef6\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u5728\u4e00\u6761\u94fe\u4e0a $DP$ \u65f6\uff0c\u4e00\u65e6\u4ece\u67d0\u4e00\u70b9\u5f00\u59cb\u6ee1\u8db3\u4e0a\u5f0f\uff0c\u5219\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u70b9\u4e00\u76f4\u90fd\u4f1a\u6ee1\u8db3\u4e0a\u5f0f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u70b9\u800c\u8a00\uff0c**\u4ece $k$ \u8f6c\u79fb\u603b\u4f1a\u6bd4\u4ece $j$ \u8f6c\u79fb\u66f4\u4f18** \u3002\n\n\u6362\u800c\u8a00\u4e4b\uff0c\u6b64\u9898\u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\u6027\u4e2d\u7684\u659c\u7387\u4f18\u5316\u7684\u6761\u4ef6\u3002\n\n\u90a3\u4e48\u7531\u4e8e $P[i]$ \u9012\u589e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u659c\u7387\u5355\u8c03\u9012\u589e\u7684\u51b3\u7b56\u70b9\u961f\u5217\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u662f\u4e00\u68f5\u6811\uff0c\u600e\u4e48\u529e\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u6bcf\u4e2a\u70b9\u5728\u66f4\u6539\u51b3\u7b56\u70b9\u7684\u5355\u8c03\u961f\u5217\u65f6\u53ea\u6709\u4e09\u4e2a\u64cd\u4f5c\uff1a\n\n- \u4e0d\u65ad $++head$ \uff0c\u76f4\u5230\u961f\u9996\u659c\u7387\u4e0d\u6ee1\u8db3\u4e0a\u5f0f\n- \u4e0d\u65ad $--tail$ \uff0c\u76f4\u5230\u5bf9\u5c3e\u659c\u7387\u7b26\u5408\u5355\u8c03\u6027\n- $++tail$ \uff0c\u5728\u961f\u5217\u5c3e\u90e8\u63d2\u5165\u5f53\u524d\u51b3\u7b56\u70b9\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u5230\u4e00\u4e2a\u65b0\u7684\u70b9\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u662f\u4fee\u6539\u4e86\u4e00\u4e0b $head$ \u548c $tail$ \u7684\u503c\uff0c\u5e76\u4fee\u6539\u4e86\u961f\u5217\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u3002\u5219\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u4f4f\u4fee\u6539\u4e4b\u524d\u7684\u90a3\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u4fee\u6539\u4e4b\u524d\u7684\u961f\u9996\u5bf9\u5c3e\u7684\u4f4d\u7f6e\u5373\u53ef\uff0c\u5f53\u6211\u4eec\u9000\u51fa\u5f53\u524d\u70b9\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u7167\u7740\u4e4b\u524d\u8bb0\u5f55\u7684\u503c\u6539\u56de\u53bb\u5c31\u597d\u4e86\uff01\n\n\u4f46\u662f\u5bf9\u4e8e\u8fd9\u9898\u8fd8\u4e0d\u591f\u3002\n\n\u4e00\u822c\u800c\u8a00\uff0c\u6211\u4eec\u7684\u659c\u7387\u4f18\u5316\u603b\u4f1a\u662f $O(n)$ \u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u6700\u591a\u53ea\u4f1a\u88ab\u5165\u961f\u51fa\u961f\u4e00\u6b21\uff0c\u6240\u4ee5\u603b\u4f53\u590d\u6742\u5ea6\u53ea\u4f1a\u53d6\u51b3\u4e8e\u51b3\u7b56\u70b9\u4e2a\u6570\u800c\u4e0d\u662f\u679a\u4e3e\u51b3\u7b56\u70b9\u3002\n\n\u4f46\u662f\u5728\u8fd9\u9898\u91cc\uff0c**\u4e00\u4e2a\u51b3\u7b56\u70b9\u53ef\u80fd\u5728\u8fd9\u4e2a\u70b9\u91cc\u5165\u961f\uff0c\u5728\u4e0b\u4e00\u4e2a\u70b9\u91cc\u51fa\u961f\uff0c\u800c\u56de\u6eaf\u56de\u6765\u7684\u65f6\u5019\u53c8\u518d\u6b21\u5165\u961f\uff0c\u56e0\u800c\u4e0d\u7b26\u5408\u6bcf\u4e2a\u70b9\u6700\u591a\u53ea\u4f1a\u5165\u961f\u51fa\u961f\u4e00\u6b21\u7684\u89c4\u5219\uff01**\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u662f\u9519\u8bef\u7684\u3002\n\n\u90a3\u63a5\u4e0b\u6765\u53c8\u600e\u4e48\u505a\u5462\uff1f\n\n\u7531\u4e8e\u6211\u4eec\u7684\u51b3\u7b56\u70b9\u961f\u5217\u91cc\uff0c\u76f8\u90bb\u4e24\u70b9\u4e4b\u95f4\u7684\u659c\u7387\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u6765\u627e\u5230\u5e94\u8be5 $++head,--tail$ \u6240\u8fbe\u5230\u7684\u4f4d\u7f6e\uff01\n\n\u53ea\u9700\u8981\u627e\u5230\u6700\u5de6\u8fb9\u7684\uff0c\u4e0d\u6ee1\u8db3\u659c\u7387\u4e0d\u7b49\u5f0f\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u6700\u53f3\u8fb9\u7684\uff0c\u4e0d\u6ee1\u8db3\u659c\u7387\u5355\u8c03\u9012\u589e\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u4e8c\u5206\u53ef\u80fd\u6709\u70b9\u5c0f\u7ec6\u8282\uff0c\u53ef\u4ee5\u770b\u770b\u6211\u7684\u4ee3\u7801\u3002\uff08\u826f\u5fc3\u6ce8\u91ca\uff09\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n;\nint cntr,head[1000001],to[1000001],nx[1000001],w[1000001];\nint Q[1000001];\nint que[1000001],h,t;\nlong long P[1000001],lj[1000001],f[1000001];\nvoid addr(int u,int v,int W)\n{\n\tcntr++;\n\tto[cntr]=v,nx[cntr]=head[u],w[cntr]=W;\n\thead[u]=cntr;\n}\ndouble slope(int a,int b){return (double)(f[b]-f[a])/(lj[b]-lj[a]);}//\u659c\u7387\u4e0d\u7b49\u5f0f\nvoid DP(int x)\n{\n\tint p,tph=h,tpt=t,tpw,l=h+1,r=t,ans=h;//l \u7684\u521d\u503c\u4e3a h+1\uff0c\u56e0\u4e3a\u6211\u4eec\u7528\u6765\u6bd4\u8f83\u7684\u662f mid-1 \u4e0e mid \u4e24\u4e2a\u4f4d\u7f6e\u7684\u659c\u7387\u3002\u4e4b\u6240\u4ee5\u4e0d\u7528 l=h,r=t-1 \u4f5c\u4e3a\u521d\u503c\u5e76\u6bd4\u8f83 mid \u4e0e mid+1 \uff0c\u662f\u56e0\u4e3a\u6839\u636e\u6211\u4eec\u505a\u659c\u7387\u9898\u7684\u65f6\u5019 h \u603b\u4f1a\u5728\u6700\u53f3\u8fb9\u7684\u7b26\u5408\u4e0d\u7b49\u5f0f\u7684\u4f4d\u7f6e\u7684\u53f3\u4e00\u4e2a\u3002\u8fd9\u6837\u4e8c\u5206\u51fa\u4f86\u7684\u4f4d\u7f6e\u521a\u521a\u597d;ans \u7684\u521d\u503c\u4e3a h\uff0c\u56e0\u4e3a\u5982\u679c\u627e\u4e0d\u5230\u76f8\u5e94\u7684\u4f4d\u7f6e\uff0c\u90a3\u5c31\u4e0d\u9700\u8981\u4fee\u6539 h\u3002\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(slope(que[mid-1],que[mid])<=P[x])l=mid+1,ans=mid;\n\t\telse r=mid-1;\n\t}\n\th=ans,p=que[h];\n\tf[x]=f[p]+(lj[x]-lj[p])*P[x]+Q[x];\n\tl=h,r=t-1,ans=t;//\u8fd9\u91cc\u7684\u7406\u7531\u4e0e\u961f\u9996\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u4e3a\u4e86\u7ed3\u679c\u6b63\u786e\u6027\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(slope(que[mid],que[mid+1])>=slope(que[mid+1],x))r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\tt=ans;\n\ttpw=que[++t],que[t]=x;//\u8bb0\u5f55\u5373\u5c06\u88ab\u66f4\u6539\u7684\u4f4d\u7f6e\u7684\u5143\u7d20\u5e76\u66f4\u65b0\n\tfor(int i=head[x];i;i=nx[i])\n\t{\n\t\tlj[to[i]]=lj[x]+w[i];//\u66f4\u65b0\u8def\u5f84\u957f\u5ea6\n\t\tDP(to[i]);\n\t}\n\tque[t]=tpw;\n\th=tph,t=tpt;//\u4fee\u6539\u56de\u8fdb\u5165\u8fd9\u4e2a\u70b9\u4e4b\u524d\u7684\u72b6\u6001\n}\nint main()\n{\n\tcin>>n;\n\tint F,W;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d%lld%d\",&F,&W,&P[i],&Q[i]);\n\t\taddr(F,i,W);\n\t}\n\tt=-1;//\u6700\u5f00\u59cb\u961f\u5217\u662f\u7a7a\u7684\uff0c\u6240\u4ee5 tail=head-1\n\tDP(1);\n\tfor(int i=2;i<=n;i++)\n\t\tprintf(\"%lld\\n\",f[i]);\n}\n\n```\n\n",
        "postTime": 1558354372,
        "uid": 39954,
        "name": "\u6d1b\u6c34\u00b7\u9526\u4f9d\u536b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3994 \u3010\u9ad8\u901f\u516c\u8def\u3011"
    },
    {
        "content": "**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9[\u8fd9\u91cc](https://wa-automaton.github.io/2019/04/28/luogu-P3994-%E9%AB%98%E9%80%9F%E5%85%AC%E8%B7%AF/)~**\n\n~~\u8fd9\u662f\u4e00\u4efd\u5c06\u51b3\u7b56\u7406\u89e3\u6210\u76f4\u7ebf\u7684\u9898\u89e3~~  \n~~\u4e3a\u5565\u6ce5\u840c\u90fd\u8ba4\u4e3a\u51b3\u7b56\u662f\u70b9\u554a~~  \n\n\u4ee5\u4e0b\u8fdb\u5165\u6b63\u9898\uff1a  \n\u8fd9\u9053\u9898\u7684dp\u65b9\u7a0b\u6bd4\u8f83\u663e\u7136\uff1a\n$$f[u]=min_{lca(u,v)=v}\\{f[v]+P[u]*(depth[u]-depth[v])+Q[u]\\}$$\n\u76f4\u63a5dp\u662f$O(n^2)$\u7684\u3002\u6709\u5173\u4e8euv\u7684\u4e58\u79ef\u9879\uff0cdepth\u5355\u8c03\uff0c\u8003\u8651\u659c\u7387\u4f18\u5316\u3002  \n\u6574\u7406\u5f97\uff1a\n$$f[u]=min_{lca(u,v)=v}(-depth[v]*P[u]+f[v])+Q[u]+depth[u]*P[u])$$\n\u5219\u4ee5$-depth[v]$\u4e3a\u659c\u7387\uff0c$P[u]$\u4e3a\u6a2a\u5750\u6807\uff0c$f[v]$\u4e3a\u622a\u8ddd\uff0c\u5316\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684\u659c\u7387\u4f18\u5316\u67ff\u5b50\u3002\n\n\u6211\u4eec\u53d1\u73b0x\u5750\u6807\u662f\u4e0d\u5355\u8c03\u7684\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u6574\u4e2a\u51f8\u5305\uff08\u5355\u8c03\u6808\uff09\uff0c\u7136\u540e\u4e8c\u5206\u627e\u6700\u4f18\u7684\u51b3\u7b56\u70b9\u3002\u8fd9\u4e5f\u662f\u8001\u5957\u8def\u4e86\u3002\n\n\u4f46\u662f\u91cd\u70b9\u5e76\u4e0d\u5728\u4e8e\u6b64\uff1a\u8fd9\u662f\u6811\u4e0a\u7684dp\uff0c\u6211\u4eec\u4e0d\u80fd\u50cf\u7ef4\u62a4\u5e8f\u5217\u4e00\u6837\u76f4\u63a5\u4ee4\u51b3\u7b56\u70b9\u5165\u961f\u51fa\u961f\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u6bcf\u4e2a\u70b9\u4e0d\u4e00\u5b9a\u53ea\u88ab\u5165\u961f\u4e00\u6b21\uff0c\u6700\u574f\u60c5\u51b5\u4ecd\u7136\u662f$O(n^2)$\u3002\u90a3\u6211\u4eec\u600e\u4e48\u529e\u5462\uff1f\n\n~~\u7528\u4e3b\u5e2d\u6811\u5b9e\u73b0\u53ef\u6301\u4e45\u5316\u6808~~\n\n~~\u70b9\u5206\u6cbb\u4f18\u5316dp~~\n\n\u4e0a\u9762\u7684\u505a\u6cd5\u4e0d\u592a\u597d\u5199\u800c\u4e14\u5e38\u6570\u5de8\u5927...\u6211\u4eec\u6709\u66f4\u4e3a\u4f18\u96c5\u7684\u65b9\u6cd5\uff1a\n\n\u8003\u8651\u5230\u659c\u7387\u5355\u8c03\uff0c\u90a3\u4e48\u65b0\u6765\u7684\u76f4\u7ebf\u6392\u9664\u6389\u7684\u65e7\u51b3\u7b56\u4e00\u5b9a\u662f\u6808\u9876\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\u3002\u7531\u4e8e\u51b3\u7b56\u7684\u5355\u8c03\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u627e\u5230\u5e94\u8be5\u63d2\u5165\u65b0\u51b3\u7b56\u7684\u4f4d\u7f6e(\u8fd9\u91cc\u627e\u51b3\u7b56\u70b9\u7684\u65b9\u6cd5\u5176\u5b9e\u548c\u5355\u8c03\u961f\u5217\u76f8\u540c\uff0c\u53ea\u662f\u628a\u66b4\u529b\u51fa\u961f\u6539\u6210\u4e8c\u5206\u627e\u5408\u6cd5\u4f4d\u7f6e\u7f62\u4e86\uff09\uff0c\u5e76\u8ba9\u51b3\u7b56\u5165\u6808\u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u7684\u8bdd\u5176\u5b9e\u53ea\u662f\u6539\u53d8\u4e86\u6808\u9876\u7684\u4f4d\u7f6e\u5e76\u4fee\u6539\u4e86\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u56de\u6eaf\u7684\u65f6\u5019\u628a\u6808\u9876\u548c\u4fee\u6539\u7684\u5143\u7d20\u6539\u56de\u53bb\uff0c\u5c31\u5b9e\u73b0\u4e86$O(n\\lg n)$\u7684\u4f18\u79c0\u505a\u6cd5...  \n~~\u4e0d\u8fc7\u56e0\u4e3a\u6570\u636e\u592a\u6c34\u88ab\u66b4\u529b\u8e29\u7206\u4e86~~\n\n\u4e0b\u9762\u662f\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801~\uff08\u6c42\u8bc4\u4ef7\u7801\u98ceqwq\uff09\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <algorithm>\n\nconst int maxn=1e6+100;\n\nstruct Edge\n{\n    int to,next,w;\n}edge[maxn<<1];\n\nint head[maxn],cnt;\nint stack[maxn],P[maxn],Q[maxn],fa[maxn];\nint64_t f[maxn],depth[maxn];\n\ninline void add(int u,int v,int w)\n{\n    edge[++cnt].next=head[u];\n    edge[cnt].to=v;\n    edge[cnt].w=w;\n    head[u]=cnt;\n}\n\ntemplate<class T>inline T max(T a,T b){return a<b?b:a;}\ntemplate<class T>inline T min(T a,T b){return a<b?a:b;}\n\ninline int64_t K(int x){return -depth[x];}\ninline int64_t B(int x){return f[x];}\ninline int64_t C(int x){return Q[x]+(int64_t)depth[x]*P[x];}\ninline double intersection(int x,int y){return ((double)B(x)-B(y))/(K(y)-K(x));}\n\n//f[u]=min_{lca(u,v)=v}(-depth[v]*P[u]+f[v])+Q[u]+depth[u]*P[u])\n\ninline int findbest(int x,int top)\n{\n    int l=1,r=top;\n    while (l<=r)\n    {\n        int mid=(l+r)>>1;\n        if (intersection(stack[mid-1],stack[mid])<=P[x]) l=mid+1;\n        else r=mid-1;\n    }\n    return stack[r];//\u849f\u84bb\u8fd9\u91cc\u5199\u6210\u4e86return r WA\u5230\u6000\u7591\u4eba\u751f..\n}\n\ninline int findpos(int x,int top)\n{\n    int l=1,r=top;\n    while (l<=r)\n    {\n        int mid=(l+r)>>1;\n        if (intersection(stack[mid-1],x)>intersection(stack[mid],stack[mid-1])) l=mid+1;\n        else r=mid-1;\n    }\n    return r;\n}\n\ninline int64_t calc(int x,int top)\n{\n    int dec=findbest(x,top);\n    return K(dec)*P[x]+B(dec)+C(x);\n}\n\ninline void dfs(int u,int top,int ff)\n{\n    f[u]=calc(u,top);\n    top=findpos(u,top)+1;\n    int pre=stack[top];\n    stack[top]=u;\n    for (int i=head[u];i;i=edge[i].next)\n    {\n        int v=edge[i].to;\n        depth[v]=depth[u]+edge[i].w;\n        if (v==ff) continue;\n        dfs(v,top,u);\n    }\n    stack[top]=pre;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for (int i=2,w;i<=n;++i)\n        scanf(\"%d%d%d%d\",fa+i,&w,P+i,Q+i),add(fa[i],i,w);\n    for (int i=head[1];i;i=edge[i].next)\n    {\n        int v=edge[i].to;\n        depth[v]=edge[i].w;\n        dfs(v,0,1);\n    }\n    for (int i=2;i<=n;++i)\n        printf(\"%lld\\n\",f[i]);\n}\n```",
        "postTime": 1556464247,
        "uid": 48711,
        "name": "_WA\u81ea\u52a8\u673a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3994 \u3010\u9ad8\u901f\u516c\u8def\u3011"
    }
]