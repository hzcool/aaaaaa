[
    {
        "content": "~~\u8fd9\u4e48\u88f8\u76842-SAT\u697c\u4e0a\u600e\u4e48\u5168\u662f\u62c6\u56db\u4e2a\u70b9\u8fd9\u4e48\u9ebb\u70e6=_=\uff0c~~\n~~\u5b9e\u5728\u5fcd\u4e0d\u4f4f\u4e86\u6765\u4e00\u6ce2\u53ea\u62c6\u4e24\u4e2a\u70b9\u7684\u9898\u89e3~~\n\n\u5bf9\u4e8e\u6bcf\u6837\u6750\u6599$i\\  $**\u62c6\u6210\u4e24\u4e2a\u70b9**\uff0c\n\u7ed3\u70b9$i$\u8868\u793a**\u6ee1\u5f0f**\u505a\u6cd5\uff0c\u7ed3\u70b9$i+n$\u8868\u793a**\u6c49\u5f0f**\n\n\u6bcf\u4e2a\u8bc4\u59d4\u7684\u9650\u5236\u6761\u4ef6\u90fd\u53ef\u4ee5\u770b\u505a**\u6216**\u7684\u5f62\u5f0f\n\n1.$m_i,m_j$\u2014\u2014\n\u8fde\u8fb9$i+n$\u5230$j$\uff0c\u8868\u793a\u82e5$i$\u4e3a\u6c49\u5f0f\uff0c\u5219$j$\u5fc5\u987b\u4e3a\u6ee1\u5f0f\uff1b\n\u8fde\u8fb9$j+n$\u5230$i$\uff0c\u8868\u793a\u82e5$j$\u4e3a\u6c49\u5f0f\uff0c\u5219$i$\u5fc5\u987b\u4e3a\u6ee1\u5f0f\n\n2.$m_i,h_j$\u2014\u2014\n\u8fde\u8fb9$i+n$\u5230$j+n$\uff0c\u8868\u793a\u82e5$i$\u4e3a\u6c49\u5f0f\uff0c\u5219$j$\u5fc5\u987b\u4e3a\u6c49\u5f0f\uff1b\n\u8fde\u8fb9$j$\u5230$i$\uff0c\u8868\u793a\u82e5$j$\u4e3a\u6ee1\u5f0f\uff0c\u5219$i$\u5fc5\u987b\u4e3a\u6ee1\u5f0f\n\n3.$h_i,h_j$\u2014\u2014\n\u8fde\u8fb9$i$\u5230$j+n$\uff0c\u8868\u793a\u82e5$i$\u4e3a\u6ee1\u5f0f\uff0c\u5219$j$\u5fc5\u987b\u4e3a\u6c49\u5f0f\uff1b\n\u8fde\u8fb9$j$\u5230$i+n$\uff0c\u8868\u793a\u82e5$j$\u4e3a\u6ee1\u5f0f\uff0c\u5219$i$\u5fc5\u987b\u4e3a\u6c49\u5f0f\n\n4.$h_i,m_j$\u2014\u2014\n\u8fde\u8fb9$i$\u5230$j$\uff0c\u8868\u793a\u82e5$i$\u4e3a\u6ee1\u5f0f\uff0c\u5219$j$\u5fc5\u987b\u4e3a\u6ee1\u5f0f\uff1b\n\u8fde\u8fb9$j+n$\u5230$i+n$\uff0c\u8868\u793a\u82e5$j$\u4e3a\u6c49\u5f0f\uff0c\u5219$i$\u5fc5\u987b\u4e3a\u6c49\u5f0f\n\n\u5efa\u56fe\u540etarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\n\u5224\u65ad$i$\u548c$i+n$**\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf**\u5373\u53ef\n\n```\n//niiick\n#include<iostream>\n#include<stack>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\ntypedef long long lt;\n \nint read()\n{\n    int f=1,x=0;\n    char ss=getchar();\n    while(ss<'0'||ss>'9'){if(ss=='-')f=-1;ss=getchar();}\n    while(ss>='0'&&ss<='9'){x=x*10+ss-'0';ss=getchar();}\n    return f*x;\n}\n \nconst int maxn=400;\nint t,n,m;\nstruct node{int v,nxt;}E[4010];\nint head[maxn],tot;\nint low[maxn],dfn[maxn],cnt,judge;\nint col[maxn],ins[maxn],colnum;\nstack<int> st;\nchar s1[5],s2[5];\n \nvoid add(int u,int v)\n{\n    E[++tot].nxt=head[u];\n    E[tot].v=v;\n    head[u]=tot;\n}\n \nvoid tarjan(int u)\n{\n    low[u]=dfn[u]=++cnt;\n    st.push(u); ins[u]=1;\n    for(int i=head[u];i;i=E[i].nxt)\n    {\n        int v=E[i].v;\n        if(!dfn[v]){ tarjan(v); low[u]=min(low[u],low[v]);}\n        else if(ins[v])\n        low[u]=min(low[u],dfn[v]);\n    }\n    if(low[u]==dfn[u])\n    {\n        int v; colnum++;\n        do{\n            v=st.top();\n            st.pop(); ins[v]=0;\n            col[v]=colnum;\n        }\n        while(v!=u);\n    }\n}\n \nvoid init()\n{\n    judge=tot=cnt=colnum=0;\n    memset(head,0,sizeof(head)); \n    memset(col,0,sizeof(col));\n    memset(low,0,sizeof(low));\n    memset(dfn,0,sizeof(dfn));\n    //memset(ins,0,sizeof(ins));\n}\n \nint main()\n{\n    t=read();\n    while(t--)\n    {\n        init();\n        n=read();m=read();\n        for(int i=1;i<=m;++i)//h-1,m-0\n        {\n            scanf(\"%s%s\",&s1,&s2);\n            int u=0,v=0,k;\n            k=1; while(s1[k]>='0'&&s1[k]<='9')u=u*10+s1[k++]-'0';\n            k=1; while(s2[k]>='0'&&s2[k]<='9')v=v*10+s2[k++]-'0';\n            if(s1[0]=='m')\n            {\n                if(s2[0]=='h')add(u+n,v+n),add(v,u);\n                else if(s2[0]=='m')add(u+n,v),add(v+n,u);\n            }\n            else if(s1[0]=='h')\n            {\n                if(s2[0]=='h')add(u,v+n),add(v,u+n);\n                else if(s2[0]=='m')add(u,v),add(v+n,u+n);\n            }\n        }\n     \n        for(int i=1;i<=n<<1;++i)\n        if(!dfn[i])tarjan(i);\n     \n        for(int i=1;i<=n;++i)\n        if(col[i]==col[i+n]){judge=1;break;}\n     \n        if(judge) printf(\"BAD\\n\");\n        else printf(\"GOOD\\n\");\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1533876211,
        "uid": 60885,
        "name": "niiick",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "\u849f\u84bbAC\u7684\u7b2c\u4e00\u90532-SAT\n\n\u5efa\u56fe\u65b9\u6cd5\uff1a\u5c06\u6bcf\u79cd\u6750\u6599\u7684\u6bcf\u79cd\u505a\u6cd5\u62c6\u6210\u9009\u4e0e\u4e0d\u9009\uff0c\u5728\u201c\u4e0d\u9009\u6c49\u5f0f\u505a\u6cd5\u201d\u548c\u201c\u9009\u6ee1\u5f0f\u505a\u6cd5\u201d\u95f4\u8fde\u8fb9\uff0c\u5728\u201c\u4e0d\u9009\u6ee1\u5f0f\u505a\u6cd5\u201d\u548c\u201c\u9009\u6c49\u5f0f\u505a\u6cd5\u201d\u95f4\u8fde\u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8bc4\u59d4\u7684\u8981\u6c42\uff0c\u4ece\u201c\u4e0d\u505a\u7b2c\u4e00\u9053\u83dc\u201d\u5411\u201c\u505a\u7b2c\u4e8c\u9053\u83dc\u201d\u8fde\u8fb9\uff0c\u4ece\u201c\u4e0d\u505a\u7b2c\u4e8c\u9053\u83dc\u201d\u5230\u201c\u505a\u7b2c\u4e00\u9053\u83dc\u201d\u8fde\u8fb9\u3002tarjan\u4e4b\u540e\uff0c\u770b\u662f\u5426\u6709\u540c\u4e00\u79cd\u6750\u6599\u7684\u201c\u9009\u6c49\u5f0f\u505a\u6cd5\u201d\u548c\u201c\u9009\u6ee1\u5f0f\u505a\u6cd5\u201d\u5728\u540c\u4e00\u4e2aSCC\u4e2d\uff0c\u662f\u5426\u6709\u540c\u4e00\u79cd\u6750\u6599\u7684\u540c\u4e00\u9053\u505a\u6cd5\u7684\u201c\u9009\u201d\u4e0e\u201c\u4e0d\u9009\u201d\u5728\u540c\u4e00SCC\u4e2d\u3002\n```\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#include<stack>\n\nusing namespace std;\n\nstruct Edge\n{\n\tint to,next;\n}edge[2500];\nint head[405],etot;\n\ninline void add_edge(int a,int b)\n{\n\tedge[++etot]=(Edge){b,head[a]};\n\thead[a]=etot;\n}\n\nint Read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t{\n\t\tx=(x<<3)+(x<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x;\n}\n\nvoid input(int &res)\n{\n\tres=0;\n\tchar c;\n\twhile(c=getchar(),c!='h'&&c!='m');\n\tres=Read();\n\tres=(res-1)*2;\n\tif(c=='m')\n\t{\n\t\tres|=1;\n\t}\n}\n\nint belong[405],low[405],dfn[405],inStack[405];\nint index,SCC;\nstack<int> S;\n\nvoid Tarjan(int x)\n{\n\tlow[x]=dfn[x]=++index;\n\tinStack[x]=1;\n\tS.push(x);\n\tfor(int i=head[x];i;i=edge[i].next)\n\t{\n\t\tint to=edge[i].to;\n\t\tif(!dfn[to])\n\t\t{\n\t\t\tTarjan(to);\n\t\t\tlow[x]=min(low[x],low[to]);\n\t\t}\n\t\telse if(inStack[to])\n\t\t{\n\t\t\tlow[x]=min(low[x],dfn[to]);\n\t\t}\n\t}\n\tif(low[x]==dfn[x])\n\t{\n\t\tSCC++;\n\t\t\n\t\tint top;\n\t\twhile(!S.empty()&&S.top()!=x)\n\t\t{\n\t\t\ttop=S.top();\n\t\t\tinStack[top]=0;\n\t\t\tbelong[top]=SCC;\n\t\t\tS.pop();\n\t\t}\n\t\tinStack[x]=0;\n\t\tbelong[x]=SCC;\n\t\tS.pop();\n\t}\n}\n\nint main()\n{\n\tint t=Read();\n\twhile(t--)\n\t{\n\t\tetot=0;\n\t\tint n=Read(),m=Read();\n\t\tn<<=1;\n\t\tindex=SCC=0;\n\t\tfor(int i=0;i<(n<<1);i++)\n\t\t{\n\t\t\thead[i]=inStack[i]=dfn[i]=0;\n            //\u521d\u59cb\u5316\n\t\t}\n        /*\n        * \u5bf9\u4e8e\u7b2ci\u79cd\u6750\u6599\n        * i<<1\uff1a\u9009\u6c49\u5f0f\u505a\u6cd5\n        * i<<1|1\uff1a\u9009\u6ee1\u5f0f\u505a\u6cd5\n        * (i<<1)+n\uff1a\u4e0d\u9009\u6c49\u5f0f\u505a\u6cd5\n        * (1<<1|1)+n\uff1a\u4e0d\u9009\u6ee1\u5f0f\u505a\u6cd5\n        */\n\t\tfor(int i=0;i<m;i++)\n\t\t{\n\t\t\tint a,b;\n\t\t\tinput(a);\n\t\t\tinput(b);\n\t\t\tadd_edge(a+n,b);//\u4e0d\u9009\u7b2c\u4e00\u9053\uff0c\u4e00\u5b9a\u9009\u7b2c\u4e8c\u9053\n\t\t\tadd_edge(b+n,a);//\u4e0d\u9009\u7b2c\u4e8c\u9053\uff0c\u4e00\u5b9a\u9009\u7b2c\u4e00\u9053\n\t\t}\n\t\tfor(int i=0;i<n;i++)//\u5bf9\u4e8e\u6bcf\u79cd\u6750\u6599\u7684\u6bcf\u79cd\u505a\u6cd5\n\t\t{\n\t\t\tadd_edge(i+n,i^1);//\u4e0d\u9009\u8fd9\u79cd\u505a\u6cd5\uff0c\u4e00\u5b9a\u9009\u53e6\u4e00\u79cd\n\t\t\tadd_edge(i^1,i+n);\n\t\t}\n\t\tfor(int i=0;i<(n<<1);i++)\n\t\t{\n\t\t\tif(!dfn[i])\n\t\t\t{\n\t\t\t\tTarjan(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tbool flag=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(belong[i]==belong[i+n]||belong[i]==belong[i^1])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\tputs(\"GOOD\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tputs(\"BAD\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u56fe\u7247\u4e0e\u9898\u89e3\u65e0\u5173\n![](https://cdn.luogu.com.cn/upload/pic/15339.png )",
        "postTime": 1520832442,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "#### upd\n\n2021.07.71\uff1a\u539f\u6765\u7684\u4ee3\u7801\u7ed9\u9519\u4e86\n\n2021.08.27\uff1a\u4fee\u6539\u4e86\u5206\u6790\u90e8\u5206\u7684\u7b14\u8bef\n\n## \u9898\u610f\n\n\u9898\u9762\u6bd4\u8f83\u957f\uff0c\u5148\u6982\u62ec\u4e00\u4e0b\u3002\u5982\u679c\u611f\u89c9\u9898\u76ee\u6ca1\u6709\u5b8c\u5168\u770b\u61c2\uff0c\u5efa\u8bae\u5148\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u8981\u70b9\u6982\u62ec\u3002\n\n\u9898\u76ee\u7ed9\u5b9a\u4e86 $n$ \u79cd**\u98df\u6750**\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u98df\u6750\uff0c\u6709\u4e24\u79cd**\u5236\u4f5c\u65b9\u6cd5**\u3002\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u98df\u6750\uff0c\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u5fc5\u987b**\u6070\u597d\u9009\u62e9\u4e00\u79cd**\u5236\u4f5c\u65b9\u6cd5\u3002\u4e00\u9053**\u83dc\u54c1**\u7684\u4fe1\u606f\uff0c\u540c\u65f6\u5305\u62ec\u98df\u6750\u548c\u5236\u4f5c\u65b9\u6cd5\u3002\n\n\u9898\u76ee\u7ed9\u5b9a\u4e86 $m$ \u6761\u9650\u5236\uff0c\u6bcf\u6761\u9650\u5236\u5305\u542b**\u4e24\u4e2a**\u83dc\u54c1\u7684\u4fe1\u606f\u3002\u5bf9\u4e8e\u6bcf\u6761\u9650\u5236\uff0c\u9650\u5236\u88ab\u6ee1\u8db3\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a\u5728\u7ed9\u51fa\u7684\u4e24\u4e2a\u83dc\u54c1\u4e2d\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u83dc\u54c1\u88ab\u5236\u4f5c\u51fa\u6765\u3002\n\n\u9898\u76ee\u95ee\uff1a\u662f\u5426\u5b58\u5728\u4e00\u79cd\u83dc\u54c1\u5236\u4f5c\u65b9\u6cd5\uff0c\u4f7f\u5f97\u6bcf\u6761\u9650\u5236\u90fd\u88ab\u6ee1\u8db3\u3002\n\n\u9898\u76ee\u6709\u591a\u7ec4\u8be2\u95ee\uff0c\u8be2\u95ee\u6b21\u6570 $T\\leq 50$\uff0c\u98df\u6750\u4e2a\u6570 $n\\leq 100$\uff0c\u9650\u5236\u6761\u6570 $m\\leq 1000$.\n\n## \u5206\u6790\n\n\u770b\u5230\u6bcf\u79cd\u98df\u6750\u5fc5\u987b\u5728\u4e24\u79cd\u5236\u4f5c\u65b9\u6cd5\u4e2d\uff0c\u6070\u597d\u9009\u62e9\u4e00\u79cd\uff0c\u60f3\u5230 **2-SAT** \u7b97\u6cd5\u3002\n\n\u5bf9\u4e8e\u6bcf\u79cd\u98df\u6750\uff0c\u5c06\u4e24\u79cd\u5236\u4f5c\u65b9\u5f0f\u62c6\u6210\u4e24\u4e2a\u70b9\u3002\u5177\u4f53\u5730\uff0c\u4ee3\u8868\u6ee1\u5f0f\u505a\u6cd5\u7684\u70b9\u7f16\u53f7\u4e3a $[1, n]$\uff0c\u4ee3\u8868\u6c49\u5f0f\u505a\u6cd5\u7684\u70b9\u7f16\u53f7\u4e3a $[n + 1, 2n]$.\n\n\u56e0\u4e3a\u8981\u7528\u5230 **2-SAT**\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230**\u5f62\u5982 $a \\land b = 0$ \u4e14 $a \\lor b = 1$** \u7684\u5173\u7cfb\u3002\n\n\u5bf9\u4e8e\u9650\u5236\u6761\u4ef6\u7ed9\u5b9a\u7684\u4e24\u4e2a\u83dc\u54c1 $u, v$\uff0c\u901a\u8fc7\u5206\u7c7b\u8ba8\u8bba\uff0c\u53ef\u4ee5\u627e\u5230\u5176\u4e2d\u8fd9\u6837\u7684\u5173\u7cfb\u3002\n\n1. \u9650\u5236\u5185\u5bb9\uff1a**$u$ \u4e3a\u6ee1\u5f0f\uff0c$v$ \u4e3a\u6ee1\u5f0f**\u3002\u5173\u7cfb\uff1a\n   - \u82e5 $u$ \u4e3a\u6c49\u5f0f\uff0c\u5219 $v$ \u5fc5\u4e3a\u6ee1\u5f0f\uff1b\n   - \u82e5 $v$ \u4e3a\u6c49\u5f0f\uff0c\u5219 $u$ \u5fc5\u4e3a\u6ee1\u5f0f\u3002\n2. \u9650\u5236\u5185\u5bb9\uff1a**$u$ \u4e3a\u6ee1\u5f0f\uff0c$v$ \u4e3a\u6c49\u5f0f**\u3002\u5173\u7cfb\uff1a\n   - \u82e5 $u$ \u4e3a\u6c49\u5f0f\uff0c\u5219 $v$ \u5fc5\u4e3a\u6c49\u5f0f\uff1b\n   - \u82e5 $v$ \u4e3a\u6ee1\u5f0f\uff0c\u5219 $u$ \u5fc5\u4e3a\u6ee1\u5f0f\u3002\n3. \u9650\u5236\u5185\u5bb9\uff1a**$u$ \u4e3a\u6c49\u5f0f\uff0c$v$ \u4e3a\u6ee1\u5f0f**\u3002\u5173\u7cfb\uff1a\n   - \u82e5 $u$ \u4e3a\u6ee1\u5f0f\uff0c\u5219 $v$ \u5fc5\u4e3a\u6ee1\u5f0f\uff1b\n   - \u82e5 $v$ \u4e3a\u6c49\u5f0f\uff0c\u5219 $u$ \u5fc5\u4e3a\u6c49\u5f0f\u3002\n4. \u9650\u5236\u5185\u5bb9\uff1a**$u$ \u4e3a\u6c49\u5f0f\uff0c$v$ \u4e3a\u6c49\u5f0f**\u3002\u5173\u7cfb\uff1a\n   - \u82e5 $u$ \u4e3a\u6ee1\u5f0f\uff0c\u5219 $v$ \u5fc5\u4e3a\u6c49\u5f0f\uff1b\n   - \u82e5 $v$ \u4e3a\u6ee1\u5f0f\uff0c\u5219 $u$ \u5fc5\u4e3a\u6c49\u5f0f\u3002\n\n\u8fd9\u6837\u5efa\u56fe\u4e4b\u540e\uff0c\u76f4\u63a5\u8dd1 **2-SAT** \u5373\u53ef\u3002\u5982\u679c\u4f60\u4e0d\u4f1a **2-SAT**\uff0c\u53ef\u4ee5\u53c2\u8003\uff1a[Anguei \u7684\u535a\u5ba2 - 2-SAT \u95ee\u9898](https://anguei.blog.luogu.org/solution-p4782)\u3002\n\n## \u4ee3\u7801\n\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int MAXN = 208, MAXM = 2008;\nstruct Edge{\n\tint to, nxt;\n} edge[MAXM];\nint head[MAXN], cnt = 0;\nvoid add_edge(int u, int v) {\n\tedge[++cnt].to = v;\n\tedge[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\nint T, n, m;\nstring in1, in2;\nint dfn[MAXN], low[MAXN], tot = 0, st[MAXN], top = 0, vis[MAXN], col[MAXN], scc = 0;\nvoid Tarjan(int x) {\n\tdfn[x] = low[x] = ++tot;\n\tst[++top] = x; vis[x] = true;\n\tfor(int i = head[x]; i; i = edge[i].nxt) {\n\t\tint v = edge[i].to;\n\t\tif(!dfn[v]) {\n\t\t\tTarjan(v); low[x] = min(low[x], low[v]);\n\t\t} else if(vis[v]) {\n\t\t\tlow[x] = min(low[x], dfn[v]);\n\t\t}\n\t}\n\tif(dfn[x] == low[x]) {\n\t\tcol[x] = ++scc;\n\t\tint y;\n\t\tdo {\n\t\t\ty = st[top--]; vis[y] = false;\n\t\t\tcol[y] = scc;\n\t\t} while(x != y);\n\t}\n}\nint main() {\n\tscanf(\"%d\", &T);\n\twhile(T--) {\n\t\ttot = top = scc = cnt = 0;\n\t\tmemset(head, 0, sizeof(head));\n\t\tmemset(dfn, 0, sizeof(dfn)); memset(low, 0, sizeof(low));\n\t\tmemset(vis, 0, sizeof(vis)); memset(col, 0, sizeof(col));\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tfor(int i = 1; i <= m; i++) {\n\t\t\tcin >> in1 >> in2;\n\t\t\tint x = 0, y = 0;\n\t\t\tfor(int j = 1; j < in1.length(); j++) x = x * 10 + in1[j] - '0';\n\t\t\tfor(int j = 1; j < in2.length(); j++) y = y * 10 + in2[j] - '0';\n\t\t\tif(in1[0] == 'm' && in2[0] == 'm') {\n\t\t\t\tadd_edge(x + n, y); add_edge(y + n, x);\n\t\t\t} else if(in1[0] == 'm' && in2[0] == 'h') {\n\t\t\t\tadd_edge(x + n, y + n); add_edge(y, x);\n\t\t\t} else if(in1[0] == 'h' && in2[0] == 'm') {\n\t\t\t\tadd_edge(x, y); add_edge(y + n, x + n);\n\t\t\t} else {\n\t\t\t\tadd_edge(x, y + n); add_edge(y, x + n);\n\t\t\t}\n\t\t}\n\t\tfor(int i = 1; i <= (n << 1); i++) {\n\t\t\tif(!dfn[i]) Tarjan(i);\n\t\t}\n\t\tbool noans = false;\n\t\tfor(int i = 1; i <= n; i++) {\n\t\t\tif(col[i] == col[i + n]) {\n\t\t\t\tcout << \"BAD\\n\"; noans = true; break;\n\t\t\t}\n\t\t}\n\t\tif(!noans) cout << \"GOOD\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1620734908,
        "uid": 166535,
        "name": "TonyYin",
        "ccfLevel": 0,
        "title": "Luogu - P4171 - [JSOI2010]\u6ee1\u6c49\u5168\u5e2d"
    },
    {
        "content": "[${\\color{#eea000}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/Wendigo/)\n\n[P4171 \u3010\\[JSOI2010\\]\u6ee1\u6c49\u5168\u5e2d\u3011](https://www.luogu.org/problem/P4171)\n\n### \u6b64\u9898\u7b97\u6cd5:2-sat\n\n\u5927\u81f4\u601d\u8def:\n\n>1.$ $\u8f93\u5165\u7ea6\u675f\u6761\u4ef6\uff0c\u5176\u4e2d$i$\uff0c$a$\uff0c$j$\uff0c$b$\u8868\u793a\u7b2c$i$\u79cd\u8089\u5fc5\u987b\u7528$a$\u505a\u6cd5\u6216\u7b2c$j$\u79cd\u8089\u5fc5\u987b\u7528$b$\u505a\u6cd5\uff0c\u6ce8\u610f$n\\geq 10$\n\n```cpp\nchar f=getchar();\nint i,a,j,b;\nwhile(f!='m'&&f!='h')\n\tf=getchar();\na=(f=='m');\nscanf(\"%d\",&i);\nf=getchar();\nwhile(f!='m'&&f!='h')\n\tf=getchar();\nb=(f=='m'); \nscanf(\"%d\",&j);\n```\n\n\n>2.$ $\u5982$($\u6ee1\u5f0f\u7f8a\u8089$or$\u6c49\u5f0f\u725b\u8089$)$\u8fd9\u6837\u4e00\u4e2a\u8981\u6c42\uff0c\u53ef\u4ee5\u770b\u6210$($\u6c49\u5f0f\u7f8a\u8089$->($\u7bad\u5934\u8868\u793a\"\u5219\u5fc5\u987b\"$)$\u6c49\u5f0f\u725b\u8089$)$\u4ee5\u53ca$($\u6ee1\u5f0f\u725b\u8089$->$\u6ee1\u5f0f\u7f8a\u8089$)$\u4e24\u4e2a\u6761\u4ef6\uff0c\u5e76\u4ee5\u6587\u4e2d$->$\u4e3a\u8fb9\u5efa\u56fe\u3002\n\n![](https://s2.ax1x.com/2019/11/07/MALJnP.jpg)\n\n>\u56fe\u4e2d\u6709$2\\times n$\u4e2a\u70b9\uff0c$($\u8981\u6c42$\\times 2)$\u6761\u8fb9\u3002\u5176\u4e2d\u6c49\u5f0f\u70b9\u7f16\u53f7$1$...$n$\uff0c\u6ee1\u5f0f\u70b9\u7f16\u53f7$n+1$...$2\\times n$\u3002\n\n\n```cpp\n//\u52a0\u8fb9\nif(a&&b){\n\tadd(j+n,i);\n\tadd(i+n,j);\n} else if(!a&&b){ //\u8fd9\u662f\u5982\u4e0a\u60c5\u51b5\n\tadd(i,j);\n\tadd(j+n,i+n);\n} else if(a&&!b){\n\tadd(i+n,j+n);\n\tadd(j,i);\n} else if(!a&&!b){\n\tadd(i,j+n);\n\tadd(j,i+n);\n}\n```\n\n>\u800c\u4e0b\u9762\u7684\u4ee3\u7801\u4e0e\u4e0a\u9762\u7684\u662f\u7b49\u4ef7\u7684\u3002\n\n\n\n```cpp\n//\u7b80\u5316\nadd(i+n*(a&1),j+n*(b^1));\nadd(j+n*(b&1),i+n*(a^1));\n```\n\n>3.$ $\u5efa\u597d\u56fe\u540e\uff0c\u5f00\u59cbTarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u53ef\u77e5\uff0c**\u540c\u4e00\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u7684\u83dc\u4e0d\u80fd\u5305\u62ec\u540c\u79cd\u8089\u7684\u4e24\u79cd\u505a\u6cd5\uff0c\u5426\u5219\uff0c\u7b54\u6848\u4e3aBAD**\u3002\u6240\u4ee5\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u540e\uff0c\u6c42\u53ef\u4ee5\u7acb\u523b\u5f97\u51fa\u7b54\u6848\u3002\n\n![](https://s2.ax1x.com/2019/11/08/MEa7sf.jpg)\n\n>\u4e0a\u56fe\u4e3a\u6837\u4f8b\u4e00\u7684\u5efa\u56fe\uff0c\u7b54\u6848\u4e3a$GOOD$\u3002\n\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801+\u6ce8\u91ca\n\n \n \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=2019; //2n\u4e2a\u8282\u70b9\nint t,n,m;\nstruct edge{\n\tint adj,nex;\n}e[N<<1];//4n\u6761\u8fb9\nint g[N],top;\nvoid add(int x,int y){\n\te[++top]=(edge){y,g[x]};\n\tg[x]=top;\n}\nint ind,cnt,dfn[N],low[N],val[N];\nbool vst[N];\nstack<int> pos;\nvoid tarjan(int x){ //tarjan\u7f29\u70b9\n\tdfn[x]=low[x]=++ind;\n\tpos.push(x),vst[x]=1;\n\tfor(int i=g[x];i;i=e[i].nex){\n\t\tint to=e[i].adj;\n\t\tif(!dfn[to]){\n\t\t\ttarjan(to);\n\t\t\tlow[x]=min(low[x],low[to]);\n\t\t} else if(vst[to])\n\t\t\tlow[x]=min(low[x],dfn[to]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tint tmp=0;\n\t\tcnt++;\n\t\twhile(tmp!=x){\n\t\t\ttmp=pos.top();\n\t\t\tpos.pop();\n\t\t\tval[tmp]=cnt;\n\t\t\tvst[tmp]=0;\n\t\t}\n\t}\n}\nvoid sat2(){ \n\tscanf(\"%d%d\",&n,&m);\n\tcnt=ind=top=0;\n\tfor(int i=1;i<=2*n;i++)\n\t\tvst[i]=g[i]=dfn[i]=low[i]=0;\n\t//\u521d\u59cb\u5316\u5fc5\u987b\u5f7b\u5e95\n\tfor(int t=1;t<=m;t++){\n\t\tchar f=getchar();\n\t\tint i,a,j,b;\n\t\twhile(f!='m'&&f!='h')\n\t\t\tf=getchar();\n\t\ta=(f=='m');\n\t\tscanf(\"%d\",&i);\n\t\tf=getchar();\n\t\twhile(f!='m'&&f!='h')\n\t\t\tf=getchar();\n\t\tb=(f=='m');  //n>=10\n\t\tscanf(\"%d\",&j);\t\t\n\t\tadd(i+n*(a&1),j+n*(b^1));\n\t\tadd(j+n*(b&1),i+n*(a^1));\n//\t\t\u5efa\u56fe\n\t}\n\tfor(int i=1;i<=2*n;i++)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\tfor(int i=1;i<=n;i++)\n\t\tif(val[i]==val[i+n]){\n\t\t\tputs(\"BAD\");\n\t\t\treturn;\n\t\t}\n\tputs(\"GOOD\");\n}\nint main(){\n\tscanf(\"%d\",&t); //\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\n\twhile(t--) sat2();\n\treturn 0;\n}\n\n```\n\n\u6ce8\u610f\u53cc\u500d\u70b9\uff0c4\u500d\u8fb9\u3002\n\n\u8c22\u8c22\u5927\u5bb6! !\n",
        "postTime": 1573132389,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "\u9898\u76ee\u5f88\u957f\uff0c\u5e9f\u8bdd\u5f88\u591a\uff0c\u4f46\u662f\u5f88\u677f\n\n## Description\n\n\u7ed9\u51fa $n$ \u4e2a\u6570\uff0c$m$ \u4e2a\u6761\u4ef6\n\n\u6bcf\u4e2a\u6570\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u53ea\u80fd\u9009\u62e9\u5176\u4e2d\u4e00\u79cd\u7c7b\u578b\n\n\u6bcf\u7ec4\u6761\u4ef6\u5305\u542b\u4e24\u4e2a\uff0c\u6bcf\u4e2a\u8981\u6c42\u4e00\u79cd\u7c7b\u578b\u7684\u6570\u5b57\n\n\u95ee\u8fd9 $n$ \u4e2a\u6570\u80fd\u4e0d\u80fd\u7b26\u5408\u6240\u6709\u7684\u6761\u4ef6\n\n\n## Solution\n\n\u95ee\u6240\u6709\u6570\u5b57\u80fd\u5426\u6ee1\u8db3\u6240\u6709\u7684\u6761\u4ef6\uff0c\u663e\u7136\u662f\u9002\u5b9a\u6027\u95ee\u9898\n\n\u9996\u5148\u8981\u660e\u786e\u4e00\u70b9\uff0c\u6bcf\u7ec4\u7684\u6761\u4ef6\u81f3\u5c11\u6ee1\u8db3\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u5168\u90e8\u6ee1\u8db3\n\n\u4f46\u8981\u60f3\u8ba9\u7b54\u6848\u6700\u4f18\uff0c\u9009\u62e9\u6ee1\u8db3\u5176\u4e2d\u4e00\u4e2a\u5c31\u597d\uff0c\u56e0\u4e3a\u8fd9\u6837\u80fd\u7528\u66f4\u5c11\u7684\u6570\u5b57\u6ee1\u8db3\u66f4\u591a\u7684\u6761\u4ef6\n\n\u90a3\u6bcf\u6b21\u4e24\u4e2a\u6761\u4ef6\u6ee1\u8db3\u5176\u4e00\uff0c\u663e\u7136\u9009\u62e9 2-SAT \u6c42\u89e3\n\n\u8003\u8651\u5982\u4f55\u5efa\u8fb9\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u6709 \u6bcf\u79cd\u6750\u6599\u53ea\u80fd\u505a\u4e00\u79cd\u83dc\u5f0f \u7684\u9650\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u7ec4\u6761\u4ef6\u7684\u6bcf\u4e00\u4e2a\uff0c\u5411\u53e6\u4e00\u79cd\u6761\u4ef6\u7684\u5bf9\u7acb\u4e8b\u4ef6\u5efa\u8fb9\n\n\u5047\u8bbe $a,b$ \u5904\u4e8e\u540c\u4e00\u7ec4\u6761\u4ef6\uff0c$A,B$ \u5206\u522b\u662f\u4ed6\u4eec\u7684\u53e6\u4e00\u79cd\u7c7b\u578b\n\n\u90a3\u6211\u4eec\u5efa\u6709\u5411\u8fb9 $(a,B)$\uff0c$(b,A)$\uff0c\u8868\u793a\u9009\u62e9 $a$ \u5fc5\u987b\u9009\u62e9 $B$\uff0c\u9009\u62e9 $b$ \u5fc5\u987b\u9009\u62e9 $A$\uff0c\u540c\u65f6\u6ee1\u8db3\u4e0a\u9762\u7684\u6700\u4f18\u6027\u8bf4\u660e\n\n\u4e4b\u540e\u8dd1\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5224\u65ad\u5728\u540c\u4e00\u4e2a SCC \u5185\u662f\uff0c\u5426\u6709\u4e24\u4e2a\u6761\u4ef6\u5904\u4e8e\u540c\u4e00\u7ec4\uff0c\u65e0\u5219\u6210\u7acb\uff0c\u6709\u5219\u4e0d\u6210\u7acb\n\n## Code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#define maxn 100100\n#define rr register \n#define INF 0x3f3f3f3f\n//#define int long long\n#define debug cout<<\"lkp ak ioi\"<<endl\n\nusing namespace std;\n\nstring s1,s2;\nbool vis[maxn],flag;\nint k,n,m,top,tot,t,cnt; \nint low[maxn],head[maxn],dfn[maxn],num[maxn],zhan[maxn];\nstruct edge{int fr,to,nxt;}e[maxn<<1];\n\ninline int read(){\n    int s=0,w=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') s=(s<<1)+(s<<3)+ch-'0',ch=getchar();\n    return s*w;\n}\n\nvoid add(int fr,int to){\n    e[++tot].to=to;e[tot].fr=fr;\n    e[tot].nxt=head[fr];head[fr]=tot;\n}\n\nint Turn(string s){\n    int ans=0;\n    for(int i=1;i<s.length();i++)\n\tans*=10,ans+=s[i]-'0';\t\n    if(s[0]=='h') return ans;\n    return ans+n;\n}\n\nint No(string s){\n    int ans=0;\n    for(int i=1;i<s.length();i++)\n        ans*=10,ans+=s[i]-'0';\t\n    if(s[0]=='h') return ans+n;\n    return ans;\n}\n\nvoid clear(){\n    tot=top=t=cnt=flag=0;\n    memset(dfn,0,sizeof dfn);\n    memset(low,0,sizeof low);\n    memset(num,0,sizeof num);\n    memset(vis,0,sizeof vis);\n    memset(head,0,sizeof head);\n}\n\nvoid tarjan(int u){\n    dfn[u]=low[u]=++cnt;\n    vis[u]=1;zhan[++top]=u;\n    for(int i=head[u];i;i=e[i].nxt){\n        int to=e[i].to;\n        if(!dfn[to]) tarjan(to),low[u]=min(low[u],low[to]);\n        else if(vis[to]) low[u]=min(low[u],dfn[to]);\n    }\n    if(dfn[u]==low[u]){\n        int pre=zhan[top--];\n        num[pre]=++t;vis[pre]=0;\n        while(pre!=u){\n            pre=zhan[top--];\n            num[pre]=t;vis[pre]=0;\n        }\n    }\n}\n\nint main(){\n    k=read();\n    while(k--){\n        clear();n=read();m=read();\n        for(int i=1;i<=m;i++){\n            cin>>s1>>s2;\n            add(Turn(s1),No(s2));\n            add(Turn(s2),No(s1));\n        }\n        for(int i=1;i<=n*2;i++)if(!dfn[i])tarjan(i); \n        for(int i=1;i<=n;i++)if(num[i]==num[i+n]){printf(\"BAD\\n\");flag=1;break;}\n        if(!flag) printf(\"GOOD\\n\");\n    }\n    return 0;\n} \n```\n",
        "postTime": 1612320962,
        "uid": 281497,
        "name": "KEBrantily",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "## \u5199\u5728\u524d\u9762\n\n~~\u4e0d\u4f1a\u5427\u4e0d\u4f1a\u5427\uff0c\u8fd9\u4e48\u88f8\u76842-SAT\u90fd\u770b\u4e0d\u51fa\u6765\uff1f~~ \u7ecf\u9a8c\u9898\n\n## Solution\n\n### 2-SAT\u5904\u7406\n\n\u5173\u4e8e\u4ec0\u4e48\u662f[2-SAT](https://oi-wiki.org/graph/2-sat/)\uff0c\u8be6\u89c1Oiwiki\n\n\u7b80\u5355\u6765\u8bf4\uff0c2-SAT\u95ee\u9898\u7684\u5f62\u5f0f\u662f\u7ed9\u4e00\u5806\u6761\u4ef6\uff0c\u6bcf\u4e2a\u6761\u4ef6\u4e2d\u6709\u4e24\u4e2a\u5c0f\u6761\u4ef6\uff0c\u4e0d\u8fc7\u53ea\u9700\u8981\u6ee1\u8db3\u5176\u4e2d\u4e00\u79cd\n\n\u9898\u76ee\u4e2d\u8bf4\u8bc4\u59d4\u7684\u4e24\u4e2a\u6761\u4ef6\u53ea\u9700\u8981\u6ee1\u8db3\u4e00\u4e2a\u5373\u53ef\uff0c\u7136\u540e\u6bcf\u79cd\u6750\u6599\u53c8\u6709\u6ee1\u5f0f\u548c\u6c49\u5f0f\u4e24\u79cd\u9009\u62e9\n\n\u8fd9\u4e0d\u663e\u7136\u8ba9\u6211\u4eec\u62532-SAT\uff1f~~\u53ef\u80fd\u4e5f\u6709\u5176\u4ed6\u795e\u4ed9\u505a\u6cd5~~\n\n\u800c2-SAT\u4e3b\u8981\u8003\u5bdf\u5efa\u56fe\u8fd9\u4e00\u5757\uff0c\u6211\u4eec\u7528 $0 \\sim n$ \u8868\u793a\u6ee1\u5f0f\uff0c\u7528 $n+1 \\sim 2n$ \u8868\u793a\u6c49\u5f0f\uff0c\u7528 $x^{-1}$ \u8868\u793a $x$ \u7684\u53e6\u4e00\u79cd\u83dc\u5f0f\n\n\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6 $(a_i,b_i)$\uff0c\n\n- \u9996\u5148\u8ba9\u6211\u4eec\u6ee1\u8db3 $a_i$ \u800c\u4e0d\u6ee1\u8db3 $b_i$ \uff0c\u90a3\u5c31\u4ece $a_i$ \u5411 $b_i^{-1}$ \u8fde\u4e00\u6761\u8fb9\n\n- \u7136\u540e\u8ba9\u6211\u4eec\u6ee1\u8db3 $b_i$ \u800c\u4e0d\u6ee1\u8db3 $a_i$ \uff0c\u90a3\u5c31\u4ece $b_i$ \u5411 $a_i^{-1}$ \u8fde\u4e00\u6761\u8fb9\n\n~~\uff08\u522b\u641e\u6df7\u4e86\u8c03\u534a\u5929\uff09~~\n\n### \u5b57\u7b26\u4e32\u5904\u7406\n\n\u66b4\u529b\u5904\u7406\u5373\u53ef\uff0c\u5224\u65ad\u7b2c\u4e00\u4e2a\u5b57\u7b26\u786e\u5b9a\u6ee1\u5f0f\u8fd8\u662f\u6c49\u5f0f\n\n\u626b\u4e00\u904d\u5b57\u7b26\u4e32\u53d6\u51fa\u662f\u7b2c\u51e0\u53f7\u83dc\uff0c\u7136\u540e\u6309\u4e0a\u9762\u7684\u65b9\u5f0f\u52a0\u8fb9\n\n### \u7b54\u6848\u5224\u65ad\n\n\u7528\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9\n\n\u7f29\u70b9\u540e\uff0c\u5982\u679c\u5b58\u5728\u540c\u4e00\u83dc\u54c1\u51fa\u73b0\u5728\u540c\u4e00\u5f3a\u8054\u901a\u5206\u91cf\u91cc\uff0c\u90a3\u5c31\u4e0d\u80fd\u6ee1\u8db3\n\n\u5426\u5219\u5c31\u53ef\u4ee5\u6ee1\u8db3\n\n\u5927\u4f53\u601d\u8def\u5c31\u8fd9\u4e9b\uff0c\u770b\u4ee3\u7801\u5427\n\n## Code\n\n```cpp\n/*\nWork by: Suzt_ilymics\nKnowledge: ??\nTime: O(??)\n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define LL long long\n#define orz cout<<\"lkp AK IOI!\"<<endl\n\nusing namespace std;\nconst int MAXN = 1e5+5;\nconst int INF = 1e9+7;\nconst int mod = 1e9+7;\n\nstruct edge{\n\tint to, nxt;\n}e[MAXN << 1];\nint head[MAXN], num_edge = 0;\n\nint T, n, m;\nint dfn[MAXN], low[MAXN], cnt = 0, stc[MAXN], sc = 0;\nint num[MAXN], t = 0;\nbool vis[MAXN];\n\nint read(){\n\tint s = 0, f = 0;\n\tchar ch = getchar();\n\twhile(!isdigit(ch))  f |= (ch == '-'), ch = getchar();\n\twhile(isdigit(ch)) s = (s << 1) + (s << 3) + ch - '0' , ch = getchar();\n\treturn f ? -s : s;\n}\n\nvoid add_edge(int from, int to){ e[++num_edge] = (edge){to, head[from]}, head[from] = num_edge; }\n\nvoid tarjan(int u){\n\tstc[++sc] = u, dfn[u] = low[u] = ++cnt, vis[u] = true;\n\tfor(int i = head[u]; i; i = e[i].nxt){\n\t\tint v = e[i].to;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v), low[u] = min(low[u], low[v]);\n\t\t}\n\t\telse if(vis[v]) low[u] = min(low[u], dfn[v]);\n\t}\n\tif(low[u] == dfn[u]){\n\t\tint pre; ++t;\n\t\tdo{\n\t\t\tpre = stc[sc--];\n\t\t\tvis[pre] = false;\n\t\t\tnum[pre] = t;\n\t\t}while(pre != u);\n\t}\n}\n\nint main()\n{\n\tT = read();\n\twhile(T--){\n\t\tmemset(head, 0, sizeof head);\n\t\tmemset(vis, false, sizeof vis);\n\t\tmemset(dfn, 0, sizeof dfn);\n\t\tnum_edge = t = sc = cnt = 0;\n\t\tn = read(), m = read();\n\t\tchar u[9], v[9];\n\t\tfor(int i = 1; i <= m; ++i){\n//\t\t\ttop = 0;\n//\t\t\twhile(true){\n//\t\t\t\tch = getchar();\n////\t\t\t\tcout<<ch<<endl;\n//\t\t\t\tif(ch == ' ') break;\n//\t\t\t\telse u[++top] = ch;\n//\t\t\t}\n//\t\t\ttop = 0;\n//\t\t\twhile(true){\n//\t\t\t\tch = getchar();\n//\t\t\t\tif(ch == '\\n') break;\n//\t\t\t\telse v[++top] = ch;\n//\t\t\t\tcout<<ch<<\" \";\n//\t\t\t}\n\t\t\tcin >>(u + 1)>>(v + 1);\n//\t\t\tcout<<(u + 1)<<\" \"<<(v + 1)<<endl;;\n\t\t\tint u_ = 0, v_ = 0;\n\t\t\tfor(int j = 2; j <= (int)strlen(u + 1); ++j) u_ = (u_ << 1) + (u_ << 3) + (int)(u[j] ^ 48);\n\t\t\tfor(int j = 2; j <= (int)strlen(v + 1); ++j) v_ = (v_ << 1) + (v_ << 3) + (int)(v[j] ^ 48);\n\t\t\tif(u[1] == 'm' && v[1] == 'm') add_edge(u_, v_ + n), add_edge(v_, u_ + n);\t\n\t\t\tif(u[1] == 'h' && v[1] == 'm') add_edge(u_ + n, v_ + n), add_edge(v_, u_);\n\t\t\tif(u[1] == 'm' && v[1] == 'h') add_edge(u_, v_), add_edge(v_ + n, u_ + n);\n\t\t\tif(u[1] == 'h' && v[1] == 'h') add_edge(u_ + n, v_), add_edge(v_ + n, u_);\n\t\t}\n\t\tfor(int i = 1; i <= 2 * n; ++i){\n\t\t\tif(!dfn[i]) tarjan(i);\n\t\t}\n\t\tint flag = false;\n\t\tfor(int i = 1;  i <= n; ++i){\n\t\t\tif(num[i] == num[i + n]){\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\t\tif(flag) printf(\"BAD\\n\");\n\t\telse printf(\"GOOD\\n\");\n\t}\n\treturn 0;\n}\n```\n\n\u5982\u679c\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u8bf7\u5728\u8bc4\u8bba\u533a\u6307\u6b63",
        "postTime": 1612316573,
        "uid": 230580,
        "name": "Suzt_ilymtics",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "# $2-SAT$\u7684\u6a21\u677f\n## \\>1.1\n\u5728\u8bf4\u53ca\u5b9e\u73b0\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u6765\u7406\u89e3\u4ec0\u4e48\u662f**2-SAT**\uff0c\u5df2\u7ecf\u77e5\u6653\u7684\u53ef\u4ee5\u8df3\u81f3**1.2**\n\n\u73b0\u5728\u6211\u4eec\u67096\u4e2a\u5e03\u5c14\u53d8\u91cf $a,b,c,d,e,f$ \uff0c\u73b0\u5728\u7ed9\u51fa\u5982\u4e0b\u5173\u7cfb\uff1a\n\n- \u82e5 $a$ \u7684\u503c\u4e3a0\uff0c\u5219 $b$ \u5fc5\u987b\u4e3a1\n- \u82e5 $c$ \u7684\u503c\u4e3a1\uff0c\u5219 $d$ \u5fc5\u987b\u4e3a1\uff0c\u4e14\u53cd\u4e4b\u6210\u7acb(\u5373\u82e5 $d$ \u7684\u503c\u4e3a1\uff0c\u5219 $c$ \u5fc5\u987b\u4e3a1\uff0c\u4e0b\u540c)\n- \u82e5 $e$ \u7684\u503c\u4e3a1\uff0c\u5219 $f$ \u5fc5\u987b\u4e3a0\n- \u82e5 $a$ \u7684\u503c\u4e3a1\uff0c\u5219 $e$ \u5fc5\u987b\u4e3a0\uff0c\u4e14\u53cd\u4e4b\u6210\u7acb\n- \u82e5 $d$ \u7684\u503c\u4e3a1\uff0c\u5219 $e$ \u5fc5\u987b\u4e3a1\uff0c\u4e14\u53cd\u4e4b\u6210\u7acb\n\n\u8bf7\u7ed9 $a$~$f$ \u5408\u7406\u7684\u503c\u4f7f\u5f97\u4e0a\u8ff0\u6761\u4ef6\u6210\u7acb\u3002\u65e0\u9700\u591a\u52a0\u601d\u8003\uff0c\u81ea\u7136\u80fd\u53d1\u73b0\u4e00\u7ec4\u5408\u7406\u7684 a~f \u4e3a 0,1,0,0,0,1\n\n\u4f46\u5982\u679c\u53d8\u91cf\u670930\u4e2a\uff0c\u8981\u6c42\u4e5f\u4e0d\u518d\u4ec5\u4ec5\u662f\u8fd95\u4e2a\u3002\u81ea\u7136\u5c31\u8981\u56f0\u96be\u8bb8\u591a\u3002\n\n**\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u501f\u52a9\u56fe\u7684\u6027\u8d28\u6765\u8fbe\u5230\u8fd9\u4e9b\u8981\u6c42**\u3002\n\n\u6bd4\u5982 **_\u5bf9\u4e8e\u7f16\u53f7\u4e3a1~10\u7684\u6709\u7740\u4e0d\u540c\u5173\u7cfb\u7684\u5e03\u5c14\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5efa\u4e00\u4e2a\u670920\u4e2a\u70b9\u7684\u56fe\u3002\u5176\u4e2d\uff0c\u70b91~10\u7528\u4e8e\u5bf9\u5e94\u4e0a\u8ff0\u53d8\u91cf\u4e3a1\u7684\u60c5\u51b5\uff0c\u70b911~20\u7528\u4e8e\u5bf9\u5e94\u4e0a\u8ff0\u53d8\u91cf\u4e3a0\u7684\u60c5\u51b5\u3002_** \u5c06\u6bcf\u4e00\u4e2a\u5173\u7cfb\u8fde\u63a5\u7684\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u5efa\u4e00\u6761\u5355\u5411\u8fb9\uff0c\u6bd4\u5982\u8bf4\uff1a\n\n![TJ-WinterVacation 1](https://s2.ax1x.com/2020/01/20/1ixenP.png)\n\n\u8fd9\u91cc\u70b91\u5bf9\u5e94\u53d8\u91cf1\u4e3a1\u65f6\uff0c\u70b912\u5bf9\u5e94\u53d8\u91cf2\u4e3a0\u65f6\u3002\n\n\u5355\u9879\u8fb9\u7531\u70b91\u6307\u5411\u70b912\uff0c\u8868\u793a\u201c\u70b91\u6210\u7acb\u65f6\uff0c\u70b912\u6210\u7acb\u201d\u3002\n\n\u4e5f\u5c31\u8868\u8fbe\u4e86\u56fe\u4e2d\u6587\u5b57\u7684\u610f\u601d\u3002\n\n## \\>1.2\n\u73b0\u5728\u5f00\u59cb\u8bf42-SAT\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5df2\u7ecf\u77e5\u6653\u7684\u8bf7\u8df3\u81f31.3\u4ee5\u4e86\u89e3\u672c\u9898\u601d\u8def\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u628a\u53d8\u91cf\u8868\u793a\u4e3a\u70b9\uff0c\u4e24\u4e24\u95f4\u7684\u5173\u7cfb\u8868\u793a\u4e3a\u5355\u5411\u8fb9\u3002\n\n\u5047\u4f7f\u6211\u4eec\u7684\u8f93\u5165\u683c\u5f0f\u4e3a $int1$ $int2$ $int3$ $int4$ \uff0c\u5206\u522b \u8868\u793a$int1$\u4e3a$int2$\u65f6\uff0c$int3$\u5fc5\u987b\u4e3a$int4$\u3002\n\n**\u8fd9\u91cc\u4ecd\u4ee51.1\u52a0\u659c\u90e8\u5206\u4e3a\u4f8b\u4f5c\u8bb2\u89e3**\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u90bb\u63a5\u8868\u8fd9\u6837\u64cd\u4f5c\uff1a\n\n```cpp\nstruct edges{\n\tint v, next;\n}edge[27];//10\u4e2a\u53d8\u91cf\uff0c\u5bf9\u5e9420\u4e2a\u70b9\n\ninline void add_edge(int u, int v){//\u90bb\u63a5\u8868\u7684\u64cd\u4f5c\uff0c\u4e0d\u518d\u8d58\u8ff0\n\tedge[++ cnt] = (edges){v, first[u]};\n\tfirst[u] = cnt;\n}\nvoid inst2edge(){\n\tregister int x, y, a, b;\n\tscanf(\"%d %d %d %d\", &x, &y, &a, &b);//x\u4e3ay\u65f6\uff0ca\u5fc5\u987b\u4e3ab\n\tadd_edge(y?x:x + 10, b?a:a + 10);\n    \t//\u56e0\u4e3a\u662f\u5e03\u5c14\u53d8\u91cf\uff0c\u4ec5\u6709\u4e24\u503c\uff0c\u56e0\u6b64\u91c7\u7528\u4e09\u6b65\u8fd0\u7b97\u7b26\n}\n```\n\n\u5f88\u597d\u7406\u89e3\uff0c\u73b0\u5728\u56fe\u5efa\u5b8c\u4e86\uff0c\u600e\u4e48\u505a\u5462\uff1f\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u6ee1\u8db3**\u6240\u6709\u7684**\u6761\u4ef6\u3002\u5176\u6b21\uff0c\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u4efb\u610f\u53d8\u91cf$i$\u800c\u8a00\uff0c\u70b9$i$\u548c$i + 10$\u4e0d\u80fd\u88ab\u8fd9\u4e9b\u6761\u4ef6(\u4e5f\u5c31\u662f\u8fb9)\u6240\u7f6e\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u3002\u5f88\u5feb\u80fd\u60f3\u5230\uff0c\u6211\u4eec\u80fd$Tarjan$\u5bf9\u70b9\u67d3\u8272\u3002\u7136\u540e\u5224\u5b9a\u70b9$i$\u548c\u70b9$i + 10$\u989c\u8272\u662f\u5426\u76f8\u540c\u3002\u82e5\u76f8\u540c\uff0c\u5219\u65e0\u6cd5\u6ee1\u8db3\uff0c\u53cd\u4e4b\u5219\u80fd\u6ee1\u8db3\u3002\u82e5\u9700\u8981\u8f93\u51fa\u4e00\u7ec4\u5408\u7406\u7684\u89e3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e00\u989c\u8272\u7684\u70b9\u5bf9\u5e94\u7684\u503c\u8fd4\u56de\u6765\uff0c\u800c\u6ca1\u88ab\u67d3\u4e0a\u8fd9\u4e2a\u989c\u8272\u7684\uff0c\u5c31\u53bb\u4efb\u610f\u503c\u3002\n\n\u7531\u4e8e$Tarjan$\u5b9e\u73b0\u4e0d\u96be\uff0c\u56e0\u6b64\u4e0d\u4f5c\u8bb2\u89e3\u3002\n\n## \\>1.3\n\u73b0\u5728\uff0c\u770b\u5230\u9898\u76ee\u3002\u6211\u4eec\u80fd\u591f\u6beb\u4e0d\u8d39\u529b\u7684\u60f3\u5230\u628a\u6ee1\u5f0f\u3001\u6c49\u5f0f\u4f5c\u4e3a\u5e03\u5c14\u503c\u7684\u4e24\u79cd\u8868\u8fbe\u3002\n\n\u7136\u540e\u6bcf\u4e2a\u8bc4\u59d4\u7684\u8981\u6c42\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u201c\u6216\u201d\u7684\u8868\u8fbe\uff0c\u56e0\u6b64\u8f6c\u4e3a\u201c\u5fc5\u201d\u7684\u8868\u8fbe\u3002\n\n- \u6bd4\u5982\u8bf4\uff1a\u8bc4\u5ba1\u4e00\u8981\u6c42\u7684\u662fm1\u6216h7\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u4e3ah1\u65f6\u5fc5h7\uff0c\u548cm7\u65f6\u5fc5m1\n\n\u6ce8\u610f\u5efa\u8fb9\u65f6\u5355\u5411\u8fb9\u3002\u56e0\u4e3a\u662fA\u65f6B\u6210\u7acb\u800c\u975eB\u65f6A\u6210\u7acb\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5efa\u597d\u4e86\u56fe\u3002\u4f7f\u7528Tarjan\u5bf9\u6240\u6709\u70b9\u67d3\u8272\uff0c\u67e5\u770b\u662f\u5426\u5b58\u5728\u5bf9\u4e8e\u4efb\u610f\u7684\u98df\u6750i\uff0chi\u548cmi\u6709\u7740\u4e00\u6837\u7684\u989c\u8272\u3002\u82e5\u6709\uff0c\u5219\u4e3aBAD\uff0c\u53cd\u4e4b\u5219\u4e3aGOOD\u3002\n\n\u989d\u5916\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8bfb\u5165\uff0c\u6211\u7ed9\u51fa\u4e86\u5982\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\ninline bool SP_read(int &goal){//\u5bf9\u5feb\u8bfb\u7a0d\u52a0\u6539\u52a8\n\tgoal = 0;\n\tregister char now;register bool state;//state\u8868\u793am\u6216h\uff0c\u8fd9\u91cc\u6211\u9009\u7528\u7684\u662fh\u4e3atrue\n\twhile (now = getchar(), now != 'h' && now != 'm')continue;//\u5403\u6389\u6240\u6709\u7684\u5176\u4ed6\u8f93\u5165\n\tstate = now == 'h';\n\twhile (now = getchar(), now < '0' || now > '9')continue;//\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u8f93\u5165\u4e0d\u89c4\u8303\n\twhile ('0' <= now && now <= '9'){\n\t\tgoal = (goal<<1) + (goal<<3) + (now^48);//\u9010\u6b65\u8d4b\u503c\n\t\tnow = getchar();\n\t}\n\treturn state;\n}\n```\n\n\u6700\u540e\uff0c\u6ce8\u610f\u6709\u591a\u7ec4\u6570\u636e\uff0c\u4f60\u9700\u8981\u521d\u59cb\u5316\u3002",
        "postTime": 1579528958,
        "uid": 125531,
        "name": "HansLimon",
        "ccfLevel": 0,
        "title": "TJ 2 P4171"
    },
    {
        "content": "\u6211\u4eec\u6ce8\u610f\u5230:\n\n1.\u4e00\u4e2a\u53a8\u5e08\u4e0d\u4f1a\u505a\u540c\u4e00\u79cd\u83dc\u80b4\u7684\u6ee1\u5f0f\u548c\u6c49\u5f0f\u505a\u6cd5.\n\n2.\u4e00\u4e2a\u53a8\u5e08\u5fc5\u987b\u8981\u505a\u540c\u4e00\u79cd\u83dc\u80b4\u7684\u6ee1\u5f0f\u548c\u6c49\u5f0f\u505a\u6cd5\u4e8c\u8005\u4e4b\u4e00.\n\n\u5bf9\u4e8en\u4e2a\u83dc\u80b4\u6211\u4eec\u62c64n\u4e2a\u70b9.\n\n\u5177\u4f53\u5730,\u5bf9\u4e8e\u7b2ci\u79cd\u83dc\u80b4:\n\n$2\\cdot i-1$ \u8868\u793a\u7b2ci\u79cd\u83dc\u80b4\u91c7\u53d6\u6ee1\u5f0f\u505a\u6cd5\n\n$2\\cdot i$ \u8868\u793a\u7b2ci\u79cd\u83dc\u80b4\u91c7\u53d6\u6c49\u5f0f\u505a\u6cd5\n\n$2\\cdot i-1+2\\cdot n$ \u8868\u793a\u7b2ci\u79cd\u83dc\u80b4\u4e0d\u91c7\u53d6\u6ee1\u5f0f\u505a\u6cd5\n\n$2\\cdot i+2\\cdot n$ \u8868\u793a\u7b2ci\u79cd\u83dc\u80b4\u4e0d\u91c7\u53d6\u6c49\u5f0f\u505a\u6cd5\n\n\u90a3\u4e48 \u5982\u679c\u4e00\u79cd\u83dc\u80b4\u4e0d\u7528\u6c49\u5f0f\u505a\u5c31\u5fc5\u987b\u7528\u6ee1\u5f0f\u505a,\n\n\u5982\u679c\u4e00\u79cd\u83dc\u80b4\u4e0d\u7528\u6ee1\u5f0f\u505a\u5c31\u5fc5\u987b\u7528\u6c49\u5f0f\u505a.\n\n\u73b0\u5728\u6211\u4eec\u6765\u8003\u8651$m$\u4e2a\u9650\u5236.\n\n\u5982\u679c$a,b$\u662f\u539f\u9898\u4e2d\u8bf4\u660e\u7684\u4e24\u4e2a\u9650\u5236.\n\n\u90a3\u4e48\u5982\u679c\u4e0d\u9009$a,b$\u7684\u5176\u4e2d\u4e00\u4e2a,\u4e00\u5b9a\u8981\u9009\u53e6\u4e00\u4e2a\u6765\u6ee1\u8db3\u9650\u5236.\n\n\u5269\u4e0b\u7684\u5c31\u662f2-sat\u597d\u620f\u4e86\n\n\n\u849f\u84bb\u7684\u4ee3\u7801:\n\n```\n#include<algorithm>\n#include<cctype>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<map>\n#include<queue>\n#include<stack>\n#include<vector>\n#define size 500010\n#define opp(x) (x>(n<<1)?x-(n<<1):x+(n<<1))\n#define clr(x) memset(x,0,sizeof(x))\n#define gc getchar()\n#define tp to[p]\n#define ll long long\n#define rep(i,s,n) for (register int i=s;i<=n;i++)\n#define drep(i,n,s) for (register int i=n;i>=s;i--)\n#define il inline\nusing namespace std;\n\nil ll r()\n{\n\tchar c; ll x,f=1;\n\tfor (c=gc;!isdigit(c);c=gc) if (c=='-') f=-1; x=c-'0';\n\tfor (c=gc;isdigit(c);c=gc) x=(x<<1)+(x<<3)+c-'0';\n\treturn f*x;\n}\n\nil int set()\n{\n\tchar c; int res; while (c=gc,c!='m'&&c!='h');res=r();\n\tif (c=='m') return 2*res-1; else return 2*res; \n}\n\nint head[size],to[size],nxt[size],num,dfn[size],low[size];\nint s[size],top,scc[size],scc_num,dfn_num,n,m;\nbool ins[size];\n\nvoid add(int x,int y) {num++; to[num]=y;nxt[num]=head[x];head[x]=num;}// printf(\"#%d %d\\n\",x,y);}\n\nvoid Tarjan(int x)\n{\n\tdfn[x]=low[x]=++dfn_num; s[++top]=x; ins[x]=1;\n\tfor (int p=head[x];p;p=nxt[p])\n\t\tif (!dfn[tp]) Tarjan(tp),low[x]=min(low[x],low[tp]);\n\t\t\telse if (ins[tp]) low[x]=min(low[x],dfn[tp]);\n\tif (low[x]==dfn[x])\n\t{\n\t\tscc[x]=++scc_num; ins[x]=0; int v;\n\t\twhile (v=s[top--],v!=x) ins[v]=0,scc[v]=scc_num;\n\t}\n}\n\nbool pd()\n{\n\tfor (int i=1;i<=(n<<2);i++) if (!dfn[i]) Tarjan(i);\n\trep(i,1,(n<<1)) if (scc[i]==scc[opp(i)]) return 0;\n\trep(i,1,n) if (scc[i*2]==scc[i*2-1]) return 0;  return 1;\n}\n\nvoid solve()\n{\n\tclr(head); clr(dfn); clr(ins);clr(low); top=num=dfn_num=scc_num=0;\n\tn=r(); m=r(); \n\trep(i,1,n<<1) \n\t{\n\t\tadd(opp(2*i-1),2*i); add(opp(2*i),2*i-1); \n\t}\n\trep(i,1,m)\n\t{\n\t\tint a=set(),b=set(); \n\t\tadd(opp(a),b); add(opp(b),a);\n\t}\n\tbool B=pd(); \n\tif (B) cout<<\"GOOD\"; else cout<<\"BAD\"; cout<<endl;\n}\n\nint main()\n{\n\tint T=r();\n\twhile (T--) solve();\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1520934549,
        "uid": 44273,
        "name": "\u786b\u4ee3\u786b\u9178\u94a0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u88f8\u7684 2-SAT \u7684\u6a21\u677f\uff0c\u5efa\u5b8c\u56fe\u8fd9\u9898\u57fa\u672c\u4e0a\u5c31\u7ed3\u675f\u4e86\n\n\u628a \u6c49/\u6ee1 \u770b\u4f5c\u5e03\u5c14\u503c\u3002\n\n\u8003\u8651\u4e00\u7ec4 $a, b$\uff0c\u8868\u793a $a$ \u6216 $b$ \u4e2d\u5fc5\u987b\u6709\u4e00\u4e2a\u6210\u7acb\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a\n\n- \u82e5\u4e0d\u9009 $b$ \u9009 $a$ \uff0c\u5219\u5fc5\u9009 $b'$ \n- \u82e5\u4e0d\u9009 $a$ \u9009 $b$ \uff0c\u5219\u5fc5\u9009 $a'$\n\n\u5176\u4e2d $x'$\u8868\u793a `!x` \uff0c\u5373 \u975ex \u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4ee4 x \u4e3a\u6ee1\u5f0f\uff0c x + n \u4e3a\u6c49\u5f0f \uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a 2-SAT \u6a21\u578b\u3002\u5bf9\u6839\u636e\u4e0a\u9762\u4e24\u4e2a\u539f\u5219\u5efa**\u5355\u5411\u8fb9**\n\n\u6700\u540e\uff0c\u5982\u679c\u540c\u4e00\u4e2a\u6750\u6599\u7684\u201c\u4e0d\u540c\u505a\u6cd5\u201d\u5728\u540c\u4e00\u4e2a SCC \u4e2d\uff0c\u5c31\u8f93\u51fa`BAD` \uff0c \u5426\u5219 `GOOD` \u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define min(x, y) x < y ? x : y\nusing namespace std;\nconst int N = 210, M = 2010;\nint T, n, m;\nstruct Edge { //\u57fa\u672c\u94fe\u5f0f\u524d\u5411\u661f\n    int to, next;\n} e[M];\nint head[N], ecnt;\nvoid addedge(int from, int to) {\n    e[++ecnt] = (Edge){to, head[from]};\n    head[from] = ecnt;\n}\n\nint read(char *opt) {//\u5904\u7406\u8bfb\u5165\u7684\u6750\u6599\u7f16\u53f7\n    int res = 0;\n    int i = 1;\n    while (opt[i] >= '0' && opt[i] <= '9') {\n        res = res * 10 + opt[i] - '0';\n        i++;\n    }\n    return res;\n}\n//tarjan\u677f\u5b50\nint dfn[N], low[N], color[N], tt, scc, top, sta[N];\nbool ins[N];\nvoid tarjan(int u) {\n    dfn[u] = low[u] = ++tt;\n    sta[++top] = u;\n    ins[u] = 1;\n    for (int i = head[u]; i; i = e[i].next) {\n        const int v = e[i].to;\n        if (!dfn[v]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n        } else if (ins[v])\n            low[u] = min(low[u], dfn[v]);\n    }\n    if (low[u] == dfn[u]) {\n        int tp;\n        scc++;\n        do {\n            tp = sta[top];\n            top--;\n            ins[tp] = 0;\n            color[tp] = scc;\n        } while (tp != u);\n    }\n}\n\nvoid solve() {\n    //\u8bb0\u5f97\u521d\u59cb\u5316\n    ecnt = tt = scc = 0;\n    memset(head, 0, sizeof(head));\n    memset(color, 0, sizeof(color));\n    memset(low, 0, sizeof(low));\n    memset(dfn, 0, sizeof(dfn));\n    memset(ins, 0, sizeof(ins));\n    bool NaOH_Frog_AK_IOI = 0;\n    scanf(\"%d%d\", &n, &m);\n    for (int x = 1; x <= m; x++) {\n        char opt[5], opt2[5];\n        scanf(\"%s%s\", opt, opt2);\n        int i = read(opt), j = read(opt2);\n        // cout << x << ' ' << y << endl;\n        if (opt[0] == 'm') {\n            if (opt2[0] == 'm')\n                addedge(i + n, j), addedge(j + n, i);\n            else\n                addedge(i + n, j + n), addedge(j, i);\n        } else {\n            if (opt2[0] == 'm')\n                addedge(i, j), addedge(j + n, i + n);\n            else\n                addedge(i, j + n), addedge(j, i + n);\n        }\n    }\n    for (int i = 1; i <= n << 1; i++)\n        if (!dfn[i])\n            tarjan(i);\n    for (int i = 1; i <= n; i++) {\n        if (color[i] == color[i + n]) {//\u4e24\u79cd\u505a\u6cd5\u5728\u540c\u4e00\u4e2a SCC \u91cc\n            NaOH_Frog_AK_IOI = 1;\n            break;\n        }\n    }\n    if (NaOH_Frog_AK_IOI)\n        printf(\"BAD\\n\");\n    else\n        printf(\"GOOD\\n\");\n}\nint main() {\n    scanf(\"%d\", &T);\n    while (T--)\n        solve();\n    return 0;\n}\n```",
        "postTime": 1596023017,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "$$\\Large\\href{https://www.cnblogs.com/zhenglw/p/11627289.html}{\\textcolor{red}{My Blog}}$$\n\n\n## \u663e\u7136\u662f2-SAT\u7684\u9898\u76ee\n\n\n### \u5f88\u591a\u9898\u89e3\u5199\u7684\u597d\u70e6\u554a...\u4e5f\u4e0d\u662f\u70e6\uff0c\u5c31\u662f\u5f88\u590d\u6742\uff0c\u770b\u7684\u4e0d\u660e\u767d\uff0c\u54ea\u4e2a\u70b9\u5bf9\u5e94\u7684\u54ea\u4e2a\u5e8f\u53f7\u5f88\u5bb9\u6613\u5f04\u9519\n\n\n------------\n\n\n### \u6240\u4ee5\u8fd9\u91cc\u5efa\u8bae\u5f00\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u5f53\u524d\u8fd9\u4e2a\u70b9\u9009\u6216\u8005\u4e0d\u9009\u7684\u7f16\u53f7\uff0c\u8fd9\u6837\u4e4b\u540e\u81ea\u5df1\u7406\u601d\u8def\u4e5f\u4f1a\u6e05\u695a\u4e00\u70b9\n\n\n------------\n\n\n~~\u7136\u800c\u6211\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\u624d\u53d1\u73b0\u6211\u662fTarjan\u5199\u9519\u4e86......~~\n\n \n\n------------\n\n\n\u8fd9\u9053\u9898\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u83dc\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u6bcf\u4e00\u79cd\u60c5\u51b5\u53c8\u6709\u9009\u548c\u4e0d\u9009\u4e24\u79cd\u65b9\u6848\n\n\u6240\u4ee5\u76f8\u5f53\u4e8e\u6bcf\u4e00\u4e2a\u83dc\u53ef\u4ee5\u62c6\u62104\u4e2a\u70b9 \n```\n\n1.    \u505a\u6cd5M-\u9009\n\n2.    \u505a\u6cd5M-\u4e0d\u9009\n\n3.    \u505a\u6cd5H-\u9009\n\n4.    \u505a\u6cd5H-\u4e0d\u9009\n\n ```\n\n\u663e\u7136\u9898\u76ee\u91cc\u7ed9\u7684\u6761\u4ef6\u662f**\u6216**\uff0c\u4f46\u662f\u4e0d\u53ea\u662f\u6709\u9898\u76ee\u91cc\u7ed9\u7684\u6761\u4ef6\uff0c\u8fd8\u6709**\u9690\u542b\u6761\u4ef6**\uff1a\u4e00\u9053\u83dc\u53ea\u80fd\u6709\u4e00\u79cd\u505a\u6cd5\uff01\n\n\u7136\u540e\u6309\u71672-sat\u7684\u5957\u8def\u5c31\u597d\u4e86\n\n\u4ee3\u7801\u91ccbb[i][j][k]\u6570\u7ec4\u8868\u793a\u5f53\u524d\u662f\u7b2ci\u9053\u83dc\uff0c\u505a\u6cd5\u662fj:1/2\uff0c\u9009\u6216\u8005\u4e0d\u9009\u662fk:0/1\n\n\u8fd9\u6837\u4e4b\u540e\u52a0\u8fb9\u7684\u65f6\u5019\u4f1a\u5f88\u7b80\u6d01\u660e\u4e86\n\n\n```cpp\n#include<bits/stdc++.h>\n#define writeln(x)  write(x),puts(\"\")\n#define writep(x)   write(x),putchar(' ')\nusing namespace std;\ninline int read(){\n    int ans=0,f=1;char chr=getchar();\n    while(!isdigit(chr)){if(chr=='-') f=-1;chr=getchar();}\n    while(isdigit(chr)){ans=(ans<<3)+(ans<<1)+chr-48;chr=getchar();}\n    return ans*f;\n}void write(int x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}const int M = 2e4+5;\nint head[M],nxt[M],ver[M],tot,T,n,m,bb[M][3][3],dfn[M],low[M],ins[M],sta[M],top,color,col[M];\nchar s1[M],s2[M];\nstruct Judge{int type[2],x[2];}J[M];//\u88c1\u5224\u7ed9\u7684\u6761\u4ef6\ninline void add(int x,int y){ver[++tot]=y,nxt[tot]=head[x],head[x]=tot;}\nvoid Tarjan(int x){\n    dfn[x]=low[x]=++T;ins[x]=1;sta[top++]=x;\n    for(int i=head[x];i;i=nxt[i]){\n        if(!dfn[ver[i]])Tarjan(ver[i]),low[x]=min(low[x],low[ver[i]]);\n        else if(ins[ver[i]]==1) low[x]=min(low[x],dfn[ver[i]]);\n    }if(low[x]==dfn[x]){++color;\n        do{    col[sta[--top]]=color;\n            ins[sta[top]]=-1;\n        }while(sta[top]!=x);\n    }return;\n}inline void Init(){\n    memset(low,0,sizeof(low)),memset(dfn,0,sizeof(dfn)),memset(ins,0,sizeof(ins));\n    memset(col,0,sizeof(col)),memset(head,0,sizeof(head));tot=T=color=0;\n    n=read(),m=read();\n    for(int i=1;i<=m;i++){\n        scanf(\"%s%s\",s1,s2);\n        int l1=strlen(s1),l2=strlen(s2);\n        if(s1[0]=='m')J[i].type[0]=1;else J[i].type[0]=2;\n        if(s2[0]=='m')J[i].type[1]=1;else J[i].type[1]=2;\n        int p=1,ans=0;\n        while(isdigit(s1[p])&&p<=l1){ans=(ans<<3)+(ans<<1)+s1[p]-48;++p;}\n        J[i].x[0]=ans;p=1,ans=0;\n        while(isdigit(s2[p])&&p<=l2){ans=(ans<<3)+(ans<<1)+s2[p]-48;++p;}\n        J[i].x[1]=ans;\n    }return;//\u6761\u4ef6\u5904\u7406\n}inline void Make_Graph(){\n    for(int i=1;i<=n;i++)bb[i][1][1]=i,bb[i][1][0]=n+i,bb[i][2][1]=2*n+i,bb[i][2][0]=3*n+i;//\u9884\u5904\u7406\u6bcf\u79cd\u60c5\u51b5\u5bf9\u5e94\u7684\u70b9\u53f7\n    for(int i=1;i<=m;i++){\n        int x=J[i].type[0],a=J[i].x[0],y=J[i].type[1],b=J[i].x[1];\n        add(bb[a][x][0],bb[b][y][1]),add(bb[b][y][0],bb[a][x][1]);//\u9898\u76ee\u7ed9\u7684\u6761\u4ef6\n        add(bb[i][1][1],bb[i][2][0]),add(bb[i][2][1],bb[i][1][0]);//\u9690\u542b\u6761\u4ef6\n    }\n}inline void Solve(){\n    for(int i=1;i<=n*4;i++)if(!dfn[i])Tarjan(i);\n    for(int i=1;i<=n;i++)if(col[bb[i][1][0]]==col[bb[i][1][1]]||col[bb[i][2][1]]==col[bb[i][2][0]])return puts(\"BAD\"),void();\n    puts(\"GOOD\");//2-SAT\u5957\u8def\u64cd\u4f5c\n}int main(){\n    int T=read();\n    while(T--)Init(),Make_Graph(),Solve();\n    return 0;\n}\n```",
        "postTime": 1570344945,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "### \u8fd9\u9898\u9898\u89e3\u597d\u795e\u5947\u554a\u3002\u3002\n\u96be\u9053\u4e0d\u5c31\u662f\u6700\u88f8\u76842-SAT\u95ee\u9898\u5417~~\uff08\u867d\u7136\u6211\u6570\u7ec4\u5f00\u5c0f\u5d29\u4e86N\u6b21\uff09~~\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u62c6\u6210$2i$\u4e0e$2i+1$\u5206\u522b\u8868\u793a$x_i$\u4e3a1/0\uff08\u6c49\u5f0f/\u6ee1\u5f0f\uff09\n\u90a3\u4e48\u6bcf\u4e2a\u6761\u4ef6\u5c31\u662f\u76f8\u5f53\u4e8e\n> #### $x_i$\u4e3a1\u6216$x_j$\u4e3a1\n\n\u90a3\u4e48\n\n> \u4e0d\u9009$x_i$\u9009$x_{i}^{'}$\u5c31\u5fc5\u9009$x_j$\n\n> \u4e0d\u9009$x_j$\u9009$x_{j}^{'}$\u5c31\u5fc5\u9009$x_i$\n\n\u7136\u540e\u59572-SAT\u6a21\u677f\u5c31\u597d\u4e86\n\n```java\n#include<bits/stdc++.h>\n#define gt() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++)\n#define pt(ch) (Top<1000000?St[Top++]=ch:(Out(),St[(Top=0)++]=ch))\n#define Out() (fwrite(St,1,Top,stdout))\nusing namespace std;\nint Top;static char St[1000000],buf[1000000],*p1=buf,*p2=buf;\nconst int maxn=205,maxE=(2e3)+5;\nint T;\nint read(){\n\tint ret=0;char ch=gt();\n\twhile(ch<'0'||ch>'9') ch=gt();\n\twhile(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=gt();\n\treturn ret;\n}\nchar red(){char ch=gt();while(ch!='m'&&ch!='h') ch=gt();return ch;}\nvoid write(int x){if(x<0) x=-x,pt('-');if(x>9) write(x/10);pt(x%10+'0');}\nstruct TwoSAT{\n\tint N,M,NN,top,stk[maxn];bool vis[maxn];\n\tint tot,lnk[maxn],nxt[maxE],son[maxE];\n\tvoid add_e(int x,int y){son[++tot]=y,nxt[tot]=lnk[x],lnk[x]=tot;}\n\tvoid inti(){\n\t\tN=read(),M=read(),NN=N<<1;\n\t\tfor(int i=1;i<=NN+1;i++) lnk[i]=vis[i]=0;tot=0;\n\t\twhile(M--){\n\t\t\tchar x_=red();int x=(read()<<1)|(x_=='h');\n\t\t\tchar y_=red();int y=(read()<<1)|(y_=='h');\n\t\t\tadd_e(x^1,y),add_e(y^1,x);\n\t\t}\n\t}\n\tbool Dfs(int x){\n\t\tif(vis[x]) return 1;\n\t\tif(vis[x^1]) return 0;\n\t\tvis[x]=1,stk[++top]=x;\n\t\tfor(int j=lnk[x];j;j=nxt[j]) if(!Dfs(son[j])) return 0;\n\t\treturn 1;\n\t}\n\tvoid solve(){\n\t\tfor(int i=2;i<=NN;i+=2)if(!vis[i]&&!vis[i^1]){\n\t\t\ttop=0;\n\t\t\tif(!Dfs(i)){\n\t\t\t\twhile(top) vis[stk[top--]]=0;\n\t\t\t\tif(!Dfs(i^1)) return (void)(puts(\"BAD\"));\n\t\t\t}\n\t\t}\n\t\treturn (void)(puts(\"GOOD\"));\n\t}\n}P;\nint main(){\n\t#ifdef hhh\n\tfreopen(\"data.in\",\"r\",stdin);\n\tfreopen(\"data.out\",\"w\",stdout);\n\t#endif\n\tT=read();while(T--) P.inti(),P.solve();\n    return 0;\n}\n```\n",
        "postTime": 1551921905,
        "uid": 36779,
        "name": "ff_666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "### $2-SAT$\n\n\u597d\u88f8......\n\n\u9898\u610f\uff1a $n$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u4e24\u79cd\u51b3\u7b56 $0$ \u548c $1$ \uff0c\u9700\u8981\u6ee1\u8db3 $m$ \u6761\u9650\u5236\uff0c\u95ee\u662f\u5426\u6709\u89e3\u3002\n\n $m$ \u6761\u9650\u5236\uff0c\u5f62\u5982\uff1a$(i,p,j,q)$ \uff0c\u8868\u793a\uff1a $i$ \u4e3a $p$ \u6216\u8005 $j$ \u4e3a $q$ \u3002\u5176\u4e2d $p,q\\in \\{0,1\\}$\u3002\n \n\n\n\u8f6c\u5316\u4e3a\uff1a\u82e5 $i$ \u9009 $1-p$ \uff0c\u5219 $j$ \u5fc5\u9009 $q$ \uff1b\u82e5 $j$ \u9009 $1-q$ \uff0c $i$ \u5fc5\u9009 $p$ \uff0c\u7136\u540e\u5c31\u662f\u677f\u5b50\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int amou=2e5+90;\n\nint n,m;\nint dfn[amou],low[amou],timestamp;\nint stac[amou],top,in_stac[amou];\nint col[amou],scc_cnt;\nint nxt[amou],head[amou],ver[amou],cnt;\n\nvoid add(int a,int b){\n\tnxt[++cnt]=head[a],head[a]=cnt,ver[cnt]=b;\n}\n\nvoid init(){\n\tcnt=scc_cnt=timestamp=top=0;\n\tmemset(head,0,sizeof head);\n\tmemset(nxt,0,sizeof nxt);\n\tmemset(dfn,0,sizeof dfn);\n}\n\nint opp(int i){\n\tif(i>n) return i-n;\n\treturn i+n;\n}\n\nvoid Tarjan(int i){\n\tdfn[i]=low[i]=++timestamp;\n\tstac[++top]=i,in_stac[i]=1;\n\tfor(int io=head[i];io;io=nxt[io])\n\t{\n\t\tint v=ver[io];\n\t\tif(!dfn[v])\n\t\t{\n\t\t\tTarjan(v);\n\t\t\tlow[i]=min(low[i],low[v]);\n\t\t}\n\t\telse if(in_stac[v]) low[i]=min(low[i],dfn[v]);\n\t}\n\tif(dfn[i]==low[i])\n\t{\n\t\tscc_cnt++;\n\t\tint p;\n\t\tdo\n\t\t{\n\t\t\tp=stac[top--];\n\t\t\tin_stac[p]=0;\n\t\t\tcol[p]=scc_cnt;\n\t\t}while(p!=i);\n\t}\n}\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tinit();\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tchar a,c;int b,d;\n\t\t\tcin>>a>>b>>c>>d;//m\u4e3a\u51b3\u7b560\uff0c\u7f16\u53f71~n\uff1bh\u4e3a\u51b3\u7b561\uff0c\u7f16\u53f7n+1~2n\n\t\t\tif(a=='h') b+=n;\n\t\t\tif(c=='h') d+=n;\n\t\t\tadd(b,opp(d));add(d,opp(b));\n\t\t}\n\t\tfor(int i=1;i<=2*n;i++)\n\t\t\tif(!dfn[i]) Tarjan(i);\n\t\tbool fl=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(col[i]==col[i+n]) fl=1;\n\t\tif(fl) printf(\"BAD\\n\");\n\t\telse printf(\"GOOD\\n\");\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1623053256,
        "uid": 280519,
        "name": "Yaha",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4171\u3010[JSOI2010] \u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "\u8bf4\u767d\u4e86\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a $\\texttt{2-SAT}$ \u7684\u6a21\u677f\u9898\uff0c\u5927\u81f4\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u90e8\u5206\u3002\n\n\u9996\u5148\u662f\u5bf9\u4e8e\u6570\u636e\u7684\u5904\u7406\u3002\u6bcf\u4e00\u4e2a\u8bc4\u5ba1\u5458\u7684\u8f93\u5165\u90fd\u662f\u4e24\u4e2a**\u5b57\u7b26\u4e32**\uff0c\u800c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u662f\u7531\u5b57\u6bcd $h/m$ \u518d\u52a0\u4e0a\u6750\u6599\u7f16\u53f7\u7ec4\u6210\u7684\u3002\u56e0\u6b64\u53ea\u9700\u8981\u5c06\u5176\u7528 `%s` \u8bfb\u5165\u540e\u5206\u5f00\u5904\u7406\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\u5efa\u56fe\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6c49\u4e0e\u6ee1\u5206\u522b\u770b\u6210 $0$ \u548c $1$\uff0c\u7136\u540e\u6839\u636e\u4e24\u4e2a\u6761\u4ef6\u53ea\u8981\u6ee1\u8db3\u5176\u4e00(\u4e5f\u5c31\u662f**\u6216**)\u7684\u539f\u5219\u8fdb\u884c**\u5efa\u56fe**\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u82e5 $a,b$ \u4e24\u4e2a\u6570\u7684\u503c\u5747\u4e3a $1$\uff0c\u4e5f\u5c31\u662f\u8bf4 $a,b$ \u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u7684\u503c\u4e3a $1$\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u5efa\u51fa\u7684\u4e24\u6761\u8fb9\u662f $a = 0$ \u63a8\u51fa $b = 1$ \u4e0e $b = 0$ \u63a8\u51fa $a = 1$\u3002\n\n\u6700\u540e\u5c31\u662f\u4f7f\u7528 $\\texttt{tarjan}$ \u7b97\u6cd5\u6c42\u51fa**\u5f3a\u8fde\u901a\u5206\u91cf**\uff0c\u7136\u540e\u5224\u65ad\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u662f\u5426\u5b58\u5728\u4e00\u79cd\u6750\u6599\u7684\u503c\u65e2\u6709 $0$ \u53c8\u6709 $1$\u3002\u82e5\u51fa\u73b0\u8fd9\u79cd\u72b6\u6001\uff0c\u5c31\u8bf4\u660e\u8be5\u6750\u6599\u65e2\u9700\u8981\u505a\u6210\u6c49\u5f0f\uff0c\u4e5f\u9700\u8981\u505a\u6210\u6ee1\u5f0f\uff0c\u56e0\u6b64\u6761\u4ef6\u5b58\u5728\u77db\u76fe\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u8981\u8f93\u51fa\u7684\u662f `BAD`\uff1b\u5426\u5219\u8f93\u51fa `GOOD`\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\n#include <stack>\n#include <cstring>\n#define init(x) memset (x,0,sizeof (x))\nusing namespace std;\nconst int MAX = 1e3 + 5;\nstack <int> s;\nbool ok;\nint n,m,t,cnt,times,scc_cnt;\nint head[MAX << 1],nxt[MAX << 1],to[MAX << 1],dfn[MAX << 1],low[MAX << 1],scc[MAX << 1];\nvoid pre ();\nvoid build (int num1,bool ty1,int num2,bool ty2);\nvoid _add (int u,int v);\nvoid tarjan (int u);\nint main ()\n{\n\t//freopen (\".in\",\"r\",stdin);\n\t//freopen (\".out\",\"w\",stdout);\n\tscanf (\"%d\",&t);\n\twhile (t--)\n\t{\n\t\tpre ();//\u521d\u59cb\u5316\u5f88\u91cd\u8981\n\t\tscanf (\"%d%d\",&n,&m);\n\t\t//\u6c49 0 \u6ee1 1 \n\t\tfor (int i = 1;i <= m;++i)\n\t\t{\n\t\t\tchar da[1000],db[1000];\n\t\t\tint a = 0,b,c = 0,d;\n\t\t\tscanf (\"%s %s\",da,db);\n\t\t\tif (da[0] == 'h') b = 0;\n\t\t\telse b = 1;\n\t\t\tif (db[0] == 'h') d = 0;\n\t\t\telse d = 1;\n\t\t\tfor (int i = 1;i < strlen (da);++i) a = a * 10 + da[i] - '0';\n\t\t\tfor (int i = 1;i < strlen (db);++i) c = c * 10 + db[i] - '0';\n\t\t\tbuild (a,b,c,d);\n\t\t} \n\t\tfor (int i = 1;i <= 2 * n;++i)\t\n\t\t\tif (!dfn[i]) tarjan (i);\n\t\tfor (int i = 1;i <= n;++i)//\u662f\u5426\u5b58\u5728\u77db\u76fe\n\t\t{\n\t\t\tif (scc[i] == scc[i + n])\n\t\t\t{\n\t\t\t\tok = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (ok) puts (\"GOOD\");\n\t\telse puts (\"BAD\"); \n\t}\n\treturn 0;\n}\nvoid pre ()\n{\n\tcnt = times = scc_cnt = 0;\n\tok = 1;\n\tinit (head);init (nxt);init (to);\n\tinit (dfn);init (low);init (scc);\n}\nvoid build (int num1,bool ty1,int num2,bool ty2)//\u5efa\u56fe\u8fc7\u7a0b\n{\n\tif (!ty1 && !ty2)// the first one is false or the second one is false\n\t{\n\t\t_add (num1,num2 + n);// we know the first one is true so we can infer the second one is false\n\t\t_add (num2,num1 + n);\n\t}\n\tif (!ty1 && ty2)// the first one is false or the second one is true\n\t{\n\t\t_add (num1,num2);// we know the first one is true so we can infer the second one is true\n\t\t_add (num2 + n,num1 + n);\n\t}\n\tif (ty1 && !ty2)// the first one is true or the second one is false\n\t{\n\t\t_add (num1 + n,num2 + n);// we know the first one is false so we can infer the second one is false\n\t\t_add (num2,num1);\n\t}\n\tif (ty1 && ty2)// the first one is true or the second one is true\n\t{\n\t\t_add (num1 + n,num2);// we know the first one is false so we can infer the second one is true\n\t\t_add (num2 + n,num1);\n\t}\n} \nvoid _add (int u,int v)//\u8fde\u8fb9\n{\n\tto[++cnt] = v;\n\tnxt[cnt] = head[u];\n\thead[u] = cnt;\n}\nvoid tarjan (int u)//\u5f3a\u8fde\u901a\u5206\u91cf\n{\n\tdfn[u] = low[u] = ++times;\n\ts.push (u);\n\tfor (int i = head[u];i;i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif (!dfn[v])\n\t\t{\n\t\t\ttarjan (v);\n\t\t\tlow[u] = min (low[u],low[v]);\n\t\t}\n\t\telse if (!scc[v]) low[u] = min (low[u],dfn[v]);\n\t}\n\tif (low[u] == dfn[u])\n\t{\n\t\t++scc_cnt;\n\t\twhile (1)\n\t\t{\n\t\t\tint x = s.top ();\n\t\t\ts.pop ();\n\t\t\tscc[x] = scc_cnt;\n\t\t\tif (x == u) break; \n\t\t}\n\t}\n}\n```",
        "postTime": 1607768619,
        "uid": 183603,
        "name": "SUNCHAOYI",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "#### \u524d\u8a00\n\u7531\u4e8e\u849f\u84bb\u624d\u521a\u5f00\u59cb\u5b66 $\\text{2-SAT}$\uff0c\u6240\u4ee5\u9898\u89e3\u4e2d\u6709\u7684\u5730\u65b9\u53ef\u80fd\u4e0d\u591f\u7cbe\u70bc\uff0c\u671b\u591a\u5305\u6db5\uff01  \n### \u9898\u76ee\u63cf\u8ff0\n\u9898\u76ee\u610f\u601d\u5f88\u7b80\u5355\uff0c\u6807\u51c6\u7684$\\text{2-SAT}$\u95ee\u9898\u6a21\u578b\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b $\\text{2-SAT}$ \uff08\u4ee5\u4e0b\u662f\u4e2a\u4eba\u7684\u5c0f\u5c0f\u6982\u62ec\uff09  \n$\\text{2-SAT}$ \u95ee\u9898\uff0c\u62bd\u8c61\u5316\u4e00\u4e0b\uff0c\u662f\u8fd9\u6837\u7684\uff1a  \n\u7ed9\u51fa $n$ \u4e2a\u5e03\u5c14\u53d8\u91cf $\\{x_n\\}$\uff0c\u4ee5\u53ca $m$ \u4e2a\u547d\u9898 $(a,aa,b,bb)$\uff0c\u4e00\u4e2a\u547d\u9898\u6210\u7acb\u7684\u6761\u4ef6\u662f$[x_a=aa]\\lor[x_b=bb]$  \n\u73b0\u5728\u5c31\u662f\u8981\u5224\u65ad\u662f\u5426\u4e00\u79cd\u65b9\u6848\uff0c\u5c06$\\{x_n\\}$\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8d4b\u4e00\u4e2a\u503c\uff0c\u4f7f\u6240\u6709\u7684$m$\u4e2a\u547d\u9898\u6210\u7acb  \n\u5bf9\u4e8e\u8fd9\u79cd\u95ee\u9898\uff0c\u6211\u4eec\u7528\u4e00\u4e0b\u65b9\u6cd5\u6765\u5efa\u7acb\u56fe\u7684\u6a21\u578b\uff1a  \n\u5bf9\u4e8e $n$ \u4e2a\u4e0d\u540c\u53d8\u91cf $x$\uff0c\u6211\u4eec\u5c06\u5176\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a $x$ \u4e3a\u771f\u548c $x$ \u4e3a\u5047\uff08\u53ef\u4ee5\u7528 $i$ \u8868\u793a $x_i$ \u4e3a\u771f\uff0c$i+n$ \u8868\u793a $x_i$ \u4e3a\u5047\uff09  \n\n\u63a5\u4e0b\u6765\u5bf9\u4e8e\u6bcf\u4e00\u6761\u6709\u5411\u8fb9 $(a,b)$\uff0c\u6211\u4eec\u8d4b\u4e88\u5b83\u8fd9\u6837\u7684\u610f\u4e49\uff1a\u82e5 $a$ \u5e94\u8be5\u88ab\u6ee1\u8db3\uff0c\u5219 $b$ \u4e5f\u5fc5\u987b\u88ab\u6ee1\u8db3  \n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u65b9\u6cd5\u5224\u5b9a\u6709\u65e0\u89e3\uff1a\n\n+ \u6709\u89e3\u7684\u60c5\u51b5\uff1a$\\forall\\ i\\in n$, $i$ \u548c $i+n$ \u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n+ \u65e0\u89e3\u7684\u60c5\u51b5\uff1a$\\exists\\ i\\in n$, $i$ \u548c $i+n$ \u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u56e0\u4e3a\u6309\u7167\u6211\u4eec\u4e0a\u9762\u7684\u5efa\u8fb9\u65b9\u6cd5\uff0c\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4e24\u4e2a\u70b9\u4ed6\u4eec\u6240\u4ee3\u8868\u7684\u547d\u9898\u662f\u8981\u540c\u65f6\u4e3a\u771f\u7684\u3002  \n\u800c\u56e0\u4e3a\u540c\u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf $x$ \u4e0d\u4f1a\u540c\u65f6\u6709\u4e24\u79cd\u503c\uff0c\u6240\u4ee5\u4ee5\u4e0a\u5224\u65ad\u65b9\u6cd5\u7684\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\u3002  \n\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u5efa\u597d\u56fe\uff0c\u8dd1\u4e00\u904d $\\text{Tarjan}$ \u518d\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u5224\u65ad\u5373\u53ef\u3002  \n\u90a3\u4e48\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u6700\u91cd\u8981\u7684\u4e00\u6b65\uff1a\u5982\u4f55\u5efa\u56fe\uff1f  \n\u5176\u5b9e\u8fd9\u5e76\u4e0d\u96be\uff0c\u53ea\u8981\u80fd\u62bd\u8c61\u51fa $\\{x_n\\}$ \u548c $m$ \u4e2a\u547d\u9898\u5c31\u597d\uff0c\u4ee5\u8fd9\u9053\u9898\u4e3a\u4f8b\uff0c\u52a0\u6df1\u4e00\u4e0b\u7406\u89e3\u3002\n\n----\n### \u57fa\u672c\u601d\u8def\n\u6211\u4eec\u628a$n$\u6837\u98df\u6750\u62bd\u8c61\u6210$\\{x_n\\}$\uff0c\u7b2c $i$ \u6837\u98df\u6750\u505a\u6210\u6c49\u5f0f\u8868\u793a $x_i$ \u4e3a\u771f\uff08\u70b9 $i$\uff09\uff0c\u53cd\u4e4b\u8868\u793a $x_i$ \u4e3a\u5047\uff08\u70b9 $i+n$\uff09  \n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u8bc4\u5ba1\u7684\u9700\u6c42\uff0c\u4e5f\u7c7b\u4f3c\u5730\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u62bd\u8c61\u4e00\u4e0b  \n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u9879\u9700\u6c42\u7ed9\u51fa\u7684\u4e24\u4e2a\u547d\u9898 $p,q$\uff0c\u6211\u4eec\u8fde\u4e24\u6761\u8fb9 $(\\lnot p,q)$ \u548c $(\\lnot q, p)$  \n\uff08\u81f3\u4e8e\u8fd9\u91cc\u7684 $p$ \u548c $q$\u662f\u4ec0\u4e48\uff0c\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u4e00\u4e0b\uff09\n\n----\n### \u7ec6\u8282\u6ce8\u610f\u4e8b\u9879\n+ \u7531\u4e8e\u6211\u4eec\u7684 $n$ \u6837\u98df\u6750\u4f1a\u88ab\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u6240\u4ee5\u70b9\u7684\u7a7a\u95f4\u8981\u5f00\u4e24\u500d\u3002  \n+ \u7531\u4e8e\u6211\u4eec\u7684 $m$ \u9879\u9700\u6c42\u4f1a\u4ea7\u751f\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u8fb9\u7684\u7a7a\u95f4\u4e5f\u8981\u5f00\u4e24\u500d\u3002\n+ \u6bcf\u4e00\u6b21\u521d\u59cb\u5316\u65f6\uff0c\u5982\u679c\u7528$\\text{for}$\u5faa\u73af\u6e05\u7a7a\u6570\u7ec4\uff0c\u5343\u4e07\u8981\u6ce8\u610f\u679a\u4e3e\u7684\u4e0a\u754c\uff08\u89c1\u4e0a\u4e24\u6761\uff09\u3002\n\n----\n### \u53c2\u8003\u4ee3\u7801\n\u53ef\u80fd\u6211\u5199\u7684\u4e0d\u662f\u5f88\u597d\uff0c\u6ca1\u6709\u770b\u660e\u767d\u7684\u8bdd\u53ef\u4ee5\u7ed3\u5408\u6211\u7684\u4ee3\u7801\u7406\u89e3~~\u7ed9\u4e2a\u597d\u8bc4\u5427\u554a\u554a\u554a~~\n```cpp\n/*--------------------------------\n  Code name: meal.cpp\n  Author: The Ace Bee\n  This code is made by The Ace Bee\n--------------------------------*/\n#include <cstdio>\n#include <cstring>\n#define rg register\n#define fileopen(x)\t\t\t\t\t\t\t\t\\\n\tfreopen(x\".in\", \"r\", stdin);\t\t\t\t\\\n\tfreopen(x\".out\", \"w\", stdout);\n#define fileclose\t\t\t\t\t\t\t\t\\\n\tfclose(stdin);\t\t\t\t\t\t\t\t\\\n\tfclose(stdout);\nconst int MAXN = 233;\nconst int MAXM = 2333;\ninline int min(int a, int b) { return a < b ? a : b; }\ninline int read() {\n\tint s = 0; bool f = false; char c = getchar();\n\twhile (c < '0' || c > '9') f |= (c == '-'), c = getchar();\n\twhile (c >= '0' && c <= '9') s = (s << 3) + (s << 1) + (c ^ 48), c = getchar();\n\treturn f ? -s : s;\n}\nint tot, head[MAXN], nxt[MAXM], ver[MAXM];\ninline void Add_edge(int u, int v)\n{ nxt[++tot] = head[u], head[u] = tot, ver[tot] = v; }\nint n, num, dfn[MAXN], low[MAXN];\nint st[MAXN], top, co[MAXN], col;\ninline void tarjan(int u) {\n\tdfn[u] = low[u] = ++num, st[++top] = u;\n\tfor (rg int v, i = head[u]; i; i = nxt[i]) {\n\t\tif (!dfn[v = ver[i]])\n\t\t\ttarjan(v), low[u] = min(low[u], low[v]);\n\t\telse\n\t\t\tif (!co[v]) low[u] = min(low[u], dfn[v]);\n\t}\n\tif (dfn[u] == low[u]) {\n\t\t++col;\n\t\tdo co[st[top]] = col, --top;\n\t\twhile (st[top + 1] != u);\n\t}\n}\ninline void init() {\n\ttot = col = num = top = 0;\n\tmemset(co, 0, sizeof co);\n\tmemset(dfn, 0, sizeof dfn);\n\tmemset(low, 0, sizeof low);\n\tmemset(head, 0, sizeof head);\n}\nint main() {\n//\tfileopen(\"meal\");\n\tchar sa[10], sb[10];\n\tfor (rg int T = read(); T; --T) {\n\t\tinit();\n\t\tint n = read();\n\t\tfor (rg int m = read(); m; --m) {\n\t\t\tscanf(\"%s%s\", sa, sb);\n\t\t\tint a = 0, lena = strlen(sa);\n\t\t\tfor (rg int i = 1; i < lena; ++i)\n\t\t\t\ta = (a << 3) + (a << 1) + (sa[i] ^ 48);\n\t\t\tint b = 0, lenb = strlen(sb);\n\t\t\tfor (rg int i = 1; i < lenb; ++i)\n\t\t\t\tb = (b << 3) + (b << 1) + (sb[i] ^ 48);\n\t\t\tif (sa[0] == 'h' && sb[0] == 'h')\n\t\t\t\tAdd_edge(a + n, b), Add_edge(b + n, a);\n\t\t\telse if (sa[0] == 'h' && sb[0] == 'm')\n\t\t\t\tAdd_edge(a + n, b + n), Add_edge(b, a);\n\t\t\telse if (sa[0] == 'm' && sb[0] == 'h')\n\t\t\t\tAdd_edge(a, b), Add_edge(b + n, a + n);\n\t\t\telse if (sa[0] == 'm' && sb[0] == 'm')\n\t\t\t\tAdd_edge(a, b + n), Add_edge(b, a + n);\n\t\t}\n\t\tfor (rg int i = 1; i <= n << 1; ++i)\n\t\t\tif (!dfn[i]) tarjan(i);\n\t\tint flag = 1;\n\t\tfor (rg int i = 1; i <= n; ++i)\n\t\t\tif (co[i] == co[i + n]) { flag = 0; break; }\n\t\tputs(flag ? \"GOOD\" : \"BAD\");\n\t}\n//\tfileclose;\n\treturn 0;\n}\n\n```\n\n**\u5b8c\u7ed3\u6492\u82b1 $qwq$**",
        "postTime": 1564285273,
        "uid": 87839,
        "name": "Sangber",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\n\u4e00\u9053\u5f88\u660e\u663e 2-SAT \u7684\u9898\u3002\n\n## \u9010\u6b65\u5b9e\u73b0\n\n#### Part1\uff1a\u8f93\u5165\n\n\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u52a0\u4e00\u4e2a\u6570\u5b57\uff0c\u5f88\u660e\u663e $\\texttt{getchar}$\u3002\n\n```cpp\nbool get_char(){\n\tchar ch=getchar();\n\twhile(ch!='m'&&ch!='h') ch=getchar();\n\treturn ch=='m'?true:false;\n}\nint read(){\n\tchar ch=getchar();\n\tint s=0;\n\twhile(ch>'9'||ch<'0') ch=getchar();\n\twhile(ch<='9'&&ch>='0') s=(s<<1)+(s<<3)+(ch-'0'),ch=getchar();\n\treturn s;\n}\n```\n\n\n#### Part2\uff1a\u5efa\u56fe\n\n\u6ee1\u5f0f\u548c\u6c49\u5f0f\u76f8\u5bf9\u7acb\uff0c\u62c6\u6210\u4e24\u4e2a\u70b9\u5c31\u597d\u3002\n\n\u6211\u7ed9\u5927\u5bb6\u63a8\u8350\u4e00\u4e2a\u65b0\u7684\u5efa\u56fe\u65b9\u5f0f\uff0c\u6bd4\u56db\u4e2a $\\texttt{if}$ \u7b80\u6d01\uff08\n\n```cpp\nfor(register int i=1;i<=m;i++){\n\tbool u=get_char();int x=read();\n\tbool v=get_char();int y=read();\n\tadd(x+n*(u&1),y+n*(v^1));\n\tadd(y+n*(v&1),x+n*(u^1));\n}\n```\n\n**\u6ce8\u610f\u90bb\u63a5\u8868\u8981\u521d\u59cb\u5316\uff01**\n\n#### Part3\uff1a$\\texttt{Tarjan}$\n\n\u65e2\u7136\u662f 2-SAT\uff0c\u5c31\u6253\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u76f4\u63a5\u5957\u677f\u5b50\u5c31\u597d\uff08\u6211\u662f\u624b\u6253\u7684\u5c01\u88c5\u6808\uff08\u5e38\u6570\u5c0f\u53c8\u9002\u5e94\u81ea\u5df1\u5e73\u5e38\u7684\u6253\u6cd5\uff09\uff09\u3002\n\n```cpp\nstruct Stack{\n\tint stack[N],top;\n\tvoid push(int x){stack[++top]=x;}\n\tvoid pop(){top--;}\n\tint front(){return stack[top];}\n\tvoid init(){memset(stack,0,sizeof(stack)),top=0;}\n}st;\nvoid tarjan(int x){\n\tdfn[x]=low[x]=++tot;\n\tst.push(x),vis[x]=true;\n\tfor(register int i=head[x];i;i=a[i].nxt){\n\t\tint y=a[i].to;\n\t\tif(!dfn[y]) tarjan(y),low[x]=min(low[x],low[y]);\n\t\telse if(vis[y]) low[x]=min(low[x],dfn[y]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tans++;\n\t\twhile(1){\n\t\t\tint s=st.front();\n\t\t\tst.pop();\n\t\t\tfrom[s]=ans;\n\t\t\tvis[s]=false;\n\t\t\tif(s==x) break;\n\t\t}\n\t}\n}\n```\n#### Part4\uff1a\u8f93\u51fa\n\n\u904d\u5386\u4e00\u904d\uff0c\u5982\u679c $i$ \u4e0e $i+n$ \u5c5e\u4e8e\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5c31\u6709\u9009\u624b\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u5982\u679c\u6ca1\u6709\u4e0a\u8ff0\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5\u3002\n\n**\u4e00\u5b9a\u8981\u8bb0\u5f97\u591a\u7ec4\u6570\u636e\u521d\u59cb\u5316\uff01\uff01**\n\n## \u603b\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e4+5;\nbool vis[N];\nint T,n,m,head[N],cnt,tot,ans,from[N],dfn[N],low[N];\nstruct edge{\n\tint to,nxt;\n\tvoid init(){to=0,nxt=0;}\n}a[N];\nstruct Stack{\n\tint stack[N],top;\n\tvoid push(int x){stack[++top]=x;}\n\tvoid pop(){top--;}\n\tint front(){return stack[top];}\n\tvoid init(){memset(stack,0,sizeof(stack)),top=0;}\n}st;\nvoid add(int x,int y){\n\ta[++cnt].to=y;\n\ta[cnt].nxt=head[x];\n\thead[x]=cnt;\n}\nbool get_char(){\n\tchar ch=getchar();\n\twhile(ch!='m'&&ch!='h') ch=getchar();\n\treturn ch=='m'?true:false;\n}\nint read(){\n\tchar ch=getchar();\n\tint s=0;\n\twhile(ch>'9'||ch<'0') ch=getchar();\n\twhile(ch<='9'&&ch>='0') s=(s<<1)+(s<<3)+(ch-'0'),ch=getchar();\n\treturn s;\n}\nvoid tarjan(int x){\n\tdfn[x]=low[x]=++tot;\n\tst.push(x),vis[x]=true;\n\tfor(register int i=head[x];i;i=a[i].nxt){\n\t\tint y=a[i].to;\n\t\tif(!dfn[y]) tarjan(y),low[x]=min(low[x],low[y]);\n\t\telse if(vis[y]) low[x]=min(low[x],dfn[y]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tans++;\n\t\twhile(1){\n\t\t\tint s=st.front();\n\t\t\tst.pop();\n\t\t\tfrom[s]=ans;\n\t\t\tvis[s]=false;\n\t\t\tif(s==x) break;\n\t\t}\n\t}\n}\nvoid init(){\n\tst.init();cnt=0,tot=0,ans=0;\n\tmemset(dfn,0,sizeof(dfn));\n\tmemset(low,0,sizeof(low));\n\tmemset(from,0,sizeof(from));\n\tmemset(vis,false,sizeof(vis));\n\tmemset(head,0,sizeof(head));\n}\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tinit();\n\t\tscanf(\"%d %d\",&n,&m);\n\t\tfor(register int i=1;i<=m;i++){\n\t\t\tbool u=get_char();int x=read();\n\t\t\tbool v=get_char();int y=read();\n\t\t\tadd(x+n*(u&1),y+n*(v^1));\n\t\t\tadd(y+n*(v&1),x+n*(u^1));\n\t\t}\n\t\tfor(register int i=1;i<=2*n;i++) if(!dfn[i]) tarjan(i);\n\t\tbool c=false;\n\t\tfor(register int i=1;i<=n;i++){\n\t\t\tif(from[i]==from[i+n]){\n\t\t\t\tputs(\"BAD\");\n\t\t\t\tc=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(c==false) puts(\"GOOD\");\n\t\tfor(register int i=1;i<=cnt;i++) a[i].init();\n\t}\n}\n```\n",
        "postTime": 1623501116,
        "uid": 380579,
        "name": "LRCAKIOI",
        "ccfLevel": 6,
        "title": "[P4171] [JSOI2010] \u6ee1\u6c49\u5168\u5e2d"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\n\n\u6bcf\u4e00\u79cd\u6750\u6599\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u6ee1\u5f0f\u548c\u6c49\u5f0f\u3002\n\n\u800c\u4e14\uff0c\u6bcf\u4e2a\u8bc4\u59d4\u4f1a\u5bf9\u5176\u4e2d\u7684\u4e24\u4e2a\u6750\u6599\u505a\u51fa\u81ea\u5df1\u7684\u8981\u6c42\uff08\u9009\u62e9\u4e00\u4e2a\u72b6\u6001\uff09\n\n\u5f88\u5bb9\u6613\u60f3\u5230 2-SAT\u3002\n\n\u9996\u5148\u5148\u89c4\u5b9a\uff0c\u72b6\u6001\u4e3a\u6ee1\u5f0f\u7684\u98df\u6750\uff0c\u8bb0\u4f5c `1`,\u72b6\u6001\u4e3a\u6c49\u5f0f\u7684\u98df\u6750\uff0c\u8bb0\u4e3a `0`\u3002\n\n\u4ece\u6a21\u677f[2-SAT \u95ee\u9898](https://www.luogu.com.cn/problem/P4782)\u5165\u624b\u3002\n\n\u4e00\u4e2a\u8bc4\u59d4\u4f1a\u5bf9 $x_i$ \u548c $x_j$ \u8fd9\u4e24\u4e2a\u98df\u6750\u505a\u51fa\u8981\u6c42\u3002\n\n\u5148\u5224\u65ad\u8bc4\u59d4\u5bf9\u4e24\u4e2a\u98df\u6750\u7684\u8981\u6c42\u662f\u6ee1\u5f0f\u8fd8\u662f\u6c49\u5f0f\uff08\u5373 `0` \u6216 `1`\uff09\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff1a\n\n```\nm3 h1\nm1 m2\nh1 h3\nh3 m2\n```\n\u6211\u4eec\u6309\u6a21\u677f\u9898\u7684\u8f93\u5165\u65b9\u5f0f\u3002\n\n\u7b2c\u4e00\u4e2a\u8bc4\u59d4\uff1a $x_3$  $1$ \u6216 $x_1$  $0$\n\n\u7b2c\u4e8c\u4e2a\u8bc4\u59d4\uff1a  $x_1$  $1$ \u6216 $x_2$  $1$\n\n\u7b2c\u4e09\u4e2a\u8bc4\u59d4\uff1a $x_1$  $0$ \u6216 $x_3$  $0$\n\n\u7b2c\u56db\u4e2a\u8bc4\u59d4\uff1a $x_3$  $0$ \u6216 $x_2$  $1$\n\n\u663e\u7136\u8fd9\u5c31\u662f\u4e00\u4e2a 2_SAT \u6a21\u677f\uff0c\u76f4\u63a5\u4e0a\u677f\u5b50\u5c31\u597d\u4e86\u3002\n\n**\u6ce8\u610f**\uff1a\u56e0\u4e3a\u6bcf\u79cd\u98df\u6750\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u6570\u7ec4\u8981\u5f00\u4e8c\u500d\u7a7a\u95f4\u3002\n\n\u5bf9\u4e8e\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u5c31\u662f\u4e24\u79cd\u72b6\u6001\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\u91cc\uff0c\u8f93\u51fa `BAD` \u5c31\u597d\u4e86\u3002\n\n**\u8bb0\u5f97\u521d\u59cb\u5316**\n\n### AC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=2e2+1,M=4e4+1;\nint k;\nint n,m;\nstruct edge{\n\tint to,ne;\n}e[M];\nint adj[N],l;\nint dfn[N],low[N],vis[N],st[N],top,bel[N];\nint cnt,le,trap;\ninline void add(int x,int y){e[++l].to=y,e[l].ne=adj[x],adj[x]=l;}\nvoid dfs(int x){\n\tdfn[x]=low[x]=++cnt;\n\tvis[x]=1;\n\tst[++top]=x;\n\tfor(int i=adj[x];i;i=e[i].ne){\n\t\tint y=e[i].to;\n\t\tif(!dfn[y]) dfs(y),low[x]=min(low[x],low[y]);\n\t\telse if(vis[y]) low[x]=min(low[x],dfn[y]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tle++;\n\t\twhile(top){\n\t\t\tint nx=st[top--];\n\t\t\tvis[nx]=0;\n\t\t\tbel[nx]=le;\n\t\t\tif(nx==x) break;\n\t\t}\n\t}\n}\ninline int get(){\n\tchar ch=getchar();\n\twhile(ch!='m'&&ch!='h') ch=getchar();\n\tif(ch=='m') return 1;\n\treturn 0;\n}\ninline int read(){\n\tchar ch=getchar();int s=0;\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') s=(s<<1)+(s<<3)+ch-'0',ch=getchar();\n\treturn s; \n}\ninline void init(){\n\tmemset(adj,0,sizeof(adj));\n\tl=cnt=le=trap=0;\n\tmemset(dfn,0,sizeof(dfn));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(bel,0,sizeof(bel));\n\tmemset(st,0,sizeof(st));\n}\nsigned main(){\n\tscanf(\"%lld\",&k);\n\twhile(k--){\n\t\tinit();\n\t\tscanf(\"%lld%lld\",&n,&m);\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tint a,b,x,y;\n\t\t\ta=get();//x\u7684\u72b6\u6001 \n\t\t\tx=read();\n\t\t\tb=get();//y\u7684\u72b6\u6001 \n\t\t\ty=read();\n\t\t\tif(a==1){\n\t\t\t\tif(b==1) add(x,y+n),add(y,x+n);\n\t\t\t\telse add(x,y),add(y+n,x+n);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(b==1) add(x+n,y+n),add(y,x);\n\t\t\t\telse add(x+n,y),add(y+n,x);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n<<1;i++) if(!dfn[i]) dfs(i);\n\t\tfor(int i=1;i<=n;i++) if(bel[i]==bel[i+n]){printf(\"BAD\\n\");trap=1;break;}\n\t\tif(!trap) printf(\"GOOD\\n\");\n\t}\n}\n\n```\n",
        "postTime": 1621849458,
        "uid": 209808,
        "name": "\u94f6\u6cb3AI",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4171 [JSOI2010] \u6ee1\u6c49\u5168\u5e2d"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P4171)\n\n[\u535a\u5ba2\u98df\u7528](https://www.luogu.com.cn/blog/368107/solution-p4171)\n\n---\n\n**\u524d\u8a00**\n\n\u9605\u8bfb\u672c\u6587\uff0c\u4f60\u9700\u8981\u638c\u63e1\u7684\u7b97\u6cd5\u5982\u4e0b\uff1a\n\n+ \u56fe\u7684\u5b58\u50a8&\u904d\u5386\n\n+ ***DFS***\n\n~~\u5bf9\u6ca1\u9519\u771f\u5c31\u53ea\u6709\u8fd9\u4e24\u6761~~\n\n---\n\n\u672c\u9898\u662f\u4e00\u90532-SAT\u88f8\u9898\n\n$\\to$[2-SAT\u6a21\u677f](https://www.luogu.com.cn/problem/P4782)$\\gets$\n\n---\n\n1. ***2-SAT*** \u4ecb\u7ecd\n\n***2-SAT*** \u95ee\u9898\u6307\u7684\u662f**\u7ed9\u5b9a\u4e00\u4e9b\u5e03\u5c14\u53d8\u91cf\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u5173\u7cfb\uff08\u6bd4\u5982 $a$ \u4e3a\u771f\u6216 $b$ \u4e3a\u5047\uff09\uff0c\u8981\u4f60\u6c42\u51fa\u89e3\u5b58\u4e0d\u5b58\u5728\uff0c\u5b58\u5728\u5c31\u6784\u9020\u51fa\u4e00\u7ec4\u89e3**\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\n\n~~\u8fd8\u771f\u5c31\u662fdfs~~\n\n---\n\n2. \u666e\u901a2-SAT\u89e3\u6cd5\uff1a\n\nSTEP 1\uff1a\u628a\u95ee\u9898\u8f6c\u5316\u5230\u4e00\u4e2a\u56fe\u4e0a\n\n\u6211\u4eec\u5148\u5efa\u7acb\u4e00\u4e2a\u56fe\u5305\u542b $2\\times n$ \u4e2a\u70b9\uff0c\u7528\u4e8e\u5b58\u4e0b\u7b2c $i$ \u4e2a\u70b9\u4e3a $true$ \u6216 $false$ \u7684\u60c5\u51b5\n\n\u8fd9\u91cc\u6211\u7528 $0 \\dots n-1$ \u4ee3\u8868 $n$ \u4e2a\u70b9\uff0c\u7b2c $i$ \u4e2a\u70b9\u7684 $false$ \u60c5\u51b5\u5bf9\u5e94\u56fe\u91cc\u7684\u7b2c $2 \\times i$ \u4e2a\u70b9\uff0c$true$ \u60c5\u51b5\u5bf9\u5e94\u56fe\u91cc\u7684\u7b2c $2 \\times i + 1$ \u4e2a\u70b9\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528 $i$ `^` $1$\u53d6\u5230\u7f16\u53f7\u4e00\u6837\u4f46\u771f\u5047\u503c\u4e0e $i$ \u76f8\u53cd\u7684\u70b9\u3002\n\n\u597d\u7684\uff0c\u5f00\u59cb\u5efa\u56fe\n\n\u4ee5\u6761\u4ef6 $a$ \u4e3a\u771f\u6216 $b$ \u4e3a\u5047\u4e3e\u4f8b\uff1a\n\n+ \u5982\u679c $a$ \u4e3a\u771f\uff0c\u5219 $b$ \u5fc5\u5b9a\u4e5f\u4e3a\u771f\n+ \u5982\u679c $b$ \u4e3a\u5047\uff0c\u5219 $a$ \u5fc5\u5b9a\u4e5f\u4e3a\u5047\n- \u5982\u679c $a$ \u4e3a\u5047\uff0c\u63a8\u4e0d\u51fa\u4efb\u4f55\u4e1c\u897f\n- \u5982\u679c $b$ \u4e3a\u771f\uff0c\u63a8\u4e0d\u51fa\u4efb\u4f55\u4e1c\u897f\n\n\u90a3\u4e48\u5c31\u5e94\u8be5\u662f\uff1a\n```cpp\nif(!a && !b){\n\tG[i << 1].push_back(j << 1 | 1);\n\tG[j << 1].push_back(i << 1 | 1);\n} else if(a && !b){\n\tG[i << 1 | 1].push_back(j << 1 | 1);\n\tG[j << 1].push_back(i << 1);\n} else if(!a && b){\n\tG[j << 1 | 1].push_back(i << 1 | 1);\n\tG[i << 1].push_back(j << 1);\n} else if(a && b){\n\tG[i << 1 | 1].push_back(j << 1);\n\tG[j << 1 | 1].push_back(i << 1);\n}\n```\n\n---\n\nSTEP 2\uff1aDFS\n\nDFS\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a $vis$ \u6570\u7ec4\u6807\u8bb0**\u56fe\u4e0a**\u7b2c $i$ \u4e2a\u70b9\u662f\u5426\u88ab\u6807\u8bb0\uff08\u6807\u8bb0\u8868\u793a\u6211\u4eec\u6682\u65f6\u9009\u8fd9\u4e2a\u70b9\uff0c\u5982\u679c\u540e\u9762\u53d1\u73b0\u884c\u4e0d\u901a\u4e86\u5c31\u53d6\u6d88\u6807\u8bb0\uff09\n\n\u90a3\u5982\u679c\u70b9 $2 \\times i$ \u88ab\u6807\u8bb0\u4e86\u5e76\u4e14\u70b9 $2 \\times i + 1$ \u4e5f\u88ab\u6807\u8bb0\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u4e00\u8def\u53d6\u6d88\u6807\u8bb0\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4\u88c5\u4e0b\u6240\u6709\u88ab\u6807\u8bb0\u4e86\u7684\u70b9\u7684\u7f16\u53f7\u4ee5\u65b9\u4fbf\u6211\u4eec\u540e\u9762\u53d6\u6d88\u6807\u8bb0\n\n\u4ee3\u7801\uff08\u6ce8\u91ca\u5728\u91cc\u9762\uff09\uff1a\n```cpp\nbool dfs(int u){\n\tif(vis[u ^ 1]) return false;  // \u5982\u679c\u8fd9\u4e2a\u70b9\u771f\u5047\u503c\u76f8\u53cd\u7684\u60c5\u51b5\u88ab\u6807\u8bb0\u4e86\uff0c\u90a3\u4e48\u77db\u76fe\uff0c\u4e0d\u80fd\u518dDFS\u4e0b\u53bb\n\tif(vis[u]) return true; // \u5982\u679c\u66fe\u7ecfDFS\u8fc7\u8fd9\u4e2a\u70b9\u5e76\u4e14\u628a\u5b83\u6807\u8bb0\u4e0a\u4e86\uff0c\u5c31\u4e0d\u7528\u518dDFS\u4e0b\u53bb\u4e86\uff0c\u76f4\u63a5\u53cd\u56de\n\tvis[u] = true; // \u6807\u8bb0\u4e0a\n\ta[len++] = u; // \u5b58\u5165\u6570\u7ec4\n\tfor(int i = 0;i < G[u].size();++i)\n\t\tif(!dfs(G[u][i])) return false; // \u4efb\u4f55\u4e00\u4e2av\u5931\u8d25\u5c31\u4e0d\u80fd\u518dDFS\u4e0b\u53bb\u4e86\n\treturn true;\n}\n```\n\n---\n\nSTEP 3\uff1a**2-SAT**\u51fd\u6570\n\n\u6211\u4eec\u7528\u4e00\u4e2a`_2_SAT`\u51fd\u6570\u6765\u5b8c\u6210\u64cd\u4f5c\n\n\u4ee3\u7801\uff08\u6ce8\u91ca\u5728\u91cc\u9762\uff09\uff1a\n```cpp\nbool _2_SAT(){\n\tfor(int i = 0;i < 2 * n;i += 2){\n\t\tif(vis[i] == false && vis[i + 1] == false){ // \u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u8bbf\u95ee\u8fc7\n\t\t\tlen = 0; // DFS\u524d\u6e05\u96f6\n\t\t\tif(!dfs(i)){ // \u5982\u679cDFS\u5931\u8d25\n\t\t\t\twhile(len > 0) vis[a[--len]] = false; // \u6cbf\u8def\u6e05\u7a7a\u6807\u8bb0\n\t\t\t\tif(!dfs(i + 1)) return false; // \u8fd9\u4e2a\u65f6\u5019\u5c1d\u8bd5\u53e6\u4e00\u79cd\u53ef\u80fd\uff0c\u5982\u679c\u8fd8\u662f\u5931\u8d25\uff0c\u5c31\u5f7b\u5e95\u5931\u8d25\uff0c\u4e0d\u53ef\u80fd\u5b58\u5728\u53ef\u884c\u89e3\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n```\n\n---\n\n3. \u672c\u9898\u89e3\u6cd5\n\n\u76f8\u6bd4\u8d77\u6a21\u677f\u9898\uff0c\u672c\u9898\u53ea\u662f\u5efa\u56fe\u65b9\u5f0f\u4e0d\u540c\uff0cDFS\u548c_2_SAT\u51fd\u6570\u90fd\u53ef\u4ee5\u7167\u642c\u6a21\u677f\u3002\n\n\u5927\u6982\u5c31\u662f\u628a\u6ee1\u5f0f\u770b\u4f5c $false$ \uff0c\u6c49\u5f0f\u770b\u4f5c $true$\n\n\u56e0\u4e3a\u8fd9\u9898\u8bfb\u5165\u65b9\u5f0f\u5b9e\u5728\u662f\u592a\u5947\u602a\u4e86\uff0c~~\u5b57\u7b26\u504f\u548c\u6570\u5b57\u8fde\u5728\u4e00\u8d77~~\n\n\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2agetchar()\u8bfb\u5165\u5b57\u7b26\uff0c\u518d\u7528scanf\u8bfb\u5165\u6570\u5b57\n\n\u4ee3\u7801\uff1a\n```cpp\nint T;\nscanf(\"%d\",&T);\nwhile(T--){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= m;++i){\n\t\tchar c1,c2; // \u4e24\u79cd\u83dc\u8272\u7684\u6599\u7406\u65b9\u5f0f\uff08'm'\u6216'h'\uff09\n\t\tint x1,x2; // \u4e24\u79cd\u83dc\u8272\u6240\u7528\u5230\u7684\u98df\u6750\u7f16\u53f7\n\t\tgetchar(); // \u8bfb\u5165\u6362\u884c\n\t\tc1 = getchar();\n\t\tscanf(\"%d\",&x1);\n\t\tgetchar(); // \u8bfb\u5165\u7a7a\u683c\n\t\tc2 = getchar();\n\t\tscanf(\"%d\",&x2);\n\t\tbool v1 = c1 == 'h',v2 = c2 == 'h'; // \u5c06\u6ee1\u5f0f\u770b\u4f5c false \uff0c\u6c49\u5f0f\u770b\u4f5c true\n\t\t--x1,--x2; // \u9898\u76ee\u8981\u6c42 1~n\uff0c\u800c\u6211\u4eec\u7684\u8868\u793a\u65b9\u5f0f\u4e3a 0~n-1\uff0c\u6240\u4ee5\u51cf\u4e00\n\t\tif(v1 && v2) G[x1 << 1 | 1].push_back(x2 << 1),G[x2 << 1 | 1].push_back(x1 << 1); // \u5efa\u56fe\u548c\u6a21\u677f\u9898\u65e0\u592a\u5927\u5dee\u8ddd\n\t\telse if(v1 && !v2) G[x1 << 1 | 1].push_back(x2 << 1 | 1),G[x2 << 1].push_back(x1 << 1);\n\t\telse if(!v1 && v2) G[x2 << 1 | 1].push_back(x1 << 1 | 1),G[x1 << 1].push_back(x2 << 1);\n\t\telse if(!v1 &&!v2) G[x1 << 1].push_back(x2 << 1 | 1),G[x2 << 1].push_back(x1 << 1 | 1);\n\t}\n}\n```\n\n4. \u672c\u9898\u4ee3\u7801\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<vector>\nstd::vector<int> G[401];\nint n,m,a[401],len = 0;\nbool vis[401];\nbool dfs(int u){\n\tif(vis[u ^ 1]) return false;\n\tif(vis[u]) return true;\n\tvis[u] = true;\n\ta[len++] = u;\n\tfor(int i = 0;i < G[u].size();++i)\n\t\tif(!dfs(G[u][i])) return false;\n\treturn true;\n}\nbool _2_SAT(){\n\tfor(int i = 0;i < 2 * n;i += 2){\n\t\tif(vis[i] == false && vis[i + 1] == false){\n\t\t\tlen = 0;\n\t\t\tif(!dfs(i)){\n\t\t\t\twhile(len > 0) vis[a[--len]] = false;\n\t\t\t\tif(!dfs(i + 1)) return false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i = 1;i <= m;++i){\n\t\t\tgetchar();\n\t\t\tchar c1 = getchar(),c2;\n\t\t\tint x1,x2;\n\t\t\tscanf(\"%d\",&x1);\n\t\t\tgetchar();\n\t\t\tc2 = getchar();\n\t\t\tscanf(\"%d\",&x2);\n\t\t\tbool v1 = c1 == 'h',v2 = c2 == 'h';\n\t\t\t--x1,--x2;\n\t\t\tif(v1 && v2) G[x1 << 1 | 1].push_back(x2 << 1),G[x2 << 1 | 1].push_back(x1 << 1);\n\t\t\telse if(v1 && !v2) G[x1 << 1 | 1].push_back(x2 << 1 | 1),G[x2 << 1].push_back(x1 << 1);\n\t\t\telse if(!v1 && v2) G[x2 << 1 | 1].push_back(x1 << 1 | 1),G[x1 << 1].push_back(x2 << 1);\n\t\t\telse if(!v1 &&!v2) G[x1 << 1].push_back(x2 << 1 | 1),G[x2 << 1].push_back(x1 << 1 | 1);\n\t\t}\n\t\tif(_2_SAT()) puts(\"GOOD\");\n\t\telse puts(\"BAD\");\n\t\tfor(int i = 0;i <= n;++i) G[i].clear(),vis[i] = false; // \u591a\u6d4b\u8bb0\u5f97\u6e05\u7a7a\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1619919345,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3-P4171"
    },
    {
        "content": "# \u524d\u8a00\n\u5982\u679c\u4f60\u5b66\u8fc72-SAT\uff0c\u90a3\u4f60\u5e94\u5f53\u4f1a\u8fd9\u9053\u9898\u3002\n# \u9898\u610f\n\u7ed9\u4f60 $ m $ \u4e2a\u7ea6\u675f\u6761\u4ef6\uff0c\u8981\u4f60\u51b3\u5b9a $ n $ \u4e2a\u6750\u6599\u662f\u6c49\u5f0f\u8fd8\u662f\u6ee1\u5f0f\uff0c\u4f7f $ m $ \u4e2a\u6761\u4ef6\u90fd\u80fd\u6ee1\u8db3\u81f3\u5c11\u4e00\u4e2a\u3002\n# \u601d\u8def\n\u5c06\u7b2c $ i $ \u9053\u83dc\u9009\u6c49\u5f0f\u5b9a\u4e3a $ i $ ,\u9009\u6ee1\u5f0f\u5b9a\u4e3a $ i+n $ ,\u90a3\u4e48\u5bf9\u4e8e\u8bc4\u59d4\u7684\u8981\u6c42\u5c31\u53ef\u4ee5\u8fde\u8fb9\u4e86\uff0c\u5177\u4f53\u60c5\u51b5\u5982\u4e0b\u3002\n\n\n1. $ i $ \u4e3a\u6ee1\u5f0f\u6216 $ j $ \u4e3a\u6c49\u5f0f----\u82e5 $ i $ \u4e3a\u6c49\u5f0f\uff0c\u5219 $ j $ \u4e3a\u6c49\u5f0f\uff1b\u82e5 $ j $ \u4e3a\u6ee1\u5f0f\u5219 $ i $ \u4e3a\u6ee1\u5f0f-----\u8fde $ i $ \u4e0e $ j $ \u548c $ j+n $ \u4e0e $ i+n $ \u3002\n\n2. $ i $ \u4e3a\u6ee1\u5f0f\u6216 $ j $ \u4e3a\u6ee1\u5f0f----\u82e5 $ i $ \u4e3a\u6c49\u5f0f\uff0c\u5219 $ j $ \u4e3a\u6ee1\u5f0f\uff1b\u82e5 $ j $ \u4e3a\u6c49\u5f0f\u5219 $ i $ \u4e3a\u6ee1\u5f0f-----\u8fde $ i $ \u4e0e $ j+n $ \u548c $ j $ \u4e0e $ i+n $ \u3002\n\n3. $ i $ \u4e3a\u6c49\u5f0f\u6216 $ j $ \u4e3a\u6c49\u5f0f----\u82e5 $ i $ \u4e3a\u6ee1\u5f0f\uff0c\u5219 $ j $ \u4e3a\u6c49\u5f0f\uff1b\u82e5 $ j $ \u4e3a\u6ee1\u5f0f\u5219 $ i $ \u4e3a\u6c49\u5f0f-----\u8fde $ i+n $ \u4e0e $ j $ \u548c $ j+n $ \u4e0e $ i $ \u3002\n\n4. $ i $ \u4e3a\u6c49\u5f0f\u6216 $ j $ \u4e3a\u6ee1\u5f0f----\u82e5 $ i $ \u4e3a\u6ee1\u5f0f\uff0c\u5219 $ j $ \u4e3a\u6ee1\u5f0f\uff1b\u82e5 $ j $ \u4e3a\u6c49\u5f0f\u5219 $ i $ \u4e3a\u6c49\u5f0f-----\u8fde $ i+n $ \u4e0e $ j+n $ \u548c $ j $ \u4e0e $ i $ \u3002\n\n\u8fde\u597d\u8fb9\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u70b9\u72b6\u6001\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u7528Tarjan\u6c42\u51fa\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u7136\u540e\u5224\u65ad $ i $ \u4e0e $ i+n $ \u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u5185\uff0c\u56e0\u4e3a\u4e00\u9053\u83dc\u4e0d\u53ef\u80fd\u65e2\u662f\u6ee1\u5f0f\u53c8\u662f\u6c49\u5f0f\u3002\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f[2000000],a[2000000],b[2000000],d[2000000],stak[2000000],dfn[2000000],low[2000000];\nbool u[2000000];\nint j,T,n,m,cnt,tt,id,tot,i,xx,yy,x,y;\nbool flag;\nstring s1,s2;\nvoid add(int x,int y)\n{\n\tcnt++;a[cnt]=y;b[cnt]=d[x];d[x]=cnt;\n}\nvoid tarjan(int x)\n{\n\ttt++;dfn[x]=tt;low[x]=dfn[x];id++;stak[id]=x;u[x]=true;\n\tfor (int i=d[x];i;i=b[i])\n\t     {\n\t     \tif (dfn[a[i]]==0) \n\t     \t    {\n\t     \t    \ttarjan(a[i]);\n\t     \t    \tlow[x]=min(low[x],low[a[i]]);\n\t\t\t\t }\n\t\t\telse if (u[a[i]]) low[x]=min(low[x],dfn[a[i]]);\n\t\t }\n\tif (low[x]==dfn[x])\n\t     {\n\t     \ttot++;\n\t     \twhile (1)\n\t            {\n\t            \tf[stak[id]]=tot;\n\t            \tu[stak[id]]=false;id--;\n\t            \tif (stak[id+1]==x) break;\n\t\t\t\t}\n\t\t }\n\treturn;\n}\nint main()\n{\n\tcin>>T;\n\tfor (;T;T--)\n\t   {\n\t   \ttt=0;id=0;tot=0;cnt=0;\n\t   \tfor (i=1;i<=2*n;i++) dfn[i]=0,low[i]=0,d[i]=0,u[i]=0,f[i]=0;\n\tcin>>n>>m;\n\tfor (i=1;i<=m;i++)\n\t     {\n\t     \tcin>>s1>>s2;\n\t     \tx=0;y=0;\n\t     \tif (s1[0]=='m') xx=0;else xx=1;\n\t     \tif (s2[0]=='m') yy=0;else yy=1;\n\t     \tfor (j=1;j<s1.size();j++) x=x*10+(s1[j]-'0');\n\t     \tfor (j=1;j<s2.size();j++) y=y*10+(s2[j]-'0');\n\t     \tif ((xx==0)&(yy==0)) {add(x+n,y);add(y+n,x);}\n\t     \tif ((xx==1)&(yy==1)) {add(x,y+n);add(y,x+n);}\n\t     \tif ((xx==1)&(yy==0)) {add(x,y);add(y+n,x+n);}\n\t     \tif ((xx==0)&(yy==1)) {add(x+n,y+n);add(y,x);}\n\t\t }\n\tfor (i=1;i<=2*n;i++)\n\t    if (dfn[i]==0) tarjan(i);\n\tflag=true;\n\tfor (i=1;i<=n;i++)\n\t    if (f[i]==f[i+n])\n\t        flag=false;\n\tif (flag==false) puts(\"BAD\");\n\telse puts(\"GOOD\");\n         }\n\treturn 0;\n}\n```\n",
        "postTime": 1618189815,
        "uid": 77615,
        "name": "OIerAlbedo",
        "ccfLevel": 0,
        "title": "P4171"
    },
    {
        "content": "### 2-SAT\u95ee\u9898\n\n## \u5efa\u8fb9+$tarjan$\n\n\u6ce8\uff1a\u672c\u9898\u548cP4272\u3010\u6a21\u677f\u30112-SAT \u95ee\u9898\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\u3002\u672a\u505a\u7684\u8bfb\u8005\u53ef\u4ee5\u5148\u505a\u6a21\u677f\u9898\n\n\u6b64\u9898\u662f\u5f88\u88f8\u7684\u4e00\u4e2a2-SAT\u95ee\u9898\uff0c\u5efa\u8fb9\u7684\u65f6\u5019\u5206\u56db\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n```cpp\nif(x=='m' && y=='m') add(a+n,b),add(b+n,a);\nelse if(x=='m' && y=='h') add(a+n,b+n),add(b,a);\nelse if(x=='h' && y=='m') add(a,b),add(b+n,a+n);\nelse add(a,b+n),add(b,a+n);\n```\n\u5176\u4e2d\u7684x,y\u662f\u5b57\u7b26'm'\u6216\u8005'h'\uff0ca,b\u662f\u6570\u5b57\uff0c\u8bfb\u5165\u7684\u65f6\u5019\u9700\u8981\u8fdb\u884c\u5c0f\u5904\u7406\n\n\u63a5\u4e0b\u53bbtarjan\u4e00\u6ce2\uff0c\u5f97\u5230c[x]\u8868\u793a\u8282\u70b9x\u5c5e\u4e8e\u7b2cc[x]\u4e2aSCC\uff0c\u6613\u8bc1c[x]\u8d8a\u5927\uff0c\u62d3\u6251\u5e8f\u53cd\u800c\u8d8a\u5c0f\u3002\u4f46\u662f\u672c\u9898\u66f4\u6c34\uff0c\u53ea\u8981\u5224\u65ad\u662f\u5426\u77db\u76fe\u5373\u53ef\uff0c\u6211\u4eec\u53ea\u8981\u770bc[x]\u548cc[x+n]\u662f\u5426\u5728\u540c\u4e00\u4e2aSCC\u4e2d\u5373\u53ef\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC opitimize(2)\nusing namespace std;\nconst int N=1005;\nnamespace Read\n{\n    inline int read()\n    {\n        int s=0,f=1; char ch=getchar();\n        while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n        while(isdigit(ch)) s=s*10+(ch^48),ch=getchar();\n        return s*f;\n    }\n}using namespace Read;\nnamespace Gragh\n{\n\tint n,m,tot=0;\n\tint head[N],Next[N<<1],des[N<<1];\n\tinline void add(int a,int b)\n\t{\n\t\tNext[++tot]=head[a]; des[tot]=b; \n\t\thead[a]=tot;\n\t}\n}using namespace Gragh;\nnamespace Tarjan\n{\n\tint num=0,cnt=0;\n\tint low[N],dfn[N],ins[N],c[N];\n\tstack<int> stk;\n\tvoid tarjan(int x)\n\t{\n\t\tlow[x]=dfn[x]=++num;\n\t\tstk.push(x); ins[x]=1;\n\t\tfor(int i=head[x]; i; i=Next[i])\n\t\t{\n\t\t\tint y=des[i];\n\t\t\tif(!dfn[y])\n\t\t\t{\n\t\t\t\ttarjan(y);\n\t\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\t} \n\t\t\telse if(ins[y]) low[x]=min(low[x],dfn[y]);\n\t\t}\n\t\tif(dfn[x]==low[x])\n\t\t{\n\t\t\tint y; cnt++;\n\t\t\tdo\n\t\t\t{\n\t\t\t\ty=stk.top(); stk.pop(); ins[y]=0;\n\t\t\t\tc[y]=cnt; \n\t\t\t}while(y!=x);\n\t\t}\n\t}\n}using namespace Tarjan;\ninline void init()\n{\n\ttot=num=cnt=0;\n\tmemset(head,0,sizeof head);\n\tfor(int i=1; i<=N; i++)\n\t\tdfn[i]=c[i]=low[i]=ins[i]=0; \n\twhile(!stk.empty()) stk.pop();\n}\ninline void solve()\n{\n\tn=read(),m=read();\n\tinit();\n\tfor(int i=1,k; i<=m; i++)\n\t{\n\t\tstring s,t; cin>>s>>t; char x=s[0],y=t[0];\n\t\tint a=0,b=0;\n\t\tk=1; while(s[k]>='0' && s[k]<='9') a=a*10+s[k++]-'0';\n\t\tk=1; while(t[k]>='0' && t[k]<='9') b=b*10+t[k++]-'0';\n\t\tif(x=='m' && y=='m') add(a+n,b),add(b+n,a);\n\t\telse if(x=='m' && y=='h') add(a+n,b+n),add(b,a);\n\t\telse if(x=='h' && y=='m') add(a,b),add(b+n,a+n);\n\t\telse add(a,b+n),add(b,a+n);\n\t} \n\tfor(int i=1; i<=2*n; i++)\n\t    if(!dfn[i]) tarjan(i);\n\tfor(int i=1; i<=n; i++)\n\t    if(c[i]==c[i+n]){puts(\"BAD\"); return;}\n\tputs(\"GOOD\");\n}\nint main()\n{\n\tint t=read();\n\twhile(t--) solve();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1595229255,
        "uid": 91375,
        "name": "crh1272336175",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "### \u3010\u9898\u76ee\u5927\u610f\u3011\n\u6709n\u4e2a\u9009\u62e9\uff0c\u6bcf\u4e2a\u9009\u62e9\u67092\u4e2a\u9009\u9879\u3002\u6709m\u4e2a\u7ea6\u675f\u6761\u4ef6\uff0ca\u548cb\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u3002\n\n\u95ee\u662f\u5426\u53ef\u884c\u3002\n\n------------\n### \u3010\u5206\u6790\u3011\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u662f[2-SAT](https://www.luogu.com.cn/problem/P4782)\u7684\u88f8\u9898\u3002\n\n#### \u7b97\u6cd5\u6b65\u9aa4\n\n\u9009\u62e9i\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a\u70b9i\u4e0ei+n\uff0c\u5206\u522b\u8868\u793a\u4e24\u4e2a\u9009\u9879\uff0c\u4e14\u8fd9\u4e24\u4e2a\u9009\u9879\u4e92\u4e3a\u53cd\u70b9\uff08\u6682\u4e14\u8fd9\u4e48\u79f0\u547c\uff09\uff0c\u8bb0\u4f5ci\u4e0ei'\u3002\n\n\u7ea6\u675f\u6761\u4ef6\u770b\u6210\u8fb9\u3002\n\na\u4e0eb\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\uff0c\u5316\u5f00\u5206\u6790\u3002\n\n\u82e5\u9009\u62e9\u4e86a'\u5219\u5fc5\u5b9a\u9009\u62e9b\uff0c\u8fde\u8fb9a'->b\u3002\n\n\u82e5\u9009\u62e9\u4e86b'\u5219\u5fc5\u5b9a\u9009\u62e9a\uff0c\u8fde\u8fb9b'->a\u3002\n\n\u7136\u540e\u8fd92n\u4e2a\u70b9\u6784\u6210\u4e86\u4e00\u4e2a\u6709\u5411\u56fe\u3002\n\n#### \u8003\u8651\u65e0\u89e3\u7684\u60c5\u51b5\n\n\u9009\u62e9i\uff0c\u7ecf\u8fc7\u63a8\u5bfc\u5982\u679c\u5f97\u51fa\u5fc5\u987b\u9009\u62e9i'\uff0c\u5c31\u4f1a\u4ea7\u751f\u77db\u76fe\u3002\n\n\u5728\u56fe\u4e0a\u7684\u8868\u73b0\u4e3a\uff0ci\u901a\u8fc7\u67d0\u4e9b\u8def\u5f84\u5230\u8fbe\u4e86i'\uff0c\u540c\u7406i'\u4e5f\u80fd\u5230\u8fbei\u3002\n\ni\u4e0ei'\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u5373\u5728\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u3002\n\n#### \u5982\u4f55\u9009\u62e9~~\u867d\u7136\u8fd9\u9898\u4e0d\u7528\u8003\u8651~~\n\n\u8981\u5c3d\u91cf\u9009\u62e9\u4f18\u5148\u7ea7\u9ad8\u7684\uff0c\u5373\u62d3\u6251\u5e8f\u5c0f\u7684\u3002\n\n\u8fd0\u7528Tarjan\u5f97\u5230\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6807\u53f7\uff0c\u662f\u6309\u7167\u62d3\u6251\u5e8f\u6765\u7684\uff0c\u6240\u4ee5\u9009\u62e9\u6807\u53f7\u5c0f\u7684\u66f4\u4f18\u3002\n\n------------\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=105,maxt=maxn<<1,maxe=2e3+5;\nint k,n,m,nn;\nint tot,lnk[maxt];\nint st[maxt],top;\nint dfn[maxt],low[maxt],id[maxt],cir,cnt; \nstruct edge{\n\tint to,nxt;\n}e[maxe];\nint read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nvoid clear(){\n\ttot=cnt=cir=0;\n\tmemset(lnk,0,sizeof lnk);\n\tmemset(dfn,0,sizeof dfn);\n\tmemset(id,0,sizeof id);\n\tmemset(low,0,sizeof low);\n}\nvoid add_e(int x,int y){\n\te[++tot]=(edge){y,lnk[x]};\n\tlnk[x]=tot;\n}\nvoid Tarjan(int x){//Tarjan\u677f\u5b50\n\tst[++top]=x;\n\tdfn[x]=low[x]=++cnt;\n\tfor(int j=lnk[x];j;j=e[j].nxt){\n\t\tint y=e[j].to;\n\t\tif(!dfn[y]){\n\t\t\tTarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(!id[y]) low[x]=min(low[x],dfn[y]);\n\t}\n\tif(dfn[x]==low[x]){\n\t\tcir++;\n\t\twhile(st[top]!=x){\n\t\t\tid[st[top--]]=cir;\n\t\t}\n\t\ttop--;\n\t\tid[x]=cir;\n\t}\n}\nint main(){\n \tfreopen(\"P4171.in\",\"r\",stdin);\n \tfreopen(\"P4171.out\",\"w\",stdout);\n\tk=read();\n\twhile(k--){\n\t\tclear();\n\t\tn=read(),m=read();\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tchar ch;\n\t\t\tint x,a,y,b;\n\t\t\tch=getchar();\n\t\t\twhile(ch!='m'&&ch!='h') ch=getchar();\n\t\t\ta=(ch=='m');\n\t\t\tx=read();\n\t\t\tch=getchar();\n\t\t\twhile(ch!='m'&&ch!='h') ch=getchar();\n\t\t\tb=(ch=='m');\n\t\t\ty=read();\n\t\t\tadd_e(x+n*(a^1),y+n*b);\n\t\t\tadd_e(y+n*(b^1),x+n*a);\n            //\u6b64\u5904\u4e3a\u5efa\u8fb9,^1\u5c31\u662f\u53d6\u53cd\u70b9\n\t\t}\n\t\tnn=n<<1;\n\t\tfor(int i=1;i<=nn;i++) if(!dfn[i]) Tarjan(i);\n\t\tbool flg=0;\n\t\tfor(int i=1;i<=n;i++) if(id[i]==id[i+n]){flg=1;break;}//\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\n\t\tprintf(\"%s\\n\",flg?\"BAD\":\"GOOD\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1585646836,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "\u8003\u8651$2-SAT$\u3002\n\n\u5c06\u6c49\u5f0f\u770b\u4f5c$0$\u72b6\u6001\uff0c\u6ee1\u5f0f\u770b\u505a$1$\u72b6\u6001\uff0c\u5c06\u6bcf\u4e2a\u6750\u6599\u62c6\u6210$01$\u4e24\u4e2a\u72b6\u6001\u3002\n\n\u4ece$a$\u5411$b$\u8fde\u6709\u5411\u8fb9\u8868\u793a\u7684\u610f\u4e49\u4e3a\u9009\u4e86$a$\u540e\u5fc5\u987b\u9009$b$\u3002\n\n\u90a3\u4e48\u6bcf\u6b21\u8fde\u8fb9\u7684\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n$add(x_{a \\oplus 1},y_b),add(y_{b \\oplus 1},x_a)$\uff08$x_a$\u548c$y_b$\u4e3a\u8bc4\u5ba1\u5458\u7684\u8981\u6c42\uff0c$x$\u548c$y$\u8868\u793a\u6750\u6599\uff0c$a$\u548c$b$\u8868\u793a\u72b6\u6001\uff09\n\n\u610f\u4e49\u4e3a\u82e5\u6ca1\u6709\u6ee1\u8db3\u8bc4\u5ba1\u5458\u7684\u5176\u4e2d\u4e00\u4e2a\u8981\u6c42\uff0c\u5219\u53e6\u4e00\u4e2a\u8981\u6c42\u5fc5\u987b\u6ee1\u8db3\u3002\n\n\u8fde\u8fb9\u540e\u7f29\u70b9\uff0c\u82e5\u53d1\u73b0$x_a$\u548c$x_{a \\oplus 1}$\u5728\u540c\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u5219\u65e0\u89e3\u3002\n\n\u5176\u4ed6\u7684\u4e00\u4e9b\u5b9e\u73b0\u7684\u5904\u7406\uff0c\u5c31\u770b\u4ee3\u7801\u5427\u3002\n\n$code:$\n```cpp\n#include<bits/stdc++.h>\n#define maxn 4000010\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n\tx=0;char c=getchar();bool flag=false;\n\twhile(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\tif(flag)x=-x;\n}\nint t,n,m;\nchar str[5];\nstruct edge\n{\n    int to,nxt;\n}e[maxn];\nint head[maxn],edge_cnt;\nvoid add(int from,int to)\n{\n    e[++edge_cnt]=(edge){to,head[from]};\n    head[from]=edge_cnt;\n}\nint dfn_cnt,co_cnt,top;\nint dfn[maxn],low[maxn],co[maxn],st[maxn];\nbool vis[maxn];\nvoid tarjan(int x)\n{\n    dfn[x]=low[x]=++dfn_cnt;\n    st[++top]=x;\n    vis[x]=true;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(!dfn[y])\n        {\n            tarjan(y);;\n            low[x]=min(low[x],low[y]);\n        }\n        else if(vis[y])\n            low[x]=min(low[x],dfn[y]);\n    }\n    if(low[x]==dfn[x])\n    {\n        co_cnt++;\n        int now;\n        do\n        {\n            now=st[top--];\n            vis[now]=false;\n            co[now]=co_cnt;\n        }while(now!=x);\n    }\n}\nbool check()\n{\n    for(int i=1;i<=2*n;++i)\n        if(!dfn[i])\n            tarjan(i);\n    for(int i=1;i<=n;++i)\n        if(co[i]==co[i+n])\n            return false;\n    return true;\n}\nvoid clear()\n{\n    top=dfn_cnt=co_cnt=edge_cnt=0;\n    memset(co,0,sizeof(co));\n    memset(dfn,0,sizeof(dfn));\n    memset(low,0,sizeof(low));\n    memset(vis,0,sizeof(vis));\n    memset(head,0,sizeof(head));\n}\nint main()\n{\n\tread(t);\n    while(t--)\n    {\n        clear();\n        read(n),read(m);\n        while(m--)\n        {\n            int x,y,a,b,len;\n            scanf(\"%s\",str);\n            if(str[0]=='h') a=0;\n            else a=1;\n            x=0,len=strlen(str);\n            for(int i=1;i<len;++i) x=x*10+str[i]-'0';\n            scanf(\"%s\",str);\n            if(str[0]=='h') b=0;\n            else b=1;\n            y=0,len=strlen(str);\n            for(int i=1;i<len;++i) y=y*10+str[i]-'0';\n            add(x+(a^1)*n,y+b*n),add(y+(b^1)*n,x+a*n);\n        }\n        if(check()) puts(\"GOOD\");\n        else puts(\"BAD\");\n    }\n\treturn 0;\n}\n```\n",
        "postTime": 1576569134,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "\u5f88\u660e\u663e\u76842-SAT\uff0c[\u5efa\u8bae\u5148\u770b\u770b2-SAT\u6a21\u677f](https://www.luogu.org/problemnew/show/P4782)\n\n\u6bcf\u79cd\u98df\u6750\u6709\u4e24\u4e2a\u72b6\u6001\uff1a\u6c49\u5f0f\u6216\u6ee1\u5f0f\u3002\u8fd9\u5bf9\u5e94\u4e862-SAT\u6a21\u7248\u91cc\u7684\u771f\u6216\u5047\u3002\n\n\u53ea\u8981\uf96b\u8d5b\u8005\u80fd\u5728\u8fd9\uf978\u79cd\u6750\uf9be\u7684\u505a\u6cd5\u4e2d\uff0c\u5176\u4e2d\u4e00\u4e2a\u7b26\u5408\u8bc4\u5ba1\u7684\u559c\u597d\u5373\u53ef\u901a\u8fc7\u8be5\u8bc4\u5ba1\u7684\u5ba1\u67e5\u3002\n\n\u6bcf\u4e2a\u8bc4\u5ba1\u5458\u5bf9\u5e942-SAT\u6a21\u7248\u91cc\u7684\u4e00\u4e2a\u6761\u4ef6\uff1aa\u4e3a\u771f/\u5047\u6216b\u4e3a\u771f/\u5047\u6ee1\u8db3\u5176\u4e2d\u4e4b\u4e00\u3002\n\n\u7136\u540e\u8fd9\u5c31\u662f\u4e00\u90532-SAT\u7684\u6a21\u677f\u4e86\u3002\n\n\u5efa\u56fe\uff1a\u5982\u679c\u67d0\u8bc4\u5ba1\u4e3am3 \uff0ch1\uff08m3\u5bf9\u5e94\u6761\u4ef6a\uff0ch1\u5bf9\u5e94\u6761\u4ef6b\uff09\uff08\u6837\u4f8b\u7b2c\u4e00\u4e2a\u6570\u636e\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8fde\u8fb9\uff1ah3\u8fde\u5411h1\uff0cm1\u8fde\u5411m3\uff08\u975ea\u8fde\u5411b\uff0c\u975eb\u8fde\u5411a\uff09\u3002\n\n\u7136\u540e\u50cf2-SAT\u4e00\u6837\uff0c\u8dd1tarjan\u5224\u5f3a\u8054\u901a\u5206\u7c7b\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u591a\u7ec4\u6570\u636e\u6e05\u7a7a\u6570\u7ec4\n\n\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint T,n,m;\nint head[1010],top;\nstruct Node{\n\tint v;\n\tint next;\n}node[2020];\ninline void addedge(int u,int v){\n\tnode[++top].v=v;\n\tnode[top].next=head[u];\n\thead[u]=top;\n}\nint taj,cnt,t,belong[1010],dfn[1010],low[1010],st[1010];\nbool inst[1010];\nint a1,a2;\ninline void Read(int &a){\n\ta=0;\n\tint f=0;\n\tchar c=getchar();\n\twhile(c!='m'&&c!='h')c=getchar();\n\tif(c=='h')a=n;//i\u4ee3\u8868\u6ee1\u5f0f\uff0ci+n\u4ee3\u8868\u6c49\u5f0f\n\tc=getchar(); \n\twhile(c>='0'&&c<='9')f=f*10+c-'0',c=getchar();\n\ta+=f;\n}//\u8bfb\u5165\u5bf9\u5e94\u98df\u6750 \nvoid tarjan(int u){\n\tdfn[u]=low[u]=++t;\n\tst[cnt++]=u;\n\tinst[u]=1;\n\tfor(int i=head[u];i;i=node[i].next){\n\t\tint d=node[i].v;\n\t\tif(dfn[d]==-1){\n\t\t\ttarjan(d);\n\t\t\tlow[u]=min(low[u],low[d]);\n\t\t}\n\t\telse if(inst[d])low[u]=min(low[u],low[d]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\ttaj++;\n\t\tint now;\n\t\tdo{\n\t\t\tnow=st[--cnt];\n\t\t\tinst[now]=0;\n\t\t\tbelong[now]=taj;\n\t\t}while(now!=u);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&T);\n\tint fa1,fa2;\n\tregister int i;\n\twhile(T--){\n\t\tscanf(\"%d %d\",&n,&m);\n\t\ttaj=cnt=t=top=0;\n\t\tmemset(dfn,-1,sizeof(dfn));\n\t\tmemset(low,-1,sizeof(low));\n\t\tmemset(head,0,sizeof(head));\n\t\tmemset(node,0,sizeof(node));\n\t\tmemset(st,0,sizeof(st));\n\t\tmemset(inst,0,sizeof(inst));\n\t\tmemset(belong,0,sizeof(belong));\n\t\tfor(i=1;i<=m;i++){\n\t\tRead(a1),Read(a2);\n\t\tfa1=a1<=n?a1+n:a1-n;//\u975ea1 \n\t\tfa2=a2<=n?a2+n:a2-n;//\u975ea2 \n\t\taddedge(fa1,a2);\n\t\taddedge(fa2,a1);\n\t\t}\n\t\tbool f=0;\n\t\tfor(i=1;i<=n*2;i++)if(dfn[i]==-1)tarjan(i);\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(belong[i]==belong[i+n]){\n\t\t\t\tf=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(f==0)printf(\"GOOD\\n\");\n\t\telse printf(\"BAD\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1536125970,
        "uid": 28088,
        "name": "\u94b1\u9038\u51e1",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "\u505a\u7684\u7b2c\u4e00\u90532-Sat\u7684\u9898emmm\u3002\u3002\u3002\n\n\u4e00\u5f00\u59cb\u770b\u4e86\u9898\u89e3\u53d1\u73b0\u4e00\u76f4\u5199\u4e0d\u51fa\u6765\uff0c\n\n\u56e0\u4e3a\u4e0b\u9762\u8bf4\u62c64\u4e2a\u70b9\uff0c\u4f46\u662f\u6bcf\u6b21\u90fd\u662f\u4e0d\u505a\u4ec0\u4e48\u5411\u505a\u4ec0\u4e48\u8fde\u8fb9\uff0c\n\n\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c \u505a\u4ec0\u4e48 \u5c31\u6c38\u8fdc\u6ca1\u6709\u51fa\u8fb9\uff0c\n\n\u90a3\u4e5f\u5c31\u610f\u5473\u8fd9\u6bcf\u4e2a\u70b9\u90fd\u662f\u4e00\u4e2a\u6781\u5927\u5f3a\u8fde\u901a\u5206\u91cf\n\n\u4e8e\u662f\u5c31\u5224\u4e0d\u51fa\u6765\u4e86\uff0c\u4e5f\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6211\u7406\u89e3\u6709\u8bef\u3002\u3002\u3002\u3002\n\n\u540e\u6765\u54a8\u8be2\u67d0\u4f4d\u5927\u4f6c\u53d1\u73b0\uff0c\u5e94\u8be5\u8981\u62c62\u4e2a\u70b9\uff0c\n\n\u56e0\u4e3a\u4e0d\u505a\u67d0\u9053\u83dc\u5c31\u610f\u5473\u8fd9\u505a\u53e6\u4e00\u9053\u83dc\uff0c\u6240\u4ee5\u4e0d\u518d\u662f\u4e0d\u505a\u4ec0\u4e48--->\u505a\u4ec0\u4e48\n\n\u800c\u662f\u505a\u4ec0\u4e48--->\u505a\u4ec0\u4e48\n\n\u6bd4\u5982\u8bf4\u4e00\u4e2a\u8bc4\u59d4\u8981\u6c42m1,m2\uff0c\n\n\u90a3\u4e48\u4e0d\u505am1\u5c31\u610f\u5473\u7740\u505ah1,\u6240\u4ee5h1 --- > m2\n\n\u540c\u7406\uff0ch2 --- > m1\n\n\u8fd9\u6837\u5c31\u53ea\u7528\u62c6\u4e24\u4e2a\u70b9\u4e86\n\n\u8fde\u8fb9\u5e94\u8be5\u8fd8\u6709\u66f4\u65b9\u4fbf\u7684\u5199\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u6211\u61d2\u5f97\u60f3\u5c31\u624b\u52a8\u6a21\u62df\u4e86\n\n\u8fd9\u6837\u5e94\u8be5\u662f\u6bd4\u62c64\u4e2a\u70b9\u8981\u7b80\u5355\u7684\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define R register int\n#define AC 450\n#define ACway 4500\n#define D printf(\"line in %d\\n\",__LINE__);\nint T,n,m;\nint dfn[AC],low[AC],belong[AC],cnt;\nint date[ACway],Next[ACway],Head[AC],tot;\nint q[AC],top,timer;\nchar c1[5],c2[5];\nbool z[AC];\n\ninline void add(int f,int w)\n{\n//\tprintf(\"%d --- > %d\\n\",f,w);\n    date[++tot]=w,Next[tot]=Head[f],Head[f]=tot;\n}\n\ninline void upmin(int &a,int b)\n{\n    if(b<a) a=b;\n}\n//\u62c6\u62104\u4e2a\u70b9\uff0ci --- > \u9009\u6c49\u5f0f,i+n --- >\u9009\u6ee1\u5f0f \nvoid pre()\n{\n    R x1,x2;\n    scanf(\"%d%d\",&n,&m);\n    for(R i=1;i<=m;i++)\n    {\n        scanf(\"%s%s\",c1+1,c2+1);\n        x1=x2=0;\n        int l=2;\n        while(c1[l] <= '9' && c1[l] >= '0') x1=x1*10+c1[l]-'0',++l;\n        l=2;\n        while(c2[l] <= '9' && c2[l] >= '0') x2=x2*10+c2[l]-'0',++l;//\u5f97\u5230\u83dc\u7684\u7f16\u53f7\n        if(c1[1] == 'm') //\u4e0d\u6ee1\u8db3x1,\u6ee1\u8db3x2,\u6b64\u65f6x1\u662f'm',\u6240\u4ee5\u4e0d\u52a0\n        {\n            if(c2[1] == 'm') add(x1,x2+n);//x1\u4e0d\u505a\u6ee1\u5f0f\uff08\u505a\u6c49\u5f0f\uff09 --- > x2 \u505a\u6ee1\u5f0f\n            else add(x1,x2);//x1\u505a\u6c49\u5f0f\uff0cx2\u505a\u6c49\u5f0f\n        }\n        else//\u4e0d\u6ee1\u8db3x1,\u6ee1\u8db3x2,\u6b64\u65f6x1\u662fh\uff0c\u6240\u4ee5\u52a0\n        {\n            if(c2[1] == 'm') add(x1+n,x2+n);//\u5982\u679cx2\u662fm\u7684\u8bdd\n            else add(x1+n,x2);//\u662fh\u7684\u8bdderror!!!\u522b\u6253\u9519\u4e86\u554a\uff01\uff01\uff01\u662f\u4e0d\u6ee1\u8db3x1\u554a\n        }\n        if(c2[1] == 'm') //\u6ee1\u8db3x1,\u4e0d\u6ee1\u8db3x2,\u6b64\u65f6x2\u662f'm',\u6240\u4ee5\u4e0d\u52a0\n        {\n            if(c1[1] == 'm') add(x2,x1+n);//\u6b64\u65f6x1\u662fm\uff0c\u6240\u4ee5\u52a0\n            else add(x2,x1);//\u6b64\u65f6x1\u662fh\uff0c\u6240\u4ee5\u4e0d\u52a0\n        }\n        else//\u6ee1\u8db3x1,\u4e0d\u6ee1\u8db3x2,\u6b64\u65f6x2\u662fh,\u6240\u4ee5\u52a0\n        {\n            if(c1[1] == 'm') add(x2+n,x1+n);//\u6b64\u65f6x1\u662fm,\u6240\u4ee5\u52a0\n            else add(x2+n,x1);//x1\u662fh\uff0c\u6240\u4ee5\u4e0d\u52a0\n        }\n    }\t\n}\n\nvoid tarjan(int x)\n{\n    R now;\n    dfn[x]=low[x]=++timer;\n    q[++top]=x,z[x]=true;\n    for(R i=Head[x]; i ;i=Next[i])\n    {\n        now=date[i];\n        if(!dfn[now])\n        {\n            tarjan(now);\n            upmin(low[x],low[now]);\n        }\n        else if(z[now])\n            upmin(low[x],low[now]);\n    }\n    if(dfn[x] == low[x])\n    {\n        z[x]=false,++cnt;\n        now=0;\n        while(now != x)//\u56e0\u4e3a\u56de\u5230\u8fd9\u91cc\u7684\u65f6\u5019\u5df2\u7ecf\u64cd\u4f5c\u5b8c\u4e86\n        {\n            now=q[top--];//--\u653e\u540e\u9762\u53ef\u4ee5\u4fdd\u8bc1top\u4e0d\u88ab\u5ffd\u7565\n            z[now]=false;\n            belong[now]=cnt;\n        }\n    }\n}\n\nvoid work()\n{\n    bool flag;\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        flag=false;\n        memset(Head,0,sizeof(Head));\n        memset(dfn,0,sizeof(dfn));//\u56e0\u4e3a\u662f\u7528dfn\u5224\u65ad\u6709\u65e0\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5memset dfn\u5c31\u53ef\u4ee5\u4e86\n        memset(z,0,sizeof(z));\n        tot=timer=cnt=0;\n        pre();\n        int all=4*n;\n        for(R i=1;i<=all;i++)\n            if(!dfn[i]) tarjan(i);\n        for(R i=1;i<=n;i++)\n        {\n            if(belong[i] == belong[n + i])//\u4e0d\u80fd\u65e2\u9009h\u53c8\u9009m \n            {\n                flag=1;\n                break;\n            }\n        }\n        //for(R i=1;i<=2*n;i++) printf(\"%d \",belong[i]);\n        if(!flag) printf(\"GOOD\\n\");\n        else printf(\"BAD\\n\");\n    }\n}\n\nint main()\n{\n//\tfreopen(\"in.in\",\"r\",stdin);\n    work();\n//\tfclose(stdin);\n    return 0;\n}\n```",
        "postTime": 1523231793,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    },
    {
        "content": "### \u3010\u9898\u76ee\u5927\u610f\u3011\n- \u6709n\u79cd\u6750\u6599\uff0c\u6709m\u4e2a\u8bc4\u59d4\uff0c\u6bcf\u4e00\u4e2a\u8bc4\u59d4\u90fd\u6709\u4ed6\u7684\u559c\u597d\uff0c\u9009\u624b\u7684\u83dc\u5fc5\u987b\u542b\u6709\u6240\u6709\u8bc4\u59d4\u7684\u4e24\u4e2a\u559c\u597d\u4e4b\u4e00\uff0c\u5426\u5219\u5c31\u7b97\u4e0d\u901a\u8fc7\u3002\u95ee\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u4e0d\u53ef\u80fd\u6709\u4eba\u901a\u8fc7\u7684\u60c5\u51b5\u3002\n\n### \u3010\u89e3\u9898\u601d\u8def\u3011\n- \u4f7f\u75282-sat\u601d\u8def\u3002\n- \u5bf9\u4e8e\u6bcf\u4e2a\u8bc4\u59d4\u7684\u6bcf\u4e2a\u559c\u597d\uff0c\u8981\u4e48\u662f\u6ee1\u8981\u4e48\u662f\u6c49\uff0c\u90a3\u5c31\u662f\u9009\u6216\u4e0d\u9009\uff0c\u56e0\u6b64\u6ee1\u8db32-sat\u7684\u6027\u8d28\u3002\u6240\u4ee5\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8bc4\u59d4\u7684\u6bcf\u4e2a\u559c\u597d\u5982\u679c\u4e0d\u6ee1\u8db3\u5c31\u8981\u6ee1\u8db3\u53e6\u4e00\u4e2a\u559c\u597d\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u559c\u597d\u7684\u201c\u76f8\u53cd\u83dc\u201d\uff08\u5982\u679c\u662f\u6c49\u5c31\u53d8\u6ee1\uff0c\u53cd\u4e4b\u4ea6\u7136\uff1b\u53cd\u6b63\u5c31\u662f\u4e0d\u6ee1\u8db3\u559c\u597d\uff09\u4e0e\u53e6\u4e00\u4e2a\u559c\u597d\u76f8\u8fde\uff08\u6ce8\u610f\u662f\u6709\u5411\u8fb9\uff09\u3002\n- \u8dd1\u4e00\u6ce2Floyd\u3002\n- \u6700\u540e\u5982\u679c\u5b58\u5728\u4e00\u79cd\u6750\u6599\u4e24\u79cd\u505a\u6cd5\uff08\u5373\u6bcf\u79cd\u6750\u6599\u7684\u6c49\u548c\u6ee1\u80fd\u76f8\u8fde\uff09\uff0c\u90a3\u4e48\u8bf4\u4e0d\u53ef\u4ee5\uff1b\u53cd\u4e4b\u5219\u53ef\u4ee5\u3002\n\n### \u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n```cpp\n#include <cstdlib>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\nint n,m,n2;\nint Map[444][444];\nint inv[444];\n\nint read()\n{\n\tchar ch=getchar();\n\tfor (;ch!='m'&&ch!='h';ch=getchar());\n\tchar ch2=getchar();\n\tint t=0;\n\tfor (;ch2>='0'&&ch2<='9';ch2=getchar()) t=t*10-'0'+ch2;\n\tif (ch=='m') t+=n;\n\treturn t;\n}\n\nvoid work()\n{\n\tint i,j,k,u,v;\n\tscanf(\"%d%d\",&n,&m);\n\tn2=n<<1;\n\tfor (i=1;i<=n2;i++)\n\t\tfor (j=1;j<=n2;j++)\n\t\t\tMap[i][j]=0;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tinv[i]=i+n;\n\t\tinv[i+n]=i;\n\t}\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tu=read(); v=read();\n\t\tMap[inv[u]][v]=1;\n\t\tMap[inv[v]][u]=1;\n\t}\n\tfor (k=1;k<=n2;k++)\n\t\tfor (i=1;i<=n2;i++)\n\t\t\tfor (j=1;j<=n2;j++)\n\t\t\t\tif (Map[i][k]&&Map[k][j])\n\t\t\t\t\tMap[i][j]=1;\n\tfor (i=1;i<=n;i++)\n\t\tif (Map[i+n][i]&&Map[i][i+n])\n\t\t\tbreak;\n\tif (i<=n)\n\t\tprintf(\"BAD\\n\");\n\telse\n\t\tprintf(\"GOOD\\n\");\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile (t--)\n\t\twork();\n}\n```",
        "postTime": 1533393718,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4171 \u3010[JSOI2010]\u6ee1\u6c49\u5168\u5e2d\u3011"
    }
]