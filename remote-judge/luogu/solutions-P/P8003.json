[
    {
        "content": "## \u524d\u8a00\n\u8003\u573a\u964d\u667a\u60f3\u5230\u4e86\u6027\u8d28\u4f46\u662f\u6ca1\u6709\u8003\u8651\u90a3\u4e00\u7c7b\u60c5\u51b5\uff0c\u4e8e\u662f\u5bc4\u4e86\u3002\n## \u601d\u8def\n\u9996\u5148 $n=2$ \u7684\u60c5\u51b5\u662f\u5e73\u51e1\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u5224\u6389\u5c31\u884c\u4e86\u3002\n\n\u4e0b\u6587\u7528\u201c\u6700\u540e\u4e00\u6bb5\u201d\u6307\u6700\u53f3\u8fb9\u7684\u6781\u957f\u5de6\u62ec\u53f7\u6bb5\uff0c\u6211\u4eec\u8003\u8651\u65b0\u52a0\u5165\u7684\u5de6\u62ec\u53f7\uff1a\n\n* \u5728\u6700\u540e\u4e00\u6bb5\u4e4b\u524d\uff0c\u4f8b\u5982 $\\texttt{(())(())}\\to\\texttt{(()}\\color{red}\\texttt{(}\\color{black}\\texttt{)(())}$\u3002\n\n\u5220\u9664\u6700\u540e\u4e00\u6bb5\u7684\u4e00\u4e2a\u62ec\u53f7\uff0c\u52a0\u5165\u8fd9\u4e2a\u62ec\u53f7\uff0c\u663e\u7136\u4ecd\u7136\u5408\u6cd5\uff0c\u56e0\u6b64\u4e0d\u80fd\u63d2\u5165\u3002\n\n* \u52a0\u5165\u6700\u540e\u4e00\u6bb5\uff0c\u4f8b\u5982 $\\texttt{(())(())}\\to\\texttt{(())}\\color{red}\\texttt{(}\\color{black}\\texttt{(())}$ \u6216\u8005 $\\texttt{(()())}\\to\\texttt{(()}\\color{red}\\texttt{(}\\color{black}\\texttt{())}$\u3002\n\n\u5982\u679c\u5220\u9664\u5012\u6570\u7b2c\u4e8c\u6bb5\u7684\u4e00\u4e2a\u62ec\u53f7\uff0c\u52a0\u5165\u8fd9\u4e2a\u62ec\u53f7\u4ecd\u7136\u5408\u6cd5\uff0c\u90a3\u4e48\u4e0d\u80fd\u63d2\u5165\uff0c\u5426\u5219\u53ef\u4ee5\u63d2\u5165\u3002\n\n\u7ed9\u51fa\u7684\u4f8b\u5b50\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u662f\u5408\u6cd5\u7684\uff0c\u800c\u7b2c\u4e8c\u4e2a\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u901a\u8fc7\u89c2\u5bdf\u548c\u9a8c\u8bc1\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u6761\u4ef6\u7b49\u4ef7\u4e8e**\u8fd9\u6bb5\u62ec\u53f7\u540e\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u7684\u6570\u91cf\u4e0d\u76f8\u7b49**\u3002\n\n* \u52a0\u5165\u6700\u540e\u4e00\u6bb5\u4e4b\u540e\uff0c\u4f46\u662f\u53f3\u4fa7\u4ecd\u7136\u5b58\u5728\u4e00\u4e2a\u53f3\u62ec\u53f7\uff0c\u4f8b\u5982 $\\texttt{(())(())}\\to\\texttt{(())(()}\\color{red}\\texttt{(}\\color{black}\\texttt{)}$\u3002\n\n\u5220\u9664\u6700\u540e\u4e00\u6bb5\u7684\u4e00\u4e2a\u62ec\u53f7\uff0c\u52a0\u5165\u8fd9\u4e2a\u62ec\u53f7\uff0c\u663e\u7136\u4ecd\u7136\u5408\u6cd5\uff0c\u56e0\u6b64\u4e0d\u80fd\u63d2\u5165\u3002\n\n* \u52a0\u5165\u672b\u5c3e\uff0c\u4f8b\u5982 $\\texttt{(())(())}\\to\\texttt{(())(())}\\color{red}\\texttt{(}$\u3002\n\n\u663e\u7136\u4e0d\u53ef\u80fd\u9009\u8fd9\u4e2a\u62ec\u53f7\uff0c\u4e8e\u662f\u8fd8\u662f\u5408\u6cd5\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d2\u5165\u3002 \n\n\u53f3\u62ec\u53f7\u662f\u540c\u7406\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u8bc1\u660e\u4e86\u53ea\u80fd\u5728\u5982\u4e0a\u6240\u8ff0\u7684\u5730\u65b9\u63d2\u5165\u65b0\u7684\u62ec\u53f7\u7684\u5fc5\u8981\u6027\u3002\u4e0d\u96be\u53d1\u73b0\u5728\u6700\u5f00\u59cb\u63d2\u5165\u53f3\u62ec\u53f7\u548c\u5728\u6700\u540e\u63d2\u5165\u5de6\u62ec\u53f7\u90fd\u6ca1\u6709\u610f\u4e49\uff0c\u800c\u5269\u4e0b\u7684\u60c5\u51b5\u4e2d\u63d2\u5165\u7684\u62ec\u53f7\u8981\u4e48\u53ea\u80fd\u5f62\u6210 $\\texttt{((...()...))}$\uff0c\u8981\u4e48\u6839\u672c\u6ca1\u6709\u4ea4\u96c6\uff0c\u56e0\u6b64\u5145\u5206\u6027\u4e5f\u53ef\u4ee5\u8bc1\u660e\u3002\n\n\u8ba1\u6570\u662f\u5e73\u51e1\u7684\uff0c\u8bbe $f_i$ \u4e3a\u63d2\u5165 $i$ \u4e2a\u5de6\u62ec\u53f7\u7684\u60c5\u51b5\u3002\n\n\u5982\u679c\u5de6\u62ec\u53f7\u53ea\u80fd\u5728\u6700\u540e\u63d2\u5165\uff0c\u90a3\u4e48 $f_i=1$\u3002\n\n\u5982\u679c\u5de6\u62ec\u53f7\u53ef\u4ee5\u5728\u6700\u540e\u6216\u6700\u540e\u4e00\u6bb5\u5de6\u62ec\u53f7\u63d2\u5165\uff0c\u8bb0\u6700\u540e\u4e00\u6bb5\u5de6\u62ec\u53f7\u957f\u5ea6\u4e3a $l$\uff0c\u90a3\u4e48 $f_i=\\sum\\limits_{j=0}^i\\binom{l+i}{i}$\u3002\n\n\u5408\u5e76\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u7684\u65b9\u6848\u6570\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nconst int p=998244353;\nint qp(int x,int y)\n{\n\tint res=1;\n\tfor(int t=x; y; y>>=1,t=t*t%p) if(y&1) res=res*t%p;\n\treturn res;\n}\nchar s[1000003];\nint fac[1000003],ifac[1000003];\nint C(int n,int m)\n{\n\treturn fac[n]*ifac[m]%p*ifac[n-m]%p;\n}\nint A(int x,int y,int z)\n{\n\tint res=0;\n\tif(x!=z) return 1;\n\tfor(int i=0; i<=y; ++i)\n\t\tres=(res+C(x+i,i))%p; \n\treturn res;\n}\nint F[1000003],G[1000003];\nsigned main()\n{\n\tconst int N=1000000;\n\tfac[0]=ifac[0]=1;\n\tfor(int i=1; i<=N; ++i) fac[i]=fac[i-1]*i%p;\n\tifac[N]=qp(fac[N],p-2);\n\tfor(int i=N-1; i>=1; --i) ifac[i]=ifac[i+1]*(i+1)%p;\n\tfor(int T=read();T--;)\n\t{\n\t\tint n=read(),m=read();\n\t\tscanf(\"%s\",s+1);\n\t\tif(n==2) printf(\"%lld\\n\",(m*(m-1)/2)%p*qp(2,m-n)%p);\n\t\telse\n\t\t{\n\t\t\tm-=n;\n\t\t\tint fir=1,lst=n,fc=0,lc=0,ffc=0,llc=0;\n\t\t\twhile(s[fir]=='(') ++ffc,++fir;\n\t\t\twhile(s[lst]==')') ++llc,--lst;\n\t\t\twhile(s[fir]==')') ++fc,++fir;\n\t\t\twhile(s[lst]=='(') ++lc,--lst;\n\t\t\tint ans=0;\n\t\t\tF[0]=G[0]=1;\n\t\t\tfor(int i=1; i<=m; ++i) \n\t\t\t{\n\t\t\t\tF[i]=F[i-1];\n\t\t\t\tif(fc==ffc) F[i]=(F[i]+C(fc+i,i))%p;\n\t\t\t}\n\t\t\tfor(int i=1; i<=m; ++i) \n\t\t\t{\n\t\t\t\tG[i]=G[i-1];\n\t\t\t\tif(lc==llc) G[i]=(G[i]+C(lc+i,i))%p;\n\t\t\t}\n\t\t\tfor(int i=0; i<=m; ++i) ans=(ans+F[i]*G[m-i])%p;\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1641280401,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8003"
    }
]