[
    {
        "content": "\u8fd9\u4e2a\u9898\u53ef\u4ee5\u7528**\u6700\u5c0f\u751f\u6210\u6811**\u505a\n\n    \u8fd9\u4e2a\u9898\u662f\u8ba9\u6211\u4eec\u627e\u4e00\u6761s,t\u7684\u8def\u5f84 ,\u4f7f\u5f97\u8fd9\u6761\u8def\u4e0a\u7684\u6700\u5927\u8fb9\u548c\u6700\u5c0f\u8fb9\u7684\u6bd4\u503c\u6700\u5c0f\n\n    \u90a3\u6211\u4eec\u53ef\u4ee5\u5148\u56fa\u5b9a\u4e00\u6761\u6700\u5927\u8fb9\uff0c\u7136\u540e\u4e0d\u65ad\u5411\u5176\u4e2d\u6dfb\u52a0\u5c0f\u8fb9\u76f4\u5230s\uff0ct\u8054\u901a\n\n    \u7531\u4e8e\u6211\u4eec\u53ef\u4ee5\u5c06\u5c0f\u8fb9\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\uff0c\u6bcf\u6b21\u5224\u65ads,t\u662f\u5426\u8054\u901a\n    \n    \u90a3s,t\u4e00\u65e6\u8054\u901a\uff0c\u6b64\u65f6\u7684\u6700\u5927\u8fb9\u548c\u6700\u5c0f\u8fb9\u5c31\u662f\u4e00\u7ec4\u53ef\u80fd\u7684\u89e3\u5566\n\n    \u7136\u540e\u6211\u4eec\u679a\u4e3e\u6240\u6709\u6700\u5927\u8fb9\uff0c\u5c06\u6240\u6709\u53ef\u884c\u89e3\u627e\u5230\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u6bd4\u8f83\u4e00\u4e0b\u5c31\u5f97\u51fa\u6700\u4f18\u89e3\u5566\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm> \n#define re register\t\t//\u653e\u5728\u5faa\u73af\u524d\u53ef\u4ee5\u8ba9\u4f60\u7684\u5faa\u73af\u66f4\u5feb\u4e00\u70b9 \nusing namespace std;\nint n,m,fa[1010],s,t,rn,cnt,ansnum,vis[1010];\ndouble ans=50000;\nstruct edge{int u,v,w;}e[10100];\nstruct anss{int maxx,minn;}aa[200000];\nint gcd(int a,int b){\t\t//\u6700\u5927\u516c\u7ea6\u6570 \u7ea6\u5206\u7528\u7684~ \n\tif(b==0)\treturn a;\n\telse return gcd(b,a%b); \n}\nint getf(int a){\t//\u627e\u7239  \u987a\u4fbf\u8def\u5f84\u538b\u7f29\u4e00\u4e0b \n\tif(fa[a]==a)\treturn a;\n\treturn fa[a]=getf(fa[a]);\n} \nint cmp(edge a,edge b){return a.w<b.w;}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(re int i=1;i<=n;++i)\tfa[i]=i,vis[i]=1;\n\tfor(re int i=1;i<=m;++i){\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\te[i].u=u,e[i].v=v,e[i].w=w;\n\t\tint fu=getf(u),fv=getf(v);//\u5148\u628a\u6240\u6709\u8fb9\u8fde\u8d77\u6765\u770b\u770b s \u548c t \u662f\u5426\u8054\u901a \n\t\tif(fu!=fv)\tfa[fu]=fv;\n\t}\n\tscanf(\"%d%d\",&s,&t);\n\tif(getf(s)!=getf(t)){\t\t\t//\u5224\u65ad\u662f\u5426\u8054\u901a \n\t\tcout<<\"IMPOSSIBLE\";\n\t\treturn 0;\n\t}\n\tint fs=getf(s);\n\tfor(re int i=1;i<=n;++i)\n\t\tif(getf(i)!=fs)\tvis[i]=0;\t\t//\u53bb\u6389\u6ca1\u7528\u7684\u70b9\uff08\u5c31\u662f\u548cs,t\u4e0d\u8fde\u901a\u7684\u70b9 \n\tfor(re int i=1;i<=n;++i)\tfa[i]=i;\t\n\tsort(e+1,e+m+1,cmp);\n\tfor(re int i=1;i<=m;++i){\t\t\t//\u56fa\u5b9a\u6700\u5927\u8fb9 \n\t\tif(!vis[e[i].u]||!vis[e[i].v])\tcontinue;\t//\u65e2\u7136\u548cs,t\u4e0d\u8fde\u901a\u90a3\u5c31\u4e0d\u7528\u8fd9\u6761\u8fb9 \n\t\tfor(re int j=1;j<=n;++j)\tfa[j]=j; //\u8bb0\u5f97\u521d\u59cb\u5316fa\u54e6 \n\t\tfor(re int j=i;j>=1;j--){\t\t//\u5bfb\u627e\u4f7fs,t\u8054\u901a\u7684\u6700\u5c0f\u8fb9 \n\t\t\tint u=e[j].u,v=e[j].v;\n\t\t\tif(!vis[u]||!vis[v])\tcontinue;\n\t\t\tint fu=getf(u),fv=getf(v);\n\t\t\tif(fu!=fv){\n\t\t\t\tfa[fu]=fv;\n\t\t\t\tint fs=getf(s),ft=getf(t);\n\t\t\t\tif(fs==ft){\t\t\t\t//\u627e\u5230\u6700\u5c0f\u8fb9 \n\t\t\t\t\taa[++cnt]=(anss){e[i].w,e[j].w};//\u6dfb\u52a0\u5230\u53ef\u884c\u89e3\u4e2d \n\t\t\t\t\tbreak;\t \n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\tfor(re int i=1;i<=cnt;++i){   //\u5bfb\u627e\u5e76\u8bb0\u5f55\u6700\u4f18\u89e3 \n\t\tif(((double)aa[i].maxx/(double)aa[i].minn)<ans){\n\t\t\tans=((double)aa[i].maxx/(double)aa[i].minn);\n\t\t\tansnum=i;\n\t\t} \n\t}\n\tif((aa[ansnum].maxx%aa[ansnum].minn)==0){//\u6700\u4f18\u89e3\u662f\u6574\u6570 \n\t\tcout<<aa[ansnum].maxx/aa[ansnum].minn;\n\t}\n\telse{//\u6700\u4f18\u89e3\u4e0d\u662f\u6574\u6570 \n\t\tint a1=aa[ansnum].maxx/gcd(aa[ansnum].maxx,aa[ansnum].minn);\n\t\tint a2=aa[ansnum].minn/gcd(aa[ansnum].maxx,aa[ansnum].minn);\n\t\tcout<<a1<<\"/\"<<a2;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1538456758,
        "uid": 64355,
        "name": "dailt",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u8bf4\u5b9e\u8bdd\uff0c\u7b2c\u4e00\u6b21\u505a\u7528\u7c7b\u4f3c\u6700\u5c0f\u751f\u6210\u6811\u7684\u6a21\u578b\u6765\u679a\u4e3e\u7684\uff0c\u770b\u5230\u6b63\u89e3\u8ba9\u4eba\u773c\u524d\u4e00\u4eae\uff0c\u89e3\u6cd5\u786e\u5b9e\u5999\u554a\uff01\n\n\u521a\u5f00\u59cb\u505a\u7684\u65f6\u5019\u5199\u4e86\u4e2a\u88f8\u66b4\u529b\u679a\u4e3e\u6240\u6709\u53ef\u884c\u7684\u8def\u7ebf\uff0c\u590d\u6742\u5ea6\u7206\u70b8\u800c\u4e14\u8ba1\u7b97\u4e0d\u51fa\u5177\u4f53\u590d\u6742\u5ea6\uff0c\u53ea\u80fd\u5927\u6982\u60f3\u5230\u8fd9\u4e2a\u590d\u6742\u5ea6\u4e0b\u6765\u6700\u574f\u60c5\u51b5\u662f\u4e2a\u6307\u6570\u7ea7\u522b\uff0c\u8def\u7ebf\u7531\u4e8e\u4e58\u6cd5\u539f\u7406\u7b97\u4e0b\u6765\u4f1a\u975e\u5e38\u975e\u5e38\u591a\u3002\u7136\u540e\u5373\u4f7f\u6211\u52a0\u4e0a\u4e86\u53ef\u884c\u6027\u526a\u679d\u548c\u6700\u4f18\u6027\u526a\u679d\uff0c\u4e24\u4e2a\u526a\u679d\u5e26\u6765\u7684\u6548\u679c\u53ea\u662f\u4ece$20pts$\u591a\u4e86$10$\u5206\u53d8\u6210\u4e86$30pts$\uff0c\u7136\u540e\u5269\u4e0b7\u4e2a\u70b9\u5168\u90e8\u7206\u6808\uff08\u4e0d\u7206\u4e5f\u8d85\u65f6\uff09\u3002\n\n#### \u6b63\u89e3\u53ef\u4ee5\u8bf4\u662f\u7406\u89e3\u4e4b\u540e\uff0c\u53c8\u597d\u60f3\uff0c\u53c8\u597d\u5199\u3002\n\n\u9996\u5148\uff0c\u5224\u65ad\u8d77\u70b9\u80fd\u4e0d\u80fd\u5230\u8fbe\u7ec8\u70b9\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u590d\u6742\u5ea6$O(\u03b1(m))$\uff0c\u6bd4$Floyd$\u7684$O(n^3)$\u548c$dfs$\u7684$O(n+m)$\u90fd\u4f18\u79c0\u4e86\u4e0d\u5c11\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u7528\u7684\u8fb9\u6392\u5e8f\uff0c\u7136\u540e\uff0c\u679a\u4e3e\u4e00\u4e0b\u6700\u5927\u8fb9\u548c\u6700\u5c0f\u8fb9\uff0c\u8fd9\u6837\uff0c\u6700\u5927\u8fb9\u548c\u6700\u5c0f\u8fb9\u4e2d\u95f4\u7684\u6240\u6709\u8fb9\u90fd\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u90fd\u53ef\u4ee5\u9009\u5230\u8def\u7ebf\u91cc\u9762\uff0c\u628a\u8fd9\u4e9b\u8fb9\u7684\u7aef\u70b9\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8d77\u6765\uff0c\u5982\u679c\u8d77\u70b9\u548c\u7ec8\u70b9\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u6210\u529f\u627e\u5230\u8def\u7ebf\u3002\n\n\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\uff0c\u6bcf\u6b21\u7528\u5f53\u524d\u6700\u5927\u8fb9\u548c\u6700\u5c0f\u8fb9\u53bb\u66f4\u65b0\u7b54\u6848\uff0c\u7531\u4e8e\u5355\u8c03\u6027\uff0c\u8fd8\u53ef\u4ee5\u5728\u5408\u9002\u7684\u5730\u65b9\u52a0\u4e0a$break$\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u6240\u6709\u8fb9\u90fd\u9009\u4e0a\u4e86\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u8fd8\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u90a3\u4e48\u5c31$\"IMPOSSIBLE\"$\u3002\n\n**PS\uff1a** \u770b\u5230\u6709\u4e9b\u9898\u89e3\u91cc\u53bb\u5220\u6389\u4e86\u548c\u8d77\u70b9\u7ec8\u70b9\u4e0d\u8fde\u901a\u7684\u70b9\uff0c\u62ff\u4e86\u4e2a$vis$\u8bb0\u5f55\u4e0b\u6765\u7279\u5224\u4e86\uff0c\u5176\u5b9e\u5b8c\u5168\u4e0d\u5fc5\u8981\u3002\u9996\u5148\u4f60\u7684\u5220\u70b9\u53ea\u662f\u8bb0\u5f55\u4e0b\u6765\u800c\u6ca1\u6709\u53bb\u6539$n$\u7684\u503c\uff0c\u5faa\u73af\u6b21\u6570\u4e0d\u53d8\uff0c\u603b\u4f53\u590d\u6742\u5ea6\u6ca1\u6709\u4f18\u5316\uff1b\u5176\u6b21\u4f60\u52a0\u4e86\u5927\u91cf\u7684\u5224\u65ad\uff0c\u5e38\u6570\u5927\u4e86\u5f88\u591a\uff0c\u8fd9\u4e9b\u5224\u65ad\u8fd8\u662f\u5f88\u8017\u65f6\u95f4\u7684\u3002**\u8fd9\u771f\u7684\u5b8c\u5168\u662f\u4e2a\u8d1f\u4f18\u5316\u3002**\n\n### $code:$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=510;\nconst int maxm=5100;\nstruct edge{\n\tint form,to,next,w;\n}e[maxm*2];\nint n,m;\nint fa[maxn];\nint find(int x){return fa[x]==x? x : fa[x]=find(fa[x]);}\nvoid unionn(int a,int b){fa[find(a)]=find(b);}\nint cnt=0;\ninline void add(int u,int v,int w){\n\tcnt++;\n\te[cnt].form=u;\n\te[cnt].to=v;\n//\te[cnt].next=last[u];\n//\tlast[u]=cnt;\n\te[cnt].w=w;\n}\ninline bool cmp(edge &a,edge &b){\n\treturn a.w>b.w;\n}\nint st,en;\ndouble ans=1e10;\nint a,b;\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\tfor(int i=1,u,v,w;i<=m;i++){\n\t\tcin>>u>>v>>w;\n\t\tadd(u,v,w);\n\t\tunionn(u,v);\n\t} \n\tcin>>st>>en;\n\tif(find(st)!=find(en)){\n\t\tcout<<\"IMPOSSIBLE\";\n\t\treturn 0;\n\t}\n\tsort(e+1,e+1+cnt,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int k=1;k<=n;k++) fa[k]=k;\n\t\tfor(int j=i;j<=m;j++){\n\t\t\tint u=e[j].form,v=e[j].to;\n\t\t\tunionn(u,v);\n\t\t\tif(find(st)==find(en)){\n\t\t\t\tdouble tmp=(1.0*e[i].w)/(1.0*e[j].w);\n\t\t\t\tif(tmp<ans) a=e[i].w,b=e[j].w,ans=tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} \n\tif(a/b*b==a){\n\t\tcout<<a/b;\n\t}\n\telse cout<<a/__gcd(a,b)<<\"/\"<<b/__gcd(a,b);\n\treturn 0;\n} \n```",
        "postTime": 1554302554,
        "uid": 64611,
        "name": "\u4eba\u6b87\u7269\u5df2\u975e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u5148\u6309\u8fb9\u957f\u6392\u5e8f\uff0c\u5047\u8bbes\u4e0et\u8fde\u901a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u679a\u4e3es\u4e0et\u7684\u8def\u5f84\u4e2d\u6700\u77ed\u7684\u4e00\u6761\u8fb9\uff0c\u901a\u8fc7\u7c7b\u4f3c\u4e0ekruskal\u7684\u65b9\u6cd5\u627e\u5230s\u4e0et\u7684\u8def\u5f84\u5728\u5f53\u524d\u6700\u5c0f\u8fb9\u6743\u60c5\u51b5\u4e0b\u5c3d\u91cf\u5c0f\u7684\u6700\u5927\u8fb9\u6743\uff0c\u7528\u8fd9\u4e2a\u6bd4\u503c\u66f4\u65b0\u7b54\u6848\u3002\n\n\n\u7279\u522b\u7684\uff0c\u6211\u4eec\u5bf9\u4e8e\u67d0\u4e00\u60c5\u51b5\uff0c\u5982\u679c\u5faa\u73af\u5b8c\u8fb9\u4e4b\u540es\u4e0et\u4e0d\u8fde\u901a\u53ef\u4ee5\u8df3\u51fa\u3002\u5728\u786e\u5b9a\u4e86\u6700\u5c0f\u8fb9\u627e\u5b8c\u6700\u5927\u8fb9\u7684\u65f6\u5019\uff0c\u4e0d\u5fc5\u8981\u7ee7\u7eed\u679a\u4e3e\u6700\u5c0f\u8fb9+1\uff0c\u53ef\u4ee5\u4ece\u6700\u5927\u8fb9\u5f00\u59cb\u5411\u524d\u52a0\u8fb9\uff0c\u627e\u5230\u6700\u5927\u7684\u8fb9\u4fdd\u8bc1s\uff0ct\u8fde\u901a\uff0c\u4e14\u6700\u5927\u8fb9\u4e3a\u521a\u624d\u6c42\u5f97\u7684\uff0c\u66f4\u65b0\u7b54\u6848\uff0c\u4ece\u8fd9\u4e2a\u8fb9\u7ee7\u7eed\u679a\u4e3e\u3002\u8fd9\u4e24\u4e2a\u4e3a\u4f18\u5316\u3002\n\n \n \n \n \n \n \n \n```cpp\n#include <cstdio>\n#include <algorithm>\n#define maxn 600\n#define maxm 5010\nusing namespace std;\nint n,m,s,t;\nint father[maxn];\nint ans1,ans2;\nstruct rec\n{\n    int a,b,len;\n} c[maxm];\nbool cmp(rec a,rec b)\n{return (a.len<b.len);}\nint getfather(int x)\n{\n    if (father[x]==x) return x;\n    return father[x]=getfather(father[x]);\n}\nint gcd(int x,int y)\n{\n    if (y>x) return gcd(y,x);\n    if (!y) return x;\n    return gcd(y,x%y);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=m;i++) scanf(\"%d%d%d\",&c[i].a,&c[i].b,&c[i].len);\n    scanf(\"%d%d\",&s,&t);\n    sort(c+1,c+1+m,cmp);\n    for (int i=1;i<=m;i++)\n    {\n        int j;\n        for (j=1;j<=n;j++) father[j]=j;\n        for (j=i;j<=m;j++)\n        {\n            int fa,fb;\n            fa=getfather(c[j].a); fb=getfather(c[j].b);\n            if (fa==fb) continue;\n            father[fa]=fb;\n            if (getfather(s)==getfather(t)) break;\n        }\n        if ((i==1)&&(getfather(s)!=getfather(t))) \n        {\n            printf(\"IMPOSSIBLE\\n\");\n            return 0;\n        }\n        if (getfather(s)!=getfather(t)) break;  \n        if (ans1*c[i].len>=ans2*c[j].len) ans1=c[j].len,ans2=c[i].len;\n    }\n    int x=gcd(ans1,ans2);\n    if (x==ans2) printf(\"%d\\n\",ans1/ans2); else printf(\"%d/%d\\n\",ans1/x,ans2/x);\n    return 0;\n}\n```",
        "postTime": 1471311549,
        "uid": 14772,
        "name": "a2540729803",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u4e2a $O(nm+m\\sqrt m\\alpha(m))$ \u7684\u505a\u6cd5\uff0c\u6bd4\u5927\u90e8\u5206\u4eba\u7684 $O(m^2)$ \u7b97\u6cd5\u4f18\u3002\r\n\r\n\u5c06\u8fb9\u6392\u5e8f\u540e\u5206\u4e3a $\\sqrt m$ \u5757\uff0c\u679a\u4e3e\u6bcf\u4e24\u5757\u4e4b\u95f4\uff0c\u7ef4\u62a4\u51fa\u8fd9\u4e00\u6bb5\u7684\u5e76\u67e5\u96c6\u3002\r\n\r\n\u8fd9\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662f $O(n\\times \\sqrt m\\times\\sqrt m)=O(nm)$ \u7684\u3002\r\n\r\n\u7136\u540e\u8003\u8651\u5230\u5bf9\u4e8e\u6700\u5c0f\u8fb9\u6743\u662f $l$\uff0c\u6700\u5927\u8fb9\u6743\u662f $r$ \u7684\u60c5\u51b5\uff0c\u5982\u679c\u6b64\u65f6 $s$ \u4e0e $t$ \u8fde\u901a\uff0c\u90a3\u4e48\u52a0\u5927 $r$ \u5fc5\u7136\u4ecd\u7136\u8fde\u901a\u3002\u6240\u4ee5\u53ef\u4ee5\u53cc\u6307\u9488\u3002\r\n\r\n\u8fd9\u6837\uff0c\u5f53\u6700\u5c0f\u8fb9\u6743\u662f $l$\uff0c\u6700\u5927\u8fb9\u6743\u662f $r$ \u7684\u65f6\u5019\uff0c\u5229\u7528\u521a\u624d\u7684\u5206\u5757\uff0c\u53ef\u4ee5\u505a\u5230 $O(\\sqrt m)$ \u6b21\u5e76\u67e5\u96c6\u64cd\u4f5c\u8ba1\u7b97\u51fa $s,t$ \u95f4\u7684\u8fde\u901a\u6027\u3002\r\n\r\n\u7531\u4e8e\u53cc\u6307\u9488\u53ea\u9700\u8981\u8ba1\u7b97 $O(m)$ \u6b21\uff0c\u6240\u4ee5\u8fd9\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662f $O(m\\sqrt m\\alpha(m))$\u3002\r\n\r\n\u6545\u603b\u590d\u6742\u5ea6\u662f $O(nm+m\\sqrt m\\alpha(m))$\u3002\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <stack>\r\nusing namespace std;\r\n\r\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\r\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\r\n\r\ninline int qread() {\r\n\tregister char c = getchar();\r\n\tregister int x = 0, f = 1;\r\n\twhile (c < '0' || c > '9') {\r\n\t\tif (c == '-') f = -1;\r\n\t\tc = getchar();\r\n\t}\r\n\twhile (c >= '0' && c <= '9') {\r\n\t\tx = (x << 3) + (x << 1) + c - 48;\r\n\t\tc = getchar();\r\n\t}\r\n\treturn x * f;\r\n}\r\n\r\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\r\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\r\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\r\n\r\nconst int S = 71, N = 505, M = 5005;\r\nint n, m, f[S + 5][S + 5][N], s, t, tmp[N], pos[M], bl[M], br[M];\r\nstruct Edge {\r\n\tint u, v, w;\r\n\tEdge() {}\r\n\tEdge(int u, int v, int w) : u(u), v(v), w(w) {}\r\n\tbool operator < (const Edge& b) const {\r\n\t\treturn w < b.w;\r\n\t}\r\n};\r\nEdge e[M];\r\n\r\ninline void Read() {\r\n\tn = qread(); m = qread();\r\n\tfor (int i = 1;i <= m;i++) {\r\n\t\te[i].u = qread(); e[i].v = qread(); e[i].w = qread();\r\n\t}\r\n\ts = qread(); t = qread();\r\n}\r\n\r\ninline void Init() {\r\n\tfor (int i = 1;i <= n;i++) tmp[i] = i;\r\n}\r\n\r\ninline int GetRoot(int v) {\r\n\tif (tmp[v] == v) return v;\r\n\treturn tmp[v] = GetRoot(tmp[v]);\r\n}\r\n\r\ninline void Merge(int x, int y) {\r\n\tint u = GetRoot(x), v = GetRoot(y);\r\n\ttmp[v] = u;\r\n}\r\n\r\ninline void Prefix() {\r\n\tfor (int i = 1;i <= m;i++) pos[i] = (i - 1) / S + 1;\r\n\tfor (int i = 1;i <= pos[m];i++) {\r\n\t\tbl[i] = (i - 1) * S + 1;\r\n\t\tbr[i] = i * S;\r\n\t}\r\n\tbr[pos[m]] = m;\r\n\tfor (int i = 1;i <= pos[m];i++) {\r\n\t\tInit();\r\n\t\tfor (int j = bl[i];j <= m;j++) {\r\n\t\t\tMerge(e[j].u, e[j].v);\r\n\t\t\tif (j == br[pos[j]]) memcpy(f[i][pos[j]], tmp, sizeof(f[i][pos[j]]));\r\n\t\t}\r\n\t}\r\n}\r\n\r\ninline bool Judge(int l, int r) {\r\n\tif (pos[l] + 1 >= pos[r]) {\r\n\t\tInit();\r\n\t\tfor (int i = l;i <= r;i++) Merge(e[i].u, e[i].v);\r\n\t} else {\r\n\t\tmemcpy(tmp, f[pos[l] + 1][pos[r] - 1], sizeof(tmp));\r\n\t\tfor (int i = l;i <= br[pos[l]];i++) Merge(e[i].u, e[i].v);\r\n\t\tfor (int i = bl[pos[r]];i <= r;i++) Merge(e[i].u, e[i].v);\r\n\t}\r\n\treturn GetRoot(s) == GetRoot(t);\r\n}\r\n\r\ninline long long gcd(long long m, long long n) {\r\n\tlong long r = m % n;\r\n\twhile (r) {\r\n\t\tm = n;\r\n\t\tn = r;\r\n\t\tr = m % n;\r\n\t}\r\n\treturn n;\r\n}\r\n\r\ninline void Solve() {\r\n\tint l = 1, r = 1;\r\n\twhile (!Judge(l, r) && r <= m) r++;\r\n\tif (r > m) {\r\n\t\tputs(\"IMPOSSIBLE\");\r\n\t\treturn;\r\n\t}\r\n\tlong long a = e[l].w, b = e[r].w;\r\n\twhile (r <= m) {\r\n\t\tif (a * e[r].w < e[l].w * b) {\r\n\t\t\ta = e[l].w;\r\n\t\t\tb = e[r].w;\r\n\t\t}\r\n\t\tl++;\r\n\t\twhile (!Judge(l, r) && r <= m) r++;\r\n\t}\r\n\tlong long g = gcd(a, b);\r\n\tb /= g; a /= g;\r\n\tif (a == 1) printf(\"%lld\", b);\r\n\telse printf(\"%lld/%lld\", b, a);\r\n}\r\n\r\nint main() {\r\n\tRead();\r\n\tsort(e + 1, e + m + 1);\r\n\tPrefix();\r\n\tSolve();\r\n\t#ifdef CFA_44\r\n\twhile (1);\r\n\t#endif\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1624544560,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "emmmmmm\uff0c\u5f88\u96be\u7684\u8bf4\uff0c\u8fd9\u9053\u9898\u5f00\u59cb\u770b\u7684\u65f6\u5019\u89c9\u5f97\u8fd8\u884c\uff0c\u5e94\u8be5\u5c31\u662f\u56fe\u8bba\u5427\uff0c\u7136\u540e\u786e\u5b9e\u662f\u4e2a\u56fe\u8bba\uff0c\u9996\u5148\u6211\u4eec\u80af\u5b9a\u5148\u8bb0\u5f55\u6bcf\u6bb5\u95f4\u7684\u901f\u5ea6\uff0c\u4e0d\u52a0\u4f18\u5316\uff0c\u4ece\u6700\u5c0f\u7684\u901f\u5ea6\u5f00\u59cb\uff0c\u6784\u9020\u6700\u5c0f\u751f\u6210\u6811\u77e5\u9053\u8d77\u70b9\u4e0e\u7ec8\u70b9\u8054\u901a\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u25b3v\u4e00\u5b9a\u662f\u5f53\u524d\u7684\u6700\u5c0f\u503c\uff0c\u987a\u6b21\u4ece\u6392\u5e8f\u540e\u7684\u6bcf\u4e00\u6761\u8fb9\u4e3a\u8d77\u70b9\u6784\u9020\u6700\u5c0f\u751f\u6210\u6811\uff0c\u66f4\u65b0minans\uff0c\u6700\u540e\u5f97\u5230\u7b54\u6848\uff0c\u6700\u540e\u5206\u6570\u5316\u7b80\u90e8\u5206\u5efa\u8bae\u5927\u4f6c\u4eec\u7528gcd\uff0c\u849f\u84bb\u5fd8\u8bb0\u4e86\u677f\u5b50\uff0c\u4e8e\u662f\u5c31\u53ea\u597d\u66b4\u529b\u5316\u7b80\uff0c\u89e3\u51b3\uff01\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=1e4+5;\nint n,m,s,t,f[maxn],up,down;\nint f1,f2;\ndouble fs=1e4;\nstruct node{\n\tint a,b,v;\n}e[maxn*2];\nbool cmp(node x,node y){\n\treturn x.v<y.v;\n}\nint get(int x){\n\tif(x==f[x]) return x;\n\telse return f[x]=get(f[x]);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&e[i].a,&e[i].b,&e[i].v);\n\t}\n\tscanf(\"%d%d\",&s,&t);\n\tsort(e+1,e+m+1,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tf1=e[i].v,f2=e[i].v;\n\t\tint fl=0;\n\t\tfor(int j=1;j<=m;j++) f[j]=j;\n\t\tfor(int j=i;j<=m;j++){\n\t\t\tif(get(e[j].a)!=get(e[j].b)){\n\t\t\t\tf[get(e[j].a)]=f[get(e[j].b)];\n\t\t\t\tf2=e[j].v;\n\t\t\t}\n\t\t\tif(get(s)==get(t)){\n\t\t\t\tfl=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(fl==1&&double(f2)/double(f1)<fs){\n\t\t\tup=f2;\n\t\t\tdown=f1;\n\t\t\tfs=double(f2)/double(f1);\n\t\t}\n\t}\n\tif(f1==0||f2==0||fs==10000) cout<<\"IMPOSSIBLE\";\n\telse if((fs-int(fs))>0){\n\t\tfor(int i=2;i<min(up,down);i++){\n\t\t\tif(up%i==0&&down%i==0){\n\t\t\t\tup/=i;\n\t\t\t\tdown/=i;\n\t\t\t}\n\t\t}\n\t\tcout<<up<<\"/\"<<down;\n\t}\n\telse if((fs-int(fs))==0) cout<<fs;\n\treturn 0;\n}\n```",
        "postTime": 1537343304,
        "uid": 46743,
        "name": "loaky",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\n#### \u7ed9\u51fa\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u7ed9\u51fa\u4e00\u4e2as\uff0ct\u4f7f\u5f97\u8fd9\u6761\u8def\u4e0a\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u6bd4\u503c\u6700\u6700\u5c0f\uff0c\u5e76\u4e14\u8f93\u51fa\u65e2\u7ea6\u5206\u6570\uff08\u5373\u6700\u7b80\u5206\u6570\uff09\n\n\n------------\n\n\n#### \u5e76\u67e5\u96c6\u505a\u6cd5\uff1a\n#### \u679a\u4e3e\u6700\u5c0f\u503c\uff0c\u627e\u6700\u5927\u503c\u3002\u6bcf\u6b21\u52a0\u5165\u76f4\u5230\u53ef\u4ee5\u8054\u901a\uff0c\u8fd9\u65f6\u6bd4\u8f83ans\u5927\u5c0f\uff0c\u80fd\u66f4\u65b0\u5219\u66f4\u65b0\u3002\n#### ans\u66f4\u65b0\u65f6\u662f\u5206\u6570\u6bd4\u5927\u5c0f\uff0c\u76f4\u63a5\u4e24\u4e2a\u5206\u5b50\u4e58\u4e0a\u4e92\u76f8\u7684\u5206\u6bcd\u5373\u53ef\u3002\n\n------------\n\n# Code\uff1a\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nint f[1000005],n,m,x,y,z,s,t,ans1=30001,ans2=1;bool flag=false;\nstruct edge{\n\tint u,v,w;\n} e[100005];\n// \u7ed3\u6784\u4f53\u5b58\u56fe\uff0cu,v:\u4e24\u6761\u8fb9\uff0cw:\u6743\u503c \ninline void init(int n){for(int i=1;i<=n;++i)f[i]=i;}//\u5e76\u67e5\u96c6\u521d\u59cb\u5316 \ninline int find(int x){return f[x]==x?x:f[x]=find(f[x]);}//\u67e5\u8be2\u64cd\u4f5c \ninline bool cmp(edge x,edge y){return x.w<y.w;}//cmp\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u7167\u6743\u503c\u5927\u5c0f\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f \nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\te[i].u=x,e[i].v=y,e[i].w=z;\n\t\t//\u8f93\u5165\u56fe \n\t}\n\tscanf(\"%d%d\",&s,&t);\n\tsort(e+1,e+1+m,cmp);\n\t//\u6392\u5e8f \n\tfor(int min_index=1;min_index<=m;++min_index){\n\t\t//\u679a\u4e3e\u6700\u5c0f\u503c\u4e0b\u6807 \n\t\tinit(n);flag=false;//flag\u4ee3\u8868\u6bcf\u6b21\u662f\u5426\u66f4\u65b0ans \n\t\tint max_index=min_index;\n\t\tfor(max_index=min_index;max_index<=m;++max_index){\n\t\t\t//\u6700\u5927\u503c\u4e0b\u6807 \n\t\t\tint p=find(e[max_index].u),q=find(e[max_index].v);\n\t\t\tif(p!=q)f[p]=q;\n\t\t\t// \u5c06\u4e24\u4e2a\u5143\u7d20\u5408\u5e76\uff0c\u6548\u679c\u7b49\u4e8e\u5946\u4f6c\u4eec\u5e38\u5199\u7684merge \n\t\t\tif(find(s)==find(t))\n\t\t\t{flag=true;break;}\n\t\t\t//\u5047\u5982\u4e24\u4e2a\u70b9\u8054\u901a\uff0c\u53c8\u56e0\u4e3a\u5347\u5e8f\u6392\u4e86\u6743\u503c\uff0c\u6240\u4ee5\u6b64\u65f6\u7684\u89e3\u5fc5\u7136\u662f\u5f53\u524dmin_index\u548cmax_index\u91cc\u7684\u6700\u5c0f\u503c \n\t\t}\n\t\tif(flag)if(ans1*e[min_index].w>ans2*e[max_index].w)ans1=e[max_index].w,ans2=e[min_index].w;\n\t\t// \u5206\u6570\u6bd4\u5927\u5c0f \n\t}\n\tif(ans1==30001)puts(\"IMPOSSIBLE\");\n\t// \u5047\u5982ans\u6ca1\u6709\u88ab\u66f4\u65b0\uff0c\u5219\u6ca1\u6709\u8054\u901a\uff0c\u8f93\u51fa\"IMPOSSIBLE\" \n\telse{\n\t\tint com=__gcd(ans1,ans2);\n\t\tans1/=com,ans2/=com;\n\t\t// \u5373\u7ea6\u5206\u6570\uff0c\u5316\u7b80\u5206\u6570 \n\t\tif(ans2==1)printf(\"%d\\n\",ans1);\n\t\t// \u82e5\u5206\u6bcd\u4e3a1\uff0c\u76f4\u63a5\u8f93\u51fa\u5206\u5b50 \n\t\telse printf(\"%d/%d\\n\",ans1,ans2);\n\t}\n\treturn 0;\n}\n\n\n\n\n```\n## \u6c42\u8fc7QWQ\n",
        "postTime": 1603700231,
        "uid": 186794,
        "name": "ExcaliburNGod",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "#### \u9898\u610f\uff1a\n\n\u4e00\u4e2a\u6709 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe,\u6c42\u4ece $s$ \u5230 $t$ \u7684\u8def\u5f84\u4e2d\u8fb9\u6743\u6700\u5927\u503c\u4e0e\u8fb9\u6743\u6700\u5c0f\u503c\u7684\u6bd4\u503c\u6700\u5c0f\u53ef\u4ee5\u662f\u591a\u5c11? (\u5982\u679c\u4e0d\u662f\u6574\u6570\u5219\u8f93\u51fa\u4e00\u4e2a\u6700\u7b80\u5206\u6570,\u6ca1\u6709\u5219\u8f93\u51fa $IMPOSSIBLE$ )\n\n#### \u601d\u8def\uff1a\n\n\u6700\u5c0f\u751f\u6210\u6811\uff0c$kruskal$\u7b97\u6cd5\n\n\u56e0\u4e3a\u8fb9\u6570\u53ea\u6709 $5000$ \uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u590d\u6742\u5ea6\u4e3a $O(m^2)$ \u7684\u7b97\u6cd5\u3002\u9996\u5148\u5bf9\u8fb9\u6392\u5e8f\uff0c\u679a\u4e3e\u6700\u5c0f\u8fb9\uff0c\u7136\u540e\u6bcf\u6b21\u4ece\u5c0f\u5f80\u5927\u52a0\u8fb9\uff0c\u6bcf\u52a0\u5165\u4e00\u6761\u8fb9\u68c0\u67e5 $s$ \uff0c$t$ \u662f\u5426\u8054\u901a,\u82e5\u8054\u901a\u5219\u66f4\u65b0\u7b54\u6848\u5e76 $break$ \u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6700\u5c0f\u8fb9\u6240\u7b97\u51fa\u7684\u7b54\u6848\u53d6 $min$ , \u53d6\u6700\u5c0f\u516c\u7ea6\u6570\u4ee5\u8f93\u51fa\u5316\u7b80\u540e\u7b54\u6848\u3002\n\n\u95ee\uff1a\u5982\u4f55\u5408\u5e76? \u7b54\uff1a\u5e76\u67e5\u96c6\u4e2d\u7684 $merge$ \u51fd\u6570\uff0c\u5c06\u4e24\u4e2a\u70b9\u5408\u5e76\u5230\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define N 5005\nusing namespace std;\nint n,m,ans1,ans2;\ndouble num,ans;\nstruct node{\n\tint x,y,w;\n};\nnode a[N];\nint fa[N],s,t;\nbool cmp(node a1,node a2){\n\treturn a1.w<a2.w;\n}\nint find(int x){\n\tif(x==fa[x])return x;\n\treturn fa[x]=find(fa[x]);\n}\nvoid merge(int x,int y){\n\tfa[find(x)]=find(y);\n}\nvoid Init(){\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n}\nint gcd(int x,int y){\n\tif(y==0)return x;\n\treturn gcd(y,x%y);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].w);\n\t}\n\tscanf(\"%d%d\",&s,&t);\n\tsort(a+1,a+m+1,cmp);\n\tans1=10005;ans2=1;ans=10005.0;\n\tfor(int i=1;i<=m;i++){\n\t\tInit();\n\t\tfor(int j=i;j<=m;j++){\n\t\t\tmerge(a[j].x,a[j].y);\n\t\t\tif(find(s)==find(t)){\n\t\t\t\tnum=(double)(a[j].w*1.0/(a[i].w*1.0));\n\t\t\t\tif(num<ans){\n\t\t\t\t\tans1=a[j].w;\n\t\t\t\t\tans2=a[i].w;\n\t\t\t\t\tans=num; \n\t\t\t\t} \n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(ans1==10005&&ans2==1)printf(\"IMPOSSIBLE\\n\"); \n\telse if(ans1%ans2==0)printf(\"%d\\n\",ans1/ans2);\n\telse printf(\"%d/%d\\n\",ans1/gcd(ans1,ans2),ans2/gcd(ans1,ans2));\n\treturn 0;\n}\n```\n",
        "postTime": 1601741519,
        "uid": 238925,
        "name": "\u4eba\u95f4\u51e1\u4eba",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u679a\u4e3e\u8fb9\u6743\u7136\u540e\u8dd1\u5806\u4f18\u5316SPkstra\u6765\u5b9e\u73b0\n\n\u5bf9\u4e8e\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8fb9\u6743\uff0c\u7ef4\u62a4\u4e00\u4e2a\u4e0d\u5927\u4e8e\u5f53\u524d\u8fb9\u6743\u7684\u6700\u5927\u503c\n\n\u7136\u540e\u66f4\u65b0\u7b54\u6848\n\n\u6700\u540e\u9664\u4ee5GCD\u5c31\u53ef\u4ee5\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(m^2 \\log n)$\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=505;\nconst int MAXM=5005;\nconst int MAXV=3e4+5;\n\nint n,m,np,s,t,mx,mi,mxv;\nint h[MAXN],val[MAXN],f[MAXN],hp[MAXN],id[MAXN];\nbool cup[MAXV],vis[MAXN];\nstruct rpg{\n\tint li,nx,ln;\n}a[MAXM<<1];\n\nint find(int x){return f[x]==x?x:f[x]=find(f[x]);}\nvoid un(int a,int b){int fa=find(a),fb=find(b);if(fa!=fb) f[fa]=fb;}\n\nvoid add(int ls,int nx,int ln)\n{\n\ta[++np]=(rpg){h[ls],nx,ln};h[ls]=np;\n\ta[++np]=(rpg){h[nx],ls,ln};h[nx]=np;\n}\n\nvoid up(int x)\n{\n\tfor(int i=x,j=i>>1;j;i=j,j>>=1){\n\t\tif(val[hp[i]]>val[hp[j]]) swap(hp[i],hp[j]),swap(id[hp[i]],id[hp[j]]);\n\t\telse break;\n\t}return;\n}\n\nvoid ins(int x)\n{\n\thp[++hp[0]]=x;\n\tid[x]=hp[0];\n\tup(hp[0]);\n\treturn;\n}\n\nvoid pop()\n{\n\tid[hp[1]]=0;\n\thp[1]=hp[hp[0]--];\n\tid[hp[1]]=1;\n\tfor(int i=1,j=2;j<=hp[0];i=j,j<<=1){\n\t\tif(j<hp[0]&&val[hp[j+1]]>val[hp[j]]) ++j;\n\t\tif(val[hp[i]]<val[hp[j]]) swap(hp[i],hp[j]),swap(id[hp[i]],id[hp[j]]);\n\t\telse break;\n\t}return;\n}\n\nvoid SPkstra(int s,int v)\n{\n\tmemset(val,-1,sizeof(val));\n\tmemset(hp,0,sizeof(hp));\n\tmemset(id,0,sizeof(id));\n\tval[s]=mxv;ins(s);\n\twhile(hp[0]){\n\t\tint nw=hp[1];pop();\n\t\tfor(int i=h[nw];i;i=a[i].li){\n\t\t\tif(a[i].ln>v) continue;\n\t\t\tif(val[a[i].nx]<min(a[i].ln,val[nw])){\n\t\t\t\tval[a[i].nx]=min(a[i].ln,val[nw]);\n\t\t\t\tif(id[a[i].nx]) up(id[a[i].nx]);\n\t\t\t\telse ins(a[i].nx);\n\t\t\t}\n\t\t}\n\t}return;\n}\n\nint gcd(int a,int b){return !b?a:gcd(b,a%b);}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i) f[i]=i;\n\tfor(int i=1;i<=m;++i){\n\t\tint x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n\t\tcup[z]=1;add(x,y,z);un(x,y);\n\t\tmxv=max(mxv,z);\n\t}scanf(\"%d%d\",&s,&t);mi=1,mx=mxv;\n\tif(find(s)!=find(t)){puts(\"IMPOSSIBLE\");return 0;}\n\tfor(int i=1;i<=mxv;++i){\n\t\tif(cup[i]){\n\t\t\tSPkstra(s,i);\n\t\t\tif(i*mi<mx*val[t]) mx=i,mi=val[t];\n\t\t}\n\t}int c=gcd(mx,mi);mx/=c,mi/=c;\n\tif(mi==1) printf(\"%d\\n\",mx);\n\telse printf(\"%d/%d\\n\",mx,mi);\n\treturn 0;\n}\n```",
        "postTime": 1544416718,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u6c42\u8fc7QWQ\n\n------------\n\n\u94fe\u63a5 [HAOI2006\u65c5\u884c](https://www.luogu.org/problem/P2502)\n\n\n------------\n\n\u4ecb\u4e2a\u9898\u3002\u3002\u3002\u6211\u4e00\u5f00\u59cb\u770b\u8fd8\u4ee5\u4e3a\u8981\u6253\u6700\u77ed\u8def\u4e4b\u7c7b\u7684\uff08x\uff09\n\n\u7ed3\u679c\u6253\u4e0d\u51fa\u6765\u3002\u3002\u3002\uff08\u6211\u592a\u84bb\u4e86\uff09\n\n\u7136\u540e\u6d17\u4e86\u628a\u8138\u51b7\u9759\u4e86\u4e00\u4e0b\uff0c\n\n\u5982\u679c\u8981\u8ba9\u8d77\u70b9\u548c\u7ec8\u70b9\u8054\u901a\uff0c\u53ef\u4ee5\u8d2a\u5fc3\u4e00\u4e0b\uff0c\u5148\u5c06\u8fb9\u6392\u5e8f\uff0c\u5728\u56fe\u4e2d\u968f\u4fbf\u9009\u4e00\u6761\u8fb9\u4f5c\u4e3a\u6700\u957f\u8fb9\uff0c\u518d\u5c06\u6bd4\u5b83\u8fb9\u6743\u5c0f\uff08\u5c31\u662f\u901f\u5ea6\u5c0f\u5566\uff09\u7684\u8fb9\u4f9d\u6b21\u9009\u62e9\u52a0\u5165\u56fe\u4e2d\uff0c\u76f4\u5230\u8d77\u70b9\u548c\u7ec8\u70b9\u8054\u901a\uff0c\uff08\u6ce8\u610f\uff1a\u6b64\u65f6\u52a0\u5165\u7684\u6700\u5c0f\u8fb9\u6743\u503c\u4e00\u5b9a\u662f\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u6700\u5c0f\u8fb9\u7684\u6700\u5927\u503c~~\u6709\u70b9\u7ed5~~\uff09\u8bb0\u5f55\u4e0b\u6765\u6b64\u65f6\u7684\u6700\u5927\u901f\u5ea6\u4e0e\u6700\u5c0f\u901f\u5ea6\u6bd4\u503c\u3001\u6700\u5927\u901f\u5ea6\u3001\u6700\u5c0f\u901f\u5ea6\uff0c\u518d\u7ee7\u7eed\u679a\u4e3e\u4e00\u5f00\u59cb\u9009\u5b9a\u7684\u6700\u957f\u8fb9\uff0c\u6700\u540e\u627e\u6700\u5927\u901f\u5ea6\u4e0e\u6700\u5c0f\u901f\u5ea6\u6bd4\u503c\u7684\u6700\u5c0f\u60c5\u51b5\u5373\u4e3a\u7b54\u6848\uff08\u8c8c\u4f3c\u6ca1\u9519\u5427\uff09\n\n\u5177\u4f53\u5b9e\u73b0\u7684\u8bdd\uff0c\u5224\u65ad\u8d77\u70b9\u7ec8\u70b9\u662f\u5426\u8054\u901a\u6211\u4eec\u53ef\u4ee5\u641e\u4e00\u4e2a\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\uff0c\u4e24\u70b9\u8054\u901a\u5c31\u5e76\u8d77\u6765\uff0c\n\n\u8bf6\u7b49\u7b49\u3002\u3002\u3002\u8fd9\u8c8c\u4f3c\u5c31\u662f\u9b54\u6539\u7684kruskal\uff01\n\n\uff08\u5982\u679c\u8fd8\u6ca1\u5b66\u8fc7kruskal\u548c\u5e76\u67e5\u96c6\uff0c\u5efa\u8bae\u5148\u81ea\u5b66\u4e00\u4e0b\uff0c\u6253\u4e24\u9053\u6a21\u677f\u518d\u6765A\u6389\u8fd9\u9053\uff08\u6211\u592a\u61d2\u4e86\u5c31\u4e0d\u53d1\u94fe\u63a5\u4e86QWQ\uff09\uff09\n\n\uff08ps.\u4e00\u5f00\u59cb\u8f93\u5165\u8fb9\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u5408\u5e76\u70b9\uff0c\u5982\u679c\u5230\u6700\u540e\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u6ca1\u5e76\u5230\u4e00\u8d77\u76f4\u63a5IMPOSSIBLE\uff09\n\nac\u4ee3\u7801\uff08\u521d\u5b66\u538b\u884c\uff0c\u7801\u98ce\u8be1\u5f02\u52ff\u55b7\uff09\n```\n#include<bits/stdc++.h>\n#define int long long\n//#pragma GCC optimize(2)\nusing namespace std;\nconst int N=1009,M=100009;\nint can[N],last[N],f[N];//can\u662f\u4e00\u4e2a\u4f18\u5316\uff0clast\u90bb\u63a5\u8868\u64cd\u4f5c\nstruct edge{int from,to,nxt,val;\n}e[M];\nint en=0;\nvoid addedge(int x,int y,int z){\n\ten++,e[en].val=z;e[en].to=y,e[en].nxt=last[x],last[x]=en,e[en].from=x;\n}//\u90bb\u63a5\u8868\nint find(int x){\n\tif(f[x]!=x) f[x]=find(f[x]);\n\treturn f[x];\n}\nvoid unionn(int x,int y){\n\tint xx=find(x),yy=find(y);if(xx!=yy) f[xx]=yy;\n}//\u8fd9\u4fe9\u662f\u5e76\u67e5\u96c6\u64cd\u4f5c\nint gcdd(int x,int y){\n\treturn !y? x:gcdd(y,x%y);\n}//\u8f97\u8f6c\u76f8\u9664\u6c42\u6700\u5927\u516c\u56e0\u6570\uff0c\u6700\u540e\u6709\u7528\uff08\u6ca1\u5b66\u6570\u8bba\u7684\u5c0f\u76c6\u53cb\u53ef\u4ee5\u770b\u5e95\u90e8\u94fe\u63a5\uff09\nint cmp(edge x,edge y){\n\treturn x.val>y.val;\n}//\u6309\u8fb9\u6743\u4ece\u5927\u5230\u5c0f\u6392\n\nsigned main(){\n\tios::sync_with_stdio(0);cin.tie(0);\n\tint n,m,t,s;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) f[i]=i//\u521d\uff01\uff01\u59cb\uff01\uff01\u5316\uff01\uff01;\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,v;cin>>x>>y>>v;\n\t\taddedge(x,y,v);\n\t\tunionn(x,y);//\u5e76\u67e5\u96c6\u5224IMPOSSIBLE\n\t}\n\tcin>>s>>t;\n\tif(find(s)!=find(t)){\n\t\tcout<<\"IMPOSSIBLE\";return 0;\n\t}//\u4e00\u5f00\u59cb\u5c31\u7528\u5e76\u67e5\u96c6\u5224\u80fd\u5426\u5230\u8fbe\n\telse{\n\t\t/*for(int i=1;i<=n;i++){\n\t\t\tif(fs!=find(i)) can[i]=1;\n\t\t}12Ms\u7384\u5b66\u4f18\u5316*/\n\t\tsort(e+1,e+1+m,cmp);\n\t\tdouble minn=0x7fffffff;int a,b;//\u6bd4\u503c\u6700\u5c0f\u503c\uff0c\u6b64\u65f6\u6700\u5927\u901f\u5ea6\u4e0e\u6700\u5c0f\u901f\u5ea6\n\t\tfor(int i=1;i<=m;i++)//\u679a\u4e3e\u6700\u957f\u8fb9\n\t\t{\n\t\t\t/*if(can[e[i].from]||can[e[i].to]) continue;\u7384\u5b66\u4f18\u5316*/\n\t\t\tfor(int j=1;j<=n;j++) f[j]=j;//\u521d\u59cb\u5316\uff01\uff01\uff01\uff01\uff01\n\t\t\tfor(int j=i;j<=m;j++){//\u514b\u9c81\u65af\u5361\u5c14\u6700\u5927\u751f\u6210\u68112333\n\t\t\t\tunionn(e[j].from,e[j].to);//\u8fd9\u4e2a\u4e0d\u662f\u771f\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4e0d\u7528\u5224\u73af\uff0c\u76f4\u63a5\u5e76\u5c31\u884c\u3002\n\t\t\t\tif(find(s)==find(t)) {//\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u8fb9\u7684\u6700\u5927\u60c5\u51b5\n\t\t\t\t\tdouble tmp=(1.0*e[i].val)/(1.0*e[j].val);\n\t\t\t\t\tif(tmp<minn) a=e[i].val,b=e[j].val,minn=tmp;\n\t\t\t\t\tbreak;//\u66f4\u65b0\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(a/b*b==a){\n        \tcout<<a/b;\n    \t}\n\t    else cout<<a/gcdd(a,b)<<\"/\"<<b/gcdd(a,b);\n\t\t}//\u6700\u540e\u8f93\u51fa\u8981\u6ce8\u610f\u8981\u6c42\uff0c\u6574\u6570\u76f4\u63a5\u8f93\u51fa\uff0c\u5206\u6570\u7684\u8bdd\uff0c\u7528\u6700\u5927\u516c\u56e0\u6570\u7ea6\u5206\n\t}\n\t\n\t\n\t\n\n\n```\nps.\uff08\u770b\u524d\u9762\u7684\u9898\u89e3\u6709\u5927\u4f6c\u8bf4can\u6570\u7ec4\u662f\u4e2a\u8d1f\u4f18\u5316\uff0c\u4f46\u6211\u4eb2\u6d4b\u597d\u50cf\u662f\u80fd\u7384\u5b6612Ms\uff08\u5927\u96fe\uff09\uff0c\u6240\u4ee5\u6211\u90fd\u6ce8\u91ca\u6389\uff0c\u5927\u5bb6\u95f2\u7740\u6ca1\u4e8b\u53ef\u4ee5\u4eb2\u6d4b\u4e00\u4e0b\uff09\n\nps.[\u8f97\u8f6c\u76f8\u9664](https://www.cnblogs.com/newpanderking/archive/2011/07/25/2116323.html)\n\n\u6700\u540e\u53cb\u60c5\u63d0\u9192\uff1a\n\n\u5e76\u67e5\u5343\u4e07\u6761\uff0c\u521d\u59cb\u7b2c\u4e00\u6761\uff0c\n\u5fd8\u8bb0\u521d\u59cb\u5316\uff0c\u7206\u96f6\u4e24\u884c\u6cea\uff01",
        "postTime": 1570245311,
        "uid": 218746,
        "name": "\u827e\u8428\u514b\u00b7\u725b\u987f",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u4e3a\uff1a\u5e76\u67e5\u96c6+\u6392\u5e8f\n\n#### \u4e3b\u8981\u505a\u6cd5\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u611f\u89c9\u4e0a\u5c31\u662f$Kruscal$\uff1f\n\n\u56e0\u4e3a$m$\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u7ed9\u51fa\u53ef\u4ee5$m^2$\u8fdb\u884c\u679a\u4e3e\u3002\n\n\u9898\u76ee\u8981\u6c42\u6700\u5927\u8fb9\u4e0e\u6700\u5c0f\u8fb9\u7684\u6bd4\u503c\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u53ef\u4ee5\u679a\u4e3e\u6700\u5c0f\u8fb9 $or$ \u6700\u5927\u8fb9\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u7684\u662f\u679a\u4e3e\u6700\u5c0f\u8fb9\uff0c\u7136\u540e\u6211\u4eec\u679a\u4e3e\u786e\u5b9a\u6700\u5c0f\u8fb9\u540e\uff0c\u6211\u4eec\u8981\u5e72\u561b\uff1f\n\n\u4e0d\u8981\u5fd8\u8bb0\u6211\u4eec\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u6700\u5927\u8fb9\u4e0e\u6700\u5c0f\u8fb9\u7684\u6bd4\u503c\uff01\n\n\u56e0\u4e3a\u6b64\u523b\u6211\u4eec\u901a\u8fc7\u679a\u4e3e\u5df2\u7ecf\u786e\u5b9a\u7684\u6700\u5c0f\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u8981**\u6700\u5c0f\u5316\u6700\u5927\u8fb9**\u3002\n\n#### \u4e3a\u4ec0\u4e48\u8981\u7528Kruscal\u7b97\u6cd5\n\n\u4f17\u6240\u5468\u77e5\uff0c\u901a\u8fc7$Kruscal$\u751f\u6210\u6811\u7b97\u6cd5\u751f\u6210\u7684\u6700\u5c0f\u751f\u6210\u6811\u662f\u4e00\u4e2a\u74f6\u9888\u751f\u6210\u6811\u3002\uff08\u74f6\u9888\u751f\u6210\u6811\u5373\u6240\u6709\u751f\u6210\u6811\u91cc\u9762**\u6700\u5927\u8fb9\u6700\u5c0f**\u7684\u4e00\u4e2a\uff09\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u7528$Kruscal$\u540c\u6837\u7684\u601d\u8def\uff0c\u5148\u628a\u8fb9\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\u4f5c\u4e3a\u6700\u5c0f\u8fb9\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4e0d\u505c\u7684\u52a0\u8fb9\uff0c\u5018\u82e5\u8d77\u70b9\u4e0e\u7ec8\u70b9\u5df2\u7ecf\u8054\u901a\uff0c\u6211\u4eec\u5c31\u505c\u6b62\u52a0\u8fb9\uff0c\u56e0\u4e3a\u662f**\u65e0\u5411\u56fe**\uff0c\u5224\u65ad\u8fde\u901a\u6027\u7528\u5e76\u67e5\u96c6\u5373\u53ef\u3002\n\n\u8fd9\u65f6\u5019\u5f97\u5230\u7684\u6700\u5927\u90a3\u4e00\u6761\u8fb9\u5373\u53ef\u5bf9\u7b54\u6848\u505a\u51fa\u8d21\u732e\u3002\u56e0\u4e3a\u662f\u5df2\u7ecf\u6392\u5e8f\u597d\u4e86\u7684\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u6b21\u52a0\u5165\u7684\u8fb9\u5373\u662f\u6700\u5927\u8fb9\u3002\n\n\u7136\u540e\u7528\u679a\u4e3e\u5230\u7684\u6700\u5927\u8fb9\u9664\u4ee5\u6700\u5c0f\u8fb9\u53bb\u66f4\u65b0\u7b54\u6848\uff0c\u5982\u679c\u6bd4\u7b54\u6848\u66f4\u4f18\uff0c\u5c31\u8bb0\u5f55\u4e0b\u6b64\u65f6\u7684\u6700\u5927\u8fb9\u6743\u548c\u6700\u5c0f\u6bd4\u6743\uff0c\u5230\u6700\u540e\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u6211\u5728\u8fd9\u91cc\u5224\u65ad\u7b54\u6848\u662f\u5426\u66f4\u4f18\uff0c\u7528\u4e86\u4e00\u4e2a$longdouble$\u7c7b\u578b\u7684\u6570\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u5bf9\u4e8e\u7cbe\u5ea6\u7684\u8981\u6c42\u4e0d\u662f\u7279\u522b\u9ad8\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u5c0f\u6570\u53bb\u5224\u65ad\uff0c\u5176\u5b9e\u66f4\u4e25\u683c\u7684\u505a\u6cd5\u5e94\u8be5\u662f\u7528\u5f53\u524d\u7684\u7b54\u6848\u5206\u6570\u6bd4\u8f83\u5927\u5c0f\u3002\n\n\u5982\u4f55\u6bd4\u8f83\u4e24\u4e2a\u5206\u6570\u7684\u5927\u5c0f\uff1f\u6211\u4eec\u4e5f\u6ca1\u5fc5\u8981\u6c42$LCM$\uff0c\u4e24\u4e2a\u5206\u6570\u4ea4\u53c9\u76f8\u4e58\u5373\u53ef\u3002\n\n\u662f\u56e0\u4e3a\u8fd9\u91cc\u7684$v$\u8fb9\u6743\u8f83\u5c0f\uff0c\u5e76\u4e0d\u9700\u8981\u5f00$long long$\uff0c\u6240\u4ee5\u4ea4\u53c9\u76f8\u4e58\u66f4\u65b9\u4fbf\u3002\n\n\u5bf9\u4e8e\u6b64\u9898\u7684\u5206\u6790\u5230\u6b64\u7ed3\u675f\u3002\n\n\u7ed9\u51fa\u4ee3\u7801\uff1a**\u4ec5\u4f9b\u53c2\u8003**\n\n### Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n , m , cnt = 0,Ansa = 0 ,Ansb = 10000000;\nint fa[505],s,t;\nlong double pd = 10000000;//\u521d\u59cb\u5316\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u503c\n\nstruct Edge {\n\tint from,to,w;\n} edge[10005];//\u53cc\u5411\u8fb9\uff0c\u5f00\u4e24\u500d\u7a7a\u95f4\n\nint find(int x)\n{\n\tif(fa[x] != x) fa[x] = find(fa[x]);\n\treturn fa[x];//\u8def\u5f84\u538b\u7f29\u7248\u7684\u5e76\u67e5\u96c6\n}\n\nvoid add(int from,int to,int w)\n{\n\tcnt ++;\n\tedge[cnt].from = from;\n\tedge[cnt].to = to;//\u8fd9\u91cc\u662f\u6ca1\u6709\u94fe\u5f0f\u7ed3\u6784\u7684\u524d\u5411\u661f\uff08\u56e0\u4e3a\u6211\u4eec\u4e0d\u9700\u8981\uff09\n\tedge[cnt].w = w;\n\treturn ;\n}\n\nint gcd(int x,int y)\n{\n\tif(x % y == 0)return y;\n\telse return gcd(y,x % y);\n}\n\nint cmp(Edge A, Edge B){return A.w < B.w;}\n\nint main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1 ; i <= n ; i ++)fa[i] = i;\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint u , v , w;\n\t\tcin >> u >> v >> w;\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t\tfa[find(u)] = find(v);//\u5148\u5408\u5e76\uff0c\u4e3a\u4e86\u5224\u65ads\uff0ct\u7684\u8fde\u901a\u6027\n\t}\n\tcin >> s >> t;\n\tif(find(s) != find(t))\n\t{\n\t\tcout << \"IMPOSSIBLE\";//\u5982\u679c\u5728\u56fe\u4e2d\u4e0d\u8fde\u901a\uff0c\u663e\u7136\u65e0\u89e3\n\t\treturn 0;\n\t}\n\telse \n\t{\n\t\tif(s == t){cout << 0 ;return 0;}\n\t\tsort(edge + 1 , edge + 1 + cnt , cmp);\n\t\tfor(int i = 1 ; i < cnt ; i ++)//\u679a\u4e3e\u6700\u5c0f\u8fb9\n\t\t{\n\t\t\tfor(int j = 1 ; j <= n ; j ++)fa[j] = j;//\u8054\u901a\u60c5\u51b5\u8d4b\u521d\u503c\n\t\t\tint k,flag = 0;\n\t\t\tfor(int j = i ; j <= cnt ; j ++)\n\t\t\t{\n\t\t\t\tif(find(s) == find(t)){flag = 1 ; break;}\n\t\t\t\tk = j;\n\t\t\t\tfa[find(edge[j].from)] = find(edge[j].to);\n\t\t\t}\n\t\t\tif(!flag)break;\n\t\t\tif((long double)(edge[k].w) /(long double)(edge[i].w) < pd)\n\t\t\tpd = (long double)(edge[k].w) /(long double)(edge[i].w),Ansa = edge[k].w , Ansb = edge[i].w;\n\t\t}\n\t\t\tif(Ansa % Ansb == 0)cout << Ansa / Ansb;\n\t\t\telse cout << Ansa / gcd(Ansa,Ansb) << \"/\" << Ansb / gcd(Ansa,Ansb);//\u8ba1\u7b97\u7b54\u6848\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605183278,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4f60\u7ed9\u51fa\u4e00\u5f20\u56fe\uff0c\u7136\u540e\u7ed9\u51fa\u8d77\u70b9\u548c\u5230\u8fbe\u70b9\uff0c\u95ee\u4f60\u4ece\u8d77\u70b9\u5230\u5230\u8fbe\u70b9\u7684\u8fc7\u7a0b\u4e2d\n      \u8fb9\u6743\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u6bd4\u503c\u6700\u5c0f\u662f\u54ea\u4e24\u4e2a\u503c\u3002\n\u601d\u8def\uff1a\u7b2c\u4e00\u6b21\u76f4\u63a5\u66b4\u529b\u641c\u7d22\u7ed3\u679c\u8fc7\u4e86\u4e09\u4e2a\u70b9\u3002\u7ed9\u51fa\u4ee3\u7801\uff1a\n\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 5010\n#define MAXP 55\n#define maxnode 50010\n#define sigma_size 26\n#define mod 1000000007\n#define INF 0x3f3f3f3f\n#define lc  (id<<1)\n#define rc  (id<<1|1)\nusing namespace std;\ntypedef long long LL;\n\nint n,m,s,t;\nint Maxn,Minn;\ndouble pp;\nstruct Edge\n{\n    int from,to,dist;\n    Edge(int from=0,int to=0,int dist=0):from(from),to(to),dist(dist){};\n};\nvector<Edge> edges;\nvector<int> G[MAXN];\nbool vis[MAXN];\n\nvoid dfs(int u,int maxn,int minn)\n{\n    if(u==t)\n    {\n        if((maxn*1.0/minn)<pp)\n        {\n            Maxn=maxn,Minn=minn;\n            pp=maxn*1.0/minn;\n        }\n        return ;\n    }\n    vis[u]=true;\n    for(int i=0;i<G[u].size();i++)\n    {\n        Edge &e=edges[G[u][i]];\n        if(!vis[e.to])\n            dfs(e.to,max(maxn,e.dist),min(minn,e.dist));\n    }\n    vis[u]=false;\n}\n\nint gcd(int aa,int bb)\n{\n    while(bb)\n    {\n        int cc=aa%bb;\n        aa=bb;\n        bb=cc;\n    }\n    return aa;\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    int u,v,w;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d %d %d\",&u,&v,&w);\n        edges.push_back({u,v,w});\n        edges.push_back({v,u,w});\n        int mm=edges.size();\n        G[u].push_back(mm-2);\n        G[v].push_back(mm-1);\n    }\n    memset(vis,false,sizeof(vis));\n    scanf(\"%d %d\",&s,&t);\n    pp=INF;\n    dfs(s,0,INF);\n    if(pp==INF)\n        printf(\"IMPOSSIBLE\\n\");\n    else\n    {\n        int pop=gcd(Maxn,Minn);\n        if(Minn/pop!=1)\n           printf(\"%d/%d\\n\",Maxn/pop,Minn/pop);\n        else\n            printf(\"%d\\n\",Maxn/pop);\n    }\n    return 0;\n}\n\n```\n\u8003\u8651\u80fd\u4e0d\u80fd\u5229\u7528\u4ee5\u53ca\u641c\u7d22\u8fc7\u7684\u4fe1\u606f\u3002\u4eces\u5230t\u7684\u8fb9\u4f1a\u6784\u6210\u4e00\u4e2a\u96c6\u5408\u3002\u662f\u4e0d\u662f\u53ef\u4ee5\u7528\u6700\u5c0f\u751f\u6210\u6811\u5462\uff1f\u6784\u9020\u6210\u6700\u5c0f\u751f\u6210\u7136\u540e\u5229\u7528LCA\u67e5\u8be2s\u548ct\u4e4b\u95f4\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u53d1\u73b0wrong\u4e86\u3002\u60f3\u60f3\u4e8c\u5206\uff0c\u597d\u50cf\u4e5f\u4e0d\u592a\u884c\u3002\u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c\u53d1\u73b0\u9700\u8981\u679a\u4e3e\u6700\u5c0f\u503c\u3002\u7136\u540e\u5c31\u5199\u4e86\u4e00\u4efd\u4ee3\u7801\uff1a\u679a\u4e3e\u6700\u5c0f\u503c\uff0c\u7136\u540e\u53ea\u8981\u80fd\u4f7f\u5f97s\u548ct\u8fde\u901a\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u7ec4\u53ef\u884c\u89e3\uff0c\u6700\u540e\u5728\u8fd9\u4e9b\u53ef\u884c\u89e3\u91cc\u9762\u627e\u6700\u4f18\u89e3\u5c31\u597d\u4e86\u3002\n\u6240\u4ee5\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u679a\u4e3e+\u68c0\u67e5\u8054\u901a\u6027\n\u7ed9\u51faAC\u4ee3\u7801\uff1a\n\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 5010\n#define MAXP 55\n#define maxnode 50010\n#define sigma_size 26\n#define mod 1000000007\n#define INF 0x3f3f3f3f\n#define lc  (id<<1)\n#define rc  (id<<1|1)\nusing namespace std;\ntypedef long long LL;\n\nint n,m,maxn,minn;\ndouble pp;\nstruct Edge\n{\n    int from,to,dist;\n    Edge(int from=0,int to=0,int dist=0):from(from),to(to),dist(dist){};\n};\nEdge edges[MAXN];\nint fa[MAXN],s,t;\n\nbool comp(Edge A,Edge B)\n{\n    return A.dist<B.dist;\n}\n\nint Find(int x)\n{\n    return fa[x]==x?x:fa[x]=Find(fa[x]);\n}\n\nvoid init(int nn)\n{\n    for(int i=0;i<=nn;i++)\n        fa[i]=i;\n}\n\nint krustral(int w)    //\u7528\u6700\u5c0f\u751f\u6210\u6811\uff08\u5e76\u4e0d\u662f\u5b8c\u6574\u7684\u6700\u5c0f\u751f\u6210\u6811\uff09\u6765\u641e\u8fde\u901a\uff0c\n{                                    //\u8fd9\u91cc\u9762\u53ea\u8981\u8ba9s\u548ct\u8fde\u901a\u5c31\u597d\u4e86\n    for(int i=w;i<m;i++)\n    {\n        int xx=Find(edges[i].from);\n        int yy=Find(edges[i].to);\n        if(xx==yy)\n           continue;\n        fa[xx]=yy;\n        if(Find(s)==Find(t))\n            return edges[i].dist;\n    }\n    return -1;\n}\n\nint gcd(int a,int b)\n{\n    while(b)\n    {\n        int c=a%b;\n        a=b;\n        b=c;\n    }\n    return a;\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%d %d %d\",&edges[i].from,&edges[i].to,&edges[i].dist);\n    }\n    scanf(\"%d %d\",&s,&t);\n    sort(edges,edges+m,comp);\n    pp=INF*1.0;\n    for(int i=0;i<m;i++)\n    {\n        init(n);\n        int kk=krustral(i);\n        if(kk==-1)\n            break;\n        if(kk*1.0/edges[i].dist<pp)\n        {\n            pp=kk*1.0/edges[i].dist;\n            maxn=kk,minn=edges[i].dist;\n        }\n    }\n    if(pp==INF)\n    {\n        printf(\"IMPOSSIBLE\\n\");\n        return 0;\n    }\n    int pop=gcd(maxn,minn);\n    if(minn/pop==1)\n        printf(\"%d\\n\",maxn/pop);\n    else\n        printf(\"%d/%d\\n\",maxn/pop,minn/pop);\n    return 0;\n}\n```\n",
        "postTime": 1577862582,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u8fd9\u9053\u9898\u662f\u8ba9\u6211\u4eec\u5728\u4e00\u6761s\u5230t\u7684\u8def\u5f84\u4e2d\uff0c\u627e\u4e00\u6761\u8def\u4f7f\u5f97\u8fb9\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u6700\u5c0f\n\n\u6211\u7684\u601d\u8def\u4e0e\u697c\u4e0a\u5927\u4f6c\u7684\u601d\u8def\u7c7b\u4f3c\uff1a\n\n\n------------\n```cpp\n\u627e\u5230s\u4e0et\u7684\u8def\u5f84\u5728\u5f53\u524d\u6700\u5c0f\u8fb9\u6743\u60c5\u51b5\u4e0b\u5c3d\u91cf\u5c0f\u7684\u6700\u5927\u8fb9\u6743\uff0c\u7528\u8fd9\u4e2a\u6bd4\u503c\u66f4\u65b0\u7b54\u6848\u3002\n```\n\u6458\u81ea\u697c\u4e0a\u67d0\u4f4d\u5927\u4f6c\n\n\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u90fd\u5224\u65ad\u4e00\u6b21\u64cd\u4f5c\u540e\uff0cs\u4e0et\u662f\u5426\u8054\u901a\uff0c\u5982\u679c\u4e0d\u8fde\u901a\u5219\u8df3\u51fa\u5faa\u73af\uff0c\u5e76\u4e14\u4e0d\u65ad\u66f4\u65b0\u8fb9\u7684\u503c\uff08\u5982\u679c\u8ba4\u4e3a\u6211\u8bb2\u7684\u4e0d\u6e05\u695a\uff0c\u53ef\u4ee5\u53c2\u8003\u5176\u4ed6\u5927\u4f6c\u9898\u89e3\uff09\n\n\u5bf9\u4e86\uff0c\u6700\u540e\u8fd8\u8981\u6c42\u6700\u5927\u516c\u7ea6\u6570\uff0c\u53ef\u4ee5\u7528gcd\uff0c\u6211\u7528\u4e86\u8f97\u8f6c\u76f8\u9664\u6cd5\uff08\u539f\u7406\u4e00\u6837\uff0c\u6837\u5b50\u4e0d\u540c\uff09\n\u597d\u4e86\uff0c\u4e0a\u4ee3\u7801\u5427(\u2299o\u2299)\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<string>\n#include<algorithm>\n#include<bits/stdc++.h>\nusing namespace std;\nconst int max1=500+10;\nconst int max2=5000+10;\nint n,m,s,t,cnt1,cnt2;\nint fa[max1];\nstruct Edge\n{\n\tint x,y;\n\tint z;\n}edge[max2*2];\nbool cmp(Edge a,Edge b)\n{\n\treturn a.z<b.z;\n}\nint gcd(int a,int b)//\u8f97\u8f6c\u76f8\u9664\u6cd5\n{\n\tint r;\n\twhile(b)\n\t{\n\t\tr=a%b;\n\t\ta=b;\n\t\tb=r;\n\t}\n\treturn a;\n}\nint father(int a)//\u627e\u7238\u7238\n{\n\tif(a==fa[a]) return a;\n\tfa[a]=father(fa[a]);\n\treturn fa[a];\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t    scanf(\"%d%d%d\",&edge[i].x,&edge[i].y,&edge[i].z);\n\tcin>>s>>t;\n\tsort(edge+1,edge+m+1,cmp);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint j;\n\t\tfor(j=1;j<=n;j++) fa[j]=j;\n\t\tfor(j=i;j<=m;j++)//\u7c7b\u4f3c\u514b\u9c81\u65af\u5361\u5c14\n\t\t{\n\t\t\tint aa=father(edge[j].x);\n\t\t\tint bb=father(edge[j].y);\n\t\t\tif(aa==bb) continue;\n\t\t\tfa[aa]=bb;\n\t\t\tif(father(s)==father(t)) break;\n\t\t}\n\t\tif((i==1)&&(father(s)!=father(t)))//\u8bf4\u660es\u4e0et\u4e4b\u95f4\u6ca1\u6bdb\u5173\u7cfb\n\t\t{\n\t\t\tcout<<\"IMPOSSIBLE\";\n\t\t\treturn 0;\n\t\t}\n\t\tif(father(s)!=father(t)) break;//\u4e0d\u8fde\u901a\n\t\tif(cnt1*edge[i].z>=cnt2*edge[j].z) cnt1=edge[j].z,cnt2=edge[i].z;\n\t\t//\u66f4\u65b0\u7b54\u6848\n\t}\n\tint js=gcd(cnt1,cnt2);\n\tif(js==cnt1)\n\t   cout<<cnt2/js;\n\telse \n\t   if(cnt2==js)\n\t      cout<<cnt1/js;\n\t   else\n\t       cout<<cnt1/js<<\"/\"<<cnt2/js;\n\treturn 0;\n}\n```\n\u795d\u5927\u5bb6\u6109\u5feb\u5f00\u5b66",
        "postTime": 1566974050,
        "uid": 173239,
        "name": "\u9ec4\u6c5d\u9e4f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u5f00\u59cb\u6ca1\u60f3\u5230\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\uff0c\u7136\u540e\u770b\u5230\u6807\u7b7e\u91cc\u6709\u66b4\u529b\uff0c\u5c31\u5199\u4e86\u4e2a\u66b4\u529b\uff0c\u7136\u540e\u5c31\u8fc7\u4e86qwq\n\n\u4e3b\u8981\u601d\u8def\u662f\u6bcf\u6b21\u679a\u4e3e\u6700\u5c0f\u8fb9\u6743\uff0c\u7136\u540e\u4e8c\u5206\u51fa\u53ef\u4ee5\u4f7f $s$ \u548c $t$ \u8fde\u901a\u7684\u6700\u5c0f\u6700\u5927\u8fb9\u6743\uff0c\u7136\u540e\u66f4\u65b0\u7b54\u6848\u5c31\u884c\u4e86\n\n\u4e00\u70b9\u5c0f\u5c0f\u7684\u4f18\u5316\u662f\u6bcf\u6b21\u4e8c\u5206\u65f6\u5148\u7f29\u5c0f\u4e00\u4e0b $r$ \u7684\u8303\u56f4\uff08\u5373\u53bb\u6389\u4e00\u5b9a\u6bd4\u7b54\u6848\u66f4\u52a3\u7684\u60c5\u51b5\uff09\uff0c\u7136\u540e\u518d\u5224\u65ad\u4e00\u4e0b $r$ \u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5426\u53ef\u884c\uff0c\u5982\u679c\u4e0d\u884c\u76f4\u63a5 $continue$\n\n\u6bcf\u6b21 $check$ \u7684\u590d\u6742\u5ea6\u662f $O(m\\alpha(m))$\uff0c\u4e8e\u662f\u603b\u590d\u6742\u5ea6\u5927\u6982\u662f $O(m^{2}\\alpha(m)logv)$\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint gcd(int a,int b) {return !b?a:gcd(b,a%b);}\n\ntypedef struct edge{\n    int from,to,v;\n    bool operator < (const edge &x) const {return v<x.v;}\n}edge;\n\ntypedef struct data{\n    int a,b;\n    data(int _a,int _b){\n        int g=gcd(_a,_b);\n        a=_a/g; b=_b/g;\n    }\n    bool operator < (const data &x) const {return a*x.b<b*x.a;}\n    bool operator > (const data &x) const {return a*x.b>b*x.a;}\n    bool operator == (const data &x) const {return a*x.b==b*x.a;}\n    void print() {printf(\"%d\",a); if(b!=1) printf(\"/%d\",b);}\n}data;\n\nedge e[5010];\ndata ans(100000,1);\nint n,m,s,t,fa[510],rnk[510];\n\ninline int read(){\n    int num=0,k=1; char c=getchar();\n    while(c>'9' || c<'0') k=(c=='-')?0:k,c=getchar();\n    while(c>='0' && c<='9') num=num*10+c-'0',c=getchar();\n    return k?num:-num;\n}\n\nint find(int x){\n    if(fa[x]!=x) return find(fa[x]);\n    return x; \n}\n\nvoid merge(int x,int y){\n    x=find(x); y=find(y);\n    if(x==y) return;\n    if(rnk[x]<rnk[y]) swap(x,y);\n    fa[y]=x; rnk[x]=max(rnk[x],rnk[y]+1);\n}\n\nvoid init() {for(int i=1;i<=n;i++) fa[i]=i,rnk[i]=1;}\n\nbool check(int l,int r){\n    init();\n    for(int i=l;i<=r;i++) merge(e[i].from,e[i].to);\n    return find(s)==find(t);\n}\n\nvoid solve(){\n    sort(e+1,e+1+m);\n    for(int i=1;i<=m;i++) if(e[i].v!=e[i-1].v){\n        int l=i-1,r=m+1,mid=(l+r)>>1;\n        while(data(e[mid].v,e[i].v)>ans) r=mid,mid=(l+r)>>1;\n        if(!check(i,r)) continue;\n        while(l+1<r){\n            mid=(l+r)>>1;\n            if(check(i,mid)) r=mid;\n            else l=mid;\n        }\n        if(data(e[r].v,e[i].v)<ans) ans=data(e[r].v,e[i].v);\n    }\n}\n\nint main(){\n    n=read(); m=read();\n    for(int i=1;i<=m;i++) e[i].from=read(),e[i].to=read(),e[i].v=read();\n    s=read(); t=read();\n    solve();\n    if(ans.a==100000) printf(\"IMPOSSIBLE\");\n    else ans.print();\n    return 0;\n}\n\n```",
        "postTime": 1556704240,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u601d\u8def\u697c\u4e0a\u697c\u4e0b\u5df2\u7ecf\u7ed9\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u5c31\u968f\u4fbf\u63d0\u4e00\u4e0b\n\n\u7531\u4e8e\u6b64\u9898\u8fb9\u6570\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u7ed9\u8fb9\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u8dd1m\u904d\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6bcf\u8dd1\u4e00\u6b21\u5220\u9664\u4e00\u6761\u8fb9\uff0c\u627e\u6700\u4f18\u89e3\u3002\n\n- \u9632TLE\u6280\u5de7\n\n\u628a\u8fb9\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u597d\uff0c\u90a3\u4e48\u53ea\u8981\u5f53\u524d\u65e0\u6cd5\u8054\u901a\uff0c\u90a3\u4e48\u540e\u9762\u4e5f\u65e0\u6cd5\u8054\u901a\n\n- \u6700\u4f18\u89e3\u627e\u6cd5\n```cpp\ndouble tmp=(1.0*e[i].w)/(1.0*e[j].w);\n//\u56e0\u4e3a\u8fb9\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u5f53\u524d\u7684\u7b2c\u4e00\u6761\u8fb9\u662f\u6700\u5927\u7684\uff0c\u4fdd\u8bc1\u80fd\u8054\u901a\u7684\u6700\u540e\u4e00\u6761\u8fb9\u5c31\u662f\u6700\u5c0f\u7684\uff08\u8be6\u7ec6\u7684\u81ea\u5df1\u7406\u89e3\uff09\nif(tmp<ans) a=e[i].w,b=e[j].w,ans=tmp;\n//\u4e0e\u5f53\u524d\u7684\u6700\u4f18\u89e3\u8fdb\u884c\u6bd4\u8f83\n```\n\n- \u5206\u6570\u7684\u5904\u7406\u6280\u5de7\n\n\u8bbea\u548cb\u662f\u6700\u540e\u7684\u7ed3\u679c\uff0c\u90a3\u4e48\u5f53b\u80fd\u6574\u9664a\u65f6\uff0c\u76f4\u63a5\u8f93\u51fa\u5546\n\n\u5426\u5219\u5c31\u6c42\u4e00\u904d\u6700\u5927\u516c\u7ea6\u6570\uff0c\u628aa\u4e0eb\u5206\u522b\u9664\u4ee5\u8fd9\u4e2a\u6700\u5927\u516c\u7ea6\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=500+10;\nconst int MAXM=5000+10;\nint n,m,s,t;\nstruct Node\n{\n\tint u,v,w;\n}edge[MAXM];\nint f[MAXN];\nint ans1,ans2;\ninline int find(int k)\n{\n\tif(f[k]==k)return k;\n\telse return f[k]=find(f[k]);\n}\ninline bool cmp(Node u,Node v)\n{\n\treturn u.w<v.w;\n}\ninline void init()//\u6bcf\u6b21\u7684\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n{\n\tfor(int i=1;i<=n;i++)f[i]=i;\n}\ninline int read()\n{\n\tint tot=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')\n\t{\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\ttot=tot*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn tot*f;\n}\ninline int gcd(int x,int y)//\u6c42\u6700\u5927\u516c\u7ea6\u6570\n{\n\tif(y>x)return gcd(y,x);\n\tif(y==0)return x;\n\treturn gcd(y,x%y);\n}\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tedge[i].u=read();\n\t\tedge[i].v=read();\n\t\tedge[i].w=read();\n\t}\n\ts=read();t=read();\n\tsort(edge+1,edge+1+m,cmp);\n\tint now;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tinit();\n\t\t/*for(int i=1;i<=n;i++)cout<<f[i]<<\" \";\n\t\tcout<<endl;*/\n\t\tfor(now=i;now<=m;now++)\n\t\t{\n\t\t\tint fx=find(edge[now].u),fy=find(edge[now].v);\n\t\t\t//cout<<fx<<\" \"<<fy<<endl;\n\t\t\tif(fx==fy)continue;\n\t\t\tf[fx]=fy;\n\t\t\tif(find(s)==find(t))break;\n\t\t}\n\t\t/*for(int i=1;i<=n;i++)cout<<f[i]<<\" \";\n\t\tcout<<endl;*/\n\t\tif(i==1&&find(s)!=find(t))\n\t\t{\n\t\t\tcout<<\"IMPOSSIBLE\\n\";\n\t\t\treturn 0;\n\t\t}\n\t\tif(find(s)!=find(t))break;\n\t\tif(ans1*edge[i].w>=ans2*edge[now].w)ans1=edge[now].w,ans2=edge[i].w;\n\t}\n\t//cout<<ans1<<\" \"<<ans2<<endl;\n\tif(ans2%ans1==0)\n\t{\n\t\tcout<<ans2/ans1<<endl;\n\t\treturn 0;\n\t}\n\tint gcdd=gcd(ans1,ans2);\n\tcout<<ans1/gcdd<<\"/\"<<ans2/gcdd<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1556082153,
        "uid": 107468,
        "name": "hulean",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u53d1\u4e00\u4e2a\u8d85\u7ea7\u83dc\u7684\u89e3\u6cd5\u3002\u3002\u3002\n\u65f6\u95f4\u590d\u6742\u5ea6\uff08MNlog(M)\uff09\u52c9\u5f3a\u8fc7\n\n\u601d\u8def\uff1a\u679a\u4e3e\u6700\u5927\u8fb9\uff0c\u4e8c\u5206\u6c42\u6700\u5c0f\u8fb9\u6700\u5927\uff0c\u6253\u64c2\n\n\u4f46\u662f\u88f8\u7740\u6765\u4f1aTLE\n\n\u6240\u4ee5\u6211\u4eec\u4f18\u5316\uff1a\n\u82e5\u5bf9\u4e8e\u6700\u5927\u8fb9\u503c\u4e3amaxn\u65f6\u6700\u5c0f\u8fb9\u503c\u6700\u5927\u4e3aminn\uff0c\u5219\u5bf9\u4e8e\u6700\u5927\u8fb9\u503c\u4e3amaxn+1\u6700\u5c0f\u8fb9\u503c\u4e3aminn\u65f6\u4e00\u5b9a\u80fd\u591f\u4eces\u8d70\u5230t\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u8fb9\u6743\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2amaxn\uff0c\u4e8c\u5206\u4e0b\u754c\u53ef\u4ee5\u8bbe\u6210\u4e0a\u6b21\u5f97\u5230\u7684\u6700\u5927minn\n\n\u53c8\u56e0\u4e3a\u8fb9\u6743\u5df2\u7ecf\u6709\u5e8f\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u8fb9\u6392\u5e8f\u540e\u7684\u7f16\u53f7\u800c\u4e0d\u662f\u8fb9\u6743\u6765\u4e8c\u5206\uff08\u867d\u7136log30000\u4e5f\u6ca1\u6bd4log5000\u5927\u591a\u5c11QAQ\uff09\n\n\u6700\u540e\u8981\u6ce8\u610f\u4e8c\u5206\u7684\u7279\u5224\uff0c\u4e0d\u7136\u7b2c\u4e00\u4e2a\u70b9\u4f1awa\n\u6700\u540e\n\n\u6bcf\u904ddfs\u540e\u4e00\u5b9a\u8981\u91cd\u7f6evis\u6570\u7ec4\uff01\uff01\n\n\uff08\u4e5f\u8bb8\u7528spfa\u6c42\u6700\u5c0f\u8fb9\u6700\u5927\u5feb\u4e9b\uff1f\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ri register int\nint Head[510],Next[10010],V[10010],W[10010],tot;\nint vis[510],line[10010];\nint n,m,s,t;\nstruct bi{int bg,sm;}tmp,ans;\nvoid add(int u,int v,int w)\n{V[++tot]=v;W[tot]=w;Next[tot]=Head[u];Head[u]=tot;}\nbool operator < (bi x,bi y)\n{\n\tdouble numx=(double)x.bg/(double)x.sm;\n\tdouble numy=(double)y.bg/(double)y.sm;\n\treturn numx<numy;\n}\nbool dfs(int u,int fa,int maxn,int minn)\n{\n\tif(u==t)return 1;\n\tvis[u]=1;int v,w;bool flag=0;\n\tfor(ri i=Head[u];i;i=Next[i])\n\t{\n\t\tv=V[i];w=W[i];\n\t\tif(fa==v||w>maxn||w<minn||vis[v])continue;\n\t\tflag|=dfs(v,u,maxn,minn);\n\t\tif(flag)return flag;\n\t}\n\treturn flag;\n}\nint work(int maxn,int l,int r)\n{\n\tmemset(vis,0,sizeof(vis));\n\tif(l==r)\n\t{\n\t\tif(dfs(s,-1,maxn,line[l]))return l;\n\t\telse return l-1;\n\t}\n\tint mid=(l+r)/2;\n\tif(dfs(s,-1,maxn,line[mid]))return work(maxn,mid+1,r);\n\telse return work(maxn,l,mid);\n}\nvoid print(bi x)\n{\n\tif(x.bg%x.sm)\n\t{\n\t\tfor(ri i=2;i*i<=line[m];i++)\n\t\twhile(!(x.bg%i)&&!(x.sm%i))\n\t\t{x.bg/=i;x.sm/=i;}\n\t\tprintf(\"%d/%d\",x.bg,x.sm);\n\t}\t\n\telse printf(\"%d\",x.bg/x.sm);\n\treturn;\n}\nint main()\n{\n\tint u,v,w;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(ri i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(u,v,w);add(v,u,w);line[i]=w;\n\t}\n\tsort(line+1,line+m+1);\n\tint max,min,loc,lloc=1,st=1;ans.bg=30010;ans.sm=1;\n\tscanf(\"%d%d\",&s,&t);\n\tif(!dfs(s,-1,30010,-1))\n\t{printf(\"IMPOSSIBLE\");return 0;}\n\tmemset(vis,0,sizeof(vis));\n\twhile(!dfs(s,-1,line[st],0))\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tst++;\n\t}\n\tfor(ri i=st;i<=m;i++)\n\t{\n\t\tif(line[i]==line[i-1])continue;\n\t\tmax=line[i];\n\t\tloc=work(max,lloc,i);min=line[loc];\n\t\ttmp.bg=max;tmp.sm=min;\n\t\tif(tmp<ans)ans=tmp;\n\t\tlloc=loc;\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1540466984,
        "uid": 47724,
        "name": "lots_of_laugh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    },
    {
        "content": "\u54c7\u597d\u4e45\u4ee5\u524d\u5728codevs\u4e0aAC\u7684\u4e00\u9053\u9898\n\n\u4e8e\u662f\u62ff\u5230luogu\u4e0a\u53d1\u9898\u89e3\u88c5\u903c\uff08\u5212\u6389\uff09\u597d\u597d\u7406\u89e3\n\n\u5176\u5b9e\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u601d\u8def\n\n\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\n\n\u4ece\u8fd9\u6761\u8fb9\u5f80\u540e\u679a\u4e3e\u5efa\u6700\u5c0f\u751f\u6210\u6811\n\n\u540c\u65f6\u8bb0\u5f55\u6700\u5927\u6700\u5c0f\u503c\n\n\u8fde\u901a\u8d77\u70b9\u548c\u7ec8\u70b9\u5c31\u9000\u51fa\n\n\u66f4\u65b0\u7b54\u6848\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4ece\u8fd9\u6761\u8fb9\u5f00\u59cb\u679a\u4e3e\uff08xmdalao\u7684\u8bb2\u89e3\uff09\n\n1.\u6309\u514b\u9c81\u65af\u5361\u5c14\u6392\u5e8f\uff0c\u4fdd\u8bc1\u8fb9\u4ece\u5c0f\u5230\u5927\n\n2.\u6700\u4f18\u89e3\u80af\u5b9a\u53ea\u4f1a\u5728\u540e\u9762\u51fa\u73b0\uff0c\u56e0\u4e3a\u5982\u679c\u524d\u9762\u6709\u8fb9\u53ef\u4ee5\u8fde\u901a\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u53ea\u6709\u540e\u9762\u7684\u8fb9\u80fd\u51fa\u66f4\u4f18\u7684\u7b54\u6848\n\n3.\u7528\u65f6\u5c11\n\nc++\n```cpp\n# include<iostream>\n# include<algorithm>\nusing namespace std;\nstruct p{\n    int x,y,dis;\n}c[100001];\nint n,m,minn,maxn,s,t;\nint f[501];\nbool cmp(p a,p b)\n{\n    return a.dis<b.dis;\n}\nint find(int x)\n{\n    if(f[x]!=x) f[x]=find(f[x]);\n    return f[x];\n}\nint gcd(int x,int y)\n{\n    int ff=x,fff=y;\n    int r=x%y;\n    while(r)\n    {\n        ff=fff;\n        fff=r;\n        r=ff%fff;\n    }\n    return fff;\n}\nint main()\n{\n    double ss=999999;\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n      {\n          int x,y,dis;\n          cin>>x>>y>>dis;\n          c[i].x=x,c[i].y=y,c[i].dis=dis;\n      }\n    sort(c+1,c+1+m,cmp);\n    cin>>s>>t;\n    for(int i=1;i<=m;i++)\n      {\n          bool ffff=0;\n          int m1=c[i].dis,m2=c[i].dis;\n          for(int j=1;j<=n;j++)\n            f[j]=j;\n          for(int j=i;j<=m;j++)\n            {\n                if(find(c[j].x)!=find(c[j].y))\n                {\n                    f[find(c[j].x)]=find(c[j].y);\n                    m2=c[j].dis;\n            }\n            if(find(s)==find(t))\n            {\n                ffff=1;\n                break;\n            }\n          }\n        if(double(m2)/double(m1)<ss&&ffff) minn=m1,maxn=m2,ss=double(m2)/double(m1);\n      }\n    if(!minn)\n    {\n        cout<<\"IMPOSSIBLE\";\n        return 0;\n    }\n    if(ss-int(ss))\n    {\n        int x=gcd(maxn,minn);\n        cout<<maxn/x<<\"/\"<<minn/x;\n    }\n    else cout<<ss;\n    return 0;\n}\n```",
        "postTime": 1507988847,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2502 \u3010[HAOI2006]\u65c5\u884c\u3011"
    }
]