[
    {
        "content": "\u8fd9\u9898\u662f**\u4e00\u9053\u975e\u5e38\u590d\u6742\u7684\u535a\u5f08\u8bba\u9898**\n\n\u9996\u5148 \u901a\u8fc7\u8fd1\u4f3c\u7ebf\u6027\u7b5b\u7684\u7b5b\u6cd5 \u9884\u5904\u7406\u51fa\u6240\u6709\u7684\u8d28\u6570\n\n\u6211\u4eec\u8bbeSG\u51fd\u6570\u4e3a\u6b64\u6e38\u620f\u80dc\u8d1f\u7684\u72b6\u6001 sg[i]=0\u4e3a\u8d1f 1\u4e3a\u6b63 \u8868\u793a\u5f53\u77f3\u5b50\u6570=i\u65f6\uff0c\u5f53\u524d\u64cd\u4f5c\u7684\u4eba\u5fc5\u8d25/\u80dc\n\n\u7528\u4e00\u4e2a\u961f\u5217\u5bf9\u6240\u6709sg\u51fd\u6570\u8fdb\u884c\u9884\u5904\u7406 \u6240\u6709\u5fc5\u8d25\u72b6\u6001\u52a0\u4e0a\u4e00\u4e2a\u8d28\u6570\u5fc5\u7136\u4e3a\u5fc5\u80dc\u72b6\u6001** \u56e0\u4e3a\u5f53\u77f3\u5b50\u6570=\u5fc5\u8d25\u72b6\u6001\u7684\u77f3\u5b50\u6570+\u8d28\u6570\u7684\u65f6\u5019\uff0c\u5f53\u524d\u64cd\u4f5c\u7684\u4eba\u4ec5\u9700\u53d6\u8d70\u8fd9\u4e2a\u8d28\u6570\u7684\u77f3\u5b50\u4fbf\u53ef\u4ee5\u83b7\u80dc**\n\n~~\u522b\u4ee5\u4e3a\u77e5\u9053\u8fd9\u4e9b\u5c31\u80fdA\u6389\u4e86~~\n\n\u7535\u8111\u4e0d\u50cf\u4f60\u60f3\u8c61\u7684\u90a3\u4e48\u6c99\u96d5 **\u6bcf\u5f53\u7535\u8111\u89c9\u5f97\u4ed6\u8981\u8f93\u7684\u65f6\u5019 \u7535\u8111\u4f1a\u60f3\u65b9\u8bbe\u6cd5\u62d6\u5ef6\u4f60\u83b7\u80dc\u7684\u6b65\u4f10 \u540c\u7406 \u5f53\u4f60\u8981\u8d62\u7684\u65f6\u5019 \u4f60\u603b\u662f\u60f3\u5feb\u4e00\u70b9\u80dc\u5229**\n\n\u90a3\u4e48\u6700\u91cd\u8981\u7684\u4e00\u70b9\u8981\u6765\u4e86\n\n\u6211\u4eec\u9700\u8981\u5728\u9002\u5f53\u7684\u65f6\u5019\u53d6**\u6700\u5927\u6216\u6700\u5c0f\u503c**\n\n\u679a\u4e3e\u6240\u6709\u4f4d\u7f6e\u548c\u5f53\u524d\u4f4d\u7f6e\u53ef\u6269\u5c55\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u4e14\u4ee4f[x]\u4e3a\u77f3\u5b50\u6570=x\u65f6\u7684\u6700\u5c0f\u6b65\u6570\n\n\u5982\u679c\u6269\u5c55\u5230\u7684\u4f4d\u7f6e\u6ca1\u88ab\u6269\u5c55\u8fc7\uff0c\u90a3\u4e48\u5f53\u524d\u4f4d\u7f6e\u5c31\u7ed9\u4ed6\u4e00\u4e2a\u521d\u59cb\u503c=f[l]+1 \u5982\u679c\uff01\uff01\uff01\u4e0a\u4e00\u4e2a\u72b6\u6001\u4e3a\u5fc5\u80dc\u72b6\u6001\u5e76\u4e14\u5f53\u524d\u72b6\u6001\u4e3a\u5fc5\u80dc\u72b6\u6001\uff0c\u90a3\u4e48\u6269\u5c55\u4e86\u8fd9\u4e2a\u8282\u70b9\u6beb\u65e0\u610f\u4e49\uff0c\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e2a\u70b9\uff1b\n\n\u5982\u679c\u4e0a\u4e00\u4e2a\u6269\u5c55\u800c\u6765\u7684\u72b6\u6001\u662f\u5fc5\u80dc\u72b6\u6001\uff0c\u5f53\u524d\u70b9\u5374\u662f\u5fc5\u8d25\u72b6\u6001\uff0c\u5982\u679c\u4f60\u662f\u4eba\uff0c\u4f60\u6015\u5224\u65ad\u8fd9\u4e2a\u5417\uff1f\uff1f\uff1f\u76f4\u63a5-1\u5c31\u53ef\u4ee5\u4e86\uff0c\u5173\u952e\u662f\u8981\u8003\u8651\u5bf9\u624b\u7684\u611f\u53d7\uff0c**\u5bf9\u624b\u4e0d\u613f\u610f\u8ba9\u4f60\u8f93\uff0c\u4ed6\u4f1a\u7aed\u5c3d\u6240\u80fd\u627e\u4f60\u9ebb\u70e6\uff0c\u6b65\u6570\u8981\u53d6max\u5566**\u3002\u5982\u679c\u4e0a\u4e00\u4e2a\u6269\u5c55\u800c\u6765\u7684\u72b6\u6001\u662f\u5fc5\u8d25\u72b6\u6001\uff0c\u5f53\u524d\u70b9\u5374\u662f\u5fc5\u80dc\u72b6\u6001\u3002\n\n\u540c\u6837\u60f3\u4e00\u60f3\uff0c\u5982\u679c\u4f60\u662f\u4f60\u7684\u5bf9\u624b\uff0c\u4f60\u8981\u8d62\u4e86\uff0c\u4f60\u6015\u5224\u65ad\u8fd9\u4e2a\u5417\uff1f\uff1f\uff1f\u76f4\u63a5-1\u6389\u4e86\uff0c\u4f46\u662f\u4f60\u662f\u4f60\uff0c**\u4f60\u8981\u901f\u6218\u901f\u51b3\uff0c\u4f60\u8981\u7528\u6700\u5c11\u7684\u6b65\u6570\u89e3\u51b3~~\u8fd9\u4e2a\u65e0\u804a\u7684\u6e38\u620f~~\uff0c\u6240\u4ee5\u5728\u8fd9\u91ccf\u53bb\u7684\u662fmin**\u3002\u5230\u8fd9\u91cc\u6700\u5173\u952e\u7684\u5730\u65b9\u5c31\u7ed3\u675f\u4e86\u3002\n\n\u597d\u4e86O(1)\u7684\u67e5\u8be2 \u6b64\u9898AC\u4e86\uff08\u672c\u4eba\u5199\u4e86\u4e03\u4e2a\u5c0f\u65f6\uff09\u849f\u84bb\u52ff\u55b7\n\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 20000\nusing namespace std;\nint f[20010];\nint prime[20010];\nint pd[20010];\nint q[1000010];\nint sg[20010];\nint hsh[20010]; \nint lose[100010];\nint n,x,l,r,standard=0,cnt=0,last,losenum;\ninline void build_prime()\n{\n    pd[1]=1;\n    for (int i=2;i<=maxn;i++)\n    {\n        int j=i;\n        if (pd[i]) continue;\n        while (j<=maxn)\n        {\n            j+=i;\n            pd[j]=1;\n        }\n    }\n    for (int i=2;i<=maxn;i++)\n    {\n        if (!pd[i])\n          prime[++cnt]=i;\n    }\n}\nvoid prepare()\n{\n    while (l<=r)\n    {\n      for (int i=1;i<=cnt;i++)\n      {\n        int next=prime[i]+q[l];\n        if(next>maxn) continue; \n        int last=q[l];\n        if (!sg[q[l]])\n          sg[next]=1;\n      }\n      if (l==r) {\n            for (int i=last+1;i<=maxn;i++)\n            {\n                if (sg[i]==0)\n                {\n                    last=i;\n                    lose[i]=1;\n                    q[++r]=i;\n                    break;\n                }\n            }\n                 }\n      l++;\n\n    }\n}\ninline void dp()\n{\n    while (l<=maxn)\n    {\n        for (int i=1;i<=cnt;i++)\n        {\n            int next=prime[i]+l;\n            int lasti=l;\n            int num=f[l]+1;\n            if (next>maxn) continue;\n            if (sg[l]&&sg[next]) continue;\n            if (!lose[next]&&lose[l])\n            {\n                if (!f[next]) f[next]=num;\n                else f[next]=min(f[next],num);\n            }\n            if (lose[next]&!lose[l])\n            {\n                if (!f[next]) f[next]=num;\n                else f[next]=max(f[next],num);\n        }\n        l++;\n    }\n}\nint main()\n{   \n    memset(hsh,0,sizeof(hsh));\n    memset(pd,0,sizeof(pd));\n    build_prime();\n    l=1;r=2;\n    memset(q,0,sizeof(q));\n    memset(sg,0,sizeof(sg));\n    //sg[i]=1 win sg[i]=0 lose\n    for (int i=1;i<=20009;i++)\n    {\n        f[i]=standard;\n    }\n    sg[0]=0;sg[1]=0;sg[2]=1;sg[3]=1;\n    q[1]=0;q[2]=1;\n    f[0]=0;f[1]=0;\n    hsh[0]=1;hsh[1]=1;\n    last=1;\n    memset(lose,0,sizeof(lose));\n    prepare();\n    lose[1]=1;lose[0]=1;//\u5176\u5b9elose\u6570\u7ec4\u6ca1\u4ec0\u4e48\u5fc5\u8981\n    //\u5c31\u662fsg\u51fd\u6570\u4e3a0\u7684\u60c5\u51b5\n    memset(q,0,sizeof(q));\n    q[1]=0;q[2]=1;\n    f[0]=0;f[1]=0;\n    l=0;r=2;\n    dp();\n    cin>>n;\n    for (int i=1;i<=n;i++)\n    {\n        cin>>x;\n        if (sg[x]==0) cout<< -1 <<endl;\n        else cout<<f[x]<<endl;\n    }\n}\n```",
        "postTime": 1540391291,
        "uid": 103024,
        "name": "Polaris_Lorna",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1857 \u3010\u8d28\u6570\u53d6\u77f3\u5b50\u3011"
    },
    {
        "content": "\u5e94\u8be5\u7b97\u662fDP\u9898\uff0c\u96be\u5ea6\u4e00\u822c\u5427\u3002\n\n### \u4e00\u3001\u7b80\u5316\u95ee\u9898\n\n**\u6211\u4eec\u5148\u5047\u88c5\u8fd9\u9898\u53ea\u662f\u8ba9\u6211\u4eec\u6c42\u89e3\u5148\u624b\u5fc5\u80dc\u8fd8\u662f\u5fc5\u8d1f**\n\n\u6211\u7684\u601d\u8def\u662f\u5148\u7528\u6c42\u51fa$vis[i]=0/1$\uff08$vis[i]$\u8868\u793a\u5f53\u6709i\u9897\u77f3\u5b50\u65f6\uff0c\u5148\u624b\u53d6\u77f3\u5b50\u662f\u5fc5\u80dc\u8fd8\u662f\u5fc5\u8d25\uff09\u3002\n\n\u5f88\u7b80\u5355\uff1a\n\n```cpp\n//P\u6570\u7ec4\u5b58\u50a8\u7684\u662f\u7d20\u6570\nfor (int i=2;i<N;i++){\n\tbool flg=false;\n\tfor (int j=1;j<=len&&i-P[j]>=0;j++) flg|=1-vis[i-P[j]];\n   //\u53ea\u8981\u63a5\u4e0b\u6765\u7684\u5bf9\u65b9\u9762\u4e34\u7684\u72b6\u6001\u6709\u4e00\u4e2a\u662f\u5fc5\u8d25\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u624b\u5c31\u662f\u5fc5\u80dc\u7684\n\tvis[i]=flg;\n}\n```\n\n\u6c42\u51fa\u4e86\u8fd9\u4e2a\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u5fc3\u5730\u6c42\u51fa-1\u7684\u60c5\u51b5\u5566\u3002\n\n### \u4e8c\u3001\u6c42\u89e3\u95ee\u9898\n\n\u63a5\u4e0b\u6765\u662f\u6c42$F[i]$\uff08$F[i]$\u8868\u793a\u5f53\u6709$i$\u9897\u77f3\u5b50\u65f6\uff0c\u5148\u624b\u53d6\u77f3\u5b50\u9700\u8981\u51e0\u6b65\u80fd\u53d6\u5b8c\uff09\n\n\u5f88\u663e\u7136\u7684\u662f\uff0c\u5982\u679c\u5148\u624b\u5fc5\u80dc\uff0c\u6211\u4eec\u8981\u5c3d\u91cf\u52a0\u5feb\u83b7\u80dc\uff0c\u5982\u679c\u5148\u624b\u5fc5\u8d25\uff0c\u6211\u4eec\u8981\u51cf\u7f13\u5931\u8d25\uff01\n\n\u6240\u4ee5\u53ef\u4ee5\u5f97\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n```cpp\nfor (int j=1;j<=len&&i-P[j]>=0;j++)\nif (vis[i]) F[i]=min(F[i],vis[i-P[j]]?1<<30:F[i-P[j]])+1;\n       else F[i]=max(F[i],F[i-P[j]])+1;\n```\n\n**\u6ce8\u610f\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u56e0\u4e3a\u6211\u4eec\u5982\u679c\u662f\u5fc5\u80dc\u7684\uff0c\u6211\u4eec\u7edd\u5bf9\u4e0d\u80fd\u5f80\u5931\u8d25\u7684\u65b9\u5411\u8d70\u2014\u2014\u6211\u4eec\u4e0d\u662f\u50bb\u5b50\uff01\u6240\u4ee5\u5f53$vis[i]==1$\u65f6\uff0c\u7b54\u6848\u53ea\u80fd\u4ece$vis[i-P[j]]==0$\u7684$F[i-P[j]]$\u8f6c\u79fb\u8fc7\u6765\u3002**\n\n\u6837\u4f8b\u53ef\u4ee5\u68c0\u6d4b\u51fa\u6765\u8fd9\u4e2a\u95ee\u9898\uff0c\u521a\u5f00\u59cb\u6211\u50bb\u4e86\u6ca1\u6ce8\u610f\uff0c\u8fd8\u597d\u6837\u4f8b\u70b9\u9192\u6211\uff0c\u4f7f\u6211\u4e00\u904dA\u4e86\u8fd9\u9898\uff08\u8981\u662f\u6bd4\u8d5b\u6837\u4f8b\u4e5f\u8fd9\u4e48\u7ed9\u529b\u5c31\u597d\u4e86$QAQ$\uff09\u3002\n\n\u5168\u90e8\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\ntypedef long long LL;\nusing namespace std;\ninline int read(){\n\tint red=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9') {if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch>='0'&&ch<='9') red=(red<<3)+(red<<1)+ch-'0',ch=getchar();\n\treturn red*f;\n}\nconst int N=20005;\nint F[N],P[N],len,T;\nbool vis[N];\nvoid Make(){\n\tfor (int i=2;i<N;i++){\n\t\tif (!vis[i]) P[++len]=i;\n\t\tfor (int j=1;j<=len&&i*P[j]<N;j++){\n\t\t\tvis[i*P[j]]=true;\n\t\t\tif (i%P[j]==0) break;\n\t\t}\n\t}\n}\nint main(){\n\tfreopen(\"text.in\",\"r\",stdin);\n\tfreopen(\"text.out\",\"w\",stdout);\n\tMake();\n\tfor (int i=2;i<N;i++){\n\t\tbool flg=false;\n\t\tfor (int j=1;j<=len&&i-P[j]>=0;j++) flg|=1-vis[i-P[j]];\n\t\tvis[i]=flg;\n\t}\n\tfor (int i=2;i<N;i++){\n\t\tint res=vis[i]?(1<<30):-(1<<30);\n\t\tfor (int j=1;j<=len&&i-P[j]>=0;j++)\n\t\tif (vis[i]) res=min(res,vis[i-P[j]]?1<<30:F[i-P[j]]);else res=max(res,F[i-P[j]]);\n\t\tF[i]=res+1;\n\t}\n\tT=read();\n\twhile (T--){\n\t\tint x=read();\n\t\tif (!vis[x]) printf(\"-1\\n\");\n\t\telse printf(\"%d\\n\",F[x]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1605617202,
        "uid": 98390,
        "name": "O2\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1857 \u3010\u8d28\u6570\u53d6\u77f3\u5b50\u3011"
    },
    {
        "content": "\u5b9e\u9645\u4e0a\u7531\u4e8e $n$ \u4e0d\u5927\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u6bd4\u8f83\u66b4\u529b\u7684\u5728\u7ebf\u6027\u7b5b\u7684\u8fc7\u7a0b\u4e2d\u6c42\u4e00\u904d\uff0c\u6700\u540e $O(1)$ \u67e5\u8be2\u3002\n\n\u6839\u636e\u6211\u4eec\u7684\u7ecf\u9a8c\uff0c\u5728\u53d6\u77f3\u5b50\u6e38\u620f\u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9\u5f53\u4e14\u4ec5\u5f53\u6709\u4e00\u4e2a\u53ca\u4ee5\u4e0a\u7684\u5fc5\u8d25\u72b6\u6001\u4f5c\u4e3a\u540e\u7ee7\u72b6\u6001\u65f6\uff0c\u624d\u4f1a\u6210\u4e3a\u5fc5\u80dc\u72b6\u6001\u3002\n\n\u6211\u4eec\u9996\u5148\u53ef\u77e5 $0$ \u548c $1$ \u90fd\u662f\u5fc5\u8d25\u72b6\u6001\uff0c\u6807\u8bb0\u4e0a $tag_0 = tag_1 = \\texttt{false}$\u3002\n\n\u63a5\u4e0b\u6765\u6839\u636e\u6e38\u620f\u89c4\u5219\u548c\u5fc5\u80dc\u72b6\u6001\u7684\u5224\u65ad\u6761\u4ef6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570 $i$\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5c0f\u4e8e $i$ \u7684\u8d28\u6570 $p$\uff0c\u5219\uff1a\n\n$tag_i = \\begin{cases}\\texttt{true} & \\exists p,tag_{i-p} = \\texttt{false}\\\\\\texttt{false} & \\textrm{Otherwise.}\\end{cases}$\n\n\u4e8e\u662f\u5c31\u80fd\u6c42\u5230\u6bcf\u4e2a\u70b9\u662f\u5fc5\u80dc\u8fd8\u662f\u5fc5\u8d25\u72b6\u6001\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6b65\u6570\u3002\n\n\u6211\u4eec\u8bbe $dp_i$ \u8868\u793a $i$ \u4f5c\u4e3a\u5fc5\u80dc\u72b6\u6001\u65f6\u6700\u5c11\u9700\u8981\u82b1\u591a\u5c11\u6b65\u7ed3\u675f\u6e38\u620f\uff1b\u6216\u662f $i$ \u4f5c\u4e3a\u5fc5\u8d25\u72b6\u6001\u65f6\u6700\u591a\u9700\u8981\u82b1\u591a\u5c11\u6b65\u7ed3\u675f\u6e38\u620f\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5fc5\u80dc\u72b6\u6001 $i$\uff1a\n\n$$dp_i = \\min\\limits_{p \\in prime\\And tag_{i-p} = \\texttt{false}}^{i}\\left\\{dp_{i-p}+1\\right\\}$$\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5fc5\u8d25\u72b6\u6001 $i$\uff1a\n\n$$dp_i = \\max\\limits_{p \\in prime}^{i}\\left\\{dp_{i-p}+1\\right\\}$$\n\n\u6ce8\u610f\u6c42\u5fc5\u80dc\u72b6\u6001 $i$ \u7684 $dp_i$ \u65f6\u8981\u5224\u65ad\u4e00\u4e0b $i-p$ \u662f\u5426\u4e3a\u5fc5\u8d25\u72b6\u6001\uff0c\u5426\u5219\u6211\u4eec\u5c31\u628a\u80dc\u5229\u62f1\u624b\u8ba9\u7ed9\u5bf9\u65b9\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\nconst int N = 20001;\nint prime[N];\nint minprime[N];\nbool notprime[N];\nint dp[N];\nbool cdt[N];\nvoid line() {\n\tmemset(cdt,false,sizeof(cdt));\n\tfor(register int i = 2, upd, mhp;i < N;++i) {\n\t\tif(!notprime[i]) {\n\t\t\tdp[i] = 1;\n\t\t\tcdt[i] = true;\n\t\t\tprime[++prime[0]] = i;\n\t\t\tminprime[i] = i;\n\t\t} else {\n\t\t\tdp[i] = 0x3f3f3f3f;\n\t\t\tfor(register int *j = prime+prime[0];j != prime;--j) \n\t\t\t\tif(!cdt[i-(*j)]) {\n\t\t\t\t\tif(dp[i-(*j)]+1 < dp[i]) \n\t\t\t\t\t\tdp[i] = dp[i-(*j)]+1;\n\t\t\t\t\tcdt[i] = true;\n\t\t\t\t}\n\t\t\tif(!cdt[i]) {\n\t\t\t\tdp[i] = 0;\n\t\t\t\tfor(register int *j = prime+prime[0];j != prime;--j) \n\t\t\t\t\tif(dp[i-(*j)]+1 > dp[i]) \n\t\t\t\t\t\tdp[i] = dp[i-(*j)]+1;\n\t\t\t}\n\t\t}\n\t\tif(i <= (N>>1)) {\n\t\t\tupd = std :: min(N/i,minprime[i]);\n\t\t\tfor(register int *j = prime+1;*j&&*j <= upd;++j) {\n\t\t\t\tmhp = i*(*j);\n\t\t\t\tminprime[mhp] = *j;\n\t\t\t\tnotprime[mhp] = true;\n\t\t\t}\n\t\t}\n\t}\n}\nint T;\nint n;\nint main() {\n\tline();\n\tscanf(\"%d\",&T);\n\tfor(int outs = 1;outs <= T;++outs) {\n\t\tscanf(\"%d\",&n);\n\t\tif(cdt[n]) {\n\t\t\tprintf(\"%d\\n\",dp[n]);\n\t\t} else \n\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n```\n\n2022.09.23\uff1a\u5728\u7ba1\u7406\u5458\u7684\u8d34\u5fc3\u63d0\u793a\u4e0b\u89c4\u8303\u4e86\u516c\u5f0f\u4e66\u5199\u3002",
        "postTime": 1663714073,
        "uid": 663579,
        "name": "bikuhiku",
        "ccfLevel": 0,
        "title": "P1857 \u8d28\u6570\u53d6\u77f3\u5b50"
    },
    {
        "content": "~~\u5176\u5b9e\u8fd9\u662f\u4e00\u9053\u6c34\u9898~~\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u9053\u9898\u4e5f\u4e0d\u8981\u7528\u5230\u4ec0\u4e48\u9ad8\u7ea7\u535a\u5f08\u8bba\u7684\u77e5\u8bc6\uff0c\u4e86\u89e3PN\u56fe\u5c31\u53ef\u4ee5\u4e86,\u4ee5\u53ca\u7b5b\u9009\u7d20\u6570\u7684\u65b9\u6cd5\n\n\u5177\u4f53\u5f97\u6765\u8bf4\u5c31\u662f\n## \u4e00\u4e2a\u70b9\u4e0d\u662f\u5fc5\u8d25\u70b9\u5c31\u662f\u5fc5\u80dc\u70b9\uff0c\u8fd9\u4e2a\u9700\u8981\u660e\u786e\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u4e0d\u4e00\u5b9a\u8bf4\u9002\u7528\u6240\u6709\u7684\u535a\u5f08\uff0c\u81f3\u5c11\u5bf9\u8fd9\u4e2a\u9898\u662f\u9002\u7528\u7684\n\n## \u5fc5\u8d25\u70b9(P\u70b9) :\u524d\u4e00\u4e2a\u9009\u624b(Previous player)\u5c06\u53d6\u80dc\u7684\u4f4d\u7f6e\u79f0\u4e3a\u5fc5\u8d25\u70b9\u3002\n\n## \u5fc5\u80dc\u70b9(N\u70b9) :\u4e0b\u4e00\u4e2a\u9009\u624b(Next player)\u5c06\u53d6\u80dc\u7684\u4f4d\u7f6e\u79f0\u4e3a\u5fc5\u80dc\u70b9\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u524d\u9762\u7684\u4e00\u4e9b\u70b9\u5148\u627e\u4e0b\u9762\u7684\u89c4\u5f8b\n\n| 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n| P | P | N | N | N | N | N | N | N | P |\n\n\u5176\u5b9e\u5f88\u5bb9\u6613\u5f97\u51fa\uff0c\u5f53**i - prime[j]**\u662f\u4e00\u4e2a\u5fc5\u8d25\u70b9\u7684\u65f6\u5019(prime[j]\u662f\u5c0f\u4e8e\u7b49\u4e8ei\u7684\u67d0\u4e2a\u8d28\u6570)\uff0c\u90a3\u4e48i\u5c31\u662f\u5fc5\u80dc\u70b9\u4e86(\u56e0\u4e3a\u4f60\u53d6\u8fd9\u4e00\u4e2a\u8d28\u6570\uff0c\u4f7f\u5bf9\u624b\u843d\u5165\u8fd9\u4e2a\u5fc5\u8d25\u70b9\u5c31\u53ef\u4ee5\u5fc5\u80dc\u4e86)\u3002\n\n\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u77e5\u9053\u54ea\u4e9b\u70b9\u662fP\u70b9\uff0c\u54ea\u4e9b\u70b9\u662fN\u70b9\u3002\n\n\u4f46\u662f\u9898\u76ee\u8fd8\u6709\u4e00\u95ee\uff0c\u5c31\u662f\u8981\u6c42\u51fa\u5982\u679c\u53ef\u4ee5\u8d62\uff0c\u90a3\u5c31\u8981\u4f60\u6c42\u51fa\u600e\u4e48\u8d62\u6700\u5feb\u3002\n\n\u5176\u5b9e\u8fd9\u4e00\u95ee\u4e5f\u633a\u7b80\u5355\uff0c\u53ea\u8981\u8bb0\u5f55\u4e00\u4e0b\u3002\n\n**\u4ee4f[i]\u8868\u793a\u7b2ci\u4f4d\u8d62\u7684\u6700\u5c11\u6b65\u6570**\n\n\u5982\u679c\u662f\u5fc5\u8d25\u70b9\uff0c\u6211\u4eec\u5c31\u8ba9f[i] = -1\n\n\u540c\u65f6\uff0c\u6211\u4eec\u8bb0g[i]\u8868\u793a\u8fd9\u4e2a\u5fc5\u8d25\u70b9\u6700\u957f\u5931\u8d25\u7684\u6b65\u6570\u3002\u3002\n\n\u4e3a\u4ec0\u4e48\u662f\u6700\u957f\u5462\uff1f\n\n### \u6211\u4eec\u611f\u6027\u5f97\u7406\u89e3\u4e00\u4e0b\uff0c\u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a\u65e2\u7136\u6211\u90fd\u8f93\u4e86\uff0c\u90a3\u5c31\u4e0d\u80fd\u8ba9\u540e\u9762\u6765\u627f\u63a5\u6211\u7684\u4eba\u597d\u8fc7\uff0c\u6240\u4ee5\u6211\u5f97\u662f\u5c3d\u91cf\u6b65\u6570\u591a\u4e00\u70b9 ~~(\u5176\u5b9e\u8fd9\u6709\u4e00\u4e2a\u5b9a\u7406\uff0c\u4f46\u662f\u6211\u5e76\u4e0d\u4f1a\u8bc1)~~\n\n### \u4e0b\u9762\u8d34\u4ee3\u7801\n\n~~~cpp\n#include<cstdio>\n#include<cstring>\n#define N 20005\n#define min(a,b) (a < b ? a : b)\n#define max(a,b) (a > b ? a : b)\nusing namespace std;\nint v[20005],prime[3000],p;\nint f[20005],g[20005],n;\nint read(){\n\tchar c = getchar();\n\twhile(c < '0' || '9' < c)\n\t\tc = getchar();\n\tint x = 0;\n\twhile('0' <= c && c <= '9'){\n\t\tx = 10 * x + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x;\n}\n\nint main(){\n\tfor(int i = 2;i <= N;i++){//\u7ebf\u6027\u7b5b\u9009\u7d20\u6570 \n\t\tif(!v[i]){\n\t\t\tv[i] = i;\n\t\t\tprime[++p] = i;\n\t\t}\n\t\tfor(int j = 0;j <= p;j++){\n\t\t\tif(v[i] < prime[j] || prime[j] * i > N)\n\t\t\t\tbreak;\n\t\t\tv[i * prime[j]] = i;\n\t\t}\n\t}\n\t\n\t\n\tmemset(f,-1,sizeof(f));//\u9ed8\u8ba4\u521d\u59cb\u5316\u90fd\u662f\u5fc5\u8d25\u70b9 \n\tg[0] = g[1] = 0;//\u5fc5\u8d25\u60010,1\u79fb\u52a8\u6700\u5c11\u6b65\u6570\u4e3a0,\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5199\u51fa\u6765,\u4e3a\u4e86\u6807\u6ce8\u4e00\u4e0b \n\tfor(int i = 2;i <= N;i++){\n\t\tfor(int j = p;j >= 1;j--){//\u679a\u4e3e\u7d20\u6570 \n\t\t\tif(prime[j] <= i){//\u4e0d\u80fd\u591f\u8d85\u51fa\u8303\u56f4\u4e86 \n\t\t\t\tif(f[i - prime[j]] == -1){//\u524d\u9762\u67d0\u4e00\u4e2a\u72b6\u6001\u4e3a\u5fc5\u8d25\u6001\uff0c\u5219\u8fd9\u4e2a\u72b6\u6001\u5c31\u662f\u5fc5\u80dc\u6001\uff0c\u5e76\u4e14\u9700\u8981\u8bb0\u5f55\u6700\u5c11\u80dc\u5229\u7684\u6b21\u6570\n\t\t\t\t\tif(f[i] == -1){\n\t\t\t\t\t\tf[i] = 0x3f3f3f3f;\n\t\t\t\t\t}\n\t\t\t\t\tf[i] = min(f[i],g[i - prime[j]] + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(f[i] == -1){//\u5230\u8fd9\u91cc\u5982\u679c\u8fd8\u662f-1,\u90a3\u4e48\u524d\u9762\u5faa\u73af\u80af\u5b9a\u6ca1\u6709\u66f4\u65b0\u8fc7,\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u5fc5\u8d25\u70b9\uff0c\u90a3\u4e48\u5c31\u8981\u7b97\u5982\u4f55\u8d25\u662f\u6700\u5feb\u7684\n\t\t\tfor(int j = p;j >= 1;j--){\n\t\t\t\tif(prime[j] <= i && f[i - prime[j]] > 0){\n\t\t\t\t\tg[i] = max(g[i],f[i - prime[j]] + 1);//\u8fd9\u91cc\u7684max\u5f88\u8bb2\u7a76\uff0c\u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a\u65e2\u7136\u6211\u90fd\u8f93\u4e86\uff0c\u90a3\u5c31\u4e0d\u80fd\u8ba9\u540e\u9762\u6765\u627f\u63a5\u6211\u7684\u4eba\u597d\u8fc7\uff0c\u6240\u4ee5\u6211\u5f97\u662f\u5c3d\u91cf\u6b65\u6570\u591a\u4e00\u70b9 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tn = read();\n\tfor(int i = 1;i <= n;i++){\n\t\tprintf(\"%d\\n\",f[read()]);\n\t}\n\treturn 0;\n}\n~~~",
        "postTime": 1539332309,
        "uid": 56528,
        "name": "B1GGersnow",
        "ccfLevel": 0,
        "title": "\u8d28\u6570\u53d6\u77f3\u5b50"
    },
    {
        "content": "## \u539f\u9898\n\n[P1857 \u8d28\u6570\u53d6\u77f3\u5b50](https://www.luogu.com.cn/problem/P1857)\n\n---\n\n## \u601d\u8def\u6982\u8ff0\n\n### \u9898\u610f\u5206\u6790\n\n\u7ed9\u5b9a $n$ \u4e2a\u77f3\u5b50\uff0c\u5148\u540e\u624b\u8f6e\u6d41\u53d6 $x(x\u2208prime)$ \u4e2a\u77f3\u5b50\uff0c\u6700\u5148\u53d6\u4e0d\u4e86\u7684\u4e00\u65b9\u5931\u8d25\u3002\u6c42\u5148\u624b\u65b9\u662f\u5426\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u5982\u679c\u6709\uff0c\u8f93\u51fa\u6b65\u6570\uff08\u9075\u5faa\u5fc5\u80dc\u65b9\u5c3d\u5feb\u53d6\u80dc\uff0c\u5fc5\u8d25\u65b9\u5c3d\u53ef\u80fd\u62d6\u5ef6\u6b65\u6570\u7684\u7b56\u7565\uff09\u3002\n\n### \u601d\u8def\u5206\u6790\n\n\u7531\u9898\u610f\u53ef\u77e5\uff0c\u672c\u9898\u662f\u4e00\u9053\u535a\u5f08\u8bba+\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u7684\u9898\u3002\u53ea\u9700\u8981\u6253\u8868\u63a8\u51fa $n$ \u7684\u80dc\u8d1f\u6001 $f(n)$ \u5c31\u80fd\u77e5\u9053\u5148\u624b\u65b9\u662f\u5426\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u518d\u901a\u8fc7\u4e00\u5b9a\u89c4\u5f8b\u5206\u6790\u51fa\u5fc5\u80dc\u3001\u5fc5\u8d25\u65b9\u7684\u6700\u4f18\u7b56\u7565\u5373\u53ef\u6c42\u89e3\u3002\n\n\u7531\u4e8e\u672c\u9898\u6bcf\u6b21\u53d6\u7684\u77f3\u5b50\u6570\u4e3a\u8d28\u6570\uff0c\u6240\u4ee5\u9700\u5148\u7528\u7ebf\u6027\u7b5b\u6cd5\u627e\u51fa\u7ed9\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u8d28\u6570\u3002\u5173\u4e8e\u8d28\u6570\u7ebf\u6027\u7b5b\uff0c\u7b14\u8005\u4e0d\u591a\u4f5c\u5197\u8ff0\uff0c\u6709\u9700\u8981\u53ef\u524d\u5f80\uff1a\n\n[P3383 \u3010\u6a21\u677f\u3011\u7ebf\u6027\u7b5b\u7d20\u6570 \u9898\u89e3](https://www.luogu.com.cn/problem/solution/P3383)\n\n---\n\n## \u7b97\u6cd5\u63a8\u5bfc\n\n### \u5173\u4e8e\u80dc\u8d1f\u6001\n\n\u867d\u7136\u672c\u9898\u4e0e\u535a\u5f08\u8bba\u6709\u4e00\u5b9a\u5173\u7cfb\uff0c\u4f46\u6ca1\u6709\u7cfb\u7edf\u5b66\u4e60\u8fc7\u535a\u5f08\u8bba\uff08\u6ca1\u9519\u5c31\u662f\u6211\uff09\u4e5f\u6ca1\u6709\u592a\u5927\u5f71\u54cd\uff0c\u53ea\u9700\u8981\u5bf9\u535a\u5f08\u6e38\u620f\u4e2d\u7684\u5fc5\u80dc/\u5fc5\u8d25\u6001\u6709\u4e00\u5b9a\u8ba4\u8bc6\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u535a\u5f08\u6e38\u620f\u7684\u4efb\u610f\u72b6\u6001\uff08\u672c\u9898\u4e2d\u8868\u793a\u4e3a\u4e00\u5143\u51fd\u6570 $f(n)$ \uff09\u5fc5\u7136\u5c5e\u4e8e\u4e24\u7c7b\uff1a\u82e5\u5f53\u524d\u7684\u5148\u624b\u65b9\u65e0\u8bba\u91c7\u7528\u4f55\u79cd\u7b56\u7565\uff0c\u90fd\u5fc5\u7136\u5931\u8d25\u7684\u72b6\u6001\u79f0\u4e3a\u5fc5\u8d25\u6001\uff1b\u53cd\u4e4b\uff0c\u82e5\u5148\u624b\u65b9\u91c7\u7528\u9002\u5f53\u7b56\u7565\uff0c\u5fc5\u5b9a\u80fd\u4f7f\u5bf9\u65b9\u5904\u4e8e\u5fc5\u8d25\u6001\u7684\u72b6\u6001\u79f0\u4e3a\u5fc5\u80dc\u6001\u3002\n\n\u7531\u80dc\u8d1f\u6001\u7684\u57fa\u672c\u5b9a\u4e49\u53ef\u4ee5\u5f97\u51fa\u80dc\u8d1f\u6001\u7684\u8f6c\u79fb\u65b9\u7a0b\u3002\u6211\u4eec\u5b9a\u4e49\u535a\u5f08\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001\u4e3a $f(n)$ \uff08\u72b6\u6001\u53ef\u4ee5\u662f\u4e00\u5143\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u591a\u5143\u51fd\u6570\uff09\uff0c\u5f53\u524d\u72b6\u6001\u7684\u6240\u6709\u524d\u9a71\u72b6\u6001\uff08\u524d\u9a71\u72b6\u6001\u4e0d\u4e00\u5b9a\u552f\u4e00\uff09\u4e3a $pre_x=\\{a_1,a_2...a_n \\}$ \uff08\u7279\u522b\u5730\uff0c\u9898\u76ee\u9884\u8bbe\u7684\u6e38\u620f\u7ed3\u675f\u6761\u4ef6\u6ca1\u6709\u524d\u9a71\u72b6\u6001\uff09\uff0c\u540c\u65f6\u5b9a\u4e49\u80dc\u6001\u51fd\u6570\u503c\u4e3a $1$ \uff0c\u5fc5\u8d25\u6001\u51fd\u6570\u503c\u4e3a $0$ \u3002\u90a3\u4e48\u6613\u5f97\u8f6c\u79fb\u65b9\u7a0b\uff08\u5047\u8bbe\u8fb9\u754c\u6761\u4ef6\u662f\u5fc5\u8d25\u6001\uff09\uff1a\n\n$$f(x)=\\begin{cases}1,\u2203i\u2208pre_x\\text{ and }f(i)=0\\\\0,\\text{otherwise}\\end{cases}$$\n\n### \u5173\u4e8e\u52a8\u6001\u89c4\u5212\n\n* \u6709\u4e86\u80dc\u8d1f\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5c31\u53ef\u4ee5\u63a8\u5bfc\u51fa\u672c\u9898\u7684\u8f6c\u79fb\u65b9\u7a0b\u3002\u5728\u9012\u63a8\u524d\uff0c\u5148\u7528\u7ebf\u6027\u7b5b\u9009\u51fa\u65e2\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u8d28\u6570$prime$\u3002\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$$f(x)=\\begin{cases}1,\u2203i=x-prime_j(j\u2208N^*,i\u2208N)\\text{ and }f(i)=0\\\\0,\\text{otherwise} \\end{cases}$$\n\n### \u5173\u4e8e\u8def\u5f84\u957f\u5ea6\u8ba1\u6570\n\n\u7531\u4e8e\u9898\u76ee\u4e0d\u4ec5\u8981\u6c42\u8f93\u51fa\u5f53\u524d\u80dc\u8d1f\u6001\uff0c\u5e76\u4e14\u5f53\u6b64\u65f6\u4e3a\u5fc5\u80dc\u6001\u65f6\uff0c\u8fd8\u8981\u8f93\u51fa\u6700\u5c11\u6b65\u6570\uff08\u6ee1\u8db3\u5fc5\u80dc\u65b9\u5c3d\u5feb\u53d6\u80dc\u5fc5\u8d25\u65b9\u5c3d\u91cf\u62d6\u5ef6\u7684\u539f\u5219\uff09\u3002\u8fd9\u5c31\u8981\u6c42\u5728DP\u8fc7\u7a0b\u4e2d\u8fd8\u8981\u9644\u5e26\u5904\u7406\u5173\u4e8e\u6b65\u6570\u7684\u95ee\u9898\u3002\n\n\u7531\u4e0a\u8ff0\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4ee5\u77e5\u9053\u72b6\u6001\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u4ee5\u7528\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u6765\u63cf\u8ff0\uff0c\u5373\u4e24\u4e2a\u72b6\u6001\u53ef\u4ee5\u7531\u4e00\u6761\u6709\u5411\u8fb9\u94fe\u63a5\uff0c\u800c\u72b6\u6001\u7684\u8f6c\u79fb\u5c31\u662f\u6709\u5411\u8fb9\u4e0a\u7684\u79fb\u52a8\u3002\u7531\u4e0a\u8ff0\u63a8\u5bfc\u5c31\u80fd\u5c06\u5c3d\u5feb\u53d6\u80dc/\u5c3d\u91cf\u62d6\u5ef6\u7684\u7b56\u7565\u8f6c\u5316\u4e3a\u6c42\u5f53\u524d\u72b6\u6001\u5bf9\u5e94\u8282\u70b9\u5230\u6e90\u8282\u70b9\uff08 $x=0,1$ \uff09\u7684\u6700\u77ed/\u6700\u957f\u8def\u5f84\u8d70\u6cd5\u3002\u5e76\u4e14\u5bf9\u4e8e\u56fe\u4e2d\u7684\u4efb\u610f\u8282\u70b9\u90fd\u5b58\u5728\u552f\u4e00\u7684\u6700\u957f\u4e0e\u6700\u77ed\u8def\u5f84\u7684\u524d\u9a71\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6bcf\u4e00\u4e2a\u65b0\u72b6\u6001\u8fdb\u5165\u8003\u8651\u4e2d\u7684\u65f6\u5019\u66f4\u65b0\u5176\u6700\u957f\u8def\u5f84\u524d\u9a71\u6216\u6700\u77ed\u8def\u5f84\u524d\u9a71\uff0c\u5728\u8be2\u95ee\u8fc7\u7a0b\u4e2d\u6a21\u62df\u53cc\u65b9\u6309\u6700\u4f18\u7b56\u7565\u8f6e\u6d41\u53d6\u77f3\u5b50\u7684\u8fc7\u7a0b\u5373\u53ef\u3002\n\n\u7531\u4e8e\u4e00\u4e2a\u72b6\u6001 $f(x)$ \u7684\u80dc\u8d1f\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u5fc5\u80dc\u6001\uff0c\u65e0\u8bba\u8c01\u53d6\u77f3\u5b50\uff0c\u90fd\u9075\u5faa\u5c3d\u5feb\u53d6\u80dc\u7684\u539f\u5219\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5fc5\u80dc\u6001\uff0c\u5c31\u8bb0\u5f55\u5176\u6700\u77ed\u8def\u5f84\u524d\u9a71\uff1b\u53cd\u4e4b\uff0c\u5219\u8bb0\u5f55\u5176\u6700\u957f\u8def\u5f84\u524d\u9a71\u3002\u8be6\u7ec6\u8fc7\u7a0b\u89c1\u4ee3\u7801\u3002\n\n---\n\n## AC code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<set>\n#include<ctime>\n#define RI register int\nusing namespace std;\nconst int maxn=2e4+10;\ntypedef struct\n{\n\tbool ptw;\n\tint cnx,cni,prx,pri;\n\tinline void init(int x)\n\t{\n\t\tptw=0;cnx=-1;cni=0x3f3f3f3f;prx=pri=-1;\n\t\treturn;\n\t}\n}node;\nnode e[maxn];\nint T,n,rmx,cnt,ans;\nint gtn[11],p[maxn],v[maxn];\nbool sit;\ninline int read();\ninline void print(int x);\ninline void gtp(int x);/*\u8d28\u6570\u7ebf\u6027\u7b5b*/\ninline void init(int x);/*\u9884\u5904\u7406\u72b6\u6001*/\nint main()\n{\n\tT=read();\n\tfor(RI i=T;i>=1;--i) rmx=max(rmx,gtn[i]=read());\n\t/*\u7531\u9898\u76ee\u6027\u8d28\u53ef\u77e5 \u4e0d\u9700\u8981\u6253\u51fa[1,20000]\u4e2d\u7684\u6240\u6709\u72b6\u6001 \u53ea\u9700\u8981\u6253\u51fa\u6700\u5927\u6570\u636e\u4e4b\u524d\u7684\u6240\u6709\u72b6\u6001\u5373\u53ef*/\n\tgtp(rmx);init(rmx);\n\tfor(;T;--T)\n\t{\n\t\tn=gtn[T];ans=0;\n\t\tif(!e[n].ptw) puts(\"-1\");/*\u5fc5\u8d25\u6001*/ \n\t\telse\n\t\t{\n\t\t\tsit=1;/*\u7528\u53d8\u91cfsit\u6765\u6a21\u62df\u5f53\u524d\u662f\u5fc5\u80dc\u6216\u5fc5\u8d25\u65b9\u64cd\u4f5c*/\n\t\t\tfor(RI i=n;i>1;i=sit?e[i].prx:e[i].pri)\n\t\t\t{\n\t\t\t\t++ans;\n\t\t\t\tsit^=1;/*\u5f53\u524d\u65b9\u64cd\u4f5c\u5b8c\u6bd5 \u6362\u5bf9\u65b9\u64cd\u4f5c*/\n\t\t\t}\n\t\t\tprint(ans);putchar('\\n');\n\t\t}\t\n\t}\n\treturn 0;\n}\ninline int read(void)\n{\n\tchar putin;bool isneg=false;RI ret=0;\n\tputin=getchar();\n\twhile((putin>'9' || putin<'0') && putin!='-')\n\t\tputin=getchar();\n\tif(putin=='-')\n\t{\n\t\tisneg=true;\n\t\tputin=getchar();\n\t}\n\twhile(putin>='0' && putin<='9')\n\t{\n\t\tret=(ret<<3)+(ret<<1)+(putin&15);\n\t\tputin=getchar();\n\t}\n\treturn isneg?-ret:ret;\n}\ninline void print(int x)\n{\n\tif(x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif(x>9) print(x/10);\n\tputchar(x%10+'0');\n\treturn;\n}\ninline void gtp(int x)\n{\n\tmemset(v,0,sizeof(v));cnt=0;\n\tfor(RI i=2;i<=x;++i)\n\t{\n\t\tif(!v[i])\n\t\t{\n\t\t\tp[++cnt]=i;\n\t\t\tv[i]=i;\n\t\t}\n\t\tfor(RI j=1;j<=cnt && i*p[j]<=x;++j)\n\t\t\tif(p[j]>v[i]) break;\n\t\t\telse v[i*p[j]]=p[j];\n\t}\n\treturn;\n}\ninline void init(int x)\n{\n\tfor(RI i=1;i<=x;++i) e[i].init(i);\n\te[0]=e[1]=(node){0,0,0,0,0}; \n\tfor(RI i=0;i+2<=x;++i)\n\t\tfor(RI j=1;j<=cnt && i+p[j]<=x;++j)\n\t\t{\n\t\t\te[i+p[j]].ptw|=(e[i].ptw^1);\n\t\t\tif(e[i].ptw && e[i+p[j]].cnx<e[i].cni+1)/*\u5fc5\u80dc\u6001 \u66f4\u65b0\u6700\u77ed\u8def\u5f84\u524d\u9a71*/\n\t\t\t{\n\t\t\t\te[i+p[j]].cnx=e[i].cni+1;\n\t\t\t\te[i+p[j]].prx=i;\n\t\t\t}\n\t\t\telse if(!e[i].ptw && e[i+p[j]].cni>e[i].cnx+1)/*\u5fc5\u8d25\u6001 \u66f4\u65b0\u6700\u957f\u8def\u5f84\u524d\u9a71*/\n\t\t\t{\n\t\t\t\te[i+p[j]].cni=e[i].cnx+1;\n\t\t\t\te[i+p[j]].pri=i;\n\t\t\t}\t\n\t\t}\t\t\n\treturn;\n}\n```\n\n\n## Update\n\n### 2022.11.18\n\n\u4fee\u590d\u4e86\u5fc5\u80dc\u6001\u4e0e\u5fc5\u8d25\u6001\u63a8\u5bfc\u90e8\u5206\u7684\u8868\u8ff0\u95ee\u9898\u3002",
        "postTime": 1648039997,
        "uid": 359751,
        "name": "Exiler",
        "ccfLevel": 6,
        "title": "P1857\u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u4ece $m$ \u679a\u77f3\u5b50\u4e2d\u4f9d\u6b21\u53d6\u77f3\u5b50\uff0c\u6c42\u82e5\u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565\u5728\u540e\u624b\u5c3d\u53ef\u80fd\u62d6\u5ef6\u7684\u60c5\u51b5\u4e0b\u81f3\u5c11\u9700\u51e0\u6b65\u80dc\u5229\u3002\r\n\r\n\u6838\u5fc3\u601d\u60f3\uff1a\u9012\u63a8\r\n\r\n\u89e3\uff1a\r\n\r\n\u9996\u5148\u7b5b\u51fa\u8d28\u6570\u3002\u4ee4 $f(i)$ \u8868\u793a\u6709\u5fc5\u80dc\u7b56\u7565\u4e00\u65b9\u5728\u53e6\u4e00\u65b9\u5c3d\u53ef\u80fd\u62d6\u5ef6\u7684\u60c5\u51b5\u4e0b\u6240\u9700\u6700\u5c11\u80dc\u5229\u6b65\u6570\u3002\u5219\u6709 $f(0)=f(1)=0$\uff0c\u7ee7\u800c $\\forall\\:i=p$ \u6216 $p+1$ \u65f6 $f(i)=1$\u3002\r\n\r\n$\\forall\\:i$ \u82e5\u5b58\u5728 $0\\le j<i$ \u6ee1\u8db3 $2|f(j)$ \u4e14 $i-j\\in\\mathbb{P}$\uff0c\u5373\u53ef\u4ee5\u53d6\u77f3\u5b50\u4f7f\u5f97\u540e\u624b\uff08\u6b64\u65f6\u7684\u5148\u624b\uff09\u5fc5\u8d25\uff0c\u5219 $f(i)$ \u5e94\u4e3a\u6240\u6709 $f(j)+1$ \u4e2d\u6700\u5c0f\u8005\u3002\u82e5\u4e0d\u5b58\u5728\u5219\u8bf4\u660e\u5148\u624b\u5fc5\u8d25\uff0c\u6b64\u65f6\u5e94\u53d6\u6240\u6709\u6ee1\u8db3 $i-j\\in\\mathbb{P}$ \u7684 $j$ \u4e2d\u4f7f $f(j)+1$ \u6700\u5927\u8005\u3002\r\n\r\n\u8f93\u5165\u8be2\u95ee\u5e76\u8f93\u51fa\u5373\u53ef\u3002\r\n\r\n\u4ee3\u7801\uff1a\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nlong long n, a[11], b[20001], p[20001], flag, s[20001], q;\r\nint main()\r\n{\r\n\tcin>>n;\r\n\tfor(int i=1; i<=n; i++)\r\n\t\tcin>>a[i];\r\n\tfor(int i=2; i<=20000; i++)\r\n\t{\r\n\t    if(b[i]==0)\r\n\t      p[++flag]=i;\r\n\t    for(int j=1; j<=flag; j++)\r\n\t\t{\r\n\t      if(i*p[j]>20000) \r\n\t\t  \tbreak;\r\n\t      b[i*p[j]]=1;\r\n\t      if(i%p[j]==0)\r\n\t        break;\r\n\t\t}\r\n    }\r\n    b[1]=1;//\u7b5b\u8d28\u6570\r\n    for(int i=2; i<=20000; i++)\r\n    {\r\n    \tif(b[i]==0 || b[i-1]==0)\r\n    \t\ts[i]=1;\r\n    \telse\r\n\t    \tfor(int j=0; j<i; j++)\r\n\t    \t\tif(b[i-j]==0)\r\n\t    \t\t{\r\n\t    \t\t\tif(s[j]%2==0)\r\n\t    \t\t\t\tif(s[i]%2==0)\r\n\t    \t\t\t\t\ts[i]=s[j]+1;\r\n\t    \t\t\t\telse\r\n\t    \t\t\t\t\ts[i]=min(s[i], s[j]+1);\r\n\t    \t\t\tif(s[j]%2==1 && s[i]%2==0)\r\n\t    \t\t\t\ts[i]=max(s[i], s[j]+1);\r\n\t\t\t\t}//\u8ba1\u7b97f\r\n\t}\r\n\tfor(int i=1; i<=n; i++)\r\n\t{\r\n\t\tif(s[a[i]]%2==1)\r\n\t\t\tcout<<s[a[i]]<<endl;\r\n\t\telse\r\n\t\t\tcout<<-1<<endl;//\u8f93\u5165\u8f93\u51fa\r\n\t}\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1673499342,
        "uid": 191387,
        "name": "\u03a6\u03c1\u03b1\u03bd\u03ba",
        "ccfLevel": 0,
        "title": "P1857 \u8d28\u6570\u53d6\u77f3\u5b50 \u9898\u89e3"
    },
    {
        "content": "# P1857\n## [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1857)   \n## \u9898\u610f\u7b80\u8ff0\n\u9898\u9762\u5f88\u6e05\u6670\uff0c\u5c31\u4e0d\u590d\u8ff0\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5f00\u59cb\u5206\u6790\u9898\u76ee\u3002  \n## \u9898\u76ee\u5206\u6790\n\u9898\u9762\u8981\u6c42\uff0c\u6bcf\u6b21\u53d6\u6389\u7684\u6570\u90fd\u662f\u8d28\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u4e0d\u60f3\u4ec0\u4e48\uff0c\u5199\u4e00\u4e2a\u8d28\u6570\u7b5b\u3002\u56e0\u4e3a\u6211\u61d2\uff0c\u6240\u4ee5\u5199\u4e86\u4e2a\u66b4\u529b\u904d\u5386\u5224\u65ad\u7684\u7b5b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5199\u6b27\u62c9\u7b5b\u3002\n```cpp\nfor(int i=2;i<=20000;i++)\n{\n\ttot++;\n\tp[tot]=i;//p\u662f\u7d20\u6570\u5217\u8868\n\tfor(int j=2;j*j<=i;j++)\n\t{\n\t\tif(i%j==0)\n\t\t{\n\t\t\ttot--;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n\u90a3\u4e48\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u770b\u4e00\u4e0b\u9898\uff0c\u5f88\u660e\u663e\uff0c\u8fd9\u9053\u9898\u5e94\u8be5\u8981\u628a\u6bcf\u4e2a $Q_i$ \u7684\u7b54\u6848\u7ed9\u9884\u5904\u7406\u51fa\u6765\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u5b83\u6700\u91cd\u8981\u7684\u6027\u8d28\u5c31\u662f\u5728\u8be5\u70b9\u65f6\u5148\u624b\u662f\u5426\u5fc5\u8d62\u3002  \n\u5982\u679c\u4e00\u4e2a\u503c\u5148\u624b\u5fc5\u8d62\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u901a\u8fc7\u53d6\u6389\u4e00\u5806\u77f3\u5b50\u540e\uff0c\u8ba9\u540e\u4e00\u4e2a\u4eba\u9762\u5bf9\u5269\u4f59\u7684\u5c40\u52bf\u65f6\u5fc5\u8f93\uff0c\u800c\u5fc5\u8d62\u7684\u6700\u5c0f\u6b65\u6570\u5c31\u662f\u5728\u5bf9\u9762\u5fc5\u8f93\u7684\u6240\u6709\u53ef\u80fd\u4e2d\uff0c\u5bf9\u9762\u53ef\u4ee5\u62d6\u5ef6\u7684\u6240\u6709\u6700\u957f\u6b65\u6570\u53d6 $\\min$\uff08\u6709\u70b9\u7ed5\uff0c\u5efa\u8bae\u591a\u8bfb\u53cd\u590d\u7406\u89e3\uff0c\u56e0\u4e3a\u8fd9\u633a\u5173\u952e\u7684\uff09\u3002  \n\u5fc5\u7136\u5730\uff0c\u6211\u4eec\u4e5f\u8981\u8003\u8651\u5fc5\u8f93\u6027\u8d28\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u503c\u53d6\u5148\u624b\uff0c\u5982\u679c\u65e0\u8bba\u600e\u4e48\u53d6\uff0c\u4e0b\u4e00\u4e2a\u4eba\u90fd\u662f\u5fc5\u8d62\uff0c\u90a3\u8fd9\u4e2a\u4eba\u5c31\u5fc5\u8f93\u4e86\u3002\u800c\u5fc5\u8f93\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u53ef\u62d6\u5ef6\u6b65\u6570\uff0c\u5c31\u662f\u6240\u6709\u53d6\u6cd5\u4e2d\u5bf9\u9762\u6700\u77ed\u6b65\u6570\u7684 $\\max$\u3002  \n\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u4ee3\u7801\u4e86\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u503c\u7ef4\u62a4\u4e24\u4e2a $dp$ \u503c\uff0c\u4e00\u4e2a\u662f\u5fc5\u8f93\u6700\u5927\u6b65\u6570\uff0c\u4e00\u4e2a\u662f\u5fc5\u8d62\u6700\u5c0f\u6b65\u6570\uff0c\u5982\u679c\u4e0d\u5fc5\u8f93\u6216\u4e0d\u5fc5\u8d62\uff0c\u5c31\u653e\u4e2a $-1$ \u8fdb\u53bb\u3002  \n\u521d\u59cb\u5316\u65f6\u628a $0$ \u548c $1$ \u624b\u6253\u4e0a\u53bb\uff0c\u518d $dp$ \u5c31\u53ef\u4ee5\u4e86\u3002   \n\u6ca1\u4e86\uff0c\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint lose[200003],win[200003],n,x,tot,p[200003];\nint main()\n{\n\tfor(int i=2;i<=20000;i++)\n\t{\n\t\ttot++;\n\t\tp[tot]=i;\n\t\tfor(int j=2;j*j<=i;j++)\n\t\t{\n\t\t\tif(i%j==0)\n\t\t\t{\n\t\t\t\ttot--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tlose[0]=0;\n\twin[0]=-1;\n\tlose[1]=0;\n\twin[1]=-1;\n\tfor(int i=2;i<=20000;i++)\n\t{\n\t\tfor(int j=1;j<=tot&&p[j]<=i;j++)\n\t\t{\n\t\t\tif(win[i-p[j]]==-1)\n\t\t\t{\n\t\t\t\tlose[i]=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlose[i]=max(lose[i],win[i-p[j]]+1);\n\t\t}\n\t\twin[i]=-1;\n\t\tfor(int j=1;j<=tot&&p[j]<=i;j++)\n\t\t{\n\t\t\tif(lose[i-p[j]]!=-1)\n\t\t\t{\n\t\t\t\twin[i]=214748364;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(win[i]==214748364)\n\t\t{\n\t\t\tfor(int j=1;j<=tot&&p[j]<=i;j++)\n\t\t\t{\n\t\t\t\tif(lose[i-p[j]]!=-1)\n\t\t\t\t{\n\t\t\t\t\twin[i]=min(win[i],lose[i-p[j]]+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tprintf(\"%d\\n\",win[x]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1670237123,
        "uid": 340819,
        "name": "cwfxlh",
        "ccfLevel": 5,
        "title": "P1857"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6211\u76f4\u63a5\u6bcf\u6b21\u8be2\u95ee\u4e2d\u8c03\u7528 `dfs(n)` \u4f1a WA \u554a\u3002\u3002\u3002\n\n\u9996\u5148\u7b5b\u51fa\u6240\u6709\u8d28\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5bf9\u4e8e $n$ \u7684\u64cd\u4f5c\u60c5\u51b5\u3002\u663e\u7136\u8bbe\u6240\u6709\u8d28\u6570\u4e3a $p_1<p_2<\\dots$\uff0c$n$ \u7684\u540e\u7ee7\u72b6\u6001\u4e3a $n-p_i$\u3002\n\n\u6211\u4eec\u53ea\u8981\u8003\u8651 $n$ \u7684\u80dc\u8d1f\u60c5\u51b5\u3002\u5982\u679c $n$ \u5fc5\u80dc\uff0c\u90a3\u4e48\u5148\u624b\u5fc5\u987b\u64cd\u4f5c\u5230\u5fc5\u8d25\u540e\u7ee7\u72b6\u6001\u4e0a\uff0c\u60f3\u8981\u5c3d\u5feb\u7ed3\u675f\uff0c\u5bf9\u8fd9\u4e9b\u72b6\u6001\u7684\u6b65\u6570\u6c42 $\\min$ \u540e\u518d\u52a0 $1$ \u5c31\u80fd\u5f97\u5230\u6700\u5c11\u6b65\u6570\u3002\n\n\u5982\u679c $n$ \u5fc5\u8d25\uff0c\u90a3\u4e48\u5148\u624b\u60f3\u8981\u5c3d\u91cf\u62d6\u5ef6\u65f6\u95f4\uff0c\u6240\u4ee5\u53ea\u8981\u5bf9\u540e\u7ee7\u72b6\u6001\u7684\u6b65\u6570\u6c42 $\\max$ \u540e\u518d\u52a0 $1$ \u5c31\u5f97\u5230\u6700\u591a\u6b65\u6570\u3002\n\n\u76f4\u63a5\u8f6c\u79fb\uff0c\u5bf9\u6240\u6709\u6570\u5904\u7406\u4e00\u904d\u518d $O(1)$ \u56de\u7b54\u8be2\u95ee\u662f $O\\left(\\dfrac{n^2}{\\log{n}}\\right)+t$ \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\nCode:\n```cpp\n#include<cstdio>\n#define rg register\nint mp[20033];\nint pr[20033],cnt;\ninline void init()\n{\n\tfor(rg int i=2;i<20030;++i)\n\t{\n\t\tif(!mp[i])pr[mp[i]=++cnt]=i;\n\t\tfor(rg int j=1;j<=mp[i]&&(i*pr[j]<20030);++j)mp[i*pr[j]]=j;\n\t}\n}\nint win[20003];\nint tmp[20003];\nint step[20003];\nvoid dfs(int x)\n{\n\tif(x<=1)\n\t{\n\t\twin[x]=-1;\n\t\tstep[x]=0;\n\t\treturn;\n\t}\n\twin[x]=-1,step[x]=1;\n\tfor(rg int i=1;pr[i]<=x;++i)\n\t{\n\t\tif(win[x-pr[i]]==-1)win[x]=1;\n\t\ttmp[i]=win[x-pr[i]]*step[x-pr[i]];\n\t}\n\tint mx=(~win[x])?-20003:0;\n\tfor(rg int i=1;pr[i]<=x;++i)\n\t{\n\t\tif(tmp[i]*win[x]>0)continue;\n\t\tif(tmp[i]>mx)mx=tmp[i];\n\t}\n\tstep[x]-=mx*win[x];\n}\nint t,n;\nint main()\n{\n\tinit();\n\tscanf(\" %d\",&t);\n\tfor(rg int i=0;i<=20000;++i)dfs(i);\n\twhile(t--)\n\t{\n\t\tscanf(\" %d\",&n);\n\t\tprintf(\"%d\\n\",(~win[n])?step[n]:-1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1618305438,
        "uid": 59388,
        "name": "VinstaG173",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1857 \u3010\u8d28\u6570\u53d6\u77f3\u5b50\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u5199\u9898\u89e3 \u4f5c\u4e3a\u4e00\u53ea\u5c0f\u849f\u84bb \u6709\u70b9\u5c0f\u6fc0\u52a8\u3002\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u535a\u5f08\u8bba\u7684\u9898\u76ee\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6b65\u6570i\uff0c\u82e5\u51cf\u53bb\u5c0f\u4e8ei\u7684\u4efb\u610f\u8d28\u6570\u540e\u90fd\u4e3a\u5fc5\u80dc\u60c5\u51b5\uff0c\u5219\u4e3a\u5fc5\u8d1f\uff0c\u82e5\u51cf\u53bb\u4e00\u4e2a\u8d28\u6570\u540e\u4e3a\u5fc5\u8d1f\uff0c\u5219\u4e3a\u5fc5\u80dc\u3002\n\n\u4e00\u5f00\u59cb\u8d28\u6570\u7528\u4e86\u6253\u8868....\u7136\u540e10\u4e2aWA \u63d0\u4ea4\u4e8610\u591a\u6b21 \u5f88\u96be\u53d7...\n\nf[i]\u5b58\u50a8\u7684\u82e5\u4e3a\u6b63\u6570 \u4e3ai\u6b65\u83b7\u80dc\u9700\u8981\u7684\u6700\u5c11\u6b65\u6570 \u82e5\u4e3a\u8d1f\u6570 \u5219\u4e3a\u5bf9\u65b9\u83b7\u80dc\u9700\u8981\u7684\u6700\u5c11\u6b65\u6570\uff08\u4e3a\u533a\u5206\u524d\u9762\u8f93\u7684\u60c5\u51b5\u52a0\u4e86\u8d1f\u53f7\uff09\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,x=1,Min,Max=0; \nint f[30010]={0},a[20],b[20],zhishu[10000],p[21000]={0}; \ninline void work()\n{\n f[0]=0; \n f[1]=0;\n for(int i=2;i<=b[n];++i)\n  {\n   if(x>n) break;   //\u5982\u679c\u8981\u8f93\u51fa\u7684\u6570\u636e\u90fd\u8f93\u51fa\u5b8c\u4e86 \u8df3\u51fa\u5faa\u73af \n   Min=200000;Max=0;\n   for(int j=i;j>1;--j)    \n     if(!(p[j]))  //\u5982\u679cj\u662f\u8d28\u6570 \n      {  \n        if(f[i-j]<=0) {if(Min>(1-f[i-j])) Min=1-f[i-j];}    //\u62ff\u53bb\u8be5\u77f3\u5b50\u5bf9\u65b9\u4e3a\u5fc5\u8f93\u53d6\u6700\u5c0f \n          else if(f[i-j]+1>Max)  Max=f[i-j]+1;  //\u62ff\u53bb\u8be5\u77f3\u5b50\u5bf9\u65b9\u4e3a\u5fc5\u80dc\u53d6\u6700\u5927 \n      }\n   if(Min!=200000) f[i]=Min; //\u5224\u65ad \n   else f[i]=-Max;\n  }\n return;\n}\ninline void init()\n{\n scanf(\"%d\",&n); \n for(int i=1;i<=n;++i)\n  scanf(\"%d\",&a[i]);\n for(int i=1;i<=n;++i)\n  b[i]=a[i];\n sort(b+1,b+n+1);//\u5176\u5b9e\u5c31\u662f\u4e3a\u4e86\u5faa\u73af\u7684\u65f6\u5019\u627e\u5230\u6700\u5927\u503c  \u4e00\u5f00\u59cb\u5931\u4e86\u667a \u540e\u9762\u5c31\u61d2\u5f97\u6539\u4e86 \n return;\n}\ninline void first()//\u7b5b\u6cd5\uff0c0\u8868\u793a\u8d28\u6570\uff0c1\u8868\u793a\u5408\u6570 \n{\n    for(int i=2;i<=20000;++i)\n    if(p[i]==0)\n    {\n        zhishu[++Max]=i;\n        for(int j=i+i;j<=20000;j+=i)p[j]=1;\n    }\n    return;\n}\ninline void print()\n{\n for(int i=1;i<=n;++i)\n  if(f[a[i]]>0)printf(\"%d\\n\",f[a[i]]);  \n   else printf(\"-1\\n\");  //\u5982\u679c\u8d1f\u8f93\u51fa-1 \n}\nint main()\n{ \n first();//\u7b5b\u6cd5\u6c42\u8d28\u6570 \n init();//\u8f93\u5165 \n work();//\u6700\u4e3b\u5e72\u7684\u90e8\u5206 \n print(); //\u8f93\u51fa \n return 0;\n}\n```",
        "postTime": 1503293318,
        "uid": 49236,
        "name": "a1035719430",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1857 \u3010\u8d28\u6570\u53d6\u77f3\u5b50\u3011"
    },
    {
        "content": "\u535a\u5f08\u8bba\u7684\u9898\u76ee\uff0c\u5bf9\u4e8e\u4e00\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u6709\u524d\u9a71\u60c5\u51b5\u4e3a\u5fc5\u8d25\u6001\uff0c\u5219\u8be5\u60c5\u51b5\u5fc5\u4e3a\u5fc5\u80dc\u6001\uff0c\u82e5\u524d\u9a71\u60c5\u51b5\u90fd\u4e3a\u5fc5\u80dc\u6001\uff0c\u5219\u8be5\u60c5\u51b5\u4e3a\u5fc5\u8d25\u6001\u3002\n\n\u4e14\u82e5\u5f53\u524d\u60c5\u51b5\u4e3a\u5fc5\u80dc\u6001\uff0c\u5219\u5e94\u4ece\u6b65\u6570\u6700\u5c11\u7684\u524d\u9a71\u5fc5\u8d25\u6001\u8f6c\u6362\u800c\u6765\uff08\u5c3d\u5feb\u80dc\u5229\uff09\uff0c\n\n\u82e5\u5f53\u524d\u60c5\u51b5\u4e3a\u5fc5\u8d25\u6001\uff0c\u5219\u5e94\u4ece\u6b65\u6570\u6700\u591a\u7684\u5fc5\u80dc\u6001\u8f6c\u6362\u800c\u6765\uff08\u963b\u6b62\u5bf9\u65b9\u80dc\u5229\uff09\u3002\n\ns[i][0]\u8868\u793ai\u4e2a\u77f3\u5b50\u65f6\u7684\u6b65\u6570\uff0cs[i][1]=-1\u8868\u793a\u5f53\u524d\u4e3a\u5fc5\u8d25\u6001\uff0cs[i][1]=1\u8868\u793a\u4e3a\u5fc5\u80dc\u6001\u3002\n\np\u6570\u7ec4\u5b58\u8d28\u6570\uff0cpr\u6570\u7ec4\u4e3a\u5224\u5b9a\u7528\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,s[20010][2]={0},a[20]={0},pr[20010]={1,1},p[3000]={0},ma=0,sum=0;\ninline int read(int &num)\n{\n    num=0;\n    char c=getchar();\n    for(;isdigit(c)==0;c=getchar());\n    for(;isdigit(c)!=0;c=getchar())num=num*10+c-'0';\n}\n\ninline void init()\n{\n    read(n);\n    for(int i=1;i<=n;++i)\n    {\n        read(a[i]);\n        if(a[i]>ma)ma=a[i];//\u5bfb\u627e\u6700\u5927\u503c\uff0c\u4ee5\u4fbf\u7ebf\u4e0b\u64cd\u4f5c\n    }\n    return;\n}\n\ninline void first()//\u7b5b\u6cd5\uff0cpr[i]=0\u8868\u793a\u8d28\u6570\uff0cpr[i]=1\u8868\u793a\u5408\u6570 \n{\n    for(int i=2;i<=ma;++i)\n    if(pr[i]==0)\n    {\n        p[++sum]=i;//\u5b58\u50a8\u8d28\u6570\uff0c\u53ef\u4ee5\u8282\u7701\u65f6\u95f4\n        for(int j=i+i;j<=ma;j+=i)pr[j]=1;\n    }\n    return;\n}\n\ninline void dp()\n{\n    s[0][1]=-1;s[0][0]=0;\n    s[1][1]=-1;s[1][0]=0;\n    s[2][1]=1;s[2][0]=1;\n    s[3][1]=1;s[3][0]=1;//\u521d\u59cb\u5316\u51e0\u4e2a\u70b9\n    for(int i=4;i<=ma;++i)\n    for(int j=sum;j>=1;--j)//j\u4e0d\u80fd\u53cd\u8fc7\u6765\uff0c\u4f1aWA\n    if(p[j]<=i)\n    { \n        if(s[i-p[j]][1]==-1)//\u524d\u9a71\u4e3a\u5fc5\u8d25\u6001\n        if(s[i][1]==0||s[i][1]==-1)//\u5982\u679c\u672a\u5224\u5b9a\u72b6\u6001\n        {\n            s[i][1]=1;//\u7f6e\u5fc5\u80dc\u6001\n            s[i][0]=s[i-p[j]][0]+1;\n        }\n        else\n        s[i][0]=min(s[i][0],s[i-p[j]][0]+1);//\u9009\u53d6\u6700\u5c0f\u503c\n        \n        if(s[i-p[j]][1]==1)//\u524d\u9a71\u4e3a\u5fc5\u8d25\u6001\n        if(s[i][1]==0)//\u5982\u679c\u672a\u7f6e\u72b6\u6001\n        {\n            s[i][1]=-1;\n            s[i][0]=s[i-p[j]][0]+1;\n        }\n        else if(s[i][1]==-1)//\u5982\u679c\u5df2\u7f6e\u5fc5\u8d25\u6001\n        s[i][0]=max(s[i][0],s[i-p[j]][0]+1);//\u5bfb\u627e\u6700\u5927\u503c\n    }\n    return;\n}\n    \ninline void print()\n{\n    for(int i=1;i<=n;++i)\n    if(s[a[i]][1]==-1)\n    printf(\"-1\\n\");\n    else printf(\"%d\\n\",s[a[i]][0]);\n    return;\n}\n\nint main()\n{\n    init();\n    first();\n    dp();\n    print(); \n    return 0;\n}\n```",
        "postTime": 1503215967,
        "uid": 21386,
        "name": "s223568907",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1857 \u3010\u8d28\u6570\u53d6\u77f3\u5b50\u3011"
    },
    {
        "content": "\u535a\u5f08\u8bba\u7684\u9898\u76ee\uff0c\u90fd\u6709\u5fc5\u80dc\u6001\u7684\u524d\u5bfc\u662f\u5fc5\u8d25\u6001\uff0c\u5fc5\u8d25\u6001\u7684\u524d\u5bfc\u662f\u5fc5\u80dc\u6001\u3002\u6240\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u770b\u80fd\u5426\u8ba9\u5b83\u8fbe\u5230\u5fc5\u8d25\u6001\u3002\u5982\u679c\u53ef\u4ee5\u5219\u8fd9\u4e2a\u70b9\u5fc5\u80dc\uff0c\u5426\u5219\u5fc5\u8d25\u3002\u5148\u7528\u7b5b\u6cd5\u679a\u4e3e\u51fa\u8d28\u6570\uff0c\u7136\u540edp\u89e3\u51b3\u3002\u56e0\u4e3a\u6570\u636e\u7565\u5c0f\uff0c\u6240\u4ee5\u6bcf\u6b21\u76f4\u63a5\u5904\u7406\u5b8c2W\u4ee5\u5185\u7684\u5168\u90e8\u7ed3\u679c\u3002\n\n\u8ba1\u6570\u7684\u65f6\u5019\u53c2\u8003\u697c\u4e0b\u8bf4\u6cd5\uff0c\u5fc5\u8d25\u5230\u5fc5\u80dc\u53d6max\uff0c\u5fc5\u80dc\u5230\u5fc5\u8d25\u53d6min\n\n```pascal\nVar\n    ifP,dp:array[0..20010] of boolean;\n    prime,count:array[0..20010] of longint;\n    n,i,j,t,cnt:longint;\nBegin\n    readln(n);\n    fillchar(ifP,sizeof(ifP),true);\n    fillchar(dp,sizeof(dp),false);\n    fillchar(count,sizeof(count),0);\n    ifP[1]:=false;\n    cnt:=0;\n    for i:=2 to 20000 do begin\n        if ifP[i] then begin\n            for j:=2 to 20000 div i do begin\n                ifP[i*j]:=false;\n            end;\n            inc(cnt);\n                        //writeln(cnt);\n            prime[cnt]:=i;\n        end;\n    end;\n    dp[0]:=false;\n    for i:=0 to 20000 do begin\n        for j:=1 to cnt do begin\n            if prime[j]>i then break;\n            if not(dp[i-prime[j]]) then begin\n                dp[i]:=true;\n                break;\n            end;\n        end;\n        for j:=1 to cnt do begin\n            if prime[j]>i then break;\n            if dp[i] and not(dp[i-prime[j]]) then begin\n                if (count[i]=0) or (count[i-prime[j]]+1<count[i]) then count[i]:=count[i-prime[j]]+1;\n            end else if not(dp[i]) and (dp[i-prime[j]]) then begin\n                if (count[i]=0) or (count[i-prime[j]]+1>count[i]) then count[i]:=count[i-prime[j]]+1;\n            end;\n        end;\n    end;\n    for i:=1 to n do begin\n        readln(t);\n        if dp[t] then writeln(count[t]) else writeln(-1);\n    end;\nEnd.\n```",
        "postTime": 1478662997,
        "uid": 8876,
        "name": "hibiki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1857 \u3010\u8d28\u6570\u53d6\u77f3\u5b50\u3011"
    },
    {
        "content": "DP\u9898\uff0cf[i]\u8868\u793a\u53d6i\u4f4d\u65f6\u80fd\u5426\u5fc5\u80dc\uff0c\u5219\u5982\u51cf\u53bb\u7d20\u6570f[i-a[j]]==0\uff0c\u5c31\u662f\u8bf4\u5bf9\u65b9\u5fc5\u8d25\uff0c\u5219f[i]==1.\n\n\u56e0\u4e3a\u6211\u6bd4\u8f83\u50bb\u903c\uff0c\u6240\u4ee5WA\u4e86\u5341\u6b21\u3002\n\n\n/\\*Yeah!!!\n\nAll Hail FZ!\n\n\n                                \n\\_\\_\\_\\_\\_\\_\\_\\_\n\n                         |F Z   |               \n\\_\\_\\--\\_\\_|\\_-----.\n\n  II=======OOOOO[/ \u260502 \\_\\_\\_|           \n\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_|/-----.\n\n/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_|\n\n\\\u25ce\u25ce\u25ce\u25ce\u25ce\u25ce\u25ce\u25ce\u2299/\n\n~~~~~~~~~~~~~~~~\n\n             \n             \n\n              \n\\*/\n\n\n\n\n\n\n\n    \n    \n    \n\n    \n\n    \n\n          \n         \n            \n             \n\n         \n               \n               \n       \n            \n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint f[100000],a[100],d[1000000];             //f[i]\u8868\u793ai\u4f4d\u7f6e\u80fd\u5426\u5fc5\u80dc\u3002\u5fc5\u80dc\u4e3a1\uff0c\u5fc5\u8d25\u4e3a0\uff1b\n                                             //d\u6570\u7ec4\u8bb0\u5f55\u6b65\u6570\u3002a\u6570\u7ec4\u8f93\u5165\u3002 \nint sushulist[10000]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007,10009,10037,10039,10061,10067,10069,10079,10091,10093,10099,10103,10111,10133,10139,10141,10151,10159,10163,10169,10177,10181,10193,10211,10223,10243,10247,10253,10259,10267,10271,10273,10289,10301,10303,10313,10321,10331,10333,10337,10343,10357,10369,10391,10399,10427,10429,10433,10453,10457,10459,10463,10477,10487,10499,10501,10513,10529,10531,10559,10567,10589,10597,10601,10607,10613,10627,10631,10639,10651,10657,10663,10667,10687,10691,10709,10711,10723,10729,10733,10739,10753,10771,10781,10789,10799,10831,10837,10847,10853,10859,10861,10867,10883,10889,10891,10903,10909,10937,10939,10949,10957,10973,10979,10987,10993,11003,11027,11047,11057,11059,11069,11071,11083,11087,11093,11113,11117,11119,11131,11149,11159,11161,11171,11173,11177,11197,11213,11239,11243,11251,11257,11261,11273,11279,11287,11299,11311,11317,11321,11329,11351,11353,11369,11383,11393,11399,11411,11423,11437,11443,11447,11467,11471,11483,11489,11491,11497,11503,11519,11527,11549,11551,11579,11587,11593,11597,11617,11621,11633,11657,11677,11681,11689,11699,11701,11717,11719,11731,11743,11777,11779,11783,11789,11801,11807,11813,11821,11827,11831,11833,11839,11863,11867,11887,11897,11903,11909,11923,11927,11933,11939,11941,11953,11959,11969,11971,11981,11987,12007,12011,12037,12041,12043,12049,12071,12073,12097,12101,12107,12109,12113,12119,12143,12149,12157,12161,12163,12197,12203,12211,12227,12239,12241,12251,12253,12263,12269,12277,12281,12289,12301,12323,12329,12343,12347,12373,12377,12379,12391,12401,12409,12413,12421,12433,12437,12451,12457,12473,12479,12487,12491,12497,12503,12511,12517,12527,12539,12541,12547,12553,12569,12577,12583,12589,12601,12611,12613,12619,12637,12641,12647,12653,12659,12671,12689,12697,12703,12713,12721,12739,12743,12757,12763,12781,12791,12799,12809,12821,12823,12829,12841,12853,12889,12893,12899,12907,12911,12917,12919,12923,12941,12953,12959,12967,12973,12979,12983,13001,13003,13007,13009,13033,13037,13043,13049,13063,13093,13099,13103,13109,13121,13127,13147,13151,13159,13163,13171,13177,13183,13187,13217,13219,13229,13241,13249,13259,13267,13291,13297,13309,13313,13327,13331,13337,13339,13367,13381,13397,13399,13411,13417,13421,13441,13451,13457,13463,13469,13477,13487,13499,13513,13523,13537,13553,13567,13577,13591,13597,13613,13619,13627,13633,13649,13669,13679,13681,13687,13691,13693,13697,13709,13711,13721,13723,13729,13751,13757,13759,13763,13781,13789,13799,13807,13829,13831,13841,13859,13873,13877,13879,13883,13901,13903,13907,13913,13921,13931,13933,13963,13967,13997,13999,14009,14011,14029,14033,14051,14057,14071,14081,14083,14087,14107,14143,14149,14153,14159,14173,14177,14197,14207,14221,14243,14249,14251,14281,14293,14303,14321,14323,14327,14341,14347,14369,14387,14389,14401,14407,14411,14419,14423,14431,14437,14447,14449,14461,14479,14489,14503,14519,14533,14537,14543,14549,14551,14557,14561,14563,14591,14593,14621,14627,14629,14633,14639,14653,14657,14669,14683,14699,14713,14717,14723,14731,14737,14741,14747,14753,14759,14767,14771,14779,14783,14797,14813,14821,14827,14831,14843,14851,14867,14869,14879,14887,14891,14897,14923,14929,14939,14947,14951,14957,14969,14983,15013,15017,15031,15053,15061,15073,15077,15083,15091,15101,15107,15121,15131,15137,15139,15149,15161,15173,15187,15193,15199,15217,15227,15233,15241,15259,15263,15269,15271,15277,15287,15289,15299,15307,15313,15319,15329,15331,15349,15359,15361,15373,15377,15383,15391,15401,15413,15427,15439,15443,15451,15461,15467,15473,15493,15497,15511,15527,15541,15551,15559,15569,15581,15583,15601,15607,15619,15629,15641,15643,15647,15649,15661,15667,15671,15679,15683,15727,15731,15733,15737,15739,15749,15761,15767,15773,15787,15791,15797,15803,15809,15817,15823,15859,15877,15881,15887,15889,15901,15907,15913,15919,15923,15937,15959,15971,15973,15991,16001,16007,16033,16057,16061,16063,16067,16069,16073,16087,16091,16097,16103,16111,16127,16139,16141,16183,16187,16189,16193,16217,16223,16229,16231,16249,16253,16267,16273,16301,16319,16333,16339,16349,16361,16363,16369,16381,16411,16417,16421,16427,16433,16447,16451,16453,16477,16481,16487,16493,16519,16529,16547,16553,16561,16567,16573,16603,16607,16619,16631,16633,16649,16651,16657,16661,16673,16691,16693,16699,16703,16729,16741,16747,16759,16763,16787,16811,16823,16829,16831,16843,16871,16879,16883,16889,16901,16903,16921,16927,16931,16937,16943,16963,16979,16981,16987,16993,17011,17021,17027,17029,17033,17041,17047,17053,17077,17093,17099,17107,17117,17123,17137,17159,17167,17183,17189,17191,17203,17207,17209,17231,17239,17257,17291,17293,17299,17317,17321,17327,17333,17341,17351,17359,17377,17383,17387,17389,17393,17401,17417,17419,17431,17443,17449,17467,17471,17477,17483,17489,17491,17497,17509,17519,17539,17551,17569,17573,17579,17581,17597,17599,17609,17623,17627,17657,17659,17669,17681,17683,17707,17713,17729,17737,17747,17749,17761,17783,17789,17791,17807,17827,17837,17839,17851,17863,17881,17891,17903,17909,17911,17921,17923,17929,17939,17957,17959,17971,17977,17981,17987,17989,18013,18041,18043,18047,18049,18059,18061,18077,18089,18097,18119,18121,18127,18131,18133,18143,18149,18169,18181,18191,18199,18211,18217,18223,18229,18233,18251,18253,18257,18269,18287,18289,18301,18307,18311,18313,18329,18341,18353,18367,18371,18379,18397,18401,18413,18427,18433,18439,18443,18451,18457,18461,18481,18493,18503,18517,18521,18523,18539,18541,18553,18583,18587,18593,18617,18637,18661,18671,18679,18691,18701,18713,18719,18731,18743,18749,18757,18773,18787,18793,18797,18803,18839,18859,18869,18899,18911,18913,18917,18919,18947,18959,18973,18979,19001,19009,19013,19031,19037,19051,19069,19073,19079,19081,19087,19121,19139,19141,19157,19163,19181,19183,19207,19211,19213,19219,19231,19237,19249,19259,19267,19273,19289,19301,19309,19319,19333,19373,19379,19381,19387,19391,19403,19417,19421,19423,19427,19429,19433,19441,19447,19457,19463,19469,19471,19477,19483,19489,19501,19507,19531,19541,19543,19553,19559,19571,19577,19583,19597,19603,19609,19661,19681,19687,19697,19699,19709,19717,19727,19739,19751,19753,19759,19763,19777,19793,19801,19813,19819,19841,19843,19853,19861,19867,19889,19891,19913,19919,19927,19937,19949,19961,19963,19973,19979,19991,19993,19997};\n//20000\u4ee5\u4e0b\u7684\u7d20\u6570\u8868\uff0c\u53ea\u67092600\u4e2a\u6570\u5b57\uff0c\u4e3a\u4e86\u8282\u7701\u6548\u7387\u5728\u5176\u4ed6\u7a0b\u5e8f\u4e0a\u5199\u3002 \nint sushu[30001],step=1;\nint min(int a,int b)                //\u6700\u5927\u6700\u5c0f\uff0c\u5b57\u9762\u6240\u89c1\u3002 \n{\n    if(a<b)\n      return a;\n    return b;\n}\nint max(int a,int b)\n{\n    if(a>b)\n      return a;\n    return b;\n}\nint main()\n{\n//    freopen(\"game.in\",\"r\",stdin);\n//    freopen(\"game.out\",\"w\",stdout);\n    memset(d,0,sizeof(f));              //\u6570\u7ec4\u521d\u59cb\u503c0 \n    int n;\n    scanf(\"%d\",&n);\n    f[2]=1;                            //2,3\u7684\u65f6\u5019\u53d6\u4e00\u6b21\u4e3a0\uff0c\u5fc5\u80dc\u30024\u662f\u4fdd\u9669\u4f5c\u7528\u3002 \n    f[3]=1;\n    f[4]=1;\n    int maxx=-1;\n    for(int i=1;i<=n;++i)\n    {\n      scanf(\"%d\",&a[i]);                 //\u8bfb\u5165\u3002 \n    }\n  for(int len=1;len<=n;++len)                 //\u679a\u4e3e\u6bcf\u4e2a\u8bfb\u5165 \n  {\n    for(int i=2;i<=a[len];++i)\n      for(int j=0;j<=2261;++j)                      //\u6b64\u5904\u6211\u4e0d\u5c0f\u5fc3\u6389\u4e86\u5751\u3002\u6570\u7ec4sushulist\u5b9e\u9645\u4e0a\u521d\u59cb\u503c\u662f\u4ece0\u5f00\u59cb\u5b9a\u4e49\u7684\u3002\n                                                   //\u7136\u800c\u6211\u5199\u4e86\u4ece1\u679a\u4e3e\u7d20\u6570\u8868\u3002\u76f4\u63a5\u5bfc\u81f48\u6b21\u63d0\u4ea4\u9519\u8bef\u3002 \n      {\n          if(sushulist[j]>i)\n            break;\n            if(f[i-sushulist[j]]==0)                  //DP\uff0c\u5982\u679c\u51cf\u53bb\u4e00\u4e2a\u7d20\u6570\u4f7f\u5f97\u5bf9\u65b9\u201c\u5fc5\u8d25\u201d\uff0c\u5219\u81ea\u5df1\u5fc5\u80dc\uff0cf\u4e3a1 \n            {\n              f[i]=1;\n              break;                                 //\u65e0\u9700\u6240\u6709\u7b56\u7565\u90fd\u5fc5\u80dc\u3002 \n          }\n    }\n   for(int i=2;i<=a[len];++i)\n          {\n         for(int j=0;j<=2261;++j)\n           if(i<sushulist[j]) \n               break;\n         else \n         if(f[i]&&!f[i-sushulist[j]])                            //\u8fd9\u91cc\u6839\u636e\u7f51\u4e0a\u662f\uff08\u539f\u8c05\u6211\uff09\u201c\u56e0\u4e3a \u5fc5\u8d25 \u6240\u4ee5 \u5bf9\u65b9\u4f1a\u7528\u6700\u5feb\u53d6\u80dc\u7b56\u7565\uff0c\u6240\u4ee5\u53d6min \n                                                                //\u540c\u7406\u5fc5\u80dc\u5219\u5bf9\u65b9\u4f1a\u4e0d\u65ad\u6363\u4e71\uff0c\u90a3\u4e48\u53d6max \n             {\n              if(d[i]==0) \n                  d[i]=d[i-sushulist[j]]+1;\n                else \n              d[i]=min(d[i],d[i-sushulist[j]]+1);\n           }\n         else \n         if(!f[i]&&f[i-sushulist[j]])                        \n         { \n           if(d[i]==0) \n           d[i]=d[i-sushulist[j]]+1;\n           else   \n            d[i]=max(d[i],d[i-sushulist[j]]+1);\n             }\n           } \n            if(f[a[len]]==0) {\n            cout<<-1<<endl;\n            continue;\n            }                  //\u603b\u7ed3\uff0c\u5fc5\u8d25\u8f93\u51fa-1 \u540econ\u6389 \n       cout<<d[a[len]]<<endl;                                            //\u53cd\u4e4b\u8f93\u51fa\u6b65\u6570 \n}\n```",
        "postTime": 1470701242,
        "uid": 17667,
        "name": "feilongz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1857 \u3010\u8d28\u6570\u53d6\u77f3\u5b50\u3011"
    }
]