[
    {
        "content": "\u5148\u79bb\u6563\u5316\uff0c\u4e4b\u540e\u4e8c\u5206\u7b54\u6848\uff0c\u5bf9\u4e8e\u4e8c\u5206\u51fa\u7684\u7b54\u6848$k$\uff0c\u8003\u8651$x$\u8f74\u3002\u5bf9\u4e8e $x = x_0 $\uff0c\u8bbe\u8fd9\u4e00\u5217\u5171\u6709$p$\u4e2a\u67f1\u5b50\uff0c\u53ef\u4ee5\u5efa\u796d\u575b\u7684\u5730\u65b9\u4e0a\u65b9\u6709$s$\u4e2a\u67f1\u5b50\uff0c\u90a3\u4e48\u5bb9\u6613\u53d1\u73b0$ min(s, p - s) <= k $\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$x$\uff0c\u90fd\u53ef\u4ee5\u89e3\u51fa\u4e00\u4e2a\u8303\u56f4\u3002\u4e4b\u540e\u626b\u63cf$y$\u8f74\uff0c\u540c\u6837\u7684\u5f97\u5230\u4e00\u4e2a\u8303\u56f4\u3002\u5bf9\u4e8e$y$\u8f74\u4e0a\u7684\u4e00\u884c\uff0c\u5176\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u4e3a\u5176\u8303\u56f4\u4e2d\u6709\u591a\u5c11\u4e2a$x$\u6ee1\u8db3\u8303\u56f4\uff0c\u6240\u4ee5\u8fb9\u7ef4\u62a4$x$\u8f74\u7684\u53ef\u884c\u6027\uff0c\u8fb9\u7edf\u8ba1\u7b54\u6848\u3002\u8fd9\u91cc\u7528\u5230\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u5355\u70b9\u67e5\u8be2\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\u590d\u6742\u5ea6 $O(nlog^2n)$\uff0c\u5f97\u520660 ~ 100\u5206\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 300005;\nconst int INF = 1 << 30;\nconst int BUFMAX = 10000000;\nvector<int> x[MAXN];\nvector<int> y[MAXN];\nint n, q, mx, my;\nint u[MAXN], v[MAXN], du[MAXN], dv[MAXN];\nint sta[MAXN], ed[MAXN], now[MAXN];\nint st[MAXN * 4], id[MAXN];\nchar BUF[BUFMAX], *buf = BUF;\ninline void read(int &n) {\n  n = 0;\n  while(*buf < '0') buf++;\n  while(*buf >= '0') {\n    n = n * 10 + *buf - '0'; buf++;\n  }\n}\nvoid build(int cur, int l, int r) {\n  if(l == r) id[l] = cur;\n  else {\n    int mid = l + r >> 1;\n    build(cur << 1, l, mid);\n    build(cur << 1 | 1, mid + 1, r);\n  }\n}\nvoid insert(int cur, int l, int r, int x, int v) {\n  st[cur] += v;\n  if(l == r) return;\n  int mid = l + r >> 1;\n  if(x <= mid) insert(cur << 1, l, mid, x, v);\n  else insert(cur << 1 | 1, mid + 1, r, x, v);\n}\nint query(int cur, int l, int r, int a, int b) {\n  if(a <= l && b >= r) return st[cur];\n  int mid = l + r >> 1;\n  if(b <= mid) return query(cur << 1, l, mid, a, b);\n  if(a > mid) return query(cur << 1 | 1, mid + 1, r, a, b);\n  return query(cur << 1, l, mid, a, b) + query(cur << 1 | 1, mid + 1, r, a, b);\n}\ninline int query(int x) {\n  return st[id[x]];\n}\nint judge(int k, bool flag = false) {\n  memset(st, 0, sizeof(st));\n  memset(now, 0, sizeof(now));\n  int ans = 0;\n  for(int i = 1; i <= mx; i++) {\n    int sz = x[i].size();\n    if(sz < 2 * k) sta[i] = ed[i] = INF;\n    else sta[i] = k; ed[i] = sz - k;\n  }\n  for(int i = my; i >= 1; i--) {\n    int sz = y[i].size();\n    int x1 = k, x2 = sz - k;\n    if(sz >= 2 * k) {\n      x1 = y[i][x1 - 1], x2 = y[i][x2] - 1;\n      ans += query(1, 1, mx, x1, x2);\n    }\n    for(int j = 0; j < sz; j++) {\n      int nxtx = y[i][j];\n      if(nxtx >= x1 && nxtx <= x2 && query(nxtx) == 1) ans--;\n      now[nxtx]++;\n      if(now[nxtx] >= sta[nxtx] && now[nxtx] <= ed[nxtx]) {\n        if(query(nxtx) == 0) insert(1, 1, mx, nxtx, 1);\n      } else if(query(nxtx) == 1) insert(1, 1, mx, nxtx, -1);\n    }\n    if(flag && ans) return 1;\n  }\n  return ans;\n}\nint main() {\n  fread(BUF, 1, BUFMAX, stdin);\n  read(n);\n  for(int i = 1; i <= n; i++) {\n    read(u[i]); read(v[i]);\n    du[i] = u[i];\n    dv[i] = v[i];\n  }\n  sort(du + 1, du + n + 1);\n  sort(dv + 1, dv + n + 1);\n  int un = unique(du + 1, du + n + 1) - du - 1;\n  int vn = unique(dv + 1, dv + n + 1) - dv - 1;\n  for(int i = 1; i <= n; i++) {\n    u[i] = lower_bound(du + 1, du + un + 1, u[i]) - du;\n    v[i] = lower_bound(dv + 1, dv + vn + 1, v[i]) - dv;\n    x[u[i]].push_back(v[i]);\n    y[v[i]].push_back(u[i]);\n    mx = max(mx, u[i]);\n    my = max(my, v[i]);\n  }\n  for(int i = 1; i <= n; i++) if(y[i].size() >= 2)\n    sort(y[i].begin(), y[i].end());\n  build(1, 1, mx);\n  int l = 1, r = min(mx, my) / 3, ans1, ans2, num;\n  while(r - l > 1) {\n    int mid = l + r >> 1;\n    num = judge(mid, true);\n    if(num) l = mid;\n    else r = mid;\n  }\n  num = judge(r);\n  if(num) {ans1 = r; ans2 = num;}\n  else {ans1 = l; ans2 = judge(l);}\n  printf(\"%d\\n\", ans1);\n  printf(\"%d\\n\", ans2);\n  return 0;\n}\n```",
        "postTime": 1480642446,
        "uid": 11171,
        "name": "ddd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3415 \u3010\u796d\u575b\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u6392\u5e8f+\u7ebf\u6bb5\u6811+\u626b\u63cf\u7ebf\uff1b\n\n\u7c7b\u4f3c\u7684\u9898\u5728\u3010SDOI2009\u3011 \u8654\u8bda\u7684\u5893\u4e3b\u4ebahttps://www.luogu.org/problemnew/show/P2154\n\n\u548c\u4e0a\u9898\u76f8\u4f3c\uff0c\u6211\u4eec\u5148\u786e\u5b9a\uff1a\u6bcf\u4e2a\u6c34\u6676\u7684\u8d21\u732e**\u53ea\u53ef\u80fd\u5728\u5f53\u524d\u884c\u6216\u5f53\u524d\u5217**\uff1b\n\n\u540c\u6837\u5730\uff0c\u6211\u4eec\u9009\u62e9\u7528\u7ebf\u6bb5\u6811+\u626b\u63cf\u7ebf\u6d88\u6389\u4e00\u7ef4\uff1b\u6211\u4eec\u5206\u4e24\u6b65\u8d70\uff1b\n\n1. \u626b\u63cf\u7ebf\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u7ebf\u6bb5\u6811\u5728\u7ad6\u76f4\u65b9\u5411\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u3002\n2. \u5145\u5206\u5229\u7528\u6570\u636e\uff0c\u626b\u63cf\u7ebf\u4ece\u53f3\u626b\u56de\u6765\uff0c\u7ebf\u6bb5\u6811\u5728\u7ad6\u76f4\u65b9\u5411\uff0c\u7ef4\u62a4\u533a\u95f4\u548c\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u6b65\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u626b\u8fc7\u5f53\u524d\u70b9\u4e4b\u540e\u5f53\u524d\u884c\u5bf9ans\u7684\u8d21\u732e\uff1b\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u6b65\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u626b\u8fc7\u5f53\u524d\u70b9\u4e4b\u540e\u5f53\u524d\u884c\u5bf9sum\u7684\u8d21\u732e\u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6c42\u548c\u7684\u95ee\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6nlogn\uff1b\n\n\u6211\u4eec\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\u6216zkw\u7ebf\u6bb5\u6811\u6765\u5b9e\u73b0\uff1b\n\n\u4ee5\u4e0b\u662fzkw\u7ebf\u6bb5\u6811\u4ee3\u7801\u2193\uff08\u7801\u98ce\u975e\u5e38\u6e05\u5947\u4e0d\u8981\u5b66\u6211QwQ\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=(1<<17)-1;\n\nint n,x,y,ans,sum;\nint tree[MAXN<<1],cntl[MAXN],cntr[MAXN],cnto[MAXN],cntd[MAXN];\nstruct rpg{\n    int x,y;\n}p[MAXN];\n\ninline int read(){\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+(ch^'0'),ch=getchar();\n\treturn x;\n}\n\nbool cmp(rpg a,rpg b){\n    if(a.x==b.x) return a.y<b.y;\n    return a.x<b.x;\n}\n\nvoid init(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        x=read(),y=read();\n        p[i]=(rpg){x,y};\n        ++cntr[y];++cnto[x];\n    }sort(p+1,p+n+1,cmp);\n    return;\n}\n\nvoid solve1(){\n    for(int i=1;i<=n;++i){\n        --cntr[p[i].y];++cntl[p[i].y];\n        --cnto[p[i].x];++cntd[p[i].x];\n        tree[MAXN+p[i].y]=min(cntl[p[i].y],cntr[p[i].y]);\n        for(int j=MAXN+p[i].y>>1;j;j>>=1) tree[j]=max(tree[j<<1],tree[j<<1|1]);\n        if(p[i].x==p[i-1].x&&p[i].y-p[i-1].y>1){\n            int mxw=0;\n            int l=MAXN+p[i-1].y,r=MAXN+p[i].y;\n            while(l^r^1){\n                if(~l&1) mxw=max(mxw,tree[l^1]);\n                if(r&1) mxw=max(mxw,tree[r^1]);\n                l>>=1;r>>=1;\n            }mxw=min(mxw,min(cnto[p[i].x]+1,cntd[p[i].x]-1));\n            ans=max(ans,mxw);\n        }\n    }printf(\"%d\\n\",ans);\n    return;\n}\n\nvoid solve2(){\n    for(int i=n;i;--i){\n        --cntl[p[i].y];++cntr[p[i].y];\n        --cntd[p[i].x];++cnto[p[i].x];\n        int mxw=min(cntl[p[i].y],cntr[p[i].y]);\n        if(mxw>=ans){\n        \ttree[MAXN+p[i].y]=1;\n        \tfor(int j=MAXN+p[i].y>>1;j;j>>=1) tree[j]=tree[j<<1]+tree[j<<1|1];\n\t\t}else{\n            tree[MAXN+p[i].y]=0;\n            for(int j=MAXN+p[i].y>>1;j;j>>=1) tree[j]=tree[j<<1]+tree[j<<1|1];\n        }if(p[i+1].x==p[i].x&&p[i+1].y-p[i].y>1&&min(cntd[p[i].x]+1,cnto[p[i].x]-1)>=ans){\n            int l=MAXN+p[i].y,r=MAXN+p[i+1].y;\n            while(l^r^1){\n                if(~l&1) sum+=tree[l^1];\n                if(r&1) sum+=tree[r^1];\n                l>>=1;r>>=1;\n            }\n        }\n    }printf(\"%d\\n\",sum);\n    return;\n}\n\nint main(){\n    init();\n    solve1();\n    solve2();\n    return 0;\n}\n```",
        "postTime": 1522232726,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3415 \u3010\u796d\u575b\u3011"
    },
    {
        "content": "\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4e00\u884c\u4e00\u884c\u5904\u7406\uff0c\u7528\u7ebf\u6bb5\u6811\u8bb0\u5f55\u4e00\u884c\u4e2d\u4e0a\u65b9\u4e0b\u65b9\u6c34\u6676\u7684\u8f83\u5c0f\u503c\u7684\u533a\u95f4\u6700\u5927\u503c\uff0c\u6bcf\u4e00\u884c\u7ef4\u62a4$suml$\u548c$sumr$\u3002  \n\u5904\u7406\u5b8c\u4e00\u884c\u5c31\u7528\u8fd9\u4e00\u884c\u7684\u6c34\u6676\u66f4\u65b0\u7ebf\u6bb5\u6811\u3002  \n\u5982\u6b64\u53ef\u4ee5\u5f97\u51fa\u7b2c\u4e00\u4e2a\u7b54\u6848\u3002  \n\u7136\u540e\u518d\u6309\u4e0a\u8ff0\u626b\u4e00\u904d\uff0c\u7528\u7ebf\u6bb5\u6811\u8bb0\u5f55\u4e00\u884c\u91cc\u4e0a\u4e0b\u6c34\u6676\u5927\u4e8e$ans$\u7684\u4e2a\u6570\uff0c\u6bcf\u4e00\u884c\u626b\u63cf\u4e00\u904d\uff0c\u518d\u66f4\u65b0\u7ebf\u6bb5\u6811\u3002  \n\u590d\u6742\u5ea6$O(nlogn)$\uff0c\u53e6\u5916\u6709$O(nlog^2n)$\u7684\u4e8c\u5206+\u6811\u72b6\u6570\u7ec4\u89e3\u6cd5\uff0c\u5982\u679c\u5e38\u6570\u5199\u7684\u597d\u6bd4\u6211\u7684$nlogn$\u8dd1\u5f97\u5feb\u3002\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint read()\n{\n\tint x = 0, f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); }\n\twhile (isdigit(ch)) { x = x * 10 + ch - '0'; ch = getchar(); }\n\treturn x * f;\n}\nconst int MAX = 100033;\nint n, cntx, ans, sumans, cnt[MAX], cntup[MAX], a[MAX];\nstruct Point\n{\n\tint x, y;\n\tint xx;\n\tfriend bool operator < (Point a, Point b)\n\t{\n\t\treturn a.y == b.y ? a.x < b.x : a.y < b.y;\n\t}\n} t[MAX];\n#define ls x << 1\n#define rs x << 1 | 1\nstruct SegmentTree\n{\n\tint sum[MAX << 2], maxn[MAX << 2];\n\tvoid pushupsum(int x) { sum[x] = sum[ls] + sum[rs]; }\n\tvoid changesum(int x, int l, int r, int p, int c)\n\t{\n\t\tif (l == r)\n\t\t{\n\t\t\tsum[x] = c;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tif (p <= mid) changesum(ls, l, mid, p, c);\n\t\telse changesum(rs, mid + 1, r, p, c);\n\t\tpushupsum(x);\n\t}\n\tint querysum(int x, int l, int r, int L, int R)\n\t{\n\t\tif (L <= l && r <= R)\n\t\t\treturn sum[x];\n\t\tint mid = (l + r) >> 1, re = 0;\n\t\tif (L <= mid) re += querysum(ls, l, mid, L, R);\n\t\tif (R > mid) re += querysum(rs, mid + 1, r, L, R);\n\t\treturn re;\n\t}\n\tvoid pushupmax(int x) { maxn[x] = max(maxn[ls], maxn[rs]); }\n\tvoid changemax(int x, int l, int r, int p, int c)\n\t{\n\t\tif (l == r)\n\t\t{\n\t\t\tmaxn[x] = c;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tif (p <= mid) changemax(ls, l, mid, p, c);\n\t\telse changemax(rs, mid + 1, r, p, c);\n\t\tpushupmax(x);\n\t}\n\tint querymax(int x, int l, int r, int L, int R)\n\t{\n\t\tif (L <= l && r <= R)\n\t\t\treturn maxn[x];\n\t\tint mid = (l + r) >> 1, re = 0;\n\t\tif (L <= mid) re = max(re, querymax(ls, l, mid, L, R));\n\t\tif (R > mid) re = max(re, querymax(rs, mid + 1, r, L, R));\n\t\treturn re;\n\t}\n} sgt;\n#undef ls\n#undef rs\nint main()\n{\n\tn = read();\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tt[i].x = read();\n\t\tt[i].y = read();\n\t\ta[i] = t[i].x;\n\t}\n\tsort(t + 1, t + n + 1);\n\tsort(a + 1, a + n + 1);\n\tcntx = unique(a + 1, a + n + 1) - a - 1;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tt[i].xx = lower_bound(a + 1, a + cntx + 1, t[i].x) - a;\n\t\tcnt[t[i].xx]++;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint j = i;\n\t\twhile (t[j + 1].y == t[j].y) j++;\n\t\tint suml = 1, sumr = j - i;\n\t\tfor (int k = i; k < j; k++)\n\t\t{\n\t\t\tif (t[k + 1].xx > t[k].xx + 1 && min(suml, sumr) > ans)\n\t\t\t\tans = max(ans, min(sgt.querymax(1, 1, cntx, t[k].xx + 1, t[k + 1].xx - 1), min(suml, sumr)));\n\t\t\tsuml++, sumr--;\n\t\t}\n\t\tfor (int k = i; k <= j; k++)\n\t\t{\n\t\t\tint xx = t[k].xx;\n\t\t\tcntup[xx]++;\n\t\t\tsgt.changemax(1, 1, cntx, xx, min(cntup[xx], cnt[xx] - cntup[xx]));\n\t\t}\n\t\ti = j;\n\t}\n\tfor (int i = 1; i <= cntx; i++)\n\t\tcntup[i] = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint j = i;\n\t\twhile (t[j + 1].y == t[j].y) j++;\n\t\tint suml = 1, sumr = j - i;\n\t\tfor (int k = i; k < j; k++)\n\t\t{\n\t\t\tif (t[k + 1].xx > t[k].xx + 1 && min(suml, sumr) >= ans)\n\t\t\t\tsumans += sgt.querysum(1, 1, cntx, t[k].xx + 1, t[k + 1].xx - 1);\n\t\t\tsuml++, sumr--;\n\t\t}\n\t\tfor (int k = i; k <= j; k++)\n\t\t{\n\t\t\tint xx = t[k].xx;\n\t\t\tcntup[xx]++;\n\t\t\tif (min(cntup[xx], cnt[xx] - cntup[xx]) >= ans)\n\t\t\t\tsgt.changesum(1, 1, cntx, xx, 1);\n\t\t\telse sgt.changesum(1, 1, cntx, xx, 0);\n\t\t}\n\t\ti = j;\n\t}\n\tprintf(\"%d\\n%d\\n\", ans, sumans);\n\treturn 0;\n}\n```",
        "postTime": 1521904841,
        "uid": 37070,
        "name": "Ameyax",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3415 \u3010\u796d\u575b\u3011"
    }
]