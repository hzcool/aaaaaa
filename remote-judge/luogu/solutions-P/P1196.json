[
    {
        "content": "**\u89e3\u9898\u62a5\u544a**\n\n\u521d\u89c1\u8fd9\u9053\u9898\uff0c\u9996\u5148\u60f3\u5230\u7684\u65b9\u6cd5\u5f53\u7136\u662f\u76f4\u63a5\u6a21\u62df\uff0c\u6a21\u62df\u6bcf\u4e00\u6b21\u6307\u4ee4\u3002\u5f53\u7136\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u5c0f\u6570\u636e\u884c\u5f97\u901a\uff0c\u4f46\u5bf9\u4e8e\u6b64\u9898\u7684500,000\u4e2a\u6307\u4ee4\uff0c\u80af\u5b9a\u8d85\u65f6\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5c31\u8981\u60f3\u5176\u5b83\u65b9\u6cd5\u3002\n\n\u5148\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e9b\u6307\u4ee4\u7684\u7279\u70b9\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2aM\u6307\u4ee4\uff0c\u53ea\u53ef\u80fd\u4e00\u6b21\u79fb\u52a8\u6574\u4e2a\u961f\u5217\uff0c\u5e76\u4e14\u662f\u628a\u4e24\u4e2a\u961f\u5217\u9996\u5c3e\u76f8\u63a5\u5408\u5e76\u6210\u4e00\u4e2a\u961f\u5217\uff0c\u4e0d\u4f1a\u51fa\u73b0\u628a\u4e00\u4e2a\u961f\u5217\u5206\u5f00\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u4e00\u6b21\u64cd\u4f5c\u5408\u5e76\u4e24\u4e2a\u961f\u5217\u7684\u65b9\u6cd5\u3002\n\n\u518d\u6765\u770b\u4e0bC\u6307\u4ee4\uff1a\u5224\u65ad\u98de\u8239i\u548c\u98de\u8239j\u662f\u5426\u5728\u540c\u4e00\u5217\uff0c\u82e5\u5728\uff0c\u5219\u8f93\u51fa\u5b83\u4eec\u4e2d\u95f4\u9694\u4e86\u591a\u5c11\u8258\u98de\u8239\u3002\u6211\u4eec\u5148\u53ea\u770b\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u5217\uff0c\u7531\u4e8e\u6bcf\u5217\u4e00\u5f00\u59cb\u90fd\u53ea\u6709\u4e00\u8258\u98de\u8239\uff0c\u4e4b\u540e\u5f00\u59cb\u5408\u5e76\uff0c\u7ed3\u5408\u521a\u521a\u5206\u6790\u8fc7\u7684M\u6307\u4ee4\uff0c\u5f88\u5bb9\u6613\u5c31\u60f3\u5230\u8981\u7528\u5e76\u67e5\u96c6\u6765\u5b9e\u73b0\u3002\n\n\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4fa\uff0cfa[i]\u8868\u793a\u98de\u8239i\u7684\u7956\u5148\u8282\u70b9\uff0c\u5373\u5176\u6240\u5728\u5217\u7684\u961f\u5934\u3002\u518d\u5b9a\u4e49\u4e00\u4e2a\u7528\u4e8e\u67e5\u627e\u98de\u8239\u7956\u5148\u7684\u51fd\u6570find\uff0c\u5728\u6bcf\u6b21\u9012\u5f52\u627e\u7956\u5148\u7684\u540c\u65f6\u66f4\u65b0fa\uff0c\u538b\u7f29\u8def\u5f84\uff0c\u5927\u5927\u51cf\u5c0f\u4ee5\u540e\u7684\u65f6\u95f4\u6d88\u8017\u3002\u521d\u59cb\u65f6\u5bf9\u4e8e\u6bcf\u4e2afa[i]\u90fd\u8d4b\u503c\u4e3ai\uff0c\u5408\u5e76\u65f6\u5c31\u5148\u5206\u522b\u67e5\u627e\u98de\u8239i\u548c\u98de\u8239j\u7684\u7956\u5148\uff0c\u7136\u540e\u5c06\u98de\u8239i\u7684\u7956\u5148\u7684\u7956\u5148\uff08\u5373fa[\u98de\u8239i\u7684\u7956\u5148]\uff09\u8d4b\u503c\u4e3a\u98de\u8239j\u7684\u7956\u5148\u3002\u6700\u540e\u6bcf\u6b21\u5224\u65ad\u65f6\u53ea\u9700\u8981\u627e\u5230\u98de\u8239i\u548c\u98de\u8239j\u7684\u7956\u5148\uff0c\u5224\u65ad\u662f\u5426\u662f\u540c\u4e00\u8258\u98de\u8239\uff0c\u82e5\u662f\uff0c\u5219\u5728\u540c\u4e00\u5217\uff0c\u53cd\u4e4b\uff0c\u5219\u4e0d\u5728\u3002\n\n\u73b0\u5728\uff0c\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u5217\u4ee5\u53ca\u5982\u4f55\u4e00\u6b21\u64cd\u4f5c\u5408\u5e76\u4e24\u4e2a\u961f\u5217\u7684\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\uff0c\u4f46\u8fd8\u6709\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff1a\u5982\u4f55\u5728\u4ee5\u4e0a\u65b9\u6cd5\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u4e00\u6b65\u5f97\u5230\u4e24\u8258\u98de\u8239\u4e4b\u95f4\u7684\u98de\u8239\u6570\u91cf\u5462\uff1f\n\n\u6211\u4eec\u5148\u6765\u5206\u6790\u4e00\u4e0b\uff1a\u4e24\u8258\u98de\u8239\u4e4b\u95f4\u7684\u98de\u8239\u6570\u91cf\uff0c\u5176\u5b9e\u5c31\u662f\u8258\u98de\u8239\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\uff0c\u8fd9\u5c31\u8f6c\u6362\u4e3a\u4e86\u4e00\u4e2a\u6c42\u8ddd\u79bb\u7684\u95ee\u9898\u3002\u4e24\u8258\u98de\u8239\u90fd\u662f\u5728\u961f\u5217\u91cc\u7684\uff0c\u6700\u7b80\u5355\u7684\u6c42\u8ddd\u79bb\u7684\u65b9\u6cd5\u5c31\u662f\u524d\u540e\u4e00\u4e2a\u4e00\u4e2a\u67e5\u627e\uff0c\u4f46\u8fd9\u4e2a\u65b9\u6cd5\u592a\u4f4e\u6548\uff0c\u4f1a\u8d85\u65f6\u3002\u770b\u89c1\u591a\u6b21\u6c42\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u7684\u95ee\u9898\uff0c\u4fbf\u60f3\u5230\u7528\u524d\u7f00\u548c\u6765\u5b9e\u73b0\uff1a\u5f00\u4e00\u4e2afront\u6570\u7ec4\uff0cfront[i]\u8868\u793a\u98de\u8239i\u5230\u5176\u6240\u5728\u961f\u5217\u961f\u5934\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u98de\u8239i\u548c\u98de\u8239j\u4e4b\u95f4\u7684\u98de\u8239\u6570\u91cf\u5373\u4e3a\u5b83\u4eec\u5230\u961f\u5934\u7684\u8ddd\u79bb\u4e4b\u5dee\u51cf\u4e00\uff0c\u5c31\u662fabs(front[i]-front[j])-1\u3002\n\n\u89e3\u51b3\u4e86\u5982\u4f55\u9ad8\u6548\u5f97\u5230\u4e24\u8258\u98de\u8239\u4e4b\u95f4\u98de\u8239\u6570\u91cf\u7684\u95ee\u9898\uff0c\u4fbf\u53c8\u53d1\u73b0\u4e86\u65b0\u7684\u95ee\u9898\uff1a\u5982\u4f55\u5728\u4e4b\u524d\u65b9\u6cd5\u7684\u57fa\u7840\u4e0a\uff0c\u5f97\u5230\u6bcf\u8258\u98de\u8239\u548c\u961f\u5934\u7684\u8ddd\u79bb\u5462\uff1f\n\n\u6765\u5206\u6790\u4e00\u4e0b\u73b0\u5728\u5df2\u7ecf\u4f7f\u7528\u7684\u7b97\u6cd5\u2014\u2014\u5e76\u67e5\u96c6\uff0c\u5b83\u7684\u7279\u70b9\u5c31\u662f\u4e0d\u662f\u76f4\u63a5\u628a\u4e00\u4e2a\u961f\u5217\u91cc\u7684\u6240\u6709\u98de\u8239\u79fb\u5230\u53e6\u4e00\u4e2a\u961f\u5217\u540e\u9762\uff0c\u800c\u662f\u901a\u8fc7\u5c06\u8981\u79fb\u52a8\u7684\u961f\u5217\u7684\u961f\u5934\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u961f\u5217\u7684\u961f\u5934\u4e0a\uff0c\u4ece\u800c\u95f4\u63a5\u8fde\u63a5\u4e24\u4e2a\u961f\u5217\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u7b97\u6cd5\u7684\u57fa\u7840\u4e0a\uff0c\u6bcf\u6b21\u53ea\u80fd\u66f4\u65b0\u4e00\u5217\u4e2d\u4e00\u8258\u98de\u8239\u5230\u961f\u5934\u7684\u8ddd\u79bb\uff08\u5982\u679c\u66f4\u65b0\u591a\u8258\u7684\u8bdd\u5e76\u67e5\u96c6\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff09\u3002\n\n\u90a3\u4e48\uff0c\u8be5\u66f4\u65b0\u54ea\u8258\u98de\u8239\u5462\uff1f\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u4f7f\u7528\u5e76\u67e5\u96c6\u5408\u5e76\u4e24\u4e2a\u961f\u5217\u65f6\u53ea\u6539\u53d8\u961f\u5934\u7684\u7956\u5148\uff0c\u800c\u8fd9\u4e2a\u961f\u5217\u91cc\u5176\u5b83\u98de\u8239\u7684\u7956\u5148\u8fd8\u662f\u5b83\u539f\u6765\u7684\u961f\u5934\uff0c\u5e76\u6ca1\u6709\u66f4\u65b0\uff0c\u6240\u4ee5\u8fd9\u4e2a\u961f\u5217\u91cc\u7684\u5176\u5b83\u98de\u8239\u5728\u961f\u5217\u5408\u5e76\u4e4b\u540e\uff0c\u4ecd\u7136\u53ef\u4ee5\u627e\u5230\u5b83\u539f\u6765\u7684\u961f\u5934\uff0c\u4e5f\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u539f\u6765\u961f\u5934\u7684\u6570\u636e\uff0c\u56e0\u6b64\uff0c\u5728\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\uff0c\u53ea\u8981\u66f4\u65b0\u5408\u5e76\u524d\u961f\u5934\u5230\u76ee\u524d\u961f\u5934\u7684\u8ddd\u79bb\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e4b\u540e\u5176\u5b83\u7684\u5c31\u53ef\u4ee5\u5229\u7528\u5b83\u6765\u7b97\u51fa\u81ea\u5df1\u5230\u961f\u5934\u7684\u8ddd\u79bb\u3002\n\n\u7406\u6e05\u4e86\u601d\u8def\uff0c\u4f46\u53c8\u6709\u95ee\u9898\u51fa\u73b0\uff1a\u8be5\u600e\u6837\u66f4\u65b0\u5462\uff1f\u8be5\u600e\u4e48\u8ba1\u7b97\u5462\uff1f\n\n\u66f4\u65b0\u5f88\u5bb9\u6613\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\uff1a\u5bf9\u4e8e\u539f\u6765\u7684\u961f\u5934\uff0c\u5b83\u5230\u961f\u5934\u7684\u8ddd\u79bb\u4e3a0\uff0c\u5f53\u5c06\u5b83\u6240\u5728\u7684\u961f\u5217\u79fb\u5230\u53e6\u4e00\u4e2a\u961f\u5217\u540e\u9762\u65f6\uff0c\u5b83\u5230\u961f\u5934\u7684\u8ddd\u79bb\u5c31\u662f\u6392\u5728\u5b83\u524d\u9762\u7684\u98de\u8239\u6570\uff0c\u4e5f\u5c31\u662f\u5408\u5e76\u524d\u53e6\u4e00\u4e2a\u961f\u5217\u7684\u98de\u8239\u6570\u91cf\u3002\u56e0\u6b64\uff0c\u5c31\u77e5\u9053\u8be5\u600e\u6837\u5b9e\u73b0\u4e86\uff0c\u6211\u4eec\u518d\u5efa\u4e00\u4e2a\u6570\u7ec4num\uff0cnum[i]\u8868\u793a\u4ee5i\u4e3a\u961f\u5934\u7684\u961f\u5217\u7684\u98de\u8239\u6570\u91cf\uff0c\u521d\u59cb\u65f6\u90fd\u662f1\uff0c\u5728\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\uff0cfx\u4e3a\u5408\u5e76\u524d\u98de\u8239i\u7684\u961f\u5934\uff0cfy\u4e3a\u5408\u5e76\u524d\u98de\u8239j\u7684\u961f\u5934\uff0c\u6bcf\u6b21\u5408\u5e76\u65f6\uff0c\u5148\u66f4\u65b0front[fx]\uff0c\u5373\u7ed9\u5b83\u52a0\u4e0anum[fy]\uff0c\u7136\u540e\u5f00\u59cb\u5408\u5e76\uff0c\u5373fa[fx]=fy\uff0c\u6700\u540e\u66f4\u65b0num\uff0c num[fy]+= num[fx];num[fx]=0\u3002\n\n\u73b0\u5728\u5c31\u5dee\u6700\u540e\u4e00\u6b65\u4e86\uff1a\u5982\u4f55\u8ba1\u7b97\u6bcf\u4e2a\u98de\u8239\u5230\u961f\u5934\u7684\u8ddd\u79bb\u3002\u518d\u6765\u5206\u6790\u4e00\u4e0b\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u98de\u8239\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u5b83\u7684\u7956\u5148\uff08\u4e0d\u4e00\u5b9a\u662f\u961f\u5934\uff0c\u4f46\u4e00\u5b9a\u95f4\u63a5\u6216\u76f4\u63a5\u6307\u5411\u961f\u5934\uff09\uff0c\u8fd8\u77e5\u9053\u8ddd\u79bb\u5b83\u7956\u5148\u7684\u8ddd\u79bb\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u98de\u8239\uff0c\u5b83\u5230\u961f\u5934\u7684\u8ddd\u79bb\uff0c\u5c31\u7b49\u4e8e\u5b83\u5230\u5b83\u7956\u5148\u7684\u8ddd\u79bb\u52a0\u4e0a\u5b83\u7956\u5148\u5230\u961f\u5934\u7684\u8ddd\u79bb\uff0c\u800c\u5b83\u7684\u7956\u5148\u5230\u961f\u5934\u7684\u8ddd\u79bb\uff0c\u4e5f\u53ef\u4ee5\u53d8\u6210\u7c7b\u4f3c\u7684\u3002\u53ef\u4ee5\u9012\u5f52\u5b9e\u73b0\uff0c\u7531\u4e8e\u6bcf\u4e00\u6b21\u66f4\u65b0\u90fd\u8981\u7528\u5230\u5df2\u7ecf\u66f4\u65b0\u5b8c\u6210\u7684\u7956\u5148\u5230\u961f\u5934\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u8981\u5148\u9012\u5f52\u627e\u5230\u961f\u5934\uff0c\u7136\u540e\u5728\u56de\u6eaf\u7684\u65f6\u5019\u66f4\u65b0\uff08front[i]+=front[fa[i]]\uff09\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u548c\u67e5\u627e\u961f\u5934\u7684\u51fd\u6570\u653e\u5728\u4e00\u8d77\u3002\n\n\n\n\n\n\n\n\u6e90\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint fa[30001],front[30001],num[30001],x,y,i,j,n,T,ans;    //fa[i]\u8868\u793a\u98de\u8239i\u7684\u7956\u5148\n//front[i]\u8868\u793a\u98de\u8239i\u4e0e\u5176\u6240\u5728\u5217\u961f\u5934\u7684\u8ddd\u79bb\n                                        //num[i]\u8868\u793a\u7b2ci\u5217\u7684\u98de\u8239\u6570\u91cf \nchar ins;\nint find(int n){                                        //\u67e5\u627e\u7956\u5148\u7684\u51fd\u6570 \n    if(fa[n]==n)return fa[n];\n    int fn=find(fa[n]);                                    //\u5148\u9012\u5f52\u627e\u5230\u7956\u5148 \n    front[n]+=front[fa[n]];    //\u5728\u56de\u6eaf\u7684\u65f6\u5019\u66f4\u65b0front\uff08\u56e0\u4e3a\u66f4\u65b0\u65f6\u8981\u7528\u5230\u6b63\u786e\u7684front[\u7956\u5148]\uff0c\n                                    //\u6240\u4ee5\u53ea\u80fd\u5728\u56de\u6eaf\u7684\u65f6\u5019\u66f4\u65b0\uff09 \n    return fa[n]=fn;\n}\nint main(){\n    cin>>T;\n    for(i=1;i<=30000;++i){                                //\u5b9a\u521d\u503c \n        fa[i]=i;\n        front[i]=0;\n        num[i]=1;\n    }\n    while(T--){\n        cin>>ins>>x>>y;\n        int fx=find(x);                                    //fx\u4e3ax\u6240\u5728\u5217\u7684\u961f\u5934 \n        int fy=find(y);                                    //fy\u540c\u4e0a \n        if(ins=='M'){\n            front[fx]+=num[fy];        //\u66f4\u65b0front[x\u6240\u5728\u5217\u961f\u5934(\u73b0\u5728\u5728y\u6240\u5728\u961f\u5217\u540e\u9762)]\n//\u5373\u52a0\u4e0ay\u6240\u5728\u961f\u5217\u7684\u957f\u5ea6 \n            fa[fx]=fy;                                    //\u5c06fy\u8bbe\u4e3afx\u7684\u7956\u5148 \n            num[fy]+=num[fx];                            //\u66f4\u65b0\u4ee5fy\u4e3a\u961f\u5934\u961f\u5217\u7684\u957f\u5ea6 \n            num[fx]=0;                        //\u4ee5fx\u4e3a\u961f\u5934\u7684\u961f\u5217\u5df2\u4e0d\u5b58\u5728\uff0c\u66f4\u65b0 \n        }\n        if(ins=='C'){\n            if(fx!=fy)cout<<\"-1\"<<endl;            //\u82e5x\u548cy\u7684\u7956\u5148\u4e0d\u76f8\u540c\uff0c\u5219\u4e0d\u5728\u540c\u4e00\u5217 \nelse cout<<abs(front[x]-front[y])-1<<endl;    //\u5426\u5219\u5229\u7528x\u548cy\u79bb\u961f\u5934\u7684\u8ddd\u79bb\u7b97\n//\u51fa\u5b83\u4eec\u7684\u8ddd\u79bb \n        }\n    }\n    return 0;\n}\n```\n\n\n\n\n\n\n\n\u6d4b\u8bc4\u7ed3\u679c\n\nAccepted\n\n#    \u72b6\u6001                       \u8017\u65f6                       \u5185\u5b58\u5360\u7528\n\n#1     Accepted                   3ms                       748.0KiB\n\n#2     Accepted                   1ms                       640.0KiB\n\n#3     Accepted                   5ms                       744.0KiB\n\n#4     Accepted                   14ms                       708.0KiB\n\n#5     Accepted                   53ms                       640.0KiB\n\n#6     Accepted                   108ms                       640.0KiB\n\n#7     Accepted                   224ms                       640.0KiB\n\n#8     Accepted                   228ms                       640.0KiB\n\n#9     Accepted                   521ms                       720.0KiB\n\n#10     Accepted                   610ms                       756.0KiB\n\n",
        "postTime": 1493428484,
        "uid": 24518,
        "name": "\u5047\u88c5\u601d\u8003",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u5e26\u6743\u5e76\u67e5\u96c6\uff08\u6839\u642d\u79ef\u6728\u5f88\u50cf\uff09\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5206\u522b\u8bb0\u5f55\u6240\u5c5e\u94fe\u7684\u5934\u7ed3\u70b9\u3001\u8be5\u70b9\u5230\u5934\u7ed3\u70b9\u7684\u8ddd\u79bb\u4ee5\u53ca\u5b83\u6240\u5728\u96c6\u5408\u7684\u5927\u5c0f\u3002\n\n\u6bcf\u6b21\u5408\u5e76\u5c06y\u63a5\u5728x\u7684\u5c3e\u90e8\uff0c\u6539\u53d8y\u5934\u7684\u6743\u503c\u548c\u6240\u5c5e\u94fe\u7684\u5934\u7ed3\u70b9\uff0c\u540c\u65f6\u6539\u53d8x\u7684\u5c3e\u8282\u70b9\u3002\n\n\u6ce8\u610f\uff1a\u6bcf\u6b21\u67e5\u627e\u7684\u65f6\u5019\u4e5f\u8981\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684\u6743\u503c\u3002\n\n\u6bcf\u6b21\u67e5\u8be2\u65f6\u8ba1\u7b97\u4e24\u70b9\u7684\u6743\u503c\u5dee\u3002\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint f[30001],s[30001],b[30001];\nint find(int o)//\u67e5\u627e\n{\n    if(f[o]==o) return o;\n    int k=f[o];\n    f[o]=find(f[o]);//\u8def\u5f84\u538b\u7f29\n    s[o]+=s[k];//\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u5230\u6839\u7684\u8ddd\u79bb\n    b[o]=b[f[o]];//\u66f4\u65b0\u6240\u5728\u96c6\u5408\u5927\u5c0f\n    return f[o];\n}\nint main()\n{\n    int n;\n    cin>>n;\n    for(int i=1;i<=30000;i++) {f[i]=i;s[i]=0;b[i]=1;}\n    for(int i=1;i<=n;i++)\n    {\n        char ch;\n        int x,y,dx,dy;\n        cin>>ch>>x>>y;\n        if(ch=='M')\n        {\n            dx=find(x);//\u67e5\u627ex\u7684\u6839\n            dy=find(y);//\u67e5\u627ey\u7684\u6839\n            f[dx]=dy;//\u628ax\u653e\u5728y\u540e\u9762\n            s[dx]+=b[dy];//\u66f4\u65b0x\u7684\u6839\u5230\u65b0\u7684\u6839\u7684\u8ddd\u79bb\n            b[dx]+=b[dy];//\u66f4\u65b0\u96c6\u5408\u5927\u5c0f\n            b[dy]=b[dx];//\u66f4\u65b0\u96c6\u5408\u5927\u5c0f\n        }\n        if(ch=='C')\n        {\n            dx=find(x);\n            dy=find(y);\n            if(dx!=dy){cout<<-1<<endl;continue;}//\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\n            cout<<abs(s[x]-s[y])-1<<endl;//\u4e2d\u95f4\u6218\u8230\u7684\u6570\u91cf\u7b49\u4e8ex\u5230\u6839\u7684\u8ddd\u79bb\u51cfy\u5230\u6839\u7684\u8ddd\u79bb\u51cf\u4e00\u3002\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1514447827,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "##\u6240\u8c13\u5e26\u6743\u5e76\u67e5\u96c6##\n\n\u672c\u9898\u6240\u6c42\u7684\u4e0d\u6b62\u662f\u4e24\u4e2a\u7f16\u53f7\u4e4b\u95f4\u662f\u5426\u6709\u5173\u7cfb\uff0c\u8fd8\u8981\u6c42\u4e24\u4e2a\u7f16\u53f7\u4e4b\u95f4\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u8fd9\u5c31\u8981\u6c42\u6211\u4eec\u7ef4\u62a4\u591a\u4e2a\u6570\u7ec4\uff0cfa[]\u6570\u7ec4\u7ef4\u62a4\u4e24\u4e2a\u7f16\u53f7\u4e4b\u95f4\u7684\u8fde\u901a\u6027\uff0cdis[]\u7ef4\u62a4\u7f16\u53f7\u4e3ai\u7684\u6218\u8230\u5230fa[i]\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0cnum[]\u7ef4\u62a4\u7f16\u53f7\u4e3ai\u7684\u6218\u8230\u6240\u5728\u7684\u90a3\u4e00\u5217\u6709\u591a\u5c11\u6218\u8230\u3002\n\nfind\u51fd\u6570\n\n```cpp\nint find(int x){\n    if(x!=fa[x]){\n        int k=fa[x];\n        fa[x]=find(fa[x]);\n        dis[x]+=dis[k];\n        num[x]=num[fa[x]];\n    }\n    return fa[x];\n}\n```\n\u6bcf\u6b21find\u7684\u65f6\u5019\u90fd\u66f4\u65b0num\u6570\u7ec4\u4e0edis\u6570\u7ec4\n\n\u5408\u5e76\u51fd\u6570\n\n```cpp\nvoid merge(int x,int y){\n    int r1=find(x),r2=find(y);\n    if(r1!=r2){\n        fa[r1]=r2;\n                dis[r1]=dis[r2]+num[r2];\n        num[r2]+=num[r1];\n        num[r1]=num[r2];\n    }\n}\n```\n\u5408\u5e76\u65f6\u7531\u4e8e\u662f\u5c06i\u53f7\u6218\u8230\u6240\u5728\u7684\u90a3\u4e00\u5217\u5e76\u5230j\u53f7\u6240\u5728\u5217\u7684\u5c3e\u7aef\uff0c\u6240\u4ee5dis[r1]=dis[r2]+num[r2]\u3002\n\n\u8be2\u95ee\u51fd\u6570\n\n```cpp\nint query(int a,int b){\n    int r1=find(a),r2=find(b);\n    if(r1!=r2){\n        return -1;\n    }else {\n        return abs(dis[a]-dis[b])-1;\n    }\n}\n```\n\u6ce8\u610f\u8fd4\u56de\u65f6\u8981\u52a0\u4e00\n\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=30005;\nint read(){\n    int rv=0,fh=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-') fh=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        rv=(rv<<1)+(rv<<3)+c-'0';\n        c=getchar();\n    }\n    return rv*fh;\n}\nint fa[MAXN],dis[MAXN],t,num[MAXN];\nint find(int x){\n    if(x!=fa[x]){\n        int k=fa[x];\n        fa[x]=find(fa[x]);\n        dis[x]+=dis[k];\n        num[x]=num[fa[x]];\n    }\n    return fa[x];\n}\nvoid merge(int x,int y){\n    int r1=find(x),r2=find(y);\n    if(r1!=r2){\n        fa[r1]=r2;dis[r1]=dis[r2]+num[r2];\n        num[r2]+=num[r1];\n        num[r1]=num[r2];\n    }\n}\nint query(int a,int b){\n    int r1=find(a),r2=find(b);\n    if(r1!=r2){\n        return -1;\n    }else {\n        return abs(dis[a]-dis[b])-1;\n    }\n}\nint main(){\n    freopen(\"in.txt\",\"r\",stdin);\n    t=read();\n    for(int i=1;i<=MAXN;i++) {fa[i]=i;num[i]=1;}\n    for(int i=1;i<=t;i++){\n        char c;\n        scanf(\" %c \",&c);\n        int a=read(),b=read();\n        if(c=='M'){\n            merge(a,b);\n        }else {\n            printf(\"%d\\n\",query(a,b));\n        }\n    }\n    \n    fclose(stdin);\n    return 0;\n}\n```\n[\u5e7f\u544a](http://blog.csdn.net/qq\\_40280028)\n",
        "postTime": 1509370193,
        "uid": 45753,
        "name": "Mr_Wolfram",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u7f9e\u6da9\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u6211\u770b\u4e86\u9898\u89e3\u624d\u8fc7\u7684\u2026\u2026  \n\u597d\u53ed\uff0c\u8bf4\u8bf4\u6211\u7684\u601d\u60f3\n\n\u8fd9\u4e00\u9898\u660e\u663e\u8981\u7528\u5e76\u67e5\u96c6\uff0c\u56e0\u4e3a\u7ef4\u62a4\u961f\u5217\u63a5\u9f99\u7684\u65f6\u5019\u8981\u7528\u5230\u8bb0\u5f55\u7236\u4eb2\u7b49\u7b49\u64cd\u4f5c  \n\u800c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u8f93\u51fa\u7684\u65f6\u5019\u8981\u8f93\u51fai-j\u4e4b\u95f4\u7684\u6218\u8230\u548c  \n\u6240\u4ee5\u6211\u4eec\u5f15\u5165\u4e24\u4e2a\u6570\u7ec4\n\n- sum\u6570\u7ec4\u2014\u2014\u8bb0\u5f55\u672c\u5217\u603b\u957f\n- toh\u6570\u7ec4\u2014\u2014\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u5230\u961f\u9996\u7684\u957f\u5ea6\uff08\u56e0\u4e3a\u6211\u4eec\u538b\u7f29\u4e86\u8def\u5f84\uff0c\u6240\u4ee5\u8981\u5b58\u50a8\uff09\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u7740\u53bb\u6253\u7a0b\u5e8f\u4e86\u3002\n\nfind\u627e\u7238\u7238\u51fd\u6570\uff1a\n```cpp\nint find(int x)//\u627ex\u7684\u7238\u7238\n{\n\tif(fat[x]==x)//\u5982\u679c\u627e\u5230\u6839\u8282\u70b9\uff0c\u8fd9\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86\n\t\treturn x;\n\tint t1=fat[x],t2=find(fat[x]);//t1\u662f\u5b83\u7684\u7236\u4eb2\uff0ct2\u662f\u5b83\u7236\u4eb2\u7684\u7236\u4eb2\n    //\uff08\u7237\u7237\uff1f\u6ed1\u7a3d\uff09\n\tfat[x]=t2;//\u66f4\u65b0fat[x]\u7684\u503c\n\ttoh[x]+=toh[t1];\n    /*\u5212\u91cd\u70b9\uff01\u56e0\u4e3a\u6211\u4eec\u538b\u7f29\u4e86\u8def\u5f84\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u5230\u7236\u4eb2\u7684\u8ddd\u79bb\n    \u8981\u52a0\u4e0a\u65b0\u538b\u7f29\u7684\u8def\u5f84\u4e2d\u672a\u8ba1\u7b97\u7684\u70b9*/\n\treturn t2;//\u8fd4\u56de\u627e\u5230\u7684\u7236\u4eb2\n}\n```\nunionn\u5408\u5e76\u51fd\u6570\n```cpp\nvoid unionn(int r1,int r2)\n{\n\tint f1=find(r1),f2=find(r2);//\u76f4\u63a5\u628a\u6839\u8282\u70b9\u63d2\u4e0a\uff0c\u4e0d\u591a\u8bf4\n\tfat[f2]=f1;//\u8bb0\u5f55\u7236\u4eb2\n\ttoh[f2]=sum[f1];//\u8fd9\u91cc\u5230\u4ee5\u4e0b\u5168\u662f\u91cd\u70b9\uff01\n    //\u539f\u961f\u5217\u957f\u5ea6\u5373\u662f\u6b64\u8282\u70b9\u5230\u7236\u4eb2\u7684\u8ddd\u79bb\n\tsum[f1]+=sum[f2];//f1\u961f\u5217\u540e\u653e\u4e86sum[f2]\u4e2a\u6218\u8230\n\tsum[f2]=0;//\u539f\u961f\u5217\u6e05\u7a7a\n}\n```\n\u4e0b\u9762\u662fAC code:\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint sum[30001],fat[30001],toh[30001],t,ans;\nint find(int x)\n{\n\tif(fat[x]==x)\n\t\treturn x;\n\tint t1=fat[x],t2=find(fat[x]);\n\tfat[x]=t2;\n\ttoh[x]+=toh[t1];\n\treturn t2;\n}\nvoid unionn(int r1,int r2)\n{\n\tint f1=find(r1),f2=find(r2);\n\tfat[f2]=f1;\n\ttoh[f2]=sum[f1];\n\tsum[f1]+=sum[f2];\n\tsum[f2]=0;\n}\nint abs(int op)\n{\n\treturn op<0?-op:op;\n}\nint main()\n{\n\tchar ds;\n\tint u,v;\n\tfor(int i=1;i<=30000;i++)\n\t{\n\t\tfat[i]=i;\n\t\tsum[i]=1;\n\t}\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tcin>>ds;scanf(\"%d %d\",&u,&v);\n\t\tif(ds=='M')\n\t\t{\n\t\t\tunionn(v,u);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(find(u)!=find(v))\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"%d\\n\",abs(toh[u]-toh[v])-1);\n\t\t}\n\t}\n}\n```\n\nEND.\u849f\u84bb%%%dalao\uff01",
        "postTime": 1548768853,
        "uid": 112395,
        "name": "Martin_MHT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "~~\u8bf4\u5b9e\u8bdd\u6211AC\u7684\u65f6\u5019\u90fd\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u81ea\u5df1AC\u4e86~~\n\n\u6211\u7684\u505a\u6cd5\u5176\u5b9e\u7c7b\u4f3c\u4e8e\u7ebf\u6bb5\u6811\u7684\u61d2\u6807\u8bb0\n\nmerge\u64cd\u4f5c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u628aa\u5934\u4e0a\u585e\u8fdbb\uff0c\u90a3\u4e48a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u6392\u540d\u5e94\u5f53\u52a0\u4e0ab\u7684\u957f\u5ea6\n\n\u4e00\u6b21\u6027\u628a\u6240\u6709\u5143\u7d20\u52a0\u5b8c\u592a\u6162\uff0c\u53ef\u4ee5\u5728\u66f4\u65b0\u7956\u5148\u7684\u65f6\u5019\u4e00\u8d77\u505a\n\n\u53ef\u4ee5\u7406\u89e3\u4e3a\u66f4\u65b0\u4e00\u6b21\u7956\u5148\u5c31\u52a0\u4e0a\u7956\u5148\u5230\u7956\u5148\u7684\u7956\u5148\u7684\u957f\u5ea6\uff0c\u5728\u4ee3\u7801\u4e2d\u4f53\u73b0\u4e3a\u5148\u9012\u5f52\u627e\u7956\u5148\uff0c\u66f4\u65b0\u7956\u5148\u7684\u7956\u5148\u548c\u7956\u5148\u7684\u6392\u540d\uff0c\u518d\u66f4\u65b0\u81ea\u5df1\u7684\u6392\u540d\n\n\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n\u5e94\u8be5\u4e0d\u4f1a\u6bd4\u697c\u4e0b\u6162\uff0c\u6700\u540e\u4e24\u4e2a\u70b9\u90fd\u662f243ms\uff0c\u603b\u65f6\u95f4664ms\n\n[AC\u8bb0\u5f55](https://www.luogu.org/record/23434811)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 30000 + 5;\nint _opt;\nchar _typ;\nint f[MAXN], sum[MAXN], Size[MAXN];\n//sum\u8868\u793a\u6392\u540d\uff0c\u5373\u5305\u62ec\u81ea\u5df1\u5728\u5185\u524d\u9762\u6709\u591a\u5c11\u4eba\n//Size\u8868\u793a\u96c6\u5408\u5927\u5c0f\uff0c\u5373\u81ea\u5df1\u6700\u540e\u4e00\u6b21\u505a\u7956\u5148\u65f6\u96c6\u5408\u5185\u6709\u591a\u5c11\u4eba\n\nint get(int k)\n{\n\tif (f[k] == k) return k;\n\tint fake = f[k];  //\u5f53\u524d\u7956\u5148\n\tf[k] = get(f[k]);  //\u627e\u7956\u5148\n\tsum[k] += sum[fake] - 1;  //\u66f4\u65b0\u6392\u540d\n\treturn f[k];\n}\n\nvoid merge(int a, int b)\n{\n\tint f1 = get(a), f2 = get(b);\n\tsum[f1] = Size[f2] + 1;   //\u66f4\u65b0\u7956\u5148\u6392\u540d\uff0c\u5728get\u7684\u65f6\u5019pushdown\u5230f1\u96c6\u5408\u5185\u7684\u5143\u7d20\n\tSize[f2] += Size[f1];  //\u66f4\u65b0\u7956\u5148\u4e3af2\u7684\u96c6\u5408\u7684\u5927\u5c0f\n\tf[f1] = f2;  //f2\uff1awsnbb\n}\n\nint main()\n{\n\tfor (int i = 1; i <= MAXN; i++) f[i] = i, sum[i] = 1, Size[i] = 1;\n\tcin >> _opt;\n\tint a, b;\n\twhile (_opt--)\n\t{\n\t\tcin >> _typ >> a >> b;\n\t\tif (_typ == 'M') merge(a, b);\n\t\telse\n\t\t{\n\t\t\tif (get(a) != get(b)) cout << \"-1\\n\";\n\t\t\telse cout << abs(sum[a] - sum[b]) - 1 << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u4ee3\u7801\u5e94\u8be5\u7b97\u662f\u6bd4\u8f83\u77ed\u7684\u4e86\uff0c\u5e0c\u671b\u5bf9\u4f60\u6709\u4e9b\u5e2e\u52a9",
        "postTime": 1567050295,
        "uid": 51229,
        "name": "fanhy",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u3010\u53c2\u8003\u8d44\u6599\u3011\n\n\u4e09\u4f53\u667a\u5b50\u7684\u535a\u5ba2 - P1196 [NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\uff1ahttps://www.luogu.org/blog/huangweixian123/p1196-noi2002-yin-he-ying-xiong-zhuan-shuo\n\n\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u516c\u5143\u4e94\u516b\u25cb\u4e00\u5e74\uff0c\u5730\u7403\u5c45\u6c11\u8fc1\u81f3\u91d1\u725b\u5ea7\u03b1\u7b2c\u4e8c\u884c\u661f\uff0c\u5728\u90a3\u91cc\u53d1\u8868\u94f6\u6cb3\u8054\u90a6\u521b\u7acb\u5ba3\u8a00\uff0c\u540c\u5e74\u6539\u5143\u4e3a\u5b87\u5b99\u5386\u5143\u5e74\uff0c\u5e76\u5f00\u59cb\u5411\u94f6\u6cb3\u7cfb\u6df1\u5904\u62d3\u5c55\u3002\n\n\u5b87\u5b99\u5386\u4e03\u4e5d\u4e5d\u5e74\uff0c\u94f6\u6cb3\u7cfb\u7684\u4e24\u5927\u519b\u4e8b\u96c6\u56e2\u5728\u5df4\u7c73\u5229\u6069\u661f\u57df\u7206\u53d1\u6218\u4e89\u3002\u6cf0\u5c71\u538b\u9876\u96c6\u56e2\u6d3e\u5b87\u5b99\u8230\u961f\u53f8\u4ee4\u83b1\u56e0\u54c8\u7279\u7387\u9886\u5341\u4e07\u4f59\u8258\u6218\u8230\u51fa\u5f81\uff0c\u6c14\u541e\u5c71\u6cb3\u96c6\u56e2\u70b9\u540d\u5c06\u6768\u5a01\u5229\u7ec4\u7ec7\u9ebe\u4e0b\u4e09\u4e07\u8258\u6218\u8230\u8fce\u654c\u3002\n\n\u6768\u5a01\u5229\u64c5\u957f\u6392\u5175\u5e03\u9635\uff0c\u5de7\u5999\u8fd0\u7528\u5404\u79cd\u6218\u672f\u5c61\u6b21\u4ee5\u5c11\u80dc\u591a\uff0c\u96be\u514d\u6063\u751f\u9a84\u6c14\u3002\u5728\u8fd9\u6b21\u51b3\u6218\u4e2d\uff0c\u4ed6\u5c06\u5df4\u7c73\u5229\u6069\u661f\u57df\u6218\u573a\u5212\u5206\u6210$30000$\u5217\uff0c\u6bcf\u5217\u4f9d\u6b21\u7f16\u53f7\u4e3a$1, 2, \u2026,30000$\u3002\u4e4b\u540e\uff0c\u4ed6\u628a\u81ea\u5df1\u7684\u6218\u8230\u4e5f\u4f9d\u6b21\u7f16\u53f7\u4e3a$1, 2, \u2026, 30000$\uff0c\u8ba9\u7b2c$i$\u53f7\u6218\u8230\u5904\u4e8e\u7b2c$i$\u5217$(i = 1, 2, \u2026, 30000)$\uff0c\u5f62\u6210\u201c\u4e00\u5b57\u957f\u86c7\u9635\u201d\uff0c\u8bf1\u654c\u6df1\u5165\u3002\u8fd9\u662f\u521d\u59cb\u9635\u5f62\u3002\u5f53\u8fdb\u72af\u4e4b\u654c\u5230\u8fbe\u65f6\uff0c\u6768\u5a01\u5229\u4f1a\u591a\u6b21\u53d1\u5e03\u5408\u5e76\u6307\u4ee4\uff0c\u5c06\u5927\u90e8\u5206\u6218\u8230\u96c6\u4e2d\u5728\u67d0\u51e0\u5217\u4e0a\uff0c\u5b9e\u65bd\u5bc6\u96c6\u653b\u51fb\u3002\u5408\u5e76\u6307\u4ee4\u4e3a``M i j``\uff0c\u542b\u4e49\u4e3a\u7b2c$i$\u53f7\u6218\u8230\u6240\u5728\u7684\u6574\u4e2a\u6218\u8230\u961f\u5217\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff08\u5934\u5728\u524d\u5c3e\u5728\u540e\uff09\u63a5\u81f3\u7b2c$j$\u53f7\u6218\u8230\u6240\u5728\u7684\u6218\u8230\u961f\u5217\u7684\u5c3e\u90e8\u3002\u663e\u7136\u6218\u8230\u961f\u5217\u662f\u7531\u5904\u4e8e\u540c\u4e00\u5217\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6218\u8230\u7ec4\u6210\u7684\u3002\u5408\u5e76\u6307\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u4f1a\u4f7f\u961f\u5217\u589e\n\n\u5927\u3002 \u7136\u800c\uff0c\u8001\u8c0b\u6df1\u7b97\u7684\u83b1\u56e0\u54c8\u7279\u65e9\u5df2\u5728\u6218\u7565\u4e0a\u53d6\u5f97\u4e86\u4e3b\u52a8\u3002\u5728\u4ea4\u6218\u4e2d\uff0c\u4ed6\u53ef\u4ee5\u901a\u8fc7\u5e9e\u5927\u7684\u60c5\u62a5\u7f51\u7edc\u968f\u65f6\u76d1\u542c\u6768\u5a01\u5229\u7684\u8230\u961f\u8c03\u52a8\u6307\u4ee4\u3002\n\n\u5728\u6768\u5a01\u5229\u53d1\u5e03\u6307\u4ee4\u8c03\u52a8\u8230\u961f\u7684\u540c\u65f6\uff0c\u83b1\u56e0\u54c8\u7279\u4e3a\u4e86\u53ca\u65f6\u4e86\u89e3\u5f53\u524d\u6768\u5a01\u5229\u7684\u6218\u8230\u5206\u5e03\u60c5\u51b5\uff0c\u4e5f\u4f1a\u53d1\u51fa\u4e00\u4e9b\u8be2\u95ee\u6307\u4ee4\uff1a``C i j``\u3002\u8be5\u6307\u4ee4\u610f\u601d\u662f\uff0c\u8be2\u95ee\u7535\u8111\uff0c\u6768\u5a01\u5229\u7684\u7b2c$i$\u53f7\u6218\u8230\u4e0e\u7b2c$j$\u53f7\u6218\u8230\u5f53\u524d\u662f\u5426\u5728\u540c\u4e00\u5217\u4e2d\uff0c\u5982\u679c\u5728\u540c\u4e00\u5217\u4e2d\uff0c\u90a3\u4e48\u5b83\u4eec\u4e4b\u95f4\u5e03\u7f6e\u6709\u591a\u5c11\u6218\u8230\u3002\n\n\u4f5c\u4e3a\u4e00\u4e2a\u8d44\u6df1\u7684\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u5458\uff0c\u4f60\u88ab\u8981\u6c42\u7f16\u5199\u7a0b\u5e8f\u5206\u6790\u6768\u5a01\u5229\u7684\u6307\u4ee4\uff0c\u4ee5\u53ca\u56de\u7b54\u83b1\u56e0\u54c8\u7279\u7684\u8be2\u95ee\u3002\n\n\u6700\u7ec8\u7684\u51b3\u6218\u5df2\u7ecf\u5c55\u5f00\uff0c\u94f6\u6cb3\u7684\u5386\u53f2\u53c8\u7ffb\u8fc7\u4e86\u4e00\u9875\u2026\u2026\n\n\u3010\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u3011\n\n- \u8f93\u5165\u683c\u5f0f\n\n\u8f93\u5165\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u6709\u4e00\u4e2a\u6574\u6570$T$\uff08$1 \\leq T \\leq 500,000$\uff09\uff0c\u8868\u793a\u603b\u5171\u6709$T$\u6761\u6307\u4ee4\u3002\n\n\u4ee5\u4e0b\u6709$T$\u884c\uff0c\u6bcf\u884c\u6709\u4e00\u6761\u6307\u4ee4\u3002\u6307\u4ee4\u6709\u4e24\u79cd\u683c\u5f0f\uff1a\n\n1. ``M i j`` \uff1a$i$\u548c$j$\u662f\u4e24\u4e2a\u6574\u6570\uff08$1 \\leq i , j \\leq 30000$\uff09\uff0c\u8868\u793a\u6307\u4ee4\u6d89\u53ca\u7684\u6218\u8230\u7f16\u53f7\u3002\u8be5\u6307\u4ee4\u662f\u83b1\u56e0\u54c8\u7279\u7a83\u542c\u5230\u7684\u6768\u5a01\u5229\u53d1\u5e03\u7684\u8230\u961f\u8c03\u52a8\u6307\u4ee4\uff0c\u5e76\u4e14\u4fdd\u8bc1\u7b2ci\u53f7\u6218\u8230\u4e0e\u7b2cj\u53f7\u6218\u8230\u4e0d\u5728\u540c\u4e00\u5217\u3002\n\n2. ``C i j`` \uff1a$i$\u548c$j$\u662f\u4e24\u4e2a\u6574\u6570\uff08$1 \\leq i , j \\leq 30000$\uff09\uff0c\u8868\u793a\u6307\u4ee4\u6d89\u53ca\u7684\u6218\u8230\u7f16\u53f7\u3002\u8be5\u6307\u4ee4\u662f\u83b1\u56e0\u54c8\u7279\u53d1\u5e03\u7684\u8be2\u95ee\u6307\u4ee4\u3002\n\n- \u8f93\u51fa\u683c\u5f0f\n\n\u4f60\u7684\u7a0b\u5e8f\u5e94\u5f53\u4f9d\u6b21\u5bf9\u8f93\u5165\u7684\u6bcf\u4e00\u6761\u6307\u4ee4\u8fdb\u884c\u5206\u6790\u548c\u5904\u7406\uff1a\n\n\u5982\u679c\u662f\u6768\u5a01\u5229\u53d1\u5e03\u7684\u8230\u961f\u8c03\u52a8\u6307\u4ee4\uff0c\u5219\u8868\u793a\u8230\u961f\u6392\u5217\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f60\u7684\u7a0b\u5e8f\u8981\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\uff0c\u4f46\u662f\u4e0d\u8981\u8f93\u51fa\u4efb\u4f55\u4fe1\u606f\uff1b\n\n\u5982\u679c\u662f\u83b1\u56e0\u54c8\u7279\u53d1\u5e03\u7684\u8be2\u95ee\u6307\u4ee4\uff0c\u4f60\u7684\u7a0b\u5e8f\u8981\u8f93\u51fa\u4e00\u884c\uff0c\u4ec5\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5728\u540c\u4e00\u5217\u4e0a\uff0c\u7b2c$i$ \u53f7\u6218\u8230\u4e0e\u7b2c$j$ \u53f7\u6218\u8230\u4e4b\u95f4\u5e03\u7f6e\u7684\u6218\u8230\u6570\u76ee\u3002\u5982\u679c\u7b2ci \u53f7\u6218\u8230\u4e0e\u7b2cj\u53f7\u6218\u8230\u5f53\u524d\u4e0d\u5728\u540c\u4e00\u5217\u4e0a\uff0c\u5219\u8f93\u51fa``-1``\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u3011\n\n- \u8f93\u5165\u6837\u4f8b\n```\n4\nM 2 3\nC 1 2\nM 2 4\nC 4 2\n```\n- \u8f93\u51fa\u6837\u4f8b\n```\n-1\n1\n```\n\n\u3010\u6837\u4f8b\u8bf4\u660e\u3011\n\n\u6218\u8230\u4f4d\u7f6e\u56fe\uff1a\u8868\u683c\u4e2d\u963f\u62c9\u4f2f\u6570\u5b57\u8868\u793a\u6218\u8230\u7f16\u53f7\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/53.png)\n\n\u3010\u9898\u76ee\u5927\u610f\u3011\n\n\u6709$30000$\u6761\u961f\u5217\uff0c\u603b\u5171$n$\u6b21\u64cd\u4f5c\uff0c\u5206M\u64cd\u4f5c\u4e0eC\u64cd\u4f5c\uff0cM\u64cd\u4f5c\u662f\u628a\u5f53\u524d\u7b2c$i$\u8258\u98de\u8239\u6240\u5728\u7684\u6574\u6761\u961f\u5217\u79fb\u5230\u7b2c$j$\u8258\u98de\u8239\u8258\u6240\u5728\u7684\u961f\u5217\u7684\u6700\u540e\u9762\uff0cC\u64cd\u4f5c\u5219\u662f\u8be2\u95ee\u7b2c$i$\u8258\u98de\u8239\u4e0e\u7b2c$j$\u8258\u98de\u8239\u662f\u5426\u5728\u540c\u4e00\u6761\u961f\u5217\uff0c\u5982\u679c\u5728\u5219\u8f93\u51fa\u7b2c$i$\u8258\u98de\u8239\u4e0e\u7b2c$j$\u8258\u98de\u8239\u4e4b\u95f4\u7684\u98de\u8239\u6570\uff0c\u4e0d\u5305\u62ec$i$\u548c$j$\uff0c**\u9898\u76ee\u4e0d\u4fdd\u8bc1$j$\u5728$i$\u540e\u9762**\uff0c\u5426\u5219\u5c31\u8f93\u51fa``-1``\u3002\n\n\u3010\u9898\u89e3\u3011\n\n\u6211\u4f1a\u5e76\u67e5\u96c6\uff01\n\n\u6211\u4eec\u8003\u8651\u7528\u5e76\u67e5\u96c6\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u3002\u7531\u4e8eM\u64cd\u4f5c\u8f83\u4e3a\u7b80\u5355\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u5bf9M\u64cd\u4f5c\u5165\u624b\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4``size[]``\u6765\u5b58\u50a8\u6bcf\u4e2a\u961f\u5217\u5f53\u524d\u6240\u6709\u7684\u98de\u8239\u7684\u6570\u91cf\uff0c\u5728\u8fd9\u91cc\u6211\u7528``size[i]``\u6765\u8868\u793a\u7b2c$i$\u6761\u961f\u5217\u6709\u591a\u5c11\u8258\u98de\u8239\uff0c\u5e76\u4e14\u7528``d[i]``\u6765\u8868\u793a$i$\u53f7\u98de\u8239\u7684\u524d\u9762\u6709\u591a\u5c11\u8258\u98de\u8239\u6240\u4ee5\u5f53\u8fdb\u884cM\u64cd\u4f5c\u65f6\u5c31\u5c06\u70b9$x$\u548c\u70b9$y$\u5408\u5e76\uff0c\u7136\u540e\u6539\u4e00\u4e0b\u4e24\u4e2a\u6570\u7ec4\u7684\u503c\u5373\u53ef~\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\u3002\n```\nif(t[1]=='M')\n{\n    f[tx]=ty;\n    d[tx]=size[ty];\n    size[ty]+=size[tx];\n    size[tx]=0;\n}\n```\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u5904\u7406\u7684\u5c31\u662f``find()``\u51fd\u6570\uff0c\u4e00\u822c\u6211\u4eec\u5199\u5e76\u67e5\u96c6\u7684\u8bdd\u51fd\u6570\u662f\u8fd9\u6837\u5b50\u7684\uff1a\n```\nif(x==f[x])\n{\n    return x;\n}\nelse\n{\n    return f[x]=find(f[x]);\n}\n```\n\u4f46\u662f\u5728\u672c\u9898\u4e2d\uff0c``find()``\u51fd\u6570\u5374\u662f\u8fd9\u6837\u5b50\u7684\uff1a\n```\nint find(int x)\n{\n    if(f[x]==x)\n    {\n        return x;\n    }\n    int t1=f[x];\n    int t2=find(f[x]);\n    f[x]=t2;\n    d[x]+=d[t1];\n    return t2;\n}\n```\n\u5728\u4e0a\u9762\u7684\u4e00\u6bb5\u4ee3\u7801\u4e2d\uff0c$t1$\u8868\u793a\u7684\u662f\u70b9$x$\u539f\u6765\u7684\u8001\u5927\uff0c$t2$\u8868\u793a\u7684\u662f\u70b9$x$\u73b0\u5728\u7684\u8001\u5927\uff0c\u56e0\u6b64\u5c06``f[x]=t2``\uff08\u66f4\u65b0$x$\u70b9\u7684\u7956\u5b97\uff09\u4e14\u5c06``d[x]+=d[t1]``\uff08\u589e\u52a0\u70b9$x$\u7684\u524d\u9762\u7684\u8239\u7684\u4e2a\u6570\uff09\u3002\n\nC\u64cd\u4f5c\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u7684\u8001\u5927\u4e0d\u4e00\u6837\u5c31\u8f93\u51fa``-1``\uff0c\u5426\u5219\u5c31\u8f93\u51fa``|d[x]-d[y]|-1``\u5373\u53ef\uff0c\u4e0d\u61c2\u7684\u53ef\u4ee5\u81ea\u5df1\u53bb\u7b97\u4e00\u4e0b\u3002\n\n\u4e0b\u9762\u4e0aAC\u4ee3\u7801~\n```\n#include <cstdio>\n#include <cstdlib>\nint size[1000001],f[1000001],d[1000001];\nint inf=30001;\nint find(int x)\n{\n    if(f[x]==x)\n    {\n        return x;\n    }\n    int t1=f[x];\n    int t2=find(f[x]);\n    f[x]=t2;\n    d[x]+=d[t1];\n    return t2;\n}\nint main()\n{\n    int n=0;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=inf;i++)\n    {\n        f[i]=i;\n        size[i]=1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        char t[5];\n        int x=0,y=0;\n        scanf(\"%s %d %d\",t+1,&x,&y);\n        int tx=find(x),ty=find(y);\n        if(t[1]=='M')\n        {\n            f[tx]=ty;\n            d[tx]=size[ty];\n            size[ty]+=size[tx];\n            size[tx]=0;\n        }\n        else if(t[1]=='C')\n        {\n            if(tx!=ty)\n            {\n                printf(\"-1\\n\");\n            }\n            else\n            {\n                printf(\"%d\\n\",abs(d[x]-d[y])-1);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1523780336,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u4e2a NOI \u7684\u9898\u76ee\u80af\u5b9a\u9700\u8981\u4e00\u4e9b\u9ad8\u7aef\u7b97\u6cd5\n\n\u4f46\u662f\u6839\u672c\u4e0d\u7528\u5e76\u67e5\u96c6\u8fd9\u79cd\u9ad8\u7aef\u7b97\u6cd5\n\n\u53ea\u8981\u4e00\u4e2a\u529f\u80fd\u4e0d\u5168\u7684\u975e\u65cbtreap\u5c31\u53ef\u4ee5AC\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<ctime>\n#include<cstdlib>\n#define ft(a,b,c) for(int (a)=(b);(a)<=(c);(a)++)\n#define fd(a,b,c) for(int (a)=(b);(a)>=(c);(a)--)\nusing namespace std;\nconst int N=600001;\nnamespace fhq{\n    int l[N],r[N],rnd[N],siz[N],fa[N],num[N],cnt;\n    int ffa(int x){\n        if(!fa[x]) return x;\n        else return ffa(fa[x]);\n    }\n    int nn(int x){\n        rnd[++cnt]=rand();\n        siz[cnt]=1;\n        num[cnt]=x;\n        return cnt;\n    }\n    void ud(int x){\n        siz[x]=siz[l[x]]+siz[r[x]]+1;\n        if(l[x])fa[l[x]]=x;\n        if(r[x])fa[r[x]]=x;\n    }\n    int merg(int a,int b){\n        if(!a||!b) return a+b;\n        if(rnd[a]<rnd[b]){\n            r[a]=merg(r[a],b);\n            ud(a);\n            return a;\n        }else{\n            l[b]=merg(a,l[b]);\n       \t\tud(b);\n       \t\treturn b;\n        }\n    }\n    int rank(int x){\n        int tt=x;\n        int tmp=siz[l[tt]]+1;\n        while(fa[tt]){\n            if(r[fa[tt]]==tt) {\n                tmp+=rank(fa[tt]);\n                break;\n            }\n            else tt=fa[tt]; \n        }\n        return tmp;\n    }\n}\nint n=300000,m,x,y;\n\nint main(){\n    srand(time(NULL));\n    scanf(\"%d\",&m);\n    ft(i,1,n) fhq::nn(i);\n    ft(i,1,m){\n        char ch=getchar();\n        while(ch!='M'&&ch!='C') ch=getchar();\n        scanf(\"%d%d\",&x,&y);\n        if(ch=='M'){\n            int fx=fhq::ffa(x),fy=fhq::ffa(y);\n            if(fx!=fy) fhq::merg(fx,fy);\n        }\n        if(ch=='C'){\n            int fx=fhq::ffa(x),fy=fhq::ffa(y);\n            if(fx!=fy) printf(\"-1\\n\");\n            else{\n                cout<<abs(fhq::rank(y)-fhq::rank(x))-1<<endl;\n            }\n        }\n    } \n}\n```",
        "postTime": 1541507817,
        "uid": 20503,
        "name": "bianyaoyang0419",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\t  **\u5514\uff0c\u770b\u597d\u591a\u9898\u89e3\u7684find()\u90fd\u6ca1\u8be6\u7ec6\u8bb2\uff0c\u770b\u4e86\u4e00\u4e0b\u5348\u90fd\u6ca1\u61c2\uff0c\u53ea\u597d\u81ea\u5df1\u5f04\u61c2\u6765\u5199\u53d1\u9898\u89e3\uff0c\u4e3e\u4f8b\u8bb2\u8bb2\u5e76\u67e5\u96c6\u7684\u5e26\u6743\u7ee7\u627f\u90e8\u5206**\u256e\uff08\u256f\uff3f\u2570\uff09\u256d\n\n        \u5f53\u73b0\u5728\u6267\u884c find()\u65f6\uff0c\u6574\u4e2a\u5e76\u67e5\u96c6\u6df1\u5ea6\u4ee5 3\u4e3a\u4f8b\uff1adep=1\u4e3a\u65b0\u6307\u5411\u7684\u70b9\uff0cdep=2\u4e3a\u539f\u7956\u5148\uff0cdep=3\u4e3a\u539f\u672c\u7684\u5404\u4e2a\u540e\u4ee3\u3002\uff08find\u7684\u70b9\u5728\u7b2c\u4e09\u6392\uff09 \n\t\n        \u4e14\u73b0\u5728\u53ea\u6709 dep=1\u548c dep=2\u7684 rank\u6b63\u786e\uff0c\u56e0\u4e3a dep=1\u7684\u70b9 rank\u4e3a 0\uff0cdep=2\u521a\u4fee\u6539\u8fc7\u5e76\u4e14\u5b83\u7684\u503c\u5c31\u662f\u88ab\u52a0\u957f\u7684\u8230\u961f\u7684\u539f\u957f\u3002 \n\tfind(i): \u539f rank[i]\u5b58\u7684\u662f (rank[\u539f\u7956\u5148]==0\u65f6\u5b83\u7684rank)==(\u5b83\u4e0e\u539f\u7956\u5148\u7684\u5dee\u503c)\uff0c\u7531 rank[fa[i]]\u5df2\u6b63\u786e\uff0crank[i]\u7ef4\u62a4\u5b8c\u6bd5\uff0c\u5b83\u7684 dep\u53d8\u6210 2\uff0c\u6307\u5411\u65b0\u70b9\u3002\n\t\n        \u6b64\u65f6 dep>3\u7684\u70b9\u90fd\u6682\u65f6\u4e0d\u4f1a\u88ab\u66f4\u65b0\uff08\u6682\u65f6\u4e0d\u7528\u5b83\uff09\uff0c\u4f46\u4ed6\u4eec\u7684\u7236\u4eb2\u8fd8\u662f\u539f\u7956\u5148\uff0c\u4ed6\u4eec\u7684 rank\u8fd8\u662f\u4e0e\u539f\u7956\u5148\u7684\u5dee\u503c\uff0c\u9700\u8981\u7528\u5230\u65f6\u518d\u7ef4\u62a4\u51fa\u6765\u5c31\u884c\u4e86\u3002\n        \n####         \u603b\u7ed3\uff1adep=1\u7684\u70b9 rank=0\uff0cdep=2\u7684\u70b9 rank\u5df2\u6b63\u786e\uff0cdep>=3\u90fd\u7ef4\u62a4\u7684\u662f\u4e0e\u4e0a\u4e00\u7ea7\u7684\u5dee\u503c\u3002\n\n\u5269\u4e0b\u7684\u81ea\u5df1\u6a21\u62df\u4e00\u4e0b\u5427\uff0c\u5e94\u8be5\u5f88\u5feb\u5c31\u61c2\u4e86\u3002(>\u25bd<)\n\nps\uff1a\u5982\u679c\u4f60\u89c9\u5f97\u6211\u7684\u7801\u98ce\u4e0d\u597d\uff0c\u90a3\u4e48\n### \t~~\u6211\u4e0d\u8981\u4f60\u89c9\u5f97\uff0c\u6211\u8981\u6211\u89c9\u5f97\u3002<(\u02c9^\u02c9)>~~\n\u55ef\uff0c\u4e00\u4e2a\u6708\u5185\u53ef\u4ee5\u79c1\u804a\u95ee\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e4+5;\nint fa[N],sz[N],rank[N];\nint T,i,j,n=3e4;\nchar op;\nint find(int x){\n\tif(x==fa[x])return x;\n\tint root=find(fa[x]);\n\trank[x]+=rank[fa[x]]; \n\treturn fa[x]=root;\n}\nint main(){\n\tfor(int i=1;i<=n;i++){\n\t\tfa[i]=i;sz[i]=1;rank[i]=0;\n\t}\n\tcin>>T;\n\twhile(T--){\n\t\tcin>>op>>i>>j;\n\t\tint x=find(i);\n\t\tint y=find(j);\n\t\tif(op=='M'){\n\t\t\tfa[x]=y;\n\t\t\trank[x]=sz[y];//x\u4e3a\u8230\u9996\uff0crank\u4e00\u5b9a\u662f 0 \n\t\t\tsz[y]+=sz[x];\n\t\t\tsz[x]=0;\n\t\t}\n\t\telse{\n\t\t\tif(x!=y)cout<<-1<<endl;\n\t\t\telse{\n\t\t\t\tcout<<abs(rank[i]-rank[j])-1<<endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571915780,
        "uid": 149062,
        "name": "\u5e72\u7269\u56fd\u5927\u7687\u5e1d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "It's widely known that\uff1a\u5e76\u67e5\u96c6\u53ef\u4ee5\u4f7f\u70b9\u5e76\u8d77\u6765\uff0c\u5f62\u6210\u8fde\u901a\u5757\uff1bso \u662f\u56fe\u5c31\u53ef\u4ee5\u5e26\u4e0a\u8fb9\u6743\uff1b\n\n\u8fd9\u9053\u9898\u76f8\u5f53\u4e8e\u628a\u6bcf\u8258\u540c\u5217\u7684\u6218\u8230\u95f4\u8fde\u4e0a\u6743\u503c\u4e3a1\u7684\u8fb9\uff1b\n\nfather\u51fd\u6570\n\n\n```cpp\n    int father(int v){\n        int i,j=v;\n        while(x[v].to!=v){\n            v=x[v].to;\n            if(v!=x[v].to){\n              int a=father(v);\n              x[j].dis+=x[v].dis;\n              x[j].num=x[v].num;\n            }\n        }\n        while(x[j].to!=j){\n            i=j;\n            j=x[j].to;\n            x[i].to=v;\n        }\n        return v;\n    }\n```\n\u6700\u91cd\u8981\u7684\u662f\u7b2c\u4e00\u4e2awhile\u91cc\u7684if()\uff1b\n\n\n```cpp\n    if(v!=x[v].to){\n              int a=father(v);\n              x[j].dis+=x[v].dis;\n              x[j].num=x[v].num;\n            }\n```\n\u5b9e\u73b0\u4e86\u9012\u5f52\uff1b\u5728find father\u8fc7\u7a0b\u4e2d\uff0c\u6700\u597d\u662f\u80fd\u591f\u8df3\u8fc7\u4e00\u4e2a\u5df2\u8def\u5f84\u538b\u7f29\u7684\u70b9\uff0c\u76f4\u8fbefather\uff1b\n\u9047\u5230\u6ca1\u6709\u8def\u5f84\u538b\u7f29\u7684\uff0c\u5c31\u7528\u67e5\u8be5\u70b9\u7684father\uff0c\u4f7f\u6539\u70b9\u88ab\u8def\u538b\u5c31\u597d\u4e86\uff1b\n\n\u5176\u5b9e\u5c31\u662f\u8fd9\u6837\uff1b\n\n\u6e90\u4ee3\u7801\u89c1\u4e0b\uff1a\n\n\n```cpp\n    #include<bits/stdc++.h>\n    using namespace std;\n    struct ship{int to;int dis;int num;};\n    int vis[30005];ship x[30005];\n    int father(int v){\n        int i,j=v;\n        while(x[v].to!=v){\n            v=x[v].to;\n            if(v!=x[v].to){\n              int a=father(v);\n              x[j].dis+=x[v].dis;\n              x[j].num=x[v].num;\n            }\n        }\n        while(x[j].to!=j){\n            i=j;\n            j=x[j].to;\n            x[i].to=v;\n        }\n        return v;\n    }\n    void modify(int i,int j){\n        int a=father(i); int b=father(j);\n        if(a!=b){\n           x[a].to=b;\n           x[a].dis+=vis[x[b].num];\n           vis[x[b].num]+=vis[x[a].num];\n           vis[x[a].num]=0;\n           x[a].num=x[b].num;\n        }\n    }\n    int query(int i,int j){\n        int a=father(i);  int b=father(j);\n        if(a!=b) return -1;\n        return abs(x[i].dis-x[j].dis)-1;\n    }\n    int main()\n    {\n        int T,q,p; char c[2];\n        for(int i=1;i<=30005;++i) {\n          x[i].to=i;  x[i].dis=0;  vis[i]=1;  x[i].num=i;\n        }\n        scanf(\"%d\",&T);\n        for(int i=1;i<=T;++i){\n            scanf(\" %s \",c);\n            scanf(\"%d%d\",&q,&p);\n            if(c[0]=='M') modify(q,p);\n            else printf(\"%d\\n\",query(q,p));\n        }\n        return 0;\n    }\n```\n\n",
        "postTime": 1515827509,
        "uid": 64488,
        "name": "huangdu233",
        "ccfLevel": 0,
        "title": "\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\uff0c\u5e76\u67e5\u96c6\u7684\u6df1\u5165\u7406\u89e3"
    },
    {
        "content": "> LCT\u53ef\u4ee5\u628a\u4e00\u5207\u4f18\u7f8e\u7684\u505a\u6cd5\u53d8\u6210\u66b4\u529b       -by Imakf\n\n\u4f17\u6240\u5468\u77e5\u8fd9\u662f\u4e00\u9053\u5e76\u67e5\u96c6\u597d\u9898\uff0c\u601d\u8def\u975e\u5e38\u5999\u5999\uff0c\u4f46\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u7528\u66f4\u9ad8\u7ea7\u7684\u6570\u636e\u7ed3\u6784LCT\uff08\u5927\u6750\u5c0f\u7528\uff09\u6765\u5b9e\u73b0\u94fe\u7684\u5408\u5e76\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u6570\u7ec4$head[i],tail[i]$ \u8868\u793a $i$ \u6240\u5728\u7684\u94fe\u7684\u5934\u5c3e\u662f\u4ec0\u4e48\uff0c\u7136\u540e\u9700\u8981\u4e00\u4e2a\u5e76\u67e5\u96c6\u8bb0\u5f55\u5408\u5e76\uff0c\u7528LCT\u52a8\u6001\u7ef4\u62a4\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u70b9\u6570\u91cf\u5c31\u884c\u4e86\n\n------\n\n\u6211\u4eec\u7528$Find(x)$\u8868\u793a\u5e76\u67e5\u96c6\u5bfb\u627e\u7956\u5148\u7684\u64cd\u4f5c\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u5408\u5e76$(u,v)$\u6211\u4eec\u5148\u627e\u5230 $u$ \u7684\u5934 $Head=head[find(u)]$ \uff0c\u5408\u5e76\u5230 $v$ \u7684\u5c3e $Tail = tail[find(v)]$\uff0c\u7136\u540e\u66f4\u65b0\u65b0\u7684\u957f\u94fe\u7684 $head[],tail[]$ \u5373\u53ef\uff0c\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\n\n```cpp\nvoid link(int x ,int y){\n\tif(find(x) != find(y)){\n\t\tmakeroot(x);\n\t\tfa[x] = y;\n\t\tFA[find(x)] = find(y);\n\t}\n}\nint Head = head[find(u)] ,Tail = tail[find(v)];\nhead[find(u)] = head[find(v)];\t//\u66f4\u65b0\u5934\ntail[find(v)] = tail[find(u)];\t//\u66f4\u65b0\u5c3e\nlink(Head ,Tail);\t//link\u662fLCT\u7684\u8fde\u8fb9\u64cd\u4f5c\n```\n\n\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2 $(u ,v)$ \u6211\u4eec\u76f4\u63a5split\u51fa\u6765\u8fd9\u6761\u94fe\uff0c\u67e5\u8be2\u4e00\u4e0b\u70b9\u6743\u548c$S$\uff0c\u7b54\u6848\u5c31\u662f$S-2$\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n\n#define rg register\n#define il inline\n#define MX (30000 + 5)\n\nint read(){\n\trg char k = getchar();\n\twhile(k < '0' || k > '9')\tk = getchar();\n\tint x = 0;\n\twhile(k >= '0' && k <= '9'){\n\t\tx = x * 10 + k - '0';\n\t\tk = getchar();\n\t}return x;\n}\n\nint FA[MX];\nint find(int x){return x == FA[x] ? x : FA[x] = find(FA[x]);}\n\nvoid swap(int &a ,int &b){int t = a; a = b; b = t;}\nnamespace LCT{\n\t#define lch(x) ch[x][0]\n\t#define rch(x) ch[x][1]\n\tint ch[MX][2] ,fa[MX] ,S[MX] ,mark[MX];\n\til bool get(int x){return x == ch[fa[x]][1];}\n\til bool Nroot(int x){return x == ch[fa[x]][0] || x == ch[fa[x]][1];}\n\tvoid change(int x){\t//\u7ffb\u8f6c\u5de6\u53f3\u513f\u5b50\n\t\tswap(lch(x) ,rch(x));\n\t\tmark[x] ^= 1;\n\t}\n\tvoid pushdown(int x){\n\t\tif(mark[x]){\t//\u4e0b\u7a7f\u6807\u8bb0\n\t\t\tif(lch(x))\tchange(lch(x));\n\t\t\tif(rch(x))\tchange(rch(x));\n\t\t\tmark[x] = 0;\n\t\t}\n\t}\n\tvoid pushup(int x){\n\t\tS[x] = 1;\n\t\tif(lch(x))\tS[x] += S[lch(x)];\n\t\tif(rch(x))\tS[x] += S[rch(x)];\n\t}\n\tvoid rotate(int x){\n\t\tint f = fa[x] ,gf = fa[f] ,which = get(x) ,W = ch[x][which ^ 1];\n\t\tif(Nroot(f))\tch[gf][ch[gf][1] == f] = x;\n\t\tch[x][which ^ 1] = f;\n\t\tch[f][which] = W;\n\t\tif(W)\tfa[W] = f;\n\t\tfa[f] = x;\n\t\tfa[x] = gf;\n\t\tpushup(f);\n\t}\n\tint stack[MX] ,dep;\n\tvoid splay(int x){\n\t\tint f = x;\n\t\tstack[++dep] = f;\n\t\twhile(Nroot(f))\tstack[++dep] = (f = fa[f]);\n\t\twhile(dep)\tpushdown(stack[dep--]);\n\t\twhile(Nroot(x)){\n\t\t\tf = fa[x];\n\t\t\tif(Nroot(f))\trotate(get(x) == get(f) ? f : x);\n\t\t\trotate(x);\n\t\t}pushup(x);\n\t}\n\tvoid access(int x){\n\t\tfor(rg int y = 0 ; x ; x = fa[y = x])\n\t\t\tsplay(x) ,ch[x][1] = y ,pushup(x);\n\t}\n\tvoid makeroot(int x){\n\t\taccess(x);\n\t\tsplay(x);\n\t\tchange(x);\n\t}\n\tvoid split(int x ,int y){\n\t\tmakeroot(x);\n\t\taccess(y);\n\t\tsplay(y);\n\t}\n\tvoid link(int x ,int y){\n\t\tif(find(x) != find(y)){\n\t\t\tmakeroot(x);\n\t\t\tfa[x] = y;\n\t\t\tFA[find(x)] = find(y);\n\t\t}\n\t}\n}using namespace LCT;\n\nint head[MX] ,tail[MX];\nint main(){\n\tfor(rg int i = 1 ; i <= 30000 ; ++i)\n\t\tFA[i] = i ,head[i] = i ,tail[i] = i;\n\tint T;\n\tscanf(\"%d\" ,&T);\n\tchar op[3];\n\tfor(rg int i = 1 ,u ,v ; i <= T ; ++i){\n\t\tscanf(\"%s\" ,op);\n\t\tu = read() ,v = read();\n\t\tswitch(op[0]){\n\t\t\tcase 'M':{\n\t\t\t\tint Head = head[find(u)] ,Tail = tail[find(v)];\n\t\t\t\thead[find(u)] = head[find(v)];\n\t\t\t\ttail[find(v)] = tail[find(u)];\n\t\t\t\tlink(Head ,Tail);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'C':{\n\t\t\t\tif(find(u) != find(v))\tputs(\"-1 \");\n\t\t\t\telse{\n\t\t\t\t\tsplit(u ,v);\n\t\t\t\t\tprintf(\"%d \\n\" ,S[v] - 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}return 0;\n}\n```\n",
        "postTime": 1554815462,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011LCT"
    },
    {
        "content": "\u7b2c\u4e00\u53cd\u5e94\u5c31\u662fSplay\n\n\u679c\u7136\u5728\u9898\u89e3\u91cc\u627e\u5230\u4e86\u540c\u597d[\u63e1\u624b]\n\n\u63d0\u4f9b\u4e00\u4e2a\u6307\u9488\u7248\u7684\n\n\u7ef4\u62a4n\u68f5Splay\uff0c\u6bcf\u68f5Splay\u8868\u793a\u6bcf\u4e00\u5217\uff0c\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u4fbf\u662f\u4e00\u4e2a\u5e8f\u5217\n\n\u5206\u6790\u6bcf\u4e2a\u64cd\u4f5c\n\n1.Move x y\n\n\u9996\u5148\u627e\u5230x,y\u6240\u5728\u7684Splay\u7684\u6839r1,r2\n\n\u82e5r1==r2\u5c31\u4e0d\u7528\u4e86\n\n\u5426\u5219\u627e\u5230r2\u6700\u53f3\u7684\u4f4d\u7f6e\u628ar1\u63a5\u4e0a\n\n2.Check x y\n\n\u540c\u6837\u627e\u5230x,y\u6240\u5728\u7684Splay\u7684\u6839r1,r2\n\n\u82e5r1!=r2\u8fd4\u56de-1\n\n\u5426\u5219\u8fd4\u56dex\u548cy\u5728\u8fd9\u68f5Splay\u7684\u6392\u540d\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c-1\n```cpp\n#include<cmath>\n#include<cstdio>\nusing namespace std;\nconst int N=30001;\nint n;\nstruct tree\n{\n\tint size;\n\ttree *fa,*son[2];\n\tinline tree()\n\t{\n\t\tsize=1;\n\t\tfa=son[0]=son[1]=NULL;\n\t}\n\tinline void pushup()\n\t{\n\t\tsize=1;\n\t\tif (son[0])size+=son[0]->size;\n\t\tif (son[1])size+=son[1]->size;\n\t}\n}*pos[N];  //pos[x]\u8868\u793aid\u4e3ax\u7684\u6570\u4ee3\u8868\u7684\u8282\u70b9\u5730\u5740\ninline bool relation(tree *p) //\u83b7\u53d6\u7236\u5b50\u5173\u7cfb p\u662f\u5b83\u7236\u4eb2\u7684\u5de6\u8fd8\u662f\u53f3\u513f\u5b50\n{\n\tif (p->fa)return p->fa->son[1]==p;\n}\ninline void connect(tree *&p,tree *&fa,bool which) //\u5efa\u7acb\u7236\u5b50\u5173\u7cfb p\u7684\u7236\u4eb2\u662ffa fa\u7684which\u513f\u5b50\u662fp\n{\n\tif (p)p->fa=fa;\n\tif (fa)fa->son[which]=p,fa->pushup();\n}\ninline tree *get_root(tree *p) //\u83b7\u53d6p\u6240\u5728Splay\u7684\u6839\n{\n\ttree *k=p;\n\twhile (k->fa)k=k->fa;\n\treturn k;\n}\ninline void rotate(tree *&p)\n{\n\ttree *fa=p->fa;\n\tbool dir=relation(p);\n\tconnect(p,fa->fa,relation(fa));\n\tconnect(p->son[dir^1],fa,dir);\n\tconnect(fa,p,dir^1);\n\tfa->pushup();p->pushup();\n}\ninline void splay(tree *&p)\n{\n\tfor (tree *fa;fa=p->fa;rotate(p))\n\t\tif (fa->fa)\n\t\t\trotate(relation(p)==relation(fa)?fa:p);\n}\ninline int get_rank(int x) //\u83b7\u53d6x\u5728\u5b83\u6240\u5728\u7684Splay\u4e2d\u7684\u6392\u540d\n{\n\ttree *p=pos[x];\n\tsplay(p);\n\treturn p->son[0]?p->son[0]->size+1:1;\n}\ninline void init(int id)\n{\n\tpos[id]=new tree;\n}\ninline void Move(int x,int y)\n{\n\ttree *r1=get_root(pos[x]),*r2=get_root(pos[y]);\n\tif (r1==r2)return;\n\ttree *p=r2;\n\twhile (p->son[1])p=p->son[1];\n\tconnect(r1,p,1);splay(r1);\n}\ninline int Check(int x,int y)\n{\n\ttree *r1=get_root(pos[x]),*r2=get_root(pos[y]);\n\tif (r1!=r2)return -1;\n\treturn abs(get_rank(x)-get_rank(y))-1;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<N;i++)init(i); //\u7531\u4e8e\u9898\u76ee\u5e76\u6ca1\u6709\u7ed9\u603b\u5171\u6709\u591a\u5c11\u5217 \u5e72\u8106\u5efa30000\u68f5\n\twhile (n--)\n\t{\n\t\tchar opt;int x,y;\n\t\tscanf(\" %c%d%d\",&opt,&x,&y);\n\t\tif (opt=='M')Move(x,y);\n\t\telse printf(\"%d\\n\",Check(x,y));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1535267727,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "## splay\n\n\u8fd9\u9898\u8ddfP2342\u6709\u70b9\u50cf\u3002\n\n\u5e26\u6743\u5e76\u67e5\u96c6\u662f\u5565\uff1fsplay\u624d\u662f\u4e07\u80fd\u7684\u3002\n\n\u6309\u7167\u9898\u610f\u6a21\u62df\u5373\u53ef\u3002\n\n\u7528splay\u7ef4\u62a4\u4e00\u4e2a\u53ef\u5206\u88c2/\u5408\u5e76\u7684\u5e8f\u5217\u3002merge(a, b)\u610f\u4e3a\u628ab\u63a5\u5728a\u540e\u9762\u3002\u90a3\u4e48\u627e\u5230a\u6240\u5728\u7684splay\u4e2d\u7684\u6700\u53f3\u7ed3\u70b9\u7136\u540e\u65cb\u5230\u6839\uff0c\u7136\u540e\u628ab\u6240\u5728\u7684splay\u63a5\u5230a\u7684\u53f3\u513f\u5b50\u4e0a\u3002\n\nquery(a, b)\u628aa\u65cb\u5230\u6839\uff0c\u7136\u540e\u628ab\u65cb\u5230a\u7684\u4e0b\u9762\u3002\u5982\u679cb\u662fa\u7684\u5de6\u513f\u5b50\u5219\u8f93\u51fab\u53f3\u5b50\u7684\u5927\u5c0f\uff0c\u5426\u5219\u8f93\u51fab\u7684\u5de6\u5b50\u7684\u5927\u5c0f\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define maxn 400000\n\nint fa[maxn]={0}; int ch[maxn][2]={0}; int size[maxn];\ninline void update(int x) {\n    size[x]=size[ch[x][0]]+size[ch[x][1]]+1;\n}\ninline void rotate(int x) {\n    if (!x||!fa[x]) return ;\n    int f=fa[x]; int l=ch[f][1]==x;\n    ch[f][l]=ch[x][l^1];\n    fa[ch[x][l^1]]=f;\n    fa[x]=fa[f];\n    ch[fa[f]][ch[fa[f]][1]==f]=x;\n    ch[x][l^1]=f;\n    fa[f]=x;\n    update(f);\n    update(x);\n} inline void splay(int x, int aim=0) {\n    for (int y; (y=fa[x])!=aim; rotate(x)) {\n        if (fa[y]!=aim)\n            rotate((ch[y][0]==x)==(ch[fa[y]][0]==y)?y:x);\n    }\n} void merge(int x, int y) {\n    while (fa[x]) x=fa[x];\n    while (ch[x][1]) x=ch[x][1];\n    splay(x);\n    while (fa[y]) y=fa[y];\n    fa[y]=x; ch[x][1]=y;\n    update(x);\n} int query(int a, int b) {\n    int x=a; int y=b;\n    while (fa[x]) x=fa[x];\n    while (fa[y]) y=fa[y];\n    if (x!=y) return -1;\n    splay(a); splay(b, a);\n    return size[ch[b][ch[a][0]==b]];\n} int main() {\n    int q; char opt[10];int a, b;\n    scanf(\"%d\", &q);\n    for (int i = 1; i <= q; ++i) {\n        scanf(\"%s\", &opt);\n        if (opt[0]=='C') {\n            scanf(\"%d %d\", &a, &b);\n            printf(\"%d\\n\", query(a,b));\n        }if (opt[0]=='M') {\n            scanf(\"%d %d\", &a, &b);\n            merge(a, b);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1525590131,
        "uid": 48355,
        "name": "EternalAlexander",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u4e0d\u7528\u8bf4\u80af\u5b9a\u7528\u5e76\u67e5\u96c6\uff0c\u8c8c\u4f3c\u5c31\u662f\u4e0d\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u7684\u65e0\u8111\u6a21\u62df\uff1f\u4e0d\u5bf9\uff0c500000\u4e2a\u64cd\u4f5c\uff0c30000\u8258\u8239\uff0c\u4e0d\u8d85\u65f6\u624d\u602a\uff01\n\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\u4e00\u8def\u5f84\u538b\u7f29\u6218\u8230\u987a\u5e8f\u5c31\u88ab\u6539\u53d8\uff0c\u600e\u4e48\u624d\u80fd\u5728\u8def\u5f84\u538b\u7f29\u7684\u540c\u65f6\u968f\u65f6\u5f97\u77e5\u540c\u4e00\u8230\u961f\u4e2d\u4e24\u8258\u6218\u8230\u7684\u4f4d\u7f6e\uff1f\n\n\n\u8f93\u5165\u662f\u5408\u5e76\u4e0e\u8be2\u95ee\u4e24\u8258\u6218\u8230\u4e4b\u95f4\u7684\u201c\u8ddd\u79bb\u201d\uff0c\u9047\u5230\u95ee\u9898\u662f\u8def\u5f84\u538b\u7f29\u540e\u201c\u8ddd\u79bb\u201d\uff08\u95f4\u9694\u6218\u8230\u6570\u91cf\uff09\u53d8\u4e86\uff0c\u4e0d\u538b\u7f29\u592a\u6162\u4e86\uff0c\u90a3\u6211\u4eec\u4e0d\u5c31\u53ef\u4ee5\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b58\u4e0b\u9700\u8981\u7684\u201c\u8ddd\u79bb\u201d\u4e86\u5417\uff1f\u8fd9\u4e2a\u6570\u7ec4\u5b58\u7684\u8ddd\u79bb\u5c31\u662f\u5728\u8def\u5f84\u538b\u7f29\u65f6\u53d8\u5316\u4e86\u7684\u90a3\u4e2a\uff1a\u7b2ci\u8258\u5230\u7b2cfa[i]\u8258\u4e4b\u95f4\u7684\u6218\u8230\u6570\u91cf\uff0c\u6570\u7ec4\u540d\u5c31\u547d\u540d\u6210front\u5427\uff0c\u56e0\u4e3a\u8def\u5f84\u538b\u7f29\u5168\u90e8\u5b8c\u6210\uff0c\u5373\u540c\u4e00\u8230\u961f\u4e2d\u6240\u6709\u5143\u7d20\u7684fa[i]\u90fd\u7b49\u4e8e\u8fd9\u4e2a\u8230\u961f\u7b2c\u4e00\u8258\u6218\u8230\u65f6\uff0cfront[i]=\u7b2ci\u8258\u6218\u8230\u524d\u65b9\u6709\u591a\u5c11\u6218\u8230\uff08\u8fd9\u4e48\u641e\u5c31\u50cf\u524d\u7f00\u548c\uff0c\u8def\u5f84\u538b\u7f29\u65f6\u53ef\u4ee5\u4e00\u5c42\u4e00\u5c42\u5730\u8fb9\u538b\u7f29\u8fb9\u4fee\u6b63\u4e0b\u53bb\uff09\u3002\n\n\n\u6613\u77e5\u5728\u8fd8\u672a\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u65f6\u5bf9\u4e8e\u540c\u4e00\u8230\u961f\u975e\u7b2c\u4e00\u8258\u6218\u8230\uff0cfront[i]=1\uff0c\u7b2c\u4e00\u8258\u6218\u8230front[i]=0(\u4e00\u4e2a\u8230\u961f\u7684\u7b2c\u4e00\u8258\uff0c\u4e0d\u662f\u7f16\u53f7\u4e3a\u4e00\u7684\u90a3\u8258)\uff0c\u8def\u5f84\u538b\u7f29\u9996\u5148\u4e0d\u65ad\u5411fa[i]\u8d70fa[i]=find(fa[i])\uff0c\u8d70\u5230\u961f\u9996\uff0cfa[i]==i\uff0cfront[i]=0\u4e0d\u53d8\uff0c\u8fd4\u56de\u961f\u9996\u7684\u7f16\u53f7\uff0c\u56de\u6eaf\u81f3\u9012\u5f52\u4e0a\u4e00\u5c42\uff0c\u628a\u961f\u9996\u7684\u7f16\u53f7\u90a3\u4e48\u7b2c\u4e8c\u8258\u7684front\u589e\u52a00\u5c31\u662f1\uff0c\u4e3a\u4f55\u662f\u589e\u52a0\u5462\uff1f\u56e0\u4e3a\u524d\u9762\u8bf4\u8fc7\u5b8c\u6210\u8def\u5f84\u538b\u7f29\u5373find\u51fd\u6570\u8dd1\u5b8c\u540efront[i]\u7684\u503c\u5c31\u662f\u7f16\u53f7i\u7684\u6218\u8230\u524d\u65b9\u6709\u51e0\u8258\u6218\u8230\uff0c\u8def\u5f84\u538b\u7f29\u524d\u5219\u662f\u5230fa[i]\u7684\u8ddd\u79bb\uff0c\u4e00\u8def\u5f84\u538b\u7f29\uff0c\u5c31\u76f8\u5f53\u4e8efa[i]\u76f4\u63a5\u8d8a\u8fc7front[fa[i]]\u8258\u6218\u8230\uff0c\u4ecei\u7684\u524d\u4e00\u8258\u6307\u5411\u961f\u9996\uff0cfa[i]\u524d\u8fdb\u90a3\u4e48\u591a\uff0cfront[i]\u81ea\u7136\u4e5f\u8981\u589e\u52a0\u90a3\u4e48\u591a\uff0c\u4fee\u6539\u4e4b\u540e\u7ee7\u7eed\u56de\u6eaf\uff0c\u540c\u7406\u7b2c\u4e09\u5c42front[i]+=front[fa[i]]\u2026\u2026\u8def\u5f84\u538b\u7f29\u5b8c\u6210\u3002\n\n\n\u5408\u5e76\u65f6\u600e\u4e48\u529e\u5462\uff0c\u5b9a\u4e49\u5408\u5e76\u51fd\u6570uni(x,y)\u8868\u793a\u5c06x\u6240\u5728\u90a3\u5217\u79fb\u5230y\u6240\u5728\u90a3\u5217\u540e\u9762\uff08\u5343\u4e07\u522b\u641e\u53cd\u4e86\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u5148\u627e\u5230\u4e24\u5217\u7684\u961f\u9996(\u4f9d\u7136\u7528x\u3001y\u5b58)\uff0c\u50cf\u666e\u901a\u5e76\u67e5\u96c6\u90a3\u6837fa[x]=y,\u7136\u540e\u7ef4\u62a4front\u6570\u7ec4\uff0c\u8fd9\u65f6\u9047\u5230\u95ee\u9898\u5566\u2014\u2014front[y]\u8981\u52a0\u591a\u5c11\u5462\uff1f\u663e\u7136\u662fx\u90a3\u5217\u7684\u6218\u8230\u6570\uff0c\u96be\u9053\u8fd8\u8981\u5faa\u73af\u4e00\u904d\u7edf\u8ba1\u4e00\u4e0b\u5417\uff1f\u90a3\u592a\u6162\u4e86\uff0c\u5b58\u4e0b\u6765\u5427\uff0c\u4e8e\u662fnum[i]\u8868\u793a\u7f16\u53f7i\u8fd9\u5217\u7684\u6218\u8230\u603b\u6570\uff08i\u662f\u961f\u9996\uff0c\u4e0d\u7136\u6bcf\u5408\u5e76\u4e00\u6b21\u8981\u4fee\u6539\u7684\u592a\u591a\u4e86\uff0c\u67e5\u8be2\u65f6num[i]\u65f6\u5148find(i)\u627e\u5230\u961f\u9996\u5427\uff09\uff0cfront[y]+=num[x]\uff0cnum[x]+=num[y]\uff0c\u5408\u5e76\u5b8c\u6210\u3002\n\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u8be2\u95ee\u3002\u5bf9\u4e8e\u4e00\u7ec4\u8be2\u95eeask(x,y)\uff0c\u5148\u627e\u5230\u4ed6\u4eec\u7684\u961f\u9996fx=find(x);fy=find(y);\uff08\u987a\u4fbf\u628a\u8def\u5f84\u538b\u7f29\u8fdb\u884c\u5b8c\u5168\u4e86\uff0c\u4e0d\u7528\u62c5\u5fc3front[i]\u88ab\u91cd\u590d\u589e\u52a0\u4e86\uff0c\u8def\u5f84\u538b\u7f29\u5b8c\u5168\u65f6front[fa[i]]==0\uff0c\u56e0\u4e3afa[i]\u5c31\u662f\u961f\u9996\u5440\uff09\uff0c\u7136\u540e\u5224\u65adfx!=fy\u5c31\u8f93\u51fa-1\uff0c\u5426\u5219\u5c31\u8f93\u51faabs(front[x]-front[y])-1\uff08\u5230\u961f\u9996\u7684\u8ddd\u79bb\u4e4b\u5dee\u51cf\u4e00\u5c31\u662f\u4ed6\u4eec\u95f4\u9694\u8ddd\u79bb\uff09\u3002\n\n\n\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u697c\u4e0b\u90fd\u6709\n\n\n[\u5e7f\u544a](http://www.cnblogs.com/wawcac-blog/p/6821770.html)\n",
        "postTime": 1494419158,
        "uid": 15429,
        "name": "wawcac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "#### \u4f5c\u4e3a\u6211AC\u7684\u7b2c\u4e00\u9053\u84dd\u9898\uff0c\u8fd9\u82b1\u4e86\u6211\u4e0d\u5c11\u65f6\u95f4\uff0c\u6240\u4ee5\u628a\u8fd9\u9053\u9898\u4f5c\u4e3a\u6211\u7b2c\u4e00\u6b21\u9898\u89e3\u7684\u5bf9\u8c61\n\u9898\u76ee\u8981\u6c42\u5408\u5e76\uff0c\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u5217\uff0c\u7ecf\u5178\u7684\u5e76\u67e5\u96c6\u95ee\u6cd5\uff0c\u6240\u4ee5\n```cpp\nint ft(int x)\n{\n    if(f[x]!=x)\n    f[x]=ft(f[x]);\n    return f[x];\n}\n```\n```cpp\n    cin>>x;\n    scanf(\"%d%d\",&a,&b);\n    int fa=ft(a),fb=ft(b);\n    if(x=='M')\n    {\n        int sb=so(b);\n        f[fa]=fb;\n        p[sb]=fa;\n        s[sb]=fa;\n    \tpx(sb);\n    }\n    if(x=='C')\n    {\n    \tif(fa!=fb)\n    \tprintf(\"-1\\n\");\n        else\n        printf(\"%d\\n\",abs(n[a]-n[b])-1);\n    }\n```\n\u4f46\u8fd8\u8981\u6c42\u8f93\u51fa\u6218\u8230\u95f4\u7684\u6218\u8230\u6570\uff0c\u6240\u4ee5\u7528\u4e86n\u6570\u7ec4\u6765\u8bb0\u5f55\u5e8f\u53f7\uff0cp\u6570\u7ec4\u6765\u8bb0\u5f55\u524d\u4e00\u8258\u6218\u8230\n```cpp\nvoid px(int x)\n{\n    while(p[x])\n    {\n        n[p[x]]=n[x]+1;\n        x=p[x];\n    }\n}\n```\n\u540c\u65f6\u9700\u8981s\u6570\u7ec4\u6765\u8bb0\u5f55\u961f\u5c3e\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u5408\u5e76\n```cpp\nint so(int x)\n{\n\tif(s[x]!=x)\n\ts[x]=so(s[x]);\n\treturn s[x];\n}\n```\n\u4f46\u5982\u679c\u662f\u8fd9\u6837\uff0c\u663e\u7136\u5f88\u6162\uff0c\u6240\u4ee5\u5c31\u60f3\u5728\u627e\u7236\u8282\u70b9\u7684\u65f6\u5019\u66f4\u65b0\uff0c\u4f46\u59cb\u7ec8\u4e0d\u77e5\u5982\u4f55\u5b9e\u73b0\uff0c\u4f46\u6ca1\u60f3\u5230AC\u4e86\uff0c\u540e\u6765\u53d1\u73b0\u5927\u4f6c\u7684\n\n```cpp\nint find(int n)\n{\n    if(fa[n]==n)return fa[n];\n    int fn=find(fa[n]);\n    front[n]+=front[fa[n]]; \n    return fa[n]=fn;\n}//\u5728\u627e\u7236\u8282\u70b9\u7684\u65f6\u5019\u540c\u65f6\u66f4\u65b0\u5e8f\u53f7\n```\n\u4ee5\u53ca\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u961f\u5217\u957f\u5ea6\u800c\u4e0d\u7528s\u6570\u7ec4\u6765\u8bb0\u5f55\u961f\u5c3e\n\n### \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,a,b,i,f[30005],n[30005],s[30005],p[30005];\n//f--\u7236\u8282\u70b9/\u961f\u5934\uff0cn--\u5e8f\u53f7\uff0cs--\u5b50\u8282\u70b9/\u961f\u5c3e\uff0cp--\u4e0b\u4e00\u4e2a\u6218\u8230\nchar x;\nint ft(int x)\n{\n\tif(f[x]!=x)\n\tf[x]=ft(f[x]);\n\treturn f[x];\n}//\u627e\u7236\nint so(int x)\n{\n\tif(s[x]!=x)\n\ts[x]=so(s[x]);\n\treturn s[x];\n}//\u627e\u5b50\nvoid px(int x)\n{\n\twhile(p[x])\n\t{\n\t\tn[p[x]]=n[x]+1;\n\t\tx=p[x];\n\t}\n}//\u66f4\u65b0\u5e8f\u53f7\nint main()\n{\n\tcin>>m;\n\tfor(i=1;i<=30000;i++)\n\t{\n\t\tf[i]=i;s[i]=i;\n\t}\n\twhile(m--)\n\t{\n\t\tcin>>x;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tint fa=ft(a),fb=ft(b);\n\t\tif(x=='M')\n\t\t{\n\t\t\tint sb=so(b);\n\t\t\tf[fa]=fb;\n\t\t\tp[sb]=fa;\n\t\t\ts[sb]=fa;//\u5408\u5e76\n\t\t\tpx(sb);\n\t\t}\n\t\tif(x=='C')\n\t\t{\n\t\tif(fa!=fb)\n\t\tprintf(\"-1\\n\");\n\t\telse\n\t\tprintf(\"%d\\n\",abs(n[a]-n[b])-1);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1576832593,
        "uid": 286800,
        "name": "\u6c38\u591c\u72c2\u517d",
        "ccfLevel": 4,
        "title": "P1196 [NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4"
    },
    {
        "content": "## \u5e26\u6743\u5e76\u67e5\u96c6\u7684\u6807\u51c6\u9898\n\n\u4e0d\u8fc7\u8fd8\u662f\u9700\u8981\u4e00\u70b9\u6280\u5de7\u3002\u6211\u4eec\u8bbe\u5e26\u6743\u5e76\u67e5\u96c6\u7684\u6743$weight_i$\u4e3a**\u4ece\u8282\u70b9$i$\u5230\u5b83\u7684\u76f4\u63a5\u7236\u8282\u70b9\u9700\u8981\u7ecf\u8fc7\u51e0\u4e2a\u6218\u8230\u3002**\n\n\u5047\u8bbe\u4e24\u4e2a\u6218\u8230$i,j$\uff0c\u73b0\u5728\u8981\u628a$i$\u6240\u5728\u961f\u5217\u63a5\u5230$j$\u6240\u5728\u961f\u5217\u7684\u5c3e\u90e8\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u4e00\u4e0b\u5b83\u4eec\u6743\u503c\u7684\u53d8\u5316\u3002$j$\u6240\u5728\u961f\u5217\u4e2d\u7684\u4efb\u4f55\u6218\u8230\u7684\u6743\u503c\u662f\u4e0d\u4f1a\u53d8\u5316\u7684\uff0c\u800c$i$\u6240\u5728\u961f\u5217\u7684\u6240\u6709\u8282\u70b9\u6743\u503c\u90fd\u4f1a\u52a0\u4e0a$j$\u6240\u5728\u961f\u5217\u7684\u5927\u5c0f\u3002\n\n\u4f46\u662f\u8fd9\u6837\u6211\u4eec\u5c31\u4f1a\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u6743\u503c\u4ee3\u8868\u8fd9\u4e2a\u961f\u5217\u7684\u603b\u6218\u8230\u6570\u91cf\uff0c\u8fd9\u5e76\u4e0d\u597d\u3002\n\n\u5176\u5b9e\uff0c\u5229\u7528\u5e76\u67e5\u96c6\u7684\u8def\u5f84\u538b\u7f29\u6027\u8d28\uff0c\u6211\u4eec\u53ea\u8981\u628a**\u6218\u8230$i$\u6240\u5728\u961f\u5217\u961f\u9996\u7684\u7236\u8282\u70b9\u8bbe\u4e3a$j$\u6240\u5728\u961f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u6218\u8230**\uff0c\u7136\u540e\u628a$i$\u961f\u5217\u961f\u9996\u7684\u6743\u503c\u8bbe\u4e3a1\u5c31\u884c\u4e86\u3002\u6700\u540e\u7b54\u6848\u5c31\u662f$abs(abs(weight_i - weight_j) - 1)$\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u5c31\u53ef\u4ee5\u4e86\u5462\uff0c\u56e0\u4e3a\u5728\u8def\u5f84\u538b\u7f29\u7684\u65f6\u5019\u5e76\u67e5\u96c6\u4f1a\u52a8\u6001\u7684\u66f4\u65b0$weight$\u7684\u503c\uff0c\u800c\u5934\u8282\u70b9\u5230\u5b83\u81ea\u5df1\u4e00\u76f4\u90fd\u662f0\uff0c\u5728\u8fde\u63a5\u5230\u4e0b\u4e00\u4e2a\u7684\u5c3e\u90e8\u7684\u65f6\u5019\u6211\u4eec\u8bbe\u4e3a1\u5c31\u53ef\u4ee5\u5728\u4e0b\u6b21$find$\u7684\u65f6\u5019\u83b7\u53d6\u6b63\u786e\u7684\u503c\u4e86\u3002\u7531\u4e8e\u662f\u95f4\u9694\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u51cf\u4e00\u3002\n\n\u867d\u7136\u6211\u4eec\u9700\u8981\u8bb0\u5f55$tail$\uff0c\u4e5f\u5c31\u662f\u5934\u8282\u70b9\u6240\u5728\u961f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\uff0c\u4f46\u662f\u5e76\u4e0d\u9700\u8981\u52a8\u6001\u66f4\u65b0\u5b83\uff0c\u56e0\u4e3a\u53ea\u6709\u5728\u8fde\u63a5\u7684\u65f6\u5019\u624d\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u8fd8\u662f\u4e0d\u9ebb\u70e6\u7684\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int INF = 2147483647;\nconst int INF2 = 0x3f3f3f3f;\nconst ll INF64 = 0x3f3f3f3f3f3f3f3f;\nconst double PI = 3.14159265358979323846;\nconst ll MOD = 1e9 + 7;\nconst ll TARGET = (1LL << 32) - 1LL;\n\ntemplate <typename T>\ninline T read() {\n    T X = 0, w = 0;\n    char ch = 0;\n    while (!isdigit(ch)) {\n        w |= ch == '-';\n        ch = getchar();\n    }\n    while (isdigit(ch)) X = (X << 3) + (X << 1) + (ch ^ 48), ch = getchar();\n    return w ? -X : X;\n}\n\nclass UnionFindW {\n   public:\n    UnionFindW() {}\n    inline int find(int x) {\n        if (parent[x] != x) {\n            // \u8bb0\u5f55\u4e0b\u4e4b\u524d\u7684\u7236\u8282\u70b9\n            int pf = parent[x];\n            parent[x] = find(parent[x]);\n            // \u52a8\u6001\u66f4\u65b0\u6743\u503c\n            weight[x] += weight[pf];\n        }\n        return parent[x];\n    }\n    bool same(int x, int y) { return find(x) == find(y); }\n    void join(int x, int y, int w) {\n        int f1 = find(x);\n        int f2 = find(y);\n        if (f1 == f2) return;\n        parent[f1] = tail[f2];\n        tail[f2] = tail[f1];\n        weight[f1] = 1;\n    }\n    void clear(int n) {\n        for (int i = 0; i < n; i++) {\n            parent[i] = i;\n            weight[i] = 0;\n            tail[i] = i;\n        }\n    }\n    static const int N = 30005;\n    int parent[N];\n\n    // weight\u4ee3\u8868\u5b83\u6bd4\u5b83\u7684\u76f4\u63a5\u7236\u8282\u70b9\u591a\u591a\u5c11\n    int weight[N];\n    int tail[N];\n};\n\nconst int MAXN = 100005;\nint n, m, k;\nint CASE = 1;\nUnionFindW ufw;\nint main() {\n#ifdef LOCALLL\n    freopen(\"in\", \"r\", stdin);\n    freopen(\"out\", \"w\", stdout);\n#endif\n    scanf(\"%d\", &n);\n    ufw.clear(30005);\n    while (n--) {\n        char c;\n        int x, y;\n        scanf(\" %c\", &c);\n        scanf(\"%d %d\", &x, &y);\n        if (c == 'M') {\n            ufw.join(x, y, 1);\n        } else {\n            if (x == y)\n                printf(\"0\\n\");\n            else if (ufw.same(x, y)) {\n                printf(\"%d\\n\", abs(abs(ufw.weight[x] - ufw.weight[y]) - 1));\n            } else {\n                printf(\"-1\\n\");\n            }\n        }\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1563432948,
        "uid": 36956,
        "name": "Mr_Skirt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/fe/problem/P1196)\n# \u7b97\u6cd5\u601d\u8def\n\u9898\u76ee\u4e2d\u4e00\u5171\u7ed9\u4e86\u5408\u5e76\u548c\u67e5\u8be2\u548c\u4e24\u79cd\u64cd\u4f5c\uff0c\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u5b9e\u73b0\u3002\u4f46\u662f\uff0c\u67e5\u8be2\u64cd\u4f5c\u9700\u8981\u7ed9\u51fa\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u53bb\u7edf\u8ba1\u8fd9\u4e2a\u91cf\u5462\uff1f\n![](https://wflight.github.io/2019/07/12/%E9%93%B6%E6%B2%B3%E8%8B%B1%E9%9B%84%E4%BC%A0%E8%AF%B4-%E9%A2%98%E8%A7%A3/example.png)\n\u5982\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u77e5\u90534\u53f7\u70b9\u52302\u53f7\u70b9\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u4e0d\u538b\u7f29\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e00\u6b65\u6b65\u53bb\u7edf\u8ba1\u8fd9\u4e24\u4e2a\u70b9\u5230\u7956\u5148\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u8fdb\u884c\u8ba1\u7b97\u3002\u4f46\u662f\uff0c1e5\u7684\u6570\u636e\u663e\u7136\u662f\u4e0d\u652f\u6301\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u8be5\u600e\u4e48\u505a\u5462\uff1f\n\u7b54\u6848\u5c31\u662f\u7528`\u52a0\u6743\u5e76\u67e5\u96c6`\u3002\n\u52a0\u6743\u5e76\u67e5\u96c6\u548c\u6734\u7d20\u5e76\u67e5\u96c6\u7684\u533a\u522b\u662f\u5e76\u67e5\u96c6\u5728\u7edf\u8ba1\u67d0\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u7684\u540c\u65f6\uff0c\u8fd8\u7edf\u8ba1\u8be5\u8282\u70b9\u5230ta\u7684\u7956\u5148\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u800c\u4e0d\u662f\u53ea\u80fd\u4e00\u6b65\u4e00\u6b65\u5f80\u4e0a\u8df3\u3002\n\u9644\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n\nusing namespace std;\n\nint read()\n{\n\tregister int x = 0,f = 1;register char ch;\n\tch = getchar();\n\twhile(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n\twhile(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n\treturn x * f;\n}\nconst int n = 30000;\n\nint fa[100005],dis[100005],siz[100005],t,x,y;\n\nchar s;\n\nint query(int x)\n{\n\tif(fa[fa[x]] == fa[x]) return dis[x];\n\treturn dis[x] + dis[query(fa[x])];\n}\n\nint find(int x)\n{\n\tif(fa[x] == x) return x;\n//\tdis[x] = query(x);\n\tint ans = find(fa[x]);\n\tdis[x] = dis[fa[x]] + dis[x];\n\tfa[x] = ans;\n\treturn ans;\n}\n\nint main()\n{\n\tt = read();\n\tfor(int i = 1; i <= n; i ++) fa[i] = i;\n\tfor(int i = 1; i <= n; i ++) siz[i] = 1;\n\tfor(int i = 1; i <= t; i ++)\n\t{\n\t\tcin >> s;\n\t\tx = read(); y = read();\n\t\tif(s == 'M')\n\t\t{\n\t\t\tint fx =  find(x),fy = find(y);\n\t\t\tif(find(x) != find(y))\n\t\t\t{\n\t\t\t\tdis[fx] = dis[fx] + siz[fy];\n\t\t\t\tsiz[fy] += siz[fx];\n\t\t\t\tsiz[fx] = 0;\n\t\t\t\tfa[fx] = fy;\n\t\t\t}\n\t\t}\n\t\tif(s == 'C')\n\t\t{\n\t\t\tif(find(x) != find(y))\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(x == y)\n\t\t\t{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",abs(dis[x] - dis[y]) - 1);\n\t\t}\n\t}\n    return 0;\n}\n```",
        "postTime": 1562902159,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4-\u9898\u89e3"
    },
    {
        "content": "### \u8fd9\u662f\u4e00\u9053\u5e26\u6743\u5e76\u67e5\u96c6\u7684\u6a21\u677f\u9898\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5e26\u6743\u5e76\u67e5\u96c6\uff0c\u5c31\u662f\u5728\u5e76\u67e5\u96c6\u4e2d\u52a0\u5165\u4e00\u5143(\u5373\u4e0b\u6587\u4e2d\u7684d[]\u548csize[]\u6570\u7ec4)\u6216\u66f4\u591a\u5143,\u4ee5\u7ef4\u62a4\u66f4\u591a\u7684\u4fe1\u606f(\u5728\u8fd9\u91cc\u4f53\u73b0\u4e3a\u6218\u5217\u8230\u7684\u6570\u91cf)\u3002\u6ce8\u610f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u90fd\u662f\u9488\u5bf9\u8fb9\u7684\u4fe1\u606f\uff0c\u4e00\u822c\u8868\u793a\u8be5\u8282\u70b9(i)\u4e0e\u76f4\u63a5\u7236\u4eb2(fa[i])\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u901a\u8fc7getfather\u64cd\u4f5c\u7684\u53d8\u5f62\u9012\u5f52\u5730\u7ef4\u62a4\u7956\u5b97\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9\u5730\u5173\u7cfb\uff0c\u540c\u65f6\u8def\u5f84\u538b\u7f29(\u6b64\u65f6\u4fe1\u606f\u4ecd\u7136\u662f\u63cf\u8ff0\u8be5\u70b9\u548c\u5176\u76f4\u63a5\u7236\u4eb2\u7684\uff0c\u53ea\u662f\u7ecf\u8fc7\u8def\u5f84\u538b\u7f29\u540e\u8be5\u70b9\u7684\u76f4\u63a5\u7236\u4eb2\u5df2\u7ecf\u662f\u5176\u7956\u5148\uff0c\u5373\u96c6\u5408\u7684\u4ee3\u8868\u5143)\u3002\u5728\u5408\u5e76\u65f6\u4e5f\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u6765\u7ef4\u62a4\u6240\u5b9a\u4e49\u7684\u5143\u7684\u6027\u8d28\u3002\u5f53\u7ef4\u62a4\u4e00\u4e2a\u5143\u7684\u6027\u8d28\u4e0d\u6613\u65f6\u53ef\u4ee5\u8003\u8651\u589e\u52a0\u4e00\u4e2a\u4e2d\u95f4\u5143(\u5982\u672c\u9898\u7684size[]),\u5408\u5e76\u65f6\u7ef4\u62a4\u5176\u6027\u8d28\u540c\u65f6\u7528\u4ee5\u8f85\u52a9\u53e6\u4e00\u5143\u7684\u6027\u8d28\u7684\u7ef4\u62a4\u3002\u5177\u4f53\u7684\uff0c\u63a8\u8350\u5927\u5bb6\u53bb\u8bfb\u4e00\u4e0b\u674e\u715c\u4e1c\u7684\u8fdb\u9636\u6307\u5357\uff0c\u5199\u5f97\u975e\u5e38\u5999\u3002\n### \u5c31\u9898\u800c\u8a00\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u5185\u5bb9\u662f\u6218\u5217\u8230\u4e4b\u95f4\u7684\u8230\u7684\u6570\u76ee\uff0c\u8fd9\u53ef\u4ee5\u8f6c\u5316\u5230\u4e24\u8230\u5230\u5176\u8230\u961f\u6700\u9876\u90e8\u7684\u8230\u7684\u8ddd\u79bb\u4e4b\u5dee-1\u3002\u4e24\u8230\u5230\u5176\u6700\u9876\u90e8\u7684\u8230\u7684\u8ddd\u79bb\uff0c\u53ef\u4ee5\u7ef4\u62a4\u5176\u5230\u7236\u4eb2\u8282\u70b9\u7684\u8ddd\u79bb(d[]),\u5728getf()\u64cd\u4f5c\u4e2d\u8def\u5f84\u538b\u7f29\u9012\u5f52\u5730\u6c42\u5f97\u6218\u5217\u8230\u5230\u5176\u961f\u9996\u6218\u5217\u8230\u7684\u8ddd\u79bb\u3002\u8003\u8651\u5230\u5408\u5e76\u64cd\u4f5c\u7684\u7ef4\u62a4\u56f0\u96be\uff0c\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2asize[]\u6570\u7ec4\uff0c\u5b9a\u4e49\u4e3a\u4ee5\u8be5\u8230\u4e3a\u9996\u7684\u961f\u5217\u4e2d\u8230\u7684\u6570\u91cf\uff0c\u5305\u542b\u8be5\u8230\u3002\u56e0\u800c\u5728\u5408\u5e76\u65f6\u53ef\u4ee5\u501f\u52a9size[]\u8f7b\u677e\u7ef4\u62a4d[]\u6570\u7ec4(\u8bf7\u8bf8\u4f4d\u81ea\u884c\u601d\u8003\uff0c\u7b54\u6848\u5728un()\u51fd\u6570\u4e2d)\uff0c\u540c\u65f6size[]\u5728\u5408\u5e76\u65f6\u53ef\u4ee5\u8f7b\u6613\u88ab\u7ef4\u62a4\uff0c\u5176\u4ed6\u5e76\u67e5\u96c6\u64cd\u4f5c\u4e5f\u4e0d\u5f71\u54cdsize[]\u7684\u503c\u3002\n### \u6700\u540e\u7ed9\u51fa\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nbool gc() {\n    char ch = getchar();\n    while(ch != 'M' && ch != 'C') ch = getchar();\n    return ch == 'M';\n}\n\nint fa[30001], size[30001], d[30001];\n\nint getf(int i) {\n    if(fa[i] == i) return i;\n\tint f = getf(fa[i]);\n\td[i] += d[fa[i]];\n\treturn fa[i] = f;\n}\n\nvoid un(int x, int y) {\t\t\t\t//link x to y\n    x =getf(x);\n    y = getf(y);\n    fa[x] = y;\n    d[x] = size[y];\n    size[y] += size[x];\n}\n\nint abs(int x) {\n    return x > 0 ? x : -x;\n}\n\nint query(int x, int y) {\n    int a = getf(x), b = getf(y);\n    if(a != b) return -1;\n    return abs(d[x]-d[y])-1;\n}\n\nint main() {\n    int n, ope, p1, p2;\n    scanf(\"%d\", &n);\n    fa[0] = 0;\n    memset(d, 0, sizeof(d));\n    for(int i = 1; i <= 30000; i++) fa[i] = i, size[i] = 1;\n    while(n--) {\n        ope = gc();\n        scanf(\"%d %d\", &p1, &p2);\n        if(ope)\n            un(p1, p2);\n        else\n            printf(\"%d\\n\", query(p1, p2));\n    }\n    return 0;\n}\n```",
        "postTime": 1546092526,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "~~\u849f\u84bb\u6765\u4e00\u7bc7\u849f\u84bb\u7684\u9898\u89e3\uff1a\u4e0dO2\u4f1aTLE\u7684\u90a3\u79cd~~\n\n\u53ef\u4ee5\u6a21\u62df\u7740\u6765\u505a\uff0c\u4e0d\u65ad\u5730\u5408\u5e76\uff0c\u4f46\u662f\u80af\u5b9a\u4f1aMLE\n\n![](https://cdn.luogu.com.cn/upload/pic/38404.png)\n\n\u4e8e\u662f\u8003\u8651\u5185\u5b58\u91ca\u653e\uff0c\u6211\u7528\u7684vector\u7528swap\u91ca\u653e\u5185\u5b58\uff0c\u4e8e\u662f\u5c31\u53d8\u6210\u4e86TLE\n\n![](https://cdn.luogu.com.cn/upload/pic/38405.png)\n\n~~\u7136\u540e\u5c31\u662f\u65e0\u803b\u7684O2\u4f18\u5316~~\n\n![](https://cdn.luogu.com.cn/upload/pic/38406.png)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cmath>\nusing namespace std;\n\nconst int L = 30005;\nint n , fa[L] , rank[L];\nvector<int>q[L];\ninline int myabs(int a) { return a>0?a:(-a); }\n\nvoid init() {\n    for(int i=1; i<=30000; i++) {\n        fa[i] = i;\n        rank[i] = 1;\n        q[i].push_back(i);\t\t\n    }\n}\n\nint find(int x) {\n    if(fa[x] != x)\n        return fa[x] = find(fa[x]);\n    return fa[x];\n}\n\nvoid update(int x , int y) {\n    int fx = find(x) , fy = find(y);\n    int sz = q[fx].size() , cz = q[fy].size();\n    fa[fx] = fy;\n    for(int i=0; i<sz; i++) {\n        q[fy].push_back(q[fx][i]);\n        rank[q[fx][i]] = cz+1+i;\t\t\n    }\n    q[fx].clear();\n\tvector<int>().swap(q[fx]);\n}\n\nvoid qans(int x , int y) {\n    int fx , fy;\n    fx = find(x) , fy = find(y);\n    if(fx != fy) {\n        printf(\"-1\\n\");\n        return ;\n    }\n    printf(\"%d\\n\",myabs(rank[x]-rank[y])-1);\n}\n\nint main() {\n    scanf(\"%d\",&n);\n    init();\n    for(int i=1; i<=n; i++) {\n        char c;int x , y;\n        cin>>c;\n        scanf(\"%d%d\",&x,&y);\n        if(c=='M')\n            update(x,y);\n        else\n            qans(x,y);\n    }\n    return 0;\n}\n```",
        "postTime": 1539852370,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6b63\u89e3\u662f\u5e26\u6743\u5e76\u67e5\u96c6\uff0c\u4f46\u666e\u901a\u5e76\u67e5\u96c6\u4e5f\u80fd\u505a\uff0c\u53ea\u4e0d\u8fc7\u662f\u79bb\u7ebf\u7b97\u6cd5\uff0c\u8dd1\u7684\u4e5f\u4e0d\u7b97\u6162\u3002\u8c8c\u4f3c\u6ca1\u4eba\u53d1\u8fd9\u79cd\u505a\u6cd5\u7684\u9898\u89e3\u3002\n\n\u770b\u5230\u6bcf\u6b21\u5408\u5e762\u4e2a\u96c6\u5408\uff0c\u5e76\u8981\u4ee5\u96c6\u5408\u4e3a\u5355\u4f4d\u67e5\u8be2\u4fe1\u606f\uff0c\u4e5f\u8bb8\u80fd\u60f3\u5230Kruskal\u91cd\u6784\u6811\u3002\u4f46\u6211\u4eec\u53ea\u9700\u8981\u7528\u5b83\u6784\u6811\u7684\u601d\u60f3\uff0c\u5f00\u70b9\u8868\u793a2\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\uff0c\u5229\u7528\u8fd9\u68f5\u4e8c\u53c9\u6811\u3002\uff08\u987a\u5e26\u4e00\u63d0\uff0cP3273 [SCOI2011]\u68d8\u624b\u7684\u64cd\u4f5c  \u4e5f\u80fd\u7528\u8fd9\u4e2a\u601d\u60f3\u505a\uff09\n\n\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\uff0c\u663e\u7136\u4e0d\u4f1a\u5bfc\u81f4\u540c\u4e00\u96c6\u5408\u91cc\u7684\u98de\u8239\u7684\u76f8\u5bf9\u987a\u5e8f\u53d1\u751f\u6539\u53d8\u3002\u5982\u679c\u8981\u8be2\u95ee\u540c\u4e00\u96c6\u5408\u5185\u4e24\u8258\u98de\u8239\u95f4\u9694\u7740\u7684\u98de\u8239\u6570\uff0c\u65e0\u8bba\u8fd9\u4e2a\u96c6\u5408\u518d\u600e\u4e48\u4e0e\u5176\u4ed6\u96c6\u5408\u5e76\uff0c\u7b54\u6848\u90fd\u4e0d\u4f1a\u6539\u53d8\u3002\u90a3\u4e48\u5c31\u7b80\u5355\u4e86\uff0c\u5bf9\u4e8e\u540c\u4e00\u96c6\u5408\u5185\u7684\u67e5\u8be2\uff0c\u76f4\u63a5\u53bb\u6700\u7ec8\u72b6\u6001\u67e5\u8be2\u3002\n\n\u6bcf\u6b21\u5c06\u961f\u5217x\u52a0\u5230y\u540e\u9762\uff0c\u5c31\u628a\u96c6\u5408x\u5e76\u5165\u96c6\u5408y\uff0c\u5e76\u67e5\u96c6\u5f00\u4e2a\u65b0\u70b9\uff0c\u8ba9x\u548cy\u7684fa\u90fd\u6307\u5411\u8fd9\u4e2a\u65b0\u70b9\u3002\u8bfb\u5b8c\u64cd\u4f5c\u540e\uff0c\u5bf9\u6784\u9020\u7684\u4e8c\u53c9\u6811\u8fdb\u884c\u5148\u5e8f\u904d\u5386\uff08\u5de6\u5b69\u5b50\u4e3a\u961f\u5217\u4e2d\u6392\u524d\u9762\u7684\uff09\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e2a\u98de\u8239\u5728\u6700\u7ec8\u9635\u5217\u7684\u4f4d\u7f6e\u3002\u6700\u540e\u8fc7\u4e00\u904d\u8be2\u95ee\u6570\u7ec4\uff0c\u56de\u7b54\u5373\u53ef\u3002\u65e0\u6548\u64cd\u4f5c\u6216\u8005\u8f93\u51fa-1\u5728\u8bfb\u5165\u7684\u65f6\u5019\u7279\u522b\u5224\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u79bb\u7ebf\u56de\u7b54\u7684\u65f6\u5019\u7279\u522b\u5904\u7406\u3002\uff08\u9884\u5148\u5904\u7406\u8fd9\u4e2a\u53ef\u4ee5\u907f\u514d\u518d\u6b21\u4f7f\u7528\u5e76\u67e5\u96c6\u64cd\u4f5c\uff09\n\n```cpp\n#include <cstdio>\nusing namespace std;\nconst int MAXN=30010;\nint n,tot,pos[MAXN];\nint fa[MAXN*2];\nint q[500010][3];\nstruct node {\n\tint lc,rc;\n} tr[MAXN*2];\nint vis[MAXN*2];\ninline int abs(int x) { return x>0 ? x : -x; }\nint getfa(int u) {\n\twhile (u=fa[u]=fa[fa[u]],u!=fa[u]);\n\treturn u;\n}\nvoid build(int p) {\n\tstatic int ord;\n\tif (p<=n) {\n\t\tpos[p]=++ord;\n\t} else {\n\t\tbuild(tr[p].lc);\n\t\tbuild(tr[p].rc);\n\t}\n\tvis[p]=1;\n}\nint main() {\n\tint Q;\n\tn=30000;\n\tscanf(\"%d\",&Q);\n\tfor (register int i=1;i<=n;i++) fa[i]=i;\n\ttot=n;\n\tfor (register int i=0;i<Q;i++) {\n\t\tchar opt;\n\t\tint x,y;\n\t\tscanf(\" %c%d%d\",&opt,&x,&y);\n\t\tif (opt=='M') {\n\t\t\tq[i][0]=1;\n\t\t\tx=getfa(x),y=getfa(y);\n\t\t\tif (x==y) {\n\t\t\t\tq[i][0]=0; //\u65e0\u6548\u64cd\u4f5c\uff0c\u76f4\u63a5\u820d\u5f03\n\t\t\t} else {\n\t\t\t\t++tot;\n\t\t\t\tfa[y]=fa[x]=tot;\n\t\t\t\tfa[tot]=tot;\n\t\t\t\ttr[tot]=(node){y,x};\n\t\t\t}\n\t\t} else if (opt=='C') {\n\t\t\tq[i][0]=getfa(x)==getfa(y) ? 2 : 3;\n\t\t}\n\t\tq[i][1]=x, q[i][2]=y;\n\t}\n\tfor (register int i=tot;i>=1;i--) {\n\t\tif (!vis[i]) build(i);\n\t}\n\tfor (register int i=0;i<Q;i++) {\n\t\tint opt=q[i][0],x=q[i][1],y=q[i][2];\n\t\tif (opt==2) { //\u6709\u6548\u67e5\u8be2\n\t\t\tprintf(\"%d\\n\",abs(pos[x]-pos[y])-1);\n\t\t} else if (opt==3) { //\u65e0\u6548\u67e5\u8be2\n\t\t\tprintf(\"%d\\n\",-1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1536935621,
        "uid": 32771,
        "name": "\u554a\u561e\u561e\u561e\u561e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "### \u66b4\u529bsplay\u89e3\u51b3\u4e00\u5207\u95ee\u9898\uff01\uff01\n\n#### ~~\u5982\u679c\u4e0d\u884c\uff0c\u5c31\u518d\u5957\u4e00\u4e2a\uff01\uff01~~\n\n\u4f5c\u4e3a\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u5b66\u50bb\u4e86\u7684\u83dc\u9e21\uff0c\u8fd9\u9898\u5f53\u7136\u662f\u4e00\u773csplay\u5566\n\n\u6211\u4eec\u53ef\u4ee5\u5efa30000\u68f5splay\uff0c\u7136\u540e\u4e71\u641e\u5373\u53ef\n\nquery\uff1a\u6807\u51c6splay\u533a\u95f4\u64cd\u4f5c\uff0c\u8f93\u51fasize\u5373\u53ef\n\nconnect\uff1a\u641e\u5230\u4e24\u70b9\u6240\u5728\u7684splay\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u542f\u53d1\u5f0f\u5408\u5e76\u5373\u53ef\n\n\u6ca1\u5566\uff0cso easy\uff01\n\n\u4ee3\u7801\uff1a\uff08\u53ef\u80fd\u6709\u4e9b\u4e11\uff0c\u6211\u4ece[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/U33553#sub)( https://www.luogu.org/contestnew/show/9354 ) \u6765\u7684\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define sz 101010\n#define mod (int)(1e9+7)\nusing namespace std;\ntypedef long long ll;\nstruct FastIO\n{\n\tinline FastIO& operator>>(int& x)\n\t{\n\t\tx=0;char f=0,ch=getchar();\n\t\twhile(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n\t\twhile(ch<='9'&&ch>='0') x=x*10+ch-48,ch=getchar();\n\t\treturn x=(f?-x:x),*this;\n\t}\n\tinline FastIO& operator>>(ll& x)\n\t{\n\t\tx=0;char f=0,ch=getchar();\n\t\twhile(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n\t\twhile(ch<='9'&&ch>='0') x=x*10+ch-48,ch=getchar();\n\t\treturn x=(f?-x:x),*this;\n\t}\n\tinline FastIO& operator>>(double& x)\n\t{\n\t\tx=0;char f=0,ch=getchar();\n\t\tdouble d=0.1;\n\t\twhile(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n\t\twhile(ch<='9'&&ch>='0') x=x*10+ch-48,ch=getchar();\n\t\tif(ch=='.')\n\t\t{\n\t\t\tch=getchar();\n\t\t\twhile(ch<='9'&&ch>='0') x+=d*(ch^48),d*=0.1,ch=getchar();\n\t\t}\n\t\treturn x=(f?-x:x),*this;\n\t}\n}read;\n\nvoid file()\n{\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"a.txt\",\"r\",stdin);\n\t#endif\n}\n\n/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\nll a[sz];\n\nstruct hh{int fa,dep,ch[2];ll sum;}tr[sz<<1];\n\nint getfa(int x){while (tr[x].fa) x=tr[x].fa;return x;}\nvoid pushup(int x)\n{\n\ttr[x].sum=tr[tr[x].ch[0]].sum+tr[tr[x].ch[1]].sum+a[x];\n\ttr[x].dep=max(tr[tr[x].ch[0]].dep,tr[tr[x].ch[1]].dep)+1;\n}\nbool get(int x){return tr[tr[x].fa].ch[1]==x;}\nvoid rotate(int x)\n{\n\tint y=tr[x].fa,z=tr[y].fa;\n\tint k=get(x),w=tr[x].ch[!k];\n\tif (z) tr[z].ch[get(y)]=x;tr[x].ch[!k]=y;tr[y].ch[k]=w;\n\tif (w) tr[w].fa=y;tr[x].fa=z;tr[y].fa=x;\n\tpushup(y);pushup(x);\n}\nvoid splay(int x,int to)\n{\n\twhile (tr[x].fa!=to)\n\t{\n\t\tint y=tr[x].fa;\n\t\tif (tr[y].fa!=to) rotate(get(x)==get(y)?y:x);\n\t\trotate(x);\n\t}\n}\nvoid connect(int x,int y) //head[x]->tail[y]\n{\n\tx=getfa(x);y=getfa(y);\n\tif (x==y) return;\n\tif (tr[x].dep>tr[y].dep)\n\t{\n\t\twhile (tr[x].ch[0]) x=tr[x].ch[0];\n\t\ttr[x].ch[0]=y;tr[y].fa=x;\n\t\tsplay(y,0);\n\t}\n\telse\n\t{\n\t\twhile (tr[y].ch[1]) y=tr[y].ch[1];\n\t\ttr[y].ch[1]=x;tr[x].fa=y;\n\t\tsplay(x,0);\n\t}\n}\nvoid cut(int x)\n{\n\tsplay(x,0);\n\ttr[tr[x].ch[0]].fa=0;tr[x].ch[0]=0;\n\tpushup(x);\n}\nll query(int x,int y)\n{\n\tif (x==y) return 0;\n\tint fx=getfa(x),fy=getfa(y);\n\tif (fx!=fy) return -1;\n\tsplay(x,0);splay(y,x);\n\tint ls=tr[y].ch[0],rs=tr[y].ch[1];\n\treturn get(y)?tr[ls].sum:tr[rs].sum;\n}\nbool vis[sz];\nvoid debug(int x)\n{\n\tsplay(x,0);\n\twhile (tr[x].ch[0]) x=tr[x].ch[0];\n\tsplay(x,0);\n\twhile (x&&tr[x].ch[1]) printf(\"%d<-\",x),vis[x]=1,x=tr[x].ch[1];\n\tprintf(\"%d \",x);vis[x]=1;\n}\nint main()\n{\n//\tfile();\n\tint n,m,i,j,k,x,y,z;\n\tread>>m;n=30000;\n\tfor (i=1;i<=n;i++) a[i]=1;\n\tfor (i=1;i<=n;i++) pushup(i);\n\twhile (m--)\n\t{\n\t\tchar ch;cin>>ch;\n\t\tif (ch=='M') read>>x>>y,connect(x,y);\n\t\telse read>>x>>y,printf(\"%lld\\n\",query(x,y));\n//\t\tfor (i=1;i<=n;i++) if (!vis[i]) debug(i);\n//\t\tputs(\"\");memset(vis,0,sizeof(vis));\n\t}\n}\n```",
        "postTime": 1535185733,
        "uid": 76481,
        "name": "p_b_p_b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u89e3\u6cd5\u4e00\uff1a\u9996\u5148\u60f3\u5230\u7684\u65b9\u6cd5\u5f53\u7136\u662f\u76f4\u63a5\u6a21\u62df\uff0c\u7528\u5e76\u67e5\u96c6\u6a21\u62df\u6bcf\u4e00\u5408\u5e76\u3002\n\n\u4f46\u662f\u6c42\u8def\u5f84\u8ddd\u79bb\u4e0d\u65b9\u4fbf\uff0c\u8981\u66b4\u529b\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5448\u6307\u6570\u589e\u957f\n\n\u53ea\u80fd\u768420\n\n~~QAQ~~\n\n\u89e3\u6cd52\uff1a\n### \u6b63\u89e3\u662f\u5229\u7528 \u5e26\u6743\u7684\u5e76\u67e5\u96c6\n\n\u6240\u8c13\u7684\u5e26\u6743\uff0c\u6307\u7684\u662f\u4e0d\u4ec5\u53ef\u4ee5\u67e5\u770b\u662f\u5426\u5728\u67d0\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u770b\u70b9\u5230\u6839\u7684\u8ddd\u79bb\n\n\n\n------------\n\u4f60\u4f1a\u60f3 \u90a3\u53ef\u4e0d\u53ef\u4ee5\u8def\u5f84\u538b\u7f29\uff1f\u5982\u679c\u8981\u538b\u7f29\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u5224\u65ad\u70b9\u5230\u9876\u70b9\u7684\u8ddd\u79bb\n\n\n------------\n\u5176\u5b9e\u662f\u53ef\u4ee5\u7684\n\n\u5728\u538b\u7f29\u7684\u65f6\u5019\u987a\u4fbf\u628a\u8def\u5f84\u957f\u5ea6\u4fdd\u5b58\u5728\u53e6\u5916\u7684\u4e00\u4e2a\u6570\u7ec4\u91cc\n\n\n------------\n```cpp\nint find(int now){\n    if(now!=fa[now]){\n\t\tint father=fa[now];\n\t\tfa[now]=find(fa[now]);\n\t\tw[now]+=w[father];\n\t}\n\treturn fa[now];\n}\n```\n\n\n------------\n\n\u4e0b\u9762\u4e0a\u672c\u849f\u84bb\u4e11\u964b\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5927\u6cd5\u597d\nusing namespace std;\n#define maxn 30010//\u5b8f\u5b9a\u4e49\nint w[maxn],fa[maxn],num[maxn],n;\n//w\u8868\u793a\u4ece\u81ea\u5df1\u5230\u6839\u7684\u8ddd\u79bb\uff0cnum\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5e76\u67e5\u96c6\u7684\u5143\u7d20\u4e2a\u6570\uff0cfa\u8868\u793a\u6839\nint find(int now){\n    if(now!=fa[now]){\n\t\tint father=fa[now];\n\t\tfa[now]=find(fa[now]);\n\t\tw[now]+=w[father];\n\t}\n\treturn fa[now];\n}\n//\u67e5\u627e+\u8def\u5f84\u538b\u7f29\n#define For(i,j,n) for(int i=(j);i<=(n);++i)\nvoid merge(int a,int b){\n\tint x=find(a),y=find(b);\n\tw[x]+=num[y];\n\tfa[x]=y;\n\tnum[y]+=num[x];\n    num[x]=0;\n}\n//\u5408\u5e76\nint main(){\n    For(i,1,maxn)fa[i]=i,num[i]=1;\n    //\u521d\u59cb\u5316\n    cin>>n;\t\n    For(i,1,n){\n    \tchar a;int b,c;\n    \tcin>>a>>b>>c;\n    \tif(a=='M')merge(b,c);\n    \telse if(find(b)==find(c))printf(\"%d\\n\",abs(w[b]-w[c])-1);//\u4e24\u4e2a\u70b9\u95f4\u7684\u8ddd\u79bb\u53ef\u4ee5\u7528abs(w[b]-w[c])-1\u8868\u793a\uff0c\u5e94\u4e3a\u91cd\u590db\u70b9\uff0c\u6240\u4ee5\u51cf\u53bb1\n      \t\t else printf(\"-1\\n\");\n    }\n \treturn 0;\n}\n```",
        "postTime": 1524368124,
        "uid": 42064,
        "name": "vivarock",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u6570\u636e\u89c4\u6a21\u5f88\u5927\uff0c\u5bfc\u81f4\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u6a21\u62df\uff0c\u5426\u5219\u5e76\u67e5\u96c6\u53d8\u6210\u94fe\uff0c\u80af\u5b9a\u8d85\u65f6\uff0c\u4e8e\u662f\u88ab\u903c\u65e0\u5948\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u3002\u4f46\u662f\u4e00\u65e6\u8def\u5f84\u538b\u7f29\u5c31\u4f1a\u7834\u574f\u539f\u6709\u7684\u6392\u5217\u7ed3\u6784\uff0c\u5bfc\u81f4\u65e0\u6cd5\u5b9e\u65f6\u7edf\u8ba1i\u4e0ej\u4e4b\u95f4\u6709\u591a\u5c11\u67b6\u98de\u8239\u3002\u4f46\u662f\u9898\u76ee\u5728\u8fd9\u91cc\u7ed9\u6211\u4eec\u5f00\u4e86\u4e00\u4e2a\u65b9\u4fbf\u4e4b\u95e8\uff0c\u5373\u4e0d\u8981\u6c42\u6c42\u51fai\u4e0ej\u4e4b\u95f4\u5177\u4f53\u662f\u54ea\u4e9b\u98de\u8239\uff0c\u53ea\u8981\u6c42\u6c42\u51fa\u98de\u8239\u7684\u6570\u91cf\u3002\u7531\u4e8e\u98de\u8239\u662f\u4e25\u683c\u5730\u6392\u6210\u4e00\u5217\uff0c\u5c31\u53ef\u4ee5\u60f3\u5230\u8fd9\u6837\u7684\u65b9\u6cd5\uff1a\u8bb0\u5f55\u6bcf\u67b6\u98de\u8239\u5230\u961f\u9996\u7684\u8ddd\u79bb\uff0c\u5c31\u80fd\u8f7b\u6613\u7b97\u51fa\u4e24\u67b6\u98de\u8239\u4e4b\u95f4\u7684\u98de\u8239\u6570\u91cf\u3002\u8fd9\u91cc\u6211\u4eec\u7528dth\u8bb0\u5f55\u5230\u961f\u9996\u7684\u8ddd\u79bb\uff0cdtt\u8bb0\u5f55\u5230\u961f\u5c3e\u7684\u8ddd\u79bb\uff08\u53ea\u6709\u961f\u9996\u624d\u66f4\u65b0\u5230\u961f\u5c3e\u7684\u8ddd\u79bb\uff0c\u65b9\u4fbf\u4e24\u4e2a\u961f\u5217\u5408\u5e76\u65f6\u9760\u540e\u7684\u90a3\u4e2a\u961f\u5217\u7684\u539f\u961f\u9996\u5230\u73b0\u961f\u9996\u7684\u8ddd\u79bb\u7528\u7684\uff09\u3002\u7528\u53d8\u91cfdth\u4e0efa\u914d\u5408\u8d77\u6765\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u98de\u8239\u5230fa\u6307\u5411\u7684\u98de\u8239\uff08\u4e0d\u4e00\u5b9a\u662f\u76ee\u524d\u7684\u961f\u9996\uff0c\u6709\u53ef\u80fd\u662f\u539f\u961f\u9996\uff09\u7684\u8ddd\u79bb\u3002\u8def\u5f84\u538b\u7f29\u65f6\uff0c\u538b\u7f29fa\u7684\u6307\u5411\u7684\u540c\u65f6\u7d2f\u52a0dis\u5373\u53ef\u3002\u6700\u540e\u5728\u5b9e\u9645\u8ba1\u7b97\u65f6\u4e5f\u8981\u518d\u505a\u4e00\u6b21\u7d2f\u52a0\uff08\u5373\u540d\u4e3acheck\u7684\u51fd\u6570\uff09\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#include<cmath>\n#include<stack>\nusing namespace std;\nstruct node\n{\n    int fa,dth,dtt;\n}no[30010];\nint find(int x)\n{\n    if(no[x].fa==x)\n    {\n        return x;\n    }\n    else\n    {\n        int mem=find(no[x].fa);\n        no[x].dth+=no[no[x].fa].dth;\n        no[x].fa=no[no[x].fa].fa;//\u538b\u7f29fa\u7684\u6307\u5411\u7684\u540c\u65f6\u7d2f\u52a0dis\n        return mem;\n    }\n}\nint check(int x)\n{\n    int cont=0;\n    for(;;)\n    {\n        cont+=no[x].dth;\n        x=no[x].fa;\n        if(x==no[x].fa)\n        {\n            break;\n        }\n    }\n    return cont;\n}\nint main()\n{\n    int t,i,x,y;\n    char re;\n    for(i=1;i<=30000;i++)\n    {\n        no[i].fa=i;\n        no[i].dth=0;\n        no[i].dtt=0;\n    }\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%c%c\",&re,&re);\n        scanf(\"%c%d%d\",&re,&x,&y);\n        if(re=='M')\n        {\n            int a,b;\n            a=find(x);\n            b=find(y);\n            no[a].dth=no[b].dtt+1;\n            no[b].dtt+=(no[a].dtt+1);//\u7ef4\u62a4\u5230\u961f\u9996\u8ddd\u79bb\u4e0e\u5230\u961f\u5c3e\u8ddd\u79bb\n            no[a].fa=b;\n        }\n        else\n        {\n            if(find(x)==find(y))\n            {\n                int a,b;\n                a=check(x);\n                b=check(y);\n                printf(\"%d\\n\",(max(a,b)-min(a,b)-1));\n            }\n            else\n            {\n                printf(\"-1\\n\");\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1509541393,
        "uid": 53927,
        "name": "YangQuijote",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u7ecf\u5178\u9898\u3002\u3002\n\n\u5dee\u4e0d\u591a\u53ef\u4ee5\u89c6\u4e3a\u6a21\u7248\u9898\u7684\u6539\u7248\n\n\u534a\u5e74\u524d\u7684\u4ee3\u7801\u5982\u4e0b\n\n\n```cpp\nvar\n  c,c1:char;\n  i,n,m,k,x,y:longint;\n  f,count,before:array[0..30001]of longint;\nfunction getfather(x:longint):longint;\nvar t:longint;\nbegin\n  if f[x]=x then getfather:=x else\n  begin\n    t:=getfather(f[x]);\n    before[x]:=before[f[x]]+before[x];\n    f[x]:=t;//\u8def\u5f84\u538b\u7f29\n    getfather:=f[x];\n  end;\nend;\nprocedure judge(x,y:longint);\nvar\n  fx,fy:longint;\nbegin\n  fx:=getfather(x);\n  fy:=getfather(y);\n  f[fx]:=fy;//\u5408\u5e76\u4e24\u4e2a\u96c6\n  before[fx]:=before[fx]+count[fy];\n  inc(count[fy],count[fx]);\nend;\nprocedure ask(x,y:longint);\nbegin\n  if getfather(x)<>getfather(y) then writeln(-1)\n  else writeln(abs(before[x]-before[y])-1);//\u8f93\u51fa\u7ed3\u679c\nend;\nbegin\n  for i:=1 to 30000 do begin count[i]:=1;f[i]:=i;end;//f\u6570\u7ec4\u521d\u59cb\u5316\uff0c\u8868\u793a\u7236\u4eb2\u8282\u70b9\n  readln(n);\n  for i:=1 to n do\n  begin\n    readln(c,x,y);\n    if c='M' then judge(x,y);//\u4e24\u79cd\u6307\u4ee4\n    if c='C' then ask(x,y);\n  end;\nend.\n```",
        "postTime": 1483075067,
        "uid": 19028,
        "name": "VCVCVCFop_zz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u5e26\u6743\u5e76\u67e5\u96c6\u6a21\u677f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u8fd9\u9053\u9898\u4e0d\u8981\u6c42\u6c42\u51fa\u4e24\u8f86\u6218\u8f66\u4e4b\u95f4\u7684\u6218\u8f66\u6570\u91cf\u7684\u8bdd\uff0c\u5c31\u662f\u4e00\u9053\u666e\u901a\u7684\u5e76\u67e5\u96c6\u3002\n\n\u4e0d\u8fc7\u82e5\u52a0\u4e0a\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5c31\u9700\u8981\u8ba9\u6211\u4eec\u7684\u5e76\u67e5\u96c6\u7ef4\u62a4\u66f4\u591a\u7684\u4fe1\u606f\u4e86\u3002\n\n\u603b\u5171\u6709\u54ea\u4e9b\u4fe1\u606f\uff1f\n\n$sz[i]$\u4ee3\u8868\u4ee5$i$\u4e3a\u961f\u5934\u7684\u8f66\u961f\u6570\u91cf\u3002\n\n$head[i]$\u4ee3\u8868\u4ece\u7ed3\u70b9$i$\u5230\u5f53\u524d\u884c\u7684\u961f\u5934\u6709\u591a\u5c11\u8f66\u3002\n\n\u5047\u8bbe\u6211\u4eec\u9700\u8981\u628a\u7b2c$u$\u884c\u8fde\u5230\u7b2c$v$\u884c\n\n\u6211\u4eec\u5148\u627e\u5230\u6bcf\u4e2a\u8f66\u961f\u7684\u8f66\u5934$fu$\uff0c$fv$\u3002\n\n\u5176\u6b21\uff0c\u6211\u4eec\u628a$head[fu] += sz[fv].$\n\n\u518d\u5176\u6b21\uff0c\u6211\u4eec\u628a$sz[fv]+=sz[fu].$\n\n\u6700\u540e\uff0c\u8fde\u63a5\u4e24\u4e2a\u7ed3\u70b9$bin[fu]=fv.$\n\n\u53ef\u662f\u5b83\u7684\u5b50\u8282\u70b9\u548b\u529e\uff1f\u6211\u4eec\u5728\u4e0b\u6b21\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u5b50\u8282\u70b9\u7684\u65f6\u5019\uff0c\u4f1a\u901a\u8fc7$find$\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u5982\u4f55\u66f4\u65b0\uff1f\u663e\u7136\uff0c\u6211\u4eec\u5728\u9012\u5f52\u5230\u7956\u5b97\u56de\u6eaf\u7684\u65f6\u5019\uff0c\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u7d2f\u52a0\uff0c\u5373$head[now]+=head[bin[now]].$\n\n\u663e\u7136\u5b83\u7684\u76f4\u63a5\u7236\u4eb2\u5df2\u7ecf\u5728\u8fde\u63a5\u64cd\u4f5c\u7684\u65f6\u5019\u66f4\u65b0\u5b8c\u4e86\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u4e0a\u9762\u7684\u7d2f\u52a0\u64cd\u4f5c\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u52a8\u6001\u7684\u66f4\u65b0\u4e86\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 30000 + 5;\n\nint bin[N] , sz[N] , head[N];\n\nint find(int x) {\n\tif(bin[x] == x ) return x;\n\tint root = find(bin[x]);\n\thead[x] += head[bin[x]];\n\tbin[x] = root;\n\treturn root;\n}\n\nint main () {\n\tint T;\n\tscanf(\"%d\" , &T);\n\tfor(int i = 1 ; i <= 30001 ; ++ i) bin[i] = i , sz[i] = 1;\n\twhile(T -- ) {\n\t\tchar opt;\n\t\tint u , v;\n\t\tcin >> opt >> u >> v;\n\t\tif(opt == 'M') {\n\t\t\tint fu = find(u) , fv = find(v);\n\t\t\thead[fu] += sz[fv];\n\t\t\tsz[fv] += sz[fu];\n\t\t\tbin[fu] = fv;\n\t\t} else {\n\t\t\tint fu = find(u) , fv = find(v);\n\t\t\tif(fu != fv) {puts(\"-1\");}\n\t\t\telse {\n\t\t\t\tprintf(\"%d\\n\" , abs(head[u] - head[v]) - 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1572428330,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u9898\u610f\n\n\u6709\u4e00\u4e2a\u5212\u5206\u6210n\u5217\u7684\u661f\u9645\u6218\u573a\uff0c\u5404\u5217\u7f16\u53f7\u4e3a1\uff0c2.....n\u3002\u6709n\u8258\u6218\u8230\uff0c\u4e5f\u4f9d\u6b21\u7f16\u53f71\uff0c2.....n,\u5176\u4e2d\u7b2ci\u53f7\u6218\u8230\u4f4d\u4e8e\u7b2ci\u5217\u3002\n\n\u6709m\u6761\u6307\u4ee4\uff0c\u6bcf\u6761\u6307\u4ee4\u683c\u5f0f\u5982\u4e0b\n\n1. M i j \u8868\u793a\u8ba9\u7b2ci\u53f7\u6218\u8230\u6240\u5728\u5217\u7684\u5168\u90e8\u6218\u8230\u4fdd\u6301\u539f\u6709\u987a\u5e8f\uff0c\u63a5\u5728\u7b2cj\u8258\u6218\u8230\u7684\u5c3e\u90e8\u3002\n\n2. C i j \u8868\u793a\u8be2\u95ee\u7b2ci\u8258\u6218\u8230\u548c\u7b2cj\u8258\u6218\u8230\u5f53\u524d\u662f\u5426\u518d\u540c\u4e00\u5217\u4e2d\uff0c\u5982\u679c\u518d\u540c\u4e00\u5217\u4e2d\uff0c\u5b83\u4eec\u4e4b\u95f4\u9694\u4e86\u591a\u5c11\u8258\u6218\u8230\u3002\n\nN<=30000,M<=5* $10^5$\n\n\u4e00\u9053\u7b80\u5355\u7684\u5e76\u67e5\u96c6\uff0c\u4e00\u6761\u94fe\u4e5f\u662f\u4e00\u68f5\u6811\uff0c\u53ea\u4e0d\u8fc7\u662f\u6811\u7684\u7279\u6b8a\u5f62\u6001\uff0c\u56e0\u6b64\u53ef\u4ee5\u628a\u6bcf\u4e00\u5217\u6218\u8230\u770b\u4f5c\u4e00\u4e2a\u96c6\u5408\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\u6700\u521d\uff0cN\u4e2a\u6218\u8230\u6784\u6210N\u4e2a\u72ec\u7acb\u7684\u96c6\u5408\u3002\n\n\u5728\u6ca1\u6709\u8def\u5f84\u538b\u7f29\u7684\u60c5\u51b5\u4e0bfa[x]\u5c31\u4ee3\u8868\u6392\u5728x\u524d\u9762\u90a3\u8258\u6218\u8230\u7684\u7f16\u53f7\uff0c\u4e00\u4e2a\u96c6\u5408\u7684\u4ee3\u8868\u5c31\u662f\u4f4d\u4e8e\u524d\u9762\u7684\u6218\u8230\uff0c\u53e6\u5916\u8ba9\u6811\u4e0a\u6bcf\u6761\u8fb9\u5e26\u6743\u503c1\uff0c\u8fd9\u6837\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb-1\u5c31\u662f\u4e8c\u8005\u4e4b\u95f4\u95f4\u9694\u7684\u6218\u8230\u6570\u91cf\n\n\u5728\u8003\u8651\u8def\u5f84\u538b\u7f29\u7684\u60c5\u51b5\u4e0b,\u6211\u4eec\u989d\u5916\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4d\uff0cd[x]\u8bb0\u5f55\u6218\u8230x\u4e0efa[x]\u4e4b\u95f4\u7684\u8fb9\u7684\u6743\u503c\u3002\u5728\u8def\u5f84\u538b\u7f29\u628ax\u76f4\u63a5\u6307\u5411\u6811\u6839\u7684\u540c\u65f6\uff0c\u6211\u4eec\u628ad[x]\u66f4\u65b0\u4e3a\u4ecex\u5230\u6811\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u6743\u4e4b\u548c\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9Get\u51fd\u6570\u7a0d\u4ef7\u4fee\u6539\uff0c\u5373\u53ef\u5b9e\u73b0\u5bf9d\u6570\u7ec4\u7684\u7ef4\u62a4\u3002\n\n```cpp\nint get(int x){\n\tif(x==fa[x]) return x;\n\tint root=get(fa[x]); //\u9012\u5f52\u8ba1\u7b97\u96c6\u5408\u4ee3\u8868 \n\td[x]+=d[fa[x]];//\u7ef4\u62a4\u6570\u7ec4d \n\treturn fa[x]=root;//\u8def\u5f84\u538b\u7f29 \n} \n```\n\u5f53\u6536\u5230 C x y \u6307\u4ee4\u65f6\u5206\u522b\u6267\u884c get(x)\u548cget(y)\u5b8c\u6210\u67e5\u8be2\u548c\u8def\u5f84\u538b\u7f29\uff0c\u5f53\u4e8c\u8005\u7684\u8fd4\u56de\u503c\u76f8\u540c\u65f6\uff0c\u5219\u8bf4\u660ex\uff0cy\u5728\u540c\u4e00\u5217\u3002\u56e0\u4e3ax\u548cy\u6b64\u65f6\u90fd\u5df2\u7ecf\u6307\u5411\u6811\u6839\uff0c\u6240\u4ee5d[x]\u4fdd\u5b58\u4e86\u4f4d\u4e8ex\u4e4b\u524d\u7684\u6218\u8230\u6570\u91cf\uff0cd[y]\u4fdd\u5b58\u4e86\u4f4d\u4e8ey\u4e4b\u524d\u7684\u6218\u8230\u6570\u91cf\uff0c\u4e24\u8005\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u518d\u51cf\u53bb1\u5c31\u662fx\uff0cy\u4e4b\u95f4\u76f8\u9694\u7684\u6218\u8230\u6570\u91cf\u3002\n\n\u5f53\u6536\u5230 M x y \u6307\u4ee4\u65f6\u628ax\u7684\u6811\u6839\u4f5c\u4e3ay\u7684\u6811\u6839\u7684\u5b50\u8282\u70b9\uff0c\u8fde\u63a5\u7684\u65b0\u8fb9\u7684\u6743\u503c\u5e94\u8be5\u8bbe\u4e3a\u5408\u5e76\u4e4b\u524d\u96c6\u5408y\u7684\u5927\u5c0f\uff08\u7531\u9898\u610f\uff0c\u96c6\u5408y\u4e2d\u7684\u6240\u6709\u6218\u8230\u90fd\u5728\u96c6\u5408x\u4e4b\u524d\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2asize\u6570\u7ec4\u5728\u6bcf\u4e2a\u6811\u6839\u4e0a\u8bb0\u5f55\u96c6\u5408\u5927\u5c0f\u3002\n\n```cpp\nvoid merge(int x,int y){\n\tx=get(x);y=get(y);\n\tfa[x]=y;d[x]=size[y];\n\tsize[y]+=size[x];\n}\n```\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\nusing namespace std;\nconst int maxn=30010;\nint T,fa[maxn],d[maxn],size[maxn];\nint get(int x){\n    if(x==fa[x]) return x;\n    int root=get(fa[x]);\n    d[x]+=d[fa[x]];\n    return fa[x]=root;\n}\nint main(){\n    for(int i=1;i<=maxn;++i){\n        fa[i]=i;\n        size[i]=1;\n    }\n    scanf(\"%d\",&T);\n    while(T--){\n        char k[2];\n        int u,v;\n        scanf(\"%s\",k);\n        scanf(\"%d%d\",&u,&v);\n        int fa1=get(u);\n        int fa2=get(v);\n        if(k[0]== 'M'){\n            fa[fa1]=fa2;\n            d[fa1]=size[fa2];\n            size[fa2]+=size[fa1];\n        }\n        else{\n            if(fa1!=fa2) printf(\"-1\\n\");\n            else printf(\"%d\\n\",abs(d[u]-d[v])-1);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1566829836,
        "uid": 141637,
        "name": "End_donkey",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u4e4d\u4e00\u770b\u6709\u4e24\u4e2a\u8981\u6c42\n### 1.\u5224\u65ad\u4e24\u8258\u6218\u8230\u662f\u5426\u5728\u540c\u4e00\u5217\u4e2d\n### 2.\u8ba1\u7b97\u4e24\u8258\u6218\u8230\u4e4b\u95f4\u6709\u591a\u5c11\u6218\u8230\n\u8fd9\u9053\u9898\u7279\u6b8a\u4e4b\u5904\u4e3b\u8981\u5728\u7b2c\u4e8c\u4e2a\u8981\u6c42\u672c\u849f\u84bb\u770b\u4e0a\u9762\u7684\u5927\u4f6c\u90fd\u662f\u76f4\u63a5\u5728\u7ebf\u521a\uff0c\u4f46\u8fd9\u9053\u9898\u53ef\u4ee5\u79bb\u7ebf\u7ed3\u5408\u524d\u7f00\u548c\u6709\u6728\u6709\u53d1\u73b0\u3002\u5e9f\u8bdd\u5c11\u8bf4\uff0c\n\u6b65\u9aa4\u5982\u4e0b\uff1a\n1. \u5148\u6c42\u51fa\u6700\u7ec8\u72b6\u6001\uff0c\u6807\u8bb0\u6bcf\u4e00\u5217\u4e2d\u6bcf\u4e00\u8258\u6218\u8230\u7684\u5e8f\u53f7\uff081-30000\uff09\n\n1. \u7ed9\u6700\u7ec8\u72b6\u6001\u7684\u6bcf\u4e00\u5217\u7684\u6bcf\u4e00\u8258\u6218\u8230\u90fd\u6807\u8bb0\u5728\u6bcf\u4e00\u5217\u7684\u987a\u5e8f\u53f7\n1. \u95ee\u54ea\u4e24\u8258\u6218\u8230\u4e4b\u95f4\u7684\u6218\u8230\u6570\uff0c\u53ea\u8981\u628a\u987a\u5e8f\u53f7\u76f8\u51cf\u518dabs\u51cf1\u5c31\u53ef\u4ee5\u4e86\n## ~~\u662f\u4e0d\u662f\u7406\u89e3\u8d77\u6765\u76f8\u5f53\u7b80\u5355~~\n\u5012\u7740\u60f3\u4e00\u60f3\uff0c\u5982\u679c\u5c06\u987a\u5e8f\u6807\u597d\u7684\u6700\u7ec8\u72b6\u6001\u62c6\u5206\uff0c\u662f\u4e0d\u662f\u62c6\u5206\u51fa\u7684\u6bcf\u4e00\u5217\u7684\u6218\u8230\u7684\u76f8\u5bf9\u4f4d\u7f6e\u90fd\u6ca1\u6709\u6539\u53d8\uff0c\u7531\u4e8e\u4e24\u8258\u6218\u8230\u95f4\u7684\u6218\u8230\u6570\u53ea\u4e0e\u4e24\u6218\u8230\u4e4b\u95f4\u7684\u987a\u5e8f\u53f7\u4e4b\u5dee\u6709\u5173\uff0c\u6240\u4ee5\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684O(1)\u8ba1\u7b97\u51fa\u7ed3\u679c\u4e86\n#### \u81f3\u4e8e\u8981\u6c42\u4e00\uff0c\u53ea\u8981\u7b80\u5355\u7684\u7528\u5e76\u67e5\u96c6\u6a21\u62df\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u4e2d\u5c31ok\u4e86\n\u5949\u4e0aAC\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdlib>\n#include<vector>\nusing namespace std;\nstruct Com{\n\tchar type;int x;int y;\n};\nstruct Node{\n\tint val,rank;\n\tbool isHead=false;\n\tNode* next=0;\n\tNode* pre=0;\n\tNode* head=this;\n};\nvector<Com> M;\nvector<Com> MC;\nvoid addCom(char c,int a,int b){\n\tCom com;com.x=a;com.y=b;com.type=c;\n\tif(c=='M')M.push_back(com);\n\tMC.push_back(com);\n}\nconst int MAX_N=3*100*100;\nint P[MAX_N+50],K[MAX_N+50];\nvoid init(int x){\n\tfor(int i=1;i<=x;i++){\n\t\tP[i]=i;K[i]=0;\n\t}\n}\nint find(int x){\n\tif(x==P[x])return x;\n\telse return P[x]=find(P[x]);\n}\nvoid unite(int x,int y){\n\tif((x=find(x))==(y=find(y)))return;\n\tif(K[x]>K[y])P[y]=x;\n\telse{\n\t\tP[x]=y;\n\t\tif(K[x]==K[y])K[y]++;\n\t}\n}\nbool theSame(int x,int y){\n\treturn find(x)==find(y);\n}\nNode* findHead(Node* node){\n\tif(node->pre==0)return node;\n\telse return node->head=findHead(node->head);\n}\nNode matrix[MAX_N+3];\nNode* end[MAX_N+3];\nint main(){\n\tios::sync_with_stdio(false);\n\tint n;cin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tchar c;int a,b;cin>>c>>a>>b;\n\t\taddCom(c,a,b);\n\t}\n\tfor(int i=1;i<=3*100*100;i++){\n\t\tmatrix[i].val=i;\n\t\tmatrix[i].isHead=true;\n\t\tend[i]=&matrix[i];\n\t}\n\tfor(int i=0;i<M.size();i++){\n\t\tCom com=M[i];int x=com.x;int y=com.y;\n\t\tx=findHead(&matrix[x])->val;y=findHead(&matrix[y])->val;\n\t\tmatrix[x].isHead=false;\n\t\tend[y]->next=&matrix[x];\n\t\tmatrix[x].pre=end[y];\n\t\tmatrix[x].head=end[y]->head;\n\t\tend[y]=end[x];\n\t}\n\tint count=0;\n\tfor(int i=1;i<=MAX_N;i++){\n\t\tNode* node=&matrix[i];\n\t\tif(node->isHead){\n\t\t\tnode->rank=count++;\n\t\t\twhile(node->next!=0){\n\t\t\t\tnode=node->next;\n\t\t\t\tnode->rank=count++;\n\t\t\t}\n\t\t}\n\t}\n\tinit(MAX_N+2);\n\tfor(int i=0;i<MC.size();i++){\n\t\tCom com=MC[i];\n\t\tif(com.type=='M')unite(com.x,com.y);\n\t\tif(com.type=='C'){\n\t\t\tif(theSame(com.x,com.y))\n\t\t\tcout<<abs(matrix[com.x].rank-matrix[com.y].rank)-1<<endl;\n\t\t\telse cout<<-1<<endl;\n\t\t}\n\t}\n}\n\n\n```\n",
        "postTime": 1565357077,
        "uid": 227604,
        "name": "Xing_Mang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u8fd9\u7b97\u662f\u6a21\u677f\u9898\u5427\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u662f\u6765\u5b66\u4e60\u5e76\u67e5\u96c6\u7684\u76f8\u5173\u77e5\u8bc6\u7684\uff0c\u90a3\u6211\u5c31\u4ece\u5934\u5f00\u59cb\u8bb2\uff0c\u4ee5\u57fa\u7840\u77e5\u8bc6\u4e3a\u4e3b\n\n\n------------\n\n\u89e3\u9898\u601d\u8def\uff1a\u5e26\u6743\u5e76\u67e5\u96c6+\u8def\u5f84\u538b\u7f29\n\n\u7528dis\u6570\u7ec4\u50a8\u5b58\u67d0\u4e00\u8282\u70b9\u5230\u4ed6\u6240\u5728\u961f\u5217\u961f\u9996\u7684\u8ddd\u79bb\uff0c\u6700\u540e\u7528\u4e24\u4e2a\u8282\u70b9\u5230\u8282\u70b9\u8ddd\u79bb\u7684\u5dee\u503c\u5f97\u51fa\u4e24\u70b9\u95f4\u8ddd\u79bb\n\n\n------------\n\nPart I \n\u5e26\u6743\u5e76\u67e5\u96c6\n\n\u6211\u4eec\u7528fa[i]\u6570\u7ec4\u8868\u793ai\u8282\u70b9\u7684\u7236\u4eb2\uff0c\u521d\u59cb\u5316\u4e3ai\n\u82e5\u67d0\u4e00\u4e2a\u8282\u70b9\u7684fa\u7b49\u4e8e\u4ed6\u81ea\u5df1\uff08fa[i]=i\uff09\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u8fd8\u6ca1\u6709\u88ab\u79fb\u52a8\u8fc7\uff0c\u4ed6\u5c31\u662f\u7b2ci\u961f\u5217\u7684\u961f\u9996\n\u4e8e\u662f\u5f97\u5230find\u51fd\u6570\n```cpp\nint find(int x)\n{\n\tif (fa[x]==x) return x;\n\treturn find(fa[x]);\n}\n```\n\n\u540c\u65f6\uff0c\u7528dis[i]\u8868\u793ai\u8282\u70b9\u5230\u4ed6\u6240\u5728\u961f\u5217\u961f\u9996\u7684\u8ddd\u79bb\uff0c\u521d\u59cb\u5316\u4e3a0\u3002length[i]\u8868\u793a\u7b2ci\u961f\u5217\u7684\u957f\u5ea6\uff08\u663e\u7136\u8fd9\u4e00\u961f\u5217\u7684\u961f\u9996\u4e3ai\uff09\uff0c\u521d\u59cb\u5316\u4e3a1\u3002\u5f53\u79fb\u52a8X\u961f\u5217\u5230Y\u540e\u65f6\uff0c\u5219\u6709\uff1a\n\nfa[x]=fa[y],dis[x]=length[y],length[y]+=length[x]\n\n\u6ce8\u610f\uff1a\u6211\u4eec\u5df2\u65e0\u6cd5\u5c06\u5176\u4ed6\u961f\u5217\u79fb\u52a8\u5230\u539fx\u961f\u5217\uff0c\u6545\u6ca1\u6709\u5fc5\u8981\u5c06length[x]\u6539\u4e3a0\n\n\u4e8e\u662f\u5f97\u5230move\u51fd\u6570\n```cpp\nvoid move(int x,int y)\n{\n\tint fx=find(x);\n\tint fy=find(y);\n\tfa[fx]=fy;\n\tdis[fx]+=length[fy];\t\n\tlength[fy]+=length[fx];\n}\n```\n\n\n\u90a3\u4e48check\u51fd\u6570\u5c31\u7b80\u5355\u5566\n\n```cpp\nvoid check(int x,int y)\n{\n\tint ffx=find(x); \n\tint ffy=find(y); \n\tif (ffx!=ffy)\n\t{printf(\"-1\\n\"); return;}\n\tprintf(\"%d\\n\",abs(dis[x]-dis[y])-1);\n}\n```\n\n\n\u4ee5\u4e0a\u7a0b\u5e8f\u6574\u5408\u540e\uff0c\u671f\u671b\u5f97\u520660\u5206\u300260%AC+40%TLE\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u4f18\u5316\u5462\uff1f\n\n\n------------\n\nPart II \u8def\u5f84\u538b\u7f29\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u67d0\u4e00\u8282\u70b9x\u5728\u53e6\u4e00\u8282\u70b9y\u4e0a\u65b9\uff0c\u90a3\u4e48\u4ed6\u3001\u5b83\u6c38\u8fdc\u5728y\u4e0a\u65b9\uff0c\u800c\u4e14\u4e24\u70b9\u95f4\u8ddd\u6052\u5b9a\u3002\uff08\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u628a\u5176\u4ed6\u961f\u5217\u63d2\u5165\u5230\u5b83\u4eec\u4e2d\u95f4\uff09\n\n\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u8fdb\u884c\u8def\u5f84\u538b\u7f29\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\nfa[2]=1,fa[3]=2,fa[4]=3; \u4efb\u610f\u4e24\u70b9\u95f4\u8ddd\u4e3a1\n\n\u538b\u7f29\u4e3a\uff1a\n\nfa[2]=1,dis[2]=1,fa[3]=1,dis[3]=2,fa[4]=1,dis[4]=3\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u7528\u56de\u6eaf\u5b9e\u73b0\uff0c\u5728\u4e00\u6b65\u6b65\u627e\u5230\u961f\u5217\u961f\u9996\u540e\uff0c\u4e00\u6b65\u6b65\u539f\u8def\u8fd4\u56de\uff0c\u628a\u6bcf\u4e00\u8282\u70b9\u7684fa\u90fd\u6539\u4e3a\u961f\u9996\uff0c\u5e76\u76f8\u5e94\u7684\u6539\u53d8dis\u5373\u53ef\u3002\u4e8e\u662f\u5f97\u5230\u4f18\u5316\u540e\u7684find\u51fd\u6570\n\n```cpp\nint find(int xx)\n{\n\tif (fa[xx]==xx) return xx;\n\tint father=find(fa[xx]);\n\tdis[xx]+=dis[fa[xx]];\n\tfa[xx]=father;\n\treturn father;\n}\n```\n\n\n\n------------\n\n\u5b8c\u6574\u4ee3\u7801\uff0c\u68c0\u9a8c\u540eAC\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath> \n#define num 30001\nusing namespace std;\nint n,fa[30005],dis[30005],length[30005];\nint read()\n{\n\tint x=0,f=1; char c=getchar();\n\twhile (c<'0' || c>'9') {if (c=='-') f=-1; c=getchar();}\n\twhile (c>='0'&&c<='9') {x=(x<<3)+(x<<1)+(c^48); c=getchar();}\n\treturn x*f;\n}\nint find(int xx)\n{\n\tif (fa[xx]==xx) return xx;\n\tint father=find(fa[xx]);\n\tdis[xx]+=dis[fa[xx]];\n\tfa[xx]=father;\n\treturn father;\n}\nvoid move(int x,int y)\n{\n\tint fx=find(x);\n\tint fy=find(y);\n\tfa[fx]=fy;\n\tdis[fx]+=length[fy];\t\n\tlength[fy]+=length[fx];\n}\nvoid check(int x,int y)\n{\n\tint ffx=find(x); \n\tint ffy=find(y); \n\tif (ffx!=ffy)\n\t{printf(\"-1\\n\"); return;}\n\tprintf(\"%d\\n\",abs(dis[x]-dis[y])-1);\n}\nint main()\n{\n\tn=read();\n\tfor (int i=1;i<=num;i++) fa[i]=i;\n\tfor (int i=1;i<=num;i++) length[i]=1;\n\tfor (int w=1;w<=n;w++)\n\t{\n\t\tchar c; cin>>c;\n\t\tint x=read(),y=read();\n\t\tif (c=='M') move(x,y);\n\t\tif (c=='C') check(x,y);\n\t}\n\treturn 0;\n}\n\n\n```\n\n\n\n------------\n\n\u6700\u540e\u8bf4\u660e\u51e0\u70b9\uff1a\n\n1\u3001\u6ca1\u6709\u5fc5\u8981\u5173\u6ce8fa[i]\u5230\u5e95\u662fi\u8282\u70b9\u7684\u4e0a\u51e0\u4f4d\uff0c\u56e0\u4e3adis\u6570\u7ec4\u968f\u4e4b\u53d8\u5316\uff0c\u52a0\u4e0a\u4e0a\u8ff0\u6027\u8d28\uff0c\u4ed6\u5df2\u7ecf\u8986\u76d6\u4e86\u4e2d\u95f4\u533a\u57df\u3002\n\n2\u3001\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u6709bug\u758f\u6f0f\u8bf7\u5927\u5bb6\u4e0d\u8981\u55b7\uff0c\u6709\u95ee\u9898\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u63d0\u95ee\uff0c\u6211\u4f1a\u5e38\u5e38\u5173\u6ce8\u3002\u6700\u540e\u5e0c\u671b\u9898\u89e3\u5bf9\u5927\u5bb6\u6709\u7528\uff0c\u795d\u5927\u5bb6AC\u6b64\u9898\uff0cAK IOI\u3002\n\n3\u3001\u5982\u6709\u9700Pascal\u4ee3\u7801\u8bf7\u5728\u8bc4\u8bba\u533a\u56de\u590d\u3002",
        "postTime": 1555503657,
        "uid": 120836,
        "name": "Han_Innocence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u534a\u66b4\u529b\u505a\u6cd5\uff0c\u5438\u7f8a\u53ef\u4ee5\u8fc7QAQ\u3002\n\n\u7528\u961f\u5217\u6240\u5728\u4f4d\u7f6e\u6765\u7f16\u6392\u5e8f\u53f7\u4ee5\u4f9b\u67e5\u8be2\uff0c\u8f6c\u79fb\u65f6\u76f4\u63a5\u91cd\u65b0\u7f16\u6392\u5e8f\u53f7\u3002\n\n\u8be2\u95ee\u65f6\u8f93\u51fa \uff1a    \uff5cx\u7684\u5e8f\u53f7-y\u7684\u5e8f\u53f7\uff5c-1    \u6216 -1\uff08find\u67e5\u8be2\u4e0d\u662f\u540c\u4e00\u4e2a\u7956\u5b97\uff09\n\n\u66f4\u65b0\u5e8f\u53f7\u5927\u6982\u662f\u8fd9\u6837\uff0c\u6bd4\u5982\u6709\u961f\u52171 2 3 4\uff0c\u4f60\u8981\u5c061 2 3\u653e\u5230\u540e\u9762\uff0c\u610f\u5473\u7740\u6bcf\u4e2a\u6570\u524d\u9762\u90fd\u591a\u4e86\u8981\u53bb\u7684\u961f\u5217\u7684\u6240\u6709\u6570\u7684\u6570\u91cf\uff0c\u5373\u66f4\u65b0\u4e3a1+4=5\uff0c2+4=6\uff0c3+4=7\u3002\n\n\u4ee3\u7801\u6ce8\u91ca\u4f1a\u8be6\u7ec6\u89e3\u91ca\u3002\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,x,y,f[3000005][2],la[3000005],fa[3000005];//f\u7684\u4e24\u4e2a\u5b58\u50a80\u5b58\u50a8\u81ea\u5df1\u7236\u4eb2\uff0c1\u5b58\u50a8\u81ea\u5df1\u5728\u961f\u4f0d\u7684\u4f4d\u7f6e\uff0cla\u662f\u6240\u5728\u961f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u6570 \nchar p;\nint read(){//\u597d\u50cf\u52a0\u4e0d\u52a0\u90fd\u4e00\u6837 \n    int rv=0,fh=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-') fh=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        rv=(rv<<1)+(rv<<3)+c-'0';\n        c=getchar();\n    }\n    return rv*fh;\n}\nint find(int x)//\u53ea\u7528\u6765\u5feb\u901f\u627e\u7956\u5148 \n{\n\tif(fa[x]==x)return x;\n\treturn fa[x]=find(fa[x]);\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tf[i][0]=i;//\u548c\u540e\u9762fa\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u8fc7\u7528\u9014\u4e0d\u540c \n\t\tf[i][1]=1;//\u81ea\u5df1\u662f\u7b2c\u4e00\u4e2a \n\t\tla[i]=i;//\u81ea\u5df1\u662f\u6700\u540e \n\t\tfa[i]=i;//\u521d\u59cb\u5316 \n\t}\n\twhile(n--)\n\t{\n\t\tscanf(\"%s\",&p);x=read();y=read();\n\t\tif(p=='M')\n\t\t{\n\t\tint fax=find(x),fay=find(y),k=f[la[fay]][1];//k\u662fy\u6240\u5728\u5217\u7684\u6700\u540e\u4e00\u4e2a\u6570\u7684\u5e8f\u53f7\uff0c\u5373\u6b64\u6570\u5217\u4e2a\u6570 \u3002 \n\t\tfor(int i=la[fax];;i=f[i][0])\n\t\t{\n\t\tf[i][1]+=k;//\u81ea\u5df1\u524d\u65b9\u591a\u4e86k\u4e2a\u6218\u8230 \n\t\tif(i==fax)break;//\u4e0d\u518d\u7ee7\u7eed\u66f4\u65b0 \n\t\t}\n\t\tf[fax][0]=la[fay];//\u66f4\u65b0\u81ea\u5df1\u7684\u7236\u4eb2\u7528\u4f5c\u540e\u7ee7\u66f4\u65b0 \n\t\tfa[fax]=fay;//\u76f4\u63a5\u6362\u7956\u5b97\u7528\u4f5c\u627e\u7956\u5148 \n\t\tla[fay]=la[fax];//y\u6240\u5728\u5217\u7684\u6700\u540e\u4e00\u4e2a\u6570\u53d8\u6210x\u6240\u5728\u5217\u7684\u6700\u540e\u4e00\u4e2a\u6570 \n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(find(x)!=find(y)){cout<<-1<<endl;continue;}//\u4e0d\u662f\u4e00\u4e2a\u7956\u5148 \n\t\t\tcout<<abs(f[x][1]-f[y][1])-1<<endl;//\u8f93\u51fa\u5e8f\u53f7\u5dee\u503c \n\t\t } \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1554039050,
        "uid": 121612,
        "name": "\u5728\u60f3Peach",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u4e00\u9053\u6709\u8da3\u7684\u9898\u3002\n\n\u8fd9\u9898\u5927\u773c\u775b\u4e00\u770b\u5c31\u611f\u89c9\u5e76\u67e5\u96c6\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u9898\u76ee\u8981\u6c42\u7684\u5408\u5e76\u64cd\u4f5c\uff0c\u4f46\u662f\uff0c\u5e76\u67e5\u96c6\u53ea\u662f\u4e00\u4e2a\u96c6\u5408\u800c\u5df2\uff0c\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\u5982\u4f55\u505a\u5230\u67e5\u8be2\u9898\u76ee\u8981\u6c42\u7684\u201c\u4e4b\u95f4\u201d\u7684\u4e2a\u6570\u5462\uff1f\n\n\u4e0d\u59a8\u60f3\u60f3\u5e76\u67e5\u96c6\u7684\u56fe\u5f62\u672c\u8d28\u3002\u6211\u4eec\u53d1\u73b0\u662f\u4e00\u9897\u6811\uff0c\u5982\u679c\u6ca1\u6709\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u7684\u8bdd\uff0c\u5c31\u4f1a\u5f88\u597d\u7684\u6709\u4e00\u4e2a\u513f\u5b50\u548c\u7236\u4eb2\u8282\u70b9\u7684\u5173\u7cfb\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5229\u7528\u8fd9\u4e00\u70b9\u6b63\u597d\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u53ea\u8981\u5728\u5e76\u67e5\u96c6\u4e0a\u52a0\u5165\u201c\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u6709\u51e0\u4e2a\u5143\u7d20\u201d\uff0c\u7136\u540e\u7c7b\u4f3c\u524d\u7f00\u548c\u4e00\u6837\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\u505a\u5dee\u5c31\u53ef\u4ee5\u6c42\u51fa\u4e86\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u53ef\u4ee5\u8ddf\u7740\u8def\u5f84\u538b\u7f29\u4e00\u8d77\u5408\u5e76\u8d77\u6765\uff0c\u6240\u4ee5\u8fd8\u662f\u5e76\u67e5\u96c6\u7684\u590d\u6742\u5ea6\u3002$O(\u03b1(n))$\n\n\u6709\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u70b9\uff0c\u5c31\u662f\u672c\u6765\u6211\u4eec\u9700\u8981\u4e00\u4e2a$d(dis)$\u6570\u7ec4\u4fdd\u5b58\u8def\u5f84\u957f\u5ea6\uff0c\u800c\u8fd9\u4e2a\u4e1c\u897f\u7684\u7ef4\u62a4\u663e\u7136\u81ea\u5df1\u7ef4\u62a4\u4f1a\u5f88\u9ebb\u70e6\uff0c\u53ef\u4ee5\u52a0\u4e0a\u4e00\u4e2a$num$\u6570\u7ec4\u4fdd\u5b58\u4e00\u4e0b\u5f53\u524d\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u7136\u540e\u7528$num$\u53bb\u4e0d\u65ad\u66f4\u65b0$d$\u7684\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u800c\u6211\u4eec\u53d1\u73b0\uff0c$num$\u7684\u503c\u867d\u7136\u91cd\u8981\uff0c\u4f46\u662f\u6bcf\u6b21\u6211\u4eec\u5176\u5b9e\u53ea\u8981\u7ef4\u62a4\u597d\u63a5\u4e0a\u7684\u90a3\u4e2a\u96c6\u5408\u53bb\u8fdb\u4e00\u6b65\u66f4\u65b0\u5c31\u53ef\u4ee5\u4e86\uff0c\u539f\u96c6\u5408\u7684$num$\u968f\u4fbf\u600e\u4e48\u641e\u90fd\u6ca1\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u65e2\u7406\u89e3\u4e3a$num[i]$\u662f\u4fdd\u5b58\u7684\u7b2ci\u4e2a\u96c6\u5408\u7684\u5143\u7d20\uff0c\u88ab\u62ff\u8d70\u7684\u96c6\u5408$num[i]=0$\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a$num[i]$\u4fdd\u5b58\u7684\u662f\u7b2ci\u4e2a\u5143\u7d20\u6240\u5728\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u7136\u540e$num[i]=num[j]$\uff0c\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n### $code:$\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=30010;\nint fa[maxn];\nint d[maxn],num[maxn];\nint find(int x){\n    if(fa[x]==x) return x;\n    int fat=fa[x];\n    fa[x]=find(fa[x]);\n    d[x]+=d[fat];\n    num[x]=num[fa[x]];\n    return fa[x];\n}\ninline void unionn(int x,int y){\n    fa[x]=y;\n    d[x]+=num[y];\n/*1:*/num[x]+=num[y];\n    num[y]=num[x];\n/*2:*///num[y]+=num[x];\n    //num[x]=0;\n}\nint T;\nint main(){\n    cin>>T;\n    for(int i=1;i<=maxn-1;i++) fa[i]=i,num[i]=1;\n    while(T--){\n        char op;int i,j;\n        cin>>op>>i>>j;\n        if(op=='M'){\n            int fi=find(i),fj=find(j);\n            unionn(fi,fj);//\u628ai\u63a5j \n        }\n        else{\n            int fi=find(i),fj=find(j);\n            if(fi!=fj){\n                puts(\"-1\");\n            }\n            else printf(\"%d\\n\",abs(d[i]-d[j])-1);\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1548999897,
        "uid": 64611,
        "name": "\u4eba\u6b87\u7269\u5df2\u975e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5751\u4e86\u62112\u4e2a\u5c0f\u65f6\uff0c\u6700\u540e\u624d\u53d1\u73b0\uff0c\u662f\u4e2a\u7ed3\u6784\u4f53\u5e76\u67e5\u96c6\u3002\n\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=30001;\nstruct Fleet{\n\tint head;\n\tint cnt;\n\tint before;\n}a[N];\nint find(int x){//\u67e5\u627e\u5f00\u5934\u8239\u53f7\n\tint f;\n\tif(x==a[x].head){\n\t\treturn x;\n\t}else{\n\t\tf=find(a[x].head);\n\t\ta[x].before+=a[a[x].head].before;\n\t\ta[x].head=f;\n\t\treturn f;\n\t} \n}\nvoid modify(int i,int j){//\u5408\u5e76\n\tint hi,hj;\n\thi=find(i);\n\thj=find(j);\n\ta[hi].head=hj;\n\ta[hi].before+=a[hj].cnt;\n\ta[hj].cnt+=a[hi].cnt;\n}\nint query(int i,int j){//\u67e5\u8be2\u4e2a\u6570\n\tif(find(j)!=find(i)){\n\t\treturn -1;\n\t}else{\n\t\treturn (int)fabs(a[i].before-a[j].before)-1;\n\t}\n}\nint main(){\n\tint i,j,T,k;\n\tchar cmd;\n\tcin>>T;\n\tfor(k=1;k<=N;k++){\n\t\ta[k].head=k;\n\t\ta[k].before=0;\n\t\ta[k].cnt=1;\n\t}\n\tfor(k=1;k<=T;k++){\n\t\tcin>>cmd>>i>>j;\n\t\tif(cmd=='M'){\n\t\t\tmodify(i,j);\n\t\t}else{\n\t\t\tcout<<query(i,j)<<endl;\n\t\t}\t\n\t}\n\treturn ;//\u9632\u6284\u6807\u8bb0\n}\n```",
        "postTime": 1544946156,
        "uid": 88248,
        "name": "GreyCrane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "### \u52a0\u6743\u5e76\u67e5\u96c6\u7684\u5178\u578b\u9898\n**//\u5982\u679c\u5e76\u4e0d\u662f\u5f88\u61c2\u5e76\u67e5\u96c6\u53ca\u5176\u4f18\u5316\uff0c\u5efa\u8bae\u5148\u6253\u4e2a\u6a21\u677f\u9898**\n\n\u77e5\u9053\u5e76\u67e5\u96c6\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5373\u53ef\u53d1\u73b0\u5bf9\u4e8e\u4e24\u5217\u8230\u961f\u7684\u5408\u5e76\u3001\u8be2\u95ee\u4e24\u4e2a\u6218\u8230\u662f\u5426\u5728\u540c\u4e00\u5217\uff0c\u5c31\u5206\u522b\u662f\u5e76\u67e5\u96c6\u7684\u5e76\u3001\u67e5\u64cd\u4f5c\u3002\u6bcf\u4e00\u5217\u7684\u5217\u9996\u6218\u8230\u5373\u4e3a\u6b64\u5217\u6240\u6709\u6218\u8230\u7684\u7956\u5148\uff0c\u5408\u5e76\u4e24\u5217\u65f6\uff0c\u5373\u628a\u5176\u4e2d\u4e00\u5217\u7684\u5217\u9996\u7684\u7236\u4eb2\u6539\u4e3a\u53e6\u4e00\u5217\u5217\u9996\uff0c\u67e5\u8be2\u5728\u4e0d\u5728\u4e00\u5217\uff0c\u5373\u5bf9\u4e8e\u4e24\u4e2a\u6218\u8230\uff0c\u5411\u4e0a\u9010\u4e2a\u5bfb\u627e\u7236\u4eb2\uff0c\u76f4\u5230\u627e\u5230\u7236\u4eb2\u4e3a\u81ea\u8eab\u7684\u7956\u5148\uff0c\u82e5\u4e3a\u540c\u4e00\u7956\u5148\uff0c\u5373\u5728\u540c\u4e00\u5217\u3002\n\n\u597d\uff0c\u73b0\u5728\u53ea\u5269\u4e0b\u4e00\u4e2a\u95ee\u9898\uff0c\u82e5\u4e24\u4e2a\u6218\u8230\u5728\u4e00\u5217\uff0c\u4ed6\u4eec\u4e4b\u95f4\u5e03\u7f6e\u6709\u591a\u5c11\u6218\u8230\uff1f\n\n\u8ba9\u6211\u4eec\u56de\u60f3\u5e76\u67e5\u96c6\u7684\u4e24\u4e2a\u4f18\u5316\u4e4b\u4e00\u2014\u2014\u6309\u79e9\u5408\u5e76\uff0c\u8bb0\u5f55\u5e76\u67e5\u96c6\u4e2d\u6bcf\u4e2a\u6811\u7684\u6df1\u5ea6\uff0c\u6bcf\u6b21\u5408\u5e76\u65f6\u5c06\u6df1\u5ea6\u5c0f\u7684\u5408\u5e76\u5230\u6df1\u5ea6\u5927\u7684\u4e0a\u3002\u8fd9\u91cc\u7684\u6df1\u5ea6\uff0c\u4e5f\u5c31\u662f\u5728\u5e76\u67e5\u96c6\u7684\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7ef4\u62a4\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u5728\u64cd\u4f5c\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u4fe1\u606f\u6765\u8bb0\u5f55\u4e24\u4e2a\u6218\u8230\u4e4b\u95f4\u5e03\u7f6e\u7684\u6218\u8230\u4e2a\u6570\u5462\uff1f\n\n\u663e\u7136\uff0c\u82e5\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u6218\u8230\u90fd\u8bb0\u5f55\u4e00\u4e0b\u4ed6\u4eec\u4e4b\u95f4\u5e03\u7f6e\u7684\u6218\u8230\u7684\u4e2a\u6570\uff0c\u65f6\u95f4\u7a7a\u95f4\u5f00\u9500\u90fd\u5f88\u5927\uff0c\u8fd9\u65f6\u6211\u4eec\u60f3\u5230\u524d\u7f00\u601d\u60f3\uff1a**\u5bf9\u4e8e\u6bcf\u4e2a\u6218\u8230i\uff0c\u8bb0\u5f55pre[i]\u4e3ai\u6240\u5728\u7684\u90a3\u4e00\u5217\u4e0a\u5728i\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u6218\u8230\uff08\u5373\u4e3a\u4ed6\u4e4b\u524d\u76f4\u5230\u4ed6\u6240\u5728\u5217\u7684\u5217\u9996\u6218\u8230\u6570\uff09**\u3002\u8fd9\u6837\uff0c\u5bf9\u4e8e\u540c\u4e00\u5217\u7684\u6218\u8230i\u4e0e\u6218\u8230j\uff08\u8bbei\u5728j\u4e4b\u540e\uff09\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u6218\u8230\u4e2a\u6570\u5373\u4e3a**pre[i]-pre[j]-1**\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\uff0c\u8be5\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2apre\u6570\u7ec4\u5462\uff1f\u8003\u8651\uff1a\u53ea\u6709\u5728\u5408\u5e76\u4e24\u5217\u65f6\u624d\u4f1a\u589e\u52a0\u63a5\u5728\u540e\u9762\u7684\u90a3\u4e00\u5217\u6240\u6709\u6218\u8230\u7684pre\u6570\u7ec4\uff0c**\u8fd9\u4e2a\u589e\u91cf\uff0c\u5373\u4e3a\u63a5\u5728\u524d\u9762\u7684\u90a3\u4e00\u5217\u7684\u603b\u6218\u8230\u6570**\u3002\u6b64\u65f6\u6211\u4eec\u60f3\u5230\u518d\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4num[i]\uff0c\u5373\u4e3a\u4ee5i\u4e3a\u5217\u9996\u7684\u90a3\u4e00\u5217\u4e00\u5171\u6709\u591a\u5c11\u6218\u8230\uff08\u4ee5i\u4e3a\u7956\u5148\u7684\u6811\u7684\u5927\u5c0f\uff09\u3002\u5bf9\u4e8e\u6bcf\u6b21\u5408\u5e76\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u540e\u9762\u90a3\u4e00\u5217\u7684\u5217\u9996pre\u503c+=\u524d\u9762\u90a3\u4e00\u5217\u5217\u9996\u7684num\u503c\uff0c\u800c\u5bf9\u4e8e\u540e\u9762\u90a3\u4e00\u5217\u5217\u9996\u4e4b\u540e\u7684\u90a3\u4e9b\u6218\u8230\u7684pre\u503c\uff0c\u53ea\u9700\u518d\u6267\u884c\u5e76\u67e5\u96c6find\u64cd\u4f5c\u9012\u5f52\u7684\u56de\u6eaf\u65f6\u66f4\u6539\uff0c\u5177\u4f53\u65b9\u6cd5\u89c1\u4ee3\u7801\u53ca\u6ce8\u91ca\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nint t,fa[30010],pre[30010],num[30010],a,b;\nchar c;//fa[i]\uff1ai\u6218\u8230\u7684\u7236\u4eb2\uff0cpre[i]\uff1ai\u6218\u8230\u4e4b\u524d\u5e03\u7f6e\u6709\u591a\u5c11\u6218\u8230\uff0cnum[i]\uff1a\u4ee5i\u6218\u8230\u4e3a\u5217\u9996\u7684\u4e00\u5217\u5171\u6709\u591a\u5c11\u6218\u8230 \n\nvoid re(int &x)//\u5feb\u901f\u8bfb\u5165\u4f18\u5316\n{\n\tx=0;\n\tbool flag=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') flag|=(ch=='-'),ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\tx=flag ? -x : x;\n}\n\nint find(int x)\n{\n\tif(fa[x]==x) return x;//\u76f4\u5230\u627e\u5230\u81ea\u5df1\u7684\u7236\u4eb2\u5c31\u662f\u81ea\u5df1\uff0c\u5373\u4f7f\u7956\u5148 \n\tint fx=find(fa[x]); //\u9012\u5f52\u5bfb\u627e\u7956\u5148\n\tpre[x]+=pre[fa[x]];//\u5728find\u9012\u5f52\u65f6\uff0c\u5df2\u7ecf\u66f4\u65b0\u4e86x\u7684\u7956\u5148\u7684pre\uff0c\u6b64\u65f6\u518d\u66f4\u65b0x\u7684pre\u503c \n\treturn fa[x]=fx;//\u5c06\u81ea\u5df1\u7684\u7236\u4eb2\u76f4\u63a5\u8d4b\u4e3a\u7956\u5148\uff0c\u8def\u5f84\u538b\u7f29\u4f18\u5316 \n}\n\nvoid mix(int x,int y)\n{\n\tint fx=find(x),fy=find(y);//\u627e\u5230\u5404\u81ea\u7684\u5217\u9996 \n\tfa[fx]=fy;//\u5c06\u524d\u4e00\u5217\u63a5\u5230\u540e\u4e00\u5217\u5c3e\u90e8 \n\tpre[fx]+=num[fy];//\u5148\u66f4\u65b0\u524d\u4e00\u5217\u5217\u9996\u4e4b\u524d\u5e03\u7f6e\u7684\u6218\u8230\u6570\uff0c\u591a\u4e86\u540e\u4e00\u5217\u603b\u6218\u8230\u6570\u90a3\u4e48\u591a\u4e2a\u6218\u8230 \n\tnum[fy]+=num[fx];//\u540e\u4e00\u5217\u603b\u6218\u8230\u6570\u52a0\u4e0a\u524d\u4e00\u5217\u7684\u6218\u8230\u6570 \n\tnum[fx]=0;//\u524d\u4e00\u5217\u7684\u961f\u9996\u76ee\u524d\u5df2\u4e0d\u662f\u961f\u9996\u4e86\uff0c\u6e05\u96f6 \n}\n\nint main()\n{\n\tre(t);\n\tint i;//\u521d\u59cb\u5316\u6bcf\u4e2a\u6218\u8230\u7684\u7236\u4eb2\u5373\u4e3a\u4ed6\u81ea\u8eab\uff0c\u5f53\u524d\u4ee5\u4ed6\u4e3a\u5217\u9996\u7684\u4e00\u5217\u5f53\u7136\u53ea\u6709\u4ed6\u81ea\u5df1\u4e00\u4e2a\u6218\u8230 \n\tfor(i=1;i<=30000;i++) fa[i]=i,num[i]=1;\n\twhile(t--)\n\t{\n\t\tcin>>c; re(a); re(b);//\u81ea\u5df1\u5199\u65f6\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u82e5\u662fc=getchar();\u5219\u4f1a\u201cToo many or too few lines\u201d \n\t\tif(c=='M')\n\t\t\tmix(a,b);//\u5c06a\u90a3\u4e00\u5217\u63a5\u5230b\u90a3\u4e00\u5217\u540e \n\t\telse\n\t\t\tif(find(a)!=find(b)) printf(\"-1\\n\");//\u627e\u4ed6\u4eec\u5404\u81ea\u7684\u7956\u5148\u5373\u5217\u9996\uff0c\u82e5\u4e0d\u662f\u540c\u4e00\u4e2a\uff0c\u5219\u4e0d\u5728\u540c\u4e00\u5217 \n\t\t\telse\n\t\t\t\tprintf(\"%d\\n\",pre[a]-pre[b]>0 ? pre[a]-pre[b]-1 : pre[b]-pre[a]-1);//\u7528\u4e09\u76ee\u8fd0\u7b97\u7b26\u786e\u4fdd\u5927\u6570\u51cf\u5c0f\u6570\uff0c\u518d\u51cf\u4e00\uff0c\u5373\u5176\u95f4\u7684\u6218\u8230\u6570 \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1529051538,
        "uid": 60085,
        "name": "L__A",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "~~\u6ca1\u60f3\u5230\u6211\u4e5f\u80fd\u505aNOI\u7684\u9898\u76eeqwq~~\n\n\u8fd9\u662f\u4e00\u9053\u6bd4\u8f83\u88f8\u7684\u5e76\u67e5\u96c6\uff0c\u53ea\u662f\u8981\u6c42\u4e00\u8fb9\u5904\u7406\u4e0e\u961f\u5934\u7684\u5173\u7cfb\n\n\u4e8e\u662f\u53ea\u8981\u65b0\u589e\u4e00\u4e2a\u6570\u7ec4\\_num[]\\_\u8868\u793a\\_i\\_\u4e0e\\_fa[i]\\_\u7684\u8ddd\u79bb\u5373\u53ef\n\n\u9664\u53bb\u8fd9\u4e00\u70b9\u5c31\u662f\u4e00\u4e2a\u5e76\u67e5\u96c6\u6a21\u7248\u4e86\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint fa[30010],num[30010],size[30010];//fa[i]\u8868\u793ai\u7684\u7236\u4eb2\uff0cnum[i]\u8868\u793ai\u4e0efa[i]\u7684\u8ddd\u79bb,size[i]\u8868\u793ai\u6240\u5728\u961f\u5217\u7684\u5927\u5c0f\n\ninline int find(int x)\n{\n    if(x!=fa[x]){\n        int xx=fa[x];\n        fa[x]=find(fa[x]);\n        num[x]+=num[xx];\n        size[x]=size[fa[x]];\n    }\n    return fa[x];\n}\n\ninline void merge(int x,int y)\n{\n    int xx=find(x),yy=find(y);\n    if(xx==yy) return ;\n    fa[xx]=yy;\n    num[xx]=num[yy]+size[yy];\n    size[yy]+=size[xx];\n    size[xx]=size[yy];\n}\n\ninline int both(int x,int y)\n{\n    int xx=find(x),yy=find(y);\n    if(xx!=yy)\n        return -1;\n    return abs(num[x]-num[y])-1;\n}\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=30005;i++)\n        fa[i]=i,size[i]=1,num[i]=0;\n    for(int i=1;i<=t;i++){\n        char c;\n        int x,y;\n        scanf(\" %c \",&c);\n        scanf(\"%d%d\",&x,&y);\n        if(c=='M') merge(x,y);\n        else if(c=='C') printf(\"%d\\n\",both(x,y));\n    }\n    return 0;\n}\n```",
        "postTime": 1516802052,
        "uid": 45443,
        "name": "codesonic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u5176\u5b9e\u601d\u8def\u548c\u697c\u4e0b\u5dee\u4e0d\u591a\uff0c\u4e5f\u662f\u7ef4\u62a4\u4e00\u4e2a\u524d\u9762\u548c\u4e00\u4e2a\u540e\u9762\u7684\u4eba\u7684\u4e2a\u6570\uff0c\u7528\u540e\u9762\u7684\u4e2a\u6570\u66f4\u65b0\u524d\u9762\u7684\u4e2a\u6570\uff0c\u7528\u524d\u9762\u7684\u4e2a\u6570\u5728Get\\_Father\u4e2d\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u4f46\u662f\u6211\u76f4\u63a5\u5728\u8def\u5f84\u538b\u7f29\u91cc\u9762\u76f4\u63a5\u628a\u7236\u4eb2\u538b\u5230\u4e86\u6839\u8282\u70b9\u4e0a\uff0c\u4e8e\u662f\u6211\u4eec\u7684front\u7684\u503c\u4e0d\u9700\u8981\u989d\u5916\u518d\u5728\u4ece\u5f53\u524d\u7684\u70b9\u66f4\u65b0\u5230\u94fe\u4e0a\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u628a\u8def\u5f84\u538b\u5f97\u66f4\u5feb\u3002\u7b97\u4e2a\u4f18\u5316\u5427\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#define MAXN 60000\nusing namespace std;\ninline char get_char(){\n    static char buf[1000001], *p1 = buf, *p2 = buf;\n    return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1 ++;\n}\ninline int read(){\n    int num = 0;\n    char c;\n    while (isspace(c = get_char()));\n    while (num = num * 10 + c - 48, isdigit(c = get_char()));\n    return num;\n}\ninline char get_ch(){\n    char c;\n    while(!isalpha(c = get_char()));\n    return c;\n}\ninline void swap(int &a,int &b){\n    int t = a;\n    a = b;\n    b = t;\n}\nint father[MAXN], front[MAXN], back[MAXN];\ninline int Get_Father(int u){\n    if(u == father[u]) return u;\n    int fa = Get_Father(father[u]);\n    front[u] += front[father[u]];//\u4e2d\u95f4\u7684\u5173\u7cfb\u5e94\u8be5\u662f\u7d2f\u52a0\u7684\n    father[u] = father[fa];//\u76f4\u63a5\u538b\u7f29\u5728\u6839\u4e0a\n    return fa;\n}\ninline void Merge(int u, int v){\n    u = Get_Father(u), v = Get_Father(v);\n    front[u] = back[v] + 1;//\u6b64\u65f6front\u5df2\u66f4\u65b0\n    back[v] += back[u] + 1;//\u6240\u4ee5\u901a\u8fc7back\u66f4\u65b0\n    father[u] = v;\n}\ninline int Query(int u, int v){\n    int fu = Get_Father(u), fv = Get_Father(v);\n    if(fu != fv) return -1;\n    int valu = front[u], valv = front[v];//\u76f4\u63a5\u538b\u5230\u4e86\u6839\uff0c\u6240\u4ee5\u76f4\u63a5\u53bbfront\u5373\u53ef\n    if(valu < valv) swap(valu, valv);\n    return valu - valv - 1;//\u51cf\u53bb\u91cd\u590d\n}\nint main(){\n    int n = read();\n    for(int i = 1; i <= 30000; i++) father[i] = i;\n    for(int i = 1; i <= n; i++){\n        char con = get_ch();\n        int x = read(), y = read();\n        if(con == 'M') Merge(x, y);\n        else printf(\"%d\\n\", Query(x, y));\n    }\n    return 0;\n}\n```",
        "postTime": 1510017402,
        "uid": 43464,
        "name": "Creeper_LKF",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u672c\u9898\u8003\u67e5\u7684\u4f9d\u7136\u662f\u5e76\u67e5\u96c6\uff0c\u5e76\u4e14\u548c\u98df\u7269\u94fe\u6781\u4e3a\u76f8\u4f3c\uff0c\u601d\u7ef4\u96be\u5ea6\u8fd8\u8981\u4f4e\u4e9b\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u8258\u6218\u8230\uff0c\u7528\u4e09\u4e2a\u6570\u7ec4\u8868\u793a\u4e09\u4e2a\u72b6\u6001\uff0cfather[i]\u8868\u793ai\u7684\u7236\u8282\u70b9\uff0cfront[i]\u8868\u793ai\u524d\u9762\u6709\u591a\u5c11\u8258\uff0cbehind[i]\u8868\u793ai\u540e\u9762(\u5305\u62ec\u81ea\u5df1)\u6709\u591a\u5c11\u8258\u3002\u521d\u59cb\u72b6\u6001father[i]=i,front[i]=0,behind[i]=1;\n\n\n\n\n\n\n\n\n    \n```cpp\nint find(int x)//\u67e5\u627ex\u6240\u5728\u96c6\u5408(\u5217)\n{\n    if(father[x]==x)return x;\n    int fx=find(father[x]);\n    front[x]=front[x]+front[father[x]];//\u8def\u5f84\u538b\u7f29\u4e4b\u524d\uff0c\u8981\u5148\u8ba1\u7b97\u51fax\u524d\u9762\u7684\u6218\u8230\u6570\uff0c\u7b49\u4e8e\u627e\u5b83\u65f6\u904d\u5386\u5230\u7684\u6240\u6709\u70b9\u7684front\u503c\u4e4b\u548c\n    return father[x]=fx;//\u8def\u5f84\u538b\u7f29\n}\nvoid unio(int x,int y)//\u5408\u5e76x,y\u6240\u5728\u96c6\u5408\n{\n     int fx=find(x);\n     int fy=find(y);\n     father[fx]=fy;\n     front[fx]=behind[fy];//x\u6839\u524d\u9762\u7684\u6218\u8230\u6570\u6b63\u597d\u7b49\u4e8ey\u6839\u540e\u9762\u7684\u6218\u8230\u6570\n     behind[fy]+=behind[fx];//y\u6839\u540e\u9762\u7684\u6218\u8230\u6570\u7b49\u4e8e\u539f\u6765\u7684\u52a0\u4e0ax\u6839\u540e\u9762\u7684\u6218\u8230\u6570\n}\nvoid ask(int x,int y)//\u8be2\u95eex,y\u4e4b\u95f4\u7684\u6218\u8230\u6570\n{\n     int fx=find(x);\n     int fy=find(y);\n     if(fx==fy)//\u5982\u679c\u5728\u540c\u4e00\u5217\n     {\n         ans=abs(front[x]-front[y])-1;//x,y\u4e4b\u95f4\u6218\u8230\u6570\u7b49\u4e8ex\u524d\u9762\u7684\u51cf\u53bby\u524d\u9762\u7684-1\n         printf(\"%d\\n\",ans);\n     }\n     else printf(\u201c-1\\n\u201d);//\u4e0d\u5728\u540c\u4e00\u5217\n}\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <cmath>\nusing namespace std;\nconst int maxn=30000+10;\nint father[maxn],front[maxn],behind[maxn];\nint t,ans;\nint find(int x)\n{\n    if(father[x]==x)return x;\n    int fx=find(father[x]);\n    front[x]=front[x]+front[father[x]];\n    return father[x]=fx;\n}\nvoid unio(int x,int y)\n{\n     int fx=find(x);\n     int fy=find(y);\n     father[fx]=fy;\n     front[fx]=behind[fy];\n     behind[fy]+=behind[fx];\n}\nvoid ask(int x,int y)\n{\n     int fx=find(x);\n     int fy=find(y);\n     if(fx==fy)\n     {\n         ans=abs(front[x]-front[y])-1;\n         printf(\"%d\\n\",ans);\n     }\n     else printf(\"-1\\n\");\n}\nvoid work()\n{\n     char s;\n     int a,b;\n     for(int i=1;i<=30000;i++)\n     {\n        father[i]=i;\n        front[i]=0;\n        behind[i]=1;\n     }\n     scanf(\"%d\\n\",&t);\n     for(int i=1;i<=t;i++)\n     {\n         scanf(\"%c %d%d\\n\",&s,&a,&b);\n         if(s=='M')unio(a,b);\n         else ask(a,b);\n     }\n}\nint main()\n{\n    work();\n    //while(1);\n    return 0;\n}\n```",
        "postTime": 1476672722,
        "uid": 24632,
        "name": "46days",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u672c\u9898\u6211\u8ba4\u4e3a\u8be5\u8bbe\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u662f\u7528\u6765\u8868\u793a\u6218\u8230\u5728\u5408\u5e76\u540e\u7684\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u662f\u5408\u5e76\u540e\u7684\u603b\u957f\u5ea6\u3002\u6bcf\u6b21\u5408\u5e76\u90fd\u66f4\u65b0\u6218\u8230\u7684\u4f4d\u7f6e\u548c\u6218\u8230\u6240\u5728\u90a3\u4e00\u5217\u7684\u957f\u5ea6\uff0c\u8be2\u95ee\u65f6\u53ef\u76f4\u63a5\u7528abs(c[i]-c[j]-1)\n\n```cpp\nvar f:array [1..30000] of integer;\n    b,c:array [1..30000] of integer;\n    t:longint;\n    ch:char;\n    i,j,p,q:integer;\n    k:longint;\nfunction find(x:integer):integer;\nbegin\n  if f[x]=x then exit(x);\n  find:=find(f[x]);\n  c[x]:=c[x]+c[f[x]]-1;\n  f[x]:=find;\nend;\nbegin\n  for i:=1 to 30000 do\n  begin\n    f[i]:=i;\n    b[i]:=1;\n    c[i]:=1;\n  end;\n  readln(t);\n  for k:=1 to t do\n  begin\n    readln(ch,i,j);\n    p:=find(i);\n    q:=find(j);\n    if ch='M' then\n      begin\n        f[p]:=q;\n        c[p]:=b[q]+1;\n        b[q]:=b[q]+b[p];\n      end;\n    if ch='C' then\n      begin\n        if p<>q then\n          writeln(-1)\n        else\n          writeln(abs(c[i]-c[j])-1);\n      end;\n    end;\nend.\n```",
        "postTime": 1442483949,
        "uid": 3889,
        "name": "q18921892",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a [\u5e76\u67e5\u96c6\u6a21\u677f](https://www.luogu.com.cn/problem/P3367)\n\n[\u5e7f\u544a\u4f4d](https://whitecatj.github.io/2019/12/18/%5BNOI2002%5D\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4/)\n\n\u8fd9\u9898\u4e0e\u666e\u901a\u5e76\u67e5\u96c6\u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\uff0c\u9700\u8981\u8ba1\u7b97\u5728\u94fe\u4e0a\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n\n\u5c31\u5b83\u7684\u64cd\u4f5c\u6765\u8bf4\uff0c\u628a\u4e00\u5217\u63a5\u5728\u53e6\u4e00\u5217\u540e\u9762\uff0c\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u53d8\u5316\u4f3c\u4e4e\u5f88\u7b80\u5355\n\n\u6211\u4eec\u9664\u4e86\u539f\u6765\u7684$fa[x]$\u8868\u793a$x$\u53f7\u6218\u8230\u524d\u9762\u7684\u7684\u90a3\u8258\u6218\u8230\u7684\u7f16\u53f7\n\n\u518d\u5f00\u4e00\u4e2a $d$ \u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u5230\u961f\u9996\u7684\u8fb9\u6743\u548c\uff08\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u90fd\u662f1\uff09\n\n\u5728\u8def\u5f84\u538b\u7f29\u65f6\u66f4\u65b0\u8fd9\u4e2a\u503c\n\n\u5373\u4e0b\u9762\u7684get\u64cd\u4f5c\n\n```\nint get(int x){\n\tif(x == fa[x]) return x; \n\tint q = get(fa[x]); //\u539f\u6a21\u677f\n\td[x] += d[fa[x]]; //\u8fd9\u4e2a\u70b9\u5230\u961f\u9996\u7684\u8ddd\u79bb\u5e94\u8be5\u52a0\u4e0a\u5b83\u524d\u9762\u90a3\u4e00\u8258\u7684\u8ddd\u79bb\n\treturn fa[x] = q; //\u539f\u6a21\u677f\uff0c\u8def\u5f84\u538b\u7f29\n}\n```\n\n\u5728\u6536\u5230C\u6307\u4ee4\u65f6\uff0c\u5206\u522b\u627e\u5230$x$\u548c$y$\u7684\u7956\u5148\uff0c\u7136\u540e\u5b8c\u6210\u67e5\u8be2\uff0c\u8def\u5f84\u538b\u7f29\n\n\u5982\u679c\u4e24\u4eba\u7684\u7956\u5148\u4e00\u6837\uff0c\u8bf4\u660e\u5728\u540c\u4e00\u5217\uff0c\u4e24\u4eba\u4e4b\u95f4\u7684\u8ddd\u79bb\u663e\u7136\u6709$abs(d[x] - d[y]) - 1$\n\n\u6536\u5230M\u6307\u4ee4\u65f6\uff0c\u5148\u628a$x$\u7684\u6811\u6839\u4f5c\u4e3a$y$\u6811\u6839\u7684\u5b50\u8282\u70b9\n\n\u8fde\u8d77\u6765\u4e4b\u540e\uff0c$x$\u6811\u6839\u5230$y$\u6811\u6839\u7684\u8ddd\u79bb\u5e94\u8be5\u662f$y$\u6570\u7ec4\u73b0\u6709\u7684\u98de\u8239\u6570\u91cf\n\n\u6240\u4ee5\u6211\u4eec\u518d\u5f00\u4e00\u4e2a$size$\u6570\u7ec4\uff0c\u5728\u6bcf\u4e2a\u6811\u6839\u5904\u5b58\u4e0b\u73b0\u5728\u8fd9\u4e2a\u96c6\u5408\u91cc\u6709\u591a\u5c11\u98de\u8239\n\n\u4e8e\u662f\u5c31\u6709\u4ee5\u4e0b\u7684merge\u64cd\u4f5c\n\n```\nvoid merge(int x, int y){\n\tx = get(x);\n\ty = get(y); //\u627e\u5230\u4e24\u4eba\u7684\u7956\u5148\n\tfa[x] = y; //\u628ay\u4f5c\u4e3ax\u7684\u7956\u5148\n\td[x] = size[y]; //\u73b0\u5728x\u5230\u6839\u7684\u8ddd\u79bb\u5e94\u8be5\u662fy\u8fd9\u6761\u94fe\u7684\u957f\u5ea6\u4e86\n\tsize[y] += size[x]; //y\u7684\u957f\u5ea6\u8981\u52a0\u4e0ax\u7684\u957f\u5ea6\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\n#define N 30005\nusing namespace std;\n\nint T, x, y;\nint fa[N], d[N], size[N];\nchar c; \n\nint get(int x){\n\tif(x == fa[x]) return x;\n\tint q = get(fa[x]);\n\td[x] += d[fa[x]];\n\treturn fa[x] = q;\n}\n\nvoid merge(int x, int y){\n\tx = get(x);\n\ty = get(y);\n\tfa[x] = y;\n\td[x] = size[y];\n\tsize[y] += size[x];\n}\n\nint main(){\n\tscanf(\"%d\", &T);\n\tfor(int i = 1; i < N; ++i) fa[i] = i;\n\tfor(int i = 1; i < N; ++i) size[i] = 1;//\u8bb0\u5f97\u4e24\u4e2a\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u70b9\u7684\u7956\u5148\u8bbe\u6210\u81ea\u5df1\uff0c\u6bcf\u6761\u94fe\u7684\u521d\u59cb\u957f\u5ea6\u4e3a1\n\tfor(int i = 1; i <= T; ++i){\n\t\tcin>>c>>x>>y;\n\t\tif(c == 'M') merge(x, y);\n\t\telse{\n\t\t\tif(get(x) == get(y)) printf(\"%d\\n\", abs(d[x] - d[y]) - 1);\n\t\t\telse printf(\"-1\\n\");\n\t\t}\n\t}\n\treturn 0w0;\n}\n\n```\n\n//\u672c\u6587\u7ae0\u5f88\u5927\u6765\u81ea\u4e8e\u300a\u7b97\u6cd5\u8fdb\u9636\u300b\n",
        "postTime": 1576676894,
        "uid": 123936,
        "name": "hfee",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "## \u9898\u610f\uff1a\n- \u5bf9\u4e8e1\u5230n\u7684\u5e8f\u5217\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n1. Mij,\u5c06i\u6240\u5728\u7684\u961f\u5217\u52a0\u5230j\u6240\u5728\u7684\u961f\u5217\u4e2d\uff0c\t\u5f53\u7136\u662f\u4ece\u540e\u9762\u52a0\uff0c\u4fdd\u8bc1\u539f\u961f\u5217\u7684\u987a\u5e8f\u4e0d\u53d8\u3002\n1. Cij\uff0c\u67e5\u627ei\u548cj\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u6570\uff0c\u5f53\u7136\u5982\u679cij\u4e0d\u5728\u4e00\u4e2a\u961f\u5217\u4e2d\uff0c\u8f93\u51fa-1\u5c31\u884c\u3002\n## \u601d\u8def\uff1a\n\t\n\n------------\n- \u6709\u961f\u5217\u5408\u5e76\uff0c\u961f\u5217\u67e5\u8be2\uff0c\u5e76\u67e5\u96c6\u80af\u5b9a\u5c11\u4e0d\u4e86\uff0c\u4f46\u662f\u5982\u4f55\u6c42i\u548cj\u6709\u591a\u5c11\u4e2a\u6570\uff0c\u8fd9\u5c31\u8981\u7528\u5230\u5e26\u6743\u5e76\u67e5\u96c6\u4e86\uff0c\u53e6\u5916\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0clen\u6570\u7ec4\u5427\uff0c\u6700\u7ec8\u7b54\u6848\u5c31\u662f len[i]+len[j]-1 \uff0c\u8bb0\u5f97\u51cf\u4e00\u56e0\u4e3a\u4e0d\u5305\u542b\u4e24\u4e2a\u7aef\u70b9\u3002\n\n\n------------\n- \u8fd9\u4e2a\u5e26\u6743\u5e76\u67e5\u96c6\u600e\u4e48\u5199\uff0c\u5f88\u660e\u663e\u5047\u5982\u4e0d\u7528\u8def\u5f84\u538b\u7f29\uff0c\u5408\u5e76\u4e00\u6b21\u5bf9\u8fd9\u6761\u94fe\u8fdb\u884c\u66f4\u65b0\uff0c\u8fd8\u6709\u67e5\u8be2\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e5f\u662f\u4ece\u5934\u627e\u5230\u5c3e\uff0c\u8fd9\u6837\u7684\u8bdd\u4f1a\u8d85\u65f6\uff0c\u590d\u6742\u5ea6\u662fO(n^2)\uff0cn\u4e3a3\u4e07\uff0c\uff08\u5b9e\u6d4b\u8def\u5f84\u538b\u7f29+\u8bb0\u5f55\u8def\u5f84\uff0c\u521a\u597d\u80fd\u5361\u8fc7\uff0c\u8fd9\u6837\u5e38\u6570\u6bd4\u8f83\u5c0f\u800c\u5df2\uff0c\u4f46\u5982\u679c\u52a0\u5f3a\u6570\u636e\u4e0a\u9650\u8fd8\u662f\u4f1a\u5361\u6b7b\u7684\uff0c~~\u6709\u70b9\u7384\uff084e8\u7684\u6837\u5b50\uff09~~\uff09\n\t\n\n------------\n- \u6700\u7ec8\u6b63\u89e3\u5c31\u662f\uff0c\u8def\u5f84\u538b\u7f29\uff0c\u6bcf\u6b21\u5408\u5e76\u5bf9\u5f53\u524d\u6839\u8282\u70b9\uff08\u6ce8\u610f\u4e0d\u662f\u5408\u5e76\u540e\u7684\u6839\u8282\u70b9\uff09\u8fdb\u884c\u4fee\u6539\uff0c\u5408\u5e76\uff0c\u5f53\u524d\u6839\u8282\u70b9\u7684\u8ddd\u79bb+=\u8981\u5408\u5e76\u961f\u5217\u7684\u957f\u5ea6\u3002\u4f46\u662f\u6709\u4e2a\u95ee\u9898\uff0c\u5f53\u524d\u961f\u5217\u540e\u9762\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u5e76\u6ca1\u6709\u53d8\uff0c\u8fd8\u662f\u539f\u6765\u7684\uff0c\u8fd9\u53ea\u662f\u5bf9\u5f53\u524d\u6839\u8282\u70b9\u8fdb\u884c\u4e86\u4fee\u6539\u3002\u8fd9\u4e2a\u95ee\u9898\u5728find\u51fd\u6570\u4e2d\u89e3\u51b3\uff0c\u6bcf\u6b21find\u5c31\u5bf9\u8fd9\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u8fdb\u884c\u66f4\u65b0 **\uff08\u6761\u4ef6\u662f\u8fd9\u4e2a\u70b9\u662f\u7b2c\u4e00\u6b21find\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u65f6\u5019\u4ed6\u7684\u8def\u5f84\u8fd8\u6ca1\u6709\u88ab\u538b\u7f29\uff0c\u5373 ff[x]!=ff[ff[x]] ,\u5f53\u7136\u5982\u679c\u662f\u7b2c\u4e8c\u6b21find\uff0c\u8def\u5f84\u5df2\u7ecf\u538b\u7f29\u8fc7\u4e86\uff0c\u4ed6\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u662f\u4e0d\u4f1a\u53d8\u7684\uff09** \uff0c len[x]+=len[ff[x]] \uff0c\u5176\u5b9e\u5c31\u662f\u628a\u521a\u521a\u5bf9\u6839\u8282\u70b9\u589e\u52a0\u7684\u957f\u5ea6\u5206\u914d\u5230\u6bcf\u4e2a\u5b50\u8282\u70b9\u4e0a\uff08**\u6761\u4ef6\u662f\u4f7f\u7528find\u65f6\uff0c\u4e0d\u4f7f\u7528find\u7684\u5b50\u8282\u70b9\u5176\u5b9e\u5e76\u6ca1\u6709\u5206\u914d\uff0c\u8fd9\u4e5f\u4e0d\u5f71\u54cd\u6700\u7ec8\u7684\u7ed3\u679c\uff0c\u5c31\u76f8\u5f53\u4e8e\u6309\u9700\u5206\u914d\uff09**\n\n```\n//AC\u4ee3\u7801 \uff1a\u5e26\u6743\u5e76\u67e5\u96c6\n\n#include<stdio.h>\n#include<cmath>\nusing namespace std;\n#define maxn 30005\n#define INF 1000000005\n#define ll long long\n//dis\u8868\u793ai\u961f\u5217\u7684\u957f\u5ea6\uff0clen\u8868\u793ai\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\nint ff[maxn],dis[maxn],len[maxn];\n  \nint find(int x)\n{\n    if(ff[x]==x)\n        return x;\n    int t=find(ff[x]);\n    len[x]+=len[ff[x]];\n    return ff[x]=t;\n}\n\nvoid read(int &x)\n{\n    x=0;\n    bool flag=0;\n    char ch=getchar();\n    if(ch=='-') flag=1;\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x*=10,x+=ch-'0',ch=getchar();\n    if(flag) x=-x;\n}\n\nint main()\n{\n    int n;\n    read(n);\n    for(int i=0; i<=maxn; i++)\n        ff[i]=i,dis[i]=1;\n\n    for(int i=0; i<n; i++)\n    {\n        char str;\n        scanf(\" %c\",&str);\n        int x,y;\n        read(x),read(y);\n        int nx=find(x);\n        int ny=find(y);\n        if(str=='M')\n        {\n            if(nx!=ny)\n            {\n                ff[nx]=ny;\n                len[nx]+=dis[ny];\n                dis[ny]+=dis[nx];\n                dis[nx]=1;\n            }\n        }\n        else\n        {\n            if(nx!=ny)\n            {\n                printf(\"-1\\n\");\n                continue;\n            }\n            if(len[x]>len[y])\n                printf(\"%d\\n\",len[x]-len[y]-1);\n            else\n                printf(\"%d\\n\",len[y]-len[x]-1);\n        }\n    }\n    return 0;\n}\n\n\n //\u521a\u5f00\u59cb\u8fd8\u4e0d\u4f1a\u5e26\u6743\u5e76\u67e5\u96c6\uff0c\u6c34\u8fc7\u53bb\u7684\u4ee3\u7801\n#include<bits/stdc++.h>\nusing namespace std;\n#define IOS ios::sync_with_stdio(false)\n#define maxn 30005\n#define INF 1000000005\n#define ll long long\n\nint path[maxn];//\u8bb0\u5f55\u8def\u5f84\nint ff[maxn],dis[maxn],out[maxn],len[maxn];\n//out\u4e3ai\u961f\u5217\u6700\u5916\u9762\u7684\u6570\u5b57\u662f\u4ec0\u4e48\n\nint find(int x)\n{\n    return x==ff[x]?x:ff[x]=find(ff[x]);\n}\n\nvoid read(int &x)\n{\n    x=0;\n    bool flag=0;\n    char ch=getchar();\n    if(ch=='-') flag=1;\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x*=10,x+=ch-'0',ch=getchar();\n    if(flag) x=-x;\n}\n\nint main()\n{\n    int n;\n    read(n);\n    for(int i=0; i<=maxn; i++)\n        ff[i]=i,out[i]=i,dis[i]=1,path[i]=i;\n\n    for(int i=0; i<n; i++)\n    {\n        char str;\n        scanf(\" %c\",&str);\n        int x,y;\n        read(x),read(y);\n        int nx=find(x);\n        int ny=find(y);\n        if(str=='M')\n        {\n            if(nx!=ny)\n            {\n                ff[nx]=ny;\n                path[nx]=out[ny];\n                int t=out[nx];\n//\u5bf9\u8fd9\u6761\u94fe\u7684\u8ddd\u79bb\u8fdb\u884c\u66f4\u65b0\uff0c\u6240\u6709\u503c\u90fd\u66f4\u65b0\u4e86\uff0c\u6240\u4ee5\u6162\u554a\n                while(t!=out[ny]) \n                {\n                    len[t]+=dis[ny];\n                    t=path[t];\n                }\n                out[ny]=out[nx];\n                dis[ny]+=dis[nx];\n                dis[nx]=1;\n            }\n        }\n        else\n        {\n            if(nx!=ny)\n                printf(\"-1\\n\");\n            else\n                printf(\"%d\\n\",abs(len[x]-len[y])-1);\n        }\n\n    }\n    return 0;\n}\n\n```\n\n```\n",
        "postTime": 1565793687,
        "uid": 116405,
        "name": "Bill845514379",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\u611f\u89c9\u6162\u6162\u7684\u7ef4\u62a4\u5e8f\u5217\u7684\u611f\u89c9\uff08~~\u5b8c\u5168\u6ca1\u60f3\u8d77\u5e26\u6743\u5e76\u67e5\u96c6~~\uff09  \n\u4e8e\u662f\u5199\u4e86~~30000~~\u4e00\u68f5\u975e\u65cbTreap  \n\u8230\u961f\u8c03\u7528\u5c31\u627e\u5230\u7f16\u53f7\u5bf9\u5e94\u7684\u6839\u8282\u70b9,\u7136\u540e\u628a\u4e24\u9897Treap\u5408\u5e76\n\u67e5\u8be2\u5c31\u770b\u4e24\u4e2a\u7f16\u53f7\u5bf9\u5e94\u7684\u5e73\u8861\u6811\u6839\u8282\u70b9\u662f\u4e0d\u662f\u4e00\u6837\u7684,\u4e0d\u4e00\u6837\u5c31\u8fd4\u56de-1\n\u5426\u4e4b\u5c31\u7edf\u8ba1  \n\u975e\u65cbTreap\u5e76\u4e0d\u80fd\u50cfsplay\u6362\u6839,\u6240\u4ee5\u8fd9\u91cc\u8981\u7ed5\u4e00\u5708  \n\u6211\u4eec\u627e\u8fd9\u4e2a\u7f16\u53f7\u5bf9\u5e94\u7684\u7ed3\u70b9\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684\u987a\u5e8f\u5c31\u597d    \n\u76f8\u6bd4\u4e0e\u666e\u901aTreap\u591a\u7ef4\u62a4\u4e86\u4e24\u4e2a\u4e1c\u897f,\u5177\u4f53\u770b\u4ee3\u7801\u5c31\u597d  \n\u9664\u4e86order_of_key\u4e0d\u7b97\u662f\u975e\u65cbTreap\u7ef4\u62a4\u5e8f\u5217\u65f6\u7684\u5e38\u89c4\u64cd\u4f5c\u4ee5\u5916,\u5176\u4ed6\u90fd\u633a\u6b63\u5e38\u7684(\u6bd5\u7adf\u6ca1\u6709\u65cb\u8f6c)  \n\u4e0d\u8fc7\u6211\u5012\u662f\u6bd4\u8f83\u597d\u5947Treap\u80fd\u4e0d\u80fd\u65e2\u80fd\u65cb\u8f6c\u53c8\u5206\u88c2\u5408\u5e76  \n\u4ee3\u780160\u884c  \n\u603b\u65f6\u95f4~~\u4e0d\u5f00O2 1220ms~~  \n~~\u5f00O2~~  976ms  \n~~\u975e\u65cbTreap\u672c\u6765\u5e38\u6570\u5c31\u6709\u70b9\u5927~~\n```cpp\n#include<iostream>\n#include<cstdlib>\nstruct node{int val,key,size,l,r,f;}t[300001];\nint maps[300001],root,tot,n;     //maps \u50a8\u5b58val\u5bf9\u5e94\u7684\u7ed3\u70b9\u7f16\u53f7tot\nusing namespace std;\nint New(int val){t[++tot]=(node){val,rand(),1,0,0};return (maps[val]=tot);} //\u6bcf\u4e2a\u503c\u548c\u5e73\u8861\u6811\u7ed3\u70b9\u6807\u53f7\u4e00\u4e00\u5bf9\u5e94\u5e76\u4e14\u4e0d\u4f1a\u53d8(\u5728\u672c\u9898\u4e2d\u5982\u6b64)\nint find_root(int val){return t[maps[val]].f?find_root(t[maps[val]].f):maps[val];}  //\u5f80\u6839\u8282\u70b9\u4e00\u76f4\u8df3\u627e\u5230\u6839\u8282\u70b9,Treap\u5408\u5e76\u5fc5\u987b\u627e\u5230\u4e24\u68f5\u6811\u7684\u6839\u8282\u70b9\nvoid update(int now)\n{\n    t[now].size=t[t[now].l].size+t[t[now].r].size+1;\n    t[t[now].l].f=t[t[now].r].f=now;     //\u66f4\u65b0\u7236\u4eb2,\u7236\u5b50\u5173\u7cfb\u53ea\u4f1a\u5728split\u548cmerge\u7684\u8fc7\u7a0b\u4e2d\u6539\u53d8\n}\nvoid split(int now,int &x,int&y,int rank)                                                      \n{\n    if(!now){x=y=0;return;}\n    if(t[t[now].l].size>=rank)y=now,split(t[now].l,x,t[y].l,rank);\n    else x=now,split(t[now].r,t[x].r,y,rank-t[t[now].l].size-1);\n    update(now);\n}\nvoid merge(int&now,int x,int y)\n{\n    if(!x||!y){now=x+y;return;}\n    if(t[x].key<t[y].key)now=x,merge(t[now].r,t[x].r,y);\n    else now=y,merge(t[now].l,x,t[y].l);\n    update(now);\n}\nvoid Merge(int l_val,int r_val)   //\u627e\u5230\u4e24\u4e2a\u7f16\u53f7\u5bf9\u5e94\u6811\u7684\u6839\u8282\u70b9,\u7136\u540e\u5408\u5e76\u8fd9\u4e24\u68f5\u6811,\u6839\u8282\u70b9\u4e3ax\n{                                      //\u8fd9\u6837\u7684\u8bddx\u5c31\u5728y\"\u4e0a\u65b9\",\u5bf9\u5e94\u5e73\u8861\u6811\u5c31\u662f\u5e8f\u5217\u7684\u53f3\u65b9,\u8fd9\u6837\u5e8f\u5217\u5de6\u8fb9\u6709\u591a\u5c11\u4e2a\u6570\u5b57,z\"\u4e0b\u65b9\"\u5c31\u6709\u591a\u5c11\u4e2a\u6218\u8230 \n    int x=find_root(l_val),y=find_root(r_val);\n    merge(x,y,x);\n}\nint order_of_key(int val)                                 //\u5bf9\u4e2d\u5e8f\u904d\u5386\u5c31\u5f97\u5230\u5e8f\u5217,\u73b0\u5728\u9700\u8981\u6839\u636eval\u627e\u5230\u5176\u5728Treap\u4e2d\u5e8f\u904d\u5386\u7684\u987a\u5e8f\n{\n    int now=maps[val],ans=t[t[maps[val]].l].size+1;     //\u5982\u679c\u8be5\u7ed3\u70b9\u4e3a\u5de6\u5b50\u6811,\u90a3\u4e48\u5c31\u52a0\u4e0a\u4ed6\u7684\u5de6\u5b50\u6811\u548c\u7236\u7ed3\u70b9\u7684\u5927\u5c0f,\u6700\u7ec8\u7ed3\u679c\u5c31\u662fval\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684\u7ed3\u679c,ans-1\u5c31\u662f\u5e8f\u5217\u7ec8\u5728val\u5de6\u8fb9\u7684\u7ed3\u70b9\u6570\n    while(t[now].f)                                     \n    {\n        if(t[t[now].f].r==now)ans+=t[t[t[now].f].l].size+1;\n        now=t[now].f;\n    }\n    return ans;\n}\nint Query(int l_pos,int r_pos)\n{\n\tint x=find_root(l_pos),y=find_root(r_pos);\n\tif(x!=y)return -1;\n\telse return abs(order_of_key(l_pos)-order_of_key(r_pos))-1;\n}\nint main()\n{\n    for(int i=1;i<=30000;i++)New(i); //\u5f00\u5c4030000\u68f5\u6811\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        char ch;int x,y;\n        cin>>ch>>x>>y;\n\t\tif(ch=='M')Merge(x,y);\n\t\tif(ch=='C')cout<<Query(x,y)<<endl; \n    }\n} \n```\n[\u70b9\u51fb\u9886\u53d6\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.org/problem/P2342)\n",
        "postTime": 1564598138,
        "uid": 229609,
        "name": "NewSjf",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1196 \u3010[NOI2002]\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "**\n\u52a0\u6743\u5e76\u67e5\u96c6\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9x\u8bb0\u5f55\u7236\u4eb2 p[x] \u4ee5\u53ca\u5bf9\u4e8e\u7236\u4eb2\u7684\u8ddd\u79bbvalue[x] (\u4e24\u8239\u95f4\u8ddd\u79bb\u4e3a1)\n\n\u5bf9\u4e8e\u6bcf\u5217 i \u8bb0\u5f55\u4e00\u4e2anum[i]\u8868\u793a\u8be5\u5217\u8239\u7684\u4e2a\u6570\n\n\u82e5\u64cd\u4f5c\u4e3a M  x y\u5219   \u5408\u5e76x  y\u6240\u5728\u96c6\u5408\n\n\u5177\u4f53\u65b9\u6cd5  \uff08\u8bbefx\u4e3ax\u6240\u5728\u96c6\u5408\u7684\u6839  fy\u7c7b\u4f3c\uff09 p[fx]=fy  \u8fd9\u65f6fx\u76f8\u5bf9fy\u7684\u8ddd\u79bb\u5c31\u662fnum[fy]\n\n\u6240\u4ee5 value[fx]=num[fy]  num[fy]+=num[fx] num[fx]=0\n\n\u82e5\u64cd\u4f5c\u4e3a C x y \u5219\u8def\u5f84\u538b\u7f29\u4e4b\u540e  \u8f93\u51faabs(value[x]-value[y]-1)\n\n**\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxn=30000+10;\n\nint p[maxn],value[maxn],num[maxn];\nint findset(int x,int &pson)                       //\u8fd4\u56de value[x]  p\u6570\u7ec4\u7684\u5904\u7406\u7528int &\u5b8c\u6210\n{\n    if(p[x]==x)\n    {\n        pson=x;return 0;\n    }\n    else \n    {\n        value[x]+=findset(p[x],p[x]);\n        pson=p[x];\n        return value[x];\n    }\n}\n\nvoid change(int x,int y)\n{\n    int fx,fy;\n    findset(x,fx);\n    findset(y,fy);\n    p[fx]=fy;\n    value[fx]=num[fy];\n    num[fy]+=num[fx];\n    num[fx]=0;\n}\n\nvoid ask(int x,int y)\n{\n    int fx,fy;\n    findset(x,fx);\n    findset(y,fy);\n    if(fx!=fy)printf(\"-1\\n\");\n    else printf(\"%d\\n\",abs(value[x]-value[y])-1);\n    return ;\n}\n\nint main()\n{\n    int T;cin>>T;\n    char ins[10];\n    int x,y;\n    for(int i=1;i<=maxn-10;i++) p[i]=i,num[i]=1;\n    while(T--)\n    {\n        scanf(\"%s%d%d\",ins,&x,&y);\n        if(ins[0]=='M') change(x,y);\n        else ask(x,y);\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1453813849,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6.\n\n\u5728\u5bfb\u627e\u6839\u8282\u70b9\u65f6\uff0c\u6ce8\u610f\u8bb0\u5f55\u4f4d\u7f6e\uff1b\n\n\u5728\u5408\u5e76\u65f6\uff0c\u6ce8\u610f\u6539\u53d8\u4f4d\u7f6e:\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u96c6\u5408\u5143\u7d20\u4e2a\u6570,\u4fbf\u4e8e\u8bb0\u5f55\u4f4d\u7f6e\u3002\n\n\u8bfb\u5165\uff0c\u82e5\u4e3aM\u5219\u4e3a\u5408\u5e76\uff1bc\u5219\u4e3a\u67e5\u627e\u3002\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6218\u8230i\uff0c\u8bb0\u5f553\u4e2a\u53d8\u91cf\uff0cr[i]\u8868\u793a\u6218\u8230i\u5f53\u524d\u6307\u5411\u7684\u6839\u8282\u70b9\uff0cb[i]\u8868\u793a\u6218\u8230i\u524d\u9762\u7684\u6218\u8230\u6570\uff0cc[i]\u8868\u793a\u6218\u8230i\u540e\u9762\u7684\u6218\u8230\u6570\uff08\u5305\u62ec\u6218\u8230i\u81ea\u8eab\uff09\u3002\n\n\n\u521d\u59cb\u65f6\uff0ca[i]=i\uff0cb[i]=0\uff0cc[i]=1\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u547d\u4ee4\uff0c\u5148\u8fdb\u884c\u8def\u5f84\u538b\u7f29\uff0c\u7136\u540e\u518d\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff08\u8be6\u60c5\u53c2\u89c1\u300a\u7b97\u6cd5\u827a\u672f\u4e0e\u4fe1\u606f\u5b66\u7ade\u8d5b\u300b82\u9875\uff09\u3002\n\n```delphi\n\nvar \n    n,i,f1,f2,a,b:longint;\n    ch:char;\n    sum,f,s:array [0..30000] of longint;\n\nfunction getfather(v:longint):longint;\nvar \n    p:longint;\nbegin\n    if f[v]=v then exit(v);\n    p:=getfather(f[v]);\n    s[v]:=s[f[v]]+s[v];\n    f[v]:=p;\n    getfather:=f[v];\nend;\n\nbegin\n    readln(n);\n    for i:=1 to 30000 do begin \n        s[i]:=0;\n        sum[i]:=1;\n        f[i]:=i;\n    end;\n  for i:=1 to n do begin\n        read(ch);\n        readln(a,b);\n        f1:=getfather(a);\n        f2:=getfather(b);\n        if ch='M' then begin\n            s[f1]:=sum[f2]+s[f1];\n            sum[f2]:=sum[f2]+sum[f1];\n            f[f1]:=f2;\n        end;\n        if ch='C' then\n            if f1<>f2 then writeln(-1) \n                else writeln(abs(s[a]-s[b])-1);\n    end;\nend.\n\n```",
        "postTime": 1442843371,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1196 \u3010\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u3011"
    }
]