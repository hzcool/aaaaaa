[
    {
        "content": "~~\u524d\u8a00\uff1a\u8fd9\u91cc\u6709\u4e00\u53ea\u8003\u573a\u4e0a\u4ee5\u4e3a\u6253\u4e8620\u5206\u90e8\u5206\u5206\u6c11\u95f4\u6570\u636e\u53ea\u670910\u5206\u8d5b\u540e100\u5206\u7684\u849f\u84bb\u3002~~\n\n\u9898\u76ee\u4f20\u9001\u95e8\uff1a[P6186 [NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f](https://www.luogu.com.cn/problem/P6186)\n\n\u89e3\u9898\u601d\u8def\uff1a\n\n\u6211\u4eec\u8981\u505a\u51fa\u8fd9\u9053\u9898\u76ee\uff0c\u9996\u5148\u8981\u53d1\u73b0\u5192\u6ce1\u6392\u5e8f\u7684\u672c\u8d28\uff0c\u6211\u4eec\u77e5\u9053\u5192\u6ce1\u6392\u5e8f\u5916\u5c42\u5faa\u73af\u6700\u591a\u8dd1 $n-1$ \u6b21\uff08\u5b9e\u9645\u4e0a\u662f $n$ \u6b21\uff0c\u53ea\u4e0d\u8fc7\u6700\u540e\u4e00\u6b21\u5e8f\u5217\u5df2\u7ecf\u662f\u6709\u5e8f\u7684\u4e86\uff0c\u53ef\u4ee5\u7701\u53bb\uff09\u3002\n\n\u4f8b\u5b50\uff1a4 3 5 2 1\n\n\u90a3\u4e48\u8fd9\u4e2a\u5e8f\u5217\u8fdb\u884c\u4e00\u6b21\u5192\u6ce1\u4e4b\u540e\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\u3002\n\n\u7b2c\u4e00\u8f6e\u540e\uff1a3 4 2 1 5\n\n\u6211\u4eec\u53d1\u73b0\uff0c4\u4e0e3\u4ea4\u6362\uff0c5\u4e0e2\u4e0e1\u4ea4\u6362\uff0c\u4f462\u5374\u6ca1\u6709\u548c1\u4ea4\u6362\uff0c\u6240\u4ee5\u4e00\u4e2a\u6570\u53ef\u4ee5\u540c\u81ea\u5df1\u53f3\u8fb9\u7684\u6570\u8fdb\u884c\u4ea4\u6362\u5f53\u4e14\u4ec5\u5f53\u5de6\u8fb9\u6ca1\u6709\u6bd4\u5b83\u5927\u7684\u6570\uff0c\u5f62\u8c61\u5316\u4e3a\u5f53\u4f60\u7684\u5de6\u624b\u8fb9\u6ca1\u6709\u6bd4\u4f60\u66f4\u5f3a\u7684\u4eba\u78be\u538b\u4f60\uff0c\u4f60\u5c31\u53ef\u4ee5\u4e00\u8def\u5411\u53f3\u78be\u538b\uff0c\u76f4\u5230\u78b0\u5230\u4e00\u4e2a\u6bd4\u4f60\u5f3a\u7684\u4eba\uff0c\u6211\u4eec\u5c06\u6b64\u7c7b\u6570\u7684\u72b6\u6001\u79f0\u4e3a\u53ef\u4ee5\u78be\u538b\u522b\u4eba\uff0c\u975e\u6b64\u7c7b\u6570\u79f0\u4e3a\u4e0d\u53ef\u78be\u538b\u522b\u4eba\uff0c\u8fd9\u4e2a\u5c31\u662f\u5192\u6ce1\u6392\u5e8f\u7684\u672c\u8d28\u3002\n\n\u672c\u8d28\u5f04\u6e05\u4e86\uff0c\u6211\u4eec\u8fd8\u8981\u5904\u7406\u7684\u662f\uff0c\u6bcf\u6b21\u5192\u6ce1\u4f1a\u51cf\u5c11\u591a\u5c11\u9006\u5e8f\u5bf9\uff0c\u5982\u679c\u5f53\u524d\u6709 $x$ \u4e2a\u53ef\u4ee5\u78be\u538b\u522b\u4eba\u7684\u6570\uff0c\u5219\u8fd9 $x$ \u4e2a\u6570\u5728\u6b64\u8f6e\u90fd\u4e0d\u4f1a\u88ab\u78be\u538b\uff0c\u5219\u6709 $n-x$ \u4e2a\u6570\u4f1a\u88ab\u78be\u538b\uff0c\u9006\u5e8f\u5bf9\u5c31\u51cf\u5c11\u4e86 $n-x$ \u4e2a\u3002\n\n\u6240\u4ee5\u5f53\u4e00\u4e2a\u6570\u524d\u9762\u6709 $y$ \u4e2a\u6bd4\u5b83\u5927\u7684\u6570\u7684\u8bdd\uff0c\u8fd9\u4e2a\u6570\u4f1a\u5728\u7b2c $y+1$ \u8f6e\u5192\u6ce1\u4e2d\u78be\u538b\u522b\u4eba\u3002\n\n\u7528\u6811\u72b6\u6570\u7ec4\u7b97\u51fa\u4ece\u672a\u5f00\u59cb\uff08\u7b2c $1$ \u8f6e\uff09\u4e00\u76f4\u5230\u7b2c $n$ \u6b21\u5192\u6ce1\uff08\u7b2c $n+1$ \u8f6e\uff09\u6bcf\u4e00\u8f6e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u8fd9\u4e2a\u662f\u521d\u59cb\u5316\uff0c\u5373\u4e0d\u8fdb\u884c\u4ea4\u6362\u7684\u6bcf\u8f6e\u5192\u6ce1\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u8fdb\u884c\u4ea4\u6362\u7684\u8bdd\u5982\u4f55\u4fee\u6539\uff1f\u6211\u4eec\u8bbe\u6570\u7ec4 $a$ \u662f\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c \u6570\u7ec4 $b$ \u662f\u6b64\u5143\u7d20\u524d\u6709\u51e0\u4e2a\u6bd4\u5b83\u5927\u7684\u5143\u7d20\u3002\n\n\u5982\u679c $a_x < a_{x+1}$ \uff0c\u90a3\u4e48\u4ea4\u6362 $a$ \u548c $b$ \u6570\u7ec4\u4e4b\u540e\u521d\u59cb\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u4f1a $+1$ \uff0c $b_{x+1}$ \u4e5f\u4f1a $+1$ \u4e5f\u4f1a\u4f46\u8fd9\u4e2a\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684 $+1$ \u4f1a\u5728\u4ec0\u4e48\u65f6\u5019\u5931\u6548\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u4ea4\u6362\u540e $b_{x+1}+1$ \uff0c\u5f53\u4ea4\u6362\u524d\u7684 $a_{x}$ \u53ef\u4ee5\u78be\u538b\u522b\u4eba\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u5192\u6ce1\u7684\u65f6\u5019\uff0c\u591a\u51fa\u7684\u9006\u5e8f\u5bf9\u5c31\u6ca1\u6709\u5f71\u54cd\u4e86\uff0c\u5373\u5728 $b_{x+1}+1$ \u524d\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u51cf\u53bb $1$ \uff0c\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5176\u4ed6\u4fee\u6539\u4e86\u5462\uff1f\u56e0\u4e3a\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u53ea\u4f1a\u5f71\u54cd\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u5bf9\u524d\u540e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u6ca1\u6709\u591a\u4f59\u5f71\u54cd\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u5e8f\u5217\uff1a2 1 3\n\n\u4ea4\u6362\u540e\u9762\u4e24\u4e2a\u5143\u7d20\uff1a2 3 1\n\n\u5f53\u5e8f\u5217\u4e3a\uff1a1 2 3\u7684\u65f6\u5019\u9006\u5e8f\u5bf9\u4e2a\u6570\u6062\u590d\u539f\u72b6\u3002\n\n\u5982\u679c $a_x > a_{x+1}$ \uff0c\u90a3\u4e48\u4ea4\u6362 $a$ \u548c $b$ \u6570\u7ec4\u4e4b\u540e\u521d\u59cb\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u4f1a $-1$ \uff0c $b_{x}$ \u4e5f\u4f1a $-1$ \u4e5f\u4f1a\u4f46\u8fd9\u4e2a\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684 $-1$ \u4f1a\u5728\u4ec0\u4e48\u65f6\u5019\u5931\u6548\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u4ea4\u6362\u540e $b_{x}-1$ \uff0c\u5f53\u4ea4\u6362\u540e\u7684 $a_x$ \u53ef\u4ee5\u78be\u538b\u522b\u4eba\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u5192\u6ce1\u7684\u65f6\u5019\uff0c\u51cf\u53bb\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u6ca1\u6709\u5f71\u54cd\u4e86\uff0c\u5373\u5728 $b_{x}-1$ \u540e\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u52a0\u4e0a $1$ \uff0c\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5176\u4ed6\u4fee\u6539\u4e86\u5462\uff1f\u56e0\u4e3a\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u53ea\u4f1a\u5f71\u54cd\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u5bf9\u524d\u540e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u6ca1\u6709\u591a\u4f59\u5f71\u54cd\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u5e8f\u5217\uff1a2 3 1\n\n\u4ea4\u6362\u540e\u9762\u4e24\u4e2a\u5143\u7d20\uff1a2 1 3\n\n\u5f53\u5e8f\u5217\u4e3a\uff1a1 2 3\u7684\u65f6\u5019\u9006\u5e8f\u5bf9\u4e2a\u6570\u6062\u590d\u539f\u72b6\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6bd4\u8f83\u4ea4\u6362\u524d\u540e\u7684 $a$ \uff0c\u8f83\u5c0f\u7684\u5728\u524d\u9762\u7684 $a$ \u7684 $b$ \u6570\u7ec4\u5c31\u662f\u9006\u5e8f\u5bf9\u6700\u65e9\u4e0d\u4ea7\u751f\u5f71\u54cd\u7684\u5730\u65b9\u3002\n\n\u6700\u540e\u5229\u7528\u5dee\u5206\u601d\u60f3\u67e5\u8be2\u5373\u53ef\u3002\n\n\u5982\u679c\u770b\u4e00\u904d\u770b\u4e0d\u61c2\uff0c\u8bf7\u7ec6\u54c1\u3002\n\n\u5982\u679c\u8fd8\u662f\u770b\u4e0d\u61c2\uff0c\u5efa\u8bae\u601d\u8003\u4ea4\u6362\u540e $a_x$ \u524d\u9762\u7684\u6570\u5bf9\u4e8e\u540e\u9762\u7684\u9006\u5e8f\u5bf9\u4ea7\u751f\u7684\u5f71\u54cd\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+5;\nint n,m,a[maxn],b[maxn],d[maxn];\nlong long c[maxn],ans;\ninline int lowbit(int x){\n\treturn x&(-x);\n}\ninline void update(int x,long long val){\n\twhile(x<=n){\n\t\tc[x]+=val;\n\t\tx+=lowbit(x);\n\t}\n}\ninline long long getsum(int x){\n\tlong long res=0;\n\twhile(x>0){\n\t\tres+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\nint main(){\n\tint opt,x,tmp=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=i-1-getsum(a[i]);\n\t\tans+=b[i],++d[b[i]];\n\t\tupdate(a[i],1);\n\t}\n\tmemset(c,0,sizeof(c));\n\tupdate(1,ans);\n\tfor(int i=0;i<n;++i){\n\t\ttmp+=d[i];\n\t\tupdate(i+2,-(n-tmp));\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&opt,&x);\n\t\tx=min(x,n-1);\n\t\tif(opt==1){\n\t\t\tif(a[x]<a[x+1]){\n\t\t\t\tswap(a[x],a[x+1]);\n\t\t\t\tswap(b[x],b[x+1]);\n\t\t\t\tupdate(1,1);\n\t\t\t\tupdate(b[x+1]+2,-1);\n\t\t\t\tb[x+1]++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswap(a[x],a[x+1]);\n\t\t\t\tswap(b[x],b[x+1]);\n\t\t\t\tupdate(1,-1);\n\t\t\t\tb[x]--;\n\t\t\t\tupdate(b[x]+2,1);\n\t\t\t}\n\t\t}\n\t\telse printf(\"%lld\\n\",getsum(x+1));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1583569646,
        "uid": 85514,
        "name": "\u4e07\u4e07\u6ca1\u60f3\u5230",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P6186 [NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P6186)\n\n\u5927\u610f\u5c31\u662f\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u5bf9\u5176\u8fdb\u884c\u4e24\u4e2a\u64cd\u4f5c\uff0c\u4ea4\u6362\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\uff0c\u6216\u8005\u5bf9\u5168\u5e8f\u5217\u8fdb\u884c**\u4e00\u904d**\u5192\u6ce1\u6392\u5e8f\u3002\n\n\u89c2\u5bdf\u9898\u9762\u53ef\u4ee5\u53d1\u73b0\n\n- \u5f53ti=1\u65f6\u6211\u4eec\u9700\u8981\u4ea4\u6362\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\n- \u5f53ti=2\u65f6\u6211\u4eec\u9700\u8981\u5bf9\u5168\u5e8f\u5217\u8fdb\u884c\u5192\u6ce1\u6392\u5e8f\n\n\u7531\u4e8e\u6570\u636e\u91cf\u6781\u5927\uff0c\u663e\u7136\u66b4\u529b\u7684\u6a21\u62df\u4e00\u5b9a\u4e0d\u884c\n\n\u6211\u4eec\u8bb0\u5f55\u7b2ci\u4f4d\u6570\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u7684\u6570\u91cf\u4e3a$before[i]$\uff0c\u663e\u7136\uff0c\u5f53\u524d\u5e8f\u5217\u7684\u603b\u9006\u5e8f\u5bf9\u6570\u91cf\u5c31\u662f\u6240\u6709\u7684$before$\u4e4b\u548c\n\n\u901a\u8fc7\u5bf9\u5192\u6ce1\u6392\u5e8f\u7684\u89c2\u5bdf\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u904d\u5192\u6ce1\u6392\u5e8f\u90fd\u4f1a\u4f7f\u5f97\u6240\u6709$before[i]=max(before[i]-1,0)$\n\n\u6211\u4eec\u91c7\u7528\u6811\u72b6\u6570\u7ec4\u5dee\u5206\u7ef4\u62a4\u8fd9\u4e00\u64cd\u4f5c\uff0c\u4ee4$sum(t)$\u4e3a\u5f53$ti=2$\uff0c$k=t$\u65f6\u7684\u7b54\u6848\n\n\u5728\u6570\u7ec4\u6700\u524d\u9762\u52a0\u5165\u5f53\u524d\u5e8f\u5217\u603b\u9006\u5e8f\u5bf9\u6570\u91cf\uff0c\u7136\u540e\u5728\u7b2c$i$\u4f4d\u653e$before$\u5927\u4e8e$i$\u7684\u6570\u5b57\u7684\u6570\u91cf\u7684\u76f8\u53cd\u6570\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u5b57\u5728\u7b2c$i$\u8f6e\u9006\u5e8f\u5bf9\u6570\u5747\u4f1a\u51cf$1$\n\n\u6700\u540e\u5229\u7528\u5dee\u5206\u76f4\u63a5\u6c42\u89e3\u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint input[200005], before[200005], record[200005];\nint n;\n\nlong long tree[200005];\ninline int lowbit(int x)\n{\n\treturn x & (-x);\n}\nvoid add(int x, long long val)\n{\n\tfor (; x <= n; x += lowbit(x))\n\t\ttree[x] += val;\n\treturn;\n}\nlong long sum(int x)\n{\n\tlong long res = 0;\n\tfor (; x > 0; x -= lowbit(x))\n\t\tres += tree[x];\n\treturn res;\n}\n\nint main()\n{\n\tint m;\n\tscanf(\"%d%d\", &n, &m);\n\tlong long tot = 0; //\u5148\u8bb0\u5f55\u521d\u59cb\u72b6\u6001\u4e0b\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", input + i);\n\t\tbefore[i] = i - sum(input[i]); //\u8bb0\u5f55\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\u6570\u91cf\n\t\ttot += before[i];\t\t\t   //\u6700\u5f00\u59cbtot\u8bb0\u5f55\u521d\u59cb\u7684\u7b54\u6848\n\t\trecord[before[i]]++;\t\t   //\u6876\uff0crecord[i]=\u524d\u9762\u6709i\u4e2a\u6570\u5b57\u6bd4\u5b83\u5927\u7684\u6570\u5b57\u7684\u6570\u91cf\n\t\tadd(input[i], 1);\t\t\t   //\u6811\u72b6\u6570\u7ec4\u4f5c\u6876\n\t}\n\tmemset(tree, 0, sizeof(tree)); //\u6e05\u7a7a\n\tadd(1, tot);\t\t\t\t   //\u5b9e\u73b0\u5dee\u5206\uff0c\u5148\u628a\u5e8f\u5217\u603b\u9006\u5e8f\u5bf9\u6570\u91cf\u653e\u5728\u6700\u524d\u9762\n\ttot = 0;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\ttot += record[i]; //\u6bcf\u6b21tot\u8bb0\u5f55\u7684\u662f\u524d\u9762\u6709\u5c0f\u4e8e\u7b49\u4e8ei\u4e2a\u6570\u5b57\u6bd4\u5b83\u5927\u7684\u6570\u5b57\u7684\u6570\u91cf\n\t\t//\u5219n-tot\u5373\u4e3a\u524d\u9762\u6709\u5927\u4e8ei\u4e2a\u6570\u5b57\u6bd4\u5b83\u5927\u7684\u6570\u5b57\u7684\u6570\u91cf\n\t\tadd(i + 2, -(n - tot)); //\u5b9e\u73b0\u5dee\u5206\uff0c\u5728\u8fd9\u4e00\u4e2a\u4f4d\u7f6e\u4f1a\u6709n-tot\u4e2a\u6570\u5b57\u9006\u5e8f\u5bf9\u6570\u51cf1\n\t\t\t\t\t\t\t\t//\u7531\u4e8e\u4e0b\u6807\u95ee\u9898\uff0ci\u5fc5\u987b+2\uff0c\u8fd9\u6837\u5f53i=0\u65f6\u5c31\u4f1a\u50a8\u5b58\u5728\u7b2c2\u4f4d\uff0c\u800c\u7b2c1\u4f4d\u662f\u653e\u603b\u9006\u5e8f\u5bf9\u6570\u7684\n\t}\n\tfor (int i = 0, opt, x; i < m; i++)\n\t{\n\t\tscanf(\"%d%d\", &opt, &x);\n\t\tx = min(x, n - 1); //\u5bf9opt=2\u7684\u60c5\u51b5\u8fdb\u884c\u4f18\u5316\n\t\tif (opt == 1)\n\t\t{\n\t\t\tx--;\n\t\t\tif (input[x] < input[x + 1])\n\t\t\t{\n\t\t\t\tswap(input[x], input[x + 1]);\n\t\t\t\tswap(before[x], before[x + 1]);\n\t\t\t\tadd(1, 1);\t\t\t\t\t//\u9006\u5e8f\u5bf9\u603b\u6570\u91cf\u589e\u52a01\n\t\t\t\tadd(before[x + 1] + 2, -1); //\u7531\u4e8ebefore[x+1]\u589e\u52a0\u4e86\uff0c\u6240\u4ee5\u5728\u539fbefore[x+1]\u8f6e\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u9006\u5e8f\u5bf9-1\uff0c\u6240\u4ee5\u8bb0\u5f55-1\n\t\t\t\tbefore[x + 1]++;\t\t\t//input[x]\u4ea4\u6362\u5230x+1\u4f4d\u4e0a\u540e\uff0c\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u91cf\u589e\u52a0\u4e861\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tswap(input[x], input[x + 1]);\n\t\t\t\tswap(before[x], before[x + 1]);\n\t\t\t\tadd(1, -1);\t\t\t   //\u9006\u5e8f\u5bf9\u603b\u6570\u91cf\u51cf\u5c111\n\t\t\t\tbefore[x]--;\t\t   //input[x+1]\u4ea4\u6362\u5230x\u4f4d\u4e0a\u540e\uff0c\u524d\u9762\u7684\u6bd4\u5b83\u5927\u7684\u6570\u91cf\u51cf\u5c11\u4e861\n\t\t\t\tadd(before[x] + 2, 1); //\u7531\u4e8ebefore[x]\u51cf\u5c11\u4e86\uff0c\u6240\u4ee5\u5728\u539fbefore[x]\u8f6e\u65f6\u65e0\u6cd5\u4f7f\u9006\u5e8f\u5bf9\u51cf\u5c11\uff0c\u6240\u4ee5\u8bb0\u5f551\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tprintf(\"%lld\\n\", sum(x + 1)); //\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1583629739,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "P6186"
    },
    {
        "content": "\uff08\u8fd9\u4e2a\u9898\u6211\u89c9\u5f97\u975e\u5e38\u953b\u70bc\u601d\u7ef4\u80fd\u529b~~\u5f53\u7136\u6211\u5f53\u65f6\u8003\u8bd5\u51a5\u601d\u82e6\u60f31\u4e2a\u591a\u5c0f\u65f6\u60f3\u4e0d\u51fa\u6765~~\uff09\n\n\uff08\u672c\u7bc7\u9898\u89e3\u53ef\u80fd\u8bf4\u6709\u6284\u88ad\u4e4b\u5acc\uff0c\u4f46\u6211\u60f3\u8bf4\uff0c\u8fd9\u4e9b\u8bdd\u90fd\u662f\u6211\u81ea\u5df1\u5f88\u901a\u4fd7\u7684\u7406\u89e3\uff08\u56e0\u4e3a\u81ea\u5df1\u7684OI\u80fd\u529b\u8fd8\u592a\u5f31\uff09\uff0c\u5e0c\u671b\u7ed9\u4e88\u5927\u5bb6\u66f4\u591a\u7684\u5e2e\u52a9\uff0c\u4ec5\u6b64\u800c\u5df2\uff09\n\n[\u5192\u6ce1\u5e8f\u5217](https://www.luogu.com.cn/problem/P6186)\n\n\u9898\u76ee\u7684\u96be\u70b9\uff1a\u5728O\uff08logn\uff09\uff08~~\u4e0d\u7136\u7edd\u5bf9T\u98de~~\uff09\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u7b2ck\u6b21\u5192\u6ce1\u6392\u5e8f\u540e\u6570\u7ec4\u7684\u9006\u5e8f\u5bf9\uff0c\u5e76\u4e14\u8fd8\u6709\u76f8\u90bb\u4ea4\u6362\u6570\u503c\u7684\u64cd\u4f5c\u8981\u5904\u7406\u3002\n\n\u4e4d\u4e00\u770b\u8981\u5728O\uff08logn\uff09\u5185\u5904\u7406\u64cd\u4f5c\uff0c\u77ac\u95f4\u8111\u5b50\u91cc\u8e66\u51fa\u4e86\u7ebf\u6bb5\u6811\u6811\u72b6\u6570\u7ec4\u7684\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\uff0c\u7136\u540e\u7531\u4e8e\u4e4b\u524d\u5199\u8fc7\u4e86\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\uff08\u53ef\u53c2\u8003\u8fd9\u7bc7\u535a\u5ba2[\u6811\u72b6\u6570\u7ec4\u7684\u5c0f\u6574\u7406](https://www.luogu.com.cn/blog/wqqakioi/shu-zhuang-shuo-zu-bit-di-xiao-zheng-li)\uff09\uff0c\u4e8e\u662f\u5c31\u60f3\u5230\u4e86\u7528\u6811\u72b6\u6570\u7ec4\u6765\u5199\u8fd9\u9053\u9898\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u8981\u6ce8\u610f\uff0c\u5199\u9898\u4e0d\u5e94\u8be5\u662f**\u62ff\u6570\u636e\u7ed3\u6784\u53bb\u5957\u9898\u76ee\u6240\u7ed9\u7684\u64cd\u4f5c\uff0c\u5148\u53bb\u60f3\u4e86\u4f18\u5316\u518d\u8e0c\u8e87\u6ee1\u5fd7\u5730\u53bb\u60f3\u9898\u76ee\u8be5\u600e\u4e48\u5199**\u3002\u6211\u4eec\u5e94\u8be5\u505a\u7684\uff08\u4ec5\u4f5c\u8005\u4e00\u5bb6\u4e4b\u8a00\uff09\uff0c\u662f\u5148\u53bb\u60f3**\u5982\u4f55\u5904\u7406\u9898\u76ee\u7ed9\u51fa\u7684\u95ee\u9898\uff0c\u60f3\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\uff0c\u518d\u8054\u60f3\u5230\u5bf9\u8fd9\u4e2a\u89e3\u51b3\u529e\u6cd5\u6709\u5e2e\u52a9\u7684\u5de5\u5177\uff0c\u5373\u6570\u636e\u7ed3\u6784**\u3002\u6211\u60f3\u8fd9\u79cd\u60f3\u6cd5\uff0c\u5e94\u8be5\u9002\u7528\u4e8e\u6211\u4eec\u6240\u6709\u7684\u9898\u76ee\u4e2d\uff0c\u4e0d\u4ec5\u4ec5\u53ea\u662f\u6570\u636e\u7ed3\u6784\u7684\u9898\u76ee\u3002\n\n\u6240\u4ee5\uff0c\u81ea\u5df1\u4ee5\u540e\u5f97\u6539\u6b63\u8fd9\u79cd\u60f3\u6cd5\uff0c\u5e76\u591a\u591a\u7ec3\u4e60\u5566\uff01\n\n\u597d\u6211\u4eec\u6765\u770b\u8fd9\u9053\u9898\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5148\u4e0d\u505a\u4efb\u4f55\u4ea4\u6362\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u5149\u662f\u8fd9\u4e2aO\uff08logn\uff09\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6c42k\u6b21\u5192\u6ce1\u6392\u5e8f\u540e\u7684\u9006\u5e8f\u5bf9\u5c31\u591f\u6211\u4eec\u559d\u4e00\u58f6\u4e86\u3002\n\n### \u4e00.\u601d\u8def\u521d\u63a2\n\n\u4e00\u4e2a\u4e00\u4e2a\u53bb\u6362\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c**\u6211\u4eec\u53ef\u80fd\u8981\u5b58\u4e00\u4e0bk\u6b21\u5192\u6ce1\u6392\u5e8f\u5bf9\u6bcf\u4e2a\u6570\u7684\u5f71\u54cd**\uff0c\u8fd9\u6837\u624d\u80fd\u4e0d\u53d7k\u6570\u503c\u7684\u9650\u5236\uff0c\u624d\u4e0d\u4f1a\u4e00\u76f4\u82e6\u60f3\u600e\u4e48\u5728\u8fd9k\u6b21\u53d8\u6362\u7684\u65b9\u5f0f\u91cc\u505a\u6587\u7ae0\u3002\n\n\u90a3\u4e48\uff0c\u65e2\u7136\u662f\u8981\u5b58\u8d77\u6765\u6bcf\u4e2a\u6570\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u53bb\u6c42\u51fa\u539f\u6570\u7ec4\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\uff0c\u7136\u540e\u518d\u5904\u7406\u5f71\u54cd\uff0c\u8f93\u51fa\u7b54\u6848\u3002**\u8fd9\u5c31\u662f\u4e00\u4e2a\u5927\u81f4\u7684\u601d\u8def\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u8981\u5148\u7b97\u51fa\u539f\u6570\u7ec4\u7684\u9006\u5e8f\u5bf9\uff08\u5047\u8bbe\u6709tot\u4e2a\uff09\uff0c\u518d\u53bb\u6807\u8bb0\uff0c\u6bcf\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u7ed9\u6bcf\u4e2a\u6570\u9020\u6210\u7684\u5f71\u54cd\uff0c\u7b97\u4e0a\u5f71\u54cd\u540e\u518d\u8f93\u51fa\u7b54\u6848**\u3002\n\n### \u4e8c.\u5904\u7406\u6bcf\u4e2a\u6570\u7684\u5f71\u54cd\n\n\u600e\u4e48\u53bb\u5904\u7406k\u6b21\u5192\u6ce1\u6392\u5e8f\u5bf9\u6bcf\u4e2a\u6570\u7684\u5f71\u54cd\u5462\uff1f\n\u5148\u6765\u4e3e\u4e2a\u4f8b\u5b50\u73a9\u73a9\uff0c\uff0c\uff0c\n\n1 4 5 2 3 \uff08\u8fd9\u662f\u539f\u6570\u7ec4\uff09\n\n\u5411\u4e0b\u7ecf\u8fc71\u8f6e\u6392\u5e8f\u2014\u2014\n\n1 4 2 3 5 \uff08\u5206\u6790\u4e00\u4e0b\uff0c2,3 \u52a8\u4e86\uff0c\u603b\u9006\u5e8f\u5bf9\u5931\u53bb\u4e862\u4e2a\uff085,2\u548c5,3\uff09\uff0c\u5e76\u4e142\u548c3\u90fd\u662f**\u524d\u9762\u67092\u4e2a\u6570\u6bd4\u5b83\u5927**\u7684\u6570\u3002\n\n\u5411\u4e0b\uff0c\u7b2c2\u8f6e\u2014\u2014\n\n1 2 3 4 5 \uff08\u8fd8\u662f2,3\u5728\u52a8\uff0c\u4ed6\u4eec\u662f**\u524d\u9762\u67092\u4e2a\u6570\u6bd4\u5b83\u5927**\u7684\u6570\uff09\n\n\u8bf6\uff0c\u597d\u50cf\u6709\u70b9\u89c4\u5f8b\uff0c\u4f3c\u4e4e\u8ddf**\u8be5\u6570\u5b57\u524d\u9762\uff08\u4e5f\u5c31\u662f\u5de6\u8fb9\uff09\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5927\u6709\u5173**\uff1f\n\n\u518d\u6765\u770b\uff1a\n\n5 1 2 4 3\n\n\u7b2c1\u8f6e\u540e\u2014\u2014\n\n1 2 4 3 5 \uff08**\u524d\u9762\u67091\u4e2a\u6570\u6bd4\u5b83\u5927\u76841,2\uff0c4 \u548c\u524d\u9762\u67092\u4e2a\u6570\u76843\u52a8\u4e86\uff0c\uff0c\uff0c**\uff09\n\n\u7b2c2\u8f6e\u2014\u2014\n\n1 2 3 4 5 \uff08**\u5728\u539f\u6570\u7ec4\u91cc\u770b\uff0c\u524d\u9762\u67092\u4e2a\u6570\u6bd4\u5b83\u5927\u76843\u52a8\u4e86**\uff09\n\n\u8bf6\u597d\u50cf\u771f\u7684\u4e0e\u8fd9\u4e2a\u6709\u5173\u7cfb\u8036\uff01\n\u6211\u4eec\u5c1d\u8bd5\u7740\u60f3\u5230\u4e00\u822c\u4e0a\u53bb\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u8bf4**\u5b83\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5927\uff0c\u90a3\u4e48\u5b83\u5c06\u4f1a\u5728\u8fd9\u4e2a\u6570\u503c\u7684\u90a3\u4e00\u8f6e\u91cc\u6700\u540e\u8bb0\u4e00\u6b21\u5f71\u54cd\uff0c\u7136\u540e\u505c\u4e0b\u6765**\u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\u4e0d\u59a8\u8ba8\u8bba\u4e00\u4e0b\uff0c\uff0c\uff0c\n\ncase 1\uff0c\u5047\u8bbe\u8fd9\u4e2a\u6570\u5de6\u8fb9\u76f8\u90bb\u7684\u6570\u6bd4\u5b83\u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u76f8\u90bb\u7684\u6570\u5fc5\u7136\u4f1a\u8bb0\u5230\u539f\u6570\u7684\u5f71\u54cd\u91cc\uff1b\n\ncase 2 \u5de6\u8fb9\u76f8\u90bb\u7684\u6570\u6bd4\u5b83\u5c0f\uff0c\u4ed4\u7ec6\u4e00\u60f3\u53d1\u73b0\u4e0d\u5f71\u54cd\u554a\uff01\u6bd4\u539f\u6570\u5927\u7684\u6570\u5fc5\u7136\u53ef\u4ee5\u6362\u5230\u8fd9\u91cc\u6765\uff0c\u9664\u975e\u51fa\u73b0\u4e00\u4e2a\u6570\u6321\u4f4f\u5b83\uff08\u90a3\u4e2a\u6bd4\u539f\u6570\u5927\u7684\u6570\uff09\uff0c\u90a3\u8fd9\u4e2a\u6570\u4e0d\u4e5f\u6bd4\u539f\u6570\u5927\uff0c\u8bb0\u5230\u5f71\u54cd\u91cc\u4e86\u561b\uff01\n\n\u6240\u4ee5\uff0c\u5230\u8fd9\u91cc\u4f3c\u4e4e\u6709\u4e86\u70b9\u611f\u89c9\uff0c\u4f3c\u4e4e\u660e\u767d\u8be5\u600e\u4e48\u53bb\u5904\u7406\u8fd9\u4e2a\u5f71\u54cd\u4e86\u3002\u6211\u4eec\u7684\u505a\u6cd5\u662f\uff1a\n\n1.\u7528before[i]\u8868\u793a**\u4f4d\u7f6ei\u7684\u6570a[i]\u7684\u524d\u9762\uff0c\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5927**\u3002\u663e\u7136\uff0c\u603b\u9006\u5e8f\u5bf9\u6570\u7684\u6bcf\u4e00\u4e2ai\u7684before[i]\u7684\u548c\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u5192\u6ce1\u6392\u5e8f\uff0cbefore[i]\u7684\u53d8\u5316\u662f\uff0c\n\n### before[i] = max(before[i]-1,0)\n\n\u8fd9\u91cc\u4e00\u5b9a\u8981\u60f3\u660e\u767d\u8fd9\u4e2a\u65b9\u7a0b\u5f0f\u4e3a\u5565\u54e6\uff01\n\n2.\u7528record[i]\u8868\u793a\uff0c**\u6709i\u4e2a\u6570\u5728\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570 \u7684\u6570\u91cf**\u3002\u8fd9\u91cc\u60f3\u6e05\u695a\u54e6\uff01\n\n3.\u8bb0record[i]\u662f\u5e72\u5565\u7684\uff1f\u5c31\u662f\u4e3a\u4e86\u8ba1\u7b97**\u5f53\u524d\u8fd9\u4e00\u8f6e\u4f1a\u6709\u591a\u5c11\u4e2a\u6570\u5904\u4e8e\u5f71\u54cd\u8303\u56f4\u5185\uff0c\u4e22\u5931\u4e00\u4e2a\u9006\u5e8f\u5bf9**\u3002\u6211\u4eec\u5229\u7528\u524d\u7f00\u548c\u7684\u5f62\u5f0f\uff08\u5373\u6ce8\u610f\u70b91\u7684\u64cd\u4f5c\uff0c\u597d\u597d\u4f53\u4f1a\u4e00\u4e0b\uff09\u80fd\u591f\u8bb0\u4e0b\uff0c**\u524d\u9762\u6709\u5c0f\u4e8e\u7b49\u4e8ei\u4e2a\u6570\u6bd4\u5b83\u5927\u7684\u6570\u7684\u6570\u91cf**\uff0c\u8bb0\u505atot\uff0c\u90a3\u4e48**\u524d\u9762\u6709\u5927\u4e8ei\u4e2a\u6570\u6bd4\u5b83\u5927\u7684\u6570\u7684\u6570\u91cf\uff0c\u5373\u5728\u672c\u8f6e\u4f1a\u4e22\u59311\u4e2a\u9006\u5e8f\u5bf9\u7684\u6570\u7684\u6570\u91cf**\uff0c\u5c31\u662f\uff08n-tot\uff09\u5566\uff01\n\n\u6b64\u65f6\u518d\u8054\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u4e00\u4e2aO\uff08logn\uff09\u7684\u5dee\u5206\u64cd\u4f5c\uff0c\u628a\u7b2c\u4e00\u4f4d\u7684\u503c\u8d4b\u4e0a\u521d\u59cb\u7684\u603b\u9006\u5e8f\u5bf9\u6570\uff0c\u4ece\u7b2c\u4e8c\u4f4d\u5f00\u59cb\uff08\u7b2c\u4e8c\u4f4d\u8868\u793a\u8fdb\u884c\u7b2c\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\uff09O\uff08logn\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\uff0c\u5b58\u4e0b\u6bcf\u8f6e\u7684\u603b\u5f71\u54cd\u3002\n\u55ef\uff0c\u5c31\u8fd9\u4e9b\uff01\u6ca1\u4e8b\u7684\uff0c\u8fd9\u91cc\u53ef\u80fd\u8981\u591a\u60f3\u60f3\u54af\u3002\n\n### \u4e09.\u6267\u884c\u4ea4\u6362\u64cd\u4f5c\uff0c\u6211\u8be5\u600e\u4e48\u641e\n\n\u56e0\u4e3a\u53ea\u662f\u4ea4\u6362\u76f8\u90bb\u4e24\u9879\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\uff0c**\u9664\u8fd9\u4e24\u9879\u4ee5\u5916\u7684\u5176\u4ed6\u9879\u7684\u9006\u5e8f\u5bf9\u6570\u548c\u5176\u4ed6\u4fe1\u606f\u4e0d\u4f1a\u6709\u53d8\u5316**\u3002\n\u90a3\u4e48\u6211\u4eec\u6765\u770b\uff0c\n\n1.a[x] < a[x+1]\u3002\n\n\u9996\u5148\u4ea4\u6362x\u548cx+1\u7684a\u503c\u548cbefore\u503c\u3002\n\n\u7136\u540e\u6ce8\u610f\uff0cx+1\u7684\u4f4d\u7f6e\u4e0a\u591a\u4e86\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u6570\u3002\u6240\u4ee5before[x+1]++;\n\n\u603b\u9006\u5e8f\u5bf9\u6570+1\uff0c\u5373add\uff081\uff0c1\uff09\uff1b\n\n**\u6211\u4eec\u8fd8\u5f97\u8003\u8651\u7b2ck\u8f6e\u5192\u6ce1\u6392\u5e8f\u7684\u5f71\u54cd\u3002before[x]\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u6240\u4ee5\u5230\u7b2cbefore[x+1]\u8f6e\u65f6\u5192\u6ce1\u6392\u5e8f\uff0c\u6211\u4eec\u5f97\u628a\u8fd9\u4e2a1\u518d\u51cf\u56de\u6765\uff0c\u5373add(before[x+1] + 1,-1)\uff0c\u6ce8\u610f\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u5185\u7684\u5750\u6807\u54e6**\uff01\n\n2.a[x] > a[x+1]\u3002\u540c\u4e0a\u53cd\u8fc7\u6765\u54af\uff0c\u6ce8\u610f\u7ec6\u8282\uff01\n\n\u8fd9\u91cc\u53ef\u80fd\u8981\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b\u6ce8\u610f\u70b92\u3002\n\n\u5728a[x] < a[x+1]\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u660e\u767d\uff0cbefore[x] \u5fc5\u7136 >= before[x+1],\u90a3\u4e48\u5728\u4ea4\u6362\u4f4d\u7f6e\u65f6\uff0c\u56e0\u4e3a\u591a\u4e86\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u6570\uff0cbeforex[x+1]\uff08\u539f\u6765\u7684a[x]\u7684\u4fe1\u606f\uff09++,\u90a3\u4e48\u539f\u6765\u7684a[x]\u7684before[x] > before[x+1]\uff08\u539f\u6765a[x+1]\u7684\u4fe1\u606f\uff09\uff0c\u5373\u73b0\u5728\u7684before[x] < before[x+1]\uff0c\u4f46\u8fd9\u4e2a\u64cd\u4f5c\u5e76\u6ca1\u6709\u5f71\u54cd\u5230**\u539f\u6765a[x+1]\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u8981\u5904\u7406\u7684\u662f\u539f\u6765\u7684a[x]\u7684\u4fe1\u606f\u7684\u5f71\u54cd,\u5373\u5904\u7406\u73b0\u5728\u7684before[x+1]\u3002**  \u6bd4\u59821,2,3\uff0c\u82e5\u4ea4\u63622,3\uff0c\u6362\u8fc7\u6765\u4ee5\u540e\u53d8\u62101,3,2\uff0c\u90a3\u4e482\u7684\u5f71\u54cd\u503c\u4fbf\u5728**\u5f53\u524d\u7684**before[2]\u8f6e\u4e0a\uff0c\u6240\u4ee5\u6709\u5148before[x+1]++,\u518dadd(before[x+1]+1,-1\uff09\uff1b\n\n\u540c\u6837\uff0c\u5728a[x] > a[x+1]\u7684\u65f6\u5019\uff0c\u6211\u4eec\u548c\u4e0a\u9762\u540c\u7406\u610f\u4f1a\u4e00\u4e0b\uff0c\u662f\u4e0d\u662f**\u539f\u6765a[x]\u7684\u4fe1\u606f\uff08\u73b0\u5728\u4ea4\u6362\u540e\u7684a[x+1],before[x+1]\uff09\u662f\u4e0d\u662f\u6ca1\u6709\u52a8**\u5440\u3002\u90a3\u4e48\u8fd9\u4e2a\u4ea4\u6362\uff0c\u540c\u6837\uff0c\u5c31\u5bf9**\u5192\u6ce1\u6392\u5e8f\u5bf9\u8fd9\u4e2a\u6570\u7684\u5f71\u54cd**\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u5728\u4e0a\u9762\u3002**\u6709\u5f71\u54cd\u7684\u5c31\u53d8\u6210\u539f\u6765\u7684a[x+1]\uff08\u73b0\u5728\u7684a[x],before[x]\uff09\u4e86**\u3002\u81f3\u4e8e\u5177\u4f53\u5f71\u54cd\u5728\u54ea\u4e00\u8f6e\uff0c\u8fd9\u4e2a\u8bf4\u8001\u5b9e\u8bdd\u786e\u5b9e\u975e\u5e38\u975e\u5e38\u4e0d\u597d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u4e0b\u9762\u7684\u4f8b\u5b50\u53bb\u7406\u89e3\u5c31\u884c\uff0c\n\n\u6bd4\u59826,5,4,3,2,1\uff0c\u4ea4\u63623,2\uff0c\u53d8\u62106,5,4,2,3,1\uff0c\u90a3\u4e48\u5728\u539f\u6765\u7684\u7b2cbefore[2] \uff08\u539f\u6765before[2] = 4\uff09\u8f6e\u4e0a\uff0c\u539f\u6765\u56e0\uff083,2\uff09\u5728\u6811\u72b6\u6570\u7ec4\u91cc\u7ed9\u5230\u7684\u4e00\u4e2a\u9006\u5e8f\u5bf9\u7684\u5f71\u54cd**\u5728\u65b0\u7684\u6570\u7ec4\u91cc\u6ca1\u6709\u4e86\uff0c\u4e0d\u5728\u7b97\u603b\u9006\u5e8f\u5bf9\u65f6\u518d\u7b97\u4e0a\u4e00\u904d\uff0c\u8fd9\u4e2a\uff0c\u5728\u73b0\u5728\u7684\u6570\u7ec4\u91cc\u4e0d\u5b58\u5728\u7684\u4e00\u4e2a\u9006\u5e8f\u5bf9**\u3002 \u6240\u4ee5\uff0c\u5728\u8fd9\u91cc\uff0c\u5148add(before[x]+1,1),\u518dbefore[x]--\uff1b\n\n\u5982\u679c\u5c0f\u7ed3\u4e00\u4e0b\u4e0a\u9762\u8fd9\u6bb5\u8bdd\u662f\u60f3\u63d0\u9192\u4ec0\u4e48\uff0c\u90a3\u5c31\u662f\uff1a\n\n### \u4ea4\u6362\u64cd\u4f5c\uff0c\u662f\u9700\u8981\u53bb\u5728\u6700\u521d\u59cb\u65f6\u7684\u6570\u7ec4\u91cc\u7684\u5f71\u54cd\u91cc\u4fee\u6539\u3002\n\n\u597d\u5566\uff0c\u672c\u9898\u5927\u529f\u544a\u6210\uff0c\u8fd8\u5f97\u591a\u52a0\u8bad\u7ec3\uff01\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int MAXN = 2e5 + 7;\ninline LL read(){\n\tLL f=1,r=0;char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){r=r*10+c-'0';c=getchar();}\n\treturn f*r;\n}\nLL a[MAXN];\nLL t[MAXN];\nLL n,m;\ninline LL lowbit(LL x){return x & (-x);}\nvoid add(LL x,LL v){\n\tfor(;x <= n;x += lowbit(x)) t[x] += v;\n}\nLL ask(LL x){\n\tLL res = 0;\n\tfor(;x > 0;x -= lowbit(x)) res += t[x];\n\treturn res;\n}\nLL x,op;\nLL tot,record[MAXN],before[MAXN];\nint main(){\n\tn = read();m = read();\n\tfor(LL i = 1;i <= n; i++) a[i] = read();\n\tfor(LL i = 1;i <= n; i++)\n\t{\n\t\tbefore[i] = i-1-ask(a[i]);\n\t\ttot += before[i];\n\t\trecord[before[i]]++;\n\t\tadd(a[i],1);\n\t}\n\tmemset(t,0,sizeof(t));\n\tadd(1,tot);\n\ttot = 0;\n\tfor(LL i = 1;i <= n; i++)\n\t{\n\t\ttot += record[i-1];//\u6ce8\u610f\u70b91\n\t\tadd(i+1,-(n-tot));\n\t}\n\tfor(LL i = 1;i <= m; i++)\n\t{\n\t\top = read();x = read();\n\t\tx = min(x,n-1);\n\t\tif(op == 2){cout<<ask(x+1)<<endl;}\n\t\telse if(op == 1)\n\t\t{\n\t\t\tif(a[x] < a[x+1])\n\t\t\t{\n\t\t\t\tswap(a[x],a[x+1]);\n\t\t\t\tswap(before[x],before[x+1]);\n\t\t\t\t\n\t\t\t\tbefore[x+1]++;\n\t\t\t\tadd(before[x+1]+1,-1);\n\t\t\t\tadd(1,1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswap(a[x],a[x+1]);\n\t\t\t\tswap(before[x],before[x+1]);\n\t\t\t\t//\u6ce8\u610f\u70b92\n\t\t\t\tadd(before[x]+1,1);//\u6ce8\u610f\u4e00\u4e0b\u8fd9\u91cc\u548c\u4e0a\u9762\u7684\u987a\u5e8f\uff0c\u591a\u60f3\u60f3\uff01\n\t\t\t\tbefore[x]--;\n\t\t\t\tadd(1,-1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n _\u8fd9\u6b21\u6ca1\u4ec0\u4e48\u540d\u8a00\u4e86\uff0c_\n \n _\u4e0d\u8fc7\u5728\u8fd9\u4e2a\u7279\u6b8a\u7684\u65f6\u671f\u91cc\uff0c\u8fd8\u662f\u60f3\uff0c_\n \n  _\u5411\u6b64\u65f6\u6b64\u523b\u4ecd\u7136\u594b\u6218\u5728\u6297\u75ab\u4e00\u7ebf\u7684\u533b\u62a4\u4eba\u5458\u81f4\u656c\u3002_ ",
        "postTime": 1583674796,
        "uid": 61580,
        "name": "little_prince",
        "ccfLevel": 0,
        "title": "NOI online 2020\u300a\u5192\u6ce1\u5e8f\u5217\u300b"
    },
    {
        "content": "\u8003\u8651\u5192\u6ce1\u6392\u5e8f\u4e00\u8f6e\u5bf9\u9006\u5e8f\u5bf9\u7684\u53d8\u5316\u3002\n\n\u9996\u5148\u7ed9\u51fa\u7ed3\u8bba\uff1a\u5047\u8bbe\u539f\u672c\u5728\u4f4d\u7f6e $i$ \u4e0a\u7684\u9006\u5e8f\u5bf9\u6570\u4e3a $c_i$\uff0c\u5192\u6ce1\u6392\u5e8f\u4e00\u8f6e\u540e\uff0c\u4f4d\u7f6e $i$ \u4e0a\u7684\u9006\u5e8f\u5bf9\u6570\u53d8\u4e3a $\\max(0, c_{i+1}-1)$\u3002\n\n\u76f8\u5f53\u4e8e\u4e00\u4e2a**\u5de6\u79fb\uff0c\u51cf\u4e00\uff0c\u4e0e $0$ \u53d6 $\\max$** \u7684\u8fc7\u7a0b\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u5192\u6ce1\u6392\u5e8f\u4e00\u8f6e\u7684\u672c\u8d28\uff0c\u5176\u5b9e\u5c31\u662f\u4ece\u7b2c\u4e00\u4e2a\u6570\u5f00\u59cb\uff0c\u5c06\u5176\u62ff\u51fa\u6765\uff0c\u653e\u5230\u5b83\u540e\u9762\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u6570\u4e4b\u524d\uff0c\u7136\u540e\u5c06\u6bd4\u5b83\u5927\u7684\u90a3\u4e2a\u6570\u62ff\u51fa\u6765\uff0c\u518d\u5f80\u540e\u653e\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u5047\u8bbe\u6211\u4eec\u62ff\u51fa\u6765\u7684\u6570\u539f\u672c\u7684\u4e0b\u6807\u4e3a $i$\uff0c\u8981\u653e\u5230\u4e0b\u6807\u4e3a $j$ \u4e4b\u524d\u7684\u4f4d\u7f6e\uff0c\u5219 $(i,j)$ \u8fd9\u4e2a\u91cc\u9762\u7684\u6570\u5168\u90e8\u5f80\u524d\u79fb\u4e86\u4e00\u4f4d\uff0c\u540c\u65f6\u5728\u5b83\u4eec\u4e0a\u9762\u7684\u9006\u5e8f\u5bf9\u6570\u5c11\u4e86\u4e00\u4e2a\u3002\n\n\u800c\u62ff\u51fa\u6765\u7684\u6570\u4e00\u5b9a\u662f\u9006\u5e8f\u5bf9\u6570\u4e3a $0$ \u7684\u4f4d\u7f6e\uff0c\u5426\u5219\u524d\u9762\u4e00\u5b9a\u6709\u6bd4\u5b83\u5927\u7684\u6570\uff0c\u5b83\u5c31\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u62ff\u51fa\u6765\u3002\n\n\u56e0\u6b64**\u5de6\u79fb\uff0c\u51cf\u4e00\uff0c\u4e0e $0$ \u53d6 $\\max$** \u7684\u8fc7\u7a0b\u5c31\u662f\u9006\u5e8f\u5bf9\u6570\u53d8\u5316\u7684\u8fc7\u7a0b\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u5269\u4e0b\u7684\u5c31\u597d\u505a\u4e86\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u9006\u5e8f\u5bf9\u6570\u7684\u4e2a\u6570\u4ee5\u53ca\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n```cpp\nconst int N = 2e5 + 7;\nint n, m, a[N], b[N], c[N];\nll s[N];\n\ninline void add(int x, int k, ll w = 0) {\n\twhile (x <= n) c[x] += k, s[x] += w, x += x & -x;\n}\n\ninline pair<int, ll> ask(int x) {\n\tint k = 0;\n\tll w = 0;\n\twhile (x) k += c[x], w += s[x], x -= x & -x;\n\treturn mp(k, w);\n}\n\nint main() {\n\trd(n), rd(m), rda(a, n);\n\tfor (int i = 1; i <= n; i++)\n\t\tb[i] = ask(n).fi - ask(a[i]).fi, add(a[i], 1);\n\tfor (int i = 1; i <= n; i++) c[i] = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (b[i]) add(b[i], 1, b[i]);\n\twhile (m--) {\n\t\tint o, x;\n\t\trd(o), rd(x);\n\t\tif (o == 1) {\n\t\t\tif (a[x] < a[x+1]) {\n\t\t\t\tif (b[x]) add(b[x], -1, -b[x]);\n\t\t\t\t++b[x];\n\t\t\t\tif (b[x]) add(b[x], 1, b[x]);\n\t\t\t} else {\n\t\t\t\tif (b[x+1]) add(b[x+1], -1, -b[x+1]);\n\t\t\t\t--b[x+1];\n\t\t\t\tif (b[x+1]) add(b[x+1], 1, b[x+1]);\n\t\t\t}\n\t\t\tswap(a[x], a[x+1]), swap(b[x], b[x+1]);\n\t\t} else {\n\t\t\tif (x >= n) print(0);\n\t\t\telse {\n\t\t\t\tpair<int, ll> p1 = ask(n), p2 = ask(x);\n\t\t\t\tprint(p1.se - p2.se - 1ll * (p1.fi - p2.fi) * x);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1583588537,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u672c\u6765\u6bd4\u8d5b\u65f6\u80fdA\u7684\uff0c\u7ed3\u679c\u6700\u540e\u6539\u7ebf\u6bb5\u6811\u67e5\u8be2\u624b\u62bd\u6253\u9519\u4e86\uff0c\u800c\u4e14\u9519\u7684\u8fd8\u4ea4\u4e0a\u53bb\u4e86\uff0c\u5b8c\u7f8e\u7206\u96f6\u3002\n\n---------------------------\n\n\u8bbe $a[i]$ \u8868\u793a $i$ \u5728\u6392\u5217\u4e2d\u5728 $i$ \u524d\u9762\u5927\u4e8e $i$ \u7684\u6570\u5b57\u7684\u4e2a\u6570\uff0c\u6613\u5f97\u603b\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u662f $\\sum\\limits_{i=1}^na[i]$\u3002\n\n\u8003\u8651\u6bcf\u8f6e\u5192\u6ce1\u6392\u5e8f\u5bf9 $a[i]$ \u7684\u5f71\u54cd\u3002\n\n\u5982\u679c $a[i]>0$\uff0c\u8bf4\u660e\u5728 $i$ \u524d\u9762\u5b58\u5728\u6570\u5b57\u5927\u4e8e $i$\uff0c\u90a3\u4e48\u5728\u8fd9\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u5927\u4e8e $i$ \u7684\u6570\u4ece $i$ \u524d\u9762\u6362\u5230\u540e\u9762\uff0c\u4e5f\u5c31\u662f $a[i]$ \u53d8\u6210 $a[i]-1$\u3002\n\n\u5982\u679c $a[i]=0$\uff0c\u8bf4\u660e\u5728 $i$ \u524d\u9762\u6ca1\u6709\u6570\u6bd4 $i$ \u5927\uff0c\u800c\u6240\u6709\u6bd4 $i$ \u5927\u7684\u6570\u5728\u5192\u6ce1\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u5e76\u4e0d\u4f1a\u4ece $i$ \u540e\u9762\u6362\u5230\u524d\u9762\uff0c\u6240\u4ee5 $a[i]$ \u4e0d\u53d8\u4ecd\u4e3a $0$\u3002\n\n\u8bbe $b[i]$ \u8868\u793a $a[j]=i$ \u7684\u4e2a\u6570\uff0c\u7b54\u6848\u8f6c\u5316\u4e3a $\\sum\\limits_{i=k}^{n-1}(i-k)\\times b[i]$\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5f00\u59cb\u8ba1\u7b97 $a[i]$ \u53ef\u7528\u6811\u72b6\u6570\u7ec4\u3002\n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define ls(w) w<<1\n#define rs(w) (w<<1)^1\nusing namespace std;\nstruct xds{\n\tint l,r;\n\tll x,y;\n};\nxds tree[800005];\nll sz[200005],nxd[200005],t[200005];\nint n,m,p[200005];\nint dr()\n{\n\tint xx=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')xx=(xx<<1)+(xx<<3)+ch-'0',ch=getchar();\n\treturn xx*f;\n}\nvoid xg(int w,ll x){while(w<=n)sz[w]+=x,w+=w&-w;}\nll cx(int w){ll x=0;while(w)x+=sz[w],w-=w&-w;return x;}\nvoid u(int w){tree[w].x=tree[ls(w)].x+tree[rs(w)].x,tree[w].y=tree[ls(w)].y+tree[rs(w)].y;}\nvoid csh(int w,int l,int r)\n{\n\ttree[w].l=l,tree[w].r=r;\n\tif(l==r)\n\t{\n\t\ttree[w].x=t[l]*l,tree[w].y=t[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tcsh(ls(w),l,mid),csh(rs(w),mid+1,r);\n\tu(w);\n}\nvoid xg_2(int w,int xh,ll x)//\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u662f2\uff0c\u6211\u539f\u6765\u5199\u8fc7\u4e00\u4e2a\u533a\u95f4\u4fee\u6539\u53d1\u73b0\u6ca1\u7528\u5220\u4e86\n{\n\tif(tree[w].l==tree[w].r)\n\t{\n\t\ttree[w].y+=x,tree[w].x=tree[w].y*tree[w].l;\n\t\treturn;\n\t}\n\tint mid=(tree[w].l+tree[w].r)>>1;\n\tif(xh<=mid)xg_2(ls(w),xh,x);\n\telse xg_2(rs(w),xh,x);\n\tu(w);\n}\nll cx_1(int w,int l,int r)\n{\n\tif(r<l)return 0; \n\tif(l<=tree[w].l&&tree[w].r<=r)return tree[w].x;\n\tint mid=(tree[w].l+tree[w].r)>>1;ll x=0;\n\tif(l<=mid)x+=cx_1(ls(w),l,r);\n\tif(mid<r)x+=cx_1(rs(w),l,r);\n\treturn x;\n}\nll cx_2(int w,int l,int r)\n{\n\tif(r<l)return 0;\n\tif(l<=tree[w].l&&tree[w].r<=r)return tree[w].y;\n\tint mid=(tree[w].l+tree[w].r)>>1;ll x=0;\n\tif(l<=mid)x+=cx_2(ls(w),l,r);\n\tif(mid<r)x+=cx_2(rs(w),l,r);\n\treturn x;\n}\nint main()\n{\n\t//freopen(\"bubble.in\",\"r\",stdin);\n\t//freopen(\"bubble.out\",\"w\",stdout);\n\tn=dr(),m=dr();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tp[i]=dr();\n\t\tnxd[p[i]]=cx(n)-cx(p[i]),++t[nxd[p[i]]];\n\t\txg(p[i],1);\n\t}\n\tcsh(1,0,n-1);\n\twhile(m--)\n\t{\n\t\tint opt=dr();\n\t\tif(opt==1)\n\t\t{\n\t\t\tint x=dr();\n\t\t\tif(p[x]>p[x+1])xg_2(1,nxd[p[x+1]],-1),xg_2(1,nxd[p[x+1]]-1,1),--nxd[p[x+1]];\n\t\t\telse xg_2(1,nxd[p[x]],-1),xg_2(1,nxd[p[x]]+1,1),++nxd[p[x]];\n\t\t\tswap(p[x],p[x+1]);\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tint k=dr();\n\t\t\tprintf(\"%lld\\n\",cx_1(1,k,n-1)-k*cx_2(1,k,n-1)); \n\t\t}\n\t}\n}\n```\n",
        "postTime": 1583559373,
        "uid": 104581,
        "name": "kkk\u7684\u5c0f\u8214\u72d7",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u6765\u4e00\u6ce2\u771f\u7231\u5e73\u8861\u6811\n\n\u9996\u5148\u8003\u8651\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u4f1a\u53d1\u751f\u4ec0\u4e48\n\n$1 \\ 1 \\ 4 \\ 5 \\ 1 \\ 4 \\rightarrow 1 \\ 1 \\ 4 \\ 1 \\ 4 \\ 5$\n\n\u5047\u8bbe\u6211\u4eec\u641e\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u6570\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u8bb0\u4f5c$w_i$\n\n$0 \\ 0 \\ 0 \\ 0 \\ 2 \\ 1 \\rightarrow 0 \\ 0 \\ 0 \\ 1 \\ 0 \\ 0$\n\n\u7531\u4e8e\u6570\u5b57\u88ab\u4ea4\u6362\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u65b0\u7684\u6570\u7ec4\u4e0e\u539f\u672c\u4f4d\u7f6e\u5bf9\u5e94\u6765\u770b\n\n$0 \\ 0 \\ 0 \\ 0 \\ 2 \\ 1 \\rightarrow 0 \\ 0 \\ 0 \\ 0 \\ 1 \\ 0$\n\n\u4e5f\u5c31\u662f\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u975e\u96f6\u4f4d\u7f6e\u4e0a-1\n\n\u5148\u9884\u5904\u7406\u51fa\u539f\u6570\u7ec4\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u4e00\u8f6e\u5192\u6ce1\u5bf9\u7b54\u6848\u7684\u51cf\u5c11\u91cf\u5c31\u662f\u6709\u591a\u5c11\u4e2a\u975e\u96f6\u7684$w$\n\n\u8003\u8651k\u8f6e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c$\\leq k$\u7684\u90e8\u5206\u88ab\u51cf\u6389$w_i$\u6b21\u53d8\u4e3a0\uff0c$>k$\u7684\u90e8\u5206\u6700\u591a\u88ab\u51cf\u6389k\u6b21\n\n**\u6240\u4ee5k\u8f6e\u5192\u6ce1\u5bf9\u7b54\u6848\u7684\u51cf\u5c11\u91cf\u662f(<=k\u7684\u548c)+k(>k\u7684\u4e2a\u6570)**\n\n\u8003\u8651\u4ea4\u6362\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a\u662f\u4ea4\u6362\u4efb\u610f\u4e24\u4e2a\uff0c\u8fd8\u5728\u60f3\u6811\u5957\u6811\u5b8c\u600e\u4e48\u67e5\u7b54\u6848\uff0c\u540e\u6765\u53d1\u73b0\u53ea\u4ea4\u6362\u76f8\u90bb\u7684\u3001\u3001\u3001\u3001\n\n\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u6570($a_x,a_{x+1}$)\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\n\n\n$1.a_x>a_{x+1}$\uff0c\u539f\u672c$x$\u5bf9$x+1$\u662f\u6709\u8d21\u732e\u7684\uff0c\u4ea4\u6362\u4e4b\u540e\u4e0d\u5f71\u54cd$x+1$\u4e4b\u540e\u7684\u6570\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u6570\u7684\u524d\u9762\u7684\u6570\u5e76\u6ca1\u6709\u6539\u53d8\uff0c$x$\u524d\u9762\u7684\u6570\u53c8\u4e0d\u4f1a\u5f71\u54cd\u5230\uff0c\u6240\u4ee5\u53ea\u4f1a\u5c11\u4e00\u5bf9\u9006\u5e8f\u5bf9\uff0c\u7b54\u6848$--$\uff0c\u5e76\u4e14$w_{x+1}--$\n\n$2.a_{x+1}>x$\uff0c\u540c\u7406\uff0c\u591a\u4e00\u5bf9\u9006\u5e8f\u5bf9\uff0c\u7b54\u6848$++$\uff0c$w_x++$\n\n\u5982\u4f55\u9884\u5904\u7406$w$\uff1f\u2014\u2014\u5f00\u5c40\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\n\n\u7136\u540e\u540e\u9762\u6570\u636e\u7ed3\u6784\u968f\u4fbf\u7ef4\u62a4\u5c31\u597d\u4e86\uff0c\u652f\u6301\u5355\u70b9\u4fee\u6539\u3001\u67e5$\\leq k$\u7684\u548c\uff0c$>k$\u7684\u4e2a\u6570\uff0c\u6211\u9009\u62e9\u5e73\u8861\u6811~~(\u867d\u7136\u8bf4\u503c\u57df\u90fd\u4e0d\u8d85\u8fc7n\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u5c31\u597d\u4e86)~~\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\ntypedef long long ll;\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch(getchar());\n\twhile (ch<48||ch>57)ch=getchar();\n\twhile (ch>47&&ch<58)in=(in<<1)+(in<<3)+(ch&15),ch=getchar();\n}\ntemplate<class type>inline const void swap(type &a,type &b){const type c(a);a=b;b=c;}\nconst int N(2e5+5);\nnamespace Treap\n{\n\tstruct tree\n\t{\n\t\tll sum;\n\t\tint val,size,pro,cnt;\n\t\ttree *son[2];\n\t\tstatic tree *null;\n\t\tvoid *operator new(size_t size);\n\t\tvoid operator delete(void *ptr);\n\t\tinline tree():val(0),sum(0ll),size(0),pro(0),cnt(0)\n\t\t{\n\t\t\tstatic bool init(0);\n\t\t\tif (!init)\n\t\t\t\tinit=1,\n\t\t\t\tnull=new tree,\n\t\t\t\tnull->son[0]=null->son[1]=null;\n\t\t\tson[0]=son[1]=null;\n\t\t}\n\t\tinline tree(const int &val):val(val),sum(val),size(1),cnt(1),pro(rand())\n\t\t{\n\t\t\tson[0]=son[1]=null;\n\t\t}\n\t\tinline const void pushup()\n\t\t{\n\t\t\tsum=son[0]->sum+1ll*val*cnt+son[1]->sum;\n\t\t\tsize=son[0]->size+cnt+son[1]->size;\n\t\t}\n\t}*root,*tree::null;\n\t#define null tree::null\n\tchar memory_pool[N*sizeof(tree)],*tail(memory_pool+sizeof memory_pool);\n\tvoid *recycle[N],**top(recycle);\n\tinline void *tree::operator new(size_t size){return top!=recycle?*--top:tail-=size;}\n\tinline void tree::operator delete(void *ptr){*top++=ptr;}\n\tinline const void init()\n\t{\n\t\troot=null=new tree;\n\t}\n\tinline const void rotate(tree *&fa,const bool &f)\n\t{\n\t\ttree *p(fa->son[f]);\n\t\tfa->son[f]=p->son[!f];\n\t\tp->son[!f]=fa;\n\t\tfa->pushup();(fa=p)->pushup();\n\t}\n\tinline const void insert(tree *&p,const int &x)\n\t{\n\t\tif (p==null)return p=new tree(x),void();\n\t\tif (p->val==x)return p->cnt++,p->pushup();\n\t\tconst bool f(p->val<x);\n\t\tinsert(p->son[f],x);\n\t\tp->pushup();\n\t\tif (p->son[f]->pro<p->pro)rotate(p,f);\n\t}\n\tinline const void remove(tree *&p,const int &x)\n\t{\n\t\tif (p==null)return;\n\t\tif (p->val^x)return remove(p->son[p->val<x],x),p->pushup();\n\t\tif (p->cnt>1)return p->cnt--,p->pushup();\n\t\tif (p->son[0]==null&&p->son[1]==null)return delete p,p=null,void();\n\t\tif (p->son[0]==null)return p=p->son[1],void();\n\t\tif (p->son[1]==null)return p=p->son[0],void();\n\t\tconst bool f(p->son[0]->pro>p->son[1]->pro);\n\t\trotate(p,f);remove(p,x);\n\t}\n\tinline const ll queryl(tree *p,const int &x)\n\t{\n\t\tif (p==null)return 0ll;\n\t\tif (x<p->val)return queryl(p->son[0],x);\n\t\tif (x==p->val)return p->son[0]->sum+1ll*p->val*p->cnt;\n\t\treturn queryl(p->son[1],x)+p->son[0]->sum+1ll*p->val*p->cnt;\n\t}\n\tinline const int queryr(tree *p,const int &x)\n\t{\n\t\tif (p==null)return 0;\n\t\tif (x>p->val)return queryr(p->son[1],x);\n\t\tif (x==p->val)return p->son[1]->size;\n\t\treturn queryr(p->son[0],x)+p->son[1]->size+p->cnt;\n\t}\n}using namespace Treap;\nll tot;\nint n,m,a[N],w[N];\nclass Binary_Indexed_Tree\n{\n\tprivate:\n\t\tint t[N];\n\t\tinline const int lowbit(const int &x){return x&-x;}\n\tpublic:\n\t\tinline const void insert(int x)\n\t\t{\n\t\t\tfor (;x<=n;x+=lowbit(x))t[x]++;\n\t\t}\n\t\tinline const int query(int x)\n\t\t{\n\t\t\tint sum(0);\n\t\t\tfor (;x;x-=lowbit(x))sum+=t[x];\n\t\t\treturn sum;\n\t\t}\n}bit;\nint main()\n{\n\t//freopen(\"bubble.in\",\"r\",stdin);freopen(\"bubble.out\",\"w\",stdout);\n\tinit();\n\tread(n);read(m);\n\tfor (int i(1);i<=n;i++)read(a[i]);\n\tfor (int i(1);i<=n;i++)\n\t\tw[i]=i-bit.query(a[i])-1,\n\t\tbit.insert(a[i]);\n\tfor (int i(1);i<=n;i++)if (w[i])insert(root,w[i]),tot+=w[i];\n\tfor (int opt,x;m--;)\n\t\tif (read(opt),read(x),opt&1)\n\t\t{\n\t\t\tif (a[x]>a[x+1])\n\t\t\t{\n\t\t\t\ttot--;\n\t\t\t\tremove(root,w[x+1]);\n\t\t\t\tif (--w[x+1])insert(root,w[x+1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttot++;\n\t\t\t\tif (w[x])remove(root,w[x]);\n\t\t\t\tinsert(root,++w[x]);\n\t\t\t}\n\t\t\tswap(a[x],a[x+1]);\n\t\t\tswap(w[x],w[x+1]);\n\t\t}\n\t\telse\n\t\t\tprintf(\"%lld\\n\",tot-queryl(root,x)-1ll*queryr(root,x)*x);\n\treturn 0;\n}\n```\n",
        "postTime": 1583714669,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u9996\u5148\u5192\u6ce1\u6392\u5e8f\u80af\u5b9a\u8ddf\u9006\u5e8f\u5bf9\u6709\u5173\u3002\n\n\u6211\u4eec\u8bb0 $cnt_i$ \u6ee1\u8db3 $a_j>a_i,j<i$ \u7684\u4e2a\u6570\uff0c\u7136\u540e\u89c2\u5bdf\u4e00\u4e0b\u6bcf\u904d\u5192\u6ce1\u6392\u5e8f\u5bf9 $cnt$ \u7684\u5f71\u54cd\uff1a\n\n```\na   3 4 2 1\ncnt 0 0 2 3\n```\n\n\u4e00\u904d\u5192\u6ce1\u6392\u5e8f\u4e4b\u540e\uff1a\n\n```\na   3 2 1 4\ncnt 0 1 2 0\n```\n\n\u4e0d\u96be\u5f97\uff08cai\uff09\u51fa $cnt$ \u7684\u53d8\u5316\u4e3a\u6574\u4f53\u524d\u79fb\u4e00\u4f4d\uff0c\u6240\u6709\u6b63\u503c\u51cf\u4e00\u3002\n\n\u7b80\u8bc1\uff1a\u89c2\u5bdf\u5192\u6ce1\u6392\u5e8f\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53d1\u73b0 $[1,i]$ \u533a\u95f4\u5185\u53ea\u6709\u6700\u5927\u503c\u4f1a\u88ab\u79fb\u5230 $i$ \u540e\u9762\u53bb\uff08\u5982\u679c $i$ \u5c31\u662f\u6700\u5927\u503c\uff0c\u90a3\u4e48 $cnt_i=0$\uff0c\u6ca1\u6709\u8ba8\u8bba\u610f\u4e49\uff09\uff0c\u663e\u7136 $cnt_i$ \u4f1a\u51cf\u5c11\u4e00\uff0c\u540c\u65f6 $i$ \u4f1a\u5411\u524d\u79fb\u52a8\u5230 $i-1$\uff0c\u8bc1\u6bd5\u3002\n\n\u540c\u65f6\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u4f18\u79c0\u6027\u8d28\u662f\uff1a$cnt_1=0$\u3002\u4e5f\u5c31\u662f\u8bf4\u524d\u79fb\u4e0d\u4f1a\u5bfc\u81f4\u9006\u5e8f\u5bf9\u6570\u51cf\u5c11\uff0c\u56e0\u6b64$k$\u6b21\u5192\u6ce1\u6392\u5e8f\u540e\u7684\u9006\u5e8f\u5bf9\u6570\u5c31\u662f $\\sum\\max(cnt_i-k,0)$\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u800c\u4ea4\u6362\u53ea\u4f1a\u5f15\u53d1 $cnt_x$ \u548c $cnt_{x+1}$ \u7684\u53d8\u5316\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6 $O((n+m)logn)$\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define For(i,A,B) for(i=(A);i<=(B);++i)\ntypedef long long ll;\nconst int N=200050;\nconst int BUF=1<<21;\nchar rB[BUF],*rS,*rT,wB[BUF+50];\nint wp=-1;\ninline char gc(){return rS==rT&&(rT=(rS=rB)+fread(rB,1,BUF,stdin),rS==rT)?EOF:*rS++;}\ninline void flush(){fwrite(wB,1,wp+1,stdout);wp=-1;}\ninline int rd(){\n    char c=gc();\n    while(c<48||c>57)c=gc();\n    int x=c&15;\n    for(c=gc();c>=48&&c<=57;c=gc())x=(x<<3)+(x<<1)+(c&15);\n    return x;\n}\nshort buf[25];\ninline void wt(ll x){\n    if(wp>BUF)flush();\n    short l=-1;\n    while(x>9){\n        buf[++l]=x%10;\n        x/=10;\n    }\n    wB[++wp]=x|48;\n    while(l>=0)wB[++wp]=buf[l--]|48;\n    wB[++wp]='\\n';\n}\nint a[N],p[N],c[N],n;\nll C[N],ans[N];\ninline void Swap(int &a,int &b){int t=a;a=b;b=t;}\ninline void add(int x,int ck,int sk){\n    for(;x;x^=x&-x){c[x]+=ck;C[x]+=sk;}\n}\ninline void ask(int x,int &cnt,ll &sum){\n    sum=cnt=0;\n    for(;x<=n;x+=x&-x){cnt+=c[x];sum+=C[x];}\n}\nint main(){\n    int m,i,cnt,opt,x;\n    ll sum;\n    n=rd();m=rd();\n    For(i,1,n)a[i]=rd();\n    For(i,1,n){\n        ask(a[i],p[i],sum);\n        add(a[i],1,0);\n    }\n    memset(c,0,sizeof(c));\n    For(i,1,n)add(p[i],1,p[i]);\n    while(m--){\n        opt=rd();x=rd();\n        if(opt==1){\n            if(a[x]<a[x+1]){\n                add(p[x],-1,-p[x]);\n                ++p[x];\n                add(p[x],1,p[x]);\n            }else{\n                add(p[x+1],-1,-p[x+1]);\n                --p[x+1];\n                add(p[x+1],1,p[x+1]);\n            }\n            Swap(a[x],a[x+1]);\n            Swap(p[x],p[x+1]);\n        }else if(opt==2)if(x>=n)wt(0ll);\n        else{\n            ask(!x?1:x,cnt,sum);\n            wt(sum-(ll)cnt*x);\n        }\n    }\n    flush();\n    return 0;\n}\n```\n",
        "postTime": 1583569956,
        "uid": 57926,
        "name": "Thinking",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "CSP\u7684\u65f6\u5019\u88abunsigned long long\u5751\u7684\u6b7b\u53bb\u6d3b\u6765\u3002\n\n\u8fd9\u6b21\u8003\u8bd5\u53c8\u88abLL\u5751\u5f97\u4e0d\u8981\u4e0d\u8981\u7684(~~\u4e09\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00LL\u89c1\u7956\u5b97~~)\n\n(\u7ec8\u7a76\u8fd8\u662f\u6211\u592a\u849f\u84bb\u4e86|stO AK Orz|)\n\n\u521a\u5f00\u59cb\u8003\u7684\u65f6\u5019\u5c31\u89c9\u5f97\u8fd9\u9053\u9898emm\u3002\u3002\u3002\n\n\n------------\n\n\n\u8003\u573a\u4e0a\u7684**\u601d\u8def**\uff1a\n\n1.\u9996\u5148\u5eb7\u5230\u65f6\u9006\u5e8f\u5bf9\uff0c\u5c31\u80af\u5b9a\u60f3\u5230\u4e86\u6811\u72b6\u6570\u7ec4\u3002\n\n2.\u63a5\u4e0b\u6765\u5c31\u662f\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u5192\u6ce1\u6392\u5e8fk\u8f6e\u4e4b\u540e\u9006\u5e8f\u5bf9\u7684\u5bf9\u6570(~~\u624b\u52a8\u6a21\u62df\u5373\u53ef~~)\uff0c\n\n\u56e0\u4e3a\u6bcf\u6b21\u5192\u6ce1\u6392\u5e8f\u662f\u628aNum[i]>Num[i+1]\u7684\u4ea4\u6362\u4e00\u6b21\uff0c\n\n\u7531\u6811\u72b6\u6570\u7ec4\u7684\u8fc7\u7a0b\u53ef\u77e5\u6bcf\u6b21\u5bf9\u4e8eNum[i],\u627e\u52301~i-1\u4e2d\u6bd4Num[i]\u5927\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u56e0\u4e3aNum[1]~Num[i-1]\u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a\u6700\u5927\u7684(\u8fd9i-1\u4e2a\u6570\u4e2d\u6709\u6bd4\u7b2ci\u4e2a\u6570\u5927\u7684)Num[j]\uff0c\n\n\u800c\u5728\u4e00\u6b21\u5192\u6ce1\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u8fd9\u4e2aNum[j]\u4e00\u5b9a\u4f1a\u548cNum[i]\u4ea4\u6362\u4e00\u6b21\uff0c\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7edf\u8ba1\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\uff0cNum[1]~Num[i-1]\u4e2d\u6bd4Num[i]\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\n\n\u90a3\u4e48\u6bcf\u6b21\u5192\u6ce1\u6392\u5e8f\u5c31\u4f1a\u4f7f\u5f97\u5b83\u51cf1\u3002\n\n3.\u6211\u4eec\u5c31\u53ef\u4ee5\u6a21\u62df\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u770b\u4e0b\u8fd8\u7f3a\u4ec0\u4e48\u3002\n\nTotal=15,Test=10,Num[]={3 5 1 4 10 14 11 12 13 6 8 9 2 15 7}\u3002\n\n\u5148\u662f\u6bcf\u4e2a\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570Inv[]={0 0 2 1 0 0 1 1 1 5 5 5 11 0 8}\u3002\n\n\u5728\u8fdb\u884c\u5b8c\u7b2c\u4e00\u6b21\u5192\u6ce1\u6392\u5e8f\u540e\uff0cInv[]={0 0 1 0 0 0 0 0 0 4 4 4 10 0 7}\u3002\n\n\u53d1\u73b0\u786e\u5b9e\u662f\u6bcf\u4e2aInv[i]>0\u7684\u90fd\u51cf\u5c11\u4e861\u3002\n\n\u90a3\u4e48\u73b0\u5728\u9700\u8981\u7684\u5c31\u662f\u5982\u4f55\u6765\u5feb\u901f\u6c42\u51fa\u8fd9\u4e2aInv\u6570\u7ec4\u53d8\u5316k\u6b21\u4e4b\u540e\u7684\u603b\u548c\u3002\n\n\u56e0\u4e3a\u8fd9\u4e2a\u9898\u662f1~n\u7684\u6392\u5217\uff0c\u4e14n\u6700\u5927\u662f2e5\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u7684\uff0cL=R\u65f6,Tree[X]=Cnt[L],Cnt[i]\u5373\u4e3a\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3ai\u7684\u6570\u6709\u591a\u5c11\u4e2a\u3002\n\n\n------------\n\n\nAll in all\uff0c\u6574\u4e2a\u9898\u5c31\u53d8\u6210\u4e86**\u6811\u72b6\u6570\u7ec4**\u548c**\u7ebf\u6bb5\u6811**\u7684emm\u9898\u4e86\u3002\u3002\u3002\n\n\u90a3\u4e48\u5c31\u76f4\u63a5\u4e0a**\u4ee3\u7801**\u4e86\u3002\u3002\u3002\n\n```cpp\n//bubble\n#include <iostream>\n#include <cstdio>\n// #include <windows.h>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n\n#define LL long long\n#define INF 0x7fffffff\n#define FOR(i,A,B) for(LL i=A;i<=B;i++)\n#define BOR(i,A,B) for(LL i=A;i>=B;i--)\n#define Cl(X,Y) memset((X),(Y),sizeof(X))\n#define Lson (X<<1)\n#define Rson (X<<1|1)\n#define Lowbit(X) (X&(-X))\nusing namespace std;\nconst LL MAXn=2e5+10;\n\nLL Total,Test,Num[MAXn],Cnt[MAXn],Inv[MAXn];\nLL Opt,Fro[MAXn],Loc;\nstruct Node {\n    LL Zero,Tot,Mine;\n}Tree[MAXn<<2];\n\ninline void File() {\n    freopen(\"bubble.in\",\"r\",stdin);\n    freopen(\"bubble.out\",\"w\",stdout);\n}\n\ninline LL Read() {\n    LL Temp=0,Fac=1;\n    char Ch=getchar();\n    while(Ch<'0' || Ch>'9') { if(Ch=='-') Fac=-1; Ch=getchar(); }\n    while(Ch>='0' && Ch<='9') { Temp=(Temp<<1)+(Temp<<3)+Ch-'0'; Ch=getchar(); }\n    return Temp*Fac;\n}\n\ninline void Push_up(LL X) { Tree[X].Zero=Tree[Lson].Zero+Tree[Rson].Zero; Tree[X].Tot=Tree[Lson].Tot+Tree[Rson].Tot; Tree[X].Mine=Tree[Lson].Mine+Tree[Rson].Mine; }\ninline void Renew(LL Temp) { while(Temp<=Total) { Fro[Temp]++; Temp+=Lowbit(Temp); } }\ninline LL Get(LL Temp) { LL Res=0; while(Temp) { Res+=Fro[Temp]; Temp-=Lowbit(Temp); } return Res; }\ninline void Build_Tree(LL L,LL R,LL X) {\n    if(L==R) { Tree[X].Tot+=Cnt[L]; if(!Tree[X].Tot) Tree[X].Zero=1; Tree[X].Mine+=L*Tree[X].Tot; return; }\n    LL Mid=(L+R)>>1;\n    Build_Tree(L,Mid,Lson); Build_Tree(Mid+1,R,Rson);\n    Push_up(X);\n}\n\ninline LL Query(LL L,LL R,LL From,LL To,LL Temp,LL X) {\n    if(L>To || R<From) return 0;\n    if(L>=From && R<=To) return Tree[X].Mine-Tree[X].Tot*Temp;\n    LL Mid=(L+R)>>1,Res=0;\n    if(From<=Mid) Res+=Query(L,Mid,From,To,Temp,Lson);\n    if(To>Mid) Res+=Query(Mid+1,R,From,To,Temp,Rson);\n    return Res;\n}\n\ninline void Update(LL L,LL R,LL Dir,LL Temp,LL X) {\n    if(L==R && L==Dir) { \n\t\tif(Temp==1) if(Tree[X].Tot==0) { Tree[X].Tot++; Tree[X].Zero--; Tree[X].Mine+=L; } else Tree[X].Tot++,Tree[X].Mine+=L;\n\t\tif(Temp==-1) if(Tree[X].Tot==1) { Tree[X].Tot--; Tree[X].Zero++; Tree[X].Mine-=L; } else Tree[X].Tot--,Tree[X].Mine-=L;\n\t\treturn ;\n\t}\n    LL Mid=(L+R)>>1;\n    if(Dir<=Mid) Update(L,Mid,Dir,Temp,Lson);\n    else Update(Mid+1,R,Dir,Temp,Rson);\n    Push_up(X);\n}\n\ninline void Change(LL Temp) {\n    if(Num[Temp]>Num[Temp+1]) {\n        Update(0,Total,Inv[Temp+1],-1,1); \n        Inv[Temp+1]--;\n        Update(0,Total,Inv[Temp+1],1,1);\n    } else {\n        Update(0,Total,Inv[Temp],-1,1); \n        Inv[Temp]++;\n        Update(0,Total,Inv[Temp],1,1);\n    }\n    swap(Inv[Temp],Inv[Temp+1]);\n    swap(Num[Temp],Num[Temp+1]);\n}\n\nint main() {\n    File();\n    Total=Read(); Test=Read();\n    FOR(i,1,Total) {\n        Num[i]=Read();\n        Inv[i]=Get(Total+1-Num[i]); Renew(Total+1-Num[i]);\n        Cnt[Inv[i]]++;\n    }\n    Build_Tree(0,Total,1);\n    while(Test--) {\n        Opt=Read(); Loc=Read();\n        if(Opt==1) Change(Loc);\n        else printf(\"%lld\\n\",Query(0,Total,Loc+1,Total,Loc,1));\n    }\n    fclose(stdin); fclose(stdout);\n    // system(\"pause\");\n    return 0;\n}\n/*\n15 10\n3 5 1 4 10 14 11 12 13 6 8 9 2 15 7 \n*/\n```\n\u5bb3\uff0c\u8fd8\u662f\u8d25\u5728\u4e86LL\u4e0a\u3002\u3002\u3002\u592a\u849f\u84bb\u4e86o(\u2565\ufe4f\u2565)o",
        "postTime": 1583570162,
        "uid": 38171,
        "name": "DeNeRATe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "# \u7b80\u6d01\u63cf\u8ff0\uff1a\n\u5bf9\u4e00\u4e2a\u5e8f\u5217\u7ed9\u5b9a\u4e24\u79cd\u64cd\u4f5c\uff0c\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\uff0c\u6c42\u7ecf\u8fc7$k$\u8f6e\u5192\u6ce1\u6392\u5e8f\u540e\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u6307\u7684\u662f\u5192\u6ce1\u6392\u5e8f\u5185\u5c42\u5faa\u73af\u6267\u884c\u4e00\u904d\u3002\n# \u5206\u6790\uff1a\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u4e2a\u6570\u80fd\u8fdb\u884c\u4ea4\u6362\uff0c\u5f53\u4e14\u4ec5\u5f53\u524d\u9762\u6ca1\u6709\u6bd4\u5b83\u5927\u7684\u6570\u3002\u800c\u4e14\u6bcf\u8f6e\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u90fd\u4f1a\u5c11$1$\uff0c\u56e0\u4e3a\u524d\u9762\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u6700\u5927\u7684\u6570\u5230\u5b83\u7684\u540e\u9762\uff0c\u5176\u4ed6\u8f83\u5927\u4e14\u80fd\u4ea4\u6362\u7684\u6570\u4e00\u5b9a\u9047\u5230\u8fd9\u4e2a\u6700\u5927\u7684\u6570\u505c\u6b62\u4ea4\u6362\u3002\u6240\u4ee5\u4e00\u4e2a\u6570\u5728\u7b2c\u51e0\u8f6e\u88ab\u653e\u5728\u6b63\u786e\u4f4d\u7f6e\u5c31\u770b\u5b83\u524d\u9762\u6570\u7684\u4e2a\u6570\u3002\n\u518d\u6765\u7814\u7a76\u4ea4\u6362\u3002\u6bcf\u6b21\u4ea4\u6362\u5982\u679c$a<b$\uff0c\u5219\u9006\u5e8f\u5bf9\u52a0\u4e00\uff0c\u5de6\u8fb9\u7684\u6570\u6bd4\u5b83\u5927\u7684\u6570\u52a0\u4e00\u3002\u5982\u679c$a>b$\uff0c\u5219\u9006\u5e8f\u5bf9\u51cf\u4e00\uff0c\u53f3\u8fb9\u7684\u6570\u6bd4\u5b83\u5927\u7684\u6570\u51cf\u4e00\u3002\n\u518d\u53d1\u73b0\uff0c\u60f3\u77e5\u9053\u67d0\u4e00\u8f6e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u90a3\u4e48\u5c31\u662f\u603b\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u51cf\u53bb\u5b83\u524d\u9762\u6bcf\u8f6e\u4ea4\u6362\u4e2a\u6570\u5373\u53ef\u3002\u6bcf\u8f6e\u4ea4\u6362\u7684\u4e2a\u6570\u5c31\u662f$n-$\u653e\u6b63\u786e\u7684\u4e2a\u6570\u3002\u56e0\u4e3a\u6ca1\u653e\u6b63\u786e\u7684\u90fd\u4f1a\u548c\u4e00\u4e2a\u653e\u6b63\u786e\u5927\u7684\u505a\u4ea4\u6362\uff0c\u6240\u4ee5\u5c31\u662f\u6c42\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8981\u6c42\u524d\u7f00\u548c\u7528\u6811\u72b6\u6570\u7ec4\u554a\uff01\u628a\u7b2c\u4e00\u4e2a\u8bbe\u4e3a\u603b\u7684\u9006\u5e8f\u5bf9\uff0c\u540e\u9762\u7684\u90fd\u662f\u8fd9\u4e00\u8f6e\u5c11\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\u4ea4\u6362\u4e00\u6b21\u5c31\u66f4\u65b0\u4e00\u4e0b\u53d8\u5316\u7684\u6570\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u5728\u6c42\u9006\u5e8f\u5bf9\u7684\u540c\u65f6\u6c42\u51fa\u524d\u9762\u6bd4\u5b83\u5927\u7684\u4e2a\u6570\uff0c\u5c31\u521a\u597d\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u5f88\u597d\u3002\u4e0d\u77e5\u9053\u600e\u4e48\u6c42\u7684\uff0c\u53c2\u8003\u6211\u5199\u7684[\u4e13\u8f91\uff1a\u6811\u72b6\u6570\u7ec4](https://blog.csdn.net/weixin_44043668/article/details/106591704)\u3002\n\u7ec6\u8282\u95ee\u9898\uff1a\u56e0\u4e3a\u6700\u5f00\u59cb\u6211\u4eec\u5728\u5168\u90e8\u7684\u9006\u5e8f\u5bf9\u8fdb\u884c\u4fee\u6539\uff0c\u8fd9\u6837\u540e\u9762\u7684\u6240\u6709\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u90fd\u6709\u4e86\u53d8\u5316\u3002\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u53d8\u5316\u8981\u8fd8\u539f\u5462\uff1f\u8fc7\u4e86\u4ea4\u6362\u4e4b\u540e\u7684\u8f6e\u6570\u5c31\u548c\u539f\u6765\u662f\u4e00\u6837\u7684\u4e86\u3002\u56e0\u4e3a\u5230\u4e86\u90a3\u4e2a\u8f6e\u6570\u628a\u5b83\u4eec\u539f\u6765\u8be5\u4ea4\u6362\u7684\u5730\u65b9\u4ea4\u6362\u4e86\u8981\u4e48\u5c31\u6362\u56de\u53bb\uff0c\u8981\u4e48\u5c31\u539f\u5e8f\u5217\u6362\u6210\u65b0\u5e8f\u5217\uff0c\u6240\u4ee5\u5728\u8be5\u8f6e\u7ed3\u675f\u540e\u8981\u8fd8\u539f\u9006\u5e8f\u5bf9\u3002\n\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(m\\log n)$\u3002\n# \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NN=2e5+5;\nint n,m,a[NN],b[NN],num[NN];\nlong long c[NN];\nint lowbit(int x)\n{\n    return x&-x;\n}\nvoid add(int x,long long sum)\n{\n    while(x<=n)\n\t{\n        c[x]+=sum;\n        x+=lowbit(x);\n    }\n}\nlong long find(int x)\n{\n    long long res=0;\n    while(x>0)\n\t{\n        res+=c[x];\n        x-=lowbit(x);\n    }\n    return res;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    long long res=0;\n    for(int i=1;i<=n;i++)\n\t{\n        scanf(\"%d\",&a[i]);\n        b[i]=i-1-find(a[i]);\n\t\t++num[b[i]];\n        res+=b[i];\n        add(a[i],1);\n    }\n    memset(c,0,sizeof(c));\n    add(1,res);\n    int t=0;\n    for(int i=1;i<=n;i++)\n\t{\n        t+=num[i-1];\n        add(i+1,-(n-t));\n    }\n    for(int i=1;i<=m;i++)\n\t{\n\t\tint opt,x;\n        scanf(\"%d%d\",&opt,&x);\n        x=min(x,n-1);\n        if(opt==1)\n\t\t{\n            if(a[x]<a[x+1])\n\t\t\t{\n                swap(a[x],a[x+1]);\n                swap(b[x],b[x+1]);\n                add(1,1);\n                b[x+1]++;\n                add(b[x+1]+1,-1);\n            }\n            else\n\t\t\t{\n                swap(a[x],a[x+1]);\n                swap(b[x],b[x+1]);\n                add(1,-1);\n                add(b[x]+1,1);\n                b[x]--;\n            }\n        }\n        else\n\t\t\tprintf(\"%lld\\n\",find(x+1));\n    }\n    return 0;\n}\n```",
        "postTime": 1616068303,
        "uid": 132424,
        "name": "\u826f\u5fc3WA\u9898\u4eba",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online #1 \u63d0\u9ad8\u7ec4] \u5192\u6ce1\u6392\u5e8f\u3011"
    },
    {
        "content": "## P6186 \u5192\u6ce1\u6392\u5e8f\n\n\u4e00\u9053\u6bd4\u8f83\u65e0\u804a\u7684\u9898\u76ee\uff0c\u6bd4\u8f83\u5e38\u89c4\uff0c\u8003\u5230\u4e00\u4e2a\u534a\u5c0f\u65f6\u5de6\u53f3\u7684\u65f6\u5019\u4f1a\u7684\u3002\n\n\u8003\u8651\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u5bf9\u9006\u5e8f\u5bf9\u6570\u7684\u5f71\u54cd\uff0c\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n$$4\\ \\ 3\\ \\ 2\\ \\ 5\\ \\ 1$$\n\n\u7ecf\u8fc7\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u53d8\u6210\u4e86\uff1a\n\n$$3\\ \\ 2\\ \\ 4\\ \\ 1\\ \\ 5$$\n\n\u8bbe\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u524d\u7684\u5e8f\u5217\u4e3a $A$\uff0c\u5192\u6ce1\u6392\u5e8f\u540e\u7684\u5e8f\u5217\u4e3a $B$\u3002\n\n**\u89c2\u5bdf $1$\uff1a$B$ \u4e2d\u6240\u6709\u9006\u5e8f\u5bf9\u90fd\u5728 $A$ \u4e2d\u51fa\u73b0\u3002**\n\n\u8bc1\u660e\u7565\u3002\n\n\u7ee7\u7eed\u89c2\u5bdf\uff0c$A$ \u4e2d\u6709\u54ea\u4e9b\u9006\u5e8f\u5bf9\u5230 $B$ \u4e2d\u6d88\u5931\u4e86\u5462\uff1f\u53ef\u4ee5\u53d1\u73b0\u662f $(4,3),(4,2),(5,1)$ \u8fd9\u4e09\u5bf9\u3002\n\n**\u89c2\u5bdf $2$\uff1a\u5bf9\u4e8e $A$ \u4e2d\u6bcf\u4e00\u4e2a\u4e0d\u662f\u524d\u7f00\u6700\u5927\u503c\u7684 $a_i$\uff0c$B$ \u4e2d\u4ee5 $a_i$ \u4f5c\u4e3a\u540e\u9879\u7684\u9006\u5e8f\u5bf9\u6bd4 $A$ \u4e2d\u5c11\u4e00\u7ec4\u3002**\n\n\u8bc1\u660e\uff1a\u7531\u4e8e $a_i$ \u4e0d\u662f\u524d\u7f00\u6700\u5927\u503c\uff0c\u8bbe $a_j$ \u662f $a_1$ \u5230 $a_{i-1}$ \u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6709 $a_j>a_i$\uff0c\u4e14\u5728\u5192\u6ce1\u6392\u5e8f\u8fc7\u7a0b\u4e2d\uff0c$a_j$ \u4f1a\u6d6e\u5230 $a_i$ \u540e\u9762\uff0c\u6240\u4ee5 $(a_j,a_i)$ \u8fd9\u5bf9\u9006\u5e8f\u5bf9\u6d88\u5931\uff0c\u540c\u65f6\uff0c\u5176\u4ed6\u7684\u4ee5 $a_i$ \u4e3a\u540e\u9879\u7684\u9006\u5e8f\u5bf9 $(a_k,a_i)$ \u7531\u4e8e $a_j$ \u5c06\u4f1a\u548c $a_i$ \u5728 $i$ \u4f4d\u7f6e\u4ea4\u6362\u4e00\u6b21\uff0c\u6240\u4ee5\u4e0d\u4f1a\u9020\u6210 $a_k$ \u8dd1\u5230 $a_i$ \u4e4b\u540e\u7684\u60c5\u51b5\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u63a8\u8bba\uff1a\n\n**\u63a8\u8bba $1$\uff1a\u5bf9 $A$ \u8fdb\u884c\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\uff0c\u9006\u5e8f\u5bf9\u6570\u7684\u51cf\u5c0f\u91cf\u662f $n-C$\uff0c\u5176\u4e2d $C$ \u4e3a $A$ \u4e2d\u524d\u7f00\u6700\u5927\u503c\u7684\u4e2a\u6570\u3002**\n\n\u7136\u800c\u8fd9\u6837\u6211\u4eec\u53ea\u80fd\u5904\u7406\u5192\u6ce1\u4e00\u8f6e\u7684\u60c5\u51b5\uff0c\u591a\u8f6e\u5192\u6ce1\u6392\u5e8f\u66f4\u52a0\u590d\u6742\u4e00\u4e9b\uff0c\u4f46\u662f\u6839\u636e\u89c2\u5bdf $2$ \u7684\u8bc1\u660e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u5f3a\u7684\u7ed3\u8bba\uff1a\n\n**\u63a8\u8bba $2$\uff1a\u5982\u679c\u5728\u539f\u5e8f\u5217\u4e2d\uff0c\u5728 $a_i$ \u4e4b\u524d\u6709 $p_i$ \u4e2a\u6570\u6bd4 $a_i$ \u5927\uff0c\u5219 $a_i$ \u5c06\u5728 $p_i$ \u8f6e\u5192\u6ce1\u6392\u5e8f\u540e\u6210\u4e3a\u524d\u7f00\u6700\u5927\u503c\u3002**\n\n\u8bc1\u660e\uff1a\u6bcf\u4e00\u8f6e\u6709\u4e00\u4e2a $a_i$ \u4e4b\u524d\u6bd4 $a_i$ \u5927\u7684\u6570\u6d6e\u5230 $a_i$ \u4e4b\u540e\uff0c\u8fd9\u6837 $p_i$ \u8f6e\u4e4b\u540e $a_i$ \u4e4b\u524d\u6bd4 $a_i$ \u5927\u7684\u6570\u5168\u90fd\u5230 $a_i$ \u540e\u9762\u4e86\uff0c\u5728\u524d\u7f00 $i$ \u4e2d $a_i$ \u5c31\u662f\u6700\u5927\u503c\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u9700\u8981\u7684\u7ed3\u8bba\u5c31\u5168\u90e8\u6709\u4e86\uff0c\u4e0b\u9762\u5f00\u59cb\u63a8\u5f0f\u5b50\u3002\n\n$$Ans=\\sum\\limits_{i=1}^n p_i-\\sum\\limits_{i=1}^k (n-C_i)$$\n\n\u5176\u4e2d $C_i$ \u8868\u793a\u7b2c $i$ \u8f6e\u5192\u6ce1\u6392\u5e8f\u4e4b\u524d $A$ \u4e2d\u524d\u7f00\u6700\u5927\u503c\u7684\u4e2a\u6570\uff0c$k$ \u8868\u793a\u5192\u6ce1\u6392\u5e8f\u7684\u8f6e\u6570\u3002\n\n\u8003\u8651\u6bcf\u4e00\u4e2a $a_i$ \u5bf9\u4e8e $\\sum\\limits_{i=1}^k C_i$ \u7684\u8d21\u732e\uff0c\u7531\u4e8e $a_i$ \u5728 $p_i$ \u8f6e\u540e\u6210\u4e3a\u524d\u7f00\u6700\u5927\u503c\uff0c\u6240\u4ee5\u5bf9\u4e8e $p_i$ \u5230 $k$ \u4e2d\u95f4\u7684\u6bcf\u4e00\u8f6e\u90fd\u4f1a\u6709 $1$ \u7684\u8d21\u732e\uff0c\u5373\uff1a\n\n$$Ans=\\sum\\limits_{i=1}^np_i-nk+\\sum\\limits_{i=1}^n \\max(0,k-p_i)$$\n\n\u8981\u548c $0$ \u53d6 $\\max$ \u662f\u56e0\u4e3a\uff0c\u5982\u679c $k<p_i$\uff0c\u5219 $a_i$ \u5bf9\u7b54\u6848\u7684\u51cf\u91cf\u6ca1\u6709\u8d21\u732e\u3002\n\n\u8fdb\u4e00\u6b65\u5316\u7b80\u4e00\u4e0b\uff1a\n\n$$Ans=\\sum\\limits_{i=1}^n p_i-nk+kX-Y$$\n\n\u5176\u4e2d $X$ \u662f $p_i\\leq k$ \u7684 $p_i$ \u7684\u6570\u91cf\uff0c$Y$ \u662f $p_i\\leq k$ \u7684 $p_i$ \u7684\u548c\u3002\n\n\u7531\u4e8e\u90fd\u662f\u5168\u5c40\u7684\u4fe1\u606f\uff0c\u76f4\u63a5\u5f00\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\u6216\u6743\u503c\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u7ef4\u62a4 $X$ \u548c $Y$\u3002\n\n\u76f8\u90bb\u9879\u7684\u4ea4\u6362\u975e\u5e38\u5bb9\u6613\u5b9e\u73b0\uff0c\u90fd\u662f $p_i$ \u7684\u5355\u70b9\u4fee\u6539\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int MAXN=200010;\nint n,m,x,y,a[MAXN],p[MAXN],c[MAXN];\nll val[MAXN*4],siz[MAXN*4];\nint query (int x) {\n\tint res=0;\n\tfor (int i=x;i;i-=(i&(-i))) {res+=c[i];}\n\treturn res;\n}\nvoid modify (int x,int v) {\n\tfor (int i=x;i<=n;i+=(i&(-i))) {c[i]+=v;}\n\treturn;\n}\nvoid modify_t (int p,int l,int r,int pos,int v,int w) {\n\tval[p]+=w,siz[p]+=v;\n\tif (l==r) {return;}\n\tint mid=(l+r)>>1;\n\tif (pos<=mid) {modify_t(p<<1,l,mid,pos,v,w);}\n\telse {modify_t((p<<1)|1,mid+1,r,pos,v,w);}\n\treturn;\n}\nll query_t (int p,int l,int r,int xl,int xr,int typ) {\n\tif (xr<l||r<xl) {return 0;}\n\tif (xl<=l&&r<=xr) {return (typ?val[p]:siz[p]);}\n\tint mid=(l+r)>>1;\n\treturn query_t(p<<1,l,mid,xl,xr,typ)+query_t((p<<1)|1,mid+1,r,xl,xr,typ);\n}\nint main () {\n\tfreopen(\"bubble.in\",\"r\",stdin);\n\tfreopen(\"bubble.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t\tp[i]=query(n)-query(a[i]);\n\t\tmodify_t(1,0,n,p[i],1,p[i]);\n\t\tmodify(a[i],1);\n\t}\n\tfor (int i=1;i<=m;i++) {\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif (x==1) {\n\t\t\tif (a[y]<a[y+1]) {\n\t\t\t\tmodify_t(1,0,n,p[y],-1,-p[y]);\n\t\t\t\tp[y]++;\n\t\t\t\tmodify_t(1,0,n,p[y],1,p[y]);\n\t\t\t} else {\n\t\t\t\tmodify_t(1,0,n,p[y+1],-1,-p[y+1]);\n\t\t\t\tp[y+1]--;\n\t\t\t\tmodify_t(1,0,n,p[y+1],1,p[y+1]);\n\t\t\t}\n\t\t\tswap(a[y],a[y+1]);\n\t\t\tswap(p[y],p[y+1]);\n\t\t} else {\n\t\t\tll ans1=val[1],ans2=query_t(1,0,n,0,y,1);\n\t\t\tll ans3=(1ll*n*y),ans4=(1ll*y*query_t(1,0,n,0,y,0));\n\t\t\tprintf(\"%lld\\n\",ans1+ans4-ans2-ans3);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1583560782,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\n\n\n### \u6807\u7b7e\uff1a \u6811\u72b6\u6570\u7ec4 \u7ed3\u8bba\n---\n\n#### \u524d\u8a00\n\n\u4e00\u4e2a\u6781\u5177\u601d\u7ef4\u96be\u5ea6\u7684\u9898\u76ee\uff0c\u505a\u7ebf\u6bb5\u6811\u6b63\u597d\u78b0\u89c1\u4e86\uff0c\u5c31\u7528\u6811\u72b6\u6570\u7ec4\u628a\u4ed6\u8270\u96be\u5730A\u6389\u4e86\uff08\u96fe\n\n#### \u601d\u8def\n\n**\u7ed3\u8bba\u4e00**\uff1a\u5bf9\u4e8e\u5192\u6ce1\u6392\u5e8f\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u6709\u5b9e\u9645\u610f\u4e49\u7684\u6700\u591a\u662f\u5faa\u73af $n-1$ \u6b21 \u3002\n\n**\u7ed3\u8bba\u4e8c**\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u904d\u5192\u6ce1\u6392\u5e8f\uff0c\u624b\u6a21\u51e0\u7ec4\u6837\u4f8b\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684**\u67d0\u4e00\u4e2a\u6570\u7684\u9006\u5e8f\u5bf9**\uff0c\u53ea\u8981\u5b83\u5f53\u524d\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e0d\u4e3a $0$\uff0c\u90a3\u4e48\u4e00\u904d\u5192\u6ce1\u6392\u5e8f\u4ee5\u540e\uff0c\u5b83\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u5fc5\u5b9a\u51cf\u4e00\u3002\n\n\u51e0\u4e2a\u4f8b\u5b50\uff1a $4 \\ 3 \\ 1 \\ 2 $\uff0c$1$ \u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u4e3a $2$ ,\u7ecf\u8fc7\u4e00\u904d\u5192\u6ce1\u6392\u5e8f\u6210\u4e3a $3\\ 1\\ 2\\ 4$, $1$ \u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u4e3a $1$\u3002\n\n**\u7ed3\u8bba\u4e09**\uff1a\u5bf9\u4e8e\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\u7684\u6570,\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n$$a[x]>a[x+1]$$\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4ea4\u6362\u4ee5\u540e\uff0c\u539f\u5148 $a[x]$ \u4ee3\u8868\u7684\u6570\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u4e0d\u53d8\uff0c\u539f\u5148 $a[x+1]$ \u4ee3\u8868\u7684\u6570\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf $-1$\u3002\n\n$$a[x]<a[x+1]$$\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4ea4\u6362\u4ee5\u540e\uff0c\u539f\u5148 $a[x]$ \u7684\u6570\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf $+1$\uff0c\u539f\u5148 $a[x+1]$ \u4ee3\u8868\u7684\u6570\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u4e0d\u53d8\u3002\n\n**\u7ed3\u8bba\u56db**\uff1a\u5982\u679c\u4e00\u4e2a\u6570\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u4e3a $k$ \u7684\u8bdd\uff0c\u90a3\u4e48\u4ed6\u53ea\u4f1a\u5bf9\u524d $i$ \u6b21\u5192\u6ce1\u6392\u5e8f\u6709\u8d21\u732e\u3002\n\n#### \u505a\u6cd5\n\n**\u7b2c\u4e00\u9636\u6bb5**\u4e3a\u9884\u5904\u7406\u521d\u59cb\u5e8f\u5217\u7684\u503c\uff0c\u7528\u6743\u503c\u6811\u72b6\u6570\u7ec4\u6c42\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6570\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u3002\u5e76\u4e14\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u8d21\u732e\u7684\u4e2a\u6570\uff0c\uff08\u6bd4\u5982\u8d21\u732e\u4e3a $3$ \u7684\u6709 $2$ \u4e2a\uff0c\u5c31\u628a\u4ed6\u4eec\u5b58\u6876\u91cc\uff09\u3002\n\n**\u7b2c\u4e8c\u9636\u6bb5**\u4e3a\u521d\u59cb\u5316\u6811\u72b6\u6570\u7ec4\uff1a\u53ef\u4ee5\u628a\u6811\u72b6\u6570\u7ec4\u7684\u6bcf\u4e2a\u4f4d\u7f6e $i$ \u5b9a\u4e49\u4e3a\u7b2c$i-1$ \u6b21\u64cd\u4f5c\u7684\u4fee\u6539\u503c\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c$1$ \u4f4d\u7f6e\u6682\u4e14\u653e\u4e0a\u521d\u59cb\u7684\u9006\u5e8f\u5bf9\u503c\u3002\n\n**\u7b2c\u4e09\u9636\u6bb5**\u6765\u4e0a\u4f20\u6bcf\u6b21\u5192\u6ce1\u6392\u5e8f\u7684\u4fee\u6539\u503c\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e48\u4e00\u4e2a\u601d\u7ef4\u6765\u5904\u7406\u4ed6:\u628a\u6211\u4eec\u521a\u624d\u5b58\u7684\u6876\u62ff\u8fc7\u6765\u7528\u4e00\u4e0b\uff0c\u5faa\u73af\u679a\u4e3e $0\u2026n-1$ \u7684\u503c\uff0c\u5e76\u7528\u4e00\u4e2a\u53d8\u91cf $cnt$ \u8bb0\u5f55\u524d $i$ \u4e2a\u7684\u603b\u548c\uff0c\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u6a21\u62df\u4e00\u4e0b\u5c31\u77e5\u9053\u4e86\u3002\n\n\u5047\u8bbe\u679a\u4e3e\u5230\u4e86 $i=0$ \u6b64\u65f6 \u52a0\u4e0a\u8fd9\u4e2a\u503c\u4e4b\u540e\uff0c$cnt=3$\uff0c\u5047\u8bbe $n=5$,\u90a3\u4e48\u53ef\u63a8\u51fa\u7b2c\u4e00\u8f6e\u7684\u9700\u8981\u4fee\u6539\u7684\u503c\u4e3a $-(n-cnt)$\uff0c\u56e0\u4e3a $0$ \u7684\u4e00\u5b9a\u4e0d\u4f1a\u6709\u8d21\u732e\u4e86\uff0c\u4e00\u6b21\u7c7b\u63a8\u5373\u53ef\u3002\n\n**\u7b2c\u56db\u9636\u6bb5**\u662f\u6700\u91cd\u8981\u7684\u4fee\u6539\u64cd\u4f5c\u4e86\uff0c\u6839\u636e\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u53ef\u4ee5\u4e0d\u8003\u8651\u4f4d\u7f6e\u4e86\uff0c\u53ea\u7528\u8003\u8651\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u6765\u4fee\u6539\u3002\n\n\u5f53\u4e00\u4e2a\u6570\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570 $+1$ \u4e4b\u540e\uff0c\u5982\u679c\u672c\u6765\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3a $0$ ,\u90a3\u4e48\u73b0\u5728\u53ef\u4ee5\u7ed9 $i=2$ \u4e5f\u5c31\u662f\u7b2c\u4e00\u8f6e\u8d21\u732e\u4e00\u4e2a $-1$ \u4fee\u6539\u503c\u4e86\u3002\n\n\u5f53\u4e00\u4e2a\u6570\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570 $-1$ \u4e4b\u540e\uff0c\u5982\u679c\u672c\u6765\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3a $3$ \u90a3\u4e48\u5c31\u8981\u5bf9 $i=4$ \u7684\u8d21\u732e\u5c31\u6ca1\u6709\u4e86\uff0c\u5c31 $+1$ \u3002\n\n**\u7b2c\u4e94\u9636\u6bb5**\u67e5\u8be2\uff0c\u8f93\u51fa $sum(x+1)$\n\n#### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n/*\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<map>\n#define int long long \nusing namespace std;\nconst int N=2e5+9;\nint t[N];\nint a[N];\nint n,m; \nint biger[N];//\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u4f4d\u7f6e\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u7684\u4e2a\u6570\uff0c\u6876\u5b58\u6bcf\u4e2a\u4e2a\u6570\u7684\u6570\u91cf\n//K\u4e2a\u4e00\u5b9a\u4f1a\u5728\u7b2ck\u6b21\u5192\u6ce1\u4e2d\u5168\u90e8\u6d88\u53bb \nint ans;//\u521d\u59cb\u5e8f\u5217\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570 \nint imp[N];//\u6bcf\u4e2a\u4f4d\u7f6e\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570 \nint read()\n{\n\tint f=1,x=0;\n\tchar s=getchar();\n\twhile(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();} \n\twhile(s>='0'&&s<='9'){x=(x<<1)+(x<<3)+(s^'0');s=getchar();}\n\treturn f*x;\n} \nint lowbit(int x)\n{\n\treturn x&(-x);\n}\nvoid add(int x,int val)\n{\n\twhile(x<=n)\n\t{\n\t\tt[x]+=val;\n\t\tx+=lowbit(x);\n\t}\n}\nint query(int x)\n{\n\tint ret=0;\n\twhile(x)\n\t{\n\t\tret+=t[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ret;\n}\nsigned main()\n{\n\tn=read();\n\tm=read();\n\t//\u8003\u8651\u5230\u8bb0\u5f55\u9006\u5e8f\u5bf9\u7684\u95ee\u9898\uff0c\u5e8f\u53f7\u4ece0\u5f00\u59cb \n\tfor(int i=0;i<n;i++)\n\t{\n\t\ta[i]=read();\n\t\timp[i]=i-query(a[i]);//\u67e5\u627e\u9006\u5e8f\u5bf9\u4e2a\u6570\n\t\tans+=imp[i];//\u8bb0\u5f55\u9006\u5e8f\u5bf9\u603b\u4e2a\u6570 \n\t\tbiger[imp[i]]++;//\u6876\u5b58\u8fd9\u4e2a\u6570\u91cf\n\t\tadd(a[i],1);//\u4e0a\u4f20\t \n\t} \n\tmemset(t,0,sizeof(t));//\u4e00\u6b21\u4e0d\u6e05\u7a7a\uff0cOI\u4e00\u573a\u7a7a\n\t//\u4ece\u73b0\u5728\u5f00\u59cbt\u6570\u7ec4\uff0c\u5b9a\u4e49\u6539\u53d8\uff0c\u4e3a query(x) \u4e3ax\u6b21\u5192\u6ce1\u6392\u5e8f\u540e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\n\tadd(1,ans);//1 \u4e3a \u6ca1\u6709\u64cd\u4f5c\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u7528 0 \u4e0d\u884c\uff0c\u6240\u4ee5\u90fd\u628a\u64cd\u4f5c\u6570+1\n\tint cnt=0;\n\tfor(int i=0;i<n;i++)//\u9884\u5904\u7406\u5b9e\u73b0\u5dee\u5206\n\t{\n\t\tcnt+=biger[i];\n\t\tadd(i+2,-(n-cnt));//\u7528\u4e8e\u8ba1\u7b97\u7b2ck\u8f6e\u4f1a\u6709\u591a\u5c11\u4e2a\u51cf\u5c11\n\t\t/*\n\t\t\n\t\tcnt \u6240\u8bb0\u5f55\u7684\u662f\u9006\u5e8f\u5bf9\u6570<=i\u7684\uff0c\u5219\u5927\u4e8ei\u7684\u5c31\u662f\u5728\u7b2ci\u8f6e\u4e2d\u51cf\u53bb\u7684\u6570\u91cf\n\t\t\u5c31\u6bd4\u5982\uff0c\u77e5\u9053\u4e86\u9006\u5e8f\u5bf9\u4e3a0\u7684\u6570\u91cfnum\uff0c\u5219\u5728\u7b2c\u4e00\u8f6e\u4e2d\u51cf\u53bb\u7684\u4e2a\u6570\u4e00\u5b9a\u662f \uff08n-num\uff09;\n\t\t\u5176\u4ed6\u7684\u540c\u7406\u53ef\u5f97 \n\t\t\n\t\t*/\t\n\t}  \n\twhile(m--)\n\t{\n\t\tint opt=read();\n\t\tint x=min(read(),n-1);//\u6700\u591a\u4f1a\u6709n-1\u8f6e\u6392\u5e8f\n\t\tif(opt==1)\n\t\t{\n\t\t\tx--;\n\t\t\tif(a[x]<a[x+1])//\u89e3\u6790\u770b\u4e0a\u9762\n\t\t\t{\n\t\t\t\tswap(a[x],a[x+1]);\n\t\t\t\tswap(imp[x],imp[x+1]);\n\t\t\t\tadd(1,1);//\u8fd9\u79cd\u60c5\u51b5\u4f1a\u591a\u4e00\u4e2a\u9006\u5e8f\u5bf9\n\t\t\t\tadd(imp[x+1]+2,-1);\n\t\t\t\t/*\n\t\t\t\t\n\t\t\t\t\u5047\u8bbeimp[x+1]=0\uff0c\u901a\u8fc7\u8f6c\u6362\uff0c\u591a\u4e86\u4e2a1\u3002\n\t\t\t\t\u90a3\u4e48\u5c31\u4f1a\u5728\u7b2c\u4e00\u8f6e\u53d1\u6325\u4f5c\u7528\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb\u7684\uff0c\u6240\u4ee5 \n\t\t\t\t\u4f1a\u5728+2\u8f6e\u53d1\u6325\u4f5c\u7528\uff0c\u591a\u51cf\u53bb\u4e2a1 \n\t\t\t\t\n\t\t\t\t*/\t\n\t\t\t\timp[x+1]++;\n\t\t\t}\t\n\t\t\telse \n\t\t\t{\n\t\t\t\tswap(a[x],a[x+1]);\n\t\t\t\tswap(imp[x],imp[x+1]);\n\t\t\t\tadd(1,-1);\n\t\t\t\timp[x]--;\n\t\t\t\tadd(imp[x]+2,1);\n\t\t\t\t/*\n\t\t\t\t\n\t\t\t\t\u5047\u8bbe\u672c\u6765imp[x]=1\uff0c\u90a3\u4e48 \u4f1a\u5728\u7b2c\u4e00\u8f6e\uff08i=2\uff09\u7684\u65f6\u5019\u4f1a\u88ab-1\n\t\t\t\t\u800c\u73b0\u5728 imp[x]=0,\u4e86\uff0c\u90a3\u4e48 \u5c31\u8981\u5728 (i=0+2) \u8f6e\u7684\u65f6\u5019+1 \u51cf\u53bb\u8fd9\u4e2a\u6548\u5e94 \n\t\t\t\t\n\t\t\t\t*/\n\t\t\t}\n\t\t} \n\t\telse printf(\"%lld\\n\",query(x+1)); \n\t} \n\treturn 0;\n}\n```",
        "postTime": 1616292965,
        "uid": 230804,
        "name": "Durancer",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P6186 [NOI Online #1 \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f"
    },
    {
        "content": "# **\u4e09\u68f5\u6811\u6cb9\u6f06**\n\u63d0\u4f9b\u4e00\u4e2a\u5e38\u89c4\u7684\u505a\u6cd5\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\n\n\u7531\u4e8e\u6811\u72b6\u6570\u7ec4\u8fd8\u8981\u5dee\u5206(\u81f3\u5c11\u6211\u770b\u5230\u7684\u9898\u89e3\u662f\u8fd9\u6837)\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\n\n\u505a\u6cd5\u5927\u5bb6\u80af\u5b9a\u4e5f\u90fd\u6e05\u695a,\u6bcf\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u90fd\u4f1a\u4f7f\u5176\u9006\u5e8f\u5bf9\u51cf\u5c11\u4e00\u4e2a(\u5982\u679c\u5b83\u8fd8\u6709\u9006\u5e8f\u5bf9\u7684\u8bdd)\u3002\u56e0\u4e3a\u6bcf\u6b21\u90fd\u5c06\u8fd9\u4e2a\u5143\u7d20\u524d\u9762\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u79fb\u5230\u4e86\u5b83\u540e\u9762(\u5982\u679c\u6709\u7684\u8bdd)\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5982\u679c\u628a\u9006\u5e8f\u5bf9\u4e2a\u6570\u63d0\u51fa\u6765\uff0c\u89c6\u4e3a\u4e00\u4e2a\u6570\u5217\uff0c\u90a3\u4e48K\u8f6e\u64cd\u4f5c\u5c31\u76f8\u5f53\u4e8e\u628a\u6bcf\u4e2a\u5143\u7d20\u540e\u79fbK\u4f4d\uff0c\u5e76\u4e14\u5143\u7d20\u7684\u503cb=max(0,b-k)\n\n\u90a3\u4e48\u6211\u4eec\u6784\u9020\u51fab\u6570\u5217\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7ebf\u6bb5\u6811\u627e\u6570\u5217\u4e0a\u5927\u4e8eK\u7684\u503c\u7684\u4e2a\u6570\u4ee5\u53ca\u5b83\u4eec\u7684\u548c\u5c31\u597d\n\n\u6784\u9020b\u6570\u5217\u76f8\u5f53\u4e8e\u6c42\u6bcf\u4e2a\u6570\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\u2014\u2014\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u8bb0\u5f55b\u6570\u5217\u5143\u7d20\u4e2a\u6570\uff1a\u56e0\u4e3a\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c0f\u4e8en,\u5bf9\u4e8e\u6bcf\u4e2ab\u6570\u5217\u5143\u7d20b[i]\uff0c\u5c06b[i]+1\u7684\u4f4d\u7f6e+1(b[i]\u6709\u53ef\u80fd\u4e3a0\uff0c\u56e0\u6b64+1)\u2014\u2014\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u8bb0\u5f55b\u6570\u5217\u5143\u7d20\u548c:\u540c\u4e0a\uff0c+1\u53d8\u6210+b[i]\u2014\u2014\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u4e09\u68f5\u6811\u5efa\u7acb\u5b8c\u6210\uff01\uff01\uff01\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u91cc\uff0ct1\u662f\u6784\u9020b\u6570\u5217\u7684\u7ebf\u6bb5\u6811\uff0ct2\u662f\u8bb0\u5f55b[i]\u4e4b\u548c\u7684\u7ebf\u6bb5\u6811\uff0ct3\u662f\u8bb0\u5f55b[i]\u4e2a\u6570\u7684\u7ebf\u6bb5\u6811\n\n\u5173\u4e8e\u4ea4\u6362\u64cd\u4f5c\uff0c\u5c31\u4e24\u79cd\u60c5\u51b5\n\n1.V[a]<V[a+1]\n\n\u663e\u7136\uff0c\u4ea4\u6362\u540e\u539f\u6765V[a]\u7684\u9006\u5e8f\u5bf9\u591a\u51fa\u6765\u4e00\u4e2a\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u65f6a\u548ca+1\u5df2\u7ecf\u6362\u4f4d\u7f6e\u4e86\uff0c\u5c31\u628a\u539f\u6765b[a]\u4ece\u4e24\u68f5\u6811\u4e2d\u5220\u6389\uff0cb[a]++,\u518d\u52a0\u5165\u4e24\u68f5\u6811(\u56e0\u4e3a\u4e24\u68f5\u6811\u4e2d\u5143\u7d20\u50a8\u5b58\u5b9e\u9645\u4e0a\u53ea\u548c\u5143\u7d20\u7684\u503c\u6709\u5173)\uff0c\u4ea4\u6362a\u548ca+1\u7684V\u548cb\u503c\n\n2.V[a]>V[a+1]\n\n\u540c\u4e0a\uff0c\u4e0d\u8fc7\u8fd9\u6b21\u53d8\u6210\u539f\u6765V[a+1]\u7684\u9006\u5e8f\u5bf9\u5c11\u4e86\u4e00\u4e2a\n\n\u5177\u4f53\u7ec6\u8282\u4ee3\u7801\u4e2d\u4e5f\u6709\u4e00\u90e8\u5206\u6ce8\u91ca\n```cpp\n#include<iostream>\n#include<cstdio>\n#define int long long int\nusing namespace std;\nint n,m,a1,a2,t1[800001],t2[800001],t3[800001],v[200001],b[200001];\nint ls(int x)\n{\n\treturn x<<1;\n}\nint rs(int x)\n{\n\treturn x<<1|1;\n}\nvoid pushup1(int x)\n{\n\tt1[x]=t1[ls(x)]+t1[rs(x)];\n}\nvoid pushup2(int x)\n{\n\tt2[x]=t2[ls(x)]+t2[rs(x)];\n}\nvoid pushup3(int x)\n{\n\tt3[x]=t3[ls(x)]+t3[rs(x)];\n}\nvoid T1ADD(int x,int l,int r,int p)\n{\n\tif(l==r)\n\t{\n\t\tt1[x]++;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(p<=mid)\n\t\tT1ADD(ls(x),l,mid,p);\n\telse\n\t\tT1ADD(rs(x),mid+1,r,p);\n\tpushup1(x);\n} \nint Query1(int x,int l,int r,int nl,int nr)\n{\n\tif(nl<=l&&nr>=r)\n\t{\n\t\treturn t1[x];\n\t}\n\tint mid=(l+r)>>1,res=0;\n\tif(nl<=mid)\n\t\tres+=Query1(ls(x),l,mid,nl,nr);\n\tif(nr>mid)\n\t{\n\t\tres+=Query1(rs(x),mid+1,r,nl,nr);\n\t}\n\treturn res;\n}\nvoid Change2(int x,int l,int r,int p,int Val)\n{\n\tif(l==r)\n\t{\n\t\tt2[x]+=Val;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(p<=mid)\n\t\tChange2(ls(x),l,mid,p,Val);\n\tif(p>mid)\n\t{\n\t\tChange2(rs(x),mid+1,r,p,Val);\n\t}\n\tpushup2(x);\n}\nint Query2(int x,int l,int r,int nl,int nr)\n{\n\tif(nl<=l&&nr>=r)\n\t{\n\t\treturn t2[x]; \n\t}\n\tint mid=(l+r)>>1,res=0;\n\tif(nl<=mid)\n\t{\n\t\tres+=Query2(ls(x),l,mid,nl,nr);\n\t}\n\tif(nr>mid)\n\t{\n\t\tres+=Query2(rs(x),mid+1,r,nl,nr);\n\t}\n\treturn res;\n}\nvoid Change3(int x,int l,int r,int p,int Val)\n{\n\tif(l==r)\n\t{\n\t\tt3[x]+=Val;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(p<=mid)\n\t\tChange3(ls(x),l,mid,p,Val);\n\tif(p>mid)\n\t{\n\t\tChange3(rs(x),mid+1,r,p,Val);\n\t}\n\tpushup3(x);\n}\nint Query3(int x,int l,int r,int nl,int nr)\n{\n\tif(nl<=l&&nr>=r)\n\t{\n\t\treturn t3[x]; \n\t}\n\tint mid=(l+r)>>1,res=0;\n\tif(nl<=mid)\n\t{\n\t\tres+=Query3(ls(x),l,mid,nl,nr);\n\t}\n\tif(nr>mid)\n\t{\n\t\tres+=Query3(rs(x),mid+1,r,nl,nr);\n\t}\n\treturn res;\n}\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&v[i]);\n\t\tb[i]=(i-1)-Query1(1,1,n,1,v[i]);//\u67e5\u8be2\u51fa\u5df2\u51fa\u73b0\u6bd4v[i]\u5c0f\u7684\u6570\u4e2a\u6570 \n\t\tT1ADD(1,1,n,v[i]); \n\t\tChange2(1,1,n,b[i]+1,b[i]);//\u907f\u5f00b[i]\u4e3a0\u7684\u60c5\u51b5 \n\t\tChange3(1,1,n,b[i]+1,1);//\u907f\u5f00b[i]\u4e3a0\u7684\u60c5\u51b5 \n\t}\n\t/*\n\t\u4e3b\u4f53\u601d\u60f3\u4e3a\u6784\u9020\u4e24\u9897\u6743\u503c\u7ebf\u6bb5\u6811\n\tt2:\u4fdd\u5b58\u6743\u503c\u5728l\u5230r\u4e4b\u95f4\u7684b[i]\u7684\u548c\n\tt3:\u4fdd\u5b58\u6743\u503c\u5728l\u5230r\u4e4b\u95f4\u7684b[i]\u7684\u4e2a\u6570 \n\t*/\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&a1,&a2);\n\t\tif(a1==1)\n\t\t{\n\t\t\tif(v[a2]>v[a2+1])\n\t\t\t{\n\t\t\t\tChange2(1,1,n,b[a2+1]+1,-b[a2+1]);\n\t\t\t\tChange3(1,1,n,b[a2+1]+1,-1);\n\t\t\t\tb[a2+1]--;\n\t\t\t\tChange2(1,1,n,b[a2+1]+1,b[a2+1]);\n\t\t\t\tChange3(1,1,n,b[a2+1]+1,1);\n\t\t\t\tswap(b[a2],b[a2+1]);\n\t\t\t\tswap(v[a2],v[a2+1]); \n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tChange2(1,1,n,b[a2]+1,-b[a2]);\n\t\t\t\tChange3(1,1,n,b[a2]+1,-1);\n\t\t\t\tb[a2]++;\n\t\t\t\tChange2(1,1,n,b[a2]+1,b[a2]);\n\t\t\t\tChange3(1,1,n,b[a2]+1,1);\n\t\t\t\tswap(b[a2],b[a2+1]);\n\t\t\t\tswap(v[a2],v[a2+1]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(a2>=n)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%lld\\n\",Query2(1,1,n,a2+1,n)-a2*(Query3(1,1,n,a2+1,n))); \n\t\t\t} \n\t\t}\n\t} \n\treturn 0;\n}\n```\n",
        "postTime": 1583744621,
        "uid": 19868,
        "name": "\u6797\u852d",
        "ccfLevel": 6,
        "title": "P6186[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f"
    },
    {
        "content": "# NOI Online T2 \u5192\u6ce1\u6392\u5e8f\u9898\u89e3&\u53cd\u601d\n## \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u4e2a $1 \u223c n$ \u7684\u6392\u5217 $p_i$\uff0c\u63a5\u4e0b\u6765\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u64cd\u4f5c\u5171\u4e24\u79cd\uff1a\n1. \u4ea4\u6362\u64cd\u4f5c\uff1a\u7ed9\u5b9a $x$\uff0c\u5c06\u5f53\u524d\u6392\u5217\u4e2d\u7684\u7b2c $x$ \u4e2a\u6570\u4e0e\u7b2c $x+1$ \u4e2a\u6570\u4ea4\u6362\u4f4d\u7f6e\u3002\n2. \u8be2\u95ee\u64cd\u4f5c\uff1a\u7ed9\u5b9a $k$\uff0c\u8bf7\u4f60\u6c42\u51fa\u5f53\u524d\u6392\u5217\u7ecf\u8fc7 $k$ \u8f6e\u5192\u6ce1\u6392\u5e8f\u540e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6392\u5217 $p_i$ \u8fdb\u884c\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a(\u7565)\n## Solution\n   \u4f5c\u4e3a\u4e00\u4e2a\u849f\u84bb,\u6211\u4ece\u81ea\u5df1\u601d\u8def\u4e0a\u5206\u6790\u4e00\u4e0b\u8fd9\u9053\u597d\u9898\n\u9996\u5148\u66b4\u529b\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684,\u6309\u9898\u610f\u6a21\u62df\u5373\u53ef.\n\n### \u4e00:$\\mathcal{O} (n\\log_n)$\u6c42\u9006\u5e8f\u5bf9\n\u6709\u5f52\u5e76\u6392\u5e8f\u548c\u6811\u72b6\u6570\u7ec4\u4e24\u79cd\u65b9\u6cd5,\u56e0\u4e3a\u540e\u9762\u8981\u7528\u6811\u72b6\u6570\u7ec4\u6240\u4ee5\u9009ta\n\n\u66f4\u4e3b\u8981\u7684\u539f\u56e0\u662f\u53ef\u4ee5\u6c42\u51fa$i$\u4f4d\u7f6e\u524d\u5927\u4e8e\u6b64\u6570\u7684\u6570\u7684\u4e2a\u6570\n\n\u6211\u4eec\u8bb0\u521d\u59cb\u5e8f\u5217\u4e3a$p[i]$,\u6bcf\u6b21\u5411BIT(\u6811\u72b6\u6570\u7ec4)\u4e2d$p[i]$\u7684\u4f4d\u7f6e\u4e0a\u52a0\u4e00\n\n(\u5177\u4f53\u53ef\u4ee5\u770b\u9006\u5e8f\u5bf9\u7684\u9898\u89e3,\u5927\u4f6c\u4eec\u7edd\u5bf9\u6bd4\u6211\u5199\u7684\u597d)\n\ncode:\n```\tcpp\n for (register int i = 1; i <= n; i++)\n    {\n        add(p[i], 1);\n        ni[i] = i - query(p[i]);\n        cnt += ni[i];\n        ++d[ni[i]];\n    }\n  ```\n  \n    \u5176\u4e2d$d[i]$\u662f\u6876,\u7edf\u8ba1$ni[i]$\u4e2a\u6570,$ni[i]$\u8868\u793a$i$\u524d\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\n   ### \u4e8c:\u7ef4\u62a4\u6bcf\u6b21\u4ea4\u6362\u540e\u7684$d[i]$\n\t\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\n    \n    \u5176\u5b9e\u4e00\u5f00\u59cb\u849f\u84bb\u7ef4\u62a4\u4e86ni[i],\u4e5f\u9519\u7b97\u4e86\u590d\u6742\u5ea6(\u7206\u96f6\u4e86)\n    \n    \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7ef4\u62a4ni[i]\u6211\u4eec\u5728\u7b2c\u4e09\u5757\u8bb2\n$d[i]$\u4e5f\u8868\u793a\u7b54\u6848\u4e2d\u7b2ck\u8f6e\u540e\u8fd8\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u6570\n\n\u5f00\u59cb\u76f4\u63a5\u63d2\u5165$cnt$,\u4e5f\u5c31\u662f\u603b\u9006\u5e8f\u5bf9\u6570\n\n\u7136\u540e\u5728$d[i+2]$\u4e0a\u63d2\u5165\u6bd4\u5f53\u524d\u7684\u8f6e\u6570\u5c0f\u7684$ni[i]$**\u7684\u4e2a\u6570**\u7684\u76f8\u53cd\u6570,\u4e5f\u5c31\u662f\u51cf\u53bb\u8fd9\u4e2a\u4e2a\u6570\n\n\u8fd9\u6837\u5c31\u51cf\u53bb\u4e86$k$\u8f6e\u540e\u5df2\u7ecf\u53d8\u6210$0$\u7684$ni[i]$\n\n\u786e\u5b9a\u4e86\u521d\u59cb\u7684BIT,\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u64cd\u4f5c1\u4e86\n\n\u5206\u7c7b\u8ba8\u8bba$p[i]$\u4e0e$p[i+1]$\u7684\u5927\u5c0f\n\n\u82e5\u662f$p[i]$\u5927\u4e8e$p[i+1]$,\u5219\u4ea4\u6362\u540e\u6bd4$i+1$\u4f4d\u7f6e\u4e0a\u7684\u6570\u5927\u7684\u6570\u8981\u51cf\u5c11,\u540c\u65f6\u9006\u5e8f\u5bf9\u6570\u4e5f\u4f1a\u51cf\u5c11\n\n\u53cd\u4e4b\u540c\u7406\n\n### \u4e09:\u7ef4\u62a4\u7b54\u6848\n\u89c4\u5f8b:\u6bcf\u8fdb\u884c\u4e00\u6b21\u5192\u6ce1\u6392\u5e8f,ni[i]--(\u524d\u63d0\u662f\u5927\u4e8e0)\u4e14\u5de6\u79fb\n\n\u8bc1\u660e\u53c2\u8003\u4e8c\u4e2d\u7684\u7ef4\u62a4\u64cd\u4f5c\u4e00\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7ef4\u62a4$ni[i]$,\u5219\u662fni[i]\u4e0d\u80fd\u5feb\u901f\u7684\u6c42\u51fa\u5c0f\u4e8ek\u7684ni[i],\u4f1aT\n\n\u7531\u4e8ek\u53ef\u80fd\u5f88\u5927,\u8981\u5206\u7c7b\u8ba8\u8bbak\u5927\u4e8en\u7684\u60c5\u51b5\n\n\u7b54\u6848\u5373\u4e3aquery(k+1)\n## \u603b\u7ed3\n\n\u4e2a\u4eba\u8ba4\u4e3a\u96be\u70b9\u6709\u4e8c:(\u53ef\u80fd\u662f\u6211\u592a\u84bb)\n\n\u4e00\u662f\u627e\u51fa\u89c4\u5f8b\n\n\u4e8c\u662f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7b54\u6848\n\n## \u4ee3\u7801(\u53c2\u8003\u4e86\u4e00\u4e9b\u9898\u89e3)\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define maxn 200010\n#define ll long long\ninline ll read()\n{\n    ll res = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n        res = res * 10 + ch - 48, ch = getchar();\n    return res * f;\n}\nll n, m, p[maxn], ans[maxn << 2], cnt, ni[maxn], d[maxn], tmp;\ninline void swap(ll &a, ll &b)\n{\n    a ^= b;\n    b ^= a;\n    a ^= b;\n}\ninline int lowbit(int x)\n{\n    return x & (-x);\n}\ninline void add(int x, ll k)\n{\n    while (x <= n)\n    {\n        ans[x] += k;\n        x += lowbit(x);\n    }\n}\ninline ll query(ll x)\n{\n    ll res = 0;\n    while (x)\n    {\n        res += ans[x];\n        x -= lowbit(x);\n    }\n    return res;\n}\ninline ll max(ll a, ll b)\n{\n    return a > b ? a : b;\n}\ninline ll min(ll a, ll b)\n{\n    return a < b ? a : b;\n}\nint main()\n{\n    n = read();\n    m = read();\n    for (register int i = 1; i <= n; i++)\n    {\n        p[i] = read();\n    }\n    for (register int i = 1; i <= n; i++)\n    {\n        add(p[i], 1);\n        ni[i] = i - query(p[i]);\n        cnt += ni[i];\n        ++d[ni[i]];\n    }\n    memset(ans, 0, sizeof ans); //\u91cd\u590d\u5229\u7528ans\n    add(1, cnt);                //\u4e00\u8f6e\u540e\u6240\u6709\u7684\u9006\u5e8f\u5bf9\u90fd\u53ef\u4ee5\u6210\u4e3a\u7b54\u6848(\u51cf\u53bbk)\n    for (register int i = 0; i < n; i++)\n    {\n        for (register int j = 1; j <= n; j++)\n            cout << ans[j] << ' ';\n        cout << endl;\n        tmp += d[i];\n        add(i + 2, tmp - n); //i+2\u662f\u4e00\u4e2a\u6620\u5c04,\u56e0\u4e3a\u662f\u4ece0\u5f00\u59cb,\u52a0\u4e0a\n    }\n    while (m--)\n    {\n        int t = read();\n        ll c = read();\n        c = min(n - 1, c);\n        if (t == 1)\n        {\n            if (p[c] < p[c + 1])\n            {\n                swap(p[c], p[c + 1]);\n                swap(ni[c], ni[c + 1]);\n                add(1, 1);\n                add(ni[c + 1] + 2, -1);\n                ni[c + 1]++;\n            }\n            else\n            {\n                swap(p[c], p[c + 1]);\n                swap(ni[c], ni[c + 1]);\n                add(1, -1);\n                ni[c]--;\n                add(ni[c] + 2, 1);\n            }\n        }\n        if (t == 2)\n        {\n            cout << query(c + 1) << endl;\n        }\n    }\n    return 0;\n}\n\n```\n**\u9650\u4e8e\u7b14\u8005\u6c34\u5e73,\u96be\u514d\u51fa\u73b0\u7eb0\u6f0f,\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u6307\u51fa**",
        "postTime": 1583649487,
        "uid": 115003,
        "name": "te5555",
        "ccfLevel": 0,
        "title": "NOI Online T2 \u5192\u6ce1\u6392\u5e8f\u9898\u89e3&\u53cd\u601d"
    },
    {
        "content": "## T2\n\u9996\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u524d\u9762\u6709\u591a\u5c11\u6bd4\u5b83\u5927\u7684\u70b9\u3002\n\n\u663e\u7136\u53ef\u4ee5\u63a8\u51fa\uff0c\u5982\u679c\u524d\u9762\u6709 $b_i$ \u4e2a\u6bd4 $i$ \u5927\u7684\u70b9\uff0c\u5219\u524d $b_i$ \u8f6e\u4e2d\u5b83\u5c06\u4e0d\u4f1a\u5411\u540e\u79fb\uff0c\u56e0\u4e3a\u4e0e\u5b83\u76f8\u6bd4\u7684\u70b9\u4e00\u5b9a\u5927\u4e8e\u5b83\u3002\n\n\u800c\u82e5\u4e0d\u4f1a\u53d8\u5316\uff0c\u5219\u4ee3\u8868\u4f1a\u88ab\u524d\u9762\u7684\u67d0\u4e2a\u5927\u4e8e\u5b83\u70b9\u5728\u5192\u6ce1\u7684\u8fc7\u7a0b\u4e2d\u7ecf\u8fc7\uff0c\u56e0\u6b64\u4f1a\u4f7f\u5f97\u9006\u5e8f\u5bf9 $-1$\u3002\n\n\u7136\u540e\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\uff0c\u7ef4\u62a4\u4e24\u4e2a\u4fe1\u606f\uff0c\u4e00\u4e2a\u662f\u5728\u4e00\u6bb5\u503c\u57df\u8303\u56f4\u5185\u6709\u591a\u5c11\u4e2a\u70b9\uff0c\u4e00\u4e2a\u662f\u8fd9\u4e9b\u70b9\u7684\u8d21\u732e\uff08\u4e2a\u6570\u4e58\u4ee5\u503c\uff09\u3002\n\n\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u8ba1\u7b97\u4e00\u4e0b\u5373\u53ef\u3002\u7528\u5f53\u524d\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u51cf\u53bb\u53d8\u5316\u4e2d\u4f1a\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std; \ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-48;\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nchar cr[200];int tt;\ninline void print(long long x,char k='\\n') {\n    if(!x) putchar('0');\n    if(x < 0) putchar('-'),x=-x;\n    while(x) cr[++tt]=x%10+'0',x/=10;\n    while(tt) putchar(cr[tt--]);\n    putchar(k);\n}\nconst int maxn=200005;\nstruct seg{\n\tint v;\n\tlong long sum;\n}t[maxn<<3][2];\nvoid change(int o,int l,int r,int q,int v,int wh){\n\tif(l==r){\n\t\tt[o][wh].v+=v;\n\t\tt[o][wh].sum+=l*v;\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tif(q<=mid) change(o<<1,l,mid,q,v,wh);\n\telse change(o<<1|1,mid+1,r,q,v,wh);\n\tt[o][wh].v=t[o<<1][wh].v+t[o<<1|1][wh].v;\n\tt[o][wh].sum=t[o<<1][wh].sum+t[o<<1|1][wh].sum;\n}\nint query1(int o,int l,int r,int ql,int qr,int wh){\n\tif(ql<=l&&r<=qr){\n\t\treturn t[o][wh].v;\n\t}\n\tint mid=l+r>>1,res=0;\n\tif(ql<=mid) res+=query1(o<<1,l,mid,ql,qr,wh);\n\tif(qr>mid) res+=query1(o<<1|1,mid+1,r,ql,qr,wh);\n\treturn res;\n}\nlong long query2(int o,int l,int r,int ql,int qr,int wh){\n\tif(ql<=l&&r<=qr){\n\t\treturn t[o][wh].sum;\n\t}\n\tint mid=l+r>>1;\n\tlong long res=0;\n\tif(ql<=mid) res+=query2(o<<1,l,mid,ql,qr,wh);\n\tif(qr>mid) res+=query2(o<<1|1,mid+1,r,ql,qr,wh);\n\treturn res;\n}\nint a[maxn],b[maxn],n,m;\nlong long ni,ans;\nsigned main(){\n//\tfreopen(\"bubble.in\",\"r\",stdin);\n//\tfreopen(\"bubble.out\",\"w\",stdout);\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\tb[i]=query1(1,1,n,a[i]+1,n,0);\n\t\tni+=b[i];\n\t\tchange(1,1,n,a[i],1,0);\n\t\tchange(1,0,n,b[i],1,1);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint opt=read(),x=read();\n\t\tif(opt==1){\n\t\t\tif(a[x]>a[x+1]){\n\t\t\t\tchange(1,0,n,b[x+1],-1,1);\n\t\t\t\tb[x+1]--;\n\t\t\t\tni--;\n\t\t\t\tchange(1,0,n,b[x+1],1,1);\n\t\t\t\tswap(a[x],a[x+1]);\n\t\t\t\tswap(b[x],b[x+1]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tchange(1,0,n,b[x],-1,1);\n\t\t\t\tb[x]++;\n\t\t\t\tni++;\n\t\t\t\tchange(1,0,n,b[x],1,1);\n\t\t\t\tswap(a[x],a[x+1]);\n\t\t\t\tswap(b[x],b[x+1]);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(x==0){\n\t\t\t\tprint(ni);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tans=ni;\n\t\t\tans+=(long long)x*query1(1,0,n,0,x,1);\n\t\t\tans-=n*x;\n\t\t\tans-=query2(1,0,n,0,x,1);\n\t\t\tprint(ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u7136\u800c\u8003\u573a\u4e0a\u5199\u51fa\u6765\u4e86\u4f46\u6ca1\u8c03\u5b8c\uff0c\u671f\u671b\u5f97\u5206 $0$\u3002",
        "postTime": 1583559104,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053 ~~\u8f83\u96be~~ \u5f88\u96be \u7684\u9898\u76ee\uff0c\u9898\u4e2d\u8981\u6c42\u5192\u6ce1\u6392\u5e8f\u540e\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\n\u5b9a\u4e49$b_i$\u4e3a\u524d$(i-1)$\u4e2a\u6570\u4e2d\u6bd4$i$\u5927\u7684\u6570\u7684\u4e2a\u6570\n\n# **\u5148\u6c42\u51fa$b_i$\uff1a**\n\n\u5b9a\u4e49$tr1$\u5b58\u8f93\u5165\uff0c\u4e5f\u662f\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\n\n\u6c42\u9006\u5e8f\u5bf9\u7684\u7ecf\u5178\u64cd\u4f5c\uff1a\n\n\n```cpp\nfor(int i=1;i<=n;i++)\n{\n\tscanf(\"%lld\",&a[i]);\n\tupdate(tr1,a[i],1);\n\tlong long s=(long long)i-ask(tr1,a[i]);\n\ttr2[i]=s;\n}\n```\n# **\u4e0b\u9762\u4e3b\u653b\u6392\u5e8f\u540e\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684\u95ee\u9898\uff1a**\n\n\u660e\u663e\u53ef\u77e5\uff0c\u7ecf\u8fc7$k$\u8f6e\u5192\u6ce1\u6392\u5e8f\u540e\uff0c\u6bcf\u4e2a$>k$\u7684$b_i$\u90fd\u4f1a\u51cf$k$\u3002\u4e0d\u5230\u7684\u6e05\u96f6\u3002(\u56e0\u4e3a\u8fd9\u4e2a\u6570\u6bcf\u8f6e\u53ea\u80fd\u4e0e\u524d\u9762\u4ea4\u6362\u6700\u591a$1$\u6b21)\n\n\u4f8b\u5b50\uff1a$7,2,6,4,1,10,9,8,3,5$\n\n$k=3$\u65f6\u6709$1+3+2=6$\u4e2a\u9006\u5e8f\u5bf9\n\n\n\u6211\u4eec\u600e\u6837\u786e\u5b9a\u4e0d\u540c$k$\u5bf9\u5e94\u7684\u503c\u5462\uff1f\n\n\u522b\u6025\uff0c\u5b9a\u4e24\u4e2a\u5355\u70b9\u6c42\u548c\uff0c\u533a\u95f4\u4fee\u6539\u7684\u6811\u72b6\u6570\u7ec4(\u4e3a\u4e86\u907f\u514d\u5750\u6807\u4e3a$0$\u7684$RE$\uff0c\u5730\u5740\u90fd\u8981\u52a0$1$)\n\n$tr3_{i+1}$:$b$\u6570\u7ec4\u4e2d\u503c\u4e3a$i$\u7684\u6570\u7684\u4e2a\u6570\uff0c\n\n$tr4_{i+1}$:$b$\u6570\u7ec4\u4e2d\u503c\u4e3a$i$\u7684\u6240\u6709\u6570\u7684\u548c\uff0c\n\n**\u600e\u4e48\u751f\u6210\uff1f\uff1f**\n```cpp\nupdate(tr3,b[i]+1,1);\n```\n```cpp\nupdate(tr4,b[i]+1,b[i]);\n```\n**\u600e\u4e48\u6c42\uff1f\uff1f**\n```cpp\n(ask(tr4,N-1)-ask(tr4,k))-k*(ask(tr3,N-1)-ask(tr3,k));\n```\n\n\u89e3\u91ca\uff1a\u6bcf\u4e2a$>k$\u7684\u6570\u90fd\u8981$-k$(\u5176\u4ed6\u4e0d\u8ba1\u7b97\u5728\u5185),\u90a3\u5c31\u7b97\u51fa\u5b83\u4eec\u7684\u548c\uff0c\u518d\u51cf\u53bb(\u4e2a\u6570\u4e58$k$ )\u5373\u53ef\uff0c\u7528\u6811\u72b6\u6570\u7ec4\uff0c$O(logn)$\u3002\n\n# **\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4ea4\u6362\u600e\u4e48\u529e\uff1f**\n\n\u663e\u7136\uff1a$a$\u6570\u7ec4(\u5b58\u8f93\u5165\u6570\u636e)\u548c$b$\u6570\u7ec4\u8981\u5148\u6362(\u73b0\u5728\u4e0d\u5f71\u54cd$tr3$\u548c$tr4$\uff0c\u4f46\u4e4b\u540e\u5f71\u54cd)\n\n\u540e\u9762\u5206\u7c7b\u8ba8\u8bba,\u6ce8\u610f\u73b0\u5728\u5df2\u6362\u5b8c\uff1a\n\n\u5de6\u5927\u4e8e\u53f3\uff1a$b_c--;$\n\n\u53f3\u5927\u4e8e\u5de6\uff1a$b_{c+1}++;$\n\n\u7136\u540e\u6539\u52a8$tr3$\u548c$tr4$\u3002\n\n**\u9898\u76ee\u5c31~~\u6109\u5feb\u5730~~\u89e3\u51b3\u4e86**\n\n\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<stdio.h>\n#include<iostream>\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1000005;\nlong long n,m,a[N],tr1[N],tr2[N],tr3[N],tr4[N],tr5[N],ni;//tr1:\u6570\u5b57\u6876\uff0ctr2[i]:\u4ee5i\u4e3a\u622a\u6b62\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\nint lowbit(int x){return x&-x;}\nvoid update(long long tr[],long long x,long long y)\n{\n\tfor(;x<=N;x+=lowbit(x)) tr[x]+=y;\n}\nlong long ask(long long tr[],long long x)\n{\n\tif(x==0) return 0;\n\tlong long res=0;\n\tfor(;x;x-=lowbit(x)) res+=tr[x];\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\tupdate(tr1,a[i],1);\n\t\tlong long s=(long long)i-ask(tr1,a[i]);\n\t\ttr2[i]=s;\n\t\tni+=s;\n\t\tif(tr2[i])\n\t\t\tupdate(tr3,tr2[i]+1,1),\n\t\t\tupdate(tr4,tr2[i]+1,tr2[i]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\t\t/*for(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",tr2[j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",ask(tr3,j+1)-ask(tr3,j));\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",ask(tr4,j+1)-ask(tr4,j));\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",(ask(tr4,N-1)-ask(tr4,j))-j*(ask(tr3,N-1)-ask(tr3,j)));\n\t\t\t}\n\t\t\tprintf(\"\\n\\n\\n\");*/\n\t\tlong long t,c;\n\t\tscanf(\"%lld%lld\",&t,&c);\n\t\tif(t==1)\n\t\t{\n\t\t\tswap(a[c],a[c+1]);\n\t\t\tswap(tr2[c],tr2[c+1]);\n\t\t\tif(a[c+1]>a[c])\n\t\t\t{\n\t\t\t\ttr2[c]--;\n\t\t\t\tupdate(tr3,tr2[c]+2,-1);\n\t\t\t\tupdate(tr3,tr2[c]+1,1);\n\t\t\t\tupdate(tr4,tr2[c]+2,-tr2[c]-1);\n\t\t\t\tupdate(tr4,tr2[c]+1,tr2[c]);\n\t\t\t\tni--;\n\t\t\t}\n\t\t\telse if(a[c+1]<a[c])\n\t\t\t{\n\t\t\t\ttr2[c+1]++;\n\t\t\t\tupdate(tr3,tr2[c+1],-1);\n\t\t\t\tupdate(tr3,tr2[c+1]+1,1);\n\t\t\t\tupdate(tr4,tr2[c+1],-tr2[c+1]+1);\n\t\t\t\tupdate(tr4,tr2[c+1]+1,tr2[c+1]);\n\t\t\t\tni++;\n\t\t\t}\n\t\t}\n\t\tif(t==2)\n\t\t{\n\t\t\tif(c>=n) printf(\"0\\n\");\n\t\t\tif(c==0) printf(\"%lld\\n\",ni);\n\t\t\telse printf(\"%lld\\n\",((ask(tr4,N-1)-ask(tr4,c))-c*(ask(tr3,N-1)-ask(tr3,c))));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1611750463,
        "uid": 355185,
        "name": "NoGoshPlease",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online #1 \u63d0\u9ad8\u7ec4] \u5192\u6ce1\u6392\u5e8f\u3011"
    },
    {
        "content": "\u8bf4\u9053\u9006\u5e8f\u5bf9\uff0c\u57fa\u672c\u4e0a\u4e0d\u662f\u5f52\u5e76\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u3002\n\n\u7136\u540e\u6211\u4eec\u6765\u770b\u5192\u6ce1\u6392\u5e8f\u6bcf\u4e00\u8f6e\u7684\u7279\u70b9\u3002\n\n\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u5982\u679c\u5b83\u524d\u9762\u6709\u66f4\u5927\u7684\u6570\uff0c\u90a3\u4e48\u6bcf\u4e00\u8f6e\u5c31\u4f1a\u6709\u4e00\u4e2a\u88ab\u6362\u5230\u4ed6\u540e\u9762\u3002\n\n\u6362\u8a00\u4e4b\uff0c\u8bb0 $uper_i$ \u8868\u793a\u7b2c i \u4e2a\u6570\u524d\u9762\u6709\u51e0\u4e2a\u6570\u6bd4\u4ed6\u5927\uff0c\u5219\u6bcf\u4e00\u8f6e\u5192\u6ce1\u4e4b\u540e\uff0c \u6709\uff1a\n$$uper_i = \\max(uper_i-1,0)$$\n\u8fd9\u73a9\u610f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5f88\u65b9\u4fbf\uff01\n\n\u7528\u5dee\u5206\uff0c\u524d\u7f00\u8bb0\u5f55\u7b2c i \u8f6e\u540e\u5269\u4e0b\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u7b97\u51fa\u5728\u6bcf\u4e00\u8f6e\u4f1a\u6709\u591a\u5c11\u4e2a\u6570\u7684 $uper$ \u4f1a\u6e05\u96f6\uff0c\u4e5f\u5c31\u662f\u8981\u7528 $rec_i$ \u8bb0\u5f55 $uper$ \u4e3a i \u7684\u6570\u6709\u51e0\u4e2a\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a i\uff0c\u67e5\u8be2\u5c31\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u524d\u7f00\u6c42\u548c\uff0c\u4fee\u6539\u5c31 swap \u518d\u6539\u53d8\u9006\u5e8f\u5bf9\u603b\u6570\u548c\u5dee\u5206\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n```cpp\n//coder: Feliks*GM-YB\n#include<bits/stdc++.h>\n#define fu(i,a,b) for(register int i = a, I = (b) + 1; i < I; ++i)\n#define fd(i,a,b) for(register int i = a, I = (b) - 1; i > I; --i)\ntypedef long long ll;\nusing namespace std;\nconst int N=2e5+10;\ninline void Swap(int &x,int &y){\n\tx^=y,y^=x,x^=y;\n}template <class T> inline void read(T &x) {\n    x=0;T f=1;char ch=getchar();\n    while(!isdigit(ch))f=ch=='-'?-1:1,ch=getchar();\n    while(isdigit(ch))x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    x*=f;\n}int n,m,p[N],op,x;\nll c[N],ans;\ninline int lowbit(int x){\n\treturn x&-x;\n}inline void add(int x,ll k){\n\tfor(;x<=n;x+=lowbit(x))c[x]+=k;\n}inline ll qry(int x){\n\tll res=0;\n\tfor(;x;x-=lowbit(x))res+=c[x];\n\treturn res;\n}int uper[N],rec[N];\n//\u524d\u9762\u6bd4 i\u5927\u7684\u4e2a\u6570 & \u524d\u9762\u6709 i\u4e2a\u6bd4\u5979\u5927\u7684\u6570\u7684\u4e2a\u6570 \nint main(){\n\tread(n),read(m);\n\t//\u5148\u8dd1\u4e00\u904d\u6811\u72b6\u6570\u7ec4\u9006\u5e8f\u5bf9\u677f\u5b50\n\tfu(i,1,n){\n\t\tread(p[i]);\n\t\tans+=(uper[i]=i-qry(p[i])-1);\n\t\tadd(p[i],1);\n\t\trec[uper[i]]++;\n\t\t//\u4ed4\u7ec6\u601d\u8003 rec \u7684\u5b9a\u4e49 \n\t}memset(c,0,sizeof(c));\n\tadd(1,ans);ans=n;\n\tfu(i,0,n-1){\n\t\tans-=rec[i];//\u8fd8\u6709\u51e0\u4e2a\u6570\u5728\u7b2ci+1\u8f6e\u4f1a\u51cf\u5c11\u9006\u5e8f\u5bf9 (uper)\n\t\tadd(i+2,-ans);\n\t\t//\u6811\u72b6\u6570\u7ec4\u7684\u4e00\u4e9b\u4e0b\u6807\u6bdb\u75c5\n\t\t//i+1\u8f6e\u7684\u7b54\u6848\u5b58\u5728\u4e86 i+2\u4e2d\uff0c\u5343\u4e07\u6ce8\u610f\uff01\uff01\uff01 \n\t}while(m--){\n\t\tread(op),read(x);\n\t\tif(x>n)x=n;\n\t\tif(op==1){\n\t\t\tif(p[x]<p[x+1]){\n\t\t\t\tswap(p[x],p[x+1]);\n\t\t\t\tswap(uper[x],uper[x+1]); \n\t\t\t\tadd(1,1);//\u9006\u5e8f\u5bf9\u603b\u4e2a\u6570++ \n\t\t\t\tadd((++uper[x+1])+1,-1);//\u6539\u53d8\u5dee\u5206\u7684\u4f4d\u7f6e\u548cuper \n\t\t\t}else{//\u4e0e\u4e0a\u76f8\u53cd \n\t\t\t\tswap(p[x],p[x+1]);\n\t\t\t\tswap(uper[x],uper[x+1]);\n\t\t\t\tadd(1,-1);\n\t\t\t\tadd(1+(uper[x]--),1);\n\t\t\t}\n\t\t}else printf(\"%lld\\n\",qry(x+1));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1585022641,
        "uid": 104292,
        "name": "YellowBean_Elsa",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6186)\n\n# \u601d\u8def\n\n\u4e0d\u597d\u60f3\u5230\n\n\u5b9a\u4e49t\u6570\u7ec4\uff0c\u5176\u4e2d$t_i$\u8868\u793a\u5728$1\\le j<i$\u4e2d\u6709\u591a\u5c11\u4e2a\u5927\u4e8e$a_i$\u7684$a_j$\n\n\u90a3\u4e48\u9006\u5e8f\u5bf9\u5c31\u662f$\\sum_{i=1}^n{t_i}$\n\n\u8003\u8651\u4e00\u64cd\u4f5c\n\n\u4ea4\u6362$a_i$\u548c$a_{i+1}$\n\n\u56e0\u4e3a\u53ea\u662f\u4ea4\u6362\u8fd9\u4e24\u4e2a\u6570\n\n\u6240\u4ee5\u9664\u4e86\u8fd9\u4e24\u4e2a\u6570\u4e4b\u5916\u7684$t_j$\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u53d8\u5316\n\n\u800c\u7ef4\u62a4$t_i$\u548c$t_{i+1}$\u53ea\u9700\u8981\u8003\u8651$a_i$\u548c$a_{i+1}$\u7684\u5927\u5c0f\u5c31\u53ef\u4ee5\u4e86\n\n\u518d\u8003\u8651\u4e8c\u64cd\u4f5c\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\n\n\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u4f1a\u8ba9$t_i=max(t_i-1,0)$\n\n\u5176\u7406\u7531\u662f\u5728\u4efb\u4f55\u4e00\u8f6e\u7684\u5192\u6ce1\u6392\u5e8f\u4e4b\u4e2d\uff0c\u6211\u4eec\u6211\u4eec\u6700\u591a\u53ea\u4f1a\u8ba9$1\\le j <i$\u7684\u4e00\u4e2a$a_j$\u8dd1\u5230$a_i$\u7684\u53f3\u8fb9\n\n\u800c\u5982\u679c\u8981\u8ba9$a_j$\u8dd1\u5230$a_i$\u53f3\u8fb9\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709$a_j>a_i$\uff0c\u6240\u4ee5\u6b64\u65f6$t_i$\u4f1a\u51cf1\n\n\u90a3k\u8f6e\u5462\uff1f\n\n\u5e94\u5f53\u6709$t_i=max(t_i-k,0)$\n\n\u770b\u4e0a\u53bb\u6709\u4e00\u4e2amax\u5f88\u96be\u7ef4\u62a4\n\n\u4f46\u5176\u5b9e\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u597d\u4e86\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u8be2\u95ee\u503c\u57df$k+1\\rightarrow n$\u7684\u548c\u51cf\u53bbk\u4e58\u4e0a\u503c\u57df$k+1\\rightarrow n$\u6709\u591a\u5c11\u4e2a$t_i$\n\n \u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n*log_n)$\n\n# \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nstruct node\n{\n    int l;\n    int r;\n    int tot;\n    long long s;\n}tre[1000005];\nint n,m;\nint a[200005];\nint b[200005];\nlong long bit[200005];\nint lowbit(int x)\n{\n    return x&(-x);\n}\nvoid update(int x,int val)\n{\n    for(int i=x;i<=n;i+=lowbit(i))\n        bit[i]+=val;\n}\nlong long solve_s(int x)\n{\n    long long ret=0;\n    for(int i=x;i>0;i-=lowbit(i))\n        ret+=bit[i];\n    return ret;\n}   \nvoid build(int l,int r,int k)\n{\n    //cout<<k<<'\\n';\n    tre[k].l=l;\n    tre[k].r=r;\n    tre[k].s=0;\n    if(l==r)\n        return;\n    int mid=(l+r)>>1;\n    build(l,mid,k<<1);\n    build(mid+1,r,k<<1|1);\n}\nvoid add(int a,int f,int k)\n{\n    if(tre[k].l>a||a>tre[k].r)\n        return;\n    if(tre[k].l==tre[k].r)\n    {\n        tre[k].tot+=f;\n        tre[k].s=tre[k].s+tre[k].l*f;\n        return;\n    }\n    add(a,f,k<<1);\n    add(a,f,k<<1|1);\n    tre[k].tot=tre[k<<1].tot+tre[k<<1|1].tot;\n    tre[k].s=tre[k<<1].s+tre[k<<1|1].s;\n}\nlong long ask(int l,int r,int k)\n{\n    if(l>r)\n        return 0;\n    if(l>tre[k].r||tre[k].l>r)\n        return 0;\n    if(l<=tre[k].l&&tre[k].r<=r)    \n        return tre[k].s-1ll*tre[k].tot*(l-1);\n    return ask(l,r,k<<1)+ask(l,r,k<<1|1);\n}\nint main()\n{\n    //freopen(\"bubble.in\",\"r\",stdin);\n    //freopen(\"bubble.out\",\"w\",stdout); \n    scanf(\"%d %d\",&n,&m);\n    build(0,n,1);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        b[i]=i-1-solve_s(a[i]);\n        update(a[i],1);\n        add(b[i],1,1);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int t;\n        long long c;\n        scanf(\"%d %lld\",&t,&c);\n        if(t==1)\n        {\n            if(a[c]>a[c+1])\n            {\n                add(b[c],-1,1);\n                add(b[c+1],-1,1);\n                int x=b[c];\n                int y=b[c+1];\n                b[c]=y-1;\n                b[c+1]=x;\n                add(b[c],1,1);\n                add(b[c+1],1,1);\n                swap(a[c],a[c+1]);\n            }\n            else if(a[c]<a[c+1])\n            {\n                add(b[c],-1,1);\n                add(b[c+1],-1,1);\n                int x=b[c];\n                int y=b[c+1];\n                b[c]=y;\n                b[c+1]=x+1;\n                add(b[c],1,1);\n                add(b[c+1],1,1);\n                swap(a[c],a[c+1]);\n            }\n        }\n        else\n        {\n            printf(\"%lld\\n\",ask(c+1,n,1));\n        }\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1583593109,
        "uid": 124477,
        "name": "gSE2xWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "## \u3010\u9898\u89e3\u3011NOIO2020 \u5192\u6ce1\u6392\u5e8f(\u6811\u72b6\u6570\u7ec4)\n\n\u8003\u8651\u5728k\u6b21\u5192\u6ce1\u540e\u7684\u6392\u5217\u4e2d\u7684\u4e00\u4e2a\u9006\u5e8f\u5bf9$i<j,a_i>a_j$\u3002\n\n\u56e0\u4e3a\u8fd9\u4e2a$a_i$\u7684\u5b58\u5728\uff0c\u610f\u5473\u7740$a_j$\u6ca1\u6709\u88ab\u5f80\u53f3\u8fb9\u4ea4\u6362\u8fc7(\u5426\u5219\u4e0d\u4f1a\u5b58\u5728\u4e00\u4e2a$a_i>a_j$)\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6ca1\u6709\u88ab\u4ea4\u6362\u5230\u53f3\u8fb9\u7684\u6570\uff0c\u4ed6\u524d\u9762\u603b\u5171\u6709$k$\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u88ab\u4ea4\u6362\u8d70\u4e86\u3002\u8bb0$ans[i]$\u8868\u793a\u539f\u5e8f\u5217$i$\u4f4d\u7f6e\u548c\u4e4b\u524d\u7684\u6570\u6784\u6210\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u90a3\u4e48$k$\u6b21\u4ea4\u6362\u540e\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f$ans[i]-k$\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f\n$$\n\\sum \\max(0,\\text{ans}[i]-k)\n$$\n\u5bf9$ans[i]$\u7684\u503c\u57df\u5f00\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u6bcf\u6b21\u53d6\u6240\u6709\u5927\u4e8e$k$\u7684\u6240\u6709$ans$\u4e4b\u548c\uff0c\u518d\u51cf\u53bb$ans[i]>k$\u7684\u4e2a\u6570\u4e58\u4ee5$k$\u5c31\u662f\u7b54\u6848\u3002\u4e24\u4e2a\u64cd\u4f5c\u90fd\u662f\u53d6\u4e00\u6bb5\u540e\u7f00\uff0c\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u4ea4\u6362\u64cd\u4f5c\uff0c\u7531\u4e8e\u53ea\u5f71\u54cd\u4e86\u4e24\u4e2a$ans$\uff0c\u6240\u4ee5\u76f4\u63a5\u6a21\u62df\u4e00\u904d\u5c31\u884c\u3002\n\n\u590d\u6742\u5ea6$O(n\\log n)$\u3002\u6ce8\u610f$k$\u8981\u5bf9$n-1$\u53d6min\u3002\n\n```cpp\n//@winlere\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;  typedef long long ll;  \ninline int qr(){\n\tint ret=0,f=0,c=getchar();\n\twhile(!isdigit(c)) f|=c==45,c=getchar();\n\twhile( isdigit(c)) ret=ret*10+c-48,c=getchar();\n\treturn f?-ret:ret;\n}\nconst int maxn=2e5+5;\nint data[maxn],n,m;\nll seg1[maxn],seg2[maxn];\nvoid add(ll*seg,int pos,ll val){\n\t++pos;\n\tfor(int t=pos;t<=n+1;t+=t&-t)\n\t\tseg[t]+=val;\n}\nll que(ll*seg,int pos){\n\t++pos;\n\tll ret=0;\n\tfor(int t=pos;t>0;t-=t&-t)\n\t\tret+=seg[t];\n\treturn ret;\n}\nll que(ll*seg,int l,int r){return que(seg,r)-que(seg,l-1);}\nint ans[maxn];\nvoid del(int pos){add(seg1,ans[pos],-ans[pos]); add(seg2,ans[pos],-1);}\nvoid add(int pos){add(seg1,ans[pos],ans[pos]); add(seg2,ans[pos],1);}\n\nint main(){\n\tn=qr(); m=qr();\n\tfor(int t=1;t<=n;++t)\n\t\tdata[t]=qr(),ans[t]=t-1-que(seg1,data[t]),add(seg1,data[t],1);\n\tmemset(seg1,0,sizeof seg1);\n\tfor(int t=1;t<=n;++t) add(t);\n\tfor(int t=1;t<=m;++t){\n\t\tint op=qr(),x=min(qr(),n);\n\t\tif(op==1){\n\t\t\tdel(x),del(x+1);\n\t\t\tans[x+1]-=data[x]>data[x+1];\n\t\t\tswap(data[x],data[x+1]); swap(ans[x],ans[x+1]);\n\t\t\tans[x+1]+=data[x]>data[x+1];\n\t\t\tadd(x),add(x+1);\n\t\t}else{\n\t\t\tll ret=que(seg1,x,n)-que(seg2,x,n)*x;\n\t\t\tprintf(\"%lld\\n\",ret);\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n",
        "postTime": 1583561913,
        "uid": 113460,
        "name": "\u8c01\u662f\u9e3d\u738b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u5bf9\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684\u5f71\u54cd:\n\u6bcf\u8f6e\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u7684\u64cd\u4f5c\u5373\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u4ea4\u6362\u5143\u7d20\u76f8\u90bb\u7684\u9006\u5e8f\u5bf9\u3002 ~~\u6211\u4eec\u53d1\u73b0\u5176\u5bf9\u6574\u4e2a\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684\u5f71\u54cd\u5341\u5206\u62bd\u8c61\u3002~~\n\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u76f8\u90bb\u7684\u9006\u5e8f\u5bf9\u548c\u975e\u76f8\u90bb\u9006\u5e8f\u5bf9\u7684\u5173\u7cfb\uff1a\n\u6211\u4eec\u8003\u8651\u56fa\u5b9a\u53f3\u7aef\u70b9\u7684\u9006\u5e8f\u5bf9\u3002 \u5047\u5b9a\u5f53\u524d\u53f3\u7aef\u70b9\u4e3a$k$\uff0c\u5728\u5176\u524d\u9762\u4e00\u5171\u6709$p$\u4e2a\u4f4d\u7f6e\u4e0e\u4e4b\u6784\u6210\u9006\u5e8f\u5bf9\uff0c$(pos[1],k),(pos[2],k),(pos[3],k)...(pos[p],k)$\u3002\u6211\u4eec\u53d1\u73b0$\\forall 1\\le i < p,$\u4e00\u5b9a\u5b58\u5728\u9006\u5e8f\u5bf9$(pos[i],pos[i+1])$,$\\forall p + 1\\le j < k$\u4e00\u5b9a\u5b58\u5728\u9006\u5e8f\u5bf9$(p,j)$\u3002\n\n\u90a3\u4e48\u6bcf\u8f6e\u5192\u6ce1\u6392\u5e8f\u63a5\u66ff\u7684\u7ed9\u6bcf\u4e2a\u5de6\u7aef\u70b9$\\text{ntr}$\uff0c\u76f4\u5230\u4ea4\u6362\u5230\u53f3\u7aef\u70b9\u524d\u9762\u4e0e\u53f3\u7aef\u70b9\u4ea4\u6362\uff0c\u90a3\u4e48\u5176\u53ef\u4ee5\u770b\u6210\u7ed9\u5176\u53f3\u7aef\u70b9\u6784\u6210\u7684\u9006\u5e8f\u5bf9\u51cf\u4e00,\u5e76\u4e14\u6bcf\u8f6e\u5192\u6ce1\u6392\u5e8f\u4e00\u5b9a\u4e0d\u4f1a\u589e\u52a0\u9006\u5e8f\u5bf9\u3002\n\n\n\u90a3\u4e48\u6211\u4eec\u76ee\u524d\u7684\u76ee\u6807\u5c31\u5f88\u660e\u786e\u4e86\n\n\u603b\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570$cnt=\\sum_{r=2}^nct[r]$\uff0c\u5176\u4e2d$ct[r]$\u8868\u793a\u4ee5$r$\u4e3a\u53f3\u7aef\u70b9\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n\u6839\u636e\u52a0\u6cd5\u4ea4\u6362\u5f8b$ct=\\sum_kcv[k]\\times k$\u5176\u4e2d$cv[k]$\u8868\u793a\u4ee5\u5176\u4e3a\u9006\u5e8f\u5bf9\u53f3\u7aef\u70b9\u9006\u5e8f\u5bf9\u4e2a\u6570\u6070\u597d\u4e3a$k$\u7684\u4f4d\u7f6e\u4e2a\u6570\u3002\n\n\u90a3\u4e48\n$$\nans[k]=\\sum_{i=k+1}^{n-1}cv[i]\\times i\n$$\n\n\u53ef\u4ee5\u76f4\u63a5\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u4fee\u6539\u76f4\u63a5\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u5373\u53ef\u3002\n\n\n```cpp\n#include <iostream>\n#include <cstring>\n\nnamespace wxy{\nconst int N = 2e5 + 5;\n#define int long long\nstruct node{int l,r,cnt,sum;}t[N << 2];\nint a[N],w[N],c[N],n,m;\ninline void pushup(int u){\n    t[u].cnt = t[u << 1].cnt + t[u << 1 | 1].cnt;\n    t[u].sum = t[u << 1].sum + t[u << 1 | 1].sum;\n}\ninline void build(int u,int l,int r){\n    t[u].l = l; t[u].r = r;\n    if (l == r){t[u].cnt = w[l]; t[u].sum = t[u].cnt * l; return;}\n    int mid = l + r >> 1;\n    build(u << 1,l,mid);\n    build(u << 1 | 1,mid + 1,r);\n    pushup(u);\n}\ninline void plus(int u,int x,int v){\n    if (t[u].l == x && t[u].r == x){\n        t[u].cnt += v;\n        t[u].sum = t[u].cnt * t[u].l;\n        return;\n    }\n    int mid = t[u].l + t[u].r >> 1;\n    if (x <= mid) plus(u << 1,x,v);\n    if (x > mid) plus(u << 1 | 1,x,v);\n    pushup(u);\n}\ninline int qcnt(int u,int l,int r){\n    if (t[u].l == l && t[u].r == r) return t[u].cnt;\n    int mid = t[u].l + t[u].r >> 1;\n    if (r <= mid) return qcnt(u << 1,l,r);\n    else if (l > mid) return qcnt(u << 1 | 1,l,r);\n    else return qcnt(u << 1,l,mid) + qcnt(u << 1 | 1,mid + 1,r);\n}\ninline int qsum(int u,int l,int r){\n    if (t[u].l == l && t[u].r == r) return t[u].sum;\n    int mid = t[u].l + t[u].r >> 1;\n    if (r <= mid) return qsum(u << 1,l,r);\n    else if (l > mid) return qsum(u << 1 | 1,l,r);\n    else return qsum(u << 1,l,mid) + qsum(u << 1 | 1,mid + 1,r);\n}\ninline void main(){\n    std::cin >> n >> m;;\n    for (int i = 1; i <= n; i++) std::cin >> a[i];\n    memset(w,0,sizeof w);\n    build(1,1,n);\n    for (int i = 1; i <= n; i++){\n        c[i] = qcnt(1,a[i],n);\n        plus(1,a[i],1);\n    }\n    for (int i = 1; i <= n; i++) w[c[i]]++;\n    build(1,0,n-1);\n    while (m--){\n        int op,x; std::cin >> op >> x;\n        if (op == 2){\n            if (x >= n - 1) std::cout << 0 << std::endl;\n            else std::cout << qsum(1,x+1,n-1) - qcnt(1,x+1,n-1) * x << std::endl;\n        }else{\n            plus(1,c[x],-1);plus(1,c[x+1],-1);\n            if (a[x] > a[x+1]) c[x+1]--;\n            else c[x]++;\n            std::swap(c[x],c[x+1]);\n            std::swap(a[x],a[x+1]);\n            plus(1,c[x],1);plus(1,c[x+1],1);\n        }\n    }\n}\n}signed main(){wxy::main();return 0;}\n```\n",
        "postTime": 1612375846,
        "uid": 317459,
        "name": "RyexAwl",
        "ccfLevel": 6,
        "title": "P6186 [NOI Online #1 \u63d0\u9ad8\u7ec4] \u5192\u6ce1\u6392\u5e8f \u6743\u503c\u7ebf\u6bb5\u6811"
    },
    {
        "content": "~~\u627e\u89c4\u5f8b~~\n\n\u5047\u8bbe\u6570\u5217\u4e3a2 3 1\n\n- \u5f53\u5192\u6ce1\u6392\u5e8f**0**\u8f6e\u4e4b\u540e\uff0c\u5171**2**\u4e2a\u9006\u5e8f\u5bf9\n\n- \u5f53\u5192\u6ce1\u6392\u5e8f**1**\u8f6e\u4e4b\u540e\uff0c\u8fd8\u5269**1**\u4e2a\u9006\u5e8f\u5bf9\n\n- \u5f53\u5192\u6ce1\u6392\u5e8f**2**\u8f6e\u4e4b\u540e\uff0c**\u6ca1\u6709\u9006\u5e8f\u5bf9\u4e86**\n\n\u8fd9\u5c31\u975e\u5e38\u660e\u663e\u4e86\u5427\uff1f\n\n\u4e5f\u5c31\u662f\u8bf4\uff1a\n\n### \u5047\u8bbe\u521d\u59cb\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3ak, \u5f53n\u8f6e\u5192\u6ce1\u6392\u5e8f\u4e4b\u540e\uff0c\u8fd8\u5269k - n\u7ec4\u9006\u5e8f\u5bf9\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6c42**\u521d\u59cb\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570**\u5373\u53ef\n\n\u6c42\u9006\u5e8f\u5bf9\u6709\u51e0\u79cd\u65b9\u6cd5\uff1a\u7ebf\u6bb5\u6811\uff0c\u5f52\u5e76\u6392\u5e8f\uff0c\u6811\u72b6\u6570\u7ec4\n\n~~\u611f\u89c9\u6811\u72b6\u6570\u7ec4\u6700\u597d\u5199\uff0c\u4e0d\u63a5\u53d7\u53cd\u9a73~~\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u8fd9\u6837\u7ef4\u62a4\u6570\u7ec4\u4e5f\u5f88\u65b9\u4fbf\n\n- \u9996\u5148\u5b8f\u5b9a\u4e49ll, N\uff1a\n\n```\n#define ll long long\n#define N 200010\n```\n\n- \u5b9a\u4e49\u4e00\u4e9b\u53d8\u91cf\uff1a\n\n```\nll a[N], t[N], n, m, x, y, cnt, ccnt[N], tmp[N];//t\u8868\u793a\u6811\u72b6\u6570\u7ec4\n```\n\n- lowbit\uff08\u6ca1\u5565\u597d\u8bf4\u7684\uff09\uff1a\n\n```\ninline int lowbit(int w) {\n    return w & (-w);\n}\n```\n\n- \u7136\u540e\u662fquery\u8be2\u95ee\uff08\u4e5f\u6ca1\u5565\u597d\u8bf4\u7684\uff09\uff1a\n\n```\nll query(ll x) {\n    ll ans = 0;\n    for (ll i = x; i >= 1; i -= lowbit(i)) ans += t[i];\n    return ans;\n}\n```\n\n- \u63a5\u7740\u5c31\u662fupdate\uff1a\n\n```\nvoid update(ll x, ll val) {\n    for (ll i = x; i <= n; i += lowbit(i)) t[i] += val;\n}\n```\n\n- \u7136\u540e\u5c31\u662f\u6700\u540e\u7684main\u51fd\u6570\uff08\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\u9762\uff09\uff1a\n\n```\nint main() {\n    cin >> n >> m;//\u8f93\u5165\n    for (ll i = 1; i <= n; i++) cin >> a[i];//\u8f93\u5165\n    for (ll i = 1; i <= n; i++) {//\u521d\u59cb\u5316\u6811\u72b6\u6570\u7ec4\uff0c\u9006\u5e8f\u5bf9\n        tmp[i] = i - query(a[i]) - 1;//\u4e00\u4e2a\u6570\u7684\u9006\u5e8f\u5bf9\n        cnt += tmp[i];\n        ccnt[tmp[i]]++;//+1\n        update(a[i], 1);//\u66f4\u65b0\n    }\n    memset(t, 0, sizeof(t));//\u6811\u72b6\u6570\u7ec4\u6e05\u7a7a\n    update(1, cnt);//update\n    cnt = 0;//\u6e05\u96f6\n    for (ll i = 1; i <= n; i++) {\n        cnt += ccnt[i - 1];//\u52a0\u9006\u5e8f\u5bf9\n        update(i + 1, -(n - cnt));//update\n    }\n    while (m--) {\n        cin >> y >> x;//\u8f93\u5165\n        x = min(x, n - 1);//\u53d6\u6700\u5c0f\uff0c\u5426\u5219\u6709\u53ef\u80fd\u6ea2\u51fa\n        if (y == 2) cout << query(x + 1) << \"\\n\";//\u67e5\u8be2\n        else if (y == 1) {//\u4ea4\u6362\n            if (a[x] < a[x + 1]) {\n                swap(a[x], a[x + 1]);//\u4ea4\u6362\n                swap(tmp[x], tmp[x + 1]);//\u4ea4\u6362\n                tmp[x + 1]++;//\u9006\u5e8f\u5bf9++\n                update(tmp[x + 1] + 1, -1);//\u66f4\u65b0\n                update(1, 1);//\u66f4\u65b0\n            } else {\n                swap(a[x], a[x + 1]);//\u4ea4\u6362\n                swap(tmp[x], tmp[x + 1]);//\u4ea4\u6362\n                update(tmp[x] + 1, 1);//\u66f4\u65b0\n                tmp[x]--;//\u9006\u5e8f\u5bf9\n                update(1, -1);//\u66f4\u65b0\n            }\n        }\n    }\n    return 0;\n}\n```\n\n- \u6240\u4ee5\u6700\u540e\u5c31\u662f\uff1a\n\n```\n#include <bits/stdc++.h>\n#define ll long long\n#define N 200010\nusing namespace std;\n\nll a[N], t[N], n, m, x, y, cnt, ccnt[N], tmp[N];\n\ninline int lowbit(int w) {\n    return w & (-w);\n}\n\nll query(ll x) {\n    ll ans = 0;\n    for (ll i = x; i >= 1; i -= lowbit(i)) ans += t[i];\n    return ans;\n}\n\nvoid update(ll x, ll val) {\n    for (ll i = x; i <= n; i += lowbit(i)) t[i] += val;\n}\n\nint main() {\n    cin >> n >> m;\n    for (ll i = 1; i <= n; i++) cin >> a[i];\n    for (ll i = 1; i <= n; i++) {\n        tmp[i] = i - query(a[i]) - 1;\n        cnt += tmp[i];\n        ccnt[tmp[i]]++;\n        update(a[i], 1);\n    }\n    memset(t, 0, sizeof(t));\n    update(1, cnt);\n    cnt = 0;\n    for (ll i = 1; i <= n; i++) {\n        cnt += ccnt[i - 1];\n        update(i + 1, -(n - cnt));\n    }\n    while (m--) {\n        cin >> y >> x;\n        x = min(x, n - 1);\n        if (y == 2) cout << query(x + 1) << \"\\n\";\n        else if (y == 1) {\n            if (a[x] < a[x + 1]) {\n                swap(a[x], a[x + 1]);\n                swap(tmp[x], tmp[x + 1]);\n                tmp[x + 1]++;\n                update(tmp[x + 1] + 1, -1);\n                update(1, 1);\n            } else {\n                swap(a[x], a[x + 1]);\n                swap(tmp[x], tmp[x + 1]);\n                update(tmp[x] + 1, 1);\n                tmp[x]--;\n                update(1, -1);\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1584324065,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "P6186 [NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u4e3b\u8981\u8003\u7684\u662f\u5bf9\u4e8e\u5192\u6ce1\u6392\u5e8f\u4e2d\u9006\u5e8f\u5bf9\u7684\u8ba4\u8bc6\n\n\u9996\u5148\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7ed3\u8bba\uff1a\n\n1. \u4e00\u6b21\u4fee\u6539\u53ea\u4f1a\u5f71\u54cd\u4e00\u4e2a\u9006\u5e8f\u5bf9(\u5373 $p_{k}$ \u548c $p_{k+1}$ ),\u5bf9\u4e8e\u5176\u4ed6\u9006\u5e8f\u5bf9\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\t\t\n\n2. \u5728\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570 $p_i$\uff0c\u76f8\u5f53\u4e8e\u6d88\u53bb  \n   \u201c\u4ee5 $p_i$ \u4e3a\u53f3\u7aef\u70b9\u7684\u9006\u5e8f\u5bf9\u4e2d\uff0c\u5de6\u7aef\u70b9\u79bb $p_i$ \u6700\u8fd1\u7684\u9006\u5e8f\u5bf9\u201d\u3002  \n   (\u5982\u679c\u6ca1\u6709\u5219\u4e0d\u4f1a\u6d88\u53bb)\n\n   \u56e0\u4e3a\u5728\u4e00\u8f6e\u5192\u6ce1\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u4ea4\u6362\uff0c\u53f3\u8fb9\u7684\u6570\u6700\u591a\u53ea\u4f1a\u4ea4\u6362\u4e00\u6b21\uff0c  \n   \u5de6\u8fb9\u7684\u6570\u53ef\u80fd\u4f1a\u7ee7\u7eed\u5411\u53f3\u4ea4\u6362\u4e0b\u53bb\u3002\n\n\u4e8e\u662f\u6d41\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a\n\n1. \u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6c42\u51fa\u4ee5\u6bcf\u4e00\u4e2a $p_i$ \u4e3a\u53f3\u7aef\u70b9\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u5b58\u5728\u6570\u7ec4 $sum$ \u4e2d\u3002\t\n\n2. \u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4fee\u6539,\u66f4\u65b0\u8fd9\u4e24\u4e2a\u6570\u7684\u9006\u5e8f\u5bf9\u6570(\u6ce8\u610f\u53f3\u7aef\u70b9)\u3002\n\n3. \u5bf9\u4e8e\u6bcf\u4e00\u6b21\u6c42\u503c\uff0c\u5c31\u662f\u6c42\u89e3 $\\sum\\limits^n_{i=1} sum[i]>k? sum[i]-k:0$ \u3002  \n\n\u5bf9\u4e8e\u6d41\u7a0b3\uff0c\u8fd9\u91cc\u7684\u8ba1\u7b97\u662f $\\Theta(n)$ \u7684\uff0c\u9700\u8981\u4f18\u5316\u5230 $\\Theta(\\log n)$ \u7ea7\u522b\n\n1. \u5f00\u4e00\u4e2a\u6876 $pocket$\uff0c\u5c06 $sum$ \u4e2d\u7684\u6570\u5b58\u5165\u6876\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5 $\\Theta(1)$ \u66f4\u65b0\u6876\u3002  \n\n2. \u8bbe\u7b54\u6848\u4e3a $f(k)$\uff0c\u5219 $f(k)=\\sum\\limits^n_{i=k}pocket[i]\\times(i-k)$\uff0c  \n\t\u4e0d\u96be\u53d1\u73b0 $f(k)=f(k+1)+(\\sum\\limits^n_{i=k}pocket[i])$\uff0c\u76f8\u5f53\u4e8e\u505a\u4e24\u6b21\u524d\u7f00\u548c\n\n3. \u8fd9\u65f6 $pocket[i]$ \u7ed9 $f(0)\\sim f(k)$ \u7684\u8d21\u732e\u662f\u4e00\u6bb5**\u7b49\u5dee\u6570\u5217**\uff0c  \n\t\u6b64\u65f6\u5df2\u7ecf\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811 $\\Theta(\\log n)$ \u89e3\u51b3\u4e86\uff0c\u6a21\u677f\u5982\u4e0b  \n    [\u3010P1438 \u65e0\u804a\u7684\u6570\u5217\u3011](https://www.luogu.com.cn/problem/P1438) (orz yyb)\n\t\n\u4ee3\u7801 (2.48s,26,63MB)\n\n```cpp\n#include<stdio.h>\n#include<string.h>\ntypedef unsigned char byte;\ntypedef unsigned short hword;\ntypedef unsigned int word;\ntypedef unsigned long long ull;\ntypedef long long ll;\n//\u6ce8\u610f\u6700\u540e\u5f00long long\nstruct READ{//\u5feb\u8bfb\uff0c\u540ccin\n\t//inline READ(){\n\t//\tfreopen(\"bubble.in\",\"r\",stdin);\n\t//\tfreopen(\"bubble.out\",\"w\",stdout);\n\t//}\n\ttemplate<typename type>\n    inline READ& operator >>(type & num){\n        register char c=getchar(),w=1;\n        while('0'>c||c>'9'){\n            if(c==EOF) return *this;\n            w=c=='-'? -1:1;\n            c=getchar();\n        }\n        num=0;\n        while('0'<=c&&c<='9'){\n            num=(num*10)+(c-'0');\n            c=getchar();\n        }\n        return num*=w,*this;\n    }\n}cin;\nclass WRITE{//\u5feb\u5199\uff0c\u540ccout\n\tprivate:\n\t\tchar out[1<<20],*top;\n\tpublic:\n\t\tinline WRITE(){top=out;}\n\t\tinline ~WRITE(){\n\t\t\tif(top!=out) fwrite(out,1,top-out,stdout);\n\t\t}\n\t\tinline WRITE& operator <<(char c){\n\t\t\t*top=c,top++;\n\t\t\tif(top==out+(1<<20))\n\t\t\t\tfwrite(top=out,1,1<<20,stdout);\n\t\t\treturn *this;\n\t\t}\n\t\tinline WRITE& operator <<(const char c[]){\n\t\t\tfor(register word i=0;c[i]!='\\0';i++) *this<<c[i];\n\t\t\treturn *this;\n\t\t}\n\t\tinline WRITE& operator <<(ull num){\n\t\t\tif(num==0) return *this;\n\t\t\treturn *this<<num/10<<(char)(num%10+'0');\n\t\t}\n\t\ttemplate<typename type>\n\t\tinline WRITE& operator <<(type num){\n\t\t\tif(num==0) return *this<<'0';\n\t\t\tif(num>0) return *this<<(ull)(num);\n\t\t\treturn *this<<'-'<<(ull)(-num);\n\t\t}\n}cout;\nbyte pool[1<<25],*top=pool+(1<<25);\ninline void* operator new(size_t size){\n    return top-=size;\n}//\u91cd\u8f7dnew\uff0c\u65b9\u4fbf\u7ebf\u6bb5\u6811\u4f7f\u7528\nstruct point{//\u6c42\u9006\u5e8f\u5bf9\u7684\u6743\u503c\u7ebf\u6bb5\u6811\n\tpoint *l,*r;\n\tword from,to;\n\tlong long h;\n\tinline point(word f,word t){\n\t\tfrom=f,to=t,h=0;\n\t\tif(f!=t){\n            l=new point(f,(f+t)>>1);\n\t\t\tr=new point(l->to+1,t);\n        }\t\n\t}\n    inline void is(word id,long long num){//\u5355\u70b9\u4fee\u6539\n        if(from==to){h=num;return;}\n        if(id<=l->to) l->is(id,num);\n        else r->is(id,num);\n        h=l->h+r->h;\n    }\n\tinline long long sum(word f,word t){//\u533a\u95f4\u6c42\u548c\n\t\tif(f==from&&t==to) return h;\n\t\tif(t<=l->to) return l->sum(f,t);\n\t\tif(r->from<=f) return r->sum(f,t);\n\t\treturn l->sum(f,l->to)+r->sum(r->from,t);\n\t}\n}*tree;\nstruct anspoint{//\u8ba1\u7b97\u7b54\u6848\u7684\u7ebf\u6bb5\u6811\n\tanspoint *l,*r;\n\tint from,to;\n\tll h,firsttag,plustag;\n\tinline anspoint(int f,int t){\n\t\tfrom=f,to=t,h=firsttag=plustag=0;\n\t\tif(f!=t){\n            l=new anspoint(f,(f+t)>>1);\n\t\t    r=new anspoint(l->to+1,t);\n        }\n\t}\n\tinline void plus(int f,int t,ll first,ll p){//\u52a0\u4e0a\u7b49\u5dee\u6570\u5217\n\t\tif(f==from&&t==to){\n\t\t\th+=(p*(t-f>>1)+first)*(t-f+1);\n\t\t\tif(f!=t) firsttag+=first,plustag+=p;\n\t\t\treturn;\n\t\t}\n\t\tif(t<=l->to) l->plus(f,t,first,p);\n\t\telse if(r->from<=f) r->plus(f,t,first,p);\n\t\telse{\n\t\t\tl->plus(f,l->to,first,p);\n\t\t\tr->plus(r->from,t,(r->from-f)*p+first,p);\n\t\t}\n\t}\n\tinline ll sum(int id){//\u533a\u95f4\u6c42\u548c\n\t\tif(from==to) return h;\n\t\telse{\n\t\t    if(firsttag!=0||plustag!=0){\n\t\t\t    l->plus(l->from,l->to,firsttag,plustag);\n\t\t\t    r->plus(r->from,r->to,plustag*(r->from-l->from)+firsttag,plustag);\n\t    \t\tfirsttag=plustag=0;\n\t\t    }\n\t\t    if(id<=l->to) return l->sum(id);\n\t\t    return r->sum(id);\n\t\t}\n\t}\n}*anstree;\nword n,m;\nll num[200010],pocket[200010],sum[200010];\nint main(){\n    cin>>n>>m;\n    tree=new point(1,n);\n    for(register word i=1;i<=n;i++){\n        cin>>num[i];\n        sum[i]=tree->sum(num[i],n);//\u8ba1\u7b97\u5bf9\u4e8e\u6bcf\u4e2a\u53f3\u7aef\u70b9\u7684\u9006\u5e8f\u5bf9\u6570\n        pocket[sum[i]]++;//\u653e\u5165\u6876\u4e2d\n\t\ttree->is(num[i],1);//\u5c06\u5176\u4f5c\u4e3a\u5de6\u7aef\u70b9\u653e\u5165\u7ebf\u6bb5\u6811\n    }\n\ttop=pool+(1<<25);//\u91cd\u7528\u65e7\u7684\u5185\u5b58\n    anstree=new anspoint(0,n);\n    for(register int i=n;i>=0;i--)//\u8ba1\u7b97\u6876\u4e2d\u7684\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n        anstree->plus(0,i,pocket[i]*i,-pocket[i]);\n    for(int t,k,l,r;m>0;m--){\n        cin>>t>>k;\n        if(t==1){\n            l=sum[k],r=sum[k+1];\n            if(num[k]<num[k+1]){//\u4fee\u6539\u9006\u5e8f\u5bf9\u6570\u548c\u8d21\u732e\n                anstree->plus(0,l,-l,1);\n                l++,anstree->plus(0,l,l,-1);\n            }\n            else{\n                anstree->plus(0,r,-r,1);\n                r--,anstree->plus(0,r,r,-1);\n            }\n\t\t\tsum[k]=r,sum[k+1]=l;\n            t=num[k];\n            num[k]=num[k+1];\n            num[k+1]=t;\n\n        }\n        else if(k>n) cout<<'0'<<'\\n';//\u6ce8\u610f\u7279\u5224\n        else cout<<anstree->sum(k)<<'\\n';\n    }\n    return 0;\n}\n```",
        "postTime": 1583568795,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6186"
    },
    {
        "content": "### \u9898\u76ee\u4f20\u9001\u95e8\uff1a\n\n[[NOI Online #1 \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f](https://www.luogu.com.cn/problem/P6186)\n\n### \u601d\u8def\uff1a\n\n\u5047\u5b9a\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u6392\u5217\u4e2d\u6bcf\u4e2a\u6570\u5b57\u9006\u5e8f\u5bf9\u7684\u6570\u91cf$iv_i$\n\n\u9996\u5148\u4ece\u76f8\u5bf9\u7b80\u5355\u7684\u8be2\u95ee\u64cd\u4f5c\u5f00\u59cb\u601d\u8003\uff1a\n\n```\nfor i = 1 to n-1:\n  if p[i] > p[i + 1]:\n    swap(p[i], p[i + 1])//\u5355\u8f6e\u5192\u6ce1\u6392\u5e8f\u4f2a\u4ee3\u7801\n```\n\u4e0d\u96be\u60f3\u5230\uff0c\u5b83\u6bcf\u4e00\u8f6e\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u82e5$p_i$\u4e0e$p_{i+1}$\u6784\u6210\u9006\u5e8f\u5bf9\uff0c\u5219\u4ea4\u6362\u4ed6\u4eec\u3002**\u4e5f\u5c31\u662f\u82e5$p_{i+1}$\u6709\u9006\u5e8f\u5bf9\uff0c\u5219\u8ba9$iv_{i+1}-1$**\u3002\u7528\u6570\u5b66\u8bed\u8a00\u5f62\u5f0f\u5316\u7684\u8bb2\u5c31\u662f$iv_i=max(0,iv_i-1)$\u3002\n\n\u800c\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u662f$k$\u8f6e\u6392\u5e8f\uff0c**\u56e0\u6b64\u6392\u5b8c\u5e8f\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$i$,$iv_i$ \u5c0f\u4e8e\u7b49\u4e8e $k$\u7684\u4e0d\u4f1a\u5bf9\u7b54\u6848\u505a\u51fa\u4efb\u4f55\u8d21\u732e\uff0c\u800c$iv_i$ \u5927\u4e8e $k$ \u7684\u505a\u51fa\u7684\u8d21\u732e\u5219\u662f$iv_i-k$\u3002** \u4e5f\u5c31\u662f$iv_i=max(0,iv_i-k)$\u3002\u6240\u4ee5\u6700\u7ec8\u7ed3\u679c\u5c31\u662f\n\n$ans=\\sum_{i=1}^nmax(0,iv_i-k)$\n\n\u4f46\u8fd9\u6837\u7684\u516c\u5f0f\u5bf9\u6211\u4eec\u5199\u7a0b\u5e8f\u4f3c\u4e4e\u6ca1\u6709\u4efb\u4f55\u5e2e\u52a9\uff1f\u8ba9\u6211\u4eec\u53d8\u4e00\u4e0b\u5f62\n\n$ans=\\sum_{iv_i>k}iv_i-\\sum_{iv_i>k}k$\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e1c\u897f\u7406\u89e3\u6210**\u5c06\u6240\u6709\u5927\u4e8e$k$\u7684$iv_i$\u7d2f\u52a0\uff0c\u6700\u540e\u51cf\u53bb\u5927\u4e8e$k$\u7684$iv_i$\u7684\u4e2a\u6570\u4e58$k$**\n\n\u8be2\u95ee\u64cd\u4f5c\u89e3\u51b3\u4e86\uff0c\u63a5\u4e0b\u6765\u601d\u8003\u4ea4\u6362\uff1a\n\n\u9898\u76ee\u7ed9\u5b9a\u4ea4\u6362$p_x$\u4e0e$p_{x+1}$\uff0c\u663e\u7136\u6709\u4e24\u79cd\u60c5\u51b5\n\n1. $p_x$\u4e0e$p_{x+1}$\u662f\u9006\u5e8f\u5bf9\n2. $p_x$\u4e0e$p_{x+1}$\u4e0d\u662f\u9006\u5e8f\u5bf9\n\n\u9488\u5bf9\u8fd9\u4e24\u79cd\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6837\u4f8b\u53bb\u63a2\u7a76\u89c4\u5f8b\n[![rrLtQ1.png](https://s3.ax1x.com/2020/12/22/rrLtQ1.png)](https://imgchr.com/i/rrLtQ1)\n\n\u53d1\u73b0\u4e86\u5417\uff1f\n\n\n**1. \u82e5$p_x$\u4e0e$p_{x+1}$\u662f\u9006\u5e8f\u5bf9\uff0c\u5219$iv_{x+1}-1$\u5e76\u4ea4\u6362$iv_x$\u4e0e$iv_{x+1}$**\n\n**2. \u82e5$p_x$\u4e0e$p_{x+1}$\u4e0d\u662f\u9006\u5e8f\u5bf9\uff0c\u5219$iv_{x+1}+1$\u5e76\u4ea4\u6362$iv_x$\u4e0e$iv_{x+1}$**\n\n\n\u90a3\u4ee5\u4e0a\u4e24\u4e2a\u95ee\u9898\u90fd\u89e3\u51b3\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u6765\u770b\u4ee3\u7801\u7684\u5b9e\u73b0\u4e86\n\n#### \u5b9e\u73b0\uff1a\n\u7ffb\u56de\u8be2\u95ee\u64cd\u4f5c\u6700\u540e\u63a8\u5bfc\u51fa\u7684\u5f0f\u5b50\uff0c\u663e\u7136\u662f\u6709\u533a\u95f4\u6c42\u548c\u7684\u90e8\u5206\uff0c\u518d\u52a0\u4e0a\u9006\u5e8f\u5bf9\uff0c\u4f60\u80fd\u60f3\u5230\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u5462\uff1f\u663e\u7136\u662f**\u6811\u72b6\u6570\u7ec4**\uff08\u5f53\u7136\u7ebf\u6bb5\u6811\u4e5f\u884c\uff0c\u4f46\u662f\u849f\u84bb\u4e0d\u4f1a\u5199\uff0c\u800c\u4e14\u4ee3\u7801\u91cf\u76f8\u6bd4\u6811\u72b6\u6570\u7ec4\u76f4\u7ebf\u4e0a\u5929\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u4ee5\u4e0b\u7684\u6570\u7ec4\n\n- $a$\uff0c\u7528\u6765\u50a8\u5b58\u539f\u6765\u7684\u6392\u5217\n- $ivtree$\uff0c\u7528\u6765\u8ba1\u7b97\u9006\u5e8f\u5bf9\u7684\u6811\u72b6\u6570\u7ec4\n- $ivcnt$\uff0c\u7edf\u8ba1\u6bcf\u4f4d\u6570\u5b57\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\n- $ivcnttree$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$i$,$ivcnttree[i]$\u4e3a\u9006\u5e8f\u5bf9\u6570\u4ece$1$\u5230$i$\u7684\u6570\u5b57\u7684\u8d21\u732e\u548c\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\n- $cntcnttree$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$i$,$cntcnttree[i]$\u4e3a\u9006\u5e8f\u5bf9\u4ece$1$\u5230$i$\u7684\u6570\u5b57\u7684\u4e2a\u6570\u548c\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u5f97\u9006\u5e8f\u5bf9\u4e3a$n$\u5230$k$\u8fd9\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u548c\uff0c\u7136\u540e\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u7684\u6570\u5b57\u4e2a\u6570$\u00d7k$\u7684\u503c\uff0c\u7136\u540e\u76f8\u51cf\uff0c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4ea4\u6362\u64cd\u4f5c\uff0c\u6309\u7167\u4e0a\u6587\u89c4\u5f8b\u6a21\u62df\u5373\u53ef\u3002\n\n\u8fd8\u6709\u4e00\u90e8\u5206\u5c0f\u7ec6\u8282\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u548c\u6ce8\u91ca\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2*1e5+10;\nlong long a[maxn],n;\nlong long ivtree[maxn],ivcnt[maxn],ivcnttree[maxn],cntcnttree[maxn];\n//\u8ba1\u7b97\u6570\u5217\u9006\u5e8f\u5bf9\u6240\u7528\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u7edf\u8ba1\u6bcf\u4f4d\u6570\u5b57\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u8ba1\u7b97\u9006\u5e8f\u5bf9\u4e3ak\u7684\u6570\u5b57\u7684\u8d21\u732e\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u8ba1\u7b97\u9006\u5e8f\u5bf9\u4e3ak\u7684\u6570\u5b57\u7684\u4e2a\u6570\u7684\u6811\u72b6\u6570\u7ec4\ninline int lowbit(int x)\n{\n    return x&(-x);\n}\nvoid add(long long *ac,int p,int v)\n{\n    if(p<=0) return;//\u9632\u6b62\u5361\u6b7b\n    while(p<=n)\n    {\n        ac[p]+=v;\n        p+=lowbit(p);\n    }\n}\nlong long q(long long *ac,int p)\n{\n    if(p<=0) return 0;//\u9632\u6b62\u5361\u6b7b\n    long long ans=0;\n    while(p)\n    {\n        ans+=ac[p];\n        p-=lowbit(p);\n    }\n    return ans;\n}//\u6811\u72b6\u6570\u7ec4\u57fa\u672c\u64cd\u4f5c\nvoid qswap(int x)\n{\n    int x1=x,x2=x+1;\n    if(a[x1]>a[x2])\n    {\n        add(ivcnttree,ivcnt[x2],-ivcnt[x2]);\n        add(cntcnttree,ivcnt[x2],-1);//\u5148\u628a\u539f\u6765\u7684\u503c\u7ed9\u5220\u9664\n        ivcnt[x2]--;\n        add(ivcnttree,ivcnt[x2],ivcnt[x2]);\n        add(cntcnttree,ivcnt[x2],1);//\u7136\u540e\u66f4\u65b0\u65b0\u7684\u503c\n        swap(ivcnt[x1],ivcnt[x2]);\n    }\n    else\n    {\n        add(ivcnttree,ivcnt[x1],-ivcnt[x1]);\n        add(cntcnttree,ivcnt[x1],-1);\n        ivcnt[x1]++;\n        add(ivcnttree,ivcnt[x1],ivcnt[x1]);\n        add(cntcnttree,ivcnt[x1],1);\n        swap(ivcnt[x1],ivcnt[x2]);//\u548c\u4e0a\u9762\u5927\u81f4\u76f8\u4f3c\n    }\n    swap(a[x1],a[x2]); \n}\nint main()\n{\n    int m;\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    long long total=-1;\n    for(int i=1;i<=n;i++)\n    {\n        add(ivtree,a[i],1);\n        long long ret=i-q(ivtree,a[i]);//\u6c42\u9006\u5e8f\u5bf9\n        total=max(ret,total);//\u6c42\u6700\u5927\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u5373\u5192\u6ce1\u6700\u591a\u53ef\u4ee5\u6709\u591a\u5c11\u8f6e\n        ivcnt[i]=ret;\n        add(ivcnttree,ret,ret);\n        add(cntcnttree,ret,1);//\u540c\u65f6\u5bf9\u522b\u7684\u6570\u7ec4\u8fdb\u884c\u521d\u59cb\u5316\n    }\n    int t,c;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d %d\",&t,&c);\n        if(t==1) qswap(c);//cout<<endl;\n        else if(c<=0) cout<<q(ivcnttree,n)<<endl;//\u82e5\u4e00\u8f6e\u5192\u6ce1\u90fd\u6ca1\u6709\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u662f\u539f\u6570\u7ec4\u9006\u5e8f\u5bf9\u4e2a\u6570\n        else if(c>=total) cout<<0<<endl;//\u82e5k\u8fbe\u5230\u6216\u8d85\u8fc7\u4e86\u6700\u591a\u53ef\u8fdb\u884c\u7684\u5192\u6ce1\u8f6e\uff0c\u5219\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e3a0\n        else\n            cout<<max((q(ivcnttree,n)-q(ivcnttree,c))-(q(cntcnttree,n)-q(cntcnttree,c))*c,0ll)<<endl;\n    }\n}\n```\n\uff082kb\u51fa\u5934\uff0c\u5bf9\u6211\u6765\u8bf4\u5199\u7684\u7b97\u591a\u4e86\uff09\n\n\u56e0\u4e3a\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u662f$O(log\\,n)$\u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u590d\u6742\u5ea6\u662f$O(n\\,log\\,n+m\\,log\\,n)$\u7684\uff0c\u80fd\u8fc7\uff01\n\n#### \u7ed3\u8bed\uff1a\n\u8fd9\u662f\u672c\u849f\u84bb\u975e\u5e38\u96be\u5f97\u7684\u80fd\u63d0\u4ea4\u9898\u89e3\u7684\u673a\u4f1a\uff0c\u4e5f\u662f\u7b2c\u4e00\u6b21\u63d0\u4ea4\u9898\u89e3\uff0c\u5e0c\u671b\u5927\u5bb6\u6709\u4efb\u4f55\u770b\u7740\u4e0d\u8212\u670d\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u544a\u8bc9\u6211\u3002\u79c1\u4fe1\uff0c\u8bc4\u8bba\u90fd\u53ef\u4ee5\u3002",
        "postTime": 1608636700,
        "uid": 264548,
        "name": "Tangent233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online #1 \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://zrzring.cn/index.php/archives/244)\n\n\u5148\u8003\u8651\u624b\u73a9\u4e00\u4e0b\u5192\u6ce1\u6392\u5e8f\uff0c\u7136\u540e\u8003\u8651\u9006\u5e8f\u5bf9\u5728\u4e0a\u9762\u6709\u4ec0\u4e48\u7279\u6b8a\u6027\u8d28\uff0c\u5982\u679c\u8bf4\u9006\u5e8f\u5bf9\u901a\u8fc7\u8ba1\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8d21\u732e\u7684\u8bdd(\u6bcf\u4e2a\u4f4d\u7f6e\u524d\u9762\u6709\u591a\u5c11\u6570\u5927\u4e8e\u5b83)\uff0c\u4f1a\u53d1\u73b0\u4e00\u6b21\u5192\u6ce1\u6392\u5e8f\u90e8\u5206\u6570\u5b57\u5f80\u524d\u79fb\u4e86\u4e00\u683c\uff0c\u5e76\u4e14\u90a3\u4e9b\u5927\u7684\u6570\u5b57\u5f80\u540e\u8d70\u4e86\u5f88\u591a\u4e2a\u683c\n\n\u6bcf\u4e2a\u5f80\u524d\u79fb\u52a8\u7684\u6570\u5b57\uff0c\u524d\u9762\u4e00\u5b9a\u5c11\u4e86\u4e00\u4e2a\u4e14\u4ec5\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\uff0c\u6bcf\u4e2a\u5f80\u540e\u79fb\u52a8\u5f88\u591a\u683c\u7684\u6570\u5b57\uff0c\u4e00\u5b9a\u662f\u56e0\u4e3a\u5b83\u524d\u9762\u6ca1\u6709\u6bd4\u5b83\u66f4\u5927\u7684\u6570\u5b57\u624d\u4f1a\u53bb\u5f80\u540e\u8d70\u7684\uff0c\u8bb0\u4e00\u4e2a\u6570\u5b57$i$\u524d\u9762\u6709$b_i$\u4e2a\u6570\u5927\u4e8e\u5b83\uff0c\u90a3\u4e48\u53ef\u4ee5\u6709\u4e00\u4e2a\u7ed3\u8bba\n\n> \u4e00\u6b21\u5192\u6ce1\u6392\u5e8f\uff0c\u4f1a\u4f7f\u5f97\u6240\u6709$b_i$\u53d8\u4e3a$max(0, b_i - 1)$\n\n\u56e0\u4e3a\u662f\u6392\u5217\uff0c\u6240\u4ee5$b_i$\u8868\u793a\u6bcf\u4e2a\u4f4d\u7f6e$i$\u8fd8\u662f\u6bcf\u4e2a\u6570\u5b57$i$\u6765\u8ba1\u7b97\u603b\u8d21\u732e\u662f\u7b49\u4ef7\u7684\uff0c\u8fd9\u6837\u64cd\u4f5c1\u5c31\u6210\u4e86\u4fee\u6539$b_x$\u548c$b_{x + 1}$\u7684\u503c\u4e86\uff0c\u95ee\u9898\u8f6c\u53d8\u6210\n\n> \u5355\u70b9\u4fee\u6539\uff0c\u8be2\u95ee\u5168\u5c40\u6240\u6709\u5143\u7d20\u51cf$k$\u518d\u5bf9$0$\u53d6$max$\u7684\u548c\n\n\u5f00\u4e2a\u503c\u57df\u6811\u72b6\u6570\u7ec4\uff0c\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u5373\u53ef\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#define lowbit(x) (x & -x)\nusing namespace std;\nvoid file() {\n    freopen(\"std.in\", \"r\", stdin);\n    freopen(\"wa.out\", \"w\", stdout);\n}\nconst int N = 1e6 + 10, inf = 1e9;\ninline int read() {\n    bool sym = 0; int res = 0; char ch = getchar();\n    while (!isdigit(ch)) sym |= (ch == '-'), ch = getchar();\n    while (isdigit(ch)) res = (res << 3) + (res << 1) + (ch ^ 48), ch = getchar();\n    return sym ? -res : res;\n}\nint n, m, a[N], below[N];\nstruct BIT {\n    long long tr[N];\n    void clear() {for (int i = 1; i <= n; i++) tr[i] = 0;}\n    long long query(int x) {\n        if (!x) return 0; long long res = 0; for (; x; x -= lowbit(x)) res += tr[x]; return res;\n    }\n    void add(int x, int t) {\n        if (!x) return; for (; x <= n; x += lowbit(x)) tr[x] += 1ll * t;\n    }\n} cnt, sum;\nint main() {\n    n = read(); m = read();\n    for (int i = 1; i <= n; i++) {\n        a[i] = read(); cnt.add(a[i], 1); below[i] = i - cnt.query(a[i]);\n    }\n    cnt.clear();\n    for (int i = 1; i <= n; i++) cnt.add(below[i], 1), sum.add(below[i], below[i]);\n    for (int i = 1; i <= m; i++) {\n        int opt = read();\n        if (opt == 1) {\n            int x = read();\n            cnt.add(below[x], -1); sum.add(below[x], -below[x]);\n            cnt.add(below[x + 1], -1); sum.add(below[x + 1], -below[x + 1]);\n            swap(below[x], below[x + 1]); a[x] > a[x + 1] ? below[x]-- : below[x + 1]++;\n            cnt.add(below[x], 1); sum.add(below[x], below[x]);\n            cnt.add(below[x + 1], 1); sum.add(below[x + 1], below[x + 1]);\n            swap(a[x], a[x + 1]);\n        }\n        if (opt == 2) {\n            int k = read(); if (k >= n) {printf(\"0\\n\"); continue;}\n            printf(\"%lld\\n\", sum.query(n) - sum.query(k) - (cnt.query(n) - cnt.query(k)) * k);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1598439965,
        "uid": 28392,
        "name": "zrzring",
        "ccfLevel": 5,
        "title": "P6186 \u3010[NOI Online #1 \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\u3011"
    },
    {
        "content": "~~\u5927\u83dc\u9e21xukuan\u4e00\u5f00\u59cb\u4ee5\u4e3a\u4e00\u6b21\u5192\u6ce1\u6392\u5e8f\u53ea\u4f1a\u51cf\u5c11\u4e00\u4e2a\u9006\u5e8f\u5bf9~~\n\n\u6211\u4eec\u4ee4$sum_i$\u8868\u793a\u7b2c$i$\u4e2a\u6570\u5b57\u524d\u6709$i$\u4e2a\u6bd4\u4ed6\u5927\u7684\u3002\n\n\u663e\u7136\u6bcf\u6b21\u6392\u5e8f\u540e\uff0c$sum_i$\u90fd\u4f1a\u51cf\u5c111\uff0c\u4f46$sum_i$\u4e0d\u4f1a\u5c0f\u4e8e0\n\n\u8bc1\u660e\n\n- \u5982\u679c$sum_i=0$\u663e\u7136$sum_i$\u8fd8\u662f0\n- \u5982\u679c$sum_i>0$\uff0c\u90a3\u4e48\u524d\u9762\u80af\u5b9a\u4f1a\u6709\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u5b57\u8f6c\u5230\u540e\u9762\u3002\u6240\u4ee5$sum_i$\u51cf\u5c111\n\n\u90a3\u4e48\u8f6c\u4e86k\u6b21\u540e\uff0c\u603b\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u662f$\\sum_{i=1}^n max(0,a_i)$\n\n\u6211\u4eec\u5f00\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u4e2a\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u53e6\u4e00\u4e2a\u7ef4\u62a4\u5927\u4e8ek\u7684\u6570\u7684\u548c\u3002\n\n\u81f3\u4e8e\u4fee\u6539\uff1a\u5148\u5220\u9664\u539f\u6765\u7684\u5f71\u54cd\uff08\u6811\u72b6\u6570\u7ec4\u7684\u5220\u9664\uff0cval=-1\u7684\u4fee\u6539\uff09\uff0c\u518d\u6539\u503c\uff0c\u6362\u4f4d\uff0c\u6700\u540e\u52a0\u56de\u53bb\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nconst ll N=200010;\nll n,m,p[N],nxd[N]; \n\ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn tmp*x;\n} \n\ninline void write(ll x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tll y=10,len=1;\n\twhile(y<=x){\n\t\ty=(y<<3)+(y<<1);\n\t\tlen++;\n\t}\n\twhile(len--){\n\t\ty/=10;\n\t\tputchar(x/y+48); \n\t\tx%=y;\n\t}\n}\n\nstruct BITmentTree{\n\tll sum[N];\n\tinline ll lowbit(ll x){\n\t\treturn x&(-x);\n\t}\n\tinline void update(ll x,ll val=1){\n\t\tfor(ll i=x; i<=n; i+=lowbit(i)) sum[i]+=val;\n\t}\n\tinline ll query(ll x){\n\t\tll ans=0;\n\t\tfor(ll i=x; i; i-=lowbit(i)) ans+=sum[i];\n\t\treturn ans;\n\t}\n\tinline ll query(ll l,ll r){\n\t\treturn query(r)-query(l-1);\n\t}\n}a,b;\n\ninline void update(ll x,ll val=1){\n\ta.update(x,val);\n\tb.update(x,val*x);\n}\n\ninline ll query(ll l,ll r){\n\treturn b.query(l,r)-(l-1)*a.query(l,r);\n}\n\nint main(){\n\tfreopen(\"bubble.in\",\"r\",stdin);\n\tfreopen(\"bubble.out\",\"w\",stdout);\n\tn=read(); m=read();\n\tfor(ll i=1; i<=n; i++) p[i]=read();\n\tfor(ll i=1; i<=n; i++){\n\t\tnxd[i]=i-a.query(p[i])-1;\n\t\ta.update(p[i]);\n\t}\n\tmemset(a.sum,0,sizeof(a.sum));\n\tfor(ll i=1; i<=n; i++){\n\t\tif(nxd[i]) update(nxd[i]);\n\t}\n\twhile(m--){\n\t\tll op=read(),x=read();\n\t\tif(op==2){\n\t\t\tif(x>=n){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twrite(query(x+1,n)); putchar('\\n');\n\t\t}\n\t\telse{\n\t\t\tif(nxd[x]) update(nxd[x],-1);\n\t\t\tif(nxd[x+1]) update(nxd[x+1],-1);\n\t\t\tif(p[x]>p[x+1]) nxd[x+1]--; else nxd[x]++;\n\t\t\tswap(nxd[x],nxd[x+1]); swap(p[x],p[x+1]);\n\t\t\tif(nxd[x]) update(nxd[x],1);\n\t\t\tif(nxd[x+1]) update(nxd[x+1],1); \n\t\t}\n\t}\n\tfclose(stdin); fclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1584192346,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u521a\u8003\u5b8c\uff0c\u8d76\u7d27\u6765\u6c34\u4e00\u6ce2\u9898\u89e3\u3002\u3002\u3002\n## \u4e00\u3001\u9898\u76ee\n[\u70b9\u6b64\u770b\u9898](https://www.luogu.com.cn/problem/P6186)\n## \u4e8c\u3001\u89e3\u6cd5\n\u9996\u5148\u8fd9\u9053\u9898\u6709\u4e00\u9053[\u540c\u540d\u9898](https://blog.csdn.net/C202044zxy/article/details/103439400)\uff0c\u5f88\u76f8\u4f3c\uff08\u63a8\u8350\u5148\u770b\u8fd9\u9053\u540c\u540d\u9898\u7684\u9898\u89e3\uff0c\u90a3\u9898\u662f\u9ed1\u7684\uff0c\u600e\u4e48\u8fd9\u9898\u8bc4\u6210\u84dd\u8272\u4e86\uff1f\uff09\n\n\u9006\u5e8f\u5bf9\u8f6c\u5316\u6210\u6bcf\u4e00\u4e2a\u6570\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\uff08\u8bb0\u4e3a$b$\u6570\u7ec4\uff09\uff0c\u6bcf\u4e00\u8f6e\u7684\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u524d\u9762\u6709\u6bd4\u4ed6\u5927\u7684\u6570\uff0c\u90a3\u4e48\u5b83\u4f1a\u5de6\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u8fd9\u4e2a\u6570\u4f4d\u7f6e\u4e0a\u7684$b$\u51cf$1$\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a\uff08\u8bb0\u8f6e\u6570\u4e3a$k$\uff09\uff1a\n$$\\sum \\min(b[i]-k,0)$$\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5427\uff0c\u5206\u6210\u5927\u4e8e$k$\u7684\u90e8\u5206\u548c\u5c0f\u4e8e\u7b49\u4e8e$k$\u7684\u90e8\u5206\uff0c\u7b97\u5927\u4e8e$k$\u90e8\u5206\u7684\u8d21\u732e\u5373\u53ef\uff08\u8fd9\u91cc\u5c31\u7ef4\u62a4\u4e2a\u6570\u548c\u603b\u548c\uff09\uff0c\u81f3\u4e8e\u4fee\u6539\uff0c\u53ea\u4ea4\u6362$x$\u548c$x+1$\uff0c\u663e\u7136\u5bf9\u5176\u5b83\u7684\u4f4d\u7f6e\u662f\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u7684\uff0c\u8ba8\u8bba\u4e00\u4e0b$a[x]$\u548c$a[x+1]$\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5982\u679c$a[x]$\u5927\u90a3\u4e48\u4ea4\u6362\u540e$b[x]$\u51cf$1$\uff0c\u5982\u679c$a[x+1]$\u5927\u90a3\u4e48\u4ea4\u6362\u540e$b[x+1]$\u52a0$1$\uff0c\u7136\u540e\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u5c31\u884c\u4e86\u3002\n\n\u56fe\u65b9\u4fbf\u6211\u5199\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\uff0c\u4ee3\u7801\u5728\u6c11\u95f4\u6570\u636e\u80fd\u591f\u901a\u8fc7\uff0c\u5e76\u4e14\u6211\u8fd9\u4e2a\u5c0f\u849f\u84bb\u8fd8\u662f\u89c9\u5f97\u6253\u7684\u662f\u5bf9\u7684\uff0c\u53ef\u4ee5\u653e\u5fc3\u770b$qwq$\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n#define ll long long\nconst int M = 200005;\nint read()\n{\n    int x=0,flag=1;char c;\n    while((c=getchar())<'0' || c>'9') if(c=='-') flag=-1;\n    while(c>='0' && c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*flag;\n}\nint n,m,a[M],b[M],bit[M];\nll k,sum[M],A,B;\nint lowbit(int x)\n{\n    return x&(-x);\n}\nvoid upd(int x)\n{\n    for(int i=x;i<=n;i+=lowbit(i))\n        bit[i]++;\n}\nint ask(int x)\n{\n    int res=0;\n    for(int i=x;i>=1;i-=lowbit(i))\n        res+=bit[i];\n    return res;\n}\nvoid modify(int x,int f)\n{\n    for(int i=x+1;i<=n;i+=lowbit(i))\n    {\n        bit[i]+=f;\n        sum[i]+=x*f;\n    }\n}\nvoid query(int x)\n{\n    for(int i=x+1;i>=1;i-=lowbit(i))\n    {\n        A+=bit[i];\n        B+=sum[i];\n    }\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;i++)\n    {\n        a[i]=read();\n        b[i]=i-ask(a[i])-1;\n        k+=b[i];\n        upd(a[i]);\n    }\n    memset(bit,0,sizeof bit);\n    for(int i=1;i<=n;i++)\n    {\n        modify(b[i],1);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int op=read(),x=read();\n        if(op==1)\n        {\n            if(a[x]>a[x+1])\n            {\n                swap(a[x],a[x+1]);\n                swap(b[x],b[x+1]);\n                modify(b[x],-1);\n                b[x]--;k--;\n                modify(b[x],1);\n            }\n            else if(a[x]<a[x+1])\n            {\n                swap(a[x],a[x+1]);\n                swap(b[x],b[x+1]);\n                modify(b[x+1],-1);\n                b[x+1]++;k++;\n                modify(b[x+1],1);\n            }\n        }\n        else\n        {\n            if(x>=n)\n            {\n                puts(\"0\");\n                continue ;\n            }\n            A=0;B=0;\n            query(x);\n            ll ans=(k-B)-(n-A)*x;\n            printf(\"%lld\\n\",ans);\n        }\n    }\n}\n\n```\n\n",
        "postTime": 1583572774,
        "uid": 128239,
        "name": "C20203030",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "#### **P6186 [NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f**\n\n##### [\u9898\u76ee\u63cf\u8ff0](https://www.luogu.com.cn/problem/P6186)\n\n##### \u5206\u6790\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa\u539f\u5e8f\u5217\u4e2d\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\uff0c\u7136\u540e\u6267\u884c\u4e24\u4e2a\u64cd\u4f5c\n\n\u4e3a\u4e86\u65b9\u4fbf\u8fdb\u884c\u64cd\u4f5c\uff0c\u6211\u4eec\u5148\u5c06\u539f\u5e8f\u5217\u79bb\u6563\u5316\u52301~n\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4con[i]\u8868\u793a\u5e8f\u5217\u7684\u7b2ci\u4e2a\u6570\u524d\u6709con[i]\u4e2a\u6570\u6bd4\u5b83\u5927\uff0c\u90a3\u4e48\u9006\u5e8f\u5bf9\u6570\u91cfcnt=$\\sum\\limits_{i=1}^ncon[i]$\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5224\u65ad\u4ea4\u6362\u7684\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u7136\u540e\u6539\u53d8cnt\u548ccon[i]\u5373\u53ef\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u7531\u5f15\u74061\u53ef\u5f97\uff1ak\u8f6e\u5192\u6ce1\u6392\u5e8f\u540e\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u662f$\\sum\\limits_{con[i]\\leq k}con[i]+\\sum\\limits_{con[i]>k}k$\u5206\u522b\u7ef4\u62a4\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u5373\u53ef\n\n###### \u5f15\u74061\n\n\u5728\u4e00\u4e2a\u5e8f\u5217\u8fdb\u884c\u4e00\u8f6e\u5192\u6ce1\u6392\u5e8f\u4e4b\u540e\uff0c$con[i]=max(con[i+1]-1,0)$\uff0c\u7279\u522b\u7684$con[n]=max(con[1]-1,0)$\n\n\u8bc1\u660e\uff1a\n\n\u7b2ck\u8f6e\u5192\u6ce1\u6392\u5e8f\u65f6\uff0c\u5bf9\u4e8e\u5e8f\u5217\u4e2d\u7b2ci\u4e2a\u6570$(i\\in[2,k-2])$\uff0c\u8981\u4e48\u7f6e\u6362\u5230$i-1$\u7684\u4f4d\u7f6e\uff0c\u8981\u4e48\u7f6e\u6362\u5230$i+1$\u7684\u4f4d\u7f6e\uff0c\u524d\u8005\u6709con[i-1]=con[i]-1\uff0c\u540e\u8005\u6709con[i]=con[i+1]-1\n\n##### \u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nconst int N=1e6+5;\nstruct Node\n{\n\tll val,id;\n}a[N];\nstruct node\n{\n\tll x,y;\n}que[N];\nll n,m,c[4*N],sq[N],con[N],cnt,c1[N],c2[N];\n\nbool cmp(Node x,Node y)\n{\n\treturn x.val < y.val;\n}\n\nll lowbit(ll x)\n{\n\treturn x & (-x);\n}\n\nvoid add(ll x,ll val,ll c[N])\n{\n\tif( x==0 ) x=1;\n\twhile( x <= n )\n\t{\n\t\tc[x]+=val;\n\t\tx+=lowbit(x);\n\t}\n\treturn;\n}\n\nll sum(ll x,ll c[N])\n{\n\tll tem=0;\n\twhile( x )\n\t{\n\t\ttem+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn tem;\n}\n\nvoid Input()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(ll i=1;i<=n;i++) scanf(\"%lld\",&a[i].val),a[i].id=i;\n\tfor(ll i=1;i<=m;i++) scanf(\"%lld%lld\",&que[i].x,&que[i].y);\n\treturn;\n}\n\nvoid Prepare()\n{\n\tsort(a+1,a+n+1,cmp);\n\tfor(ll i=1;i<=n;i++) sq[a[i].id]=i;\n\tfor(ll i=1;i<=n;i++) add(sq[i],1,c1),con[i]=i-sum(sq[i],c1),cnt+=con[i];\n\treturn;\n}\n\nvoid deal1(ll id)\n{\n\tadd(con[id],-1,c1); add(con[id],-con[id],c2);\n\tadd(con[id+1],-1,c1); add(con[id+1],-con[id+1],c2);\n\tif( sq[id] < sq[id+1] ) con[id]++,cnt++;\n\telse con[id+1]--,cnt--;\n\tswap(con[id],con[id+1]);\n\tswap(sq[id],sq[id+1]);\n\tadd(con[id],1,c1); add(con[id],con[id],c2);\n\tadd(con[id+1],1,c1); add(con[id+1],con[id+1],c2);\n\treturn;\n}\n\nvoid deal2(ll k)\n{\n\tll tem;\n\tif( k >= n ) k=n-1;\n\ttem=sum(k,c2);\n\ttem+=k*(n-sum(k,c1));\n\tprintf(\"%lld\\n\",cnt-tem);\n\treturn;\n}\n\nvoid work()\n{\n\tmemset(c1,0,sizeof(c1));\n\tfor(ll i=1;i<=n;i++) add(con[i],1,c1),add(con[i],con[i],c2);\n\tfor(ll i=1;i<=m;i++)\n\t{\n\t\tif( que[i].x==1 ) deal1(que[i].y);\n\t\telse deal2(que[i].y);\n\t}\n\treturn;\n}\n\nint main()\n{\n\tInput();\n\tPrepare();\n\twork();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1584110986,
        "uid": 186573,
        "name": "Boring__Zheng",
        "ccfLevel": 6,
        "title": "P6186 [NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f"
    },
    {
        "content": "## NOI-Online-T2-\u5192\u6ce1\u6392\u5e8f\n\n\u8fd9\u9053\u9898\u6211\u5728\u8003\u573a\u4e0a\u7684\u505a\u6cd5\u5f88\u7384\uff0c\u672c\u6765\u662f\u5954\u774040pts\u7684\u90e8\u5206\u5206\u53bb\u7684\uff0c\u7ed3\u679c\u7206\u96f6\u4e86(\u81f3\u4eca\u6ca1\u627e\u5230\u539f\u56e0)\n\n\u6211\u4eec\u8bbe\n\n$$bigger_{i}=\\sum_{j=1}^{i-1}[a_{j}>a_{i}]$$\n\n\u663e\u7136\u9006\u5e8f\u5bf9\u6570\u91cf\u4e3a $\\sum bigger$\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u52a8\u6001\u7ef4\u62a4 $bigger$\u3002\n\n\u624b\u73a9\u51e0\u7ec4\u6570\u636e\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u8f6e\u5192\u6ce1 $bigger$ \u90fd\u4f1a\u6709\u4e00\u4e0b\u7684\u53d8\u5316\uff1a\n\n$$bigger_{i}=\\max\\{bigger_{i}-1,0\\}$$\n\n\u4e8e\u662f\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n#ifndef ONLINE_JUDGE\n#define gc() getchar()\n#else\n#define gc() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++)\n#endif\n#define is() (ch >= '0' && ch <= '9')\ntemplate < typename Type >\nvoid read(Type& a) {\n\ta = 0; bool f = 0; char ch;\n\twhile (!(ch = gc(), is())) if (ch == '-') f = 1;\n\twhile (is()) a = (a << 3) + (a << 1) + (ch ^ '0'), ch = gc();\n\ta = (f ? -a : a);\n}\n\ntemplate < typename Type, typename... Args >\nvoid read(Type& t, Args&... args) {\n\tread(t), read(args...);\n}\n\nusing namespace std;\n\nconst int MAXN = 2e5 + 5;\nint n, m, bigger[MAXN], bucket[MAXN], a[MAXN];\nlong long bit[MAXN], init_inver_tot;\n\nvoid Update(int x, long long y) {\n\tfor (; x <= n; x += x & -x) bit[x] += y;\n}\n\nlong long GetAnswers(int x) {\n\tlong long res = 0;\n\tfor (; x; x -= x & -x) res += bit[x];\n\treturn res;\n}\n\nsigned main() {\n\tread(n, m);\n\tfor (int i = 1; i <= n; ++i) read(a[i]), init_inver_tot += (bigger[i] = i - 1 - GetAnswers(a[i])), bucket[bigger[i]]++, Update(a[i], 1);\n\tmemset(bit, 0, sizeof bit), Update(1,  init_inver_tot), init_inver_tot = 0;\n\tfor (int i = 0; i < n; ++i) init_inver_tot += 1LL * bucket[i], Update(i + 1 + 1, init_inver_tot - n);\n\tfor (int i = 0, op, x; i < m; ++i) {\n\t\tread(op, x);\n\t\tif (n - 1 < x) x = n - 1;\n\t\tif (op ^ 2) {\n\t\t\tif (a[x + 1] > a[x]) {\n\t\t\t\tswap(a[x], a[x + 1]);\n\t\t\t\tswap(bigger[x], bigger[x + 1]);\n\t\t\t\tUpdate(1, 1);\n\t\t\t\tUpdate(bigger[x + 1]++ + 2, -1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswap(a[x], a[x + 1]);\n\t\t\t\tswap(bigger[x], bigger[x + 1]);\n\t\t\t\tUpdate(1, -1);\n\t\t\t\tUpdate(--bigger[x] + 2, 1);\n\t\t\t}\n\t\t}\n\t\telse printf(\"%lld\\n\", GetAnswers(x + 1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1583900396,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6186 \u3010[NOI Online \u63d0\u9ad8\u7ec4]\u5192\u6ce1\u6392\u5e8f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    }
]