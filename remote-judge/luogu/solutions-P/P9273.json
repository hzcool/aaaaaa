[
    {
        "content": "\u4e00\u4e2a $5\\times5$ \u7684\u6ca1\u6709\u7a3b\u8349\u4eba\u7684\u7530\u5730\u65e0\u6cd5\u4f7f\u7528\u55b7\u704c\u5668\u5b8c\u5168\u94fa\u6ee1\uff0c\u56e0\u4e3a\u5355\u5143\u683c\u6570\u91cf\u4e0d\u53ef\u88ab $3$ \u6574\u9664\u3002\u7136\u800c\uff0c\u5982\u679c\u8fd9\u4e2a\u7530\u5730\u6709\u4e00\u4e2a\u7a3b\u8349\u4eba\uff0c\u6709 $24$ \u4e2a\u5355\u5143\u683c\uff0c\u8fd9\u6837\u7684\u7530\u5730\u4e0d\u7ba1\u7a3b\u8349\u4eba\u7684\u4f4d\u7f6e\u5982\u4f55\u90fd\u53ef\u4ee5\u5b8c\u5168\u7528\u55b7\u704c\u5668\u94fa\u6ee1\u3002\u8fd9\u662f\u5f88\u76f4\u89c2\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u7b80\u5355\u7684\u9012\u5f52\u94fa\u7816\u7b97\u6cd5\u6765\u8bc1\u660e\u6bcf\u4e2a\u53ef\u80fd\u7684\u7a3b\u8349\u4eba\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u94fa\u6ee1\u7530\u5730\u3002\n\n\u8fd9\u610f\u5473\u7740\u89e3\u51b3\u6bcf\u4e2a\u6709\u7a3b\u8349\u4eba\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e76\u4e0d\u56f0\u96be\u3002\u5bf9\u4e8e\u5176\u4ed6\u7684\u7a7a\u7530\u5730\u600e\u4e48\u529e\u5462\uff1f\u663e\u7136\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u6bcf\u4e2a\u7a7a\u7530\u5730\u7684\u8fb9\u7f18\u94bb\u4e00\u4e2a\u6d1e\u3002\u8fd9\u6837\u53ef\u4ee5\u4f7f\u6b64\u7530\u5730\u4e2d\u7684\u7a7a\u5355\u5143\u683c\u6570\u91cf\u53ef\u88ab $3$ \u6574\u9664\uff1a\u5982\u679c\u6211\u4eec\u901a\u8fc7\u6d1e\u53e3\u653e\u5165\u4e00\u4e2a\u9002\u5f53\u7684\u74f7\u7816\uff0c\u5b83\u53ef\u4ee5\u51cf\u5c11\u7530\u5730\u4e2d\u7a7a\u5355\u5143\u683c\u7684\u6570\u91cf\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684\u9012\u5f52\u94fa\u7816\u6765\u94fa\u7816\u3002\u4f9d\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u89e3\u51b3\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u7b97\u6cd5\u3002\n\n\u5f88\u5bb9\u6613\u5c06\u6240\u6709\u7684\u7530\u5730\u6392\u5217\u6210\u4e00\u4e32\uff0c\u4f7f\u5f97\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u4efb\u610f\u76f8\u90bb\u7684\u4e24\u4e2a\u7530\u5730\u4e5f\u662f Sara \u7684\u571f\u5730\u4e0a\u7684\u76f8\u90bb\u7530\u5730\uff08\u4f8b\u5982\uff0c\u6211\u4eec\u6309\u87ba\u65cb\u7684\u65b9\u5f0f\u904d\u5386\u7530\u5730\uff09\u3002\n\n\u6211\u4eec\u6cbf\u7740\u8fd9\u4e2a\u987a\u5e8f\u4e00\u4e2a\u7530\u5730\u63a5\u4e00\u4e2a\u7530\u5730\u5730\u904d\u5386\u3002\u5982\u679c\u5f53\u524d\u7530\u5730\u6709\u53ef\u88ab $3$ \u6574\u9664\u7684\u7a7a\u5355\u5143\u683c\u6570\u91cf\uff0c\u6211\u4eec\u5c31\u7528\u74f7\u7816\u94fa\u6ee1\u5b83\u3002\u5426\u5219\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u7530\u5730\u548c\u4e0b\u4e00\u4e2a\u7530\u5730\u4e4b\u95f4\u94bb\u4e00\u4e2a\u6d1e\uff0c\u5e76\u901a\u8fc7\u8fd9\u4e2a\u6d1e\u653e\u5165\u4e00\u7247\u9002\u5f53\u7684\u74f7\u7816\uff0c\u4f7f\u5f97\u5f53\u524d\u7530\u5730\u4e2d\u7a7a\u7684\u5355\u5143\u683c\u6570\u53ef\u4ee5\u88ab $3$ \u6574\u9664\u3002\u7136\u540e\u6211\u4eec\u94fa\u6ee1\u5f53\u524d\u7530\u5730\u5e76\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7530\u5730\uff08\u5176\u4e2d\u73b0\u5728\u5305\u542b\u4e00\u5757\u74f7\u7816\uff09\u3002\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u521d\u59cb\u7684\u603b\u7a7a\u5355\u5143\u683c\u6570\u91cf\u53ef\u4ee5\u88ab $3$ \u6574\u9664\uff08\u8f93\u5165\u6587\u4ef6\u662f\u53ef\u89e3\u7684\uff09\u3002\n\n\u901a\u5e38\u4f1a\u5b58\u5728\u4e00\u4e9b\u60c5\u51b5\uff0c\u5176\u4e2d\u6d1e\u548c\u76f8\u5e94\u7684\u74f7\u7816\u7684\u9009\u62e9\u4f7f\u5f97\u8be5\u7279\u5b9a\u7530\u5730\u7684\u94fa\u7816\u53d8\u5f97\u4e0d\u53ef\u80fd\uff08\u4f8b\u5982\uff0c\u7a3b\u8349\u4eba\u548c\u901a\u8fc7\u6d1e\u7684\u74f7\u7816\u53ef\u80fd\u4f1a\u8ba9\u4e00\u4e2a\u7a7a\u5355\u5143\u683c\u5b64\u7acb\uff09\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u662f\u4e2a\u63d0\u4ea4\u7b54\u6848\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u66f4\u6539\u8f93\u51fa\uff0c\u5e76\u7528\u63d0\u4ea4\u7b54\u6848\u7684\u65b9\u5f0f\u63d0\u4ea4\u5230\u9898\u76ee\u4e0a\u3002\n\n\u4e0b\u9762\u662f\u5b98\u65b9\u9898\u89e3\u4e2d\u7684\u4ee3\u7801\uff08\u53ea\u80fd\u901a\u8fc7\u9898\u76ee\u4e2d\u8fd9 $10$ \u4e2a\u6d4b\u8bd5\u70b9\uff0c\u8c01\u77e5\u9053\u54ea\u4e2a\u6570\u636e\u53c8\u80fd\u628a\u5b83 hack \u4e86\u5462\uff09\uff1a\n\n```cpp\n// CEOI 2013 - Task: Watering - Solution\n// Author: Adrian Satja Kurdija\n\n// Warning! The solution may not solve all possible inputs (this is an output-only task).\n// Read the algorithm description at http://ceoi2013.hsin.hr\n\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\n\nchar a[605][605];\nchar b[10][10];\nint R, S;\n\ninline char c(int i, int j) {\n    return 'b' + i * 5 + j;\n}\n\nchar ccc = 'z';\ninline char cc(int i, int j) {\n    ccc = (ccc == 'z'? 'y' : 'z');\n    return ccc;\n}\n\nbool solve() {\n    for (int i = 0; i < 5; ++i)\n        for (int j = 0; j < 5; ++j)\n            if (b[i][j] == '.') {\n                b[i][j] = c(i,j);\n                if (j+2 < 5 && b[i][j+1] == '.' && b[i][j+2] == '.') {\n                    b[i][j+1] = b[i][j+2] = c(i,j);\n                    if (solve()) return true;\n                    b[i][j+1] = b[i][j+2] = '.';\n                }\n                if (i+2 < 5 && b[i+1][j] == '.' && b[i+2][j] == '.') {\n                    b[i+1][j] = b[i+2][j] = c(i,j);\n                    if (solve()) return true;\n                    b[i+1][j] = b[i+2][j] = '.';\n                }\n                if (i+1 < 5 && j+1 < 5 && b[i+1][j] == '.' && b[i][j+1] == '.') {\n                    b[i+1][j] = b[i][j+1] = c(i,j);\n                    if (solve()) return true;\n                    b[i+1][j] = b[i][j+1] = '.';\n                }\n                if (i+1 < 5 && j+1 < 5 && b[i][j+1] == '.' && b[i+1][j+1] == '.') {\n                    b[i][j+1] = b[i+1][j+1] = c(i,j);\n                    if (solve()) return true;\n                    b[i][j+1] = b[i+1][j+1] = '.';\n                }\n                if (i+1 < 5 && j+1 < 5 && b[i+1][j] == '.' && b[i+1][j+1] == '.') {\n                    b[i+1][j] = b[i+1][j+1] = c(i,j);\n                    if (solve()) return true;\n                    b[i+1][j] = b[i+1][j+1] = '.';\n                }\n                if (i+1 < 5 && j-1 >= 0 && b[i+1][j] == '.' && b[i+1][j-1] == '.') {\n                    b[i+1][j] = b[i+1][j-1] = c(i,j);\n                    if (solve()) return true;\n                    b[i+1][j] = b[i+1][j-1] = '.';\n                }\n                b[i][j] = '.';\n                return false;\n            }\n    return true;\n}\n\nchar ograda = '#';\ninline char& p(int r, int s, int x, int y) {\n  if (x < 0 || x >= 5 || y < 0 || y >= 5)\n    return ograda;\n  return a[r * 5 + x][s * 5 + y];\n}\n\ninline char h(int x, int y) {\n  if (a[x][y] != a[x+1][y] || a[x][y] == '.')\n    return '-';\n  return '_';\n}\ninline char v(int x, int y) {\n  if (a[x][y] != a[x][y+1] || a[x][y] == '.')\n    return '|';\n  return '_';\n}\n\ninline void ispis() {\n  for (int x = 0; x < R * 5; ++x) {\n    for (int y = 0; y < S * 5; ++y) {\n      printf(\"%c\", a[x][y]);\n      if (y % 5 == 4 && y + 1 != S * 5)\n        printf(\"%c\", v(x, y));\n    }\n    printf(\"\\n\");\n    if (x % 5 != 4 || x == R * 5 - 1)\n      continue;\n    for (int y = 0; y < S * 5; ++y) {\n      printf(\"%c\", h(x, y));\n      if (y % 5 == 4 && y + 1 != S * 5)\n        printf(\"+\");\n    }\n    printf(\"\\n\");\n  }\n}\n\nint main () {\n  scanf(\"%d%d\", &R, &S);\n  for (int x = 0; x < R * 5; ++x)\n    for (int y = 0; y < S * 5; ++y)\n      a[x][y] = '.';\n\n  char buff[S * 6];\n  int x = 0, cff = 0102;\n  while (x < 5 * R) {\n    scanf(\"%s\", buff);\n    if (buff[0] == '-') continue;\n    int s = strlen(buff);\n    int y = 0;\n    for (int j = 0; j < s; ++j) {\n      if (buff[j] == '|') continue;\n      if (buff[j] == '#')\n        a[x][y] = '#';\n      y++;\n    }\n    x++;\n  }\n\n  vector<pair<int,int> > polja;\n  for (int r = 0; r < R; ++r)\n    if (r % 2 == 0)\n      for (int s = 0; s < S; ++s)\n        polja.push_back(make_pair(r, s));\n    else\n      for (int s = S - 1; s >= 0; --s)\n        polja.push_back(make_pair(r, s));\n\n  for (int i = 0; i < (int)polja.size() - 1; ++i) {\n    // Treba li staviti triominu izmedju polja?\n    int praznih = 0;\n    for (int x = 0; x < 5; ++x)\n      for (int y = 0; y < 5; ++y)\n        praznih += (p(polja[i].first, polja[i].second, x, y) == '.');\n//    printf(\"(%d %d) %d\\n\", polja[i].first, polja[i].second, praznih);\n    if (praznih % 3 == 0) continue;\n\n    // Stavi triominu tako da (praznih - viri) % 3 == 0.\n    // Nadji dva susjedna polja:\n    for (int x = 0; x < 5; ++x)\n      for (int y = 0; y < 5; ++y)\n        for (int xx = 0; xx < 5; ++xx)\n          for (int yy = 0; yy < 5; ++yy)\n            if (abs(polja[i].first * 5 + x - polja[i + 1].first * 5 - xx)\n                + abs(polja[i].second * 5 + y - polja[i + 1].second * 5 - yy)\n                == 1 &&\n                p(polja[i].first, polja[i].second, x, y) == '.' &&\n                p(polja[i + 1].first, polja[i + 1].second, xx, yy) == '.') {\n              int praznih_save = praznih;\n              int j = i;\n              int X = x, Y = y;\n              praznih -= 2;\n              if (praznih % 3 != 0) {\n                j = i + 1;\n                X = xx; Y = yy;\n                ++praznih;\n              }\n              for (int nx = 0; nx < 5; ++nx)\n                for (int ny = 0; ny < 5; ++ny)\n                  if (abs(polja[j].first * 5 + X - polja[j].first * 5 - nx)\n                      + abs(polja[j].second * 5 + Y - polja[j].second * 5 - ny)\n                      == 1 &&\n                      p(polja[j].first, polja[j].second, nx, ny) == '.') {\n                    p(polja[i].first, polja[i].second, x, y) =\n                    p(polja[i + 1].first, polja[i + 1].second, xx, yy) =\n                    p(polja[j].first, polja[j].second, nx, ny) = cc(x, y);\n              \n              bool ok = true;\n              for (int r = 0; r < 5 && ok; ++r)\n                for (int s = 0; s < 5; ++s)\n                  if (p(polja[i].first, polja[i].second, r, s) == '.' &&\n                      p(polja[i].first, polja[i].second, r-1, s) != '.' &&\n                      p(polja[i].first, polja[i].second, r+1, s) != '.' &&\n                      p(polja[i].first, polja[i].second, r, s-1) != '.' &&\n                      p(polja[i].first, polja[i].second, r, s+1) != '.' ||\n                      p(polja[i + 1].first, polja[i + 1].second, r, s) == '.' &&\n                      p(polja[i + 1].first, polja[i + 1].second, r-1, s) != '.' &&\n                      p(polja[i + 1].first, polja[i + 1].second, r+1, s) != '.' &&\n                      p(polja[i + 1].first, polja[i + 1].second, r, s-1) != '.' &&\n                      p(polja[i + 1].first, polja[i + 1].second, r, s+1) != '.') {\n                    ok = false;\n                    break;\n                  }\n              if (ok) goto line;\n              p(polja[i].first, polja[i].second, x, y) =\n              p(polja[i + 1].first, polja[i + 1].second, xx, yy) =\n              p(polja[j].first, polja[j].second, nx, ny) = '.';\n              praznih = praznih_save;\n              cc(x, y);\n                  }\n            }\n    line: ;\n  }\n\n  for (int r = 0; r < R; ++r)\n    for (int s = 0; s < S; ++s) {\n      for (int x = 0; x < 5; ++x)\n        for (int y = 0; y < 5; ++y)\n          b[x][y] = p(r, s, x, y);\n      if (!solve())\n        printf(\"Shouldn't happen! %d %d\\n\\n\", r, s);\n      for (int x = 0; x < 5; ++x)\n        for (int y = 0; y < 5; ++y)\n          p(r, s, x, y) = b[x][y];\n    }\n  ispis();\n\n  return 0;\n}\n```\n\n~~\u7f16\u5199\u8fd9\u4efd\u4ee3\u7801\u7684\u770b\u8d77\u6765\u6709\u70b9\u66b4\u8e81\uff0c\u4ed6\u5728\u201c\u65e0\u89e3\u201d\u7684\u65f6\u5019\u8f93\u51fa\u4e86\u4e00\u4e2a `Shouldn't happen!` \u6765\u8868\u793a\u81ea\u5df1\u5fc3\u4e2d\u7684\u6124\u6168\u3002~~\n\n[\u8fd9\u91cc](https://www.luogu.com.cn/problem/U288988)\u7684\u9644\u4ef6\u8fd8\u53ef\u4ee5\u4e0b\u8f7d\u63d0\u4ea4\u7b54\u6848\u7684\u6587\u4ef6\u3002",
        "postTime": 1682613380,
        "uid": 542457,
        "name": "cff_0102",
        "ccfLevel": 4,
        "title": "P9273 [CEOI2013] Watering \u9898\u89e3"
    }
]