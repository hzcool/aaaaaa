[
    {
        "content": "\u770b\u5230\u70b9\u5bf9\uff0c\u4ec0\u4e48\u601d\u8def\uff1f\u8f6c\u5316\u4e3a\u5e73\u9762\u95ee\u9898\u3002\n\n\u663e\u7136\u70b9\u5bf9\u8fde\u901a\u6027\u53ef\u4ee5\u8f6c\u5316\u5230\u5e73\u9762\u4e0a\u3002\n\n\u8bbe\u70b9\u5bf9$(x,y)$\u5728\u5e73\u9762\u4e0a\u8868\u793a\u4e3a\u5750\u6807$(x,y)$\u3002\n\n\u5c31\u662f\u628a\u70b9\u5bf9\u6620\u5c04\u5230\u5750\u6807\u4e0a\u3002 \n\n\u6211\u4eec\u7528 set \u6765\u7ef4\u62a4\u4eae\u706f\u7684\u8fde\u7eed\u6bb5\u3002\n\n\u8bbe\u5f53\u524d\u65f6\u95f4\u4e3a$t$\uff0c\u603b\u65f6\u95f4\u4e3a$T$\u3002 \n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9$x$,\u8bbe$x$\u53ef\u4ee5\u5230\u8fbe\u6700\u5de6\u8fb9\u7684\u4f4d\u7f6e\u4e3a$lb$\uff0c$x+1$\u53ef\u5230\u8fbe\u6700\u53f3\u8fb9\u7684\u4f4d\u7f6e\u4e3a$rb$\u3002 \n\n### \u4fee\u6539\n\n\u5982\u679c$[x,x+1]$\u4e4b\u95f4\u7684\u8def\u706f\u5f00\u4e86\uff0c\u90a3\u4e48\u663e\u7136$[lb,x]$\u5185\u7684\u70b9\u4e0e$[x+1,rb]$\u5185\u7684\u70b9\u5c31\u53ef\u4ee5\u8fde\u901a\u4e86\uff01\n\n$[lb,x],[x+1,rb]$\u8fde\u901a\uff0c\u6211\u4eec\u8f6c\u5316\u4e3a\u77e9\u5f62\u52a0$T-t$\uff0c\u8868\u793a\u8fd9\u4e2a\u77e9\u5f62\u5728$t$\u65f6\u523b\u4eae\u4e86\u3002 \n\n\u8fd9\u4e2a\u77e9\u5f62\u5de6\u4e0b\u7aef\u70b9\u4e3a$[lb,x+1]$\uff0c\u53f3\u4e0a\u7aef\u70b9\u4e3a$[x,rb]$\u3002\n\n\u5982\u679c$[x,x+1]$\u4e4b\u95f4\u7684\u8def\u706f\u65ad\u4e86\uff0c$[lb,x]$\u4e0e$[x+1,rb]$\u4e0d\u518d\u8fde\u901a\uff0c\u6211\u4eec\u8f6c\u5316\u4e3a\u77e9\u5f62\u51cf$T-t$\u3002\n\n\u8868\u793a\u8fd9\u4e2a\u77e9\u5f62\u5728$t$\u65f6\u523b\u53c8\u6697\u4e86\u3002 \n\n### \u67e5\u8be2\n\n\u53d1\u73b0\u8be2\u95ee\u5c31\u662f\u77e9\u5f62\u5355\u70b9\u67e5\u8be2\u3002\n\n\u5047\u8bbe\u8fd9\u4e2a\u4f4d\u7f6e\u5728$t_1$\u65f6\u8fde\u901a\uff0c$t_2$\u65f6\u65ad\u5f00\uff0c\n\n\u6839\u636e\u521a\u624d\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u70b9\u5bf9\u8fde\u901a\u7684\u65f6\u95f4\u4e3a$T-t_1-(T-t_2)=t_2-t_1$\n\n\u6b63\u597d\u76f8\u7b49\uff01\n\n#### \u6ce8\u610f\uff1a\u5982\u679c\u67e5\u8be2\u7684\u4e24\u70b9\u4f9d\u7136\u8fde\u901a\uff0c\u7b54\u6848\u8fd8\u9700\u8981\u51cf\u53bb$(T-t)$\n\n\u6211\u4eec\u6210\u529f\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u666e\u901a\u7684**\u77e9\u5f62\u52a0\uff0c\u5355\u70b9\u67e5**\u95ee\u9898\u3002\n\n\u8fd9\u5c31\u662f\u666e\u666e\u901a\u901a\u7684\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u3002\n\n\u7531\u4e8e\u6709\u65f6\u95f4\u8f74\uff0c\u6240\u4ee5\u7b49\u4ef7\u4e8e\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\u3002 \n\n\u6240\u4ee5\u5c31\u6709\u4e24\u79cd\u89e3\u6cd5\uff1a\n\n### \u7b97\u6cd5$1$\uff1aCDQ\u5206\u6cbb+\u626b\u63cf\u7ebf\u3002\n\n\u5f88\u663e\u7136\u8fd9\u4e2a\u53ef\u4ee5\u7528 CDQ \u5206\u6cbb\u7ef4\u62a4\u3002\n\n\u77e9\u5f62\u52a0\u4e0d\u597d\u5904\u7406\uff0c\u5148\u7528\u626b\u63cf\u7ebf\u628a\u77e9\u5f62\u5dee\u5206\u6210$4$\u4e2a\u64cd\u4f5c\uff08\u548c$\\texttt{[HNOI2015]\u63a5\u6c34\u679c}$ \u5f88\u50cf\uff09\u3002 \n\n\u7b2c\u4e00\u7ef4\u65f6\u95f4\u6392\u5e8f\u6389\uff0c\u7b2c\u4e8c\u7ef4$x$\u5750\u6807 CDQ \uff0c\u7b2c\u4e09\u7ef4$y$\u5750\u6807\u7528\u5dee\u5206+\u6811\u72b6\u6570\u7ec4\u3002\n\n### \u7b97\u6cd5$2$\uff1a\u6811\u5957\u6811+\u626b\u63cf\u7ebf\u3002 \n\n\u7528\u6811\u5957\u6811\u53ef\u4ee5\u652f\u6301\u5728\u7ebf\u3002\n\n\u5148\u628a\u77e9\u5f62\u52a0\u7528\u626b\u63cf\u7ebf\u5dee\u5206\u6210$4$\u4e2a\u64cd\u4f5c\u3002 \n\n\u7136\u540e\u5c31\u662f\u666e\u666e\u901a\u901a\u7684\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u4e86\u3002\n\n\u8fd9\u4e2a\u4e0d\u5c31\u662f\u6811\u5957\u6811\u53ef\u4ee5\u7ef4\u62a4\u7684\u4e1c\u897f\u5417\uff1f\n\n\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4$x$\u5750\u6807\uff0c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4$y$\u5750\u6807\u5373\u53ef\u3002\n\n### \u603b\u7ed3\n\n\u4e24\u4e2a\u7b97\u6cd5\u590d\u6742\u5ea6\u90fd\u662f$O(n\\log_2^2n)$\u7684\u3002\n\n\u800c\u4e14\u6709\u6811\u72b6\u6570\u7ec4\u5728\uff0c\u5e38\u6570\u5de8\u5c0f\u3002\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u600e\u4e48\u5f00\u5fc3\u600e\u4e48\u5199\u5427\u3002\u6211\u5199\u4e86\u7b97\u6cd5$2$\uff08\u56e0\u4e3a\u6211CDQ\u8001\u5199\u9519\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ljc 998244353\nusing namespace std;\n#define gc getchar\ninline ll read(){\n    register ll x=0,f=1;char ch=gc();\n    while (!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=gc();}\n    return (f==1)?x:-x;\n}\nint n,N,T,root[600001],cnt;\nstruct node{\n\tint l,r,sum;\n}seg[15020001];\n#define mid ((lb+rb)>>1)\nvoid Update(int &rt,int lb,int rb,int pos,int w){\n\tif (!rt) rt=++cnt;seg[rt].sum+=w;\n\tif (lb==rb) return;\n\t(mid>=pos?Update(seg[rt].l,lb,mid,pos,w):Update(seg[rt].r,mid+1,rb,pos,w));\n}\nint Query(int rt,int lb,int rb,int l,int r){\n\tif (!rt||lb>r||rb<l) return 0;\n\tif (lb>=l&&rb<=r) return seg[rt].sum;\n\treturn Query(seg[rt].l,lb,mid,l,r)+Query(seg[rt].r,mid+1,rb,l,r);\n}\ninline void update(int pos,int r,int w){\n\tfor (;pos<=n+1;pos+=pos&-pos) Update(root[pos],1,n+1,r,w);\n}\ninline int query(int posx,int posy){\n\tint ans=0;\n\tfor (;posx;posx-=posx&-posx) ans+=Query(root[posx],1,n+1,1,posy);\n\treturn ans;\n}\ninline void Add(int x1,int y1,int x2,int y2,int W){\n\tupdate(x1,y1,W);update(x1,y2+1,-W);\n\tupdate(x2+1,y1,-W);update(x2+1,y2+1,W);\n}\nstruct road{\n\tint l,r;\n};\ninline bool operator < (road a,road b){\n\treturn a.r<b.r;\n} \nset<road> S;\nset<road>::iterator it;\nbool zt[2000001];\nsigned main(){\n\tn=1+read(),T=read();N=n-1;\n\tfor (int i=1;i<=n;i++){\n\t\tS.insert((road){i,i});\n\t}\n\tfor (int i=1;i<=N;i++){\n\t\tchar ch=gc();\n\t\twhile (!isdigit(ch)) ch=gc();\n\t\tzt[i]=(ch-48);\n\t\tif (zt[i]){\n\t\t\tit=S.lower_bound((road){0,i+1});it--;\n\t\t\tint lb=(*it).l;\n\t\t\tS.erase(it);S.erase((road){i+1,i+1});\n\t\t\tS.insert((road){lb,i+1});\n\t\t}\n\t}\n\tfor (it=S.begin();it!=S.end();++it){\n\t\tAdd((*it).l,(*it).l,(*it).r,(*it).r,T);\n\t}\n\tfor (int t=1;t<=T;t++){\n\t\tchar s[11];scanf(\"%s\",s+1);\n\t\tif (s[1]=='q'){\n\t\t\tint x=read(),y=read();\n\t\t\tint ans=query(x,y);\n\t\t\tint X=(*(S.lower_bound((road){0,x}))).l;\n\t\t\tint Y=(*(S.lower_bound((road){0,y}))).l;\n\t\t\tprintf(\"%d\\n\",ans-(T-t)*(X==Y));\n\t\t}else if (s[1]=='t'){\n\t\t\tint x=read();\n\t\t\tif (zt[x]==1){\n\t\t\t\tit=S.lower_bound((road){0,x});\n\t\t\t\tint lb1=(*it).l,rb1=x;\n\t\t\t\tint lb2=x+1,rb2=(*it).r;\n\t\t\t\tAdd(lb1,lb2,rb1,rb2,t-T);\n\t\t\t\tS.erase((road){lb1,rb2});\n\t\t\t\tS.insert((road){lb1,rb1});S.insert((road){lb2,rb2}); \n\t\t\t\tzt[x]^=1;\n\t\t\t}else{\n\t\t\t\tit=S.lower_bound((road){0,x});\n\t\t\t\tint lb1=(*it).l,rb1=x;\n\t\t\t\tit++;\n\t\t\t\tint lb2=x+1,rb2=(*it).r;\n\t\t\t\tAdd(lb1,lb2,rb1,rb2,T-t);\n\t\t\t\tS.erase((road){lb1,rb1});S.erase((road){lb2,rb2});\n\t\t\t\tS.insert((road){lb1,rb2}); \n\t\t\t\tzt[x]^=1;\n\t\t\t}\n\t\t}\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1562476209,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5445 \u3010[APIO2019]\u8def\u706f\u3011"
    },
    {
        "content": " P5445 APIO2019 \u8def\u706f\n\n\u4e00\u9053\u6e05\u65b0\u7684\u6570\u636e\u7ed3\u6784\u9898...\n\n\u5c06\u8fde\u7eed\u4e00\u6bb5\u4eae\u7740\u7684\u706f\u6240\u8fde\u63a5\u7684\u7ad9\u70b9\u79f0\u4e3a\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u8003\u8651\u70b9\u4eae/\u7184\u706d\u4e00\u76cf\u706f\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u82e5\u70b9\u4eae\u4e86\u4e00\u76cf\u706f\uff0c\u76f8\u5f53\u4e8e\u6c9f\u901a\u4e86\u5de6\u53f3\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u56e0\u6b64\u6211\u4eec\u627e\u51fa\u5de6\u53f3\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u5c06\u5b83\u4eec\u6807\u8bb0\u4e3a\u8fde\u901a\u5373\u53ef\u3002\n\n\u82e5\u7184\u706d\u4e86\u4e00\u76cf\u706f\uff0c\u76f8\u5f53\u4e8e\u5c06\u4e00\u4e2a\u8fde\u901a\u5757\u62c6\u6210\u4e24\u4e2a\uff0c\u5c06\u4e24\u8fb9\u4e4b\u95f4\u7684\u8054\u7cfb\u6807\u8bb0\u6210\u4e2d\u65ad\u5373\u53ef\u3002\n\n\u8003\u8651\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u9996\u5148\u662f\u627e\u5230\u4e00\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e24\u68f5\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff08\u53e6\u4e00\u7bc7\u9898\u89e3\u8c8c\u4f3c\u76f4\u63a5set\u4e86\uff09\uff0c\u70b9\u4eae\u7684\u64cd\u4f5c\u76f8\u5f53\u4e8e\u662f\u533a\u95f4\u8d4b\u503c\uff08\u53f3\u90e8\u8fde\u901a\u5757\u4e2d\u70b9\u7684\u5de6\u7aef\u70b9\u4fee\u6539\u6210\u5de6\u8fde\u901a\u5757\u4e2d\u70b9\u7684\u5de6\u7aef\u70b9\uff0c\u5de6\u8fde\u901a\u5757\u4e2d\u70b9\u7684\u53f3\u7aef\u70b9\u4fee\u6539\u6210\u53f3\u8fde\u901a\u5757\u4e2d\u70b9\u7684\u53f3\u7aef\u70b9\uff09\uff0c\u7184\u706d\u540c\u7406\uff08\u5de6\u8fde\u901a\u5757\u4e2d\u70b9\u7684\u53f3\u7aef\u70b9\u4fee\u6539\u6210\u8fd9\u4e2a\u8def\u706f\u5de6\u4fa7\u7684\u7ad9\u70b9\uff0c\u53f3\u8fde\u901a\u5757\u4e2d\u70b9\u7684\u5de6\u7aef\u70b9\u4fee\u6539\u6210\u8fd9\u4e2a\u8def\u706f\u53f3\u4fa7\u7684\u7ad9\u70b9\uff09\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u6784\u9020\u4e00\u4e2a$(n+1)\\times (n+1)$\u7684\u77e9\u9635$M$\uff0c$M_{ij}$\u8868\u793a$i$\u4e0e$j$\u7ad9\u70b9\u7684\u8fde\u901a\u6027\uff0c\u6211\u4eec\u91c7\u7528\u4ee3\u4ef7\u63d0\u524d\u8ba1\u7b97\u7684\u65b9\u6cd5\uff0c\u8003\u8651\u70b9\u4eae\u7684\u64cd\u4f5c\uff0c\u82e5\u64cd\u4f5c\u5728$t$\u65f6\u523b\u8fdb\u884c\uff0c\u5de6\u53f3\u8fde\u901a\u5757\u533a\u95f4\u5206\u522b\u4e3a$[l,x],[x+1,r]$\uff0c\u90a3\u4e48\u5c06\u77e9\u9635\u4e2d\u5de6\u4e0a\u89d2\u4e3a$(l,x+1)$\uff0c\u53f3\u4e0b\u89d2\u4e3a$(x,r)$\u7684\u5b50\u77e9\u9635\u4e2d\u6240\u6709\u5143\u7d20\u7684\u503c\u589e\u52a0$q-t$\uff0c\u8868\u793a\u63a5\u4e0b\u6765\u7684\u6240\u6709\u65f6\u523b\uff0c\u5b83\u4eec\u90fd\u5c06\u8fde\u901a\u3002\n\n\u540c\u7406\uff0c\u5982\u679c\u8981\u7184\u706d\u4e00\u76cf\u706f\uff0c\u5c06\u90a3\u4e2a\u5b50\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20\u51cf\u5c11$q-t$\u5373\u53ef\uff0c\u8868\u793a\u63a5\u4e0b\u6765\u7684\u6240\u6709\u65f6\u523b\uff0c\u5b83\u4eec\u90fd\u4e0d\u8fde\u901a\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\uff0c$t$\u65f6\u523b\u8be2\u95ee\u65f6\u5982\u679c$x,y$\u4f9d\u7136\u8fde\u901a\uff0c\u7531\u4e8e\u6211\u4eec\u91c7\u7528\u4ee3\u4ef7\u63d0\u524d\u8ba1\u7b97\uff0c\u6240\u4ee5\u9700\u8981\u51cf\u6389\u5f53\u524d\u65f6\u523b\u4e4b\u540e\u7684\u4ee3\u4ef7\uff0c\u5373$q-t$\u3002\u82e5$x,y$\u73b0\u5728\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u4ee3\u4ef7\u5df2\u7ecf\u5728\u66fe\u7ecf\u7684\u67d0\u4e2a\u65f6\u5019\u51cf\u6389\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u5904\u7406\u3002\n\n\u4e8e\u662f\u73b0\u5728\u6211\u4eec\u8981\u89e3\u51b3\u5b50\u77e9\u9635\u52a0\uff0c\u5355\u70b9\u6c42\u503c\u3002\n\n\u4ec0\u4e48\uff1fCDQ\uff1f\u5982\u679c\u5728\u7ebf\u5462\uff1f\n\n\u901a\u8fc7\u5dee\u5206\u5c06\u5b50\u77e9\u9635\u52a0\u8f6c\u5316\u6210\u56db\u4e2a\u70b9\u7684\u52a0\u51cf\uff0c\u5355\u70b9\u6c42\u503c\u8f6c\u5316\u6210\u524d\u7f00\u77e9\u9635\u6c42\u548c\u3002\u7136\u540e\u5c31\u662f\u5e38\u89c4\u7684\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u95ee\u9898\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=400010;\nint tot,cnt,n,q,x,y,ans,rt[MAXN],val[MAXN<<5],ch[MAXN<<5][2],lp[2][4*MAXN];    //rt,val,ch\u4e3aBIT\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u7528\uff0clp\u4e3a\u7ef4\u62a4\u8fde\u901a\u5757\u5de6\u53f3\u7aef\u70b9\u7528\nchar s[MAXN];\nvoid upd (int p) {\n\tval[p]=val[ch[p][0]]+val[ch[p][1]];\n\treturn;\n}\nvoid modify_t (int &rt,int l,int r,int pos,int v) {\n\tif (!rt) {rt=++tot;}\n\tif (l==r) {val[rt]+=v;return;}\n\tint mid=(l+r)>>1;\n\tif (pos<=mid) {modify_t(ch[rt][0],l,mid,pos,v);}\n\telse {modify_t(ch[rt][1],mid+1,r,pos,v);}\n\tupd(rt);\n\treturn;\n}\nint query_t (int rt,int l,int r,int xl,int xr) {\n\tif (xr<l||r<xl) {return 0;}\n\tif (xl<=l&&r<=xr) {return val[rt];}\n\tint mid=(l+r)>>1;\n\treturn query_t(ch[rt][0],l,mid,xl,xr)+query_t(ch[rt][1],mid+1,r,xl,xr);\n}\nvoid modify (int x,int y,int v) {\n\tif (y>n+1) {return;}\n\tfor (int i=x;i<=n+1;i+=(i&(-i))) {modify_t(rt[i],1,n+1,y,v);}\n\treturn;\n}    //\u5dee\u5206\u540e\u7684\u5355\u70b9\u4fee\u6539\nint query (int x,int y) {\n\tint res=0;\n\tfor (int i=x;i;i-=(i&(-i))) {res+=query_t(rt[i],1,n+1,1,y);}\n\treturn res;\n}    //\u524d\u7f00\u77e9\u9635\u548c\nvoid pd (int p) {\n\tif (lp[0][p]) {\n\t\tlp[0][p*2]=lp[0][p*2+1]=lp[0][p];\n\t\tlp[0][p]=0;\n\t}\n\tif (lp[1][p]) {\n\t\tlp[1][p*2]=lp[1][p*2+1]=lp[1][p];\n\t\tlp[1][p]=0;\n\t}\n\treturn;\n}    //\u533a\u95f4\u8986\u76d6\u7684\u6807\u8bb0\u4e0b\u4f20\nvoid buildt (int p,int l,int r) {\n\tif (l==r) {lp[0][p]=lp[1][p]=l;return;}\n\tint mid=(l+r)>>1;\n\tbuildt(p*2,l,mid),buildt(p*2+1,mid+1,r);\n\treturn;\n}\nvoid modify2 (int k,int p,int l,int r,int xl,int xr,int v) {\n\tif (xr<l||r<xl) {return;}\n\tif (xl<=l&&r<=xr) {lp[k][p]=v;return;}\n\tpd(p);\n\tint mid=(l+r)>>1;\n\tmodify2(k,p*2,l,mid,xl,xr,v),modify2(k,p*2+1,mid+1,r,xl,xr,v);\n}    //\u533a\u95f4\u8986\u76d6\nint query2 (int k,int p,int l,int r,int pos) {\n\tif (l==r) {return lp[k][p];}\n\tpd(p);\n\tint mid=(l+r)>>1;\n\tif (pos<=mid) {return query2(k,p*2,l,mid,pos);}\n\telse {return query2(k,p*2+1,mid+1,r,pos);} \n}    //\u5355\u70b9\u67e5\u8be2\nbool chk (int x,int y) {\n\treturn (query2(0,1,1,n+1,x)==query2(0,1,1,n+1,y));\n}    //\u5224\u65ad\u4e24\u70b9\u662f\u5426\u8fde\u901a\uff0c\u53ea\u8981\u770b\u6240\u5728\u8fde\u901a\u5757\u5de6\u7aef\u70b9\u662f\u5426\u76f8\u7b49\nvoid con (int x,int v) {\n\tint l=query2(0,1,1,n+1,x),r=query2(1,1,1,n+1,x+1);\n\tmodify2(1,1,1,n+1,l,x,r),modify2(0,1,1,n+1,x+1,r,l);\n\tmodify(l,x+1,q-v),modify(l,r+1,v-q),modify(x+1,x+1,v-q),modify(x+1,r+1,q-v);\n\treturn;\n}\nvoid del (int x,int v) {\n\tint l=query2(0,1,1,n+1,x),r=query2(1,1,1,n+1,x+1);\n\tmodify2(1,1,1,n+1,l,x,x),modify2(0,1,1,n+1,x+1,r,x+1);\n\tmodify(l,x+1,v-q),modify(l,r+1,q-v),modify(x+1,x+1,q-v),modify(x+1,r+1,v-q);\n\treturn;\n}\nint main () {\n\tscanf(\"%d%d%s\",&n,&q,s+1);\n\tbuildt(1,1,n+1); \n\tfor (int i=1;i<=n;i++) {\n\t\tif (s[i]=='1') {con(i,0);}\n\t}\n\tfor (int i=1;i<=q;i++) {\n\t\tscanf(\"%s%d\",s+1,&x);\n\t\tif (s[1]=='q') {\n\t\t\tscanf(\"%d\",&y);\n\t\t\tans=query(x,y);\n\t\t\tif (chk(x,y)) {ans-=q-i;}\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t} else {\n\t\t\tif (chk(x,x+1)) {del(x,i);}\n\t\t\telse {con(x,i);}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1566811067,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5445 \u3010[APIO2019]\u8def\u706f\u3011"
    },
    {
        "content": "$$\\href{http://blog.chhokmah.cn/index.php/archives/82/}{\\Large\\texttt{My blog}}$$\n\n----\n\n## \u601d\u8def\u8981\u70b9\n\u6211\u4eec\u79f0\u80fd\u591f\u76f8\u4e92\u5230\u8fbe\u7684\u5b50\u6bb5\u4e3a\u5173\u952e\u6bb5\u3002\n\n\u7ef4\u62a4\u5173\u952e\u6bb5\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u5148\u8003\u8651\u65ad\u5f00\u67d0\u4e00\u4e2a\u5173\u952e\u6bb5 $[l,r]$ \u7684\u67d0\u4e00\u6761\u8fb9 $k$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u64cd\u4f5c\u53ea\u5bf9 $[l,k]$ \u5230 $[k+1,r]$ \u5185\u7684\u7b54\u6848\u6709\u8d21\u732e\u3002\u540c\u7406\u52a0\u5165\u8fd9\u6761\u8fb9\u4e5f\u53ea\u5bf9\u8fd9\u4e24\u4e2a\u5173\u952e\u6bb5\u6709\u8d21\u732e\u3002\n\n\u8003\u8651\u5c06\u8fd9\u4e2a\u8d21\u732e\u5dee\u5206\uff0c\u5c31\u5f97\u5230\u4e86\uff1a\n- \u82e5\u63d2\u5165\uff0c\u5728\u7b2c $i$ \u4e2a\u65f6\u523b\uff0c$[l,k]$ \u5230 $[k+1,r]$ \u5185\u7684\u7b54\u6848 $-i$\n- \u82e5\u5220\u9664\uff0c\u5728\u7b2c $i$ \u4e2a\u65f6\u523b\uff0c$[l,k]$ \u5230 $[k+1,r]$ \u5185\u7684\u7b54\u6848 $+i$\n\n\u4e00\u4e2a\u7279\u5224\uff0c\u5982\u679c\u6bcf\u4e2a\u8be2\u95ee\u7684\u6700\u540e\u65f6\u523b $t$\uff0c\u82e5\u8fd9\u4e24\u4e2a\u70b9\u662f\u8054\u901a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981 $+t$\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u5173\u952e\u6bb5\u62bd\u8c61\u6210\u4e8c\u7ef4\u5750\u6807\u7cfb\u5185\u7684 $x$ \u8f74\u548c $y$ \u8f74\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u5728 $(l,k+1,k,r)$ \u5185\u7684\u77e9\u5f62\u8fdb\u884c\u5e26\u6743\u4fee\u6539\u3002\n\n\u56e0\u6b64\u8003\u8651\u79bb\u7ebf\u5206\u6cbb\u8ba1\u7b97\u7b54\u6848\uff0c\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta (nlog^2n)$\n\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N = 3e5 + 5;\n\nchar s[N];\nint n, q, etot;\nint a[N], ans[N];\nbool vis[N];\n\nstruct Node {\n  pair<int, int> bd;\n  bool tag;\n} tr[N << 2];\n\nstruct Op {\n  int t, x1, y1, x2, y2, id, v;\n} op[N];\n\nstruct Event {\n  int x, ys, ye, v;\n\n  bool operator<(const Event& rhs) const {\n    return x < rhs.x;\n  }\n} evt[N << 1];\n\nint fw[N];\n\nvoid pushdown(int x) {\n  if (tr[x].tag) {\n    tr[x << 1].bd = tr[x << 1 | 1].bd = tr[x].bd;\n    tr[x << 1].tag = tr[x << 1 | 1].tag = 1;\n    tr[x].tag = 0;\n  }\n}\n\nvoid build(int x, int l, int r) {\n  if (l == r) {\n    tr[x].bd = make_pair(l, l);\n    return;\n  }\n  int mid = (l + r) >> 1;\n  build(x << 1, l, mid);\n  build(x << 1 | 1, mid + 1, r);\n}\n\nvoid modify(int x, int l, int r, int ql, int qr, pair<int, int> val) {\n  if (ql <= l && r <= qr) {\n    tr[x].bd = val;\n    tr[x].tag = 1;\n    return;\n  }\n  pushdown(x);\n  int mid = (l + r) >> 1;\n  if (ql <= mid)\n    modify(x << 1, l, mid, ql, qr, val);\n  if (qr > mid)\n    modify(x << 1 | 1, mid + 1, r, ql, qr, val);\n}\n\npair<int, int> query(int x, int l, int r, int p) {\n  if (l == r) \n    return tr[x].bd;\n  pushdown(x);\n  int mid = (l + r) >> 1;\n  if (p <= mid) \n    return query(x << 1, l, mid, p);\n  else \n    return query(x << 1 | 1, mid + 1, r, p);\n}\n\nvoid add(int p, int v) {\n  for (int i = p; i <= n + 1; i += i & -i)\n    fw[i] += v; \n}\n\nint query(int p) {\n  int ans = 0; \n  for (int i = p; i >= 1; i -= i & -i)\n    ans += fw[i];\n  return ans;\n}\n\nvoid addEvent(int x, int ys, int ye, int v) {\n  evt[++etot] = (Event){x, ys, ye, v};\n}\n\nvoid solve(int l, int r) {\n  if (l == r)\n    return;\n  int mid = (l + r) >> 1;\n  solve(l, mid), solve(mid + 1, r);\n  etot = 0;\n  for (int i = l; i <= mid; i++)\n    if (op[i].t == 1) {\n      addEvent(op[i].x1, op[i].y1, op[i].y2, op[i].v);\n      addEvent(op[i].x2 + 1, op[i].y1, op[i].y2, -op[i].v);\n    }\n  sort(evt + 1, evt + 1 + etot);\n  sort(op + mid + 1, op + 1 + r, [](Op a, Op b) {\n    return a.x1 < b.x1;\n  });\n  int pt = 1; \n  for (int i = mid + 1; i <= r; i++)\n    if (op[i].t == 2) {\n      while (pt <= etot && evt[pt].x <= op[i].x1) {\n        add(evt[pt].ys, evt[pt].v);\n        add(evt[pt].ye + 1, -evt[pt].v);\n        pt++;\n      }\n      ans[op[i].id] += query(op[i].y1);\n    }\n  for (int i = 1; i < pt; i++) {\n    add(evt[i].ys, -evt[i].v);\n    add(evt[i].ye + 1, evt[i].v);\n  }\n}\n\nint main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"input.in\", \"r\", stdin);\n  freopen(\"output.out\", \"w\", stdout);\n#endif\n  scanf(\"%d %d\", &n, &q);\n  scanf(\"%s\", s);\n  for (int i = 1; i <= n; i++)\n    a[i] = s[i - 1] - '0';\n  build(1, 1, n + 1);\n  for (int i = 1; i <= n; i++) \n    if (a[i] == 1 && !vis[i]) {\n      int it = i;\n      vis[i] = 1; \n      while (a[it]) \n        it++, vis[it] = 1; \n      modify(1, 1, n + 1, i, it, make_pair(i, it));\n    }\n  memset(ans, 0, sizeof ans);\n  memset(vis, 0, sizeof vis);\n  char opt[10];\n  for (int i = 1; i <= q; i++) {\n    scanf(\"%s\", opt);\n    op[i].t = (opt[0] == 'q' ? 2 : 1);\n    op[i].id = i; \n    if (op[i].t == 1) {\n      int k; \n      scanf(\"%d\", &k);\n      if (a[k] == 1) {\n        pair<int, int> p = query(1, 1, n + 1, k);\n        op[i].x1 = p.first, op[i].x2 = k;\n        op[i].y1 = k + 1, op[i].y2 = p.second;\n        op[i].v = i; \n        modify(1, 1, n + 1, p.first, k, make_pair(p.first, k));\n        modify(1, 1, n + 1, k + 1, p.second, make_pair(k + 1, p.second));\n      } else {\n        pair<int, int> p1 = query(1, 1, n + 1, k), p2 = query(1, 1, n + 1, k + 1);\n        op[i].x1 = p1.first, op[i].x2 = k; \n        op[i].y1 = k + 1, op[i].y2 = p2.second;\n        op[i].v = -i;\n        modify(1, 1, n + 1, p1.first, p2.second, make_pair(p1.first, p2.second));\n      }\n      a[k] ^= 1;\n    } else {\n      scanf(\"%d %d\", &op[i].x1, &op[i].y1);\n      pair<int, int> p = query(1, 1, n + 1, op[i].x1);\n      if (p.second >= op[i].y1 && p.first <= op[i].y1) \n        ans[i] += i; \n      vis[i] = 1; \n    }\n  }\n  memset(fw, 0, sizeof fw);\n  solve(1, q);\n  for (int i = 1; i <= q; i++)\n    if (vis[i])\n      printf(\"%d\\n\", ans[i]);\n  return 0;\n}\n```\n\n## \u540e\u8a00\n- \u8fd9\u9053\u9898\u76ee\u5145\u5206\u7684\u8fd0\u7528\u4e86\u6570\u5f62\u7ed3\u5408\u548c\u5dee\u5206\u7684\u601d\u60f3\uff0c\u8fd9\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u5bf9\u6574\u4f53\u7b54\u6848\u7684\u8d21\u732e\u72ec\u7acb\u5904\u7406\u3002\u800c\u4e14\u66f4\u52a0\u5f62\u8c61\u7684\u7406\u89e3\u3002",
        "postTime": 1585873990,
        "uid": 35567,
        "name": "Ayers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5445 \u3010[APIO2019]\u8def\u706f\u3011"
    },
    {
        "content": "[\u8def\u706f](https://www.luogu.com.cn/problem/P5445)\n\n### \u9898\u76ee\u5927\u610f\n\n\u5728 $n+1$ \u4e2a\u7ad9\u70b9\u4e4b\u95f4\u6709 $n$ \u76cf\u8def\u706f\uff0c\u7ed9\u5b9a $0$ \u65f6\u523b\u6240\u6709\u8def\u706f\u7684\u4eae\u706d\u60c5\u51b5\uff0c\u5728\u63a5\u4e0b\u6765\u7684 $q$ \u4e2a\u65f6\u523b\uff0c\u6bcf\u65f6\u523b\u4f1a\u53d1\u751f\u4ee5\u4e0b\u4e24\u79cd\u4e8b\u4ef6\u4e4b\u4e00\uff1a\n\n- \u5207\u6362\u67d0\u4e00\u76cf\u8def\u706f\u7684\u4eae\u706d\u3002\n\n- \u8be2\u95ee\u4e24\u70b9\u4e4b\u95f4\u5b58\u5728\u591a\u5c11\u65f6\u523b\u4f7f\u5f97\u4e24\u70b9\u4e4b\u95f4\u7684\u8def\u706f\u5168\u90e8\u4eae\u8d77\u3002\n\n### \u601d\u8def\u5206\u6790\n\n\u4e00\u9053\u4e0d\u9519\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u9996\u5148\u5206\u6790\u9898\u76ee\uff0c\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u548c\u70b9\u5bf9\u8fde\u901a\u6027\u76f8\u5173\u7684\u95ee\u9898\uff0c\u8981\u67e5\u8be2\u70b9\u5bf9\u4e4b\u95f4\u8fde\u901a\u7684\u65f6\u95f4\u3002\u70b9\u5bf9\u4e0d\u597d\u5904\u7406\uff0c\u8003\u8651\u6269\u5145\u4e00\u7ef4\uff0c\u5c06\u4e00\u7ef4\u7684\u70b9\u5bf9\u53d8\u6210\u4e8c\u7ef4\u7684\u70b9\u3002\n\n\u5177\u4f53\u7684\u8bf4\uff0c\u8bbe\u70b9\u5bf9 $(x,y)$ \u8868\u793a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9 $(x,y)$\uff0c\u5176\u70b9\u6743\u4e3a\u5728\u6ca1\u6709\u540e\u7eed\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u5728\u6240\u6709\u65f6\u523b\u4e2d\u4e24\u70b9\u8fde\u901a\u7684\u65f6\u95f4\u3002\n\n\u90a3\u4e48\u8be2\u95ee\u64cd\u4f5c\u5c31\u53d8\u6210\u4e86\u88f8\u7684\u5355\u70b9\u67e5\u8be2\uff0c\u4e0d\u8fc7\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u67e5\u8be2\u65f6\u8fd9\u4e24\u70b9\u4f9d\u7136\u8fde\u901a\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u5c06\u5f97\u5230\u7684\u7b54\u6848\u51cf\u53bb $q-t$\u3002\uff08$t$ \u4e3a\u8be5\u64cd\u4f5c\u7684\u65f6\u523b\uff09\n\n\u63a5\u7740\u8003\u8651\u4fee\u6539\u64cd\u4f5c\uff0c\u8bbe $l_x,r_x$ \u5206\u522b\u4e3a\u70b9 $x$ \u6240\u5728\u7684\u6781\u957f\u8fde\u901a\u6bb5\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5f53 $x$ \u706d\u65f6\uff0c\u76f8\u5f53\u4e8e\u5c06\u8fde\u901a\u6bb5 $(l_x,r_x)$ \u5206\u88c2\u6210 $(l_x,x)$ \u548c $(x+1,r_x)$\uff0c\u540c\u65f6\u4ee5 $(l_x,x)$ \u4e3a\u5de6\u4e0b\u7aef\u70b9\uff0c$(x+1,r_x)$ \u4e3a\u53f3\u4e0a\u7aef\u70b9\u7684\u77e9\u5f62\u51cf $q-t$\u3002\u8fd9\u4ee3\u8868\u7740\u5982\u679c\u4e0d\u8003\u8651\u63a5\u4e0b\u6765\u7684\u4fee\u6539\uff0c\u90a3\u4e48\u4ece $l_x$ \u5230 $x$ \u4e2d\u7684\u6240\u6709\u70b9\u5728\u63a5\u4e0b\u6765\u7684\u65f6\u95f4\u4e2d\u90fd\u4f1a\u4e0e $x+1$ \u5230 $r_x$ \u4e2d\u7684\u6240\u6709\u70b9\u8fde\u901a\u3002\n\n\u7c7b\u4f3c\u7684\uff0c\u5f53 $x$ \u4eae\u65f6\uff0c\u76f8\u5f53\u4e8e\u5c06\u8fde\u901a\u6bb5 $(l_x,x)$ \u548c $(x+1,r_{x+1})$ \u5408\u5e76\u6210 $(l_x,r_{x+1})$\uff0c\u540c\u65f6\u4ee5 $(l_x,x)$ \u4e3a\u5de6\u4e0b\u7aef\u70b9\uff0c$(x+1,r_{x+1})$ \u4e3a\u53f3\u4e0a\u7aef\u70b9\u7684\u77e9\u5f62\u52a0 $q-t$\u3002\n\n\u90a3\u4e48\u8fd9\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5355\u70b9\u67e5\u533a\u95f4\u52a0\u7684\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u53ef\u4ee5\u5c06\u4e00\u6b21\u77e9\u5f62\u52a0\u5dee\u5206\u6210\u56db\u4e2a\u5355\u70b9\u4fee\u6539\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e00\u822c\u7684\u533a\u95f4\u67e5\u5355\u70b9\u52a0\u7684\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u3002\n\n- \u5982\u4f55\u7ef4\u62a4 $l_x,r_x$\u3002\n\n\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e ODT \u7684\u65b9\u6cd5\uff0c\u7528 `set` \u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u7684\u8bf4\uff0c\u5728 `set` \u4e2d\u50a8\u5b58\u6240\u6709\u7684\u6781\u957f\u8fde\u901a\u6bb5\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u5408\u5e76\u65f6 `lower_bound` \u4e00\u4e0b\uff0c\u7136\u540e\u5220\u9664\u5de6\u53f3\u4e24\u4e2a\uff0c\u518d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u5c31\u53ef\u4ee5\u4e86\uff0c\u5206\u88c2\u7c7b\u4f3c\u3002\n\n### \u4ee3\u7801\n\n\u8fd9\u91cc\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u5b9e\u73b0\u4e8c\u7ef4\u6570\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u4f46\u5e38\u6570\u8f83\u5927\uff0c\u4e0d\u5438\u6c27\u4f1a T \u4e00\u4e2a\u70b9\u3002\uff08`set` \u5e38\u6570\u5927\uff0c\u6811\u5957\u6811\u5e38\u6570\u4e5f\u5927\uff0c\u5408\u5728\u4e00\u8d77\u5c31\u8fd9\u6837\u4e86\uff09\n\n```\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <set>\n\nusing namespace std;\nconst int N=300100;\n\nint n,q,in1,in2;\nint light[N<<2];\nchar ch[N],inp[10];\n\nnamespace DCP_2{//\u666e\u901a\u7684\u4e8c\u7ef4\u6570\u70b9\u6811\u5957\u6811\n    #define mid (l+r>>1)\n    #define lowbit(x) ((x)&(-(x)))\n    int rt[N<<1],tot;\n    struct STn{\n        int l,r,sum;\n    }a[N<<7];\n\n    void change(int &p,int l,int r,int x,int k){\n        if(!p) p=++tot;a[p].sum+=k;\n        if(l==r) return ;\n        if(x<=mid) change(a[p].l,l,mid,x,k);\n        else change(a[p].r,mid+1,r,x,k);\n    }\n    int ask(int p,int l,int r,int x,int y){\n        if(!p||x>y||l>y||r<x) return 0;\n        if(x<=l&&r<=y) return a[p].sum;\n        return ask(a[p].l,l,mid,x,y)+ask(a[p].r,mid+1,r,x,y);\n    }\n    void add(int x,int y,int k){\n        for(;x<=n+1;x+=lowbit(x)) change(rt[x],1,n+1,y,k);\n    }\n    int query(int x,int y){\n        int ans=0;\n        for(;x;x-=lowbit(x)) ans+=ask(rt[x],1,n+1,1,y);\n        return ans;\n    }\n}\n\nnamespace SET{//\u7ef4\u62a4\u6781\u957f\u989c\u8272\u6bb5\n    #define SNI set<Node>::iterator \n    struct Node{\n        int l,r;\n        bool operator < (const Node &b) const{\n            return r<b.r;\n        }\n    };\n    set<Node> s;\n\n    void init(){\n        for(int i=1;i<=n;i++) s.insert(Node{i,i});\n    }\n    void merge(int x1,int x2,int y1,int y2){//\u5c06(x1,x2) \u548c (y1,y2) \u5408\u5e76\u6210 (x1,y2)\n        s.erase(Node{x1,x2});\n        s.erase(Node{y1,y2});\n        s.insert(Node{x1,y2});\n    }\n    void split(int x1,int x2,int y1,int y2){//\u5c06(x1,y2) \u5206\u88c2\u6210 (x1,x2) \u548c (y1,y2)  \n        s.erase(Node{x1,y2});\n        s.insert(Node{x1,x2});\n        s.insert(Node{y1,y2});\n    }\n    bool same(int x,int y){//\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u4e2a\u6781\u957f\u8fde\u901a\u5757\n        return s.lower_bound(Node{0,x})->l==s.lower_bound(Node{0,y})->l;\n    }\n}\n\nusing namespace DCP_2;\nusing namespace SET;\n\nvoid ADD(int x1,int y1,int x2,int y2,int k){//\u5dee\u5206\u6210\u56db\u4e2a\u5355\u70b9\u4fee\u6539\n    add(x1,y1,k);add(x2+1,y2+1,k);\n    add(x1,y2+1,-k);add(x2+1,y1,-k);\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&q);n++;\n    scanf(\"%s\",ch+1);\n    init();\n    for(int i=1;i<=n-1;i++){\n        light[i]=ch[i]-'0';\n        if(light[i]) merge(s.lower_bound(Node{0,i})->l,i,i+1,i+1);\n        //\u5408\u5e76\u521d\u59cb\u5757\n    }\n    for(SNI it=s.begin();it!=s.end();it++)\n        ADD(it->l,it->l,it->r,it->r,q);//\u66f4\u65b0\u521d\u59cb\u65f6\u95f4\n    for(int i=1;i<=q;i++){\n        scanf(\"%s\",inp+1);\n        if(inp[1]=='q'){\n            scanf(\"%d%d\",&in1,&in2);\n            int ans=query(in1,in2);\n            if(same(in1,in2)) ans-=q-i;//\u7279\u5224\n            cout<<ans<<'\\n';\n        }\n        if(inp[1]=='t'){\n            scanf(\"%d\",&in1);\n            SNI it=s.lower_bound(Node{0,in1});\n            int x1=it->l,x2=in1,y1=in1+1;//\u627e\u5230 lx,x,x+1,rx,r(x+1)\n            if(light[in1]){\n                int y2=it->r;\n                ADD(x1,y1,x2,y2,i-q);\n                split(x1,x2,y1,y2);\n            }\n            else{\n                int y2=(++it)->r;\n                ADD(x1,y1,x2,y2,q-i);\n                merge(x1,x2,y1,y2);\n            }\n            light[in1]^=1;//\u66f4\u65b0\u72b6\u6001\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1683782821,
        "uid": 986683,
        "name": "_Ponder_",
        "ccfLevel": 0,
        "title": "P5445 \u8def\u706f \u9898\u89e3"
    },
    {
        "content": "### \u4e00\u3001\u524d\u7f6e\u829d\u58eb\n\n+ [\u5e73\u677f\u7535\u89c6\uff08pb_ds\uff09](https://blog.csdn.net/riba2534/article/details/80454602)\n\n+ [set](http://www.360doc.com/content/17/0526/22/10408243_657567440.shtml)\n\n+ \u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\n\n### \u4e8c\u3001\u9898\u76ee\u89e3\u6790\n\n1. \u5c06\u5df2\u7ecf\u70b9\u4eae\u7684\u8def\u6bb5\u8003\u8651\u6210\u662f\u4e00\u4e2a\u5927\u7684\u8fde\u901a\u5757\uff0c\u5219**\u70b9\u4eae**\u67d0\u6bb5\u8def\u7684\u706f\u5c31\u76f8\u5f53\u4e8e**\u8fde\u901a**\u4e24\u4e2a\u8fde\u901a\u5757\uff0c**\u5173\u4e0a**\u67d0\u6bb5\u8def\u7684\u706f\u5c31\u76f8\u5f53\u4e8e**\u5206\u5f00**\u4e24\u4e2a\u8fde\u901a\u5757\u3002\n\n+ \u6b64\u90e8\u5206\u53ef\u4ee5\u5229\u7528 $set$ \u7ef4\u62a4\n\n2. \u4e0b\u9762\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u7b54\u6848\n\n+ \u6784\u9020\u4e00\u4e2a $(n+1) \\times (n+1)$ \u7684\u77e9\u9635 $c$\uff0c$c_{ij}$ \u8868\u793a $i$ \u4e0e $j$ \u7ad9\u70b9\u7684\u6709\u591a\u957f\u65f6\u95f4\u662f\u8fde\u901a\u7684\u3002\u6211\u4eec\u91c7\u7528\u4ee3\u4ef7\u63d0\u524d\u8ba1\u7b97\u7684\u65b9\u6cd5\uff0c\u8003\u8651\u70b9\u4eae\u7684\u64cd\u4f5c\uff0c\u82e5\u64cd\u4f5c\u5728 $t$ \u65f6\u523b\u8fdb\u884c\uff0c\u5de6\u53f3\u8fde\u901a\u5757\u533a\u95f4\u5206\u522b\u4e3a $[l,x]$,$[x+1,r]$\uff0c\u90a3\u4e48\u5c06\u77e9\u9635\u4e2d**\u5de6\u4e0b\u89d2**\u4e3a $(l,x+1)$\uff0c**\u53f3\u4e0a\u89d2**\u4e3a $(x,x+1)$ \u7684\u5b50\u77e9\u9635\u4e2d\u6240\u6709\u5143\u7d20\u7684\u503c\u589e\u52a0 $T-t$ \u5373\u53ef\u3002\u540c\u7406\uff0c\u5982\u679c\u8981\u7184\u706d\u4e00\u76cf\u706f\uff0c\u5c06\u90a3\u4e2a\u5b50\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20\u51cf\u5c11 $T-t$ \u5373\u53ef\u3002\n\n+ \u4e0a\u65b9\u660e\u663e\u662f\u4e00\u4e2a\u5b50\u77e9\u9635\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\u3002\n+ ~~\u96be\u9053\u8981\u7528\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\uff1f~~ \u4e0d\uff0c\u4f5c\u4e3a OI \u65b0\u65f6\u4ee3\u7684 OIer\uff0c\u6211\u4eec\u7684 stl \u662f\u7ecf\u8fc7 $O_2$ \u4f18\u5316\u7684\uff01\u6240\u4ee5\u4f7f\u7528 pb_ds + \u4e8c\u7ef4\u7ebf\u6bb5\u6811\u6765\u8fdb\u884c\u52a8\u6001\u5f00\u70b9\u5c31\u80fd\u8fc7\u5566\u3002\n\n### \u4e09\u3001\u4ee3\u7801\n+ \u6ce8\u610f\u8bf7\u4f7f\u7528 pb_ds\uff0c\u4f7f\u7528 map \u548c unordered_map \u5bfc\u81f4 TLE \u8005\u540e\u679c\u81ea\u8d1f\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T>inline void rd(T&x) {\n\tx = 0;\n\tT f = 1;\n\tchar ch = getchar();\n\twhile (!isdigit(ch))f = (ch == '-') ? -1 : 1, ch = getchar();\n\twhile (isdigit(ch))x = (x << 1) + (x << 3) + ch - '0', ch = getchar();\n\tx *= f;\n}\ninline char gc() {\n\tchar ch = getchar();\n\twhile (!isdigit(ch))ch = getchar();\n\treturn ch;\n}\nconst int M=300010;\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/hash_policy.hpp>\nusing namespace __gnu_pbds;\ngp_hash_table<int,int>c[M];\nint n, T, a[M];\ninline void add(int x,int y,int v){\n\tfor(int i=x;i<=n+1;i+=i&-i)\n\t\tfor(int j=y;j<=n+1;j+=j&-j)c[i][j]+=v;\n}\ninline void add(int x1,int y1,int x2,int y2,int v){\n\tadd(x1,y1,v);\n\tadd(x2+1,y2+1,v);\n\tadd(x1,y2+1,-v);\n\tadd(x2+1,y1,-v);\n}\ninline int ask(int x,int y){\n\tint res=0;\n\tfor(int i=x;i;i-=i&-i)\n\t\tfor(int j=y;j;j-=j&-j)res+=c[i][j];\n\treturn res;\n}\nstruct Node {\n\tint l, r;\n\tbool operator <(const Node a)const {\n\t\treturn r < a.r;\n\t}\n};\nset<Node>s;\nset<Node>::iterator it;\nint main() {\n\trd(n), rd(T);\n\tfor (int i = 1; i <= n + 1; i++)s.insert({i, i});\n\tfor (int i = 1; i <= n; i++) {\n\t\tchar ch = gc();\n\t\ta[i] = ch - '0';\n\t\tif (a[i]) {\n\t\t\tit = s.lower_bound( {0, i + 1});\n\t\t\tit--;\n\t\t\tint l = it->l;\n\t\t\ts.erase(it);\n\t\t\ts.erase({i + 1, i + 1});\n\t\t\ts.insert({l, i + 1});\n\t\t}\n\t}\n\tfor (it=s.begin();it!=s.end();++it)\n\t\tadd(it->l,it->l,it->r,it->r,T);\n\tfor (int t=1;t<=T;t++){\n\t\tchar op[11];scanf(\"%s\",op+1);\n\t\tif (op[1]=='q'){\n\t\t\tint x,y;rd(x),rd(y);\n\t\t\tint ans=ask(x,y);\n\t\t\tint X=s.lower_bound({0,x})->l;\n\t\t\tint Y=s.lower_bound({0,y})->l;\n\t\t\tprintf(\"%d\\n\",ans-(T-t)*(X==Y));\n\t\t}\n\t\telse{\n\t\t\tint x;rd(x);\n\t\t\tif (a[x]==1){\n\t\t\t\tit=s.lower_bound({0,x});\n\t\t\t\tint l1=it->l,r1=x;\n\t\t\t\tint l2=x+1,r2=it->r;\n\t\t\t\tadd(l1,l2,r1,r2,t-T);\n\t\t\t\ts.erase({l1,r2});\n\t\t\t\ts.insert({l1,r1});\n\t\t\t\ts.insert({l2,r2}); \n\t\t\t\ta[x]^=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tit=s.lower_bound({0,x});\n\t\t\t\tint l1=it->l,r1=x;\n\t\t\t\tit++;\n\t\t\t\tint l2=x+1,r2=it->r;\n\t\t\t\tadd(l1,l2,r1,r2,T-t);\n\t\t\t\ts.erase({l1,r1});s.erase({l2,r2});\n\t\t\t\ts.insert({l1,r2}); \n\t\t\t\ta[x]^=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1653372638,
        "uid": 233260,
        "name": "zyp123456",
        "ccfLevel": 7,
        "title": "P5445 [APIO2019]\u8def\u706f\u9898\u89e3"
    },
    {
        "content": "\u7c7b\u4f3c [P4690 [Ynoi2016] \u955c\u4e2d\u7684\u6606\u866b](https://www.luogu.com.cn/problem/P4690) \u7684\u505a\u6cd5\u3002\n\n\u7528 set \u7ef4\u62a4\u6240\u6709\u503c\u4e3a $0$ \u7684\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u67e5\u8be2\u524d\u9a71\u540e\u7ee7\u3002\n\n\u5bf9\u4e8e\u67d0\u4e2a\u4e3a $0$ \u7684\u4f4d\u7f6e $l$,\u8bbe\u5176\u540e\u7ee7\u4e3a $r$\uff0c\u5219\u5bf9\u4e8e\u8be2\u95ee $(a,b)$ \u6ee1\u8db3\u5168\u4e3a $1$ \u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u7ec4 $(l,r)$ \u6ee1\u8db3 $l<a,r\\geq b$\uff08\u8fb9\u754c\u60c5\u51b5\u5047\u8bbe\u4f4d\u7f6e $0$ \u548c\u4f4d\u7f6e $n+1$ \u90fd\u4e3a $0$\uff09\u3002\n\n\u5c06 $(l,r)$ $(a,b)$ \u90fd\u89c6\u4e3a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u5219\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u504f\u5e8f\u3002\n\n\u8003\u8651\u5982\u4f55\u5904\u7406\u4fee\u6539\u64cd\u4f5c\u3002\u5bf9\u6bcf\u4e2a\u70b9 $(l,r)$ \u591a\u7ef4\u62a4\u4e00\u4e2a\u6743\u503c $w$ \u548c\u65f6\u95f4 $t$\u3002\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u4f1a\u5bfc\u81f4 $O(1)$ \u6b21\u524d\u9a71\u540e\u7ee7\u5173\u7cfb\u7684\u6539\u53d8\u3002$t$ \u65f6\u523b\u65b0\u589e\u7684 $(l,r)$ \u76f8\u5f53\u4e8e\u52a0\u5165\u70b9 $(l,r,1,t)$\uff0c\u5220\u9664\u7684 $(l,r)$ \u76f8\u5f53\u4e8e\u52a0\u5165\u70b9 $(l,r,-1,t)$\u3002\n\n\u82e5 $l<a,r\\geq b,t_0<t_1$\uff0c\u70b9 $(l,r,w,t_0)$ \u5bf9\u8be2\u95ee $(a,b,t_1)$ \u7684\u7b54\u6848\u8d21\u732e\u5c31\u662f $(t_1-t_0)\\times w$\uff0c\u5426\u5219\u662f $0$\u3002\u4e8e\u662f\u539f\u9898\u8f6c\u5316\u4e3a\u4e09\u7ef4\u504f\u5e8f\uff0c\u60f3\u5230 cdq \u5206\u6cbb\u3002\n\n\u5148\u6309 $t$ \u6392\u5e8f\uff0c\u7136\u540e\u6309 $r$ \u5f52\u5e76\u6392\u5e8f\uff0c\u5728 $l$ \u4f4d\u7f6e\u63d2\u5165\u6811\u72b6\u6570\u7ec4\u3002\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4 $a_1,a_2$\uff0c\u5728 $a_1$ \u4e2d\u63d2\u5165 $t_0w$\uff0c$a_2$ \u4e2d\u63d2\u5165 $w$\u3002\u8be2\u95ee\u7684\u7b54\u6848\u5373\u4e3a $a_2$ \u7684\u524d\u7f00\u548c\u4e58 $t_1$ \u518d\u51cf\u53bb $a_1$ \u7684\u524d\u7f00\u548c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q)\\log^2(n+q))$\uff0c\u7a7a\u95f4 $O(n+q)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nenum{N=300009,M=N*4};\nint n,ans[N],t1[N],id,v1[N],v2[N];\nlong long t2[N];\nbool b[N];\nstruct P{int l,r,t,i;}p[M],q[M];\nset<int>st;\nvoid add(auto t,int*v,int x,int y){for(++x;x<=n;t[x]+=y,x+=x&-x)if(v[x]!=id)v[x]=id,t[x]=0;}\nauto sum(auto t,int*v,int x){auto r=*t*0;for(++x;x;x&=x-1)if(v[x]==id)r+=t[x];return r;}\nvoid cdq(int l,int r){\n\tif(l==r)return;\n\tint m=l+r>>1,i=l,j=m+1,k=l;\n\tfor(cdq(l,m),cdq(j,r),++id;j<=r;q[k++]=p[j++]){\n\t\tfor(;i<=m&&p[i].r>=p[j].r;q[k++]=p[i++])if(p[i].i<2)add(t1,v1,p[i].l,p[i].t*p[i].i),add(t2,v2,p[i].l,p[i].i);\n\t\tif(p[j].i>1)ans[p[j].i]+=sum(t2,v2,p[j].l-1)*1ll*p[j].t-sum(t1,v1,p[j].l-1);\n\t}\n\tmemcpy(q+k,p+i,sizeof(P)*(r-k+1)),memcpy(p+l,q+l,sizeof(P)*(r-l+1));\n}\nint main(){ios::sync_with_stdio(0),cin.tie(0);\n\tint q,i,j,k,tq=1,t=0;\n\tstring s;\n\tfor(cin>>n>>q>>s,i=1;i<=n;++i)b[i]=s[i-1]-'0';\n\tfor(i=0,++n;i<=n;++i)if(!b[i]){\n\t\tif(st.size())p[++t]={*st.rbegin(),i,0,1};\n\t\tst.insert(i);\n\t}\n\tfor(i=1;i<=q;++i)if(cin>>s>>j,s[0]=='t'){\n\t\tif(b[j]^=1){\n\t\t\tauto o=st.lower_bound(j);\n\t\t\tif(o!=st.begin())if(p[++t]={*prev(o),j,i,-1},o!=--st.end())p[++t]={*prev(o),*next(o),i,1};\n\t\t\tif(o!=--st.end())p[++t]={j,*next(o),i,-1};\n\t\t\tst.erase(o);\n\t\t}else{\n\t\t\tauto o=st.insert(j).first;\n\t\t\tif(o!=st.begin())if(p[++t]={*prev(o),j,i,1},o!=--st.end())p[++t]={*prev(o),*next(o),i,-1};\n\t\t\tif(o!=--st.end())p[++t]={j,*next(o),i,1};\n\t\t}\n\t}else cin>>k,p[++t]={j,k,i,++tq};\n\tfor(cdq(1,t),i=2;i<=tq;++i)cout<<ans[i]<<'\\n';\n\treturn 0;\n}\n\n```",
        "postTime": 1632970434,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "P5445 [APIO2019]\u8def\u706f\uff08cdq \u5206\u6cbb\uff09"
    },
    {
        "content": "\u633a\u5999\u7684\u4e00\u9053\u9898\uff0c\u7adf\u7136 1A \u4e86\u90a3\u5c31\u5199\u7bc7\u9898\u89e3\u5427\u3002\n\n\u9996\u5148\u4f60\u53ef\u4ee5\u60f3\u51fa\u5404\u79cd\u795e\u5947\u7684\u641e\u6cd5\uff0c\u4f46\u662f\u53d1\u73b0\u90fd\u4e0d\u592a\u884c\u3002\n\n\u6211\u4eec\u8003\u8651\u6539\u53d8\u4e00\u4e2a\u706f\u7684\u72b6\u6001\u7684\u5f71\u54cd\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u76f8\u4e92\u53ef\u8fbe\u7684\u70b9\u5f62\u6210\u4e86\u4e00\u4e2a\u8fde\u901a\u5feb\uff0c\u7136\u540e\u5f00\u4e00\u4e2a\u706f\u5c31\u662f\u628a\u4e24\u4e2a\u5757\u5408\u6210\u4e00\u4e2a\uff0c\u5173\u706f\u5c31\u662f\u62c6\u6563\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u7ef4\u62a4\uff0c\u6211\u672c\u6765\u60f3\u7684\u662f\u7528\u7ebf\u6bb5\u6811\u53bb\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u53bb\u533a\u95f4\u8d4b\u503c\u5355\u70b9\u67e5\u8be2\u3002\u4f46\u662f\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u4e00\u4e2a `set` \u53bb\u7ef4\u62a4\u6bcf\u4e2a\u5feb\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u53bb\u7ef4\u62a4\u6bcf\u5bf9\u70b9\u4e4b\u95f4\u7684\u53ef\u8fbe\u5173\u7cfb\u3002\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5e73\u9762\uff0c\u6bcf\u6b21\u5f00\u5173\u706f\u5c31\u662f\u4fee\u6539\u4e00\u4e2a\u77e9\u5f62\u5185\u7684\u70b9\u7684\u72b6\u6001\u3002\n\n\u4f46\u662f\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e2a\u65f6\u95f4\u8f74\u7684\u95ee\u9898\u5462\uff1f\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u60f3\u6cd5\uff1a\u6211\u4eec\u628a\u65f6\u95f4\u6bb5\u770b\u4f5c\u662f\u65f6\u95f4\u70b9\u76f8\u51cf\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5728\u6bcf\u6b21\u6539\u53d8\u72b6\u6001\u65f6\u505a\u4e00\u4e2a\u77e9\u5f62\u52a0\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u77e9\u5f62\u52a0\u5355\u70b9\u67e5\u3002\u6211\u4eec\u505a\u4e00\u4e2a\u4e8c\u7ef4\u5dee\u5206\uff0c\u7136\u540e\u6811\u72b6\u6570\u7ec4\u5957\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\ncode\uff1a\n```cpp\n#include<algorithm>\n#include<set>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ninline int readint(){\n    int x=0;\n    bool f=0;\n    char c=getchar();\n    while(!isdigit(c)&&c!='-') c=getchar();\n    if(c=='-'){\n        f=1;\n        c=getchar();\n    }\n\twhile(isdigit(c)){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return f?-x:x;\n}\nconst int maxn=3e5+5;\nint n,q;\ninline char readchar(){\n\tchar c=getchar();\n\twhile(isspace(c)) c=getchar();\n\treturn c;\n}\ntypedef pair<int,int> pii;\nset<pii> s;\nstruct node{\n\tint l,r;\n\tnode* ch[2];\n\tint sum;\n\tnode(int l,int r):l(l),r(r),sum(0){\n\t\tch[0]=ch[1]=0;\n\t}\n\tvoid modify(int x,int k){\n\t\tsum+=k;\n\t\tif(l<r){\n\t\t\tint mid=l+(r-l)/2;\n\t\t\tif(x<=mid){\n\t\t\t\tif(!ch[0]) ch[0]=new node(l,mid);\n\t\t\t\tch[0]->modify(x,k);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!ch[1]) ch[1]=new node(mid+1,r);\n\t\t\t\tch[1]->modify(x,k);\n\t\t\t}\n\t\t}\n\t}\n\tint query(int ql,int qr){\n\t\tif(ql==l&&qr==r) return sum;\n\t\telse{\n\t\t\tint ans=0;\n\t\t\tif(ch[0]&&ql<=ch[0]->r) ans+=ch[0]->query(ql,min(qr,ch[0]->r));\n\t\t\tif(ch[1]&&qr>=ch[1]->l) ans+=ch[1]->query(max(ql,ch[1]->l),qr);\n\t\t\treturn ans;\n\t\t}\n\t}\n};\ninline int lowbit(int x){\n\treturn x&-x;\n}\nstruct bit{\n\tnode* c[maxn];\n\tvoid init(){\n\t\tfor(int i=1;i<=n+1;i++) c[i]=new node(1,n+1);\n\t}\n\tvoid modify(int x,int y,int k){\n\t\twhile(x<=n+1){\n\t\t\tc[x]->modify(y,k);\n\t\t\tx+=lowbit(x);\n\t\t}\n\t}\n\tint query(int x,int y){\n\t\tint s=0;\n\t\twhile(x>0){\n\t\t\ts+=c[x]->query(1,y);\n\t\t\tx-=lowbit(x);\n\t\t}\n\t\treturn s;\n\t}\n}t;\npii get(int x){\n\tset<pii>::iterator it=s.upper_bound(pii(x,n+1));\n\treturn *(--it);\n}\nint main(){\n    #ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    n=readint();\n    q=readint();\n    int last=0;\n    for(int i=1;i<=n;i++)\n    \tif(readchar()=='0'){\n    \t\ts.insert(pii(last+1,i));\n    \t\tlast=i;\n\t\t}\n\ts.insert(pii(last+1,n+1));\n\tt.init();\n\tfor(int i=1;i<=q;i++){\n\t\tchar opt=readchar();\n\t\tif(opt=='t'){\n\t\t\tint x=readint();\n\t\t\tpii l=get(x),r=get(x+1);\n\t\t\tif(l==r){\n\t\t\t\tt.modify(l.first,x+1,i);\n\t\t\t\tt.modify(x+1,x+1,-i);\n\t\t\t\tif(r.second<=n){\n\t\t\t\t\tt.modify(l.first,r.second+1,-i);\n\t\t\t\t\tt.modify(x+1,r.second+1,i);\n\t\t\t\t}\n\t\t\t\ts.erase(l);\n\t\t\t\ts.insert(pii(l.first,x));\n\t\t\t\ts.insert(pii(x+1,r.second));\n\t\t\t}\n\t\t\telse{\n\t\t\t\tt.modify(l.first,x+1,-i);\n\t\t\t\tt.modify(x+1,x+1,i);\n\t\t\t\tif(r.second<=n){\n\t\t\t\t\tt.modify(l.first,r.second+1,i);\n\t\t\t\t\tt.modify(x+1,r.second+1,-i);\n\t\t\t\t}\n\t\t\t\ts.erase(l);\n\t\t\t\ts.erase(r);\n\t\t\t\ts.insert(pii(l.first,r.second));\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tint a,b;\n\t\t\ta=readint();\n\t\t\tb=readint();\n\t\t\tif(get(a)!=get(b)) printf(\"%d\\n\",t.query(a,b));\n\t\t\telse printf(\"%d\\n\",t.query(a,b)+i);\n\t\t}\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1584440599,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5445 \u3010[APIO2019]\u8def\u706f\u3011"
    },
    {
        "content": "> ### [\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5445)\n\n>\u9898\u610f\u89c1\u6d1b\u8c37\u3002\n\n\u9996\u5148\u8003\u8651\u5b9e\u65f6\u7ef4\u62a4 $\\forall i,j\\in[1,n]$\uff0c\u76ee\u524d\u6709\u591a\u5c11\u65f6\u523b\u6ee1\u8db3\u80fd\u4ece $i$ \u5230\u8fbe $j$\u3002\n\n\u663e\u7136\uff0c$i$ \u80fd\u5230\u8fbe $j$ \u5f53\u4e14\u4ec5\u5f53 $i,j$ \u5728\u540c\u4e00\u4e2a\u4eae\u706f\u8fde\u7eed\u6bb5\u91cc\u3002\u5c06\u5f53\u524d\u72b6\u6001\u5256\u6210\u82e5\u5e72\u4e2a\u6781\u5927\u4eae\u706f\u8fde\u7eed\u6bb5\uff0c\u90a3\u4e48\u80fd\u5426\u5230\u8fbe\u5173\u4e8e $i,j$ \u4e24\u7ef4\u7684\u51fd\u6570\u5e94\u8be5\u662f\u7531\u8fd9\u4e9b\u8fde\u7eed\u6bb5\uff0c\u6bcf\u6bb5\u5206\u522b\u5728 $i$ \u8f74\u548c $j$ \u8f74\u4e0a\u4f5c\u4e3a\u4e24\u6761\u90bb\u8fb9\u3001$j=i$ \u4e0a\u7684\u4e00\u6bb5\u4f5c\u4e3a\u526f\u5bf9\u89d2\u7ebf\u7684\u4e00\u4e9b\u5145\u6ee1 $1$ \u7684\u6b63\u65b9\u5f62\u7ec4\u6210\u7684\uff0c\u5176\u4ed6\u5730\u65b9\u90fd\u662f $0$\u3002\n\n\u90a3\u4e48\u5728\u67d0\u4e00\u65f6\u523b\u7684\u7b54\u6848\u51fd\u6570\u5c31\u662f\u4e4b\u524d\u6240\u6709\u65f6\u523b\u7684\u6240\u5bf9\u5e94\u7684\u4e0a\u8ff0 01 \u51fd\u6570\u4e4b\u548c\u3002\u8003\u8651\u5b9e\u65f6\u7ef4\u62a4\u8fd9\u4e2a\u7b54\u6848\u51fd\u6570\uff08\u4e8c\u7ef4\u51fd\u6570\uff0c\u5373\u4e00\u4e2a\u77e9\u9635\uff09\u3002\n\n\u4e00\u79cd\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u9012\u63a8\uff0c\u6bcf\u6b21\u5c06\u5f53\u524d\u65f6\u523b\u7684 01 \u51fd\u6570\u52a0\u5230\u5f53\u524d\u7ef4\u62a4\u7684\u7b54\u6848\u51fd\u6570\u91cc\u9762\u53bb\u3002\u5f53\u524d\u65f6\u523b\u7684 01 \u51fd\u6570\u663e\u7136\u662f\u7531\u4e0a\u4e00\u65f6\u523b\u7684 01 \u51fd\u6570\u8fdb\u884c\u5e38\u6570\u6b21\u77e9\u5f62\u4fee\u6539\u5f97\u6765\u7684\uff08\u5f00\u706f\u5c31\u662f\u8fde\u63a5\u4e24\u8fb9\u63a5\u58e4\u7684 $1$ \u77e9\u5f62\u5e76\u8865\u5168\uff0c\u5173\u706f\u5c31\u662f\u4ece\u6240\u5728 $1$ \u77e9\u5f62\u65ad\u5f00\uff0c\u81f3\u4e8e\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e9b\u8fde\u7eed\u6bb5\uff0c`set` \u5373\u53ef\uff0c\u592a\u7b80\u5355\u4e0d\u591a\u8bf4\uff09\uff0c\u800c\u5c06 01 \u51fd\u6570\u52a0\u5230\u7b54\u6848\u51fd\u6570\u91cc\u53bb\u53c8\u7b49\u4ef7\u4e8e\u5bf9\u7b54\u6848\u77e9\u9635\u8fdb\u884c\u82e5\u5e72\u6b21\uff08\u8fd9\u91cc\u4e0d\u662f\u5e38\u6570\u6b21\u4e86\uff0c\u800c\u662f\u8fde\u7eed\u6bb5\u4e2a\u6570\u6b21\uff0c\u5373 $1$ \u77e9\u5f62\u4e2a\u6570\u6b21\uff09\u77e9\u5f62\u589e\u52a0 $1$ \u3002\u8fd9\u91cc\u5bf9 01 \u51fd\u6570\u7684\u66f4\u65b0\u663e\u7136\u662f\u529b\u6240\u80fd\u53ca\u7684\uff0c\u800c\u5bf9\u7b54\u6848\u51fd\u6570\u7684\u66f4\u65b0\u7684\u590d\u6742\u5ea6\u5c31\u6ca1\u6cd5\u4fdd\u8bc1\u4e86\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u91cc\u5bf9 01 \u51fd\u6570\u7684\u66f4\u65b0\u662f\u82e5\u5e72\u6b21\u77e9\u5f62\u52a0 $1$\uff0c\u5176\u4e2d $1$ \u662f\u4e2a\u5e38\u6570\uff0c\u800c\u8fd9\u4e9b\u77e9\u5f62\u968f\u65f6\u523b\u9012\u589e\u53c8\u662f\u5e38\u6570\u5dee\u5f02\u7684\uff0c\u5c31\u4e00\u8138\u53ef\u4ee5\u4f18\u5316\u6210\u5728\u8fd9\u4e9b\u5e38\u6570\u7ea7\u522b\u7684\u5dee\u5f02\u4e0a\u589e\u52a0\u975e\u5e38\u6570\uff0c\u4ece\u800c\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\n\n\u8003\u8651\u4e00\u4e2a 01 \u51fd\u6570\u5173\u4e8e\u65f6\u523b\u7684\u4e09\u7ef4\u51fd\u6570\u3002\u8003\u8651\u5f53\u524d\u7b54\u6848\u51fd\u6570\u7684\u6bcf\u4e00\u5904\u5728\u8fd9\u4e2a\u4e09\u7ef4\u51fd\u6570\u4e0a\u7684\u610f\u4e49\uff1a\u663e\u7136\u662f\u4ece\u5f53\u524d\u65f6\u523b\u65ad\u5f00\u65f6\u95f4\u8f74\u5f97\u5230\u7684\u7eb5\u5207\u9762\u7684\u5de6\u8fb9\u7684\u6240\u6709\u6b64\u5904\u7684\u548c\u3002\u8fd9\u662f\u4e00\u4e9b $0/1$ \u7684\u548c\uff0c$0$ \u663e\u7136\u4e0d\u7528\u8003\u8651\uff0c\u5269\u4e0b\u6765\u5c31\u662f\u4e00\u4e9b $1$ \u7684\u533a\u95f4\uff0c\u8bbe\u4e3a $[l_1,r_1],[l_2,r_2],\\cdots,[l_k,r_k]$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u548c\u5c31\u662f $\\sum\\limits_{i=1}^k(r_i-l_i+1)$\u3002\u8003\u8651\u5728\u4e00\u4e2a\u533a\u95f4\u5f00\u59cb\u7684\u65f6\u5019\u7ed9\u6b64\u5904\u8d21\u732e\u4e0a $-l_i$\uff0c\u5728\u533a\u95f4\u7ed3\u675f\u7684\u65f6\u5019\u7ed9\u6b64\u5904\u8d21\u732e\u4e0a $r_i+1$\u3002\u6b64\u65f6\u589e\u52a0\u91cf\u663e\u7136\u4e0d\u662f\u5e38\u6570\u4e86\uff0c\u6211\u4eec\u6765\u770b\u770b\u589e\u52a0\u6b21\u6570\u6709\u6ca1\u6709\u51cf\u5c11\u3002\u533a\u95f4\u5f00\u59cb\u548c\u533a\u95f4\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u5c31\u662f\u76f8\u90bb 01 \u51fd\u6570\u5dee\u5f02\u5bf9\u6b64\u5904\u5f71\u54cd\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u65f6\u523b\u7684\u9012\u63a8\u90fd\u53ea\u6709 01 \u51fd\u6570\u5dee\u5f02\u7684\u77e9\u5f62\u91cf\u6b21\u77e9\u5f62\u589e\u52a0\uff0c\u54e6\u543c\uff0c\u53ef\u4ee5\u4e86\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u82e5\u5f53\u524d\u8981\u67e5\u8be2\u7684\u90a3\u5904\u5728 01 \u51fd\u6570\u4e2d\u4e3a $1$ \u7684\u8bdd\uff0c\u90a3\u4e48\u7b2c $k$ \u4e2a\u533a\u95f4\u8fd8\u672a\u7ed3\u675f\uff0c\u6211\u4eec\u8981\u5f3a\u884c\u4ee4\u5b83\u7ed3\u675f\uff0c\u5373\u5728\u7b54\u6848\u51fd\u6570\u5728\u6b64\u5904\u7684\u503c\u7684\u57fa\u7840\u4e0a\u518d\u52a0\u4e0a\u5f53\u524d\u65f6\u523b\u3002\n\n\uff08\u4e0a\u9762\u8fd9\u4e00\u6bb5\u91cd\u8981\u7684\u8f6c\u5316\u662f\u672c\u9898\u7684\u74f6\u9888\u3002\u4e2a\u4eba\u611f\u89c9\u8fd9\u4e2a\u54f2\u5b66\u601d\u60f3\u7406\u89e3\u7684\u8fd8\u4e0d\u662f\u5f88\u900f\u5f7b\uff0c\u5927\u6982\u4ee5\u540e\u91cd\u70b9\u505a DS \u7684\u65f6\u5019\u9898\u505a\u591a\u4e86\u611f\u89c9\u5c31\u4e0a\u6765\u4e86\u5427\u3002\uff09\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4e2a\u77e9\u5f62\u589e\u52a0\u3001\u5355\u70b9\u67e5\u8be2\u7684\u4e8b\u4e86\u3002\u770b\u8d77\u6765\u80fd\u591f\u7ebf\u6bb5\u6811\u5957\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u4f46\u5199\u5230\u4e00\u534a\u624d\u53d1\u73b0\u5916\u5c42\u7ebf\u6bb5\u6811\u7684\u61d2\u6807\u8bb0\u65e0\u6cd5 $\\mathrm O(1)$ \u5b58\u50a8\u3002\u4e8e\u662f\u60f3\u5230\u5c06\u4fee\u6539\u548c\u67e5\u8be2\u8303\u56f4\u98a0\u5012\u7684\u65b9\u5f0f\uff1a\u5dee\u5206\u3002\u8003\u8651\u4e8c\u7ef4\u5dee\u5206\uff0c\u8fd9\u6837\u4e00\u6b21\u77e9\u5f62\u589e\u52a0\u8f6c\u5316\u4e3a $4$ \u6b21\u5355\u70b9\u589e\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\u8f6c\u5316\u4e3a\u524d\u7f00\u77e9\u5f62\u6c42\u548c\u3002\u8fd9\u5c31\u662f\u4e2a\u7ecf\u5178\u7684\u4e8c\u7ef4\u6570\u70b9\u6a21\u578b\uff0c\u5199\u4e00\u53d1 BIT \u5957\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5373\u53ef\uff08\u840c\u65b0\u7b2c\u4e00\u6b21\u5199\u8fd9\u4e2a~~\uff0c\u591a\u591a\u5173\u7167~~\uff09\u3002\u4e8c\u7ef4\u6570\u70b9\u5e94\u8be5\u662f\u6709\u5176\u4ed6\u65b9\u6cd5\u7684\uff08\u5982 cdq \u5206\u6cbb\uff09\uff0c\u7136\u800c\u6211\u8fd8\u6ca1\u6709\u7cfb\u7edf\u7684\u5b66\u8fd9\u4e00\u5757\uff0c\u4e0d\u7ba1\uff0c\u800c\u4e14\u8fd9\u9898\u91cd\u70b9\u4e0d\u5728\u8fd9\u91cc\u3002\n\nbtw\uff0c\u8fd9\u662f\u6211\u7b2c\u4e8c\u6b21\u5199 `vector` \u52a8\u6001\u5f00\u70b9\u6570\u636e\u7ed3\u6784\uff08\u7b2c\u4e00\u6b21\u662f\u5217\u961f\uff09\uff0c\u72af\u4e86\u8ddf\u5217\u961f\u540c\u6837\u7684\u9519\u8bef\uff08UB + `vector` \u5206\u914d\u5185\u5b58\u539f\u7406\u9020\u6210\u8d4b\u4e0d\u8fdb\u53bb\u503c\uff09\u3002\u591a\u9519\u51e0\u6b21\u5c31\u4e0d\u4f1a\u72af\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define X first\n#define Y second\nconst int inf=0x3f3f3f3f;\nint lowbit(int x){return x&-x;}\nconst int N=300000;\nint n,qu; \nchar a[N+5];\nstruct segtree{//\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811 \n\tstruct node{int lson,rson,l,r,sum;};\n\t#define lson(p) nd[p].lson\n\t#define rson(p) nd[p].rson\n\t#define l(p) nd[p].l\n\t#define r(p) nd[p].r\n\t#define sum(p) nd[p].sum\n\tvector<node> nd;\n\tint nwnd(int l=1,int r=n){return nd.pb(node({0,0,l,r,0})),nd.size()-1;}\n\tvoid init(){//\u521d\u59cb\u5316 \n\t\tnd.pb(node({0,0,0,0,0}));\n\t\tnwnd();\n\t}\n\tvoid add(int x,int v,int p=1){//\u5355\u70b9\u589e\u52a0 \n\t\tsum(p)+=v;\n\t\tif(l(p)==r(p))return;\n\t\tint mid=l(p)+r(p)>>1,res;\n\t\tif(x<=mid){\n\t\t\tif(!lson(p))res=nwnd(l(p),mid),lson(p)=res;\n\t\t\tadd(x,v,lson(p));\n\t\t}\n\t\telse{\n\t\t\tif(!rson(p))res=nwnd(mid+1,r(p)),rson(p)=res;\n\t\t\tadd(x,v,rson(p));\n\t\t}\n\t}\n\tint _sum(int l,int r,int p=1){//\u533a\u95f4\u6c42\u548c \n\t\tif(!p)return 0; \n\t\tif(l<=l(p)&&r>=r(p))return sum(p);\n\t\tint mid=l(p)+r(p)>>1,res=0;\n\t\tif(l<=mid)res+=_sum(l,r,lson(p));\n\t\tif(r>mid)res+=_sum(l,r,rson(p));\n\t\treturn res;\n\t}\n};\nstruct bitree{//BIT \n\tsegtree segt[N+1];\n\tvoid init(){//\u521d\u59cb\u5316 \n\t\tfor(int i=1;i<=n;i++)segt[i].init();\n\t}\n\tvoid add(int x,int y,int v){\n\t\tif(y>n)return;\n\t\twhile(x<=n)segt[x].add(y,v),x+=lowbit(x);\n\t}\n\tvoid add(int l1,int r1,int l2,int r2,int v){//\u77e9\u5f62\u589e\u52a0 \n\t\tadd(r1+1,r2+1,v);add(l1,r2+1,-v);add(r1+1,l2,-v);add(l1,l2,v);//\u8f6c\u5316\u4e3a\u5dee\u5206\u6570\u7ec4\u4e0a\u7684\u5355\u70b9\u589e\u52a0 \n\t}\n\tint val(int x,int y){//\u5355\u70b9\u67e5\u8be2 \n\t\tint res=0;\n\t\twhile(x)res+=segt[x]._sum(1,y),x-=lowbit(x);//\u8f6c\u5316\u4e3a\u5dee\u5206\u6570\u7ec4\u4e0a\u7684\u77e9\u5f62\u6c42\u548c \n\t\treturn res;\n\t}\n}bit;\nint main(){\n\tcin>>n>>qu;\n\tscanf(\"%s\",a+1);\n\tset<pair<int,int> > st;\n\tfor(int i=1,las=0;i<=n+1;i++)\n\t\tif(a[i]=='1')las=las?las:i;\n\t\telse if(las)st.insert(mp(las,i-1)),las=0;\n\tbit.init();\n\tfor(int i=1;i<=qu;i++){\n\t\tchar tp[10];int x,y;\n\t\tscanf(\" %s%d\",tp,&x);\n\t\tif(tp[0]=='t'){\n\t\t\tset<pair<int,int> >::iterator fd=st.upper_bound(mp(x,inf));\n\t\t\tif(fd!=st.begin()&&x<=(--fd)->Y){//\u5173\u706f \n\t\t\t\tint l=fd->X,r=fd->Y;\n\t\t\t\tst.erase(fd);\n\t\t\t\tbit.add(l,r,l,r,i);\n\t\t\t\tif(l<x)st.insert(mp(l,x-1)),bit.add(l,x-1,l,x-1,-i);\n\t\t\t\tif(r>x)st.insert(mp(x+1,r)),bit.add(x+1,r,x+1,r,-i);\n\t\t\t}\n\t\t\telse{//\u5f00\u706f \n\t\t\t\tfd=st.upper_bound(mp(x,inf));\n\t\t\t\tint l=x,r=x;\n\t\t\t\tif(fd!=st.begin())fd--,fd->Y==x-1?bit.add(fd->X,fd->Y,fd->X,fd->Y,i),l=fd->X,st.erase(fd++):fd++;\n\t\t\t\tif(fd!=st.end())fd->X==x+1&&(bit.add(fd->X,fd->Y,fd->X,fd->Y,i),r=fd->Y,st.erase(fd),0);\n\t\t\t\tst.insert(mp(l,r));\n\t\t\t\tbit.add(l,r,l,r,-i);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%d\",&y);y--;\n\t\t\tset<pair<int,int> >::iterator fd=st.upper_bound(mp(x,inf));\n\t\t\tif(fd!=st.begin()&&y<=(--fd)->Y)printf(\"%d\\n\",bit.val(x,y)+i);\n\t\t\telse printf(\"%d\\n\",bit.val(x,y));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597157985,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u6d1b\u8c37 P5445 - \u8def\u706f"
    },
    {
        "content": "### [P5445 [APIO2019] \u8def\u706f](https://www.luogu.com.cn/problem/P5445)\n\n\u653e\u5728\u9898\u5355\u91cc\u9762\u597d\u957f\u65f6\u95f4\u4e86\uff0c\u7ec8\u4e8e\u62ff\u5b83\u5f00\u5200\u4e86\u3002\n\n\u53d1\u73b0\u9898\u76ee\u5f88\u62bd\u8c61\uff0c\u8be2\u95ee\u7684\u662f\u6240\u6709\u5386\u53f2\u7248\u672c\u4e2d\u8054\u901a\u7684\u6570\u91cf\uff0c\u5c31\u5f88\u96be\u53d7\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u7ef4\u62a4\u597d\u8fde\u901a\u6027\uff0c\u800c\u4e14\u4e0d\u4ec5\u4ec5\u662f\u8fde\u901a\u6027\uff0c\u8fd8\u6709\u8054\u901a\u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u66b4\u529b\u4e00\u70b9\uff0c\u7ef4\u62a4\u4e00\u4e2a\u77e9\u9635 $A_{i,j}$ \u8868\u793a $i,j$ \u8054\u901a\u7684\u603b\u65f6\u95f4\u3002\u90a3\u4e48\u6211\u4eec\u67d0\u6b21\u5c06\u64cd\u4f5c $[l,x]\\sim[x+1,r]$ \u8fde\u63a5\u4e86\u8d77\u6765\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u77e9\u9635\u4e0a\u5bf9\u5e94\u7684\u67d0\u4e00\u4e2a\u77e9\u5f62\u7684\u503c\u4e5f\u4f1a\u968f\u4e4b\u53d8\u5316\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u5f04\u6e05\u695a\u4e24\u70b9\n\n1. \u53d8\u5316\u7684\u503c\u662f\u591a\u5c11\u3002\n\n2. \u53d8\u5316\u7684\u77e9\u5f62\u8303\u56f4\u662f\u5565\u3002\n\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u53d8\u5316\u7684\u503c\uff0c\u663e\u7136\u5bf9\u4e8e\u4e00\u6b21\u64cd\u4f5c\uff0c\u4ed6\u7684\u6301\u7eed\u65f6\u95f4\u662f\u4e0b\u6b21\u4e24\u70b9\u65ad\u5f00\u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u4ed6\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u518d\u67d0\u4e00\u6b21\u7ed3\u675f/\u67e5\u8be2\u7684\u65f6\u5019\u7528\u7ed3\u675f\u7684\u65f6\u95f4\u51cf\u53bb\u5f00\u59cb\u65f6\u95f4\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\uff1a\n\n\u52a0\u5165\u6211\u4eec\u8fde\u63a5\u7684\u65f6\u5019\u7684\u65f6\u95f4\u4e3a $T_1$\uff0c\u65ad\u5f00\u7684\u65f6\u95f4\u4e3a $T_2$\uff0c\u5bb9\u6613\u77e5\u9053\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d $l\\sim r$ \u7684\u8fde\u63a5\u65f6\u95f4\u4e3a $T_2-T_1$\u3002\uff08\u8fde\u63a5\u65f6\u95f4\u5de6\u95ed\u53f3\u5f00\uff09\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u7ed9\u4ed6\u5b9a\u4e0b\u4e00\u4e2a\u6743\u503c\uff0c\u5728\u8fde\u63a5\u7684\u65f6\u5019\u6211\u4eec\u5c06\u77e9\u9635\u7684\u6743\u503c\u589e\u52a0 $-T_1$\uff0c\u65ad\u5f00\u7684\u65f6\u5019\u6211\u4eec\u5c06\u6743\u503c\u51cf\u53bb $-T_2$\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u8d21\u732e\u5c31\u662f $T_2-T_1$ \u4e86\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u77e9\u5f62\u7684\u8303\u56f4\uff0c\u5047\u5982\u8bf4\u6211\u8fd9\u6b21\u64cd\u4f5c\u4fee\u6539\u7684\u662f\u7b2c $x$ \u6761\u9053\u8def\uff0c\u90a3\u4e48\u4f1a\u5f71\u54cd\u7684\u662f $x,x+1$ \u4e24\u70b9\u6240\u5728\u8fde\u901a\u5757\u7684\u5173\u7cfb\u3002\n\n\u4e3a\u4e86\u786e\u5207\u7684\u77e5\u9053\u67d0\u4e2a\u70b9\u6240\u5728\u7684\u8054\u901a\u5757\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u9700\u8981\u52a8\u6001\u7684\u7ef4\u62a4\u4ed6\uff0c\u56e0\u4e3a\u8fde\u901a\u5757\u9700\u8981\u652f\u6301\u7684\u662f\u8fde\u63a5\u548c\u65ad\u88c2\uff0c\u6211\u4eec\u5c06\u4ed6\u8f6c\u5316\u4e00\u4e0b\uff1a\n\n-  \u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757 $l\\sim r$ \u6211\u4ece\u4e2d\u95f4\u67d0\u5904 $x$ \u9053\u8def\u65ad\u88c2\uff0c\u90a3\u4e48 $l\\sim x$ \u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u53f3\u7aef\u70b9\u4f1a\u5168\u90e8\u53d8\u4e3a $x$\uff0c $x+1\\sim r$ \u6240\u5728\u7684\u8fde\u901a\u5757\u7684\u5de6\u7aef\u70b9\u4f1a\u53d8\u4e3a $x+1$ \u5f88\u57fa\u7840\u7684\u533a\u95f4\u8d4b\u503c\uff0c\u76f4\u63a5\u7528\u4e00\u68f5\u666e\u901a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n- \u8054\u901a\u540c\u7406\uff0c\u6211\u4eec\u5c06 $l\\sim x,x+1\\sim r$ \u8054\u901a\uff0c\u53ea\u9700\u8981\u5c06 $l\\sim r$ \u7684\u5de6\u7aef\u70b9\u8bbe\u4e3a $l$ \u53f3\u7aef\u70b9\u8bbe\u4e3a $r$ \u5373\u53ef\u3002\n\n\u73b0\u5728\u77e5\u9053\u4e86\u8981\u4fee\u6539\u7684\u8fde\u901a\u5757\u6211\u4eec\u6765\u770b\u770b\u4fee\u6539\u7684\u77e9\u9635\u5177\u4f53\u662f\u4ec0\u4e48\uff1a\n\n1. \u4eae\u706f\uff1a\n\t\n    \u5047\u5982\u6211\u8fd9\u6b21\u4fee\u6539\u662f\u5c06 $[l,x]$ \u548c $[x+1,r]$ \u8fde\u63a5\u8d77\u6765\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u6e05\u695a\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u5728\u77e9\u5f62\u4e0a\u7684\u542b\u4e49\uff1a\n    \n    ![](https://cdn.luogu.com.cn/upload/image_hosting/v31c76gj.png)\n    \n    \u73b0\u5728\u6211\u4eec\u9700\u8981\u8ba9\u4ed6\u4eec\u8054\u901a\uff0c\u7ed3\u5408\u4e0a\u9762\u7684\u77e9\u9635\u542b\u4e49\uff0c\u6211\u4eec\u77e5\u9053 $x,y$ \u7684\u8fde\u901a\u65f6\u95f4\u5c31\u662f $A_{x,y}$ \u7684\u503c\uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u662f\u8981\u5c06 $a\\in[l,x],b\\in[x+1,r],A_{a,b}$ \u7684\u503c\u5168\u90e8\u52a0\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u652f\u6301\u77e9\u5f62\u52a0\uff0c\u52a0\u7684\u77e9\u5f62\u662f $[l,x+1]\\sim [x,r]$\u3002\n    \n    ![](https://cdn.luogu.com.cn/upload/image_hosting/9abjjnxk.png)\n    \n    \u9ec4\u8272\u90e8\u5206\u5c31\u662f\u6211\u4eec\u6dfb\u52a0\u7684\u3002\n    \n2. \u706d\u706f\n\t\n    \u548c\u4e0a\u65b9\u540c\u7406\uff0c\u5728\u5bf9\u5e94\u4f4d\u7f6e\u51cf\u53bb $-T_2$ \u5373\u53ef\u3002\n    \n\u4e0a\u8ff0\u64cd\u4f5c\u9700\u8981\u5bf9\u8054\u901a\u7684\u7ebf\u6bb5\u6811\u4fee\u6539\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7aef\u70b9\uff0c\u522b\u5fd8\u8bb0\u4e86\u3002\n\n- \u4e00\u4e9b\u5c0f\u95ee\u9898\uff1a\n\t\n    \u5047\u5982\u8bf4\u6211\u7684 $l\\sim x\\sim x+1\\sim r$ \u8fde\u63a5\u7684\u597d\u597d\u5730\uff0c\u8fd9\u4e2a\u65f6\u5019\u6709\u4e00\u4e2a $k\\in(l,x)$ \u5c06 $l\\sim x$ \u65ad\u5f00\u4e86\u600e\u4e48\u529e\uff1f\n    \n    \u90a3\u4e48\u6839\u636e\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u6211\u4eec\u80fd\u753b\u51fa\u77e9\u5f62\u3002$[l,k+1]\\sim[k,r]$\n    \n    ![](https://cdn.luogu.com.cn/upload/image_hosting/c93yhdv9.png)\n    \n    \u6211\u4eec\u6765\u624b\u7b97\u4e00\u4e0b\uff0c\u73b0\u5728\u5047\u8bbe $l\\sim x$ \u662f\u5728 $T_1$ \u7684\u65f6\u5019\u8054\u901a\u7684\uff0c $l\\sim r$ \u662f\u5728 $T_2$ \u8054\u901a\u7684\uff0c $k$ \u6253\u65ad\u662f\u5728 $T_3$ \u65f6\u523b\uff0c\u4f60\u4f1a\u53d1\u73b0\u6240\u6709\u7684\u8fde\u63a5\u90fd\u662f\u5408\u6cd5\u7684\u3002\u6240\u4ee5\u505a\u6cd5\u6ca1\u6709\u95ee\u9898\u3002\n    \n\u8003\u8651\u7528\u6811\u5957\u6811\u7ef4\u62a4\uff0c\u5916\u5c42\u6811\u72b6\u6570\u7ec4\uff0c\u5185\u5c42\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u8282\u7701\u7a7a\u95f4\u3002\n\n\u4f7f\u7528\u5dee\u5206\u5c06\u64cd\u4f5c\u8f6c\u5316\u4e3a\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u5373\u53ef\u3002\n    \n\u5982\u679c\u67d0\u4e00\u6b21\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u8282\u70b9\u8fd8\u5904\u4e8e\u8fde\u901a\u72b6\u6001\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e4b\u524d\u5df2\u7ecf\u5728 $T_1$ \u65f6\u523b\u88ab\u589e\u52a0\u4e86\uff0c\u522b\u5fd8\u8bb0\u5728\u5f53\u524d\u8be2\u95ee\u65f6\uff0c\u51cf\u53bb\u5f53\u524d\u65f6\u95f4\u3002\n\n### $\\text{CODE}$\n```cpp\n#include<bits/stdc++.h>\n#define N 300005\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n,q,a[N],m;\n#define ls (now<<1)\n#define rs (now<<1|1)\nstruct link\n{\n\tint l,r,lz,rz;\n}kl[N*4];//\u7528\u4e8e\u7ef4\u62a4\u8fde\u901a\u6027\u7684\u7ebf\u6bb5\u6811\nvoid kldown(int now)\n{\n\tif(kl[now].lz)\n\t{\n\t\tkl[ls].l=kl[rs].l=kl[ls].lz=kl[rs].lz=kl[now].lz;\n\t\tkl[now].lz=0;\n\t}\n\tif(kl[now].rz)\n\t{\n\t\tkl[ls].r=kl[rs].r=kl[ls].rz=kl[rs].rz=kl[now].rz;\n\t\tkl[now].rz=0;\n\t}\n}\nvoid cover(int now,int l,int r,int cl,int cr,int val,int op)\n{\n\tif(l>=cl&&r<=cr)\n\t{\n\t\tif(op)kl[now].r=val,kl[now].rz=val;\n\t\telse kl[now].l=val,kl[now].lz=val;\n\t\treturn ;\n\t}\n\tkldown(now);\n\tint mid=(l+r)>>1;\n\tif(mid>=cl)cover(ls,l,mid,cl,cr,val,op);\n\tif(mid<cr)cover(rs,mid+1,r,cl,cr,val,op);\n}\nint klque(int now,int l,int r,int x,int op)\n{\n\tif(l==r)\n\t{\n\t\tif(op)return kl[now].r;\n\t\telse return kl[now].l;\n\t}\n\tkldown(now);\n\tint mid=(l+r)>>1;\n\tif(mid>=x)return klque(ls,l,mid,x,op);\n\treturn klque(rs,mid+1,r,x,op);\n}\n#undef ls\n#undef rs\n#define lc tr[now].ls\n#define rc tr[now].rs\nstruct tree\n{\n\tint ls,rs,val;\n}tr[N*100];int tot;\nvoid up(int now)\n{\n\ttr[now].val=0;\n\tif(lc)tr[now].val+=tr[lc].val;\n\tif(rc)tr[now].val+=tr[rc].val; \n}\nvoid adt(int now,int l,int r,int x,int val)\n{\n\tif(!now)return;\n\tif(l==r)\n\t{\n\t\ttr[now].val+=val;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=x)\n\t{\n\t\tif(!lc)lc=++tot;\n\t\tadt(lc,l,mid,x,val);\n\t}\n\telse\n\t{\n\t\tif(!rc)rc=++tot;\n\t\tadt(rc,mid+1,r,x,val);\n\t}\n\tup(now);\n}\nint qut(int now,int l,int r,int ql,int qr)\n{\n\tif(!now)return 0;\n\tif(l>=ql&&r<=qr)return tr[now].val;\n\tint mid=(l+r)>>1,cnt=0;\n\tif(mid>=ql)cnt+=qut(lc,l,mid,ql,qr);\n\tif(mid<qr)cnt+=qut(rc,mid+1,r,ql,qr);\n\treturn cnt;\n}\nint k[N*4];\nint lowbit(int x){return x&(-x);}\nvoid add(int x,int y,int val)\n{\n\twhile(x<=m)\n\t{\n\t\tadt(x,1,m,y,val);\n\t\tx+=lowbit(x);\n\t}\n}\nint que(int x,int y)\n{\n\tint ans=0;\n\twhile(x)\n\t{\n\t\tans+=qut(x,1,m,1,y);\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\nvoid midy(int x1,int y1,int x2,int y2,int val)\n{\n\ty2++;x2++;\n\tadd(x1,y1,val);\n\tadd(x2,y1,-val);\n\tadd(x1,y2,-val);\n\tadd(x2,y2,val);\n}\nint main()\n{\n\tn=read();q=read();m=n+2;tot=m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tchar c;cin>>c;\n\t\ta[i]=c-'0';\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcover(1,1,m,i,i,i,0);\n\t\tcover(1,1,m,i,i,i,1);\n\t}\n\tfor(int l=1,r;l<=n;l++)\n\t{\n\t\tr=l;\n\t\twhile(a[r])r++;r--;\n\t\tcover(1,1,m,l,r+1,l,0);\n\t\tcover(1,1,m,l,r+1,r+1,1);\n\t\tl=r+1;\n\t}\n\tfor(int i=1,x,y;i<=q;i++)\n\t{\n\t\tchar c;cin>>c;x=read();\n\t\tif(c=='t')\n\t\t{\n\t\t\tif(a[x]==0)\n\t\t\t{\n\t\t\t\tint l=klque(1,1,m,x,0),r=klque(1,1,m,x+1,1);\n\t\t\t\tcover(1,1,m,l,r,l,0);\n\t\t\t\tcover(1,1,m,l,r,r,1);\n\t\t\t\ta[x]=1;\n\t\t\t\tmidy(l,x+1,x,r,-i);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint l=klque(1,1,m,x,0),r=klque(1,1,m,x,1);\n\t\t\t\ta[x]=0;\n\t\t\t\tcover(1,1,m,l,x,x,1);\n\t\t\t\tcover(1,1,m,x+1,r,x+1,0);\n\t\t\t\tmidy(l,x+1,x,r,i);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty=read();if(x>y)swap(x,y);\n\t\t\tint r=klque(1,1,m,x,1);\n\t\t\tint ans=que(x,y);\n\t\t\tif(y<=r)ans+=i;\n\t\t\tcout<<ans<<\"\\n\";\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1677499829,
        "uid": 331947,
        "name": "hegm",
        "ccfLevel": 0,
        "title": "P5445 [APIO2019] \u8def\u706f \u9898\u89e3"
    },
    {
        "content": "> $n+1$ \u4e2a\u70b9\uff0c\u4ece $1\\sim n+1$ \u7f16\u53f7\uff0c\u76f8\u90bb\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u7ebf\u6bb5\u8fde\u63a5\u5b83\u4eec\uff0c$s_i(1\\le i\\le n)$ \u8868\u793a\u521d\u59cb\u65f6\u7ebf\u6bb5\u901a\u65ad\u3002$q$ \u6b21\u64cd\u4f5c\uff0c\u7b2c $t$ \u6b21\u8be2\u95ee\u4e2d\uff0c`toggle i` \u8868\u793a\u5207\u6362 $s_i$ \u72b6\u6001\uff0c`query a b` \u8868\u793a\u67e5\u8be2 $[1,t]$ \u4e2d\u6709\u591a\u5c11\u65f6\u523b\u6ee1\u8db3\u4e24\u70b9 $a,b$ \u4e4b\u95f4\u7684\u7ebf\u6bb5\u5168\u90e8\u662f\u901a\u7684\u3002$n,q\\le 3\\times 10^5$\u3002\n\n\u8003\u8651\u4f7f\u7528\u4e00\u4e2a `map/set` \u7ef4\u62a4\u6bcf\u4e2a\u65f6\u523b\u7684\u6781\u957f\u8fde\u7eed\u6bb5\u7684\u5de6\u53f3\u7aef\u70b9\u4e8c\u5143\u7ec4\u6784\u6210\u7684\u96c6\u5408\uff0c\u5219\u4e24\u70b9 $a,b$ \u8fde\u901a\u53ea\u9700\u8981\u5224\u65ad\u5b83\u4eec\u662f\u5426\u5904\u5728\u540c\u4e00\u6781\u957f\u8fde\u7eed\u6bb5\u4e2d\u3002\n\n\u4ece\u8fde\u901a\u6027\u7684\u89d2\u5ea6\u53bb\u8003\u8651\uff0c\u5982\u679c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a $(n+1)\\times(n+1)$ \u7684\u8fde\u901a\u6027\u77e9\u9635 $G$ \u8868\u793a $i,j$ \u662f\u5426\u8fde\u901a\u3002  \n\u5c06 $s_x$ 0 \u53d8 1 \u65f6\uff0c\u4f1a\u5c06\u7ebf\u6bb5\u4e24\u7aef\u7684\u6781\u957f\u8fde\u7eed\u6bb5\u5408\u5e76\u4e3a\u4e00\uff0c\u5047\u5982\u5206\u522b\u4e3a $[l,x],[x+1,r]$\uff0c\u9020\u6210\u7684\u5f71\u54cd\u662f $\u5de6\u4e0a(l,x+1)\\sim \u53f3\u4e0b(x,r)$ 0 \u53d8 1\uff1b\u53cd\u4e4b\u5c31\u662f\u5c06\u77e9\u5f62 1 \u53d8 0\u3002  \n\u90a3\u6211\u4eec\u8fd8\u662f\u6ca1\u6709\u529e\u6cd5\u505a\u5230\u628a\u65f6\u95f4\u8f74\u878d\u5165\u8fdb\u6765\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u65f6\u95f4\u8f74\u53ef\u4ee5\u4f5c\u4e3a\u6570\u503c\u7684\u89d2\u8272\u878d\u5165\u8fdb\u6765\uff0c\u5c06 $G_{i,j}$ \u5b9a\u4e49\u4e3a**\u5728\u5047\u8bbe\u540e\u7eed\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b** $i,j$ \u4e24\u70b9\u5728\u6574\u4e2a $[1,q]$ \u65f6\u95f4\u4e2d\u6709\u51e0\u4e2a\u65f6\u523b\u662f\u8fde\u901a\u7684\u3002$s_x$ 0 \u53d8 1\uff1a\u5c06\u4e0a\u8ff0\u77e9\u5f62\u540c $+(q-t)$\uff1b1 \u53d8 0\uff1a\u5c06\u4e0a\u8ff0\u77e9\u5f62\u540c $-(q-t)$\u3002\n\n\u6211\u4eec\u628a\u9898\u76ee\u5316\u4e3a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff1a\u77e9\u5f62\u4fee\u6539+\u5355\u70b9\u67e5\u8be2\u3002\u4e3a\u4e86\u66f4\u65b9\u4fbf\u4f7f\u7528\u6811\u5957\u6811\u7ef4\u62a4\uff0c\u53ef\u4ee5\u5c06\u77e9\u5f62\u5dee\u5206\u6210 4 \u4e2a\u5355\u70b9\u4fee\u6539\uff0c\u4ece\u800c\u53d8\u6210\u4e8c\u4f4d\u524d\u7f00\u548c\u67e5\u8be2\u3002\u4f7f\u7528\u6811\u72b6\u6570\u7ec4+\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\u5728 $O(n\\log^2 n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3001$O(n\\log n)$ \u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define pii pair<int,int>\n#define fi first\n#define se second\nusing namespace std;\nconst int N=3e5+5;\nint n,q,tot,a[N],rt[N];\nstruct node {\n\tint s,ls,rs;\n}t[N*75];\nchar s[N],op[7];\nvoid pushup(int k){\n\tt[k].s=t[t[k].ls].s+t[t[k].rs].s;\n}\nvoid chg(int p,int v,int l,int r,int &k){\n\tif(!k)k=++tot;\n\tif(l==r){t[k].s+=v;return;}\n\tint mid=l+r>>1;\n\tif(p<=mid)chg(p,v,l,mid,t[k].ls);\n\telse chg(p,v,mid+1,r,t[k].rs);\n\tpushup(k);\n}\nvoid add(int x,int y,int v){\n\tfor(int i=x;i<=n+1;i+=i&-i)chg(y,v,1,n+1,rt[i]);\n}\nint qry(int L,int R,int l,int r,int k){\n\tif(L<=l&&r<=R)return t[k].s;\n\tint mid=l+r>>1,s=0;\n\tif(L<=mid)s+=qry(L,R,l,mid,t[k].ls);\n\tif(R>mid)s+=qry(L,R,mid+1,r,t[k].rs);\n\treturn s;\n}\nint ask(int x,int y){\n\tint s=0;\n\tfor(int i=x;i;i-=i&-i)s+=qry(1,y,1,n+1,rt[i]);\n\treturn s;\n}\nint main(){\n\tscanf(\"%d%d%s\",&n,&q,s+1);s[++n]='0';\n\tmap<int,int>b;\n\tfor(int i=1;i<=n+1;i++)rt[i]=++tot,b[i]=i;\n\tfor(int i=1;i<=n;i++)if(s[i]=='1'){\n\t\tmap<int,int>::iterator it=b.upper_bound(i);\n\t\tint l=prev(it)->fi,r=it->se;\n\t\tadd(l,i+1,q);\n\t\tadd(l,r+1,-q);\n\t\tadd(i+1,i+1,-q);\n\t\tadd(i+1,r+1,q);\n\t\tprev(it)->se=r;\n\t\tif(it!=b.end())b.erase(it);\n\t}\n\tfor(int x,y,i=1;i<=q;i++){\n\t\tscanf(\"%s\",op);\n\t\tif(op[0]=='q'){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tmap<int,int>::iterator u=prev(b.upper_bound(x)),v=prev(b.upper_bound(y));\n\t\t\tprintf(\"%d\\n\",ask(x,y)-(u==v)*(q-i));\n\t\t}\n\t\telse {\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(s[x]=='0'){\n\t\t\t\tmap<int,int>::iterator it=b.upper_bound(x);\n\t\t\t\tint l=prev(it)->fi,r=it->se;\n\t\t\t\tadd(l,x+1,q-i);\n\t\t\t\tadd(l,r+1,i-q);\n\t\t\t\tadd(x+1,x+1,i-q);\n\t\t\t\tadd(x+1,r+1,q-i);\n\t\t\t\tprev(it)->se=r;\n\t\t\t\tb.erase(it);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmap<int,int>::iterator it=b.upper_bound(x);\n\t\t\t\tint l=prev(it)->fi,r=prev(it)->se;\n\t\t\t\tadd(l,x+1,i-q);\n\t\t\t\tadd(l,r+1,q-i);\n\t\t\t\tadd(x+1,x+1,q-i);\n\t\t\t\tadd(x+1,r+1,i-q);\n\t\t\t\tit--;\n\t\t\t\tit->se=x;\n\t\t\t\tb[x+1]=r;\n\t\t\t}\n\t\t\ts[x]=97-s[x];\n\t\t}\n\t}\n}\n```",
        "postTime": 1654424867,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 [APIO2019]\u8def\u706f"
    },
    {
        "content": "\u611f\u89c9\u633a\u79bb\u8c31\u7684\uff0c\u73b0\u5728\u989c\u8272\u6bb5\u5747\u644a\u5728\u9898\u89e3\u533a\u91cc\u90fd\u5df2\u7ecf\u6210\u4e3a\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u4e86\uff08     \n\n---------------------------------------\n\n\u8003\u8651\u5224\u65ad\u4e00\u4e2a\u533a\u95f4 $[a,b]$ \u5168\u4e3a $1$ \u7684\u5145\u8981\u6761\u4ef6\u662f\u5b58\u5728\u4e00\u4e2a\u6781\u957f $1$ \u989c\u8272\u6bb5 $[l,r]$ \u6ee1\u8db3 $l \\leq a \\leq b \\leq r$\u3002\n\n\u8003\u8651\u4fee\u6539\u64cd\u4f5c\uff0c\u53d1\u73b0\u65e0\u975e\u662f\u5408\u5e76\u6216\u5206\u88c2\u4e24\u4e2a\u76f8\u90bb\u7684\u6781\u957f $1$ \u989c\u8272\u6bb5\uff0c\u6240\u4ee5\u603b\u5171\u4ea7\u751f\u7684\u989c\u8272\u6bb5\u6570\u91cf\u7ea7\u4e3a $n + q$ \u3002           \n\n\u8003\u8651\u7ef4\u62a4\u6240\u6709\u989c\u8272\u6bb5\u4ee5\u53ca\u5b83\u4eec\u7684\u51fa\u73b0\u65f6\u95f4\uff0c\u8fd9\u4e2a\u7528\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5728 $O(n \\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u3002               \n\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u6309\u987a\u5e8f\u7ed9\u5b9a $m$ \u4e2a\u5927\u533a\u95f4\u4f9d\u6b21\u52a0\u5165\u96c6\u5408 $S$ \u4e2d\uff0c\u5728\u52a0\u5165\u8fc7\u7a0b\u4e2d\u4f1a\u6709\u4e00\u4e9b\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e00\u4e2a\u5c0f\u533a\u95f4\u67e5\u8be2 $S$ \u96c6\u5408\u91cc\u9762\u7684\u5927\u533a\u95f4\u5bf9\u5c0f\u533a\u95f4\u7684\u5305\u542b\u65f6\u95f4\u4e4b\u548c\u3002                  \n\n\n\u8003\u8651\u7528\u626b\u63cf\u7ebf\uff0c\u7531\u4e8e\u4efb\u610f\u65f6\u523b\u7684\u5927\u533a\u95f4\u4e0d\u4ea4\uff0c\u5c06\u4e00\u4e2a\u5927\u533a\u95f4\u8868\u793a\u4e3a\u56db\u5143\u7ec4 $(l,r,s,t)$ \u8868\u793a\u5927\u533a\u95f4 $[l,r]$ \u5728\u65f6\u523b $[s,t]$ \u4e2d\u51fa\u73b0\uff0c\u5219\u5728\u626b\u63cf\u7ebf\u626b\u5230 $s$ \u65f6\u6211\u4eec\u5c31\u5c06 $-(s-1)$ \u52a0\u5165\uff0c\u5f53\u626b\u5230 $t$ \u65f6\u6211\u4eec\u5c31\u5c06 $+t$ \u52a0\u5165\uff0c\u8bb0 $nowt$ \u4e3a\u73b0\u5728\u65f6\u95f4\uff0c\u8fd9\u4e48\u505a\u662f\u56e0\u4e3a\u4f60\u8ba1\u7b97\u88ab\u5305\u542b\u7684\u65f6\u95f4\u662f\u7528 $nowt - (s - 1)$ \u8ba1\u7b97\u7684\uff0c\u800c\u5f53\u5927\u533a\u95f4\u6d88\u5931\u65f6\u5176\u4e0d\u80fd\u7ee7\u7eed\u8d21\u732e\uff0c\u5c31\u5c06 $t - nowt$ \u52a0\u5165\uff0c\u62b5\u6d88\u540e\u9762\u7684\u8d21\u732e\u3002       \n\n\u8003\u8651\u5f53\u67e5\u8be2\u65f6\u81f3\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u5927\u533a\u95f4\u5305\u542b\u67e5\u8be2\u533a\u95f4\uff0c\u800c\u524d\u9762\u6240\u6709\u66fe\u5305\u542b\u8fc7\u67e5\u8be2\u7684\u533a\u95f4\u90fd\u5df2\u7ecf\u6d88\u5931\u5176\u8d21\u732e\u5c31\u662f $t - s + 1$\uff0c\u6240\u4ee5\u518d\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u7684\u8fd9\u4e2a\u67e5\u8be2\u533a\u95f4\u662f\u5426\u88ab\u4e00\u4e2a\u5927\u533a\u95f4\u6b63\u5305\u7740\u5c31\u77e5\u9053\u662f\u5426\u8fd8\u9700\u8981\u518d\u52a0\u5165\u4e00\u4e2a $nowt$ \u4f5c\u4e3a\u8d21\u732e\u3002                    \n\n\u7efc\u4e0a\uff0c\u6839\u636e\u67e5\u8be2\u7684\u5185\u5bb9\uff0c\u7ef4\u62a4 $S$ \u96c6\u5408\u91cc\u9762\u7684\u533a\u95f4\u5c31\u53ef\u4ee5\u76f4\u63a5\u6811\u5957\u6811\u5b9e\u73b0\uff0c\u7528\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\u5373\u53ef\uff0c\u5177\u4f53\u4e00\u70b9\u6765\u8bf4\u5c31\u662f\u5728\u533a\u95f4\u7ebf\u6bb5\u6811\u4e0a\u4ee5\u5927\u533a\u95f4\u7684 $[l,r]$ \u4e2d\u7684 $l$ \u4f5c\u4e3a\u952e\u503c\uff0c\u4ee5 $r$ \u4f5c\u4e3a\u5728\u5e73\u8861\u6811\u4e0a\u7684\u952e\u503c\uff0c\u5e73\u8861\u6811\u4e0a\u540c\u65f6\u7ef4\u62a4\u4e0a\u8ff0\u4e2d\u6240\u8bf4\u7684\u4fe1\u606f\u5373\u53ef\u3002            \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log ^ 2 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u5e38\u6570\u5de8\u5927\u8dd1\u4e0d\u8fc7\u5206\u5757\u5b9e\u73b0\u7684 $O(n \\sqrt n\\log n)$\u3002\n\n```cpp\n/*\n\u8003\u8651\u7ef4\u62a4 sum_i\uff0c\u4f46\u662f\u611f\u89c9\u8fd8\u662f\u4e0d\u597d\u505a\n\u8003\u8651 1 -> 0 \u5c31\u662f\u5206\u88c2\u989c\u8272\u6bb5\uff0c0 -> 1 \u5c31\u662f\u5408\u5e76\u989c\u8272\u6bb5\n\u81ea\u59cb\u81f3\u7ec8\u53ea\u4f1a\u6709 (n + q) \u4e2a\u989c\u8272\u6bb5\n\u628a\u6240\u6709\u989c\u8272\u6bb5\u6c42\u51fa\u6765\u540e\u9700\u8981\u7ef4\u62a4\u7ed9\u5b9a\u5f88\u591a\u4e2a\u5927\u533a\u95f4\u5305\u542b\u5c0f\u533a\u95f4\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6811\u5957\u6811\u89e3\u51b3\n*/\n#pragma GCC optimize(2)\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 3e5 + 5;\ninline int read() {\n    char ch = getchar();\n    int x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\ninline void write(int x) {\n    if (x < 0)\n        putchar('-'), x = -x;\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nint n,q,a[Len];\n#define ls(p) p << 1 \n#define rs(p) p << 1 | 1\nstruct Node\n{\n\tint opt,l,r,s,t,ds;\n\tNode(){opt = l = r = s = t = ds = 0;}\n\tNode(int OPT,int L,int R,int S,int T,int DS){opt = OPT , l = L , r = R , s = S , t = T , ds = DS;}\n};\nbool cmp(Node x,Node y){return x.s < y.s || (x.s == y.s && x.opt < y.opt);}\nvector<Node> S;\nstruct Seg\n{\n\tint sum[Len << 2],flag[Len << 2],tim[Len << 2],tag[Len << 2];\n\tvoid push_up(int x){sum[x] = sum[ls(x)] + sum[rs(x)];flag[x] = (flag[ls(x)] & flag[rs(x)]);}\n\tvoid push_down(int p)\n\t{\n\t\tif(tag[p])\n\t\t{\n\t\t\ttim[ls(p)] = tim[rs(p)] = tag[ls(p)] = tag[rs(p)] = tag[p];\n\t\t\ttag[p] = 0;\n\t\t}\n\t}\n\tvoid build(int p,int l,int r)\n\t{\n\t\tif(l == r){sum[p] = flag[p] = a[l];tim[p] = 0;return;}\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(ls(p) , l , mid);\n\t\tbuild(rs(p) , mid + 1 , r);\n\t\tpush_up(p);\n\t}\n\tvoid update(int p,int l,int r,int idx)\n\t{\n\t\tif(l == r){sum[p] = (a[l] ^= 1);return;}\n\t\tpush_down(p);\n\t\tint mid = (l + r) >> 1;\n\t\tif(idx <= mid) update(ls(p) , l , mid , idx);\n\t\telse update(rs(p) , mid + 1 , r , idx);\n\t\tpush_up(p);\n\t}\n\tvoid push(int p,int l,int r,int nl,int nr,int w)\n\t{\n\t\tif(nl <= l && nr >= r){tim[p] = tag[p] = w;return;}\n\t\tpush_down(p);\n\t\tint mid = (l + r) >> 1;\n\t\tif(nl <= mid) push(ls(p) , l , mid , nl , nr , w);\n\t\tif(nr > mid) push(rs(p) , mid + 1 , r , nl , nr , w);\n\t}\n\tint qtime(int p,int l,int r,int idx)\n\t{\n\t\tif(l == r) return tim[p];\n\t\tpush_down(p);\n\t\tint mid = (l + r) >> 1;\n\t\tif(idx <= mid) return qtime(ls(p) , l , mid , idx);\n\t\treturn qtime(rs(p) , mid + 1 , r , idx);\n\t}\n\tint query(int p,int l,int r,int nl,int nr)\n\t{\n\t\tif(nl <= l && nr >= r) return sum[p];\n\t\tpush_down(p);\n\t\tint mid = (l + r) >> 1 , res = 0;\n\t\tif(nl <= mid) res += query(ls(p) , l , mid , nl , nr);\n\t\tif(nr > mid) res += query(rs(p) , mid + 1 , r , nl , nr);\n\t\treturn res; \n\t}\n\tint Ll(int idx)\n\t{\n\t\tint l = 1 , r = idx , anss = 0;\n\t\twhile(l <= r)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif(query(1 , 1 , n , mid , idx) < idx - mid + 1) l = mid + 1;\n\t\t\telse anss = mid , r = mid - 1;\n\t\t}\n\t\tif(!anss) return idx + 1;\n\t\treturn anss;\n\t}\n\tint Rr(int idx)\n\t{\n\t\tint l = idx , r = n , anss = 0;\n\t\twhile(l <= r)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif(query(1 , 1 , n , idx , mid) < mid - idx + 1) r = mid - 1;\n\t\t\telse anss = mid , l = mid + 1;\n\t\t}\n\t\tif(!anss) return idx - 1;\n\t\treturn anss;\n\t}\n}S1;\nchar s[15];int l,r;\ninline void ADD(int l,int r,int s,int t)\n{\t\n\t//printf(\"%d %d %d %d\\n\",l,r,s,t);\n\tS.push_back(Node(0 , l , r , s , 0 , -1));\n\tS.push_back(Node(0 , l , r , t , 0 , 1));\n}\nint tot,rt[Len << 2];\nstruct retr\n{\n\tint v,num;\n\tretr(){v = num = 0;}\n\tretr(int V,int NUM){v = V , num = NUM;}\n\tretr operator + (const retr &Ano) const\n\t{return retr(v + Ano.v , num + Ano.num);}\n};\nstruct Splayyy\n{\n\tstruct vode\n\t{\n\t\tint ch[2],siz,cnt,val,ff,v,sumv,num,sumn;\n\t\tvode(){ch[0] = ch[1] = siz = cnt = val = ff = v = sumv = num = sumn = 0;}\n\t\tvode(int CH0,int CH1,int SIZ,int CNT,int VAL,int FF,int V,int SUMV,int NUM,int SUMN){ch[0] = CH0 , ch[1] = CH1 , siz = SIZ , val = VAL , ff = FF , v = V , sumv = SUMV , num = NUM , sumn = SUMN;}\n\t};\n\tvode t[Len * 21];\n\tvoid push_up(int x){t[x].siz = t[t[x].ch[0]].siz + t[t[x].ch[1]].siz + t[x].cnt;t[x].sumv = t[t[x].ch[0]].sumv + t[t[x].ch[1]].sumv + t[x].v;t[x].sumn = t[t[x].ch[0]].sumn + t[t[x].ch[1]].sumn + t[x].num;}\n\tvoid rotate(int x)\n\t{\n\t\tint y = t[x].ff , z = t[y].ff , kf = t[y].ch[1] == x , kgf = t[z].ch[1] == y;\n\t\tt[z].ch[kgf] = x;\n\t\tt[x].ff = z;\n\t\tt[y].ch[kf] = t[x].ch[kf ^ 1];\n\t\tt[t[x].ch[kf ^ 1]].ff = y;\n\t\tt[x].ch[kf ^ 1] = y;\n\t\tt[y].ff = x;\n\t\tpush_up(y) , push_up(x);\t\n\t}\n\tvoid Splay(int x,int goal,int &root)\n\t{\n\t\twhile(t[x].ff != goal)\n\t\t{\n\t\t\tint y = t[x].ff , z = t[y].ff;\n\t\t\tif(z != goal) (t[y].ch[1] == x) ^ (t[z].ch[1] == y) ? rotate(x) : rotate(y);\n\t\t\trotate(x);\n\t\t}\n\t\tif(!goal) root = x;\n\t}\n\tvoid insert(int x,int V,int adn,int &root)\n\t{\n\t\tint u = root , ff = 0;\n\t\twhile(u && t[u].val != x) ff = u , u = t[u].ch[x > t[u].val];\n\t\tif(u) t[u].cnt ++ , t[u].v += V , t[u].num += adn , push_up(u);\n\t\telse\n\t\t{\n\t\t\tu = ++ tot;\n\t\t\tif(ff) t[ff].ch[x > t[ff].val] = u;\n\t\t\tt[u] = vode(0 , 0 , 1 , 1 , x , ff , V , V , adn , adn);\n\t\t\tpush_up(u);\n\t\t}\n\t\tSplay(u , 0 , root);\n\t}\n\tvoid Find(int x,int &root)\n\t{\n\t\tint u = root;\n\t\tif(!u) return;\n\t\twhile(t[u].ch[x > t[u].val] && t[u].val != x) u = t[u].ch[x > t[u].val];\n\t\tSplay(u , 0 , root);\n\t}\n\tint Next(int x,int f,int &root)\n\t{\n\t\tFind(x , root);\n\t\tint u = root;\n\t\tif((t[u].val < x && !f) || (t[u].val > x && f)) return u;\n\t\tu = t[u].ch[f];\n\t\twhile(t[u].ch[f ^ 1]) u = t[u].ch[f ^ 1];\n\t\treturn u;\n\t}\n\tretr askkth(int x,int id)\n\t{\n\t\tFind(x , rt[id]);\n\t\t//printf(\"%d %d %d\\n\",x,t[rt[id]].val,rt[id]); \n\t\treturn retr((t[rt[id]].val >= x) * t[rt[id]].v + t[t[rt[id]].ch[1]].sumv , (t[rt[id]].val >= x) * t[rt[id]].num + t[t[rt[id]].ch[1]].sumn);\n\t}\n}Spl;\nstruct anoSeg\n{\n\tretr now;\n\tvoid update(int p,int l,int r,int IDX,int idx,int v,int num)\n\t{\n\t\tSpl.insert(idx , v , num , rt[p]);\n\t\tif(l == r) return;\n\t\tint mid = (l + r) >> 1;\n\t\tif(IDX <= mid) update(ls(p) , l , mid , IDX , idx , v , num);\n\t\telse update(rs(p) , mid + 1 , r , IDX , idx , v , num);\n\t}\n\tretr query(int p,int l,int r,int nl,int nr,int idx)\n\t{\n\t\tif(nl <= l && nr >= r) return Spl.askkth(idx , p);\n\t\tint mid = (l + r) >> 1;retr res;\n\t\tif(nl <= mid) res = res + query(ls(p) , l , mid , nl , nr , idx);\n\t\tif(nr > mid) res = res + query(rs(p) , mid + 1 , r , nl , nr , idx);\n\t\treturn res;\n\t}\n}S2;\nint Print[Len],OPT[Len];\nchar ss[Len];\nint main()\n{\n\t//freopen(\"12.in\",\"r\",stdin);\n\t//freopen(\"122.out\",\"w\",stdout);\n\tn = read() , q = read();\n\tscanf(\"%s\",ss + 1);\n\tfor(int i = 1 ; i <= n ; i ++) a[i] = ss[i] - '0';\n\tS1.build(1 , 1 , n);\n\tfor(int i = 1 ; i <= q ; i ++)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tif(s[0] == 't')\n\t\t{\n\t\t\tl = read();\n\t\t\tS1.update(1 , 1 , n , l);\n\t\t\tint L = l , R = l;\n\t\t\tif(!a[l])\n\t\t\t{\n\t\t\t\tif(l != 1) L = S1.Ll(l - 1);\n\t\t\t\tif(l != n) R = S1.Rr(l + 1);\n\t\t\t\tif(L <= R) ADD(L , R , S1.qtime(1 , 1 , n , L) , i - 1);\n\t\t\t\tS1.push(1 , 1 , n , L , R , i);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(l != 1) L = S1.Ll(l - 1);\n\t\t\t\tif(l != n) R = S1.Rr(l + 1);\n\t\t\t\tif(L <= l - 1) ADD(L , l - 1 , S1.qtime(1 , 1 , n , L) , i - 1);\n\t\t\t\tif(l + 1 <= R) ADD(l + 1 , R , S1.qtime(1 , 1 , n , l + 1) , i - 1);\n\t\t\t\tS1.push(1 , 1 , n , L , R , i);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl = read() , r = read() - 1;\n\t\t\tOPT[i] = 1;\n\t\t\tS.push_back(Node(1 , l , r , i - 1 , i - 1 , 0));\n\t\t}\n\t}\n\tfor(int l = 1 , r ; l <= n ; l = r + 1)//\u4fdd\u5b58\u5269\u4f59\u989c\u8272\u6bb5 \n\t{\n\t\tif(!a[l]){r = l;continue;}\n\t\tr = S1.Rr(l + 1);\n\t\tADD(l , r , S1.qtime(1 , 1 , n , l) , q);\n\t}\n\tsort(S.begin() , S.end() , cmp);\n\tfor(int i = 0 ; i < S.size() ; i ++)\n\t{\n\t\tif(S[i].opt == 0) \n\t\t{\n\t\t\t//printf(\"%d %d %d\\n\",S[i].l,S[i].r,S[i].ds);\n\t\t\tif(S[i].ds == -1) S2.update(1 , 1 , n , S[i].l , S[i].r , -(S[i].s - 1) , 1);//\u63d2\u5165/\u5220\u9664\u533a\u95f4\u64cd\u4f5c\n\t\t\telse S2.update(1 , 1 , n , S[i].l , S[i].r , S[i].s , -1);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tretr now = S2.query(1 , 1 , n , 1 , S[i].l , S[i].r);\n\t\t\t//printf(\"%d %d %d %d\\n\",S[i].t + 1,now.s,now.t,now.num);\n\t\t\tPrint[S[i].t + 1] = now.v + now.num * (S[i].t);\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= q ; i ++) if(OPT[i]) write(Print[i]) , putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1644735255,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5445 [APIO2019]\u8def\u706f"
    },
    {
        "content": "[view in Push_Y's blog](https://www.wzsyyh.ml/post/ludeng/)\n\n## \u601d\u8def\n\u5bf9\u4e8e\u4e00\u6bb5\u8fde\u7eed\u7684\u80fd\u591f\u4e92\u76f8\u5230\u8fbe\u7684\u7ad9\u70b9\uff0c\u8fd9\u91cc\u4e0d\u59a8\u79f0\u5b83\u4e3a\u4e00\u4e2a**\u8fde\u901a\u5757**\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u7684\u6bcf\u4e00\u4e2a\u7ad9\u70b9\uff0c\u5b58\u4e0b\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u5de6\u53f3\u7aef\u70b9\uff08\u5373\u4e00\u4e2a\u7ad9\u70b9\u6240\u80fd\u5230\u8fbe\u7684\u6700\u5de6\u7aef\u548c\u6700\u53f3\u7aef\uff09\n\n\u5bf9\u4e8e\u4e00\u6b21\u8fde\u901a\u5757\u6539\u53d8\u7684\u64cd\u4f5c\uff0c\u4ee5\u64cd\u4f5c\u7684\u65f6\u523b $t$ \u6765\u8bb0\u5f55\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\n\n- \u82e5\u4e3a\u63d2\u5165\u64cd\u4f5c\uff0c\u5bf9\u4fee\u6539\u7684\u533a\u95f4\u8d21\u732e\u4e3a $-t$\n\n- \u82e5\u4e3a\u5220\u9664\u64cd\u4f5c\uff0c\u5bf9\u4fee\u6539\u7684\u533a\u95f4\u8d21\u732e\u4e3a $t$\n\n**\u7279\u522b\u7684**\uff1a\u8be2\u95ee\u65f6\u523b\u5982\u679c\u4e24\u70b9\u662f\u8fde\u901a\u7684\uff0c\u8bb0\u5f55\u7b54\u6848 $+t$\n\n\u8fd9\u6837\u5904\u7406\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u89e3\u51b3\u67d0\u4e24\u70b9\u8fde\u901a\u7684\u65f6\u957f\n\n\u8003\u8651\u5207\u6362\u7b2c $k$ \u4e2a\u8def\u706f\u7684\u72b6\u6001\u5bf9 $k$ \u4e0e $k+1$ \u6240\u5728\u8fde\u901a\u5757\u7684\u5f71\u54cd\n\n- \u7b2c $k$ \u4e2a\u8def\u706f\u539f\u5148\u662f\u4eae\u7684\n\n    - \u76f8\u5f53\u4e8e\u628a\u8fd9\u4e2a\u8fde\u901a\u5757\u4ee5 $k$ \u4e0e $k+1$ \u4e4b\u95f4\u4e3a\u65ad\u70b9\u5206\u6210 2 \u4e2a\u8fde\u901a\u5757\n    \n    - \u5177\u4f53\u7684\uff0c\u5728\u7ebf\u6bb5\u6811\u4e2d\u67e5\u8be2\u5f97\u5230\u5de6\u53f3\u7aef\u70b9 $l$ \u548c $r$\uff0c\u4fee\u6539 $[l,k]$ \u548c $[k+1,r]$ \u5206\u522b\u4e3a 1 \u4e2a\u8fde\u901a\u5757\n\n- \u7b2c $k$ \u4e2a\u8def\u706f\u539f\u5148\u662f\u706d\u7684\n\n    - \u76f8\u5f53\u4e8e\u662f\u5c06 $k$ \u548c $k+1$ \u6240\u5728\u7684 2 \u4e2a\u8fde\u901a\u5757\u5408\u5e76\u6210 1 \u4e2a\n    \n    - \u5177\u4f53\u7684\uff0c\u67e5\u8be2 $k$ \u6240\u80fd\u5230\u8fbe\u7684\u5de6\u7aef\u70b9\u548c $k+1$ \u6240\u80fd\u5230\u8fbe\u7684\u53f3\u7aef\u70b9\uff0c\u8bb0\u4e3a $l$ \u548c $r$\uff0c\u4fee\u6539 $[l,r]$ \u4e3a 1 \u4e2a\u8fde\u901a\u5757\n    \n\u6bcf\u6b21\u64cd\u4f5c\u7684\u8d21\u732e\u7684\u533a\u95f4\u4fee\u6539\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u77e9\u5f62\u52a0\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u5bb9\u65a5\u7684\u601d\u60f3\u5728\u77e9\u5f62\u4e0a\u5dee\u5206\n\n\u6bd4\u5982\u5bf9\u4e8e $[l,k]$ \u548c $[k+1,r]$ \u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u4e00\u6b21\u63d2\u5165\u64cd\u4f5c\uff0c\u770b\u505a\u662f\u63d2\u5165 $[l,k+1]\u3001[k,r]$ \u5e76\u5220\u9664 $[l,r]\u3001[k,k+1]$\n\n\u4e8c\u7ef4\u7684\u77e9\u5f62\u52a0\u4e0a\u65f6\u95f4\u8fd9\u4e00\u7ef4 => \u4e09\u7ef4\u6570\u70b9\u95ee\u9898\n\u8fd9\u91cc\u6211\u7528 **CDQ\u5206\u6cbb** \u5b9e\u73b0\n~~\u7531\u4e8e\u7801\u529b\u592a\u5f31~~\uff0c\u5728\u9898\u89e3\u548c [\u963f\u4e11](https://www.luogu.com.cn/user/364963) \u795e\u4f6c\u7684\u5e2e\u52a9\u4e0b\u5b8c\u6210\n## CODE\n```cpp\n//#pragma GCC optimize(\"Ofast\") \n#include <bits/stdc++.h>\n#define int long long\n#define ls x<<1\n#define rs x<<1|1\nusing namespace std;\ntypedef pair<int,int> pi;\n\ninline int gin(){\n\tchar c=getchar();\n\tint s=0,f=1;\n\twhile(c<'0' || c>'9'){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\ts=(s<<3)+(s<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn s*f;\n}\n\nconst int N=6e5+5;\nchar s[N];\nint n,Q,tot,c[N],a[N],ans[N];\nbool vis[N];\n\nstruct seg{\n\tpi py;\n\tbool tag;\n} tr[N<<2];\n\nstruct node{\n\tint op,x,y1,y2,id,v;\n} t[N],tmp[N];\n\nvoid pushdown(int x){\n\tif(tr[x].tag){\n\t\ttr[ls].py=tr[rs].py=tr[x].py;\n\t\ttr[ls].tag=tr[rs].tag=1;\n\t\ttr[x].tag=0;\n\t}\n}\n\nvoid build(int x,int l,int r){\n\tif(l==r){\n\t\ttr[x].py=make_pair(l,l);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n}\n\nvoid change(int x,int l,int r,int L,int R,pi d){\n\tif(L<=l && r<=R){\n\t\ttr[x].py=d;\n\t\ttr[x].tag=1;\n\t\treturn;\n\t}\n\tpushdown(x);\n\tint mid=l+r>>1;\n\tif(L<=mid) change(ls,l,mid,L,R,d);\n\tif(mid< R) change(rs,mid+1,r,L,R,d);\n}\n\npi query(int x,int l,int r,int p){\n\tif(l==r) return tr[x].py;\n\tpushdown(x);\n\tint mid=l+r>>1;\n\tif(p<=mid) return query(ls,l,mid,p);\n\telse return query(rs,mid+1,r,p);\n}\n\nvoid upd(int x,int d){\n\twhile(x<=n+1){\n\t\tc[x]+=d;\n\t\tx+=x&-x;\n\t}\n}\nvoid del(int x){\n\twhile(x<=n+1){\n\t\tif(c[x]) c[x]=0;\n\t\telse break;\n\t\tx+=x&-x;\n\t}\n}\nint ask(int x){\n\tint res=0;\n\twhile(x){\n\t\tres+=c[x];\n\t\tx-=x&-x;\n\t}\n\treturn res;\n}\n\nvoid cdq(int l,int r) {\n\tif(l==r) return;\n\tint mid=l+r>>1,p=l,q=mid+1;\n\tcdq(l,mid),cdq(mid+1,r);\n\tfor(int i=l;i<=r;i++){\n\t\tif(q>r || p<=mid && t[p].x<=t[q].x){\n\t\t\ttmp[i]=t[p++];\n\t\t\tif(tmp[i].op==2) continue;\n\t\t\tupd(tmp[i].y1,tmp[i].v);\n\t\t\tupd(tmp[i].y2+1,-tmp[i].v);\n\t\t}\n\t\telse {\n\t\t\ttmp[i]=t[q++];\n\t\t\tif(tmp[i].op==2) ans[tmp[i].id]+=ask(tmp[i].y1);\n\t\t}\n\t}\n\tfor(int i=l;i<=r;i++){\n\t\tt[i]=tmp[i];\n\t\tif(t[i].op==1){\n\t\t\tdel(tmp[i].y1);\n\t\t\tdel(tmp[i].y2+1);\n\t\t}\n\t}\n\treturn;\n}\n\nsigned main(){\n\tn=gin(),Q=gin();\n\tscanf(\"%s\",s);\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=s[i-1]-'0';\n\tbuild(1,1,n+1);\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]==1 && !vis[i]){\n\t\t\tint j=i;\n\t\t\tvis[i]=1;\n\t\t\twhile(a[j]) vis[++j]=1;\n\t\t\tchange(1,1,n+1,i,j,make_pair(i,j));\n\t\t}\n\tmemset(vis,0,sizeof(vis));\n\tint tot=0;\n\tfor(int i=1;i<=Q;i++){\n\t\tscanf(\"%s\",s);\n\t\tt[++tot].op=(s[0]=='t' ? 1 : 2);\n\t\tt[tot].id=i;\n\t\tif(t[tot].op==1){\n\t\t\tint k=gin();\n\t\t\t++tot, t[tot]=t[tot-1];\n\t\t\tif(a[k]==1){\n\t\t\t\tpi u=query(1,1,n+1,k);\n\t\t\t\tt[tot-1].x=u.first,t[tot].x=k+1;\n\t\t\t\tt[tot-1].y1=t[tot].y1=k+1,t[tot-1].y2=t[tot].y2=u.second;\n\t\t\t\tt[tot-1].v=i, t[tot].v=-i;\n\t\t\t\tchange(1,1,n+1,u.first,k,make_pair(u.first,k));\n\t\t\t\tchange(1,1,n+1,k+1,u.second,make_pair(k+1,u.second));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpi p1=query(1,1,n+1,k),p2=query(1,1,n+1,k+1);\n\t\t\t\tt[tot-1].x=p1.first,t[tot].x=k+1;\n\t\t\t\tt[tot-1].y1=t[tot].y1=k+1,t[tot-1].y2=t[tot].y2=p2.second;\n\t\t\t\tt[tot-1].v=-i, t[tot].v=i;\n\t\t\t\tchange(1,1,n+1,p1.first,p2.second,make_pair(p1.first,p2.second));\n\t\t\t}\n\t\t\ta[k]^=1;\n\t\t}\n\t\telse {\n\t\t\tt[tot].x=gin(),t[tot].y1=gin();\n\t\t\tpi p=query(1,1,n+1,t[tot].x);\n\t\t\tif(p.second>=t[tot].y1)\n\t\t\t\tans[i]+=i;\n\t\t\tvis[i]=1;\n\t\t}\n\t}\n\tcdq(1,tot);\n\tfor(int i=1;i<=Q;i++)\n\t\tif(vis[i])\n\t\t\tprintf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1621262940,
        "uid": 135485,
        "name": "Push_Y",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5445 [APIO2019]\u8def\u706f"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/eastcloud/p/17233040.html)\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u4f60\u4e00\u4e2a 01 \u4e32\uff0c\u6709 $q$ \u4e2a\u65f6\u523b\uff0c\u6bcf\u4e2a\u65f6\u523b\u8981\u4e48\u628a\u4e00\u4f4d\u53d6\u53cd\uff0c\u8981\u4e48\u95ee\u4f60\u5728\u8fc7\u53bb\u7684\u6240\u6709\u65f6\u523b\u4e2d\u6709\u591a\u5c11\u4e2a\u65f6\u523b $a$ \u548c $b-1$ \u4e4b\u95f4\u90fd\u4e3a 1\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u89c2\u5bdf\u9898\u76ee\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u53ef\u4ee5\u628a\u5168\u4e3a 1 \u7684\u6bb5\u770b\u505a\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5982\u679c\u4e24\u4e2a\u4f4d\u7f6e\u5728\u4e00\u4e2a\u5757\u5185\u5219\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u4fee\u6539\u67d0\u4e2a\u4f4d\u7f6e\u7684\u503c\u5c31\u76f8\u5f53\u4e8e\u628a\u4e24\u8fb9\u7684\u8fde\u901a\u5757\u5408\u5e76\u6216\u8005\u5206\u88c2\u3002\n\n\u4f46\u662f\u6211\u4eec\u6b64\u65f6\u5e76\u975e\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u7684\u8fde\u901a\u5757\uff0c\u800c\u662f\u9700\u8981\u77e5\u9053\u6240\u6709\u65f6\u523b\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u5982\u679c\u53c8\u628a\u6240\u6709\u65f6\u523b\u904d\u5386\u4e00\u904d\u4f1a\u8d85\u65f6\uff0c\u8003\u8651\u80fd\u4e0d\u80fd\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u50a8\u5b58\u4e0b\u6240\u6709\u65f6\u523b\u7684\u4fe1\u606f\u65b9\u4fbf\u7ef4\u62a4\u3002\n\n\u5bb9\u6613\u89c2\u5bdf\u5230\uff0c\u7ef4\u62a4\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u76ee\u7684\u65e0\u975e\u662f\u4e3a\u4e86\u68c0\u67e5\u67d0\u4e24\u4e2a\u70b9\u8054\u4e0d\u8054\u901a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u629b\u5f03\u8fde\u901a\u5757\uff0c\u8f6c\u800c\u7ef4\u62a4\u4e24\u4e2a\u70b9\u8054\u901a\u7684\u65f6\u95f4\u6570\uff0c\u8fd9\u770b\u4f3c\u6709\u4e9b\u66b4\u529b\uff0c\u6bd5\u7adf\u4ece\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0a\u770b $n^2$ \u89c4\u6a21\u5c31\u5df2\u7ecf\u8d85\u6807\u4e86\uff0c\u522b\u6025\uff0c\u8ba9\u6211\u4eec\u5148\u770b\u770b\u9898\u76ee\u600e\u4e48\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u64cd\u4f5c\u81ea\u7136\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\u5219\u5982\u5148\u524d\u6240\u8ff0\u662f\u5c06\u4e24\u8fb9\u8fde\u901a\u5757\u5206\u88c2\u6216\u8005\u5408\u5e76\uff0c\u6211\u4eec\u628a\u64cd\u4f5c\u66f4\u6539\u4e00\u4e0b\uff0c\u8bb0 $l_1$\uff0c$r_1$\uff0c$l_2$\uff0c$r_2$ \u5206\u522b\u4e3a\u4e24\u8fb9\u8fde\u901a\u5757\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u5219\u5408\u5e76\u64cd\u4f5c\u8868\u793a\u6240\u6709\u5de6\u7aef\u70b9\u5728 $[l_1,r_1]$ \u5185\uff0c\u53f3\u7aef\u70b9\u5728 $[l_2,r_2]$ \u7684\u70b9\u5bf9\u4ee5\u540e\u90fd\u8054\u901a\uff0c\u5206\u88c2\u76f8\u53cd\u3002\n\n\u6ce8\u610f\u5230\u53d7\u5f71\u54cd\u7684\u70b9\u5b9e\u9645\u4e0a\u5728\u5e73\u9762\u5185\u6784\u6210\u4e00\u4e2a\u77e9\u5f62\uff0c\u800c\u8be2\u95ee\u76f8\u5f53\u4e8e\u5355\u70b9\u6c42\u503c\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u628a\u4fee\u6539\u8f6c\u5316\u6210\u5bf9\u4e8e\u77e9\u5f62\u7684\u4fee\u6539\u5462\uff1f\u5f53\u7136\u53ef\u4ee5\uff0c\u6211\u4eec\u628a\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u5b9e\u9645\u6709\u6548\u7684\u65f6\u95f4\u6bb5\u62bd\u51fa\u6765\u770b\uff0c\u5b83\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5dee\u5206\u6210\u4e00\u6b21\u5355\u70b9\u52a0\u548c\u5355\u70b9\u51cf\u3002\n\n\u8bb0\u5f53\u524d\u65f6\u523b\u4e3a $t$\uff0c\u53ea\u8981\u5408\u5e76\u65f6\u628a\u6574\u4e2a\u77e9\u5f62\u52a0\u4e0a $q-t$\uff0c\u5206\u88c2\u65f6\u51cf\u53bb $q-t$ \u5373\u53ef\uff0c\u5dee\u5206\u540e\u53ef\u4ee5\u4f7f\u7528 cdq \u5206\u6cbb\u6216\u8005\u6811\u5957\u6811\u89e3\u51b3\uff0c\u53e6\u5916\u8981\u6ce8\u610f\u7684\u662f\u67e5\u8be2\u65f6\u5982\u679c\u8fd8\u8054\u901a\uff0c\u7531\u4e8e\u4e0d\u8003\u8651\u4ee5\u540e\u7684\u65f6\u95f4\uff0c\u8981\u5c06\u7b54\u6848\u51cf\u53bb $q-t$\u3002\n\n\u90a3\u4e48\u5de6\u53f3\u8054\u901a\u5757\u5982\u4f55\u7ef4\u62a4\u5462\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u8981\u4e48\u6a21\u4eff\u73c2\u6735\u8389\u6811\u7528 set \u7ef4\u62a4\uff0c\u8981\u4e48\u7528\u4e00\u9897\u7ebf\u6bb5\u6811\u7ef4\u62a4\u67e5\u8be2\u65f6\u4e8c\u5206\u5373\u53ef\uff0c\u7b14\u8005\u8fd9\u91cc\u4f7f\u7528\u4e86\u7ebf\u6bb5\u6811\u7684\u5199\u6cd5\uff0c\u4e0d\u8fc7\u7ec6\u8282\u591a\u800c\u4e14\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528 set \u7ef4\u62a4\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<set>\n#include<cstring>\n#define ite set<pai>::iterator\n#define N 300005\nusing namespace std;\nint read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9'){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint tot,num,sta[N];\nint a[N],rt[N];\nint n,q;\nstruct Node{\n\tint ls,rs,sum;\n\t#define ls(x) tr[x].ls\n\t#define rs(x) tr[x].rs\n\t#define s(x) tr[x].sum\n}tr[N<<8];\nint query(int x,int l,int r,int L,int R){\n\tif(!x) return 0;\n\tif(L>=l && R<=r)return s(x);\n\tint mid=(L+R)>>1,ans=0;\n\tif(l<=mid) ans+=query(ls(x),l,r,L,mid);\n\tif(r>mid) ans+=query(rs(x),l,r,mid+1,R);\n\treturn ans;\n}\nvoid change(int &x,int p,int L,int R,int s){\n\tif(!x) x=++tot;\n\ts(x)+=s;if(L==R) return;\n\tint mid=(L+R)>>1;\n\tif(p<=mid) change(ls(x),p,L,mid,s);\n\telse change(rs(x),p,mid+1,R,s);\n}\nint lowbit(int x){\n\treturn x&(-x);\n}\nint ask(int x,int y){\n\tint ans=0;\n\twhile(x){\n\t\tans+=query(rt[x],1,y,1,n+2);\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\nvoid add(int x,int y,int p){\n\twhile(x<=n){\n\t\tchange(rt[x],y,1,n+2,p);\n\t\tx+=lowbit(x);\n\t}\n}\nstruct no{\n\tint ls,rs,sum,l,r;\n\t#define tls(x) t2[x].ls\n\t#define trs(x) t2[x].rs\n\t#define ts(x) t2[x].sum\n\t#define tl(x) t2[x].l\n\t#define tr(x) t2[x].r\n}t2[N<<2];\nvoid build(int &x,int l,int r){\n\tx=++num;tl(x)=l;tr(x)=r;\n\tif(l==r){ts(x)=sta[l];return;}\n\tint mid=(l+r)>>1;\n\tbuild(tls(x),l,mid);build(trs(x),mid+1,r);\n\tts(x)=ts(tls(x))+ts(trs(x));\n}\nvoid ct(int x,int p){\n\tif(tl(x)==tr(x)) {ts(x)=sta[tl(x)];return;}\n\tint mid=(tl(x)+tr(x))>>1;\n\tif(p<=mid) ct(tls(x),p);\n\telse ct(trs(x),p);\n\tts(x)=ts(tls(x))+ts(trs(x));\n}\nint qt(int x,int l,int r){\n\tif(tl(x)>=l && tr(x)<=r) return ts(x);\n\tint mid=(tl(x)+tr(x))>>1;int ans=0;\n\tif(l<=mid) ans+=qt(tls(x),l,r);\n\tif(r>mid) ans+=qt(trs(x),l,r);\n\treturn ans;\n}\nint findr(int x){\n\tif(x==n) return n+1;\n\tif(qt(1,x+1,x+1)==0) return x+1;\n\tint l=x+1,r=n;\n\twhile(l<r){\n\t\t\n\t\tint mid=(l+r+1)>>1;\n\t\tif(qt(1,x+1,mid)==mid-x){\n\t\t\tl=mid;\n\t\t}\n\t\telse r=mid-1;\n\t}\n\treturn l+1;\n}\nint findl(int x){\n\tif(x==1) return 1;\n\tif(qt(1,x-1,x-1)==0){\n\t\treturn x;\n\t}\n\tint l=1,r=x-1;\n\twhile(l<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(qt(1,mid,x-1)==x-1-mid+1) r=mid;\n\t\telse l=mid+1;\n\t}\n\treturn l;\n}\nvoid opti(int l,int r,int ll,int rr,int p){\n\tadd(l,r,p);add(ll+1,r,-p);add(l,rr+1,-p);add(ll+1,rr+1,p);\n}\nint main(){\n\tn=read();q=read();int l,r;char ch;string s;\n\tfor(int i=1;i<=n;i++){cin>>ch;sta[i]=ch-'0';}\n\tbuild(l,1,n);int st=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(sta[i]==1 && sta[i-1]==0) st=i;\n\t\tif(sta[i]==1 && sta[i+1]==0){\n\t\t\topti(st,st,i+1,i+1,q);\n\t\t}\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tcin>>s;\n\t\tif(s==\"query\"){\n\t\t\tl=read();r=read();if(l==r){cout<<i<<endl;continue;}\n\t\t\tint ans=ask(l,r);\n\t\t\tif(qt(1,l,r-1)==(r-1-l+1)) ans+=i-q;\n\t\t\tcout<<ans<<endl;\n\t\t}\n\t\telse{\n\t\t\tl=read();\n\t\t\tint ll=findl(l);\n\t\t\tint rr=findr(l);\n\t\t\tif(sta[l]==0)opti(ll,l+1,l,rr,q-i);\n\t\t\telse opti(ll,l+1,l,rr,i-q);\n\t\t\tsta[l]^=1;ct(1,l);\n\t\t\t\n\t\t}\n\t}\n}\n\n```\n",
        "postTime": 1679207960,
        "uid": 421265,
        "name": "eastcloud",
        "ccfLevel": 4,
        "title": "P5445 [APIO2019] \u8def\u706f \u9898\u89e3"
    },
    {
        "content": "[LOJ \u4f20\u9001\u95e8](https://loj.ac/p/3146) [\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5445)\n\n\u8fd9\u91cc\u6bd4\u8f83\u5efa\u8bae\u53bb LOJ \u63d0\u4ea4\uff0c\u56e0\u4e3a\u6d1b\u8c37\u4e0b\u4e0d\u4e86\u6570\u636e\u800c\u4e14\u6570\u636e\u4e0d\u5168\uff08\uff09\u3002\n\n---\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u8ddf\u5176\u4ed6\u9898\u89e3\u4e0d\u592a\u4e00\u6837\u7684\u505a\u6cd5\u3002\n\n\u4ee4 $pre_i$ \u8868\u793a $i$ \u53ca $i$ \u4e4b\u524d\u7b2c\u4e00\u4e2a\uff08\u4ece\u540e\u5f80\u524d\uff09\u7684 $0$ \u7684\u4f4d\u7f6e\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee $(Query_a,Query_b,Query_T)$\uff0c\u53d1\u73b0\u8981\u6c42\u7684\u5c31\u662f $0$ \u5230 $Query_T$  \u6709\u591a\u5c11\u4e2a $pre_{Query_b}<Query_a$\u3002\n\n---\n\n\u53d1\u73b0\u706f\u7684\u72b6\u6001\u53ef\u4ee5\u62c6\u5206\u82e5\u5e72\u4e2a\u6210 $(l,r,stT,edT)$ \u8fd9\u6837\u8868\u793a\uff0c\u8868\u793a\u4ece $stT$ \u5230 $edT$ \u8fd9\u4e9b\u65f6\u523b\u4e2d $[l,r]$ \u7684 $pre$ \u90fd\u662f $l$\u3002\n\n\u90a3\u4e48\u6bcf\u4e00\u4e2a $edT \\le Query_T$ \u4e14 $l\\le Query_b\\le r$\uff0c$pre<Query_a$\uff08\u5373 $pre\\le Query_a-1$) \u7684\u8fd9\u6837\u8868\u793a\u90fd\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e $edT-stT+1$\u3002\n\n\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a CDQ \u5206\u6cbb\u3002\n\n\u4e0a\u9762\u7684\u8868\u793a\u53ef\u4ee5\u8fb9\u8bfb\u5165\u8be2\u95ee\u4f7f\u7528\u4e00\u4e2a ```set<pair<int,int> >``` \u548c ```ti[...]``` \u7ef4\u62a4\uff0c\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u53c2\u89c1\u4ee3\u7801\u3002\n\n---\n\n\u540c\u65f6\u6211\u4eec\u53c8\u53d1\u73b0\u8fd8\u6709\u4e00\u79cd $stT\\le QueryT$ \u4e14 $edT> QueryT$ \u7684\u8868\u793a\u4e5f\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u5728\u8bfb\u5165\u7b54\u6848\u65f6\u76f4\u63a5\u5904\u7406\uff08\u56e0\u4e3a\u5728\u540c\u4e00\u65f6\u523b\uff0c\u706f\u7684\u72b6\u6001\u8868\u793a\u7684 $[l,r]$ \u4e24\u4e24\u4e0d\u4ea4\uff0c\u6240\u4ee5\u5b83\u6b64\u65f6\u4e00\u5b9a\u53ea\u4f1a\u5728\u4e00\u4e2a\u8868\u793a\u5185\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u80fd\u7528 ```set``` \u548c ```ti``` \u7b97\u51fa\u8fd9\u90e8\u5206\u7684\u7b54\u6848\uff09\u3002\n\n\n\n```cpp\n#include <bits/stdc++.h>\n#define GC c=getchar()\n#define IG isdigit(c)\n#define int long long \n#define U(i,l,r) for(int i(l),END##i(r);i<=END##i;++i)\n#define D(i,r,l) for(int i(r),END##i(l);i>=END##i;--i)\ntemplate<class T>void rd(T &x=0,char GC,bool f=1)\n{\n    for(x=0;!IG;GC)f=c!='-';for(;IG;GC)x=x*10+(c^48);x=f?x:-x;\n}\ntemplate<class A,class... B>void rd(A& x,B&... y) {rd(x),rd(y...);}\nusing namespace std;\n\ntypedef set<pair<int,int> >::iterator SIT;\nconst int N(3e5+5);\nint n,q,_n,cnt,ti[N+5],pre,ans[N+5];\nchar s[N+5];\nset<pair<int,int> >qj;\nbool ask[N+5],lit[N+5];\nstruct Nd {int p,pr,v,id;} A[N*10+5],B[N*10+5];\nbool iQry(Nd a) {return a.id;}\n\t\t\t\nstruct Bit\n{\n\tint tr[N+5];\n\tvoid Add(int x,int y) {++x;for(;x<=_n;x+=x&-x) tr[x]+=y;}\n\tint Ask(int x,int y=0) {++x;for(;x;x-=x&-x) y+=tr[x]; return y;}\n} bit;\n\nvoid cdq(int l,int r)\n{\n\tif(l==r) return ;\n\tint mid(l+r>>1);\n\tcdq(l,mid),cdq(mid+1,r);\n\tfor(int i(l),j(mid+1),k(l);i<=mid||j<=r;++k)\n\t\tif(j>r||i<=mid&&A[i].pr<=A[j].pr)\n\t\t{\n\t\t\tif(!iQry(B[k]=A[i++])) bit.Add(B[k].p,B[k].v);\n\t\t}else if(iQry(B[k]=A[j++])) ans[B[k].id]+=bit.Ask(B[k].p);\n\tU(i,l,mid) if(!iQry(A[i])) bit.Add(A[i].p,-A[i].v);\n\tU(i,l,r) A[i]=B[i];\n}\n\nvoid Insert(int l,int r,int t)\n{\n\tint dt(t-ti[l]);\n\tif(l!=r) A[++cnt]=Nd{l+1,l,dt,0},r<n?A[++cnt]=Nd{r+1,l,-dt,0},1:1;\n\tti[l]=t;\n}\nsigned main()\n{\n\trd(n,q),scanf(\"%s\",s+1),_n=n+1;\n\tU(i,1,n)if(s[i]^49) qj.insert({pre,i-1}),pre=i,lit[i]=1;\n\tqj.insert({pre,n}),qj.insert({n+1,n+1}); //notice!!\n\tU(i,1,q)\n\t{\n\t\tchar s[10];scanf(\"%s\",s);\n\t\tif(s[0]=='t') \n\t\t{\n\t\t\tint x;rd(x);SIT it; pair<int,int> t;\n\t\t\tif(lit[x])\n\t\t\t{\n\t\t\t\tit=qj.lower_bound({x,0}),Insert(it->first,it->second,i),t=*prev(it);\n\t\t\t\tqj.erase(t),Insert(t.first,t.second,i),t.second=it->second,qj.insert(t);\t\n\t\t\t\tqj.erase(it),lit[x]=0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tit=qj.lower_bound({x,0}),t=*prev(it);\n\t\t\t\tqj.erase(t),Insert(t.first,t.second,i),t.second=x-1,qj.insert(t);\n\t\t\t\tti[x]=i,qj.insert({x,it->first-1}),lit[x]=1;\n\t\t\t}\n\t\t}else \n\t\t{\n\t\t\tint x,y;rd(x,y),ask[i]=1,--y;\n\t\t\tSIT it(prev(qj.lower_bound({y+1,0})));\n\t\t\tif(it->first<x) ans[i]=i-ti[it->first];\n\t\t\tA[++cnt]=Nd{y,x-1,0,i};\n\t\t} \n\t}\n\tcdq(1,cnt);\n\tU(i,1,q)if(ask[i])printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1666950308,
        "uid": 312306,
        "name": "LJ07",
        "ccfLevel": 0,
        "title": "[Solution][APIO2019] \u8def\u706f"
    },
    {
        "content": "\u5f88 Educational \u7684\u9898\u3002\n\n\u8def\u706f\u7684\u6781\u957f\u8fde\u901a\u5757\u662f\u5bb9\u6613\u7ef4\u62a4\u7684\u3002\u4f46\u662f\uff0c\u672c\u9898\u7684\u8be2\u95ee\u4e3a $[a,b]$ \u8fde\u901a\u7684\u65f6\u95f4\u957f\u5ea6\u3002\n\n## I. \u8f6c\u6362\u65f6\u95f4\n\n\u6211\u4eec\u77e5\u9053\uff0c\u65f6\u95f4\u7b49\u4e8e\u672b\u65f6\u523b\u51cf\u521d\u65f6\u523b\uff0c\u6bb5\u65f6\u95f4\u6c42\u548c\u7b49\u4e8e\u603b\u65f6\u95f4\u3002\u8fd9\u6837\uff0c\u53ef\u4ee5\u628a\u65f6\u95f4\u957f\u5ea6\u8f6c\u6362\u4e3a\u65f6\u523b\u7684\u8d21\u732e\u3002\n\n## II. \u8ba1\u7b97\u8d21\u732e\n\n\u8003\u8651\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u8d21\u732e\u3002\u5047\u8bbe\u6709 $[l,r]$ \u7684\u8fde\u901a\u5757\u5728 $[t_1,t_2)$ \u65f6\u523b\u4eae\u7740\uff0c\u90a3\u4e48\u6240\u6709 $[a,b]\\subseteq [l,r]$ \u4e14\u8be2\u95ee\u65f6\u523b\u5728 $t_1$ \u4e4b\u540e\u7684\u7684\u8be2\u95ee\u4f1a\u88ab\u8fd9\u4e2a\u8fde\u901a\u5757\u6240\u8d21\u732e\u3002\n\n**\u4e0d\u59a8\u628a\u533a\u95f4\u8f6c\u5316\u6210\u70b9\u5bf9**\uff0c\u8fd9\u6837**\u5b50\u533a\u95f4**\u5c31\u8f6c\u5316\u4e3a**\u5b50\u77e9\u5f62**\u3002\u901a\u8fc7\u52a0\u51cf**\u65f6\u523b**\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u77e9\u5f62\u52a0\u3001\u5355\u70b9\u67e5\u3002\n\n\u5177\u4f53\u5730\uff0c\u67d0\u4e2a\u201c\u5f00\u706f\u201d\u64cd\u4f5c\u5c06\u5bf9\u5728 $(l,l)-(r,r)$ \u201c\u77e9\u5f62\u201d\u7684\u8be2\u95ee\u51cf\u53bb\u5f53\u524d\u65f6\u523b $t$\uff0c\u800c\u67d0\u4e2a\u201c\u5173\u706f\u201d\u64cd\u4f5c\u5c06\u5bf9\u4e0a\u8ff0\u201c\u77e9\u5f62\u201d\u7684\u8be2\u95ee\u52a0\u4e0a\u5f53\u524d\u65f6\u523b $t$\u3002\u8fd9\u6837\u77e9\u5f62\u5185\u67d0\u4e2a\u4f4d\u7f6e\u7684\u548c\u5c31\u662f\u65f6\u95f4\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u82e5\u67e5\u8be2\u65f6 $[a,b]$ \u4ecd\u8fde\u901a\uff0c\u5219\u7531\u4e8e\u7f3a\u5c11\u4e00\u4e2a\u5173\u706f\u7684\u6807\u8bb0\uff0c\u9700\u8981\u624b\u52a8\u52a0\u4e0a\u8be2\u95ee\u65f6\u523b $T$\u3002\n\n\u53ef\u4ee5\u7528 CDQ \u5206\u6cbb\u6216\u6811\u5957\u6811\u8fdb\u884c\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log^2 n)$\u3002",
        "postTime": 1666882525,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] P5445 [APIO2019] \u8def\u706f"
    },
    {
        "content": "[\u63a8\u9500\u535a\u5ba2](https://foreverlasting1202.github.io/2019/08/16/APIO2019%E8%B7%AF%E7%81%AF/)\n\n\u4e00\u9053\u5947\u5f62\u602a\u72b6\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb+\u7ebf\u6bb5\u6811\u7684\u5947\u602a\u9898\u3002\n<!--more-->\n\n\u6211\u7684\u601d\u8def\u597d\u50cf\u6709\u70b9\u5947\u602a\u3002\n\n\u62ff\u5230\u9898\u76ee\uff0c\u76f4\u89c2\u7684\u60f3\u6cd5\u5e94\u8be5\u662f\u76f4\u63a5\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u3002\u4e8e\u662f\uff0c\u5c31\u6709\u4e86\u4e00\u79cd\u5927\u66b4\u529b\uff0c\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u7136\u540e\u6bcf\u6b21\u66b4\u529b\u4ece$1$\u7684\u65f6\u523b\u67e5\u8be2\u5230$now$\u65f6\u523b\uff0c\u5224\u65ad$sum[l,r]==r-l+1$\u5373\u53ef\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(n^2logn)$\u3002\n\n\u6709\u6ca1\u6709\u5176\u4ed6\u529e\u6cd5\u5462\uff1f\u6211\u60f3\u5230\u4e86\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\u628a\u5355\u70b9\u4fee\u6539\u6254\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u7136\u540e\u8be2\u95ee\u770b\u505a\u662f\u65f6\u95f4\u8f74$[1,now]$\u7684\u533a\u95f4\u67e5\u8be2\uff0c\u4e5f\u4e22\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u53bb\u7ef4\u62a4\u3002\u8fd9\u6837\u53ef\u4e0d\u53ef\u884c\u5462\uff1f\n\n\u5728\u5f00\u59cb\uff0c\u6211\u4ee5\u4e3a\u518d\u7528\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\uff0c\u518d\u5728\u9012\u5f52\u56de\u6765\u7684\u65f6\u5019\u64a4\u9500\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u7136\u800c\u8fd9\u6837\u5b50\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u3002\u51b7\u9759\u4e00\u5206\u6790\uff0c\u4f60\u4f1a\u53d1\u73b0\u65f6\u95f4\u8f74\u7684\u533a\u95f4$[1,now]$\u53ef\u80fd\u662f\u82e5\u5e72\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u62fc\u51d1\u6210\u7684\uff0c\u800c\u8fd9\u82e5\u5e72\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u5374\u662f\u4e0d\u4e00\u7684\uff0c\u4e0d\u80fd\u76f4\u63a5\u5f53$1$\u7b97\uff0c\u8fd9\u4e0b\u5c31\u9ebb\u70e6\u4e86\u3002\n\n\u6b63\u5e38\u4eba\u53ef\u80fd\u5230\u4e86\u8fd9\u91cc\u5c31\u4f1a\u653e\u5f03\u7ebf\u6bb5\u6811\u5206\u6cbb\u4e86\uff0c\u7136\u540e\u6211\u5374\u8111\u62bd\u5730\u7ee7\u7eed\u575a\u6301\u4e86\u4e0b\u53bb\u3002\u6211\u4eec\u60f3\u60f3\u770b\u4e00\u4e2a\u70b9\u53cd\u8f6c\u540e\uff0c\u5bf9\u4e8e\u5176\u4ed6\u7684\u8d21\u732e\u4f1a\u662f\u600e\u4e48\u6837\u7684\u3002\u4e00\u4e9b\u4e0e\u8fd9\u4e2a\u70b9\u65e0\u5173\u7684\u533a\u95f4\u82e5\u662f\u6ee1\u7684\uff08\u6211\u4eec\u79f0\u4e00\u4e2a\u533a\u95f4\u4e3a\u6ee1\u7684\u5373\u8fd9\u4e2a\u533a\u95f4\u5168\u662f$1$\uff09\u5219\u52a0\u4e0a\u5f53\u524d\u53cd\u8f6c\u4e0e\u4e0a\u6b21\u53cd\u8f6c\u7684\u65f6\u95f4\u5dee\u3002\u6709\u4e86\u8fd9\u4e2a\u60f3\u6cd5\u7684\u90a3\u4e00\u523b\uff0c\u6211\u7a81\u7136\u60f3\u8d77\u4e86$ZJOI2019$\u7684\u7ebf\u6bb5\u6811\uff0c\u53d1\u73b0\u4e24\u9053\u9898\u5176\u5b9e\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u6709\u4e86\u8fd9\u4e2a\u5947\u602a\u7684\u505a\u6cd5\u3002\n\n\u5728\u7ebf\u6bb5\u6811\u5206\u6cbb\u52a0\u5165\u4fee\u6539\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u4f60\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u8be5\u7ed3\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4\u6ee1\u7684\u65f6\u5019\u7684\u533a\u95f4\uff0c\u8fd9\u4e2a\u4e1c\u897f\u662f\u53ef\u4ee5\u7c7b\u4f3c\u61d2\u6807\u8bb0\u7684\u60f3\u6cd5\u4e0b\u4f20\u7684\uff0c\u6240\u4ee5\u662f$log$\u7ea7\u522b\u7684\u3002\u5728\u4fee\u6539\u7684\u65f6\u5019\uff0c\u9664\u4e86\u4fee\u6539\u7684\u8fd9\u4e00\u6761\u94fe\u4ee5\u5916\uff0c\u5176\u4ed6\u5730\u65b9\u4f60\u518d\u4e0b\u4f20\u4e2a\u5f53\u524d\u65f6\u95f4\u51cf\u53bb\u4e0a\u6b21\u4fee\u6539\u65f6\u95f4\u7684\u52a0\u6cd5\u6807\u8bb0\uff0c\u8868\u793a\u53c8\u591a\u4e86\u8fd9\u4e48\u591a\u7684\u8d21\u732e\u3002\u6bcf\u4e2a\u7ed3\u70b9\u4f60\u518d\u7ef4\u62a4\u4e2a$sum[rt]$\u8868\u793a\u5f53\u524d\u8282\u70b9\u6240\u4ee3\u8868\u533a\u95f4\u7684$1$\u7684\u6570\u91cf\uff0c$su[rt]$\u8868\u793a\u5386\u53f2\u4e0a\u603b\u5171\u7684\u7b54\u6848\uff0c\u8fd9\u4e00\u7cfb\u5217\u7684\u4e1c\u897f\u90fd\u662f\u53ef\u4ee5\u5728$pushup$\u548c$pushdown$\u7684\u65f6\u5019\u7ef4\u62a4\u51fa\u6765\u7684\u3002\u67e5\u8be2\u64cd\u4f5c\u5c31\u662f\u6b63\u5e38\u7684\u533a\u95f4\u67e5\u8be2\uff0c\u7136\u540e\u4f60\u518d\u5229\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u601d\u60f3\u5408\u5e76\u6240\u8868\u793a\u7684\u533a\u95f4\u6ee1\u7684\u65f6\u5019\u7684\u533a\u95f4\u8fd9\u4e2a\u4fe1\u606f\uff0c\u4fdd\u8bc1\u8fd9\u4e2a\u5408\u5e76\u8fc7\u7a0b\u4e5f\u5728\u4e86\u4e24\u4e2a$log$\u7684\u590d\u6742\u5ea6\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog^3n)$\u3002\n\n~~\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u60f3\u5230\u5c06$(a,b)$\u770b\u505a\u4e8c\u7ef4\u5750\u6807\u4e0a\u7684\u70b9\u5bf9\u7684\u8bdd\uff0c\u4e0d\u4ec5\u597d\u5199\uff0c\u800c\u4e14\u590d\u6742\u5ea6\u66f4\u4f18\u3002~~\n\n~~\u4ee5\u4e0a\u5747\u4e3a\u53e3\u80e1\uff0c\u6709\u9519\u8bef\u8bf7\u6307\u51fa\u3002~~",
        "postTime": 1565970281,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010APIO2019\u3011\u8def\u706f"
    }
]