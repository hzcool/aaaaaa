[
    {
        "content": "\u597d\u50cf\u6ca1\u4eba A \u6389\u554a\n\n~~\u679c\u7136\u6bd2\u7624\u9898\uff0c\u867d\u7136\u4e0d\u5361\u5206\u5757~~\n\n~~\u53e6\u5916\u5199 solution \u7684\u4eba\u7684\u8bed\u6587\u70c2\u7684\u8981\u6b7b~~\n\nupdeta\uff1a \u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\u4eba\u76f4\u63a5\u4ea4\u9898\u89e3\u554a\uff1f\n\nstd \u5df2\u7ecf\u66f4\u6539\u8fc7\uff0c\u76f4\u63a5\u63d0\u4ea4\u4e0d\u80fd AC \u8bf7\u81ea\u91cd\uff08\u5f53\u7136\u4e0d\u5f71\u54cd\u9605\u8bfb\n\n## Solution\n\n### \u6d4b\u8bd5\u70b9 1\n\n\u9010\u79d2\u6a21\u62df\u5373\u53ef\n\n### \u6d4b\u8bd5\u70b9 2 ~ 6\n\n\u66b4\u529b\u6a21\u62df\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u591a\u8bb0\u65f6\u95f4\u8fd9\u4e2a\u6807\u8bb0\uff0c\u590d\u6742\u5ea6 $O(nm)$\n\n### \u6d4b\u8bd5\u70b9 7 ~ 9\n\n~~\u5176\u5b9e\u7b2c 7 \u4e2a\u70b9\uff0c\u66b4\u529b\u4e5f\u80fd\u8fc7~~\n\n\u5047\u8bbe\u4e00\u4e2a\u70b9\u7684\u503c\u4e3a v\uff0c\u8003\u8651\u5355\u70b9\u4fee\u6539 a\uff0c\u770b\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff08\u5ffd\u7565\u4e86 $\\times b$\n\n![1](https://cdn.luogu.com.cn/upload/pic/38335.png)\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5728\u65f6\u95f4 $t$ \u5c06 $a$ \u589e\u52a0 $v$\uff0c\u6211\u4eec\u53ea\u9700\u8981 $sum-=v*b*t$ \u5373\u53ef\uff0c\u6700\u7ec8\u5728\u65f6\u95f4 $t_1$ \u67e5\u8be2\u65f6\u6211\u4eec\u76f4\u63a5\u67e5\u8be2 $sum+a*b*t_1$\uff0c\u6240\u4ee5\u53ef\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\u4ee5\u53ca\u533a\u95f4 $a*b$ \u7684\u548c\uff0c\u4fee\u6539\u5c31\u662f\u5355\u70b9\u4fee\u6539\uff0c\u67e5\u8be2\u5c31\u662f\u533a\u95f4\u67e5\u8be2\n\n### \u6d4b\u8bd5\u70b9 10 ~ 11\n\n\u89c2\u5bdf $a$ \u7684\u5355\u70b9\u4fee\u6539\uff0c\u4fee\u6539\u7684\u65f6\u5019 $b$\uff0c$t$ \u662f\u5e38\u91cf\uff0c\u5982\u679c\u80fd\u7ef4\u62a4 b \u7684\u533a\u95f4\u548c\uff0c\u90a3\u4e48\u662f\u53ef\u4ee5\u4fee\u6539\u533a\u95f4\u7684\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811 + \u6807\u8bb0 \u5373\u53ef\n\n### \u6d4b\u8bd5\u70b9 12 ~ 13\n\n\u5bf9 $b$ \u4ec5\u6709\u5355\u70b9\u4fee\u6539\uff0c\u6240\u4ee5\u4e0a\u4e00\u79cd\u662f\u4e00\u6837\u7684\uff0c\u518d\u52a0\u4e00\u4e2a\u5bf9 b \u7684\u5355\u70b9\u4fee\u6539\u5373\u53ef\n\n### \u6d4b\u8bd5\u70b9 14\n\n\u4ec5\u6709\u8be2\u95ee\uff0c\u6240\u4ee5\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\u4ee5\u53ca\u533a\u95f4 $a*b$ \u7684\u548c\u5373\u53ef                                                                                                                               \n\n~~\u8fd9\u4e2a\u70b9\u597d\u50cf\u6ca1\u5565\u610f\u4e49~~\n\n### \u6d4b\u8bd5\u70b9 15 ~ 17\n\n\u4ec5\u4ec5\u662f\u589e\u52a0\u4e86 b \u7684\u533a\u95f4\u4fee\u6539\uff0c\u81f3\u6b64\uff0c\u6211\u4eec\u7684\u60f3\u6cd5\u5df2\u7ecf\u975e\u5e38\u660e\u786e\n\n\u5373\u6211\u4eec\u8981\u7ef4\u62a4 $\\sum a$\uff0c$\\sum v$\uff0c$\\sum b$\uff0c$\\sum a*b$\uff0c\u90a3\u4e48\u8981\u7ef4\u62a4\u8fd9\u4e9b\u503c\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u6807\u8bb0\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u5904\u7406\u591a\u6807\u8bb0\uff0c\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u89c4\u5219\uff0c\u5373\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u5728\u9012\u5f52\u5230\u5b83\u7684\u65f6\u5019\uff08\u5373\u5b83\u7684\u7236\u4eb2\u7684 tag \u5168\u90e8\u4e0b\u653e\uff09\uff0c\u5b83\u8981\u7ef4\u62a4\u7684\u503c\u4e00\u5b9a\u662f\u6b63\u786e\u7684\u3002\n\n\u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u7684\u66f4\u65b0\u6807\u8bb0\u90fd\u662f\u8981\u4f20\u7ed9\u5b50\u8282\u70b9\u7684\u6807\u8bb0\n\n\u6ce8\u610f\u5230 $\\sum v$ \u4e00\u5b9a\u662f\u5f62\u5982 $\\sum v - x*\\sum a - y*\\sum b+z$   \u8fd9\u79cd\u5f62\u5f0f\uff0c\u4e0b\u9762\u6211\u4eec\u6839\u636e\u64cd\u4f5c\u8fd8\u786e\u5b9a\u6807\u8bb0\n\n\u8003\u8651\u533a\u95f4\u6539 a \u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a $adda$ \u6807\u8bb0\uff0c\u8868\u793a $\\sum v$ \u8fd8\u8981\u51cf\u591a\u5c11\u500d\u7684 $\\sum b$\uff0c\u8fd8\u6709\u4e00\u4e2a\u6807\u8bb0 $Adda$\uff0c\u8868\u793a a \u589e\u52a0\u4e86\u591a\u5c11\uff0c\u5728\u6539 a \u7684\u65f6\u5019 ($a+=v$\uff09\uff0c$adda+=v*t$\uff0c$Adda+=v$\uff0c\u5982\u679c\u4e4b\u524d\u5bf9\u8fd9\u4e2a\u70b9\u6709\u8fc7\u533a\u95f4\u6539 b \u7684\u8bdd\uff0c\u6700\u540e\u6211\u4eec\u53ea\u662f\u62ff $adda*\\sum b$\uff0c\u800c $\\sum b$ \u662f\u672a\u66f4\u65b0\u7684 $\\sum b$\uff0c\u6240\u4ee5\u8fd8\u8981\u8bb0\u4e00\u4e2a\u6807\u8bb0 $addv$ \u8868\u793a $\\sum v$ \u8981\u52a0\u4e0a\u591a\u5c11\u5e38\u91cf\uff0c$addv-=Addb*v*t$\n\n\u533a\u95f4\u6539 b \u7684\u64cd\u4f5c\u7c7b\u4f3c\n\n\u533a\u95f4\u6539 v ...\n\n\u73b0\u5728\u8003\u8651\u5177\u4f53\u7684\u6807\u8bb0\u4e0b\u4f20\u5230\u503c\n\n \u4ec5\u8003\u8651\u5de6\u513f\u5b50\u7684\u60c5\u51b5\uff0c\u5f62\u5982 $adda'$ \u4e3a\u7236\u4eb2\u7684\u6807\u8bb0\n\n$\\sum v = \\sum v-addb'*a-adda'*b+addv'*(m-l+1)$\n\n$\\sum ab=\\sum ab+Adda'*Addb'*(m-l+1)+Adda'*\\sum b+Addb'*\\sum a$\n\n$\\sum a =\\sum a + Adda'*(m-l+1)$\n\n$\\sum b=\\sum b + Addb'*(m-l+1)$\n\n\u6ce8\u610f\u66f4\u65b0\u987a\u5e8f\uff0c\u4e0b\u9762\u8003\u8651\u6807\u8bb0\u4e0b\u4f20\u5230\u6807\u8bb0\n\n$addv=addv-addb'*Adda-adda'*Addb+addv'$\n\n$adda=adda+adda'$\n\n$addb=addb+addb'$\n\n$Adda=Adda+Adda'$\n\n$Addb=Addb+Addb'$\n\n\u540c\u6837\u6ce8\u610f\u66f4\u65b0\u987a\u5e8f\n\n\u9644\u4e0a\u4e11\u964b\u7684 std\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#define maxn 500010\n#define ll long long\n#define gc getchar\nusing namespace std;\n\nint n, m, a[maxn], b[maxn], v[maxn];\n\nconst int p = 1000000007;\n\nint read(){\n\tint x = 0, f = 0; char c = gc();\n\twhile(!isdigit(c)){if(c == '-') f = 1; c = gc();}\n\twhile(isdigit(c)){x = x * 10 + c - '0'; c = gc();}\n\treturn f ? -x : x;\n}\n\n#define lc i << 1\n#define rc i << 1 | 1\nstruct seg{\t\n\tll v, a, b, adda, addb, addv, mul, Adda, Addb, Addmul;\n}T[maxn * 4]; \ninline void maintain(int i){\n\tT[i].v = (T[lc].v + T[rc].v) % p;\n\tT[i].mul = (T[lc].mul + T[rc].mul) % p;\n\tT[i].a = (T[lc].a + T[rc].a) % p;\n\tT[i].b = (T[lc].b + T[rc].b) % p;\n}\t\n\nvoid build(int i, int l, int r){\n\tif(l == r){\n\t\tT[i].v = v[l]; T[i].a = a[l]; \n\t\tT[i].b = b[l]; T[i].mul = 1ll * a[l] * b[l] % p; return ;\n\t} int m = l + r >> 1;\n\tbuild(lc, l, m); build(rc, m + 1, r);\n\tmaintain(i);\n}\n\nvoid pushdown(int i, int l, int r){\n\tll &adda = T[i].adda, &addb = T[i].addb, &addv = T[i].addv; int m = l + r >> 1;\n\tll &Adda = T[i].Adda, &Addb = T[i].Addb, &Addmul = T[i].Addmul;\n\t\n\tT[lc].v = (T[lc].v - adda * T[lc].b - addb * T[lc].a + addv * (m - l + 1)) % p;\n\tT[rc].v = (T[rc].v - adda * T[rc].b - addb * T[rc].a + addv * (r - m)) % p;\n\tT[lc].mul = (T[lc].mul + Adda * Addb % p * (m - l + 1) % p + Adda * T[lc].b + Addb * T[lc].a) % p;\n\tT[rc].mul = (T[rc].mul + Adda * Addb % p * (r - m) % p  + Adda * T[rc].b + Addb * T[rc].a) % p;\n\tT[lc].a = (T[lc].a + Adda * (m - l + 1)) % p; T[rc].a = (T[rc].a + Adda * (r - m)) % p;\n\tT[lc].b = (T[lc].b + Addb * (m - l + 1)) % p; T[rc].b = (T[rc].b + Addb * (r - m)) % p;\n\t\n\tT[lc].addv = (T[lc].addv + addv - T[lc].Adda * addb - T[lc].Addb * adda) % p;\n\tT[rc].addv = (T[rc].addv + addv - T[rc].Adda * addb - T[rc].Addb * adda) % p;\n\t\n\tT[lc].adda = (T[lc].adda + adda) % p;\n\tT[rc].adda = (T[rc].adda + adda) % p;\n\t\n\tT[lc].addb = (T[lc].addb + addb) % p;\n\tT[rc].addb = (T[rc].addb + addb) % p;\n\t\n\tT[lc].Adda = (T[lc].Adda + Adda) % p;\n\tT[rc].Adda = (T[rc].Adda + Adda) % p;\n\t\n\tT[lc].Addb = (T[lc].Addb + Addb) % p;\n\tT[rc].Addb = (T[rc].Addb + Addb) % p;\n\t\n\t//T[lc].Addmul = (T[lc].Addmul + Addmul) % p;\n\t//T[rc].Addmul = (T[rc].Addmul + Addmul) % p;\n\t\n\tadda = addb = addv = Adda = Addb = Addmul = 0;\n}\t\n\nvoid update_adda(int i, int l, int r, int L, int R, ll v, ll t){\n\tif(l > R || r < L) return ;\n\tif(L <= l && r <= R){\n\t\tT[i].v = (T[i].v - T[i].b * v % p * t) % p;\n\t\tT[i].a = (T[i].a + 1ll * v * (r - l + 1)) % p; T[i].mul = (T[i].mul + T[i].b * v) % p;\n\t\tT[i].adda = (T[i].adda + 1ll * v * t) % p; \n\t\tT[i].addv = (T[i].addv - T[i].Addb * v % p * t) % p;\n\t\tT[i].Adda = (T[i].Adda + v) % p; //T[i].Addmul = (T[i].Addmul + v * T[i].Addb) % p;\n\t\treturn ;\n\t} int m = l + r >> 1; pushdown(i, l, r);\n\tupdate_adda(lc, l, m, L, R, v, t); update_adda(rc, m + 1, r, L, R, v, t);\n\tmaintain(i);\n}\n\nvoid update_addb(int i, int l, int r, int L, int R, ll v, ll t){\n\tif(l > R || r < L) return ;\n\tif(L <= l && r <= R){\n\t\tT[i].v = (T[i].v - T[i].a * v % p * t) % p;\n\t\tT[i].b = (T[i].b + 1ll * v * (r - l + 1)) % p; T[i].mul = (T[i].mul + T[i].a * v) % p;\n\t\tT[i].addb = (T[i].addb + 1ll * v * t) % p;\n\t\tT[i].addv = (T[i].addv - T[i].Adda * v % p * t) % p;\n\t\tT[i].Addb = (T[i].Addb + v) % p; //T[i].Addmul = (T[i].Addmul + v * T[i].Adda) % p;\n\t\treturn ;\n\t} int m = l + r >> 1; pushdown(i, l, r);\n\tupdate_addb(lc, l, m, L, R, v, t); update_addb(rc, m + 1, r, L, R, v, t);\n\tmaintain(i);\n}\n\nvoid update_addv(int i, int l, int r, int L, int R, int v){\n\tif(l > R || r < L) return ;\n\tif(L <= l && r <= R){\n\t\tT[i].v = (T[i].v + 1ll * v * (r - l + 1)) % p;\n\t\tT[i].addv = (T[i].addv + v) % p;\n\t\treturn ;\n\t} int m = l + r >> 1; pushdown(i, l, r);\n\tupdate_addv(lc, l, m, L, R, v); update_addv(rc, m + 1, r, L, R, v);\n\tmaintain(i);\n}\n\nll query(int i, int l, int r, int L, int R, int t){\n\tif(l > R || r < L) return 0;\n\tif(L <= l && r <= R) return (T[i].v + T[i].mul * t) % p;\n\tint m = l + r >> 1; pushdown(i, l, r);\n\treturn (query(lc, l, m, L, R, t) + query(rc, m + 1, r, L, R, t)) % p;\n}\n\ninline void solve_1(){\n\tint t = read(), x = read(), y = read();\n\tll v = query(1, 1, n, x, y, t); v = (v % p + p) % p;\n\tprintf(\"%lld\\n\", v);\n}\n\ninline void solve_2(){\n\tint t = read(), x = read(), y = read(), z = read();\n\tupdate_adda(1, 1, n, x, y, z, t);\t\n}\n\ninline void solve_3(){\n\tint t = read(), x = read(), y = read(), z = read();\n\tupdate_addb(1, 1, n, x, y, z, t);\t\n}\n\ninline void solve_4(){\n\tint t = read(), x = read(), y = read(), z = read();\n\tupdate_addv(1, 1, n, x, y, z);\t\n}\n\nint main(){\n\tn = read(); m = read();\n\tfor(int i = 1; i <= n; ++i) v[i] = read(), a[i] = read(), b[i] = read();\n\tbuild(1, 1, n);\n\tfor(int i = 1; i <= m; ++i){\n\t\tint opt; opt = read();\n\t\tswitch(opt){\n\t\t\tcase 1 : solve_1(); \n\t\t\tcase 2 : solve_2(); \n\t\t\tcase 3 : solve_3(); \n\t\t\tcase 4 : solve_4(); \n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1541415495,
        "uid": 34531,
        "name": "DDOSvoid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5009 \u3010\u6bd2\u7624\u5206\u5757\u9898\u3011"
    },
    {
        "content": "\u62ff\u5230\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u4e0d\u96be\u6839\u636e\u4e09\u4e2a\u4fee\u6539\u64cd\u4f5c\u63a8\u6d4b\u6211\u4eec\u8981\u7ef4\u62a4\u533a\u95f4 $\\sum a\\times b, \\sum a, \\sum b, \\sum v$ \u8fd9\u51e0\u4e2a\u4fe1\u606f\n\n\u5176\u4e2d\u540e\u4e09\u4e2a\u4fe1\u606f\u662f\u663e\u7136\u8981\u88ab\u7ef4\u62a4\u7684\uff0c\u800c\u7b2c\u4e00\u4e2a\u4fe1\u606f\u5219\u662f\u914d\u5408 \u201c\u65f6\u523b\u201d \u6982\u5ff5\u66f4\u65b0\u7b54\u6848\u7528\u7684\uff0c\u6bcf\u8fc7\u4e00\u4e2a\u65f6\u523b\u5c31\u533a\u95f4\u52a0\u4e0a\u8fd9\u4e2a\u503c\n\n\u7136\u540e\u4e09\u4e2a\u533a\u95f4\u4fee\u6539\u6211\u4eec\u663e\u7136\u8981\u5206\u522b\u6253 tag \uff0c\u56e0\u6b64\u8981\u7ef4\u62a4 $atag, btag, vtag$ \u8868\u793a\u533a\u95f4\u52a0\u7684\u91cf\n\n\u7136\u540e\u6211\u4eec\u5148\u5047\u88c5\u8fd9\u51e0\u4e2a\u4fe1\u606f\u5df2\u7ecf\u591f\u4e86\uff0c\u770b\u770b\u5404\u4e2a\u64cd\u4f5c\u80fd\u4e0d\u80fd\u5b9e\u73b0\uff1a\n\n\u9996\u5148\u662f\u533a\u95f4\u6c42\u548c\uff0c\u8fd9\u4e2a\u663e\u7136\u53ea\u9700\u8981 $\\sum v$\n\n\u7136\u540e\u8003\u8651\u533a\u95f4\u52a0 $v$ \u663e\u7136\u4e5f\u53ef\u4ee5\u5b8c\u6210\n\n\u4f46\u662f\u524d $2, 3$ \u64cd\u4f5c\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u8003\u8651\u6211\u4eec\u7528\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4fee\u6539\u4e86 $[l, r]$ \u8fd9\u4e2a\u533a\u95f4\u65f6\uff0c\u5b83\u7684\u5b50\u533a\u95f4\u4fe1\u606f\u4e5f\u4f1a\u6539\u53d8\uff0c\u6216\u8005\u8bf4\u5b83\u5728\u4e0b\u4e00\u6b21\u88ab\u641c\u7d22\u5230\u4e4b\u524d\uff0c\u4e0d\u540c\u7684\u65f6\u523b\u672b\u5c3e $\\sum a\\times b$ \u7684 **\u771f\u5b9e\u503c** \u53ef\u80fd\u4e0d\u540c\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e1c\u897f\u662f\u5206\u6bb5\u7684\n\n\u800c\u6211\u4eec\u73b0\u5728\u7684\u505a\u6cd5\u662f\u6bcf\u8fc7\u4e00\u4e2a\u65f6\u523b\u5c31\u66b4\u529b\u52a0\u4e0a\u533a\u95f4 **\u5f53\u524d\u7684** $\\sum a \\times b$\uff0c\u6240\u4ee5\u662f\u4e0d\u53ef\u53d6\u7684\n\n\u4e0d\u8fc7\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5bb9\u65a5\u6389\u591a\u4f59\u7684\u8d21\u732e\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u66b4\u529b\u76f4\u63a5\u52a0\u4e0a\u533a\u95f4\u5f53\u524d\u7684 $\\sum a \\times b$ \u4e86\n\n\u6211\u4eec\u4e0d\u59a8\u6a21\u62df\u4e00\u4e0b\u4e00\u6b21\u5bf9 $a$ \u7684\u4fee\u6539\n\n\u5047\u8bbe\u533a\u95f4 $a$ \u5728 $t$ \u65f6\u523b\u52a0\u4e0a $x$\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21 $t'$ \u65f6\u523b\u67e5\u8be2\u8be5\u533a\u95f4\u65f6\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u8dd1\u7684\u662f $t'\\sum (a+x) \\times b$\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u591a\u7b97\u4e00\u4e2a $t\\times x\\times \\sum b$\uff0c\u5728 $\\sum v$ \u4e0a\u628a\u8fd9\u4e1c\u897f\u51cf\u6389\u5c31\u884c\u4e86\uff0c\u6211\u4eec\u60ca\u8bb6\u7684\u53d1\u73b0\u6211\u4eec\u7684\u73b0\u6709\u4fe1\u606f\u5c31\u53ef\u4ee5\u5bb9\u65a5\u51fa\u6b63\u786e\u7684\u7b54\u6848\n\n\u4f46\u662f\u5982\u679c\u518d\u641c\u7d22\u8fd9\u4e2a\u533a\u95f4\u7684\u5b50\u533a\u95f4\u5c31\u53c8\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u4e3a\u5b50\u533a\u95f4\u7684 $\\sum a\\times b$ \u4e5f\u662f\u5206\u6bb5\u7684\n\n\u4e0d\u8fc7\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u5bb9\u65a5\u6389\u7684\u662f\u4e00\u4e2a\u5f62\u5982 $\\sum t_i x_i$ \u7684\u4e1c\u897f\uff0c\u800c\u8fd9\u4e1c\u897f\u76f4\u63a5\u4e58\u4e0a\u4e00\u4e2a $\\sum b$ \u5c31\u662f\u6211\u4eec\u8981\u7684\u503c\n\n\u800c\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u5c31\u80fd\u53d1\u73b0\uff0c\u524d\u9762\u8fd9\u4e2a\u4e1c\u897f\u662f\u53ef\u4ee5\u76f4\u63a5\u4e0b\u4f20\u7ed9\u513f\u5b50\u7684\uff01\n\n\u56e0\u6b64\u6211\u4eec\u518d\u6253\u4e24\u4e2a tag \u6765\u5b58\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u672a\u5bb9\u65a5\u6389\u7684 $\\sum t_i a_i, \\sum t_i b_i$ \u5c31\u884c\u4e86\n\n\u6ce8\u610f\u5230\u4e0d\u540c\u6807\u8bb0\u4e4b\u95f4\u53ef\u80fd\u4e5f\u4f1a\u6709\u4e92\u52a8\uff0c\u7b80\u5355\u5904\u7406\u4e00\u4e0b\u5373\u53ef\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\n\n\n\n```cpp\n#include <assert.h>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define rep(i,s,t) for(int i=(s),i##END=(t);i<=i##END;++i)\n#define per(i,t,s) for(int i=(t),i##END=(s);i>=i##END;--i)\n#define REP(i,s,t) for(int i=(s),i##END=(t);i<i##END;++i)\n#define PER(i,t,s) for(int i=(t),i##END=(s);i>i##END;--i)\n#define elif else if\nnamespace MyMinMax{\ntemplate <typename T>\ninline T mn(const T x, const T y) {return x < y ? x : y;}\ntemplate <typename T>\ninline T mx(const T x, const T y) {return x > y ? x : y;}\ntemplate <typename T>\ninline bool chmin(T &x, const T y) {return (x > y) && ((x = y), 1);}\ntemplate <typename T>\ninline bool chmax(T &x, const T y) {return (x < y) && ((x = y), 1);}\ntemplate <typename T, typename ...Args>\ninline T mx(const T x, const Args ...args) {return mx(x, mx(args...));}\ntemplate <typename T, typename ...Args>\ninline T mn(const T x, const Args ...args) {return mn(x, mn(args...));}\n}\nusing namespace MyMinMax;\n// \u7701\u7565\u4e86\u4e0d\u91cd\u8981\u7684\u5feb\u8bfb\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\nconst LL INFll = 0x3f3f3f3f3f3f3f3fll;\n/* My Code begins here */\nconst int MOD = 1e8 + 7;\ninline void Sub(int &x, const int y) {((x -= y) < 0) && (x += MOD);}\ninline void Add(int &x, const int y) {((x += y) >= MOD) && (x -= MOD);}\ninline int SUB(int x, const int y) {((x -= y) < 0) && (x += MOD); return x;}\ninline int ADD(int x, const int y) {((x += y) >= MOD) && (x -= MOD); return x;}\n\nconst int MAXN = 2e5 + 15;\nint n, m;\nstruct NODE {\n    int s, ss, sa, sb, ta, tb, ts, at, bt;\n    NODE (int s = 0, int ss = 0, int sa = 0, int sb = 0, int ta = 0, int tb = 0, int ts = 0, int at = 0, int bt = 0) : s(s), ss(ss), sa(sa), sb(sb), ta(ta), tb(tb), ts(ts), at(at), bt(bt){}\n}t[MAXN << 2];\ninline void pushup(int rt) {\n    t[rt].s = ADD(t[rt << 1].s, t[rt << 1 | 1].s);\n    t[rt].ss = ADD(t[rt << 1].ss, t[rt << 1 | 1].ss);\n    t[rt].sa = ADD(t[rt << 1].sa, t[rt << 1 | 1].sa);\n    t[rt].sb = ADD(t[rt << 1].sb, t[rt << 1 | 1].sb);\n}\ninline void ua(int rt, int l, int r, int z) { Add(t[rt].ss, 1ll * t[rt].sb * z % MOD); Add(t[rt].sa, 1ll * (r - l + 1) * z % MOD); Add(t[rt].ta, z); }\ninline void ub(int rt, int l, int r, int z) { Add(t[rt].ss, 1ll * t[rt].sa * z % MOD); Add(t[rt].sb, 1ll * (r - l + 1) * z % MOD); Add(t[rt].tb, z); }\ninline void ua(int rt, int l, int r, int z, int p) { Add(t[rt].ss, 1ll * t[rt].sb * z % MOD); Add(t[rt].sa, 1ll * (r - l + 1) * z % MOD); Add(t[rt].ta, z); Sub(t[rt].s, 1ll * t[rt].sb * p % MOD); Add(t[rt].at, p); Sub(t[rt].ts, 1ll * t[rt].tb * p % MOD); }\ninline void ub(int rt, int l, int r, int z, int p) { Add(t[rt].ss, 1ll * t[rt].sa * z % MOD); Add(t[rt].sb, 1ll * (r - l + 1) * z % MOD); Add(t[rt].tb, z); Sub(t[rt].s, 1ll * t[rt].sa * p % MOD); Add(t[rt].bt, p); Sub(t[rt].ts, 1ll * t[rt].ta * p % MOD); }\ninline void us(int rt, int l, int r, int z) { Add(t[rt].s, 1ll * (r - l + 1) * z % MOD); Add(t[rt].ts, z); }\ninline void au(int rt, int z) { Sub(t[rt].s, 1ll * z * t[rt].sb % MOD); Add(t[rt].at, z); Sub(t[rt].ts, 1ll * t[rt].tb * z % MOD); }\ninline void bu(int rt, int z) { Sub(t[rt].s, 1ll * z * t[rt].sa % MOD); Add(t[rt].bt, z); Sub(t[rt].ts, 1ll * t[rt].ta * z % MOD); }\n#define LSON rt << 1, l, mid\n#define RSON rt << 1 | 1, mid + 1, r\ninline void pushdown(int rt, int l, int r) {\n    const int mid = (l + r) >> 1;\n    if(t[rt].at) au(rt << 1, t[rt].at), au(rt << 1 | 1, t[rt].at), t[rt].at = 0;\n    if(t[rt].bt) bu(rt << 1, t[rt].bt), bu(rt << 1 | 1, t[rt].bt), t[rt].bt = 0;\n    if(t[rt].ts) us(LSON, t[rt].ts), us(RSON, t[rt].ts), t[rt].ts = 0;\n    if(t[rt].ta) ua(LSON, t[rt].ta), ua(RSON, t[rt].ta), t[rt].ta = 0;\n    if(t[rt].tb) ub(LSON, t[rt].tb), ub(RSON, t[rt].tb), t[rt].tb = 0;\n}\nint a[MAXN], b[MAXN], v[MAXN];\nvoid build(int rt, int l, int r) {\n    if(l == r) {t[rt].s = v[l]; t[rt].sa = a[l]; t[rt].sb = b[l]; t[rt].ss = 1ll * a[l] * b[l] % MOD; return ; }\n    const int mid = (l + r) >> 1; build(LSON); build(RSON); pushup(rt);\n}\nvoid ma(int rt, int l, int r, int x, int y, int z, int p) {\n    if(x <= l && r <= y) return ua(rt, l, r, z, p);\n    pushdown(rt, l, r); int mid = (l + r) >> 1;\n    if(x <= mid) ma(LSON, x, y, z, p);\n    if(y > mid) ma(RSON, x, y, z, p);\n    return pushup(rt);\n}\nvoid mb(int rt, int l, int r, int x, int y, int z, int p) {\n    if(x <= l && r <= y) return ub(rt, l, r, z, p);\n    pushdown(rt, l, r); int mid = (l + r) >> 1;\n    if(x <= mid) mb(LSON, x, y, z, p);\n    if(y > mid) mb(RSON, x, y, z, p);\n    return pushup(rt);\n}\nvoid ms(int rt, int l, int r, int x, int y, int z) {\n    if(x <= l && r <= y) return us(rt, l, r, z);\n    pushdown(rt, l, r); int mid = (l + r) >> 1;\n    if(x <= mid) ms(LSON, x, y, z);\n    if(y > mid) ms(RSON, x, y, z);\n    return pushup(rt);\n}\nint query(int rt, int l, int r, int x, int y, int p) {\n    if(x <= l && r <= y) return ADD(t[rt].s, 1ll * t[rt].ss * p % MOD);\n    pushdown(rt, l, r); int mid = (l + r) >> 1;\n    if(x > mid) return query(RSON, x, y, p);\n    if(y <= mid) return query(LSON, x, y, p);\n    return ADD(query(LSON, x, y, p), query(RSON, x, y, p));\n}\ninline void fix(int &x) {(((x %= MOD) += MOD) >= MOD) && (x -= MOD);}\nsigned main(){\n    read(n, m); rep(i, 1, n) {\n        read(v[i], a[i], b[i]);\n        fix(v[i]); fix(a[i]); fix(b[i]);\n    }\n    build(1, 1, n);\n\twhile(m --) { int t, opt, l, r; read(opt, t, l, r); fix(t);\n        if(opt == 1) print(query(1, 1, n, l, r, t));\n        else {\n\t\t\tint x; read(x); fix(x); t = 1ll * t * x % MOD;\n            if(opt == 2) ma(1, 1, n, l, r, x, t);\n            elif(opt == 3) mb(1, 1, n, l, r, x, t);\n            else ms(1, 1, n, l, r, x);\n\t\t} \n\t}\n\n}\n```\n\n",
        "postTime": 1628730794,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P5009 [yLOI2018] \u4e0d\u8001\u68a6\u3011"
    }
]