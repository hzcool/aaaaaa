[
    {
        "content": "~~\u6211\u7684\u59b9\u5b50\u5f53\u7136\u8981\u6211\u5199\u4e2a\u9898\u89e3\u554a~~\n\n\u5176\u5b9e\u6211\u662f\u6ca1\u6709\u59b9\u5b50\u7684\u3002\u3002\u3002\n\n\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u7ebf\u6bb5\u6811\u5355\u70b9\u67e5\u8be2\u533a\u95f4\u4fee\u6539\uff0c\u4e0d\u8fc7\u597d\u50cf\u6bd4\u8d5b\u7684\u65f6\u5019\u597d\u591a\u4eba\u5bf9\u9898\u9762\u6709\u95ee\u9898\u554a\u3002\u3002\u3002\n\n\u6211\u73b0\u5728\u6765\u89e3\u91ca\u4e00\u4e0b\u9898\u9762\u597d\u5427\n* \u9752\u6885\u7af9\u9a6c\u4eec\u90fd\u559c\u6b22\u6211~~\uff08\u9003\uff09~~\n* \u9752\u6885\u7af9\u9a6c\u6ca1\u6709\u7279\u6743\uff0c\u957f\u5927\u4e4b\u540e\u4e5f\u662f\u59b9\u5b50\uff0c\u4f1a\u88ab\u5176\u4ed6\u59b9\u5b50\u8d76\u8d70\n* \u6bcf\u4e2a\u57ce\u5e02\u53ea\u80fd\u6709\u4e00\u4e2a\u59b9\u5b50\uff0c\u59b9\u5b50\u7684\u5b58\u5728\u4e0d\u662f\u6309\u989c\u503c\u6765\u7684\uff0c\u8c01\u540e\u6765\u8c01\u5c31\u53ef\u4ee5\u5f85\u5728\u90a3\u4e2a\u57ce\u5e02\n* y\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff0c\u4e24\u4e2ay\u90fd\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff0c\u4f46\u662f\u51fa\u9898\u4eba\u5fd8\u8bb0\u6539\u4e0b\u9762\u7684\u9650\u5236\u4e86\u3002\u3002\u3002\u4e0d\u8fc7\u8bb2\u771f\u6ca1\u5565\u5f71\u54cd\uff0c\u5f00\u4e2along long\u53ef\u4ee5\u89e3\u51b3\u4e00\u5207\u95ee\u9898\n* I x y\u64cd\u4f5c\u4e2dy\u6709\u4e3a0\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u5343\u4e07\u4e0d\u8981\u7528\u6743\u503c\u6765\u5224\u662f\u5426\u5b58\u5728~~\uff08\u4e0d\u4f1a\u6709\u4eba\u7528\u6743\u503c\u5224\u7684\u5427\uff09~~\n* D x y\u64cd\u4f5c\u662f\u6307\u7b2cx\u4e2a\u59b9\u5b50\uff0c\u4e0d\u662f\u7b2cx\u4e2a\u57ce\u5e02\u3002\u3002\u3002\u90a3\u4e9b\u6709\u59b9\u5b50\u7684\u57ce\u5e02\u4ece\u7f16\u53f7\u5c0f\u5230\u5927\u6570\u7b2cx\u4e2a\uff0c\u4e0d\u662f\u6307\u64cd\u4f5c\u987a\u5e8f\u7684\u7b2cx\u4e2a\n* \u57ce\u5e02\u7f16\u53f7\u4e0d\u662f1~n\uff0c\u8bb0\u4f4f\u8fd9\u4e00\u70b9\n\n\u6240\u4ee5\u53ea\u6709\u5220\u9664\u64cd\u4f5c\u9ebb\u70e6\u70b9\uff0c\u591a\u51e0\u4e2acnt\u6570\u7ec4\u5c31\u597d\u3002\u4f46\u662f\u5982\u679c\u6ca1\u6709\u5220\u9664\u64cd\u4f5c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f00\u4e2a\u6570\u5217\uff0c\u7ebf\u6bb5\u6811\u90fd\u4e0d\u8981\u4e86\u3002\u3002\u3002\n\n\u7136\u540e\u5c31\u8d34\u4ee3\u7801\u5427\n``` cpp\n/*program from Wolfycz*/\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define inf 0x7f7f7f7f\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int ui;\ntypedef unsigned long long ull;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    for (;ch<'0'||ch>'9';ch=getchar())\tif (ch=='-')    f=-1;\n    for (;ch>='0'&&ch<='9';ch=getchar())\tx=(x<<1)+(x<<3)+ch-'0';\n    return x*f;\n}\ninline void print(int x){\n    if (x>=10)\tprint(x/10);\n    putchar(x%10+'0');\n}\nconst int N=1e5;\nint val[(N<<1)+10];\nstruct Segment{\n    #define ls (p<<1)\n    #define rs (p<<1|1)\n    struct node{\n        int cnt;ll sum;\n        void insert(int _sum,int _cnt){sum=_sum,cnt=_cnt;}\n        node(){sum=cnt=0;}\n    }tree[(N<<3)+10];\n    friend node operator +(const node &x,const node &y){\n        node z;\n        z.sum=x.sum+y.sum;\n        z.cnt=x.cnt+y.cnt;\n        return z;\n    }\n    void build(int p,int l,int r){\n        if (l==r){\n            tree[p].insert(val[l],(bool)val[l]);\n            return;\n        }\n        int mid=(l+r)>>1;\n        build(ls,l,mid),build(rs,mid+1,r);\n        tree[p]=tree[ls]+tree[rs];\n    }\n    void change(int p,int l,int r,int x,int v){\n        if (l==r){\n            tree[p].insert(v,1);\n            return;\n        }\n        int mid=(l+r)>>1;\n        if (x<=mid)\tchange(ls,l,mid,x,v);\n        else\tchange(rs,mid+1,r,x,v);\n        tree[p]=tree[ls]+tree[rs];\n    }\n    void insert(int p,int l,int r,int x,int v){\n        if (l==r){\n            tree[p].sum-=v;\n            return;\n        }\n        int mid=(l+r)>>1;\n        if (x<=mid)\tinsert(ls,l,mid,x,v);\n        else\tinsert(rs,mid+1,r,x,v);\n        tree[p]=tree[ls]+tree[rs];\n    }\n    void Delete(int p,int l,int r,int x){\n        if (l==r){\n            tree[p].insert(0,0);\n            return;\n        }\n        int mid=(l+r)>>1;\n        if (x<=tree[ls].cnt)\tDelete(ls,l,mid,x);\n        else\tDelete(rs,mid+1,r,x-tree[ls].cnt);\n        tree[p]=tree[ls]+tree[rs];\n    }\n}Tree;\nchar s[2];\nint main(){\n    int n=read(),m=read();\n    for (int i=1;i<=n;i++)\tval[i]=read();\n    Tree.build(1,1,N<<1);\n    for (int i=1;i<=m;i++){\n        scanf(\"%s\",s);\n        if (s[0]=='C'){\n            int x=read(),y=read();\n            Tree.insert(1,1,N<<1,x,y);\n        }\n        if (s[0]=='I'){\n            int x=read(),y=read();\n            Tree.change(1,1,N<<1,x,y);\n        }\n        if (s[0]=='D'){\n            int x=read();\n            Tree.Delete(1,1,N<<1,x);\n        }\n        if (s[0]=='Q')\tprintf(\"%lld\\n\",Tree.tree[1].sum);\n    }\n    return 0;\n}\n```",
        "postTime": 1536541819,
        "uid": 21633,
        "name": "Wolfycz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "## \u8fd9\u4e48\u597d\u7684\u4e00\u9053\u5206\u5757\u9898\u600e\u4e48\u80fd\u6ca1\u6709\u5206\u5757\u7684\u9898\u89e3\u5462QAQ\n\n\u5c0f\u849f\u84bb\u5c31\u4e0d\u591a\u5e9f\u8bdd\u4e86\uff0c\u76f4\u63a5\u8fdb\u5165\u6b63\u9898:\n\n\u5bf9\u4e8eQ\uff0cC\uff0cI\uff0cD\u8fd9\u56db\u79cd\u64cd\u4f5c\n\n**Q\u64cd\u4f5c**\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u533a\u95f4\u6c42\u548c\uff0c\u7ef4\u62a4\u4e00\u4e2aans\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\n\n**C\u64cd\u4f5c**\u76f4\u63a5\u4fee\u6539\u5c31\u884c\u4e86\uff08\u522b\u5fd8\u4e86\u7ef4\u62a4ans\u6570\u7ec4\uff09\n\n**D\u64cd\u4f5c**\u53ef\u80fd\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\uff0c\u52a8\u6001\u5220\u70b9\u8fd9\u79cd\u4e1c\u897f\u4e00\u770b\u5c31\u70e6\u4eba\u5440qwq\uff0c\u6240\u4ee5\u5c0f\u849f\u84bb\u56fe\u4e2a\u7701\u4e8b\u5c31\u76f4\u63a5\u5427\u6240\u6709\u7684\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u70b9\u90fd\u52a0\u8fdb\u53bb\u4e86\uff0c\u5220\u9664\u7684\u65f6\u5019\u53ea\u8981\u628a\u8981\u5220\u7684\u90a3\u4e2a\u70b9\u7684\u6570\u503c\u6e05\u96f6\uff0c\u518d\u4e0b\u4e2a\u6807\u8bb0\u5c31\u597d\u4e86\n\n\u90a3\u4e48\u6709dalao\u53ef\u80fd\u8981\u95ee\u4e86\uff0c\u4f60\u4e2a\u849f\u84bb**\u600e\u4e48\u627e\u5230\u7b2cx\u4e2a\u59b9\u5b50**\u5440\uff1f\u5176\u5b9e\u8fd9\u4e5f\u597d\u529e\uff0c\u7ef4\u62a4\u4e00\u4e2ageshu\u6570\u7ec4\u4fdd\u5b58\u6bcf\u4e2a\u5757\u5185\u7684\u59b9\u5b50\u7684\u6570\u91cf\uff0c\u548c\u59b9\u5b50\u5206\u624b\uff08\u5220\u70b9\uff09\u7684\u65f6\u5019\u5c31\u628a\u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u5757\u7684**geshu--** \u8fd9\u6837\u627e\u7b2cx\u4e2a\u59b9\u5b50\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4ece\u5934\u5f00\u59cb\u627e\uff0c\u4e00\u6b21\u52a0\u4e0a\u4e00\u4e2a\u5757\u7684\u59b9\u5b50\u6570\u91cf\uff0c\u76f4\u5230\u627e\u5230\u7b54\u6848\u6240\u5728\u7684\u5757\uff0c\u7136\u540e\u518d\u66b4\u529b\u53bb\u627e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u6837**I\u64cd\u4f5c**\u4e5f\u4e0d\u96be\u4e86\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u6709\u59b9\u5b50\u7684\u8bdd\u5c31\u76f4\u63a5\u4fee\u6539\uff0c\u7ef4\u62a4ans\uff0c\u53cd\u4e4b\u5982\u679c\u8fd9\u4e2a\u70b9\u73b0\u5728\u6ca1\u6709\u59b9\u5b50\uff0c\u90a3\u4e48\u8ba9\u8fd9\u4e2a\u70b9\u6240\u5728\u5757\u7684**geshu++**\u5c31\u597d\u4e86\u3002\n\n\u4f60\u770b\u5c0f\u849f\u84bb\u8fa3\u4e48\u83dc\uff0c\u4e5f\u6ca1\u591a\u5c11\u65f6\u95f4\u53bb\u7ec6\u60f3\uff0c\u5c31\u6ca1\u600e\u4e48\u53bb\u4f18\u5316\uff0c\u60f3\u5fc5\u5404\u4f4ddalao\u4e00\u5b9a\u53ef\u4ee5\u60f3\u51fa\u66f4\u4f18\u79c0\u7684\u5206\u5757\u505a\u6cd5\u5440qwq\n\n**\uff08\u8981\u662f\u6709\u4ec0\u4e48\u66f4\u597d\u7684\u5206\u5757\u60f3\u6cd5\u6216\u8005\u6709\u5bf9\u5c0f\u849f\u84bb\u7a0b\u5e8f\u7684\u4f18\u5316\u548c\u5efa\u8bae\u8fd8\u8bf7\u4e00\u5b9a\u8981\u79c1\u4fe1\u6211\u5440qwq\uff09**\n\n\u90a3\u4e48\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define re register\n#define FOR(i,l,r) for(re ll i=l;i<=r;++i)\n#define maxn 200010\n#define ll long long\nusing namespace std;\n\nll n,m,r,t,x,y,z,sq,now;\nll a[maxn],b[maxn],c[maxn],tag[maxn],bl[maxn],geshu[maxn],ans[maxn];\nchar ch;\n\ninline void in(ll &x){ //\u65e0\u5904\u4e0d\u5728\u7684\u5feb\u8bfb\n    x=0;ll f=1;char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c==-1) return;\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c<='9'&&c>='0'){\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n    x=x*f;\n}\n\ninline void out(ll a){\n    if(a<0){\n        a*=-1;\n        putchar('-');\n    }\n    if(a>=10)out(a/10);\n    putchar(a%10+'0');\n}\n\nll query(ll x,ll y){ //\u533a\u95f4\u6c42\u548c\n\tll res=0;\n\tFOR(i,x,min(y,b[x]*sq))\n\t  res+=a[i];\n\tif(b[x]!=b[y])\n\t  FOR(i,(b[y]-1)*sq+1,y)\n\t    res+=a[i];\n\tFOR(i,b[x]+1,b[y]-1)\n\t  res+=ans[i]+sq*tag[i];\n\treturn res;\n}\n\nll sss(ll x){  //\u5df2\u77e5\u59b9\u5b50\u5e8f\u53f7\u627e\u8be5\u59b9\u5b50\u6240\u5728\u7684\u57ce\u5e02\n\tll res=0;\n\tll rt=1;\n\twhile(res+geshu[rt]<x){\n\t\tres+=geshu[rt];\n\t\t++rt;\n\t}\n\tFOR(i,(rt-1)*sq+1,min(n,rt*sq)){\n\t\tif(bl[i]==0){\n\t\t\t++res;\n\t\t}\n\t\tif(res==x){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(){\n\tin(now),in(m);\n\tn=200001;\n\tsq=sqrt(n);\n\tFOR(i,1,n){  //\u9884\u5904\u7406\n\t\tb[i]=(i-1)/sq+1;\n\t\tif(i>now)\n\t\t  bl[i]=1;\n\t}\n\tFOR(i,1,now){\n\t\tin(a[i]),geshu[b[i]]++,ans[b[i]]+=a[i]; \n\t}\t\n\tFOR(i,1,m){\n\t\tcin>>ch;\n\t\tif(ch=='Q'){\n\t\t\tout(query(1,now)); //\u4e00\u70b9\u6bdb\u75c5\u6ca1\u6709\u7684\u6c42\u548c \n\t\t\tputs(\"\");\n\t\t}\n\t\tif(ch=='C'){ //\u65e0\u61c8\u53ef\u51fb\u7684\u4fee\u6539 \n\t\t\tin(x),in(y);\n\t\t\tif(!bl[x]){ //bl\u4e3a0\u4ee3\u8868\u6709\u59b9\u5b50 \n\t\t\t\ta[x]-=y;\n\t\t\t\tans[b[x]]-=y;\t\n\t\t\t} \n\t\t}\n\t\tif(ch=='D'){\n\t\t\tin(x);\n\t\t\tll cs=sss(x); // \u7b2cx\u4e2a\u59b9\u5b50\u6240\u5728\u7684\u57ce\u5e02\n\t\t\tans[b[cs]]-=a[cs]; \n\t\t\ta[cs]=0;\n\t\t\tbl[cs]=1; //\u6807\u8bb0\u8fd9\u4e2a\u57ce\u5e02\u6ca1\u6709\u59b9\u5b50\u4e86 \n\t\t\t--geshu[b[cs]];\n\t\t}\n\t\tif(ch=='I'){ \n\t\t\tin(x),in(y);\n\t\t\tans[b[x]]-=a[x];\n\t\t\ta[x]=y;\n\t\t\tans[b[x]]+=a[x];\n\t\t\tif(bl[x]==1){//\u5982\u679c\u8fd9\u4e2a\u57ce\u5e02\u6ca1\u6709\u59b9\u5b50 \n\t\t\t\t++geshu[b[x]];\n\t\t\t\tbl[x]=0;\n\t\t\t}  \n\t\t\tif(x>now)  \n\t\t\t  now=x;\n\t\t}\n\t}\n\treturn 0;//\u529f\u5fb7\u5706\u6ee1\u3002\n}\n```\n**\u6700\u540e\u795d\u5927\u5bb6NOIP RP++\uff01**",
        "postTime": 1539047410,
        "uid": 66965,
        "name": "Juan_feng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "\u6211\u6df1\u611f$Wolfycz$\u7684\u4ee3\u7801\u5199\u7684\u592a\u6f02$(chou)$\u4eae$(lou)$\u4e86\uff0c\u56e0\u6b64\u6211\u51b3\u5b9a\u6211\u4e5f\u8981\u6765\u53d1\u4e00\u7bc7\u535a\u5ba2...\n\n\u8fd9\u9898$70$\u5206\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u66b4\u529b\u5c31\u597d\u4e86....\n\n\u7136\u540e\u90a3\u4e2a$30$\u7684\u505a\u6cd5...\u66b4\u529b\u5206\u771f\u7684\u867e\u6377\u8c79\u7ed9\u7684...\n\n\u8fd9\u4e2a\u662f\u66b4\u529b\u4ee3\u7801...\n\n**code:**\n\n```cpp\n/*Program from Luvwgyx*/\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=100010;\nint n,m,a[maxn];char s[10];\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint main(){\n    n=read();m=read();\n    for(int i=1;i<=n;i++)a[i]=read();\n    for(int i=1;i<=m;i++){\n        scanf(\"%s\",s+1);\n        if(s[1]=='C'){\n            int x=read(),y=read();\n            a[x]-=y;\n        }\n        if(s[1]=='I'){\n            int x=read(),y=read();\n            a[x]=y;\n        }\n        if(s[1]=='D'){\n            int cnt=0,pos,x=read();\n            for(int i=1;i<=maxn-10;i++)\n                if(a[i]){cnt++;if(cnt==x){pos=i;break;}}\n            a[pos]=0;\n        }\n        if(s[1]=='Q'){\n            int ans=0;\n            for(int i=1;i<=maxn-10;i++)\n                ans+=a[i];\n            printf(\"%d\\n\",ans);\n        }\n    }\n    return 0;\n}\n```\n\n\u7136\u540e$100$\u5206\u7684\u505a\u6cd5\u7684\u8bdd\uff0c\u5176\u5b9e\u7ebf\u6bb5\u6811\u5c31\u597d\u4e86...\n\n\u8fd9\u9898\u9898\u9762\u662f\u6211\u7ed9\u7684~~(Wolfycz\u6539\u7684)~~\uff0c\u4f60\u4eec\u8981\u9a82\u5c31\u9a82\u6211~~(\u4ed6)~~\u5427...(\u867d\u7136\u6211\u4e2a\u4eba\u89c9\u5f97\u6ca1\u5565\u95ee\u9898...)\n\n\u8fd9\u9898\u5927\u5bb6\u73c2\u80fd\u56e0\u4e3a\u6211\u8bf4\u662f\u7b7e\u5230\u9898\u7684\u539f\u56e0\uff0c\u6ca1\u4ed4\u7ec6\u770b\u9898...\n\n\u6211\u4e4b\u524d\u7684\u63cf\u8ff0\u662f\u7b2c$x$\u4e2a\u57ce\u5e02\u7684\u59b9\u5b50\uff0c\u800c\u540e\u9762$D\\ x$\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u7684\u63cf\u8ff0\u662f\u7b2c$x$\u4e2a\u59b9\u5b50\uff0c\u5927\u5bb6\u7adf\u7136\u6ca1\u53d1\u73b0\u4e0d\u5bf9\u52b2.../\u6c57\n\n\u7136\u540e\u5176\u5b9e\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u5b58\u4e0b\u6765\u533a\u95f4\u548c\u4ee5\u53ca\u8fd9\u4e2a\u533a\u95f4\u5185\u59b9\u5b50\u7684\u4e2a\u6570\uff0c\u7136\u540e\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u5c31\u597d\u4e86...\n\n\u6ce8\u610f\uff1a$delete$\u7684\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u5224\u65ad\u662f\u8d70\u5de6\u8fb9\u8fd8\u662f\u8d70\u53f3\u8fb9\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u901a\u8fc7\u548c$mid$\u7684\u6bd4\u8f83\u6765\u5224\u65ad\uff0c\u800c\u662f\u5e94\u8be5\u4e0e\u5b58\u7740\u7684\u59b9\u5b50\u7684\u4e2a\u6570$tree[mid].cnt$\u6bd4\u8f83\u6765\u5224\u65ad...\u7136\u540e...\u5e94\u8be5\u5c31\u6ca1\u5565\u8981\u6ce8\u610f\u7684\u4e86...\n\n**code:**\n\n```cpp\n/*Program from Luvwgyx*/\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst ll maxn=2e5+10;\nll n,m,a[maxn];char s[10];\nstruct node{ll cnt,sum;}tree[maxn<<2];\nll read(){\n    ll x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid update(ll k){\n    tree[k].cnt=tree[k<<1].cnt+tree[k<<1|1].cnt;\n    tree[k].sum=tree[k<<1].sum+tree[k<<1|1].sum;\n    return;\n}\nvoid build(ll k,ll l,ll r){\n    if(l==r){\n        tree[k].sum=a[l];\n        if(a[l]!=0)tree[k].cnt++;\n        return ;\n    }\n    ll mid=(l+r)>>1;\n    build(k<<1,l,mid);\n    build(k<<1|1,mid+1,r);\n    update(k);\n}\nvoid change(ll k,ll l,ll r,ll x,ll y){\n    if(l==r){tree[k].sum-=y;/*prllf(\"\\n%d\\n\",l);*/return ;}\n    ll mid=(l+r)>>1;\n    if(x<=mid)change(k<<1,l,mid,x,y);\n    else change(k<<1|1,mid+1,r,x,y);\n    update(k);\n}\nvoid add(ll k,ll l,ll r,ll x,ll y){\n    if(l==r){tree[k].sum=y;tree[k].cnt=1;/*prllf(\"\\n%d\\n\",l);*/return ;}\n    ll mid=(l+r)>>1;\n    if(x<=mid)add(k<<1,l,mid,x,y);\n    else add(k<<1|1,mid+1,r,x,y);\n    update(k);\n}\nvoid del(ll k,ll l,ll r,ll x){\n    if(l>r)return ;//prllf(\"%d %d\\n\",l,r);\n    if(l==r&&x==tree[k].cnt){tree[k].sum=0;tree[k].cnt--;return ;}\n    ll mid=(l+r)>>1;//prllf(\"%d\\n\",tree[k<<1].cnt);\n    if(x<=tree[k<<1].cnt)del(k<<1,l,mid,x);\n    else del(k<<1|1,mid+1,r,x-tree[k<<1].cnt);\n    update(k);\n}\n/*\nvoid dfs(ll k,ll l,ll r){\n    if(l==r){if(tree[k].sum!=0)prllf(\"%d:%d \",l,tree[k].sum);return ;}\n    ll mid=(l+r)>>1;\n    dfs(k<<1,l,mid);dfs(k<<1|1,mid+1,r);\n}\n*/\nint main(){\n    //freopen(\"girl10.in\",\"r\",stdin);\n    //freopen(\"girl10.out\",\"w\",stdout);\n    n=read();m=read();\n    for(ll i=1;i<=n;i++)a[i]=read();\n    build(1,1,maxn-10);\n    while(m--){\n        scanf(\"%s\",s);\n        if(s[0]=='C'){ll x=read(),y=read();change(1,1,maxn-10,x,y);}\n        if(s[0]=='I'){ll x=read(),y=read();add(1,1,maxn-10,x,y);}\n        if(s[0]=='D'){ll x=read();del(1,1,maxn-10,x);}\n        if(s[0]=='Q')printf(\"%lld\\n\",tree[1].sum);\n        //dfs(1,1,maxn-10);puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1537019250,
        "uid": 43012,
        "name": "Luvwgyx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "# \u5927\u543c\u4e00\u58f0\uff1a\n## \u9047\u4e8b\u4e0d\u51b3\u5148\u5206\u5757\n\u7136\u540e\u5c31\u72d7\u5728\u673a\u5b50\u524d\u4e00\u4e0b\u5348\uff1b\n\u8fd9\u9053\u9898\uff0c\u5145\u5206\u8bc1\u660e\u8bfb\u9898\u7684\u91cd\u8981\u6027\uff1b\n#### \u5982\u679c\u4f60\u4ec5\u4ec5\u4ee5\u4e3a\u8fd9\u662f\u4e00\u9053\u5355\u70b9\u4fee\u6539\uff0c\u90a3\u4e48\u4f60\u5c31GG\u4e86\uff1b\n## \u9996\u5148\uff0c\u5206\u6790\u4e00\u4e0b\u9898\u9762\uff1a\n1\uff0cycz\u7684\u59b9\u5b50(\u9752\u6885\u7af9\u9a6c)\u8d77\u521d\u57281\u2014n\u53f7\u57ce\u5e02\u4e2d\uff1b\u4f46\u662f\uff0c\u7531\u4e8eycz\u7684\u9b45\u529b\u5f3a\u5927\uff0c\u5e8f\u5217\u540e\u9762\u7684\u59b9\u5b50\u4e5f\u4f1a\u5192\u51fa\u6765\uff0c\u6240\u4ee5\uff0c\u5e72\u8106\u76f4\u63a5\u628a\u8303\u56f4\u5b9a\u4f4d5e5(\u5e7f\u6492\u7f51\uff0c\u591a\u635e\u9c7c) \u96fe~      \u3002 \u54b3\u54b3\uff0c\u662f\u9898\u9762\u4fdd\u8bc1\u7684\uff1b\n\n2\uff0c\u9898\u9762\u8bf4\u4f1a\u6709\u8d1f\u503c\uff0c\u90a3\u4e48\u989c\u503c\u4e3a0\u7684\u4e5f\u4f1a\u6709\u54af\uff1b\u6240\u4ee5\u4e0d\u8981\u628a\u6743\u503c\u4f5c\u4e3a\u6709\u6216\u65e0\u7684\u6807\u5fd7\uff0c\u518d\u5f00\u4e2a\u6570\u7ec4\u5b58\u4e00\u4e0b\uff1b\n\n3\uff0c\u5bf9\u4e8e\u7f16\u53f7\u4e3aC\u7684\u4fee\u6539\uff0c\u76f4\u63a5\u4fee\u6539\uff0c\u6ce8\u610f\u628a\u5feb\u5185\u548c\u987a\u5e26\u6539\u4e00\u4e0b\uff1b\n\n4\uff0c\u5bf9\u4e8e\u7f16\u53f7\u4e3aI\u7684\u4fee\u6539\uff0c\u56e0\u4e3a\u4e00\u57ce\u4e0d\u5bb9\u4e8c\u5973(\u96be\u9053\u57ce\u5e02\u53ea\u6709\u4e24\u5ba4\u4e00\u5385\u90a3\u4e48\u5927 \u96fe )\uff0c\u540e\u6765\u7684\u4f1a\u9876\u8d70\u524d\u9762\u7684\uff0c\u4e5f\u5c31\u662f\u8986\u76d6\uff1b\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u4e2a\u4fee\u6539\uff0c\u8981\u5206\u6b64\u57ce\u5e02\u4e4b\u524d\u6709\u65e0\u59b9\u5b50\uff0c\u6709\u5c31\u76f4\u63a5\u8986\u76d6\uff0c\u987a\u5e26\u6539\u4e0b\u5feb\u5185\u548c\uff0c\u800c\u4e4b\u524d\u6ca1\u6709\uff0c\u90a3\u4e48\u5757\u4e2d\u7684\u59b9\u5b50\u4e2a\u6570\u8981\u52a0\u52a0\uff0c\u5e76\u4e14\u6b64\u57ce\u5e02\u522b\u6253\u4e0a\u6807\u8bb0\uff1b\n\n5\uff0c\u4e22\u4e0e\u7f16\u53f7\u4e3aD\u7684\u4fee\u6539\uff0c\u5e94\u4e3a\u627e\u7684\u662f\u7b2cX\u4e2a\u6709\u59b9\u5b50\u7684\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u6709\u5df2\u7ecf\u7ef4\u62a4\u597d\u7684\u5757\u5185\u59b9\u5b50\u4e2a\u6570\u6765\u8df3\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u5757\uff0c\u4fee\u6539\u5982\u4e0a\uff0c\u53ea\u662f\u8d4b0\u800c\u5df2\uff1b\n\n6\uff0c\u8be2\u95ee\u5c31\u662f\u5757\u7684\u548c\uff0c\u7b80\u5355\u4e00\u52a0\u5c31\u884c\n\n7\uff0c\u6700\u540e\u7684\u63d0\u9192\uff0c\u8981\u5f00long long\uff0c\u4e0d\u7136~\u5443\u5443\uff0c\u4f60\u77e5\u9053\u7684\uff1b\n### \u6700\u540e\uff0c\u5949\u4e0a\u6211\u7684\u4ee3\u7801\uff0c\u4e0d\u61c2\u6709\u6ce8\u91ca\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#define N 1000500\nusing namespace std;\n\nint n,m;\nlong long a[N],cnt[N],siz[N];//\u59b9\u5b50\u7684\u989c\u503c\uff0c\u662f\u5426\u6709\u59b9\u5b50\uff0c\u5757\u5185\u59b9\u5b50\u6570\nint L[N],R[N],tag[N]; //\u5206\u5757\u7684\u7f16\u53f7\uff0c\u5de6\u53f3\u7aef\u70b9\uff1b\nlong long sum[N];//\u59b9\u5b50\u548c\nint len,opt;//\u6492\u7f51\u8303\u56f4\n\n//\u4fee\u65391\uff0c\u7b80\u5355\u4fee\u6539\ninline void Change_C(int x,int y) {\n\tif(!cnt[x]) return ;\n\tsum[tag[x]] -= a[x];\n\ta[x] -= y;\n\tsum[tag[x]] += a[x];\n}\n\n//\u4fee\u65392\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u987a\u5e26\u7ef4\u62a4\ninline void Change_I(int x,int y) {\n\tif(cnt[x]) {\n\t\tsum[tag[x]] -= a[x];\n\t\ta[x] = y;\n\t\tsum[tag[x]] += a[x];\n\t}\n\telse {\n\t\tcnt[x] = 1;\n\t\tsum[tag[x]] -= a[x];\n\t\ta[x] = y;\n\t\tsum[tag[x]] += a[x];\n\t\tsiz[tag[x]] += 1;\n\t}\n}\n\n//\u8df3\u59b9\u5b50\uff0c\u627e\u5757\u5e76\u4fee\u6539\ninline void Change_D(int x) {\n\tint teg = 1;\n\twhile(x - siz[teg] > 0) x -= siz[teg],teg ++;\n\tfor(int i = L[teg];i <= R[teg];i ++) {\n\t\tif(x - cnt[i] == 0){\n\t\t\tsiz[teg] --;\n\t\t\tsum[teg] -= a[i];\n\t\t\tcnt[i] = a[i] = 0;\n            //\u522b\u5fd8\u8d4b0\n\t\t\treturn ;\n\t\t}\n\t\telse x -= cnt[i];\n\t} \n}\n\ninline long long Qurry() {\n\tlong long res = 0;\n\tfor(int i = 1;i <= tag[opt];i ++)\n\t\tres += sum[i];\n\treturn res;\n}\n\nint main() {\n\topt = 500000;//\u5e7f\u6492\u7f51\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= n;i ++)\n\t\tscanf(\"%d\",&a[i]),cnt[i] = 1;\n        //\u9752\u6885\u7af9\u9a6c\u662f\u559c\u6b22ycz\u7684\uff0c\u76f4\u63a5\u8d4b1\n\tlen = sqrt(opt);\n\tfor(int i = 1;i <= opt;i ++) \n\t\ttag[i] = (i - 1) / len + 1;\n\tfor(int i = 1;i <= tag[opt];i ++)\n\t\tL[i] = R[i - 1] + 1,R[i] = min(L[i] + len - 1,opt);\n        //\u5904\u7406\u5de6\u53f3\u7aef\u70b9\n\tfor(int i = 1;i <= tag[opt];i ++)\n\t\tfor(int j = L[i];j <= R[i];j ++)\n\t\t\tsum[i] += a[j],siz[i] += cnt[j];\n     //\u5206\u5757\u9884\u5904\u7406\n            \n\tfor(int i = 1;i <= m;i ++) {\n\t\tchar s[3]; int x,y; \n\t\tscanf(\"%s\",s + 1);\n\t\tif(s[1] == 'C') {\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tChange_C(x,y);\n\t\t}\n\t\tif(s[1] == 'I') {\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tChange_I(x,y);\n\t\t}\n\t\tif(s[1] == 'D') {\n\t\t\tscanf(\"%d\",&x);\n\t\t\tChange_D(x);\n\t\t}\n\t\tif(s[1] == 'Q') \n\t\t\tprintf(\"%lld\\n\",Qurry());\n\t}\n\treturn 0;\n}\n```\n\u5e0c\u671b\u53ef\u4ee5\u5e2e\u5230\u5927\u5bb6\uff1b\n\t\u559c\u6b22\u5206\u5757\u2014\u2014\u2014\u2014> [\u70b9\u6211](https://loj.ac/problems/search?keyword=%E5%88%86%E5%9D%97)\n\n## Update\n\u4e4b\u524d\u4ee3\u7801\u6709\u9505\uff0c\u5df2\u4fee\u6539\uff0c\u7ed9\u5927\u5bb6\u5e26\u6765\u4e0d\u4fbf\u8bf7\u8c05\u89e3QAQ\n",
        "postTime": 1569217830,
        "uid": 153839,
        "name": "\u6e05\u8fdc\u5b66\u4f1a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "\u5f53\u521d\u6bd4\u8d5b\u65f6\u5019\u7528\u4e86map\uff0c\u6210\u529f\u62ff\u5230\u66b4\u529b\u5206\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u62ff\u6765\u7ec3\u4e60\u975e\u5e38\u4e0d\u9519\uff0c~~\u5176\u5b9e\u5565\u4e1c\u897f\u90fd\u80fd\u5f80\u4e0a\u5957~~\n\n\u53ef\u4ee5\u628a\u6240\u6709\u3010\u6709\u59b9\u5b50\u7684\u3011\u57ce\u5e02\u7684\u3010\u7f16\u53f7\u3011\u770b\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u7b2cx\u4e2a\u59b9\u5b50\u5c31\u662f\u5e8f\u5217\u7b2ck\u5927\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u52a8\u6001\u6574\u4f53\u7b2ck\u5927\u5c31\u597d\u4e86\u3002\n\n~~\u6240\u4ee5\u603c\u4e00\u9897\u652f\u6301rank\u7684\u5e73\u8861\u6811\u3002\uff08\u53d8\u91cf\u53ef\u8bfb\u6027\u5e94\u8be5\u4e0d\u9519\u3010\u4e3a\u4e0d\u52a0\u6ce8\u91ca\u627e\u501f\u53e3\u3011\uff09~~\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <stack>\n\n#ifndef  nullptr\n\n#define nullptr NULL\n\n#endif // ! nullptr\n\nusing namespace std;\ninline int max(int a, int b)\n{\n\treturn a > b ? a : b;\n}\ninline int min(int a, int b)\n{\n\treturn a < b ? a : b;\n}\nenum sonptr\n{\n\tls = 0, rs = 1\n};\nclass node\n{\npublic:\n\tint size;\n\tint v;\n\t//bool erased;\n\tnode* son[2];\n\tnode(int _v = 0) :v(_v), size(1) {\n\t\tson[ls] = son[rs] = nullptr;\n\t};\n\tinline void update()\n\t{\n\t\tsize = 1;\n\t\tif (son[ls]) {\n\t\t\tsize += son[ls]->size;\n\t\t}\n\t\tif (son[rs]) {\n\t\t\tsize += son[rs]->size;\n\t\t}\n\t}\n\tinline void clear()\n\t{\n\t\tv = 0;\n\t\tsize = 1;\n\t\tson[ls] = son[rs] = nullptr;\n\t}\n\tinline int ls_size()const\n\t{\n\t\treturn son[ls] ? son[ls]->size : 0;\n\t}\n};\nconst int kmaxn = 500000 + 5;\nnode mempool[kmaxn];\nstack<node*> garbage_collector;\nint mpt;\nnode* malloc_node(int v)\n{\n\tnode* t = nullptr;\n\tif (!garbage_collector.empty())\n\t{\n\t\tt = garbage_collector.top();\n\t\tgarbage_collector.pop();\n\t\tt->clear();\n\t\tt->v = v;\n\t}\n\telse if (mpt >= kmaxn)\n\t\tt = new node(v);\n\telse\n\t{\n\t\tt = &mempool[mpt++];\n\t\tt->v = v;\n\t}\n\treturn t;\n}\ninline void free_node(node*& p)\n{\n\tgarbage_collector.push(p);\n}\nclass balance_tree\n{\n\tbalance_tree(balance_tree&);\npublic:\n\tdouble alpha;\n\tnode* root;\n\tvector<node*> vec;\n\tbalance_tree(double _alpha = 0.75) :alpha(_alpha), root(nullptr) {}\n\tinline const bool bad(node* p)const\n\t{\n\t\treturn max(p->ls_size(), p->son[rs] ? p->son[rs]->size : 0) > p->size*alpha;\n\t}\n\tnode** basic_insert(int v, node*& p);\n\tvoid insert(int v);\n\tvoid travel(node* p);\n\tnode* rebuild(int l, int r);\n\tbool basic_erase(int v, node*& p);//true means erased\n\tinline bool erase(int v);\n\tint get_rank(int v);\n\tint get_value_by_rank(int k);\n\tint upper_bound(int v);\n\tint lower_bound(int v);\n};\nnode** balance_tree::basic_insert(int v, node*& p)\n{\n\tif (!p)\n\t{\n\t\tp = malloc_node(v);\n\t\treturn nullptr;\n\t}\n\t++p->size;\n\tnode** t = basic_insert(v, p->son[(v >= p->v)]);\n\tif (bad(p))\n\t\tt = &p;\n\treturn t;\n}\nvoid balance_tree::insert(int v)\n{\n\tnode** t = basic_insert(v, root);\n\tif (t)\n\t{\n\t\tvec.clear();\n\t\tvec.reserve((*t)->size + 5);\n\t\ttravel(*t);\n\t\t*t = rebuild(0, vec.size());\n\t}\n}\nvoid balance_tree::travel(node* p)\n{\n\tif (!p)\n\t\treturn;\n\ttravel(p->son[ls]);\n\tvec.push_back(p);\n\ttravel(p->son[rs]);\n}\nnode* balance_tree::rebuild(int l, int r)\n{\n\tif (l >= r)\n\t\treturn nullptr;\n\tint mid = (l + r) >> 1;\n\tnode* t = vec[mid];\n\tt->son[ls] = rebuild(l, mid);\n\tt->son[rs] = rebuild(mid + 1, r);\n\tt->update();\n\treturn t;\n}\nbool balance_tree::basic_erase(int v, node*& p)\n{\n\tif (p->v == v)\n\t{\n\t\tif (!(p->son[ls] && p->son[rs]))\n\t\t{\n\t\t\tfree_node(p);\n\t\t\tp = p->son[bool(p->son[rs])];\n\t\t\t//return true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t--p->size;\n\t\t\tbool c = p->ls_size() < (p->son[rs] ? p->son[rs]->size : 0);\n\t\t\tnode** t = &(p->son[c]);\n\t\t\tc = !c;\n\t\t\twhile ((*t)->son[c])\n\t\t\t{\n\t\t\t\t--(*t)->size;\n\t\t\t\tt = &(*t)->son[c];\n\t\t\t}\n\t\t\tp->v = (*t)->v;\n\t\t\tfree_node(*t);\n\t\t\t*t = (*t)->son[!c];\n\t\t}\n\t\treturn true;\n\t}\n\tif (basic_erase(v, p->son[v > p->v])) {\n\t\t--p->size;\n\t\treturn true;\n\t}\n\telse\n\t\treturn false;\n}\ninline bool balance_tree::erase(int v)\n{\n\treturn basic_erase(v, root);\n}\nint balance_tree::get_rank(int v)\n{\n\tint rk = 0;\n\tnode* p = root;\n\twhile (p)\n\t{\n\t\tif (v > p->v)\n\t\t{\n\t\t\trk += p->ls_size() + 1;\n\t\t\tp = p->son[rs];\n\t\t}\n\t\telse\n\t\t\tp = p->son[ls];\n\t}\n\treturn rk + 1;\n}\nint balance_tree::get_value_by_rank(int k)\n{\n\tint rk = 0;\n\tnode* p = root;\n\twhile (p)\n\t{\n\t\tif (rk + p->ls_size() + 1 < k)\n\t\t{\n\t\t\trk += p->ls_size() + 1;\n\t\t\tp = p->son[rs];\n\t\t}\n\t\telse if (rk + p->ls_size() >= k)\n\t\t{\n\t\t\tp = p->son[ls];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn p->v;\n\t\t}\n\t}\n\treturn 0;\n}\nint balance_tree::upper_bound(int v)\n{\n\treturn get_value_by_rank(get_rank(v + 1));\n}\nint balance_tree::lower_bound(int v)\n{\n\t//cout << get_rank(v) << endl;\n\treturn get_value_by_rank(get_rank(v) - 1);\n}\n#define reg register\nint n,m;\nbalance_tree sbt;\nlong long data[kmaxn];\nlong long maxjoy;\nbool exist[kmaxn];\ninline void read(int& i)\n{\n    scanf(\"%d\",&i);\n}\ninline void readchar(char& ch)\n{\n    do\n    {\n        ch=getchar();\n    }while(ch=='\\n'||ch=='\\r'||ch==' ');\n}\nvoid leave(int x)\n{\n\tint pos=sbt.get_value_by_rank(x);\n\tmaxjoy-=data[pos];\n\tdata[pos]=0;\n\tsbt.erase(pos);\n\texist[pos]=false;\n}\nint main()\n{\n\tread(n);\n\tread(m);\n\tfor(reg int i=1;i<=n;++i)\n    {\n        //cin>>data[i];\n        scanf(\"%lld\",&data[i]); \n        maxjoy+=data[i];\n        exist[i]=true;\n        sbt.insert(i);\n    }\n    reg char opt;\n    reg int x,y;\n    ++m;\n    while(--m)\n    {\n        //cin>>opt;\n        readchar(opt);\n        switch(opt)\n        {\n            case 'C':\n                //cin>>x>>y;\n                read(x);\n                read(y);\n                maxjoy-=y;\n                data[x]-=y;\n                break;\n            case 'I':\n                //cin>>x>>y;\n                read(x);\n                read(y);\n                if(exist[x])\n                    maxjoy-=data[x];\n                else{\n                \texist[x]=true;\n                \tsbt.insert(x);\n                }\n                data[x]=y;\n                maxjoy+=y;\n                break;\n            case 'D':\n                //cin>>x;\n                read(x);\n                leave(x);\n                break;\n            case 'Q':\n                //cout<<maxjoy<<endl;\n                printf(\"%lld\\n\",maxjoy);\n                break;\n        }\n    }\n\treturn 0;\n}\n```\n\n~~\u8dd1\u7684\u6ca1\u6709\u5206\u5757\u5feb~~\n\n\u8865\u5145\u4e00\u4e2a\u5206\u5757\u7684\u4ee3\u7801\uff0c\u5e94\u8be5\u8fd8\u7b97\u7b80\u6d01\u3002\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cmath>\n#define reg register\nusing namespace std;\nconst int kmaxn=500000+25;\nlong long data[kmaxn];\nbool exist[kmaxn];\nint block[kmaxn];\nint belong[kmaxn];\nint n,m;\nint block_num,block_size;\nlong long maxjoy=0;\ninline void leave(const int& x)\n{\n    reg int rk=0;\n    for(reg int i=1;i<=block_num+10;++i)\n    {\n        if(rk+block[i]>=x)//find\n        {\n            --block[i];\n            i=block_size*(i-1)+1;//begin pos\n            for(;rk<x;++i)\n            {\n                if(exist[i])\n                    ++rk;\n            }\n            --i;\n            maxjoy-=data[i];\n            data[i]=0;\n            exist[i]=false;\n            return;\n        }\n        else\n            rk+=block[i];\n    }\n}\ninline void read(int& i)\n{\n    scanf(\"%d\",&i);\n}\ninline void readchar(char& ch)\n{\n    do\n    {\n        ch=getchar();\n    }while(ch=='\\n'||ch=='\\r'||ch==' ');\n}\nint main()\n{\n    read(n);\n    read(m);\n    //block_size=5;\n    block_size=sqrt(kmaxn-1);\n    block_num=(kmaxn-1)/block_size+bool((kmaxn-1)%block_size);\n    for(reg int i=1;i<=n;++i)\n    {\n        //cin>>data[i];\n        scanf(\"%lld\",&data[i]); \n        maxjoy+=data[i];\n        exist[i]=true;\n    }\n    for(reg int i=1,j=1;i<kmaxn;++i)\n    {\n        if(i>j*block_size)\n            ++j;\n        belong[i]=j;\n        block[j]+=exist[i];\n    }\n    reg char opt;\n    reg int x,y;\n    while(m--)\n    {\n        //cin>>opt;\n        readchar(opt);\n        switch(opt)\n        {\n            case 'C':\n                //cin>>x>>y;\n                read(x);\n                read(y);\n                maxjoy-=y;\n                data[x]-=y;\n                break;\n            case 'I':\n                //cin>>x>>y;\n                read(x);\n                read(y);\n                if(exist[x])\n                {\n                    maxjoy-=data[x];\n                    --block[belong[x]];\n                }\n                exist[x]=true;\n                data[x]=y;\n                maxjoy+=y;\n                ++block[belong[x]];\n                break;\n            case 'D':\n                //cin>>x;\n                read(x);\n                leave(x);\n                break;\n            case 'Q':\n                //cout<<maxjoy<<endl;\n                printf(\"%lld\\n\",maxjoy);\n                break;\n        }\n    }\n    return 0;\n}\n```\n\n~~\u7ebf\u6bb5\u6811\u505a\u6cd5\u5199\u7684\u65e9\uff0c\u4ee3\u7801\u96be\u770b\u5c31\u4e0d\u53d1\u4e86~~",
        "postTime": 1546868433,
        "uid": 56184,
        "name": "_\u8679_",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "\u5f53\u6211\u53bb\u5e74\u5565\u90fd\u4e0d\u4f1a\u7684\u65f6\u5019\u505a\u4e86\u8fd9\u9053\u9898,\u7136\u540e\u7206\u96f6\u4e86  \n\u5982\u4eca\u60f3\u4e86\u8d77\u6765,\u4f5c\u6587\u4ee5\u8bb0\u4e4b  \n\n---\n\u5bf9\u4e8e$C$\u548c$I$\u64cd\u4f5c,\u6211\u4eec\u76f4\u63a5\u4fee\u6539\u539f\u6570\u7ec4,\u590d\u6742\u5ea6\u4e3a$O(1)$\uff0c\u5bf9\u4e8e$Query$\uff0c\u56e0\u4e3a\u53ea\u67e5\u8be2\u603b\u989c\u503c ~~(\u7531\u4e8e\u989c\u503c\u5b88\u6052\u5b9a\u5f8b)~~ \uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528$sum$\u6765\u7ef4\u62a4\uff1a  \n\n$C$\u64cd\u4f5c\u65f6$a[x]-=y,sum-=y$  \n$I$\u64cd\u4f5c\u65f6$sum+=y-a[x],a[x]=y$\n\n\u90a3\u6700\u9ebb\u70e6\u7684$D$\u64cd\u4f5c\u5462?  \n\u96be\u9053\u7206\u67e5?  \n\n\u6211\u4eec\u8bb0$c[i]$\u8868\u793a$i$\u524d\u9762\u6709\u7684\u5973\u53cb\u6570\uff0c\u90a3$c[i]$\u80af\u5b9a\u9012\u589e\uff0c\u6240\u4ee5\u518d**\u4e8c\u5206\u67e5\u627e**\u4e86,\u6709\u56e0\u4e3a\u5973\u53cb\u6570\u4f1a\u6539\u53d8,\u6240\u4ee5\u518d\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e86,\u5355\u6b21\u590d\u6742\u5ea6\u4e3a$O((logn)^2)$\uff0c\u867d\u7136\u603b\u590d\u6742\u5ea6\u4e3a$O(n(longn)^2)$,\u4f46\u56e0\u4e3a\u5e38\u6570\u5c0f,\u6210\u529f\u5f97\u5230\u4e86[\u4f60\u8c37\u7b2c\u4e8c](https://www.luogu.org/recordnew/show/19603774)\u7684\u6210\u7ee9(2019.06.03)\n\n$Code$\n```cpp// \nluogu-judger-enable-o2\n#include<cstdio>\ntypedef long long ll;\n\nconst int maxn = 500000 + 5;\nint n,m;\nll sum;\nll a[maxn];\nint c[maxn];\n\ninline int lowbit(int x) { return x&-x; }\n\ninline void add(int x,int y) {\n    while(x<=maxn) c[x]+=y,x+=lowbit(x);\n}\n//\u56e0\u4e3a\u540e\u6765\u7684\u59b9\u5b50\u57ce\u5e02\u7f16\u53f7\u53ef\u80fd\u4f1a\u5927\u4e8en,\u6240\u4ee5\u8981\"x<=maxn\"\ninline int ask(int x) {\n    int res=0;\n    while(x) res+=c[x],x-=lowbit(x);\n    return res;\n}\n\ntemplate<typename T>\ninline T read(T &a) {\n    int c,f=1;  a=0;\n    while((c=getchar()))  {\n        if(c=='-') f=-1;\n        if(c>='0'&&c<='9') break;\n    }\n    do {\n        a=a*10+c-'0';\n        c=getchar();\n    }while(c>='0'&&c<='9');\n    return a*=f;\n}\ninline char get() { int c; while((c=getchar())) if(c>'A'&&c<'Z') return c; }\n\ninline int query(int x) {\n    int l=1,r=maxn,mid;\n    while(l<r) {\n        mid=(l+r)>>1;\n        if(ask(mid)>=x) r=mid;\n        else l=mid+1;\n    }\n    //\u4e8c\u5206\u67e5\u627e\n    return r;\n}\n\nint main() {\n    ll x,y;\n    read(n); read(m);\n    for(register int i=1;i<=n;++i) {\n        read(a[i]),sum+=a[i];\n        add(i,1);\n        //\u8868\u793ai\u57ce\u5e02\u6709\u59b9\u5b50\n    }\n    while(m--) {\n        char cmd=get();\n        if(cmd=='Q') printf(\"%lld\\n\",sum);\n        else if(cmd=='C')\n            read(x),read(y),a[x]-=y,sum-=y;\n        else if(cmd=='I') {\n            read(x),read(y),\n            sum+=y-a[x],a[x]=y;\n            if(ask(x)==ask(x-1)) add(x,1);\n            //ask(x)-ask(x-1)=0\u8868\u793a,x\u57ce\u5e02\u6ca1\u6709\u59b9\u5b50\n        }\n        else {\n            read(x),y=query(x),\n            sum-=a[y],a[y]=0;\n            add(y,-1);\n            //\u59b9\u5b50\u8d70\u4e86 QWQ\n        }\n    }\n    return 0;\n}\n\n```\n\n**\u6ce8:**  \n**1.\u521d\u59cb\u65f6\u59b9\u5b50\u989c\u503c\u4e0d\u4e3a\u8d1f\u4e0d\u4ee3\u8868\u540e\u6765\u7684\u59b9\u5b50\u989c\u503c\u4e0d\u4e3a\u8d1f**  \n**2.\u59b9\u5b50\u57ce\u5e02\u5c45\u4f4f\u8303\u56f4\u4e3a $1$ ~ $5*10^5$, \u800c$n$\u4e3a $1 $ ~ $10^5$**\n",
        "postTime": 1559567284,
        "uid": 125925,
        "name": "zl_just",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "### \u5927\u5bb6\u597d\uff01\u8fd9\u91cc\u849f\u84bb\u4e00\u679a\n## \u6211\u4eec\u6765\u89e3\u8bfb\u4e00\u4e0b\u8fd9\u9053\u6709\u8da3\uff08po gai\uff09\u7684\u9898\u76ee\n### \u4e00.\u6e05\u6670\u6613\u61c2\uff08yunliwuli\uff09\u7684\u9898\u9762\n\u8bfb\u5b8c\u8fd9\u9053\u9898\u7684\u9898\u9762\uff0c\u611f\u5230\u5929\u660f\u5730\u65cb\uff1a**\u8fd9\u662f\u4ec0\u4e48\u610f\u601dqwq**\n\n\u5728wa\u548cre\u4e86\u51e0\u56de\u5408\u540e\uff0c\u6211\u624d\u5207\u4e86\u8fd9\u9053\u9898\u3002\n\n**\u9898\u9762\u89e3\u8bfb\uff1a**\n\n1. \u80cc\u666f\uff1aycz\u6709\u8bb8\u591amz\n2. \u9752\u6885\u7af9\u9a6c\uff1a\u521d\u59cb\u503c\n3. \u989c\u503c\u4e0b\u964d CXY\uff1a\u5bf9\u4e8e\u70b9X\u6743\u503c\u51cf\u53bbY\n4. \u6709\u4e00\u4e2a\u65b0\u7684mz IXY\uff1a\u5c06\u70b9X\u6743\u503c\u6539\u4e3aY\n5. \u5206\u624b DX\uff1a\u5c06\u7b2cX\u4e2a\u6709mz\u7684\u70b9\u6539\u4e3a\u65e0mz\n\n**ps:\n1.\u5bf9\u4e8e\u7b2c5\u6761\uff0c\u6709\u5f88\u591a\u4eba\uff08\u5305\u62ec\u4e00\u5f00\u59cb\u7684\u6211\uff09\u7406\u89e3\u6210\u4e86\uff1a\n\u5c06\u70b9X\u6539\u4e3a\u65e0MZ\uff0c\u4f46\u8fd9\u662f\u9519\u8bef\u7684\uff08WA\u7684\u6559\u8bad\uff09\uff0c\u4e5f\u6b63\u662f\u8fd9\u4e2a\u539f\u56e0\uff0c\u5c06\u8fd9\u9053\u84dd\u9898\u7684\u901a\u8fc7\u7387\u63a7\u7684\u8ddf\u7d2b\u9898\u4e00\u6837qwq\u3002\n2.\u540c\u65f6\uff0c\u6709\u5f88\u591a\u4eba\uff08\u4e0d\u5305\u62ec\u6211\uff09\u5c06\u65e0mz\u7684\u70b9\u76f4\u63a5\u6539\u62100\uff0c\u4f46\u8fd9\u4e5f\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u51fa\u9898\u8005\u8bf4\u8fc7\u6709\u8d1f\u6570\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u6709\u6743\u503c\u4e3a0\u7684\u70b9\uff0c\u56e0\u6b64\u8981\u6362\u79cd\u65b9\u5f0f\u5224\u65ad\uff08\u4f60\u770b\u5230\u51fa\u9898\u4eba\u9634\u9669\u7684\u7b11\u5bb9\u4e86\u5417\uff09**\n### \u4e8c.\u795e\u5947\u7684\u7ebf\u6bb5\u6811\n\u524d\u56db\u6761\u64cd\u4f5c\u5e73\u6613\u8fd1\u4eba\uff0c\u5173\u952e\u662f\u7b2c\u4e94\u6761\u3002\n\n**\u6838\u5fc3\u601d\u60f3\uff1a\u627e\u7b2cx\u4e2amz\uff0c\u9700\u8981\u6bd4\u8f83\u5de6\u5b50\u533a\u95f4\u5b58\u5728\u7684mz\u4e2a\u6570\u4e8ex,\u82e5\u5927\u4e8e\u7b49\u4e8e\uff0c\u5219\u8bf4\u660e\u5979\u5728\u5de6\u5b50\u533a\u95f4\u91cc\uff0c\u6392\u540d\u4e0d\u53d8\uff1b\u53cd\u4e4b\uff0c\u82e5\u5c0f\u4e8e\uff0c\u5219\u8bf4\u660e\u5979\u5728\u53f3\u5b50\u533a\u95f4\u91cc\uff0c\u6392\u540d\u4e3ax-\u5de6\u5b50\u533a\u95f4mz\u4e2a\u6570**\n\u5b9e\u73b0\u4ee3\u7801\uff1a\n```cpp\ninline void update(int p, int l, int r, int x) {\n\tif (l == r && x == 1) {\n\t\tmz[p] = 0;\n\t\tt[p] = 0;\n\t}\n\telse {\n\t\tregister int mid = l + r >> 1;\n\t\tif (mz[p << 1] >= x) update(p << 1, l, mid, x);\n\t\telse update(p << 1 | 1, mid + 1, r, x - mz[p << 1]);\n\t\tmz[p] = mz[p << 1] + mz[p << 1 | 1]; \n\t\tt[p] = t[p << 1] + t[p << 1 | 1];\n\t}\n}\n```\n\n### \u4e09.\u5168\u4ee3\u7801\n**\u7801\u98ce\u4e4b\u6c14\u5929\u4e0a\u6765\uff0cAC\u4e4b\u529b\u4e0d\u590d\u56de**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T> \ninline void read(T &x) {\n\tx = 0;\n\tregister T f = 1;\n\tregister char c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n\tfor (; isdigit(c); c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n\tx *= f;\n}\ninline void d_read(double &x) {\n\tx = 0.0;\n\tint f = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n\tfor (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n\tif (c == '.'){\n\t\tdouble num = 1.0;\n\t\tc = getchar();\n\t\tfor (; isdigit(c); c = getchar()) x = x + (num /= 10) * (c ^ 48);\n\t}\n\tx *= f;\n}\n\ntemplate <typename T> \ninline void w(T x) {\n\tif (x > 9) w(x / 10);\n\tputchar(x % 10 + 48);\n}\ntemplate <typename T> \ninline void write(T x, char c) {\n\tif (x < 0){\n\t\tputchar('-');\n\t\tx = -x;\n\t}\n\tw(x);\n\tputchar(c);\n}\nconst int cnt = 5e5;\nint n, m, mz[cnt << 2];\nlong long a[cnt], t[cnt << 2];\ninline void build(int p, int l, int r) {\n\tif (l == r) t[p] = a[l], mz[p] = (l <= n);\n\telse { \n\t\tregister int mid = l + r >> 1;\n\t\tbuild(p << 1, l, mid);\n\t\tbuild(p << 1 | 1, mid + 1, r);\n\t\tt[p] = t[p << 1] + t[p << 1 | 1]; \n\t\tmz[p] = min(n, r - l + 1);\n\t}\n}\ninline void modify(int p, int l, int r, int x, long long k) {\n\tif (l == r) {\n\t\tt[p] -= k;\n\t}\n\telse {\n\t\tregister int mid = l + r >> 1;\n\t\tif (mid >= x) modify(p << 1, l, mid, x, k);\n\t\telse modify(p << 1 | 1, mid + 1, r, x, k);\n\t\tt[p] = t[p << 1] + t[p << 1 | 1];\n\t}\n}\ninline void renew(int p, int l, int r, int x, long long k) {\n\tif (l == r) {\n\t\tt[p] = k;\n\t\tmz[p] = 1;\n\t}\n\telse {\n\t\tregister int mid = l + r >> 1;\n\t\tif (mid >= x) renew(p << 1, l, mid, x, k);\n\t\telse renew(p << 1 | 1, mid + 1, r, x, k);\n\t\tt[p] = t[p << 1] + t[p << 1 | 1];\n\t\tmz[p] = mz[p << 1] + mz[p << 1| 1];\n\t}\n}\ninline void update(int p, int l, int r, int x) {\n\tif (l == r && x == 1) {\n\t\tmz[p] = 0;\n\t\tt[p] = 0;\n\t}\n\telse {\n\t\tregister int mid = l + r >> 1;\n\t\tif (mz[p << 1] >= x) update(p << 1, l, mid, x);\n\t\telse update(p << 1 | 1, mid + 1, r, x - mz[p << 1]);\n\t\tmz[p] = mz[p << 1] + mz[p << 1 | 1]; \n\t\tt[p] = t[p << 1] + t[p << 1 | 1];\n\t}\n}\nint main(void) {\n\tread(n); read(m); \n\tfor (register int i = 1; i <= n; i ++) read(a[i]);\n\tbuild(1, 1, cnt);\n\tfor (register int i = 1; i <= m; i ++) {\n\t\tregister char ch = getchar();\n\t\tregister int x;\n\t\tregister long long y;\n\t\twhile(!isalpha(ch)) ch = getchar();\n\t\tif (ch == 'C') {\n\t\t\tread(x); read(y);\n\t\t\tmodify(1, 1, cnt, x, y);\n\t\t}\n\t\telse if (ch == 'I') {\n\t\t\tread(x); read(y);\n\t\t\trenew(1, 1, cnt, x, y);\n\t\t}\n\t\telse if (ch == 'D') {\n\t\t\tread(x); \n\t\t\tupdate(1, 1, cnt, x);\n\t\t}\n\t\telse {\n\t\t\twrite(t[1], '\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n### \u56db.\u5f69\u86cb\n\u6709\u4e0d\u5bf9\u7684\u8bf7\u5404\u4f4d\u795e\u7287\u6307\u51fa\uff0c\u6211**\u6709\u53ef\u80fd**\u4f1a\u6539\uff08\u524d\u63d0\u662f\u6211\u4f1a\uff09",
        "postTime": 1566483255,
        "uid": 46820,
        "name": "Wall_breaker",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "\u542c\u8bf4\u8fd9\u9898\u90fd\u662f\u7528$nlogn$\u7684\u7ebf\u6bb5\u6811\u6216\u8005\u5206\u5757\u5199\u7684\u3002\u3002\u3002\u7136\u9e45\u53ea\u6709\u6211\u7b2c\u4e00\u773c\u770b\u5230\u9898\u60f3\u5199\u4e00\u4e2a\u5e73\u8861\u6811\u4e48\u3002\u3002\u3002(\u867d\u7136\u6700\u540e\u6253\u4e86\u4e00\u4e2a$nlog^2n$\u7684\u7ebf\u6bb5\u6811  \n\u4ed4\u7ec6\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\uff0c\u867d\u7136\u6709\u5220\u9664\u64cd\u4f5c\u7136\u9e45\u5e76\u4e0d\u9700\u8981\u6572\u4e00\u68f5\u5e73\u8861\u6811\u3002\u7531\u4e8e\u6bcf\u6b21\u67e5\u8be2\u53ea\u662f\u67e5\u8be2\u603b\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e\u4e00\u4e2a\u53d8\u91cf\u6765\u7edf\u8ba1\u603b\u548c\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\u76f4\u63a5\u5728\u53d8\u91cf\u4e0a\u8fdb\u884c\u52a0\u51cf\u5373\u53ef    \n\u8fd9\u9053\u9898\u552f\u4e00\u6709\u96be\u5ea6\u7684\u5730\u65b9\u5c31\u662f\u4ed6\u7684\u5220\u9664\u64cd\u4f5c\u5220\u9664\u7684\u662f\u7b2c$x$\u4e2a\u59b9\u5b50\u800c\u4e0d\u662f\u7b2c$x$\u4e2a\u57ce\u5e02\u7684\u59b9\u5b50\uff0c\u8fd9\u5c31\u5f88\u61f5\u903c\uff0c\u56e0\u4e3a\u4f60\u4e0d\u80fd\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u627e\u7b2c$x$\u4e2a\u59b9\u5b50\uff08\u4e5f\u8bb8\u53ef\u4ee5\u7136\u9e45\u6211\u592a\u83dc\u4e86\uff09\u6240\u4ee5\u6211\u4eec\u5c31\u8981\u8003\u8651\u628a\u7b2c$x$\u4e2a\u59b9\u5b50\u8f6c\u5316\u4e3a\u7b2c$x'$\u4e2a\u57ce\u5e02\u7684\u59b9\u5b50  \n\u5982\u4f55\u67e5\u627e\u5462\uff1f\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\u6211\u4eec\u628a\u7ebf\u6bb5\u6811\u7684\u5b9a\u4e49\u6539\u4e00\u4e0b\uff0c\u7c7b\u4f3c\u4e8e\u6743\u503c\u7ebf\u6bb5\u6811\u5374\u53c8\u4e0d\u4e00\u6837\uff0c\u8868\u793a\u4e3a\u7b2c$x$\u4e2a\u57ce\u5e02\u662f\u5426\u62e5\u6709\u59b9\u5b50\u3002\u8fd9\u6837\u4e8c\u5206\u7684\u65f6\u5019\u67e5\u8be2\u4e00\u4e0b\u524d\u7f00\u548c\u5c31\u597d\u4e86(\u8fd9\u4e48\u8bf4\u6765\u8fd8\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6c34\u8fc7\u53bb\u4e00\u4f1a\u5199\u4e00\u4e0b  \n\u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\u5c31\u662f\u59b9\u5b50\u6700\u5927\u7684\u57ce\u5e02\u7f16\u53f7\u53ef\u80fd\u4e3a$5\\times 10^5$\u8fd9\u70b9\u8981\u6ce8\u610f\u4e0d\u80fd\u76f4\u63a5\u5728$1$~$n$\u7684\u8303\u56f4\u4e0a\u8fdb\u884c\u4fee\u6539  \n\u4ee3\u7801  \n```\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nlong long tree[4000010],lazy[4000010],a[1000010],n,m;long long sum;\nbool qwq[1000010];\nvoid push_down(long long o,long long l,long long r){\n    long long mid=l+r>>1;\n    tree[o<<1]+=lazy[o]*(mid-l+1);tree[o<<1|1]+=lazy[o]*(r-mid);\n    lazy[o<<1]+=lazy[o];lazy[o<<1|1]+=lazy[o];\n    lazy[o]=0;\n}\nvoid update(long long o,long long l,long long r,long long ql,long long qr,long long v){\n    if(l>=ql&&r<=qr){tree[o]+=(r-l+1)*v;lazy[o]+=v;return;}\n    long long mid=l+r>>1;\n    push_down(o,l,r);\n    if(mid>=ql) update(o<<1,l,mid,ql,qr,v);\n    if(mid<qr) update(o<<1|1,mid+1,r,ql,qr,v);\n    tree[o]=tree[o<<1]+tree[o<<1|1];\n}\nlong long query(long long o,long long l,long long r,long long ql,long long qr){\n    if(l>=ql&&r<=qr) return tree[o];\n    long long mid=l+r>>1,ans=0;\n    push_down(o,l,r);\n    if(mid>=ql) ans+=query(o<<1,l,mid,ql,qr);\n    if(mid<qr) ans+=query(o<<1|1,mid+1,r,ql,qr);\n    return ans;\n}\nlong long pos(long long x){\n    long long l=1,r=500000;\n    while(l<r){\n        long long mid=l+r>>1;\n        if(query(1,1,500000,mid,mid)>=x) r=mid;\n        else l=mid+1;\n    }\n    return l;\n}\n\ninline long long read(){\n    long long x=0,gf=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-') gf=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-48;c=getchar();}\n    return x*gf;\n}\n\nint main(){\n    cin>>n>>m;\n    for(long long i=1;i<=n;i++) a[i]=read(),update(1,1,500000,i,500000,1),sum+=a[i],qwq[i]=1;\n    while(m--){\n    \tchar c;cin>>c;\n    \tif(c=='Q') cout<<sum<<'\\n';\n    \telse if(c=='C') {long long x=read(),y=read();a[x]-=y;sum-=y;}\n    \telse if(c=='I'){\n    \t\tlong long x=read(),y=read();\n    \t\tif(qwq[x]){\n    \t\t\tsum-=a[x];sum+=y;a[x]=y;\n    \t\t}\n    \t\telse{sum+=y;a[x]=y;qwq[x]=1;update(1,1,500000,x,500000,1);}\n    \t}\n    \telse{\n    \t\tlong long x=read();x=pos(x);sum-=a[x];a[x]=0;qwq[x]=0;update(1,1,500000,x,500000,-1);\n    \t}\n    }\n    return 0;\n}\n```",
        "postTime": 1552388128,
        "uid": 80434,
        "name": "\u9a6c\u5cf0",
        "ccfLevel": 0,
        "title": "luoguP4879\u9898\u89e3"
    },
    {
        "content": "upd:\u66f4\u6539\u4e86\u4ee3\u7801\u4e2d\u7684\u5c0f\u9519\u8bef\u3002\n\n\n\n------------\n\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9\u8fd9\u91cc](https://www.cnblogs.com/tlx-blog/p/12639521.html)\n\u9898\u76ee\u94fe\u63a5:[P4879 ycz\u7684\u59b9\u5b50](https://www.luogu.com.cn/problem/P4879)   \n\u64cd\u4f5c\u5f88\u591a\uff0c\u4f46\u90fd\u662f\u5413\u4eba\u7684\u3002          \n\u4e00\u773c\u7ebf\u6bb5\u6811\uff0c~~\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u662f\u641c\u7ebf\u6bb5\u6811\u6807\u7b7e\u627e\u5230\u8fd9\u9898\u7684~~\u3002        \n\u8003\u8651\u7528\u6bcf\u4e2a\u8282\u70b9\u6765\u7ef4\u62a4\u6bcf\u4e2a\u57ce\u5e02\u4e2d\u59b9\u5b50\u7684\u60c5\u51b5\uff0c\u663e\u7136\u53ea\u9700\u7ef4\u62a4\uff1a\u59b9\u5b50\u7684\u989c\u503c\u4e0e\u6b64\u57ce\u5e02\u662f\u5426\u6709\u70ed\u604b\u4e2d\u7684\u59b9\u5b50\u3002       \n\u5f00\u59cb\u60f3\u7ef4\u62a4\u4e24\u4e2a\u7ebf\u6bb5\u6811\uff0c\u7ecf\u8fc7\u51b7\u9759\u540e\u53d1\u73b0\u5728\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u641e\u5373\u53ef\u3002       \n\u770b\u6570\u636e\u8303\u56f4\uff0c\u77e5\u9053\u8981\u6ce8\u610f$long\\;long$\u3002    \n\u6765\u770b\u57fa\u672c\u64cd\u4f5c\uff08\u5e94\u8be5\u90fd\u662f\u5c0f\u513f\u79d1\u7684\u4e86\uff09\uff1a    \n$1$.\u66f4\u65b0\u53ca\u5efa\u6811\uff1a\n```\nvoid update(int k){a[k].sum=a[k<<1].sum+a[k<<1|1].sum,a[k].cnt=a[k<<1].cnt+a[k<<1|1].cnt;}\nvoid build(int k,int l,int r,int x)\n{\n\ta[k].l=l,a[k].r=r;\n\tif(l==r)\n\t{\n\t\tif(l<=x) a[k].cnt++;\n\t\ta[k].sum=(ll)t[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid,x),build(k<<1|1,mid+1,r,x);\n\tupdate(k);\n}\n``` \n$2$.\u628a\u4e00\u4e2a\u57ce\u5e02\u59b9\u5b50\u989c\u503c\u964d\u4f4e\uff1a\n```\nvoid turn(int k,int x,int y)\n{\n\tif(a[k].l==a[k].r){a[k].sum-=(ll)y;return;}\n\tint mid=(a[k].l+a[k].r)>>1;\n\tif(x<=mid) turn(k<<1,x,y);\n\telse turn(k<<1|1,x,y);\n\tupdate(k);\n}\n```\n$3$.\u5728\u4e00\u4e2a\u57ce\u5e02\u4e0a\u52a0\u4e00\u4e2a\u59b9\u5b50\uff0c\u6ce8\u610f\u628a\u6709\u59b9\u5b50\u7684\u6807\u8bb0\u6253\u4e0a\uff1a\n```\nvoid turn_to(int k,int x,int y)\n{\n\tif(a[k].l==a[k].r){a[k].sum=(ll)y,a[k].cnt=1;return;}\n\tint mid=(a[k].l+a[k].r)>>1;\n\tif(x<=mid) turn_to(k<<1,x,y);\n\telse turn_to(k<<1|1,x,y);\n\tupdate(k);\n}\n```\n$4$.\u5bfb\u627e\u7b2c$x$\u4e2a\u6709\u59b9\u5b50\u7684\u57ce\u5e02\uff1a   \n\u8fd9\u65f6\u5019\u5c31\u8981\u7528\u5230\u6709\u65e0\u59b9\u5b50\u7684\u8ba1\u6570\u5668\u4e86\uff0c\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u6b21\u5224\u65ad\u662f\u5728\u5de6\u513f\u5b50\u8fd8\u662f\u5728\u53f3\u513f\u5b50\u5373\u53ef\u3002\u548c\u6743\u503c\u7ebf\u6bb5\u6811\u786e\u5b9a\u7b2c$k$\u5927\uff08\u5c0f\uff09\u6570\u7684\u601d\u60f3\u662f\u4e00\u6837\u7684\u3002    \n```\nint find(int k,int x)\n{\n\tif(a[k].l==a[k].r){return a[k].l;}\n\tint mid=a[k<<1].cnt;\n\tif(x<=mid) return find(k<<1,x);\n\telse return find(k<<1|1,x-mid);\n}\n```\n$5$.\u628a\u5728\u67d0\u4e2a\u57ce\u5e02\u7684\u59b9\u5b50\u8e22\u6389\u3002     \n\u8fd9\u91cc\u7684\u51fd\u6570\u540d\u5341\u5206\u751f\u52a8\uff1a$kick$......   \n\u6211\u4eec\u628a\u989c\u503c\u8bbe\u6210$0$\uff0c\u5e76\u628a\u6807\u8bb0\u6253\u6210\u201c\u65e0\u59b9\u5b50\u201d\u5373\u53ef\u3002       \n```\nvoid kick(int k,int x)\n{\n\tif(a[k].l==a[k].r){a[k].cnt=a[k].sum=(ll)0;return;}\n\tint mid=(a[k].l+a[k].r)>>1;\n\tif(x<=mid) kick(k<<1,x);\n\telse kick(k<<1|1,x);\n\tupdate(k);\n}\n```\n$6$.\u989c\u503c\u548c\uff1a  \n\u7531\u4e8e\u662f\u6240\u6709\u6570\u7684\u548c\uff0c\u53ea\u9700\u8f93\u51fa\u6811\u6839\u7684\u603b\u989c\u503c\u5373\u53ef\u3002    \n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5bf9\u4e8e\u6240\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u8bb0\u5f97\u4e0d\u65ad\u66f4\u65b0\uff08$update$\uff09\u3002   \n\u5728\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u62d3\u5c55\u9898:\u628a\u67e5\u8be2\u603b\u989c\u503c\u6539\u4e3a\u6bcf\u6b21\u6c42\u53ef\u4ee5\u5f97\u5230\u59b9\u5b50\u7684\u6700\u5927\u989c\u503c\uff0c\u8fd9\u6837\u7684\u96be\u5ea6\u5c31\u6709\u4e86\u63d0\u9ad8\uff0c\u5927\u5bb6\u53ef\u4ee5\u60f3\u4e00\u4e0b\u505a\u6cd5\u3002       \n\u4e0b\u9762\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801:\n## $Code$\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\n#define MAXN 500005\n#define ll long long\nint n,m,x,y,t[MAXN];\nchar c;\nstruct node\n{\n\tint l,r,cnt;\n\tll sum;\t\n\tnode(){sum=cnt=(ll)0;}\n}a[MAXN<<2];\nvoid update(int k){a[k].sum=a[k<<1].sum+a[k<<1|1].sum,a[k].cnt=a[k<<1].cnt+a[k<<1|1].cnt;}\nvoid build(int k,int l,int r,int x)\n{\n\ta[k].l=l,a[k].r=r;\n\tif(l==r)\n\t{\n\t\tif(l<=x) a[k].cnt++;\n\t\ta[k].sum=(ll)t[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid,x),build(k<<1|1,mid+1,r,x);\n\tupdate(k);\n}\nvoid turn(int k,int x,int y)\n{\n\tif(a[k].l==a[k].r){a[k].sum-=(ll)y;return;}\n\tint mid=(a[k].l+a[k].r)>>1;\n\tif(x<=mid) turn(k<<1,x,y);\n\telse turn(k<<1|1,x,y);\n\tupdate(k);\n}\nvoid turn_to(int k,int x,int y)\n{\n\tif(a[k].l==a[k].r){a[k].sum=(ll)y,a[k].cnt=1;return;}\n\tint mid=(a[k].l+a[k].r)>>1;\n\tif(x<=mid) turn_to(k<<1,x,y);\n\telse turn_to(k<<1|1,x,y);\n\tupdate(k);\n}\nint find(int k,int x)\n{\n\tif(a[k].l==a[k].r){return a[k].l;}\n\tint mid=a[k<<1].cnt;\n\tif(x<=mid) return find(k<<1,x);\n\telse return find(k<<1|1,x-mid);\n}\nvoid kick(int k,int x)\n{\n\tif(a[k].l==a[k].r){a[k].cnt=a[k].sum=(ll)0;return;}\n\tint mid=(a[k].l+a[k].r)>>1;\n\tif(x<=mid) kick(k<<1,x);\n\telse kick(k<<1|1,x);\n\tupdate(k);\n}\nint main()\n{\n\t#define read(x) scanf(\"%d\",&x)\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++) read(t[i]);\n\tbuild(1,1,500000,n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>c;\n\t\tif(c=='C') read(x),read(y),turn(1,x,y);\n\t\telse if(c=='I') read(x),read(y),turn_to(1,x,y);\n\t\telse if(c=='D') read(x),y=find(1,x),kick(1,y);\n\t\telse printf(\"%lld\\n\",a[1].sum);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1586096636,
        "uid": 184500,
        "name": "hanzhongtlx",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4879"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u5199\uff0c\u76f4\u63a5\u6309\u9898\u610f\u6a21\u62df\u5373\u53ef\u3002\n\n\u5e73\u8861\u6811\u592a\u96be\u5199?\u4e0d\u5982\u8bd5\u8bd5$pbds$\u91cc\u7684\u5427!\u8054\u8d5b\u8fd8\u53ef\u4ee5\u7528\u54e6!\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/tree_policy.hpp>\n#include<ext/pb_ds/assoc_container.hpp>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define pb push_back\n#define mp make_pair\n#define Chkmax(a,b) a=a>b?a:b\n#define Chkmin(a,b) a=a<b?a:b\n#define mx(a,b) (a>b?a:b)\n#define mn(a,b) (a<b?a:b)\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\nusing namespace std;\nusing namespace __gnu_pbds;\n\nnamespace IO\n{\n    const uint32 Buffsize=1<<15,Output=1<<23;\n    static char Ch[Buffsize],*S=Ch,*T=Ch;\n    inline char getc()\n\t{\n\t\treturn((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n\t}\n    static char Out[Output],*nowps=Out;\n    \n    inline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n    template<typename T>inline void read(T&x)\n\t{\n\t\tx=0;static char ch;T f=1;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write(T x,char ch='\\n')\n\t{\n\t\tif(!x)*nowps++='0';\n\t\tif(x<0)*nowps++='-',x=-x;\n\t\tstatic uint32 sta[111],tp;\n\t\tfor(tp=0;x;x/=10)sta[++tp]=x%10;\n\t\tfor(;tp;*nowps++=sta[tp--]^48);\n\t\t*nowps++=ch;\n\t}\n}\nusing namespace IO;\n\ninline void file()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"water.in\",\"r\",stdin);\n\tfreopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\nconst int MAXN=5e5+7;\n\nstatic int n,m;\n\nstatic long long a[MAXN],ans;\n\ninline void init()\n{\n\tread(n);read(m);\n\tRep(i,1,n)read(a[i]),ans+=a[i];\n}\n\ntypedef pair<int,long long> Pr;\n\ntree<Pr,null_type,less<Pr>,rb_tree_tag,tree_order_statistics_node_update>G;\ntree<Pr,null_type,less<Pr>,rb_tree_tag,tree_order_statistics_node_update>::point_iterator it;\n\ninline char getopt()\n{\n\tstatic char c;\n\tfor(c=getc();!isupper(c);c=getc());\n\treturn c;\n}\n\nconst long long inf=LLONG_MAX;\n\ninline void solve()\n{\n\tstatic int x,y;\n\tRep(i,1,n)G.insert(mp(i,a[i]));\n\tRep(i,1,m)\n\t{\n\t\tswitch(getopt())\n\t\t{\n\t\t\tcase 'C':\n\t\t\t{\n\t\t\t\tread(x),read(y);\n\t\t\t\tG.erase(mp(x,a[x]));G.insert(mp(x,a[x]-y));\n\t\t\t\tans-=y,a[x]-=y;break;\n\t\t\t}\n\t\t\tcase 'I':\n\t\t\t{\n\t\t\t\tread(x);read(y);\n\t\t\t\tit=G.lower_bound(mp(x,-inf));\n\t\t\t\tif(it!=G.end()&&it->first==x)\n\t\t\t\t\tG.erase(it),ans-=a[x];\n\t\t\t\tG.insert(mp(x,y));ans+=(a[x]=y);break;\n\t\t\t}\n\t\t\tcase 'D':\n\t\t\t{\n\t\t\t\tread(x);it=G.find_by_order(x-1);\n\t\t\t\ta[it->first]=0;ans-=it->second;\n\t\t\t\tG.erase(it);break;\n\t\t\t}\n\t\t\tcase 'Q':{write(ans);break;}\n\t\t}\n\t}\n\tflush();\n}\n\nint main()\n{\n    file();\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1536823401,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "# P4879\n\n\u8fd9\u662f\u4e00\u7bc7\u6307\u9488\u7248\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\u3002\n\n\u533a\u95f4\u64cd\u4f5c\uff0c\u975e\u5e38\u5bb9\u6613\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\u601d\u8003\u4e00\u4e0b\uff0c\u53d1\u73b0\u6bcf\u4e2a\u8282\u70b9\u9700\u8981\u7ef4\u62a4\u59b9\u5b50\u7684\u6570\u91cf\u548c\u989c\u503c\u548c\u3002\n\n\u53e6\u5916\u5176\u5b9e C \u548c I \u672c\u8d28\u4e0a\u975e\u5e38\u50cf\uff0c\u90fd\u662f\u5355\u70b9\u4fee\u6539\uff0c\u5199\u4e00\u4e2a\u5c31\u591f\u4e86\u3002\n\n\u6bd4\u8f83\u5751\u7684\u662f\u6bcf\u4e2a\u57ce\u5e02\u53ea\u5141\u8bb8\u6709\u4e00\u4e2a\u59b9\u5b50\uff0c\u6240\u4ee5\u6700\u5730\u5c42\u7684\u8282\u70b9\u7684\u5927\u5c0f\u6700\u5927\u4e3a 1 \u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nconst int maxn = 1e5 + 5;\n\nint n, m, k;\nll a[maxn];\n\ntemplate<typename T>\nclass SGT {\npublic:\n  struct Node {\n    int l, r;\n    int sz;\n    T d;\n    Node *ls, *rs;\n    Node(int l = 0, int r = 0):\n        l(l), r(r), sz(0), d(0), ls(NULL), rs(NULL) {};\n  };\n  Node *root;\n  void pushup(Node *p) {\n    p->d = p->ls->d + p->rs->d;\n    p->sz = p->ls->sz + p->rs->sz;\n  }\n  Node *build(int l, int r) {\n    Node *p = new Node(l, r);\n    if (l == r) {\n      if (l <= n) {\n        p->d = a[l];\n        p->sz = 1;\n      } else {\n        p->d = 0;\n        p->sz = 0;\n      }\n      return p;\n    }\n    int mid = (l + r) >> 1;\n    p->ls = build(l, mid);\n    p->rs = build(mid + 1, r);\n    pushup(p);\n    return p;\n  }\n  void update(Node *p, int x, T dv, int f) {\n    if (p->l == x && p->r == x) {\n      if (f == 0) {\n        p->d += dv;\n      } else {\n        p->d = dv;\n        p->sz = 1;\n      }\n      return;\n    }\n    int mid = (p->l + p->r) >> 1;\n    if (x <= mid) update(p->ls, x, dv, f);\n    else update(p->rs, x, dv, f);\n    pushup(p);\n  }\n  void del(Node *p, int x) {\n    if (p->sz < x) return;\n    if (x == 1 && p->l == p->r) {\n      p->sz = 0;\n      p->d = 0;\n      return;\n    }\n    if (x <= p->ls->sz) del(p->ls, x);\n    else del(p->rs, x - p->ls->sz);\n    pushup(p);\n  }\n  T query(Node *p) {\n    return p->d;\n  }\n};\n\nSGT<ll> t;\n\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%lld\", &a[i]);\n  }\n  t.root = t.build(1, 5 * maxn);\n  char opt[5];\n  ll x, y;\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%s\", opt);\n    switch (opt[0]) {\n      case 'C':\n        scanf(\"%lld%lld\", &x, &y);\n        t.update(t.root, x, -y, 0);\n        break;\n      case 'I':\n        scanf(\"%lld%lld\", &x, &y);\n        t.update(t.root, x, y, 1);\n        break;\n      case 'D':\n        scanf(\"%lld\", &x);\n        t.del(t.root, x);\n        break;\n      case 'Q':\n        printf(\"%lld\\n\", t.query(t.root));\n        break;\n    }\n  }\n  return 0;\n}\n\n\n```",
        "postTime": 1537778254,
        "uid": 53067,
        "name": "YuntianZhao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "\u6811\u72b6\u6570\u7ec4+\u4e8c\u5206+\u6a21\u62df\u3002\n\n\u4e8c\u5206\u627e\u5230\u7f16\u53f7x\uff0c\u6811\u72b6\u6570\u7ec4\u4fee\u6539\u7f16\u53f7\uff0c\u7136\u540e\u6a21\u62df\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u6811\u72b6\u6570\u7ec4\u4e0d\u5fc5\u591a\u8bf4\uff0c\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\u3002\n\n\u77ed\u5c0f\u7cbe\u5e72\u7684\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nlong long s;\nint n,m;\nlong long a[800000];\nint b[800000];\nint sum[800000];\nint maxn=0;\n\nvoid update(int r,int f)\n{\n    while(r<=600000)\n    {\n        sum[r]+=f;\n        r+=(r&(-r));\n    }\n}\n\nint get(int l)\n{\n    int su=0;\n    while(l>0)\n    {\n        su+=sum[l];\n        l-=(l&(-l));\n    }\n    return su;\n}\n\nint erfen(int l,int r,int k)\n{\n    if(l==r)\n    {\n        return l;\n    }\n    int mid=(l+r)/2;\n    if(get(mid)>=k)return erfen(l,mid,k);\n    else return erfen(mid+1,r,k);\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        s+=a[i];\n        update(i,1);\n        b[i]=1;\n    }\n    maxn=n;\n    for(int i=1;i<=m;i++)\n    {\n        char c[10];\n        scanf(\"%s\",c+1);\n        long long y;\n        int x;\n        if(c[1]=='C')\n        {\n            scanf(\"%d%lld\",&x,&y);\n            a[x]-=y;\n            s-=y;\n        }\n        else if(c[1]=='I')\n        {\n            scanf(\"%d%lld\",&x,&y);\n            if(b[x]==0)\n            {\n                //cout<<x<<\" \"<<get(4)<<endl;\n                update(x,1);\n                b[x]=1;\n            }\n            s-=a[x];\n            a[x]=y;\n            s+=y;\n            maxn=max(maxn,x);\n        }\n        else if(c[1]=='D')\n        {\n            scanf(\"%d\",&x);\n            int p=erfen(1,maxn,x);\n            //cout<<p<<endl;\n            update(p,-1);\n            b[p]=0;\n            s-=a[p];\n            a[p]=0;\n        }\n        else\n        {\n            printf(\"%lld\\n\",s);\n        }\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1537056858,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4f60\u7ed9\u51fa\u56db\u79cd\u64cd\u4f5c\uff1b\n      \uff081\uff09C x y\u5c06x\u70b9\u7684\u503c\u51cf\u53bby\n      \uff082\uff09I x y\u5728x\u70b9\u65b0\u5efa\u4e00\u4e2a\u70b9\uff0c\u70b9\u7684\u503c\u4e3ay\n      \uff083\uff09D x\u5c06\u533a\u95f4\u91cc\u9762\u7b2cx\u4e2a\u70b9\uff08\u4e00\u5b9a\u8981\u6ce8\u610f\u662f\u6570\u91cf\u4e0a\u7684\u7b2cx\u4e2a\uff0c\u800c\u4e0d\u662f\u5750\u6807\u4e3ax\uff09\u5220\u9664\n      \uff084\uff09Q\u67e5\u8be2\u6574\u4e2a\u533a\u95f4\u91cc\u9762\u7684\u548c\n\u601d\u8def\uff1a\u5c31\u662f\u7ebf\u6bb5\u6811\u561b\uff08\u6807\u9898\u4e5f\u662f\u7ebf\u6bb5\u6811\u554a\uff0czkw\u641e\u4e0d\u6765\uff0c\u5c31\u5199\u7684\u666e\u901a\u7684\u7ebf\u6bb5\u6811\uff09\u3002\u53ea\u8bf4\u4e00\u4e0b\u5220\u9664\u64cd\u4f5c\uff0c\u7edd\u5bf9\u4e0d\u662f\u7b80\u5355\u7684\u5c06\u503c\u8be5\u4e3a0\uff0c\u8fd9\u6837\u5c31wrong\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u53e6\u5f00\u4e00\u4e2a\u91cf\u6765\u8868\u793a\u533a\u95f4\u88ab\u67d3\u8272\uff08\u5c31\u662f\u6709\u70b9\uff09\u7684\u4e2a\u6570\u3002\u5220\u9664\u5c31\u628a\u4ed6\u51cf\u6389\u3002\n\u76f4\u63a5\u7ed9\u51fa\u4ee3\u7801\uff0c\u4e3a\u9898\u89e3\u6dfb\u4e00\u70b9\u4e0d\u4e00\u6837\u7684\u4ee3\u7801\uff1a\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 500005\n#define maxnode 50010\n#define sigma_size 26\n#define md 1000000007\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long LL;\n\nstruct node\n{\n    int l,r;\n    LL num,sum;\n}tr[MAXN<<2];\nint cnt,a[MAXN],n,m;\n\nvoid build(int id,int l,int r)\n{\n    tr[id].l=l,tr[id].r=r,tr[id].num=0,tr[id].sum=0;\n    int mid=(l+r)>>1;\n    if(l==r)\n    {\n        if(r<=n)\n        {\n            tr[id].num=1;\n            tr[id].sum=a[++cnt];\n        }\n        return ;\n    }\n    build(id<<1,l,mid);\n    build(id<<1|1,mid+1,r);\n    tr[id].sum=tr[id<<1].sum+tr[id<<1|1].sum;\n    tr[id].num=tr[id<<1].num+tr[id<<1|1].num;\n}\n\nvoid maintain(int id)\n{\n    tr[id].num=tr[id<<1].num+tr[id<<1|1].num;\n    tr[id].sum=tr[id<<1].sum+tr[id<<1|1].sum;\n}\n\nvoid change(int id,int k)   //\u5c06\u533a\u95f4\u4e2d\u7b2ck\u4e2a\u70b9\u64e6\u51fa\u6389\n{\n    if(tr[id].l==tr[id].r)      //\u4fee\u6539\u53f6\u5b50\u8282\u70b9\uff0c\u8ba9\u8ba1\u6570\u53d8\u91cf\u7f6e\u4e3a0\uff1b\n    {\n        tr[id].num=0;\n        tr[id].sum=0;\n        return ;\n    }\n    if(tr[id<<1].num>=k)\n        change(id<<1,k);\n    else\n        change(id<<1|1,k-tr[id<<1].num);\n    maintain(id);                              //\u91cd\u65b0\u8ba1\u7b97\u8282\u70b9\u4fe1\u606f\n}\n\nvoid update(int id,int kk,int val)    //\u5bf9\u4e8e\u5355\u70b9\u8fdb\u884c\u52a0\u51cf\u64cd\u4f5c\n{\n    if(tr[id].l==tr[id].r)\n    {\n        tr[id].sum+=val;\n        tr[id].num=1;\n        return ;\n    }\n    int mid=(tr[id].l+tr[id].r)>>1;\n    if(kk<=mid)\n        update(id<<1,kk,val);\n    else\n        update(id<<1|1,kk,val);\n    maintain(id);                                   //\u91cd\u65b0\u8ba1\u7b97\u8282\u70b9\u4fe1\u606f\n}\n\nvoid add(int id,int pos,int val)\n{\n    if(tr[id].l==tr[id].r)\n    {\n        tr[id].num=1;\n        tr[id].sum=val;\n        return ;\n    }\n    int mid=(tr[id].l+tr[id].r)>>1;\n    if(pos<=mid)\n        add(id<<1,pos,val);\n    else\n        add(id<<1|1,pos,val);\n    maintain(id);\n}\n\nint main()\n{\n    int xx,yy;\n    char ch;\n    scanf(\"%d %d\",&n,&m);\n    cnt=0;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    build(1,1,500002);\n    for(int i=1;i<=m;i++)\n    {\n        cin>>ch;\n        if(ch=='Q')\n        {\n            printf(\"%lld\\n\",tr[1].sum);\n        }\n        else if(ch=='C')\n        {\n            scanf(\"%d %d\",&xx,&yy);\n            update(1,xx,(-1*yy));\n        }\n        else if(ch=='D')\n        {\n            scanf(\"%d\",&xx);\n            change(1,xx);\n        }\n        else if(ch=='I')\n        {\n            scanf(\"%d %d\",&xx,&yy);\n            add(1,xx,yy);\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1575729513,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "# P4879 ycz\u7684\u59b9\u5b50\n[\u539f\u9898\u5730\u5740](https://www.luogu.org/problem/P4879)  \n[Github\u9898\u89e3](https://github.com/jerrykcode/luogu)\n\n## \u601d\u8def\n\n\u4f7f\u7528\u6570\u7ec4a\u8bb0\u5f55\u6bcf\u4e2a\u57ce\u5e02\u7684\u5973\u751f\u7684\u989c\u503c\uff0c\u6570\u7ec4has\u8bb0\u5f55\u6bcf\u4e2a\u57ce\u5e02\u662f\u5426\u6709\u5973\u751f\uff0c\u82e5\u6709\u5219\u4e3aTRUE(1)\uff0c\u6ca1\u6709\u5219\u4e3aFALSE(0)\u3002\n\u6570\u7ec4bit\u76f8\u5f53\u4e8e\u662fhas\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u63d0\u4f9b\u4e24\u4e2a\u64cd\u4f5c:\n* add(int x, int k)\uff0c\u5728x\u4f4d\u7f6e\u589e\u52a0k\uff0c\u90a3\u4e48add(x, 1)\u5c31\u8868\u793a\u539f\u672cx\u57ce\u5e02\u6ca1\u6709\u5973\u751f\uff0c\u73b0\u5728\u6709\u4e86\uff1b\u800cadd(x, -1)\u5219\u8868\u793a\u539f\u6765\u6709\u5973\u751f\u7684\u57ce\u5e02x\u73b0\u5728\u6ca1\u6709\u4e86\u3002\n* get_sum(int x)\uff0c\u8fd4\u56de[1, x]\u7684\u548c\u3002get_sum(x)\u7684\u5b9e\u9645\u610f\u4e49\u5c31\u662f[1, x]\u4e2d\u6709\u5973\u751f\u7684\u57ce\u5e02\u7684\u6570\u91cf\u3002\n\n\u6700\u5927\u57ce\u5e02\u7f16\u53f7\u4e0d\u8d85\u8fc7500000\uff0c`#define maxcity 500000`\uff0c\u6570\u7ec4\u7684\u5927\u5c0f\u90fd\u5f00maxcity + 1\u3002\u7528`sum`\u8bb0\u5f55\u989c\u503c\u548c\u3002\n\n### \u521d\u59cb\u5316:\n* \u8f93\u5165\u65f6\u53ef\u786e\u5b9aa[1] ~ a[n]\u7684\u503c\uff0c\u6b64\u65f6sum\u5373a[1] ~ a[n]\u4e4b\u548c\u3002a[n + 1] ~ a[maxcity]\u4e3a 0\u3002  \n* has[1] ~ has[n]\u4e3aTRUE\uff0chas[n + 1] ~ has[maxcity]\u4e3aFALSE\u3002  \n* bit\u521d\u59cb\u51680\uff0c\u5bf9\u4e8ei\u5c5e\u4e8e[1, n]\uff0c\u5bf9bit\u8fdb\u884c\u4fee\u6539: add(i, 1)  \n\n### C xy:   \n\u66f4\u65b0sum\u548ca[x]: `sum -= y;  a[x] -= y; `  \nhas\u548cbit\u4e0d\u53d8\u3002\n\n### I xy:\n\u66f4\u65b0sum\u548ca[x]:   \n`sum += y - a[x];`  \n`a[x] = y;`  \n\u82e5has[x]\u4e3aFALSE\uff0c\u5373I\u64cd\u4f5c\u4e4b\u524dx\u57ce\u5e02\u6ca1\u6709\u5973\u751f\uff0c\u5219\u66f4\u65b0has[x]\u4e3aTRUE\uff0c\u5e76\u4e14`add(x, 1)`\n\n### D x:\n\u9996\u5148\u9700\u8981\u627e\u5230\u7b2cx\u4e2a\u6709\u5973\u751f\u7684\u57ce\u5e02\u3002  \n\u4e8c\u5206 + \u6811\u72b6\u6570\u7ec4\u533a\u95f4\u67e5\u8be2:  \n\u4ece[1, maxcity]\u5f00\u59cb\u4e8c\u5206\u3002\u5bf9\u4e8e\u4e8c\u5206\u7684mid\uff0c\u82e5get_sum[mid] < x\uff0c\u5219[1, mid]\u533a\u95f4\u5185\u7684\u5973\u751f\u4e0d\u591fx\u4e2a\uff0c\u5219\u5411\u53f3\u7ee7\u7eed\u4e8c\u5206\u3002\u82e5get_sum[mid] > x\uff0c\u5219[1, mid]\u533a\u95f4\u5185\u7684\u5973\u751f\u591a\u4e8ex\u4e2a\u4e86\uff0c\u7ee7\u7eed\u5411\u5de6\u4e8c\u5206\u3002\n\u5f53get_sum[mid] == x\u65f6\uff0c[1, mid]\u533a\u95f4\u5185\u7684\u5973\u751f\u6b63\u597d\u6709x\u4e2a\uff0c\u6ce8\u610f\u6b64\u65f6\u82e5has[mid]\u4e3aTRUE\uff0c\u5373mid\u57ce\u5e02\u6709\u5973\u751f\uff0c\u90a3\u4e48mid\u5c31\u662f\u7b2cx\u4e2a\u6709\u5973\u751f\u7684\u57ce\u5e02\u3002\u4f46\u82e5has[mid]\u4e3aFALSE\uff0c\n\u5219\u7b2cx\u4e2a\u6709\u5973\u751f\u7684\u57ce\u5e02\u5728mid\u4e4b\u524d\uff0c\u53ea\u662f\u7b2cx\u4e2a\u6709\u5973\u751f\u7684\u57ce\u5e02\u5230mid\u4e4b\u95f4\u6ca1\u6709\u57ce\u5e02\u6709\u5973\u751f\uff0c\u6240\u4ee5[1, mid]\u5185\u4ecd\u7136\u662fx\u4e2a\u5973\u751f\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e5f\u8981\u5411\u5de6\u4e8c\u5206\u3002  \n\u627e\u5230\u6b63\u786e\u7684mid\u4e4b\u540e\u66f4\u65b0sum\u548ca[mid]: `sum -= a[mid]; a[mid] = 0;`\uff0c\u66f4\u65b0has[mid]\u4e3aFALSE\uff0c\u5e76`add(mid, -1)`\n\n### Q\n\u8f93\u51fasum\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```c\n#include \"stdio.h\"\n#include \"stdlib.h\"\n\ntypedef unsigned char bool;\n#ifndef TRUE\n#define TRUE 1\n#define FALSE 0\n#endif\n\n#define maxcity 500000\n\nlong long a[maxcity + 1];\nint bit[maxcity + 1];\nbool has[maxcity + 1];\n\nint lowbit(int x) {\n\treturn x & -x;\n}\n\nvoid add(int x, int k) {\n\tfor (; x <= maxcity; x += lowbit(x)) {\n\t\tbit[x] += k;\n\t}\n}\n\nint get_sum(int x) {\n\tint result = 0;\n\tfor (; x > 0; x -= lowbit(x)) {\n\t\tresult += bit[x];\n\t}\n\treturn result;\n}\n\nint main() {\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tlong long sum = 0;\n\tint i;\n\tfor (i = 1; i < maxcity + 1; i++) bit[i] = 0;\n\tfor (i = 1; i <= n; i++) {\n\t\tscanf(\"%lld\", a + i);\n\t\tsum += a[i];\n\t\tadd(i, 1);\n\t\thas[i] = TRUE;\n\t}\n\tfor (; i < maxcity + 1; i++) {\n\t\ta[i] = 0;\n\t\thas[i] = FALSE;\n\t}\n\tchar cmd;\n\tint x, y;\n\tfor (i = 0; i < m; i++) {\n\t\tscanf(\" %c\", &cmd);\n\t\tswitch (cmd) {\n\t\tcase 'C': {\n\t\t\tscanf(\"%d %d\", &x, &y);\n\t\t\tsum -= y;\n\t\t\ta[x] -= y;\n\t\t\tbreak;\n\t\t}\n\t\tcase 'I': {\n\t\t\tscanf(\"%d %d\", &x, &y);\n\t\t\tsum += y - a[x];\n\t\t\ta[x] = y;\n\t\t\tif (!has[x]) {\n\t\t\t\thas[x] = TRUE;\n\t\t\t\tadd(x, 1);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'D': {\n\t\t\tscanf(\"%d\", &x);\n\t\t\tint left = 1, right = maxcity, mid, s;\n\t\t\twhile (left <= right) {\n\t\t\t\tmid = (left + right) / 2;\n\t\t\t\ts = get_sum(mid);\n\t\t\t\tif (s == x) {\n\t\t\t\t\tif (has[mid]) {\n\t\t\t\t\t\tsum -= a[mid];\n\t\t\t\t\t\ta[mid] = 0;\n\t\t\t\t\t\thas[mid] = FALSE;\n\t\t\t\t\t\tadd(mid, -1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tright = mid - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (s < x) {\n\t\t\t\t\tleft = mid + 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tright = mid - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'Q': {\n\t\t\tprintf(\"%lld\\n\", sum);\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1569142939,
        "uid": 194439,
        "name": "rediserver",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u5c31\u662f\u4e00\u4e2a\u9700\u8981\u7a0d\u52a0\u53d8\u5316\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u64cd\u4f5c\u8bf4\u660e\uff1a\n\nC \u5355\u70b9\u4fee\u6539\n\nI \u540c\u6837\u662f\u5355\u70b9\u4fee\u6539\uff0c\u4f46\u662f\u9700\u8981\u4e00\u70b9\u53d8\u5316\n\nD \u8fd8\u662f\u5355\u70b9\u4fee\u6539\uff0c\u4e5f\u9700\u8981\u4e00\u70b9\u53d8\u5316\uff08tip:\u8fd9\u91cc\u7684x\u6307\u7684\u4e0d\u662f\u7b2cx\u4e2a\u57ce\u5e02\uff0c\u800c\u662f\u4ece\u524d\u5f80\u540e\u7b2cx\u4e2a\uff0c\u4e24\u8005\u8fd8\u662f\u6709\u533a\u522b\u7684\uff09\n\nQ \u533a\u95f4\u67e5\u8be2\uff0c\u5176\u5b9e\u5c31\u662f\u7ebf\u6bb5\u6811\u91cc\u7684\u8282\u70b9\u4e00\n\n# code #\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int maxn=2000001;\nlong long n,m;\nstruct note{\n    long long l,r,w,cnt;   //l\u8868\u5de6\u7aef\u70b9\uff0cr\u8868\u53f3\u7aef\u70b9\uff0cw\u8868\u989c\u503c\u603b\u548c\uff0ccnt\u8868\u59b9\u5b50\u6570\uff08tip:\u8fd9\u4e2acnt\u662f\u5f88\u91cd\u8981\u7684\uff09\n}d[maxn];\nlong long a[maxn];   // tip:\u989c\u503c\u7684\u503c\u4e00\u5b9a\u8981\u5f00longlong,\u5305\u62ec\u4e0a\u9762\u7684w;\nchar c;\nint x,y;\nvoid build(int k,int s,int t){   //\u5efa\u6811\n    d[k].l=s;\n    d[k].r=t;\n    if(s==t){\n        d[k].w=a[s];\n        if(a[s]>0) d[k].cnt=1;\n        return ;\n    }\n    else{\n        build(k*2,s,(s+t)/2);\n        build(k*2+1,(s+t)/2+1,t);\n        d[k].w=d[k*2].w+d[k*2+1].w;\n        d[k].cnt=d[k*2].cnt+d[k*2+1].cnt;\n    }\n}\nvoid sub(int k){   //\u666e\u901a\u7684\u5355\u70b9\u4fee\u6539\n    if(d[k].l==d[k].r){\n        d[k].w-=y;\n        return ;\n    }\n    int mid=(d[k].l+d[k].r)/2;\n    if(x<=mid) sub(k*2);\n    else sub(k*2+1);\n    d[k].w=d[k*2].w+d[k*2+1].w;\n}\nvoid revise(int k){   //\u8fd8\u662f\u666e\u901a\u7684\u5355\u70b9\u4fee\u6539\n    if(d[k].l==d[k].r){\n         d[k].w=y;\n         d[k].cnt=1;   //cnt=1,\u8fd9\u6837\u7684\u8bdd\u4e0d\u7ba1\u4e4b\u524d\u8fd9\u4e2a\u57ce\u5e02\u6709\u6ca1\u6709\u59b9\u5b50\uff0c\u90fd\u53ef\u4ee5\u6b63\u786e\u8868\u793a\n         return ;\n    }\n    int mid=(d[k].l+d[k].r)/2;\n    if(x<=mid) revise(k*2);\n    else revise(k*2+1);\n    d[k].w=d[k*2].w+d[k*2+1].w;\n    d[k].cnt=d[k*2].cnt+d[k*2+1].cnt;\n}\nvoid leave(int k){  //\u672c\u9898\u6700\u96be\u5904\u7406\u7684\u90e8\u5206\n    if(d[k].l==d[k].r){\n        d[k].w=0;\n        d[k].cnt=0;\n        return ;\n    }\n    if(x<=d[k*2].cnt) leave(k*2); //\u5982\u679c\u5de6\u5b50\u6811\u7684\u59b9\u5b50\u6570\u5927\u4e8ex,\u5c31\u5411\u5de6\u5b50\u6811\u5bfb\u627e     \n    else{   //\u5982\u679c\u5de6\u5b50\u6811\u7684\u59b9\u5b50\u6570\u5c0f\u4e8ex,\u5c31\u5411\u53f3\u5b50\u6811\u5bfb\u627e\uff08tip:\u4e3a\u4ec0\u4e48x\u8fd8\u8981\u51cf\u53bb\u5de6\u5b50\u6811\u7684\u59b9\u5b50\u6570\u5462\uff1f\u60f3\u4e00\u60f3\uff09\n        x-=d[k*2].cnt\uff1b\n        leave(k*2+1)\uff1b\n    }\n    d[k].cnt=d[k*2].cnt+d[k*2+1].cnt;\n    d[k].w=d[k*2].w+d[k*2+1].w;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++) cin>>a[i];\n    build(1,1,500000);\n    for(int i=1;i<=m;i++){\n        cin>>c;\n        if(c=='C'){\n            cin>>x>>y;\n            sub(1);\n        }\n        else if(c=='I'){\n            cin>>x>>y;\n            revise(1);\n        }\n        else if(c=='D'){\n            cin>>x;\n            leave(1);\n        }\n        else if(c=='Q') cout<<d[1].w<<endl\uff1b\n    }\n    return 0;\n}\n```\n~~\u81ea\u8ba4\u4e3a\u7b80\u6d01\u7684\u4ee3\u7801~~",
        "postTime": 1558252834,
        "uid": 70151,
        "name": "\u52a0\u52d2\u6bd4\u00b7\u53f2\u52aa\u6bd4",
        "ccfLevel": 0,
        "title": "P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "### \u9898\u76ee\u94fe\u63a5\n[ycz\u7684\u59b9\u5b50](https://www.luogu.org/problemnew/show/P4879)\n### \u9898\u76ee\u5927\u610f\n\u6bcf\u6b21\u53ef\u4ee5\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u63d2\u5165\u4e00\u4e2a\u70b9\uff0c\u5220\u9664\u4e00\u4e2a\u70b9\uff0c\u8be2\u95ee\u70b9\u6743\u548c\u3002\n### \u9898\u76ee\u601d\u8def\n\u770b\u5230\u9898\u76ee\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u4fee\u6539\u548c\u8be2\u95ee\u64cd\u4f5c\u6211\u4eec\u53ea\u8981\u62ff\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u57ce\u5e02\u7684\u70b9\u6743\u5c31\u884c\u4e86\u3002\u90a3\u4e48\u63d2\u5165\u548c\u5220\u9664\u5462\uff1f  \n\u4e00\u4e2a\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u524d\u7f00\u7684\u6709\u70b9\u6743\u7684\u70b9\u7684\u6570\u91cf\uff0c\u7136\u540e\u63d2\u5165\u7684\u65f6\u5019\u4fee\u6539\u524d\u7f00\u548c\uff0c\u5220\u9664\u7684\u65f6\u5019\u4e8c\u5206\u627e\u5230\u9700\u8981\u5220\u9664\u7684\u70b9\u5c31\u884c\u4e86\u3002\u8fd9\u6837\u63d2\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\Theta(log n)$\uff0c\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\Theta(log^2n)$\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662f$\\Theta(nlog^2n)$\u3002  \n\u90a3\u4e48\u53ef\u4ee5\u518d\u4f18\u5316\u5417\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u6211\u4eec\u6bcf\u6b21\u5220\u9664\u7684\u65f6\u5019\u53ea\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u76f4\u63a5\u4e8c\u5206\u5c31\u53ef\u4ee5\u4e86\uff0c\u7701\u53bb\u4e86\u6bcf\u6b21\u67e5\u8be2\u524d\u7f00\u548c\u7684$log$\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86$\\Theta(logn)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$\\Theta(nlogn)$\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=500010,MAXN=500000;\ninline ll read();\ninline void write(ll x);\ninline void writeln(ll x);\n\nint n,m;\nll a[N],sum=0;\nbool visit[N];\n\nstruct SegmentTree{\n\tint num;\n\t#define num(x) tree[x].num\n\t#define lson(x) (x<<1)\n\t#define rson(x) (x<<1|1)\n} tree[N<<5];\ninline void pushup(int p)\n{\n\tnum(p)=num(lson(p))+num(rson(p));\n}\ninline void build(int p,int l,int r)\n{\n\tif(l==r) return ;\n\tint mid=l+r>>1;\n\tbuild(lson(p),l,mid);\n\tbuild(rson(p),mid+1,r);\n}\ninline void update(int p,int l,int r,int x,int v)\n{\n\tif(l==r)\n\t{\n\t\tnum(p)+=v;\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid) update(lson(p),l,mid,x,v);\n\telse update(rson(p),mid+1,r,x,v);\n\tpushup(p);\n}\ninline int query(int p,int l,int r,int k)\n{\n\tif(l==r) return l;\n\tint mid=l+r>>1;\n\tif(num(lson(p))>=k) return query(lson(p),l,mid,k);\n\telse return query(rson(p),mid+1,r,k-num(lson(p)));\n}\n\ninline char getc()\n{\n\tchar ch=getchar();\n\twhile(ch<'A'||ch>'Z') ch=getchar();\n\treturn ch;\n}\ninline ll read()\n{\n\tll s=0;\n\tbool flag=false;\n\tchar ch=getchar();\n\tfor(;ch<'0'||ch>'9';ch=getchar()) if(ch=='-') flag=true;\n\tfor(;'0'<=ch&&ch<='9';ch=getchar()) s=(s<<3)+(s<<1)+(ch^48);\n\tif(flag) return -s;\n\treturn s;\n}\ninline void write(ll x)\n{\n\tif(!x)\n\t{\n\t\tputchar('0'),putchar(' ');\n\t\treturn ;\n\t}\n\tif(x<0) putchar('-'),x=-x;\n\tchar ch[20];\n\tint tot=0;\n\twhile(x) ch[++tot]=x%10,x/=10;\n\tfor(int i=tot;i;i--) putchar(ch[i]^48);\n\tputchar(' ');\n}\ninline void writeln(ll x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\n\nint main()\n{\n\tn=read(),m=read();\n\tbuild(1,1,MAXN);\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read(),sum+=a[i],update(1,1,MAXN,i,1),visit[i]=true;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tchar ch=getc();\n\t\tif(ch=='Q') writeln(sum);\n\t\tif(ch=='C')\n\t\t{\n\t\t\tint x=read(),y=read();\n\t\t\ta[x]-=y,sum-=y;\n\t\t}\n\t\tif(ch=='I')\n\t\t{\n\t\t\tint x=read(),y=read();\n\t\t\tif(!visit[x]) update(1,1,MAXN,x,1),visit[x]=true;\n\t\t\tsum+=y-a[x],a[x]=y;\n\t\t}\n\t\tif(ch=='D')\n\t\t{\n\t\t\tint x=read();\n\t\t\tx=query(1,1,MAXN,x);\n\t\t\tsum-=a[x],a[x]=0;\n\t\t\tupdate(1,1,MAXN,x,-1);\n\t\t\tvisit[x]=false;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1557236626,
        "uid": 54728,
        "name": "wangxuye",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e3a\u5565\u8981\u641e\u7ebf\u6bb5\u6811\u5e73\u8861\u6811\u5206\u5757\u5440\uff1f\u6811\u72b6\u6570\u7ec4\u591a\u597dQAQ\n\n\u4e24\u79cd\u601d\u8def\u2014\u2014\n\n# \u601d\u8defI\u2014\u2014\u6811\u72b6\u6570\u7ec4+\u4e8c\u5206\n\n\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u59b9\u5b50\u4e2a\u6570\u7684\u524d\u7f00\u548c\u3002\n\n\u5f53\u548c\u59b9\u5b50\u5206\u624b\u65f6\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u59b9\u5b50\u51fa\u73b0\u7684\u57ce\u5e02\u5373\u53ef\uff08\u5373Get(an) == x\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff09\u3002\n\n\u5176\u4ed6\u64cd\u4f5c$O(1)$\u90fd\u53ef\u4ee5\u5b8c\u6210\uff0c\u8fd9\u91cc\u4e0d\u89e3\u91ca\u3002\n\n\u590d\u6742\u5ea6\u4e3a$O(nlog^2n)$\n\n~~\u81f3\u5c11\u6bd4\u5206\u5757\u8981\u5feb~~\n\n\u8fd9\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\uff0c\u4ee3\u7801\u5c31\u4e0d\u7ed9\u4e86\u3002\n\n# \u601d\u8defII\u2014\u2014\u6811\u72b6\u6570\u7ec4+\u500d\u589e\n\n\u6811\u72b6\u6570\u7ec4\u7b80\u76f4\u4e0e\u500d\u589e\u662f\u5929\u751f\u4e00\u5bf9\u5440~\n\n\u867d\u7136\u4e00\u822c\u6765\u8bf4\uff0c\u500d\u589e\u3001\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u662f\u4e00\u6837\u7684\uff0c\u4f46\u5728\u8fd9\u91cc\uff0c\u6811\u72b6\u6570\u7ec4+\u500d\u589e\u505a\u5230\u4e86$O(nlogn)$\u590d\u6742\u5ea6\u3002\n\n\u8fd8\u8bb0\u5f97\u6811\u72b6\u6570\u7ec4\u662f\u600e\u4e48\u6c42\u524d\u7f00\u548c\u7684\u5417\uff1f\u6bd4\u5982$1101100$\n\n$ans=c[(1000000)_2]+c[(1100000)_2]+c[(1101000)_2]+c[(1101100)_2]$\n\n\u5f88\u6e05\u695a\u4e86\u5427\uff1f\n\n\u6240\u4ee5\u76f4\u63a5\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u987a\u5e8f\u679a\u4e3e\uff0c\u5982\u679c\u52a0\u4e0a\u8fd9\u4e00\u4f4d\u7b54\u6848\u8fd8\u6ca1\u5927\u4e8e\u7b49\u4e8e\u6240\u6c42\u503c\uff0c\u5c31\u52a0\u4e0a\u53bb\u3002\u6700\u540e\u7b54\u6848$+1$\u5373\u53ef\u3002\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define Re register\n#define MAXN 500005\n#define LL long long\n\nint N, M, n;\nint c[MAXN];\nLL ans, a[MAXN];\nbool v[MAXN];\n\nvoid Add( int x, int k ){ for ( ; x <= 500000; x += x & -x ) c[x] += k; }\n\nint main(){\n\tscanf( \"%d%d\", &N, &M );\n\tfor ( int i = 1; i <= N; ++i ) scanf( \"%lld\", &a[i] ), ans += a[i], Add( i, 1 ), v[i] = 1;\n\tchar opt[5]; int x, y;\n\t\n\tfor ( int i = 1; i <= M; ++i ){\n\t\tscanf( \"%s\", opt );\n\t\t\n\t\tif ( *opt == 'C' ){\n\t\t\tscanf( \"%d%d\", &x, &y );\n\t\t\tif ( v[x] ) a[x] -= y, ans -= y;\n\t\t} else if ( *opt == 'I' ){\n\t\t\tscanf( \"%d%d\", &x, &y );\n\t\t\tif ( !v[x] ) v[x] = 1, Add( x, 1 ), ans += y, a[x] = y;\n\t\t\telse ans -= a[x] - y, a[x] = y;\n\t\t} else if ( *opt == 'D' ){\n\t\t\tscanf( \"%d\", &x );\n\t\t\tint cur(0);\n\t\t\tfor ( int j = 18; j >= 0; --j ) if ( ( cur | ( 1 << j ) ) <= 500000 && c[cur | ( 1 << j )] < x ) cur |= 1 << j, x -= c[cur];\n\t\t\tcur++; if ( v[cur] ) ans -= a[cur], a[cur] = v[cur] = 0, Add( cur, -1 );\n\t\t} else if ( *opt == 'Q' ) printf( \"%lld\\n\", ans );\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1548462272,
        "uid": 70786,
        "name": "_louhc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    },
    {
        "content": "# \u7f55\u89c1\u7684\u5206\u5757\u9898\u89e3?\n\u5176\u5b9e\u5f88\u5bb9\u6613\u53d1\u73b0\u90fd\u53ea\u9700\u8981\u5355\u70b9\u4fee\u6539\u548c\u8981\u6574\u4f53\u6c42\u548c\u3002\n\n\u5982\u679c\u4e0d\u8003\u8651$D$\u64cd\u4f5c\u5c31\u5f88\u7b80\u5355\u3002\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a$ans$\u8868\u793a\u7b54\u6848\uff0c\u7136\u540e\u6bcf\u6b21\u4fee\u6539\u5c31\u6539$ans$\u548c$a_x$\n\n\u4f46\u662f\u6709$D$\u64cd\u4f5c\u600e\u4e48\u529e\uff1f\u8fd9\u5c31\u53ef\u4ee5\u7528\u5230\u5206\u5757\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5757\u91cc\u6709\u7684\u59b9\u5b50\u6570\uff0c\u7136\u540e\u5f80\u524d\u8df3\u5230\u76ee\u6807\u6240\u5728\u7684\u5757\uff0c\u4e4b\u540e\u5728\u5757\u4e2d\u66b4\u529b\u5bfb\u627e\u3002\n\n\u8df3\u5757\u65f6\u95f4\u590d\u6742\u5ea6$O(\\sqrt n)$\uff0c\u66b4\u529b\u65f6\u95f4\u590d\u6742\u5ea6$O(\\sqrt n)$\u3002\u4e5f\u5c31\u662f\u8fd9\u4e2a\u64cd\u4f5c\u65f6\u95f4$O(\\sqrt n)$\n\n\u6574\u4f53\u65f6\u95f4\u8d1f\u8d23\u5ea6$O(n\\sqrt n)$(\u8fd9\u91cc\u7684n\u662f\u6700\u5927\u7684\u57ce\u5e02\u7f16\u53f7)\n\n# \u4e0a$code$\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<iostream>\n#define ll long long\n#define N 500000\n#define T 1000\nusing namespace std;\nll n,m,a[N+10],ans,no[N+10],x,y,t;\nll L[T],R[T],num[T],pos[N+10];\nchar c;\nvoid ycl()//\u9884\u5904\u7406\n{\n\tt=sqrt(N);\n\tfor(ll i=1;i<=N;i++)\n\t{\n\t\tpos[i]=(i-1)/t+1;\n\t\tif(i>n)\n\t\t  no[i]=1;\n\t}\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tycl();\n\tfor(ll i=1;i<=n;i++)//\u8f93\u5165\n\t{\n\t  scanf(\"%lld\",&a[i]);\n\t  num[pos[i]]++;\n\t  ans+=a[i];\n\t}\n\tfor(ll i=1;i<=m;i++)\n\t{\n\t\tcin>>c;\n\t\tif(c=='Q')//\u8be2\u95ee\u76f4\u63a5\u8f93\u51fa\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\telse if(c=='I')\n\t\t{\n\t\t\tscanf(\"%lld%lld\",&x,&y);\n\t\t\tans-=a[x];a[x]=y;ans+=y;//\u4fee\u6539a[x]\u548c\u6539\u53d8ans\n\t\t\tn=max(n,x);\n\t\t\tif(no[x])//\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u8981\u5bf9num\u8fdb\u884c\u4fee\u6539\n\t\t\t{\n\t\t\t\tno[x]=0;\n\t\t\t\tnum[pos[x]]++;\n\t\t\t}\n\t\t}\n\t\telse if(c=='C')\n\t\t{\n\t\t\tscanf(\"%lld%lld\",&x,&y);\n\t\t\tif(no[x]) continue;//\u9632\u6b62\u8fd9\u4e2a\u57ce\u5e02\u6ca1\u6709\u59b9\u5b50\n\t\t\tans-=y;\n\t\t\ta[x]-=y;\n\t\t}\n\t\telse if(c=='D')\n\t\t{\n\t\t\tscanf(\"%lld\",&x);\n\t\t\tll k=1;\n\t\t\twhile(x-num[k]>0)\n\t\t\t  x-=num[k],k++;//\u8df3\u5757\n\t\t\tfor(int i=(k-1)*t+1;i<=min(k*t,n);i++)\n            //\u5757\u91cc\u66b4\u529b\n\t\t\t{\n\t\t\t    if(!no[i]) --x;\n\t\t\t    if(!x)//\u627e\u5230\u4f4d\u7f6e\uff0c\u5f00\u59cb\u5220\u9664\n\t\t\t    {\n\t\t\t    \tnum[k]--;\n\t\t\t    \tno[i]=1;\n\t\t\t    \tans-=a[i];\n\t\t\t    \ta[i]=0;\n\t\t\t    \tbreak;\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1544183511,
        "uid": 52918,
        "name": "QuantAsk",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4879 \u3010ycz\u7684\u59b9\u5b50\u3011"
    }
]