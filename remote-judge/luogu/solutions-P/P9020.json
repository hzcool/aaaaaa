[
    {
        "content": "\u9898\u610f\uff1a\n\n- \u6709 $n$ \u4e2a\u70b9\uff0c\u7b2c $i$ \u4e2a\u70b9\u6bcf\u79d2\u53ef\u4ea7\u51fa $f_i$ \u70b9\u6cd5\u529b\uff0c\u521d\u59cb\u65f6\u6bcf\u4e2a\u70b9\u7684\u6cd5\u529b\u4e3a $0$\u3002\n- \u6709 $m$ \u6761\u5355\u5411\u8def\u5f84\uff0c\u7b2c $i$ \u6761\u8def\u5f84\u8868\u793a\u4ece $a_i$ \u76f4\u63a5\u8d70\u5230 $b_i$ \u9700\u82b1\u8d39 $t_i$ \u79d2\u3002\n- \u6bcf\u8d70\u5230\u4e00\u4e2a\u70b9\u65f6\u53ef\u7acb\u5373\u6536\u96c6\u8be5\u70b9\u4e0a\u7684\u6240\u6709\u6cd5\u529b\uff0c\u6536\u96c6\u5b8c\u6210\u540e\u8be5\u70b9\u7684\u6cd5\u529b\u6e05\u96f6\u3002\n- $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa\u4e00\u4e2a\u65f6\u523b $s$ \u548c\u4e00\u4e2a\u70b9 $e$\uff0c\u6c42\uff1a\n\t- \u5728 $0$ \u65f6\u523b\uff0c\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u5f00\u59cb\u6536\u96c6\u6cd5\u529b\uff0c\u5728\u4fdd\u8bc1 $s$ \u65f6\u523b\u6070\u597d\u5904\u5728\u70b9 $e$ \u7684\u524d\u63d0\u4e0b\uff0c\u5230 $s$ \u65f6\u523b\u4e3a\u6b62\u6536\u96c6\u5230\u7684\u6cd5\u529b\u7684\u6700\u5927\u503c\u3002\n- $1\\le n\\le 18$\uff0c$0\\le m\\le n(n-1)$\uff0c$1\\le q\\le 2\\cdot 10^5$\uff0c$1\\le a_i,b_i,e\\le n$\uff0c$a_i\\neq b_i$\uff0c$1\\le f_i\\le 10^8$\uff0c$1\\le t_i,s\\le 10^9$\u3002\n\n---\n\n\u8bb0 $\\text{dis}(x,y)$ \u8868\u793a\u4ece $x$ \u8d70\u5230 $y$ \u6240\u9700\u7684\u6700\u77ed\u65f6\u95f4\uff0c\u5148\u7528 Floyd \u7b97\u6cd5\u5c06\u6240\u6709\u70b9\u5bf9 $(x,y)$ \u7684 $\\text{dis}(x,y)$ \u6c42\u51fa\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84\uff0c\u6536\u96c6\u5230\u7684\u6cd5\u529b\u4ec5\u4e0e\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684\u6700\u665a\u904d\u5386\u65f6\u523b\u6709\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4ec5\u9700\u77e5\u9053\u8fd9\u4e9b\u70b9\u7684\u6700\u665a\u904d\u5386\u65f6\u523b\u5373\u53ef\u63a8\u7b97\u51fa\u6536\u96c6\u5230\u7684\u6cd5\u529b\u5927\u5c0f\u3002\u5177\u4f53\u5730\uff0c\u5047\u8bbe\u8def\u5f84\u7ecf\u8fc7\u4e86 $c_1,c_2,\\dots,c_k\\ (c_k=e)$ \u8fd9\u4e9b\u4e92\u4e0d\u76f8\u540c\u7684\u70b9\uff0c\u4e14 $c_i$ \u7684\u6700\u665a\u904d\u5386\u65f6\u523b\u4e3a $d_i\\ (0\\le d_1<d_2<\\dots<d_k=s)$\uff0c\u90a3\u4e48\u6700\u7ec8\u6536\u96c6\u5230\u7684\u6cd5\u529b\u5927\u5c0f\u4e3a $\\sum\\limits_{i=1}^kf_{c_i}\\cdot d_i$\u3002\n\n\u5047\u5982\u786e\u5b9a\u4e86 $c_1,c_2,\\dots,c_k$\uff0c\u90a3\u4e48\u663e\u7136 $d_i$ \u8d8a\u5927\uff0c\u6536\u96c6\u5230\u7684\u6cd5\u529b\u5c31\u8d8a\u591a\uff0c\u53c8\u7531\u4e8e\u4ece $c_i$ \u8d70\u5230 $c_{i+1}$ \u81f3\u5c11\u9700\u8981 $\\text{dis}(c_i,c_{i+1})$ \u79d2\uff0c\u6545\u6211\u4eec\u53d6 $d_i=s-\\sum\\limits_{j=i}^{k-1}\\text{dis}(c_j,c_{j+1})$ \u662f\u6700\u4f18\u7684\u3002\u6539\u5199\u4e00\u4e0b\u6cd5\u529b\u5927\u5c0f\u7684\u5f0f\u5b50\uff0c$\\sum\\limits_{i=1}^kf_{c_i}\\cdot d_i=\\sum\\limits_{i=1}^kf_{c_i}\\cdot \\left(s-\\sum\\limits_{j=i}^{k-1}\\text{dis}(c_j,c_{j+1})\\right)=s\\cdot \\sum\\limits_{i=1}^kf_{c_i}-\\sum\\limits_{i=1}^{k-1}\\text{dis}(c_i,c_{i+1})\\sum\\limits_{j=1}^if_{c_j}$\u3002\n\n\u5c06\u5f0f\u4e2d\u7684 $\\sum\\limits_{i=1}^kf_{c_i}$ \u770b\u4f5c\u659c\u7387\uff0c$-\\sum\\limits_{i=1}^{k-1}\\text{dis}(c_i,c_{i+1})\\sum\\limits_{j=1}^if_{c_j}$ \u770b\u4f5c\u622a\u8ddd\uff0c\u90a3\u4e48\u5b83\u4ee3\u8868\u7684\u5c31\u662f\u4e00\u6761\u76f4\u7ebf\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5b9a\u7684\u70b9\u96c6 $c_1,c_2,\\dots,c_k$\uff0c\u7531\u4e8e\u659c\u7387\u4e3a\u5b9a\u503c\uff0c\u6545\u6211\u4eec\u4ec5\u9700\u4fdd\u7559\u622a\u8ddd\u6700\u5927\u7684\u90a3\u6761\u76f4\u7ebf\u5373\u53ef\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u72b6\u538b\u6765\u9884\u5904\u7406\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u4ec5\u9700\u8003\u8651\u6ee1\u8db3 $c_k=e$ \u7684\u70b9\u96c6\u5bf9\u5e94\u7684\u76f4\u7ebf\uff0c\u5e76\u6c42\u51fa\u5f53\u524d\u6a2a\u5750\u6807 $s$ \u5bf9\u5e94\u7684\u6700\u5927\u7eb5\u5750\u6807\u5373\u53ef\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5355\u8c03\u6808\u7ef4\u62a4\u51f8\u5305\u6765\u9884\u5904\u7406\uff0c\u8be2\u95ee\u65f6\u4e8c\u5206\u67e5\u627e $s$ \u5bf9\u5e94\u7684\u662f\u54ea\u6761\u76f4\u7ebf\u5373\u53ef\u3002\n\n\u4f46\u662f\u522b\u5fd8\u4e86\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4fdd\u8bc1 $d_1\\ge 0$\uff0c\u5373 $\\sum\\limits_{i=1}^{k-1}\\text{dis}(c_i,c_{i+1})\\le s$\u3002\u800c\u4e00\u65e6\u52a0\u4e0a\u4e86\u8fd9\u4e2a\u9650\u5236\uff0c\u95ee\u9898\u5c31\u53d8\u5f97\u5f02\u5e38\u68d8\u624b\u4e86\u2014\u2014\u6211\u4eec\u9700\u8981\u989d\u5916\u8bb0\u5f55 $d_i$ \u7684\u5927\u5c0f\uff0c\u590d\u6742\u5ea6\u76f4\u63a5\u4e0a\u5929\u3002\n\n\u4ed4\u7ec6\u601d\u8003\u4e0b\uff0c\u6211\u4eec\u771f\u7684\u9700\u8981\u523b\u610f\u6ee1\u8db3\u8fd9\u6761\u9650\u5236\u5417\uff1f\u5f53\u7136\u4e0d\u7528\uff01\u56e0\u4e3a\u5f53 $d_1,d_2,\\dots,d_i$ \u4e3a\u8d1f\u6570\u65f6\uff0c\u4ec5\u4fdd\u7559 $c_{i+1},c_{i+2},\\dots,c_k$ \u663e\u7136\u66f4\u4f18\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u5927\u503c\u4e00\u5b9a\u4e0d\u4f1a\u5728 $d_1<0$ \u7684\u76f4\u7ebf\u4e0a\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u4fbf\u7528 $O(n^3+2^nn^2+qn)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u4e86\u672c\u9898\u3002\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u5904\u7406\uff0c\u53ef\u4ee5\u505a\u5230 $O(n^3+2^nn^2+q)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll n,m,q,x,y,z,a[19],dis[19][19],sum[1 << 18],f[1 << 18][19];\nstruct st{ll x,y;};\nvector <st> seg[19];\nvector <ll> stk[19];\nvector <double> pnt[19];\nbool cmp(const st &a,const st &b){return a.x < b.x || a.x == b.x && a.y > b.y;}\ninline ll read(){\n\tll s = 0,w = 1;\n\tchar ch = getchar();\n\twhile (ch > '9' || ch < '0'){ if (ch == '-') w = -1; ch = getchar();}\n\twhile (ch <= '9' && ch >= '0') s = (s << 1) + (s << 3) + (ch ^ 48),ch = getchar();\n\treturn s * w;\n}\nvoid init(){\n\tfor (ll i = 1;i < (1 << n);i += 1) for (ll j = 1;j <= n;j += 1) f[i][j] = 1e18;\n\tfor (ll i = 1;i <= n;i += 1) for (ll j = 1;j <= n;j += 1) if (i ^ j) dis[i][j] = 1e18;\n}\ndouble get(ll o,ll x,ll y){\n\tif (seg[o][x].x == seg[o][y].x) return seg[o][x].y > seg[o][y].y ? -1e18 : 1e18;\n\treturn 1.0 * (seg[o][y].y - seg[o][x].y) / (seg[o][x].x - seg[o][y].x);\n}\nvoid work(ll o){\n\tsort(seg[o].begin(),seg[o].end(),cmp);\n\tstk[o].emplace_back(0),pnt[o].emplace_back(-1e18);\n\tfor (ll i = 0;i < seg[o].size();i += 1){\n\t\tst now = seg[o][i];\n\t\twhile (stk[o].size() > 1 && get(o,i,stk[o].back()) < pnt[o].back()){\n\t\t\tstk[o].pop_back(),pnt[o].pop_back();\n\t\t}\n\t\tpnt[o].emplace_back(get(o,i,stk[o].back())),stk[o].emplace_back(i);\n\t}\n}\nint main(){\n\tn = read(),m = read(),init();\n\tfor (ll i = 1;i <= n;i += 1) a[i] = read();\n\tfor (ll i = 1;i <= m;i += 1) x = read(),y = read(),z = read(),dis[x][y] = z;\n\tfor (ll i = 1;i <= n;i += 1) for (ll j = 1;j <= n;j += 1){\n\t\tfor (ll k = 1;k <= n;k += 1) dis[j][k] = min(dis[j][k],dis[j][i] + dis[i][k]);\n\t}\n\tfor (ll i = 1;i < (1 << n);i += 1){\n\t\tfor (ll j = 1;j <= n;j += 1) if (i & (1 << j - 1)){\n\t\t\tsum[i] += a[j];\n\t\t\tll qwq = i ^ (1 << j - 1);\n\t\t\tif (!qwq){f[i][j] = 0; break;}\n\t\t\tfor (ll k = 1;k <= n;k += 1) if (qwq & (1 << k - 1)){\n\t\t\t\tif (dis[k][j] == 1e18) continue;\n\t\t\t\tf[i][j] = min(f[i][j],f[qwq][k] + sum[qwq] * dis[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (ll i = 1;i <= n;i += 1){\n\t\tfor (ll j = 1;j < (1 << n);j += 1) if (j & (1 << i - 1)){\n\t\t\tseg[i].emplace_back((st){sum[j],-f[j][i]});\n\t\t}\n\t\twork(i);\n\t}\n\tq = read();\n\twhile (q --){\n\t\tx = read(),y = read();\n\t\tll pos = upper_bound(pnt[y].begin(),pnt[y].end(),x) - pnt[y].begin() - 1;\n\t\tprintf(\"%lld\\n\",x * seg[y][stk[y][pos]].x + seg[y][stk[y][pos]].y);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1675096223,
        "uid": 322075,
        "name": "Ecrade_",
        "ccfLevel": 7,
        "title": "[USACO23JAN] Mana Collection P \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u8d5b\u540e\u4e24\u5206\u949f\u8c03\u51fa\u6765\u8fd9\u9898\u7684\u5c0f\u4e11\u3002\n\n\u9996\u5148\u4e00\u4e2a\u663e\u7136\u4f46\u91cd\u8981\u7684\u4e8b\u5b9e\u662f\u4efb\u4f55\u65f6\u523b\u6211\u90fd\u53ef\u4ee5\u5f85\u5728\u67d0\u4e2a\u70b9\u4e0d\u52a8\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5148\u7b49\u5f88\u957f\u65f6\u95f4\uff0c\u7136\u540e\u518d\u8d70\u5230\u8981\u6c42\u7684\u70b9\u3002\n\n\u53e6\u4e00\u4e2a\u6027\u8d28\u662f\u5982\u679c\u4e00\u4e2a\u70b9\u7ecf\u8fc7\u4e86\u591a\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53ea\u5728\u6700\u540e\u4e00\u6b21\u7ecf\u8fc7\u7684\u65f6\u5019\u8bb0\u5f55\u8fd9\u4e2a\u70b9\uff0c\u56e0\u4e3a\u53d6\u591a\u6b21\u548c\u53d6\u4e00\u6b21\u83b7\u5f97\u7684\u8d21\u732e\u662f\u76f8\u7b49\u7684\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8003\u8651\u4e00\u6761\u8def\u5f84\u4e8b\u5b9e\u4e0a\u5bf9\u5e94\u4e86\u4e00\u4e2a\u635f\u5931 $f$\uff0c\u5373\u4f60\u5230\u8fbe\u7ec8\u70b9\u65f6\u8def\u5f84\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\u79ef\u6512\u7684\u8d21\u732e\u548c\u3002\u5047\u8bbe\u65f6\u95f4\u662f $t$\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u7684\u8d21\u732e\u5c31\u662f $(\\sum\\limits_pm_p)t-f$\uff0c\u4e5f\u5c31\u662f\u5148\u7b97\u80fd\u4ea7\u751f\u591a\u5c11\u518d\u51cf\u6389\u635f\u5931\u3002\n\n\u8fd9\u660e\u663e\u662f\u5173\u4e8e $t$ \u7684\u4e00\u6b21\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u674e\u8d85\u6811\u67e5\u8be2\uff0c\u5173\u952e\u5728\u4e8e\u600e\u6837\u6c42\u51fa $f$\u3002\n\n\u8003\u8651 dp\uff0c\u5148\u679a\u4e3e\u8d77\u70b9\uff0c\u8bb0 $dp_{s,i}$ \u8868\u793a\u7ecf\u8fc7\u4e86 $s$ \u4e2d\u7684\u70b9\uff0c\u73b0\u5728\u5728 $i$ \u7684\u6700\u5c0f\u635f\u5931\uff0c\u8f6c\u79fb\u53ef\u4ee5\u76f4\u63a5\u8d21\u732e\u63a8\u8fdf\u8ba1\u7b97\uff0c\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b $dp_{s,i}+sum_s\\times dis_{i,j}\\rightarrow dp_{s+\\{j\\}},j$\uff0c\u5176\u4e2d $sum_s=\\sum\\limits_{i\\in s}m_i$\uff0c$dis_{i,j}$ \u662f\u4e24\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5206\u522b\u53ef\u4ee5\u5728 $O(n2^n)$ \u548c $O(n^3)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u9884\u5904\u7406\u5f97\u5230\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u96c6 $s$ \u90fd\u6c42\u51fa\u4e86\u6700\u5c0f\u635f\u5931\uff0c\u518d\u5bf9\u6bcf\u4e2a\u7ec8\u70b9\u548c\u70b9\u96c6\u627e\u51fa\u4ece\u54ea\u4e2a\u8d77\u70b9\u51fa\u53d1\u635f\u5931\u6700\u5c0f\uff0c\u628a\u5bf9\u5e94\u7684\u4e00\u6b21\u51fd\u6570\u63d2\u5165\u8fd9\u4e2a\u7ec8\u70b9\u5bf9\u5e94\u7684\u674e\u8d85\u6811\u5373\u53ef\uff0c\u67e5\u8be2\u76f4\u63a5\u5728\u7ec8\u70b9\u7684\u674e\u8d85\u6811\u91cc\u67e5\u8be2\u3002\n\n\u8fd9\u91cc\u53ef\u80fd\u6709\u4e00\u4e2a\u95ee\u9898\u662f\u8def\u5f84\u957f\u5ea6\u5927\u4e8e $t$ \u7684\u4e00\u6b21\u51fd\u6570\u4e5f\u5728\u674e\u8d85\u6811\u4e2d\uff0c\u4e0d\u8fc7\u8fd9\u5e76\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7b54\u6848\u3002\u8bc1\u660e\u5c31\u8003\u8651\u8d85\u65f6\u7684\u90a3\u4e00\u90e8\u5206\u8d21\u732e\u4e00\u5b9a\u662f\u8d1f\u7684\uff0c\u4e0d\u5982\u76f4\u63a5\u6254\u6389\u8fd9\u4e00\u6bb5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^32^n+qn)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,m,root[21],tot,ls[3500001],rs[3500001];\nlong long dis[21][21],val[1<<18],dp[1<<18][18],maxn[18][1<<18];\nstruct element\n{\n    long long a,b;\n    long long operator ()(const long long &x) const\n    {\n        return a*x+b;\n    }\n}f[3500001];\ninline void init()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n}\ninline long long read()\n{\n    long long x;\n    cin>>x;\n    return x;\n}\ninline void update(int l,int r,int &k,element p)\n{\n    if(!k)\n    {\n        k=++tot;\n        f[k]=p;\n        return;\n    }\n    if(l==r)\n    {\n        if(p(l)>f[k](l))\n            f[k]=p;\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(p(mid)>f[k](mid))\n        swap(f[k],p);\n    if(p(l)>=f[k](l))\n        update(l,mid,ls[k],p);\n    if(p(r)>=f[k](r))\n        update(mid+1,r,rs[k],p);\n}\ninline long long query(int node,int l,int r,int &k)\n{\n    if(!k)\n        return 0;\n    int mid=(l+r)>>1;\n    long long res=f[k](node);\n    if(node<=mid)\n        res=max(res,query(node,l,mid,ls[k]));\n    else\n        res=max(res,query(node,mid+1,r,rs[k]));\n    return res;\n}\nsigned main()\n{\n    init();\n    n=read(),m=read();\n    for(int i=0;i<n;++i)\n        for(int j=0;j<n;++j)\n            dis[i][j]=1e18;\n    for(int i=0;i<n;++i)\n    {\n        val[1<<i]=read();\n        for(int s=0;s<1<<n;++s)\n            maxn[i][s]=-1e18;\n    }\n    for(int i=0;i<n;++i)\n        for(int s=0;s<1<<n;++s)\n            if(s>>i&1)\n                val[s]+=val[s^(1<<i)];\n    for(int i=1;i<=m;++i)\n    {\n        int x=read()-1,y=read()-1;\n        dis[x][y]=min(dis[x][y],read());\n    }\n    for(int k=0;k<n;++k)\n        for(int i=0;i<n;++i)\n            if(i!=k)\n                for(int j=0;j<n;++j)\n                    if(i!=j&&j!=k)\n                        dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n    for(int i=0;i<n;++i)\n    {\n        for(int s=0;s<1<<n;++s)\n            for(int j=0;j<n;++j)\n                dp[s][j]=1e18;\n        dp[1<<i][i]=0;\n        for(int s=1;s<1<<n;++s)\n            if(s>>i&1)\n                for(int j=0;j<n;++j)\n                    if((s>>j&1)&&dp[s][j]<1e18)\n                        for(int k=0;k<n;++k)\n                            if((s>>k&1^1)&&dis[j][k]<1e18)\n                                dp[s|(1<<k)][k]=min(dp[s|(1<<k)][k],dp[s][j]+dis[j][k]*val[s]);\n        for(int s=1;s<1<<n;++s)\n            if(s>>i&1)\n                for(int j=0;j<n;++j)\n                    if((s>>j&1)&&dp[s][j]<1e18)\n                        maxn[j][s]=max(maxn[j][s],-dp[s][j]);\n    }\n    for(int i=0;i<n;++i)\n        for(int s=0;s<1<<n;++s)\n            if(maxn[i][s]>-1e18)\n                update(1,1e9,root[i],{val[s],maxn[i][s]});\n    m=read();\n    while(m--)\n    {\n        int t=read();\n        cout<<query(t,1,1e9,root[read()-1])<<'\\n';\n    }\n    cout.flush();\n    return 0;\n}\n```",
        "postTime": 1675524800,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "P9020 [USACO23JAN] Mana Collection P \u9898\u89e3"
    },
    {
        "content": "### [\u3010USACO23JAN_Pt T2\u3011Mana Collection](http://usaco.org/index.php?page=viewproblem2&cpid=1285)\n\n[cnblogs](https://www.cnblogs.com/znstz2018/p/17087422.html)\n\n\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u6027\u8d28\uff1a\u82e5\u4e00\u4e2a\u70b9\u88ab\u7ecf\u8fc7\u591a\u6b21\uff0c\u5219\u53ea\u5728\u6700\u540e\u4e00\u6b21\u53d6\u8d70\u4e00\u5b9a\u4e0d\u52a3\u3002\u8bbe\u5728\u8fd9\u4e2a\u6027\u8d28\u4e0b\uff0c\u4f9d\u6b21\u53d6\u8d70 $u_1,u_2, \\cdots ,u_k$ \u4e0a\u7684\u7269\u54c1\uff0c\u5219\u5bf9\u4e8e\u6240\u6709 $i \\in [1,k-1]$\uff0c$u_i$ \u8d70\u5230 $u_{i+1}$ \u4e00\u5b9a\u7ecf\u8fc7\u7684\u662f\u6700\u77ed\u8def\u3002\u5728\u539f\u56fe\u4e2d\u8dd1 Floyd \u6c42\u51fa\u5168\u6e90\u6700\u77ed\u8def\uff0c\u5e76\u5efa\u7acb\u65b0\u56fe\uff1a\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u662f\u539f\u56fe\u4e2d\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u8981\u627e\u5230\u4e00\u6761\u7b80\u5355\u8def\u5f84\u6700\u5927\u5316\uff1a$\\sum m_{u_i}(T-dist(u_i,e))=T\\sum m_{u_i}-\\sum m_{u_i}dist(u_i,e)$\u3002\n\n\u4ee4 $dp(S,u)$ \u8868\u793a\uff1a\u5df2\u7ecf\u8bbf\u95ee\u8fc7 $S$ \u4e2d\u7684\u70b9\uff0c\u76ee\u524d\u5728\u70b9 $u$\uff0c$\\sum m_{u_i}dist(u_i,e)$ \u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\u3002\u8f6c\u79fb\u679a\u4e3e\u4e0b\u4e00\u4e2a\u8bbf\u95ee\u5230\u7684\u70b9 $v$\uff0c\u5c06 $dp(S,u)+\\sum_{x \\in S+\\{v\\}} m_xdist(u,v)$ \u8f6c\u79fb\u5230 $dp(S+\\{v\\},v)$ \u5373\u53ef\u3002\n\n\u8003\u8651\u7edf\u8ba1\u7b54\u6848\uff0c\u5bf9\u4e8e\u4e00\u4e2a $s,e$ \u7684\u67e5\u8be2\uff0c\u6709 $ans=\\max_{T} \\sum_{x \\in T} m_xs-dp(T,e)$\uff0c\u53d1\u73b0\u8fd9\u53ef\u4ee5\u770b\u505a\u4e00\u6761\u659c\u7387\u4e3a $\\sum_{x \\in T} m_x$\uff0c\u622a\u8ddd\u4e3a $dp(T,e)$ \u7684\u76f4\u7ebf\uff0c\u5c06\u8be2\u95ee\u79bb\u7ebf\u7528\u674e\u8d85\u6811\u6216\u8005\u51f8\u58f3\u7ef4\u62a4\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(2^n poly(n))$\u3002\n\n\u4e00\u4e2a\u7591\u95ee\uff1a\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u5982\u679c $dp(T,e)$ \u6ca1\u6709\u65f6\u95f4\u8d70\u5b8c\u600e\u4e48\u529e\u3002\u4f60\u4f1a\u53d1\u73b0\u5982\u679c\u8d70\u4e0d\u5b8c\uff0c\u5219\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u5230\u7684\u70b9\u662f\u201d\u8d1f\u8d21\u732e\u201c\uff0c\u4e0d\u65ad\u5220\u53bb\u7b2c\u4e00\u4e2a\u70b9\uff0c\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u80fd\u8d70\u5b8c\u7684\u4e14\u66f4\u4f18\u7684 $dp(T',e)$\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define fi first\n#define se second\n#define pii pair<long long,long long>\n#define mp make_pair\n#define pb push_back\nconst int mod=998244353;\nconst int inf=0x3f3f3f3f;\nconst int INF=1e18;\nint n,m;\nint g[18][18];\nint dp[1<<18][18],f[1<<18][18];\nint sumw[1<<18];\nint w[18];\nvector <pii > res[18];\nstruct Line\n{\n\tint k,b;\n}p[1000005];\nint t[12000005];\nint ls[12000005],rs[12000005];\nint idx,tid;\nvoid init()\n{\n\tidx=0,tid=1;\n\tls[1]=0,rs[1]=0,t[1]=0;\n\tp[0].k=1,p[0].b=-9LL*INF;\n}\nvoid add_line(int k,int b)\n{\n\tp[++idx].k=k;\n\tp[idx].b=b;\n}\nint get_y(int id,int x)\n{\n\treturn p[id].k*x+p[id].b;\n}\nvoid update(int &id,int l,int r,int lid)\n{\n//\tcout<<id<<\" \"<<l<<\" \"<<r<<\" \"<<lid<<endl;\n\tif(!id) id=++tid,t[id]=0,ls[id]=rs[id]=0;\n\tint mid=(l+r)>>1;\n\tif(get_y(lid,mid)>get_y(t[id],mid)) swap(lid,t[id]);\n\tif(get_y(lid,l)>get_y(t[id],l)) update(ls[id],l,mid,lid);\n\tif(get_y(lid,r)>get_y(t[id],r)) update(rs[id],mid+1,r,lid);\t\n}\nvoid insert(int &id,int l,int r,int x,int y,int lid)\n{\n\tif(!id) id=++tid,t[id]=0,ls[id]=rs[id]=0;\n\tif(x<=l&&r<=y)\n\t{\n\t\tupdate(id,l,r,lid);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid) insert(ls[id],l,mid,x,y,lid);\n\tif(y>mid) insert(rs[id],mid+1,r,x,y,lid);\n}\nint query(int id,int l,int r,int x)\n{\n\tif(!id) return -1;\n\tint mid=(l+r)>>1;\n\tint res=get_y(t[id],x);\n//\tcout<<id<<\" \"<<l<<\" \"<<r<<\" \"<<t[id]<<\" \"<<x<<\" \"<<res<<endl;\n\tif(l==r) return res;\n\tif(x<=mid) res=max(res,query(ls[id],l,mid,x));\n\telse res=max(res,query(rs[id],mid+1,r,x));\n\treturn res;\n}\nvector <pii > que[18];\nint ans[200005];\nvoid solve()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=0;i<n;i++) scanf(\"%lld\",&w[i]);\n\tmemset(g,0x3f,sizeof(g));\n\twhile(m--)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tu--,v--;\n\t\tg[u][v]=w;\n\t}\n\tfor(int i=0;i<n;i++) g[i][i]=0;\n\tfor(int k=0;k<n;k++) for(int i=0;i<n;i++) for(int j=0;j<n;j++) g[i][j]=min(g[i][j],g[i][k]+g[k][j]);\n\tmemset(dp,0x3f,sizeof(dp)),memset(f,0x3f,sizeof(f));\n\tfor(int mask=0;mask<(1<<n);mask++) for(int i=0;i<n;i++) if(mask&(1<<i)) sumw[mask]+=w[i];\n\tfor(int i=0;i<n;i++) dp[1<<i][i]=0,f[1<<i][i]=0;\n\tfor(int mask=0;mask<(1<<n);mask++) for(int i=0;i<n;i++) if(f[mask][i]<INF)\n\t{\n\t\tfor(int j=0;j<n;j++) if(g[i][j]<INF) if(!(mask&(1<<j)))\n\t\t{\n\t\t\tdp[mask|(1<<j)][j]=min(dp[mask|(1<<j)][j],dp[mask][i]+sumw[mask]*g[i][j]);\n\t\t\tf[mask|(1<<j)][j]=min(f[mask|(1<<j)][j],f[mask][i]+g[i][j]);\n\t\t}\n\t}\n\tfor(int mask=0;mask<(1<<n);mask++) for(int i=0;i<n;i++) if(f[mask][i]<INF) res[i].pb(mp(sumw[mask],-dp[mask][i]));\n\tfor(int i=0;i<n;i++) sort(res[i].begin(),res[i].end()),reverse(res[i].begin(),res[i].end()); \n\tint q;\n\tscanf(\"%lld\",&q);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint t,u;\n\t\tscanf(\"%lld%lld\",&t,&u);\n\t\tu--;\n\t\tque[u].pb(mp(t,i));\n\t}\n\tint rt=1;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tinit();\n\t\tfor(int j=0;j<res[i].size();j++) \n\t\t{\n\t\t\tadd_line(res[i][j].fi,res[i][j].se);\n\t\t\tinsert(rt,1,1000000005,1,1000000005,idx);\n\t\t}\n\t\tfor(int j=0;j<que[i].size();j++) ans[que[i][j].se]=query(rt,1,1000000005,que[i][j].fi);\n\t}\n\tfor(int i=1;i<=q;i++) printf(\"%lld\\n\",ans[i]);\n}\nsigned main()\n{\n\tint _=1;\n//\tcin>>_;\n\twhile(_--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1675523945,
        "uid": 302837,
        "name": "znstz2018",
        "ccfLevel": 7,
        "title": "\u3010USACO23JAN_Pt T2\u3011Mana Collection \u9898\u89e3"
    }
]