[
    {
        "content": "by zcysky\n\n\u51fa\u9898\u4eba\u662f\u4e2a\u667a\u969c\uff0c\u8fd9\u4e2a\u9898\u53ef\u80fd\u662f\u6d1b\u8c372017\u5e74\u4ee5\u6765\u6708\u8d5b\u6700\u7b80\u5355\u7684\u9898\u3002\n\n\u539f\u672c\u51fa\u9898\u4eba\u8fd9\u6bb5\u65f6\u95f4\u5728\u6c89\u8ff7Angel Beats\uff0c\u7ed3\u679c\u4ed6\u6b63\u6253\u7b97\u5199\u9898\u9762\u7684\u65f6\u5019\u53d1\u73b0\u4e86\u4e00\u4e2a\u4e86\u4e0d\u5f97\u7684\u4e8b\u5b9e\uff1a\n\n\u66fe\u7ecf\u6709\u4e00\u4f4d\u53eb\u505ajxxx\\_2\u7684dalao\u7528\u8fc7Tachibana Kanade\u4f5c**\u4e3a\u67d0\u79cd\u7ebf\u6bb5\u6811**\u7684\u4ee3\u8a00\u4eba\u2026\u2026\n\n\u4e8e\u662f\u9898\u9762\u5c31\u53d8\u6210\u4e86\u73b0\u5728\u6ce5\u840c\u770b\u5230\u7684\u6837\u5b50\u3002\uff08\u8fd8\u633a\u840c\u7684\u4e0d\u662f\u5417~\uff09\n\n30\u5206\uff1a\n\n\u60a8\u4f1a\u5199\u7ebf\u6bb5\u6811\u5417\uff1f\n\n\u76f4\u63a5\u6a21\u62df\u5373\u53ef\u3002\n\n\u4ec0\u4e48\uff1f\u4e0d\u4f1a\u5199\uff1f\u90a3\u5c31\u628a\u9898\u9762\u4e0a\u7684\u62d6\u4e0b\u6765\u5373\u53ef\u3002\n\n\n70\u5206\uff1a\n\n\u8003\u8651\u671f\u671b\u7684\u6027\u8d28\u3002\u6211\u4eec\u53d1\u73b0\u671f\u671b\u5177\u6709\u7ebf\u6027\u6027\u3002\u90a3\u4e48\u6bcf\u4e00\u68f5\u5b50\u6811\u5168\u90e8\u88ab\u533a\u95f4\u52a0\u4e4b\u540e\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u53ef\u4ee5\u5355\u72ec\u8ba1\u7b97\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u6b63\u5e38\u7684\u7ebf\u6bb5\u6811\u6253\u6807\u8bb0\u7684\u505a\u6cd5\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u590d\u6742\u5ea6\uff1a $O(nlogn)$\n\n\n100\u5206\uff1a\n\n\u56de\u987e\u8ba1\u7b97\u7b54\u6848\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u7b54\u6848\u4ea7\u751f\u5b9e\u9645\u8d21\u732e\u7684\u70b9\u53ea\u8ddf\u53f6\u5b50\u8282\u70b9\u548c\u4ed6\u7684\u6df1\u5ea6\u6709\u5173\u3002\u6df1\u5ea6\u53ef\u4ee5\u7ef4\u62a4\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u524d\u7f00\u548c\uff0c\u8fd9\u6837\u53ef\u4ee5 $O(1)$ \u7684\u56de\u7b54\u8be2\u95ee\u3002\n\n\u5177\u4f53\u8d21\u732e\u7684\u8ba1\u7b97\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5982\u679c\u8fd8\u4e0d\u6e05\u695a\u7684\u53ef\u4ee5\u770b\u6807\u7a0b\u3002\n\n\n\u590d\u6742\u5ea6\uff1a$O(n)$\n\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=1e7+5;\nll sumv[maxn<<1],a[maxn],s[maxn];\nint p[maxn];\nnamespace io\n{\n    const int MAXBUF = 1 << 22;\n    char B[MAXBUF], *S = B, *T = B;\n    #define getc() (S == T && (T = (S = B) + fread(B, 1, MAXBUF, stdin), S == T) ? 0 : *S++)\n    template<class Type> inline Type read()\n    {\n        register Type aa = 0;\n        register bool bb = 0;\n        register char ch, *S = io::S, *T = io::T;\n        for(ch = getc(); (ch < '0' || ch > '9') && ch != '-'; ch = getc())\n            ;\n        for(ch == '-' ? bb = 1 : aa = ch - '0', ch = getc(); '0' <= ch && ch <= '9'; ch = getc())\n            aa = aa * 10 + ch - '0';\n        io::S = S, io::T = T;\n        return bb ? -aa : aa; \n    }\n    int (*F)() = read<int>;\n    \n    template<> inline double read()\n    {\n        register double aa, bb;\n        register char ch;\n        register char *S = io::S, *T = io::T;\n        while(ch=getc(),(ch<'0'||ch>'9'))\n            ;aa=ch-'0';\n        while(ch=getc(),(ch>='0'&&ch<='9'))aa=aa*10+ch-'0';\n        if(ch=='.'){bb=1;while(ch=getc(),ch>='0'&&ch<='9')bb*=0.1,aa+=bb*(ch-'0');}\n        io::S = S, io::T = T;\n        return aa;\n    }\n    \n    char buff[MAXBUF], *iter = buff;\n    template<class T>inline void P(register T x, register char ch = '\\n')\n    {\n        static int stack[110];\n        register int O = 0;\n        register char *iter = io::iter;\n        if(!x)*iter++ = '0';\n        else\n        {\n            (x < 0) ? x = -x, *iter++ = '-' : 1;\n            for(; x; x /= 10)\n                stack[++O] = x % 10;\n            for(; O; *iter++ = '0' + stack[O--])\n                ;\n        }\n        *iter++ = ch, io::iter = iter;\n    }\n    \n    inline void putc(register char ch) {*iter++ = ch;}\n    \n    inline void ouput() {fwrite(buff, 1, iter - buff, stdout), iter = buff;}\n}\n#define lson o<<1\n#define rson o<<1|1\nint d=0;\ninline void build(int l,int r,int o,int t){\n    if(l==r){sumv[o]=a[l];p[l]=t;d=max(d,t);return;}\n    int mid=l+r>>1;\n    build(l,mid,lson,t+1);\n    build(mid+1,r,rson,t+1);\n    sumv[o]=sumv[lson]+sumv[rson];\n}\ninline ll query(int l,int r,int o,int t,ll tt){\n    if(l==r){return 1LL*(1LL<<t)*(tt+sumv[o]);}\n    int mid=l+r>>1;\n    return query(l,mid,lson,t-1,tt+sumv[o])+query(mid+1,r,rson,t-1,tt+sumv[o]);\n}\nll gcd(ll a,ll b){\n    while(b){\n        ll r=a%b;a=b;b=r;\n    }\n    return a;\n} \nint main(){\n    using io::P;\n    int (*F)()=io::read<int>;\n    int n=F(),m=F(),yyy=F();\n    for(register int i=1;i<=n;++i)a[i]=F();\n    build(1,n,1,1);\n    ll ans=query(1,n,1,d-1,0),y=1LL<<(d-1);\n    ll yy=gcd(y,yyy);yyy/=yy;y/=yy;\n    for(register int i=1;i<=n;++i)s[i]=s[i-1]+1LL*(((1LL<<p[i])-1)<<(d-p[i]));\n    while(m--){\n        int l=F(),r=F(),x=F();\n        ans+=(s[r]-s[l-1])*x;\n        P(ans/y*yyy);\n        io::ouput();\n    }\n}\n```",
        "postTime": 1505656511,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3924 \u3010\u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811\u3011"
    },
    {
        "content": "## \u4e0a\u9762\u4e24\u4f4ddalao\u8c08\u7b11\u98ce\u751f\u5c31\u8bb2\u5b8c\u4e86\u8fd9\u9053\u9898\uff0c\u4f46\u8eab\u4e3a\u849f\u84bb\u7684\u6211\u4e00\u7a8d\u4e0d\u901a\uff0c\u597d\u4e0d\u5bb9\u6613\u60f3\u901a\u4e86\u5199\u4e2a\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n2018 09 14 upd:\u611f\u8c22[@cqxxx](https://www.luogu.org/space/show?uid=80885)\u5927\u4f6c\u6307\u6b63\u4e86\u9898\u89e3\u91cc\u7684\u9519\u8bef\u3002\u81f4\u656c\uff01\n\n2018 09 15 upd:\u518d\u6b21\u611f\u8c22[@cqxxx](https://www.luogu.org/space/show?uid=80885)\u5927\u4f6c\u4e0e\u6211\u7684\u4ea4\u6d41\uff0c\u7ec8\u4e8e\u5168\u9762\u5730\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u3002\u518d\u6b21\u81f4\u656c\uff01\n\n---\n\n\u8fd9\u9053\u9898\u8981\u7ef4\u62a4\u4e00\u4e2a\u7ebf\u6bb5\u6811\u91cc\u9762\u7684\u671f\u671b\u3002\u671f\u671b\u662f\u8fd9\u4e48\u8ba1\u7b97\u7684\uff1a\n\n> \u5982\u679c\u6bcf\u6b21\u5728\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\u64cd\u4f5c\u505a\u5b8c\u540e\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7b49\u6982\u7387\u7684\u9009\u62e9\u4e00\u4e2a\u5b50\u8282\u70b9\u8fdb\u5165\uff0c\u76f4\u5230\u8fdb\u5165\u53f6\u5b50\u7ed3\u70b9\u4e3a\u6b62\uff0c\u5c06\u4e00\u8def\u7ecf\u8fc7\u7684\u8282\u70b9\u6743\u503c\u7d2f\u52a0\uff0c\u6700\u540e\u80fd\u5f97\u5230\u7684\u671f\u671b\u503c\u662f\u591a\u5c11\uff1f\n\n## \u6700\u6734\u7d20\u8ba1\u7b97\u671f\u671b\u7684\u601d\u8def\n\n\u6839\u7ed3\u70b9\u6743\u503c\u4e58\u4ee51 + \u6240\u6709\u7b2c\u4e8c\u5c42\u7ed3\u70b9\u6743\u503c\u548c\u4e58\u4ee5\u4e8c\u5206\u4e4b\u4e00 + \u6240\u6709\u7b2c\u4e09\u5c42\u7ed3\u70b9\u6743\u503c\u548c\u4e58\u4ee5\u56db\u5206\u4e4b\u4e00 \u76f4\u5230\u5230\u8fbe\u53f6\u5b50\u7ed3\u70b9\u4e3a\u6b62\uff0c\u628a\u8fd9\u4e9b\u4e1c\u897f\u90fd\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002\n\n## \u4e00\u4e2a\u4f18\u5316\u7684\u601d\u8def\n\n\u56e0\u4e3a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u8fdb\u5165\uff0c\u6bcf\u4e00\u4e2a\u552f\u4e00\u7684\u8def\u5f84\u4f1a\u8d70\u5411\u552f\u4e00\u7684\u53f6\u5b50\u7ed3\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u671f\u671b\u3002\n\n\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u503c\u5176\u5b9e\u5c31\u662f**\u4ece\u6839\u7ed3\u70b9\u5230\u8fbe\u8fd9\u4e2a\u53f6\u5b50\u7ed3\u70b9\u8def\u5f84\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\u6743\u503c\u548c\u9664\u4ee5$2^{dep - 1}$**\u3002\u53ef\u4ee5\u8bc1\u660e\u7b54\u6848\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7ed3\u70b9\u56e0\u4e3a\u6df1\u5ea6\u5173\u7cfb\u4e00\u5b9a\u4f1a\u88ab\u8d70\u56fa\u5b9a\u591a\u6b21\u3002\n\n\u8fd9\u91cc\u7528\u5230\u4e00\u4e2a\u7b80\u4fbf\u8fd0\u7b97\u7684\u7ec6\u8282\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\u7684\u8d21\u732e\u90fd\u8981\u9664\u4ee5$2^{dep-1}$\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5efa\u6811\u7684\u65f6\u5019\u9884\u5904\u7406\u51fa\u53f6\u5b50\u7ed3\u70b9\u6700\u5927\u6df1\u5ea6$maxd$\u3002\n\n\u7136\u540e\u6211\u4eec\u7b97\u51fa\u5404\u8282\u70b9\u6743\u503c\u548c\u4e58\u4ee5$2^{maxd - dep}$\uff0c\u518d\u5171\u540c\u9664\u4ee5$2^{maxd-1}$\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n## \u524d\u7f00\u548c\u7ef4\u62a4\n\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u5206\u6790\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u7b54\u6848\u5c31\u53ea\u8ddf\u53f6\u5b50\u7ed3\u70b9\u7684\u6df1\u5ea6\u6709\u5173\u4e86\u3002\uff08\u65e0\u6cd5\u7406\u89e3\u7684\u770b\u4e0a\u9762\u9ed1\u4f53\u5b57\uff0c\u7136\u540e\u753b\u4e2a\u7ebf\u6bb5\u6811\u6a21\u62df\u4e00\u4e0b\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7ef4\u62a4\u5355\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u6765\u7ef4\u62a4\u7b54\u6848\u7684\u589e\u52a0\u3002\n\n\u6211\u4eec\u8df3\u56de\u539f\u6765\u7684\u601d\u8def\u3002\u5148\u8003\u8651\u5355\u8282\u70b9\u7684\u52a0\u3002\n\n\u662f\u4e0d\u662f\u4ece\u6839\u7ed3\u70b9\u5230\u8fd9\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u76f8\u5e94\u503c\u90fd\u4f1a\u589e\u52a0$x$\u8fd9\u4e48\u591a\uff1f\n\n\u6240\u4ee5\u5355\u8282\u70b9\u503c\u589e\u52a0$x$\uff0c\u7b54\u6848\u5c31\u4f1a\u589e\u52a0\n\n$$x \\times \\sum_{i=1}^{dep}{\\frac{1}{2^{i-1}}}$$\n\n\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u4e2a\u7b49\u6bd4\u6570\u5217\uff0c\u5f88\u5bb9\u6613\u5730\u5316\u7b80\u4e3a$1 + 1 - \\frac{1}{2^{dep-1}} = 2 - \\frac{1}{2^{dep-1}} = \\frac{2^{dep}-1}{2^{dep-1}}$\u3002\n\n\u533a\u95f4\u52a0\u4e5f\u597d\u7ef4\u62a4\uff0c\u76f4\u63a5\u5f04\u4e2a\u524d\u7f00\u548c\u5c31\u662f\u4e86\u3002\u53ef\u4ee5\u76f4\u63a5\u4e58\u4e0a\u53bb\u3002\n\n## \u4ee3\u7801\n\n\u4ee3\u7801\u662f\u53c2\u8003\u6807\u7b97\u7684\uff0c\u53cd\u624b%\u4e00\u6ce2zcy\u5927\u4f6c\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define ll long long\n#define lson (root << 1)\n#define rson (root << 1 | 1)\nconst int maxn = 1000005;\nll sum[maxn << 2], lazy[maxn << 2];\nll a[maxn], dep[maxn];\nll s[maxn];\nll n, m, qwq;\nll maxd;\n\nll read()\n{\n    ll ans = 0, s = 1;\n    char ch = getchar();\n    while(ch > '9' || ch < '0'){ if(ch == '-') s = -1; ch = getchar(); }\n    while(ch >= '0' && ch <= '9') ans = (ans << 1) + (ans << 3) + ch - '0', ch = getchar();\n    return s * ans;\n}\nvoid build(ll root, ll l, ll r, ll d)//\u76f8\u6bd4\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u591a\u7edf\u8ba1\u4e86\u6df1\u5ea6\uff0c\u5e76\u7ef4\u62a4\u6700\u5927\u6df1\u5ea6\n{\n    if(l == r)\n    {\n        sum[root] = a[l];\n        dep[l] = d;\n        maxd = std::max(maxd, d);\n        return;\n    }\n    ll mid = (l + r) >> 1;\n    build(lson, l, mid, d + 1);\n    build(rson, mid + 1, r, d + 1);\n    sum[root] = sum[lson] + sum[rson];\n}\nll query(ll root, ll l, ll r, ll t, ll tt)//tt\u8868\u793a\u5f53\u524d\u7ed3\u70b9\u4ee5\u4e0a\u7684\u90a3\u4e9b\u7ed3\u70b9\u6743\u503c\u548c\uff0ct\u7684\u610f\u4e49\u770b\u4e0b\u9762\n{\n    if(l == r) return (1 << t) * (tt + sum[root]);//\u8fd4\u56de\u7684\u503c\u662f\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u8fd4\u56de\u503c\u662f\u8def\u5f84\u6743\u503c\u548c \u4e58\u4ee5 2^(maxd - dep[i])\n    ll mid = (l + r) >> 1;\n    return query(lson, l, mid, t - 1, tt + sum[root]) + query(rson, mid + 1, r, t - 1, tt + sum[root]);\n}\nll gcd(ll x, ll y)\n{\n    if(y == 0) return x;\n    return gcd(y, x % y);\n}\nint main()\n{\n    n = read(), m = read(), qwq = read();\n    for(int i = 1; i <= n; i++) a[i] = read();\n    build(1, 1, n, 1);\n    ll ans = query(1, 1, n, maxd - 1, 0), y = 1 << (maxd - 1);\n    ll yue = gcd(y, qwq);//\u7ea6\u5206\uff0c\u522b\u4e2d\u9014\u8d85\u51fa\u8303\u56f4\u4e86\n    y /= yue; qwq /= yue;\n    for(ll i = 1; i <= n; i++) s[i] = s[i - 1] + (((1 << dep[i]) - 1) << (maxd - dep[i]));\n    //\u540e\u9762\u52a0\u7684\u5f0f\u5b50\u5176\u5b9e\u662f(2^(dep[i]) - 1) * 2^(maxd - dep[i])\n    while(m--)\n    {\n        ll l = read(), r = read(), w = read();\n        ans += (s[r] - s[l - 1]) * w;\n        printf(\"%lld\\n\", ans / y * qwq);// ans / y\u662f\u771f\u6b63\u7684\u671f\u671b\uff0cy\u53d62^(maxd - 1)\n    }\n    return 0;\n}\n```",
        "postTime": 1536478867,
        "uid": 51497,
        "name": "Garen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3924 \u3010\u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811\u3011"
    },
    {
        "content": "\u633a\u5999\u7684\u4e00\u9053\u671f\u671b\u9898\n\n\u9996\u5148\u7ecf\u8fc7\u4e00\u756a\u7b80\u5355\u7684\u601d\u8003\u5c31\u4f1a\u53d1\u73b0\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9$x$\uff0c\u6df1\u5ea6\u4e3a$deep[x]$\uff0c\u90a3\u4e48\u8d70\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u6982\u7387\u5c31\u662f$2^{deep[x]}$\n\n\u6211\u4eec\u8bbe$val[x]$\u8868\u793a\u53f6\u8282\u70b9$x$\u5230\u6839\u7ecf\u8fc7\u7684\u6240\u6709\u8282\u70b9\u7684\u6743\u503c\u548c\u4e3a$val[x]$\n\n\u4e8e\u662f\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\n\n$$qwq*\\sum_{i=1}^{n}\\frac{val[i]}{2^{deep[i]}}$$\n\n\u8fde\u5206\u6bcd\u90fd\u4e0d\u4e00\u6837\uff0c\u4e8e\u662f\u5148\u901a\u5206\u4e00\u4e0b\u5427\n\n$$qwq*\\sum_{i=1}^n\\frac{val[i]*2^{maxdep-deep[i]}}{2^{maxdep}}$$\n\n\u4f46\u662f\u8981\u662f\u9047\u4e0a\u4e86\u533a\u95f4\u4fee\u6539\u5462\uff0c\u6211\u4eec\u5b8c\u5168\u6ca1\u6709\u529e\u6cd5\u7ef4\u62a4$val[i]$\n\n\u597d\u50cf\u9047\u4e0a\u4e86\u74f6\u9888\n\n\u4e8e\u662f\u6211\u4eec\u6362\u4e00\u4e2a\u601d\u8def\uff0c**\u5bf9\u6574\u68f5\u7ebf\u6bb5\u6811\u6765\u8003\u8651\uff0c\u5728\u7b97\u6982\u7387\u7684\u65f6\u5019\uff0c\u663e\u7136\u6811\u4e0a\u6709\u5f88\u591a\u8282\u70b9\u662f\u88ab\u591a\u6b21\u8ba1\u5165\u7b54\u6848\u7684**\n\n\u6bd4\u5982\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9$[1,n]$\u6bcf\u4e00\u4e2a\u70b9\u7684$val$\u90fd\u7b97\u5165\u4e86\u8fd9\u4e2a\u70b9\n\n\u8fd9\u5177\u6709\u975e\u5e38\u5999\u7684\u6027\u8d28\n\n\u6211\u4eec\u6682\u4e14\u5c06\u5206\u5b50\u4e0a\u7684$2^{maxdep-deep[i]}$\u79f0\u4e3a\u53f6\u8282\u70b9\u7684\u6743\uff0c**\u90a3\u4e48\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u975e\u53f6\u8282\u70b9\u7684\u603b\u6743\u503c\u5c31\u662f\u5176\u5185\u90e8\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u6743\u7684\u548c\uff0c\u5c31\u662f\u5b50\u6811\u548c**\n\n\u90a3\u4e48\u8fd9\u4e2a\u5b50\u6811\u548c\u663e\u7136\u5c31\u8868\u793a**\u5728\u6700\u7ec8\u8ba1\u5165\u7b54\u6848\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\u7ba1\u8f96\u7684\u533a\u95f4\u548c\u5e94\u8be5\u4e58\u4e0a\u591a\u5c11\u6b21**\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u5199\u6210\n\n$$qwq*\\sum_{i=1}^M\\frac{sum[i]*d[i]}{2^{maxdep}}$$\n\n$sum[i]$\u8868\u793a\u5b50\u6811\u548c\uff0c$d[i]$\u8868\u793a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9$i$\u6240\u7ba1\u8f96\u7684\u533a\u95f4\u548c\uff0c$M$\u4e3a\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u4e2a\u6570\n\n\u73b0\u5728\u518d\u6765\u8003\u8651\u4e00\u4e0b\u4fee\u6539\u4e00\u4e2a\u8282\u70b9\u4f1a\u5bf9\u6574\u4e2a\u7ebf\u6bb5\u6811\u4ea7\u751f\u4ec0\u4e48\u6837\u7684\u5f71\u54cd\n\n**\u663e\u7136\u5c31\u662f\u4ece\u8fd9\u4e2a\u8282\u70b9\u4e00\u76f4\u5f80\u4e0a\u76f4\u5230\u6839\u6240\u6709\u8282\u70b9\u7684\u7ba1\u8f96\u7684\u533a\u95f4\u548c\u90fd\u4f1a\u76f8\u5e94\u7684\u589e\u52a0**\n\n**\u6211\u4eec\u8bbe$pre[i]$(\u53ef\u4ee5\u7406\u89e3\u4e3a\u6839\u8def\u5f84\u524d\u7f00\u548c)\u8868\u793a$i$\u8fd9\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7ecf\u8fc7\u7684\u6240\u6709\u8282\u70b9\u7684$sum$\u7684\u548c\u4e3a\u591a\u5c11\uff0c\u5982\u679c\u8fd9\u6b21\u4fee\u6539\u7684\u589e\u91cf\u4e3a$k$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6574\u4e2a\u7ebf\u6bb5\u6811\u7684\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f$pre[i]*k$**\n\n**\u4e4b\u540e\u5c31\u4f1a\u53d1\u73b0\u597d\u50cf\u6bcf\u4e00\u4e2a\u5355\u70b9\u4e4b\u95f4\u7684\u4fee\u6539\u4e92\u4e0d\u5f71\u54cd\uff0c\u4e8e\u662f\u5982\u679c\u5bf9\u4e00\u4e2a\u533a\u95f4$[x,y]$\u8fdb\u884c\u4fee\u6539\u7684\u8bdd\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f$k*\\sum_{i=x}^ypre[i]$**\n\n\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u5bf9$pre$\u6570\u7ec4\u505a\u51fa\u4e00\u4e2a\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u5feb\u901f\u56de\u7b54\u4e86\n\n\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define re register\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define maxn 1000005\ninline int read()\n{\n\tre char c=getchar();\n\tre int x=0,r=1;\n\twhile(c<'0'||c>'9') \n\t{\n\t\tif(c=='-') r=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t\tx=(x<<3)+(x<<1)+c-48,c=getchar();\n\treturn x*r;\n} \ninline void write(LL x)\n{\n\tif(x>9) write(x/10);\n\tputchar(x%10+48);\n}\nint a[maxn];\nint deep[maxn];\nint p[maxn],val[maxn];\nLL sum[maxn<<2],pre[maxn];\nint n,Q,qwq,maxdep;\nLL ans,FM;\nvoid build(int x,int y,int dep,LL Sum)//\u6c42\u51fa\u6240\u6709\u53f6\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u548cval\n{\n\tif(x==y)\n\t{\n\t\tdeep[x]=dep;\n\t\tval[x]=Sum;\n\t\tmaxdep=max(maxdep,dep);\n\t\treturn;\n\t}\n\tint mid=x+y>>1;\n\tbuild(x,mid,dep+1,Sum+p[mid]-p[x-1]),build(mid+1,y,dep+1,Sum+p[y]-p[mid]);\n}\nLL dfs(int x,int y,int i)//\u6c42\u51fa\u7ebf\u6bb5\u6811\u4e0a\u6240\u6709\u70b9\u7684\u5b50\u6811\u548c\n{\n\tif(x==y) return sum[i]=1ll<<(maxdep-deep[x]);\n\tint mid=x+y>>1;\n\treturn sum[i]=dfs(x,mid,i<<1)+dfs(mid+1,y,i<<1|1);\n}\nvoid Pre_Dfs(int x,int y,int i,LL Sum)//\u6c42\u51fa\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684pre\u503c\n{\n\tif(x==y)\n\t{\n\t\tpre[x]=Sum;\n\t\treturn;\n\t}\n\tint mid=x+y>>1;\n\tPre_Dfs(x,mid,i<<1,Sum+sum[i<<1]),Pre_Dfs(mid+1,y,i<<1|1,Sum+sum[i<<1|1]);\n}\ninline LL gcd(LL a,LL b)\n{\n\tif(!b) return a;\n\treturn gcd(b,a%b);\n}\nint main()\n{\n\tn=read(),Q=read(),qwq=read();\n\tfor(re int i=1;i<=n;i++) a[i]=read(),p[i]=p[i-1]+a[i];\n\tbuild(1,n,0,p[n]);\n\tdfs(1,n,1);\n\tPre_Dfs(1,n,1,sum[1]);\n\tfor(re int i=1;i<=n;i++) pre[i]=pre[i-1]+pre[i];\n\tfor(re int i=1;i<=n;i++) ans+=val[i]*(1ll<<(maxdep-deep[i]));//\u5148\u6c42\u51fa\u6700\u5f00\u59cb\u7684\u7b54\u6848\n\tint x,y,z;\n\tFM=1ll<<maxdep;\n\tLL r=gcd(qwq,FM);\n\tqwq/=r,FM/=r;//\u7ea6\u5206\uff0c\u9632\u6b62\u7206long long\n\twhile(Q--)\n\t{\n\t\tx=read(),y=read(),z=read();\n\t\tans+=(pre[y]-pre[x-1])*z;\n\t\tif(ans>0) write(qwq*ans/FM);\n\t\telse putchar('-'),write(-qwq*ans/FM);\n\t\tputchar(10);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1538202453,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3924 \u3010\u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9898\u663e\u7136\u53ef\u4ee5\u5728\u6bcf\u6b21\u4fee\u6539\u540e\u91c7\u7528\u9012\u63a8\u7684\u601d\u60f3\u628a\u671f\u671b\u7b97\u51fa\uff0c\u4f46\u8fd9\u6837\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u90a3\u4e48\u663e\u7136\u662f\u9700\u8981 $O(1)$ \u6216 $O(logn)$ \u56de\u7b54\u8be2\u95ee\u7684\u3002\n\n\u90a3\u4e48\u8003\u8651\u63a8\u4e00\u4e0b\u5f0f\u5b50\u3002\u9996\u5148\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff08\u6309\u7167\u7ebf\u6bb5\u6811\u7684\u5efa\u6811\u65b9\u5f0f\uff09\uff0c\u5b83\u5bf9\u5b83\u6240\u6709\u7684\u7956\u5148\u90fd\u6709\u8d21\u732e\u3002\u5e76\u4e14\uff0c\u5047\u5b9a\u5f53\u524d\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a $dep$\uff0c\u90a3\u4e48\u8bbf\u95ee\u5b83\u7684\u6982\u7387\u5c31\u662f $\\dfrac{1}{2^{dep}}$\u3002\u4e8e\u662f\u8003\u8651\u4e00\u4e2a\u6df1\u5ea6\u4e3a $dep$ \u53f6\u5b50\u8282\u70b9\u603b\u7684\u8d21\u732e\uff0c\u4e3a $a[i]\\times(\\dfrac{1}{2^{dep}}+\\dfrac{1}{2^{dep-1}}+...+\\dfrac{1}{2^0})=a[i]\\times(2-\\dfrac{1}{2^{dep}})$\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5b83\u7684 $dep$ \u90fd\u662f\u786e\u5b9a\u7684\u3002\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u4e00\u904d $O(n)$ \u7edf\u8ba1\u51fa\u6700\u521d\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u4fee\u6539\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u8bbe $l,r,x$\u3002\n\n\u5219\u7b54\u6848\u589e\u5927\u4e86 $x\\times \\sum_{i=l}^r(2-\\dfrac{1}{2^{dep[i]}})$\u3002\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4$2-\\dfrac{1}{2^{dep[i]}}\n$ \u7684\u524d\u7f00\u548c\u6765\u505a\u5230 $O(1)$ \u56de\u7b54\u8be2\u95ee\uff0c\u53ea\u9700\u8981\u7ed9\u5b83\u4e58\u4e00\u4e2a $2^{maxdep}$ \u5c31\u80fd\u628a\u5b83\u53d8\u6210\u6574\u6570\u4e86\u3002\n\ncode\uff1a\n```cpp\n#include\"bits/stdc++.h\"\nusing namespace std;\n#define ri register int\n#define ll long long\ninline int rd(){\n    int x=0,flg=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') flg=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+(ch^48);ch=getchar();}\n    return x*flg;\n}\n#define N 1000010\nll a[N],dep[N],n,m,l,r,x;\nll k,mxdep=20,s[N],bas[N],ans;\ninline void build(int id,int l,int r,int d){\n    if(l==r){\n        dep[l]=d;\n        s[l]=2*bas[mxdep]-bas[mxdep]/bas[d];\n        ans+=a[l]*s[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(id<<1,l,mid,d+1),build(id<<1|1,mid+1,r,d+1);\n}\nint main(){\n    //freopen(\"3924.in\",\"r\",stdin);\n    n=rd(),m=rd(),k=rd();bas[0]=1;\n    for(ri i=1;i<=20;++i) bas[i]=2*bas[i-1];\n    for(ri i=1;i<=n;++i) a[i]=rd();build(1,1,n,0);\n    for(ri i=1;i<=n;++i) s[i]=s[i]+s[i-1];\n    ll g=__gcd(k,bas[mxdep]);k/=g,bas[mxdep]/=g;\n    while(m--){\n        l=rd(),r=rd(),x=rd();\n        ans+=x*(s[r]-s[l-1]);\n        printf(\"%lld\\n\",ans*k/bas[mxdep]);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1604981025,
        "uid": 135839,
        "name": "Fairicle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3924 \u3010\u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811\u3011"
    },
    {
        "content": "\u5e8f\u5217\u5143\u7d20\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u6df1\u5ea6-\u611f\u609f\n\n### 0x01 \u524d\u8a00\n\n\u60f3\u6cd5\u6e90\u4e8e\u6b64\u9898\u3002\n\n\u8fd9\u4e2a\u65b9\u9762\u7684\u77e5\u8bc6\u70b9\u597d\u50cf\u633a\u65b0\u9896\u7684\u3002\n\n\u4e8e\u662f\u548c\u673a\u623f\u5de8\u4f6c\u4e00\u8d77\u60f3\u51fa\u4e86\u8be5\u547d\u9898\u7684 $O(n)$ \u89e3\u6cd5\u3002\n\n***\n\n### 0x02 \u7b97\u6cd5\u672c\u8eab\n\n\u603b\u6240\u5468\u77e5\uff0c\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\u90fd\u5bf9\u5e94\u8868\u793a\u7684\u539f\u5e8f\u5217\u91cc\u7684\u4e00\u4e9b\u7ed3\u70b9\u3002\n\n\u800c\u6211\u4eec\u73b0\u5728\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\uff1a\u5728\u6781\u5feb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6c42\u5230\u6bcf\u4e2a\u539f\u5e8f\u5217\u91cc\u7684\u5143\u7d20\u5bf9\u5e94\u7684\u5143\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684\u6df1\u5ea6\u3002\n\n\u4e5f\u5c31\u662f\u6c42\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u5efa\u6811\u7684\u6734\u7d20\u505a\u6cd5\u663e\u7136\u662f\uff1a$O(nlogn)$\u3002\n\n\u4f46\u6709\u4e9b\u9898\u76ee\u4f1a\u6bd4\u8f83\u6076\u5fc3\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e00\u79cd\u65b0\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u660e\u786e\u7ebf\u6bb5\u6811\u7684\u4e00\u4e2a\u6027\u8d28\uff0c\u5982\u679c\u6811\u4e0a\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u4e14\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u8868\u793a\u533a\u95f4\u957f\u5ea6\u76f8\u540c\uff0c\u5219\u5904\u4e8e\u76f8\u5bf9\u4f4d\u7f6e\u76f8\u540c\u7684\u4e24\u4e2a\u5206\u522b\u5728\u8fd9\u4e24\u4e2a\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u4e2d\u7684\u539f\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u8868\u793a\u7684\u5143\u533a\u95f4\u5206\u522b\u5230\u8fd9\u4e24\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb\u76f8\u7b49\u3002\uff08\u597d\u62bd\u8c61 www\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c06\u5176\u5265\u79bb\u51fa\u6765\u3002\n\n\u5373\u6709\u4e24\u4e2a\u7ed3\u70b9 $p,q$\uff0c\u5176\u4e2d $p$ \u8868\u793a\u533a\u95f4 $A$\uff0c$q$ \u8868\u793a\u533a\u95f4 $B$\uff0c\u4e14\u533a\u95f4 $A$ \u7684\u53f3\u7aef\u70b9\u4e3a $A_l$\uff0c\u533a\u95f4 $B$ \u7684\u53f3\u7aef\u70b9\u4e3a $B_l$\uff0c\u4e14\u8bb0 $f(x)$ \u8868\u793a $x$ \u4e3a\u5f53\u524d\u6240\u5728\u533a\u95f4\u7684\u7b2c\u51e0\u4e2a\u5143\u7d20\u3002\n\n\u5219\u5bf9\u4e8e\u4efb\u610f\u4e24\u70b9 $m,n$ \uff0c$m \\in A,n \\in B, f(m) = f(n)$\uff0c\u4e00\u5b9a\u6709 $p$ \u5230\u8868\u793a $m$ \u7684\u5143\u533a\u95f4\u7684\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u7b49\u4e8e\u4e00\u5b9a\u6709 $q$ \u5230\u8868\u793a $n$ \u7684\u5143\u533a\u95f4\u7684\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u8fd9\u5176\u5b9e\u5f88\u663e\u7136\u5427\u3002\u3002\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u8868\u793a\u533a\u95f4\u957f\u5ea6\u7684\u8282\u70b9\uff0c\u6211\u4eec\u7ebf\u6bb5\u6811\u5f80\u4e0b\u5212\u5206\u7684\u65b9\u5f0f\u662f\u4e0d\u53d8\u7684\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8bb0 $dep(x)$ \u8868\u793a $x$ \u8fd9\u4e2a\u5143\u533a\u95f4\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u5373\u8868\u793a $x$ \u8fd9\u4e2a\u5143\u533a\u95f4\u7684\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u3002$Dep(x)$ \u8868\u793a $x$ \u8fd9\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u73b0\u5728\u904d\u5386\u5230\u4e86\u4e00\u4e2a\u8282\u70b9 $Q$\uff0c\u5b83\u8868\u793a\u7684\u533a\u95f4\u957f\u5ea6\u4e3a $len$\uff0c\u800c\u6211\u4eec\u4e4b\u524d\u4e5f\u904d\u5386\u8fc7\u4e00\u4e2a\u8868\u793a\u533a\u95f4\u957f\u5ea6\u4e3a $len$ \u7684\u8282\u70b9 $P$\uff0c\u5219\u5b9a\u4f1a\u6709 $dep(x) = dep(y) - Dep(P) + Dep(Q) (x \\in Q,y \\in P, f(x) = f(y))$\u3002\n\n\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6709\u521a\u521a\u90a3\u4e2a\u6027\u8d28\u561b\uff0c$x$ \u8fd9\u4e2a\u5143\u533a\u95f4\u5bf9\u5e94\u7684\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u53ef\u4ee5\u5206\u89e3\u4e3a\u8fd9\u4e2a\u8282\u70b9\u5230 $Q$ \u7684\u8ddd\u79bb\u548c $Q$ \u7684\u6df1\u5ea6\u3002\u56e0\u4e3a $y$ \u7684\u6df1\u5ea6\u4e5f\u53ef\u4ee5\u540c\u6837\u5206\u89e3\uff0c\u6240\u4ee5\u524d\u8005\u5c31\u7b49\u4e8e $dep(y) - Dep(p)$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a `dfs`\uff0c\u904d\u5386\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e2a\u8282\u70b9\u4e14\u4e4b\u524d\u9047\u5230\u8fc7\u8868\u793a\u533a\u95f4\u957f\u5ea6\u76f8\u540c\u7684\u8282\u70b9\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u4e4b\u524d\u90a3\u4e2a\u70b9\u5bf9\u5f53\u524d\u8282\u70b9\u8868\u793a\u533a\u95f4\u5185\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6df1\u5ea6\u8f6c\u79fb\uff0c\u7136\u540e\u8fd9\u4e2a\u5206\u652f\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86\u3002\n\n\u56e0\u4e3a\u6709\u8bb0\u5fc6\u5316\uff0c\u4e14\u4f60\u4f1a\u53d1\u73b0\u6bcf\u4e2a\u8282\u70b9\u6211\u4eec\u53ea\u4f1a\u66f4\u65b0\u4e00\u6b21\uff0c\u4e8e\u662f\u8fd9\u5c31\u662f\u4e2a\u7c7b $O(n)$ \u7b97\u6cd5\u3002\n\n***\n\n### 0x03 \u90e8\u5206\u5b9e\u73b0\n\n```cpp\n// q \u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\n// flag \u8868\u793a\u4e4b\u524d\u662f\u5426\u8bbf\u95ee\u8fc7\u3002\n// l \u8868\u793a\u4e0a\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u8868\u793a\u533a\u95f4\u7684\u957f\u5ea6\u548c\u5f53\u524d\u7684\u4e00\u6837\u7684\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u3002\n// x \u8868\u793a\u4e0a\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u8868\u793a\u533a\u95f4\u7684\u957f\u5ea6\u548c\u5f53\u524d\u7684\u4e00\u6837\u7684\u8282\u70b9\u7684\u6df1\u5ea6\u3002\n// \u6309\u7167\u521a\u521a\u63a8\u7684\u5f0f\u5b50\u6a21\u62df\u5373\u53ef\u3002\nvoid Get_Dep(int l, int r, int cnt) {\n\tif(q[r - l + 1].flag) {\n\t\tfor(int i = l; i <= r; i++)\n\t\t\tdep[i] = dep[i - l + q[r - l + 1].l] - q[r - l + 1].x + cnt;\n\t\treturn ;\n\t}\n\tif(l == r) {\n\t\tdep[l] = cnt;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tGet_Dep(l, mid, cnt + 1);\n\tGet_Dep(mid + 1, r, cnt + 1);\n\tq[r - l + 1].flag = true;\n\tq[r - l + 1].l = l;\n\tq[r - l + 1].x = cnt;\n}\n```\n\n### 0x04 \u5e94\u7528\u573a\u666f\n\n\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u7528\u6211\u4eec\u7684\u601d\u8def\u8fdb\u884c\u9884\u5904\u7406\u3002\n\n\u9996\u5148\u6b64\u9898\u662f\u6c42\u5728\u7ebf\u6bb5\u6811\u4e2d\u4ece\u6839\u5230\u67d0\u4e00\u53f6\u5b50\u8282\u70b9\u7ecf\u8fc7\u8def\u5f84\u6743\u503c\u548c\u7684\u671f\u671b\u3002\n\n\u6734\u7d20\u671f\u671b\u516c\u5f0f\uff1a\u4e00\u9897\u7ef4\u62a4\u533a\u95f4\u548c\u7684\u7ebf\u6bb5\u6811\uff0c\u7b54\u6848\u4e3a\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u7684\u6743\u503c\u4e58\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u7136\u540e\u5728\u5c06\u5b83\u4eec\u5168\u90e8\u52a0\u8d77\u6765\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u6743\u503c\u518d\u8fd4\u56de\u5230\u539f\u5e8f\u5217\u4e2d\u3002\n\n\u8bbe\u539f\u5e8f\u5217\u4e2d\u5143\u7d20 $x$ \u8868\u793a\u7684\u5143\u533a\u95f4\u7684\u6df1\u5ea6\u4e3a $g(x)$\uff0c\u5176\u8868\u793a\u7684\u6570\u4e3a $v(x)$\u3002\n\n\u5219\u539f\u5e8f\u5217\u7684\u6bcf\u4e2a\u5143\u7d20\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u4e3a\uff1a$v(x) \\times \\sum_{i = 1}^{g(x)} 2^i$\u3002\n\n\u5f88\u663e\u7136\u5f53\u524d\u8fd9\u4e2a\u5143\u7d20\u5728\u7ebf\u6bb5\u6811\u79cd\uff0c\u4f1a\u5728\u5176\u5143\u533a\u95f4\u5230\u6839\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u91cc\u51fa\u73b0\u3002\n\n\u5176\u4e2d $\\sum_{i = 1}^{g(x)} 2^i$ \u663e\u7136\u53ef\u4ee5\u7528\u4e0a\u8ff0\u7b97\u6cd5\u9884\u5904\u7406\u51fa\u6765\u3002\n\n\u90a3\u4e48\u8003\u8651\u533a\u4fee\u3002\u8bbe\u6240\u6539\u533a\u95f4\u4e3a $[l, r]$\u3002\u589e\u52a0\u91cf\u4e3a $x$\u3002\n\n\u5219\u8fd9\u6b21\u4fee\u6539\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f $\u0394 \\times \\sum_{x = l}^r\\sum_{i = 1}^{g(x)} 2^i$\u3002\n\n\u90a3\u4e48\u518d\u7ef4\u62a4\u4e00\u4e2a $\\sum_{i = 1}^{g(x)} 2^i$ \u7684\u524d\u7f00\u548c\u4e0d\u5c31\u7ed3\u4e86\u5417\uff1f\n\n\uff08\u6ce8\uff0c\u6b64\u9898\u82e5\u7528 `double` \u4f1a\u9519\u6389\u4e00\u4e2a\u70b9\uff0c\u53ef\u80fd\u4e0e\u6570\u636e\u7cbe\u5ea6\u6709\u5173\uff0c\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528 `long long`\u3002\n\n```cpp\n#include <cstdio>\n\ntypedef long long LL;\nint read() {\n    int k = 1, x = 0;\n    char s = getchar();\n    while (s < '0' || s > '9') {\n        if (s == '-')\n            k = -1;\n        s = getchar();\n    }\n    while (s >= '0' && s <= '9') {\n        x = (x << 3) + (x << 1) + s - '0';\n        s = getchar();\n    }\n    return x * k;\n}\n\nconst int MAXN = 1e6 + 5;\nint a[MAXN], dep[MAXN];\nLL w[MAXN], sum[MAXN];\n\nstruct node {\n\tbool flag;\n\tint l, x;\n\tnode() {}\n\tnode(bool Flag, int L, int X) {\n\t\tflag = Flag;\n\t\tl = L;\n\t\tx = X;\n\t}\n} q[MAXN];\n\nvoid Get_Dep(int l, int r, int cnt) {\n\tif(q[r - l + 1].flag) {\n\t\tfor(int i = l; i <= r; i++)\n\t\t\tdep[i] = dep[i - l + q[r - l + 1].l] - q[r - l + 1].x + cnt;\n\t\treturn ;\n\t}\n\tif(l == r) {\n\t\tdep[l] = cnt;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tGet_Dep(l, mid, cnt + 1);\n\tGet_Dep(mid + 1, r, cnt + 1);\n\tq[r - l + 1].flag = true;\n\tq[r - l + 1].l = l;\n\tq[r - l + 1].x = cnt;\n}\n\nint main() {\n\tint n = read(), m = read(), qwq = read();\n\tGet_Dep(1, n, 1);\t\n\tw[1] = qwq;\n\tfor(int i = 2; i <= 23; i++) \n\t\tw[i] = w[i - 1] + (qwq >> (i - 1));\n\tfor(int i = 1; i <= n; i++) \n\t\tsum[i] = sum[i - 1] + w[dep[i]];\t\n\tLL ans = 0;\t\n\tfor(int i = 1; i <= n; i++) {\n\t\ta[i] = read();\n\t\tans += (a[i] * (sum[i] - sum[i - 1]));\t\t\n\t}\t\n\tfor(int i = 1; i <= m; i++) {\n\t\tint l = read(), r = read(), x = read();\n\t\tans += ((sum[r] - sum[l - 1]) * x);\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1610604111,
        "uid": 266779,
        "name": "STrAduts",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3924 \u3010\u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811\u3011"
    },
    {
        "content": "# \u601d\u8def\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u6700\u6734\u7d20\u7684\u60f3\u6cd5\u5c31\u662f\u5bf9\u6bcf\u4e00\u5c42\u6c42\u4e00\u4e2a\u548c\uff0c\u4e58\u4e0a\u5230\u8fbe\u8fd9\u4e00\u5c42\u7684\u6982\u7387\uff0c\u5373 $\\frac{1}{2^{dep-1}}$,\u4f46\u8fd9\u6837\u662f\u65e0\u6cd5\u6bd4\u8f83\u5feb\u901f\u7684\u5e94\u5bf9\u4fee\u6539\u64cd\u4f5c\u7684\n\n\u57fa\u4e8e\u8fd9\u79cd\u601d\u8def\uff0c\u6211\u4eec\u6362\u4e2a\u601d\u8003\u7684\u65b9\u5411\uff0c\u5373\u601d\u8003\u4e00\u4e2a $i$\n\n\u663e\u7136\u5305\u542b $i$ \u7684\u5757\u662f\u8fde\u7eed\u7684\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![](http://61.186.173.89:2019/2021/01/14/7ca0b97c191dc.png)\n\n\u5bf9\u4e8e\u5305\u542b $2$ \u4e0b\u6807\u7684\u5757\uff0c\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\n\n![](http://61.186.173.89:2019/2021/01/14/580890c329424.png)\n\n\u800c\u4ed6\u6240\u505a\u7684\u8d21\u732e\u5c31\u662f\u4e0a\u56fe\u6807\u6ce8\u7684\n\n\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u6bcf\u4e00\u4e2a\u4e0b\u6807 $i,i\\in [1,n]$\uff0c\u5b83\u5bf9\u5e94\u7684\u53f6\u8282\u70b9\u7684\u6df1\u5ea6\u662f\u591a\u5c11\n\n\u6240\u4ee5\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6211\u4eec\u6765\u5355\u72ec\u53bb\u6c42\u8fd9\u4e2a\u4e1c\u897f\uff1a\n\n\u6c42\u6df1\u5ea6\u662f\u53ef\u4ee5\u7528\u4e00\u4e2a\u641c\u7d22\u6765\u89e3\u51b3\u7684\uff0c\u4f46\u662f\u6211\u4eec\u8981\u5feb\uff0c\u4e00\u4e2a\u641c\u7d22\u662f\u4e0d\u591f\u7684\n\n\u90a3\u4e48\u4f18\u5316\u641c\u7d22\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\n\n\u8bb0\u5fc6\u5316\uff01\n\n\u5bf9\u7684\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u6709\u4e00\u4e2a\u6bd4\u8f83\u597d\u73a9\u7684\u6027\u8d28\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u957f\u5ea6\u76f8\u540c\u7684\u533a\u95f4\uff0c\u8fd9\u4e24\u4e2a\u533a\u95f4\u4e2d\u76f8\u5bf9\u5e94\u7684\u4e24\u4e2a\u4e0b\u6807 $i,j$ \u5230\u8fd9\u4e24\u4e2a\u4e0b\u6807\u7684\u6700\u6df1\u6df1\u5ea6\u8ddd\u79bb\u662f\u4e00\u6837\u7684\n\n\u53ef\u80fd\u6709\u70b9\u62bd\u8c61\uff0c\u6211\u4eec\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n\u4e0a\u56fe\u4e2d\u7b2c $2$ \u5c42\u7684 $[1,3]$ \u548c $[4,6]$\uff0c\u533a\u95f4\u957f\u5ea6\u4e00\u6837\n\n\n\u90a3\u4e48$[1,3]$\u533a\u95f4\u4e2d\u7684\u7b2c $2$ \u4e2a\u6570\u4e5f\u5c31\u662f $2$\uff0c\u5b83\u5230$[2,2]$\u7684\u8ddd\u79bb\u662f $2$\uff1b\n\n$[4,6]$\u533a\u95f4\u4e2d\u7684\u7b2c $2$ \u4e2a\u6570\u4e5f\u5c31\u662f $5$\uff0c\u5b83\u5230$[5,5]$\u7684\u8ddd\u79bb\u4e5f\u662f $2$\uff1b\n\n\u5f53\u7136\uff0c\u6211\u4eec\u591a\u627e\u51e0\u4e2a\u6765\u4e3e\u4f8b\uff0c\u4e5f\u662f\u4e00\u6837\u7684\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u662f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u73b0\u8bb0\u5fc6\u5316\n\n```cpp\nvoid dfs(int l,int r,int sum){\n\tif(mem[r-l+1]==true){\n\t\tfor(int i=l;i<=r;i++){\n\t\t\ts[i]=s[i-l+s1[r-l+1]]-s2[r-l+1]+sum;\n\t\t}\n\t\treturn;\n\t}\n\tif(l==r){\n\t\ts[l]=sum;\n\t\tw=max(w,sum);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tdfs(l,mid,sum+1);\n\tdfs(mid+1,r,sum+1);\n\ts1[r-l+1]=l;\n\ts2[r-l+1]=sum;\n\tmem[r-l+1]=true;\n}\n```\n\n\u5904\u7406\u597d\u4e86\u6df1\u5ea6\uff0c\u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u771f\u7684\u7b80\u5355\u4e86\uff0c\u4e00\u4e2a\u524d\u7f00\u548c\uff0c$over$\n\n# code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=1000005;\nint s1[MAXN];\nint s2[MAXN];\nlong long s[MAXN];\nbool mem[MAXN];\nlong long pre[MAXN];\nint dep[MAXN],pre_d[MAXN];\nint w;\nvoid dfs(int l,int r,int sum){\n\tif(mem[r-l+1]==true){\n\t\tfor(int i=l;i<=r;i++){\n\t\t\ts[i]=s[i-l+s1[r-l+1]]-s2[r-l+1]+sum;\n\t\t}\n\t\treturn;\n\t}\n\tif(l==r){\n\t\ts[l]=sum;\n\t\tw=max(w,sum);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tdfs(l,mid,sum+1);\n\tdfs(mid+1,r,sum+1);\n\ts1[r-l+1]=l;\n\ts2[r-l+1]=sum;\n\tmem[r-l+1]=true;\n}\nint main(){\n\tint n,m;\n\tlong long qwq;\n\tscanf(\"%d %d %lld\",&n,&m,&qwq);\n\tqwq*=128;\n\tdfs(1,n,1);\n\tdep[1]=qwq;\n\tpre_d[1]=qwq;\n\tfor(int i=2;i<=w;i++){\n\t\tdep[i]=dep[i-1]>>1;\n\t\tpre_d[i]=pre_d[i-1]+dep[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tpre[i]=pre[i-1]+pre_d[s[i]];\n\t}\n//\tfor(int i=1;i<=n;i++){\n//\t\tcout<<pre[i]<<endl;\n//\t}\n\tlong long ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tans+=(pre[i]-pre[i-1])*x;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint l,r,x;\n\t\tscanf(\"%d %d %d\",&l,&r,&x);\n\t\tans+=(pre[r]-pre[l-1])*x;\n\t\tprintf(\"%lld\\n\",ans/128);\n\t}\nreturn 0;\n}\n\n```\n\n\n",
        "postTime": 1610602888,
        "uid": 247555,
        "name": "Fool_Fish",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3924 \u3010\u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811\u3011"
    },
    {
        "content": "# \u601d\u8def\n\u770b\u5230\u8fd9\u9053\u9898\uff0c \u7b2c\u4e00\u53cd\u5e94\uff1a\u201c\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u677f\u9898\u201d\uff0c \u8fd9\u65f6\u5019\u7a81\u7136\u542c\u89c1\u4e86\u65c1\u8fb9\u6709\u4eba\u558a\u9053\uff1a\u201c\u8fd9\u9898\u9898\u89e3\u5199\u7684\u662f $O(nlog_2n)$ \u53ea\u6709 $70$ \u5206\uff0c  $O(n)$ \u624d\u80fd\u8fc7\u3002\u201d\u6240\u4ee5\u6211\u82e6\u601d\u51a5\u60f3\u5341\u51e0\u5206\u949f\u540e\uff0c \u624d\u60f3\u5230\u4e86\u6b63\u89e3\u3002\n## \u64cd\u4f5c\u8fc7\u7a0b\n\u6211\u4eec\u770b\u5230\u8fd9\u9053\u9898\uff0c \u53ef\u4ee5\u8054\u60f3\u5230 CSP2020 \u666e\u53ca\u7ec4\u7684\u7b2c\u4e09\u9898\uff0c \u8fd9\u9053\u9898\u6211\u662f\u901a\u8fc7\u77ed\u65f6\u95f4\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u4fee\u6539\u4f1a\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u6765\u505a\u5230\u5feb\u901f\u56de\u7b54\u8be2\u95ee\u7684\u3002\u90a3\u4e48\u540c\u7406\uff0c \u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c \u5728\u7ebf\u6bb5\u6811\u4e2d\uff0c \u6bcf\u4e2a\u8282\u70b9\u5bf9\u6700\u7ec8\u671f\u671b\u7684\u8d21\u732e\u90fd\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u4e58\u4e0a\u4e00\u4e2a\u6570\uff0c \u800c\u8fd9\u4e2a\u6570\u53ea\u8ddf\u64cd\u4f5c\u6709\u5173\u3002\u7b80\u5355\u6765\u8bf4\uff0c \u5c31\u662f\u56e0\u4e3a\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u5bf9\u6700\u540e\u7ed3\u679c\u7684\u8d21\u732e\u662f $(\\frac{1}{2})^k$ \u5176\u4e2d $k$ \u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u3002\u7136\u540e\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u662f\u5b83\u7684\u4e24\u4e2a\u8282\u70b9\u7684\u548c\uff0c \u6240\u4ee5\u6bcf\u4e2a\u53f6\u5b50\u7684\u6240\u6709\u7956\u5148\u4ea7\u751f\u7684\u8d21\u732e\u90fd\u4f1a\u7d2f\u52a0\u7ed9\u8fd9\u4e2a\u53f6\u5b50\uff0c \u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\uff0c \u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e5f\u5c31\u662f $(\\frac{1}{2})^k + (\\frac{1}{2})^{k - 1} + (\\frac{1}{2})^{k - 2} + (\\frac{1}{2})^{k - 3} + \\cdots + (\\frac{1}{2})^{0}$ \u6240\u4ee5\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u53f6\u8282\u70b9\u65f6\u7684\u6df1\u5ea6\uff0c \u63a5\u4e0b\u6765\u5efa\u7acb\u4e00\u4e2a\u524d\u7f00\u548c\uff0c \u6bcf\u4e00\u6b21\u4fee\u6539\u90fd\u53ea\u9700\u8981 $O(1)$ \u7684\u65f6\u95f4\u628a $[l, r]$ \u8fd9\u4e2a\u533a\u95f4\u7684\u6240\u6709\u4f1a\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u548c\u4e58\u4e0a\u52a0\u4e0a\u7684\u503c\u7d2f\u52a0\u8fdb\u7b54\u6848\u4e2d\u5c31\u884c\u4e86\u3002\n## \u9884\u5904\u7406\n\u6709\u4e86\u521a\u624d\u7684\u5206\u6790\uff0c \u6211\u4eec\u53d1\u73b0\u5728 $O(n)$ \u9884\u5904\u7406\u624d\u662f\u672c\u9898\u7684\u5173\u952e\u3002\u90a3\u4e48\u600e\u4e48\u624d\u80fd\u5982\u6b64\u4e4b\u5feb\u7684\u9884\u5904\u7406\u5462\uff1f\n\u9996\u5148\u6211\u4eec\u4e0d\u53ef\u80fd\u53bb\u5efa\u6811\uff0c \u5efa\u51fa\u6765\u5c31\u5df2\u7ecf\u6210 $O(nlog_2n)$ \u4e86\u3002\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u7ebf\u6bb5\u6811\uff0c \u53ef\u4ee5\u53d1\u73b0\u6709\u5f88\u591a\u957f\u5ea6\u76f8\u540c\u7684\u5757\uff0c \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5757\u6765\u5b9e\u73b0\u5feb\u901f\u8f6c\u79fb\u3002\n![\u7ebf\u6bb5\u6811.png](http://61.186.173.89:2019/2021/01/14/7d4c580a9a388.png)\n\u6211\u4eec\u89c2\u5bdf\u8fd9\u6837\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\uff0c \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5757 $x$ \uff0c \u5b83\u4ee5\u4e0b\u7684\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u90fd\u7b49\u4e8e $x$ \u5230\u6839\u7684\u8ddd\u79bb\u52a0\u4e0a\u8fd9\u4e9b\u53f6\u8282\u70b9\u5230 $x$ \u7684\u8ddd\u79bb\u3002\u800c\u4e24\u4e2a\u76f8\u540c\u957f\u5ea6\u7684\u5757\uff0c \u5b83\u4eec\u6240\u5305\u542b\u7684\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u5206\u522b\u5230\u4e24\u4e2a\u5757\u7684\u8ddd\u79bb\u76f8\u7b49\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u7b2c\u4e00\u6b21\u67e5\u8be2\u5230\u957f\u5ea6\u4e3a $k$ \u7684\u8282\u70b9\u65f6\uff0c \u8fd9\u4e2a\u6bb5\u7684\u8d77\u59cb\u4f4d\u7f6e\u662f\u54ea\u91cc\uff0c \u8fd9\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u662f\u591a\u5c11\u3002 \u5f53\u7b2c\u518d\u6b21\u641c\u5230\u53e6\u4e00\u5757\u957f\u5ea6\u4e3a $k$ \u7684\u8282\u70b9 $y$ \u65f6\uff0c \u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u521a\u624d\u7b2c\u4e00\u6b21\u641c\u7d22\u5230\u957f\u5ea6\u4e3a $k$ \u7684\u8282\u70b9 $x$ \uff0c\u800c\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e2d\u5bf9\u5e94\u7684\u53f6\u8282\u70b9\u7684\u6df1\u5ea6\u5c31\u662f\u6839\u5230\u5b83\u5bf9\u5e94\u5728 $x$ \u4e2d\u8282\u70b9\u7684\u6df1\u5ea6\u51cf\u53bb $x$ \u7684\u6df1\u5ea6\u52a0\u4e0a $y$ \u7684\u6df1\u5ea6\u3002\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801\uff1a\n\n```cpp\nvoid dfs (int l, int r, int sum) {\n\tif (vis[r - l + 1]) {\n\t\tfor (int i = l; i <= r; i ++) {\n\t\t\ts[i] = s[i - l + sa[r - l + 1]] - sb[r - l + 1] + sum;//\u8f6c\u6362\u521a\u624d\u7684\u8bb0\u5fc6\u5316\n\t\t}\n\t\t\n\t\treturn;\n\t}\n\tif (l == r) {//\u5982\u679c\u5230\u53f6\u5b50\u76f4\u63a5\u8bb0\u5f55\u8fd4\u56de\n\t\ts[l] = sum;\n\t\t\n\t\treturn ;\n\t}\n\t\n\tint mid = (l + r) >> 1;\n\t\n\tdfs (l, mid, sum + 1);\n\tdfs (mid + 1, r, sum + 1);\n   //\u8bb0\u5fc6\u5316\n\tsa[r - l + 1] = l;\n\tsb[r - l + 1] = sum;\n\tvis[r - l + 1] = 1;\n\t\n\treturn ;\n} \n```\n## \u6700\u540e\u5b8c\u6574\u4ee3\u7801\n\u5bf9\u4e8e\u540e\u9762\u7684\u67e5\u8be2\u5c31\u5f88\u7b80\u5355\u4e86\uff0c \u76f4\u63a5\u653e\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\n#define MAXN 1000000\n#define MAXM 100\n\nint sa[MAXN + 5];\nint sb[MAXN + 5];\nint s[MAXN + 5];\nbool vis[MAXN + 5];\nlong long sn[MAXN + 5];\nlong long s1[MAXM + 5], s2[MAXM + 5];\nint w;//\u8bb0\u5f55\u6700\u5927\u6df1\u5ea6\n\nvoid dfs (int l, int r, int sum) {\n\tif (vis[r - l + 1]) {\n\t\tfor (int i = l; i <= r; i ++) {\n\t\t\ts[i] = s[i - l + sa[r - l + 1]] - sb[r - l + 1] + sum;\n\t\t}\n\t\t\n\t\treturn;\n\t}\n\tif (l == r) {\n\t\ts[l] = sum;\n\t\tw = max (w, sum);\n\t\t\n\t\treturn ;\n\t}\n\t\n\tint mid = (l + r) >> 1;\n\t\n\tdfs (l, mid, sum + 1);\n\tdfs (mid + 1, r, sum + 1);\n\tsa[r - l + 1] = l;\n\tsb[r - l + 1] = sum;\n\tvis[r - l + 1] = 1;\n\t\n\treturn ;\n} \nint main () {\n\tint n, m;\n\tlong long qwq;\n\t\n\tscanf (\"%d %d %lld\", &n, &m, &qwq);\n\tdfs (1, n, 1);\n\ts1[1] = qwq;//\u9898\u76ee\u8981\u6c42\u5904\u7406\u5206\u6bcd\n\ts2[1] = qwq;\n\tfor (int i = 2; i <= w; i ++) {\n\t\ts1[i] = s1[i - 1] >> 1;\n\t\ts2[i] = s2[i - 1] + s1[i];\n\t}\n\tfor (int i = 1; i <= n; i ++) {\n\t\tsn[i] = sn[i - 1] + s2[s[i]];\n\t}\n\t\n\tlong long ans = 0;\n\t\n\tfor (int i = 1; i <= n; i ++) {\n\t\tint x;\n\t\t\n\t\tscanf (\"%d\", &x);\n\t\tans += (sn[i] - sn[i - 1]) * x;//\u7d2f\u52a0\u521d\u59cb\u5e8f\u5217\n\t}\n\tfor (int i = 1; i <= m; i ++) {\n\t\tint l, r;\n\t\tlong long x;\n\t\t\n\t\tscanf (\"%d %d %lld\", &l, &r, &x);\n\t\tans += (sn[r] - sn[l - 1]) * x;//\u7d2f\u52a0\u6bcf\u6b21\u64cd\u4f5c\n\t\tprintf (\"%lld\\n\", ans);\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1610602743,
        "uid": 264638,
        "name": "Silent_thinker",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 \u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u753b\u56fe~~\u627e\u89c4\u5f8b~~\n\n~~\u8fd9\u91cc\u6ca1\u56fe,\u8981\u770b\u56fe\u53ef\u4ee5\u53bb\u770bM_sea dalao\u7684\u9898\u89e3(\u9003~~\n\n\u53ef\u4ee5\u53d1\u73b0\u5355\u4e2a\u8282\u70b9$i$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\u8be5\u8282\u70b9\u7684\u70b9\u6743$*\\frac{1}{2^{dep_i}}$($dep_i$\u4e3a\u4ece\u4e0a\u5f80\u4e0b$i$\u8282\u70b9\u6240\u5728\u7684\u5c42\u6570-1,\u4e5f\u5c31\u662f\u6df1\u5ea6,\u4ee4\u6839\u8282\u70b9\u7684$dep=0$)\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0,\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u90fd\u662f\u6700\u5927\u6df1\u5ea6(\u8bb0\u4e3a$ma$)\u6216\u8005\u6700\u5927\u6df1\u5ea6-1,\u6240\u4ee5\u9664\u5f00\u6700\u4e0b\u9762\u4e00\u5c42,\u4ece\u4e0a\u5f80\u4e0b\u7b2c$i$\u5c42\u7684\u8d21\u732e\u90fd\u662f\u5e8f\u5217\u4e2d\u6240\u6709\u6570\u4e4b\u548c$*\\frac{1}{2^{i-1}}$,\u6700\u4e0b\u9762\u4e00\u5c42\u7684\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u8d21\u732e\u5c31\u662f\u70b9\u6743$*\\frac{1}{2^{ma}}$.\u4e3a\u4e86\u65b9\u4fbf,\u4e0b\u9762\u7b97\u7b54\u6848\u65f6*\u628a\u6240\u6709\u6570$*2^{ma}$,\u8f93\u51fa\u7684\u65f6\u5019\u518d\u9664\u6389*\n\n\u6211\u4eec\u5148\u9884\u5904\u7406\u6700\u521d\u7684\u7b54\u6848,\u8bb0$b=\\sum_{j=1}^{ma}2^j$,\u5e8f\u5217\u4e2d\u7b2c$i$\u4e2a\u6570\u7684\u8d21\u732e\u4e3a$a_i*(b+[dep_{i\\text{\u5728\u7ebf\u6bb5\u6811\u4e2d\u5bf9\u5e94\u7684\u53f6\u5b50\u8282\u70b9}}=ma])$(\u5982\u679c\u662f\u6700\u540e\u4e00\u5c42\u5c31\u591a\u52a0\u4e0a$a_i$\u662f\u5427)\n\n\u6bcf\u6b21\u7684\u533a\u95f4\u52a0\u6cd5,\u8bb0$c=$\u533a\u95f4\u5185\u6df1\u5ea6\u4e3a$ma$\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570,\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\u52a0\u4e0a\u4e86$x*(r-l+1)*b+x*c$\n\n\u6700\u540e\u7b54\u6848\u8981$/2^{ma}*qwq$,\u5e76\u4e14\u6ce8\u610f\u5c06$2^{ma}$\u548c$qwq$\u7ea6\u5206,\u4e0d\u7136\u4f1a\u7206$long\\ long$\n\n~~\u6211\u505a\u9898\u65f6\u5c45\u7136\u90a3\u5565\u5230\u5f3a\u884c\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u524d\u7f00\u548cqwq~~\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define LL long long\n#define il inline\n#define re register\n#define db double\n#define max(a,b) ((a)>(b)?(a):(b))\n\nusing namespace std;\nconst int N=1000000+10;\nil LL rd()\n{\n    re LL x=0,w=1;re char ch=0;\n    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*w;\n}\n#define lc (o<<1)\n#define rc ((o<<1)|1)\n#define mid ((l+r)>>1)\n\nint n,m,a[N],mm;\nLL qwq,b=1,ans,c[N];\nvoid init(int k,int l,int r)\n{\n  if(l==r){mm=max(mm,a[l]=k);return;}\n  init(k+1,l,mid),init(k+1,mid+1,r);\n}\nil LL gcd(LL a,LL b){return b?gcd(b,a%b):a;}\n\nint main()\n{\n  n=rd(),m=rd(),qwq=rd();\n  init(0,1,n);\n  b=(1ll<<(mm+1))-2;    //\u8fd9\u5c31\u662f\u9898\u89e3\u4e2d\u7684b\n  for(re int i=1;i<=n;i++)\n    {\n      LL x=rd();\n      ans+=x*b;\n      c[i]+=c[i-1];\n      if(a[i]==mm) ++c[i],ans+=x;\n    }\n  mm=1ll<<mm;\n  LL gg=gcd(mm,qwq);mm/=gg,qwq/=gg;\n  for(re int i=1;i<=m;i++)\n    {\n      int l=rd(),r=rd();\n      LL x=rd();\n      ans+=1ll*(r-l+1)*x*b+(c[r]-c[l-1])*x;\n      printf(\"%lld\\n\",ans/mm*qwq);\n    }\n  return 0;\n}\n\n\n```",
        "postTime": 1536979796,
        "uid": 38372,
        "name": "star_magic_young",
        "ccfLevel": 9,
        "title": "\u6d1b\u8c37 P3924 \u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811"
    },
    {
        "content": "## \u9898\u76ee\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3924)\n\n\u5c0f\u6797\u662f\u4e2a\u7a0b\u5e8f\u5a9b\uff0c\u4e0d\u53ef\u907f\u514d\u5730\u5eb7\u5a1c\u5bf9\u8fd9\u79cd\u4eba\u7c7b\u7684\u201c\u9b54\u6cd5\u201d\u4ea7\u751f\u4e86\u6d53\u539a\u7684\u5174\u8da3\uff0c\u4e8e\u662f\u5c0f\u6797\u5f00\u59cb\u6559\u5979OI\u3002\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4ubHVvZ3Uub3JnL3VwbG9hZC9waWMvODA0My5wbmc)\n\n\u4eca\u5929\u5eb7\u5a1c\u5b66\u4e60\u4e86\u4e00\u79cd\u53eb\u505a\u7ebf\u6bb5\u6811\u7684\u795e\u5947\u9b54\u6cd5\uff0c\u8fd9\u79cd\u9b54\u6cd5\u53ef\u4ee5\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u7684\u4fe1\u606f\uff0c\u662f\u975e\u5e38\u5389\u5bb3\u7684\u4e1c\u897f\u3002\u5eb7\u5a1c\u8bd5\u7740\u5199\u4e86\u4e00\u68f5\u7ef4\u62a4\u533a\u95f4\u548c\u7684\u7ebf\u6bb5\u6811\u3002\u7531\u4e8e\u5979\u4e0d\u4f1a\u6253\u6807\u8bb0\uff0c\u56e0\u6b64\u6240\u6709\u7684\u533a\u95f4\u52a0\u64cd\u4f5c\u5979\u90fd\u662f\u66b4\u529b\u4fee\u6539\u7684\u3002\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nstruct Segment_Tree{\n#define lson (o<<1)\n#define rson (o<<1|1)\n    int sumv[N<<2],minv[N<<2];\n    inline void pushup(int o){sumv[o]=sumv[lson]+sumv[rson];}\n    inline void build(int o,int l,int r){\n        if(l==r){sumv[o]=a[l];return;}\n        int mid=(l+r)>>1;\n        build(lson,l,mid);build(rson,mid+1,r);\n        pushup(o);\n    }\n    inline void change(int o,int l,int r,int q,int v){\n        if(l==r){sumv[o]+=v;return;}\n        int mid=(l+r)>>1;\n        if(q<=mid)change(lson,l,mid,q,v);\n        else change(rson,mid+1,r,q,v);\n        pushup(o);\n    }\n}T; \n```\n\u5728\u4fee\u6539\u65f6\uff0c\u5979\u4f1a\u8fd9\u4e48\u5199\uff1a\n```cpp\nfor(int i=l;i<=r;i++)T.change(1,1,n,i,addv);\n```\n\u663e\u7136\uff0c\u8fd9\u68f5\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u503c\uff0c\u4e3a\u8be5\u8282\u70b9\u7ba1\u8f96\u533a\u95f4\u7684\u533a\u95f4\u548c\u3002\n\n\u5eb7\u5a1c\u662f\u4e2a\u7231\u601d\u8003\u7684\u5b69\u5b50\uff0c\u4e8e\u662f\u5979\u7a81\u7136\u60f3\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\n\n\u5982\u679c\u6bcf\u6b21\u5728\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\u64cd\u4f5c\u505a\u5b8c\u540e\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7b49\u6982\u7387\u7684\u9009\u62e9\u4e00\u4e2a\u5b50\u8282\u70b9\u8fdb\u5165\uff0c\u76f4\u5230\u8fdb\u5165\u53f6\u5b50\u7ed3\u70b9\u4e3a\u6b62\uff0c\u5c06\u4e00\u8def\u7ecf\u8fc7\u7684\u8282\u70b9\u6743\u503c\u7d2f\u52a0\uff0c\u6700\u540e\u80fd\u5f97\u5230\u7684\u671f\u671b\u503c\u662f\u591a\u5c11\uff1f\n\n\u5eb7\u5a1c\u6bcf\u6b21\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u503c qwq \uff0c\u4fdd\u8bc1\u4f60\u6c42\u51fa\u7684\u6982\u7387\u4e58\u4e0a qwq \u662f\u4e00\u4e2a\u6574\u6570\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u592a\u7b80\u5355\u4e86\uff0c\u4ee5\u81f3\u4e8e\u806a\u660e\u7684\u5eb7\u5a1c\u4e00\u4e0b\u5b50\u5c31\u79d2\u4e86\u3002\n\n\u73b0\u5728\u5979\u60f3\u95ee\u95ee\u4f60\uff0c\u60a8\u4f1a\u4e0d\u4f1a\u505a\u8fd9\u4e2a\u9898\u5462\uff1f\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\u6574\u6570 n,m,qwq\u8868\u793a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u539f\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u8be2\u95ee\u6b21\u6570\uff0c\u5206\u6bcd\u3002\n\n\u7b2c\u4e8c\u884c n \u4e2a\u6570\uff0c\u8868\u793a\u539f\u5e8f\u5217\u3002\n\n\u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6570 l,r,x\u8868\u793a\u5bf9\u533a\u95f4[l,r] \u52a0\u4e0a x\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u5171 m \u884c\uff0c\u8868\u793a\u671f\u671b\u7684\u6743\u503c\u548c\u4e58\u4e0aqwq\u7ed3\u679c\u3002\n\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\u8f93\u5165\u6837\u4f8b#1\uff1a \n```\n8 2 1\n1 2 3 4 5 6 7 8\n1 3 4\n1 8 2\n```\n\u8f93\u51fa\u6837\u4f8b#1\uff1a \n```\n90\n120\n```\n## \u9898\u89e3\n- \u6734\u7d20\u7684\u60f3\u6cd5\uff1a\u8bbe\u6700\u7ec8\u7ed3\u679c\u4e3a$ans$\uff0c\u6bcf\u4e00\u5c42\u7684\u70b9\u6743\u548c\u4e3a$val_i$\uff0c$maxD$\u4e3a\u6700\u5927\u5c42\u6570\uff0c\u90a3\u4e48\n$$\nans=\\sum_{i}^{maxD}val_i*\\frac{1}{2^{i-1}}\n$$\n- \u7136\u540e\u753b\u4e2a\u56fe\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u6709\u4e14\u53ea\u6709\u4e00\u6761\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u65b9\u4fbf\u7684\u7ef4\u62a4\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u671f\u671b\u503c\uff0c\u8bbe\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6743\u503c\u548c\u4e3a$sum_i$\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a$d_i$\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u671f\u671b\u4e3a$ans_i$\uff0c\u90a3\u4e48\n$$\nans_i=sum_i * \\frac{1}{2^{d_i-1}}\n$$\n- \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6df1\u5ea6\u7684\u524d\u7f00\u548c\u6211\u4eec\u5c31\u53ef\u4ee5$O(1)$\u56de\u7b54\u8be2\u95ee\u4e86\u3002\n- \u5bf9\u4e8e\u4e0a\u9762\u7684\u5f0f\u5b50\n$$\nans_i=sum_i * \\frac{1}{2^{d_i-1}}\n$$\n\n- \u6bcf\u6b21\u8bb0\u5f55\u65f6\u90fd\u9664\u4ee5$2^{d_i-1}$\u975e\u5e38\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5316\u7b80\u4e00\u4e0b\n\n$$ans_i=sum_i * \\frac{1}{2^{d_i-1}}=sum_i*\\frac{2^{maxD}}{2^{d_i-1+maxD}}=sum_i*\\frac{2^{maxD-d_i}}{2^{maxD-1}}$$\n\n- \u6211\u4eec\u5728\u8bb0\u5f55\u65f6\u53ef\u4ee5\u76f4\u63a5\u8bb0\u5f55\n$sum_i*2^{maxD-d_i}$\uff0c\n\u6700\u540e\u76f4\u63a5\u9664\u4ee5\n$2^{maxD-1}$\u5373\u53ef\n- \u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\u6765\u8bf4\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u90fd\u4f1a\u6539\u53d8\uff0c\u8bbe\u589e\u52a0\u7684\u6570\u4e3a$x$\uff0c\u90a3\u4e48\u589e\u52a0\u7684\u671f\u671b\u503c\u4e3a\n\n- \u53ef\u4ee5\u53d1\u73b0\u4e0a\u8fb9\u4e24\u4e2a\u5f0f\u5b50\u7684\u5206\u6bcd\u90fd\u662f$2^{maxD-1}$\uff0c\u6211\u4eec\u5728\u7edf\u8ba1\u7b54\u6848\u65f6\u76f4\u63a5\u7b97\u5c31\u597d\u4e86\n- ~~\u5176\u5b9e\u778e\u641e\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86~~\n\n## code\n```cpp\n#include <bits/stdc++.h> \nusing namespace std; \ntypedef long long LL; \nconst int maxn = 1e6 + 100; \n\ntemplate <typename T> \ninline void read(T &s) {\n\ts = 0; \n\tT w = 1, ch = getchar(); \n\twhile (!isdigit(ch)) { if (ch == '-') w = -1; ch = getchar(); }\n\twhile (isdigit(ch)) { s = (s<<1) + (s<<3) + (ch^48); ch = getchar(); }\n\t s *= w;  \n}\n\nLL n, m, qwq, maxD, Div, ans;  \nLL a[maxn], dep[maxn], sum[maxn]; \nstruct node {\n\tLL l, r; \n\tLL sum, add; \n} t[maxn * 4]; \n\ninline void build(LL p, LL l, LL r, LL d) {\n\tt[p].l = l, t[p].r = r; \n\tif (l == r) {\n\t\tt[p].sum = a[l]; \n\t\tdep[l] = d; \n\t\tmaxD = max(maxD, d); \n\t\treturn ; \n\t}\n\tLL mid = (l + r)>>1; \n\tbuild(p<<1, l, mid, d + 1); \n\tbuild(p<<1|1, mid + 1, r, d + 1); \n\tt[p].sum = t[p<<1].sum + t[p<<1|1].sum; \n}\n\ninline LL query(LL p, LL l, LL r, LL d, LL sum) {\n\tif (l == r) {\n\t\treturn (1<<d) * (sum + t[p].sum); \n\t}\n\telse {\n\t\tint mid = (l + r)>>1; \n\t\treturn query(p<<1, l, mid, d - 1, sum + t[p].sum) + query(p<<1|1, mid + 1, r, d - 1, sum + t[p].sum); \n\t}\n}\n\ninline LL gcd(LL x, LL y) {\n\treturn y ? gcd(y, x % y) : x; \n}\n\nint main() {\n\tread(n), read(m), read(qwq); \n\tfor (int i = 1; i <= n; ++i) read(a[i]); \n\tbuild(1, 1, n, 1); \n\tans = query(1, 1, n, maxD - 1, 0); \n\tDiv = 1<<(maxD - 1); \n\tLL g = gcd(qwq, Div); \n\tDiv /= g; qwq /= g; \n\tfor (int i = 1; i <= n; ++i) {\n\t\tsum[i] = sum[i - 1] + (((1<<dep[i]) - 1) << (maxD - dep[i])); \n\t}\n\tfor (int i = 1; i <= m; ++i) {\n\t\tLL l, r, x; \n\t\tread(l), read(r), read(x); \n\t\tans += (sum[r] - sum[l-1]) * x; \n\t\tprintf(\"%lld\\n\", ans / Div * qwq); \n\t}\n\treturn 0; \n}\n```",
        "postTime": 1562049173,
        "uid": 145352,
        "name": "MILLOPE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3924 \u3010\u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8f93\u51fa\u7684\u65f6\u5019\u662f\u4e0d\u9700\u8981\u7ea6\u5206\u7684qwq\n\n\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\u4e3a\u4e86AC\u4e0d\u8ffd\u6c42\u6548\u7387\u7684\u8bdd\u76f4\u63a5`#define int __int128`\u5c31\u884c\u4e86\u3002\u3002\n\n\u4ee3\u7801\u5341\u5206\u6e05\u65b0\n\n\n```cpp\n#include<bits/stdc++.h>\n#define int __int128\nusing namespace std;\nconst int MAXN = 1e6 + 10;\ninline int read() {\n\tchar c = getchar(); int x = 0, f = 1;\n\twhile(c < '0' || c > '9') {if(c == '-') f = -1; c = getchar();}\n\twhile(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n\treturn x * f;\n}\nvoid print(int x) {\n\tif(x < 0) putchar('-'), x = -x;\n    if (x > 9) print(x / 10);\n    putchar('0' + x % 10);\n}\nint N, M, qwq, s[MAXN], a[MAXN], ans, Lim;\nint get(int dep) {\n\treturn 1 << (Lim - (dep - 1));\n}\nvoid Build(int l, int r, int dep, int sum) {\n\tans += (a[r] - a[l - 1]) * get(dep);\n\tif(l == r) {s[l] = sum + get(dep); return ;}\n\tint mid = l + r >> 1;\n\tBuild(l, mid, dep + 1, sum + get(dep)); \n\tBuild(mid + 1, r,dep + 1, sum + get(dep));\n}\nsigned main() {\n\tN = read(); M = read(); qwq = read();\n\tfor(int cur = 1; cur <= N; Lim ++, cur <<= 1);\n\tfor(int i = 1; i <= N; i++) a[i] = read(), a[i] += a[i - 1];\n\tBuild(1, N, 1, 0);\n\tfor(int i = 1; i <= N; i++) s[i] += s[i - 1];\n\twhile(M--) {\n\t\tint l = read(), r = read(), v = read();\n\t\tans += ((s[r] - s[l - 1]) * v);\n\t\tprint(((ans * qwq) >> Lim)); putchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1548399850,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3924 \u3010\u5eb7\u5a1c\u7684\u7ebf\u6bb5\u6811\u3011"
    }
]