[
    {
        "content": "\u5199\u8fd9\u4e2a\u9898\u771f\u662f\u7d2f\u554a\uff0c\u597d\u6bd2\u3002\u5e94\u8be5\u7ec3\u7ec3\u5904\u7406\u6bd4\u8f83\u9ebb\u70e6\u7684DP\u3002\n\n\u5728\u8bfb\u5b8c\u9898\u76ee\u4ee5\u540e\uff0c\u5176\u5b9e\u521d\u59cb\u7248\u7684\u65b9\u7a0b\u5e76\u4e0d\u96be\u60f3\n\n$dp[i][j][k]$\u8868\u793a\u65f6\u95f4$i$\u5728\u5de5\u5382$j$\u5f53\u673a\u5668\u4eba\u524d\u5df2\u7ecf\u8d70\u4e86$k$\u6b65\u7684\u65b9\u6848\u3002\n\n$k$\u90a3\u4e00\u7ef4\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u679a\u4e3e\u6d88\u53bb\n\n$dp[i][j][1/0]$\u8868\u793a\u65f6\u95f4$i$\u5de5\u5382$j$\u662f\u5426\u80fd\u591f\u7ee7\u7eed\u518d\u8d70\n\n\u8f6c\u79fb\u4e3a\n$dp[i][j][1]=max(dp[i][j][1],dp[i-k][j-k][0]+cal(i,j,k))$//\u6ca1\u6709\u5217\u51fa\u5173\u4e8e\u73af\u7684\u60c5\u51b5\u7684\uff0c\u4ee5\u4e0b\u4f1a\u8be6\u7ec6\u8bf4\n$dp[i][j][0]=max(dp[i][j][0],dp[i][k][1]-cost[j])$\n\n\u786e\u5b9e\u5f88\u4e0d\u5b8c\u7f8e\uff0c\u6211\u5f53\u65f6\u4e5f\u53ea\u662f\u60f3\u5230\u4e86\u8fd9\u4e48\u591a\uff0c\u611f\u89c9\u8fc7\u4e2a90\u8fd8\u662f\u6bd4\u8f83\u8f7b\u677e\u7684\uff0c1000\u7684\u70b9\u62ff\u5355\u8c03\u961f\u5217\u4f18\u5316\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u6211\u5c31\u5f00\u59cb\u5199$cal$\u51fd\u6570\uff0c\u5904\u7406\u90a3\u4e2a\u5bf9\u89d2\u7ebf\u5f0f\u7684\u524d\u7f00\u548c\uff0c\u7136\u540e\u6210\u529f\u628a\u81ea\u5df1\u6405\u7cca\u4e86\u3002\n\n\u8fd9\u4e2a\u9898\u628a**\u70b9\u6743\u91ca\u653e\u5230\u4e86\u8fb9\u6743\u4e0a**\uff0c\u4eba\u8bdd\u5c31\u662f\u5b58\u50a8\u7684\u8def\u5f84\u4f4d\u7f6e\u5176\u5b9e\u662f\u67d0\u4e2a\u70b9\u4f38\u51fa\u53bb\u7684\u90a3\u4e00\u6761\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/IKTRiIfqT8ZSvzcJllg7dbY5UnO2c8D2vJN5UquBjdk!/b/dDABAAAAAAAA&bo=xAJ5AcQCeQEDGTw!&rf=viewer_4)\n\n\u6bd4\u5982\u7528\u8fd9\u4e2a\u56fe\u6765\u63cf\u8ff0\u8bfb\u5165\u7684\u67d0\u65f6\u95f4\u67d0\u8d39\u7528\u6570\u7ec4\n\n$f[i][j]$\u8868\u793a\u65f6\u95f4$i$\u4f4d\u7f6e$j$\u6240\u5ef6\u4f38\u56de\u53bb\u768445\u00b0\u7684\u94fe\u7684\u503c\uff0c\u5982\u4e0b\u56fe\uff0c\u9ec4\u70b9\u4e3a$(i,j)$\u7684\u4f4d\u7f6e\uff0c\u5219\u5b83\u6240\u4ee3\u8868\u7684\u94fe\u4e3a\u84dd\u8272\u7684\u4e00\u6761\u94fe\u4e0a\u7684\u70b9\u6743\u4e4b\u548c\u3002\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/6YV.sneltfuZ53B.vTuVQpXvIvFx1o633f*CkCB8vmA!/b/dEABAAAAAAAA&bo=4QJrAeECawEDCSw!&rf=viewer_4)\n\n\u597d\u5427\uff0c\u5f04\u6e05\u695a\u4e86\u8fd9\u4e2a\uff0c\u5199\u4e00\u4e0b$cal(i,j,k)$\u51fd\u6570\u4e86\uff0c\u5982\u4e0b\u56fe\uff0c\u5b83\u8981\u8fd4\u56de\u8fd9\u6837\u4e00\u4e2a\u94fe\u7684\u503c\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/u*PMefg5t4pVbB94AgrkwBVsNVyWjjtUhfSzz1Fif3o!/b/dC8BAAAAAAAA&bo=vAKKAbwCigEDCSw!&rf=viewer_4)\n\n\u4e8b\u5b9e\u4e0a\u770b\u8d77\u6765\u4e5f\u4e0d\u662f\u90a3\u4e48\u9ebb\u70e6\n\n```\nint cal(int i,int j,int k)\n{\n    return f[i-1][j-1]-f[i-k-1][j-k-1];\n}\n```\n\n\u4f46\u662f\uff0c\u5f53\u8f6c\u79fb\u8bbe\u8ba1\u5230\u62d0\u5f2f\u65f6\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/u*PMefg5t4pVbB94AgrkwBVsNVyWjjtUhfSzz1Fif3o!/b/dC8BAAAAAAAA&bo=vAKKAbwCigEDCSw!&rf=viewer_4)\n\n\u786e\u5b9e\u6709\u70b9\u9ebb\u70e6\u3002\u3002\u3002\u6211\u6700\u5f00\u59cb\u6f0f\u6389\u4e86\u90a3\u6761\u865a\u7ebf\u3002\u3002\n\n\u8fd9\u662f\u5e26\u62d0\u5f2f\u7684\u8f6c\u79fb\uff1a$dp[i][j][1]=max(dp[i][j][1],dp[i-k][n+j-k][0]+cal(i-j+1,n+1,k-j+1)+cal(i,j,j-1))$\n\n\u597d\u5427\uff0c\u5230\u8fd9\u91cc\u6211\u5df2\u7ecf\u611f\u89c9\u6211\u5199\u4e0d\u51fa\u5355\u8c03\u961f\u5217\u4e86\u3002\n\n\u4ea4\u4e86\u4e00\u4e0b\u679c\u7136\u62ff\u5230\u4e8690\u5206\uff0c\u5176\u5b9e\u5728\u5982\u679c\u5728\u8003\u573a\u4e0a\u505a\u5230\u8fd9\u91cc\u5df2\u7ecf\u53ef\u4ee5\u4e86\uff08\u9b3c\u77e5\u9053\u4e3a\u4ec0\u4e48\u90e8\u5206\u5206\u6709\u8fd9\u4e48\u591a\uff09\n\n\u90e8\u5206\u5206\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <cstring>\nint max(int x,int y){return x>y?x:y;}\nint min(int x,int y){return x<y?x:y;}\nconst int N=1010;\nconst int inf=0x3f3f3f3f;\nint dp[N][N][2],n,m,p,harv[N][N],f[N][N],cost[N],ans=-inf;//n\u6570\u91cf\uff0cm\u65f6\u95f4\nint cal(int i,int j,int k)\n{\n    return f[i-1][j-1]-f[i-k-1][j-k-1];\n}\nint main()\n{\n    memset(dp,-0x3f,sizeof(dp));\n    scanf(\"%d%d%d\",&n,&m,&p);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&harv[i][j]);\n            f[j][i]=f[j-1][i-1]+harv[i][j];\n        }\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",cost+i);\n    for(int i=1;i<=n;i++)\n        dp[1][i][0]=-cost[i];\n    m++;\n    for(int i=2;i<=m;i++)//\u65f6\u95f4\n    {\n        for(int j=1;j<=n;j++)//\u8def\u7a0b\n        {\n            for(int k=1;k<=min(i,p);k++)//\u4ece\u7b2c\u51e0\u4e2a\u4e4b\u524d\u8f6c\u79fb\n            {\n                if(j>k)\n                    dp[i][j][1]=max(dp[i][j][1],dp[i-k][j-k][0]+cal(i,j,k));\n                else if(i>j)\n                    dp[i][j][1]=max(dp[i][j][1],dp[i-k][n+j-k][0]+cal(i-j+1,n+1,k-j+1)+cal(i,j,j-1));\n            }\n\n        }\n        for(int j=1;j<=n;j++)\n            for(int k=1;k<=n;k++)\n            {\n                if(k==j) continue;\n                dp[i][j][0]=max(dp[i][j][0],dp[i][k][1]-cost[j]);\n            }\n    }\n    for(int i=1;i<=n;i++)\n        ans=max(ans,dp[m][i][1]);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n\n\u770b\u770b\u5404\u4f4d\u4f6c\u7237\u7684\u9898\u89e3\u3002\n\n------------\n\u624d\u53d1\u73b0\u81ea\u5df1\u7684\u65b9\u7a0b\u592a\u4e0d\u4f18\u79c0\u4e86\uff0c\u4f18\u79c0\u7684\u65b9\u7a0b$O(N^3)$\u751a\u81f3\u53ef\u4ee5\u5361\u8fc7\u3002\n\n$dp[i]$\u8868\u793a\u65f6\u95f4$i$\u7684\u6700\u5927\u7b54\u6848\u3002\n\n\u8f6c\u79fb\uff1a$dp[i]=max(dp[i-k]+cal(i,j,k)-cost[j-k])$//\u65e0\u73af\n\n\u770b\u7740\u51cf\u53bb\u7684$cost[i]$\uff0c\u6211\u660e\u767d\u4e86\u5e94\u8be5\u7ed9$dp[i]$\u52a0\u4e00\u4e2a\u5b9a\u8bed\n\n$dp[i]$\u8868\u793a\u65f6\u95f4$i$\u5904\u5728\u67d0\u4f4d\u7f6e\u4e0a\u8fd8\u672a\u5728\u6b64\u4f4d\u7f6e\u4e0a\u6d88\u8d39\u673a\u5668\u4eba\u7684\u6700\u5927\u7b54\u6848\uff0c\u6bcf\u4e00\u6b65\u7684\u673a\u5668\u4eba\u82b1\u8d39\u662f\u5728\u88ab\u8f6c\u79fb\u7684\u65f6\u5019\u624d\u6263\u5f97\u554a\u3002\u800c\u6211\u6700\u521d\u7684\u65b9\u7a0b\uff0c\u662f\u4ee3\u8868\u5f53\u524d\u65f6\u95f4$i$\u548c\u5730\u70b9$j$\u5df2\u7ecf\u4e70\u4e86\u673a\u5668\u4eba\u7684\u6700\u5927\u7b54\u6848\u3002\u4e3a\u4e86\u533a\u5206\u662f\u5426\u5904\u7406\u82b1\u8d39\u673a\u5668\u4eba\u7684\u72b6\u6001\uff0c\u6211\u751a\u81f3\u5f97\u7528\u7b2c\u4e09\u7ef4\u76840/1\u7ef4\u62a4\u3002\n\n\u8bfb\u4e86\u8bfb\u9898\u76ee\u4e2d**\u201c\u5fc5\u987b\u7acb\u523b\u5728 \u4efb\u610f \u4e00\u4e2a\u673a\u5668\u4eba\u5de5\u5382\u4e2d\u8d2d\u4e70\u4e00\u4e2a\u65b0\u7684\u673a\u5668\u4eba\u201d**\uff0c\u6211\u660e\u767d\u4e86\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4e0d\u8981\u5730\u70b9\u8fd9\u4e00\u7ef4\uff0c\u5176\u5b9e\u6bcf\u4e00\u4e2a\u65f6\u95f4\u90fd\u53ef\u4ee5\u5f53\u505a\u662f\u6b65\u6570\u5df2\u7ecf\u5230\u4e86\u7684\u65f6\u95f4\uff0c\u800c\u6b64\u65f6\u5730\u70b9\u7684\u9009\u62e9\u662f\u5177\u6709\u4efb\u610f\u6027\u7684\uff0c\u5373\u6b64\u65f6\u5730\u70b9\u4e5f\u662f\u4e0d\u91cd\u8981\u7684\u3002\n\n\u6211\u628a\u65b9\u7a0b\u6539\u4e86\u6539\uff0c\u679c\u7136$O(N^3)$\u5361\u8fc7\u4e86\n\n------------\n### \u5355\u8c03\u961f\u5217\u4f18\u5316\n\n\u4f46\u662f\uff0c\u5982\u679c\u6570\u636e\u518d\u5361\u4e00\u70b9\uff0c\u5355\u961f\u4f18\u5316\u5c31\u662f\u5fc5\u987b\u7684\u4e86\u3002\n\n\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u5b9e\u5728\u662f\u89c9\u5f97\u8fd9\u79cd\u70b9\u6743\u4e0b\u653e\u7684\u65b9\u5f0f\u4e0d\u4f18\u96c5\uff0c\u6211\u5c06\u5de5\u5382\u7684\u5b9e\u9645\u7f16\u53f7\u548c\u65f6\u95f4\u7ed9\u51cf\u53bb\u4e861\uff0c\u800c\u8bfb\u5165\u65f6\u4e0d\u53d8\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/zLicmWslxFNVhjDepk9XfsmJIJUG5FN7DgQDNQQQVMI!/b/dDABAAAAAAAA&bo=yAJ*AcgCfwEDCSw!&rf=viewer_4)\n\n\u8fd9\u6837\uff0c\u67e5\u8be2$f[i][j]$\u6240\u4ee3\u8868\u7684\u5c31\u4e0d\u662f\u518d\u591a\u5ef6\u4f38\u51fa\u53bb\u4e00\u6761\u94fe\u4e86\uff0c\u5f88\u8212\u670d\u4e86\u3002\n\n\u518d\u5217\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a//\u65e0\u73af\n$dp[i]=max(dp[i-k]+f[i][j]-f[i-k][j-k]-cost[j-k])$\n$=max(dp[i-k]-f[i-k][j-k]-cost[j-k])+f[i][j]$\n\n\u8f6c\u79fb\u65f6\u7ef4\u62a4$q[i][j]=dp[i]-f[i][j]-cost[j]$\u5373\u53ef\n\n\u56e0\u4e3a\u6bcf\u4e00\u4e2a$f[i][j]$\u90fd\u53ef\u4ee5\u552f\u4e00\u7684\u786e\u5b9a\u4e00\u4e2a$dp[i]$\u548c$cost[j]$\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651$f[i][j]$\u5728\u8f6c\u79fb\u65f6\u7684\u5206\u5e03\u3002\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/huyYyTgue0**JHVsNJYn*hbPZ7wZ8n8YFa0yFYv0Ehg!/b/dFYAAAAAAAAA&bo=2gKYAdoCmAEDCSw!&rf=viewer_4)\n\n\u5bf9\u540c\u4e00\u4e2a\u7b54\u6848\u7684\u8d21\u732e\uff0c\u8fd9\u4e2a\u5206\u5e03\u5927\u6982\u662f\u8fd9\u6837\u3002\n\n\u4e3a\u4e86\u51c6\u786e\u7684\u5b9a\u4f4d\u67d0\u4e2a\u7b54\u6848\u4ece\u54ea\u4e2a\u5355\u8c03\u961f\u5217\u8f6c\u79fb\uff0c\u8003\u8651\u7ed9\u6bcf\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u7f16\u53f7\uff0c\u5c06\u5355\u961f\u4e0e$location$\u8f74\u76f8\u4ea4\u7684\u90a3\u4e2a\u70b9\u4f5c\u4e3a\u5b83\u7684\u7f16\u53f7\u3002\n\n\u5728\u8fd8\u6ca1\u62d0\u5f2f\u65f6\uff0c\u6240\u5c5e\u5355\u961f\u5373\u4e3a$j-i$\uff0c\u62d0\u5f2f\u4e86\u4ee5\u540e\u6211\u4eec\u53d1\u73b0\u5b83\u51cf\u53bb\u4e86$l$\u4e2a$n$\uff0c$l$\u4e3a\u62d0\u5f2f\u6b21\u6570\uff0c\u5f88\u7b80\u5355\uff0c\u53d6\u819c\u4ee5\u540e\u52a0\u4e00\u4e2a\u518d\u53d6\u819c\u5373\u53ef\n\n```\nint get(int i,int j)//\u83b7\u53d6\u5355\u961f\u7f16\u53f7\n{\n    return ((j-i)%n+n)%n;\n}\n```\n\n\u8fd8\u6709\u4e24\u70b9\u8981\u6ce8\u610f\u7684\u5730\u65b9\n\n\u4e00\u662f\u865a\u7ebf\u6240\u8fde\u7684\u8fb9\u4ecd\u7136\u9700\u8981\u7279\u5224\u4e00\u4e0b\n\u4e8c\u662f\u4e3a\u4e86\u786e\u4fdd\u62d0\u5f2f\u540e\u4e0d\u51fa\u73b0\u95ee\u9898\uff0c\u8981\u628a$dp[i]=max(dp[i-k]-f[i-k][j-k]-cost[j-k])+f[i][j]$\u4e2d\u7684$f[i][j]$\u52a0\u4e0a\u5b83\u5931\u53bb\u7684\u94fe\u7684\u957f\u5ea6\uff0c\u7ef4\u62a4\u4e00\u4e2a$add[i]$\u6570\u7ec4\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <cstring>\nconst int N=1010;\nint max(int x,int y){return x>y?x:y;}\nint n,m,p;\nint f[N][N],cost[N],q[N][N],loc[N][N],l[N],r[N],add[N],dp[N];\nint get(int i,int j)//\u83b7\u53d6\u5355\u961f\u7f16\u53f7\n{\n    return ((j-i)%n+n)%n;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&p);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&f[j][i]);\n            f[j][i]+=f[j-1][i-1];\n        }\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",cost+i);\n        q[i][++r[i]]=-cost[i],l[i]++;\n    }\n    memset(dp,-0x3f,sizeof(dp));\n    dp[0]=0;\n    for(int i=1;i<=m;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            int id=get(i,j);\n            while(l[id]<=r[id]&&loc[id][l[id]]+p<i) l[id]++;\n            if(!j) add[id]+=f[i][n];\n            if(l[id]<=r[id])\n                dp[i]=max(dp[i],q[id][l[id]]+add[id]+f[i][j]);\n        }\n        for(int j=0;j<n;j++)\n        {\n            int id=get(i,j);\n            int tmp=dp[i]-add[id]-f[i][j]-cost[j];\n            while(l[id]<=r[id]&&q[id][r[id]]<=tmp)\n                r[id]--;\n            loc[id][++r[id]]=i;\n            q[id][r[id]]=tmp;\n        }\n    }\n    printf(\"%d\\n\",dp[m]);\n    return 0;\n}\n\n```",
        "postTime": 1529673503,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e00\u9053\u975e\u5e38\u5177\u6709\u601d\u8003\u6027\u7684dp\u3002\n\n\u6837\u4f8b\u6570\u636e\n\n2 3 2 \n\n1 2 3 \n\n2 3 4 \n\n1 2\n\n\n\u7528f[i]\u8868\u793a\u7b2ci\u4e2a\u65f6\u95f4\u6700\u5927\u5229\u76ca\n\ncost[i]\u8868\u793a\u7b2ci\u4e2a\u5de5\u5382\u673a\u5668\u4eba\u7684\u96c7\u4f63\u8d39\n\nr[j][i]\u8868\u793a\u7b2ci\u4e2a\u65f6\u523b\u5230\u8fbe\u7b2cj\u4e2a\u5de5\u5382\u7684\u4ef7\u503c\n\nsum[i][j]\u8868\u793a\u4ef7\u503c\u7684\u524d\u7f00\u548c\n\n**\u9996\u5148\uff0c\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u5de5\u5382\u7f16\u53f7\u4e3a0\uff08 _It is important_ \u4e00\u5b9a\u8981\u7406\u89e3\u8fd9\u4e00\u64cd\u4f5c\uff09\u3002**\n\n**\u56e0\u4e3a\u7b2ci\u6761\u8def\u6307\u5411\u7b2ci+1\u4e2a\u5de5\u5382\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u7b2ci\u6761\u8def\u7684\u4ef7\u503c\u53d8\u6210\u7b2ci+1\u4e2a\u5de5\u5382\u7684\u4ef7\u503c,\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u5982\u4e0b\u8f93\u5165\u4ee3\u7801\uff08\u56e0\u4e3a\u4ece0\u5f00\u59cb\u7f16\u53f7\uff0c\u6240\u4ee5\u7b2cn\u6761\u8def\u7684\u4ef7\u503c\u8f6c\u79fb\u7ed9\u7b2c0\u53f7\u5de5\u5382\uff0c\u56e0\u6b64\u5bf9n\u53d6\u6a21\uff09      ~~read\uff08\uff09\u662f\u5feb\u8bfb\uff0c\u4e0d\u61c2\u7684\u8bdd\u81ea\u5df1\u767e\u5ea6~~**\n\n```cpp\nfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tr[i%n][j]=read();\n```\n**\u540c\u65f6\uff0c\u6211\u4eec\u5bf9\u4ef7\u503c\u8fdb\u884c\u524d\u7f00\u548c\u3002\u56e0\u4e3a\u4ef7\u503c\u5b58\u5728\u5de5\u5382\u548c\u65f6\u95f4\u4e24\u4e2a\u7ea6\u675f\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u3002**\n```\nfor(int i=1;i<=m;i++)\n\t\tfor(int j=0;j<n;j++)\n\t\t\tsum[i][j]=sum[i-1][(j-1+n)%n]+r[j][i];\n```\n**\u5373sum\u503c\u7531\u5bf9\u89d2\u7ebf\u4f20\u9012**\n\n## *\u6211\u4eec\u4eceO(n3)\u7684\u89e3\u6cd5\u8bb2\u8d77\n\t \u6211\u4eec\u5f88\u5bb9\u6613\u5f97\u5230\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\n     \n    \n```cpp\nf[i]=max(f[i\u2212k]+sum[i][j]\u2212sum[i-k][j-k]\u2212cost[j\u2212k])\n```\n\n\u610f\u601d\u662f\u673a\u5668\u4eba\u4ecej-k\u53f7\u5de5\u5382\u51fa\u53d1\uff0c\u8d70k\u6b21\u5728i\u65f6\u523b\u5230\u8fbej\u53f7\u5de5\u5382\uff0c\u5e76\u5bf9\u8fd9\u4e00\u8fc7\u7a0b\u53d6\u6700\u4f18\u503c\u3002\n       \n\u5982\u679c\u662f\u4ee5\u8fd9\u9053\u9898\u8003\u5bdf\u666e\u53ca\u7ec4\u7684\u521d\u8877\uff0c\u90a3\u4e48\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\uff0c\u4f46\u662f\u5982\u679c\u6570\u636e\u7a0d\u7a0d\u52a0\u5f3a\uff0c\u5bf9\u4e8e1000\u7684\u6570\u636e\uff0cO(n3)\u662f\u8fdc\u4e0d\u591f\u5f97\u3002\n\n## *\u90a3\u4e48\uff0c\u6211\u60f3\u529e\u6cd5\u8fdb\u884c\u538b\u7f29\n\n\u6211\u4eec\u5bf9\u4e0a\u9762\u7684\u65b9\u7a0b\u7a0d\u52a0\u5904\u7406\u5f97\u5230\n\n```\nf[i]=max(f[i\u2212k]\u2212sum[i-k][j-k]\u2212cost[j\u2212k])+sum[i][j]\n```\n\n\u5c31\u662f\u5c06\u4e0d\u9700\u8981\u679a\u4e3ek\u6b65\u6570\u7684\u9879\u63d0\u51fa\u6765\u3002\n\n\u6211\u4eec\u7528rec[i][j]\u6765\u8bb0\u5f55f[i]\u2212sum[i][j]\u2212cost[j]\n\n\u5f97\u5230\n\n```\nf[i]=max(rec[i-k][j-k])+sum[i][j]\n```\n\n\u56e0\u4e3arec\u7684i\u548cj\u4e24\u9879\u540c\u65f6\u51cf\u53bbk\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0af[i]\u662f\u5bf9**\u5bf9\u89d2\u7ebf**\u4e0a\u7684rec\u8fdb\u884c\u53d6\u6700\u5927\u503c\u3002\u6211\u4eec\u7528**\u4f18\u5148\u961f\u5217**\u5bf9\u8fd9\u4e00\u8fc7\u7a0b\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u540c\u4e00\u5bf9\u89d2\u7ebf\u7684rec\u653e\u5165\u540c\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u3002\n\n\u8be6\u7ec6\u7684\u7ec6\u8282\uff0c\u8fd8\u662f\u770b\u770b\u4ee3\u7801\u5427\n\n```\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\ninline int read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c<='9'&&c>='0')\n\t{\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x;\n}\n\nint n,m,p;\nint r[1005][1005];\nint cost[1005];\nint sum[1005][1005];\nint rec[1005][1005];\nint dp[1005];\nint pre[1005][1005];\nint maxn=-99999999;\n\nstruct node{\n    int data,step;\n    bool operator<(node a)const{\n        return a.data>data;\n    }\n};\n\npriority_queue<node>q[1100];\n\nvoid update(int si,int now)\n{\n\tnode tmp=q[si].top();\n\twhile(now-tmp.step>=p)\n\t{\n\t\tq[si].pop();\n\t\ttmp=q[si].top();\n\t}\n}\n\nint main()\n{\n\tfreopen(\"roadgame.txt\",\"r\",stdin);\n\tn=read();m=read();p=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tr[i%n][j]=read();\n\tfor(int i=1;i<=m;i++)\n\t\tfor(int j=0;j<n;j++)\n\t\t\tsum[i][j]=sum[i-1][(j-1+n)%n]+r[j][i];\n\tfor(int i=0;i<n;i++)\n\t\tcost[i]=read();\n\tfor(int i=0;i<n;i++)\n\t\tpre[0][(i-1+n)%n]=i;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\trec[0][i]=-cost[i];\n\t\tnode tmp;\n\t\ttmp.data=-cost[i];\n\t\ttmp.step=0;\n\t\tq[pre[0][i]].push(tmp);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint t=-9999999;\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tdp[i]=max(dp[i],rec[i-1][(j-1+n)%n]+sum[i][j]);\n\t\t\tmaxn=max(maxn,dp[i]);\n\t\t\tt=max(t,dp[i]);\n\t\t}\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tpre[i][j]=pre[i-1][(j-1+n)%n];\n\t\t\tnode tmp;\n\t\t\ttmp.data=t-sum[i][j]-cost[j];\n\t\t\ttmp.step=i;\n\t\t\tq[pre[i][j]].push(tmp);\n\t\t\tupdate(pre[i][j],i);\n\t\t\trec[i][j]=q[pre[i][j]].top().data;\n\t\t}\n\t}\n\tcout<<maxn;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1521899692,
        "uid": 26039,
        "name": "\u53cb\u4ebaA_lie_of_April",
        "ccfLevel": 6,
        "title": "P1070\u9053\u8def\u6e38\u620f\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u8fd8\u662f\u5f88\u96be\u7684\n\n\u7528\u4e00\u7ef4\u6570\u7ec4f\u50a8\u5b58\u7b2ci\u79d2\u80fd\u83b7\u5f97\u7684\u6700\u5927\u94b1\u6570\n\n\u56e0\u4e3a\u6700\u591a\u540c\u65f6\u5b58\u57281\u4e2a\u673a\u5668\u4eba\n\n\u7b2ci\u79d2\u65f6\u7b2cj\u4e2a\u673a\u5668\u4eba\u8d70k\u6b21(1<=k<=p)\n\nf[i]=max(f[i],f[i-k]-pay[last]+sum)\n\n\u8fd9\u91cc\u662f\u4ece\u5f53\u524d\u70b9\u5012\u63a8\n\nlast\u662f\u4e0a\u4e00\u4e2a\u70b9\n\n\u5f53last=0,last=n\n\nsum\u8981\u4e00\u904d\u904d\u52a0\u4e0a\u94b1k\u79d2\u7b2clast\u8def\u4e0a\u7684\u91d1\u5e01\u6570\n\n\u6bcf\u6b21\u51cf\u53bb\u7b2clast\u6761\u9053\u8def\uff08\u5373\u7b2clast\u4e2a\u5de5\u5382\u673a\u5668\u4eba\uff09\u7684\u4ef7\u683c\n\n\u5982\u679ci-k<0\n\n\u76f4\u63a5\u9000\u51fak\u5faa\u73af\uff0c\u65f6\u95f4\u4e0d\u4e3a\u8d1f\n\n\u56e0\u4e3a\u7ed3\u679c\u53ef\u80fd\u662f\u8d1f\u7684\n\n\u521d\u59cb\u5316\u4e3a-99999999\n\n\n\nf[0]=0\uff0c\u5373\u7b2c0\u79d2\u91d1\u5e01\u6570\u4e3a0\n\n\u8f93\u51fa\u7b2cm\u79d2\u7684\u503c\n\n```cpp\n# include<iostream>\n# include<cstring>\nusing namespace std;\nint n,m,p;\nint pay[1001];\nint money[1001][1001];\nint f[1001];\nint main()\n{\n    cin>>n>>m>>p;\n    memset(f,-999999,sizeof(f));\n    f[0]=0;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        cin>>money[i][j];\n    for(int i=1;i<=n;i++)\n      cin>>pay[i];\n    for(int i=1;i<=m;i++)\n      for(int j=1;j<=n;j++)\n        {\n            int ff=j-1;\n            if(!ff) ff=n;\n            int ss=money[ff][i];\n            for(int k=1;k<=p;k++)\n              {\n                  if(i-k<0) break;\n                  f[i]=max(f[i],f[i-k]+ss-pay[ff]);\n                  ff--;\n                  if(!ff) ff=n;\n                  ss+=money[ff][i-k];\n              }\n        }\n    cout<<f[m];\n    return 0;\n}\n\n```",
        "postTime": 1508664654,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709\u4ec0\u4e48\u6bd4\u8f83\u6e05\u6670\u660e\u4e86\u7684O\uff08n3\uff09\u7684\u9898\u89e3\uff0c\u7b54\u4e00\u4e0b\uff0c\u5177\u4f53\u89e3\u91ca\u5728\u4ee3\u7801\u4e2d\n\ndp[i] \u8868\u793a\u7b2ci\u65f6\u523b\u7684\u6700\u5927\u503c\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint mp[1005][1005],n,m,p,cost[1005],dp[1005],ans,t; \nint main(){\n    scanf(\"%d%d%d\",&n,&m,&p);\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=m;++j){\n            scanf(\"%d\",&mp[i][j]);//\u7b2ci\u6761\u8fb9\uff0cj\u65f6\u523b\n        }\n    }\n    for(int i=1;i<=n;++i){//\u6bcf\u4e2a\u70b9\u7684\u82b1\u8d39 \n        scanf(\"%d\",&cost[i]);\n    }\n    for(int i=1;i<=m;++i){//\u521d\u59cb\u5316 \n        dp[i] = -1e9;//\u7531\u4e8e\u6709\u53ef\u80fd\u6709\u8d1f\u6570\u89e3 \n    }\n    for(int i=1;i<=m;++i){//\u679a\u4e3e\u65f6\u95f4 \n        for(int j=1;j<=n;++j){//\u679a\u4e3e\u70b9 \n            ans = -cost[j]+dp[i-1]; \n            for(int k=0;k<p&&i+k<=m;++k){//\u679a\u4e3e\u8d70\u7684\u6b65\u6570 \n                t = j+k > n ? ((j+k)%n) : j+k;//\u5904\u7406\u73af \n                ans += mp[t][i+k];\n                dp[i+k] = dp[i+k] > ans ? dp[i+k] : ans;//\u66f4\u65b0 \n            }\n        }\n    }\n    printf(\"%d\\n\",dp[m]);\n    return 0;\n}\n```",
        "postTime": 1507896544,
        "uid": 31619,
        "name": "Hzxleo4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u840c\u65b0\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\n\u4ee3\u7801\u6ca1\u600e\u4e48\u7b80\u5316\u4f46\u81ea\u89c9\u601d\u8def\u6e05\u6670\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u795e\u5947\u7684\u52a8\u89c4\n\n\u9898\u66f0\uff1a\n\n\u300b\u6e38\u620f\u4ece\u5c0f\u65b0\u7b2c\u4e00\u6b21\u8d2d\u4e70\u673a\u5668\u4eba\u5f00\u59cb\u8ba1\u65f6\n\n\u300b\u5f53\u9a6c\u8def\u4e0a\u7684\u673a\u5668\u4eba\u884c\u8d70\u5b8c\u89c4\u5b9a\u7684\u6b21\u6570\u4e4b\u540e\u4f1a\u81ea\u52a8\u6d88\u5931\uff0c\u5c0f\u65b0\u5fc5\u987b\u7acb\u523b\u5728\u4efb\u610f\u4e00\u4e2a\u673a\u5668\u4eba\u5de5\u5382\u4e2d\u8d2d\u4e70\u4e00\u4e2a\u65b0\u7684\u673a\u5668\u4eba\uff0c\u5e76\u7ed9\u65b0\u7684\u673a\u5668\u4eba\u8bbe\u5b9a\u65b0\u7684\u884c\u8d70\u6b21\u6570\n\n\u8fd9\u4e24\u4e2a\u89c4\u5b9a\u51b3\u5b9a\u4e86\u4efb\u4f55\u65f6\u95f4\uff0c\u9053\u8def\u4e0a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u673a\u5668\u4eba\n\n\u5373\u4f7f\u91d1\u5e01\u6570\u662f\u8d1f\u7684\u4f60\u4e5f\u5f97\u786c\u7740\u5934\u76ae\u8d70\u4e0b\u53bb\n\n\uff08\u524d20\u4e2a\u70b9\u4e0d\u7528\u8003\u8651\u8fd9\u4e24\u6761_(:3/L)\\ \u4f3c\u4e4e\u662f\u56e0\u4e3a\u90fd\u662f\u6b63\u7684\n\n\u4f46\u7b2c21\u4e2a\u6d4b\u8bd5\u70b9\u8fd8\u4e0d\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u7684\u8bdd\n\u5b83\u4f1a\u5728\u5f00\u59cb\u8ba1\u65f6\u7b2c2\u79d2\u624d\u4e70\u673a\u5668\u4eba\uff0c\u4e0d\u7b26\u5408\u9898\u610f)\n\n\u7136\u540e\u5c31\u662fdp\u4e86\n\n\u73b0\u5728\u65f6\u95f4\u662fj,\u4f60\u8981\u5230\u8fbe\u7b2ci\u4e2a\u5de5\u5382\uff0c\n\u90a3\u4e48\u4f60\u4e00\u5b9a\u4f1a\u7ecf\u8fc7\u7b2ci-1(\u5982\u679ci==1\u90a3\u4e48\u5c31\u662fn)\u6761\u9053\u8def\n\n\u5403\u5230\u7b2cj\u79d2\u51fa\u73b0\u5728\u8fd9\u6761\u8def\u4e0a\u7684\u91d1\u5e01\n\n\u4f46\u662f\u4f60\u6709\u4e24\u79cd\u9009\u62e9\n\n\u4e00\uff0c\u4ecei-1\u4e2a\u5de5\u5382\u5df2\u7ecf\u7528\u8fc7\u7684\u673a\u5668\u4eba\u8fc7\u6765\n\n\u4e8c\uff0c\u4e4b\u524d\u7684\u7206\u6389,\u5728i-1\u53f7\u5de5\u5382\u65b0\u4e70\u4e00\u4e2a\uff0c\u5e76\u6263\u9664\u6210\u672cc[i-1]\n\n\u5982\u679c\u91c7\u53d6\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u90a3\u4e48\u4e0d\u7ba1\u4f60\u7206\u54ea\u8def\u6765\u7684\u673a\u5668\u4eba\u90fd\u6ca1\u95ee\u9898\n\n\u65e2\u7136\u5982\u6b64\u5c31\u7206\u6389\u4e0a\u4e00\u79d2\u90a3\u4e2a\u94b1\u6700\u591a\u7684\u5427\uff01\n\n\u4e0d\u8003\u8651\u6b65\u6570\u7684\u8bdd\u6700\u4f18\u89e3\u53ea\u8981\u6bd4\u8f83\u4e24\u4e2a\u8c01\u5927\u5c31\u884c\u4e86\n\n```cpp\nint x=i-1;\nif(x==0)\n\tx=n;\nint bw=w[x][j-1][0]>w[x][j-1][1]?w[x][j-1][0]:w[x][j-1][1];\nw[i][j][0]=bw+g[x][j];\nw[i][j][1]=h[j-1]-c[x]+g[x][j];\nif(w[i][j][0]>h[j]||!gn[j]){\n\th[j]=w[i][j][0];\n\tgn[j]=true;\n}\nif(w[i][j][1]>h[j])\n\th[j]=w[i][j][1];\nif(h[j]>ans)\n\tans=h[j];\n```\n\n\u6ce8\uff1a\u8fd9\u91cc\u7528w[i][j][0]\u548cw[i][j][1]\u4e24\u4e2a\u6570\u8bb0\u5f55\u662f\u4e3a\u4e86\u65b9\u4fbf\u4e4b\u540e\u8003\u8651\u6b65\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u91cd\u65b0\u8ba1\u7b97\u65f6\u65b9\u4fbf\u8ba1\u7b97\u5dee\u503c\uff0c\n\nw[i][j][0]\u8868\u793a\u8fd9\u4e00\u6b65\u7528\u65e7\u673a\u5668\u4eba\u8d70\u5230\u8fd9\u4e00\u6b65\u7684\u6700\u5927\u91d1\u94b1\uff0cw[i][j][1]\u8868\u793a\u8fd9\u4e00\u6b65\u65b0\u4e70...\n\n\u8ba1\u7b97\u7b54\u6848\u7684\u8bdd\u8981\u5206\u522b\u6bd4\u8f83\n\n\u7136\u540e(\u5927\u6982)\u5c31\u662f\u672c\u9898\u6700\u9ebb\u70e6\u7684\u4e1c\u897f\u4e86\uff1a\u6b65\u6570p\n\n\uff08\u524d20\u4e2a\u70b9\u4e0d\u7528\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0c\u6b65\u6570\u591f\u4e86\u76f4\u63a5\u6309\u4e70\u65b0\u7684\u7b97\uff09\n\uff08\u7136\u800c\u5982\u679c\u4e0d\u8003\u8651\u8fd9\u4e2a\u56e0\u7d20\uff0c\u4ece\u67d0\u4e2a\u89d2\u5ea6\u6765\u8bb2\u5c31\u6ca1\u6709\u771f\u6b63\u89e3\u51b3\u8fd9\u9053\u9898\uff09\n\n\u4f60\u9047\u5230\u4e86\u4e00\u4e2a\u5c34\u5c2c\u7684\u5883\u5730\uff1a\n\n\u4ece\u4e0a\u4e2a\u5de5\u5382\u7528\u8fc7\u7684\u673a\u5668\u4eba\u76f4\u63a5\u8d70\u5230\u8fd9\u4e2a\u5de5\u5382\u6bd4\u65b0\u4e70\u4e00\u4e2a\u7701\u94b1\n\n\u4f46\u662f\u6b65\u6570\u4e0d\u591f\u4e86(\u4ece\u7b2ci-p\u4e2a\u5de5\u5382\u8d2d\u4e70\u6765\u7684\u673a\u5668\u4eba\u7528\u5230j-1\u79d2\uff0c\u5e76\u4e3aj-1\u79d2\u7684\u6700\u4f18\u65b9\u6848)\n\n\u90a3\u4e48\u4f60\u4e00\u5b9a\u4f1a\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a\u53ef\u4e0d\u53ef\u4ee5\u4ece\u4e4b\u524d\u7684\u67d0\u4e2a\u5de5\u5382\u63d0\u524d\u8d2d\u4e70\u4e00\u4e2a\u5462\n\n\u8fd9\u6837\u7684\u8bdd\u5bf9\u4e8ej-1\u79d2\u7684\u60c5\u51b5\u53ef\u80fd\u4e0d\u662f\u6700\u4f73\u65b9\u6848\uff0c\u4f46\u5bf9\u4e8e\u7b2cj\u79d2\u53ef\u80fd\u66f4\u597d\u4e00\u4e9b\n\n\u8fd9\u6837\u4f53\u73b0\u4e86\u4e4b\u524d\u7684\u4e24\u79cd\u60c5\u51b5\u5206\u5f00\u5199\u7684\u5fc5\u8981\u6027\n\n\u201c\u56de\u5f52\u5230\u4e4b\u524d\u7684\u67d0\u4e2a\u5de5\u5382\u91cd\u65b0\u518d\u6765\u201d\uff1a\n\n```\nvoid bk(int x,int y){\n\tint lx=x-p+1,ly=y-p+1;\n\tif(lx<=0)\n\tlx+=n;\n\tint mc=0;\n\tfor(int i=1;i<=p;i++){\n\tint ct=w[lx][ly][1]-w[lx][ly][0];\n\t\tif(i==1||ct>mc){\n\t\t\tt[x][y]=y-ly+1;\n\t\t\tmc=ct;\n\t\t}\n\t\tlx++;ly++;\n\t\tif(lx>n)\n\t\t\tlx-=n;\n\t}\n\tw[x][y][0]+=mc;\n}\n```\n\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4e4b\u524d\u7ed9w[i][j][0]\u6309\u201c\u4e0d\u7b97\u6b65\u6570\u65f6\u7528\u65e7\u673a\u5668\u4eba\u7684\u60c5\u51b5\u201d\n\u8d4b\u503c\n\n\u7b2clx\u6b65\u4ee5\u540e\u6267\u884c\u7684\u64cd\u4f5c\u6ca1\u6709\u533a\u522b\uff0c\u6240\u4ee5\u53ea\u662f\u5728\u8fd9\u4e00\u6b65\u6709\u6240\u4e8f\u635f\n\uff08\u4e4b\u524d\u6309\u4e00\u76f4\u7528\u65e7\u673a\u5668\u4eba\u8ba1\u7b97\uff0c\u73b0\u5728\u6309\u65b0\u4e70\u8ba1\u7b97\uff09\n\nct\u5c31\u662f\u4e8f\u6389\u7684\u6570\u5b57\uff0c\u53d6\u6700\u5927\u503c\u52a0\u5728w[i][j][0]\u4e0a\u5373\u53ef\n\n\u9700\u8981\u6ce8\u610f\uff1a\n\n1\uff0c\u53ea\u6709\u5f53\u67d0\u4e00\u6b65\u51fa\u73b0\u6b65\u6570\u8d85\u8fc7\u6700\u5927\u503c \u4e14 \u6b64\u65f6\u7528\u65e7\u7684\u673a\u5668\u4eba\u6bd4\u65b0\u4e70\u4e00\u4e2a\u673a\u5668\u4eba\u7684\u60c5\u51b5\u66f4\u7701\u94b1\n\uff08\u5982\u679c\u4e24\u8005\u7684\u94b1\u76f8\u7b49\u5219\u4f18\u5148\u65b0\u4e70\uff0c\u53ef\u4ee5\u8282\u7701\u6b65\u6570\uff09\n\n2\uff0c\u6700\u540e\u8981\u5faa\u73af\u5230\u70b9(i,j)\u672c\u8eab\uff0c\u56e0\u4e3a\u201c\u5728\u8fd9\u4e00\u6b65\u673a\u5668\u4eba\u7206\u6389\uff0c\u4f46\u540c\u65f6\u5728\u672c\u5de5\u5382\u518d\u4e70\u4e00\u4e2a\u201d\u6709\u53ef\u80fd\u662f\u6700\u4f73\u9009\u62e9\n\n\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u6b65\u6570\u8d85\u989d\u7684\u60c5\u51b5\u5c31\u5b8c\u5168\u4e0d\u8003\u8651\u6b65\u6570\u7684\u95ee\u9898\n\uff0c\u56e0\u4e3a\u6b64\u524d\u6bcf\u4e00\u6b65\u90fd\u662f\u6700\u4f18\uff0c\u800c\u6ca1\u6709\u5fc5\u8981\u8d70\u4e00\u6b65\u5c31\u91cd\u65b0\u8ba1\u7b97\u4e00\u6b21\n\n\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u5faa\u73af\n\n\u8d34\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int N=1009;\nint n,m,p,g[N][N],c[N],w[N][N][2],t[N][N],h[N],ans;\nbool gn[N];\nvoid bk(int x,int y){\n    int lx=x-p+1,ly=y-p+1;\n    if(lx<=0)\n        lx+=n;\n    int mc=0;\n    for(int i=1;i<=p;i++){\n        int ct=w[lx][ly][1]-w[lx][ly][0];\n        if(i==1||ct>mc){\n            t[x][y]=y-ly+1;\n            mc=ct;\n        }\n        lx++;ly++;\n        if(lx>n)\n            lx-=n;\n    //\tprintf(\"%7d(%d,%d)\\n\",ct,x,y);\n    }\n    w[x][y][0]+=mc;\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&p);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\",&g[i][j]);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&c[i]);\n        w[i][0][1]=0-5-c[i];\n        w[i][0][0]=0-5-c[i];\t\n    }\n    for(int j=1;j<=m;j++)\n        for(int i=1;i<=n;i++){\n            int x=i-1;\n            if(x==0)\n                x=n;\n            int bw=w[x][j-1][0]>w[x][j-1][1]?w[x][j-1][0]:w[x][j-1][1];\n            w[i][j][0]=bw+g[x][j];\n            if(t[x][j-1]>=p&&bw>h[j-1]-c[x])\n                bk(i,j);\n            w[i][j][1]=h[j-1]-c[x]+g[x][j];\n            t[i][j]=w[i][j][0]>w[i][j][1]?(t[x][j-1]+1):1;\n            if(w[i][j][0]>h[j]||!gn[j]){\n                h[j]=w[i][j][0];\n                gn[j]=true;\n            }\n            if(w[i][j][1]>h[j])\n                h[j]=w[i][j][1];\n        //\tprintf(\"%4d:%d-%d-(%d,%d)\\n\",w[i][j][0],w[i][j][1],t[i][j],i,j);\n            if(h[j]>ans)\n                ans=h[j];\n        }\n    printf(\"%d\\n\",ans);\nreturn 0;}\n```\n\uff08\u6ce8\u91ca\u6389\u7684\u4ee3\u7801\u7528\u6765debug\uff09\n\n\u8fd9\u9053\u9898\u670921\u4e2a\u6d4b\u8bd5\u70b9\uff0c\u524d20\u4e2a4\u5206\uff0c\u6700\u540e\u4e00\u4e2a20\u5206\n\n\u6211\u51e0\u6b21\u63d0\u5230\u201c\u524d20\u4e2a\u70b9\u4e0d\u7528\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u201d\n\n\u4e5f\u5c31\u662f\u8bf4\u5373\u4f7f\u4e0d\u56de\u5934\u91cd\u65b0\u8ba1\u7b97\uff0c\u4e0d\u8003\u8651\u8d1f\u6570\u4f60\u4e5f\u670980\u5206\u62ff\n\n\u751a\u81f3\u9488\u5bf9\u7b2c21\u4e2a\u70b9\u7684\u6570\u636e\u5199\u4e00\u4e2a\u5224\u65ad\u8f93\u51fa\u7b54\u6848\u5c31\u53ef\u4ee5\u8f7b\u677e\u62ff\u6240\u6709\u5206\n\uff08\u6700\u4f18\u89e3\uff0c24ms\uff0c\u5c31\u662f\u8fd9\u4e48\u505a\u7684\uff09\n\n\u4f46\u662f\u4e00\u6765\u771f\u6b63\u6bd4\u8d5b\u65f6\u6ca1\u4eba\u544a\u8bc9\u4f60\u54ea\u4e2a\u70b9\u662f\u5177\u4f53\u4ec0\u4e48\u6570\u5b57\uff0c\u53ea\u80fd\u5c3d\u529b\u53bb\u5199\u51fa\u6b63\u786e\u7684\u7b97\u6cd5\n\n\u4e8c\u6765\u8fd9\u6837\u505a\u6709\u4e00\u80a1\u6d53\u6d53\u7684\u5e94\u8bd5\u6c14\u606f\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u65e2\u7136\u5199\u4ee3\u7801\u5c31\u5e94\u8be5\u628a\u9898\u76ee\u5f53\u4f5c\u95ee\u9898\u6765\u89e3\u51b3\uff0c\u800c\u4e0d\u662f\u4ee5\u62ff\u5206\u4e3a\u552f\u4e00\u76ee\u6807\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u80fd\u5468\u5168\u5730\u8003\u8651\u5230\u95ee\u9898\u7684\u6240\u6709\u60c5\u51b5\uff0c\u5f7b\u5e95\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u76f8\u4fe1\u5206\u6570\u4e0d\u4f1a\u8f9c\u8d1f\u4f60\u7684\u671f\u671b\n\n\n\n",
        "postTime": 1524147970,
        "uid": 86488,
        "name": "MuttonYung",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u5c45\u7136\u6ca1\u6709\u5355\u8c03\u961f\u5217\u9898\u89e3\u4e0d\u79d1\u5b66\n\n\u72b6\u6001\u8868\u793a\u548c\u697c\u4e0a\u5dee\u4e0d\u591a\uff0c\u7528 $f[i]$ \u8868\u793a\u5230\u65f6\u95f4 $i$ \u53ef\u4ee5\u5f97\u5230\u7684\u6700\u591a\u91d1\u94b1\n\n\u8f6c\u79fb\u5f88\u663e\u7136\uff0c\u679a\u4e3e**\u5230\u8fbe**\u7684\u70b9 $j$ \u4ee5\u53ca\u8d70\u7684\u6b65\u6570 $k$\uff1a\n\n$f[i]=max(f[i-k]+(g[j-1][i]-g[j-k-1][i])-a[j-k])\\; \\; (0<j<n,0<k \\leq min(i,p))$\n\n\uff08\u5176\u4e2d $g$ \u6570\u7ec4\u8868\u793a\u659c\u7740\u7684\u90e8\u5206\u548c\uff09\u6ce8\u610f\u4e0a\u9762\u6ca1\u6709\u8003\u8651\u73af\u7684\u60c5\u51b5\n\n\u7136\u800c\u8fd9\u6837\u5b50\u505a\u662f $O(N^3)$ \u7684\uff0c\u7406\u8bba\u4e0a\u662f\u8fc7\u4e0d\u4e86\u7684\n\n\u6211\u4eec\u8003\u8651\u8fdb\u884c\u7b80\u5316\uff0c\uff08\u5373\u7701\u6389 $k$ \u5faa\u73af\uff09\u5148\u628a\u53ea\u6709\u5173 $i$ \u548c $j$ \u7684\u72ec\u7acb\u51fa\u6765\n\n$f[i]=max(f[i-k]-g[j-k-1][i]-a[j-k])+g[j-1][i]$\n\n\u7136\u540e\u6211\u4eec\u8bbe\u4e00\u4e2a $h[i][j]$\uff1a\n\n$h[i][j]=f[i]-g[j-1][i]-a[j]$\n\n\u5219\u8f6c\u79fb\u65b9\u7a0b\u53d8\u6210\u4e86\uff1a\n\n$f[i][j]=max(h[i-k][j-k])+g[j-1][i]\\; \\; (0<k \\leq min(i,p))$\n\n\u800c\u6bcf\u4e2a\u5bf9\u4e8e\u6bcf\u4e2a $f[i][j]$\uff0c\u5b83\u90fd\u662f\u76f8\u5f53\u4e8e\u5728**\u659c\u7ebf**\u4e0a\u8f6c\u79fb\uff1a\n\n ![](https://cdn.luogu.com.cn/upload/pic/7773.png) \n\n\uff08\u76f8\u540c\u989c\u8272\u7684\u683c\u5b50\u4ee3\u8868\u659c\u7ebf\uff09\u5bf9\u4e8e\u6bcf\u4e2a $f[i][j]$\uff0c\u76f8\u5f53\u4e8e\u8981\u6c42\u659c\u7ebf\u4e0a\u6700\u591a $p$ \u4e2a\u5143\u7d20\u7684\u6700\u5927\u503c\n\n\u7136\u540e\u6ce8\u610f\u5230\u8fd9\u662f\u4e2a\u8fde\u7eed\u7684\u6ed1\u52a8\u533a\u95f4\uff0c\u5e76\u4e14\u662f\u4e8c\u7ef4\u7684\uff0c\u4e8e\u662f\u7528 $n$ \u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\n\n``` cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <utility>\n#define N 1020\n#define INFINITE 999999999\nusing namespace std;\n\nclass Queue\n{\nprivate:\n    pair<int, int> f[N];\n    int l, r;\n\npublic:\n    Queue() : l(0), r(0)\n    {\n        return;\n    }\n\n    bool Empty(void)\n    {\n        return l == r;\n    }\n\n    pair<int, int> Back (void)\n    {\n        return f[r - 1];\n    }\n\n    pair<int, int> Front(void)\n    {\n        return f[l    ];\n    }\n\n    void Push_Back(pair<int, int> x)\n    {\n        f[r ++] = x;\n\n        return;\n    }\n\n    void Pop_Back (void)\n    {\n        r --;\n\n        return;\n    }\n\n    void Pop_Front(void)\n    {\n        l ++;\n\n        return;\n    }\n};\n\nint n, a[N];\nint f[N], g[N][N];\nQueue q[N];\n\nvoid PushOrder(Queue &q, int x, int p)\n{\n    while(!q.Empty() && q.Back().first <= x)\n        q.Pop_Back();\n    q.Push_Back(make_pair(x, p));\n\n    return;\n}\n\nvoid PopOrder(Queue &q, int p)\n{\n    if(q.Front().second <= p)\n        q.Pop_Front();\n    \n    return;\n}\n\nint MaxOrder(Queue &q)\n{\n    return q.Front().first;\n}\n\n\nint Reload(int x, int k)\n{\n    return ((x - k) % n + n) % n;\n}\n\nint main()\n{\n    int m, p;\n    int i, j;\n\n    scanf(\"%d %d %d\", &n, &m, &p);\n    for(i = 0;i < n;i ++)\n        for(j = 1;j <= m;j ++)\n            scanf(\"%d\", &g[i][j]);\n    for(i = 0;i < n;i ++)\n        scanf(\"%d\", &a[i]);\n\n    for(j = 2;j <= m;j ++)\n        for(i = 0;i < n;i ++)\n            g[i][j] += g[(i - 1 + n) % n][j - 1];\n\n    for(i = 0;i < n;i ++)\n        PushOrder(q[Reload(i, -1)], -a[i], 0);\n\n    for(i = 1;i <= m;i ++)\n    {\n        for(j = 0, f[i] = -INFINITE;j < n;j ++)\n            f[i] = max(f[i], MaxOrder(q[Reload(j, i - 1)]) + g[Reload(j, 1)][i]);\n\n        for(j = 0;j < n;j ++)\n        {\n            PopOrder (q[Reload(j, i - 1)], i - p);\n            PushOrder(q[Reload(j, i - 1)], f[i] - g[Reload(j, 1)][i] - a[j], i);\n        }\n    }\n    cout << f[m] << endl;\n\n    return 0;\n}\n```",
        "postTime": 1504427859,
        "uid": 34354,
        "name": "gorokokoro",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u89e3\u9898\u5206\u6790\uff1a\n\n\u5982\u679c\u8bbe$f[i,j]$\u4e3a\u65f6\u95f4$i$\uff0c\u5f53\u524d\u673a\u5668\u4eba\u5728$j$\u5904\uff0c\u6700\u5927\u80fd\u6361\u53d6\u7684\u91d1\u5e01\u6570\uff0c\u4ee5\u5212\u5206\u65f6\u95f4\u6bb5\uff0c\n\n\u5219\u5f53\u524d$f[i,j]$\u7684\u503c\u53ef\u4ee5\u7531\u4e24\u79cd\u72b6\u6001\u5f97\u5230\n\n1\u3001\u524d\u4e00\u65f6\u95f4\u70b9\u4e0d\u6539\u53d8\u673a\u5668\u4eba \u5219 \n$f[i,j]=f[i-1,j-1]+a[i,j];$\n\n\u8981\u6ce8\u610f\u5f53\u524d\u673a\u5668\u4eba\u8d70\u8def\u7684\u6b21\u6570\u4e0d\u80fd\u8d85\u8fc7$p$\uff1b\u8981\u8003\u8651$j=1$\u7684\u60c5\u51b5\n\n2\u3001\u524d\u4e00\u65f6\u95f4\u70b9\u6539\u53d8\u673a\u5668\u4eba\n\n\u5219\u73b0\u5728\u7684$f[i,j]$\u53ef\u7531\u6570\u7ec4$f[i-1,x]$\u4e2d\u7684\u4efb\u610f\u503c\u5f97\u5230 \u7531\u9898\u610f\u5e94\u53d6\u6700\u5927\u503c\n\n\u6240\u4ee5 $f[i,j]=max(f[i-1,x]+a[j,i]-b[j]);$\n($1 \\leq x \\leq n$)\n\n\u7efc\u5408\u5f97$f[i,j]=max(f[i-1,j-1]+a[j,i],max(f[i-1,x]+a[j,i]-b[j]));$\n\n### \u4ee3\u7801\n\n```pascal\nvar n,m,p,i,j,sum,k,ans1,ans:longint;\nf:array[0..2001,0..2001] of longint;\nc,a:array[0..2001,0..2001] of longint;\nb:array[0..2001] of longint;\nfunction max(x,y:longint):longint;\nbegin\nif x>y then exit(x) else exit(y);\nend;\nbegin\nreadln(n,m,p);\nfor i:=1 to n do\n  for j:=1 to m do\n    read(a[i,j]);\nans1:=-maxlongint;\nfor i:=1 to n do\n  begin\n  read(b[i]);\n  f[1,i]:=a[i,1]-b[i];\n  c[1,i]:=1;\n  ans1:=max(ans1,f[1,i]);\n  end;\nfor i:=2 to m do\n  begin\n  ans:=ans1;\n  ans1:=-maxlongint;\n  for j:=1 to n do\n    begin\n    k:=j-1;\n    if k=0 then k:=n;\n    if c[i-1,k]<p then\n      begin\n      f[i,j]:=f[i-1,k]+a[j,i];\n      c[i,j]:=c[i-1,k]+1;\n      end;\n    if ans+a[j,i]-b[j]>f[i,j] then\n      begin\n      f[i,j]:=ans+a[j,i]-b[j];\n      c[i,j]:=1;\n      end;\n    ans1:=max(ans1,f[i,j]);\n    end;\n  end;\nwriteln(ans1);\nclose(input);close(output);\nend.\n```\n\n\n\u5982\u679c\u8fd9\u6837\u505a\u90a3\u597d\uff0c\u606d\u559c\u4f60\u53ea\u6709$80$\u5206\u3002\u56e0\u4e3a\u8fd9\u79cd\u65b9\u6cd5\u65e0\u6cd5\u5224\u65ad\u4e00\u4e2a\u683c\u5b50\u5c0f\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4ed6\u7531\u4e00\u4e2a\u4e2a\u4f20\u9012\u6765\u6539\u53d8\u6210\u533a\u95f4\uff0c\u5c31\u80fd\u907f\u514d\u8ba9\u66f4\u4f18\u7684\u65b9\u6848\u88ab\u8986\u76d6\u6389\u3002\u53e6\u5916\u56e0\u4e3a$f[i,j]$\u9664\u4e86\u548c$f[i-1,j]$\u6709\u5173\u4ee5\u5916\u5c31\u6ca1\u6709\u5176\u4ed6\u5173\u8054\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u4ed6\u538b\u7f29\u81f3\u4e00\u7ef4\u6570\u7ec4\u3002\n\n\n### Code \n\n\n```\n# include<iostream>\n# include<cstring>\nusing namespace std;\nint n,m,p;\nint pay[1001];\nint money[1001][1001];\nint f[1001];\nint main()\n{\n    cin>>n>>m>>p;\n    memset(f,-999999,sizeof(f));\n    f[0]=0;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        cin>>money[i][j];\n    for(int i=1;i<=n;i++)\n      cin>>pay[i];\n    for(int i=1;i<=m;i++)\n      for(int j=1;j<=n;j++)\n        {\n            int ff=j-1;\n            if(!ff) ff=n;\n            int ss=money[ff][i];\n            for(int k=1;k<=p;k++)\n              {\n                  if(i-k<0) break;\n                  f[i]=max(f[i],f[i-k]+ss-pay[ff]);\n                  ff--;\n                  if(!ff) ff=n;\n                  ss+=money[ff][i-k];\n              }\n        }\n    cout<<f[m];\n    return 0;\n}\n```\n",
        "postTime": 1543272573,
        "uid": 119685,
        "name": "Kevin_Wa",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u7b97\u6cd5\u9700\u8981\u5c42\u5c42\u4f18\u5316\u3002\n\n\u5148\u6765\u8bf4\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff1a\n\n\u7528f[i,j,k]\u8868\u793a\u7b2ci\u65f6\u523b\uff0c\u8d70\u5230j\u4f4d\u7f6e\uff0c\u8d70\u4e86k\u6b65\u3002\n\n\u8fdb\u800c\u63a8\u51fa\u65b9\u7a0b\uff1a\n\nf[i,j,k]:=f[i-1,j-1,k-1]+a[i,j-1]\n\n f[i,j,0]:=max(f[i-1,t,k])-b[j];\n\n 1<=t<=n,1<=k<=p(\u6ce8\uff1a\u6b64\u65b9\u7a0b\u6211\u4e0d\u5927\u786e\u5b9a)\n\n\u8fd9\u6837\u662f\u4e0d\u662f\u592a\u9ebb\u70e6\u4e86\u5462\uff1f\n\n\u679a\u4e3et\u3001k\u8981(n^2)\n\n\u5e94\u6b64\u521d\u6b65\u4f18\u5316\u601d\u60f3\uff0c\u5c06\u4e0a\u4e00\u5c42\u7684f[i,j,k]\u7684\u6700\u5927\u503c\u8bb0\u4e0b\u6765\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u679a\u4e3et\u548ck\u4e86\u30023D/0D\u7684\u52a8\u6001\u89c4\u5212\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1an^3 \u65f6\u95f4\u590d\u6742\u5ea6\uff1an^3\n\n90\u5206\u5de6\u53f3\n\n\u4f18\u5316\u601d\u60f32\uff1a\n\n\u672c\u9898\u7684k\u662f\u4e0d\u662f\u6709\u4e9b\u65e0\u7528\u4e86\uff1fk\u538b\u6839\u5c31\u4e0d\u7528\u653e\u5230\u6570\u7ec4\u91cc\u561b\uff01\u76f4\u63a5\u5728\u5916\u9762\u679a\u4e3e\u3002\u8fd9\u6837\u6211\u7b80\u5199\u4e00\u4e0b\u65b9\u7a0b\u5f0f\uff1af[i,j]:=max(f[i-k,j-k]-s[i-k,j-k])+s[i,j];//k<>0 f[i,j]:=max(f[i-1,t])-b[j];//k=0\u3002s[i,j]\u4e3a\u7247\u6bb5\u548c\u4e0d\u8bb2\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u53d8\u6210\u4e862D/1D\u7684\u52a8\u6001\u89c4\u5212\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1an^2 \u65f6\u95f4\u590d\u6742\u5ea6\uff1an^3\n\n\u7ec8\u6781\u4f18\u5316\u601d\u60f3\uff1a\n\n1\u3001\u7528\u4f18\u5148\u961f\u5217\uff0c\u5c062D/1D\u8f6c\u5316\u4e3a2D/0D\uff0c\u6ee1\u5206\n\n2\u3001\u601d\u8003\uff0cy[i,j]\u8868\u793ai\u65f6\u523bj\u4f4d\u7f6e\u8d70\u4e86y[i,j]\u6b65\n\n\u82e5y[i,j]<y'[i,j]\u4e14s[i,j]>s'[i,j]\uff0c\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u8981\u679a\u4e3ek\uff0c\u4f46\u8fd9\u51ed\u4ec0\u4e48\u6210\u7acb\u5462\uff1f\u8d70\u7684\u6b65\u6570\u591a\u62ff\u7684\u94b1\u5c11\uff1f\u6240\u4ee5\u8fd9\u4e0d\u6210\u7acb\uff0c\u6545\u5c31\u53ef\u4ee5\u7701\u6389k\u7684\u679a\u4e3e\uff0c\u8ba9\u6bcf\u4e2a\u673a\u5668\u4eba\u8d70\u6ee1k\u6b65\u3002\u90a3\u5c31ok\u4e86\uff01\n\n\u6211\u4eec\u7528g[i,j]\u8868\u793ai\u65f6\u523bj\u4f4d\u7f6e\u8d70\u4e86\u51e0\u6b65\n\n\u82e5g[i-1,j-1]=p\uff0c\u90a3\u4e48\u65b0\u4e70\u4e00\u4e2a\u673a\u5668\u4eba\uff1af[i,j]:=maxx[i-1]-b[j-1]+a[i,j-1];\n\n\u5426\u5219\uff0c\u5c06\u4e70\u4e0e\u4e0d\u4e70\u7684\u5927\u5c0f\u6bd4\u8f83\u53bb\u8f83\u5927\u7684\u3002\n\n\u5982\u679c\u4e70\u5927\uff0c\u5219f[i,j]:=maxx[i-1]-b[j-1]+a[i,j-1];g[i,j]:=1;\n\n\u5982\u679c\u4e0d\u4e70\u5927\uff0c\u5219f[i,j]:=f[i-1,j-1]+a[i,j-1];g[i,j]:=g[i-1,j-1]+1;\n\n\u5927\u529f\u544a\u6210\uff01\u7a7a\u95f4\uff1an^2 \u65f6\u95f4:n^2\n\n\u6ee1\u5206\u3002\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u73af\u6211\u6ca1\u6709\u5904\u7406\uff0c\u8bf7\u5927\u5bb6\u81ea\u884c\u5904\u7406\uff09\n",
        "postTime": 1482234511,
        "uid": 17351,
        "name": "huangjiawei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e00\u9053\u597d\u9898\uff0c~~\u672c\u849f\u84bb\u6709\u611f\u800c\u53d1\uff0c\u60f3\u6c34\u4e00\u7bc7\u9898\u89e3~~\n\n\u770b\u5b8c\u9898\uff0c\u5e94\u8be5\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u5230\u7528DP\u89e3\u51b3\u3002\n\nf[i]\u4e3a\u7b2ci\u4e2a\u5355\u4f4d\u65f6\u95f4\uff0c\u80fd\u83b7\u5f97\u6700\u591a\u7684\u91d1\u5e01\u3002\n\n\n------------\n```\n#include <iostream>\n#include <cstring>\nusing namespace std;\nint a[1005][1005],cost[1005];\nint dp[1005]; \nint main()\n{\n\tint n,m,p;\n\tcin>>n>>m>>p;\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++) cin>>a[i][j];\n\tfor(int i=1;i<=n;i++) cin>>cost[i];\n\t//\u8f93\u5165\u4e0d\u8bb2\u4e86 \n\tmemset(dp,~0x7f,sizeof(dp));  \n\t//\u6ce8\u610f\u521d\u59cb\u5316\uff0c\u4e00\u5b9a\u8981\u9644\u4e00\u4e2a\u6781\u5c0f\u7684\u503c\uff0c\u56e0\u4e3a\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u8d1f\u6570\uff01\n\tdp[0]=0;   //\u521d\u59cb\u5316 \n\tfor(int i=1;i<=m;i++) //\u679a\u4e3e\u65f6\u95f4\uff0c\u524di\u5206\u949f \n\t{\n\t\tfor(int j=1;j<=n;j++) //\u679a\u4e3e\u7ed3\u675f\u4f4d\u7f6e\uff0c\u4ee5j\u53f7\u5de5\u5382\u7ed3\u675f \n\t\t{\n\t\t\tint sum=0;  //sum\u8868\u793a\u8d70\u8fc7\u6765\u7684\u8fc7\u7a0b\u4e2d\u80fd\u6536\u96c6\u591a\u5c11\u91d1\u5e01\n\t\t\tfor(int k=1;k<=p && k<=i;k++)\n\t\t\t//k\u8868\u793a\u8d70\u4e86k\u6b65\u5230\u8fbej\u53f7\u5de5\u5382,\u540c\u65f6,\u4e5f\u8868\u793a\u8d70\u5230\u7684\u7528\u65f6\uff0c\u6240\u4ee5\u6709 k<=p && k<=i\n\t\t\t{\n\t\t\t\tint last;  //last\u8868\u793a\u8d70k\u6b65\u524d\uff0c\u5de5\u5382\u662f\u591a\u5c11\u53f7\n\t\t\t\tif(j-k<=0) last=n+(j-k)%n;\n\t\t\t\telse last=j-k;   //\u73af\u5f62\u9053\u8def \n\t\t\t\tsum+=a[last][i-k+1];  //\u6c42\u548c \n\t\t\t\tdp[i]=max(dp[i],dp[i-k]+sum-cost[last]);  \n\t\t\t\t//\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u7b2ci\u5206\u949f\u7684\u6700\u5927\u503c=max(\u524di-k\u5206\u949f\u6700\u5927\u503c+\u8d70\u8fc7\u6765\u5f97\u5230\u91d1\u5e01\u6570) \n\t\t\t}\n\t\t}\n\t}\n\tcout<<dp[m]; //\u7b2cm\u5206\u949f\u7684\u6700\u5927\u503c\uff0c\u53ca\u7b54\u6848 \n\treturn 0;\n}\n```\n\n------------\n\u5e94\u8be5\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\u5427\uff01\n\n~~\u81ea\u8ba4\u4e3a\u4ee3\u7801\u8fd8\u662f\u5f88\u7b80\u6d01\u660e\u4e86\u7684~~",
        "postTime": 1572707549,
        "uid": 95246,
        "name": "MoonPie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u9898\u89e3\u51e0\u4e4e\u90fd\u662f\u586b\u8868\u6cd5\uff0c\u53ea\u6709\u4e00\u7bc7\u5237\u8868\u6cd5\u3002\u6211\u518d\u6765\u5199\u4e00\u7bc7$O(n^3)$\u5237\u8868\u9898\u89e3\u3002\n\n\u586b\u8868\u6cd5\u5c31\u662f\u4ece\u540e\u5f80\u524d\u7b97\uff0c\u6bd4\u5982\u7528$f[i]$\u8ba1\u7b97\u51fa$f[i-1]$\u7684\u503c\u3002\n\n\u800c\u5237\u8868\u5c31\u662f\u53cd\u8fc7\u6765\uff0c\u6bd4\u5982\u7528$f[i]$\u8ba1\u7b97\u51fa$f[i+1]$\u7684\u503c\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u5f53\u524d\u8fd9\u4e00\u5217\uff0c\u5b83\u6709\u53ef\u80fd\u5728\u8ba1\u7b97\u540e\u9762\u4efb\u4f55\u4e00\u5217\u65f6\u88ab\u7528\u5230.\n\n![]( https://cdn.luogu.com.cn/upload/pic/71104.png )\n\n\u6bd4\u5982\u5bf9\u4e8e\u9009\u62e9\u65f6\u523b2\u7684\u7b2c\u4e8c\u4e2a\u6570\u5b57\u5f97\u5230\u7684\u5e8f\u5217\uff08\u7ea2\u8272\u65b9\u5757\uff09\uff0c\u5b83\u5c31\u6709\u53ef\u80fd\u4f5c\u4e3a\u7b2c3,4,5,6,7\u5217\u6700\u4f18\u89e3\u7684\u6700\u540e\u4e00\u6b65\uff08\u5373\u5019\u9009\u7b54\u6848\uff09\u3002\u6240\u4ee5\u5728\u7b97\u7b2c\u4e8c\u5217\u65f6\u5c31\u53ef\u4ee5\u628a\u5b83\u4eec\u8003\u8651\u4e00\u904d\u3002\n```\n//f[i]\u8868\u793a\u53ea\u8003\u8651\u524di\u5217\u7684\u6700\u4f18\u89e3\nfor (int y = 1; y <= M; y++)//\u679a\u4e3e\u6bcf\u4e00\u5217\n\tfor (int x = 1; x <= N; x++)//\u679a\u4e3e\u6bcf\u4e00\u6392\n\t{\n\t\tint v = f[y-1] - d0[x];//\u9009(x,y)\u8981d0[x]\u4e2a\u91d1\u5e01\uff0c\u540c\u65f6\u7ee7\u627f\u4e0a\u4e00\u5217\u7684\u7b54\u6848\u3002\n\t\tfor (int k = 0; k < min(P,M-y+1); k++)\n\t\t{//\u4e0d\u80fd\u8d8a\u754c\n\t\t\tint p = x+k>N ? x+k-N : x+k;\n            //\u907f\u514d\u53d6\u6a21\u662f\u6700\u91cd\u8981\u7684\u5361\u5e38\n\t\t\tv += d[p][y+k];\n            //v \u4e3a\u5bf9\u89d2\u7ebf\u4e0a\u4e00\u8def\u7d2f\u8ba1\u7684\u7b54\u6848\n\t\t\tf[y+k] = max(f[y+k], v); \n            //\u7528\u5907\u9009\u7b54\u6848\u5237\u65b0\u4ee5\u540e\u7684f\u503c\u3002\n\t\t}\n\t}\n```\n$O(n^3)$\u770b\u4f3c\u591a\u8fbe1e9\uff0c\u4f46\u662f\u7b2c\u4e09\u5c42\u5faa\u73af\u8dd1\u4e0d\u6ee1\uff0c\u7a0d\u5fae\u5361\u5e38\u5c31\u53ef\u4ee5\u901a\u8fc7\u3002",
        "postTime": 1565450619,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u975e\u5e38\u6709\u96be\u5ea6\u7684\u4e00\u9053DP\u3002\n\n\u770b100\u5206\u6570\u636e\u8303\u56f4: $2\u2264n\u22641000,1\u2264m\u22641000,1\u2264p\u2264m$. \u4e00\u822c\u6765\u8bf4$O(n^3)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u8fc7\u4e0d\u53bb\u7684\uff0c\u4f46\u662f\u6211\u5947\u8ff9\u822c\u7684\u5361\u8fc7\u4e86\uff0c\u6700\u6162\u7684\u4e00\u4e2a\u70b9\u8dd1\u4e86664ms\uff0c\u8fd8\u53ef\u4ee5\u5427\u3002\n\n#### \u7b97\u6cd5\u4e00\uff1a\u52a8\u6001\u89c4\u5212 ####\n\n\u6211\u4eec\u8bbe$dp[i][j][k]$\u4e3a\u76ee\u524d\u662f\u7b2c$i$\u4e2a\u65f6\u523b\uff0c\u76ee\u524d\u5728\u7b2c$j$\u4e2a\u4f4d\u7f6e\uff0c\u5f53\u524d\u7684\u673a\u5668\u4eba\u8fd8\u8981\u8d70$k$\u6b65\u7684\u6700\u5927\u91d1\u5e01\u6570\u3002\n\n\u5982\u679c\u73b0\u5728\u4e0d\u8003\u8651\u6362\u673a\u5668\u4eba\uff0c\u90a3\u4e48\u6211\u4eec\u9a6c\u4e0a\u53ef\u4ee5\u63a8\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$dp[i][j][k]=max(dp[i][j][k],dp[i-1][s(j-1)][k+1]+get(i,j))$\n\n\u5176\u4e2d\uff0c$s(j-1)$\u662f\u6307\u7b2c$j$\u4e2a\u4f4d\u7f6e\u7684\u524d\u9a71\uff08\u4e5f\u5c31\u662f$j$\u662f\u4ece$s(j-1)$\u8d70\u8fc7\u6765\u7684\uff09\u3002\n\n$get$\u51fd\u6570\u8fd4\u56de\u7684\u662f\u7b2c$i$\u4e2a\u65f6\u523b\u7b2c$j$\u53f7\u9053\u8def\u4e0a\u7684\u91d1\u5e01\u6570\u91cf\u3002\n\n\u90a3\u4e48\u73b0\u5728\u8003\u8651\u6362\u673a\u5668\u4eba\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u5728$dp[i-1][j'][0]$\u4e2d\u627e\u4e00\u4e2a\u6700\u5927\u503c\uff08\u8d70\u5b8c\u4e86\uff09\uff0c\u8bb0\u4e3aw\uff0c\u7136\u540e\uff0c\u53ef\u4ee5\u5c06$dp[i][j(1..n)][p]$\u90fd\u8d4b\u503c\u4e3a$w-costcoin[j]$\uff0c\u518d\u5c06$dp[i][j(1..n)][k(0..p-1)]$\u90fd\u8d4b\u503c\u4e3a$w-costcoin[s(j-1)]+get(i,j)$\uff08\u4e00\u5b9a\u8981\u624b\u52a8\u8d4b\u503c\u4e00\u6b65\uff01\uff09\n\n\u7136\u540e\u518d\u8fdb\u884c\u7b2c$1$\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^3)$ \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n^3)$\n\n\u6b64\u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc790%\u7684\u6570\u636e\u3002\n\n\u53c2\u8003\u7a0b\u5e8f\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n,m,p,dp[201][201][201];\nint get_coin[201][201];\nint cost_coin[201];\nint abc(int x)\n{\n    if(x==0) return n;\n    else return x;\n}\nint read()\n{\n    int f=1,w=0; char c=getchar();\n    while((c<'0' || c>'9') && c!='-') c=getchar();\n    if(c=='-') {f=-1;c=getchar();}\n    while(c>='0' && c<='9')\n    {\n        w=w*10+c-48;\n        c=getchar();\n    }\n    return w*f;\n}\nint get(int i,int j)\n{\n    if(j==1) return get_coin[n][i];\n    else return get_coin[j-1][i];\n}\nint main()\n{\n    n=read();m=read();p=read();\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        get_coin[i][j]=read();\n    for(int i=1;i<=n;i++)\n      cost_coin[i]=read();\n    for(int i=1;i<=n;i++)\n      for(int k=0;k<=p;k++)\n        dp[0][i][k]=-cost_coin[i];\n    for(int i=1;i<=m;i++)\n    {\n        int zhi=0xafffffff;\n        for(int j=1;j<=n;j++)\n        {\n            if(dp[i-1][j][0]>zhi)\n              zhi=dp[i-1][j][0];\n        }\n        for(int j=1;j<=n;j++)\n        {\n            for(int k=0;k<=p-1;k++)\n              dp[i][j][k]=zhi-cost_coin[abc(j-1)]+get(i,j);\n            dp[i][j][p]=zhi-cost_coin[abc(j-1)];\n        }\n        for(int j=1;j<=n;j++)\n          for(int k=0;k<=p-1;k++)\n            dp[i][j][k]=max(dp[i][j][k],dp[i-1][abc(j-1)][k+1]+get(i,j));\n    }\n    int ans=0xafffffff;\n    for(int j=1;j<=n;j++)\n      for(int k=0;k<=p;k++)\n        ans=max(ans,dp[m][j][k]);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n#### \u7b97\u6cd5\u4e8c\uff1a\u52a8\u6001\u89c4\u5212 ####\n\n\u5728\u7b97\u6cd5\u4e00\u7684\u57fa\u7840\u4e0a\uff0c\u53d1\u73b0 $dp$ \u6570\u7ec4\u7684\u7b2c\u4e00\u7ef4\u662f\u53ef\u4ee5\u6eda\u52a8\u7684\uff0c\u8fd9\u5c31\u8ba9\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u5230\u4e86$O(n^2)$\uff0c\u4f46\u662f\u6700\u540e2\u4e2a\u70b9\u7684\u65f6\u95f4\u4f9d\u7136\u8d85\u9650\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^3)$ \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n^2)$\n\n\uff08\u6b64\u7b97\u6cd5\u7531\u4e8e\u8981\u6539\u52a8\u7684\u4e1c\u897f\u8fc7\u5c11\uff0c\u6240\u4ee5\u6211\u5c31\u4e0d\u653e\u7a0b\u5e8f\u5566\uff09\n\n#### \u7b97\u6cd5\u4e09\uff1a\u52a8\u6001\u89c4\u5212 ####\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u65b9\u7a0b\u7684\u5b9a\u4e49\u7a0d\u7a0d\u6539\u4e00\u6539\uff0c\u5c06$dp[i][j][k]$\u6539\u4e3a\u7b2c$i$\u4e2a\u65f6\u523b\uff0c\u7b2c$j$\u4e2a\u4f4d\u7f6e\uff0c\u5df2\u7ecf\u8d70\u4e86$k$\u6b65\u7684\u6700\u5927\u91d1\u5e01\u6570\u3002\n\u7531\u4e8e$i$\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e$k$\uff0c\u6240\u4ee5\u5f53$i<k$\u65f6\u53ef\u4ee5\u76f4\u63a5$break$\uff0c\u538b\u7f29\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u5168\u90e8\u6d4b\u8bd5\u70b9\u4e86\uff01\n\n\u6b64\u7b97\u6cd5\u548c\u7b97\u6cd5\u4e00\u76f8\u6bd4\uff0c\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4e0d\u540c\uff1a\n\n1. \u6c42\u6700\u5927\u503c\u4e0d\u4ec5\u4ec5\u626b\u63cf$dp[i-1][j][0]$\uff0c\u800c\u662f$dp[i-1][j][k]$\uff1b\n2. \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u8981\u6539\u4e3a\uff1a\n$dp[i][j][k]=max(dp[i][j][k],dp[i-1][s(j-1)][k-1]+get(i,j))$\uff1b\n3. \u6362\u673a\u5668\u4eba\u7684\u5f00\u59cb\u65f6\uff0c\u53ea\u5c06$dp[i][j][0]$\u548c$dp[i][j][1]$\u8fdb\u884c\u8d4b\u503c\u3002\n\n\u5176\u4ed6\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u6539\u52a8\uff0c\u5927\u5bb6\u5c31\u5728\u4ee3\u7801\u91cc\u9762\u770b\u5427\uff01\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^3)$\u4e0d\u6ee1 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n^2)$\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n,m,p,dp_1[1001][1001],dp[1001][1001];\nint get_coin[1001][1001];\nint cost_coin[1001];\nint zhi=0xafffffff;\ninline int abc(int x)\n{\n    if(x==0) return n;\n    else return x;\n}\ninline int read()\n{\n    int f=1,w=0; char c=getchar();\n    while((c<'0' || c>'9') && c!='-') c=getchar();\n    if(c=='-') {f=-1;c=getchar();}\n    while(c>='0' && c<='9')\n    {\n        w=w*10+c-48;\n        c=getchar();\n    }\n    return w*f;\n}\ninline int get(int i,int j)\n{\n    if(j==1) return get_coin[n][i];\n    else return get_coin[j-1][i];\n}\nint main()\n{\n    n=read();m=read();p=read();\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        get_coin[i][j]=read();\n    for(int i=1;i<=n;i++)\n      cost_coin[i]=read();\n    for(int i=1;i<=n;i++)\n    {\n        dp_1[i][0]=-cost_coin[i];\n        zhi=max(zhi,dp_1[i][0]);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            dp[j][0]=zhi-cost_coin[j];\n            for(int k=1;k<=p;k++)\n            {\n                if(i<k) break;\n                if(k==1)\n                {\n                    dp[j][k]=zhi-cost_coin[abc(j-1)]+get(i,j);\n                    dp[j][k]=max(dp[j][k],dp_1[abc(j-1)][k-1]+get(i,j));\n                }\n                else dp[j][k]=dp_1[abc(j-1)][k-1]+get(i,j);\n            }\n        }\n        zhi=0xafffffff;\n        for(int j=1;j<=n;j++)\n        {\n            for(int k=0;k<=p;k++)\n            {\n                if(i<k) break;\n                dp_1[j][k]=dp[j][k];\n                zhi=max(zhi,dp[j][k]);\n            }\n        }\n    }\n    int ans=0xafffffff;\n    for(int j=1;j<=n;j++)\n      for(int k=0;k<=p;k++)\n        ans=max(ans,dp[j][k]);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n\u5907\u6ce8\uff1a\u6211\u6c42\u6700\u5927\u503c\u662f\u4e00\u8fb9\u8d4b\u503c\u4e00\u8fb9\u6c42\u7684\uff0c\u7a0d\u7a0d\u4f18\u5316\u4e86\u4e00\u4e0b\u3002\n\n\u603b\u7ed3\uff1a\u975e\u5e38\u6709\u96be\u5ea6\u7684DP\uff0c\u662f\u9009\u624b\u4eec\u5728DP\u6210\u957f\u8def\u4e0a\u7684\u5fc5\u5237\u4e4b\u9898\u3002\u8981\u505a\u51fa\u672c\u9898\uff0c\u4e0d\u4ec5\u8981\u6709\u4e30\u5bcc\u7684DP\u5237\u9898\u7ecf\u9a8c\uff0c\u8fd8\u8981\u6709\u7f1c\u5bc6\u7684\u601d\u7ef4\u548c\u5f88\u5f3a\u7684\u5206\u6790\u80fd\u529b\u3002",
        "postTime": 1534925717,
        "uid": 26773,
        "name": "\u5c0f\u6c34\u6ef4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "# \u5355\u8c03\u961f\u5217\u4f18\u5316\u7684DP\n#### **[\u5355\u8c03\u961f\u5217\u6574\u7406\u94fe\u63a5](https://www.luogu.org/blog/qcwlmqy/dan-diao-dui-lie-zheng-li)**\n\u52a8\u6001\u89c4\u5212\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u9047\u5230\u8f6c\u79fb\u7684\u8fc7\u7a0b\u9700\u8981\u548c\u524d\u9762$(L,L+m)$\u7684\u533a\u95f4\u8f6c\u79fb\u7684\u64cd\u4f5c\n- \u82e5\u6bcf\u6b21\u53ea\u9700\u8981$(L,L+m)$\u7684\u6700\u5927\u6216\u6700\u5c0f\u503c\n- $m$\u7684\u5927\u5c0f\u56fa\u5b9a\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6765\u53d6$(L,L+m)$\u7684\u6700\u503c\u6765\u4f18\u5316\u52a8\u6001\u89c4\u5212\n\n## [P1070 \u9053\u8def\u6e38\u620f](https://www.luogu.org/problem/P1070)\n## [\u540c\u7c7b\u9898\u94fe\u63a5](https://www.luogu.org/problem/P2569)\n### \u5206\u6790\n### \u72b6\u6001\n\n\u672c\u9898\u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001\u5f88\u96be\u8bbe\u8ba1\n- **\u56e0\u4e3a\u6bcf\u6b21\u673a\u5668\u4eba\u7528\u5b8c\u540e\uff0c\u80fd\u4ece\u4efb\u610f\u8282\u70b9\u8d2d\u4e70\u673a\u5668\u4eba**\n\u56e0\u6b64\uff0c\u8282\u70b9\u7684\u72b6\u6001\u51e0\u4e4e\u6ca1\u7528\n\n\u6211\u4eec\u53d1\u73b0\u673a\u5668\u4eba\u4e2a\u6570\u4e5f\u4e0d\u662f\u5f88\u91cd\u8981\n\u5f53\u6211\u4eec**\u4ee5\u65f6\u95f4\u4e3a\u72b6\u6001\u65f6\uff0c$dp[i]$\u8868\u793a\u7b2c$i$\u4e2a\u65f6\u523b\uff0c\u673a\u5668\u4eba\u5df2\u7ecf\u8d70\u5b8c\u7684\u6700\u5927\u6536\u76ca**\n\n### \u72b6\u6001\u8f6c\u79fb\n$$dp[i]=max(dp[i],dp[i-1]+w_{1},dp[i-2]+w_{2},\\cdots,dp[i-p+1]+w_{p-1})$$\n\n### \u5355\u8c03\u961f\u5217\u4f18\u5316\n\u6211\u4eec\u7528\u524d\u7f00\u548c\u6765\u8ba1\u7b97\u6536\u76ca\n$t$\u8868\u793a\u65f6\u95f4\uff0c$j$\u8868\u793a\u5730\u70b9\n\n![\u524d\u7f00\u548c\u8ba1\u7b97\u6536\u76ca](https://cdn.luogu.com.cn/upload/pic/66749.png)\n\n\u4ee5\u4e0b\u4e3a\u524d\u7f00\u548c\n\n![\u4ee5\u4e0b\u4e3a\u524d\u7f00\u548c](https://cdn.luogu.com.cn/upload/pic/66750.png)\n- **\u5173\u4e8e\u5bf9\u89d2\u7ebf\u53d6\u524d\u7f00\u548c**\n\n$$w_{j}=-cost[j-k]+sum[t][j]-sum[t-k][j-k]$$\n\n\u5bf9\u4e8e\u56fa\u5b9a$i$\u548c$j$\uff0c\u663e\u7136$-cost[j-k]-sum[t-k][j-k]$\u662f\u8fde\u7eed\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\n\n![](https://cdn.luogu.com.cn/upload/pic/66751.png)\n- **\u6211\u4eec\u663e\u7136\u53d1\u73b0\uff0c\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u7b26\u5408$sum[t-k][j-k]$**\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u4e0a\u7684\u961f\u5217\uff0c\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20$t-j$\u4e3a\u5b9a\u503c\n\n![](https://cdn.luogu.com.cn/upload/pic/66752.png)\n\n\u6211\u4eec\u4ee5$t-j$\u4e3a\u961f\u5217$id$\u7684\u6807\u53f7\uff0c\u7ef4\u62a4\u961f\u5217\n\n- **\u6211\u4eec\u6bcf\u4e2a\u65f6\u95f4\u70b9\u5c06\u6bcf\u4e2a$j$\u5bf9\u5e94\u7684$dp[t-1]-cost[j]-sum[t-1][j-1]$\u52a0\u5165\u76f8\u5e94\u7684\u961f\u5217**\n- **\u5e76\u4e14\u7ef4\u62a4\u6bcf\u4e2a\u961f\u5217\u7684\u957f\u5ea6$\\leq p$**\n```cpp\nvoid push(int t, int j) {\t//\u5c06\u70b9\u52a0\u5165\u961f\u5217\n\tint id = t-j+1000;\n\tint now = dp[t - 1] - cost[j] - sum[t - 1][j - 1];\n\twhile (tail[id] >= head[id] && stack[id][tail[id]].first <= now)tail[id]--;\n\tstack[id][++tail[id]] = pii(now, t);\n}\nvoid getfront(int t,int id) {\t//\u7ef4\u62a4\u961f\u5217\u7684\u957f\u5ea6\n\twhile (tail[id] >= head[id] && stack[id][head[id]].second < t - p + 1)head[id]++;\n\tans[id] = stack[id][head[id]];\n}\nvoid Queue(int t) {\n\tfor (int j = 1; j <= n; j++)\n\t\tpush(t, j);\n\tfor(int j=1-m+1000; j<=n-1+1000; j++)\n\t\tgetfront(t,j);\n}\n```\n### \u72b6\u6001\u8f6c\u79fb\n$$dp[t]=sum[t][t-j+1000]+ans[t-j+1000]$$\n```cpp\nfor (int i = 1; i <= m; i++) {\n\t\tQueue(i);\n\t\tfor (int j = 1 - m + th; j <= n - 1 + th; j++) {\n\t\t\tif (ans[j].second==0 || ans[j].second < i - p+1)continue;\n\t\t\tdp[i] = max(dp[i], ans[j].first + sum[i][i + j - th]);\n\t\t}\n\t}\n```\n## AC\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ntypedef pair<int, int> pii;\nconst int maxn = 1005;\nconst int th = 1000;\nconst int inf = 0X3f3f3f3f;\nint a[maxn][maxn], sum[maxn][maxn << 1], cost[maxn];\nint dp[maxn];\nint n, m, p;\nvoid Read() {\n\tint x;\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tscanf(\"%d\",&a[j][i]);\n\tfor (int i = 1; i <= m; i++) {\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tsum[i][j] = sum[i - 1][j - 1] + a[i][j];\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tsum[i][j + n] = sum[i - 1][j + n - 1] + a[i][j];\n\t}\n\tfor (int i = 1; i <= n; i++)scanf(\"%d\",cost[i]);\n}\ninline int getid(int t, int j) {\n\treturn j - t + th;\n}\npii stack[maxn << 1][maxn], ans[maxn << 1];\nint head[maxn << 1], tail[maxn << 1];\nvoid push(int t, int j) {\n\tint id = getid(t, j);\n\tint now = dp[t - 1] - cost[j] - sum[t - 1][j - 1];\n\twhile (tail[id] >= head[id] && stack[id][tail[id]].first <= now)tail[id]--;\n\tstack[id][++tail[id]] = pii(now, t);\n}\nvoid getfront(int t,int id) {\n\twhile (tail[id] >= head[id] && stack[id][head[id]].second < t - p + 1)head[id]++;\n\tans[id] = stack[id][head[id]];\n}\nvoid Queue(int t) {\n\tfor (int j = 1; j <= n; j++)\n\t\tpush(t, j);\n\tfor(int j=1-m+th; j<=n-1+th; j++)\n\t\tgetfront(t,j);\n}\nint main() {\n\tRead();\n\tfill(dp, dp + 1 + m, -inf);\n\tdp[0] = 0;\n\tfor (int i = 0; i <= th<<1; i++)head[i] = 1;\n\tfor (int i = 1; i <= m; i++) {\n\t\tQueue(i);\n\t\tfor (int j = 1 - m + th; j <= n - 1 + th; j++) {\n\t\t\tif (ans[j].second==0 || ans[j].second < i - p+1)continue;\n\t\t\tdp[i] = max(dp[i], ans[j].first + sum[i][i + j - th]);\n\t\t}\n\t}\n\tprintf(\"%d\\n\", dp[m]);\n}\n```",
        "postTime": 1564401612,
        "uid": 163242,
        "name": "qcwlmqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "## \u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u5f88\u5de7\u7684\u60f3\u6cd5\n\n\u975e\u5e38\u597d\u7406\u89e3\uff0c\u4e5f\u975e\u5e38\u5999\n\n\u8fd9\u9053\u9898\u7684$O(n^3)$dp\u5f88\u663e\u7136\uff0c\u5982\u679c\u4e0d\u4f1a\u7684\u8bdd\u5148\u770b\u5176\u5b83\u9898\u89e3\n\n\u800c\u5982\u4f55\u4f18\u5316\u5230$O(n^2)$\u6216$O(n^2logn)$\u8fc7\u6389\u672c\u9898\u5c31\u6709\u610f\u601d\u4e86\n\n\u9996\u5148\u89c2\u5bdf\u5230\u8fd9\u4e2a\u673a\u5668\u4eba\u5728\u52a8\u5c31\u5f88\u70e6\u4eba\uff0c\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u628a\u5b83\u5b9a\u4f4f\u3002\n\n\u90a3\u548b\u6574\u554a\uff0c**\u4f17\u6240\u5468\u77e5\u8fd0\u52a8\u662f\u76f8\u5bf9\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba9\u5de5\u5382\u7684\u4ee3\u4ef7\uff0c\u548c\u91d1\u5e01\u968f\u7740\u65f6\u95f4\u9006\u65f6\u9488\u65cb\u8f6c\uff0c\u8fd9\u6837\u5c31\u7b49\u4ef7\u4e8e\u673a\u5668\u4eba\u987a\u65f6\u9488\u65cb\u8f6c**\n\n\u90a3\u4e48\u663e\u7136\uff0c\u73b0\u5728\u7b2c$i$\u4e2a\u5de5\u5382\u7b2c$j$\u65f6\u523b\u7684\u4ee3\u4ef7\u662f$ c[(i+j+2)\\%n\\ +1]$\uff0c\u800c\u7b2c$i$\u6761\u8def\u4e0a\u7b2c$j$\u65f6\u523b\u7684\u91d1\u5e01\u6570\u662f$ a[(i+j+2)\\%n\\ +1][j] $\uff0c\u5176\u4e2d$c[i]$\u4e3a\u539f\u8f93\u5165\u4e2d\u7b2c$i$\u4e2a\u5de5\u5382\u7684\u4ee3\u4ef7\uff0c$a[i][j]$\u4e3a\u539f\u8f93\u5165\u4e2d\u7b2c$i$\u6761\u8def\u7b2c$j$\u5355\u4f4d\u65f6\u95f4\u7684\u91d1\u5e01\u6570\n\n\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\n\n**\u6bcf\u6b21\u82b1\u4e00\u5b9a\u7684\u4ee3\u4ef7\u5728\u4e00\u4e2a\u5730\u65b9\u653e\u673a\u5668\u4eba\uff0c\u6700\u591a\u7ef4\u6301$p$\u5355\u4f4d\u65f6\u95f4\uff0c\u6bcf\u5355\u4f4d\u65f6\u95f4\u673a\u5668\u4eba\u90fd\u4f1a\u6361\u8d77\u81ea\u5df1\u53f3\u8fb9\u9053\u8def\u4e0a\u7684\u91d1\u5e01\uff0c\u673a\u5668\u4eba\u4e0d\u52a8**\n\n\u90a3\u4e48\u6211\u4eec\u6734\u7d20\u7684\u5217\u4e00\u4e2adp\u65b9\u7a0b\n$$ dp[i]=\\max_{j=1}^{n}\\max_{k= max(0,i-p)}^{i-1} dp[k]+pfx[j][i]-pfx[j][k]-cost[j][k+1]$$\n\n$dp[i]$\u4ee3\u8868$i$\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u6700\u5927\u4ef7\u503c\n\n\u5176\u4e2d$cost[i][j]$\u4ee3\u8868\u7b2c$i$\u4e2a\u5de5\u5382\u7b2c$j$\u5355\u4f4d\u65f6\u95f4\u7684\u4ee3\u4ef7\uff08\u6ce8\u610f\u6211\u4eec\u8f6c\u52a8\u4e86\u5b83\uff0c\u6240\u4ee5\u867d\u7136\u539f\u9898\u4e2d\u4e0d\u53d8\u8fd9\u91cc\u4e5f\u662f\u53d8\u5316\u7684\uff09   \n$pfx[i][j]$\u4ee3\u8868$\\sum_{k=1}^{j} val[i][k]$\uff0c$val[i][j]$\u4ee3\u8868\u7b2c$i$\u6761\u8def\u7b2c$j$\u79d2\u7684\u91d1\u5e01\u6570\n\n### \u6ce8\u610f\u4e0a\u8ff0\u7684\u90fd\u662f\u8f6c\u5316\u540e\u7684\u503c\n\n**\u6240\u4ee5dp\u65b9\u7a0b\u7684\u610f\u4e49\u662f\uff1a\u679a\u4e3e\u6240\u4ee5\u53ef\u80fd\u7684\u4e0a\u6b21\u9009\u7684\u5de5\u5382\u548c\u65f6\u95f4\uff0c\u7136\u540e\u53d6max**\n\n\u663e\u7136\u8fd9\u4e2adp\u662f$O(n^3)$\u7684\n\n\u90a3\u4e48\u5982\u4f55\u4f18\u5316\uff1f\n\n\u6211\u4eec\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u53d8\u5f62\n\n$$ dp[i]=\\max_{j=1}^{n}\\max_{k= max(0,i-p)}^{i-1} dp[k]+pfx[j][i]-pfx[j][k]-cost[j][k+1]$$\n$$ =\\max_{j=1}^{n} pfx[j][i]+\\max_{k= max(0,i-p)}^{i-1} dp[k]-pfx[j][k]-cost[j][k+1]$$\n\u8bbe$g[j][k]=dp[k]-pfx[j][k]-cost[j][k+1]$\uff0c\u5219\n$$ =\\max_{j=1}^{n} pfx[j][i]+\\max_{k= max(0,i-p)}^{i-1} g[j][k]$$\n\u5176\u4e2d$\\max_{k= max(0,i-p)}^{i-1} g[j][k]$\uff0c\u53ef\u4ee5\u5f00$n$\u4e2a\u4f18\u5148\u961f\u5217/\u5355\u8c03\u961f\u5217\uff0c\u7136\u540e\u53c2\u89c1[\u6ed1\u52a8\u7a97\u53e3\u768450\u5206\u6216100\u5206\u89e3\u6cd5](https://www.luogu.org/problemnew/show/P1886)\uff0c\u6765\u5b9e\u73b0\u5355\u6b21\u8be2\u95ee$O(1)$\u6216$O(logn)$\uff0c\u5747\u53ef\u901a\u8fc7\u6b64\u9898\n\n\u6ce8\u610f\u8fd9\u91cc\u662f\u4e00\u8fb9\u6c42\u503c\u4e00\u8fb9\u8be2\u95ee\u6700\u5927\u503c\u7684\uff0c\u6545\u4e0d\u80fd\u7528st\u8868\u3002\n\n\u4e2a\u4eba\u8ba4\u4e3a\u4f18\u5148\u961f\u5217\u66f4\u597d\u5199\uff0c\u5982\u679c\u65f6\u95f4\u590d\u6742\u5ea6\u4ee5\u53ca\u5e38\u6570\u5141\u8bb8\u7684\u8bdd\u5c3d\u91cf\u5199\u4f18\u5148\u961f\u5217\uff0c\u51cf\u5c11\u5199\u6302\u7684\u6982\u7387\n\n**\u6ce8\u610f\u7b54\u6848\u6709\u53ef\u80fd\u6709\u8d1f\u6570\uff0cdp\u521d\u59cb\u503c\u9700\u8bbe\u4e3a0xc0c0c0c0\uff08\u7ea6\u7b49\u4e8e-1e9\uff09**\n\n\u53c2\u8003\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn=1005;\n\nint n,m,p;\nint a[maxn][maxn],r[maxn][maxn];\nint c[maxn];\nint pfx[maxn][maxn];\n\npriority_queue<pair<int,int> > q[maxn];\n\nbool operator<(pair<int,int> a,pair<int,int> b){\n    if(a.first==b.first) return a.second>b.second;\n    return a.first<b.first;\n}\nint main(){\n    ios::sync_with_stdio(0);\n    cin>>n>>m>>p;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            cin>>a[i][j];\n        }\n    }\n    for(int i=1;i<=m;i++){\n        for(int j=1;j<=n;j++){\n            r[j][i]=a[(j+i-2)%n+1][i];\n        }\n    }\n    for(int i=1;i<=n;i++)cin>>c[i];\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++) pfx[i][j]=pfx[i][j-1]+r[i][j];\n    }\n    for(int i=1;i<=n;i++){\n        q[i].push(make_pair(-c[(i-1)%n+1],0));\n    }\n    int ans=0xc0c0c0c0;\n    for(int i=1;i<=m;i++){\n        int mx=0xc0c0c0c0;\n        for(int j=1;j<=n;j++){\n            int cur=pfx[j][i];\n            while(q[j].top().second<i-p) q[j].pop();\n            cur+=q[j].top().first;\n            mx=max(mx,cur);\n        }\n        for(int j=1;j<=n;j++){\n            q[j].push(make_pair(mx-pfx[j][i]-c[(j+i-1)%n+1],i));\n        }\n        ans=max(ans,mx);\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1563544191,
        "uid": 62598,
        "name": "dengyaotriangle",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "# bfs\u80fd\u8fc7\u7684\u9898\u4e3a\u4ec0\u4e48\u8981dp\uff1f\n\n\u8fd9\u662f\u4e00\u9053\u5f88\u5178\u578b\u7684dp\uff0c\u53ef\u662f\u5f53\u6211\u7b2c\u4e00\u773c\u770b\u8fc7\u53bb\u7684\u65f6\u5019\uff0c\u4e0d\u77e5\u4e3a\u4ec0\u4e48\uff0c\u89c9\u5f97\u50cfbfs\u7684\u9898\u3002\n\n\u4e8e\u662f\uff0c\u6211\u5c31~~\u62b1\u7740\u4eba\u6709\u591a\u5927\u80c6\u5730\u6709\u591a\u5927\u4ea7\u7684\u5fc3\u6001~~\u6253\u51fa\u4e86bfs\u3002\n\n\u5176\u5b9e\u601d\u8def\u5f88\u7b80\u5355\uff1a\u961f\u5217\u91cc\u5b58\u7684\u662f\u5f53\u524d\u65f6\u95f4\u70b9\uff0c\u7136\u540e\u62ff\u51fa\u6765\u679a\u4e3e\u4e0b\u4e00\u6b21\u5728\u54ea\u4e2a\u5de5\u5382\u9020\u673a\u5668\u4eba\uff0c\u8d70\u591a\u5c11\u6b65\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u7c7b\u4f3c\u4e8eSPFA\u7684dis\u548cinqueue\u6765\u8bb0\u5f55\u5c31\u53ef\u4ee5\u5566\u3002\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//\u56e0\u4e3a\u662f\u6a21\u62df\u8d5b\u7684\u9898\uff0c\u6240\u4ee5\u4f1a\u6709\u4e00\u4e9binline\u3001register\u3001\u5feb\u8bfb\u4ec0\u4e48\u4e4b\u7c7b\u7684\n#include<cstdio>\n#include<queue>\n#include<cstring>\n \n#define N 1001\n#define INF 0x7fffffff\n \nusing namespace std;\n \nint n,m,p,w[N][N],mon[N],dis[N];\nbool inq[N];\n \ninline int read() {//\u5feb\u8bfb\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {\n        if(ch=='-') {\n            f=-1;\n        }\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') {\n        x=(x<<1)+(x<<3)+(ch^'0');\n        ch=getchar();\n    }\n    return x*f;\n}\n \nqueue<int>q;\n \nint bfs() {\n    for(int i=1;i<=m;i++){\n        dis[i]=-INF;//\u521d\u59cb\u5316\n    }\n    q.push(0);//\u5f00\u59cb\u65f6\u95f4\u70b9\u4e3a0\n    while(!q.empty()){\n        int now=q.front();\n        q.pop();\n        inq[now]=false;\n        for(register int i=1; i<=n; i++) {//\u679a\u4e3e\u8d77\u59cb\u70b9\n            int sum2=0;//\u8bb0\u5f55\u80fd\u83b7\u5f97\u7684\u91d1\u5e01\n            for(register int t=1,u=i; t<=p&&now+t<=m; t++,u++) {//\u679a\u4e3e\u8d70\u51e0\u6b65\n                if(u>n) {//\u6ce8\u610f\u6709\u73af\n                    u-=n;\n                }\n                sum2+=w[u][now+t];//\u66f4\u65b0sum2\n                if(dis[now]+sum2-mon[i]>dis[now+t]){//\u5982\u679c\u6709\u66f4\u4f18\u65b9\u6848\n                    dis[now+t]=dis[now]+sum2-mon[i];\n                    if(!inq[now+t]){//\u7c7b\u4f3cSPFA\u7684\u5224\u65adinqueue\n                        q.push(now+t);\n                        inq[now+t]=true;\n                    }\n                }\n            }\n        }\n    }\n    return dis[m];\n}\n \nint main() {\n//  freopen(\"game.in\",\"r\",stdin);\n//  freopen(\"game.out\",\"w\",stdout);\n    n=read();\n    m=read();\n    p=read();\n    for(register int i=1; i<=n; i++) {\n        for(register int j=1; j<=m; j++) {\n            w[i][j]=read();\n        }\n    }\n    for(register int i=1; i<=n; i++) {\n        mon[i]=read();\n    }\n    printf(\"%d\\n\",bfs());\n    return 0;\n}\n/*\n2 3 2\n1 2 3\n2 3 4\n1 2\n*/\n\n```",
        "postTime": 1541234502,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u503c\u5f97\u5199\u4e00\u7bc7\u9898\u89e3\u6765\u8bb0\u5f55\u4e00\u4e0b\uff1a\n\n\u9996\u5148\u770b\u9898\uff0c\u611f\u89c9\u9898\u7279\u522b\u7684\u957f\u3002\u4f46\u662f\u53ea\u8981\u4ed4\u7ec6\u7684\u601d\u8003\u4e00\u4e0b\uff0c\u53d1\u73b0\u9898\u76ee\u5e76\u4e0d\u96be\u7406\u89e3\u3002\n\n\u628a\u6574\u4e2a\u95ee\u9898\u8f6c\u5316\u4e4b\u540e\uff0c\u9898\u76ee\u5c31\u53d8\u5f97\u7b80\u5355\u4e86\u4e0d\u5c11\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbe\u8ba1\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\n\n\u6211\u4eec\u8bbedp[i]\u8868\u793a\u524di\u7684\u65f6\u95f4\u80fd\u6536\u96c6\u5230\u7684\u6700\u591a\u91d1\u5e01\u3002\u90a3\u4e48\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u8f93\u51fadp[m];\n\u90a3\u6211\u4eec\u600e\u4e48\u8f6c\u79fb\u5462\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5f71\u54cd\u7684\u56e0\u7d20\u6709n,m,p;\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651n^3\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\n#### \u6211\u4eec\u53ef\u4ee5\u679a\u4e3en,m,p;\n\u5148\u679a\u4e3e\u65f6\u95f4m\uff0c\u7136\u540e\u679a\u4e3e\u5728m\u7684\u8fd9\u4e2a\u65f6\u95f4\u6211\u4eec\u5f53\u524d\u5728\u54ea\u4e2a\u70b9\u3002\u7136\u540e\u518d\u679a\u4e3ek\u8868\u793a\u5728\u5f53\u524d\u7684\u57fa\u7840\u4e0a\u6211\u4eec\u8981\u5411\u524d\u8d70\u7684\u8ddd\u79bb\u3002\u5e76\u4e14\u6211\u4eec\u4fdd\u8bc1\u6211\u4eec\u5728\u5f53\u524d\u7684\u8fd9\u4e2a\u4ed3\u5e93\u8d2d\u4e70\u673a\u5668\u4eba\u3002\n\n\u5177\u4f53\u8fc7\u7a0b\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint a[1005][1005];\nint money[1005];\nint dp[2005];\nint main()\n{\n\tint n,m,p;\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&money[i]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tdp[i]=-1e9;\n\t}//\u7531\u4e8e\u53ef\u80fd\u6709\u8d1f\u6570\uff0c\u5148\u8d4b\u503c\u6210-1e9 \n\tfor(int i=1;i<=m;i++)//\u679a\u4e3e\u65f6\u95f4\u3002 \n\t{\n\t\tfor(int j=1;j<=n;j++)//\u679a\u4e3e\u5f53\u524d\u5230\u8fbe\u4e86\u90a3\u4e2a\u70b9\u3002 \n\t\t{\n\t\t\tint ans=dp[i-1]-money[j];//ans\u5148\u8bb0\u5f55\u7684\u662f\u4ece\u5f53\u524d\u5f00\u59cb\u4e70\u7684\u521d\u59cb\u503c\u3002 \n\t\t\tfor(int k=0;k<p && k+i<=m;k++)\n\t\t\t//k\u4ece0\u5230p-1\u679a\u4e3e\uff0c\u540c\u65f6\u8981\u4fdd\u8bc1\u603b\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7m\u7684\u9650\u5236\u3002 \n\t\t\t{\n\t\t\t\tint t=(j+k)>n?((j+k)%n):(j+k);//\u628ak\u65f6\u95f4\u540e\u5230\u8fbe\u54ea\u4e2a\u4f4d\u7f6e\u5904\u7406\u51fa\u6765\u3002\n\t\t\t\t//\u5f53\u524d\u7684ans\u4e0d\u65ad\u66f4\u65b0\u3002\u8fd9\u6837\u8fd8\u80fd\u4fdd\u8bc1ans\u4e0d\u65ad\u66f4\u65b0\u3002 \n\t\t\t\tans=ans+a[t][i+k];\n\t\t\t\tdp[i+k]=max(dp[i+k],ans);\n\t\t\t\t//\u66f4\u65b0\u7b54\u6848\u3002 \n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dp[m]);\n\treturn 0;\n}\n```\n\n\n\u4ece\u800c\u66f4\u65b0\u7b54\u6848\u3002\u4f46\u8fd9\u5176\u4e2d\u6709\u5f88\u591a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u3001",
        "postTime": 1572098354,
        "uid": 114514,
        "name": "zzr8178541919",
        "ccfLevel": 7,
        "title": "\u9053\u8def\u6e38\u620f"
    },
    {
        "content": "\u4eca\u5929\u6211\u5e26\u6765\u4e00\u4e2a\u66f4\u7b80\u6d01\u7684\u4f18\u5148\u961f\u5217\u7684\u9898\u89e3\uff0c\u697c\u4e0a\u7684\u6709\u4e48\u53ea\u8bf4\u4e86\u9898\u89e3\u8981\u4e48\u4ee3\u7801\u96be\u770b\u81f3\u6781\uff0c\u6211\u4eca\u5929\u5c31\u6765\u4e00\u4e2a\u66f4\u63a5\u8fd1\u5927\u4f17\u7684\u5199\u6cd5;\n\n\u601d\u8def:1.\u8f6c\u79fb\u5927\u5bb6\u90fd\u61c2\u5c31\u662f\u697c\u4e0a\u6240\u8bf4\u7684\uff1b\n\n2.\u56e0\u4e3a\u4ece\u7b2ci\u4e2a\u5730\u65b9\u8d70j\u6b65\u4e0e\u7b2ci\u4e2a\u5730\u65b9\u8d70j+1\u6b65\u7684\u552f\u4e00\u533a\u522b\u5c31\u662f\u591a\u4e86\u4e00\u6bb5\u8def\u5f84\u7684\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u6765\u7ef4\u62a4(\u5148\u4e0d\u8003\u8651\u957f\u5ea6\u5927\u4e8ep\u7684\u60c5\u51b5)\uff1b\n\n3.\u7b2cf\u4e2a\u65f6\u523b\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u8f6c\u79fb\u548c\u7b2cf+1\u4e2a\u65f6\u523b\u7b2ci+1\u4e2a\u4f4d\u7f6e\u7684\u8f6c\u79fb\u7684\u533a\u522b\u53ea\u6709\u4e24\u4e2a\u5206\u522b\u662f\u5934\u548c\u5c3e\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u4e00\u753b\uff0c\u4e00\u4e0b\u5c31\u660e\u767d\u4e86\uff1b\n\n\u8fc7\u7a0b\uff1a\u7528pre\u6765\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u4f18\u5148\u961f\u5217\uff0c\u7136\u540e\u4e0d\u65ad\u4ece\u4f18\u5148\u961f\u5217\u4e2d\u53d6\u51fa\uff0c\u4e0d\u6ee1\u8db3\u5219pop\uff0c\u6ee1\u8db3\u5219\u66f4\u65b0\u503c,\u66f4\u65b0\u5b8c\u540e\u518d\u5bf9\u5e94\u5730push\uff1b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct node{\n    int va,wz,bs,gj;//va:\u5728\u4f18\u5148\u961f\u5217\u4e2d\u6bd4\u8f83\u5927\u5c0f\u6240\u7528\u65e0\u5b9e\u9645\u610f\u4e49;wz:\u5c31\u662f\u4f4d\u7f6e;bs:\u5c31\u662f\u6b65\u6570;gj;\u5e94\u8be5\u51cf\u53bb\u591a\u5c11;\n    bool operator<(node a)const\n    {\n        return a.va>va;\n    }\n};\npriority_queue<node>q[1100];//\u4f18\u5148\u961f\u5217(\u5e9f\u8bdd);\nint va[1100][1100];//\u6bcf\u4e2a\u65f6\u523b\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\nint maxx[1100];//\u6bcf\u79cd\u65f6\u523b\u5bf9\u5e94\u5730\u6700\u503c\nint fig[1100];//\u8bb0\u5f55\u4ece\u4e00\u5f00\u59cb\u5230\u6700\u540e\u6240\u6709\u503c\uff1a\u7528\u4e8e\u8ba1\u7b97\u503c;\nint pre[1100];//\u89c1\u9898\u89e3\nint hf[1100];//\u6bcf\u4e2a\u5de5\u5382\u7684\u82b1\u8d39\nint n,m,p;\nint main()\n{\n      scanf(\"%d%d%d\",&n,&m,&p);\n      memset(maxx,128,sizeof(maxx));\n      maxx[0]=0;\n      for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n      scanf(\"%d\",&va[i][j]);\n      for(int i=1;i<=n;i++)\n      scanf(\"%d\",&hf[i]);\n      for(int i=1;i<=n;i++)\n      {\n          node cf;\n          cf.wz=i-1;cf.bs=0;cf.gj=0;\n          if(i==1) cf.wz=n,cf.va=-hf[n];\n          else cf.va=-hf[i-1];\n          fig[i]=va[cf.wz][1];\n        q[i].push(cf);\n```\n}//\u7279\u6b8a\u5904\u7406\u5f00\u59cb\n```cpp\n      for(int i=1;i<=m;i++)\n      {\n          for(int o=1;o<=n;o++)\n          {\n              int table=(o+i-1)%n;\n              if(table==0) table=n; \n              pre[table]=o;\n```\n}//\u8ba1\u7b97\u4f4d\u7f6e\u5bf9\u5e94\u7684\u4f18\u5148\u961f\u5217\uff1b\n```cpp\n          for(int j=1;j<=n;j++)\n          {\n            node kk=q[pre[j]].top();\n          while(i-kk.bs>p)\n          {\n              q[pre[j]].pop();\n              kk=q[pre[j]].top();\n```\n}//\u627e\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u7684\u4f4d\u7f6e\nmaxx[i]=max(maxx[i],maxx[kk.bs]+fig[pre[j]]+kk.gj-hf[kk.wz]);//\u7b97\u503c\n\n```cpp\n          }\n          if(i==m) break;//\u4e00\u53e5\u5e9f\u8bdd\n          for(int k=1;k<=n;k++)\n          {\n          node dd;\n          dd.wz=k;dd.va=maxx[i]-fig[pre[k]]-hf[k];dd.bs=i;dd.gj=-fig[pre[k]];\n          q[pre[k]].push(dd);\n          fig[pre[k]]+=va[k][i+1];\n```\n}//\u8fdb\u884c\u5904\u7406\n      } \n\n       printf(\"%d\",maxx[m]);\n\n      return 0;\n\n}",
        "postTime": 1507290320,
        "uid": 37146,
        "name": "mochenbo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u4fee\u6b63\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\u638921\u4e2a\u70b9\u4e86\n\n\u601d\u8def\uff1a\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e00\u79d2\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u57281~n\u4e2d\u4efb\u610f\u4e00\u4e2a\u70b9\u4e0a\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u5904\u7406\u51fa\u524d\u51e0\u79d2\u7684\u6700\u4f18\u503c\uff0c\u5c31\u53ef\u4ee5\u9012\u63a8\u4e0b\u4e00\u79d2\u7684\u6700\u4f18\u503c\u4e86\n\n\u539f\u7406\u662f\u6211\u4eec\u53ef\u4ee5\u7531j-p~j-1\u4e2d\u4efb\u610f\u4e00\u4e2a\u70b9\u7ecf\u4e0d\u540c\u7684\u6b65\u6570\u6765\u5230\n\nj\u70b9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b2ci\u79d2\u7684j\u53f7\u70b9\uff0c\u6211\u4eec\u8981\u627e\u4e00\u4e2a\u8d77\u70b9x\uff0c\u4f7f\u5f97\u4ecex\n\n\u51fa\u53d1\uff0c\u8d70\u4e00\u4e9b\u6b65\u5230\u8fbej\u6700\u4f18\uff0c\u800cx\u7684\u53d6\u503c\u8303\u56f4\u5c31\u662f[j-p,j-1];\n\n\u6700\u540e\u6ce8\u610f\u4e00\u4e0b\u521d\u59cb\u5316\u5c31\u597d\u4e86\u3002\n\n\u5f53\u7136\uff0c\u8fd9\u6837\u505a\u7684\u65b9\u6cd5\u662fn^3,\u6211\u611f\u89c9\u5bf9\u4e8en<=1000\u8fd9\u6837\u7684\u6570\u636e\u8303\u56f4\n\n\u7406\u5e94\u662f\u8fc7\u4e0d\u4e86\u7684\uff0c\u7136\u800c\u5b83\u8fc7\u4e86\u3002\u3002\u3002qwq\u6570\u636e\u6c34\u5427\uff1b\n\n\u5176\u5b9e\u7ec6\u5fc3\u7684\u4eba\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ef\u4ee5\u7528\u4e00\u4e0b\u6570\u636e\u7ed3\u6784\u6765\u4f18\u5316\u4e00\u4e0b\u7684\u3002\u3002\u30022333\n\n\n------------\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int Inf=1000000001;\nint n,m,p;\nint A[1001];\nint gold[1001];\nint road[1001][1001];\nvoid dp()\n{\n    for(int i=1;i<=m;i++)//\u56e0\u4e3a\u8981\u6c42\u6700\u5927\u503c\uff0c\u6240\u4ee5\u521d\u59cb\u5316\u6700\u5c0f \n        A[i]=-Inf;\n    A[0]=0;//0\u65f6\u523b\u81ea\u7136\u6361\u5230\u7684\u91d1\u5e01\u4e3a\u96f6 \n    for(int i=1;i<=m;i++)//\u679a\u4e3e\u65f6\u95f4 \n    {\n        for(int j=1;j<=n;j++)//\u679a\u4e3e\u70b9 \n        {\n            int last=j-1;//\u4e0a\u4e00\u4e2a\u70b9 \n            if(last==0) last=n;//\u73af\u7684\u6027\u8d28 \n            int Vs=road[last][i];//\u4ecelast\u8d70\u5230j\u6361\u7684\u91d1\u5e01\u6570 \n            for(int k=1;k<=p;k++)//\u679a\u4e3ex \n            {\n                if(i-k<0) continue;\n                A[i]=max(A[i],A[i-k]-gold[last]+Vs);//\u8f6c\u79fb \n                last--;//\u518d\u5f80\u524d\u4e00\u4e2a\u70b9 \n                if(last==0) last=n;\n                Vs+=road[last][i-k]; //\u7d2f\u52a0\u8d77\u6765       \n            }\n            //\u5f88\u663e\u7136\u4e0a\u9762\u8fd9\u4e2a\u5faa\u73af\u5728\u6c42\u533a\u95f4\u6700\u5927\u503c 233 \u662f\u4e0d\u662f\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\u554a \n        }\n    }\n}\nint main()\n{\n    //\u7a33\u7a33\u7684\u8bfb\u5165\u6570\u636e\n    scanf(\"%d%d%d\",&n,&m,&p); \n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&road[i][j]);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&gold[i]);\n    }\n    dp();\n    printf(\"%d\\n\",A[m]);\n    return 0;\n}\n```\n\n\n------------\n\nrp++  \u4f18\u5316\u4ee3\u7801\u672c\u4eba\u6ca1\u5199qwq\u5927\u5bb6\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u3002 \u8fd9\u4e2a\u4ee3\u78011400+ms\u975e\u5e38\u7684\u6162\u3002\u3002\u4f46\u662f\u52a0\u4e86\u4f18\u5316\u8c8c\u4f3c\u5c31100-ms\u4e86\n",
        "postTime": 1503929827,
        "uid": 21596,
        "name": "Forever\u4e36CIL",
        "ccfLevel": 6,
        "title": "P1070 \u9053\u8def\u6e38\u620f"
    },
    {
        "content": "## [\u6c38\u9060\u306e\u8a18\u61b6 ~ Precious Memories]\u65bd\u5de5D4  \n\n\n------------\n\n2020.3.6  \n  \n## P1070 \u9053\u8def\u6e38\u620f  \n  \nNoip2009 T4  \n  \n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1070)  \n  \n\u9898\u76ee\u6bd4\u8f83\u957f\uff0c\u4f46\u662f\u8bf4\u7684\u4e8b\u60c5\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u6c42\u4e00\u4e2a\u6536\u70b9\u65b9\u6848\uff0c\u5e76\u4f7f\u6536\u7387\u6700\u5927  \n\u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u9053\u52a8\u89c4\uff0c\u90a3\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e0b\u9898\u76ee\u4e2d\u7684\u4e0d\u5b9a\u91cf  \n#### 1. \u4ece\u54ea\u4e2a\u5de5\u5382\u5f00\u59cb\u8d70(n\u79cd\u9009\u62e9\uff0c**1e3**)  \n#### 2. \u53ef\u4ee5\u6536\u70b9\u7684\u603b\u65f6\u95f4(m\u4e2a\u5355\u4f4d\u5185\uff0c**1e3**)  \n \u7136\u540e\u53bb\u8003\u8651\u6211\u4eec\u8981\u53bb\u5e72\u7684\u4e8b\u60c5  \n#### 3. \u8d70\u8def\u6536\u70b9(p\u79cd\u9009\u62e9, **1e3**\uff09      \n\n\u7efc\u5408123\uff0c\u6211\u4eec\u603b\u5171\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f**O(n^3)**  \n\u5176\u4e2dn = 1e3\uff0c\u5e94\u8be5\u662f\u53ef\u4ee5\u8fc7\u7684  \n\u6211\u4eec\u5148\u5199\u5faa\u73af\uff0c\u7136\u540e\u518d\u63a8\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f0f  \n\u4ee3\u7801\u4e2d\u7684\u4e3b\u4f53\u5e94\u8be5\u662f\u957f\u8fd9\u6837:  \n```cpp\nfor (int i = 1; i <= m; ++i) { \n\tfor (int j = 1; j <= n; ++j) { \n\t\tfor (int k = 0; (i + k <= m) && (k < p); ++k) { \n\t\t\t//...\n\t\t}\n\t}\n}\n```\n  \n#### \u6700\u5916\u5c42\u662f**m\u6b21**\uff0c\u8868\u793a**\u51fb\u7834\u65f6\u95f4**  \n#### \u7b2c\u4e8c\u5c42\u6709**n\u6b21**\uff0c\u679a\u4e3e**\u51fa\u751f\u70b9**  \n#### \u6700\u91cc\u9762\u4e00\u5c42\u662f\u4e00\u4e2a**k\u503c**\uff0c\u8868\u793a**\u81ea\u673a\u5b58\u6d3b\u65f6\u95f4**\uff0c\u4ece\u96f6\u5f00\u59cb\u662f\u56e0\u4e3a\u4e0ei+k<=m\u7684\u5224\u65ad\u65f6\u95f4\u5bf9\u5e94\uff0c\u56e0\u4e3a**\u8d2d\u4e70\u81ea\u673a\u4e0d\u9700\u8981\u82b1\u8d39\u65f6\u95f4**  \n  \n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u6109\u5feb\u5730\u63a8\u65b9\u7a0b\u4e86  \n\u6211\u6700\u5f00\u59cb\u5199\u7684dp\u6570\u7ec4\u662f\u4e00\u4e2a**\u4e09\u7ef4**\u7684\uff0c\u7ed3\u679c**\u7206\u5185\u5b58**\u4e86\u3002\u3002\u3002  \n\u7136\u540e\u6211\u5c31\u60f3\uff0c\u65e2\u7136\u6211\u4e0d\u80fd\u5199**\u4e09\u7ef4**\u7684\uff0c  \n\u6211\u4e24\u7ef4\u7684\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u8868\u793a  \n\u90a3\u5c31\u5e72\u8106\u5934\u94c1\u5199\u4e2a**\u4e00\u7ef4**\u7684\u5427  \n\u5176\u4e2ddp[i]\u8868\u793a**\u65f6\u95f4i\u65f6\u7684\u6700\u5927\u6536\u70b9\u6570**  \n\u7136\u540e\u6211\u4eec\u628a\u9898\u76ee\u4e2d\u7684**\u8d2d\u4e70\u81ea\u673a\u7684\u94b1**\u8868\u793a\u4e3arob\u6570\u7ec4  \n**\u70b9\u6570\u53ca\u5176\u53d8\u5316**\u8868\u793a\u4e3aw\u6570\u7ec4  \n### \u90a3\u4e48\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u5f97\u5230\u4e0b\u5f0f:  \n### dp[i + k] = max(dp[i + k], dp[i - 1] - rob[j] + \u2211w[j + k][i + k](k < p));  \n\u5176\u4e2d\u540e\u9762\u7684\u4e00\u4e2a\u2211\u5c31\u7c7b\u4f3c\u6c42\u4e00\u4e2a**\u524d\u7f00\u548c**\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u4f60\u6536\u70b9\u65f6\u4e5f\u7b97\u4ee5\u524d\u6536\u8fc7\u7684\u561b(\u4e0d\u77e5\u9053\u8fd9\u6837\u80fd\u4e0d\u80fd\u542c\u61c2\u3002\u3002\u3002  \n\u6700\u540e\uff0c\u6839\u636e\u4e0a\u5f0f\uff0c\u518d\u914d\u5408\u4e00\u4e9b**\u5904\u7406\u6b65\u6570**\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u51fa\u6700\u7ec8\u7684\u4ee3\u7801\u4e86!    \n\u4ee3\u7801\u5982\u4e0b:  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 1e3 + 5;\nconst int maxm = 1e3 + 5;\nint n, m, p;\nint w[maxn][maxm];\nint rob[maxn];\nint dp[maxn];\n\nint main() {\n\tscanf(\"%d%d%d\", &n, &m, &p);\n\tfor (int i = 1; i <= m; ++i) dp[i] = -1e6;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\tscanf(\"%d\", &w[i][j]);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d\", &rob[i]);\n\t}\n\tfor (int i = 1; i <= m; ++i) { // \u51fb\u7834\u65f6\u95f4  \n\t\tfor (int j = 1; j <= n; ++j) { // \u8d77\u6b65  \n\t\t\tint temp = dp[i - 1] - rob[j]; // \u4ed8\u5b8c\u94b1\u5269\u4e0b\u7684\u94b1  \n\t\t\tfor (int k = 0; (i + k <= m) && (k < p); ++k) { // \u6536\u70b9  \n\t\t\t\tint idx = j + k;\n\t\t\t\tif (idx > n) idx %= n; \n\t\t\t\t// \u8fd9\u91ccidx > n\u4e5f\u4e0d\u662f\u5f88\u6e05\u695a\u662f\u600e\u4e48\u6765\u7684\uff0c\u53cd\u6b63\u8bd5\u4e86\u4e00\u4e0b\uff0c\u5c31\u8fd9\u4e2a\u53ef\u4ee5\u8fc7  \n\t\t\t\ttemp += w[idx][i + k]; // \u7d2f\u8ba1\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u524d\u7f00\u548c\u4e4b\u7c7b\u7684\u4e1c\u897f  \n\t\t\t\tdp[i + k] = max(temp, dp[i + k]);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", dp[m]);\n\treturn 0;\n}\n\n```  \n\u6700\u540e\u5462\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u4f5c\u4e3a\u4e00\u9053dp\uff0c\u5176\u5b9e\u4e5f\u4e0d\u7b97\u592a\u96be\uff0c\u4e2a\u4eba\u611f\u89c9\u4e5f\u5c31\u7eff\u9898\u6c34\u5e73\u5427 (~~pj\u7701\u4e8c\u849f\u84bb\u778e\u626f~~  \n\u5982\u679c\u5f53\u5e74\u5728\u8003\u573a\u4e0a\u7684\u8bdd\uff0c\u4f30\u8ba1\u5c31\u76f4\u63a5\u653e\u5f03\u4e0d\u505a\u4e86\u5427  \n\u56e0\u4e3a\u8fd9\u9053\u9898\u7ec6\u8282\u6709\u70b9\u591a  \n\u8fd9\u79cd\u9898\u76ee\u8fd8\u662f\u6bd4\u8f83\u953b\u70bc\u601d\u7ef4\u7684\uff0c~~\u4e0d\u50cf\u6a21\u62df\u90a3\u4e48\u65e0\u8111~~  \n\u4ee5\u540e\u6709\u7a7a\u591a\u505a\u70b9dp\u5427\uff01  \n",
        "postTime": 1583475908,
        "uid": 130069,
        "name": "zy_turtle",
        "ccfLevel": 0,
        "title": "[\u6c38\u9060\u306e\u8a18\u61b6 ~ Precious Memories]P1070\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898O\uff08n*n\uff09\u6b63\u89e3\u786e\u5b9e\u6bd4\u8f83\u8650\u5fc3,\u975e\u5e38\u8003\u5bdf\u5bf9\u4e8e\u72b6\u6001\u7684\u7406\u89e3\uff0c\u800c\u4e14\u5355\u8c03\u961f\u5217\u7528\u7684\u6bd4\u8f83\u5927\u80c6\u3002\n\n\u9996\u5148\u5f53\u7136\u662f\u786e\u5b9a\u72b6\u6001\ndp[i][j][k] = s  \u8868\u793a\u7b2ci\u65f6\u523b\uff0c\u8d70\u5230\u4e86j\u70b9\uff0c\u8fd8\u53ef\u4ee5\u8d70k\u6b65\uff0c\u83b7\u5f97\u6700\u5927\u6536\u76ca\u5c31\u662fs\n\n\u663e\u7136\u6709\u4e24\u79cd\u51b3\u7b56\uff0c\u4e00\u79cd\u662f\u987a\u7740\u4e0a\u4e00\u4e2a\u63a5\u7740\u8d70\uff0c\u4e00\u79cd\u662f\u91cd\u65b0\u8d2d\u4e70\u673a\u5668\u4eba\n\n\u90a3\u4e48\u8fd9\u6837\u975e\u5e38\u7b80\u5355\u5730\u5c31\u9a97\u4e8690\u5206\n\n\u63a5\u4e0b\u6765\u5c31\u662fO\uff08n*n\uff09\u672c\u4eba\u7684\u6b63\u89e3\u601d\u8def\n\n\u5bf9\u4e8eO(n*n)\u6b63\u89e3\u9996\u5148\u5c31\u9700\u8981\u66f4\u6539\u72b6\u6001\uff0c\u672c\u7740\u4e00\u7ef4\u4e00\u7ef4\u51cf\u5c11\u7684\u539f\u5219\uff0c\u4f18\u5148\u8003\u8651\u53bb\u6389\u7ef4\u5ea6k\uff0c\u90a3\u4e48dp[i][j] = s \u8868\u793ai\u65f6\u523b\u8d70\u5230j\u70b9\u83b7\u5f97\u6700\u5927\u6536\u76cas\u3002\u5728\u4e0d\u7ed5\u5708\u7684\u524d\u63d0\u4e0b\uff0c\u663e\u7136\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\ndp[i][j] = max(f[i-k]+ sum[i][j] - sum[i-k][j-k] - c[j-k]) \n\nf[i] = max(dp[i][j])\n\n\u8fd9\u4e2a\u65b9\u7a0b\u7684\u610f\u4e49\u662f\u5047\u5982\u5728i\u65f6\u523b\u8d70\u5230j\u70b9\uff0c\u90a3\u4e48\u5fc5\u7136\u5728k\u79d2\u4e4b\u524d\u5728j-k\u5de5\u5382\u8d2d\u4e70\u4e86\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u5e76\u4e14\u8d70\u4e86\u4e00\u4e9b\u8def\uff0c\u83b7\u5f97\u4e86s[i][j]-s[i-k][j-k]\u6536\u76ca\uff0c\u5e76\u6d88\u8017\u4e86c[j-k]\u91d1\u94b1\u8d2d\u4e70\u673a\u5668\u4eba\u3002\u7531\u4e8e\u8d2d\u4e70\u4f4d\u7f6e\u662f\u4efb\u610f\u7684\uff0c\u6240\u4ee5\u7ee7\u627f\u7684i-k\u79d2\u4ee5\u53ca\u4e4b\u524d\u7684\u6536\u76ca\u662ff[i-k]\uff0c\u8868\u793ai-k\u79d2\u4e4b\u524d\u7684\u6700\u5927\u6536\u76ca\u3002\n\n\u7136\u800c\u5728\u6211\u89c2\u6469\u7684\u522b\u4eba\u7684\u4ee3\u7801\u4e4b\u540e\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff1aj\u7ef4\u5ea6\u4e5f\u53ef\u4ee5\u53bb\u6389\u3002\u53cd\u6b63\u8f6c\u79fb\u8fc7\u7a0b\u4e5f\u4e0d\u9700\u8981\u5177\u4f53\u7528\u5230dp\u7684j\u7ef4\u5ea6\uff0c\u5e72\u8106\u5220\u4e86\u5f97\u4e86\u3002\n\n\u4e8e\u662f\u5c31\u6109\u5feb\u5730\u53bb\u6389\u4e86j\u7ef4\u5ea6\uff0c\u4ee5\u53caf\u6570\u7ec4\u3002\u53ea\u4fdd\u7559\u4e00\u4e2adp[i]\u8868\u793a\u524di\u79d2\uff08\u5305\u62ec\u7b2ci\u79d2\uff0c\u5df2\u7ecf\u8d70\u8fc7\uff09\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\ndp[i] = max(dp[i] + sum[i][j] - sum[i-k][j-k] - c[j-k]) \n\n\u8fd9\u91cc\u60ca\u5947\u7684\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u4e09\u7ef4\u7684\u3002\n\n\u90a3\u4e48\u600e\u4e48\u53bb\u6389\u4e00\u7ef4\u5462\uff1f\n\n\u4ed4\u7ec6\u89c2\u5bdf\u53d1\u73b0\uff1a\n\ndp[i]\t \n            \n         = max dp[i-k] + sum[i][j] - sum[i-k][j] - c[j-k] \n         \n         = max (dp[i-k] - sum[i-k-1][pre(j-k)] - c[j-k]) + sum[i][j]\n         \n         = max rec[i-k][j-k]   +  sum[i][j]\n         \n  \u53d1\u73b0\u5982\u679c\u628arec\u5355\u72ec\u5316\u6210\u4e00\u5f20\u8868\uff0c\u90a3\u4e48\u6bcf\u6b21\u8f6c\u79fb\u65f6\u7684\u679a\u4e3e\u7684k\u5b9e\u9645\u4e0a\u6784\u6210\u4e86\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u3002\u4f60\u770brec[i-k][j-k],\u5982\u679c\u628ai\uff0cj\u770b\u4f5c\u5b9a\u503c\uff0c\u90a3\u4e48\u8fd9\u663e\u7136\u662f\u8fc7\u70b9\uff08i\uff0cj\uff09\u7684\u4e00\u6761\u5bf9\u89d2\u7ebf\n\n\u800c\u4e14\u8fd9\u6761\u5bf9\u89d2\u7ebf\u957f\u5ea6\u56fa\u5b9a\u4e3ap\uff0c\u4e14\u9010\u6e10\u5e73\u79fb\uff0c\u6bcf\u6b21\u90fd\u8981\u5bf9\u89d2\u7ebf\u4e0a\u6700\u5927\u503c\u3002\n\n\u4e8e\u662f\u8003\u8651\u5355\u8c03\u961f\u5217\u4f18\u5316\u3002\n\n\u90a3\u4e48\u5176\u5b9e\u7531\u4e8e\u5bf9\u89d2\u7ebf\u6709n\u6761\u6240\u4ee5\u9700\u8981n\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u5f00\u6210\u4e8c\u7ef4\u6570\u7ec4\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u5c31\u3002\u3002\u3002\u505a\u5b8c\u4e86\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1.\u8fd9\u9898\u7ed9\u7684\u8fb9\u6743\u8981\u8f6c\u5316\u4e3a\u70b9\u6743\n\n2.\u6bcf\u6b21\u5355\u8c03\u961f\u5217\u66f4\u65b0\u8981\u5728\u8f6c\u79fb\u5b8c\u6210\u540e\u518d\u66f4\u65b0\uff0c\u5426\u5219\u7b54\u6848\u4e0d\u662f\u6700\u4f18\n\n3.\u72b6\u6001\u7684\u610f\u4e49\u4ee5\u53ca\u8f6c\u79fb\u7684\u610f\u4e49\uff0c\u4e00\u5b9a\u662f\u5df2\u7ecf\u8d70\u5230\u4e86\u67d0\u70b9\uff0c\u518d\u8f6c\u79fb\u3002\n\n\u54e6\u5bf9\u4e86\u5bf9\u4e8e\u695a\u9ece\u6559\u80b2\u7801\u98ce\u6211\u65e0\u6cd5\u5426\u8ba4\u8fd9\u4e48\u5199\u786e\u5b9e\u6bd4\u8f83\u957f\uff0c\u800c\u4e14\u6ca1\u5fc5\u8981\u4e00\u4e1d\u4e0d\u82df\u3002\u4f46\u662f\u5bf9\u4e8e\u601d\u8def\u7684\u7406\u89e3\u662f\u6bd4\u8f83\u65b9\u4fbf\u7684\u3002\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#define rep(i,a,b) for(int i=a; i<=b; i++)\n#define dec(i,a,b) for(int i=a; i>=b; i--)\n#define ll long long \n#define INF 0x3f3f3f3f\n\nusing namespace std;\n\nint n,m,p;\nint v[1010][1010],c[1010],sum[1010][1010];\nint dp[1010],rec[1010][1010];\nstruct node{\n\tint pos;\n\tint val;\n};\nnode q[1010][1010];\nint fro[1010],top[1010];\n\nint pre(int pos){\n\treturn pos == 1 ? n : pos-1;\n}\n\nint nxt(int pos){\n\treturn pos == n ? 1 : pos+1;\n}\n\nvoid ParseIn(){\n\tscanf(\"%d %d %d\",&n,&m,&p);\n\trep(j,1,n){\n\t\trep(i,1,m){\n\t\t\tscanf(\"%d\",&v[i][nxt(j)]);\n\t\t}\n\t}\n\trep(i,1,n){\n\t\tscanf(\"%d\",&c[i]);\n\t}\n}\n\nint q_num(int i, int j){\n\treturn ((j-i)%n+n)%n+1;\n}\n\nvoid Initialize(){\n\trep(i,1,m){\n\t\trep(j,1,n){\n\t\t\tsum[i][j] += sum[i-1][pre(j)] + v[i][j];\n \t\t}\n\t}\n\trep(i,1,n){\n\t\tfro[i] = 1;\n\t}\n}\n\nvoid debug(){\n\trep(i,1,m){\n\t\trep(j,1,n){\n\t\t\tcout << q_num(i,j) << \" \";\n\t\t}\n\t\tcout << endl;\n\t}\n\tcout << endl;\n\t\n\trep(i,1,m){\n\t\tprintf(\"%d\\n\",dp[i]);\n\t}\n\tcout << endl;\n\t\n\trep(i,1,m){\n\t\trep(j,1,n){\n\t\t\tprintf(\"%d \",v[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\tcout << endl;\n\trep(i,1,m){\n\t\trep(j,1,n){\n\t\t\tprintf(\"%d \",sum[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\tcout << endl;\n\trep(i,1,n){\n\t\tprintf(\"%d \",c[i]);\n\t}\n}\n\nvoid display(int num){\n\tcout << num << \":\" << endl;\n\trep(i,fro[num],top[num]){\n\t\tprintf(\"%d \",q[num][i].val);\n\t}\n\tcout << endl << endl;\n}\n\nvoid Core(){\n\trep(i,1,n){\n\t\tint num = q_num(0,i);\n\t\tq[num][++top[num]] = (node){0,-c[i]};\n\t}\n\trep(i,1,m){\n\t\tdp[i] = -INF;\n\t\trep(j,1,n){\n\t\t\tint num = q_num(i,j);\n\t\t\t\n\t\t\tdp[i] = max(dp[i],q[num][fro[num]].val + sum[i][j]);  //\u8f6c\u79fb \n\t\t}\n\t\trep(j,1,n){\n\t\t\tint num = q_num(i,j);\n\t\t\trec[i][j] = dp[i] - sum[i][j] - c[j];      //\u66f4\u65b0\u961f\u5217 \n\t\t\tq[num][++top[num]] = (node){i,rec[i][j]};  //\u5165\u961f \n\t\t\twhile(q[num][top[num]-1].val < q[num][top[num]].val && top[num] != fro[num]){\n\t\t\t\tswap(q[num][top[num]-1],q[num][top[num]]);\n\t\t\t\ttop[num]--;\n\t\t\t}\n\t\n\t\t\tif(i-q[num][fro[num]].pos >= p)q[num][fro[num]++]; //\u51fa\u961f \n\t\t}\n\t}\n\tprintf(\"%d\\n\",dp[m]);\n}\n\nint main(){\n\tParseIn();\n\tInitialize();\n\tCore();\n\t//debug();\n\treturn 0;\n}\n\n/*\n             \u5df2\u7ecf\u8d70\u4e86i-k\u6b65 \u8d70\u5230j\uff0c\u65b0\u8d70\u4e86k\u6b65\uff0c\u4ecej-k\u5f00\u59cb\u4f46\u662f\u6ca1\u6709\u6536\u76ca \ndp[i]\t = max dp[i-k] + sum[i][j] - sum[i-k][j] - c[j-k] \n         = max (dp[i-k] - sum[i-k-1][pre(j-k)] - c[j-k]) + sum[i][j]\n         = max rec[i-k][j-k]   +  sum[i][j]\n\nrec[i][j] = dp[i] - sum[i][j] - c[j]\n\n*/\n\n```\n\n  ",
        "postTime": 1579788237,
        "uid": 184681,
        "name": "cscy",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "### \uff08\u9898\u76ee\u6709\u70b9\u96be\uff0c\u6700\u540e\u538b\u65f6\u95f4\u7ebf\uff21\uff23\uff09\n##### \u9996\u5148\u7528\uff46\uff3b\uff49\uff3d\u8868\u793a\u65f6\u95f4\u4e3a\uff49\u662f\u6700\u5927\u91d1\u5e01\n##### \uff43\u8868\u793a\u7b2c j \u4e2a\u5355\u4f4d\u65f6\u95f4\u5185 i \u53f7\u9a6c\u8def\u4e0a\u51fa\u73b0\u7684\u91d1\u5e01\u6570\u91cf\n##### \uff57\u8868\u793a\u5728 i i \u53f7\u673a\u5668\u4eba\u5de5\u5382\u8d2d\u4e70\u673a\u5668\u4eba\u9700\u8981\u82b1\u8d39\u7684\u91d1\u5e01\u6570\u91cf\n#### \u4e0d\u96be\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n#### f[i]=max(f[i-k]-w[j-k]+c[(j-k)->j]) (0<k<=p,1<=j<=n)\n\n\n------------\n\tfor(int i=1;i<=m;i++)\n    \tfor(int j=1;j<=n;j++)\n    \t\tfor(int k=1;k<=p&&k<=i;k++)\n    \t\t{\n    \t\t\tint l=j-k;\n    \t\t\twhile(l<=0)l+=n;\n    \t\t\tint t=f[i-k]-w[l];\n    \t\t\tfor(int s=1;s<=k;s++,l=l%n+1)\n    \t\t\t\tt+=c[l][i-k+s];\n    \t\t\tf[i]=max(f[i],t);\n    \t\t}\n\n------------\n\u53d1\u73b0\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u4f18\u5316\n\n------------\n    for(int i=1;i<=m;i++)\n    {\n    \tc[1][i]+=c[n][i-1];\n    \tfor(int j=2;j<=n;j++)\n    \t\tc[j][i]+=c[j-1][i-1];\n    }\n    \n    for(int i=1;i<=m;i++)\n    \tfor(int j=1;j<=n;j++)\n    \t\tfor(int k=1;k<=p&&k<=i;k++)\n    \t\t{\n    \t\t\tint l=j-k;\n    \t\t\twhile(l<=0)l+=n;\n    \t\t\tf[i]=max(f[i],f[i-k]-w[l]+c[(j-2+n)%n+1][i]-c[(l-2+n)%n+1][i-k]);\n    \t\t}\n\n------------\n\u6ce8\u610f\uff1a\uff46\u521d\u59cb\u5316\u65f6\u8981\u8d4b\u503c\u4e3a\uff0d\uff49\uff4e\uff46\u5426\u5219\u7b2c\uff12\uff11\u4e2a\u70b9\u8fc7\u4e0d\u4e86\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint c[1001][1001]={0},w[1001];\nint main()  \n{    \n    int n,m,p;\n    scanf(\"%d%d%d\",&n,&m,&p);\n    int f[1001];\n    memset(f,-0x7f,sizeof(f));\n    f[0]=0;\n    for(int i=1;i<=n;i++)\n    \tfor(int j=1;j<=m;j++)\n    \t\tscanf(\"%d\",&c[i][j]);\n    for(int i=1;i<=m;i++)\n    {\n    \tc[1][i]+=c[n][i-1];\n    \tfor(int j=2;j<=n;j++)\n    \t\tc[j][i]+=c[j-1][i-1];\n    }\n    for(int i=1;i<=n;i++)\n    \tscanf(\"%d\",&w[i]);\n    for(int i=1;i<=m;i++)\n    \tfor(int j=1;j<=n;j++)\n    \t\tfor(int k=1;k<=p&&k<=i;k++)\n    \t\t{\n    \t\t\tint l=j-k;\n    \t\t\twhile(l<=0)l+=n;\n    \t\t\tf[i]=max(f[i],f[i-k]-w[l]+c[(j-2+n)%n+1][i]-c[(l-2+n)%n+1][i-k]);\n    \t\t}\n    printf(\"%d\\n\",f[m]);\n    return 0;\n}\n```\n",
        "postTime": 1531884810,
        "uid": 70310,
        "name": "wuzhaoxin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u7528f[i,j,0/1]\u8868\u793a\u7b2cj\u4e2a\u65f6\u95f4\u5230\u7b2ci\u4e2a\u5de5\u5382\u6709\u6ca1\u6709\u4e70\u673a\u5668\u4eba\u7684\u6700\u5927\u5229\u76ca\n\na[i][j]\u8868\u793a\u7b2cj\u4e2a\u65f6\u523b\u5230\u8fbe\u7b2ci\u4e2a\u5de5\u5382\u7684\u4ef7\u503c\n\ng[i,j,0/1]\u8868\u793a\u7b2cj\u4e2a\u65f6\u95f4\u5230\u7b2ci\u4e2a\u5de5\u5382\u8d70\u4e86\u591a\u5c11\u6b65\uff08\u4e00\u5b9a\u8981\u5c0f\u7b49\u4e8ep\uff09\n\nb[i]\u8868\u793a\u4ece\u7b2ci\u4e2a\u5de5\u5382\u4e70\u673a\u5668\u4eba\u9700\u8981\u7684\u4ef7\u94b1\u3002\n\n\u56e0\u4e3a\u7b2ci\u6761\u8def\u6307\u5411\u7b2ci+1\u4e2a\u5de5\u5382\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u7b2ci\u6761\u8def\u7684\u4ef7\u503c\u53d8\u6210\u7b2ci+1\u4e2a\u5de5\u5382\u7684\u4ef7\u503c,\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u5982\u4e0b\u8f93\u5165\u4ee3\u7801\uff0c\u5982\u679c\u662f\u7b2cn\u6761\u8fb9\uff0c\u5219\u8981\u6307\u5411\u7b2c1\u4e2a\u5de5\u5382\u3002\n\n```pascal\nuses math;\nvar\n        f,g:array[0..1000,0..1000,0..1] of longint;\n        a:array[0..1000,0..1000] of longint;\n        b:array[0..1000] of longint;\n        i,j,k,l,t,n,m,max1,max2,p:longint;\nfunction dec(x:longint):longint;//\u5224\u65ad\u6307\u5411\nbegin\n        x:=x-1;\n        if x=0 then x:=x+n;\n        exit(x);\nend;\nbegin\n        readln(n,m,p);//\u8bfb\u5165\u673a\u5668\u4eba\u5de5\u5382\u6570\u91cfn\uff0c\u65f6\u95f4m\uff0c\u884c\u8d70\u6b65\u6570p\n        for i:=1 to n do\n        begin\n                for j:=1 to m do\n                        read(a[j,i]);\n                readln;\n        end;//\u8f93\u5165\u7b2cj\u4e2a\u65f6\u523b\u5230\u8fbe\u7b2ci\u4e2a\u5de5\u5382\u7684\u4ef7\u503c\n        for i:=1 to n do\n                read(b[i]);//\u8f93\u5165\u4ece\u7b2ci\u4e2a\u5de5\u5382\u4e70\u673a\u5668\u4eba\u9700\u8981\u7684\u4ef7\u94b1\n        fillchar(f,sizeof(f),128);//\u521d\u59cb\u5316\n        for i:=1 to n do\n        begin\n                f[1,i,1]:=a[1,i]-b[i];//\u7b2c1\u4e2a\u65f6\u523b\u4ece\u7b2ci\u4e2a\u5de5\u5382\u51fa\u53d1\u7684\u4ef7\u503c\n                g[1,i,1]:=1;//\u5df2\u7ecf\u8d70\u4e861\u6b65\n        end;\n        for i:=1 to m do\n        begin\n                max2:=-maxlongint;//\u521d\u59cb\u5316\uff0c\u6c42\u6700\u5927\u503c\n                for j:=1 to n do\n                begin\n                        if f[i-1,dec(j),0]>f[i-1,dec(j),1] then//\u5224\u65ad\u54ea\u4e2a\u4ef7\u503c\u9ad8\n                        begin\n                                if g[i-1,dec(j),0]+1<=p then\n                                begin\n                                        f[i,j,0]:=f[i-1,dec(j),0]+a[i,j];\n                                        g[i,j,0]:=g[i-1,dec(j),0]+1;\n                                end\n                                else if g[i-1,dec(j),1]+1<=p then\n                                begin\n                                        f[i,j,0]:=f[i-1,dec(j),1]+a[i,j];\n                                        g[i,j,0]:=g[i-1,dec(j),1]+1;\n                                end;\n                        end\n                        else\n                        begin\n                                if g[i-1,dec(j),1]+1<=p then\n                                begin\n                                        f[i,j,0]:=f[i-1,dec(j),1]+a[i,j];\n                                        g[i,j,0]:=g[i-1,dec(j),1]+1;\n                                end\n                                else if g[i-1,dec(j),0]+1<=p then\n                                begin\n                                        f[i,j,0]:=f[i-1,dec(j),0]+a[i,j];\n                                        g[i,j,0]:=g[i-1,dec(j),0]+1;\n                                end;\n                        end;\n                        f[i,j,1]:=max1+a[i,j]-b[j];\n                        g[i,j,1]:=1;\n                        max2:=max(max2,max(f[i,j,0],f[i,j,1]));\n                end;\n                max1:=max2;\n        end;\n        writeln(max1);//\u8f93\u51fa\u7b54\u6848\nend.\n```\n",
        "postTime": 1571895818,
        "uid": 131035,
        "name": "\u897f\u74dc\u72fc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5355\u8c03\u5e8f\u5217\u3002\n~~\uff08\u867d\u7136\u6211\u60f3\u4e863\u4e2a\u5c0f\u65f6\uff09~~\n\n\n\u4e0b\u9762\u7ed9\u5927\u5bb6\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u5199\u5355\u8c03\u961f\u5217\uff1a\n\n\u9996\u5148\uff0cO(N^3)\u7684\u5199\u6cd5\u8fd8\u662f\u90a3\u4e48\u8111\u6b8b\uff08\u5f53\u7136\u5f97\u4e0d\u4e86\u6ee1\u5206\uff09\uff0c\u679a\u4e3e\u65f6\u95f4\uff0c\u4f4d\u7f6e\uff0c\u5f53\u524d\u8d70\u7684\u6b65\u6570\u5c31\u89e3\u51b3\u4e86\n\n\u5176\u6b21\uff0cO(N^2)\u5176\u5b9e\u5df2\u7ecf\u53ef\u4ee5\u7b97\u662f\u6b63\u89e3\u4e86\uff0c\u5177\u4f53\u7684\u6211\u771f\u7684\u4e5f\u4e0d\u597d\u8bb2\uff0c\u8fd9\u4e2a\u90fd\u662f\u4ece\u522b\u4eba\u90a3\u91cc\u5f97\u6765\u7684\u7ecf\u9a8c\n\n\u7f51\u5740\uff1ahttp://blog.csdn.net/yuyanggo/article/details/48685873)\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct oo\n{\n    int x,y;\n}q[1001][1001];\nint n,m,p;\nint a[1001][1001],b[1001][1001],fm[1001],cost[1001];\nvoid readdata()\n{\n  int i,j,k;\n  scanf(\"%d%d%d\",&n,&m,&p);\n  for(i=0;i<n;i++)\n    for(j=1;j<=m;j++)\n      scanf(\"%d\",&b[i][j]);//\u8bfb\u5165\u90e8\u5206 \n  for(i=0;i<n;i++)scanf(\"%d\",&cost[i]); \n  for(i=0;i<n;i++)a[1][i]=b[i][1];//a[1][i]\u4ee3\u8868\u7b2c1\u4e2a\u65f6\u95f4\u70b9\u5728\u7b2ci\u6bb5\u8def\u4e0a\u80fd\u5f97\u5230\u7684\u91d1\u5e01\u6570 \n  for(i=2;i<=m;i++)\n    for(j=0;j<n;j++)\n      a[i][j]=a[i-1][(j-1+n)%n]+b[j][i];//a[i][j]\u4ee3\u8868\u7b2ci\u4e2a\u65f6\u95f4\u70b9\u5728\u7b2cj\u6bb5\u8def\u4e0a\u80fd\u5f97\u5230\u7684\u91d1\u5e01\u6570 , (j-1+n)%n\u8fd9\u91cc\u662f\u5728\u5904\u7406\u73af \n}\nvoid del(int t,int yy)\n{\n  int i,j,k=q[t][0].x;\n  for(i=k;q[t][i].y>0;i++)\n    if(yy-q[t][i].y<p)break; \n  q[t][0].x=i;  \n}\nvoid add(int t,int yy,int xx)\n{\n  int i,j,k=q[t][0].x;\n  if(k==0)//\u5047\u5982\u5f53\u524d\u961f\u5217\u4e3a\u7a7a \n    {\n      q[t][0].x=1;\n      q[t][1].x=xx,q[t][1].y=yy;\n      return;\n    }\n  for(i=k;q[t][i].y>0;i++)\n    if(q[t][i].x<=xx)break;//\u7ef4\u62a4\u961f\u5217\u5355\u8c03\u4e0b\u964d \n  q[t][i].x=xx,q[t][i].y=yy;//\u52a0\u5165\u961f\u5217 \n}\nvoid work()\n{\n  int i,j,k,x;\n  for(i=1;i<=m;i++)\n    for(fm[i]=-1000000,j=0;j<n;j++)\n    {\n        k=(i-j+n)%n;//\u672c\u4ee3\u7801\u7684\u4e00\u4e2a\u7384\u5b66\u70b9\n\t\t/*\u4ed4\u7ec6\u8ba1\u7b97\u4f60\u4f1a\u53d1\u73b0k\u7684\u503c\u662f\u6709\u89c4\u5f8b\u7684\uff0c\u5f53k\u76f8\u540c\u65f6\uff0c\u4e0a\u6b21\u7684i\u548cj\u548c\u548c\u8fd9\u6b21\u7684i\u548cj\u80af\u5b9a\u662f\u53ef\u4ee5\u8f6c\u79fb\u7684*/ \n        del(k,i);//\u6709\u70b9\u4e0d\u786e\u5b9a\uff0c\u4f46\u662f\u5e94\u8be5\u662f\u5224\u65ad\u5f53\u524d\u673a\u5668\u4eba\u80fd\u8d70\u7684\u70b9 \n        add(k,i,fm[i-1]-a[i-1][(j-1+n)%n]-cost[j]);//\u5165\u961f \n        x=a[i][j]+q[k][q[k][0].x].x;//\u5f53\u524d\u80fd\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c \n        fm[i]=max(fm[i],x);//\u7edf\u8ba1\u7b54\u6848 \n    }\n    printf(\"%d\",fm[m]);\n}\nint main()\n{\n  readdata();\n  work();\n}\n\n```",
        "postTime": 1538824202,
        "uid": 102602,
        "name": "\u5f90\u6d69\u5b87",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "DP+\u9884\u5904\u7406\n\nDP\uff1af[i]\u8868\u793a\u5f53\u7b2ci\u79d2\u65f6\u80fd\u83b7\u5f97\u7684\u6700\u5927\u91d1\u94b1\u6570\n\n\u65b9\u7a0b\uff1af[i]=max(f[i],f[i-j]+a[i-j+1][j]);   \uff08a[i][j]:\u7b2ci\u79d2\u51fa\u53d1\u8d70j\u6b65\u7684\u6700\u5927\u503c\uff09\n\n\u6240\u4ee5\u73b0\u5728\u7684\u76ee\u7684\u5c31\u662f\u9884\u5904\u7406\u51faa\n\n\u90a3\u4e48\u4e09\u4e2afor\u5faa\u73af\u5457\n\n\uff08\u4ece\u4e25\u683c\u610f\u4e49\u4e0a\u6765\u8bf4O\uff08n^3\uff09\u7684\u7b97\u6cd5\u8fc7\u4e0d\u4e86\uff0c\u7136\u800c\u8fd9\u91cc\u5c31A\u4e86\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u5e38\u6570\u5904\u7406\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint f[1010];\nint a[1010][1010],sum[1010][1010];\nint map[1010][1010],w[1010];\nint n,m,p;\nint max(int a,int b)\n{\n    return a>b?a:b;\n}\nint min(int a,int b)\n{\n    return a<b?a:b;\n}\nint main()\n{\n    int i,j,t,q,tmp;\n    memset(a,-31,sizeof(a));\n    scanf(\"%d %d %d\",&n,&m,&p);\n    for(i=0;i<n;i++)\n        for(j=1;j<=m;j++)\n            scanf(\"%d\",&map[i][j]);\n    for(i=0;i<n;i++) scanf(\"%d\",&w[i]);\n    for(t=1;t<=m;t++)\n    {\n        tmp=min(p,m+1-t);\n        for(i=0;i<n;i++)\n            for(q=1;q<=tmp;q++)\n                sum[i][q]=sum[i][q-1]+map[(i+q-1)%n][t+q-1];\n        for(q=1;q<=tmp;q++)\n        {\n            for(i=0;i<n;i++)\n            {\n                sum[i][q]-=w[i];\n                if(a[t][q]<sum[i][q])\n                    a[t][q]=sum[i][q];\n            }\n        }\n    }\n    for(i=1;i<=m;i++)\n    {\n        tmp=min(i,p);\n        for(j=1;j<=tmp;j++)\n            f[i]=max(f[i],f[i-j]+a[i-j+1][j]);\n    }\n    printf(\"%d\",f[m]);\n    return 0;\n}\n```",
        "postTime": 1479081860,
        "uid": 19390,
        "name": "functionendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u5728\u8fd9\u4e2a\u8001\u5e08\u90fd\u4e0d\u613f\u610f\u5199std\u7684\u65f6\u4ee3\uff0c\u751f\u5b58\u6210\u4e3a\u4e86\u849f\u84bb\u7684\u96be\u9898\u4e4b\u4e00\u2026\u2026\n\n\u7b97\u4e86\uff0c\u6211\u5c31\u76f4\u63a5\u89e3\u8bf4\u4e00\u4e0bstd\u5427\u2026\u2026\n\n\u8fd9\u79cd\u9898\u4e00\u822c\u6765\u8bf4\u6b63\u5e38\u7684\u89e3\u6cd5\u5e94\u8be5\u662f\u641c\u7d22\u6216\u8005\u52a8\u6001\u89c4\u5212\uff0c\u4f46\u662f\u641c\u7d22\u6211\u4e0d\u5c0f\u5fc3\u5199\u5d29\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u6765\u7814\u7a76\u52a8\u6001\u89c4\u5212\u89e3\u6cd5\uff0c\u6bd5\u7adf\u8fd9\u4e2a\u6570\u636e\u91cf\u4e00\u822c\u6765\u8bf4\u6bd4\u8f83\u9002\u5408\u52a8\u6001\u89c4\u5212\uff0c\u641c\u7d22\u81f3\u5c11\u4f1a\u70b8\u6389\u4e00\u4e9b\u70b9\u7684\u2026\u2026\n\n\u4ee3\u7801\u7684\u601d\u8def\u2026\u2026\n\n\u4ece\u5f53\u524d\u72b6\u6001\u5f80\u524d\u5012\u63a8\uff0c\u4ece\u4e4b\u524d\u7684\u6700\u4f18\u89e3\u627e\u56de\u6765\uff0c\u5404\u79cd\u679a\u4e3e\uff0c\u6700\u540e\u5c31\u662f\u5f53\u524d\u65f6\u95f4\u7684\u6700\u4f18\u89e3\u4e86\u2026\u2026\n\n\u5148\u89e3\u91ca\u4e00\u4e0b\uff0cf[i]\u8868\u793a\u5df2\u7528i\u4e2a\u5355\u4f4d\u65f6\u95f4\u6240\u5f97\u5230\u7684\u6700\u591a\u7684\u91d1\u5e01\u6570\u91cf\uff0c\u800cv\u662f\u5728\u5f80\u524d\u627e\u7684\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u7684\u91d1\u5e01\u603b\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5730\u70b9\uff0c\u679a\u4e3e\u4e70\u673a\u5668\u4eba\u7684\u5730\u65b9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u4ece\u54ea\u91cc\u8d70\u8fc7\u6765\u7684\u3002\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint money[1009][1009],w[1009],f[1009],n,m,p;\nint maxn(int a,int b){if(a>b){return a;}else{return b;}}//\u624b\u6253max\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&p);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&money[i][j]);\n        }\n    }\n    for(int i=1;i<=n;i++){scanf(\"%d\",&w[i]);}//\u5404\u79cd\u8f93\u5165\n    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            int r=j-1,v=0;\n            if(r==0){r=n;}//\u8fd9\u662f\u4e00\u4e2a\u73af\n            v=v+money[r][i];//\u5f53\u524d\u6361\u5230\u7684\u91d1\u5e01\n            for(int k=1;k<=p;k++)\n            {\n                if(i-k<0){ break;}//\u524d\u9762\u6ca1\u65f6\u95f4\u4e86\u5c31\u4e0d\u9700\u8981\u5f80\u524d\u5012\u63a8\u4e86\n                f[i]=maxn(f[i],f[i-k]-w[r]+v);//\u679a\u4e3e\uff0ci-k\u5c31\u662fi-k\u65f6\u95f4\u65f6\u7684\u6700\u4f18\u89e3\uff0cr\u5c31\u662f\u4e70\u673a\u5668\u4eba\u7684\u5de5\u5382\u4f4d\u7f6e\uff0cv\u662f\u4ecer\u8d70\u6765\u7684\u8def\u4e0a\u6361\u5230\u7684\u91d1\u5e01\n                if(r==1){r=n;}\n                else{r--;}//\u5012\u56de\u524d\u4e00\u4e2a\u5de5\u5382\n                v=v+money[r][i-k];//\u4ecer\u8d70\u8fc7\u6765\u7684\u8def\u4e0a\u6361\u5230\u7684\u91d1\u5e01\n            } \n        }\n    }\n    printf(\"%d\",f[m]);\n    return 0;\n}\n\n```",
        "postTime": 1477669238,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    },
    {
        "content": "\u672c\u9898\u662fDP\n\n\u8f6c\u79fb\u65b9\u7a0b:\n\nf[i,j]=max{f[i-1,k]}+coin[i,pre[j]]-robot[pre[j]]|g[i,j]=p\n\n      =max{max{f[i-1,k]}+coin[i,pre[j]]-robot[pre[j]],f[i-1,pre[j]]+coin[i,pre[j]]}|g[i,j]<p\n\nans=max{f[m,i]}\n\nf[i,j]\u8868\u793ai\u65f6\u95f4\u6bb5\u673a\u5668\u4eba\u5728j\u53f7\u673a\u5668\u4eba\u5de5\u5382\u65f6\u603b\u5171\u6240\u5f97\u91d1\u5e01\u6570\u7684\u6700\u5927\u503c\n\ng[i,j]\u8868\u793af[i,j]\u5bf9\u5e94\u7684\u72b6\u6001\u673a\u5668\u4eba\u8d70\u7684\u6b65\u6570\n\npre[i]\u8868\u793a\u7b2ci\u4e2a\u5de5\u5382\u7684\u4e0a\u4e00\u4e2a\u5de5\u5382\n\nmax{f[i-1,k]}+coin[i,pre[j]]-robot[pre[j]]\u8868\u793a\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u673a\u5668\u4eba\n\nf[i-1,pre[j]]+coin[i,pre[j]]\u8868\u793a\u8ba9\u539f\u6709\u7684\u673a\u5668\u4eba\u7ee7\u7eed\u8d70(\u5f53\u6b65\u6570\u8d85\u8fc7p\u65f6\u5fc5\u987b\u4f7f\u7528\u65b0\u7684\u673a\u5668\u4eba)\n\n\u76f4\u63a5\u8fd9\u6837\u505a\u4f1a\u65f6\u95f4\u4f1a\u5f88\u7d27,\u4f46\u53ef\u4ee5\u7528\u4e24\u4e2a\u53d8\u91cf\u5206\u522b\u4fdd\u5b58\u5f53\u524d\u9636\u6bb5\u548c\u4e0a\u4e00\u9636\u6bb5\u7684\u6700\u5927\u503c\n",
        "postTime": 1380711195,
        "uid": 1187,
        "name": "AKB48",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1070 \u3010\u9053\u8def\u6e38\u620f\u3011"
    }
]