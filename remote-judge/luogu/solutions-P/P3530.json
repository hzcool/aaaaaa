[
    {
        "content": "\u5565\uff1fpigeon ycx \u53c8\u56de\u6765\u8865\u5dee\u5206\u7ea6\u675f\u4e86\uff1f\u6709\u751f\u4e4b\u5e74\u3002\n\n---\n\n**[Portal]( https://www.luogu.com.cn/problem/P3530 )**\n\n\u8fd9\u662f\u4e00\u4e2a\u633a\u5389\u5bb3\u7684\u5dee\u5206\u7ea6\u675f\u3002\n\n\u9996\u5148\u5efa\u51fa\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u3002\u7136\u540e\u5b83\u8981\u4f60\u6c42\u7684\u662f\u4e0d\u540c\u6210\u7ee9\u7684\u6700\u5927\u6570\u91cf\uff0c\u800c\u5dee\u5206\u7ea6\u675f\u53ea\u64c5\u957f\u505a\u300c\u4e24\u4e2a\u53d8\u91cf\u7684\u5dee\u7684\u6700\u5927 / \u5c0f\u503c\u300d\u8fd9\u79cd\u95ee\u9898\uff0c\u5982\u4f55\u8f6c\u5316\u8fc7\u53bb\u5462\uff1f\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e**\u4efb\u610f**\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\uff0c\u8fd9\u4e2a\u70b9\u4e0e\u70b9\u7684\u8fde\u901a\u6027\u662f\u975e\u5e38\u6df7\u4e71\u7684\uff0c\u65e0\u6cd5\u5224\u65ad\u70b9\u548c\u70b9\u548c\u70b9\u548c\u70b9\u4e4b\u95f4\u5230\u5e95\u80fd\u4e0d\u80fd\u62c9\u5f00\uff0c\u8fd8\u662f\u5fc5\u987b\u91cd\u53e0\u7684\u4ec0\u4e48\u60c5\u51b5\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\uff0c\u8fd9\u91cc\u9762\u6bcf\u4e2a\u70b9\u5230\u6bcf\u4e2a\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u4e5f\u5c31\u662f\u8bf4\u4efb\u610f\u4e24\u4e2a\u53d8\u91cf\u7684\u5dee\u90fd\u6709\u6709\u9650\u7684\u4e0a\u4e0b\u9650\u3002\u90a3\u5c31\u5f88\u597d\u4e86\u5440\uff0c\u6211\u4eec\u81f3\u5c11\u77e5\u9053\u4e86\u5b83\u7684\u4e0d\u540c\u6210\u7ee9\u7684\u6570\u91cf\u7684\u4e00\u4e2a\u4e0a\u9650\uff1a\u6211\u4eec\u603b\u8981\u9009\u4e24\u4e2a\u70b9\u5f53\u4f5c\u503c\u57df\u7684\u4e24\u7aef\u5bf9\u4e0d\u5bf9\uff0c\u800c\u6bcf\u4e24\u4e2a\u70b9\u7684\u5dee\u90fd\u662f\u6709\u6709\u9650\u4e0a\u9650\u7684\uff0c\u4e8e\u662f\u53d6\u90a3\u4e2a\u6700\u5927\u7684\u8ddd\u79bb\uff08\u4e5f\u5c31\u662f\u6700\u5927\u7684\u4e00\u5bf9\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff09\u5c31\u662f\u4e0a\u9650\u4e86\u3002\u63a5\u4e0b\u6765\u8003\u8651\u4e0a\u9650\u80fd\u4e0d\u80fd\u8fbe\u5230\uff0c\u5f88\u5bb9\u6613\u8bc1\u660e\u53ef\u4ee5\uff0c\u56e0\u4e3a\u5728\u90a3\u6761\u6700\u5927\u7684\u6700\u77ed\u8def\u4e0a\uff0c\u4e00\u8def\u8d70\u7684\u8fc7\u7a0b\u4e2d\u6bcf\u6b21\u52a0\u4e00\uff0c\u90fd\u4e00\u5b9a\u662f\u7b2c\u4e00\u79cd\u9650\u5236\u505a\u7684\u529f\u52b3\uff0c\u800c\u7b2c\u4e00\u79cd\u9650\u5236\u662f\u5b9a\u91cf\u9650\u5236\uff0c\u9650\u5236\u6b7b\u4e86\u7684\uff0c\u6240\u4ee5\u4e00\u65e6\u628a\u503c\u57df\u7684\u4e24\u7aef\u786e\u5b9a\u4e0b\u6765\uff0c\u4e2d\u95f4\u90fd\u586b\u7684\u6ee1\u6ee1\u7684\u3002\n\n\u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u7684\u6c42\u6cd5\u4e86\u3002\u8003\u8651\u5c06\u539f\u56fe\u5f3a\u8fde\u901a\u5206\u89e3\uff0c\u7136\u540e\u6bcf\u4e2a SCC \u6c42\u51fa\u6765\u7b54\u6848\uff0c\u518d\u7f29\u70b9\u53d1\u73b0\u662f\u4e2a DAG\u3002DAG \u4e5f\u662f\u4e2a\u8fde\u901a\u6027\u7279\u6b8a\u7684\u6709\u5411\u56fe\uff0c\u5b83\u4e5f\u597d\u529e\u4e86\u5440\uff0c\u6ca1\u6709\u4efb\u610f\u4e24\u4e2a SCC \u95f4\u6709\u76f8\u4e92\u7684\u9650\u5236\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u6cbf\u7740\u8fb9\u7684\u65b9\u5411\u5c06\u4e24\u4e2a SCC \u4e4b\u95f4\u7684\u8ddd\u79bb\u65e0\u9650\u62c9\u5927\uff0c\u8fd9\u6837\u6bcf\u4e2a SCC \u5c31\u662f\u72ec\u7acb\u7684\u4e86\uff0c\u628a\u6240\u6709 SCC \u7b54\u6848\u52a0\u8d77\u6765\u4e5f\u5c31\u8fbe\u5230\u4e86\u4e0a\u9650\u3002\n\n\u7136\u540e\u8003\u8651\u5b9e\u73b0\uff1f\u5f3a\u8fde\u901a\u5206\u89e3\u7528 Tarjan\uff0c\u7136\u540e\u6700\u77ed\u8def\u7684\u8bdd\u56e0\u4e3a $n$ \u53ea\u6709 $600$ \u53ef\u4ee5 Floyd \u4e09\u884c\u641e\u5b9a\uff08\u5305\u62ec\u5224\u8d1f\u73af\uff09\uff08\u4e0d\u8fc7\u8981\u5f00 O2\uff09\u3002\n\n**_[code]( https://www.luogu.com.cn/paste/v26j2ux9 )_**",
        "postTime": 1605703502,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3530 \u3010[POI2012]FES-Festival\u3011"
    },
    {
        "content": "\u611f\u89c9\u90e8\u5206\u9898\u89e3\u8868\u8ff0\u6709\u4e00\u70b9\u70b9\u96be\u4ee5\u7406\u89e3\uff0c\u6240\u4ee5\u849f\u84bb\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u81ea\u5df1\u5199\u9898\u89e3\u3002\n\n### \u9898\u76ee\u5206\u6790\n---\n\n\u4ed4\u7ec6\u8003\u8651\u8fd9\u9053\u9898\uff0c\u4ece\u4e0d\u7b49\u5f0f\u4e0a\u6765\u770b\u663e\u7136\u662f\u8981\u5dee\u5206\u7ea6\u675f\u5efa\u56fe\u7684\uff0c\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u9519\u7efc\u590d\u6742\uff0c\u4f46\u662f\u6211\u4eec\u6765\u770b\u4e24\u4e2a\u70b9\uff0c\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u8bf4\u660e\u5b83\u4eect\u503c\u7684\u5dee\u6709\u786e\u5b9a\u7684\u4e00\u4e2a\u4e0a\u754c\u548c\u4e0b\u754c\uff0c\u8fd9\u65f6\u5019\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u4e92\u76f8\u786e\u5b9a\u7684\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u5dee\u624d\u6709\u610f\u4e49\uff0c\u5982\u679c\u53ea\u662f\u5355\u5411\u7684\u5173\u7cfb\uff0c\u4ed6\u4eec\u4e4b\u95f4\u5e76\u4e0d\u80fd\u786e\u5b9a\u5dee\u503c\u5173\u7cfb\u3002\n\n\u57fa\u4e8e\u6b64\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\u5305\u542b\u7684\u6240\u6709\u7684\u70b9\uff0c\u8fd9\u4e9b\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff08\u5c31\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff09\uff0c\u90a3\u8fd9\u4e2a\u96c6\u5408\u4e2d\u4efb\u610f\u4e24\u4e2a\u70b9\u7684\u5dee\u503c\u5173\u7cfb\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u6b64\u65f6\u8fd9\u4e2a\u96c6\u5408\u4e2d\u6240\u6709\u70b9\u4e4b\u95f4\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\u52a0\u4e00\u7684\u5c31\u662f\u8fd9\u4e00\u4e2a\u96c6\u5408\u7684\u7b54\u6848\u3002\n\n#### \u4e3a\u4ec0\u4e48\u662f\u6240\u6709\u70b9\u4e4b\u95f4\u6700\u77ed\u8def\u7684\u6700\u5927\u503c + 1 \uff1f\n\n\u8fd9\u662f\u8fd9\u9053\u9898\u7684\u7279\u6b8a\u4e4b\u5904\uff0c\u56e0\u4e3a\u9898\u76ee\u9650\u5236\u53ea\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u76f8\u5dee 1\uff0c\u53e6\u4e00\u79cd\u662f $t(a)<t(b)$ \u7684\u9650\u5236\uff0c\u6b64\u65f6\u6211\u4eec\u4f7f\u7528\u5dee\u5206\u7ea6\u675f\u7684\u539f\u7406\u5efa\u51fa\u6765\u7684\u8fb9\u6743\u503c\u53ea\u6709 $1\uff0c0\uff0c-1$ \u8fd9\u4e09\u79cd\uff0c\u6700\u7ec8\u7b97\u51fa\u7684**\u6b63**\u5dee\u503c\u867d\u7136\u662f\u6743\u503c\u4e4b\u5dee\uff0c\u5374\u6070\u597d\u53ef\u4ee5\u53cd\u6620\u51fa\u5b83\u4eec\u4e4b\u95f4\u5e94\u8be5\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u503c\u7684\u6570\u91cf $-1$\u3002\n\n\u4e3e\u4f8b\u800c\u8a00\uff1a\n\n+ \u5b58\u5728\u8fb9 $dis(1, 2) = 1, dis(2, 3) = 1, dis(2, 4) = 1$\uff0c\u90a3\u4e48$dis(1, 4)=3$\uff0c\u8fd9\u4e2a3\u65e2\u662f1\u548c4\u4e4b\u95f4\u7684\u5dee\u503c\u4e0a\u754c\uff08\u5373 $dis(4)-dis(1)$ \uff09\uff0c\u53c8\u80fd\u8868\u793a $1$ \u548c $4$ \u4e2d\u95f4\uff08\u5305\u62ec $1\uff0c4$ )\u6709 $3+1$ \u4e2a\u6570\u5b57\u4e2a\u6570\u5b57\uff0c\u56e0\u6b64 $dis(1, 4)$ \u53cd\u5e94\u7684\u5c31\u662f\u4e0d\u540c\u53d6\u503c\u7684\u6570\u91cf $-1$\u3002\n\n+ \u4f46\u662f\u5982\u679c\u9898\u76ee\u4e0d\u4e00\u5b9a\u662f\u76f8\u5dee $1$\uff0c\u4f8b\u5982 $1$ \u548c $2$ \u76f8\u5dee $5$\uff0c\u8fd8\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u5c31\u4f1a\u7b97\u51fa $6$ \u7684\u5947\u602a\u6570\u5b57\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u7684\u524d\u63d0\u5c31\u4e0d\u5b58\u5728\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u4e0d\u540c\u8fde\u901a\u5757\uff0c\u663e\u7136\uff0c\u4ed6\u4eec\u4e4b\u95f4\u8981\u4e48\u6ca1\u6709\u8fb9\uff0c\u8981\u4e48\u662f\u5355\u5411\u8fb9\uff0c\u662f\u6ca1\u6709\u5f71\u54cd\u53ef\u4ee5\u505a\u5230\u4e92\u4e0d\u91cd\u53e0\u7684\u3002\n\n**\u603b\u7ed3\u4e00\u4e0b**\n+ \u6839\u636e\u5dee\u5206\u7ea6\u675f\u7684\u89c4\u5219\u5efa\u56fe\uff0c\u5148\u7528 Tarjan \u627e\u5230\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5bf9\u56fe\u4e2d\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u4f7f\u7528 Floyd \u8dd1\u6700\u77ed\u8def\uff0c\u628a\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u6700\u77ed\u8def\u6700\u5927\u503c $+1$ \u52a0\u8d77\u6765\u5c31\u662f\u6211\u4eec\u7684\u7b54\u6848\u3002\n+ \u5982\u679c $dis(x, x) < 0$ \uff0c\u8bf4\u660e\u65e0\u89e3\u3002\n\n\u6709\u4e86\u4e0a\u9762\u8fd9\u4e9b\u7406\u8bba\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u5e73\u5e73\u65e0\u5947\u7684\u5efa\u56fe\u3002\n\n#### \u5efa\u56fe\u65b9\u5f0f\uff1a\n\n\u4f8b\u5982\uff1a\n$$\nt(B) <= t(A) + 1\n$$\n\u5728\u6700\u77ed\u8def\u4e2d\uff0c\u5bf9\u4e8e\u67d0\u6761\u8fb9\uff0cdis\u6570\u7ec4\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a\n$$\ndis(to) <= dis(from) + w\n$$\n\u6545\u6211\u4eec\u4ee5dis\u4f5c\u4e3a\u6211\u4eec\u76f8\u6c42\u7684\u7b54\u6848\uff0c\u52a0\u4e00\u6761\u8fb9 ```Add(A, B, 1)``` \u5c31\u53ef\u4ee5\u4fdd\u8bc1 dis \u6570\u7ec4\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\u3002\n\n#### \u65e0\u89e3\u7684\u60c5\u51b5\uff1a\n\n\u7ed3\u5408\u5b9a\u4e49\uff0c$dis(x, y)$ \u8868\u793a\u7684\u662f $dis(y) - dis(x)$\uff0c\u5c31\u662f y \u6bd4 x \u6700\u591a\u5927\u4e86\u7684\u503c\uff0c\u8003\u8651\u5bf9\u8fd9\u9053\u9898\u800c\u8a00\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u663e\u7136\uff0c$dis(x, x)$ \u8868\u793a\u7684\u662f x \u6bd4 x \u6700\u591a\u5927\u7684\u503c\uff0c\u5373 $dis(x)-dis(x)$ \u7684\u6700\u5927\u503c\uff0c\u8fd9\u4e2a\u6570\u5b57\u80af\u5b9a\u4e0d\u80fd\u5c0f\u4e8e0\u3002\n\n\u6240\u4ee5\u5224\u65ad\u6709\u6ca1\u6709 $dis(x, x)$ \u5c0f\u4e8e0\u5c31\u77e5\u9053\u6709\u6ca1\u6709\u65e0\u89e3\u4e86\u3002\n\n#### \u6700\u540e\u7684\u4e00\u70b9\u601d\u8003\uff1a\n\n\u6709\u4e00\u4e9b\u9898\u89e3\u8bf4\u8fd9\u9053\u9898\u6839\u636e\u5dee\u5206\u7ea6\u675f\u7684\u6761\u4ef6\u5efa\u8fb9\uff0c\u7136\u540e\u76f4\u63a5 Floyd \u8dd1\u6700\u77ed\u8def\u627e\u6700\u957f\u8def\u5c31\u53ef\u4ee5\uff0c\u4f46\u662f\u56e0\u4e3a\u4f1aT\u6240\u4ee5\u624d\u9700\u8981\u7f29\u70b9\uff0c\u521a\u770b\u5230\u7684\u65f6\u5019\u7591\u60d1\u4e86\u6574\u6574\u4e00\u5929\u6ca1\u60f3\u660e\u767d\uff0c\u4f8b\u5982\uff1a\n\n\u7ed9\u51fa\u4e00\u4e2a $1$ \u7684\u65f6\u95f4\u5c0f\u4e8e $2$ \u65f6\u95f4\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6b64\u65f6\u6700\u957f\u8def\u4e3a $0$\uff0c\u6700\u957f\u8def $+1$ \u4e5f\u662f $1$\uff0c\u4f46\u662f\u663e\u7136\u5b83\u4eec\u53ef\u4ee5\u6700\u591a\u53d6\u4e24\u79cd\u65f6\u95f4\u3002\n\n\u5f53\u6211\u505a\u5b8c\u8fd9\u9053\u9898\u518d\u56de\u5934\u53bb\u770b\u521a\u5f00\u59cb\u7684\u60f3\u6cd5\uff0c\u5176\u5b9e\u53d1\u73b0\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u5c31\u662f\u5982\u679c\u4e0d\u7ba1\u6bcf\u4e2a\u70b9\u5c5e\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u76f4\u63a5\u5efa\u5b8c\u56fe\u5c31\u53bb\u8dd1 Floyd \u7684\u8bdd\uff0c\u5bf9\u4e8e\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\n\n\u5c31\u662f\u8bf4\u5982\u679c\u4e0d\u4f1a TLE \u7684\u8bdd\uff0c\u521a\u5f00\u59cb\u76f4\u63a5\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\uff0c\u7136\u540e\u627e\u5230\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u628a\u6240\u6709\u8fde\u901a\u5757\u6700\u77ed\u8def\u6700\u5927\u503c $+1$ \u52a0\u8d77\u6765\u6211\u4eec\u7684\u7b54\u6848\u4e86\u3002\n\n\u56e0\u4e3a\u5982\u679c\u67d0\u4e2a\u5728\u5f3a\u8fde\u901a\u5916\u7684\u70b9\u80fd\u66f4\u65b0\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u67d0\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u90a3\u5b83\u4e00\u5b9a\u4e5f\u5c5e\u4e8e\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u77db\u76fe\u4e86\uff0c\u6240\u4ee5\u6574\u4e2a\u4e00\u8d77\u7b97\u548c\u5355\u72ec\u7b97\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u662f\u7b49\u4ef7\u7684\u3002\n\n\u4ee5\u4e0a\u3002\n\n### \u4ee3\u7801\n---\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 610;\nint dis[N][N], low[N], dfn[N], num[N], t, n, ans[N];\nbool vis[N];\nstack < int > s;\nvoid Tarjan(int u) {\n\tlow[u] = dfn[u] = ++t;\n\ts.push(u); vis[u] = true;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (dis[u][i] <= 1) {\n\t\t\tif (!dfn[i]) {\n\t\t\t\tTarjan(i);\n\t\t\t\tlow[u] = min(low[i], low[u]);\n\t\t\t}\n\t\t\telse if (vis[i])\n\t\t\t\tlow[u] = min(low[u], dfn[i]); \n\t\t}\n\tif (dfn[u] == low[u]) {\n\t\tint v = s.top(); s.pop();\n\t\twhile (u != v) {\n\t\t\tnum[v] = u;\n\t\t\tvis[v] = false;\n\t\t\tv = s.top(); s.pop();\n\t\t}\n\t\tnum[v] = u;\n\t\tvis[v] = false;\n\t}\n}\nint main() {\n\tint m1, m2;\n\tscanf(\"%d%d%d\", &n, &m1, &m2);\n\tmemset(dis, 0x3f, sizeof(dis));\n\tfor (int i = 1; i <= m1; i++) {\n\t\tint a, b;\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tdis[a][b] = min(1, dis[a][b]); \n\t\tdis[b][a] = min(-1, dis[b][a]); \n\t}\n\tfor (int i = 1; i <= m2; i++) {\n\t\tint a, b;\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tdis[b][a] = min(dis[b][a], 0);\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tdis[i][i] = 0;\n\t\tif (!dfn[i])\tTarjan(i);\n\t}\n\tfor (int k = 1; k <= n; k++)\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (num[i] == num[k] && dis[i][k] != 0x3f3f3f3f)\n\t\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\t\tif (num[i] == num[j])\n\t\t\t\t\t\tdis[i][j] = min(dis[i][k] + dis[k][j], dis[i][j]);\n\tbool flag = true;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (dis[i][i] < 0) {\n\t\t\tflag = false;\n\t\t\tbreak;\n\t\t}\n\t\tfor (int j = 1; j <= n; j++) \n\t\t\tif (num[i] == num[j])\n\t\t\t\tans[num[i]] = max(ans[num[i]], dis[i][j] + 1);\n\t}\n\tif (!flag)\tputs(\"NIE\");\n\telse {\n\t\tint tot = 0;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\ttot += ans[i];\n\t\tprintf(\"%d\\n\", tot);\n\t}\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1623074027,
        "uid": 43117,
        "name": "cminus",
        "ccfLevel": 0,
        "title": "P3530 [POI2012]FES-Festival \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://llf0703.com/p/luogu-3530.html)\n\n## \u9898\u610f\n\n\u6709 $N$ \u4e2a\u6570\u548c $M_1+M_2$ \u79cd\u5173\u7cfb\u3002\u524d $M_1$ \u79cd\u5173\u7cfb $(x,y)$ \u8868\u793a $S_x+1=S_y$ \uff0c\u540e $M_2$ \u79cd\u5173\u7cfb\u8868\u793a $S_x\\le S_y$ \u3002\u6c42\u6700\u591a\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u503c\u3002\u5982\u679c\u65e0\u89e3\u8f93\u51fa `NIE` \u3002\n\n$N\\le 600 , M_1+M_2\\le 100000$ \u3002\n\n## \u9898\u89e3\n\n\u4e0d\u7b49\u5f0f\u5173\u7cfb\u53ef\u4ee5\u5148\u5dee\u5206\u7ea6\u675f\u5efa\u56fe\u3002\u8fb9 $(x,y)$ \u7684\u6743\u503c\u8868\u793a $S_x-S_y$ \u7684\u6700\u5927\u503c\uff0c\u5bf9\u4e8e $M_1$ \u5c31\u8fde\u8fb9 $(x,y,-1)$ \u548c $(y,x,1)$ \uff0c\u5bf9\u4e8e $M_2$ \u5c31\u8fde $(x,y,0)$ \u3002\u663e\u7136\u6700\u957f\u8def\u5f84 $+1$ \u5c31\u662f\u7b54\u6848\u3002\n\n\u5bb9\u6613\u60f3\u5230\u7528 $\\text{Floyd}$ \u6765\u5b9e\u73b0\uff0c\u4f46 $N^3\\approx 2\\times 10^8$ \uff0c\u4f1a\u7206\u3002\n\n\u4e0d\u8fc7\u53ef\u4ee5\u53d1\u73b0\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u8dd1\u6700\u957f\u8def\u5f84\u3002\u56e0\u4e3a\u6570\u503c\u7684\u4e2a\u6570\u90fd\u8981 $+1$ \uff0c\u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u4e3a \u6700\u957f\u8def\u5f84\u548c $+$ \u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u3002\n\n\u4f46\u5982\u679c\u5b58\u5728\u975e $0$ \u73af\u5c31\u53ef\u80fd\u65e0\u89e3\uff0c\u6240\u4ee5\u9700\u8981\u5224\u73af\u3002**\u5176\u5b83\u9898\u89e3\u8bf4\u6b63\u73af\u4e5f\u4e0d\u5408\u6cd5\uff0c\u6211\u611f\u89c9\u662f\u9519\u8bef\u7684\u3002**\u5982\u4e0b\u4f8b\uff1a\n\n```\n4 3 1\n2 1\n3 2\n1 4\n3 4\n```\n\n\u5efa\u8fb9\u7684\u65b9\u6cd5\u4e3a\uff08\u56e0\u4e3aGraph Editor\u753b\u51fa\u6765\u4e24\u6761\u8fb9\u4f1a\u91cd\u5728\u4e00\u8d77\u6240\u4ee5\u5c31\u4e0d\u653e\u56fe\u4e86\u81ea\u5df1\u753b\u4e00\u4e0b\u5427\uff09\n\n```\n1 2 1\n2 1 -1\n2 3 1\n3 2 -1\n4 1 1\n1 4 -1\n3 4 0\n```\n\n\u8fd9\u4e2a\u56fe\u91cc\u662f\u6709\u6b63\u73af\u7684\uff0c\u4f46\u4ecd\u7136\u6709\u89e3\uff0c\u7b54\u6848\u663e\u7136\u4e3a $4$ \u3002\n\n\u7ee7\u7eed\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b63\u73af\u65e0\u89e3\u7684\u60c5\u51b5\u4ec5\u6709\u73af\u4e0a**\u5168\u4e3a $1$**\u8fd9\u4e00\u79cd\uff0c\u5426\u5219\u5c31\u53ef\u4ee5\u628a\u6743\u503c\u4e3a $0$ \u7684\u8fb9\u62c6\u5f00\u4f7f\u5176\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u4e0d\u8fc7\u5168\u4e3a $1$ \u7684\u60c5\u51b5\u4e0b\u53cd\u8fc7\u6765\u8d70\u5c31\u662f\u4e2a\u8d1f\u73af\uff0c\u6240\u4ee5**\u53ef\u4ee5\u53ea\u5224\u8d1f\u73af**\u3002\u8dd1\u5b8c $\\text{Floyd}$ \u540e\u5982\u679c\u5b58\u5728 $dis[i][i] < 0$ \uff0c\u5c31\u8bf4\u660e\u6709\u8d1f\u73af\u3002\n\n\u6700\u540e\u5bf9\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u8bb0\u5f55\u6700\u957f\u8def\u5f84\uff0c\u52a0\u8d77\u6765\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u5bf9\u4e8e\u8bfb\u5165\uff0c\u5982\u679c\u6709\u591a\u7ec4\u9650\u5b9a\u5173\u7cfb\u5e94\u8be5\u9009\u62e9\u8f83\u5c0f\u7684\u90a3\u4e2a\uff0c\u6240\u4ee5\u9700\u8981\u53d6\u6700\u5c0f\u503c\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ninline int read()\n{\n    char ch=getchar();\n    int f=1,x=0;\n    while (ch<'0' || ch>'9')\n    {\n        if (ch=='-') f=-1;\n        ch=getchar();\n    }\n    while (ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return f*x;\n}\n\nstruct Edge {\n    int next,to,w;\n} edge[200005];\nstack <int> s;\nint scnt,dfsord,id[605],low[605],scc[605];\nint cnt,head[605],n,m1,m2,a,b,dis[605][605],mx[605],ans;\n\ninline void add(int u,int v,int w)\n{\n    edge[++cnt].to=v;\n    edge[cnt].next=head[u];\n    edge[cnt].w=w;\n    head[u]=cnt;\n}\n\nvoid dfs(int x) //Tarjan\n{\n    s.emplace(x);\n    id[x]=low[x]=++dfsord;\n    for (int i=head[x];i;i=edge[i].next)\n    {\n        int y=edge[i].to;\n        if (!id[y])\n        {\n            dfs(y);\n            low[x]=min(low[x],low[y]);\n        }\n        else if (!scc[y]) low[x]=min(low[x],id[y]);\n    }\n    if (id[x]==low[x])\n    {\n        scnt++;\n        while (!s.empty())\n        {\n            int t=s.top(); s.pop();\n            scc[t]=scnt;\n            if (t==x) break;\n        }\n    }\n}\n\nsigned main()\n{\n    n=read(); m1=read(); m2=read();\n    memset(dis,0x3f,sizeof(dis));\n    for (int i=1;i<=n;i++) dis[i][i]=0;\n    for (int i=1;i<=m1;i++)\n    {\n        a=read(); b=read();\n        add(a,b,-1); add(b,a,1);\n        dis[a][b]=min(dis[a][b],-1); dis[b][a]=min(dis[b][a],1); //\u53d6\n    }\n    for (int i=1;i<=m2;i++)\n    {\n        a=read(); b=read();\n        add(a,b,0);\n        dis[a][b]=min(dis[a][b],0);\n    }\n    for (int i=1;i<=n;i++)\n    {\n        if (id[i]) continue;\n        dfs(i);\n    }\n    for (int k=1;k<=n;k++)\n    {\n        for (int i=1;i<=n;i++)\n        {\n            if (scc[i]!=scc[k]) continue;\n            for (int j=1;j<=n;j++)\n            {\n                if (scc[j]!=scc[i]) continue;\n                dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]); //\u5bf9\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u6c42\u51fa\u6700\u77ed\u8def\n            }\n        }\n    }\n    for (int i=1;i<=n;i++) if (dis[i][i]) return 0&puts(\"NIE\"); //\u5224\u8d1f\u73af\n    for (int i=1;i<=n;i++)\n    {\n        for (int j=1;j<=n;j++)\n        {\n            if (scc[i]!=scc[j]) continue;\n            mx[scc[i]]=max(mx[scc[i]],dis[i][j]); //\u5f3a\u8fde\u901a\u5206\u91cf\n        }\n    }\n    for (int i=1;i<=scnt;i++) ans+=mx[i];\n    return !printf(\"%d\",ans+scnt);\n}\n```",
        "postTime": 1565362707,
        "uid": 29696,
        "name": "Llf0703",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3530 \u3010[POI2012]FES-Festival\u3011"
    },
    {
        "content": "# **\u9898\u89e3**\n\n\uff08\u5199\u8fd9\u9053\u9898\u7684\u65f6\u5019\u53c8\u5fd8\u8bb0\u8be5\u600e\u4e48\u5199\u5dee\u5206\u7ea6\u675f\u6a21\u677f\u4e86\uff0c\u7136\u540e\u8dd1\u56de\u539f\u9898\uff0c\u53c8\u5fd8\u8bb0\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u5728@big_turkey \u535a\u5ba2\u7ec8\u4e8e\u590d\u4e60\u5b8c\u4e86\u3002\n\n\u9996\u5148\u4f9d\u636e\u9898\u610f\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a $\\text{m1}$ \u662f\u5df2\u7ecf\u660e\u786e\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u90a3\u4e48\u6839\u636e\u6a21\u677f\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u8fb9 $\\text{add(x,y,-1)}$  \uff0c $\\text{add(y,x,1)}$\u3002\uff08$x=y+1$ \u7b49\u4ef7\u4e8e $x\u2264y+1\\  \\ \\text{\u5e76\u4e14} \\ \\ y\u2264x-1$\uff09\n\n\u5bf9\u4e8e $\\text{m2} $ \u6211\u4eec\u5efa\u8fb9 $\\text{(x,y,0)}$\u3002\uff08$x\\le y$\uff09\n\n\u90a3\u4e48\u7b54\u6848\u4fbf\u662f\u6700\u957f\u8def $+1$\u3002\n\n\u53ef\u4ee5\u7528 $\\text{Floyd}$ \u5b9e\u73b0\uff0c\u4e0d\u8fc7\u4f1a\u7206\u3002\n\n\u4e0d\u8fc7\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u4e2d\uff0c\u4ed6\u4eec\u7684\u5173\u7cfb\u662f\u53ef\u4ee5\u786e\u5b9a\u7684\uff0c\u90a3\u4ec0\u4e48\u65f6\u5019\u4ed6\u4eec\u7684\u5173\u7cfb\u662f\u77db\u76fe\u7684\uff1f\n\n\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u8d1f\u73af\uff1a\u663e\u7136\u5f53\u4e00\u4e2a\u73af\u662f\u8d1f\u73af\u5b83\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n2. \u6b63\u73af\uff1a\u90a3\u4e48\u662f\u6b63\u73af\u5462\uff0c\u7a0d\u5fae\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u73af\u4e0a\u7684\u90fd\u4e3a $1$ \u662f\uff0c\u5b83\u662f\u77db\u76fe\u7684\u3002 \u5f53\u5b83\u5e26\u6709\u4e00\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\uff0c\u5b83\u4e0e\u8fb9\u6743\u4e3a $1$\u7684\u533a\u522b\u662f\u6ca1\u6709\u9650\u5236 $y$ \u6bd4 $x$ \u5927\u591a\u5c11\uff0c\u6545\u5e26\u6709 $0$ \u6743\u7684\u6b63\u73af\u53ef\u884c\u3002\n\n3. \u96f6\u73af\uff1a\u663e\u7136\u4ed6\u4eec\u53ef\u4ee5\u76f8\u7b49\uff0c\u53ef\u884c\u3002\n\n\u7ec8\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u662f\u8d1f\u73af\u548c\u8fb9\u6743\u90fd\u4e3a $1$ \u7684\u73af\u3002\u5bf9\u4e8e\u8d1f\u73af\u5bb9\u6613\u5224\u65ad\uff0c\u5bf9\u4e8e\u8fb9\u6743\u90fd\u4e3a $1$ \u7684\u73af\uff0c\u6211\u4eec\u770b\u5230\u5c5e\u4e8e $\\text{m1}$ \u7684\u6211\u4eec\u5efa\u4e86\u4e24\u6761\uff0c\u4e00\u6b63\u4e00\u53cd\uff0c\u6240\u4ee5\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u5224\u65ad\u8d1f\u73af\u6765\u5224\u65ad\u6389\u8fb9\u6743\u90fd\u4e3a $1$ \u7684\u6b63\u73af\u3002\n\n\u90a3\u4e48\u591a\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8d21\u732e\u662f\u4ec0\u4e48\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fde\u63a5\u5f3a\u8fde\u901a\u4e4b\u95f4\u7684\u8fb9\u5fc5\u5b9a\u662f\u5c5e\u4e8e $\\text{m2}$ \u7684\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4e0d\u5fc5\u5728\u4e4e\u5f3a\u8fde\u901a\u4e4b\u95f4\u7a76\u7adf\u5927\u591a\u5c11\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5404\u4e2a\u5f3a\u8fde\u901a\u7686\u53ef\u4ee5\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u3002\n\n\u90a3\u4e48\u6700\u540e\u7b54\u6848\u5c31\u4e3a\uff1a\u5404\u4e2a\u5f3a\u8fde\u901a\u5185\u7684\u6700\u957f\u8def $+$ \u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\u3002\n\n\u4ee3\u7801\uff1a\n\n```c\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m1,m2;\nint dis[666][666];\nint head[666],cnt;\nint vis[666];\nstruct node{\n\tint to,nex,z;\n}a[200005];\nvoid add(int x,int y,int z){\n\ta[++cnt].to=y;\n\ta[cnt].nex=head[x];\n\ta[cnt].z=z;\n\thead[x]=cnt;\n}\nint low[666],dfn[666],xu;\nint z[666],tot;\nint ccnt;\nint pan[666];\nvoid tarjan(int x){\n\tlow[x]=dfn[x]=++xu;\n\tvis[x]=1;\n\tz[++tot]=x;\n\tfor(int i=head[x];i;i=a[i].nex){\n\t\tint y=a[i].to;\n\t\tif(!dfn[y]){\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(vis[y]){\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t\t}\n\t}\n\tif(dfn[x]==low[x]){\n\t\tccnt++;\n\t\twhile(true){\n\t\t\tpan[z[tot]]=ccnt;\n\t\t\tvis[z[tot]]=0;\n\t\t\ttot--;\n\t\t\tif(z[tot+1]==x) break;\n\t\t}\n\t}\n}\nint v[666];\nint ans;\nint main(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tscanf(\"%d%d%d\",&n,&m1,&m2);\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i][i]=0;\n\t}\n\twhile(m1--){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y,-1);\n\t\tadd(y,x,1);\n\t\tdis[x][y]=-1;\n\t\tdis[y][x]=1;\n\t}\n\twhile(m2--){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y,0);\n\t\tif(dis[x][y]==0x3f3f3f3f) dis[x][y]=0;//\u5f53x\u4e0ey\u6ca1\u6709\u5b9a\u91cf\u5173\u7cfb\u662f\u624d\u8bbe\u4e3a\u5b9a\u6027\u5173\u7cfb \n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!dfn[i]){\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\tfor(int k=1;k<=n;k++){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(pan[i]!=pan[k]||dis[i][k]==0x3f3f3f3f) continue;//\uff01\uff01\uff01||\u540e\u534a\u90e8\u5206\u662f\u6765\u526a\u679d\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u8fc7\u7b2c\u516b\u4e2a\u70b9\u3002 \n\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\tif(pan[j]!=pan[i]||dis[k][j]==0x3f3f3f3f) continue;//\uff01\uff01\uff01 \n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) if(dis[i][i]){printf(\"NIE\\n\");return 0;};//\u5224\u8d1f\u73af \n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(pan[i]!=pan[j]) continue;\n\t\t\tv[pan[i]]=max(v[pan[i]],dis[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=ccnt;i++){\n\t\tans+=v[i];\n\t}\n\tprintf(\"%d\",ans+ccnt);\n\treturn 0;\n}\n```\n",
        "postTime": 1631773290,
        "uid": 103182,
        "name": "LONV_HY",
        "ccfLevel": 0,
        "title": "P3530 [POI2012]FES-Festival \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u4e0d\u7b49\u5f0f\u5c31\u53ef\u4ee5\u60f3\u5230\u5dee\u5206\u7ea6\u675f\u3002\n\n\u6839\u636e\u4e00\u4e9b\u5dee\u5206\u7ea6\u675f\u5c0f\u5e38\u8bc6\uff0c\u53ef\u4ee5\u8bbe$dis[x][y]$\u8868\u793a$a_x$**\u6700\u591a**\u80fd\u6bd4$a_y$\u5927\u591a\u5c11\u3002\n\n\u4e8e\u662f\u5bf9\u7b2c\u4e00\u7c7b\uff0c$dis[x][y]=1,dis[y][x]=-1$\u3002\uff08\u53cc\u5411\u8fb9\u9002\u7528\u4e8e\u5b9a\u91cf\u6bd4\u8f83\uff09\n\n\u7b2c\u4e8c\u7c7b\uff0c\u7531\u4e8e\u662f$a_y\\geq a_x$,$dis[y][x]=0$\u3002\uff08\u5355\u5411\u8fb9\u9002\u7528\u4e8e\u5b9a\u6027\u6bd4\u8f83\uff09\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u56fe\u4e2d\u53ea\u8981\u6709\u975e$0$\u73af\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u89c2\u5bdf\u4e00\u4e0b\u5efa\u8fb9\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u6709\u6b63\u73af\uff0c\u5b83\u7684\u53cd\u8fb9\u5c31\u4f1a\u6784\u6210\u8d1f\u73af\u3002\n\n\u4e8e\u662f\u53ea\u8981\u5224\u8d1f\u73af\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u4f55\u5224\u8d1f\u73af\uff1f\n\n$SPFA$\u5224\u8d1f\u73af\u3001$floyd$\u5224\u65ad$dis[i][i]<0$\u90fd\u53ef\u4ee5\u3002\n\n\u7136\u800c\u8fd9\u9898\u7528\u524d\u8005\u4f1a\u51fa\u73b0\u70b9\u5c0f\u5751\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u4e00\u822c\u51fa\u53d1\u90fd\u4f1a\u4ee5$1$\u4e3a\u8d77\u70b9\uff0c\u800c\u8fd9\u4e00\u4e2a\u56fe\u4e2d$1$\u4e0d\u4e00\u5b9a\u4e0e\u8d1f\u73af\u8054\u901a\u3002\n\u600e\u4e48\u529e\uff1f\n\n\u8dd1$tarjan$\u627e\u51fa\u8054\u901a\u5757\u3002\u865a\u6784\u4e00\u4e2a\u7ed3\u70b9\uff0c\u4e0e\u5404\u4e2a\u8054\u901a\u5757\u5efa\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\uff08\u4e3b\u8981\u6ce8\u610f\u9632\u6b62\u56e0\u8be5\u7ed3\u70b9\u7684\u5efa\u7acb\u800c\u4ea7\u751f\u65b0\u7684\u8d1f\u73af\uff09\uff0c\u7136\u540e\u4ece\u865a\u6784\u70b9\u51fa\u53d1$SPFA$\u5373\u53ef\u3002\n\n\u7f29\u5b8c\u70b9\u540e\uff0c\u56fe\u4e2d\u53ea\u5269\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\u8fde\u63a5\u5404\u8054\u901a\u5757\uff08\u7b2c\u4e00\u7c7b\u81ea\u5df1\u5c31\u80fd\u6784\u6210\u4e00\u4e2a\u5757\uff09\u3002\u7531\u4e8e\u201c\u5927\u4e8e\u7b49\u4e8e\u201d\u8fd9\u4e2a\u5173\u7cfb\u4e0d\u9650\u5236\u7edd\u5bf9\u5927\u5c0f\uff0c\u56e0\u800c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff08\u56e0\u53ef\u4ee5\u65e0\u9650\u6269\u5927\u5404\u8054\u901a\u5757\u7684\u503c\uff09\uff0c\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e9b\u8fb9\u3002\n\n\u4e8e\u662f\u5404\u8054\u901a\u5757\u5185$maxdis+1$\u4e4b\u548c\u5373\u4e3a\u7b54\u6848\u3002\n\uff08\u8bdd\u8bf4**\u53ea\u5728\u8054\u901a\u5757\u5185\u8dd1$floyd$**\u7684\u6548\u7387\u771f\u662f\u6050\u6016\uff0c$SPFA$\u5224\u8d1f\u73af\u6210\u4e86\u590d\u6742\u5ea6\u74f6\u9888\uff09\n\n\u5b8c\u4e86\uff1f\u7136\u800c\u8fd8\u8981\u6ce8\u610f\u9650\u5236\u6761\u4ef6\u53ef\u4ee5\u53e0\u52a0\uff0c\u6240\u4ee5$dis$\u7684\u8d4b\u503c\u8981\u53d6$\\min$\u3002\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#define re register\n#define il inline\n#define ll long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define fp(i,a,b) for(re int i=a;i<=b;i++)\n#define fq(i,a,b) for(re int i=a;i>=b;i--)\nusing namespace std;\nconst int mod=1e9+7,N=605;\nstruct Edge{int to,nxt,w;}e[N*400];\nint n,m1,m2,h[N],cnt,dis[N],dfn[N],low[N],tim,sta[N],top,scc,bl[N],sz[N],num[N],d[N][N];\nbool vis[N];\nll ans;\nqueue<int>Q;\nil void add(re int u,re int v,re int w){e[++cnt]=(Edge){v,h[u],w};h[u]=cnt;}\nil ll gi()\n{\n   re ll x=0,t=1;\n   re char ch=getchar();\n   while(ch!='-'&&(ch<'0'||ch>'9')) ch=getchar();\n   if(ch=='-') t=-1,ch=getchar();\n   while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n   return x*t;\n}\nil void tarjan(re int u)\n{\n  dfn[u]=low[u]=++tim;vis[u]=1;sta[++top]=u;\n  re int v;\n  for(re int i=h[u];i+1;i=e[i].nxt)\n    {\n      re int v=e[i].to;\n      if(!dfn[v]) tarjan(v),low[u]=min(low[u],low[v]);\n      else if(vis[v]) low[u]=min(low[u],dfn[v]);\n    }\n  if(dfn[u]==low[u])\n    {\n      ++scc;\n      do{v=sta[top];bl[v]=scc;vis[v]=0;++sz[scc];top--;}while(u^v);\n    }\n}\nil int fSPFA(re int st)\n{\n  memset(dis,63,sizeof(dis));memset(vis,0,sizeof(vis));memset(num,0,sizeof(num));\n  while(!Q.empty()) Q.pop();\n  dis[st]=0;num[st]=1;Q.push(st);vis[st]=1;\n  while(!Q.empty())\n    {\n      re int u=Q.front();Q.pop();\n      for(re int i=h[u];i+1;i=e[i].nxt)\n    {\n      re int v=e[i].to;\n      if(dis[v]>dis[u]+e[i].w)\n        {\n      if((++num[v])>n) return 0;\n          dis[v]=dis[u]+e[i].w;\n          if(!vis[v]) vis[v]=1,Q.push(v);\n        }\n    }\n      vis[u]=0;\n    }\n  return 1;\n}\nint main()\n{\n  memset(h,-1,sizeof(h));memset(d,63,sizeof(d));\n  re int u,v;\n  n=gi();m1=gi();m2=gi();\n  fp(i,1,m1) u=gi(),v=gi(),add(u,v,1),add(v,u,-1),d[u][v]=min(d[u][v],1),d[v][u]=min(d[v][u],-1);\n  fp(i,1,m2) u=gi(),v=gi(),add(v,u,0),d[v][u]=min(d[v][u],0);\n  fp(i,1,n) d[i][i]=min(d[i][i],0);\n  fp(i,1,n) if(!dfn[i]) tarjan(i);\n  memset(vis,0,sizeof(vis));\n  fp(i,2,n)\n    if(!vis[bl[i]])\n      add(0,i,0),vis[bl[i]]=1;\n  memset(vis,0,sizeof(vis));\n  //if(!fSPFA(0)) {puts(\"NIE\");return 0;}\n  fp(o,1,scc)\n  {\n    re ll mx=0;\n    fp(k,1,n)\n    {\n      if(bl[k]!=o) continue;\n      fp(i,1,n)\n      {\n    if(bl[i]!=o||d[i][k]==d[0][0]) continue;\n        fp(j,1,n)\n      {\n        if(bl[j]!=o||d[k][j]==d[0][0]) continue;\n        d[i][j]=min(d[i][j],d[i][k]+d[k][j]);\n      }\n      }\n    }\n    fp(i,1,n)\n      {\n    if(bl[i]!=o) continue;\n    fp(j,1,n)\n      {\n        if(bl[j]!=o) continue;\n        mx=max(mx,d[i][j]);\n      }\n      }\n    ans+=mx+1;\n  }\n  fp(i,1,n) if(d[i][i]<0) {puts(\"NIE\");return 0;}\n  printf(\"%lld\\n\",ans);\n  return 0;\n}\n```",
        "postTime": 1534464087,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3530 \u3010[POI2012]FES-Festival\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u76ee\u7684\u7ea6\u675f\u6761\u4ef6\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u5230\u5dee\u5206\u7ea6\u675f\u5efa\u56fe\u3002\n\n\u5148\u5224\u65ad\u4e00\u4e0b\u6709\u6ca1\u6709\u975e\u96f6\u73af\uff0c\u6709\u7684\u8bdd\u65e0\u89e3\u3002\n\n\u7531\u4e8e\u6709\u96f6\u73af\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u56fe\u4e2d\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5757\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5148\u7f29\u70b9\uff0c\u7531\u4e8e\u7f29\u70b9\u540e\u6210\u4e86\u6240\u6709\u8fb9\u6743\u90fd\u4e3a\u96f6\u7684dag(\u6709\u5411\u65e0\u73af\u56fe)\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5206\u522b\u6c42\u89e3\uff0c\u7d2f\u52a0\u5373\u53ef\u3002\n\n\u5f53\u7136n\u53ea\u6709600\uff0cfloyed\u5373\u53ef\uff0c\u4f46\u76f4\u63a5floyed\u4f1a\u88abT\u98de\u3002\n\n\u6211\u4eec\u5728floyed\u7684\u65f6\u5019\u5982\u679c\u4e24\u4e2a\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u5c31\u53ef\u4ee5\u526a\u6389\u3002\n\n\u5f53\u7136\u8fd9\u6837\u5e76\u4e0d\u662f\u6700\u4fdd\u9669\u7684\uff0c\u867d\u7136\u53ef\u4ee5\u8fc7\u5927\u90e8\u5206\u6570\u636e\uff0c\u4f46\u8fd8\u662f\u53ef\u4ee5\u5361\u6389\u7684\u3002\n\n\u6240\u4ee5\u6700\u4fdd\u9669\u7684\u662f\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u6c42\u4e00\u904dspfa\u6216\u8fea\u6770\u65af\u7279\u62c9\u5806\u4f18\u5316\uff0c\u8fd9\u91cc\u5199\u7684\u662ffloyed\u3002\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nvector<int> a[601];\nint low[601],dfn[601],cnt=0,dis[601][601],position[601],ma[601],stack[601],h=0,z=0;\nbool v[601],f[601];\nvoid tarjan(int o)\n{\n    h++;\n    stack[h]=o;\n    f[o]=true;\n    z++;\n    low[o]=dfn[o]=z;\n    for(int i=0;i<a[o].size();i++)\n        if(!v[a[o][i]])\n        {\n            v[a[o][i]]=true;\n            tarjan(a[o][i]);\n            low[o]=min(low[o],low[a[o][i]]);\n        }else\n        if(f[a[o][i]])\n            low[o]=min(low[o],dfn[a[o][i]]);\n    if(low[o]==dfn[o])\n    {\n        cnt++;\n        while(stack[h]!=o)\n        {\n            position[stack[h]]=cnt;\n            f[stack[h]]=false;\n            h--;\n        }\n        position[stack[h]]=cnt;\n        f[stack[h]]=false;\n        h--;\n    }\n}\nint main()\n{\n    int n,k1,k2;\n    cin>>n>>k1>>k2;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            dis[i][j]=1000000000;\n    for(int i=1;i<=n;i++) dis[i][i]=0;\n    for(int i=1;i<=k1;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        a[x].push_back(y);\n        a[y].push_back(x);\n        dis[x][y]=min(dis[x][y],1);\n        dis[y][x]=min(dis[y][x],-1);\n    }\n    for(int i=1;i<=k2;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        a[y].push_back(x);\n        dis[y][x]=min(dis[y][x],0);\n    }\n    memset(v,0,sizeof(v));\n    memset(f,0,sizeof(f));\n    memset(low,0,sizeof(low));\n    memset(dfn,0,sizeof(dfn));\n    for(int i=1;i<=n;i++)\n        if(!v[i])\n        {\n            v[i]=true;\n            tarjan(i);\n        }\n    for(int k=1;k<=n;k++)\n        for(int i=1;i<=n;i++)\n            if(position[k]==position[i])\n                for(int j=1;j<=n;j++)\n                    if(position[i]==position[j])\n                        dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n    for(int i=1;i<=n;i++)\n        if(dis[i][i]!=0){cout<<\"NIE\"<<endl;return 0;}\n    for(int i=1;i<=n;i++) ma[i]=0;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            if(position[i]==position[j])\n                ma[position[i]]=max(ma[position[i]],dis[i][j]);\n    int ans=0;\n    for(int i=1;i<=cnt;i++) ans+=ma[i];\n    cout<<ans+cnt<<endl;\n    return 0;\n}\n```",
        "postTime": 1515328704,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3530 \u3010[POI2012]FES-Festival\u3011"
    },
    {
        "content": "# \u9898\u9762\n[P3530 [POI2012]FES-Festival](https://www.luogu.com.cn/problem/P3530)\n# \u9898\u610f\n\u5728\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6761\u4ef6\u4e0b\uff0c\u6c42\u51fa\u8d5b\u8f66\u624b\u7684\u6210\u7ee9\u53ef\u80fd\u7684\u53d6\u503c\u6709\u591a\u5c11\u79cd\u3002\n# \u89e3\u6790\n### \u5dee\u5206\u7ea6\u675f\n\u4e0d\u7b49\u5f0f\u5173\u7cfb\u81ea\u7136\u8054\u60f3\u5230\u5dee\u5206\u7ea6\u675f\u3002\n* \u5bf9\u4e8e\u7b2c\u4e00\u79cd\u4e0d\u7b49\u5f0f\n\u56e0\u4e3a\u7ed9\u5b9a\u4e86\u76f8\u5dee\u7684\u503c\uff0c\u6240\u4ee5\u5efa\u53cc\u5411\u8fb9\uff1a\n$$dis[i] \\leq dis[j] - 1$$\n$$dis[j] \\leq dis[i] + 1$$\n\u901a\u8fc7\u4e24\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u9501\u5b9a $i,j$ \u4e4b\u95f4\u7684\u5dee\u503c\u4e3a $1$\u3002\n* \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u4e0d\u7b49\u5f0f\n\u5efa\u5355\u5411\u8fb9\uff1a\n$$dis[i] \\leq dis[j] + 0$$\n### Floyd\n\u5bb9\u6613\u53d1\u73b0\u6c42\u8d5b\u8f66\u624b\u7684\u6210\u7ee9\u53ef\u80fd\u7684\u53d6\u503c\u6709\u591a\u5c11\u79cd\uff0c\u5176\u5b9e\u5c31\u662f\u8d5b\u8f66\u624b\u6b63\u6574\u6570\u503c\u57df\u5927\u5c0f\u7684\u6700\u5927\u503c\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u7684\u6570\u636e\u5361\u4e86SPFA\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u597d\u7528Floyd\uff0c\u4f46\u662f\u56e0\u4e3a\u76f4\u63a5\u8dd1\uff0c$n^3=216000000$\uff0c\u663e\u7136\u4f1a\u70b8\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u60f3\u5230\u4e86\u7f29\u70b9\u3002\n### \u7f29\u70b9\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5f3a\u8054\u901a\u5206\u91cf\u4e4b\u95f4\u662f\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u5f3a\u8054\u901a\u5206\u91cf\u5185\u8fdb\u884cFloyd\uff0c\u8dd1\u6700\u77ed\u8def\u540e\uff0c\u627e\u51fa\u6700\u957f\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u7684\u503c\u57df\uff0c\u800c\u8fd9\u4e2a\u503c\u57df\u7684\u5927\u5c0f = R - L + 1\uff1b\n### \u7f29\u70b9\u540e\u7684Floyd\n\u8bbe $dis[i][j]$ \u8868\u793a\u4ece$i$ \u5230 $j$ \u7684\u6700\u957f\u8ddd\u79bb\u3002\n\u5728\u6bcf\u4e2a\u9636\u6bb5\u5f00\u59cb\u65f6\uff0c\u5224\u65ad\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\u7684\u4e09\u4e2a\u70b9\u662f\u5426\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u3002\n* \u5bf9\u4e8e\u5408\u6cd5\u7684\u7b54\u6848\uff1a\n\u6c42\u51fa $dis$ \u540e\uff0c\u627e\u51fa\u6bcf\u4e2a\u8fde\u901a\u5757\u5185\u7684\u6700\u957f\u8def\u5f84 $max_{i}$\uff0c\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $max_{i} + 1$\u3002\n\u6240\u4ee5\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\uff1a\n$$\\sum_{i = 1} ^{cnt}max_{i} + 1$$\n* \u5bf9\u4e8e\u4e0d\u5408\u6cd5\u7684\u7b54\u6848\uff1a\n \u5982\u679c\u5b58\u5728\u8d1f\u73af\uff0c\u5219\u65e0\u89e3\u3002Floyd\u5224\u8d1f\u73af\u5148\u521d\u59cb\u5316 $dis[i][i] = 0$\uff0c\u5982\u679c\u5b58\u5728\u8d1f\u73af\uff0c\u90a3\u4e48 $dis[i][i]$ \u7684\u503c\u5c31\u4f1a\u88ab\u4fee\u6539\uff0c\u53ea\u9700\u8981\u5224\u65ad $dis[i][i]$ \u7684\u503c\u662f\u5426\u4e3a $0$\u5c31\u884c\u4e86\u3002\n# \u4ee3\u7801\n\u5982\u679c\u60f3\u4e0d\u5438\u6c27\u8fc7\u7684\u8bdd\uff0c\u53ef\u4ee5\u52a0 $register$\u3002\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N = 605;\nstruct edge {\n\tint next,to;\n}a[N * 100];\nint head[N],dis[N][N],maxn[N],n,m1,m2,a_size = 1,ans = 0;\ninline void add(int u,int v) {\n\ta[++a_size] = (edge){head[u],v};\n\thead[u] = a_size;\n}\nint dfn[N],low[N],sta[N],c[N],top = 0,cnt = 0,num = 0;\nbool ins[N];\nvoid tarjan(int x) {\n\tdfn[x] = low[x] = ++num;\n\tsta[++top] = x,ins[x] = true;\n\tfor(int i = head[x]; i; i = a[i].next) {\n\t\tint y = a[i].to;\n\t\tif(!dfn[y]) {\n\t\t\ttarjan(y);\n\t\t\tlow[x] = min(low[x],low[y]);\n\t\t}\n\t\telse if(ins[y])\n\t\t\tlow[x] = min(low[x],dfn[y]);\n\t}\n\tif(dfn[x] == low[x]) {\n\t\tcnt++; int y; do {\n\t\t\ty = sta[top--]; ins[y] = false;\n\t\t\tc[y] = cnt;\n\t\t}while(y != x);\n\t}\n}\ninline int read() {\n\tint x = 0,flag = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-')flag = -1;ch = getchar();}\n\twhile(ch >='0' && ch <='9'){x = (x << 3) + (x << 1) + ch - 48;ch = getchar();}\n\treturn x * flag;\n}\nint main() {\n\tmemset(dis,0x3f,sizeof(dis));\n\tn = read(),m1 = read(),m2 = read();\n\tfor(int i = 1; i <= n; i++) dis[i][i] = 0;\n\tfor(int i = 1; i <= m1; i++) {\n\t\tint u = read(),v = read();\n\t\tadd(u,v); add(v,u);\n\t\tdis[u][v] = min(dis[u][v],-1);\n\t\tdis[v][u] = min(dis[v][u],1);\n\t}\n\tfor(int i = 1; i <= m2; i++) {\n\t\tint u = read(),v = read();\n\t\tadd(u,v);\n\t\tdis[u][v] = min(dis[u][v],0);\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t\tif(!dfn[i]) tarjan(i);\n\tfor(int k = 1; k <= n; k++) {\n\t\tfor(int i = 1; i <= n; i++) {\n\t\t\tif(c[i] != c[k]) continue;\n\t\t\tfor(int j = 1; j <= n; j++) {\n\t\t\t\tif(c[j] != c[i]) continue;\n\t\t\t\tdis[i][j] = min(dis[i][j],dis[i][k] + dis[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t\tif(dis[i][i]) {\n\t\t\tputs(\"NIE\");\n\t\t\treturn 0;\n\t\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tif(c[j] != c[i]) continue;\n\t\t\tmaxn[c[i]] = max(maxn[c[i]],dis[i][j]);\n\t\t}\n\t}\n\tfor(int i = 1; i <= cnt; i++) ans += maxn[i] + 1;\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1619704114,
        "uid": 385145,
        "name": "\u795e\u7737\u4e4b\u6a31\u82b1",
        "ccfLevel": 4,
        "title": "P3530 \u9898\u89e3"
    },
    {
        "content": "\u601d\u8def\u4e0e\u697c\u4e0b\u5927\u4f6c\u76f8\u4eff\uff0c\u4f46\u662f\u8fd9\u91cc\u7528\u7684\u6c42\u6700\u77ed\u8def\u7684\u65b9\u5f0f\u662fSPFA\uff08\u800c\u4e14\u662f\u6df1\u641c\u7684\u90a3\u4e2a\u7248\u672c\uff0c\u5165\u95e8\u7684\u7ae5\u978b\u4eec\u53ef\u4ee5\u6da8\u6da8\u59ff\u52bf\uff09\uff0c\u7136\u540e\u5224\u65ad\u8d1f\u73af\u7684\u65b9\u5f0f\u4e5f\u7b97\u662f\u633a\u6709\u610f\u601d\u7684\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7528\u666e\u901a\u7684SPFA\u6a21\u677f\u8fc7\u4e0d\u4e86\uff0c\u4e00\u76f4wa\u4e86\u4e00\u4e2a\u70b9\uff0c\u800c\u4e14wa\u7684\u5c31\u662fFloyd\u7b97\u6cd5\u4f1aT\u7684\u90a3\u4e2a\u70b9\uff0c\u4e0dT\u5c31WA\u662f\u4e48\uff1f\uff09\uff0c\u6069\uff0c\u6570\u636e\u8fd8\u7b97\u53cb\u597d\u5c31\u8fd9\u6837\u8fc7\u4e86\uff08\u5728bzoj\u4e0a\u5176\u5b9eFloyd\u4e5f\u80fd\u8fc7\uff0c\u5927\u6982\u662fAC\u6807\u51c6\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u7528\u8fd9\u4e2aSPFA\u80fd\u780d\u63892/3\u7684 \u65f6\u95f4\uff0c\u65f6\u95f4\u4e0a\u8fd8\u662f\u5f88\u53ef\u89c2\u7684\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=700;\ninline int read(){\n\tint x=0; char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0';\n\treturn x; \n}\nint n,m1,m2,ans,top,num,pat,cnt;\nint dfn[M],low[M],blg[M],dis[M][M];\nint stk[M],head[M],last[M],tim[M];\nbool in[M],vis[M];\nstruct Edge{\n\tint to,val,next;\n}e[210000];\ninline void add(int u,int v,int c){\n\t++pat; e[pat].to=v; e[pat].val=c;\n\te[pat].next=head[u]; head[u]=pat;\n}\ninline void tarjan(int u){  //\u8fd9\u4e9b\u4e1c\u897f\u6211\u90fd\u4e0d\u4ecb\u7ecd\u4e86\n\tdfn[u]=low[u]=++num;\n\tstk[++top]=u; in[u]=true;\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(!dfn[v]) tarjan(v), low[u]=min(low[u] , low[v]);\n\t\telse if(in[v]) low[u]=min(low[u] , dfn[v]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\tint j; ++cnt;\n\t\tdo{\n\t\t\tj=stk[top--];\n\t\t\tin[j]=false; blg[j]=cnt;\n\t\t}while(j!=u);\n\t}\n}\nbool SPFA(int s,int u){\n//\u4e4b\u524d\u7528\u7684\u6807\u51c6\u7248SPFA\u5c31\u4e0d\u7ed9\u8fc7\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u5224\u8d1f\u73af\u7684\u65b9\u6cd5\uff08\u67d0\u70b9\u5165\u961f\u6b21\u6570\u8d85\u8fc7n\uff09\u88ab\u5361\u4e86\u8fd8\u662f\u600e\u4e48\u6ef4\u4e86\u53cd\u6b63\u8fd9\u4e2a\u7248\u672c\u7684SPFA\u8fc7\u4e86\uff08\u6df1\u641c\uff09\n\tvis[u]=true;\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to,c=e[i].val;\n\t\tif(blg[u]!=blg[v]) continue;\n\t\tif(dis[s][u]+c<dis[s][v]){\n\t\t\tdis[s][v]=dis[s][u]+c;\n\t\t\tif(vis[v]) return false; //\u8be5\u70b9\u5728\u6df1\u641c\u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u8fc7\u4e86\u5c31return false\n\t\t\telse if(!SPFA(s , v)) return false; //\u6df1\u641c\u5931\u8d25\u8fd4\u56defalse\n\t\t}\n\t}\n\tvis[u]=false;\n\treturn true;\n}\n\nint main(){ //\u4e3b\u51fd\u6570\u5176\u5b9e\u548c\u697c\u4e0b\u5927\u4f6c\u57fa\u672c\u5dee\u4e0d\u4e86\u591a\u5c11\n\tn=read(); m1=read(); m2=read();\n\tmemset(dis , 0x3f , sizeof(dis));\n\tfor(int i=1;i<=n;++i) dis[i][i]=0;\n\tfor(int i=1;i<=m1;++i){\n\t\tint u=read(),v=read();\n\t\tadd(u , v , 1); add(v , u , -1);\n\t}\n\tfor(int i=1;i<=m2;++i){\n\t\tint u=read(),v=read();\n\t\tadd(v , u , 0);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tif(!dfn[i]) tarjan(i);\n\t\tdis[i][i]=0;\n\t}\n\tfor(int i=1;i<=n;++i)\n\tif(!SPFA(i , i)){  //\u6709\u8d1f\u73af\u76f4\u63a5\u8f93\u51fa+return\n\t\tprintf(\"NIE\\n\"); return 0;\n\t}\n\tfor(int k=1;k<=cnt;++k){ //\u8fd9\u91cc\u4e5f\u5dee\u4e0d\u4e86\u591a\u5c11\n\t\tint mn=0;\n\t\tfor(int i=1;i<=n;++i) for(int j=1;j<=n;++j)\n\t\tif(blg[i]==k && blg[j]==k) mn=max(mn , dis[i][j]);\n\t\tans+=mn+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1523516187,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3530 \u3010[POI2012]FES-Festival\u3011"
    }
]