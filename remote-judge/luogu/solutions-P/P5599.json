[
    {
        "content": "\u8c03\u8fd9\u9053\u9898\u8c03\u4e86\u51e0\u5929\u2026\u2026$WA$\u4e86\u65e0\u6570\u6b21\u2026\u2026\n\n### \u524d\u7f6e\u77e5\u8bc6$:$\n\n$AC$\u81ea\u52a8\u673a,\u7ebf\u6bb5\u6811\n\n\u5efa\u8bae\u5bf9$AC$\u81ea\u52a8\u673a\u7684$fail$\u6811\u7684\u610f\u4e49\u6709\u6240\u7406\u89e3\u2026\u2026\u4e0d\u7136\u53ef\u80fd\u4f60\u5c31\u53ea\u4f1a$subtask1,2$\u4e86\n\n## \u9898\u610f\n\n\u6709\u4e00\u4e2a\u957f\u4e3a$n$\u7684\u5b57\u7b26\u4e32$.$\n\n\u6709\u4e00\u4e2a\u5305\u542b$m$\u4e2a\u5355\u8bcd\u7684\u5b57\u5178$s_i,$**\u5b57\u5178\u4e2d\u7684\u5b57\u7b26\u4e32\u957f\u5ea6$|s_i|<=50$**,\u5b57\u7b26\u4e32\u603b\u957f$<=2 *10^5.$\n\n\u6709$q$\u4e2a\u64cd\u4f5c$:$\n\n$1$ $l$ $r$ \u8868\u793a\u67e5\u8be2$s[l,r]$\u5728\u5b57\u5178\u4e2d\u5339\u914d\u7684\u6b21\u6570\n\n$2$ $l$ $r$ $t$ $($ $t$\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32$,\\sum|t| <= 10^6$ $)$ \u8868\u793a\u628a$s[l,r]$\u4fee\u6539\u6210\u5b57\u7b26\u4e32 $t$ \u591a\u6b21\u91cd\u590d\u4e4b\u540e\u7684\u7ed3\u679c\u3002\n\n$n <= 10^6,m,q <= 10^5$\n\n## \u7b97\u6cd51(subtask1,2) \n\n$n,q<=3000$\n\n\u5bf9\u6a21\u5f0f\u4e32\u5efa\u51fa$AC$\u81ea\u52a8\u673a$.$\n\n\u4fee\u6539$O(n)$\u66b4\u529b\u6539$,$\u8be2\u95ee\u5728$Trie$\u56fe\u4e0a$O(n)$\u66b4\u529b\u5373\u53ef$.$\n\n\u590d\u6742\u5ea6$O(62 * \\sum|s_i| + nq)$\n\n## \u7b97\u6cd52(subtask3)\n\n$m=1$\n\n\u4ee4\u8fd9\u4e2a\u552f\u4e00\u7684\u6a21\u5f0f\u4e32\u957f\u5ea6\u4e3a$L$\n\n\u4ee4$f(i)$\u4e3a $s[i-L+1,i]$ \u662f\u5426 $=$ \u6a21\u5f0f\u4e32 \n\n\u67e5\u8be2\u5c31\u662f\u8981\u67e5$f()$\u5728 $[l+len-1,r]$ \u7684\u533a\u95f4\u548c$.$\n\n\u4f46\u662f$emmm$\u6211\u4eec\u8981\u652f\u6301\u533a\u95f4\u4fee\u6539$\u2026\u2026$\n\n\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u4fee\u6539\u64cd\u4f5c\u53ea\u4f1a\u5bf9 $[l,r+L)$ \u7684\u4fe1\u606f\u4ea7\u751f\u5f71\u54cd\u3002$($ \u56e0\u4e3a\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e00\u5b9a$<=L$ $)$\n\n\u6211\u4eec\u53d1\u73b0\u4fee\u6539\u662f\u4e00\u4e2a\u5faa\u73af$,$\u800c\u4e14\u4fe1\u606f$($ \u5373 $f(i)$ $)$\u663e\u7136\u4f1a\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a$|t|$\u7684\u5faa\u73af\u8282$,$\u800c\u4e14\u5b83\u4e00\u5b9a\u4f1a\u5728\u7ecf\u8fc7$L$\u4e2a\u5b57\u7b26\u4e4b\u540e\u51fa\u73b0$.$\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5bf9\u5faa\u73af\u8282\u51fa\u73b0\u4e4b\u524d\u7684\u90e8\u5206\u66b4\u529b$,$\u628a\u4e2d\u95f4\u7684\u90e8\u5206\u6539\u6210\u5faa\u73af\u8282$.$\u7ef4\u62a4\u5faa\u73af\u8282\u5c31\u76f4\u63a5\u7ebf\u6bb5\u6811\u4e0a\u6253\u6807\u8bb0\u5c31\u53ef\u4ee5\u4e86\n\n\u6700\u540e\u56e0\u4e3a\u533a\u95f4\u53f3\u7aef\u70b9\u53f3\u8fb9\u7684\u4fe1\u606f\u4e5f\u4f1a\u53d8\u5316$,$\u6211\u4eec\u5c31\u628a\u533a\u95f4$(r,r+L)$\u7684\u4fe1\u606f\u66b4\u529b\u4fee\u6539\u5373\u53ef\u3002\n\n\u6240\u4ee5\u5355\u6b21\u4fee\u6539\u590d\u6742\u5ea6$O(log_2n+L),$\u603b\u590d\u6742\u5ea6$O(q*(log_2n+L))$\n\n## \u7b97\u6cd53(subtask4)\n\n\u4e0d\u5e26\u4fee\u6539\n\n\u4ee4\u6700\u957f\u7684$|s_i|$\u957f\u5ea6\u4e3a$L$\n\n\u8003\u8651\u6c42\u51fa$f(i)$ \u8868\u793a**\u6240\u6709\u4ee5$i$\u4e3a\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32**\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e4b\u548c$.$\n\n\u90a3\u4e48$f(i)$\u5c31\u662f\u5728$AC$\u81ea\u52a8\u673a\u4e0a\u5339\u914d $s[1:i]$\u65f6$,$\u5230\u8fbe\u7684\u70b9$u$\u5728$fail$\u6811\u4e0a\u7684$size($ \u5373$u$\u5728$fail$\u6811\u4e0a\u5305\u542b\u4e86\u591a\u5c11\u7ec8\u6b62\u8282\u70b9 $)$\n\n\u4e0d\u96be\u53d1\u73b0\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e00\u5b9a$<=L$\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $[l,r]$ \u6211\u4eec\u53ef\u4ee5\u5148\u66b4\u529b\u6c42\u51fa $s[l:l+L-1]$ \u7684**\u6240\u6709\u5b50\u4e32**\u5bf9\u7b54\u6848\u7684\u8d21\u732e$,$\u7136\u540e\u518d\u67e5\u8be2$f$\u5728\u533a\u95f4 $[l+L,r]$\u4e0a\u7684\u533a\u95f4\u548c\u5373\u53ef\u3002 \n\n\n\u590d\u6742\u5ea6$O((n+\\sum|t|)*62 + q*L)$\n\n## \u7b97\u6cd54(\u6240\u6709\u5b50\u4efb\u52a1)\n\n\u5229\u7528\u7b97\u6cd5$3$\u7684\u601d\u60f3$,$\u4e00\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f$\\sum f(i)+g(l,l+L-1),$\n\n\u5176\u4e2d$f(i)$\u7684\u542b\u4e49\u89c1\u4e0a\u6587$,\n$ $g(l,r) = $ $s[l:r]$\u7684**\u6240\u6709\u5b50\u4e32**\u5bf9\u7b54\u6848\u7684\u8d21\u732e$.$\n\n\u90a3\u6211\u4eec\u53ea\u8981\u80fd\u505a\u5230\u5feb\u901f\u7ef4\u62a4$\\sum f(i)$\u5c31\u80fd\u901a\u8fc7\u8fd9\u9053\u9898\u4e86$.$\n\n\u7531\u7b97\u6cd5$2,$\u663e\u7136\u6bcf\u6b21\u533a\u95f4\u4fee\u6539\u4ecd\u7136\u4f1a\u6709\u5faa\u73af\u8282$.$\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5982\u679c\u53ea\u7ef4\u62a4$f$\u7684\u8bdd\u6211\u4eec\u6c42\u4e0d\u51fa\u5faa\u73af\u8282$.$\n\n\u600e\u4e48\u529e\u5462$?$ ~~\u628a\u8fd9\u9898\u4e22\u7ed9\u5154\u961f\u4ed6\u5c31\u4f1a\u544a\u8bc9\u4f60\u9700\u8981\u7ef4\u62a4\u4ec0\u4e48~~\n\n\u6c42\u5faa\u73af\u8282\u5c31\u662f\u8bf4\u6211\u4eec\u5728\u66b4\u529b\u4fee\u6539\u5b8c$[l,l+L-1]$\u4e4b\u540e\u9700\u8981\u77e5\u9053\u5339\u914d $s[1:l+L-1]$ \u5230\u4e86$AC$\u81ea\u52a8\u673a\u4e0a\u7684\u54ea\u4e2a\u70b9$.$ \u4e5f\u5c31\u662f\u8bf4$,$\u6211\u4eec\u9700\u8981\u7ef4\u62a4$u.$\n\n\u6211\u4eec\u8003\u8651\u5728\u7ebf\u6bb5\u6811\u8868\u793a\u533a\u95f4$[l,r]$\u7684\u8282\u70b9\u7ef4\u62a4\u4e24\u4e2a\u4fe1\u606f$:$\n\n$u$ \u8868\u793a\u5339\u914d$s[1:r]$\u65f6\u5339\u914d\u5230\u4e86$AC$\u81ea\u52a8\u673a\u4e0a\u7684\u54ea\u4e2a\u70b9$;$\n\n$c$ \u8868\u793a\u533a\u95f4\u7684$\\sum f(i)$\n\n\u7136\u540e$,$\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9$[i,i]$\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u70b9\u662f\u4ec0\u4e48\u5b57\u7b26$($ \u65b9\u4fbf\u7ef4\u62a4 $u$ \u548c $c$ $)$\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u6b21\u67e5\u8be2$,$\u6211\u4eec\u53ea\u8981$[l,l+L)$\u66b4\u529b,$[l+L,r]$\u67e5$c$\u5c31\u53ef\u4ee5\u4e86\n\n\u600e\u4e48\u4fee\u6539\u5462$?$\n\n\u8fd8\u662f\u66b4\u529b\u4fee\u6539$[l,l+L)$\n\n\u7136\u540e\u5148\u67e5\u4e00\u4e0b$[l+L-1,l+L-1]$\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u7684$u,$\u5e76\u7528$u$\u6765\u6c42\u51fa\u5faa\u73af\u8282$.$\n\n\u7136\u540e\u5bf9\u533a\u95f4$[l+L,r]$\u505a\u4e00\u4e0b\u533a\u95f4\u4fee\u6539$.$\n\n\u6700\u540e\u518d\u628a\u533a\u95f4$[r+1,r+L)$\u7684\u6240\u6709\u7684$u$\u518d\u66b4\u529b\u4fee\u6539\u4e00\u4e0b\n\n\u6ca1\u4e86$?$\u6ca1\u4e86$.$\n\n\u590d\u6742\u5ea6$O(62*\\sum|s_i| + q*(logn+L))$\n\n\u7136\u800c\u8fd9\u8bf4\u8d77\u6765\u7b80\u5355\u5b9e\u9645\u4e0a\u5e76\u4e0d\u597d\u5199$...$\n\n### \u4e00\u4e9b~~\u73c2\u6015~~\u7684\u4ee3\u7801\u7ec6\u8282(\u9488\u5bf9\u7b97\u6cd54)\n\n$1:$ \u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u505a\u4efb\u4f55\u4fee\u6539$[a,b]$\u4e4b\u524d$,$\u5e94\u8be5\u5148\u628a$a-1$\u7684\u6807\u8bb0\u4f20\u5230\u53f6\u5b50\u8282\u70b9$($ \u6216\u8005\u63d0\u524d\u67e5\u8be2\u597d$u_{a-1}$ $)$\n\n$2:$ \u4f60\u4f1a\u53d1\u73b0\u6709\u4e00\u5927\u5806\u8981\u7ef4\u62a4\u7684\u4e1c\u897f$u,c,f,...$\u8fd8\u6709\u4e00\u5806\u5b57\u7b26\u4e32\u548c$AC$\u81ea\u52a8\u673a$...$\u6240\u4ee5\u6ce8\u610f\u4e0b\u53d8\u91cf\u91cd\u540d$!$ \u5efa\u8bae\u5c01\u88c5\u4e00\u4e0b$,$\u6211\u5199\u7684\u65f6\u5019\u6ca1\u5c01\u88c5\u7ebf\u6bb5\u6811$,$\u5199\u5230\u81ea\u95ed$...$\n\n$3:$ \u4e3a\u4ec0\u4e48\u590d\u6742\u5ea6\u662f$O(logn+L)?$\u66b4\u529b\u4fee\u6539\u65f6$,$\u6211\u4eec\u9700\u8981\u4e00\u6b21\u4fee\u6539\u5230\u6240\u6709\u8981\u66b4\u529b\u4fee\u6539\u7684\u53f6\u5b50\u8282\u70b9$,$\u800c\u4e0d\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u505a\u4e00\u904d\u5355\u70b9\u4fee\u6539$,$\u5426\u5219\u7edd\u5bf9$T$\u98de$...$\n\n$4:$ \u6ce8\u610f\u4e00\u4e0b\u4f60\u7684\u6253\u6807\u8bb0 $!$ $!$ $!$ \u8fd9\u4e2a\u5730\u65b9\u7ec6\u8282\u975e\u5e38\u591a $!$ $!$ $!$ \n\n$5:$ \u5982\u679c\u89c9\u5f97$L$\u4e2a\u5b57\u7b26\u4e4b\u540e\u627e\u5faa\u73af\u8282\u592a\u70e6\u4e86$,$\u4f60\u53ef\u4ee5\u9009\u62e9\u628a$L$\u53d8\u6210\u4e00\u4e2a\u6bd4$50$\u5927\u7684$|t|$\u7684\u500d\u6570$.$\n\n\n\u4e0a\u4ee3\u7801$:$ $($ \u7ebf\u6bb5\u6811\u90e8\u5206\u6709\u6ce8\u91ca $)$\n\n\u672c\u4eba\u7801\u98ce\u6709\u70b9\u4e11$,$\u6c42\u8f7b\u55b7$...$\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\ninline char Getchar(){\n\tstatic char buf[3000000],*in = buf,*out = buf;\n\tif (in == out) out = (in=buf) + fread(buf,1,3000000,stdin); return *in++;\n}\ninline int read(){\n    static int x; x = 0; static char c; c = Getchar();\n    while (!isdigit(c)) c = Getchar();\n    while (isdigit(c)) x = x * 10 + c - '0',c = Getchar();\n    return x;\n}\ninline void write(LL x){ if (x > 9) write(x/10); putchar(x%10+'0'); }\nshort trans[256];\ninline void build_trans(){\n\tstatic char c; static int i = 0;\n\tfor (i = 0; i < 256; ++i) trans[i] = -1;\n\tfor (i = 0,c = '0'; c <= '9'; ++c) trans[c] = i++;\n\tfor (c = 'a'; c <= 'z'; ++c) trans[c] = i++;\n\tfor (c = 'A'; c <= 'Z'; ++c) trans[c] = i++;\n}\ninline short Getc0(){ static char c; c = Getchar(); while (trans[c] == -1) c = Getchar(); return trans[c]; }\ninline short Getc1(){ static char c; c = Getchar(); while (c != '\\n' && trans[c] == -1) c = Getchar(); return trans[c]; }\nconst int N = 1000050,M = 100050,Q = 100050,Ls = 200050;\nint n,m,q; short a[N];\nstruct Trie{\n\tint fail[Ls],f[Ls],ch[Ls][62],cnt;\n\tinline void build(){\n\t\tstatic int i,x; queue<int>q; while (!q.empty()) q.pop();\n\t\tfor (i = 0; i < 62; ++i) if (ch[0][i]) q.push(ch[0][i]),fail[ch[0][i]] = 0;\n\t\twhile (!q.empty()){\n\t\t\tx = q.front(),q.pop(),f[x] += f[fail[x]];\n\t\t\tfor (i = 0; i < 62; ++i)\n\t\t\t\tif (ch[x][i]) fail[ch[x][i]] = ch[fail[x]][i],q.push(ch[x][i]);\n\t\t\t\telse ch[x][i] = ch[fail[x]][i];\n\t\t}\n\t}\n\tinline void ins(){\n\t\tstatic short c; static int now; now = 0,c = Getc1(); while (c == -1) c = Getc1();\n\t\twhile (c ^ -1){ if (!ch[now][c]) ch[now][c] = ++cnt; now = ch[now][c],c = Getc1(); } ++f[now];\n\t}\n}T;\nint lent[Q],cntt; vector<short>t[Q]; vector<int>tu[Q],tc[Q]; vector<LL>tsc[Q];\ninline void Gett(int id){\n\tstatic short c; c = Getc1(); while (c == -1) c = Getc1(); lent[id] = 0;\n\twhile (c != -1) ++lent[id],t[id].push_back(c),c = Getc1();\n\ttu[id].resize(lent[id]); tc[id].resize(lent[id]); tsc[id].resize(lent[id]);\n}\ninline void maker(int id,int s){\n\tstatic int i;\n\tfor (tu[id][0] = T.ch[s][t[id][0]],i = 1; i < lent[id]; ++i) tu[id][i] = T.ch[tu[id][i-1]][t[id][i]];\n\tfor (i = 0; i < lent[id]; ++i) tc[id][i] = T.f[tu[id][i]];\n\tfor (tsc[id][0] = tc[id][0],i = 1; i < lent[id]; ++i) tsc[id][i] = tsc[id][i-1] + tc[id][i];\n}\nLL dc[N<<2]; int node[N],dl[N<<2],du[N<<2],tag[N<<2],tpos[N<<2]; short dv[N<<2];\ninline void up(int o){ dc[o] = dc[o<<1] + dc[o<<1|1],du[o] = du[o<<1|1]; }\ninline void Build(int o,int l,int r){\n\tdl[o] = r-l+1,tag[o] = -1;\n\tif (l^r){ int mid = l+r>>1; Build(o<<1,l,mid); Build(o<<1|1,mid+1,r); up(o); return; }\n\tnode[l] = o,dv[o] = a[l],du[o] = T.ch[du[node[l-1]]][dv[o]],dc[o] = T.f[du[o]];\n}\ninline void Tag(int o,int id,int p){\n\tstatic int siz; siz = dl[o];\n\ttag[o] = id,tpos[o] = p,dv[o] = t[id][p];\n\tif (p+siz-1 < lent[id]){\n\t\tdu[o] = tu[id][p+siz-1];\n\t\tdc[o] = tsc[id][p+siz-1] - (p?tsc[id][p-1]:0);\n\t\treturn;\n\t}\n\tdc[o] = tsc[id][lent[id]-1] - (p?tsc[id][p-1]:0);\n\tsiz -= lent[id]-p;\n\tdc[o] += 1ll*siz/lent[id]*tsc[id][lent[id]-1];\n\tsiz %= lent[id];\n\tdc[o] += (siz?tsc[id][siz-1]:0);\n\tdu[o] = tu[id][(lent[id]-1+siz)%lent[id]];\n}\ninline void down(int o){\n\tif (tag[o] != -1){\n\t\tTag(o<<1,tag[o],tpos[o]);\n\t\tTag(o<<1|1,tag[o],(tpos[o]+dl[o<<1])%lent[tag[o]]);\n\t\ttag[o] = -1;\n\t}\n}\nint p,ll,rr,vv,nowu; LL qans; short addc[N<<2]; int lenc;\ninline void Ask1(int o,int l,int r){ // ask the u for [1,p]\n\tif (l^r){ down(o); int mid = l+r>>1; if (p <= mid) Ask1(o<<1,l,mid); else Ask1(o<<1|1,mid+1,r); return; }\n\tqans = du[o];\n}\ninline void Ask2(int o,int l,int r){ // ask the sumc for [ll,rr]\n\tif (ll<=l&&rr>=r){ qans+=dc[o]; return; }\n\tdown(o); int mid = l+r>>1; if (ll <= mid) Ask2(o<<1,l,mid); if (rr > mid) Ask2(o<<1|1,mid+1,r);\n}\ninline void Ask3(int o,int l,int r){ // ask the answer for [ll,rr]\n\tif (l^r){ down(o); int mid=l+r>>1; if (ll<=mid)Ask3(o<<1,l,mid); if (rr>mid) Ask3(o<<1|1,mid+1,r); return; }\n\tnowu = T.ch[nowu][dv[o]],qans += T.f[nowu];\n}\ninline void Add1(int o,int l,int r){ // bl change [l,l+len)\n\tif (l^r){ down(o); int mid = l+r>>1; if (ll <= mid) Add1(o<<1,l,mid); if (rr>mid) Add1(o<<1|1,mid+1,r); up(o); return; }\n\tdv[o] = addc[++lenc],du[o] = T.ch[du[node[l-1]]][dv[o]],dc[o] = T.f[du[o]];\n}\ninline void Add2(int o,int l,int r){ // bl update (r,r+len]\n\tif (l^r){ down(o); int mid = l+r>>1; if (ll <= mid) Add2(o<<1,l,mid); if (rr>mid) Add2(o<<1|1,mid+1,r); up(o); return; }\n\tdu[o] = T.ch[du[node[l-1]]][dv[o]],dc[o] = T.f[du[o]];\n}\ninline void Add3(int o,int l,int r){ // modify [l+len,r]\n\tif (ll <= l && rr >= r){ Tag(o,vv,(l-ll)%lent[vv]); return; }\n\tdown(o); int mid = l+r>>1; if (ll <= mid) Add3(o<<1,l,mid); if (rr>mid) Add3(o<<1|1,mid+1,r); up(o);\n}\n\nconst int DL = 50;\nint main(){\n\tbuild_trans();\n\tint i,j,op,l,r,nll,llen;\n\tn = read(),m = read(),q = read();\n\tfor (i = 1; i <= n; ++i) a[i] = Getc0();\n\tT.cnt = 0; while (m--) T.ins(); T.build();\n\tBuild(1,1,n);\n\twhile (q--){\n\t\top = read(),l = read(),r = read();\n\t\tif (op == 1){\n\t\t\tif (r-l+1 <= DL){\n\t\t\t\tll = l,rr = r,nowu = qans = 0,Ask3(1,1,n),write(qans),putchar('\\n');\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tll = l,rr = l+DL-1,nowu = qans = 0,Ask3(1,1,n);\n\t\t\tll = l+DL,rr = r,Ask2(1,1,n),write(qans),putchar('\\n');\n\t\t}\n\t\telse{\n\t\t\tGett(++cntt); nll = lent[cntt];\n\t\t\tif (r-l+1 <= DL+nll){\n\t\t\t\tfor (lenc = 0,i = 1,j = 0; i <= r-l+1; ++i,++j){\n\t\t\t\t\tif (j == lent[cntt]) j = 0;\n\t\t\t\t\taddc[++lenc] = t[cntt][j];\n\t\t\t\t}\n\t\t\t\tlenc = 0;\n\t\t\t\tif (l>1) p = l-1,Ask1(1,1,n);\n\t\t\t\tll = l,rr = r,Add1(1,1,n);\n\t\t\t\tp = r,Ask1(1,1,n);\n\t\t\t\tll = r+1,rr = r+DL,Add2(1,1,n);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (lenc = 0,i = 1,j = 0; i <= DL+nll; ++i,++j){\n\t\t\t\tif (j == lent[cntt]) j = 0;\n\t\t\t\taddc[++lenc] = t[cntt][j];\n\t\t\t}\n\t\t\t--j; while (j != lent[cntt]-1){ ++j; addc[++lenc] = t[cntt][j]; }\n\t\t\tllen = lenc; lenc = 0;\n\t\t\tif (r-l+1 <= llen){\n\t\t\t\tif (l>1) p = l-1,Ask1(1,1,n);\n\t\t\t\tll = l,rr = r,Add1(1,1,n);\n\t\t\t\tp = rr,Ask1(1,1,n);\n\t\t\t\tll = r+1,rr = r+DL,Add2(1,1,n);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (l>1) p = l-1,Ask1(1,1,n);\n\t\t\tll = l,rr = l+llen-1,Add1(1,1,n);\n\t\t\t\n\t\t\tqans = 0,p = l+llen-1,Ask1(1,1,n); maker(cntt,qans);\n\t\t\tll = l+llen,rr = r,vv = cntt,Add3(1,1,n);\n\t\t\tp = rr,Ask1(1,1,n);\n\t\t\tll = r+1,rr = r+DL,Add2(1,1,n);\n\t\t}\n\t}\n    return 0;\n}\n```",
        "postTime": 1572089828,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5599 \u3010\u3010XR-4\u3011\u6587\u672c\u7f16\u8f91\u5668\u3011"
    },
    {
        "content": "> [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5599)\u3002\n\n> \u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6587\u672c\u4e32 $a$ \u548c\u6709 $m$ \u4e2a\u5355\u8bcd\u7684\u5b57\u5178 $s_i$\u3002$q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6c42\u51fa\u5b57\u5178\u5185\u6240\u6709\u5355\u8bcd\u5728 $a[l,r]$ \u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6216\u5c06 $a[l,r]$ \u66ff\u6362\u4e3a $t$ \u4e0d\u65ad\u91cd\u590d\u7684\u7ed3\u679c\u3002\n\n> $n,\\sum |t|\\leq10^6$\uff0c$m,q\\leq 10^5$\uff0c$|s|\\leq 50$\uff0c$\\sum |s_i|\\leq 2\\times 10^5$\u3002\n\n---\n\n\u5047\u8bbe\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u4e14 $m=1$\uff0c\u5373\u5b57\u5178\u4e2d\u53ea\u6709\u4e00\u4e2a\u5355\u8bcd\uff0c\u8bb0\u8be5\u5355\u8bcd\u957f\u5ea6\u4e3a $L$\u3002\n\u4e00\u4e2a\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u53ef\u4ee5\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e $i$\uff0c$a[i-L+1,i]$ \u662f\u5426\u5339\u914d $s_1$\uff0c\u8bb0\u4e3a $f_i\\ (f_1,f_2,\\cdots,f_{L-1}=0)$\uff0c\u66b4\u529b\u5339\u914d\u5373\u53ef\u3002\n\n\u67e5\u8be2\u65f6\uff0c\u56e0\u4e3a $[l,l],[l,l+1],\\cdots,[l,l+L-2]$ \u957f\u5ea6\u4e0d\u591f\uff0c\u663e\u7136\u65e0\u6cd5\u5339\u914d $s_1$\uff0c\u53c8\u56e0\u4e3a $[x-L+1,x]\\ (x\\geq l+L-1)$ \u5339\u914d\u65f6\u4e0d\u53d7\u5c0f\u4e8e $l$ \u7684\u4f4d\u7f6e\u7684\u5f71\u54cd\uff0c\u5373**\u4e0d\u4f1a\u56e0\u4e3a $a[1,l-1]$ \u6d88\u5931\u800c\u5bfc\u81f4 $[x-L+1,x]$ \u7684\u5339\u914d\u60c5\u51b5\u6539\u53d8\uff08\u7531\u4e8e $x\\geq l+L-1$\uff0c\u6240\u4ee5 $x-L+1\\geq l$\uff09**\u3002\u56e0\u6b64\u76f4\u63a5\u67e5\u8be2 $\\sum_{j=x}^rf_j$ \u5373\u53ef\u3002\u76f4\u63a5\u524d\u7f00\u548c\u7ef4\u62a4\u53ef\u4ee5\u505a\u5230 $\\mathcal{O}(q+nL)$\uff0c\u4f7f\u7528 KMP \u53ef\u4ee5\u4f18\u5316\u5230 $\\mathcal{O}(q+n)$\u3002\n\n---\n\nSubtask #3\uff1a\u5982\u679c\u6709\u4fee\u6539\u64cd\u4f5c\u5462\uff1f\u4e8b\u60c5\u5c31\u53d8\u5f97\u65e0\u6bd4\u9ebb\u70e6\u4e86\u3002\u6628\u5929\u5c1d\u8bd5\u5199\u4e86\u4e00\u4e0b\uff0c\u751a\u81f3\u6bd4\u6b63\u89e3\u8fd8\u96be\u5199\uff08doge\uff09\u3002\n\n\u9996\u5148\u5f97\u5904\u7406\u8fd9\u4e2a\u5faa\u73af\u7684 $t$\u3002~~\u5f53\u7136\uff0c\u6211\u4e0d\u77e5\u9053\u600e\u4e48\u5904\u7406\uff0c\u6240\u4ee5\u770b\u4e86\u773c s_r_f \u7684\u9898\u89e3\u3002~~ \u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u8bf4 **\u201c\u4e0e\u6587\u4ef6\u76f8\u6bd4\uff0c\u5355\u8bcd\u7684\u957f\u5ea6\u662f\u975e\u5e38\u5c0f\u7684\uff08$L\\leq 50$\uff09\u201d**\uff0c\u90a3\u4e48\u5c31\u597d\u597d\u5229\u7528\u4e00\u4e0b\u8fd9\u4e2a\u6027\u8d28\u3002\n\n\u9996\u5148\uff0c$f_{[l,l+L-2]}$ \u80af\u5b9a\u662f\u6ca1\u6709\u4ec0\u4e48\u597d\u65b9\u6cd5\uff0c\u53ea\u80fd\u66b4\u529b\u786c\u505a\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e00\u90e8\u5206\u7684\u60f3\u6cd5\u662f\uff1a\u4ece $l-L+1$ \u5f00\u59cb\u8dd1 KMP\uff0c\u5339\u914d\u5230 $l+L-2$ \u5e76\u66b4\u529b\u66f4\u65b0 $f_{[l,l+L-2]}$ \u5373\u53ef\u3002\u4e3a\u4ec0\u4e48\u8981\u4ece $l-L+1$ \u800c\u4e0d\u662f $l$ \u5f00\u59cb\u8dd1\uff1a$f_l$ \u662f\u4e0e $a_{l-L+1}$ \u6709\u5173\u7684\uff0c\u6240\u4ee5\u4ece $l$ \u5f00\u59cb\u8dd1\u4f1a\u5bfc\u81f4 $f_{[l,l+L-2]}$ \u5168\u4e3a $0$\uff0c\u8fd9\u663e\u7136\u662f\u9519\u8bef\u7684\u3002\n\n\u540c\u6837\u7684\uff0c\u5bf9\u4e8e $f_{[r+1,r+L-1]}$\uff0c\u4ece $r-L+2$ \u5f00\u59cb\u8dd1 KMP\uff0c\u4e00\u76f4\u5339\u914d\u5230 $r+L-1$ \u5e76\u66b4\u529b\u66f4\u65b0 $f_{[r+1,r+L-1]}$ \u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u5904\u7406\u4e2d\u95f4\u90a3\u4e00\u5927\u5768\u5faa\u73af\u7684 $t$\uff0c\u8bb0\u5176\u957f\u5ea6\u4e3a $T$\u3002\u6709\u4e00\u4e2a\u5e76\u4e0d\u663e\u7136\u4f46\u5f88\u597d\u7406\u89e3\uff0c\u540c\u65f6\u4e5f\u662f\u6700\u5173\u952e\u7684\u6027\u8d28\uff1a**\u4fee\u6539\u8fc7\u540e\uff0c$f_i=f_{i+T}\\ (l+L-1\\leq i\\leq r-T+1)$\uff0c\u4e5f\u5c31\u662f\u8fd9\u90e8\u5206 $f$ \u4f1a\u4ea7\u751f\u957f\u5ea6\u4e3a $T$ \u7684\u5faa\u73af\u8282**\u3002\u6839\u636e\u9898\u76ee\u6240\u7ed9\u6761\u4ef6\uff0c\u6709 $a_{[i,i-L+1]}=a_{[i+T,(i+T)-L+1]}$\uff08$i$ \u7684\u8303\u56f4\u540c\u4e0a\uff09\uff0c\u6240\u4ee5\u663e\u7136\u3002\u56e0\u6b64\uff0c\u6c42\u51fa\u5faa\u73af\u8282\u5e76\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u8bf4\u8d77\u6765\u7b80\u5355\uff0c\u8fd8\u6709\u5f88\u591a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n- Q1\uff1a\u5982\u4f55\u7ef4\u62a4\u5faa\u73af\u8282\uff1f\n\n  A1\uff1a\u4e00\u4e2a\u5faa\u73af\u8282\u4fe1\u606f\u4e3b\u8981\u5c31\u662f\u5faa\u73af\u8282\u7684**\u5f00\u5934\u4f4d\u7f6e\uff0c\u957f\u5ea6\u548c\u5faa\u73af\u8282\u5185\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\u3002** \u56e0\u6b64\uff0c\u9700\u8981\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5faa\u73af\u8282 $id$\uff08\u8868\u793a\u8fd9\u662f\u7b2c $id$ \u6b21\u4fee\u6539\u5f62\u6210\u7684\u5faa\u73af\u8282\uff09\u7684\u5f00\u5934\u4f4d\u7f6e $lp_{id}$\uff0c\u957f\u5ea6 $len_{id}$\uff0c\u4ee5\u53ca\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $i$ \u4e0a\u7684\u503c $d_{id,i}$\u3002**\u5faa\u73af\u8282\u5185\u4f4d\u7f6e\u4ece $0$ \u5f00\u59cb\u6807\u53f7**\u3002\n  \n  \u5728\u7ebf\u6bb5\u6811\u533a\u95f4 $[l,r]$ \u7684\u61d2\u6807\u8bb0\u5185\u7ef4\u62a4\u4e24\u4e2a\u4fe1\u606f\uff1a$id$ \u548c $hd$\u3002$id$ \u8868\u793a\u8be5\u6807\u8bb0\u662f\u7b2c $id$ \u6b21\u4fee\u6539\u5f62\u6210\u7684\u5faa\u73af\u8282\uff08**\u4e0d\u662f\u7b2c $id$ \u4e2a\u5faa\u73af\u8282**\uff09\uff0c$hd$ \u8868\u793a\u8be5\u533a\u95f4\u7684\u8d77\u59cb\u4f4d\u7f6e $l$ \u5728\u8be5\u5faa\u73af\u8282\u4e2d\u7684\u4f4d\u7f6e\u3002\n  \n  \u5728 pushdown \u7684\u65f6\u5019\uff0c\u5047\u8bbe\u6211\u4eec\u4f20\u5165\u4e86\u4e09\u4e2a\u53c2\u6570 $l,r,x$ \u8868\u793a\u4ece\u533a\u95f4 $[l,r]$ \u4e0b\u4f20\uff0c\u8be5\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u5185\u7f16\u53f7\u4e3a $x$\u3002\u5148\u6c42\u51fa\u5de6\u533a\u95f4\u548c\u53f3\u533a\u95f4\u7684\u5206\u754c\u70b9 $m=\\lfloor\\frac{l+r}{2}\\rfloor$\uff0c\u518d\u6c42\u51fa\u53f3\u533a\u95f4 $[m+1,r]$ \u7684\u8d77\u59cb\u4f4d\u7f6e $m+1$ \u5728\u5faa\u73af\u8282\u7684\u4f4d\u7f6e\uff0c\u8bb0\u4e3a $mid$\uff0c\u5219\u4e0d\u96be\u6c42\u51fa $mid=(hd+(m+1)-l)\\bmod len_{id}$\uff0c\u7136\u540e\u5c06 $id,hd$ \u4e0e $id,mid$ \u7684\u61d2\u6807\u8bb0\u5206\u522b\u8d4b\u7ed9 $[l,m]$ \u4e0e $[m+1,r]$\uff0c\u5e76\u66f4\u65b0\u5176\u7ef4\u62a4\u7684\u533a\u95f4 $f$ \u4e4b\u548c\uff1a\n  \n  ```cpp\n    void push(int l,int r,int x){ // pushdown\n\t\tif(laz[x].id){\n\t\t\tint m=l+r>>1;\n\t\t\tint id=laz[x].id,hd=laz[x].hd;\n\t\t\tint mid=(hd+(m-l+1))%len[id];\n\t\t\tmark(l,m,x<<1,id,hd);\n\t\t\tmark(m+1,r,x<<1|1,id,mid);\n\t\t\tval[x]=val[x<<1]+val[x<<1|1];\n\t\t\tlaz[x].id=0;\n\t\t}\n    }\n  ```\n  \n  \u5176\u4e2d `mark(l,r,x,id,hd)` \u8868\u793a\u7ed9\u5728\u7ebf\u6bb5\u6811\u5185\u7f16\u53f7\u4e3a $x$ \u7684\u533a\u95f4 $[l,r]$ \u6253\u4e0a $id,hd$ \u7684\u61d2\u6807\u8bb0\u3002\u6b64\u65f6\u6211\u4eec\u6c42\u51fa\u8be5\u533a\u95f4\u672b\u4f4d\u7f6e\u5728\u5faa\u73af\u8282 $id$ \u4e2d\u7684\u4f4d\u7f6e $tl=(hd+(r-l))\\bmod len_{id}$\uff0c\u5e76\u6c42\u51fa $[l,r]$ \u95f4\u5171\u6709\u591a\u5c11\u4e2a\u5faa\u73af\u8282  $id$\uff0c\u7136\u540e\u66f4\u65b0\u5373\u53ef\u3002\n  \n  ```cpp\n   void mark(int l,int r,int x,int id,int hd){ // mark lazytag & update\n\t\tlaz[x]={id,hd};\n\t\tint ori=l-hd,tl=(r-ori)%len[id],rid=(r-ori)/len[id];\n\t\tif(rid==0)val[x]=pre[id][tl]-(hd?pre[id][hd-1]:0);\n\t\telse val[x]=pre[id][tl]+(rid*sum[id]-(hd?pre[id][hd-1]:0));\n\t} \n  ```\n  \n  \u4e00\u4e9b\u4ee3\u7801\u8bf4\u660e\uff1a$ori$ \u8868\u793a $l$ \u6240\u5728\u7684\u5faa\u73af\u8282\u7684\u5f00\u5934\uff0c\u5e76\u5047\u8bbe\u5176\u4e3a\u7b2c $0$ \u4e2a\u5faa\u73af\u8282\u3002$rid$ \u8868\u793a $r$ \u5728\u7b2c $rid$ \u4e2a\u5faa\u73af\u8282\u5185\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684 $pre_{id,i}$ \u662f $pre_{id}$ \u7684\u524d\u7f00\u548c\u3002$sum_{id}$ \u8868\u793a\u5faa\u73af\u8282 $id$ \u6240\u6709\u4f4d\u7f6e\u4e0a\u7684\u548c\uff0c\u5373 $sum_{id}=pre_{id,len_{id}-1}$\u3002\n  \n- Q2\uff1a\u66b4\u529b\u5339\u914d\u65f6\u600e\u4e48\u6c42\u51fa $a$ \u5f53\u524d\u7684\u5185\u5bb9\uff1f\n\n  \u9996\u5148\uff0c\u9700\u8981\u6c42\u51fa\u7684 $a$ \u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u8bbe\u5176\u4e3a $[l,r]$\u3002\u90a3\u4e48\u5728\u7ebf\u6bb5\u6811\u4e0a**\u6309\u5e8f\u904d\u5386**\u6bcf\u4e00\u4e2a\u533a\u95f4 $[x,x]\\ (l\\leq x\\leq r)$\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u7b97\u5f53\u524d\u533a\u95f4 $[l',r']\\subseteq[l,r]$ \u4e5f\u4e0d\u8fd4\u56de\uff0c\u76f4\u5230\u8bbf\u95ee\u5230\u53f6\u5b50\u7ed3\u70b9 $[x,x]$\u3002\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u8bbf\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(\\log n+len)$\u3002\u53c8\u56e0\u4e3a\u9700\u8981\u6c42\u51fa\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 $2L$\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(q(\\log n+L))$\u3002\n  \n  \u82e5\u8be5\u533a\u95f4\u6709\u6807\u8bb0 $id,hd$\uff0c\u90a3\u4e48\u8be5\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u5e94\u4e3a $t_{id,hd}$\uff0c\u5373\u7b2c $id$ \u6b21\u4fee\u6539\u65f6\u7ed9\u51fa\u7684\u5b57\u7b26\u4e32 $t_{id}$ \u7684\u7b2c $hd$ \u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u3002\u5426\u5219\u8be5\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u5e94\u4e3a $a_x$\u3002\n  \n  ```cpp\n    void forms(int l,int r,int ql,int qr,int x){ // form current string [ql,qr]\n\t\tif(ql>qr)return;\n\t\tif(l==r){\n\t\t\tif(laz[x].id)tmp+=qt[laz[x].id][laz[x].hd];\n\t\t\telse tmp+=ct[l-1];\n\t\t\treturn;\n\t\t} int m=l+r>>1; push(l,r,x);\n\t\tif(ql<=m)forms(l,m,ql,qr,x<<1);\n\t\tif(m<qr)forms(m+1,r,ql,qr,x<<1|1);\n\t}\n  ```\n  \n- Q3\uff1a\u66b4\u529b\u5339\u914d\u6c42\u51fa $f$ \u540e\u600e\u4e48\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\uff1f\n\n  A3\uff1a\u540c\u6837\uff0c\u9700\u8981\u66f4\u65b0\u7684 $f$ \u4e5f\u662f\u4e00\u6bb5\u533a\u95f4 $[l,r]$\u3002\u5982\u6cd5\u70ae\u5236\uff0c\u6309\u5e8f\u904d\u5386\u6bcf\u4e00\u4e2a\u533a\u95f4 $[x,x]\\ (l\\leq x\\leq r)$\uff0c\u5e76\u4fee\u6539 $f$ \u7684\u503c\u5373\u53ef\u3002\n  \n  **\u7531\u4e8e\u6c42\u51fa $a$ \u7684\u5185\u5bb9\u65f6\u9700\u8981\u6bcf\u4e2a\u8282\u70b9\u7684\u6807\u8bb0\uff0c\u800c\u66b4\u529b\u4fee\u6539 $f$ \u7684\u4f4d\u7f6e\u6709\u7684\u9700\u8981\u6253\u6807\u8bb0\uff0c\u5982 $[l,l+L-2]$\uff0c\u6709\u7684\u4e0d\u9700\u8981\uff0c\u5982 $[r+1,r+L-1]$\uff0c\u6240\u4ee5\u9700\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\u3002**\n  \n  ```cpp\n    void modifyc(int l,int r,int ql,int qr,int x,bool tg){ // brute force : change\n\t\tif(ql>qr)return;\n\t\tif(l==r){\n\t\t\tval[x]=f[l];\n\t\t\tif(tg)laz[x]={id,(l-lpos)%len[id]};\n\t\t\treturn;\n\t\t} int m=l+r>>1; push(l,r,x);\n\t\tif(ql<=m)modifyc(l,m,ql,qr,x<<1,tg);\n\t\tif(m<qr)modifyc(m+1,r,ql,qr,x<<1|1,tg);\n\t\tval[x]=val[x<<1]+val[x<<1|1];\n\t} \n  ```\n\n\u8fd8\u6709\u4e00\u4e9b\u6ce8\u610f\u70b9\uff08\u8e29\u8fc7\u7684\u5751\uff09\uff1a\n\n- \u6b63\u5982 s_r_f \u6240\u8bf4\uff0c\u4e3a\u4e86\u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5de6\u8fb9\u66b4\u529b\u5339\u914d\u7684\u533a\u95f4 $[l-L+1,l+L-2]$ \u7684\u53f3\u7aef\u70b9\u5411\u53f3\u7a0d\u5fae\u79fb\u52a8\u4e00\u70b9\uff0c\u4f7f\u5f97\u65b0\u7684\u53f3\u7aef\u70b9 $led$ \u521a\u597d\u662f\u4e00\u6bb5\u5faa\u73af\u8282\u7684\u7ed3\u5c3e\u3002\u540c\u65f6\uff0c**\u4e3a\u4e86\u6c42\u51fa\u5faa\u73af\u8282\uff0c\u8fd8\u8981\u518d\u5411\u53f3\u5339\u914d $T$ \u4e2a\u4f4d\u7f6e\u3002**\n- \u5982\u679c\u533a\u95f4\u7684\u957f\u5ea6\u592a\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u5339\u914d\u3002\n- \u9700\u8981\u5148\u6c42\u51fa $sum_{id}$ \u518d\u66f4\u65b0\uff0c\u56e0\u4e3a\u66f4\u65b0\u65f6\u9700\u8981\u7528\u5230 $sum_{id}$\u3002\n\n\u8fd9\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal(q(\\log n+L)+\\sum T)$\u3002\n\n---\n\n\u770b\u5230\u8fd9\u91cc\uff0c\u4f60\u53ef\u80fd\u4ee5\u4e3a\u6211\u5df2\u7ecf\u8bb2\u5b8c\u4e86\u3002\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\uff0c\u8fd9\u53ea\u662f $m=1$ \u7684\u90e8\u5206\u5206\u3002\u4e0d\u8fc7\u522b\u62c5\u5fc3\uff0c\u53ea\u8981\u4f60\u4f1a AC \u81ea\u52a8\u673a\uff0c\u90a3\u4e48 $m$ \u4e3a\u591a\u5c11\u90fd\u4e0d\u662f\u95ee\u9898\u3002\n\n\u6ce8\u610f\u5230\u5b57\u5178\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u5176\u5efa\u7acb AC \u81ea\u52a8\u673a\u3002\u90a3\u4e48\u53ea\u9700\u8981\u5c06 $f_i$ \u7684\u5b9a\u4e49\u6539\u4e3a\uff1a\u5c06 $a[1,i]$ \u653e\u5728 AC \u81ea\u52a8\u673a\u4e0a\u8dd1\u5230\u7684\u4f4d\u7f6e $p$ \u5728 fail \u6811\u4e0a\u4e0e\u6839\u8282\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u6240\u5305\u542b\u7684\u7ec8\u6b62\u8282\u70b9\u4e2a\u6570 $val_p$\u3002\u5373 $val_p=\\sum_{i=1}^m [endpos_i\\in \\mathrm{path}(p,root)]$\u3002\u4e00\u4e2a\u5957\u8def\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u7ec8\u6b62\u8282\u70b9\u5728 fail \u6811\u4e0a\u7684\u5b50\u6811\u7684 $val$ \u503c $+1$\uff0c\u8fd9\u6837\u53ef\u4ee5 $\\mathcal{O}(1)$ \u6c42 $f_i$\u3002\u5982\u679c\u4e0d\u7406\u89e3\u4e0a\u8ff0\u65b9\u6cd5\uff0cP5357\uff0c[\u8bf7](https://www.luogu.com.cn/problem/P5357)\u3002\n\n\u6ce8\u610f\u5230 $f_i$ \u5b9a\u4e49\u4e2d\u7684 $a[1,i]$ \u53ef\u4ee5\u6539\u6210 $a[i-L+1,i]\\ (L=\\max|s_j|)$\uff0c\u56e0\u4e3a**\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd $s_j$ \u4e0e $a$ \u5728\u4f4d\u7f6e $i$ \u7684\u5339\u914d\u60c5\u51b5\u4e0d\u4f1a\u53d7\u5230 $a_x\\ (x\\leq i-L)$ \u7684\u5f71\u54cd\uff08\u6700\u957f\u7684\u5355\u8bcd\u4e0e $a$ \u5728\u4f4d\u7f6e $i$ \u7684\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e3a $i-L+1$\uff09**\u3002\n\n\u5269\u4e0b\u6765\u5c31\u548c $m=1$ \u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u5728\u66b4\u529b\u5339\u914d\u65f6\u7684\u65b9\u5f0f\u4ece\u8dd1 KMP \u53d8\u6210\u4e86\u8dd1 AC \u81ea\u52a8\u673a\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(\\sum|s_i|+\\sum|t_i|+q(\\log n+L))$\uff0c\u5176\u4e2d $L=\\max |s_i|$\u3002\n\n```cpp\n/*\n\tPowered by C++11.\n\tAuthor : Alex_Wei.\n*/\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n\nconst int N=1e6+5;\nconst int L=50+5;\nconst int Q=1e5+5;\nconst int S=2e5+5;\n\n// basic variables\nint lc,nw,q;\nll mp[1<<7],f[N];\nstring ct;\n\nstruct ACAM{\n\tint cnt,son[S][62],fa[S],val[S];\n\tvoid ins(string s){\n\t\tint p=0;\n\t\tfor(char it:s){\n\t\t\tif(!son[p][mp[it]])son[p][mp[it]]=++cnt;\n\t\t\tp=son[p][mp[it]];\n\t\t} val[p]++;\n\t} void build(){\n\t\tqueue <int> q;\n\t\tfor(int i=0;i<62;i++)if(son[0][i])q.push(son[0][i]);\n\t\twhile(!q.empty()){\n\t\t\tint t=q.front(); q.pop();\n\t\t\tfor(int i=0;i<62;i++)\n\t\t\t\tif(son[t][i])fa[son[t][i]]=son[fa[t]][i],q.push(son[t][i]);\n\t\t\t\telse son[t][i]=son[fa[t]][i];\n\t\t\tval[t]+=val[fa[t]];\n\t\t}\n\t} void run(){ // get f\n\t\tint p=0;\n\t\tfor(int i=1;i<=lc;i++)f[i]=val[p=son[p][mp[ct[i-1]]]];\n\t}\n}ac;\n\n// query variables\nll id,len[Q],sum[Q];\nvector <ll> pre[Q];\nstring qt[Q];\n\n// lazytag & Segment Tree\nstring tmp;\nstruct lazy{\n\tint id,hd;\n}; struct SegTree{\n\tll val[N<<2],lpos;\n\tlazy laz[N<<2];\n\tvoid build(int l,int r,int x){\n\t\tif(l==r){\n\t\t\tval[x]=f[l];\n\t\t\treturn;\n\t\t} int m=l+r>>1;\n\t\tbuild(l,m,x<<1),build(m+1,r,x<<1|1);\n\t\tval[x]=val[x<<1]+val[x<<1|1];\n\t} void mark(int l,int r,int x,int id,int hd){ // mark lazytag & update\n\t\tlaz[x]={id,hd};\n\t\tint ori=l-hd,tl=(r-ori)%len[id],rid=(r-ori)/len[id];\n\t\tif(rid==0)val[x]=pre[id][tl]-(hd?pre[id][hd-1]:0);\n\t\telse val[x]=pre[id][tl]+(rid*sum[id]-(hd?pre[id][hd-1]:0));\n\t} void push(int l,int r,int x){ // pushdown\n\t\tif(laz[x].id){\n\t\t\tint m=l+r>>1;\n\t\t\tint id=laz[x].id,hd=laz[x].hd;\n\t\t\tint mid=(hd+(m-l+1))%len[id];\n\t\t\tmark(l,m,x<<1,id,hd);\n\t\t\tmark(m+1,r,x<<1|1,id,mid);\n\t\t\tlaz[x].id=0;\n\t\t}\n\t} void modifyt(int l,int r,int ql,int qr,int x){ // tag\n\t\tif(ql<=l&&r<=qr){\n\t\t\tmark(l,r,x,id,(l-lpos)%len[id]);\n\t\t\treturn;\n\t\t} int m=l+r>>1; push(l,r,x);\n\t\tif(ql<=m)modifyt(l,m,ql,qr,x<<1);\n\t\tif(m<qr)modifyt(m+1,r,ql,qr,x<<1|1);\n\t\tval[x]=val[x<<1]+val[x<<1|1]; \n\t} void modifyc(int l,int r,int ql,int qr,int x,bool tg){ // brute force : change\n\t\tif(ql>qr)return;\n\t\tif(l==r){\n\t\t\tval[x]=f[l];\n\t\t\tif(tg)laz[x]={id,(l-lpos)%len[id]};\n\t\t\treturn;\n\t\t} int m=l+r>>1; push(l,r,x);\n\t\tif(ql<=m)modifyc(l,m,ql,qr,x<<1,tg);\n\t\tif(m<qr)modifyc(m+1,r,ql,qr,x<<1|1,tg);\n\t\tval[x]=val[x<<1]+val[x<<1|1];\n\t} ll query(int l,int r,int ql,int qr,int x){\n\t\tif(ql>qr)return 0;\n\t\tif(ql<=l&&r<=qr)return val[x];\n\t\tll m=l+r>>1,ans=0; push(l,r,x);\n\t\tif(ql<=m)ans+=query(l,m,ql,qr,x<<1);\n\t\tif(m<qr)ans+=query(m+1,r,ql,qr,x<<1|1);\n\t\treturn ans;\n\t} void forms(int l,int r,int ql,int qr,int x){ // form current string [ql,qr]\n\t\tif(ql>qr)return;\n\t\tif(l==r){\n\t\t\tif(laz[x].id)tmp+=qt[laz[x].id][laz[x].hd];\n\t\t\telse tmp+=ct[l-1];\n\t\t\treturn;\n\t\t} int m=l+r>>1; push(l,r,x);\n\t\tif(ql<=m)forms(l,m,ql,qr,x<<1);\n\t\tif(m<qr)forms(m+1,r,ql,qr,x<<1|1);\n\t}\n}st;\n\nint main(){\n//\tfreopen(\"P5599_5.in\",\"r\",stdin);\n//\tfreopen(\"P5599_5.out\",\"w\",stdout);\n\t// mp\n\tfor(int i='A';i<='Z';i++)mp[i]=i-'A';\n\tfor(int i='a';i<='z';i++)mp[i]=26+(i-'a');\n\tfor(int i='0';i<='9';i++)mp[i]=52+(i-'0');\n\t\n\t// read & init\n\tcin>>lc>>nw>>q>>ct;\n\tfor(int i=1;i<=nw;i++){\n\t\tstring wrd;\n\t\tcin>>wrd,ac.ins(wrd);\n\t} ac.build(),ac.run(),st.build(1,lc,1);\n\t\n\t// solve\n\tfor(int i=1;i<=q;i++){\n\t\tint op,l,r,ls; scanf(\"%d%d%d\",&op,&l,&r),ls=r-l+1,st.lpos=l;\n\t\tif(op==1){\n\t\t\tll rpos=min(r,l+L),ans=0,p=0;\n\t\t\ttmp=\"\",st.forms(1,lc,l,rpos,1);\n\t\t\tfor(int i=l;i<=rpos;i++)ans+=ac.val[p=ac.son[p][mp[tmp[i-l]]]];\n\t\t\tprintf(\"%lld\\n\",ans+st.query(1,lc,rpos+1,r,1));\n\t\t} else{\n\t\t\tstring t; cin>>t,len[++id]=t.size(),pre[id].resize(len[id]);\n\t\t\tint lpos=max(1,l-L+1),rpos=min(lc,r+L-1),p=0;\n\t\t\tif(ls<=L*2+len[id]*2){\n\t\t\t\ttmp=\"\",st.forms(1,lc,lpos,rpos,1); // get current string\n\t\t\t\tfor(int i=lpos;i<=rpos;i++){\n\t\t\t\t\tchar it=(i<l||i>r?tmp[i-lpos]:t[(i-l)%len[id]]);\n\t\t\t\t\tp=ac.son[p][mp[it]];\n\t\t\t\t\tif(i>=l)f[i]=ac.val[p];\n\t\t\t\t} st.modifyc(1,lc,l,r,1,1),st.modifyc(1,lc,r+1,rpos,1,0);\n\t\t\t} else{\n\t\t\t\t// front section : [l-L+1,l+L-1]\n\t\t\t\tint led=l+L-1,rbg=r-L+1;\n\t\t\t\twhile((led-l)%len[id])led++;\n\t\t\t\ttmp=\"\",st.forms(1,lc,lpos,l-1,1);\n\t\t\t\tfor(int i=lpos;i<led+len[id];i++){\n\t\t\t\t\tchar it=(i<l?tmp[i-lpos]:t[(i-l)%len[id]]);\n\t\t\t\t\tp=ac.son[p][mp[it]];\n\t\t\t\t\tif(i>=l){\n\t\t\t\t\t\tif(i<led)f[i]=ac.val[p];\n\t\t\t\t\t\telse pre[id][i-led]=(i>led?pre[id][i-led-1]:0)+ac.val[p];\n\t\t\t\t\t}\n\t\t\t\t} sum[id]=pre[id][len[id]-1];\n\t\t\t\tst.modifyc(1,lc,l,led-1,1,1),st.modifyt(1,lc,led,r,1);\n\t\t\t\t\n\t\t\t\t// back section\n\t\t\t\ttmp=\"\",st.forms(1,lc,r+1,rpos,1),p=0;\n\t\t\t\tfor(int i=rbg;i<=rpos;i++){\n\t\t\t\t\tchar it=(i>r?tmp[i-r-1]:t[(i-l)%len[id]]);\n\t\t\t\t\tp=ac.son[p][mp[it]];\n\t\t\t\t\tif(i>r)f[i]=ac.val[p];\n\t\t\t\t} st.modifyc(1,lc,r+1,rpos,1,0);\n\t\t\t} qt[id]=t;\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n\u5982\u679c\u60a8\u770b\u61c2\u4e86\u8fd9\u7bc7\u9898\u89e3\u5c31\u70b9\u4e2a\u8d5e\u5427 qwq\u3002\n```",
        "postTime": 1613355196,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5599 \u3010\u3010XR-4\u3011\u6587\u672c\u7f16\u8f91\u5668\u3011"
    },
    {
        "content": "\u76f4\u63a5\u505a\u662f\u56f0\u96be\u7684\uff0c\u4e0d\u59a8\u4f9d\u7167\u90e8\u5206\u5206\u6765\u601d\u8003\u3002\n\n## - Subtask 3\n\n\u9996\u5148\u4f1a\u8fdb\u5165\u4e00\u4e2a\u8bef\u533a\uff1a\u7ef4\u62a4\u4fee\u6539\uff0c\u901a\u8fc7\u5faa\u73af\u4e32\u7684\u6027\u8d28\u5728 $\\tt KMP$ \u81ea\u52a8\u673a\u4e0a\u4f18\u5316\u904d\u5386\u3002\n\n\u4f46\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u5f88\u96be\u5904\u7406\uff0c\u6211\u4eec\u4e0d\u59a8 **\u76f4\u63a5\u7ef4\u62a4** \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7b54\u6848\u3002\n\n\u4ee4\u552f\u4e00\u7684\u6a21\u5f0f\u4e32\u957f\u5ea6\u4e3a $d$\uff0c$f_i$ \u4e3a\u6587\u672c\u4e32 $[\\max(i - d + 1, 1), i]$ \u4e0e\u6a21\u5f0f\u4e32\u662f\u5426\u5339\u914d\u3002\n\n\u67e5\u8be2\u76f4\u63a5\u6c42 $[L + d - 1, R]$ \u7684\u533a\u95f4\u548c\u5373\u53ef\u3002\n\n\u8003\u8651\u4e00\u6b21\u4fee\u6539\u5bf9 $f$ \u7684\u5f71\u54cd\uff0c\u663e\u7136\u4ec5\u4f1a\u4fee\u6539 $[L, R + d - 1]$ \u4e2d\u7684 $f$\u3002\n\n\u5e76\u4e14\uff0c\u6211\u4eec **\u76f4\u63a5\u5728\u5e8f\u5217\u4e0a\u89c2\u5bdf** \u53ef\u4ee5\u53d1\u73b0\uff1a\n\n* ##### \u4fee\u6539\u540e\u7684 $f$ \u4f1a\u4ece $L + d$ \u5f00\u59cb\u5448\u957f\u5ea6\u4e3a $|t|$ \u7684\u5468\u671f\u6027\u53d8\u5316\u3002\n\n> \u7531\u4e8e\u5c06\u533a\u95f4\u4fee\u6539\u4e3a\u5468\u671f\u53d8\u5316\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u4e0e\u4ece $L + d$ \u5f00\u59cb\u4e0e\u6a21\u5f0f\u4e32\u7684\u6700\u957f $border$ \u6bcf\u9694 $|t|$ \u4e2a\u4f4d\u7f6e\u5747\u76f8\u540c\u3002\n> \n> \u5219\u53ef\u77e5\u4ece $L + d$ \u5f00\u59cb\u7684\u4e32\u5728 $\\tt KMP$ \u81ea\u52a8\u673a\u4e0a\u6210\u5468\u671f\u6027\u7684\u904d\u5386\uff0c\u6545 $f$ \u4e5f\u4ece\u6b64\u4f4d\u7f6e\u5f00\u59cb\u5448\u957f\u5ea6\u4e3a $|t|$ \u7684\u5468\u671f\u6027\u53d8\u5316\u3002\n\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u5728 $\\tt KMP$ \u81ea\u52a8\u673a\u4e0a\u66b4\u529b\u904d\u5386 $|t|$ \u4e2a\u8282\u70b9\u5373\u53ef\u6c42\u5f97 $[L + d, R]$ \u8fd9\u4e00\u6bb5\u5728\u4fee\u6539\u540e\u7684 $f$ \u5e8f\u5217\u3002\n\n\u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u65f6\u6211\u4eec\u5047\u5b9a\u53ef\u4ee5\u5feb\u901f\u5f97\u5230\u4fee\u6539\u540e\u7684\u5e8f\u5217 $S_{1, L + d - 1}$ \u5728 $\\tt KMP$ \u81ea\u52a8\u673a\u4e0a\u904d\u5386\u5230\u7684\u8282\u70b9\u3002\n\n> \u6211\u4eec\u5c06\u6c42\u89e3\u8fd9\u4e2a\u8282\u70b9\u7684\u505a\u6cd5\u79f0\u4e3a\u300c\u5f85\u89e3\u51b3\u7684\u95ee\u9898 $1$\u300d\u3002\n\n\u5bf9\u6b64\uff0c\u6211\u4eec\u672c\u8d28\u4e0a\u53ea\u9700\u8981\u652f\u6301\uff1a\n\n* * \u7ed9\u5b9a $l, r$ \u548c\u4e00\u6bb5\u5e8f\u5217 $t$\uff0c\u5c06 $l \\sim r$ \u66ff\u6362\u4e3a $t$ \u53cd\u590d\u51fa\u73b0\u7684\u7ed3\u679c\u3002\uff08\u82e5\u6700\u540e\u4e00\u6bb5\u5e76\u975e\u5b8c\u6574\u5468\u671f\uff0c\u5219\u5c06\u975e\u6700\u540e\u4e00\u6bb5\u548c\u6700\u540e\u4e00\u6bb5\u770b\u4f5c\u4e24\u4e2a\u4fee\u6539\uff09\n\n* * \u7ed9\u5b9a $l, r$\uff0c\u533a\u95f4\u67e5\u8be2\u5e8f\u5217\u7684\u548c\u3002\n\n\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u7b80\u5355\u7684\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff1a\n\n> \u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4fee\u6539\uff0c\u6211\u4eec\u8bb0\u5f55\u4fee\u6539\u7684\u5e8f\u5217\u5143\u7d20\uff0c\u524d\u7f00\u548c\uff0c\u540e\u7f00\u548c\uff0c\u4ee5\u53ca\u6574\u4f53\u548c\u3002\n> \n> \u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u7ef4\u62a4\u8be5\u533a\u95f4\u7684\u548c $sum$\uff0c\u61d2\u6807\u8bb0\uff08\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u533a\u95f4\u88ab\u67d0\u6b21\u4fee\u6539\u8986\u76d6\u65f6\u5b58\u5728\uff09\uff1a\u5f53\u524d\u88ab\u7b2c $t$ \u6b21\u64cd\u4f5c\u8986\u76d6\uff0c\u5de6\u8fb9\u6563\u5757\u5f00\u59cb\u4e8e $t$ \u5e8f\u5217\u4e2d\u7684 $l$\uff0c\u53f3\u8fb9\u6563\u5757\u7ed3\u675f\u4e0e $t$ \u5e8f\u5217\u7684 $r$\uff0c\u4e2d\u95f4\u6574\u5757\u7684\u6570\u91cf $num$\u3002\n> \n> \u6253\u61d2\u6807\u8bb0\uff0c\u61d2\u6807\u8bb0\u4e0b\u4f20\uff0c$\\tt pushup$ \u90fd\u662f\u5bb9\u6613\u7684\u3002\n\n\u7531\u6b64\u6211\u4eec\u4ee5 $\\mathcal{O(\\sum |t| + q \\log n)}$ \u7684\u4f18\u79c0\u590d\u6742\u5ea6\u89e3\u51b3\u4e86 $[L + d, R]$ \u7684\u4fee\u6539\u3002\n\n\u8003\u8651\u5b8c $[L + d, R]$ \u8fd9\u4e00\u6bb5\u7684\u4fee\u6539\uff0c\u63a5\u4e0b\u6765\u8003\u8651 $[L, L + d - 1]$ \u8fd9\u4e00\u6bb5\u7684\u4fee\u6539\u3002\n\n\u6ce8\u610f\u5230 $d$ \u5f88\u5c0f\uff0c\u4e8e\u662f\u53ef\u4ee5\u5728 $S_{1, L - 1}$ \u5728 $\\tt KMP$ \u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9\u5f00\u59cb\u5f80\u4e0b\u76f4\u63a5\u904d\u5386\u3002\n\n\u4e00\u6837\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u65f6\u6211\u4eec\u5047\u5b9a\u53ef\u4ee5\u5feb\u901f\u5f97\u5230 $S_{1, L - 1}$ \u5728 $\\tt KMP$ \u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9\u3002\n\n> \u6211\u4eec\u5c06\u6c42\u89e3\u8fd9\u4e2a\u8282\u70b9\u7684\u505a\u6cd5\u79f0\u4e3a\u300c\u5f85\u89e3\u51b3\u7684\u95ee\u9898 $2$\u300d\u3002\n\n\u6b64\u65f6\u6211\u4eec\u60ca\u559c\u5730\u53d1\u73b0\uff0c\u7531\u4e8e\u6211\u4eec\u5f80\u540e\u66b4\u529b\u904d\u5386\u5230\u4e86 $S_{1, L + d - 1}$\uff0c\u7531\u6b64\u6211\u4eec\u89e3\u51b3\u4e86\u300c\u5f85\u89e3\u51b3\u7684\u95ee\u9898 $1$\u300d\u3002\n\n$[R + 1, R + d - 1]$ \u7684\u4fee\u6539\u4e0e $[L, L + d - 1]$ \u7684\u4fee\u6539\u64cd\u4f5c\u662f\u7c7b\u4f3c\u7684\uff08\u6709\u4e00\u70b9\u5dee\u522b\uff0c\u8bf7\u81ea\u884c\u89e3\u51b3\uff09\uff0c\u56e0\u6b64\u4e0b\u9762\u53ea\u8003\u8651\u540e\u8005\u7684\u4fee\u6539\u3002\n\n\u4f46\u73b0\u5728\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5 $\\mathcal{O(d)}$ \u83b7\u5f97 $[L, L + d - 1]$ \u4fee\u6539\u540e\u7684 $f$ \u5e8f\u5217\uff0c\u4f46\u82e5\u8981\u5c06\u5176\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\uff0c\u590d\u6742\u5ea6\u770b\u4e0a\u53bb\u5c06\u4f1a\u662f $\\mathcal{O(d \\log n)}$ \u7684\uff0c\u4e0d\u592a\u884c\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u4e00\u6b21\u4fee\u6539\u66b4\u529b\u904d\u5386\u7ebf\u6bb5\u6811\u81f3\u53f6\u5b50\u8282\u70b9\uff0c**\u5176\u590d\u6742\u5ea6\u5176\u5b9e\u662f $\\mathcal{O(d + \\log n)}$ \u7684**\u3002\n\n> \u6211\u4eec\u627e\u5230\u533a\u95f4 $[L, L + d - 1]$ \u5728\u7ebf\u6bb5\u6811\u4e0a\u5b9a\u4f4d\u7684 $\\log n$ \u4e2a\u533a\u95f4\uff0c\u8fd9\u91cc\u7684\u590d\u6742\u5ea6\u662f $\\mathcal{O(\\log n)}$ \u7684\u3002\n> \n> \u800c\u63a5\u4e0b\u6765\u904d\u5386\u7684\u6240\u6709\u8282\u70b9\uff0c\u5b9e\u8d28\u4e0a\u662f\u8fd9 $\\log n$ \u4e2a\u533a\u95f4\u4e0b\u9762\u7684\u6240\u6709\u8282\u70b9\u3002\n> \n> \u53c8\u7ebf\u6bb5\u6811\u7684\u5927\u5c0f\u662f\u7ebf\u6027\u7684\uff0c\u56e0\u6b64\u8fd9\u90e8\u5206\u7684\u8282\u70b9\u6570\u4e3a $\\mathcal{O(d)}$\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u82b1\u8d39\u4e86 $\\mathcal{O}(\\sum |t| + q(\\log n + d))$ \u7684\u82b1\u8d39\u5c06\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u4e3a\u89e3\u51b3\uff1a\u300c\u5f85\u89e3\u51b3\u7684\u95ee\u9898 $2$\u300d\n\n\u7531\u4e00\u5f00\u59cb\u7684\u89c2\u5bdf\u53ef\u77e5\uff0c$A$ \u5e8f\u5217\u5728 $\\tt KMP$ \u81ea\u52a8\u673a\u4e0a\u904d\u5386\u5f97\u5230\u7684\u8282\u70b9\u5e8f\u5217\u4fee\u6539\u540e\u4e0e $f$ \u6709 **\u4e00\u6a21\u4e00\u6837** \u7684\u5468\u671f\u6027\u3002\n\n\u7531\u6b64\u6211\u4eec\u4f7f\u7528\u7ef4\u62a4 $f$ \u7684\u65b9\u6cd5\u6765\u7ef4\u62a4 $A$ \u5e8f\u5217\u5728 $\\tt KMP$ \u81ea\u52a8\u673a\u4e0a\u904d\u5386\u5f97\u5230\u7684\u8282\u70b9\u5e8f\u5217 $z$\uff0c\u590d\u6742\u5ea6\u4e0e $f$ \u7684\u7ef4\u62a4\u4e00\u81f4\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u4ee5 $\\mathcal{O(|\\Sigma| \\sum|s_i| + \\sum |t| + q(\\log n + d))}$ \u7684\u590d\u6742\u5ea6\u89e3\u51b3\u4e86\u8fd9\u4e2a\u5b50\u95ee\u9898\u3002\n\n## - Subtask 4\n\n\u540c\u6837\u8003\u8651\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\uff0c\u4f46\u7531\u4e8e\u8fd9\u91cc\u4e3a\u591a\u6a21\u5f0f\u4e32\uff0c\u56e0\u6b64\u9700\u8981\u6539\u53d8\u5b9a\u4e49\u3002\n\n\u4ee4 $f_i$ \u4e3a $A$ \u4e2d\u4ee5 $i$ \u7ed3\u5c3e\u7684\u5b50\u4e32\u4e0e\u6240\u6709\u6a21\u5f0f\u4e32\u7684\u5339\u914d\u6b21\u6570\u3002\n\n\u4ee4 $g_{i, j}$ \u4e3a $A$ \u4e2d\u4ee5 $j$ \u7ed3\u5c3e\u7684\u5b50\u4e32\u4e0e\u957f\u5ea6\u4e0d\u8d85\u8fc7 $j$ \u7684\u6a21\u5f0f\u4e32\u5339\u914d\u7684\u6b21\u6570\u3002\n\n\u521d\u59cb\u4fe1\u606f\u6211\u4eec\u76f4\u63a5\u7ef4\u62a4\u51fa $fail$ \u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\uff0c\u7528 $A$ \u5728 $\\tt ACAM$ \u4e0a\u76f4\u63a5\u904d\u5386\u5e76\u7ee7\u627f $fail$ \u6811\u4e0a\u7684\u7b54\u6848\u5373\u53ef\u3002 \n\n\u9884\u5904\u7406\u590d\u6742\u5ea6\u662f $\\mathcal{O}(\\sum |s|(d + |\\Sigma|) + nd)$ \u7684\u3002\n\n\u4e00\u6b21\u67e5\u8be2\u7684\u7b54\u6848\u663e\u7136\u4e3a\uff1a\n\n$$\\sum\\limits_{i = L} ^ {L + d - 1} g_{i - L + 1, i} + \\sum\\limits_{i = L + d} ^ R f_i$$\n\n\u5bf9\u4e8e\u524d\u534a\u90e8\u5206\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $\\mathcal{O(d)}$\uff0c\u540e\u534a\u90e8\u5206\u6211\u4eec\u524d\u7f00\u548c\u67e5\u8be2\u3002\u6545\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u9884\u5904\u7406\u3002\n\n## - Subtask 5 $\\sim$ 7\n\n\u8003\u8651\u7ef4\u62a4 $Subtask 4$ \u4e2d\u7684\u4e24\u4e2a\u503c\uff0c\u67e5\u8be2\u4e5f\u4f7f\u7528\u540c\u6837\u7684\u65b9\u5f0f\u3002\n\n\u867d\u7136\u52a0\u5165\u4e86\u591a\u6a21\u5f0f\u4e32\uff0c\u4f46\u6211\u4eec\u53d1\u73b0 $f$ \u4fee\u6539\u7684\u5468\u671f\u6027\u4f9d\u7136\u5b58\u5728\uff0c\u56e0\u6b64 $f$ \u662f\u5bb9\u6613\u7ef4\u62a4\u7684\uff08\u8282\u70b9\u5e8f\u5217 $z$ \u4e5f\u53ef\u4ee5\u4e00\u6837\u7684\u7ef4\u62a4\uff09\u3002\n\n\u53c8\u6211\u4eec\u7ef4\u62a4\u4e86\u8282\u70b9\u5e8f\u5217 $z$\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8ba1\u7b97 $g$ \u7684\u8d21\u732e\u65f6\u53ef\u4ee5\u5148\u53d6\u51fa $[L, L + d - 1]$ \u7684\u8282\u70b9\u5e8f\u5217 $z$\uff0c\u7136\u540e\u76f4\u63a5\u66b4\u529b\u8c03\u7528 $\\tt ACAM$ \u4e0a\u9884\u5904\u7406\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal{O}(\\sum |s|(d + |\\Sigma|) + \\sum |t| + q(\\log n + d))$\u3002\n\n~~\u6bd2\u7624\u9898\uff0c\u4ee3\u7801\u5199\u4e86\u4e00\u665a\u4e0a~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define rep(i, l, r) for (int i = l; i <= r; ++i)\n#define dep(i, l, r) for (int i = r; i >= l; --i)\nconst int N = 3e5 + 5;\nconst int M = 1e6 + 5;\nconst int K = 60 + 5;\nstruct tree { int l, r, t, num, sum; } ;\nvector <int> U[N], pre[N], suf[N];\n// U[i][0] \u4e3a\u7b2c i \u6b21\u4fee\u6539\u7684\u957f\u5ea6\uff0c\u63a5\u4e0b\u6765\u4e3a\u4fee\u6539\u5e8f\u5217\n// pre[i], suf[i] \u5206\u522b\u4e3a\u7b2c i \u6b21\u4fee\u6539\u5e8f\u5217\u7684\u524d\u7f00 / \u540e\u7f00\u548c \nchar s[M], t[M];\nint n, m, q, z, l, r, x, opt, ans, totU, a[M], b[M], c[M];\n// b \u4e3a\u7528\u4e8e\u66b4\u529b\u533a\u95f4\u7ebf\u6bb5\u6811\u4fee\u6539\u7684\u4e2d\u8f6c\u6570\u7ec4 \n\nstruct ST {\n\t#define ls (p << 1)\n\t#define rs (p << 1 | 1)\n\t#define mid ((l + r) >> 1)\n\ttree t[M << 2];\n\tvoid build (int p, int l, int r) {\n\t\tt[p].t = -1, t[p].num = t[p].sum = 0;\n\t\tif(l == r) { t[p].sum = a[l]; return ; }\n\t\tbuild(ls, l, mid), build(rs, mid + 1, r);\n\t\tt[p].sum = t[ls].sum + t[rs].sum;\n\t}\n\tint gi (int x, int l, int r, tree k) {\n\t\tif(x < l) return k.l;\n\t\tif(x > r) return k.r;\n\t\tint len = U[k.t][0];\n\t\tif(x - l + 1 <= len - k.l + 1) x = k.l + x - l;\n\t\telse x = (x - l - len + k.l - 1) % len + 1;\n\t\treturn x;\n\t}\n\t// \u6c42\u5e8f\u5217\u4e2d x \u8fd9\u4e2a\u4f4d\u7f6e\u5728\u4fee\u6539\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e \n\ttree Get(int l, int r, int ul, int ur, tree k) {\n\t\tint len = U[k.t][0], id1, id2, sum, nL, nR;\n\t\t\n\t\tif(l <= ul) id1 = 0;\n\t\telse {\n\t\t\tif(l - ul + 1 <= len - k.l + 1) id1 = 0;\n\t\t\telse id1 = ceil(1.0 * (l - ul - len + k.l) / len);\n\t\t}\n\t\tif(r - ul + 1 <= len - k.l + 1) id2 = 0;\n\t\telse id2 = ceil(1.0 * (r - ul - len + k.l) / len);\n\t\t\n\t\tnL = gi(l, ul, ur, k), nR = gi(r, ul, ur, k);\n\t\tsum = pre[k.t][len] * (id2 - id1 - 1);\n\t\tsum += suf[k.t][nL] + pre[k.t][nR];\n\t\t\n\t\treturn (tree){nL, nR, k.t, id2 - id1 - 1, sum};\n\t} \n\tvoid down (int p, int l, int r) {\n\t\tif(t[p].t == -1) return ;\n\t\tt[ls] = Get(l, mid, l, r, t[p]), t[rs] = Get(mid + 1, r, l, r, t[p]);\n\t\tt[p].t = -1;\n\t}\n\tvoid update1 (int p, int l, int r, int x, int y, tree k) {\n\t\tif(x > y || y < l || x > r) return ;\n\t\tif(l >= x && r <= y) { t[p] = k; return ; }\n\t\tdown(p, l, r);\n\t\tif(mid >= x) update1(ls, l, mid, x, min(y, mid), Get(l, mid, x, y, k));\n\t\tif(mid < y) update1(rs, mid + 1, r, max(x, mid + 1), y, Get(mid + 1, r, x, y, k));\n\t\tt[p].sum = t[ls].sum + t[rs].sum; \n\t}\n\t// \u652f\u6301\u533a\u95f4\u8986\u76d6 \n\tvoid update2 (int p, int l, int r, int x, int y) {\n\t\tif(x > y || y < l || x > r) return ;\n\t\tif(l == r) { t[p].sum = b[l]; return ; }\n\t\tdown(p, l, r); \n\t\tif(mid >= x) update2(ls, l, mid, x, y);\n\t\tif(mid < y) update2(rs, mid + 1, r, x, y);\n\t\tt[p].sum = t[ls].sum + t[rs].sum;\n\t}\n\t// \u652f\u6301\u7ebf\u6bb5\u6811\u66b4\u529b\u533a\u95f4\u5355\u70b9\u4fee\u6539\uff0c\u4e2d\u8f6c\u6570\u7ec4\u4e3a b \n\tint query (int p, int l, int r, int x, int y) {\n\t\tif(x > y || y < l || x > r) return 0;\n\t\tif(l >= x && r <= y) return t[p].sum;\n\t\tdown(p, l, r);\n\t\tint ans = 0;\n\t\tif(mid >= x) ans += query(ls, l, mid, x, y);\n\t\tif(mid < y) ans += query(rs, mid + 1, r, x, y);\n\t\treturn ans;\n\t}\n\tvoid Get (int p, int l, int r, int x, int y) {\n\t\tif(x > y || y < l || x > r) return ;\n\t\tif(l == r) { c[l] = t[p].sum; return ; }\n\t\tdown(p, l, r);\n\t\tif(mid >= x) Get(ls, l, mid, x, y);\n\t\tif(mid < y) Get(rs, mid + 1, r, x, y);\n\t}\n\t// \u652f\u6301\u7ebf\u6bb5\u6811\u66b4\u529b\u533a\u95f4\u53d6\u51fa\uff0c\u4e2d\u8f6c\u6570\u7ec4\u4e3a c \n} T[3];\n\nnamespace ACAM {\n\t#define Next(i, u) for (int i = h[u]; i; i = e[i].next)\n\tstruct edge { int v, next; } e[N << 1];\n\tint cnt, tot, num, h[N], tr[N], fail[N], g[N][K], ch[N][K];\n\tvoid reset () {\n\t\trep(i, 0, cnt) {\n\t\t\tfail[i] = 0;\n\t\t\trep(j, 0, 62) ch[i][j] = g[i][j] = 0;\n\t\t}\n\t\trep(i, 0, 25) tr['a' + i] = ++num;\n\t\trep(i, 0, 25) tr['A' + i] = ++num;\n\t\trep(i, 0, 9) tr['0' + i] = ++num;\n\t\tcnt = 0;\n\t}\n\tvoid insert (int n, char s[]) {\n\t\tint x = 0;\n\t\trep(i, 1, n) {\n\t\t\tif(!ch[x][tr[s[i] - 0]]) ch[x][tr[s[i] - 0]] = ++cnt;\n\t\t\tx = ch[x][tr[s[i] - 0]];\n\t\t}\n\t\t++g[x][n];\n\t}\n\tvoid add (int u, int v) {\n\t\te[++tot].v = v, e[tot].next = h[u], h[u] = tot;\n\t\te[++tot].v = u, e[tot].next = h[v], h[v] = tot;\n\t}\n\tvoid dfs (int u, int fa) {\n\t\trep(i, 1, 50) g[u][i] += g[fa][i];\n\t\tNext(i, u) if(e[i].v != fa) dfs(e[i].v, u);\n\t}\n\tvoid build () {\n\t\tqueue <int> Q;\n\t\trep(i, 1, 62) if(ch[0][i]) Q.push(ch[0][i]);\n\t\twhile (!Q.empty()) {\n\t\t\tint u = Q.front(); Q.pop();\n\t\t\trep(i, 1, 62) {\n\t\t\t\tif(ch[u][i]) fail[ch[u][i]] = ch[fail[u]][i], Q.push(ch[u][i]);\n\t\t\t\telse ch[u][i] = ch[fail[u]][i];\n\t\t\t}\n\t\t}\n\t\trep(i, 1, cnt) add(fail[i], i);\n\t\tdfs(0, -1);\n\t\trep(i, 1, cnt) rep(j, 1, 50) g[i][j] += g[i][j - 1];\n\t}\n} \nusing namespace ACAM;\n\nvoid Modify (int o, int l, int r, int m, int *a) {\n\tif(l > r) return ;\n\t++totU, U[totU].push_back(m);\n\trep(i, 1, m) U[totU].push_back(a[i]);\n\t\n\tpre[totU].push_back(0), suf[totU].push_back(0);\n\trep(i, 1, m) pre[totU].push_back(pre[totU][i - 1] + U[totU][i]);\n\trep(i, 1, m) suf[totU].push_back(0);\n\tsuf[totU][m] = U[totU][m];\n\tdep(i, 1, m - 1) suf[totU][i] = suf[totU][i + 1] + U[totU][i];\n\t\n\tT[o].update1(1, 1, n, l, r, (tree){1, (r - l) % m + 1, totU, l == r ? -1 : (int)ceil(1.0 * (r - l - 1) / m), 0});\n} \n\nsigned main () {\n\tscanf(\"%lld%lld%lld%s\", &n, &m, &q, s + 1);\n\t\n\treset();\n\trep(i, 1, m) scanf(\"%s\", t + 1), l = strlen(t + 1), insert(l, t);\n\tbuild();\n\t\n\tx = 0;\n\trep(i, 1, n) x = ch[x][tr[s[i] - 0]], a[i] = g[x][50];\n\tT[0].build(1, 1, n);\n\tx = 0;\n\trep(i, 1, n) x = ch[x][tr[s[i] - 0]], a[i] = x;\n\tT[1].build(1, 1, n);\n\trep(i, 1, n) a[i] = s[i];\n\tT[2].build(1, 1, n);\n\t\n\twhile (q--) {\n\t\tscanf(\"%lld%lld%lld\", &opt, &l, &r);\n\t\tif(opt == 2) {\n\t\t\tscanf(\"%s\", t + 1), m = strlen(t + 1);\n\t\t\trep(i, 1, m) a[i] = t[i];\n\t\t\tModify(2, l, r, m, a);\n\t\t\t\n\t\t\tint cur = T[1].query(1, 1, n, l - 1, l - 1);\n\t\t\trep(i, l, min(l + 49, r)) \n\t\t\t\tcur = ch[cur][tr[t[(i - l) % m + 1] - 0]], b[i] = cur;\n\t\t\tT[1].update2(1, 1, n, l, min(l + 49, r));\n\t\t\trep(i, min(l + 49, r) + 1, min(l + 49, r) + m) \n\t\t\t\tcur = ch[cur][tr[t[(i - l) % m + 1] - 0]], a[i - min(l + 49, r)] = cur;\n\t\t\tModify(1, min(l + 49, r) + 1, r, m, a);\n\t\t\tcur = T[1].query(1, 1, n, r, r);\n\t\t\tT[2].Get(1, 1, n, r + 1, min(r + 49, n));\n\t\t\trep(i, r + 1, min(r + 49, n)) \n\t\t\t\tcur = ch[cur][tr[c[i]]], b[i] = cur;\n\t\t\tT[1].update2(1, 1, n, r + 1, min(r + 49, n));\n\t\t\t// \u4fee\u6539 A \u5e8f\u5217\u5bf9\u5e94\u7684 ACAM \u4e0a\u7684\u8282\u70b9\u5e8f\u5217 \n\t\t\t\n\t\t\tcur = T[1].query(1, 1, n, l - 1, l - 1);\n\t\t\trep(i, l, min(l + 49, r)) \n\t\t\t\tcur = ch[cur][tr[t[(i - l) % m + 1] - 0]], b[i] = g[cur][50];\n\t\t\tT[0].update2(1, 1, n, l, min(l + 49, r));\n\t\t\trep(i, min(l + 49, r) + 1, min(l + 49, r) + m) \n\t\t\t\tcur = ch[cur][tr[t[(i - l) % m + 1] - 0]], a[i - min(l + 49, r)] = g[cur][50];\n\t\t\tModify(0, min(l + 49, r) + 1, r, m, a);\n\t\t\tT[1].Get(1, 1, n, r + 1, min(r + 49, n));\n\t\t\trep(i, r + 1, min(r + 49, n)) b[i] = g[c[i]][50];\n\t\t\tT[0].update2(1, 1, n, r + 1, min(r + 49, n));\n\t\t\t// \u4fee\u6539 f \n\t\t}\n\t\telse {\n\t\t\tans = T[0].query(1, 1, n, l + 50, r);\n\t\t\tT[1].Get(1, 1, n, l, min(l + 49, r));\n\t\t\trep(i, l, min(l + 49, r)) ans += g[c[i]][i - l + 1];\n\t\t\tprintf(\"%lld\\n\", ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1623422916,
        "uid": 78386,
        "name": "Achtoria",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5599 \u3010XR-4\u3011\u6587\u672c\u7f16\u8f91\u5668"
    },
    {
        "content": "\u672c\u6587\u8d77\u7b14\u4e8e ```2021.11.05```\u3002\n\n\u60f3\u4e86\u4e00\u5c0f\u65f6\uff0c\u7801\u4e86\u4e24\u5c0f\u65f6\uff0c\u8c03\u4e86\u4e09\u5c0f\u65f6\uff0c\u4e0d\u5199\u7bc7\u9898\u89e3\u4e8f\u5927\u4e86\u3002\n\n\u7136\u540e\u53d1\u73b0\u9898\u89e3\u5199\u4e86\u56db\u5c0f\u65f6\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u7ebf\u6bb5\u6811 + $\\text{AC}$ \u81ea\u52a8\u673a\u3002\n\n\u5efa\u8bae\u770b\u4e4b\u524d\u5148\u719f\u6089\u5931\u914d\u6811\u3002\n\n#### \u67e5\u8be2\u64cd\u4f5c\n\n\u67e5\u8be2\u7684\u601d\u8def\u8fd8\u662f\u5f88\u597d\u60f3\u7684\u3002\n\n\u9996\u5148\u5148\u8bf4\u4e00\u4e0b\uff0c\u7528\u6a21\u5f0f\u4e32\u4ee3\u79f0\u5355\u8bcd\uff0c\u7528\u76ee\u6807\u4e32\u4ee3\u79f0\u5f85\u5339\u914d\u7684\u4e32\u3002\n\n\u8003\u8651\u5728 $\\text{AC}$ \u81ea\u52a8\u673a\u4e0a\u5339\u914d\u76ee\u6807\u4e32\uff0c\u5f53\u5339\u914d\u5230\u7b2c $i$ \u4e2a\u5b57\u7b26\u65f6\uff0c$\\text{AC}$ \u81ea\u52a8\u673a\u8f6c\u79fb\u5230\u4e86\u67d0\u4e00\u72b6\u6001\uff08\u8282\u70b9\uff09 $u$ \uff0c\u5176\u4ee3\u8868\u76ee\u6807\u4e32\u4e2d\u4ee5 $i$ \u7ed3\u5c3e\u7684\u540e\u7f00\u4e0e\u6a21\u5f0f\u4e32\u96c6\u5b57\u5178\u6811\u80fd\u5339\u914d\u7684\u6700\u957f\u524d\u7f00\u3002\n\n\u901a\u8fc7 $\\text{dfs}$ \u5931\u914d\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u4e2a\u72b6\u6001 $u$ \u4e0e\u591a\u5c11\u4e2a\u6a21\u5f0f\u4e32\u5339\u914d\uff08\u5931\u914d\u6811\u4e0a $u$ \u7684\u524d\u7f00\u94fe\u4e0a\u6253\u8fc7\u591a\u5c11\u6807\u8bb0\uff09\uff0c\u8bb0\u4f5c $cnt(u)$\u3002\n\n\u5982\u679c\u4e00\u6b21\u67e5\u8be2\u67e5\u8be2\u7684\u662f\u6574\u4e2a\u533a\u95f4 $[1,n]$ \u90a3\u4e48\u76f4\u63a5\u7d2f\u548c\u6bcf\u4e2a\u4f4d\u7f6e\u7684 $cnt$ \u5c31\u662f\u7b54\u6848\uff0c\u5373 $\\sum_{i=1}^{n} cnt(sta(i))$\uff0c\u8fd9\u91cc $sta(i)$ \u4ee3\u8868\u5339\u914d\u76ee\u6807\u4e32\u5339\u914d\u5230\u7b2c $i$ \u4e2a\u5b57\u7b26\u65f6 $\\text{AC}$ \u81ea\u52a8\u673a\u7684\u72b6\u6001\u3002\n\n\u4f46\u5982\u679c\u67e5\u8be2\u7684\u662f\u67d0\u4e2a\u5b50\u533a\u95f4 $[l,r]$\uff0c\u76f4\u63a5\u7d2f\u548c $\\sum_{i=l}^{r} cnt(sta(i))$ \u662f\u4e0d\u6b63\u786e\u7684\uff0c\u539f\u56e0\u5728\u4e8e $cnt(l)$ \u53ef\u80fd\u5305\u542b\u4e86\u8de8\u8d8a\u5de6\u7aef\u70b9 $l$ \u7684\u6a21\u5f0f\u4e32\u7684\u8d21\u732e\uff0c\u5f97\u53bb\u9664\u8de8\u8d8a\u7aef\u70b9 $l$ \u7684\u6a21\u5f0f\u4e32\u7684\u8d21\u732e\u3002\n\n\u9898\u9762\u7684\u6570\u636e\u8303\u56f4\u5df2\u7ecf\u63d0\u793a\u5f97\u5f88\u660e\u663e\u4e86\uff0c\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 $50$\uff0c\u663e\u7136\u8981\u5728\u4e0a\u9762\u4f5c\u6587\u7ae0\u3002\n\n\u4e0d\u59a8\u8bbe\u7ed9\u51fa\u7684\u6570\u636e\u4e2d\u6700\u957f\u7684\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\u4e3a $d(d\\leq 50)$\uff0c\u4e5f\u5373\u5b57\u5178\u6811\u7684\u6df1\u5ea6\u3002\n\n\u90a3\u4e48\u5f53 $i\\in [l+d-1, r]$ \u65f6\uff0c\u56e0\u4e3a\u6a21\u5f0f\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 $d$\uff0c\u5219 $cnt(sta(i))$ \u4e00\u5b9a\u4e0e\u7b2c $l-1$ \u53ca\u4e4b\u524d\u7684\u5b57\u7b26\u65e0\u5173\uff0c\u5373 $cnt(sta(i))$ \u4e2d\u4e0d\u5b58\u5728\u8de8\u8d8a\u5de6\u7aef\u70b9 $l$ \u7684\u6a21\u5f0f\u4e32\u7684\u8d21\u732e\uff0c\u6240\u4ee5 $\\sum_{l+d-1}^{r} cnt(sta(i))$ \u7d2f\u548c\u8fdb\u7b54\u6848\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\n\u800c $i \\in [l, l+d-2]$ \u65f6\uff0c\u6211\u4eec\u5f97\u52d2\u4ee4\u80fd\u4ea7\u751f\u8d21\u732e\u7684\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 $i-l+1$\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u4ea7\u751f\u8d21\u732e\u7684\u6a21\u5f0f\u4e32\u5747\u4e0d\u8de8\u8d8a\u5de6\u7aef\u70b9 $l$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7ed9 $\\text{AC}$ \u81ea\u52a8\u4e0a\u6bcf\u4e2a\u72b6\u6001 $u$ \u5b9a\u4e49\u4e00\u4e2a\u6df1\u5ea6 $dep(u)$\uff0c\u8868\u793a\u8282\u70b9 $u$ \u5728\u5b57\u5178\u6811\u4e0a\u7684\u6df1\u5ea6\uff0c\u4e14\u4ee4\u6839\u8282\u70b9\u6df1\u5ea6\u4e3a $0$\uff0c\u5219 $dep(u)$ \u5c31\u4ee3\u8868\u4e86 $u$ \u6240\u5bf9\u5e94\u7684\u524d\u7f00\u7684\u957f\u5ea6\uff0c\u5343\u4e07\u8981\u60f3\u6e05\u695a\u8fd9\u4e2a $dep$ \u6307\u7684\u662f\u5b57\u5178\u6811\u4e0a\u7684\u6df1\u5ea6\uff0c\u4e0d\u662f\u5931\u914d\u6811\u4e0a\u7684\u6df1\u5ea6\u3002\n\n\u5bf9\u4e8e $u=sta(i)\\ \\ (i\\in[l,l+d-2])$\uff0c\u6211\u4eec\u5728\u5931\u914d\u6811\u4e0a\u8df3\u7956\u5148\uff0c\u8df3\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3 $dep(v)\\leq i-l+1$ \u7684\u7956\u5148 $v$\uff0c\u5219 $cnt(v)$ \u4e00\u5b9a\u53ea\u5305\u542b\u4e14\u5305\u542b\u6240\u6709\u4e0d\u8de8\u8d8a\u5de6\u7aef\u70b9 $l$ \u7684\u6a21\u5f0f\u4e32\u7684\u8d21\u732e\uff0c\u53ef\u4ee5\u7d2f\u548c\u8fdb\u7b54\u6848\u4e86\u3002\u518d\u8003\u8651\u5230\u5b57\u5178\u6811\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7 $50$\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u72b6\u6001 $u$ \u9884\u5904\u7406\u51fa $fa(u,x)$\uff0c\u4ee3\u8868\u4e86\u72b6\u6001 $u$ \u5728\u5931\u914d\u6811\u4e0a\u7b2c\u4e00\u4e2a $dep$ \u4e0d\u8d85\u8fc7 $x$ \u7684\u7956\u5148\uff0c\u5e76\u8ba4\u4e3a $fa(u,dep(u)) = u$\u3002\n\n\u90a3\u4e48\u4e00\u6b21\u67e5\u8be2\u7684\u7b54\u6848\u5c31\u662f\uff1a\n$$\n\\sum_{i=l}^{i+d-2}cnt(fa(sta(i),i-l+1)) + \\sum_{i=l+d-1}^{r}cnt(sta(i))\n$$\n\u524d\u534a\u90e8\u5206\u56e0\u4e3a $d$ \u6bd4\u8f83\u5c0f\u7684\u7f18\u6545\u53ef\u4ee5\u66b4\u529b\u6c42\uff0c\u540e\u534a\u90e8\u5206\u4e0d\u53ef\u66b4\u529b\u6c42\uff0c\u4f46\u53ef\u7528\u7ebf\u6bb5\u6811\u6c42\u3002\n\n\u82e5 $r \\leq i+d-2$\uff0c\u90a3\u4e48\u76f8\u5e94\u7684\uff0c\u7b54\u6848\u53d8\u6210\uff1a\n$$\n\\sum_{i=l}^{r}cnt(fa(sta(i),i-l+1))\n$$\n\n#### \u4fee\u6539\u64cd\u4f5c\n\n\u67e5\u8be2\u8003\u8651\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u8be5\u8003\u8651\u4fee\u6539\u4e86\u3002\n\n\u8bbe\u4e00\u6b21\u4fee\u6539\u4e2d\u4fee\u6539\u7684\u533a\u95f4\u662f $[l,r]$\uff0c \u4fee\u6539\u64cd\u4f5c\u4e2d\u7ed9\u51fa\u4e86\u7684\u4e32\u79f0\u4f5c $T$\uff0c$t$ \u4e3a $T$ \u7684\u957f\u5ea6\u3002\n\n\u56e0\u4e3a\u67e5\u8be2\u64cd\u4f5c\u7684\u56de\u7b54\u53ea\u6d89\u53ca\u5230\u76ee\u6807\u4e32\u7684 $sta$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u4fee\u6539\u64cd\u4f5c\u5bf9\u54ea\u4e9b $i$ \u7684 $sta(i)$ \u6709\u5f71\u54cd\u4ee5\u53ca\u5f71\u54cd\u540e\u65b0\u7684 $sta(i)$ \u662f\u4ec0\u4e48\u3002\n\n\u9996\u5148\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\u4fee\u6539\u64cd\u4f5c\u5bf9 $i\\in[1,l-1]$ \u7684 $sta(i)$ \u6ca1\u5f71\u54cd\uff0c\u540c\u65f6\u56e0\u4e3a $i\\in[r+d,n]$ \u4e2d\u7684 $sta(i)$ \u4e0d\u5b58\u5728\u8de8\u8d8a\u7aef\u70b9 $r+1$ \u7684\u6a21\u5f0f\u4e32\uff0c\u4fee\u6539\u64cd\u4f5c\u5176 $sta(i)$ \u4e5f\u6ca1\u5f71\u54cd\u3002\n\n\u4e8e\u662f\u4fee\u6539\u64cd\u4f5c\u80fd\u5f71\u54cd\u7684\u533a\u95f4\u5206\u6210 $[l,r]$ \u548c $[r+1,r+d-1]$ \u4e24\u90e8\u5206\u3002\n\n\u540e\u4e00\u90e8\u5206\u6bd4\u8f83\u5bb9\u6613\uff0c\u53ea\u8981\u6c42\u51fa\u4e86\u4fee\u6539\u540e\u7684\u65b0 $sta(r)$ \uff0c\u7528\u5b83\u4f5c\u4e3a\u521d\u59cb\u72b6\u6001\u5728 $\\text{AC}$ \u81ea\u52a8\u673a\u4e0a\u5339\u914d\u539f\u76ee\u6807\u4e32\u7684\u5b50\u4e32 $[r+1,r+d-1]$ \u5c31\u53ef\u4ee5\u6c42\u51fa $[r+1,r+d-1]$ \u7684\u65b0 $sta$ \u4e86\u3002\n\n\u56e0\u4e3a\u76ee\u6807\u4e32\u4f1a\u968f\u7740\u4fee\u6539\u64cd\u4f5c\u4e0d\u65ad\u53d8\u5316\uff0c\u4e00\u4f1a\u6211\u4eec\u8fd8\u9700\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u76ee\u6807\u4e32\u4e0a\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u4ec0\u4e48\u5b57\u7b26\u3002\n\n\u524d\u534a\u90e8\u5206\u5219\u5f88\u9ebb\u70e6\uff0c\u5982\u679c\u9898\u76ee\u6ca1\u6709\u641e\u51fa\u5468\u671f\u8986\u76d6\u8fd9\u4e00\u6bd2\u7624\u7684\u64cd\u4f5c\uff0c\u800c\u662f\u8ba9 $T$ \u521a\u597d\u5d4c\u5165\u533a\u95f4 $[l,r]$ \uff0c\u4e5f\u5373 $t=r-l+1$\uff0c\u90a3\u4e48\u56e0\u4e3a $\\sum t \\leq 10^6$\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ee5 $sta(l-1)$ \u4f5c\u4e3a\u521d\u59cb\u72b6\u6001\u5728 $\\text{AC}$ \u81ea\u52a8\u673a\u4e0a\u5339\u914d $T$ \u6c42\u51fa\u533a\u95f4 $[l,r]$ \u7684\u65b0 $sta$\u3002\n\n\u4e0d\u8fc7\u5468\u671f\u4e32\u4e5f\u6709\u5468\u671f\u4e32\u7684\u7279\u6027\uff0c\u663e\u7136\u5f53 $i\\in[l+d-1,r]$\uff0c\u56e0\u4e3a\u539f\u76ee\u6807\u4e32\u4e0a\u7b2c $l-1$ \u53ca\u4e4b\u524d\u7684\u5b57\u7b26\u4e0d\u518d\u80fd\u5f71\u54cd\u5230\u65b0 $sta(i)$ \u4e86\uff0c\u4e8e\u662f\u65b0 $sta(i)$ \u5c31\u4f1a\u4ee5 $t$ \u4e3a\u5468\u671f\u5448\u5468\u671f\u53d8\u5316\uff0c\u5373 $sta(i)=sta(i+t)$\u3002\n\n\u4e8e\u662f\u5728\u5904\u7406\u4fee\u6539\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u5148\u505a\u4e00\u6b65\u5224\u65ad\u3002\n\n\u82e5 $r \\leq l+d+t-1$\uff0c\u76f4\u63a5\u66b4\u529b\u5339\u914d\u51fa\u533a\u95f4 $[l,r]$ \u7684\u65b0 $sta$\u3002\n\n\u82e5 $r > l+d+t-1$\uff0c\u5148\u5339\u914d\u51fa $[l,l+d+t-2]$ \u7684\u65b0 $sta$\uff0c\u7136\u540e\u7528 $[l+d-1, l+d+t-2]$ \u91cc\u7684\u65b0 $sta$\uff08\u533a\u95f4\u957f\u5ea6\u4e3a $t$\uff09\u53bb\u5468\u671f\u8986\u76d6 $[l+d+t-1,r]$ \u91cc\u7684\u65b0 $sta$\u3002\n\n\u8fd9\u91cc\u79f0 $[l+d-1, l+d+t-2]$ \u91cc\u7684\u65b0 $sta$ \u4e3a\u6570\u503c\u533a\u95f4\uff0c\u8bb0\u4f5c $val([1,t])$\u3002 \n\n\u5230\u8fd9\u91cc\u4fee\u6539\u64cd\u4f5c\u7684\u5904\u7406\u5c31\u6e05\u6670\u4e86\uff0c\u6211\u4eec\u9700\u8981\u65b0\u7684\u6570\u636e\u7ed3\u6784\u53bb\u5b9e\u73b0\u5468\u671f\u8986\u76d6\u8fd9\u4e00\u64cd\u4f5c\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c$sta$ \u7684\u7ef4\u62a4\u9700\u8981\u7528\u5230\u533a\u95f4\u8986\u76d6\uff0c\u76ee\u6807\u4e32\u7684\u7ef4\u62a4\u4e5f\u9700\u8981\u7528\u5230\u533a\u95f4\u8986\u76d6\uff0c\u8fd9\u4e2a\u65b0\u6570\u636e\u7ed3\u6784\u8981\u6709\u4e24\u4efd\u53bb\u5206\u522b\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u3002\n\n\u5f62\u5f0f\u5316\u5730\u63cf\u8ff0\u8fd9\u4e2a\u65b0\u6570\u636e\u7ed3\u6784\uff1a\n\n1. \u7ed9\u5b9a $l,r$ \u548c\u6570\u503c\u533a\u95f4 $val([1,t])$ \uff0c\u9700\u8981\u5468\u671f\u8986\u76d6\u533a\u95f4 $[l,r]$ \u91cc\u7684 $val$ \u3002\n2. \u7ed9\u5b9a $i$ \uff0c\u67e5\u8be2 $val(i)$ \uff08\u5373 $i$ \u5904\u7684\u503c\uff09\u3002\n3. \u7ed9\u5b9a $i$ \u548c $vl$\uff0c\u5355\u70b9\u4fee\u6539 $val(i)$ \u4e3a $vl$\u3002\n4. \u7ed9\u5b9a $l,r$\uff0c\u67e5\u8be2 $\\sum_{i=l}^{r} cnt(val(i))$\u3002\n\n\ufe3f(\uffe3\ufe36\uffe3)\ufe3f\uff0c\u4e00\u5f00\u59cb\u6211\u53c8\u53cc\u53d2\u53d5\u5730\u53bb\u60f3\u5e73\u8861\u6811\u4e86\uff0c\u60f3\u4e86\u4e00\u4f1a\u653e\u5f03\u4e86\uff0c\u90a3\u7801\u91cf\u4ee4\u4eba\u5d29\u6e83\u3002\n\n\u4e0d\u8003\u8651\u5e73\u8861\u6811\uff0c\u90a3\u8003\u8651\u5565\uff0c\u5206\u5757\u53ef\u4ee5\u5417\uff1f\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6f5c\u610f\u8bc6\u91cc\u75af\u72c2\u907f\u5f00\u7ebf\u6bb5\u6811\uff09\u3002\n\n\u5206\u5757\u597d\u50cf\u53ef\u4ee5\uff0c\u9996\u5148\u7528 ```vector``` \u8bb0\u5f55\u6bcf\u6b21\u5468\u671f\u8986\u76d6\u64cd\u4f5c\u7684\u6570\u503c\u533a\u95f4 $val([1,t])$ \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757 $x$\uff0c\u5bf9\u5e94\u533a\u95f4 $[bl,br]$ \uff0c\u82e5\u6574\u4e2a\u5757\u5728\u67d0\u6b21\u5468\u671f\u8986\u76d6\u64cd\u4f5c\u65f6\u88ab $[l,r]$ \u5305\u62ec\uff0c\u5219\u6253\u4e0a\u61d2\u6807\u8bb0\u3002\n\n\u61d2\u6807\u8bb0\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u8868\u793a\u54ea\u6b21\u5468\u671f\u4fee\u6539 $v(x)$\uff0c\u4e00\u79cd\u8868\u793a\u5de6\u7aef\u70b9 $bl$ \u5bf9\u5e94\u7684\u662f $val([1,t])$ \u91cc\u7684\u7b2c\u51e0\u4e2a\u503c $bg(x)$\uff08$bg(x)$ \u6307\u7684\u662f $bl$ \u5bf9\u5e94\u7684\u503c\u7684\u4f4d\u7f6e\uff0c\u4e0d\u662f $bl$ \u5bf9\u5e94\u7684\u503c\uff09\u3002\n\n\u82e5\u5757\u4e0d\u5b8c\u5168\u5728 $[l,r]$ \u5185\uff0c\u5219\u66b4\u529b\u4fee\u6539\uff08\u66b4\u529b\u4fee\u6539\u4e4b\u524d\u82e5\u5757\u4e0a\u6709\u61d2\u6807\u8bb0\u5219\u8fd8\u8981\u5148\u4e0b\u4f20\u6807\u8bb0\uff09\u5e76\u4e14\u4e0d\u6253\u4e0a\u6807\u8bb0\u3002\n\n\u7136\u540e\u8003\u8651\u6253\u4e0a\u61d2\u6807\u8bb0\u540e\u5757\u7684 $\\sum_{i=bl}^{br} cnt(val(i))$ \u5982\u4f55\u6c42\uff0c\u8fd9\u53c8\u8981\u5f00\u4e00\u4e2a ```vector``` \u8bb0\u5f55\u6bcf\u6b21\u533a\u95f4\u5468\u671f\u8986\u76d6\u64cd\u4f5c\u7684 $cnt(val[1,t])$ \u7684\u524d\u7f00\u548c\uff08\u5f3a\u8c03\u4e00\u4e0b\u662f\u524d\u7f00\u548c\uff09\u3002 \n\n\u7136\u540e\u53d1\u73b0\u81ea\u5df1\u53c8\u53cc\u53d2\u53d5\u5730\u77f3\u4e50\u5fd7\uff0c\u8fd9\u5206\u5757\u7ef4\u62a4\u64cd\u4f5c\u662f\u6253\u61d2\u6807\u8bb0\u554a\uff0c\u5e72\u561b\u4e0d\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u4e8e\u662f\u8fd9\u4e2a\u65b0\u7684\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\uff0c\u65b9\u6cd5\u4e0e\u4e0a\u8ff0\u5206\u5757\u65b9\u6cd5\u5927\u540c\u5c0f\u5f02\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e24\u9897\u7ebf\u6bb5\u6811\uff0c\u4e24\u9897\u90fd\u8981\u7ef4\u62a4\u5468\u671f\u8986\u76d6\u548c\u5355\u70b9\u67e5\u8be2\u7684\u64cd\u4f5c\uff0c\u4e00\u9897\u7ef4\u62a4\u7684\u662f\u76ee\u6807\u4e32\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u662f\u4ec0\u4e48\u5b57\u7b26\uff0c\u4e00\u9897\u7ef4\u62a4\u7684\u662f\u76ee\u6807\u4e32\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u6240\u5339\u914d\u7684\u72b6\u6001\uff0c\u540e\u8005\u8fd8\u8981\u7ef4\u62a4\u533a\u95f4\u6c42\u548c\u3002\n\n\u7b97\u6cd5\u4e0a\u5230\u8fd9\u91cc\u8fd9\u9898\u5c31\u7ed3\u675f\u4e86\uff0c\u7136\u540e\u5c31\u662f\u53d1\u6325\u8d85\u7801\u529b\u7684\u65f6\u5019\u4e86\u3002\n\n\u4e3a\u4e86\u7ef4\u62a4\u5468\u671f\u8986\u76d6\u8fd9\u4e00\u64cd\u4f5c\uff0c\u4f60\u9700\u8981\u5199\u4e00\u4e2a\u7ec6\u8282\u5de8\u591a\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u672a\u6765\u590d\u4e60\uff0c\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u7684\u6838\u5fc3\u5b9e\u73b0\uff0c\u771f\u5fc3\u5efa\u8bae\u8fd9\u4e00\u90e8\u5206\u81ea\u5df1\u60f3\uff0c\u770b\u9898\u89e3\u6ca1\u7528\uff0c\u770b\u4e86\u9898\u89e3\u8fd8\u662f\u8981\u81ea\u5df1\u60f3\uff0c\u4e0d\u5982\u4e0d\u770b\u9898\u89e3\u3002 \n\n\u5468\u671f\u8986\u76d6\u64cd\u4f5c\u677f\u5b50\u3002\n\n```cpp\n//\u4ee3\u7801\u4e2d cnt(u) \u4ee3\u8868\u4e86\u72b6\u6001 u \u7684\u8d21\u732e\u3002\n\n#define maxn 1000005\n#define maxq 100005\nint rg; //\u7ebf\u6bb5\u6811\u503c\u57df\u7684\u6700\u5927\u503c\uff0c\u5373\u7ebf\u6bb5\u6811\u7684\u503c\u57df\u662f [1,rg]\nvector<int> vs[maxq]; //\u8bb0\u5f55\u5468\u671f\u8986\u76d6\u65f6\u7684\u6570\u503c\u533a\u95f4 val([1,t])\uff0c\u4e0b\u6807\u4ece 1 \u5f00\u59cb\nvector<ll> vsm[maxq]; //\u8bb0\u5f55\u5468\u671f\u8986\u76d6\u662f cnt(val[1,t]) \u7684\u524d\u7f00\u548c\uff0c\u4e0b\u6807\u4ece 1 \u5f00\u59cb\n//\u4e0b\u6807\u4ece 1 \u5f00\u59cb\uff0c\u4e0b\u6807 0 \u5904\u8865\u4f4d\u4e86\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u67d0\u6b21\u5468\u671f\u8986\u76d6\u4fee\u6539\u65f6\u6570\u503c\u533a\u95f4\u7684\u957f\u5ea6\u4e3a vs[*].size()-1\nstruct Seg{\n    int v, //\u61d2\u6807\u8bb0\u4e4b\u4e00\uff0c\u8bb0\u5f55\u8be5\u7ebf\u6bb5\u6811\u533a\u95f4 [tl,tr] \u88ab\u54ea\u6b21\u5468\u671f\u8986\u76d6\u4fee\u6539\u64cd\u4f5c\u8986\u76d6\uff0c0 \u5219\u4ee3\u8868\u6ca1\u6709\n    \tb, //\u61d2\u6807\u8bb0\u4e4b\u4e00\uff0c\u8bb0\u5f55\u5de6\u7aef\u70b9\u5bf9\u5e94\u72b6\u6001\u5728 vs[v] \u4e2d\u7684\u4f4d\u7f6e \n    \ts; //\u5355\u4e2a\u70b9\u7684\u72b6\u6001\uff0c\u5373 sta\uff0c\u4ec5\u5728\u53f6\u5b50\u8282\u70b9\u5904\u6709\u610f\u4e49\n   \tll sm; //\u533a\u95f4\u6c42\u548c\n}seg[maxn<<2];\n#define v(x) seg[x].v\n#define b(x) seg[x].b\n#define s(x) seg[x].s\n#define sm(x) seg[x].sm\n#define lx (x<<1)\n#define rx (rx<<1|1)\n\n//push up \u64cd\u4f5c\nvoid ud(int x){\n    sm(x) = sm(lx) + sm(rx);\n}\n\n//\u8be5\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u61d2\u6807\u8bb0\u4f5c\u7528\u5230\u7ebf\u6bb5\u6811\u4e0a\u7684\u67d0\u4e00\u8282\u70b9\n//x\u3001tl\u548ctr \u5206\u522b\u4ee3\u8868\u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u7f16\u53f7\u3001\u5bf9\u5e94\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\n//vl \u4ee3\u8868\u5468\u671f\u8986\u76d6\u64cd\u4f5c\u7684\u7f16\u53f7\uff0cbg \u4ee3\u8868\u5de6\u7aef\u70b9 tl \u5bf9\u5e94\u7684\u503c\u5728 vs[vl] \u4e2d\u7684\u4f4d\u7f6e\nvoid spread(int x, int vl, int bg, int tl, int tr){\n    b(x) = bg; v(x) = vl;\n    if (tl == tr){\n        //\u6807\u8bb0\u5230\u53f6\u5b50\u8282\u70b9\u65f6\n        s(x) = vs[vl][bg];\n        sm(x) = cnt(s(x));\n        return;\n    }\n    int mi = (tl+tr)>>1, //\u4e2d\u70b9\n    \tt = vs.size()-1, //\u6570\u503c\u533a\u95f4 val([1,t]) \u7684\u957f\u5ea6\n    \tk = (tr-tl+1)/t, //\u4ee3\u8868\u533a\u95f4 [tl,tr] \u5b8c\u6574\u5305\u542b\u4e86\u51e0\u6b21\u6570\u503c\u533a\u95f4 val([1,t])\n    \ted = (bg+tr-tl-1)%t+1; //tl \u5bf9\u5e94\u7684\u4f4d\u7f6e\u662f bg\uff0ctr\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5c31\u662f (bg+tr-tl-1)%t+1 \u4e86\n    sm(x) = k*vsm[vl][t]; //\u6574\u6bb5\u6570\u503c\u533a\u95f4\u7684\u8d21\u732e\n    if (ed == bg-1 || (bg == 1 && ed == t)){//[tl,tr] \u7684\u957f\u5ea6\u662f t \u7684\u500d\u6570\u7684\u60c5\u51b5\uff0c\u76f4\u63a5 return \u5c31\u884c\u4e86\n        return;\n    } \n    else if (ed >= bg){ //\u7d2f\u52a0\u8d21\u732e\n        sm(x) += vsm[vl][ed]-vsm[vl][bg-1];\n    }\n    else{ //\u7d2f\u52a0\u8d21\u732e\n        sm(x) += vsm[vl][t]-vsm[vl][bg-1]+vsm[vl][ed];\n    }\n}\n\n//push down \u64cd\u4f5c\nvoid pd(int x, int tl, int tr){\n    int mi = (tl+tr)>>1;\n    spread(lx, v(x), b(x), tl, mi);\n    //tl \u5bf9\u5e94 b(x)\uff0cmi+1 \u5bf9\u5e94\u7684\u5c31\u662f (b(x)+(mi+1)-tl-1)%t+1 \u5373 (b(x)+mi-tl)%(vs[v(x)].size()-1)+1 \u4e86\n    spread(rx, v(x), (b(x)+mi-tl)%(vs[v(x)].size()-1)+1, mi+1, tr);\n\tv(x) = b(x) = 0;\n}\n\n//\u5468\u671f\u8986\u76d6\u64cd\u4f5c\n//vl \u4ee3\u8868\u5468\u671f\u8986\u76d6\u64cd\u4f5c\u7684\u7f16\u53f7\uff0cbg \u4ee3\u8868\u5de6\u7aef\u70b9 l \u5bf9\u5e94\u7684\u503c\u5728 vs[vl] \u4e2d\u7684\u4f4d\u7f6e\nvoid cover(int x, int vl, int bg, int l, int r, int tl, int tr){\n    if (l == tl && r == tr) return spread(x, vl, bg, tl, tr);\n    if (v(x)) pd(x, tl, tr);\n    int mi = (tl+tr)>>1;\n    if (r <= mi) cover(lx, vl, bg, l, r, tl, mi);\n    else if (l > mi) cover(rx, vl, bg, l, r, mi+1, tr);\n    else{\n        cover(lx, vl, bg, l, mi, tl, mi);\n    \t//l \u5bf9\u5e94 b(x)\uff0cmi+1 \u5bf9\u5e94\u7684\u5c31\u662f (bg+mi-l)%(vs[vl].size()-1)+1 \u4e86\n    \tcover(rx, vl, (bg+mi-l)%(vs[vl].size()-1)+1, mi+1, r, mi+1, tr);\n    }\n    ud(x);\n}\n\n//\u5355\u70b9\u67e5\u8be2\n// p \u662f\u8981\u67e5\u8be2\u7684\u4f4d\u7f6e\nvoid qry(int p){\n    int x = 1, tl = 1, tr = rg, mi;\n    while(tl < tr){\n        //tl \u5bf9\u5e94 b(x)\uff0cp \u5bf9\u5e94\u7684\u5c31\u662f (b(x)+p-tl-1)%(vs[v(x)].size()-1)+1 \u4e86\n        if (v(x)) return (b(x)+p-tl-1)%(vs[v(x)].size()-1)+1;\n    \tmi = (tl+tr)>>1;\n        if (p <= mi) x = lx, tr = mi;\n        else x = rx, tl = mi+1;\n    }\n    //\u67e5\u8be2\u5230\u4e86\u53f6\u5b50\u8282\u70b9\n    return s(x);\n}\n\n//\u5355\u70b9\u4fee\u6539\n//p \u662f\u8981\u4fee\u6539\u7684\u4f4d\u7f6e\uff0cvl \u662f\u65b0\u7684\u503c\uff08\u6ce8\u610f\u533a\u522b\u5468\u671f\u8986\u76d6\u64cd\u4f5c\u4e2d\u7684 vl\uff0c\u542b\u4e49\u4e0d\u540c\uff09\nvoid mdf(int x, int vl, int p, int tl, int tr){\n    if (tl == tr){ sm(x) = cnt(s(x) = vl); return; }\n    if (v(x)) pd(x, tl, tr);\n    int mi = (tl+tr)>>1;\n    if (p <= mi) mdf(lx, vl, p, tl, mi);\n    else mdf(rx, vl, p, mi+1, tr);\n    ud(x);\n}\n```\n\n$\\text{AC}$ \u81ea\u52a8\u673a\u90a3\u90e8\u5206\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u8fd9\u73a9\u610f\u5341\u5206\u949f\u5c31\u80fd\u7801\u51fa\u6765\u3002\n\n\u5b8c\u6574\u7684 ```7k``` \u4ee3\u7801\u5982\u4e0b\u3002\n\n\u53d8\u91cf\u91cd\u540d\u7684\u95ee\u9898\u7ea0\u7ed3\u4e86\u597d\u4e00\u4f1a\uff0c\u4ee3\u7801\u4e11\u5230\u653e\u4e45\u4e86\u81ea\u5df1\u90fd\u770b\u4e0d\u61c2\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(d \\cdot \\sum s_i + q\\cdot d \\cdot \\log n + \\sum t)$\uff0c\u8dd1\u4e0d\u6ee1\u3002\n\n\u5361\u4e86\u70b9\u5e38\uff0c\u7ebf\u6bb5\u6811\u7684\u5b9e\u73b0\u4e0e\u4e0a\u9762\u63cf\u8ff0\u7684\u6709\u4e9b\u4e0d\u540c\uff08\u4e0d\u8fc7\u65e0\u6240\u8c13\uff0c\u53cd\u6b63\u4e11\u5230\u6ca1\u4eba\u770b\u7684\uff09\u3002\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\n#define re register\n#define sf scanf\n#define pf printf\n#define nl() putchar('\\n')\n#define ms(x, val) memset(x, val, sizeof(x))\n#define ll long long\n#define _for(i, a, b) for(re int (i) = (a); (i) < (b); ++(i))\n#define _rfor(i, a, b) for(re int (i) = (a); (i) <= (b); ++(i))\n#define _fev(p, u) for(re int (p) = head(u); (p); (p) = nex(p))\n#define pb push_back\n#define inf 0x7fffffff\n#define maxn 1000005\n#define maxm 200005\n#define maxq 100005\n#define maxs 51\n#define maxc 62\n\ntemplate <class T>\nvoid print(string name, T arr[], int n, int flag = 1){\n\tcout<<name<<\":\";\n\t_for(i, 0, n)cout<<\" \"<<arr[i+flag];\n\tcout<<endl;\n}\n\nint rdnt(){\n\tre int x = 0, sign = 1;\n\tre char c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') sign = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (c ^ 48), c = getchar();\n\treturn x * sign;\n}\n\nchar mstr[maxn], str[maxn];\nint\tncnt = 1, ecnt = 1, rg, mpc[128], que[maxm], stk[maxn];\nstruct Edge{ int to, nex; } edge[maxm*2];\nstruct ACAM{ int head, fail, dep, nxt[maxc], fa[maxs]; ll cnt; } acam[maxm];\nstruct Seg{ int b, v, e, w, s; ll sm; } seg[maxn*4];\nvector<int> vs[maxq];\nvector<ll> vsm[maxq];\nvector<char> vstr[maxq];\n#define to(x) edge[x].to\n#define nex(x) edge[x].nex\n#define head(x) acam[x].head\n#define fail(x) acam[x].fail\n#define dep(x) acam[x].dep\n#define cnt(x) acam[x].cnt\n#define nxt(x, c) acam[x].nxt[c]\n#define fa(x, i) acam[x].fa[i]\n#define b(x) seg[x].b\n#define v(x) seg[x].v\n#define e(x) seg[x].e\n#define w(x) seg[x].w\n#define sm(x) seg[x].sm\n#define s(x) seg[x].s\n#define lx (x<<1)\n#define rx (x<<1|1)\n\nvoid spread(re int x, re int vl, re int bg, re int tl, re int tr){\n\tif (tl == tr) sm(x) = cnt(s(x) = vs[vl][bg]), v(x) = b(x) = 0;\n\tb(x) = bg; v(x) = vl;\n\tre int t = vs[vl].size()-1, ed = bg+(tr-tl+1)%t-1;\n\tsm(x) = (tr-tl+1)/t*vsm[vl][t];\n\tif (ed < bg) return;\n\tif (ed <= t) sm(x) += vsm[vl][ed] - vsm[vl][bg-1];\n\telse sm(x) += vsm[vl][t] - vsm[vl][bg-1] + vsm[vl][ed-t];\n}\n\nvoid pd(re int x, re int tl, re int tr){\n\tre int mi = (tl+tr)>>1;\n\tspread(lx, v(x), b(x), tl, mi);\n\tspread(rx, v(x), (b(x)+mi-tl)%(vs[v(x)].size()-1)+1, mi+1, tr);\n\tv(x) = b(x) = 0;\n}\n\nvoid ud(re int x){\n\tsm(x) = sm(lx) + sm(rx); \n}\n\nvoid cover(int x, int vl, int bg, int l, int r, int tl, int tr){\n\tif (l == tl && r == tr) return spread(x, vl, bg, tl, tr);\n\tif (v(x)) pd(x, tl, tr);\n\tint mi = (tl+tr)>>1;\n\tif (r <= mi) cover(lx, vl, bg, l, r, tl, mi);\n\telse if (l > mi) cover(rx, vl, bg, l, r, mi+1, tr);\n\telse{\n\t\tcover(lx, vl, bg, l, mi, tl, mi);\n\t\tcover(rx, vl, (bg+mi-l)%(vs[vl].size()-1)+1, mi+1, r, mi+1, tr);\n\t}\n\tud(x);\n}\n\nvoid mdf(int x, int *tmp, int l, int r, int tl, int tr){\n\tif (tl == tr){ v(x) = b(x) = 0; sm(x) = cnt(s(x) = tmp[1]); return; }\n\tif (v(x)) pd(x, tl, tr);\n\tint mi = (tl+tr)>>1;\n\tif (r <= mi) mdf(lx, tmp, l, r, tl, mi);\n\telse if (l > mi) mdf(rx, tmp, l, r, mi+1, tr);\n\telse mdf(lx, tmp, l, mi, tl, mi), mdf(rx, tmp+mi-l+1, mi+1, r, mi+1, tr);\n\tud(x);\n}\n\nint qry_s(re int p){\n\tre int x = 1, tl = 1, tr = rg, mi;\n\twhile(tl < tr){\n\t\tif (v(x)) return vs[v(x)][(b(x)+p-tl-1)%(vs[v(x)].size()-1)+1];\n\t\tmi = (tl+tr)>>1;\n\t\tif (p <= mi) x = lx, tr = mi;\n\t\telse x = rx, tl = mi+1;\n\t}\n\treturn s(x);\n}\n\nll qry_sm(int x, int l, int r, int tl, int tr){\n\tif (r < tl || l > tr) return 0;\n\tif (l <= tl && r >= tr) return sm(x);\n\tif (v(x)) pd(x, tl, tr);\n\tint mi = (tl+tr)>>1;\n\treturn qry_sm(lx, l, r, tl, mi) + qry_sm(rx, l, r, mi+1, tr);\n}\n\nvoid spreads(re int x, re int vl, re int bg){\n\tw(x) = vl; e(x) = bg;\n}\n\nvoid pds(int x, int tl, int tr){\n\tre int mi = (tl+tr)>>1;\n\tspreads(lx, w(x), e(x));\n\tspreads(rx, w(x), (e(x)+mi-tl)%(vstr[w(x)].size()-1)+1);\n\te(x) = w(x) = 0;\n}\n\nvoid chg(int x, int vl, int bg, int l, int r, int tl, int tr){\n\tif (l == tl && r == tr) return spreads(x, vl, bg);\n\tif (w(x)) pds(x, tl, tr);\n\tint mi = (tl+tr)>>1;\n\tif (r <= mi) chg(lx, vl, bg, l, r, tl, mi);\n\telse if (l > mi) chg(rx, vl, bg, l, r, mi+1, tr);\n\telse{\n\t\tchg(lx, vl, bg, l, mi, tl, mi);\n\t\tchg(rx, vl, (bg+mi-l)%(vstr[vl].size()-1)+1, mi+1, r, mi+1, tr);\n\t}\n}\n\nchar qry_str(re int p){\n\tre int x = 1, tl = 1, tr = rg, mi;\n\twhile(tl < tr){\n\t\tif (w(x)) return vstr[w(x)][(e(x)+p-tl-1)%(vstr[w(x)].size()-1)+1];\n\t\tmi = (tl+tr)>>1;\n\t\tif (p <= mi) x = lx, tr = mi;\n\t\telse x = rx, tl = mi+1;\n\t}\n\treturn vstr[w(x)][e(x)];\n}\n\nvoid add_edge(re int u, re int v){\n\tto(++ecnt) = v; nex(ecnt) = head(u); head(u) = ecnt;\n}\n\nvoid insert(re char *str){\n\tre int u = 1, c;\n\twhile(c = *str++){\n\t\tif (!nxt(u, c = mpc[c])) dep(nxt(u, c) = ++ncnt) = dep(u) + 1;\n\t\tu = nxt(u, c);\n\t}\n\t++cnt(u);\n}\n\nvoid dfs(int u){\n\t_fev(p, u){\n\t\tint v = to(p);\n\t\tcnt(v) += cnt(u);\n\t\tdfs(v);\n\t}\n}\n\nvoid build(){\n\tre int u, v, fro = 0, bac = 0;\n\tfail(1) = 1;\n\t_for(c, 0, maxc)\n\t\tif (v = nxt(1, c)) add_edge(fail(que[bac++] = v) = 1, v);\n\t\telse nxt(1, c) = 1;\n\twhile(bac > fro){\n\t\tu = que[fro++];\n\t\t_for(c, 0, maxc)\n\t\t\tif (v = nxt(u, c)) add_edge(fail(que[bac++] = v) = nxt(fail(u), c), v);\n\t\t\telse nxt(u, c) = nxt(fail(u), c);\n\t}\n\tdfs(1);\n\tv = 1;\n\t_rfor(u, 1, ncnt){\n\t\tdo{\n\t\t\tv = v == 1 ? u : fail(v);\n\t\t\tfa(u, dep(v)) = v;\n\t\t}while(v != 1);\n\t\t_for(i, 1, dep(u)) if (!fa(u, i)) fa(u, i) = fa(u, i-1);\n\t}\n}\n\nvoid handle(re int u, re int l, re int r, re char *str, re int len){\n\tre int top = 0, cur = 0;\n\t_rfor(i, l, r) stk[++top] = u = nxt(u, mpc[(int)str[cur = cur%len+1]]);\n\tmdf(1, stk, l, r, 1, rg);\n}\n\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"sample.in\", \"r\", stdin);\n\tfreopen(\"sample.out\", \"w\", stdout);\n\t#endif\n\t\n\t_rfor(i, 'a', 'z') mpc[i] = i-'a';\n\t_rfor(i, 'A', 'Z') mpc[i] = i-'A'+26;\n\t_rfor(i, '0', '9') mpc[i] = i-'0'+52;\n\tre int n = rg = rdnt(), m = rdnt(), q = rdnt(), d = 0;\n\tsf(\"%s\", mstr+1);\n\tvstr[q+1].pb(0); _rfor(i, 1, n) vstr[q+1].pb(mstr[i]);\n\tchg(1, q+1, 1, 1, n, 1, rg);\n\t_rfor(i, 1, m) sf(\"%s\", str+1), d = max(d, (int)strlen(str+1)), insert(str+1);\n\tbuild();\n\thandle(1, 1, n, mstr, n);\n\t_rfor(i, 1, q){\n\t\tre int opt = rdnt(), l = rdnt(), r = rdnt();\n\t\tif (opt == 1){\n\t\t\tre ll ans = 0;\n\t\t\tif (l+d-1 <= r) ans = qry_sm(1, l+d-1, r, 1, rg);\n\t\t\t_rfor(j, l, min(l+d-2, r)){\n\t\t\t\tre int u = qry_s(j);\n\t\t\t\tans += cnt(fa(u, min(dep(u), j-l+1)));\n\t\t\t}\n\t\t\tpf(\"%lld\\n\", ans);\n\t\t}\n\t\telse if (opt == 2){\n\t\t\tsf(\"%s\", str+1);\n\t\t\tre int t = strlen(str+1), u = l>1?qry_s(l-1):1;\n\t\t\tif (r <= l+d+t-2){\n\t\t\t\thandle(u, l, r, str, t);\n\t\t\t\tu = stk[r-l+1];\n\t\t\t}\n\t\t\telse{\n\t\t\t\thandle(u, l, l+d+t-2, str, t);\n\t\t\t\tvs[i].pb(0); vsm[i].pb(0);\n\t\t\t\t_for(j, 0, t) vs[i].pb(stk[d+j]), vsm[i].pb(cnt(stk[d+j]) + vsm[i][j]);\n\t\t\t\tcover(1, i, 1, l+d+t-1, r, 1, rg);\n\t\t\t\tu = vs[i][(r-l-d-t+1)%t+1];\n\t\t\t}\n\t\t\tif (r < n){\n\t\t\t\tre int h = min(r+d-1, n);\n\t\t\t\t_rfor(j, r+1, h) mstr[j] = qry_str(j);\n\t\t\t\thandle(u, r+1, h, mstr+r, n);\n\t\t\t}\n\t\t\tvstr[i].pb('\\0'); _rfor(j, 1, t) vstr[i].pb(str[j]);\n\t\t\tchg(1, i, 1, l, r, 1, rg);\n\t\t}\n\t}\n\n\treturn 0;\n}\n```\n\n",
        "postTime": 1636079644,
        "uid": 474113,
        "name": "MoYuFang",
        "ccfLevel": 7,
        "title": "\u3010P5599 \u3010XR-4\u3011\u6587\u672c\u7f16\u8f91\u5668\u3011\u9898\u89e3"
    }
]