[
    {
        "content": "\u5199\u5b8c\u91d1\u7ec4\u518d\u6765\u5199\u94f6\u7ec4\u3002\n\n\u4e24\u9898\u7684\u5c3f\u6027\u90fd\u5dee\u4e0d\u591a\uff0c\u4f9d\u7136\u662f\u66b4\u529b\u80fd\u591f\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\u95ee\u9898\u8981\u6c42\u6211\u4eec\u52a0\u56fa\u5176\u4e2d\u4e00\u4e2a\u8349\u5806\u4ee5\u907f\u514dBessie\u9003\u51fa\u8349\u5806\u3002\u5e76\u4e14\u5f53\u8fde\u7eed\u8dd1\u52a8\u7684\u8ddd\u79bb\u5927\u4e8e\u8be5\u8349\u5806\u7684\u5927\u5c0f\u5c31\u80fd\u6253\u7834\u8be5\u8349\u5806\u3002\u90a3\u4e48\u9700\u8981\u52a0\u56fa\u8be5\u8349\u5806\u7684size\u5c31\u7b49\u4e8e\u8dd1\u52a8\u7684\u8ddd\u79bb\u51cf\u53bb\u8be5\u8349\u5806\u7684\u5927\u5c0f\u3002\u90a3\u4e48\u6211\u4eec\u601d\u8003\u67d0\u4e00\u4e2a\u8349\u5806\u80fd\u591f\u88ab\u649e\u51fb\u7684\u6700\u5927\u52a0\u901f\u503c\u662f\u5728\u4e0d\u6253\u7834\u8be5\u8349\u5806\u7684\u524d\u63d0\u4e0b\u8ba9Bessie\u968f\u610f\u5012\u817e\u80fd\u591f\u5f00\u8f9f\u51fa\u7684\u6700\u5927\u7a7a\u95f4\u3002\n\n\u5982\u679c\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u649e\u51fb\u8be5\u8349\u5806\u7684\u6700\u5927\u52a0\u901f\u503c\u662fBessie\u5411\u53f3\u8dd1\u80fd\u591f\u5230\u8fbe\u7684\u6700\u53f3\u8349\u5806\u4f4d\u7f6e\u51cf\u53bb\u5f53\u524d\u8349\u5806\u4f4d\u7f6e\u3002\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u6ce8\u610f\u5728\u679a\u4e3e\u5b8c\u4e0a\u4e00\u4e2a\u7aef\u70b9\u540e\u4e0d\u9700\u8981\u628a\u53e6\u4e00\u8fb9\u7684\u4f4d\u7f6e\u6781\u503c\u91cd\u7f6e\u4e3a\u8dddBessie\u539f\u672c\u6700\u8fd1\u7684\u90a3\u4e2a\u70b9\uff0c\u56e0\u4e3a\u5982\u679cBessie\u5728\u4e0d\u6253\u7834\u4e0a\u4e00\u4e2a\u8349\u5806\u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u5230\u8fbe\u90a3\u4e2a\u70b9\uff0c\u90a3\u4e48\u6253\u7834\u4e4b\u540e\u4e5f\u4e00\u5b9a\u80fd\u3002\n\n\u7136\u540e\u662f\u5176\u4ed6\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u4f8b\u5982\u4ec0\u4e48\u65f6\u5019\u8f93\u51fa0\u4ec0\u4e48\u65f6\u5019\u8f93\u51fa-1\u3002\u8f93\u51fa0\u662f\u6307\u679a\u4e3e\u5b8c\u4e86\u5de6\u7aef\u70b9\u6216\u53f3\u7aef\u70b9\uff0c\u4f46\u662f\u53e6\u4e00\u8fb9\u7684\u4f4d\u7f6e\u6781\u503c\u59cb\u7ec8\u4e0d\u80fd\u5230\u8fbe0\u548cn+1\u7684\u60c5\u51b5\u3002\u4f1a\u5bfc\u81f4ans\u7684\u503c\u88ab\u66f4\u65b0\u6210\u8d1f\u6570\uff0c\u8f93\u51fa\u65f6\u7528max\u8c03\u6574\u4e00\u4e0b\u5c31\u884c\u3002\u8f93\u51fa-1\u53ea\u5f53Bessie\u5411\u4efb\u610f\u4e00\u8fb9\u8dd1\uff0c\u4f46\u662f\u751a\u81f3\u4e0d\u7528\u649e\u7834\u53e6\u4e00\u8fb9\u7684\u8349\u5806\u7684\u65f6\u5019\u5c31\u80fd\u9003\u79bb\u7684\u65f6\u5019\u8f93\u51fa\u3002\u8fd9\u65f6ans\u7684\u503c\u4e0d\u4f1a\u88ab\u66f4\u65b0\u3002\n## $Solution$\n```\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,b,ans=5201314314314,st=1;//\u8fd9\u91cc\u6700\u5927\u503c\u4e0d\u80fd\u5f00\u7684\u5c0f\u4e8e10^9\uff0c\u4e4b\u524d\u5f005201314\u628a\u6211\u4ece\u524d\u5929\uff01\u5361\u5230\uff01\u4eca\u5929\uff01\nstruct grass {\n\tlong long s,p;/\u8349\u5806\u7684\u5927\u5c0f\u4e0e\u4f4d\u7f6e\n} gra[100005];\nbool cmp(grass a,grass b) {\n\treturn a.p<b.p;\n}\nint main() {\n\tcin>>n>>b;\n\tfor(int i=1; i<=n; i++) \n\t\tcin>>gra[i].s>>gra[i].p;\n\tsort(gra+1,gra+n+1,cmp);\n\tfor(;st<=n;st++)\n\t\tif(gra[st+1].p>b)\n\t\t\tbreak;//\u4e4b\u524d\u7528\u4e8c\u5206\u67e5\u627e\u83ab\u540d\u5176\u5999\u7684\u6302\u4e86\uff0c\u81f3\u4eca\u672a\u89e3\n\tint l=st,r=st+1;\n\tfor(; l>=1; l--) {\n\t\twhile(r<=n&&gra[r].p-gra[l].p>gra[r].s)//\u5728\u80fd\u591f\u5411\u53f3\u5012\u817e\u7684\u65f6\u5019\u5c31\u4e00\u5b9a\u8981\u5012\u817e\u6362\u53d6\u53ef\u80fd\u7684\u6700\u5927\u7684\u52a0\u901f\u503c\n\t\t\tr++;\n\t\tif(r>n)\n\t\t\tbreak;\n\t\tans=min(ans,gra[r].p-gra[l].p-gra[l].s);//\u5728\u8be5\u70b9\u81f3\u5c11\u8981\u52a0\u56fa\u7684\u503c\u548cans\u53d6min\n\t}\n\tl=st;\n\tr=st+1;\n\tfor(; r<=n; r++) {\n\t\twhile(l>=1&&gra[r].p-gra[l].p>gra[l].s)//\u540c\u4e0a\n\t\t\tl--;\n\t\tif(l<1)\n\t\t\tbreak;\n\t\tans=min(ans,gra[r].p-gra[l].p-gra[r].s);//\u540c\u4e0a\n\t}\n\tif(ans==5201314314314)\n\t\tcout<<-1;//\u6709\u70b9\u7ed5\uff0c\u5982\u679c\u5de6\u8fb9\u548c\u53f3\u8fb9\u90fd\u65e0\u8bba\u52a0\u6ca1\u52a0\u56fa\u90fd\u65e0\u6cd5\u963b\u6b62Bessie\u9003\u51fa\u53bb\uff0c\u90a3\u4e48\u8f93\u51fa-1\u3002\n\telse cout<<max(ans,1ll*0);\n}\n```\nI'm Schwarzkopf Henkal.",
        "postTime": 1570694051,
        "uid": 251723,
        "name": "Schwarzkopf_Henkal",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3124 \u3010[USACO15OPEN]\u88ab\u56f0\u5728haybales\u3011"
    },
    {
        "content": "\u6240\u4ee5\u8fd9\u9053\u9898\u4e3a\u5565\u7528\u5230\u4e86\u5e76\u67e5\u96c6\uff1f\n\n\u60f3\u4e86\u534a\u5929\u4e5f\u6ca1\u53d1\u73b0\u5b83\u548c\u5e76\u67e5\u96c6\u6709\u534a\u6bdb\u94b1\u5173\u7cfb\n\n\u663e\u7136\u4f60\u53ef\u4ee5\u627e\u51fa\u6765bessie\u4e00\u5f00\u59cb\u5728\u54ea\u4e24\u4e2a\u8349\u5806\u4e4b\u95f4\uff0c\u5e76\u4e14\u4f60\u53d1\u73b0\u5982\u679c\u4e00\u5f00\u59cb\n\n\u8fd9\u4e24\u4e2a\u8349\u5806\u7684$size>$\u4e24\u8349\u5806\u95f4\u7684\u8ddd\u79bb$d$\u90a3\u6211\u4eec\u5b8c\u5168\u4e0d\u7528\u7ba1\u4e86\uff0c\u8f93\u51fa0\u5373\u53ef\uff0c\n\n\u5426\u5219\uff0c\u8ba9\u5979\u9009\u62e9\u4e00\u4e2a\u65b9\u5411\u51b2\u7834\uff0c\u800c\u53e6\u4e00\u4e2a\u65b9\u5411\u6211\u4eec\u7ed9\u5176\u52a0$size$\uff0c\u5982\u679c\u6ca1\u52a0\n\n\u7684\u4e00\u65b9\u6ca1\u6709\u80fd\u62e6\u4f4f\u5979\u7684\u8349\u5806\uff0c\u90a3\u53e6\u4e00\u7aef\u7684\u52a0\u56fa\u4e5f\u5c31\u4f5c\u5e9f\u4e86\uff0c\u6b64\u65f6\u8981\u8f93\u51fa-1\n\n**\u6ce8\u610f\u9898\u76ee\u4e0a\u8bf4\u7684\uff0c\u589e\u52a0\u67d0\u4e00\u5806\u5e72\u8349\u5806\u6307\u7684\u662f\u53ea\u589e\u52a0\u4e00\u5806\u7684size**\n\n\u5f00\u59cb\u6211\u8fd8\u5728\u60f3\u4e3a\u5565\u4f1a\u6709\u62e6\u4e0d\u4f4f\u7684\u60c5\u51b5QWQ\n\n\u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u8981\u6a21\u62df\u4e00\u4e0b\u5979\u8dd1\u7684\u8fc7\u7a0b\u5c31\u597d\u5566\uff0c\u8fd9\u91cc\u7528\u4e86\u4e24\u4e2a$while$\n\n\u5206\u522b\u679a\u4e3e\u5de6\u7aef\u70b9\u4e0e\u53f3\u7aef\u70b9\uff0c\u8868\u793a\u6211\u4eec\u8981\u52a0\u56fa\u54ea\u4e00\u4e2a\u65b9\u5411\u7684\u8349\u5806,\u5728\u679a\u4e3e\u8fc7\u7a0b\u4e2d\n\n\u6539\u53d8\u4e00\u4e0b$d$\u5c31\u597d\u5566\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n## code\n\n```cpp\n#include<bits/stdc++.h>\n#define R register\n#define inf 1e18\n#define int long long\n\nusing namespace std;\nconst int N = 1e5+5;\nint n,b,ans = inf,now;\nint l,r,d;\nstruct node {\n\tint pos,size;\n}g[N];\n\ninline bool cmp(node a,node b) { return a.pos < b.pos; }\n\nsigned main() {\n\tscanf(\"%lld%lld\",&n,&b);\n\tfor(R int i = 1;i <= n;++ i) {\n\t\tscanf(\"%lld%lld\",&g[i].size,&g[i].pos);\n\t}\n\tsort(g + 1,g + n + 1,cmp);\n\tfor(R int i = 1;i <= n;++ i)\n\t\tif(g[i].pos > b) { now = i;break; }\n\tl = now - 1,r = now,d = g[r].pos - g[l].pos;\n\twhile(l >= 1 && r <= n) {\n\t\tif(g[l].size >= d && g[r].size >= d) { printf(\"0\");return 0; }\n\t\tif(g[r].size < d) { r ++;d += g[r].pos - g[r - 1].pos;continue; }\n\t\tif(g[l].size < d) {\tans = min(d - g[l].size,ans);l --;d += g[l + 1].pos - g[l].pos; }\n\t}\n\tl = now - 1,r = now,d = g[r].pos - g[l].pos;\n\twhile(l >= 1 && r <= n) {\n\t\tif(g[l].size >= d && g[r].size >= d) { printf(\"0\");return 0; }\n\t\tif(g[l].size < d) { l --;d += g[l + 1].pos - g[l].pos;continue; }\n\t\tif(g[r].size < d) {\tans = min(d - g[r].size,ans);r ++;d += g[r].pos - g[r - 1].pos; }\n\t}\n\tprintf(\"%lld\",ans == inf ? -1 : ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1569019831,
        "uid": 160654,
        "name": "\u707c\u773c\u7684\u590f\u5a1c",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3124 \u3010[USACO15OPEN]\u88ab\u56f0\u5728haybales\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\u770b\u5230\u6709\u5173\u5750\u6807\u7684\u9898\u76ee\uff0c\u5f53\u7136\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u628a\u6240\u6709\u8349\u5806\u6309\u7167\u5750\u6807\u6392\u5e8f\u3002\u7136\u540e\u53d1\u73b0\u5976\u725b bessie \u4e5f\u6709\u5750\u6807\uff0c\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u627e\u5230 bessie \u5230\u5e95\u662f\u5728\u54ea\u4e24\u5806\u5e72\u8349\u4e2d\u95f4\u7684\u7a7a\u9699\u4e2d\uff08\u7136\u800c\u6211\u7b2c\u4e00\u6b21\u5199\u7684\u65f6\u5019\u5fd8\u4e86\u2026\u2026\uff09\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u6765\u627e\u3002  \n\n\u4e4b\u540e\u7167\u4f8b\u770b\u6240\u6c42\u7684\u5185\u5bb9\u3002\u6211\u4eec\u770b\u89c1\u9898\u76ee\u8981\u6c42\u7684\u662f\u628a bessie \u5835\u4f4f\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5728\u6bcf\u4e00\u4e2a\u8349\u5806\u628a bessie \u5835\u4f4f\u7684\u6700\u5c0f\u82b1\u8d39\u7684\u6700\u5c0f\u503c\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u505a\u7684\u662f\u63a2\u7a76\u4ec0\u4e48\u60c5\u51b5\u624d\u80fd\u628a bessie \u5835\u4f4f\u3002\u7531\u4e8e bessie \u53ef\u4ee5\u5728\u5b83\u6240\u5728\u7684\u4e24\u4e2a\u8349\u5806\u95f4\u9699\u4e2d\u53cd\u590d\u6a2a\u8df3\uff08\u5927\u96fe\uff09\uff0c\u5bb9\u6613\u77e5\u9053 bessie \u6467\u6bc1\u67d0\u4e00\u4e2a\u8349\u5806\u7684\u6761\u4ef6\u662f\u5f53\u524d bessie \u6240\u5728\u7684\u8349\u5806\u7a7a\u9699\u957f\u5ea6\u5927\u4e8e\u8be5\u8349\u5806\u7684\u5927\u5c0f\u3002\u90a3\u4e48\u5982\u679c\u8981\u628a bessie \u5835\u4f4f\uff0c\u5fc5\u987b\u8981\u4fdd\u8bc1\u5f53\u524d\u6240\u5728\u7a7a\u9699\u4e24\u7aef\u8349\u5806\u5927\u5c0f\u5747\u5927\u4e8e\u6216\u7b49\u4e8e\u7a7a\u9699\u957f\u5ea6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u82e5\u662f\u8981\u901a\u8fc7\u52a0\u9ad8\u67d0\u4e00\u8349\u5806\u628a bessie \u5835\u4f4f\uff0c\u5fc5\u987b\u6ee1\u8db3\u5835\u4f4f\u5b83\u65f6\u7a7a\u9699\u7684\u53e6\u4e00\u7aef\u7684\u8349\u5806\u5927\u5c0f\u5927\u4e8e\u6216\u7b49\u4e8e\u7a7a\u9699\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u5230\u6b64\u8349\u5806\u7684\u8ddd\u79bb\u5c0f\u4e8e\u5176\u5927\u5c0f\u7684\u8349\u5806\uff0c\u5e76\u628a\u5f53\u524d\u8349\u5806\u7684\u5927\u5c0f\u4fee\u6539\u4e3a\u8fd9\u4e00\u8ddd\u79bb\u3002  \n\n\u7531\u4e8e bessie \u7684\u51b2\u649e\u65b9\u5411\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\uff0c\u6211\u4eec\u5c06\u533a\u95f4\u5206\u4e3a bessie \u5de6\u8fb9\u4e0e\u53f3\u8fb9\u4e24\u90e8\u5206\u8fdb\u884c\u5206\u522b\u5904\u7406\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u533a\u95f4\uff0c\u6211\u4eec\u8bbe\u7acb\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u679a\u4e3e\u9700\u8981\u52a0\u9ad8\u7684\u8349\u5806\uff0c\u4e00\u4e2a\u6307\u5411\u53e6\u4e00\u7aef\uff0c\u4e24\u6307\u9488\u4ece\u4e2d\u95f4\u5f00\u59cb\u80cc\u5411\u79fb\u52a8\u5bfb\u627e\u7b54\u6848\u5373\u53ef\u3002\u8fd9\u662f\u56e0\u4e3a\u5bf9\u4e8e\u6211\u4eec\u679a\u4e3e\u7684\u8349\u5806\uff0c\u82e5\u662f\u4e0a\u4e00\u4e2a\u8349\u5806\u90fd\u65e0\u6cd5\u4e0e\u6307\u5411\u53e6\u4e00\u7aef\u7684\u6307\u9488\u4e4b\u524d\u6307\u5411\u7684\u4f4d\u7f6e\u5339\u914d\uff0c\u8fd9\u4e00\u6b21\u4e24\u8005\u8ddd\u79bb\u8fdb\u4e00\u6b65\u589e\u5927\uff0c\u4e4b\u524d\u6307\u5411\u7684\u4f4d\u7f6e\u5c31\u66f4\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\uff0c\u5373\u7b54\u6848\u6ee1\u8db3\u4e00\u5b9a\u7684\u5355\u8c03\u6027\u3002  \n\n## \u4ee3\u7801\n\u6ce8\u610f\u82e5\u5f53\u524d\u8349\u5806\u7684\u5927\u5c0f\u672c\u5c31\u9ad8\u4e8e\u7a7a\u9699\u957f\u5ea6\uff0c\u7b54\u6848\u4e3a $0$ \u800c\u4e0d\u662f\u8d1f\u6570\u3002\n```cpp\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint n,b,ans=0x7fffffff,x1,x2;\nstruct grass\n{\n\tint s,j;\n}a[100001];\ninline bool cmp(const grass &t1,const grass &t2)\n{\n\treturn t1.j<t2.j;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&b);\n\ta[0].j=b;\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d%d\",&a[i].s,&a[i].j);\n\tsort(a+1,a+n+1,cmp);\n\tx1=upper_bound(a+1,a+n+1,a[0],cmp)-a;\n\tx2=x1-1;\n\tfor(int i=x1,j=x2;i<=n&&j>0;++i)\n\t{\n\t\twhile(j>0&&a[j].s<a[i].j-a[j].j)\n\t\t\t--j;\n\t\tif(j>0)\n\t\t\tans=min(ans,max(0,a[i].j-a[j].j-a[i].s));\n\t}\n\tfor(int i=x1,j=x2;i<=n&&j>0;--j)\n\t{\n\t\twhile(i<=n&&a[i].s<a[i].j-a[j].j)\n\t\t\t++i;\n\t\tif(i<=n)\n\t\t\tans=min(ans,max(0,a[i].j-a[j].j-a[j].s));\n\t}\n\tprintf(\"%d\",ans==0x7fffffff?-1:ans);\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1591600015,
        "uid": 67952,
        "name": "\u767d\u9c9f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3124 \u3010[USACO15OPEN]Trapped in the Haybales S\u3011"
    },
    {
        "content": "\u601d\u8def\u548c tony1312 \u5dee\u4e0d\u591a\u3002\n\n\u9664\u4e86\u5176\u5b83\u9898\u89e3\u8bf4\u7684\u5751\u70b9\uff0c\u6211\u8fd8\u4e00\u76f4\u7ea0\u7ed3\u4e8e\u65e0\u6cd5\u5230\u8fbe\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u4e24\u4e2a\u5e72\u8349\u5806\u662f1\u548cn\u8fd8\u662f0\u548cn+1\uff08\u4e8b\u5b9e\u4e0a\u662f\u540e\u8005\uff09\u3002\n\n~~\u6211\u89c9\u5f97longlong\u4e5f\u662f\u4e2a\u5751~~\n\n\u662f\u8fd9\u6837\u7684\uff0c\u4ece\u5976\u725bb\u65c1\u8fb9\u7684\u5e72\u8349\u5806\u5f00\u59cb\uff0c\u5148\u786e\u5b9a\u4e00\u4e2a\u65e0\u6cd5\u88ab\u7a81\u7834\u7684\u5de6\u8fb9\u7684\u5e72\u8349\u5806\uff0c\u7136\u540e\u53bb\u627e\u53f3\u8fb9\u7684\u53ef\u4ee5\u88ab\u7a81\u7834\u7684\u5e72\u8349\u5806\uff0c\u5982\u679c\u627e\u5230\u4e86\u5c31ans\u548c\u7528\u6765\u5806\u4e0a\u53bb\u7684\u65b0\u7684\u5e72\u8349\u6570\u91cf\u53d6min\uff0c\u6ca1\u627e\u5230\u7684\u8bdd\u8bf4\u660e\u4e0d\u7528\u4fdd\u62a4\u5e72\u8349\u5806\uff0c\u76f4\u63a5\u8f93\u51fa0\uff1b\n\n\u5f53\u7136\uff0c**\u627e\u5e72\u8349\u5806\u7684\u65f6\u5019l\u548cr\u662f\u4e0d\u4f1a\u91cd\u590d\u51fa\u73b0\u7684\uff0c\u4e5f\u5c31\u8bf4l\u548cr\u7684\u533a\u95f4\u662f\u4e0d\u65ad\u6269\u5927\u7684**\uff0c\u7f29\u5c0f\u662f\u65e0\u610f\u4e49\u7684\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u6216\u81ea\u5df1\u7406\u89e3\u3002\n\n\u540c\u4e0a\uff0c\u6211\u4eec\u786e\u5b9a\u53f3\u8fb9\u7684\u5e72\u8349\u5806\uff0c\u7136\u540e\u53bb\u627e\u5de6\u8fb9\u7684\uff0c\u7136\u540e\u53d6min\u3002\n\n\u5982\u679cans\u6ca1\u53d8\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u6ca1\u627e\u5230\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u4eceo(n^2)\u4e0b\u964d\u5230o(n)\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nstruct ha\n{\n    long long h,x;\n} a[6000000];\n\nlong long n,b;\n\nbool cmp(const ha &aa,const ha &bb)\n{\n    return aa.x<bb.x;\n}\n\nlong long ans=1e18;\n\nint main()\n{\n    scanf(\"%lld%lld\",&n,&b);\n    for(int i=1; i<=n; i++)\n    {\n        scanf(\"%lld%lld\",&a[i].h,&a[i].x);\n    }\n    long long r,l,z,y;\n    sort(a+1,a+1+n,cmp);\n    for(int i=1; i<=n; i++)\n    {\n        if(a[i].x>b)\n        {\n            y=i;\n            z=i-1;\n            break;\n        }\n    }\n    l=z;\n    r=y;\n    while(1)\n    {\n        if(l<=0||r>=n+1)\n            break;\n        if((a[r].x-a[l].x<=a[r].h)&&(a[r].x-a[l].x<=a[l].h))\n        {\n            printf(\"0\\n\");\n            return 0;\n        }\n        if(a[r].x-a[l].x>a[r].h)\n        {\n            r++;\n            continue;\n        }\n        if(a[r].x-a[l].x>a[l].h)\n        {\n            ans=min(a[r].x-a[l].x-a[l].h,ans);\n            l--;\n        }\n\n    }\n    r=y;\n    l=z;\n    while(1)\n    {\n        if(l<=0||r>=n+1)\n            break;\n        if((a[r].x-a[l].x<=a[r].h)&&(a[r].x-a[l].x<=a[l].h))\n        {\n            printf(\"0\\n\");\n            return 0;\n        }\n        if(a[r].x-a[l].x>a[l].h)\n        {\n            l--;\n            continue;\n        }\n        if(a[r].x-a[l].x>a[r].h)\n        {\n            ans=min(a[r].x-a[l].x-a[r].h,ans);\n            r++;\n        }\n\n    }\n    if(ans==1e18)\n        printf(\"-1\\n\");\n    else\n        printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1529912850,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3124 \u3010[USACO15OPEN]\u88ab\u56f0\u5728haybales\u3011"
    },
    {
        "content": "## Solution\n\n\n\u8fd9\u662f\u4e00\u9053\u9898\u610f\u8ff7\u4e4bhentai\u7684\u5976\u725b\u9898\n\n\n\u770b\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\u624d\u770b\u61c2\u9898\u610f\u3010\u653e\u5f03\u6cbb\u7597\n\n\n\u9898\u76ee\u7ffb\u8bd1\u771f\u662f\u8dea\u4e86\uff0c\u5404\u79cd\u9519\u8bef\uff0c\u4e0b\u6b21\u82f1\u6587\u9898\u8fd8\u662f\u81ea\u5df1\u7ffb\u8bd1\u597d\u3002\u3002\u3002\n\n\n\n\u8fd9\u9053\u9898\u7684\u4e00\u4e2a\u601d\u8def\u662f\u679a\u4e3ebessie\u80fd\u5230\u8fbe\u7684\u533a\u95f4\uff0c\n\n\n\u5148\u8fdb\u884c$O(n log n)$\u7684\u6392\u5e8f\uff0c\u7136\u540e\u627e\u5230\u79bbBessie\u6700\u8fd1\u7684\u53f3\u8fb9\u7684\u5e72\u8349\u5806\u7684\u7f16\u53f7$nearright$\n\n\n\u6bcf\u6b21\u5bfb\u627e$(l,r)$\u4e3abessie\u53ef\u4ee5\u7a81\u7834$l$\u4f46\u662f\u65e0\u6cd5\u7a81\u7834$r$\u65f6\u9700\u8981\u7ed9$l$\u52a0\u4e0a\u591a\u5c11\u5e72\u8349\uff0c\u6bcf\u6b21\u5bf9$ans$\u53d6$min$\n\n\n\n\u8fd9\u4e2a\u505a\u5230$O(N)$\uff0c\u56e0\u4e3a\u5f53$l$\u5faa\u73af\u5b8c\u4e86\uff0c\u5728\u5faa\u73af$l-1$\u65f6\uff0c$r$\u5df2\u7ecf\u4e0d\u4e00\u5b9a\u8981\u4ece\u6700\u521d\u7684$nearright$\u5f00\u59cb\uff0c**\u987a\u5ef6\u4e0a\u6b21\u66f4\u65b0\u7684r\u503c\u5c31\u53ef\u4ee5**\n\n\n\u56e0\u4e3a\u5982\u679c\u8fd8\u662f\u4ece\u6700\u521d\u7684$nearright$\u5f00\u59cb\uff0c\n\n\n\u5f53$place[r]-place[l]>height[l]$\u5c31\u4e0d\u4f1a\u8fdb\u884cwhile\uff0c\n\n\n\u800c\u5f53$place[r]-place[l]<=height[l]$\u65f6\u5019\uff0c\n\n\n$height[r]$\u8fd8\u662f\u4e0d\u53d8\u7684,\n\n\n$r$\u4e0d\u53d8\uff0c$l$\u51cf\u5c0f\uff0c\u6240\u4ee5$place[r]-place[l]$\u589e\u5927\uff0c\u4e8e\u662f$place[r]-place[l]-height[r]$\u589e\u5927\uff0c\u6240\u4ee5\u5c31\u7b97\u8fdb\u884c\u4e86\u4e5f\u4e0d\u4f1a\u66f4\u65b0$ans$\n\n\n\u540c\u7406\uff0c\u5728\u6bcf\u6b21\u5bfb\u627e$(l,r)$\u4e3abessie\u53ef\u4ee5\u7a81\u7834$r$\u4f46\u662f\u65e0\u6cd5\u7a81\u7834$l$\u65f6\u9700\u8981\u7ed9$r$\u52a0\u4e0a\u591a\u5c11\u5e72\u8349\n\n\n\n\u82e5$ans$\u6ca1\u6709\u6539\u53d8\u5219\u8bf4\u660e\u6bcf\u4e2a$(l,r)$\u90fd\u662f\u4e24\u8fb9\u90fd\u53ef\u4ee5\u7a81\u7834\u7684\uff0c\u4e8e\u662f\u53ea\u7ed9\u4e00\u4e2a\u5e72\u8349\u5806\u52a0\u80af\u5b9a\u662f\u4e0d\u53ef\u4ee5\u7684\uff08\u5373\u8f93\u51fa$-1$\uff09\n\n\n\u5426\u5219\u8f93\u51fa\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\n\n\n## Code\n\n\n```cpp\nprogram test;\nuses math;\nconst  \n  init = maxlongint;\n  maxn = 100002;\n  \ntype\n  arr=array[0..maxn] of longint;\n\nvar\n  n,t,i,ans,l,r,nearright:longint;\n  place,size:arr;\n\nprocedure qsort(l,r: longint);\nvar\n   i,j,x,y: longint;\nbegin\n\n  i:=l;  j:=r;  x:=place[(l+r) div 2];\n\n  repeat\n   while place[i]<x do inc(i);\n   while x<place[j] do dec(j);\n   if not(i>j) then\n   begin\n    y:=place[i];   place[i]:=place[j]; place[j]:=y;\n    y:=size[i];    size[i]:=size[j];   size[j]:=y;\n    inc(i);    j:=j-1;\n   end;\n until i>j;\n\n if l<j then qsort(l,j);\n if i<r then qsort(i,r);\n\nend;\n\nbegin\n    \n    readln(n,t);\n    for i:= 1 to n Do\n      readln(size[i],place[i]);\n    qsort(1,n);\n\n    ans:=init;\n\n    for i:= 1 to n Do \n      if place[i]>t then \n        begin \n           nearright:=i;\n           break;\n        end;\n\n    r:=nearright;\n      \n    for l:= nearright-1 downto 0 do \n      while (r<=n) and (not(place[r]-place[l]>size[l])) do\n        begin\n          ans:=min(ans,place[r]-place[l]-size[r]);\n          inc(r);\n        end;\n\n    l:=nearright-1;\n    for r:= nearright to n do \n      while (l>=1) and (not(place[r]-place[l]>size[r])) do\n        begin\n          ans:=min(ans,place[r]-place[l]-size[l]);\n          dec(l);\n        end;\n\n    if ans = init then writeln(-1)\n      else writeln(max(0,ans));\n\nend.\n```",
        "postTime": 1506226805,
        "uid": 19015,
        "name": "bobble",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3124 \u3010[USACO15OPEN]\u88ab\u56f0\u5728haybales\uff08\u94f6\uff09Trapped in the H\u2026\u3011"
    },
    {
        "content": "\u95f2\u8bdd\uff1a\u8fd9\u662f\u6211\u4eec\u7684\u8003\u8bd5\u9898\uff0c\u53ef\u80fd\u6570\u7ec4\u7528\u5f97\u4e0d\u592a\u4e00\u6837\uff0c\u8bf7\u5ffd\u7565\u849f\u84bb\u5947\u602a\u7684\u6570\u7ec4\u547d\u540d\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u589e\u5927\u4e00\u4e2a$s_i$\uff08$1 \\le s_i \\le n$\uff09\uff0c\u4f7f\u5b58\u5728\u4e00\u4e2a$i,j$\uff08$ p_i \\le b \\le p_j$\uff09\uff0c\u4f7f\u5f97$p_j-p_i \\le min(s_i,s_j)$\uff0c\u5373\u5c06\u5176\u56f0\u4f4f\uff0c\u5982\u679c\u4e0d\u80fd\u505a\u5230\u5219\u8f93\u51fa-1\u3002\n\n\u663e\u7136\u5e94\u8be5\u5148\u5bf9$p_i$\u4f5c\u4e3a\u5173\u952e\u5b57\u6392\u4e2a\u5e8f\u3002\u56e0\u4e3a\u53ea\u80fd\u589e\u52a0\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u6bcf\u4e00\u4e2a$s_i$\u4e0d\u53d8\uff0c\u53bb\u8ba1\u7b97\u6240\u6709\u5728b\u7684\u53e6\u4e00\u4fa7\u7684\u70b9\u6700\u5c0f\u9700\u8981\u589e\u52a0\u591a\u5c11\u3002\u4f46\u8fd9\u79cd~~\u66b4\u529b~~\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^2)$\uff0c\u800c$1 \\le n \\le 100000$\uff0c\u662f\u4f1aTLE\u7684\u3002\u5faa\u73af\u4f7f\u6bcf\u4e00\u4e2a\u70b9\u4e0d\u53d8\u662f\u4e0d\u80fd\u4f18\u5316\u7684\uff0c\u4e8e\u662f\u849f\u84bb\u5c31\u60f3\u5230\u4e86\u5bf9\u7b2c\u4e8c\u5c42\u5faa\u73af\u4f18\u5316\u3002\n\n\u627emin\uff0c\u4f60\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f~~\u6ca1\u9519\uff0c\u5c31\u662f\u7ebf\u6bb5\u6811~~\uff08\u9759\u6001\uff09\n\n\u8fd9\u6837\u6211\u4eec\u7a0b\u5e8f\u5927\u4f53\u7684\u7ed3\u6784\u5c31\u51fa\u6765\u4e86\uff0c\u7ec6\u8282\u7684\u5730\u65b9\u4f1a\u5728\u4ee3\u7801\u4e2d\u6ce8\u91ca\u3002\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()//\u5feb\u8bfb\n{\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t    ch=getchar();\n\tint res=0;\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tres=(res<<1)+(res<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn res;\n}\nstruct stu\n{\n\tint siz;//\u5c31\u662f\u9898\u76ee\u4e2d\u7684s\uff0c\u8868\u793a\u5e72\u8349\u5806\u7684\u5927\u5c0f\n\tint loc;//\u5c31\u662f\u9898\u76ee\u4e2d\u7684p\uff0c\u8868\u793a\u5e72\u8349\u5806\u7684\u4f4d\u7f6e\n}x[100001];\nint n,b,Siz[100001],Loc[100001],a[100001],loc_b,Tree1[400001],Tree2[400001],ans=0x7fffffff;\nbool cmp1(stu x1,stu x2)\n{\n\treturn x1.loc<x2.loc;//\u6392\u5e8f\uff0c\u4ee5\u4f4d\u7f6e\u4e3a\u5173\u952e\u5b57\n}\n/////////\u4ee5\u4e0b\u662f\u7ebf\u6bb5\u6811\u6a21\u677f////////////\nvoid build(int k,int l,int r)//\u5efa\u6811\n{\n\tif(l==r)//\u5230\u8fbe\u53f6\u8282\u70b9\n\t{\n\t\tTree1[k]=Tree2[k]=a[l];//Tree1\u5b58\u6700\u5c0f\u503c\uff0cTree2\u5b58\u6700\u5927\u503c\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u5728\u4e3b\u51fd\u6570\u4e2d\u4f1a\u8bb2\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;//\u4f4d\u8fd0\u7b97\u561b\uff0c>>1\u5c31\u662f/2\uff0c<<1\u5c31\u662f*2\n\tbuild(k<<1,l,mid);//\u5efa\u5de6\u5b50\u6811\n\tbuild((k<<1)|1,mid+1,r);//\u5efa\u53f3\u5b50\u6811\n\tTree1[k]=min(Tree1[k<<1],Tree1[(k<<1)|1]);//\u66f4\u65b0\n\tTree2[k]=max(Tree2[k<<1],Tree2[(k<<1)|1]);\n}\nint query_min(int k,int l,int r,int ask_l,int ask_r)//\u67e5\u627e\u533a\u95f4\u6700\u5c0f\u503c\n{\n\tif(l>ask_r||r<ask_l)\n\t    return 0x7fffffff;\n\tif(l>=ask_l&&r<=ask_r)\n\t    return Tree1[k];\n\tint mid=(l+r)>>1;\n\treturn min(query_min(k<<1,l,mid,ask_l,ask_r),query_min((k<<1)|1,mid+1,r,ask_l,ask_r));\n}\nint query_max(int k,int l,int r,int ask_l,int ask_r)//\u67e5\u627e\u533a\u95f4\u6700\u5927\u503c\n{\n\tif(l>ask_r||r<ask_l)\n\t    return -0x7fffffff;\n\tif(l>=ask_l&&r<=ask_r)\n\t    return Tree2[k];\n\tint mid=(l+r)>>1;\n\treturn max(query_max(k<<1,l,mid,ask_l,ask_r),query_max((k<<1)|1,mid+1,r,ask_l,ask_r));\n}\n////////////\u4ee5\u4e0a\u662f\u7ebf\u6bb5\u6811\u6a21\u677f////////////\nint main()\n{\n\tn=read();\n\tb=read();\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tx[i].siz=read();\n\t\tx[i].loc=read();\n\t}\n\tsort(x+1,x+n+1,cmp1);//\u6392\u5e8f\n\tfor(register int i=1;i<=n;++i)//\u6392\u5b8c\u5e8f\u518d\u5f04\u56de\u6765\uff0c\u4fbf\u4e8e\u4e8c\u5206\n\t{\n\t\tSiz[i]=x[i].siz;\n\t\tLoc[i]=x[i].loc;\n\t}\n\tloc_b=upper_bound(Loc+1,Loc+n+1,b)-Loc;//\u627e\u51fa\u4e34\u754c\u70b9\uff0c1~loc_b-1\u4e3a\u5de6\u8fb9\uff0cloc_b~n\u4e3a\u53f3\u8fb9\n    for(register int i=1;i<=n;++i)\n    {\n    \tif(i<loc_b)//\u5728\u5de6\u8fb9\uff0c\u56e0\u4e3a\u5faa\u73af\u5230\u8fd9\u4e2a\u70b9\u65f6\u9ed8\u8ba4\u4e0d\u589e\u52a0\u5b83\u7684\u5927\u5c0f\uff0ca[i]\u5c31\u8868\u793a\u5b83\u5411\u53f3\u6700\u591a\u80fd\u591f\u5230\u7684\u70b9\uff0c\u8d85\u8fc7\u7684\u8bdd\u663e\u7136\u80fd\u591f\u5411\u5de6\u51b2\u7834\n\t\t    a[i]=Siz[i]+Loc[i];\n\t\telse//\u5426\u5219\u5728\u5de6\u8fb9\uff0c\u540c\u7406\n\t\t    a[i]=Loc[i]-Siz[i];\n    }\n\tbuild(1,1,n);//\u5efa\u6811\n\tfor(register int i=1;i<loc_b;++i)//\u5904\u7406\u5de6\u8fb9\n\t{\n\t\tint R=upper_bound(Loc+loc_b,Loc+n+1,a[i])-Loc-1;//\u7b97\u51fa\u53f3\u7aef\u70b9\uff0c\u4fdd\u8bc1\u5176\u4e0d\u80fd\u5411\u5de6\u7a81\u7834\n\t\tif(R<loc_b) continue;\u53f3\u7aef\u70b9\u8fd8\u6ca1\u8fc7b\uff0c\u80af\u5b9a\u6ca1\u620f\n\t\tans=min(ans,max(query_min(1,1,n,loc_b,R)-Loc[i],0));//\u627e\u51fa\u6700\u5c0f\u503c\uff0c\u5728\u53f3\u51cf\u53bbLoc[i]\u662f\u6700\u5c0f\u503c\uff0c\u540c\u65f6\u8981\u9632\u6b62\u51cf\u6210\u8d1f\u6570\n\t}\n\tfor(register int i=loc_b;i<=n;++i)//\u540c\u7406\n\t{\n\t\tint L=lower_bound(Loc+1,Loc+loc_b,a[i])-Loc;\n\t\tif(L>=loc_b) continue;\n\t\tans=min(ans,max(Loc[i]-query_max(1,1,n,L,loc_b-1),0));//\u627e\u51fa\u6700\u5927\u503c\uff0c\u7528Loc[i]\u51cf\u540e\u662f\u6700\u5c0f\u503c\n\t}\n\tif(ans==0x7fffffff)//ans\u81ea\u59cb\u81f3\u7ec8\u6ca1\u6709\u88ab\u66f4\u6539\u8fc7\uff0c\u8bf4\u660e\u6240\u6709\u60c5\u51b5\u90fd\u88abcontinue\u4e86\uff0c\u5373\u65e0\u6cd5\u56f0\u4f4f\n\t    printf(\"-1\\n\");\n\telse\n    \tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u5b8c",
        "postTime": 1591601813,
        "uid": 68011,
        "name": "\u53e4\u660e\u5730_ypc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3124 \u3010[USACO15OPEN]Trapped in the Haybales S\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u53cc\u6307\u9488\u89e3\u3002\n\n\u53cc\u6307\u9488\u5c31\u662f\u4f7f\u7528\u4e24\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u64cd\u4f5c\uff0c\u64cd\u4f5c\u5b8c\u6bd5\u540e\uff0c\u79fb\u52a8\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u7b97\u6cd5\uff0c\u5178\u578b\u7684\u5e94\u7528\uff1a\u8ba1\u7b97\u4e24\u6570\u4e4b\u548c\u3002\n\n\u6b64\u9898\u601d\u8def\uff1a\u4f7f\u7528\u7ed3\u6784\u4f53\u8fdb\u884c\u5b58\u8d2e\u6bcf\u4e00\u6346\u8349\uff0c\u7136\u540e\u4f7f\u7528\u5750\u6807\u8fdb\u884c\u6392\u5e8f\u3002\u518d\u8ba1\u7b97\u7b2c\u4e00\u4e2a\u5750\u6807\u5c0f\u4e8e $b$ \u7684\u5750\u6807\uff0c\u8fdb\u884c\u4e24\u6b21\u53cc\u6307\u9488\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848\u3002\n\n\u4ee3\u7801\u4e2d\u5173\u952e\u6613\u9519\u7684\u5730\u65b9\u52a0\u4e86\u5c11\u91cf\u6ce8\u91ca\u3002\n\n\u6700\u540e\u662f AC \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nstruct cao//\u7ed3\u6784\u4f53\uff0c\u5b58\u8d2e\u6bcf\u4e00\u6346\u8349\n{\n\tll s;\n\tll p;\n}grass[100005];\n\nbool cmp(cao a, cao b)//\u4f7f\u7528\u53f3\u6307\u9488\u6392\u5e8f\n{\n\treturn a.p < b.p;\n}\n\nint main() \n{\n\tll n, b;\n\tcin >> n >> b;\n\t\n\tfor (int i = 1; i <= n; i ++ )\n\t{\n\t\tcin >> grass[i].s >> grass[i].p;\n\t}\n\t\n\tsort(grass + 1, grass + n + 1, cmp);//\u6392\u5e8f\n\t\n\tll st;\n\tfor (st = 1; st <= n; st ++ )//\u5bfb\u627e\u7b2c\u4e00\u4e2a\u5750\u6807\u5c0f\u4e8eb\u7684\u7f16\u53f7\n\t{\n\t\tif (grass[st + 1].p > b)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tint r = st + 1;\n\tll ans = 0x7fffffffffffffff;//int\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\uff082147483647\uff09\n\t\n\tfor(int l = st; l >= 1; l -- )//\u7b2c\u4e00\u6b21\u53cc\u6307\u9488\n\t{\n\t\twhile (r <= n && grass[r].p - grass[l].p > grass[r].s)\n\t\t{\n\t\t\tr ++ ;//\u79fb\u52a8\u53f3\u6307\u9488\n\t\t}\n\t\t\n\t\tif (r > n)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tans = min(ans, grass[r].p - grass[l].p - grass[l].s);//\u66f4\u65b0\u7b54\u6848\n\t}\n\t\n\tint l = st;\n\t\n\tfor(int r = st + 1; r <= n; r ++ )\u7b2c\u4e8c\u6b21\u53cc\u6307\u9488\n\t{\n\t\twhile (l >= 1 && grass[r].p - grass[l].p > grass[l].s)\n\t\t{\n\t\t\tl -- ;//\u79fb\u52a8\u5de6\u6307\u9488\n\t\t}\n\t\t\n\t\tif (l < 1)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tans = min(ans, grass[r].p - grass[l].p - grass[r].s);.//\u66f4\u65b0\u7b54\u6848\n\t}\n\t\n\tif(ans == 0x7fffffffffffffff)//\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u60c5\u51b5\n\t{\n\t\tcout << -1;\n\t}\n\telse\n\t{\n\t\tcout << max(ans, 0ll);//\u8f93\u51fa\uff08\u53ef\u80fdans\u662f\u8d1f\u6570\uff0c\u9700\u8981\u4e0elong long \u4e2d\u76840\u8fdb\u884c\u6bd4\u8f83\uff09\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1660567516,
        "uid": 529476,
        "name": "Banana_yeah",
        "ccfLevel": 0,
        "title": "P3124 [USACO15OPEN]Trapped in the Haybales S \u9898\u89e3"
    },
    {
        "content": "* \u9996\u5148\u53d1\u73b0\u82e5\u51b2\u51fb\u6ce2\u5de6\u53f3\u9632\u5b88\u7684\u7aef\u70b9\u5728 $[l,r]$\uff0c\u5219\u5b83\u53ef\u83b7\u5f97\u6700\u5927\u7684\u51b2\u523a\u957f\u5ea6\u5c31\u662f $r-l$\u3002   \n\n* \u5982\u679c\u76f4\u63a5\u6a21\u62df\u53ef\u4ee5\u5728\u4e24\u79cd\u60c5\u51b5\u65f6\u8ba1\u7b97\u51fa\u5f53\u524d\u9700\u8981\u52a0\u56fa\u7684\u503c\u3002\u5728\u51b2\u4e0d\u6389\u5de6\u7aef\u70b9\u65f6\uff0c\u52a0\u56fa\u53f3\u7aef\u70b9\uff1b\u5728\u51b2\u4e0d\u6389\u53f3\u7aef\u70b9\u65f6\uff0c\u52a0\u56fa\u5de6\u7aef\u70b9\u3002\u5f53\u4e24\u4e2a\u70b9\u90fd\u51b2\u4e0d\u6389\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f97\u51fa\u7b54\u6848\u4e3a $0$\uff0c\u4f46\u662f\u5f53\u4e24\u4e2a\u70b9\u90fd\u80fd\u51b2\u5c31\u4e0d\u592a\u597d\u505a\u4e86\u3002  \n\n* \u4e0d\u59a8\u6362\u79cd\u89d2\u5ea6\u601d\u8003\uff0c\u5728\u52a0\u56fa\u67d0\u4e00\u7aef\u70b9 $A$ \u65f6\uff0c\u53ea\u8981\u6a21\u62df\u51fa\u5728\u53e6\u4e00\u7aef\u4e00\u76f4\u649e\uff0c\u6700\u8fdc\u80fd\u649e\u5230\u54ea\u4e2a\u70b9\u505c\u4e0b\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u6b64\u65f6\u8fd9\u4e2a\u70b9A \u5177\u4f53\u8981\u52a0\u56fa\u591a\u5c11\u624d\u80fd\u7834\u9632\u3002\u6240\u4ee5\u5206\u4e24\u6b21\u7b97\uff0c\u7b2c\u4e00\u6b21\u679a\u4e3e\u8981\u52a0\u56fa\u54ea\u4e2a\u5de6\u7aef\u70b9\uff0c\u8ba9\u725b\u4e00\u76f4\u53ea\u649e\u53f3\u8fb9\u7684\uff1b\u7b2c\u4e8c\u6b21\u5219\u679a\u4e3e\u8981\u52a0\u56fa\u7684\u53f3\u7aef\u70b9\uff0c\u540c\u7406\u3002\u6700\u540e\u53ea\u8981\u628a\u679a\u4e3e\u6bcf\u4e2a\u70b9\u65f6\u7684\u7b54\u6848\u6253\u64c2\u53f0\u6bd4\u8f83\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002\u65e0\u89e3\u7684\u7279\u5224\u5c31\u4e0d\u591a\u8bb2\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$ \u3002\n* --\u9009\u81ea\u6a21\u62df\u8d5b\u9898\u89e3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,b,l1,l2,ans=0x1fffffff;\nstruct node{int a,p;void scan(){scanf(\"%d%d\",&a,&p);}}t[111111];\nbool cmp(node a,node b){return a.p<b.p;}\nint main(){\n\tscanf(\"%d%d\",&n,&b);for(int i=1;i<=n;++i) t[i].scan();\n\tsort(t+1,t+n+1,cmp);t[0].p=b;\n\tl2=upper_bound(t+1,t+n+1,t[0],cmp)-t;l1=l2-1;\n\tfor(int i=l1,j=l2;i>0&&j<=n;--i){\n\t\twhile(j<=n&&t[j].a<t[j].p-t[i].p) ++j;\n\t\tif(j<=n) ans=min(ans,max(0,t[j].p-t[i].p-t[i].a));\n\t}\n\tfor(int i=l1,j=l2;i>0&&j<=n;++j){\n\t\twhile(i>0&&t[i].a<t[j].p-t[i].p) --i;\n\t\tif(i>0) ans=min(ans,max(0,t[j].p-t[i].p-t[j].a));\n\t}\n\tprintf(\"%d\\n\",ans==0x1fffffff?-1:ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1646468401,
        "uid": 394167,
        "name": "Dragon_Horse",
        "ccfLevel": 5,
        "title": "P3124 [USACO15OPEN]Trapped in the Haybales S \u9898\u89e3"
    },
    {
        "content": "\u8eab\u4e3a\u849f\u84bb\u7684\u6211\u6ca1\u60f3\u51fa\u6a21\u62df\uff0c\u60f3\u51fa\u6765\u7ebf\u6bb5\u6811\uff0c\u6211\u771f\u662f\u4e2a~~\u6bd2\u7624~~  \n~~\u6211\u89c9\u5f97\u6a21\u62df\u5f88\u7384~~\uff0c\u5982\u679c\u8ddf\u6211\u4e00\u6837\u7684\u53ef\u4ee5\u770b\u770b\u6211\u8fd9\u7bc7~~\u6bd2\u7624\u6570\u5b66~~\u9898\u89e3\n\n\u4ee5\u4e0b\u5206\u6790\u4e0d\u8003\u8651\u65e0\u6cd5\u56f0\u4f4f\u8d1d\u831c\u548c\u4e0d\u9700\u8981\u589e\u52a0\u5e72\u8349\u5806\u9ad8\u5ea6\u7684\u60c5\u51b5\uff0c\u7b49\u540c\u4e8e\n\n\u53ef\u4ee5\u56f0\u4f4f\u8d1d\u831c\u4e14\u9700\u8981\u589e\u52a0\u5e72\u8349\u5806\u9ad8\u5ea6\u7684\u60c5\u51b5\n\n------------\n\n\u9898\u76ee\u5927\u610f\uff1a\u5728\u8d1d\u831c\u7684\u5de6\u8fb9\u4f4d\u7f6e\u9009\u53d6\u4e00\u4e2a\u5e72\u8349\u5806\uff0c\u5728\u53f3\u8fb9\u9009\u53d6\u4e00\u4e2a\u5e72\u8349\u5806\uff0c\u53ea\u80fd\u589e\u52a0\u5de6\u8fb9\u6216\u53f3\u8fb9\u4e00\u5806\u7684\u9ad8\u5ea6\uff0c\u6c42\u6700\u5c0f\u589e\u52a0\u91cf\u3002\n\n\u8003\u8651\u66b4\u529b\uff1a  \n\n\u6309\u7167\u5e72\u8349\u5806\u7684\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f  \n\n$for$ \u5de6\u8fb9\u7684\u5e72\u8349\u5806 $i$  \n$for$ \u53f3\u8fb9\u7684\u5e72\u8349\u5806 $j$  \n$minval = min( minval,cost(i,j) )$ \n\n\u53ef\u4ee5\u56f0\u4f4f\u8d1d\u831c\u4e14\u9700\u8981\u589e\u52a0\u5e72\u8349\u5806\u9ad8\u5ea6\u7684\u60c5\u51b5 <\u2014\u2014> \u589e\u52a0\u7b2c $i$ \u5806\u6216\u8005\u589e\u52a0\u7b2cj\u5806\uff08\u53ea\u589e\u52a0\u5176\u4e00\uff09 \n\n\u8bbe\u7b2c $x$ \u5806\u8349\u7684\u4f4d\u7f6e\u4e3a $pos_x$,\u9ad8\u5ea6\u4e3a $h_x$\uff0c$cost$ \u51fd\u6570\u5e94\u8be5\u8fd9\u6837\u5199  \n```cpp\nint cost(int i,int j) {//\u53ea\u8003\u8651\u9700\u8981\u589e\u52a0i\u6216\u8005j\u7684\u60c5\u51b5\uff0c\u4e0d\u8003\u8651\u90fd\u4e0d\u589e\u52a0\u6216\u8005\u65e0\u6cd5\u56f0\u4f4f\u8d1d\u831c\u7684\u60c5\u51b5\n\tif ( h[i] < pos[j] - pos[i] ) return pos[j] - pos[i] - h[i];//i\u5806\u5e72\u8349\u9700\u8981\u589e\u52a0;\n\telse return pos[j] - pos[i] - h[j];\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\n\n\u8003\u8651\u53bb\u6389\u4e00\u7ef4 $for$\uff0c\u53ea\u679a\u4e3e\u5de6\u7aef\u70b9 $i$  \n\n\u95ee\u9898\u53d8\u4e3a\uff1a\u5df2\u77e5 $pos_i$,$h_i$, \u6c42 $cost(i,j)$ \u7684\u6700\u5c0f\u503c\n\n\u56e0\u4e3a\u679a\u4e3e\u7684\u662f $i$\uff0c\u6240\u4ee5 $pos_i$ \u548c $h_i$ \u90fd\u662f\u5e38\u6570\uff0c$j$ \u662f\u81ea\u53d8\u91cf\uff0c\u8bbe $g(j)=cost(i,j)$,\u56e0\u4e3a $cost$ \u5206\u4e86\u4e24\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5 $g(j)$ \u662f\u4e00\u4e2a\u5206\u6bb5\u51fd\u6570\uff0c\u6c42\u5206\u6bb5\u51fd\u6570\u7684\u6700\u5c0f\u503c\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u5148\u660e\u786e\u5982\u4f55\u9884\u5904\u7406\u7684  \n\n$struct$ \u5e72\u8349\u5806 { $pos,h$ }  \n$sort$(\u6309\u7167 $pos$ \u4ece\u5c0f\u5230\u5927)  \n\u627e\u51fa\u4e00\u4e2a $mid_id$\uff0c\u4e0b\u6807\u5c0f\u4e8e $mid_id$ \u7684\u4e3a\u8d1d\u831c\u5de6\u8fb9\u7684\u5e72\u8349\u5806\uff0c\u4e0b\u6807\u5927\u4e8e\u7b49\u4e8e $mid_id$ \u7684\u4e3a\u8d1d\u831c\u53f3\u8fb9\u7684\u5e72\u8349\u5806\u3002\n\n\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1.\u7b2c $i$ \u5806\u5e72\u8349\u9700\u8981\u589e\u52a0\uff1a  \n\n\u81ea\u53d8\u91cf $j$ \u7684\u9650\u5236\u6761\u4ef6\uff1a$pos_j$ > $pos_i$ + $h_i$ (\u7531 $cost$ \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a $if$ )  \u4e14 $j$ \u5c5e\u4e8e [$mid_id$ , $n$]\n\n$g(j)$ = $pos_j$ - $pos_i$ - $h_i$  \n\u6c42 $g(j)$ \u6700\u5c0f\uff0c\u5c31\u662f\u6c42 $pos_j$ \u6700\u5c0f\uff0c\u53c8\u56e0\u4e3a\u5df2\u7ecf\u4ee5 $pos$ \u4e3a\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e86\uff0c\u6240\u4ee5 $pos_j$ \u4e0e $j$ \u5355\u8c03\u6027\u4e00\u81f4\u3002\u6240\u4ee5 $g(j)$ \u6700\u5c0f\u5c31\u662f\u8981 $j$ \u6700\u5c0f\u3002  \n\n\u56e0\u4e3a\u5173\u4e8e $i$ \u7684\u9879\u90fd\u662f\u5e38\u6570\uff0c\u4ee4 $key$ = $pos_i$ + $h_i$\uff0c\u95ee\u9898\u5c31\u5f88\u6e05\u6670\u4e86\uff1a \u5728\u4e00\u4e2a $pos$ \u5355\u8c03\u4e0a\u5347\u7684\u5e8f\u5217\u4e2d\uff0c$j$ \u5c5e\u4e8e $[mid_id , n]$,\u6c42\u6700\u5c0f\u7684 $j$\uff0c\u4f7f $pos_j$ > $key$  \n\u89e3\u51b3\u65b9\u6cd5\uff1a\u4e8c\u5206\u67e5\u627e \uff08\u6211\u7528\u7ebf\u6bb5\u6811 $AC$ \u7684\uff0c\u56e0\u4e3a\u53cd\u6b63\u7b2c\u4e8c\u79cd\u60c5\u51b5\u8981\u7528\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u770b\u770b\u6211\u5199\u7684~~\u9b3c\u755c\u7684~~ $queryMinPos$ \u6210\u5458\u51fd\u6570\uff0c$public$ \u91cc\u9762\u6709\u6ce8\u91ca\uff09\n\n2.\u7b2c $i$ \u5806\u5e72\u8349\u4e0d\u9700\u8981\u589e\u52a0(\u770b\u4e0a\u9762\u7684\u9ed1\u4f53\u52a0\u7c97\u653e\u5927\u5b57\u4f53\uff0c\u53ef\u4ee5\u63a8\u51fa\u7b2c $j$ \u5806\u5e72\u8349\u9700\u8981\u589e\u52a0)\uff1a\n\n\u81ea\u53d8\u91cf $j$ \u7684\u9650\u5236\u6761\u4ef6\uff1a$pos_j$ <= $pos_i$ + $h_i$(\u5206\u7c7b\u8ba8\u8bba\u4e2d\u60c5\u51b51\u7684\u8865\u96c6)  \u4e14 $j$ \u5c5e\u4e8e $[mid_id , n]$  \n\u540c\u7406\uff1a  \n$g(j)$ = $pos_j$ - $h_j$ - $pos_i$  \n\u5206\u6790\u5355\u8c03\u6027\uff0c$g(j)$ ...... ~~\u9707\u60ca\u4e86\u6ca1\u6709\u5355\u8c03\u6027wc\u8fd9\u9898\u4e0d\u80fd\u4f18\u5316~~  \n\u6362\u4e2a\u601d\u8def\uff0c\u4f9d\u7136\u627e $j$\uff0c\u4f46\u662f\u4e0d\u662f $j$ \u800c\u662f\u5173\u4e8e $j$ \u7684\u9879\u3002\u5f53 $g(j)$ \u6700\u5c0f\u65f6\uff0c$pos_j$ - $h_j$ \u6700\u5c0f\uff0c\u518d\u770b\u770b $j$ \u7684\u9650\u5236\u6761\u4ef6\uff1a  \n$pos_j$ <= $pos_i$ + $h_i$ \u4e14 $j$ \u5c5e\u4e8e $[mid_id , n]$  \n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u67e5\u627e\u51fa $j$ \u7684\u533a\u95f4\uff08$pos_j$ \u5173\u4e8e $j$ \u5355\u8c03\u9012\u589e\uff0c\u4e0d\u7b49\u53f7\u53f3\u8fb9\u662f\u5e38\u6570\uff09  \n $j$ \u5c5e\u4e8e\u67d0\u4e2a\u5df2\u7ecf\u786e\u5b9a\u7684\u533a\u95f4\uff0c\u627e $pos_j$ - $h_j$ \u6700\u5c0f\uff0c\u7528\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4 $[l,r]$\uff0c$x$ \u5c5e\u4e8e $[l,r]$\uff0c$pos_x$ - $h_x$ \u7684\u6700\u5c0f\u503c\n\n\u53ef\u4ee5\u56f0\u4f4f\u8d1d\u831c\u4e14\u9700\u8981\u589e\u52a0\u5e72\u8349\u5806\u9ad8\u5ea6\u7684\u60c5\u51b5\u5206\u6790\u7ed3\u675f\n\n------------\n\n1.\u5982\u679c\u4e0d\u53ef\u4ee5\u56f0\u4f4f\u8d1d\u831c\uff0c\u5145\u8981\u6761\u4ef6\u4e3a\uff1a\u4efb\u610f $i$ \uff0c\u627e\u4e0d\u5230 \u53d8\u91cf $j$ \u6ee1\u8db3 \u9650\u5236\u6761\u4ef6\uff0c\u4ee3\u7801\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a  \n$for$ $i$ ...    \n$if$ \u4e8c\u5206\u67e5\u627e,\u627e\u4e0d\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 $j$  \n$minval = min( minval,INF );$  \n......  \n......  \n//\u8f93\u51fa\u7b54\u6848  \n$if(minval==INF)$...... \n\n2.\u5982\u679c\u4e0d\u9700\u8981\u589e\u52a0\u9ad8\u5ea6\uff0c\u5145\u8981\u6761\u4ef6\u4e3a\uff1a\u5b58\u5728 $i$ \uff0c\u627e\u5230 \u53d8\u91cf $j$ \u6ee1\u8db3  \n$pos_j$ <= $pos_i$ + $h_i$ \u4e14 $j$ \u5c5e\u4e8e $[mid_id , n]$\uff08\u60c5\u51b52\uff09 \u4e14 $h_j$ >= $pos_j$ - $pos_i$  \n\u60c5\u51b52\u7684\u8fd4\u56de\u503c\uff1a$g(j)$ = $pos_j$ - $h_j$ - $pos_i$  \n\u7531 $h_j$ >= $pos_j$ - $pos_i$  \n\u53ef\u5f97 $g(j) <= 0$  \n\u7efc\u4e0a\uff0c\u5982\u679c\u4e0d\u9700\u8981\u589e\u52a0\u9ad8\u5ea6\uff0c\u5b58\u5728 $i$\uff0c$j$\uff0c\u4f7f $g(j)$ \u51fd\u6570\u8fd4\u56de\u503c\u5c0f\u4e8e\u7b49\u4e8e0  \n\u4ee3\u7801\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n$for$ $i$ ...    \n$if$ \u4e8c\u5206\u67e5\u627e,\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 $j$  \n$minval$ = $min$( $minval$, \u4e8c\u5206\u67e5\u627e\u6216\u8005\u7ebf\u6bb5\u6811\u6c42 $g(j)$ \u6700\u5c0f\u503c );  \n......  \n......  \n//\u8f93\u51fa\u7b54\u6848  \n$if(minval<=0) printf(\"0\");$\n\n\u8ba8\u8bba\u5b8c\u6240\u6709\u60c5\u51b5\uff0c\u53ef\u4ee5\u9644\u4e0a~~\u7ebf\u6bb5\u6811\u51fd\u6570\u540d\u5de8\u957f\u7684\u3001\u624b\u6253\u4e8c\u5206\u4e0d\u7528STL\u5de8\u6bd2\u7624\u7684~~\u4ee3\u7801\u5566\u3002\uff08\u770b\u61c2\u4e86\u524d\u9762\u7684\u5206\u6790~~\u6bd2\u7624\u6570\u5b66~~\uff0c\u81ea\u5df1\u6253\u4ee3\u7801\u4e5f\u5b8c\u5168\u53ef\u4ee5\uff09 \u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\n\n------------\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<fstream>\n#define increase(x,l,r) for(register int x=l;x<=r;++x)\n#define decrease(x,r,l) for(register int x=r;x>=l;--x)\n#define N 100005\n#define INF 0x7fffffff\nusing namespace std;\n\ninline void read(int &x) {\n\tx=0;\n\tshort op=1;\n\tchar ch;\n\twhile(ch=getchar(),!('0'<=ch&&ch<='9'||ch=='-'));\n\tif(ch=='-') op=-1,ch=getchar();\n\twhile('0'<=ch&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=op;\n}\n\ninline int min(int x,int y,int z) {\n\tif(x>y) x=y;\n\tif(x>z) x=z;\n\treturn x;\n}\n\nclass seg{//\u6bd2\u7624\u7528\u7c7b\u5199\n\t\n\tprivate:\n\t\t\n\t\tstruct NODE{\n\t\t\tint l,r,min;\n\t\t\tNODE(){l=r=min=0;}\n\t\t}node[4*N];\n\t\tint p_node,n;\n\t\t\n\t\tinline int min(int x,int y) {return x<y?x:y;}\n\t\t\n\t\tinline void pushup(int now) {node[now].min=min(node[node[now].l].min,node[node[now].r].min);}\n\t\t\n\t\tinline int build(int l,int r,int *val) {\n\t\t\tint now=++p_node;\n\t\t\tif(l==r) {\n\t\t\t\tnode[now].min=val[l];\n\t\t\t\treturn now;\n\t\t\t}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tnode[now].l=build(l,mid,val);\n\t\t\tnode[now].r=build(mid+1,r,val);\n\t\t\tpushup(now);\n\t\t\treturn now;\n\t\t}\n\t\t\n\t\tinline int queryMin(int now,int l,int r,int L,int R) {\n\t\t\tif(l>R||r<L) return INF;\n\t\t\tif(L<=l&&r<=R) return node[now].min;\n\t\t\tint mid=(l+r)>>1;\n\t\t\treturn min(queryMin(node[now].l,l,mid,L,R),queryMin(node[now].r,mid+1,r,L,R));\n\t\t}\n\t\t\n\t\tinline int queryMinPos(int now,int l,int r,int L,int R,int key) {\n\t\t\tif(l>R||r<L) return INF;\n\t\t\tif(node[now].min>key) return INF;\n\t\t\tif(l==r) return l;\n\t\t\tint mid=(l+r)>>1;\n\t\t\tint v=queryMinPos(node[now].l,l,mid,L,R,key);\n\t\t\tif(v!=INF) return v;\n\t\t\treturn queryMinPos(node[now].r,mid+1,r,L,R,key);\n\t\t}\n\t\t\n\tpublic:\n\t\t\n\t\tinline seg() {p_node=0;}\n\t\t\n\t\tinline void setSize(int size) {n=size;}\n\t\t\n\t\tinline void build(int *val) {\n\t\t\tbuild(1,n,val);\n\t\t}\n\t\t\n\t\tinline int queryMin(int l,int r) {\n\t\t\treturn queryMin(1,1,n,l,r);\n\t\t}\n\t\t\n\t\tinline int queryMinPos(int l,int r,int key) { //\u5728\u533a\u95f4\u5185\u627e\u5c0f\u4e8e\u7b49\u4e8ekey\u7684\u6700\u5c0f\u4f4d\u7f6e \n\t\t\treturn queryMinPos(1,1,n,l,r,key); \n\t\t}\n\t\t\n}tree;\n\nstruct grass{\n\tint h,pos;\n}a[N];\ninline bool cmp(grass x,grass y) {return x.pos<y.pos;}\nint val[N];\n\nint main() {\n\tint n,midpos;\n\tread(n);read(midpos);\n\tincrease(i,1,n) read(a[i].h),read(a[i].pos);\n\tsort(a+1,a+n+1,cmp);\n\tincrease(i,1,n) val[i]=a[i].pos-a[i].h;\n\ttree.setSize(n);\n\ttree.build(val);\n\tint ans=INF;\n\tint l=1,r=n,mid,mid_id=0;\n\twhile(l<=r) {\n\t\tmid=(l+r)>>1;\n\t\tif(a[mid].pos<midpos) mid_id=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\tif(!mid_id) {\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\tif(mid_id==n) {\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\t++mid_id;//\u9884\u5904\u7406\u52a0\u627emid_id\u5230\u6b64\u5b8c\u6210\n\tfor(register int i=1;a[i].pos<midpos;++i) {\n\t\tl=mid_id,r=n;\n\t\tint find=0;//\u627e\u6ee1\u8db3\u6761\u4ef6\u7684j\n\t\tint t1,t2;\n\t\twhile(l<=r) {\n\t\t\tmid=(l+r)>>1;\n\t\t\tif(a[mid].pos<a[i].pos+a[i].h) find=mid,l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tif(!find) {\n\t\t\tif(a[mid_id].pos==a[i].pos+a[i].h) find=mid_id,t1=tree.queryMin(mid_id,find),t1-=a[i].pos;\n\t\t\telse t1=INF;\n\t\t}\n\t\telse {\n\t\t\tif(a[find+1].pos==a[i].pos+a[i].h) ++find;\n\t\t\tt1=tree.queryMin(mid_id,find),t1-=a[i].pos;\n\t\t}//t1\u4fdd\u5b58\u5206\u7c7b\u8ba8\u8bba\u4e2d\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u7ed3\u679c\n\t\tif(!find) find=mid_id;\n\t\telse ++find;\n\t\tif(find>n) t2=INF;\n\t\telse {\n\t\t\tt2=tree.queryMinPos(find,n,a[i].pos);\n\t\t\t(t2!=INF)&&(t2=a[t2].pos,t2-=a[i].h+a[i].pos);\n\t\t}//t2\u4fdd\u5b58\u5206\u7c7b\u8ba8\u8bba\u4e2d\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u7ed3\u679c\n\t\tans=min(ans,t1,t2);\n\t}\n\tif(ans==INF) printf(\"-1\");\n\telse printf(\"%d\",ans>0?ans:0);\n\treturn 0;\n}\n```\n\n\n\n\n",
        "postTime": 1591623713,
        "uid": 105682,
        "name": "SASUKE__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3124 \u3010[USACO15OPEN]Trapped in the Haybales S\u3011"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\n\u6a21\u62df\u9898\uff1a\u6a21\u62df\u5976\u725b\u51b2\u5e72\u8349\u6346\u7684\u65f6\u5019\uff0cFJ \u5bf9\u5976\u725b\u8fdb\u884c\u7684\u9632\u5b88\u3002\n\n+ \u9996\u5148\u6a21\u62df\u5976\u725b\u5411\u5de6\u8fb9\u4f18\u5148\u51b2\u5e72\u8349\u6346:\n> + \u5976\u725b\u80fd\u5f80\u5de6\u8fb9\u5c31\u5f80\u5de6\u8fb9\u8d70\u3002\n> + \u5976\u725b\u8d8a\u754c\u4e86\u5c31\u9000\u51fa\u3002\n> + \u5982\u679c\u5976\u725b\u88ab\u5de6\u8fb9\u7684\u67d0\u4e00\u4e2a\u5e72\u8349\u6346\u6321\u4e0b\u6765\u4e86\uff0c\u90a3\u4e48 FJ \u5c31\u5c1d\u8bd5\u9632\u5b88\u53f3\u8fb9\u7684\u5e72\u8349\u6346\u3002\n> + \u7136\u540e\u5982\u679c\u53f3\u8fb9\u6839\u672c\u4e0d\u7528\u9632\u5b88\uff0c\u90a3\u5c31\u9000\u51fa\u3002\n> + \u5426\u5219\uff0c\u6a21\u62df\u4e0d\u9632\u5b88\u53f3\u8fb9\u3002\n\n+ \u7136\u540e\u6a21\u62df\u5976\u725b\u5411\u53f3\u8fb9\u4f18\u5148\u51b2\u5e72\u8349\u6346:\n> + \u5976\u725b\u80fd\u5f80\u53f3\u8fb9\u5c31\u5f80\u53f3\u8fb9\u8d70\u3002\n> + \u5976\u725b\u8d8a\u754c\u4e86\u5c31\u9000\u51fa\u3002\n> + \u5982\u679c\u5976\u725b\u88ab\u53f3\u8fb9\u7684\u67d0\u4e00\u4e2a\u5e72\u8349\u6346\u6321\u4e0b\u6765\u4e86\uff0c\u90a3\u4e48 FJ \u5c31\u5c1d\u8bd5\u9632\u5b88\u5de6\u8fb9\u7684\u5e72\u8349\u6346\u3002\n> + \u7136\u540e\u5982\u679c\u5de6\u8fb9\u6839\u672c\u4e0d\u7528\u9632\u5b88\uff0c\u90a3\u5c31\u9000\u51fa\u3002\n> + \u5426\u5219\uff0c\u6a21\u62df\u4e0d\u9632\u5b88\u5de6\u8fb9\u3002\n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1e9 + 1e9;\nint n, b, ans = INF;\nstruct Node {\n  int s, p;  //\u5927\u5c0f\uff0c\u8ddd\u79bb\u3002\n} cow[200005];\nint cowl, cowr;\nbool cmp(Node a, Node b) {\n  return a.p < b.p;\n}\nint main() {\n  // freopen(\"trapped.in\", \"r\", stdin);\n  // freopen(\"trapped.out\", \"w\", stdout);\n  scanf(\"%d%d\", &n, &b);\n  cowl = 1;\n  cowr = n;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d%d\", &cow[i].s, &cow[i].p);\n    // cin >> cow[i].s >> cow[i].p;\n  }\n  stable_sort(cow + 1, cow + 1 + n, cmp);\n  int x = 0, y = 0;\n  for (int i = 1; i < n; i++) {\n    if (cow[i].p <= b && b <= cow[i + 1].p) {\n      cowl = x = i;\n      cowr = y = i + 1;\n      break;\n    }\n  }\n  /*\n  \u5de6\u8fb9\u4f18\u5148:\n  \u80fd\u5f80\u5de6\u8fb9\u5c31\u5f80\u5de6\u8fb9\u8d70\u3002\n  \u8d8a\u754c\u4e86\u5c31\u9000\u51fa\u3002\n  \u5982\u679c\u88ab\u5de6\u8fb9\u7684\u67d0\u4e00\u4e2a\u5e72\u8349\u6346\u6321\u4e0b\u6765\u4e86\uff0c\u90a3\u4e48 FJ \u5c31\u5c1d\u8bd5\u9632\u5b88\u53f3\u8fb9\u7684\u5e72\u8349\u6346\u3002\n  \u7136\u540e\u5982\u679c\u53f3\u8fb9\u6839\u672c\u4e0d\u7528\u9632\u5b88\uff0c\u90a3\u5c31\u9000\u51fa\u3002\n  \u5426\u5219\uff0c\u6a21\u62df\u4e0d\u9632\u5b88\u53f3\u8fb9\u3002\n  */\n  while (cowr <= n) {  //\u5de6\u8fb9\u4f18\u5148\u3002\n    while (0 < cowl && cow[cowl].s < cow[cowr].p - cow[cowl].p) {\n      cowl--;\n    }\n    if (cowl < 1) {\n      break;\n    }\n    ans = max(0 /*\u6709\u65f6\u5019\u4e0d\u7528\u9632\u5b88\uff0c\u6240\u4ee5\u4f1a\u51cf\u51fa\u8d1f\u6570\u3002*/, min(ans, cow[cowr].p - cow[cowl].p - cow[cowr].s));  //\u9632\u5b88\u3002\n    if (cow[cowr].s >= cow[cowr].p - cow[cowl].p) {                                                        //\u4e0d\u7528\u9632\u5b88\u5de6\u8fb9\u3002\n      break;\n    } else {\n      cowr++;\n    }\n  }\n  // puts(\"114514\");\n  cowl = x;\n  cowr = y;\n  /*\n  \u53f3\u8fb9\u4f18\u5148:\n  \u4e0e\u5de6\u8fb9\u5dee\u4e0d\u591a\u3002\n  */\n\n  while (1 <= cowl) {  //\u53f3\u8fb9\u4f18\u5148\u3002\n    while (cowr <= n && cow[cowr].s < cow[cowr].p - cow[cowl].p) {\n      cowr++;\n    }\n    if (cowr > n) {\n      break;\n    }\n    ans = max(0, min(ans, cow[cowr].p - cow[cowl].p - cow[cowl].s));\n    if (cow[cowl].s >= cow[cowr].p - cow[cowl].p) {\n      break;\n    } else {\n      cowl--;\n    }\n  }\n  if (ans == INF) {\n    puts(\"-1\");\n  } else {\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n```",
        "postTime": 1658827880,
        "uid": 482347,
        "name": "ZZQF5677",
        "ccfLevel": 0,
        "title": "P3124  - TJ"
    },
    {
        "content": "## \u9898\u610f\n\u4e00\u7ef4\u6570\u8f74\u4e0a\u6709\u4e00\u4e9b\u5e26\u503c\u969c\u788d\u70b9\uff0c\u969c\u788d\u70b9\u5c06\u6570\u8f74\u5212\u6210\u4e00\u4e9b\u533a\u95f4\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u957f\u5ea6\u5927\u4e8e\u5de6\u8fb9\u754c\u969c\u788d\u70b9\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u5c06\u8be5\u969c\u788d\u70b9\u5220\u9664\uff0c\u53f3\u8fb9\u754c\u540c\u7406\u3002\n\n\u7ed9\u5b9a\u521d\u59cb\u70b9\uff0c\u4ee5\u5305\u542b\u8be5\u70b9\u7684\u533a\u95f4\u4f5c\u4e3a\u521d\u59cb\u533a\u95f4\uff0c\u73b0\u5728\u53ef\u4ee5\u4efb\u9009\u4e00\u4e2a\u969c\u788d\u70b9\u5e76\u589e\u52a0\u8be5\u70b9\u7684\u503c\uff0c\u6c42\u6700\u5c11\u7684\u589e\u91cf\uff0c\u4f7f\u5f97\u65e0\u6cd5\u5220\u9664\u6700\u5de6\u548c\u6700\u53f3\u7684\u969c\u788d\u70b9\u3002\n## \u601d\u8def\n\u9996\u5148\uff0c\u6839\u636e\u521d\u59cb\u70b9\u627e\u5230\u521d\u59cb\u533a\u95f4\uff0c\u7136\u540e\u4ece\u521d\u59cb\u533a\u95f4\u5f00\u59cb\uff0c\u4e0d\u65ad\u6309\u7167\u89c4\u5219\u5220\u9664\u8fb9\u754c\u969c\u788d\u70b9\u5e76\u6269\u5927\u533a\u95f4\u3002\u5982\u679c\u6700\u7ec8\u65e0\u6cd5\u5220\u9664\u6700\u5de6\u548c\u6700\u53f3\u969c\u788d\u70b9\uff0c\u5fc5\u7136\u5f97\u5230\u4e86\u4e00\u4e2a\u65e0\u6cd5\u518d\u6269\u5927\u7684\u533a\u95f4 $[i,j]$\uff0c\u6b64\u65f6\u5fc5\u7136\u6709 $p_j-p_i<\\min(s_i,s_j)$\u3002\n\n\u7531\u4e8e\u53ea\u80fd\u589e\u52a0\u4e00\u4e2a\u969c\u788d\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c1d\u8bd5\u5bf9\u8be5\u969c\u788d\u70b9\u8fdb\u884c\u679a\u4e3e\uff0c\u5e76\u8ba9\u8be5\u969c\u788d\u70b9\u4f5c\u4e3a\u6700\u7ec8\u533a\u95f4\u7684\u8fb9\u754c\u3002\u969c\u788d\u70b9\u5728\u521d\u59cb\u70b9\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u662f\u4e24\u79cd\u4e0d\u540c\u60c5\u51b5\uff0c\u6211\u4eec\u5148\u5206\u6790\u5728\u5de6\u8fb9\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u679a\u4e3e\u6700\u7ec8\u533a\u95f4 $[i,j]$ \u7684\u5de6\u8fb9\u754c $i$ \u4f5c\u4e3a\u53ef\u4fee\u6539\u969c\u788d\u70b9\uff0c\u6b64\u65f6\u53ef\u884c\u7684\u53f3\u8fb9\u754c\u9700\u8981\u6ee1\u8db3 $p_j-p_i<s_j$,\u8c03\u6574\u4e00\u4e0b\u4e0d\u7b49\u5f0f\u5f97\u5230 $p_j-s_j<p_i$\uff0c\u53ef\u89c1\u968f\u7740 $p_i$ \u7684\u589e\u5927\uff0c\u53f3\u8fb9\u754c\u6309\u7167 $p_j-s_j$ \u7684\u987a\u5e8f\u53d8\u6210\u53ef\u884c\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6309\u7167 $p_j-s_j$ \u5bf9\u53f3\u8fb9\u754c\u6392\u5e8f\uff0c\u7136\u540e\u7531\u5c0f\u5230\u5927\u679a\u4e3e $p_i$\uff0c\u8fd9\u6837\u53ef\u884c\u7684\u53f3\u8fb9\u754c\u5c31\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u524d\u7f00\u3002\n\n\u7136\u540e\u8003\u8651\u7b54\u6848\uff0c$i$ \u9700\u8981\u7684\u589e\u91cf\u4e3a $\\max(0,p_j-p_i-s_i)$\uff0c\u5176\u4e2d $p_i+s_i$ \u4e0e $j$ \u65e0\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230 $p_j$ \u7684\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u5728\u7ef4\u62a4\u53ef\u884c\u7684\u53f3\u8fb9\u754c\u65f6\u987a\u4fbf\u6c42\u51fa\u3002\n\n\u969c\u788d\u70b9\u5728\u521d\u59cb\u70b9\u53f3\u8fb9\u7684\u60c5\u51b5\u662f\u76f8\u4f3c\u7684\uff0c\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u5206\u6790\uff0c\u6700\u7ec8\u5c31\u80fd\u6c42\u51fa\u6700\u4f18\u89e3\u4e86\u3002\n\n## \u590d\u6742\u5ea6\n### \u65f6\u95f4\n\u969c\u788d\u70b9\u6392\u5e8f $O(N \\log N)$\u3002\n\n\u679a\u4e3e\u969c\u788d\u70b9 $O(N)$\uff0c\u8c03\u6574\u53e6\u4e00\u4e2a\u70b9\u5747\u644a $O(1)$\uff0c\u8ba1\u7b97 $O(1)$\uff0c \u603b\u5171 $O(N)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N \\log N)$\u3002\n### \u7a7a\u95f4\n\u8bb0\u5f55\u70b9 $O(N)$\u3002\n## CODE\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nusing Pii = pair<int, int>;\n\nconst int kMaxN = 501, kInf = 1e9;\n\nPii e[kMaxN];\nint f[kMaxN][kMaxN], n, k, ans = kInf;\n\nint main() {\n  cin >> n >> k;\n  for (int i = 1; i <= n; i++) {\n    cin >> e[i].first >> e[i].second;\n  }\n  fill(f[0], f[n + 1], kInf);  // \u521d\u59cb\u5316\n  f[1][0] = 0;                 // \u8fb9\u754c\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j <= k; j++) {                                                                                      // \u679a\u4e3e\u72b6\u6001\n      for (int l = max(1, i - j - 1); l < i; l++) {                                                                     // \u679a\u4e3e\u8f6c\u79fb\n        f[i][j] = min(f[i][j], f[l][j - (i - l - 1)] + abs(e[l].first - e[i].first) + abs(e[l].second - e[i].second));  // \u66f4\u65b0\u6700\u503c\n      }\n    }\n  }\n  for (int i = 0; i <= k; i++) {  // \u679a\u4e3e\u76ee\u6807\u72b6\u6001\n    ans = min(ans, f[n][i]);\n  }\n  cout << ans;\n  return 0;\n}\n```",
        "postTime": 1644313649,
        "uid": 444534,
        "name": "\u54c8\u58eb\u5947\u61a8\u61a8",
        "ccfLevel": 5,
        "title": "P3124 [USACO15OPEN]Trapped in the Haybales S \u9898\u89e3"
    },
    {
        "content": "\u5927\u4f53\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n\u5176\u5b9e\u662f\u4e2a\u597d\u73a9\u7684\u6a21\u62df\u554a\n\n\u5148\u627e\u5230b\u70b9\u5728\u6570\u8f74\u4e0a\u6240\u5bf9\u5e94\u7684I\u503c\uff0c\u4e5f\u5c31\u662fb\u4f4d\u4e8e\u54ea\u4e24\u5806\u5e72\u8349\u4e4b\u95f4\n\n\u7136\u540e\u5206\u522b\u4eceb\u70b9\u5411\u5de6\u5411\u53f3\u7ebf\u6027\u626b\u63cf\n\n\u5206\u522b\u5224\u65ad\u5982\u679c\u5f53\u524d\u626b\u5230\u8fd9\u4e00\u5806\u7684\u52a0\u5e72\u8349\u7684\u503c\uff0c\u5e76\u6253\u64c2\u53f0\u5c31\u53ef\u4ee5\u4e86\n\n\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff1a\u5982\u679c\u6211\u53d1\u73b0\u52a0\u5e72\u8349\u5e76\u4e0d\u80fd\u7ec4\u7ec7Bessie\uff0c\u8981\u8f93\u51fa-1\n\n\u4e00\u5f00\u59cb\u6211\u8fd8\u4ee5\u4e3a\u6ca1\u6709\u8fd9\u79cd\u53ef\u80fd\u5462\u3002\u3002\u3002\n\n\u4e0a\u4ee3\u7801\uff01\uff01\uff01\n\n@wjcwinmt \u5927\u795e\u7287\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n#define MAXN 1000000001\n#define index first\n#define w second\nint main()\n{\n    int n,b;\n      cin>>n>>b;\n      vector<pair<int, int> >a(n);\n      for(int i=0;i<n;i++)\n    {\n        cin>>a[i].w>>a[i].index;\n      }\n      sort(a.begin(),a.end());\n      int ans=MAXN;\n      int startpos=lower_bound(a.begin(),a.end(),make_pair(b,0))-a.begin();\n      int j=startpos;\n      for(int i=startpos-1;i>=0;i--)\n      {\n        while(j<n&&a[j].index-a[i].index<=a[i].w)\n        {\n              ans=min(ans,a[j].index-a[i].index-a[j].w);\n              j++;\n        }\n      }\n      j=startpos-1;\n      for(int i=startpos;i<n;i++)\n    {\n        while(j>=0&&a[i].index-a[j].index<=a[i].w)\n        {\n              ans=min(ans,a[i].index-a[j].index-a[j].w);\n              j--;\n        }\n      }\n      if(ans==MAXN)\n      {\n        cout<<-1<<endl;\n      }\n    else\n    {\n        cout<<max(ans,0)<<endl;\n      }\n      return 0;\n}\n\n```",
        "postTime": 1496484273,
        "uid": 22985,
        "name": "dzysc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3124 \u3010[USACO15OPEN]\u88ab\u56f0\u5728haybales\uff08\u94f6\uff09Trapped in the H\u2026\u3011"
    }
]