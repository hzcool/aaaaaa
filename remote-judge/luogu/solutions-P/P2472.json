[
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e0b\u9898\u76ee\u5927\u610f\u548c\u89e3\u9898\u601d\u8def~~\uff08\u5176\u5b9e\u4e3b\u8981\u8fd8\u662f\u90a3\u5f20\u56fe\uff09~~\n\n# \u9898\u76ee\u5927\u610f\n\u5728\u4e00\u4e2a$n\\times m$\u7684\u77e9\u9635\u4e2d\uff0c\u6bcf\u4e2a\u683c\u5b50\u90fd\u6709\u4e00\u5b9a\u7684\u9ad8\u5ea6\uff0c\u5f53\u9ad8\u5ea6\u4e3a0\u65f6\u8868\u793a\u8be5\u683c\u5b50\u4e0d\u5b58\u5728\uff0c\u73b0\u5728\u8fd9\u4e2a\u77e9\u9635\u4e2d\u6709\u82e5\u5e72\u53ea\u8725\u8734\uff0c\u6bcf\u53ea\u8725\u8734\u8df3\u5230\u683c\u5b50\u4e0a\u65f6\uff0c\u8be5\u683c\u5b50\u7684\u9ad8\u5ea6\u4f1a\u51cf\u4e00\uff0c\u6bcf\u53ea\u8725\u8734\u53ef\u4ee5\u8df3\u8dc3\u76f4\u7ebf\u8ddd\u79bb\u4e0d\u5927\u4e8e$D$\u7684\u957f\u5ea6\uff0c\u95ee\u6700\u5c11\u6709\u51e0\u53ea\u8725\u8734\u65e0\u6cd5\u9003\u79bb\n# \u89e3\u9898\u601d\u8def\n`\u6700\u5c11\u6709\u51e0\u53ea\u8725\u8734\u65e0\u6cd5\u9003\u79bb=\u8725\u8734\u603b\u6570-\u6700\u591a\u6709\u51e0\u53ea\u8725\u8734\u80fd\u9003\u79bb`\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u8fdb\u884c\u62c6\u70b9\uff0c\u5c06\u5176\u62c6\u5206\u4e3a\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u663e\u7136\u5b83\u4eec\u4e4b\u95f4\u7684\u5bb9\u91cf\u4e3a\u8be5\u683c\u5b50\u9ad8\u5ea6\uff08\u6700\u591a\u80fd\u8df3$h[i][j]$\u53ea\u8725\u8734\uff09\uff0c\u5bf9\u4e8e\u53ef\u4ee5\u8df3\u51fa\u77e9\u9635\u7684\u70b9\uff0c\u5c06\u5b83\u4eec\u7684\u51fa\u70b9\u4e0e\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u65e0\u7a77\u5927\uff08\u5141\u8bb8\u6240\u6709\u8725\u8734\u9003\u79bb\uff09\uff0c\u5bf9\u4e8e\u6240\u6709\u8d77\u70b9\uff0c\u6211\u4eec\u5c06\u6e90\u70b9\u548c\u5b83\u4eec\u7684\u5165\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a1\uff08\u6bcf\u4e2a\u70b9\u4e0a\u81f3\u591a\u6709\u4e00\u53ea\u8725\u8734\uff09\uff0c\u6700\u540e\u8dd1\u6700\u5927\u6d41\uff0c\u7136\u540e\u7528\u8725\u8734\u6570\u51cf\u53bb\u6700\u5927\u6d41\u5373\u4e3a\u9898\u76ee\u7b54\u6848\u6240\u6c42\n\n\u5982\u4e0b\u56fe\n\n![[\u535a\u5ba2\u5730\u5740](https://blog.csdn.net/xuxiayang/article/details/80932389)](https://cdn.luogu.com.cn/upload/pic/22331.png)",
        "postTime": 1530792291,
        "uid": 52915,
        "name": "Ajwallet",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "# $\\mathsf{Solution\\text{ }For\\text{ }P2472}$  \n$\\large\\mathcal{By\\text{ }ShadderLeave}$  \n\n[$\\small\\texttt{\u5728\u535a\u5ba2\u5185\u98df\u7528}$](https://www.luogu.com.cn/blog/ShadderLeave/solution-p2472)\n\nupd:\u66f4\u65b0\u4e86\u5173\u4e8e\u8ddd\u79bb $d$ \u7684\u8bf4\u660e\n\n------------\n## Description  \n\u8fd9\u9898\u662f\u6c42\u4e00\u4e2a\u7f51\u683c\u56fe\u5185\u82e5\u5e72\u4e2a\u8d77\u70b9\u4e2d\u6700\u591a\u6709\u591a\u5c11\u4e2a\u80fd\u591f\u8d70\u51fa\u7f51\u683c\uff0c\u9650\u5236\u6761\u4ef6\u662f\u6bcf\u4e00\u4e2a\u70b9\u7684\u7ecf\u8fc7\u6b21\u6570\u9650\u5236\uff08\u77f3\u67f1\u9ad8\u5ea6\uff09\u548c\u6b65\u957f\u9650\u5236\uff08\u9898\u76ee\u7ed9\u51fa\u7684 $d$\uff09  \n## Analysis\n\u4ece\u201c\u6700\u591a\u201d \u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7f51\u7edc\u6d41\u7684\u6700\u5927\u6d41\u7b97\u6cd5\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u662f\u5efa\u6a21\u95ee\u9898\u4e86\u3002  \n\n\u6211\u7b2c\u4e00\u6b21\u505a\u8fd9\u79cd\u9898\u76ee\u7684\u7684\u65f6\u5019\uff0c\u60f3\u5230\u4e86\u4e00\u4e2a**\u9519\u8bef**\u7684\u6a21\u578b\uff1a  \n\n\u5047\u8bbe\u4ece\u70b9 $u$ \u53ef\u4ee5\u5230\u70b9 $v$ \u4e14\u70b9 $v$ \u6700\u591a\u88ab\u7ecf\u8fc7 $x$ \u6b21\uff0c\u90a3\u4e48\u5c31\u5f15\u4e00\u6761 $(u,v,x)$ \u7684\u8fb9\u8868\u793a\u9650\u5236\u3002  \n\n\u770b\u8d77\u6765\u6ee1\u8db3\u4e86\u9650\u5236\u5b9e\u9645\u4e0a\u6709bug\uff0c\u5047\u8bbe\u70b9 $u_1$ \u548c\u70b9 $u_2$ \u90fd\u53ef\u4ee5\u5230\u8fbe\u70b9 $v$\uff0c\u90a3\u4e48\u5c31\u53d8\u6210\u4e86\u4ece\u70b9 $u_1$ \u548c $u_2$ \u5404\u53ef\u4ee5\u53bb\u70b9 $v$ $x$ \u6b21\uff0c\u9519\u4e86\u3002  \n\n\n------------\n\n\u90a3\u4e48\u600e\u4e48\u4fee\u8fd9\u4e2abug\u5462  \nbug\u4ea7\u751f\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u4ece $u_1$ \u548c $u_2$ \u6d41\u8fc7\u6765\u7684\u6d41\u91cf\u5e76\u4e0d\u76f8\u4e92\u5e72\u6270\uff0c\u6211\u4eec\u5e94\u8be5\u5bf9\u6d41\u5230 $v$ \u70b9\u7684\u6d41\u91cf\u52a0\u548c\u7ba1\u7406\uff08\u5148\u6c47\u805a\uff0c\u518d\u8d70\u9650\u5236\uff09\uff0c\u4f46\u662f\u4e00\u4e2a\u8282\u70b9\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\u3002  \n\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u7ecf\u5178\u65b9\u6cd5 $\\color{red}\\texttt{\u62c6\u70b9\u6cd5}$\uff0c\u5c06\u4e00\u4e2a\u8282\u70b9 $v$ \u62c6\u89e3\u6210\u4e24\u4e2a\u8282\u70b9 $v_x$ \u548c $v_y$ \uff0c\u4e0d\u59a8\u5206\u522b\u79f0\u4f5c\u5165\u70b9\u548c\u51fa\u70b9\u3002  \n\u90a3\u4e48bug\u5c31\u4fee\u590d\u4e86\uff0c\u6211\u4eec\u4f9d\u7136\u8fde\u8fb9\uff1a\u5047\u5982\u70b9 $u$ \u53ef\u4ee5\u5230\u8fbe\u70b9 $v$\uff0c\u90a3\u4e48\u5c31\u4ece $u$ \u70b9\u7684\u51fa\u70b9 $u_y$ \u5f15\u4e00\u6761\u8fb9\u5230 $v$ \u7684\u5165\u70b9 $v_x$\uff0c\u7136\u540e\u8282\u70b9 $v$ \u7684\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u63a7\u5236\u6d41\u91cf\uff0c\u5176\u6d41\u91cf\u4e3a\u8be5\u70b9\u7684\u9650\u5236\u7ecf\u8fc7\u6b21\u6570\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/154mihgs.png)  \n\u5982\u56fe\uff0c\u5916\u9762\u84dd\u8272\u7684\u8fb9\u518d\u600e\u4e48\u591a\uff0c\u8fd9\u4e00\u6761\u7ea2\u8272\u7684\u8fb9\u6d41\u91cf\u9650\u5236\u4e86\uff0c\u4e5f\u5c31\u4e0d\u80fd\u8d85\u8fc7\u6700\u591a\u7ecf\u8fc7\u6b21\u6570\u7684\u9650\u5236\u4e86\u3002  \n\n\n------------\n\u7136\u540e\u6211\u4eec\u518d\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9 $S$ \u548c\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9 $T$\uff0c\u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u628a\u6240\u6709\u7684\u8725\u8734\u96c6\u5408\u5230 $S$ \u70b9\u7136\u540e\u5f00\u59cb\u8dd1\uff0c\u8dd1\u5230 $T$ \u70b9\u5c31\u662f\u8dd1\u51fa\u4e86\u56fe\uff08\u5230\u8fbe\u7ec8\u70b9\uff09\uff0c\u6211\u4eec\u6c42\u51fa\u6709\u51e0\u53ea\u8725\u8734\u53ef\u4ee5\u5230\u8fbe\u7ec8\u70b9\u5c31\u662f\u5728\u6c42\u8fd9\u4e2a\u7f51\u7edc\u7684\u6700\u5927\u6d41\u3002  \n\n\n------------\n\u7136\u540e\u662f\u8ddd\u79bb $d$ \u7684\u9650\u5236\uff08**\u6ce8\u610f $d$ \u662f\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u800c\u4e0d\u662f\u66fc\u54c8\u987f\u8ddd\u79bb**\uff09\uff0c\u56e0\u4e3a\u8fd9\u91cc $d$ \u6bd4\u8f83\u5c0f\u6211\u76f4\u63a5\u5206\u7c7b\u8ba8\u8bba\u4e86\uff08\u4e0d\u5efa\u8bae\u5b66\u4e60\uff0c\u5176\u4ed6\u9898\u89e3\u7684\u65b9\u6cd5\u7801\u91cf\u4e0a\u504f\u5c0f\u4f46\u662f\u4e5f\u8bb8\u6211\u8fd9\u4e2a\u5feb\u4e00\u70b9\uff1f\uff09\uff0c\u5468\u56f4\u7684\u70b9\u5927\u6982\u5c31\u662f\u8fd9\u6837\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/wyn492nq.png)  \n\uff08\u6ce8\u610f\uff1a\u7531\u4e8e\u753b\u7684\u662f\u7f51\u683c\u56fe\uff0c\u5bb9\u6613\u8bef\u4ee5\u4e3a\u8fd9\u91cc\u753b\u7684\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u8ba1\u7b97\u8ddd\u79bb\u8981\u7528\u5750\u6807\u76f8\u51cf\uff0c\u8fd9\u6837\u5c31\u4e0d\u5bb9\u6613\u7406\u89e3\u9519\u8bef\u4e86\uff09  \n\u6309\u7167 $d$ \u7684\u503c\u5411\u5176\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u8fde\u7ebf\u5c31\u53ef\u4ee5\u4e86\u3002  \n\u4f46\u662f\u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5982\u679c\u9047\u5230\u8981\u8fde\u7ebf\u7684\u4e00\u4e2a\u70b9\u662f\u4e0d\u5408\u6cd5\u7684\u70b9\u600e\u4e48\u529e\uff1f\uff08\u4e0d\u5408\u6cd5\u610f\u4e3a\uff1a\u8bbe\u8be5\u70b9\u4e3a $(i,j)$  \u6709 $i<1 || j<1 || i>N || j>M$\uff09  \n\u5e94\u8be5\u76f4\u63a5\u628a\u8fd9\u4e2a\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9 $T$ \u8fde\u8d77\u6765\u554a\u3002  \n\u56e0\u4e3a\u8fd9\u8868\u793a\u53ef\u4ee5\u8df3\u5230\u7684\u70b9\u5728\u56fe\u4e4b\u5916\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u76f4\u63a5\u8df3\u51fa\u53bb\uff0c\u6240\u4ee5\u76f4\u63a5\u8fde\u5230 $T$\u3002  \n\n\n------------\n\u603b\u7ed3\u4e00\u4e0b\u6a21\u578b:  \n1. \u62c6\u70b9\uff0c\u6bcf\u4e2a\u70b9\u5206\u4e3a\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u4e24\u70b9\u4e4b\u95f4\u8fde\u4e0a\u8be5\u70b9\u7684\u6d41\u91cf\u4e3a\u7ecf\u8fc7\u6b21\u6570\u7684\u8fb9\u3002\uff08\u5982\u679c\u8be5\u70b9\u662f '0' \u5c31\u4e0d\u7528\u505a\uff09  \n2. \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u4ece\u5176\u51fa\u70b9\u5411\u5411\u5468\u56f4\u7684\u53ef\u4ee5\u5230\u8fbe\u70b9\u7684\u5165\u70b9\u8fde\u8fb9\uff0c\u5982\u679c\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u5728\u56fe\u5916\u90e8\u5c31\u76f4\u63a5\u8fde\u5230 $T$\u3002\uff08\u5982\u679c\u8be5\u70b9\u4e3a'0'\u6216\u8005\u8fde\u63a5\u5230\u7684\u70b9\u4e3a'0'\u4e0d\u7528\u505a\uff09  \n3. \u628a\u6e90\u70b9 $S$ \u8fde\u5230\u6709\u8725\u8734\u7684\u70b9\u7684\u5165\u70b9\u4e0a\u3002  \n\n\u8fd8\u6709\u7ec6\u8282\u6ca1\u61c2\u7684\u53bb\u770b\u4ee3\u7801\u5427qaq\u3002  \n$\\large\\mathsf{Code:}$  \n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nqueue <int> q;\nconst int maxn=807;\nconst int maxm=100007;\nconst int inf=0x7f7f7f7f;\nstruct E{\n\tint u,v,cf;\n}e[maxm];//cf\u662f\u6307\u6d41\u91cf\n#define cf(i) e[i].cf\nint first[maxn],nt[maxm],ES=1;\ninline void addE(int u,int v,int cf)\n{\n\te[++ES]=(E){u,v,cf};\n\tnt[ES]=first[u];\n\tfirst[u]=ES;\n\treturn ;\n}\ninline void add(int u,int v,int cf)//\u7f51\u7edc\u7624\u4e13\u7528\u52a0\u53cc\u8fb9\n{\n\taddE(u,v,cf);addE(v,u,0);\n\treturn ;\n}\nint N,M,S,T;\nchar m1[27][27],m2[27][27];\ninline int num(int i,int j)//\u6839\u636e\u4e00\u4e2a\u70b9\u7684\u5750\u6807\u5f97\u5230\u5176\u5165\u70b9\u7f16\u53f7\n{\n\treturn (i-1)*M+j;\n}\nint d,all,ans;\ninline void linkE(int u,int i,int j)//\u4ece\u7f16\u53f7u\u8fde\u5411 (i,j)\n{\n\tif(i<1||i>N||j<1||j>M)//\u843d\u5728\u56fe\u5916\u76f4\u63a5\u8fde\u5230T\n\t{\n\t\tadd(u,T,inf);\n\t\treturn ;\n\t}\n\tif(m1[i][j]=='0') return ;\n\tadd(u,num(i,j),inf);\n\treturn ;\n}\ninline void link(int i,int j)//\u70b9(i,j)\u8fde\u8fb9\n{\n\tif(m1[i][j]=='0') return ; \n\tadd(num(i,j),num(i,j)+all,m1[i][j]-'0');\n\tif(m2[i][j]=='L')\n\t\tadd(S,num(i,j),1),ans++;//\u662f\u8725\u8734\uff0c\u987a\u4fbf\u7edf\u8ba1\u8725\u8734\u53ea\u6570\n\tif(i==1||j==1||i==N||j==M)\n\t\tadd(num(i,j)+all,T,inf);\n\tint u=num(i,j)+all;\n    //\u6700\u6ca1\u8425\u517b\u7684\u4e00\u90e8\u5206\n\tif(d>=1)\n\t{\n\t\tlinkE(u,i-1,j);linkE(u,i+1,j);\n\t\tlinkE(u,i,j-1);linkE(u,i,j+1);\n\t}\n\tif(d>=2)\n\t{\n\t\tlinkE(u,i-2,j);linkE(u,i+2,j);\n\t\tlinkE(u,i,j-2);linkE(u,i,j+2);\n\t\tlinkE(u,i-1,j-1);linkE(u,i-1,j+1);\n\t\tlinkE(u,i+1,j-1);linkE(u,i+1,j+1);\n\t}\n\tif(d>=3)\n\t{\n\t\tlinkE(u,i-3,j);linkE(u,i+3,j);linkE(u,i,j-3);linkE(u,i,j+3);\n\t\tlinkE(u,i-2,j-2);linkE(u,i-2,j+2);linkE(u,i+2,j-2);linkE(u,i+2,j+2);\n\t\tlinkE(u,i-1,j-2);linkE(u,i-1,j+2);linkE(u,i+1,j-2);linkE(u,i+1,j+2);\n\t\tlinkE(u,i-2,j-1);linkE(u,i-2,j+1);linkE(u,i+2,j-1);linkE(u,i+2,j+1);\n\t}\n\tif(d>=4)\n\t{\n\t\tlinkE(u,i-4,j);linkE(u,i+4,j);linkE(u,i,j-4);linkE(u,i,j+4);\n\t\tlinkE(u,i-1,j-3);linkE(u,i-1,j+3);linkE(u,i+1,j-3);linkE(u,i+1,j+3);\n\t\tlinkE(u,i-3,j-1);linkE(u,i-3,j+1);linkE(u,i+3,j-1);linkE(u,i+3,j+1);\n\t\tlinkE(u,i-3,j-2);linkE(u,i-3,j+2);linkE(u,i+3,j-2);linkE(u,i+3,j+2);\n\t\tlinkE(u,i-2,j-3);linkE(u,i-2,j+3);linkE(u,i+2,j-3);linkE(u,i+2,j+3);\n\t}\n   //\u545c\u545c\u7ec8\u4e8e\u5199\u5b8c\u4e86\n\treturn ;\n}\n//Dinic\u6700\u5927\u6d41\u90e8\u5206\nint cur[maxn],cnt[maxn];\ninline bool BFS()\n{\n\tmemset(cnt,0,sizeof(cnt));\n\tcnt[S]=1;\n\tq.push(S);\n\tint u,v;\n\twhile(!q.empty())\n\t{\n\t\tu=q.front();q.pop();\n\t\tfor(register int i=first[u];i;i=nt[i])\n\t\t{\n\t\t\tv=e[i].v;\n\t\t\tif(cf(i)>0&&!cnt[v])\n\t\t\t{\n\t\t\t\tcnt[v]=cnt[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn cnt[T]!=0;\n}\ninline int dfs(int u,int f)\n{\n\tif(u==T) return f;\n\tint d,v,sum=0;\n\tfor(register int &i=cur[u];i;i=nt[i])//cur\u6570\u7ec4\u662f \u5f53\u524d\u5f27\u4f18\u5316\n\t{\n\t\tv=e[i].v;\n\t\tif(cf(i)>0&&cnt[v]==cnt[u]+1)\n\t\t{\n\t\t\td=dfs(v,min(f,cf(i)));\n\t\t\tif(d>0)\n\t\t\t{\n\t\t\t\tf-=d;sum+=d;\n\t\t\t\tcf(i)-=d;cf(i^1)+=d;\n\t\t\t\tif(f<=0) return sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&N,&M,&d);\n    T=N*M*2+1;all=N*M;//\u5165\u70b9\u7f16\u53f7\u4e3au\u7684\u70b9\u7684\u51fa\u70b9\u4e3au+all\n\tfor(register int i=1;i<=N;i++)\n\t\tscanf(\"%s\",m1[i]+1);\n\tfor(register int i=1;i<=N;i++)\n\t\tscanf(\"%s\",m2[i]+1);\n\tfor(register int i=1;i<=N;i++)\n\t\tfor(register int j=1;j<=M;j++)\n\t\t\tlink(i,j);\n\twhile(BFS())\n\t{\n\t\tmemcpy(cur,first,sizeof(cur));\n\t\tans-=dfs(S,inf);//\u6d41\u91cf\u90fd\u662f\u8dd1\u51fa\u53bb\u7684\u8725\u8734\uff0c\u8981\u6c42\u5269\u4e0b\u7684\u8725\u8734\u3002\n       //\u5728\u8fde\u8fb9\u51fd\u6570\u91cc\u9762\u5df2\u7ecf\u7edf\u8ba1\u4e86\u8725\u8734\u6570\u91cf\uff0c\u51cf\u53bb\u5c31\u53ef\u4ee5\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u8fd8\u6709\u4e0d\u61c2\u7684\u6b22\u8fce\u5728\u8ba8\u8bba\u63d0\u51fa\uff0c\u6216\u8005\u79c1\u4fe1\u6233\u6211\u90fd\u6ca1\u95ee\u9898\u3002  \n\u87f9\u87f9\u89c2\u8d4f\uff08\u65e0\u803b\u6c42\u8d5e.jpg\uff09  \n\u87f9\u87f9\u7ba1\u7406\u5927\u5927\u5ba1\u6838qwq  \n$\\huge\\mathcal{The\\text{ }End}$",
        "postTime": 1588584794,
        "uid": 215697,
        "name": "LeavingZ",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "#   Dinic\u7b97\u6cd5\n\n\n------------\n## \u7f51\u7edc\u6d41\u57fa\u672c\u6982\u5ff5\n ### - \u4ec0\u4e48\u662f\u7f51\u7edc\u6d41\uff1f\n\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e0a\u9009\u62e9\u4e00\u4e2a\u6e90\u70b9\uff0c\u4e00\u4e2a\u6c47\u70b9\uff0c\u6bcf\u4e00\u6761\u8fb9\u4e0a\u90fd\u6709\u4e00\u4e2a\u6d41\u91cf\u4e0a\u9650\uff08\u4ee5\u4e0b\u79f0\u4e3a\u5bb9\u91cf\uff09\uff0c\u5373\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u6d41\u91cf\u4e0d\u80fd\u8d85\u8fc7\u8fd9\u4e2a\u4e0a\u754c\uff0c\u540c\u65f6\uff0c\u9664\u6e90\u70b9\u548c\u6c47\u70b9\u5916\uff0c\u6240\u6709\u70b9\u7684\u5165\u6d41\u548c\u51fa\u6d41\u90fd\u76f8\u7b49\uff0c\u800c\u6e90\u70b9\u53ea\u6709\u6d41\u51fa\u7684\u6d41\uff0c\u6c47\u70b9\u53ea\u6709\u6c47\u5165\u7684\u6d41\u3002\u8fd9\u6837\u7684\u56fe\u53eb\u505a\u7f51\u7edc\u6d41\u3002\n ###  - \u5b9a\u4e49\n\u6e90\u70b9\uff1a\u53ea\u6709\u6d41\u51fa\u53bb\u7684\u70b9\n\u6c47\u70b9\uff1a\u53ea\u6709\u6d41\u8fdb\u6765\u7684\u70b9\n\u6d41\u91cf\uff1a\u4e00\u6761\u8fb9\u4e0a\u6d41\u8fc7\u7684\u6d41\u91cf\n\u5bb9\u91cf\uff1a\u4e00\u6761\u8fb9\u4e0a\u53ef\u4f9b\u6d41\u8fc7\u7684\u6700\u5927\u6d41\u91cf\n\u6b8b\u91cf\uff1a\u4e00\u6761\u8fb9\u4e0a\u7684\u5bb9\u91cf-\u6d41\u91cf\n## \u51e0\u4e2a\u57fa\u672c\u6027\u8d28\n\u57fa\u672c\u6027\u8d28\u4e00\uff1a\n\u5bf9\u4e8e\u4efb\u4f55\u4e00\u6761\u6d41\uff0c\u603b\u6709\u6d41\u91cf<=\u5bb9\u91cf                \n\u57fa\u672c\u6027\u8d28\u4e8c\uff1a\n\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u4e0d\u662f\u6e90\u70b9\u6216\u6c47\u70b9\u7684\u70b9u\uff0c\u603b\u6709\n\u2211p\u2208Ek[p][u]==\u2211q\u2208Ek[u][q]\uff08\u5176\u4e2dk[i][j]\u8868\u793ai\u5230j\u7684\u6d41\u91cf\uff09   \n\u57fa\u672c\u6027\u8d28\u4e09\uff1a\n\u5bf9\u4e8e\u4efb\u4f55\u4e00\u6761\u6709\u5411\u8fb9(u,v)\uff0c\u603b\u6709\nk[u][v]==\u2212k[v][u]\n\n\n------------\n\n## \u7f51\u7edc\u6d41\u6700\u5927\u6d41\n\n\u7f51\u7edc\u6d41\u7684\u6700\u5927\u6d41\u7b97\u6cd5\u5c31\u662f\u6307\u7684\u4e00\u4e2a\u6d41\u91cf\u7684\u65b9\u6848\u4f7f\u5f97\u7f51\u7edc\u4e2d\u6d41\u91cf\u6700\u5927\u3002\n##  \u7f51\u7edc\u6d41\u6700\u5927\u6d41\u7684\u6c42\u89e3\n### \uff08\u7f51\u7edc\u6d41\u7684\u6240\u6709\u7b97\u6cd5\u90fd\u662f\u57fa\u4e8e\u4e00\u79cd\u589e\u5e7f\u8def\u7684\u601d\u60f3\uff0c\u4e0b\u9762\u9996\u5148\u7b80\u8981\u7684\u8bf4\u4e00\u4e0b\u589e\u5e7f\u8def\u601d\u60f3\uff0c\u5176\u57fa\u672c\u6b65\u9aa4\u5982\u4e0b\uff1a\uff09\n1.\u627e\u5230\u4e00\u6761\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u8def\u5f84\u4e0a\u4efb\u610f\u4e00\u6761\u8fb9\u7684\u6b8b\u91cf>0\uff08\u6ce8\u610f\u662f\u5c0f\u4e8e\u800c\u4e0d\u662f\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u6761\u8fb9\u8fd8\u53ef\u4ee5\u5206\u914d\u6d41\u91cf\uff09\uff0c\u8fd9\u6761\u8def\u5f84\u4fbf\u79f0\u4e3a\u589e\u5e7f\u8def\n2.\u627e\u5230\u8fd9\u6761\u8def\u5f84\u4e0a\u6700\u5c0f\u7684F[u][v]\uff08\u6211\u4eec\u8bbeF[u][v]\u8868\u793au->v\u8fd9\u6761\u8fb9\u4e0a\u7684\u6b8b\u91cf\u5373\u5269\u4f59\u6d41\u91cf\uff09\uff0c\u4e0b\u9762\u8bb0\u4e3aflow  \n3.\u5c06\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u6bcf\u4e00\u6761\u6709\u5411\u8fb9u->v\u7684\u6b8b\u91cf\u51cf\u53bbflow\uff0c\u540c\u65f6\u5bf9\u4e8e\u8d77\u53cd\u5411\u8fb9v->u\u7684\u6b8b\u91cf\u52a0\u4e0aflow\uff08\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u4e0b\u9762\u518d\u8bb2\uff09   \n4.\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u627e\u4e0d\u51fa\u589e\u5e7f\u8def\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u627e\u5230\u4e86\u6700\u5927\u6d41\n\n## \u4e3a\u4ec0\u4e48\u8981\u8fde\u53cd\u5411\u8fb9\uff1f\uff1f\uff1f\n### \u6211\u4eec\u77e5\u9053\uff0c\u5f53\u6211\u4eec\u5728\u5bfb\u627e\u589e\u5e7f\u8def\u7684\u65f6\u5019\uff0c\u5728\u524d\u9762\u627e\u51fa\u7684\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u5982\u679c\u6211\u4eec\u5728\u51cf\u53bb\u6b8b\u91cf\u7f51\u7edc\u4e2d\u6b63\u5411\u8fb9\u7684\u540c\u65f6\u5c06\u76f8\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9\u52a0\u4e0a\u5bf9\u5e94\u7684\u503c\uff0c\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u53ef\u4ee5\u53cd\u6094\u4ece\u8fd9\u6761\u8fb9\u6d41\u8fc7\u3002\n\n\n\n------------\n\n#### \u56de\u5230\u8fd9\u9053\u9898\n##### \u8fd9\u9898\u4e3b\u8981\u662f\u5efa\u6a21...\n\u628a\u6bcf\u4e00\u4e2a\u6709\u9ad8\u5ea6\u7684\u77f3\u67f1\u90fd\u5206\u6210\u4e24\u4e2a\u70b9\uff1a\u5165\u53e3\u548c\u51fa\u53e3\u3002  \n\u4e00\u5171\u6709\u56db\u79cd\u5efa\u8fb9\u65b9\u5f0f\u2014\u2014  \n1.\u521d\u59cb\u5316\u4e00\u4e2a\u6e90\u70b9S\uff0c\u5b83\u8fde\u7740\u8725\u8734\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u8725\u8734\uff0cso\u5bb9\u91cf\u4e3a1\u3002  \n2.\u81ea\u5df1\u7684\u5165\u53e3\u8fde\u4e0a\u81ea\u5df1\u7684\u51fa\u53e3\uff0c\u5bb9\u91cf\u4e3a\u77f3\u67f1\u9ad8\u5ea6\uff0c\u8868\u793a\u80fd\u8df3\u8d70\u7684\u4e2a\u6570\u3002  \n3.\u5176\u4ed6\u7684\u77f3\u67f1\u5728\u8df3\u8dc3\u8303\u56f4\u5185\uff0c\u90fd\u80fd\u8df3\u4e0a\u8fd9\u4e2a\u77f3\u67f1\uff0c\u6240\u4ee5\u5176\u4ed6\u77f3\u67f1\u51fa\u53e3\u5c31\u548c\u8fd9\u4e2a\u77f3\u67f1\u5165\u53e3\u5efa\u8fb9\uff0c\u5bb9\u91cf\u4e3ainf\u3002   \n4.\u6700\u540e\u80fd\u5230\u6c47\u70b9T\u7684\u77f3\u67f1\uff0c\u5bb9\u91cf\u4e3ainf\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#define inf 0x7fffffff\n#define K 100001\nusing namespace std;\nint N,M,D,T,ans,sum,pi=1,a,b,ci,ti,NN,clock;\nchar o;\nint c[51][51],cur[K],head[K],dis[K],l[K],r[K],p[51][51];\nstruct ss{int to,c=0,ls;}q[K];\nstruct xy{int l,r;};\nvector<xy>xiyi;\nvoid add(int a,int b,int c)\n{\n    q[++pi].to=b;\n    q[pi].c=c;\n    q[pi].ls=head[a];\n    head[a]=pi;\n    q[++pi].to=a;\n    q[pi].ls=head[b];\n    head[b]=pi;\n}\nvoid read()\n{\n    scanf(\"%d%d%d\",&N,&M,&D);\n    T = N*M*2+1;\n    for(int i=1;i<=N;i++)\n     for(int j=1;j<=M;j++)\n     {\n     \tp[i][j]=++ti;\n     \tcin>>o;\n     \tc[i][j]=o-48;\n     \tif(c[i][j])\n        {\n         \tl[++ci]=i;\n         \tr[ci]=j;\n        }\n     }\n    NN=N*M;\n    for(int i=1;i<=N;i++)\n     for(int j=1;j<=M;j++)\n     {\n     \tcin>>o;\n     \tif(o=='L')\n        {\n            sum++;\n            xiyi.push_back((xy){i,j});\n        }\n     }\n}\nbool bfs()\n{\n    memset(dis,0,sizeof(dis));\n    queue<int >que;\n    que.push(0);\n    dis[0]=1;\n    while(!que.empty())\n    {\n        int u=que.front();que.pop();\n        for(int i=head[u];i;i=q[i].ls)\n        {\n            int v=q[i].to;         \n            if(!dis[v]&&q[i].c)\n            {\n                dis[v]=dis[u]+1;\n                if(v==T)return 1;\n                que.push(v);\n            }\n        }\n    }\n    return dis[T];\n}\nint dfs(int u,int flow)\n{\n    if(u==T||!flow)return flow;\n    int fl=0,f;\n    for(int &i=cur[u];i;i=q[i].ls)\n    //\u5f53\u524d\u5f27\u4f18\u5316:\u5373\u6bcf\u4e00\u6b21dfs\u589e\u5e7f\u65f6\u4e0d\u4ece\u7b2c\u4e00\u6761\u8fb9\u5f00\u59cb\uff0c\u800c\u662f\u7528\u4e00\u4e2a\u6570\u7ec4cur\u8bb0\u5f55\u70b9u\u4e4b\u524d\u5faa\u73af\u5230\u4e86\u54ea\u4e00\u6761\u8fb9\uff0c\u4ee5\u6b64\u6765\u52a0\u901f\n    {\n        int v=q[i].to,c=q[i].c;\n        if(dis[v]==dis[u]+1&&c&&(f=dfs(v,min(flow,c))))\n        {\n            q[i].c-=f;\n            q[i^1].c+=f;\n            fl+=f;\n            flow-=f;\n            if(!flow)break;//\u6ca1\u6709\u5269\u4f59\u6d41\u91cf\u4e86\uff0c\u76f4\u63a5\u505c\u6b62\n        }\n    }\n    return fl;\n}\nint jl(int x,int y,int a,int b)\n{\n    return (x-a)*(x-a)+(y-b)*(y-b);\n}\nvoid ad()\n{\n    for(int i=1;i<=ci;i++)\n    {\n        add(p[l[i]][r[i]],p[l[i]][r[i]]+NN,c[l[i]][r[i]]);\n        //\u77f3\u67f1\u7684\u5165\u53e3\u5230\u51fa\u53e3\n        if(l[i]<=D||r[i]<=D||l[i]+D>N||r[i]+D>M)\n         add(p[l[i]][r[i]]+NN,T,inf);\t\t//\u77f3\u67f1\u5230\u6c47\u70b9 \n    }\n    for(int i=1;i<=ci;i++)\n     for(int j=1;j<=ci;j++)\n      if(D*D>=jl(l[i],r[i],l[j],r[j])&&i!=j)\n       add(p[l[i]][r[i]]+NN,p[l[j]][r[j]],inf); //\u77f3\u67f1\u5230\u77f3\u67f1\n       \n    for(int i=0;i<xiyi.size();i++)\n     add(0,p[xiyi[i].l][xiyi[i].r],1);\t //\u6e90\u70b9\u5230\u8725\u8734\n}\nint dinic()\n{\n    while(bfs())//\u5206\u5c42\n    {\n        for(int i=0;i<=T;i++)cur[i]=head[i];//\u5f53\u524d\u5f27\u4f18\u5316\u7684\u521d\u59cb\u5316\n        ans+=dfs(0,inf);//\u7d2f\u52a0\u589e\u5e7f\u91cf\n    }\n    return ans;\n}\nint main()\n{\n    read();\n    ad();\n    printf(\"%d\\n\",sum-dinic());//\u6700\u5c0f\u503c\n    return 0;//OK.\n}\n```\n### [\u5b66\u4e60\u4e00\u4e0b...](https://www.cnblogs.com/SYCstudio/p/7260613.html)",
        "postTime": 1524728718,
        "uid": 57146,
        "name": "ifyml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u9053\u7d2b\u9898\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\n\n\u5bf9\u4e8e\u6bcf\u6839\u77f3\u67f1\uff0c\u91c7\u53d6\u4e00\u5206\u4e3a\u4e8c\u7684\u60f3\u6cd5\uff0c\u5373\u628a\u4e00\u4e2a\u70b9\u5206\u4e3a\u4e24\u4e2a\u70b9\uff08\u53ef\u62bd\u8c61\u4e3a\u77f3\u67f1\u5e95\u90e8\u5230\u9876\u90e8\uff0c\u81ea\u5df1\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\u5427\uff09\uff0c\u5176\u8fde\u7ebf\u5bb9\u91cf\u9650\u5236\u4e3a\u77f3\u67f1\u9ad8\u5ea6(\u4ece\u5e95\u5411\u9876\u8fde)\u3002\n\n\u9996\u5148\uff0c\u8d85\u7ea7\u6e90\u70b9\u5411\u6bcf\u4e2a\u8725\u8734\u6240\u5728\u77f3\u67f1\u7684\u5e95\u90e8\u8fde\u4e00\u6761\u4e3a1\u7684\u8fb9\n\n\u7136\u540e\uff0c\u627e\u5230\u80fd\u8df3\u51fa\u53bb\u7684\u77f3\u67f1\uff0c\u9876\u7aef\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u4e00\u6761\u4e3ainf\u7684\u8fb9\n\n\u524d\u4e24\u6b65\u5f88\u5bb9\u6613\uff0c\u4e0b\u4e00\u6b65\u6709\u70b9\u96be\u7406\u89e3\uff0c\u81ea\u5df1\u753b\u56fe\u7406\u89e3\u4e00\u4e0b\uff0c~~\u6211\u61d2\u5f97\u4e0a\u4f20\u56fe\u7247\u4e86~~\n\n\u5bf9\u4e8e\u5730\u56fe\u5185\u4efb\u610f\u4e24\u4e2a\u77f3\u67f1\uff0c\u5982\u679c\u95f4\u8ddd\u5c0f\u4e8ed\uff0c\u5c31\u5c06\u5176\u4e2d\u4e00\u6839\u77f3\u67f1\u7684\u9876\u90e8\u4e0e\u53e6\u4e00\u6839\u77f3\u67f1\u7684\u5e95\u90e8\u76f8\u8fde\uff0c\u5176\u8fde\u7ebf\u5bb9\u91cf\u4e3ainf\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int inf=1e9;\nint i,j,n,m,s,t,ans,dis,tot,d[10005];\nstruct node{\n\tint next,to,w;\n}a[500000];\nint cnt=1,head[10005],cur[10005];\nint k,x[10000],y[10000],hi[1000][1000],zn[1000][1000];\nchar s1[201][201],s2[201][201];\nqueue <int> q;\nvoid add(int x,int y,int dis)\n{\n\ta[++cnt].next=head[x];\n\ta[cnt].to=y;\n\ta[cnt].w=dis;\n\thead[x]=cnt;\n}\nbool bfs(int s,int t)\n{\n\tmemset(d,0x7f,sizeof(d));\n\twhile(!q.empty()) q.pop();\n\tfor(int i=0;i<=2*k+1;i++) cur[i]=head[i];\n\td[s]=0;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=a[i].next)\n\t\t{\n\t\t\tint v=a[i].to;\n\t\t\tif(d[v]>inf&&a[i].w) \n\t\t\t{\n\t\t\t\td[v]=d[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tif(d[t]<inf) return true;\n\telse return false;\n}\nint dfs(int now,int t,int limit)\n{\n\tif(!limit||now==t) return limit;\n\tint flow=0,f;\n\tfor(int i=cur[now];i;i=a[i].next)\n\t{\n\t\tcur[now]=i;\n\t\tint v=a[i].to;\n\t\tif(d[v]==d[now]+1&&a[i].w&&(f=dfs(v,t,min(limit,a[i].w))))\n\t\t{\n\t\t\tflow+=f;\n\t\t\tlimit-=f;\n\t\t\ta[i].w-=f;\n\t\t\ta[i^1].w+=f;\n\t\t\tif(!limit) break;\n\t\t}\n\t}\n\treturn flow;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&dis);\n\tfor(i=1;i<=n;i++)\n\t{\n\t    scanf(\"%s\",s1[i]); \n\t    for(j=0;j<m;j++)\n\t    {\n\t        hi[i][j+1]=s1[i][j]-48;//\u8bb0\u5f55\u9ad8\u5ea6\n\t        if(hi[i][j+1]!=0) \n\t            k++,x[k]=i,y[k]=j+1,zn[i][j+1]=k;//k\u662f\u5f53\u524d\u77f3\u67f1\u7f16\u53f7\uff0czn\u8bb0\u5f55\u7f16\u53f7\uff0cx,y\u8bb0\u5f55\u4f4d\u7f6e\n\t    }\n\t}\n\tfor(i=1;i<=n;i++)\n\t    for(j=1;j<=m;j++)\n\t    if(hi[i][j]!=0)\n\t        {\n\t            if(i<=dis||i+dis>n||j<=dis||j+dis>m)\n\t                add(zn[i][j]+k,2*k+1,inf),add(2*k+1,zn[i][j]+k);//2*k+1\u4e3a\u8d85\u7ea7\u6c47\u70b9\uff0c\u53ef\u4ee5\u8df3\u51fa\u53bb\u5c31\u8fde\u8fb9\n\t        }\n\tfor(i=1;i<=n;i++)\n\t{\n\t    scanf(\"%s\",s2[i]);\n\t    for(j=0;j<m;j++)\n\t    if(s2[i][j]=='L') //\u5982\u679c\u6709\u8725\u8734\uff0c\u5411\u77f3\u67f1\u5e95\u90e8\u8fde\u8fb9\n\t    {\n\t        int v=zn[i][j+1];\n\t        tot++;\n\t        add(0,v,1); \n\t        add(v,0,0);\n\t    }\n\t}\n\tfor(i=1;i<=k;i++)\n\t    add(i,i+k,hi[x[i]][y[i]]),add(i+k,i,0);//\u77f3\u67f1\u5e95\u90e8\u5411\u9876\u90e8\u8fde\u8fb9\n\tfor(i=1;i<=k;i++)\n\t    for(j=1;j<=k;j++)\n\t    {\n\t        if(i==j) continue;\n\t        if((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j])<=dis*dis) \n            //\u4e24\u6839\u77f3\u67f1\u7684\u8ddd\u79bb\u5c0f\u4e8edis\uff0c\u4e00\u6839\u7684\u9876\u90e8\u5411\u53e6\u4e00\u6839\u7684\u5e95\u90e8\u8fde\u8fb9\n\t            add(i+k,j,inf),add(j,i+k,0); \n\t    }\n\ts=0;t=2*k+1;\n\twhile(bfs(s,t)) ans+=dfs(s,t,inf);//\u7f51\u7edc\u6d41\u6a21\u677f\uff0c\u4e0d\u89e3\u91ca\n\tprintf(\"%d\",tot-ans); //\u603b\u8725\u8734\u6570\u51cf\u53bb\u80fd\u8df3\u51fa\u53bb\u7684\n\treturn 0;\n}\n```",
        "postTime": 1531214462,
        "uid": 44438,
        "name": "\u671b\u773c\u6d6e\u4e91",
        "ccfLevel": 0,
        "title": "\u8725\u8734"
    },
    {
        "content": "##\u9898\u610f\uff1a\n\n\u4e00\u4e2a$n\\times{m}$\u7684\u7f51\u683c\u4e2d\uff0c\u6709\u4e00\u4e9b\u683c\u5b50\u6709\u77f3\u67f1\uff0c\u77f3\u67f1\u7684\u9ad8\u5ea6\u4e3a1~3.\n\n\u6709\u4e00\u4e9b\u77f3\u67f1\u7684\u9876\u4e0a\u6709\u8725\u8734\uff0c\u8725\u8734\u6bcf\u6b21\u53ef\u4ee5\u8df3\u5230\u8ddd\u79bb\u4e0d\u8d85\u8fc7$d$\u7684\u77f3\u67f1\u4e0a\uff0c\u6216\u8005\u8df3\u5230\u754c\u5916\u3002\n\n\u8725\u8734\u8df3\u4e00\u6b21\uff0c\u5b83\u6240\u5728\u7684\u77f3\u67f1\u7684\u9ad8\u5ea6\u5c31\u51cf\u4e00\uff0c\u5982\u679c\u67d0\u4e2a\u77f3\u67f1\u7684\u9ad8\u5ea6\u4e3a0\u4e86\uff0c\u77f3\u67f1\u5c31\u6d88\u5931\uff0c\u4ee5\u540e\u8725\u8734\u4e0d\u80fd\u8df3\u5230\u8fd9\u91cc\u3002\n\n\u73b0\u5728\u8981\u4f7f\u5f97\u5269\u4e0b\u65e0\u6cd5\u9003\u8131\u7684\u8725\u8734\u6570\u6700\u5c11\u3002\n\n\n##\u505a\u6cd5\uff1a\n\n~~\u603b\u662f\u81ea\u5df1\u60f3\u4e0d\u5230\u5efa\u56fe\u65b9\u5f0f\u7136\u540e\u770b\u4e86\u9898\u89e3\u987f\u65f6\u604d\u7136\u5927\u609f\u7684\u611f\u89c9= =~~\n\n\u597d\u5427\u8fd9\u9898\u6211\u8fd8\u662f\u60f3\u5230\u4e86\u4e00\u70b9\u7684\u6069\u3002\n\n\n\u9898\u76ee\u5c31\u662f\u8981\u6c42\u9003\u8131\u7684\u8725\u8734\u6570\u6700\u591a\u3002\n\n\u7136\u540e\u5c31\u60f3\u5230\u6700\u5927\u6d41\u4e86~~\uff08\u4ec0\u4e48\u9b3c\uff09~~\n\n\u8003\u8651\u628a\u6bcf\u4e2a\u683c\u5b50\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u8868\u793a\u77f3\u67f1\u9876\u548c\u77f3\u67f1\u4e0b\u7aef\u3002\n\n4\u79cd\u8fb9\uff1a\n\n1.    \u8fd9\u4e2a\u70b9\u6709\u77f3\u67f1\uff0c\u77f3\u67f1\u9876\u8fde\u5411\u77f3\u67f1\u4e0b\u7aef\uff0c\u5bb9\u91cf\u4e3a\u77f3\u67f1\u9ad8\n\n2.    \u8fd9\u4e2a\u70b9\u6709\u8725\u8734\uff0c\u6e90\u70b9\u8fde\u5411\u77f3\u67f1\u7684\u4e0a\u7aef\uff0c\u5bb9\u91cf\u4e3a1\n\n3.    \u8fd9\u4e2a\u70b9\u53ef\u4ee5\u8df3\u51fa\u53bb\uff0c\u77f3\u67f1\u7684\u5e95\u8fde\u5411\u6c47\u70b9\uff0c\u5bb9\u91cfinf\n\n4.    \u4e24\u4e2a\u70b9\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8ed\uff0c\u53ef\u4ee5\u8df3\u5230\uff0c\u8fde\u8fb9\uff0c\u5bb9\u91cfinf\n\n\n\u633a\u597d\u7406\u89e3\u7684qaq\n\n\n\u7136\u540e\u8dd1\u8dd1dinic\u4f60\u5c31a\u4e86orz\u3002\n\n\n##\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<cstdlib>\n#include<cctype>\n#include<cmath>\n#include<queue>\nusing namespace std;\n\nconst int N = 805, M = 400010;\nconst int inf = 1e9;\nint n, m, d, cnt, all, s, t;\nchar str[30];\nint head[N], vis[N];\nstruct edge{\n    int to, nxt, c;\n    edge() {}\n    edge(int x, int y, int z) { to = x, nxt = y, c = z; }\n}e[M];\n\ninline int id1(int x, int y) { return (x-1)*m+y; }\ninline int id2(int x, int y) { return (x-1)*m+y+n*m; }\ninline int dis(int x1, int y1, int x2, int y2) { return (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2); }\ninline void addedge(int x, int y, int z) {\n    e[cnt] = edge(y, head[x], z); head[x] = cnt ++;\n    e[cnt] = edge(x, head[y], 0); head[y] = cnt ++;\n}\ninline bool bfs()\n{\n    queue<int> q; q.push(s); memset(vis, -1, sizeof vis); vis[s] = 1;\n    while(!q.empty()) {\n        int u = q.front(); q.pop();\n        for(int i = head[u]; i != -1; i = e[i].nxt) {\n            int v = e[i].to;\n            if(e[i].c && vis[v] == -1) {\n                vis[v] = vis[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return vis[t] != -1;\n}\ninline int dfs(int u, int flow)\n{\n    if(u == t) return flow;\n    int used = 0, w;\n    for(int i = head[u]; i != -1; i = e[i].nxt) {\n        int v = e[i].to;\n        if(vis[v] == vis[u]+1 && e[i].c) {\n            w = dfs(v, min(flow-used, e[i].c));\n            e[i].c -= w; e[i^1].c += w; used += w;\n            if(used == flow) return used;\n        }\n    }\n    if(!used) vis[u] = -1;\n    return used;\n}\ninline int dinic()\n{\n    int ret = 0;\n    while(bfs()) ret += dfs(s, inf);\n    return ret;\n}\nint main() {\n    scanf(\"%d%d%d\", &n, &m, &d); memset(head, -1, sizeof head);\n    s = 0, t = n*m*2+1;//\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u8868\u793a\u4ece\u77f3\u67f1\u9876\u8fde\u5411\u77f3\u67f1\u4e0b\u7aef\n    for(int i = 1; i <= n; i ++) {\n        scanf(\"%s\", str+1);\n        for(int j = 1; j <= m; j ++) if(str[j]-'0' > 0) addedge(id1(i, j), id2(i, j), str[j]-'0');\n    }//\u8fd9\u4e2a\u70b9\u6709\u77f3\u67f1\uff0c\u77f3\u67f1\u9876\u8fde\u5411\u77f3\u67f1\u4e0b\u7aef\uff0c\u5bb9\u91cf\u4e3a\u77f3\u67f1\u9ad8 \n    for(int i = 1; i <= n; i ++) {\n        scanf(\"%s\", str+1);\n        for(int j = 1; j <= m; j ++) if(str[j] == 'L') addedge(s, id1(i, j), 1), all ++;\n    }//\u8fd9\u4e2a\u70b9\u6709\u8725\u8734\uff0c\u6e90\u70b9\u8fde\u5411\u77f3\u67f1\u7684\u4e0a\u7aef \n    for(int i = 1; i <= n; i ++)\n        for(int j = 1; j <= m; j ++)\n            if(i-d < 1 || i+d > n || j-d < 1 || j+d > m) addedge(id2(i, j), t, inf);//\u53ef\u4ee5\u8df3\u51fa\u53bb\uff0c\u77f3\u67f1\u7684\u5e95\u8fde\u5411\u6c47\u70b9 \n    for(int x1 = 1; x1 <= n; x1 ++)//\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8ed\uff0c\u53ef\u4ee5\u8df3\u5230\u7684\u4e24\u4e2a\u70b9\u8fde\u8fb9\n        for(int y1 = 1; y1 <= m; y1 ++)\n            for(int x2 = 1; x2 <= n; x2 ++)\n                for(int y2 = 1; y2 <= m; y2 ++) if(dis(x1, y1, x2, y2) <= d*d) addedge(id2(x1, y1), id1(x2, y2), inf);\n    printf(\"%d\\n\", all - dinic());\n    return 0;\n}\n```",
        "postTime": 1516186481,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u8282\u70b9\u201c\u81f3\u591a\u53ea\u80fd\u8d70$a[i][j]$\u6b21\u201d\u7684\u9650\u5236\u6761\u4ef6\uff0c\u518d\u770b\u770b\u6570\u636e\u8303\u56f4\uff0c\u5c31\u77e5\u9053\u662f\u7528\u7f51\u7edc\u6d41\u4e86\u3002\n\n\u8981\u6c42\u8282\u70b9\u201c\u6d41\u91cf\u201d\u9650\u5236\uff0c\u663e\u7136\u5c31\u662f\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u7528\u8fb9\u6743\u6765\u9650\u5236\u6d41\u91cf\uff0c\u8fd9\u4e2a\u6280\u5de7\u5728\u5f88\u591a\u7f51\u7edc\u6d41\u7684\u6a21\u677f\u91cc\u9762\u90fd\u6709\u3002\n\n\u8bbe$X_{i,j},Y_{i,j}$\u5206\u522b\u662f\u683c\u5b50$(i,j)$\u7684\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u5219\u5efa\u56fe\u5982\u4e0b\uff1a\n\n1. \u5982\u679c\u8fd9\u4e2a\u77f3\u67f1\u4e0a\u9762\u6709\u8725\u8734\uff0c\u5219$S->X_{i,j},1$\n\n2. \u5982\u679c\u8fd9\u91cc\u6709\u77f3\u67f1\uff0c\u90a3\u4e48$X_{i,j}->Y_{i,j},a[i][j]$\n\n3. \u5982\u679c\u8fd9\u91cc\u6709\u77f3\u67f1\uff0c\u800c\u4e14\u53ef\u4ee5\u5230\u8fbe\u8fb9\u754c\uff0c\u90a3\u4e48$Y_{i,j}->T,\\infty$\n\n4. \u5bf9\u4e8e\u53ef\u4ee5\u5230\u8fbe\u7684\u77f3\u67f1$(x,y)$\uff0c$Y_{i,j}->X_{x,y},\\infty$\n\n\u7136\u540e\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u6d41\u91cf\u5c31\u662f\u53ef\u4ee5\u9003\u79bb\u7684\u8725\u8734\u7684\u4e2a\u6570\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define Rint register int\nusing namespace std;\nconst int N = 803, M = 100000, INF = 0x3f3f3f3f;\nint n, m, s, t, d, maxflow, a[22][22];\nchar str[22];\nint head[N], to[M], nxt[M], cap[M];\ninline void add(int a, int b, int c){\n    static int cnt = -1;\n    to[++ cnt] = b; nxt[cnt] = head[a]; head[a] = cnt; cap[cnt] = c;\n    to[++ cnt] = a; nxt[cnt] = head[b]; head[b] = cnt; cap[cnt] = 0;\n}\ninline int get(int i, int j){return (i - 1) * m + j;}\nint cur[N], dep[N], q[N], front, rear;\ninline bool bfs(){\n    memcpy(cur, head, sizeof cur);\n    memset(dep, -1, sizeof dep);\n    front = rear = 0;\n    q[rear ++] = s;\n    dep[s] = 0;\n    while(front < rear){\n        int now = q[front ++];\n        for(Rint i = head[now];~i;i = nxt[i])\n            if(cap[i] && dep[to[i]] == -1){\n                dep[to[i]] = dep[now] + 1;\n                q[rear ++] = to[i];\n            }\n    }\n    return ~dep[t];\n}\ninline int dinic(int now, int limit){\n    if(now == t || !limit) return limit;\n    int flow = 0, f;\n    for(Rint i = cur[now];~i;i = nxt[i]){\n        cur[now] = i;\n        if(dep[to[i]] == dep[now] + 1 && (f = dinic(to[i], min(limit, cap[i])))){\n            flow += f;\n            limit -= f;\n            cap[i] -= f;\n            cap[i ^ 1] += f;\n            if(!limit) break;\n        }\n    }\n    return flow;\n}\nint main(){\n    scanf(\"%d%d%d\", &n, &m, &d);\n    memset(head, -1, sizeof head);\n    s = n * m * 2 + 1; t = s + 1;\n    for(Rint i = 1;i <= n;i ++){\n        scanf(\"%s\", str + 1);\n        for(Rint j = 1;j <= m;j ++){\n            a[i][j] = str[j] - '0';\n            if(a[i][j]){\n                add(get(i, j), get(i, j) + n * m, a[i][j]);\n                if(i <= d || i >= n - d + 1 || j <= d || j >= m - d + 1)\n                    add(get(i, j) + n * m, t, INF);\n            }\n        }\n    }\n    for(Rint i = 1;i <= n;i ++){\n        scanf(\"%s\", str + 1);\n        for(Rint j = 1;j <= m;j ++)\n            if(str[j] == 'L'){\n                maxflow ++;\n                add(s, get(i, j), 1);\n            }\n    }\n    for(Rint dx = -d;dx <= d;dx ++)\n        for(Rint dy = -d;dy <= d;dy ++){\n            if(dx * dx + dy * dy > d * d) continue;\n            for(Rint i = 1;i <= n;i ++)\n                for(Rint j = 1;j <= m;j ++){\n                    int x = i + dx, y = j + dy;\n                    if(x >= 1 && x <= n && y >= 1 && y <= m && a[x][y])\n                        add(get(i, j) + n * m, get(x, y), INF);\n                }\n        }\n    while(bfs()) maxflow -= dinic(s, INF);\n    printf(\"%d\", maxflow);\n}\n```",
        "postTime": 1544843369,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u521a\u5b66\u4e60\u7f51\u7edc\u6d41\n\u4e00\u4e0a\u5348\u719f\u6089$Dinic$\u677f\u5b50+\u5c31\u8c03\u8fc7\u4e86\u8fd9\u4e00\u4e2a\u9898  \n[\u63a8\u9500Blogs](https://www.cnblogs.com/rui-4825/p/13963194.html)\n\n\n## Solution\n\u770b\u4e0a\u53bb\u5c31\u662f\u6bcf\u4e2a\u70b9\u6709\u9650\u5236\u80fd\u8df3\u8fc7\u51e0\u53ea\u8725\u8734  \n\u5c31\u76f8\u5f53\u4e8e\u8fb9\u6743\u4e2d\u7684\u6d41\u91cf\u4e0a\u9650  \n\u8003\u8651\u5982\u4f55\u5efa\u56fe  \n\u7531\u4e8e\u5bf9\u4e8e\u5355\u4e2a\u70b9\u65e0\u6cd5\u589e\u52a0\u8fb9\u6743  \n\u9009\u62e9\u62c6\u70b9\u6210\u8fb9  \n\u62c6\u51fa\u7684\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u5c31\u662f\u6d41\u91cf\u7684\u9650\u5236  \n\u9996\u5148\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9$s=0$  \n\u56e0\u4e3a\u56fe\u4e2d\u6709$n*m$\u4e2a\u70b9  \n\u62c6\u5b8c\u4e4b\u540e$2*n*m$\u4e2a\u70b9  \n\u6240\u4ee5\u8d85\u7ea7\u6c47\u70b9\u662f$t=2*n*m+1$  \n\u56fe\u4e2d\u5efa\u8fb9\u6709\u56db\u79cd  \n* \u7531\u6e90\u70b9$s$\u51fa\u53d1\uff0c\u5411\u6240\u6709\u8725\u8734\u6240\u5728\u7684\u70b9\u5efa\u7acb\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\n* \u6240\u6709\u6709\u9ad8\u5ea6\uff08\u5c31\u662f\u8725\u8734\u53ef\u4ee5\u8df3\u8dc3\u7684\u70b9\uff09\u62c6\u70b9\uff0c\u5411$(i,j)$\u5bf9\u5e94\u7684\u70b9$(i,j) + n*m$\u5efa\u8fb9\uff0c\u8fb9\u6743\u4e3a\u5f53\u524d\u70b9\u7684\u9ad8\u5ea6\uff0c\u5373\u6d41\u91cf\u9650\u5236\n* \u7531\u6240\u6709\u4e00\u6b21\u80fd\u591f\u8df3\u51fa\u77e9\u9635\u7684\u70b9\u5411\u8d85\u7ea7\u6c47\u70b9$t$\u5efa\u8fb9\uff0c\u8fb9\u6743\u65e0\u9650\u5236\uff0c\u4e3a$inf$\n* \u77e9\u9635\u5185\u90e8\u4e92\u76f8\u80fd\u591f\u5230\u8fbe\u7684\u70b9\uff0c\u8fb9\u6743\u65e0\u9650\u5236\uff0c\u4e3a$inf$\n\n\u6700\u540e\u76f4\u63a5\u8dd1$Dinic$\u5c31\u884c\u4e86\n\u6ce8\u610f$Dinic$\u8dd1\u51fa\u6765\u7684\u662f\u80fd\u591f\u9003\u79bb\u7684\u8725\u8734\u7684\u6570\u91cf\n\u8981\u7528\u603b\u6570\u91cf\u51cf\u4e00\u4e0b\n\u62c6\u51fa\u6765\u7684\u70b9\uff0c\u4e00\u4e2a\u662f\u539f\u70b9\uff0c\u4e00\u4e2a\u662f\u65b0\u70b9\n\u539f\u70b9\u8d1f\u8d23\u6240\u6709\u5411\u5916\u5efa\u8fb9\n\u65b0\u70b9\u8d1f\u8d23\u5176\u4ed6\u70b9\u5411\u81ea\u5df1\u5efa\u8fb9\n\u8fd9\u4e2a\u5efa\u56fe\u7684\u65f6\u5019\u8981\u6ce8\u610f\u4e00\u4e0b\n\u4e0a\u5348\u8c03\u4e86\u597d\u4e45\uff5e\n\n## Code\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <cmath>\n#define min(a, b) ({register int AA = a, BB = b; AA < BB ? AA : BB;})\n#define inf 10000009\nusing namespace std;\n\ninline int read(){\n\tint x = 0, w = 1;\n\tchar ch = getchar();\n\tfor(; ch > '9' || ch < '0'; ch = getchar()) if(ch == '-') w = -1;\n\tfor(; ch >= '0' && ch <= '9'; ch = getchar()) x = x * 10 + ch - '0';\n\treturn x * w;\n}\n\nconst int ss = 10010;\n\nstruct node{\n\tint to, nxt, w;\n}edge[ss * 20];\n\nint head[ss], tot = 1;\ninline void add(register int u, register int v, register int w){\n\tedge[++tot].to = v;\n\tedge[tot].nxt = head[u];\n\tedge[tot].w = w;\n\thead[u] = tot;\n}\n\nint dis[ss], cur[ss];\nint r, c, d, s, t;\nbool vis[ss];\nqueue<int> q;\ninline bool spfa(register int s){\n\tfor(register int i = 0; i <= t; i++)\n\t\tvis[i] = 0, dis[i] = 0x3f3f3f3f, cur[i] = head[i];\n\tdis[s] = 0;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tregister int u = q.front();\n\t\tq.pop();\n\t\tvis[u] = 0;\n\t\tfor(register int i = head[u]; i; i = edge[i].nxt){\n\t\t\tregister int v = edge[i].to;\n\t\t\tif(dis[v] > dis[u] + 1 && edge[i].w){\n\t\t\t\tdis[v] = dis[u] + 1;\n\t\t\t\tif(!vis[v]) q.push(v), vis[v] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t] != 0x3f3f3f3f;\n}\n\ninline int dfs(register int u, register int flow){\n\tregister int res = 0;\n\tif(u == t) return flow;\n\tfor(register int i = cur[u]; i; i = edge[i].nxt){\n\t\tcur[u] = i;\n\t\tregister int v = edge[i].to;\n\t\tif(dis[v] == dis[u] + 1 && edge[i].w){\n\t\t\tif(res = dfs(v, min(flow, edge[i].w))){\n\t\t\t\tedge[i].w -= res;\n\t\t\t\tedge[i ^ 1].w += res;\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nlong long ans, cnt;\ninline long long dinic(){\n\tregister long long minflow = 0;\n\twhile(spfa(s)){\n\t\twhile(minflow = dfs(s, 0x7fffffff))\n\t\t\tans += minflow;\n\t}\n\treturn ans;\n}\n\ninline double getdis(register int a, register int b, register int c, register int d){\n\treturn sqrt((a - c) * (a - c) + (b - d) * (b - d));\n}\n\ninline int change(register int i, register int j){\n\treturn (i - 1) * c + j;\n}\n\nint a[25][25], flag[25][25];\nchar ch[25];\nsigned main(){\n\tr = read(), c = read(), d = read();\n\tfor(register int i = 1; i <= r; i++){\n\t\tscanf(\"%s\", ch + 1);\n\t\tfor(register int j = 1; j <= c; j++)\n\t\t\ta[i][j] = ch[j] - '0';\n\t}\n\tfor(register int i = 1; i <= r; i++){\n\t\tscanf(\"%s\", ch + 1);\n\t\tfor(register int j = 1; j <= c; j++)\n\t\t\tif(ch[j] == 'L') flag[i][j] = 1;\n\t}\n\t\n\ts = 0, t = 2 * c * r + 1;\n\tfor(register int i = 1; i <= r; i++)\n\t\tfor(register int j = 1; j <= c; j++)\n\t\t\tif(flag[i][j] == 1){\n\t\t\t\tcnt++;\n\t\t\t\tadd(s, change(i, j), 1);\n\t\t\t\tadd(change(i, j), s, 0);\n\t\t\t}\n\tfor(register int i = 1; i <= r; i++)\n\t\tfor(register int j = 1; j <= c; j++)\n\t\t\tif(a[i][j]){\n\t\t\t\tadd(change(i, j), change(i, j) + r * c, a[i][j]);\n\t\t\t\tadd(change(i, j) + r * c, change(i, j), 0);\n\t\t\t}\n\tfor(register int i = 1; i <= r; i++)\n\t\tfor(register int j = 1; j <= c; j++){\n\t\t\tif(i > d && i <= r - d && j > d && j <= c - d) continue;\n\t\t\tif(a[i][j]){\n\t\t\t\tadd(change(i, j) + r * c, t, inf);\n\t\t\t\tadd(t, change(i, j) + r * c, 0);\n\t\t\t}\n\t\t}\n\tfor(register int i = 1; i <= r; i++){\n\t\tfor(register int j = 1; j <= c; j++){\n\t\t\tfor(register int p = 1; p <= r; p++){\n\t\t\t\tfor(register int q = 1; q <= c; q++){\n\t\t\t\t\tif(i == p && j == q) continue;\n\t\t\t\t\tif(getdis(i, j, p, q) <= (double)d && a[i][j] && a[p][q]){\n\t\t\t\t\t\tadd(change(i, j) + r * c, change(p, q), inf);\n\t\t\t\t\t\tadd(change(p, q), change(i, j) + r * c, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", cnt - dinic());\n\treturn 0;\n}\n```",
        "postTime": 1605153912,
        "uid": 154412,
        "name": "Gary818",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "## P2472 [SCOI2007]\u8725\u8734\n\n\u9898\u76ee\u80cc\u666f\n07\u56db\u5ddd\u7701\u9009\n\n\u9898\u76ee\u63cf\u8ff0\n\u5728\u4e00\u4e2ar\u884cc\u5217\u7684\u7f51\u683c\u5730\u56fe\u4e2d\u6709\u4e00\u4e9b\u9ad8\u5ea6\u4e0d\u540c\u7684\u77f3\u67f1\uff0c\u4e00\u4e9b\u77f3\u67f1\u4e0a\u7ad9\u7740\u4e00\u4e9b\u8725\u8734\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u8ba9\u5c3d\u91cf\u591a\u7684\u8725\u8734\u9003\u5230\u8fb9\u754c\u5916\u3002\n\n\u6bcf\u884c\u6bcf\u5217\u4e2d\u76f8\u90bb\u77f3\u67f1\u7684\u8ddd\u79bb\u4e3a1\uff0c\u8725\u8734\u7684\u8df3\u8dc3\u8ddd\u79bb\u662fd\uff0c\u5373\u8725\u8734\u53ef\u4ee5\u8df3\u5230\u5e73\u9762\u8ddd\u79bb\u4e0d\u8d85\u8fc7d\u7684\u4efb\u4f55\u4e00\u4e2a\u77f3\u67f1\u4e0a\u3002\u77f3\u67f1\u90fd\u4e0d\u7a33\u5b9a\uff0c\u6bcf\u6b21\u5f53\u8725\u8734\u8df3\u8dc3\u65f6\uff0c\u6240\u79bb\u5f00\u7684\u77f3\u67f1\u9ad8\u5ea6\u51cf1\uff08\u5982\u679c\u4ecd\u7136\u843d\u5728\u5730\u56fe\u5185\u90e8\uff0c\u5219\u5230\u8fbe\u7684\u77f3\u67f1\u9ad8\u5ea6\u4e0d\u53d8\uff09\uff0c\u5982\u679c\u8be5\u77f3\u67f1\u539f\u6765\u9ad8\u5ea6\u4e3a1\uff0c\u5219\u8725\u8734\u79bb\u5f00\u540e\u6d88\u5931\u3002\u4ee5\u540e\u5176\u4ed6\u8725\u8734\u4e0d\u80fd\u843d\u811a\u3002\u4efb\u4f55\u65f6\u523b\u4e0d\u80fd\u6709\u4e24\u53ea\u8725\u8734\u5728\u540c\u4e00\u4e2a\u77f3\u67f1\u4e0a\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u8f93\u5165\u7b2c\u4e00\u884c\u4e3a\u4e09\u4e2a\u6574\u6570r\uff0cc\uff0cd\uff0c\u5373\u5730\u56fe\u7684\u89c4\u6a21\u4e0e\u6700\u5927\u8df3\u8dc3\u8ddd\u79bb\u3002\u4ee5\u4e0br\u884c\u4e3a\u77f3\u7af9\u7684\u521d\u59cb\u72b6\u6001\uff0c0\u8868\u793a\u6ca1\u6709\u77f3\u67f1\uff0c1~3\u8868\u793a\u77f3\u67f1\u7684\u521d\u59cb\u9ad8\u5ea6\u3002\u4ee5\u4e0br\u884c\u4e3a\u8725\u8734\u4f4d\u7f6e\uff0c\u201cL\u201d\u8868\u793a\u8725\u8734\uff0c\u201c.\u201d\u8868\u793a\u6ca1\u6709\u8725\u8734\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u8f93\u51fa\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u5373\u65e0\u6cd5\u9003\u79bb\u7684\u8725\u8734\u603b\u6570\u7684\u6700\u5c0f\u503c\u3002\n\n---\n\u89e3\u51b3\u8fd9\u9898\u7684\u5173\u952e\u662f\u7406\u89e3\u8fd9\u53e5\u8bdd\uff1a**\u77f3\u67f1\u90fd\u4e0d\u7a33\u5b9a\uff0c\u6bcf\u6b21\u5f53\u8725\u8734\u8df3\u8dc3\u65f6\uff0c\u6240\u79bb\u5f00\u7684\u77f3\u67f1\u9ad8\u5ea6\u51cf1\uff08\u5982\u679c\u4ecd\u7136\u843d\u5728\u5730\u56fe\u5185\u90e8\uff0c\u5219\u5230\u8fbe\u7684\u77f3\u67f1\u9ad8\u5ea6\u4e0d\u53d8\uff09\uff0c\u5982\u679c\u8be5\u77f3\u67f1\u539f\u6765\u9ad8\u5ea6\u4e3a1\uff0c\u5219\u8725\u8734\u79bb\u5f00\u540e\u6d88\u5931**\n\n\u6211\u4eec\u628a\u8fd9\u53e5\u8bdd\u8f6c\u6362\u4e00\u4e0b\uff0c**\u6bcf\u4e2a\u77f3\u67f1 $i$ \u53ef\u4ee5\u7528\u77f3\u67f1\u9ad8\u5ea6 $hi$ \u6b21**\u3002\u8fd9\u662f\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\uff1a\u4f7f\u7528\u6b21\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u4e86\u6700\u5927\u6d41\u3002\n\n\u4e0d\u80fd\u9003\u8131\u7684\u8725\u8734\u6570\u5373\u4e3a\u603b\u8725\u8734\u6570 - \u9003\u8131\u7684\u8725\u8734\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u601d\u8003\u600e\u4e48\u5efa\u56fe\n\n# \u5efa\u6a21\n\n\u6700\u5927\u6d41\u7684\u6838\u5fc3\u5728\u4e8e**\u9650\u5236**\n\n\u7531\u9650\u5236\u6761\u4ef6\uff0c~~\u5bf9\u7f51\u7edc\u6d41\u6a21\u578b\u6781\u5176\u654f\u611f~~\u6211\u4eec\u53ef\u77e5\u9053\uff1a\u77f3\u67f1\u4e00\u5b9a\u662f\u8981\u62c6\u6210\u4e24\u4e2a\u70b9\u7684\uff0c\u4e24\u70b9\u4e4b\u95f4\u8fb9\u5bb9\u91cf\u4e3a\u77f3\u67f1\u9ad8\u5ea6 $h$ \uff0c\u8fd9\u6837\u53ef\u4ee5\u9650\u5236\u4e00\u4e2a\u77f3\u67f1\u53ea\u80fd\u8df3 $h$ \u6b21\n\n\u7531\u6700\u5927\u6d41\u7b54\u6848\u4e0d\u53ef\u80fd\u5927\u4e8e\u8725\u8734\u603b\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230\u7531\u6c47\u70b9\u5411\u8725\u8734\u6240\u5728\u7684\u77f3\u67f1\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a 1 \n\n\u7531\u77f3\u67f1\u4e4b\u95f4\u5728\u89c4\u5b9a\u8ddd\u79bb\u5185\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff0c~~\u50bb\u5b50\u90fd\u4f1a~~\u6211\u4eec\u53ef\u4ee5\u5728\u8ddd\u79bb\u5185\u7684\u77f3\u67f1\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3aINF\u7684\u8fb9\n\n\u7531\u8981\u8df3\u51fa\u53bb\u53ef\u5f97\uff1a\u5728\u8df3\u5230\u5916\u56f4\u8ddd\u79bb\u5c0f\u4e8ed\u7684\u77f3\u67f1\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3aINF\u7684\u8fb9\n\n**\u6ce8\u610f\uff1a\u56e0\u4e3a\u6bcf\u6b21\u90fd\u8981\u6d88\u8017\u77f3\u67f1\u9ad8\u5ea6\uff0c\u6240\u4ee5\u8fde\u5165\u77f3\u67f1\u7684\u8fb9\u8fde \u77f3\u67f11 ,\u8fde\u51fa\u77f3\u67f1\u7684\u8fb9\u4ece \u77f3\u67f12 \u51fa\u53d1\uff0c\u4ece\u800c\u8fbe\u5230\u8def\u8fc7\u77f3\u67f1\u6d88\u8017\u9ad8\u5ea6\u8fd9\u4e00\u9650\u5236**\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nint RD(){\n    int out = 0,flag = 1;char c = getchar();\n    while(c < '0' || c >'9'){if(c == '-')flag = -1;c = getchar();}\n    while(c >= '0' && c <= '9'){out = out * 10 + c - '0';c = getchar();}\n    return flag * out;\n    }\nconst int maxn = 100019,INF = 1e9;\nint num,nume = 1,tot;\nint lenx,leny,d;\nint map[190][190];\nint L[190][190];\nint s,t,maxflow;\nint head[maxn];\nstruct Node{\n    int v,dis,nxt;\n    }E[maxn << 2];\nvoid add(int u,int v,int dis){\n    E[++nume].nxt = head[u];\n    E[nume].v = v;\n    E[nume].dis = dis;\n    head[u] = nume;\n    }\nint lev[maxn];\nbool bfs(){\n    queue<int>Q;\n    memset(lev,0,sizeof(lev));\n    Q.push(s);\n    lev[s] = 1;\n    while(!Q.empty()){\n        int u = Q.front();\n        Q.pop();\n        for(int i = head[u];i;i = E[i].nxt){\n            int v = E[i].v;\n            if(E[i].dis && !lev[v]){\n                lev[v] = lev[u] + 1;\n                Q.push(v);\n                if(v == t)return 1;\n                }\n            }\n        }\n    return 0;\n    }\nint Dinic(int u,int flow){\n    if(u == t)return flow;\n    int rest = flow,k;\n    for(int i = head[u];i;i = E[i].nxt){\n        int v = E[i].v;\n        if(E[i].dis && lev[v] == lev[u] + 1 && rest){\n            k = Dinic(v,min(rest,E[i].dis));\n            if(!k)lev[v] = 0;\n            E[i].dis -= k;\n            E[i ^ 1].dis += k;\n            rest -= k;\n            }\n        \n        }\n    return flow - rest;\n    }\ndouble getdis(int x1,int y1,int x2,int y2){\n    return ((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n    }\nint getindex(int x,int y){\n    return (x - 1) * leny + y;\n    }\nint main(){\n    lenx = RD();leny = RD();d = RD();\n    char temp;\n    for(int i = 1;i <= lenx;i++){\n        for(int j = 1;j <= leny;j++){\n            cin>>temp;\n            map[i][j] = temp - '0';\n            }\n        }\n    for(int i = 1;i <= lenx;i++){\n        for(int j = 1;j <= leny;j++){\n            cin>>temp;\n            if(temp == 'L'){\n                L[i][j] = 1;\n                num++;\n                }\n            }\n        }\n    //\u77f3\u59341\u90e8\u4ece1\u5230tot\uff08lenx * leny\uff09,2\u90e8 + tot\uff0c\u77f3\u5934\u7f16\u53f7\u4e3a(i - 1) * leny + j\n    tot = lenx * leny;\n    s = tot * 2 + 1,t = s + 1;\n    for(int i = 1;i <= lenx;i++){\n        for(int j = 1;j <= leny;j++){\n            int I = getindex(i,j);\n            if(map[i][j]){\n                add(I,I + tot,map[i][j]);\n                add(I + tot,I,0);\n                if(i + d > lenx || i - d < 1 || j + d > leny || j - d < 1){\n                    add(I + tot,t,INF);\n                    add(t,I + tot,INF);\n                    }\n                if(L[i][j]){\n                    add(s,I,1);\n                    add(I,s,0);\n                    }\n                }\n            }\n        }\n    for(int x1 = 1;x1 <= lenx;x1++){\n        for(int y1 = 1;y1 <= leny;y1++){\n            for(int x2 = 1;x2 <= lenx;x2++){\n                for(int y2 = 1;y2 <= leny;y2++){\n                    if(getdis(x1,y1,x2,y2) <= d * d){\n                        int u = getindex(x1,y1),v = getindex(x2,y2);\n                        add(u + tot,v,INF);\n                        add(v,u + tot,0);\n                        add(v + tot,u,INF);\n                        add(u,v + tot,0);\n                        }\n                    }\n                }\n            }\n        }\n    int flow = 0;\n    while(bfs())while(flow = Dinic(s,INF))maxflow += flow;\n    printf(\"%d\\n\",num - maxflow);\n    return 0;\n    }\n```",
        "postTime": 1524204736,
        "uid": 56230,
        "name": "\u5929\u4e0a\u4e00\u9897\u86cb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u6211\u4eec\u6765\u4e00\u8fb9\u8bfb\u9898\uff0c\u4e00\u8fb9\u5206\u6790\uff1a\n\n1.\u77f3\u67f1\u9ad8h\uff0c\u6bcf\u6b21\u8725\u8734\u8df3\u540e-1\uff1a\n\n\u6211\u4eec\u6bcf\u4e2a\u77f3\u67f1\u53ea\u80fd\u88abh\u53ea\u8725\u8734\u8df3\uff0c\u5373\u77f3\u67f1\u5bb9\u91cf\u4e3ah\uff0c\u6211\u4eec\u901a\u8fc7\u62c6\u70b9\u5b9e\u73b0\n\n2.\u540c\u4e00\u65f6\u523b\uff0c\u6bcf\u4e2a\u51fa\u751f\u70b9\u53ea\u80fd\u6709\u4e00\u53ea\u8725\u8734\uff1a\n\n\u6211\u4eec\u4eces\u5411\u90a3\u4e2a\u70b9\u8fde1\u7684\u8fb9\uff0c\u8868\u793a\u8725\u8734\u8d77\u8df3\n\n3.\u8725\u8734\u8df3\u5230\u8fb9\u754c**\u5916**\u4e3a\u9003\u8d70\uff1a\n\n\u6211\u4eec\u4ece\u80fd\u8df3\u5230\u8fb9\u754c\u5916\u7684\u70b9\uff0c\u66b4\u529b\u5411t\u8fde\u8fb9\uff0c\u5bb9\u91cfinf\uff08\u56e0\u4e3a\u6709\u65e0\u6570\u53ea\u8725\u8734\u53ef\u4ee5\u8df3\u51fa\uff09\n\n4.\u8725\u8734\u53ef\u4ee5\u8df3\u5230\u8ddd\u79bbd\u4ee5\u5185\u7684\u70b9\uff1a\n\n\u6211\u4eec\u66b4\u529b\u641c\u7d22\u4e00\u904d\uff0c\u627e\u5230d\u4ee5\u5185\u7684\u70b9\uff0c\u8fde\u53cc\u5411\u8fb9\uff0c\u5bb9\u91cf\u65e0\u9650\n\n------------\n\u8fd9\u6837\u6211\u4eec\u5c31\u6210\u529f\u7684\u628a\u9898\u76ee\u7684\u610f\u601d\u8f6c\u5316\u4e3a\u56fe\u7684\u610f\u601d\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u8dd1dinic\u4e86\uff0c\u6c42\u51fa\u6709\u591a\u5c11\u8725\u8734\u80fd\u8dd1\u51fa\u53bb\n\n\u518d\u7528\u603b\u6570\u4e00\u51cf\u5c31\u662f\u4e0d\u80fd\u8dd1\u51fa\u53bb\u7684\u6570\u91cf\n\n\n\n------------\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define ll long long\nusing namespace std;\nconst int N = 1e3+3;\nint m,n,s,t,d;\nstruct edge{int next,to,w;}p[N*N];\nint head[N],num;\nil void ad(int x,int y,int z){p[++num]=edge{head[x],y,z};head[x]=num;}\nil void add(int x,int y,int z)\n{\n\tad(x,y,z);\n\tad(y,x,0);\n//\tprintf(\"%d %d %d\\n\",x,y,z);\n}\nil int qfj(int x){return ((x-1)^1)+1;}\nil int id(int x,int y){return (x-1)*m+y;}\nint dep[N],mxfl;\nbool bfs() //\u7f51\u7edc\u6d41 \n{\n\tmemset(dep,0,sizeof(dep));\n\tqueue<int> q;\n\tq.push(s);\n\tdep[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=p[i].next)\n\t\t{\n\t\t\tint v=p[i].to;\n\t\t//\tprintf(\"%d %d\\n\",u,v);\n\t\t\tif(!dep[v]&&p[i].w)\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\t\n\treturn dep[t];\n}\nint dfs(int u,int limit)\n{\n//\tputs(\"---------\");\n\tif(u==t||!limit) return limit;\n\tint flow=0,w;\n\tfor(int i=head[u];i;i=p[i].next)\n\t{\n\t\tint v=p[i].to;\n\t\tif(dep[v]==dep[u]+1&&(w=dfs(v,min(limit,p[i].w))))\n\t\t{\n\t\t\tflow+=w;\n\t\t\tp[i].w-=w;\n\t\t\tp[qfj(i)].w+=w;\n\t\t\tlimit-=w;\n\t\t\tif(!limit) break;\n\t\t}\n\t}\n\treturn flow;\n}\nint h[22][22],g[22][22],sm;\nil int dis(int xa,int ya,int xb,int yb){return (xa-xb)*(xa-xb)+(ya-yb)*(ya-yb);}\nvoid kz(int x,int y) //\u5bfb\u627e\u5468\u56f4\u53ef\u4ee5\u8df3\u5230\u7684 \n{\n\tfor(int i=max(1,x-d);i<=min(n,x+d);i++)\n\t{\n\t\tfor(int j=max(1,y-d);j<=min(m,y+d);j++)\n\t\t{\n\t\t\tif(x==i&&y==j) continue;\n\t\t\tif(dis(x,y,i,j)<=d*d)\n\t\t\t{\n\t\t\t\tadd(id(x,y)+n*m,id(i,j),5e8);\n\t\t\t\tadd(id(i,j)+n*m,id(x,y),5e8);\n\t\t//\t\tprintf(\"%d %d %d %d\\n\",x,y,i,j);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m>>d;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring c;\n\t\tcin>>c;\n\t\tfor(int j=0;j<c.size();j++) h[i][j+1]=c[j]-48;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring c;\n\t\tcin>>c;\n\t\tfor(int j=0;j<c.size();j++)\n\t\t\tif(c[j]=='L') g[i][j+1]=1,sm++;\n\t}\n//\tfor(int i=1;i<=n;i++,puts(\"\")) for(int j=1;j<=m;j++) printf(\"%d \",h[i][j]);\n//\tfor(int i=1;i<=n;i++,puts(\"\")) for(int j=1;j<=m;j++) printf(\"%d \",g[i][j]);\n\ts=0;t=n*m*2+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint u=id(i,j);\n\t\t\tadd(u,u+n*m,h[i][j]); //\u62c6\u70b9 \n\t\t\tif(g[i][j]) add(s,u,1); \n\t\t\tif(i<=d||j<=d||i+d>n||j+d>m) add(u+n*m,t,1e9);//\u53ef\u4ee5\u8df3\u51fa\u53bb \n\t\t\tkz(i,j);\n\t\t}\n\t}\n\twhile(bfs()) mxfl+=dfs(s,2e9);\n\t/*\n\tfor(int i=head[s];i;i=p[i].next) //\u8c03\u9519\u597d\u65b9\u6cd5 \n\t{\n\t\tint v=p[i].to;\n\t\tif(p[i].w) printf(\"%d\\n\",v);//\u8fd9\u6761\u8fb9\u8fd8\u6709\u6d41\u91cf\uff0c\u8bf4\u660e\u5b83\u6ca1\u88ab\u9009\uff0c\u5c31\u77e5\u9053\u54ea\u4e9b\u9009\u4e86\uff0c\u54ea\u4e9b\u6ca1\u6709 \n\t}\n\t*/\n//\tprintf(\"%d\\n\",mxfl);\n\tcout<<sm-mxfl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1592444960,
        "uid": 11392,
        "name": "shenbear",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u9898\u76ee\u6570\u636e\u5f88\u5c0f\uff0c\u6240\u4ee5\u505a\u8d77\u6765\u4f1a\u5f88\u8f7b\u677e\uff08EK\u5c31\u884c\u4e86\uff09\n\u63a5\u4e0b\u6765\u5c31\u662f\u601d\u8def\uff1a\u4e00\u770b\u5c31\u77e5\u9053\u662f\u7f51\u7edc\u6d41\u7684\u9898\u76ee\u3002\n\n1.\u9996\u5148\u662f\u8725\u8734\uff0c\u4e0e\u8d85\u6e90\u70b9\u8fde\u63a5\uff0c\u5bb9\u91cf\u4e3a\u4e00\u3002\n\n2.\u5176\u6b21\u662f\u77f3\u67f1\uff0c\u6bcf\u6b21\u6709\u8725\u8734\u7ecf\u8fc7\u65f6\u9ad8\u5ea6\u51cf\u4e00\uff0c\u62c6\u5206\u6210\u4e24\u70b9\u5bb9\u91cf\u4e3a\u77f3\u67f1\u9ad8\u5ea6\u3002\n\n3.\u77f3\u67f1\u4e0e\u53ef\u4ee5\u8fde\u63a5\u7684\u77f3\u67f1\u76f8\u8fde\uff0c\u5bb9\u91cf\u4e3aINF\u3002\n\n4.\u53ef\u4ee5\u76f4\u63a5\u8df3\u51fa\u7684\u77f3\u67f1\u4e0e\u6c47\u70b9\u76f8\u8fde\uff0c\u5bb9\u91cfINF\uff0c\u77f3\u67f1\u9ad8\u5ea6\u90fd\u884c\u3002\n\n\u5982\u679c\u8fd8\u4e0d\u660e\u767d\u7684\u770b\u4e0b\u9762\u56fe:\n![](https://img-blog.csdn.net/20180810223126963?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1d5dF9jb2Rl/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\n\u77f3\u67f1\u62c6\u5206\u6211\u5c31\u6ca1\u753b\u4e86\uff0c\u770b\u4e0a\u9762\u81ea\u5df1\u8111\u8865\u4e00\u4e0b\uff0c\u5c31\u50cf\u4f60\u4eec\u770b\u756a\u7684\u65f6\u5019\u5c31\u884c\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u8d34\u4ee3\u7801\u4e86\n```cpp\n\n#include<iostream>\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <queue>\n\n#define MAXN 1050\n\n#define MAXQ 20050\n\n#define INF 999999\n\nusing namespace std;\n\nint r,c,d,cnt=0,acnt=0,ans=0;\n\nint num[21][21];//\u7528\u6765\u8bb0\u5f55\u6bcf\u4e2a\u6709\u77f3\u67f1\u7684\u70b9\u7684\u7f16\u53f7\uff1b \n\nint a[MAXQ];\n\nint map[MAXN][MAXN],in[25][25];//map\u662f\u77e9\u9635\u56fe\uff0c\u8bb0\u5f55\u70b9\u4e0e\u70b9\u8054\u7cfb\uff1bin\u662f\u77f3\u67f1\u9ad8\u5ea6\uff1b\n\nint p[MAXQ],q[MAXQ]; \n\nvoid makePic(int x,int y)//\u641c\u7d22\u6709\u76f4\u63a5\u8054\u7cfb\u7684\u8fb9\u5efa\u56fe\uff1b\n\n{int i,j;\n\nint now=num[x][y]+1;\n\nfor(i=1;i<=r;i++)\n\nfor(j=1;j<=c;j++)\n\n{\n\nif((i!=x||j!=y) && (in[i][j]>0) && d*d>=(x-i)*(x-i)+(y-j)*(y-j)) \n\nmap[now][num[i][j]]=INF;\n\n}\n\n}\n\n \n\nvoid escape()//\u5224\u65ad\u8be5\u77f3\u67f1\u662f\u5426\u53ef\u4ee5\u51fa\u9003\uff1b\n\n{int i,j;\n\nfor(i=1;i<=r;i++)\n\nfor(j=1;j<=c;j++)\n\nif(i-d<1||i+d>r||j-d<1||j+d>c) \n\n{\n\nint now=num[i][j]+1; \n\nmap[now][cnt]=INF; \n\n}\n\n}\n\n \n\nint Maxflow() //\u6a21\u677f\uff1b\n\n{int flow=0;\n\n   for(;;)\n\n    {   queue<int> Q;\n\n      memset(p,-1,sizeof(p));       \n\n        Q.push(0);\n\n        while(!Q.empty())\n\n        {int now=Q.front();Q.pop();\n\n            for(int i=1;i<=cnt;i++)\n\n                if(p[i]<0 && map[now][i]>0) \n\n                    {Q.push(i);\n\n                     p[i]=now;\n\n                     }\n\n                  if(p[cnt]>0) break;\n\n                }\n\n        if(p[cnt]<0) break;\n\n            int minFlow=INF; \n\n        for(int i=cnt;i!=0;i=p[i])\n\n            minFlow=min(minFlow,map[p[i]][i]);\n\n        for(int i=cnt;i!=0;i=p[i])\n\n      {  map[p[i]][i]-=minFlow;\n\n          map[i][p[i]]+=minFlow;\n\n      }\n\n        flow+=minFlow;\n\n}\n\nreturn flow;\n\n}\n\n \n\nvoid init()\n\n{\n\n    int i,j;\n\n    char s;\n\n    cin>>r>>c>>d;\n\n    for(i=1;i<=r;i++)\n\n        for(j=1;j<=c;j++)\n\n    {cin>>s;\n\n        in[i][j]=s-48;//\u77f3\u67f1\u9ad8\u5ea6\uff08\u8be5\u70b9\u662f\u5426\u6709\u77f3\u67f1\uff09\uff1b\n\n        if(s!='0') \n\n            {num[i][j]=++cnt;\n\n             map[cnt][cnt+1]=s-48;\n\n            cnt++;}//\u77f3\u67f1\u62c6\u6210\u4fe9\u70b9\uff1b\n\n            }\n\n \n\n \n\n    for(i=1;i<=r;i++)\n\n        for(j=1;j<=c;j++)\n\n        {cin>>s;\n\n         if(s=='L') \n\n         {acnt++;\n\n          map[0][num[i][j]]=1;//\u6709\u8725\u8734\u7684\u4e0e\u6e90\u70b9\u8fde\u63a5\uff1b\n\n           }\n\n            if(in[i][j]>0)\n\n                makePic(i,j);//\u6bcf\u4e2a\u77f3\u67f1\u904d\u5386\u5efa\u56fe\uff08\u6570\u636e\u5c0f\uff09\uff1b\n\n             }\n\n \n\n}\n\nint main()\n\n{\n\ninit(); \n\ncnt++;\n\nescape();\n\ncout<<acnt-Maxflow()<<endl;\n\nreturn 0;\n\n}\n\n```",
        "postTime": 1534170129,
        "uid": 86699,
        "name": "wyt_1727149038",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u6700\u5927\u6d41\u677f\u5b50\uff0c\u4e3b\u8981\u662f\u5efa\u56fe\n\n\u56e0\u4e3a\u662f\u591a\u6e90\u70b9\u591a\u6c47\u70b9\uff0c\u5efa\u7acb\u603b\u6e90\u70b9\u603b\u6c47\u70b9\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6839\u7f16\u53f7\u4e3a$i$\u7684\u67f1\u5b50\uff0c\u65b0\u5efa\u4e00\u4e2a$i+n$\n\n\u628ata\u4eec\u95f4\u5efa\u5bb9\u91cf\u4e3a\u67f1\u5b50\u9ad8\u5ea6\u7684\u8fb9\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u53ef\u4ee5\u4e24\u4e24\u5230\u8fbe\u7684\u67f1\u5b50$(i,j)$\n\n\u5c06$i+n$\u548c$j$\u7684\u5efa\u8fb9\uff0c\u5bb9\u91cf\u4e3a$\u221e$\n\n$j+n$\u548c$i$\u540c\u7406\n\n\u5bf9\u4e8e\u53ef\u4ee5\u8df3\u51fa\u7684\u67f1\u5b50$i$\uff0c\u5c06$i+n$\u4e0e\u603b\u6c47\u70b9\u5efa\u8fb9\u5bb9\u91cf\u4e3a$\u221e$\n\n\u5bf9\u4e8e\u4e0a\u9762\u6709\u8725\u8734\u7684\u67f1\u5b50\uff0c\u5c06\u5b83\u4e0e\u603b\u6c47\u70b9\u5efa\u8fb9\uff0c\u5bb9\u91cf\u4e3a$1$\n\n\u6700\u540e\u8f93\u51fa\u8725\u8734\u603b\u6570\u4e0e\u6700\u5927\u6d41\u7684\u5dee\n\n\u4ee3\u7801\uff1a\n```cpp\n# include<iostream>\n# include<cstdio>\n# include<cstdlib>\n# include<cstring>\n# include<queue>\nusing namespace std;\nconst int inf=1e8;\nstruct p{\n    int x,y,dis;\n}c1[20001],c[20001];\nint r,cc,D,n,m,k,num;\nint h[8001],d[8001];\nint a[51][51],b[51][51];\nchar ch[51];\nvoid add(int x,int y,int dis)\n{\n    c[num].x=h[x];\n    c[num].y=y;\n    c[num].dis=dis;\n    h[x]=num++;\n}\nbool bfs()\n{\n    memset(d,0,sizeof(d));\n    d[0]=1;\n    queue<int> qu;\n    qu.push(0);\n    while(!qu.empty())\n    {\n        int tt=qu.front();\n        qu.pop();\n        for(int i=h[tt];i;i=c[i].x)\n          if(c[i].dis&&!d[c[i].y])\n          {\n              d[c[i].y]=d[tt]+1;\n              if(c[i].y==k) return 1;\n              qu.push(c[i].y);\n          }\n    }\n    return 0;\n}\nint dfs(int x,int dix)\n{\n    if(x==k) return dix;\n    for(int i=h[x];i;i=c[i].x)\n      if(d[c[i].y]==d[x]+1&&c[i].dis)\n      {\n          int dis=dfs(c[i].y,min(c[i].dis,dix));\n          if(dis)\n          {\n              c[i].dis-=dis;\n              c[i^1].dis+=dis;\n              return dis;\n        }\n      }\n}\nint dinic()\n{\n    int tot=0;\n    while(bfs())\n    tot+=dfs(0,inf);\n    return tot;\n}\nint main()\n{\n    cin>>r>>cc>>D;\n    for(int i=1;i<=r;i++)\n      {\n          cin>>ch+1;\n          for(int j=1;j<=cc;j++)\n          {\n            a[i][j]=ch[j]-48;\n            if(a[i][j])\n            c1[++n].x=i,c1[n].y=j,c1[n].dis=a[i][j],b[i][j]=n;\n          }\n      }\n    for(int i=1;i<=n;i++)\n      {\n          add(i+n,i,0);\n          add(i,i+n,c1[i].dis);\n      }\n    for(int i=1;i<n;i++)\n      for(int j=i+1;j<=n;j++)\n        if((c1[i].x-c1[j].x)*(c1[i].x-c1[j].x)+(c1[i].y-c1[j].y)*(c1[i].y-c1[j].y)<=D*D)\n        {\n            add(j,i+n,0);\n            add(i+n,j,inf);\n            add(i,j+n,0);\n            add(j+n,i,inf);\n        }\n    k=n*2;\n    for(int i=1;i<=r;i++)\n      {\n          cin>>ch+1;\n          for(int j=1;j<=cc;j++)\n          {\n            if(ch[j]=='L')\n            {\n                m++;\n                add(b[i][j],0,0);\n                add(0,b[i][j],1);\n            }\n          }\n      }\n    k++;\n    for(int i=1;i<=n;i++)\n      if(c1[i].x+D>r||c1[i].x-D<1||c1[i].y+D>cc||c1[i].y-D<1)\n      {\n          add(k,i+n,0);\n          add(i+n,k,inf);\n      }\n    printf(\"%d\",m-dinic());\n    return 0;\n}\n\n```",
        "postTime": 1512558204,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u5c31\u662f\u4e00\u4e2aDinic\u7b97\u6cd5+\u5efa\u6a21\uff1b\n\n\u5efa\u6a21\u8bfb\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u4ed4\u7ec6\u60f3\u60f3\u8fd8\u662f\u53ef\u4ee5\u7b80\u5355\u5730\u5199\u51fa\u7684\n\n\u89e3\u91ca\uff0c\u6ce8\u91ca\u5982\u4e0b\uff1a\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int V = 810;\nconst int INF = 0x3f3f3f3f;\nint n,m,sum,ans,x,size,head,tail,s,t,p1=1;\nint cur[V],used[V],d[V],f[V];\nint num[V][V],dis[V][V],p[V][V];\nstruct Node{\n    int from,to,cap,flow;\n}w[V*200];\nint Q[V+10];\ninline void Add(int from,int to,int cap){\n    w[++p1]=(Node){f[from],to,cap,0}; f[from]=p1;//\u4ece2\u5f00\u59cb\n    w[++p1]=(Node){f[to],from,0,0}; f[to]=p1;//\u4fbf\u4e8e\u5f02\u6216\uff0c\u7b80\u5355\u5173\u8054\u8d1f\u8fb9\n}\nvoid Read(int &ret){\n    ret=0; char ch; int f=1;\n    while((ch=getchar())<'0'||ch>'9')\n        if(ch=='-')f=-1;\n    while(ch>='0'&&ch<='9')\n        ret=ret*10+ch-'0',ch=getchar();\n    ret*=f;            \n}\nbool Bfs(){\n    memset(used,0,sizeof(used));//\u7528STL\u4e5f\u8bb8\u4f1a\u6162\u4e00\u4e9b\u3002\u3002\u3002\n    d[s]=0; used[s]=1; \n    Q[tail=1]=s; head=0;\n    while(head<tail){\n        x=Q[++head%V];\n        for(int i=f[x]; i ;i=w[i].from){\n            Node e=w[i];\n            if(!used[e.to]&&e.cap>e.flow){//\u6784\u5efa\u5c42\u6b21\u56fe\uff0c\u4e3aDfs\u505a\u51c6\u5907\uff1b\n                used[e.to]=1;\n                Q[++tail%V]=e.to;\n                d[e.to]=d[x]+1;        \n            }\n        }\n    }\n    return used[t];\n}\nint Dfs(int x,int a)//\u963b\u585e\u6d41\n{\n    if(a==0||x==t)return a;\n    int ret,sum=0;\n    for(int &i=cur[x]; i; i=w[i].from){//\u5f15\u7528\uff0c\u52a0\u901f\uff0c\u907f\u514d\u4e0b\u6b21\u91cd\u590d\u67e5\u770b\u3002\n        Node &e=w[i];//\u5f15\u7528\uff0c\u66f4\u6539\u539f\u56fe\uff0c\u963b\u585e\u6d41\n        if(d[e.to]==d[x]+1&&(ret=Dfs(e.to,min(a,e.cap-e.flow)))){\n            e.flow+=ret;\n            sum+=ret;\n            w[i^1].flow-=ret;//\u7528\u5f02\u6216\uff0c\u7b80\u5355\u7684\u5173\u8054\u8d1f\u8fb9\uff1b\n            a-=ret;\n            if(a==0)break;\n        }\n    }\n    return sum;\n}\nbool Pd(int i,int j,int ii,int jj,double d)\n{\n    if(!num[ii][jj])return 0;    \n    double x=jj-j,y=ii-i;\n    if(sqrt(x*x+y*y)>d)return 0;//\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u53ef\u4ee5\u8d70\u5230\u5f53\u524d\u70b9\u4e0e\u5426\n    return 1;\n}\nvoid Init()\n{\n    int r,c,d,n1;\n    char st[V];\n    scanf(\"%d%d%d\\n\",&r,&c,&d);\n    s=0; t=801;\n    for(int i=1;i<=r;++i){\n        scanf(\"%s\\n\",st);\n        for(int j=1;j<=c;++j){\n            num[i][j]=st[j-1]-'0';\n            if(num[i][j]){\n                p[i][j]=++n;//\u8bb0\u5f55\u7f16\u53f7\n                n1=n+400;\n                Add(n,n1,num[i][j]);//\u62c6\u70b9\uff0c\u5c06\u70b9\u4e0a\u6743\u503c\u8f6c\u79fb\u5230\u8fb9\u4e0a\uff0c\u505a\u7f51\u7edc\u6d41\uff1b\n                used[n]=n1;    \n                if(i<=d||r-i<d||j<=d||c-j<d)//\u662f\u5426\u53ef\u4ee5\u51fa\u53bb\uff0c\u662f\u5219\u4e0e\u6c47\u70b9\u76f8\u8fde\uff1b\n                    Add(n1,t,INF);    \n            }\n        }\n    }\n    for(int i=1;i<=r;++i){\n        scanf(\"%s\\n\",st);\n        for(int j=1;j<=c;++j){\n            dis[i][j]=st[j-1]-'.';    \n            if(dis[i][j]){\n                ans++;\n                Add(s,p[i][j],1);//\u4e00\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u8725\u8734\uff01\uff01 \n            }\n            if(num[i][j]){\n                for(int ii=max(i-d,1);ii<=min(r,i+d);++ii)\n                    for(int jj=max(j-d,1);jj<=min(c,j+d);++jj)\n                    if(Pd(i,j,ii,jj,d)&&!(i==ii&&j==jj))//\u672c\u8eab\u4e0d\u5728\u5efa\u8fb9\uff08\u597d\u50cf\u6ca1\u6709\u5361\uff09\n                        Add(used[p[i][j]],p[ii][jj],INF);        \n            }\n        }\n    }\n}\nvoid Solve()\n{\n    int sum=0;\n    while(Bfs()){\n        memcpy(cur,f,sizeof(f));\n        sum+=Dfs(s,INF);    \n    }\n    ans-=sum;\n    if(ans<0)ans=0;//\u6ce8\u610f\uff01\uff01\n    printf(\"%d\\n\",ans);\n}\nint main()\n{\n    Init();\n    Solve();\n    return 0;\n}\n```",
        "postTime": 1475929419,
        "uid": 10441,
        "name": "tqqpt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u5efa\u7acb\u4e00\u4e2a\u6e90\u70b9s \u548c\u6c47\u70b9t \uff0c\u628a\u7f51\u683c\u5730\u56fe\u4e2d\u7684\u6bcf\u4e2a\u77f3\u67f1\u770b\u4f5c\u4e00\u4e2a\u70b9\u3002\u6e90\u70b9s \u5411\u6bcf\u4e2a\u6709\u8725\u8734\u7684\u77f3\u67f1\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u8ddd\u79bb\u4e0d\u8d85\u8fc7 d \u7684\u77f3\u67f1\u4e4b\u95f4\u4e92\u8fde\u5bb9\u91cf\u4e3a inf \u7684\u8fb9\uff0c\u8fb9\u754c\u4e0a\u7684\u77f3\u67f1\u5411 t\u8fde\u5bb9\u91cf\u4e3a inf \u7684\u8fb9\uff0c\u9898\u76ee\u6240\u6c42\u5c31\u53d8\u6210\u4e86\u5bf9\u4e8e\u8fd9\u5f20\u7f51\u7edc\u6d41\u56fe\uff0c\u6c42\u7ecf\u8fc7\u6bcf\u4e2a\u77f3\u67f1\u7684\u6d41\u91cf\u4e0d\u8d85\u8fc7\u5176\u9ad8\u5ea6\u7684\u6700\u5927\u6d41\u5927\u5c0f\u3002\n\n\u6839\u636e\u6211\u4eec\u4e0a\u9762\u7684\u5206\u6790\uff0c\u53ef\u4ee5\u5c06\u77f3\u67f1i \u62c6\u6210\u4e24\u4e2a\u70b9 i_1,i_2 \uff0c\u5efa\u8fb9 (i_1->i_2) \uff0c\u5bb9\u91cf\u4e3a\u77f3\u67f1\u9ad8\u5ea6\u3002\u8dd1\u62c6\u70b9\u540e\u7684\u56fe\u4e2ds \u5230 t\u7684\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n```\n#include<bits/stdc++.h>\n#define p(a,b) (a-1)*m+b\n#define q(a,b) p(a,b)+n*m\n#define N 50005\n#define M 2000002\n#define inf 1<<26\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n,m,r,s,t,ans;\nchar mp[101][101];\nint ap[101][101];\nbool dis(int a,int b,int x,int y)\n{return (a-x)*(a-x)+(b-y)*(b-y)<=r*r;}\nint head[N],pos=-1,cur[N];\nstruct edge{int to,next,c;}e[M];\nvoid add(int a,int b,int c)\n{pos++;e[pos].to=b,e[pos].c=c,e[pos].next=head[a],head[a]=pos;}\nvoid insert(int a,int b,int c){add(a,b,c);add(b,a,0);}\nqueue<int>Q;bool vis[N];int d[N];\nbool bfs()\n{\n\tfor(int i=s;i<=t;i++)vis[i]=0,d[i]=-1;\n\tvis[s]=1,d[s]=0;Q.push(s);\n\twhile(!Q.empty())\n\t{\n\t\tint u=Q.front();Q.pop();\n\t\tfor(int i=head[u];i!=-1;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(vis[v]||e[i].c<=0)continue;\n\t\t\td[v]=d[u]+1;vis[v]=1;Q.push(v);\n\t\t}\n\t}return vis[t];\n}\nint dfs(int u,int a)\n{\n\tif(u==t||!a)return a;\n\tint flow=0,f;\n\tfor(int &i=cur[u];i!=-1;i=e[i].next)\n\t{\t\n\t\tint v=e[i].to;\n\t\tif(d[v]==d[u]+1&&(f=dfs(v,min(e[i].c,a)))>0)\n\t\t{\n\t\t\tflow+=f,a-=f;\n\t\t\te[i].c-=f,e[i^1].c+=f;\n\t\t\tif(!a)break;\n\t\t}\n\t}return flow;\n}\nint dinic()\n{\n\tint ret=0;\n\twhile(bfs())\n\t{\n\t\tfor(int i=s;i<=t;i++)cur[i]=head[i];\n\t\tret+=dfs(s,inf);\n\t}return ret;\n}\nvoid init(){memset(head,-1,sizeof(head));}\nbool check(int x,int y)\n{\n\tif(n-x<r||m-y<r||x<=r||y<=r)\n\treturn true;\n\treturn false;\n}\nint main()\n{\n\tn=read(),m=read(),r=read();\n\ts=0,t=n*m*2+1;init();\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%s\",mp[i]+1);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tap[i][j]=mp[i][j]-'0';\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%s\",mp[i]+1);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t {\n \t\t\tif(mp[i][j]=='L')\n \t\t\t{\n \t\t\t\tinsert(s,p(i,j),1);\n \t\t\t\tans++;\n\t\t\t }\n\t\t\t if(check(i,j))insert(q(i,j),t,inf);\n \t\t\t if(ap[i][j])insert(p(i,j),q(i,j),ap[i][j]);\n\t\t\t for(int x=1;x<=n;x++)\n \t\t\t for(int y=1;y<=m;y++)\n \t\t\t{\n \t\t\t\tif(x==i&&y==j)continue;\n \t\t\t\tif(dis(i,j,x,y))\n \t\t\t\t\tinsert(q(i,j),p(x,y),inf);\n \t\t\t}\n\t\t }\n\tprintf(\"%d\\n\",ans-dinic());\n}\n```\n",
        "postTime": 1590826207,
        "uid": 324858,
        "name": "\u26a1114514_zzm\u26a1",
        "ccfLevel": 5,
        "title": "P2472 [SCOI2007]\u8725\u8734"
    },
    {
        "content": "```\n**\u6838\u5fc3\u601d\u8def\uff1a**\n**\u8725\u8734\u7684\u603b\u6570-\u53ef\u4ee5\u9003\u51fa\u7684\u6570\u91cf=\u4e0d\u80fd\u9003\u51fa\u7684\u6570\u91cf\u3002\u6240\u4ee5\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u6c42\u4e00\u4e2a\u6700\u5927\u7684\u9003\u51fa\u6570\u91cf\u3002**\n**\u5efa\u56fe\uff1a**\n1\u3001\u5efa\u4e00\u4e2a\u8d85\u7ea7\u539f\u70b9\uff0c\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\u3002\u6bcf\u4e00\u4e2a\u77f3\u67f1\u5efa\u4e24\u4e2a\u70b9\uff1as1,s2\u3002\n2\u3001\u4ece\u8d85\u7ea7\u539f\u70b9\u5411\u6bcf\u4e00\u4e2a\u6709\u8725\u8734\u7684\u77f3\u67f1\u7684s1\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\u3002\n3\u3001\u4ece\u6bcf\u4e00\u4e2as1\u5411\u4ed6\u5bf9\u5e94\u7684s2\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u90a3\u4e2a\u77f3\u67f1\u7684\u9ad8\u5ea6\u7684\u8fb9\u3002\n4\u3001\u4ece\u6bcf\u4e00\u4e2a\u77f3\u67f1\u7684s2\u5411\u6bcf\u4e00\u4e2a\u4ece\u4ed6\u90a3\u91cc\u53ef\u4ee5\u8df3\u5230\u7684\u77f3\u67f1\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u65e0\u9650\u7684\u8fb9\u3002\n5\u3001\u4ece\u6bcf\u4e00\u4e2a\u80fd\u8df3\u51fa\u5730\u56fe\u7684\u77f3\u67f1\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u65e0\u9650\u7684\u8fb9\u3002\n\u6700\u540e\u4ece\u8d85\u7ea7\u539f\u70b9\u5411\u8d85\u7ea7\u6c47\u70b9\u8dd1\u4e00\u904d\u6700\u5927\u6d41\u5c31\u53ef\u4ee5\u4e86\u3002\n\u6700\u540e\u8d34\u4e00\u4e0b\u849f\u84bb\u7684\u4ee3\u7801\uff1a\n#include<iostream>\n#include<queue>\n#include<cmath>\nusing namespace std;\nint n,m,p,k,c[1001][1001],r[1001],bilibili[1001],ans,x[1001],y[1001],z[1001],l;\nchar ch;\ndouble dou;\nvoid bfs(){\n    queue<int> q;\n    while(1){\n        for(int i=0;i<=k;i++)bilibili[i]=0;\n        bilibili[0]=1000000000;\n        q.push(0);\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            for(int i=1;i<=k;i++){\n                if(!bilibili[i]&&c[u][i]>0){\n                    bilibili[i]=min(bilibili[u],c[u][i]);\n                    r[i]=u;\n                    q.push(i);\n                }\n            }\n        }\n        if(bilibili[k]==0)break;\n        for(int i=k;i!=0;i=r[i]){\n            c[r[i]][i]-=bilibili[k];\n        }\n        ans+=bilibili[k];\n    }\n    return;\n}\nint main(){\n    cin>>n>>m>>p;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            cin>>ch;\n            if(ch!='0'){\n                k++;\n                x[k]=i;\n                y[k]=j;\n                z[k]=ch-'0';\n            }\n        }\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            cin>>ch;\n            if(ch=='L'){\n                l++;\n                for(int w=1;w<=k;w++){\n                    if(x[w]==i&&y[w]==j){\n                        c[0][w]=1;\n                    }\n                }\n            }\n        }\n    }\n    for(int i=1;i<=k;i++){\n        for(int j=i+1;j<=k;j++){\n            dou=sqrt(abs(x[i]-x[j])*abs(x[i]-x[j])+abs(y[i]-y[j])*abs(y[i]-y[j]));\n            if(dou<=p){\n                c[j+k][i]=100000000;\n                c[i+k][j]=100000000;\n            }\n        }\n    }\n    for(int i=1;i<=k;i++){\n        c[i][i+k]=z[i];\n        if(x[i]+p>n||x[i]-p<=0||y[i]+p>m||y[i]-p<=0){\n            c[i+k][k*2+1]=1000000000;\n        }\n    }\n    k=k*2+1;\n    bfs();\n    cout<<l-ans;\n}\n\n```",
        "postTime": 1543228303,
        "uid": 114149,
        "name": "suyiheng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u4ee5\u524d\u505a\u8fc7\u4e00\u9053\u7c7b\u4f3c\u7684\u9898\u76ee:\n\n$$\\text JZOJ\\ 5948$$\n\n\u5c0f $X$ \u7684\u56fd\u5bb6\u6b63\u5728\u906d\u53d7\u88ad\u51fb\uff0c\u5fc5\u987b\u62bd\u8c03\u4e00\u4e9b\u9b42\u5e08\u4e0a\u524d\u7ebf\u589e\u63f4\u3002\n\u5230\u524d\u7ebf\u7528\u65f6\u6700\u77ed\u7684\u8def\u4e0a\u6709\u4e00\u6761\u5bbd\u5ea6\u4e3a $N$ \u7c73\u7684\u6cb3\uff0c\u800c\u524d\u6765\u589e\u63f4\u7684\u9b42\u5e08\u6bcf\u98de\u884c $L$ \u7c73\u5c31\u5fc5\u987b\u5728\u4e00\u7247\u8377\u53f6\u4e0a\u4f11\u606f\u4e00\u4e0b\uff0c\u624d\u80fd\u591f\u7ee7\u7eed\u98de\u884c\u3002\u5f53\u7136\uff0c\u9b42\u5e08\u4eec\u4e5f\u53ef\u4ee5\u9009\u62e9\u6ca1\u98de\u591f $L$ \u7c73\u5c31\u5148\u4f11\u606f\u4e00\u4e0b\uff0c\u4f46\u4e0d\u80fd\u4e00\u6b21\u98de\u8d85\u8fc7 $L$ \u7c73\u3002\n\u8ddd\u79bb\u6cb3\u7684\u4e00\u4fa7\u8ddd\u79bb\u4e3a $i$ \u7684\u8377\u53f6\u5171\u6709 $Ai$ \u7247\uff0c\u6bcf\u7247\u8377\u53f6\u5728\u6709\u9b42\u5e08\u505c\u4e8e\u4e0a\u65b9\u4f11\u606f\u540e\uff0c \u5c31\u4f1a\u6c89\u5165\u6c34\u5e95\uff0c\u4e0d\u80fd\u591f\u518d\u4f9b\u5176\u4ed6\u9b42\u5e08\u4f11\u606f\u3002\n\u73b0\u5728\u5c0f $X$ \u60f3\u8981\u77e5\u9053\uff0c\u81f3\u591a\u6709\u591a\u5c11\u540d\u9b42\u5e08\u80fd\u591f\u62b5\u8fbe\u524d\u7ebf\u3002\n\n\u6761\u4ef6\n\n- \u6709\u4e00\u5b9a\u7684\u8df3\u8dc3\u8ddd\u79bb\n- \u6bcf\u4e00\u4e2a\u8377\u53f6\u6709\u4e00\u5b9a\u7684\u8df3\u8dc3\u6b21\u6570\n\n\u90a3\u5c31\u5f88\u7b80\u5355\u4e86\u5417,\u6bcf\u4e00\u4e2a\u8377\u53f6\u5f80\u5b83\u7684\u6700\u5927\u8df3\u8dc3\u8ddd\u79bb\u8fde\u8fb9\u7136\u540e\u8dd1\u6700\u5927\u6d41\u3002\n\n\u7136\u540e\u4f1a\u9519\u3002\n\n\u4ed4\u7ec6\u4e00\u770b\u8981**\u62c6\u70b9**,\u56e0\u4e3a\u8377\u53f6\u8981\u9650\u5236\u81ea\u5df1 (\u5e76\u4e0d\u662f\u4ec0\u4e48\u88c2\u70b9\u8fd8\u6709\u4ec0\u4e48\u4e71\u4e03\u516b\u7cdf\u7684\u4e1c\u897f,\u4e0d\u61c2\u7684\u53ef\u4ee5\u7ffb\u9605\u6211\u7684\u535a\u5ba2)\n\n\u7136\u540e $80$ \u5206,\u4ed4\u7ec6\u770b\u6570\u636e: \u5bf9\u4e8e $100$% \u7684\u6570\u636e,$1\u2264L<N\u226410^5$,$0\u2264Ai\u226410^4$\u3002\n\n\u6700\u5927\u6d41\u77ac\u95f4\u5495\u5495,\u9700\u8981 $DP$\u3002\n\n\u8fd9\u9053\u9898\u5c31\u662f\u4e0a\u9762\u90a3\u9053\u9898\u7684\u52a0\u5f3a\u7248,\u53d8\u6210\u4e86\u4e8c\u7ef4\u3002\u7136\u800c $2007$ \u5e74\u7684\u7701\u9009\u662f\u90a3\u4e48\u7684\u6c34\u3002\n\n\u6309\u5f80\u5e38\u4e00\u6837\u5148\u753b\u56fe,\u518d\u8fde\u8fb9 : (\u4e0b\u9762\u662f\u4e00\u4e2a\u4e5d\u5bab\u683c\u7248\u7684\u6570\u636e)\n\n![](http://miao.su/images/2018/11/07/19cc8d.png)\n\n\u8981\u6ce8\u610f\u662f**\u8ddd\u79bb**\u4e3a $d$ ! \u7136\u540e\u8981\u641e\u61c2\u6c42\u8ddd\u79bb\u5c0f\u4e8e $d$ \u7684\u516c\u5f0f (\u6ca1\u4ed4\u7ec6\u770b\u88ab\u5237 \u4f4e $AC$ \u7387\u4e86)\n\n\u7136\u540e\u5c31\u8dd1 $ISAP$ \u5c31\u597d\u5566!\n\n![](https://cdn.luogu.com.cn/upload/pic/42980.png)\n\n```pascal\n// luogu-judger-enable-o2\nUses math;\n\nvar\n    value,reach,next,from:array[-1..210000] of longint;\n    id:array[-1..41,-1..41,1..2] of longint;\n    gap,dis,cnt:array[-1..81000] of longint;\n    d,n,m,l,r,k,i,j,sum,tot,sink,source,number,matrix,maxflow,lizard:longint;\n    s:ansistring;\n\nprocedure add(l,r,sum:longint);\nbegin\n    inc(tot); from[tot]:=l; reach[tot]:=r; value[tot]:=sum; next[tot]:=cnt[l]; cnt[l]:=tot;\n    inc(tot); from[tot]:=r; reach[tot]:=l; value[tot]:=8-8; next[tot]:=cnt[r]; cnt[r]:=tot;\nend;\n\nfunction Dfs(now,flow:longint):longint;\nvar i,k,mindis,ret:longint;\nbegin\n    mindis:=n-1; ret:=flow;\n    if now=sink then exit(flow);\n    i:=cnt[now];\n    while i<>-1 do\n    begin\n        if value[i]>0 then\n        begin\n            if dis[now]=dis[reach[i]]+1 then\n            begin\n                k:=Dfs(reach[i],min(ret,value[i]));\n                dec(value[i],k);inc(value[i xor 1],k);\n                dec(ret,k);\n                if dis[source]>=n then exit(flow-ret);\n                if ret=0 then break;\n            end;\n             mindis:=min(mindis,dis[reach[i]]);\n        end;\n        i:=next[i];\n    end;\n    if ret=flow then\n    begin\n        dec(gap[dis[now]]);\n        if gap[dis[now]]=0 then dis[source]:=n;\n        dis[now]:=mindis+1;\n        inc(gap[dis[now]]);\n    end;\n    exit(flow-ret);\nend;\n\nbegin\n    filldword(cnt,sizeof(cnt) div 4,maxlongint*2+1); tot:=1;\n    readln(n,m,d); source:=1; sink:=(1+n*m) << 1; number:=0;\n\n    for i:=1 to n do\n    begin readln(s);\n        for j:=1 to m do\n        begin\n            inc(number); id[i,j,1]:=number << 1; id[i,j,2]:=id[i,j,1]+1;\n            val(s[j],matrix); add(id[i,j,1],id[i,j,2],matrix);\n        end;\n    end;\n    for i:=1 to n do\n    begin readln(s);\n        for j:=1 to m do if s[j]='L' then begin inc(lizard); add(source,id[i,j,1],1); end;\n    end;\n    for i:=1 to n do for j:=1 to m do if (i+d>n)or(i-d<1)or(j+d>m)or(j-d<1) then add(id[i,j,2],sink,maxlongint);\n    for i:=1 to n do for j:=1 to m do for l:=1 to n do for r:=1 to m do if (i-l)*(i-l)+(j-r)*(j-r)<=d*d then add(id[i,j,2],id[l,r,1],maxlongint);\n\n    n:=sink+1; gap[source]:=n;\n    while dis[source]<n do inc(maxflow,Dfs(source,maxlongint));\n    writeln(lizard-maxflow);\nend.\n```",
        "postTime": 1541739929,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u6b22\u8fce\u8bbf\u95ee [juruo\u7684\u535a\u5ba2](https://rec.ac.cn/?p=318)\n## Solution\uff1a\n\u9898\u610f\u5f88\u597d\u7406\u89e3 \u5c31\u4e0d\u8d58\u8ff0\u4e86\n\u6613\u77e5\u53ea\u6709\u9ad8\u5ea6\u5927\u4e8e$0$\u7684\u77f3\u67f1\u624d\u53ef\u80fd\u5bf9\u7b54\u6848\u6709\u8d21\u732e  \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u628a\u8fd9\u4e9b\u8282\u70b9\u5355\u72ec\u62ff\u51fa\u6765\u91cd\u65b0\u6807\u53f7    \n\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u6e90\u70b9\u548c\u865a\u62df\u6c47\u70b9    \n\u9996\u5148\u80fd\u60f3\u5230\u6240\u6709\u53ef\u4ee5\u8df3\u51fa\u7f51\u683c\u7684\u70b9\uff08\u91cd\u65b0\u6807\u53f7\u540e\uff09\u4e00\u5b9a\u662f\u8981\u4e0e\u6c47\u70b9\u8fde\u63a5\u4e00\u6761\u6d41\u91cf\u4e3a$INF$\u7684\u8fb9    \n\u518d\u5c06\u6bcf\u4e2a\u70b9\u62c6\u5f00\u6210\u5165\u70b9\u548c\u51fa\u70b9 \u6d41\u91cf\u4e3a\u8fd9\u4e2a\u70b9\u7684\u9ad8\u5ea6   \n\u4e4b\u540e\u5904\u7406\u4e24\u4e2a\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\u7684\u70b9 \u4e92\u76f8\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a$INF$\u7684\u51fa\u70b9\u8fde\u5165\u70b9\u7684\u8fb9  \n\u6700\u540e\u628a\u6e90\u70b9\u4e0e\u8725\u8734\u6240\u5728\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9   \n\u8dd1\u4e00\u6b21\u6700\u5927\u6d41 \u5269\u4e0b\u7684\u8725\u8734\u5c31\u662f\u603b\u6570\u51cf\u53ef\u4ee5\u8dd1\u6389\u4e86\u7684\u4e86\n## Code\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100001;\nconst int M = 1000001;\nconst int INF = 1e9;\nint head[N], nex[N], to[N], val[N], ce = -1;\ninline void add(int u, int v, int w){\n\tto[++ ce] = v, nex[ce] = head[u], head[u] = ce, val[ce] = w;\n\tto[++ ce] = u, nex[ce] = head[v], head[v] = ce, val[ce] = 0;\n}\nchar mp[2001];\nint dep[N];\nint r, c, d, re = 1, s, t;\nstruct node{\n\tint x, y, w;\n\tbool has;\n}a[N];\nbool bfs(){\n\tmemset(dep, -1, sizeof dep);\n\tqueue<int > q;\n\tdep[s] = 0; q.push(s);\n\twhile(q.size()){\n\t\tint u = q.front(); q.pop();\n\t\tfor(register int i = head[u]; i != -1; i = nex[i]){\n\t\t\tint v = to[i];\n\t\t\tif(val[i] && dep[v] == -1){\n\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t] != -1;\n}\nint dfs(int u, int flow){\n\tif(u == t) return flow;\n\tint now = 0;\n\tfor(register int i = head[u]; i != -1; i = nex[i]){\n\t\tint v = to[i];\n\t\tif(val[i] && dep[v] == dep[u] + 1){\n\t\t\tint tmp = dfs(v, min(flow, val[i]));\n\t\t\tflow -= tmp;\n\t\t\tval[i] -= tmp;\n\t\t\tval[i ^ 1] += tmp;\n\t\t\tnow += tmp;\n\t\t\tif(flow == 0) break;\n\t\t}\n\t}\n\treturn now;\n}\ninline int maxflow(){\n\tint ans = 0;\n\twhile(bfs())\n\t\tans += dfs(s, INF);\n\treturn ans;\n}\ninline int read(){\n\tint x = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') ch = getchar();\n\twhile(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();\n\treturn x;\n}\nint main(){\n\tmemset(head, -1, sizeof head);\n\tr = read(), c = read(), d = read();\n\tfor(register int i = 1; i <= r; ++ i){\n\t\tscanf(\"%s\", mp + 1);\n\t\tfor(register int j = 1; j <= c; ++ j){\n\t\t\tif(mp[j] > '0'){\n\t\t\t\ta[++ re].x = i;\n\t\t\t\ta[re].y = j;\n\t\t\t\ta[re].w = mp[j] - '0';\n\t\t\t}\n\t\t}\n\t}\n\tint sum = 0;\n\tfor(register int i = 1; i <= r; ++ i){\n\t\tscanf(\"%s\", mp + 1);\n\t\tfor(register int j = 1; j <= c; ++ j){\n\t\t\tif(mp[j] == 'L'){\n\t\t\t\tfor(register int k = 2; k <= re; ++ k){\n\t\t\t\t\tif(a[k].x == i && a[k].y == j){\n\t\t\t\t\t\ta[k].has = 1;\n\t\t\t\t\t\t++ sum;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\ts = 1, t = re << 1;\n\tfor(register int i = 2; i <= re; ++ i)\n\t\tif(a[i].has) add(s, i, 1);\n\tfor(register int i = 2; i <= re; ++ i)\n\t\tadd(i, i + re - 1, a[i].w);\n\tfor(register int i = 2; i <= re; ++ i)\n\tfor(register int j = 2; j < i; ++ j){\n\t\tif((a[i].x - a[j].x) * (a[i].x - a[j].x) + (a[j].y - a[i].y) * (a[j].y - a[i].y) <= d * d) {\n\t\t\tadd(j + re - 1, i, INF);\n\t\t\tadd(i + re - 1, j, INF);\n\t\t}\n\t}\n\tfor(int i = 2; i <= re; ++ i){\n\t\tint x = a[i].x, y = a[i].y;\n\t\tif(x + d > r || x - d < 1 || y + d > c || y - d < 1)\n\t\t\tadd(i + re - 1, t, INF);\n\t}\n\tint ans = sum - maxflow();\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1529629530,
        "uid": 70383,
        "name": "Rec\u00b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u7f51\u7edc\u6d41\u597d\u9898\uff01\uff01\uff01\n\n\u7f51\u7edc\u6d41\u4e00\u822c\u90fd\u96be\u5728\u5efa\u56fe\uff0c\u540e\u6765\u770b\u5230\u9898\u89e3\u91cc\u6ca1\u6709\u4e00\u5f20\u7528\u6765\u89e3\u91ca\u7684\u56fe\u6211\u5c31\u592a\u53d1\u4e00\u5f20\u3002\n\n\u8fd9\u9053\u9898\u96be\u5728\u628a\u77f3\u67f1\u62c6\u70b9\uff08\u5165\u53e3\uff0c\u51fa\u53e3\uff09\uff0c\u628a\u77f3\u67f1\u9ad8\u5ea6\u60f3\u6210\u53ef\u4ee5\u7528\u591a\u5c11\u6b21\u3002\n\n\u6211\u4eec\u9996\u5148\u4ece\u6e90\u70b9\u5411\u5404\u4e2a\u77f3\u67f1\u7684\u5165\u53e3\u8fde\u8fb9\uff08\u6709\u8725\u8734\uff09\u8fb9\u957f\u4e3a1\n\n\u63a5\u7740\uff0c\u6211\u4eec\u628a\u5404\u4e2a\u77f3\u67f1\u7684\u5165\u53e3\u4e0e\u51fa\u53e3\u8fde\u8fb9\uff08\u8fb9\u957f\u4e3a\u77f3\u67f1\u9ad8\u5ea6\uff09\n\n\u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u628a\u5404\u4e2a\u8ddd\u79bb\u4e0d\u8d85\u8fc7d\u7684\u77f3\u67f1\u8fde\u8fb9\uff1a\u51fa\u53e3---\u5165\u53e3\n\n\u6700\u540e\uff0c\u6211\u4eec\u628a\u5404\u4e2a\u77f3\u67f1\u4e0e\u6c47\u70b9\u8fde\u8fb9\uff08\u53ef\u4ee5\u8df3\u51fa\u8fb9\u754c\uff09\n\n\u4e0a\u56fe:\n\n![](https://cdn.luogu.com.cn/upload/pic/18181.png )\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define ll long long\n#define max(x,y) ((x)>(y)?(x):(y))\n#define min(x,y) ((x)<(y)?(x):(y))\n#define fur(i,x,y) for(i=x;i<=y;i++)\n#define fdr(i,x,y) for(i=x;i>=y;i--)\n#define Fur(i,x,y) for(ll i=x;i<=y;i++)\n#define Fdr(x,y) for(ll i=x;i>=y;i--)\n#define in2(x,y) in(x);in(y)\n#define in3(x,y,z) in2(x,y);in(z)\n#define in4(a,b,c,d) in2(a,b);in2(c,d)\n#define clr(x,y) memset(x,y,sizeof(x))\n#define cpy(x,y) memcpy(x,y,sizeof(x))\n#define fl(i,x) for(ll i=head[x],to;to=e[i].to,i;i=e[i].next)\n#define inf 233333333\nusing namespace std;\n/*---------------------------------------*/\nnamespace fib{char b[300000]= {},*f=b;}\n#define gc ((*fib::f)?(*(fib ::f++)):(fgets(fib::b,sizeof(fib::b),stdin)?(fib::f=fib::b,*(fib::f++)):-1))\ninline void in(ll &x){x=0;char c;bool f=0;while((c=gc)>'9'||c<'0')if(c=='-')f=!f;x=c-48;while((c=gc)<='9'&&c>='0')x=x*10+c-48;if(f)x=-x;}\nnamespace fob{char b[300000]= {},*f=b,*g=b+300000-2;}\n#define pob (fwrite(fob::b,sizeof(char),fob::f-fob::b,stdout),fob::f=fob::b,0)\n#define pc(x) (*(fob::f++)=(x),(fob::f==fob::g)?pob:0)\nstruct foce{~foce(){pob;fflush(stdout);}} _foce;\nnamespace ib{char b[100];}\ninline void out(ll x){if(x==0){pc(48);return;}if(x<0){pc('-');x=-x;}char *s=ib::b;while(x) *(++s)=x%10,x/=10;while(s!=ib::b) pc((*(s--))+48);}\ninline void outn(ll x){out(x);pc('\\n');}\ninline void swap(ll &x,ll &y){ll t=x;x=y;y=t;}\ninline ll jdz(ll x){return x>=0?x:-x;}\n/*------------------------------------------------------------------------------------------------*/\n\n/*------------------------------------------------------------------------------------------------*/\n#define N 5001\nstruct edge{ll w,to,next;}e[N*N/4];\nll head[N],n,m,r,c,k,st,ed,cnt=2,q[N],d[N],b=0,ps=1,ans=0;\nbool v[21][21];\ninline void add(ll x,ll y,ll w){\n\te[cnt].w=w;e[cnt].to=y;e[cnt].next=head[x];head[x]=cnt++;\n\tswap(x,y);e[cnt].w=0;e[cnt].to=y;e[cnt].next=head[x];head[x]=cnt++;\n}\ninline bool bfs(){\n\tll h=0,t=1,x;clr(d,0);\n\tq[h]=st;d[st]=1;\n\twhile(h<t){\n\t\tx=q[h++];if(x==ed)return 1;\n\t\tfl(i,x)if(e[i].w&&!d[to]){d[to]=d[x]+1;q[t++]=to;}\n\t}return 0;\n}\ninline ll dfs(ll x,ll mf){\n\tif(x==ed)return mf;\n\tll u=0,w;\n\tfl(i,x)\n\tif(e[i].w&&d[to]==d[x]+1){\n\t\tw=mf-u;\n\t\tw=dfs(to,min(w,e[i].w));\n\t\te[i].w-=w;e[i^1].w+=w;\n\t\tu+=w;\n\t\tif(u==mf)return u;\n\t}\n\tif(!u)d[x]=-1;\n\treturn u;\n}\ninline bool pd(ll x,ll y){return x*x+y*y<=k*k;}\nstruct sz{ll l,r,x,y;}p[N];\nint main(){\n\tin3(r,c,k);ed=1;\n\tchar s[21];\n\tFur(i,1,r){\n\t\tscanf(\"%s\",s+1);\n\t\tFur(j,1,c)\n\t\tif(s[j]!=48){\n\t\t\tp[++b].l=++ps;p[b].r=++ps;add(ps-1,ps,s[j]-48);\n\t\t\tp[b].x=i;p[b].y=j;\n\t\t\tif(i<=k||j<=k||r-i+1<=k||c-j+1<=k)add(ps,ed,inf);\n\t\t}\n\t}\n\tFur(i,1,b)Fur(j,i+1,b)\n\tif(pd(p[i].x-p[j].x,p[i].y-p[j].y))add(p[i].r,p[j].l,inf),add(p[j].r,p[i].l,inf);\n\tFur(i,1,r){scanf(\"%s\",s+1);Fur(j,1,c)if(s[j]=='L')ans--,v[i][j]=1;}st=ps+1;\n\tFur(i,1,b)if(v[p[i].x][p[i].y])add(st,p[i].l,1);\n\t\n\twhile(bfs())ans+=dfs(st,inf);\n\tout(-ans);\n}\n\n/*\n\n*/\n```",
        "postTime": 1524845326,
        "uid": 36532,
        "name": "localhost",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u5efa\u8fb9\u8981\u7528\u5230\u70b9\n\n\u77f3\u67f1\u7684\u9ad8\u5ea6\u5176\u5b9e\u5c31\u662f\u80fd\u7ecf\u8fc7\u8725\u8734\u7684\u4e2a\u6570\n\n\u5c06\u77f3\u67f1\u62c6\u5206\u6210\u4e24\u4e2a\u70b9\u4e00\u4e2a\u5165\u70b9\uff0c\u4e00\u4e2a\u51fa\u70b9\uff0c\u5176\u5bb9\u91cf\u5c31\u662f\u77f3\u67f1\u7684\u9ad8\u5ea6\u4e86\n\n\u5982\u679c\u4e24\u4e2a\u77f3\u67f1\u4e24\u4e24\u53ef\u4ee5\u5230\u8fbe\uff0c\u90a3\u4e48\u5728A\u7684\u51fa\u70b9\u5411B\u7684\u5165\u70b9\u5efa\u4e00\u6761\u8fb9\uff0c\u5176\u5bb9\u91cf\u4e3aINF\uff0c\u6765\u6a21\u62df\u8725\u8734\u8df3\u8fc7\u53bb\u7684\u8fc7\u7a0b\n\n\u865a\u62df\u4e24\u4e2a\u70b9\uff0c\u4e00\u4e2a\u4e3a\u6e90\u70b9s\uff0c\u4e00\u4e2a\u4e3a\u6c47\u70b9t\uff0c\u5982\u679c\u77f3\u67f1\u4e0a\u6709\u8725\u8734\u7684\u8bdd\uff0c\u4eces\u5230\u77f3\u67f1\u7684\u5165\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf\u4e3a1\uff0c\u8868\u793a\u8df3\u8fc7\u4e00\u53ea\u8725\u8734\n\n\u5982\u679c\u8725\u8734\u5728\u8fd9\u4e2a\u77f3\u67f1\u4e0a\u53ef\u4ee5\u8df3\u51fa\u5730\u56fe\uff0c\u90a3\u4e48\u4ece\u77f3\u67f1\u7684\u51fa\u70b9\u5411t\u8fde\u4e00\u6761\u8fb9\u5bb9\u91cf\u4e3aINF\uff0c\u6a21\u62df\u8725\u8734\u8df3\u7684\u8fc7\u7a0b\n\n\u8fd9\u6837\u7684\u8bdd\u8dd1\u4eces\u5230t\u7684\u6700\u5927\u6d41\u5c31\u662f\u8725\u8734\u9003\u51fa\u7684\u6700\u5927\u6570\u4e86\uff0c\u518d\u7528\u8725\u8734\u7684\u603b\u6570\u4e00\u51cf\u5c31\u662f\u7b54\u6848\u4e86\n\n\u6211\u7528\u7684\u662fEK\uff0c\u61d2\u5f97\u6539Dinci\uff0c\u7528\u7684\u77e9\u9635\uff0c\u53cd\u6b63\u56fe\u5c0f\n\nAC\u4ee3\u7801\u5982\u4e0b\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <queue>  \n#include <cstring>\nusing namespace std;\nconst int INF=0x7fffffff;\nint n,m,d;\nchar high[1001][1001];\nint map[1010][1010];\nint cnt;\nint ans;\nint in[1001][1001];\nint flow[10001];\nint pre[10001];\nqueue<int> dl;\nvoid make_map(int x,int y)  \n{  \n  int now=in[x][y]+1;  \n  for (int i=1;i<=n;i++)  \n    for (int j=1;j<=m;j++)  \n      if((i!=x||j!=y)&&(high[i][j]>'0'))  \n      {  \n        if (d*d>=(x-i)*(x-i)+(y-j)*(y-j))  \n          map[now][in[i][j]]=INF;  \n      }  \n}\nvoid go()\n{\n    for (int i=1;i<=n;i++)  \n     for (int j=1;j<=m;j++)  \n      if (i-d<1||i+d>n||j-d<1||j+d>m)  \n      {  \n        int dd=in[i][j]+1;  \n        map[dd][cnt]=INF;  \n      }  \n}\nint BFS(int s,int t)\n{\n    while(!dl.empty())\n     dl.pop();\n    memset(pre,-1,sizeof(pre));\n    pre[s]=0;\n    flow[s]=INF;\n    dl.push(s);\n    while(!dl.empty())\n    {\n        int dd=dl.front();\n        dl.pop();\n        if(dd==t)\n         break;\n        for(int i=1;i<=cnt;i++)\n         if(map[dd][i]>0&&pre[i]==-1)\n          {\n            pre[i]=dd;\n            flow[i]=min(flow[dd],map[dd][i]);\n            dl.push(i);\n          }\n    }\n    if(pre[t]==-1)\n     return -1;\n    else \n     return flow[t];\n}\nint max_flow(int s,int t)\n{\n    int mflow=0;\n    int d=0;\n    while((d=BFS(s,t))!=-1)\n    {\n        int k=t;\n        while(k!=s)\n         {\n            map[pre[k]][k]-=d;\n            map[k][pre[k]]+=d;\n            k=pre[k];\n         } \n        mflow+=d;\n    }\n    return mflow;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&d);\n    for(int i=1;i<=n;i++)\n     for(int j=1;j<=m;j++)\n      {\n        cin>>high[i][j];\n        if(high[i][j]!='0')\n         {\n            in[i][j]=++cnt;\n            map[cnt][++cnt]=high[i][j]-'0';\n         }\n      } \n    for(int i=1;i<=n;i++)\n     for(int j=1;j<=m;j++)\n      {\n        char c;\n        cin>>c;\n        if(c=='L') ans++,map[0][in[i][j]]=1;\n        if(high[i][j]>'0') make_map(i,j);\n      }\n    cnt++;\n    go();\n    printf(\"%d\",ans-max_flow(0,cnt));\n    return 0;\n}\n```",
        "postTime": 1493361294,
        "uid": 19842,
        "name": "\u534a\u4ed9\u80e1\u5c0f\u6843",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "\u5148%ZYF....Orz\n\nLS\u7684EK\u6bd4\u6211\u7684Dinic\u8dd1\u7684\u8981\u5febOrz\n\n\n\u505a\u6cd5\u65e0\u5dee\u522b\uff0c\u8d34\u4e00\u53d1Dinic\u7684\u6a21\u677f\u3002\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#define INF 5000\nusing namespace std;\n\nint cnt,d[10005];\nstruct node\n{    int u,v,w,next;};\nnode e[100005];\nint head[100005];\nint tot;\nint a[105][105];\nint b[105][105][5];\nint c[100005][5];\nint n,m,jl,S,T,num,ans;\n\nint min(int x,int y){ if (x<y) return x;else return y;}\nvoid ins(int u,int v,int w)\n{    cnt++;\n    e[cnt].w=w;e[cnt].u=u;e[cnt].v=v;\n    e[cnt].next=head[u];head[u]=cnt;\n}\nvoid insert(int u,int v,int w)\n{    ins(u,v,w);ins(v,u,0);}\nvoid insert2(int x,int y)\n{    tot++;\n    b[x][y][1]=tot;\n    c[tot][1]=x;c[tot][2]=y;c[tot][3]=1;\n    tot++;\n    b[x][y][2]=tot;\n    c[tot][1]=x;c[tot][2]=y;c[tot][3]=2;\n}\nbool check(int x2,int y2,int x1,int y1)\n{    if (((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2))<=jl*jl)\n        return 1;\n    else return 0;\n}\n\nbool build()\n{\n    int l=0,r=1;\n    int q[10005];\n    memset(d,-1,sizeof(d));\n    q[1]=S;d[S]=0;\n    while (l<r)\n    {    l++;\n        int x=q[l];\n        for (int i=head[x];i;i=e[i].next)\n        {    int y=e[i].v;\n            if (e[i].w and d[y]==-1)\n            {    d[y]=d[x]+1;\n                r++;\n                q[r]=y;\n                if (y==T) return 1;\n            }\n        }\n    }    return 0;\n}\n\nint find(int now,int flow)\n{\n    int ret,w=0;\n    if (now==T) return flow;\n    for (int i=head[now];i and w<flow;i=e[i].next)\n    {    int y=e[i].v;\n        if (e[i].w and d[y]==d[now]+1 and (ret=find(y,min(flow-w,e[i].w))))\n        {    e[i].w-=ret;e[i xor 1].w+=ret;w+=ret;}\n    }\n    if (w==0) d[now]=-1;\n    return w;\n}\n\nint dinic()\n{\n    int ans=0;\n    while (build())\n    {\n        while (1)\n        {    int flow=find(S,INF);\n            if (flow==0) break;\n            ans+=flow;\n        }\n    }\n    return ans;\n}\n\nint main()\n{\n    memset(a,0,sizeof(a));\n    memset(b,0,sizeof(b));\n    memset(c,0,sizeof(c));\n    memset(head,0,sizeof(head));\n    memset(e,0,sizeof(e));\n    \n    scanf(\"%d%d%d\",&n,&m,&jl);\n    num=0;tot=0;cnt=1;\n    S=0;T=INF;\n    for (int i=1;i<=n;i++)\n    {    char cha[1005];\n        scanf(\"%s\",cha);\n        for (int j=1;j<=m;j++)\n        {    a[i][j]=cha[j-1]-'0';\n            if (a[i][j]!=0)\n            {    insert2(i,j);\n                insert(b[i][j][1],b[i][j][2],a[i][j]);\n                for (int k=1;k<=tot;k++)\n                {    if (check(i,j,c[k][1],c[k][2]))\n                    {    if (c[k][3]==1)\n                            insert(b[i][j][2],k,INF);\n                        else insert(k,b[i][j][1],INF);\n                    }\n            }    }\n    }    }\n    for (int i=1;i<=n;i++)\n    {    char cha[1005];\n        scanf(\"%s\",cha);\n        for (int j=1;j<=m;j++)\n        {    if (cha[j-1]=='L')    \n            {ans++;insert(S,b[i][j][1],1);}\n        }\n    }\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=m;j++)\n            if ((i<=jl or j<=jl or (n-i+1)<=jl or (m-j+1)<=jl) and a[i][j]!=0)\n            {    insert(b[i][j][2],T,INF);}\n    \n    printf(\"%d\\n\",ans-dinic());\n}\n\n```",
        "postTime": 1457335979,
        "uid": 14269,
        "name": "\u5730\u970a\u7684\u4e1a\u706b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "# \u5199\u5728\u524d\u9762\uff1a\n\u5982\u60f3\u83b7\u53d6\u66f4\u4f73\u9605\u8bfb\u6548\u679c\uff0c\u8bf7\u70b9\u51fb[\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/8981640)\uff0c\u4efb\u4f55\u7591\u95ee\u6b22\u8fce\u79c1\u4fe1\u4f5c\u8005!\n\n# \u9898\u76ee\u94fe\u63a5\uff1a\nhttps://www.luogu.org/problemnew/show/P2472\n# \u5206\u6790\uff1a\n\u8fd9\u9053\u9898\u7528\u6700\u5927\u6d41\u89e3\u51b3\u3002\n\n\u9996\u5148\u6784\u5efa\u6a21\u578b\u3002\n\n\u4e00\u6839\u67f1\u5b50\u53ef\u4ee5\u8df3\u5165\u548c\u8df3\u51fa\uff0c\u4e8e\u662f\u62c6\u6210\u4e24\u4e2a\u70b9\uff1a\u5165\u70b9\u548c\u51fa\u70b9\u3002\n\n\u6bcf\u4e00\u6839\u67f1\u5b50\u7684\u5165\u70b9\u548c\u51fa\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u9ad8\u5ea6\u7684\u8fb9\uff0c\u6765\u9650\u5236\u8725\u8734\u8df3\u5165\u7684\u6b21\u6570\u3002\n\n\u5f53\u67f1\u5b50a\u53ef\u4ee5\u8c03\u5230\u67f1\u5b50b\u65f6\uff0c\u5c31\u4ecea\u7684\u51fa\u70b9\u5411b\u7684\u5165\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cfinf\u3002\n\nS\u5411\u6240\u6709\u6709\u8725\u8734\u7684\u67f1\u5b50\u7684\u5165\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a1\n\nT\u8868\u793a\u5730\u56fe\u5916\u4e00\u70b9\uff0c\u5f53\u4e00\u6839\u67f1\u5b50\u80fd\u8df3\u5230\u5730\u56fe\u5916\u65f6\uff0c\u5219\u51fa\u70b9\u5411T\u8fde\u6d41\u91cf\u4e3ainf\u7684\u8fb9\u3002\n\n\u7136\u540e\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n**\u8fd9\u91cc\u8981\u6ce8\u610f\u6570\u7ec4\u7684\u8303\u56f4\u4ee5\u53ca\u62c6\u70b9\u3002**\n\n# \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<iostream> \n#define inf 0x7fffffff\nusing namespace std;\nint s,t,ans;\nint d[1005];\nstruct edge\n{\n\tint to,val,rev;\n\tedge(int _to,int _val,int _rev)\n\t{\n\t\tto=_to;\n\t\tval=_val;\n\t\trev=_rev;\n\t}\n};\nvector<edge>e[1005]; \nvoid add(int x,int y,int w)\n{\n\te[x].push_back(edge(y,w,e[y].size()));\n\te[y].push_back(edge(x,0,e[x].size()-1)); \n}\nbool bfs()\n{\n    memset(d, -1, sizeof(d));\n    queue<int> q;\n    q.push(s);\n    d[s]=0;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=0;i<e[x].size();i++)\n        {\n            int y=e[x][i].to;\n            if(d[y]==-1 && e[x][i].val)\n            {\n                q.push(y);\n                d[y]=d[x]+1;\n            }\n        }\n    }\n    if(d[t]==-1)\n        return 0;\n    else\n        return 1;\n}\n\nint dfs(int x,int low)\n{\n    if(x==t || low==0)\n        return low;\n    int totflow=0; \n    for(int i=0;i<e[x].size();i++)\n    {\n        int y=e[x][i].to;\n        int rev=e[x][i].rev;\n        if(d[y]==d[x]+1 && e[x][i].val) \n        {\n            int a=dfs(y,min(low,e[x][i].val));\n            e[x][i].val-=a;\n            e[y][rev].val+=a;\n            low-=a;\n            totflow+=a;\n            if(low==0)\n                return totflow;\n        }\n    }\n    if(low!=0)\n        d[x]=-1;\n    return totflow;\n}\n\nvoid dinic()\n{\n\twhile(bfs())\n\t{\n\t\tans+=dfs(s,inf);\n\t}\n}\nint main()\n{\n\tint n,m,c,cnt=0;\n\tchar ss;\n\tscanf(\"%d%d%d\",&n,&m,&c);\n\ts=0,t=n*m*2+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tcin>>ss;\n\t\t\tif(ss>'0')\n\t\t\t{\n\t\t\t\tadd((i-1)*m+j,(i-1)*m+j+n*m,ss-'0');\n\t\t\t} \n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tcin>>ss;\n\t\t\tif(ss=='L')\n\t\t\t{\n\t\t\t\tadd(s,(i-1)*m+j,1);\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(i+c>n||i-c<1||j+c>m||j-c<1)\n\t\t\t{\n\t\t\t\tadd((i-1)*m+j+n*m,t,inf);\n\t\t\t}\n\t\t}\n\t} \n\tfor(int x1=1;x1<=n;x1++)\n\t{\n\t\tfor(int y1=1;y1<=m;y1++)\n\t\t{\n\t\t\tfor(int x2=1;x2<=n;x2++)\n\t\t\t{\n\t\t\t\tfor(int y2=1;y2<=m;y2++)\n\t\t\t\t{\n\t\t\t\t\tif((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)<=c*c)\n\t\t\t\t\t{\n\t\t\t\t\t\tadd((x1-1)*m+y1+n*m,(x2-1)*m+y2,inf);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdinic(); \n\tprintf(\"%d\",cnt-ans); \n\treturn 0;\n}\n```\n\n",
        "postTime": 1556966628,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    },
    {
        "content": "### [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/10316584.html )\n\n### [\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2472)\n\n\u9898\u76ee\u8981\u6c42\u65e0\u6cd5\u9003\u79bb\u7684\u6700\u5c11\u6709\u591a\u5c11\n\n\u76f4\u63a5\u505a\u80af\u5b9a\u4e0d\u597d\u505a\uff0c\u6211\u4eec\u5e2e\u9898\u76ee\u53d8\u4e00\u4e2a\u8bf4\u6cd5\uff1a\u6700\u591a\u80fd\u9003\u79bb\u591a\u5c11\n\n\u8fd9\u4e2a\u8be2\u95ee\u4e00\u770b\u5c31\u662f\u6700\u5927\u6d41\n\n\u8003\u8651\u5982\u4f55\u5efa\u56fe\uff1a\n\n1.\u5c06S\u548c\u6bcf\u4e00\u4e2a\u6709\u8725\u8734\u7684\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff08\u6bcf\u4e2a\u8725\u8734\u53ea\u80fd\u75281\u6b21\uff09\n\n2.\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff08\u4e00\u4e2a\u70b9\u7528\u6765\u8fde\u63a5\u4ece\u5176\u4ed6\u70b9\u8fde\u6765\u7684\u8fb9\uff0c\u53e6\u4e00\u4e2a\u70b9\u7528\u6765\u5411\u5176\u4ed6\u7684\u70b9\u8fde\u8fb9\uff0c\u4e0b\u540c\uff09\uff0c\u4ece\u524d\u4e00\u4e2a\u70b9\u5411\u540e\u4e00\u4e2a\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u77f3\u67f1\u9ad8\u5ea6\u7684\u8fb9\uff08\u6bcf\u4e2a\u77f3\u67f1\u53ea\u80fd\u8e29\u5b83\u7684\u9ad8\u5ea6\u6b21\uff09\n\n3.\u80fd\u4e92\u76f8\u5230\u8fbe\u7684\u77f3\u67f1\u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3ainf\u7684\u8fb9\n\n4.\u5c06\u6bcf\u4e00\u4e2a\u80fd\u8df3\u51fa\u5730\u56fe\u7684\u70b9\u5411T\u8fde\u4e00\u6761\u6d41\u91cf\u4e3ainf\u8fb9\n\n\u5efa\u56fe\u540e\u8dd1\u4e00\u4e0b\u6700\u5927\u6d41\u5373\u53ef\u6c42\u51fa\u7b54\u6848\n\n```cpp\n#include <bits/stdc++.h>\n#define N 1005\n#define M 80005\n#define inf (1<<30)\n#define getchar nc\nusing namespace std;\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf; \n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++; \n}\ninline int read()\n{\n    register int x=0,f=1;register char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return x*f;\n}\ninline void write(register int x)\n{\n    if(!x)putchar('0');if(x<0)x=-x,putchar('-');\n    static int sta[20];register int tot=0;\n    while(x)sta[tot++]=x%10,x/=10;\n    while(tot)putchar(sta[--tot]+48);\n}\ninline int Min(register int a,register int b)\n{\n    return a<b?a:b;\n}\ninline int Max(register int a,register int b)\n{\n    return a>b?a:b;\n}\nstruct node{\n    int to,next,v;\n}e[M];\nint head[N],cnt=1;\ninline void add(register int u,register int v,register int val)\n{\n    e[++cnt]=(node){v,head[u],val};\n    head[u]=cnt;\n}\nint n,s,t,maxflow=0,sum=0;\nint px[N],py[N],tot=0; \nint dep[N],gap[N],cur[N];\ninline void bfs()\n{\n    memset(dep,-1,sizeof(dep));\n    memset(gap,0,sizeof(gap));\n    dep[t]=0;\n    ++gap[dep[t]];\n    queue<int> q;\n    q.push(t);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(register int i=head[u];i;i=e[i].next)\n        {\n            int v=e[i].to;\n            if(dep[v]!=-1)\n                continue;\n            q.push(v);\n            dep[v]=dep[u]+1;\n            ++gap[dep[v]];\n        }\n    }\n}\ninline int dfs(register int u,register int flow)\n{\n    if(u==t)\n    {\n        maxflow+=flow;\n        return flow;\n    }\n    int used=0;\n    for(register int i=cur[u];i;i=e[i].next)\n    {\n        cur[u]=i;\n        int v=e[i].to;\n        if(e[i].v&&dep[v]+1==dep[u])\n        {\n            int tmp=dfs(v,Min(e[i].v,flow-used));\n            if(tmp)\n            {\n                e[i].v-=tmp;\n                e[i^1].v+=tmp;\n                used+=tmp;\n            }\n            if(used==flow)\n                return used;\n        }\n    }\n    --gap[dep[u]++]==0?dep[s]=n+1:++gap[dep[u]];\n    return used;\n}\ninline void ISAP()\n{\n    maxflow=0;\n    bfs();\n    while(dep[s]<n)\n    {\n        memcpy(cur,head,sizeof(head));\n        dfs(s,inf);\n    }\n}\nint main()\n{\n    int r=read(),c=read(),d=read();\n    n=r*c,s=0,t=(n<<1)+1;\n    for(register int i=1;i<=r;++i)\n        for(register int j=1;j<=c;++j)\n        {\n            char ch=getchar();\n            while(ch!='0'&&ch!='1'&&ch!='2'&&ch!='3')\n                ch=getchar();\n            ch-=48;\n            if(ch)\n            {\n                add(c*(i-1)+j,c*(i-1)+j+n,ch),add(c*(i-1)+j+n,c*(i-1)+j,0);\n                if(i<=d||i+d>r||j<=d||j+d>c)\n                    add(c*(i-1)+j+n,t,inf),add(t,c*(i-1)+j+n,0);\n                px[++tot]=i,py[tot]=j; \n            }\n        }\n    for(register int i=1;i<=tot;++i)\n        for(register int j=i+1;j<=tot;++j)\n            if(d*d>=(px[i]-px[j])*(px[i]-px[j])+(py[i]-py[j])*(py[i]-py[j]))\n            {\n                add(c*(px[i]-1)+py[i]+n,c*(px[j]-1)+py[j],inf),add(c*(px[j]-1)+py[j],c*(px[i]-1)+py[i]+n,0);\n                add(c*(px[j]-1)+py[j]+n,c*(px[i]-1)+py[i],inf),add(c*(px[i]-1)+py[i],c*(px[j]-1)+py[j]+n,0);\n            }\n    for(register int i=1;i<=r;++i)\n        for(register int j=1;j<=c;++j)\n        {\n            char ch=getchar();\n            while(ch!='.'&&ch!='L')\n                ch=getchar();\n            if(ch=='L')\n                add(s,c*(i-1)+j,1),add(c*(i-1)+j,s,0),++sum;\n        }\n    ISAP();\n    write(sum-maxflow);\n    return 0;\n}\n```",
        "postTime": 1548333083,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2472 \u3010[SCOI2007]\u8725\u8734\u3011"
    }
]