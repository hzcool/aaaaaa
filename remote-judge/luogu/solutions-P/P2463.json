[
    {
        "content": "\u62b5\u5236mhr(@\u660e\u6708\u306e\u536b\u2014\u2014AH)\u66b4\u529b\u9898\u89e3 \u4ece\u6211\u505a\u8d77\uff01\n\nSA\u591a\u597d\u554a\n\n\u672c\u9898\u6709\u591a\u79cd\u89e3\u6cd5 \u4f46\u662f\u672c\u849f\u84bb\u53ea\u4f1a\u540e\u7f00\u6570\u7ec4\n\n\u5173\u4e8e\u540e\u7f00\u6570\u7ec4\u7684\u8be6\u7ec6\u8bb2\u89e3\uff1a\n\n[\u849f\u84bb\u7684\u535a\u5ba2](https://xminh.github.io/)\n\n\u6211\u4eec\u5148\u628a\u6240\u6709\u4e32\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7528\u540e\u7f00\u6570\u7ec4\u6c42\u51faLCP\uff0c\u7136\u540e\u4e8c\u5206\u957f\u5ea6\uff0c\u6bcf\u6b21\u4ece\u5934\u5230\u5c3e\u626b\u4e00\u904d\u3002\n\n\u4f46\u662f\u8981\u6ce8\u610f\u8fde\u63a5\u7684\u65f6\u5019\u8981\u52a0\u5206\u5272\u6807\u8bb0\uff0c\u8fd9\u4e2a\u53ea\u9700\u8981\u5f80\u4e24\u4e2a\u4e32\u4e2d\u95f4\u653e\u4e00\u4e2a\u5927\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6839\u636eLCP Theorem(\u8bc1\u660e\u8fc7\u7a0b\u89c1\u6211\u535a\u5ba2)\n\nLCP(i,k)=min(LCP(j,j-1)) \u5bf9\u4e8e\u4efb\u610f1<i<=j<=k<=n\n\n\u8bbeheight[i]=LCP(i,i-1)\n\n\u53ea\u8981\u6709n\u4e2a>=len\u7684height\u4e14\u5176\u9996\u5b57\u6bcd\u5c5e\u4e8e\u4e0d\u540c\u7684\u4e32\u5c31\u53ef\u4ee5\u4e86\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#define Big (1000000000 + 10)\n#define maxn 111111\nusing namespace std;\nint sa[maxn],rk[maxn],b[maxn],c[maxn],x[maxn],y[maxn];\nint height[maxn],stack[maxn],id[maxn],len[1010],a[1010][1010];\nint num,cnt,n,m,l,r,maxx,minn,ans,top;\nbool vis[maxn]; \n\nint read() {\n\tchar c=getchar();\n\tint r=0,f=1;\n\twhile (!isdigit(c)) {\n\t\tif (c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile (isdigit(c)) {\n\t\tr=(r*10)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn r*f;\n}\n\nint min(int x,int y) {return x<y?x:y;}\nint max(int x,int y) {return x>y?x:y;}\n\nvoid Get_SA() {\n\tfor (int i=1;i<=n;i++) ++c[x[i]=b[i]];\n\tfor (int i=2;i<=m;i++) c[i]+=c[i-1];\n\tfor (int i=n;i>=1;i--) sa[c[x[i]]--]=i;\n\t\n\tfor (int k=1;k<=n;k<<=1) {\n\t\tcnt=0;\n\t\tfor (int i=n-k+1;i<=n;i++) y[++cnt]=i;\n\t\tfor (int i=1;i<=n;i++) if (sa[i]>k) y[++cnt]=sa[i]-k;\n\t\t\n\t\tfor (int i=1;i<=m;i++) c[i]=0;\n\t\tfor (int i=1;i<=n;i++) ++c[x[i]];\n\t\tfor (int i=2;i<=m;i++) c[i]+=c[i-1];\n\t\tfor (int i=n;i>=1;i--) sa[c[x[y[i]]]--]=y[i],y[i]=0;\n\t\t\n\t\tswap(x,y);\n\t\tx[sa[1]]=1; cnt=1;\n\t\tfor (int i=2;i<=n;i++) \n\t\t\tx[sa[i]]=(y[sa[i]]==y[sa[i-1]] && y[sa[i]+k]==y[sa[i-1]+k])?cnt:++cnt;\n\t\tif (cnt==n) break;\n\t\tm=cnt;\n\t}\n}\n\nvoid Get_Height() {\n\tint k=0;\n\tfor (int i=1;i<=n;i++) rk[sa[i]]=i;\n\tfor (int i=1;i<=n;i++) {\n\t\tif (rk[i]==1) continue;\n\t\tif (k) --k;\n\t\tint j=sa[rk[i]-1];\n\t\twhile (j+k<=n && i+k<=n && b[i+k]==b[j+k]) ++k;\n\t\theight[rk[i]]=k;\n\t}\n}\n\nbool check(int x) {\n\twhile (top) vis[stack[top--]]=0;\n\tfor (int i=1;i<=n;i++) {\n\t\tif (height[i]<x) {\n\t\t\twhile (top) vis[stack[top--]]=0;\n\t\t}\n\t\tif (!vis[id[sa[i]]]) {\n\t\t\tvis[id[sa[i]]]=1;\n\t\t\tstack[++top]=id[sa[i]];\n\t\t\tif (top==num) return 1; \n\t\t}\n\t}\n\treturn 0;\n}\n\nint main() {\n\tnum=read(); \n\tl=0;r=minn=Big;\n\tfor (int i=1;i<=num;i++) {\n\t\tlen[i]=read();\n\t\tfor (int j=1;j<=len[i];j++) {\n\t\t\ta[i][j]=read();\n\t\t\tif (j!=1) maxx=max(maxx,a[i][j]-a[i][j-1]);\n\t\t}\n\t\tr=min(r,len[i]-1);\n\t}\n\tfor (int i=1;i<=num;i++) {\n\t\tfor (int j=2;j<=len[i];j++) {\n\t\t\tb[++n]=a[i][j]-a[i][j-1];\n\t\t\tid[n]=i;\n\t\t\tminn=min(minn,b[n]);\n\t\t}\n\t\tb[++n]=++maxx;\n\t}\n\tfor (int i=1;i<=n;i++) {\n\t\tb[i]=b[i]-minn+1;\n\t\tm=max(m,b[i]);\n\t}\n\tGet_SA();\n\tGet_Height();\n\twhile (l<=r) {\n\t\tint mid=(l+r)>>1;\n\t\tif (check(mid)) {\n\t\t\tl=mid+1;\n\t\t\tans=mid;\n\t\t}\n\t\telse r=mid-1;\n\t}\n\tprintf(\"%d\",ans+1);\n}\n```",
        "postTime": 1522027462,
        "uid": 43470,
        "name": "xMinh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "\u6211\u53c8\u6765\u53d1\u9898\u89e3\u4e86\n\n\u6ca1\u9519\u6211\u4eec\u6559\u7ec3\u8003\u573a\u4e0a\u53c8\u53d1\u4e86\u8fd9\u9053\u9898~~\uff08\u7136\u540e\u6211\u53c8\u7528\u66b4\u529bA\u6389\u4e86~~\n\n\u4e0d\u8981\u5dee\u5206\uff0c\u76f4\u63a5\u4e8c\u5206\u957f\u5ea6\u66b4\u529b\u5339\u914d\uff0c\u9047\u5230\u4e0d\u5339\u914d\u7684\u8df3\u51fa\u5373\u53ef\uff0c\u671f\u671b\u590d\u6742\u5ea6O(n\u00b7mlog min(m))\uff0c\u5b9e\u9645\u60c5\u51b5\u4e0b\u4e0d\u5f00O2\uff0c20ms\uff0c\u6700\u4f18\u89e3\u7b2c\u4e09\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int INF=2e9;\n\nint n;\nint che[105];\nstruct rp{\n\tint num[105];\n}m[1005];\n\nbool cmp(rp a,rp b){\n\treturn a.num[0]<b.num[0];\n}\n\nbool check3(int len,int x){\n\tfor(register int i=1;i<=m[x].num[0]-len+1;++i){\n\t\tint ck=che[1]-m[x].num[i];\n\t\tbool fl=0;\n\t\tfor(register int j=2;j<=len;++j){\n\t\t\tif(che[j]-m[x].num[i+j-1]!=ck){\n\t\t\t\tfl=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}if(!fl) return 1;\n\t}return 0;\n}\n\nbool check2(int len){\n\tfor(register int i=2;i<=n;++i){\n\t\tif(!check3(len,i)) return 0;\n\t}return 1;\n}\n\nbool check(int len){\n\tfor(register int i=1;i<=m[1].num[0]-len+1;++i){\n\t\tfor(register int j=1;j<=len;++j){\n\t\t\tche[j]=m[1].num[i+j-1];\n\t\t}if(check2(len)) return 1;\n\t}return 0;\n}\n\nint main(){\n\tfreopen(\"card.in\",\"r\",stdin);\n\tfreopen(\"card.out\",\"w\",stdout);\n\t\n\tscanf(\"%d\",&n);m[0].num[0]=INF;\n\tfor(register int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&m[i].num[0]);\n\t\tfor(register int j=1;j<=m[i].num[0];++j){\n\t\t\tscanf(\"%d\",&m[i].num[j]);\n\t\t}\n\t}sort(m+1,m+n+1,cmp);\n\tm[0].num[0]=m[1].num[0];\n\t\n\tint l=1,r=m[0].num[0];\n\twhile(l<r){\n\t\tint mid=(l+r+1)>>1;\n\t\tif(check(mid)) l=mid;\n\t\telse r=mid-1;\n\t}printf(\"%d\\n\",l);\n\t\n\treturn 0;\n}\n```\n\u8ddf\u6211\u4e00\u8d77\u5927\u58f0\u558a\uff1a\n\u6253\u8868\u627e\u89c4\u5f8b\uff01\n\u9a97\u5206\u8fc7\u6837\u4f8b\uff01\n\u66b4\u529b\u51fa\u5947\u8ff9\uff01",
        "postTime": 1521958947,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problemnew/show/P2463)\n\n\u6b64\u9898\u771f\u6709\u8da3\u554a\uff0c\u4f46\u662f\u4e0d\u96be\uff08\u540e\u7f00\u6570\u7ec4\u77ac\u79d2\uff09\n\n\u9898\u76ee\u4e2d\u7684\u76f8\u540c\u5b9a\u4e49\u4e3a**\u4e24\u4e2a\u5b50\u4e32\u957f\u5ea6\u76f8\u540c\u4e14\u4e00\u4e2a\u4e32\u7684\u5168\u90e8\u5143\u7d20\u52a0\u4e0a\u4e00\u4e2a\u6570\u5c31\u4f1a\u53d8\u6210\u53e6\u4e00\u4e2a\u4e32\u3002**\n\n\u5982\u679cA\u4e32\u548cB\u4e32\u76f8\u540c,\u90a3\u4e48\u4ed6\u4eec$a[pos]-a[pos+1]$\u90fd\u8981\u76f8\u540c\uff0c\u800c\u5982\u679c$A,B$\u7684\u76f8\u90bb\u539f\u7d20\u5dee\u503c\u76f8\u540c\u4e5f\u80fd\u9000\u51fa$A,B$\u662f\u76f8\u540c\u7684\n\n\u6bd4\u5982\u7ed9\u5b9a $A:1,3,4,6 B :2,4,5,7 $\uff0c\u5c06\u524d\u4e00\u4e2a\u51cf\u53bb\u540e\u4e00\u4e2a\u53d8\u6210$A:-2,-1,-2,6 ,B:-2,-1,-2,7$\u4f46\u662f\u53d1\u73b0\u6700\u540e\u4e00\u4e2a\u4e0d\u4e00\u5b9a\u76f8\u540c\uff0c\u6240\u4ee5\u4e3alcp+1\uff08\u6ce8\u610f\uff01\u53ef\u80fd\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u76f8\u540c,\u90a3\u4e48+1\u5c31\u4e0d\u5bf9\u4e86\uff0c\u8fd9\u65f6\u968f\u673a\u5316\u5c31\u5389\u5bb3\u4e86,\u6211\u4eec**\u7ed9\u672b\u5c3e+rand()%p**,p\u968f\u610f\u53d6\u8fd9\u6837\u5c31\u5bb9\u6613\u63a5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u9664\u975erp\u5f88\u5dee\u88ab\u5361\uff09\n\n\u8fd9\u662f\u4e24\u4e2a\u4e32\u7684\u60c5\u51b5,\u8003\u8651\u8f6c\u5316\u4e3a$n$\u4e2a\u4e32\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5148**\u5c06n\u4e2a\u4e32\u4e32\u8d77\u6765**\uff0c\u4e2d\u95f4\u8fde\u4e0a\u4e00\u4e2a>1864\u7684\u6570,\u8fd9\u6837\u4e24\u4e2a\u4e0d\u540c\u7684\u4e32\u5c31\u4e0d\u4f1a\u5f53\u6210\u4e00\u4e2a\u4e32\u7b97lcp\u4e86\uff0c\u5426\u5219\u5047\u5982\u6709$A:1,2\\ \\ B:3,2,3 4\\ \\ C:1,2,3 5$(\u5df2\u5dee\u5206),\u90a3\u4e48\u4e32\u8d77\u6765\u53d8\u6210:$1,2,3,2,3,4,1,2,3,5$\u53d1\u73b0\u5176\u5b9e\u7b97\u51fa\u67653\u4e2a\u7684lcp\u4e3a2\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f1\n\n\u56e0\u4e3a2\u7684\u524d\u534a\u90e8\u5206\u88ab\u5f53\u62101\u7684\u540e\u534a\u90e8\u5206\u7b97\u4e86\uff0c\u4e3a\u4e86\u4e0d\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c31\u8981\u5728\u4e2d\u95f4\u52a0\u4e2a\u5206\u5272\u7684\u6570\n\n\u4e32\u8d77\u6765\u540e\u8dd1\u540e\u7f00\u6570\u7ec4\uff0c\u5f97\u5230rank(\u540e\u7f00\u6392\u540d),sa(\u7b2cx\u540d\u5728\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e)\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u51fan\u4e2a\u540e\u7f00\uff08\u5c5e\u4e8e\u4e0d\u540c\u5b57\u7b26\u4e32\uff09\u7684lcp+1\u5c31\u597d\u4e86\uff08\u4ec0\u4e48\uff1f\u8fd9\u8fd8\u4e0d\u5982\u66b4\u529b\uff1f\u90a3\u4f60\u53ef\u80fd\u8981\u56de\u53bb\u518d\u5b66\u4e00\u4e0b\u540e\u7f00\u6570\u7ec4\uff09\n\n\u5047\u8bbe$A$\u7684\u6392\u540d\u4e3a$x$,$B$\u7684\u6392\u540d\u4e3a$y(x<=y)$\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4e32$C$\u7684\u6392\u540d\u4e3a$z$\uff0c\u5982\u679c$z<x$\uff0c\u90a3\u4e48\u4f1a\u6709$lcp(B,C)<=lcp(A,C)$\uff0c\u5982\u679c$x<z<y$\u5c31\u4f1a\u6709lcp(B,C)>=lcp(A,C)\uff08\u4e0d\u77e5\u9053\u7684\u53bb\u6a21\u677f\u9898\u9898\u89e3\u770b\u770b\u5427\uff09\n\n\u8fd9\u6837\u53d1\u73b0\u5176\u5b9e\u6709\u5355\u8c03\u6027,\u6211\u4eec\u5047\u8bbe\u53ea\u8003\u8651\u6392\u540d\u4e3a$[1,R]$\u4e2d\u7684\u540e\u7f00\uff0c\uff08\u6700\u540e\u4e00\u4e2a\u5728R\uff09\uff0c\u53d1\u73b0\u5982\u679c$[2,R]$\u4e5f\u51fa\u73b0\u4e86$n$\u4e2a\u5b57\u7b26\u4e32\u7684\u67d0\u4e2a\u540e\u7f00\uff0c$[2,R]$\u7b54\u6848\u4e00\u5b9a>=$[1,R]$\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u51fa\u5982\u679c\u6392\u540d\u4e3a$[L+1,R]$\u662f\u5408\u6cd5\u7684([L,R]\u80af\u5b9a\u5408\u6cd5\uff0c\u56e0\u4e3a$R$\u589e\u52a0\u4e0d\u4f1a\u5bfc\u81f4\u67d0\u4e2a\u5b57\u7b26\u4e32\u51fa\u73b0\u5728[L,R]\u7684\u540e\u7f00\u6b21\u6570\u51cf\u5c11\uff0c\u53ea\u4f1a\u589e\u52a0)\uff0cL++\u5c31\u597d\u4e86\uff0c\u76f4\u5230\u4e00\u4e2a$[L+1,R]$\u4e0d\u5408\u6cd5\u7684\u4f4d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u4e86\uff0c\u5f53\u7136$cnt>=n$(\u5c31\u662f$\\sum{i=1}^{n}[num[i]!=0]$(num[i]\u4e3a\u7b2c$i$\u4e2a\u4e32\u5728\u6392\u540d$[L,R]$\u533a\u95f4\u5b58\u5728\u7684\u540e\u7f00\u4e2a\u6570))\u624d\u80fd\u66f4\u65b0\n\n\u5176\u5b9e\u5c31\u53d8\u6210\u4e86\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32A\u5728\u603b\u4e32\u4e0a\u7684\u8d77\u59cb\u4f4d\u7f6e\u5230\u672b\u5c3e\u4f4d\u7f6e\u67d3\u8272\uff08\u5c31\u5f88\u7b80\u5355\u4e86\u5427\uff09\n\n\u4e0a\u4ee3\u7801\uff08\u8fd8\u6709\u4e0d\u61c2\u5f97\u4f30\u8ba1\u770b\u4ee3\u7801\u4e5f\u90fd\u4f1a\u4e86\u5427\uff09\n\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <queue>\nusing namespace std;\ninline void read(int &x){\n    x=0;int f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    x*=f;\n}\n#define min_(a,b) (a<b?a:b)\n#define max_(a,b) (a>b?a:b)\nconst int N=1010,M=N*105;\nint n,m,c,cl,a[M],num[N],col[M],cnt;\nstruct my_SA{\n    int tax[M],rank[M],sa[M],tp[M],he[M],bit[M],s[20];\n    int to[M][20];\n    inline void qsort(){\n        for(int i=1;i<=m;++i)tax[i]=0;\n        for(int i=1;i<=c;++i)tax[rank[i]]++;\n        for(int i=1;i<=m;++i)tax[i]+=tax[i-1];\n        for(int i=c;i>=1;--i)sa[tax[rank[tp[i]]]--]=tp[i];\n    }inline void suffix_sort(){\n        m=5000;\n        for(int i=1;i<=c;++i){rank[i]=a[i];tp[i]=i;}\n        qsort();\n        for(int i=1,p=0;p<c;m=p,i<<=1){\n            p=0;\n            for(int j=1;j<=i;++j)tp[++p]=c-i+j;\n            for(int j=1;j<=c;++j)if(sa[j]>i)tp[++p]=sa[j]-i;\n            qsort();swap(rank,tp);\n            rank[sa[1]]=p=1;\n            for(int j=2;j<=c;++j)rank[sa[j]]=(tp[sa[j]]==tp[sa[j-1]]&&tp[sa[j]+i]==tp[sa[j-1]+i]?p:++p);\n        }\n    }inline void get_pre(){\n        int last=2;int x=0;\n        for(int i=1;i<=c;++i){bit[i]=x;if(i==last){x++;last<<=1;}}\n        int maxn=bit[c];s[0]=1;for(int i=1;i<=maxn;++i)s[i]=s[i-1]<<1;\n    }inline void get_he(){\n        int j,k=0;\n        for(int i=1;i<=c;++i){\n            if(k)k--;\n            j=sa[rank[i]-1];\n            while(a[i+k]==a[j+k]&&i+k<=c&&j+k<=c)k++;\n            he[rank[i]]=k;\n        }\n    }inline void pre_rmq(){\n        for(int i=1;i<=c;++i)to[i][0]=he[i];\n        for(int i=1;i<=bit[c];++i){\n            int p=s[i],q=s[i-1];\n            for(int j=1;j<=c;++j){\n                if(j+p-1<=c)to[j][i]=min_(to[j][i-1],to[j+q][i-1]);\n                else break;\n            }\n        }\n    }inline void init(){get_pre();suffix_sort();get_he();pre_rmq();}\n    inline int rmq(int L,int R){\n        if(L==R)return c-sa[L]+1;\n        L++;\n        int len=R-L+1,p=bit[len],q=s[p];\n        return min_(to[L][p],to[R-q+1][p]);\n    }\n    inline void slove(){\n        int L=1,R=1,ans=0;\n        for(;R<=c;++R){\n            if(col[sa[R]]>0){if(++num[col[sa[R]]]==1)cnt++;}\n            while(num[col[sa[L]]]>1){num[col[sa[L]]]--;L++;}\n            if(cnt>=n)ans=max_(ans,rmq(L,R)+1);\n        }printf(\"%d\\n\",ans);\n    }\n}T;\nint x;\nconst int mod=93;\ninline int get_rand(){x=x*x+7;return x%mod;}\nint main(){\n    read(n);cl=1864;int p;x=7;\n    for(int i=1;i<=n;++i){\n        read(m);p=get_rand();\n        for(int j=1;j<=m;++j){read(a[++c]);a[c]+=p;col[c]=i;}\n        for(int j=1;j<m;++j){a[c-m+j]-=a[c-m+j+1];}\n        a[++c]=++cl;col[c]=-1;\n    }int minn=1<<30;\n    for(int i=1;i<=c;++i)minn=min_(minn,a[i]);minn--;\n    for(int i=1;i<=c;++i)a[i]-=minn;\n    T.init();T.slove();\n    return 0;\n}\n\n```\n\uff08\u6c42\u968f\u673a\u6570\u5c45\u7136\u7528\u4e862ms\uff09",
        "postTime": 1551836946,
        "uid": 54113,
        "name": "ecnerwaIa",
        "ccfLevel": 0,
        "title": "P2463 [SDOI2008]Sandy\u7684\u5361\u7247"
    },
    {
        "content": "# \u6b64\u9898\u7eaf\u66b4\u529b\u53ef\u8fc7\n\n\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u6253\u66b4\u529b\u5462\uff0c\u6211\u66b4\u529b\u90fd\u8dd1108ms\uff0cAC\u7ef0\u7ef0\u6709\u4f59\u554a\uff01\n\n# \u601d\u8def\n\n\u5c06\u5e8f\u5217\u53d8\u6210\u5dee\u503c\u5e8f\u5217\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u627e\u5b8c\u5168\u76f8\u540c\u7684\u8fde\u7eed\u7684\u516c\u5171\u5b50\u5e8f\u5217\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u968f\u4fbf\u627e\u4e00\u4e2a\u5e8f\u5217\uff08\u627e\u7b2c\u4e00\u4e2a\u5c31\u53ef\u4ee5\uff09\uff0c\u679a\u4e3e\u4e00\u4e2a\u5de6\u7aef\u70b9\uff0c\u8ba9\u5176\u5b83n-1\u4e2a\u5e8f\u5217\u90fd\u4ece\u8fd9\u4e2a\u5de6\u7aef\u70b9\u5f00\u59cb\u5339\u914d\uff0c\u6700\u540e\u53d6\u4e00\u4e2a\u5339\u914d\u6700\u77ed\u7684\uff0c\u53bb\u548cans\u53d6max\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5f53\u7136\u6211\u4eec\u518d\u5339\u914d\u7684\u65f6\u5019\u5982\u679c\u5f53\u524d\u5339\u914d\u7684\u957f\u5ea6\u5df2\u7ecf\u8d85\u8fc7\u4e86\u4e4b\u524d\u7684\u4e00\u4e2a\u6700\u5c0f\u503c\u4e86\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u7ed3\u675f\u5339\u914d\uff0c\u56e0\u4e3a\u518d\u5339\u914d\u5c31\u6ca1\u6709\u7528\u4e86\u3002\n\n\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u770b\u4f3c\u4e0d\u53ef\u8fc7\uff0c\u4f46\u662f\u5b83\u5c31\u662f\u8fc7\u4e86\uff0c\u800c\u4e14\u8fd8\u8dd1\u5f97\u98de\u5feb\uff01\n\n# \u4ee3\u7801\n\n```\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <queue>\n#define R register\n#define eps 1e-12\n#define INF (1<<30)\n#define LL long long\n#define MM(x, y) memset(x, y, sizeof x)\n#define Fo(i, x, y) for(R int i=x; i<=y; ++i)\n#define Ro(i, x, y) for(R int i=x; i>=y; --i)\nusing namespace std;\ntemplate<typename T> inline T Max(R T x, R T y) {return x > y ? x : y;}\ntemplate<typename T> inline T Min(R T x, R T y) {return x < y ? x : y;}\ntemplate<typename T> inline void in(R T &x)\n{\n    static int ch; static bool flag;\n    for(flag=false, ch=getchar(); ch<'0'||ch>'9'; ch=getchar()) flag |= ch=='-';\n    for(x=0; ch>='0'&&ch<='9'; ch=getchar()) x = (x<<1) + (x<<3) + ch - '0';\n    x = flag ? -x : x;\n}\n/**********************************Samle***************************************/\nint n, A[1005][1005];\nint main()\n{\n\tin(n);\n\tFo(i, 1, n)\n\t{\n\t\tin(A[i][0]);\n\t\tFo(j, 1, A[i][0]) in(A[i][j]);\n\t}\n\tFo(i, 1, n)\n\t{\n\t\tA[i][0]--;\n\t\tif(A[i][0] == 0)\n\t\t{\n\t\t\tputs(\"1\");\n\t\t\treturn 0;\n\t\t}\n\t\tFo(j, 1, A[i][0]) A[i][j] = A[i][j+1] - A[i][j];\n\t}\n\tR int ans = 0;\n\tFo(l, 1, A[1][0])\n\t{\n\t\tR int r = A[1][0];\n\t\tFo(i, 2, n)\n\t\t{\n\t\t\tR int MX = 0;\n\t\t\tFo(j, 1, A[i][0])\n\t\t\t{\n\t\t\t\tif(A[i][j] == A[1][l])\n\t\t\t\t{\n\t\t\t\t\tR int p = j, re = l;\n\t\t\t\t\twhile(A[i][p] == A[1][re] && p<=A[i][0] && re<=r) ++re, ++p;\n\t\t\t\t\tMX = Max(MX, re-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tr = Min(r, MX);\n\t\t}\n\t\tans = Max(ans, r-l+1);\n\t}\n\tprintf(\"%d\\n\", ans+1);\n\treturn 0;\n}\n\n```",
        "postTime": 1517567558,
        "uid": 36268,
        "name": "Pine",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "\u5e7f\u544a\uff1a\u98df\u7528[$blog$](https://www.cnblogs.com/heyujun/p/10305521.html)\u4f53\u9a8c\u66f4\u4f73\n\n\u9996\u5148\u9898\u76ee\u7684\u533a\u95f4\u52a0\u5f88\u4e11\u5bf9\u5427\uff0c\n\n\u5c06\u6bcf\u4e2a\u4e32\u5dee\u5206\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\n\n\u6c42\uff1a\n\n\u7ed9\u5b9a$N$\u4e2a\u4e32\uff0c\u6c42\u4ed6\u4eec\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u3002\n\n\u600e\u4e48\u529e\u5462\uff0c\u6309\u7167\u540e\u7f00\u6570\u7ec4\u5e38\u7528\u5957\u8def\n\n\u6211\u4eec\u7528\u4e0d\u540c\u7684\u672a\u66fe\u7528\u8fc7\u7684\u5b57\u7b26\u5c06\u8fd9\u4e9b\u4e32\u8fde\u63a5\u8d77\u6765\n\n\u6211\u4eec\u5c06$lcp$\u5927\u4e8e$mid$\u7684\u4e32\u5206\u7ec4\n\n\u5982\u679c\u4e00\u7ec4\u5185\u4e32\u7684\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e$N$\u4e2a\uff0c\u5c31\u8bc1\u660e\u53ef\u4ee5$return\\;1$\n\n\u5426\u5219\u82e5\u6ca1\u6709\u4e00\u7ec4\u5927\u4e8e\u7b49\u4e8e$N$\u8fd4\u56de$0$\n\n\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring> \n#include <cmath> \n#include <algorithm>\nusing namespace std; \ninline int gi() {\n    register int data = 0, w = 1;\n    register char ch = 0;\n    while (!isdigit(ch) && ch != '-') ch = getchar(); \n    if (ch == '-') w = -1, ch = getchar();\n    while (isdigit(ch)) data = 10 * data + ch - '0', ch = getchar();\n    return w * data; \n}\nconst int MAX_N = 2e6 + 5; \nint N, T, a[MAX_N], b[MAX_N], vis[MAX_N]; \nint sa[MAX_N], rnk[MAX_N], lcp[MAX_N]; \nvoid GetSA() {\n#define cmp(i, j, k) (y[i] == y[j] && y[i + k] == y[j + k]) \n    static int x[MAX_N], y[MAX_N], bln[MAX_N];\n    int M = 1e6; \n    for (int i = 1; i <= N; i++) bln[x[i] = a[i]]++; \n    for (int i = 1; i <= M; i++) bln[i] += bln[i - 1]; \n    for (int i = N; i >= 1; i--) sa[bln[x[i]]--] = i; \n    for (int k = 1; k <= N; k <<= 1) { \n        int p = 0; \n        for (int i = 0; i <= M; i++) y[i] = 0; \n        for (int i = N - k + 1; i <= N; i++) y[++p] = i; \n        for (int i = 1; i <= N; i++) if (sa[i] > k) y[++p] = sa[i] - k; \n        for (int i = 0; i <= M; i++) bln[i] = 0; \n        for (int i = 1; i <= N; i++) bln[x[y[i]]]++; \n        for (int i = 1; i <= M; i++) bln[i] += bln[i - 1]; \n        for (int i = N; i >= 1; i--) sa[bln[x[y[i]]]--] = y[i]; \n        swap(x, y); x[sa[1]] = p = 1; \n        for (int i = 2; i <= N; i++) x[sa[i]] = cmp(sa[i], sa[i - 1], k) ? p : ++p; \n        if (p >= N) break;\n        M = p; \n    } \n}\nvoid GetLcp() { \n    for (int i = 1; i <= N; i++) rnk[sa[i]] = i; \n    for (int i = 1, j = 0; i <= N; i++) {\n        if (j) --j; \n        while (a[i + j] == a[sa[rnk[i] - 1] + j]) ++j; \n        lcp[rnk[i]] = j; \n    } \n} \nint col[MAX_N], tot; \nbool check(int v) {\n    ++tot; int cnt = 0; \n    for (int i = 1; i <= N; i++) { \n        if (lcp[i] < v) ++tot, cnt = 0; \n        if (col[vis[sa[i]]] != tot) col[vis[sa[i]]] = tot, ++cnt; \n        if (cnt == T) return 1; \n    } \n    return 0; \n} \nconst int dlt = 5e4; \nint main () { \n    T = gi(); \n    for (int i = 1; i <= T; i++) { \n        int m = gi(); \n        for (int j = 1; j <= m; j++) b[j] = gi(); \n        for (int j = 1; j <= m; j++) b[j] = b[j + 1] - b[j] + dlt; \n        for (int j = 1; j <= m; j++) a[++N] = b[j], vis[N] = i; \n        a[++N] = i + 5e5; \n    }\n    GetSA(); GetLcp(); \n    int l = 0, r = N, ans = 0; \n    while (l <= r) { \n        int mid = (l + r) >> 1; \n        if (check(mid)) l = mid + 1, ans = mid;\n        else r = mid - 1; \n    } \n    printf(\"%d\\n\", ans + 1); \n    return 0; \n} \n```",
        "postTime": 1550387424,
        "uid": 42506,
        "name": "\u4f55\u4fde\u5747",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u306eblog](http://www.cnblogs.com/dedicatus545/p/8900736.html)\n\n# \u601d\u8def\n\n\u8fd9\u9053\u9898\u91cc\u9762\u6709\u4e09\u4e2a\u4e3b\u8981\u95ee\u9898\uff1a\n\n1.\u7531\u201c\u6570\u503c\u76f8\u7b49\u201d\u53d8\u6210\u4e86\u201c\u52a0\u4e0a\u4e00\u4e2a\u6574\u6570\u4ee5\u540e\u6570\u503c\u76f8\u7b49\u201d\uff08\u51cf\u53bb\u7b49\u4ef7\u4e8e\u52a0\u8d1f\u6570\uff09\n\n2.\u7531\u201c\u6700\u591a\u5339\u914d\u591a\u5c11\u4f4d\uff08\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\uff09\u201d\u53d8\u6210\u4e86\u4ece\u201c\u4efb\u610f\u4e00\u4f4d\u5f00\u59cb\u5339\u914d\u201d\n\n3.\u7531\u201c\u5355\u6587\u672c\u4e32\u201d\u53d8\u6210\u4e86\u201c\u591a\u6587\u672c\u4e32\u201d\uff0c\u800c\u4e14\u662f\u6587\u672c\u4e32\u5185\u90e8\u81ea\u5df1\u5339\u914d\n\n\u6211\u4eec\u6309\u7167\u96be\u5ea6\u987a\u5e8f\uff083-1-2\uff09\u6765\u4f9d\u6b21\u89e3\u51b3\u4ed6\u4eec\n\n### \u95ee\u9898\u4e09\uff1a\u591a\u6587\u672c\u4e32\n\n\u8fd9\u4e2a\u95ee\u9898\u662f\u6700\u7b80\u5355\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7100\uff0c\u6700\u591a1000\u4e2a\u4e32\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u641e\u4e00\u4e2a\u4e32\u51fa\u6765\u6210\u4e3a\u6a21\u5f0f\u4e32\uff0c\u7136\u540e\u7528\u5b83\u53bb\u5339\u914d\u5269\u4e0b\u7684\u4e32\uff0c\u7ed3\u679c\u53d6min\u5c31\u884c\u4e86\n\n### \u95ee\u9898\u4e00\uff1a\u6570\u503c\u52a0\u4e0a\u6574\u6570\u76f8\u7b49\n\n\u8fd9\u4e2a\u95ee\u9898\u4e2d\u6211\u4eec\u8981\u8d2f\u5f7b\u4e00\u4e2a\u601d\u60f3\uff1a\u53d6\u4e0d\u53d8\u91cf\n\n\u8003\u8651\u4e00\u4e2a\u5e8f\u5217\uff0c\u5f53\u5b83\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u589e\u52a0\u4e86\u4e00\u5b9a\u503c\u4ee5\u540e\uff0c\u4ec0\u4e48\u8fd8\u662f\u4e0d\u53d8\u7684\uff1f\n\n\u6ca1\u9519\uff0c\u76f8\u90bb\u5143\u7d20\uff08\u6216\u8005\u8bf4\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\uff09\u7684**\u5dee\u503c**\n\n\u6240\u4ee5\uff0c\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u53ea\u8981\u628a\u539f\u6765\u7684\u5e8f\u5217\u53d8\u6210\u957f\u5ea6\u5c0f\u4e861\uff0c\u5143\u7d20\u4e3a\u539f\u6765\u5e8f\u5217\u76f8\u90bb\u4e24\u4f4d\u4e4b\u5dee\u7684\u65b0\u5e8f\u5217\u6765\u8dd1\u5339\u914d\uff0c\u6700\u540e\u628a\u7b54\u6848\u52a0\u4e00\u5c31\u597d\u4e86\n\n### \u95ee\u9898\u4e8c\uff1a\u53ef\u4ee5\u4ece\u6bcf\u4e00\u4f4d\u5f00\u59cb\u5339\u914d\n\n\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u89e3\u51b3\u4e86\u95ee\u9898\u4e09\u4ee5\u540e\u4e5f\u80fd\u8fce\u5203\u800c\u89e3\uff1a**\u6570\u636e\u8303\u56f4\u5b9e\u5728\u662f\u592a\uff01\u5c0f\uff01\u4e86\uff01**\n\n\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u679a\u4e3e\u6a21\u5f0f\u4e32\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u6c42\u51fanext\u6570\u7ec4\uff0c\u7136\u540e\u5bf9\u4e8e\u5269\u4e0b\u7684\u4e32\u6bcf\u4e00\u4e2a\u5339\u914d\u4e00\u4e0b\uff0c\u8fd8\u80fd\u817e\u51fa\u4e00\u534a\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u5927\u58f0\u558a\u51fa\uff1a\n\n## \u201czcy\u540a\u6253\u96c6\u8bad\u961f\uff01\u201d\n\n# Code\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define inf 1e9\nusing namespace std;\ninline int read(){\n    int re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n}\nint a[1010][110],b[110];int N,n,m[1010],fail[110],ans=0,tans=inf,tmp;\nint main(){\n    N=read();int i,j,t1,t2,k,l;\n    n=read();t1=read();for(i=0;i<n-1;i++) t2=read(),b[i]=t2-t1,t1=t2;\n    b[n-1]=b[n]=b[n+1]=-inf;\n    for(j=1;j<N;j++){\n        m[j]=read();t1=read();\n        for(i=0;i<m[j]-1;i++) t2=read(),a[j][i]=t2-t1,t1=t2;\n        a[j][m[j]-1]=a[j][m[j]]=inf;\n    }\n    for(k=n-1;k>=1;k--){\n        memset(fail,0,sizeof(fail));\n        j=0;tans=inf;\n        for(i=1;i<k;i++){\n            while(j&&(b[i]!=b[j])) j=fail[j];\n            j+=(b[i]==b[j]);fail[i+1]=j;\n        }\n        for(l=1;l<N;l++){\n            j=0;tmp=0;\n            for(i=0;i<m[l]-1;i++){\n                while(j&&a[l][i]!=b[j]) j=fail[j];\n                j+=(a[l][i]==b[j]);\n                tmp=max(tmp,j);\n                if(j==k) break;\n            }\n            tans=min(tans,tmp);\n        }\n        for(i=0;i<k-1;i++) b[i]=b[i+1];b[k]=-inf;\n        ans=max(ans,tans);\n    }\n    printf(\"%d\",ans+1);\n}\n```",
        "postTime": 1524288379,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u7ed9\u5b9a $N$ \u4e2a\u5b57\u7b26\u4e32 $S_1,S_2\\ ...\\ S_n$ \uff0c\u6c42\u6700\u957f\u7684\u76f8\u540c\u5b50\u4e32\u957f\u5ea6\u3002\n\n\u76f8\u540c\u7684\u5b9a\u4e49\uff1a\u8bbe\u957f\u5ea6\u76f8\u7b49\u7684\u5b57\u7b26\u4e32 $S_1,S_2$ \uff0c\u82e5\u5b57\u7b26\u4e32 $S_1$ \u7684\u6bcf\u4e2a\u5b57\u7b26\u52a0\u4e0a(\u51cf\u53bb)\u67d0\u4e2a\u6570\u90fd\u6070\u597d\u548c $S_2$ \u7684\u5bf9\u5e94\u5b57\u7b26\u76f8\u7b49\uff0c\u5219\u79f0\u5b83\u4eec\u76f8\u540c\u3002\n\n$n\\ ,|S_i| \\leq 1000$\n\n\u5b57\u7b26\u96c6 $[0,1864]$\n\n---\n\u5c06\u539f\u5b57\u7b26\u4e32\u5dee\u5206\uff0c\u53ef\u4ee5\u8bc1\u660e\u6240\u6c42\u7684\u5c31\u662f\u82e5\u5e72\u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u6700\u957f\u5b50\u4e32\u3002\n\n\u8fd9\u662f\u56e0\u4e3a\uff08\u9898\u76ee\u7684\uff09**\u76f8\u540c** \u5176\u5b9e\u5c31\u662f\u4ee4\u76f8\u90bb\u5b57\u7b26\u4e4b\u5dee\u76f8\u7b49\u3002\n\n\u8003\u8651\u600e\u4e48\u6c42\u591a\u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u6700\u957f\u5b50\u4e32\u3002\n\n\u8fde\u63a5\u5b83\u4eec\uff0c\u7136\u540e\u5efa\u7acb SAM \uff0c\u7136\u540e\u53ea\u8981\u627e\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u7684 endpos \u96c6\u5408\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u9632\u6b62\u8fde\u5728\u4e00\u8d77\u51fa\u9505\uff0c\u4e2d\u95f4\u8981\u52a0\u4e0a\u5206\u9694\u7b26\u3002\n\n\u6c42 endpos \u96c6\u5408\u76f4\u63a5\u4e0a\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ls(x) tree[x].son[0]\n#define rs(x) tree[x].son[1]\n#define sum(x) tree[x].sum\n#define Mid ((L+R)>>1)\nusing namespace std;\ntypedef pair<int,int> pii;\ninline int read(){\n\tchar c;int x=0;int b=1;do{c=getchar();if(c==45)b=-1;}while(c>57||c<48);\n\tdo x=x*10+c-48,c=getchar();while(c<=57&&c>=48);x*=b;return x;\n}\nconst int maxn=250010;\nint i,j,k,n,m;\nint S[1010][110],S2[maxn];\nstruct node{\n\tmap<int,int>C;\n\tint sum,num,link,len;\n}a[maxn];int len=1;\nstruct edge{\n\tint next,to;\n}e[maxn];\nint head[maxn],Len;\nvoid add(int x,int y){\n\te[++Len]={head[x],y};\n\thead[x]=Len;\n}\nstruct ST{\n\tint son[2],sum;\n}tree[maxn*10];\nint lenth,Root[maxn];\nint ans=0;\ninline void update(int root){\n\tsum(root)=sum(ls(root))+sum(rs(root));\n}\nvoid insert(int &root,int L,int R,int S){\n\tif(!root)root=++lenth;\n\tif(L==R)sum(root)=1;\n\telse{\n\t\tif(S<=Mid)insert(ls(root),L,Mid,S);\n\t\telse insert(rs(root),Mid+1,R,S);\n\t\tupdate(root);\n\t}\n}\nint merge(int x,int y,int L,int R){\n\tif(!x)return y;\n\tif(!y)return x;\n\tif(L==R){sum(x)|=sum(y);return x;}\n\tls(x)=merge(ls(x),ls(y),L,Mid);\n\trs(x)=merge(rs(x),rs(y),Mid+1,R);\n\tupdate(x);\n\treturn x;\n}\nint dfs(int now){\n\tRoot[now]=++lenth;\n\tif(a[now].num)insert(Root[now],1,n,a[now].num);\n\tint B=0;\n\tfor(int i=head[now];i;i=e[i].next){\n\t\tint u=e[i].to;B|=dfs(u);\n\t\tif(!B)merge(Root[now],Root[u],1,n);\n\t}if(B)return 1;\n\tif(sum(Root[now])==n){ans=max(ans,a[now].len);return 1;}\n\treturn 0;\n}\nint main() {\n\tfreopen(\"P2463.in\",\"r\",stdin);\n\tfreopen(\"P2463.out\",\"w\",stdout);\n\tcin>>n;\n\tfor(i=1;i<=n;i++){\n\t\tS[i][0]=read();\n\t\tfor(j=1;j<=S[i][0];j++)\n\t\t\tS[i][j]=read();\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<S[i][0];j++)S2[++m]=S[i][j+1]-S[i][j];\n\t\tS2[++m]=-2e9;\n\t}\n\tint now=1,Num=1;\n\tfor(i=1;i<=m;i++){\n\t\tint sum=S2[i],d=++len,p=now;\n\t\tif(sum==-2e9)++Num;\n\t\ta[d].len=a[p].len+1;\n\t\ta[d].sum=1;a[d].num=Num;\n\t\twhile(p && !a[p].C[sum]){\n\t\t\ta[p].C[sum]=d;\n\t\t\tp=a[p].link;\n\t\t}if(!p)a[d].link=1;\n\t\telse{\n\t\t\tint to=a[p].C[sum];\n\t\t\tif(a[to].len-a[p].len==1)a[d].link=to;\n\t\t\telse{\n\t\t\t\tint clone=++len;\n\t\t\t\ta[clone]=a[to];\n\t\t\t\ta[clone].len=a[p].len+1;\n\t\t\t\ta[clone].sum=a[clone].num=0;\n\t\t\t\twhile(p && a[p].C[sum]==to){\n\t\t\t\t\ta[p].C[sum]=clone;\n\t\t\t\t\tp=a[p].link;\n\t\t\t\t}\n\t\t\t\ta[to].link=a[d].link=clone;\n\t\t\t}\n\t\t}now=d;\n\t}\n\tfor(i=1;i<=len;i++)add(a[i].link,i);\n\tdfs(1);cout<<ans+1<<endl;\n\t//cerr << 1.0*clock()/CLOCKS_PER_SEC << endl;\n\treturn 0;\n}\n```",
        "postTime": 1595938447,
        "uid": 35891,
        "name": "huangzirui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "\u88ab$mhr$\u7684\u66b4\u529b\u5e72\u7ffb\u4e86\n\n\u8fd9\u9053\u9898\u505a\u6cd5\u8fd8\u662f\u975e\u5e38\u597d\u60f3\u7684\n\n\u5148\u505a\u4e00\u904d\u5dee\u5206\uff0c\u5728\u6bcf\u4e2a\u4e32\u7684\u67d0\u5c3e\u63d2\u5165\u4e00\u4e2a\u7279\u6b8a\u5b57\u7b26\uff0c\u518d\u5c06\u6240\u6709\u7684\u4e32\u62fc\u63a5\u5728\u4e00\u8d77\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u516c\u5171\u5b50\u4e32\u4f7f\u5f97\u5176\u51fa\u73b0\u4e86$n$\u6b21\uff0c\u4f46\u662f\u5728\u4e00\u4e2a\u4e32\u5185\u51fa\u73b0\u591a\u6b21\u51fa\u73b0\u53ea\u7b97\u4e00\u6b21\n\n\u5148\u8003\u8651\u4e00\u4e0b\u6ca1\u6709\u7b2c\u4e8c\u4e2a\u9650\u5236\u7684\u505a\u6cd5\n\n\u90a3\u5c31\u662f\u6700\u7b80\u5355\u7684$SA$+\u4e8c\u5206\u4e86\uff0c\u5c31\u662f\u626b\u4e00\u904d$height$\u6570\u7ec4\uff0c\u4e4b\u540e\u6839\u636e$height$\u8fdb\u884c\u5206\u7ec4\u4f7f\u5f97\u4e00\u4e2a\u7ec4\u5185\u6240\u6709\u7684$height$\u90fd\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u4e8c\u5206\u51fa\u6765\u7684$mid$\uff0c\u4e4b\u540e\u4e00\u4e2a\u7ec4\u5185\u6709\u591a\u5c11\u4e2a\u5c31\u4ee3\u8868\u8fd9\u4e2a\u5b50\u4e32\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\n\n\u73b0\u5728\u6709\u4e86\u9650\u5236\uff0c\u5c31\u662f\u4e0d\u80fd\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u4e32\n\n\u4e8e\u662f\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a$sa_i$\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u6807\u8bb0\u597d\u5176\u6765\u81ea\u54ea\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e4b\u540e\u5bf9\u4e8e\u4e00\u4e2a\u7ec4\u5185\u51fa\u73b0\u7684\u540c\u4e00\u4e2a\u4e32\u5185\u7684\u6211\u4eec\u53ea\u9700\u8981\u7b97\u4e00\u6b21\u5c31\u591f\u4e86\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define re register\n#define LL long long\n#define maxn (1000*100+1000+5)*2\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define pt putchar(1)\ninline int read()\n{\n\tchar c=getchar();int x=0;\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nint a[maxn],f[maxn],c[maxn];\nint tp[maxn],sa[maxn],rk[maxn],tax[maxn],het[maxn],b[maxn];\nint n,m,K,r,t;\ninline void qsort()\n{\n\tfor(re int i=0;i<=K;i++) tax[i]=0;\n\tfor(re int i=1;i<=n;i++) tax[rk[i]]++;\n\tfor(re int i=1;i<=K;i++) tax[i]+=tax[i-1];\n\tfor(re int i=n;i;--i) sa[tax[rk[tp[i]]]--]=tp[i];\n}\ninline int check(int x)\n{\n\tint num=0,now=1;\n\tif(f[sa[1]]) num++,b[f[sa[1]]]++;\n\tfor(re int i=2;i<=n;i++)\n\t{\n\t\tif(het[i]<x)\n\t\t{\n\t\t\tif(num>=m) return 1;\n\t\t\tfor(re int j=now;j<i;j++) b[f[sa[j]]]=0;\n\t\t\tnum=0,now=i;\n\t\t\tif(f[sa[i]]) num++,b[f[sa[i]]]++;\n\t\t\tcontinue;\n\t\t}\n\t\tif(!b[f[sa[i]]]&&f[sa[i]]) b[f[sa[i]]]++,num++;\n\t}\n\treturn num>=m;\n}\nint main()\n{\n\tm=read();\n\tfor(re int i=1;i<=m;i++)\n\t{\n\t\tt=read();r=max(t,r);\n\t\tfor(re int j=1;j<=t;j++) a[++n]=read(),f[n]=i;\n\t\ta[++n]=i+101,f[n]=0;\n\t}\n\tfor(re int i=1;i<=n;i++) c[i]=a[i]-a[i-1];\n\tfor(re int i=1;i<=n;i++) c[i]+=2001,K=max(c[i],K);\n\tc[1]=0;\n\tfor(re int i=1;i<=n;i++) tp[i]=i,rk[i]=c[i];\n\tqsort();\n\tfor(re int w=1,p=0;p<n;K=p,w<<=1)\n\t{\n\t\tp=0;\n\t\tfor(re int i=1;i<=w;i++) tp[++p]=n-w+i;\n\t\tfor(re int i=1;i<=n;i++) if(sa[i]>w) tp[++p]=sa[i]-w;\n\t\tqsort();\n\t\tfor(re int i=1;i<=n;i++) std::swap(rk[i],tp[i]);\n\t\trk[sa[1]]=p=1;\n\t\tfor(re int i=2;i<=n;i++) rk[sa[i]]=(tp[sa[i-1]]==tp[sa[i]]&&tp[sa[i-1]+w]==tp[sa[i]+w])?p:++p;\n\t}\n\tint k=0;\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tif(k) --k;\n\t\tint j=sa[rk[i]-1];\n\t\twhile(c[i+k]==c[j+k]) ++k;\n\t\thet[rk[i]]=k;\n\t}\n\tint l=1,ans=0;\n\twhile(l<=r)\n\t{\n\t\tint mid=l+r>>1;\n\t\tif(check(mid)) l=mid+1,ans=mid;\n\t\t\telse r=mid-1;\n\t}\n\tprintf(\"%d\\n\",ans+1);\n \treturn 0;\n}\n```",
        "postTime": 1545533792,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "\u849f\u84bb\u4e0d\u4f1aSA\uff0c\u4e5f\u4e0d\u4f1aSAM\uff0c\u53ea\u597d\u7528hash\n\n\u663e\u7136\u76f4\u63a5\u628a\u539f\u5e8f\u5217\u505a\u5dee\uff0c\u7136\u540e\u4e8c\u5206+hash\u627e\u516c\u5171\u6700\u957f\u7684\u5b50\u4e32\u5373\u53ef\n\nhash\u6570\u7ec4\u8981\u7528vector\u5b58\uff0c\u4e0d\u7136\u4f1a\u7206\u7a7a\u95f4\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define ull unsigned long long \nusing namespace std;\nconst int MAXN = 1e6 + 10;\nconst ull base = 27;\ninline int read() {\n    char c = getchar(); int x = 0, f = 1;\n    while(c < '0' || c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\nint N, mx;\null po[MAXN];\nvector<ull> ha[MAXN];\nvector<int> v[MAXN];\nmap<ull, int> mp, vis;\null getha(int id, int l, int r) {\n\tif(l == 0) return ha[id][r];\n\telse return ha[id][r] - ha[id][l - 1] * po[r - l + 1];\n}\nint check(int len) {\n\tmp.clear();\n\tfor(int i = 1; i <= N; i++) {\n\t\tvis.clear();\n\t\tfor(int j = 0; j < v[i].size() - len + 1; j++) {\n\t\t\tull tmp = getha(i, j, j + len - 1);\n\t\t\tif(!vis[tmp]) vis[tmp] = 1, mp[tmp]++;\n\t\t\tif(mp[tmp] == N) return 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint main() {\t\n\tN = read();\n\tpo[0] = 1;\n\tfor(int i = 1; i <= 10001; i++) po[i] = base * po[i - 1];\n\tfor(int i = 1; i <= N; i++) {\n\t\tint num = read(); mx = max(mx, num);\n\t\tfor(int j = 1; j <= num; j++) v[i].push_back(read());\n\t\tfor(int j = num - 1; j >= 1; j--) v[i][j] = v[i][j] - v[i][j - 1];\n\t\tha[i].reserve(v[i].size() + 1);\n\t}\n\tfor(int i = 1; i <= N; i++) {\n\t\tfor(int j = 0; j < v[i].size(); j++) {\n\t\t\tif(!j) ha[i][j] = 0;\n\t\t\telse ha[i][j] = (ha[i][j - 1] + v[i][j]) * base;\n\t\t}\n\t}\n\tint l = 1, r = mx, ans = 0;\n\twhile(l <= r) {\n\t\tint mid = l + r >> 1;\n\t\tif(check(mid)) ans = mid, l = mid + 1;\n\t\telse r = mid - 1;\n\t}\n\tcout << ans + 1;\n    return 0;\n}\n```",
        "postTime": 1543379614,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "\u65e2\u7136\u5927\u5bb6\u90fd\u7528KMP\u6216\u540e\u7f00\u6570\u7ec4\uff0c\u90a3\u672c\u849f\u84bb\u53d1\u4e00\u53d1\u540e\u7f00\u81ea\u52a8\u673a\u7684\u9898\u89e3\u5427\u3002\n\n\u53ef\u4ee5\u5148\u4e86\u89e3\u4e00\u4e0b\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u5728\u672c\u9898\u4e2d\uff0c\u5b83\u7684\u5e94\u7528\u662f\u7edf\u8ba1\u5b50\u4e32\u51fa\u73b0\u6b21\u6570\u53ca\u957f\u5ea6\u3002\n\n\u540e\u7f00\u81ea\u52a8\u673a\u53ef\u4ee5\u5339\u914d\uff08\u63a5\u53d7\uff09\u7ed9\u5b9a\u6bcd\u4e32\u7684\u6240\u6709\u5b50\u4e32\u3002\n\n\u4e8e\u662f\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u628a\u8f93\u5165\u5dee\u5206\u4e00\u4e0b\uff0c\u53d1\u73b0\u6837\u4f8b\u8f6c\u6362\u6210\n\n1 1\n1 1 4\n\u7136\u540e\u7b54\u6848\u662f2\uff1f\n\n\u7136\u800c\u7b2c\u4e00\u4e2a\u6570\u65e0\u6548\uff08\u663e\u7136\u7684\uff09\u3002\u7b54\u6848\u5e94\u8be5\u662f\u53bb\u6389\u7b2c\u4e00\u4e2a\u6570\u4e4b\u540e\u7684\u6240\u6709\u4e32\u7684\n\n\u6700\u957f\u516c\u5171###\u5b50\u4e32 +1\n\n\u5b50\u4e32\uff1f\u7b26\u5408\u80c3\u53e3\u3002\u4e8e\u662f\u6211\u4eec\u8981\u6c42\u6700\u957f\u516c\u5171\u5b50\u4e32\u5728n\u4e2a\u4e32\u4e2d\u90fd\u51fa\u73b0\u8fc7\u3002\n\n\u73b0\u5728\u5148\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b66\u5b8c\u4e86\u540e\u7f00\u81ea\u52a8\u673a\n\n\u5982\u4f55\u7edf\u8ba1\u51fa\u73b0\u4e86n\u6b21\uff1f\n\n\u6211\u4eec\u4ee5\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u5f00\u5934\uff0c\u7136\u540e\u626b\u63cf\u8fd9\u4e2a\u5b57\u7b26\u6240\u5bf9\u5e94\u5728\u540e\u7f00\u81ea\u52a8\u673a\u7684\u8282\u70b9\uff08\u6ce8\u610f\u4e0d\u8981\u91cd\u590d\uff09\uff0c\u7136\u540e\u8ddf\u7740pre\u6570\u7ec4\u5411\u4e0a\u8d70\uff0c\u6bcf\u8d70\u4e00\u4e2a\u8282\u70b9\u7ed9\u5b83\u7684\u6b21\u6570++\uff0c\u4e8e\u662f\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u8d70\u4e86n\u6b21\uff0c\u90a3\u4e48\u8bf4\u660e\u5b83\u5728n\u4e2a\u4e32\u4e2d\u90fd\u51fa\u73b0\u8fc7\u4e86\uff08\u53ef\u4ee5\u6839\u636epre\u6570\u7ec4\u7684\u5b9a\u4e49\u63a8\u5bfc\uff09\u3002\n\n\u5982\u4f55\u83b7\u53d6\u957f\u5ea6\uff1f\n\n\u5176\u5b9e\u5c31\u662fstep\uff0c\u4e5f\u662f\u5b9a\u4e49\uff0c\u4e5f\u5c31\u662f\u539f\u5b9a\u4e49\u4e2d\u8df3\u8f6c\u8282\u70b9\u7684\u957f\u5ea6\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u7406\u8bba\u590d\u6742\u5ea6O(nm)\\*O(n-)\uff09\uff1a\n\n\n\n\n\n\n\n```cpp\n#include <cstring>\n#include <cstdio>\n#include <cctype>\n#include <map>\nusing namespace std;\n#define MAXN 1010\n#define MAXM 2000020\n#define INF 0x3f3f3f3f\ninline char get_char(){\n    static char buf[500001], *p1 = buf, *p2 = buf;\n    return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 500000, stdin), p1 == p2) ? EOF : *p1 ++;\n}\ninline int read(){\n    int num = 0;\n    char c;\n    while (isspace(c = get_char()));\n    while (num = num * 10 + c - 48, isdigit(c = get_char()));\n    return num;\n}\ninline int upmax(int &a, const int &b){\n    if(a < b) a = b;\n    return a;\n}\nint n, m[MAXN], s[MAXN][MAXN], size[MAXM];\nnamespace SAM{\n    int cnt = 1, lst = 1;\n    map<int, int> son[MAXM];\n    int pre[MAXM], step[MAXM];\n    inline void Insert(int tar){\n        int p = lst, np = ++cnt;\n        for(lst = np, step[np] = step[p] + 1;p && !son[p][tar]; p = pre[p]) son[p][tar] = np;\n        if(!p) pre[np] = 1;\n        else {\n            int q = son[p][tar];\n            if(step[p] + 1 == step[q]) pre[np] = q;\n            else {\n                int nq = ++cnt;\n                step[nq] = step[p] + 1;\n                son[nq] = son[q];\n                for(pre[nq] = pre[q], pre[q] = pre[np] = nq; son[p][tar] == q; p = pre[p]) son[p][tar] = nq;\n            }\n        }\n    }\n}\nint vis[MAXM];\ninline int Get_Ans(){\n    int ret = 1;\n    for(int i = 1; i <= n; i++){\n        int p = 1, *tp = s[i];\n        for(int j = 2; j <= m[i]; j++){\n            p = SAM::son[p][tp[j] - tp[j - 1]];\n            int tmp = p;\n            while(vis[tmp] != i){\n                vis[tmp] = i;\n                size[tmp]++;\n                tmp = SAM::pre[tmp];\n            }\n        }\n    }\n    for(int i = 1; i <= SAM::cnt; i++)\n        if(size[i] == n)\n            upmax(ret, SAM::step[i] + 1);\n    return ret;\n}\nint main(){\n    n = read();\n    for(int i = 1; i <= n; i++){\n        m[i] = read();\n        int *p = s[i];\n        for(int j = 1; j <= m[i]; j++){\n            p[j] = read();\n            if(j != 1) SAM::Insert(p[j] - p[j - 1]);\n        }\n    }\n    printf(\"%d\", Get_Ans());\n    return 0;\n}\n\n```",
        "postTime": 1512569910,
        "uid": 43464,
        "name": "Creeper_LKF",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "\u4e00\u79cd\u540e\u7f00\u81ea\u52a8\u673a\u7684\u505a\u6cd5\uff1a\n\n\u7ed9\u5b9a\u4e86n\u4e2a\u5b57\u7b26\u4e32\uff0c\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e2a\u4e32\u5efa\u7acbSAM\uff08\u6700\u77ed\u7684\u4e32\u6700\u4f18\u4e0d\u8fc7\u901a\u5e38\u6765\u8bb2\u5e94\u8be5\u65e0\u6240\u8c13\uff09\uff0c\u7136\u540e\u8ba9\u5176\u5b83\u4e32\u5728SAM\u4e0a\u8dd1\u5339\u914d\u3002\n\n\u4ece\u6839\u51fa\u53d1\u8d70\u5b57\u7b26\u7684\u8f6c\u79fb\u8def\u5f84\uff0c\u8bb0\u5f55\u5f53\u524d\u5339\u914d\u5230\u7684\u6700\u957f\u957f\u5ea6l\u4ee5\u53ca\u5f53\u524d\u6240\u5728\u7684\u8282\u70b9now\u3002\u5982\u679c\u5931\u914d\u5c31\u6cbf\u7740\u540e\u7f00\u94fe\u63a5\u5411\u66f4\u77ed\u7684\u540e\u7f00\u8df3\u76f4\u5230\u5230\u8fbe\u6839\u6216\u8005\u627e\u5230\u80fd\u7ee7\u7eed\u5f80\u540e\u5339\u914d\u7684\u8282\u70b9\u3002l\u8981\u53ca\u65f6\u4e0e\u6240\u5728\u8282\u70b9\u7684len\u53d6min\u3002\n\n\u6bcf\u4e00\u6b21\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2amaxx\u6570\u7ec4\uff0c\u8868\u793a\u8fd9\u4e2a\u4e32\u5339\u914d\u540e\uff0cSAM\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u957f\uff08\u88ab\uff09\u5339\u914d\u5230\u7684\u957f\u5ea6\u3002\u8d70\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u7528\u5f53\u524d\u7684l\u53bb\u66f4\u65b0\u8fd9\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\u3002\u8dd1\u5b8c\u5339\u914d\u4ee5\u540e\uff0c\u8981dfs\u4e00\u904d\u540e\u7f00\u94fe\u63a5\u6811\uff0c\u7528\u5b50\u8282\u70b9\u7684maxx\u53bb\u66f4\u65b0\u7236\u8282\u70b9\u7684maxx\u3002\u56e0\u4e3a\u4e00\u4e2a\u5b57\u4e32\u5982\u679c\u88ab\u5339\u914d\u5230\u4e86\uff0c\u90a3\u4e48\u5b83\u7684\u540e\u7f00\u4e5f\u4e00\u5b9a\u88ab\u5339\u914d\u5230\uff0c\u8dd1\u5339\u914d\u7684\u65f6\u5019\u53ea\u8d70\u4e86\u5b50\u8282\u70b9\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u662f\u5171n-1\u4e2a\u8dd1\u5339\u914d\u7684\u4e32\u7684maxx\u6570\u7ec4\u8fdb\u884c\u6bd4\u8f83\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684n-1\u4e2amaxx\u53d6min\u5c31\u662f\u5b83\u5728\u6240\u6709\u4e32\u91cc\u90fd\u51fa\u73b0\u7684\u6700\u957f\u957f\u5ea6\uff0c\u8fd9\u4e2amin\u503c\u53ef\u4ee5\u5728dfs\u5904\u7406maxx\u7684\u65f6\u5019\u987a\u4fbf\u7ef4\u62a4\uff0c\u7528\u4e0d\u7740\u8bb0\u5f55n-1\u4e2a\u6570\u7ec4\u3002\n\n\u6700\u540e\u7684ans\u5c31\u662f\u6bcf\u4e2a\u8282\u70b9\u7684min\u503c\u7684max\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<map>\nusing namespace std;\nconst int N=3e5+10;\nint fro,n,siz,lst,lens,num=1,first,ans,maxx[N];\nint s[N];\nstruct node{\n\tint len,link,minn;\n\tmap<int,int>mp;\n}a[N];\nint ver[N],head[N],tot,Next[N];\nvoid add(int x,int y){\n\tver[++tot]=y;\n\tNext[tot]=head[x];\n\thead[x]=tot;\n}\nvoid build(){\n\ta[0].link=-1;\n}\nvoid insert(int c){\n\tint cur=++siz;\n\ta[cur].len=a[lst].len+1;\n\ta[cur].minn=N;\n\tint p=lst;\n\twhile(p!=-1&&!a[p].mp.count(c)){\n\t\ta[p].mp[c]=cur;\n\t\tp=a[p].link;\n\t}\n\tif(p==-1){\n\t\ta[cur].link=0;\n\t}\n\telse{\n\t\tint q=a[p].mp[c];\n\t\tif(a[p].len+1==a[q].len){\n\t\t\ta[cur].link=q;\n\t\t}\n\t\telse{\n\t\t\tint clone=++siz;\n\t\t\ta[clone].len=a[p].len+1;\n\t\t\ta[clone].link=a[q].link;\n\t\t\ta[clone].minn=N;\n\t\t\ta[clone].mp=a[q].mp;\n\t\t\twhile(p!=-1&&a[p].mp[c]==q){\n\t\t\t\ta[p].mp[c]=clone;\n\t\t\t\tp=a[p].link;\n\t\t\t}\n\t\t\ta[cur].link=a[q].link=clone;\n\t\t}\n\t}\n\tlst=cur;\n}\nvoid change(){\n\tint now=0,l=0;\n\tfor(int i=1;i<=lens;i++){\n\t\twhile(!a[now].mp.count(s[i])&&now!=0){\n\t\t\tnow=a[now].link;\n\t\t\tl=min(l,a[now].len);\n\t\t}\n\t\tif(!now)l=0;\n\t\tif(a[now].mp.count(s[i])){\n\t\t\tnow=a[now].mp[s[i]];\n\t\t\tl++;\n\t\t\tl=min(l,a[now].len);\n\t\t\tmaxx[now]=max(maxx[now],l);\n\t\t}\n\t}\n}\t\t\nvoid dfs(int x){\n\tfor(int i=head[x];i;i=Next[i]){\n\t\tint y=ver[i];\n\t\tdfs(y);\n\t\tmaxx[x]=max(maxx[x],maxx[y]);\n\t}\n\ta[x].minn=min(a[x].minn,min(maxx[x],a[x].len));\n}\nvoid dfs1(int x){\n\tans=max(ans,a[x].minn);\n\tfor(int i=head[x];i;i=Next[i]){\n\t\tint y=ver[i];\n\t\tdfs1(y);\n\t}\n}\nint main(){\n\tbuild();\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&lens);\n\tfirst=lens;\n\tfor(int i=1,x;i<=lens;i++){\n\t\tscanf(\"%d\",&x);\n\t\tif(i!=1)insert(x-fro);\n\t\tfro=x;\n\t}\n\tfor(int i=1;i<=siz;i++)add(a[i].link,i);\n\tfor(int i=2;i<=n;i++){\n\t\tscanf(\"%d\",&lens);\n\t\tfor(int j=1,x;j<=lens;j++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(j!=1)s[j-1]=x-fro;\n\t\t\tfro=x;\n\t\t}\n\t\tmemset(maxx,0,sizeof(maxx));\n\t\tnum++;\n\t\tchange();\n\t\tdfs(0);\n\t}\n\tif(num==1)printf(\"%d\\n\",first);\n\telse{\n\t\tdfs1(0);\n\t\tprintf(\"%d\\n\",ans+1);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1576983455,
        "uid": 114222,
        "name": "\u72db\u679d\u51ea\u6597",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "##KMP + \u679a\u4e3e/\u66b4\u529b\n\n\u6839\u636e\u9898\u610f,\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42\u82e5\u5e72\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6(\u4e8b\u5b9e\u4e0a\u9700\u8981\u5148\u8fdb\u884c\u4e00\u4e0b\u5dee\u5206\u5904\u7406\u5373\u53ef \u5373d[i]=a[i]-a[i-1] \u627ed\u6570\u7ec4\u7684\u6700\u957f\u516c\u5171\u5b57\u4e32)\n\n\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u505a\u6cd5\u5c31\u662f\u4ee5\u7b2c\u4e00\u4e2a\u4e32\u4f5c\u4e3a\u6a21\u5f0f\u4e32,\u679a\u4e3e\u5176\u6bcf\u4e00\u4e2a\u5b50\u4e32,\u770b\u662f\u5426\u5728\u5176\u4ed6\u6bcf\u4e00\u4e2a\u4e32\u4e2d\u51fa\u73b0\u8fc7,\u4f46\u8fd9\u6837\u5b50\u590d\u6742\u5ea6\u8fc7\u9ad8,\u53ea\u80fd\u901a\u8fc7\u7ea630%\u7684\u6570\u636e\n\n\u6240\u4ee5\u60f3\u5230\u53ef\u4ee5\u6539\u8fdbKMP\u7b97\u6cd5\u7684\u4e00\u90e8\u5206,\u53ea\u679a\u4e3e\u7b2c\u4e00\u4e2a\u4e32\u7684\u540e\u7f00,\u7136\u540e\u7b97\u51fa\u5176\u540e\u7f00\u5728\u5176\u4ed6\u6240\u6709\u4e32\u4e2d\u51fa\u73b0\u7684\u6700\u5927\u957f\u5ea6MAXL,\u7136\u540e\u53d6\u5176\u5bf9\u5176\u4ed6\u6240\u6709\u4e32\u7684MAXL\u7684\u6700\u5c0f\u503c\u5373\u4e3a\u4e00\u4e2a\u53ef\u884c\u7b54\u6848,\u518d\u5728\u53ef\u884c\u7b54\u6848\u4e2d\u53d6\u6700\u5927\u503c\u5373\u53ef.\n\n\u8fd9\u6837\u5927\u6982\u53ef\u4ee5\u901a\u8fc7100%\u7684\u6570\u636e\u4e86 \u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u6548\u7387\u9ad8\u5f97\u591a\u7684\u540e\u7f00\u6570\u7ec4\u6765\u505a\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n/*\n    \u81ea\u5df1\u9009\u62e9\u7684\u8def\uff0c\u8dea\u7740\u4e5f\u8981\u8d70\u5b8c\u3002\n    Programed By Harry\u00b7Shaun\u00b7Wang\n    2016.12.27\n*/\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#define INF 0x3f3f3f3f\n#define MAXN 1005\n#define debug(x) cout<<#x<<\" : \"<<x<<endl\nnamespace IO\n{\n    inline int getint()\n    {\n        int x=0,f=1;char c=getchar();\n        while(c<'0' || c>'9') { if(c=='-') f=-1; c=getchar(); }\n        while(c>='0' && c<='9') x=x*10+c-48,c=getchar();\n        return x*f;\n    }\n    inline void putint(int x)\n    {\n        char c[15];int k=0;\n        if(x<0) putchar('-'),x=-x;\n        do { c[++k]=x%10+48; x/=10; } while(x);\n        while(k) putchar(c[k--]);\n    }\n}\nusing namespace std;\nusing namespace IO;\nint n,m,k;\nint a[MAXN][MAXN];\nint next[MAXN];\nint ans=1;\ninline void getnext(int P[],int m)\n{\n    memset(next,0,sizeof(next));\n    for(int i=1; i<m; ++i)\n    {\n        int j=i;\n        while(j>0)\n        {\n            j=next[j];\n            if(P[j]==P[i])\n            {\n                next[i+1]=j+1;\n                break;\n            }\n        }\n    }\n}\nint KMP(int T[],int n,int P[],int m)\n{\n    if(n<m) return 0;\n    int t=0;\n    for(int i=0,j=0; i<n; ++i)\n    {\n        if(j<m && T[i]==P[j]) ++j;\n        else while(j>0)\n        {\n            j=next[j];\n            if(T[i]==P[j])\n            {\n                ++j;\n                break;\n            }\n        }\n        t=max(t,j);\n        if(j==m) break;\n    }\n    return t;\n}\nint main()\n{\n    n=getint();\n    for(int i=1; i<=n; ++i)\n    {\n        a[0][i]=getint();\n        for(int j=0; j<a[0][i]; ++j) a[i][j]=getint();\n        for(int j=0; j<a[0][i]; ++j) a[i][j]=a[i][j+1]-a[i][j];\n        --a[0][i];\n    }\n    for(int i=0; i<a[0][1]; ++i)\n    {\n        k=INF;\n        getnext(a[1]+i,a[0][1]-i);\n        for(int j=2; j<=n; ++j)\n            k=min(KMP(a[j],a[0][j],a[1]+i,a[0][1]-i),k);\n        ans=max(ans,k+1);\n    }\n    putint(ans);\n    return 0;\n}\n```",
        "postTime": 1482847754,
        "uid": 19370,
        "name": "ShaunWang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "\u5199\u4e00\u79cd$O(nm)$\u7684\u505a\u6cd5\uff0c\u4e5f\u5c31\u662f$O(\\sum \u4e32\u957f)$\u7684\u3002\n\n\u5148\u901a\u8fc7\u5dee\u5206\u8f6c\u5316\uff0c\u628a\u6bcf\u4e2a\u6570\u53d8\u6210\u8fd9\u4e2a\u6570\u4e0e\u4e0a\u4e00\u4e2a\u6570\u7684\u5dee\uff0c\u7b2c\u4e00\u4e2a\u6570\u53bb\u6389\uff0c\u7b54\u6848\u5c31\u662f\u6700\u957f\u516c\u5171\u5b50\u4e32+1\n\n\u6309\u7167\u5957\u8def\u628a\u6240\u6709\u4e32\u62fc\u8d77\u6765\uff0c\u4e2d\u95f4\u52a0\u4e00\u4e2a\u5206\u9694\u7b26\u53f7\uff0c\u7136\u540e\u7528[DC3](https://www.cnblogs.com/jianglangcaijin/p/6035937.html)\u6c42\u51faSA\u4ee5\u53caheight\n\n\uff08DC3\u6211\u4e5f\u4e0d\u4f1a\uff0c\u84af\u7684\u677f\u5b50\uff0c\u56e0\u4e3a\u4e00\u822c\u7528\u500d\u589eSA\u8db3\u591f\u4e86\uff09\n\n\u5bf9\u6bcf\u4e2a\u540e\u7f00\u53ef\u4ee5\u77e5\u9053\u5b83\u5728\u539f\u6765\u7684\u7b2c\u51e0\u4e2a\u4e32\uff0c\u90a3\u4e48\u6c42\u51faSA\u4ee5\u540e\uff0c\u7b54\u6848\u5c31\u662f\u4e00\u6bb5\u533a\u95f4$[l,r]$\uff0c\u5373\u6392\u540d\u4e3a$[l,r]$\u7684\u8fd9\u4e9b\u540e\u7f00\uff0c\u800c\u4e14\u5fc5\u987b\u8986\u76d6\u539f\u6765\u7684\u6240\u6709\u4e32\uff0c\u957f\u5ea6\u5c31\u662f\u8fd9\u4e9b\u540e\u7f00\u7684LCP\uff0c\u5c31\u662f\u4e00\u6bb5height\u7684\u6700\u5c0f\u503c\n\n\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u6700\u5c0f\u7684\u53f3\u7aef\u70b9\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u4e0a\u4e00\u4e2a\u7684\u6700\u5c0f\u53f3\u7aef\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u7ef4\u62a4\u53f3\u7aef\u70b9\u4ee5\u53ca\u8fd9\u4e00\u6bb5\u533a\u95f4\u5305\u62ec\u539f\u6765\u6bcf\u4e00\u4e2a\u4e32\u7684\u6570\u91cf\u5c31\u597d\u4e86\n\n\u6700\u5c0f\u503c\u53ef\u4ee5\u76f4\u63a5\u5355\u8c03\u961f\u5217\u7ef4\u62a4\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long lint;\ntypedef unsigned long long ulint;\nnamespace input\n{\n    const int bufl = 1<<14;\n    char buf[bufl],*s=buf,*t=buf;\n    inline int fetch()\n    {\n        if(s==t){t=(s=buf)+fread(buf,1,bufl,stdin);if(s==t)return EOF;}\n        return *s++;\n    }\n    inline int gi()\n    {\n        register int a=0,b=1,c=fetch();\n        while(!isdigit(c))b^=c=='-',c=fetch();\n        while(isdigit(c))a=a*10+c-48,c=fetch();\n        return b?a:-a;\n    }\n}\nusing input::gi;\nconst int N = 202007 , N3 = N*3 , maxalpha = 99999;\nint wa[N3],wb[N3],wv[N3],buc[N3];\ninline void bsort(int *s,int *a,int *b,int n,int m)\n{\n    register int i;\n    for(i=0;i<n;i++)wv[i]=s[a[i]];\n    for(i=0;i<m;i++)buc[i]=0;\n    for(i=0;i<n;i++)buc[wv[i]]++;\n    for(i=1;i<m;i++)buc[i]+=buc[i-1];\n    for(i=n-1;i>=0;i--)b[--buc[wv[i]]]=a[i];\n}\ninline int c0(int *s,int a,int b)\n{\n    return s[a]==s[b] && s[a+1]==s[b+1] && s[a+2]==s[b+2];\n}\ninline int c12(int k,int *s,int a,int b)\n{\n    if(k==2)return s[a]<s[b] || (s[a]==s[b] && c12(k-1,s,a+1,b+1));\n    return s[a]<s[b] || (s[a]==s[b] && wv[a+1]<wv[b+1]);\n}\n#define f(x) ((x)/3+((x)%3==1?0:tb))\n#define g(x) ((x)<tb?(x)*3+1:((x)-tb)*3+2)\nvoid dc3(int *s,int *sa,int n,int m)\n{\n    int i,j,*sn=s+n,*san=sa+n,ta=0,tb=(n+1)/3,tbc=0,p;\n    s[n]=s[n+1]=0;\n    for(i=0;i<n;i++)if(i%3!=0)wa[tbc++]=i;\n    bsort(s+2,wa,wb,tbc,m),bsort(s+1,wb,wa,tbc,m),bsort(s,wa,wb,tbc,m);\n    for(sn[f(wb[0])]=0,p=1,i=1;i<tbc;i++)sn[f(wb[i])]=c0(s,wb[i-1],wb[i])?p-1:p++;\n    if(p<tbc)dc3(sn,san,tbc,p);\n    else for(i=0;i<tbc;i++)san[sn[i]]=i;\n    for(i=0;i<tbc;i++)if(san[i]<tb)wb[ta++]=san[i]*3;\n    if(n%3==1)wb[ta++]=n-1;\n    bsort(s,wb,wa,ta,m);\n    for(i=0;i<tbc;i++)wv[wb[i]=g(san[i])]=i;\n    for(i=j=p=0;i<ta && j<tbc;p++)sa[p]=c12(wb[j]%3,s,wa[i],wb[j])?wa[i++]:wb[j++];\n    for(;i<ta;p++)sa[p]=wa[i++];\n    for(;j<tbc;p++)sa[p]=wb[j++];\n}\n#undef f\n#undef g\nvoid calheight(int *s,int *sa,int n,int *rk,int *ht)\n{\n    register int i,j,k=0;\n    for(i=1;i<=n;++i)rk[sa[i]]=i;\n    for(i=0;i<n;ht[rk[i++]]=k)for(k?k--:0,j=sa[rk[i]-1];s[i+k]==s[j+k] && k<n;++k);\n    return;\n}\nchar s[N3];\nint n,ss[N3],sa[N3],rk[N3],ht[N3];\nint p[N3],S[N3];\nint que[N3],hd,tl,cnt[N3];\nint main()\n{\n    int NN=gi(),n=0,sep=0;\n    if(NN==1)return printf(\"%d\\n\",gi()),0;\n    while(NN--){\n        int t=gi(),lst=gi();\n        while(--t){\n            int x=gi();\n            S[n++]=lst-x+10000;\n            lst=x;\n        }\n        S[n++]=++sep;\n    }\n    s[n]=0;\n    dc3(S,sa,n+1,20000);\n    calheight(S,sa,n,rk,ht);\n    int k=1;\n    for(int i=0;i<n;++i)if(S[i]>1000)p[i]=k;else ++k;//p[i]\u662f\u540e\u7f00i\u5c5e\u4e8e\u539f\u6765\u7684\u7b2c\u51e0\u4e2a\u4e32\n    int CNT=0,r=k,Mx=0;//cnt\u662f\u539f\u6765\u6bcf\u4e2a\u4e32\u7684\u51fa\u73b0\u6b21\u6570\uff0cCNT\u662f\u603b\u7684\n    hd=tl=0;\n    --k;\n    for(int i=k+1;i<=n;++i){\n        while(r<=n&&CNT<k){\n            if(cnt[p[sa[r]]]++==0)++CNT;\n            if(r){\n                while((hd^tl)&&ht[que[tl-1]]>ht[r])--tl;\n                que[tl++]=r;\n            }\n            ++r;\n        }\n        if(CNT<k)break;\n        while((hd^tl)&&que[hd]<=i)++hd;\n        if(hd^tl)Mx=std::max(Mx,ht[que[hd]]);\n        if(--cnt[p[sa[i]]]==0)--CNT;\n    }\n    printf(\"%d\\n\",Mx+1);\n    return 0;\n}\n```\n\n\uff08\u5927\u62ec\u53f7\u6362\u884c\u7684\u662f\u84af\u7684\u677f\u5b50\uff0c\u4e0d\u6362\u884c\u7684\u4e5f\u5c31\u662f\u6838\u5fc3\u4ee3\u7801\u662f\u6211\u81ea\u5df1\u5199\u7684\uff0cDC3\u53ea\u662f\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\u800c\u5df2\uff09",
        "postTime": 1544001543,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "# \u4e3b\u8981\u7b97\u6cd5\uff1a\u5dee\u5206+\u4e8c\u5206\u7b54\u6848+KMP\uff08\u8fd8\u6709\u4e00\u70b9\u70b9\u7684\u66b4\u529b\uff09\n\n~~\uff08\u5199\u4e86\u4e00\u5929\u7684\u9898\u600e\u4e48\u80fd\u4e0d\u53d1\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u5462qwq\uff09~~\n\n\u672c\u9898\u8981\u6c42\u6211\u4eec\u5728\u6240\u6709\u6570\u5217\u4e2d\u627e\u51fa\u6700\u957f\u7684\u516c\u5171\u5b50\u4e32\uff0c\u4f46\u7565\u6709\u7279\u6b8a\u7684\u662f\uff1a\u53ea\u8981\u4e00\u4e2a\u6570\u5217\u7684\u6240\u6709\u6570\u540c\u65f6\u52a0\u4e0a\u4e00\u4e2a\u76f8\u540c\u7684\u6570\u5c31\u53ef\u4ee5\u53d8\u6210\u53e6\u4e00\u4e2a\u6570\u5217\uff0c\u4f8b\u5982$(1,3,6,7,10)$\u548c$(2,4,7,8,11)$\u548c$(11,13,16,17,20)$\u7b49\u6570\u5217\u662f\u7b49\u4ef7\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u867d\u7136\u6570\u5217\u4e2d\u7684\u503c\u4f1a\u6709\u6240\u53d8\u5316\uff0c\u4f46\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u5dee\u662f\u4e0d\u4f1a\u53d8\u7684\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u539f\u59cb\u6570\u5217\u53d8\u6210**\u5dee\u5206**\u6570\u5217\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u666e\u901a\u7684**\u5728\u6240\u6709\u6570\u5217\u4e2d\u627e\u51fa\u6700\u957f\u7684\u516c\u5171\u5b50\u4e32**\u7684\u95ee\u9898\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u56fa\u5b9a\u4e00\u4e2a\u6a21\u5f0f\u4e32\uff0c\u518d\u4e0e\u5176\u4ed6\u6570\u5217\u4e00\u4e00\u5339\u914d\uff0c\u82e5\u90fd\u5339\u914d\u901a\u8fc7\uff0c\u5219\u8fd9\u4e2a\u7b54\u6848\u662f\u53ef\u4ee5\u8fbe\u5230\u7684\u3002\n\n\u73b0\u5728\u6211\u4eec\u600e\u4e48\u786e\u5b9a\u8fd9\u4e2a\u6a21\u5f0f\u4e32\u5462\uff0c\u5176\u5b9e\u968f\u4fbf\u9009\u4e00\u4e2a\u6570\u5217\u90fd\u53ef\u4ee5\u4e3a\u683c\u5f0f\u4e32\uff0c\u4f46\u6700\u4f18\u6211\u4eec\u53ef\u4ee5\u9009\u90a3\u4e2a**\u6700\u77ed\u7684\u6570\u5217\u4e3a\u683c\u5f0f\u4e32**\uff0c\u5e76\u4fdd\u8bc1\u4e86\u683c\u5f0f\u4e32\u957f\u5ea6\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e\u5176\u4ed6\u7684\u6570\u5217\u3002\n\n\u4f46\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u4e00\u4e2a\u6a21\u5f0f\u4e32\u4e0e\u5176\u4ed6\u6570\u5217\u5339\u914d\u4e0d\u4e00\u5b9a\u8981\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\uff0c\u4e8b\u5b9e\u4e0a\u5b83\u4ece\u4efb\u610f\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\u90fd\u662f\u53ef\u884c\u7684\u3002\n\n\u56e0\u6b64\u6211\u4eecKMP\u5339\u914d\u65f6\uff0c\u53ef\u4ee5\u7528\u8bb8\u591a\u4e2a$fail$\u6570\u7ec4\uff0c\u6765\u5206\u522b\u8868\u793a\u8be5\u6a21\u5f0f\u4e32\u540e$i$\u4e2a\u6570\u7ec4\u6210\u7684\u6570\u5217\u7684$fail$\u6570\u7ec4\u3002\u4f8b\u5982$(2,3,1,3)$\u8fd9\u4e2a\u6a21\u5f0f\u4e32\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bb0\u5f55$(2,3,1,3)$\u3001$(3,1,3)$\u3001$(1,3)$\u3001$(3)$\u8fd9\u56db\u4e2a\u6570\u5217\u7684$fail$\u6570\u7ec4\u3002\uff08\u6709\u70b9\u5c0f\u66b4\u529bqwq\uff09\n\n\u63a5\u4e0b\u6765\u5c31\u8981\u5f00\u59cb\u641c\u7d22\u7b54\u6848\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u7684\u53d1\u73b0\uff0c\u8fd9\u9898\u7684\u7b54\u6848\u662f\u6ee1\u8db3**\u4e8c\u5206\u7b54\u6848**\u7684\u6027\u8d28\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u8fd9\u4e2a\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u518d\u9a8c\u8bc1\u7b54\u6848\u3002\n\n~~\uff08\u8fd9\u5c31\u662f\u6211\u82b1\u4e86\u4e00\u5929\u65f6\u95f4\u624d\u5199\u5b8c\u7684\u9898qwq\uff09~~\n\n------------\n\npascal\u4ee3\u7801\u5982\u4e0b\uff1a\n```pascal\nvar n,m,i,j,l,x,y,r,mid,min:longint;\na:array[1..1000,1..100]of longint;//\u5404\u4e2a\u6570\u5217\nlen:array[0..1000]of longint;//\u5404\u4e2a\u6570\u5217\u7684\u957f\u5ea6\nf:array[1..100,1..100]of longint;//\u6a21\u5f0f\u4e32\u7684\u5404\u4e2afail\u6570\u7ec4\nfunction go(x:longint):boolean;\nvar i,j,k,l:longint;\nch:boolean;\nbegin\n  for k:=1 to len[min]-x+1 do//\u6bcf\u4e2a\u70b9\u4e3a\u8d77\u70b9\u7684\u60c5\u51b5\u90fd\u641c\u4e00\u904d\n  begin\n    for l:=1 to n do//\u4e0e\u6bcf\u4e2a\u6570\u5217\u4f5c\u6bd4\u8f83\n    if l<>min then\n    begin\n      j:=0;\n      ch:=false;\n      for i:=1 to len[l] do\n      begin\n        //\u56e0\u8d77\u70b9\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u4ee5\u4e0b\u5173\u4e8ej\u7684\u64cd\u4f5c\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u601d\u7ef4\u4e0d\u6e05\u6670\u5f88\u5bb9\u6613\u51fa\u9519\n        while (j>0)and(a[l,i]<>a[min,j+k]) do\n        j:=f[k,j+k-1];\n        if a[l,i]=a[min,j+k] then\n        begin\n          inc(j);\n          if j=x then//\u627e\u5230\u8be5\u6a21\u5f0f\u5b50\u4e32\uff0c\u9000\u51fa\n          begin\n            ch:=true;\n            break;\n          end;\n        end;\n      end;\n      if not ch then//\u5982\u679c\u8be5\u6570\u5217\u4e0d\u5305\u542b\u8be5\u6a21\u5f0f\u5b50\u4e32\uff0c\u76f4\u63a5\u9000\u51fa\u5e76\u4ee5\u6a21\u5f0f\u4e32\u7684\u4e0b\u4e00\u4e2a\u70b9\u4e3a\u8d77\u70b9\u7ee7\u7eed\u641c\n      break;\n    end;\n    if ch then//\u6bcf\u4e2a\u6570\u5217\u90fd\u5305\u542b\u8be5\u6a21\u5f0f\u5b50\u4e32\n    exit(true);\n  end;\n  exit(false);\nend;\nbegin\n  readln(n);\n  len[0]:=maxlongint;\n  for m:=1 to n do//\u8bfb\u5165\u65f6\u76f4\u63a5\u628a\u539f\u59cb\u6570\u5217\u53d8\u4e3a\u5dee\u5206\u6570\u5217\n  begin\n    read(len[m],x);\n    dec(len[m]);\n    if len[m]<len[min] then\n    min:=m;//\u6700\u77ed\u7684\u6570\u5217\u4e3a\u6a21\u5f0f\u4e32\n    for l:=1 to len[m] do\n    begin\n      read(y);\n      a[m,l]:=y-x;\n      x:=y;\n    end;\n    readln;\n  end;\n  for l:=1 to len[min] do\n  begin\n    j:=0;\n    for i:=l+1 to len[min] do//\u751f\u6210\u6a21\u5f0f\u4e32\u4e2d\u5404\u4e2a\u70b9\u4e3a\u7b2c\u4e00\u4e2a\u70b9\u7684fail\u6570\u7ec4\n    begin\n      //\u56e0\u8d77\u70b9\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u4ee5\u4e0b\u5173\u4e8ej\u7684\u64cd\u4f5c\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u601d\u7ef4\u4e0d\u6e05\u6670\u5f88\u5bb9\u6613\u51fa\u9519\n      while (j>0)and(a[min,j+l]<>a[min,i]) do\n      j:=f[l,j+l-1];\n      if a[min,j+l]=a[min,i] then\n      inc(j);\n      f[l,i]:=j;\n    end;\n  end;\n  l:=1;\n  r:=len[min];\n  while l<=r do//\u4e8c\u5206\u7b54\u6848\n  begin\n    mid:=(l+r) div 2;\n    if go(mid) then\n    l:=mid+1\n    else\n    r:=mid-1;\n  end;\n  writeln(r+1);//\u56e0\u6211\u4eec\u662f\u7528\u67e5\u5206\u6570\u5217\u6bd4\u8f83\uff0c\u800c\u539f\u59cb\u6570\u5217\u6bd4\u67e5\u5206\u6570\u5217\u591a\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u7b54\u6848+1\nend.\n```",
        "postTime": 1532442009,
        "uid": 7535,
        "name": "beng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u4f60$n$\u4e2a\u4e32,\u6c42\u6700\u957f\u516c\u5171\u5b50\u4e32\n\n\u5b9a\u4e49\u4e24\u4e2a\u5982\u679c\u957f\u5ea6\u76f8\u540c,\u5e76\u4e14\u4ed6\u4eec\u90fd\u52a0\u4e0a\u4e00\u4e2a\u6570\u4f1a\u53d8\u6210\u4e00\u6837\u7684\u5c31\u76f8\u540c\n\n---\n\n### \u9898\u89e3\n\n\u5176\u5b9e\u8bf4\u767d\u4e86\u5c31\u662f\u4e24\u4e2a\u4e32\u7684\u5dee\u5206\u6570\u7ec4\u76f8\u540c\u4ed6\u4eec\u5c31\u76f8\u540c\n\n\u5f53\u7136\u5982\u679c\u4e24\u4e2a\u5dee\u5206\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u6570\u4e0d\u540c\u4e5f\u6ca1\u5173\u7cfb\n\n\u6240\u6709\u7b54\u6848\u5c31\u662f\u539f\u6765\u6240\u6709\u4e32\u7684\u5dee\u5206\u6570\u7ec4\u7684$Len(LCS)+1$\n\n\u591a\u4e32$lcs$\u53c2\u8003~~\u6a21\u677f~~[$[Spoj1812]LCS2$](https://kelin.blog.luogu.org/solution-sp1812)\n\n~~\u53ea\u9700\u8981\u53d8\u4e0b\u8f93\u5165\u5c31\u597d\u4e86~~\n\n\u55ef,\u6bd5\u7adf\u591a\u5e74\u7684\u8001\u9898\u76ee\u4e86,\u5176\u5b9e$\\sum m$\u53ef\u4ee5\u5f00\u5230$10^6$\u7684\n\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nconst int N=1e5+5,M=2*N;\ntypedef int arr[N];\nstruct SAM{\n    int las,T,fa[M],len[M];map<int,int>ch[M];\n    SAM(){las=T=1;}\n    inline void ins(int c){\n        int p=las,np;fa[las=np=++T]=1,len[T]=len[p]+1;\n        for(;p&&!ch[p][c];p=fa[p])ch[p][c]=np;\n        if(p){\n            int q=ch[p][c],nq;\n            if(len[p]+1==len[q])fa[np]=q;\n            else{\n                fa[nq=++T]=fa[q],len[T]=len[p]+1;ch[nq]=ch[q];\n                for(fa[q]=fa[np]=nq;ch[p][c]==q;p=fa[p])ch[p][c]=nq;\n            }\n        }\n    }\n    int c[M],b[M];\n    inline void pre(){\n        fp(i,1,T)++c[len[i]];\n        fp(i,1,T)c[i]+=c[i-1];\n        fp(i,1,T)b[c[len[i]]--]=i;\n        memset(mi,63,sizeof mi);\n    }\n    int mx[M],mi[M];\n    inline void work(int*s,int n){\n        int l=0,x=1,c;\n        fp(i,2,n){\n\t\t    c=s[i]-s[i-1];while(x&&!ch[x][c])x=fa[x],l=len[x];\n            if(x)++l,x=ch[x][c],cmax(mx[x],l);else x=1,l=0;\n        }\n        fd(i,T,1){\n            int u=b[i],f=fa[u];\n            cmax(mx[f],min(mx[u],len[f]));\n            cmin(mi[u],mx[u]);mx[u]=0;\n        }\n    }\n}p;\nint n,m,ans,s[N];\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    sd(n);sd(m),sd(s[1]);\n    fp(i,2,m)sd(s[i]),p.ins(s[i]-s[i-1]);\n    p.pre();\n\tfp(i,2,n){\n\t\tsd(m);fp(i,1,m)sd(s[i]);\n    \tp.work(s,m);\n\t}\n    fp(i,1,p.T)cmax(ans,p.mi[i]);\n    printf(\"%d\",ans+1);\nreturn 0;\n}\n```",
        "postTime": 1521894750,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "# Sandy\u7684\u5361\u7247\n\n\u9898\u89e3\uff1a\n\u8fd9\u4e2a\u9898\u8ddf\u4e00\u4e2a$USACO$\u7684\u9898\u7279\u522b\u50cf\u3002\u6211\u4eec\u628a\u8fd9\u4e9b\u4e32\u5dee\u5206\n\n\u73b0\u5728\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u516c\u5171\u5b50\u4e32\u4e14\u51fa\u73b0\u6b21\u6570\u4e0d\u5c11\u4e8e$k$\u7684\u6700\u957f\u957f\u5ea6\u3002\n\n\u7d27\u63a5\u7740\u628a\u8fd9$n$\u65b0\u4e32\u62fc\u4e00\u8d77\u5efa\u7acb\u540e\u7f00\u6570\u7ec4\u3002\n\n\u4e24\u79cd\u505a\u6cd5\uff1a\n\n\u7b2c\u4e00\u79cd\u662f\u4e8c\u5206\u3002\u6211\u4eec\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\u7136\u540e\u66b4\u529b\u626b\u9a8c\u8bc1\uff0c\u590d\u6742\u5ea6\u4e3a$O(nlogn)$\u3002\n\n\u7b2c\u4e8c\u79cd\u5c31\u662f\u53cc\u6307\u9488\u4fdd\u8bc1\u5f53\u524d\u6307\u9488\u4e2d\u95f4\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u77ed\u533a\u95f4\uff0c\u987a\u4fbf\u7528\u5355\u8c03\n\n\u961f\u5217\u6c42\u533a\u95f4$ht$\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\nCode:\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define N 1000050\nint r[N],sa[N],wa[N],wb[N],wv[N],rk[N],ht[N],n,Ws[N],cnt,idx[N],H[1050],tot,ans,Q[N],m;\nint w[100050];\ninline char nc() {static char *p1,*p2,buf[100000]; return (p1==p2)&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;}\nint rd() {int x=0; char c=nc(); while(!isdigit(c)) c=nc(); while(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=nc(); return x;}\nvoid build_sa()\n{\n    int i,j,p,*x=wa,*y=wb,*t;\n    for(i=0;i<m;i++) Ws[i]=0;\n    for(i=0;i<n;i++) Ws[x[i]=r[i]]++;\n    for(i=1;i<m;i++) Ws[i]+=Ws[i-1];\n    for(i=n-1;i>=0;i--) sa[--Ws[x[i]]]=i;\n    for(p=j=1;p<n;j<<=1,m=p)\n\t{\n        for(p=0,i=n-j;i<n;i++) y[p++]=i;\n        for(i=0;i<n;i++) if(sa[i]-j>=0) y[p++]=sa[i]-j;\n        for(i=0;i<n;i++) wv[i]=x[y[i]];\n        for(i=0;i<m;i++) Ws[i]=0;\n        for(i=0;i<n;i++) Ws[wv[i]]++;\n        for(i=1;i<m;i++) Ws[i]+=Ws[i-1];\n        for(i=n-1;i>=0;i--) sa[--Ws[wv[i]]]=y[i];\n        for(t=x,x=y,y=t,i=p=1,x[sa[0]]=0;i<n;i++)\n\t\t{\n            if(y[sa[i]]==y[sa[i-1]]&&y[sa[i]+j]==y[sa[i-1]+j]) x[sa[i]]=p-1;\n            else x[sa[i]]=p++;\n        }\n    }\n    for(i=1;i<n;i++) rk[sa[i]]=i;\n    for(i=p=0;i<n-1;ht[rk[i++]]=p)\n        for(p?p--:0,j=sa[rk[i]-1];r[i+p]==r[j+p];p++);\n}\nint main()\n{\n    int i,j=0;\n    cnt=rd();\n    int minn=1<<30,maxx=0;\n    for(j=1;j<=cnt;j++)\n\t{\n        int lim;\n        lim=rd();\n        for(i=0;i<lim;i++) w[i]=rd();\n        for(i=1;i<lim;i++) idx[n]=j,r[n++]=w[i]-w[i-1],minn=min(minn,r[n-1]),maxx=max(maxx,r[n-1]);\n        n++;\n    }\n    m=maxx-minn+1;\n    for(i=0;i<n;i++)\n\t{\n        if(idx[i]) r[i]-=minn-1;\n        else r[i]=m+1;\n    }\n    r[n++]=0; m+=2;\n    build_sa();\n    int ll=0,rr=0; j=0;\n    for(i=0;i<n;i++)\n\t{\n        H[idx[sa[i]]]++; if(H[idx[sa[i]]]==1&&idx[sa[i]]) tot++;\n        while(ll<rr&&ht[Q[rr-1]]>ht[i]) rr--;\n        Q[rr++]=i;\n        if(tot!=cnt) continue;\n        while(j<i&&tot==cnt)\n\t\t{\n            H[idx[sa[j]]]--;\n            if(H[idx[sa[j]]]==0&&idx[sa[j]]) tot--;\n            j++;\n        }\n        j--; H[idx[sa[j]]]++;\n        if(H[idx[sa[j]]]==1&&idx[sa[j]]) tot++;\n        while(ll<rr&&Q[ll]<=j) ll++;\n        if(tot==cnt)\n\t\t{\n            ans=max(ans,ht[Q[ll]]);\n        }\n    }\n    printf(\"%d\\n\",ans+1);\n\treturn 0;\n}\n```",
        "postTime": 1546857692,
        "uid": 58178,
        "name": "JZYshuraK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    },
    {
        "content": "\u65e2\u7136\u90fd\u7528KMP\uff0c\u6211\u6765\u8bb2\u8bb2\u540e\u7f00\u6570\u7ec4\u5427\u3002\n\n\u5148\u8981\u628a\u6240\u6709\u5dee\u5206\u540e\u7684\u4e32\u641e\u5230\u4e00\u8d77\uff0c\u6ce8\u610f\u52a0\u5206\u5272\u7b26\u53f7\uff0c\u800c\u4e14\uff0c\u6bcf\u4e2a\u5206\u5272\u7b26\u53f7\u90fd\u5e94\u8be5\u4e0d\u540c\uff01\uff01\uff01\uff01\uff01\n\n\u7136\u540e\uff0c\u6c42\u51faheight[]\u3002\u4e8c\u5206\u7b54\u6848\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u53ef\u80fd\u7684\u957f\u5ea6t\uff0c\u6211\u4eec\u770b\u770bheight\u91cc\u9762\u6240\u6709\u5927\u4e8et\u7684\u8fde\u7eed\u6bb5\u770b\u6210\u4e00\u6574\u6bb5\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u6bb5\u4e2d\u662f\u5426\u5305\u542b\u4e86\u6240\u6709\u4e32\u3002\u82e5\u6709\uff0c\u5219\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25\u3002\n\n\u00b7\u00b7\u00b7cpp\n\n\n    \n    \n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define N 1505\nconst long inf=0xfffffff;\nusing namespace std;\nstruct tzy{long a,p;};\nlong l[N],f[N][N],s[N*N/10],len=0,bl[N*N/10],pos[N*N/10];\nlong n,nn,m,i,j,k,p,ans,height[N*N/10],rk[N*N/10],sa[N*N/10],H[N*N/10];\nlong tmp[N*N/10],x[N*N/10];\nbool mark[N];\ntzy e[N*N/10];\nbool cmp(tzy a,tzy b){return a.a<b.a;}\nbool eq(long f[],long a,long b,long w){return f[a]==f[b]&&f[a+w]==f[b+w];}\nvoid Rsort()\n{\n    long i;\n    for (i=0; i<=m; i++) tmp[i]=0;\n    for (i=1; i<=n; i++) tmp[rk[x[i]]]++;\n    for (i=1; i<=m; i++) tmp[i]+=tmp[i-1];\n    for (i=n; i; i--) sa[tmp[rk[x[i]]]]=x[i],tmp[rk[x[i]]]--;\n}\nvoid getSA()\n{\n    long i,w,p;\n    for (i=1; i<=n; i++) rk[i]=s[i],x[i]=i;\n    Rsort();\n    for (w=1,p=1; p<n; w*=2,m=p)\n    {\n        for (p=0,i=n-w+1; i<=n; i++) p++,x[p]=i;\n        for (i=1; i<=n; i++) if (sa[i]>w) p++,x[p]=sa[i]-w;\n        Rsort();\n        memcpy(x,rk,sizeof(x)); rk[sa[1]]=p=1;\n        for (i=2; i<=n; i++) rk[sa[i]]=eq(x,sa[i],sa[i-1],w)?p:++p;\n    }\n}\nvoid getHeight()\n{\n    long i,j,k=0;\n    for (i=1; i<=n; i++)\n    {\n        for (k=k?k-1:k,j=sa[rk[i]-1]; s[i+k]==s[j+k]; k++);\n        H[i]=k;\n    }\n    for (i=1; i<=n; i++) height[rk[i]]=H[i];\n}\nbool chk(long t)\n{\n    long i,j,d=0;\n    t--;\n    for (i=1; i<=n; i++)\n    {\n        if (height[i]>=t&&bl[i]) mark[bl[i]]=mark[bl[i-1]]=1;\n        else{\n            d=1;\n            for (j=1; j<=nn; j++) if (!mark[j]) d=0;\n            if (d) {return 1;}\n            for (j=i-1; j&&height[j]>=t; j--) mark[bl[j]]=mark[bl[j-1]]=0;\n        }\n        if(!bl[i]) break;\n    }\n    return 0;\n}\nint main()\n{\n    cin>>n; nn=n;\n    long L=1,R=N,M;\n    for (i=1; i<=n; i++)\n    {\n        cin>>l[i]; R=min(R,l[i]);\n        for (j=1; j<=l[i]; j++) {cin>>f[i][j]; if (j>1) len++,e[len].a=f[i][j]-f[i][j-1],e[len].p=len,pos[len]=i;}\n        len++; e[len].a=inf+i,e[len].p=len,pos[len]=0;\n    }\n    sort(e+1,e+len+1,cmp);\n    for (i=1,m=0; i<=len; i++) m=(i==1||e[i].a!=e[i-1].a)?m+1:m,s[e[i].p]=m;//li sanhua!\n    n=len; getSA(); getHeight();\n    for (i=1; i<=n; i++) bl[i]=pos[sa[i]];\n    while (L<R)\n    {\n        memset(mark,0,sizeof(mark));\n        M=(L+R)/2;\n        if (chk(M+1)) L=M+1; else R=M;\n    }\n    cout<<L;\n}\n```\n```cpp",
        "postTime": 1492606781,
        "uid": 24634,
        "name": "lxd150039",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2463 \u3010[SDOI2008]Sandy\u7684\u5361\u7247\u3011"
    }
]