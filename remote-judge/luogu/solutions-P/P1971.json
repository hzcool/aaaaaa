[
    {
        "content": "# [1971\u5154\u5154\u4e0e\u86cb\u86cb](https://www.luogu.com.cn/problem/P1971)\n# \u4e8c\u5206\u56fe\u535a\u5f08\u8bba\n### author: LiveDream \n#### \u524d\u7f6e\u77e5\u8bc6:\n1. \u5bf9\u4e8e\u4e8c\u5206\u56fe\u535a\u5f08\uff0c\u5148\u624b\u5982\u679c\u7387\u5148\u843d\u5165\u6700\u5927\u5339\u914d\u7684\u70b9x\u4e2d\uff0c\u90a3\u4e48\u540e\u624b\u53ea\u9700\u8981\u9009\u62e9\u4e0ex\u5339\u914d\u7684\u70b9y\u8d70\u5373\u53ef\uff0c\u8d70\u5230\u6700\u540e\u5148\u624b\u5fc5\u8d25\uff1b \n2. \u5982\u679c\u662f\u5b8c\u5168\u5339\u914d\uff0c\u90a3\u4e48\u5148\u624b\u65e0\u8bba\u843d\u5b50\u4f55\u5904\uff0c\u5747\u7387\u5148\u843d\u5165\u6700\u5927\u5339\u914d\u70b9\uff0c\u5148\u624b\u5fc5\u8d25\uff1b\n3. \u5982\u679c\u4e0d\u662f\u5b8c\u5168\u5339\u914d\uff0c\u5148\u624b\u9009\u62e9\u975e\u6700\u5927\u5339\u914d\u70b9x\u843d\u5b50\uff0c\u90a3\u4e48\u540e\u624b\u65e0\u8bba\u843d\u5b50\u4f55\u5904\uff0c\u90fd\u662f\u6700\u5927\u5339\u914d\u4e2d\u7684\u67d0\u70b9y\uff0c\n\t\u56e0\u4e3a\u5982\u679cy\u4e0d\u662f\u6700\u5927\u5339\u914d\u7684\u70b9, \u5219x\u5230y\u5f62\u6210\u589e\u5e7f\u8def\uff0c\u6700\u5927\u5339\u914d\u7684\u8fb9\u6570\u8fd8\u53ef\u4ee5\u52a01\uff0c\u5bfc\u81f4\u77db\u76fe\uff1b\u8fdb\u800c\uff0c\n\t\u540e\u624b\u7387\u5148\u843d\u5165\u6700\u5927\u5339\u914d\u7684\u70b9\u4e2d\uff0c\u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565\uff1b\n    \n#### \u672c\u9898\u7b56\u7565\uff1a \n1. \u628a\u68cb\u5b50\u7684\u79fb\u52a8\u89c6\u4e3a\u7a7a\u683c\u7684\u79fb\u52a8\uff0c\u90a3\u4e48\u5154\u5154\u5148\u624b\u79fb\u52a8\u7a7a\u683c\u5230\u767d\u5b50\u5904\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u7a7a\u683c\u770b\u4f5c\u9ed1\u8272\uff0c \u9ed1\u767d\u67d3\u8272\uff0c\u5efa\u4e8c\u5206\u56fe\uff1b\n2. \u5982\u679c\u5728\u79fb\u52a8\u7a7a\u683c\u524d\uff0c\u7a7a\u683c\u5904\u4e8e\u6700\u5927\u5339\u914d\u7684\u975e\u5fc5\u987b\u70b9\uff0c\u90a3\u4e48\u79fb\u52a8\u540e\u5fc5\u7136\u7387\u5148\u8fdb\u5165\u6700\u5927\u5339\u914d\u4e2d\uff0c\u5fc5\u8d25\uff0c\u53cd\u4e4b\u6709\u5fc5\u80dc\u7b56\u7565\uff1b\n3. \u5bf9\u4e8eK\u8f6e\u6e38\u620f\uff0c\u7b2ci\u8f6e\u6e38\u620f\u65f6\u7a7a\u683c\u7684\u4f4d\u7f6ecur\u5728(sx, sy), \u5982\u679ccur\u4e0d\u5728\u6700\u5927\u5339\u914d\u4e2d\uff0c\u90a3\u4e48\u843d\u5b50\u540e\u5fc5\u843d\u5165\u6700\u5927\u5339\u914d\uff0c\n\u6240\u4ee5\u65e0\u8bba\u600e\u4e48\u843d\u5b50\uff0c\u5fc5\u8d25\uff1b\n4. \u5982\u679ccur\u5728\u6700\u5927\u5339\u914d\u4e2d,\u4e14\u6709\u5339\u914dmatch[cur]\u4e3anxt\uff0c\u90a3\u4e48\u5220\u6389cur\u540e\u4ecenxt\u8dd1\u5308\u7259\u5229\uff0c\u770bnxt\u662f\u5426\u8fd8\u80fd\u6709\u53e6\u5916\u7684\u5339\u914d\uff0c\u5982\u679c\u6709\n\u90a3\u4e48cur\u5c31\u4e0d\u662f\u6700\u5927\u5339\u914d\u7684\u5fc5\u987b\u70b9\uff0c\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u53cd\u4e4b\u4ecd\u7136\u5fc5\u8d25\uff1b\u5bf9\u6bcf1\u8f6e\u6e38\u620f\u91cd\u590d\u64cd\u4f5c\uff0c\u5f97\u5230\u6bcf1\u8f6e\u6e38\u620f\u7684\u80dc\u8d1f\u60c5\u51b5win[i]\uff1b \n5. \u5982\u4f55\u5224\u65ad\u5154\u5154\u72af\u4e86\u9519\u8bef\uff1f\u2014\u2014\u5982\u679cwin[i]\u662f\u5fc5\u80dc\uff0c\u800c\u5154\u5154\u8d70\u5b8c\u4e4b\u540ewin[i+1]\u5fc5\u80dc\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u5154\u5154\u72af\u4e86\u9519\uff1b \n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N = 50, K = 1005;\nint n, m, ans, cnt, tot, head[N*N];\nchar g[N][N];\nint match[N*N], res[K*2], win[K*2]; \nbool vis[N*N], block[N*N], color[N][N];\nint dx[4] = {1, 0, 0, -1};\nint dy[4] = {0, 1, -1, 0};\nstruct node \n{\n    int to, nxt;\n}edge[N*N*2*4]; //\u6bcf\u4e2a\u70b9\u8fde4\u4e2a\u65b9\u5411\uff0c\u53cc\u5411\u8fb9 \n\nvoid addedge(int s, int e) \n{\n    cnt++;\n    edge[cnt].to = e;\n    edge[cnt].nxt = head[s];\n    head[s] = cnt;\n    return ;\n}\n\nbool dfs(int x) //\u5308\u7259\u5229\u7b97\u6cd5\n{\n    for(int i = head[x]; i != 0; i = edge[i].nxt) \n\t{\n        int y = edge[i].to;\n        if(block[y] == true) //\u6dfb\u52a0\u4e00\u884c\u5c4f\u853d\u5df2\u5220\u6389\u7684\u70b9 \n        \tcontinue;\n        if(vis[y] == false) \n\t\t{\n            vis[y] = true;\n\t\t\t//\u5982\u679cy\u6ca1\u6709\u5339\u914d \u6216\u8005 y\u7684\u5339\u914d\u70b9match[y]\u80fd\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u5339\u914d\n            if(match[y] == 0 || dfs(match[y]) == true) \n\t\t\t{\n                match[y] = x; //y\u7684\u914d\u5bf9\u70b9\u662fx\n                match[x] = y; //\u589e\u52a0\u8fd9\u884c\u4ee3\u7801\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u627e\u6700\u5927\u5339\u914d\u975e\u5fc5\u987b\u70b9\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nint get_id(int x, int y)\n{\n\treturn (x-1) * m + y;\n} \n\nbool check(int x, int y)\n{\n\tif(x < 1 || x > n || y < 1 || y > m || color[x][y] == false)\n\t\treturn false;\n\treturn true;\t\n}\n\nint main()\n{\n\t//\u8f93\u5165 \n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++)\n        for(int j = 1; j <= m; j++)\n\t\t\tcin >> g[i][j]; //\u8ff7\u5bab\u6570\u7ec4 \n\t//\u67d3\u8272\n\tint sx, sy;\n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= m; j++)\n        {\n        \tif(g[i][j] == 'O') //\u5c06\u767d\u8272\u7684\u68cb\u5b50\u67d3\u8272 \n        \t{\n        \t\tcolor[i][j] = true;\n        \t}\n        \telse if(g[i][j] == '.') //\u8d77\u70b9\u8bb0\u5f55\uff0c\u5f53\u4f5c\u9ed1\u8272\u5bf9\u5f85 \n        \t{\n        \t\tsx = i;\n        \t\tsy = j;\n\t\t\t}\n\t\t}\n    //\u5efa\u56fe \n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= m; j++)\n        {\n        \tif(color[i][j] == true) //\u767d\u5b50\u8df3\u8fc7 \n        \t\tcontinue;\n        \tint cur = get_id(i, j); //\u5f53\u524d\u70b9\u7f16\u53f7 \n        \tfor(int k = 0; k < 4; k++)\n        \t{\n        \t\tint nx = i + dx[k];\n        \t\tint ny = j + dy[k];\n        \t\tif(check(nx, ny) == false)\n        \t\t\tcontinue;\n        \t\tint nxt = get_id(nx, ny);\n        \t\taddedge(cur, nxt); //\u5efa\u8fb9 \n        \t\taddedge(nxt, cur); //\u627e\u6700\u5927\u5339\u914d\u4e0d\u9700\u8981\u53cd\u8fb9\uff0c\u4f46\u662f\u627e\u6700\u5927\u5339\u914d\u975e\u5fc5\u987b\u70b9\u9700\u8981\u6298\u8fd4\u8dd1 \n\t\t\t}\n\t\t}\n\t//\u5308\u7259\u5229, \u76ee\u7684\u662f\u770b\u8d77\u70b9\u662f\u5426\u843d\u5728\u6700\u5927\u5339\u914d\u4e2d \n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= m; j++)\n        {\n        \tif(color[i][j] == false)\n        \t\tcontinue;\n        \tmemset(vis, 0, sizeof(vis));\n        \tint cur = get_id(i, j); \n        \tif(dfs(cur) == true) \n\t\t\t\tans++;\n\t\t}\n\t//\u8f93\u5165\u6e38\u620f\u8fc7\u7a0b \n\tint k; \n\tcin >> k;\n\tfor(int i = 1; i <= 2*k; i++)\n\t{\n\t\tint cur = get_id(sx, sy);\n\t\tblock[cur] = true; //\u5220\u6389cur \n\t\tif(match[cur] == 0) //\u68cb\u5b50\u5f53\u524d\u4e0d\u5728\u5339\u914d\u4e2d\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b65\u4f1a\u7387\u5148\u8d70\u5230\u6700\u5927\u5339\u914d\u4e2d\uff0c\u5fc5\u8d25 \n\t\t\twin[i] = false;\n\t\telse\n\t\t{\n\t\t\tint nxt =  match[cur];\n\t\t\tmatch[cur] = match[nxt] = 0;  //\u5220\u6389cur\u4e0e nxt\u7684\u5339\u914d\u5173\u7cfb \n\t\t\tmemset(vis, 0, sizeof(vis)); //\u8dd1\u5308\u7259\u5229\u8bb0\u5f97\u6e050 vis \n\t\t\tif(dfs(nxt) == true) //\u82e5nxt\u8fd8\u80fd\u627e\u5230\u5339\u914d\uff0c\u5219cur\u4e0d\u662f\u6700\u5927\u5339\u914d\u5fc5\u987b, \u90a3\u4e48\u4e0b\u4e00\u6b65\u7387\u5148\u8d70\u5230\u6700\u5927\u5339\u914d\uff0c\u5fc5\u8d25 \n\t\t\t\twin[i] = false;\n\t\t\telse\n\t\t\t\twin[i] = true; \n\t\t}\n\t\tcin >> sx >> sy;\n\t}\n\t\n\t//\u5904\u7406\u8f93\u51fa \n    for(int i = 1; i <= k; i++) \n    {\n    \tif(win[2*i-1] == true && win[2*i] == true) //\u5154\u5154\u8d70\u4e4b\u524d\u662f\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u8d70\u5b8c\u86cb\u86cb\u6709\u5fc5\u80dc\u7b56\u7565 \n    \t{\n    \t\tres[++tot] = i; \n\t\t}\n\t}\n\tcout << tot << endl;\n\tfor(int i = 1; i <= tot; i++)\n\t{\n\t\tcout << res[i] << endl;\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1587969256,
        "uid": 123216,
        "name": "apple365",
        "ccfLevel": 0,
        "title": "1971\u5154\u5154\u4e0e\u86cb\u86cb\u9898\u89e3"
    },
    {
        "content": "\u5148\u5ba1\u6e05\u695a\u9898\u610f\u3002A \u4e00\u6b65\u8d70\u9519\u7684\u5224\u5b9a\uff1aA \u8d70\u8fd9\u6b65\u4e4b\u524d\uff0cA\u5148\u624b\u91c7\u7528\u6700\u4f18\u7b56\u7565\u5fc5\u80dc\uff1bA \u8d70\u8fd9\u6b65\u4e4b\u540e\uff0cB\u5148\u624b\u91c7\u7528\u6700\u4f18\u7b56\u7565\u5fc5\u80dc\u3002\n\n\u53ef\u4ee5\u76f4\u63a5\u7528\u6700\u57fa\u7840\u7684\u535a\u5f08\u8bba\u5c55\u5f00\u7206\u641c\uff0c\u5224\u65ad\u662f\u5426\u5fc5\u80dc\u3002\u672c\u9898\u975e\u5e38\u826f\u5fc3\uff0c\u8fd9\u5c31\u670975\u5206\u3002\n\n\u5148\u968f\u4fbf\u6a21\u62df\u51e0\u5c40\u6e38\u620f\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6e38\u620f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u80fd\u51fa\u73b0\u73af\uff0c\u5373\u7a7a\u683c\u7684\u79fb\u52a8\u4e00\u5b9a\u662f\u4e0d\u91cd\u590d\u5730\u7ecf\u8fc7\u4e00\u4e9b\u4f4d\u7f6e\uff0c\u800c\u8fd9\u4e9b\u4f4d\u7f6e\u539f\u672c\u7684\u989c\u8272\u4f9d\u6b21\u767d\u9ed1\u76f8\u95f4\u3002\n\n\u8fd9\u8ba9\u6211\u4eec\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u4e8c\u5206\u56fe\u7684\u589e\u5e7f\u8def\uff1a\u8bbe\u8d77\u70b9\u548c\u9ed1\u5b50\u4e3a\u5de6\u8fb9\uff0c\u767d\u5b50\u4e3a\u53f3\u8fb9\uff0c\u90a3\u4e48 A \u7684\u79fb\u52a8\u53ef\u4ee5\u770b\u4f5c\u662f\u5de6\u8fb9\u8fde\u5411\u53f3\u8fb9\u7684\u4e00\u6761\u8fb9\uff0c\u800c B \u7684\u79fb\u52a8\u53ef\u4ee5\u770b\u4f5c\u662f\u4ece A \u521a\u521a\u5230\u8fbe\u7684\u70b9\u8fde\u56de\u5de6\u8fb9\u7684\u7684\u4e00\u6761\u8fb9\uff0c\u4e14\u6bcf\u6761\u8fb9\u7684\u76ee\u6807\u70b9\u90fd\u4e0d\u80fd\u662f\u5df2\u7ecf\u5230\u8fbe\u8fc7\u7684\u70b9\u3002\u8fd9\u663e\u7136\u5c31\u662f\u4e8c\u5206\u56fe\u589e\u5e7f\u8def\u7684\u6837\u5b50\u3002\n\n\u5982\u679c A \u5f53\u524d\u7684\u5c40\u9762\u5fc5\u80dc\uff0c\u8bf4\u660e\u8fd9\u6761\u589e\u5e7f\u8def\u662f\u589e\u5e7f\u6210\u529f\u7684\uff0c\u5373\u6709\u5947\u6570\u6761\u8fb9\u3002\u56e0\u6b64\u5224\u65ad\u5c40\u9762\u662f\u5426\u5fc5\u80dc\u8f6c\u5316\u4e3a\u5224\u65ad\u5f53\u524d\u70b9\u662f\u5426\u4e00\u5b9a\u5728\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u4e2d\u3002\n\n\u5224\u65ad\u7684\u8fc7\u7a0b\uff1a\u5f3a\u5236\u5f53\u524d\u70b9\u4e0d\u9009\uff0c\u5982\u679c\u5b83\u7684\u5339\u914d\u70b9\u4ecd\u7136\u80fd\u627e\u5230\u65b0\u7684\u5339\u914d\u70b9\uff0c\u8bf4\u660e\u6709\u4e00\u79cd\u6700\u5927\u5339\u914d\u4e0d\u5305\u542b\u5b83\uff0c\u81ea\u7136\u5b83\u5c31\u4e0d\u662f \u4e00\u5b9a \u5728\u6700\u5927\u5339\u914d\u4e2d\u3002\n\n\n```\n#include <bits/stdc++.h>\n#define mset(a, b) memset(a, b, sizeof(a))\nusing namespace std;\ntypedef long long LL;\nconst int N = 50;\nconst int MAXN = N*N;\nconst int M = 1005;\n\ntemplate <typename T> inline void read(T &AKNOI)\n{\n\tT x=0, flag=1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch == '-') flag = -1;\n\t\tch = getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx = (x<<1) + (x<<3) + ch - '0';\n\t\tch = getchar();\n\t}\n\tAKNOI = flag * x;\n}\n\nint nx[4] = {0, 1, 0, -1};\nint ny[4] = {1, 0, -1, 0};\n\nstruct Edge\n{\n\tint v, nxt;\n}e[MAXN*8];\nint first[MAXN], eCnt;\n\ninline void AddEdge(int u, int v)\n{\n\te[++eCnt].v = v;\n\te[eCnt].nxt = first[u];\n\tfirst[u] = eCnt;\n}\n\nchar s[N];\nint n, m, q, mp[N][N], bx, by, id[N][N], ID;\nint match[MAXN], ban[MAXN], vis[MAXN], tim, win[MAXN];\nint ans[M], top;\n\nint Match(int u)\n{\n\tif(ban[u]) return 0;\n\tfor(int i=first[u];i;i=e[i].nxt){\n\t\tint v = e[i].v;\n\t\tif(vis[v] == tim || ban[v]) continue;\n\t\tvis[v] = tim;\n\t\tif(!match[v] || Match(match[v])){\n\t\t\tmatch[u] = v;\n\t\t\tmatch[v] = u;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid init()\n{\n\tread(n); read(m);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%s\", s + 1);\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tif(s[j] == 'O') mp[i][j] = 0;\n\t\t\telse if(s[j] == 'X') mp[i][j] = 1;\n\t\t\telse{\n\t\t\t\tmp[i][j] = 1;\n\t\t\t\tbx = i, by = j;\n\t\t\t} \n\t\t}\n\t}\n}\n\nvoid build()\n{\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tid[i][j] = ++ID;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tif(!mp[i][j]) continue;\n\t\t\tfor(int k=0;k<4;++k){\n\t\t\t\tint x = i + nx[k], y = j + ny[k];\n\t\t\t\tif(x < 1 || x > n || y < 1 || y > m) continue;\n\t\t\t\tif(mp[x][y] == 1) continue;\n\t\t\t\tAddEdge(id[i][j], id[x][y]);\n\t\t\t\tAddEdge(id[x][y], id[i][j]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid solve()\n{\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tif(mp[i][j]){\n\t\t\t\t++tim;\n\t\t\t\tMatch(id[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\tread(q);\n\tfor(int i=1;i<=(q<<1);++i){\n\t\tint x = id[bx][by];\n\t\tban[x] = 1;\n\t\tif(match[x]){\n\t\t\tint y = match[x];\n\t\t\tmatch[x] = match[y] = 0;\n\t\t\t++tim;\n\t\t\twin[i] = !Match(y);\n\t\t}\n\t\tread(bx); read(by);\n\t}\n\tfor(int i=1;i<=q;++i){\n\t\tif(win[(i<<1)-1] && win[i<<1]){\n\t\t\tans[++top] = i;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", top);\n\tfor(int i=1;i<=top;++i){\n\t\tprintf(\"%d\\n\", ans[i]);\n\t}\n}\n\nint main()\n{\n\tinit();\n\tbuild();\n\tsolve();\t\n\treturn 0;\n}\n\n```",
        "postTime": 1544342098,
        "uid": 62088,
        "name": "tyler178",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1971 \u3010[NOI2011]\u5154\u5154\u4e0e\u86cb\u86cb\u6e38\u620f\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1971)\t[LOJ\u4f20\u9001\u95e8](https://loj.ac/problem/2447)\n\n\u849f\u84bb\u505a\u9898\u592a\u5c11\uff0c\u8fd9\u4e2a**\u535a\u5f08\u8bba**\u7684\u9898\u5b9e\u5728\u662f\u592a\u597d\u4e86\uff01\uff01\uff01\n\n### Solution\n\n\u8fd9\u4e2a\u9898\u9700\u8981\u7ec6\u8bb2\uff0c\u54b1\u4eec\u4e00\u6b65\u4e00\u6b65\u6765\n\n##### 1.\u601d\u8def\u7684\u8f6c\u5316\n\n\u8fd9\u9898\u770b\u7740\u5f88\u50cf\u535a\u5f08\u8bba\uff0c\u5176\u5b9e\u5b83\u5c31\u662f\u535a\u5f08\u8bba\u3002\n\n\u4f46\u5982\u679c\u662f\u5bf9\u9ed1\u767d\u68cb\u5b50\u7684\u79fb\u52a8\u8def\u5f84\u8fdb\u884c\u5224\u65ad\uff0c\u4e00\u5171 $n\\times m-1$ \u679a\u68cb\u5b50\uff0c~~\u597d\u50cf\u4e5f\u4e0d\u591a~~\uff0c\u60c5\u51b5\u5f88\u591a\uff0c\u4e5f\u9012\u63a8\u4e0d\u4e86\uff0c\u662f\u4e0d\u53ef\u7684\u3002\n\n\u6211\u4eec\u6362\u4e2a\u89d2\u5ea6\u2014\u2014\u65e2\u7136\u68cb\u5b50\u591a\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u8003\u8651\u7a7a\u683c\u5462\uff1f\n\n\u5c06\u4ed6\u4eec\u7684\u64cd\u4f5c\u770b\u4f5c\u8f6e\u6d41\u5bf9\u7a7a\u683c\u8fdb\u884c\u79fb\u52a8\u3002\u56e0\u4e3a\u5154\u5154\u5f80\u5de6\u79fb\u68cb\u5b50\u5c31\u662f\u5f80\u53f3\u79fb\u7a7a\u683c\uff0c\u522b\u7684\u65b9\u5411\u540c\u7406\u3002\u86cb\u86cb\u540c\u7406\u3002\t\n\n##### 2.\u7a7a\u683c\u79fb\u52a8\u8def\u5f84\u7684\u5c0f\u6027\u8d28\n\n\u6027\u8d28\uff1a\u7a7a\u683c\u7684\u79fb\u52a8\u8def\u5f84\u4e0d\u4f1a\u91cd\u590d\uff0c\u5373\u7a7a\u683c\u4e0d\u4f1a\u591a\u6b21\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u3002\n\n\u6211\u4eec\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff1a\n\n\u8bb0\u7a7a\u683c\u521a\u5f00\u59cb\u6240\u5728\u7684\u683c\u5b50\u4e3a $P_0$ \uff0c\u7b2c $i$ \u6b65\u5230\u8fbe $P_i$ \u3002\n\n\u5047\u8bbe\u5728 $n$ \u6b65\u4e4b\u540e\u56de\u5230\u4e86 $P_0$ \uff0c\u5373\u8d70\u4e86 $P_0,P_1,P_2,\\cdots ,P_{n-1},P_n$ \u3002\u56e0\u4e3a\u6bcf\u6b21\u53ea\u80fd\u8d70\u4e0a\u4e0b\u5de6\u53f3\uff0c\u800c\u56de\u5230\u4e86\u539f\u70b9\uff0c\u6240\u4ee5\u5f80\u53f3\u8d70\u4e86\u591a\u5c11\uff0c\u5c31\u5f80\u5de6\u8d70\u4e86\u591a\u5c11\uff1b\u5f80\u4e0b\u8d70\u4e86\u591a\u5c11\uff0c\u5c31\u5f80\u4e0a\u8d70\u4e86\u591a\u5c11\uff0c\u90a3\u4e48 $n$ \u662f\u5076\u6570\u3002\n\n\u6240\u4ee5\u7b2c $1$ \u6b65\u662f\u5154\u5154\u632a\u52a8\u7684\uff0c\u7b2c $n$ \u6b65\u662f\u86cb\u86cb\u632a\u52a8\u7684\u3002\u4f46\u662f\u5f53\u7a7a\u683c\u5230\u4e86 $P_1$ \u65f6\uff0c\u6b64\u65f6 $P_0$ \u662f\u767d\u5b50\uff0c\u800c\u7a7a\u683c\u60f3\u8981\u56de $P_0$ \u65f6\uff0c\u662f\u86cb\u86cb\u62ff\u7740\u7684\uff0c\u4ed6\u52a8\u4e0d\u4e86\u767d\u5b50\uff0c\u6240\u4ee5\u77db\u76fe\u3002\n\n##### 3.\u4e8c\u5206\u56fe\u7684\u5339\u914d\u548c\u53e6\u4e00\u4e2a\u5c0f\u6027\u8d28\n\n\u5982\u679c\u5c06\u7a7a\u683c\u5f00\u59cb\u6240\u5728\u7684\u683c\u5b50\u770b\u4f5c\u9ed1\u8272\uff0c\u7531\u4e0a\u9762\u6027\u8d28\u53ef\u5f97\uff0c\u7a7a\u683c\u7684\u79fb\u52a8\u8def\u5f84\u5c31\u662f**\u9ed1\u767d\u76f8\u95f4**\u7684\u3002\n\n\u6211\u4eec\u5efa\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u662f\u9ed1\u8272\uff0c\u53f3\u8fb9\u662f\u767d\u8272\uff0c\u683c\u5b50\u76f8\u90bb\u7684\u8fdb\u884c\u8fde\u8fb9\u3002\u5154\u5154\u5c31\u662f\u4ece\u5de6\u5230\u53f3\uff0c\u86cb\u86cb\u5c31\u662f\u4ece\u53f3\u5230\u5de6\u3002\n\n\u6027\u8d28\uff1a\u5f53\u4e14\u4ec5\u5f53\u6700\u5927\u5339\u914d**\u4e00\u5b9a**\u8986\u76d6\u7a7a\u683c\u6240\u5728\u683c\u5b50\uff0c\u5154\u5154\u5fc5\u80dc\uff1b\u5426\u5219\u86cb\u86cb\u5fc5\u80dc\u3002\n\n\u6211\u4eec\u8ba8\u8bba\u5176\u4e2d\u4e00\u79cd\u60c5\u51b5\uff1a\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6700\u5927\u5339\u914d\u6ca1\u6709\u8986\u76d6\u7a7a\u683c\u6240\u5728\u7684\u683c\u5b50\uff0c\u86cb\u86cb\u5fc5\u80dc\u3002\n\n\u56e0\u4e3a\u6700\u5927\u5339\u914d\u4e2d\u6ca1\u6709\u8d77\u70b9\uff0c\u6240\u4ee5\u5154\u5154\u53ea\u80fd\u4ece\u67d0\u4e00\u6761\u975e\u5339\u914d\u8fb9\u8d70\u5230\u53f3\u8fb9\uff08\u6ca1\u6709\u6ca1\u8d70\u8fc7\u7684\u975e\u5339\u914d\u8fb9\u5154\u5154\u5c31\u8d25\u4e86\uff09\u3002\u6b64\u65f6\u86cb\u86cb\u5373\u5c06\u632a\u52a8\u7684\u70b9\u5fc5\u5b9a\u662f\u6700\u5927\u5339\u914d\u4e2d\u7684\uff08\u4e0d\u7136\u5c31\u53ef\u4ee5\u5c06\u8d77\u70b9\u548c\u8fd9\u4e2a\u70b9\u8fde\u8d77\u6765\u4e86\uff09\uff0c\u6240\u4ee5\u86cb\u86cb\u53ef\u4ee5\u632a\u56de\u5de6\u8fb9\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u86cb\u86cb\u5fc5\u5b9a\u80fd\u627e\u5230\u4e00\u79cd\u56de\u5230\u5de6\u8fb9\u7684\u65b9\u5f0f\uff0c\u4f46\u5154\u5154\u53ef\u80fd\u6ca1\u6709\u3002\n\n\u53e6\u4e00\u79cd\u540c\u7406\u53ef\u5f97\uff0c\u5c31\u4e0d\u518d\u591a\u6d6a\u8d39\u7bc7\u7ae0\u4e86\u3002\n\n##### 4.\u6b64\u9898\u89e3\u6cd5\n\n\u4f46\u662f\u8fd9\u4e2a\u9898\u4e0d\u662f\u666e\u901a\u7684\u535a\u5f08\u8bba\uff0c\u6240\u4ee5\u5b83\u4e5f\u4e0d\u662f\u95ee\u8c01\u5fc5\u80dc\uff0c\u800c\u662f\u5154\u5154\u72af\u9519\u8bef\u7684\u6b21\u6570\n\n\u6211\u4eec\u6a21\u62df\u4e00\u4e0b\u4e8c\u4eba\u7684\u8fc7\u7a0b\uff1a\n\n\u5148\u662f\u5154\u5154\u8d70\uff0c\u8bbe\u5154\u5154\u8d70\u5230\u4e86 $t$ \uff0c\u7531\u4e0a\u9762\u4e8c\u5206\u56fe\u7684\u6027\u8d28\u7684\u53ef\u77e5\uff0c\u6211\u4eec\u53ea\u9700\u5224\u65ad\u6709\u8d77\u70b9\u548c\u65e0\u8d77\u70b9\u7684\u6700\u5927\u5339\u914d\u662f\u5426\u4e0d\u4e00\u6837\u5373\u53ef\u3002\u4e0d\u76f8\u7b49\u8bf4\u660e\u4e00\u5b9a\u6709\u8d77\u70b9\uff0c\u4e5f\u5c31\u662f\u5154\u5154\u5fc5\u80dc\u3002\n\n\u7136\u540e\u5f3a\u8feb\u8986\u76d6\u8d77\u70b9\u548c $t$ \u7684\u5339\u914d\n\n\u73b0\u5728\u662f\u86cb\u86cb\u8d70\uff0c\u5339\u914d\u8fb9\u662f\u5154\u5154\u8d70\u8fc7\u6765\u7684\uff0c\u7531\u4e0a\u9762\u4e8c\u5206\u56fe\u7684\u6027\u8d28\u53ef\u77e5\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u548c $t$ \u76f8\u8fde\u7684\u70b9\u6ca1\u6709\u5728\u6700\u5927\u5339\u914d\u4e2d\uff0c\u90a3\u4e48\u86cb\u86cb\u5c31\u53ef\u4ee5\u8f6c\u5316\u5230\u5154\u5154\u7684\u5fc5\u8d25\u6001\uff0c\u4e5f\u5c31\u662f\u86cb\u86cb\u5fc5\u80dc\u3002\n\n\u7136\u540e\u5c06\u86cb\u86cb\u8d70\u5230\u7684\u683c\u5b50\u770b\u4f5c\u65b0\u7684\u8d77\u70b9\uff0c\u7ee7\u7eed\u91cd\u590d\u4e0a\u9762\u7684\u8fc7\u7a0b\u3002\n\n\u7ec6\u8282\uff1a\u90fd\u5728\u4ee3\u7801\u91cc\u4e86(o\uff9fv\uff9f)\u30ce\n\n### Code\n\n```c++\n#include<bits/stdc++.h>\n\nusing namespace std;\nconst int N=50,M=N*N,K=1000,dx[]={0,0,-1,1},dy[]={1,-1,0,0};\nint n,m,k;\nchar mp[N][N];\nint idx[N][N],cntB,cntW;\nint x,y;\n\ntemplate <typename T> void read(T &x){\n     int f=1; x=0;\n     char ch=getchar();\n     while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n     while(isdigit(ch)){x=x*10+(ch^48);ch=getchar();}\n     x*=f;\n}\n\nint cnt,head[M];\nstruct edge{\n    int to,nxt;\n}e[M<<2];\ninline void add(int u,int v){\n    e[++cnt].to=v;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n}\n\n/*-------\u4e8c\u5206\u56fe\u5339\u914d----------*/\nint max_mat,match[M];\nbool flag[M],vis[M];    //flag\u4ee3\u8868\u662f\u5426\u80fd\u5339\u914d    vis\u8868\u793a\u662f\u5426\u5339\u914d\ninline bool find(int u){    //\u627e\u5230u\u7684\u5339\u914d\n    vis[u]=1;\n    for(int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(flag[v]==0&&(match[v]==0||(vis[match[v]]==0&&find(match[v])))){\n            match[u]=v;\n            match[v]=u;\n            return 1;\n        }\n    }\n    return 0;\n}\n\ninline bool check(int u){   //\u5224\u65ad\n    for(int i=1;i<=cntB+cntW;i++) vis[i]=0;\n    return find(u);\n}\n\ninline void un_Matched(int u){      //\u5c06u\u7684\u5339\u914d\u65ad\u5f00\n    if(match[u]==0) return ;\n    int v=match[u];\n    match[u]=match[v]=0;\n    max_mat--;\n    flag[u]=1;\n    if(check(v)) max_mat++;\n}\n\ninline void Matched(int u){     //\u5f3a\u5236u\u5339\u914d\n    flag[u]=0;\n    if(check(u)) max_mat++;\n}\n\ninline void cover(int u,int v){     //\u5c06u\u548cv\u7684\u5339\u914d\u6765\u8986\u76d6\u539f\u6765\u7684\u5339\u914d\n    if(match[u]==v){\n        flag[u]=flag[v]=1;\n        return ;\n    }\n    int f=0,g=0;\n    if(match[u]!=0) g=match[u],match[g]=match[u]=0,max_mat--;\n    if(match[v]!=0) f=match[v],match[f]=match[v]=0,max_mat--;\n    match[u]=v;match[v]=u;\n    flag[u]=flag[v]=1;\n    max_mat++;\n    if(f&&check(f)) max_mat++;\n    if(g&&check(g)) max_mat++;\n}\n/*-------md \u7ec8\u4e8e\u7ed3\u675f\u4e86-------*/\nint tot,ans[K];\n\nint main(){\n    read(n);read(m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%s\",mp[i]+1);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            if(mp[i][j]=='O') idx[i][j]=++cntW;\n            else idx[i][j]=++cntB;\n            if(mp[i][j]=='.') mp[i][j]='X',x=i,y=j;\n        }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(mp[i][j]=='O') idx[i][j]+=cntB;  //\u56e0\u4e3a\u70b9\u4e0d\u80fd\u91cd\u590d,\u6240\u4ee5\u5c06\u6240\u6709\u767d\u70b9\u5f80\u540e\u79fb\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(mp[i][j]=='X')\n                for(int k=0;k<=3;k++){\n                    int xx=i+dx[k],yy=j+dy[k];\n                    if(xx<1||n<xx||yy<1||m<yy) continue;\n                    if(mp[xx][yy]=='O') add(idx[i][j],idx[xx][yy]),add(idx[xx][yy],idx[i][j]);\n                }\n    for(int i=1;i<=cntB;i++)\n        if(check(i)) max_mat++;\n    read(k);\n    int sx,sy;\n    for(int i=1;i<=k;i++){\n        read(sx);read(sy);\n        int u=idx[x][y],v=idx[sx][sy];  //\u56e0\u4e3a\u79fb\u52a8\u7684\u662f\u7a7a\u683c,\u6240\u4ee5sx\u548csy\u5c31\u662f\u7a7a\u683c\u8981\u5230\u7684\u5730\u65b9\n        un_Matched(u);\n        int tmp1=max_mat;\n        Matched(u);\n        int tmp2=max_mat;\n        cover(u,v);\n        if(tmp1!=tmp2){\n            int _flag=0;\n            for(int j=head[v];j;j=e[j].nxt){\n                int t=e[j].to;\n                if(flag[t]==0&&match[t]==0){\n                    _flag=1;\n                    break;\n                }\n            }\n            if(!_flag){\n                int tmp3=max_mat;\n                for(int j=head[v];j;j=e[j].nxt){\n                    int t=e[j].to;\n                    if(flag[t]) continue;\n                    un_Matched(t);\n                    int tmp4=max_mat;\n                    Matched(t);\n                    if(tmp3==tmp4){\n                        _flag=1;\n                        break;\n                    }\n                }\n            }\n            if(_flag) ans[++tot]=i;\n        }\n        read(x);read(y);\n    }\n    printf(\"%d\\n\",tot);\n    for(int i=1;i<=tot;i++) \n        printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n\n\u90e8\u5206\u601d\u8def\u6765\u81ea[\u8fd9\u91cc](https://www.cnblogs.com/maijing/p/4703094.html)",
        "postTime": 1603618882,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "P1971 [NOI2011]\u5154\u5154\u4e0e\u86cb\u86cb\u6e38\u620f"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\n* \u4e8c\u5206\u56fe\u535a\u5f08\n\n\u4e8c\u5206\u56fe\u535a\u5f08\u6a21\u677f\u9898[\u94fe\u63a5](https://www.luogu.com.cn/problem/P4617)\n\n### \u601d\u8def\n\n\u9996\u5148\u8fd9\u9898\u6709\u4e2a\u5e76\u4e0d\u663e\u7136\u7684\u6027\u8d28\uff1a\u6211\u4eec\u53d1\u73b0\uff0c\u540c\u4e00\u4e2a\u683c\u5b50\u4e0d\u80fd\u7ecf\u8fc7\u4e24\u6b21\u3002\n\n\u7b80\u5355\u8bc1\u660e\uff1a\n\n\u5982\u679c\u6211\u4eec\u8d70\u56de\u8fd9\u4e2a\u683c\u5b50\uff0c\u90a3\u4e48\u8def\u5f84\u663e\u7136\u6210\u4e00\u4e2a\u73af\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u73af\u62ff\u51fa\u6765\uff0c\u56e0\u4e3a\u662f\u7f51\u683c\u56fe\u4e0a\u7684\u73af\uff0c\u6211\u4eec\u5bb9\u6613\u53d1\u73b0\u5176\u5468\u957f\u5fc5\u7136\u662f\u5076\u6570\u3002\n\n\u5982\u679c\u73b0\u5728\u683c\u5b50\u91cc\u586b\u7684\u662f\u9ed1\u68cb\u5b50\uff0c\u90a3\u4e48\u7ecf\u8fc7\u5076\u6570\u6b65\u6211\u4eec\u5f53\u524d\u5fc5\u7136\u53ea\u80fd\u8d70\u767d\u683c\u5b50\uff0c\u53cd\u4e4b\u4ea6\u7136\uff08\u81ea\u5df1\u753b\u56fe\u7406\u89e3\u4e00\u4e0b\uff09\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u8fd9\u9898\u5c31\u6210\u4e86\u4e8c\u5206\u56fe\u535a\u5f08\u6a21\u677f\u9898\uff1a\u6709\u4e24\u7c7b\u70b9\uff0c\u6bcf\u6b21\u53ea\u80fd\u4ece\u4e00\u7c7b\u70b9\u5411\u53e6\u4e00\u7c7b\u70b9\u8d70\uff0c\u65e0\u6cd5\u79fb\u52a8\u7684\u4eba\u5931\u8d25\u3002\n\n\u4e8c\u5206\u56fe\u535a\u5f08\u7ecf\u5178\u7ed3\u8bba\uff1a\u8d77\u70b9\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5fc5\u7ecf\u70b9\u5219\u5148\u624b\u5fc5\u80dc\uff0c\u5426\u5219\u5148\u624b\u5fc5\u8d25\u3002\n\n\u9898\u76ee\u544a\u8bc9\u6211\u4eec\uff1a\u5154\u5154\u72af\u9519\u8bef\u5f53\u4e14\u4ec5\u5f53\u8fd9\u6b21\u64cd\u4f5c\u8fc7\u540e\uff0c\u5fc5\u80dc\u65b9\u7531\u5154\u5154\u53d8\u6210\u4e86\u86cb\u86cb\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u5224\u65ad\u6240\u6709\u64cd\u4f5c\u8fc7\u540e\u7684\u5c40\u9762\u662f\u5148\u624b\u5fc5\u80dc\u8fd8\u662f\u5148\u624b\u5fc5\u8d25\u5373\u53ef\u3002\u5982\u679c\u5154\u5154\u64cd\u4f5c\u524d\u662f\u5148\u624b\u5fc5\u80dc\u5c40\u9762\uff0c\u64cd\u4f5c\u540e\u8fd8\u662f\u5148\u624b\u5fc5\u80dc\u5c40\u9762\uff08\u6b64\u65f6\u5148\u624b\u662f\u86cb\u86cb\uff09\uff0c\u5219\u5154\u5154\u72af\u9519\u8bef\u3002\n\n\u5224\u65ad\u4e00\u4e2a\u5c40\u9762\u662f\u5426\u5148\u624b\u5fc5\u80dc\uff0c\u4e5f\u5373\u5224\u65ad\u5f53\u524d\u70b9\u662f\u5426\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5fc5\u7ecf\u70b9\uff0c\u9996\u5148\u8981\u628a\u4e4b\u524d\u64cd\u4f5c\u8fc7\u7684\u70b9\u5220\u6389\uff08\u4e0d\u80fd\u8d70\u7b2c\u4e8c\u904d\uff09\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u5339\u914d\uff0c\u7136\u540e\u5220\u6389\u5f53\u524d\u70b9\uff0c\u770b\u6700\u5927\u5339\u914d\u662f\u5426\u51cf\u5c0f\u5373\u53ef\u3002\n\n\u542c\u8d77\u6765\u592a\u9ebb\u70e6\u4e86\uff1f\u6211\u4eec\u6709\u4e00\u4e2a\u5c0f trick\uff01\n\n\u5bf9\u4e8e\u8fd9\u79cd\u5220\u6389\u70b9\u7684\uff0c\u6211\u4eec\u901a\u5e38\u8003\u8651\u628a\u65f6\u95f4\u8f74\u5012\u8fc7\u6765\uff0c\u8ba9\u65f6\u95f4\u5012\u6d41\u3002\u8fd9\u6837\u5c31\u628a\u5220\u70b9\u7684\u64cd\u4f5c\u53d8\u6210\u4e86\u52a0\u70b9\u3002\n\n\u4e8e\u662f\u6211\u4eec\u628a\u64cd\u4f5c\u7684\u70b9\u6309\u65f6\u95f4\u5012\u5e8f\u52a0\u5165\u3002\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9\u540e\u5982\u679c\u6700\u5927\u5339\u914d\u53d8\u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u662f\u5fc5\u7ecf\u70b9\uff0c\u5f53\u524d\u5c40\u9762\u662f\u5148\u624b\u5fc5\u80dc\u5c40\u9762\u3002\n\n\u4e3a\u4ec0\u4e48\u52a0\u5165\u70b9\u540e\u6700\u5927\u5339\u914d\u53d8\u5927\u5c31\u662f\u5fc5\u7ecf\u70b9\uff1f\u8003\u8651\u53cd\u8bc1\u6cd5\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u8bf4\u660e\u6709\u4e00\u4e2a\u6700\u5927\u5339\u914d\u4e0d\u7ecf\u8fc7\u8be5\u70b9\uff0c\u90a3\u4e48\u6ca1\u6709\u8be5\u70b9\u7684\u6700\u5927\u5339\u914d\u5e94\u8be5\u7b49\u4e8e\u6709\u8be5\u70b9\u7684\u6700\u5927\u5339\u914d\uff0c\u4e0e\u52a0\u5165\u70b9\u540e\u6700\u5927\u5339\u914d\u53d8\u5927\u77db\u76fe\u3002\n\n\u6c42\u6700\u5927\u5339\u914d\u7528 dinic \u548c\u5308\u7259\u5229\u7b97\u6cd5\u90fd\u53ef\u4ee5\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662f dinic\uff0c\u53c2\u8003\u4ee3\u7801\u8f83\u957f\uff0c\u61d2\u5f97\u5199\u7684\u53ef\u4ee5\u81ea\u884c\u6362\u6210\u5308\u7259\u5229\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n```cpp\n#include <queue>\n#include <vector>\n#include <cstring>\n#include <climits>\n#include <iostream>\n#include <algorithm>\n\nusing i64 = long long;\n\nconst int N = 1e4 + 10, M = 1e5 + 10;\nint gox[] = {1, -1, 0, 0};\nint goy[] = {0, 0, 1, -1};\n\nbool vis[50][50], win[N];\nchar G[50][50];\nint n, m, K, S = N - 1, T = N - 2;\nint idx = 1, head[N], nex[M], to[M], fl[M];\nstd::vector< std::pair<int, int> > del\t;\n\nvoid addEdge(int u, int v, int f)\n{\n\tnex[++idx] = head[u];\n\thead[u] = idx;\n\tto[idx] = v, fl[idx] = f;\n}\nvoid addFlow(int u, int v, int f)\n{\n\taddEdge(u, v, f);\n\taddEdge(v, u, 0);\n}\n\nnamespace dinic\n{\n\tint now[N], d[N];\n\n\tbool BFS(void)\n\t{\n\t\tstd::queue<int> q;\n\t\tstd::memset(d, 0, sizeof d);\n\t\tstd::memcpy(now, head, sizeof head);\n\t\td[S] = 1; q.emplace(S);\n\t\twhile (q.size()) {\n\t\t\tint u = q.front(); q.pop();\n\t\t\tfor (int e = head[u]; e; e = nex[e])\n\t\t\t\tif (fl[e] && !d[to[e]]) {\n\t\t\t\t\td[to[e]] = d[u] + 1;\n\t\t\t\t\tif (to[e] == T) return 1;\n\t\t\t\t\tq.emplace(to[e]);\n\t\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tint dfs(int u, int flow)\n\t{\n\t\tif (u == T)\n\t\t\treturn flow;\n\t\tint rest = flow;\n\t\tfor (int e = now[u]; rest && e; e = nex[e])\n\t\t\tif (fl[e] && d[to[e]] == d[u] + 1) {\n\t\t\t\tnow[u] = e;\n\t\t\t\tint tmp = dfs(to[e], std::min(rest, fl[e]));\n\t\t\t\tif (!tmp) d[to[e]] = 0;\n\t\t\t\trest -= tmp;\n\t\t\t\tfl[e] -= tmp;\n\t\t\t\tfl[e ^ 1] += tmp;\n\t\t\t}\n\t\treturn flow - rest;\n\t}\n\tint main(void)\n\t{\n\t\tint res = 0;\n\t\twhile (BFS())\n\t\t\tres += dfs(S, INT_MAX);\n\t\treturn res;\n\t}\n}\n\ninline int getId(int x, int y)\n{\n\treturn (x - 1) * m + y;\n}\nint main(void)\n{\n\tstd::cin >> n >> m;\n\t// \u5728\u6700\u5f00\u59cb\u628a\u4e8c\u5206\u56fe\u8fde\u5411\u6e90\u6c47\u70b9\u7684\u8fb9\u8fde\u4e0a\n\tfor (int i = 1; i <= n; ++i) {\n\t\tstd::cin >> G[i] + 1;\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\tif (G[i][j] == '.') {\n\t\t\t\taddFlow(S, getId(i, j), 1);\n\t\t\t\tvis[i][j] = 1;\n\t\t\t\tdel.emplace_back(i, j);\n\t\t\t}\n\t\t\tif (G[i][j] == 'X')\n\t\t\t\taddFlow(S, getId(i, j), 1);\n\t\t\tif (G[i][j] == 'O')\n\t\t\t\taddFlow(getId(i, j), T, 1);\n\t\t}\n\t}\n\tstd::cin >> K; //\u8bfb\u5165\u64cd\u4f5c\uff0c\u628a\u8fd9\u4e9b\u70b9\u5220\u6389\n\tfor (int i = 1, x, y; i <= K << 1; ++i) {\n\t\tstd::cin >> x >> y;\n\t\tvis[x][y] = 1;\n\t\tdel.emplace_back(x, y);\n\t}\n\t// \u628a\u6ca1\u5220\u7684\u70b9\u4e4b\u95f4\u7684\u8fb9\u8fde\u4e0a\n\tfor (int i = 1; i <= n; ++i)\n\t\tfor (int j = 1; j <= m; ++j)\n\t\t\tif (!vis[i][j] && G[i][j] == 'X')\n\t\t\t\tfor (int k = 0; k < 4; ++k) {\n\t\t\t\t\tint xx = i + gox[k];\n\t\t\t\t\tint yy = j + goy[k];\n\t\t\t\t\tif (xx < 1 || xx > n || yy < 1 || yy > m) continue;\n\t\t\t\t\tif (!vis[xx][yy] && G[i][j] != G[xx][yy])\n\t\t\t\t\t\taddFlow(getId(i, j), getId(xx, yy), 1);\n\t\t\t\t}\n\tdinic::main(); // \u5148\u8dd1\u4e00\u904d dinic\n\t// \u6309\u65f6\u95f4\u5012\u5e8f\u628a\u6bcf\u4e2a\u70b9\u548c\u4e0e\u5b83\u76f8\u8fde\u7684\u8fb9\u52a0\u5165\n\tfor (int i = K << 1; i >= 0; --i) {\n\t\tauto t = del[i];\n\t\tvis[t.first][t.second] = 0;\n\t\tfor (int k = 0; k < 4; ++k) {\n\t\t\tint xx = t.first + gox[k];\n\t\t\tint yy = t.second + goy[k];\n\t\t\tif (xx < 1 || xx > n || yy < 1 || yy > m) continue;\n\t\t\tif (!vis[xx][yy] && G[t.first][t.second] != G[xx][yy]) {\n\t\t\t\tif (G[xx][yy] == 'X' || G[xx][yy] == '.')\n\t\t\t\t\taddFlow(getId(xx, yy), getId(t.first, t.second), 1);\n\t\t\t\telse\n\t\t\t\t\taddFlow(getId(t.first, t.second), getId(xx, yy), 1);\n\t\t\t}\n\t\t}\n\t\twin[i] = dinic::main(); //\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u8dd1 dinic\uff0c\u5982\u679c\u6709\u6d41\u91cf\u8bf4\u660e\u8be5\u70b9\u4e3a\u5fc5\u7ecf\u70b9\u3002\n\t}\n\tint res = 0;\n\tfor (int i = 0; i <= K << 1; i += 2)\n\t\tif (win[i] && win[i + 1]) //\u5f53\u524d\u5148\u624b\u5fc5\u80dc\u5e76\u4e14\u64cd\u4f5c\u5b8c\u4f9d\u7136\u5148\u624b\u5fc5\u80dc\uff0c\u5c31\u662f\u72af\u4e86\u9519\u8bef\n\t\t\t++res; //\u5148\u7edf\u8ba1\u7b54\u6848\u6570\u91cf\n\tstd::cout << res << '\\n';\n\tfor (int i = 0; i <= K << 1; i += 2)\n\t\tif (win[i] && win[i + 1]) //\u8f93\u51fa\u7b54\u6848\n\t\t\tstd::cout << (i >> 1) + 1 << '\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1651546955,
        "uid": 377370,
        "name": "LroseC",
        "ccfLevel": 8,
        "title": "P1971 \u5154\u5154\u4e0e\u86cb\u86cb\u6e38\u620f \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u63a8\u51fa\u6765\u4e00\u4e2a\u5f15\u7406\uff1a\u7a7a\u683c\u4e0d\u53ef\u80fd\u5728\u7ecf\u8fc7\u51e0\u6b21\u64cd\u4f5c\u540e\u56de\u5230\u539f\u6765\u7684\u4f4d\u7f6e\u3002\n\u5927\u6982\u611f\u6027\u8bc1\u660e\u4e00\u4e0b\uff1a\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u7a7a\u683c\u5982\u679c\u60f3\u8981\u8d70\u6210\u4e00\u4e2a\u73af\uff0c\u5411\u4e0a\u8d70\u7684\u6b21\u6570=\u5411\u4e0b\u8d70\u7684\u6b21\u6570\uff0c\u5411\u5de6\u8d70\u7684\u6b21\u6570=\u5411\u53f3\u8d70\u7684\u6b21\u6570\u3002\u90a3\u4e48\u5982\u679c\u5f00\u59cb\u662f\u5154\u5154\u8d70\u7684\u8bdd\uff0c\u6700\u540e\u5f97\u662f\u86cb\u86cb\u8d70\u7684\u3002\u5047\u8bbe\u5f00\u59cb\u5154\u5154\u4ece$(x_0,y_0)$\u8d70\u5230\u4e86$(x_1,y_1)$\uff0c\u6700\u540e\u86cb\u86cb\u4ece$(x_n,y_n)$\u8d70\u5230\u4e86$(x_0,y_0)$\u3002\u6211\u4eec\u4e0d\u59a8\u53ea\u8003\u8651\u8d70\u51fa\u6765\u7684\u6700\u77ed\u73af\uff08\u5373\u6700\u65e9\u8d70\u91cd\u7684\u4e00\u6b21\uff09\uff0c\u90a3\u4e48\u5f53\u5154\u5154\u8d70\u5b8c\u4e4b\u540e\uff0c$col(x_0,y_0)$\u53d8\u4e3a\u4e86\u767d\u8272\uff08\u76f8\u5f53\u4e8e\u88ab\u5154\u5154\u7684\u4e00\u4e2a\u767d\u8272\u6324\u4e86\u8fc7\u6765\uff09\uff0c\u8fd9\u6837$col(x_0,y_0)$\u6c38\u8fdc\u90fd\u5e94\u8be5\u662f\u767d\u8272\uff0c\u90a3\u86cb\u86cb\u5c31\u6c38\u8fdc\u8d70\u4e0d\u5230$(x_0,y_0)$\uff0c\u8fd9\u6837\u5c31\u77db\u76fe\u4e86\u3002\n\n\u6240\u4ee5\u5c31\u6709\u5f15\u7406\uff1a\u8d70\u7684\u8def\u5f84\u80af\u5b9a\u662f\u4e00\u6761\u7c7b\u4f3c\u94fe\u7684\u7ed3\u6784\u3002\n\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u6bcf\u6b21\u5154\u5154\u6216\u86cb\u86cb\u8d70\u5b8c\u4e86\u4e4b\u540e\uff0c\u4ed6\u4eec\u8d70\u8fc7\u7684\u683c\u5b50\u7684\u989c\u8272\u6211\u4eec\u5c31\u4e0d\u5173\u5fc3\u4e86\u3002\u8fd9\u6837\u5728\u632a\u7a7a\u683c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u5fc5\u8981\u53bb\u8003\u8651\u6211\u632a\u5b8c\u7a7a\u683c\u540e\u683c\u5b50\u989c\u8272\u7684\u53d8\u5316\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u8fd9\u4e2a\u68cb\u76d8\u7684\u989c\u8272\u6c38\u8fdc\u4e0d\u4f1a\u53d8\uff0c\u53ea\u4e0d\u8fc7\u6211\u6709\u4e00\u4e2a\u68cb\u5b50\u5728\u4e00\u76f4\u4ece\u67d0\u4e2a\u4f4d\u7f6e\u8d70\u5230\u767d\u8272\uff0c\u518d\u8d70\u5230\u9ed1\u8272\uff0c\u518d\u8d70\u5230\u767d\u8272...\u8fd9\u6837\u5176\u5b9e\u5c31\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684\u95ee\u9898\uff0c\u5927\u6982\u5c31\u662f\u68cb\u76d8\u4e0a\u6709\u4e00\u4e2a\u5352\u518d\u8d70\uff0c\u6bcf\u6b21\u989c\u8272\u9700\u8981\u4ea4\u66ff\u4e0d\u540c\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u7684\u505a\u6cd5\u5927\u6982\u5c31\u662f\u5bf9\u68cb\u76d8\u6784\u9020\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u6240\u6709\u9ed1\u8272\u7684\u70b9\u50cf\u767d\u8272\u7684\u70b9\u8fde\u4e00\u6761\u65e0\u5411\u8fb9\u3002\u90a3\u4e48\u5c31\u53d8\u6210\u4e86\u53c8\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u6709\u8d77\u70b9\uff0c\u4e24\u4e2a\u4eba\u6cbf\u7740\u8fb9\u632a\u68cb\u5b50\uff0c\u4e0d\u80fd\u56de\u6765\u3002\u95ee\u8c01\u6709\u5fc5\u80dc\u7b56\u7565\u3002\u8fd9\u662f\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u5176\u7b97\u6cd5\u4e86\u3002\u662f\u94c3\u9171\u535a\u5ba2\u4e2d\u7684\u4f8b\u9898\u7684\u5f31\u5316\u7248\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u9053\u9898\u5176\u5b9e\u6570\u636e\u8303\u56f4\u633a\u5c0f\u7684\uff0c\u5efa\u56fe\u662f\u53ef\u4ee5\u76f4\u63a5\u5efa\u7684\uff0c\u63d0\u524d\u8dd1\u51fa\u6700\u5927\u5339\u914d\uff0c\u7136\u540e\u6bcf\u6b21\u679a\u4e3e\u5220\u6389\u4e00\u4e2a\u70b9\u6bcf\u4e00\u6b21\u8dd1\u4e00\u4e2adinic\u5c31\u53ef\u4ee5\u4e86\u3002",
        "postTime": 1618231487,
        "uid": 219868,
        "name": "xsap",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P1971 [NOI2011] \u5154\u5154\u4e0e\u86cb\u86cb\u6e38\u620f"
    },
    {
        "content": "# P1971 \u9898\u89e3\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n### I. \u535a\u5f08\u89c4\u5219\n\nUndirected Vertex Geography\uff08\u7b80\u79f0UVG\uff09\u6e38\u620f\u89c4\u5219\u5982\u4e0b\uff1a\n\n\u5728\u4e00\u5f20\u4e8c\u5206\u56fe $\\mathbf G=(\\mathbf X,\\mathbf Y,\\mathbf E)$ \u4e0a\u6709\u4e00\u4e2a\u68cb\u5b50\u5728\u8282\u70b9 $v$ \u4e0a\uff0c$v\\in\\mathbf X$\uff1a\n\n\u4e24\u540d\u73a9\u5bb6\u8f6e\u6d41\u5c06\u8fd9\u679a\u68cb\u5b50\u632a\u5230\u67d0\u4e2a $v$ \u4e4b\u76f8\u90bb\u7684\u8282\u70b9 $v'$ \u4e0a\uff0c\u5982\u679c\u67d0\u4e00\u65b9\u4e0d\u80fd\u79fb\u52a8\uff0c\u5219\u7acb\u523b\u5224\u8d1f\uff0c\u8bf7\u95ee\u8c01\u6709\u5fc5\u80dc\u7b56\u7565\uff1f\n\n\n\n### II. \u7ed3\u8bba\n\n\u8bb0 $\\mathbf M$ \u4e3a\u67d0\u4e2a $\\mathbf G$ \u7684\u6700\u5927\u5339\u914d\uff0c$V(\\mathbf M)$ \u662f $\\mathbf M$ \u4e2d\u6240\u6709\u8fb9\u8fde\u63a5\u7684\u70b9\u6784\u6210\u7684\u96c6\u5408\u3002\n\n\u5148\u624b\u80dc\u5229\u5f53\u4e14\u4ec5\u5f53\u4e0d\u5b58\u5728 $\\mathbf M$ \u4f7f\u5f97 $v\\not\\in V(\\mathbf M)$\u3002\n\n\n\n### III. \u8bc1\u660e\n\n\u5148\u8bc1\u5fc5\u8981\u6027\uff1a\n\n> \u8bc1\uff1a\n>\n> \u7531\u5047\u8bbe\u5f97 $\\forall \\mathbf M:v\\in V(\\mathbf M)$\u3002\n>\n> \u6211\u4eec\u4e3a\u5148\u624b\u8bbe\u8ba1\u4e00\u4e2a\u79fb\u52a8\u7b56\u7565\uff1a\u5373\u6bcf\u6b21\u90fd\u6cbf\u7740 $\\mathbf M$ \u4e2d\u7684\u8fb9\u79fb\u52a8\u3002\n>\n> \u73b0\u5728\u6211\u4eec\u9700\u8981\u8bc1\u660e\u5f53\u5230\u8fbe\u67d0\u4e2a $x_i$ \u540e\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u6761\u8fb9 $(x_i,y_j)\\in\\mathbf M$\u3002\n>\n> \u8003\u8651\u53cd\u8bc1\u6cd5\uff0c\u82e5\u5f53\u524d\u5230\u8fbe $x_i$ \u540e $\\mathbf M$ \u4e2d\u6ca1\u6709\u76f8\u90bb\u7684\u5339\u914d\u8fb9\uff0c\u5047\u8bbe\u5f53\u524d\u7684\u79fb\u52a8\u8def\u5f84\u4e3a $\\mathbf A$\uff0c\u663e\u7136 $\\mathbf A$ \u662f $\\mathbf M$ \u7684\u4e00\u6761\u4ea4\u9519\u8f68\u3002\n>\n> \u6211\u4eec\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u8fb9\u96c6 $\\mathbf{M'}=\\mathbf M\\oplus \\mathbf A$\uff0c\u53ef\u4ee5\u8bc1\u660e $\\mathbf{M'}$ \u4f9d\u7136\u662f $\\mathbf G$ \u7684\u4e00\u4e2a\u5339\u914d\uff0c\u4e14\u6ee1\u8db3 $|\\mathbf{M'}|=|\\mathbf M|$\uff0c$v\\not\\in V(\\mathbf{M'})$\u3002\n>\n> \u4e0e\u539f\u547d\u9898\u77db\u76fe\uff0c\u6545\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u6545\u539f\u547d\u9898\u5f97\u8bc1\u3002\n\n\u518d\u8bc1\u5145\u5206\u6027\uff1a\n\n\u73b0\u5c06\u539f\u547d\u9898\u8f6c\u5316\u4e3a\u5176\u9006\u5426\u547d\u9898\uff1a\u5982\u679c\u5b58\u5728\u4e00\u4e2a $\\mathbf G$ \u7684\u6700\u5927\u5339\u914d $\\mathbf M$ \u6ee1\u8db3 $v\\not\\in V(\\mathbf M)$\uff0c\u5219\u540e\u624b\u4e00\u5b9a\u6709\u4e00\u4e2a\u5fc5\u80dc\u7b56\u7565\uff1a\n\n>\u8bc1\uff1a\n>\n>\u53ef\u4ee5\u63a8\u77e5\uff1a$\\forall (v,v')\\in \\mathbf E:v'\\in\\mathbf{M}$\uff0c\u5426\u5219 $(v,v')$ \u4e5f\u53ef\u4ee5\u52a0\u5165 $\\mathbf M$ \u4e2d\uff0c\u4e0e $\\mathbf M$ \u662f\u6700\u5927\u5339\u914d\u77db\u76fe\u3002\n>\n>\u56e0\u6b64\u5148\u624b\u4e00\u5b9a\u4f1a\u628a\u68cb\u5b50\u79fb\u52a8\u5230 $\\mathbf M$ \u4e2d\u7684\u67d0\u4e2a\u9876\u70b9\u4e0a\u3002\n>\n>\u7c7b\u4f3c\u4e0a\u9762\u7684\u8bc1\u660e\uff1a\u6211\u4eec\u4e3a\u540e\u624b\u8bbe\u8ba1\u4e00\u4e2a\u79fb\u52a8\u7b56\u7565\uff1a\u5373\u6bcf\u6b21\u90fd\u6cbf\u7740 $\\mathbf M$ \u4e2d\u7684\u8fb9\u79fb\u52a8\u3002\n>\n>\u540c\u4e0a\uff0c\u539f\u547d\u9898\u53ef\u4ee5\u770b\u505a\uff1a\u8bc1\u660e\u5f53\u5230\u8fbe\u67d0\u4e2a $y_i$ \u540e\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u6761\u8fb9 $(x_j,y_i)\\in\\mathbf M$\u3002\n>\n>\u540c\u6837\u53cd\u8bc1\u6cd5\uff0c\u8bbe $y_i$ \u6ca1\u6709 $\\mathbf M$ \u4e2d\u7684\u5339\u914d\u8fb9\u4e0e\u5176\u76f8\u8fde\uff0c\u5219\u5f53\u524d\u79fb\u52a8\u7684\u8def\u5f84 $\\mathbf A$ \u4f1a\u5f62\u6210\u4e00\u4e2a\u589e\u5e7f\u8f68\uff0c\u8fd9\u4e0e $\\mathbf M$ \u662f $\\mathbf G$ \u7684\u4e00\u4e2a\u6700\u5927\u5339\u914d\u540c\u6837\u77db\u76fe\uff0c\u6545\u539f\u547d\u9898\u5f97\u8bc1\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u5f53\u4e14\u4ec5\u5f53**\u4e0d\u5b58\u5728**\u6700\u5927\u5339\u914d $\\mathbf M$ \u4f7f\u5f97 $v\\not\\in V(\\mathbf M)$ \u65f6\uff0c\u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565\u3002\n\n\n\n### IV. \u7b97\u6cd5\u5b9e\u73b0\n\n\u6c42\u89e3 UVG \u95ee\u9898\uff0c\u53ea\u9700\u8981\u5224\u65ad\u67d0\u4e2a\u70b9\u662f\u5426\u4e00\u5b9a\u4f1a\u5728 $\\mathbf G$ \u7684\u6700\u5927\u5339\u914d\u4e2d\u3002\n\n\u4e0b\u9762\u7684\u4f2a\u4ee3\u7801\u7ed9\u51fa\u4e86\u5728 $\\Theta(nm)$ \u590d\u6742\u5ea6\u5185\u8ba1\u7b97\u6240\u6709\u5148\u624b\u5fc5\u80dc\u70b9\u7684\u7b56\u7565\uff1a\n\n[![xMoAXV.png](https://s1.ax1x.com/2022/10/03/xMoAXV.png)](https://imgse.com/i/xMoAXV)\n\n\n\n## \u601d\u8def\u5206\u6790\n\n\u9ed1\u5b50\u548c\u767d\u5b50\u90fd\u4e0d\u72ec\u7279\uff0c\u4f46\u662f\u7a7a\u683c\u53ea\u6709\u4e00\u4e2a\uff0c\u56e0\u6b64\u5e94\u8be5\u91cd\u70b9\u5173\u6ce8\u7a7a\u683c\uff0c\u6211\u4eec\u628a\u68cb\u5b50\u79fb\u52a8\u5230\u7a7a\u683c\u4e0a\u53d8\u6210\u7a7a\u683c\u79fb\u52a8\u5230\u68cb\u5b50\u4e0a\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u770b\u5230\u68cb\u76d8\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u9ed1\u767d\u95f4\u9694\u67d3\u8272\uff0c\u5047\u8bbe\u7a7a\u683c\u6700\u5f00\u59cb\u5728\u9ed1\u8272\u683c\u5b50\u4e0a\uff0c\u90a3\u4e48\u6bcf\u6b21\u79fb\u52a8\u7684\u65f6\u5019\u7a7a\u683c\u53ef\u4ee5\u79fb\u52a8\u5230\u9ed1\u8272\u683c\u5b50\u7684\u9ed1\u8272\u68cb\u5b50\u4e0a\u6216\u8005\u767d\u8272\u683c\u5b50\u7684\u767d\u8272\u68cb\u5b50\u4e0a\uff08\u5047\u8bbe\u7a7a\u683c\u4e0a\u6709\u4e00\u679a\u9ed1\u8272\u68cb\u5b50\uff09\u3002\n\n\u5047\u5982\u6211\u4eec\u6b64\u65f6\u5bf9\u6240\u6709\u80fd\u4e92\u76f8\u5230\u8fbe\u7684\u683c\u5b50\u4e4b\u95f4\u8fde\u8fb9\uff0c\u90a3\u4e48\u8fd9\u5f20\u56fe\u5c31\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n\n\u7a7a\u683c\u6bcf\u6b21\u79fb\u52a8\u4f1a\u4ea4\u6362\u4e24\u679a\u68cb\u5b50\u7684\u4f4d\u7f6e\uff0c\u6ce8\u610f\u5230\u6bcf\u6b21\u4ea4\u6362\u4e00\u5b9a\u4f1a\u8ba9\u9ed1\u8272\u68cb\u5b50\u79fb\u52a8\u5230\u767d\u8272\u683c\u5b50\u4e0a\uff0c\u767d\u8272\u68cb\u5b50\u79fb\u52a8\u5230\u9ed1\u8272\u683c\u5b50\u4e0a\uff0c\u56e0\u6b64\u6bcf\u5f53\u6211\u4eec\u8003\u8651\u5b8c\u4e00\u4e2a\u79fb\u52a8\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u70b9\u4ece\u4e8c\u5206\u56fe\u4e2d\u5220\u6389\u5373\u53ef\u3002\n\n\u539f\u95ee\u9898\u8f6c\u5316\u6210\u5728\u4e8c\u5206\u56fe\u4e0a\uff0c\u53cc\u65b9\u8f6e\u6d41\u79fb\u52a8\u68cb\u5b50\uff0c\u4e0d\u80fd\u91cd\u590d\u7ecf\u8fc7\u8282\u70b9\uff0c\u79fb\u52a8\u4e0d\u4e86\u7684\u8f93\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5c31\u662f\u521a\u521a\u4ecb\u7ecd\u7684 UVG \u6e38\u620f\uff0c\u5957\u7ed3\u8bba\uff1a\u5f53\u4e14\u4ec5\u5f53\u7a7a\u683c\u5728\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u4e00\u4e2a\u5fc5\u7ecf\u70b9\u4e0a\uff0c\u90a3\u4e48\u5148\u624b\u80dc\u3002\n\n\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u6b21\u79fb\u52a8\uff1a\u6211\u4eec\u8003\u8651\u539f\u6765\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u548c\u5220\u6389\u5f53\u524d\u4f4d\u7f6e\u7684\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u4e2a\u4e1c\u897f\u4e0d\u76f8\u7b49\u7684\u65f6\u5019\u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565\u3002\n\n\u6ce8\u610f\u5220\u6389\u70b9\u4e4b\u540e\u9700\u8981\u66f4\u65b0\u6700\u5927\u5339\u914d\u7684\u5927\u5c0f\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u683c\u5b50\u66b4\u529b\u505a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef\u89e3\u51b3\u6b64\u95ee\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(kn^2m^2)$\u3002\n\n## \u4ee3\u7801\u5448\u73b0\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nconst int MAXN=41,MAXS=1601,MAXK=1001;\nint n,m,dx[]={0,0,1,-1},dy[]={1,-1,0,0};\nint tar[MAXS];\nbool vis[MAXS],win[MAXK];\nbool bel[MAXN][MAXN],col[MAXN][MAXN],del[MAXS];\nvector <int> edge[MAXS],src;\ninline int id(int x,int y) {\n\tif(x<1||x>n||y<1||y>m||bel[x][y]!=col[x][y]) return -1;\n\treturn (x-1)*m+y;\n}\ninline bool match(int p) {\n\tif(del[p]) return false;\n\tfor(int x:edge[p]) {\n\t\tif(vis[x]||del[x]) continue;\n\t\tvis[x]=true;\n\t\tif(tar[x]==-1||match(tar[x])) {\n\t\t\ttar[x]=p;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\ninline int MM() {\n\tint ret=0;\n\tmemset(tar,-1,sizeof(tar));\n\tfor(int x:src) {\n\t\tmemset(vis,false,sizeof(vis));\n\t\tif(match(x)) ++ret;\n\t}\n\treturn ret;\n}\nsigned main() {\n\tint kx,ky;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i) {\n\t\tfor(int j=1;j<=m;++j) {\n\t\t\tchar ch;\n\t\t\tcin>>ch;\n\t\t\tif(ch=='.') kx=i,ky=j,bel[i][j]=true;\n\t\t\telse bel[i][j]=(ch=='X');\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i) for(int j=1;j<=m;++j) col[i][j]=((i+j)%2==(kx+ky)%2);\n\tfor(int i=1;i<=n;++i) {\n\t\tfor(int j=1;j<=m;++j) {\n\t\t\tif(bel[i][j]&&col[i][j]) {\n\t\t\t\tsrc.push_back(id(i,j));\n\t\t\t\tfor(int k:{0,1,2,3}) {\n\t\t\t\t\tint x=i+dx[k],y=j+dy[k];\n\t\t\t\t\tif(id(x,y)!=-1) {\n\t\t\t\t\t\tedge[id(i,j)].push_back(id(x,y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint stdv=MM(),k;\n\tdel[id(kx,ky)]=true;\n\tint tmpv=MM();\n\twin[1]=tmpv!=stdv;\n\tstdv=tmpv;\n\tscanf(\"%d\",&k);\n\tvector <int> ans;\n\tfor(int i=1;i<=k;++i) {\n\t\tint tx,ty;\n\t\tscanf(\"%d%d\",&tx,&ty);\n\t\tdel[id(tx,ty)]=true;\n\t\ttmpv=MM();\n\t\twin[i*2]=tmpv!=stdv;\n\t\tstdv=tmpv;\n\t\tif(win[i*2]&&win[i*2-1]) ans.push_back(i);\n\t\tscanf(\"%d%d\",&tx,&ty);\n\t\tdel[id(tx,ty)]=true;\n\t\ttmpv=MM();\n\t\twin[i*2+1]=tmpv!=stdv;\n\t\tstdv=tmpv;\n\t}\n\tprintf(\"%d\\n\",(int)ans.size());\n\tfor(int p:ans) printf(\"%d\\n\",p);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1665894329,
        "uid": 539618,
        "name": "DaiRuiChen007",
        "ccfLevel": 6,
        "title": "P1971 \u9898\u89e3"
    },
    {
        "content": "\u4e8c\u5206\u56fe \u535a\u5f08\u8bba\n\u4e00\u9053\u4e8c\u5206\u56fe+\u535a\u5f08\u8bba\u5957\u9910\u9898\u3002\n\u5217\u51fa\u51e0\u79cd\u60c5\u51b5\u5c31\u80fd\u53d1\u73b0\u5176\u4e2d\u7684\u89c4\u5f8b\u3002\n\u6a21\u62df\u4e00\u4e0b\u4e8c\u4eba\u7684\u8fc7\u7a0b\uff1a\n\u5148\u662f\u5154\u5154\u8d70\uff0c\u8bbe\u5154\u5154\u8d70\u5230\u4e86 \ntttt\ntt \uff0c\u7531\u4e0a\u9762\u4e8c\u5206\u56fe\u7684\u6027\u8d28\u7684\u53ef\u77e5\uff0c\u6211\u4eec\u53ea\u9700\u5224\u65ad\u6709\u8d77\u70b9\u548c\u65e0\u8d77\u70b9\u7684\u6700\u5927\u5339\u914d\u662f\u5426\u4e0d\u4e00\u6837\u5373\u53ef\u3002\u4e0d\u76f8\u7b49\u8bf4\u660e\u4e00\u5b9a\u6709\u8d77\u70b9\uff0c\u4e5f\u5c31\u662f\u5154\u5154\u5fc5\u80dc\u3002\n\u7136\u540e\u5f3a\u8feb\u8986\u76d6\u8d77\u70b9\u548c \ntttt\ntt \u7684\u5339\u914d\n\u73b0\u5728\u662f\u86cb\u86cb\u8d70\uff0c\u5339\u914d\u8fb9\u662f\u5154\u5154\u8d70\u8fc7\u6765\u7684\uff0c\u7531\u4e0a\u9762\u4e8c\u5206\u56fe\u7684\u6027\u8d28\u53ef\u77e5\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u548c \ntttt\ntt \u76f8\u8fde\u7684\u70b9\u6ca1\u6709\u5728\u6700\u5927\u5339\u914d\u4e2d\uff0c\u90a3\u4e48\u86cb\u86cb\u5c31\u53ef\u4ee5\u8f6c\u5316\u5230\u5154\u5154\u7684\u5fc5\u8d25\u6001\uff0c\u4e5f\u5c31\u662f\u86cb\u86cb\u5fc5\u80dc\u3002\n\u7136\u540e\u5c06\u86cb\u86cb\u8d70\u5230\u7684\u683c\u5b50\u770b\u4f5c\u65b0\u7684\u8d77\u70b9\uff0c\u7ee7\u7eed\u91cd\u590d\u4e0a\u9762\u7684\u8fc7\u7a0b\u3002\n\u53ef\u5f97\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>//\u795e\u5947 \nusing namespace std;\nint n, m;\nint arr[45][45];\nvector<int> edges[10005];\nint tot;\nint x, y;\nint num[45][45];\nbool vis[10005], ban[10005];\nint match[10050];\nbool dfs(int i) {//bool\u6df1\u641c\n\tif (ban[i]) return false;\n\tfor (int j = 0; j < edges[i].size(); j++) {\n\t\tint k = edges[i][j];\n\t\tif (!vis[k] && !ban[k]) {\n\t\t\tvis[k] = 1;\n\t\t\tif (!match[k] || dfs(match[k])) {\n\t\t\t\tmatch[k] = i;\n\t\t\t\tmatch[i] = k;\n\t\t\t\treturn true;//\u5c31\u8fd4\u56de1 \n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint ans[10005];\nint main() {\n\tcin >> n >> m;\n\tchar str[45];\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%s\", str+1);//\u7528cin\u4e0d\u592a\u597d\u5199 \n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tif (str[j] == 'O') arr[i][j] = 1;\n\t\t\telse if (str[j] == 'X') arr[i][j] = 2;\n\t\t\telse arr[i][j] = 2, x = i, y = j;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tif (arr[i][j] == 1 ^ (((i + j) & 1) == ((x + y) & 1)))\n\t\t\t\tnum[i][j] = ++tot;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tif (!num[i][j]) continue;\n\t\t\tif (num[i + 1][j]) {\n\t\t\t\tedges[num[i][j]].push_back(num[i + 1][j]);\n\t\t\t\tedges[num[i + 1][j]].push_back(num[i][j]);\n\t\t\t}\n\t\t\tif (num[i][j + 1]) {\n\t\t\t\tedges[num[i][j]].push_back(num[i][j + 1]);\n\t\t\t\tedges[num[i][j + 1]].push_back(num[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= tot; i++) {\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tif (!match[i]) dfs(i);\n\t}\n\tint k;\n\tcin >> k;\n\tfor (int i = 1; i <= k << 1; i++) {\n\t\tint kkk = num[x][y];\n\t\tban[kkk] = 1;\n\t\tif (match[kkk]) {\n\t\t\tint match = match[kkk];\n\t\t\tmatch[match] = match[kkk] = 0;\n\t\t\tmemset(vis, 0, sizeof(vis));\n\t\t\tans[i] = (!dfs(match));\n\t\t}\n\t\tcin >> x >> y;\n\t}\n\tint res = 0;\n\tfor (int i = 1; i <= k; i++)\n\t\tres += (ans[i * 2 - 1] & ans[i * 2]);\n\tcout << res << '\\n';\n\tfor (int i = 1; i <= k; i++) {\n\t\tif (ans[i * 2 - 1] & ans[i * 2]) {\n\t\t\tcout << i << '\\n'\n\t\t}\n\t}\n\treturn 0;\n```",
        "postTime": 1616648728,
        "uid": 390234,
        "name": "\u5bb8\u67d0right",
        "ccfLevel": 0,
        "title": "P1971 [NOI2011] \u5154\u5154\u4e0e\u86cb\u86cb\u6e38\u620f"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u535a\u5f08\u8bba\u3002\r\n\r\n> \u4e8c\u5206\u56fe\u535a\u5f08\u662f\u4e00\u7c7b\u535a\u5f08\u6a21\u578b\u3002\r\n>\r\n> \u7ed9\u51fa\u4e00\u5f20\u4e8c\u5206\u56fe\u548c\u535a\u5f08\u7684\u8d77\u70b9\uff0c\u5148\u624b\u4e0e\u540e\u624b\u8f6e\u6d41\u8fdb\u884c\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ea\u80fd\u8d70\u5230\u4e0e\u5f53\u524d\u70b9\u76f8\u90bb\u7684\u70b9\uff0c\u6bcf\u4e2a\u70b9\u53ea\u80fd\u8d70\u4e00\u6b21\u3002\r\n>\r\n> \u6700\u7ec8\u65e0\u6cd5\u9009\u70b9\u7684\u4eba\u5219\u5224\u8d1f\uff0c\u95ee\u5148\u624b\u662f\u5426\u5fc5\u80dc\u3002\r\n>\r\n> \u2014\u2014\u968f\u4fbf\u627e\u4e2a\u535a\u5ba2\u6539\u7684\u3002\r\n\r\n\u9996\u5148\u6211\u4eec\u628a\u76ee\u5149\u805a\u7126\u5728\u8fd9\u4e2a\u7a7a\u683c\u4e0a\uff0c\u6211\u4eec\u53d1\u73b0\u5176\u8d70\u7684\u68cb\u5b50\u7684\u989c\u8272\u6070\u597d\u662f\u6bcf\u6b21\u53d8\u6362\u7684\uff0c\u7531\u4e8e\u5f00\u59cb\u8d70\u7684\u662f\u767d\u8272\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u521d\u59cb\u7a7a\u683c\u4e3a\u9ed1\u8272\u3002\r\n\r\n\u6211\u4eec\u5c06\u76f8\u90bb\u7684\u4e0d\u540c\u989c\u8272\u7684\u68cb\u5b50\u5efa\u8fb9\uff0c\u4e0d\u96be\u53d1\u73b0\u5176\u8d70\u7684\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\r\n\r\n\u4e8c\u5206\u56fe\u535a\u5f08\u8bba\u7684\u7ed3\u8bba\u662f\uff0c\u5148\u624b\u5fc5\u80dc\u5f53\u4e14\u4ec5\u5f53\u8d77\u70b9\u662f\u6240\u6709\u6700\u5927\u5339\u914d\u90fd\u9700\u8981\u7684\u4e00\u4e2a\u70b9\u3002\r\n\r\n\u5177\u4f53\u5982\u4f55\u5224\u65ad\uff1f\u6211\u4eec\u5148\u6c42\u51fa\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3002\r\n\r\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u67e5\u8be2\uff0c\u6211\u4eec\u5148\u5c06\u5176\u4e0e\u539f\u5148\u5339\u914d\u7684\u70b9\u65ad\u8fb9\uff08\u5f53\u7136\uff0c\u8981\u662f\u539f\u6765\u5c31\u6ca1\u5339\u914d\u80af\u5b9a\u5c31\u4e0d\u884c\u4e86\uff09\u3002\r\n\r\n\u65ad\u8fb9\u4e4b\u540e\uff0c\u770b\u770b\u539f\u5148\u5339\u914d\u7684\u70b9\u662f\u5426\u8fd8\u80fd\u518d\u627e\u4e00\u4e2a\u70b9\u5339\u914d\uff0c\u5982\u679c\u4e0d\u884c\uff0c\u81ea\u7136\u5f53\u524d\u70b9\u5c31\u662f\u5fc5\u987b\u7684\u4e86\u3002\r\n\r\n\u6240\u4ee5\u5462\uff0c\u8fd9\u9053\u9898\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u70b9\u662f\u5148\u624b\u5fc5\u80dc\u8fd8\u662f\u5fc5\u8f93\uff0c\u7136\u540e\u770b\u770b\u5154\u5154\u7684\u6bcf\u6b21\u64cd\u4f5c\uff0c\u5982\u679c\u64cd\u4f5c\u524d\u5fc5\u80dc\uff0c\u64cd\u4f5c\u540e\u8fd8\u662f\u5fc5\u80dc\uff0c\u90a3\u5c31\u662f\u5931\u8bef\u4e86\u3002\r\n\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define LL long long\r\nusing namespace std;\r\nconst LL N=3605; \r\nconst LL dx[4]={0,0,-1,1};\r\nconst LL dy[4]={1,-1,0,0};\r\nLL n,m,x,y,vis[N],fgt[N],c[N],win[N];\r\nchar s[45][45];\r\nLL num(LL x,LL y)\r\n{\r\n\treturn (x-1)*m+y;\r\n}\r\nbool pd(LL x,LL y)\r\n{\r\n\tif(x<1||n<x||y<1||m<y||s[x][y]!='O')return false;\r\n\treturn true;\r\n}\r\nvector<LL>v[N],ans;\r\nLL choose(LL x)\r\n{\r\n\tfor(auto i:v[x])\r\n\t{\r\n\t\tif(vis[i])continue;\r\n\t\tif(fgt[i])continue;\r\n\t\tvis[i]=1;\r\n\t\tif(c[i]==0||choose(c[i]))\r\n\t\t{\r\n\t\t\tc[x]=i,c[i]=x;\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\nvoid add(LL x,LL y)\r\n{\r\n\tv[x].push_back(y);\r\n\tv[y].push_back(x);\r\n}\r\nLL link(LL x,LL y)\r\n{\r\n\tfor(int i=0;i<4;i++)\r\n\t{\r\n\t\tLL xx=x+dx[i],yy=y+dy[i];\r\n\t\tif(!pd(xx,yy))continue;\r\n\t\tadd(num(x,y),num(xx,yy));\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tcin>>n>>m;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tfor(int j=1;j<=m;j++)\r\n\t\t{\r\n\t\t\tcin>>s[i][j];\r\n\t\t\tif(s[i][j]=='.')\r\n\t\t\t{\r\n\t\t\t\tx=i,y=j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tfor(int j=1;j<=m;j++)\r\n\t\t{\r\n\t\t\tif(s[i][j]=='O')continue;\r\n\t\t\tlink(i,j);\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tfor(int j=1;j<=m;j++)\r\n\t\t{\r\n\t\t\tif(s[i][j]=='O')continue; \r\n\t\t\tmemset(vis,0,sizeof(vis));\r\n\t\t\tchoose(num(i,j));\r\n\t\t}\r\n\t}\r\n\tLL k;\r\n\tcin>>k;\r\n\tfor(int i=1;i<=2*k;i++)\r\n\t{\r\n\t\tLL t=num(x,y);\r\n\t\tcin>>x>>y;\r\n\t\tfgt[t]=1;\r\n\t\tif(c[t]==0)continue;\r\n\t\tLL nxt=c[t];\r\n\t\tc[t]=c[nxt]=0;\r\n\t\tmemset(vis,0,sizeof(vis));\r\n\t\tif(!choose(nxt))win[i]=1;\r\n\t\t\r\n\t}\r\n\tfor(int i=1;i<=k;i++)\r\n\t{\r\n\t\tif(win[2*i-1]==1&&win[2*i]==1)\r\n\t\t{\r\n\t\t\tans.push_back(i);\r\n\t\t}\r\n\t}\r\n\tcout<<ans.size()<<endl;\r\n\tfor(auto i:ans)\r\n\t{\r\n\t\tcout<<i<<endl;\r\n\t} \r\n}\r\n```",
        "postTime": 1683787110,
        "uid": 501947,
        "name": "DengDuck",
        "ccfLevel": 6,
        "title": "P1971 [NOI2011] \u5154\u5154\u4e0e\u86cb\u86cb\u6e38\u620f \u9898\u89e3"
    },
    {
        "content": "\u5148\u8bc1\u660e\u4e0d\u53ef\u80fd\u91cd\u590d\u7ecf\u8fc7\u4e00\u4e2a\u683c\u5b50\uff1a\u7b80\u5355\u73af\u7684\u957f\u5ea6\u5fc5\u7136\u662f\u5076\u6570\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b65\u548c\u6700\u540e\u4e00\u6b65\u7531\u4e0d\u540c\u73a9\u5bb6\u64cd\u4f5c\uff0c\u4f46\u7b2c\u4e00\u6b65\u5df2\u7ecf\u628a\u4e00\u4e2a\u4ed6\u7684\u989c\u8272\u7684\u68cb\u5b50\u63a8\u5230\u4e86\u7b2c\u4e00\u4e2a\u683c\u5b50\u91cc\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u540e\u4e00\u6b65\u4e0d\u80fd\u8fdb\u5165\u8fd9\u4e2a\u683c\u5b50\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8d70\u5411\u6bcf\u4e2a\u683c\u5b50\u65f6\uff0c\u5b83\u91cc\u9762\u7684\u68cb\u5b50\u90fd\u662f\u4ece\u4e00\u5f00\u59cb\u5c31\u6446\u5728\u8fd9\u91cc\u7684\u3002\u6240\u4ee5\uff0c\u5982\u679c\u628a\u8d77\u70b9\u770b\u6210\u9ed1\u8272\uff0c\u80fd\u4ece\u4e00\u4e2a\u683c\u5b50\u8d70\u5230\u76f8\u90bb\u7684\u53e6\u4e00\u4e2a\u683c\u5b50\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u683c\u5b50\u6ca1\u6709\u88ab\u8d70\u8fc7\u4e14\u5b83\u4eec\u6700\u5f00\u59cb\u68cb\u5b50\u7684\u989c\u8272\u4e0d\u540c\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u7684\u6e38\u620f\u8f6c\u5316\u4e3a\uff1a\u7ed9\u4e00\u4e2a\u4e8c\u5206\u56fe\u548c\u4e00\u4e2a\u8d77\u70b9\uff0c\u4e24\u4eba\u8f6e\u6d41\u5728\u4e0a\u9762\u8d70\u8def\uff0c\u4e0d\u80fd\u7ecf\u8fc7\u91cd\u590d\u70b9\uff0c\u8c01\u8d70\u4e0d\u52a8\u8c01\u8f93\u3002\u7ed3\u8bba\u662f\uff0c\u82e5\u4efb\u4f55\u4e00\u4e2a\u6700\u5927\u5339\u914d\u90fd\u5305\u542b\u8d77\u70b9\uff0c\u5219\u5148\u624b\u80dc\u3002\n\n\u628a\u8d70\u8fc7\u4e00\u4e2a\u70b9\u770b\u4f5c\u5220\u6389\u5b83\uff0c\u90a3\u4e48\u8d70\u4e00\u6b65\u4e4b\u540e\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u662f\u4e00\u4e2a\u7ec4\u5408\u6e38\u620f\uff0c\u8003\u8651\u9012\u5f52\u8bc1\u660e\u3002\u9996\u5148\u7ec8\u6001\u663e\u7136\u4e0d\u6ee1\u8db3\u201c\u4efb\u4f55\u4e00\u4e2a\u6700\u5927\u5339\u914d\u90fd\u5305\u542b\u8d77\u70b9\u201d\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e\u4e24\u4ef6\u4e8b\uff1a\n- \u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u72b6\u6001\u53ef\u4ee5\u4e00\u6b65\u8d70\u5230\u4e00\u4e2a\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u72b6\u6001\u3002\u4efb\u4f55\u4e00\u4e2a\u6700\u5927\u5339\u914d\u90fd\u5305\u542b\u5f53\u524d\u70b9\uff0c\u90a3\u4e48\u628a\u5b83\u5220\u6389\u4ee5\u540e\u6700\u5927\u5339\u914d\u51cf\u4e00\u3002\u4efb\u610f\u62c9\u4e00\u4e2a\u6700\u5927\u5339\u914d\u51fa\u6765\uff0c\u8d70\u5411\u5f53\u524d\u70b9\u7684\u5339\u914d\u70b9\uff0c\u53ea\u9700\u8981\u5728\u539f\u56fe\u7684\u6700\u5927\u5339\u914d\u7684\u57fa\u7840\u4e0a\u628a\u8fd9\u6761\u5339\u914d\u8fb9\u53bb\u6389\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b0\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u5e76\u4e14\u5b83\u4e0d\u5305\u542b\u76ee\u6807\u70b9\u3002\n- \u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u72b6\u6001\u5fc5\u7136\u4e00\u6b65\u8d70\u5230\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u72b6\u6001\u3002\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u539f\u56fe\u4e0e\u65b0\u56fe\u7684\u6700\u5927\u5339\u914d\u5927\u5c0f\u4e00\u5b9a\u76f8\u7b49\uff0c\u5728\u65b0\u56fe\u4e2d\u627e\u51fa\u4e00\u4e2a\u4e0d\u5305\u542b\u76ee\u6807\u70b9\u7684\u6700\u5927\u5339\u914d\uff0c\u5728\u8fd9\u4e2a\u5339\u914d\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u5f53\u524d\u70b9\u548c\u76ee\u6807\u70b9\u7684\u8fd9\u6761\u8fb9\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u539f\u56fe\u7684\u66f4\u5927\u7684\u5339\u914d\uff0c\u77db\u76fe\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8bc1\u660e\u4e86\u7ed3\u8bba\u3002\u539f\u9898\u8f6c\u5316\u4e3a $k$ \u6b21\u8be2\u95ee\u67d0\u4e2a\u70b9\u662f\u5426\u5fc5\u7136\u88ab\u6700\u5927\u5339\u914d\u5305\u542b\uff0c\u7136\u540e\u5220\u6389\u5b83\u3002\u8003\u8651\u65f6\u523b\u7ef4\u62a4\u5f53\u524d\u56fe\u7684\u4e00\u4e2a\u6700\u5927\u5339\u914d\u3002\n- \u82e5\u8be2\u95ee\u70b9\u4e0d\u662f\u5339\u914d\u70b9\uff0c\u5219\u5b83\u4e0d\u5fc5\u7136\u88ab\u6700\u5927\u5339\u914d\u5305\u542b\uff1b\n- \u5426\u5219\uff0c\u5220\u6389\u8be2\u95ee\u70b9\u540e\u5b83\u7684\u5339\u914d\u70b9\u53d8\u4e3a\u672a\u5339\u914d\u72b6\u6001\u3002\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u5728\u65b0\u56fe\u4e0a\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u82e5\u53ef\u4ee5\u627e\u5230\u5219\u8bf4\u660e\u8be2\u95ee\u70b9\u4e0d\u5fc5\u7136\u88ab\u6700\u5927\u5339\u914d\u5305\u542b\uff0c\u5426\u5219\u5fc5\u7136\u88ab\u5305\u542b\u3002\u540c\u65f6\u6211\u4eec\u5f97\u5230\u4e86\u65b0\u7684\u6700\u5927\u5339\u914d\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(nmk)$\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\ninline ll read(){\n\tll x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=40+5;\nint n,m,k;\nchar s[maxn][maxn];\nvector<int> g[maxn*maxn];\nconst int dx[]={0,1,0,-1},dy[]={1,0,-1,0};\nint p[maxn*maxn];\nbool del[maxn*maxn],vis[maxn*maxn];\nbool dfs(int u){\n\tif(vis[u]) return 0;\n\tvis[u]=1;\n\tfor(int v:g[u])\n\t\tif(!del[v]&&(!p[v]||dfs(p[v]))){\n\t\t\tp[u]=v;\n\t\t\tp[v]=u;\n\t\t\treturn 1;\n\t\t}\n\treturn 0;\n}\nint main(){\n#ifdef LOCAL\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n#endif\n\tn=read();\n\tm=read();\n\tint u=0;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s[i]+1);\n\t\tfor(int j=1;j<=m;j++) if(s[i][j]=='.'){\n\t\t\tu=(i-1)*m+j;\n\t\t\ts[i][j]='X';\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++)\n\t\tfor(int k=0;k<4;k++){\n\t\t\tint x=i+dx[k],y=j+dy[k];\n\t\t\tif(!x||x>n||!y||y>m) continue;\n\t\t\tif(s[i][j]!=s[x][y])\n\t\t\t\tg[(i-1)*m+j].push_back((x-1)*m+y);\n\t\t}\n\tfor(int i=1;i<=n*m;i++) if(!p[i]){\n\t\tmemset(vis,0,sizeof(vis));\n\t\tdfs(i);\n\t}\n\tk=read();\n\tdel[u]=1;\n\tbool lst;\n\tif(!p[u]) lst=0;\n\telse{\n\t\tp[p[u]]=0;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tlst=!dfs(p[u]);\n\t}\n\tvector<int> ans;\n\tfor(int i=1;i<=k*2;i++){\n\t\tint x,y;\n\t\tx=read();\n\t\ty=read();\n\t\tu=(x-1)*m+y;\n\t\tdel[u]=1;\n\t\tbool res;\n\t\tif(!p[u]) res=0;\n\t\telse{\n\t\t\tp[p[u]]=0;\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tres=!dfs(p[u]);\n\t\t}\n\t\tif(i%2==1&&lst&&res)\n\t\t\tans.push_back((i+1)/2);\n\t\tlst=res;\n\t}\n\tprintf(\"%d\\n\",(int)ans.size());\n\tfor(int i:ans) printf(\"%d\\n\",i);\n#ifdef LOCAL\n\tfprintf(stderr,\"%f\\n\",1.0*clock()/CLOCKS_PER_SEC);\n#endif\n\treturn 0;\n}\n```",
        "postTime": 1651148019,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1971 [NOI2011] \u5154\u5154\u4e0e\u86cb\u86cb\u6e38\u620f"
    },
    {
        "content": "\n\u7b2c\u4e00\u4e2a\u9ed1\u9898\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u53cc\u500d\u7ecf\u9a8c\uff01\n\n# \u9898\u76ee\u5927\u610f\n\n\u4e24\u4eba\u535a\u5f08\uff0c\u6709 $n\\times m(1\\le n,m\\le 40)$ \u7684\u68cb\u76d8\uff0c\u6bcf\u4e2a\u683c\u5b50\u4e2d\u53ef\u80fd\u4e3a\u7a7a\u3001\u9ed1\u68cb\u6216\u767d\u68cb\uff0c\u6574\u4e2a\u68cb\u76d8\u53ea\u6709 $1$ \u4e2a\u7a7a\u683c\u3002\u5bf9\u4e8e\u5154\u5154\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5c06\u4e00\u679a\u4e0e\u7a7a\u683c\u76f8\u90bb\u7684\u767d\u8272\u68cb\u5b50\u79fb\u8fdb\u7a7a\u683c\u3002\u5bf9\u4e8e\u86cb\u86cb\u5219\u76f8\u53cd\u3002\u7ed9\u51fa\u6e38\u620f\u8fc7\u7a0b\uff0c\u6c42\u51fa\u5154\u5154\u5931\u8bef\u7684\u6b65\u9aa4\u3002\n\n# \u9898\u89e3\n\n\u6bcf\u6b21\u64cd\u4f5c\u662f\u68cb\u5b50\u4e0e\u7a7a\u683c\u4ea4\u6362\u4f4d\u7f6e\u3002\n\n\u7814\u7a76\u7a7a\u683c\u7684\u79fb\u52a8\uff0c\u53d1\u73b0\u7a7a\u683c\u79fb\u52a8\u8def\u5f84\u4e0d\u80fd\u81ea\u4ea4\u3002\u5f53\u8def\u5f84\u81ea\u4ea4\uff0c\u4ee3\u8868\u884c\u52a8\u4e86\u5076\u6570\u6b65\u3002\u5047\u8bbe\u7a7a\u683c\u7b2c\u4e00\u6b21\u79fb\u52a8\u4e0e\u767d\u5b50\u4ea4\u6362\uff0c\u4ea4\u6362\u540e\u5c06\u767d\u5b50\u7559\u5728\u4e86\u8d77\u70b9\uff0c\u90a3\u4e48\u7b2c\u5076\u6570\u6b65\u5fc5\u987b\u4e0e\u9ed1\u5b50\u4ea4\u6362\u3002\u5f53\u7a7a\u683c\u5728\u7b2c\u5076\u6570\u6b65\u56de\u5230\u8d77\u70b9\uff0c\u4e00\u5b9a\u662f\u4e0e\u767d\u5b50\u4ea4\u6362\uff0c\u4e0e\u4e0a\u53e5\u8bdd\u77db\u76fe\uff0c\u6545\u8bc1\u660e\u7a7a\u683c\u8def\u5f84\u4e0d\u80fd\u81ea\u4ea4\u3002\n\n\u5728\u4e0a\u8ff0\u8bc1\u660e\u4e2d\u66f4\u8fdb\u4e00\u6b65\uff0c\u7a7a\u683c\u5728\u5076\u6570\u6b65\u884c\u52a8\u4e2d\u4e0e\u9ed1\u5b50\u4ea4\u6362\uff0c\u5728\u5947\u6570\u6b65\u884c\u52a8\u4e2d\u4e0e\u767d\u5b50\u4ea4\u6362\uff0c$0$ \u4e5f\u662f\u5076\u6570\uff0c\u90a3\u4e48\u8003\u8651\u5c06\u7a7a\u683c\u7684\u521d\u59cb\u4f4d\u7f6e\u770b\u505a\u9ed1\u8272\uff08\u4e0d\u4f1a\u968f\u7a7a\u683c\u79fb\u52a8\uff09\u3002\u90a3\u4e48\u8fd9\u65f6\u5019\u4f60\u4f1a\u53d1\u73b0\uff0c\u7a7a\u683c\u7684\u79fb\u52a8\u8def\u5f84\u5c31\u662f\u9ed1\u767d\u4ea4\u66ff\u7684\u3002\n\n\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u56fe\u9ed1\u767d\u67d3\u8272\u3002\u5bf9\u77e9\u9635\u5206\u90e8\uff0c\u767d\u8272\u4e00\u90e8\uff0c\u9ed1\u8272\uff08\u5305\u62ec\u7a7a\u683c\u521d\u59cb\u4f4d\u7f6e\uff09\u4e00\u90e8\uff0c\u5c06\u4e24\u90e8\u4e4b\u95f4\u80fd\u591f\u4e00\u6b65\u5230\u8fbe\u7684\u70b9\u8fde\u8fb9\uff0c\u8dd1\u6700\u5927\u5339\u914d\u3002\n\n\u4e8e\u662f\u4f60\u53d1\u73b0\uff0c\u8ddf[\u8fd9\u4e2a\u9898](https://www.luogu.com.cn/problem/P4055)\u6709\u4ebf\u70b9\u70b9\u50cf\u3002[\u9898\u89e3](https://www.luogu.com.cn/blog/hejianxing/solution-p4055)\n\n\u5957\u7528\u90a3\u4e2a\u9898\u7684\u8ba8\u8bba\uff0c\u5f97\u51fa\u7ed3\u8bba\uff1a\u5148\u624b\u8d70\u5230**\u975e\u6700\u5927\u5339\u914d\u5fc5\u987b\u70b9**\u4e0a\u5fc5\u80dc\u3002\n\n\u5982\u4f55\u6c42\u8fd9\u4e2a\u4e1c\u897f\uff1f\n\n\u9996\u5148\u6c42\u51fa\u4e00\u79cd\u5339\u914d\u65b9\u6848\uff0c\u5f53\u679a\u4e3e\u5230\u4e00\u4e2a\u70b9\u65f6\uff0c\u6709\u4e24\u79cd\u53ef\u80fd\uff1a\n\n- \u70b9 $p$ \u6ca1\u6709\u88ab\u5339\u914d\n- \u70b9 $p$ \u88ab\u5339\u914d\n\n\u8f93\u5165\u4e00\u4e2a\u5750\u6807\u540e\uff0c\u5c06\u8fd9\u4e2a\u70b9\u5220\u53bb\uff0c\u4ee5\u514d\u540e\u9762\u7684\u8fc7\u7a0b\u8d70\u5230\u8fd9\u4e2a\u70b9\uff0c\u56e0\u4e3a\u7a7a\u683c\u7684\u79fb\u52a8\u8def\u5f84\u4e0d\u80fd\u81ea\u4ea4\u3002\n\n\u5982\u679c\u70b9 $p$ \u6ca1\u6709\u88ab\u5339\u914d\uff0c\u663e\u7136\u662f\u975e\u6700\u5927\u5339\u914d\u5fc5\u987b\u70b9\u3002\n\n\u5982\u679c\u70b9 $p$ \u88ab\u5339\u914d\uff0c\u90a3\u4e48\u5c31\u5c06\u70b9 $p$ \u5220\u53bb\uff08\u70b9 $p$ \u5bf9\u5e94\u7684\u5339\u914d\u70b9\u5931\u914d\uff09\uff0c\u7136\u540e\u4ece\u70b9 $p$ \u7684\u5339\u914d\u70b9 $q$ \u5c1d\u8bd5\u589e\u5e7f\uff0c\u589e\u5e7f\u6210\u529f\u5219 $p$ \u662f\u975e\u6700\u5927\u5339\u914d\u5fc5\u987b\u70b9\u3002\n\n\u4e8e\u662f\u80fd\u591f\u8f7b\u677e\u6c42\u51fa\u6bcf\u4e2a\u6b65\u9aa4\u7684\u80dc\u8d1f\u6001\uff08\u5373\u5fc5\u80dc\u8fd8\u662f\u5fc5\u8d25\uff09\u3002\n\n\u56de\u5230\u9898\u76ee\uff0c\u201c\u5154\u5154\u5931\u8bef\u7684\u6b65\u9aa4\u201d\u662f\u4ec0\u4e48\u610f\u601d\uff1f\n\n\u5176\u5b9e\u5c31\u662f\u5154\u5154\u539f\u672c\u5fc5\u80dc\uff0c\u7ed3\u679c\u4e00\u4e0d\u5c0f\u5fc3\uff0c\u64cd\u4f5c\u4e4b\u540e\u53d8\u6210\u86cb\u86cb\u5fc5\u80dc\u4e86\u3002\u4e8e\u662f\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u6b65\u9aa4\u7684\u80dc\u8d1f\u6001\uff0c\u7136\u540e\u518d\u5224\u65ad\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nmk)$.\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 4005;\nint n, m, k, cnt = 0, fir[N], nxt[N << 1], to[N << 1], vis[N], cxy[N], nx = 0, p[N][N], sx, sy, cans = 0, ans[N], win[N], del[N];\nchar a[N][N];\nvoid ade(int u, int v) {\n    cnt++, nxt[cnt] = fir[u], fir[u] = cnt, to[cnt] = v;\n    cnt++, nxt[cnt] = fir[v], fir[v] = cnt, to[cnt] = u;\n}\nint dfs(int r) {\n    vis[r] = 1;\n    for (int i = fir[r]; i; i = nxt[i])\n        if (!vis[to[i]] && !del[to[i]]) {//\u9700\u5224\u65ad\u90bb\u63a5\u70b9\u662f\u5426\u88ab\u5220\u9664\n            vis[to[i]] = 1;\n            if (!cxy[to[i]] || dfs(cxy[to[i]])) {\n                cxy[cxy[r]] = 0, cxy[to[i]] = r, cxy[r] = to[i];\n                return 1;\n            }\n        }\n    return 0;\n}\nvoid match() {\n    for (int i = 1; i <= nx; i++)\n        if (!cxy[i])\n            memset(vis, 0, sizeof(vis)), dfs(i);\n}\nvoid getp() {\n    int tmp = 0;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            if (a[i][j] == 'O')\n                p[i][j] = ++tmp;\n    nx = tmp;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            if (a[i][j] == 'X') p[i][j] = ++tmp;\n            else if (a[i][j] == '.') p[i][j] = ++tmp, sx = i, sy = j;\n}\nint dx[5] = {0, 1, 0, -1};\nint dy[5] = {1, 0, -1, 0};\nvoid edge(int x, int y) {\n    for (int i = 0; i < 4; i++) {\n        int xx = x + dx[i], yy = y + dy[i];\n        if (xx >= 1 && xx <= n && yy >= 1 && yy <= m && p[xx][yy] > nx) ade(p[x][y], p[xx][yy]);\n    }\n}\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++) scanf(\"%s\", a[i] + 1);\n    getp();//\u91cd\u65b0\u6807\u53f7\uff0c\u767d\u70b9\u6807 1~nx\uff0c\u5269\u4e0b\u7684 nx+1~n \u4f9d\u6b21\u6807\u53f7\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            if (a[i][j] == 'O')\n                edge(i, j);//\u5efa\u56fe\n    match();//\u5148\u6765\u4e00\u53d1\u6700\u5927\u5339\u914d\n    scanf(\"%d\", &k);\n    for (int t = 1; t <= k * 2; t++) {\n        int x = p[sx][sy];\n        scanf(\"%d%d\", &sx, &sy);//\u6ce8\u610f\u8981\u5728continue\u524d\u8f93\u5165\n        del[x] = 1;//\u76f4\u63a5\u5220\u9664\n        if (!cxy[x]) continue;\n        int tmp = cxy[x];\n        cxy[x] = cxy[tmp] = 0, memset(vis, 0, sizeof(vis));\n        if (!dfs(tmp)) win[t] = 1;//\u5f53\u524d\u72b6\u6001\u4e0b\uff08\u672a\u64cd\u4f5c\uff09\u5148\u624b\u5fc5\u80dc\n    }\n    for (int i = 2; i <= k * 2; i += 2)\n        if (win[i] == 1 && win[i - 1] == 1)\n            ans[++cans] = i / 2;\n    printf(\"%d\\n\", cans);\n    for (int i = 1; i <= cans; i++) printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n```\n\n# END\n",
        "postTime": 1684569393,
        "uid": 566238,
        "name": "hejianxing",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P1971 [NOI2011] \u5154\u5154\u4e0e\u86cb\u86cb\u6e38\u620f"
    }
]