[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P2741)\n\n~~\u8fd9\u9898\u5728NOIP2018\u524d\u51e0\u5929\u88ab\u6211\u4eec\u6559\u7ec3\u62ff\u6765\u5f53PJ\u4fe1\u5fc3\u8d5b\u7684T3~~\n\n\u601d\u8def\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u77e9\u5f62\u7684\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u90e8\u5206\u9732\u51fa\u6765\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8bb0\u5f55\u4e0b\u6bcf\u79cd\u5b57\u6bcd\u7684x\u3001y\u5750\u6807\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u5373\u53ef\u786e\u5b9a\u6bcf\u4e2a\u77e9\u5f62\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u63a8\u51fa\u54ea\u4e9b\u5b57\u6bcd\u8986\u76d6\u4e86\u54ea\u4e9b\u5b57\u6bcd\u3002\n\n\u7136\u540e\u5c31\u662f\u600e\u4e48\u627e\u60c5\u51b5\u4e86\uff0c\u4e00\u5f00\u59cb\u6211\u9009\u62e9\u6700\u66b4\u529b\u7684\u65b9\u6cd5\uff0c\u679a\u4e3e\u6240\u6709\u6392\u5217\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5b57\u6bcd\u8986\u76d6\u5173\u7cfb\u5c31\u9000\u51fa\u3002\n\n\u4ee3\u7801\uff1a\n```\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nint jx[26][4],ss;//jx\u8bb0\u5f55\u6bcf\u4e2a\u77e9\u5f62\u7684\u56db\u4e2a\u89d2\uff0css\u8bb0\u5f55\u5b57\u6bcd\u7684\u79cd\u6570\nbool b[26][26];//b[i][j]\u8868\u793a\u5b57\u6bcdj\u8986\u76d6\u4e86\u5b57\u6bcdi\nbool bbb[26];//bbb[i]\u8868\u793a\u5b57\u6bcdi\u662f\u5426\u51fa\u73b0\u8fc7\nvoid dfs(string s)\n{\n\tif(s.size()==ss){cout<<s<<endl;return;}//\u5982\u679c\u679a\u4e3e\u5b8c\u4e86\u5c31\u8f93\u51fa\n\tfor(int i=0;i<26;i++)//\u679a\u4e3e\u6bcf\u79cd\u5b57\u6bcd\n\t{\n\t\tif(!bbb[i])continue;//\u5982\u679c\u5b57\u6bcdi\u6ca1\u51fa\u73b0\u8fc7\u5c31continue\n\t\tbool bb=1;\n\t\tfor(int j=0;j<s.size();j++)\n\t\t{\n\t\t\tif(b[i][s[j]-'A']){bb=0;break;}//\u5982\u679c\u4e0d\u6ee1\u8db3\u8986\u76d6\u5173\u7cfb\u5c31\u9000\u51fa\n\t\t}\n\t\tif(bb){bbb[i]=0;dfs(s+char(i+'A'));bbb[i]=1;}//\u5982\u679c\u6ee1\u8db3\u8986\u76d6\u5173\u7cfb\u5c31\u5f80\u4e0bdfs\n\t}\n}\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tstring s[n];\n\tfor(int i=0;i<n;i++)cin>>s[i];\n\tfor(int k=0;k<26;k++)jx[k][1]=jx[k][3]=999;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tif(s[i][j]!='.')\n\t\t\t{\n\t\t\t\tint kkk=s[i][j]-'A';\n\t\t\t\tbbb[kkk]=1;\n\t\t\t\tjx[kkk][0]=max(jx[kkk][0],i);//\u8bb0\u5f55\u6bcf\u4e2a\u77e9\u5f62\u7684\u56db\u89d2\n\t\t\t\tjx[kkk][1]=min(jx[kkk][1],i);\n\t\t\t\tjx[kkk][2]=max(jx[kkk][2],j);\n\t\t\t\tjx[kkk][3]=min(jx[kkk][3],j);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)for(int j=0;j<m;j++)for(int k=0;k<26;k++)if(bbb[k] && (((i==jx[k][0] || i==jx[k][1]) && j<=jx[k][2] && j>=jx[k][3]) || ((j==jx[k][2] || j==jx[k][3]) && i<=jx[k][0] && i>=jx[k][1])))b[k][s[i][j]-'A']=1;//\u8bb0\u5f55\u8986\u76d6\u5173\u7cfb\n\tfor(int i=0;i<26;i++)if(bbb[i])ss++;\n\tdfs(\"\");\n}\n```\n\u7ed3\u679c\u6700\u540e\u4e00\u4e2a\u70b9\u60b2\u60e8TLE\u3002\n\n\u7136\u540e\u6539\u53d8\u601d\u8def\uff0c\u56e0\u4e3a\u5df2\u77e5\u54ea\u4e2a\u5b57\u6bcd\u5728\u54ea\u4e2a\u5b57\u6bcd\u4e0b\u9762\uff0c\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\uff0c\u4e8e\u662f\u4fbfAC\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nint jx[26][4],ss,kkk,n,m,rd[26];//\u53d8\u91cf\u90fd\u4e00\u6837,rd[i]\u8868\u793a\u5b57\u6bcdi\u7684\u5165\u5ea6\nbool b[26][26],bbb[26];\nchar sss[26];\ninline void dfs(int l)//\u62d3\u6251\u6392\u5e8f\uff08\u61d2\u5f97\u6539\u51fd\u6570\u540d\u4e86\uff09\n{\n    if(l==ss){printf(\"%s\\n\",sss);return;}\n    for(register int i=0;i<26;++i)\n    {\n        if(!bbb[i])continue;//\u5982\u679c\u5b57\u6bcdi\u6ca1\u51fa\u73b0\u8fc7\u5c31continue\n        if(rd[i]==0)//\u5982\u679c\u5b57\u6bcdi\u7684\u5165\u5ea6\u7b49\u4e8e0\u5c31\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\n        {\n        \tfor(register int j=0;j<26;j++)\n        \t{\n        \t\tif(b[i][j])rd[j]--;//\u5c06\u6240\u6709\u8986\u76d6\u5f53\u524d\u5b57\u6bcd\u7684\u5165\u5ea6\u51cf1\n\t\t\t}\n\t\t\tsss[l]=i+'A';\n\t\t\tbbb[i]=0;\n        \tdfs(l+1);//\u5f80\u4e0bdfs\n        \tbbb[i]=1;\n        \tfor(register int j=0;j<26;j++)\n        \t{\n        \t\tif(b[i][j])rd[j]++;//\u8fdb\u884c\u8fd8\u539f\n\t\t\t}\n\t\t}\n    }\n}\nint main()//\u90fd\u4e00\u6837\n{\n    int i,j,k;\n    scanf(\"%d%d\\n\",&n,&m);\n    char s[n][m];\n    for(i=0;i<n;++i)scanf(\"%s\",s[i]);\n    for(k=0;k<26;++k)jx[k][1]=jx[k][3]=999;\n    for(i=0;i<n;++i)\n    {\n        for(j=0;j<m;++j)\n        {\n            if(s[i][j]!='.')\n            {\n                kkk=s[i][j]-'A';\n                bbb[kkk]=1;\n                jx[kkk][0]=max(jx[kkk][0],i);\n                jx[kkk][1]=min(jx[kkk][1],i);\n                jx[kkk][2]=max(jx[kkk][2],j);\n                jx[kkk][3]=min(jx[kkk][3],j);\n            }\n        }\n    }\n    for(i=0;i<n;++i)for(j=0;j<m;++j)for(k=0;k<26;++k)if(k!=s[i][j]-'A' && !b[k][s[i][j]-'A'] && bbb[k] && (((i==jx[k][0] || i==jx[k][1]) && j<=jx[k][2] && j>=jx[k][3]) || ((j==jx[k][2] || j==jx[k][3]) && i<=jx[k][0] && i>=jx[k][1])))\n\t{b[k][s[i][j]-'A']=1;rd[s[i][j]-'A']++;}//\u5982\u679c\u5b57\u6bcdk\u5728\u5b57\u6bcds[i][j]-'A'\u4e0b\u9762\u5c31\u5c06\u5b57\u6bcds[i][j]-'A'\u7684\u5165\u5ea6\u52a01\n    for(i=0;i<26;++i)if(bbb[i])++ss;\n    dfs(0);\n}\n```\n![](https://www.luogu.org/images/congratulation.png)",
        "postTime": 1565003563,
        "uid": 60075,
        "name": "pzc2004",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "# \u8fd9\u9053\u9898\u597d\u96be\u554a\n~~\u5bf9\u4e8e\u6211\u8fd9\u4e2a\u5c0f\u849f\u84bb\u6765\u8bf4~~\n\n## \u8fd9\u9053\u9898\uff0c\u660e\u663e\u5c31\u662f\u4e2a\u62d3\u6251 ~~\u6211\u89c9\u5f97\u7206\u641c\u7684\u90fd\u662f\u5de8\u4f6c~~\n###### \u5220\u9664\u7ebf\u7528\u4e0a\u763e\u4e86\n\u597d\uff0c\u8fdb\u5165\u6b63\u9898\u3002\u8fd9\u9053\u62d3\u6251\u9898\u9996\u5148\u662f\u8981\u5efa\u8fb9\u3002\u56e0\u4e3a\u4ed6\u8bf4\u6bcf\u4e00\u6761\u8fb9\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u627e\u51fa\u4e00\u4e2a\u4e2a\u77e9\u9635\u7684\u8fb9\u754c\uff0c~~\u8fd9\u975e\u5e38\u597d\u627e~~\uff0c\u7136\u540e\u5f00\u59cb\u5efa\u8fb9\u3002\u5efa\u8fb9\u5c31\u662f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u77e9\u5f62\uff0c\u53d1\u73b0\u201c\u6709\u5916\u5458\u4fb5\u5165\u201d\u7684\u5c31\u5efa\u4e00\u6761\u8fb9\u3002\u6bd4\u5982\n```\nAAABBBA\nA..B.BA\nAAABBBA\n```\n\u6b64\u65f6\uff0cA\u77e9\u9635\u7684\u8fb9\u754c\u4e3a\u4e0a\uff1a1 \u4e0b\uff1a3 \u5de6\uff1a1 \u53f3\uff1a7\n\nB\u77e9\u9635\u7684\u8fb9\u754c\u540c\u7406~~\u61d2~~\n\u7136\u540e\u5c31\u679a\u4e3eA\u77e9\u9635\uff0c\u53d1\u73b0\u6709B\u201c\u4fb5\u5165\u201d\uff0c\u5c31A->b\u5efa\u4e00\u6761\u8fb9\n\n\u8fb9\u5efa\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u62d3\u6251\u3002\n\u7531\u4e8e\u4ed6\u8bf4\u4e0d\u53ea\u4e00\u4e2a\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u53bb\u6df1\u641c\u3002\u6df1\u641c\u5c31\u662f\u628a\u961f\u5217\u91cc\u9762\u6bcf\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u90fd\u62ff\u51fa\u6765\u8dd1\u4e00\u904d\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u53d6\u5934\u8dd1\u4e86\u3002\u628a\u6bcf\u4e00\u6b21\u7684\u7b54\u6848\u8bb0\u4e0b\u6765\uff0csort\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n# \u4ee3\u7801\uff08\u4f60\u4eec\u6700\u559c\u6b22\u7684\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[31][31];\nconst int N=500001;\nstruct data{\n\tint x1=1e9,x2,y1=1e9,y2;\n}x[27];\nint node[N],head[N],nxt[N],into[N],zf,cnt,b[N],ans[N],bb[N],q[N],r,hh=1;\nstring ans2[N];\nvoid add(int x,int y)\n{\n\tnode[++cnt]=y;\n\tnxt[cnt]=head[x];\n\thead[x]=cnt;\n}\nvoid dfs(int dep)\n{\n\tif(dep>zf)\n\t{\n\t\tfor(int i=zf;i>=1;i--){\n\t\t\tchar c=ans[i]+'A'-1;\n\t\t\tans2[hh]+=c;\n\t\t}\n\t\thh++;\n\t\treturn;\n\t}\n\tfor(int i=1;i<=r;i++)\n\t{\n\t\tif(b[i]==0)\n\t\t{\n\t\t\tint rr=r;\n\t\t\tint x=q[i];\n\t\t\tfor(int j=head[x];j;j=nxt[j])\n\t\t\t{\n\t\t\t\tinto[node[j]]--;\n\t\t\t\tif(into[node[j]]==0)q[++r]=node[j];\n\t\t\t}\n\t\t\tb[i]=1;\n\t\t\tans[dep]=x;\n\t\t\tdfs(dep+1);\n\t\t\tb[i]=0;\n\t\t\tfor(int j=head[x];j;j=nxt[j])into[node[j]]++;\n\t\t\tr=rr;\n\t\t}\n\t\t\n\t}\n}\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)scanf(\"%s\",a[i]+1);\n    for(int i=1;i<=n;i++)\n\t    for(int j=1;j<=m;j++)\n    \t{\n    \t\tif(a[i][j]!='.')\n\t\t\t{\n\t\t\t\tint h=(int)(a[i][j]-'A'+1);\n\t\t\t\tif(bb[h]==0)zf++;\n\t\t\t\tbb[h]=1;\n\t\t\t\tif(i<x[h].x1)x[h].x1=i;\n\t\t\t\tif(i>x[h].x2)x[h].x2=i;\n\t\t\t\tif(j<x[h].y1)x[h].y1=j;\n\t\t\t\tif(j>x[h].y2)x[h].y2=j;\n\t\t    }\n\t\t}\n\tfor(int i=1;i<=26;i++)\n\t{\n\t\tif(x[i].x1!=0){\n\t\t\tfor(int j=x[i].x1;j<=x[i].x2;j++)\n\t\t\t{\n\t\t\t\tint h=a[j][x[i].y1]-'A'+1;\n\t\t\t\tif(h!=i)add(h,i),into[i]++;\n\t\t\t\th=a[j][x[i].y2]-'A'+1;\n\t\t\t\tif(h!=i)add(h,i),into[i]++;\n\t\t\t}\n\t\t\tfor(int j=x[i].y1;j<=x[i].y2;j++)\n\t\t\t{\n\t\t\t\tint h=a[x[i].x1][j]-'A'+1;\n\t\t\t\tif(h!=i)add(h,i),into[i]++;\n\t\t\t\th=a[x[i].x2][j]-'A'+1;\n\t\t\t\tif(h!=i)add(h,i),into[i]++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\tfor(int i=1;i<=26;i++)\n    \tif(bb[i]==1&&into[i]==0)q[++r]=i;\n\tdfs(1);\n\tsort(ans2+1,ans2+hh);\n\tfor(int i=1;i<=hh-1;i++)\n\t{\n\t\tfor(int j=0;j<zf;j++)printf(\"%c\",ans2[i][j]);\n\t\tprintf(\"\\n\")\uff1b\n\t}\n}\n```\n~~\u4e3a\u4ec0\u4e48\u6211\u7684\u7801\u98ce\u4e0a\u4e86\u8fd9\u91cc\u5c31\u53d8\u5f97\u9b3c\u755c\u4e86~~\n\u597d\uff0c\u6ca1\u4e86\n###### \u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\n\n###### ~~\u5220\u9664\u7ebf\u592a\u597d\u7528\u4e86~~",
        "postTime": 1564814018,
        "uid": 119124,
        "name": "iamzq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "USACO\u4e0a\u7684\u62d3\u6251\uff08\u6bd4\u8f83\uff09\u6a21\u677f\u7684\u9898\u3002\n\n\u540c\u65f6\u4e5f\u662f\u67d0\u73ed\u6a21\u62df\u8d5b\u7684\u7b2c\u4e09\u9898\uff08\u867d\u7136\u6a21\u62df\u8d5b\u6570\u636e\u5927\u5e45\u5f31\u5316\uff09\u3002\n\n## \u7b80\u660e\u9898\u610f\n\n> \u7ed9\u5b9a\u4e00\u4e9b\u7531\u5927\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u957f\u65b9\u5f62\u6846\uff0c\u628a\u8fd9\u4e9b\u6846\u4e0a\u4e0b\u53e0\u653e\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u5f20\u5b57\u7b26\u56fe\u50cf\u3002\n>\n> \u6c42\u6240\u6709\u4e0a\u4e0b\u53e0\u653e\u7684\u53ef\u80fd\u65b9\u6848\u3002\n\n## \u505a\u6cd5\n\n#### 33pts / \u6a21\u62df\u8d5bAC \u505a\u6cd5\n\n\u5176\u5b9e\u548c100pts\u5f88\u7c7b\u4f3c\u3002\u3002\u3002\n\n\u9996\u5148\u662f\u9884\u5904\u7406\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\u6765\u8bf4\u660e\uff1a\n\n```text\n.CCC....  .###....  ........\nECBCBB..  E#####..  +EEEEE..\nDCBCDB..  ######..  E....E..\nDCCC.B..  ####.#..  E....E..\nD.B.ABAA  #.######  E....E..\nD.BBBB.A  #.####.#  E....E..\nDDDDAD.A  ######.#  E....E..\nE...AAAA  E...####  E....E..\nEEEEEE..  EEEEEE..  EEEEE+..\n   1         2         3\n```\n\n\u5982\u679c\u6211\u4eec\u4ece\u6837\u4f8b\u4e2d\u62bd\u51fa\u6240\u6709\u4e3a`E`\u7684\u5b57\u7b26\uff0c\u800c\u628a\u5176\u4ed6\u7684\u5927\u5199\u5b57\u6bcd\u90fd\u53d8\u6210`#`\uff0c\u90a3\u4e48\u6837\u4f8b\u5c31\u53d8\u6210\u4e86\u56fe2\u3002\n\n\u6211\u4eec\u518d\u63d0\u53d6\u51fa\u4f4d\u4e8e\u6700\u5de6\u8fb9\uff0c\u6700\u53f3\u8fb9\uff0c\u6700\u4e0a\u9762\uff0c\u6700\u4e0b\u9762\u7684\u5b57\u7b26\uff0c\u6807\u4e3a`+`\uff0c\u7528\u5b83\u52fe\u52d2\u51fa\u8fb9\u6846\uff0c\u5c31\u53d8\u6210\u4e86\u56fe3\u3002\n\n\u7531\u4e8e\u9898\u76ee\u4fdd\u8bc1\u65b9\u6846\u7684\u56db\u6761\u8fb9\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u53ef\u89c1\uff0c\u6240\u4ee5\u4f9d\u6b64\u5c31\u53ef\u4ee5\u5224\u65ad\u6bcf\u4e00\u4e2a\u77e9\u5f62\u6846\u7684\u4f4d\u7f6e\u3002\n\n\u6709\u5173\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c++\n\tmemset(u,0x3f,sizeof u);\t//\u521d\u59cb\u6700\u4e0a\u548c\u6700\u5de6\u8981\u8d4b\u6781\u5927\u503c\n\tmemset(l,0x3f,sizeof l);\n\tfor(int ch=65;ch<=mx;ch++)\t//mx\u662fascii\u6700\u5927\u7684\u5b57\u7b26\uff0c\u7531\u4e8e'A'>'.'\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fdb\u884c\u521d\u6b65\u7b5b\u9009\n\t    for(int i=1;i<=n;i++)\n\t        for(int j=1;j<=m;j++)\n\t            if(c[i][j]==ch)\n\t            \t\t//cnt+=vis[ch],vis[ch]=0,  \u8fd9\u4e00\u53e5\u8bdd\u5728100 pts\u91cc\u6709\u7528\n\t\t\t\t\tu[ch]=min(u[ch],i),d[ch]=max(d[ch],i),\n\t            \tl[ch]=min(l[ch],j),r[ch]=max(r[ch],j);\n\t\t\t\t\t\t//u[i],d[i],l[i],r[i]\u6570\u7ec4\u5206\u522b\u8868\u793a\u7531\u5b57\u7b26i\u7ec4\u6210\u7684\u65b9\u6846\u6700\u4e0a\u4e0b\u5de6\u53f3\u7684\u4f4d\u7f6e\n```\n\n```c++\ninline int check(char ch,int i,int j){\t//\u5224\u65ad(i,j)\u662f\u5426\u5728\u7531\u5b57\u7b26ch\u7ec4\u6210\u7684\u65b9\u6846\u4e0a\n\treturn (i==u[ch]||i==d[ch])&&j<=r[ch]&&j>=l[ch]||\t//(i,j)\u5728\u6846\u7684\u4e0a\u9762\u6216\u4e0b\u9762\n\t       (j==l[ch]||j==r[ch])&&i<=d[ch]&&i>=u[ch];\t//(i,j)\u5728\u6846\u7684\u5de6\u9762\u6216\u53f3\u9762\n}\n```\n\n\u7136\u540e\u662f\u5224\u65ad\u4e24\u4e2a\u6846\u7684\u4e0a\u4e0b\u5173\u7cfb\u3002\n\n\u5982\u679c\u4e00\u4e2a\u6846 A \u76f4\u63a5\u8986\u76d6\u5728\u53e6\u4e00\u4e2a B \u4e0a\uff0c\u90a3\u4e48\u5728\u6700\u7ec8\u7684\u7b54\u6848\u4e2dB\u4e00\u5b9a\u5728A\u7684\u524d\u9762\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528`std::vector<int>e[i]`\u6765\u8868\u793a\u8986\u76d6\u5728\u5b57\u7b26i\u4e4b\u4e0a\u7684\u6240\u6709\u65b9\u6846\u3002\n\n\u6709\u5173\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c++\n\tfor(int ch=65;ch<=mx;ch++)\n\t    for(int i=1;i<=n;i++)\n\t        for(int j=1;j<=m;j++)\n\t            if(check(ch,i,j)&&c[i][j]!=ch){\t//\u5982\u679c\u4e00\u4e2a\u70b9\u5728ch\u65b9\u6846\u4e0a\u4f46\u662f\u5b9e\u9645\u4e0d\u662f\u5b57\u7b26ch\n\t            \tint flg=0;\n\t            \tfor(int t=0;t<e[ch].size();t++)\n\t            \t    if(e[ch][t]==c[i][j])flg=1;\t//\u53bb\u91cd\n\t            \tif(!flg)e[ch].push_back(c[i][j]),in[c[i][j]]++;\t\n\t\t\t\t}\n```\n\n\u7136\u540e\u5c31\u662f\u679a\u4e3e\u65b9\u6848\u4e86\u3002\n\n\u5728 33pts \u4e2d\u4f60\u5b9e\u9645\u53ea\u8981\u679a\u4e3e\u5168\u6392\u5217\u5373\u53ef\u3002\n\n\u53ea\u6709\u88ab\u65b9\u6846A\u8986\u76d6\u7684\u6240\u6709\u65b9\u6846\u90fd\u5728\u7b54\u6848\u91cc\u65f6\uff0c\u65b9\u6846 A \u624d\u53ef\u4ee5\u5728\u7b54\u6848\u91cc\u3002\n\n\u6709\u5173\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c++\nvoid search(){\n\tfor(int i=65;i<=mx;i++)s[i-65]=i;mx-=64;\t//\u521d\u59cb\u6392\u5217\u4e3aABCDEF...\n\tdo{\n\t\tint flg=0;\t//flg\u8868\u793a\u8be5\u5e8f\u5217\u53ef\u4ee5\u4e3a\u7b54\u6848(0)\u6216\u8005\u4e0d\u80fd(1)\n\t\tmemcpy(ii,in,sizeof in);\n\t\tfor(int i=0;i<mx&&!flg;i++)\n\t\t    if(!in[s[i]]){\n\t\t    \tfor(int j=0;j<e[s[i]].size();j++)\n\t\t    \t\tin[e[s[i]][j]]--;\n\t\t\t}else flg=1;\n\t\tif(flg==0)cout<<s<<endl;\n\t\tmemcpy(in,ii,sizeof in);\n\t}while(next_permutation(s,s+mx));\t//\u5168\u6392\u5217\n}\n```\n\n#### 55 pts\n\n> \u5982\u679c\u4e00\u4e2a\u6846 A \u76f4\u63a5\u8986\u76d6\u5728\u53e6\u4e00\u4e2a\u6846 B \u4e0a\uff0c\u90a3\u4e48\u5728\u6700\u7ec8\u7684\u7b54\u6848\u4e2dB\u4e00\u5b9a\u5728A\u7684\u524d\u9762\u3002\n\n\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u663e\u7136\u5c31\u662f \u62d3\u6251\u6392\u5e8f \u554a\uff01\n\n\u524d\u9762\u7684`in`\u6570\u7ec4\u8868\u793a\u5165\u5ea6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u505a\u4e86\u3002\n\n#### 100 pts\n\n\u5176\u5b9e\u6709\u4e2a\u5c0f\u5751\u70b9\uff0c\u5c31\u662f `A~mx` \u4e2d\u4e0d\u662f\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4f1a\u51fa\u73b0\u7684\uff01\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u591a\u52a0\u4e00\u4e2a\u5224\u65ad\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u628a\u62d3\u6251\u6392\u5e8f\u4e2d\u7684 `vis` \u6570\u7ec4\u521d\u59cb\u4e3a 1 \uff0c\u7136\u540e\u53d1\u73b0\u4e00\u79cd\u5b57\u7b26 i \u5c31 `cnt++,vis[i]=0`\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230AC\u4e86\uff01\n\n## \u4ee3\u7801\n\n```c++\n//P2741 AC Code\n//written by Loster_King(159686)\n//29ms /  640.00KB / 1.44KB C++ O2\n#include<bits/stdc++.h>\nusing namespace std;\nint const N=233;\nint n,m,cnt,in[N],ii[N],u[N],d[N],l[N],r[N];bool vis[N];\nchar mx,c[N][N],s[N];\nvector<char>e[N];\ninline int check(char ch,int i,int j){\n\treturn (i==u[ch]||i==d[ch])&&j<=r[ch]&&j>=l[ch]||\n\t       (j==l[ch]||j==r[ch])&&i<=d[ch]&&i>=u[ch];\n}\nvoid topo_sort(string s){\n    if(s.length()==cnt){cout<<s<<endl;return;}\n    for(int i=65;i<=mx;i++)\n        if(!in[i]&&!vis[i]){\n        \tfor(int j=0;j<e[i].size();j++)in[e[i][j]]--;\n        \tvis[i]=1;topo_sort(s+(char)i);vis[i]=0;\n        \tfor(int j=0;j<e[i].size();j++)in[e[i][j]]++;\n        }\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);cout.tie(0);\n\tmemset(u,0x3f,sizeof u);\n\tmemset(l,0x3f,sizeof l);\n\tmemset(vis,1,sizeof vis);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t    for(int j=1;j<=m;j++)\n\t        cin>>c[i][j],mx=max(mx,c[i][j]);\n\tfor(int ch=65;ch<=mx;ch++)\n\t    for(int i=1;i<=n;i++)\n\t        for(int j=1;j<=m;j++)\n\t            if(c[i][j]==ch)\n\t            \tcnt+=vis[ch],vis[ch]=0,\n                \tu[ch]=min(u[ch],i),d[ch]=max(d[ch],i),\n\t            \tl[ch]=min(l[ch],j),r[ch]=max(r[ch],j);\n\tfor(int ch=65;ch<=mx;ch++)\n\t    for(int i=1;i<=n;i++)\n\t        for(int j=1;j<=m;j++)\n\t            if(check(ch,i,j)&&c[i][j]!=ch){\n\t            \tint flg=0;\n\t            \tfor(int t=0;t<e[ch].size();t++)\n\t            \t    if(e[ch][t]==c[i][j])flg=1;\n\t            \tif(!flg)e[ch].push_back(c[i][j]),in[c[i][j]]++;\n                    }\n\ttopo_sort(\"\");\n}\n```\n\n",
        "postTime": 1603597745,
        "uid": 159686,
        "name": "Loser_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6574\u4f53\u96be\u5ea6\u4e0d\u5927\uff0c\u4f46\u6709\u5f88\u591a\u7ec6\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u5bb9\u6613\u9519\u3002\n\n1.\u8bfb\u5165\u77e9\u9635\n\n2.\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u56fe\u50cf\uff08\u5373\u77e9\u9635\u4e2d\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u5b57\u6bcd\uff09\uff0c\u5e76\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n3.t\u8868\u793a\u6709\u51e0\u5f20\u56fe\u50cf\uff0c\u4ece1~t\u679a\u4e3e\u51fa\u538b\u5728\u7b2ci\u5f20\u56fe\u50cf\u4e0a\u9762\u7684\u56fe\u50cf\uff08x\uff09\uff0c\u6784\u6210\u62d3\u6251\u7ed3\u6784\uff0c\u5373i\u662fx\u7684\u5165\u5ea6\uff0c\u5fc5\u987b\u6709i\u624d\u6709x\n\n4.\u505a\u4e00\u904ddfs,\u641c\u51fa\u6240\u6709\u7684\u53ef\u80fd\uff1a\n\n   \u2460\u679a\u4e3e\u5f53\u524d\u6ca1\u6709\u5165\u5ea6\u7684\u8282\u70b9\uff08\u4ee3\u7801\u4e2d\u662ff[i]==0\uff09\uff0c\u5c06\u5b83\u52a0\u5165\u7b54\u6848\uff0c\u6807\u8bb0\u5df2\u4f7f\u7528\n   \n   \u2461\u5c06\u4ee5i\u4e3a\u5165\u5ea6\u7684\u70b9\u7684f\u51cf\u4e00\uff0c\n   \n   \u2462\u91cd\u590d\u2460,\u2461\n   \n\n\u4ee3\u7801\u4e0a\u6709\u6ce8\u91ca\uff0c\u6613\u61c2\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define INF 100\nusing namespace std ;\nchar a[31][31],x[31] ;//x\u4ee3\u8868 \u7b2ci\u53f7\u662f\u5b57\u6bcdc \nint y['Z'] ; // \u5b57\u6bcdc\u662f\u7b2ci\u53f7 \nint t=0 ;//\u6709\u51e0\u4e2a\u4e0d\u540c\u7684\u5b57\u6bcd \nint f[31] ;//\u56fe\u50cfi\u4e0b\u9762\u538b\u7740\u591a\u5c11\u4e2a\u56fe\u50cf \nint sum[31] ;//\u8868\u793ai\u4e0a\u9762\u538b\u7740\u51e0\u5f20\u56fe\u7247\u3002\u62d3\u6251\u6392\u5e8f\u540e\u9762\u597d\u5220 \nint b[31][31] ;//\u8868\u793ai\u4e0a\u9762\u538b\u7684\u7b2cj\u5f20\u56fe\u50cf\u662fx \nchar ans[100] ;//\u4e00\u4e2a\u7b54\u6848\u4e32 \nint vis[31] ;//\u5f53\u524d\u5b57\u6bcd\u662f\u5426\u5728\u641c\u7d22\u4e2d\u5df2\u7ecf\u51fa\u73b0\u8fc7 \nint h[31][31] ;//\u8868\u793ai\u4e0a\u9762\u662f\u5426\u5df2\u7ecf\u641c\u7d22\u5230j\u5728i\u4e0a\u9762 \nint n,m ;\nint hash['Z'] ;\nvoid dfs(int k,int val)\n{\n\tif (k==t) //\u5df2\u7ecf\u679a\u4e3e\u8fc7\u4e86t\u4e2a\u56fe\u50cf \n\t{\n\t\tfor (int i=1;i<=t;i++) printf(\"%c\",ans[i]) ;\n\t\tprintf(\"\\n\") ;\n\t\treturn ; \n\t}\n\tfor (int i=1;i<=t;i++)\n\t{\n\t\tif (f[i]==0 && !vis[i]) //\u5165\u5ea6\u4e3a0 \u4e14\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n\t\t{\n\t\t\tvis[i]=1 ;\n\t\t\tans[k+1]=x[i] ;\n\t\t\tfor (int j=1;j<=sum[i];j++)\n\t\t\tf[b[i][j]]-- ;\n\t\t\tdfs(k+1,i) ;//dfs(i,j)\u8868\u793a\u521a\u521a\u5b9a\u4e0b\u7b2cj\u4e2a\u4f4d\u7f6e\u653ei \n\t\t\tfor (int j=1;j<=sum[i];j++)\n\t\t\tf[b[i][j]]++ ;\n\t\t\tvis[i]=0 ;\n\t\t}\n\t}\n\t//\u9898\u76ee\u5df2\u4fdd\u8bc1\u8bfb\u5165\u6570\u636e\u5408\u6cd5\uff0c\u4e0d\u7528\u62c5\u5fc3\u6ca1\u6709\u7b54\u6848 \n\treturn ;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m) ;\n\tfor(int i=0;i<n;i++)  //\u8bfb\u5165\u77e9\u9635 \n    {  \n        scanf(\"\\n\");  \n        for(int j=0;j<m;j++)  \n        {  \n        \tscanf(\"%c\",&a[i][j]);  \n        }\n    } \n\tfor (int i=0;i<n;i++) \n\tfor (int j=0;j<m;j++){\n\t\tchar c=a[i][j] ; \n\t\tif (!hash[c] && isalpha(c)){ //\u5f53\u524d\u5b57\u6bcd\u65b0\u51fa\u73b0  \n\t\t\tx[++t]=c ;//x \u7b2ci\u53f7\u662f\u5b57\u6bcdc \n\t\t\thash[c]++ ;\n\t\t} \n\t}\n\tfor (int i=1;i<=t;i++) //\u6392\u6210\u5b57\u5178\u5e8f \n\tfor (int j=i+1;j<=t;j++)\n\tif (x[i]>x[j]){\n\t\tchar tmp=x[i];x[i]=x[j];x[j]=tmp ;\n\t}\n\tfor (int i=1;i<=t;i++) //\u5b57\u6bcdc\u662f\u7b2ci\u53f7 \n\t{\n\t\ty[x[i]]=i ;\n\t}\n\tfor (int k=1;k<=t;k++) //\u679a\u4e3et\u5f20\u56fe \n\t{\n\t\tint minx=INF,maxx=-INF,miny=INF,maxy=-INF ;\n\t\tfor (int i=0;i<n;i++) //\u56fe\u50cf\u7684\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u77e5\u9053minx,maxx,miny,maxy \n\t\tfor (int j=0;j<m;j++){\n\t\t\tif (a[i][j]==x[k]){\n\t\t\t\tminx=min(minx,i);miny=min(miny,j);\n\t\t\t\tmaxx=max(maxx,i);maxy=max(maxy,j);\n\t\t\t}\n\t\t}\n\t\tint i=maxx ;\n\t\tfor (int j=miny+1;j<=maxy-1;j++){\n\t\t\tif (a[i][j]!=x[k] && !h[k][y[a[i][j]]]){ //B\u5411A\u8fde\u8fb9\n\t\t\t\tb[k][++sum[k]]=y[a[i][j]];//\u62d3\u6251\u6392\u5e8f,\u8868\u793a\u56fe\u50cfb(a[i][j])\u7684\u4e0b\u9762\u6709\u56fe\u50cfa(x[k])  \n\t\t\t\tf[y[a[i][j]]]++; //\u56fe\u50cfb\u7684\u524d+1\t\n\t\t\t\th[k][y[a[i][j]]]=1 ;//\u5224\u91cd \n\t\t\t} \n\t\t}\n\t\ti=minx ;\n\t\tfor (int j=miny+1;j<=maxy-1;j++){\n\t\t\tif (a[i][j]!=x[k] && !h[k][y[a[i][j]]]){\n\t\t\t\tb[k][++sum[k]]=y[a[i][j]];\n\t\t\t\th[k][y[a[i][j]]]=1 ;\n\t\t\t\tf[y[a[i][j]]]++;\n\t\t\t}\n\t\t} \n\t\tint j=maxy ;\n\t\tfor (int i=minx;i<=maxx;i++){\n\t\t\tif (a[i][j]!=x[k] && !h[k][y[a[i][j]]]){\n\t\t\t\tb[k][++sum[k]]=y[a[i][j]];\n\t\t\t\tf[y[a[i][j]]]++;\n\t\t\t\th[k][y[a[i][j]]]=1 ;\n\t\t\t}\n\t\t}\n\t\tj=miny ;\n\t\tfor (int i=minx;i<=maxx;i++){\n\t\t\tif (a[i][j]!=x[k] && !h[k][y[a[i][j]]]){\n\t\t\t\tb[k][++sum[k]]=y[a[i][j]];\n\t\t\t\tf[y[a[i][j]]]++;\n\t\t\t\th[k][y[a[i][j]]]=1 ;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=1;i<=t;i++) \n\tif (f[i]==0) //\u5165\u5ea6\u4e3a0\u7684\u70b9 \n\t{\n\t\tvis[i]=1;\n\t\tans[1]=x[i] ;\n\t\tfor (int j=1;j<=sum[i];j++)\n\t\tf[b[i][j]]-- ;\n\t\tdfs(1,i) ;//dfs(i,j)\u8868\u793a\u521a\u521a\u5b9a\u4e0b\u7b2cj\u4e2a\u4f4d\u7f6e\u653ei \n\t\tfor (int j=1;j<=sum[i];j++) //\u6e05\u6807\u8bb0 \n\t\tf[b[i][j]]++ ;\n\t\tvis[i]=0 ;\n\t} \n\t return 0 ;\n}\n```",
        "postTime": 1518595370,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "#\u7206\u641c\u5373\u53ef\n\n###\u539f\u56e0\n\n\u9898\u76ee\u4e2d\u8bf4\u201c\u77e9\u5f62\u7684\u6bcf\u6761\u8fb9\u4e2d\uff0c\u81f3\u5c11\u6709\u4e00\u90e8\u5206\u662f\u53ef\u89c1\u7684\u3002\u6ce8\u610f\uff0c\u4e00\u4e2a\u89d2\u540c\u65f6\u5c5e\u4e8e\u4e24\u6761\u8fb9\u3002\u201c\n\n\u8fd9\u5c31\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55\u540c\u4e00\u4e2a\u77e9\u5f62\u4e2d\u5b57\u6bcd\u7684\u6700\u5927x\u5750\u6807\u3001\u6700\u5927y\u5750\u6807\u3001\u6700\u5c0fx\u5750\u6807\u3001\u6700\u5c0fy\u5750\u6807\u6765\u83b7\u5f97\u77e9\u5f62\u7684\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u7684\u5750\u6807\n\n\u63a5\u7740\uff0c\u7531\u9898\u610f\u6211\u4eec\u53ef\u77e5\u7b26\u5408\u7684\u65b9\u6848\u53ef\u80fd\u4e0d\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5dfs\uff08bfs\u4e5f\u884c\uff09\n\n###\u5b9e\u73b0\n\n\u6bcf\u6b21dfs\u65f6\uff0c\u5bfb\u627e\u5f53\u524d\u201c\u5b8c\u6574\u201d\u7684\u77e9\u5f62\uff08\u201c\u5b8c\u6574\u201d\u662f\u6307\u77e9\u5f62\u7684\u5404\u6761\u8fb9\u90fd\u6ca1\u6709\u88ab\u5176\u5b83\u8fd8\u6ca1\u88ab\u6d88\u9664\u7684\u77e9\u5f62\u6321\u4f4f\uff09\uff0c\u7136\u540e\u53bb\u6389\u8fd9\u4e2a\u77e9\u5f62\uff0c\u7ee7\u7eed\u9012\u5f52\n\n###\u7ec6\u8282\n\n-\u6d88\u9664\u77e9\u5f62\uff1a\u628a\u8981\u6d88\u9664\u7684\u77e9\u5f62\u5404\u8fb9\u90fd\u8bbe\u6210\u7a7a\u767d\uff08\u5c31\u662f\".\"\uff09\u5373\u53ef\n\n###\u4f18\u5316\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\uff0c\u7136\u540e\u5728\u56fe\u4e0a\u8dd1dfs\uff0c\u8fd9\u6837\u5c31\u80fd\u66f4\u5feb\u7684AC\u4e86\n\n\uff08\u4f46\u5176\u5b9e\u7206\u641c\u5c31\u633a\u5feb\u4e86\uff0c\u624d44ms\uff09\n\n###\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define INF ((int)(1e9))\n#define LINF ((ll)(1e18))\n#define pb push_back\n#define mp make_pair\n#define ll long long\n#define _tp template\n#define _tyn typename\n#define ull unsigned ll\n#define pii pair<int,int>\n#define uint unsigned int\n#define ms(_data) memset(_data,0,sizeof(_data))\n#define fin(_filename) freopen(_filename,\"r\",stdin)\n#define fout(_filename) freopen(_filename,\"w\",stdout)\n#define msn(_data,_num) memset(_data,_num,sizeof(_data))\nusing namespace std;\n_tp<_tyn T>void mymax( T &_a , T _b ){ if( _a < _b ) _a = _b; }\n_tp<_tyn T>void mymin( T &_a , T _b ){ if( _a > _b ) _a = _b; }\nint getnum(){\n    char ch = '.';\n    int fu = 1;\n    while( ch < '0'  ||  ch > '9' ){\n        ch = getchar();\n        if( ch == '-' ) fu = -1;\n    }\n    int ret = 0;\n    while( ch >= '0'  &&  ch <= '9' ){\n        ret = ret * 10 + (ch-'0');\n        ch = getchar();\n    }\n    return ret;\n}\nchar getlet(){\n    char ch = '%';\n    while( ( ch < 'A'  ||  ch > 'Z' )  &&  ch != '.' ) ch = getchar();\n    return ch;\n}\nvoid read( int &x, int &y ){\n    x = getnum(); y = getnum();\n}\nvoid read( char &c ){\n    c = getlet();\n}\n/////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////\n#define MAXN 40\nstruct Pos{\n    int y,x;\n    Pos(){}\n    Pos( int yy , int xx ){\n        y = yy;\n        x = xx;\n    }\n};\nint n,m;\nint data[MAXN][MAXN];\nPos ld[MAXN],ur[MAXN];\nbool exist[MAXN];\n\n//\u68c0\u6d4b\u4e00\u4e2a\u77e9\u5f62\u662f\u5426\u5b8c\u6574\nbool test( int x ){\n    for( int i = ld[x].x ; i <= ur[x].x ; i++ ){\n        if( data[ld[x].y][i] != x  &&  data[ld[x].y][i] != -1 ) return 0;\n        if( data[ur[x].y][i] != x  &&  data[ur[x].y][i] != -1 ) return 0;\n    }\n    for( int i = ur[x].y ; i <= ld[x].y ; i++ ){\n        if( data[i][ld[x].x] != x  &&  data[i][ld[x].x] != -1 ) return 0;\n        if( data[i][ur[x].x] != x  &&  data[i][ur[x].x] != -1 ) return 0;\n    }\n    return 1;\n}\n//\u6d88\u9664\u4e00\u4e2a\u77e9\u5f62\nvoid seton( int x , int a ){\n    for( int i = ld[x].x ; i <= ur[x].x ; i++ ){\n        data[ld[x].y][i] = a;\n        data[ur[x].y][i] = a;\n    }\n    for( int i = ur[x].y ; i <= ld[x].y ; i++ ){\n        data[i][ld[x].x] = a;\n        data[i][ur[x].x] = a;\n    }\n}\n\nvector<string> ans;\nvoid dfs( string now ){\n    bool gao = 0;\n    for( int i = 0 ; i < 26 ; i++ ){\n        if( !exist[i] ) continue;\n        if( !test(i) ) continue;\n        gao = 1;\n        exist[i] = 0;\n        int ls[MAXN][MAXN];\n        memcpy(ls,data,sizeof(ls));\n        seton(i,-1);\n        dfs( now + (char)(i+'A') );\n        memcpy(data,ls,sizeof(data));\n        exist[i] = 1;\n    }\n    if( gao ) return;\n    reverse(now.begin(),now.end());\n    ans.pb(now);\n}\nint main(){\n    //fin(\"frameup.in\");\n    //fout(\"frameup.out\");\n    for( int i = 0 ; i < 26 ; i++ ){\n        ld[i].y = 0; ld[i].x = INF;\n        ur[i].y = INF; ur[i].x = 0;\n    }\n    msn(data,-1);\n    ms(exist);\n\n    read(n,m);\n    for( int i = 1 ; i <= n ; i++ ){\n        for( int j = 1 ; j <= m ; j++ ){\n            char c; read(c);\n            if( c == '.' ) continue;\n            data[i][j] = c-'A';\n            exist[data[i][j]] = 1;\n                       //\u8bb0\u5f55\u77e9\u5f62\u5de6\u4e0b\u89d2\u3001\u53f3\u4e0a\u89d2\u5750\u6807\n            mymax( ld[data[i][j]].y , i );\n            mymin( ld[data[i][j]].x , j );\n            mymin( ur[data[i][j]].y , i );\n            mymax( ur[data[i][j]].x , j );\n        }\n    }\n\n    dfs(\"\");\n\n        //\u6574\u7406\u7b54\u6848\n    sort(ans.begin(),ans.end());\n    for( uint i = 0 ; i < ans.size() ; i++ )\n        cout << ans[i] << endl;\n\n    return 0;\n}\n```",
        "postTime": 1511696793,
        "uid": 25630,
        "name": "interestingLSY",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "    \n```cpp\n//\u672c\u849f\u84bb\u6ca1\u7528\u4ec0\u4e48\u62d3\u8865\u6392\u5e8f\uff0c\u6b64\u9898\u7206\u641c\u5373\u53ef\n//\u8ba9\u6211\u6765\u4e00\u53d1\u7b2c\u4e8c\u5feb\u6700\u660e\u4e86\u7684\u4ee3\u7801\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\n#define rep(i,a,b) for(i=(a);i>=(b);--i)\n#define ll long long\n#define inf 999999999\n#define mm(a,b) memset(a,b,sizeof(a))\nusing namespace std;\nint read(){\n    int sum = 0,fg = 1;\n    char c = getchar();\n    while(c < '0' || c > '9'){if (c == '-')fg = -1;c = getchar();}\n    while(c >='0' && c <='9')sum = sum *10 + c-'0',c = getchar();\n    return sum * fg;\n}\nint minn(int x,int y){return x < y ? x : y;}\nint maxx(int x,int y){return x < y ? y : x;}\nint n,m,all;\nchar s[40][40];\nchar ss[40];\nstruct node{\n    int l ,up ,r ,down;//\u8bb0\u5f55\u8fd9\u4e2a\u5b57\u6bcd\u77e9\u9635\u7684\u6700\u4e0a\u3001\u4e0b\u7684\u6a2a\u5750\u6807\uff0c\u6700\u5de6\u3001\u53f3\u7684\u7eb5\u5750\u6807\n    node(){\n        l = inf,r = 0,up = inf,down = 0;\n    }\n};\nconst int maxn = 100010;\nnode a[30];\nbool p[30] ,vis[30];//p\u6570\u7ec4\u8bb0\u5f55\u67d0\u4e2a\u5b57\u6bcd\u662f\u5426\u5728\u77e9\u9635\u4e2d\u51fa\u73b0,vis\u6570\u7ec4\u8bb0\u5f55\u67d0\u4e2a\u5b57\u6bcd\u7684\u56fe\u50cf\u662f\u5426\u5df2\u91cd\u53e0\u4e0a\u53bb\nint map[30][30], road[30];//map[i][j]=1\u8868\u793a\u8981\u91cd\u53e0j\u77e9\u9635\uff0c\u5c31\u8981\u5148\u91cd\u53e0i\u77e9\u9635\nvoid dfs(int h, int tot){//h\u4e3a\u5f53\u524d\u653e\u54ea\u4e2a\u5b57\u6bcd\u7684\u56fe\u50cf\uff0ctot\u4e3a\u5df2\u653e\u4e86\u51e0\u4e2a\u56fe\u50cf\n    int i;road[tot] = h;\n    For(i,1,26){\n        if(p[i]){\n            if(map[i][h] && !vis[i]){//\u6613\u5f97\u5982\u679c\u4e00\u4e2a\u56fe\u50cf\u82e5\u8fd8\u672a\u91cd\u53e0&&\u5728\u91cd\u53e0\u5f53\u524d\u56fe\u50cf\u4e4b\u524d\u8981\u5148\u91cd\u53e0i\u5b57\u6bcd\u7684\u56fe\u50cf\uff0c\u5219\u4e0d\u6210\u7acb\n                return;\n            }\n        }\n    }\n    if(tot == all){\n        For(i,1,tot){\n            printf(\"%c\",road[i] - 1 + 'A');//\u7531\u4e8e\u662f\u5b57\u5178\u5e8f\uff0c\u641c\u5230\u4e00\u4e2a\u5c31\u8f93\u51fa\u4e00\u4e2a\n        }\n        printf(\"\\n\");\n        return;\n    }\n    For(i,1,26){\n        if(!p[i] || i == h)continue;\n        if((map[h][i] && !vis[i]) || (!map[h][i] && !vis[i])){//\u4e0b\u4e00\u4e2a\u8981\u91cd\u53e0\u7684\u56fe\u50cf\u53ef\u80fd\u662f\u8981\u5728\u81ea\u5df1\u4e4b\u540e\u91cd\u53e0\u7684\uff0c\u4e5f\u53ef\u80fd\u662f\u548c\u81ea\u5df1\u6446\u653e\u987a\u5e8f\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\u7684\n            vis[i] = 1;\n            dfs(i,tot + 1);\n            vis[i] = 0;\n        }\n    }\n}\nint main(){\n    int i,j;\n    n = read(), m = read();\n    For(i,1,n){\n        scanf(\"%s\", ss+1);\n        For(j,1,m){\n            s[i][j] = ss[j];\n            if(ss[j] > 'Z' || ss[j] < 'A')continue;\n            int tmp = ss[j] - 'A' + 1;//\u628a\u5b57\u6bcd\u8f6c\u5316\u4e3a\u6570\u5b57\n            if(!p[tmp])p[tmp] = 1,++all;\n            a[tmp].l = minn(a[tmp].l , j);//\u4e0a\u9762\u8bf4\u4e86\n            a[tmp].r = maxx(a[tmp].r , j);\n            a[tmp].up = minn(a[tmp].up , i);\n            a[tmp].down = maxx(a[tmp].down , i);\n        }\n    }\n    For(i,1,26){\n        if(p[i]){\n            int x = a[i].up;\n            For(j,a[i].l,a[i].r){//\u4ee5\u4e0b\u8fd9\u4e9b\u5197\u6742\u7684\u4ee3\u7801\u4ec5\u4ec5\u662f\u4e3a\u4e86\u904d\u5386\u6574\u4e2a\u77e9\u9635\uff0c\u786e\u7acb\u4e24\u4e2a\u5b57\u6bcd\u56fe\u50cf\u4e4b\u95f4\u7684\u5173\u7cfb\n                int tmp = s[x][j] - 'A' + 1;\n                if(tmp != i){//\u82e5\u5728i\u7684\u77e9\u9635\u4e2d\u5374\u4e0d\u662fi\u5b57\u6bcd\uff0c\u5219\u5fc5\u5b9a\u5728i\u56fe\u50cf\u4e4b\u540e\u91cd\u53e0\n                    map[i][tmp] = 1;\n                }\n            }\n            x = a[i].down;\n            For(j,a[i].l,a[i].r){\n                int tmp = s[x][j] - 'A' + 1;\n                if(tmp != i){\n                    map[i][tmp] = 1;\n                }\n            }\n            x = a[i].l;\n            For(j,a[i].up,a[i].down){\n                int tmp = s[j][x] - 'A' + 1;\n                if(tmp != i){\n                    map[i][tmp] = 1;\n                }\n            }\n            x = a[i].r;\n            For(j,a[i].up,a[i].down){\n                int tmp = s[j][x] - 'A' + 1;\n                if(tmp != i){\n                    map[i][tmp] = 1;\n                }\n            }\n        }\n    }\n    For(i,1,26){\n        if(p[i]){\n            mm(vis,0);\n            vis[i] = 1;\n            dfs(i, 1);\n        }\n    }\n    return 0;\n}\n//THE END\n```",
        "postTime": 1494934894,
        "uid": 18421,
        "name": "ergeda",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P2741)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f88\u5bb9\u6613\u770b\u51fa\u6765\uff0c\u8fd9\u9053\u9898\u662f\u62d3\u6251\u6392\u5e8f\u7684\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u626b\u63cf\u4e00\u4e2a\u77e9\u5f62$a$\u7684\u8fb9\uff0c\u5982\u679c\u53d1\u73b0\u4e0a\u9762\u6709\u77e9\u5f62$b$\u7684\u4ee3\u8868\u5b57\u6bcd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u5b9a$b$\u7684\u987a\u5e8f\u5728$a$\u4e4b\u540e\uff0c\u4ece$b$\u5411$a$\u8fde\u4e00\u6761\u8fb9\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a$DAG$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u8fc7\uff0c\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u6240\u6709\u7684\u987a\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u8dd1\u62d3\u6251\u5e8f\u7684\u65f6\u5019\u5f97\u7528$DFS$\uff0c\u6bcf\u6b21\u4ece\u6574\u4e2a\u56fe\u4e2d\u9009\u62e9\u4e00\u4e2a\u5165\u5ea6\u4e3a$0$\u7684\u70b9\u8fdb\u884c\u4e0b\u4e00\u6b21\u641c\u7d22\uff0c\u800c\u4e0d\u662f\u7528\u961f\u5217\u5934\u7684\u70b9\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u53e6\u5916\uff0c\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u8fde\u8fb9\uff0c\u5f97\u5230\u7684\u987a\u5e8f\u662f\u53cd\u5e8f\uff0c\u603b\u4e4b\u5f97\u5728\u6392\u5e8f\u4e4b\u524d\u628a\u987a\u5e8f\u8c03\u6574\u6b63\u786e\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5176\u4ed6\u7684\u770b\u4ee3\u7801\u3002  \n# \u4ee3\u7801\n```cpp\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXH = 305, MAXW = 35, MAXSIZ = 30;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\nstruct edge\n{\n\tint to, nxt;\n}Graph[MAXSIZ * MAXSIZ / 2];\n\nstruct circle\n{\n\tint lx, ly, rx, ry;\n\tcircle()\n\t{\n\t\tlx = ly = 10005;\n\t\trx = ry = -1;\n\t}\n}a[MAXSIZ];\n\nvector<string> res;\n\nint dir[4][2] = { { -1, 0 }, { 1, 0 }, { 0, -1 }, { 0, 1 } };\nint head[MAXSIZ], into[MAXSIZ];\nint mp[135];\nchar remp[MAXSIZ], tmp[MAXSIZ];\nchar board[MAXH][MAXW];\nint H, W, cnt, tot;\nbool used[MAXSIZ] = {};\n\nvoid addEdge( const int from, const int to )\n{\n\tcnt ++;\n\tGraph[cnt].to = to;\n\tGraph[cnt].nxt = head[from];\n\tinto[to] ++;\n\thead[from] = cnt;\n}\n\nstring trans( const char* str )\n{\n\tstring ans = \"\";\n\tfor( int i = tot ; i >= 1 ; i -- )\n\t{\n\t\tans.push_back( str[i] );\n\t}\n\treturn ans;\n}\n\nvoid DFS( const int dep )\n{\n\tif( dep > tot )\n\t{\n\t\tres.push_back( trans( tmp ) );\n\t\treturn;\n\t}\n\tfor( int i = 1 ; i <= tot ; i ++ )\n\t{\n\t\tif( ! used[i] && ! into[i] )\n\t\t{\n\t\t\tused[i] = true;\n\t\t\tfor( int j = head[i] ; j ; j = Graph[j].nxt )\n\t\t\t{\n\t\t\t\tinto[Graph[j].to] --;\n\t\t\t}\n\t\t\ttmp[dep] = remp[i];\n\t\t\tDFS( dep + 1 );\n\t\t\tused[i] = false;\n\t\t\tfor( int j = head[i] ; j ; j = Graph[j].nxt )\n\t\t\t{\n\t\t\t\tinto[Graph[j].to] ++;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint indx;\n\tread( H ), read( W );\n\tfor( int i = 1 ; i <= H ; i ++ )\n\t{\n\t\tscanf( \"%s\", board[i] + 1 );\n\t\tfor( int j = 1 ; j <= W ; j ++ )\n\t\t{\n\t\t\tif( 'A' <= board[i][j] && board[i][j] <= 'Z' && ! mp[board[i][j]] )\n\t\t\t{\n\t\t\t\tmp[board[i][j]] = ++tot;\n\t\t\t\tremp[tot] = board[i][j];\n\t\t\t}\n\t\t\tindx = mp[board[i][j]];\n\t\t\ta[indx].lx = MIN( a[indx].lx, i );\n\t\t\ta[indx].ly = MIN( a[indx].ly, j );\n\t\t\ta[indx].rx = MAX( a[indx].rx, i );\n\t\t\ta[indx].ry = MAX( a[indx].ry, j );\n\t\t}\n\t}\n\tfor( int i = 1 ; i <= tot ; i ++ )\n\t{\n\t\tfor( int j = a[i].lx ; j <= a[i].rx ; j ++ )\n\t\t{\n\t\t\tindx = mp[board[j][a[i].ly]];\n\t\t\tif( indx ^ i ) addEdge( indx, i );\n\t\t\tindx = mp[board[j][a[i].ry]];\n\t\t\tif( indx ^ i ) addEdge( indx, i );\n\t\t}\n\t\tfor( int j = a[i].ly ; j <= a[i].ry ; j ++ )\n\t\t{\n\t\t\tindx = mp[board[a[i].lx][j]];\n\t\t\tif( indx ^ i ) addEdge( indx, i );\n\t\t\tindx = mp[board[a[i].rx][j]];\n\t\t\tif( indx ^ i ) addEdge( indx, i );\n\t\t}\n\t}\n\tDFS( 1 );\n\tios :: sync_with_stdio( false );\n\tsort( res.begin(), res.end() );\n\tfor( int i = 0 ; i < res.size() ; i ++ )\n\t{\n\t\tcout << res[i] << endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1565591185,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[P2741][USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up"
    },
    {
        "content": "\u5224\u65ad\u6bcf\u4e2a\u77e9\u5f62\u7684\u5bf9\u89d2\u4f4d\u7f6e\u5373\u53ef\u786e\u5b9a\u77e9\u5f62\uff0c\u518d\u5224\u65ad\u91cd\u53e0\u5173\u7cfb\u3002\u4ece\u6df1\u5ea6\u5c0f\u7684\u5411\u6df1\u5ea6\u5927\u7684\u5efa\u8fb9\uff0c\u6700\u540e\u62d3\u6251\u6392\u5e8f\u5373\u53ef\u3002\n\n\u672c\u9898\u7684\u96be\u5ea6\u5e76\u4e0d\u5728\u4e8e\u62d3\u6251\u6392\u5e8f\uff0c\u8fd9\u4e2a\u6392\u5e8f\u53ea\u662f\u6700\u7b80\u5355\u7684\u6a21\u7248\u3002\u672c\u9898\u96be\u5ea6\u4e3b\u8981\u5728\u4e8e\u5224\u65ad\u77e9\u5f62\u8986\u76d6\u5173\u7cfb\u3002\u540c\u65f6\u9700\u8981\u7406\u89e3\u5e76\u8fd0\u7528\u5982\u4f55\u4f7f\u7528\u4e24\u4e2a\u70b9\u6765\u786e\u5b9a\u4e00\u4e2a\u77e9\u5f62\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```c\n#pragma GCC optimize(200000)\n#include<iostream>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nstruct das {\n\tint x1,x2,y1,y2;\n} f[102];\nint map[102][102],a,b,c,rd[102],d,e[102][102],g,m,n,ans[102];\nchar t;\nbool p,v[102],z[102];\nvoid dfs(int x) {\n\tbool h[102]= {0};\n\tans[++ans[0]]=x;\n\tv[x]=1;\n\tif(ans[0]==g) {\n\t\tfor(int i=1; i<=ans[0]; i++)putchar(ans[i]+'A'-1);\n\t\tputchar('\\n');\n\t} else {\n\t\tfor(int i=1; i<=a; i++) {\n \n\t\t\tif(e[x][i]) {\n\t\t\t\trd[i]--;\n\t\t\t\th[i]=1;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1; i<=a; i++)\tif(rd[i]==0&&!v[i])dfs(i);\n \n\t\tfor(int i=1; i<=a; i++)if(h[i])rd[i]++;\n\t}\n\tans[0]--;\n\tv[x]=0;\n}\nint main() {\n\tcin>>m>>n;\n\tfor(int i=1; i<=m; i++) {\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tcin>>t;\n\t\t\tif(t=='.')map[i][j]=0;\n\t\t\telse {\n\t\t\t\tmap[i][j]=t-'A'+1;\n\t\t\t\tif(!z[map[i][j]])z[map[i][j]]=1,g++;\n\t\t\t}\n\t\t\ta=max(a,map[i][j]);\n\t\t}\n\t}\n\tfor(int i=1; i<=a; i++)f[i].x1=f[i].y1=0x7fffffff;\n\tfor(int i=1; i<=m; i++) {\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tif(map[i][j]) {\n\t\t\t\tif(i<f[map[i][j]].x1)f[map[i][j]].x1=i;\n\t\t\t\tif(i>f[map[i][j]].x2)f[map[i][j]].x2=i;\n\t\t\t\tif(j<f[map[i][j]].y1)f[map[i][j]].y1=j;\n\t\t\t\tif(j>f[map[i][j]].y2)f[map[i][j]].y2=j;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1; i<=a; i++) {\n\t\tfor(int k=f[i].x1; k<=f[i].x2; k++) {\n\t\t\tif(map[k][f[i].y1]!=i&&!e[i][map[k][f[i].y1]])e[i][map[k][f[i].y1]]=1;\n\t\t\tif(map[k][f[i].y2]!=i&&!e[i][map[k][f[i].y2]])e[i][map[k][f[i].y2]]=1;\n\t\t}\n\t\tfor(int k=f[i].y1; k<=f[i].y2; k++) {\n\t\t\tif(map[f[i].x1][k]!=i&&!e[i][map[f[i].x1][k]])e[i][map[f[i].x1][k]]=1;\n\t\t\tif(map[f[i].x2][k]!=i&&!e[i][map[f[i].x2][k]])e[i][map[f[i].x2][k]]=1;\n\t\t}\n\t}\n\tfor(int i=1; i<=a; i++) {\n\t\tfor(int j=1; j<=a; j++) {\n\t\t\tif(!z[i])rd[i]=-1;\n\t\t\tif(e[i][j]==1) {\n\t\t\t\trd[j]++;\n\t\t\t}\n\t\t}\t}\n\t\tfor(int i=1; i<=a; i++) {\n\t\t\tif(rd[i]==0) {\n\t\t\t\tv[i]=1;\n\t\t\t\tdfs(i);\n\t\t\t}\n\t\t}\n \n}\n```\n",
        "postTime": 1559457815,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "#\u6ca1\u6709\u7528\u5230\u62d3\u6251\u6392\u5e8f~~\uff08\u4e5f\u4e0d\u4f1a\u7528\uff09~~,bfsAC\u6ca1\u62a5\u65f6\u95f4\uff0c\u53ea\u662f\u4ee3\u7801\u6709\u70b9\u957f\n\n\n\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;//\u6d41\u64cd\u4f5c\u547d\u540d\u7a7a\u95f4 \nchar mp[35][35];//\u5730\u56fe \nbool lt[30],gt[30],ud[30];\n//lt\u51fa\u73b0\u5b57\u6bcd//gt\u8be5\u5b57\u6bcd\u662f\u5426\u5df2\u8fd1\u53ef\u4ee5\u89e3\u9501//ud\u8be5\u5b57\u6bcd\u662f\u5426\u5df2\u7ecf\u88ab\u89e3\u9501 \nint edge[30][4];//\u6bcf\u4e2a\u5b57\u6bcd\u6846\u7684\u56db\u4e2a\u8fb9 \nint a,b;//\u957f\u5bbd \nstring ans[10000];int pt=0;//\u7b54\u6848+\u6307\u9488//\u6392\u5e8f\u8f93\u51fa \n//\u7ed3\u6784\u4f53//bfs\u65f6\u4f20\u9012\u72b6\u6001 \nstruct node{\n    char  mp[35][35];\n    bool  gt[30];\n    bool  ud[30];//\u540c\u4e0a \n    char used[30];//\u8bb0\u5f55\u8fc7\u53bb\u89e3\u9501\u7684\u5b57\u6bcd \n    int point;\n    node(){\n        memset(mp,' ',sizeof(mp  ));\n        memset(gt, 0 ,sizeof(gt  ));\n        memset(ud, 0 ,sizeof(ud  ));\n        memset(used,0,sizeof(used));\n        point=0;//\u6784\u9020\u51fd\u6570 \n    }\n};\nqueue<node>que;//\u961f\u5217bfs\u7528 \n//\u5224\u65ad\u8be5\u72b6\u6001\u662f\u5426\u53ef\u4ee5\u8f93\u51fa\uff0c\u53ca\u662f\u5426\u5168\u90e8\u89e3\u9501 \nbool checkout(node nod){\n    for(int i=0;i<=25;i++)if(lt[i] xor nod.ud[i])return false;\n    return true;\n}\n//\u641c\u7d22\u8fd9\u4e2a\u5b57\u6bcd\u662f\u5426\u53ef\u4ee5\u89e3\u9501 \nbool search(node nod,int index){\n    for(int i=edge[index][0];i<=edge[index][1];i++){\n        int now1=nod.mp[i][edge[index][2]];\n        int now2=nod.mp[i][edge[index][3]];\n        if(now1!=(char)(index+65) and now1!='*')return false;\n        if(now2!=(char)(index+65) and now2!='*')return false;\n    }\n    for(int i=edge[index][2];i<=edge[index][3];i++){\n        int now1=nod.mp[edge[index][0]][i];\n        int now2=nod.mp[edge[index][1]][i];\n        if(now1!=(char)(index+65) and now1!='*')return false;\n        if(now2!=(char)(index+65) and now2!='*')return false;\n    }\n    return true;\n}\n//\u89e3\u9501\u8fd9\u4e2a\u5b57\u6bcd \nnode reclear(node nod,int index){\n    for(int i=edge[index][0];i<=edge[index][1];i++){\n        nod.mp[i][edge[index][2]]='*';\n        nod.mp[i][edge[index][3]]='*';\n    }\n    for(int i=edge[index][2];i<=edge[index][3];i++){\n        nod.mp[edge[index][0]][i]='*';\n        nod.mp[edge[index][1]][i]='*';\n    }\n    return nod;\n}\n//\u521d\u59cb\u5316\uff0c\u5bfb\u627elt\u4e0eedge \nvoid init(node nod){\n    for(int i=0;i<=a-1;i++)for(int j=0;j<=b-1;j++){\n        int now=nod.mp[i][j]-65;        if(now>=0 and now<=25){\n            if(lt[now])edge[now][1]=i;\n            else       edge[now][0]=i,lt[now]=true;\n        }\n    }\n    for(int i=0;i<=29;i++)lt[i]=false;\n    for(int i=0;i<=b-1;i++)for(int j=0;j<=a-1;j++){\n        int now=nod.mp[j][i]-65;\n        if(now>=0 and now<=25){\n            if(lt[now])edge[now][3]=i;\n            else       edge[now][2]=i,lt[now]=true;\n        }\n    }\n}\n//\u4e3b\u51fd\u6570//bfs \nint main(){\n    cin>>a>>b;\n    node all=*new node();\n    for(int i=0;i<=a-1;i++)cin>>all.mp[i];//\u8f93\u5165 \n    init(all);que.push(all);//\u521d\u59cb\u5316 \n    //bfs \n    while(!que.empty()){\n        node now=que.front();que.pop();\n        if(checkout(now)){\n            //\u5982\u679c\u5168\u90e8\u89e3\u9501\u6210\u529f,\u8bb0\u5f55used \n            for(int i=now.point-1;i>=0;i--)ans[pt]+=now.used[i];\n            pt++;\n            continue;\n        }\n        for(int i=0;i<=25;i++)if(lt[i] xor now.gt[i]){\n            //\u82e5\u679c\u8fd8\u6ca1\u89e3\u9501\uff0c\u5c31\u641c\u7d22\u662f\u5426\u53ef\u4ee5\u89e3\u9501 \n            if(search(now,i))now.gt[i]=true;\n        }\n        for(int i=25;i>=0;i--)if(now.gt[i] xor now.ud[i]){\n            //\u89e3\u9501\u6240\u6709\u53ef\u4ee5\u89e3\u9501\u7684//\u4f20\u9012\u72b6\u6001 \n            node next=now;\n            next.ud[i]=true;\n            next=reclear(next,i);\n            next.used[next.point++]=(char)(i+65);\n            que.push(next);\n        }\n    }\n    sort(ans,ans+pt);//\u6392\u5e8f\u8f93\u51fa \n    for(int i=0;i<=pt-1;i++)cout<<ans[i]<<\"\\n\";\n    return 0;\n}\n```",
        "postTime": 1507873421,
        "uid": 52934,
        "name": "Bzy_temp",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "[\u9898\u76ee\u7531\u6b64\u53bb](https://www.luogu.com.cn/problem/P2741)\n------------\n~~\u4e00\u9053\u975e\u5e38\u6076\u5fc3\u7684\u9898\u76ee\uff08~~\n\n\u4ee5\u4e0a\u4e3a\u611f\u53d7\n\n------------\n\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n$1.$ \u6709\u4e00\u5806\u4e2d\u7a7a\u7684\u77e9\u5f62\u6846\uff0c\u4e00\u4e2a\u6846\u7531\u4e00\u79cd\u5927\u5199\u5b57\u6bcd\u6784\u6210\u4e14\u4e00\u79cd\u5b57\u6bcd\u53ea\u51fa\u73b0\u4e00\u6b21 ~~\u3010\u770b\u5230\u5230\u8fd9\u513f\uff0c\u5c31\u6709\u70b9\u5f53\u521d\u521a\u5b66OI\u65f6\u7684\u4e00\u9053\u9898\u6709\u70b9\u50cf\uff08\u5927\u96fe\u5f25\u6f2b\u3011~~\u3002\n\n$2.$ \u8fd9\u4e9b\u6846\u5bbd\u4e3a$1$\uff0c\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u90fd\u81f3\u5c11$3$\u3002\n\n$3.$ \u6c42\u4ece\u5e95\u5c42\u81f3\u6700\u4e0a\u5c42\u7684\u6846\u987a\u5e8f\uff0c\u6709\u591a\u4e2a\u7b54\u6848\u5c31\u6309\u5b57\u5178\u5e8f\u8f93\u51fa\n\n------------\n### \u5206\u6790:\n\n\u518d\u770b\u5206\u6790\u4e4b\u524d\u8981\u5148\u4fdd\u8bc1\u56de$string$\u548c$char$\u7684\u4e00\u4e9b\u7528\u6cd5\u3002\n\n$First.$\u56e0\u4e3a\n\u201c${\\color{red}\\colorbox{blue}{\u4e00\u4e2a\u89d2\u540c\u65f6\u5c5e\u4e8e\u4e24\u6761\u8fb9}}$\u201d\uff0c\u4e8e\u662f\u6211\u4eec\u4fdd\u5b58\u6bcf\u4e2a\u77e9\u5f62\u7684\u5de6\u4e0a\u89d2\u5750\u6807\u4e0e\u53f3\u4e0b\u89d2\u5750\u6807\uff0c\u5c31\u786e\u5b9a\u4e86\u6574\u4e2a\u77e9\u5f62\u3002\n\n$Next.$\u53ef\u4ee5\u770b\u51fa\uff0c\u6700\u4e0a\u5c42\u7684\u77e9\u5f62\u662f\u5b8c\u6574\u7684\uff0c\u4e8e\u662f\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u672c\u9898\u7a81\u7834\u53e3\u3002\n\n\uff08\u4e00\uff09\u4ece\u4e0a\u5c42\u5f80\u5e95\u5c42\uff0c\u9010\u5c42\u641c\u7d22\u5b8c\u6574\u7684\u77e9\u5f62\n\n$1.$ \u6309\u5b57\u7b26\u4ece\u5927\u5230\u5c0f\u641c\u7d22\u77e9\u5f62\n\n$2.$ \u5f53\u8be5\u77e9\u5f62\u53ea\u542b \u201c . \u201d  $or$ \u8be5\u77e9\u5f62\u7684\u5b57\u6bcd\u65f6\uff0c\u5c31\u662f\u7b26\u5408\u9898\u610f\u7684\u3002\n\n$3.$ \u82e5\u77e9\u5f62\u7b26\u5408\u9898\u610f\uff0c\u5c31\u5c06\u5176\u5b57\u7b26\u653e\u5165\u6808\u4e2d\uff0c\u7136\u540e\u5168\u90e8\u53d8\u6210 \u201c . \u201d \uff0c \u5220\u9664\u8be5\u77e9\u5f62\n\n$4.$ ${\\color{red}DFS}$\uff1a\u5c06\u5f53\u5c42\u5220\u53bb\u7684\u77e9\u5f62\u6062\u590d\u6210\u5220\u524d\u7684\u6837\u5b50\uff0c\u6ce8\u610f\u4e0d\u662f\u6062\u590d\u6210\u8f93\u5165\u65f6\u7684\u6837\u5b50\u3002\n\n\n------------\n\u4e0a\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXX = 35;\nconst int INF = 0x7fffffff/2;\n\nstruct Nice {\n\tint x1 , y1 , x2 , y2;\n}tc[MAXX];\nint h , w , cnt , cntans;\nchar g[MAXX][MAXX] , c[MAXX] , ans[MAXX] , Ans[MAXX * MAXX][MAXX] , tp[MAXX];\nbool v[MAXX] , flag[MAXX];\nint dx[] = {1 , 0 , -1 , 0} , dy[] = {0 , 1 , 0 , -1};\n\nbool cmp(int a , int b) {\n\treturn a > b;\n}\n\nint Cmp(const void *a , const void *b) {\n\tchar *s1 = (char *)a , *s2 = (char *)b;\n\treturn strcmp(s1 , s2);\n}\n\nbool dfs(int x , int y , int xx , int yy) {\n\tif (x == tc[xx].x1 && y == tc[xx].y1 && yy == 3) {\n\t\tg[x][y] = '.';\n\t\treturn 1;\n\t}\n\tif (!(g[x][y] == '.' || g[x][y] - 'A' == xx)) {\n\t\treturn  0;\n\t}\n\tif (x == tc[xx].x2 && y == tc[xx].y1 ) {\n\t\tif (dfs(x , y + 1 , xx , yy + 1)) {\n\t\t\tg[x][y] = '.';\n\t\t\treturn 1;\n\t\t}\n\t\telse return 0;\n\t}\n\telse if (x == tc[xx].x2 && y == tc[xx].y2 ) {\n\t\tif (dfs(x - 1 , y , xx , yy + 1)) {\n\t\t\tg[x][y] = '.';\n\t\t\treturn 1;\n\t\t}\n\t\telse return 0;\n\t}\n\telse if (x == tc[xx].x1 && y == tc[xx].y2 ) {\n\t\tif (dfs(x , y - 1 , xx , yy + 1)) {\n\t\t\tg[x][y] = '.';\n\t\t\treturn 1;\n\t\t}\n\t\telse return 0;\n\t}\n\telse {\n\t\tif (dfs(x + dx[yy] , y + dy[yy] , xx , yy)) {\n\t\t\tg[x][y] = '.';\n\t\t\treturn 1;\n\t\t}\n\t\telse return 0;\n\t}\n}\n\nvoid work(int x , int y , int xx , int yy) {\n\tg[x][y] = xx + 'A';\n\tif(x == tc[xx].x1 && y == tc[xx].y1 && yy == 3) {\n\t\treturn;\n\t}\n\tif(x == tc[xx].x2 && y == tc[xx].y1) {\n\t\twork(x , y + 1 , xx , yy+1);\n\t}\n\telse if(x == tc[xx].x2 && y == tc[xx].y2) {\n\t\twork(x - 1 , y , xx , yy + 1);\n\t}\n\telse if(x == tc[xx].x1 && y == tc[xx].y2) {\n\t\twork(x , y - 1 , xx , yy + 1);\n\t}\n\telse {\n\t\twork(x + dx[yy] , y + dy[yy] , xx , yy);\n\t}\n}\n\nvoid DFS(int xi , int yi) {\n\tif (yi == cnt) {\n\t\tfor (int i=yi-1; i>=0; i-- ) {\n\t\t\ttp[yi - 1 - i] = ans[i];\n\t\t}\n\t\tmemcpy(Ans[cntans++ ] , tp , sizeof(tp));\n\t\treturn ;\n\t}\n\tfor (int i=1; i<=cnt; i++ ) {\n\t\tif (!flag[i] && dfs(tc[c[i]].x1 , tc[c[i]].y1 , c[i] , 0)) {\n\t\t\tflag[i] = 1;\n\t\t\tans[yi] = c[i] + 'A';\n\t\t\tDFS(i , yi + 1);\n\t\t\twork(tc[c[i]].x1 , tc[c[i]].y1 , c[i] , 0);\n\t\t\tflag[i] = 0;\n\t\t}\n\t}\n}\n\nvoid Work() {\n    for (int i=1; i<=h; i++) {\n    \tscanf(\"%s\",g[i] + 1);\n    \tfor(int j=1; j<=w; j++) {\n\t    \tif(g[i][j] != '.') {\n\t    \t\tint kkk=g[i][j] - 'A';\n\t    \t\tif(i < tc[kkk].x1 || j < tc[kkk].y1 ) {\n\t    \t\t\ttc[kkk].x1 = min(tc[kkk].x1 , i);\n\t\t\t\t\ttc[kkk].y1 = min(tc[kkk].y1 , j);\t    \t\t\t\n\t\t\t\t}\n\t    \t\tif(i > tc[kkk].x2 || j > tc[kkk].y2 ) {\n\t    \t\t\ttc[kkk].x2 = max(tc[kkk].x2 , i);\n\t\t\t\t\ttc[kkk].y2 = max(tc[kkk].y2 , j);\t    \t\t\t\n\t\t\t\t}\n\t    \t\tif(!v[kkk]) {\n\t    \t\t\tv[kkk] = 1;\n\t    \t\t\tc[++cnt] = kkk;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} \n}\n\nint main(void ) {\n\tscanf(\"%d %d\",&h,&w);\n\tfor (int i=0; i<26; i++ ) {\n\t\ttc[i].x1 = INF;\n\t\ttc[i].y1 = INF;\n\t\ttc[i].x2 = 0;\n\t\ttc[i].y2 = 0;\n\t}\n\tWork();\n\tsort(c + 1 , c + cnt + 1 , cmp);\n\tDFS(-1 , 0);\n\tqsort(Ans , cntans , sizeof(char)*55 , Cmp);\n\tfor (int i=0; i<cntans; i++ ) {\n\t\tcout << Ans[i];\n\t}\n}\n\n/*\nin:\n9 8\n.CCC....\nECBCBB..\nDCBCDB..\nDCCC.B..\nD.B.ABAA\nD.BBBB.A\nDDDDAD.A\nE...AAAA\nEEEEEE..\nout:\nEDABC\n*/  \n```\n \u6211\uff1a\u201cAC\uff01AC\uff01AC\uff01\u554a\u3002\u3002\u3002WA*\u8fd8RE\u3002\u201d\u5f88\u60e844\u5206\u3002\n\n \u5fc3\u60f3\uff1aRE\u6539\u6539\u5c31\u597d\u3002\u3002\u3002\u53ef\u662f\u6570\u7ec4\u5f00\u5927\u4e86RE\u7684\u70b9\u53c8\u53d8\u6210WA\u3002\u3002\u3002\n\nSo!\u6539\uff01\n\n\u7ecf\u8fc7\u601d\u8003\uff1a\u8c8c\u4f3c\u8981vector\u548cstack\u3002\n\n\u989d\u3002\u3002\u3002\u5728150\u591a\u884c\u7684\u4ee3\u7801\u4e2d\u52a0vector\u548cstack\u3002\u3002\u3002\u53ef\u6d77\u661f\u3002\n\n\u4e2d\u9014\u5bf9\u5c0f\u53f7\u79c1\u4fe1\u53d1\u6cc4\u3002\u3002\u3002~~\u5185\u5bb9\u4e3a\u3010\u6570\u636e\u5220\u9664\uff0c\u8bf7\u81ea\u884c\u60f3\u8c61|A|\u3011~~\n\n\u63d0\u51fa\u6211\u6700\u540e\u7684AC\u4ee3\u7801\uff1a\n```cpp\n//stack\uff08\u5806\u6808\uff09 \u63d0\u4f9b\u4e86\u5806\u6808\u7684\u5168\u90e8\u529f\u80fd\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5148\u8fdb\u540e\u51fa\u7684\n#include <bits/stdc++.h>\n#include <vector>\n#include<stack>\nusing namespace std;\n\nconst int MAXX = 50 + 5;\nconst int INF = 0x3f3f3f3f;\n\nvector<string> Ans;//\u8bb0\u5f55\u6700\u7ec8\u7b54\u6848\u5e76\u7528\u6765\u6392\u5b57\u5178\u5e8f\nstack<char> mx;//\u50a8\u5b58\u65e7\u56fe\u4fe1\u606f\uff0c\u65b9\u4fbf\u56de\u6eaf \n//\u88ab\u903c\u65e0\u5948\u624d\u7528vector\u548cstack \nstruct Nice {\n\tint x1 , y1 , x2 , y2;\n}tc[MAXX];\nint h , w , cnt , cntans;\nchar g[MAXX][MAXX] , c[MAXX] , ans[MAXX] , tp[MAXX];\nbool v[MAXX] , flag[MAXX];\nint dx[4] = {1 , 0 , -1 , 0} , dy[4] = {0 , 1 , 0 , -1};\n\n\nbool cmp(int a , int b) {\n\treturn a > b;\n}\n\nbool dfs(int x , int y , int xx , int yy) {\n\tif (!(g[x][y] == '.' || g[x][y] - 'A' == xx)) {\n\t\treturn 0;\n\t}\n\tif (x == tc[xx].x1 && y == tc[xx].y1 && yy == 3) {\n\t\tmx.push(g[x][y]) , g[x][y] = '.';\n\t\treturn 1;\n\t}\n\n\tif (x == tc[xx].x2 && y == tc[xx].y1 ) {\n\t\tif (dfs(x , y + 1 , xx , yy + 1)) {\n\t\t\tmx.push(g[x][y]) , g[x][y] = '.';\n\t\t\treturn 1;\n\t\t}\n\t\telse return 0;\n\t}\n\telse if (x == tc[xx].x2 && y == tc[xx].y2 ) {\n\t\tif (dfs(x - 1 , y , xx , yy + 1)) {\n\t\t\tmx.push(g[x][y]) , g[x][y] = '.';\n\t\t\treturn 1;\n\t\t}\n\t\telse return 0;\n\t}\n\telse if (x == tc[xx].x1 && y == tc[xx].y2 ) {\n\t\tif (dfs(x , y - 1 , xx , yy + 1)) {\n\t\t\tmx.push(g[x][y]) , g[x][y] = '.';\n\t\t\treturn 1;\n\t\t}\n\t\telse return 0;\n\t}\n\telse {\n\t\tif (dfs(x + dx[yy] , y + dy[yy] , xx , yy)) {\n\t\t\tmx.push(g[x][y]) , g[x][y] = '.';\n\t\t\treturn 1;\n\t\t}\n\t\telse return 0;\n\t}\n}\n\nvoid work(int x , int y , int xx , int yy) {\n\tg[x][y] = mx.top();\n\tmx.pop();\n\tif(x == tc[xx].x1 && y == tc[xx].y1 && yy == 3) {\n\t\treturn;\n\t}\n\tif(x == tc[xx].x2 && y == tc[xx].y1) {\n\t\twork(x , y + 1 , xx , yy + 1);\n\t}\n\telse if(x == tc[xx].x2 && y == tc[xx].y2) {\n\t\twork(x - 1 , y , xx , yy + 1);\n\t}\n\telse if(x == tc[xx].x1 && y == tc[xx].y2) {\n\t\twork(x , y - 1 , xx , yy + 1);\n\t}\n\telse {\n\t\twork(x + dx[yy] , y + dy[yy] , xx , yy);\n\t}\n}\n\nvoid DFS(int xi , int yi) {\n\tif (yi == cnt) {\n\t\tstring sss; \n\t\tfor (int i=yi-1; i>=0; i-- ) {\n\t\t\tsss += ans[i]; \n\t\t}\n\t\tAns.push_back(sss);\n\t\tsss.clear();\n\t\treturn ;\n\t}\n\tfor (int i=1; i<=cnt; i++ ) {\n\t\tif (!flag[i]) {\n\t\t\tif (dfs(tc[c[i]].x1 , tc[c[i]].y1 , c[i] , 0)) {\n\t\t\t\tflag[i] = 1;\n\t\t\t\tans[yi] = c[i] + 'A';\n\t\t\t\tDFS(i , yi + 1);\n\t\t\t\twork(tc[c[i]].x1 , tc[c[i]].y1 , c[i] , 0);\n\t\t\t\tflag[i] = 0;\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid Work() {\n    for (int i=0; i<h; i++) {\n    \tscanf(\"%s\",g[i]);\n    \tfor(int j=0; j<w; j++) {\n\t    \tif(g[i][j] != '.') {\n\t    \t\tint kkk = g[i][j] - 'A';\n\t    \t\ttc[kkk].x1 = min(tc[kkk].x1 , i);\n\t\t\t\ttc[kkk].y1 = min(tc[kkk].y1 , j);\n\t    \t\ttc[kkk].x2 = max(tc[kkk].x2 , i);\n\t\t\t\ttc[kkk].y2 = max(tc[kkk].y2 , j);\n\t    \t\tif(!v[kkk]) {\n\t    \t\t\tv[kkk] = 1;\n\t    \t\t\tc[++cnt] = kkk;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d %d\",&h,&w);\n\tfor (int i=0; i<50; i++ ) {\n\t\ttc[i].x1 = INF;\n\t\ttc[i].y1 = INF;\n\t\ttc[i].x2 = 0;\n\t\ttc[i].y2 = 0;\n\t}\n\tWork();\n\tsort(c + 1 , c + cnt + 1 , cmp);\n\tDFS(-1 , 0);\n\tsort(Ans.begin(),Ans.end());\n\tfor (int i=0; i<Ans.size() ; i++ ) {\n\t\tcout << Ans[i] << \"\\n\";\n\t}\n}\n\n/*\nin:\n9 8\n.CCC....\nECBCBB..\nDCBCDB..\nDCCC.B..\nD.B.ABAA\nD.BBBB.A\nDDDDAD.A\nE...AAAA\nEEEEEE..\nout:\nEDABC\n*/ \n```\n\u611f\u89c9\u662f\u505a\u590d\u6742\u4e86\u3002\u3002\u3002\u770b\u6765VC\u8fd8\u662f\u90a3\u6837\u5f31\u554aqwq\n\n#### \u8fd9\u7bc7\u9898\u89e3\u90fd\u5230\u8fd9\u91cc\u4e86\uff0c\u6c42\u7ba1\u7406\u7ed9\u8fc7qwq\n\n",
        "postTime": 1600877902,
        "uid": 323989,
        "name": "Vector_Mingfan",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u6211\u5728USACO\u91cc\u9762\u7528\u65f6\u6700\u4e45\u7684\u4e00\u9053~~\u597d\u4e86\u4e0d\u5e9f\u8bdd\u4e86~~\n\n\u8fd9\u4e00\u9053\u9898\u6b63\u89e3\u662f\u62d3\u6251\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u62d3\u6251\u6bd4\u66b4\u529b\u66f4\u597d\u6253\u3002\u3002\u3002\u3002\n\n\u601d\u8def\uff1a\n\n\u56e0\u4e3a\u201c\u77e9\u5f62\u7684\u6bcf\u6761\u8fb9\u4e2d\uff0c\u81f3\u5c11\u6709\u4e00\u90e8\u5206\u662f\u53ef\u89c1\u7684\u201d\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\n\n\u9700\u8981\u6839\u636e\u8fb9\u6765\u627e\u51fa\u77e9\u5f62\u7684\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0a\u89d2\n\n\u7136\u540e\u641c\u7d22\u6bcf\u4e00\u4e2a\u77e9\u9635\uff0c\u5982\u679c\u8fd9\u4e2a\u77e9\u9635\u88ab\u522b\u7684\u77e9\u9635\u8986\u76d6\u4e86\uff0c\u5c31\u4e0e\n\n\u53e6\u5916\u4e00\u4e2a\u77e9\u9635\u5efa\u7acb\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u62d3\u6251\u4e00\u6b21\u5c31\u597d\u4e86\n\n\u6ce8\uff1a\u6ca1\u6709\u88ab\u8fde\u63a5\u7684\u77e9\u5f62\u624d\u662f\u6700\u5e95\u7684\uff08\u5f53\u524d\uff09\uff0c\u8fd9\u6837\u53ef\u4ee5\u7701\u53bb\u5f88\n\n\u7684\u6b65\u9aa4\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<cstdlib>\nusing namespace std;\nstruct node\n{\n    int x,y,next;\n}a[5100];int len,last[51];//\u8fb9\uff0c\u8868\u793a\u8981\u5148\u7528\u4e86\u8fd9\u4e00\u4e2a\u77e9\u9635\u624d\u80fd\u7528\u4e0b\u4e00\u4e2a\u77e9\u9635 \nint s[51];//\u8868\u793a\u6709\u591a\u5c11\u4e2a\u77e9\u9635\u5728\u8fd9\u4e00\u4e2a\u70b9\u7684\u4e0a\u9762 \nstruct node1\n{\n    int x1,y1;\n    int x2,y2;\n    node1()\n    {\n    \tx1=y1=100;\n    }\n}g[51];//\u8bb0\u5f55\u5de6\u4e0a\u548c\u53f3\u4e0b \ninline void ins(int x,int y)//\u5efa\u8fb9 \n{\n    len++;\n    a[len].x=x;a[len].y=y;s[y]++;\n    a[len].next=last[x];last[x]=len;\n}\nint n,m,length,d[51];//length\u8868\u793a\u51fa\u73b0\u7684\u77e9\u9635\u7684\u6b21\u6570\uff0cd\u4e3a\u7f16\u76ee\u5f55\u4f18\u5316\uff0c\u8fd9\u4e2a\u8fd8\u633a\u6709\u7528\u7684 \nint f[51][51];//\u5730\u56fe \nbool v[51];//\u8fd9\u79cd\u578b\u53f7\u7684\u77e9\u9635\u662f\u5426\u6709 \ninline void find(int k)//\u67e5\u627e\u4e3ak\u7684\u77e9\u9635 \n{\n\tbool bk[51];memset(bk,true,sizeof(bk));//\u8bb0\u5f55\u90a3\u79cd\u77e9\u5f62\u662f\u5426\u88ab\u627e\u8fc7\uff0c\u5982\u679c\u627e\u8fc7\u4e86\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u591a\u5efa\u8fb9\u4e86 \n    for(int j=g[k].y1;j<=g[k].y2;j++)//\u5148\u627e\u4e0a\u4e0b \n    {\n        if(f[g[k].x1][j]!=k && bk[f[g[k].x1][j]]==true) \n\t\t{\n\t\t\tins(k,f[g[k].x1][j]);\n\t\t\tbk[f[g[k].x1][j]]=false;\n\t\t}\n        if(f[g[k].x2][j]!=k && bk[f[g[k].x2][j]]==true) \n\t\t{\n\t\t\tins(k,f[g[k].x2][j]);\n\t\t\tbk[f[g[k].x2][j]]=false;\n\t\t}\n    }\n    for(int i=g[k].x1;i<=g[k].x2;i++) //\u518d\u627e\u5de6\u53f3 \n    {\n        if(f[i][g[k].y1]!=k && bk[f[i][g[k].y1]]==true) \n\t\t{\n\t\t\tins(k,f[i][g[k].y1]);\n\t\t\tbk[f[i][g[k].y1]]=false;\n\t\t}\n        if(f[i][g[k].y2]!=k && bk[f[i][g[k].y2]]==true) \n\t\t{\n\t\t\tins(k,f[i][g[k].y2]);\n\t\t\tbk[f[i][g[k].y2]]=false;\n\t\t}\n    }\n}\nint b[51];//\u8bb0\u5f55\u62d3\u6251\u65f6\u7684\u961f\u5217 \ninline void tuopu(int x,int t)//\u5220\u8fb9\u6216\u8005\u56de\u6eaf \n{\n    for(int k=last[x];k;k=a[k].next)\n    {\n        int y=a[k].y;\n        s[y]+=t;\n    }\n}\nvoid dfs(int k)//\u62d3\u6251\u6392\u5e8f\uff0ck\u8868\u793a\u73b0\u5728\u961f\u5217\u91cc\u6709k-1\u4e2a \n{\n    if(k==length+1)//\u5982\u679c\u5230\u8fbe\u4e86 \n    {\n       \tfor(int i=1;i<k;i++) printf(\"%c\",b[i]+'A'-1);//\u53d8\u4e3a\u5b57\u7b26\u4e32\u7136\u540e\u8f93\u51fa \n        printf(\"\\n\");return;\n    }\n    for(int i=1;i<=length;i++)//\u679a\u4e3e \n    {\n        if(v[d[i]]==true)//\u5982\u679c\u6ca1\u6709\u88ab\u627e\u8fc7 \n        {\n            if(s[d[i]]==0)//\u5982\u679c\u5730\u4e0b\u6ca1\u6709\u77e9\u5f62\u4e86 \n            {\n                v[d[i]]=false;\n                b[k]=d[i];//\u8bb0\u5f55 \n                tuopu(d[i],-1);//\u4f2a\u5220\u8fb9 \n                dfs(k+1);//\u5f80\u4e0b\u641c\u7d22 \n                v[d[i]]=true;//\u56de\u6eaf \n                b[k]=0;\n                tuopu(d[i],1);\n            }\n        }\n    }\n}\ninline int cmp(const void *xx,const void *yy)//\u6392\u5e8f \n{\n\tint x=*(int*)xx;\n\tint y=*(int*)yy;\n\tif(x>y) return 1;\n\tif(x<y) return -1;\n\treturn 0;\n}\nint main()\n{\n    char st[51];int i,j;\n    scanf(\"%d%d\",&n,&m);\n    memset(v,false,sizeof(v));\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%s\",st+1);\n        for(j=1;j<=m;j++)\n        {\n            if(st[j]=='.') continue;//\u4e0d\u7528\u7ba1\u6ca1\u6709\u7684 \n            f[i][j]=st[j]-'A'+1;\n            if(v[f[i][j]]==false)\n            {\n                v[f[i][j]]=true;\n                length++;d[length]=f[i][j];\n            }\n            g[f[i][j]].x1=min(g[f[i][j]].x1,i);//\u8bb0\u5f55\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2 \n            g[f[i][j]].y1=min(g[f[i][j]].y1,j); \n            g[f[i][j]].x2=max(g[f[i][j]].x2,i);\n            g[f[i][j]].y2=max(g[f[i][j]].y2,j);\n        }\n    }\n    qsort(d+1,length,sizeof(int),cmp);//\u8bb0\u5f97\u6392\u5e8f\u76ee\u5f55 \n    for(i=1;i<=length;i++)//\u627e\u4e00\u6b21 \n    {\n        find(d[i]);\n    }\n    dfs(1);//\u62d3\u6251\u6392\u5e8f \n    return 0;\n}\n```",
        "postTime": 1527052683,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "\u62d3\u6251\u6392\u5e8f\n\n\u7531\u9898\u610f\u53ef\u77e5\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u77e9\u5f62\u7684\u4e00\u6761\u8fb9\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u77e9\u5f62\u7684\u5750\u6807\u3002\u8bfb\u5165\u65f6\u8bb0\u5f55\u77e9\u5f62\u7684\u6bcf\u4e2a\u70b9\u4e2d\u6700\u5c0fx1\uff0c\u6700\u5c0fy1\uff0c\u6700\u5927x2\uff0c\u6700\u5927y2\u3002\u53ef\u77e5\u5de6\u4e0a\u89d2(x1\uff0cy1)\u53f3\u4e0b\u89d2(x2\uff0cy2)\u53f3\u4e0a\u89d2(x2\uff0cy1)\u5de6\u4e0b\u89d2(x1\uff0cy2)\u3002\u67e5\u627e\u8be5\u77e9\u5f62A\u8fb9\u4e0a\uff0c\u975e\u8be5\u77e9\u5f62\u7684\u5b57\u6bcdB\uff0c\u5373\u8986\u76d6\u77e9\u5f62A\u88ab\u77e9\u5f62B\u8986\u76d6\u3002\u5efa\u7acb\u4e00\u6761\u6709\u5411\u8fb9B->A\uff0c\u8868\u793aB\u662fA\u7684\u5fc5\u8981\u6761\u4ef6\u3002\u7136\u540e\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u641c\u7d22\u6c42\u6240\u6709\u7684\u62d3\u6251\u5e8f\u5217\uff0c\u5e76\u6392\u5e8f\u8f93\u51fa\u3002\n\n\u6ce8\u610f\uff0c\u8be5\u9898\u4e2d\u7684\u5b57\u6bcd\u53ef\u80fd\u4e0d\u8fde\u7eed\uff0c\u4e0d\u8981\u76f4\u63a5for(i='A';i<='Z';i++)\u3002\n\n\u5b57\u7b26\u4e32\u5904\u7406\n\n\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u5b8c\u5168\u6846\uff08\u4e5f\u5c31\u662f\u8fd9\u4e2a\u6846\u7684\u6240\u6709\u5b57\u6bcd\u90fd\u53ef\u89c1\uff0c\u8981\u4e48\u662f\u539f\u6765\u7684\u5b57\u6bcd\uff0c\u8981\u4e48\u662f\u201c\\*\u201d\uff0c\u201c\\*\u201d\u662f\u540e\u9762\u7528\u5230\u7684\u4e34\u65f6\u6807\u8bb0\uff09\uff0c\u62ff\u6389\uff0c\u628a\u6846\u4e0a\u7684\u6240\u6709\u5b57\u6bcd\u90fd\u6807\u8bb0\u4e3a\u201c\\*\u201d\u3002\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\u76f4\u5230\u6240\u6709\u6846\u90fd\u88ab\u62ff\u6389\u3002\u56e0\u4e3a\u8981\u6c42\u8f93\u51fa\u6240\u6709\u7b54\u6848\uff0c\u6240\u4ee5\u7528dfs\u6765\u5bfb\u627e\u6240\u6709\u89e3\u3002\n\n\u4e0b\u9644\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h> \n#define rep(i, n) for(int i = 1; i <= n;i++)\nusing namespace std;\nint w, h, p, l[50], r[50], u[50], d[50], D[50];\nchar mapp[50][50], _p[50];\nbool a[50], g[50][50];\nvoid dfs(){\n    bool flag = 0;\n    rep(i, 26)\n        if(a[i]){\n            flag = 1;\n            break;\n        }\n    if(!flag){\n        rep(i, p)\n            printf(\"%c\", _p[i]);\n        printf(\"\\n\");\n        return;\n    }\n    rep(i, 26)\n        if(a[i] && D[i] == 0){\n                _p[++p] = i + '@';\n                rep(j, 26)\n                    if(g[i][j])\n                        D[j]--;\n                a[i] = 0;\n                dfs();\n                rep(j, 26)\n                    if(g[i][j])\n                        D[j]++;\n                a[i] = 1;\n                p--;\n        }\n}\nint main(){\n    ios::sync_with_stdio(false);\n    scanf(\"%d%d\", &w, &h);\n    rep(i, w){\n        scanf(\"\\n\");\n        rep(j, h){\n            char c = getchar();\n            mapp[i][j] = c;\n            if(!l[c - '@'] || j < l[c - '@'])\n                l[c - '@'] = j;\n            if(!r[c - '@'] || j > r[c - '@'])\n                r[c - '@'] = j;\n            if(!u[c - '@'] || i < u[c - '@'])\n                u[c - '@'] = i;\n            if(!d[c - '@'] || i > d[c - '@'])\n                d[c - '@'] = i;\n            a[c - '@'] = 1;\n        }\n    }\n    memset(g, 0, sizeof(g));\n    rep(i, 26)\n        if(a[i]){\n            for(int j = l[i]; j <= r[i]; j++){\n                if(mapp[u[i]][j] != '.')\n                    g[i][mapp[u[i]][j] - '@'] = 1;\n                if(mapp[d[i]][j] != '.')\n                    g[i][mapp[d[i]][j] - '@'] = 1;\n            }\n            for(int j = u[i]; j <= d[i]; j++){\n                if(mapp[j][l[i]] != '.')\n                    g[i][mapp[j][l[i]] - '@'] = 1;\n                if(mapp[j][r[i]] != '.')\n                    g[i][mapp[j][r[i]] - '@'] = 1;\n            }\n        }\n    rep(i, 26)\n        rep(j, 26)\n            if(i != j && g[i][j])\n                D[j]++;\n    p = 0;\n    dfs();\n    return 0;\n}\n```",
        "postTime": 1504280898,
        "uid": 39922,
        "name": "vinvor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u771f\u5fc3\u96be\u641e\uff0c\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u5bf9\u4e8e\u50cf\u6211\u8fd9\u6837\u7684\u849f\u84bb\uff0c\u4ee3\u7801\u57fa\u7840\u4e0d\u662f\u5f88\u597d\uff0c\u751f\u751f\u8c03\u4e86\u4e00\u4e2a\u4e0b\u5348\u624d\u641e\u5bf9\uff0c\u8fd9\u9053\u9898\u6211\u4eec\u770b\u5230\u9898\u76ee\u7ed9\u51fa\u7684\u6761\u4ef6\u8bf4\uff1a\n\n\u77e9\u5f62\u7684\u8fb9\u7684\u5bbd\u5ea6\u4e3a 1 \uff0c\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u90fd\u4e0d\u5c0f\u4e8e 3 \u3002\n\n\n\u77e9\u5f62\u7684\u6bcf\u6761\u8fb9\u4e2d\uff0c\u81f3\u5c11\u6709\u4e00\u90e8\u5206\u662f\u53ef\u89c1\u7684\u3002\u6ce8\u610f\uff0c\u4e00\u4e2a\u89d2\u540c\u65f6\u5c5e\u4e8e\u4e24\u6761\u8fb9\u3002\n\n\n\u77e9\u5f62\u7528\u5927\u5199\u5b57\u6bcd\u8868\u793a\uff0c\u5e76\u4e14\u6bcf\u4e2a\u77e9\u5f62\u7684\u8868\u793a\u7b26\u53f7\u90fd\u4e0d\u76f8\u540c\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u9884\u5904\u7406\u641e\u51fa\u6bcf\u4e2a\u77e9\u5f62\u7684\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\uff0c\u7136\u540e\u626b\u63cf\u77e9\u5f62\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u9047\u5230\u4e0d\u662f\u672c\u77e9\u5f62\u81ea\u8eab\u7684\u5b57\u6bcd\uff0c\u6211\u4eec\u5c31\u52a0\u4e00\u6761\u8fb9s[i][j]\uff0c\u8868\u793ai\u88abj\u8986\u76d6\uff0c\u8fd9\u6837\u641e\u5b8c\u540e\uff0c\u6211\u4eec\u76f4\u63a5\u8dd1\u62d3\u6251\u6392\u5e8f\u5c31\u597d\uff0c\u4f46\u662f\u6211\u4eec\u8981\u5904\u7406\u5904\u6bcf\u79cd\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528dfs\u800c\u4e0d\u662ffor\u5faa\u73af\u4e86\uff0c\u5728\u7f51\u4e0a\u5b66\u4e60\u4e86\u4e00\u4e0b\u62d3\u6251\u6392\u5e8f\uff0c\u6ca1\u60f3\u5230\u5c31\u662f\u697c\u4e0b\u7684\uff0c\u597d\u5de7\u554a\uff0c\u4f46\u662f\u9884\u5904\u7406\u7b49\u5176\u4ed6\u7684\u5e76\u6ca1\u6709\u6284\u88ad\uff0c\u5927\u5bb6\u53ef\u4ee5\u501f\u9274\u4e00\u4e0b\uff08\u849f\u84bb\u8fde\u62d3\u6251\u6392\u5e8f\u90fd\u4e0d\u4f1a555~\uff09\u8fd9\u4e2a\u62d3\u6251\u6392\u5e8f\u7b97\u662f\u5199\u7684\u5f88\u597d\u7684\u4e86\uff0c\uff08\u9898\u89e3\u624d\u4e24\u7bc7\uff0c\u7ba1\u7406\u5458\u5927\u4eba\u5e2e\u5fd9\u8fc7\u4e0b\uff09\n\n/*************************************************************************\n\n    > Author: Drinkwater-cnyali\n    > Created Time: 2017/5/6 14:44:08\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<map>\n#include<vector>\nusing namespace std;\ntypedef long long LL;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nconst int maxn = 100000;\nconst int inf = 0x3f3f3f3f;\nint n,m;\nchar Map[40][40];\nstruct node { int x,y;};node M[40][2];\nvoid init()\n{\n    REP(i,1,31)\n    {\n        REP(l,1,31)\n            REP(r,1,31)\n                M[i][0].x = -inf,M[i][0].y = -inf;\n        REP(l,1,31)\n            REP(r,1,31)\n                M[i][1].x = inf,M[i][1].y = inf;\n    }\n}\nint id[40],cnt,vis[40],s[40][40],deg[40],ans[40],ff;\nmap<string,bool>mp;\nvector<string> as;\nvoid topsort(int x,string now)\n{\n    if(x > cnt && !mp[now])\n    {\n        mp[now] = 1;\n        as.push_back(now);\n        return ;\n    }\n    REP(i,1,cnt)\n    {\n        if(!deg[id[i]] && !vis[id[i]])\n        {\n            vis[id[i]] = 1;\n            deg[id[i]] = -1;\n            REP(j,1,cnt)\n                if(s[id[i]][id[j]])\n                    deg[id[j]]--;\n            topsort(x+1,now+char(id[i]+'A'-1));\n            REP(j,1,cnt)\n                if(s[id[i]][id[j]])\n                    deg[id[j]]++;\n            deg[id[i]] = 0,vis[id[i]] = 0;\n        }\n    }\n}\nint main()\n{\n    n = read(), m = read();\n    init();\n    for(int i = 1; i <= n; i++)\n    {\n        scanf(\"%s\",Map[i]);\n        int Len = strlen(Map[i]);\n        for(int j = 0; j < Len;++j)\n        {\n            if(Map[i][j] == '.')continue;\n            int T = Map[i][j] - 'A' +1;\n            if(!vis[T])id[++cnt] = T,vis[T] = 1;\n            M[T][0].x = max(M[T][0].x,i);\n            M[T][0].y = max(M[T][0].y,j);\n            M[T][1].x = min(M[T][1].x,i);\n            M[T][1].y = min(M[T][1].y,j);\n        }\n    }\n    /*REP(i,1,cnt)\n    {\n        int T = id[i];\n        cout<<T<<endl;\n        cout<<M[T][0].x<<\" \"<<M[T][0].y+1<<endl;\n        cout<<M[T][1].x<<\" \"<<M[T][1].y+1<<endl;\n        cout<<\"~~~~\"<<endl;\n    }*/memset(s,0,sizeof(s));\n    REP(k,1,cnt)\n    {\n        int T = id[k],c;\n        int Mx = M[T][1].x,My = M[T][1].y,Fx = M[T][0].x,Fy = M[T][0].y;\n        REP(i,Mx,Fx)\n        {\n            if(Map[i][My] != '.')\n            {\n                c = Map[i][My]-'A'+1;\n                if(!s[T][c] && T != c)s[T][c] = 1,deg[c]++;\n            }\n            if(Map[i][Fy] != '.')\n            {\n                c = Map[i][Fy]-'A'+1;\n                if(!s[T][c] && T != c)s[T][c] = 1,deg[c]++;\n            }\n        }\n        REP(i,My,Fy)\n        {\n            if(Map[Mx][i]!='.')\n            {\n                c = Map[Mx][i]-'A'+1;\n                if(!s[T][c] && T != c)s[T][c] = 1,deg[c]++;\n            }\n            if(Map[Fx][i]!='.')\n            {\n                c = Map[Fx][i]-'A'+1;\n                if(!s[T][c] && T != c)s[T][c] = 1,deg[c]++;\n            }\n        }\n    }\n    /*REP(i,1,cnt)\n    {\n        cout<<\"!!!\"<<id[i]<<endl;\n        REP(j,1,cnt)if(s[id[i]][id[j]])cout<<id[j]<<\" \";\n        cout<<endl;\n    }*/\n    memset(vis,0,sizeof(vis));\n    topsort(1,\"\");\n    sort(as.begin(),as.end());\n    REP(i,0,as.size()-1)\n        cout<<as[i]<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1494084502,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "\u3010\u5206\u6790\u3011\uff1a\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u79cd\u5b57\u7b26\uff0c\u4f1a\u7ec4\u6210\u4e0d\u540c\u77e9\u5f62\uff0c\u7edf\u8ba1\u8fd9\u4e9b\u77e9\u5f62\u7684\u5de6\u4e0a\u89d2<\u5373\u6700\u5de6\u503c\u548c\u6700\u4e0a\u503c>\uff0c\u53f3\u4e0a\u89d2<\u5373\u6700\u53f3\u503c\u548c\u6700\u4e0b\u503c>\uff0c\u7136\u540e\u5efa\u56fe\uff1a\u82e5\u672c\u6765\u5728\u8be5\u77e9\u5f62\u7684\u8fb9\u4e0a\u5b58\u5728\u4e0d\u540c\u4e8e\u8be5\u77e9\u5f62\u7684\u5b57\u7b26\uff0c\u5219\u5c06\u8be5\u77e9\u5f62\u548c\u4e0d\u540c\u4e8e\u8be5\u77e9\u5f62\u7684\u5b57\u7b26\u5bf9\u5e94\u7684\u77e9\u5f62\u7f16\u53f7\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9\u62d3\u6251\u6392\u5e8f\uff0c\u6ce8\u610f\uff0c\u4e0d\u540c\u7684\u62d3\u6251\u5e8f\u53ef\u80fd\u9020\u6210\u7b54\u6848\u4e0d\u540c\uff0c\u56e0\u6b64\u7528DFS\u6765\u679a\u4e3e\u6240\u6709\u62d3\u6251\u5e8f\u800c\u4e0d\u4ec5\u4ec5\u53ea\u8dd1\u4e00\u904d\uff0c\u6700\u540e\u5bf9\u7b54\u6848\u6392\u5e8f\uff0c\u8f93\u51fa\u5373\u53ef\n\n\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\uff1a\n\n\u8bbe\u5b57\u7b26\u79cd\u7c7b\u4e3akind\uff0c\u5219\u5efa\u56fe\u8fc7\u7a0b\u590d\u6742\u5ea6\u4e3aO(kind\\*H\\*W)\uff0c\u7edf\u8ba1\u5165\u5ea6O(kind\\*kind)\uff0c\u62d3\u6251\u6392\u5e8fO(kind\\*kind\\*kind)\n\n\u3010\u4ee3\u7801\u3011\uff1a\n\n                                      \n                    \n```cpp\n#include<stdio.h>  \n#include<string.h>  \n#include<stdlib.h>  \n#include<algorithm>  \n#include<iostream>  \n#include<vector>  \n#include<stack>  \n#include<queue>  \n#include<map>  \nusing namespace std;  \n#define MAX 31  \n#define MAXN 101  \n#define IMAX 21474836  \nstruct rectangle  \n{  \n      int l,r,u,d;  \n      void reset(){l=IMAX,r=0,u=IMAX,d=0;}  \n};  \nrectangle a[MAX];  \nint H,W,kind=0,indegree[MAXN];  \nchar in[MAX][MAX];  \nbool visin[MAXN],map1[MAX][MAX],vis[MAXN];  \nmap<char,int> number;  \nmap<int,char> word;  \nmap<string,bool> hash;  \nstring empty;  \nvector<string> ans;  \nvoid pre_group()  \n{  \n      for(int i=1;i<=kind;i++)  \n      {  \n            for(int j=a[i].l;j<=a[i].r;j++)  \n            {  \n                  if(in[a[i].u][j]!=word[i] && in[a[i].u][j]!='.')  \n                        map1[i][number[in[a[i].u][j]]]=true;  \n                  if(in[a[i].d][j]!=word[i] && in[a[i].d][j]!='.')  \n                        map1[i][number[in[a[i].d][j]]]=true;                    \n            }  \n            for(int j=a[i].u;j<=a[i].d;j++)  \n            {  \n                  if(in[j][a[i].l]!=word[i] && in[j][a[i].l]!='.')  \n                        map1[i][number[in[j][a[i].l]]]=true;  \n                  if(in[j][a[i].r]!=word[i] && in[j][a[i].r]!='.')  \n                        map1[i][number[in[j][a[i].r]]]=true;                    \n            }  \n      }  \n      for(int i=1;i<=kind;i++)  \n            for(int j=1;j<=kind;j++)  \n                  if(map1[i][j])  \n                       indegree[j]++;  \n}  \nvoid topsort(int floor,string now)  \n{  \n      if(floor==kind+1 && !hash[now])  \n      {  \n            hash[now]=true;  \n            ans.push_back(now);  \n            return;  \n      }  \n      for(int i=1;i<=kind;i++)  \n      {  \n            if(indegree[i]==0 && !vis[i])  \n            {  \n                   vis[i]=true;  \n                   indegree[i]=-1;  \n                   for(int j=1;j<=kind;j++)  \n                         if(map1[i][j])  \n                               indegree[j]--;  \n                   topsort(floor+1,now+(char)word[i]);  \n                   for(int j=1;j<=kind;j++)  \n                         if(map1[i][j])  \n                               indegree[j]++;  \n                   indegree[i]=0;  \n                   vis[i]=false;  \n            }  \n      }  \n}  \nint main()  \n{  \n      scanf(\"%d%d\",&H,&W);  \n      for(int i=1;i<=H;i++)  \n      {  \n            scanf(\"\\n\");  \n            for(int j=1;j<=W;j++)  \n            {  \n                  scanf(\"%c\",&in[i][j]);  \n                  if(!visin[in[i][j]] && in[i][j]!='.')  \n                  {  \n                        kind++;  \n                        visin[in[i][j]]=true;  \n                        number[in[i][j]]=kind;  \n                        word[kind]=in[i][j];  \n                        a[number[in[i][j]]].reset();  \n                  }  \n                  a[number[in[i][j]]].l=min(j,a[number[in[i][j]]].l);  \n                  a[number[in[i][j]]].r=max(j,a[number[in[i][j]]].r);  \n                  a[number[in[i][j]]].u=min(i,a[number[in[i][j]]].u);  \n                  a[number[in[i][j]]].d=max(i,a[number[in[i][j]]].d);  \n            }  \n      }  \n      pre_group();  \n      topsort(1,empty);  \n      sort(ans.begin(),ans.end());  \n      for(int i=0;i<(int)ans.size();i++)  \n            cout<<ans[i]<<endl;  \n      return 0;  \n}\n```",
        "postTime": 1478692110,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "\u975e\u5e38\u5f00\u5fc3\u7684\u7528**\u66b4\u529b**\u8fc7\u4e86\u8fd9\u9898\u2026\u2026\n\n\u867d\u8bf4\u662f\u66b4\u529b\uff0c\u8fd8\u662f\u8981\u4e00\u70b9\u4f18\u5316\uff08**\u526a\u679d**\uff09\n\n\u9996\u5148\u662f\u5904\u7406\u5b57\u7b26\u7684\u95ee\u9898\u3002\u6211\u7528bool bExisted[26]\u8868\u793a\u8fd9\u4e2a\u5b57\u7b26\u662f\u5426\u51fa\u73b0\u8fc7\u3002\uff08\u5176\u4e2d'A'\u7684\u4e0b\u6807\u4e3a0\uff0c'B'\u4e3a1\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\n\n\u7136\u540e\u6211\u4eec\u518d\u626b\u4e00\u904dbExisted\u7ed9\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u6309\u7167\u987a\u5e8f\u5206\u914dhash\u503c\u3002\uff08\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u6df1\u641c\uff0c\u53ef\u4ee5\u5199for(i->26)\uff0c\u4f46\u6211\u66f4\u559c\u6b22for(i->end_of_hash)\uff09\n\n\u518d\u7136\u540e\u5c31\u662f\u5904\u7406\u77e9\u5f62\u7684\u95ee\u9898\uff0c\u5927\u5bb6\u5927\u6982\u90fd\u80fd\u60f3\u5230\u8fd9\u4e2a\u505a\u6cd5\uff1a\u56e0\u4e3a\u8fd9\u4e2a\u77e9\u5f62\u7684\u6bcf\u6761\u8fb9\u90fd\u4f1a\u51fa\u73b0\u5728\u6700\u7ec8\u56fe\u50cf\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u626b\u63cf\u4e00\u904d\u56fe\u50cf\uff0c\u5728\u76f8\u540c\u5b57\u6bcd\u4e2d\u53d6\u6700\u5c0f\u7684x\u4f5c\u4e3a\u77e9\u5f62\u7684left\uff0c\u6700\u5c0f\u7684y\u4f5c\u4e3a\u77e9\u5f62\u7684top\uff0c\u6700\u5927\u7684x\u4f5c\u4e3a\u77e9\u5f62\u7684right\uff0c\u6700\u5927\u7684y\u4f5c\u4e3a\u77e9\u5f62\u7684bottom\uff08\u8fd9\u56db\u4e2a\u91cf\u5206\u522b\u662f\u77e9\u5f62\u7684\u5de6\u3001\u4e0a\u3001\u53f3\u3001\u4e0b\u8fb9\u6846\uff09\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u6bcf\u4e2a\u5b57\u7b26\u7684hash\u503c\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u77e9\u5f62\u5b9e\u4f8b\u4e86\u3002\n\n\u54e6\u5bf9\u4e86\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2arect\uff1a\n\n```cpp\nclass rect\n{\npublic:\n\trect() : left(11234), top(11234), right(-11234), bottom(-11234) {}//\u521d\u59cb\u5316\n\tint left, top, right, bottom;\n}all[26];//\u7531\u4e8e\u53ea\u670926\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u5b83\u53ea\u8981\u5f0026\u4e2a\u5c31\u591f\u4e86\u3002\n```\n\n\u7136\u540e\u5c31\u662f\u641c\u7d22\u4e86\u3002\u6734\u7d20\u7684\u6df1\u641c\u5927\u5bb6\u90fd\u61c2\uff1a\u679a\u4e3e\u5168\u6392\u5217\uff0c\u5224\u65ad\u662f\u5426\u53ef\u884c\u3002\uff08\u4f3c\u4e4e\u53eaTLE\u4e00\u4e2a\u70b9\uff0c\u800c\u4e14O2\u4e5f\u8fc7\u4e0d\u53bb\u7684\u4e00\u4e2a\u70b9\uff09\n\n\u4f18\u5316\uff1a\u7528cover**\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u8981\u88ab\u8986\u76d6\u7684\u6b21\u6570**\u3002\n\n\u5982\u4e0b\u56fe\uff1a\n\n```cpp\nAAA..\nA.BBB\nA.B.B\nAABBB\n```\n\n\u90a3\u4e48cover\u6570\u7ec4\u5982\u4e0b\uff1a\n\n```cpp\n11100\n10211\n10201\n11211\n```\n\u5373\u8fd9\u4e2a\u4f4d\u7f6e\u603b\u5171\u4f1a\u88ab\u8986\u76d6\u591a\u5c11\u6b21\u3002\n\n\u8fd9\u6837\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\u5982\u679c\u5f53\u524d\u653e\u4e0b\u53bb\u7684\u77e9\u5f62\u6240\u8981\u9732\u51fa\u6765\u7684\u5730\u65b9**cover\u4e0d\u7b49\u4e8e1**\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u628a\u5b83\u653e\u4e0b\u53bb\u80af\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff1a\u56e0\u4e3acover\u4e0d\u7b49\u4e8e1\uff0c\u610f\u5473\u7740\u8fd9\u4e2a\u4f4d\u7f6e**\u8fd8\u8981\u88ab\u540e\u6765\u7684\u77e9\u5f62\u8986\u76d6**\u3002\n\n\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee50msAC\u90a3\u4e2aTLE\u7684\u70b9\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n\n#include <algorithm>\n\ninline void GetMin(int& a, int b) { if (b < a) a = b; }\ninline void GetMax(int& a, int b) { if(b > a) a = b; }\n\nclass rect\n{\npublic:\n    rect() : left(11234), top(11234), right(-11234), bottom(-11234) {}\n    int left, top, right, bottom;\n}all[26];\nint iEnd;\nint hash[26];\nchar val[26];\nbool bExisted[26];\n\nint n, m;\n\nint cover[31][31];//\u8986\u76d6\u6b21\u6570\nchar map[31][31];//\u76ee\u6807\u72b6\u6001\n\nchar buf[31][31];//\u641c\u7d22\u65f6\u7684\u72b6\u6001\nchar old[26][31][31];//\u9009\u62e9\u524d\u7684\u72b6\u6001\uff08\u56de\u6eaf\u65f6\u7528\uff09\nbool bUsed[26];//\u8fd9\u4e2a\u77e9\u5f62\u662f\u5426\u5df2\u88ab\u653e\u7f6e\nchar out[26];//\u5b58\u50a8\u65b9\u6848\n\nvoid dfs(int now)\n{\n    if (now == iEnd)\n    {\n        printf(\"%s\\n\", out);\n        return;\n    }\n    for (int i(0); i != iEnd; ++i)\n    {\n        if (bUsed[i]) continue;\n        \n        bool fail(false);\n        \n        for (int x(all[i].left); x <= all[i].right; ++x)\n        {\n            if (map[x][all[i].top] == val[i] && cover[x][all[i].top] != 1\n                || map[x][all[i].bottom] == val[i] && cover[x][all[i].bottom] != 1)\n            {\n                fail = true;//\u8fd9\u91cc\u5728\u901a\u8fc7cover\u6570\u7ec4\u5224\u65ad\u8fd9\u4e48\u505a\u662f\u5426\u53ef\u884c\uff0c\u539f\u7406\u5982\u524d\u6587\u6240\u8ff0\n                break;\n            }\n        }\n        if (fail) continue;\n        for (int y(all[i].top); y <= all[i].bottom; ++y)\n        {\n            if (map[all[i].left][y] == val[i] && cover[all[i].left][y] != 1\n                || map[all[i].right][y] == val[i] && cover[all[i].right][y] != 1)\n            {\n                fail = true;\n                break;\n            }\n        }\n        if (fail) continue;\n        \n        bUsed[i] = true;\n        \n        for (int x(all[i].left); x <= all[i].right; ++x)\n        {\n            old[now][x][all[i].top] = buf[x][all[i].top];//\u8bb0\u5f55\u4fee\u6539\u524d\u5c06\u88ab\u4fee\u6539\u7684\u4f4d\u7f6e\u7684\u72b6\u6001\n            old[now][x][all[i].bottom] = buf[x][all[i].bottom];\n        }\n        for (int y(all[i].top); y <= all[i].bottom; ++y)\n        {\n            old[now][all[i].left][y] = buf[all[i].left][y];\n            old[now][all[i].right][y] = buf[all[i].right][y];\n        }\n        \n        for (int x(all[i].left + 1); x < all[i].right; ++x)\n        {\n            buf[x][all[i].top] = val[i];//\u4fee\u6539\u641c\u7d22\u72b6\u6001\n            buf[x][all[i].bottom] = val[i];\n            --cover[x][all[i].top];//\u4fee\u6539\u5c06\u88ab\u8986\u76d6\u7684\u6b21\u6570\n            --cover[x][all[i].bottom];\n        }\n        for (int y(all[i].top); y <= all[i].bottom; ++y)\n        {\n            buf[all[i].left][y] = val[i];//\u5982\u4e0a\u5faa\u73af\uff0c\u53ea\u662f\u77e9\u5f62\u6709\u56db\u6761\u8fb9\uff0c\u6240\u4ee5\u5206\u4e24\u4e2a\u5faa\u73af\n            buf[all[i].right][y] = val[i];\n            --cover[all[i].left][y];\n            --cover[all[i].right][y];\n        }\n        \n        out[now] = val[i];//\u6807\u8bb0\u65b9\u6848\n        dfs(now + 1);\n        \n        for (int x(all[i].left + 1); x < all[i].right; ++x)//\u56de\u6eaf\u72b6\u6001\n        {\n            buf[x][all[i].top] = old[now][x][all[i].top];\n            buf[x][all[i].bottom] = old[now][x][all[i].bottom];\n            ++cover[x][all[i].top];\n            ++cover[x][all[i].bottom];\n        }\n        for (int y(all[i].top); y <= all[i].bottom; ++y)\n        {\n            buf[all[i].left][y] = old[now][all[i].left][y];\n            buf[all[i].right][y] = old[now][all[i].right][y];\n            ++cover[all[i].left][y];\n            ++cover[all[i].right][y];\n        }\n        \n        bUsed[i] = false;\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i(0); i != n; ++i)\n    {\n        scanf(\"%s\", map[i]);\n        for (int j(0); j != m; ++j)\n        {\n            if (map[i][j] != '.') bExisted[map[i][j] - 'A'] = true;//\u6807\u8bb0\u8be5\u5b57\u7b26\u4e3a\u201c\u5b58\u5728\u201d\n            buf[i][j] = '.';\n        }\n    }\n    for (int i(0); i != 26; ++i)//\u4e3a\u5b57\u7b26\u5206\u914dhash\u503c\uff08\u4e3b\u8981\u662f\u9700\u8981hash\u8fde\u7eed\u6392\u5217\uff0c\u5426\u5219\u53ef\u4ee5\u76f4\u63a5\u53d6\u5176ASCII\u7801\n    {\n        if (bExisted[i])\n        {\n            hash[i] = iEnd;\n            val[iEnd++] = 'A' + i;//\u6807\u8bb0\u8fd9\u4e2ahash\u7684\u539f\u503c\n        }\n    }\n    for (int i(0); i != n; ++i)//\u5bfb\u627e\u77e9\u5f62\u7684\u8fb9\u754c\n    {\n        for (int j(0); j != m; ++j)\n        {\n            if (map[i][j] != '.')\n            {\n                rect& x(all[hash[map[i][j] - 'A']]);\n                GetMin(x.left, i);\n                GetMin(x.top, j);\n                GetMax(x.right, i);\n                GetMax(x.bottom, j);\n            }\n        }\n    }\n    for (int i(0); i != iEnd; ++i)\n    {\n        for (int x(all[i].left + 1); x < all[i].right; ++x)\n        {\n            ++cover[x][all[i].top];//\u521d\u59cb\u5316cover\n            ++cover[x][all[i].bottom];\n        }\n        for (int y(all[i].top); y <= all[i].bottom; ++y)\n        {\n            ++cover[all[i].left][y];\n            ++cover[all[i].right][y];\n        }\n    }\n    dfs(0);//\u5bfb\u627e\u65b9\u6848\uff0c\u8f93\u51fa\n    return 0;\n}\n```\n",
        "postTime": 1528977516,
        "uid": 33173,
        "name": "_J_C_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    },
    {
        "content": "floodfill+\u62d3\u8865\u6392\u5e8f\n\n\u4ee5\u4e0b\u662f\u672c\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801\uff08\u771f\u7684\u4e0d\u597d\u770b\uff0c\u6240\u4ee5\u5c31\u522b\u6284\u4e86\uff09\n\n\n\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<cstdio>\n#include<queue>\n#include<stack>\n#include<set>\n#include<map>\n#include<vector>\n#include<climits>\n#define rep(i,s,n) for(int (i)=(s);(i)<=(n);(i)++)\nusing namespace std;\n```\nstatic int ind[27],n,h,w,Map[31][31],\nvis[27],G[27][27],sqx[27][2],sqy[27][2],ccnt,q[27];\n\n\n\n\n\n```cpp\nchar s[27]={0};int num[27]={0};\nvoid work(int clr)\n{\n    int lu[2],rd[2];int p;\n    lu[0]=sqx[clr][0];lu[1]=sqy[clr][0];\n    rd[0]=sqx[clr][1];rd[1]=sqy[clr][1];\n    rep(i,lu[1]+1,rd[1]) if(((p=Map[lu[0]][i])!=clr)&&!G[clr][p]) ind[p]++,G[clr][p]=1;\n    rep(i,lu[0]+1,rd[0]) if(((p=Map[i][rd[1]])!=clr)&&!G[clr][p]) ind[p]++,G[clr][p]=1;\n    rep(i,lu[1],rd[1]-1)\n    if(((p=Map[rd[0]][i])!=clr)&&!G[clr][p])\n    ind[p]++,G[clr][p]=1;\n    rep(i,lu[0],rd[0]-1) if(((p=Map[i][lu[1]])!=clr)&&!G[clr][p]) ind[p]++,G[clr][p]=1;\n}\nvoid toposort(int dep,string str)\n{\n    if(dep>ccnt) {cout<<str<<endl;return;}\n    rep(i,1,ccnt)\n      if(!ind[q[i]]&&!vis[q[i]])\n      {\n          vis[q[i]]=1;\n          rep(j,1,ccnt) if(G[q[i]][j]) ind[j]--;\n          str+=s[q[i]];\n          toposort(dep+1,str);\n          str.erase(str.size()-1,1);\n          rep(j,1,ccnt) if(G[q[i]][j]) ind[j]++;\n          vis[q[i]]=0;\n        }\n}\nint main()\n{                \n  freopen(\"e:/in.txt\",\"r\",stdin);\n     scanf(\"%d%d\",&h,&w);\n     rep(i,1,26) sqx[i][0]=sqy[i][0]=INT_MAX;\n     rep(i,1,26) sqx[i][1]=sqy[i][1]=INT_MIN;\n     rep(i,1,h)\n       rep(j,1,w)\n       {\n           int t;\n        char ch;\n          ch=getchar();\n           while((ch<'A'||ch>'Z')&&ch!='.')\n              ch=getchar(); \n           if(ch=='.') continue;\n           if(!num[ch-'A'+1]) s[++ccnt]=ch,t=ccnt,num[ch-'A'+1]=t;else t=num[ch-'A'+1];\n           Map[i][j]=t;\n           sqx[t][0]=min(i,sqx[t][0]);sqx[t][1]=max(i,sqx[t][1]);\n           sqy[t][0]=min(j,sqy[t][0]);sqy[t][1]=max(j,sqy[t][1]);\n      }\n  int t=0;\n    rep(i,1,27) if(num[i]) q[++t]=num[i]; \n  rep(i,1,ccnt) \n    work(i);\n  toposort(1,\"\");\n  return 0;\n}//by lyyz-ljy\n```",
        "postTime": 1474801636,
        "uid": 17378,
        "name": "Vin_1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2741 \u3010[USACO4.4]\u91cd\u53e0\u7684\u56fe\u50cfFrame Up\u3011"
    }
]