[
    {
        "content": "\u5148$\\%$\u4e00\u4e0b\u795e\u4ed9\u7684$dp$\u505a\u6cd5\n\n------------\n\n\u8fd9\u9898\u4e00\u770b$n+m\u226410^5$\uff0c\u5c31\u77e5\u9053\u8981\u5408\u5e76\u8d77\u6765\u4e86(\u5927\u96fe\n\n\u518d\u770b$k\u22645$\uff0c\u90a3\u5c31\u53ea\u7528\u76f4\u63a5$DFS$\u679a\u4e3e\u64cd\u4f5c\u65b9\u6848\n\n\u8bb0\u5f55\u5728\u5b57\u7b26\u4e32A\u7684\u5339\u914d\u4f4d\u7f6ex\u548c\u5728\u5b57\u7b26\u4e32B\u7684\u5339\u914d\u4f4d\u7f6ey\n\n\u8fd8\u8981\u8bb0\u5f55\u5269\u4f59\u64cd\u4f5c\u6570\u5224\u65ad\u662f\u5426\u7ec8\u6b62\n\n\u6bcf\u6b21\u8df3\u6389\u4e24\u4e2a\u540e\u7f00\u7684lcp\uff08\u4e5f\u5c31\u662f\u6700\u957f\u524d\u7f00\uff09\n\n\u76ee\u524d\u8df3\u5230\u7684\u5730\u65b9\u4e00\u5b9a\u662f\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\n\n\u4e5f\u5c31\u662f$A[x] \\ne B[y]$\n\n\u5fc5\u7136\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\n\n\u63d2\u5165\uff1a\u5728$A[x]$\u524d\u9762\u63d2\u5165\u4e00\u4e2a\u548c$B[y]$\u4e00\u6837\u7684\u5b57\u7b26\uff0c$x$\u7684\u4f4d\u7f6e\u4e0d\u53d8\uff0c$y$\u5f80\u540e\u4e00\u4e2a\n\n\u5220\u9664\uff1a\u5c06$A[x]$\u5220\u53bb\uff0c$x$\u5411\u540e\u4e00\u4e2a\n\n\u4fee\u6539\uff1a\u5c06$A[x]$\u7684\u5b57\u7b26\u6539\u4e3a$B[y]$\u7684\u5b57\u7b26\uff0c$x,y$\u5747\u5f80\u540e\u4e00\u4e2a\n\n\u6bcf\u6b21\u67d0\u4e2a\u4e32\u5339\u914d\u5230\u7ed3\u5c3e\u65f6\uff0c$B$\u4e2d\u7684\u67d0\u4e2a\u533a\u95f4\u7684\u524d\u7f00\u90fd\u4f1a\u5408\u6cd5\uff0c\u6ce8\u610f\u5230\u8fd9\u4e9b\u5408\u6cd5\u7684\u524d\u7f00\u957f\u5ea6\u4e0e$A$\u957f\u5ea6\u76f8\u5dee\u4e00\u5b9a\u4e0d\u8d85\u8fc7$k$\uff0c\u4e8e\u662f\u7528\u4e00\u4e2a$2*k+1$\u7684\u5dee\u5206\u6570\u7ec4\u8bb0\u5f55\u7b54\u6848\u5373\u53ef\n\n\u6bcf\u6b21$DFS$\u7531\u4e8e\u8f6c\u79fb\u65f6\u4e00\u5b9a\u4f1a\u589e\u52a0\u4e00\u6b21\u64cd\u4f5c\u6570\uff0c\u6240\u4ee5\u6700\u591a\u9012\u5f52$k$\u6b21\uff0c\u6700\u5dee\u590d\u6742\u5ea6\u4e3a$O(3^k)$\n\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a$O(n\\log n+n3^k)$\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\n\n#define max(x,y) (x>y?x:y)\n#define min(x,y) (x<y?x:y)\n#define int long long\nconst int M=1e5+5;\n\nint n,m=125,ans=0,k,sl,tl,L,R,now,pre[M];\nint tx[M],tp[M],sa[M],rk[M],height[M];\nint st[M][35],log[M];\nchar r[M],s[M],t[M];\n\nvoid jsort(){\n\tfor(int i=0;i<=m;i++) tx[i]=0;\n\tfor(int i=1;i<=n;i++) tx[rk[i]]++;\n\tfor(int i=1;i<=m;i++) tx[i]+=tx[i-1];\n\tfor(int i=n;i>=1;i--) sa[tx[rk[tp[i]]]--]=tp[i];\n}\n\nvoid Build_SA(){//\u677f\u5b50 \n\tjsort();//O(n)\u7684\u57fa\u6392 \n\tfor(int w=1,p=0;p<n;m=p,w<<=1){\n\t\tp=0;\n\t\tfor(int i=1;i<=w;i++) tp[++p]=n-w+i;\n\t\tfor(int i=1;i<=n;i++) if(sa[i]>w) tp[++p]=sa[i]-w;\n\t\tjsort();\n\t\tstd::swap(tp,rk);\n\t\trk[sa[1]]=p=1;\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tif(tp[sa[i-1]]==tp[sa[i]]&&tp[sa[i-1]+w]==tp[sa[i]+w]) rk[sa[i]]=p;\n\t\t\telse rk[sa[i]]=++p;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) sa[i-1]=sa[i]-1;//\u5c06SA\u7ed9\u53d8\u4e3a0-(n-1) \n}\n\nvoid Build_Height(){//\u6c42height \n\tfor(int i=0;i<n;i++) rk[sa[i]]=i;\n\tint k=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(!rk[i]) continue;\n\t\tif(k) k--;\n\t\tint j=sa[rk[i]-1];\n\t\twhile(r[i+k]==r[j+k]) k++;\n\t\theight[rk[i]]=k;\n\t}\n}\n\nvoid Build_ST(){//st\u8868\u4f18\u5316\u6c42lcp \n\tfor(int i=2;i<=n;i++) log[i]=log[i>>1]+1;\n\tfor(int i=0;i<n;i++) st[i][0]=height[i];\n\tfor(int j=1;j<=25;++j){\n\t\tfor(int i=0;i+(1<<j)-1<n;i++){\n\t\t\tst[i][j]=min(st[i][j-1],st[i+(1<<j-1)][j-1]);\n\t\t}\n\t}\n}\n\nint Query(int l,int r){//O(1)\u67e5\u8be2\u4e24\u4e2a\u5b57\u7b26\u4e32\u5206\u522b\u7684\u540e\u7f00l\u548c\u540e\u7f00r\u7684lcp\u7684\u957f\u5ea6\n\tint k=log[r-l+1];\n\treturn min(st[l][k],st[r-(1<<k)+1][k]);\n}\n\nvoid DFS(int x,int y,int z){//\u7206\u641c\uff0cx\u4ee3\u8868\u5728\u5b57\u7b26\u4e32A\u7684\u5339\u914d\u4f4d\u7f6e\uff0cy\u4ee3\u8868\u5728\u5b57\u7b26\u4e32B\u7684\u5339\u914d\u4f4d\u7f6e\uff0cz\u4ee3\u8868\u5269\u4f59\u64cd\u4f5c\u6570 \n\tif(z>k) return ;\n\tint l=rk[x],r=rk[y];\n\tif(l>r) swap(l,r);\n\tint lcp=Query(l+1,r);\n\tx+=lcp,y+=lcp;//\u8df3\u8fc7\u76f8\u540c\u7684\u5b57\u7b26\u4e32 \n\tif(x==sl||y==n){\n\t\tint d=k-z-(sl-x);\n\t\tif(d<0) return ;\n\t\tint l=max(y-1-d,now),r=min(y-1+d,n-1);\n\t\tL=min(l,L),R=max(r+1,R);\n\t\tpre[l]++,pre[r+1]--;\n\t\treturn ;\n\t}\n\tDFS(x+1,y,z+1),DFS(x,y+1,z+1),DFS(x+1,y+1,z+1);//\u4e09\u79cd\u72b6\u6001\u8f6c\u79fb \n}\n\nsigned main(){\n\tscanf(\"%lld%s%s\",&k,s,t);\n\tsl=strlen(s),tl=strlen(t);\n\tfor(int i=0;i<sl;i++) r[n++]=s[i];r[n++]='#';//\u5206\u5f00\u524d\u540e\u5b57\u7b26\u4e32 \n\tfor(int i=0;i<tl;i++) r[n++]=t[i];\n\tfor(int i=1;i<=n;i++) rk[i]=r[i-1],tp[i]=i;\n\tBuild_SA(),Build_Height(),Build_ST();\n\tfor(int i=0;i<tl;i++){\n\t\tnow=sl+i+1,L=n-1,R=0;\n\t\tDFS(0,sl+i+1,0);\n\t\tfor(int j=L;j<=R;++j) ans+=(pre[j]+=pre[j-1])>0;\n\t\tfor(int j=L;j<=R;++j) pre[j]=0;\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n```\n",
        "postTime": 1580704044,
        "uid": 116015,
        "name": "bellmanford",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5479 \u3010[BJOI2015]\u9690\u8eab\u672f\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5479)\n\n---\n\n\u627e\u904d\u5168\u7f51\uff08\u529b\u6240\u80fd\u53ca\u7684\u8303\u56f4\uff09\u90fd\u7528\u7684$SA$\u5b9e\u73b0\uff0c\u5bf9\u4e8e\u6211\u8fd9\u79cd\u5b66\u4e86$SAM$\u5c31\u61d2\u5730\u641e$SA$\u7684\u540c\u5b66\u975e\u5e38\u4e0d\u53cb\u597d\uff0c\u4e8e\u662f\u5199\u4e0b\u8fd9\u7bc7\u7528$SAM$\u5b9e\u73b0\u7684\u9898\u89e3\u4ee5\u4f9b\u540e\u4eba\u5b66\u4e60\u3002\n\n---\n\u6ce8\u610f\u5230$k$\u975e\u5e38\u5c0f\uff0c\u4e0d\u96be\u60f3\u5230\u66b4\u529b\u641c\u51fa\u7528\u5b8c$k$\u6b21\u64cd\u4f5c\u540e\u80fd\u5339\u914d\u7684\u6700\u77ed\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5408\u6cd5\u7684\u8303\u56f4\uff0c\u7edf\u8ba1\u8fd9\u4e9b\u8303\u56f4\u7684\u5e76\u5c31\u662f\u7b54\u6848\u3002\n\n\u56e0\u4e3a\u53ea\u6709\u51fa\u73b0\u4e0d\u80fd\u5339\u914d\u7684\u5b57\u7b26\u4e32\u624d\u9700\u8981\u64cd\u4f5c\uff0c\u73b0\u5728\u601d\u8003\u80fd\u4e0d\u80fd\u52a0\u901f\u5339\u914d\u5230\u4e0d\u80fd\u5339\u914d\u7684\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\u62bd\u8c61\u51fa\u6765\u5c31\u662f\u8981\u6c42\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u8fd9\u4e2a\u524d\u7f00\u5f88\u96be\u641e\uff0c\u6211\u4eec\u5012\u7740\u5efa\u7acb$SAM$\uff0c\u8fd9\u6837\u76f8\u5f53\u4e8e\u6c42\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\uff0c\u8fd9\u6837\u5728\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u76f8\u5f53\u4e8e\u6c42\u4e24\u4e2a\u5e95\u5c42\u8282\u70b9\u7684\u540e\u7f00\u94fe\u63a5\u7684$lca$\u3002\uff08\u53ef\u4ee5\u63d0\u524d\u9884\u5904\u7406\u540e$O(1)$\u67e5\u8be2\uff09\n\n\u6545\u4f7f\u7528$SAM$\u52a0\u901f\u540e\u6bcf\u6b21dfs\u90fd\u4f1a\u4f7f\u5f97\u6b21\u6570$+1$,\u8fd9\u6837\u603b\u5171\u8fed\u4ee3\u6b21\u6570\u4e3a$O(3^5)$\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3a$O(1)$\uff0c\u603b\u5171\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4f4d\u7f6edfs\u6700\u591a$1e5$\u6b21\u3002\n\n\u6545\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nlogn+3^5n)$\u3002\n\ncode\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int M=1e6+5;\nint T,lens,lent,n,k,tot=1,ed=1,lg[M],re[M],minn[M][21],re1[M],re2[M],cnt[M];\n\nstruct SAM{\n\tint mp[M][30],no,fa[M],len[M],etot,dep[M],head[M],nex[M],go[M],dfn[M],st[M];\n\tvoid Insert(int c,int pos){\n\t\tint p=ed;ed=++tot;len[ed]=pos;re[pos]=ed;\n\t\tfor(;p&&mp[p][c]==0;p=fa[p]) mp[p][c]=ed;\n\t\tif(!p){\n\t\t\tfa[ed]=1;return;\n\t\t}\n\t\tint q=mp[p][c];\n\t\tif(len[q]==len[p]+1){\n\t\t\tfa[ed]=q;return;\n\t\t}\n\t\t++tot;len[tot]=len[p]+1;\n\t\tfor(int i=0;i<=26;i++) mp[tot][i]=mp[q][i];\n\t\tfa[ed]=tot;fa[tot]=fa[q];fa[q]=tot;\n\t\tfor(;p&&mp[p][c]==q;p=fa[p]) mp[p][c]=tot;\n\t}\n\t\n\tinline void Addedge(int u,int v){\n\t\tnex[++etot]=head[u];head[u]=etot;go[etot]=v;\n\t}\n\tvoid dfs(int u){\n\t\tdfn[++no]=u;st[u]=no;\n\t\tfor(int i=head[u];i;i=nex[i]){\n\t\t\tint v=go[i];dep[v]=dep[u]+1;dfs(v);dfn[++no]=u;\n\t\t}\n\t}\n\tinline void Build_G(){\n\t\tfor(int i=2;i<=tot;i++) Addedge(fa[i],i);\n\t\tdfs(1);\n\t}\n\t\n\tinline int Min(int x,int y){return dep[x]<dep[y]?x:y;}\n\tvoid Build_ST(){\n\t\tfor(int i=1;i<=no;i++) minn[i][0]=dfn[i];\n\t\tfor(int i=1;i<=lg[tot*2];i++)\n\t\t  for(int j=1;j+(1<<i)-1<=tot*2;j++)\n\t\t  \tminn[j][i]=Min(minn[j][i-1],minn[j+(1<<(i-1))][i-1]);\n\t}\n\tinline int Getlca(int x,int y){\n\t\tif(st[x]>st[y]) swap(x,y);\n\t\tint l=st[x],r=st[y],k=lg[r-l+1];\n\t\treturn Min(minn[l][k],minn[r-(1<<k)+1][k]);\n\t}\n\tinline int Lcp(int x,int y){return len[Getlca(x,y)];}\n}sam;\n\nvoid dfs(int x,int y,int z){\n\tif(z>k) return;\n\tint lcp=sam.Lcp(re[re1[x]],re[re2[y]]);\n\tx+=lcp;y+=lcp;\n\tif(x==lens||y==lent){\n\t\tint d=k-z-(lens-x);\n\t\tif(d<0) return;\n\t\tint l=max((int)0,y-T-d),r=min(lent-1,y-T+d);\n\t\tcnt[l]++;cnt[r+1]--;return;\n\t}\n\tdfs(x+1,y+1,z+1);\n\tdfs(x+1,y,z+1);\n\tdfs(x,y+1,z+1);\n}\n\nstring s,t;\nsigned main(){\n\tcin>>k>>s>>t;\n\tlens=s.size(),lent=t.size();\n\tfor(int i=0;i<lens;i++) re1[i]=lent+lens+1-i;\n\tfor(int i=0;i<lent;i++) re2[i]=lent-i;\n\ts=s+\"#\";s=s+t;\n\t\n\tfor(int i=2;i<=1000000;i++) lg[i]=lg[i>>1]+1;\n\tint len=s.size();\n\tfor(int i=len-1;i>=0;i--){\n\t\tif(s[i]=='#') sam.Insert(26,len-i);\n\t\telse sam.Insert(s[i]-'A',len-i);\n\t}\n\tsam.Build_G();sam.Build_ST();\n\t\n\tint L=max((int)0,lens-k),R=min(lent,lens+k);\n\tint ans=0;\n\tfor(int i=0;i<lent;i++){\n\t\tT=i;\n\t\tdfs(0,i,0);\n\t\tfor(int i=L;i<=R;i++){\n\t\t\tcnt[i]+=cnt[i-1];\n\t\t}\n\t\tfor(int i=L;i<=R;i++) if(cnt[i]) ans++,cnt[i]=0;\n\t}\n\t\n\tcout<<ans<<endl;\n\treturn 0; \n}\n```\n",
        "postTime": 1602166584,
        "uid": 48324,
        "name": "detect",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 - [BJOI2015]\u9690\u8eab\u672f"
    },
    {
        "content": "\u8003\u8651\u7f16\u8f91\u8ddd\u79bb\uff0c\u6211\u4eec\u8003\u8651\u66b4\u529b\u7684\u7b97\u6cd5\u662f\u66b4\u529bdp\uff0c\u590d\u6742\u5ea6\u5f88\u5927\uff0c\u4f46\u662f\u6838\u5fc3\u601d\u8def\u662f\u4e00\u81f4\u7684\u3002\n\n\u66b4\u529bdp\u7684\u6838\u5fc3\u65e0\u975e\u5c31\u4e09\u79cd\u8f6c\u79fb\u3002\u7136\u540e\u6211\u4eec\u7531\u4e8e\u9650\u5236\u7684\u7f16\u8f91\u8ddd\u79bb\u4e0d\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5DFS\u66b4\u529b\u6765\u679a\u4e3e\u8f6c\u79fb\uff0c\u7136\u540e\u6c42\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u4f4d\u7f6e\u5373\u53ef\uff01\n\n\u6211\u4eec\u8003\u8651\u5177\u4f53\u8f6c\u79fb\u5c31\u662f\u6bcf\u6b21\u8bb0\u5f55x\u548cy\u7136\u540e\u66b4\u529b\u8f6c\u79fb\u5411\u52a0\u4e0a\u5b83\u4eec\u7684lcp\u5373\u53ef\uff0c\u8fd9\u91cc\u7684lcp\u53ef\u4ee5\u901a\u8fc7\u5efa\u7acbSuffixArray\uff0c\u7136\u540e\u6c42\u51faheight\u6765O(1)\u6c42\u51fa\uff08\u5e38\u6570\u4e0d\u5927\uff0c\u5c31ST\u8868\u7684\u67e5\u8be2\uff09\n\n\uff08\u4ee5\u4e0b\u628ax\u548cy\u770b\u505a\u5750\u6807\uff0c\u4e24\u4e2apos\u5206\u522b\u662fx\u548cy\u5728\u5750\u6807\u4e0a\u79fb\u52a8\uff0c\u66b4\u529b\u6765\u5b8c\u6210\u8fd9\u4e2adp\u7684\u8fc7\u7a0b\uff09\n\u5269\u4e0b\u6765\u6211\u4eec\u8003\u8651\u4e09\u79cd\u8f6c\u79fb\u5206\u522b\u662f(x + 1, y + 1), (x + 1, y), (x, y + 1)\uff0c\u968f\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u662f\u52a0\u4e00\u5462\uff1f\u5982\u679c\u6211\u4eec\u662f\u5220\u9664\u64cd\u4f5c\u5462\uff0c\u6211\u4eec\u5047\u8bbe\u662fx\u7684\u5750\u6807\u5220\u9664\u5373\u662f(x - 1, y)\u53d1\u73b0\u548c(x, y + 1)\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u56e0\u6b64\u80af\u5b9a\u6ca1\u6709(x, y + 1)\u4f18\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u8bc1\u8fd9\u79cd\u60c5\u51b5\u662f\u5305\u542b\u5728\u6211\u4eec\u7684\u8003\u8651\u8303\u56f4\u5185\u7684\uff0c\u540c\u7406y\u5750\u6807\u4e5f\u53ef\u8bc1\u3002\n\n\u6700\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u5f53\u5b57\u7b26\u4e32s\u5df2\u7ecf\u5b8c\u6210\u5339\u914d\u7684\u65f6\u5019\u4f46\u662ft\u53ef\u80fd\u6b21\u6570\u4e0d\u4e00\u5b9a\u5230\u8fbe\u9650\u5236\u7684k\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u6709\u4e00\u79cd\u60c5\u51b5\u662f\u5220\u9664t\u4e2d\u4ee5\u5339\u914d\u7684\u82e5\u5e72\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u5728\u8fbe\u5230\u9650\u5236\u7684\u65f6\u5019\u7279\u5224\u4e00\u4e0b\u8fd9\u79cd\u60c5\u51b5\uff0c\u7136\u540e\u591a\u4e00\u4e2a\u72b6\u6001\u4e3a(x, y - 1)\u5c31\u53ef\u4ee5\u4e86\uff08\u5176\u5b9e\u6709\u8fb9\u754c\u6bd4\u8f83\u590d\u6742\u7684O(1)\u6c42\u89e3\u7684\u505a\u6cd5\uff0c\u5927\u6982\u662f\u4e00\u4e2a\u533a\u95f4\u90fd\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c\u7136\u540e\u7edf\u8ba1\u533a\u95f4\u5dee\u5206\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u4f5c\u8005\u4e3a\u4e86\u9632\u6b62\u8fb9\u754c\u7b49\u591a\u79cd\u60c5\u51b5\u5c31\u6ca1\u6709\u5199\uff09\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u7a0d\u5927\n\n\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6O((n + m) log (n + m) + (n + m) * (4 ^ 5))2s\u80fd\u8fc7\n\n\u5b9e\u9645(4 ^ 5)\u662f\u5361\u4e0d\u6ee1\u7684\uff0c\u56e0\u4e3a\u53ea\u8981\u5f53\u4e00\u4e2a\u5339\u914d\u5b8c\u6210\u4e86\u4ee5\u540e\u624d\u4f1a\u6709\u7b2c4\u79cd\u8f6c\u79fb\uff0c\u5361\u4e0d\u6ee1\u518d\u52a0\u4e0aST\u8868\u7684\u8d85\u5c0f\u5e38\u6570\u4ee3\u7801\u51e0\u4e4e\u548c\u6807\u7b97\u5dee\u4e0d\u591a\u5feb\uff08~~\u5176\u5b9e\u5c31\u662f\u6807\u7b97~~\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\ninline int read() {\n\tchar c = getchar(); int x = 0, f = 1;\n\twhile (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n\treturn x * f;\n}\n\nconst int N = 100005;\n\nint k, n, m, c[N], rs[N], rt[N];\nint stk[N], tp; char s[N], t[N];\n\nstruct SuffixArray {\n\tint buc[N], sa[N], rk[N], fir[N], sec[N]; int hei[N], lg[N], mn[N][21];\n\t\n\tint LCP(int x, int y) {\n\t\tint l = rk[x], r = rk[y];\n\t\tif (l > r) swap(l, r); r--;\n\t\tint tt = lg[r - l + 1];\n\t\treturn min(mn[l][tt], mn[r - (1 << tt) + 1][tt]);\n\t}\n\tvoid suffix_sort(int n) {\n\t\tfor (int i = 1; i <= n; i++) buc[c[i]]++;\n\t\tfor (int i = 1; i < N; i++) buc[i] += buc[i - 1];\n\t\tfor (int i = n; i >= 1; i--) sa[buc[c[i]]--] = i;\n\t\trk[sa[1]] = 1;\n\t\tfor (int i = 2; i <= n; i++) rk[sa[i]] = rk[sa[i - 1]] + (c[sa[i]] != c[sa[i - 1]]);\n\t\tfor (int k = 1; k <= n; k <<= 1) {\n\t\t\tfor (int i = 1; i <= n; i++) fir[i] = rk[i], sec[i] = (i + k <= n ? rk[i + k] : 0);\n\t\t\tmemset(buc, 0, sizeof(buc));\n\t\t\tfor (int i = 1; i <= n; i++) buc[sec[i]]++;\n\t\t\tfor (int i = 1; i <= n; i++) buc[i] += buc[i - 1];\n\t\t\tfor (int i = n; i >= 1; i--) rk[buc[sec[i]]--] = i;\n\t\t\tmemset(buc, 0, sizeof(buc));\n\t\t\tfor (int i = 1; i <= n; i++) buc[fir[i]]++;\n\t\t\tfor (int i = 1; i <= n; i++) buc[i] += buc[i - 1];\n\t\t\tfor (int i = n; i >= 1; i--) sa[buc[fir[rk[i]]]--] = rk[i];\n\t\t\trk[sa[1]] = 1;\n\t\t\tfor (int i = 2; i <= n; i++) rk[sa[i]] = rk[sa[i - 1]] + (fir[sa[i]] != fir[sa[i - 1]] || sec[sa[i]] != sec[sa[i - 1]]);\n\t\t}\n\t}\n\tvoid get_height(int n) {\n\t\tint len = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (len) len--; if (rk[i] == n) continue;\n\t\t\tint pos = sa[rk[i] + 1];\n\t\t\twhile (i + len <= n && c[i + len] == c[pos + len]) len++;\n\t\t\thei[rk[i]] = len;\n\t\t}\n\t\tlg[0] = -1;\n\t\tfor (int i = 1; i < n; i++) mn[i][0] = hei[i], lg[i] = lg[i >> 1] + 1;\n\t\tfor (int k = 1; k <= 20; k++)\n\t\t\tfor (int i = 1; i + (1 << k) - 1 < n; i++) mn[i][k] = min(mn[i][k - 1], mn[i + (1 << k - 1)][k - 1]);\n\t}\n} SA;\n\nvoid DFS(int dep, int ps, int pt) {\n\tif (dep > k) return; \n\tif (ps <= n && pt <= m) {\n\t\tint lcp = SA.LCP(rs[ps], rt[pt]);\n\t\tps += lcp, pt += lcp;\n\t}\n\tif (ps == n + 1) {\n\t\tstk[++tp] = pt;\n\t\tif (pt > 1) DFS(dep + 1, ps, pt - 1); \n\t}\n\tif (ps <= n && pt <= m) DFS(dep + 1, ps + 1, pt + 1);\n\tif (ps <= n) DFS(dep + 1, ps + 1, pt);\n\tif (pt <= m) DFS(dep + 1, ps, pt + 1);\n}\n\nint main() {\n\tk = read(); scanf(\"%s\", s + 1); scanf(\"%s\", t + 1);\n\tn = strlen(s + 1); m = strlen(t + 1); int len = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tc[++len] = s[i] - 'A' + 1; rs[i] = len; \n\t}\n\tc[++len] = 27;\n\tfor (int i = 1; i <= m; i++) {\n\t\tc[++len] = t[i] - 'A' + 1; rt[i] = len;\n\t}\n\tSA.suffix_sort(len), SA.get_height(len);\n\tll ans = 0;\n\tfor (int i = 1; i <= m; i++) {\n\t\ttp = 0, DFS(0, 1, i);\n\t\tsort(stk + 1, stk + tp + 1), tp = unique(stk + 1, stk + tp + 1) - stk - 1;\n\t\tans += (ll)tp;\n\t}\n\tprintf(\"%lld\\n\", ans); \n\treturn 0;\n}\n\n```\n",
        "postTime": 1595595399,
        "uid": 203968,
        "name": "ConorGallagher23",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5479 \u3010[BJOI2015]\u9690\u8eab\u672f\u3011"
    }
]