[
    {
        "content": "### \u6570\u5217\u524d\u7f00\u548c 3\n\n\u8fd9\u662f\u4e00\u9053\u6d1b\u8c37\u590f\u4ee4\u8425\u7684\u4f5c\u4e1a\u9898\uff0c\u51fa\u8fd9\u9053\u9898\u7684\u76ee\u7684\u662f\u5f3a\u8c03\u975e\u4ea4\u6362\u7fa4\u7684\u533a\u95f4\u548c\u5fc5\u987b\u6ce8\u610f\u5de6\u53f3\u4e58\u7684\u533a\u522b\u3002\n\n\u8003\u8651\u7ef4\u62a4\u77e9\u9635\u7684\u524d\u7f00\u79ef\uff1a$s_i$ \u8868\u793a\u524d $i$ \u4e2a\u77e9\u9635\u7684\u4e58\u79ef\u3002 \u6ce8\u610f\u5bf9\u4e8e\u4e00\u4e2a $[l, r]$ \u7684\u8be2\u95ee\uff0c$\\prod\\limits_{i = l}^r a_i \\neq s_r \\times s_{l-1}^{-1}$ \u3002\u4f8b\u5982\uff1a$CD \\neq ABCD \\times (AB)^{-1}$\u3002\n\n\u4f46\u662f\u6ce8\u610f\u5230 $(AB)^{-1} = B^{-1} A^{-1}$\u3002\u6211\u4eec\u53ea\u8981\u5c06 $(AB)^{-1}$ \u5de6\u4e58\u4e0a $ABCD$\uff0c\u5c31\u6709 $(AB)^{-1} \\times ABCD = (B^{-1}(A^{-1}A)B)CD = CD$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6709 $\\prod\\limits_{i = l}^r a_i = s_{l - 1}^{-1} \\times s_r$\u3002\u7ef4\u62a4\u524d\u7f00\u79ef\uff0c\u505a\u4e00\u4e2a\u77e9\u9635\u6c42\u9006\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+q) k^3)$\u3002\n\n\u77e9\u9635\u6c42\u9006\u53ef\u4ee5\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\uff0c\u4f46\u56e0\u4e3a $k$ \u53ea\u6709 $2$ \u548c $3$\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u624b\u6413\u4e00\u4e0b\u4f34\u968f\u77e9\u9635\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u4f34\u968f\u77e9\u9635\u6cd5\u6c42\u9006\u77e9\u9635\u3002\n\n\u5bf9 $n$ \u9636\u77e9\u9635 $A=(a_{ij})_{n \\times n}$\uff0c\u5212\u53bb\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u540e\u5269\u4f59\u7684 $(n-1)$ \u9636\u884c\u5217\u5f0f\u7684\u503c\u79f0\u4e3a\u5143\u7d20 $a_{i,j}$ \u7684\u4f59\u5b50\u5f0f\uff0c\u8bb0\u4e3a $M_{i, j}$\u3002\u8bb0 $A_{i, j}=(-1)^{i+j}M_{i,j}$ \u4e3a $a_{i, j}$ \u7684\u4ee3\u6570\u4f59\u5b50\u5f0f\u3002\n\n$A$ \u7684\u4f34\u968f\u77e9\u9635 $A^*$ \u4e5f\u662f\u4e00\u4e2a $n$ \u9636\u77e9\u9635\uff0c\u5176\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u4e3a $a_{j, i}$ \u7684\u4ee3\u6570\u4f59\u5b50\u5f0f $A_{j, i}$\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0b\u6807\u662f\u53cd\u7740\u7684\uff0c\u5373\u4f34\u968f\u77e9\u9635\u7684 $i$ \u884c $j$ \u5217\u662f\u539f\u77e9\u9635 $j$ \u884c $i$ \u5217\u7684\u4ee3\u6570\u4f59\u5b50\u5f0f\uff09\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c$A^{-1} = \\frac{A^*}{|A|}$\uff0c\u5176\u4e2d $|A|$ \u662f $A$ \u7684\u884c\u5217\u5f0f\u3002\n\n\u5bf9\u4e8e\u4e8c\u9636\u77e9\u9635 $A = \\begin{pmatrix} a & b \\\\ c & d\\end{pmatrix}$\uff0c\u76f4\u63a5\u5957\u7528\u4e0a\u8ff0\u7ed3\u8bba\u5f97\u5230 $A^{-1} = \\frac{1}{ad - bc}\\begin{pmatrix} d & -b \\\\ -c & a\\end{pmatrix}$\uff1b\u5bf9\u4e8e\u4e09\u9636\u77e9\u9635\uff0c\u5176\u884c\u5217\u5f0f\u53ea\u6709\u516d\u9879\uff0c\u6240\u6709\u7684\u4ee3\u6570\u4f59\u5b50\u5f0f\u5747\u4e3a\u4e8c\u9636\u884c\u5217\u5f0f\uff0c\u90fd\u53ef\u4ee5\u8f7b\u677e\u7b97\u51fa\u3002\n\n```cpp\n#include <array>\n#include <iostream>\n#include <algorithm>\n\nconst int p = 1145141;\n\ntypedef long long int ll;\n\nint n, k, q;\nstd::array<int, p> inv;\n\nstruct Matrix {\n  ll A[3][3];\n\n  inline Matrix operator*(const Matrix& o) const {\n    Matrix ret;\n    for (int i = 0; i < k; ++i) {\n      for (int j = 0; j < k; ++j) {\n        ret.A[i][j] = 0;\n        for(int h = 0; h < k; ++h) {\n          ret.A[i][j] += A[i][h] * o.A[h][j];\n        }\n        ret.A[i][j] %= p;\n      }\n    }\n    return ret;\n  }\n\n  inline int Det2(ll a, ll b, ll c, ll d) { \n    int ret = (a * d - b * c) % p;\n    if (ret < 0) ret += p;\n    return ret;\n  }\n\n  inline int Det() {\n    if (k == 2) { return Det2(A[0][0], A[0][1], A[1][0], A[1][1]); }\n    else {\n      ll ret = 0;\n      (ret += A[0][0] * A[1][1] * A[2][2]) %= p;\n      (ret += A[0][1] * A[1][2] * A[2][0]) %= p;\n      (ret += A[0][2] * A[1][0] * A[2][1]) %= p;\n      (ret -= A[0][2] * A[1][1] * A[2][0]) %= p;\n      (ret -= A[0][0] * A[1][2] * A[2][1]) %= p;\n      (ret -= A[0][1] * A[1][0] * A[2][2]) %= p;\n      (ret += p) %= p;\n      return ret;\n    }\n  }\n\n  inline Matrix operator~() {\n    ll d = inv[Det()];\n    Matrix ret;\n    if (k == 2) {\n      ret.A[0][0] = A[1][1] * d % p;\n      ret.A[1][0] = (p - A[1][0]) * d % p;\n      ret.A[1][1] = A[0][0] * d % p;\n      ret.A[0][1] = (p - A[0][1]) * d % p;\n    } else {\n      ret.A[0][0] = Det2(A[1][1], A[1][2], A[2][1], A[2][2]) * d % p;\n      ret.A[1][0] = Det2(A[1][0], A[1][2], A[2][0], A[2][2]) * d % p;\n      ret.A[2][0] = Det2(A[1][0], A[1][1], A[2][0], A[2][1]) * d % p;\n      ret.A[0][1] = Det2(A[0][1], A[0][2], A[2][1], A[2][2]) * d % p;\n      ret.A[1][1] = Det2(A[0][0], A[0][2], A[2][0], A[2][2]) * d % p;\n      ret.A[2][1] = Det2(A[0][0], A[0][1], A[2][0], A[2][1]) * d % p;\n      ret.A[0][2] = Det2(A[0][1], A[0][2], A[1][1], A[1][2]) * d % p;\n      ret.A[1][2] = Det2(A[0][0], A[0][2], A[1][0], A[1][2]) * d % p;\n      ret.A[2][2] = Det2(A[0][0], A[0][1], A[1][0], A[1][1]) * d % p;\n      for (int i = 0; i < 3; ++i) {\n        for (int j = 0; j < 3; ++j) if ((i + j) & 1) {\n          ret.A[i][j] = p - ret.A[i][j];\n        }\n      }\n    }\n    return ret;\n  } \n};\nMatrix a[p];\n\nvoid get_inv(const int x) {\n  inv[1] = 1;\n  for (int i = 2; i < x; ++i) inv[i] = 1ll * (p - p / i) * inv[p % i] % p;\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(nullptr);\n  get_inv(p);\n  std::cin >> n >> k >> q;\n  for (int i = 0; i < k; ++i) a[0].A[i][i] = 1;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 0; j < k; ++j) {\n      for (int h = 0; h < k; ++h) {\n        std::cin >> a[i].A[j][h];\n      }\n    }\n    a[i] = a[i - 1] * a[i];\n  }\n  int ans = 0;\n  for (int l, r; q; --q) {\n    std::cin >> l >> r;\n    Matrix mul = (~a[l - 1]) * a[r];\n    for (int i = 0; i < k; ++i) {\n      for (int j = 0; j < k; ++j) {\n        ans ^= mul.A[i][j];\n      }\n    }\n  }\n  std::cout << ans << std::endl;\n}\n```\n\n",
        "postTime": 1530009957,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "B3646"
    },
    {
        "content": "#### \u77e9\u9635\u6c42\u9006\u3001\u9ad8\u65af\u6d88\u5143\n\n------------\n\n\u9898\u76ee\u8981\u6c42\u5feb\u901f\u6c42\u51fa\u4e00\u6bb5\u77e9\u9635\u7684\u4e58\u79ef\uff0c\u8003\u8651\u524d\u7f00\u79ef\u3002\u4e3a\u4e86\u5c06\u4efb\u610f\u4e00\u6bb5\u77e9\u9635\u4e58\u79ef\u63d0\u53d6\u51fa\u6765\uff0c\u9700\u8981\u6c42\u524d\u7f00\u9006\u5143\u3002\n\n\u9898\u76ee\u4e2d\u8bf4\u660e\u4e86\u7ed9\u51fa\u7684\u662f\u975e\u5947\u5f02\u77e9\u9635\uff0c\u5373\u77e9\u9635\u53ef\u9006\uff0c\u6240\u4ee5\u524d\u7f00\u9006\u5143\u7684\u601d\u8def\u662f\u6b63\u786e\u7684\u3002\n\n\u672c\u9898\u4e2d\u7684\u77e9\u9635\u53ea\u6709\u4e24\u79cd\uff0c\u53ef\u4ee5\u76f4\u63a5\u624b\u63a8\u6c42\u9006\u3002\u7b14\u8005\u611f\u89c9\u6709\u4e9b\u9ebb\u70e6\uff0c\u76f4\u63a5\u5199\u4e86[\u77e9\u9635\u6c42\u9006](https://www.luogu.com.cn/problem/P4783)\uff0c\u800c\u77e9\u9635\u6c42\u9006\u672c\u8d28\u4e0a\u662f[\u9ad8\u65af\u6d88\u5143](https://www.luogu.com.cn/problem/P3389)\u3002\n\n\u5b9e\u9645\u4f7f\u7528\u7684\u662f\u9ad8\u65af\u2014\u7ea6\u65e6\u6d88\u5143\u6cd5\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u67e5\u770b\u9ad8\u65af\u6d88\u5143\u9898\u89e3\u533a\u3002\n\n\u56e0\u4e3a $1145141$ \u662f\u8d28\u6570\u4e14\u7ed9\u51fa\u7684\u77e9\u9635\u5143\u7d20\u90fd\u5c0f\u4e8e\u5b83\uff0c\u6240\u4ee5\u77e9\u9635\u6240\u6709\u5143\u7d20\u7684\u9006\u5143\u90fd\u5b58\u5728\uff0c\u9884\u5904\u7406\u65f6\u9012\u63a8\u6c42\u51fa\u6240\u6709\u5c0f\u4e8e $1145141$ \u7684\u6b63\u6574\u6570\u9006\u5143\u5373\u53ef\u3002\n\n**\u6ce8\u610f\u77e9\u9635\u4e58\u6cd5\u4e0d\u7b26\u5408\u4ea4\u6362\u5f8b\uff0c\u5982\u679c\u60f3\u4ece\u524d\u7f00\u79ef $ABC$ \u4e2d\u83b7\u5f97 $C$\uff0c\u9700\u8981\u7528 $ABC$ \u5148\u540e\u5de6\u4e58 $A^{-1}$ \u548c $B^{-1}$\uff0c\u524d\u7f00\u9006\u5143\u9700\u8981\u4ee5 $C^{-1}B^{-1}A^{-1}$ \u5f62\u5f0f\u5b58\u4e0b\u624d\u80fd\u5f97\u5230 $C=(B^{-1}A^{-1})(ABC)$\u3002**\n\n\u5229\u7528\u7ed3\u6784\u4f53\u548c\u91cd\u8f7d\u8fd0\u7b97\u7b26\u53ef\u4ee5\u6a21\u5757\u5316\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconstexpr int mod=1145141;\nint n,k,q,ans,tmp[4][8],inv[1145141];\nstruct Matrix{\n\tint n,a[4][4];//\u4e0b\u6807\u4ece1\u5f00\u59cb \n\tMatrix(int x=0){n=x,memset(a,0,sizeof(a));}\n\tvoid reset(){//\u8bbe\u7f6e\u5355\u4f4d\u77e9\u9635 \n\t\tmemset(a,0,sizeof(a));//\u91cd\u65b0\u521d\u59cb\u5316 \n\t\tfor(int i=1;i<=n;i++) a[i][i]=1;\n\t}\n\tMatrix operator*(const Matrix &x)const{\n\t\tMatrix ret(n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\tret.a[i][j]=(ret.a[i][j]+1ll*a[i][k]*x.a[k][j])%mod;\n\t\treturn ret;\n\t}\n\tMatrix operator~(){//\u7ea6\u65e6-\u9ad8\u65af\u6d88\u5143\u6c42\u9006\u77e9\u9635 \n\t\tMatrix ret(n);\n\t\tmemset(tmp,0,sizeof(tmp));\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++) tmp[i][j]=a[i][j];\n\t\tfor(int i=1;i<=n;i++) tmp[i][i+n]=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=i;j<=n;j++) if(tmp[j][i]){\n\t\t\t\tif(i!=j) swap(tmp[i],tmp[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint niv=inv[tmp[i][i]];\n\t\t\tfor(int j=i;j<=n*2;j++) tmp[i][j]=1ll*tmp[i][j]*niv%mod;\n\t\t\tfor(int j=1;j<=n;j++) if(i!=j){\n\t\t\t\tint mti=tmp[j][i];\n\t\t\t\tfor(int k=i;k<=n*2;k++) tmp[j][k]=(tmp[j][k]-1ll*mti*tmp[i][k]%mod+mod)%mod;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++) ret.a[i][j]=tmp[i][j+n];\n\t\treturn ret;\n\t}\n\tint xorsum(){\n\t\tint ret=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++) ret^=a[i][j];\n\t\treturn ret;\n\t}\n}fac[1000001],mul[1000001];//\u524d\u7f00\u79ef \u524d\u7f00\u9006\u5143(\u53cd\u5411) \nistream &operator>>(istream &in,Matrix &x){\n\tx.n=k;//\u521d\u59cb\u5316\u77e9\u9635\u5927\u5c0f \n\tfor(int i=1;i<=k;i++)\n\t\tfor(int j=1;j<=k;j++) in>>x.a[i][j];\n\treturn in;\n}\nostream &operator<<(ostream &out,const Matrix &x){\n\tfor(int i=1;i<=k;i++){\n\t\tfor(int j=1;j<=k;j++) out<<x.a[i][j]<<' ';\n\t\tout<<'\\n';\n\t}\n\treturn out;\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);cout.tie(0);\n\tcin>>n>>k>>q,inv[1]=1;\n\tfor(int i=2;i<=mod-1;i++) inv[i]=mod-1ll*mod/i*inv[mod%i]%mod;\n\tfac[0].n=k,fac[0].reset();\n\tmul[0].n=k,mul[0].reset();//\u8fd9\u4e24\u4e2a\u77e9\u9635\u4e0d\u662f\u8f93\u5165\u7684,\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>fac[i];//\u8fd0\u7b97\u987a\u5e8f\u4e0d\u80fd\u6539\u53d8 \n\t\tmul[i]=(~fac[i])*mul[i-1];\n\t\tfac[i]=fac[i-1]*fac[i];\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tstatic Matrix sum;\n\t\tstatic int l,r;\n\t\tcin>>l>>r;\n\t\tsum=mul[l-1]*fac[r];\n\t\tans^=sum.xorsum();\n\t}\n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1683871046,
        "uid": 662295,
        "name": "Flanksy",
        "ccfLevel": 0,
        "title": "B3646 \u6570\u5217\u524d\u7f00\u548c 3"
    }
]