[
    {
        "content": "### \u89e3\u9898\u601d\u8def\n\n\u5148\u6765\u770b\u4e00\u53e5\u81f3\u5173\u91cd\u8981\u7684\u9898\u610f\uff1a\n\n> Z \u56fd\u7684\u6bcf\u4e2a\u57ce\u5e02\u6240\u5904\u7684\u7ecf\u5ea6\u90fd\u4e0d\u76f8\u540c\uff0c\u5e76\u4e14\u6700\u591a\u53ea\u548c\u4e00\u4e2a\u4f4d\u4e8e\u5b83\u4e1c\u8fb9\u7684\u57ce\u5e02\u76f4\u63a5\u901a\u8fc7\u516c\u8def\u76f8\u8fde\u3002\n\n\u89e3\u8bfb\u4e00\u4e0b\uff0c\u5c31\u662f\u70b9 $i$ \u8981\u4e48\u5411 $[1,\\ i-1]$ \u4e2d\u7684\u67d0\u4e00\u70b9\u8fde\u8fb9\uff0c\u8981\u4e48\u4e0d\u8fde\u3002\u8a00\u4e0b\u4e4b\u610f\uff0cZ \u56fd\u662f\u4e2a**\u68ee\u6797**\u3002\u90a3\u4e48\uff1a\n\n> \u5982\u679c\u67d0\u4e2a\u57ce\u5e02\u65e0\u6cd5\u5230\u8fbe\u9996\u90fd\uff0c\u5219\u8f93\u51fa\u4e24\u884c -1\u3002\n\n\u5c31\u5f88\u597d\u5224\u65ad\u4e86\uff0c\u53ea\u6709**\u6811**\u624d\u662f\u8fde\u901a\u7684\u68ee\u6797\uff0c\u800c\u6811\u5fc5\u5b9a\u6709 $n - 1$ \u6761\u8fb9\uff0c\u6545\u5148\u5224\u6389 $m \\neq n - 1$ \u3002\n\n\u4e8e\u662f\u4e4e\uff0c\u6211\u4eec\u7684\u95ee\u9898\u5c31\u653e\u5728\u4e86\u4e00\u68f5\u6811\u4e0a\uff0c\u5927\u81f4\u7684\u9898\u610f\u5c31\u662f\uff1a\n\n> \u7ed9\u6811\u8def\u5f84\u5256\u5206\uff0c\u4f7f\u6839\u51fa\u53d1\u8def\u5f84\u7ecf\u8fc7\u8f7b\u8fb9\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u6c42\u6700\u5c0f\u503c\u548c\u5408\u6cd5\u5256\u5206\u65b9\u6848\u6570\u3002\n\n---\n\n\u7b2c\u4e00\u95ee\u683c\u5916\u7b26\u5408\u6811\u5f62 dp \u7684\u6a21\u578b\uff0c\u600e\u4e48\u8bbe\u8ba1\u8fd9\u4e2a dp \u5462\uff1f\n\n\u5bb9\u6613\u60f3\u5230\uff0c\u7528 $f_{i,\\,u}$ \u8868\u793a\u70b9 $u$ \u5f80**\u4e0d\u8d85\u8fc7** $i$ \u4e2a\u513f\u5b50\u7684\u8fb9\u4fee\u6210\u4e86\u94c1\u8def\uff0c\u5b50\u6811\u5185\u7ed3\u70b9\u4e0d\u4fbf\u5229\u503c\u7684\u6700\u5927\u503c\uff0c\u663e\u7136 $i \\in [0,\\,2]$ \u3002\u76f4\u63a5\u7b97\u4e0d\u8d85\u8fc7 $i$ \u4e0d\u597d\u7b97\uff0c\u6ce8\u610f\u4e0b\u9762\u662f\u5148\u7b97\u51fa**\u7b49\u4e8e** $i$ \u7684\uff0c\u7136\u540e\u524d\u7f00 $\\min$ \u8f6c\u6362\u3002\n\n\u6811\u5f62 dp \u6700\u7ecf\u5178\u7684\u8f6c\u79fb\u65b9\u5f0f\uff1a\u626b\u8fc7\u6bcf\u4e2a\u513f\u5b50\uff0c\u4e00\u4e2a\u4e00\u4e2a\u8ba1\u7b97\u8d21\u732e\u3002\u8bbe\u8ba1\u7b97\u513f\u5b50 $v$ \u7684\u8d21\u732e\u524d\uff0c$f_{i,\\,u}$ \u7684\u503c\u662f $f'_{i,\\,u}$ \u3002\n\n\u4ece\u6613\u5230\u96be\uff0c\u9996\u5148\u662f $i = 0$ \u7684\u8f6c\u79fb\uff1a\n\n$$f_{0,\\,u} = \\max\\{f'_{0,\\,u},\\ f_{2,\\,v} + 1\\}$$\n\n\u539f\u7406\uff1a\u65e2\u7136\u4e0d\u4fee\u5efa\u94c1\u8def\uff0c\u5b50\u6811 $v$ \u91cc\u9762\u600e\u4e48\u4fee\u94c1\u8def\u5c31\u7ba1\u4e0d\u7740\u4e86\uff0c\u6240\u4ee5\u5f15\u7528\u7684\u662f $f_{2,\\,v}$ \uff0c\u5e76\u4e14\u4e0d\u4fbf\u5229\u503c\u4e5f\u4f1a\u56e0\u4e3a\u8fd9\u6761\u8f7b\u8fb9\u6574\u4f53 $+ 1$ \u3002\n\n\u7136\u540e\u662f $i = 1$ \u7684\u8f6c\u79fb\uff1a\n\n$$f_{1,\\,u} = \\min\\{\\max\\{f'_{1,\\,u},\\ f_{2,\\,v} + 1\\},\\ \\max\\{f'_{0,\\,u},\\ f_{1,\\,v}\\}\\}$$\n\n\u539f\u7406\uff1a\u4e0d\u4fee\u5efa\u94c1\u8def\u7684\u539f\u7406\u548c\u4e0a\u4e00\u4e2a\u8f6c\u79fb\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u91cc\u591a\u4e86\u4e00\u4e2a\u4fee\u5efa\u94c1\u8def\uff0c\u6240\u4ee5 $u,\\,v$ \u4e24\u8fb9\u90fd\u5f97\u5c11\u4e00\u6761\uff0c\u8f7b\u8fb9\u90fd\u4fee\u6210\u4e86\u91cd\u8fb9\uff0c$+ 1$ \u6254\u6389\u3002\n\n$i = 2$ \u7684\u8f6c\u79fb\u548c $i = 1$ \u662f\u7c7b\u4f3c\u7684\uff0c\u4e0d\u59a8\u81ea\u5df1\u53bb\u5199\u5199\u3002\n\n$$f_{2,\\,u} = \\min\\{\\max\\{f'_{2,\\,u},\\ f_{2,\\,v} + 1\\},\\ \\max\\{f'_{1,\\,u},\\ f_{1,\\,v}\\}\\}$$\n\n\u6574\u7406\u4e00\u4e0b:\n\n$$\\text{\u8fb9\u754c} \\begin{cases}f_{0,\\,u} =0\\\\f_{1,\\,u}=f_{2,\\,u}=\\infty\\end{cases}$$\n\n$$\\text{\u8f6c\u79fb} \\begin{cases}f_{0,\\,u} = \\max\\{f'_{0,\\,u},\\ f_{2,\\,v} + 1\\} \\\\f_{1,\\,u} = \\min\\{\\max\\{f'_{1,\\,u},\\ f_{2,\\,v} + 1\\},\\ \\max\\{f'_{0,\\,u},\\ f_{1,\\,v}\\}\\} \\\\f_{2,\\,u} = \\min\\{\\max\\{f'_{2,\\,u},\\ f_{2,\\,v} + 1\\},\\ \\max\\{f'_{1,\\,u},\\ f_{1,\\,v}\\}\\}\\end{cases}$$\n\n\u76f4\u63a5 dfs \u4e00\u904d\u6c42\u51fa $f$ \uff0c\u4e0d\u8981\u5fd8\u4e86\u524d\u7f00 $\\min$\uff0c\u7b2c\u4e00\u95ee\u5c31\u505a\u5b8c\u4e86\u3002\n\n---\n\n\u63a5\u7740\u505a\u7b2c\u4e8c\u95ee\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e0e\u7b2c\u4e00\u95ee\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\uff0c\u5b83\u4ecd\u7136\u662f\u8fd9\u4e2a\u6811\u5f62 dp\uff0c\u4f46\u6ca1\u90a3\u4e48\u7b80\u5355\u4e86\u3002\n\n\u5927\u529b\u8bbe\u4e00\u6ce2\u72b6\u6001\uff0c\u4ee4 $g_{i,\\,j,\\,u}$ \u8868\u793a\u70b9 $u$ \u5f80**\u4e0d\u8d85\u8fc7** $i$ \u4e2a\u513f\u5b50\u7684\u8fb9\u4fee\u6210\u4e86\u94c1\u8def\uff0c\u5b50\u6811\u5185\u7ed3\u70b9\u4e0d\u4fbf\u5229\u503c\u90fd**\u4e0d\u8d85\u8fc7** $j$ \u7684\u65b9\u6848\u6570\u3002\n\n\u4e5f\u8bb8\u4f60\u4f1a\u95ee\uff1a$i,\\,j$ \u90fd\u662f $n$ \u7ea7\u7684\uff0c\u8fd9\u4e00\u4e58\u5c31 $O(n^2)$ \u4e86\uff0c\u771f\u7684\u4e0d\u4f1a MLE\uff1f\n\n\u795e\u5947\u7684\u662f\uff0c\u8fd9\u4e2a $j$ \u554a\uff0c\u4ee5\u53ca\u6211\u4eec\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\uff0c\u4e0d\u8d85\u8fc7 $\\log_3n$\uff08\u6781\u9650\u6570\u636e\u4e0b $< 11$\uff09\u3002\u611f\u6027\u7406\u89e3\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u6811\u94fe\u5256\u5206\u6839\u51fa\u53d1\u8def\u5f84\u7ecf\u8fc7\u8f7b\u8fb9\u6570\u4e0d\u8d85\u8fc7 $\\log_2 n$ \uff08\u63d0\u793a\uff1a\u7528\u5b50\u6811\u5927\u5c0f\u8bc1\u660e\uff09\uff1f\u4f46\u6811\u94fe\u5256\u5206\u7684\u94fe\u662f\u76f4\u7684\uff0c\u800c\u975e V \u5b57\u5f62\uff0c\u8fd9\u9898\u662f V \u5b57\u5f62\u7684\u8def\u5f84\u5256\u5206\uff0c\u7136\u540e\u4ed4\u7ec6\u60f3\u60f3\u5dee\u5f02\u5c31\u660e\u767d\u6700\u521d\u7684\u7ed3\u8bba\u4e86\u3002\n\n\u6570\u7ec4\u5f00\u5f97\u4e0b\u4e86\uff0c\u5982\u4f55\u8f6c\u79fb\u5462\uff1f\n\n\u76f4\u63a5\u7b97\u4e0d\u8d85\u8fc7 $i$ \u8fd8\u662f\u4e0d\u597d\u7b97\uff0c\u5148\u7b97\u51fa**\u7b49\u4e8e** $i$ \u7684\uff0c\u7136\u540e\u524d\u7f00\u548c\u8f6c\u6362\u3002`\uff08\u5f02\u66f2\u540c\u5de5 1\uff09`\n\n\u4f9d\u65e7\u4ece\u6613\u5230\u96be\uff0c\u770b $i = 0$ \u7684\u8f6c\u79fb\u5f0f\uff0c\u548c $f$ \u7684\u662f\u4e0d\u662f\u6709\u70b9\u7c7b\u4f3c\uff1f`\uff08\u5f02\u66f2\u540c\u5de5 2\uff09`\n\n$$g_{0,\\,j,\\,u} = g'_{0,\\,j,\\,u} \\times g_{2,\\,j-1,\\,v}$$\n\n\u539f\u7406\u5f88\u7b80\u5355\uff0c\u4e0d\u8d58\u8ff0\u4e86\u3002$i \\geqslant 1$ \u7684\u8f6c\u79fb\u5f0f\u5c31\u66f4\u50cf\u4e86\uff1a\n\n$$g_{1,\\,j,\\,u} = g'_{1,\\,j,\\,u} \\times \\ g_{2,\\,j-1,\\,v} + g'_{0,\\,j,\\,u} \\times g_{1,\\,j,\\,v}$$\n\n$$g_{2,\\,j,\\,u} = g'_{2,\\,j,\\,u} \\times \\ g_{2,\\,j-1,\\,v} + g'_{1,\\,j,\\,u} \\times g_{1,\\,j,\\,v}$$\n\n\u53d1\u73b0\u6ca1\u6709\uff1f\u539f\u672c\u7684 $+ 1$ \u53d8\u6210 $- 1$ \u85cf\u5728\u4e0b\u6807\u91cc\u4e86\uff0c$\\min$ \u53d8\u6210\u4e86 $+$ \uff0c$\\max$ \u53d8\u6210\u4e86 $\\times$ \uff01\u5efa\u8bae\u60f3\u60f3\u4e3a\u4ec0\u4e48\u3002\n\n\n\u9644\u4e0a\u8fb9\u754c\u6574\u7406\u6574\u7406\uff0c\u5176\u5b9e\u8fb9\u754c\u4e0d\u8fc7\u662f\u628a $f$ \u7684 $0$ \u6362\u6210\u4e86 $1$ \uff0c$\\infty$ \u6362\u6210\u4e86 $0$ \uff1a`\uff08\u5f02\u66f2\u540c\u5de5 3\uff09`\n\n$$\\text{\u8fb9\u754c} \\begin{cases}g_{0,\\,j,\\,u} =1\\\\g_{1,\\,j,\\,u}=g_{2,j,\\,u}=0\\end{cases}$$\n\n$$\\text{\u8f6c\u79fb} \\begin{cases}g_{0,\\,j,\\,u} = g'_{0,\\,j,\\,u} \\times g_{2,\\,j-1,\\,v}\\\\g_{1,\\,j,\\,u} = g'_{1,\\,j,\\,u} \\times \\ g_{2,\\,j-1,\\,v} + g'_{0,\\,j,\\,u} \\times g_{1,\\,j,\\,v}\\\\g_{2,\\,j,\\,u} = g'_{2,\\,j,\\,u} \\times \\ g_{2,\\,j-1,\\,v} + g'_{1,\\,j,\\,u} \\times g_{1,\\,j,\\,v}\\end{cases}$$\n\n\u540c\u6837 dfs \u6c42 $g$ \u3002\u6c42\u5b8c\u4e4b\u540e\u7b54\u6848\u5c31\u5341\u5206\u660e\u6717\u4e86\u3002\n\n---\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n\u5177\u4f53\u5b9e\u73b0\u4e2d\u6ce8\u610f\u4e24\u70b9\uff08\u9488\u5bf9\u6211\u7684\u4ee3\u7801\uff09\uff1a\n\n> 1. $g$ \u7684\u8f6c\u79fb\u5f0f\u4e2d\u53ef\u80fd\u51fa\u73b0\u8d1f\u4e0b\u6807\uff0c\u8d1f\u4e0b\u6807\u7684 $g$ \u503c\u5f53\u7136\u662f $0$ \u3002\u636e\u6b64\uff0c\u6211\u7684\u4ee3\u7801\u4e2d $f$ \u7684\u503c\u548c $g$ \u7684 $j$ \u4e0b\u6807\u90fd\u6bd4\u73b0\u5b9e\u591a $1$ \uff0c\u4ee5\u514d\u8d1f\u4e0b\u6807\u7684\u51fa\u73b0\u540c\u65f6\u4f7f\u5f97\u4ee3\u7801\u6574\u6d01\u7f8e\u89c2\u3002\n\n> 2. \u8f6c\u79fb\u5f0f\u7684\u987a\u5e8f\u662f\u5148 $2$ \u518d $1$ \u6700\u540e $0$ \uff0c\u56e0\u4e3a $f_{2,\\,u}$ \u5f15\u7528\u4e86 $f_{1,\\,u}$ \uff0c$f_{1,\\,u}$ \u5f15\u7528\u4e86 $f_{0,\\,u}$ \uff0c$g$ \u540c\u7406\u3002\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\ninline int read() {\n    char c = getchar(); int x = 0;\n    while (c < '0' || c > '9') { c = getchar(); }\n    while (c >= '0' && c <= '9') { x = (x << 1) + (x << 3) + (c & 15); c = getchar(); }\n    return x;\n}\n\nconst int maxN = 100005, maxR = 12;\n\nint n, m, p, f[3][maxN], g[3][maxR][maxN];\n\nstruct List {\n    int len, fst[maxN], nxt[maxN << 1], to[maxN << 1];\n\n    List() { memset(fst, -1, sizeof(fst)); }\n    inline void insert(int u, int v) { nxt[len] = fst[u]; to[len] = v; fst[u] = len++; }\n    inline void link(int u, int v) { insert(u, v); insert(v, u); }\n} e;\n\ninline int add(int x, int y) { x += y; return x >= p ? x - p : x; }\ninline int mul(int x, int y) { return (long long) x * y % p; }\n\nvoid dfs1(int u, int fa) {\n    f[0][u] = 1; f[1][u] = f[2][u] = 1e9;\n    for (int i = e.fst[u], v; ~i; i = e.nxt[i]) {\n        v = e.to[i];\n        if (v == fa) { continue; } dfs1(v, u);\n        f[2][u] = std::min(std::max(f[2][u], f[2][v] + 1), std::max(f[1][u], f[1][v]));\n        f[1][u] = std::min(std::max(f[1][u], f[2][v] + 1), std::max(f[0][u], f[1][v]));\n        f[0][u] = std::max(f[0][u], f[2][v] + 1);\n    }\n    f[1][u] = std::min(f[0][u], f[1][u]); f[2][u] = std::min(f[1][u], f[2][u]);\n}\nvoid dfs2(int u, int fa) {\n    for (int i = 1; i <= f[2][1]; i++) { g[0][i][u] = 1; }\n    for (int i = e.fst[u], v; ~i; i = e.nxt[i]) {\n        v = e.to[i];\n        if (v == fa) { continue; } dfs2(v, u);\n        for (int i = 1; i <= f[2][1]; i++) {\n            g[2][i][u] = add(mul(g[2][i][u], g[2][i - 1][v]), mul(g[1][i][u], g[1][i][v]));\n            g[1][i][u] = add(mul(g[1][i][u], g[2][i - 1][v]), mul(g[0][i][u], g[1][i][v]));\n            g[0][i][u] = mul(g[0][i][u], g[2][i - 1][v]);\n        }\n    }\n    for (int i = 1; i <= f[2][1]; i++) { g[1][i][u] = add(g[0][i][u], g[1][i][u]); g[2][i][u] = add(g[1][i][u], g[2][i][u]); }\n}\n\nint main() {\n    n = read(); m = read(); p = read();\n    if (m != n - 1) { printf(\"-1\\n-1\\n\"); return 0; }\n    for (int i = 1; i <= m; i++) { e.link(read(), read()); }\n    dfs1(1, 0); dfs2(1, 0);\n    printf(\"%d\\n%d\\n\", f[2][1] - 1, g[2][f[2][1]][1]);\n    return 0;\n}\n```",
        "postTime": 1549464272,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4201 \u3010[NOI2008]\u8bbe\u8ba1\u8def\u7ebf \u3011"
    },
    {
        "content": "**\u6811\u4e0a\u80cc\u5305 + Max \u5377\u79ef**\n\n#### \u9898\u610f\u7b80\u8ff0\n\n\u200b\t\u7ed9\u4e00\u68f5\u6811\uff0c\u8981\u6c42\u5728\u5176\u4e0a\u5212\u51fa\u82e5\u5e72\u6761\u70b9\u4e0d\u76f8\u4ea4\u8def\u5f84\uff08\u4ee5\u4e0b\u79f0\u4e3a \u201c \u597d\u94fe \u201d \uff0c\u5bf9\u5e94\u5730\uff0c\u79f0\u672a\u88ab\u5212\u5206\u5230\u4efb\u610f\u4e00\u6761\u597d\u94fe\u7684\u8fb9\u4e3a\u4e0d\u597d\u7684\u8fb9\uff09\uff0c\u4f7f\u5f97\u6240\u6709\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u7684\u6781\u957f\u4e0d\u597d\u5b50\u94fe\u6761\u6570\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u5e76\u6c42\u51fa\u8fbe\u5230\u8fd9\u4e2a\u6700\u5c0f\u503c\u7684\u65b9\u6848\u6570\u3002\n\n#### \u5206\u6790\n\n\u200b\t\u9996\u5148\u6700\u5c0f\u503c\u80af\u5b9a\u662f $O(\\log n)$ \u7ea7\u522b\u7684\u3002\n\n\u200b\t\u56e0\u4e3a\u6811\u7684\u91cd\u94fe\u5256\u5206\u663e\u7136\u662f\u4e00\u7ec4\u5408\u6cd5\u7684\u597d\u94fe\u5212\u5206\uff0c\u800c\u8f7b\u8fb9\u4e2a\u6570\u662f $\\log n$ \u6761\u3002\n\n\u200b\t\u73b0\u5728\u8003\u8651\u540c\u65f6\u6c42\u51fa\u4e24\u95ee\u7684\u7b54\u6848\u3002\n\n\u200b\t\u8bbe $f_{u,k,x}$ \u8868\u793a\uff1a\u5728 $u$ \u7684\u5b50\u6811\u5185\u4f5c\u5212\u5206\uff0c\u548c $u$ \u76f8\u8fde\u7684\u597d\u8fb9\u6709 $k$ \u6761\uff0c\u5b50\u6811\u5185\u6700\u5927\u7b54\u6848\u4e3a $x$ \u7684\u65b9\u6848\u6570\u3002\u6839\u636e\u9898\u610f\uff0c\u6709 $k\\in \\{0,1,2\\},x\\le \\log n$\u3002\u8bbe $s_i$ \u8868\u793a $u$ \u7684\u513f\u5b50\u3002\u6709\u8f6c\u79fb\n$$\nf_{u,0,x}=\\sum_{\\max\\{y_i\\}=x-1}\\prod_{s_i}(f_{s_i,0,y_i}+f_{s_i,1,y_i}+f_{s_i,2,y_i})$$\n$$\nf_{u,1,x}=\\sum_{s_p\\in\\{s_i\\}}\\sum_{\\max(\\{y_i+1\\},y_p)=x}(f_{s_p,0,y_p}+f_{s_p,1,y_p})\\prod_{s_i}(f_{s_i,0,y_i}+f_{s_i,1,y_i}+f_{s_i,2,y_i})$$\n$$f_{u,2,x}=\\sum_{s_p,s_q\\in\\{s_i\\}}\\sum_{\\max(\\{y_i+1\\},y_p,y_q)=x}(f_{s_p,0,y_p}+f_{s_p,1,y_p})(f_{s_q,0,y_q}+f_{s_q,1,y_q})\\prod_{s_i}(f_{s_i,0,y_i}+f_{s_i,1,y_i}+f_{s_i,2,y_i})\n$$\n\u200b\t\u4e00\u4e2a\u6811\u4e0a\u80cc\u5305\u7684\u5f62\u5f0f\uff0c\u7c7b\u4f3c\u4e8e \u201c \u9009\u53d6 $K$ \u6761\u4e0d\u76f8\u4ea4\u8def\u5f84\u6743\u503c\u6700\u5927 \u201d \u7684\u5957\u8def\u3002\u533a\u522b\u5728\u4e8e\uff1a\u548c\u5377\u79ef\u6362\u6210\u4e86 max \u5377\u79ef\u3002\n\n\u200b\t\u6700\u7ec8\u6700\u5c0f\u503c\u4e3a\u6700\u5c0f\u7684 $x$ \u4f7f\u5f97 $f_{1,k,x}$ \u4e0d\u4e3a $0$\u3002\n\n#### \u5355\u6b21 max \u5377\u79ef\u6c42\u89e3\n\n\u200b\t\u8003\u8651\u5982\u4e0b\u95ee\u9898\uff1a\u7ed9\u5b9a $\\{A_i\\},\\{B_i\\}$\uff0c\u6c42\n$$\nF_n=\\sum_{\\max(i,j)=n}A_iB_j\n$$\n\u200b\t\u65b9\u6cd5\u662f\uff1a\u5148\u628a $A,B$ \u8fdb\u884c\u524d\u7f00\u548c\u53d8\u6362\uff0c\u518d\u8fdb\u884c\u70b9\u79ef\uff08\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\uff09\uff0c\u6700\u540e\u628a\u5f97\u5230\u7684 $F$ \u505a\u5dee\u5206\u53d8\u6362\u3002\u8003\u8651\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1a\u524d\u7f00\u548c\u540e\u70b9\u79ef\uff0c\u6240\u5f97\u7684\u7b2c $n$ \u9879\u4e2d\u4f1a\u5305\u542b\u6240\u6709 $\\max(i,j)\\le n$ \u7684 $A_iB_j$ \u4e4b\u548c\uff0c\u5dee\u5206\u5c31\u662f\u8fdb\u884c\u5bb9\u65a5\u3002\u524d\u7f00\u548c / \u5dee\u5206\u53d8\u6362\u5728\u8fd9\u91cc\u8d77\u5230\u4e86 DFT \u7684\u4f5c\u7528\uff0c\u5373\uff0c\u628a\u5377\u79ef\u53d8\u4e3a\u4e86\u70b9\u79ef\u8fd0\u7b97\u3002\n\n#### \u6811\u4e0a\u80cc\u5305\n\n\u200b\t\u73b0\u8003\u8651\u628a\u5b50\u6811\u4e00\u4e2a\u4e00\u4e2a\u52a0\u8fdb\u53bb\u3002\n\n\u200b\t\u52a0\u5165\u4e00\u4e2a\u5b50\u6811\u65f6\uff0c\u679a\u4e3e\u5b83\u662f\u5426\u5230\u5f53\u524d\u8282\u70b9\u6709\u8fde\u8fb9\uff0c\u53d1\u73b0\u53ef\u4f5c\u5982\u4e0b\u8f6c\u79fb\uff1a\n$$\nf_{u,0,x}\\rightarrow f_{u,1,x},f_{u,1,x}\\rightarrow f_{u,2,x},f_{u,0,x}\\rightarrow f_{u,0,x},f_{u,1,x}\\rightarrow f_{u,1,x},f_{u,2,x}\\rightarrow f_{u,2,x}\n$$\n\u200b\t\u987a\u7740\u8f6c\u79fb\uff0c\u6bcf\u6b21\u4f5c max \u5377\u79ef\u5373\u53ef\u3002\n\n\u200b\t\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n#### \u9898\u5916\u8bdd\n\n\u200b\t**\u6709\u4e00\u4e2a\u5de8\u5751\u7684\u70b9\u5728\u4e8e\u6a21\u6570\u9009\u53d6\u53ef\u80fd\u4f1a\u6b63\u597d\u4f7f\u7b54\u6848\u4e3a $0$\uff0c\u8fd9\u4e2a\u65f6\u5019\u7528 $f$ \u4e00\u4e2a\u6570\u7ec4\u65e0\u6cd5\u627e\u5230\u6700\u5c0f\u503c\uff0c\u89e3\u51b3\u65b9\u6cd5\u662f\u81ea\u5df1\u518d\u627e\u4e00\u4e2a\u5927\u6a21\u6570\u5148\u7b97\u4e00\u904d\u627e\u5230\u6700\u5c0f\u503c\u518d\u7528\u539f\u6765\u7684\u6a21\u6570\u8f93\u51fa\u65b9\u6848\u3002\u540e\u4eba\u5207\u8bb0\u540e\u4eba\u5207\u8bb0\u540e\u4eba\u5207\u8bb0**\n\n",
        "postTime": 1619619221,
        "uid": 259028,
        "name": "Aly_",
        "ccfLevel": 9,
        "title": "P4201 [NOI2008] \u8bbe\u8ba1\u8def\u7ebf \u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/P4201)\n\nDP\u3002\n\n\u8fd9\u9898\u4e5f\u592a\u5751\u4e86\u5427\uff0c\u770b\u8d77\u6765\u4ee3\u7801\u77ed\uff0c\u611f\u89c9\u597d\u96be\u5199\u548c\u60f3\u554a\u3002\n\n\u9996\u5148\u8981\u770b\u5230\u9898\u76ee\u4e2d\u4e00\u4e2a\u6761\u4ef6\uff1a**\u975e\u5e38\u795e\u5947\u7684\u662fZ\u56fd\u7684\u6bcf\u4e2a\u57ce\u5e02\u6240\u5904\u7684\u7ecf\u5ea6\u90fd\u4e0d\u76f8\u540c\uff0c\u5e76\u4e14\u6700\u591a\u53ea\u548c\u4e00\u4e2a\u4f4d\u4e8e\u5b83\u4e1c\u8fb9\u7684 \u57ce\u5e02\u76f4\u63a5\u901a\u8fc7\u516c\u8def\u76f8\u8fde**\u3002\u8fd9\u53e5\u8bdd\u4e5f\u592a\u9690\u853d\u4e86\u4e00\u70b9\u5427\uff0c\u6b63\u662f\u8fd9\u53e5\u8bdd\u624d\u5f15\u51fa\u540e\u9762\u7684\u4e09\u53c9\u3002\u770b\u5230\u4e00\u4e2a$m$\uff0c\u5176\u5b9e\u662f\u4e0d\u7528\u7406\u4f1a\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4ec5\u4ec5\u9700\u8981$n-1$\u6761\u53d8\u6210\u4e00\u68f5\u6811\u5c31\u591f\u4e86\uff0c\u591a\u4f59\u7684\u8fb9\u5168\u662f\u516c\u8def\uff0c\u90fd\u662f\u6ca1\u6709\u7528\u7684\u3002\u6240\u4ee5\u7ec8\u4e8e\uff0c\u6211\u4eec\u5c06\u8fd9\u9053\u9898\u7684\u56fe\u8f6c\u6362\u6210\u4e86\u4e00\u68f5\u4e09\u53c9\u6811\u3002\n\n\u5f00\u59cb\u8003\u8651\u4e00\u4e2a$DP$\u3002$dp[i][j][k]$\u8868\u793a\u7b2c$i$\u4e2a\u8282\u70b9\uff0c\u5230\u8fd9\u4e2a\u8282\u70b9\u7ecf\u8fc7\u7684\u516c\u8def\u6570\u76ee\u4e3a$j$\uff0c\u5f53\u524d\u8fd9\u4e2a\u70b9\u5411\u513f\u5b50\u8fde\u4e86$k$\u6761\u8fb9\u7684\u65b9\u6848\u6570\u3002\u8fd9\u4e2a$k$\u662f\u5c0f\u4e8e\u7b49\u4e8e3\u7684\uff0c\u8fd9\u6ca1\u6709\u95ee\u9898\u3002\u95ee\u9898\u5c31\u5728\u4e8e\u8fd9\u4e2a$j$\uff0c\u6211\u4eec\u8be5\u600e\u4e48\u5904\u7406\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6839\u636e\u8f7b\u91cd\u94fe\u5256\u5206\u7684\u601d\u60f3\uff0c\u4e00\u68f5\u6811\u88ab\u5206\u6210\u7684\u94fe\u6570\u662f\u4e0d\u8d85\u8fc7$logk(n)$\u7684\uff0c$k$\u6307\u7684\u662f$k$\u53c9\u6811\u3002\u56e0\u6b64\uff0c$j$\u6700\u591a\u4e0d\u523010\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u679a\u4e3e$j$\uff0c\u5f00\u59cb\u8f6c\u79fb\u4e86\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n\u521d\u59cb\u5316\uff1a$dp[x][j][0]=1$\n\n$dp[x][0][2]=dp[x][0][1]*(dp[tox][0][0]+dp[tox][0][1])$\n\n$dp[x][0][1]=dp[x][0][0]*(dp[tox][0][0]+dp[tox][0][1])$\n\n$dp[x][0][0]=0$\n\n$dp[x][j][2]=dp[x][j][2]*(dp[tox][j-1][0]+dp[tox][j-1][1]+dp[tox][j-1][2])+dp[x][j][1]*(dp[tox][j][0]+dp[tox][j][1])$\n\n$dp[x][j][1]=dp[x][j][1]*(dp[tox][j-1][0]+dp[tox][j-1][1]+dp[tox][j-1][2])+dp[x][j][0]*(dp[tox][j][0]+dp[tox][j][1])$\n\n$dp[x][j][0]=dp[x][j][0]*(dp[tox][j-1][0]+dp[tox][j-1][1]+dp[tox][j-1][2])$\n\n\u7136\u540e\u5c31\u505a\u597d\u4e86\u3002\n\ncode:\n```\n//2018.10.15 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register LL\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline LL read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline LL _abs(const res &x){\n    return x>0?x:-x;\n}\ninline LL _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline LL _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst LL N=1e5+10;\nnamespace MAIN{\n    LL n,m,kcz;\n    struct E{\n        int next,to;\n        E() {}\n        E(res next,res to):next(next),to(to) {}\n    }edge[N<<1];\n    LL head[N],cnt;\n    inline void addedge(const res &u,const res &v){\n        edge[++cnt]=E(head[u],v),head[u]=cnt;\n        edge[++cnt]=E(head[v],u),head[v]=cnt;\n    }\n    LL dp[N][13][5];\n    LL lim;\n    void dfs(const res &x,const res &fax){\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax)continue;\n            dfs(tox,x);\n        }\n        for(res i=0;i<=lim;i++)dp[x][i][0]=1;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax)continue;\n            dp[x][0][2]=dp[x][0][1]*(dp[tox][0][0]+dp[tox][0][1])%kcz;\n            dp[x][0][1]=dp[x][0][0]*(dp[tox][0][0]+dp[tox][0][1])%kcz;\n            dp[x][0][0]=0;\n            for(res j=1;j<=lim;j++){\n                dp[x][j][2]=((dp[x][j][2]*(dp[tox][j-1][0]+dp[tox][j-1][1]+dp[tox][j-1][2])-1)%kcz+1+(dp[x][j][1]*(dp[tox][j][0]+dp[tox][j][1])-1)%kcz+1-1)%kcz+1;\n                dp[x][j][1]=((dp[x][j][1]*(dp[tox][j-1][0]+dp[tox][j-1][1]+dp[tox][j-1][2])-1)%kcz+1+(dp[x][j][0]*(dp[tox][j][0]+dp[tox][j][1])-1)%kcz+1-1)%kcz+1;\n                dp[x][j][0]=(dp[x][j][0]*(dp[tox][j-1][0]+dp[tox][j-1][1]+dp[tox][j-1][2])-1)%kcz+1;\n            }\n        }\n    }\n    inline void MAIN(){\n        memset(head,-1,sizeof(head));\n        n=read(),m=read(),kcz=read();\n        for(res i=1;i<=m;i++){\n            res u=read(),v=read();\n            addedge(u,v);\n        }\n        if(m<n-1){puts(\"-1\"),puts(\"-1\");return;}\n        lim=10;\n        dfs(1,0);\n        for(res i=0;i<=lim;i++)\n            if(dp[1][i][0]+dp[1][i][1]+dp[1][i][2]){printf(\"%lld\\n%lld\\n\",i,(dp[1][i][0]+dp[1][i][1]+dp[1][i][2])%kcz);return;}\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9053\u9898\u662f\u771f\u7684\u5751\u3002**\u4e0d\u80fd\u76f4\u63a5\u6a21$kcz$**\uff0c\u51fa\u73b0\u4e86$0$\u7684\u8bdd\u5c31\u4f1a\u5728\u6700\u540e\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u51fa\u9519\uff0c\u6240\u4ee5\u53ea\u80fd\u51cf$1$\u518d\u53d6\u6a21\u3002",
        "postTime": 1539602616,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010NOI2008\u3011\u8bbe\u8ba1\u8def\u7ebf"
    },
    {
        "content": "\u672c\u6587\u53c2\u8003\u4e86 [\u8fd9\u7bc7\u535a\u5ba2](https://www.luogu.com.cn/blog/Sooke/solution-p4201)\uff0c\u62dc\u8c22\u795e\u7287\u3002\n\n> Z \u56fd\u7684\u6bcf\u4e2a\u57ce\u5e02\u6240\u5904\u7684\u7ecf\u5ea6\u90fd\u4e0d\u76f8\u540c\uff0c\u5e76\u4e14\u6700\u591a\u53ea\u548c\u4e00\u4e2a\u4f4d\u4e8e\u5b83\u4e1c\u8fb9\u7684\u57ce\u5e02\u76f4\u63a5\u901a\u8fc7\u516c\u8def\u76f8\u8fde\u3002\n\n\u4e4b\u524d\u6ca1\u770b\u5230\u8fd9\u53e5\u8bdd\uff0c\u60f3\u4e86\u534a\u5929\u4e00\u822c\u56fe\u4e0a\u7684\u60c5\u51b5\u600e\u4e48\u5904\u7406\uff0c\u4e50\u3002\n\n\u8fd9\u53e5\u8bdd\u610f\u5473\u7740\u7ed9\u5b9a\u7684\u56fe\u662f\u4e2a\u68ee\u6797\uff0c\u53c8\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u56fe\u8fde\u901a\uff08\u4e0d\u8fde\u901a\u76f4\u63a5\u8f93\u51fa\u4e24\u884c `-1`\uff09\uff0c\u6240\u4ee5\u7ed9\u7684\u56fe\u662f\u4e2a\u6811\uff0c\u8003\u8651\u6811\u4e0a DP\u3002\n\n\u6ce8\u610f\u5230\u76f4\u63a5\u5bf9\u6811\u8fdb\u884c\u8f7b\u91cd\u94fe\u5256\u5206\u4e5f\u662f\u4e00\u79cd\u5408\u6cd5\u65b9\u6848\uff0c\u6240\u4ee5\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u662f $\\log$ \u7ea7\u522b\u7684\uff0c\u8fd9\u542f\u793a\u6211\u4eec\u628a\u7b2c\u4e00\u95ee\u7b54\u6848\u5199\u8fdb\u72b6\u6001\u3002\n\n\u8bbe $f_{i,j,u}$ \u4ee3\u8868\u4ee5\u8282\u70b9 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\uff0c$u$ \u5f80**\u4e0d\u8d85\u8fc7** $i$ \u4e2a\u513f\u5b50\u4fee\u4e86\u94c1\u8def\uff0c\u5e76\u4e14\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u4e0d\u4fbf\u5229\u5ea6\u4e0d\u8d85\u8fc7 $j$ \u7684\u65b9\u6848\u6570\u3002\n\n\u8003\u8651\u8f6c\u79fb\uff0c\u53d1\u73b0\u76f4\u63a5\u8f6c\u79fb\u4e0d\u592a\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa\u4fee\u94c1\u8def\u6570\u91cf**\u6070\u597d\u7b49\u4e8e** $i$ \u7684\uff0c\u7136\u540e\u518d\u4f5c\u524d\u7f00\u548c\u3002\u4e0b\u9762\u7684\u8f6c\u79fb\u65b9\u7a0b\u4e2d\uff0c\u5de6\u4fa7\u51fa\u73b0\u7684 $f$ \u4ee3\u8868\u6070\u597d\u7b49\u4e8e\u7684\u60c5\u51b5\uff0c\u53f3\u4fa7\u4ee3\u8868\u4e0d\u8d85\u8fc7 $i$ \u7684\u60c5\u51b5\u3002\n\n\u8bbe $v$ \u4e3a\u5f53\u524d\u904d\u5386\u5230\u7684 $u$ \u7684\u513f\u5b50\u3002\n\n\u5982\u679c $i=0$\uff0c\u90a3\u4e48\u5b50\u6811\u91cc\u60f3\u600e\u4e48\u4fee\u5c31\u600e\u4e48\u4fee\uff0c\u4f46\u662f\u4e0d\u4fbf\u5229\u5ea6\u8981\u52a0\u4e00\uff0c\u6240\u4ee5\uff1a$f_{0,j,u} \\gets f_{0,j,u} \\times f_{2,j-1,v}$\u3002\uff08\u6ce8\u610f\u4e0d\u4fbf\u5229\u5ea6\u7684\u300c\u52a0\u4e00\u300d\u4f53\u73b0\u5728\u4e86 $j-1$ \u4e0a\uff09\n\n\u5982\u679c $i=1$\uff0c\u9664\u4e86\u5b50\u6811\u91cc\u968f\u4fbf\u4fee\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u5f80 $v$ \u8fd9\u91cc\u4fee\u4e00\u6761\u8fb9\u3002\u8fd9\u6837 $v$ \u8fd9\u68f5\u5b50\u6811\u7684\u4e0d\u4fbf\u5229\u5ea6\u5c31\u4e0d\u7528\u52a0\u4e00\uff0c\u6240\u4ee5 $f_{1,j,u} \\gets f_{1,j,u} \\times f_{2,j-1,v}+f_{0,j,u} \\times f_{1,j,v}$\u3002\n\n\u5982\u679c $i=2$\uff0c\u7c7b\u4f3c\u5730\uff0c$f_{2,j,u} \\gets f_{2,j,u} \\times f_{2,j-1,v} + f_{1,j,u} \\times f_{1,j,v}$\u3002\n\n\u8fb9\u754c\u6761\u4ef6\u662f $f_{0,j,u}=1$\u3002\u6ce8\u610f\u8f6c\u79fb\u4e4b\u540e\u8981\u4f5c\u524d\u7f00\u548c\u3002\n\n\u7136\u540e\u8fd9\u9898\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u5c31\u662f\u65b9\u6848\u6570\u53d6\u6a21\u4e4b\u540e\u53ef\u80fd\u4e3a $0$\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5224\u4e0d\u51fa\u6765\uff01\n\n\u89e3\u51b3\u65b9\u6848\u662f\u53d6\u6a21\u65f6\u5199\u6210 `a = (a - 1) % p + 1; ` \u7684\u5f62\u5f0f\u3002\n\nCode:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint n, m, p;\nll f[3][16][100005];\nstruct Edge {\n    int to, next;\n} e[200005];\nint head[100005], len;\nvoid Insert(int u, int v) {\n    e[++len].to = v;\n    e[len].next = head[u];\n    head[u] = len;\n}\nvoid dfs(int u, int prt) {\n    for (int i = 1; i <= 15; i++) f[0][i][u] = 1;\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (v == prt) continue;\n        dfs(v, u);\n        for (int j = 1; j <= 15; j++) {\n            f[2][j][u] = ((f[2][j][u] * f[2][j - 1][v] + f[1][j][u] * f[1][j][v]) - 1) % p + 1;\n            f[1][j][u] = ((f[1][j][u] * f[2][j - 1][v] + f[0][j][u] * f[1][j][v]) - 1) % p + 1;\n            f[0][j][u] = (f[0][j][u] * f[2][j - 1][v] - 1) % p + 1;\n        }\n    }\n    for (int j = 1; j <= 15; j++) {\n        f[1][j][u] = (f[1][j][u] + f[0][j][u] - 1) % p + 1;\n        f[2][j][u] = (f[2][j][u] + f[1][j][u] - 1) % p + 1;\n    }\n}\nint main() {\n    scanf(\"%d%d%d\", &n, &m, &p);\n    if (m != n - 1) {\n        printf(\"-1\\n-1\\n\");\n        return 0;\n    }\n    for (int i = 1; i <= m; i++) {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        Insert(u, v);\n        Insert(v, u);\n    }\n    dfs(1, 0);\n    for (int i = 1; i <= 15; i++) {\n        if (f[2][i][1]) {\n            printf(\"%lld\\n%lld\", i - 1, f[2][i][1] % p);\n            return 0;\n        }\n    }\n    return 0;   \n}\n```",
        "postTime": 1673932451,
        "uid": 363415,
        "name": "251Sec",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4201 [NOI2008] \u8bbe\u8ba1\u8def\u7ebf"
    }
]