[
    {
        "content": "\u8003\u8651\u83ab\u961f\u3002\u5f53\u533a\u95f4$[l,r]$\u5df2\u7ecf\u88ab\u5904\u7406\u597d\u65f6\uff0c\u5411\u533a\u95f4\u5185\u52a0\u5165\u4e00\u4e2a\u6570$x$ \uff0c\u5206\u6790\u7b54\u6848\u7684\u53d8\u5316\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u533a\u95f4\u5185\u6bd4$x$\u5927\u7684\u6570\u7684\u6392\u540d\u5168\u90e8\u63d0\u5347\u4e86\u4e00\u4f4d\u3002\u6240\u4ee5\u7b54\u6848\u7684\u53d8\u5316\u4e3a\uff1a\n\n$ans+=$\u533a\u95f4\u5185\u6240\u6709\u6bd4$x$\u5927\u7684\u6570\u7684\u548c$+x*($\u533a\u95f4\u5185\u6bd4$x$\u5c0f\u7684\u6570\u7684\u4e2a\u6570$+1)$\n\u5220\u9664\u540c\u7406\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u533a\u95f4\u5185\u6240\u6709\u6bd4$x$\u5927\u7684\u6570\u7684\u548c\u4e0e\u533a\u95f4\u5185\u6bd4$x$\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u6bd4\u8f83\u96be\u5728$O(1)$\u7684\u65f6\u95f4\u5185\u7edf\u8ba1\u51fa\u6765\u3002\u56e0\u6b64\u6211\u4eec\u4f7f\u7528$lxl$\u5de8\u5de8\u53d1\u660e\u7684\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\u7b97\u6cd5\uff0c\u5c06\u8fd9\u4e24\u4e2a\u503c\u79bb\u7ebf\u51fa\u6765\u5904\u7406\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8868\u8ff0\uff0c\u6211\u4eec\u5c06\u533a\u95f4$[l,r]$\u5185\u6240\u6709\u6bd4$x$\u5927\u7684\u6570\u7684\u548c\u8bb0\u4e3a$sum(x, [l,r])$\uff0c\u5c06\u533a\u95f4\u5185\u6bd4$x$\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u8bb0\u4e3a $cnt(x, [l,r])$\u3002\n\n\u4ee5\u5c06\u5de6\u7aef\u70b9\u5de6\u79fb\u4e3a\u4f8b\uff0c\u9700\u8981\u8be2\u95ee$sum(a[l-1],[l,r])$\u7684\u503c\uff0c\u76f8\u5f53\u4e8e\u8be2\u95ee$sum(a[l-1],[l,n])-sum(a[l-1],[r,n])$\u3002\n\n\u5bf9\u4e8e\u524d\u534a\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u5728$O(nlogn)$\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u6240\u6709$sum(a[i],[i+1,n])$\u3002\u5bf9\u4e8e\u540e\u534a\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u9700\u8981\u5904\u7406\u7684\u4f4d\u7f6e ii \u5168\u90e8\u8bb0\u5f55\u4e0b\u6765\uff0c\u5728\u6a21\u62df\u83ab\u961f\u5b8c\u6210\u540e\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u540e\u534a\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u67e5\u8be2$O(1)$\uff0c\u63d2\u5165\u590d\u6742\u5ea6\u5c0f\u4e8e\u7b49\u4e8e$O(\\sqrt{n})$\u7684\u4e1c\u897f\u6765\u7ef4\u62a4\uff0c\u4e0d\u96be\u60f3\u5230\u6743\u503c\u5206\u5757\u3002\n\n\u5bf9\u4e8e\u83ab\u961f\u4e2d\u5176\u4ed6\u6240\u6709\u7aef\u70b9\u79fb\u52a8\u60c5\u51b5\u53ef\u4ee5\u505a\u7c7b\u4f3c\u5904\u7406\uff0c\u5bf9\u4e8e\u6240\u6709\u7684$cnt(x,[l,r])$\u8fdb\u884c\u76f8\u540c\u5904\u7406\uff0c\u968f\u4fbf\u5199\u4e00\u5199\u5c31\u5207\u6389\u5566\uff01\n\n\u603b\u7a7a\u95f4\u590d\u6742\u5ea6$O(n)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn+n\\sqrt{n})$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long lint;\nconst int V = 100000;\nconst int MAXN = 500050;\nconst int MAXB = 4050;\nvoid read(int &x) {\n\tchar ch; while(ch = getchar(), ch < '!'); x = ch - 48;\n\twhile(ch = getchar(), ch > '!') x = (x << 3) + (x << 1) + ch - 48;\n}\nstruct Qry {int l, r, id; lint ans;} q[MAXN];\nstruct T {int l, r, id, op;};\nint siz, Vsiz, n, m, a[MAXN], cl[MAXN], cr[MAXN], bl[MAXN];\nlint ans[MAXN], t1[MAXN], t2[MAXN], pre1[MAXN], pre2[MAXN], pref1[MAXN], pref2[MAXN], c1[MAXN], s1[MAXB], c2[MAXN], s2[MAXB];\nvoid up1(int x, int val) {for( ; x > 0; t1[x] += val, x -= x&(-x));}\nlint qr1(int x) {lint res = 0; for(; x <= V; res += t1[x], x += x&(-x)); return res;}\nvoid up2(int x, int val) {for(; x <= V; t2[x] += val, x += x&(-x));} \nlint qr2(int x) {lint res = 0; for( ; x > 0; res += t2[x], x -= x&(-x)); return res;}\nint cmp(Qry a, Qry b) {return a.l/siz == b.l/siz ? a.r < b.r : a.l < b.l;}\nvector <T> vl[MAXN], vr[MAXN];\nint main() {\n\tread(n); read(m); siz = sqrt(n); Vsiz = 400;\n\tfor(int i = 1; i <= n; ++i) read(a[i]);\n\tfor(int i = 1; i <= m; ++i) {read(q[q[i].id = i].l), read(q[i].r); if(q[i].l>q[i].r||q[i].l<1||q[i].r>n) puts(\"nmd\");}\n\tsort(q+1, q+m+1, cmp);\n\tfor(int i = 1; i <= n; ++i) {\n\t\tpre1[i] = qr1(a[i]+1);\n\t\tpre2[i] = qr2(a[i]-1);\n\t\tup1(a[i], a[i]); up2(a[i], 1);\n\t\tpref1[i] = pref1[i-1] + pre1[i] + 1ll * a[i] * (pre2[i] + 1);\n\t}\n\tmemset(t1, 0, sizeof t1); memset(t2, 0, sizeof t2);\n\tfor(int i = n; i >= 1; --i) {\n\t\tpre1[i] = qr1(a[i]+1);\n\t\tpre2[i] = qr2(a[i]-1);\n\t\tup1(a[i], a[i]); up2(a[i], 1);\n\t\tpref2[i] = pref2[i+1] + pre1[i] + 1ll * a[i] * (pre2[i] + 1);\n\t}\n\tfor(int L = 1, R = 0, i = 1; i <= m; ++i) {\n\t\tint l = q[i].l, r = q[i].r;\n\t\tq[i].ans = pref1[r]-pref1[R]+pref2[l]-pref2[L];\n\t\tif(L < l) vl[r+1].push_back((T) {L, l-1, i, 1});\n\t\tif(L > l) vl[r+1].push_back((T) {l, L-1, i, -1});\n\t\tif(R < r) vr[L-1].push_back((T) {R+1, r, i, -1});\n\t\tif(R > r) vr[L-1].push_back((T) {r+1, R, i, 1});\n\t\tL = l; R = r;\n\t}\n\tfor(int i = 1; i <= Vsiz; ++i) {\n\t\tcl[i] = cr[i-1] + 1; cr[i] = i*Vsiz;\n\t\tfor(int j = cl[i]; j <= cr[i]; ++j) bl[j] = i;\n\t}\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = 1; j < bl[a[i]]; ++j) s2[j] += a[i];\n\t\tfor(int j = cl[bl[a[i]]]; j <= a[i]; ++j) c2[j] += a[i];\n\t\tfor(int j = bl[a[i]]+1; j <= Vsiz; ++j) ++s1[j];\n\t\tfor(int j = a[i]; j <= cr[bl[a[i]]]; ++j) ++c1[j];\n\t\tfor(int j = 0; j < vr[i].size(); ++j) {\n\t\t\tint l = vr[i][j].l, r = vr[i][j].r, id = vr[i][j].id;\n\t\t\tlint tmp = 0;\n\t\t\tfor(int k = l; k <= r; ++k)\n\t\t\t\ttmp += 1ll*a[k]*(s1[bl[a[k]-1]]+c1[a[k]-1]) + (s2[bl[a[k]+1]]+c2[a[k]+1]);\n\t\t\tq[id].ans += vr[i][j].op * tmp;\n\t\t}\n\t}\n\tmemset(s1, 0, sizeof s1); memset(c1, 0, sizeof c1); memset(s2, 0, sizeof s2); memset(c2, 0, sizeof c2);\n\tfor(int i = n; i >= 1; --i) {\n\t\tfor(int j = 1; j < bl[a[i]]; ++j) s2[j] += a[i];\n\t\tfor(int j = cl[bl[a[i]]]; j <= a[i]; ++j) c2[j] += a[i];\n\t\tfor(int j = bl[a[i]]+1; j <= Vsiz; ++j) ++s1[j];\n\t\tfor(int j = a[i]; j <= cr[bl[a[i]]]; ++j) ++c1[j];\n\t\tfor(int j = 0; j < vl[i].size(); ++j) {\n\t\t\tint l = vl[i][j].l, r = vl[i][j].r, id = vl[i][j].id;\n\t\t\tlint tmp = 0;\n\t\t\tfor(int k = l; k <= r; ++k)\n\t\t\t\ttmp += 1ll*a[k]*(s1[bl[a[k]-1]]+c1[a[k]-1]) + (s2[bl[a[k]+1]]+c2[a[k]+1]);\n\t\t\tq[id].ans += vl[i][j].op * tmp;\n\t\t}\n\t}\n\tfor(int i = 1; i <= m; ++i) q[i].ans += q[i-1].ans, ans[q[i].id] = q[i].ans;\n\tfor(int i = 1; i <= m; ++i) printf(\"%lld\\n\", ans[i]);\n}\n\n\n```",
        "postTime": 1565403451,
        "uid": 2491,
        "name": "\u8bd7\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5501 \u3010[LnOI2019]\u6765\u8005\u4e0d\u62d2\uff0c\u53bb\u8005\u4e0d\u8ffd\u3011"
    },
    {
        "content": "\u505a\u5b8c\u4e00\u767e\u5e74\u4e4b\u540e\u624d\u53d1\u73b0\u6ca1\u5199\u9898\u89e3\uff08\u6c57\uff09\u3002\n\n\u9996\u5148\u8fd9\u9898\u662f\u9759\u6001\u7684\u533a\u95f4\u67e5\u8be2\uff0c\u5e38\u89c4\u601d\u8def\uff1a\u83ab\u961f\uff0c\u4f46\u662f\u8fd9\u4e2a\u201cAbbi\u201d\u503c\u65e0\u8bba\u662f\u52a0\u8fd8\u662f\u5220\u90fd\u4e0d\u80fd\u505a\u5230 $O(1)$\uff0c\u6240\u4ee5\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\n\n\u8003\u8651\u52a0\u5165\u4e00\u4e2a\u6570\u7684\u8d21\u732e\uff1a\u52a0\u4e0a\u5927\u4e8e\u5b83\u7684\u6570\u7684\u548c\uff0c\u8fd9\u4e1c\u897f\u7528 $O(\\sqrt n)$ \u4fee\u6539 $O(1)$ \u67e5\u8be2\u7684\u5206\u5757\u5c31\u884c\u4e86\uff08\u56e0\u4e3a\u6709 $n\\sqrt n$ \u6b21\u67e5\u8be2\uff09\uff0c\u5f88\u57fa\u7840\u3002\n\n\u8bb2\u8bb2\u600e\u4e48\u5b9e\u73b0\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\uff0c\u6211\u4eec\u5c06\u6bcf\u6b21\u8be2\u95ee\u5de6\u53f3\u7aef\u70b9\u79fb\u52a8\u7684\u65b9\u5411\uff0c\u8ddd\u79bb\u518d\u79bb\u7ebf\u4e0b\u6765\uff0c\u603b\u79fb\u52a8\u8ddd\u79bb\u5e94\u8be5\u662f $n\\sqrt n$\uff0c\u7136\u540e\u5c31\u6c89\u601d\uff1a\n\n\u5047\u8bbe\u5c06 $[l,r]$ \u8f6c\u79fb\u81f3 $[l,r+1]$\uff0c\u5c31\u662f\u52a0\u4e0a $[r+1,r+1]$ \u5bf9 $[l,r]$ \u7684\u8d21\u732e\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u6240\u6709\u7684\u90fd\u8f6c\u6362\u6210 $[r+1,r+1]$ \u5bf9 $[1,r]$ \u7684\u8d21\u732e\u51cf\u53bb $[r+1,r+1]$ \u5bf9 $[1,l-1]$ \u7684\u8d21\u732e\uff0c\u800c\u524d\u8005\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u662f\u5c06\u6bcf\u4e2a\u8f6c\u79fb\u7684\u4e0b\u6807\u79bb\u7ebf\u5230\u4e0a\u9762\u7684 $l-1$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u91cd\u590d\u5229\u7528 $[1,l-1]$ \u7684\u6570\u636e\u4e86\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4fdd\u6301\u5728 $O(n\\sqrt n)$\u3002\n\n**Code**\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) (x&-x)\n#define ll long long\nusing namespace std;\nconst int maxn=500005,maxa=100005,maxsa=325;\nint n,m,a[maxn],s,ss,idx[maxn],Maxa,idxn,l=1,r,ccnt,idxx[maxa];\nll qz[maxn],ans[maxn],aans[maxn],sum1[maxa],sum2[maxsa],sum3[maxa],sum4[maxsa],qqz[maxn];\nstruct query{//\u8be2\u95ee \n\tint l,r,id;\n}p[maxn];\nstruct node{//\u4e8c\u79bb \n\tint l,r,op,id,x;\n}que[maxn<<1];\nint qr(){\n\tint x=0,f=0;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0') f|=(c=='-'),c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f?-x:x;\n}\nvoid add(int x){//O(sqrt(n))\u7684\u4fee\u6539 \n\tfor(int i=x;idxx[i]==idxx[x];++i) ++sum1[i],sum3[i]+=x;\n\tfor(int i=idxx[x];i<=idxx[Maxa];++i) ++sum2[i],sum4[i]+=x;\n}\ninline bool cmp(query x,query y){//\u5947\u5076\u6392\u5e8f \n\treturn idx[x.l]==idx[y.l]?(idx[x.l]&1?x.r<y.r:x.r>y.r):x.l<y.l;\n}\ninline bool cmp2(node x,node y){\n\treturn x.x<y.x;\n}\ninline ll getsum(int x){\n\treturn sum4[idxx[Maxa]]-sum4[idxx[x]-1]-sum3[x]+1ll*x*(sum2[idxx[x]-1]+(idxx[x-1]==idxx[x]?sum1[x-1]:0));//O(1) \u67e5\u8be2 \n}\nint main() {\n\tn=qr(),m=qr();\n\ts=sqrt(n);\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]=qr();\n\t\tidx[i]=(i+s-1)/s;\n\t\tqqz[i]=qqz[i-1]+a[i];//\u6700\u540e\u8981\u7528 \n\t\tMaxa=max(Maxa,a[i]);//\u503c\u57df\u5927\u5c0f \n\t}\n\tss=sqrt(Maxa);\n\tfor(int i=1;i<=Maxa;++i){//\u521d\u59cb\u5316\u503c\u57df\u5757 \n\t\tidxx[i]=(i+ss-1)/ss;\n\t}\n\tfor(int i=1;i<=n;++i){//\u6c42\u524d\u7f00\u8d21\u732e \n\t\tqz[i]=qz[i-1]+getsum(a[i]);\n\t\tadd(a[i]);\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tp[i].l=qr(),p[i].r=qr(),p[i].id=i;\n\t}\n\tsort(p+1,p+m+1,cmp);//\u5947\u5076\u6392\u5e8f \n\tfor(int i=1;i<=m;++i){//\u4e8c\u6b21\u79bb\u7ebf\u8f6c\u79fb\u90e8\u5206\uff0c\u8bb0\u5f97\u79bb\u7ebf\u6574\u4f53(\u6253\u7684 if) \n\t\tif(l>p[i].l){\n\t\t\tque[++ccnt]=(node){p[i].l,l-1,1,i,r};\n\t\t\tans[i]-=qz[l-1]-qz[p[i].l-1];\n\t\t\tl=p[i].l;\n\t\t}\n\t\tif(r<p[i].r){\n\t\t\tque[++ccnt]=(node){r+1,p[i].r,-1,i,l-1};\n\t\t\tans[i]+=qz[p[i].r]-qz[r];\n\t\t\tr=p[i].r;\n\t\t}\n\t\tif(l<p[i].l){\n\t\t\tque[++ccnt]=(node){l,p[i].l-1,-1,i,r};\n\t\t\tans[i]+=qz[p[i].l-1]-qz[l-1];\n\t\t\tl=p[i].l;\n\t\t}\n\t\tif(r>p[i].r){\n\t\t\tque[++ccnt]=(node){p[i].r+1,r,1,i,l-1};\n\t\t\tans[i]-=qz[r]-qz[p[i].r];\n\t\t\tr=p[i].r;\n\t\t}\n\t}\n\tsort(que+1,que+ccnt+1,cmp2);//\u6309\u90a3\u4e2a\u7aef\u70b9\u6392\u5e8f \n\tmemset(sum1,0,sizeof(sum1));\n\tmemset(sum2,0,sizeof(sum2));\n\tmemset(sum3,0,sizeof(sum3));\n\tmemset(sum4,0,sizeof(sum4));\n\tfor(int i=1;i<=ccnt;++i){\n\t\tif(que[i].x==0) continue;//\u4e0d\u7528\u51cf\u6ca1\u6709\u8d21\u732e\u7684 \n\t\twhile(idxn<que[i].x) add(a[++idxn]);//\u8f6c\u79fb [1,l-1] \u7684 l-1 \n\t\tfor(int j=que[i].l;j<=que[i].r;++j) ans[que[i].id]+=1ll*que[i].op*getsum(a[j]);//\u679a\u4e3e\uff0c\u524d\u7f00\u548c\u5728\u524d\u9762\u3002 \n\t}\n\tfor(int i=2;i<=m;++i) ans[i]+=ans[i-1];//\u56e0\u4e3a\u5904\u7406\u7684\u53ea\u6709\u8f6c\u79fb\u7684\u90e8\u5206\uff0c\u6240\u4ee5\u8981\u524d\u7f00\u548c\u3002 \n\tfor(int i=1;i<=m;++i) aans[p[i].id]=ans[i]+qqz[p[i].r]-qqz[p[i].l-1];//\u5148\u8981\u5168\u90e8\u52a0\u4e00\u904d\uff0c\u524d\u9762\u4e5f\u53ef\u4ee5\u5904\u7406\u3002 \n\tfor(int i=1;i<=m;++i) printf(\"%lld\\n\",aans[i]);\n\treturn 0;\n}                  \n```",
        "postTime": 1638252424,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "P5501 \u9898\u89e3"
    },
    {
        "content": "## Section 0\n~~\u770b\u5230\u8ba8\u8bba\u8d34\u91cc\u6709\u4eba\u8bf4 $O(n\\sqrt n\\log n)$ \u8fc7\u53bb\u7136\u540e\u6570\u636e\u52a0\u5f3a\u4e86\uff0c\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002~~\n\n\u597d\u5427\uff0c\u6211\u4eec\u8fd8\u662f\u6765\u778e\u5206\u6790\u4e00\u4e0b\n## Section 1\n\u8003\u8651 $x$ \u8fd9\u4e2a\u6570\u7684\u8d21\u732e\uff0c\u5373 $x\\times t$\uff0c$t$ \u4e3a $[l,r]$ \u4e2d\u6bd4 $x$ \u5c0f\u7684\u6570\u52a0 $1$\u3002\n\n\u8003\u8651\u52a0\u5165 $x$ \u8fd9\u4e2a\u6570\u7684\u8d21\u732e\u3002\n\n* \u5bf9\u4e8e\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570 $y$\uff0c\u8d21\u732e\u5168\u90e8\u589e\u52a0\u4e86 $y$\u3002\n* \u5bf9\u4e8e $x$\uff0c\u8d21\u732e\u5c31\u662f $x\\times t$\u3002\n\n\u6240\u4ee5\u8003\u8651\u4e00\u4e0b\u6211\u4eec\u8981\u6c42\u4ec0\u4e48\uff1a\u5927\u4e8e $x$ \u7684\u6570\u7684\u603b\u548c\uff0c\u548c\u5c0f\u4e8e $x$ \u7684\u6570\u7684\u6570\u91cf\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u53ef\u4ee5\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u968f\u4fbf\u641e\uff0c\u56e0\u6b64\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u5728 $O(n\\sqrt n)$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u4e86\u3002\n\n\u5982\u679c\u60a8\u4e0d\u4f1a\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u53ef\u4ee5\u53bb\u6a21\u677f\u9898\u5b66\u4e60\u4e00\u4e0b\u3002\n## \u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf,obuf[1<<24],*O=obuf;\nusing namespace std;\ninline int read(){\n   int s=0;\n   char ch=getchar();\n   while(ch<'0'||ch>'9') ch=getchar();\n   while(ch>='0'&&ch<='9') s=s*10+(ch^48),ch=getchar();\n   return s;\n}\nvoid print(long long x) {\n    //printf(\"%lld\\n\",x);\n    if(x>9) print(x/10);\n    *O++=x%10+'0';\n}\nstruct query\n{\n    int l,r,bl,id;\n    bool operator<(const query& zhouAKngyangAKNOI){return (bl<zhouAKngyangAKNOI.bl)||(bl==zhouAKngyangAKNOI.bl&&((r<zhouAKngyangAKNOI.r)^(bl&1)));}\n}q[500003];\nstruct Query\n{\n    int k,l,r,op,id;\n    bool operator<(const Query& zhouAKngyangAKNOI){return k<zhouAKngyangAKNOI.k;}\n}v[1000003];\nint n,m,vcnt,a[500003],cnt[500003],cntb[787];\nlong long SUM,sum[500003],sumb[787],pre[500003],ans[500003],lxl[500003],qwq[500003];\nvoid update(int x)\n{\n    SUM+=x;\n    for(int i=x,r=(x/710+1)*710; i<r; ++i) sum[i]+=x,++cnt[i];\n    for(int i=x/710; i<=710; ++i) sumb[i]+=x,++cntb[i];\n    return ;  \n}\n#define getsum(x) SUM-(x<710?0:sumb[x/710-1])-sum[x]+1ll*x*((x<711?0:cntb[(x-1)/710-1])+cnt[x-1])\nsigned main()\n{\n    n=read(),m=read();\n    for(int i=1; i<=n; ++i) a[i]=read(),qwq[i]=qwq[i-1]+a[i];\n    for(int i=1; i<=m; ++i) q[i].l=read(),q[i].r=read(),q[i].bl=q[i].l/1000,q[i].id=i;\n    sort(q+1,q+m+1);\n    for(int i=1; i<=n; ++i) pre[i]=pre[i-1]+getsum(a[i]),update(a[i]);\n    for(int i=1,l=1,r=0; i<=m; ++i)\n    {\n        if(q[i].l<l) v[++vcnt]=(Query){r,q[i].l,l-1,1,i},ans[i]-=pre[l-1]-pre[q[i].l-1],l=q[i].l;\n        if(q[i].r>r) v[++vcnt]=(Query){l-1,r+1,q[i].r,-1,i},ans[i]+=pre[q[i].r]-pre[r],r=q[i].r;\n        if(q[i].l>l) v[++vcnt]=(Query){r,l,q[i].l-1,-1,i},ans[i]+=pre[q[i].l-1]-pre[l-1],l=q[i].l;\n        if(q[i].r<r) v[++vcnt]=(Query){l-1,q[i].r+1,r,1,i},ans[i]-=pre[r]-pre[q[i].r],r=q[i].r;\n    }\n    sort(v+1,v+vcnt+1),SUM=0,memset(cnt,0,sizeof(cnt)),memset(cntb,0,sizeof(cntb)),memset(sum,0,sizeof(sum)),memset(sumb,0,sizeof(sumb));\n    for(int i=1,k=0; i<=vcnt; ++i)\n    {\n        if(v[i].k==0) continue;\n        while(k<v[i].k) update(a[++k]);\n        for(int j=v[i].l; j<=v[i].r; ++j) ans[v[i].id]+=1ll*(getsum(a[j]))*v[i].op;\n    }\n    for(int i=2; i<=m; ++i) ans[i]+=ans[i-1];\n    for(int i=1; i<=m; ++i) lxl[q[i].id]=ans[i]+qwq[q[i].r]-qwq[q[i].l-1];\n\tfor(int i=1; i<=m; ++i) print(lxl[i]),*O++='\\n';\n    fwrite(obuf,O-obuf,1,stdout);\n    return 0;\n}\n//x \u5bf9 [1,r] \u7684\u8d21\u732e\uff1a\n//\u6bd4 x \u5927\u7684\u6570\u7684\u603b\u548c + x * \u6bd4 x \u5c0f\u7684\u6570\u7684\u6570\u91cf\n```",
        "postTime": 1608367570,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5501 \u3010[LnOI2019]\u6765\u8005\u4e0d\u62d2\uff0c\u53bb\u8005\u4e0d\u8ffd\u3011"
    },
    {
        "content": "\u8003\u8651\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\uff1a\n\n\u8bbe $F(i,k)$ \u4e3a $[1,k]$ \u4e2d\u5927\u4e8e $a_i$ \u7684\u6570\u7684\u548c\uff0c$G(i,k)$ \u4e3a $[1,k]$ \u4e2d\u5c0f\u4e8e $a_i$ \u7684\u6570\u7684\u6570\u91cf\u3002\n\n\u5de6\u6307\u9488\u79fb\u52a8\u5230 $x$ \u9020\u6210\u7684\u7b54\u6848\u53d8\u5316\uff1a$F(x,r)-F(x,x)+(G(x,r)-G(x,x)+1)\\times a_x$\n\n\u53f3\u6307\u9488\u79fb\u52a8\u5230 $x$ \u9020\u6210\u7684\u7b54\u6848\u53d8\u5316\uff1a$F(x,x-1)-F(x,l-1)+(G(x,x-1)-G(x,l-1)+1)\\times a_x$ \n\n\u6309\u7167\u5957\u8def\uff0c\u6211\u4eec\u5c06 $F(x,x-1)=F(x,x)$ \u548c $G(x,x-1)=G(x,x)$ \u7684\u503c\u90fd\u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u9884\u5904\u7406\u51fa\u6765\uff0c\u83ab\u961f\u7684\u65f6\u5019\u76f4\u63a5\u5904\u7406\uff1b\u5269\u4f59\u90e8\u5206\u4e8c\u6b21\u79bb\u7ebf\u540e\u4f7f\u7528\u626b\u63cf\u7ebf\u5904\u7406\uff0c\u7531\u4e8e\u83ab\u961f\u7684\u6307\u9488\u79fb\u52a8\u8fde\u7eed\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u6b21\u8fde\u7eed\u7684\u79fb\u52a8\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u6b21\uff0c\u4e00\u6b21\u8be2\u95ee\u6700\u591a\u53d1\u751f\u4e24\u6b21\u8fde\u7eed\u7684\u6307\u9488\u632a\u52a8\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7a7a\u95f4\u590d\u6742\u5ea6 $O(m)$\u3002\n\n\u626b\u63cf\u7ebf\u65f6\u9700\u8981\u6ce8\u610f\uff0c\u83ab\u961f\u6307\u9488\u79fb\u52a8\u8def\u5f84\u7684\u603b\u957f\u5ea6\u4e3a $O(n\\sqrt m)$\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981 $O(1)$ \u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7531\u4e8e\u53ea\u6709 $O(n)$ \u6b21\u63d2\u5165\uff0c\u6240\u4ee5\u63d2\u5165\u590d\u6742\u5ea6\u4e0d\u80fd\u8d85\u8fc7 $O(\\sqrt n)$\uff0c\u4f7f\u7528\u5206\u5757\u5373\u53ef\u3002\n\n\u6700\u540e\u8bb0\u5f97\u5c06\u7b54\u6848\u6c42\u524d\u7f00\u548c\uff0c\u5177\u4f53\u7684\u539f\u56e0\u662f\u8be2\u95ee $i$ \u5904\u7684\u6307\u9488\u79fb\u52a8\u5bf9\u8be2\u95ee $[i,m]$ \u4f1a\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(a_i+n+m)$ \u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\sqrt m+n\\sqrt {a_i})$ \n\n---\n\n\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\uff0c\u4e0d\u61c2\u5f97\u53ef\u4ee5\u7167\u7740\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u3002\u6e29\u99a8\u63d0\u793a\uff1a\u8bb0\u5f97\u5f00 `long long`\u3002\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<tuple>\nnamespace IO{\n\t#define BUFSIZE 10000000\n\tstruct read{\n\t\tchar buf[BUFSIZE],*p1,*p2,c,f;\n\t\tread():p1(buf),p2(buf){}\n\t\tchar gc(void){\n\t\t\tif(p1==p2)p2=buf+fread(p1=buf,1,BUFSIZE,stdin);\n\t\t\tif(p1==p2)return EOF;\n\t\t\telse return *p1++;\n\t\t}\n\t\tread& operator >>(int& x){\n\t\t\tc=gc(),f=1,x=0;\n\t\t\tfor(;c<'0'||c>'9';c=gc())if(c=='-')f=-1;\n\t\t\tfor(;c>='0'&&c<='9';c=gc())x=x*10+c-'0';\n\t\t\tx*=f;\n\t\t\treturn *this;\n\t\t}\n\t};\n\tstruct write{\n\t\tchar buf[BUFSIZE],*p1,*p2,s[50];\n\t\tint tp;\n\t\twrite():p1(buf),p2(buf+BUFSIZE){}\n\t\t~write(){flush();}\n\t\tvoid flush(void){\n\t\t\tfwrite(buf,1,p1-buf,stdout);\n\t\t\tp1=buf;\n\t\t}\n\t\tvoid pc(char c){\n\t\t\tif(p1==p2)flush();\n\t\t\t*p1++=c;\n\t\t}\n\t\twrite& operator <<(long long x){\n\t\t\tif(x<0)x=-x,pc('-');\n\t\t\tdo{s[tp++]=x%10+'0',x/=10;}while(x);\n\t\t\twhile(tp)pc(s[--tp]);\n\t\t\treturn *this;\n\t\t}\n\t\twrite& operator <<(char x){\n\t\t\tpc(x);\n\t\t\treturn *this;\n\t\t}\n\t};\n\tread in;\n\twrite out;\n}\nusing IO::in;\nusing IO::out;\nint n,m,a[500010],bel[500010],sz,belv[100010],rv[320];\nlong long c[100010],f[500010],g[500010],ans[500010],t[100010];\ninline void updated(int i,long long const &x,long long *c){//\u6811\u72b6\u6570\u7ec4\n\tfor(;i<=100000;i+=i&-i)c[i]+=x;\n}\ninline long long queryd(int i,long long *c){\n\tlong long res(0);\n\tfor(;i;i-=i&-i)res+=c[i];\n\treturn res;\n}\nstruct node{\n\tint l,r,id;\n\tinline bool operator <(node const &x)const{\n\t\treturn bel[l]==bel[x.l]?r<x.r:l<x.l;\n\t}\n}q[500010];\nstd::vector<std::tuple<int,int,int,int> > v[500010];\nlong long fs[350],fv[100010],gs[350],gv[100010];\ninline void update(int const &p,int const &k,long long *s,long long *sv){//\u5206\u5757\n\tfor(int i=belv[p],j=belv[100000];i<=j;i++) s[i]+=k;\n\tfor(int i=p,j=rv[belv[p]];i<=j;i++) sv[i]+=k;\n}\ninline long long query(int const &p,long long *s,long long *sv){\n\treturn s[belv[p]-1]+sv[p];\n}\nint main(){\n\tin>>n>>m;\n\t::sz=317;\n\tfor(int i=1;i<=100000;i++)belv[i]=(i-1)/::sz+1;\n\tfor(int i=0,j=1;i<=100000;i+=::sz,j++)rv[j-1]=i;//\u5206\u5757\n\trv[belv[100000]]=100000;\n\tint sz=n/sqrt(m+1)+1;\n\tfor(int i=1;i<=n;i++)in>>a[i],bel[i]=(i-1)/sz+1;//\u83ab\u961f\u5206\u5757\n\tfor(int i=1;i<=m;i++)in>>q[i].l>>q[i].r,q[i].id=i;\n\tstd::sort(q+1,q+m+1);\n\tfor(int i=1;i<=n;i++){//\u9884\u5904\u7406\n\t\tupdated(a[i],a[i],c);\n\t\tf[i]=queryd(100000,c)-queryd(a[i],c);\n\t\tg[i]=queryd(a[i]-1,t);\n\t\tupdated(a[i],1,t);\n\t}\n\tfor(int i=1,l=1,r=0;i<=m;i++){//\u83ab\u961f\n\t\tif(l>q[i].l) v[r].emplace_back(q[i].l,l-1,1,q[i].id);\n\t\twhile(l>q[i].l) --l,ans[q[i].id]-=f[l]+(g[l]-1)*a[l];\n\t\tif(r<q[i].r) v[l-1].emplace_back(r+1,q[i].r,-1,q[i].id);\n\t\twhile(r<q[i].r)\t++r,ans[q[i].id]+=f[r]+(g[r]+1)*a[r];\n\t\tif(l<q[i].l) v[r].emplace_back(l,q[i].l-1,-1,q[i].id);\n\t\twhile(l<q[i].l) ans[q[i].id]+=f[l]+(g[l]-1)*a[l],++l;\n\t\tif(r>q[i].r) v[l-1].emplace_back(q[i].r+1,r,1,q[i].id);\n\t\twhile(r>q[i].r) ans[q[i].id]-=f[r]+(g[r]+1)*a[r],--r;\n\t}\n\tfor(int p=1;p<=n;p++){//\u626b\u63cf\u7ebf\n\t\tint l,r,kt,id;\n\t\tupdate(a[p],a[p],fs,fv),update(a[p],1,gs,gv);\n\t\tfor(auto&& x:v[p]){\n\t\t\tstd::tie(l,r,kt,id)=x;\n\t\t\tfor(int i=l;i<=r;i++)\n\t\t\t\tans[id]+=kt*(query(100000,fs,fv)-query(a[i],fs,fv)+query(a[i]-1,gs,gv)*a[i]);\n\t\t}\n\t}\n\tfor(int i=2;i<=m;i++)ans[q[i].id]+=ans[q[i-1].id];//\u524d\u7f00\u548c\n\tfor(int i=1;i<=m;i++)out<<ans[i]<<'\\n';\n\treturn 0;\n}\n```\n\n",
        "postTime": 1602921652,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "P5501 \u9898\u89e3"
    },
    {
        "content": "\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\uff0c\u662f\u4e00\u79cd\u53ef\u4ee5\u505a\u5230 $O(n\\sqrt m+nk)$ \u65f6\u95f4\uff0c$O(n)$ \u7a7a\u95f4\u7684\u83ab\u961f\u7b97\u6cd5\u3002\n\n\u4e00\u822c\u9700\u8981\u4e00\u4e2a\u6570\u5b57\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u5177\u6709\u7ed3\u5408\u5f8b\u4e14\u95ee\u9898\u4e0d\u5f3a\u5236\u5728\u7ebf\u3002\n\n\u8bbe $ans(x,[l,r])$ \u8868\u793a\u7b2c $x$ \u4e2a\u6570\u5b57\u5bf9\u533a\u95f4 $[l,r]$ \u7684\u8d21\u732e\uff0c\u5219 $ans(x,[l,r])=a_x\\times(1+\\sum_{l\\le i\\le r}[a_i<a_x])+\\sum_{l\\le i\\le r}[a_i>a_x]\\times a_x$ \u53d1\u73b0\u4e24\u90e8\u5206\u90fd\u5177\u6709\u7ed3\u5408\u5f8b\uff0c\u5747\u53ef\u4ee5\u7b80\u5316\u4e3a\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u95ee\u9898\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u83ab\u961f\u53ef\u4ee5\u505a\u5230 $O(n\\sqrt m\\log_2n)$\uff0c\u663e\u7136\u8fc7\u4e0d\u53bb\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97 $ans(l,[l,r])$ \u4e0e $ans(r,[l,r])$\uff08\u81ea\u5df1\u5bf9\u81ea\u5df1\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5 $ans(l,[l,r])=ans(l,[l+1,r])$\uff09\u3002\n\n\u5dee\u5206\u4e00\u4e0b\uff1a$ans(l,[l,r])=ans(l,[1,r])-ans(l,[1,l-1])=ans(l,[1,r])-ans(l,[1,l])$\uff0c$ans(r,[l,r])=ans(r,[1,r])-ans(r,[1,l-1])$\uff0c\u5176\u4e2d $ans(l,[1,l])$ \u53ef\u4ee5\u9884\u5904\u7406\u53e6\u4e00\u90e8\u5206\u53ef\u4ee5\u5728\u7b2c\u4e8c\u904d\u626b\u63cf\u65f6\u7edf\u4e00\u8ba1\u7b97\u3002\n\n\u53d1\u73b0\u53e6\u4e00\u90e8\u5206\u7684\u67e5\u8be2\u6b21\u6570\u662f $O(n\\sqrt m)$ \u7684\uff0c\u6240\u4ee5\u9700\u8981\u91c7\u7528 $O(1)$ \u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u4f7f\u7528\u503c\u57df\u5206\u5757\uff0c\u53ef\u4ee5\u505a\u5230 $O(\\sqrt C)$ \u4fee\u6539\uff0c$O(1)$ \u67e5\u8be2\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n(\\sqrt m+\\sqrt C))$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n+m+C)$\u3002\n\n\u5f00 O2 \u53ea\u9700 1.65s\uff0c\u771f\u7684\u4e0d\u5361\u5e38\uff01\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\nconst int N=5e5+5,C=2e5+5,K=305;\ninline void File(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"a.in\",\"r\",stdin);\n\tfreopen(\"a.out\",\"w\",stdout);\n#endif\n}\nnamespace fast_io{\n\tchar ib[N+5],ob[N+85],stk[85];\n\tint it,ed,c,ot,t;\n#define _gc (it==ed&&(ed=(it=0)+fread(ib,1,N,stdin),it==ed))?EOF:ib[it++]\n\tinline void read(int &x){\n\t\tfor(c=_gc;c<48;c=_gc);\n\t\tfor(x=0;c>47;c=_gc)x=x*10+(48^c);\n\t}\n\tinline void flush(){\n\t\tfwrite(ob,1,ot,stdout),ot=0;\n\t}\n\tinline void write(ll x,char c='\\n'){\n\t\tt=0;while(x)stk[++t]=48^(x%10),x/=10;\n\t\twhile(t)ob[ot++]=stk[t--];\n\t\tob[ot++]=c;if(ot>N)flush();\n\t}\n};using fast_io::read;\nusing fast_io::write;\nint n,m,ql[N],qr[N],qt;\nint a[N],ct[C],Ct[K],mp[C],mt,p[N];\nll ans[N],fc[N],sm[C],Sm[C];\nstruct adt{int l,r,id,tp;};\nvector<adt>G[N];\ninline void add(int x){\n\tint i,d=a[x]+1;\n\tfor(i=d;(i>>9)==(d>>9);++i)++ct[i];\n\tfor(i=(d>>9)+1;i<=256;++i)++Ct[i];d-=2;\n\tfor(i=d;(i>>9)==(d>>9);--i)sm[i]+=a[x];\n\tfor(i=(d>>9)-1;i>=0;--i)Sm[i]+=a[x];\n}\ninline ll get(int d){\n\treturn Sm[d>>9]+sm[d]+ll(Ct[d>>9]+ct[d])*d;\n}\nsigned main(){\n\tFile();\n\tread(n),read(m),qt=1+n/(1+sqrt(m));\n\tint i,j,L,l,R,r;\n\tfor(i=1;i<=n;++i)\n\t\tread(a[i]),fc[i]=get(a[i]),add(i);\n\tmemset(Sm,0,sizeof(Sm));\n\tmemset(Ct,0,sizeof(Ct));\n\tmemset(sm,0,sizeof(sm));\n\tmemset(ct,0,sizeof(ct));\n\tfor(i=1;i<=m;++i)\n\t\tread(ql[i]),read(qr[i]),p[i]=i;\n\tstable_sort(p+1,p+m+1,[&](int x,int y){\n\t\treturn (ql[x]/qt==ql[y]/qt)?((ql[x]/qt)&1)?\n\t\tqr[x]<qr[y]:qr[x]>qr[y]:ql[x]<ql[y];\n\t});\n\tl=1,r=0;\n\tfor(i=1;i<=m;++i){\n\t\tL=ql[p[i]],R=qr[p[i]];\n\t\tif(l>L){\n\t\t\tif(r)G[r].push_back({L,l-1,p[i],1});\n\t\t\twhile(l>L)--l,ans[p[i]]-=fc[l]-a[l];\n\t\t}if(r<R){\n\t\t\tif(l>1)G[l-1].push_back({r+1,R,p[i],-1});\n\t\t\twhile(r<R)++r,ans[p[i]]+=fc[r]+a[r];\n\t\t}\n//\t\tprintf(\"l:%d r:%d ans[i]:%d\\n\",l,r,ans[i]);\n\t\tif(l<L){\n\t\t\tif(r)G[r].push_back({l,L-1,p[i],-1});\n\t\t\twhile(l<L)ans[p[i]]+=fc[l]-a[l],++l;\n\t\t}if(r>R){\n\t\t\tif(l>1)G[l-1].push_back({R+1,r,p[i],1});\n\t\t\twhile(r>R)ans[p[i]]-=fc[r]+a[r],--r;\n\t\t}\n//\t\tprintf(\"l:%d r:%d ans[i]:%d\\n\",l,r,ans[i]);\n//\t\tputs(\"\");\n\t}\n\tfor(i=1;i<=n;++i){\n\t\tadd(i);\n//\t\tprintf(\"get2:%d\\n\",get(2));\n\t\tfor(adt at:G[i])\n\t\t\tfor(j=at.l;j<=at.r;++j)\n\t\t\t\tans[at.id]+=get(a[j])*at.tp;\n\t}\n//\tfor(i=1;i<=m;++i)printf(\"%d \",ans[i]);puts(\"\");\n\tfor(i=1;i<=m;++i)ans[p[i]]+=ans[p[i-1]];\n\tfor(i=1;i<=m;++i)printf(\"%lld\\n\",ans[i]);\n//\t\twrite(ans[i]);\n\tfast_io::flush();return 0;\n}\n```",
        "postTime": 1659353543,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u4e8c\u6b21\u79bb\u7ebf\u4e0e\u503c\u57df\u5206\u5757"
    },
    {
        "content": "## 1 $\\text{Question}$\n\n[P5501 [LnOI2019]\u6765\u8005\u4e0d\u62d2\uff0c\u53bb\u8005\u4e0d\u8ffd](https://www.luogu.com.cn/problem/P5501)\n\n## 2 $\\text{Solution}$\n\n\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u5230\u83ab\u961f\u7684\u505a\u6cd5\uff0c\u7528\u83ab\u961f\u5957\u4e00\u4e2a\u5e73\u8861\u6811\u6216\u8005\u7ebf\u6bb5\u6811\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n^{1.5}\\log n)$\u3002\n\n\u4f46\u662f\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u660e\u663e\u662f\u4e0d\u80fd\u8fc7\u7684\u3002\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\u3002\n\n\u8003\u8651\u6bcf\u4e00\u6b21\u8f6c\u79fb\u65f6\u52a0\u5165\u4e00\u4e2a\u6570\u7b54\u6848\u7684\u53d8\u5316\u91cf\uff08\u51cf\u53bb\u4e00\u4e2a\u6570\u5c31\u662f\u76f8\u53cd\u6570\uff09\u3002\n\n\u6211\u4eec\u8bbe $f(x,y,k)$ \u4e3a\u533a\u95f4 $x\\sim y$ \u4e2d\u6bd4 $k$ \u5c0f\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u8bbe $Gsum(x,y,k)$ \u4e3a\u533a\u95f4 $x\\sim y$ \u4e2d\u6bd4 $k$ \u5927\u7684\u6570\u7684\u548c\u3002\n\n\u5047\u8bbe\u5728\u83ab\u961f\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u904d\u5386\u4e86\u533a\u95f4 $l\\sim r-1$\uff0c\u73b0\u5728\u8981\u63d2\u5165 $a_r$\u3002\n\n$$\\Delta Ans = f(l,r-1,a_r)\\times a_r+a_r+Gsum(l,r-1,a_r)$$\n\n\u89e3\u91ca\u4e00\u4e0b\uff0c$f(l,r-1,a_r)\\times a_r + a_r$ \u5c31\u662f $a_r$ \u7684\u201cAbbi\u201d\u503c\u3002\n\n\u800c $a_r$ \u7684\u63d2\u5165\u4f1a\u5bfc\u81f4\u533a\u95f4\u5185\u6bd4\u5b83\u5927\u7684\u6570\u7684\u6392\u540d\u52a0 $1$\u3002\n\n\u6240\u4ee5\u6bcf\u4e2a\u6bd4\u5b83\u5927\u7684\u6570\u7684\u201cAbbi\u201d\u503c\u90fd\u4f1a\u589e\u52a0\uff0c\u603b\u5171\u589e\u52a0 $Gsum(l,r-1,a_r)$\u3002\n\n\u63a5\u7740\u6211\u4eec\u5c06\u8fd9\u4e2a\u5f0f\u5b50\u5dee\u5206\uff1a\n\n$$\\Delta Ans = f(1,r-1,a_r)\\times a_r-f(1,l-1,a_r)\\times a_r+a_r+Gsum(1,r-1,a_r)-Gsum(1,l-1,a_r)$$\n\n\u6211\u4eec\u4f1a\u53d1\u73b0 $f(1,r-1,a_r)$ \u548c $Gsum(1,r-1,a_r)$ \u90fd\u662f\u53ef\u4ee5\u9884\u5904\u7406\u7684\u3002\n\n\u5177\u4f53\u5c31\u662f\u5c06\u6bcf\u4e00\u4e2a $f(1,i-1,a_i)$ \u548c $Gsum(1,i-1,a_i)$ \u7b97\u51fa\u6765\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\u3002\n\n\u63a5\u7740\u6211\u4eec\u8003\u8651 $f(1,l-1,a_r)$ \u548c $Gsum(1,l-1,a_r)$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u628a\u6211\u4eec\u6240\u6709\u8981\u6c42\u7684\u8fd9\u6837\u7684\u8be2\u95ee\u52a0\u8d77\u6765\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4 $1\\sim i-1$\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa $f(1,i-1,k)$ \u548c $Gsum(1,i-1,k)$\uff0c\u4e00\u5171\u8be2\u95ee $n^{1.5}$ \u6b21\u3002\n\n\u5e76\u4e14\u5047\u5982\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4\u7ed3\u6784\uff0c\u7531\u4e8e\u6211\u4eec\u9700\u8981\u5c06\u533a\u95f4 $1\\sim i$ \u5b58\u5165\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece $1\\sim n$ \u5faa\u73af\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u8fd9\u6837\u603b\u5171\u7684\u52a0\u5165\u6b21\u6570\u4e3a $n$ \u6b21\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u7528 vector\u3002\n\n\u5177\u4f53\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a\n\n```vector <int> vec[500010];```\n\n\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u8be2\u95ee $f(1,l-1,a_r)$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 $a_r$ \u63d2\u5165\u5230 $vec_l$ \u4e2d\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u65b9\u4fbf\u7684\u627e\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4 $1\\sim i-1$ \u7684\u6240\u6709\u7684\u8be2\u95ee\u3002\n\n\u63a5\u7740\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002\n\n\u5e94\u8be5\u9700\u8981\u80fd\u591f\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u6c42\u548c\u3002\n\n\u5047\u8bbe\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u5355\u70b9\u4fee\u6539\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(\\alpha)$\uff0c\u533a\u95f4\u6c42\u548c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(\\beta)$\u3002\n\n\u5219\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n^{1.5}\\beta+n\\alpha)$\u3002\n\n\u660e\u663e\u6211\u4eec\u770b\u5230\u8fd9\u4e2a $n^{1.5}\\beta$ \u5c31\u53ef\u4ee5\u77e5\u9053\u533a\u95f4\u6c42\u548c\u53ea\u80fd\u662f $\\Theta(1)$ \u7684\uff08\u5426\u5219\u627f\u53d7\u4e0d\u4e86\u554a\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u80fd\u591f\u60f3\u5230\u503c\u57df\u5206\u5757\uff0c\u52a0\u4e0a\u6bcf\u4e2a\u5757\u5185\u6570\u603b\u548c\u7684\u524d\u7f00\u548c\uff0c\u533a\u95f4\u6c42\u548c\u53ef\u4ee5\u505a\u5230 $\\Theta(1)$\u3002\n\n\u5b83\u7684\u5355\u70b9\u4fee\u6539\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n^{0.5})$\uff0c\u4e5f\u80fd\u591f\u627f\u53d7\u3002\n\n\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n^{1.5})$\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u5df2\u7ecf\u904d\u5386\u4e86\u533a\u95f4 $l+1\\sim r$\uff0c\u8981\u63d2\u5165 $a_l$\u3002\n\n\u548c\u4e0a\u9762\u7684\u60c5\u51b5\u5dee\u4e0d\u591a\uff0c\u53ea\u9700\u8981\u628a\u6240\u6709\u90fd\u5230\u8fc7\u6765\u5c31\u884c\u4e86\u3002\n\n\u53ef\u662f\u6211\u4eec\u5982\u679c\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u7684\u63d2\u5165\u5230 vector \u91cc\u9762\uff0c\u4f1a\u53d1\u73b0\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n^{1.5})$\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u6bcf\u4e00\u6b21\u83ab\u961f\u63d2\u5165\u7684\u70b9\u90fd\u662f\u8fde\u7eed\u7684\uff0c\u4f8b\u5982 $r$ \u6307\u9488\u4ece $1$ \u79fb\u52a8\u5230 $3$\uff0c\u63d2\u5165\u7684\u6570\u5c31\u662f $a_1,a_2,a_3$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e00\u6bb5\u533a\u95f4\u5b58\u5165 vector \u4e2d\uff0c\u627e\u7684\u65f6\u5019\u5faa\u73af\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u50cf\u4e0a\u8ff0\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a $1,3$ \u5b58\u5165 vector \u4e2d\uff0c\u8868\u793a\u533a\u95f4 $1\\sim 3$\u3002\n\n\u6700\u540e\u522b\u5fd8\u8bb0\u5f00 long long\u3002\n\n## 3 $\\text{Code}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nint n, m, a[500010];\nint belong[500010], L[710], R[710], siz, bnum, l = 1, r = 0;\nLL f[500010], g[500010], Ans[500010];\nstruct Query {\n\tint l, r, id;\n}q[500010];\nstruct node {\n\tint l, r, p, id;\n};\nvector <node> vec1[500010], vec2[500010];\ninline bool cmp(Query a, Query b) {\n\treturn ((belong[ a.l ] ^ belong[ b.l ])? belong[ a.l ] < belong[ b.l ]:\n\t\t\t(belong[ a.l ] & 1)? a.r < b.r: a.r > b.r);\n}\nstruct Fenwick {\n\tLL t[100010];\n\tinline void clear() {\n\t\tmemset(t, 0, sizeof(t));\n\t}\n\tinline int lowbit(int x) {\n\t\treturn x & (-x);\n\t}\n\tinline void update(int x, int v) {\n\t\twhile (x <= 1e5) {\n\t\t\tt[x] += 1ll * v;\n\t\t\tx += lowbit(x);\n\t\t}\n\t}\n\tinline LL query(int x) {\n\t\tLL ans = 0;\n\t\twhile (x > 0) {\n\t\t\tans += t[x];\n\t\t\tx -= lowbit(x);\n\t\t}\n\t\treturn ans;\n\t}\n}T1, T2;\nstruct Block_Array {\n\tLL sum1[710], sum2[710][710];\n\tinline void clear() {\n\t\tfor (int i = 0; i < 710; i++) {\n\t\t\tsum1[i] = 0;\n\t\t\tfor (int j = 0; j < 710; j++)\n\t\t\t\tsum2[i][j] = 0;\n\t\t}\n\t}\n\tinline void insert(int x, int v) {\n\t\tfor (int i = belong[x]; i < 710; i++)\n\t\t\tsum1[i] += 1ll * v;\n\t\tfor (int i = x; i <= R[ belong[x] ]; i++)\n\t\t\tsum2[ belong[x] ][ i - L[ belong[x] ] + 1 ] += 1ll * v;\n\t}\n\tinline LL query(int x) {\n\t\treturn sum1[ belong[x] - 1 ] + sum2[ belong[x] ][ x - L[ belong[x] ] + 1 ];\n\t}\n}Sum1, Sum2;\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0); cout.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsiz = 710; bnum = (500000 - 1) / siz + 1;\n\tfor (int i = 1; i <= bnum; i++) {\n\t\tL[i] = (i - 1) * siz + 1;\n\t\tR[i] = min(i * siz, 500000);\n\t\tfor (int j = L[i]; j <= R[i]; j++)\n\t\t\tbelong[j] = i;\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tcin >> q[i].l >> q[i].r;\n\t\tq[i].id = i;\n\t}\n\tsort(q + 1, q + m + 1, cmp);\n\tfor (int i = 1; i <= m; i++) {\n\t\tif (r < q[i].r) vec1[l].push_back((node){r + 1, q[i].r, 1, q[i].id});\n\t\tif (r > q[i].r) vec1[l].push_back((node){q[i].r + 1, r, -1, q[i].id});\n\t\tr = q[i].r;\n\t\tif (l < q[i].l) vec2[r].push_back((node){l, q[i].l - 1, -1, q[i].id});\n\t\tif (l > q[i].l) vec2[r].push_back((node){q[i].l, l - 1, 1, q[i].id});\n\t\tl = q[i].l;\n\t}\n\tT1.clear(); T2.clear();\n\tfor (int i = 1; i <= n; i++) {\n\t\tf[i] = T1.query(a[i] - 1) * 1ll * a[i];\n\t\tg[i] = T2.query(100000) - T2.query(a[i]);\n\t\tT1.update(a[i], 1);\n\t\tT2.update(a[i], a[i]);\n\t}\n\tSum1.clear(); Sum2.clear();\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (auto v: vec1[i]) {\n\t\t\tfor (int j = v.l; j <= v.r; j++) {\n\t\t\t\tAns[ v.id ] += (f[j] - Sum1.query(a[j] - 1) * 1ll * a[j]) * 1ll * v.p;\n\t\t\t\tAns[ v.id ] += (g[j] - Sum2.query(100000) + Sum2.query(a[j])) * 1ll * v.p;\n\t\t\t\tAns[ v.id ] += 1ll * a[j] * v.p;\n\t\t\t}\n\t\t}\n\t\tSum1.insert(a[i], 1);\n\t\tSum2.insert(a[i], a[i]);\n\t}\n\tT1.clear(); T2.clear();\n\tfor (int i = n; i >= 1; i--) {\n\t\tf[i] = T1.query(a[i] - 1) * 1ll * a[i];\n\t\tg[i] = T2.query(100000) - T2.query(a[i]);\n\t\tT1.update(a[i], 1);\n\t\tT2.update(a[i], a[i]);\n\t}\n\tSum1.clear(); Sum2.clear();\n\tfor (int i = n; i >= 1; i--) {\n\t\tfor (auto v: vec2[i]) {\n\t\t\tfor (int j = v.l; j <= v.r; j++) {\n\t\t\t\tAns[ v.id ] += (f[j] - Sum1.query(a[j] - 1) * 1ll * a[j]) * 1ll * v.p;\n\t\t\t\tAns[ v.id ] += (g[j] - Sum2.query(100000) + Sum2.query(a[j])) * 1ll * v.p;\n\t\t\t\tAns[ v.id ] += 1ll * a[j] * v.p;\n\t\t\t}\n\t\t}\n\t\tSum1.insert(a[i], 1);\n\t\tSum2.insert(a[i], a[i]);\n\t}\n\tfor (int i = 1; i <= m; i++)\n\t\tAns[ q[i].id ] += Ans[ q[ i - 1 ].id ];\n\tfor (int i = 1; i <= m; i++)\n\t\tcout << Ans[i] << endl;\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1 ^_\u306e",
        "postTime": 1648993962,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "P5501 [LnOI2019]\u6765\u8005\u4e0d\u62d2\uff0c\u53bb\u8005\u4e0d\u8ffd"
    },
    {
        "content": " (~~\u6bd2\u7624\u51fa\u9898\u4eba\u8003$lxl$\u805a\u805a\u53d1\u660e\u7684\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f$...$~~)\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u5b9a\u4e49\uff1a$[l,r]$\u4e2d\u7684\u6392\u540d\u5b9e\u9645\u4e0a\u4e3a\u4e25\u683c\u5c0f\u4e8e\u5176\u7684\u6570\u91cf$+1$\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u4f7f\u7528\u83ab\u961f\uff0c\u90a3\u4e48\u663e\u7136\u6bcf\u6b21\u79fb\u52a8\u52a0\u5165\u4e00\u4e2a\u6570\u65f6\uff0c\u5b83\u4e0d\u4f1a\u5f71\u54cd\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u6570\u5bf9\u7b54\u6848\u9020\u6210\u7684\u5f71\u54cd\u3002\uff08\u4ee5\u53f3\u7aef\u70b9\u7684\u79fb\u52a8\u4e3a\u4f8b\uff09\n\n\u800c\u90a3\u4e9b\u6bd4\u4ed6\u5927\u7684\u6570\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u90fd$+1$\uff0c\u6b64\u65f6\u5e94\u8be5$+=\\sum[a_i>x]*a_i$\n\n\u7136\u540e\u5b83\u672c\u8eab\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$x$*(\u5c0f\u4e8e\u5b83\u7684\u6570\u7684\u4e2a\u6570$+1$)\n\n\u6734\u7d20\u7684\u60f3\u6cd5\u662f\u91c7\u7528\u70b9\u540d\u88ab\u5361\u7684\u505a\u6cd5\uff0c\u5efa\u4e00\u9897\u6743\u503c\u6811\u72b6\u6570\u7ec4\uff0c\u6bcf\u6b21\u79fb\u52a8\u67e5\u8be2\u4e00\u4e0b\u8d21\u732e\u5e76\u505a\u4e00\u4e0b\u63d2\u5165/\u5220\u9664\n\n\u590d\u6742\u5ea6$O(n\\sqrt m*\\log V)$\n\n\u4e0d\u8fc7\u6709\u8da3\u7684\u662f\u663e\u7136\u6bcf\u6b21\u79fb\u52a8\u7684\u8d21\u732e\u662f\u6ee1\u8db3\u53ef\u5dee\u5206\u6027\u7684\u3002\n\n\u4e0b\u9762\u4ee5$r$\u7aef\u70b9\u7684\u79fb\u52a8\u4e3a\u4f8b\uff0c\u6bcf\u6b21\u79fb\u52a8\u5bf9\u7b54\u6848\u7684\u53d8\u5316\u770b\u4f5c\u4e24\u4e2a\uff1a\n\n$1.$\u4e3a$[l,r]$\u5185\u5927\u4e8e$a_r$\u7684\u6570\u7684\u548c\uff0c\u53ef\u4ee5\u770b\u4f5c\uff1a\n\n$$\\sum_{i=1}^r[a_i>a_r]*a_i-\\sum_{i=1}^{l-1}[a_i>a_r]*a_i$$\n\n$2.$\u4e3a$[l,r]$\u5c0f\u4e8e\u4ed6\u7684\u6570\u7684\u4e2a\u6570$+1*a_r$\uff0c\u53ef\u4ee5\u770b\u4f5c\uff1a\n\n$$(1+\\sum_{i=1}^r[a_i<a_r]-\\sum_{i=1}^{l-1}[a_i<a_r])*a_r$$\n\n\u7136\u540e\u4f60\u60ca\u4eba\u7684\u53d1\u73b0\uff0c\u4e24\u4e2a\u90e8\u5206\u7684\u524d\u9762\u90a3\u4e00\u5768\u5c45\u7136\u90fd\u53ef\u4ee5\u76f4\u63a5\u5199\u4e2a\u6811\u72b6\u6570\u7ec4\u9884\u5904\u7406\u51fa\u6765\u590d\u6742\u5ea6$O(n\\log n)$\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u5b9e\u9645\u4e0a\u53ea\u6709\u540e\u9762\u90a3\u4e00\u5768\uff0c\u800c\u4ed6\u4eec\u5219\u53ef\u4ee5\u5c06\u6bcf\u6b21\u79fb\u52a8\u5b58\u5728\u5bf9\u5e94\u7684$l$\u7aef\u70b9\u5904\uff0c\u5f53\u4f5c\u4e00\u4e2a\u8be2\u95ee\uff0c\u7136\u540e\u505a\u4e00\u904d\u626b\u63cf\u7ebf\uff0c\u626b\u5230\u4e00\u4e2a\u70b9\u5c31\u628a\u5b58\u5728\u5176\u4f4d\u7f6e\u5904\u7684\u6240\u6709\u8be2\u95ee\u90fd\u5904\u7406\u6389\u3002\n\n\u6211\u4eec\u626b\u7684\u8fc7\u7a0b\u662f\u4ece$1-n$\u626b\u8fc7\u53bb\uff0c\u8be2\u95ee\u7684\u603b\u6570\u5219\u662f$r$\u79fb\u52a8\u7684\u6b21\u6570\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u662f\u95ee$1-x$\u4e2d\u6bd4$y$\u5927\u7684\u6570\u7684\u548c\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u8be2\u95ee\u7684\u603b\u6570\u662f$O(n\\sqrt m)$\u7684\u800c\u63d2\u5165\u7684\u603b\u6570\u662f$O(n)$\n\n\u4e8e\u662f\u53ef\u4ee5\u4e0a\u4e00\u4e2a\u503c\u57df\u5206\u5757\u6765\u5e73\u8861\u590d\u6742\u5ea6\uff08\u90a3\u79cd$\\sqrt n$\u63d2\u5165\uff0c$O(1)$\u67e5\u8be2\u7684\uff09\uff0c\u6700\u540e\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(n\\sqrt n)$\u4e86\uff08\u597d\u50cf\u6b64\u9898$n,m$\u5e73\u7ea7\uff09\n\n\u5f53\u7136\u4f60$l$\u7aef\u70b9\u7684\u79fb\u52a8\u4e5f\u8981\u53cd\u5411\u505a\u4e00\u904d\u3002\n\n$but$\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u76f4\u63a5\u5199\u7a7a\u95f4\u590d\u6742\u5ea6\u662f$O(n\\sqrt m)$\u7684\uff0c\u4f60\u53ef\u4ee5\u5199\u4e2a\u4f18\u5316\u7a7a\u95f4\u7684\u7248\u672c\uff0c\u628a\u6bcf\u6b21\u7684\u79fb\u52a8\u5f53\u4f5c\u4e00\u4e2a\u533a\u95f4\u5b58\u8d77\u6765\uff0c\u5c31\u662f$O(m)$\u4e86\u3002\n\n\u5426\u5219\u6bd2\u7624\u51fa\u9898\u4eba\u7684$50W$\u6570\u636e\u4f60\u7a7a\u95f4\u5341\u6709\u516b\u4e5d\u662f\u4e0d\u80fd\u8fc7\u7684\n\n\u4e0d\u8fc7\u8fd9\u9053\u9898\u6709\u70b9\u826f\u5fc3\u5c31\u662f\u6ca1\u6709\u79bb\u6563\u5316$qwq$\n\n\u4e00\u70b9\u7ec6\u8282\uff1a\u6211\u4eec\u505a\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u7684\u7b2c\u4e8c\u90e8\u5206\uff08\u626b\u63cf\u7ebf\uff09\u5904\u7684\u590d\u6742\u5ea6\u662f$O(n\\sqrt n)$\u7684\uff0c\u7136\u800c\u6709\u8da3\u7684\u662f\u6211\u4eec\u505a\u6734\u7d20\u83ab\u961f\u79bb\u7ebf\u79fb\u52a8\u7684\u590d\u6742\u5ea6\u4e5f\u662f$O(n\\sqrt n)$\u7684\uff0c\u6216\u8bb8\u4f1a\u5b58\u5728\u5e38\u6570\u4e0a\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8bb0\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8fd9\u6837\u6bcf\u6b21\u79fb\u52a8\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u53bb\u4e86\uff0c\u83ab\u961f\u7684\u590d\u6742\u5ea6\u5c31\u964d\u4e3a\u4e86$O(m)$\u5730\u8bf4\u3002\u5426\u5219\u6211\u8fd9\u4e2a\u5927\u5e38\u6570\u505a\u6cd5\u5e94\u8be5\u5c31\u5361\u4e0d\u8fc7\u53bb\u4e86\u3002\n\n\u7136\u540e\u56e0\u4e3a\u6211\u592a\u5f31\u4e86\u4e0d\u77e5\u9053\u600e\u4e48\u5199\u53ea\u8981\u8dd1\u4e00\u904d\u7684\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f(\u6211\u770b\u522b\u4eba\u7684\u4ee3\u7801\u90fd\u662f\u4e00\u4e2a$for$)\uff0c\u6240\u4ee5\u6211\u7684\u8981\u8dd1\u4e24\u904d\u3002\n\n~~\u8c8c\u4f3c\u6700\u540e\u4e24\u4e2a\u70b9\u5361\u7740\u4e0a\u754c\u8fc7\u7684\uff0c\u4e0d\u8fc7\u6ca1\u5173\u7cfb\u8fc7\u4e86\u5c31\u597d~~\n\n\u5982\u679c\u4f60\u770b\u4e86\u8fd9\u7bc7\u9898\u89e3\u8fd8\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u5199\u53ef\u4ee5\u770b\u770b[\u8fd9\u7bc7](https://www.luogu.org/blog/Soulist/solution-p5047)\n\n\u4e0b\u9762\u662f\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define drep( i, s, t ) for( register int i = t; i >= s; -- i )\n#define re register\n#define lowbit(x) ( x & ( -x ) )\n#define LL long long\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int N = 500000 + 5 ; \nconst int M = 500 + 5 ; \nint n, m, tot, cnt, Maxa, c[N], Id[N], L[N], R[N];\nint tree1[N], w1[N], ad[M] ; \nLL Ans, ans[N], tree2[N], num1[N], num2[N], w2[N], mk[M] ; \nstruct Q { int l, r, id; } q[N];\nstruct node { int p, l, r, id; };\nvector<node> vc1[N], vc2[N] ; \nbool cmp( Q x, Q y ) { return ( x.l / tot == y.l / tot ) ? x.r < y.r : x.l < y.l ; }//\u83ab\u961f\u5206\u5757\n//\u6811\u72b6\u6570\u7ec4 \nvoid tr_add1( int x, int k ) { for( int i = x; i <= Maxa; i += lowbit(i) ) tree1[i] += k ; }\nvoid tr_add2( int x, int k ) { for( int i = x; i <= Maxa; i += lowbit(i) ) tree2[i] += 1ll * k ; }\nLL tr_sum( int x ) { LL res = 0 ; for( ; x; x -= lowbit(x) ) res += tree1[x]; return res ; }\nLL tr_sum2( int x ) { LL res = 0 ; for( ; x; x -= lowbit(x) ) res += 1ll * tree2[x]; return res ; }\n//end \nvoid pushup( int x ) { //\u503c\u57df\u5206\u5757 \n\tint fr = x + 1, ed = x - 1 ;\n\tif( ad[Id[x]] ) rep( i, L[Id[x]], R[Id[x]] ) w1[i] += ad[Id[x]] ; ad[Id[x]] = 0 ;\n\trep( i, fr, R[Id[x]] ) ++ w1[i] ; fr = Id[x] + 1 ; \n\trep( i, fr, tot ) ++ ad[i] ; \n\tif( mk[Id[x]] ) rep( i, L[Id[x]], R[Id[x]] ) w2[i] += mk[Id[x]] ; mk[Id[x]] = 0 ;\n\trep( i, L[Id[x]], ed ) w2[i] += x ; ed = Id[x] - 1 ;\n\trep( i, 1, ed ) mk[i] += x ; \n}\nvoid solve() {\n\tcnt = sqrt(Maxa), tot = 1, L[1] = 1 ; \n\tif( cnt * cnt < Maxa ) ++ cnt ;\n\trep( i, 1, Maxa ) { Id[i] = tot; if( i % cnt == 0 ) { R[tot] = i, L[++ tot] = i + 1 ; } }\n\tR[tot] = Maxa ; int id, p, fr, ed ; \n\trep( i, 1, n ) {\n\t\tint sz = vc1[i].size() - 1 ; \n\t\trep( j, 0, sz ) {\n\t\t\tid = vc1[i][j].id, p = vc1[i][j].p, fr = vc1[i][j].l, ed = vc1[i][j].r ;\n\t\t\trep( k, fr, ed ) ans[id] += 1ll * p * ( w2[c[k]] + mk[Id[c[k]]] + 1ll * c[k] * ( w1[c[k]] + ad[Id[c[k]]] ) ) ;\n\t\t} pushup( c[i] ) ;  \n\t}\n\tmemset( w1, 0, sizeof(w1) ), memset( w2, 0, sizeof(w2) ) ;\n\tmemset( ad, 0, sizeof(ad) ), memset( mk, 0, sizeof(mk) ) ;\n\tdrep( i, 1, n ) {\n\t\tint sz = vc2[i].size() - 1 ; \n\t\trep( j, 0, sz ) {\n\t\t\tid = vc2[i][j].id, p = vc2[i][j].p, fr = vc2[i][j].l, ed = vc2[i][j].r ;\n\t\t\trep( k, fr, ed ) ans[id] += 1ll * p * ( w2[c[k]] + mk[Id[c[k]]] + 1ll * c[k] * ( w1[c[k]] + ad[Id[c[k]]] ) ) ;\n\t\t} pushup( c[i] ) ;\n\t}\n\trep( i, 1, m ) ans[q[i].id] += ans[q[i - 1].id] ; \n}\n signed main()\n{\n\tn = read(), m = read(), tot = n / sqrt(1.5 * m) ; \n\trep( i, 1, n ) num2[i] = num1[i] = c[i] = read(), Maxa = max( Maxa, c[i] ) ; \n\trep( i, 1, m ) q[i].l = read(), q[i].r = read(), q[i].id = i ; sort( q + 1, q + m + 1, cmp ) ; //\u6392\u5e8f\uff0c\u8bfb\u5165\u8be2\u95ee \n\trep( i, 1, n ) num1[i] += ( tr_sum2(Maxa) - tr_sum2(c[i]) + 1ll * c[i] * tr_sum(c[i] - 1) ), \n\tnum1[i] += num1[i - 1], tr_add1( c[i], 1 ), tr_add2( c[i], c[i] ) ; \n\tmemset( tree1, 0, sizeof(tree1) ), memset( tree2, 0, sizeof(tree2) ) ;\n\tdrep( i, 1, n ) num2[i] += ( tr_sum2(Maxa) - tr_sum2(c[i]) + 1ll * c[i] * tr_sum(c[i] - 1) ), \n\tnum2[i] += num2[i + 1], tr_add1( c[i], 1 ), tr_add2( c[i], c[i] ) ;\n\tint l = 1, r = 0 ; \n\t//\u83ab\u961f\u5904\u7406 \n\trep( i, 1, m ) {\n\t\twhile( r < q[i].r ) ans[q[i].id] += ( num1[q[i].r] - num1[r] ), \n\t\tvc1[l].push_back((node){ -1, r + 1, q[i].r, q[i].id }), r = q[i].r ;\n\t\twhile( r > q[i].r ) ans[q[i].id] -= ( num1[r] - num1[q[i].r] ), \n\t\tvc1[l].push_back((node){ 1, q[i].r + 1, r, q[i].id }), r = q[i].r ;\n\t\twhile( l < q[i].l ) ans[q[i].id] -= ( num2[l] - num2[q[i].l] ),\n\t\tvc2[r].push_back((node){ 1, l, q[i].l - 1, q[i].id }), l = q[i].l ;\n\t\twhile( l > q[i].l ) ans[q[i].id] += ( num2[q[i].l] - num2[l] ), \n\t\tvc2[r].push_back((node){ -1, q[i].l, l - 1, q[i].id }), l = q[i].l ;\n\t}\n\tsolve() ; \n\trep( i, 1, m ) printf(\"%lld\\n\", ans[i] ) ;\n\treturn 0;\n}\n```",
        "postTime": 1565424156,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5501 \u3010[LnOI2019]\u6765\u8005\u4e0d\u62d2\uff0c\u53bb\u8005\u4e0d\u8ffd\u3011"
    },
    {
        "content": "### \u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\n\n### \u7b97\u6cd5\u63d0\u51fa\n\n\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u662f\u4e00\u4e2a\u7531 `lxl` \u5927\u4f6c\u63d0\u51fa\u7684\u65b0\u79d1\u6280\uff0c\u5176\u57fa\u4e8e\u83ab\u961f $+$ \u626b\u63cf\u7ebf\u7684\u601d\u60f3\uff0c\u901a\u8fc7\u626b\u63cf\u7ebf\uff0c\u518d\u6b21\u5c06\u66f4\u65b0\u7b54\u6848\u7684\u8fc7\u7a0b\u79bb\u7ebf\u5904\u7406\uff0c\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u5177\u4f53\u5730\uff0c\u8bbe\u66f4\u65b0\u7b54\u6848\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(k)$\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u5c06\u83ab\u961f\u7684\u590d\u6742\u5ea6\u4ece $\\mathcal O(nk\\sqrt n)$ \u964d\u5230\u4e86 $\\mathcal O(nk+n\\sqrt n)$\uff0c \u5927\u5927\u7b80\u5316\u4e86\u8ba1\u7b97\u3002\n\n\u518d\u8865\u5145\u4e00\u70b9\uff0c\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u901a\u5e38\u9002\u7528\u4e8e\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u9898\u76ee\uff1a\n\n* \u53ef\u7528\u83ab\u961f\u505a\u3002\n*  \u83ab\u961f\u6269\u5c55\u6216\u8005\u5220\u9664\u4e00\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u53d6\u51b3\u4e8e\u5f53\u524d\u533a\u95f4\u7684\u957f\u5ea6\u3002\n* \u6269\u5c55\u6216\u8005\u5220\u9664\u4e00\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u53ef\u7528\u524d\u7f00\u5199\u6210\u5dee\u5206\u7684\u5f62\u5f0f\u3002\n\n### \u7b97\u6cd5\u89e3\u51b3\n\n\u4ee5 [\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P4887) \u4e3a\u4f8b\u3002\n\n>  \u7ed9\u4e86\u4f60\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u6bcf\u6b21\u67e5\u8be2\u7ed9\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u67e5\u8be2 $l \\leq i< j \\leq r$\uff0c\u4e14 $a_i \\oplus a_j$ \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u6709 $k$ \u4e2a $1$ \u7684\u4e8c\u5143\u7ec4 $(i,j)$ \u7684\u4e2a\u6570\u3002\n>\n> $1 \\leq n,m\\leq10^5,0 \\leq a_i,k < 16384$\uff0c\u65f6\u9650 $1 \\text{s}$\uff0c\u7a7a\u9650 $500\\text{MB}$\u3002 \n\n\u9996\u5148\u660e\u786e\uff0c\u8fd9\u9898\u5982\u679c\u7528\u666e\u901a\u83ab\u961f\u7684\u8bdd\uff0c\u6bcf\u4e00\u6b21\u79fb\u52a8\u6307\u9488\u7684\u65f6\u5019\u9700\u8981\u7528 $\\mathcal O(C_{14}^k)$ \u7684\u590d\u6742\u5ea6\u6765\u8f6c\u79fb\uff0c\u663e\u7136\u8fc7\u4e0d\u53bb\uff0c\u4e8e\u662f\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\n\n\u8bbe $a_x$ \u5bf9\u533a\u95f4 $[l,r]$ \u7684\u8d21\u732e\u4e3a $f(x,[l,r])$\u3002\n\n\u6211\u4eec\u8003\u8651\u533a\u95f4\u7aef\u70b9\u53d8\u5316\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u4ee5 $[l,r]$ \u53d8\u6210 $[l,r+k]$ \u4e3a\u4f8b\uff0c\u7b54\u6848\u589e\u52a0\u4e86 $\\sum\\limits_{i=r+1}^{r+k}f(i,[l,i-1])$\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c$f(i,[l,i-1])$ \u53ef\u4ee5\u5dee\u5206\u6210 $f(i,[1,i-1])-f(i,[1,l-1])$\u3002\n\n\u8fd9\u6837\u8f6c\u79fb\u533a\u95f4\u7684\u8d21\u732e\u5c31\u5206\u4e3a\u4e24\u7c7b\uff1a\n\n1. \u4e00\u4e2a\u524d\u7f00\u548c\u5b83\u540e\u9762\u4e00\u4e2a\u6570\u7684\u8d21\u732e\uff0c\u8fd9\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\u3002\n2. \u533a\u95f4 $[r+1,r+k]$ \u5bf9\u524d\u7f00 $[1,l-1]$ \u7684\u8d21\u732e\uff0c\u4fdd\u5b58\u4e0b\u6765\u7528\u626b\u63cf\u7ebf\u505a\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\uff0c\u5927\u529b\u8ba8\u8bba\u5373\u53ef\uff0c\u4e0b\u9762\u7ed9\u51fa\u7ed3\u8bba\uff1a\n\n* \u53f3\u7aef\u70b9\u53f3\u79fb\uff0c$[l,r]$ \u53d8\u6210 $[l,r+k]$\uff0c\u7b54\u6848\u589e\u52a0\u4e86$\\sum\\limits_{i=r+1}^{r+k}f(i,[1,i-1])-f(i,[1,l-1])$\u3002\n* \u53f3\u7aef\u70b9\u5de6\u79fb\uff0c$[l,r]$ \u53d8\u6210 $[l,r-k]$\uff0c\u7b54\u6848\u51cf\u5c11\u4e86 $\\sum\\limits_{i=r-k+1}^{r}f(i,[1,i-1])-f(i,[1,l-1])$\u3002\n* \u5de6\u7aef\u70b9\u53f3\u79fb\uff0c$[l,r]$ \u53d8\u6210 $[l+k,r]$\uff0c\u7b54\u6848\u51cf\u5c11\u4e86 $\\sum\\limits_{i=l}^{l+k-1}f(i,[1,r])-f(i,[1,i])$\u3002\n* \u5de6\u7aef\u70b9\u5de6\u79fb\uff0c$[l,r]$ \u53d8\u6210 $[l-k,r]$\uff0c\u7b54\u6848\u589e\u52a0\u4e86 $\\sum\\limits_{i=l-k}^{l-1}f(i,[1,r])-f(i,[1,i])$\u3002\n\n\u518d\u770b\u626b\u63cf\u7ebf\u90e8\u5206\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u524d\u7f00 $[1,i]$ \u5f00\u4e00\u4e2a `vector`\uff0c\u5176\u4e2d\u88c5\u4e8c\u5143\u7ec4 $(l_0,r_0)$\uff08\u5bf9\u5e94\u4e0a\u9762\u7684 $[r+1,r+k]$\uff09\uff08\u53e6\u5916\u8fd8\u8981\u88c5\u4e00\u4e2a $id$\uff0c\u5982\u679c $id<0$\uff0c\u4ee3\u8868\u51cf\u6cd5\uff0c\u5426\u5219\u4ee3\u8868\u52a0\u6cd5\uff0c\u8d21\u732e\u52a0\u5230 $\\mid i \\mid$ \u8fd9\u91cc\u53bb\uff09\u3002\n\n\u5047\u8bbe\u5f53\u524d\u524d\u7f00\u4e3a $[1,i]$\uff0c\u4e8c\u5143\u7ec4\u4e3a $(l_0,r_0)$\uff0c\u8bbe $t[z]$ \u8868\u793a\u5f53\u524d\u524d\u7f00\u4e2d\u7684\u6570\u5f02\u6216 $z$ \u540e\u5f97\u5230\u7684\u6570\u6070\u597d\u6709 $k$ \u4e2a $1$ \u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u518d\u6839\u636e\u5f02\u6216\u7684\u4e00\u4e2a\u6027\u8d28\uff1a\u82e5 $a\\oplus b=c$\uff0c\u5219\u6709 $b \\oplus c=a,a \\oplus c=b$\u3002\n\n\u6240\u4ee5\u63d2\u5165\u4e00\u4e2a $p$ \u503c\u65f6\uff0c\u5c31 $\\mathcal O(C_{14}^{k})$ \u679a\u4e3e\u6240\u6709\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u6709 $k$ \u4e2a $1$ \u7684\u6570 $val$\uff0c\u7136\u540e\u4ee4 $t[p \\oplus val]++$ \u5373\u53ef\uff08\u7b2c\u4e00\u7c7b\u8d21\u732e\u7684\u9884\u5904\u7406\u4e5f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff09\u3002\n\n\u8be2\u95ee\u65f6\u7b54\u6848\u5373\u4e3a $\\sum\\limits_{i=l_0}^{r_o}t[i]$\u3002\n\n\u5bf9\u4e8e $f(i,[1,i])$\uff0c\u7531\u4e8e $i \\oplus i=0$ \u4e14 $i=j$ \u8fd9\u4e2a\u8d21\u732e\u4e0d\u7b97\uff0c\u8fd9\u53ef\u4ee5\u8f6c\u4e3a $f(i,[1,i-1])$\uff0c\u518d\u52a0\u4e2a\u7279\u5224\u5373\u53ef\u3002\n\n\u7531\u4e8e\u7b2c\u4e8c\u7c7b\u8d21\u732e\u9700\u8981\u5148\u8dd1\u4e00\u6b21\u83ab\u961f\u8bb0\u5f55 $l_0,r_0$\uff08\u987a\u4fbf\u52a0\u4e0a\u7b2c\u4e00\u7c7b\u8d21\u732e\uff09\uff0c\u7136\u540e\u518d\u8dd1\u4e00\u6b21\u626b\u63cf\u7ebf\u8ba1\u7b97\uff0c\u76f8\u5f53\u4e8e\u518d\u6b21\u79bb\u7ebf\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u79f0\u4ee5\u4e0a\u7b97\u6cd5\u4e3a\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u83ab\u961f\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\sqrt n)$\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u524d\u7f00\u548c\u4f18\u5316\u6210 $\\mathcal O(n)$\uff0c\u626b\u63cf\u7ebf\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\sqrt n+n C_{14}^k)$\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\sqrt n+n C_{14}^k)$\uff0c\u53ef\u8fc7\u3002\n\n$\\text{659ms / 15.43MB / 3.20KB C++20 O2}$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define re register\n\nnamespace Fread\n{\n    const int SIZE = 1 << 23;\n    char buf[SIZE], *S, *T;\n    inline char getchar()\n    {\n        if (S == T)\n        {\n            T = (S = buf) + fread(buf, 1, SIZE, stdin);\n            if (S == T)\n                return '\\n';\n        }\n        return *S++;\n    }\n}\nnamespace Fwrite\n{\n    const int SIZE = 1 << 23;\n    char buf[SIZE], *S = buf, *T = buf + SIZE;\n    inline void flush()\n    {\n        fwrite(buf, 1, S - buf, stdout);\n        S = buf;\n    }\n    inline void putchar(char c)\n    {\n        *S++ = c;\n        if (S == T)\n            flush();\n    }\n    struct NTR\n    {\n        ~NTR()\n        {\n            flush();\n        }\n    } ztr;\n}\n\n#ifdef ONLINE_JUDGE\n#define getchar Fread::getchar\n#define putchar Fwrite::putchar\n#endif\n\ntypedef long long ll;\n\ninline int read()\n{\n\tre int x = 0, f = 1;\n\tre char c = getchar();\n\twhile (c < '0' || c > '9')\n\t{\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9')\n\t{\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline void write(re ll x)\n{\n\tif (x < 0)\n\t{\n\t\tputchar('-');\n\t\tx = -x;\n\t}\n\tif (x > 9)\n\t\twrite(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int _ = 1e5 + 7;\n\nint n, m, k, a[_], S, bel[_], t[_], pre[_];\n\nll Ans[_];\n\nstruct Query\n{\n\tint l, r, id;\n\tll ans;\n\tinline bool operator < (const Query& tmp)\n\t{\n\t\treturn bel[l] == bel[tmp.l] ? r < tmp.r : l < tmp.l;\n\t}\n} q[_];\n\nvector<tuple<int, int, int>> v[_];\n\nsigned main()\n{\n\tn = read(), m = read(), k = read();\n\tS = sqrt(n);\n\tif(k > 14)\n\t{\n\t\tfor(re int i = 1; i <= m; ++i) putchar('0'), putchar('\\n');\n\t\treturn 0;\n\t}\n\tfor(re int i = 1; i <= n; ++i) a[i] = read();\n\tfor(re int i = 1; i <= m; ++i)\n\t{\n\t\tq[i].l = read();\n\t\tq[i].r = read();\n\t\tq[i].id = i;\n\t}\n\tvector<int> b;\n\tfor(re int i = 0; i < 16384; ++i)\n\t\tif(__builtin_popcount(i) == k) b.push_back(i);\n\tfor(re int i = 1; i <= n; ++i) bel[i] = (i - 1) / S + 1;\n\tsort(q + 1, q + m + 1);\n\tfor(re int i = 1; i <= n; ++i)\n\t{\n\t\tfor(re auto x : b) ++t[a[i] ^ x];\n\t\tpre[i] = t[a[i + 1]];\n\t}\n\tmemset(t, 0, sizeof t);\n\tfor(re int i = 1, l = 1, r = 0; i <= m; ++i)\n\t{\n\t\tif(l < q[i].l) v[r].emplace_back(l, q[i].l - 1, -i);\n\t\twhile(l < q[i].l)\n\t\t{\n\t\t\tq[i].ans += pre[l - 1];\n\t\t\t++l; \n\t\t}\n\t\tif(l > q[i].l) v[r].emplace_back(q[i].l, l - 1, i);\n\t\twhile(l > q[i].l)\n\t\t{\n\t\t\tq[i].ans -= pre[l - 2];\n\t\t\t--l;\n\t\t}\n\t\tif(r < q[i].r) v[l - 1].emplace_back(r + 1, q[i].r, -i);\n\t\twhile(r < q[i].r)\n\t\t{\n\t\t\tq[i].ans += pre[r];\n\t\t\t++r;\n\t\t}\n\t\tif(r > q[i].r) v[l - 1].emplace_back(q[i].r + 1, r, i);\n\t\twhile(r > q[i].r)\n\t\t{\n\t\t\tq[i].ans -= pre[r - 1];\n\t\t\t--r;\n\t\t}\n\t}\n\tfor(re int i = 1, id, l, r; i <= n; ++i)\n\t{\n\t\tfor(re auto x : b) ++t[a[i] ^ x];\n\t\tfor(re const auto& x : v[i])\n\t\t{\n\t\t\ttie(l, r, id) = x;\n\t\t\tfor(re int j = l, tmp = 0; j <= r; ++j)\n\t\t\t{\n\t\t\t\ttmp = t[a[j]];\n\t\t\t\tif(j <= i && k == 0) --tmp;\n\t\t\t\tif(id < 0) q[-id].ans -= tmp;\n\t\t\t\telse q[id].ans += tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(re int i = 1; i <= m; ++i) q[i].ans += q[i - 1].ans;\n\tfor(re int i = 1; i <= m; ++i) Ans[q[i].id] = q[i].ans;\n\tfor(re int i = 1; i <= m; ++i) write(Ans[i]), putchar('\\n');\n}\n```\n\n### \u4f8b\u9898\u9009\u8bb2\n\n#### P5047\n\n> \u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u4e0d\u5f3a\u5236\u5728\u7ebf\u3002\n>\n> $1 \\leq n,m\\leq 10^5,0 \\leq a_i \\leq 10^9$\uff0c\u65f6\u9650 $250\\text{ms}$\uff0c\u7a7a\u9650 $31.25\\text{MB}$\u3002\n\n\u9996\u5148\u660e\u786e\uff0c\u7a7a\u9650\u8981\u6c42 $\\mathcal O(n)$\u3002\n\n$\\mathcal O(n \\sqrt n \\log n)$  \u5e94\u8be5\u8c01\u90fd\u4f1a\u505a\uff0c\u800c\u4e14\u8c01\u90fd\u77e5\u9053\u88ab\u5361\u4e86\u3002\n\n\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\n\n\u524d\u9762\u7684\u5dee\u5206\u90fd\u4e0d\u8bb2\u4e86\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7c7b\u8d21\u732e\uff0c\u9884\u5904\u7406\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\u8d21\u732e\uff0c\u8fd9\u91cc\u8ddf\u4e0a\u9762\u90a3\u9898\u7a0d\u5fae\u6709\u4e9b\u4e0d\u540c\uff0c\u5c31\u662f\u5de6\u7aef\u70b9\u79fb\u52a8\u7684\u8bdd\u7b54\u6848\u53d8\u5316\u91cf\u5c31\u662f\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u53f3\u7aef\u70b9\u79fb\u52a8\u7684\u8bdd\u7b54\u6848\u53d8\u5316\u91cf\u5c31\u662f\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u7531\u4e8e\u7b2c\u4e8c\u7c7b\u8d21\u732e\u5982\u679c\u7528\u6811\u72b6\u6570\u7ec4 $\\mathcal O(\\log n)$ \u4fee\u6539\uff0c$\\mathcal O(\\log n)$ \u67e5\u8be2\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(n\\log n+n \\sqrt n \\log n)$ \u7684\uff0c\u8fc7\u4e0d\u53bb\u3002\n\n\u7531\u4e8e\u74f6\u9888\u5728\u4e8e\u67e5\u8be2\uff0c\u8003\u8651\u503c\u57df\u5206\u5757\u7ef4\u62a4\u524d\u7f00\u548c\uff0c$\\mathcal O(\\sqrt n)$ \u4fee\u6539\uff0c$\\mathcal O(1)$ \u67e5\u8be2\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(n \\sqrt n+n\\sqrt n)$\uff0c\u53ef\u8fc7\u3002\n\n\u518d\u52a0\u4e0a\u83ab\u961f$\\mathcal O(n \\sqrt n)$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\sqrt n)$\uff0c\u53ef\u8fc7\u3002\n\n$\\text{ 956ms / 19.04MB / 3.56KB C++11 O2}$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define re register\n\nnamespace Fread\n{\n    const int SIZE = 1 << 23;\n    char buf[SIZE], *S, *T;\n    inline char getchar()\n    {\n        if (S == T)\n        {\n            T = (S = buf) + fread(buf, 1, SIZE, stdin);\n            if (S == T)\n                return '\\n';\n        }\n        return *S++;\n    }\n}\nnamespace Fwrite\n{\n    const int SIZE = 1 << 23;\n    char buf[SIZE], *S = buf, *T = buf + SIZE;\n    inline void flush()\n    {\n        fwrite(buf, 1, S - buf, stdout);\n        S = buf;\n    }\n    inline void putchar(char c)\n    {\n        *S++ = c;\n        if (S == T)\n            flush();\n    }\n    struct NTR\n    {\n        ~NTR()\n        {\n            flush();\n        }\n    } ztr;\n}\n\n#ifdef ONLINE_JUDGE\n#define getchar Fread::getchar\n#define putchar Fwrite::putchar\n#endif\n\ntypedef long long ll;\n\ninline int read()\n{\n\tre int x = 0, f = 1;\n\tre char c = getchar();\n\twhile (c < '0' || c > '9')\n\t{\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9')\n\t{\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline void write(re ll x)\n{\n\tif (x < 0)\n\t{\n\t\tputchar('-');\n\t\tx = -x;\n\t}\n\tif (x > 9)\n\t\twrite(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int _ = 1e5 + 7;\n\nint n, m, k, a[_], c[_], S, bel[_], t[_], pre[_], pree[_], f1[_], f2[_], L[_], R[_], V;\n\nll Ans[_];\n\nstruct Query\n{\n\tint l, r, id;\n\tll ans;\n\tinline bool operator < (const Query& tmp)\n\t{\n\t\treturn bel[l] == bel[tmp.l] ? r < tmp.r : l < tmp.l;\n\t}\n} q[_];\n\nvector<tuple<int, int, int, int>> v[_];\n\nvoid init()\n{\n\tmemset(pre, 0, sizeof pre);\n\tmemset(pree, 0, sizeof pree);\n}\n\nvoid update(int x)\n{\n\tfor(re int i = bel[x] + 1; i <= bel[V]; ++i) pre[i]++;\n\tfor(re int i = x + 1; i <= R[bel[x]]; ++i) pree[i]++;\n}\n\nint query(int x)\n{\n\treturn pre[bel[x]] + pree[x];\n}\n\nsigned main()\n{\n\tn = read(), m = read();\n\tfor(re int i = 1; i <= n; ++i) c[i] = a[i] = read();\n\tsort(c + 1, c + n + 1);\n\tre int un = unique(c + 1, c + n + 1) - c - 1;\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\ta[i] = lower_bound(c + 1, c + un + 1, a[i]) - c;\n\t\tV = max(V, a[i]);\n\t}\n\tS = sqrt(V); \n\tfor(re int i = 1; i <= m; ++i)\n\t{\n\t\tq[i].l = read();\n\t\tq[i].r = read();\n\t\tq[i].id = i;\n\t}\n\tfor(re int i = 1; i <= V + 1; ++i) bel[i] = (i - 1) / S + 1;\n\tfor(re int i = 1; i <= bel[V + 1]; ++i) L[i] = R[i - 1] + 1, R[i] = i * S;\n\tR[bel[V + 1]] = V + 1;\n\tsort(q + 1, q + m + 1);\n\tfor(re int i = 1; i <= n; ++i)\n\t{\n\t\tf2[i] = i - query(a[i] + 1) - 1;\n\t\tf1[i] = query(a[i]);\n\t\tupdate(a[i]);\n\t}\n\tinit();\n\tfor(re int i = 1, l = 1, r = 0; i <= m; ++i)\n\t{\n\t\tif(l < q[i].l) v[r].emplace_back(l, q[i].l - 1, -i, 0);\n\t\twhile(l < q[i].l)\n\t\t\tq[i].ans += f1[l++];\n\t\tif(l > q[i].l) v[r].emplace_back(q[i].l, l - 1, i, 0);\n\t\twhile(l > q[i].l)\n\t\t\tq[i].ans -= f1[--l];\n\t\tif(r < q[i].r) v[l - 1].emplace_back(r + 1, q[i].r, -i, 1);\n\t\twhile(r < q[i].r)\n\t\t\tq[i].ans += f2[++r];\n\t\tif(r > q[i].r) v[l - 1].emplace_back(q[i].r + 1, r, i, 1);\n\t\twhile(r > q[i].r)\n\t\t\tq[i].ans -= f2[r--];\n\t}\n\tfor(re int i = 1, id, l, r, flg; i <= n; ++i)\n\t{\n\t\tupdate(a[i]);\n\t\tfor(re const auto& x : v[i])\n\t\t{\n\t\t\ttie(l, r, id, flg) = x;\n\t\t\tre ll tmp = 0;\n\t\t\tfor(re int j = l; j <= r; ++j)\n\t\t\t{\n\t\t\t\tif(!flg)\n\t\t\t\t\ttmp = query(a[j]);\n\t\t\t\telse\n\t\t\t\t\ttmp = i - query(a[j] + 1);\n\t\t\t\tif(id < 0) q[-id].ans -= tmp;\n\t\t\t\telse q[id].ans += tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(re int i = 1; i <= m; ++i) q[i].ans += q[i - 1].ans;\n\tfor(re int i = 1; i <= m; ++i) Ans[q[i].id] = q[i].ans;\n\tfor(re int i = 1; i <= m; ++i) write(Ans[i]), putchar('\\n');\n}\n```\n\n### P5501\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\u3002\u7ed9\u5b9a $m$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\u4e2d $[l,r]$ \u4e2d\u6240\u6709\u6570\u7684`Abbi` \u503c\u4e4b\u548c\u3002\n>\n> `Abbi`\u503c\u5b9a\u4e49\u4e3a\uff1a\u82e5 $a_i$ \u5728\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u4e2d\u662f\u7b2c $k$ \u5c0f\uff0c\u90a3\u4e48\u5b83\u7684 `Abbi` \u503c\u7b49\u4e8e $k \\times a_i$\u3002\n>\n> $1 \\leq n,m\\leq 5\\times 10^5,1 \\leq a_i \\leq 10^5$\uff0c\u65f6\u9650 $1\\text{s}$\uff0c\u7a7a\u9650 $250\\text{MB}$\u3002\n\n\u8ddf\u4e0a\u9762\u90a3\u9898\u76f8\u4f3c\u3002\n\n\u8003\u8651 $[l,r]$ \u8f6c\u79fb\u5230 $[l,r+1]$\uff0c\u5373\u52a0\u5165\u4e00\u4e2a\u6570\u7684\u8d21\u732e\uff0c\u4e0d\u96be\u60f3\uff0c\u5373\u4e3a $\\sum\\limits_{i=l}^{r}[a_i<a_{r+1}]\\times a_{r+1}+\\sum\\limits_{i=1}^{r}[a_i>a_{r+1}]a_i+a_{r+1}$\u3002\n\n\u5411\u4e0a\u9762\u90a3\u9898\u90a3\u6837\u641e\u4e2a\u503c\u57df\u5206\u5757\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u7ec6\u8282\uff1a\u4e0a\u9762\u5f0f\u5b50\u4e2d\u6700\u540e\u52a0\u7684\u90a3\u4e2a $a_{r+1}$ \u5e76\u4e0d\u53ef\u4ee5\u5dee\u5206\uff08\u624b\u73a9\u4e00\u4e0b\u53ef\u4ee5\u5f97\u77e5\uff09\uff0c\u9700\u8981\u6700\u540e\u52a0\u4e0a\u3002\n\n\u5177\u4f53\u53c2\u8003\u4ee3\u7801\u3002\n\n$\\text{7.87s / 88.66MB / 3.85KB C++17 O2}$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define re register\n\ntypedef long long ll;\n\nnamespace Fread\n{\n    const int SIZE = 1 << 24;\n    char buf[SIZE], *S, *T;\n    inline char getchar()\n    {\n        if (S == T)\n        {\n            T = (S = buf) + fread(buf, 1, SIZE, stdin);\n            if (S == T)\n                return '\\n';\n        }\n        return *S++;\n    }\n}\nnamespace Fwrite\n{\n    const int SIZE = 1 << 24;\n    char buf[SIZE], *S = buf, *T = buf + SIZE;\n    inline void flush()\n    {\n        fwrite(buf, 1, S - buf, stdout);\n        S = buf;\n    }\n    inline void putchar(char c)\n    {\n        *S++ = c;\n        if (S == T)\n            flush();\n    }\n    struct NTR\n    {\n        ~NTR()\n        {\n            flush();\n        }\n    } ztr;\n}\n\n#ifdef ONLINE_JUDGE\n#define getchar Fread::getchar\n#define putchar Fwrite::putchar\n#endif\n\ninline int read()\n{\n\tre int x = 0, f = 1;\n\tre char c = getchar();\n\twhile (c < '0' || c > '9')\n\t{\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9')\n\t{\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline void write(re ll x)\n{\n\tif (x < 0)\n\t{\n\t\tputchar('-');\n\t\tx = -x;\n\t}\n\tif (x > 9)\n\t\twrite(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int _ = 5e5 + 7;\n\nint n, m, S, a[_], bel[_], pre1[_], pree1[_], L[_], R[_], V = 100000;\n\nll pre[_], pree[_], s[_], F[_], Ans[_];\n\nstruct Query\n{\n\tint l, r, id;\n\tll ans;\n\tinline bool operator < (re const Query& tmp)\n\t{\n\t\treturn bel[l] == bel[tmp.l] ? r < tmp.r : l < tmp.l;\n\t}\n} q[_];\n\nvector<tuple<int, int, int>> v[_];\n\nstruct tr\n{\n\tll c[_];\n\tvoid update(re int x, re int val)\n\t{\n\t\tfor(int i = x; i <= V; i += i & -i) c[i] += val;\n\t}\n\tll query(re int x)\n\t{\n\t\tll res = 0;\n\t\tfor(int i = x; i; i -= i & -i) res += c[i];\n\t\treturn res;\n\t}\n} t, t1;\n\nvoid init()\n{\n\tmemset(pre, 0, sizeof pre);\n\tmemset(pree, 0, sizeof pree);\n\tmemset(pre1, 0, sizeof pre1);\n\tmemset(pree1, 0, sizeof pree1);\n}\n\nvoid update(re int x)\n{\n\tfor(re int i = bel[x]; i <= bel[V]; ++i) pre[i] += x, pre1[i]++;\n\tfor(re int i = x; i <= R[bel[x]]; ++i) pree[i] += x, pree1[i]++;\n}\n\nll query(re int x)\n{\n\treturn pre[bel[x] - 1] + pree[x];\n}\n\nint query1(re int x)\n{\n\treturn pre1[bel[x] - 1] + pree1[x];\n}\n\nsigned main()\n{\n\tn = read(), m = read();\n\tfor(re int i = 1; i <= n; ++i) a[i] = read(), s[i] = s[i - 1] + a[i];\n\tS = 317; \n\tfor(re int i = 1; i <= m; ++i)\n\t{\n\t\tq[i].l = read();\n\t\tq[i].r = read();\n\t\tq[i].id = i;\n\t}\n\tfor(re int i = 1; i <= V; ++i) bel[i] = (i - 1) / S + 1;\n\tfor(re int i = 1; i <= bel[V]; ++i) L[i] = R[i - 1] + 1, R[i] = i * S;\n\tR[bel[V]] = V;\n\tsort(q + 1, q + m + 1);\n\tfor(re int i = 1; i <= n; ++i)\n\t{\n\t\tF[i] = F[i - 1] + 1ll * t1.query(a[i] - 1) * a[i] + t.query(V) - t.query(a[i]);\n\t\tt.update(a[i], a[i]);\n\t\tt1.update(a[i], 1);\n\t}\n\tfor(re int i = 1, l = 1, r = 0; i <= m; ++i)\n\t{\n\t\tif(l > q[i].l) v[r].emplace_back(q[i].l, l - 1, i), q[i].ans -= F[l - 1] - F[q[i].l - 1], l = q[i].l;\n\t\tif(r < q[i].r) v[l - 1].emplace_back(r + 1, q[i].r, -i), q[i].ans += F[q[i].r] - F[r], r = q[i].r;\n\t\tif(l < q[i].l) v[r].emplace_back(l, q[i].l - 1, -i), q[i].ans += F[q[i].l - 1] - F[l - 1], l = q[i].l;\n\t\tif(r > q[i].r) v[l - 1].emplace_back(q[i].r + 1, r, i), q[i].ans -= F[r] - F[q[i].r], r = q[i].r;\n\t}\n\tre ll sum = 0;\n\tfor(re int i = 1, id, l, r; i <= n; ++i)\n\t{\n\t\tupdate(a[i]);\n\t\tsum += a[i];\n\t\tfor(re const auto& x : v[i])\n\t\t{\n\t\t\ttie(l, r, id) = x;\n\t\t\tre ll tmp = 0;\n\t\t\tfor(re int j = l; j <= r; ++j)\n\t\t\t{\n\t\t\t\ttmp = 1ll * query1(a[j] - 1) * a[j] + sum - query(a[j]);\n\t\t\t\tif(id < 0) q[-id].ans -= tmp;\n\t\t\t\telse q[id].ans += tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(re int i = 1; i <= m; ++i) q[i].ans += q[i - 1].ans;\n\tfor(re int i = 1; i <= m; ++i) Ans[q[i].id] = q[i].ans + s[q[i].r] - s[q[i].l - 1];\n\tfor(re int i = 1; i <= m; ++i) write(Ans[i]), putchar('\\n');\n}\n```\n\n### P5398\n\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u4e00\u4e2a\u533a\u95f4 $[l,r]$\u3002\n\n\u67e5\u8be2 $l \\leq i,j \\leq r$ \u4e14 $a_i$ \u662f $a_j$ \u500d\u6570\u7684\u4e8c\u5143\u7ec4 $(i,j)$ \u7684\u4e2a\u6570\u3002\n\n$1 \\leq n,m,a_i\\leq 5\\times 10^5$\uff0c\u65f6\u9650 $3\\text{s}$\uff0c\u7a7a\u9650 $128\\text{MB}$\u3002\n\n#### sol\n\n\u300c\u70b9\u7f00\u5149\u8f89\u7684\u7b2c\u5341\u56db\u5206\u5757\u300d\u3002\n\n\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\n\n\u8bbe $a_i$ \u5728\u533a\u95f4 $[l,r]$ \u7684\u56e0\u6570\u4e2a\u6570\u4e3a $f_1(i,[l,r])$\uff0c\u500d\u6570\u4e2a\u6570\u4e3a $f_2(i,[l,r])$\u3002\n\n\u5219\u53f3\u7aef\u70b9\u5411\u53f3\u79fb\u52a8\u52a0\u5165\u4e00\u4e2a\u6570\u7684\u8d21\u732e\u4e3a $f_1(r,[l,r])+f_2(r,[l,r])$\u3002\n\n\u5dee\u5206\u4e00\u4e0b\u5373\u4e3a $f_1(r,[1,r])-f_1(r,[1,l-1])+f_2(r,[1,r])-f_2(r,[1,l-1])$\u3002\n\n$f_1(r,[1,r])$ \u53ef\u4ee5\u5728\u904d\u5386\u65f6 $\\mathcal O(\\sqrt n)$ \u679a\u4e3e\u56e0\u6570\uff0c\u7d2f\u52a0\u6240\u6709\u56e0\u6570\u4e4b\u524d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6876\u5373\u53ef\u5b9e\u73b0\u3002\n\n$f_2(r,[1,r])$ \u53ef\u4ee5\u5728\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u679a\u4e3e\u56e0\u6570\u65f6\u5bf9\u8be5\u6570\u7684\u6bcf\u4e2a\u56e0\u6570\u6807\u8bb0\u4e00\u4e0b\uff0c\u5373\u5f00\u4e00\u4e2a\u6876\u8bb0\u5f55\u8be5\u6570\u4f5c\u4e3a\u56e0\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u4ee5\u4e0a\u4e24\u90e8\u5206\u53ef\u63d0\u524d\u9884\u5904\u7406\uff0c\u8ba1\u7b97\u524d\u7f00\u548c\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9\u83ab\u961f\u8ba1\u7b97\u8d21\u732e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\sqrt n)$\u3002\n\n\u5bf9\u4e8e $f_1(r,[1,l-1])$ \u548c $f_2{r,[1,l-1]}$ \u53ef\u5728\u4e0a\u9762\u8dd1\u83ab\u961f\u65f6\u987a\u4fbf\u5b58\u4e0b\u6765\uff0c\u8fdb\u884c\u4e8c\u6b21\u79bb\u7ebf\uff0c\u8981\u6c42 $\\mathcal O(1)$ \u67e5\u8be2 $f_1$ \u548c $f_2$\u3002\n\n\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\u65f6\u7684\u4fee\u6539\uff0c\u8fd9\u90e8\u5206\u8981\u6c42\u662f $\\mathcal O(\\sqrt n)$ \u7ea7\u522b\u7684\u3002\n\n\u5bf9\u4e8e $f_1$\uff0c\u679a\u4e3e\u56e0\u6570\uff0c\u52a0\u4e0a\u8d21\u732e\u5373\u53ef\u3002\n\n\u5bf9\u4e8e $f_2$\uff0c\u8003\u8651\u6839\u53f7\u5206\u6cbb\uff0c\u8bbe\u9608\u503c $S$\uff1a\n\n* \u82e5\u5f53\u524d\u52a0\u5165\u7684\u6570 $\\geq S$\uff0c\u66b4\u529b\u8df3\u8868\uff0c\u52a0\u4e0a\u8d21\u732e\u3002\n* \u82e5\u5f53\u524d\u52a0\u5165\u7684\u6570 $< S$\uff0c\u5219\u5c06\u8fd9\u4e2a\u63d0\u51fa\u4e8c\u6b21\u79bb\u7ebf\u8fd9\u90e8\u5206\uff0c\u540e\u9762\u5904\u7406\u3002\n\n\u4e8c\u6b21\u79bb\u7ebf\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\sqrt n)$\u3002\n\n\u518d\u8003\u8651\u521a\u521a\u9057\u7559\u4e0b\u6765\u7684\u4e00\u70b9\u4e1c\u897f\u3002\n\n\u8bb0 $p[i][j]$ \u8868\u793a\u533a\u95f4 $[1,j]$ \u4e2d\u542b\u6709\u56e0\u6570 $i$ \u7684\u6570\u7684\u4e2a\u6570\uff0c$c[i][j]$ \u8868\u793a\u533a\u95f4 $[1,j]$ \u4e2d $i$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u5219\u533a\u95f4 $[l,r]$ \u4e2d\u542b\u6709\u56e0\u6570 $i$ \u7684\u6570\u7684\u4e2a\u6570\u5c31\u662f $p[i][r] - p[i][l-1]$\u3002\n\n\u6240\u4ee5 $[1,z]$ \u4e2d\u7684\u6570 $i$ \u4f5c\u4e3a\u56e0\u6570\u51fa\u73b0\u5728 $[l,r]$ \u7684\u603b\u6b21\u6570\u4e3a $c[i][z]\\times (p[i][r] - p[i][l-1])$\u3002\n\n\u90a3\u4e48\u679a\u4e3e $i \\in [1,S)$\uff0c$\\mathcal O(n)$ \u6c42\u51fa $p$ \u548c $c$\uff08\u538b\u6389\u4e00\u7ef4\uff09\uff0c\u7136\u540e $\\mathcal O(m)$ \u8ba1\u7b97\u8d21\u732e\u5373\u53ef\u3002\n\n\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\sqrt n)$\uff0c\u603b\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n)$\u3002\n\n$\\text{32.39s /  75.05MB /  3.92KB C++11 O2}$\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <vector>\n\nnamespace Fread\n{\n    const int SIZE = 1 << 23;\n    char buf[SIZE], *S, *T;\n    inline char getchar()\n    {\n        if (S == T)\n        {\n            T = (S = buf) + fread(buf, 1, SIZE, stdin);\n            if (S == T)\n                return '\\n';\n        }\n        return *S++;\n    }\n}\nnamespace Fwrite\n{\n    const int SIZE = 1 << 23;\n    char buf[SIZE], *S = buf, *T = buf + SIZE;\n    inline void flush()\n    {\n        fwrite(buf, 1, S - buf, stdout);\n        S = buf;\n    }\n    inline void putchar(char c)\n    {\n        *S++ = c;\n        if (S == T)\n            flush();\n    }\n    struct NTR\n    {\n        ~NTR()\n        {\n            flush();\n        }\n    } ztr;\n}\n\n#ifdef ONLINE_JUDGE\n#define getchar Fread::getchar\n#define putchar Fwrite::putchar\n#endif\n\ntypedef long long ll;\n\ninline int read()\n{\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9')\n\t{\n\t\tif(c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9')\n\t{\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline void write(ll x)\n{\n\tif(x < 0)\n\t{\n\t\tputchar('-');\n\t\tx = -x;\n\t}\n\tif(x > 9)\n\t\twrite(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nconst int _ = 5e5 + 7, S = 100;\n\nint n, m, k, a[_], bel[_], siz, mx, cnt[_], flg[_], pre[_];\n\nll f[_], Ans[_];\n\nstruct Query\n{\n\tint l, r, id;\n\tll ans;\n\tinline bool operator < (const Query &t) const\n\t{\n\t\treturn bel[l] == bel[t.l] ? (bel[l] & 1 ? r < t.r : r > t.r) : bel[l] < bel[t.l];\n\t}\n} q[_];\n\nstruct Node\n{\n\tint l, r, id, x;\n\tbool operator < (const Node &t) const\n\t{\n\t\treturn x < t.x;\n\t}\n} t[_ << 1];\n\nstd::vector<int> fac[_];\n\nsigned main()\n{\n\tn = read(), m = read();\n\tsiz = sqrt(n);\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\ta[i] = read();\n\t\tbel[i] = (i - 1) / siz + 1;\n\t\tmx = std::max(mx, a[i]);\n\t\tif(fac[a[i]].empty())\n\t\t{\n\t\t\tfor(int j = 1; j * j <= a[i]; ++j)\n\t\t\t\tif(a[i] % j == 0)\n\t\t\t\t{\n\t\t\t\t\tf[i] += cnt[j];\n\t\t\t\t\tflg[j]++;\n\t\t\t\t\tif(j * j != a[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tf[i] += cnt[a[i] / j];\n\t\t\t\t\t\tflg[a[i] / j]++;\n\t\t\t\t\t}\n\t\t\t\t\tfac[a[i]].emplace_back(j);\n\t\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int x : fac[a[i]])\n\t\t\t{\n\t\t\t\tf[i] += cnt[x];\n\t\t\t\tflg[x]++;\n\t\t\t\tif(x * x != a[i])\n\t\t\t\t{\n\t\t\t\t\tf[i] += cnt[a[i] / x];\n\t\t\t\t\tflg[a[i] / x]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tf[i] += f[i - 1] + flg[a[i]];\n\t\tcnt[a[i]]++;\n\t}\n\tfor(int i = 1; i <= m; ++i)\n\t\tq[i] = {read(), read(), i, 0};\n\tstd::sort(q + 1, q + m + 1);\n\tfor(int i = 1, l = 1, r = 0; i <= m; ++i)\n\t{\n\t\tif(r < q[i].r) t[++k] = {r + 1, q[i].r, -i, l - 1}, q[i].ans += f[q[i].r] - f[r], r = q[i].r;\n\t\tif(l > q[i].l) t[++k] = {q[i].l, l - 1, i, r}, q[i].ans -= f[l - 1] - f[q[i].l - 1], l = q[i].l;\n\t\tif(r > q[i].r) t[++k] = {q[i].r + 1, r, i, l - 1}, q[i].ans -= f[r] - f[q[i].r], r = q[i].r;\n\t\tif(l < q[i].l) t[++k] = {l, q[i].l - 1, -i, r}, q[i].ans += f[q[i].l - 1] - f[l - 1], l = q[i].l;\n\t}\n\tstd::sort(t + 1, t + k + 1);\n\tmemset(f, 0, sizeof f);\n\tfor(int i = 1, x = 0; i <= k; ++i)\n\t{\n\t\twhile(x < t[i].x)\n\t\t{\n\t\t\tx++;\n\t\t\tfor(int v : fac[a[x]])\n\t\t\t{\n\t\t\t\tf[v]++;\n\t\t\t\tif(v * v != a[x])\n\t\t\t\t\tf[a[x] / v]++;\n\t\t\t}\n\t\t\tif(a[x] > S)\n\t\t\t\tfor(int j = 1; j * a[x] <= mx; ++j)\n\t\t\t\t\tf[j * a[x]]++;\n\t\t}\n\t\tfor(int k = t[i].l; k <= t[i].r; ++k)\n\t\t\tif(t[i].id < 0)\n\t\t\t\tq[-t[i].id].ans -= f[a[k]];\n\t\t\telse\n\t\t\t\tq[t[i].id].ans += f[a[k]];\n\t}\n\tfor(int i = 1; i <= S; ++i)\n\t{\n\t\tcnt[0] = pre[0] = 0;\n\t\tfor(int j = 1; j <= n; ++j)\n\t\t{\n\t\t\tcnt[j] = cnt[j - 1] + (a[j] == i);\n\t\t\tpre[j] = pre[j - 1] + (a[j] % i == 0);\n\t\t}\n\t\tfor(int j = 1; j <= k; ++j)\n\t\t\tif(t[j].id < 0)\n\t\t \t\tq[-t[j].id].ans -= (ll)cnt[t[j].x] * (ll)(pre[t[j].r] - pre[t[j].l - 1]);\n\t\t \telse\n\t\t \t\tq[t[j].id].ans += (ll)cnt[t[j].x] * (ll)(pre[t[j].r] - pre[t[j].l - 1]);\n\t}\n\tfor(int i = 1; i <= m; ++i)\n\t{\n\t\tq[i].ans += q[i - 1].ans;\n\t\tAns[q[i].id] = q[i].ans;\n\t}\n\tfor(int i = 1; i <= m; ++i)\n\t\twrite(Ans[i]), putchar('\\n');\n}\n```\n\n\n\n\n",
        "postTime": 1643987989,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "[**\u4e0d\u77e5\u9053\u66f4\u597d\u8fd8\u662f\u66f4\u5dee\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.cnblogs.com/VCLS01/p/14766001.html)\n## \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u7ed9\u51fa $m$ \u4e2a\u8be2\u95ee\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u7ed9\u51fa\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u6c42\n$$\\sum_{i=l}^{r}{\\left(1+\\sum_{j=l}^{r}{[a_j<a_i]}\\right)a_i}$$\n**\u6570\u636e\u8303\u56f4\uff1a**$1\\le n,m\\le 5\\times 10^5$\uff0c$a_i\\le 10^5$\uff0c$1\\le l \\le r \\le n$\u3002\n\n**\u65f6\u95f4\u8303\u56f4\uff1a**$3000\\operatorname{ms}$\u3002\n## Solution 1\n\u770b\u9898\u76ee\u53ef\u4ee5\u53d1\u73b0\u662f\u6c42\u533a\u95f4\u6392\u540d\uff0c\u6c42\u533a\u95f4\u548c\u663e\u7136\u4e0d\u597d\u5728\u7ebf\u7ef4\u62a4\uff0c\u8003\u8651\u83ab\u961f\u3002\n\n\u5bf9\u4e8e\u5df2\u6709\u7684\u533a\u95f4 $[l,r]$\uff0c\u82e5\u5411\u53f3\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u8d21\u732e\u4e3a\n$$\\sum_{i=l}^{r}{[a_i>a_{r+1}]a_i}+a_{r+1}\\left(1+\\sum_{i=l}^{r}{[a_i<a_{r+1}]}\\right)$$\n\n\u76f4\u63a5\u7ef4\u62a4\u7684\u590d\u6742\u5ea6\u4e3a $\\Theta(n\\sqrt n\\log a_{\\max})$\uff0c\u4fe1\u4ef0\u5f97\u5206 $100\\operatorname{pts}$\uff0c\u5b9e\u9645\u5f97\u5206 $10\\operatorname{pts}$\u3002\n## Solution 2\n\u4e0a\u8fb9\u7684\u5e26 $\\log$ \u83ab\u961f\u662f\u6ca1\u6709\u524d\u9014\u7684\uff0c\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\u3002\n\n\u8003\u8651\u524d\u7f00\u548c\uff0c\u5411\u53f3\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u8d21\u732e\u4e3a\n$$\\sum_{i=1}^{r}{[a_i>a_{r+1}]a_i}+a_{r+1}\\left(1+\\sum_{i=1}^{r}{[a_i<a_{r+1}]}\\right)-\\sum_{i=1}^{l-1}{[a_i>a_{r+1}]a_i}-a_{r+1}\\left(\\sum_{i=1}^{l-1}{[a_i<a_{r+1}]}\\right)$$\n\n\u5b9a\u4e49 $f_{r}=\\sum_{i=1}^{r-1}{[a_i>a_{r}]a_i}+a_{r}\\left(1+\\sum_{i=1}^{r-1}{[a_i<a_{r}]}\\right)$\uff0c\u5219\u8d21\u732e\u53d8\u4e3a\n$$f_{r+1}-\\sum_{i=1}^{l-1}{[a_i>a_{r+1}]a_i}-a_{r+1}\\left(\\sum_{i=1}^{l-1}{[a_i<a_{r+1}]}\\right)$$\n\n\u5c06 $f$ \u6570\u7ec4\u9884\u5904\u7406\u51fa\u6765\u524d\u7f00\u548c\uff0c\u540e\u8fb9\u7684\u8d21\u732e\u79bb\u7ebf\u4e0b\u6765\u7ef4\u62a4\uff0c\u5957\u4e0a\u503c\u57df\u5206\u5757\u5373\u53ef\u5904\u7406\u3002\n\n\u5411\u5de6\u63d2\u5165\u540c\u7406\u3002\n\n\u7531\u4e8e $n,m$ \u540c\u9636\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n\\sqrt n+n\\sqrt{a_{\\max}})$\uff0c\u671f\u671b\u5f97\u5206 $100\\operatorname{pts}$\u3002\n## Code\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<vector>\nusing namespace std;\nconst int maxn=500010;\ntypedef long long LL;\nint K[maxn],L[maxn],R[maxn],T;\ntemplate<class T>inline void read(T &x){\n\tx=0;char c;\n\tdo c=getchar();while(c<'0'||c>'9');\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n}\ntemplate<class T>inline void write(T x){\n\tstatic char stk[22];int top=0;\n\twhile(x)stk[++top]=x-x/10*10+48,x/=10;\n\twhile(top)putchar(stk[top--]);\n\tputchar('\\n');\n}\nstruct query{\n\tint l,r,id;\n\tinline bool operator<(const query &qu)const{\n\t\treturn K[l]!=K[qu.l]?l<qu.l:((K[l]&1)?r<qu.r:r>qu.r);\n\t}\n}q[maxn];\nstruct Range{\n\tint l,r,id,d;\n\tinline Range(int _l=0,int _r=0,int _id=0,int _d=0){\n\t\tl=_l;r=_r;id=_id;d=_d;\n\t}\n};\nvector<Range> range[maxn];\nstruct TreeArray{\n\t#define lowbit(x) (x&-x)\n\tLL tr[maxn];\n\tinline void add(int x,int d){while(x<=100000)tr[x]+=d,x+=lowbit(x);}\n\tinline LL ask(int x){LL ans=0;while(x)ans+=tr[x],x-=lowbit(x);return ans;}\n\tinline void clear(){memset(tr,0,sizeof(tr));}\n\t#undef lowbit\n}BIT;\nLL f[maxn],pre[maxn];\nstruct BlockOfRange{\n\tint bl[maxn],br[maxn],bk[maxn],kt;\n\tLL v[maxn],tag[maxn],sum;\n\tinline void Init(){\n\t\tkt=sqrt(100010);\n\t\tfor(int i=1;i<=kt;++i)bl[i]=br[i-1]+1,br[i]=br[i-1]+kt;\n\t\tif(R[kt]<100010)bl[kt+1]=br[kt]+1,br[++kt]=100010;\n\t\tfor(int i=1;i<=kt;++i)for(int j=bl[i];j<=br[i];++j)bk[j]=i;\n\t}\n\tinline void add(int x,int d){\n\t\tint k=bk[x];sum+=d;\n\t\tfor(int i=x;i<=br[k];++i)v[i]+=d;\n\t\tfor(int i=k+1;i<=kt;++i)tag[i]+=d;\n\t}\n\tinline LL ask(int x){return tag[bk[x]]+v[x];}\n\tinline void clear(){\n\t\tmemset(v,0,sizeof(v));\n\t\tmemset(tag,0,sizeof(tag));\n\t\tsum=0;\n\t}\n}BOR1,BOR2;\nLL ans[maxn],res[maxn];\nint n,m,a[maxn];\nint main(){\n\tBOR1.Init();BOR2.Init();\n\tread(n);read(m);\n\tT=sqrt(n);\n\tfor(int i=1;i<=T;++i)L[i]=R[i-1]+1,R[i]=R[i-1]+T;\n\tif(R[T]<n)L[T+1]=R[T]+1,R[T]=n;\n\tfor(int i=1;i<=T;++i)for(int j=L[i];j<=R[i];++j)K[j]=i;\n\tfor(int i=1;i<=n;++i)read(a[i]);\n\tfor(int i=1;i<=m;++i){read(q[i].l),read(q[i].r);q[i].id=i;}\n\tsort(q+1,q+m+1);\n\tfor(int i=1;i<=n;++i){\n\t\tf[i]=BIT.ask(a[i]);\n\t\tBIT.add(1,a[i]);BIT.add(a[i],-a[i]);\n\t}\n\tBIT.clear();\n\tfor(int i=1;i<=n;++i){\n\t\tf[i]+=(BIT.ask(a[i]-1)+1)*a[i];\n\t\tBIT.add(a[i],1);\n\t}\n\tfor(int i=1;i<=n;++i)pre[i]=pre[i-1]+f[i];\n\tint curl=1,curr=0;\n\tfor(int i=1;i<=m;++i){\n\t\tint l=q[i].l,r=q[i].r;\n\t\tif(curr<r)range[curl-1].push_back(Range(curr+1,r,i,-1)),ans[i]+=pre[r]-pre[curr];\n\t\tif(curr>r)range[curl-1].push_back(Range(r+1,curr,i,1)),ans[i]-=pre[curr]-pre[r];\n\t\tcurr=r;curl=l;\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tBOR1.add(a[i],a[i]);BOR2.add(a[i],1);\n\t\tfor(auto qry:range[i]){\n\t\t\tint l=qry.l,r=qry.r,id=qry.id,d=qry.d;\n\t\t\tfor(int j=l;j<=r;++j)ans[id]+=(BOR1.sum-BOR1.ask(a[j])+a[j]*BOR2.ask(a[j]-1))*d;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)range[i].clear();BOR1.clear();BOR2.clear();BIT.clear();\n\tfor(int i=n;i;--i){\n\t\tf[i]=BIT.ask(a[i]);\n\t\tBIT.add(1,a[i]);BIT.add(a[i],-a[i]);\n\t}\n\tBIT.clear();\n\tfor(int i=n;i;--i){\n\t\tf[i]+=(BIT.ask(a[i]-1)+1)*a[i];\n\t\tBIT.add(a[i],1);\n\t}\n\tfor(int i=n;i;--i)pre[i]=pre[i+1]+f[i];\n\tcurl=1;\n\tfor(int i=1;i<=m;++i){\n\t\tint l=q[i].l,r=q[i].r;\n\t\tif(curl<l)range[r+1].push_back(Range(curl,l-1,i,1)),ans[i]-=pre[curl]-pre[l];\n\t\tif(curl>l)range[r+1].push_back(Range(l,curl-1,i,-1)),ans[i]+=pre[l]-pre[curl];\n\t\tcurl=l;\n\t}\n\tfor(int i=n;i;--i){\n\t\tBOR1.add(a[i],a[i]);BOR2.add(a[i],1);\n\t\tfor(auto qry:range[i]){\n\t\t\tint l=qry.l,r=qry.r,id=qry.id,d=qry.d;\n\t\t\tfor(int j=l;j<=r;++j)ans[id]+=(BOR1.sum-BOR1.ask(a[j])+a[j]*BOR2.ask(a[j]-1))*d;\n\t\t}\n\t}\n\tfor(int i=2;i<=m;++i)ans[i]+=ans[i-1];\n\tfor(int i=1;i<=m;++i)res[q[i].id]=ans[i];\n\tfor(int i=1;i<=m;++i)write(res[i]);\n\treturn 0;\n}\n```",
        "postTime": 1620960880,
        "uid": 375785,
        "name": "x7103",
        "ccfLevel": 9,
        "title": "P5501 [LnOI2019]\u6765\u8005\u4e0d\u62d2\uff0c\u53bb\u8005\u4e0d\u8ffd"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5728\u666e\u901a\u83ab\u961f\u4e2d\uff0c\u5047\u8bbe $n$ \u4e0e $m$ \u540c\u9636\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u8be2\u95ee\u95ee\u9898\uff0c\u5982\u679c\u4ece $[l, r]$ \u7684\u7b54\u6848\u80fd\u591f $\\mathcal O(1)$ \u6269\u5c55\u5230 $[l - 1, r], [l + 1, r], [l, r + 1], [l, r - 1]$\uff08\u5373\u4e0e $[l, r]$ \u76f8\u90bb\u7684\u533a\u95f4\uff09\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728 $O(\\mathcal n \\sqrt{n})$ \u7684\u590d\u6742\u5ea6\u5185\u6c42\u51fa\u6240\u6709\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\u5c06\u666e\u901a\u83ab\u961f\u5e94\u7528\u4e8e\u6b64\u9898\uff0c\u7531\u4e8e\u9700\u8981\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u6743\u503c\uff0c\u6545\u5355\u6b21\u7aef\u70b9\u79fb\u52a8\u4e3a $\\mathcal O(\\log n)$ \u800c\u975e $\\mathcal O(1)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n \\sqrt n \\log n)$\uff0c\u4f1a[\u88ab\u5361](https://www.luogu.com.cn/discuss/133459)\u3002\n\n\u4f17\u6240\u5468\u77e5\u83ab\u961f\u662f\u4e00\u79cd\u79bb\u7ebf\u7b97\u6cd5\uff0c\u800c\u5c06\u83ab\u961f\u7b97\u6cd5\u4e2d\u7aef\u70b9\u79fb\u52a8\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u79bb\u7ebf\u4e0b\u6765\u7edf\u4e00\u5904\u7406\uff0c\u53ef\u4ee5\u770b\u4f5c\u5728\u79bb\u7ebf\u7b97\u6cd5\u4e0a\u53c8\u4e00\u6b21\u79bb\u7ebf\uff0c\u6545\u79f0\u4e3a\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\u3002\n\n\u7531\u4e8e\u7aef\u70b9\u79fb\u52a8\u6b21\u6570\u4e3a $\\mathcal O(n \\sqrt m)$\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e8c\u6b21\u79bb\u7ebf\u4f1a\u4ea7\u751f $\\mathcal O(n \\sqrt m)$ \u6b21\u4e8c\u6b21\u67e5\u8be2\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u4e00\u79cd\u652f\u6301 $\\mathcal O(1)$ \u67e5\u8be2\u7684\u6570\u636e\u7ef4\u62a4\u65b9\u5f0f\u3002\n\n\u7531\u4e8e\u5143\u7d20\u53ea\u6709 $\\mathcal O(n)$ \u4e2a\uff0c\u63d2\u5165\u6b21\u6570\u4e3a $\\mathcal O(n)$\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e8c\u6b21\u67e5\u8be2\u65f6\u4f7f\u7528\u6743\u503c\u524d\u7f00\u5206\u5757\u6765\u7ef4\u62a4\u3002\n\n\u4e2a\u4eba\u8ba4\u4e3a\u4ee3\u7801\u4e0d\u591f\u7cbe\u7b80\uff0c\u4f46\u601d\u8def\u975e\u5e38\u660e\u6670\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\n\ntypedef long long lxl;\n\nconst int maxN = 5e5;\nconst int maxM = 5e5;\nconst int maxA = 1e5;\nconst int sqrN = 708;\nconst int sqrA = 317;\n\nint n, m;\nint a[maxN + 10];\nint b[maxN + 10];\nint l, r;\nlxl f[maxN + 10];\nlxl g[maxN + 10];\nlxl ans[maxM + 10];\n\ntypedef struct SegmentTree {\n    struct Node {\n        lxl val;\n        lxl tag;\n    } node[4 * maxA + 10];\n\n    void MakeTag(int u, int l, int r, lxl val) {\n        node[u].val += val * (r - l + 1);\n        node[u].tag += val;\n        return;\n    }\n\n    void PushDown(int u, int l, int r) {\n        if (!node[u].tag) return;\n        int mid = (l + r) / 2;\n        MakeTag(2 * u, l, mid, node[u].tag);\n        MakeTag(2 * u + 1, mid + 1, r, node[u].tag);\n        node[u].tag = 0;\n        return;\n    }\n\n    void PushUp(int u) {\n        node[u].val = node[2 * u].val + node[2 * u + 1].val;\n        return;\n    }\n\n    void Add(int u, int l, int r, int s, int t, lxl val) {\n        if (s > t) return;\n        if (s <= l && r <= t) {\n            MakeTag(u, l, r, val);\n            return;\n        }\n        PushDown(u, l, r);\n        int mid = (l + r) / 2;\n        if (s <= mid) Add(2 * u, l, mid, s, t, val);\n        if (t >= mid + 1) Add(2 * u + 1, mid + 1, r, s, t, val);\n        PushUp(u);\n        return;\n    }\n\n    void Add(int u, int l, int r, int pos, lxl val) {\n        Add(u, l, r, pos, pos, val);\n        return;\n    }\n\n    lxl Ask(int u, int l, int r, int s, int t) {\n        if (s > t) return 0;\n        if (s <= l && r <= t) {\n            return node[u].val;\n        }\n        PushDown(u, l, r);\n        int mid = (l + r) / 2;\n        if (t <= mid) return Ask(2 * u, l, mid, s, t);\n        if (s >= mid + 1) return Ask(2 * u + 1, mid + 1, r, s, t);\n        return Ask(2 * u, l, mid, s, t) + Ask(2 * u + 1, mid + 1, r, s, t);\n    }\n} sgt;\n\ntypedef struct BlockArray {\n    struct Block {\n        int l, r;\n        lxl tag;\n    } block[sqrA + 10];\n\n    struct Array {\n        int bel;\n        lxl val;\n    } array[maxA + 10];\n\n    void Build() {\n        for (int i = 1; i <= maxA; i++) array[i].bel = (i - 1) / sqrA + 1;\n        for (int i = 1; i <= maxA; i++) block[array[i].bel].r = i;\n        for (int i = maxA; i >= 1; i--) block[array[i].bel].l = i;\n        return;\n    }\n\n    void Add(int pos, lxl val) {\n        for (int i = array[pos].bel + 1; i <= array[maxA].bel; i++) block[i].tag += val;\n        for (int i = pos; i <= block[array[pos].bel].r; i++) array[i].val += val;\n        return;\n    }\n\n    lxl Ask(int pos) {\n        return array[pos].val + block[array[pos].bel].tag;\n    }\n\n    lxl Ask(int l, int r) {\n        if (l > r) return 0;\n        return Ask(r) - Ask(l - 1);\n    }\n} dba;\n\nnamespace captainMoSecondaryOffline {\n    namespace offline2 {\n        struct Query {\n            int i;\n            int l, r;\n            int k;\n        };\n\n        std::vector<Query> query[maxN + 10];\n\n        dba sum, cnt;\n\n        void solve() {\n            sum.Build();\n            cnt.Build();\n            for (int i = 1; i <= n; i++) {\n                sum.Add(a[i], a[i]);\n                cnt.Add(a[i], 1);\n                for (int j = 0; j < query[i].size(); j++) {\n                    for (int k = query[i][j].l; k <= query[i][j].r; k++) {\n                        ans[query[i][j].i] += 1ll * query[i][j].k * (sum.Ask(a[k] + 1, maxA) + cnt.Ask(1, a[k] - 1) * a[k]);\n                    }\n                }\n            }\n            return;\n        }\n    }\n\n    namespace offline1 {\n        struct Query {\n            int i;\n            int l, r;\n\n            bool operator<(const Query &other) const {\n                if (b[l] != b[other.l]) return l < other.l;\n                return r < other.r;\n            }\n        };\n\n        std::vector<Query> query;\n\n        sgt sum, cnt;\n\n        void solve() {\n            std::sort(query.begin(), query.end());\n            for (int i = 1; i <= n; i++) {\n                f[i] = sum.Ask(1, 1, maxA, a[i] + 1, maxA);\n                g[i] = cnt.Ask(1, 1, maxA, 1, a[i] - 1);\n                sum.Add(1, 1, maxA, a[i], a[i]);\n                cnt.Add(1, 1, maxA, a[i], 1);\n            }\n            for (int i = 0, l = 1, r = 0; i < query.size(); i++) {\n                if (l > query[i].l) {\n                    offline2::query[r].push_back((offline2::Query) {query[i].i, query[i].l, l - 1, 1});\n                    while (l > query[i].l) {\n                        l--;\n                        ans[query[i].i] -= f[l] + (g[l] - 1) * a[l];\n                    }\n                }\n                if (r < query[i].r) {\n                    offline2::query[l - 1].push_back((offline2::Query) {query[i].i, r + 1, query[i].r, -1});\n                    while (r < query[i].r) {\n                        r++;\n                        ans[query[i].i] += f[r] + (g[r] + 1) * a[r];\n                    }\n                }\n                if (l < query[i].l) {\n                    offline2::query[r].push_back((offline2::Query) {query[i].i, l, query[i].l - 1, -1});\n                    while (l < query[i].l) {\n                        ans[query[i].i] += f[l] + (g[l] - 1) * a[l];\n                        l++;\n                    }\n                }\n                if (r > query[i].r) {\n                    offline2::query[l - 1].push_back((offline2::Query) {query[i].i, query[i].r + 1, r, 1});\n                    while (r > query[i].r) {\n                        ans[query[i].i] -= f[r] + (g[r] + 1) * a[r];\n                        r--;\n                    }\n                }\n            }\n            return;\n        }\n    }\n\n    void solve() {\n        offline1::solve();\n        offline2::solve();\n        for (int i = 0; i < m; i++) ans[offline1::query[i].i] += ans[offline1::query[i - 1].i];\n        return;\n    }\n}\n\nint main() {\n    std::cin >> n >> m;\n    for (int i = 1; i <= n; i++) std::cin >> a[i];\n    for (int i = 1; i <= n; i++) b[i] = (i - 1) / sqrN + 1;\n    for (int i = 1; i <= m; i++) std::cin >> l >> r, captainMoSecondaryOffline::offline1::query.push_back((captainMoSecondaryOffline::offline1::Query) {i, l, r});\n    captainMoSecondaryOffline::solve();\n    for (int i = 1; i <= m; i++) std::cout << ans[i] << '\\n';\n    return 0;\n}\n```",
        "postTime": 1684065110,
        "uid": 278046,
        "name": "Lyccrius",
        "ccfLevel": 5,
        "title": "\u6765\u8005\u4e0d\u62d2\uff0c\u53bb\u8005\u4e0d\u8ffd"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P5501)\n\n\u9996\u5148\u8fdb\u884c\u4e00\u4e2a\u8f6c\u5316\uff1a\u6bcf\u4e2a\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u4e2d\u4e00\u5bf9 $(i,j)$\uff0c\u5982\u679c $a_i< a_j$ \u4f1a\u9020\u6210 $a_i$ \u7684\u8d21\u732e\u3002\u6700\u540e\u518d\u52a0\u4e00\u4e2a\u533a\u95f4\u548c\u5c31\u662f\u7b54\u6848\u3002\n\n\u8003\u8651\u8fd9\u662f\u4e00\u4e2a\u533a\u95f4\u6bcf\u5bf9\u6570\u7684\u8d21\u732e\uff0c\u5e76\u4e14\u5177\u6709\u53ef\u51cf\u6027\uff0c\u4e0a\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\u90a3\u4e00\u5957\u3002\u8003\u8651\u4e00\u4e2a\u4f4d\u7f6e $x$ \u5bf9\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u7684\u8d21\u732e $f(x,[l,r])$\uff0c\u62c6\u6210\u4e24\u90e8\u5206\uff1a\n\n- $[l,r]$ \u4e2d $< a_x$ \u7684\u6570\u7684\u4e2a\u6570\u4e3a $c$\uff0c\u8d21\u732e $c\\times a_x$\n\n- $[l,r]$ \u4e2d $> a_x$ \u7684\u6570\u7684\u548c $s$\n\n\u4e24\u90e8\u5206\u90fd\u662f\u53ef\u51cf\u4fe1\u606f\uff0c\u7531\u4e8e\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\u662f $O(n)$ \u6b21\u5355\u70b9\u4fee\u6539\uff0c$O(n\\sqrt m)$ \u6b21\u5355\u70b9\u67e5\u8be2\uff0c\u6240\u4ee5\u9700\u8981\u5e73\u8861\u4e00\u4e0b\u590d\u6742\u5ea6\uff0c\u5728\u503c\u57df\u4e0a\u5206\u5757\u53ef\u4ee5\u505a\u5230 $O(\\sqrt V)$ \u4fee\u6539\uff0c$O(1)$ \u67e5\u8be2\uff08\u5176\u4e2d $V$ \u662f\u503c\u57df\uff09\u3002\u603b\u590d\u6742\u5ea6 $O(n\\sqrt V+n\\sqrt m+m)$\u3002\n\nmy code~~\uff08\u88ab\u673a\u623f\u5c0f\u5b66\u5f1f\u5410\u69fd\u7684\u9a6c\u8702\uff09~~\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<algorithm>\n#define memset __builtin_memset\n#define pb push_back\ntypedef long long ll;\ninline void chkmax(int &a,const int &b){if(b>a)a=b;}\nconst int N=5e5+13,M=5e5+13,B=1000+13,BN=400,BM=350;\nint n,m,lim,tot,a[N],fromq[N],from[M],L[B],R[B],c1[M],tag1[B];\nll pre[N],c2[M],tag2[B],f[N];\nstruct Ques{\n\tint l,r,id;ll sum;\n\tinline bool operator <(const Ques &a)const{return fromq[l]!=fromq[a.l]?fromq[l]<fromq[a.l]:(fromq[l]&1?r<a.r:r>a.r);}\n}q[N];\nstruct Node{int l,r,id,op;};\nstd::vector<Node> b[N];\nll ans[N];\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&a[i]),pre[i]=pre[i-1]+a[i],chkmax(lim,a[i]);\n\tfor(int i=1;i<=lim;++i){\n\t\tfrom[i]=i/BM+1;\n\t\tif(from[i]!=from[i-1]) R[tot]=i-1,L[++tot]=i;\n\t}\n\tR[tot]=lim;//\u6ce8\u610f\uff01\u8fd9\u4e2a\u5730\u65b9\u4e0a\u9650\u662f\u503c\u57df\uff01\uff01\n   //\u4e0b\u9762\u662f\u9884\u5904\u7406\u524d\u7f00\u8d21\u732e\n\tfor(int i=1;i<=n;++i){\n\t\tf[i]=(ll)(c1[a[i]]+tag1[from[a[i]]])*a[i]+c2[a[i]]+tag2[from[a[i]]];\n\t\tfor(int j=a[i]+1;j<=R[from[a[i]]];++j) ++c1[j];\n\t\tfor(int j=from[a[i]]+1;j<=tot;++j) ++tag1[j];\n\t\tfor(int j=a[i]-1;j>=L[from[a[i]]];--j) c2[j]+=a[i];\n\t\tfor(int j=from[a[i]]-1;j>=1;--j) tag2[j]+=a[i];\n\t}\n\tfor(int i=1;i<=m;++i) scanf(\"%d%d\",&q[i].l,&q[i].r),q[i].id=i;\n\tfor(int i=1;i<=n;++i) fromq[i]=i/BN+1;\n\tstd::sort(q+1,q+m+1);\n   //\u83ab\u961f\uff0c\u628a\u8d21\u732e\u533a\u95f4\u79bb\u7ebf\n\tfor(int i=1,l=1,r=0;i<=m;++i){\n\t\tif(l>q[i].l) b[r].pb((Node){q[i].l,l-1,i,1});\n\t\twhile(l>q[i].l) --l,q[i].sum-=f[l];\n\t\tif(r<q[i].r) b[l-1].pb((Node){r+1,q[i].r,i,-1});\n\t\twhile(r<q[i].r) ++r,q[i].sum+=f[r];\n\t\tif(l<q[i].l) b[r].pb((Node){l,q[i].l-1,i,-1});\n\t\twhile(l<q[i].l) q[i].sum+=f[l],++l;\n\t\tif(r>q[i].r) b[l-1].pb((Node){q[i].r+1,r,i,1});\n\t\twhile(r>q[i].r) q[i].sum-=f[r],--r;\n\t}\n\tmemset(c1,0,sizeof c1);memset(c2,0,sizeof c2);memset(tag1,0,sizeof tag1);memset(tag2,0,sizeof tag2);\n   //\u626b\u63cf\u7ebf\u7b97\u7b54\u6848\uff0c\u5206\u5757\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=a[i]+1;j<=R[from[a[i]]];++j) ++c1[j];\n\t\tfor(int j=from[a[i]]+1;j<=tot;++j) ++tag1[j];\n\t\tfor(int j=a[i]-1;j>=L[from[a[i]]];--j) c2[j]+=a[i];\n\t\tfor(int j=from[a[i]]-1;j>=1;--j) tag2[j]+=a[i];\n\t\tfor(auto x:b[i])\n\t\t\tfor(int j=x.l;j<=x.r;++j) q[x.id].sum+=x.op*((ll)(c1[a[j]]+tag1[from[a[j]]])*a[j]+c2[a[j]]+tag2[from[a[j]]]);\n\t}\n\tfor(int i=1;i<=m;++i) ans[q[i].id]=(q[i].sum+=q[i-1].sum)+pre[q[i].r]-pre[q[i].l-1];\n\tfor(int i=1;i<=m;++i) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1656476016,
        "uid": 160484,
        "name": "cunzai_zsy0531",
        "ccfLevel": 7,
        "title": "P5501\u9898\u89e3"
    },
    {
        "content": "[\u4e0d\u77e5\u9053\u66f4\u597d\u8fd8\u662f\u66f4\u574f\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Illusory-dimes/p/15716972.html)\n\n## Description\n\n\u7ed9\u5b9a n \u4e2a\u6570\u548c m \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a l \uff0c r \uff0c\u8981\u6c42\u533a\u95f4\u5185\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u5bf9 \u6392\u540d * \u6570\u503c \u6c42\u548c\u3002\n\n\u907f\u514d\u6b67\u4e49\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6570\u5217 $1\\ 2\\ 2\\ 3$ \u7684\u7b54\u6848\u4e3a $1 \\cdot 1 + 2 \\cdot 2 + 2 \\cdot 2 + 4 \\cdot 3 = 21$ \uff08\u524d\u8005\u4e3a\u6392\u540d\uff0c\u540e\u8005\u4e3a\u6570\u503c\uff09\n\n$1 \\leq n,\\ m \\leq 5 \\cdot 10 ^ 5\\ \\ \\ 1 \\leq a_i \\leq 10 ^ 5$\n\n## Analysis\n\n\u56e0\u4e3a\u6dfb\u52a0\u4e00\u4e2a\u6570\u6216\u5220\u53bb\u4e00\u4e2a\u6570\u5f71\u54cd\u8d21\u732e\u7684\u662f\u4e00\u6574\u4e2a\u540e\u7f00\uff0c\u6240\u4ee5 $\\log$ \u7684\u7b97\u6cd5\u663e\u5f97\u4e0d\u592a\u73b0\u5b9e\uff0c\u8003\u8651\u83ab\u961f\u3002\n\n\u4ece\u666e\u901a\u83ab\u961f\u5f00\u59cb\u601d\u8003\uff0c\u7531\u4e8e\u6bcf\u6b21\u66f4\u6539\u4e00\u4e2a\u6570\u5f71\u54cd\u7684\u5f0f\u540e\u7f00\uff0c\u6240\u4ee5\u6811\u72b6\u6570\u7ec4\u662f\u6bd4\u8f83\u597d\u7684\u89e3\u51b3\u65b9\u5f0f\u3002\n\n\u56e0\u4e3a\u76f8\u540c\u7684\u6570\u6392\u540d\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u7ef4\u62a4\u4e24\u4e2a\u4e1c\u897f\uff0c\u4e00\u4e2a\u662f\u540e\u7f00\u548c\uff0c\u56e0\u4e3a\u6bd4\u5b83\u5927\u7684\u6570\u6392\u540d\u5168\u90e8\u52a0\u4e00\u4e86\uff0c\u6240\u4ee5\u65b0\u8d21\u732e\u5c31\u662f\u540e\u7f00\u548c\uff1b\u53e6\u4e00\u4e2a\u662f\u6392\u540d\uff0c\u7528\u6765\u627e\u5f53\u524d\u6570\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u6570\u7684\u8d21\u732e\u4e86\u3002\u6574\u4f53\u505a\u4e0b\u6765\u5c31\u53ef\u4ee5\u5b8c\u6210\u6b64\u9898\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\cdot\\sqrt{m}\\cdot\\log a_{max})$\n\n## Solution\n\n\u5f88\u663e\u7136\u4e0a\u8ff0\u65b9\u5f0f\u4e0d\u80fd\u901a\u8fc7\u672c\u9898\uff08\u542c\u8bf4\u539f\u6765\u53ef\u4ee5\u4f46\u662f\u73b0\u5728\u52a0\u5f3a\u6570\u636e\u4e86\uff09\n\n\u6811\u72b6\u6570\u7ec4\u590d\u6742\u5ea6\u5df2\u7ecf\u5230\u5934\u4e86\uff0c\u6240\u4ee5\u8981\u4ece\u83ab\u961f\u65b9\u5f0f\u4e0a\u8fdb\u884c\u53d8\u66f4\uff0c\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\uff1a\n\n\u5199\u6cd5\u53c2\u7167\u7684\u662f [Yuno loves sqrt technology II](https://www.luogu.com.cn/problem/P5047 \"Yuno loves sqrt technology II\") \uff0c\u7ef4\u62a4\u7684\u4e1c\u897f\u548c\u672c\u9898\u6811\u72b6\u6570\u7ec4\u7684\u662f\u4e00\u81f4\u7684\u3002\n\n\u7136\u540e\u8fd8\u662f\u8981\u9884\u5904\u7406 $[1, l]$ \u7684\u7b54\u6848\u548c $[r, n]$ \u7684\u7b54\u6848\u524d\u7f00\u548c\uff0c\u5c31\u53ef\u4ee5\u5148\u628a\u66f4\u6539\u7684\u533a\u95f4 $[r1, r2]$ \u7684\u5185\u90e8\u7684\u7b54\u6848\u5148\u7b97\u597d\u3002\n\n\u4f46\u662f\u540c\u6837\u8981\u6ce8\u610f\u7684\u662f\u5373\u4f7f\u6211\u4eec\u628a\u6240\u6709\u64cd\u4f5c\u4fdd\u5b58\u4e0b\u6765\uff0c\u4e5f\u8fd8\u662f\u4e0d\u80fd\u76f4\u63a5\u505a\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u503c\u57df\u5206\u5757\uff0c\u7136\u540e\u524d\u540e\u5404\u626b\u4e00\u904d\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n + n\\sqrt{n})$\n\n### \u53e6\u4e00\u4e2a\u60f3\u6cd5\n\n\u5176\u5b9e Solution \u91cc\u9762\u63d0\u5230\u7684\u90a3\u9053\u4e8c\u6b21\u79bb\u7ebf\u6c42\u9006\u5e8f\u5bf9\uff0c\u6bcf\u6b21\u66f4\u6539\u4e00\u4e2a\u6570\u662f\u5bf9\u533a\u95f4\u5185\u6240\u6709\u6570\u6709\u5f71\u54cd\uff0c\u8fd8\u4e0d\u80fd\u4e00\u4e2a\u4e00\u4e2a\u53bb\u6bd4\u8f83\uff0c\u56e0\u4e3a\u5b83\u540c\u65f6\u548c\u4f4d\u7f6e\u548c\u5927\u5c0f\u540c\u65f6\u76f8\u5173\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u4e0d\u592a\u4e00\u6837\u7684\u5c31\u662f\u6bcf\u4e2a\u6570\u5bf9\u533a\u95f4\u5185\u6570\u7684\u8d21\u732e\u4ec5\u9650\u4e8e\u5927\u5c0f\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u6761\u4ef6\u672c\u8d28\u4e0a\u662f\u53d8\u5bbd\u677e\u4e86\u3002\n\n\u751a\u81f3\u53ef\u4ee5\u8003\u8651\u53ea\u7528\u666e\u901a\u83ab\u961f\u505a\u8fd9\u9898\uff0c\u4f46\u662f\u6211\u4e0d\u592a\u4f1a\uff0c\u6709\u4f1a\u7684\u5927\u4f6c\u6c42\u6559\u6559 qwq \u3002\n\n## Code\n\n```cpp\n/*\n\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e6 + 10;\nll lim, a[N], par1[N], poi1[N], par2[N], poi2[N];\nint n, m, id[N], boc, blo[N], lt[N], rt[N];\nint lr[N], rl[N], bel[N], lth;\nll arr1[N], arr2[N], pre[N], suf[N], ans[N];\nstruct mdzz {\n\tint op, l, r, id;\n};\nvector<mdzz> lp[N], rs[N];\ninline int read() {\n\tchar ch = getchar();\n\tint s = 0, w = 1;\n\twhile (ch < '0' || ch > '9') {if (ch == '-') w = -1; ch = getchar();}\n\twhile (ch >= '0' && ch <= '9') {s = (s << 3) + (s << 1) + ch - '0'; ch = getchar();}\n\treturn s * w;\n}\ninline bool cmp(int x, int y) {\n\treturn blo[x] ^ blo[y] ? lt[x] < lt[y] : rt[x] < rt[y];\n}\ninline int lowbit(int x) {return x & (-x);}\ninline void add1(int x, int k) {\n\tfor (; x <= lim; x += lowbit(x)) arr1[x] += k;\n}\ninline ll query1(int x) {\n\tll tmp = 0;\n\tfor (; x >= 1; x -= lowbit(x)) tmp += arr1[x];\n\treturn tmp;\n}\ninline void add2(int x, int k) {\n\tfor (; x <= lim; x += lowbit(x)) arr2[x] += k;\n}\ninline ll query2(int x) {\n\tll tmp = 0;\n\tfor (; x >= 1; x -= lowbit(x)) tmp += arr2[x];\n\treturn tmp;\n}\ninline void pushup(int x) {\n\tif (par1[bel[x]]) {\n\t\tfor (int i = lr[bel[x]]; i <= rl[bel[x]]; ++i) poi1[i] += par1[bel[x]];\n\t\tpar1[bel[x]] = 0;\n\t}\n\tfor (int i = x + 1; i <= rl[bel[x]]; ++i) ++poi1[i];\n\tfor (int i = bel[x] + 1; i <= lth; ++i) ++par1[i];\n\t\n\tif (par2[bel[x]]) {\n\t\tfor (int i = lr[bel[x]]; i <= rl[bel[x]]; ++i) poi2[i] += par2[bel[x]];\n\t\tpar2[bel[x]] = 0;\n\t}\n\tfor (int i = lr[bel[x]]; i <= x - 1; ++i) poi2[i] += x;\n\tfor (int i = 1; i <= bel[x] - 1; ++i) par2[i] += x;\n}\nint main() {\n\tn = read(); m = read();\n\tboc = 316;\n\tfor (int i = 1; i <= n; ++i) a[i] = read(), lim = max(lim, a[i]);\n\tfor (int i = 1; i <= lim; ++i) bel[i] = (i - 1) / boc + 1;\n\tbel[0] = 1; bel[lim + 1] = lim / boc + 1;\n\tlth = bel[lim + 1];\n\tfor (int i = 1; i <= lth; ++i) lr[i] = rl[i - 1] + 1, rl[i] = i * boc;\n\tlr[1] = 0; rl[lth] = lim + 1;\n\tfor (int i = 1; i <= m; ++i) {\n\t\tlt[i] = read(); rt[i] = read(); id[i] = i; blo[i] = lt[i] / boc;\n\t}\n\tsort(id + 1, id + 1 + m, cmp);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tpre[i] = pre[i - 1] + query2(lim) - query2(a[i]); add2(a[i], a[i]);\n\t\tpre[i] += (query1(a[i] - 1) + 1) * a[i]; add1(a[i], 1);\n\t}\n\tmemset(arr1, 0, sizeof(arr1)); memset(arr2, 0, sizeof(arr2));\n\tfor (int i = n; i >= 1; --i) {\n\t\tsuf[i] = suf[i + 1] + query2(lim) - query2(a[i]); add2(a[i], a[i]);\n\t\tsuf[i] += (query1(a[i] - 1) + 1) * a[i]; add1(a[i], 1);\n\t}\n\tint l = 1, r = 0;\n\tfor (int i = 1; i <= m; ++i) {\n\t\tint ql = lt[id[i]], qr = rt[id[i]];\n\t\tif (r < qr) {\n\t\t\tlp[l].push_back((mdzz) {-1, r + 1, qr, id[i]});\n\t\t\tans[id[i]] += (pre[qr] - pre[r]); r = qr;\n\t\t}\n\t\tif (r > qr) {\n\t\t\tlp[l].push_back((mdzz) {1, qr + 1, r, id[i]});\n\t\t\tans[id[i]] += (pre[qr] - pre[r]); r = qr;\n\t\t}\n\t\tif (l < ql) {\n\t\t\trs[r].push_back((mdzz) {1, l, ql - 1, id[i]});\n\t\t\tans[id[i]] += (suf[ql] - suf[l]); l = ql;\n\t\t}\n\t\tif (l > ql) {\n\t\t\trs[r].push_back((mdzz) {-1, ql, l - 1, id[i]});\n\t\t\tans[id[i]] += (suf[ql] - suf[l]); l = ql;\n\t\t}\n\t}\n\tint siz, lq, rq, idt; ll op;\n\tfor (int i = 1; i <= n; ++i) { siz = lp[i].size();\n\t\tfor (int j = 0; j < siz; ++j) {\n\t\t\top = lp[i][j].op; idt = lp[i][j].id;\n\t\t\tlq = lp[i][j].l; rq = lp[i][j].r;\n\t\t\tfor (int k = lq; k <= rq; ++k)\n\t\t\t\tans[idt] += op * (par2[bel[a[k]]] + poi2[a[k]] + a[k] * (par1[bel[a[k]]] + poi1[a[k]]));\n\t\t}\n\t\tpushup(a[i]);\n\t}\n\tmemset(par1, 0, sizeof(par1)); memset(poi1, 0, sizeof(poi1));\n\tmemset(par2, 0, sizeof(par2)); memset(poi2, 0, sizeof(poi2));\n\tfor (int i = n; i >= 1; --i) { siz = rs[i].size();\n\t\tfor (int j = 0; j < siz; ++j) {\n\t\t\top = rs[i][j].op; idt = rs[i][j].id;\n\t\t\tlq = rs[i][j].l; rq = rs[i][j].r;\n\t\t\tfor (int k = lq; k <= rq; ++k)\n\t\t\t\tans[idt] += op * (par2[bel[a[k]]] + poi2[a[k]] + a[k] * (par1[bel[a[k]]] + poi1[a[k]]));\n\t\t}\n\t\tpushup(a[i]);\n\t}\n\tfor (int i = 1; i <= m; ++i) ans[id[i]] += ans[id[i - 1]];\n\tfor (int i = 1; i <= m; ++i) printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1640089283,
        "uid": 206024,
        "name": "Illusory_dimes",
        "ccfLevel": 7,
        "title": "[LnOI2019]\u6765\u8005\u4e0d\u62d2\uff0c\u53bb\u8005\u4e0d\u8ffd \u9898\u89e3"
    }
]