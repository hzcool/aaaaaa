[
    {
        "content": "[P4305 [JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57](https://www.luogu.com.cn/problem/P4305)\r\n\r\n---\r\n\r\n\u4eca\u5929\u65e9\u4e0a\u770b\u89c1 xht37 \u8bf4\u52a0\u5f3a\u4e86\u6570\u636e\u3002\u7136\u540e `map/set` \u5c31\u88ab\u5361\u6389\u4e86\u3002\r\n\r\n\u4f46\u662f C++11 \u7684 `unordered_map` \u662f\u54c8\u5e0c\uff0c\u80fd\u8fc7\uff01\r\n\r\n`unordered_map` \u7684\u5b9a\u4e49\u4e0e\u7528\u6cd5\u90fd\u4e0e `map` \u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u662f\u7528Hash\u6765\u5b58\u50a8\u7684\uff0c\u5224\u65ad\u662f$O(1)$\u7684\u3002\r\n\r\n\u800c`map`\u5224\u65ad\u662f$O(\\log n)$\u7684\u3002\r\n\r\n\u4ee3\u7801\uff1a\uff08\u4e0d\u5f00O2\u4e5f\u8fc7\u4e86\uff09\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\r\n#define Rep(i,a,b) for(int i=(a);i>=(b);--i)\r\nusing namespace std;\r\ninline int read()\r\n{\r\n\tchar c=getchar();int x=0,f=1;\r\n\tfor(;!isdigit(c);c=getchar())if(c=='-')f=-1;\r\n\tfor(;isdigit(c);c=getchar())x=x*10+c-48;\r\n\treturn x*f;\r\n}\r\nint T,n,x;\r\nunordered_map<int,bool>s;//\u5b9a\u4e49\r\nvoid work()\r\n{\r\n\ts.clear();//\u6e05\u7a7a\r\n\tn=read();\r\n\tFor(i,1,n){\r\n\t\tx=read();\r\n\t\tif(!s[x]){//\u6ca1\u6709\u7684\u8bdd\uff0c\u76f4\u63a5\u8f93\u51fa+\u6807\u8bb0\u6389\u3002\r\n\t\t\tprintf(\"%d \",x);\r\n\t\t\ts[x]=1;\r\n\t\t}\r\n\t}puts(\"\");//\u6362\u884c\r\n}\r\nint main()\r\n{\r\n\tT=read();\r\n\twhile(T--)work();\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1580100939,
        "uid": 151935,
        "name": "Rainbow_qwq",
        "ccfLevel": 0,
        "title": "P4305 \u3010[JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57\u3011"
    },
    {
        "content": "~~\u6709\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u771f\u7684\u7384\u5b66~~\n\n\u601d\u8def\u5f88\u66b4\u529b\uff0c~~\u53ea\u9700\u8981\u5c0f\u5b66\u4e8c\u5e74\u7ea7\u601d\u7ef4~~\n___\n\n### \u5927\u81f4\u601d\u8def:\n\n$\\color{green}\\text{\u6211\u4eec\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\uff0c\u5b58\u6bcf\u4e2a\u6570\u5b57\u7684\u503c\u548c\u51fa\u73b0\u7684\u4f4d\u7f6e,}$\n$\\color{green}\\text{\u5148\u628a\u6570\u5b57\u6309\u7167\u503c\u6392\u5e8f\u4e00\u904d\uff08\u503c\u76f8\u540c\u7684\u8bdd\uff0c\u6309\u7167\u4f4d\u7f6e\u7531\u524d\u5230\u540e\u6392\u5e8f\uff09}$\n$\\color{green}\\text{\u6392\u5e8f\u540e\u65b9\u4fbf\u53bb\u9664\u91cd\u590d\u7684\u6570\u5b57\uff0c\u6bcf\u4e2a\u6570\u5b57\u53ea\u9700\u8981\u4fdd\u7559\u4f4d\u7f6e\u6700\u9760\u524d\u7684\u90a3\u4e2a\u4fbf\u53ef\uff08\u7b80\u5355\u7c97\u66b4\uff09}$\n$\\color{green}\\text{\u7136\u540e\u6211\u4eec\u518d\u6309\u7167\u6570\u5b57\u7684\u4f4d\u7f6e\u6392\u4e00\u4e0b\u5e8f\uff0c\u987a\u5e8f\u8f93\u51fa\u6211\u4eec\u4fdd\u7559\u7684\u6570\u5b57\u5373\u53ef}$\n\n\u9996\u5148\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53 $\\color{#FB6340}\\text{struct num}$\n\n```cpp\nstruct num{\n\tint id;//\u6bcf\u4e2a\u6570\u5b57\u7684\u4f4d\u7f6e\n\tint z;//\u6bcf\u4e2a\u6570\u5b57\u7684\u503c\n};\n```\n\n\u7136\u540e\u5b9a\u4e49\u4e00\u4e0b $\\color{#FB6340}\\text{\u6bd4\u8f83\u51fd\u6570}$\n\n```cpp\nbool cmz(struct num a,struct num b){\n\tif(a.z>b.z)\n\t\treturn true;\n\tif(a.z==b.z)\n\t\tif(a.id<b.id)\n\t\t\treturn true;\n\treturn false;\n}\nbool cmid(struct num a,struct num b){\n\tif(a.id<b.id)\n\t\treturn true;\n\treturn false;\n}\n```\n\n\u597d\uff0c\u6709\u4e86\u8fd9\u4e9b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u64cd\u4f5c\u4e86\n___\n\n### \u5177\u4f53\u4e3e\u4f8b:\n\n$$\\color{white}\\text{\u6b66\u6c49\u52a0\u6cb9}$$\n\n#### 1.\u5148\u628a\u4e00\u4e32\u6570\u5b57\u8bfb\u5165\u8fdb\u6765\uff0c\u5e76\u4f9d\u6b21\u8d4b\u4e88id\u503c\n\n> $\\color{#52C41A}\\text{1 2 18 3 3 19 2 3 6 5 4 6 17 18}$\n\n#### 2.\u5c06\u6570\u5b57\u7684\u503c\u6392\u5e8f $\\color{#FB6340}\\text{(sort)(num.z)(cmz\u51fd\u6570)}$\n\n> $\\color{#52C41A}\\text{id : 6 3 14 13 9 12 10 11 4 5 8 2 7 1}$\n\n> $\\color{#52C41A}\\text{z  : 19 18 18 17 6 6 5 4 3 3 3 2 2 1}$\n\n#### 3.\u53bb\u6389\u91cd\u590d\u7684\u6570\u5b57\n\n> $\\color{#52C41A}\\text{id : 6 3 14 13 9 12 10 11 4 5 8 2 7 1}$\n\n> $\\color{#52C41A}\\text{z  : 19 18 0 17 6 0 5 4 3 0 0 2 0 1}$\n\n```cpp\n//\u8fd9\u91ccz\u76840\u8868\u793a\u8be5\u6570\u88ab\u5220\u53bb\uff08\u5b9e\u9645\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u7528-2147483659\u6765\u4ee3\u66ff\uff09\n```\n#### 4.\u5c06\u6570\u5b57\u7684\u4f4d\u7f6e\u6392\u5e8f $\\color{#FB6340}\\text{(sort)(num.id)(cmid\u51fd\u6570)}$\n\n> $\\color{#52C41A}\\text{id : 1 2 3 4 5 6 7 8 9 10 11 12 13 14}$\n\n> $\\color{#52C41A}\\text{z  : 1 2 18 3 0 19 0 0 6 5 4 0 17 0}$\n\n#### 5.\u8f93\u51fa\u7b54\u6848\n\n> $\\color{#52C41A}\\text{1 2 18 3 19 6 5 4 17}$\n\n___\n### \u6ce8\u610f\u4e8b\u9879:\n\n$$\\color{white}\\text{\u6b66\u6c49\u52a0\u6cb9}$$\n\n#### \u6570\u636e\u8303\u56f4\u95ee\u9898:\n\n\u8be5\u9898\u7ed9\u51fa\u7684\u6570\u572832\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\n\uff0c\u6240\u4ee5\u6211\u4eec\u7528-2147483659\u6765\u8868\u793a\u8be5\u6570\u5df2\u88ab\u53bb\u9664 ~~\uff08\u5f00long long\u5427\uff09~~\n\n#### \u5173\u4e8e\u53bb\u91cd\u7684\u95ee\u9898:\n\n```cpp\nfor(int i=1;i<=n;i+=pd){\n\tpd = 1;\n\tfor(int j=i+1;j<=n;j++){\n\t\tif(s[i].z==s[j].z)s[j].z = -2147483659,pd++;\n\t\telse break;\n\t}\n}\n```\n\n\u53d8\u91cf $\\color{red}\\text{pd}$ \u7684\u5b58\u5728\u53ef\u4ee5\u5e2e\u6211\u4eec\u7a0d\u7a0d\u4f18\u5316\u4e00\u4e0b\u53bb\u91cd\u7684\u8fc7\u7a0b\n\n~~\uff08\u907f\u514d\u6bd2\u7624\u7684\u6570\u636e\uff1a1 1 1 1 1 1  \u2026\u2026 1 1 1\u2026\u20261 1 1 1\uff09~~\n\n#### \u5173\u4e8e\u8bfb\u5165\u7684\u95ee\u9898:\n\n\u4e0d\u52a0\u5feb\u8bfb\u4f1a\u7206\u6389\u540e\u56db\u4e2a\u70b9\u6216\u8005\u540e\u4e09\u4e2a\u70b9 [\u7206TLE](https://www.luogu.com.cn/record/29935063)\n\n\u54b3\u54b3\uff0c\u81f3\u4e8e\u5177\u4f53\u591a\u5c11\uff0c\u53d6\u51b3\u4e8e\u63d0\u4ea4\u4ee3\u7801\u65f6\u7684\u6b27\u6c14\u503c\n\n___\n\n### \u6700\u540e\u9644\u4e0a\u4ee3\u7801:\n\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nstruct num{\n\tint id;\n\tint z;\n}s[50024];\nint read(){\n    int w=1,q=0;\n\tchar ch=' ';\n    while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n    if(ch=='-')w=-1,ch=getchar();\n    while(ch>='0'&&ch<='9')q=q*10+ch-'0',ch=getchar();\n    return w*q;\n}\nbool cmz(struct num a,struct num b){\n\tif(a.z>b.z)\n\t\treturn true;\n\tif(a.z==b.z)\n\t\tif(a.id<b.id)\n\t\t\treturn true;\n\treturn false;\n}\nbool cmid(struct num a,struct num b){\n\tif(a.id<b.id)\n\t\treturn true;\n\treturn false;\n}\nsigned main(void){\n\tint t,n,pd;\n\tt = read();\n\twhile(t--){\n\t\tscanf(\"%lld\",&n);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\ts[i].id = i;\n\t\t\ts[i].z = read();\n\t\t}\n\t\tsort(s+1,s+n+1,cmz);\n\t\tfor(int i=1;i<=n;i+=pd){\n\t\t\tpd = 1;\n\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\tif(s[i].z==s[j].z)s[j].z = -2147483659,pd++;\n\t\t\t\telse break;\n\t\t\t}\n\t\t}\n\t\tsort(s+1,s+n+1,cmid);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(s[i].z!=-2147483659)printf(\"%lld \",s[i].z);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n~~(\u518d\u6b21\u8bf7\u6c42\u52a0\u5f3a\u6570\u636e)(\u6ed1\u7a3d~~\n\n\u8fd9\u53ea\u662f\u4e3a\u4e86\u5927\u5bb6\u8003\u573a\u4e0a\u53ef\u4ee5\u591a\u4e00\u4e2a\u9009\u62e9\uff0c~~\u8bf4\u4e0d\u5b9a\u66b4\u529b\u8e29\u6807\u7b97\u5462~~\n\n\u6700\u597d\u8fd8\u662f\u8981\u638c\u63e1\u8fd9\u9898\u7684HASH\u5199\u6cd5\u5440\uff0c(\u2449\u2022 \u2022\u2449)\u2025\u2661\n\n\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u7eff\u9898\u9898\u89e3\uff0c\u5982\u6709\u9519\u8bef\uff0c\u8bf7\u6307\u51fa\uff0c\u6211\u4e00\u5b9a\u4f1a\u6539\u6b63\u7684\uff0c\uff08\u25cf\uff3eo\uff3e\u25cf\uff09\n\n- \u4e0d\u5438\u6c27\u6d4b\u8bd5\u4fe1\u606f [\u70b9\u6211](https://www.luogu.com.cn/record/29935122)\n\n- \u5438\u6c27\u6d4b\u8bd5\u4fe1\u606f [\u70b9\u6211](https://www.luogu.com.cn/record/29938067)\n\n$\\color{pink}\\text{\u6700\u540e\u4e00\u6b21\u7f16\u8f91\u65f6\u95f4 : 2020.02.01 11:08}$\n\n(\u663e\u793a\u540e\u6392\u7248\u6709\u4e9b\u95ee\u9898\uff0c\u73b0\u5df2\u4fee\u6539\uff0c\u9ebb\u70e6\u5ba1\u6838\u5927\u5927\u5566)",
        "postTime": 1580525442,
        "uid": 208090,
        "name": "Histone",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P4305 \u3010[JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57\u3011"
    },
    {
        "content": "\u6a21\u62df\u8d5b\u7684\u65f6\u5019\u8981\u7528\u5230\u54c8\u5e0c\uff0c\u4e8e\u662fyy\u4e86\u4e00\u53d1\u3002\n\n\u6211\u4eec\u5e73\u65f6\u4f7f\u7528\u7684\u54c8\u5e0c\u5927\u6982\u6709\u4e24\u79cd\uff1a\n\n- \u6bd4\u8f83\u4e00\u6b21\u5f00\u9500\u5f88\u5927\n\n\u4f8b\u5982\u6c42\u5b57\u7b26\u4e32\u5224\u91cd\u3001\u5224\u65ad\u4e24\u4e2a\u533a\u95f4\u6392\u5e8f\u540e\u662f\u5426\u5b8c\u5168\u76f8\u540c\u7b49\uff0c\u5982\u679c\u6211\u4eec\u8981\u4fdd\u8bc1\u6b63\u786e\uff0c\u663e\u7136\u5c31\u8981\u7528$O(n)$\u7684\u590d\u6742\u5ea6\u5224\u65ad\uff0c\u8fd9\u5728\u5f88\u591a\u65f6\u5019\u662f\u5403\u4e0d\u6d88\u7684\uff0c\u4e8e\u662f\u5c31\u4f7f\u7528\u54c8\u5e0c\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u503c\u6216\u4e0d\u540c\u7684\u4f4d\u7f6e\u8d4b\u4e00\u4e2a\u968f\u673a\u503c\uff0c\u6bcf\u6b21\u6bd4\u8f83\u5b57\u7b26\u4e32\u6216\u533a\u95f4\u7684\u603b\u6743\u503c\uff0c\u5982\u679c\u6743\u503c\u76f8\u7b49\u5c31\u5224\u5b9a\u76f8\u7b49\u3002\n\n\u663e\u7136\uff0c\u8fd9\u6837\u6709\u9519\u5224\u7684\u5371\u9669\uff0c\u6240\u4ee5\u6211\u4eec\u5f88\u591a\u4eba\u4f7f\u7528\u591a\u4e2a\u6a21\u6570\u6765\u5c3d\u91cf\u907f\u514d\u51b2\u7a81\u3002\n\n- \u6bd4\u8f83\u4e00\u6b21\u5f00\u9500\u4e0d\u5927\uff0c\u4f46\u662f\u7a7a\u95f4\u5f00\u4e0d\u4e0b\n\n\u672c\u9898\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u53d6\u4e00\u4e2a\u6a21\u6570$P$,\u5bf9\u4e8e\u8f93\u5165\u7684\u6570$a$,\u5b58\u5165$a \\pmod P$\u7684\u96c6\u5408\u4e2d\uff0c\u6bcf\u6b21\u5224\u65ad\u65f6\uff0c\u628a\u8fd9\u4e2a\u96c6\u5408\u91cc\u7684\u6570\u5168\u90e8\u53d6\u51fa\u6765\u4e00\u4e00\u5224\u65ad\u5373\u53ef\uff0c\u800c\u8fd9\u4e2a\u96c6\u5408\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u9009\u62e9```vector```\u6216\u90bb\u63a5\u8868\uff0c\u8fd9\u6837\u5728\u5e73\u5747\u610f\u4e49\u4e0b\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(\\frac{n^2}{P}+n)$\u4e86\uff0c\u663e\u7136\u80fd\u6b63\u786e\u5730\u5224\u91cd\u3002\n\n\u90a3\u4e48\uff0c\u662f\u4e0d\u662fP\u8d8a\u5927\u8d8a\u597d\u5462\uff1f\u6211\u5f00\u59cb\u4e5f\u662f\u8fd9\u4e48\u8ba4\u4e3a\u7684\uff0c\u4f46\u662f\u53d1\u73b0\u5185\u5b58\u8c03\u7528\u7684\u5f00\u9500\u53cd\u800c\u5360\u4e86\u76f8\u5f53\u5927\u7684\u6bd4\u4f8b\u3002\u6240\u4ee5\u6211\u4eec\u7684P\u4e0d\u8bb8\u8981\u5f00\u592a\u5927\uff0c\u5c24\u5176\u662f\u7528```vector```\u5b9e\u73b0\u65f6\uff0c\u5b83\u7684\u7a7a\u95f4\u8c03\u7528\u5947\u6162\u65e0\u6bd4\uff0c\u4f46\u662f\u8bbf\u95ee\u8fde\u7eed\u7684\u5143\u7d20\u65f6\u53c8\u975e\u5e38\u5feb\uff0c\u6240\u4ee5\u6211\u4eec\u7684P\u8981\u5f00\u5c0f\u4e00\u70b9\uff0c\u6211\u5b9e\u9a8c\u51fa\u7684\u6700\u597d\u7684$P$\u5728$10^4$\u5de6\u53f3\uff0c\u800c\u90bb\u63a5\u8868\u7684\u4f18\u52a3\u52bf\u548c\u548c```vector```\u6b63\u597d\u76f8\u53cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u5927\u4e00\u70b9\uff0c\u4f46\u4e5f\u4ec5\u4ec5\u662f$3\\times 10^4$\u5de6\u53f3\uff0c\u6211\u4eec\u5e73\u65f6\u4f7f\u7528\u5927\u53ef\u5c06P\u8bbe\u4e3a$\\frac{n}{2}$\u5de6\u53f3\u7684\u53d6\u503c\u3002\n\n\u4e0d\u8fc7\u7ec6\u5fc3\u7684\u670b\u53cb\u53ef\u80fd\u53d1\u73b0\uff0c\u5f53\u8f93\u5165\u6570\u636e\u90fd\u662f$kP+b$\u65f6\uff0c\u4e8b\u60c5\u53d8\u5f97\u6709\u70b9\u5fae\u5999\uff0c\u597d\u50cf\u53ef\u4ee5\u5361\u98de\u3002\u5982\u679c\u5bf9\u7740\u6a21\u6570\u5361\u2026\u2026\n\n\u8fd9\u4e5f\u6bd4\u8f83\u597d\u529e\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u7ea6\u4e3a$[2P,10P]$\u7684\u6a21\u6570\uff0c\u5c06a\u5148\u5bf9\u8fd9\u4e2a\u6570\u53d6\u6a21\uff0c\u8fd9\u6837\u7684\u6a21\u6570\u5c31\u6bd4\u8f83\u968f\u673a\u4e86\uff0c\u518d\u5c06\u5b83\u5bf9$P$\u53d6\u6a21\u3002\uff08\u6ce8\u610f\u8fd9\u4e2a\u5927\u6a21\u6570\u4e0d\u80fd\u592a\u5927\uff0c\u4e0d\u7136\u5728\u5927\u6a21\u6570\u4ee5\u5185\u5c31\u88ab\u5361\u7206\u4e86\uff09\n\n\u8981\u662f\u4e24\u4e2a\u6a21\u6570\u90fd\u6070\u597d\u88ab\u9488\u5bf9\u2026\u2026\u5efa\u8bae\u60a8\u8f6c\u884c\u535a\u5f69\u884c\u4e1a\u54e6\uff01\n\n\ncode(```vector```):\n```cpp#include<bits/stdc++.h>\nusing namespace std;\n#define MN 200005\n#define LL long long\ninline LL read(){\n\t   LL a=0,fh=1;char c=getchar();\n\t   while(c>'9'||c<'0'){if(c=='-')fh=-1;c=getchar();}\n\t   while('0'<=c&&c<='9'){\n\t\t   a=a*10ll+c-48ll;\n\t\t   c=getchar();\n\t   }\n\t   return a*fh;\n}\nconst int MD=(1<<17)-1,Mod=20007;\nstruct Hash{\n\tvector<LL>num[Mod],loc;\n\tbool vis[Mod];\n\tbool insert(LL a){\n\t\tint v=(a&MD)%Mod;\n\t\tfor(int i=0;i<num[v].size();++i)\n\t\t\tif(num[v][i]==a)return 0;\n\t\tnum[v].push_back(a);\n\t\tif(!vis[v])vis[v]=1,loc.push_back(v);\n\t\treturn 1;\n\t}\n\tvoid clear(){\n\t\tfor(int i=0;i<loc.size();++i){\n\t\t\tnum[loc[i]].clear();\n\t\t\tvis[loc[i]]=0;\n\t\t}\n\t\tloc.clear();\n\t}\n}Map[2];\nint main(){\n\tint T=read();\n\twhile(T--){\n        Map[0].clear();\n\t\tMap[1].clear();\n\t\tint q=read();\n\t\twhile(q--){\n\t\t\tLL a=read(),op=0;\n            if(a<0)a=-a,op=1;\n\t\t\tif(Map[op].insert(a)) {if(op)putchar('-');printf(\"%lld \",a);}\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\ncode(\u90bb\u63a5\u8868\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline LL read(){\n\t   LL a=0,fh=1;char c=getchar();\n\t   while(c>'9'||c<'0'){if(c=='-')fh=-1;c=getchar();}\n\t   while('0'<=c&&c<='9'){\n\t\t   a=a*10ll+c-48ll;\n\t\t   c=getchar();\n\t   }\n\t   return a*fh;\n}\nconst int MD=(1<<18)-1,Mod=30007,Maxn=50005;\nstruct Hash{\n\tint head[Mod],nex[Maxn];\n\tLL val[Maxn];\n\tint cnt;\n\tvector<int>loc;\n\tbool vis[Mod];\n\tvoid ADD(int x,LL y){\n\t\tcnt++;\n\t\tnex[cnt]=head[x];\n\t\tval[cnt]=y;\n\t\thead[x]=cnt;\n\t}\n\tbool insert(LL a){\n\t\tint v=(a&MD)%Mod;\n\t\tfor(int i=head[v];i;i=nex[i])\n\t\t\tif(val[i]==a)return 0;\n\t\tADD(v,a);\n\t\tif(!vis[v])loc.push_back(v),vis[v]=1;\n\t\treturn 1;\n\t}\n\tvoid clear(){\n\t\tcnt=0;\n\t\tfor(int i=0;i<loc.size();++i)vis[loc[i]]=0,head[loc[i]]=0;\n\t\tloc.clear();\n\t}\n}Map[2];\nint main(){\n\tint T=read();\n\twhile(T--){\n        Map[0].clear();\n\t\tMap[1].clear();\n\t\tint q=read();\n\t\twhile(q--){\n\t\t\tLL a=read(),op=0;\n            if(a<0)a=-a,op=1;\n\t\t\tif(Map[op].insert(a)) {if(op)putchar('-');printf(\"%lld \",a);}\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582527105,
        "uid": 7480,
        "name": "skydogli",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4305 \u3010[JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57\u3011"
    },
    {
        "content": "\u4eca\u5929\u51cc\u6668\u770b\u5230\u4e86\u8fd9\u9053\u9898\u76ee\uff0c\u53d1\u73b0\u539f\u6765\u7684\u54c8\u5e0c\u8868\u505a\u6cd5\u88ab xht \u5de8\u4f6c hack \u5566\uff0c\u53ea\u5f97\u4e86 60 \u5206\uff0cRE \u4e86 4 \u4e2a\u70b9\uff01\n\n\u5f88\u7591\u60d1\uff0c\u4e8e\u662f\u53c8\u5199\u4e86\u4e00\u904d\uff0c\u53d1\u73b0\u8fd8\u662f\u548c\u539f\u6765\u4e00\u6837\u7684\u7ed3\u679c\u3002\u5bf9\u7740\u4ee3\u7801\u770b\u4e86\u826f\u4e45\uff0c\u53d1\u73b0\u7ed9\u51fa\u7684\u6570\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff0c\u7136\u540e\u5c31\u4f1a\u51fa\u73b0\u8d1f\u6570\u4e0b\u6807...\n\n\u4e8e\u662f\u5c31\u5199\u4e86\u4e00\u4e2a\u8d1f\u6570\u53d6\u6a21\uff08\u7136\u800c\u6211\u83dc\u5f97\u5f88\uff0c\u5199\u70b8\u4e86 2 \u6b21\uff09\u3002\u8fd9\u624d AC \u6b64\u9898\u3002\n\n\n------------\n\u8fd9\u9053\u9898\u5b9e\u9645\u4e0a\u662f\u54c8\u5e0c\u8868\u7684\u6a21\u677f\u9898\u3002\u6bcf\u8bfb\u5165\u4e00\u4e2a\u6570\uff0c\u5c31\u5224\u65ad\u5728\u54c8\u5e0c\u8868\u4e2d\u662f\u5426\u91cd\u590d\u4e86\u3002\u5982\u679c\u51fa\u73b0\u4e86\u91cd\u590d\uff0c\u5c31\u76f4\u63a5\u9000\u51fa\uff0c\u7ee7\u7eed\u8bfb\u5165\u4e0b\u4e00\u4e2a\u6570\u3002\u5426\u5219\uff0c\u5c31\u5c06\u8fd9\u4e2a\u6570\u63d2\u5165\u54c8\u5e0c\u8868\u4e2d\uff0c\u5e76\u8f93\u51fa\u8be5\u6570\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u54c8\u5e0c\u51fd\u6570\u5982\u679c\u76f4\u63a5\u5199\u6210 $\\operatorname{H}(x)=x\\bmod  P$ \u7684\u8bdd\u4f1a\u51fa\u73b0\u4e0a\u6587\u4e2d\u8bf4\u7684\u8d1f\u6570\u4e0b\u6807\uff0c\u6240\u4ee5\u6b63\u786e\u7684\u5199\u6cd5\u662f $\\operatorname{H}(x)=(x\\bmod P+P)\\bmod P$\u3002\n\nCode\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int P=50021;\n#define int long long\nstruct node {int v,nxt;}rec[10+P];\nint hd[10+P],n;\nnamespace HASH {\nint tot;\nint H(int x) {return (x%P+P)%P;}\nbool add(int x, int v) {\n\tfor (int i=hd[x];i;i=rec[i].nxt) if (rec[i].v==v) return false;\n\trec[++tot].v=v;\n\trec[tot].nxt=hd[x];\n\thd[x]=tot;\n\treturn true;\n}\n}\nusing HASH::tot;\nusing HASH::H;\nusing HASH::add;\nvoid rd(int&),wt(int);\n#undef int\nint main() {\n#define int long long\n\tint T;rd(T);\n\twhile(T--) {\n\t\ttot=0;memset(rec,0,sizeof rec);memset(hd,0,sizeof hd);rd(n);\n\t\twhile (n--) {\n\t\t\tint x;rd(x);\n\t\t\tif (add(H(x),x)) wt(x),putchar(' ');\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\nvoid rd(int& x) {\n\tx=0;int f=1;char ch=getchar();\n\twhile (!isdigit(ch)) (ch=='-')&&(f=-1),ch=getchar();\n\twhile (isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\tx*=f;\n}\nvoid wt(int x) {\n\t(x<0)&&(x=-x,putchar('-'));\n\tif (x>9) wt(x/10);putchar(x%10^48);\n}\n```\n",
        "postTime": 1584326322,
        "uid": 46747,
        "name": "Aehnuwx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4305 \u3010[JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57\u3011"
    },
    {
        "content": "\u4e00\u773c\u770b\u53bb\u663e\u7136\u662f\u7528\u6876\u7684\u601d\u8def\u6765\u505a.\u53ea\u4e0d\u8fc7\u6570\u7684\u8303\u56f4\u662f32\u4f4d\u6574\u6570,\u6ca1\u6cd5\u76f4\u63a5\u5f00\u6876.\u663e\u7136\u7684\u601d\u8def\u662f\u79bb\u7ebf\u7136\u540e\u79bb\u6563\u5316\u518d\u5f00\u6876.  \n\u6211\u4e0d\u559c\u6b22\u79bb\u7ebf\u505a\u6cd5,\u5c31\u968f\u624b\u5199\u4e86FHQ_Treap\u6253\u7b97\u6c34\u8fc7\u53bb\n![](https://cdn.luogu.com.cn/upload/image_hosting/wtpgitxw.png)\n\u64e6,\u662f\u6211FHQ\u5e38\u6570\u592a\u5927\u4e86\u561b...\u518d\u770b\u4e0b\u6570\u636e\u8303\u56f4,\u5594,\u597d\u50cf$O(nlogn)$\u662f$5\\times 10^7$\u8fd9\u4e2a\u597d\u50cf\u662f\u8dd1\u4e0d\u592a\u8fc7.\n\n\u597d\u5427,\u90a3\u6211\u8ba4\u771f\u70b9...  \n\u5c31\u662fhash\u7ef4\u62a4\u5f00\u6563\u5217.hash\u503c\u76f4\u63a5\u5c31\u7528\u5bf9size\u53d6\u6a21\u7684\u7ed3\u679c,\u76f8\u540c\u7684\u7528\u94fe\u8868\u4e32\u5728\u4e00\u8d77\u7136\u540e\u67e5\u5c31\u597d\u4e86.\u671f\u671b\u4e0b\u5206\u5e03\u5747\u5300,\u5355\u6b21\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6$O(1)$,\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\n\n\u6ce8:\u6b64\u9898\u6709\u8d1f\u6570,cpp\u7684\u53d6\u6a21\u65e0\u6cd5\u628a\u8d1f\u6570\u8f6c\u6210\u6b63\u6570,\u8981`(x%size+size)%size`\u8fd9\u6837\u5199  \n\u7136\u540e\u6700\u957f\u70b9402msAC..\u771f\u5c31\u81ea\u5e26\u5927\u5e38\u6570\u5457.\n```cpp\n/**********/\u7701\u7565\u5feb\u8bfb\n#define MAXN 200011//\u5373size,\u5f00\u6563\u5217\u5927\u5c0f,\u540c\u65f6\u4e5f\u662f\u6a21\u6570\nstruct hash_table\n{\n    ll last[MAXN],nxt[MAXN],cnt;//\u94fe\u8868\n    ll val[MAXN];\n    void build()//\u6e05\u7a7a\n    {\n        cnt=0;\n        memset(last,0, sizeof(last));\n    }\n    ll hash(ll x)//hash\u503c\n    {\n        return (x%MAXN+MAXN)%MAXN;\n    }\n    bool insert(ll x)//\u63d2\u5165x,\u5982\u679c\u5df2\u7ecf\u6709x\u8fd4\u56de0,\u5426\u5219\u8fd4\u56de1\n    {\n        ll f=hash(x),cur=last[f];\n        while (cur&&val[cur]!=x)\n        {\n            cur=nxt[cur];\n        }\n        if (cur)return 0;\n        ++cnt;\n        val[cnt]=x,nxt[cnt]=last[f],last[f]=cnt;\n        return 1;\n    }\n}t;\nint main()\n{\n    ll task=read();\n    while (task--)\n    {\n        t.build();\n        ll n=read();\n        for (int i = 1; i <= n ; ++i)\n        {\n            ll x=read();\n            if (t.insert(x))printf(\"%lld \",x);\n        }\n        putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1580096645,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4305 \u3010[JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57\u3011"
    },
    {
        "content": "\u5148\u770b\u770b\u5b9a\u4e49\n\n[\u53bb\u91cd](https://blog.csdn.net/qq_41139830/article/details/80631988)\n\n\u601d\u8def\uff1a\n\u8fd9\u9898\u7684\u76ee\u6807\u5c31\u662f\u53bb\u91cd\n\n\u5148\u628a\u6574\u4e2a\u5e8f\u5217\u6309\u503c\u6392\u5e8f\u4e00\u904d\uff0c\u5728\u6309\u503c\u53bb\u91cd\uff0c\u518d\u6309\u539f\u6765\u7684\u987a\u5e8f\u6392\u56de\u53bb\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355\n\n\u6ce8\u610f\u4f7f\u7528sort\n\n\u65f6\u53ef\u80fd\u4f1a\u6253\u4e71\u524d\u540e\u987a\u5e8f\uff0c\u6240\u4ee5\u4e5f\u8981\u5728\u6392\u5e8f\u65f6\u52a0\u5165\u53e6\u5916\u52a0\u5165\u4e0e\u4f4d\u7f6e\u6709\u5173\u7684\u6761\u4ef6\n\n\u590d\u6742\u5ea6O(nlogn)\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define re register\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x) {\n\tx=0;\n\tchar s=(char)getchar();\n\tbool flag=false;\n\twhile(s<'0'||s>'9') {\n\t\tif(s=='-')\n\t\t\tflag=true;\n\t\ts=(char)getchar();\n\t}\n\twhile(s>='0'&&s<='9') {\n\t\tx=(x<<1)+(x<<3)+(s^'0');\n\t\ts=(char)getchar();\n\t}\n\tif(flag)\n\t\tx=~x+1;\n\treturn;\n}\nconst int N=5e4+5;\nint n;\nstruct node {\n\tint val,id;\n\tinline bool operator <(const node &rhs)const {\n\t\treturn val<rhs.val||val==rhs.val&&id<rhs.id;\n\t}\n\tinline bool operator ==(const node &rhs)const {\n\t\treturn val==rhs.val;\n\t}\n} a[N];\ninline bool cmp(const node &x,const node &y) {\n\treturn x.id<y.id;\n}\nint main() {\n\tint T;\n\tread(T);\n\twhile(T--) {\n\t\tread(n);\n\t\tfor(re int i=1; i<=n; ++i) {\n\t\t\tread(a[i].val);\n\t\t\ta[i].id=i;\n\t\t}\n\t\tsort(a+1,a+1+n);\n\t\tn=unique(a+1,a+1+n)-1-a;\n//      printf(\"%d\\n\",n);\n\t\tsort(a+1,a+1+n,cmp);\n\t\tfor(re int i=1; i<=n; ++i)\n\t\t\tprintf(\"%d \",a[i].val);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1584258907,
        "uid": 195616,
        "name": "\u9ad8\u5929",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4305 \u3010[JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57\u3011"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u6548\u679c\u8bf7\u6765\u6211\u7684[\u535a\u5ba2]()\n\n\u770b\u6765\u5927\u90e8\u5206\u4eba\u90fd\u662f\u7528```unordered_map```\u6c34\u8fc7\u53bb\u7684...\n\n\u54b3\u54b3\uff0c\u8fd9\u9898\u6b63\u89e3\u5176\u5b9e\u662f\u54c8\u5e0c\uff0c\u7531\u4e8e\u5584\u826f\u7684xht\u52a0\u5f3a\u7684\u6570\u636e\uff0c\u6240\u4ee5\u666e\u901a\u54c8\u5e0c\u662f\u8fc7\u4e0d\u4e86\u7684\uff01\n\n\u6240\u4ee5\u6211\u4eec\u4f3c\u4e4e\u9664\u4e86```unordered_map```\u53ea\u80fd\u7528\u62c9\u94fe\u54c8\u5e0c\u4e86QwQ\uff08\u8fd8\u6709\u4ec0\u4e48\u65b9\u6cd5\u6211\u5b9e\u5728\u662f\u60f3\u4e0d\u5230\u4e86\uff09\n\n- \u9996\u5148\u662f\u5b9a\u4e49\u4e00\u4e2a\u6a21\u6570\uff1a\n\n```#define mod 100007```\n\n- \u8fd8\u6709\u5b9a\u4e49longlong\uff08\u5176\u5b9e\u4e0d\u7528\u52a0longlong\u7684QwQ\uff09\uff1a\n\n```#define ll long long```\n\n- \u63a5\u7740\u662f\u6211\u4eec\u7684\u54c8\u5e0c\u5411\u91cf\uff1a\n\n```vector<int> Hash[100007];```\n\n- \u7136\u540e\u5c31\u662f\u666e\u666e\u901a\u901a\u7684\u5b9a\u4e49\u53d8\u91cf\uff1a\n\n```\nint maxx, t, n, num;//t\u8868\u793a\u7ec4\u6570\uff0cn\u8868\u793a\u4e2a\u6570\uff0cnum\u8868\u793a\u7b54\u6848\uff0cmaxx\u8868\u793a\u6700\u5927\u503c\n```\n\n- \u52a0\u4e0a\u5feb\u8bfb\uff08\u6ca1\u5565\u597d\u8bf4\u5427\uff09\uff1a\n\n```\ninline int read() {\n    int w = 1, q = 0;\n    char ch = ' ';\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') w = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') q = q * 10 + ch - '0', ch = getchar();\n    return w * q;\n}\n```\n\n- \u91cd\u65b0\u5b9a\u4e49\u4e00\u4e0bmax\u51fd\u6570\uff1a\n\n```\nll max(ll x, ll y) {\n    return (x > y) ? x : y;\n}\n```\n\n- \u63a5\u7740\u662fcheck\u51fd\u6570\uff1a\n\n```\nbool check(int val) {//\u4f20\u8fdbval\u53c2\u6570\n    ll pos = (val % mod + mod) % mod;//\u521d\u59cb\u5316pos\n    maxx = max(maxx, pos);//\u66f4\u65b0\u6700\u5927\u503c\n    for (int k = 0; k < Hash[pos].size(); k++) {//\u904d\u5386\u5411\u91cf\n        if (Hash[pos][k] == val) {//\u5982\u679c\u6709\u67d0\u4e00\u4e2a\u503c\u7b49\u4e8e\u53c2\u6570\n            return true;//\u8fd4\u56de\u6210\u529f\n        }\n    }\n    Hash[pos].push_back(val);//\u5982\u679c\u627e\u4e0d\u5230\u90a3\u5c31push_back\u4e00\u4e0b\n    return false;//\u8fd4\u56de\u5931\u8d25\n}\n```\n\n- \u63a5\u7740\u5c31\u662fmian\u51fd\u6570\u91cc\u9762\u7684\u90e8\u5206\u4e86\uff1a\n\n```\nt = read();//\u8f93\u5165t\nwhile (t--) {//t--\u8868\u793a\u8f93\u5165\u7ec4\u6570\n    n = read();//\u8f93\u5165n\n    for (int i = 0; i <= maxx; i++) Hash[i].clear();//\u521d\u59cb\u5316Hask\u5411\u91cf\n    maxx = 0;//\u521d\u59cb\u5316\u6700\u5927\u503c\n    for (int i = 1; i <= n; i++) {//\u679a\u4e3e\n        num = read();//\u8f93\u5165num\n        if(!check(num)) cout << num << \" \";//\u5982\u679c\u627e\u4e0d\u5230num\u5219\u8f93\u51fa\n    }\n    cout << \"\\n\";//\u6362\u884c\n}\n```\n\n- \u6240\u4ee5\u6574\u4e2a\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\uff1a\n\n```\n#include <iostream>\n#include <vector>\n#include <cstdio>\n#define mod 100007\nusing namespace std;\n\nvector<int> Hash[100007];\nint maxx, t, n, num;\n\ninline int read() {\n    int w = 1, q = 0;\n    char ch = ' ';\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') w = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') q = q * 10 + ch - '0', ch = getchar();\n    return w * q;\n}\n\nint max(int x, int y) {\n    return (x > y) ? x : y;\n}\n\nbool check(int val) {\n    int pos = (val % mod + mod) % mod;\n    maxx = max(maxx, pos);\n    for (int k = 0; k < Hash[pos].size(); k++) {\n        if (Hash[pos][k] == val) {\n            return true;\n        }\n    }\n    Hash[pos].push_back(val);\n    return false;\n}\n\nint main() {\n    t = read();\n    while (t--) {\n        n = read();\n        for (int i = 0; i <= maxx; i++) Hash[i].clear();\n        maxx = 0;\n        for (int i = 1; i <= n; i++) {\n            num = read();\n            if(!check(num)) cout << num << \" \";\n        }\n        cout << \"\\n\";\n    }\n    return 0;\n}\n```",
        "postTime": 1583110280,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "P4305 [JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57"
    },
    {
        "content": "\u867d\u8bf4\u662f\u4e2a\u9898\u89e3\uff0c\u4f46\u4e0d\u662f\u4ec0\u4e48\u6b63\u513f\u516b\u7ecf\u7684\u9898\u89e3\u3002\n\n## \u51c6\u5907\n\u8003\u8651**\u5e73\u677f\u7535\u89c6**$pbds$\uff0c\u6bd5\u7adf\u6570\u636e\u52a0\u5f3a\u4e86\u3002\n\npbds\u7684hash_table\u7528\u6cd5\u548cmap\u51e0\u4e4e\u662f\u4e00\u6837\u7684\uff0c\u503c\u5f97\u63d0\u4e00\u70b9\u7684\u662f\uff1a\n\t\n> gp_hash_table \u4e5f\u5c31\u662f\u63a2\u6d4b\u6cd5\uff0c\u96be\u5220\u9664\u5143\u7d20\u3001\u5143\u7d20\u8fc7\u591a\u5bb9\u6613\u5d29\u3001\u7a7a\u95f4\u9884\u5148\u51c6\u5907\u3001\u901f\u5ea6\u5feb\n\n> cc_hash_table \u5c31\u662f\u62c9\u94fe\u6cd5\uff0c\u6613\u5220\u9664\u5143\u7d20\u3001\u5e73\u5747\u67e5\u627e\u957f\u5ea6\u77ed\u3001\u7a7a\u95f4\u52a8\u6001\u7533\u8bf7\u3001\u901f\u5ea6\u6162\n\n\u5176\u5b9e\u5982\u679c\u4e0d\u662f\u5f88\u7279\u6b8a\u7684\u60c5\u51b5(\u6bd4\u5982\u6c34\u9898(\u6bd4\u5982\u6c34\u672c\u9898www))\u7684\u8bdd\uff0c\u6ca1\u5565\u533a\u522b\uff0c\u7528\u6cd5\u90fd\u4e00\u6837\uff0c\u9009\u4e00\u4e2a\u81ea\u5df1\u559c\u6b22\u7684\u5c31\u597dqwq\n\n## \u601d\u8def\n\u8003\u8651\u672c\u9898\uff0c\u5efa\u4e00\u4e2a\u4ecelong long\u5230boolean\u7684gp_hash_table(\u56e0\u4e3a\u9898\u610f\u4e0d\u5220\u9664\u5143\u7d20)\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u7ec4\u7684\u6bcf\u4e2a\u6570\u503c\uff0c\u7528hash_table\u6765\u770b\u5bf9\u5e94\u7684\u6620\u5c04\u662f\u5426\u4e3atrue\u3002\u4e3atrue\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u8fc7\uff1b\u4e3afalse\uff0c\u90a3\u4e48\u6807\u8bb0\u5176\u6620\u5c04\u4e3atrue\uff0c\u7136\u540e\u76f4\u63a5\u8f93\u51fa\u3002\u8fd9\u6837\u505a\u4e0d\u4f1a\u5f71\u54cd\u8f93\u5165\u7684\u987a\u5e8f\uff0c\u800c\u4e14\u8282\u7701\u4e86\u7a7a\u95f4\u3002\n\n\u8fd8\u6709\u4e00\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u9996\u5148\u628ahash_table\u6e05\u7a7a\uff0c\u548cmap\u7528\u6cd5\u4e00\u6837\uff0c$clear()$\u5c31\u597d\u3002\n\n## \u4ee3\u7801\n\u4e3a\u4e86\u4e0d\u5360\u7528\u592a\u591a\u4f4d\u7f6e\uff0c\u6211\u5c31\u628a\u5feb\u8bfb\u7ed9\u7701\u53bb\u4e86qwq\u3002\u62c5\u5fc3\u4ece\u6765\u90fd\u6253\u6b63\u89e3\u7684\u795e\u7287\u4eec\u4e0d\u77e5\u9053\u6302\u4ec0\u4e48\u5934\uff0c\u6240\u4ee5\u628a\u5934\u6302\u4e0a\u3002(~~\u6253\u6b63\u89e3\u7684\u795e\u7287\u600e\u4e48\u4f1a\u770b\u8fd9\u7bc7\u6587\u7ae0~~)\n\n\u6ce8\u91ca\u5728\u4ee3\u7801\u4e2d\n\n```cpp\n#include <ext/pb_ds/assoc_container.hpp>//pbds\u5bb9\u5668\n#include <ext/pb_ds/hash_policy.hpp>//\u8fd9\u4e2a\u624d\u662fhash_table\u672c\u4f53\nusing namespace __gnu_pbds;\n\nint T, n;//\u6570\u636e\u603b\u6570\u3001\u6bcf\u7ec4\u6570\u5b57\u4e2a\u6570\nlong long now;//\u5f53\u524d\u8f93\u5165\u7684\u6570\u503c\ngp_hash_table<long long, bool> corder;//\u76f4\u63a5\u4ece\u6570\u503c\u6620\u5c04\u5230\u5e03\u5c14\u503c\uff0c\u907f\u514dfind\u64cd\u4f5c\u70b8\u6389\n\nint main(){\n\tquick_read(T);\n\twhile (T --){\n\t\tcorder.clear();//\u9488\u5bf9\u6bcf\u4e00\u7ec4\u800c\u8a00\uff0ccorder\u8981\u6e05\u7a7a\n\t\tquick_read(n);\n\t\twhile (n --){\n\t\t\tquick_read(now);\n\t\t\tif (corder[now])continue;//\u5b58\u5728\u8fd9\u4e2a\u503c\u5c31\u76f4\u63a5\u8df3\u8fc7\n\t\t\tprintf(\"%lld \", now);//\u53cd\u4e4b\u7acb\u5373\u8f93\u51fa\uff0c\u8fd9\u6837\u4e0d\u7528\u51c6\u5907\u6570\u7ec4\n\t\t\tcorder[now] = true;//\u6807\u8bb0\u5df2\u5b58\u5728\n\t\t}\n\t\tputchar(10);//\u6362\u884c\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1580633536,
        "uid": 125531,
        "name": "HansLimon",
        "ccfLevel": 0,
        "title": "TJ 2 P4305"
    },
    {
        "content": "\u4e0d\u5f97\u4e0d\u8bf4 xht37 \u7684\u6548\u7387\u5341\u5206\u4e4b\u9ad8\uff0c\u5f53\u521d\u4e5f\u662f\u7528 `map` \u6c34\u8fc7\u53bb\u7684\u3002\u73b0\u5728\u6765\u5199\u4e00\u4e0b\u6b63\u89e3\u3002\n\n\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u79bb\u6563\u5316\u7684\u601d\u60f3\uff0c\u5c06\u4e00\u4e2a\u6570\u7684\u4f4d\u7f6e\u548c\u503c\u4fdd\u5b58\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u5185\u3002\u6309\uff1a\n\n- \u5982\u679c\u503c\u4e0d\u540c\uff0c\u503c\u5c0f\u7684\u5728\u524d\u9762\uff1b\n\n- \u5426\u5219\uff0c\u4f4d\u7f6e\u5728\u524d\u7684\u5728\u524d\u9762\u3002\n\n\u6392\u5e8f\uff0c\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u5e8f\u5217\u3002\n\n\u8bb0\u5f55\u6392\u5e8f\u540e\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u6570\uff08\u56e0\u4e3a\u5b83\u4e00\u5b9a\u662f\u4f1a\u8f93\u51fa\u7684\uff09\uff0c\u4fdd\u5b58\u81ea `rear` \u6570\u7ec4\uff0c\u5e76\u50a8\u5b58\u4f4d\u7f6e\u662f\u5426\u6709\u6570\u3002\u4f9d\u6b21\u4fbf\u5229\uff0c\u9047\u5230\u4e0d\u540c\u7684\u6570\u5c31\u518d\u6b21\u4fdd\u5b58\u8fdb\u53bb\u3002\u6ce8\u610f\u4e0b\u6807\u662f\u4ec0\u4e48\u3002\u7136\u540e\u518d\u904d\u5386\u4e00\u8fb9\u6570\u7ec4\uff0c\u5982\u679c\u8fd9\u91cc\u6709\u6570\uff0c\u8f93\u51fa\uff0c\u5426\u5219\u4e0b\u4e00\u4e2a\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct number{\n\tint val,whe;\n\tbool operator < (number compare) const {\n\t\tif(val-compare.val)\treturn val<compare.val;\n\t\telse\treturn whe<compare.whe;\n\t}\n}a[50005];//\u4fdd\u5b58\u5e8f\u5217\nint rear[50005];//\u53bb\u91cd\u540e\u5e8f\u5217\u7684\u6837\u5b50\nbool isFull[50005];//\u662f\u5426\u6709\u6570\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T-->0)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tmemset(isFull,false,sizeof isFull);\n\t\tfor(int i=1;i<=n;++i)\tscanf(\"%d\",&a[i].val),a[i].whe=i;\n\t\tsort(a+1,a+1+n);\n\t\trear[a[1].whe]=a[1].val,isFull[a[1].whe]=true;\n\t\tfor(int i=2;i<=n;++i)\tif(a[i].val-a[i-1].val)\trear[a[i].whe]=a[i].val,isFull[a[i].whe]=true;\n\t\tfor(int i=1;i<=n;++i)\tif(isFull[i])\tprintf(\"%d \",rear[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1580089032,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4305 \u3010[JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57\u3011"
    },
    {
        "content": "`\u9898\u76ee\u63cf\u8ff0`\n\n\u7ed9\u5b9a$n$\u4e2a\u6570\uff0c\u8981\u6c42\u628a\u5176\u4e2d\u91cd\u590d\u7684\u53bb\u6389\uff0c\u53ea\u4fdd\u7559\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u6570\u3002\n\n\n\u79bb\u6563(\u6216\u53bb\u91cd)\u7ec3\u4e60\u9898,\u8fd9\u91cc\u5206\u6790\u4e00\u4e0b\u51e0\u79cd\u65b9\u6cd5\n\n> 1.STL\u6cd5\n\n\u4f17\u6240\u5468\u77e5,STL\u6709\u4e00\u4e2a\u5bb9\u5668\u53ebmap,\u4ed6\u6700\u5927\u7684\u529f\u80fd\u5c31\u662f\u53ef\u4ee5\u628a\u6570\u7ec4\u4e0b\u6807\u6269\u5c55\u5230\u4efb\u610f\u7c7b\u578b,\u800c\u4e14\u652f\u6301\u548c\u6570\u7ec4\u4e00\u6837\u4fbf\u6377\u7684\u8bbf\u95ee\u65b9\u6cd5.\n\n\u4f46\u662f\u5b9e\u73b0\u65b9\u5f0f\u662f\u5e73\u8861\u6811,\u8bbf\u95ee\u548c\u52a0\u5165\u90fd\u662flogn\u7684,\u5e73\u8861\u6811\u7684log\u5927\u7684\u60ca\u4eba,\u8fc7\u4e0d\u4e86\u8fd9\u9898\u52a0\u5f3a\u6570\u636e\n\n`unordered_map`\u672c\u8d28\u597d\u50cf\u662fhash\u8868,\u5185\u90e8\u5143\u7d20\u65e0\u5e8f,\u8bbf\u95ee\u662fO1,\u4e0d\u77e5\u9053\u80fd\u5426\u901a\u8fc7,\u6bd5\u7adfhash\u662f\u53ef\u4ee5\u51b2\u7a81\u7684,\u51b2\u7a81\u8d8a\u591a\u5e94\u8be5\u8d8a\u6162\n\n> 2.\u6807\u51c6\u6392\u5e8f\u53bb\u91cd\n\n~~\u597d\u50cf\u4e5f\u662fSTL~~\n\n\u56e0\u4e3alogn\u6709\u5927\u6709\u5c0f,\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u5c0f\u7684logn->sort!,sort\u7684log\u80af\u5b9a\u662f\u8981\u6bd4\u5e73\u8861\u6811\u7684\u5c0f\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\u6211\u4eec\u8981\u4fdd\u6301\u539f\u4e0b\u6807\u7684\u6709\u5e8f\u6027,\u6240\u4ee5\u518d\u65b0\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u8bfb\u5165\u503c,\u5c06\u65b0\u6570\u7ec4sort\u4e00\u4e0b,\u6211\u4eec\u518d\u7528STL\u4e2d\u7684unique\u5c06\u6392\u597d\u5e8f\u6570\u7ec4\u53bb\u91cd,\u6700\u540e\u62ff\u51fa\u539f\u6570\u7ec4\u5728\u65b0\u6570\u7ec4\u4e0alower_bound\u627e\u5230\u5bf9\u5e94\u4e0b\u6807\u5c31\u662f\u79bb\u6563\u540e\u7684\u503c\u4e86\n\n\u6709\u4e86\u79bb\u6563\u540e\u7684\u503c\u5c31\u53ef\u4ee5\u7528vis\u6570\u7ec4\u6765\u76f4\u63a5\u5224\u91cd\u4e86!~~\u8fd9\u4e2aO1\u662f\u4e25\u683c\u7684qwq~~\n\n\u4ee3\u7801\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\n\n\u590d\u6742\u5ea6$\\Theta ( \\text{Tn} \\log _ {2} \\text{n} ) $\n\nCode:\n\n```cpp\n\n//From: Dawn light\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n\nusing std::lower_bound;\nusing std::vector;\nusing std::unique;\nusing std::sort;\n\nconst int MAXN=5e4+7;\nint arr[MAXN];\nvector<int> v;\nint vis[MAXN],n,T;\n\nnamespace fastIO {\n#define BUF_SIZE 100000\n\tstatic char buf[BUF_SIZE],*p1=buf+BUF_SIZE,*pend=buf+BUF_SIZE;\n\tinline char nc() {\n\t\tif(p1==pend) {\n\t\t\tp1=buf;\n\t\t\tpend=buf+fread(buf,1,BUF_SIZE,stdin);\n\t\t}\n\t\treturn *p1++;\n\t}\n\tinline int read() {\n\t\tint x=0;\n\t\tint f=1;\n\t\tregister char s=nc();\n\t\tfor(; !isdigit(s); s=nc())if(s=='-')f=-1;\n\t\tfor(; isdigit(s); s=nc())x=(x<<1)+(x<<3)+s-'0';\n\t\treturn x*f;\n\t}\n}\nusing namespace fastIO;\n\ninline int getid(int x) {\n\treturn lower_bound(v.begin(),v.end(),x)-v.begin()+1;\n}\n\ninline void init() {\n\tsort(v.begin(),v.end());\n\tv.erase(unique(v.begin(),v.end()),v.end());\n\tregister int tmp;\n\tfor(register int i=1; i<=n; i++) {\n\t\ttmp=arr[i];\n\t\tarr[i]=getid(arr[i]);\n\t\tif(!vis[arr[i]])printf(\"%d \",tmp),vis[arr[i]]=1;\n\t}\n\treturn ;\n}\n\nint main() {\n\tT=read();\n\tfor(register int l=1; l<=T; l++) {\n\t\tv.clear();\n\t\tn=read();\n\t\tfor(register int i=1; i<=n; i++) {\n\t\t\tarr[i]=read();\n\t\t\tv.push_back(arr[i]);\n\t\t}\n\t\tinit();\n\t\tprintf(\"\\n\");\n\t\tmemset(vis,0,sizeof(vis));\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1580085018,
        "uid": 76990,
        "name": "loveJY",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4305 \u3010[JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684Hash\u3002\n\n\u8fd9\u9898\u5176\u5b9e\u96be\u6b7b\u4e86\u3002\n1.\u5f00\u4e00\u4e2aHash\u6570\u7ec4\u3002\n\n2.t\u7ec4\u6570\u636e\uff0c\u5904\u7406\u6bcf\u7ec4\u6570\u636e\u7684\u65f6\u5019\u5148\u6e05\u7a7aHash\u6570\u7ec4\u3002\n\n3.\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u4f9d\u6b21\u8bfb\u5165n\u4e2a\u6570\uff0c\u6bcf\u6b21\u5bf9\u4e00\u4e2a\u6570\u8fdb\u884c\u5904\u7406\uff1a\n\n**\u5982\u679c\u5b58\u5728\u4e8eHash\u4e2d\uff0c\u5219\u4e0d\u7528\u7ba1\uff0c\u4e0d\u5b58\u5728\u7684\u8bdd\u5c31\u5c06\u5176\u6dfb\u52a0\u8fdbHash\u6570\u7ec4\uff0c\u7136\u540e\u5c06\u5176\u8f93\u51fa\u5373\u53ef\u3002**\n\nend\u3002\n\n\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\uff0c\u4f46\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u9700\u8981\u6ce8\u610fHash\u6570\u7ec4\u7684\u521d\u59cb\u5316\uff01\n\n\u521d\u59cb\u5316\u65f6\u4e0d\u53ef\u7b80\u5355\u5730\u521d\u59cb\u5316\u4e3a-1\uff08\u56e0\u4e3a-1\u4e5f\u6709\u53ef\u80fd\u8fdb\u5165\u6570\u7ec4\uff09\uff0c\u56e0\u6b64\u5e94\u8be5\u521d\u59cb\u5316\u4e3a\u4e00\u4e2aINF\uff08\u6211\u968f\u4fbf\u8d4b\u7684\u503c\uff09\u3002\n\n\u5c31\u662f\u8fd9\u4e48\u4e2a\u9b3c\uff0c\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\uff0c\u4ee3\u7801\u6709\u6ce8\u91ca\u3002\n\n# code:\n\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define hmod 4698571    //\u5bf9\u4e8eHash\u6570\u7ec4\u7684mod\u503c\ninline ll read();\n\nll Hash[hmod+123456];   //Hash\u9700\u5f00\u5927\u4e00\u70b9\n\ninline bool find(ll x)\n{\n\tll wh=abs(x%hmod);   //\u5bf9\u4e8e\u8d1f\u6570\u53ea\u9700\u5904\u7406\u4e00\u4e2a\u5b9a\u503c\u5373\u53ef\uff0c\u8868\u793a\u4f4d\u7f6e\n\twhile (Hash[wh]!=1808504320951916825)//\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u6709\u6570\n\t{\n\t\tif (Hash[wh]==x) //\u67e5\u770b\u662f\u5426\u4e3a\u6b64\u6570\n\t\t\treturn true; //\u8fd4\u56detrue\n\t\telse\n\t\t\t++wh;      //\u5426\u5219\u67e5\u627e\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n\t}\n\tHash[wh]=x;       //\u6ca1\u627e\u5230\u5219\u653e\u5165Hash\u4e2d\n\treturn false;      //\u8fd4\u56defalse\n}\n\nll t,n;\n\nint main()\n{\n\tt=read();\n\twhile (t--)\n\t{\n\t\tmemset(Hash,25,sizeof(Hash));//\u6bcf\u6b21\u5c06Hash\u8d4b\u521d\u59cb\u503c\uff0c\u6b64\u65f6Hash\u4e2d\u7684\u503c\u6b63\u662f1808504320951916825\uff08\u968f\u4fbf\u4e71\u8d4b\u7684\u503c\uff09\n\t\tn=read();\n\t\tfor (register int i=1;i<=n;++i)\n\t\t{\n\t\t\tll k=read(); //\u6bcf\u6b21\u8bfb\u5165k\n\t\t\tif (!find(k))//\u5982\u679ck\u6ca1\u8fdb\u5165\u6570\u7ec4\n\t\t\t\tcout<<k<<\" \";//\u8f93\u51fa\uff08\"\u653e\u5165\"\u5df2\u7ecf\u5728\u51fd\u6570\u4e2d\u6267\u884c\u4e86\uff09\n\t\t}\n\t\tcout<<endl;     //\u56de\u884c\n\t}\n\treturn 0;\n}\n\ninline ll read()\t\t//\u5feb\u8bfb\uff08\u4e0d\u89e3\u91ca\u4e86\uff09\n{\n\tll x=0,f=0;\n\tchar c=getchar();\n\twhile (!isdigit(c))\n\t\tf|=c=='-',c=getchar();\n\twhile (isdigit(c))\n\t\tx=(x<<1)+(x<<3)+(c^48),c=getchar();\n\treturn f?-x:x;\n}\n```\n\n\u7070\u540d\u5c0f\u849f\u84bb\u6211\u5e0c\u671b\u5927\u5bb6\u770b\u4e86\u9898\u89e3\u4e4b\u540e\u80fd\u591f\u7406\u89e3\u6e05\u695a\uff0c\u8c22\u8c22\u3002",
        "postTime": 1580097774,
        "uid": 215590,
        "name": "Ckger",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4305 \u3010[JLOI2011]\u4e0d\u91cd\u590d\u6570\u5b57\u3011"
    }
]