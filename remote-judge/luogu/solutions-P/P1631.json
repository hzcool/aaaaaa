[
    {
        "content": "\u6700\u8fd1\u6709\u70b9\u5fd9 \u6ca1\u65f6\u95f4\u8d34\u4ee3\u7801\u4e86==\n\n\u3010\u5206\u6790\u3011\n\n\u9996\u5148\uff0c\u628aA\u548cB\u4e24\u4e2a\u5e8f\u5217\u5206\u522b\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53d8\u6210\u4e24\u4e2a\u6709\u5e8f\u961f\u5217\u3002\u8fd9\u6837\uff0c\u4eceA\u548cB\u4e2d\u5404\u4efb\u53d6\u4e00\u4e2a\u6570\u76f8\u52a0\u5f97\u5230N2\u4e2a\u548c\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e9b\u548c\u770b\u6210\u5f62\u6210\u4e86n\u4e2a\u6709\u5e8f\u8868/\u961f\u5217\uff1a\n\nA[1]+B[1] <= A[1]+B[2] <= \u2026 <= A[1]+B[N]\n\nA[2]+B[1] <= A[2]+B[2] <= \u2026 <= A[2]+B[N]\n\n\u2026\u2026\n\nA[N]+B[1] <= A[N]+B[2] <= \u2026 <= A[N]+B[N]\n\n\u63a5\u4e0b\u6765\uff0c\u5c31\u76f8\u5f53\u4e8e\u8981\u5c06\u8fd9N\u4e2a\u6709\u5e8f\u961f\u5217\u8fdb\u884c\u5408\u5e76\u6392\u5e8f\uff1a\n\n\u9996\u5148\uff0c\u5c06\u8fd9N\u4e2a\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u653e\u5165\u4e00\u4e2a\u5806\u4e2d\uff1b\n\n\u7136\u540e\uff1b\u6bcf\u6b21\u53d6\u51fa\u5806\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u82e5\u8fd9\u4e2a\u6700\u5c0f\u503c\u6765\u81ea\u4e8e\u7b2ck\u4e2a\u961f\u5217\uff0c\u90a3\u4e48\uff0c\u5c31\u5c06\u7b2ck\u4e2a\u961f\u5217\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u653e\u5165\u5806\u4e2d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(NlogN)\u3002\n\n\npriority\\_queue<int, vector<int>,greater<int> >  q;\n",
        "postTime": 1479041181,
        "uid": 23845,
        "name": "Red_w1nE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "~~**\u5404\u4f4d\uff0c\u6211\u53d1\u73b0\u6709\u4e00\u79cd\u65b0\u5947\u7684\u505a\u6cd5\u5c31\u80fd\u89e3\u51b3\u6b64\u9898~**~~\n#  39\u884c\u5b9e\u6d4bAC\u4ee3\u7801+\u601d\u8def\n## \u5148\u8bb2\u601d\u8def\u3002\n- \u5f88\u663e\u7136\u6211\u4eec\u6709 _a\u548cb\u4e24\u4e2a\u6570\u7ec4_ \u3002\n- \u5f88\u663e\u7136\u6211\u4eec\u8981\u7528\u4e00\u4e2a _c\u6570\u7ec4\u5b58\u548c_ \u3002\n- \u5f88\u663e\u7136\u8981\u7528heap\u5806\u6392(**\u5b9e\u9645\u4e0a\u662f\u53ea\u7528\u4e86\u5411\u4e0b\u7ef4\u62a4\u64cd\u4f5c**)\u3002\n- \u6211\u4eec\u7684c[ i ][ j ]\uff0c\u7528\u6765\u5b58\u50a8**a\u4e2d\u7b2ci\u4e2a\u6570\u5206\u522b\u548cb\u4e2d\u7684\u6240\u6709\u6570\u76f8\u52a0\u5f97\u5230\u7684\u7ed3\u679c**\u3002\u5f88\u663e\u7136 \u4f1a \u7206\u7a7a\u95f4\uff0c\u6240\u4ee5\u7b49\u4e0b\u4f1a\u6709\u4f18\u5316\u3002\n\n```cpp\n\t\tfor (int i = 1;i <= n;i++)\n        \tfor (int j = 1;j <= n;j++)\n        \t\tc[i][j] = a[i]+b[j];//a\u4e2d\u7b2ci\u4e2a\u6570\u5206\u522b\u548cb\u4e2d\u7684\u6240\u6709\u6570\u76f8\u52a0\u5f97\u5230\u7684\u7ed3\u679c\n    \t\n```\n- \u4f9d\u9898\u610f\u5f97\uff1aa\u662f\u6709\u5e8f\u6570\u5217\uff0cb\u4e5f\u662f\u6709\u5e8f\u6570\u5217\uff0c\u5219\u5bf9\u4e8e\u4efb\u610fc[ i ]\u4e5f\u4f1a\u662f\u4e00\u4e2a\u6709\u5e8f\u6570\u5217\u3002\n- \u90a3\u4e48\u6211\u4eec\u5c31\u628ac[ i ]\u7684\u7b2c\u4e00\u4e2a\u6570\u5b58\u5165heap\u3002\n\n```cpp\n\t\tfor (int i = 1;i <= n;i++)\n        \t\theap[i] = c[i][j];\t\n    \t\n```\n- \u7136\u540e\u7ef4\u62a4\u4e00\u4e0bheap\n- while\uff08\u6ca1\u6709\u8f93\u51fa\u591fn\u4e2a\u6570\uff09\n- {\n- \u8f93\u51fa\uff1b\n- \u653e\u5165 **\u5806\u9876\u6570\u6240\u5728\u7684\u6570\u7ec4\u7684\u4e0b\u4e00\u4e2a\u6570**\uff08\u597d\u597d\u5480\u56bc\u4e00\u4e0b\uff09 \n- \u7ef4\u62a4\n- }\n\n### \u4f18\u5316\n- \u7ecf\u8fc7arfa\u540c\u5fd7\u7684\u63d0\u9192\uff0c\u6211\u4eec\u53d1\u73b0\u5b9a\u4e49\u7684c\u6570\u7ec4\u4f1a\u7206\u7a7a\u95f4\u3002\n- \u4e8e\u662f\u6211\u4eec\u5f00\u59cb\u4e86\u4f18\u5316\u4e4b\u65c5\u3002\n- \u9996\u5148\u6211\u4eec\u77e5\u9053\uff0cheap[ i ]\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u503c\uff0c\u90a3\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u5728heap\u9700\u8981\u7684\u65f6\u5019\u518d\u628ac[ i ][ j ]\u7b97\u51fa\u6765\u5462\uff1f\n- \u7136\u540e\u6211\u4eec\u53d1\u73b0 c[ i ][ j ] = a[ i ]+b[ j ]\u4e2di\u76f8\u5f53\u4e8e\u76ee\u524d\u5bf9\u9876\u6570\u6240\u5728\u7684\u6570\u7ec4\uff0cj\u5c31\u8868\u793a\u4e0b\u4e00\u4e2a\u6570\u7684\u4e0b\u6807\u3002\n- \u4e8e\u662f\u4f18\u5316\u5c31\u51fa\u6765\u4e86\u3002\n\n```cpp\n    for (int i = 1;i <= n;i++) heap[i] = a[i]+b[1]\n     \u2026\u2026\n    int t = from[1];\n    step[t]++;\n    heap[1]=a[t] + b[ step[t] ];\n\n```\n- \u6709\u4eba\u53ef\u80fd\u770b\u4e0d\u61c2\u3002\u6211\u505a\u4e00\u4e2a\u6bd4\u55bb\u5427\u3002\u5047\u5982\u4f60\u662f\u62f1\u91ce\u9a7e\u6821\u9694\u58c1\u7684\u8001\u738b\u80a0\u7c89\u5e97\u5e97\u957f\uff0c\u56e0\u4e3a\u62f1\u91ce\u9a7e\u6821\u7684\u5b66\u5458\u5f88\u591a\uff0c\u6240\u4ee5\u4f60\u7684\u751f\u610f\u5f88\u7ea2\u706b\u3002\u4f46\u662f\u4ed6\u4eec\u60f3\u8981\u5404\u79cd\u53e3\u5473\u7684\u3002\u4f60\u60f3\u4e86\u4e00\u4e2a\u529e\u6cd5\uff1a\u4e70\u6765\u51e0\u4e2a\u789f\u5b50\uff0c\u5148\u628a\u5404\u79cd\u80a0\u7c89\u90fd\u505a\u51e0\u4efd\uff0c\u518d\u5356\u51fa\u53bb\u3002\u5b9e\u9645\u4e0a\uff0c\u4f60\u53ea\u9700\u8981\u73b0\u505a\u73b0\u5356\u7684\u5408\u6210\u5c31~~ojbk~~\u4e86\u3002\n\n\n## \u4e0a\u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100000],b[100000],heap[100000],from[100000],step[100000],n,sum=1;\nvoid swap(int x,int y)//\u624b\u6253swap\u4ea4\u6362\uff0c\u540c\u65f6\u4ea4\u6362\u6765\u6e90\u6570\u7ec4\u3002\n{\n\tint k = heap[x];\n\theap[x] = heap[y];\n\theap[y] = k;\n\tk = from[x];\n\tfrom[x] = from[y];\n\tfrom[y] = k;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i = 1;i <= n;i++) scanf(\"%d\",&a[i]);\n\tfor (int i = 1;i <= n;i++) scanf(\"%d\",&b[i]);\n\tfor (int i = 1;i <= n;i++) heap[i] = a[i]+b[1],from[i] = i,step[i] = 1; \n    //\u8fd9\u4e00\u6b65\u5c31\u662f\u4f18\u5316\u3002\u628ac\u53bb\u6389\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u73b0\u505a\u73b0\u5356\u7684\u5408\u6210\u3002\n\twhile (sum <= n)\n\t{\n\t\tprintf(\"%d \",heap[1]);\n\t\tint t = from[1];\n\t\tstep[t]++;\n\t\theap[1]=a[t] + b[ step[t] ];//\u73b0\u505a\u73b0\u5356\u7684\u5408\u6210\u3002\n\t\tint x = 1,s;\n\t\twhile (x<<1 <= n)//\u7ecf\u5178\u7684\u4e0b\u4f20\n\t\t{\n\t\t\ts = x<<1;\n\t\t\tif (heap[s] > heap[s + 1] && s + 1 <= n) s++;\n\t\t\tif (heap[x] > heap[s])\n\t\t\t{\n\t\t\t\tswap(x,s);\n\t\t\t\tx = s;\t\n\t\t\t}else break;\n\t\t}\n\t\tsum++;\t\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1522562232,
        "uid": 56849,
        "name": "\u96f7\u5dde\u534a\u5c9b\u5c9b\u4e3b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u9996\u5148\u58f0\u660e\uff0c\u6211\u60f3\u53d1\u9898\u89e3\u662f\u56e0\u4e3a\u6211\u89c9\u5f97\u6211\u7684\u4ee3\u7801\u6700\u77ed\u3001\u6700\u7b80\u6d01\uff0c\u5e76\u8fd0\u7528\u4e86\u5c06\u4e24\u4e2a\u4f18\u5148\u961f\u5217\u7ed1\u5b9a\u8d77\u6765\u7684\u6570\u636e\u7ed3\u6784\uff08pair\uff09\u3002\n\n\u8fd9\u9053\u9898\u548c\u679c\u5b50\u5408\u5e76\u975e\u5e38\u50cf\uff0c\u6bcf\u6b21\u90fd\u662f\u53d62\u4e2a\u6700\u5c0f\u7684\u6570\uff0c\u4f46\u662f\u672c\u9898\u4e2d\u6bcf\u4e2a\u6570\u53ef\u4ee5\u53d6\u591a\u6b21\uff0c\u4f46\u662f\u6570\u5bf9\u4e0d\u80fd\u91cd\u590d\uff0c\u4f46\u662f\u7b97\u6cd5\u8fd8\u662f\u4e00\u6837\u7684\uff0c\u5229\u7528\u4f18\u5148\u961f\u5217.\n\n\u7531\u4e8e\u672c\u9898\u4e2d\u7684\u6570\u636e\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u9009\u53d6\u4e86\u5750\u6807\u4e3ai,j\u7684\u4e24\u4e2a\u6570\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u53ef\u80fd\u9009i+1,j\u6216i,j+1,\u8fd9\u6837\u7684\u8bdd\u7531\u4e8e\u6bcf\u4e2a\u6570\u53ef\u4ee5\u53d6\u591a\u6b21\u5bb9\u6613\u91cd\u590d\uff0c\u6240\u4ee5\u4f7f\u7528SET\u5224\u91cd\uff0c\u8fd9\u6837\u7684\u8bdd\u7531\u4e8e\u8981\u4f7f\u7528\u4e24\u4e2a\u7ed3\u6784\u4f53\uff0c\u6bd4\u8f83\u5bb9\u6613\u5199\u9519.\n\n\u8fd8\u6709\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u9996\u5148\u4e0d\u7ba1\u600e\u4e48\u6837,A\u5e8f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6570\u7edd\u5bf9\u8981\u9009\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u53ef\u80fd\u548cB\u5e8f\u5217\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6570\u7ec4\u6210\u7684\u6570\u5bf9\u88ab\u9009\uff0c\u5168\u90e8\u52a0\u5165\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u8fd9\u6837\u5904\u7406\u4e86i,j+1\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u8fd8\u6709i+1,j\u7684\u60c5\u51b5\uff0c\u6bcf\u6b21\u8f93\u51fa\u4e00\u4e2a\u548c\u4e4b\u540e\uff0c\u5c06B\u5e8f\u5217\u4e2d\u7684\u7b2ci\u4e2a\u6570\u5bf9\u5e94\u7684A\u5e8f\u5217\u4e2d\u7684\u7b2cj\u4e2a\u6570\u7684j++.\n\n\u4f46\u662f\u8fd9\u6837\u6570\u5bf9\u8fd8\u662f\u5bb9\u6613\u91cd\u590d\uff0c\u600e\u4e48\u529e\u5462\uff1f\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\uff0cto[i]\u8868\u793aB\u5e8f\u5217\u4e2d\u7684\u7b2ci\u4e2a\u6570\u4e0eA\u5e8f\u5217\u4e2d\u7684\u7b2c\u51e0\u4e2a\u6570\u76f8\u52a0\uff0c\u6bcf\u6b21\u5165\u961f\u7684\u65f6\u5019\u7d2f\u52a0to\u6570\u7ec4\u5c31\u4e0d\u4f1a\u9020\u6210\u91cd\u590d\u4e86\uff01\n\n```cpp\n#include<cstdio>  \n#include<queue>   \nusing namespace std;\nint a[100005]={}, b[100005]={}, to[100005]={},i, n;\npriority_queue<pair<int, int>, vector<pair<int, int> >, greater<pair<int, int> > >q;\nint main()\n{\n    scanf(\"%d\", &n);\n    for (i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i]);\n    for (i = 1; i <= n; i++)\n    {\n        scanf(\"%d\", &b[i]); to[i] = 1;\n        q.push(pair<int, int>(a[1] + b[i], i));\n    }\n    while (n--)\n    {\n        printf(\"%d \", q.top().first);\n        i = q.top().second; q.pop();\n        q.push(pair<int, int>(a[++to[i]] + b[i], i));\n    }\n    return 0;\n}\n```",
        "postTime": 1500868927,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u672c\u7bc7\u9898\u89e3\u4e0d\u662f\u4e25\u683c\u7684$O(nlogn)$\uff0c\u5b9e\u9645\u4e0a\uff0c\u5b83\u662f$O(nlog^2n)$\u7684\uff0c\u4f46\u662f\uff0cAC\u4e86\n\n\u8fdb\u5165\u6b63\u9898\uff1a\n\n\u6211\u4e00\u5f00\u59cb\u60f3\u7528\u4e00\u4e2a\u66b4\u529b\u5148\u9a97\u70b9\u5206\uff0c\u4e8e\u662f\uff0c\u5c31\u60f3\u5230\u4e86\u679a\u4e3e\u6240\u6709\u548c\u5e76\u628a\u7b54\u6848\u5b58\u5728\u4f18\u5148\u961f\u5217\u91cc\uff0c\u5dee\u4e0d\u591a\u8fd9\u4e2a\u6837\u5b50\uff08\u7801\u98ce\u8fd8\u597d\uff0c\u4e0d\u592a\u9700\u8981\u89e3\u91ca\uff09\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<queue>\nusing namespace std;\npriority_queue<int>q;\nint n,a[100005],b[100005],ans[100005];\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n    \tscanf(\"%d\",&a[i]);\n    }\n    for(int i=1;i<=n;i++){\n    \tscanf(\"%d\",&b[i]);\n    }\n    sort(a+1,a+n+1);\n    sort(b+1,b+n+1);\n    for(int i=1;i<=n;i++){\n    \tfor(int j=1;j<=n;j++){\n    \t\tint x=a[i]+b[j];\n    \t\tif(q.size()<n){\n    \t\t\tq.push(x);\n    \t\t}\n    \t\telse{\n    \t\t\tif(q.top()>x){\n    \t\t\t\tq.pop();\n    \t\t\t\tq.push(x);\n    \t\t\t}\n    \t\t}\n    \t}\n    }\n    for(int i=n;i>=1;i--){\n    \tans[i]=q.top();\n    \tq.pop();\n    }\n    for(int i=1;i<=n;i++){\n    \tprintf(\"%d \",ans[i]);\n    }\n    return 0;\n}\n```\n\n\u590d\u6742\u5ea6$O(n^2logn)$\uff0c60\u5206\n\n\u73b0\u5728\u5f00\u59cb\u4f18\u5316\n\n\u4ed4\u7ec6\u60f3\u60f3\uff0c\u82e5$a_i+b_j$\u6ca1\u6709\u653e\u5165\u4f18\u5148\u961f\u5217\uff0c\u90a3$a_i+b_{j+1}$\u5462\uff1f\n\n\u4e0d\u4f1a\uff0c\u56e0\u4e3a$b_{j+1}>b_j$\uff0c\u6240\u4ee5$a_i+b_{j+1}>a_i+b_j>q.top$\uff0c\u65e0\u6cd5\u653e\u5165\n\n\u6240\u4ee5\u5728$a_i+b_j$\u6ca1\u6709\u653e\u5165\u4f18\u5148\u961f\u5217\u65f6\uff0c$a_i+b_{j+n}(n>0)$\u4e5f\u90fd\u4e0d\u4f1a\u88ab\u653e\u5165\uff0c\u53ef\u4ee5\u76f4\u63a5break\u4e00\u4e0b\u8df3\u5230$a_{i+1}+b_1$\u7ee7\u7eed\u679a\u4e3e\n\n\u4e8e\u662f\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<queue>\nusing namespace std;\npriority_queue<int>q;\nint n,a[100005],b[100005],ans[100005];\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n    \tscanf(\"%d\",&a[i]);\n    }\n    for(int i=1;i<=n;i++){\n    \tscanf(\"%d\",&b[i]);\n    }\n    sort(a+1,a+n+1);\n    sort(b+1,b+n+1);\n    for(int i=1;i<=n;i++){\n    \tfor(int j=1;j<=n;j++){\n    \t\tint x=a[i]+b[j];\n    \t\tif(q.size()<n){\n    \t\t\tq.push(x);\n    \t\t}\n    \t\telse{\n    \t\t\tif(q.top()>x){\n    \t\t\t\tq.pop();\n    \t\t\t\tq.push(x);\n    \t\t\t}\n    \t\t\telse{\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t}\n    \t}\n    }\n    for(int i=n;i>=1;i--){\n    \tans[i]=q.top();\n    \tq.pop();\n    }\n    for(int i=1;i<=n;i++){\n    \tprintf(\"%d \",ans[i]);\n    }\n    return 0;\n}\n```\n\n\u8fd9\u4e2a\u4ee3\u7801AC\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5417\uff0c\u4e0b\u9762\u7ed9\u51fa\u6211\u7684\u601d\u8def\uff0c\u8bc1\u660e\u4e0d\u662f\u592a\u96be\uff1a\n\n\u7b2c\u4e00\u884c\u81f3\u591a\u626b\u5b8c\u5b83\u7684$\\dfrac{1}{1}$\n\n\u7b2c\u4e8c\u884c\u53d8\u4e3a$\\dfrac{1}{2}$\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7b2c$i$\u884c\u81f3\u591a$\\dfrac{1}{i}(1 \\le i \\le n)$\n\n\u5408\u5728\u4e00\u8d77\uff0c\u5171$\\dfrac{1}{1}+\\dfrac{1}{2}+\\cdots+\\dfrac{1}{n}$\n\n\u6b27\u62c9\u8bc1\u660e\u8fc7\uff0c\u4e0a\u9762\u7684\u65e0\u7a77\u7ea7\u6570\u7684\u589e\u957f\u7387\u4e3a$O(lnn)$\u7684\n\n\u56e0\u6b64\uff0c\u603b\u590d\u6742\u5ea6\u4e3a$O(n\\ logn\\ lnn)$\u4e5f\u5c31\u662f$O(nlog^2n)$\u7684\uff0c\u8bc1\u6bd5",
        "postTime": 1545878475,
        "uid": 65542,
        "name": "TonyBrown148",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "#\u6709\u4e0d\u7528\u4f18\u5148\u961f\u5217\uff0c\u4ee3\u7801\u4e0d\u523030\u884c\u7684\u505a\u6cd5~~\uff08P\u515a\u798f\u5229\uff09~~\u3002\n\n\u5f53$i*j>n$\u65f6\uff0c$A_i+B_j$\u4e00\u5b9a\u4e0d\u662f\u524d$n$\u5c0f\u7684\u6570\u3002\n\n\u7406\u7531\uff1a\u56e0\u4e3a\u4e24\u4e2a\u5e8f\u5217\u5747\u6709\u5e8f\uff0c\u6240\u4ee5\u5982\u679c$x<=i$\u800c\u4e14$y<=j$\u90a3\u4e48$A_x+B_y<A_i+B_j$\u3002\u4e8e\u662f\u81f3\u5c11\u6709$i*j$\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e$A_i+B_j$\u3002\n\u5f53$i*j>n$\u65f6\uff0c\u4e00\u5b9a\u6709\u591a\u4f59$n$\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e$A_i+B_j$\uff0c\u6240\u4ee5$A_i+B_j$\u4e00\u5b9a\u4e0d\u662f\u524d$n$\u5c0f\u7684\u6570\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u53ef\u80fd\u6210\u4e3a\u524d$n$\u5c0f\u7684\u6570\u7684$A_i+B_j$\uff0c\u7136\u540e\u6392\u5e8f\u8f93\u51fa~~\uff08P\u515a\u4e0d\u7528\u624b\u5199\u4f18\u5148\u961f\u5217\u62c9\uff09~~\u3002",
        "postTime": 1541032594,
        "uid": 60202,
        "name": "csyakuoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "# \u6734\u7d20\u89e3\u6cd5\n\u76f4\u63a5\u628an^2\u4e2a\u548c\u90fd\u63d2\u5165\u5806\u4e2d\uff0c\u7136\u540e\u8f93\u51fa\uff0c\u590d\u6742\u5ea6\u4e3aO(N^2logN)\uff0c\u672c\u9898\u6570\u636eN<100000,\u80af\u5b9a\u8fc7\u4e0d\u4e86\u3002\n\n```\n#include<queue>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ntemplate<class T>\ninline void read(T &x)\n{\n    x=0; int sign=1; char c;\n    do{ c=getchar(); if(c=='-') sign=-1;}while(!isdigit(c));\n    do{ x=x*10+c-'0',c=getchar();}while(isdigit(c));\n    x*=sign;\n}\nint n,a[100001],b[100001];\nint main()\n{\n    read(n);\n    for(register int i=1;i<=n;++i) read(a[i]);\n    for(register int i=1;i<=n;++i) read(b[i]);\n    priority_queue<int> q;\n    for(register int i=1;i<=n;++i)\n    for(register int j=1;j<=n;++j)\n    q.push(-a[i]-b[j]);\n    for(register int i=0;i<n;++i)\n    {\n        printf(\"%d \",-q.top());\n        q.pop();\n    }\n    return 0;\n}\n\n```\n- \u4e8b\u5b9e\u4e0a\uff0c\u53ea\u8981\u5728\u6734\u7d20\u7b97\u6cd5\u7684\u4ee3\u7801\u4e0a\u52a0\u4e00\u4e2a\u5c0f\u4f18\u5316\u5c31\u884c\u4e86\u3002\n- \u4e24\u4e2a\u957f\u5ea6\u4e3aN\u7684\u6570\u5217\uff0c\u548c\u7684\u603b\u6570\u4e3aN^2\uff0c\u800c\u7b54\u6848\u53ea\u8981\u8f93\u51fa\u5176\u4e2d\u6700\u5c0f\u7684N\u4e2a\u5373\u53ef\uff0c\u90a3\u5bb9\u6613\u60f3\u5230\uff0c\u5728\u5f80\u5806\u4e2d\u63d2\u5165\u65f6\u5c31\u6392\u9664\u6389\u4e00\u4e9b\u7edd\u5bf9\u4e0d\u53ef\u80fd\u662f\u7b54\u6848\u7684\u6570\u3002\n- \u5047\u8bbe\u6b64\u65f6\u8981\u628a $a[i]+b[j]$ \u63d2\u5165\u5806\uff0c\u4e14$(i-1)*(j-1)>N$,\u90a3\u4e48\u8fd9\u4e2a\u6570\u4e00\u5b9a\u4e0d\u4f1a\u662f\u6700\u540e\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u5bf9\u4e8e$1<=s<i,1<=t<j$\uff0c\u53ef\u7ec4\u6210\u7684\u548c\u5df2\u7ecf\u8d85\u8fc7N\u4e2a\uff0c\u4e14\u90fd\u8981\u6bd4$a[i]+b[j]$\u5c0f\u3002\n\n## AC\u4ee3\u7801\n\n```\n#include<queue>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ntemplate<class T>\ninline void read(T &x)\n{\n    x=0; int sign=1; char c;\n    do{ c=getchar(); if(c=='-') sign=-1;}while(!isdigit(c));\n    do{ x=x*10+c-'0',c=getchar();}while(isdigit(c));\n    x*=sign;\n}\nint n,a[100001],b[100001];\nint main()\n{\n    read(n);\n    for(register int i=1;i<=n;++i) read(a[i]);\n    for(register int i=1;i<=n;++i) read(b[i]);\n    priority_queue<int> q;\n    for(register int i=1;i<=n;++i)\n    for(register int j=1;(i-1)*(j-1)<=n&&j<=n;++j) //\u8fd9\u91cc\u52a0\u4e00\u53e5\u5c31\u884c\u4e86\n    q.push(-a[i]-b[j]);\n    for(register int i=0;i<n;++i)\n    {\n        printf(\"%d \",-q.top());\n        q.pop();\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1534055034,
        "uid": 71728,
        "name": "KryptonAu",
        "ccfLevel": 0,
        "title": "P1631 \u5e8f\u5217\u5408\u5e76 \u9898\u89e3"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848\n\u628a\u7b54\u6848\u5728\u8fd9N^2\u4e2a\u6570\u4e2d\u9010\u6392\u6bd4\u8f83\n\u9047\u5230\u5927\u4e8e\u7b54\u6848\u7684\u6216\u7b26\u5408\u6761\u4ef6\u7684\u6570\u8d85\u4e86\u5c31break\n\u6700\u540e\u9009\u51fa\u5c0f\u4e8e\u7b54\u6848\u7684sort\u4e00\u4e0b\u8f93\u51fa\u524dN\u4e2a\u5c31\u884c\u4e86\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint a[100007],b[100007],answer[1000007];int n;//\u6ce8\u610fanswer\u8981\u5f00\u5927\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u91cd\u590d \nbool judge(int x)\n{int sum=0;\nfor(int i=1;i<=n;++i)\n{if(sum>n||a[i]+b[1]>x)break;\nfor(int j=1;j<=n;++j)\n{if(a[i]+b[j]<x)\n{++sum;if(sum>n)break;}\nif(a[i]+b[j]>x)break;}}\nif(sum>=n)return 1;\nelse return 0;\n}\nint main()\n{cin>>n;\nfor(int i=1;i<=n;++i)\ncin>>a[i];\nfor(int i=1;i<=n;++i)\ncin>>b[i];\nint l=a[1]+b[1],r=a[n]+b[n];\nwhile(l!=r)//\u4e8c\u5206\u6a21\u677f \n{int mid=(l+r)/2;\nif(judge(mid)==1)\nr=mid;\nelse l=mid+1;}\n--l;\nint s=0;\nfor(int i=1;i<=n;++i)\n{if(a[i]+b[1]>l)break;//\u6ce8\u610f\u8d85\u4e86\u4e0d\u8981\u8df3 \nfor(int j=1;j<=n;++j)\n{if(a[i]+b[j]<=l)\n{++s;answer[s]=a[i]+b[j];}\nelse break;}}\nsort(answer+1,answer+s+1);\nfor(int i=1;i<=n;++i)\ncout<<answer[i]<<\" \";\nreturn 0;\n}\n```",
        "postTime": 1517986476,
        "uid": 38535,
        "name": "laorui",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u9ad8\u7968\u7b54\u6848\u666e\u904d\u91c7\u7528\u4e00\u79cd\u505a\u6cd5\uff0c\u5982\u56fe\uff08\u7528\u753b\u56fe\u505a\u7684\uff0c\u770b\u8d77\u6765\u4e0d\u662f\u5f88\u597d\uff09\u3002\n![](https://cdn.luogu.com.cn/upload/pic/46110.png)\n\u7531\u56fe\u610f\uff0c\u56e0\u4e3a\u6bcf\u4e00\u884c\u6bcf\u4e00\u5217\u90fd\u662f\u6309\u987a\u5e8f\u4ece\u5c0f\u5230\u5927\uff0c\u6240\u4ee5\n\t\t\ta1+b1<a2+b1;\n            a1+b1<a1+b2;\n\u5373\u6309\u7740\u7bad\u5934\u7684\u65b9\u5411\u4ece\u5c0f\u5230\u5927\uff0c\u4f46\u4e0d\u80fd\u5224\u65ada1+b2\u548ca2+b1\u8c01\u5927\uff0c\u6240\u4ee5\u5462\uff0c\u4ed6\u4eec\u60f3\u51fa\u6765\u4e00\u4e2a\u529e\u6cd5\uff0c\u6700\u5f00\u59cb\u628a\u7b2c\u4e00\u884c\na1+b1,a2+b1,a3+b1,a4+b1,a5+b1\u5168\u90e8\u538b\u5165\u5806,\u6b64\u65f6\u60f3\u5f53\u7136a1+b1\u8fd9\u4e2a\u6700\u5c0f\uff0c\u628a\u8fd9\u4e2a\u5f39\u51fa\u6765\u8f93\u51fa\uff0c\u518d\u628a\u4e0b\u9762\u7684a1+b2\u538b\u8fdb\u53bb\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u81ea\u7136\u5c31\u80fd\u5224\u65ad\u4ed6\u4e0ea2+b1\u8c01\u5927\u8c01\u5c0f\uff0c\u6240\u4ee5\u5462\uff0c\u518d\u5c06\u6700\u5c0f\u7684\u53d6\u51fa\uff0c\u5c06\u4ed6\u4e0b\u9762\u7684\u90a3\u4e2a\u538b\u5165\u3002\n\n\u56e0\u4e3a\u672c\u4e13\u9898\u662f\u5806\uff0c\u8fd9\u5f53\u7136\u662f\u4e2a\u5f88\u4e0d\u9519\u7684\u505a\u6cd5\uff0c\u4e0d\u8fc7\u5b9e\u73b0\u4e0a\u7565\u6709\u9ebb\u70e6\uff0c\u672c\u9898\u5b8c\u5168\u53ef\u4ee5\u91c7\u53d6\u4e0b\u9762\u6211\u8fd9\u4e2a\u601d\u8def\u3002\n\n\u4e3b\u7a0b\u5e8f\u975e\u5e38\u77ed\uff0c\u90a3\u662f\u91c7\u53d6\u4e86\u4ec0\u4e48\u601d\u8def\u5462\uff1f\n\u5982\u56fe\u6240\u793a\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/46095.png)\n\n\u7531\u56fe\u610f\uff0c\u53ea\u6709\u6211\u6d82\u7684\u90a3\u4e9b\u5730\u65b9\u53ef\u80fd\u662f\u524dn\u5c0f\u7684\uff0c\u5047\u5982a3+b2\u662f\u524dn\u5c0f\u7684\uff0c\u90a3\u4e48\u4ecea1+b1\u5230a3+b2\u5168\u90fd\u662f\u5c0f\u4e8e\u7b49\u4e8ea3+b2\uff0c\u5f88\u660e\u663e\u8fd9\u5c31\u4e0d\u5bf9\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba:\u5bf9\u4e8e\u7b2ci\u884c\u7b2cj\u5217\uff0c\u4ed6\u81f3\u5c11\u662f\u7b2ci*j \u5927\u7684\u6570\uff0c\u5de6\u3001\u4e0a\u65b9\u7684\u80af\u5b9a\u90fd\u6bd4\u4ed6\u5c0f\u6216\u8005\u7b49\u4e8e\uff1b\u6240\u4ee5\uff0c\u4e0d\u96be\u5f97\u51fa\u8981\u628a\u54ea\u4e9b\u538b\u8fdb\u5806\u91cc\u4e86\u3002 \n\n```cpp\n#include <iostream>\n#include <queue>\n#include <cstdio>\n#include <math.h>\n\nusing namespace std;\n\n#define LL int\n\nconst int maxn = 1e5+10;\n\nLL a[maxn],b[maxn];\n\npriority_queue<LL,vector<LL>,greater<LL> >p1;\n\nint main()\n{\n    int n;\n    cin>>n;\n    for(int i = 1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for(int i = 1;i<=n;i++) scanf(\"%d\",&b[i]);\n\n    for(int i =1;i<=sqrt(n);i++){\n        for(int j =i;j<=n/i;j++) p1.push(a[j]+b[i]);\n        for(int j =i+1;j<=n/i;j++) p1.push(a[i]+b[j]);\n    }\n\n    for(int i =0;i<n;i++){\n        printf(\"%d \",p1.top());\n        p1.pop();\n    }\n    return 0;\n}\n\n```\n\u6700\u540e\u8bf4\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5c0f\u4e8eO(n(logn)^2)\uff0c\u4e0d\u8fc7n/1+n/2+n/3+...+n/sqrt(n)\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff1f\u80af\u5b9a\u5c0f\u4e8enlogn\u7684.",
        "postTime": 1544709764,
        "uid": 126027,
        "name": "huainan_marquis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u672c\u4eba\u7684\u601d\u8def\u540c\u697c\u4e0b\u4f17\u5927\u4f6c\u4e00\u81f4\uff0c\u5c31\u662f\u505a\u6cd5\u4e0d\u592a\u4e00\u6837\uff0c\u53ef\u4ee5\u53c2\u8003\u53c2\u8003\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4e24\u4e2a\u5e8f\u5217\u4e2d\u7684\u6570\uff0ca[i]+b[j]<a[i+1]+b[j]\uff0ca[i]+b[j]<a[i]+b[j+1]\uff1b\n\n\u5e76\u4e14\u5f88\u660e\u663e\u6709a[1]+b[1]<a[2]+b[2]<\u2026\u2026\u90a3\u4e48\u6211\u4eec\u5c06\u5176\u548c\uff08N\u4e2a\uff09\u538b\u5165\u4f18\u5148\u961f\u5217\u3002\n\n\u53ea\u8981\u6709 i==j \u7684\u70b9\u88ab\u5f39\u51fa\uff0c\u6211\u4eec\u5c31\u628a a[i+1]+b[i] \u4e0ea[i]+b[i+1] \u538b\u5165\u4f18\u5148\u961f\u5217,\n\n\u5426\u5219\uff0c\u5f53 i<j \u65f6\uff0c\u5c06 a[i]+b[j+1] \u538b\u5165\u5373\u53ef\uff1b \u5f53 i>j \u65f6\uff0c\u5c06 a[i+1]+b[j] \u538b\u5165\u3002\n\n\u4e3a\u4ec0\u4e48 i<j \u65f6\u4e0d\u538b\u5165  a[i+1]+b[j] \uff1f\u6211\u4eec\u8003\u8651\u5230\u6b64\u65f6 a[i+1]+ b[j-1] \u53ca\u4e4b\u524d\u7684\u6570\u5b57\u53ef\u80fd\u4f9d\u65e7\u5728\u4f18\u5148\u961f\u5217\u4e2d\u5e76\u4e14\u66f4\u4f18\uff0c\u5c31\u4e0d\u5fc5\u66f4\u65b0\u3002\n\ni>j \u65f6\u4e0d\u538b\u5165  a[i]+b[j+1],\u540c\u7406\u3002\n\n\n\n```cpp\n#include<queue>\n#include<cctype>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N = 100005;\nstruct data{\n    int x, y, v;\n    bool operator <(const data &y) const{\n        return v > y.v;\n    }\n};\nint n, a[N], b[N], X[N], Y[N];\npriority_queue<data> pq;\n//\u5728\u7ed3\u6784\u4f53\u4e2d\u91cd\u5b9a\u4e49\u5c0f\u4e8e\u53f7\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\nint read()\n{\n    int x = 0;\n    bool f = 0;\n    char ch = getchar();\n    while(!isdigit(ch)) {\n        if(ch == '-') f = 1;\n        ch = getchar();\n    }\n    while(isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ '0'), ch =getchar();\n    return !f ? x : -x;\n}\n//\u4f18\u96c5\u7684\u8bfb\u5165\u4f18\u5316\nint main()\n{\n    scanf(\"%d\",&n);\n    data x, y, k;\n    int tot = n;\n    for(int i = 1; i <= n; i++) scanf(\"%d\",&a[i]);\n    for(int i = 1; i <= n; i++) scanf(\"%d\",&b[i]);\n    sort(a + 1, a + n + 1);\n    sort(b + 1, b + n + 1);\n    for(int i = 1; i <= n; i++) k.x = k.y = i, k.v = a[i] + b[i], pq.push(k);\n    for(int i = 1; i <= n; i++)\n    {\n        k = pq.top(); pq.pop();\n        printf(\"%d \", k.v);\n        if(k.x == k.y)\n        {\n            x.x = k.x; x.y = k.y + 1; x.v = a[x.x] + b[x.y]; pq.push(x);\n            y.x = k.x + 1; y.y = k.y; y.v = a[y.x] + b[y.y]; pq.push(y);\n        }\n        else\n        {\n            if(k.x > k.y) y.x = k.x + 1, y.y = k.y, y.v = a[y.x] + b[y.y], pq.push(y);\n                else x.x = k.x, x.y = k.y + 1, x.v = a[x.x] + b[x.y], pq.push(x);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1511498357,
        "uid": 20094,
        "name": "\u68a6\u56de\u8fd8",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u770b\u697c\u4e0b\u9898\u89e3\u51e0\u4e4e\u90fd\u662fSTLpriority_queue\u7684\uff0c\u53ea\u6709\u4e00\u4efd\u624b\u5199\u5806\uff08\u5f53\u7136dalao\u5199\u5f97\u662f\u6bd4\u849f\u84bb\u597d\u5f97\u591a\u7684\uff09\u3002\u6211\u5728\u6b64\u53d1\u5e03\u4e00\u4efd\u7eaf\u624b\u5199\u5806\u7684\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\uff08\u81f3\u5c11\u65f6\u7a7a\u6548\u7387\u8fd8\u662f\u5f88\u6709\u4fdd\u8bc1\u5730\uff0c\u563b\u563b\uff09\u7a0b\u5e8f\u4e2d\u7528\u7684\u662f\u5927\u6839\u5806\uff08\u56e0\u4e3a\u5982\u679c\u7528\u5c0f\u6839\u5806\u4f1a\u65e0\u6cd5\u6bd4\u8f83\uff0c\u5176\u539f\u56e0\u662f\u5c0f\u6839\u5806\u7684\u5806\u9876\u5143\u7d20\u662f\u5806\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u800c\u6700\u540e\u6700\u5c0f\u7684n\u4e2a\u548c\u53ef\u80fd\u6bd4\u5806\u9876\u5c0f\uff09\n\u597d\uff0c\u6765\u770b\u4f18\u7f8e\uff08chou lou\uff09\u7684\u4ee3\u7801\uff0c\u672c\u4eba\u6700\u8fd1\u7ec3\u4e8c\u53c9\u5806\u7ec3\u5230\u75af\uff0c\u6700\u7b80\u5355\u7684\u9898\u4e5f\u786c\u662f\u5199\u51fa\u4e86\u5e73\u8861\u6811\u7684\u4ee3\u7801\u91cf\uff0c\u4e0d\u8fc7\u5e94\u8be5\u4e0d\u5f71\u54cd\u9605\u8bfb\uff0c\u8bf7\u5927\u5bb6\u6d77\u6db5\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100000+10;\nint n,a[maxn],b[maxn],heap[maxn],size=0;\nlong long ans[maxn]; //\u8fd9\u91cc\u5176\u5b9e\u6ca1\u5fc5\u8981\u5f00\u5230int64\nvoid up(int p) //\u4e8c\u53c9\u5806\u5411\u4e0a\u8c03\u6574\uff08\u975e\u9012\u5f52\u7248\uff09\n{\n  while(p>1)\n  {\n    if(heap[p]>heap[p/2])\n    {\n      swap(heap[p],heap[p/2]);\n      p/=2;\n    }\n    else break;\n  }\n}\nvoid insert(int val) //\u5c06\u65b0\u5143\u7d20\u63d2\u5165\u5806\u5e95\u5e76\u4e0d\u65ad\u5411\u4e0a\u8c03\u6574\n{\n  heap[++size]=val;\n  up(size);\n}\nvoid down(int p) //\u4e8c\u53c9\u5806\u5411\u4e0b\u8c03\u6574\uff08\u975e\u9012\u5f52\u7248\uff09\n{\n  int s=p*2;\n  while(s<=size)\n  { //\u8fd9\u53e5\u8bdd\u662f\u9009\u62e9\u5de6\u53f3\u513f\u5b50\u4e2d\u66f4\u5927\u7684\u4e00\u4e2a\u4ea4\u6362\n    if(s<size&&heap[s+1]>heap[s]) s++;\n    if(heap[s]>heap[p])\n    {\n      swap(heap[s],heap[p]);\n      p=s; s=p*2; //\u4e0d\u65ad\u5411\u4e0b\n    }\n    else break;\n  }\n}\nvoid change(int val) //\u7f6e\u6362\u5806\u9876\uff0c\u5411\u4e0b\u8c03\u6574\n{\n  heap[1]=val;\n  down(1);\n}\nvoid extract() //\u5220\u9664\u5806\u9876\uff0c\u5411\u4e0b\u8c03\u6574\n{ //\u6ce8\u610f\u6b64\u51fd\u6570\u4e0echange\u529f\u80fd\u4e0d\u540c\n  heap[1]=heap[size--];\n  down(1);\n} \nint gettop() //\u8fd4\u56de\u5806\u9876\n{\n  return heap[1];\n}\nint main()\n{\n  cin>>n;\n  for(int i=1; i<=n; i++) cin>>a[i];\n  for(int i=1; i<=n; i++) cin>>b[i];\n  for(int i=1; i<=n; i++) insert(a[1]+b[i]); //\u5efa\u5806\n  for(int i=2; i<=n; i++)\n    for(int j=1; j<=n; j++)\n    {\n      if(a[i]+b[j]>=gettop()) break; //\u5982\u679c\u6bd4\u5806\u9876\u5927\uff0c\u5c31\u9000\u51fa\n      change(a[i]+b[j]); //\u7f6e\u6362\u5806\u9876\uff08\u6700\u5927\u5143\u7d20\uff09\n    }\n  for(int i=1; i<=n; i++) \n  {\n    ans[i]=gettop(); //\u53d6\u51fa\u5806\u9876 \n    extract(); //\u5411\u4e0b\u8c03\u6574\uff0c\u7ef4\u62a4\u5927\u6839\u5806\n  }\n  for(int i=n; i>=1; i--) cout<<ans[i]<<\" \"; //\u5012\u5e8f\u8f93\u51fa\n  return 0;\n}\n```",
        "postTime": 1518329616,
        "uid": 9156,
        "name": "\u5fae\u96e8\u71d5\u53cc\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c45\u7136\u6ca1\u4eba\u5199\u8fd9\u79cd\u7b80\u5355\u7684\u7b97\u6cd5\n\n\u53ef\u80fd\u662f\u7b54\u6848\u7684$a_i+b_j$\u4e00\u5b9a\u6ee1\u8db3$j\\le\\frac ni$\n\n\u56e0\u4e3a\u82e5$j>\\frac n i$\u7684\u8bdd\u4e00\u5b9a\u53ef\u4ee5\u7528$a_p+b_q(p\\le i,q<j)$\u586b\u6ee1\u8fd9n\u4e2a\u6570\u4e14\u5c0f\u4e8e$a_i+a_j$\n\n\u518d\u7528\u5806\u7ef4\u62a4\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\ln n\\log n)$\n\n~~~c++\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<cmath>\n#include<map>\n#include<bitset>\n#include<set>\n#include<queue>\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\n#define dwn(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\ntypedef long long ll;\nint n,tmp,a[100010],b[100010];\npriority_queue<int,vector<int>,greater<int> > pque;\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        x=(x<<3)+(x<<1)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;++i) a[i]=read();\n    for(int i=1;i<=n;++i) b[i]=read();\n    for(int i=1;i<=n;++i)\n    {\n        for(int j=1;j<=n/i;++j)\n        {\n            pque.push(a[i]+b[j]);\n        }\n    }\n    for(int i=1;i<=n;++i)\n    {\n        printf(\"%d \",pque.top());\n        pque.pop();\n    }\n    return 0;\n}\n~~~",
        "postTime": 1569290254,
        "uid": 128523,
        "name": "ZhuMingYang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u9996\u5148\u5bf9\u4e8e\u4e24\u4e2a\u5e8f\u5217$a,b$\u6700\u5c0f\u7684\u80af\u5b9a\u662f$a_1+b_1$\uff0c\u800c\u6b21\u5c0f\u7684\u5c31\u6709\u4e24\u79cd\u53ef\u80fd$min(a_1+b_2,a_2+b_1)$\uff0c\u5047\u5982\u73b0\u5728\u6b21\u5c0f\u662f$a_1+b_2$\uff0c\u90a3\u4e48\u6700\u5c0f\u7684\u6bd4\u4ed6\u5927\u7684\u6570\u5c31\u662f$min(a_1+b_3,a_2+b_2)$\uff0c\u518d\u4e0e\u4e4b\u524d\u7684$a_2+b_1$\u4e00\u8d77\u66f4\u65b0\u7b2c\u4e09\u5c0f\u7684\u503c\u3002\n\n\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u6765\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u5148\u628a\u4e8c\u5143\u7ec4$(1,1)$\u538b\u5165\uff0c\u5728\u53d6\u51fa\u5f53\u524d\u503c$(x,y)$\u7684\u65f6\u4faf\u8fd9\u4e2a\u503c\u5bf9\u540e\u9762\u7684\u7b54\u6848\u4ea7\u751f\u4e86\u8d21\u732e$(x+1,y)$\u548c$(x,y+1)$\uff0c\u6211\u4eec\u4fbf\u628a\u4ed6\u4eec\u4e00\u8d77\u538b\u5165\uff0c\u5faa\u73af$n$\u6b21\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u524d$n$\u5c0f\u7684\u503c\u3002\n\n\u4f46\u662f\u6211\u4eec\u53c8\u53d1\u73b0$(x,y+1)$\u548c$(x+1,y)$\u53ef\u80fd\u4ea7\u751f$(x+1,y+1)$\n\u8fd9\u6837\u60c5\u51b5\u76f8\u540c\uff0c\u53ef\u4ee5\u7528$map$\u8fdb\u884c\u5224\u91cd\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u51fa\u6765\u4e86\n\n\u8fd9\u9053\u9898\u8fd8\u53ef\u4ee5\u62d3\u5c55\u4e3a\u6709$m$\u4e2a\u5e8f\u5217\u7684\u60c5\u51b5\uff08poj2442\uff09\u5176\u5b9e\u662f\u4e00\u6837\u5904\u7406\uff0c\u5148\u5904\u7406\u4e24\u4e2a\u5e8f\u5217\u5f97\u5230\u524d$n$\u5c0f\u7684\u503c\u628a\u4ed6\u5f53\u4f5c\u4e00\u4e2a\u65b0\u7684\u5e8f\u5217\uff0c\u518d\u548c\u5e8f\u5217$c d e...$\u8fdb\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u4fbf\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\n\n\u53e6\u5916\u7531\u4e8e\u4f18\u5148\u961f\u5217\u9ed8\u8ba4\u662f\u5927\u6839\u5806\u6392\u5e8f\uff0c\u6240\u4ee5\u5728\u91cd\u8f7d\u5c0f\u4e8e\u53f7\u65f6\u5019\u662f\u53cd\u7740\u6765\u7684\u3002\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=500010;\ntypedef pair<int,int> pp;\ninline int read()\n{\n\tint x=0,t=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')t=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*t;\n}\nint n,a[maxn],b[maxn];\nmap<pp,int> p;\nstruct node{\n\tint x,y;\n\tbool operator<(const node&t) const\n\t{\n\t\tif(a[x]+b[y]<a[t.x]+b[t.y]) return false;\n\t\treturn true;\n\t}\n\tnode(int X,int Y){x=X,y=Y;}\n};\npriority_queue<node> q;\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=1;i<=n;i++) b[i]=read();\n\tq.push(node(1,1));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(p[make_pair(q.top().x,q.top().y)]) q.pop();\n\t\tint xx=q.top().x,yy=q.top().y;\n\t\tprintf(\"%d \",a[xx]+b[yy]);\n\t\tp[make_pair(xx,yy)]=1;\n\t\tq.push(node(xx+1,yy));\n\t\tq.push(node(xx,yy+1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1533017794,
        "uid": 50976,
        "name": "songhn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "# \u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011\n\n\u9898\u76ee\u4f20\u9001\u95e8\uff1a\n\n**https://www.luogu.org/problemnew/show/P1631**\n\n========================================================\u6211\u662f\u5206\u5272\u7ebf=================\n\n\n\u8fd9\u4e2a\u9898\uff0c\u5f88\u6a21\u677f\uff0c~~\u663e\u800c\u6613\u89c1\u7684~~**\u5c0f\u6839\u5806**(STL\u4f18\u5148\u961f\u5217\u4e5f\u53ef\u4ee5)\n\n\u4eca\u5929\u4e0a\u8bfe\u8001\u5e08\u7684\u7b2c\u4e00\u9053\u4f8b\u9898\uff0c\u76f4\u63a5\u8df3\u8fc7\u4e86\uff0c\u90fd\u6ca1\u8bb2~~\uff08\u4f46\u662f\u6211\u5f88\u5f31\uff0c\u6253\u4e86\u4e00\u5929\uff09~~\n\n\u4e0d\u5f97\u4e0d\u8bf4\uff0cSTL\u771f\u597d\u7528\uff0c\u4f46\u662f\u6211\u7528\u7684\u624b\u6253\u5806\u5f88\u597d\uff0c\u81f3\u5c11\u4e0d\u4f1aTLE~~~\n\n===============\u4ee5\u4e0a\u662f\u5e9f\u8bdd=================\n\n\u8fd9\u4e2a\u9898\u76ee\u672c\u4eba\u8ba4\u4e3a\u5c5e\u4e8e**\u5c0f\u6839\u5806**\u7684\u4e00\u4e2a\u5e94\u7528\u5427\n= =~~(\u770b\u4e0d\u51fa\u6765)~~\n\n\u6839\u636e\u67d0\u77e5\u540d\u5218ru jia(\u84dd\u4e66)\u7684\u8bf4\u6cd5\uff0c\u6211\u4eec\u5982\u4e0b\u4e0d\u59a8\u8003\u8651::\n\n\u5148push(M=A[1~n]+B[1])\u5165\u5806\uff0c\u8bb0\u5f55b\u7684\u4e0bb_hand\uff0c\u7136\u540e\u4ece\u5806\u4e2d\u5f39\u51fa\u503c\u6700\u5c0f\u7684\u4e00\u4e2a\uff0cpush\u4e00\u4e2aM=b[b_hand]+b[b_hand+1]\u5165\u5806,\u4e00\u5b9a\u662f\u80fd\u5f97\u5230\u6240\u6709\u6700\u5c0f\u7684\u524dn\u4e2a\u7ecfA\uff0cB\u7ec4\u5408\u4e4b\u540e\u7684\u6570\u3002\n\n\u4ee5\u4e0a\u7b97\u662f\u5927\u6982\u601d\u8def\u4e86\u5427= =\n\n**\u6ce8\u610f**\u6211\u4eec\u5728\u679a\u4e3e\u5143\u7d20\u65f6\u6709\u4e24\u4e2a\u53c2\u91cf\u6570\u503c\uff08k\uff09\u548c\u5e8f\u53f7\uff08numb\uff09\uff0c\u5927\u591a\u6570\u5c0f\u4f19\u4f34\u90fd\u4f1a\u7528struct\uff0c\u4f46\u662f\u672c\u4eba\u7528\u7684\u662fSTL pair\uff08\u5176\u5b9e\u6211\u662f\u62d2\u7edd\u7684\uff0c\u56e0\u4e3a\u5f88\u6162= =\uff09\u4e5f\u8bb8\u770b\u4e86\u4e0d\u8212\u670d\uff0c\u53ef\u4ee5\u6539\u56de\u6765\u7684~~\n\n\u666e\u53ca\u4e00\u4e0b\uff1a**pair\u6240\u5728\u5e93<utility>**\uff08STL\u9ed1\u79d1\u6280\uff09\n\n\u8be6\u7ec6\u70b9\u7684\u89e3\u91ca\u89c1\u4e0b\u9762\u7684\u4ee3\u7801\u5373\u53ef :D\n\n========================================================\u4ee5\u4e0b\u662fcode=================\n\n\n\u8bf7\u6536\u4e0b\u672c\u4eba\u4e11\u964b\u7684\u4ee3\u7801\uff0c\u5982\u6709\u95ee\u9898\u8bf7dalao\u6307\u51fa\uff0c\u5148\u53d7\u6211\u4e00%\n\n\n\n    #include<iostream>\n    #include<cstdio>\n    #include<cmath>\n    #include<algorithm>\n    #include<queue>\n    #include<utility>//pair\u6240\u5728\u5e93\n    using namespace std;\n    typedef long long ll;\n    const int inf=1e9+7;\n    const int mod=10000;\n    inline int read()//\u62d9\u52a3\u7684\u5feb\u8bfb\n    {\n        int p=0,f=1;char c=getchar();\n        while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n        while(c>='0'&&c<='9'){p=p*10+c-'0';c=getchar();}\n        return f*p;}\n    int n,heap_size,A[100009],B[100009];//A,B\u5982\u9898,heap_size\u8bb0\u5f55\u5806\u5927\u5c0f \n    pair <int ,int > Heap[300018];//\u5b9a\u4e49pair\u5c0f\u6839\u5806\n    bool operator < (pair <int ,int > &x,pair <int ,int > &y)//\u91cd\u8f7d\u8fd0\u7b97\u7b26\"<\" \n    {return x.first>y.first;//\u4fbf\u4e8e\u5c0f\u6839\u5806\u6bd4\u8f83\u7684\u51fd\u6570(\u6ce8\u610f\u4ee5\u6570\u503ck\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57) \n    inline void put_in(int k,int numb)//\u5c0f\u6839\u5806\u63d2\u5165\u5143\u7d20 \n    {\n\t    Heap[++heap_size]=make_pair(k,numb);\n        int now=heap_size,next;\n\t    while(now>1)\n\t         {\n\t            next=now/2;\n\t\t        if(Heap[next]<=Heap[now])return ;\n\t\t        swap(Heap[next],Heap[now]);\n\t\t        now=next;\n\t         }\n    }\n    inline void insert_top()//\u5c0f\u6839\u5806\u5220\u9664\u5806\u9876 \n    {\n\t    int now=1,next;\n\t    Heap[1]=Heap[heap_size--];\n\t    while(now*2<=heap_size)\n\t          {\n\t      \t   next=now*2;\n\t      \t   if(next<heap_size&&Heap[next]>Heap[next+1])next++;\n\t      \t   if(Heap[now]<=Heap[next])return ;\n\t      \t   swap(Heap[next],Heap[now]);\n\t      \t   now=next;\n\t          }\n    }\n    inline void Init_()//\u8bfb\u5165\u5404\u79cd\u6570\u636e \n    {\n\t    n=read();\n\t    for(int i=1;i<=n;i++)\n\t        A[i]=read();\n\t    sort(A+1,A+1+n);\n\t    for(int i=1;i<=n;i++)\n\t        B[i]=read();\n\t    sort(B+1,B+1+n);\n\t    //\u6ce8\u610f\u6570\u636e\u65e0\u5e8f,\u8981\u6392\u5e8f \n    }\n    inline void pre_work()//\u628aa[1~n]+b[1]\u653e\u5230\u5806\u4e2d(\u521d\u59cb)\n    {\n\t    for(int i=1;i<=n;i++)\n\t        put_in(A[i]+B[1],1);\n    }\n    inline void Solve()//\u5f00\u59cb\u6c42\u89e3 \n    {\n\t    pre_work();//\u89c1\u4e0a\n\t    for(int i=1;i<=n;i++)\n\t        {\n\t    \t    pair <int ,int > p=Heap[1];//\u53d6\u51fa\u5806\u9876 \n\t    \t    insert_top();//\u5220\u9664\u5806\u9876 \n\t    \t    printf(\"%d \",p.first);//\u8f93\u51fa\u503ck(\u4ece\u5c0f\u5230\u5927) \n\t    \t    int c=p.first,b_hand=p.second;\n\t    \t    if(b_hand+1<=n)//\u6784\u9020\u65b0\u7684b\u5e8f\u53f7\n\t    \t       put_in(c-B[b_hand]+B[b_hand+1],b_hand+1);\n\t    \t    //\u8fd9\u6837\u6c42\u89e3\u4fdd\u8bc1\u6700\u5c0f\n\t\t    }\n    }\n    int main()//\u770b,\u7b80\u6d01\u7684\u4e3b\u51fd\u6570= =\n    {\n\t    Init_();\n\t    Solve();\n\t    return 0;\n    }\n\n\n\u5e0c\u671b\u5927\u5bb6\u80fd\u61c2\u4e00\u4e9b\u4e86\u5427= =\uff0c\u6709\u4ec0\u4e48bug\u7ed9\u6211\u79c1\u4fe1\u54e6\n\n\u987a\u4fbf\u63a8\u5e7f\u6211\u7684\u535a\u5ba2\uff1a\uff1a\nhttps://www.luogu.org/blog/new2zy/\n\n\u62dc\u62dc\u250f(\uff3e0\uff3e)\u251b~~~\n\n",
        "postTime": 1525251991,
        "uid": 60359,
        "name": "___new2zy___",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u6734\u7d20\u7b97\u6cd5\u6c42\u89e3\uff0c\u53cc\u91cd\u5faa\u73afn\u7684\u5e73\u65b9\uff0c\u4f1a\u70b8\u5427\u3002\u6240\u4ee5\u5c31\u4f18\u5316\u4e00\u4e0b\u3002\n\n\u82e5\u6709i\u4e2aa\u5e8f\u5217\u6570\uff0cj\u4e2ab\u5e8f\u5217\u6570\uff0c\u5219\u6709i\u00d7j\u4e2a\u548c\uff0c\u6240\u4ee5\u5f53i\u00d7j>n\u65f6break\u5c31\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9009\u51fa1\u4e2aa\uff0c\u5219\u9700\u8981n\u4e2ab\u548c\u5b83\u51d1\u6210n\u4e2a\u548c\uff1b\u5982\u679c\u9009\u51fa2\u4e2aa\uff0c\u5219\u9700\u8981n/2\u4e2ab\u548c\u5b83\u51d1\u6210n\u4e2a\u548c\uff1b\u6545\u4e0d\u9700\u8981\u5faa\u73af\u5230n\u6b21\u3002\n\n\u9898\u76ee\u4e2d\u7684\u4e24\u5e8f\u5217\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u6545\u9009\u51fa\u524di\u4e2aa\uff0c\u518d\u627e\u51fan/i\u4e2ab\u5373\u53ef\uff0c\u540e\u9762\u7684b\u5c31\u5b8c\u5168\u65e0\u7528\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff0c\u5404\u4f4d\u770b\u770b\u7f62(\u81ea\u8ba4\u7801\u98ce\u8fd8\u884c)\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define gc ch=getchar()\n#define pc putchar(32)\nusing namespace std;\nconst int N=1e5+5;\ntemplate <class T>void read(T &s){\n\ts=0;T f=1;char gc;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;gc;}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';gc;}\n\ts*=f;\t\n}\ntemplate <class T>void put(T s){\n\tif(s<0) putchar('-'),s=-s;\n\tif(s>9) put(s/10);\n\tputchar(s%10+'0');\n}\npriority_queue<int,vector<int>,greater<int> >q;//\u5c0f\u6839\u5806 \nint n,x,a[N],b[N];\nint main(){\n\tread(n);\n\tfor(int i=1;i<=n;++i) read(a[i]);\n\tfor(int i=1;i<=n;++i) read(b[i]);\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=n;++j){   //\u53cc\u91cd\u5faa\u73af\u66b4\u529b \n\t\t\tq.push(a[i]+b[j]);    \n\t\t\tif(i*j>=n) break;    //\u6700\u7cbe\u9ad3\u7684\u4f18\u5316 \n\t\t}\n\t//n+n/2+n/3+n/4+...+1 \u5f53n=100000\u65f6,\u53ea\u4f1a\u5faa\u73af\u4e00\u767e\u591a\u4e07\u6b21\uff0c\u7b97\u4e0d\u9519\u5566\uff0c\u7b80\u5355\u5427\uff1f \n\tfor(int i=1;i<=n;++i) put(q.top()),pc,q.pop();\n}\n```",
        "postTime": 1576575522,
        "uid": 209944,
        "name": "\u541b\u7398",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u56e0\u4e3aA\u548cB\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u6700\u5c0f\u7684n\u4e2a\u6570\u80af\u5b9a\u662fA\u548cB\u524d\u51e0\u4e2a\u6570\u7684\u7ec4\u5408\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u770b\u4ee3\u7801:\n```cpp\n#include <cstdio>\n#include <queue>\nusing namespace std;\nint A[100005],B[100005];\npriority_queue<int,vector<int>,greater<int>> pq;\nint main(){\n    int n,l=0,r=0;//\u8bbe\u7f6e\u4e24\u4e2a\u6307\u9488\uff0c\u5404\u6307\u5411\u6570\u7ec4\u7684\u5f00\u5934\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++) scanf(\"%d\",&A[i]);\n\tfor(int i=0;i<n;i++) scanf(\"%d\",&B[i]);\n\tpq.push(A[l]+B[r]);//\u8fd9\u4e2a\u80af\u5b9a\u6700\u5c0f\uff0c\u653e\u8fdb\u5806\u91cc\n\twhile(pq.size()<3*n){//\u591a\u9009\u4e00\u4e9b\u7136\u540e\u4ece\u5806\u91cc\u9762\u8f93\u51fa\u6700\u5c0f\u7684n\u4e2a\n\t\tif(A[l]<=B[r]){//\u6bcf\u6b21\u6bd4\u8f83\u6307\u9488\u6307\u5411\u7684\u6570\uff0c\u5c0f\u7684\u90a3\u4e2a\u6307\u9488\u5411\u540e\u79fb\n\t\t\tl++;\n\t\t\tfor(int i=0;i<=r;i++) pq.push(A[l]+B[i]);//\u7136\u540e\u4e0b\u4e00\u4e2a\u6307\u5411\u7684\u6570\u4e0eB\u7684\u524dr\u4e2a\u6570\u7ec4\u5408\uff0c\u6254\u8fdb\u5806\u91cc\n\t\t}else{\n\t\t\tr++;\n\t\t\tfor(int i=0;i<=l;i++) pq.push(A[i]+B[r]);//\u540c\u4e0a\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++) printf(\"%d \",pq.top()),pq.pop();//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1533979213,
        "uid": 116315,
        "name": "\u5fc3\u975e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u672c\u9898\u6700\u521d\u59cb\u7684\u60f3\u6cd5\u5c31\u662fO(n\\*n)\u6c42\u51fa\u6bcf\u4e00\u79cd\u7ec4\u5408:\n\n\ta[1]+b[1],a[1]+b[2],...,a[2]+b[1],a[2]+b[2],...,a[n]+b[n] \n\n(emmm...\u5c0f\u849f\u84bb\u6253\u4e0d\u6765\u6570\u5b66\u7b26\u53f7...)\n\n\u4f46\u662fn\u4e0a\u5230\u4e86100000,n\\*n\u94c1\u5b9aT\u5230\u98de\u8d77(\u5f53\u7136\u4e5fM\u5230\u98de\u8d77)\n\n\u6211\u4eec\u9047\u5230\u8fd9\u79cd\u60c5\u51b5,\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u80af\u5b9a\u662f\u60f3\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4ec0\u4e48\u7684\u6765\u4f18\u5316\u65f6\u7a7a\u95f4,\u6211\u4eec\u9a6c\u4e0a\u60f3\u5230\u4e00\u4e2a\u63d2\u5165\u5220\u9664\u65b9\u4fbf\u7684\u6570\u636e\u7ed3\u6784:\u4e8c\u53c9\u5806(\u4e0d\u8fc7\u663e\u7136\u53ea\u80fd\u5220\u6389\u7b2c\u4e00\u4e2a\u5143\u7d20)\n\n\u4f17\u5927\u4f6c:\u4f60\u8fd9\u9017\u6211\u5462?\u590d\u6742\u5ea6\u4e0d\u8fd8\u662fO(n\\*n\\*log2(n\\*n))\u5417!\n\n\u522b\u6253!\u8fd9\u6b21\u6211\u4eec\u91c7\u7528\"\u9006\u5411\u601d\u7ef4\",\u5c0f\u6839\u5806\u89e3\u4e0d\u4e86\u6211\u4eec\u7528\u5927\u6839\u5806!\u90a3\u4e48\u662f\u600e\u4e48\u60f3\u5230\u7528\u5927\u6839\u5806\u7684\u5462?\u8bf7\u770b:\n\n\ta[1]<=a[2]<=a[3]<=...<=a[n]\n\tb[1]<=b[2]<=b[3]<=...<=b[n]\n\n\u6240\u4ee5\u6211\u4eec\u5047\u8bbe\u5806\u4e2d\u76ee\u524d\u6700\u5927\u7684\u5143\u7d20\u662fx,\u82e5\u63d2\u5165\u4e00\u4e2aa[i]+b[j]\u540e\u53d1\u73b0:\n\n\tx<=a[i]+b[j]\n\n\u90a3\u4e48,\u6839\u636ea\u7ec4\u4e0eb\u7ec4\u7684\u5355\u8c03\u6027,\u6211\u6562\u8bf4:\n\ta[i]+b[j+1]\u7edd\u4e0d\u4f1a\u4f18\u4e8ex\n\n\u90a3\u4e48,\u53cd\u6b63a[i]+b[j]\u4e5f\u4e0d\u4f18\u4e8ex,a[i]+b[j]\u53ef\u4ee5\u51fa\u5806\u4e86,a[i]+b[j+1],...,a[i]+b[n]\u90fd\u6ca1\u5fc5\u8981\u770b\u4e86,i++,j=1\u5373\u53ef\n\n\u800c\u4e14,\u6839\u636e\u5355\u8c03\u6027,\u4e4b\u540e\u8981\u5165\u5806\u5224\u65ad\u7684\u6570\u91cf\u7edd\u5bf9\u4f1a\u5f88\u5feb\u9000\u5316\u6210\u5e38\u6570\n\n\u90a3\u4e48\u8bb0\u4f4f\u9650\u5236\u597d\u5806\u7684\u5927\u5c0f\u4e3an,\u4e0d\u7136\u5185\u5b58\u4f1a\u7206,\u5efa\u8bae\u624b\u7801,\u7406\u7531:\n\n\t1.\u4e5f\u6ca1\u51e0\u4e2a\u5b57\n\t2.\u8f93\u51fa\u7b54\u6848\u524d\u53ef\u4ee5\u76f4\u63a5\u8c03sort(\u5077\u61d2)\n\t3.STL\u4f18\u5148\u961f\u5217\u662f\u7528\u52a8\u6001\u6570\u7ec4\u7684,\u6211\u4e2a\u4eba\u4e0d\u592a\u559c\u6b22,\u4e5f\u5bb9\u6613\u4e00\u4e0d\u5c0f\u5fc3\u5fd8\u8bb0\u9650\u5236\u7a7a\u95f4\n\n\u597d\u5427,\u518d\u8ddf\u4f60\u8bb2\u5427,\u8fd9\u4e2a\u60f3\u6cd5\u4e5f\u53ef\u4ee5A\u7206 P2085...\n\n~~WA~~AC\u4ee3\u7801:\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\nusing namespace std;\nint n,size;\nint a[100005],b[100005],hep[100005];\nint read(){\n\tint res=0;char ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) res=res*10+ch-'0',ch=getchar();\n\treturn res;\n}\nint top(){return hep[1];}\nint get(){\n\tint res=hep[1];\n\thep[1]=hep[size--];\n\tint fa=1,son;\n\twhile((fa<<1)<=size){\n\t\tif((fa<<1|1)>size||hep[fa<<1]>hep[fa<<1|1])\n\t\tson=fa<<1; else son=fa<<1|1;\n\t\tif(hep[fa]>hep[son]) break;\n\t\tswap(hep[fa],hep[son]); fa=son;\n\t}return res;\n}\nvoid put(int x){\n\thep[++size]=x;\n\tint son=size;\n\twhile((son>1)&&(hep[son]>hep[son>>1]))\n\tswap(hep[son],hep[son>>1]),son>>=1;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\ta[i]=read();\n\tfor(int i=1;i<=n;i++)\n\tb[i]=read();\n\tfor(int i=1;i<=n;i++)\n\tput(a[1]+b[i]);\n\tfor(int i=2;i<=n;i++)\n\tfor(int j=1;j<=n;j++){\n\t\tint x=a[i]+b[j];\n\t\tput(x);\n\t\tif(top()==x){get();break;}\n\t\telse get();\n\t}\n\tsort(hep+1,hep+1+n);\n\tfor(int i=1;i<=n;i++)\n\tprintf(\"%d%c\",hep[i],i==n?'\\n':' ');\n\treturn 0;\n}\n```\n",
        "postTime": 1579420992,
        "uid": 187629,
        "name": "0xC00000FD",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u3010\u9898\u76ee\u63cf\u8ff0\u3011\uff1a\n\u6709\u4e24\u4e2a\u957f\u5ea6\u90fd\u662fN\u7684\u5e8f\u5217A\u548cB\uff0c\u5728A\u548cB\u4e2d\u5404\u53d6\u4e00\u4e2a\u6570\u76f8\u52a0\u53ef\u4ee5\u5f97\u5230N^2\u4e2a\u548c\uff0c\u6c42\u8fd9N^2\u4e2a\u548c\u4e2d\u6700\u5c0f\u7684N\u4e2a\u3002\n\n\u3010\u8f93\u5165\u63cf\u8ff0\u3011\uff1a\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570N\uff1b\n\n\u7b2c\u4e8c\u884cN\u4e2a\u6574\u6570Ai, \u6ee1\u8db3Ai<=Ai+1\u4e14Ai<=10^9;\n\n\u7b2c\u4e09\u884cN\u4e2a\u6574\u6570Bi, \u6ee1\u8db3Bi<=Bi+1\u4e14Bi<=10^9.\n\n\u3010\u8f93\u51fa\u63cf\u8ff0\u3011\uff1a\n\u8f93\u51fa\u4ec5\u4e00\u884c\uff0c\u5305\u542bN\u4e2a\u6574\u6570\uff0c\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u8fd9N\u4e2a\u6700\u5c0f\u7684\u548c\uff0c\u76f8\u90bb\u6570\u5b57\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\n\n\u3010\u6837\u4f8b\u8f93\u5165\u3011\uff1a\n3\n2 6 6\n1 4 8\n\u3010\u6837\u4f8b\u8f93\u51fa\u3011\uff1a\n3 6 7\n\u3010\u65f6\u95f4\u9650\u5236\u3001\u6570\u636e\u8303\u56f4\u53ca\u63cf\u8ff0\u3011\uff1a\n\u65f6\u95f4\uff1a1s \u7a7a\u95f4\uff1a128M\n\n\u5bf9\u4e8e50%\u7684\u6570\u636e\u4e2d\uff0c\u6ee1\u8db31<=N<=1000\uff1b\n\n\u5bf9\u4e8e100%\u7684\u6570\u636e\u4e2d\uff0c\u6ee1\u8db31<=N<=100,000\n\n\u7b2c\u4e00\u6b21A\u7eff\u9898\uff0c\u6709\u70b9\u6fc0\u52a8\uff0c\u8fd9\u9898\u6211\u672c\u6765\u51c6\u5907\u7528\u8001\u8d3e\u8bf4\u7684\u7ed3\u6784\u4f53\u5806\u505a\uff0c\u540e\u6765\u53d1\u73b0\u90a3\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u7f16\u8bd1\u90fd\u8fc7\u4e0d\u4e86\uff08\u6211\u7edd\u4e0d\u4f1a\u8bf4\u6211\u4e0a\u8bfe\u6ca1\u542c\u76842333\uff09\uff0c\u7136\u540e\u6211\u5728\u6d1b\u8c37\u8361\u9898\u89e3\u7684\u65f6\u5019\u610f\u5916\u53d1\u73b0\u4e86\u4e00\u4e2a\u5927\u4f6c\u53d1\u4e86\u4e00\u4e2apriority_queue<pair<int, int>, vector<pair<int, int> >, greater<pair<int, int> > >q;\u8fd9\u6837\u7684\u5199\u6cd5\u53ef\u4ee5\u5728\u5806\u91cc\u538b\u4e24\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u5c31\u7528\u8fd9\u4e2aA\u4e86\n\n\u4e0a\u9762\u662f\u4ee3\u7801\u90e8\u5206\uff0c\u518d\u8bf4\u4e00\u4e0b\u601d\u8def\u5427\uff0c\u5c31a[0]+b[i],\u7136\u540e\u5982\u679ca[0]+b[j]\u88ab\u9009\u8d70\u4e86,\u5c31\u628a\u5b83\u62ff\u51fa\u6765\uff0c\u628aa[1]+b[i]\u538b\u8fdb\u53bb\uff0c\u4ee5\u6b64\u7c7b\u63a8\n\n\u4e0b\u9644\u6807\u7a0b\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n\nint i,j,k;\nint n;\nint a[100005],b[100005];\nint jl[100005];\n\npriority_queue<pair<int, int>, vector<pair<int, int> >, greater<pair<int, int> > >q;\n    \nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(j=0;j<n;j++)\n    scanf(\"%d\",&b[j]);\n    sort(a,a+n);\n    for(i=0;i<n;i++){\n    q.push(pair<int, int>(a[0]+b[i],i));\n    }\n    for(i=0;i<n;i++){\n    printf(\"%d \",q.top().first);\n    j=q.top().second;\n    q.pop();\n    q.push(pair<int, int>(a[++jl[j]]+b[j],j));\n    }\n    return 0;\n}\n    \n```\n",
        "postTime": 1561537414,
        "uid": 31719,
        "name": "jackeylove_",
        "ccfLevel": 0,
        "title": "\u5e8f\u5217\u5408\u5e76\uff08\u6211\u771f\u6ca1\u6c34\uff0c\u6362\u76ae\u4ee3\u7801\uff09"
    },
    {
        "content": "\u4e0d\u8981\u95ee\u6211\u4ece\u54ea\u91cc\u6765~\n\n\u6211\u7684[$AC$](https://www.luogu.org/recordnew/show/17984953)\u5728\u8fdc\u65b9\u2026\u2026\n\n\u65e0\u8111\u6570\u636e\u7ed3\u6784\u9009\u624b\u643a89\u884c\u4ee3\u7801\u524d\u6765\u62a5\u5230\uff01\n\n\u63a8\u6027\u8d28\u662f\u4e0d\u53ef\u80fd\u63a8\u6027\u8d28\u7684\uff0c\u8fd9\u8f88\u5b50\u90fd\u4e0d\u53ef\u80fd\u63a8\u6027\u8d28\u7684\u2026\u2026\n\n\u6b63\u89e3\u53c8\u4e0d\u4f1a\u5199\uff0c\u53ea\u80fd\u591f\u505a\u7ecf\u5178\u9898\u8fd9\u79cd\u4e1c\u897f\uff0c\u624d\u80fd\u7ef4\u6301\u5f97\u4e86\u751f\u6d3b\u7684\u6837\u5b50\u3002\n\n~~\u6ca1\u770b\u89c1A,B\u5e8f\u5217\u6709\u5e8f\u8fd9\u4e48\u660e\u663e\u7684\u63d0\u793a~~\n\n------------\n\n\u8fd9\u4e2a\u89e3\u6cd5\u9700\u8981\u5199\u4e00\u4e2aST\u8868\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u518d\u5199\u4e00\u4e2a\u5806\u7ef4\u62a4\u5168\u5c40\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u8bbe\u4e00\u4e2a\u7b54\u6848\u5143\u4e3a$\\{ans,p,l,r,f\\}$\n\n\u5206\u522b\u8868\u793a{\u7b54\u6848\uff0c\u7b54\u6848\u4f4d\u7f6e\uff0cB\u5e8f\u5217\u4e2d\u5143\u7d20\u533a\u95f4[\u5de6\uff0c\u53f3]\uff0cA\u5e8f\u5217\u4e2d\u5143\u7d20\u53f7}\n\n\u7b54\u6848\uff1a\u7528$A[f]$\u53bb\u52a0\u4e0a$B[l...r]$\u80fd\u5f97\u5230\u7684\u6700\u5c0f\u548c\uff1b\n\n\u7b54\u6848\u4f4d\u7f6e\uff1a\u4e0a\u8ff0\u6700\u5c0f\u548c\u7684B\u5e8f\u5217\u4e2d\u5143\u7d20\u53f7\uff1b\n\n\u4e00\u5f00\u59cb\u6709$n$\u4e2a\u7b54\u6848\u5143\uff0c\u5206\u522b\u4e3a{\u7b54\u6848\uff0ci\uff0c$[1,n]$} (1<=i<=n)\n\n\u9884\u5904\u7406\u4e5f\u5f88\u65b9\u4fbf\uff0c\u8d2a\u5fc3\u5730\u67e5\u8be2$B[1...n]$\u7684\u6700\u5c0f\u503c\u4e0e$A[f]$\u76f8\u52a0\u5373\u53ef\u3002\n\n\u7136\u540e\u62ff\u4e00\u4e2a\u5168\u5c40\u5806\u6765\u7ef4\u62a4\u8fd9\u4e9b\u7b54\u6848\u5143\uff0c\u5373\u53ef\u505a\u5230\u4e0d\u9057\u6f0f\u3002\n\n\u6211\u4eec\u8f93\u51fa\u4e86\u4e00\u4e2a\u7b54\u6848\u5143\uff0c\u5c31\u8981\u628a\u5b83\u67aa\u6bd9\uff0c\u4e8e\u662f\u6211\u4eec\u7531\n\n\u7b54\u6848\u5143$\\{ans,p,l,r,f\\}$\n\n\u5206\u88c2\u6210\u4e24\u4e2a\u7b54\u6848\u5143$\\{ans',p',l,p-1,f\\}$\u548c$\\{ans'',p'',p+1,r,f\\}$\n\n\u90a3\u4e48\u5c31\u4e0d\u5305\u542b$A[f]$\u4e0e$B[p]$\u76f8\u52a0\u7684\u60c5\u51b5\u4e86\u3002\n\n\u5982\u679c\u533a\u95f4\u4e3a\u7a7a\u5219\u4e0d\u653e\u8fdb\u5168\u5c40\u5806\u3002\n\n\u5177\u4f53\u89c1\u4ee3\u7801\u5427\u3002\n\n(\u7531\u4e8e\u6211\u61d2\uff0c\u628aST\u8868\u6362\u6210\u4e86\u7ebf\u6bb5\u6811)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#define MaxN 100500\nusing namespace std;\ninline unsigned int read()\n{\n  register unsigned int X=0;\n  register char ch=0;\n  while(ch<48||ch>57)ch=getchar();\n  while(ch>=48&&ch<=57)X=X*10+(ch^48),ch=getchar();\n  return X;\n}\nint n,b[MaxN],ax[MaxN];\nstruct Data\n{\n  int f,l,r,p,ans;\n  bool operator < (const Data B)const\n  {return ans>B.ans;}\n}sav,tsav;\npriority_queue<Data> t;\nstruct Node\n{int x,p;}a[MaxN<<2];\ninline void up(int num)\n{\n  if (a[num<<1].x<a[num<<1|1].x)\n  \ta[num]=a[num<<1];\n  else a[num]=a[num<<1|1];\n}\nvoid build(int l,int r,int num)\n{\n  if (l==r){\n    a[num].x=b[l];\n    a[num].p=l;\n    return ;\n  }int mid=(l+r)>>1;\n  build(l,mid,num<<1);\n  build(mid+1,r,num<<1|1);\n  up(num);\n}\nint wfl,wfr,ansx,ansp;\nvoid query(int l,int r,int num)\n{\n  if (wfl<=l&&r<=wfr){\n  \tif (a[num].x<ansx){\n  \t  ansx=a[num].x;\n  \t  ansp=a[num].p;\n  \t}return ;\n  }int mid=(l+r)>>1;\n  if (wfl<=mid)query(l,mid,num<<1);\n  if (wfr>mid)query(mid+1,r,num<<1|1);\n}\ninline void getans(Data &A)\n{\n  wfl=A.l;wfr=A.r;\n  ansx=1<<30;\n  query(1,n,1);\n  A.ans=ansx+ax[A.f];\n  A.p=ansp;\n}\nint main()\n{\n  scanf(\"%d\",&n);\n  for (int i=1;i<=n;i++)ax[i]=read();\n  for (int i=1;i<=n;i++)b[i]=read();\n  build(1,n,1);\n  for (int i=1;i<=n;i++){\n  \tsav.f=i;sav.l=1;sav.r=n;\n  \tgetans(sav);\n    t.push(sav);\n  }\n  for (int i=1;i<=n;i++){\n  \tsav=t.top();\n    printf(\"%d \",sav.ans);\n    t.pop();\n    int np=sav.p;\n  \tif (np+1<=sav.r){\n  \t  tsav=sav;\n  \t  tsav.l=np+1;\n  \t  getans(tsav);\n  \t  t.push(tsav);\n    }if (np-1>=sav.l){\n      tsav=sav;\n      tsav.r=np-1;\n      getans(tsav);\n      t.push(tsav);\n    }\n  }return 0;\n}\n```\n",
        "postTime": 1555050586,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "# \u4e00\u9053\u5f88\u597d\u7684\u5806\u4f18\u5316\u9898\n\n\u5982\u679c\u66b4\u529b\u628a\u6240\u6709$n^2$\u4e2a\u548c\u6c42\u51fa\u6765\uff0c\u518d\u6392\u5e8f\uff0c\u6700\u540e\u8f93\u51fa\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e3a$n^2$\u4e2a\u548c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^2\\log{n})$\uff0c\u663e\u7136\u8d85\u65f6\u3002\n\n# \u5982\u4f55\u4f18\u5316\n\n\u9996\u5148\uff0c\u628a$a$\u5e8f\u5217\u548c$b$\u5e8f\u5217\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u5efa\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u6570\u636e\u7ed3\u6784\u7c7b\u578b\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\u8fd9\u4e2a\u7ed3\u6784\u4f53\u91cc\u5e94\u8be5\u67093\u4e2a\u53d8\u91cf:\n\n```cpp\nstruct Note\n{\n\tint id_a,id_b,sum;\n    //id_a\u4e3a\u5f53\u524da\u5e8f\u5217\u7684\u5143\u7d20\u4e0b\u6807\n    //id_b\u4e3a\u5f53\u524db\u5e8f\u5217\u7684\u5143\u7d20\u4e0b\u6807\n    //sum\u4e3a\u4f55\u4e24\u4e2a\u5143\u7d20\u4e4b\u548c\n};\n\n```\n\n**\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5b9a\u4e49\uff1f**\n\n\u6211\u7684\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n\u9996\u5148\uff0c\u5c06$a$\u5e8f\u5217\u7684\u6240\u6709\u6570\u4e0e$b$\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u6570\uff08\u5373$b$\u5e8f\u5217\u6700\u5c0f\u7684\u6570\uff09\u76f8\u52a0\uff0c\u6309\u7167\u8fd9\u4e9b\u548c\u7684\u5927\u5c0f\u653e\u5165\u4e00\u4e2a\u5c0f\u6839\u5806\u4e2d\u3002\n\n\u63a5\u7740\uff0c\u8f93\u51fa$n$\u4e2a\u6700\u5c0f\u7684\u503c\u3002\n\n\u9996\u5148\u53d6\u51fa\u5806\u9876\u5143\u7d20\uff0c\u5c06\u5806\u9876\u5143\u7d20\u4e2d\u7684\u548c\u8f93\u51fa\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u5806\u9876\u5143\u7d20\u7684$id_b++$,\u5c31\u662f\u5c06$id_a$\u5bf9\u5e94\u7684\u503c\u4e0e\u66f4\u5927\u7684$b$\u5e8f\u5217\u7684\u503c\u76f8\u52a0\uff0c\u518d\u5c06$sum$\u66f4\u65b0\uff0c\u518d\u653e\u5165\u5806\u5185\uff0c\u8fd9\u6837\u5faa\u73af$n$\u6b21\u5c31\u53ef\u4ee5\u4e86\u3002\n\n# \u65f6\u95f4\u590d\u6742\u5ea6\n\n\u8981\u8f93\u51fa$n$\u4e2a\u6700\u5c0f\u7684\u6570\uff0c\u5806\u7684$pop$\u548c$push$\u64cd\u4f5c\u90fd\u662f$O(\\log{n})$,\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a$O(n\\log{n})$\uff0c\u53ef\u8fc7\u3002\n\n$AC$ $Code$\n\n```cpp\n#include <iostream>\n#include <queue>//STL\u662f\u4e2a\u597d\u4e1c\u897f\n#include <algorithm>\nusing namespace std;\n\nstruct Note\n{\n\tint id_a,id_b,sum;\n\t//id_a\u4e3a\u5f53\u524da\u5e8f\u5217\u7684\u5143\u7d20\u4e0b\u8868\n    //id_b\u4e3a\u5f53\u524db\u5e8f\u5217\u7684\u5143\u7d20\u4e0b\u8868\n    //sum\u4e3a\u4f55\u4e24\u4e2a\u5143\u7d20\u4e4b\u548c\n\tbool operator < (const Note& a) const{\n\t\treturn sum>a.sum;\n\t}//STL\u7684\u5806\u9700\u8981\u91cd\u8f7d\u8fd0\u7b97\u7b26\n};\n\npriority_queue<Note> pq;//\u5c0f\u6839\u5806\nint n,a[100010],b[100010];\n\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>b[i];\n\tsort(a+1,a+1+n);//a\u5e8f\u5217\u6392\u5e8f\n\tsort(b+1,b+1+n);//b\u5e8f\u5217\u6392\u5e8f\n\tfor(int i=1;i<=n;i++){\n\t\tpq.push((Note){i,1,a[i]+b[1]});\n\t}//\u5f80\u5806\u91cc\u653e\u503c\n\tfor(int i=1;i<=n;i++){\n\t\tNote now=pq.top();\n\t\tpq.pop();\n\t\tcout<<now.sum<<\" \";\n\t\tnow.id_b++;\n\t\tnow.sum=a[now.id_a]+b[now.id_b];\n\t\tpq.push(now);\n\t}//\u8f93\u51fa+\u66f4\u65b0\u5806\n\tcout<<endl;//\u5f3a\u8feb\u75c7\u5e26\u6362\u884c\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\uff01\n}\n```\n\n# \u79cb\u8c46\u9ebb\u888b\uff01\u8fd8\u6ca1\u8bb2\u5b8c\uff01\n\n\u6709\u4eba\u4f1a\u5bf9\u8fd9\u6bb5\u4ee3\u7801\u53d1\u51fa\u7591\u95ee\uff1a\n```cpp\n  now.id_b++;\n  now.sum=a[now.id_a]+b[now.id_b];\n  pq.push(now);\n```\n\u5982\u679c$id_b>n$\u4e86\u600e\u4e48\u529e\uff1f$AC$\u7a0b\u5e8f\u91cc\u6ca1\u6709\u52a0\u7279\u5224\u554a\uff01\n\n\u5176\u5b9e\u4e0d\u7528\u52a0\u3002\n\n**Why?**\n\n\u56e0\u4e3a\u4f60\u53ea\u53d6$n$\u4e2a\u503c\uff0c\u6700\u574f\u7684\u60c5\u51b5\u662f\u4f60\u5bf9\u4e8e\u8fd9\u4e2a$id_a$\u7684$id_b=n$\u65f6\uff0c\u5df2\u7ecf\u53d6\u4e86$n$\u4e2a\u503c\uff0c\u4f1a\u81ea\u52a8\u8df3\u51fa\u5faa\u574f\u3002\n\n# \u771f\u00b7\u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1547995808,
        "uid": 88213,
        "name": "zhangyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u6709\u4e24\u4e2a\u957f\u5ea6\u90fd\u662fN\u7684\u5e8f\u5217A\u548cB\uff0c\u5728A\u548cB\u4e2d\u5404\u53d6\u4e00\u4e2a\u6570\u76f8\u52a0\u53ef\u4ee5\u5f97\u5230N^2\u4e2a\u548c\uff0c\u6c42\u8fd9N^2\u4e2a\u548c\u4e2d\u6700\u5c0f\u7684N\u4e2a\u3002\uff08\u8fd9\u9898\u9762\u591a\u7b80\u6d01\u554a\uff09\n\n\u9898\u89e3\uff1a\u6211\u4eec\u4ee4$f_0(x)=b_x$\uff0c\u7531\u4e8eb\u6570\u7ec4\u4e2d\u5143\u7d20\u4e0d\u4e0b\u964d\uff0c\u6240\u4ee5\u51fd\u6570\u662f\u4e0d\u4e0b\u964d\u7684\uff0c\u7136\u540e\u6211\u4eec\u518d\u4ee4$f_i(x)=a_i+b_x$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230i\u4e2a\u5355\u8c03\u7684\u51fd\u6570\uff0c\u8fd9\u9898\u5c31\u53d8\u5f97\u50cf[luogu2085](https://www.luogu.org/problemnew/show/P2085)\u4e86\uff0c\u4e00\u5f00\u59cb\u4ee4\u6240\u6709\u51fd\u6570\u7684\u81ea\u53d8\u91cfx=1\uff0c\u628an\u4e2a\u51fd\u6570\u4ee5\u51fd\u6570\u503c\u4e3a\u5173\u952e\u5b57\u6254\u8fdb\u5c0f\u6839\u5806\u91cc\uff0c\u6bcf\u6b21\u5f39\u51fa\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u51fa\u51fd\u6570\u503c\uff0c\u81ea\u53d8\u91cfx++\u518d\u6254\u56de\u53bb\u3002\n\n\u4ee3\u7801\uff1a#include\n\n\u4e0a\u9762\u7684\u90a3\u4e2ainclude\u662f\u9a97\u4f60\u7684\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<set>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n;int a[100010],b[100010];\nstruct s\n{\n    int i,j;\n    bool operator<(const s v)const\n    {\n        return a[i]+b[j]<a[v.i]+b[v.j];\n    }\n    bool operator>(const s v)const\n    {\n        return v<*this;\n    }\n};\npriority_queue<s,vector<s>,greater<s> >q; \nint main()\n{\n     cin>>n;\n     for(int i=1;i<=n;i++)\n     \tcin>>a[i];\n    for(int i=1;i<=n;i++)\n     \tcin>>b[i];\n    for(int i=1;i<=n;i++)\n     \tq.push((s){i,1});\n    for(int i=1;i<=n;i++)\n    {\n        s x=q.top();\n        q.pop();\n        cout<<a[x.i]+b[x.j]<< ' ';\n        x.j++;\n        q.push(x);\n    }\n    return 0l;\n}\n```\n\u8fd8\u8981\u6ce8\u610f\u5230\u7684\u662fSTL\u4e2d\u5982\u679c\u60f3\u8981\u4f7f\u7528greater<\u7ed3\u6784\u4f53>\u7684\u8bdd\u8981\u91cd\u8f7d\u4e00\u4e2a\u5927\u4e8e\u53f7\u3002greater\u662f\u4e2a\u4eff\u51fd\u6570\u6a21\u677f\uff1a\n```\ntemplate <class T>\nstruct greater:binary_function<T,T,bool>\n{\n    bool operator() (const T& x, const T& y)const\n    {\n        return x>y;\n    }\n};\n```",
        "postTime": 1519968049,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "P.S.\u8fd9\u4e2a\u65b9\u6cd5\u7684\u7075\u611f\u6765\u81eaP1392\uff0c\u770b\u5230\u6ca1\u4eba\u63d0\u5230\uff0c\u8d76\u7d27\u6c34\u4e00\u53d1\u3002\n\n\u9996\u5148\uff0c\u6700\u5c0f\u7684\u4e00\u4e2a\u548c\u663e\u7136\u662f$a[1]+b[1]$\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u5c1d\u8bd5\u627e\u7b2c\u4e8c\u4e2a\u548c\u3002\u4e0d\u96be\u60f3\u5230\uff0c\u56e0\u4e3aa\u6570\u7ec4\u4e2d\u5927\u4e8e\u7b49\u4e8e$a[1]$\u7684\u6700\u5c0f\u6570\u4e3a$a[2]$\uff0cb\u6570\u7ec4\u4e5f\u7c7b\u4f3c\u3002\u56e0\u6b64\uff0c\u7b2c\u4e8c\u4e2a\u548c\u663e\u7136\u4e3a$\\min\\{a[1]+b[2],a[2]+b[1]\\}$\uff0c\u5047\u8bbe\u7b2c\u4e8c\u4e2a\u548c\u4e3a$a[1]+b[2]$\uff0c\u5219\u7b2c\u4e09\u4e2a\u548c\u4e3a$\\min\\{a[1]+b[3],a[2]+b[2],a[2]+b[1]\\}$\u3002\n\n\u6211\u4eec\u5c06\u8fd9\u4e2a\u60c5\u51b5\u63a8\u5e7f\u5230\u4e00\u822c\uff0c\u5219\uff1a**\u82e5$a[i]+b[j]$\u662f\u7b2ck\u4e2a\u548c\uff0c\u5219$a[i]+b[j+1],a[i+1]+b[j]$\u662f\u7b2ck+1\u4e2a\u548c\u7684\u5907\u9009\u7b54\u6848\uff0c\u5728\u6c42\u51fa$a[i]+b[j]$\u65f6\u88ab\u6dd8\u6c70\u7684\u5907\u9009\u7b54\u6848\u4e5f\u662f\u7b2ck+1\u4e2a\u548c\u7684\u5907\u9009\u7b54\u6848\uff0c\u6ca1\u6709\u5176\u4ed6\u7684\u5907\u9009\u7b54\u6848\u4e86**\u3002\n\n\u77e5\u9053\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u4e00\u5207\u5c31\u597d\u529e\u4e86\u3002\n\n\u6211\u4eec\u5148\u4ee4$a[1]+b[1]$\u8fdb\u5165\u4e8c\u53c9\u5806\uff0c\u7136\u540e\u6309\u7167\u89c4\u5219\uff0c\u4e0d\u65ad\u5730\u6dfb\u52a0\u5907\u9009\u7b54\u6848\uff0c\u4e22\u5165\u4e8c\u53c9\u5806\u6c42\u51fa\u7b2ck\u5c0f\u3002\n\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u7ed3\u6784\u4f53\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6807\u8bb0\uff0c\u6807\u8bc6\u662f\u5426\u7531$a[i]+b[j+1]$\u8f6c\u79fb\u8fc7\u6765\u3002\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u8bf7\u4ed4\u7ec6\u4f53\u4f1a\u4ee3\u7801\u3002\n\n\u6700\u540e\u6211\u52a0\u5165\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u5e38\u6570\u4f18\u5316\uff0c\u987a\u5229\u5361\u5230\u6682\u65f6\u76842019rk1\u3002\n\n\u6700\u540e\u9644\u4e0a\u5f00O2 64ms\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\n#define ri register int\n#define IOSIZE 10000000\nstatic char in[IOSIZE],*p=in,out[IOSIZE],*q=out,ch[20],*t=ch;\ninline int read(){\n    reg int x=0;\n    while(*p<48)++p;\n    while(*p>47)x=(x<<1)+(x<<3)+(*p++^48);\n    return x;\n}\ninline void write(int x){\n    !x&&(*q++=48);\n    while(x)*t++=x%10+48,x/=10;\n    while(t!=ch)*q++=*--t;\n}\nconst int n=2;\nstatic int m,a[100001],b[100001],c[100001];\nstruct Node{\n    int x,y,sum,pre;\n};\nstruct cmp{\n    inline bool operator()(Node a,Node b){return a.sum>b.sum;}\n};\nint main(){\n    fread(in,1,IOSIZE,stdin);\n    priority_queue<Node,vector<Node>,cmp>Q;\n    m=read();\n    for(reg int *i=c+1,*j=c+m+1;i!=j;++i)*i=read();\n    for(reg int i=1;i<n;++i){\n        for(reg int *j=a+1,*e=a+m+1,*k=b+1,*l=c+1;j!=e;++j,++k,++l)\n            *j=*l,*k=read();\n        while(!Q.empty())Q.pop();\n        Q.push(Node{1,1,a[1]+b[1],0});\n        for(reg int j=1;j<=m;++j){\n            Node now=Q.top();Q.pop();\n            int x=now.x,y=now.y,sum=now.sum,pre=now.pre;\n            Q.push(Node{x,y+1,a[x]+b[y+1],1});\n            pre||(Q.push(Node{x+1,y,a[x+1]+b[y],0}),0);\n            c[j]=sum;\n        }\n    }\n    for(reg int *i=c+1,*j=c+m+1;i!=j;++i)write(*i),*q++=' ';\n    fwrite(out,1,q-out,stdout);\n    return 0;\n}\n```\n\u7801\u5b57\u4e0d\u5bb9\u6613\uff0c\u89c9\u5f97\u4e0d\u9519\u8bf7\u70b9\u4e2a\u8d5e\u5427\uff01",
        "postTime": 1554733761,
        "uid": 75765,
        "name": "Starlight237",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u9996\u5148\u770b\u9898\u610f\uff0c\u662f\u6240\u6709\u6570\u90fd\u8981\u76f8\u52a0\uff0c\u610f\u601d\u5c31\u662f\u8bf4\u7528\u7b2c\u4e00\u6392\u7684\u6570\u6bcf\u6b21\u90fd\u52a0\u4e0a\u7b2c\u4e8c\u6392\u7684\u6570\u5c31\u5b8c\u6210\u6240\u6709\u6570\u7684\u76f8\u52a0\uff0c\u63a5\u4e0b\u6765\u8fdb\u884c\u64cd\u4f5c\u3002\n\n1  \u7528\u7b2c\u4e00\u6392\u7b2c\u4e00\u4e2a\u6570\u5b57\u904d\u5386\u76f8\u52a0\u7b2c\u4e8c\u6392\u6240\u6709\u6570\u5b57\u5f97\u5230N\u4e2a\u6570\u5b57\uff0c\u7528\u8fd9N\u4e2a\u6570\u5b57\u5efa\u7acb\u4e00\u4e2a\u5927\u6839\u5806\u3002\n\n2  \u63a5\u7740\u7528\u7b2c\u4e00\u6392\u5269\u4e0b\u7684\u6570\u5b57\u904d\u5386\u76f8\u52a0\u7b2c\u4e8c\u6392\u6570\u5b57\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u6bd4\u5927\u6839\u5806\u7684\u5806\u9876\u90fd\u8fd8\u8981\u5927\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4ee3\u66ff\u5b83\u5e76\u4e14\u91cd\u65b0\u6392\u5e8f\uff08\u7528stl..\uff09\u5426\u5219\u5c31break\uff08\u56e0\u4e3a\u8981\u6c42\u6700\u5c0f\u7684N\u4e2a\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u6bd4\u6700\u5927\u7684\u5806\u9876\u8fd8\u8981\u5927\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u7ee7\u7eed\u4e0b\u53bb\u4e86\u3002\uff09\n\n\u4e0b\u9762\u662f\u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint a[100001],b[100001];\nint c[100001];\nint main()\n{\n    int n;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&b[i]);\n    int k=a[1];\n    for(int i=1;i<=n;i++)\n    {\n        c[i]=k+b[i];\n    }\n    make_heap(c+1,c+1+n);\n    for(int i=2;i<=n;i++)\n    for(int j=1;j<=n;j++)\n    {\n        if(a[i]+b[j]<c[1])\n        {\n            c[1]=a[i]+b[j];\n            pop_heap(c+1,c+1+n);\n        }\n        else\n        break;\n    }\n    make_heap(c+1,c+1+n,greater<int>());\n    k=n;\n    for(int i=1;i<=n;i++)\n    {\n        cout<<c[1]<<\" \";\n        pop_heap(c+1,c+1+k,greater<int>());\n        k--;\n    }\n}\n```",
        "postTime": 1493820630,
        "uid": 26099,
        "name": "\u67e0\u6aac\u5473\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u5176\u5b9e\u6211\u4e00\u5f00\u59cb\u5199\u7684\u65f6\u5019\u4ee5\u4e3a\u8fd9\u53ea\u662f\u4e00\u4e2a50\u5206\u7a0b\u5e8f\u4e4b\u7c7b\u7684\uff0c\u7ed3\u679c\u505a\u4e86\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4f18\u5316\uff0c\u5c31\u8fc7\u4e86\u3002\n\n\u7531\u4e8e\u9898\u610f\u8bf4\u4ecea\u4e2d\u53d6\u4e00\u4e2a\uff0c\u4eceb\u4e2d\u53d6\u4e00\u4e2a\uff0c\u8fd0\u7528\u4e00\u4e2amark\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u6bcf\u4e2aa\u5339\u914d\u5230\u54ea\u4e2ab\u4e86\uff0c\u5f53\u7b2ci\u6b21\u5bfb\u627e\u65f6\u76f4\u63a5\u4ecemark\u5904\u5f00\u59cb\n\n\u4e0d\u8fc7\u8fd9\u4e5f\u6ca1\u6709\u6839\u672c\u6027\u89e3\u51b3\u95ee\u9898\uff0c\u4f9d\u65e7\u662fn^2\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e8e\u662f\u4e4e\u6211\u52a0\u4e86\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4f18\u5316\uff08\u4f30\u8ba1\u51fa\u6570\u636e\u7684\u4eba\u6ca1\u60f3\u5230\uff09\n\n\u6bcf\u6b21\u5bfb\u627e\u6700\u5c0f\u503c\u7684\u65f6\u5019\uff0c\u5f53a[j]+b[mark[n]]>\u5f53\u524d\u6700\u5c0f\u503c\u65f6\u5373\u7ec8\u6b62\u67e5\u8be2\uff08\u6613\u77e5mark[n]\u662fmark\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684\uff0c\u56e0\u4e3a\u6570\u5217\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u5f53\u6b64\u7ec8\u6b62\u6761\u4ef6\u6210\u7acb\u65f6\uff0c\u4e4b\u540e\u4e0d\u53ef\u80fd\u627e\u5230\u65b0\u7684\u6700\u5c0f\u503c\uff09\n\n\u5176\u5b9e\u5e94\u8be5\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662fo(n^2)\uff0c\u4e0d\u8fc7\u51fa\u9898\u8005\u6570\u636e\u4e4b\u95f4\u95f4\u9694\u8f83\u5927\uff0c\u6240\u4ee5\u8fd9\u5c31\u8fc7\u4e8623333\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\nint mark[100010];\nint a[100010];\nint b[100010];\nint main()\n{\n    int n;\n    cin>>n;\n    for (int i=1;i<=n;i++)\n        cin>>a[i];\n    for (int i=1;i<=n;i++)\n        cin>>b[i];\n    for (int i=1;i<=n;i++) mark[i]=1;\n    for (int i=1;i<=n;i++)\n    {\n        int temp=1;\n        int mini=1000000000;\n        for (int j=1;j<=n;j++)\n        {\n            if (a[j]+b[mark[j]]<mini)\n            {\n                temp=j;\n                mini=a[j]+b[mark[j]];\n            }\n            if (a[j]+b[mark[n]]>mini)\n            {                \n                mark[temp]++;\n                break; \n            }\n        }\n        cout<<mini<<\" \";\n    }\n}\n```",
        "postTime": 1478794022,
        "uid": 7650,
        "name": "oscar123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u5728\u5218\u6c5d\u4f73\u7684\u84dd\u4e66\u4e0a\u7684\u4f18\u5148\u961f\u5217\u6709\u8be6\u7ec6\u7684\u8bc1\u660e\u2014\u2014\u5148\u628aS=a[1-n]+b[1]\u653e\u5230\u5806\u4e2d\uff0c\u8bb0\u5f55b\u7684\u4e0b\u6807p\uff0c\u7136\u540e\u5f39\u51fa\u4e00\u4e2a\uff0c\u5c31\u88c5\u4e00\u4e2aS1=S-b[p]+b[p+1],\u4e00\u5b9a\u662f\u53ef\u4ee5\u5f97\u5230\u6b63\u89e3\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct sd{\n    int s,bb;\n};\nint a[100005],b[100005],n;\nbool operator < (const sd &v1,const sd &v2)\n{\n    return v1.s>v2.s;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&b[i]);\n    sort(a+1,a+1+n);\n    sort(b+1,b+1+n);\n    priority_queue<sd>q;\n    for(int i=1;i<=n;i++)\n    {\n        sd t;\n        t.s=a[i]+b[1];\n        t.bb=1;\n        q.push(t); \n    }\n    for(int i=1;i<=n;i++)\n    {\n        sd t=q.top();q.pop();\n        int B=t.bb,S=t.s;\n        printf(\"%d \",S);\n        if(B+1<=n) \n        {\n         t.s=S-b[B]+b[B+1];\n         t.bb=B+1;\n         q.push(t);\n        }\n    }\n}\n```\n/\\*\n5\n1 3 2 4 5\n\n6 3 4 1 7\n\n\\*/",
        "postTime": 1473687030,
        "uid": 14410,
        "name": "Ghost_lzy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u5341\u4e07\u7ea7\u6570\u636e\uff0c\u8981\u4e48\u662fO\uff08n\uff09,\u8981\u4e48\u662fO\uff08n log n\uff09\u3002\n\n\u5f88\u660e\u663e\u524d\u8005\u4e0d\u73b0\u5b9e\uff0c\u6240\u4ee5\u8003\u8651\u540e\u8005\u3002\n\n\u6b64\u9898\u53ef\u4ee5\u62ff\u5806\u505a\u3002\n\n\u7531\u4e8e\u9898\u4e2d\u8bf4a\u4e0eb\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u4e0d\u7528\u6392\u5e8f\u3002\n\n\u7ef4\u62a4\u5c0f\u6839\u5806\u5373\u53ef\u3002\n\n```cpp\ntype rec=record\nx,y:longint;\nend;{\u6bcf\u4e2a\u5806\u8282\u70b9\u6709\u4e24\u4e2a\u6027\u8d28\uff0ca\u4e0eb\u5f97\u548c\u4e0eb\u503c\u7684\u6807\u53f7}\nvar a,b:array [1..100000] of longint;\ndui:array [1..100000] of rec;\nn,i:longint;\nprocedure swap(var x,y:longint);\nbegin\n  x:=x+y;\n  y:=x-y;\n  x:=x-y;\nend;\nfunction min(x,y:longint):longint;\nbegin\n  if y>n then exit(x);\n  if dui[x].y<dui[y].y then exit(x);\n  exit(y);\nend;\nprocedure down(x:longint);//\u628a\u8c03\u6574\u8fc7\u7a0b\u6253\u8fdb\u5b50\u7a0b\u5e8f\u4f1a\u6e05\u695a\nvar k,i:longint;\nbegin\n  i:=x;\n  while 2*i<=n do\n  begin\n    k:=min(2*i,2*i+1);\n    if dui[k].y<dui[i].y then\n    begin\n      swap(dui[k].x,dui[i].x);\n      swap(dui[k].y,dui[i].y);\n      i:=k;\n    end\n    else exit;\n  end;\nend;\nbegin\n  read(n);\n  for i:=1 to n do\n    read(a[i]);\n  for i:=1 to n do\n    read(b[i]);\n  for i:=1 to n do\n  begin\n    dui[i].x:=1;\n    dui[i].y:=a[i]+b[1];\n  end;\n  for i:=n div 2 downto 1 do{\u8fd9\u5176\u5b9e\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e38\u6570\u4f18\u5316\uff0c\u800c\u4e14\u80fd\u5c11\u6253up}\n    down(i);\n  for i:=1 to n do\n  begin\n    write(dui[1].y,' ');\n    inc(dui[1].x);\n    dui[1].y:=dui[1].y-b[dui[1].x-1]+b[dui[1].x];\n    down(1);\n  end;{\u4e3b\u4f53}\nend.\n```",
        "postTime": 1471404995,
        "uid": 13940,
        "name": "pupuvovovovovo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u4e2a\u89e3\u6bcb\u5eb8\u7f6e\u7591\u662f\u4e24\u4e2a\u5e8f\u5217\u9996\u5143\u7d20\u7684\u548c\u3002\n\n\u7136\u540e\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u5982\u679ca[i]\u4e0eb[j]\u88ab\u9009\u62e9\u4e86\uff0c\u90a3\u4e48a[i+1]b[j]\u548ca[i]b[j+1]\u5c31\u6210\u4e86\u65b0\u7684\u6709\u53ef\u80fd\u88ab\u9009\u62e9\u7684\u89e3\u3002\u56e0\u6b64\u6bcf\u8fdb\u884c\u4e00\u6b21\u9009\u62e9\uff0c\u5c31\u5c06\u90a3\u4e24\u4e2a\u65b0\u7684\u53ef\u80fd\u6027push\u8fdb\u5806\u91cc\uff0c\u6bcf\u6b21\u9009\u62e9\u53d6\u5806\u9876\u5373\u53ef\u3002\n\n\u7136\u800c\u8fd9\u6837\u53ef\u80fd\u4f1a\u628a\u540c\u4e00\u5bf9\u6570\u5b57\u91cd\u590dpush\u8fdb\u5806\uff0c\u56e0\u6b64\u6211\u4eec\u518d\u5efa\u4e00\u4e2aset\uff08\u4e5f\u53ef\u4ee5\u7528\u54c8\u5e0c\u8868\uff09\u7ef4\u62a4\u4e00\u5806\u6570\u5b57\u662f\u5426\u8fdb\u8fc7\u5806\uff0c\u6bcf\u6b21\u5f80\u5806\u91ccpush\u6570\u5bf9\u65f6\u540c\u65f6\u4e5f\u628a\u5b83\u4eecinsert\u8fdb\u96c6\u5408\u4e2d\u3002\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6O\uff08nlogn\uff09\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<set>\n#define gm 100001\nusing namespace std;\nint a[gm],b[gm],n;\nstruct cp\n{\n    int x,y;\n    int val(){return a[x]+b[y];}\n    bool operator < (const cp &z) const\n    {return a[z.x]+b[z.y]<a[x]+b[y];}\n}now;\nstruct dt\n{\n    int x,y;\n    void set(const cp &z)\n    {x=z.x;y=z.y;}\n    bool operator < (const dt &z) const\n    {return x<z.x||(x==z.x&&y<z.y);}\n}k;\npriority_queue<cp> h;\nset<dt> s;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(int i=0;i<n;i++)\n    scanf(\"%d\",&b[i]);\n    h.push((cp){0,0});\n    for(int i=1;i<=n;i++)\n    {\n        now=h.top();h.pop();\n        printf(\"%d \",now.val());\n        now.x++;\n        k.set(now);\n        if(!s.count(k))\n        h.push(now),s.insert(k);\n        now.x--;now.y++;\n        k.set(now);\n        if(!s.count(k))\n        h.push(now),s.insert(k);\n    }\n    return 0;\n}\n```",
        "postTime": 1470657702,
        "uid": 21467,
        "name": "Patchuli_Go",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u7528c++STL\u4e2d\u7684\u96c6\u5408\u6765\u5b8c\u6210\u7c7b\u4f3c\u4e8e\u5806\u7684\u5de5\u4f5c\u3002\n\n```cpp\n#include<algorithm>\n#include<cmath>\n#include<iostream>\n#include<set>\nusing namespace std; \nstruct node{\n    int n;\n    int k;\n    bool operator > (const node& a) const{\n        return this->n>a.n;\n    }\n    bool operator < (const node& a) const{\n        return this->n<a.n;\n```\n}//\u91cd\u8f7d\n```cpp\n};\nint main(){\n    int n;\n    cin>>n;\n    long long c,d,k=0;\n    int i,j;\n    multiset<node>s;\n    node f;\n    long long a[n+1],b[n+1],p[n+1];\n    for(i=1;i<=n;i++){\n        cin>>a[i];\n        p[i]=1;\n    }\n    a[0]=0;\n    for(i=1;i<=n;i++){\n        cin>>b[i];\n    }\n    b[0]=0;\n    sort(a,a+n+1);\n    sort(b,b+n+1);\n    for(i=1;i<=n;i++){\n        f.n=a[i]+b[p[i]];\n        f.k=i;\n        s.insert(f);\n    }\n    for(i=1;i<=n;i++){\n        f=*s.begin();\n        cout<<f.n<<' ';\n        p[f.k]++;\n        s.erase(s.begin());\n        f.n=a[f.k]+b[p[f.k]];\n        s.insert(f);\n    }\n    return 0;\n}\n```",
        "postTime": 1469255812,
        "uid": 20337,
        "name": "Only_My_Whisper",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "100000\u7684\u6570\u636e\u5f88\u5927\uff0c\u4f60\u4e0d\u53ef\u80fd\u5148\u628a100000^2\u4e2a\u548c\u7ed9\u7b97\u51fa\u6765\u554a\u3002\n\n\u6240\u4ee5\u9700\u8981\u52a8\u6001\u6c42\u548c \u548c \u66f4\u65b0\u6700\u5c0f\u5806\u3002\n\n\n\u4e0b\u9762\u7528\u7684\u662frelated[]\u6570\u7ec4 \u6765\u8bb0\u5f55b[i]\u662f\u4e0e\u7b2c\u51e0\u4e2aa[] \u76f8\u52a0\u7684\u3002\n\n\u521d\u59cb\u5316\uff1ad[i]=a[1]+b[i],related[i]=1;\n\n\n\u6bcf\u8f93\u51fa\u4e00\u4e2a\u6700\u5c0f\u503c\u540e \u5c31\u66f4\u65b0 \u8be5\u6700\u5c0f\u503c\u7684a[]\u5173\u7cfb\uff1a\n\n\nd[1]=d[1]-a[related[1]]+a[++related[1]];\n\n\u7136\u540e\u7ef4\u62a4\u6700\u5c0f\u5806\uff1aShitDown(1,n);\n\n```cpp\n\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<algorithm>\n#define LEFT(x) (x<<1)\n#define RIGHT(x) ((x<<1)+1)\nusing namespace std;\nconst int maxn=100000+10;\nint n;\nint a[maxn],b[maxn],d[maxn],related[maxn];\nvoid ShitDown(int low,int hight)\n{\n    int i=low;\n    int j=LEFT(i);\n    int base=d[i],tr=related[i];\n    while(j<=hight)\n    {\n        if(j<hight&&d[j+1]<d[j])j++;\n        if(base<d[j]) break;\n        else\n        {\n            d[i]=d[j];\n            related[i]=related[j];\n            i=j;\n            j=LEFT(i);\n        }\n    }\n    d[i]=base;\n    related[i]=tr;\n}\nint main()\n{\n    freopen(\"s.in\",\"r\",stdin);\n    freopen(\"s.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&b[i]);    \n    sort(a+1,a+1+n);sort(b+1,b+1+n);\n    for(int i=1;i<=n;i++){\n        d[i]=a[1]+b[i],related[i]=1;\n    }\n    for(int i=n/2;i>=1;i--)    ShitDown(i,n);\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d \",d[1]);\n        d[1]=d[1]-a[related[1]]+a[++related[1]];\n        ShitDown(1,n);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1446646794,
        "uid": 8973,
        "name": "iYuer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5982\u679c\u6ca1\u6709\u6570\u636e\u7684\u8bdd\uff0c\u57fa\u672c\u4e0a\u7528\u66b4\u529b\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\uff0c\u4f46\u662f\u5982\u679c\u6570\u636e\u653e\u5927\u5230100000\uff0c\u4e00\u770b\u5c31\u77e5\u9053\n\n\n\u4f7f\u7528O(NlogN)\u7684\u7b97\u6cd5\u89e3\u51b3\u3002\n\n\u5982\u679c\u4f7f\u7528\u5806\u7684\u8bdd\uff0c\u601d\u8def\u5e94\u8be5\u6765\u8bf4\u662f\u975e\u5e38\u6e05\u695a\u7684\u3002\u9996\u5148\u5bf9\u4e24\u4e2a\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u81ea\u7136\u4f7f\u7528\u6700\u5feb\u7684\u5feb\u6392\u3002\u63a5\n\n\n\u4e0b\u6765\u662f\u91cd\u70b9\uff0c[u]\u9996\u5148\u9700\u8981\u660e\u767d\uff1a\u5982\u679c\u9009\u62e9\u4e86a[i]\uff0c\u90a3\u4e48\u9996\u5148\u80af\u5b9a\u662fa[i]+b[1]\uff0c\u5176\u6b21\u662fa[i]+b[2]\uff0c\u76f4\u5230\n\n\na[i]+b[n]\u4e3a\u6b62\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4sum[i]\u8868\u793a\u7528\u4e86a[i]\u4e4b\u540e\u73b0\u5728\u7684\u548c\u7684\u5927\u5c0f\uff0cq[i]\u8868\u793a\u73b0\u5728\u4f7f\u7528\n\n\n\u7684a[i]\uff0c\u4e0e\u5176\u914d\u5bf9\u7684\u662fb[q[i]]\u3002[/u]**\u6ce8\u610f\uff1a\u8fd9\u4e2ai\u4e0d\u4e00\u5b9a\u662f\u539f\u6765\u987a\u5e8f\u4e0b\u7684\u7b2ci\u4e2a\uff0c\u800c\u662f\u6307\u5728\u5c0f\u6839\u5806\u4e2d\u7684\n\n\n\u7f16\u53f7\u4e3ai\u7684\u3002**\n\n\u7136\u540e\u5efa\u7acb\u4e00\u4e2a\u6700\u5c0f\u5806\uff0c\u9996\u5148\u8f93\u51fasum[1]\uff0c\u4e5f\u5c31\u662f\u73b0\u5728\u6700\u5c11\u7684\uff0c\u7136\u540e\u662fq[1]\u52a0\u4e0a\u4e00\uff0c\u66f4\u65b0sum[1]\u7684\u503c\uff0c\n\n\n\u7136\u540e\u7ef4\u62a4\u961f\u5373\u53ef\u3002\n\n[color=red]\u6ce8\u610f\uff1a\u7ef4\u62a4\u65f6\u4e0d\u8981\u5fd8\u4e86q\u6570\u7ec4\u3002[/color]\n\n\n```delphi\ntype\n  arr=array[0..100001] of longint;\nvar\n  a,b,q,sum:arr;\n  i,n,m,k,t:longint;\nprocedure qsort(r,l:longint; var x:arr);\nvar\n  i,j,mid,t:longint;\nbegin\n  i:=r; j:=l;\n  mid:=x[random(j-i+1)+i];\n  repeat\n    while x[i]<mid do i:=i+1;\n    while x[j]>mid do j:=j-1;\n    if i<=j then\n      begin\n        t:=x[i]; x[i]:=x[j]; x[j]:=t;\n        i:=i+1; j:=j-1;\n      end;\n  until i>j;\n  if i<l then qsort(i,l,x);\n  if r<j then qsort(r,j,x);\nend;//\u6392\u5e8f\nbegin\n  readln(n);\n  for i:=1 to n do read(a[i]);\n  readln;\n  for i:=1 to n do read(b[i]);\n  readln;\n  qsort(1,n,a);\n  qsort(1,n,b);\n  for i:=1 to n do\n    begin\n      q[i]:=1;\n      sum[i]:=a[i]+b[1];//\u521d\u59cb\u5316sum\u548cq\u7684\u503c\n    end;\n  for i:=1 to n do\n    begin\n      k:=i;\n      while (k>1) and (sum[k]<sum[k shr 1]) do\n        begin\n          t:=sum[k];\n          sum[k]:=sum[k shr 1];\n          sum[k shr 1]:=sum[k];\n          t:=q[k];\n          q[k]:=q[k shr 1];\n          q[k shr 1]:=q[k];\n          k:=k shr 1;\n        end;\n    end;//\u5efa\u7acb\u6700\u5c0f\u5806\n  m:=n;\n  for i:=1 to n do\n    begin\n      write(sum[1],' ');//\u8f93\u51fa\u6700\u5c0f\u503c\n      q[1]:=q[1]+1;//q\u6570\u7ec4\u52a0\u4e00\n      sum[1]:=sum[1]-b[q[1]-1]+b[q[1]];//\u66f4\u65b0sum[1]\u503c\n      k:=1;\n      while (k shl 1<=m) and ((sum[k]>sum[k shl 1]) or (sum[k]>sum[k shl 1+1])) do\n        begin\n          if k shl 1=m then k:=k shl 1 else\n            if sum[k shl 1]<sum[k shl 1+1] then\n              k:=k shl 1 else k:=k shl 1+1;\n          t:=sum[k];\n          sum[k]:=sum[k shr 1];\n          sum[k shr 1]:=t;\n          t:=q[k];\n          q[k]:=q[k shr 1];\n          q[k shr 1]:=t;\n        end;//\u7ef4\u62a4\u5806\n    end;\nend.\n```",
        "postTime": 1385721639,
        "uid": 734,
        "name": "lych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd~~\u795e\u5947~~\u7684\u601d\u8def(\u5f53\u7136\u662f\u9519\u7684\uff0c\u53ea\u662f\u4e3a\u4e86\u62ff\u5206)\uff1a\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u5f97\u5230$n$\u4e2a\u6700\u5c0f\u7684\uff0c\u6240\u4ee5$a$\u3001$b$\u5e8f\u5217\u540e\u9762\u7684\u90fd\u5f88\u5927\uff0c\u57fa\u672c\u4e0a\u662f\u4e0d\u53ef\u80fd\u88ab\u9009\u4e0a\u7684\uff08\u6982\u7387\u5f88\u5c0f\uff09\u3002\u6240\u4ee5\u501f\u52a9\u8fd9\u4e00\u70b9\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u7684\u9009\u62e9$a$\u3001$b$\u5e8f\u5217\u524d\u9762\u7684\u8f83\u5c0f\u7684\u4e00\u90e8\u5206\u6765\u6c42\u4e58\u79ef\uff0c\u5373$\\sqrt{n}*\\sqrt{n}=n$\n\u4f46\u662f\u8fd9\u5e76\u4e0d\u4e00\u5b9a\u6b63\u786e\uff0c\u6bd4\u5982\n\n3\n\n1 9 10\n\n2 3 4\n\n\u8d2a\u5fc3\u9009\u5230\u4e861$*$2\u30011$*$3\u30019$*$2\u30019$*$3\n\n\u4f46\u5e76\u4e0d\u662f\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u591a\u9009\u51e0\u4e2a\uff08$k$\uff09\n\n\u9009$a$\u5e8f\u5217\u548c$b$\u5e8f\u5217\u7684\u524d$\\sqrt{n}+k$\u9879\u53d6\u524d$n$\u5c0f\u7684\uff08$k$\u662f\u4e00\u4e2a\u5e38\u6570\uff09\n\n\u6700\u540e\uff0c\u7ecf~~\u4eba\u5de5\u4eb2\u6d4b~~\u5f97\u51fa\u5f53$k$\u53d6$300$\u65f6\u53ef\u4ee5$\\colorbox{white}{\\color{yellowgreen}{AC}}$\n\n$code$\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<cmath>\nusing namespace std;\npriority_queue<int>q;\nint n,m,k;\nint a[100005],b[100005],c[100005];\nint mian(){\n\tcin>>n;\n\tm=min(n,sqrt(n)+300);\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tfor(int i=1;i<=n;i++)cin>>b[i];\n\tfor(int i=1;i<=m;i++)for(int j=1;j<=m;j++)q.push(a[i]+b[j]);\n\twhile(q.size()>n)q.pop();\n\twhile(!q.empty())c[++k]=q.top(),q.pop();\n\tfor(int i=n;i>=1;i--)cout<<c[i]<<\" \";\n\treturn 0;\n} \n```\n\u5371(zhen)\u9669(ai)\u64cd(sheng)\u4f5c(ming)\uff0c\u8bf7\u52ff\u6a21\u4eff\uff01\uff01\uff01",
        "postTime": 1573212106,
        "uid": 172124,
        "name": "\u5c0f\u67ef",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "## \u3010\u9898\u76ee\u63cf\u8ff0\u3011\uff1a\n\n\u6709\u4e24\u4e2a\u957f\u5ea6\u90fd\u662fN\u7684\u5e8f\u5217A\u548cB\uff0c\u5728A\u548cB\u4e2d\u5404\u53d6\u4e00\u4e2a\u6570\u76f8\u52a0\u53ef\u4ee5\u5f97\u5230N^2\u4e2a\u548c\uff0c\u6c42\u8fd9N^2\u4e2a\u548c\u4e2d\u6700\u5c0f\u7684N\u4e2a\u3002\n\n### \u3010\u8f93\u5165\u63cf\u8ff0\u3011\uff1a\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570N\uff1b\n\n\u7b2c\u4e8c\u884cN\u4e2a\u6574\u6570Ai, \u6ee1\u8db3Ai<=Ai+1\u4e14Ai<=10^9;\n\n\u7b2c\u4e09\u884cN\u4e2a\u6574\u6570Bi, \u6ee1\u8db3Bi<=Bi+1\u4e14Bi<=10^9.\n\n### \u3010\u8f93\u51fa\u63cf\u8ff0\u3011\uff1a\n\n\u8f93\u51fa\u4ec5\u4e00\u884c\uff0c\u5305\u542bN\u4e2a\u6574\u6570\uff0c\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u8fd9N\u4e2a\u6700\u5c0f\u7684\u548c\uff0c\u76f8\u90bb\u6570\u5b57\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\n\n####         \u89e3\u9898\u601d\u8def\uff1a\n           \u5bf9\u4e8e\u7b2ci\u5c0f\u7684\u6570\uff0c\u786e\u5b9a\u7b2ci\u5c0f\u7684\u6570\u7684\u8303\u56f4\uff0c\u5b58\u5165\u5230\u6808\u91cc\u9762\uff0c\u8fdb\u884c\u67e5\u627e\u64cd\u4f5c\n           \u8f93\u51fa\u7684\u5219\u4e3a\u6808\u9876\u5143\u7d20\n####            \u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nconst int N=100005;\nstruct Node{\n\tint x,y,sum;\n};\npriority_queue < Node,vector<Node>,greater<Node> > q;\nint a[N],b[N];\n\nbool operator >(const Node &aa,const Node &bb){\n\treturn aa.sum>bb.sum;\n}\nint main(){\n\tint n,cur=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&b[i]);\n\tsort(a+1,a+1+n);\n\tfor(int i=1;i<=n;i++)q.push((Node){1,i,a[1]+b[i]});\n\twhile(cur<n){\n\t\tint SUM=q.top().sum,X=q.top().x,Y=q.top().y;\n\t\tprintf(\"%d \",SUM);\n\t\tq.pop();\n\t\tX++;\n\t\tq.push((Node){X,Y,a[X]+b[Y]});\n\t\tcur++;\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1561603655,
        "uid": 31543,
        "name": "paper_plane",
        "ccfLevel": 0,
        "title": "\u5e8f\u5217\u5408\u5e76"
    },
    {
        "content": "**\u9898\u76ee\u63cf\u8ff0**\n\n\u6709\u4e24\u4e2a\u957f\u5ea6\u90fd\u662fN\u7684\u5e8f\u5217A\u548cB\uff0c\u5728A\u548cB\u4e2d\u5404\u53d6\u4e00\u4e2a\u6570\u76f8\u52a0\u53ef\u4ee5\u5f97\u5230N^2\u4e2a\u548c\uff0c\u6c42\u8fd9N^2\u4e2a\u548c\u4e2d\u6700\u5c0f\u7684N\u4e2a\u3002\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570N\uff1b\n\n\u7b2c\u4e8c\u884cN\u4e2a\u6574\u6570A[i],\u6ee1\u8db3A[i]\u2264A[i+1] \u4e14A[i]<=10^9\n\n\u7b2c\u4e09\u884cN\u4e2a\u6574\u6570B[i],\u6ee1\u8db3B[i]\u2264B[i+1] \u4e14B[i]<=10^9\n\n**\u3010\u6570\u636e\u89c4\u6a21\u3011**\n\n\u5bf9\u4e8e50%\u7684\u6570\u636e\u4e2d\uff0c\u6ee1\u8db31<=N<=1000\uff1b\n\n\u5bf9\u4e8e100%\u7684\u6570\u636e\u4e2d\uff0c\u6ee1\u8db31<=N<=100000\u3002\n\n**\u8f93\u51fa\u683c\u5f0f\uff1a**\n\n\u8f93\u51fa\u4ec5\u4e00\u884c\uff0c\u5305\u542bN\u4e2a\u6574\u6570\uff0c\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u8fd9N\u4e2a\u6700\u5c0f\u7684\u548c\uff0c\u76f8\u90bb\u6570\u5b57\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\n\n**\u8f93\u5165\u6837\u4f8b**\n\n3\n\n2 6 6\n\n1 4 8\n\n**\u8f93\u51fa\u6837\u4f8b**\n\n3 6 7\n\n**\u601d\u8def\uff1a**\n\n\u9996\u5148\uff0c\u628aA\u548cB\u4e24\u4e2a\u5e8f\u5217\u5206\u522b\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53d8\u6210\u4e24\u4e2a\u6709\u5e8f\u961f\u5217\u3002\u8fd9\u6837\uff0c\u4eceA\u548cB\u4e2d\u5404\u4efb\u53d6\u4e00\u4e2a\u6570\u76f8\u52a0\u5f97\u5230N2\u4e2a\u548c\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e9b\u548c\u770b\u6210\u5f62\u6210\u4e86n\u4e2a\u6709\u5e8f\u8868/\u961f\u5217\uff1a\n\nA[1]+B[1] <= A[1]+B[2] <= \u2026 <= A[1]+B[N]\n\nA[2]+B[1] <= A[2]+B[2] <= \u2026 <= A[2]+B[N]\n\n\u2026\u2026\n\nA[N]+B[1] <= A[N]+B[2] <= \u2026 <= A[N]+B[N]\n\n\u63a5\u4e0b\u6765\uff0c\u5c31\u76f8\u5f53\u4e8e\u8981\u5c06\u8fd9N\u4e2a\u6709\u5e8f\u961f\u5217\u8fdb\u884c\u5408\u5e76\u6392\u5e8f\uff1a\n\n\u9996\u5148\uff0c\u5c06\u8fd9N\u4e2a\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u653e\u5165\u4e00\u4e2a\u5806\u4e2d\uff1b\n\n\u7136\u540e\uff1b\u6bcf\u6b21\u53d6\u51fa\u5806\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u82e5\u8fd9\u4e2a\u6700\u5c0f\u503c\u6765\u81ea\u4e8e\u7b2ck\u4e2a\u961f\u5217\uff0c\u90a3\u4e48\uff0c\u5c31\u5c06\u7b2ck\u4e2a\u961f\u5217\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u653e\u5165\u5806\u4e2d\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int N=100010;\n\nint n;\nint a[N],b[N];\n\npriority_queue<int,vector<int>,greater<int> >p1;\n\nint main() {\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n; i++)\n        scanf(\"%d\",&a[i]);\n    for(int i=1; i<=n; i++)\n        scanf(\"%d\",&b[i]);\n    for(int i=1; i<=sqrt(n); i++) {\n        for(int j=i; j<=n/i; j++)\n            p1.push(a[j]+b[i]);\n        for(int j=i+1; j<=n/i; j++)\n            p1.push(a[i]+b[j]);\n    }\n    for(int i=0; i<n; i++) {\n        printf(\"%d \",p1.top());\n        p1.pop();\n    }\n    printf(\"\\n\");\n    return 0;\n}\n\n```\n\n\n",
        "postTime": 1561533464,
        "uid": 31077,
        "name": "Rachel\u00b7Gardner",
        "ccfLevel": 0,
        "title": "P1631 \u5e8f\u5217\u5408\u5e76"
    },
    {
        "content": "### ~~\u770b\u5230\u6ca1\u4ec0\u4e48\u4eba\u7528make_heap()\uff0c\u6240\u4ee5\u6c34\u4e00\u4e2a\u7528\u5806\u51fd\u6570+\u7b80\u5355\u4f18\u5316AC\u7684\u9898\u89e3~~\n# STL+\u5806\u51fd\u6570+\u4f18\u5316=AC\n\n\n------------\n\n## \u5173\u4e8ealgorithm\u91cc\u9762\u7684make_heap\u51fd\u6570\uff1a\n#### \u5efa\u7acb\u5806\n\nmake_heap(_First, _Last, _Comp)\n\n\u9ed8\u8ba4\u662f\u5efa\u7acb\u6700\u5927\u5806\u7684\u3002\u5bf9int\u7c7b\u578b\uff0c\u53ef\u4ee5\u5728\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f20\u5165greater<int>()\u5f97\u5230\u6700\u5c0f\u5806\u3002\n\n \n\n#### \u5728\u5806\u4e2d\u6dfb\u52a0\u6570\u636e\n\npush_heap (_First, _Last)\n\n\u8981\u5148\u5728\u5bb9\u5668\u4e2d\u52a0\u5165\u6570\u636e\uff0c\u518d\u8c03\u7528push_heap()\n\n \n\n#### \u5728\u5806\u4e2d\u5220\u9664\u6570\u636e\n\npop_heap(_First, _Last)\n\n\u8981\u5148\u8c03\u7528pop_heap()\u518d\u5728\u5bb9\u5668\u4e2d\u5220\u9664\u6570\u636e\n\n#### \u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\nvector<int> heap;\n\nmake_heap(heap.begin(), heap.end());\n//\u5efa\u5806\n\nheap.push_back(x);\npush_heap(heap.begin(), heap.end());\n//\u538b\u5165\n\npop_heap(heap.begin(), heap.end());\nheap.pop_back();\n//\u5f39\u51fa\n```\n#### ~~\u6839\u636e\u5806\u7684\u6027\u8d28\u4ee5\u53ca\u5982\u4f55\u6765\u7ef4\u62a4\u8fd9\u4e2a\u5806\u5c31\u4e0d\u96be\u660e\u767d\u4e3a\u4ec0\u4e48\u5148push_back\u540e\u7528push_heap\u8fd8\u6709\u5148pop_heap\u518dpop_back~~\n## \u5206\u6790\u9898\u610f\uff1a\n#### \u7ed9\u4f60\u4e24\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217,\u5408\u5e76\u540e\u53d8\u6210\u4e00\u4e2an*n\u7684\u5e8f\u5217\uff0c\u8981\u4f60\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u524dn\u9879\uff0c\u5f88\u663e\u7136\u8fd9\u662f\u7528\u5806\u6765\u6392\u5e8f\u7684~~\u8fd1\u4f3c\u6a21\u677f\u7684\u9898~~\u6839\u636e\u8fd9\u4e2a\u60f3\u6cd5\u4e0d\u96be\u76f4\u63a5\u6253\u51fa\u8fd9\u6837\u7684\u4ee3\u7801:\n```cpp\nmake_heap(h.begin(), h.end(), greater<int>());\n//\u5806\u9876\u4e3a\u6700\u5c0f\u503c\n\nfor(int i = 1; i <= n; i++) {\n    for(int j = 1; j <= n; j++) {\n        h.push_back(a[i] + b[j]);\n        push_heap(h.begin(), h.end(), greater<int>());\n    }\n}\n\nfor(int i = 1; i <= n; i++) {\n    printf(\"%d \", h.front());\n    pop_heap(h.begin(), h.end(), greater<int>());\n    h.pop_back();\n}\n```\n#### ~~\u7136\u540e\u5c31\u4f1a\u6109\u5feb\u7684\u7206\u6389\uff0c\u5728MLE\u4e4b\u524d\u5148TLE~~\n## \u4e00\u4e2a\u7b80\u5355\u7684\u4f18\u5316\uff1a\n#### \u65e2\u7136\u53ea\u8981\u6211\u8f93\u51fa\u5e8f\u5217\u7684\u524dn\u9879\uff0c\u90a3\u6211\u4e0d\u5982\u53ea\u5efa\u7acb\u4e00\u4e2a\u5927\u5c0f\u4e3an\u7684\u5806\uff0c\u7136\u540e\u4e00\u76f4\u7ef4\u6301\u5b83\u7684\u5927\u5c0f\u4e3an\u3002\u4e3a\u4e86\u7ef4\u62a4\u5b83\u7684\u5927\u5c0f\u4e0d\u53d8\u800c\u53c8\u80fd\u8f93\u51fa\u5e8f\u5217\u524dn\u9879\uff0c\u5219\u5efa\u7acb\u4e00\u4e2a\u5806\u9876\u4e3a\u6700\u5927\u503c\u7684\u5806,\u6bcf\u6b21\u8bbf\u95ee\u5230\u6709a[i]+b[j]\u5c0f\u4e8e\u5806\u9876\u5c31\u628a\u5b83\u538b\u5165\uff0c\u540c\u65f6\u5f39\u51fa\u5806\u9876\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u7b2c\u4e8c\u79cd\u4ee3\u7801\uff1a\n```cpp\nmake_heap(h.begin(), h.end());\n//\u5806\u9876\u9ed8\u8ba4\u4e3a\u6700\u5927\u503c\n\nfor(int i = 1; i <= n; i++) {\n    h.push_back(a[1] + b[i]);\n    push_heap(h.begin(), h.end());\n    //\u5148\u8bfb\u5165\u4e00\u4e2a\u5927\u5c0f\u4e3an\uff0c\u5806\u9876\u4e3a\u6700\u5927\u503c\u7684\u5806\n}\n\nfor(int i = 2; i <= n; i++) {\n    for(int j = 1; j <= n; j++) {\n        if(a[i] + b[j] < h.front()) {\n            h.push_back(a[i] + b[j]);\n            push_heap(h.begin(), h.end());\n                \n            pop_heap(h.begin(), h.end());\n            h.pop_back();\n        }\n    }\n}\n```\n#### \u4e0d\u96be\u53d1\u73b0\u8fd9\u6837\u7684\u505a\u6cd5\u4e5f\u4f1a\u6709n^2logn\u7684\n#### \u8fdb\u4e00\u6b65\u4f18\u5316\uff1a\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5c06a[],b[]\u6392\u5e8f\u540e\u7ec4\u6210\u7684\u5e8f\u5217\u90fd\u4f1a\u6709\u4e00\u4e0b\u89c4\u5f8b\uff1a\n### 1.a[i+k]+b[1]>a[i]+b[1] (k>0)\n### 2.a[i]+b[j+k]>a[i]+b[j] (k>0)\n#### \u8fd9\u6837\u4ee5\u6765 \u53ea\u8981a[i]+b[1]\u5df2\u7ecf\u5927\u4e8e\u5806\u9876\u4e86\uff0c\u90a3\u4e4b\u540e\u7684\u5143\u7d20\u90fd\u4f1a\u5927\u4e8e\u5806\u9876\uff0c\u5c31\u4e0d\u5fc5\u5728\u5faa\u73af\u4e0b\u53bb\u4e86\u3002\u800c\u5f53a[i]+b[j]\u5df2\u7ecf\u5927\u4e8e\u5806\u9876\uff0c\u5219\u4e4b\u540e\u7684a[i]+b[j+1]~a[i]+b[n]\u90fd\u4f1a\u5927\u4e8e\u5806\u9876\uff0c\u5c31\u53ef\u4ee5\u9000\u51fa\u8fd9\u5c42\u5faa\u73af\u4e86\n```cpp\nsort(a + 1, a + 1 + n);\nsort(b + 1, b + 1 + n);\nmake_heap(h.begin(), h.end());\n\nfor(int i = 1; i <= n; i++) {\n    h.push_back(a[1] + b[i]);\n    push_heap(h.begin(), h.end());\n}\n\nfor(int i = 2; a[i] + b[1] < h.front(); i++) {\n    for(int j = 1; a[i] + b[j] < h.front(); j++) {\n        h.push_back(a[i] + b[j]);\n        push_heap(h.begin(), h.end());\n        pop_heap(h.begin(), h.end());\n        h.pop_back();\n    }\n}\n```\n## ~~\u5e9f\u8bdd\u597d\u591a~~\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```cpp\n//\u5e8f\u5217\u5408\u5e76 by Akihito\n//P1631\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nint n;\nint a[100001], b[100001], ans[100001];\n\nvector<int> h;\n\nvoid init() {\n    cin >> n;\n\n    for(int i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i]);\n\n    for(int i = 1; i <= n; i++)\n        scanf(\"%d\", &b[i]);\n\n    sort(a + 1, a + 1 + n);\n    sort(b + 1, b + 1 + n);\n    make_heap(h.begin(), h.end());\n\n    for(int i = 1; i <= n; i++) {\n        h.push_back(a[1] + b[i]);\n        push_heap(h.begin(), h.end());\n        //\u5148\u8bfb\u5165\u4e00\u4e2a\u5927\u5c0f\u4e3an\uff0c\u5806\u9876\u4e3a\u6700\u5927\u503c\u7684\u5806\n    }\n}\n\nint main() {\n    init();\n\n    for(int i = 2; a[i] + b[1] < h.front(); i++) {\n        for(int j = 1; a[i] + b[j] < h.front(); j++) {\n            //\u5728sort\u4e4b\u540e\uff0c\u5f53a[i]+b[1]>h.front\u65f6 \u5219a[i]\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\u90fd\u4f1a\u5927\u4e8e\u5806\u9876\uff0c\u6574\u4e2a\u5faa\u73af\u7ec8\u6b62\n            //\u540c\u7406\u5f53a[i]+b[j]>h.front\u65f6\uff0cb[j]\u4e4b\u540e\u7684\u5143\u7d20+a[i]\u90fd\u4f1a\u5927\u4e8e\u5806\u9876\uff0c\u8fd9\u5c42\u5faa\u73af\u5c31\u53ef\u4ee5\u7ec8\u6b62\n            h.push_back(a[i] + b[j]);\n            push_heap(h.begin(), h.end());\n            pop_heap(h.begin(), h.end());\n            h.pop_back();\n            //\u52a0\u5165\u8fd9\u4e2a\u6bd4\u5806\u9876\u8981\u5c0f\u7684\u5143\u7d20 \u5f39\u51fa\u5806\u9876\u5143\u7d20 \u7ef4\u62a4\u5806\u7684\u5927\u5c0f\u59cb\u7ec8\u4e3an\n        }\n    }\n\n    for(int i = n; i >= 1; i--) {\n    \t//\u8fd9\u91cc\u7684\u5806\u9876\u662f\u5f53\u524d\u6700\u5927\u503c \n        ans[i] = h.front();\n        pop_heap(h.begin(), h.end());\n        h.pop_back();\n    }\n\n    for(int i = 1; i <= n; i++) printf(\"%d \", ans[i]);\n\n    return 0;\n}\n```",
        "postTime": 1534311115,
        "uid": 47860,
        "name": "Akihito",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u6734\u7d20\u7684\u4e8c\u53c9\u5806\u601d\u8def\uff0c\u5728\u8f93\u51faA[i]+B[j]\u5206\u522b\u5c06A[i+1]+B[j]\u548cA[i]+B[j+1]\u52a0\u5165\u4f18\u5148\u961f\u5217\uff0c\u6ce8\u610f\u53bb\u91cd\u3002\n\u8fd8\u6709\u54ea\u4f4ddalao\u80fd\u544a\u8bc9\u6211\u90a3\u53e5\u6ce8\u91ca\u6389\u7684tie(val, ai, bi) == tpl;\u4e3a\u5565\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u2026\u2026\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <tuple>\n#include <queue>\n\nusing namespace std;\n\nconst int maxN = 100000 + 5;\n\nusing Tuple = tuple<int, int, int>;\n\nint N;\nint A[maxN], B[maxN];\n//tuple: (A[i] + B[j], i, j)\npriority_queue<Tuple, vector<Tuple>, greater<Tuple>> pque;\n\nvoid input()\n{\n    scanf(\"%d\", &N);\n    for (int i = 0; i < N; i++)\n        scanf(\"%d\", A + i);\n    for (int i = 0; i < N; i++)\n        scanf(\"%d\", B + i);\n}\n\nvoid solve()\n{\n    sort(A, A + N);\n    sort(B, B + N);\n    pque.push(make_tuple(A[0] + B[0], 0, 0));\n\n    int val, ai, bi;\n    for (int i = 0; i < N; i++)\n    {\n        auto tpl = pque.top();\n        //tie(val, ai, bi) == tpl;\n        val = get<0>(tpl);\n        ai = get<1>(tpl);\n        bi = get<2>(tpl);\n        pque.pop();\n\n        while (!pque.empty() && pque.top() == tpl)\n            pque.pop(); //remove repeating elements\n\n        printf(\"%d \", val);\n        pque.push(make_tuple(A[ai + 1] + B[bi], ai + 1, bi));\n        pque.push(make_tuple(A[ai] + B[bi + 1], ai, bi + 1));\n    }\n}\n\nint main()\n{\n    input();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1518438749,
        "uid": 49526,
        "name": "Orina_zju",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u53d1\u73b0\u5404\u4f4d\u795e\u7287\u7684\u9898\u89e3\u90fd\u662f\u5806\u7684\u6b63\u89e3\u3002\u3002\n\n\u7136\u800c\u672c\u4eba\u662f\u90a3\u4e48\u849f\u84bb\uff0c\u4ee5\u81f3\u4e8e\u4e0d\u4f1a\u5199\u5806\uff0c\u4e5f\u8bb0\u4e0d\u4f4fstl\u7684priority\\_queue\uff0c\u53ea\u597d\u7f16(xia)\u51fa(bai)\u4e00\u4e9b\u5947\u602a\u7684\u505a\u6cd5\u3002\n\n\u76f4\u63a5\u66b4\u529b\u663e\u713650\u5206\n\n\u7ebf\u6027\u590d\u6742\u5ea6\u4e0d\u73b0\u5b9e\n\n\u53ea\u597d\u5728\u590d\u6742\u5ea6\u4e2d\u7f16(xia)\u51fa(bai)\u4e00\u4e2alog\uff0c\u4e8e\u662f\u60f3\u5230\u4e86\u4e8c\u5206\u7b54\u6848\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9898\u7684\u4f18\u5316\u5c31\u662f\u62d2\u7edd\u8bbf\u95ee\u4e00\u4e9b\u4e0d\u53ef\u80fd\u6210\u4e3a\u524dn\u4e2a\u6700\u5c0f\u7684\u548c\u7684\u548c(\u6709\u70b9\u7ed5)\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e8c\u5206\u51fa\u8fd9n\u4e2a\u548c\u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u8fd9n^2\u4e2a\u548c\u4e2d\u7b2cn\u5c0f\u7684\u548c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6570x\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u7edf\u8ba1\u51fa\u8fd9n^2\u4e2a\u548c\u4e2d\u5c0f\u4e8e\u7b49\u4e8ex\u7684\u548c\u7684\u6570\u91cfsum\uff1a\n\n\u7531\u4e8ea\uff0cb\u4e24\u6570\u7ec4\u5747\u6709\u5e8f\uff0c\u5bf9\u4e8e\u4efb\u610fi\uff0c\u6211\u4eec\u627e\u51fa\u4f7fa[i]+b[j]<x\u7684\u6700\u5927j\uff0c\u663e\u7136\u5bf9\u4e8e1-j\u4e2d\u7684\u6570t\uff0c\u5747\u6709a[i]+b[t]<x\uff0c\u5373\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3aj\uff0c\u5bf9\u6bcf\u4e00\u4e2ai\u5f97\u5230\u7684j\u6c42\u548c\u5c31\u662fsum\uff0c\u53e6\u5916\u6ce8\u610f\u5230a\u6570\u7ec4\u5355\u8c03\u9012\u589e\uff0c\u5219j\u968f\u7740i\u7684\u589e\u5927\u5355\u8c03\u9012\u51cf\uff0c\u4ece\u800c\u53ef\u5c06\u590d\u6742\u5ea6\u964d\u81f3O(n)\n\n\u8fd9n\u4e2a\u548c\u7684\u6700\u5927\u503c\u663e\u7136\u5728\u533a\u95f4[ a[1]+b[1] , a[n]+b[n] ]\u4e2d\uff0c\u5bf9\u8fd9\u4e00\u533a\u95f4\u4e8c\u5206\uff0c\u627e\u5230\u6700\u5c0f\u7684x\uff0c\u4f7fsum\u5927\u4e8e\u7b49\u4e8en\n\n\u5f97\u5230x\u540e\uff0c\u6211\u4eec\u628a\u5c0f\u4e8ex\u7684\u6570\u53d6\u51fa\uff0c\u6392\u5e8f\uff0c\u5728\u4e0d\u8db3n\u4e2a\u65f6\u8865\u4e0a\u4e0ax(\u9632\u6b62x\u91cd\u590d\u8fc7\u591a\uff0c\u6d6a\u8d39\u65f6\u7a7a)\uff0c\u7136\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n\u8d34\u4e0a\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n\u00b7\u00b7\u00b7cpp\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint a[131072],b[131072],f[13001072],sum,top=0,n,ans;\ninline int read()\n{\n    int x=0;\n    char p=getchar();\n    while(p<'0'||p>'9') p=getchar();\n    while(p>='0'&&p<='9') x=x*10+p-'0',p=getchar();\n    return x;\n}\ninline void write(int x)\n{\n    if(x<0) x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n    return;\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++) a[i]=read();\n    for(int i=1;i<=n;i++) b[i]=read();\n    int l=a[1]+b[1],r=a[n]+b[n];\n    while(l<=r){\n        unsigned int mid=(l+r)>>1,j=n,sum=0;\n        for(int i=1;i<=n;i++){\n            while(a[i]+b[j]>mid&&j>0) j--;\n            sum+=j;            \n        }\n        if(sum>n) r=mid-1,ans=mid;\n        if(sum<n) l=mid+1;\n        if(sum==n) l=mid,ans=mid,r=mid-1;\n    }\n    l=ans;\n    int j=n;\n    for(int i=1;i<=n;i++){\n        while(a[i]+b[j]>=l&&j>0) j--;\n        for(int k=1;k<=j;k++)\n            f[++top]=a[i]+b[k];\n    }\n    for(int i=top+1;i<=n;i++)\n        f[i]=l;\n    sort(f+1,f+n+1);\n    for(int i=1;i<=n;i++)\n        write(f[i]),putchar(' ');\n    return 0;\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1501470760,
        "uid": 7018,
        "name": "a1048576",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "AC\u8fc7\u540e\uff0c\u53d1\u73b0\u81ea\u5df1\u7684\u601d\u8def\u7adf\u7136\u548c\u697c\u4e0b\u67d0\u4f4d\u5927\u4f6c\u5dee\u4e0d\u591a\uff1f\uff08\u96fe\uff09\n\n\u4f46\u662f\uff0c\u8981\u8bf4\u7684\u662f\uff0c\u867d\u7136\u697c\u4e0b\u90a3\u4f4d\u5927\u4f6c\u601d\u8def\u633a\u6e05\u6670\uff0c\u4f46\u5199\u51fa\u6765\u7684\u4ee3\u7801\u8c8c\u4f3c\u6709\u70b9\u590d\u6742\u554a\uff0c\u6211\u62c5\u5fc3\u53ef\u80fd\u4f1a\u770b\u4e0d\u61c2\uff0c\u6240\u4ee5\u8fd9\u91cc\u5199\u4e00\u4e2a\u7b80\u5316\u7248\u7684\n\n\u5206\u6790\uff1a\n\n\u540c\u6837\u662f\u5c06$a_1+b_1,a_1+b_2,.....,a_1+b_n$\u538b\u5165\u5806\u4e2d\uff0c\u7136\u540e\u53d6\u51fa\u6700\u5c0f\u5143\u7d20\uff0c\u518d\u7ef4\u62a4\u8fd9\u4e2a\u5806\uff0c\u518d\u5c06$a_i_+_1+b_j$\u538b\u5165\u5806\u4e2d\u3002\n\n\u56e0\u4e3aa\uff0cb\u5747\u4e3a\u5e8f\u5217\uff0c\u6545\u6ee1\u8db3$a_i+b_j>=a_i_+_1+b_j$\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u53d6\u51fa\u524dn\u4e2a\u6570\u5b57\u3002\n\n\u7531\u4e8e\u538b\u5806\u548c\u53d6\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a$log_2n$\uff0c\u800c\u6bcf\u8f6e\u64cd\u4f5c\u5747\u9700\u89812\u6b21\uff08\u7b2c\u4e00\u6b21\u53d6\u5806\uff0c\u7b2c\u4e8c\u6b21\u538b\u5806\uff09\uff0c\u518d\u52a0\u4e0a\u4e4b\u524d\u7684\u8f93\u5165\u538b\u5806\u64cd\u4f5c\uff0c\u8981\u64cd\u4f5cn\u6b21\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$nlog_2n$\u3002\n\n\u4e3a\u4e86\u5b58\u50a8i\uff0c\u6211\u4eec\u7528\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u5806\uff1a\u5efa\u7acb\u4e00\u4e2a\u4e8c\u7ef4\u5c0f\u6839\u5806heap[100010][2]\uff0c$heap_i_0$\u7528\u4e8e\u5b58\u50a8\u5806\u4e2d\u539f\u6709\u7684\u6570\u636e\uff0c$heap_i_1$\u7528\u4e8e\u5b58\u50a8i\uff08\u8fd9\u6837\u624d\u80fd\u505a\u5230i+1\uff09\n\n\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u4f46\u8981\u5f04\u61c2\u7684\u662f\u601d\u60f3\u3002\n\n\u4ee3\u7801\uff08\u52a1\u5fc5\u770b\u5b8c\u5206\u6790\uff09\uff1a\n\n```cpp\n#include<cstdio>\nvoid swap(int &a,int &b){int tmp = a;a = b;b= tmp;}\nint n,heap[100010][2],a[100010],b[100010],heap_size;\nvoid put(int value,int i){\n    heap[++heap_size][0] = value,heap[heap_size][1] = i;\n    int now = heap_size,next;\n    while(now > 1){\n        next = now >> 1;\n        if(heap[now][0] >= heap[next][0]) return;\n        swap(heap[now][0],heap[next][0]);\n        swap(heap[now][1],heap[next][1]); \n        now = next;\n    }\n}\nint get(){\n    int value = heap[1][0],flag = heap[1][1],now = 1,next;\n    heap[1][0] = heap[heap_size][0],heap[1][1] = heap[heap_size--][1];\n    while(now << 1 <= heap_size){\n        next = now << 1;\n        if(next < heap_size && heap[next + 1][0] < heap[next][0]) next++;\n        if(heap[next][0] >= heap[now][0]) break;\n        swap(heap[now][0],heap[next][0]);\n        swap(heap[now][1],heap[next][1]); \n        now = next; \n    }\n    put(value - a[flag++] + a[flag],flag);\n    return value;\n}\n//\u6b63\u5e38\u538b\u5806\uff0c\u53d6\u5806\u64cd\u4f5c \nint main(){\n    scanf(\"%d\",&n);\n    for(int i = 1;i <= n;i++) scanf(\"%d\",&a[i]);//\u8bfb\u5165\u5e8f\u5217a \n    for(int i = 1;i <= n;i++){\n        scanf(\"%d\",&b[i]);//\u8bfb\u5165\u5e8f\u5217b \n        put(a[1] + b[i],1); //\u5c06a[1]+b[i]\u538b\u5806 \n    }\n    while(n--) printf(\"%d \",get());//\u5faa\u73afn\u6b21\u8f93\u51fa\u7ed3\u679c \n    return 0;\n}\n```",
        "postTime": 1500555451,
        "uid": 19778,
        "name": "water_mi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u8fd8\u662f\u6bd4\u8f83\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u624b\u6253\u5806\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u7ec3\u4ee3\u7801\u80fd\u529b\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u5806\u7684\u539f\u7406\u6709\u66f4\u597d\u7684\u7406\u89e3\uff0c\u5982\u679c\u771f\u6b63\u638c\u63e1\u4e86\u5806\uff0c\u6253\u7684\u65f6\u95f4\u4e0d\u5fc5stl\u6162\uff0c\u800c\u5728noip\u65f6\u53ef\u4ee5\u5927\u5927\u7684\u51cf\u5c0f\u5e38\u6570\uff0c\u591a\u62ff\u70b9\u5206\u3002\n\n\u6211\u505a\u8fd9\u9898\u7684\u601d\u60f3\u662f\u8fd9\u6837\u7684\uff0c\u5148\u5c06a[1]+b[1],a[1]+b[2]+.....+a[1]+b[n]\u538b\u5165\u5806\u4e2d\uff0c\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\uff08\u7ef4\u62a4\u5c0f\u6839\u5806\uff09\uff0c\u5c06a[i]\u6539\u6210a[i+1]\uff0c\u538b\u56de\u5806\u4e2d\uff0c\u9274\u4e8e\u521a\u5f00\u59cb\u65f6a,b\u5747\u4e3a\u5355\u8c03\u5411\u4e0a\uff0c\u6240\u4ee5a[i]+b[j]\u5fc5\u5b9a\u4f18\u4e8ea[i+1]+b[j]\uff0c\u6240\u4ee5\u8fd9\u79cd\u60f3\u6cd5\u53ef\u4ee5\u5b9e\u73b0\uff0c\u800c\u6bcf\u6b21\u53ea\u52a8a\u800c\u4e0d\u52a8b\u5219\u53ef\u4fdd\u8bc1\u6ca1\u6709\u91cd\u590d\u3002\n\n\u4e00\u4e0b\u6ce8\u91ca\u7565\u9700\u5806\u7684\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\uff0c\u82e5\u5bf9\u5806\u4e00\u7a8d\u4e0d\u901a\u5219\u53ef\u5148\u505a\u4e00\u4e9b\u77e5\u8bc6\u94fa\u57ab\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define N (100000+10)\nusing namespace std;\nint a[N],b[N],size;\nstruct node{\n    int ia,ib,data;\n}q[N*2];//\u5bf9\u4e8e\u5806\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u5b58\u4e09\u4e2a\u53c2\u6570\uff0c\u5176\u5b9e\u53ea\u7528\u4e24\u4e2a\uff0cia\u8868\u793aa\u4e2d\u7684\u7b2c\u51e0\u4e2a\uff0cib\u540c\u7406\uff0cdata\u8868\u793a\u8fd9\u4e24\u4e2a\u6570\u7684\u548c\nvoid up(int x){//up\u64cd\u4f5c\n    while (q[x].data<q[x/2].data){//\u5f53\u6211\u6bd4\u7236\u4eb2\u8282\u70b9\u5c0f\u7684\u65f6\u5019\u5c31\u5c06\u6211\u4e0a\u79fb\n        node t;\n        t=q[x];//\u4e0a\u79fb\u5373\u4e3a\u4ea4\u6362\n        q[x]=q[x/2];\n        q[x/2]=t;\n        x=x/2;//\u7ee7\u627f\u7236\u4eb2\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u7ee7\u7eed\u4e0a\u79fb\uff0c\u76f4\u5230\u79fb\u5230\u6539\u79fb\u7684\u4f4d\u7f6e\n    }\n}\nvoid down(int x){//\u4e0b\u79fb\u64cd\u4f5c\n    while (x*2<=size){//\u5728\u4e24\u4e2a\u513f\u5b50\u4e2d\u627e\u5c0f\u7684\u7ee7\u627f\uff0c\u5269\u4e0b\u7684\u539f\u7406\u540cup\n        int c=x*2;\n        if (x*2+1<=size){\n            if (q[x*2+1].data<q[c].data) c=x*2+1;\n        }\n        if (q[x].data>q[c].data){\n            node t;\n            t=q[x];\n            q[x]=q[c];\n            q[c]=t;\n            x=c;\n        }\n        else return;\n    } \n}\nnode pop(){//\u5f39\u51fa\u5806\u9876\n    node r;;//\u8fd9\u79cd\u65b9\u6cd5\u505a\u5806\u7684\u5220\u9664\u6bd4\u8f83\u5e38\u89c1\uff0c\u5373\u628a\u5806\u9876\u548c\u5806\u6700\u540e\u7684size\u70b9\u4e92\u6362\uff0c\u8bb2size--\uff0c\u81ea\u7136\u5220\u9664\uff0c\u7136\u540e\u7ee7\u7eed\u7ef4\u62a4\n    r.ia=q[1].ia;\n    r.ib=q[1].ib;\n    r.data=q[1].data//\u8fd9\u91cc\u4e3a\u5f39\u51fa\uff0c\u63a5\u4e0b\u6765\u4e3a\u5220\u9664\n    node t;\n    t=q[1];\n    q[1]=q[size];\n    q[size]=t;\n    size--;\n    down(1);//\u8fd9\u91cc\u5b9e\u73b0\u7684\u662f\u5220\u9664\u5806\u9876\u7684\u64cd\u4f5c\uff0c\u82e5\u8981\u5220\u9664\u5806\u5185\u4efb\u610f\u5143\u7d20\u5219\u5148\u4e0a\u79fb\u540e\u4e0b\u79fb\uff0c\u65b9\u6cd5\u548c\u5220\u9664\u5806\u9876\u76f8\u540c\n    return r;\n}\nvoid ins (int ia,int ib,int data){//\u63d2\u5165\u64cd\u4f5c\uff0c\u63d2\u5165\u540e\u7ef4\u62a4\u5c0f\u6839\u5806\n    q[++size].ia=ia; q[size].ib=ib; q[size].data=data;\n    up(size);\n}\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&b[i]);\n    for (int j=1;j<=n;j++) ins(1,j,a[1]+b[j]);\n    int tot=n;\n    while (tot>0){\n        tot--;\n        node c=pop(),e;\n        e.ia=c.ia+1; e.ib=c.ib; e.data=c.data-a[c.ia]+a[e.ia];//\u7b97\u6cd5\u5728\u5f00\u5934\u90e8\u5206\u5df2\u505a\u89e3\u91ca\n        printf(\"%d \",c.data);\n        ins(e.ia,e.ib,e.data);        \n    }\n    //printf(\"\\n%d\\n\",size);\n    //for (int i=1;i<=size;i++) printf(\"%d %d %d\\n\",q[i].ia,q[i].ib,q[i].data);\n    return 0;\n}\n```",
        "postTime": 1500196636,
        "uid": 15232,
        "name": "Michael_Li",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    },
    {
        "content": "\u53d1\u73b0\u6211\u7684\u601d\u8def\u4e0e\u697c\u4e0b\u7684\u697c\u4e0b\u5dee\u4e0d\u591a\u2026\u2026\n\n\u90a3\u4f4d\u5927\u795e\u7684\u8bb2\u89e3\u5df2\u7ecf\u633a\u660e\u4e86\u4e86\u3002\n\n\u4e3a\u5f25\u8865\u4ed6\u6ca1\u6709\u4ee3\u7801\u7684\u7f3a\u9677\uff0c\u672c\u849f\u84bb\u65e0\u803b\u5730\u53d1\u4e0a\u4ee3\u7801\u2026\u2026\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n\nstruct node{\n    int v,ai,bi;\n};\n\nbool operator <(node a,node b){return a.v>b.v;}\n\nint n;\nint a[100005],b[100005];\npriority_queue<node>q;\n\nint main(){\n    int i,j;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n    for(i=1;i<=n;i++)scanf(\"%d\",&b[i]);\n    \n    for(i=1;i<=n;i++)q.push((node){a[1]+b[i],1,i});\n    \n    node t;\n    for(i=1;i<=n;i++){\n        t=q.top();\n        printf(\"%d \",t.v);\n        q.pop();\n        q.push((node){a[t.ai+1]+b[t.bi],t.ai+1,t.bi});\n    }\n    \n    //for(i=1;i<=n;i++)printf(\"%d \",q.top()),q.pop();\n    \n    return 0;\n}\n```",
        "postTime": 1498900347,
        "uid": 6973,
        "name": "\u6613\u6781feng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1631 \u3010\u5e8f\u5217\u5408\u5e76\u3011"
    }
]