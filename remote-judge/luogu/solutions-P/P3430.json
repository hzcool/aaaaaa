[
    {
        "content": "~~\u770b\u5230\u697c\u4e0a\u4e24\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\u6ca1\u6709\u8bc1\u660e\uff0c\u4e8e\u662f\u6211\u5c31\u8bf4\u4e24\u53e5~~\n\n## \u5199\u5728\u524d\u9762\n\n\u505a\u5230\u8fd9\u9898\u65f6\u6211\u601d\u8003\u4e86\u826f\u4e45\uff0c\u770b\u5b8c\u9898\u89e3\u540e\u53c8\u6709\u4e00\u79cd\u5947\u602a\u7684\u611f\u89c9\uff0c\u5982\u679c\u4f60\u4e5f\u89c9\u5f97\u8fd9\u9053\u9898\u6709\u4e00\u79cd\u7384\u4e4e\u7684\u611f\u89c9\uff0c\u4e0d\u59a8\u770b\u4e00\u4e0b\u8fd9\u7bc7\u9898\u89e3\n\n## \u7b56\u7565\n\n\u5982\u679c\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5728\u4e0d\u5728\u540c\u4e00\u884c\uff0c\u7ed9\u4e24\u4e2a\u6570\u6240\u5728\u7684\u5217\u7684\u7f16\u53f7\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a0\u7684\u8fb9\n\n\u5982\u679c\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5728\u540c\u4e00\u884c\uff0c\u7ed9\u4e24\u4e2a\u6570\u6240\u5728\u7684\u5217\u7684\u7f16\u53f7\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a1\u7684\u8fb9\n\n\u7ed9\u6bcf\u4e2a\u8054\u901a\u5757\u7684\u70b9\u9ed1\u767d\u67d3\u8272\uff081\u8fb9\u8fde\u63a5\u7684\u70b9\u989c\u8272\u76f8\u53cd\uff0c0\u8fb9\u8fde\u63a5\u7684\u70b9\u989c\u8272\u76f8\u540c\uff09\uff0c\u7b54\u6848\u6bcf\u6b21\u52a0\u4e0a\u6bcf\u4e2a\u8054\u901a\u5757\u9ed1\u70b9\u548c\u767d\u70b9\u4e2a\u6570\u7684\u6700\u5c0f\u503c\uff08\u8054\u901a\u5757\u662f\u4ec0\u4e48\uff0c\u8bf7\u5f80\u4e0b\u770b\uff09\n\n## \u8bc1\u660e\n\n### \u6570\u7684\u6027\u8d28\n\u9996\u5148\u6211\u4eec\u5206\u6790\u8fd9\u4e2a\u9898\u7ed9\u51fa\u7684\u6570\u7684\u6027\u8d28\uff0c\u53d1\u73b0\u4e24\u4e2a\u76f8\u540c\u6570\u5728\u540c\u4e00\u884c\u7684\u8bdd\uff0c\u5fc5\u987b\u628a\u4e00\u4e2a\u6570\u4ea4\u6362\u4e0b\u53bb\uff0c\u90a3\u6211\u4eec\u4e0d\u59a8\u8bbe\u6bcf\u4e00\u5217\u4ea4\u6362\u540e\u72b6\u6001\u4e3a\u9ed1,\u4ea4\u6362\u524d\u72b6\u6001\u4e3a\u767d\uff0c\u663e\u7136\u4e00\u4e2a\u5217\u8981\u4e48\u88ab\u4ea4\u6362\u4e86\uff0c\u8981\u4e48\u6ca1\u88ab\u4ea4\u6362\u3002\u6211\u4eec\u8fde1\u7684\u8fb9\u8bf4\u660e\u8fd9\u4e24\u5217\u4e00\u5b9a\u4e0d\u5728\u540c\u4e00\u4e2a\u72b6\u6001\u91cc\uff0c\u8fde0\u7684\u8fb9\u8bf4\u660e\u4e24\u5217\u4e00\u5b9a\u5728\u540c\u4e00\u4e2a\u72b6\u6001\u91cc\u3002\n\n### \u8054\u901a\u5feb\u6027\u8d28\n\u9996\u5148\uff0c\u6211\u4eec\u53ea\u7ed9\u76f8\u540c\u7684\u6570\u6240\u5728\u7684\u5217\u8fde\u8fb9\uff0c\u8003\u8651\u6240\u6709\u53ef\u80fd\u6709\u8d21\u732e\u7684\u8fb9\uff08\u6709\u8d21\u732e\u6307\u4e0d\u662f\u81ea\u73af\u7684\u8fb9\uff09\uff0c\u6700\u591an\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u6240\u4ee5\u6700\u591an\u6761\u8fb9\u3002\u6bcf\u4e00\u5217\u6709\u4e24\u4e2a\u683c\u5b50\uff0c\u6240\u4ee5\u6bcf\u4e00\u5217\u6700\u591a\u8fde\u4e24\u6761\u8fb9\uff0c\u4e8e\u662f\uff0c\u8054\u901a\u5757\u7684\u6027\u8d28\u5f88\u663e\u7136\u4e86\uff0c\u8981\u4e48\u662f\u73af\uff0c\u8981\u4e48\u662f\u94fe\u3002\n\n### \u67d3\u8272\u6027\u8d28\n\u9996\u5148\uff0c\u5982\u679c\u8054\u901a\u5757\u662f\u94fe\uff0c\u90a3\u9ed1\u767d\u67d3\u8272\u53d6\u6700\u5c0f\u8272\u5757\u662f\u975e\u5e38\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u4ea4\u6362\u6700\u5c0f\u9700\u8981\u6539\u53d8\u7684\u72b6\u6001\u662f\u6700\u4f18\u7684\u4e14\u4e00\u5b9a\u53ef\u884c\u7684\n\n\u7684\u6211\u4eec\u8003\u8651\u73af\uff0c\u73af\u4e0a\u552f\u4e00\u5b58\u5728\u7684\u95ee\u9898\u5c31\u662f\uff0c\u662f\u5426\u4f1a\u51fa\u73b0\u5947\u6570\u4e2a\u6743\u503c\u4e3a1\u7684\u8fb9\uff0c\u4f7f\u4e24\u70b9\u4e0d\u80fd\u5339\u914d\n\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u7ec4\u4e0d\u9700\u8981\u4ea4\u6362\u7684\u6570\u5217\uff0c\u4f8b\u5982\n\n\t\t 1  2  3  4  5\n \t\t 5  1  2  3  4\n\u8fd9\u91cc\u9762\u7684\u6570\u4e24\u4e24\u76f8\u8fde\uff0c\u6784\u6210\u4e86\u4e00\u4e2a\u8fb9\u6743\u90fd\u4e3a0\u7684\u56fe\uff0c\u63a5\u7740\u8003\u8651\u53d1\u751f\u51b2\u7a81\n\n\t\t 1  2  3  3  4\n\t  \t 4  1  2  5  5\n\u6211\u4eec\u77e5\u9053\u6bcf\u5217\u6700\u591a\u8fde\u4e24\u6761\u8fb9\uff0c\u5982\u679c\u8fd9\u4e00\u5217\u53d1\u751f\u51b2\u7a81\uff0c\u5219\u6b64\u5217\u5269\u4f59\u80fd\u8fde\u7684\u8fb9\u53ea\u5269\u4e0b\u4e00\u6761\uff0c\u53e6\u4e00\u5217\u51b2\u7a81\u540c\u7406\uff0c\u6b64\u65f6\u53d1\u751f\u51b2\u7a81\u7684\u884c\u91cc\u53ef\u7528\u70b9\u51cf\u5c11\u4e86\u4e24\u4e2a\uff0c\u6211\u4eec\u53c8\u77e5\u9053\uff0c\u5982\u679c\u75280\u8fb9\u8fde\u63a5\u4e24\u4e2a\u5217\uff0c\u9700\u8981\u6bcf\u884c\u5404\u53d6\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u628a\u8fd9\u51b2\u7a81\u7684\u4e24\u5217\u7528\u5947\u6570\u4e2a1\u8fb9\u8fde\u6210\u73af\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\n### \u6240\u4ee5\uff0c\u8fd9\u6837\u8fde\u8fb9\u540e\uff0c\u5217\u4e4b\u95f4\u4e00\u5b9a\u80fd\u5f62\u6210\u5b8c\u7f8e\u7684\u72b6\u6001\u5339\u914d\uff0c\u6839\u636e\u72b6\u6001\u5339\u914d\u8d2a\u5fc3\u53d6\u6700\u5c0f\u5373\u53ef\n## \u8bc1\u6bd5\n          ",
        "postTime": 1565597449,
        "uid": 121618,
        "name": "Accoty_AM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3430 \u3010[POI2005]DWU-Double-row\u3011"
    },
    {
        "content": "\u697c\u4e0a\u5de8\u4f6c\u8bb2\u5f97\u592a\u597d\u4e86%%%%%orz\n\n\u849f\u84bb\u6765\u52a0\u4e00\u4e9b\u81ea\u5df1\u7684\u7406\u89e3\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u6709\u4e00\u4e9b\u58eb\u5175\uff0c\u4ed6\u4eec\u7684\u5728\u54ea\u4e2a\u961f\u4f0d\u91cc\u5176\u5b9e\u662f\u4e0d\u76f8\u5e72\u7684\u3002\n\n\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a\uff08\u62ec\u53f7\u5185\u4e3a\u7f16\u53f7\uff09\n\n1(0) 2(1) 3(2)\n\n1(3) 2(4) 3(5)\n\n\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u5176\u5b9e0\u4e0e1\uff0c0\u4e0e2\uff0c1\u4e0e2\u7b49\u7b49\u7b49\u7b49\u4e4b\u95f4\u600e\u4e48\u7ad9\u662f\u4e00\u70b9\u8054\u7cfb\u90fd\u6ca1\u6709\u3001\u76f8\u4e92\u72ec\u7acb\u7684\u3002\n\n\u800c0\u548c3\uff0c1\u548c4\uff0c2\u548c5\u662f\u6709\u5173\u7cfb\u7684\uff08\u5b83\u4eec\u6c38\u8fdc\u7ad9\u4e0d\u5230\u540c\u4e00\u884c\uff09\n\n\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u6570\u636e\uff0c\u4e5f\u53ef\u80fd\u80fd\u591f\u5206\u51fa\u5f88\u591a\u4e2a\u8054\u901a\u5feb\uff0c\u4f7f\u5f97\u5b83\u4eec\u95f4\u4e92\u4e0d\u76f8\u5e72\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u8054\u901a\u5757\uff0c\u6211\u4eec\u90fd\u53d6\u6700\u5c0f\u7684\u3001\u80fd\u591f\u4f7f\u5f97\u8054\u901a\u5757\u6ee1\u8db3\u9898\u610f\u7684\u503c\uff0c\u52a0\u8d77\u6765\uff0c\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u90a3\u4e48\u600e\u4e48\u6c42\u8054\u901a\u5757\u5185\u7684\u6700\u5c0f\u503c\u5462\u3001\u3001\n\n\u501f\u7528\u697c\u4e0a\u5de8\u4f6c\u7684\u8bdd%%%\n\n```cpp\n1.\u82e5\u76f8\u540c\u7684\u4e24\u4e2a\u6570\u5b57\u5728\u540c\u4e00\u884c\uff0c\u7b2ci\u5217\u548c\u7b2cj\u5217\uff0c\u5219\u7b2ci\u5217\u548c\u7b2cj\u5217\u4e2d\u4e00\u5b9a\u6070\u6709\u4e00\u5217\u9700\u8981\u4ea4\u6362\uff0c\u4e8e\u662f\u5728\u70b9i\u548c\u70b9j\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a1\u7684\u8fb9\n\n2.\u82e5\u76f8\u540c\u7684\u4e24\u4e2a\u6570\u5b57\u4e0d\u5728\u540c\u4e00\u884c\uff0c\u5728\u7b2ci\u5217\u548c\u7b2cj\u5217\uff0c\u5219\u7b2ci\u5217\u548c\u7b2cj\u5217\u4e2d\u4e00\u5b9a\u8981\u4e48\u90fd\u9700\u8981\u4ea4\u6362\u8981\u4e48\u90fd\u4e0d\u9700\u8981\u4ea4\u6362\uff0c\u4e8e\u662f\u5728\u70b9i\u548c\u70b9j\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\n\n\u53ea\u9700\u8981\u5728\u65b0\u56fe\u4e0a\u8fdb\u884c\u4e8c\u67d3\u8272\uff0c\u4f7f\u5f97\u6743\u503c\u4e3a1\u7684\u8fb9\u4e24\u4fa7\u67d3\u8272\u4e0d\u540c\uff0c\u6743\u503c\u4e3a0\u7684\u8fb9\u4e24\u4fa7\u67d3\u8272\u76f8\u540c\n```\n\n\u90a3\u4e48\u8fb9\u6743\u7684\u610f\u601d\u5c31\u662f\uff1a\u5982\u679c\u8fb9\u6743\u4e3a1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fb9\u6240\u8fde\u63a5\u7684\u70b9\u4e0d\u5e94\u8be5\u5728\u540c\u4e00\u961f\u4f0d\u91cc\uff0c\u4e5f\u5c31\u662f\u4e0d\u5e94\u8be5\u662f\u540c\u4e00\u989c\u8272\u7684\u3002\n\n\u5426\u5219\u8fb9\u6743\u4e3a0\uff0c\u90a3\u4e48\u4e24\u4e2a\u70b9\u5e94\u8be5\u662f\u540c\u4e00\u4e2a\u989c\u8272\u7684\u3002\n\n\u989d\u5916\u7684\uff0c\u5982\u679c\u4e24\u4e2a\u58eb\u5175\u7ad9\u5728\u540c\u4e00\u5217\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u58eb\u5175\u4e0d\u5e94\u8be5\uff08\u4e5f\u4e0d\u53ef\u80fd\uff09\u7ad9\u5728\u540c\u4e00\u884c\u91cc\uff0c\u5e94\u5f53\u8fde\u4e00\u6761\u8fb9\u4e3a1\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\u8fdb\u884cBFS\u9ed1\u767d\u67d3\u8272\uff0c\u90a3\u4e48\u5bf9\u4e8e\u540c\u4e00\u884c\uff0c\u5b83\u4eec\u7684\u58eb\u5175\u76840\uff0c1\u503c\u5e94\u8be5\u662f\u4e00\u4e00\u76f8\u53cd\u7684\uff08\u56e0\u4e3a\u540c\u4e00\u5217\u7684\u58eb\u5175\u95f4\u6709\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff09\n\n\u4efb\u52a1\u5c31\u6210\u4e86\uff1a\u5728\u4e00\u4e2a\u8054\u901a\u5757\u91cc\uff0c\u5c06\u6743\u503c\u4e3a0\uff08\u6216\u80051\uff0c\u540c\u7406\uff09\u7684\u58eb\u5175\u6362\u5230\u540c\u4e00\u884c\uff0c\u6700\u5c11\u9700\u8981\u51e0\u6b65\uff1f\n\n\u53c8\u56e0\u4e3a\u4e0a\u4e0b\u4e24\u884c\u7684\u58eb\u5175\u76840\uff0c1\u503c\u4e00\u4e00\u76f8\u53cd\uff0c\u6240\u4ee5\u5982\u679c\u4e0a\u9762\u5168\u662f0\u62161\uff0c\u4e0b\u9762\u7684\u201c\u989c\u8272\u201d\u4e5f\u5c31\u201c\u7eaf\u201d\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u7b2c\u4e00\u884c\u91cc\u76840\u30011\u503c\u54ea\u4e2a\u51fa\u73b0\u7684\u6b21\u6570\u8f83\u5c0f\uff0c\u7136\u540e\u4ea4\u6362\u5c31\u597d\u4e86\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u6709\u5982\u4e0b\u4e24\u884c\u6743\u503c\uff1a\n\n0 1 0 1 1 0 0 0 0 1 0 0 1\n\n1 0 1 0 0 1 1 1 1 0 1 1 0\n\n\u7b2c\u4e00\u884c\u4e2d\u76841\u51fa\u73b0\u6b21\u6570\u6bd4\u7b2c\u4e00\u884c\u4e2d0\u51fa\u73b0\u6b21\u6570\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u5c06\u7b2c\u4e00\u884c\u5168\u90e8\u6362\u4e3a0\uff0c\u90a3\u4e48\u4ea4\u6362\u6b21\u6570\u5373\u7b2c\u4e00\u884c\u4e2d1\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u4e3a5\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u628a\u6240\u6709\u8054\u901a\u5757\u7684\u89e3\u52a0\u8d77\u6765\u5c31\u662f\u6700\u540e\u7684\u7b54\u6848\u4e86\u3002\n\n\u3010\u867d\u7136\u6700\u540e\u7684\u7ed3\u8bba\u5f88\u7b80\u5355\uff0c\u4ee3\u7801\u91cf\u4e5f\u4e0d\u5927\uff0c\u4f46\u662f\u601d\u7ef4\u96be\u5ea6\u8fd8\u662f\u633a\u5927\u7684\uff08\u6bd5\u7adf\u849f\u84bborz orz\uff09\u3011\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n\n#include <queue>\n\n#define FOR_EDGE(i, pt) for (int i(iHead[pt]); i; i = all[i].next)//\u904d\u5386\u5c5e\u4e8e\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u8fb9\n\nclass edge\n{\npublic:\n\tint to, next, len;//len\u5373\u8fb9\u6743\n}all[1123456];\n\nint iHead[112345];\n\nint iEnd(2);\n\nvoid add(int fr, int to, int len)\n{\n\tall[iEnd].to = to;\n\tall[iEnd].len = len;\n\tall[iEnd].next = iHead[fr];\n\tiHead[fr] = iEnd++;\n}\n\nbool bColored[112345];//\u662f\u5426\u88ab\u67d3\u8272\nint color[112345];//\u67d3\u7684\u989c\u8272\uff0c\u503c\u4e3a0\uff0c1\n\nint n;\n\ninline int min(int a, int b) { return a < b ? a : b; }\n\nint bfs(int st)\n{\n\tint clr[2] = { 0, 0 };//\u7b2c\u4e00\u884c\u4e2d\u88ab\u67d3\u62100\uff0c1\u989c\u8272\u7684\u70b9\u5404\u6709\u591a\u5c11\uff08\u8ba1\u6570\uff09\n\tstd::queue<int> que;\n\tque.push(st);\n\tbColored[st] = true;\n\twhile (!que.empty())\n\t{\n\t\tint now(que.front());\n\t\tque.pop();\n\t\tif (now < n)//\u5c06\u70b9\u7684\u4f4d\u7f6e\u9650\u5236\u5728\u7b2c\u4e00\u884c\n\t\t\t++clr[color[now]];\n\t\tFOR_EDGE(i, now)\n\t\t{\n\t\t\tif (!bColored[all[i].to])//\u8fd9\u4e2a\u70b9\u4e0d\u5e94\u8be5\u88ab\u67d3\u8fc7\u8272\uff0c\u5426\u5219\u5c31\u662f\u641c\u7d22\u56de\u53bb\u4e86\n\t\t\t{\n\t\t\t\tbColored[all[i].to] = true;\n\t\t\t\tcolor[all[i].to] = color[now] ^ all[i].len;\n\t\t\t\tque.push(all[i].to);\n\t\t\t}\n\t\t}\n\t}\n\treturn min(clr[0], clr[1]);//\u8fd4\u56de\u8f83\u5c0f\u503c\u4e3a\u8054\u901a\u5757\u7684\u89e3\n}\n\n\n\nint pos[112345];//\u54f2\u5b66\u5efa\u56fe\u2014\u2014pos[h]\u8868\u793a\u9ad8\u5ea6\u4e3ah\u7684\u58eb\u5175\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u884c\u6570\uff08\u4e3a\u4e86\u907f\u514d\u521d\u59cb\u5316\uff0c\u884c\u6570\u9009\u75281\uff0c2\uff09\nint rank[112345];//\u54f2\u5b66\u5efa\u56fe\u2014\u2014rank[h]\u8868\u793a\u9ad8\u5ea6\u4e3ah\u7684\u58eb\u5175\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7f16\u53f7\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i(0); i != n; ++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tif (pos[x])\n\t\t{\n\t\t\tadd(rank[x], i, 1);//\u8bfb\u5165\u5e76\u5efa\u56fe\uff08\u5efa\u56fe\u8fd9\u79cd\u4e1c\u897f\u2026\u2026\u89c1\u4ec1\u89c1\u667a\u5427\uff09\n\t\t\tadd(i, rank[x], 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[x] = 1;\n\t\t\trank[x] = i;\n\t\t}\n\t}\n\tfor (int i(0); i != n; ++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tif (pos[x])\n\t\t{\n\t\t\tadd(rank[x], i, pos[x] == 2);//\u8bfb\u5165\u5e76\u5efa\u56fe\uff08\u5efa\u56fe\u8fd9\u79cd\u4e1c\u897f\u2026\u2026\u89c1\u4ec1\u89c1\u667a\u5427\uff09\n\t\t\tadd(i, rank[x], pos[x] == 2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[x] = 2;\n\t\t\trank[x] = i;\n\t\t}\n\t}\n\tfor (int i(0); i != n; ++i)\n\t{\n\t\tadd(i, n + i, 1);//\u9690\u542b\u7684\u5efa\u56fe\u6761\u4ef6\uff1a\u540c\u4e00\u5217\u7684\u4e24\u4e2a\u58eb\u5175\u6709\u8fb9\u4e14\u8fb9\u6743\u4e3a1\n\t\tadd(n + i, i, 1);\n\t}\n\tint ans(0);\n\tfor (int i(0); i != n; ++i)\n\t{\n\t\tif (!bColored[i])//\u5982\u679c\u8fd9\u4e2a\u8054\u901a\u5757\u5185\u6709\u4e00\u4e2a\u70b9\u88ab\u67d3\u4e86\u8272\uff0c\u90a3\u4e48\u6574\u4e2a\u8054\u901a\u5757\u90fd\u662f\u6709\u8272\u7684\uff0c\u5373\u5df2\u7ecf\u52a0\u5165\u7b54\u6848\u4e86\uff0c\u5c31\u8df3\u8fc7\n\t\t\tans += bfs(i);//\u7b54\u6848\u52a0\u4e0a\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u89e3\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1527169649,
        "uid": 33173,
        "name": "_J_C_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3430 \u3010[POI2005]DWU-Double-row\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\u4e0d\u96be\u53d1\u73b0\uff0c\u540c\u4e00\u5217\u7684\u4e24\u4e2a\u4eba\u6700\u591a\u4f1a\u88ab\u4ea4\u6362\u4e00\u6b21\uff08\u4ea4\u6362\u4e24\u6b21\u7b49\u4e8e\u6ca1\u6709\u4ea4\u6362\uff09\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u5176\u5b9e\u53ea\u6709\u4e24\u79cd\u9009\u62e9\uff1a\u6362\u6216\u8005\u4e0d\u6362\u3002\n\n\u7136\u540e\uff0c\u4e3a\u4e86\u6ee1\u8db3\u8981\u6c42\uff0c\u5bf9\u4e8e\u5217\u4e0e\u5217\u4e4b\u95f4\u9700\u8981\u7b26\u5408\u4e00\u4e9b\u6761\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u524d\u9762\u7684\u4f8b\u5b50\u6765\u7406\u89e3\u3002\n\n![qwq](https://t1.picb.cc/uploads/2022/01/16/fWpZCG.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\uff0c\u5982\u679c\u5b83\u4eec\u5728\u540c\u4e00\u884c\u4e2d\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4ed6\u4eec\u5404\u81ea\u6240\u5728\u7684\u5217\u800c\u8a00\uff0c\u8fd9\u4e24\u5217\u4e2d\u5fc5\u987b\u4e00\u4e2a\u6362\u800c\u53e6\u4e00\u4e2a\u4e0d\u6362\uff0c\u4f8b\u5982\u56fe\u4e2d\u7684\u7b2c\u4e00\u3001\u4e8c\u5217\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\u6362\u6389\uff1b\u5982\u679c\u5b83\u4eec\u4e0d\u5728\u540c\u4e00\u884c\u4e2d\uff0c\u90a3\u4e48\u4e24\u5217\u8981\u4e48\u90fd\u4e0d\u6362\uff0c\u8981\u4e48\u4e00\u8d77\u6362\uff0c\u4f8b\u5982\u56fe\u4e2d\u7684\u7b2c\u4e8c\u3001\u4e09\u5217\uff0c\u8981\u4e48\u4e0d\u6362\uff0c\u8981\u4e48\u4e00\u8d77\u6362\u3002\n\n\u5982\u679c\u6211\u4eec\u628a\u6bcf\u4e00\u5217\u5f53\u4f5c\u4e00\u4e2a\u7ed3\u70b9\u7684\u8bdd\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e24\u5217\uff0c\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u4e0a\u8ff0\u5173\u7cfb\u4e2d\u7684\u67d0\u4e00\u79cd\uff0c\u5c31\u628a\u8fd9\u4e24\u5217\u6240\u5bf9\u5e94\u7684\u7ed3\u70b9\u8fde\u8fb9\u3002\u6700\u7ec8\u5f97\u5230\u7684\u56fe\u5f62\u4e00\u5b9a\u662f\u4e00\u4e2a\u5305\u542b\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u7684\u65e0\u5411\u56fe\u3002\u5bf9\u4e8e\u4f8b\u5b50\u91cc\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u7684\u56fe\uff1a\n\n![qwq](https://t1.picb.cc/uploads/2022/01/16/fWpwNy.png)\n\n\u8fd9\u4e9b\u8fde\u901a\u5757\u4e4b\u95f4\u4e92\u76f8\u4e0d\u5f71\u54cd\uff0c\u56e0\u6b64\u6211\u4eec\u5355\u72ec\u8003\u8651\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u60c5\u51b5\u3002\u4e3a\u4e86\u8bf4\u660e\u65b9\u4fbf\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u7ed3\u70b9\u6362\u6216\u8005\u4e0d\u6362\u5bf9\u5e94\u4e3a\u8fd9\u4e2a\u70b9\u662f\u9ed1\u8272\u548c\u767d\u8272\uff0c\u90a3\u4e48\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff0c\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4\u90fd\u6709\u4e00\u4e2a\u5173\u7cfb\uff08\u8981\u4e48\u989c\u8272\u4e0d\u540c\uff0c\u8981\u4e48\u76f8\u540c\uff09\uff0c\u6240\u4ee5\u53ea\u8981\u786e\u5b9a\u4e00\u4e2a\u70b9\u7684\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fde\u901a\u5757\u4e2d\u7684\u6240\u6709\u70b9\u7684\u60c5\u51b5\u3002\u4ee5\u4e0a\u9762\u7684\u56fe\u4e2d\u7684\u6700\u5927\u7684\u8fde\u901a\u5757\u4e3a\u4f8b\uff0c\u5047\u8bbe $1$ \u53f7\u7ed3\u70b9\u662f\u9ed1\u8272\uff0c\u4e0a\u8272\u60c5\u51b5\u5982\u56fe\u6240\u793a\uff1a\n\n![qwq](https://t1.picb.cc/uploads/2022/01/16/fWpIIc.png)\n\n\u7531\u4e8e\u4e00\u4e2a\u7ed3\u70b9\u8981\u4e48\u67d3\u9ed1\u8981\u4e48\u67d3\u767d\uff0c\u6240\u4ee5\u4e00\u4e2a\u8fde\u901a\u5757\u53ea\u6709\u4e24\u79cd\u67d3\u8272\u65b9\u6848\uff0c\u6211\u4eec\u53ea\u8981\u5728\u4e24\u79cd\u65b9\u6848\u4e2d\u9009\u62e9\u767d\u8272\u7ed3\u70b9\uff08\u5373\u4e0d\u6362\u7684\u7ed3\u70b9\uff09\u8f83\u591a\u7684\u90a3\u4e00\u4e2a\u5373\u53ef\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u60c5\u51b5\uff0c\u53e6\u4e00\u4e2a\u67d3\u8272\u65b9\u6848\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7b2c\u4e00\u79cd\u65b9\u6848\u66f4\u597d\u3002\n\n![qwq](https://t1.picb.cc/uploads/2022/01/16/fWpiOK.png)\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u90fd\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u5f97\u5230\u6700\u5c11\u7684\u67d3\u9ed1\u4e2a\u6570\uff08\u5373\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\uff09\uff0c\u56e0\u6b64\u5c06\u6bcf\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u6700\u5c11\u7684\u9ed1\u8272\u7ed3\u70b9\u4e2a\u6570\u76f8\u52a0\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002\n\n## Code\n```cpp\n//\u6d1b\u8c37P3430 \n\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=50050;\nint N,h[MAXN],to[MAXN<<1],nxt[MAXN<<1],tp[MAXN<<1],tot;\nint vis1[MAXN<<1],vis2[MAXN<<1];\nint type[MAXN],sum[MAXN];\nint ans;\ninline void add(int u,int v,int t){\n\tto[++tot]=v,nxt[tot]=h[u],tp[tot]=t,h[u]=tot;\n}\n\npair<int,int> get(int x){\n\tif(vis2[x]) return make_pair(2,vis2[x]);\n\telse if(vis1[x]) return make_pair(1,vis1[x]);\n\telse return make_pair(0,0);\n}\nint dfs(int x,int fa){\n\tsum[x]=1;\n\tint res=type[x]==0;\n\tfor(int i=h[x];i;i=nxt[i]){\n\t\tif(sum[to[i]]) continue;\n\t\ttype[to[i]]=type[x]^tp[i];\n\t\tres+=dfs(to[i],x);sum[x]+=sum[to[i]];\n\t}\n\treturn res;\n}\nint sol(int x){\n\ttype[x]=1;\n\tint now=dfs(x,x);\n\treturn min(now,sum[x]-now);\n}\n\nint main()\n{\n\tscanf(\"%d\",&N);\n\tfor(int i=1;i<=N;++i){\n\t\tint d;scanf(\"%d\",&d);\n\t\tpair<int,int> temp=get(d);\n\t\tif(temp.first){\n\t\t\tadd(i,temp.second,1),add(temp.second,i,1);\n\t\t}\n\t\tvis1[d]=i;\n\t}\n\tfor(int i=1;i<=N;++i){\n\t\tint d;scanf(\"%d\",&d);\n\t\tpair<int,int> temp=get(d);\n\t\tif(temp.first==2){\n\t\t\tadd(i,temp.second,1),add(temp.second,i,1);\n\t\t}\n\t\telse if(temp.first==1){\n\t\t\tadd(i,temp.second,0),add(temp.second,i,0);\n\t\t}\n\t\tvis2[d]=i;\n\t}\n\tfor(int i=1;i<=N;++i){\n\t\tif(!sum[i]) ans+=sol(i);\n\t}\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1642341036,
        "uid": 356499,
        "name": "CPPfive",
        "ccfLevel": 7,
        "title": "[POI2005]DWU-Double-row \u9898\u89e3"
    },
    {
        "content": "\u5f88\u597d\u7684\u4e00\u9053\u67d3\u8272\u9898\uff0c\u601d\u7ef4\u96be\u5ea6\u611f\u89c9\u4e0d\u5230\u84dd\uff0c\u4ee3\u7801\u96be\u5ea6\u6a59\u5de6\u53f3\u3002\n\n\u6211\u4eec\u8003\u8651\u76f8\u540c\u7684\u4e24\u4e2a\u6570\uff0c\u5982\u679c\u5728\u540c\u4e00\u884c\uff0c\u5c31\u5c06\u4ed6\u4eec\u5217\u7684\u7f16\u53f7\u4f5c\u4e3a\u9876\u70b9\u7684\u8fb9\u8fde\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\uff0c\u4e0d\u7136\u8fde\u8fb9\u6743 $0$ \u7684\u8fb9\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u8fde $1$ \u8fb9\uff1f\u56e0\u4e3a\u5982\u679c\u4e24\u4e2a\u6570\u5728\u540c\u4e00\u884c\u80af\u5b9a\u6709\u4e00\u5217\u662f\u8981\u88ab\u7ffb\u8f6c\u7684\uff0c\u8fde $0$ \u8fb9\u5c31\u8bf4\u660e\u4e0d\u9700\u8981\u88ab\u52a8\uff0c\u5bf9\u6bcf\u4e00\u5217\u7684\u64cd\u4f5c\u663e\u7136\u6700\u591a\u4e00\u6b21\uff0c\u4e0d\u7136\u548c\u64cd\u4f5c\u6b21\u6570\u6a21 $2$ \u65f6\u7684\u72b6\u6001\u662f\u4e00\u6837\u7684\uff0c\u663e\u7136\u540e\u8005\u64cd\u4f5c\u66f4\u5c11\u3002\n\n\u7136\u540e\u8fdb\u884c\u67d3\u8272\uff0c\u8fb9\u6743\u4e3a $0$ \u7684\u4e24\u70b9\u989c\u8272\u76f8\u540c\uff0c\u4e3a $1$ \u7684\u67d3\u53e6\u4e00\u79cd\u989c\u8272\uff0c\u6bcf\u4e2a\u8fde\u901a\u5757\u662f\u72ec\u7acb\u7684\uff0c \u91cc\u9762\u7684\u6700\u5c0f\u7ffb\u8f6c\u6b21\u6570\u5c31\u662f\u6570\u91cf\u5c11\u7684\u90a3\u79cd\u989c\u8272\u4e2a\u6570\uff0c\u56e0\u4e3a\u4e24\u79cd\u64cd\u4f5c\u663e\u7136\u90fd\u80fd\u4f7f\u5e8f\u5217\u7b26\u5408\u7b54\u6848\uff0c\u90a3\u4e48\u4ee3\u7801\u5c31\u5f88\u597d\u5199\u4e86\u3002\n\n\u6211\u4ee3\u7801\u5199\u7684\u5efa\u56fe\u6709\u70b9\u5947\u602a\uff0c\u5e94\u8be5\u6709\u66f4\u597d\u7684\u7406\u89e3\u65b9\u6cd5\uff0c\u5927\u5bb6\u81ea\u884c\u7406\u89e3\u4e00\u4e0b\u5373\u53ef\uff0c\u4ee3\u7801\u96be\u5ea6\u5e76\u4e0d\u9ad8\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tregister int x=0;register char ch=getchar();\n\twhile(ch<48)ch=getchar();\n\twhile(ch>=48)x=x*10+(ch^48),ch=getchar();\n\treturn x;\n}\nstruct node{\n\tint v, w;\n};\nint n, a[100010], b[100010], color[100010], pos[100010], c1, c2, ans = 0;\nvector<node>l[100010];\nvoid dfs(int u, int c)\n{\n\tcolor[u] = c;//marked \n\tif(c == 1)c1 ++;\n\tif(c == 2)c2 ++;\n\tfor(int i = 0;i < l[u].size();i ++)\n\t{\n\t\tint v = l[u][i].v, w = l[u][i].w;\n\t\tif(color[v])continue;\n\t\tif(c + w <= 2)dfs(v, c + w);//\u6ce8\u610f\u6211\u5199\u7684\u989c\u8272\u662f1\u548c2\uff0c\u662f\u5426\u8d85\u8fc72\u8981\u5206\u7c7b\u8ba8\u8bba \n\t\telse dfs(v, 1);//\u7ee7\u7eed\u67d3\u8272 \n\t}\n}\nint main()\n{\n    n = read();\n    for(int i = 1;i <= n;i ++)//\u8bfb\u5165\u7136\u540e\u5efa\u56fe \n    {\n    \ta[i] = read();\n    \tif(! pos[a[i]])pos[a[i]] = i;\n    \telse\n    \t{\n    \t\tl[pos[a[i]]].push_back(node{i, 1});\n    \t\tl[i].push_back(node{pos[a[i]], 1});\n    \t\tpos[a[i]] = 0x3f3f3f3f;\n\t\t}\n\t}\n\tfor(int i = 1;i <= n;i ++)\n    {\n    \tb[i] = read();\n    \tif(pos[b[i]] != 0x3f3f3f3f and pos[b[i]])\n    \t{\n    \t\tl[pos[b[i]]].push_back(node{i, 0});\n    \t\tl[i].push_back(node{pos[b[i]], 0});\n    \t\tpos[b[i]] = 0x3f3f3f3f;\n\t\t}\n\t}\n\tmemset(pos, 0, sizeof(pos));\n\tfor(int i = 1;i <= n;i ++)\n    {\n    \tif(! pos[b[i]])pos[b[i]] = i;\n    \telse\n    \t{\n    \t\tl[pos[b[i]]].push_back(node{i, 1});\n    \t\tl[i].push_back(node{pos[b[i]], 1});\n    \t\tpos[b[i]] = 0x3f3f3f3f;\n\t\t}\n\t}//\u5c06\u540c\u4e00\u884c\u8fde1\uff0c\u4e0d\u7136\u8fde0 \n\tfor(int i = 1;i <= n;i ++)\n\t{\n\t\tif(! color[i])//\u5982\u679c\u8fd9\u4e2a\u8fde\u901a\u5757\u6ca1\u8bbf\u95ee\u8fc7\u8bbf\u95ee \n\t\t{\n\t\t\tc1 = c2 = 0;\n\t\t\tdfs(i, 1);\n\t\t\tans += min(c1, c2);//\u53d6\u5c0f\u7684\u90a3\u4e2a \n\t\t}\n\t}\n\tcout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1630839122,
        "uid": 220426,
        "name": "\u8840\u8272\u9ec4\u660f",
        "ccfLevel": 6,
        "title": "P3430\u9898\u89e3"
    },
    {
        "content": "\u672c\u8d28\u4e0a\u6765\u770b\uff0c\u6211\u4eec\u8bbe\u6bcf\u5217\u6700\u7ec8\u7684\u72b6\u6001\u4e3a $f[i]=0/1$\uff0c\u8868\u793a \u4e0d\u4ea4\u6362/\u4e0a\u4e0b\u4ea4\u6362 \uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u7ed9\u4e86\u4e00\u4e9b $f[i]$ \u4e4b\u95f4\u7684\u5173\u7cfb\uff1a  \n$f[i]==f[j]$ \u5219 $i,j$ \u4e4b\u95f4\u8fde $0$ \u8fb9\uff1b  \n$f[i]!=f[j]$ \u5219 $i,j$ \u4e4b\u95f4\u8fde $1$ \u8fb9\u3002  \n\n\u6839\u636e\u4ee5\u4e0a\u7ed3\u8bba\uff0c\u6211\u4eec\u5c06 \u5728\u540c\u4e00\u884c\u7684\u76f8\u540c\u7684\u4e24\u4e2a\u6570\u6240\u5728\u7684\u5217\u8fde $1$ \u8fb9\uff0c\u8868\u793a\u4e24\u5217\u7684\u72b6\u6001\u6700\u7ec8\u662f\u4e0d\u540c\u7684\uff1b\u4e0d\u5728\u540c\u4e00\u884c\u7684\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u4e4b\u95f4\u8fde $0$ \u8fb9\uff0c\u8868\u793a\u4e24\u5217\u6700\u540e\u7684\u72b6\u6001\u662f\u76f8\u540c\u7684\u3002  \n\n\u7136\u540e\u904d\u5386\u6574\u5f20\u56fe\u7684\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u8fdb\u884c\u67d3\u8272\u3002\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u7b54\u6848\u5373 $\\min($\u9ed1\u70b9\u6570\u76ee$,$\u767d\u70b9\u6570\u76ee$)$\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u7ffb\u8f6c\u9ed1\u70b9\uff0c\u4e5f\u53ef\u4ee5\u7ffb\u8f6c\u767d\u70b9 \u3002\n\u6700\u7ec8\u7684\u7b54\u6848\u4e3a\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u7b54\u6848\u4e4b\u548c\uff0c\u56e0\u4e3a\u8fde\u901a\u5757\u4e4b\u95f4\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define R register int\nusing namespace std;\nnamespace Luitaryi {\ninline int g() {\n    R x = 0, f = 1;\n    register char s;\n    while (!isdigit(s = getchar())) f = s == '-' ? -1 : f;\n    do\n        x = x * 10 + (s ^ 48);\n    while (isdigit(s = getchar()));\n    return x * f;\n}\nconst int N = 50010;\nint n, m, cnt, ans, t1, t2, a[N], b[N], v1[N << 1], v2[N << 1];\nint vr[N << 1], nxt[N << 1], fir[N << 1], w[N << 1], c[N];\ninline void add(int u, int v, int ww) {\n    vr[++cnt] = v, nxt[cnt] = fir[u], fir[u] = cnt, w[cnt] = ww;\n    vr[++cnt] = u, nxt[cnt] = fir[v], fir[v] = cnt, w[cnt] = ww;\n}\ninline void dfs(int u, int C) {\n    c[u] = C;\n    t1 += C, t2 += (C ^ 1);\n    for (R i = fir[u]; i; i = nxt[i]) {\n        R v = vr[i];\n        if (~c[v])\n            continue;\n        dfs(v, C ^ w[i]);\n    }\n}\ninline void main() {\n    n = g();\n    memset(c, 0xff, sizeof c);\n    for (R i = 1; i <= n; ++i) {\n        a[i] = g();\n        if (v1[a[i]])\n            add(v1[a[i]], i, 1);\n        v1[a[i]] = i;\n    }\n    for (R i = 1; i <= n; ++i) {\n        b[i] = g();\n        if (v1[b[i]])\n            add(v1[b[i]], i, 0);\n        if (v2[b[i]])\n            add(v2[b[i]], i, 1);\n        v2[b[i]] = i;\n    }\n    for (R i = 1; i <= n; ++i)\n        if (c[i] == -1)\n            t1 = 0, t2 = 0, dfs(i, 0), ans += min(t1, t2);\n    printf(\"%d\\n\", ans);\n}\n}  // namespace Luitaryi\nsigned main() {\n    Luitaryi::main();\n    return 0;\n}\n```\n\n2019.11.11",
        "postTime": 1573449055,
        "uid": 115086,
        "name": "Tari",
        "ccfLevel": 7,
        "title": "Jack's \u9898\u89e3 P3430 \u3010[POI2005]DWU-Double-row\u3011"
    },
    {
        "content": "\u3010POI\u8865\u5168\u8ba1\u5212#14 POI2005 DWU\u3011\n\n\u5148\u8bf4\u9898\u610f\n\n\u6709\u4e24\u884c\u4eba\uff0c\u6bcf\u884cn\u4e2a\uff0c\u6bcf\u4eba\u6709\u8eab\u9ad8\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u4ea4\u6362\u540c\u4e00\u5217\u7684\u4e24\u4eba\uff0c\u4f7f\u5f97\u6700\u7ec8\u4e24\u884c\u4eba\u7684\u8eab\u9ad8\u5206\u522b\u4e92\u4e0d\u76f8\u540c\uff0c\u4fdd\u8bc1\u6709\u89e3\n\n\u95ee\u6700\u5c11\u4ea4\u6362\u51e0\u6b21\n\n\u8865\u6837\u4f8b\u89e3\u91ca\u56fe\u7247\n\n![QAQ](http://oi.edu.pl/old/html/zadania/oi12/dwu.jpg)\n\n\u4ee5\u4e0b\u662f\u9898\u89e3\n\n--------------------------------\u9898\u89e3\u5206\u5272\u7ebf-------------------------------------\n\n\u4e5f\u7b97\u662f\u601d\u7ef4\u96be\u5ea6\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u9898\u4e86\n\n\u8003\u8651\u8981\u4f7f\u5f97\u6bcf\u884c\u8eab\u9ad8\u4e92\u4e0d\u76f8\u540c\u8981\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\n\n1.\u82e5\u76f8\u540c\u7684\u4e24\u4e2a\u6570\u5b57\u5728\u540c\u4e00\u884c\uff0c\u7b2ci\u5217\u548c\u7b2cj\u5217\uff0c\u5219\u7b2ci\u5217\u548c\u7b2cj\u5217\u4e2d\u4e00\u5b9a\u6070\u6709\u4e00\u5217\u9700\u8981\u4ea4\u6362\uff0c\u4e8e\u662f\u5728\u70b9i\u548c\u70b9j\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a1\u7684\u8fb9\n\n2.\u82e5\u76f8\u540c\u7684\u4e24\u4e2a\u6570\u5b57\u4e0d\u5728\u540c\u4e00\u884c\uff0c\u5728\u7b2ci\u5217\u548c\u7b2cj\u5217\uff0c\u5219\u7b2ci\u5217\u548c\u7b2cj\u5217\u4e2d\u4e00\u5b9a\u8981\u4e48\u90fd\u9700\u8981\u4ea4\u6362\u8981\u4e48\u90fd\u4e0d\u9700\u8981\u4ea4\u6362\uff0c\u4e8e\u662f\u5728\u70b9i\u548c\u70b9j\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\n\n\u53ea\u9700\u8981\u5728\u65b0\u56fe\u4e0a\u8fdb\u884c\u4e8c\u67d3\u8272\uff0c\u4f7f\u5f97\u6743\u503c\u4e3a1\u7684\u8fb9\u4e24\u4fa7\u67d3\u8272\u4e0d\u540c\uff0c\u6743\u503c\u4e3a0\u7684\u8fb9\u4e24\u4fa7\u67d3\u8272\u76f8\u540c\uff0c\u53d6\u6bcf\u4e2a\u8fde\u901a\u5757\u4e2d\u540c\u8272\u7684\u8f83\u5c11\u90e8\u5206\u52a0\u5165\u7b54\u6848\n\n\u8fd9\u79cd\u4e1c\u897f\u968f\u4fbfdfs\u4e00\u4e0b\u5c31\u51fa\u6765\u4e86\n\n\u8d34\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint pos[100010][2];\nint n,tmp0;\nstruct edge\n{\n    int v,w;\n    edge *next;\n}*h[50010],pool[100010];\nint top;\ninline void addedge(int u,int v,int w)\n{\n    edge *tmp=&pool[top++];tmp->v=v;tmp->w=w;tmp->next=h[u];h[u]=tmp;\n    edge *pmt=&pool[top++];pmt->v=u;pmt->w=w;pmt->next=h[v];h[v]=pmt;\n}\nint vis[50010],col[50010],cntc[2],cnt,ans;\nvoid dfs(int u)\n{\n    vis[u]=1;\n    cntc[col[u]]++;\n    for(edge *tmp=h[u];tmp;tmp=tmp->next)\n    {\n        if(!vis[tmp->v])\n        {\n            col[tmp->v]=col[u]^tmp->w;\n            dfs(tmp->v);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&tmp0);\n        if(pos[tmp0][0])pos[tmp0][1]=i;\n        else pos[tmp0][0]=i;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&tmp0);\n        if(pos[tmp0][0])pos[tmp0][1]=-i;\n        else pos[tmp0][0]=-i;\n    }\n    for(int i=1;i<=100000;i++)\n    {\n        if(pos[i][0]&&pos[i][1])\n        {\n            addedge(abs(pos[i][0]),abs(pos[i][1]),!((pos[i][0]>0)^(pos[i][1]>0)));\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!vis[i])\n        {\n            cntc[0]=cntc[1]=0;\n            dfs(i);\n            ans+=min(cntc[0],cntc[1]);\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1506234084,
        "uid": 3346,
        "name": "oscar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3430 \u3010[POI2005]DWU-Double-row\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a,b$\uff0c\u4f60\u53ef\u4ee5\u9009\u5b9a $m$ \u4e2a\u4f4d\u7f6e $p_i$ \u4ea4\u6362 $a_{p_i},b_{p_i}$\uff0c\u4f7f\u5f97 $a$ \u4e2d\u4e0d\u5b58\u5728\u76f8\u540c\u5143\u7d20\uff0c$b$ \u4e2d\u540c\u7406\u3002\u6700\u5c0f\u5316 $m$\u3002\n\n---\n\n\u770b\u5230\u76f8\u7b49\uff0c\u4e0d\u7b49\uff0c\u4e8c\u5143\u8fd0\u7b97\u3002\u597d\u554a\uff0c\u975e\u5e38\u663e\u7136\uff0c**\u5efa\u56fe**\uff01\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u5efa\u56fe\uff1f\n\n\u4ec0\u4e48\u662f\u70b9\uff1f\u628a\u540c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684 $a_i,b_i$ \u770b\u6210\u4e00\u4e2a\u70b9\u3002\n\n\u4ec0\u4e48\u662f\u8fb9\uff1f\u8003\u8651\u5982\u679c\u4e24\u4e2a\u70b9\u7684\u4f4d\u7f6e\u6709\u76f8\u540c\u5143\u7d20\u5219\u5efa\u8fb9\u3002\u600e\u4e48\u533a\u5206\u540c\u4f4d\u4e0e\u5f02\u4f4d\uff1f$0/1$ \u8fb9\u6743\uff01\n\n> \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c $a_u=a_v$ \u6216 $b_u=b_v$ \u5219 $u,v$ \u5efa\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\uff0c\u5426\u5219\u8fb9\u6743\u4e3a $0$\u3002\n\n\u81f3\u6b64\u5efa\u56fe\u5b8c\u6210\u3002\n\n---\n\n\u5efa\u5b8c\u56fe\u4e86\uff0c\u73b0\u5728\u600e\u4e48\u505a\uff1f\n\n**\u8003\u8651\u4e00\u6b21\u64cd\u4f5c\uff0c\u56fe\u6709\u4ec0\u4e48\u53d8\u5316\u3002**\n\n\u5bf9\u4e00\u4e2a\u4f4d\u7f6e $u$ \u7684 $a_u,b_u$ \u4ea4\u6362\uff0c\u90a3\u4e48\u4e0e\u5176\u76f8\u8fde\u7684\u540c\u4f4d\u53d8\u6210\u5f02\u4f4d\uff0c\u5f02\u4f4d\u53d8\u6210\u540c\u4f4d\uff0c\u4e5f\u5c31\u662f\u4e0e\u5176\u76f8\u90bb\u7684\u6240\u6709\u8fb9\u8fb9\u6743\u53d6\u53cd\u3002\n\n\u65e2\u7136\u6700\u7ec8\u5168\u90fd\u4e0d\u540c\uff0c\u90a3\u4e48\u6700\u7ec8\u72b6\u6001\u5c31\u662f\u8fb9\u6743\u5168\u90e8\u4e3a $0$\u3002\n\n~~\u778e\u53e3\u80e1\u4e86\u4e00\u4e0b\uff0c\u5230\u8fd9\u91cc\u597d\u50cf\u5c31\u53ef\u4ee5\u9ad8\u6d88\u505a\u4e86\uff0c\u7136\u800c\u6211\u4e0d\u4f1a\u4e5f\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9\u3002/kk~~\n\n---\n\n\u4e8e\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a\u5957\u8def\u5316\u7684\u60f3\u6cd5\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9**\u9ed1\u767d\u67d3\u8272**\uff0c\u94a6\u5b9a\u4e00\u4e2a\u8fde\u901a\u5757\u4e0a\u4efb\u610f\u4e00\u4e2a\u70b9\u4e3a\u767d\u8272\uff08$c_i=0$\uff09\u3002\n\n- \u82e5 $u$ \u5230 $v$ \u7684\u8fb9\u6743\u4e3a $1$ \u5219 $c_u\\neq c_v$\u3002\n\n- \u82e5 $u$ \u5230 $v$ \u7684\u8fb9\u6743\u4e3a $0$ \u5219 $c_u= c_v$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5bf9\u6240\u6709\u767d\u8272\u7ed3\u70b9\u64cd\u4f5c\u4e00\u904d\uff0c\u6216\u8005\u5bf9\u6240\u6709\u9ed1\u8272\u7ed3\u70b9\u64cd\u4f5c\u4e00\u904d\u90fd\u53ef\u4ee5\u8fbe\u5230\u8fb9\u6743\u5168\u90e8\u4e3a $0$ \u7684\u6548\u679c\u3002\n\n\u6b63\u786e\u6027\u8bc1\u660e\uff1a\u5bf9\u4e8e\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u8fb9\u6743\u4e3a $1$ \u90a3\u4e48\u5176\u4e24\u4e2a\u7aef\u70b9\u4e00\u5b9a\u4e00\u4e2a\u4e3a $0$ \u4e00\u4e2a\u4e3a $1$\uff0c\u8fd9\u6761\u8fb9\u4f1a\u88ab\u64cd\u4f5c\u4e00\u6b21\u53d8\u6210 $0$\u3002\u5982\u679c\u8fb9\u6743\u4e3a $0$\uff0c\u5219\u4f1a\u88ab\u8fd9\u6761\u8fb9\u8981\u4e48\u4e0d\u88ab\u64cd\u4f5c\u8981\u4e48\u88ab\u53d6\u53cd\u4e24\u6b21\uff0c\u8fd8\u662f $0$\u3002\n\n\u6240\u4ee5\u4e00\u4e2a\u8fde\u901a\u5757\u8fb9\u6743\u4e3a $0$ \u7684\u6700\u5c0f\u4ee3\u4ef7\u4e3a\u767d\u8272\u7ed3\u70b9\u6570\u91cf\u4e0e\u9ed1\u8272\u7ed3\u70b9\u6570\u91cf\u7684\u8f83\u5c0f\u8005\u3002\n\n\u8dd1 dfs \u5373\u53ef\u3002\n\n---\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 5e5 + 10;\nconst int maxv = 1e6 + 10;\n\nstruct edge { int to, next, w; };\n\nint n, ans;\nint a[maxn], b[maxn];\nvector<int> p[maxv];\nint head[maxn];\nedge e[maxn << 2];\nint cnt;\n\nvoid add_edge(int u, int v, int w) {\n    e[++cnt] = {v, head[u], w};\n    head[u] = cnt;\n}\n\nint vis[maxn], c[2];\n\nvoid dfs(int u, int f) {\n    ++c[f];\n    vis[u] = true;\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to, w = e[i].w;\n        if (!vis[v]) dfs(v, f ^ w);\n    }\n}\n\nint main() {\n    cin >> n;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    for (int i = 1; i <= n; i++) cin >> b[i];\n    for (int i = 1; i <= n; i++) if (a[i] != b[i]) p[a[i]].push_back(i), p[b[i]].push_back(i);\n    for (int i = 1; i < maxv; i++) {\n        if (p[i].size() == 2) {\n            int u = p[i][0], v = p[i][1], f = (a[u] == a[v] || b[u] == b[v]);\n            add_edge(u, v, f), add_edge(v, u, f);\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        if (!vis[i]) {\n            c[0] = c[1] = 0;\n            dfs(i, 0);\n            ans += min(c[0], c[1]);\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1685369031,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "P3430 [POI2005]DWU-Double-row"
    },
    {
        "content": "@\u7ba1\u7406\u5458\u5927\u5927\uff1a\u8fd9\u9898\u6211\u6ca1\u6709\u5199\u516c\u5f0f\uff0c\u4e3a\u4ec0\u4e48\u6253\u56de\u539f\u56e0\u662f\u516c\u5f0f\u6ca1\u5199LaTeX\n\n\u8fd9\u9898\u4e3b\u8981\u662f\u6709\u4e00\u4e9b\u9650\u5236\n\n\u901a\u8fc7\u624b\u7b97\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u67d0\u4e24\u5217\u5b58\u5728\u76f8\u540c\u7684\u6570\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e24\u5217\u4ea4\u6362\u4f1a\u6709\u9650\u5236\n\n\u5177\u4f53\u5730\u6765\u8bf4\n```\n1 2\n3 1\n```\n\u8fd9\u79cd\u60c5\u51b5,\u4e24\u5217\u8981\u4e48\u90fd\u4e0d\u6362\u4f4d\u7f6e,\u8981\u4e48\u5c31\u90fd\u6362\u4f4d\u7f6e\u3002\n```\n1 1\n2 3\n```\n\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e24\u5217\u4e00\u5b9a\u4f1a\u6709\u4e00\u5217\u4f1a\u6362\u4f4d\u7f6e\n\n\u6211\u4eec\u628a\u4e0a\u9762\u8fd9\u79cd\u5173\u7cfb\u8054\u7cfb\u8d77\u6765\uff0c\u4f1a\u6784\u6210\u4e00\u4e2a**\u4e0d\u8fde\u901a**\u7684\u56fe\u3002\n\n\u4f46\u662f**\u4e0d\u8fde\u901a**\u8fd9\u4ef6\u4e8b\u60c5\u53ef\u4ee5\u6539\u53d8\u6210:\u4f9d\u6b21\u679a\u4e3ei\u6240\u5728\u7684\u56fe\uff0c\u5982\u679ci\u6ca1\u6709\u8bbf\u95ee\u8fc7,\u90a3\u4e48\u5c31\u628ai\u6240\u5728\u7684\u56fe\u626b\u4e00\u904d\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u4e00\u4e2a\u8fde\u901a\u7684\u7ea6\u675f\u56fe(\u5728\u8fd9\u9898\u91cc)\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u8282\u70b9\u662f**\u5df2\u77e5**\u7684(\u5df2\u77e5\u662f\u5426\u66f4\u6539)\uff0c\u90a3\u4e48\u5176\u4ed6\u8282\u70b9\u662f\u5426\u4f1a\u66f4\u6539\u5c31**\u4e00\u5b9a**\u77e5\u9053\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u4e00\u5f20\u56fe,\u53ef\u4ee5\u5148**\u968f\u673a**\u9009\u4e00\u4e2a\u8282\u70b9\uff0c\u679a\u4e3e\u4ed6\u662f\u5426\u6539\u53d8\u3002\u518d\u9012\u5f52\u4e0b\u53bb\uff0c\u5c31\u53ef\u4ee5**\u552f\u4e00\u786e\u5b9a\u4e00\u5f20\u56fe**\uff0c\u8fd9\u4e2a\u65f6\u5019\u518d\u628a\u6362\u7684\u6570\u91cf\u7edf\u8ba1\u4e00\u4e0b\u5373\u53ef\n\n\u6bd4\u8f83\u5b8c\u6574\u4e86\uff0c\u6211\u653e\u4e0b\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define N 50009\nusing namespace std;\ntypedef long long ll;\nll n,f[N][2],vis[N][2],cnt=0,ans=0;\nvector<ll> to[N];\nvector<bool> w[N];// w means different or not\nstruct edge{bool type;ll id,x;}es[2*N];\nbool cmp(const edge&a,const edge&b){return a.x<b.x;}\nll F(ll x,ll fa,bool now){\n\tvis[x][now]=1,f[x][now]=now;\n\tfor(ll i=0,v,we;i<to[x].size();++i)\n\t\tif(!vis[v=to[x][i]][we=now^w[x][i]])\n\t\t\tf[x][now]+=F(v,x,we);\n\treturn f[x][now];\n}\nint main(){\n\tcin>>n;\n\tfor(ll i=1;i<=n;++i){\n\t\tll a;\n\t\tcin>>a,es[++cnt]=(edge){0,i,a};\n\t}\n\tfor(ll i=1;i<=n;++i){ \n\t\tll b;\n\t\tcin>>b,es[++cnt]=(edge){1,i,b};\n\t}\n\tsort(es+1,es+cnt+1,cmp);\n\tfor(ll i=2;i<=cnt;++i)\n\t\tif(es[i].x==es[i-1].x){\n\t\t\tedge now=es[i],pre=es[i-1];\n\t\t\tto[now.id].push_back(pre.id);w[now.id].push_back(!(now.type^pre.type));\n\t\t\tto[pre.id].push_back(now.id);w[pre.id].push_back(!(now.type^pre.type));\n\t\t}\n\tfor(ll i=1;i<=n;++i)\n\t\tif(!vis[i][0])\n\t\t\tans+=min(F(i,0,0),F(i,0,1));\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1654153756,
        "uid": 482730,
        "name": "aSunnyDay",
        "ccfLevel": 6,
        "title": "Solution-P3430"
    }
]