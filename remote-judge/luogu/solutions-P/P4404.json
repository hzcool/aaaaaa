[
    {
        "content": "\n\n\u51fd\u6570\u89e3\u91ca\uff1a\n\t\t  \n          unique\uff08\uff09[unique\u51fd\u6570\u7684\u89e3\u91ca](https://www.cnblogs.com/wangkundentisy/p/9033782.html)\n   \t\t  \n          make_pair\uff08a,b)(\u8fc7\u4e8e\u65e0\u6cd5\u7406\u89e3\u6211\u81ea\u884c\u89e3\u91ca\uff09\u5c06a\u4e0eb\u538b\u8fdb\u5806\u91cc\u3002a\u53ef\u4ee5\u7528\u4e8e\u5927\u6839\u5806\u7684\u6392\u5e8f\n\t\t\t\n          lower_bound\uff08\uff09[lower_bound\u51fd\u6570\u7684\u89e3\u91ca](https://baike.baidu.com/item/lower_bound/8620039?fr=aladdin)\n          \nunique\u4e0elower_bound\u5904\u7406\u5b8c\u51cf\u53bb\u6570\u7ec4\u53ef\u4ee5\u5f97\u5230\u5904\u7406\u540e\u7684\u5740\n\uff08\u5728\u4e0b\u9762\u4ee3\u7801\u6709\u4f53\u73b0\uff09\n\n-----------\n****//\u65b9\u6cd5\uff1a\u5982\u679c\u8be5\u5bb9\u5668\u5df2\u6ee1\uff0c\u540e\u6765\u51fa\u73b0\u7684\u4e0d\u5728\u5bb9\u5668\u4e2d\u7684\uff0c\u4e00\u5b9a\u8981\u7531\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u4e2d\u8ddd\u79bb\u4e0b\u4e00\u6b21\u51fa\u73b0\u6700\u8fdc\u7684\u90a3\u4e2a\u5143\u7d20\u6765\u66ff\u6362\u6389\u3002****\n   ~~\u4ee3\u7801\u633a\u660e\u786e\u4e86\u5c31\u76f4\u63a5\u770b\u5427~~\n----------\n\n\n\n```cpp\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;//\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u5427ei \nconst int INF=0x3fffffff;//\u5b9a\u4e49 \nint a[100005],b[100005],last[100005],next[100005],cnt,sum;//\u5b9a\u4e49 \nbool vis[100005];//\u5b9a\u4e49 \n//\u7528next[i]\u6570\u7ec4\u4fdd\u5b58\u7b2cI\u4e2a\u5185\u5b58\u5730\u5740\u7684\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n//last[i]\u8868\u793a \u4e0b\u4e00\u6b21\u5bf9i\u7684 \u64cd\u4f5c\n// vis\u6570\u7ec4\u6807\u8bb0\u5f53\u524d\u503c\u662f\u5426\u5728\u5806\u4e2d\npriority_queue <pair<int,int> > h; //\u5efa\u5927\u6839\u5806 \nint n,m;//\u5b9a\u4e49 \nint main() { //main\u51fd\u6570 \n\tmemset(next,1,sizeof(next));//\u521d\u59cb\u5316 \n\tscanf(\"%d%d\",&n,&m);//\u8f93\u5165 \n\tfor(int i=1; i<=n; i++) {//\u5faa\u73af\n\t\tscanf(\"%d\",a+i);//\u8f93\u5165 \n\t\tb[i]=a[i];//\u8d4b\u503c \n\t}//\u7ed3\u675f\u5faa\u73af \n\tsort(b+1,b+1+n);//\u6392\u5e8f \n\tint num=unique(b+1,b+1+n)-b-1;//\u53bb\u91cd,\u79bb\u6563\u5316\uff0c\u4ece\u540e\u5f80\u524d\u5efa\u51fa\u6bcf\u5757\u4e3b\u5b58\u7684\u64cd\u4f5c\u987a\u5e8f\uff0c\u8fd4\u56de\u6700\u53f3\u5740 \n\tfor(int i=1; i<=n; i++)  {//\u5faa\u73af\n\t\ta[i]=lower_bound(b+1,b+1+num,a[i])-b;//\u5bfb\u627e\u7b2c\u4e00\u4e2a>=a[i]\u7684\u6570\uff0c\u8fd4\u56de\u5740 \n\t\tnext[last[a[i]]]=i;//\u6784\u5efa next\u6570\u7ec4 \n\t\tlast[a[i]]=i;//\u6784\u5efalast\u6570\u7ec4 \n\t}//\u7ed3\u675f\u5faa\u73af \n\tfor(int i=1; i<=n; i++) { //\u5faa\u73af \n\t\twhile(!h.empty()&&!vis[h.top().second]) h.pop();//\u5982\u679c\u5927\u6839\u5806\u4e0d\u662f\u7a7a\u7684\u5e76\u4e14\u5806\u9876\u5143\u7d20\u7684a[i]\u4e0d\u5728Cache\u7f13\u5b58\u91cc\u5c31\u5220\u9664\u5806\u9876\u5143\u7d20 \n\t\tif(vis[a[i]]) h.push(make_pair(next[i],a[i]));//\u5982\u679ca[i]\u5728Cache\u7f13\u5b58\u91cc\u5c31push\u8fdb\u5f53\u524d\u70b9\u7684next[i]\u503c \n\t\telse{//\u5982\u679ca[i]\u4e0d\u5728Cache\u91cc \n\t\t\tcnt++;//\u7b54\u6848++ \n\t\t\tvis[a[i]]=1;//a[i]\u6807\u8bb0 \n\t\t\tif(!h.empty()&&sum>=m) {//\u5982\u679c\u5927\u6839\u5806\u4e0d\u662f\u7a7a\u7684\u5e76\u4e14\u7f13\u5b58\u6ca1\u6709\u5269\u4f59;\n\t\t\t\tvis[h.top().second]=0;//\u5c06\u5806\u9876\u5143\u7d20\u7684a[i]\u6807\u8bb0 \n\t\t\t\th.pop();//\u5220\u9664\u5806\u9876\u5143\u7d20 \n\t\t\t}//\u7ed3\u675f\u5224\u65ad \n\t\t\tif(sum<m) //\u5982\u679cCache\u5bb9\u91cf\u6709\u5269\u4f59 \n\t\t\t\tsum++;//\u7f13\u5b58++ \n\t\t\th.push(make_pair(next[i],a[i]));//\u628a\u5f53\u524d\u70b9push\u8fdb\u53bb \n\t\t}//\u7ed3\u675f\u5426\u5219 \n\t}//\u7ed3\u675f \u5faa\u73af \n\tprintf(\"%d\",cnt); //\u8f93\u51fa\u7b54\u6848 \n\treturn 0; //\u529f\u5fb7\u5706\u6ee1 \n}//\u7ed3\u675fmain\u51fd\u6570 \n```\n~~\u8a00\u7b80\u610f\u8d45~~\n",
        "postTime": 1566287440,
        "uid": 82120,
        "name": "CW666",
        "ccfLevel": 0,
        "title": "\u849f\u84bb\u7684\u81ea\u529b\u66f4\u751f"
    },
    {
        "content": "\u53ef\u4ee5\u5c06\u95ee\u9898\u8fdb\u884c\u8f6c\u5316\u3002  \n\u5c06\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u52a0\u5165 Cache \u8f6c\u5316\u4e3a\u7ebf\u6bb5\u8986\u76d6\u4e86\u65f6\u95f4\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u8981\u6c42\u6bcf\u4e2a\u65f6\u523b\u4e0d\u80fd\u6709\u8d85\u8fc7 $m$ \u6bb5\u8986\u76d6\uff0c\u4e14\u6bcf\u4e00\u4e2a\u70b9\u5fc5\u987b\u88ab\u8be5\u989c\u8272\u7684\u7ebf\u6bb5\u8986\u76d6\uff0c\u6c42\u6700\u5c11\u8981\u51e0\u6bb5\u3002\n\n\u663e\u7136\u8981\u4e0d\u628a\u4e24\u4e2a\u989c\u8272\u76f8\u540c\u7684\u7aef\u70b9\u76f8\u8fde\uff0c\u8981\u4e0d\u7ebf\u6bb5\u957f\u5ea6\u8d85\u8fc7 $1$ \u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\u6240\u4ee5\u53ea\u9700\u8003\u8651\u76f8\u90bb\u4e24\u4e2a\u989c\u8272\u76f8\u540c\u7684\u70b9\u8fde\u6210\u7684\u7ebf\u6bb5\u4e2d\u8981\u53d6\u54ea\u51e0\u6761\u3002  \n\u4e0d\u51b2\u7a81\u7684\u65f6\u5019\u663e\u7136\u662f\u8981\u90fd\u53d6\u4e0a\uff0c\u51b2\u7a81\u7684\u65f6\u5019\u56e0\u4e3a\u5f53\u524d\u9009\u54ea\u6761\u4ef7\u503c\u90fd\u4e00\u6837\uff0c\u53ea\u662f\u8981\u5c3d\u53ef\u80fd\u51cf\u5c11\u5bf9\u540e\u9762\u7684\u5f71\u54cd\uff0c\u90a3\u4e48\u5c31\u9009\u53f3\u7aef\u70b9\u6700\u540e\u9762\u7684\u7ebf\u6bb5\u8e22\u51fa\u5c31\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u4e86\u3002\n\n\u81f3\u4e8e\u5b9e\u73b0\u3002\u79bb\u6563\u5316\uff1f\u4f18\u5148\u961f\u5217\uff1f\u4e8c\u5206\uff1f**\u4e0d\u7528\uff01**\uff0c\u4f5c\u4e3a STL \u4eba\uff0c\u6211\u4eec\u5f53\u7136\u9009\u62e9 `std::map` \u548c `std::set` \u6765\u7ef4\u62a4\uff01  \n\u5177\u4f53\u5730\uff0c\u5148\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u4e0b\u4e00\u4e2a\u989c\u8272\u76f8\u540c\u7684\u7aef\u70b9\uff08\u6ca1\u6709\u8bbe\u4e3a\u65e0\u9650\u5927\uff09\uff0c\u7136\u540e\u5728 `std::set` \u91cc\u9762\u5b58\u5f53\u524d\u60f3\u53d6\u7684\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u5220\u9664\u5c31\u610f\u5473\u7740\u5220\u6389\u6700\u8fd1\u7684\u8be5\u989c\u8272\u7684\u70b9\u548c\u6700\u8fd1\u53f3\u8fb9\u8be5\u989c\u8272\u70b9\u6784\u6210\u7684\u6761\u7ebf\u6bb5\u3002  \n\u8bb0\u5f97\u6bcf\u5230\u4e00\u4e2a\u70b9\u66f4\u65b0\u53f3\u7aef\u70b9\u7684\u503c\u3002\n\n\u4ee3\u7801\u975e\u5e38\u77ed\uff01\n\n```cpp\nvoid Update(int i) {\n\tstd::set<std::pair<int, int> >::iterator it = \n\t\tkick.lower_bound(std::make_pair(i, a[i]));\n\tstd::pair<int, int> now = *it;\n\tkick.erase(it);\n\tnow.first = next[i], kick.insert(now);\n}\nvoid Push(int i) {\n\tin[a[i]] = 1, size++, ans ++;\n\tkick.insert(std::make_pair(next[i], a[i]));\n}\nvoid Pop() {\n\tin[(--kick.end())->second] = 0, size --;\n\tkick.erase(--kick.end());\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tmemset(next, 0x3f, sizeof next);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tnext[lst[a[i]]] = i, lst[a[i]] = i;\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (in[a[i]]) { Update(i); continue; }\n\t\tif (size+1 > m) Pop(); \n\t\tPush(i);\t\t\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1625223661,
        "uid": 40318,
        "name": "Acfboy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3  [JSOI2010]\u7f13\u5b58\u4ea4\u6362"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9700\u8981\u8fd0\u7528\u8d2a\u5fc3+\u79bb\u6563\u5316\u7684\u601d\u60f3\u3002\n\n\u9996\u5148\uff0c\u5f53\u5185\u5b58\u672a\u6ee1\u65f6\uff0c\u9700\u8981\u6301\u7eed\u8c03\u5165\u5355\u5143\uff0c\u5fc5\u7136\u4f1a\u4ea7\u751f\u8bbf\u95ee\u7f3a\u5931\u3002\u56e0\u800c\u5173\u952e\u662f\u5728\u5185\u5b58\u6ee1\u65f6\u7684\u64cd\u4f5c\u3002\u8003\u8651\u5f53\u5185\u5b58\u6ee1\u65f6\uff0c\u64a4\u51fa\u6ee1\u8db3\u4f55\u79cd\u6761\u4ef6\u7684\u5355\u5143\u624d\u80fd\u4f7f\u8bbf\u95ee\u7f3a\u5931\u6700\u5c0f\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u5728\u4e00\u6bb5\u533a\u95f4\u5185\u8be5\u5355\u5143\u7684\u8c03\u7528\u6b21\u6570\u6700\u5c11\uff0c\u5c31\u5e94\u8be5\u79fb\u9664\u8be5\u5355\u5143\u3002\u56e0\u4e3a\u5982\u679c\u79fb\u53bb\u8c03\u7528\u6b21\u6570\u591a\u7684\u5355\u5143\uff0c\u5728\u533a\u95f4\u5185\u4f1a\u66f4\u5bb9\u6613\u9020\u6210\u66f4\u591a\u7684\u8bbf\u95ee\u7f3a\u5931\u3002\n\n\u5982\u4f55\u89c4\u5b9a\u533a\u95f4\u957f\u5ea6\uff0c\u53c8\u5982\u4f55\u5224\u65ad\u5355\u5143\u5728\u533a\u95f4\u5185\u7684\u8c03\u7528\u9891\u7387\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4fdd\u5b58\u5728Cache\u4e2d\u5355\u5143\u4e0b\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u523b\uff0c\u5bfb\u627e\u5728Cache\u4e2d\u8ddd\u79bb\u4e0b\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u523b\u6700\u4e45\u7684\u5355\u5143\u3002\u56e0\u4e3a\u4ece\u5f53\u524d\u65f6\u523b\u5230\u8be5\u5355\u5143\u8c03\u7528\u7684\u4e0b\u4e00\u65f6\u523b\u4e2d\uff0c\u8be5\u5355\u5143\u53ea\u8c03\u7528\u4e86\u4e00\u6b21\uff0c\u5176\u4ed6\u5355\u5143\u5fc5\u7136\u81f3\u5c11\u8c03\u7528\u4e00\u6b21\uff0c\u5728\u8fd9\u4e00\u533a\u95f4\u4e2d\u51fa\u73b0\u9891\u7387\u6709\u53ef\u80fd\u66f4\u9ad8\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\u6570\u636e\u8303\u56f4\uff0c\u4e3b\u5b58\u8bbf\u95ee\u6b21\u6570<=100,000,\u800c\u4e3b\u5b58\u5757\u7f16\u53f7<=1,000,000,000\u3002\u56e0\u800c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u79bb\u6563\u5316\uff0c\u5bf9\u4e3b\u5b58\u5757\u91cd\u65b0\u8fdb\u884c\u7f16\u53f7\uff0c\u7136\u540e\u4ece\u540e\u5f80\u524d\u5efa\u7acb\u94fe\u72b6\u7ed3\u6784\uff0c\u4fdd\u5b58\u4e0d\u540c\u5355\u5143\u4e0b\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u95f4\u3002\u6bcf\u6b21\u52a0\u5165\u65b0\u5355\u5143\u65f6\u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u5185\u5b58\u5757\u3002\n\n\u7136\u800c\u8fd9\u6837\u53ea\u80fd\u62ff\u523090\u5206(1 TLE)\u3002\n\n\u8003\u8651\u662f\u5426\u6709\u66f4\u5feb\u627e\u5230\u9700\u8981\u79fb\u51fa\u7684\u5355\u5143\u7684\u505a\u6cd5\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u5b58\u5165\u5404\u5355\u5143\u4e0b\u4e00\u6b21\u7684\u8c03\u7528\u65f6\u95f4\u3002\u6bcf\u6b21\u9700\u8981\u79fb\u9664\u65f6\u5c31\u5728\u961f\u5217\u4e2d\u67e5\u627e\uff0c\u5982\u679c\u67e5\u5230\u67d0\u4e2a\u5355\u5143\u73b0\u5728\u4ecd\u5728Cache\u4e2d\uff0c\u5c31\u628a\u5b83\u79fb\u51fa\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint n,m;\nint num[101000],rank[101000];\nint head[101000],nxt[101000],tnt=0,pos[101000];\nbool in[101000];\nint cnt=0,maxim=0;\npriority_queue <pair<int,int> > q;\nvoid add(int u){\n\tnxt[++tnt]=head[u];\n\thead[u]=tnt;\n}\nint check()\n{\n\tif(cnt<m)\n\t\treturn -1;\t//Cache\u672a\u6ee1\n\tint mpos=0;\n\twhile(!in[q.top().second]&&q.size())\t\n\t\tq.pop();\t\t//\u786e\u8ba4\u5355\u5143\u662f\u5426\u5728Cache\u4e2d\n\tif(q.size()){\n\t\tmpos=q.top().second;\n\t\tq.pop();\n\t}\n\treturn mpos;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&num[i]);\n\t\trank[i]=num[i];\n\t}\n\tsort(rank,rank+n);\n\tint qr=unique(rank,rank+n)-rank;\t//\u79bb\u6563\u5316\n\ttnt=0;\n\tfor(int i=n-1;i>=0;i--){\n\t\tnum[i]=lower_bound(rank,rank+qr,num[i])-rank;\n\t\tadd(num[i]);\t//\u5efa\u7acb\u94fe\u8868\n\t\tmaxim=max(maxim,num[i]);\n\t}\n\tint ans=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(!in[num[i]]){\n\t\t\tint p=check();\n\t\t\tif(p==-1)\t\t\t//Cache\u672a\u6ee1\n\t\t\t\tcnt++;\n\t\t\telse\n\t\t\t\tin[p]=false;\t//\u5c06\u5355\u5143\u79fb\u51fa\n\t\t\tin[num[i]]=true;\t//\u79fb\u5165\u5355\u5143\n\t\t\t++ans;\n\t\t}\n\t\tif(!pos[num[i]])\t//\u9996\u6b21\u6dfb\u52a0\u4ece\u8868\u5934\u5f00\u59cb\n\t\t\tpos[num[i]]=head[num[i]];\n\t\telse\n\t\t\tpos[num[i]]=nxt[pos[num[i]]];\n\t\tq.push(make_pair(-nxt[pos[num[i]]],num[i]));\t//\u5c06\u4e0b\u4e00\u6b21\u51fa\u73b0\u65f6\u95f4\u653e\u5165\u4f18\u5148\u961f\u5217\u91cc\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1572415575,
        "uid": 137422,
        "name": "JasonL",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4404 \u3010[JSOI2010]\u7f13\u5b58\u4ea4\u6362\u3011"
    },
    {
        "content": "## Pro ##\n\n[Luogu4404][1]\n\n## Sol ##\n\n[blog\u98df\u7528](http://www.caolaoshi.men/index.php/archives/jsoi2010-hcjh.html)\n\n\u8d2a\u5fc3\uff0c\u4f18\u5148\u961f\u5217\u3002\n\n\u62ff\u5230\u9898\u7b2c\u4e00\u773c\u7adf\u7136\u662fDP\uff01\u4e0d\u5bf9\u4e0d\u5bf9\uff0c\u662f\u8d2a\u5fc3\u3002\u627e\u4e00\u7ec4\u6570\u636e\u5f88\u5bb9\u6613\u7684\u63a8\u5bfc\u51fa\u4e00\u4e2a\u8d2a\u5fc3\u65b9\u6cd5\uff1a\u5982\u679c\u8be5\u5bb9\u5668\u5df2\u6ee1\uff0c\u540e\u6765\u51fa\u73b0\u7684\u4e0d\u5728\u5bb9\u5668\u4e2d\u7684\uff0c\u4e00\u5b9a\u8981\u7531\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u4e2d\u8ddd\u79bb\u4e0b\u4e00\u6b21\u51fa\u73b0\u6700\u8fdc\u7684\u90a3\u4e2a\u5143\u7d20\u6765\u66ff\u6362\u6389\u3002\u53ef\u80fd\u6709\u70b9\u62bd\u8c61\uff0c\u6162\u6162\u8bfb\u4f1a\u660e\u767d\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u5904\u7406\u51fa\u5230\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u8ddd\u79bb\uff0c\u56e0\u4e3a\u524d\u9762\u51fa\u73b0\u8fc7\u7684\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u65f6\u95f4\u7531\u4e0b\u4e00\u6b21\u51b3\u5b9a\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5012\u7740\u5faa\u73af\u7b97\u51fa\u4e00\u4e2a\u7c7b\u4f3cAC\u81ea\u52a8\u673a\u6216\u8005KMP\u4e2d\u7684\u5931\u914d\u6570\u7ec4\u3002\u6211\u4eec\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u8ddd\u79bb\u4e0b\u4e00\u6b21\u7684\u6700\u5927\u503c\uff0c\u8fd8\u8981\u8bb0\u5f55\u4e0b\u8be5\u70b9\u7684\u7f16\u53f7\uff0c\u65b9\u4fbf\u68c0\u67e5\u662f\u5426\u5728\u5bb9\u5668\u4e2d\u3002\u8f93\u5165\u7684\u7f16\u53f7\u975e\u5e38\u5927\uff0c\u56e0\u6b64\u8981\u79bb\u6563\u5316\u5904\u7406\uff0c\u4e00\u5b9a\u8981\u7528\u76f8\u540c\u5143\u7d20\u6709\u76f8\u540c\u5e8f\u53f7\u7684\u79bb\u6563\u5316\u65b9\u5f0f\u3002\u5751\u70b9\uff1a1.\u6700\u5f00\u59cb\u7684m\u4e2a\u70b9\u4e0d\u80fd\u76f4\u63a5\u653e\u5165\uff0c\u8fd8\u8981\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u5728\u5bb9\u5668\u4e2d\uff1b2.\u4e0d\u7ba1\u600e\u6837\u90fd\u8981\u653e\u5165\uff0c\u5373\u4f7f\u5df2\u7ecf\u5728\u5bb9\u5668\u4e2d\uff0c\u653e\u5165\u7684\u65f6\u5019\u4f18\u5148\u961f\u5217\u4f1a\u5e2e\u4f60\u9009\u62e9\u597d\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u5bf9\u8d2a\u5fc3\u7684\u7ed3\u679c\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)**\n\n## Code ##\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<vector>\nusing namespace std;\n\nconst int L = 1e5 + 5;\nstruct node {\n\tint fail , num;\n};\nstruct cmp {\n\tbool operator()(const node x , const node y) {\n\t\treturn x.fail < y.fail;\n\t}\n};\nint n , m , fail[L] , now[L] , ans = 0 , flag = 1;\nlong long num[L] , t[L];\npriority_queue<node , vector<node> , cmp>q;\n\nint main() {\n\tmemset(now , 0x3f , sizeof(now));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%lld\",&num[i]);\n\t\tt[i] = num[i];\n\t}\n\tsort(t+1 , t+n+1);\n\tfor(int i=1; i<=n; i++)\n\t\tnum[i] = lower_bound(t+1 , t+n+1 , num[i]) - t;\n\tfor(int i=n; i>=1; i--) {\n\t\tfail[i] = now[num[i]];\n\t\tnow[num[i]] = i;\n\t}\n\tmemset(now , 0 ,sizeof(now));\n\tfor(int i=1; i<=n; i++) {\n\t\tif(ans == m)\n\t\t\tflag = 2;\n\t\tif(flag == 1 && !now[num[i]]) {\n\t\t\tans++;\n\t\t\tnow[num[i]] = 1;\n\t\t}\n\t\tif(flag == 2 && !now[num[i]]) {\n\t\t\tans++;\n\t\t\tnow[num[i]] = 1;\n\t\t\tnow[q.top().num] = 0;\n\t\t\tq.pop();\n\t\t}\n\t\tnode u ;\n\t\tu.num = num[i] ; u.fail = fail[i];\n\t\tq.push(u);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\n  [1]: https://www.luogu.org/problemnew/show/P4404",
        "postTime": 1533548907,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4404 \u3010[JSOI2010]\u7f13\u5b58\u4ea4\u6362\u3011"
    },
    {
        "content": "\u5f53\u9047\u5230\u9700\u8981\u5c06\u4e3b\u5b58\u5355\u5143\u52a0\u8fdbcache\u7684\u65f6\u5019,\u5c31\u770bcache\u91cc\u662f\u5426\u6ee1\u4e86,\u6ee1\u4e86\u7684\u8bdd,\u5c31\u5220\u9664\u79bb\u6700\u9760\u540e\u7684\u90a3\u4e00\u4e2a\uff0c\u8fd9\u6837\u4e00\u5b9a\u6700\u4f18\u3002\n\u4f46\u662f\u5404\u4f4d\u5927\u4f6c\u7684\u4ee3\u7801\u592a\u957f\u4e86\u3002\u3002\u3002\u5176\u5b9e\u53ea\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u5f53\u524d\u7684\u4f18\u5148\u961f\u5217\u7684top\u662f\u5426\u4ecd\u5728cache\u4e2d\u5373\u53ef\u3002\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <queue>\nusing namespace std;\npriority_queue<int>q;\nconst int N=100005;\nint n,m,a[N],b[N],last[N],nxt[N],cnt,ans;\nbool vis[N];\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),b[i]=a[i];\n\tsort(b+1,b+1+n);int u=unique(b+1,b+1+n)-b-1;\n\tfor(int i=1;i<=n;i++)\n    a[i]=lower_bound(b+1,b+1+u,a[i])-b,\n    nxt[last[a[i]]]=i,last[a[i]]=i;\n\tfor(int i=1;i<=u;i++) nxt[last[i]]=n+i,a[n+i]=i;\n\tfor(int i=1;i<=n;i++) {\n\t\twhile(q.size()&&vis[a[q.top()]]==false) \n        q.pop();\n\t\tif(vis[a[i]]) {q.push(nxt[i]);continue;}\n\t\tif(cnt<m) {\n        \tvis[a[i]]=1,\n            cnt++,ans++,\n            q.push(nxt[i]);\n            continue;\n        }\n\t\tvis[a[q.top()]]=0,\n        ans++,q.pop();\n        q.push(nxt[i]);\n        vis[a[i]]=1;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1537341797,
        "uid": 52191,
        "name": "swhsz",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4404 \u3010[JSOI2010]\u7f13\u5b58\u4ea4\u6362\u3011"
    },
    {
        "content": "~~\u53ef\u4ee5\u8bc1\u660e\uff0c~~\u6bcf\u4e00\u6b21\u4ececache\u4e2d\u5220\u9664\u7684\u4e3b\u5b58\u4e00\u5b9a\u662f\u4e0b\u6b21\u8bbf\u95ee\u6700\u665a\u7684\uff0c\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u3002\n\n\u9996\u5148\u5f53\u7136\u662f\u8981\u79bb\u6563\u5316\u3002\u5148\u5012\u7740\u626b\u4e00\u904d\u5efa\u51fa\u94fe\u5f0f\u7ed3\u6784\uff0c\u518d\u6b63\u7740\u626b\u4e00\u904d\u6a21\u62df\u8bbf\u95ee\u8fc7\u7a0b\uff0c\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u3002\n\n```\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n\nusing std::pair;\nusing std::priority_queue;\ntypedef pair<int, int> opt;\n//first\u8868\u793a\u4e0b\u4e00\u6b21\u8bbf\u95ee\u8be5\u4e3b\u5b58\u7684\u65f6\u95f4\uff0csecond\u8868\u793a\u8fd9\u5757\u4e3b\u5b58\u79bb\u6563\u5316\u540e\u7684\u5e8f\u53f7 \nint Read()\n{\n\tint x = 0;\n\tchar c = getchar();\n\twhile (!isdigit(c))\n\t{\n\t\tc = getchar();\n\t}\n\twhile (isdigit(c))\n\t{\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn x;\n}\n\nint next_query[100005], first_query[100005];\n//next_query[opt]\u8868\u793a\u4e0b\u4e00\u4e2a \u4e0eopt\u4f7f\u7528\u76f8\u540c\u4e3b\u5b58\u7684 \u64cd\u4f5c\n//first_query[mem]\u8868\u793a \u4e0b\u4e00\u6b21\u5bf9mem\u7684 \u64cd\u4f5c \nvoid Add_opt(int memory, int order)//\u6784\u5efa\u4e0a\u8fb9\u4e24\u4e2a\u6570\u7ec4 \n{\n\tnext_query[order] = first_query[memory];\n\tfirst_query[memory] = order;\n}\nvoid Do_opt(int memory)//\u7ef4\u62a4\u4e0a\u8fb9first_query\u6570\u7ec4 \n{\n\tfirst_query[memory] = next_query[first_query[memory]];\n}\n\nint memory[100005], number[100005];\nbool inCache[100005];//\u8fd9\u5757\u4e3b\u5b58\u662f\u5426\u5728cache\u4e2d \n\nint main()\n{\n\tmemset(first_query, 0x3f, sizeof(first_query));\n\tint n = Read(), m = Read();\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tmemory[i] = Read();\n\t\tnumber[i] = memory[i];\n\t}\n\tstd::sort(number + 1, number + n + 1);\n\tint size = std::unique(number + 1, number + n + 1) - number - 1;\n\t//\u79bb\u6563\u5316\uff0c\u4ece\u540e\u5f80\u524d\u5efa\u51fa\u6bcf\u5757\u4e3b\u5b58\u7684\u64cd\u4f5c\u987a\u5e8f \n\tfor (int i = n; i >= 1; --i)\n\t{\n\t\tAdd_opt(memory[i] = std::lower_bound(number + 1, number + size + 1,\n\t\t                                     memory[i]) - number, i);\n\t}\n\t\n\tint ans = 0;\n\t//\u4ece\u524d\u5f80\u540e\u8d2a\u5fc3\u64cd\u4f5c \n\tpriority_queue<opt> cache;//\u8fd9\u4e2a\u5355\u8bcd\u7684\u8bfb\u97f3\u540ccash\uff0c\u4e0d\u8bfbcatch \n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif (!inCache[memory[i]])\n\t\t{\n\t\t\t++ans;//miss\u4e86\u4e00\u6b21 \n\t\t\tif (cache.size() == m)//cache\u6ee1\u4e86 \n\t\t\t{\n\t\t\t\tinCache[cache.top().second] = 0;\n\t\t\t\tcache.pop();//\u79fb\u9664\u4e0b\u6b21\u64cd\u4f5c\u6700\u8fdc\u7684\u4e3b\u5b58 \n\t\t\t}\n\t\t\tDo_opt(memory[i]);//\u8fdb\u884c\u64cd\u4f5c \n\t\t\tinCache[memory[i]] = 1;\n\t\t\tcache.push(opt(first_query[memory[i]], memory[i]));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDo_opt(memory[i]);\n\t\t\t++m;\n\t\t\t//std::priority_queue\u4e0d\u80fdmodify\uff0c\u90a3\u5c31\u518dpush\u4e00\u6b21\uff0c\u540c\u65f6\u8ba9\u5927\u5c0f\u9650\u5236+1\n\t\t\t//\u4e4b\u524d\u5bf9\u8fd9\u5757\u4e3b\u5b58\u7684\u64cd\u4f5c\u7684first \u4e00\u5b9a\u5c0f\u4e8e \u65b0push\u8fdb\u53bb\u7684\u64cd\u4f5c\u7684first\n\t\t\t//\u6240\u4ee5\u5bf9\u8d2a\u5fc3\u6ca1\u6709\u5f71\u54cd \n\t\t\tcache.push(opt(first_query[memory[i]], memory[i]));\n\t\t}\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1531531590,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4404 \u3010[JSOI2010]\u7f13\u5b58\u4ea4\u6362\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u82ef\u9898\u662f\u5728%\u62df\u8d5b\u4e2d\u505a\u51fa\uff0c\u5e76\u89c9\u5f97\u81ea\u5df1\u5b9e\u73b0\u7684\u65b9\u5f0f\u53ef\u4f9b\u4ee5\u540e\u5b66\u4e60\uff0c\u5199\u6b64\u9898\u89e3\u4ee5\u8bb0\u5f55\u3002\n\n## \u601d\u8def\n\n\u9898\u76ee\u6709\u70b9\u7ed5\uff0c\u5927\u81f4\u610f\u601d\u4e3a\uff1a\u7ed9\u51fa\u4e00\u4e2a\u9650\u5b9a\u5927\u5c0f\u7a7a\u96c6\uff0c\u4f9d\u6b21\u5411\u96c6\u5408\u4e2d\u653e\u6570\u3002\u5982\u679c\u5f53\u524d\u96c6\u5408\u4e2d\u6709\u6b64\u6570\uff0c\u8df3\u8fc7\uff1b\u5982\u679c\u65e0\u6b64\u6570\uff0c\u8bb0\u4e3a $miss$ \uff0c\u5e76\u4e14\u82e5\u96c6\u5408\u672a\u6ee1\uff0c\u52a0\u5165\u6b64\u6570\uff0c\u53cd\u4e4b\u7528\u6b64\u6570\u66ff\u4ee3\u96c6\u5408\u4e2d\u4e00\u4e2a\u6570\u3002\u6c42\u89e3 $miss$ \u6b21\u6570\u7684\u6700\u5c0f\u503c\u3002\n\n\u5982\u679c\u7406\u89e3\u4e86\uff0c\u4fbf\u5f88\u5bb9\u6613\u60f3\u5230\u6211\u4eec\u53ef\u4ee5\u7528**\u8d2a\u5fc3**\u7684\u601d\u60f3\u6765\u8fdb\u884c\u89e3\u51b3\u3002\n\n\u90a3\u4e48\uff0c\u8be5\u5982\u4f55\u8d2a\u5fc3\u5462\uff1f\n\n\u518d\u6b21\u8bfb\u9898\u4e0e\u6a21\u62df\u6837\u4f8b\u53ef\u77e5\uff0c\u6211\u4eec\u7684\u6700\u4f18\u7b56\u7565\u662f\uff1a**\u82e5\u96c6\u5408\u5df2\u6ee1\uff0c\u4e3b\u52a8\u66ff\u6362\u5f53\u524d\u96c6\u5408\u4e2d\uff0c\u4e0b\u6b21\u51fa\u73b0\u4f4d\u7f6e\u9760\u540e\u7684\u6570**\u3002\u540c\u65f6\u4e5f\u5bb9\u6613\u8bc1\u660e\uff1a\u82e5\u6211\u4eec\u4e0d\u53bb\u6309\u7167\u4ee5\u4e0a\u7b56\u7565\u8fdb\u884c\uff0c\u5373\u8bbe $next_a < next_b$\uff0c\u6211\u4eec\u53d6 $a$ \u8fdb\u884c\u66ff\u6362\uff0c\u90a3\u4e48\u5728\u540e\u9762\u5faa\u73af\u5230 $next_b$ \u65f6\uff0c\u4fbf\u9700\u8981\u518d\u6b21\u66ff\u6362\u96c6\u5408\u4e2d\u9664 $a$ \u4ee5\u5916\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u662f\u6bd4\u53d6 $b$ \u66ff\u6362\u7684\u60c5\u51b5\u66f4\u52a3\u7684\u3002\n\n\u8003\u8651\u5982\u4e0a\u8d2a\u5fc3\u3002\n\n## \u505a\u6cd5\n\n\u73b0\u5728\uff0c\u6709\u4e86\u4ee5\u4e0a\u8d2a\u5fc3\u601d\u8def\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u64cd\u4f5c\u4fbf\u5341\u5206\u660e\u663e\uff1a\n\n* \u5b9e\u65f6\u66f4\u65b0\u5f53\u524d\u5143\u7d20\u4e0b\u4e00\u6b21\u4f4d\u7f6e $next_i$\u3002\n\n* \u5b9e\u65f6\u67e5\u8be2\u5f53\u524d\u96c6\u5408\u4e2d\uff0c\u6709\u6700\u5927 $next_i$ \u7684\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u4e0b\u6807\u3002\n\n\u8fd9\u91cc\u5c31\u9700\u8981\u6211\u4eec\u6700\u5e38\u7528\u7684**\u7ebf\u6bb5\u6811**\u51fa\u573a\u4e86\u3002\u5bb9\u6613\u60f3\u5230\uff0c\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u53ef\u4ee5\u8bb0\u5982\u4e0b\u51e0\u4e2a\u503c\uff1a\n\n```cpp\nstruct Tree\n{\n\tint l,r,val,id;\n\t/*\n\tl,r \u5373\u4e3a\u5de6\u53f3\u7aef\u70b9\n\tval \u4e3anext\u7684\u503c \n\tid  \u4e3a\u5143\u7d20\u7684\u4e0b\u6807 \n\t*/\n}t[M<<2];\n```\n\n\u90a3\u4e48\u5728\u7ef4\u62a4\u533a\u95f4\u7684 $next$ \u6700\u5927\u65f6\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u987a\u5e26\u66f4\u65b0\u6700\u5927\u5143\u7d20\u7684\u4e0b\u6807\uff0c\u5982\u4e0b\uff1a\n\n```cpp\nvoid pushup(int x)\n{\n\tt[x].val=max(t[ls(x)].val,t[rs(x)].val);\n\tt[x].id=t[ls(x)].val>t[rs(x)].val?t[ls(x)].id:t[rs(x)].id;\n}\n```\n\n\u540c\u65f6\u4e5f\u8981\u6ce8\u610f\uff0c\u4e3a\u4e86\u540e\u7eed\u64cd\u4f5c\u4fbf\u5229\uff0c\u6211\u4eec\u8981\u5148\u5c06\u8be5\u96c6\u5408\u585e\u6ee1\u540e\uff0c\u518d\u4f9d\u6b21\u64cd\u4f5c\u3002\u800c\u5220\u9664\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u6b64\u5143\u7d20\u7684 $next$ \u8d4b\u503c\u4e3a\u6781\u5c0f\u503c\uff0c\u8fd9\u6837\u4fbf\u4e0d\u4f1a\u53c2\u4e0e\u7ebf\u6bb5\u6811\u7684\u66f4\u65b0\u3002\n\n\u5168\u90e8code\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ls(x) x<<1\n#define rs(x) x<<1|1\nconst int M=2e5+5;\nbool f1;\n\nchar IO;\nint read()\n{\n    int num=0;bool f=0;\n    while(IO=getchar(),IO<48||IO>57)if(IO=='-')f=1;\n    do num=(num<<1)+(num<<3)+(IO^48);\n    while(IO=getchar(),IO>=48&&IO<=57);\n    return f?-num:num;\n}\n\nint n,m,ans;\nint id[M],tmp[M],_next[M],last[M];\nbool vis[M];\n\nstruct Tree\n{\n\tint l,r,val,id;\n\t/*\n\tl,r \u5373\u4e3a\u5de6\u53f3\u7aef\u70b9\n\tval \u4e3anext\u7684\u503c \n\tid  \u4e3a\u5143\u7d20\u7684\u4e0b\u6807 \n\t*/\n}t[M<<2];\nvoid pushup(int x)\n{\n\tt[x].val=max(t[ls(x)].val,t[rs(x)].val);\n\tt[x].id=t[ls(x)].val>t[rs(x)].val?t[ls(x)].id:t[rs(x)].id;\n}\nvoid build(int x,int l,int r)\n{\n\tt[x].l=l,t[x].r=r;\n\tif(l==r)\n\t{\n\t\tt[x].id=l;\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tbuild(ls(x),l,mid);\n\tbuild(rs(x),mid+1,r);\n}\nvoid update(int x,int pos,int v)\n{\n\tif(t[x].l==t[x].r)\n\t{\n\t\tt[x].val=v;\n\t\treturn ;\n\t}\n\tint mid=t[x].l+t[x].r>>1;\n\tif(pos<=mid)update(ls(x),pos,v);\n\telse update(rs(x),pos,v);\n\tpushup(x);\n}\n\nbool f2;\nint main()\n{\n//  cout<<1.0*(&f2-&f1)/1024.0/1024.0<<endl;\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)id[i]=read(),tmp[i]=id[i];\n\tsort(tmp+1,tmp+n+1);\n\tint tot=unique(tmp+1,tmp+n+1)-tmp-1;\n\tfor(int i=1;i<=n;i++)\n\t\tid[i]=lower_bound(tmp+1,tmp+tot+1,id[i])-tmp;//\u79bb\u6563\u5316\n\t\n    for(int i=1;i<=n;i++)\n\t{\n\t\tif(last[id[i]])_next[last[id[i]]]=i;\n\t\tlast[id[i]]=i;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!_next[i])_next[i]=n+1;\n\t\n\tint pos=1;\n\tbuild(1,1,tot);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(ans==m)break;pos=i;\n\t\tif(vis[id[i]])update(1,id[i],_next[i]);\n\t\telse vis[id[i]]=true,update(1,id[i],_next[i]),ans++;\n\t}//\u5148\u5c06\u5f53\u524d\u96c6\u5408\u585e\u6ee1\n\tfor(int i=pos+1;i<=n;i++)\n\t{\n\t\tif(vis[id[i]])\n\t\t{\n\t\t\tupdate(1,id[i],_next[i]);//\u6709\u6570\u76f4\u63a5\u66f4\u65b0\n\t\t}\n\t\telse \n\t\t{\n\t\t\tint num=t[1].id;\n\t\t\tvis[num]=false,update(1,num,0);//\u8d4b\u503c\u4e3a\u6781\u5c0f\u503c\n\t\t\tvis[id[i]]=true,update(1,id[i],_next[i]);\n\t\t\t\n\t\t\tans++;\n\t\t}\n\t}\n\n\tprintf(\"%d\",ans);\n}\n```\n\n## \u603b\u7ed3\n\n\u6b64\u9898\u7528\u7ebf\u6bb5\u6811\u52a8\u6001\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\u5185**\u6700\u5927\u5143\u7d20\u4e0b\u6807**\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5b66\u4e60\uff01\n\n",
        "postTime": 1631197320,
        "uid": 324729,
        "name": "Tuibro",
        "ccfLevel": 0,
        "title": "[JSOI2010]\u7f13\u5b58\u4ea4\u6362"
    },
    {
        "content": "\u8d2a\u5fc3\u7b56\u7565\uff1a\u6bcf\u6b21\u9700\u8981\u6362\u51fa\u53bb\u4e00\u4e2a\u5355\u5143\u7684\u65f6\u5019\uff0c\u79fb\u51fa\u4e0b\u6b21\u8bbf\u95ee\u6700\u8fdc\u7684\u3002\u5982\u679c\u9009\u4e00\u4e2a\u66f4\u8fd1\u7684\u6362\u51fa\u53bb\uff0c\u90a3\u6709\u53ef\u80fd\u9700\u8981\u518d\u628a\u5b83\u66f4\u591a\u6b21\u5730\u6362\u8fdb\u6765\u3002\n\n\u53ef\u4ee5\u7528\u4e00\u4e2a\u5e73\u8861\u6811\u627e\u51fa\u4e0b\u6b21\u8bbf\u95ee\u6700\u8fdc\u7684\u70b9\uff0c\u8fd9\u91cc\u4f7f\u7528 `std::set`\u3002\n\n```cpp\nconst int N = 100005;\n\nint n, m, k;\nint a[N], lsh[N];\nint ord(int x) { return lower_bound(lsh + 1, lsh + k, x) - lsh; }\n\nBS<int> pos[N]; // i\u53f7\u4e3b\u5b58\u7684\u88ab\u8bbf\u95ee\u65f6\u95f4\nint front[N];\nset<pair<int, int>, greater<pair<int, int>>> cache;\n// {next_access, id}\nbool inCache[N];\n\nint main() {\n    rd(n, m);\n    for (int i = 1; i <= n; ++i) {\n        rd(a[i]); lsh[i] = a[i];\n    }\n    sort(lsh + 1, lsh + n + 1);\n    k = unique(lsh + 1, lsh + n + 1) - lsh;\n\n    for (int i = 1; i <= n; ++i) {\n        pos[ord(a[i])] += i;\n    }\n    for (int i = 1; i < k; ++i) pos[i] += 114514;\n\n    int ans = 0;\n    for (int i = 1; i <= n; ++i) {\n        int id = ord(a[i]);\n        if (inCache[id]) {\n            auto it = cache.find({i, id});\n            cache.erase(it);\n            ++front[id];\n            cache.insert({pos[id][front[id]], id});\n            continue;\n        }\n        ++front[id];\n        ++ans;\n        if (cache.size() == 1u * m) {\n            int x = cache.begin()->second;\n            inCache[x] = 0;\n            cache.erase(cache.begin());\n        }\n        inCache[id] = 1;\n        cache.insert({pos[id][front[id]], id});\n    }\n    printf(\"%d\", ans);\n}\n```",
        "postTime": 1656340374,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] P4404 [JSOI2010]\u7f13\u5b58\u4ea4\u6362"
    },
    {
        "content": "## [\u9898\u9762](https://www.luogu.com.cn/problem/P4404)\n\n## \u89e3\u9898\u601d\u8def\n\n**\u4f18\u5148\u961f\u5217&\u8d2a\u5fc3**\n\n### \u5206\u6790\n\n\u4e00\u5f00\u59cb\u7ed9\u7684\u6570\u636e\u8303\u56f4\u8fc7\u5927\uff0c\u5148\u79bb\u6563\u5316 $\\to$ ~~\u76f4\u63a5\u4e0a\u677f\u5b50~~  \n\u63a5\u7740\u6709\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u5220\u53bb $Cache$ \u4e2d\u518d\u51fa\u73b0\u7684\u4f4d\u7f6e\u6700\u540e\u7684\u5143\u7d20\u662f\u6700\u4f18\u7684\uff0c\u53ea\u8981\u7528 $priority\\_queue$ \u7ef4\u62a4\u5373\u53ef\n\n**\u5982\u4f55\u8bc1\u660e\u8d2a\u5fc3\u7684\u6b63\u786e\u6027** \n\n~~\u771f\u00b7\u663e\u7136~~\uff0c\u5982\u679c\u5220\u53bb\u518d\u51fa\u73b0\u4f4d\u7f6e\u8f83\u524d\u7684\uff0c\u5f53\u505a\u5230\u8fd9\u4e2a\u4f4d\u7f6e $i$ \u65f6\u9700\u8981\u91cd\u65b0\u52a0\u5165\u4e00\u6b21\uff0c\u800c\u5220\u53bb\u8f83\u540e\u7684\u5143\u7d20\uff0c\u5728 $i$ \u4f4d\u7f6e\u65f6\uff0c\u5c31\u4e0d\u9700\u8981\u91cd\u65b0\u52a0\u5165\n\n**\u5173\u4e8e\u4f18\u5148\u961f\u5217**\n\n\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u6700\u5927\u503c\u53ef\u4ee5\u8bf4\u662f\u9759\u6001\u7684\uff0c\u5f53\u6bd4\u8f83\u7684\u5173\u952e\u5b57\u5728\u5916\u90e8\u6539\u53d8\u65f6\uff0c\u4f18\u5148\u961f\u5217\u5185\u90e8\u662f\u4e0d\u4f1a\u505a\u51fa\u8c03\u6574\u7684  \n\u6bd4\u5982\uff0c\u4f18\u5148\u961f\u5217\u4e2d\u6bd4\u8f83\u5173\u952e\u5b57\u4e3a `f[x]`\uff0c\u5982\u679c `f[x]` \u5728\u8be5\u5143\u7d20\u63d2\u5165\u4e4b\u540e\u6539\u53d8\uff0c\u8be5\u5143\u7d20\u5728\u4f18\u5148\u961f\u5217\u5185\u90e8\u7684\u987a\u5e8f\u4e0d\u4f1a\u6539\u53d8  \n\u4e0d\u4ec5\u5982\u6b64\uff0c\u968f\u4e4b\u5e26\u6765\u7684\u4e00\u7cfb\u5217\u8ff7\u4e4b\u64cd\u4f5c\u6839\u672c\u505c\u4e0d\u4e0b\u6765\n\n### warning\n\n\u5c31\u7b97\u4e00\u4e2a\u503c\u5df2\u7ecf\u51fa\u73b0\u5728\u4e86 $Cache$ \u4e2d\uff0c\u76f8\u5e94\u7684\u4fe1\u606f\u4e5f\u8981\u66f4\u65b0\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define rgt register\n#define rint rgt int\n#define LL long long\n#define rll rgt LL\n#define inf 0x7f7f7f7f\n#define N 1000007\nusing namespace std;\ntemplate<class K>inline bool cmax(K&a,const K&b){return (a<b)?a=b,1:0;}\ntemplate<class K>inline bool cmin(K&a,const K&b){return (a>b)?a=b,1:0;}\ninline int read() {\n\trint s=0;\n\trgt char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) s=(s<<1)+(s<<3)+c-'0',c=getchar();\n\treturn s;\n}\nint n,m,t,p[N],b[N],f[N],ls[N],ans;\nbool vis[N];\nstruct cmp{\n\tinline bool operator() (const int a,const int b) {\n\t\treturn f[a]<f[b];\n\t}\n};\npriority_queue<int,vector<int>,cmp>P;//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u6839\u636e\u4e00\u4e2a\u5143\u7d20\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\nint main()\n{\n\trint i;n=read(),m=read();\n\tfor(i=1;i<=n;i++) p[i]=b[i]=read();\n\tsort(p+1,p+n+1),t=unique(p+1,p+n+1)-p-1;\n\tfor(i=1;i<=n;++i) b[i]=lower_bound(p+1,p+t+1,b[i])-p;//\u79bb\u6563\u5316\n\tmemset(ls,inf,(t+1)<<2);\n\tfor(i=n;i;--i) f[i]=ls[b[i]],ls[b[i]]=i;//\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n\tfor(i=1,t=0;i<=n;i++) {\n\t\tif(vis[b[i]]) {P.push(i);continue;}//\u5b58\u5728\u4e8eCache\u4e2d\u4e5f\u8981\u66f4\u65b0\n\t\tif(t<m) ++t;\n\t\telse vis[b[P.top()]]=0,P.pop();\n\t\t++ans,vis[b[i]]=1,P.push(i);\n\t}printf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1576892330,
        "uid": 83564,
        "name": "hovny",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4404 \u3010[JSOI2010]\u7f13\u5b58\u4ea4\u6362\u3011"
    }
]