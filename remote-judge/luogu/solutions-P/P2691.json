[
    {
        "content": "\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\n\n\u8fd9\u4e0d\u662f\u6700\u5927\u6d41\u7684\u7ecf\u5178\u9898\u76ee\u5417\n\n\n\u8003\u8651\u5efa\u56fe\n\n\n\u9898\u76ee\u7ed9\u4e86m\u4e2a\u8d77\u70b9\uff0c\u663e\u7136\u6211\u4eec\u8981\u7528\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u628a\u8fd9\u4e9b\u70b9\u8fde\u8d77\u6765\n\n\u5f97\u5230yes\u7684\u6761\u4ef6\u662f m\u4e2a\u8d77\u70b9\u5230\u8fb9\u754c\u6709m\u6761\u4e0d\u91cd\u590d\u7684\u8fb9\uff0c\u5373\u5982\u679c\u7f51\u683c\u4e2d\u7684\u6bcf\u4e2a\u70b9\u53ea\u8d70\u4e00\u904d\uff0c\u662f\u5426\u6bcf\u4e2a\u8d77\u59cb\u70b9\u90fd\u80fd\u8d70\u5230\u8fb9\u754c\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fb9\u754c\u4e0a\u7684\u70b9\u90fd\u8fde\u5230\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\u4e0a\n\n\u6bcf\u4e2a\u70b9\u53ea\u80fd\u8d70\u4e00\u904d\uff0c\u53ef\u4ee5\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u7136\u540e\u628a\u5bb9\u91cf\u8bbe\u62101\n\n\u8fd9\u6837\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u5982\u679c\u6d41\u91cf\u4e3am\u7684\u8bdd\u5c31\u8bf4\u660e\u6bcf\u4e2a\u8d77\u59cb\u70b9\u90fd\u80fd\u8d70\u5230\u8fb9\u754c\u4e14\u8def\u5f84\u4e0d\u91cd\u590d\n\n\n\u4ee3\u7801\uff1a\n\n\n\n\n\n\n    \n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#include<cmath>\nusing namespace std;\n#define inf 1<<30\n#define maxn 2333\nint n,m,k,head[maxn*maxn],lev[maxn*maxn],cur[maxn*maxn],tot=1,S,T,ans;\nqueue<int>que; bool vis[maxn][maxn];\nstruct Edge{\n    int to,nxt,dis;\n}e[maxn*maxn];\ninline void add(int u,int v,int d)\n{\n    e[++tot].to=v; e[tot].nxt=head[u]; e[tot].dis=d; head[u]=tot;\n    e[++tot].to=u; e[tot].nxt=head[v]; e[tot].dis=0; head[v]=tot;\n}\ninline void read(int &now)\n{\n    char ch=getchar(); now=0;\n    while(ch>'9'||ch<'0') ch=getchar();\n    while(ch>='0'&&ch<='9') now=now*10+ch-'0',ch=getchar(); \n}\nbool bfs()\n{\n    while(!que.empty()) que.pop();\n    for(int i=S;i<=T;i++) lev[i]=-1,cur[i]=head[i];\n    lev[S]=0; que.push(S);\n    while(!que.empty())\n    {\n        int u=que.front();que.pop();\n        for(int i=head[u];i;i=e[i].nxt)\n        {\n            if(e[i].dis>0&&lev[e[i].to]==-1)\n            {\n                lev[e[i].to]=lev[u]+1;\n                que.push(e[i].to);\n                if(e[i].to==T) return true;\n            }\n        }\n    }\n    return false;\n}\nint dinic(int u,int flow)\n{\n    if(u==T) return flow;\n    int res=0,delta;\n    for(int &i=cur[u];i;i=e[i].nxt)\n    {\n        if(e[i].dis>0&&lev[e[i].to]==lev[u]+1)\n        {\n            delta=dinic(e[i].to,min(e[i].dis,flow-res));\n            e[i].dis-=delta; e[i^1].dis+=delta;\n            res+=delta; if(res==flow) break;\n        }\n    }\n    if(res!=flow) lev[u]=-1;\n    return res;\n}\nint main()\n{\n    read(n);\n    read(m);\n    S=0; T=2*n*n+1,tot=0;\n    for(int i=1;i<=n*n;i++) add(i,i+n*n,1);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y; read(x); read(y);\n        add(S,n*(x-1)+y,1);\n    }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<n;j++)\n        {\n            add(n*n+n*(i-1)+j,n*(i-1)+j+1,1);\n            add(n*n+n*(i-1)+j+1,n*(i-1)+j,1);\n        }\n    for(int i=1;i<n;i++)\n        for(int j=1;j<=n;j++)\n        {\n            add(n*n+n*(i-1)+j,n*i+j,1);\n            add(n*n+n*i+j,n*(i-1)+j,1);\n        }\n    for(int i=1;i<=n;i++)\n    {\n        add(n*n+i,T,1);\n        add(n*n+(n-1)*n+i,T,1);\n    }\n    for(int i=2;i<n;i++)\n    {\n        add(n*n+n*(i-1)+1,T,1);\n        add(n*n+n*i,T,1);\n    }\n    while(bfs())\n        ans+=dinic(S,inf);\n    if(ans>=m) cout<<\"YES\";\n    else cout<<\"NO\";\n    return 0;\n}\n\n```",
        "postTime": 1506245164,
        "uid": 25885,
        "name": "Alex\u4e36Baker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2691 \u3010\u9003\u79bb\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u849f\u84bb\u7684\u601d\u8def\u5176\u5b9e\u5e76\u4e0d\u662f\u5f88\u5b8c\u7f8e\uff0c\u672c\u6765\u60f3\u770b\u770b\u80fd\u9a97\u591a\u5c11\u5206\uff0c\u7ed3\u679c0ms\u8dd1\u5b8c\u6ee1\u5206\uff0c\u8fd9\u9053\u9898\u4ed4\u7ec6\u5206\u6790\u540e\u849f\u84bb\u53d1\u73b0\uff0c\u53ef\u4ee5\u628a\u8fd9\u6b4c\u77e9\u9635\u5206\u6210\u8bb8\u591a\u5d4c\u5957\u7684\u5c0f\u77e9\u9635\u6bcf\u4e00\u4e2a\u77e9\u9635\u91cc\u7684\u70b9\u80fd\u4e0d\u80fd\u5168\u51fa\u6765\u5c31\u770b\u5b83\u6700\u5916\u9762\u7684\u7684\u4e00\u5708\u7684\u51fa\u53e3\u6570\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u91cc\u9762\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u662f\u5c31\u53ef\u4ee5\uff0c\u4e0d\u662f\u5c31\u4e0d\u53ef\u4ee5\uff0c\u7136\u540e\u903b\u8f91\u4e0a\u628a\u6700\u5916\u5c42\u7684\u70b9\u6d88\u9664\uff0c\u90a3\u4e48\u91cc\u9762\u53c8\u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u4e00\u5c42\u4e00\u5c42\u7684\u6d88\u53bb\u6240\u6709\u7684\u70b9\uff0c\u4e0d\u8fc7\u8fd9\u601d\u8def\u6709\u53cd\u4f8b\uff0c\u60f3\u77e5\u9053\u7684\u79c1\u4fe1\u6211\u3002\u597d\u4e86\uff0c\u8be6\u60c5\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int N=40;\nint n,map[N][N],m;\nint work(int l)\n{\n    int found=0;//found\u662f\u6700\u5916\u5c42\u70b9\u7684\u4e2a\u6570\n    for(int i=1+l;i<=n-l-1;i++)//\u627e\u70b9\n    {\n        if(map[i][1+l]) found++;\n        if(map[n-l][i]) found++;\n        if(map[i][n-l]) found++;\n        if(map[1+l][i]) found++;\n    }\n    if(map[1+l][1+l]) found--;//\u91cd\u590d\u5bfb\u627e\u7684\u8981\u51cf\u6389\n    if(map[n-l][n-l]) found++;//\u4e0a\u9762\u7684\u5faa\u73af\u6ca1\u5faa\u73af\u5230\u7684\u4f4d\u7f6e\n    m-=found;//\u5220\u9664\u5916\u5c42\u70b9\n    found=(n-l*2-2)*4-found;//\u7b97\u51fa\u51fa\u53e3\u4e2a\u6570\n    return found;\n}\nbool solve()\n{\n    for(int i=0;i<=(n%2 ? n/2-1:n/2-2);i++)//\u679a\u4e3e\u5c42\u6570\uff0c\u4f46\u662f\u8981\u7279\u5224\u5947\u5076\n        if(work(i)<m)//\u91cc\u9762\u7684\u70b9\u6bd4\u51fa\u53e3\u591a......\n            return 0;//\u8fd4\u56defalse\n    return 1;//\u53ef\u4ee5\u5168\u90e8\u5230\u8fbe\u8fb9\u7f18\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        map[x][y]=1;//\u8d77\u59cb\u70b9\u6807\u8bb0\n    }\n    if(solve()) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    return 0;\n}\n```",
        "postTime": 1515853781,
        "uid": 45685,
        "name": "\u6613\u9896\u6770",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2691 \u3010\u9003\u79bb\u3011"
    },
    {
        "content": "LaTeX fixed.\u53e5\u53f7\u52a0\u4e86\n\n\u8fd9\u79cd\u6709\u6bd4\u8f83\u660e\u663e\u7684**\u6e90\u6c47\u5173\u7cfb**\u7684\u53ef\u4ee5\u770b\u51fa\u6765\u662f\u7f51\u7edc\u6d41(\u6bcf\u4e2a\u8d77\u59cb\u8282\u70b9\u662f\u6e90\u70b9\uff0c\u8fb9\u754c\u662f\u6c47\u70b9)\u3002\n\n\u9996\u5148\u6211\u4eec\u7528\u8d85\u7ea7\u6e90\u628a\u8d77\u59cb\u8282\u70b9\u8fde\u8d77\u6765\u3002\n\n\u9898\u76ee\u8bf4\u8def\u5f84\u4e0d\u80fd\u6709\u516c\u5171**\u70b9**\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a**\u70b9**\u53ea\u80fd\u7528\u5728**\u4e00\u6761\u8def\u5f84**\u4e0a\uff0c\u5982\u679c\u628a\u6bcf\u4e2a\u70b9\u5f53\u505a\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u6761\u6027\u8d28\u3002\n\n# \u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u7528**\u62c6\u70b9**\u7684\u65b9\u5f0f\u628a\u8fd9\u4e9b**\u70b9\u62c6\u6210\u4e24\u4efd**\uff0c\u4e24\u4efd\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a $1$ \u7684\u8fb9\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u4fdd\u8bc1\uff0c\u6bcf\u4e2a\u70b9\u53ea\u7528\u4e00\u6b21\u3002\n\n### \u90a3\u4e48\u5982\u679c\u6709\u4e24\u4e2a\u70b9\u662f\u76f8\u90bb\u7684\u600e\u4e48\u8fde\u5462?\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6743\u503c\u4e3a $1$ \u7684\u8fb9\u662f\u5fc5\u987b\u5f97\u8ba9\u4e24\u4e2a\u70b9\u8d70\u8fc7(\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u6700\u7ec8\u88ab\u9009\u5165\u4e86\u4e00\u6761\u8def\u5f84)\uff0c\u6240\u4ee5\u8bf4\u8fd9\u6837\u5c31\u5f88\u597d\u89e3\u51b3\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7rk0g2gv.png)\n\n\u7ea2\u8272\u7684\u8fb9\u5c31\u4ee3\u8868\u662f\u8981\u8fde\u7684\u8fb9\u3002\n\n\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u8be5\u9898\u7684\u7b97\u6cd5\u90e8\u5206\u3002\n\n\u653e\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\n#define idL(i,j) ((i-1)*n+j)\n#define idR(i,j) ((i-1)*n+j+n*n)\nusing namespace std;\ntypedef long long ll;\nconst ll N=36;\nconst ll INF=1e15;\nll n,m,dx[4]={1,0,0,-1},dy[4]={0,1,-1,0},hd[2*N*N],lv[2*N*N],S,T,cur[2*N*N],cnt=1;\nbool vis[N][N];\nll read(){\n\tll x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9') f=((bool)(c^'-')<<1)-1,c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*f;\n}\nstruct edge{ll to,w,nxt;}es[22*N*N];\nvoid ad(ll x,ll y,ll w){es[++cnt]=(edge){y,w,hd[x]},hd[x]=cnt;}\nvoid add(ll x,ll y,ll w,ll v=0){ad(x,y,w);ad(y,x,v);}\nbool bfs(){\n\tqueue<ll> q;\n\tq.push(S);\n\tmemset(lv,0,sizeof(lv));\n\tlv[S]=1;\n\twhile(!q.empty()){\n\t\tll x=q.front();q.pop();\n\t\tfor(ll i=hd[x],v;i;i=es[i].nxt)\n\t\t\tif(!lv[v=es[i].to]&&es[i].w)\n\t\t\t\tlv[v]=lv[x]+1,\n\t\t\t\tq.push(v);\n\t}\n\treturn lv[T];\n}\nll dfs(ll x,ll flow){\n\tif(x==T) return flow;\n\tll res=0;\n\tfor(ll i=cur[x],v,w;i&&flow;i=es[i].nxt){\n\t\tcur[x]=1;\n\t\tif((w=es[i].w)&&lv[v=es[i].to]==lv[x]+1){\n\t\t\tll nxt=dfs(v,min(flow,es[i].w));\n\t\t\tes[i].w-=nxt,es[i^1].w+=nxt,\n\t\t\tres+=nxt,flow-=nxt;\n\t\t}\n\t}\n\treturn res;\n}\nll dinic(){\n\tll sum=0;\n\twhile(bfs()){\n\t\tfor(ll i=S;i<=T;++i) cur[i]=hd[i];\n\t\tsum+=dfs(S,INF);\n\t}\n\treturn sum;\n}\nint main(){\n\tn=read(),m=read(),T=2*n*n+1;\n\tfor(ll i=1;i<=m;++i)\n\t\tvis[read()][read()]=1;\n\tfor(ll i=1;i<=n;++i)\n\t\tfor(ll j=1;j<=n;++j){\n\t\t\tadd(idL(i,j),idR(i,j),1);\n\t\t\tfor(ll k=0;k<4;++k){\n\t\t\t\tll nx=i+dx[k],ny=j+dy[k];\n\t\t\t\tif(nx>=1&&nx<=n&&ny>=1&&ny<=n&&(!(vis[i][j]&vis[nx][ny])))\n\t\t\t\t\tadd(idR(i,j),idL(nx,ny),1);\n\t\t\t}\n\t\t\tif(i==1||j==1||i==n||j==n) add(idR(i,j),T,1);\n\t\t\tif(vis[i][j]) add(S,idL(i,j),1);\n\t\t}\n\tif(dinic()==m) cout<<\"YES\";\n\telse cout<<\"NO\";\n\treturn 0;\n}\n```\n",
        "postTime": 1654920358,
        "uid": 482730,
        "name": "aSunnyDay",
        "ccfLevel": 6,
        "title": "Solution-P2691"
    },
    {
        "content": "\u6700\u5927\u6d41\u3002\n\n\u9898\u76ee\u4e2d\u7684\u8d77\u59cb\u70b9\u80af\u5b9a\u662f\u8981\u88ab\u8d85\u7ea7\u6e90\u8fde\u4e0a\u7684\u3002\u8003\u8651\u5230\u8981\u6c42\u8fd9 $m$ \u4e2a\u70b9\u80fd\u901a\u8fc7 $m$ \u6761\u4e0d\u5728\u683c\u70b9\u76f8\u4ea4\u7684\u8def\u5f84\u8fde\u5230\u8fb9\u754c\u4e0a\uff0c\u6d41\u7684\u65b9\u6cd5\u5927\u81f4\u5c31\u662f\u6cbf\u7740\u7f51\u683c\u7ebf\uff0c\u7136\u540e\u8fb9\u754c\u70b9\u8fde\u8d85\u7ea7\u6c47\uff0c\u6743\u503c\u90fd\u662f $1$\u3002\u53e6\u5916\uff0c\u6bcf\u4e2a\u70b9\u53ea\u80fd\u5728\u4e0d\u8d85\u8fc7\u4e00\u6761\u8def\u5f84\u4e0a\uff0c\u53ea\u662f\u8fd9\u6837\u4f1a\u88ab\u91cd\u590d\u6d41\u8fc7\uff0c\u9700\u8981\u641e\u4e00\u904d\u62c6\u70b9\u7684\u5957\u8def\u3002\n\n\u8fd9\u9898\u7684\u7f51\u7edc\u6d41\u5efa\u6a21\u633a\u7ecf\u5178\u7684\u3002\n\n```cpp\n//By: Luogu@rui_er(122461)\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(int x=y;x<=z;x++)\n#define per(x,y,z) for(int x=y;x>=z;x--)\n#define debug printf(\"Running %s on line %d...\\n\",__FUNCTION__,__LINE__)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e4+5, M = 5e5+5, inf = 0x3f3f3f3f; \n\nint n_, m_, n, m, s, t, dis[N], now[N];\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\nstruct Edge {\n\tint v, w, nxt;\n\tEdge(int a=0, int b=0, int c=0) : v(a), w(b), nxt(c) {}\n\t~Edge() {} \n}e[M];\nint h[N], ne = 1;\nvoid add(int u, int v, int w) {\n\te[++ne] = Edge(v, w, h[u]); h[u] = ne;\n\te[++ne] = Edge(u, 0, h[v]); h[v] = ne;\n}\nqueue<int> q;\nint dfs(int u, int lim) {\n\tif(u == t || !lim) return lim;\n\tint res = 0;\n\tfor(int i=now[u];i;now[u]=i=e[i].nxt) {\n\t\tint v = e[i].v, w = e[i].w;\n\t\tif(dis[v] == dis[u] + 1) {\n\t\t\tint qwq = dfs(v, min(w, lim));\n\t\t\tif(!qwq) continue;\n\t\t\te[i].w -= qwq; e[i^1].w += qwq;\n\t\t\tlim -= qwq; res += qwq;\n\t\t\tif(!lim) break;\n\t\t}\n\t}\n\treturn res;\n}\nbool bfs() {\n\trep(i, 1, n) {\n\t\tdis[i] = inf;\n\t\tnow[i] = h[i];\n\t}\n\tdis[s] = 0;\n\tq.push(s);\n\twhile(!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor(int i=h[u];i;i=e[i].nxt) {\n\t\t\tint v = e[i].v, w = e[i].w;\n\t\t\tif(!w || dis[v] < inf) continue;\n\t\t\tdis[v] = dis[u] + 1;\n\t\t\tq.push(v);\n\t\t}\n\t}\n\treturn dis[t] < inf;\n}\nint dinic() {\n\tint flow = 0;\n\twhile(bfs()) flow += dfs(s, inf);\n\treturn flow;\n}\nint getId(int x, int y) {\n\treturn (x - 1) * n_ + y;\n}\n\nint main() {\n\tscanf(\"%d%d\", &n_, &m_);\n\ts = 2 * n_ * n_ + 1;\n\tn = t = s + 1;\n\trep(i, 1, m_) {\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tadd(s, getId(x, y), 1);\n\t}\n\trep(i, 1, n_) {\n\t\trep(j, 1, n_) {\n\t\t\tadd(getId(i, j), n_*n_+getId(i, j), 1);\n\t\t\tif(i > 1) add(n_*n_+getId(i, j), getId(i-1, j), 1);\n\t\t\tif(j > 1) add(n_*n_+getId(i, j), getId(i, j-1), 1);\n\t\t\tif(i < n_) add(n_*n_+getId(i, j), getId(i+1, j), 1);\n\t\t\tif(j < n_) add(n_*n_+getId(i, j), getId(i, j+1), 1);\n\t\t\tif(i == 1 || j == 1 || i == n_ || j == n_) add(n_*n_+getId(i, j), t, 1);\n\t\t}\n\t}\n\tputs(dinic()==m_?\"YES\":\"NO\");\n    return 0;\n}\n```",
        "postTime": 1647954437,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2691\u3010\u9003\u79bb\u3011"
    }
]