[
    {
        "content": "\u8fd9\u79cd\u9898\u76ee\u5957\u8def\u6027\u8fd8\u662f\u86ee\u5f3a\u7684\u2026\u2026\n\n\u5982\u679c\u719f\u7ec3\u4e86\u4e4b\u540e\u8fd8\u662f\u53ef\u4ee5\u5f88\u5feb\u5e72\u6389\u5b83\u7684\n\n\u5728\u505a\u8fd9\u9053\u9898\u4e4b\u524d\u53ef\u4ee5\u5148\u53bb\u505a\u4e00\u53d1BZOJ1009(\u662f\u8fd9\u9053\u9898\u7684\u5f31\u5316\u7248)\n\n~~(\u7136\u800c\u6211\u8fdeAC\u81ea\u52a8\u673a\u90fd\u6572\u6302\u4e86\u2026\u2026\u6211\u600e\u4e48\u8fd9\u4e48\u4e0d\u719f\u7ec3\u554a)~~\n\n## \u8ba1\u6570dp\n\n\u55ef\u5982\u679c\u662f\u8ba1\u6570\u95ee\u9898\u8fd8\u662f\u5b57\u7b26\u4e32\u7684\u8bdd\uff0c\u5982\u679c\u4f60\u8db3\u591f\u719f\u7ec3\u4f1a\u60f3\u5230\u662f\u5728\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\u4e0a\u8dd1dp\uff0c\u7136\u540e\u5b8c\u6210\u6211\u4eec\u7684\u8ba1\u6570\u5de5\u4f5c\uff0c\u56e0\u4e3adp\u662f\u4e00\u4e2a\u8db3\u591f\u7075\u6d3b\u7684\u8ba1\u6570\u624b\u6bb5(\u4f46\u662f\u6bd4\u8d77\u6570\u5b66\u65b9\u6cd5\u6765\u8bb2\u80af\u5b9a\u5c31\u6162\u4e86\u4e0d\u5c11)\uff0c\u53ef\u4ee5\u89e3\u51b3\u8bb8\u591a\u6709\u590d\u6742\u9650\u5236\u7684\u8ba1\u6570\u95ee\u9898\uff0c\u6bd4\u5982\u8fd9\u9053\u9898\n\n~~(\u4ec0\u4e48\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\uff1f\u79d1\u666e\u4e00\u4e0b\u597d\u4e86)~~\n\n### \u786e\u5b9a\u6027\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a (DFA)\n\n\u8fd9\u91cc\u4e0d\u60f3\u4ecb\u7ecd\u6807\u51c6\u5b9a\u4e49\u4e86\uff0c\u5b9e\u7528\u4e00\u70b9\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2aDFA\u662f\u8fd9\u4e2a\u4e1c\u897f\uff1a\n\n1.\u67091\u4e2a\u5f00\u59cb\u8282\u70b9\n\n2.\u6709\u82e5\u5e72\u4e2a\u7ec8\u6b62\u8282\u70b9\n\n3.\u6709\u4e00\u4e2a\u8f6c\u79fb\u51fd\u6570\uff0cf(p,c)\u8868\u793a\u5982\u679c\u5728p\u72b6\u6001\u8bfb\u5165\u4e00\u4e2ac\u5b57\u7b26\u4f1a\u8f6c\u79fb\u5230\u54ea\u4e2a\u72b6\u6001\n\n\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u66f4\u52a0\u7c97\u66b4\u7684\u5b9a\u4e49\uff0c\u4e00\u4e2aDFA\u662f\u4e00\u5f20\u56fe\uff0c\u6709\u4e00\u4e2a\u5f00\u59cb\u8282\u70b9\u548c\u82e5\u5e72\u4e2a\u7ec8\u6b62\u8282\u70b9\uff0c\u70b9\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u4e00\u4e2a\u8fb9\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u4e14\u6240\u6709\u70b9\u7684\u51fa\u8fb9\u6570\u76ee\u90fd\u7b49\u4e8e\u5b57\u7b26\u96c6\u5927\u5c0f(\u6bd4\u5982\u4e00\u822c\u6765\u8bb2\u6bcf\u4e2a\u70b9\u670926\u4e2a\u51fa\u8fb9)\uff0c\u6211\u4eec\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u5728\u56fe\u4e0a\u4ee5\u5f00\u59cb\u8282\u70b9\u4e3a\u8d77\u70b9\u8d70\u51fa\u4e00\u6761\u8def\u5f84\n\n\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u88abDFA\u8bc6\u522b\uff0c\u5f53\u4e14\u4ec5\u5f53\u6211\u4eec\u4ece\u5f00\u59cb\u8282\u70b9\u51fa\u53d1\uff0c\u8d70\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u505c\u5728\u4e86\u7ec8\u6b62\u8282\u70b9\u4e0a\n\n### AC\u81ea\u52a8\u673a\u62d3\u5c55\n\n\u4e25\u683c\u6765\u8bb2\u6211\u4eec\u5e73\u65f6\u6240\u4f7f\u7528\u7684AC\u81ea\u52a8\u673a\u90fd\u662fAC\u81ea\u52a8\u673a\u7684\u5f31\u5316\u7248(\u56e0\u4e3a\u53ea\u914d\u5907\u4e86fail\u6307\u9488)\uff0c\u5982\u679c\u6211\u4eec\u8981\u8ba9AC\u81ea\u52a8\u673a\u771f\u6b63\u6210\u4e3a\u4e00\u4e2a\u81ea\u52a8\u673a\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5f3a\u5316\u8fd9\u4e2a\u81ea\u52a8\u673a\u7684\u529f\u80fd\uff0c\u4e00\u822c\u6765\u8bb2\u6211\u4eec\u79f0\u8fd9\u4e2a\u4e1c\u897f\u53eb**trie\u56fe**(\u4f46\u662f\u5176\u5b9etrie\u56fe\u5c31\u662f\u4e00\u4e2aDFA)\n\n\u5982\u4f55\u6784\u5efatrie\u56fe\u6211\u8fd9\u91cc\u9ed8\u8ba4\u5927\u5bb6\u90fd\u4f1a\u4e86\u2026\u2026~~(\u4e0d\u4f1a\u51fa\u95e8\u5de6\u8f6c\u4f60\u7ad9\u819c\u677f\u533a\uff0c\u5305\u6559\u5305\u4f1a)~~\n\ntrie\u56fe\u7684\u529f\u80fd\u662f\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u88ab\u8bc6\u522b\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u4e00\u5806\u6a21\u5f0f\u4e32\u4e2d\u7684\u4e00\u4e2a\uff0c\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u88ab\u8f93\u5165\u4e4b\u540e\u72b6\u6001\u4e0d\u662f\u5f00\u59cb\u72b6\u6001\u4e5f\u4e0d\u662f\u7ed3\u675f\u72b6\u6001\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e32\u7684\u4e00\u4e2a\u540e\u7f00\u662f\u67d0\u4e2a\u6a21\u5f0f\u4e32\u7684\u524d\u7f00\n\n\u505a\u8fd9\u9053\u9898\u7684\u8bdd\u6027\u8d281\u5c31\u591f\u4f7f\u4e86\n\n\u6211\u4eec\u5f00\u59cb\u8003\u8651dp\uff0c\u5f53\u7136\u9996\u5148\u6211\u4eec\u5148\u5bf9\u6240\u6709\u7684\u7981\u5fcc\u8bcd\u6c47\u5efa\u4e00\u4e2atrie\u56fe\uff0c\u73b0\u5728\u6211\u4eec\u8981\u6784\u9020\u4e00\u4e2a\u957f\u5ea6\u4e3al\u7684\u4e32\u4f7f\u5f97\u8fd9\u4e2a\u4e32\u7684\u4efb\u610f\u4e00\u4e2a\u524d\u7f00\u90fd\u4e0d\u53ef\u4ee5\u88abtrie\u56fe\u8bc6\u522b\uff0c\u7136\u540e\u5bf9\u8fd9\u4e2a\u4e32\u8ba1\u6570\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5dp\u554a\uff0c\u8bbe$dp_{i,j}$\u8868\u793a\u51b3\u7b56\u5230\u4e86\u7b2ci\u4e2a\u5b57\u7b26\uff0c\u5230\u8fbetrie\u56fe\u4e0a\u7f16\u53f7\u4e3aj\u7684\u8282\u70b9\u7684\u65b9\u6848\u6570\n\n\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u5fc5\u987b\u9009\u62e9\u4e00\u4e2a\u6574\u5355\u8bcd\uff0c\u6240\u4ee5\u6211\u4eec\u5237\u8868\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53ef\u884c\u7684dp\u72b6\u6001\u8fdb\u884c\u62d3\u5c55\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e\u9009\u54ea\u4e00\u4e2a\u5355\u8bcd\uff0c\u7136\u540e\u5982\u679c\u8fd9\u4e2a\u5355\u8bcd\u5728\u8dd1\u7684\u8fc7\u7a0b\u4e2d\u90fd\u6ca1\u6709\u7ecf\u8fc7\u4e00\u4e2a\u7ed3\u675f\u8282\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8f6c\u79fb\uff0c\u5426\u5219\u4e0d\u884c\uff0c\u5047\u8bbe\u6211\u4eec\u5230\u8fbe\u4e86p\u8282\u70b9\uff0c\u90a3\u4e48\n$dp_{i+len,p}+=dp_{i,j}$\u5c31\u53ef\u4ee5\u4e86\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a$O(n^{3})$\u7684\u4f18\u7f8e\u7b97\u6cd5\uff0c\u663e\u7136\u901a\u8fc7\u4e0d\u4e86$l=10^{8}$\u7684\u9b3c\u755c\u6570\u636e\uff0c\u4f46\u662f\u4f3c\u4e4e\u6709\u7279\u6b8a\u6027\u8d28\uff0c\u6240\u6709\u5355\u8bcd\u7684\u957f\u5ea6\u5c0f\u4e8e2\u2026\u2026\n\n\u7531\u4e8e\u9664\u4e86\u77e9\u9635\u5feb\u901f\u5e42\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u53ef\u4ee5\u901a\u8fc7$10^{8}$\u7684\u7b97\u6cd5(\u6839\u53f7\u7b97\u6cd5\u548c\u4ec0\u4e48$O(n^{\\frac{2}{3}})$\u4f30\u8ba1\u548c\u8ba1\u6570\u4e5f\u6ca1\u591a\u5927\u5173\u7cfb)\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u6784\u9020\u77e9\u9635\u52a0\u901fdp\n\n## \u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316dp\n\n _\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u6bd4\u8f83\u4f20\u7edf\u7684\u6280\u5de7\u4e86\uff0c\u719f\u7ec3\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u770b\u4e0b\u9762\u7684\u6784\u9020\u77e9\u9635\u90e8\u5206_ \n \n \n~~\u55ef\u8fd9\u91cc\u9ed8\u8ba4\u4f60\u4f1a\u77e9\u9635\u4e58\u6cd5\uff0c\u4e0d\u4f1a\u7684\u8bdd\u53bb\u95ee\u5ea6\u5a18\u597d\u4e86~~\n \n\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u77e9\u9635\u4e58\u6cd5\u7684\u5f0f\u5b50(\u5982\u679c\u77e9\u9635A\u4e58\u77e9\u9635B\u7b49\u4e8e\u77e9\u9635C,\u800c\u4e14\u662f\u4e24\u4e2a\u65b9\u9635\u76f8\u4e58)\n\n## $C_{i,j}=\\sum_{k=1}^{n}A_{i,k}B_{k,j}$\n\n\u6211\u4eec\u53ef\u4ee5\u6539\u5199\u6210\u8fd9\u6837\u7684\u6837\u5f0f\n\n```C\n\nif(a[i][j]!=0)\n{\n\tfor(int k=1;k<=n;k++){c[i][k]+=a[i][j]*b[j][k]}\n}\n\n```\n\n\u662f\u4e0d\u662f\u975e\u5e38\u50cfdp\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b?\n\n\u5982\u679c\u6211\u4ec5\u4ee4\u77e9\u9635\u7684\u7b2c1\u884c\u6709\u503c\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\n\n```C\nif(a[1][j]!=0)\n{\n\tfor(int k=1;k<=n;k++){c[1][k]+=a[1][j]*b[j][k]}\n}\n\n```\n\n\u6b64\u65f6a,c\u5747\u53ef\u4ee5\u8ba4\u4e3a\u662f1\u7ef4\u6570\u7ec4\uff0c\u4e5f\u5c31\u548c\u5e73\u5e38\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u4e4b\u540e\u7684dp\u6570\u7ec4\u65e0\u5f02\n\n\u6211\u4eec\u53d1\u73b0b\u77e9\u9635\u5176\u5b9e\u662f\u4e00\u4e2a\u8f6c\u79fb\u8868\u683c\uff0c$b_{i,j}$**\u662f\u5426\u4e3a0\u4ee3\u8868\u7740i\u72b6\u6001\u662f\u5426\u4e0d\u53ef\u4ee5\u8f6c\u79fb\u5230j\u72b6\u6001**\uff0c\n\n\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u5982\u679c\u5904\u7406\u51fa\u5404\u4e2a\u72b6\u6001\u7684\u8f6c\u79fb\u5173\u7cfb\u5e76\u7528\u77e9\u9635\u5b58\u50a8\uff0c\u6bcf\u4e58\u4e00\u6b21\u76f8\u5f53\u4e8e\u505a\u4e86\u4e00\u6b21\u8f6c\u79fb(\u4e5f\u5c31\u662f\u6eda\u52a8\u6570\u7ec4\u4e2d\u7684i++)\u5982\u679c\u8981\u8f6c\u79fbn\u6b21\u5c31\u76f8\u5f53\u4e8e\u8ba1\u7b97b\u77e9\u9635\u7684n\u6b21\u5e42\u518d\u548c\u521d\u59cb\u6761\u4ef6\u76f8\u4e58\uff0c\u4f46\u662fi\u6b21\u5e42\u662f\u53ef\u4ee5\u5feb\u901f\u5e42\u8ba1\u7b97\u7684\u56e0\u6b64\u590d\u6742\u5ea6\u88ab\u4f18\u5316\u5230\u4e86$O(k^{3}logn)$\n\n\u4e0a\u9762\u8bf4\u4e86\u8fd9\u4e48\u591a\u53ea\u662f\u60f3\u8bf4\u4e00\u53e5\u8bdd\uff0c\u77e9\u9635\u5feb\u901f\u5e42\u5f53\u4e2d\uff0c\u8f6c\u79fb\u77e9\u9635\u7684\u6784\u9020\u539f\u5219\u662f\uff1a\n\n**\u5982\u679ci\u53ef\u4ee5\u8f6c\u79fb\u5230j\u90a3\u4e48**$b_{i,j}++$\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u76ee\u5341\u5206\u7684\u8fa3\u624b\uff0c\u5355\u8bcd\u957f\u5ea6\u662f2\u800c\u4e0d\u662f1\n\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6ca1\u529e\u6cd5\u7b80\u5355\u7684\u628adp\u5f0f\u5b50\u62ff\u8fc7\u6765\u6784\u9020\u8f6c\u79fb\u77e9\u9635\uff08\u5982\u679c\u662f\u4e00\u4e2a\u7684\u8bdd\u6bcf\u6b21\u5b57\u7b26\u4e32\u957f\u5ea6+1\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e2a\u72b6\u6001\u4f7f\u7528\u4ec0\u4e48\u5b57\u6bcd\u8f6c\u79fb\u6765\u8fde\u8fb9\uff0c\u4f46\u662f\u4e24\u4e2a\u7684\u8bdd\u6bcf\u6b21\u5b57\u7b26\u4e32\u957f\u5ea6+1\u548c+2\u6ca1\u6cd5\u4e00\u8d77\u8f6c\u79fb\uff09\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5728\u77e9\u9635\u5feb\u901f\u5e42\u7684\u7ecf\u5178\u5e94\u7528\u2014\u2014\u6c42Fibonacci\u6570\u5217\u7b2cn\u9879\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u4e00\u4e2a\u77e9\u9635\u91cc\u5b58\u4e86\u4e24\u4e2a\u6570\uff0c$f_{n}$\u548c$f_{n+1}$\u4e3a\u7684\u5c31\u662f\u6bcf\u6b21\u53ef\u4ee5\u6109\u5feb\u7684\u9012\u63a8\n\n\u6240\u4ee5\u6211\u4eec\u7684\u77e9\u9635\u91cc\u4e5f\u53ef\u4ee5\u4e0d\u53ea\u653e\u4e00\u4e2ai\u554a\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u4e24\u4e2ai\u554a\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u662f\u7528\u8f6c\u79fb\u77e9\u9635\u505a\u66b4\u529b\u4e58\u6cd5\u8f6c\u79fb\uff0c\u90a3\u4e48\u6211\u4eec\u88ab\u4e58\u7684\u90a3\u4e2a1\\*n\u7684\u77e9\u9635\u4e0d\u518d\u662f1\\*n\u4e86\uff0c\u800c\u662f1\\*2n\u5047\u8bbe\u5df2\u7ecf\u4e58\u4e86p\u6b21\uff0c\u90a3\u4e48\u524d\u534a\u6bb5\u8868\u793a$dp_{p-1}$\u90a3\u4e00\u884c\u7684\u503c\uff0c\u540e\u534a\u6bb5\u8868\u793a$dp_{p}$\u90a3\u4e00\u884c\u7684\u503c\uff0c\u4e58\u5b8c\u4e4b\u540e\u6211\u4eec\u5e0c\u671b\u524d\u534a\u6bb5\u53d8\u6210$dp_{p}$\uff0c\u540e\u534a\u6bb5\u53d8\u6210$dp_{p+1}$\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u50cf\u8fd9\u6837\u6784\u9020\u77e9\u9635\n\ntips\uff1a\u6211\u4eec\u5728\u5904\u7406\u8f6c\u79fb\u5173\u7cfb\u7684\u65f6\u5019\u628a\u5217\u770b\u6210\u8f6c\u79fb\u524d\uff0c\u884c\u770b\u6210\u8f6c\u79fb\u540e\u6765\u8fde\u8fb9\uff0c\u4e58\u6cd5\u64cd\u4f5c\u76f8\u5f53\u4e8e\u628a\u8fd9\u4e2adp\u6570\u7ec4\u8f6c\u4e8690\u5ea6\uff0c\u6240\u4ee5\u5927\u6982\u662f\u8fd9\u6837~\n\n![](https://cdn.luogu.com.cn/upload/pic/15924.png)\n\n\n\u7136\u540e\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u8f6c\u79fb\u5173\u7cfb\u5c31\u53ef\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u6c42\u51fa\u7b54\u6848\u5566~\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5751\uff0c\u7ed3\u675f\u8282\u70b9\u7684\u5224\u5b9a\u9700\u8981\u5728trie\u56fe\u7684\u6784\u5efa\u4e2d\u9012\u63a8\u7684\u8ba1\u7b97\uff0c\n\n$end_{p}=end_{p}||end_{failp}$\uff0c\u5982\u679c\u4f60\u4e0d\u660e\u4e0d\u767d\u7684WA\u4e86\u591a\u534a\u662f\u56e0\u4e3a\u8fd9\u4e2a\n\n~~(\u6700\u540e\u7531\u4e8e\u5e38\u6570\u8fc7\u5927\u5c34\u5c2c\u7684T\u98de\u4e86~\uff0c\u5f00\u4e86unsigned long long \u624d\u8fc7)~~\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int N=110;typedef unsigned long long ll;\nint n;int m;int l;int siz;ll mod=1e9+7;ll tp[2*N][2*N];\nstruct mar//\u77e9\u9635\u7c7b \n{\n    ll m[2*N][2*N];\n    void operator *=(const mar& a)\n    {\n    \tfor(int i=1;i<=2*siz;i++){for(int j=1;j<=2*siz;j++){tp[i][j]=0;}}\n        for(int i=1;i<=2*siz;i++)\n        {\n            for(int j=1;j<=2*siz;j++)\n            {for(int k=1;k<=2*siz;k++){tp[i][j]=(tp[i][j]+m[i][k]*a.m[k][j])%mod;}}\n        }\n        for(int i=1;i<=2*siz;i++){for(int j=1;j<=2*siz;j++){m[i][j]=tp[i][j];}}\n    }\n}st,r,tr;\nstruct trie//trie\u56fe \n{\n    int mp[N][30];int fil[N];bool ed[N];int cnt;queue <int> q;trie(){cnt=1;}\n    inline int add(int p,int c){return mp[p][c]=(mp[p][c])?mp[p][c]:++cnt;}\n    inline void end(int p){ed[p]=true;}\n    inline void build()//\u5efa\u56fe\u51fd\u6570 \n    {\n        for(int i=1;i<=26;i++)\n        {if(mp[1][i]){q.push(mp[1][i]);fil[mp[1][i]]=1;}else {mp[1][i]=1;}}\n        for(;!q.empty();q.pop())//bfs \n        {\n            for(int p=q.front(),i=1;i<=26;i++)\n            {\n                if(mp[p][i])\n\t\t\t\t{\n\t\t\t\t\tq.push(mp[p][i]);fil[mp[p][i]]=mp[fil[p]][i];//\u8fde\u8fb9 \n\t\t\t\t\ted[mp[p][i]]=ed[mp[p][i]]||ed[fil[mp[p][i]]];//\u8bb0\u5f97\u9012\u63a8\u7ed3\u675f\u6807\u8bb0 \n\t\t\t\t}\n                else {mp[p][i]=mp[fil[p]][i];}\n            }\n        }\n    }\n    inline void trv(int& p,int c){p=(ed[mp[p][c]])?-1:mp[p][c];}//\u8f6c\u79fb\u51fd\u6570 \n}t;\nchar mde[N][N];int len[N];int dp[N][N];char rd[N];ll res;\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&l);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",mde[i]+1);//\u66b4\u529b\u8ba1\u7b97len \n        for(len[i]=1;mde[i][len[i]+1]!='\\0';len[i]++);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%s\",rd+1);int p=1;\n        for(int i=1;rd[i]!='\\0';i++){p=t.add(p,rd[i]-'a'+1);}t.end(p);\n    }t.build();siz=t.cnt;\n    if(l<=100)//\u5224\u4e0bl \n    {\n        dp[0][1]=1;\n        for(int i=0;i<=l;i++)\n        {\n            for(int j=1;j<=siz;j++)\n            {\n                if(dp[i][j]==0){continue;}\n                for(int k=1;k<=n;k++)\n                {\n                    if(i+len[k]>l){continue;}int p=j;//\u5224\u4e00\u4e0b\u8f6c\u79fb\u662f\u5426\u5408\u6cd5 \n                    for(int q=1;q<=len[k]&&p!=-1;q++){t.trv(p,mde[k][q]-'a'+1);}\n                    if(p!=-1){dp[i+len[k]][p]=(dp[i+len[k]][p]+dp[i][j])%mod;}\n                }\n            }\n        }\n        for(int i=1;i<=siz;i++){res=(res+dp[l][i])%mod;}printf(\"%lld\",res);\n    }\n    else \n    {\n        st.m[1][siz+1]=1;//\u6211\u4eec\u4ece\u7b2c-1\u9879\u548c\u7b2c0\u9879\u5f00\u59cbdp \n        for(int i=1;i<=siz;i++){tr.m[siz+i][i]=1;}//\u5de6\u4e0b\u65b9\u7684\u5355\u4f4d\u77e9\u9635 \n        for(int i=1;i<=siz;i++)\n        {\n            for(int q=1;q<=n;q++)\n            {\n                if(len[q]!=1)continue;int p=i;if(t.ed[p])continue;//\u4e00\u6b65\u7684\u77e9\u9635 \n                t.trv(p,mde[q][1]-'a'+1);if(p!=-1){tr.m[siz+i][siz+p]++;}\n            }\n        }\n        for(int i=1;i<=siz;i++)\n        {\n            for(int q=1;q<=n;q++)\n            {\n                if(len[q]!=2)continue;int p=i;if(t.ed[p])continue;\n                t.trv(p,mde[q][1]-'a'+1);if(p==-1)continue;//\u4e24\u6b65\u7684\u77e9\u9635 \n                t.trv(p,mde[q][2]-'a'+1);if(p!=-1){tr.m[i][siz+p]++;}\n            }\n        }\n        for(int i=1;i<=2*siz;i++){r.m[i][i]=1;}//\u5355\u4f4d\u5143 \n        for(int p=l;p;p>>=1,tr*=tr){if(p&1){r*=tr;}}st*=r;//\u77e9\u9635\u5feb\u901f\u5e42 \n\t\tfor(int i=1;i<=siz;i++){res=(res+st.m[1][siz+i])%mod;}//\u6700\u540e\u7b54\u6848\u662f\u5728\u540e\u8fb9 \n        printf(\"%lld\",res); \n    }return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1521615485,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3715 \u3010[BJOI2017]\u9b54\u6cd5\u5492\u8bed\u3011"
    },
    {
        "content": "\u5317\u4eac\u7701\u9009\u9898\u7684\u65e5\u5e38\u5c31\u662f\u5bf9\u6570\u636e\u5206\u7c7b\u8ba8\u8bba\u3002\u3002\u3002\n\n\u9898\u76ee\u77aa\u4e00\u4e24\u773c\u5c31\u80fd\u770b\u51fa\u662f\u9053\u8003AC\u81ea\u52a8\u673a\u7684\u9898\n\n\u5148\u770b\u524d60%\u6570\u636e\uff0c\u53d1\u73b0\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u8981\u6c42\uff0c\u4e14L\u6bd4\u8f83\u5c0f\n\n\u76f4\u63a5\u8003\u8651dp\uff0c\u5bf9\u201c\u5fcc\u8bb3\u8bcd\u8bed\u201d\u5efa\u4e00\u4e2aAC\u81ea\u52a8\u673a\uff0c\u7136\u540e\u641e\u51fadp\u65b9\u7a0b\uff1a\n\n```cpp\nif(tmp) dp[i+len[j]][tmp]=(dp[i][id]+dp[i+len[j]][tmp])%(1e9+7);\n```\n\u5176\u4e2di\u4e3adp\u5230\u7b2c\u51e0\u4e2a\u5b57\u7b26\uff0c\n\ntmp\u4e3a\u5728AC\u81ea\u52a8\u673a\u4e0a\u7684\u7b2cid\u4e2a\u70b9\u5f00\u59cb\uff0c\u5339\u914d\u7b2cj\u4e2a\u57fa\u672c\u8bcd\u6c47\u540e\u5230\u8fbe\u7684\u72b6\u6001\uff0c\u82e5\u5728\u5339\u914d\u8fc7\u7a0b\u4e2d\u9047\u5230\u201c\u5fcc\u8bb3\u8bcd\u8bed\u201d\u5219\u4e0d\u8fdb\u884c\u8f6c\u79fb\uff0c\n\nlen[j]\u4e3a\u7b2cj\u4e2a\u57fa\u672c\u8bcd\u6c47\u7684\u957f\u5ea6\n\n\n\u6700\u7ec8\u7b54\u6848\u4e3a $ \\sum_{id}{dp[L][id]} mod 10^9+7 $\n\n\n\u518d\u8003\u8651\u7b2c7~8\u4e2a\u70b9\uff0c\u57fa\u672c\u8bcd\u6c47\u957f\u5ea6\u4e3a1\n\n\u53d1\u73b0L\u6bd4\u8f83\u5927\uff0c\u53ef\u4ee5\u8003\u8651\u77e9\u9635\u5feb\u901f\u5e42\n\n\u8003\u8651\u81ea\u52a8\u673a\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9x\uff0c\u4ee5\u53ca\u4ece\u8fd9\u4e2a\u8282\u70b9\u5f00\u59cb\u5339\u914d\u7b2ci\u4e2a\u57fa\u672c\u8bcd\u6c47\u8fbe\u5230\u72b6\u6001y\n\n\u8fd9\u8bf4\u660e\u4ece\u7b2cx\u4e2a\u72b6\u6001\u957f\u5ea6\u589e\u52a01\u65f6\u53ef\u4ee5\u8f6c\u79fb\u5230\u7b2cy\u4e2a\u72b6\u6001\uff0c\u6240\u4ee5\u5c06\u8f6c\u79fb\u77e9\u9635\u7684\u7b2cx\u884c\u7b2cy\u5217+1\n\n\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\n\n\n\u6700\u540e\u4e24\u4e2a\u70b9\u57fa\u672c\u8bcd\u6c47\u957f\u5ea6\u4e3a2\n\n\u6211\u4eec\u53ea\u9700\u8981\u628a\u77e9\u9635\u6269\u5927\u5230\u539f\u6765\u7684\u4e24\u500d\uff0c\u5e76\u4e14\u6309\u4e4b\u524d\u7684\u65b9\u6cd5\u5728\u4e0a\u9762\u6807\u8bb0\u4e00\u4e0b\u957f\u5ea6\u4e3a2\u7684\u57fa\u672c\u8bcd\u6c47\u53ef\u4ee5\u8f6c\u79fb\u5230\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u7136\u540e\u5c06\u77e9\u9635\u7684\u5de6\u4e0b\u90e8\u5206\u8bbe\u4e3a\u5355\u4f4d\u77e9\u9635\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u5269\u4e0b\u7684\u6570\u636e\u4e86\n\n\n\u8fd8\u6709\u4e00\u70b9\u5c0f\u7ec6\u8282\uff0c\u77e9\u9635\u5feb\u901f\u5e42\u5199\u5f97\u4e0d\u597d\u53ef\u80fd\u4f1a\u5bfc\u81f4RE\uff0c\u539f\u56e0\u7384\u5b66\u3002\u3002\n\n\n~~\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u8003\u573a\u4ee3\u7801\uff0c\u53ef\u80fd\u5199\u5f97\u6709\u70b9\u4e0d\u4f18\u7f8e\uff0c\u5927\u5bb6\u51d1\u6d3b\u7740\u770b\u5427\u3002\u3002~~\n\n\u8d34\u4ee3\u7801~~\u8d70\u4eba~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nstruct node\n{\n    int id,end;\n    node *next[26],*fail;\n}*root,pool[30001];\nint top;\nstring bas[55],ban[55];\nint n,m,l,len[111],N;long long ans;\nint dp[111][111];//[len][id]\nconst long long mod=1000000007ll;\nstruct matrix\n{\n    int siz;\n    int mat[233][233];\n#define int long long\n    matrix(int x=0)\n    {\n        siz=N;\n        for(int i=1;i<=siz;i++)\n            for(int j=1;j<=siz;j++)\n            {\n                mat[i][j]=x*(int)(i==j);\n            }\n    }\n    matrix operator=(const matrix& m)\n    {\n        siz=N;\n        for(int i=1;i<=siz;i++)\n        {\n            for(int j=1;j<=siz;j++)\n            {\n                mat[i][j]=m.mat[i][j];\n            }\n        }\n        return *this;\n    }\n    matrix operator=(const int x)\n    {\n        siz=N;\n        for(int i=1;i<=siz;i++)\n            for(int j=1;j<=siz;j++)\n            {\n                mat[i][j]=x*(int)(i==j);\n            }\n        return *this;\n    }\n    matrix operator*=(const matrix &m)\n    {\n        matrix tmp;\n        for(int i=1;i<=siz;i++)\n        {\n            for(int j=1;j<=siz;j++)\n            {\n                long long o=0;\n                for(int k=1;k<=siz;k++)\n                {\n                    o+=((long long)mat[i][k]*m.mat[k][j])%mod;\n                }\n                o%=mod;\n                tmp.mat[i][j]=o;\n            }\n        }\n        return *this=tmp;\n    }\n};\ninline matrix fexp(matrix &x,int y)\n{\n    int bit=1<<30;\n    matrix cur=1;\n    while(bit)\n    {\n        cur*=cur;\n        if(y&bit)cur*=x;\n        bit>>=1;\n    }\n    return cur;\n}\n#undef int\nvoid addword(string str)\n{\n    int len=str.length();\n    node *tmp=root;\n    for(int i=0;i<len;i++)\n    {\n        int cur=str[i]-'a';\n        if(!tmp->next[cur])\n        {\n            tmp->next[cur]=&pool[++top];\n            tmp->next[cur]->id=top;\n        }\n        tmp=tmp->next[cur];\n    }\n    tmp->end=1;\n}\nqueue<node*> q;\nvoid build()\n{\n    while(!q.empty())q.pop();\n    q.push(root);\n    while(!q.empty())\n    {\n        node *cur=q.front();q.pop();\n        for(int i=0;i<26;i++)\n        {\n            node *nex=cur->next[i],*tmp=cur->fail;\n            if(!nex)continue;\n            while(tmp!=root&&!(tmp->next[i]))tmp=tmp->fail;\n            if(cur==root||!(tmp->next[i]))\n                nex->fail=tmp;\n            else\n                nex->fail=tmp->next[i];\n            q.push(nex);\n        }\n    }\n}\nint match(string str,int len,int start)\n{\n    node *cur=&pool[start],*tmp;\n    for(int i=0;i<len;i++)\n    {\n        int e=str[i]-'a';\n        while(cur!=root&&!(cur->next[e]))cur=cur->fail;\n        if(cur->next[e])\n            cur=cur->next[e];\n        tmp=cur;\n        while(tmp!=root)\n        {\n            if(tmp->end)return 0;\n            tmp=tmp->fail;\n        }\n    }\n    return cur->id;\n}\nint main()\n{\n    char buf[110];\n    root=&pool[++top];root->id=1;root->fail=root;\n//#ifndef DDDDBUG\n//    freopen(\"sorcery.in\",\"r\",stdin);\n//    freopen(\"sorcery.out\",\"w\",stdout);\n//#endif  //DDDDBUG\n    scanf(\"%d%d%d\",&n,&m,&l);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",buf);\n        bas[i]=buf;\n        len[i]=bas[i].length();\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%s\",buf);\n        ban[i]=buf;\n        addword(ban[i]);\n    }\n    build();\n    if(l<=100)\n    {\n        dp[0][1]=1;\n        for(int i=0;i<l;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                if(i+len[j]<=l)\n                    for(int id=1;id<=top;id++)\n                    {\n                        int tmp=match(bas[j],len[j],id);\n                        if(tmp)\n                            dp[i+len[j]][tmp]=(dp[i][id]+dp[i+len[j]][tmp])%mod;\n                    }\n            }\n        }\n        for(int id=1;id<=top;id++)\n        {\n            ans=(ans+dp[l][id])%mod;\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    else\n    {\n        int notwo=1;\n        N=2*top;\n        matrix mult=0;\n        for(int i=1;i<=top;i++)\n        {\n            mult.mat[i+top][i]=1;\n        }\n        for(int pos=1;pos<=top;pos++)\n        {\n            for(int i=1;i<=n;i++)\n            {\n                if(len[i]==1)\n                {\n                    int x=pos,y=match(bas[i],1,pos);\n                    if(y)\n                    {\n                        mult.mat[x][y]++;\n                        //mult.mat[x+top][y+top]++;//\u8fd9\u91cc\u6211\u7b2c\u4e00\u6b21\u5199\u6302\u4e86\uff0c\u53bb\u6389\u5c31\u80fdAC\n                    }\n                }\n                else\n                {\n                    int x=pos,y=match(bas[i],2,pos);\n                    if(y)\n                        mult.mat[x][y+top]++;\n                    notwo=0;\n                }\n            }\n        }\n        if(notwo)N>>=1;\n        matrix tmp=fexp(mult,l);\n        matrix orig=0;\n        orig.mat[1][1]=1;\n        orig*=tmp;\n        for(int pos=1;pos<=top;pos++)\n        {\n            ans+=orig.mat[1][pos];\n            ans%=mod;\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1504150581,
        "uid": 3346,
        "name": "oscar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3715 \u3010[BJOI2017]\u9b54\u6cd5\u5492\u8bed\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u5492\u8bed\u4e2d\u4e0d\u80fd\u51fa\u73b0\u7981\u5fcc\u8bcd\uff0c\u800c\u5224\u65ad\u5492\u8bed $str$ \u4e2d\u662f\u5426\u51fa\u73b0\u7981\u5fcc\u8bcd\u5c31\u7c7b\u4f3c\u4e8e\u5728 AC \u81ea\u52a8\u673a\u4e0a\u5339\u914d $str$\uff0c\u6240\u4ee5\u5bb9\u6613\u60f3\u5230\u8981\u628a\u6240\u6709\u7981\u5fcc\u8bcd\u63d2\u5165 AC \u81ea\u52a8\u673a\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7981\u5fcc\u8bcd\uff0c\u628a\u5b83\u5728 Trie \u6811\u4e0a\u5bf9\u5e94\u7684\u8282\u70b9 $u$ \u6807\u8bb0\u4e00\u4e0b\uff08$tag(u)$ \u8d4b\u503c\u4e3a $ \\text{true}$\uff09\uff0c\u4ee3\u8868\u5728 AC \u81ea\u52a8\u673a\u4e0a\u5339\u914d\u5492\u8bed\u65f6\u4e0d\u80fd\u7ecf\u8fc7\u8fd9\u4e9b\u88ab\u6807\u8bb0\u7684\u70b9\u3002\n\n\u63d2\u5165\u5b8c\u6240\u6709\u7981\u5fcc\u8bcd\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $u$\uff0c\u82e5 $tag(u)$ \u7b49\u4e8e $ \\text{true}$\uff0c\u90a3\u4e48 $u$ \u5728\u5931\u914d\u6811\u4e0a\u7684\u5b50\u6811\u4e0a\u7684\u6240\u6709\u70b9\u4e5f\u9700\u8981\u6807\u8bb0\uff0c\u5728\u5931\u914d\u6811\u4e0a\u7528\u4e00\u6b21 dfs \u5c31\u53ef\u4ee5\u5b8c\u6210\u3002\n\n```cpp\nvoid dfs(int u, bool tg){\n\tif (tag[u]) tg = true;\n\telse if (tg) tag[u] = true;\n\tfor(int p = head[u]; p; p = nex[p]) dfs(to[p], tg);\n}\n```\n\u9898\u76ee\u6d89\u53ca\u5230\u8ba1\u6570\uff0c\u5f53\u7136\u7528 dp\u3002\n\n\u8003\u8651\u51b3\u7b56\u548c\u72b6\u6001\u6709\u54ea\u4e9b\uff0c\u51b3\u7b56\u5f88\u663e\u7136\u662f\u9009\u62e9\u54ea\u4e2a\u57fa\u672c\u8bcd\u6c47 $str_j$ \u6dfb\u52a0\u5230\u76ee\u524d\u5492\u8bed\u7684\u540e\u9762\uff0c\u6240\u5f71\u54cd\u7684\u72b6\u6001\u662f\u76ee\u524d\u5492\u8bed\u5728 AC \u81ea\u52a8\u673a\u4e0a\u5339\u914d\u6240\u8d70\u5230\u7684\u8282\u70b9 $u$ \u548c\u76ee\u524d\u5492\u8bed\u7684\u957f\u5ea6 $i$\u3002\n\n\u4e8e\u662f\u8003\u8651\u8fd9\u6837\u8bbe\u8ba1\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8bbe $f(u, i)$ \u8868\u793a\u76ee\u524d\u5492\u8bed\u8d70\u5230\u7684\u8282\u70b9\u4e3a $u$\u4e14\u957f\u5ea6\u4e3a $i$ \u65f6\u7684\u65b9\u6848\u6570\u3002\n\n\u8003\u8651\u5982\u4f55\u8f6c\u79fb\uff0c\u5bf9\u4e8e $f(u, i)$\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u57fa\u672c\u8bcd\u6c47 $str_j$\uff0c\u82e5 $str_j$ \u80fd\u6dfb\u52a0\u5230\u76ee\u524d\u5492\u8bed\u540e\u9762\uff0c\u5219\u8bbe $v$ \u4e3a\u65b0\u5492\u8bed\u5728 AC \u81ea\u52a8\u673a\u4e0a\u5339\u914d\u6240\u8d70\u5230\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u505a\u8f6c\u79fb\uff1a\n\n$f(v,i+len(j)) = f(v,i+len(j)) + f(u,i)$\n\n```cpp\nf[v][i + len[j]] += f[u][i]\n```\n\n\n\u5176\u4e2d $len(j)$ \u4e3a $str_j$ \u7684\u957f\u5ea6\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u5224\u65ad\u5492\u8bed $(u,i)$ \u540e\u9762\u80fd\u5426\u6dfb\u52a0 $str_j$ \u4e14\u5982\u4f55\u627e\u5230\u65b0\u7684 $v$\uff0c\u8fd9\u4e00\u6b65\u663e\u7136\u53ef\u4ee5\u63d0\u524d\u9884\u5904\u7406\u3002\n\n\u8bbe $tran(u,j)$ \u8868\u793a\u5492\u8bed $(u,i)$ \u6dfb\u52a0 $str_j$ \u540e\u6240\u5230\u8fbe\u7684\u65b0\u8282\u70b9\uff08\u6ce8\u610f $tran(u,j)$ \u4e0e\u5492\u8bed\u957f\u5ea6 $i$ \u65e0\u5173\uff09\u3002\n\n\u82e5 $tran(u,j) = 0$\uff0c\u4ee3\u8868\u4e0d\u53ef\u6dfb\u52a0 $str_j$\uff0c\u5373\u82e5\u6dfb\u52a0 $str_j$ \u65b0\u5492\u8bed\u5728 AC \u81ea\u52a8\u673a\u4e0a\u5339\u914d\u4f1a\u8d70\u5230 $tag$ \u4e3a $\\text{true}$ \u7684\u8282\u70b9\u3002\n\n\u82e5 $tran(u,j) > 0$ \u5219 $v$ \u5c31\u662f $tran(u,j)$\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u53d8\u4e3a\uff1a\n\n\n\u5f53 $tran(u,j) > 0$ \u548c $i+len(j) \\leq L$ \u65f6\uff1a\n\n$f(tran(u,j),i+len(j)) = f(tran(u,j),i+len(j)) + f(u,i)$ \n\n```cpp\nif (tran[u][j] > 0 && i + len[j] <= L)\n\tf[tran[u][j]][i + len[j]] += f[u][i]\n```\n\n\u9884\u5904\u7406\u4ee3\u7801\uff1a\n\n```cpp\nint handle(re int u, re char *str){\n\twhile(*str){\n\t\tu = nxt[u][(*str++)-'a'];\n\t\tif (tag[u]) return 0;\n\t}\n\treturn u;\n}\n\nfor(int u = 1; u <= ncnt; ++u){\n\tif (tag[u]) continue;\n\tfor(int j = 1; j <= n; ++j)\n      tran[u][i] = handle(u, str[j]);\n}\n\n```\n\n\u4ee3\u7801\u4e2d ```ncnt``` \u4e3a Trie \u6811\u7684\u603b\u8282\u70b9\u6570\u3002\n\ndp \u7a0b\u5e8f\uff1a\n\n```cpp\nf[1][0] = 1;\nfor(int i = 0; i < L; ++i){\n\tfor(int u = 1; u <= ncnt; ++u){\n\t\tif (!f[u][i]) continue;\n\t\tfor(int j = 1; j <= n; ++j){\n\t\t\tif (tran[u][j] && i + len[j] <= L){\n        \t\t(f[tran[u][j]][i + len[j]] += f[u][i]) %= MOD;\n\t\t\t}\n\t\t}\n\t}\n}\nint ans = 0;\nfor(int u = 1; u <= ncnt; ++u){\n\tif (f[u][L]) (ans += f[u][L]) %= MOD;\n}\n```\n\n\u5230\u8fd9\u91cc\u9898\u76ee\u624d\u89e3\u4e86\u4e00\u534a\uff0c\u770b\u770b\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u8fd8\u6709 $40$ \u5206\u7684\u6570\u636e\u662f $L \\leq 10^8$ \u89c4\u6a21\u7684\u5e76\u4e14\u57fa\u672c\u8bcd\u6c47\u957f\u5ea6 $\\leq 2$\uff0c\u8fd8\u8981\u518d\u5199\u4e00\u4e2a\u7a0b\u5e8f\u53bb\u641e\u5269\u4e0b\u7684 $40$ \u5206\u3002\n\n$L \\leq 10^8$ \u7684 dp\uff0c\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\u6ca1\u8dd1\u4e86\u3002\n\n\u8fd9\u91cc\u7528 $f_i$ \u8868\u793a $i$ \u5c42\u7684\u6240\u6709 $f(u,i)$\u3002\n\n\u5f53\u57fa\u672c\u8bcd\u6c47\u957f\u5ea6\u4e0d\u8d85\u8fc7 $2$ \u65f6\uff0c$i$ \u5c42\u7684 $f_i$ \u53ea\u53ef\u80fd\u5f71\u54cd $i+1$ \u5c42\u7684$f_{i+1}$ \u548c $i+2$ \u5c42\u7684 $f_{i+2}$\uff0c$i$ \u5c42\u7684 $f_i$ \u5728\u8f6c\u79fb\u540e\u5c31\u4e0d\u4f1a\u518d\u7528\u5230\u4e86\uff0c\u6240\u4ee5\u5728 dp \u65f6\u7684\u6bcf\u4e00\u9636\u6bb5\u53ea\u7528\u4fdd\u5b58\u4e24\u5c42\u7684 $f$\uff0c\u8f6c\u79fb\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e $f_i,f_{i+1}$ $\\rightarrow$ $f_{i+1},f_{i+2}$\u3002\n\n\u5177\u4f53\u505a\u6cd5\uff1a\n\n\u56e0\u4e3a\u6240\u6709\u5df2\u6807\u8bb0\u7684\u8282\u70b9\u4e0d\u4f1a\u53c2\u4e0e\u8f6c\u79fb\uff0c\u9996\u5148\u5148\u5c06\u5b83\u4eec\u6392\u9664\u6389\uff0c\u5373\u5148\u5c06\u6240\u6709\u672a\u6807\u8bb0\u7684\u8282\u70b9 $u$ \u6536\u96c6\u8d77\u6765\uff0c\u5e76\u7528$1,2,...,icnt$ \u7ed9\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u7f16\u53f7 $id(u)$\uff0c$icnt$ \u4e3a\u6240\u6709\u672a\u6807\u8bb0\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u5e76\u8bbe $ori(x)$ \u8868\u793a\u7f16\u53f7 $x$ \u6240\u5bf9\u5e94\u7684\u8282\u70b9\u3002\n\n\u7136\u540e\u7528\u5411\u91cf $vec$\uff0c\u4fdd\u5b58 $f_i$ \u5c42\u4e0e $f_{i+1}$ \u5c42\uff0c\u5373\uff1a\n\n$vec_x$ \u8868\u793a$f(ori(x),i)$\uff0c$vec_{x+icnt}$ \u8868\u793a $f(ori(x),i+1)$\u3002\n\n\u7136\u540e\u8003\u8651\u8f6c\u79fb\u77e9\u9635 $M$\uff0c\u5927\u5c0f\u4e3a $2icnt \\times 2icnt$\u3002\n\n\u4ece $1$ \u5230 $icnt$ \u679a\u4e3e\u7f16\u53f7 $x$\uff0c\u7136\u540e\u679a\u4e3e $tran(ori(x),j) > 0$ \u7684 $j$ \u5e76\u8bbe $v$ \u8868\u793a $tran(ori(x),j)$\uff1a\n\n\u82e5 $len(j) = 1$\uff0c\u5219\u8ba9 $M_{id(v),x}$ \u52a0 $1$\uff0c\u610f\u601d\u662f $i$ \u5c42\u7684 $f(ori(x),i)$ \u5bf9 $i+1$ \u5c42\u7684 $f(v,i+1)$ \u6709\u8d21\u732e\u3002\n\n\u82e5 $len(j) = 2$\uff0c\u5219\u8ba9 $M_{id(v) + icnt,x}$ \u52a0 $1$\uff0c\u610f\u601d\u662f $i$ \u5c42\u7684 $f(ori(x),i)$ \u5bf9 $i+2$ \u5c42\u7684 $f(v,i+2)$ \u6709\u8d21\u732e\u3002\n\n\u6b64\u5916\uff0c\u539f\u6765 $f_i,f_{i+1}$ \u9636\u6bb5\u7684 $f_{i+1}$ \u8981\u6362\u4f4d\u5230 $f_{i+1},f_{i+2}$ \u9636\u6bb5\u4e2d\u7684 $f_{i+1}$\uff0c\u5219\u8ba9 $M_{x, x+icnt}$ \u52a0 $1$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nint v;\nfor(int u = 1; u <= ncnt; ++u) if (!tag[u]) ori[id[u] = ++icnt] = u;\nmatrix::n = 2*icnt;\nfor(int x = 1; x <= icnt; ++x){\n\tfor(int j = 1; j <= n; ++j){\n\t\tif (!(v = tran[ori[x]][j])) continue;\n\t\tif (len[j] == 1)\n        \t++M.a[id[v]][x];\n\t\telse if (len[j] == 2)\n        \t++M.a[id[v] + icnt][x];\n\t}\n\t++M.a[x][x+icnt];\n}\n```\n\n\u5176\u4e2d ```matrix``` \u662f ```struct```\uff0c```M``` \u662f ```matrix``` \u7684\u5b9e\u4f8b\uff0c```M.a``` \u5c31\u662f\u8f6c\u79fb\u77e9\u9635 $M$\uff0c```M.a``` \u4e2d\u7684\u503c\u521d\u59cb\u5316\u4e3a ```0```\u3002\n\n\n\u641e\u597d\u8f6c\u79fb\u77e9\u9635\u540e\u5c31\u662f\u77e9\u9635\u5feb\u901f\u5e42\u4e86\uff1a\n\n```cpp\nfor(M1 = M, --L; L; M.mul(M), L>>=1) if (L&1) M1.mul(M);\n\t\nll ans = 0;\nfor(int i = 1; i <= icnt; ++i) if (M1.a[i][1]) ans += M1.a[i][1];\n```\n\n```M1``` \u662f\u4e34\u65f6\u77e9\u9635\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n\u7528\u4e86\u8bb8\u591a\u5b8f\uff0c\u6240\u4ee5\u4e0b\u9762\u7684\u4ee3\u7801\u4e0e\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u7a0d\u4e0d\u540c\u3002\n\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <iostream>\nusing namespace std;\n\n#define re register\n#define sf scanf\n#define pf printf\n#define nl() putchar('\\n')\n#define ms(x, val) memset(x, val, sizeof(x))\n#define _for(i, a, b) for(re int (i) = (a); (i) < (b); ++(i))\n#define _rfor(i, a, b) for(re int (i) = (a); (i) <= (b); ++(i))\n#define _fev(p, u) for(re int (p) = head[(u)]; (p); (p) = nex[(p)])\n#define ll long long\n#define mmin(a, b) (((b) < (a)) ? (b) : (a))\n#define mmax(a, b) (((b) > (a)) ? (b) : (a))\n#define maxn 51\n#define maxm 51\n#define maxs 105\n#define MOD 1000000007\n\nchar \n\tstr[maxm][maxs];\n\nint n, m, L,\n\n\t//AC \u81ea\u52a8\u673a\u76f8\u5173 \n\tncnt = 1,\n\tnxt[maxs][26],\n\tfail[maxs],\n\tque[maxs],\n\t\n\t//\u5931\u914d\u6811\u76f8\u5173 \n\tecnt = 0,\n\thead[maxs],\n\tto[2*maxs],\n\tnex[2*maxs], \n\t\n\t//dp \u7528 \n\tlen[maxm],\n\ttran[maxs][maxn];\n\t\nbool tag[maxs];\n\nvoid add_edge(int u, int v){ to[++ecnt] = v; nex[ecnt] = head[u]; head[u] = ecnt;}\n\n//AC \u81ea\u52a8\u673a\u4e0a\u63d2\u5165\u7981\u5fcc\u8bcd \nvoid ins(re char *str){\n\tre int u = 1, c;\n\twhile(c = *str++){\n\t\tc -= 'a';\n\t\tif (!nxt[u][c]) nxt[u][c] = ++ncnt;\n\t\tu = nxt[u][c];\n\t}\n\ttag[u] = true;\n}\n\n//\u7528\u4e8e\u5b8c\u6210\u5728\u5931\u914d\u6811\u4e0a\u7684\u6807\u8bb0 \nvoid dfs(int u, bool tg){\n\tif (tag[u]) tg = true;\n\telse if (tg) tag[u] = true;\n\t_fev(p, u) dfs(to[p], tg); //\u679a\u4e3e u \u7684\u5b50\u8282\u70b9 to[p] \n}\n\n//\u5efa fail \u548c dfs \nvoid build(){\n\tre int fro = 0, bac = 0, u, v;\n\t_for(i, 0, 26)\n\t\tif (v = nxt[1][i]) fail[que[bac++] = v] = 1, add_edge(1, v);\n\t\telse nxt[1][i] = 1;\n\twhile(bac > fro){\n\t\tu = que[fro++];\n\t\t_for(i, 0, 26)\n\t\t\tif (v = nxt[u][i]) fail[que[bac++] = v] = nxt[fail[u]][i], add_edge(fail[v], v);\n\t\t\telse nxt[u][i] = nxt[fail[u]][i];\n\t}\n\tdfs(1, false);\n}\n\n//\u6c42 tran \u7528 \nint handle(re int u, re char *str){\n\twhile(*str){\n\t\tu = nxt[u][(*str++)-'a'];\n\t\tif (tag[u]) return 0;\n\t}\n\treturn u;\n}\n\n//L <= 100\u65f6 \nnamespace S1{\n\t\n\t#define maxL 101\n\t#define add(x, y) if (((x) += (y)) >= MOD) (x) -= MOD;\n\tint\tf[maxs][maxL];\n\t\n\tint main(){\n\t\tf[1][0] = 1;\n\t\t_for(i, 0, L){\n\t\t\t_rfor(u, 1, ncnt){\n\t\t\t\tif (!f[u][i]) continue;\n\t\t\t\t_rfor(j, 1, n){\n\t\t\t\t\tif (tran[u][j] && i + len[j] <= L){\n\t\t\t\t\t\tadd(f[tran[u][j]][i + len[j]], f[u][i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tre int ans = 0;\n\t\t_rfor(u, 1, ncnt){\n\t\t\tif (f[u][L]){ add(ans, f[u][L]); }\n\t\t}\n\t\t\n\t\tpf(\"%d\\n\", ans);\n\t\treturn 0;\n\t}\n\t\n\t#undef add\n\t#undef maxL\n}\n\n// L > 100 \u65f6 \nnamespace S2{\n\t\n\tint icnt = 0,\n\t\tid[maxs],\n\t\tori[maxs];\t\n\t\n\tstruct matrix{\n\t\tstatic int n;\n\t\tll  a[2*maxs][2*maxs];\n\t\tmatrix(){ ms(a, 0); }\n\t\tmatrix &operator=(const matrix &t){\n\t\t\t_rfor(i, 1, n) _rfor(j, 1, n) a[i][j] = t.a[i][j];\n\t\t\treturn *this;\n\t\t}\n\t\tvoid mul(matrix &t){\n\t\t\tmatrix tmp;\n\t\t\t_rfor(i, 1, n) _rfor(k, 1, n) _rfor(j, 1, n)\n\t\t\t\ttmp.a[i][j] = (tmp.a[i][j] + a[i][k]*t.a[k][j])%MOD;\n\t\t\t*this = tmp;\n\t\t}\n\t\t\n\t} M, M1;\n\t\n\tint matrix::n = 0;\n\t\t\n\tint main(){\n\t\tre int v;\n\t\t_rfor(u, 1, ncnt) if (!tag[u]) ori[id[u] = ++icnt] = u;\n\t\tmatrix::n = 2*icnt;\n\t\t_rfor(x, 1, icnt){\n\t\t\t_rfor(j, 1, n){\n\t\t\t\tif (!(v = tran[ori[x]][j])) continue;\n\t\t\t\t//if (!id[v]) pf(\"Wrong in id[v] == 0\\n\");\n\t\t\t\tif (len[j] == 1) ++M.a[id[v]][x];\n\t\t\t\telse if (len[j] == 2) ++M.a[id[v] + icnt][x];\n\t\t\t\t//else pf(\"Wrong in len[j] > 2\\n\");\n\t\t\t}\n\t\t\t++M.a[x][x+icnt];\n\t\t}\n\t\t\n\t\tfor(M1 = M, --L; L; M.mul(M), L>>=1) if (L&1) M1.mul(M);\n\t\t\t\n\t\tre ll ans = 0;\n\t\t_rfor(i, 1, icnt) if (M1.a[i][1]) ans += M1.a[i][1];\n\t\t\n\t\tpf(\"%lld\\n\", ans % MOD);\n\t\t\n\t\treturn 0;\n\t}\n\t\n}\n\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\", \"r\", stdin);\n\t#endif\n\t\n\tsf(\"%d %d %d\", &n, &m, &L);\n\t\n\t_rfor(i, 1, n){\n\t\tsf(\"%s\", str[i]);\n\t\tlen[i] = strlen(str[i]);\n\t}\n\t_rfor(i, 1, m){\n\t\tsf(\"%s\", str[n+1]);\n\t\tins(str[n+1]);\n\t}\n\tbuild();\n\t\n\t_rfor(u, 1, ncnt){\n\t\tif (tag[u]) continue;\n\t\t_rfor(j, 1, n)\n\t\t\ttran[u][j] = handle(u, str[j]);\n\t}\n\t\n\tif (L <= 100)return S1::main();\n\telse return S2::main();\n\t\n\treturn 0;\n}\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1626579719,
        "uid": 474113,
        "name": "MoYuFang",
        "ccfLevel": 7,
        "title": "\u3010P3715 [BJOI2017]\u9b54\u6cd5\u5492\u8bed\u3011 \u9898\u89e3"
    },
    {
        "content": "\n\n\u9996\u5148\u88f8dp\u663e\u800c\u6613\u89c1\u5bf9\u5427\uff0c$f[i][j]$\u4e3a\u7b2ci\u4e3a\u65f6\u5728AC\u81ea\u52a8\u673a\u7b2cj\u4e2a\u4f4d\u7f6e\u7684\u7b54\u6848\uff0c\u4f46\u8fd9\u6837\u4f60\u8981\u679a\u4e3el\u4e2a\u4f4d\u7f6e\uff0c\u6240\u4ee5\u53ea\u80fd\u89e3\u51b3\u524d60%\u7684\u6570\u636e\u3002\n\n\u89c2\u5bdf\u540e40%\u6570\u636e\uff0c\u53d1\u73b0$f[i][j]\u200b$\u53ea\u80fd\u7531f[i-1]\u6216f[i-2]\u7684\u7b54\u6848\uff0c\u8ba9\u77e9\u9635\u4e58\u6cd5\u6709\u4e86\u53ef\u4e58\u4e4b\u673a\uff0c\u6570\u636e\u8303\u56f4\u4e5f\u5728\u5f15\u5bfc\u7740\u6211\u4eec\u5199\u77e9\u4e58\u3002\u5728\u6211\u7684\u5370\u8c61\u91cc\uff0c\u77e9\u4e58\u53ea\u80fd\u7531f[i-1]\u3001f[i]\u8f6c\u79fb\u5230f[i]\u3001f[i+1]\uff0c\u5bf9\u4e8c\u7ef4\u7684dp\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u3002\n\n\u4f46\u7531\u4e8e\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51faAC\u81ea\u52a8\u673a\u4e0a\u6bcf\u4e2a\u4f4d\u7f6e\u80fd\u5426\u653e\u4e0d\u540c\u7684\u5355\u8bcd\u53ca\u653e\u7f6e\u540e\u7ed3\u5c3e\u7684\u4f4d\u7f6e\uff0c\u8bbe\u7b2ci\u5904\u653e\u7b2cj\u4e2a\u5355\u8bcd\u540e\u7ed3\u5c3e\u7684\u4f4d\u7f6e\u4e3a$a[i][j]\u200b$\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u8fd9\u6837\u77e9\u4e58(AC\u81ea\u52a8\u673a\u53ea\u67092\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u4e3a\u4f8b)\uff1a\n\n|             | $f[i][1]$ | $f[i][2]$ | $f[i+1][1]$                                                  | $f[i+1][2]$                                                  |\n| ----------- | --------- | --------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| $f[i-1][1]$ | 0         | 0         | $\\sum_{i}^{n} (a[1][i]=1\\&\\&len[i]=2)$                       | \u5de6\u8fb9\u610f\u601d\u662f\u957f\u5ea6\u4e3a2,\u4e14\u5728\u7b2c1\u4e2a\u4f4d\u7f6e\u653e\u7f6e\u540e\u5408\u6cd5\u4e14\u7ed3\u5c3e\u5728\u7b2c1\u4e2a\u4f4d\u7f6e\u7684\u5355\u8bcd\u4e2a\u6570 |\n| $f[i-1][2]$ | 0         | 0         | \u540c                                                           | \u4e0a                                                           |\n| $f[i][1]$   | 1         | 0         | \u53f3\u8fb9\u610f\u601d\u662f\u957f\u5ea6\u4e3a1,\u4e14\u5728\u7b2c1\u4e2a\u4f4d\u7f6e\u653e\u7f6e\u540e\u5408\u6cd5\u4e14\u7ed3\u5c3e\u5728\u7b2c2\u4e2a\u4f4d\u7f6e\u7684\u5355\u8bcd\u4e2a\u6570 | $\\sum_{i}^n(a[1][i]=2\\&\\&len[i]=1)$                          |\n| $f[i][2]$   | 0         | 1         | \u540c                                                           | \u4e0a                                                           |\n\n\u6240\u4ee5\u5982\u679cAC\u81ea\u52a8\u673a\u4e2d\u6709$num$\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u77e9\u9635\u5c31\u662f$2num\\times 2num$\u7684\uff0c\u628a\u77e9\u9635\u5206\u4e3a\u56db\u5757\u3002\n\n\u5206\u522b\u4e3a\uff1a$(1,1)$\u5230$(num,num)$\uff08\u5de6\u4e0a\u89d2\uff09\uff0c$(1,num+1)$\u5230$(num,2num)$\uff08\u53f3\u4e0a\u89d2\uff09\uff0c$(num+1,1)$\u5230$(2num,num)$\uff08\u5de6\u4e0b\u89d2\uff09\uff0c$(num+1,num+1)$\u5230$(2num,2num)$\uff08\u53f3\u4e0b\u89d2\uff09\u3002\n\n\u5de6\u4e0a\u89d2\u5168\u662f0\uff0c\u56e0\u4e3a$f[i]$\u5df2\u7ecf\u6c42\u51fa\uff0c\u5de6\u4e0b\u89d2\u662f\u5355\u4f4d\u77e9\u9635\uff0c\u56e0\u4e3a$f[i]=f[i]$\uff0c\u53f3\u8fb9\u9884\u5904\u7406\u597d\u586b\u8fdb\u53bb\u5373\u53ef\u3002\n\n```c++\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define ll long long\n#define mod 1000000007\nusing namespace std;\nstruct node{\n\tint cnt,ch[26],fail;\n}t[1001];\nstruct Mat{\n\tll d[201][201];\n}h,e;\nint num,tail,r[101],n;\nint p,team[101],head,m;\nll f[101][101],ans;\nchar ch[101][101];\ninline void insert(char *s){\n\tint u=1,l=strlen(s);\n\tfor (int i=0; i<l; i++){\n\t\tint a=s[i]-'a';\n\t\tif (!t[u].ch[a]) t[u].ch[a]=++num;\n\t\tu=t[u].ch[a];\n\t}\n\tt[u].cnt=1;\n}\ninline void build(){\n\thead=tail=1; team[head]=1; t[1].fail=1;\n\twhile (head<=tail){\n\t\tint x=team[head];\n\t\t// t[x].cnt|=t[t[x].fail].cnt;\n\t\tfor (int i=0; i<26; i++){\n\t\t\tif (t[x].ch[i]){\n\t\t\t\tteam[++tail]=t[x].ch[i];\n\t\t\t\tif (x==1){\n\t\t\t\t\tt[t[x].ch[i]].fail=1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tt[t[x].ch[i]].fail=t[t[x].fail].ch[i];\n\t\t\t\tt[t[x].ch[i]].cnt|=t[t[t[x].fail].ch[i]].cnt;\n\t\t\t}\n\t\t\telse\n\t\t\t\tif (x==1) t[x].ch[i]=1;\n\t\t\t\telse t[x].ch[i]=t[t[x].fail].ch[i];\n\t\t}\n\t\thead++;\n\t}\n}\ninline int check(int x,int u){\n\tif (t[u].cnt) return -1;\n\tfor (int i=0; i<r[x]; i++){\n\t\tint a=ch[x][i]-'a';\tu=t[u].ch[a];\n\t\tif (t[u].cnt) return -1;\n\t}\n\treturn u;\n}\ninline Mat mul(const Mat &a,const Mat &b){\n\tstatic Mat c;\n\tmemset(c.d,0,sizeof(c.d));\n\tfor (int k=1; k<=num*2; k++)\n\t\tfor (int i=1; i<=num*2; i++){\n\t\t\tfor (int j=1; j<=num*2; j++)\n\t\t\t\tc.d[i][j]=(c.d[i][j]%mod+a.d[i][k]*b.d[k][j]%mod)%mod;\n\t}\n\treturn c;\n}\ninline Mat ksm(Mat a,ll b){\n\tMat ret; memset(ret.d,0,sizeof(ret.d));\n\tfor (int i=1; i<=num*2; i++) ret.d[i][i]=1;\n\twhile (b){\n\t\tif (b&1) ret=mul(ret,a);\n\t\ta=mul(a,a); b>>=1;\n\t}\n\treturn ret;\n}\nint main(){\n\t// freopen(\"0a.out\",\"w\",stdout);\n\tchar s[101]; num=1;\n\tscanf(\"%d%d%d\",&n,&m,&p);\n\tfor (int i=1; i<=n; i++){\n\t\tscanf(\"%s\",ch[i]);\n\t\tr[i]=strlen(ch[i]);\n\t}\n\tfor (int i=1; i<=m; i++){\n\t\tscanf(\"%s\",s);\n\t\tinsert(s);\n\t}\n\tbuild();\nif (p<=100){\n\tf[0][1]=1;\n\tfor (int i=0; i<p; i++){\n\t\tfor (int j=1; j<=num; j++){\n\t\t\tif (!f[i][j]) continue;\n\t\t\tfor (int k=1; k<=n; k++){\n\t\t\t\tif (i+r[k]>p) continue;\n\t\t\t\tint v=check(k,j);\n\t\t\t\tif (v!=-1) f[i+r[k]][v]=(f[i+r[k]][v]+f[i][j])%mod;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=0; i<=num; i++) ans=(ans+f[p][i])%mod;\n}\nelse{\n\tfor (int i=1; i<=num; i++) h.d[i+num][i]=1;\n\tfor (int i=1; i<=num; i++){\n\t\tfor (int j=1; j<=n; j++){\n\t\t\tif (r[j]!=2) continue;\n\t\t\tint v=check(j,i);\n\t\t\tif (v!=-1) h.d[i][v+num]++;\n\t\t}\n\t}\n\tfor (int i=1; i<=num; i++){\n\t\tfor (int j=1; j<=n; j++){\n\t\t\tif (r[j]!=1) continue;\n\t\t\t// int v=i;\n\t\t\t// v=t[v].ch[ch[j][0]-'a'];\n\t\t\t// if (t[v].cnt) v=-1;\n\t\t\tint v=check(j,i);\n\t\t\t// printf(\"%d \",v);\n\t\t\tif (v!=-1) h.d[i+num][v+num]++;\n\t\t}\n\t}\n\t// for (int i=1; i<=num*2; i++){\n\t// \tfor (int j=1; j<=num*2; j++)\n\t// \t\tprintf(\"%lld \",h.d[i][j]);\n\t// \tputs(\"\");\n\t// }\n\th=ksm(h,p);\n\tMat g; memset(g.d,0,sizeof(g.d));\n\tg.d[1][1+num]=1; g=mul(g,h);\n\tfor(int i=1;i<=num;++i)\n\t\tans=(ans+g.d[1][num+i])%mod;\n\t// for (int i=1; i<=num; i++) ans=(ans+h.d[num+1][i])%mod;\n}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1550314712,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3715 \u3010[BJOI2017]\u9b54\u6cd5\u5492\u8bed\u3011"
    },
    {
        "content": "### \u7b97\u6cd5\u7c7b\u578b\n**\u77e9\u9635\u4e58\u6cd5 + AC \u81ea\u52a8\u673a**\n\n### \u5177\u4f53\u5206\u6790\uff1a\n\u9996\u5148\u662f\u524d 60 \u5206\uff0c\u5c31\u662f\u4e00\u4e2a `AC` \u81ea\u52a8\u673a\u4e0a\u7684\u5957\u8def `dp`\uff0c\u8bbe $dp[i][j]$ \u8868\u793a\u5339\u914d\u51fa\u7684\u957f\u5ea6\u4e3a $i$ \u5728\u81ea\u52a8\u673a\u4e0a\u4f4d\u7f6e\u4e3a $j$ \u7684\u65b9\u6848\u6570\uff0c\u8f6c\u79fb\u7684\u8bdd\u5c31\u679a\u4e3e\u4e0b\u4e00\u4e2a\u5355\u8bcd\u9009\u62e9\u54ea\u4e2a\u653e\u5230\u81ea\u52a8\u673a\u4e0a\u4e00\u6ce2\u5339\u914d\u5c31\u597d\u4e86\n\n\u540e\u9762 40 \u5206\u5f3a\u884c\u53d8\u6210\u4e86\u53e6\u5916\u4e00\u9053\u9898\uff0c$L$ \u53d8\u6210\u4e86  $10^8$\uff0c\u4e00\u770b\u5c31\u662f\u77e9\u4e58\u7684\u590d\u6742\u5ea6\u4e86\n\n\u4f46\u662f\u5355\u8bcd\u7684\u957f\u5ea6\u90fd\u975e\u5e38\u5c0f\uff0c\u4e8e\u662f\u8f6c\u79fb $dp_{i,j}$ \u7684\u65f6\u5019\u53ea\u9700\u8981\u4ece $dp_{i-1,x} $ \u548c $dp_{i-2,x}$ \u91cc\u8f6c\u79fb\uff0c\u53d1\u73b0\u8fd9\u975e\u5e38\u50cf\u6590\u6ce2\u90a3\u5951\u7684\u8f6c\u79fb\uff0c\u4e8e\u662f\u63d0\u524d\u5728 `AC` \u673a\u4e0a\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u5904\u7406\u4e00\u4e0b\u5bf9\u5e94\u7684\u8f6c\u79fb\u4e4b\u540e\u77e9\u4e58\u5c31\u597d\u4e86\u3002\n\n### \u4ee3\u7801\uff1a      \n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define LL long long\n#define maxn 205\nconst LL mod=1e9+7;\nchar S[maxn];\nint fail[maxn],flag[maxn],son[maxn][26];\nchar T[55][maxn],len[maxn];\nint n,m,L,cnt;\ninline void ins()\n{\n\tscanf(\"%s\",S+1);\n\tint len=strlen(S+1),now=0;\n\tfor(re int i=1;i<=len;i++) \n\t{if(!son[now][S[i]-'a']) son[now][S[i]-'a']=++cnt;now=son[now][S[i]-'a'];}\n\tflag[now]=1;\n}\ninline void Build()\n{\n\tstd::queue<int> q;\n\tfor(re int i=0;i<26;i++) if(son[0][i]) q.push(son[0][i]);\n\twhile(!q.empty())\n\t{\n\t\tint k=q.front();q.pop();\n\t\tflag[k]|=flag[fail[k]];\n\t\tfor(re int i=0;i<26;i++)\n\t\tif(son[k][i]) fail[son[k][i]]=son[fail[k]][i],q.push(son[k][i]);\n\t\t\telse son[k][i]=son[fail[k]][i];\n\t}\n}\nnamespace solve1\n{\n\tint dp[maxn][maxn];\n\tinline int query(int x,int y)\n\t{\n\t\tint now=x;\n\t\tfor(re int i=1;i<=len[y];i++)\n\t\t{\n\t\t\tif(flag[now]) return -1;\n\t\t\tnow=son[now][T[y][i]-'a'];\n\t\t}\n\t\tif(flag[now]) return -1;\n\t\treturn now;\n\t}\n\tinline void work()\n\t{\n\t\tdp[0][0]=1;\n\t\tfor(re int i=0;i<L;i++)\n\t\t\tfor(re int j=0;j<=cnt;j++)\n\t\t\t\tfor(re int k=1;k<=n;k++)\n\t\t\t\t{\n\t\t\t\t\tif(i+len[k]>L) continue;\n\t\t\t\t\tif(!dp[i][j]) continue;\n\t\t\t\t\tint v=query(j,k);\n\t\t\t\t\tif(v==-1) continue;\n\t\t\t\t\tdp[i+len[k]][v]=(dp[i+len[k]][v]+dp[i][j])%mod;\n\t\t\t\t}\n\t\tint ans=0;\n\t\tfor(re int i=0;i<=cnt;i++) ans=(ans+dp[L][i])%mod;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\nnamespace solve2\n{\n\tLL ans[maxn][maxn],a[maxn][maxn];\n\tint M;\n\tinline void did_a()\n\t{\n\t\tLL mid[maxn][maxn];\n\t\tfor(re int i=0;i<=M;i++)\n\t\t\tfor(re int j=0;j<=M;j++) mid[i][j]=a[i][j],a[i][j]=0;\n\t\tfor(re int k=0;k<=M;k++)\n\t\t\tfor(re int i=0;i<=M;i++)\n\t\t\t\tfor(re int j=0;j<=M;j++)\n\t\t\t\t\t{a[i][j]+=((mid[i][k]*mid[k][j])%mod);if(a[i][j]>mod) a[i][j]%=mod;}\n\t}\n\tinline void did_ans()\n\t{\n\t\tLL mid[maxn][maxn];\n\t\tfor(re int i=0;i<=M;i++)\n\t\t\tfor(re int j=0;j<=M;j++) mid[i][j]=ans[i][j],ans[i][j]=0;\n\t\tfor(re int k=0;k<=M;k++)\n\t\t\tfor(re int i=0;i<=M;i++)\n\t\t\t\tfor(re int j=0;j<=M;j++)\n\t\t\t\t\t{ans[i][j]+=((a[i][k]*mid[k][j])%mod);if(ans[i][j]>mod) ans[i][j]%=mod;}\n\t}\n\tinline void quick(int b){while(b) {if(b&1) did_ans();b>>=1;did_a();}}\n\tinline void work()\n\t{\n\t\tM=cnt+cnt+1;\n\t\tfor(re int i=0;i<=cnt;i++)\n\t\t{\n\t\t\tif(flag[i]) continue;\n\t\t\tfor(re int j=1;j<=n;j++)\n\t\t\tif(len[j]==1)\n\t\t\t{\n\t\t\t\tint v=son[i][T[j][1]-'a'];\n\t\t\t\tif(!flag[v]) a[v+cnt+1][i+cnt+1]++;\n\t\t\t}\n\t\t\telse if(len[j]==2)\n\t\t\t{\n\t\t\t\tint v=son[i][T[j][1]-'a'];\n                int vv=son[v][T[j][2]-'a'];\n                if(flag[v]||flag[vv]) continue;\n                a[vv+cnt+1][i]++;\n\t\t\t}\n\t\t}\n\t\tfor(re int j=cnt+1;j<=M;j++) a[j-cnt-1][j]++;\n\t\tfor(re int i=0;i<=M;i++) ans[i][i]=1;\n\t\tquick(L);\n\t\tLL Ans=0;\n\t\tfor(re int i=cnt+1;i<=M;i++) Ans=(ans[i][cnt+1]+Ans)%mod;\n\t\tprintf(\"%lld\\n\",Ans);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&L);\n\tfor(re int i=1;i<=n;i++) scanf(\"%s\",T[i]+1),len[i]=strlen(T[i]+1);\n\tfor(re int i=1;i<=m;i++) ins();\n\tBuild();\n\tif(L<=100) solve1::work();\n\t\telse solve2::work();\n\treturn 0;\n}\n```\n",
        "postTime": 1626834001,
        "uid": 480340,
        "name": "Fengxiang008",
        "ccfLevel": 0,
        "title": "P3715 \u9898\u89e3"
    },
    {
        "content": "# [BJOI 2017]\u9b54\u6cd5\u5492\u8bed\n\n\u611f\u89c9\u5199\u8fd9\u9898\u7684\u65f6\u5019\u5feb\u8981\u5d29\u4e86\u3002\u3002\u3002\u6700\u70e6\u8fd9\u79cd$dp$\u4e0a\u5957\u4e86\u4e00\u4e2a\u77e9\u9635\u7684\u9898\u76ee\u4e86\uff0c\u56e0\u4e3a\u6784\u9020\u90a3\u4e2a\u77e9\u9635\u603b\u89c9\u5f97\u7279\u522b\u7384\u5b66\uff0c\u8981\u6784\u9020\u597d\u4e45\uff0c\u603b\u662f\u5728\u4e24\u79cd\u5199\u6cd5\u4e4b\u95f4\u5f98\u5f8a\uff0c\u5f98\u5f8a\u70e6\u4e86\u5c31\u4f1a\u4e0d\u81ea\u89c9\u5730\u60f3\u522b\u7684\u3002\n\n\u4f46\u5176\u5b9e\u5199\u591a\u4e86\u8fd8\u86ee\u5957\u8def\u7684\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3715)\n\n## \u9898\u76ee\u53d9\u8ff0\n\n\u73b0\u5728\u7ed9\u4f60$n$\u4e2a\u57fa\u672c\u8bcd\u6c47\u4e0e$m$\u4e2a\u4e0d\u80fd\u51fa\u73b0\u7684\u8bcd\u6c47\uff0c\u8ba9\u4f60\u8fde\u6210\u4e00\u53e5\u8bdd\uff0c\u95ee\u4e00\u5171\u6709\u591a\u5c11\u53e5\u8fd9\u6837\u7684\u8bdd\u3002\u6570\u636e\u8303\u56f4\u8981\u7279\u6b8a\u5173\u6ce8\u4e00\u4e0b\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\n\n### sub task 1\n\n\u7b80\u5355\u7684$ac$\u81ea\u52a8\u673a\u4e0a\u7684$dp$\u95ee\u9898\u3002\u72b6\u6001\u5927\u6982\u4e3a$dp_{i,j}$\u4e3a\u524d$i$\u4f4d\uff0c\u5339\u914d\u5230\u4e86$j$\u8fd9\u4e2a\u70b9\uff0c\u6ca1\u5339\u914d\u5230\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u7684\u60c5\u51b5\u6709\u591a\u5c11\u79cd\u3002\u7531\u4e8e\u5355\u8bcd\u662f\u6bcf\u6b21\u52a0\u4e00\u6574\u4e32\u7684\uff0c\u6240\u4ee5\u8f6c\u79fb\u8ba9\u524d$i$\u4f4d\u53d8\u4e3a\u524d$i+len$\u4f4d\u3002\n\n### sub task 2\n\n\u8003\u8651\u5230\u57fa\u7840\u5355\u8bcd\u7684\u957f\u5ea6\u6700\u591a\u4e3a$2$\uff0c\u6240\u4ee5\u6bcf\u6b21\u8f6c\u79fb$dp_{i,j}$\u9876\u591a\u8f6c\u79fb\u5230$dp_{i+2,j}$\u3002\u770b\u5230\u540e\u9762\u7684$L$\u8303\u56f4\u90a3\u4e48\u5927\uff0c\u6240\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u3002\u4f46\u7531\u4e8e\u4e00\u6b21\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e24\u4e2a\uff0c\u6240\u4ee5\u77e9\u9635\u91cc\u8981\u8bb0\u5f55$dp_{i,j}$\u548c$dp_{i+1.j}$\u4e24\u4e2a\u4e1c\u897f\u7684\u503c\u3002\u7136\u540e\u8f6c\u4e00\u4e0b\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n[code](https://www.luogu.com.cn/paste/ikd6ttjj)\n\n\u83ab\u540d\u7684\u957f\u3002\n\n## \u77e5\u8bc6\u70b9\n+ \u6ce8\u610f\u89c2\u5bdf\u90e8\u5206\u5206\uff0c\u53ef\u80fd\u5e76\u4e0d\u5b58\u5728\u4e00\u4e2a\u7b97\u6cd5\u80fd\u89e3\u51b3\u8fd9\u4e2a\u9898\uff08\u610f\u601d\u662f\u4e24\u4e2a\u7b97\u6cd5\u62fc\u5728\u4e00\u8d77\u3002\u3002\u3002\u5206\u60c5\u51b5\u7528\uff09\u3002",
        "postTime": 1579627990,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "[BJOI 2017]\u9b54\u6cd5\u5492\u8bed"
    },
    {
        "content": "\u5148\u8003\u8651 $L\\le100$\u3002\u5efa\u51fa\u6240\u6709\u5fcc\u8bb3\u8bcd\u6c47\u6784\u6210\u7684 AC \u81ea\u52a8\u673a\uff0c\u8003\u8651\u81ea\u52a8\u673a\u4e0a dp\u3002\n\n\u8bbe $n$ \u8868\u793a AC \u81ea\u52a8\u673a\u4e2d\u5171\u6709 $n+1$ \u4e2a\u70b9\uff0c\u7f16\u53f7\u4ece $0$ \u5230 $n$\u3002$f_{i,j}$ \u8868\u793a\u51b3\u7b56\u5230\u7b2c $i$ \u4e2a\u5b57\u7b26\uff0c\u5230\u8fbe AC \u81ea\u52a8\u673a\u4e0a\u7684 $j$ \u53f7\u70b9\u7684\u65b9\u6848\u6570\u3002\n\n\u5148\u9884\u5904\u7406 $g(u,v,i)$ \u8868\u793a\u7b2c $i$ \u4e2a\u57fa\u672c\u8bcd\u6c47 $s_i$ \u662f\u5426\u53ef\u4ee5\u5728 AC \u81ea\u52a8\u673a\u4e0a\u4ece $u$ \u8f6c\u79fb\u5230 $v$ \u8f6c\u79fb\u4e14\u4e2d\u9014\u4e0d\u7ecf\u8fc7\u975e\u6cd5\u72b6\u6001\u3002\n\n$$f_{l,v}=\\sum\\limits_{u=0}^n\\sum\\limits_{i=1}^Ng(u,v,i)\\times f_{l-\\vert s_i\\vert,u}$$\n\n\u89e3\u51b3\u4e86\u524d 6 \u4e2a\u70b9\u3002\n\n\u7136\u540e\u8003\u8651\u57fa\u672c\u8bcd\u6c47\u957f\u5ea6\u4e0d\u8d85\u8fc7 $1$ \u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u5c06\u53bb\u6389 $g$ \u7684\u7b2c\u4e09\u7ef4\u4ee4 $g(u,v)$ \u8868\u793a AC \u81ea\u52a8\u673a\u4e0a\u5b58\u5728\u51e0\u4e2a\u957f\u5ea6\u4e3a $1$ \u7684\u57fa\u672c\u8bcd\u6c47\u53ef\u4ee5\u5728 AC \u81ea\u52a8\u673a\u4e0a\u4ece $u$ \u8f6c\u79fb\u5230 $v$ \u8f6c\u79fb\u4e14\u4e2d\u9014\u4e0d\u7ecf\u8fc7\u975e\u6cd5\u72b6\u6001\n\n$$f_{l,v}=\\sum\\limits_{u=0}^ng(u,v)\\times f_{l-1,u}$$\n\n\u4f46\u662f $L\\le10^8$\uff0c\u8003\u8651\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316 dp\u3002\n\n$$\nG=\n\\begin{bmatrix}\ng(0,0)&g(0,1)&g(0,2)&\\dots&g(0,n)\\\\\ng(1,0)&g(1,1)&g(1,2)&\\dots&g(1,n)\\\\\ng(2,0)&g(2,1)&g(2,2)&\\dots&g(2,n)\\\\\n\\vdots\\\\\ng(n,0)&g(n,1)&g(n,2)&\\dots&g(n,n)\n\\end{bmatrix}\n$$\n$$\n\\begin{bmatrix}\nf_{i,0}&f_{i,1}&f_{i,2}&\\dots&f_{i,n}\n\\end{bmatrix}\n\\times G\n=\n\\begin{bmatrix}\nf_{i+1,0}&f_{i+1,1}&f_{i+1,2}&\\dots&f_{i+1,n}\n\\end{bmatrix}\n$$\n$$\n\\begin{bmatrix}\nf_{0,0}&f_{0,1}&f_{0,2}&\\dots&f_{0,n}\n\\end{bmatrix}\n\\times G^L\n=\n\\begin{bmatrix}\nf_{L,0}&f_{L,1}&f_{L,2}&\\dots&f_{L,n}\n\\end{bmatrix}\n$$\n\n\u89e3\u51b3\u4e86\u7b2c 7\u30018 \u70b9\u3002\n\n\u8fd8\u5269\u4e0b\u57fa\u672c\u8bcd\u6c47\u4e0d\u8d85\u8fc7 $2$ \u7684\u60c5\u51b5\u3002\u8003\u8651\u5c06\u521a\u521a\u7684 $g(u,v)$ \u6539\u5199\u4e3a $g_1(u,v)$\uff0c\u518d\u8bbe\u4e00\u4e2a $g_2(u,v)$ \u8868\u793a\u5b58\u5728\u51e0\u4e2a\u957f\u5ea6\u4e3a $2$ \u7684\u57fa\u672c\u8bcd\u6c47\u53ef\u4ee5\u4ece $u$ \u8f6c\u79fb\u5230 $v$ \u8f6c\u79fb\u4e14\u4e2d\u9014\u4e0d\u7ecf\u8fc7\u975e\u6cd5\u72b6\u6001\u3002\n\n$$f_{l,v}=\\sum\\limits_{u=0}^ng_1(u,v)\\times f_{l-1,u}+g_2(u,v)\\times f_{l-2,u}$$\n\n\u540c\u6837\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\u3002\n$$\nG=\\begin{bmatrix}\ng_1(0,0)&g_1(0,1)&\\dots&g_1(0,n)&&1&0&\\dots&0\\\\\ng_1(1,0)&g_1(1,1)&\\dots&g_1(1,n)&&0&1&\\dots&0\\\\\n\\vdots&&&&&\\vdots\\\\\ng_1(n,0)&g_1(n,1)&\\dots&g_1(n,n)&&0&0&\\dots&1\\\\\\\\\ng_2(0,0)&g_2(0,1)&\\dots&g_2(0,n)&&0&0&\\dots&0\\\\\ng_2(1,0)&g_2(1,1)&\\dots&g_2(1,n)&&0&0&\\dots&0\\\\\n\\vdots&&&&&\\vdots\\\\\ng_2(n,0)&g_2(n,1)&\\dots&g_2(n,n)&&0&0&\\dots&0\\\\\n\\end{bmatrix}\n$$\n$$\n\\begin{bmatrix}\nf_{i,0}&f_{i,1}&\\dots&f_{i,n}&f_{i-1,0}&f_{i-1,1}&\\dots&f_{i-1,n}\n\\end{bmatrix}\n\\times G\n$$\n$$\n=\n\\begin{bmatrix}\nf_{i+1,0}&f_{i+1,1}&\\dots&f_{i+1,n}&f_{i,0}&f_{i,1}&\\dots&f_{i,n}\n\\end{bmatrix}\n$$\n\ncode\n```cpp\n#include<iostream>\n#include<string>\n#include<cstring>\nusing namespace std;\n#define int long long\nconst int N=60,V=110,U=26,P=1e9+7;\ninline int id(char c){return c-'a';}\nint trie[V][U],ver,tag[V];\ninline void insert(const string&s){\n    int nd=0,len=s.size();\n    for(int i=0;i<len;i++){\n        if(!trie[nd][id(s[i])])trie[nd][id(s[i])]=++ver;\n        nd=trie[nd][id(s[i])];\n    }\n    tag[nd]=1;\n}\nint q[V],front,back;\nint fail[V];\nvoid build(){\n    for(int i=0;i<U;i++)if(trie[0][i])q[++back]=trie[0][i];\n    while(front<back){\n        int nd=q[++front];\n        tag[nd]|=tag[fail[nd]];\n        for(int i=0;i<U;i++){\n            if(trie[nd][i])fail[trie[nd][i]]=trie[fail[nd]][i],q[++back]=trie[nd][i];\n            else trie[nd][i]=trie[fail[nd]][i];\n        }\n    }\n}\nnamespace p1{\n    const int L=110;\n    int g[V][V][N],f[L][V];\n    int calc(int l,int v,string s[],int n){\n        f[0][0]=1;\n        for(int i=1;i<=l;i++){\n            for(int j=0;j<=v;j++){\n                for(int k=0;k<=v;k++){\n                    for(int t=1;t<=n;t++){\n                        if(i<s[t].size())continue;\n                        f[i][j]=(f[i][j]+f[i-s[t].size()][k]*g[k][j][t])%P;\n                    }\n                }\n            }\n        }\n        int ans=0;\n        for(int i=0;i<=v;i++)ans=(ans+f[l][i])%P;\n        return ans;\n    }\n}\nnamespace p2{\n    struct matrix{\n        int a[V<<1][V<<1];\n        int n,m;\n        inline matrix(int n_=0,int m_=0,bool unit=false){\n            n=n_,m=m_;\n            memset(a,0,sizeof(a));\n            if(unit)for(int i=0;i<=n;i++)a[i][i]=1;\n        }\n        inline matrix operator*(const matrix&b)const&{\n            matrix c(n,b.m);\n            for(int i=0;i<=n;i++){\n                for(int j=0;j<=b.m;j++){\n                    for(int k=0;k<=m;k++)c.a[i][j]=(c.a[i][j]+a[i][k]*b.a[k][j]%P)%P;\n                }\n            }\n            return c;\n        }\n    };\n    matrix fpow(matrix a,int b){\n        matrix c(a.n,a.m,true);\n        for(;b;b>>=1,a=a*a)if(b&1)c=c*a;\n        return c;\n    }\n    int g1[V][V],g2[V][V];\n    int calc(int l,int v){\n        matrix G(v<<1|1,v<<1|1);\n        for(int i=0;i<=v;i++){\n            for(int j=0;j<=v;j++){\n                G.a[i][j]=g1[i][j];\n                G.a[i+v+1][j]=g2[i][j];\n            }\n            G.a[i][i+v+1]=1;\n        }\n        matrix A(0,2*v+1);\n        for(int i=0;i<=v;i++)A.a[0][i]=g1[0][i];\n        A.a[0][v+1]=1;\n        matrix B=A*fpow(G,l-1);\n        int ans=0;\n        for(int i=0;i<=v;i++)ans=(ans+B.a[0][i])%P;\n        return ans;\n    }\n}\nint n,m,L;\nstring s1[N],s2[N];\nvoid init(){\n    cin>>n>>m>>L;\n    for(int i=1;i<=n;i++)cin>>s1[i];\n    for(int i=1;i<=m;i++)cin>>s2[i],insert(s2[i]);\n    build();\n}\nbool check(int u,int v,const string&s){\n    int len=s.size();\n    if(tag[u])return false; \n    for(int i=0;i<len;i++){\n        u=trie[u][id(s[i])];\n        if(tag[u])return false;\n    }\n    return u==v;\n}\nsigned main(){\n    // freopen(\"read.in\",\"r\",stdin);\n    init();\n    if(L<=100){\n        for(int i=0;i<=ver;i++){\n            for(int j=0;j<=ver;j++){\n                for(int k=1;k<=n;k++){\n                    p1::g[i][j][k]=check(i,j,s1[k]);\n                }\n            }\n        }\n        cout<<p1::calc(L,ver,s1,n);\n    }\n    else{\n        for(int i=0;i<=ver;i++){\n            for(int j=0;j<=ver;j++){\n                for(int k=1;k<=n;k++){\n                    if(s1[k].size()==1)p2::g1[i][j]+=check(i,j,s1[k]);\n                    else p2::g2[i][j]+=check(i,j,s1[k]);\n                }\n            }\n        }\n        cout<<p2::calc(L,ver);\n    }\n    return 0;\n}\n```",
        "postTime": 1680061021,
        "uid": 455558,
        "name": "yuanjiabao",
        "ccfLevel": 0,
        "title": "P3715 [BJOI2017]\u9b54\u6cd5\u5492\u8bed \u9898\u89e3"
    }
]