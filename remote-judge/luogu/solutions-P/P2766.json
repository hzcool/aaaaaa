[
    {
        "content": "\u9898\u89e3\u6765\u81ea\u7f51\u7edc\u6d4124\u9898\uff1a\n\n\u3010\u95ee\u9898\u5206\u6790\u3011\n\n\n\u7b2c\u4e00\u95ee\u65f6LIS\uff0c\u52a8\u6001\u89c4\u5212\u6c42\u89e3\uff0c\u7b2c\u4e8c\u95ee\u548c\u7b2c\u4e09\u95ee\u7528\u7f51\u7edc\u6700\u5927\u6d41\u89e3\u51b3\u3002\n\n\n\u3010\u5efa\u6a21\u65b9\u6cd5\u3011\n\n\n\u9996\u5148\u52a8\u6001\u89c4\u5212\u6c42\u51faF[i]\uff0c\u8868\u793a\u4ee5\u7b2ci\u4f4d\u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u6c42\u51fa\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6K\u3002\n\n\n1\u3001\u628a\u5e8f\u5217\u6bcf\u4f4di\u62c6\u6210\u4e24\u4e2a\u70b9<i.a>\u548c<i.b>\uff0c\u4ece<i.a>\u5230<i.b>\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n2\u3001\u5efa\u7acb\u9644\u52a0\u6e90S\u548c\u6c47T\uff0c\u5982\u679c\u5e8f\u5217\u7b2ci\u4f4d\u6709F[i]=K\uff0c\u4eceS\u5230<i.a>\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n3\u3001\u5982\u679cF[i]=1\uff0c\u4ece<i.b>\u5230T\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n4\u3001\u5982\u679cj>i\u4e14A[i] < A[j]\u4e14F[j]+1=F[i]\uff0c\u4ece<i.b>\u5230<j.a>\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n\n\u6c42\u7f51\u7edc\u6700\u5927\u6d41\uff0c\u5c31\u662f\u7b2c\u4e8c\u95ee\u7684\u7ed3\u679c\u3002\u628a\u8fb9(<1.a>,<1.b>)(<N.a>,<N.b>)(S,<1.a>)(<N.b>,T)\u8fd9\u56db\u6761\u8fb9\u7684\u5bb9\u91cf\u4fee\u6539\u4e3a\u65e0\u7a77\u5927\uff0c\u518d\u6c42\u4e00\u6b21\u7f51\u7edc\u6700\u5927\u6d41\uff0c\u5c31\u662f\u7b2c\u4e09\u95ee\u7ed3\u679c\u3002\n\n\n\u3010\u5efa\u6a21\u5206\u6790\u3011\n\n\n\u4e0a\u8ff0\u5efa\u6a21\u65b9\u6cd5\u662f\u5e94\u7528\u4e86\u4e00\u79cd\u5206\u5c42\u56fe\u7684\u601d\u60f3\uff0c\u628a\u56fe\u6bcf\u4e2a\u9876\u70b9i\u6309\u7167F[i]\u7684\u4e0d\u540c\u5206\u4e3a\u4e86\u82e5\u5e72\u5c42\uff0c\u8fd9\u6837\u56fe\u4e2d\u4eceS\u51fa\u53d1\u5230T\u7684\u4efb\u4f55\u4e00\u6761\u8def\u5f84\u90fd\u662f\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n\n\u7531\u4e8e\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u70b9\u8981\u4e0d\u53ef\u91cd\u590d\u5730\u53d6\u51fa\uff0c\u9700\u8981\u628a\u6bcf\u4e2a\u70b9\u62c6\u5206\u6210\u4e24\u4e2a\u70b9\u3002\u5355\u4f4d\u7f51\u7edc\u7684\u6700\u5927\u6d41\u5c31\u662f\u589e\u5e7f\u8def\u7684\u6761\u6570\uff0c\u6240\u4ee5\u6700\u5927\u6d41\u91cf\u5c31\u662f\u7b2c\u4e8c\u95ee\u7ed3\u679c\u3002\n\n\u7b2c\u4e09\u95ee\u7279\u6b8a\u5730\u8981\u6c42x1\u548cxn\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u53ea\u9700\u53d6\u6d88\u8fd9\u4e24\u4e2a\u70b9\u76f8\u5173\u8fb9\u7684\u6d41\u91cf\u9650\u5236\uff0c\u6c42\u7f51\u7edc\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 1000000007\n#define N 2000005\n#define M 505\nusing namespace std;\nstruct Edge{\n    int u,v,next,f;\n}G[N];\nint head[N],tot=0,a[M],dp[M],n,len,s,t,ans;\nvoid addedge(int u,int v,int f){\n    G[tot].u=u;G[tot].v=v;G[tot].f=f;G[tot].next=head[u];head[u]=tot++;\n    G[tot].u=v;G[tot].v=u;G[tot].f=0;G[tot].next=head[v];head[v]=tot++;\n}\nint level[100*M];\nbool bfs(int s,int t){\n    memset(level,0,sizeof(level));\n    queue<int>q;q.push(s);level[s]=1;\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        if(u==t)return 1;\n        for(int i=head[u];i!=-1;i=G[i].next){\n            int v=G[i].v,f=G[i].f;\n            if(level[v]==0&&f)q.push(v),level[v]=level[u]+1;\n        }\n    }\n    return 0;\n}\nint dfs(int u,int maxf,int t){\n    if (u==t)return maxf;\n    int rat=0;\n    for (int i=head[u];i!=-1&&rat<maxf;i=G[i].next){\n        int v=G[i].v;int f=G[i].f;\n        if (level[v]==level[u]+1&&f){\n            int Min=min(maxf-rat,f);\n            f=dfs(v,Min,t);\n            G[i].f-=f;G[i^1].f+=f;rat+=f;\n        }\n    }\n    if (!rat)level[u]=N;\n    return rat;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),dp[i]=1;\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<i;j++)\n    if(a[j]<=a[i])dp[i]=max(dp[i],dp[j]+1);\n    for(int i=1;i<=n;i++)len=max(len,dp[i]);\n    printf(\"%d\\n\",len);\n    s=0;t=5000;\n    memset(head,-1,sizeof(head));\n    for(int i=1;i<=n;i++)if(dp[i]==1)addedge(s,i,1);\n    for(int i=1;i<=n;i++)if(dp[i]==len)addedge(i+n,t,1);\n    for(int i=1;i<=n;i++)addedge(i,i+n,1);\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<i;j++)\n    if(a[j]<=a[i]&&dp[j]+1==dp[i])addedge(j+n,i,1);\n    while(bfs(s,t))ans+=dfs(s,inf,t);printf(\"%d\\n\",ans);\n    addedge(1,1+n,inf);addedge(s,1,inf);\n    if(dp[n]==len)addedge(n,n*2,inf),addedge(n*2,t,inf);\n    while(bfs(s,t))ans+=dfs(s,inf,t);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1484814145,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P2766)\n\n\u4e00\u9053\u7f51\u7edc\u6d41\u95ee\u9898\uff0c\u7b2c\u4e00\u95ee\u66b4\u529bLIS\uff1b\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u7684\u76ee\u7684\u662f\u628a\u6bcf\u4e00\u4e2aLIS\u8868\u793a\u6210\u4e00\u6761\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u5f27\uff0c\u540c\u65f6\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u53ea\u7528\u4e00\u6b21\u3002\u53ef\u4ee5\u8003\u8651\u628a\u6bcf\u4e2a\u70b9\u62c6\u5f00\uff0c\u5c06\u70b9$i$\u62c6\u6210\u4e24\u4e2a\u70b9$i_x,i_y$\uff0c\n\n1.\u4ece\u6e90\u70b9\u5411\u6bcf\u4e2a$f[i]=1$\u7684$i_x$\u70b9\u5efa\u8fb9\uff0c\u6d41\u4e3a1\uff1b\n\n2.\u4ece\u6bcf\u4e2a$i_x$\u5411$i_y$\u5efa\u8fb9\uff0c\u6d41\u4e3a1\uff1b\n\n3.\u5bf9\u4e8e\u6bcf\u5bf9$i,j(i>j)$\uff0c\u5f53num[i]>=num[j]\u4e14f[i]==f[j]+1\u65f6\uff0c\u4ece$j_y$\u5411$i_x$\u5efa\u8fb9\uff0c\u6d41\u4e3a1\uff1b\n\n4.\u4ece$f[i]=S$\u7684$i_y$\u5411\u6c47\u70b9\u5efa\u8fb9\uff0c\u6d41\u4e3a1.\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\nnum = 1 2 3 2 4\nf   = 1 2 3 3 4\n\n![](https://cdn.luogu.com.cn/upload/pic/28522.png)\n\n\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\u957f\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/28523.png)\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u79cd\u5efa\u56fe\u4fdd\u8bc1\u4e86\u6211\u4eec\u60f3\u8981\u7684\u4e24\u4e2a\u6027\u8d28\uff0c\u6240\u4ee5\u5728\u56fe\u4e0a\u8dd1\u4e00\u8fb9\u7f51\u7edc\u6d41\u5c31\u662f\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\u4e86\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e09\u95ee\uff0c\u6211\u4eec\u53d1\u73b0\u9650\u5236\u4e00\u4e2a\u70b9\u9009\u5b9a\u6b21\u6570\u7684\u53ea\u6709\u5b83\u4e0e\u6e90\u70b9\u3001\u6c47\u70b9\u7684\u8fde\u8fb9\uff0c\u4ee5\u53ca\u62c6\u51fa\u6765\u7684\u4e24\u4e2a\u70b9\u7684\u8fde\u8fb9\u3002\u4e8e\u662f\u6211\u4eec\u628a$<S,1_x>$\uff0c$<1_x,1_y>$,$<n_x,n_y>$\u4ee5\u53ca$<n_y,T>$\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u7684\u6d41\u6539\u4e3ainf\u5c31\u53ef\u4ee5\u8fc7\u7b2c\u4e09\u95ee\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio> \n#include <cstring>\n#define min(X,Y) ((X)<(Y)?(X):(Y))\n#define max(X,Y) ((X)>(Y)?(X):(Y))\n\nint dis[2001],head[2001],nxt[600001],b[600001],v[600001],S,T,num[501],n,k=1,f[501];\nint q[2001],h,t,p[2001],maxn;\nvoid push(int s,int t,int val){\n\tnxt[++k]=head[s];\n\thead[s]=k;\n\tb[k]=t;\n\tv[k]=val;\n}\nvoid link(int s,int t,int val){\n\tpush(s,t,val);\n\tpush(t,s,0);\n}\nbool bfs(){\n\tmemset(dis,0,sizeof dis);\n\tdis[S]=1;\n\th=t=0;\n\tq[++t]=S;\n\twhile(h<t){\n\t\t++h;\n\t\tfor(int i=head[q[h]];i;i=nxt[i])\n\t\t\tif(v[i]&&!dis[b[i]]){\n\t\t\t\tdis[b[i]]=dis[q[h]]+1;\n\t\t\t\tq[++t]=b[i];\n\t\t\t\tif(b[i]==T)return 1;\n\t\t\t}\n\t}\n\treturn 0;\n}\nint dfs(int x,int flow){\n\tif(x==T||!flow)return flow;\n\tint used=0;\n\tfor(int i=p[x];i;i=nxt[i])\n\t\tif(v[i]&&dis[b[i]]==dis[x]+1){\n\t\t\tint w=dfs(b[i],min(flow-used,v[i]));\n\t\t\tv[i]-=w;\n\t\t\tv[i^1]+=w;\n\t\t\tused+=w;\n\t\t\tif(w)p[x]=i;\n\t\t\tif(used==flow)return used;\n\t\t}\n\tif(!used)dis[x]=0;\n\treturn used;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tS=0,T=n+n+1;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",num+i);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<i;j++)\n\t\t\tif(num[j]<=num[i]&&f[j]>f[i])f[i]=f[j];\n\t\tf[i]++;\n\t\tmaxn=max(maxn,f[i]);\n\t}\n\tprintf(\"%d\\n\",maxn);\n\tfor(int i=1;i<=n;i++)link(i,i+n,1);\n\tfor(int i=1;i<=n;i++)if(f[i]==1)link(S,i,1);\n\tfor(int i=1;i<=n;i++)if(f[i]==maxn)link(i+n,T,1); \n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<i;j++)\n\t\t\tif(num[j]<=num[i]&&f[j]==f[i]-1)link(j+n,i,1);\n\tint ans=0;\n\twhile(bfs()){\n\t\tmemcpy(p,head,sizeof p);\n\t\tans+=dfs(S,0x7f7f7f7f);\n\t}\n\tprintf(\"%d\\n\",ans);\n\tlink(1,1+n,0x7f7f7f7f),link(S,1,0x7f7f7f7f);\n\tif(f[n]==maxn)link(n+n,T,0x7f7f7f7f),link(n,n+n,0x7f7f7f7f);\n\twhile(bfs()){\n\t\tmemcpy(p,head,sizeof p);\n\t\tans+=dfs(S,0x7f7f7f7f);\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1534225717,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP2766 \u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898"
    },
    {
        "content": "[\u539f\u9898](https://www.luogu.com.cn/problem/P2766)\n\n\u7b2c\u4e00\u95ee\u8d85\u7ea7 easy \u5566\uff0c\u4e0d\u5c31\u662f\u4e2a\u88f8\u7684 dp \u54a9\u3002\n\n\u7b2c\u4e8c\u95ee\u7684\u8bdd\uff0c\u6709\u4e2a\u7ed3\u8bba\u6765\u8bc1\u660e\u4e0b\uff1a\n\n\u5047\u8bbe\u7b2c i \u4e2a\u5143\u7d20\u7684 dp \u503c\u4e3a $f(i)$\uff0c\u90a3\u4e48\u7b2c i \u4e2a\u5143\u7d20\u5728\u4efb\u4f55\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u4e2d\u90fd\u4e00\u5b9a\u4f5c\u4e3a\u7b2c $f(i)$ \u4e2a\u5143\u7d20\u51fa\u73b0\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff0c\u6211\u4eec\u4f7f\u7528\u53cd\u8bc1\u6cd5\u6765\u8bc1\u660e\uff1a\n\n\u8bbe\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a $len$\uff0c\u7b2c i \u4e2a\u5143\u7d20\u7684 dp \u503c\u4e3a $f(i)$\u3002\n\n\u7b2c i \u4e2a\u6570\u4e0d\u662f\u4f5c\u4e3a\u7b2c $f(i)$ \u4e2a\u5143\u7d20\uff0c\u8981\u4e48\u6bd4 $f(i)$ \u5c0f\uff0c\u8981\u4e48\u6bd4 $f(i)$ \u5927\u3002\n\n\u82e5\u6bd4\u5b83\u5c0f\uff0c\u6211\u4eec\u8bbe\u7b2c i \u4e2a\u5143\u7d20\u4f5c\u4e3a\u7b2c $f(i)-1$ \u4e2a\u5143\u7d20\u51fa\u73b0\uff0c\u4ecd\u7136\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a $len$ \u7684\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u5728\u7b2c i \u4e2a\u5143\u7d20\u4e4b\u540e\u6709 $len-f(i)+1$ \u4e2a\u6570\uff0c\u90a3\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a $len+1$ \u7684\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u8fd9\u4e0e\u5047\u8bbe\u4e0d\u7b26\u3002\n\n\u82e5\u6bd4\u5b83\u5927\uff0c\u663e\u7136\u9519\u8bef\u3002\u7531\u6b64\uff0c\u7ed3\u8bba\u5f97\u8bc1\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5efa\u51fa\u4e00\u5f20\u5206\u5c42\u56fe\uff0c\u4ece $f(i)$ \u4e3a $1$ \u7684\u70b9\u51fa\u53d1\uff0c\u8d70\u5230 $f(i)$ \u4e3a $len$ \u7684\u70b9\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4e0d\u7528\u8003\u8651\u957f\u5ea6\u7684\u9650\u5236\uff0c\u53ea\u8003\u8651\u4f7f\u7528\u6b21\u6570\u5373\u53ef\u3002\u9650\u5236\u4f7f\u7528\u6b21\u6570\u975e\u5e38\u663e\u7136\u53ef\u4ee5\u7528\u6700\u5927\u6d41\u6765\u505a\u3002\n\n\u628a\u6bcf\u4e2a\u5143\u7d20\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u4e2d\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u4f7f\u7528\u6b21\u6570\u7684\u8fb9\u3002\u6e90\u70b9\u5411 $f(i)$ \u4e3a $1$ \u7684\u70b9\u8fde\u8fb9\uff0c$f(i)$ \u4e3a $len$ \u7684\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u5747\u4e3a\u4f7f\u7528\u6b21\u6570\u3002\u7136\u540e\u6bcf\u4e2a\u5143\u7d20\u5411\u5b83\u4e4b\u540e\u7684\uff0c\u503c\u4e0d\u5c0f\u4e8e\u5b83\u4e14 $f(j)=f(i)+1$ \u7684\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u8fd8\u6709\u4e2a\u7ec6\u8282\uff1a\n\n\u82e5\u6700\u5927\u957f\u5ea6\u4e3a $1$ \uff0c\u5bf9\u4e8e\u7b2c 3 \u95ee\u6211\u4eec\u53bb\u91cd\u4ee5\u540e\u518d\u8f93\u51fa\u5143\u7d20\u4e2a\u6570\u624d\u662f\u6b63\u786e\u7684~~\uff08\u4e0d\u7136 1 \u548c n \u663e\u7136\u4f1a\u8bb0 inf \u6b21\uff09~~\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int N=1010,M=5e5+10,inf=1e9;\nint cur[N*2],d[N*2],f[N],a[N];\nint len,s,t,n,cnt=1;\nbool vis[N*2];\nstruct edge{int fr,to,cap;}e[M];\nvector<int>g[N];\nqueue<int>q;\nvoid add(int u,int v,int w){\n\te[++cnt].to=v;\n\te[cnt].fr=u;\n\te[cnt].cap=w;\n\tg[u].push_back(cnt);\n\te[++cnt].to=u;\n\te[cnt].fr=v;\n\te[cnt].cap=0;\n\tg[v].push_back(cnt);\n}\nbool bfs(){\n\tfor(int i=s;i<=t;i++) vis[i]=d[i]=0;\n\tq.push(s);\n\tvis[s]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=0;i<g[u].size();i++){\n\t\t\tint id=g[u][i],v=e[id].to;\n\t\t\tif(vis[v]||!e[id].cap) continue;\n\t\t\tvis[v]=1;\n\t\t\td[v]=d[u]+1;\n\t\t\tq.push(v);\n\t\t}\n\t}\n\treturn vis[t];\n}\nint dfs(int u,int w){\n\tif(u==t||!w) return w;\n\tint f,res=0;\n\tfor(int &i=cur[u];i<g[u].size();i++){\n\t\tint id=g[u][i],v=e[id].to;\n\t\tif(d[v]!=d[u]+1||!(f=dfs(v,min(w,e[id].cap)))) continue;\n\t\tres+=f;\n\t\tw-=f;\n\t\te[id].cap-=f;\n\t\te[id^1].cap+=f;\n\t\tif(!w) break;\n\t}\n\treturn res;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tf[i]=1;\n\t\tfor(int j=1;j<i;j++)\n\t\t\tif(a[j]<=a[i]&&f[j]+1>f[i])\n\t\t\t\tf[i]=f[j]+1;\n\t\tlen=max(len,f[i]);\n\t}\n\tprintf(\"%d\\n\",len);\n\tif(len==1){\n\t\tprintf(\"%d\\n\",n);\n\t\tsort(a+1,a+1+n);\n\t\tint t=unique(a+1,a+1+n)-a-1;\n\t\tprintf(\"%d\\n\",t);\n\t\treturn 0;\n\t}\n\ts=0,t=2*n+1;\n\tfor(int i=1;i<=n;i++){\n\t\tadd(i,i+n,1);\n\t\tif(f[i]==1) add(s,i,inf);\n\t\tif(f[i]==len) add(i+n,t,inf);\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tif(a[i]<=a[j]&&f[i]+1==f[j])\n\t\t\t\tadd(i+n,j,1);\n\t}\n\tint ans=0;\n\twhile(bfs()){\n\t\tfor(int i=s;i<=t;i++) cur[i]=0;\n\t\tans+=dfs(s,inf);\n\t}\n\tprintf(\"%d\\n\",ans);\n\tfor(int i=s;i<=t;i++) g[i].clear();\n\tans=0,cnt=1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(i==1||i==n) add(i,i+n,inf);\n\t\telse add(i,i+n,1);\n\t\tif(f[i]==1){\n\t\t\tif(i==1||i==n) add(s,i,inf);\n\t\t\telse add(s,i,1);\n\t\t}\n\t\tif(f[i]==len){\n\t\t\tif(i==1||i==n) add(i+n,t,inf);\n\t\t\telse add(i+n,t,1);\n\t\t}\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tif(a[i]<=a[j]&&f[i]+1==f[j])\n\t\t\t\tadd(i+n,j,1);\n\t}\n\twhile(bfs()){\n\t\tfor(int i=s;i<=t;i++) cur[i]=0;\n\t\tans+=dfs(s,inf);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1581914817,
        "uid": 55405,
        "name": "\u9752\u7fbd\u540c",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "\u6c42\u52a0\u53cb\u94feQAQ\n\nMailto: Chen2016MS@outlook.com\n\n## Solution\n\n\u6ce8\u610f\uff0c\u672c\u9898\u4e2d\u9012\u589e\u5b50\u5e8f\u5217**\u975e\u4e25\u683c\u9012\u589e**\n\n## Analysis\n\n### Task 1\n\n\u663e\u7136\u7684\u7ecf\u5178DP\n\u4ee4$f(i)$\u8868\u793a\u9009\u62e9$a_i$\u4f5c\u4e3a\u9012\u589e\u5b50\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u6570\u6240\u80fd\u5f97\u5230\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6613\u5f97\n$$f(i) = \\max_{j < i, a_j \\le a_i}\\lbrace f(j)\\rbrace + 1$$\n\u957f\u5ea6$\\max\\lbrace f(i)\\rbrace$\u8bb0\u4f5c$s$\n\n### Task 2\n\n\u6211\u4eec\u8003\u8651\u5b50\u5e8f\u5217\u662f\u600e\u4e48\u751f\u6210\u7684\uff1a\u8bbe\u5f53\u524d\u5e8f\u5217\u7684\u7ed3\u5c3e\u662f$a_i$\uff0c\u5f80\u540e\u62d3\u5c55\u5e8f\u5217\u65f6\uff0c\u6211\u4eec\u4f1a\u9009\u62e9$a_i \\le a_j, i < j$\u7684$a_j$\n\n\u4e8e\u662f\u6211\u4eec\u5c06\u6240\u6709$a_i \\le a_j, i < j$\u7684\u70b9\u5bf9$(i, j)$\u8fde\u8fb9\uff0c\u5f62\u6210\u7684**\u56fe**\u8bb0\u4f5c$G$\n\n\u5bf9\u4e8e\u6240\u6709\u5165\u5ea6\u4e3a$0$\u7684\u70b9\n- \u4eceSuper Source\u5411\u5176\u8fde\u8fb9\uff0c\u5bb9\u91cf\u5747\u4e3a$1$\u3002\u8868\u793a\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u8fdb\u884c\u5b50\u5e8f\u5217\u7684\u9009\u62e9\n- \u4ece\u8fd9\u4e2a\u70b9\u8fdb\u884cBFS\uff0c\u627e\u51fa$G$\u4e2d\u4ece\u8be5\u70b9\u7ecf$s - 1$\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u5168\u90e8\u70b9\uff0c\u6253\u4e0a\u6807\u8bb0\u3002\u8868\u793a\u8be5\u70b9\u4e0e\u641c\u7d22\u51fa\u7684\u70b9\u80fd\u5f62\u6210$s$\u4e2a\u70b9\u7ec4\u6210\u7684\u8def\u5f84\uff0c\u5373\u80fd\u6784\u9020\u51fa\u957f\u5ea6\u4e3a$s$\u7684\u5b50\u5e8f\u5217\n\n\u63a5\u7740\u5bf9\u4e8e\u6253\u4e0a\u6807\u8bb0\u7684\u70b9\uff0c\u5411Super Sink\u8fde\u8fb9\uff0c\u5bb9\u91cf\u5747\u4e3a$1$\n\n\u8dd1\u4e00\u904d\u6700\u5927\u6d41\u5373\u53ef\n\n### Task 3\n\n\u8fd9\u5c31\u7b80\u5355\u4e86\uff0c\u5c06Super Source\u5411$1$\u7684\u8fb9\u4e0e$n$\u5411Super Sink\u7684\u5bb9\u91cf\u8bbe\u4e3a$+\\infty$\u5373\u53ef\n\n### Find the Bug\n\nWA\u4e86\uff0c\u4e0d\u8fc7\u5206\u8fd8\u6bd4\u8f83\u9ad8\n\n\n\u4e00\u5b9a\u662f\u54ea\u91cc\u51fa\u95ee\u9898\u4e86\u2026\u2026\n\n\u6ca1\u9519\uff01\u4e00\u4e2a\u70b9\u53ef\u4ee5\u4f5c\u4e3a\u5411Super Sink\u8fde\u8fb9\u7684\u70b9\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5411\u540e\u9762\u7684\u70b9\u8fde\u8fb9\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u6d41\u91cf\u53d8\u5927\n\n\u600e\u4e48\u89e3\u51b3\uff1f\u8df3\u8fc7\u4e2d\u95f4\u7684\u7ec4\u6210\u5e8f\u5217\u7684\u90a3\u4e9b\u70b9\uff01\n\n\u6211\u4eec\u53ea\u5173\u5fc3\u4e00\u4e2a\u5e8f\u5217\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\uff0c\u5c06\u5176\u8fde\u8fb9\u5373\u53ef\n\nSuper Source/Sink\u7684\u8fde\u8fb9\u89c4\u5219\u4e0d\u53d8\n\n### Extra\n\n\u4e27\u5fc3\u75c5\u72c2\u7684$n = 1$\u7684\u70b9\uff0c\u7279\u5224\u5373\u53ef\n\n### Code\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <map>\n\nstruct Edge\n{\n    int from, to, capa, next;\n    Edge(int from = 0, int to = 0, int capa = 0, int next = 0) : from(from), to(to), capa(capa), next(next) {}\n};\n\nint n, len, s, t, cntEdge = -1, cur;\nint a[510], tag[510], indeg[510], num[1010], d[510], head[1000010];\nEdge edge[1000010];\nstd::vector <int> zeroDeg;\nstd::vector <int> g[510];\nstd::map <int, int> map;\n\nvoid getLen()\n{\n    int f[510];\n    for (int i = 1; i <= n; ++i)\n    {\n        f[i] = 1;\n        for (int j = 1; j < i; ++j)\n            if (a[i] >= a[j] && f[i] <= f[j])\n                f[i] = f[j] + 1;\n        len = std::max(len, f[i]);\n    }\n    std::cout << len << \"\\n\";\n}\n\nvoid addEdge(int x, int y, int z)\n{\n    edge[++cntEdge] = Edge(x, y, z, head[x]), head[x] = cntEdge;\n    edge[++cntEdge] = Edge(y, x, 0, head[y]), head[y] = cntEdge;\n}\n\nvoid findNode(int x, int y)\n{\n    if (y == len)\n    {\n        map[x] = 1;\n        addEdge(cur, x, 1);\n        return;\n    }\n    for (auto i : g[x])\n        findNode(i, y + 1);\n}\n\nvoid buildNetwork()\n{\n    for (auto i : zeroDeg)\n        addEdge(s, i, 1), cur = i, findNode(i, 1);\n    for (auto& i : map)\n        addEdge(i.first, t, 1);\n}\n\nvoid bfs()\n{\n    std::queue <int> q;\n    q.push(t), ++num[d[t] = 1];\n    while (q.size())\n    {\n        int x = q.front(); q.pop();\n        for (int i = head[x]; ~i; i = edge[i].next)\n        {\n            int to = edge[i].to;\n            if (!d[to] && !edge[i].capa)\n                ++num[d[to] = d[x] + 1], q.push(to);\n        }\n    }\n}\n\nint dfs(int x, int aug)\n{\n    if (!aug || x == t)\n        return aug;\n    int res = 0, f = 0;\n    for (int i = head[x]; ~i; i = edge[i].next)\n    {\n        int to = edge[i].to;\n        if (d[x] == d[to] + 1 && (f = dfs(to, std::min(aug, edge[i].capa))))\n        {\n            aug -= f, res += f, edge[i].capa -= f, edge[i ^ 1].capa += f;\n            if (!aug)\n                return res;\n        }\n    }\n    if (!(--num[d[x]]))\n        d[s] = n + 3;\n    ++num[++d[x]];\n    return res;\n}\n\nvoid maxFlow()\n{\n    memset(d, 0, sizeof d);\n    memset(num, 0, sizeof num);\n    int res = 0;\n    bfs();\n    while (d[s] <= n + 2)\n        res += dfs(s, 0x7f7f7f7f);\n    std::cout << (res == 0x7f7f7f7f ? 1 : res) << \"\\n\";\n}\n\nvoid rebuildNetwork()\n{\n    for (int i = 0; i <= cntEdge; i += 2)\n    {\n        edge[i].capa = 1, edge[i ^ 1].capa = 0;\n        if (edge[i].from == n && edge[i].to == t)\n            edge[i].capa = 0x7f7f7f7f;\n        else if (edge[i].from == 0 && edge[i].to == 1)\n            edge[i].capa = 0x7f7f7f7f;\n    }\n}\n\nint main()\n{\n    memset(head, -1, sizeof head);\n    std::ios::sync_with_stdio(0);\n    std::cin.tie(0);\n    std::cin >> n; s = 0, t = n + 1;\n    for (int i = 1; i <= n; ++i)\n        std::cin >> a[i];\n    getLen();\n    for (int i = 1; i <= n; ++i)\n    {\n        for (int j = 1; j < i; ++j)\n            if (a[i] >= a[j])\n                ++indeg[i], g[j].push_back(i);\n        if (!indeg[i])\n            zeroDeg.push_back(i);\n    }\n    buildNetwork();\n    maxFlow();\n    rebuildNetwork();\n    maxFlow();\n    return 0;\n}\n```",
        "postTime": 1551505555,
        "uid": 32773,
        "name": "ChenZ01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u95ee\u7528\u666e\u901aDP\u53ef\u4ee5\u89e3\u51b3\n\n\u7b2c\u4e8c\u3001\u4e09\u95ee \u7528\u7f51\u7edc\u6700\u5927\u6d41\u89e3\u51b3\n\n\u3010\u5efa\u6a21\u65b9\u6cd5\u3011\n\n\n\u9996\u5148\u52a8\u6001\u89c4\u5212\u6c42\u51faF[i]\uff0c\u8868\u793a\u4ee5\u7b2ci\u4f4d\u4e3a\u5f00\u5934\u7684\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u6c42\u51fa\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6K\u3002\n\n\n1\u3001\u628a\u5e8f\u5217\u6bcf\u4f4di\u62c6\u6210\u4e24\u4e2a\u70b9<i.a>\u548c<i.b>\uff0c\u4ece<i.a>\u5230<i.b>\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n2\u3001\u5efa\u7acb\u9644\u52a0\u6e90S\u548c\u6c47T\uff0c\u5982\u679c\u5e8f\u5217\u7b2ci\u4f4d\u6709F[i]=K\uff0c\u4eceS\u5230<i.a>\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n3\u3001\u5982\u679cF[i]=1\uff0c\u4ece<i.b>\u5230T\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n4\u3001\u5982\u679cj>i\u4e14A[i] < A[j]\u4e14F[j]+1=F[i]\uff0c\u4ece<i.b>\u5230<j.a>\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n\n\u6c42\u7f51\u7edc\u6700\u5927\u6d41\uff0c\u5c31\u662f\u7b2c\u4e8c\u95ee\u7684\u7ed3\u679c\u3002\u628a\u8fb9(<1.a>,<1.b>)(<N.a>,<N.b>)(S,<1.a>)(<N.b>,T)\u8fd9\u56db\u6761\u8fb9\u7684\u5bb9\u91cf\u4fee\u6539\u4e3a\u65e0\u7a77\u5927\uff0c\u518d\u6c42\u4e00\u6b21\u7f51\u7edc\u6700\u5927\u6d41\uff0c\u5c31\u662f\u7b2c\u4e09\u95ee\u7ed3\u679c\u3002\n\n\n\u3010\u5efa\u6a21\u5206\u6790\u3011\n\n\n\u4e0a\u8ff0\u5efa\u6a21\u65b9\u6cd5\u662f\u5e94\u7528\u4e86\u4e00\u79cd\u5206\u5c42\u56fe\u7684\u601d\u60f3\uff0c\u628a\u56fe\u6bcf\u4e2a\u9876\u70b9i\u6309\u7167F[i]\u7684\u4e0d\u540c\u5206\u4e3a\u4e86\u82e5\u5e72\u5c42\uff0c\u8fd9\u6837\u56fe\u4e2d\u4eceS\u51fa\u53d1\u5230T\u7684\u4efb\u4f55\u4e00\u6761\u8def\u5f84\u90fd\u662f\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u7531\u4e8e\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u70b9\u8981\u4e0d\u53ef\u91cd\u590d\u5730\u53d6\u51fa\uff0c\u9700\u8981\u628a\u6bcf\u4e2a\u70b9\u62c6\u5206\u6210\u4e24\u4e2a\u70b9\u3002\u5355\u4f4d\u7f51\u7edc\u7684\u6700\u5927\u6d41\u5c31\u662f\u589e\u5e7f\u8def\u7684\u6761\u6570\uff0c\u6240\u4ee5\u6700\u5927\u6d41\u91cf\u5c31\u662f\u7b2c\u4e8c\u95ee\u7ed3\u679c\u3002\u7b2c\u4e09\u95ee\u7279\u6b8a\u5730\u8981\u6c42x1\u548cxn\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u53ea\u9700\u53d6\u6d88\u8fd9\u4e24\u4e2a\u70b9\u76f8\u5173\u8fb9\u7684\u6d41\u91cf\u9650\u5236\uff0c\u6c42\u7f51\u7edc\u6700\u5927\u6d41\u5373\u53ef\u3002\n",
        "postTime": 1472711287,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u95ee\uff0c\u6c42\u51fa\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u957f\u5ea6$s$\u3002\u6211\u77e5\u9053\u4f60\u4f1a\u7528$O(nlogn)$\u7684\u590d\u6742\u5ea6\u6c42\u5b83\uff0c\u4f46\u662f\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u4e48\u505a\u4ee5\u540e\uff0c\u540e\u9762\u600e\u4e48\u5efa\u56fe\u5462\uff1f\u6211\u600e\u4e48\u77e5\u9053\u4e24\u4e2a\u70b9\u662f\u5426\u90fd\u5728\u6700\u957f\u7684\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u4e0a\u5462\uff1f\u56de\u60f3\u4e00\u4e0b\u6734\u7d20\u7684$O(n^2)$\u7684\u505a\u6cd5\uff0c\u72b6\u6001$f_i$\u8868\u793a\u4ee5$a_i$\u7ed3\u5c3e\u7684\u6700\u957f\u5b50\u5e8f\u5217\u957f\u5ea6\u3002\u5047\u5982$i\\le j,a_i\\le a_j,f_i+1=f_j$\uff0c\u8bf4\u660e$f_j$\u662f\u7531$f_i$\u8f6c\u79fb\u800c\u6765\u7684\uff0c\u8fdb\u800c\u8bf4\u660e\u5728\u4ee5$a_j$\u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u524d\u4e00\u4f4d\u53ef\u4ee5\u662f$a_i$\u3002  \n\n\u7b2c\u4e8c\u95ee\uff0c\u9650\u5236\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u6570\u76ee\u3002\u8fd9\u91cc\u9700\u8981\u62c6\u70b9\uff0c\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\uff1a\n![example](https://cdn.luogu.com.cn/upload/image_hosting/euq4420k.png)  \n\u53ea\u9700\u8981\u52a0\u4e0a\u4e00\u4e2a\u865a\u70b9\u9650\u5236\u8be5\u70b9\u7684\u51fa\u6d41\u53ea\u80fd\u4e3a1\uff0c\u5373\u53ef\u89e3\u51b3\uff1a\n![example2](https://cdn.luogu.com.cn/upload/image_hosting/j4t0pge8.png)  \n\u8003\u8651\u6e90\u70b9\u4e0e$f_i=1$\u7684\u70b9\u76f8\u8fde\uff0c$f_i=s$\u7684\u70b9\u4e0e\u6c47\u70b9\u76f8\u8fde\uff1b\u70b9\u4e0e\u70b9\u4e4b\u95f4\u6839\u636e\u4e0a\u8ff0\u8f6c\u79fb\u6761\u4ef6\u8fde\u8fb9\u3002\u5c06\u6240\u6709\u8fb9\u7684\u8fb9\u6743\u90fd\u8bbe\u4e3a1\u3002\u8fd9\u6837\uff0c\u4ece$s$\u5230$t$\u7684\u5355\u4f4d\u6d41\u91cf\u5c31\u8868\u793a\u5b58\u57281\u4e2a\u7ecf\u8fc7\u7684\u6bcf\u4e2a\u70b9\u53ea\u75281\u6b21\u7684\u5408\u6cd5\u65b9\u6848\uff0c\u6bcf\u6761\u8def\u5f84\u4e4b\u95f4\u4e00\u5b9a\u4e0d\u4f1a\u6709\u4ea4\u70b9\u3002  \n\n\u7b2c\u4e09\u95ee\uff0c\u7531\u4e8e$x_1$\u548c$x_n$\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u4e14\u5b83\u4eec\u53ea\u80fd\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u6216\u6700\u540e\u4e00\u4e2a\u5b58\u5728\u4e8e\u5e8f\u5217\u4e2d\uff0c\u6240\u4ee5\u82e5\u5b83\u4eec\u4e0e\u6e90\u70b9\u6216\u6c47\u70b9\u4e4b\u95f4\u6709\u8fde\u8fb9\uff0c\u5c06\u8fb9\u6743\u8bbe\u4e3a$inf$\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\nconst int maxn=500+10;\nconst int maxm=1e6+10;\nconst int INF=0x3f3f3f3f;\nint a[maxn],f[maxn],dep[maxn<<1];\nint cur[maxn<<1],head[maxn<<1],to[maxm],nxt[maxm],val[maxm];\nint tot=1,cnt=0;\nint n,s,t;\nstruct Queue\n{\n\tint a[maxn<<1];\n\tint l,r;\n\tQueue() {l=1,r=0;}\n\tvoid push(int x) {a[++r]=x;}\n\tvoid pop() {l++;}\n\tint front() {return a[l];}\n\tbool empty() {return l>r;}\n}q;\n\nint min(int x,int y) {return x<y?x:y;}\nint max(int x,int y) {return x>y?x:y;}\nvoid add(int u,int v,int w)\n{\n\tnxt[++tot]=head[u];\n\thead[u]=tot;\n\tto[tot]=v;\n\tval[tot]=w;\n}\nbool bfs()\n{\n\tmemset(dep, 0x3f, sizeof(dep));\n\tdep[s]=0;\n    q=Queue();\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor (int i=head[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif (val[i]&&dep[v]>dep[u]+1)\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t]!=INF;\n}\nint dfs(int u,int minf)\n{\n\tif (u==t||!minf)\n\t\treturn minf;\n\n\tint used=0;\n\tfor (int &i=cur[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif (val[i]&&dep[v]==dep[u]+1)\n\t\t{\n\t\t\tint flow=dfs(v, min(minf-used, val[i]));\n\t\t\tif (!flow)\n\t\t\t\tcontinue;\n\t\t\tused+=flow;\n\t\t\tval[i]-=flow;\n\t\t\tval[i^1]+=flow;\n\t\t\tif (used==minf)\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn used;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\ts=0,t=2*n+1;\n\tfor (int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor (int i=1;i<=n;i++)\n\t\tf[i]=1;\n\tint sum=1;\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=i-1;j>=1;j--)\n\t\t\tif (a[j]<=a[i])\n\t\t\t\tf[i]=max(f[i], f[j]+1);\n\tfor (int i=1;i<=n;i++)\n\t\tsum=max(sum, f[i]);\n\tif (sum==1)\n\t{\n\t\tprintf(\"%d\\n%d\\n%d\\n\",sum,n,n);\n\t\treturn 0;\n\t}\n\tprintf(\"%d\\n\",sum);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tadd(i, i+n, 1),add(i+n, i, 0);\n\t\tif (f[i]==1)\n\t\t\tadd(s, i, 1),add(i, s, 0);\n\t\tif (f[i]==sum)\n\t\t\tadd(i+n, t, 1),add(t, i+n, 0);\n\t\tfor (int j=i+1;j<=n;j++)\n\t\t\tif (a[i]<=a[j]&&f[i]+1==f[j])\n\t\t\t\tadd(i+n, j, 1),add(j, i+n, 0);\n\t}\n\tint ans=0;\n\twhile(bfs())\n\t{\n\t\tfor (int i=s;i<=t;i++)\n\t\t\tcur[i]=head[i];\n\t\tans+=dfs(s, INF);\n\t}\n\tprintf(\"%d\\n\",ans);\n\tans=0;\n\tfor (int i=2;i<=tot;i++)\n\t{\n\t\tif (i&1)\n\t\t\tval[i]=0;\n\t\telse\n\t\t\tval[i]=to[i]==1||to[i]==n*2||to[i^1]==1||to[i^1]==n*2?INF:1;\n\t}\n\twhile(bfs())\n\t{\n\t\tfor (int i=s;i<=t;i++)\n\t\t\tcur[i]=head[i];\n\t\tans+=dfs(s, INF);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1584780531,
        "uid": 111528,
        "name": "hkr04",
        "ccfLevel": 8,
        "title": "\u9898\u89e3\u3010\u7f51\u7edc\u6d4124\u9898\u3011\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898"
    },
    {
        "content": "~~\u672c\u4eba\u601d\u8def\u6e05\u5947\u3002\u53d1\u9898\u89e3\u7eaa\u5ff5~~\n## \u5206\u6790\n\u9996\u5148\u5f88\u76f4\u89c2\u5730\u60f3\u5230\u4e00\u4e2a\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5c31\u5bf9\u5e94\u5230\u5c06$x_1$\u5230$x_n$\u6392\u6210\u4e00\u6392\u540e\u7684\u4e00\u6761\u8def\u5f84\uff0c\u540c\u65f6\u5e8f\u5217\u4e2d\u540e\u4e00\u4e2a\u6570\u4e0d\u5c0f\u4e8e\u524d\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u70b9i\u5230i\u540e\u9762\u6240\u6709\u6ee1\u8db3$x_j \\geq x_i$\u7684\u70b9\u8fde\u8fb9\uff0c\u5219\u7b2c\u4e00\u95ee\u6240\u6c42\u5373\u4e3a\u8be5DAG\u4e2d\u7684\u6700\u957f\u94fe\u957f\u5ea6\u3002\u5982\u679c\u628a\u8fb9\u6743\u90fd\u8d4b\u4e3a-1\uff0c\u518d\u6dfb\u52a0\u70b9S\uff0cT\uff0cS\u4e0e\u6bcf\u4e2a\u70b9\u8fde\u6743\u4e3a0\u7684\u8fb9\uff0c\u6bcf\u4e2a\u70b9\u4e0eT\u8fde\u6743\u4e3a0\u7684\u8fb9\uff0c\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u4fbf\u662fS\u5230T\u7684\u6700\u77ed\u8def\u7684\u76f8\u53cd\u6570\u52a01\u3002\u6837\u4f8b\u5bf9\u5e94\u7684\u56fe\u5982\u4e0b\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/33833.png)  \n\u90a3\u4e48\u7b2c\u4e8c\u3001\u4e09\u95ee\u5462?  \n### \u62c6\u70b9\n\u5728\u7b2c\u4e8c\u95ee\u4e2d\uff0c\u6ce8\u610f\u5230\u53d6\u51fa\u7684\u82e5\u5e72\u6761\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u4e0d\u80fd\u6709\u516c\u5171\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u62c6\u70b9\u5728\u9876\u70b9\u5904\u6dfb\u52a0\u6d41\u91cf\u9650\u5236\uff0c\u5c1d\u8bd5\u5c06\u6700\u5927\u6570\u91cf\u5316\u5f52\u4e3a\u6700\u5927\u6d41\u6765\u89e3\u51b3\u3002  \n\u4f46\u5982\u679c\u5355\u5355\u662f\u6700\u5927\u6d41\uff0c\u6ca1\u6709\u529e\u6cd5\u4fdd\u8bc1\u6bcf\u6761\u589e\u5e7f\u8def\u90fd\u662f\u201c\u6700\u957f\u201d\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u589e\u5e7f\u5fc5\u987b\u6cbfS-T\u7684\u6700\u77ed\u8def\uff0c\u53ef\u4ee5\u5199\u4e00\u4e2a\u7c7b\u4f3c\u8d39\u7528\u6d41\u7684\u4e1c\u897f\uff0c\u53d1\u73b0\u6700\u77ed\u8def\u957f\u5ea6\u53d8\u4e86\u5c31\u505c\u6b62\u3002\u7136\u800c\u672c\u4eba\u5199\u8fd9\u9898\u65f6\u4e0d\u4f1a\u8d39\u7528\u6d41\uff0cyy\u4e86\u67d0\u5947\u602a\u89e3\u6cd5\uff1a\u5148\u4ee5S\u4e3a\u6e90\u8dd1spfa\uff0c\u8bb0S\u5230\u70b9i\u7684\u6700\u77ed\u8def$dis_i$\uff0c\u5219\u5220\u9664$e(u,v)|dis_u + c(e) > dis_v$,\u5c31\u53ef\u4fdd\u8bc1\u6240\u6709S-T\u8def\u5f84\u90fd\u662f\u201c\u6700\u957f\u201d\u7684\u3002\u81f3\u4e8e\u4e0a\u56fe$x_i$\u548c$x_j$\u95f4\u7684\u8fb9\uff0c\u7531\u4e8e\u4e24\u7aef\u4e0d\u53ef\u80fd\u540c\u65f6\u88ab\u9009\u4e24\u6b21\uff0c\u5bb9\u91cf\u8bbe\u4e3a1\u5373\u53ef\uff0c\u4e0eS\uff0cT\u76f8\u8fde\u7684\u8fb9\u5176\u5b9e\u8bbe\u4e3a1\u4e5f\u591f\u4e86\u4e0d\u8fc7\u4e3a\u4e86\u9002\u5e94\u7b2c\u4e09\u95ee\uff0c\u672c\u5904\u8bbe\u4e3a$\\infty$\u3002\u6837\u4f8b\u5bf9\u5e94\u7684\u56fe\u5982\u4e0b\uff1a \n![](https://cdn.luogu.com.cn/upload/pic/33843.png)  \n\u4e0b\u9762\u8003\u8651\u7b2c\u4e09\u95ee\uff0c\u9996\u5148\u89e3\u91ca\u4e00\u4e0b\u95ee\u9898\uff1a**\u51fa\u9898\u4eba\u7684\u610f\u601d\u662f\u53d6\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u540c\u7684\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217**\uff0c\u4e0d\u7136\u6837\u4f8b\u90fd\u5f97\u8f93\u51fainf\uff08\u4e0d\u505c\u5730\u53d6\"3, 5\"\uff09\u3002  \n\u5f53\u7b2c\u4e00\u95ee\u7b54\u6848\u4e3a1,\u5373$dis_T = 0$\u65f6\uff0c\u7b54\u6848\u663e\u7136\u4e3an\u3002\u5426\u5219\u5c061i-1o\u7684\u8fb9\u4ee5\u53cani-no\u7684\u8fb9\u5bb9\u91cf\u6539\u4e3a$\\infty$\u540e\u539f\u56fe\u7684S-T\u6700\u5927\u6d41\u5373\u4e3a\u6240\u6c42\u3002\u6709\u5143\u7d20\u4e0d\u662f$x_1,x_n$\u7684\u5e8f\u5217\u663e\u7136\u5bf9\u5e94\u56fe\u4e2d\u7684\u4e00\u6761\u6d41\u91cf1\u7684\u589e\u5e7f\u8def\uff0c\u800c\u6240\u6709\u5143\u7d20\u90fd\u5c5e\u4e8e{$x_1,x_n$}\u7684\u5e8f\u5217\u7531\u4e8e\u8fb91o-ni\u5bb9\u91cf\u4e3a1\uff0c\u4e5f\u5bf9\u5e94\u4e86\u4e00\u6761\u6d41\u91cf1\u7684\u589e\u5e7f\u8def\u3002\u8fd9\u91cc\u6709\u4e2atrick\uff0c\u5c06\u82e5\u5e72\u8fb9\u5bb9\u91cf\u589e\u52a0\u540e\u53ea\u9700\u5728\u6b8b\u4f59\u7f51\u7edc\u4e0a\u7ee7\u7eed\u8dd1\u6700\u5927\u6d41\u5c31\u884c\u4e86\uff0c\u6240\u5f97\u6d41\u91cf\u52a0\u4e0a\u7b2c\u4e8c\u95ee\u7ed3\u679c\u5c31\u662f\u7b54\u6848\u3002\n## \u590d\u6742\u5ea6\n\u6700\u77ed\u8def\u4e2d\uff0c$|V| = n + 2, |E| = O(n^2)$,spfa\u590d\u6742\u5ea6$O(kn^2)$,\u56e0\u4e3a\u8be5\u56fe\u662f\u4e2aDAG\uff0c\u53ef\u4ee5\u901a\u8fc7dp\u8fbe\u5230$O(n^2)$.  \n\u6d41\u7f51\u7edc\u4e2d\uff0c$|V|,|E|$\u4e0e\u6700\u77ed\u8def\u7684\u56fe\u540c\u9636\uff0c\u56e0\u4e3a\u70b9\u6570\u4e0d\u591a\uff0cdinic\u6ca1\u6709\u95ee\u9898\u3002  \n~~\u6240\u4ee5\u5b9e\u9645\u4e0a\u4e0e\u697c\u4e0b\u51e0\u4f4d\u4e00\u6837~~\n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#include <vector>\n#include <utility>\n#include <string>\n#include <set>\n#define maxn 505\n#define maxv 1005\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> P;\nconst int inf = 0x3f3f3f3f;\nint n,a[maxn];\nstruct edge{\n\tint to,cap,cst,rev;//\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\uff0c\u628a\u4e24\u4e2a\u56fe\u5408\u5230\u4e00\u8d77\u4e86\uff0ccap->\u5bb9\u91cf\uff0ccst->\u82b1\u8d39\uff0crev->\u53cd\u5411\u8fb9\u3002\n\tbool zheng;//\u662f\u5426\u4e3a\u6b63\u5411\u8fb9\u3002\n};\nint dis[maxv];\nbool inque[maxv];\nvector <edge> adj[maxv];\nint lev[maxv],iter[maxv];\nvoid spfa(int s){\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[s] = 0;\n\tqueue <int> que;\n\tque.push(s);\n\tinque[s] = true;\n\twhile(!que.empty()){\n\t\tint u = que.front();que.pop();\n\t\tinque[u] = false;\n\t\tfor(int i=0;i<adj[u].size();i++){\n\t\t\tedge &e = adj[u][i];\n\t\t\tif(!e.zheng) continue;\n\t\t\tif(dis[u] + e.cst < dis[e.to]){\n\t\t\t\tdis[e.to] = dis[u] + e.cst;\n\t\t\t\tif(!inque[e.to]){\n\t\t\t\t\tinque[e.to] = true;\n\t\t\t\t\tque.push(e.to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid addedge(int u,int v,int c,int d){//\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u5bb9\u91cf\uff0c\u8d39\u7528\u3002\n\tadj[u].push_back((edge){v,c,d,adj[v].size(),true});\n\tadj[v].push_back((edge){u,0,-d,adj[u].size() - 1,false});\n}\n//------------------------------------Dinic--------------------------------------\nvoid bfs(int s){\n\tmemset(lev,0x3f,sizeof(lev));\n\tlev[s] = 0;\n\tqueue <int> que;\n\tque.push(s);\n\twhile(!que.empty()){\n\t\tint u = que.front();que.pop();\n\t\tfor(int i=0;i<adj[u].size();i++){\n\t\t\tedge &e = adj[u][i];\n\t\t\tif(e.cap && lev[u] + 1 < lev[e.to]){\n\t\t\t\tlev[e.to] = lev[u] + 1;\n\t\t\t\tque.push(e.to);\n\t\t\t}\n\t\t}\n\t}\n}\nint dfs(int u,int t,int f){\n\tif(u == t) return f;\n\tfor(int &i = iter[u];i<adj[u].size();i++){\n\t\tedge &e = adj[u][i];\n\t\tif(e.cap && lev[u] < lev[e.to]){\n\t\t\tint b = dfs(e.to,t,min(f,e.cap));\n\t\t\tif(b == 0) continue;\n\t\t\te.cap -= b;\n\t\t\tadj[e.to][e.rev].cap += b;\n\t\t\treturn b;\n\t\t}\n\t}\n\treturn 0;\n}\nint dinic(int s,int t){\n\tint res = 0;\n\twhile(true){\n\t\tbfs(s);\n\t\tif(lev[t] == inf) return res;\n\t\tmemset(iter,0,sizeof(iter));\n\t\twhile(true){\n\t\t\tint b = dfs(s,t,inf);\n\t\t\tif(b == 0) break;\n\t\t\tres += b;\n\t\t}\n\t}\n}\n//----------------------------------End of Dinic--------------------------------\nint main(){\n  scanf(\"%d\",&n);\n  for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    int S = 0,T = n * 2 + 1;\n\t//1 ... n: in\n\t//n+1 ... n+n: out.\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tif(a[j] >= a[i]) addedge(i + n,j,1,-1);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\taddedge(S,i,inf,0);\n\t\taddedge(i,i + n,1,0);\n\t\taddedge(i + n,T,inf,0);\n\t}\n\tspfa(S);\n\tfor(int i=S;i<=T;i++){\n\t\tfor(int j=0;j<adj[i].size();j++){\n\t\t\tedge &e = adj[i][j];\n\t\t\tif(e.zheng && dis[i] + e.cst > dis[e.to]){\n\t\t\t\te.cap = 0;//\u5220\u8fb9\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",-dis[T] + 1);\n\tint ans = dinic(S,T);\n\tprintf(\"%d\\n\",ans);\n\tif(dis[T] == 0){\n\t\tprintf(\"%d\\n\",ans);\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<adj[1].size();i++){\n\t\tedge &e = adj[1][i];\n\t\tif(e.zheng) e.cap = inf;//\u52a0\u6d41\u91cf\u3002\n\t}\n\tfor(int i=0;i<adj[n].size();i++){\n\t\tedge &e = adj[n][i];\n\t\tif(e.zheng) e.cap = inf;\n\t}\n\tans += dinic(S,T);\n\tprintf(\"%d\\n\",ans);\n  return 0;\n}\n```",
        "postTime": 1537594906,
        "uid": 53793,
        "name": "caeious",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "# \u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\n\n\u9898\u76ee:[\u81ea\u5df1\u5eb7](https://www.luogu.org/problem/P2766)\n\n## \u89e3\u6cd5:\u9898\u76ee\u4e2d\u6709\u4e09\u95ee\n### ->\u7b2c\u4e00\u95ee \n\u53ef\u4ee5\u901a\u8fc7$O(n^2)$\u7684dp\u6765\u6c42\u51fa lis\u7684\u6700\u5927\u957f\u5ea6\n### ->\u7b2c\u4e8c\u95ee \n\u9898\u76ee\u8981\u6211\u4eec\u6c42\u6ee1\u8db3 \u957f\u5ea6\u6700\u5927\u7684lis\u7684\u6570\u91cf    \n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9\u51fa\u73b0\u7684\u6bcf\u4e00\u7ec4lis\u4e2d\u7684\u70b9 \u5efa\u7acb\u8054\u7cfb    \n\u5728\u5b83\u4eec\u7ec4\u6210\u7684\u56fe\u4e2d \u8dd1\u4e00\u6b21\u7f51\u7edc\u6700\u5927\u6d41 \u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f   \n\u8fd9\u6bb5\u5e8f\u5217\u4e2d \u6ee1\u8db3lis\u957f\u5ea6\u6700\u5927\u7684\u6570\u91cf    \n\u65e2\u7136 \u8981\u5efa\u7acb\u8054\u7cfb \u81ea\u7136\u662f\u79bb\u4e0d\u5f00\u62c6\u70b9\u4e86!   \n\u6240\u4ee5 \u6211\u4eec\u5728\u5904\u7406\u6bcf\u4e2a\u70b9\u65f6 \u5148\u628a\u5b83\u548c\u5b83\u7684\u5bf9\u5e94\u70b9\u8fde\u5728\u4e00\u8d77   \n\u5f53\u6211\u4eec\u5904\u7406 \u7b2c$i$\u4e2a\u65f6 \u5e94\u4ece$1$\u5f00\u59cb\u679a\u4e3e\u76f4\u5230$j=i-1$   \n\u4ece\u4e2d\u627e\u51fa\u6ee1\u8db3 $a[j]<a[i]$ \u548c $f[j]+1=f[i]$ \u7684\u70b9   \n\u628a\u5b83\u4eec\u8fde\u8d77\u6765  \n(\u6ce8:\u662fi\u7684\u5b9e\u70b9\u8fdej\u7684\u865a\u70b9\n### ->\u7b2c\u4e09\u95ee \n\u9898\u76ee\u544a\u8bc9\u6211\u4eec $x~1$ \u548c $x~n$ \u53ef\u4ee5\u65e0\u9650\u7528   \n\u800c\u5728\u8be5\u9898\u7684\u7f51\u7edc\u4e2d \u6bcf\u4e2a\u8fb9\u7684\u6743\u503c\u53ef\u4ee5\u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u4f7f\u7528\u6b21\u6570  \n\u6240\u4ee5 \u6211\u4eec\u53ef\u4ee5\u628a$s$->$1$->$n$+$1$ , $n$->$n*2$ , $n*2$->$t$\u7684 \u8fb9\u6743\u8bbe\u4e3ainf   \n(\u6ce8:\u5bf9\u4e8e$w[n*2$ -> $t]=inf$ \u5f53\u4e14\u4ec5\u5f53 $f[n]=maxx$ \u65f6 \u624d\u6210\u7acb  \n \u89e3\u91ca: \u5982\u679c\u6700\u540e\u4e00\u4e2a\u70b9\u4e0d\u53c2\u4e0e\u6784\u6210\u8fd9\u6bb5\u5e8f\u5217\u957f\u5ea6\u6700\u5927\u7684lis \u90a3\u4e48\u5b83\u7684\u6570\u91cf\u4e0d\u5f71\u54cd\u7b54\u6848\u7684\u91cf)\n\n\u7efc\u4e0a:\u6211\u4eec\u53ef\u4ee5\u5206\u60c5\u51b5\u6765\u8fdb\u884c\u5efa\u8fb9,                \n\u4f9d\u6b21\u6c42\u51fa\u6bcf\u4e00\u95ee\u7684\u7b54\u6848,\u7136\u540e\u76f4\u63a5\u8f93\u51fa\u5373\u53ef  \n\u6700\u540e \u6709\u4e2a\u4f18\u5316\u7684\u5c0f\u65b9\u6cd5:   \n\u5728\u7b2c\u4e8c\u95ee\u6c42\u5b8c\u540e \u4e00\u4e9b\u8fb9\u7684\u6b63\u5411\u6743\u503c\u5df2\u7ecf\u53d8\u4e3a0 \u5bf9\u540e\u7eed\u65e0\u5f71\u54cd       \n\u6240\u4ee5 \u65e0\u9700\u91cd\u65b0\u5efa\u56fe \u76f4\u63a5\u628a\u90e8\u5206\u8fb9\u6743\u4fee\u6539\u540e          \n\u518d\u6b64\u57fa\u7840\u4e0a\u8dd1\u4e00\u8fb9\u6700\u5927\u6d41\u5373\u53ef $ans$ += $dinic()$\n\n**\u4ee3\u7801\u9171 OVO\u2193**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define N 250000\n#define v to[i]\n#define inf 0x7f7f7f7f\n\nint n,s,t,maxx;\nint a[N],f[N],dep[N];\nint from[N],to[N],head[N],w[N],nex[N],ecnt;\n\nvoid ae(int x,int y,int z){\n    from[ecnt]=x;\n    to[ecnt]=y;\n    w[ecnt]=z;\n    nex[ecnt]=head[x];\n    head[x]=ecnt++;\n}\n\nbool bfs(){\n    memset(dep,-1,sizeof(dep));\n    queue<int> q;\n    dep[s]=1;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];i!=-1;i=nex[i]){\n            if(dep[to[i]]==-1 and w[i]>0){\n                dep[to[i]]=dep[u]+1;\n                q.push(to[i]);\n            }\n        }\n    }\n    return dep[t]!=-1;\n}\n\nint dfs(int u,int low){\n    if(u==t)\n        return low;\n    int ret=low;\n    for(int i=head[u];i!=-1;i=nex[i]){\n        if(dep[v]==dep[u]+1 and w[i]>0){\n            int flow=dfs(v,min(ret,w[i]));\n            if(flow>0){\n                w[i]-=flow;\n                w[i^1]+=flow;\n            }\n            ret-=flow;\n            if(!ret)\n                break;\n        }\n    }\n    return low-ret;\n}\n\nint dinic(){\n    int res=0;\n    while(bfs()){\n        res+=dfs(s,inf);\n    }\n    return res;\n}\n\n//\u6c42lis\nvoid lis(){\n    maxx=1;\n    for(int i=2;i<=n;i++){\n        for(int j=1;j<i;j++){\n            if(a[j]<=a[i] and f[i]<f[j]+1){\n                f[i]=max(f[i],f[j]+1);\n                maxx=max(f[i],maxx);\n            }\n        }\n    }\n    printf(\"%d\\n\",maxx);\n}\n\nint main(){\n    memset(head,-1,sizeof(head));\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n        f[i]=1;\n    }\n    lis();\n    s=0,t=n*2+1;\n    for(int i=1;i<=n;i++){\n        ae(i,i+n,1);\n        ae(i+n,i,0);\n        if(f[i]==1){//\u5982\u679c\n            ae(s,i,1);\n            ae(i,s,0);\n        }\n        if(f[i]==maxx){\n            ae(i+n,t,1);\n            ae(t,i+n,0);\n        }\n        for(int j=1;j<i;j++){\n            if(a[i]>=a[j] and f[j]==f[i]-1){\n                ae(j+n,i,1);\n                ae(i,j+n,0);\n            }\n        }\n    }\n    //for(int i=0;i<=ecnt;i+=2)printf(\"%d %d %d\\n\",from[i],to[i],w[i]);\n    int ans=dinic();\n    printf(\"%d\\n\",ans);\n    ae(s,1,inf);\n    ae(1,s,0);\n    ae(n,n*2,inf);\n    ae(n*2,n,0);\n    ae(1,1+n,inf);\n    ae(1+n,1,0);\n    if(f[n]==maxx){\n        ae(n*2,t,inf);\n        ae(t,n*2,0);\n    }\n    ans+=dinic();\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1573089848,
        "uid": 58751,
        "name": "VanillaYuzume",
        "ccfLevel": 0,
        "title": "\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898"
    },
    {
        "content": "\u8fd9\u9053\u9898...\u4e00\u4e2a +1 \u5199\u5230\u62ec\u53f7\u91cc\u9762 WA \u4e86\u4e24\u6b21...\n\n\n\u7b2c\u4e00\u95ee\u5c31\u662f\u6c42\u4e2aLIS\uff0c nlogn \uff0c\u5f53\u7136 n^2 \u4e5f\u884c\uff0c\u8fd9\u65f6\u6ce8\u610f\u8981\u540c\u65f6\u6c42\u51fa\u4ee5\u6bcf\u4e2a\u70b9\u7ed3\u5c3e\u7684 LIS \u5e76\u8bb0\u5f55\u5728 f \u6570\u7ec4\u4e2d\uff0c\u8fd8\u6709\u8981\u8bb0\u5f55\u7b54\u6848 len \n\n\u7b2c\u4e8c\u95ee\u548c\u7b2c\u4e09\u95ee\u672c\u8d28\u76f8\u540c\uff0c\u7b2c\u4e09\u95ee\u5c31\u662f\u591a\u4e86\u51e0\u6761\u6d41\u91cf inf \u7684\u8fb9\n\n\u5bf9\u4e8e\u8fd9\u4e24\u95ee\u6211\u4eec\u8003\u8651\u5efa\u6a21\u7136\u540e\u8dd1\u7f51\u7edc\u6d41\uff1a\n\n>\u9996\u5148\u6e90\u70b9\u5411 f[i]=1 \u7684\u70b9 i \u8fde\u4e00\u6761 1 \u7684\u8fb9\n\n>\u6240\u6709 f[i]=len \u7684\u70b9 i+n \u5411 \u6c47\u70b9\u8fde\u4e00\u6761 1 \u7684\u8fb9\n\n>\u6240\u6709\u70b9 i \u5411 i+n  \u8fde\u4e00\u6761 1 \u7684\u8fb9\n\n\n\u7136\u540e \u8dd1\u7f51\u7edc\u6d41\uff0c\u6c42\u51fa\u7b2c\u4e8c\u95ee\u7684\u89e3\n\n\u6700\u540e\u6e90\u70b9\u5411 1 \u8fde inf \uff0c 1  \u5411  1+n  \u8fde inf \n\nn \u5411\u6c47\u70b9\u8fde n+n \uff0cn+n \u5411\u6c47\u70b9\u8fde inf\n\n\u518d\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\u5c31\u597d\u4e86\n\n\n```cpp\n//by Judge\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int inf=1e9+7;\nconst int M=1003;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} int n,S,T,top,len,pat=1,mf;\narr a,b,f,head,cur,d;\nstruct Edge{ int to,flow,next; }e[M<<3];\ninline void add(int u,int v,int w){\n\te[++pat]=(Edge){v,w,head[u]},head[u]=pat;\n\te[++pat]=(Edge){u,0,head[v]},head[v]=pat;\n} inline int Min(int x,int y){ return x<y?x:y; }\n#define v e[i].to\nqueue<int> q;\ninline bool bfs(){ queue<int> q;\n\tmemset(d,0,sizeof d),d[S]=1;\n\tfor(q.push(S);q.size();){\n\t\tint u=q.front(); q.pop();\n\t\tfor(int i=head[u];i;i=e[i].next)\n\t\t\tif(!d[v]&&e[i].flow){\n\t\t\t\tq.push(v),d[v]=d[u]+1;\n\t\t\t\tif(v==T) return 1;\n\t\t\t}\n\t} return 0;\n}\nint dinic(int u,int flow){\n\tif(u==T) return flow; int rest=flow,k;\n\tfor(int &i=cur[u];i&&rest;i=e[i].next)\n\t\tif(d[v]==d[u]+1&&e[i].flow){\n\t\t\tk=dinic(v,Min(rest,e[i].flow)),\n\t\t\te[i].flow-=k,e[i^1].flow+=k,rest-=k;\n\t\t} return flow-rest;\n}\n#undef v\ninline void get_LIS(){\n\tb[1]=a[1],f[1]=top=1;\n\tfor(int i=2;i<=n;++i){\n\t\tint k=upper_bound(b+1,b+1+top,a[i])-b;\n\t\tif(k>top) ++top; b[k]=a[i],f[i]=k;\n\t} printf(\"%d\\n\",len=top);\n}\ninline void init(){ S=n<<1|1,T=S+1;\n\tfor(int i=1;i<=n;++i) add(i,i+n,1);\n\tfor(int i=1;i<=n;++i) if(f[i]==1) add(S,i,1);\n\tfor(int i=1;i<=n;++i) if(f[i]==len) add(i+n,T,1);\n\tfor(int i=1;i<=n;++i) for(int j=1;j<i;++j)\n\t\tif(a[j]<=a[i]&&f[j]+1==f[i]) add(j+n,i,1);\n}\nint main(){ n=read();\n\tfor(int i=1;i<=n;++i) a[i]=read();\n\tget_LIS(),init();\n\tfor(;bfs();mf+=dinic(S,inf))\n\t\tmemcpy(cur,head,sizeof cur);\n\tprintf(\"%d\\n\",mf);\n\tadd(1,1+n,inf),add(S,1,inf);\n\tif(f[n]==len) add(n,n<<1,inf),add(n<<1,T,inf);\n\tfor(;bfs();mf+=dinic(S,inf))\n\t\tmemcpy(cur,head,sizeof cur);\n\treturn !printf(\"%d\\n\",mf);\n}\n```\n\n",
        "postTime": 1552388859,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "\u5177\u4f53\u5982\u4f55\u5efa\u56fe\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u53ea\u662f\u53cd\u8fc7\u6765\u4e86\u800c\u5df2\u3002\u4e0d\u8fc7\u6ca1\u6709\u4eba\u544a\u8bc9\u6211\u4eec\u4e3a\u4ec0\u4e48\u8fd9\u662f\u5bf9\u7684\u3002\n\n\u62c6\u70b9\u5efa\u56fe\uff1a\u4fdd\u8bc1\u6bcf\u4e2a\u6570\u5b57\u53ea\u7528\u4e00\u6b21\uff0c\u8fd9\u662f\u5957\u8def\u3002\u7136\u540e\u5176\u4ed6\u8fb9\u5c31\u662f\u8f6c\u79fb\u3002\n\n\u6211\u4eec\u5f97\u77e5\u9053\u5b83\uff08\u8f6c\u79fb\uff09\u7684\u6b63\u786e\u6027\u3002\u5bb9\u6613\u5206\u6790\uff0c\u5f53\u8be2\u95ee\u7684\u4e0d\u662f\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u65f6\u8be5\u65b9\u6cd5\u5c31\u662f\u9519\u7684\u3002\u56e0\u4e3a\u5f00\u59cb\u70b9\u7684f\u4e0d\u4e00\u5b9a\u8981\u7b49\u4e8e1\uff0c\u8f6c\u79fb\u4e5f\u4e0d\u4e00\u5b9a\u8981\u4ecef\u4e25\u683c\u5c0f\u4e8e1\u7684\u8282\u70b9\u6765\u3002\u90a3\u4e48\u6211\u4eec\u53cd\u7740\u63a8\u4e00\u4e0b\uff0c\u5c31\u5f97\u77e5\u8be5\u95ee\u9898\u6211\u4eec\u7684\u89e3\u6cd5\u6b63\u786e\u4e86\u3002\n\n~~\uff08\u4ee5\u4e0a\u8bc1\u660e\u4e3a\u80e1\u626f\uff09~~ \u5176\u5b9e\u6211\u4eec\u901a\u8fc7\u4ee5\u4e0a\u601d\u8def\u5927\u81f4\u80fd\u77e5\u9053\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u5bf9\u7684\u3002\n\n\u7136\u540e\u5927\u80c6\u5199\u4e00\u53d1\u5c31A\u4e86\uff08\u7f51\u7edc\u6d41\u771f\u662f\u7384\u5b66\uff09\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=1003;\nconst int M=N*N;\nconst int INF=1e9+7;\n\nint a[N],f[N];\nint s,t;\nint cnt=1,l[N],e[M],x[M],w[M];\nint hd,tl,d[N],q[N],r[N];\n\nvoid pshe(int u,int v,int c){\n    ++cnt;x[cnt]=l[u];l[u]=cnt;e[cnt]=v;w[cnt]=c;\n    ++cnt;x[cnt]=l[v];l[v]=cnt;e[cnt]=u;w[cnt]=0;\n}\n\nbool bfs(){\n    memset(d,0,sizeof(d));\n    hd=0;tl=1;q[0]=s;d[s]=1;\n    while(hd!=tl){\n        int v=q[hd];++hd;\n        for(int i=l[v];i;i=x[i])\n            if(w[i]&&!d[e[i]]){\n                q[tl]=e[i];++tl;\n                d[e[i]]=d[v]+1;\n            }\n    }\n    return d[t];\n}\n\nint dfs(int v,int c){\n    if(v==t)return c;\n    int t,p=0;\n    for(int i=r[v];i;i=x[i])\n        if(w[i]&&d[e[i]]==d[v]+1){\n            t=dfs(e[i],min(c-p,w[i]));\n            w[i]-=t;if(w[i])r[v]=i;w[i^1]+=t;\n            p+=t;if(p==c)return c;\n        }\n    if(p==0)d[v]=0;\n    return p;\n}\n\nint mxflw(){//\u6c42\u6700\u5927\u6d41\n    int ans=0;\n    while(bfs()){\n        memcpy(r,l,sizeof(l));\n        ans+=dfs(s,INF);\n    }\n    return ans;\n}\n\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    a[n+1]=INF;\n    for(i=1;i<=n+1;i++)\n        for(j=0;j<i;j++)\n            if(a[i]>=a[j])\n                f[i]=max(f[i],f[j]+1);\n    printf(\"%d\\n\",f[n+1]-1);\n    s=2*n+1;t=s+1;\n    for(i=1;i<=n;i++){\n        pshe(i,i+n,1);\n        if(f[i]==1)pshe(s,i,1);\n        if(f[i]==f[n+1]-1)pshe(i+n,t,1);\n        for(j=1;j<i;j++)\n            if(a[i]>=a[j]&&f[j]==f[i]-1)\n                pshe(j+n,i,1);\n    }\n    int p=mxflw();\n    printf(\"%d\\n\",p);\n    pshe(1,1+n,INF);\n    pshe(n,2*n,INF);\n    pshe(s,1,INF);\n    if(f[n]==f[n+1]-1)pshe(2*n,t,INF);\n    printf(\"%d\",p+mxflw());\n    //\u52a0\u8fb9\u540e\u53ea\u8981\u518d\u8fdb\u884c\u589e\u5e7f\u5c31\u597d\u4e86\uff0c\u4e0d\u7528\u91cd\u65b0\u8dd1\n    return 0;\n}\n```\n\n\u9047\u5230\u8fd9\u79cd\u660e\u663e\u7684\u7f51\u7edc\u6d41\u9898 \u5efa\u56fe\u7684\u7ec6\u8282\u5f88\u91cd\u8981\u3002",
        "postTime": 1551582487,
        "uid": 41425,
        "name": "wanghaoyu1008",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "## \u5f88\u4e0d\u5f00\u5fc3\u5462\uff0c\u660e\u660e\u6709~~\u4e00\u70b9~~\u601d\u8def,\u5374\u8fd8\u662f\u6ca1\u5199\u51fa\u6765\u554aQAQ\n\n\u5148\u6765\u770b\u9898\u5427\uff1a\n\n\u7b2c\u4e00\u95ee\u660e\u663e\u5f88\u597d\u505a\uff0c\u7528\u4e00\u4e2a\u666e\u901a\u7684DP\u5c31\u53ef\u4ee5\u641e\u5b9a\u4e86\n\n\u4f46\u662f\uff1a**\u91cd\u70b9\u6765\u4e86**\uff0c\u8fd9\u4e2aDP\u51fa\u6765\u7684$f[i]$\u6570\u7ec4\u5bf9\u540e\u9762\u5f88\u6709\u7528\u5462\n\n\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7TA\u6765\u786e\u5b9a\u51fa\u6211\u4eec\u8fde\u8fb9\u7684\u65b9\u5f0f\uff0c\u8fd9\u4e00\u70b9\u5728\u540e\u9762\u4f1a\u5177\u4f53\u8bb2\u5230\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6211\u4eec\u7f51\u7edc\u6700\u5927\u6d41\u559c\u95fb\u4e50\u89c1\u7684**\u62c6\u70b9\u5927\u6cd5**\u60f9\n\n### \u62c6\u70b9\u5927\u6cd5\u543c\u54c7\n\n\u5c06\u6bcf\u4e2a\u6570\u62c6\u6210\u4e00\u4e2a\u5165\u70b9\uff0c\u4e00\u4e2a\u51fa\u70b9\uff08\u5bf9\u4e8e\u7b2c$i$\u4e2a\u70b9\uff0c\u6211\u4eec\u8bbe\u5165\u70b9\u4e3a$i.x$,\u51fa\u70b9\u4e3a$i.y$\uff09\n\n\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u4e2a\u6570\u53ea\u7528\u4e00\u6b21\uff08\u9488\u5bf9\u7b2c\u4e8c\u95ee\uff09\u6211\u4eec\u5c06$i.x$\u4e0e$i.y$\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\n\n\u627e\u5230\u6240\u6709\u53ea\u80fd\u505a\u5b50\u5e8f\u5217\u5f00\u5934\u7684\u6570\uff08\u5373$f[i]$==1\uff09\u5c06$S$\u4e0e$i.x$\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\n\n\u627e\u5230\u6240\u6709\u505a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\u7ed3\u5c3e\u7684\u6570\uff08\u5373$f[i]$==ans1\uff09\u5c06$i.y$\u4e0e$T$\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\n\n\u7136\u540e\u8dd1\u4e00\u904d\u7c7b\u4f3c\u4e8eDP\u7684\u8fc7\u7a0b\uff0c\u5c06\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\u7684\u6570\u6328\u4e2a\u8fde\u8d77\u6765\uff0c\u518d\u505a\u4e00\u904d\u7f51\u7edc\u6700\u5927\u6d41\u5c31\u641e\u5b9a\u4e86\u7b2c\u4e8c\u95ee\n\n\u81f3\u4e8e\u7b2c\u4e09\u95ee\uff0c\u56e0\u4e3a$X_1$\u4e0e$X_n$\u53ef\u4ee5\u4f7f\u7528\u65e0\u9650\u6b21\n\n\u6211\u4eec\u53ef\u4ee5\u5c06$X_1$\u4e0e$X_n$\u5185\u90e8\u7684\u8fb9\uff08\u5373\u5bf9\u4e8e\u7b2c$i$\u4e2a\u70b9\uff0c$i.x$\u4e0e$i.y$\u8fde\u7684\u8fb9\uff09\u6d41\u91cf\u5efa\u4e3a$INF$\uff0c\u5c06$S$\u4e0e$X_1.x$\u7684\u8fb9\u6d41\u91cf\u6539\u4e3a$INF$\uff0c\u5c06$X_n.y$\u4e0e$T$\u7684\u8fb9\u6d41\u91cf\u6539\u4e3a$INF$\n\n\u518d\u8dd1\u6700\u5927\u6d41\uff0c\u5e76\u5c06\u7b54\u6848\u52a0\u5728ans2\u4e0a\u5c31\u662f\u7b2c\u4e09\u95ee\u7684\u7b54\u6848\u5566\n\n\u4e0a\u4ee3\u7801QAQ\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint head[250001],num_edge=-1,s,t,n;\nint a[501];\nstruct Edge\n{\n    int next,to,dis;\n}edge[250001];\nvoid push(int from,int to,int dis)\n{\n    edge[++num_edge].next=head[from];\n    edge[num_edge].to=to;\n    edge[num_edge].dis=dis;\n    head[from]=num_edge;\n}\nvoid add(int u,int v,int val){\n    push(u,v,val);\n    push(v,u,0);\n}\nint d[250001],f[250001],cur[250001];\ninline bool bfs()\n{\n    memset(d,0,sizeof(d));\n    d[s]=1;\n    queue<int> q;\n    q.push(s);\n    while(!q.empty())\n    {\n        int x=q.front();\n\t\tq.pop();\n        for(int i=head[x];i!=-1;i=edge[i].next)\n        {\n            int y=edge[i].to;\n            if(!d[y]&&edge[i].dis)\n            {\n                d[y]=d[x]+1;\n                q.push(y);\n            }\n        }\n    }\n    if(!d[t]) return 0;\n    else return 1;\n}\nint dfs(int pos,int dis)\n{\n\tif(pos==t) return dis;\n\tfor(int i=cur[pos];i!=-1;i=edge[i].next)\n\t  if(d[edge[i].to]==d[pos]+1&&edge[i].dis>0)\n\t  {\n\t  \tint data=dfs(edge[i].to,min(dis,edge[i].dis));\n\t  \tif(data>0)\n\t  \t{\n\t  \t\tedge[i].dis-=data;\n\t  \t\tedge[i^1].dis+=data;\n\t  \t\tif(edge[i].dis) cur[pos]=i;\n\t  \t\treturn data;\n\t\t}\n\t  }\n\treturn 0;\n}\ninline int Dinic()\n{\n\tint ans=0;\n\twhile(bfs())\n\t{\n\t\tmemcpy(cur,head,sizeof(cur));\n\t\twhile(int data=dfs(s,0x3f3f3f3f))\n\t      ans+=data;\n\t}\n\treturn ans;\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++)\n      cin>>a[i];\n    for(int i=1;i<=n;i++)\n      f[i]=1;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<i;j++)\n        if(a[j]<=a[i])\n          f[i]=max(f[i],f[j]+1);\n    int ans1=0;\n    for(int i=1;i<=n;i++)\n      ans1=max(ans1,f[i]);\n    cout<<ans1<<endl;\n    s=0;\n    t=n+n+1;\n\tmemset(head,-1,sizeof(head));\n    for(int i=1;i<=n;i++)\n      add(i,i+n,1);\n    for(int i=1;i<=n;i++)\n      if(f[i]==1) add(s,i,1);\n    for(int i=1;i<=n;i++)\n      if(f[i]==ans1) add(i+n,t,1);\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<i;j++)\n        if(a[j]<=a[i]&&f[j]==f[i]-1)\n\t\t  add(j+n,i,1);\n\tint ans2=Dinic();\n\tcout<<ans2<<endl;\n\tadd(1,1+n,0x3f3f3f3f);\n\tadd(s,1,0x3f3f3f3f);\n\tif(f[n]==ans1) add(n,n+n,0x3f3f3f3f),add(n+n,t,0x3f3f3f3f);\n\tans2+=Dinic();\n\tcout<<ans2;\n}\n```\n",
        "postTime": 1539526813,
        "uid": 92496,
        "name": "\u6587\u6b66\u6b66\u667a\u969c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long \n#define inf 0x3f3f3f3f\nconst int o=10024,oo=100024;\nint n,m,cnt=1,cs,ct,ans1,ans2,ans3;\nint a[o],t[o],f[o],h[o],dep[o];\nstruct cx{\n    int nxt,to,val;\n}p[(oo<<1)+1024],g[(oo<<1)+1024];\nint read()\n{\n    int x=0,f=1; char ch=getchar();\n    while(!isdigit(ch)) f=(ch=='-'?-1:1),ch=getchar();\n    while(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return x*f;\n}\ninline void add(int x,int y,int z)\n{\n\tp[++cnt].nxt=h[x];\n\tp[cnt].to=y;\n\tp[cnt].val=z;\n\th[x]=cnt;\n}\nbool bfs()\n{\n\tmemset(dep,0,sizeof dep); dep[cs]=1;\n\tqueue<int> q; q.push(cs);\n\twhile(q.size())\n\t{\n\t\tint x=q.front(); q.pop();\n\t\tfor(int i=h[x];i;i=p[i].nxt)\n\t\t{\n\t\t\tint u=p[i].to;\n\t\t\tif(!dep[u]&&p[i].val>0)\n\t\t\t{\n\t\t\t\tdep[u]=dep[x]+1;\n\t\t\t\tif(u==ct) return true;\n\t\t\t\tq.push(u);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint dfs(int x,int flow)\n//\u4ece\u5927\u795e\u90a3\u91cc\u5b66\u7684dfs\uff0c\u5feb\u5f97\u5f88\n{\n\tif(x==ct||flow==0) return flow;\n\tint res=0;\n\tfor(int i=h[x];i;i=p[i].nxt)\n\t{\n\t\tint u=p[i].to;\n\t\tif(dep[u]>dep[x]&&p[i].val>0)\n\t\t{\n\t\t\tint f=dfs(u,min(flow,p[i].val));\n\t\t\tif(f>0)\n\t\t\t{\n\t\t\t\tres+=f;\n\t\t\t\tflow-=f;\n\t\t\t\tp[i].val-=f;\n\t\t\t\tp[i^1].val+=f;\n\t\t\t}\n\t\t}\n\t}\n\tif(res==0) dep[x]=0;\n\treturn res;\n}\nvoid Dinic_first()//\u57fa\u672c\u5957\u8def\n{\n\twhile(bfs())\n\t{\n\t\twhile(int d=dfs(cs,inf))\n\t\tans2+=d;\n\t}\n\tprintf(\"%d\\n\",ans2);\n\treturn ;\n}\nvoid Dinic_second()//\u4e00\u6837\u7684\u5957\u8def\n{\n\twhile(bfs())\n\t{\n\t\twhile(int d=dfs(cs,inf))\n\t\tans3+=d;\n\t}\n\tprintf(\"%d\\n\",ans3);\n\treturn ;\n}\nvoid work()//\u81ea\u5df1\u753b\u56fe\u53ef\u4ee5\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd9\u6837\u53d8\u5316\n{\n\tfor(int i=h[1];i;i=p[i].nxt) \n\t{\n\t\tint u=p[i].to;\n\t\tif(u==1+n) p[i].val=inf;\n\t\telse p[i^1].val=inf;\n\t}\n\tfor(int i=h[2*n];i;i=p[i].nxt)\n\t{\n\t\tint u=p[i].to;\n\t\tif(u==ct) p[i].val=inf;\n\t\telse p[i^1].val=inf;\n\t } \n}\nvoid print()//\u8c03\u8bd5\u65f6\u7528\u7684\uff0c\u6ca1\u6709\u5173\u7cfb\n{\n\tfor(int i=1;i<=2*n;i++)\n\t{\n\t\tcout<<i<<\"\u8fde\u5230\uff1a\"<<endl; \n\t\tfor(int j=h[i];j;j=p[j].nxt)\n\t\t{\n\t\t\tprintf(\"%d %d\\n\",p[j].to,p[j].val);\n\t\t}\n\t}\n}\n/*\u9898\u76ee\u610f\u601d\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\n1\uff1a\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n2\uff1a\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff08\u6bcf\u4e2a\u6570\u53ea\u53ef\u4ee5\u7528\u4e00\u6b21\uff09\n3\uff1a\u5982\u679ca1\u548can\u53ef\u4ee5\u7528\u65e0\u6570\u6b21\uff0c\u90a3\u4e48\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u6570\u5217\u7684\n\u4e2a\u6570\u4e3a\u591a\u5c11\u4e2a\n\u5148\u8003\u8651\u7b2c\u4e00\u95ee\uff1a\u539f\u5148\u53ef\u4ee5\u7528O(n)\u89e3\u51b3\uff0c\u4f46\u662f\u7b2c\u4e8c\u548c\u7b2c\u4e09\u6587\n\u5c31\u4e0d\u597d\u89e3\u51b3\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0cn<=500,\u8fd9\u4e48\n\u5c0f\uff0c\u4e0d\u5f97\u4e0d\u8bf4 nice!\uff0c\u7acb\u523b\u6c42\u51faans1\u3002\n\u7136\u540e\u60f3\u60f3\u600e\u4e48\u8dd1\u7f51\u7edc\u6d41\u3002\u3002\n\u9898\u76ee\u8981\u6c42\u7684\u4e0d\u5c31\u662f\u957f\u5ea6\u4e3aans1\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u5230\u6bcf\u4e00\u4e2a\u6570\u65f6\u5019\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n\u7136\u540e\u7528\u957f\u5ea6\u628a\u6bcf\u4e00\u4e2a\u5173\u7cfb\u90fd\u8fde\u8d77\u6765\uff0c\u7136\u540e\u8dd1\u7f51\u7edc\u6d41\uff0c\u4e0d\u5c31\u662f\u53ef\u4ee5\u6c42\u7684\u4e86\u561b\n\u7136\u540e\u4e0a\u4ee3\u7801\uff0c\u6ce8\u91ca\u5728\u4ee3\u7801\u4e2d~~~~~\n*/\nint main()\n{\n    n=read(); cs=2*n+1; ct=cs+1;\n    for(int i=1;i<=n;i++) a[i]=read();\n    for(int i=1;i<=n;i++) f[i]=1;\n    for(int i=1;i<=n;i++)\n    {\n    \tfor(int j=1;j<i;j++)\n    \t{\n    \t\tif(a[i]>=a[j])\n    \t\t\tf[i]=max(f[i],f[j]+1);\n\t\t}\n\t\tans1=max(ans1,f[i]);\n\t}\n\tprintf(\"%d\\n\",ans1);\n    //\u5230\u8fd9\u91cc\u5e94\u8be5\u90fd\u6ca1\u6709\u4ec0\u4e48\u597d\u89e3\u91ca\u7684\u5427\n\tfor(int i=1;i<=n;i++) add(i,i+n,1),add(i+n,i,0);\n    //\u6bcf\u4e2a\u6570\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u4e00\u5206\u4e3a\u4e8c\uff0c\u4ece\u4e0a\u5411\u4e0b\u8fde1\n\tfor(int i=1;i<=n;i++)\n\t\tif(f[i]==1) add(cs,i,1),add(i,cs,0);\n    //\u957f\u5ea6\u4e3a1\u7684\u548c\u8d85\u7ea7\u6e90\u70b9\u8fde\u8d77\u6765\n\tfor(int i=1;i<=n;i++)\n\t\tif(f[i]==ans1) add(i+n,ct,1),add(ct,i+n,0);\n    //\u540c\u7406\uff0c\u957f\u5ea6\u4e3aans1\u7684\u548c\u8d85\u7ea7\u6c47\u70b9\u8fde\u8d77\u6765\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t{\n        \t//\u6bcf\u4e2a\u6570\u5411\u540e\u627e\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u5373\u53ef\u4ee5\u63a5\u5728\u5f53\u524d\u6570\u540e\u9762\n\t\t\tif(a[j]>=a[i]&&f[j]==f[i]+1)\n\t\t\t{\n\t\t\t\tadd(i+n,j,1);\n\t\t\t\tadd(j,i+n,0);\n\t\t\t}\n\t\t}\n\t}\n    //print();\n\tfor(int i=1;i<=cnt;i++) g[i]=p[i];\n    //\u628a\u539f\u5148\u7684\u56fe\u590d\u5236\u4e00\u904d\n\tDinic_first();\n\tfor(int i=1;i<=cnt;i++) p[i]=g[i];\n    //\u590d\u5236\u56de\u6765\n\twork();//\u6539\u53d8a1\u548can\u8fde\u5f97\u8fb9\uff0c\u81ea\u5df1\u753b\u56fe\u53ef\u4ee5\u66f4\u6e05\u695a\n    //print();\n\tDinic_second();\n    return 0;\n}\n```",
        "postTime": 1532399839,
        "uid": 70862,
        "name": "\u98ce\u706b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "\u697c\u4e0b\u8bf4\u7684\u5f88\u660e\u767d\u4e86\uff0c\u5c31\u662f\u6709\u4e00\u70b9 **\u4ee3\u7801\u4e0e\u89e3\u91ca\u4e0d\u7b26**  \u6211\u6309\u7167\u89e3\u91ca\u91cd\u65b0\u5199\u4e86\u4e00\u904d\u4ee3\u7801  \u5927\u5bb6\u53ef\u4ee5\u53c2\u7167\u6211\u7684\uff08\u4e11\u964b\uff09\u4ee3\u7801\u53bb\u770b\u4e0b\u9762\u7684\u9898\u89e3\n\n\n\n\n```cpp\n#include<cstdlib>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<queue> \nusing namespace std;\nint n;\nint q[100005],f[100005],a[505];\nint s=0,t=0;//super begin & end \nint cnt=-1; \nstruct node\n{\n       int to,w,nex;\n}e[100000];\nint head[100005]; \nvoid add(int x,int y,int w)\n{\n      e[++cnt].to=y;\n     e[cnt].w=w;\n     e[cnt].nex=head[x];\n     head[x]=cnt;\n     e[++cnt].to=x;\n     e[cnt].w=0;\n     e[cnt].nex=head[y];\n     head[y]=cnt; \n}\nint d[100005];  \nbool bfs(int x,int y)\n{\n     int h,t;\n     h=t=1;\n     memset(q,0,sizeof(q)); \n     memset(d,-1,sizeof(d)); \n     d[x]=0; \n     q[h]=x;\n     while(h<=t)\n     {\n                  int u=q[h++];\n                for(int i=head[u];i!=-1;i=e[i].nex)\n                {\n                         int v=e[i].to;\n                         if(d[v]==-1&&e[i].w>0)\n                         {\n                              d[v]=d[u]+1;\n                              q[++t]=v;\n                         }\n                }\n     }\n     return d[y]!=-1;\n} \nint dfs(int x,int w,int y)\n{\n    if(x==y||w==0)return w;\n    int f=0;\n    for(int i=head[x];i!=-1;i=e[i].nex)\n    {\n             int v=e[i].to; \n             if(d[v]==d[x]+1&&e[i].w>0)\n             {\n                      int flow=dfs(v,min(w-f,e[i].w),y);\n                    e[i].w-=flow;\n                    e[i^1].w+=flow;\n                    f+=flow;\n                    if(f==w)break;\n             }\n    }\n    return f;\n}\nint ans=0;\nint dinic(int s,int t)\n{\n     while(bfs(s,t))\n     {\n              ans+=dfs(s,1e9,t); \n     } \n     return ans;\n} \nint main()\n{\n     scanf(\"%d\",&n);\n     for(int i=1;i<=n;++i)\n     {\n             scanf(\"%d\",&a[i]);\n     }\n     int v=0;\n     memset(head,-1,sizeof(head)); \n     for(int i=n;i>=1;--i)\n     {f[i]=1; \n        for(int j=n;j>i;--j)\n        {\n               if(a[i]<=a[j])\n               f[i]=max(f[j]+1,f[i]);\n       } \n     } \n     for(int i=1;i<=n;++i)\n     v=max(f[i],v); \n     t=2*n+1;\n     printf(\"%d\\n\",v);\n     for(int i=1;i<=n;++i)\n     {\n                 if(f[i]==v)\n                 add(s,i,1);\n               if(f[i]==1)\n                 add(n+i,t,1); \n                 add(i,n+i,1); \n     }\n     for(int i=1;i<=n;++i)\n     for(int j=1;j<i;j++)\n     {\n               if(f[j]-1==f[i]&&a[j]<=a[i])\n               {add(j+n,i,1);} \n     }\n     ans=0;\n    printf(\"%d\\n\",dinic(s,t)); \n     if(f[1]==v)//\u8fd9\u91cc\u5f88\u91cd\u8981\uff0c\u6211\u8c03\u4e86\u5f88\u4e45\uff0c\u56e0\u4e3a\u8981\u89c2\u5bdf\u8fd9\u4e2a\u70b9\u80fd\u4e0d\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u8d77\u70b9\n     {add(s,1,1e9); add(1,n+1,1e9);} \n     add(n+n,t,1e9),add(n,n+n,1e9); \n     printf(\"%d\\n\",dinic(s,t)); \n    return 0;\n}//\u8fd8\u6709\u5c31\u662f\u8fd9\u9898\u6c42\u7684\u662f\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u9898\u76ee\u6709\u51fa\u5165\uff0c\u8fd8\u8bf7\u5927\u5bb6\u4ed4\u7ec6\n```",
        "postTime": 1503996701,
        "uid": 25438,
        "name": "\u5927\u5955\u54e5",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "\u770b\u4e86\u534a\u5929\u6ca1\u770b\u5230\u6765\u81ea\u7eafek\u5927\u6cd5\u7684\u9898\u89e3\n\n\u6709\u70b9\u96be\u53d7\n\n\u8fd9\u9053\u9898\u5173\u4e8e\u7f51\u7edc\u6d41\u7684\u601d\u8def\u5176\u4ed6\u5927\u4f6c\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\n\n\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0~~\u4e0d\u7136\u4f60\u4eec\u53c8\u8be5\u8bf4\u6211\u662f\u6284\u7684\u4e86~~\n\n\u5bf9\u4e8eek\u5927\u6cd5\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86emm\n\n\u62c6\u70b9\u7684\u8bdd\u53ef\u4ee5\u8003\u86511\u4e3a\u6e90\u70b9\uff0c2*i\u548c2*i+1\u4e3ai\u62c6\u51fa\u6765\u7684\u4e24\u4e2a\u70b9\uff0c2*n+2\u4e3a\u6c47\u70b9\n\n\u81f3\u4e8eek\u4e0d\u61c2\u7684\u53ef\u4ee5\u51fa\u95e8\u5de6\u8f6c\u627e\u5ea6\u5a18\u4e86\n\n\u5f3a\u8c03\u6700\u540e\u52a0\u8fb9\u7684\u65f6\u5019\u8981\u5224\u65ad\u6700\u540e\u4e00\u4f4d\u662f\u4e0d\u662f\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u7ed3\u5c3e\uff0c\u518d\u52a0\u8fb9\u6743\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define inf 1000000001\nusing namespace std;\nint n,a[5001],s,t,g[5001],pre[5001],w[5001][5001];\nbool exi[5001];\nbool bfs()\n{\n\tqueue<int> q;\n\tmemset(exi,0,sizeof exi);\n\tmemset(pre,-1,sizeof pre);\n\tq.push(s);\n\texi[s]=1;\n\tpre[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint p=q.front();\n\t\tq.pop();\n\t\tfor(int i=1;i<=t;i++)\n\t\t{\n\t\t\tif(!exi[i]&&w[p][i]>0)\n\t\t\t{\n\t\t\t\texi[i]=1;\n\t\t\t\tpre[i]=p;\n\t\t\t\tif(i==t) return 1;\n\t\t\t\tq.push(i);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint ek()\n{\n\tint flow=0,d=9999999;\n\twhile(bfs())\n\t{\n\t\tfor(int i=t;i!=s;i=pre[i])\n\t\td=(d>w[pre[i]][i])?w[pre[i]][i]:d;\n\t\tfor(int i=t;i!=s;i=pre[i])\n\t\t{\n\t\t\tw[pre[i]][i]-=d;\n\t\t\tw[i][pre[i]]+=d;\n\t\t}\n\t\tflow+=d;\n\t}\n\treturn flow;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tif(n==1)\n\t{\n\t\tprintf(\"1\\n1\\n1\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint maxnnnnn=-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tg[i]=1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<i;j++)\n\t\t{\n\t\t\tif(a[j]<=a[i])\n\t\t\t{\n\t\t\t\tg[i]=max(g[i],g[j]+1);\n\t\t\t\tmaxnnnnn=max(maxnnnnn,g[i]);\n\t\t\t}\n\t\t}\n\t}\n\tif(maxnnnnn!=-1)\n\tprintf(\"%d\",maxnnnnn);\n\telse\n\t{\n\t\tprintf(\"1\\n%d\\n%d\",n,n);\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tw[i*2][i*2+1]=1;\n\t}\n\ts=1,t=n*2+2;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(g[i]==1)\n\t\t{\n\t\t\tw[s][2*i]=1;\n\t\t}\n\t\tif(g[i]==maxnnnnn)\n\t\t{\n\t\t\tw[2*i+1][t]=1;\n\t\t}\n\t\tfor(int j=1;j<i;j++)\n\t\t{\n\t\t\tif(a[j]<=a[i]&&g[i]==g[j]+1)\n\t\t\t{\n\t\t\t\tw[2*j+1][2*i]=1;\n\t\t\t}\n\t\t}\n\t}\n\tint ff;\n\tprintf(\"\\n%d\",ff=ek());\n\tw[1][2]=inf;\n\tw[2][3]=inf;\n\tif(g[n]==maxnnnnn)\n\tw[2*n][2*n+1]=inf,w[2*n+1][2*n+2]=inf;\n\tprintf(\"\\n%d\",ff+ek());\n} \n```",
        "postTime": 1542200668,
        "uid": 82973,
        "name": "\u5f80\u4e8b\u4e00\u676f\u9152",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "\u7b2c1\u95ee\u662f\u7b80\u5355\u7684\u52a8\u6001\u89c4\u5212\uff0c\u7b2c2\uff0c3\u95ee\u8003\u8651\u7528\u7f51\u7edc\u6d41\u89e3\u51b3\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u51fa\u8fd9\u6837\u4e00\u4e2a\u6a21\u578b\uff1a\u628a\u540e\u9762\u8f83\u5927\u7684\u6570\u548c\u524d\u9762\u8f83\u5c0f\u7684\u6570\u8fde\u8fb9\uff0c\u7136\u540e\u9488\u5bf9\u6bcf\u4e2a\u957f\u5ea6\u4e3as\u7684\u5e8f\u5217\u7b2c\u4e00\u4e2a\u6570\u4e0e\u6c47\u70b9\u8fde\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u4e0e\u6e90\u70b9\u8fde\n\n\u7136\u540e\u8dd1\u6700\u5927\u6d41\u5c31\u884c\u4e86\n\n\u540e\u9762\u8f83\u5927\u7684\u6570\u548c\u524d\u9762\u8f83\u5c0f\u7684\u6570\u8fde\u8fb9\uff0c\u53ef\u4ee5dp\u7684\u65f6\u5019\u987a\u5e26\u89e3\u51b3\n\n\u4e3b\u8981\u662f\u627e\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u6570\u548c\u6700\u540e\u4e00\u4e2a\u6570\n\n\u6240\u4ee5\u6211\u4eec\u4e24\u6b21dp\uff1a\u7b2c\u4e00\u6b21\u5904\u7406\u4ece\u6570i\u5411\u524d\u6700\u957f\u7684\u975e\u964d\u5b50\u5e8f\u5217\uff08\u5373f[i]\uff09\uff0c\u7b2c\u4e8c\u6b21\u5904\u7406\u4ece\u6570i\u5411\u540e\u6700\u957f\u7684\u975e\u964d\u5b50\u5e8f\u5217\uff08\u5373g[i]\uff09\n\n\u7136\u540e\u82e5f[i]=s\uff0c\u6e90\u70b9\u4e0ei\u8fde\n\n\u82e5g[i]=s\uff0c\u6c47\u70b9\u4e0ei\u8fde\n\n\u7b2c2\u95ee\u8fde\u8fb9\u5bb9\u91cf\u90fd\u4e3a1\uff0c\u7b2c3\u95ee\u5728\u7b2c\u4e8c\u95ee\u57fa\u7840\u4e0a\u628a\u6e90\u70b9\u4e0e\u6700\u540e\u4e00\u4e2a\u6570\u3001\u7b2c\u4e00\u4e2a\u6570\u4e0e\u6c47\u70b9\u8fde\u8fb9\u5bb9\u91cf\u6539\u4e3ainf\uff08\u6211\u4ee3\u7801\u91cc\u91cd\u5efa\u4e86\u8fb9\uff09\n\n\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\n\n\u6ce8\u610fs\u53ef\u80fd\u4e3a1\uff0c\u9700\u8981\u7279\u5224\n\n\u4ee3\u7801\uff1a\n```cpp\n# include<iostream>\n# include<cstring>\n# include<cstdio>\n# include<queue>\nusing namespace std;\nconst int MAX=1e5+1,t=1e5,inf=1e8;\nstruct p{\n\tint x,y,dis;\n}c[MAX<<2];\nint n,num=2;\nint h[MAX],d[MAX],a[MAX],f[MAX],g[MAX];//f\u4ecei\u5230\u524d\uff0cg\u4ecei\u5230\u540e\nbool use[MAX];\nint read()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\tfor(;!isdigit(ch);f=(ch=='-')?-1:1,ch=getchar());\n\tfor(;isdigit(ch);x=x*10+ch-48,ch=getchar());\n\treturn x*f;\n}\nvoid add(int x,int y,int dis)\n{\n\tc[num]=(p){h[y],x,0},h[y]=num++;\n\tc[num]=(p){h[x],y,dis},h[x]=num++;\n}\nbool bfs()\n{\n\tqueue<int> qu;\n\tqu.push(0);\n\tmemset(d,0,sizeof(d));\n\td[0]=1;\n\twhile(!qu.empty())\n\t{\n\t\tint tt=qu.front();\n\t\tqu.pop();\n\t\tfor(int i=h[tt];i;i=c[i].x)\n\t\t  if(!d[c[i].y]&&c[i].dis)\n\t\t  {\n\t\t  \td[c[i].y]=d[tt]+1;\n\t\t  \tqu.push(c[i].y);\n\t\t  }\n\t}\n\treturn d[t];\n}\nint dfs(int x,int dix)\n{\n\tif(x==t||!dix) return dix;\n\tint sum=0;\n\tfor(int i=h[x];i;i=c[i].x)\n\t  if(d[c[i].y]==d[x]+1&&c[i].dis)\n\t  {\n\t  \tint dis=dfs(c[i].y,min(c[i].dis,dix));\n\t  \tif(dis)\n\t  \t{\n\t  \t\tdix-=dis;\n\t  \t\tsum+=dis;\n\t  \t\tc[i].dis-=dis;\n\t  \t\tc[i^1].dis+=dis;\n\t  \t\tif(!dix) break;\n\t\t}\n\t  }\n\tif(!sum) d[x]=-1;\n\treturn sum;\n}\nint dinic()\n{\n\tint tot=0;\n\twhile(bfs()) tot+=dfs(0,inf);\n\treturn tot;\n}\nint main()\n{\n\tn=read();\n\tint s=1;//\u7b54\u6848\n\tfor(int i=1;i<=n;i++)\n\t  a[i]=read(),f[i]=g[i]=1;\n\tfor(int i=2;i<=n;i++)\n\t  {\n\t  \tfor(int j=1;j<i;j++)\n\t      if(a[i]>=a[j]&&f[i]<f[j]+1)\n\t      f[i]=f[j]+1;\n\t    s=max(s,f[i]);//\u66f4\u65b0\u7b54\u6848\n\t    for(int j=1;j<i;j++)\n\t      if(a[i]>=a[j]&&f[i]==f[j]+1)\n\t      add(i,j,1);//\u80fd\u66f4\u65b0f[i]\u5c31\u8fde\u8fb9\n\t  }//f[i]dp\u8fc7\u7a0b\n\tfor(int i=n-1;i>=1;i--)\n\t  for(int j=n;j>i;j--)\n\t    if(a[i]<=a[j]&&g[i]<g[j]+1)\n\t    g[i]=g[j]+1;//g[i]dp\u8fc7\u7a0b\n\tprintf(\"%d\\n\",s);\n\tif(s==1)//\u7279\u5224\n\t{\n\t\tprintf(\"%d\\n%d\",n,n);\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t  {\n\t  \tif(f[i]==s) add(0,i,1);//f[i]=s \u6e90\u70b9\u4e0ei\u8fde\n\t  \tif(g[i]==s) add(i,t,1);//g[i]=s i\u4e0e\u6c47\u70b9\u8fde\n\t  }\n\tprintf(\"%d\\n\",dinic());//\u7b2c2\u95ee\n\tmemset(c,0,sizeof(c));//\u91cd\u5efa\u8fb9\n\tmemset(h,0,sizeof(h));\n\tnum=2;\n\tfor(int i=2;i<=n;i++)\n\t  for(int j=1;j<i;j++)\n\t    if(a[i]>=a[j]&&f[i]==f[j]+1)\n\t    add(i,j,1);\n\tfor(int i=1;i<=n;i++)\n\t  {\n\t  \tif(f[i]==s)\n\t\tif(i==1||i==n) add(0,i,inf);//\u5904\u7406x1\u548cxn\n\t\telse add(0,i,1);\n\t  \tif(g[i]==s)\n\t\tif(i==1||i==n) add(i,t,inf);\n\t\telse add(i,t,1);\n\t  }\n\tprintf(\"%d\",dinic());//\u7b2c3\u95ee\n\treturn 0;\n}\n```\n",
        "postTime": 1521370088,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2766 \u3010\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    }
]