[
    {
        "content": "# \u4e00\u3001\u9898\u76ee\uff1a\n\n[\u6d1b\u8c37\u539f\u9898](https://www.luogu.com.cn/problem/P6922)\n\n[codeforces\u539f\u9898](https://codeforces.com/gym/101242)\n\n# \u4e8c\u3001\u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u5b98\u65b9\u9898\u89e3\u8bb2\u7684\u975e\u5e38\u597d\uff0c\u6211\u8fd9\u91cc\u5c31\u5f53\u662f\u7b80\u5355\u7684\u7ffb\u8bd1\u4e00\u4e0b\u5b98\u65b9\u7684\u9898\u89e3\u5427\u3002\n\n\u8ba9\u6211\u4eec\u4ece\u4e00\u6761\u5355\u72ec\u7684\u6cb3\u6d41 $p$ \u5f00\u59cb\u3002\u6211\u4eec\u7684\u76ee\u7684\u662f\u8ba9\u8fd9\u6761\u6cb3\u6d41\u7684\u6392\u540d\u5c3d\u53ef\u80fd\u7684\u9760\u524d\u3002\u663e\u7136\uff0c\u5728\u4ece $p$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\uff0c\u6211\u4eec\u90fd\u8981\u9009\u62e9 $p$ \u4f5c\u4e3a\u6c47\u5408\u70b9\u7684\u540d\u5b57\u3002\u5047\u8bbe\u901a\u8fc7\u8fd9\u6837\u7684\u9009\u62e9\u540e\uff0c$p$ \u7684\u957f\u5ea6\u662f $L$\u3002\u73b0\u5728\uff0c\u95ee\u9898\u53d8\u6210\u4e86\u5728\u5176\u4ed6\u6c47\u5408\u70b9\u4e0a\u5982\u4f55\u6070\u5f53\u5730\u9009\u62e9\u540d\u5b57\uff0c\u4f7f\u5f97\u5c3d\u53ef\u80fd\u5c11\u7684\u6cb3\u6d41\u6bd4 $L$ \u957f\u3002\n\n\u5982\u679c\u4e00\u6761\u6cb3\u6d41\u6bd4 $L$ \u957f\uff0c\u90a3\u6211\u4eec\u5c31\u79f0\u8fd9\u6761\u6cb3\u6d41\u662f*\u957f\u7684*\u3002\u5426\u5219\uff0c\u79f0\u8fd9\u6761\u6cb3\u6d41\u662f*\u77ed\u7684*\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u957f\u6cb3\u6d41\u7684\u6570\u76ee\uff08\u7b49\u4ef7\u4e8e\u6700\u5c0f\u5316\u77ed\u6cb3\u6d41\u53d8\u6210\u957f\u6cb3\u6d41\u7684\u5730\u70b9\u7684\u4e2a\u6570\uff09\u3002\u8ba9\u6211\u4eec\u63a5\u4e0b\u6765\u8003\u8651\u90a3\u4e9b\u4e0d\u5305\u62ec $p$ \u7684\u6c47\u6d41\u70b9\u3002\n\n+ \u5982\u679c\u81f3\u5c11\u6709\u4e00\u6761\u5c06\u8981\u8fdb\u5165\u8be5\u6c47\u6d41\u70b9\u7684\u6cb3\u6d41\u662f\u957f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u5b83\u7ee7\u7eed\u6d41\uff08\u4ece\u800c\u7ec8\u6b62\u5176\u4ed6\u6cb3\u6d41\uff09\u3002\n+ \u5982\u679c\u6240\u6709\u7684\u6cb3\u6d41\u90fd\u662f\u77ed\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u9009\u62e9\u6700\u77ed\u7684\u6cb3\u6d41\u8ba9\u5b83\u7ee7\u7eed\u6d41\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u2014\u2014\u5bf9\u4e8e\u6bcf\u4e2a\u6cb3\u6d41\uff0c\u6211\u4eec\u90fd\u8981\u6267\u884c\u4e0a\u8ff0\u8fc7\u7a0b\u3002\n\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u81f4\u529b\u4e8e\u4e00\u6b21\u6027\u8ba1\u7b97\u51fa\u6240\u6709\u6cb3\u6d41\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6cb3\u6d41 $p$\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u56de\u7b54\u201c\u5982\u679c\u6211\u4eec\u5728 $p$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u603b\u662f\u9009\u62e9 $p$\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u81f3\u5c11\u5f62\u6210\u591a\u5c11\u4e2a\u6bd4 $L$ \u957f\u7684\u6cb3\u6d41\u201d\uff0c\u8fd9\u4e2a\u95ee\u9898\u7b49\u4ef7\u4e8e\u201c\u6211\u4eec\u9700\u8981\u81f3\u5c11\u5f62\u6210\u591a\u5c11\u4e2a\u6bd4 $L$ \u957f\u7684\u6cb3\u6d41\u201d\u800c\u4e0d\u5e26\u6709\u5176\u4ed6\u7684\u9650\u5236\u3002\u4e3a\u4e86\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u8ba9\u6211\u4eec\u91c7\u53d6\u6700\u4f18\u7b56\u7565\u6765\u5f62\u6210\u5c3d\u53ef\u80fd\u5c11\u7684\u3001\u6bd4 $L$ \u957f\u7684\u6cb3\u6d41\u3002\u7136\u540e\u8003\u8651\u90a3\u4e9b\u5728 $p$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u3001\u6ca1\u6709\u9009\u62e9 $p$ \u7684\u6c47\u6d41\u70b9\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u5728\u8fd9\u4e9b\u6c47\u6d41\u70b9\u9009\u62e9\u4e86 $p$\uff0c\u957f\u6cb3\u6d41\u7684\u6570\u76ee\u5e76\u4e0d\u4f1a\u589e\u591a\u3002\u65e2\u7136\u65e0\u8bba\u591a\u5c11\u6b21\u9009\u62e9 $p$\uff0c$p$ \u7684\u957f\u5ea6\u90fd\u4e0d\u4f1a\u957f\u4e8e $L$\uff0c\u800c\u4e14\u957f\u6cb3\u6d41\u7684\u6570\u76ee\u8fd8\u6709\u53ef\u80fd\u51cf\u5c11\uff0c\u90a3\u4e48\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u5728\u6bcf\u4e2a\u53ef\u4ee5\u9009\u62e9 $p$ \u7684\u6c47\u6d41\u70b9\u9009\u62e9 $p$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a $L$\uff0c\u56de\u7b54\u201c\u81f3\u5c11\u9700\u8981\u5f62\u6210\u591a\u5c11\u4e2a\u6bd4 $L$ \u957f\u7684\u6cb3\u6d41\u201d\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u5c06\u4f1a\u4ee5 $L$ \u9012\u589e\u7684\u987a\u5e8f\u6765\u4e00\u6b21\u6027\u7684\u56de\u7b54\u6240\u6709\u95ee\u9898\u3002\n\n\u5047\u8bbe\u5f53\u524d\u5904\u7406\u5230\u4e86\u957f\u5ea6 $L$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6c47\u6d41\u70b9\u548c\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u5b83\u4eec\u90fd\u662f\u4ee5\u4e0b\u4e09\u79cd\u72b6\u6001\u7684\u5176\u4e2d\u4e4b\u4e00\uff1a\n\n+ \u81f3\u5c11\u6709\u4e00\u6761\u5c06\u8981\u8fdb\u5165\u8be5\u4ea4\u6c47\u70b9\u7684\u6cb3\u6d41\u662f\u957f\u7684\uff08\u53f6\u5b50\u7ed3\u70b9\u4e0d\u53ef\u80fd\u5904\u4e8e\u8fd9\u79cd\u72b6\u6001\uff09\u3002\n+ \u6240\u6709\u5c06\u8981\u8fdb\u5165\u8be5\u4ea4\u6c47\u70b9\u7684\u6cb3\u6d41\u90fd\u662f\u77ed\u7684\uff0c\u4f46\u662f\u6d41\u51fa\u8be5\u4ea4\u6c47\u70b9\u7684\u6cb3\u6d41\u5c06\u4f1a\u53d8\u6210\u957f\u6cb3\u6d41\u3002\n+ \u6240\u6709\u5c06\u8981\u8fdb\u5165\u8be5\u4ea4\u6c47\u70b9\u7684\u6cb3\u6d41\u90fd\u662f\u77ed\u7684\uff0c\u5e76\u4e14\u6d41\u51fa\u8be5\u4ea4\u6c47\u70b9\u7684\u6cb3\u6d41\u4e5f\u662f\u77ed\u6cb3\u6d41\u3002\n\n\u5728\u7b2c\u4e8c\u79cd\u548c\u7b2c\u4e09\u79cd\u72b6\u6001\uff0c\u6839\u636e\u8d2a\u5fc3\u539f\u5219\uff0c\u6211\u4eec\u9009\u62e9\u6700\u77ed\u7684\u6cb3\u6d41\u8ba9\u5b83\u6d41\u51fa\u53bb\u3002\n\n\u8ba9\u6211\u4eec\u4ee5 $L=0$ \u5f00\u59cb\u3002\u6240\u6709\u7684\u53f6\u5b50\u7ed3\u70b9\u90fd\u5904\u4e8e\u72b6\u6001 2\uff0c\u6240\u6709\u7684\u6c47\u6d41\u70b9\u90fd\u5904\u4e8e\u72b6\u6001 1\uff0c\u5171\u6709 $N$ \u6761\u957f\u6cb3\u6d41\u3002\n\n\u5f53 $L$ \u589e\u957f\u65f6\uff0c\u53ef\u80fd\u6709\u4e00\u4e9b\u70b9\u4f1a\u4ece\u72b6\u6001 2 \u53d8\u5230\u72b6\u6001 3\uff0c\u4e5f\u53ef\u80fd\u6709\u4e00\u4e9b\u70b9\u4f1a\u4ece\u72b6\u6001 1 \u53d8\u5230\u72b6\u6001 2\u3002\u8fd8\u53ef\u80fd\u6709\u4e00\u4e9b\u70b9\u4f1a\u76f4\u63a5\u4ece\u72b6\u6001 1 \u53d8\u5230\u72b6\u6001 3\u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9jff7mev.png)\n\n\u5f53 $L$ \u4ece $1$ \u589e\u957f\u5230 $5000$ \u65f6\uff0c\u6c47\u6d41\u70b9 2\u30011 \u90fd\u4f1a\u4ece\u72b6\u6001 1 \u53d8\u6210\u72b6\u6001 3\u3002\u6c47\u6d41\u70b9 3 \u4f1a\u4ece\u72b6\u6001 1 \u53d8\u6210\u72b6\u6001 2\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6240\u6709\u662f\u72b6\u6001 2 \u7684\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u5806\u4e2d\u4fdd\u5b58\u7684\u662f\u4e8c\u5143\u7ec4 $(l,x)$\uff0c\u8868\u793a\u8981\u60f3\u628a $x$ \u4ece\u72b6\u6001 2 \u53d8\u6210\u72b6\u6001 3\uff0c$L$ \u81f3\u5c11\u5e94\u8be5\u7b49\u4e8e $l$\u3002\u6bcf\u6b21\u4ece\u5806\u4e2d\u53d6\u51fa\u6700\u5c0f\u7684 $l$\uff0c\u628a $x$ \u7684\u72b6\u6001\u66f4\u6539\u4e3a 3\u3002\u518d\u53bb\u68c0\u67e5 $x$ \u7684\u7956\u5148\u6709\u6ca1\u6709\u53ef\u80fd\u53d8\u72b6\u6001\uff08\u53d8\u6210\u72b6\u6001 2 \u7684\u6761\u4ef6\u662f\u6240\u6709\u513f\u5b50\u90fd\u662f\u72b6\u6001 3\uff0c\u4f46\u662f\u522b\u5fd8\u4e86\u7279\u5224\u76f4\u63a5\u4ece\u72b6\u6001 1 \u8e66\u5230\u72b6\u6001 3 \u7684\u60c5\u51b5\uff09\u3002\u7531\u4e8e\u4e00\u4e2a\u70b9\u6700\u591a\u4ece\u72b6\u6001 1 \u53d8\u5230\u72b6\u6001 2 \u4e00\u6b21\uff0c\u4ece\u72b6\u6001 2 \u53d8\u5230\u72b6\u6001 3 \u4e00\u6b21\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$\u3002\n\n# \u4e09\u3001\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <queue>\n#include <map>\n\nusing namespace std;\ntypedef pair<long long, int> PLI;\n#define FILEIN(s) freopen(s, \"r\", stdin)\n#define FILEOUT(s) freopen(s, \"w\", stdout)\n#define mem(s, v) memset(s, v, sizeof s)\n\ninline int read(void) {\n    int x = 0, f = 1; char ch = getchar();\n    while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); }\n    while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); }\n    return f * x;\n}\n\nconst int MAXN = 1000005;\nconst long long INF = 1e17;\n\nint n, m, head[MAXN], tot;\nint v[MAXN], fa[MAXN], cnt[MAXN];\nlong long dp[MAXN], sum[MAXN];\nstring name[MAXN];\nmap<long long, int>ans;\nmap<long long, int>::iterator it;\n\nstruct Edge {\n    int y, next;\n    Edge() {}\n    Edge(int _y, int _next) : y(_y), next(_next) {}\n}e[MAXN];\n\npriority_queue<PLI, vector<PLI>, greater<PLI> >q;\n\ninline void connect(int x, int y) {\n    e[++tot] = Edge(y, head[x]);\n    head[x] = tot;\n}\n\nvoid dfs(int x, int father) {\n    fa[x] = father;\n    sum[x] = sum[father] + v[x];\n    long long minn = INF;\n    for (int i = head[x]; i; i = e[i].next) {\n        int y = e[i].y;\n        dfs(y, x);\n        ++cnt[x];\n        minn = min(minn, dp[y]);\n    }\n    if (minn == INF) dp[x] = v[x];\n    else dp[x] = minn + v[x];\n}\n\nint main() {\n    n = read(); m = read();\n    for (int i = m + 1; i <= m + n; ++i) {\n        cin >> name[i];\n        int y = read(); v[i] = read();\n        connect(y, i);\n    }\n    for (int i = 1; i <= m; ++i) {\n        int y = read();\n        v[i] = read();\n        connect(y, i);\n    }\n    dfs(0, 0);\n    int now = 0;\n    long long L = 0;\n    for (int i = m + 1; i <= m + n; ++i) {\n        q.push({ dp[i], i });\n        ++now; // \u7ef4\u62a4\u72b6\u60012\u7684\u8282\u70b9\u4e2a\u6570\u3002\n    }\n    while (q.size()) {\n        int x = q.top().second; long long l = q.top().first; q.pop();\n        L = l;\n\n        --now;\n        --cnt[fa[x]];\n\n        if (fa[x] && !cnt[fa[x]]) {\n            x = fa[x];\n            while (x && L >= dp[x]) { // \u68c0\u67e5x\u7684\u7956\u5148\u4eec\u3002\n                --cnt[fa[x]];\n                if (cnt[fa[x]] == 0) {\n                    x = fa[x];\n                }\n                else break;\n            }\n            if (x && cnt[x] == 0 && L < dp[x]) {\n                q.push({ dp[x], x });\n                ++now;\n            }\n        }\n        ans[L] = now + 1;\n    }\n    ans[INF] = 0; // \u9632\u6b62\u8d8a\u754c\u3002\n    for (int i = m + 1; i <= n + m; ++i) {\n        it = ans.upper_bound(sum[i]); \n        --it; // \u7531\u4e8e\u5728\u6c42\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0cL\u7684\u589e\u957f\u5e76\u4e0d\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u627e\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8esum[i]\u7684L\u6240\u5bf9\u5e94\u7684\u7b54\u6848\u3002\n        cout << name[i] << \" \" << (*it).second << endl;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1625281317,
        "uid": 43513,
        "name": "\u5cb8\u82b7\u6c40\u5170",
        "ccfLevel": 8,
        "title": "\u6d1b\u8c37 P6922 [ICPC2016 WF]Longest Rivers \u9898\u89e3"
    }
]