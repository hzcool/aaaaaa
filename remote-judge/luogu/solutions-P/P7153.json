[
    {
        "content": "\u6807\u7b7e\uff1a\u5e73\u9762\u5750\u6807+\u53cc\u6307\u9488\n\n~~\u601d\u8003+\u8c03\u8bd5\u603b\u5171\u8017\u65f67h\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002~~\n\n### \u57fa\u672c\u601d\u8def\n\n* \u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u7a7a\u96c6\u6216\u8005\u53ea\u5305\u542b\u4e00\u4e2a\u70b9\u3002\n\n\u663e\u7136\uff0c\u7b54\u6848\u4e3a $n+1$\u3002\n\n* \u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5305\u542b\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u70b9\u3002\n\n\u679a\u4e3e\u6b63\u65b9\u5f62\u6700\u5de6\u548c\u6700\u53f3\u7684\u4e24\u4e2a\u70b9 $i,j(i<j)$\uff0c\u6ee1\u8db3 $|x_i-x_j|\\geq |y_i-y_j|$\uff0c\u5219\u6b63\u65b9\u5f62\u7684\u8fb9\u957f $side=|x_i-x_j|$\u3002\u5bf9\u4e8e $|x_i-x_j|\\leq |y_i-y_j|$ \u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6362\u6bcf\u4e2a\u70b9\u7684 $x,y$ \u5750\u6807\u518d\u901a\u8fc7\u76f8\u540c\u7684\u65b9\u5f0f\u5f97\u5230\u7b54\u6848\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8ba8\u8bba\u3002\n\n\u5bf9\u6240\u6709\u5750\u6807\u4ee5 $x$ \u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$y$ \u5750\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\u6392\u5e8f\u4e4b\u540e\uff0c\u6b63\u65b9\u5f62\u4e2d\u6240\u6709\u70b9\u7684\u4e0b\u6807\u5fc5\u5b9a\u5728 $[i,j]$ \u4e4b\u95f4\uff0c$x$ \u5750\u6807\u5fc5\u5b9a\u5728 $[x_i,x_j]$ \u4e4b\u95f4\u3002\n\n\u8003\u8651 $y$ \u5750\u6807\uff0c\u4e0d\u59a8\u5c06\u4e0b\u6807\u5728 $[i,j]$ \u4e4b\u95f4\u7684\u70b9\u7684 $y$ \u5750\u6807\u6392\u5e8f\u540e\u653e\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $j-i+1$ \u7684\u6570\u7ec4 $v$ \u4e2d\u3002\u8fd9\u6837\uff0c\u6b63\u65b9\u5f62\u4e2d\u7684\u70b9\u7684 $y$ \u5750\u6807\u4e00\u5b9a\u5c5e\u4e8e\u6570\u7ec4 $v$ \u7684\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4\u3002\u95ee\u9898\u8f6c\u53d8\u4e3a\u4e86\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u7684\u4e24\u7aef\u70b9 $l,r$ \u6709\u591a\u5c11\u79cd\u7ec4\u5408\u65b9\u5f0f\u3002\u56e0\u4e3a $v$ \u6570\u7ec4\u6709\u5e8f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n### \u53cc\u6307\u9488\u7684\u5177\u4f53\u5b9e\u73b0\n\n\u8fd9\u91cc\u7684\u53cc\u6307\u9488\u7c7b\u4f3c\u4e8e\u6ed1\u52a8\u4e00\u4e2a\u957f\u5ea6\u4e3a $side$ \u7684\u7a97\u53e3\u3002\n\n\u9996\u5148\u786e\u5b9a $v_l$ \u548c $v_r$ \u7684\u8303\u56f4\u3002\u56e0\u4e3a\u6b63\u65b9\u5f62\u5fc5\u987b\u5305\u542b $i,j$ \u4e24\u70b9\uff0c\u6240\u4ee5\u8bbe $mini=\\max(y_i,y_j)-side$\uff0c$maxi=\\min(y_i,y_j)$\uff0c\u90a3\u4e48\u6b63\u65b9\u5f62\u7684\u4e0b\u8fb9\u754c $lower\\in[mini,maxi]$\uff0c\u4e0a\u8fb9\u754c $upper\\in[mini+side,maxi+side]$\u3002\n\n**\u6ce8**\uff1a\u4e0a\u8fb9\u754c\u548c\u4e0b\u8fb9\u754c\u5e76\u4e0d\u4ee3\u8868 $v_l$ \u548c $v_r$\u3002\n\n\u63a5\u4e0b\u6765\u8ba8\u8bba\u4ec0\u4e48\u6837\u7684 $[l,r]$ \u662f\u5408\u6cd5\u7684\u3002\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\u3002\n\n* \u6b63\u65b9\u5f62\u5fc5\u987b\u80fd\u540c\u65f6\u5305\u542b $v_l$ \u548c $v_r$ \u4e24\u4e2a\u5750\u6807\uff0c\u5373 $v_l\\leq v_r-side$\u3002\n\n* \u6b63\u65b9\u5f62\u4e0d\u80fd\u5305\u62ec $v_{r+1}$\uff0c\u540c\u6837\u4e0d\u80fd\u5305\u62ec $v_{l-1}$\u3002\n\t\n    \u8fd9\u4e2a\u6761\u4ef6\u7684\u8ba8\u8bba\u6709\u4e00\u4e9b\u590d\u6742\u3002\u4e0d\u59a8\u56fa\u5b9a\u53f3\u7aef\u70b9 $r$\uff0c\u53bb\u5bfb\u627e\u53ef\u884c\u7684\u5de6\u7aef\u70b9\u3002\n    \n    \u5305\u542b $v_r$ \u4e14\u4e0d\u5305\u542b $v_{r+1}$\uff0c\u6b63\u65b9\u5f62\u7684\u4e0a\u8fb9\u754c\u9700\u8981\u6ee1\u8db3 $upper\\in[v_r,v_{r+1}-1]$\uff0c\u5bf9\u5e94\u5230\u4e0b\u8fb9\u754c\u5c31\u662f $lower\\in[v_r-side,v_{r+1}-1-side]$\u3002\u8981\u4f7f $l$ \u5408\u6cd5\uff0c\u5219\u9700 $\\exists lower[v_r-side,v_{r+1}-1-side]$\uff0c\u4f7f\u5f97 $lower>v_{l-1}$\u3002\u90a3\u4e48\u53ea\u8981\u4f7f $lower$ \u7684\u6700\u5927\u503c $v_{r+1}-1-side>v_{l-1}$ \u5373\u53ef\u3002\n    \n    \u6240\u4ee5\u53ea\u8981\u6ee1\u8db3 $v_{r+1}-1-side>v_{l}$ \u4fbf\u53ef\u5c06\u6307\u9488 $l$ \u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\uff0c\u5373 $l\\gets l+1$\u3002\n    \n\u6700\u540e\u8fd8\u6709 $|x_i-x_j|\\geq |y_i-y_j|$ \u548c $|x_i-x_j|\\leq |y_i-y_j|$ \u51fa\u73b0\u91cd\u590d\u7684\u95ee\u9898\u3002\u5982\u679c\u5728\u7edf\u8ba1\u7684\u65f6\u5019\u51fa\u73b0 $v_r-v_l=side$ \u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5f53 $l,r$ \u5bf9\u5e94\u7684\u4e0b\u6807\u6210\u4e3a\u4e0b\u4e00\u8f6e\u679a\u4e3e\u7684 $i,j$ \u65f6\uff0c\u8fd9\u4e2a\u6b63\u65b9\u5f62\u4e2d\u5305\u542b\u7684\u5b50\u96c6\u4f1a\u88ab\u518d\u7edf\u8ba1\u4e00\u6b21\uff0c\u51cf\u53bb\u5373\u53ef\u3002\n\n\u8fd9\u9053\u9898\u8fd8\u6709\u5f88\u591a\u7684\u7ec6\u8282\uff0c\u8be6\u60c5\u8bf7\u89c1\u4ee3\u7801\u3002\uff08\u5f53\u7136\u4f60\u95ee\u6211\u4e3a\u4ec0\u4e48\u4ee3\u7801\u663e\u793a\u4e0d\u5168\uff0c\u662f\u56e0\u4e3a\u4ee3\u7801\u592a\u5bbd\u4e86233\uff0c\u53ea\u9700\u8981\u590d\u5236\u5230\u7f16\u8f91\u5668\u91cc\u5c31\u53ef\u4ee5\u770b\u4e86\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define db double\nusing namespace std;\ninline int read() {\n\tint x = 0; bool op = false;\n\tchar c = getchar();\n\twhile(!isdigit(c))op |= (c == '-'), c = getchar();\n\twhile(isdigit(c))x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\n\treturn op ? -x : x;\n}\nconst int N = 210;\nint n, ans, res;\nstruct Node {\n\tint x, y;\n\tbool operator < (const Node &tmp) const {\n\t\tif(x ^ tmp.x)return x < tmp.x;\n\t\telse return y < tmp.y;\n\t}\n\tNode(int x = 0, int y = 0):x(x), y(y){}\n}a[N];\nset<int> s;\nvoid solve() {\n\tsort(a + 1, a + 1 + n);\n\tfor(int i = 1; i < n; i++) {\n\t\ts.clear(); s.insert(a[i].y);\n\t\tfor(int j = i + 1; j <= n; j++) {\n\t\t\ts.insert(a[j].y);\n\t\t\tvector<int> vec(s.begin(), s.end()); //\u4ece\u9898\u89e3\u91cc\u9762\u5b66\u5230\u7684\u5947\u602a\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u628as\u4e2d\u7684\u5143\u7d20\u590d\u5236\u5230\u4e86vec\u91cc \n\t\t\tint side = a[j].x - a[i].x;\n\t\t\tint mini = max(a[i].y, a[j].y) - side, maxi = min(a[i].y, a[j].y);\n\t\t\tif(mini > maxi)continue; //\u5982\u679c\u4e0b\u754c\u5728\u4e0a\u754c\u4e4b\u4e0a\uff0c\u76f4\u63a5\u8df3\u8fc7 \n\t\t\tint len = vec.size(), l = 0, r = -1;\n\t\t\twhile(r + 1 < len && vec[r + 1] < mini + side)r++; \n\t\t\t//\u627e\u5230\u6700\u5927\u7684r\uff0c\u4f7f\u5f97vec[r]<mini+side\n\t\t\t//\u4e4b\u6240\u4ee5\u8981\u8fd9\u4e48\u627e\uff0c\u662f\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728\u4e0a\u754c\u5728[mini+side,maxi+side]\u4e4b\u4e2d\u4f46\u662fvec[r]\u4e0d\u5728\u8fd9\u4e2a\u533a\u95f4\u4e4b\u4e2d\u7684\u60c5\u51b5\n\t\t\t//\u90a3\u4e48\u5305\u542b\u5b83\u4e14\u4e0d\u5305\u542bvec[r+1]\u7684\u6761\u4ef6\u4e5f\u6709\u6240\u8f6c\u53d8\uff0c\u5373\u4e0a\u754c\u5728[mini+side,vec[r+1]-1]\u4e4b\u95f4\u3002 \n\t\t\twhile(l < len && vec[l] < mini)l++; //\u627e\u5230\u6700\u5c0f\u7684l\uff0c\u4f7fvec[l]>=mini \n\t\t\tfor(; r < len && (r < 0 || vec[r] <= maxi + side); r++) {//\u6211\u6bd4\u8f83\u559c\u6b22\u8fd9\u79cd\u53cc\u6307\u9488\u7684\u5199\u6cd5\uff0c\u5373\u786e\u5b9ar\u679a\u4e3el \n\t\t\t\tif(r < 0)continue; //r<0\u76f4\u63a5\u8df3\u8fc7 \n\t\t\t\tint tl = max(vec[r] - side, mini);\n\t\t\t\tint tr = min((r + 1 < len) ? vec[r + 1] - side : maxi + 1, maxi + 1) - 1;\n\t\t\t\t//\u5982\u679cr+1\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u628a\u4e0a\u754c\u8bbe\u4e3amaxi+1\uff08\u56e0\u4e3a\u540e\u9762\u6709\u4e00\u4e2a-1\u6240\u4ee5\u4e0d\u80fd\u8bbe\u4e3amaxi\uff09\n\t\t\t\t//\u6b64\u65f6\u6b63\u65b9\u5f62\u4e0b\u8fb9\u754c\u7684\u8303\u56f4\u4e3a[tl,tr] \n\t\t\t\twhile(l < len && vec[l] < tl)l++;//\u9996\u5148\u63d0\u51favec[l]\u5728\u4e0b\u8fb9\u754c\u4ee5\u4e0b\u7684\u60c5\u51b5 \n\t\t\t\tif((vec[r] < mini + side && vec[r + 1] > mini + side) || vec[r] >= mini + side)ans++;\n\t\t\t\t//\u7ec6\u8282\uff1a\u6b64\u65f6r\u589e\u52a0\u4e861\uff0c\u4e0d\u7ba1l\u80fd\u4e0d\u80fd\u79fb\u52a8\uff0c\u5b83\u90fd\u662f\u4e00\u79cd\u65b0\u7684\u60c5\u51b5\uff0c\u9700\u8981\u7edf\u8ba1\u7b54\u6848\n\t\t\t\t//\u5f53\u7136\u5176\u4e2d\u4e5f\u6709\u4e0d\u5408\u6cd5\u7684\u7b54\u6848\uff0c\u6bd4\u5982\u8bf4vec[r]\u5728\u4e0b\u8fb9\u754c\u4e00\u4e0b\uff0c\u4f46\u662f\u4e0a\u8fb9\u754c\u6839\u672c\u4e0d\u53ef\u80fd\u79fb\u52a8\u5230mini+side\u4ee5\u4e0a\n\t\t\t\t//\u8fd9\u79cd\u60c5\u51b5\u5c31\u662fver[r+1]\u6b63\u597d\u7b49\u4e8emini+side\n\t\t\t\tif(vec[r] - vec[l] == side)res++; //\u53bb\u91cd \n\t\t\t\twhile(l + 1 < len && vec[l] < tr) {ans++; l++; if(vec[r] - vec[l] == side)res++;}//\u7edf\u8ba1\u7b54\u6848+\u53bb\u91cd \n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\nint main() {\n\tn = read(); ans = n + 1; \n\tfor(int i = 1; i <= n; i++) {int x = read(), y = read(); a[i] = Node(x, y);}\n\tsolve(); \n\tfor(int i = 1; i <= n; i++)swap(a[i].x, a[i].y);\n\tsolve();\n\tprintf(\"%d\", ans - res / 2);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1611913394,
        "uid": 149192,
        "name": "__gcd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P7153 [USACO20DEC] Square Pasture G \u3011"
    },
    {
        "content": "# P7153 [USACO20DEC] Square Pasture G \u9898\u89e3\n\n\u6ce8\u610f\uff1a\u8fd9\u4e2a\u4e0d\u662f\u6b63\u5e38\u505a\u6cd5~~\u4f46\u662f\u80fd\u8fc7~~\uff0c\u8bfb\u8005\u5982\u679c\u60f3\u770b\u6b63\u89e3**\u4e0d\u8981\u6765\u8fd9\u91cc**\uff0c\u4f46\u662f\u8fd9\u7bc7\u9898\u89e3\u53ef\u4ee5\u6210\u4e3a\u5f88\u597d\u7684\u8003\u573a\u9a97\u5206\u601d\u8def\u3002\u8003\u573a\u4e0a\u53ea\u8981\u80fd\u5f97\u5206\u7684\u5c31\u662f\u597d\u505a\u6cd5\uff0c\u6709\u65f6\u5019~~\u751a\u81f3\u80fd\u8fc7~~\u3002\n\n## \u9898\u610f\n- \u7ed9\u5b9a $n$ \u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9\uff0cx \u5750\u6807\u4e24\u4e24\u4e0d\u540c\uff0cy \u5750\u6807\u4e24\u4e24\u4e0d\u540c\u3002\n- \u95ee\u7528\u6b63\u65b9\u5f62\u6846\u4f4f\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u80fd\u6709\u591a\u5c11\u4e0d\u540c\u7684\u70b9\u96c6\uff0c**\u5305\u62ec\u7a7a\u96c6**\u3002\n- $1\\le n\\le 200, 0\\le x,y\\le 1e9$\u3002\n## \u601d\u8def\n\u8fd9\u91cc\u7ea6\u5b9a\uff0c\u539f\u9898\u4e2d\u7684 $1\\times 1$ \u7684\u5c0f\u77e9\u5f62\u4e3a\u4e00\u4e2a\u70b9\u3002\n\n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\uff0c\u7b2c\u4e00\u53cd\u5e94\uff1a~~\u66b4\u529b~~ \u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e2a\u70b9\u96c6\u4e00\u5b9a\u662f**\u88ab\u4e00\u4e2a\u6b63\u65b9\u5f62\u8986\u5b8c\u5168\u76d6\u4f4f\u7684**\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u4f1a\u6709\u70b9\u5728\u8fd9\u4e2a\u6b63\u65b9\u5f62\u4e2d\u5374\u4e0d\u5728\u70b9\u96c6\u4e2d\u3002\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\uff1a\u5c31\u7b97\u6709\u4e00\u4e2a\u70b9\u96c6\u4e34\u8fd1\uff0c\u4e5f\u65e0\u6cd5\u8ba1\u5165\u7b54\u6848\uff0c\u56e0\u4e3a\u53ef\u80fd\u6846\u4f4f\u8fd9\u4e2a\u70b9\u96c6\u7684\u6b63\u65b9\u5f62\u5fc5\u987b\u6846\u4f4f\u5176\u4ed6\u70b9\uff0c\u8fd9\u6837\u8fd9\u4e2a\u70b9\u96c6\u5c31\u65e0\u6cd5\u8ba1\u5165\u7b54\u6848\u3002\n\n\u6211\u4eec\u5148\u628a\u6240\u6709\u70b9\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u8fd9\u6837\u5b50\u5c31\u53d8\u6210\u4e86 $1\\le x,y\\le 200$ \u7684\u70b9\u4e86\uff0c\u65b9\u4fbf\u5904\u7406\u3002\u7136\u540e\uff0c**\u6211\u4eec\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u70b9\u96c6**\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u8ba1\u5165\u7b54\u6848\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u679a\u4e3e\u6211\u4eec\u60f3\u8981\u54ea\u4e9b\u70b9\u6210\u4e3a\u7b54\u6848\uff0c\u518d\u5224\u65ad\u8fd9\u4e9b\u70b9\u6784\u6210\u7684\u77e9\u5f62\u80fd\u5426\u88ab\u6b63\u65b9\u5f62\u6846\u4f4f\u3002\u56e0\u4e3a\u662f\u4e00\u4e2a\u77e9\u5f62\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u679a\u4e3e\u5de6\u4e0a\u89d2\u3001\u53f3\u4e0b\u89d2\uff0c\u603b\u5927\u6982\u5728 $n^4$ \u7684\u6570\u91cf\u7ea7\u3002\u8fd9\u65f6\u5019\u53ef\u80fd\u4f1a\u6709\u4eba\u7591\u60d1\uff1a\u8fd9\u4e2a\u77e9\u5f62\u5916\u9762\u53ef\u80fd\u8fd8\u4f1a\u6709\u7a7a\u4f59\u5730\u65b9\uff0c\u600e\u4e48\u5904\u7406\u5462\uff1f\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u7684\u662f**\u4e0d\u540c\u70b9\u96c6**\u7684\u6570\u91cf\uff0c\u800c\u4e0d\u662f\u6b63\u65b9\u5f62\u7684\u6570\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u70b9\u5c31\u597d\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u6837\u5b50\u7684\u8bdd\u6211\u4eec\u5fc5\u987b\u8981\u4fdd\u8bc1\u4e0d\u8ba1\u91cd\u3002\u8fd9\u91cc\u5904\u7406\u7684\u8bdd\u53ef\u4ee5\u679a\u4e3e\u4e00\u4e0b\u884c\uff0c\u7136\u540e\u4fdd\u8bc1\u77e9\u5f62\u4e00\u5b9a\u8981\u5305\u62ec\u6700\u4e0a\u9762\u548c\u6700\u4e0b\u9762\u7684\u4e24\u4e2a\u70b9\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u5728\u679a\u4e3e\u5217\u3002\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u4e00\u4e2a\u77e9\u5f62\u53ea\u4f1a\u88ab\u6700\u4e0a\u9762\u7684\u70b9\u4ee5\u53ca\u6700\u4e0b\u9762\u7684\u70b9\u679a\u4e3e\u5230\u4e00\u6b21\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u70b9\u96c6\u4ee5\u53ca\u6846\u4f4f\u8fd9\u4e2a\u70b9\u96c6\u7684\u6700\u5c0f\u77e9\u9635\uff0c\u6211\u4eec\u8003\u8651\u5224\u65ad**\u662f\u5426\u80fd\u591f\u901a\u8fc7\u8fd9\u4e2a\u77e9\u9635\u5468\u56f4\u7684\u7a7a\u4f59\u53d8\u6210\u4e00\u4e2a\u6b63\u65b9\u5f62**\u3002\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u77e9\u5f62\uff0c\u9898\u76ee\u8981\u6c42\u7684\u662f\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u4e00\u4e2a\u77e9\u5f62\u5982\u679c\u662f\u6241\u7684\uff0c\u6211\u4eec\u5c31\u628a\u4ed6\u62c9\u957f\uff1b\u5982\u679c\u662f\u9ad8\u7684\uff0c\u6211\u4eec\u5c31\u628a\u4ed6\u5f80\u5de6\u53f3\u6269\u5f20\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ea\u4f1a\u8ba9\u77e9\u5f62\u6c34\u5e73\u6216\u8005\u5782\u76f4\u6269\u5f20\u3002\u8fd9\u6837\u4e00\u5b9a\u662f\u4e0d\u52a3\u7684\u3002\u56e0\u6b64\u53ea\u9700\u8981\u5224\u65ad\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u77e9\u5f62\u6bd4\u8f83\u957f\u7684\u4e24\u6761\u8fb9\u6700\u591a\u80fd\u5f80\u5916\u6269\u5f20\u591a\u5c11\uff0c\u5224\u65ad\u662f\u5426\u80fd\u6210\u4e3a\u6b63\u65b9\u5f62\u3002\n\n\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\uff0c\u8fd9\u91cc\u5b9e\u9645\u64cd\u4f5c\u4e00\u4e0b\u3002\u6bd4\u5982\u6709\u8fd9\u6837\u4e00\u4e2a\u70b9\u96c6\uff1a\n![1](https://s1.ax1x.com/2022/04/03/q7Fage.png)\n\n\u73b0\u5728\u8981\u5224\u65ad\u8fd9\u4e2a\u70b9\u96c6\uff1a\n\n![2](https://s1.ax1x.com/2022/04/03/q7FN9O.png)\n\n\u90a3\u4e48\u8fd9\u4e2a\u77e9\u5f62\u5c31\u662f\u8986\u76d6\u4f4f\u8fd9\u4e2a\u70b9\u96c6\u7684\u6700\u5c0f\u77e9\u5f62\u3002\u6211\u4eec\u73b0\u5728\u8981\u5224\u65ad\u662f\u5426\u6709\u6b63\u65b9\u5f62\u80fd\u591f\u8986\u76d6\u4f4f\u8fd9\u4e2a\u70b9\u96c6**\u800c\u4e0d\u8986\u76d6\u4f4f\u522b\u7684\u70b9**\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6269\u5f20\u77e9\u5f62\u800c\u4e0d\u78b0\u5230\u5176\u4ed6\u70b9\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u96c6\uff0c\u6211\u4eec\u53ea\u9700\u8981**\u5de6\u53f3\u6269\u5f20**\u5c31\u8db3\u591f\u4e86\uff0c\u8fd9\u6837\u4e00\u5b9a\u4e0d\u52a3\u3002\u90a3\u4e48\u8fd9\u4e2a\u77e9\u5f62\u80fd\u5f80\u5916\u6269\u5f20\u8fd9\u4e48\u591a\uff1a\n\n![3](https://s1.ax1x.com/2022/04/03/q7FU3D.png)\n\n\u5982\u56fe\uff0c\u9ec4\u8272\u8868\u793a\u65e0\u9650\u3002\u90a3\u4e48\u5982\u56fe\uff0c\u4e24\u4e2a\u7d2b\u8272\u548c\u7ea2\u8272\u6b63\u65b9\u5f62\u90fd\u662f\u5408\u6cd5\u65b9\u6848\u3002\n\n![4](https://s1.ax1x.com/2022/04/03/q7FY4K.png)\n\n\u80fd\u5f80\u5916\u6269\u5f20\u591a\u5c11\uff0c\u8fd9\u4e2a\u8981\u770b\u8ddd\u79bb\u8fd9\u6761\u8fb9\u6700\u8fd1\u7684\u70b9\u6709\u591a\u8fdc\uff0c\u8fd9\u4e2d\u95f4\u7684\u8ddd\u79bb\u90fd\u662f\u53ef\u4ee5\u53d6\u5230\u7684\u3002\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u8fd9\u4e2a\u70b9\u6216\u8005\u5224\u65ad\u6ca1\u6709\u70b9\u5c31\u597d\u4e86\uff0c\u6ca1\u6709\u7684\u8bdd\u8ddd\u79bb\u5c31\u662f\u65e0\u9650\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u8fd9\u91cc\u76f4\u63a5\u662f\u628a\u56db\u4e2a\u65b9\u5411\u80fd\u6269\u5f20\u7684\u8ddd\u79bb\u5168\u90fd\u6c42\u4e86\u51fa\u6765\uff0c\u8fd9\u6837\u5b50\u867d\u7136\u8017\u65f6\u4f46\u53ef\u4ee5\u907f\u514d\u8bb8\u591a\u5206\u7c7b\u8ba8\u8bba\u3002\u6c42\u6cd5\u6211\u8fd9\u91cc\u76f4\u63a5\u4e0a\u4e86\u4e8c\u7ef4\u524d\u7f00\u548c\u52a0\u4e8c\u5206\uff0c\u5f53\u7136\u5e94\u8be5\u4f1a\u6709\u66f4\u4f18\u7684\u505a\u6cd5\u3002\n\n\u56e0\u6b64\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u6574\u7406\u4e00\u4e0b\u601d\u8def\uff1a\n\n1. \u679a\u4e3e\u6211\u4eec\u9700\u8981\u7684\u70b9\u96c6\uff0c\u627e\u5230\u56f4\u4f4f\u70b9\u96c6\u6700\u5c0f\u7684\u77e9\u5f62\n2. \u5224\u65ad\u77e9\u5f62\u662f\u5426\u80fd\u591f\u6269\u5f20\u6210\u4e3a\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u80fd\u7684\u8bdd\u5c31\u8ba1\u5165\u7b54\u6848\u8d21\u732e\u3002\n\n\u8fd9\u6837\u5b50\u65f6\u95f4\u590d\u6742\u5ea6\u603b\u5171 $O(n^4\\log n)$\uff0c\u81ea\u7136\u662f\u4e0d\u5bf9\u7684\u3002\u4f46\u5982\u679c\u5b9e\u73b0\u7684\u597d\u5e38\u6570\u5c0f\uff0c\u8fc7\u6389\u8fd9\u9053\u9898\u8fd8\u662f\u5f88\u8f7b\u677e\u7684\u3002\u672c\u4eba\u8003\u573a\u4ee3\u7801\u4e0d\u52a0 O2 \u6700\u6162 311ms \uff0c\u8dd1\u7684\u98de\u5feb\u3002\n\n\u8fd9\u542f\u793a\u6211\u4eec\uff0c\u53ea\u8981\u5b9e\u73b0\u7684\u597d\uff0c\u590d\u6742\u5ea6\u9ad8\u4e5f\u53ef\u4ee5\u63a5\u53d7\uff01\n\n\u6492\u82b1\uff01\n## \u7ec6\u8282\n\u7ec6\u8282\u5904\u7406\u81ea\u7136\u662f\u5f88\u91cd\u8981\u7684\u3002\n1. Inf \u4e00\u5b9a\u8981\u8bbe\u7684\u8db3\u591f\u5927\uff01\u5426\u5219\u5c31\u4f1a\u50cf\u6211\u4e00\u6837\u8003\u573a\u53ea\u5269 25 \u5206\u3002\u3002\u3002\n2. \u8bb0\u5f97\u52a0\u4e0a\u7a7a\u96c6\u7684\u8d21\u732e\u3002\n3. \u5728\u539f\u9898\u4e2d\u4e0d\u662f\u70b9\u800c\u662f\u4e00\u4e2a $1\\times 1$ \u7684\u5c0f\u77e9\u5f62\uff0c\u56e0\u6b64\u5904\u7406\u5f80\u5916\u6269\u5f20\u591a\u5c11\u65f6\u8fb9\u754c\u6ce8\u610f\u3002\n4. \u4e00\u4e9b\u679a\u4e3e\u77e9\u9635\u7684\u6ca1\u7528\u72b6\u6001\u53ef\u4ee5\u76f4\u63a5\u5224\u6389\uff0c\u53ef\u4ee5\u8ba9\u5e38\u6570\u5c0f\u5f88\u591a\u3002\n5. \u4e8c\u5206\u8fb9\u754c\u6ce8\u610f\u3002\n\n\u5f53\u7136\uff0c\u5b9e\u9645\u5904\u7406\u4e2d\u8fd8\u6709\u5f88\u591a\u7ec6\u8282\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u8bb2\u8ff0\u4e86\u3002\u5199\u4ee3\u7801\u81ea\u7136\u8fd8\u662f\u63a8\u8350\u8bfb\u8005\u660e\u767d\u601d\u8def\u4e4b\u540e\u81ea\u5df1\u5199\uff0c\u770b\u522b\u4eba\u4ee3\u7801\u4f1a\u4f7f\u5b66\u4e60\u6548\u679c\u6ca1\u90a3\u4e48\u9ad8\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <bitset>\n#include <vector>\nusing namespace std;\n#define ll long long\n#define int long long\n#define y1 __\n#define abs_(x) max(x,-(x))\nconst int N=205+2,I=0x3f3f3f3f3f3f3f3f;\nint read()\n{\n\tint x=0,y=1;\n\tchar c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') y=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0';\n\treturn y?x:-x;\n}\nstruct _N\n{\n\tint x,y;\n}a[N];\nint n,b1[N],b2[N];\nint ans;\nvector<int> g[N],v1,v2;\nint las[N],nxt[N];\nbitset<N> bt;\nint b[N][N],s[N][N];\nvoid init()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint y=read(),x=read();\n\t\tb1[i]=a[i].x=x;\n\t\tb2[i]=a[i].y=y;\n\t}\n\tsort(b1+1,b1+n+1);\n\tfor(int i=1;i<=n;i++) a[i].x=lower_bound(b1+1,b1+n+1,a[i].x)-b1;\n\tsort(b2+1,b2+n+1);\n\tfor(int i=1;i<=n;i++) a[i].y=lower_bound(b2+1,b2+n+1,a[i].y)-b2;\n\tfor(int i=1;i<=n;i++) g[a[i].x].push_back(a[i].y);\n\tb2[0]=-I,b2[n+1]=I;\n\tb1[0]=-I,b1[n+1]=I;\n\t\n\tfor(int i=1;i<=n;i++) b[a[i].x][a[i].y]=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\ts[i][j]=s[i-1][j]+s[i][j-1]-s[i-1][j-1]+b[i][j];\n\t\t}\n\t}\n}\nint get(int x1,int y1,int x2,int y2)\n{\n\treturn s[x2][y2]-s[x1-1][y2]-s[x2][y1-1]+s[x1-1][y1-1];\n}\nsigned main()\n{\n\tinit();\n\tfor(int i1=1;i1<=n;i1++)\n\t{\n\t\tbt.reset();\n\t\tv1=g[i1];\n\t\tbt.set(n+1); \n\t\tfor(int i2=i1;i2<=n;i2++)\n\t\t{\n\t\t\tfor(int j=0;j<g[i2].size();j++) bt.set(g[i2][j]);\n\t\t\tfor(int j=1;j<=n+1;j++)\n\t\t\t{\n\t\t\t\tif(bt[j-1]) las[j]=j-1;\n\t\t\t\telse las[j]=las[j-1];\n\t\t\t}\n\t\t\tfor(int j=n;j>=0;j--)\n\t\t\t{\n\t\t\t\tif(bt[j+1]) nxt[j]=j+1;\n\t\t\t\telse nxt[j]=nxt[j+1];\n\t\t\t}\n\t\t\tv2=g[i2];\n\t\t\tfor(int j1=nxt[0];j1<=n;j1=nxt[j1])\n\t\t\t{\n\t\t\t\tif(!bt[j1]) continue;\n\t\t\t\tint t1=lower_bound(v1.begin(),v1.end(),j1)-v1.begin();\n\t\t\t\tint t2=lower_bound(v2.begin(),v2.end(),j1)-v2.begin();\n\t\t\t\tif(t1==(int)v1.size()||t2==(int)v2.size()) break;\n\t\t\t\tfor(int j2=max(v1[t1],v2[t2]);j2<=n;j2=nxt[j2])\n\t\t\t\t{\n\t\t\t\t\tif(!bt[j2]) continue;\n\t\t\t\t\tint dn2=b2[j2]-b2[j1]+1,up2=b2[j1]-b2[las[j1]]-1+b2[nxt[j2]]-b2[j2]-1;\n\t\t\t\t\tint dn1=b1[i2]-b1[i1]+1;\n\t\t\t\t\tint up1=0;\n\t\t\t\t\tint l=0,r=i1-1;\n\t\t\t\t\twhile(l<r)\n\t\t\t\t\t{\n\t\t\t\t\t\tint mid=l+r+1>>1;\n\t\t\t\t\t\tif(get(mid,j1,i1-1,j2)) l=mid;\n\t\t\t\t\t\telse r=mid-1;\n\t\t\t\t\t}\n\t\t\t\t\tup1+=b1[i1]-b1[l]-1;\n\t\t\t\t\tl=i2+1,r=n+1;\n\t\t\t\t\twhile(l<r)\n\t\t\t\t\t{\n\t\t\t\t\t\tint mid=l+r>>1;\n\t\t\t\t\t\tif(get(i2+1,j1,mid,j2)) r=mid;\n\t\t\t\t\t\telse l=mid+1;\n\t\t\t\t\t}\n\t\t\t\t\tup1+=b1[l]-b1[i2]-1;\n\t\t\t\t\tup1+=dn1,up2+=dn2;\n\t\t\t\t\tif(dn1<=up2&&up1>=dn2||dn2<=up1&&up2>=dn1) ans++;\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans+1);\n\treturn 0;\n}\n/*\n5\n2 1\n12 0\n5 18\n14 5\n13 2\n*/\n```",
        "postTime": 1648969505,
        "uid": 218478,
        "name": "\u7f16\u7a0b\u5ba2",
        "ccfLevel": 7,
        "title": "P7153 [USACO20DEC] Square Pasture G \u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u679a\u4e3e\u4e00\u4e2a\u6b63\u65b9\u5f62\u4e2d\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u70b9\u3002\u8bb0\u5b83\u4eec\u7684\u5750\u6807\u5206\u522b\u4e3a$(x_i,y_i)$\u548c$(x_j,y_j)$\u3002\u90a3\u4e48\u5728\u8fd9\u4e2a\u6b63\u65b9\u5f62\u4e2d\u7684\u70b9$k$\u5fc5\u987b\u6ee1\u8db3$x_k\\in[x_i,x_b]$\uff0c$y_k\\in[y,y+x_j-x_i]$\uff0c\u5176\u4e2d$y\\in[\\max(y_i,y_j)-(x_j-x_i),\\min(y_i,y_j)]$\u3002\u6ce8\u610f\u6b64\u65f6\u6211\u4eec\u5fc5\u987b\u6ee1\u8db3$\\min(y_i,y_j)\\ge \\max(y_i,y_j)-(x_j-x_i)$\u3002\n\n\u6211\u4eec\u627e\u51fa\u6240\u6709\u6ee1\u8db3$x_k\\in(x_i,x_b)$\u7684\u70b9\uff0c\u5c06\u8fd9\u4e9b\u70b9\u6309\u7eb5\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7528two pointers\u626b\u4e00\u904d\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^3 \\log n)$\u3002\n\n```c++\n#include<bits/stdc++.h>\n#define mp make_pair\n#define F first\n#define S second\n#define pb push_back\n#define lson k<<1\n#define rson k<<1|1\n//#define getchar nc\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\nconst int INF = 0x3f3f3f3f;\nconst ll INF64 = 1e18;\n\ninline char nc(){\n\tstatic char buf[100005],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read(){\n\tchar ch=getchar(); int sum=0; int f=0;\n\twhile(!isdigit(ch)) f|=(ch=='-'),ch=getchar();\n\twhile(isdigit(ch)) sum=(sum<<1)+(sum<<3)+(ch^48),ch=getchar();\n\treturn f?-sum:sum;\n}\nconst int maxn=205;\nint n,ans,res;\t\nstruct Node{\n\tint x,y;\n}a[maxn];\nset<int>s;\ninline bool cmp(const Node &x,const Node &y){\n\tif(x.x==y.x) return x.y<y.y;\n\telse return x.x<y.x;\n}\ninline void work(){\n\tsort(a+1,a+1+n,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\ts.clear();\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tif(i<j-1) s.insert(a[j-1].y);\n\t\t\tint side=a[j].x-a[i].x;\n\t\t\tint minn=max(a[i].y,a[j].y)-side;\n\t\t\tint maxx=min(a[i].y,a[j].y);\n\t\t\tif(minn>maxx) continue;\n\t\t\tvector<int>vec(s.begin(),s.end());\n\t\t\tint len=vec.size(),l=0,r=-1; \n\t\t\twhile(l<len&&minn>vec[l]) l++;\n\t\t\twhile(r+1<len&&minn>=vec[r+1]-side) r++;\n\t\t\twhile(true){\n\t\t\t\tans++;\n\t\t\t\tint yl=min(a[i].y,a[j].y),yr=max(a[i].y,a[j].y);\n\t\t\t\tif(l<=r) yl=min(yl,vec[l]),yr=max(yr,vec[r]);\n\t\t\t\tif(yr-yl==side) res++;\n\t\t\t\tint newl=(l<len?vec[l]+1:INF);\n\t\t\t\tint newr=(r+1<len?vec[r+1]-side:INF);\n\t\t\t\tint tmp=min(newl,newr);\n\t\t\t\tif(tmp>maxx) break;\n\t\t\t\tif(newl==tmp) l++;\n\t\t\t\tif(newr==tmp) r++;\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tn=read(); ans=n+1;\n\tfor(int i=1;i<=n;i++) a[i].x=read(),a[i].y=read();\n\twork(); for(int i=1;i<=n;i++) swap(a[i].x,a[i].y); work();\n\tprintf(\"%d\\n\",ans-res/2);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1609169874,
        "uid": 54066,
        "name": "ybwowen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7153 \u3010[USACO20DEC] Square Pasture G\u3011"
    }
]