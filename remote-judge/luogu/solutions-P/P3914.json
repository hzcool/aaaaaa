[
    {
        "content": "[Youngsc](http://youngscc.github.io/)\n\n\u53c8WA\u53c8T\u53c8MLE\u4e86\u4e00\u8282\u8bfe\u7ec8\u4e8e\u641e\u51fa\u6765\u4e86\u8fd9\u9053\u9898\u3002\n\n\u8fd9\u9053\u9898\u5f88\u663e\u7136\u662f\u4e00\u9053\u6811\u5f62DP\uff0c\u800c\u4e14\u7528\u5230\u4e86\u7ec4\u5408\u6570\u5b66\u4e2d\u7684\u4e58\u6cd5\u539f\u7406\u3002\n\n\u4ee4$f[i][j]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u8fd9\u68f5\u5b50\u6811\u5728$i$\u4e3a\u989c\u8272$j$\u7684\u65f6\u5019\u7684\u65b9\u6848\u6570\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\u53ef\u5f97$f[i][j]=\u03c0f[k][c]$ \u5176\u4e2d$k$\u662f$i$\u7684\u6240\u6709\u513f\u5b50\uff0c$c$\u662f\u6240\u6709\u4e0e$j$\u4e0d\u540c\u7684\u989c\u8272\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u76f8\u5904\u4e00\u4e2a$O(n^3)$\u7684\u662f\u7b97\u6cd5\uff1a\u679a\u4e3e\u6240\u6709\u70b9\uff0c\u679a\u4e3e\u5b83\u7684\u989c\u8272\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u513f\u5b50\uff0c\u679a\u4e3e\u513f\u5b50\u7684\u989c\u8272\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\uff0c\u6240\u4ee5\u679a\u4e3e\u513f\u5b50\u7684\u90a3\u4e00\u5c42\u52a0\u4e0a\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4e00\u5171\u662f$O(n)$\u7684\u3002\n\n\u56de\u8fc7\u5934\u6765\u518d\u770b\u6570\u636e$n<=5000$,$m<=5000$\uff0c\u4e0a\u8ff0\u7684\u7b97\u6cd5\u4f3c\u4e4e\u8fd0\u884c\u8d77\u6765\u5f88\u5403\u529b\u3002\u90a3\u6211\u4eec\u9700\u8981\u5411\u4e00\u4e2a\u529e\u6cd5\u53bb\u5c06\u590d\u6742\u5ea6\u53d8\u6210$O(n^2)$\uff0c\u4ed4\u7ec6\u601d\u8003\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5176\u5b9e\u679a\u4e3e\u513f\u5b50\u90a3\u4e00\u5c42\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u6211\u53ea\u8981\u989c\u8272\u4e0d\u76f8\u540c\u7684\u603b\u6570\uff0c\u4e0e\u5176$O(m)$\u5730\u53bb\u6c42\u548c\uff0c\u4e0d\u5982\u4e4b\u524d\u5728\u679a\u4e3e\u5230\u5b83\u7684\u65f6\u5019\u5c31\u5904\u7406\u597d\u6240\u6709\u7684\u548c\uff0c\u7136\u540e$O(1)$\u5730\u53bb\u526a\u6389\u8fd9\u4e2a\u989c\u8272\uff0c\u4ece\u800c\u6c42\u51fa\u9664\u53bb\u8fd9\u4e2a\u989c\u8272\u5916\u7684\u65b9\u6848\u6570\uff0c\u8fbe\u5230$O(n^2)$\u7684\u590d\u6742\u5ea6\u3002\n\n\u8fd9\u9053\u9898\u8fd8\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u8fd9\u79cd\u601d\u60f3\u5728\u5f88\u591a\u65f6\u5019\u90fd\u80fd\u7528\u5f97\u4e0a\u3002\n\n\n### \u4ee3\u7801\u5728\u8fd9\u91cc\n\n\n```cpp\n# include <algorithm>\n# include <iostream>\n# include <cstring>\n# include <cstdio>\n# include <vector>\n# include <cmath>\n# define R register\n# define mod 1000000007\n\nusing namespace std;\n\nint e,n,m,f[5010][5010],h[5010],tot[5010],sum[5010],x,y,d;\nstruct pp{int v,pre;}ed[10010];\n\ninline void in(R int &a){\n    R char c = getchar();R int x=0, f=1;\n    while(!isdigit(c)) {if(c == '-') f=-1; c = getchar();}\n    while(isdigit(c)) x = (x<<1)+(x<<3)+c-'0',c = getchar();\n    a=x*f;\n}\n\ninline void add(R int x,R int y){\n    ed[++e] = (pp){y,h[x]};\n    h[x] = e;\n}\n\ninline void dfs(R int fa,R int x){//\u6811\u5f62DP\u4e00\u822c\u7528DFS\u6765\u5b9e\u73b0\n    for(R int i=h[x]; i; i=ed[i].pre)\n    {\n        R int p = ed[i].v;\n        if(p == fa) continue;\n        dfs(x,p);\n    }\n    for(R int j=1; j<=m; ++j)\n    {\n        if(!f[x][j]) continue;//\u6ca1\u6709\u8fd9\u79cd\u989c\u8272\n        for(R int i=h[x]; i; i=ed[i].pre)\n        {\n            R int p = ed[i].v;\n            if(p == fa) continue;\n            f[x][j] = 1LL*f[x][j]*(tot[p]-f[p][j])%mod;\n        }\n        while(f[x][j]<0) f[x][j] += mod;//\u4e0a\u8fb9(tot[p]-f[p][j])\u53ef\u80fd\u4f1a\u53d8\u6210\u8d1f\u6570\uff0c\u8fd9\u91cc\u628a\u5b83\u53d8\u56de\u6765\u3002\n        tot[x] = (1LL*tot[x]+1LL*f[x][j])%mod;\n    }\n}\n\ninline int yg(){\n    in(n),in(m);\n    for(R int i=1; i<=n; ++i)\n    {\n        in(sum[i]);\n        for(R int j=1; j<=sum[i]; ++j) in(d),f[i][d]++;\n    }\n    for(R int i=1; i<n; ++i)\n    {\n        in(x),in(y);\n        add(x,y),add(y,x);\n    }\n    add(0,1);//\u4e3a\u4e86\u597d\u5199\uff0c\u65b0\u5efa\u4e00\u4e2a\u539f\u70b9\u8fde\u54111\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u989d\u5916\u6c42tot[1]\u4e86\n    dfs(0,0);\n    cout << tot[1];//tot[1]\u5c31\u662f\u6700\u7ec8\u7684\u7b54\u6848\n}\n\nint youngsc = yg();\nint main(){;}\n```",
        "postTime": 1505729888,
        "uid": 36282,
        "name": "Youngsc",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3914 \u3010\u67d3\u8272\u8ba1\u6570\u3011"
    },
    {
        "content": "## \u9000\u5f79\u4ee5\u540e\u6765\u53d1\u9898\u89e3\n\nnoip2018\u524d\u4e00\u5929\u809d\u7684\uff0c\u5f53\u65f6\u95f2\u7684\u6ca1\u4e8b\u4eceGitHub\u7684\u5973\u88c5\u8bf1\u60d1\u51fa\u6765\u505a\u9898\uff0c\u7136\u540e\u8fdewa\u597d\u51e0\u53d1\uff0c\u611f\u89c9noip\u8981\u51c9\u3002\u73b0\u5728\u770b\u679c\u7136\u5982\u6b64\uff0c\u53ea\u6709\u51fa\u5206\u8fd9\u51e0\u5929\u8fd8\u80fd\u5728\u673a\u623f\u72d7\u7740\u3002\u3002\u3002\n\n\u8fd9\u9053\u9898\u662f\u9053\u50bb\u903c\u6811\u5f62dp\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u663e\u7136\n\n\u8bbe\u8ba1\u72b6\u6001$dp[i][j]$\u4e3a\u8282\u70b9$i$,\u989c\u8272\u4e3a$j$\u7684\u65b9\u6848\u6570\uff0c\u5219\u6709\n$$dp[i][j]=\\sum_{k=1,k!=j}^{m} dp[son][k]$$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e2adp\u662f$n^3$\u7684\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e00\u4e2a\u513f\u5b50\u4e0d\u540c\u989c\u8272\u7684\u6c42\u548c\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u603b\u548c\u7684\u65b9\u5f0f$O(1)$\u6c42\u51fa\u3002\u4e8e\u662f\u8fd9\u4e2adp\u53d8\u6210\u4e86\u5065\u5eb7\u7684$n^2$\n```\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int mod=1e9+7;\n\nstruct Edge\n{\n    int to,nxt;\n}e[10010];\nint head[5010],cnt;\n\nint num[5010];\n\nvoid addedge(int u,int v,int val=0)\n{\n    e[++cnt]=(Edge){v,head[u]};\n    head[u]=cnt;\n}\n\nint dp[5010][5010];\nint tot[5010];\nint n,m;\n\nvoid dfs(int now,int fa)\n{\n    for(int i=head[now];i;i=e[i].nxt)\n    {\n        int vs=e[i].to;\n        if(vs!=fa)\n        {\n            dfs(vs,now);\n            for(int j=1;j<=m;j++)\n            {\n                dp[now][j]=((long long)dp[now][j]*(tot[vs]-dp[vs][j]+mod)%mod)%mod;\n            }\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n        tot[now]+=dp[now][i];\n        tot[now]%=mod;\n    }\n}\n\n\n\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>num[i];\n        for(int j=1;j<=num[i];j++)\n        {\n            int col;\n            cin>>col;\n            dp[i][col]=1;\n        }\n    }\n    for(int j=1;j<n;j++)\n    {\n        int u,v;\n        cin>>u>>v;\n        addedge(u,v);\n        addedge(v,u);\n    }\n    dfs(1,0);\n    cout<<tot[1]<<endl;\n}\n\n```",
        "postTime": 1542000520,
        "uid": 53241,
        "name": "partychicken",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3914 \u3010\u67d3\u8272\u8ba1\u6570\u3011"
    },
    {
        "content": "    \u6211\uff0c\u6211\u7a76\u7adf\u8fd8\u8981MLE\u591a\u5c11\u6b21\u554a....\u4e0b\u4e00\u6b21MLE\u4f1a\u5728\u54ea\u4e2a\u5730\u65b9\uff0c\u4ee5\u4ec0\u4e48\u6837\u7684\u65b9\u5f0f\u88ad\u6765\u554a...\uff08\u2014\u2014\u65e5\u884c\u4e00\u5e26\u7684BOSS\uff09\n    \n\u5766\u767d\u800c\u8a00\uff0c\u8fd9\u4e00\u9898\u5bf9\u5f97\u8d77\u4ed6\u63d0\u9ad8\u52a0\u7701\u9009\u51cf\u7684\u96be\u5ea6\uff1b~~\u6211\u81ea\u8ba4\u81ea\u5df1\u662f\u4e2a\u5f88\u5112\u96c5\u968f\u548c\u7684\u4eba\u76f4\u5230\u6211\u5728\u8fd9\u4e00\u9898\u4e0a\u9762\u5361\u4e86\u4e24\u5929~~\u8fd9\u4e00\u9898\u4ece\u9898\u76ee\u5c31\u63d0\u793a\u6211\u4eec\u65b9\u6848\u603b\u6570\u4f1a\u76f8\u5f53\u7684\u5927\uff0c\u90a3\u4e48\u4e00\u4e2a\u4e2a\u679a\u4e3e\u51fa\u5177\u4f53\u7684\u65b9\u6848\u80af\u5b9a\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u5f97**\u76f4\u63a5\u5f97\u51fa\u65b9\u6848\u6570**\u3002~~\uff08\u5177\u4f53\u600e\u4e48\u6c42\u81ea\u884c\u767e\u5ea6\u6570\u5b66\u7684\u4e58\u6cd5\u539f\u7406\uff09~~\n\n\u6211\u4eec\u5047\u8bbe**DP[I][J]\u4e3ai\u8282\u70b9\u53d6\u989c\u8272j\u65f6\u6240\u6709\u7684\u503c\uff0cTOT[I]\u4e3a\u8fd9\u4e2a\u70b9\u6240\u6709\u7684\u65b9\u6848\u6570**\u7684\u8bdd\uff0c\u90a3\u4e48\n  \n    dp[\u5f53\u524d\u8282\u70b9cur][\u5404\u79cd\u989c\u8272j]*=(tot[cur\u7684\u5b50\u8282\u70b9]-dp[cur\u7684\u5b50\u8282\u70b9][\u4e0e\u524d\u9762\u5bf9\u5e94\u7684\u989c\u8272j]+mod)%mod;\n    tot[\u5f53\u524d\u8282\u70b9cur]+=dp[\u5f53\u524d\u8282\u70b9cur][\u5404\u79cd\u989c\u8272j]%mod;\n    \n\u7531\u4e8e**TOT\u53ef\u80fd\u4f1a\u51fa\u73b0\u6bd4DP\u8981\u5c0f\u7684\u60c5\u51b5**\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u52a0\u4e86\u4e2a\u6a21\u8fdb\u884c\u8d1f\u6570\u8f6c\u6b63\uff0c\u5c31\u7b97TOT\u6bd4DP\u8fd8\u8981\u5927\u4e5f\u4e0d\u8981\u7d27\uff0c\u56e0\u4e3a\u4e00\u4e2a\u88ab\u9664\u6570\u52a0\u4e0a\u9664\u6570\u5728\u9664\u4e8e\u9664\u6570\u662f\u4e0d\u4f1a\u5bf9\u4f59\u6570\u6709\u5f71\u54cd\u7684\u3002**\uff08\u5728\u6c42\u4f59\u6570\u7684\u65f6\u5019\u4e0d\u80fd\u7528ABS\uff01\uff01\uff09**\n\n\u4e3a\u4ec0\u4e48\u5f53\u4e00\u4e2a\u8282\u70b9i\u53d6\u989c\u8272j\u65f6\u6211\u4eec\u7528\u4e58\u800c\u4e0d\u662f\u52a0\u5462\uff1f\u6211\u8fd9\u91cc\u7684\u601d\u8def\u65f6\uff1b\u5148\u5c06**DP\u6570\u7ec4\u6240\u6709\u503c\u5b9a\u4e49\u4e3a0**~~\u5f53\u7136\u8fd9\u91cc\u4f60\u8981\u662fDP\u662f\u5168\u5c40\u6570\u7ec4\u5c31\u7528\u4e0d\u7740\u8fd9\u4e2a\u64cd\u4f5c~~\uff0c\u4e4b\u540e\u5982\u679c**\u8bfb\u5165\u5230\u8fd9\u4e2a\u8282\u70b9i\u80fd\u53d6\u989c\u8272j\u65f6\uff0c\u6211\u4eec\u5c31\u8ba9dp[i][j]=1**\u3002\u5f53\u7136\u4f60\u5728\u8ba1\u7b97\u7684\u65f6\u5019\u8fdb\u884c\u4e00\u4e2a\u7279\u5224\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\n\u65e2\u7136\u662f\u4e00\u4e2a\u6811\u5f62DP\uff0c\u90a3\u4e48\u6211\u4eecDFS\u4e0d\u5c31\u89e3\u51b3\u4e86\u5417\uff1f\u800c\u8fd9\u4e00\u9898\u7684\u6570\u503c\u5f88\u660e\u663e\u5c31\u7b97\u662f\u4e34\u65f6INT\u4e5f\u88c5\u4e0d\u4e0b\u7684\u8bdd\u6211\u4eec\u5b9a\u4e49Longlong\u5c31\u597d\u4e86\uff1f~~\u6240\u4ee5\u8bf4\u8fd9\u4e00\u9053\u84dd\u9898\u5c31\u662f\u900a\u5566...~~\n\n\u4f46\u662f\uff01\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8282\u70b9\u6570N\u4ee5\u53ca\u8fb9\u6570M\u90fd\u662f\u63a5\u8fd1\u751a\u81f3\u8fbe\u52305000\u7684\u503c\uff0c\u6211\u4eec\u7528DFS\u53c8\u6765\u4e2aLONG LONG\u7edd\u5bf9\u4f1a\u8d85\u8fc7\u9898\u76ee\u7684\u5185\u5b58\u6700\u5927\u9650\u5236\u3002~~( \u6240\u5e78\u8fd9\u4e00\u9898\u4f60\u5c31\u7b97\u8d85\u52c7\u7684\u5b9a\u4e49Longlong\u4e5f\u53ea\u662f\u5361\u6700\u540e\u4e00\u4e2a\u70b9)~~\n\n\u90a3\u600e\u4e48\u529e\uff1fINT\u7684\u8bdd\u88c5\u4e0d\u4e0bLonglong\u53c8\u592a\u5927\u4e86\u3002\u90a3\u6211\u4eec\u80fd\u4e0d\u80fd\u8ba9\u4ed6\u4e34\u65f6\u6210\u4e3aLONG LONG\u6570\u7ec4\uff0c\u7b49\u8ba1\u7b97\u5b8c\u540e\u518d\u8ba9\u4ed6\u53d8\u6210INT\u6570\u7ec4\u5462\uff1f\u53ef\u4ee5\uff01\u6211\u4eec\u53ea\u9700\u8981\u5728\u67d0\u4e2a\u5730\u65b9\u52a0\u4e0a \uff08long long\uff09\u5c31\u53ef\u4ee5\u8ba9\u4ed6\u4e34\u65f6\u62e5\u6709LONG LONG\u7684\u80fd\u529b\u3002\n\n```\ndp[cur][j]=((long long)dp[cur][j]*(tot[fl]-dp[fl][j]+mod)%mod)%mod;\n```\n\u6700\u540e\u662f\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1b\n\n  1.\u9898\u76ee\u8bf4\u8bfb\u5165\u65f6\u6700\u540eN-1\u884c\u4e3a\u8fb9\uff0c\u610f\u601d\u662f\u6307\u8fb9\u7684\u6570\u76ee\u56fa\u5b9a\u8981\u6bd4\u70b9\u7684\u6570\u91cf\u5c11\u4e00\u4e2a\uff0c\u8981\u662f\u4e0d\u6ce8\u610f\u8fd9\u4e00\u70b9\u7684\u8bdd\u6574\u4e2a\u7a0b\u5e8f\u662f\u6ca1\u529e\u6cd5\u8fdb\u884c\u4e0b\u53bb\u7684\u3002~~\uff08\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u4f1a\u77e5\u9053\uff09~~\n  \n  2.\u8fd9\u4e00\u9898\u7684\u6839\u8282\u70b9\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u662f1\u6240\u4ee5\u80fd\u76f4\u63a5\u4ece1\u5f00\u59cbDFS\uff0c\u4f46\u662f\u5982\u679c\u522b\u7684\u9898\u76ee\u7684\u8bdd\u4f60\u8fd8\u8981\u6ce8\u610f\u6839\u8282\u70b9\u7a76\u7adf\u662f\u8c01\u5728\u8fdb\u884c\u8ba1\u7b97\u3002\n  \n  3.\u5173\u4e8einline\u51fd\u6570\uff0c\u5b83\u4e0d\u50cf\u6b63\u5e38\u51fd\u6570\u5728\u8c03\u7528\u65f6\u5b58\u5728\u538b\u6808\u548ccall\u7684\u64cd\u4f5c\u800c\u662f\u4f1a\u628a\u7a0b\u5e8f\u4ee3\u7801\u76f4\u63a5\u5d4c\u5165\u5230\u8c03\u7528\u4ee3\u7801\u6bb5\u4e2d\uff0c\u901a\u4fd7\u70b9\u5c31\u662f\u589e\u52a0\u7a7a\u95f4\u5360\u7528\u51cf\u5c11\u65f6\u95f4\u5360\u7528\n  \n  4.\u5c31\u7b97TLEMLEWA\u540c\u65f6\u51fa\u73b0\u4e5f\u8981\u4fdd\u6301\u9547\u9759\uff0c\u8fd9\u79cd\u9898\u76ee\u6700\u5fcc\u8bb3\u5fc3\u6001\u70b8\u88c2\u3002\n  \n  ~~\u73b0\u5728\uff01\u5404\u4f4d\u89c2\u4f17\uff01\u5168\uff01\u4f53\uff01\u8d77\uff01\u7acb\uff01~~\n  \n  ```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int mod=1e9+7;\nint n,m,cnt=0;\nint head[5001];\nint dp[5001][5001];\nint tot[5001];\nstruct edge{\n    int to,nxt;\n}e[10001];//\u6811\u72b6DP\u4e13\u7528\u5b58\u8fb9\u6570\u7ec4 \ninline int read(){\n    int x=0; bool f=1; char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c=='-') f=0;\n    for(; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n    if(f) return x;\n    return 0-x;\n}   //\u7b80\u5355\u7684\u8bfb\u5165\u4f18\u5316\uff0c\u53ef\u4ee5\u603b\u8ba1\u5269\u4e0b1s\u591a\u7684\u65f6\u95f4\uff0c\u666e\u901a\u8bfb\u5165\u505a\u5f97\u5230\u5417\uff01\uff01\uff01\uff08\u9707\u58f0\uff09 \ninline void dfs(int cur,int pre)  //\u672c\u9898\u7684\u5173\u952e\u70b9\u6df1\u641cDFS,cur\u8868\u793a\u5f53\u524d\u70b9current,pre\u8868\u793a\u4e0a\u4e00\u4e2a\u70b9previous\n{\n    for (int i=head[cur];i;i=e[i].nxt)\n    {\n        int fl=e[i].to;  //\u786e\u7acb\u8fd9\u6761\u8fb9\u8054\u901a\u7684\u4e0b\u4e00\u4e2a\u70b9\n        if (fl!=pre)     //\u9884\u9632\u53ef\u80fd\u4f1a\u51fa\u73b0\u56de\u5230\u7236\u4eb2\u7684\u60c5\u51b5\n        {\n            dfs(fl,cur);    // \u5148\u5bf9\u5b50\u8282\u70b9\u8fdb\u884c\u8ba1\u7b97 \n            for (int j=1;j<=m;j++) dp[cur][j]=((long long)dp[cur][j]*(tot[fl]-dp[fl][j]+mod)%mod)%mod;     \n        }\n    }\n    for (int i=1;i<=m;i++)\n    {\n    \ttot[cur]+=dp[cur][i];\n    \ttot[cur]%=mod;\n    }\n}\ninline void add(int nmsl,int v)   //\u5fc3\u5e73\u6c14\u548c\u7684\u5b58\u8fb9\uff0ckono \u94fe\u5f0f\u524d\u5411\u661f da\uff01\n{\n    e[++cnt].to=v;\n    e[cnt].nxt=head[nmsl];\n    head[nmsl]=cnt;\n}\nint main()\n{\n    n=read(),m=read();\n    for (int i=1;i<=n;i++)   // \n    {\n        int faq;\n        faq=read();\n        for (int j=1;j<=faq;j++)\n        {\n            int k;\n            k=read();\n            dp[i][k]=1;\n        }\n    }\n    for (int i=1;i<n;i++)//\u5112\u96c5\u968f\u548c\u7684\u8bfb\u5165,\u7531\u9898\u610f\u53ef\u5f97\u8fb9\u7684\u6570\u91cf\u6bd4\u70b9\u7684\u6570\u91cf\u5c11\u4e00\u4e2a \n    {\n        int rz,lm;\n        rz=read(),lm=read();\n        add(rz,lm);\n        add(lm,rz);\n    }\n    dfs(1,0);   //\u6839\u8282\u70b9\u6765\u81ea\u4ed6\u81ea\u5df1\uff0c\u56e0\u6b64\u6211\u4eecDFS\u7684\u662f1\uff0c0 \n    cout<<tot[1];\n    return 0;\n}\n//\u672c\u9898\u8f6c\u79fb\u65b9\u7a0b\uff1bdp[\u5f53\u524d\u8282\u70b9cur][\u5404\u79cd\u989c\u8272j]*=(tot[\u5b50\u8282\u70b9]-dp[\u5b50\u8282\u70b9][\u4e0e\u524d\u9762\u5bf9\u5e94\u7684\u989c\u8272j]+mod)%mod;\n//tot[\u5f53\u524d\u8282\u70b9cur]+=dp[\u5f53\u524d\u8282\u70b9cur][\u5404\u79cd\u989c\u8272j]%mod; \n//tot\u8868\u793a\u65b9\u6848\u603b\u6570\uff0cdp\u8868\u793a\u6bcf\u4e2a\u8282\u70b9\u67d3\u6210\u5bf9\u5e94\u989c\u8272\u65f6\u62e5\u6709\u7684\u65b9\u6848\u6570\n```\n\n\u5173\u4e8e\u94fe\u5f0f\u524d\u5411\u661f\uff1b\n\n\u6211\u4eec\u9700\u8981\u7528\u5230\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4e\u548c\u4e00\u4e2a~~\u4e00\u822c\u8def\u8fc7~~\u6570\u7ec4head\uff0c\u5176\u4e2d**head\u7528\u6765\u8868\u793a\u4ee5i\u4e3a\u8d77\u70b9\u7684\u7d22\u5f15\u7684\u7b2c\u4e00\u6761\u8fb9\u5b58\u50a8\u7684\u4f4d\u7f6e**\uff0ce\u4e2d\u7684**nxt\u7528\u4e8e\u8868\u793a\u4e0e\u7b2ci\u6761\u8fb9\u540c\u8d77\u70b9\u7684\u4e0b\u4e00\u6761\u8fb9\u7684\u5b58\u50a8\u4f4d\u7f6e**\uff0c\u800c**to\u7528\u4e8e\u50a8\u5b58\u8fd9\u4e00\u6761\u8fb9\u6240\u901a\u5411\u7684\u70b9**\uff0c\n\n\u94fe\u5f0f\u524d\u5411\u661f\u7684\u6700\u5927\u4f18\u70b9\u662f\uff1b\u53ef\u4ee5\u89e3\u51b3\u67d0\u4e9b\u5361\u7a7a\u95f4\u7684\u95ee\u9898\uff0c\u5220\u9664\u8fb9\u4e5f\u5f88\u65b9\u4fbf\uff0c\u53ea\u9700\u8981\u66f4\u6539next\u6307\u9488\u7684\u6307\u5411\u5373\u53ef ~~\u4f46\u662f\u5bf9\u4e8e\u6700\u540e\u4e00\u4e2a\u70b9\u5b8c\u5168\u6728\u5927~~\n\n\u4ee5\u4e0a\u5173\u4e8e\u94fe\u5f0f\u524d\u5411\u661f\u7684\u5185\u5bb9\u5f15\u7528\u4e8e\uff1bhttps://www.jianshu.com/p/107a645797a6\n\nRewrite in 2019.9.19\n",
        "postTime": 1568613273,
        "uid": 104409,
        "name": "huanzi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3914 \u3010\u67d3\u8272\u8ba1\u6570\u3011"
    },
    {
        "content": "\u9996\u5148$O(n^3)$\u7684\u52a8\u89c4\u5f88\u597d\u60f3\uff1a\n\nf[u][i]\u4e3au\u53f7\u8282\u70b9\u989c\u8272\u4e3ai\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\n\n$f[u][i]=\\prod_{v=son[u]}(\\sum_{k=AvailableColorOf[v]} f[v][k]),k!=i$\n\n\u53ea\u9700\u8981\u5728dfs\u91cc\u9762\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9,\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u679a\u4e3e\u6bcf\u4e00\u4e2a\u513f\u5b50\u7684\u989c\u8272\n\n\u7531\u4e8e\u5bf9\u6811\u7684\u904d\u5386\u662f$O(n)$,\u904d\u5386\u5230\u6bcf\u4e00\u4e2a\u70b9\u540e\u8981\u904d\u5386\u5176\u6240\u6709\u513f\u5b50\u82b1\u8d39$O(n)$,\u5bf9\u4e8e\u6bcf\u4e2a\u513f\u5b50\u8981\u904d\u5386\u5176\u989c\u8272\u82b1\u8d39$O(n)$,\u56e0\u6b64\u662f$O(n^3)$\n\n\n(~~\u8003\u8bd5\u7684\u65f6\u5019\u5c31\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u7b97\u9519\u4e86,\u6839\u672c\u5c31\u6ca1\u60f3\u5230\u8981\u4f18\u5316~~)\n\n$O(n^3)$:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define loop(i,start,end) for(int i=start;i<=end;++i)\n#define anti_loop(i,start,end) for(int i=start;i>=end;--i)\n#define clean(arry,num) memset(arry,num,sizeof(arry))\n#define ll long long\n#define isdegit(a) ((a>='0'&&a<='9'))\n\ntemplate<typename T>void read(T &x){\n\tx=0;char r=getchar();T neg=1;\n\twhile(!isdegit(r)){if(r=='-')neg=-1;r=getchar();}\n\twhile(isdegit(r)){x=(x<<1)+(x<<3)+r-'0';r=getchar();}\n\tx*=neg;\n}\n\nconst int maxn=5010,maxm=5010,mod=1e9+7;\nll f[5010][5010],cnt=0;\nstruct node{\n\tint e;\n\tint nxt;\n}edge[maxn<<2];\nint head[maxn];\nll n,m;\nvector<ll>vec[maxn];\n\ninline void addl(int u,int v){\n    edge[cnt].e=v;\n    edge[cnt].nxt=head[u];\n    head[u]=cnt++;\n}\n\nint dfs(int fa,int u,int col){\n    if(f[u][col]){\n        return f[u][col];\n    }\n    f[u][col]=1;\n    for(int i=head[u];i!=-1;i=edge[i].nxt){\n        int v=edge[i].e;\n        if(v==fa)\n            continue;\n        ll res=0;\n        vector<ll>::iterator t;\n        for(t=vec[v].begin();t!=vec[v].end();++t){\n            if(*t==col)\n                continue;\n            res+=dfs(u,v,*t);\n            res%=mod;\n        }\n        f[u][col]*=res;\n        f[u][col]%=mod;\n    }\n    f[u][col]%=mod;\n    return f[u][col];\n}\n\nint main(){\n\tclean(head,-1);\n\tclean(f,0);\n\tread(n);\n\tread(m);\n\tll nfc=0,c;\n\tloop(i,1,n){\n\t\tread(nfc);\n\t\tloop(j,1,nfc){\n\t\t\tread(c);\n\t\t\tvec[i].push_back(c);\n\t\t}\n\t}\n\tloop(i,1,n-1){\n\t    read(nfc);\n\t    read(c);\n\t    addl(c,nfc);\n\t    addl(nfc,c);\n\t}\n    ll res=0;\n    for(vector<ll>::iterator t=vec[1].begin();t!=vec[1].end();++t){\n        res=(res+dfs(0,1,*t))%mod;\n        res%=mod;\n    }\n\tprintf(\"%lld\\n\",res%mod);\n\n\treturn 0;\n}\n```\n\u4f18\u5316:\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u80af\u5b9a\u53ef\u4ee5T\u98de(60pts)\n\n\u8bbesum[u]\u4e3au\u7684\u6240\u6709\u65b9\u6848\u6570,f[u][i]\u4e3au\u6d82\u4e0ai\u7684\u65b9\u6848\u6570\n\n\u5bb9\u6613\u6709:\n\n$sum[u]=\\sum_{i=AvailableColorOf[u]} f[u][i]$\n\n$sum[u]=\\prod_{v=son[u]}\\sum_{i=AvailableColorOf[v]}f[v][i]$\n\n\u7531\u4e8e\u4e00\u6b21\u5bf9\u67d0\u4e2a\u8282\u70b9\u7684dfs\u5c31\u53ef\u4ee5\u7b97\u51fa\u5176\u6240\u6709\u7684\u6807\u8bb0,\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u8fd9\u4e9b\u6807\u8bb0\u6765\u7701\u6389\u679a\u4e3e\u513f\u5b50\u989c\u8272\u7684\u90a3\u4e00\u5c42:\n- \u65b9\u6cd5\u4e00:\n\n$f[u][i]=\\sum_{v=son[u],i=AvailableColorOf[u]} (sum[v]-f[v][i])$\n\n- \u65b9\u6cd5\u4e8c:\n\n$f[u][i]=\\frac{\\prod_{v=son[u]}sum[v]}{\\prod_{v=son[u]}f[v][i]}$\n\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u8981\u6c42\u4e00\u4e2a\u9006\u5143,\u9700\u8981\u7528\u5230\u5feb\u901f\u5e42(\u4e5f\u53ef\u52a0\u4e0aexgcd)\n\n\u4e8e\u662f\u4f18\u5316\u6210\u4e86$O(n^2)$\n\n\n$O(n^2)$\u65b9\u6cd5\u4e00:\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define loop(i,start,end) for(int i=start;i<=end;++i)\n#define anti_loop(i,start,end) for(int i=start;i>=end;--i)\n#define clean(arry,num) memset(arry,num,sizeof(arry))\n#define ll int\n#define LL long long\n#define isdegit(a) ((a>='0'&&a<='9'))\n\ntemplate<typename T>void read(T &x){\n\tx=0;char r=getchar();T neg=1;\n\twhile(!isdegit(r)){if(r=='-')neg=-1;r=getchar();}\n\twhile(isdegit(r)){x=(x<<1)+(x<<3)+r-'0';r=getchar();}\n\tx*=neg;\n}\n\nconst int maxn=5000+10,maxm=5000+10,mod=1e9+7;\nll f[maxn][maxn],cnt=0,sum[maxn];\nstruct node{\n\tint e;\n\tint nxt;\n}edge[maxn<<2];\nint head[maxn];\nll n,m;\n\ninline void addl(int u,int v){\n    edge[cnt].e=v;\n    edge[cnt].nxt=head[u];\n    head[u]=cnt++;\n}\n\nvoid dfs(int fa,int u){\n\tfor(int i=head[u];i!=-1;i=edge[i].nxt){\n\t\tint v=edge[i].e;\n\t\tif(v==fa)\n            continue;\n\t\tdfs(u,v);\n        loop(col,1,m){\n            if(f[u][col])\n\t\t\t\tf[u][col]=((LL)f[u][col]*((sum[v]-f[v][col])%mod+mod)%mod)%mod;\n        }\n\t}\n\tloop(col,1,m)\n\t\tsum[u]=(sum[u]+f[u][col])%mod;\n}\n\nint main(){\n\tclean(head,-1);\n\tclean(f,0);\n\tread(n);\n\tread(m);\n\tll nfc=0,c;\n\tloop(i,1,n){\n\t\tread(nfc);\n\t\tloop(j,1,nfc){\n\t\t\tread(c);\n\t\t\tf[i][c]=1;\n\t\t}\n\t}\n\tloop(i,1,n-1){\n\t    read(nfc);\n\t    read(c);\n\t    addl(c,nfc);\n\t    addl(nfc,c);\n\t}\n    dfs(0,1);\n\tprintf(\"%d\\n\",sum[1]);\n\n\treturn 0;\n}\n\n```\n\n$O(n^2)$\u65b9\u6cd5\u4e8c:\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn=5050;\nconst int mod=1000000007;\n\nstruct Edge\n{\n\tint e,nx;\n}edge[maxn*2];\nint head[maxn],cnt;\n\nint dp[maxn][maxn];\n\nvoid add(int s,int e)\n{\n\tedge[cnt].e=e;\n\tedge[cnt].nx=head[s];\n\thead[s]=cnt++;\n}\nint exp(int a,int b,int m)\n{\n\tint ans=1;\n\twhile(b)\n\t{\n\t\tif(b&1)ans=(long long)ans*a%m;\n\t\ta=(long long)a*a%m;\n\t\tb>>=1;\n\t}\n\treturn ans;\n}\n\nint N,M;\nint can[1000010];\nint L[maxn],R[maxn];\nbool vis[maxn][maxn];\nint sum[maxn];\n\nvoid dfs(int x,int fa)\n{\n\tint total=1;\n\tfor(int i=head[x];i!=-1;i=edge[i].nx)\n\t\tif(edge[i].e!=fa)\n\t\t{\n\t\t\tdfs(edge[i].e,x);\n\t\t\ttotal=(long long)total*sum[edge[i].e]%mod;\n\t\t}\n    for(int i=1;i<=M;i++)\n        if(vis[x][i])\n            dp[x][i]=total;\n        else\n            dp[x][i]=0;\n\tfor(int i=head[x];i!=-1;i=edge[i].nx)\n\t\tif(edge[i].e!=fa)\n\t\t{\n\t\t\tint e=edge[i].e;\n\t\t\tint inv=exp(sum[e],mod-2,mod);\n\t\t\tfor(int j=L[e];j<=R[e];j++)\n\t\t\t\tif(vis[x][can[j]])\n\t\t\t\t{\n\t\t\t\t\tdp[x][can[j]]=(long long)dp[x][can[j]]*inv%mod;\n\t\t\t\t\tdp[x][can[j]]=(long long)dp[x][can[j]]*(sum[e]-dp[e][can[j]]+mod)%mod;\n\t\t\t\t}\n\t\t}\n\tsum[x]=0;\n\tfor(int i=1;i<=M;i++)sum[x]=(sum[x]+dp[x][i])%mod;\n}\n\nint main()\n{\n\tscanf(\"%d %d\",&N,&M);\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tint c;\n\t\tscanf(\"%d\",&c);\n\t\tL[i]=R[i-1]+1;\n\t\tfor(int j=0;j<c;j++)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tcan[L[i]+j]=x;\n\t\t\tvis[i][x]=1;\n\t\t}\n\t\tR[i]=L[i]+c-1;\n\t}\n\tmemset(head,-1,sizeof(head));cnt=0;\n\tfor(int i=1;i<N;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tadd(a,b);\n\t\tadd(b,a);\n\t}\n\tdfs(1,-1);\n\tprintf(\"%d\\n\",sum[1]);\n    return 0;\n}\n\n```\n",
        "postTime": 1565746205,
        "uid": 109378,
        "name": "Andrew82",
        "ccfLevel": 4,
        "title": "\u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u4f60\u4e00\u9897 $n$ \u7684\u6811\uff0c\u4ee5\u53ca $m$ \u79cd\u989c\u8272\uff0c\u518d\u544a\u8bc9\u4f60\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u7528\u54ea\u4e9b\u989c\u8272\uff0c\u4f46\u662f\u76f8\u90bb\u7684\u4e24\u4e2a\u70b9\u989c\u8272\u4e0d\u80fd\u76f8\u540c\uff0c\u6c42\u65b9\u6848\u6570\u3002\n\n## \u601d\u8def\n\n\u770b\u5230\u8fd9\u79cd\u9898\uff0c\u6811\u5f62\u52a8\u6001\u89c4\u5212\u65e0\u7591\u4e86\u3002\n\n- \u72b6\u6001\u5b9a\u4e49\uff1a\u72b6\u6001\u5f88\u597d\u60f3\uff0c\u5176\u5b9e\u6709\u4e2a\u53d6\u5de7\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u6765\u5b9a\u4e49\u3002\u5b9a\u4e49 $f(i,j)$ \u4e3a\u7b2c $i$ \u4e2a\u70b9\u7528 $j$ \u8fd9\u79cd\u989c\u8272\u7684\u65b9\u6848\u6570\u3002\n\n- \u66b4\u529b\uff1a\u5199\u4e00\u4e2a\u6734\u7d20\u7684\u6811\u5f62\u52a8\u89c4\uff0c\u679a\u4e3e\u5f53\u524d\u70b9\u7684\u989c\u8272\u548c\u5b50\u8282\u70b9\u7684\u989c\u8272\uff0c\u5916\u9762\u8fd8\u6709\u4e00\u5c42\u9012\u5f52\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm^2)$\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\n\n- \u4f18\u5316\uff1a\u4e00\u822c\u6765\u8bf4\uff0c\u52a8\u6001\u89c4\u5212\u7684\u4f18\u5316\u662f\u4e0d\u53ef\u4ee5\u5c06\u679a\u4e3e\u7684\u72b6\u6001\u4f18\u5316\u6389\u7684\uff0c\u5c31\u50cf\u6b64\u9898\uff0c\u6211\u4eec\u662f\u65e0\u6cd5\u5c06\u5916\u5c42\u9012\u5f52\u548c\u679a\u4e3e\u5f53\u524d\u7684\u989c\u8272\u4f18\u5316\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8981\u4f18\u5316\u6389\u679a\u4e3e\u5b50\u8282\u70b9\u7684\u989c\u8272\u3002\u56e0\u4e3a\u53ea\u6709\u5b50\u8282\u70b9\u7684\u989c\u8272\u4e0e\u5f53\u524d\u8282\u70b9\u76f8\u540c\u7684\u65f6\u5019\u624d\u4f1a\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u6240\u4ee5\u7528\u524d\u7f00\u548c\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u65b9\u6848\u6570\u7edf\u8ba1\u8d77\u6765\uff0c\u5f53\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5c31\u51cf\u53bb\u8fd9\u79cd\u60c5\u51b5\uff0c\u5176\u4f59\u4e0d\u53d8\uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u7684\u65f6\u95f4\u5c31\u662f $O(nm)$ \u7684\uff0c\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n- \u6ce8\u610f\uff1a\u53d6\u6a21\u7684\u65f6\u5019\u8981\u5148\u52a0\u4e0a\u6a21\u6570\u5728\u53d6\u6a21\uff0c\u6ce8\u610f\u7a7a\u95f4\u3002\n\n## AC Code\n\n```cpp\n\n#include<bits/stdc++.h>\n#define int long long\n#define x first\n#define y second\nusing namespace std;\ntypedef pair<int,int> pii;\nconst int N=5e3+10,M=N*2,mod=1e9+7;\nint n,m;\nint s[N];\nint f[N][N];\nint h[N],idx=0;\nstruct Node{\n\tint to,ne;\n}tr[M];\nvoid add(int u,int v){\n\ttr[idx].to=v,tr[idx].ne=h[u],h[u]=idx++;\n}\nvoid dfs(int u,int fa){\n\tfor(int i=h[u];i!=-1;i=tr[i].ne){\n\t\tint to=tr[i].to;\n\t\tif(to==fa) continue;\n\t\tdfs(to,u);\n\t\tfor(int j=1;j<=m;j++) f[u][j]=((long long)f[u][j]*(s[to]-f[to][j]+mod)%mod)%mod;\n\t}\n\tfor(int i=1;i<=m;i++) s[u]=(s[u]+f[u][i])%mod;\n}\nsigned main(){\n\tmemset(h,-1,sizeof h);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tcin>>x;\n\t\tfor(int j=1;j<=x;j++){\n\t\t\tint a;\n\t\t\tcin>>a,f[i][a]=1;\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tadd(u,v),add(v,u);\n\t}\n\tdfs(1,0);\n\tcout<<s[1]<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1673850050,
        "uid": 706523,
        "name": "zhengdongwen",
        "ccfLevel": 0,
        "title": "P3914  \u9898\u89e3"
    },
    {
        "content": "\u4e5f\u8bb8\u4f60\u53d1\u73b0\u6211\u548c\u8fd9\u91cc\u6709\u67d0\u4e9b\u9898\u89e3\u957f\u5f97\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u771f\u7684\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u6211\u7684\u4ee3\u7801\u91cf\u53d8\u957f\u4e86\u3002\u3002\n\n\u9996\u5148\u5b83\u5c31\u662f\u4e00\u9053\u7b80\u7b80\u5355\u5355\u7684\u6811\u5f62 DP\uff0c\u72b6\u6001\uff0c\u8f6c\u79fb\uff0c\u8fd9\u4e9b\u76f8\u4f3c\u7684\u9898\u5728\u6d1b\u8c37\u4e0a\u4e00\u6293\u4e00\u5927\u628a\u3002\u8bf4\u7b80\u5355\u4e00\u70b9\uff0c\u8fd9\u5c31\u662f\u7b80\u7b80\u5355\u5355\u7684\u52a8\u6001\u89c4\u5212\u52a0\u4e0a\u7b80\u7b80\u5355\u5355\u7684\u6df1\u641c\uff0c\u53ea\u8981\u4f60\u5b66\u8fc7\u54ea\u6015\u4e00\u70b9\u70b9\uff0c\u5c31\u4f1a\u628a\u8fd9\u9053\u9898~~\u8f7b\u8f7b\u677e\u677e\u4e00\u904d\u8fc7~~\u3002\n\n\u4f46\u662f\u6211\u4eec\u8981\u7741\u5927\u81ea\u5df1\u7684\u72d7\u773c\u770b\u770b\u8bc4\u6d4b\u8bb0\u5f55\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u57fa\u672c\u6240\u6709\u7684\u4eba\u90fd\u60e8\u906d MLE\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528 long long \u7684\u6570\u7ec4\u3002\n\n\u95ee\u9898\u662f\u627e\u5230\u4e86\uff0c\u4f46\u662f\u600e\u4e48\u89e3\u51b3\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a long long \u7684\u53d8\u91cf\uff0c\u5b58\u653e\u5373\u5c06\u8d4b\u7684\u503c\uff0c\u6700\u540e\u5728\u8d4b\u503c\u7684\u65f6\u5019\u8f6c\u5316\u4e3a int \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u5927\u5bb6\u7406\u89e3\uff0c\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u6817\u5b50\uff1a\n```\nint a[10];\nlong long Now;\nNow=123;\nNow+=123456789999;\nNow-=123456700000;\na[1]=(int)Now;\n```\n\u73b0\u5728\u5927\u5bb6\u5e94\u8be5\u77e5\u9053\u81ea\u5df1\u4e3a\u4ec0\u4e48\u70b8\u4e86\u3002\n\n\u7136\u540e\u8bf4\u4e00\u4e0b\u53d6\u6a21\uff0c\u7ecf\u8fc7\u4e86\u8d1f\u6570\u53d6\u6a21\u7684\u6559\u8bad\u4e4b\u540e\uff0c\u6211\u4eec\u5fc5\u987b\u5199\u6210\uff1a\n```\nx=(x+MOD)%MOD;\n```\n\u8fd9\u662f\u56e0\u4e3a\u8d1f\u6570\u53d6\u6a21\u5728 C++ \u91cc\u9762\u548c\u6570\u5b66\u4e0d\u592a\u4e00\u6837,\u4e0d\u4fe1\u5c31\u62ff $-1$ \u8bd5\u8bd5\u3002\n\n\u6700\u540e\u6211\u7ed9\u5927\u5bb6\u8bf4\u4e00\u4e0b\u672c\u9898\u52a8\u6001\u89c4\u5212\u3002\u5047\u8bbe $f[i][j]$ \u4e3a $i$ \u8282\u70b9\u53d6\u989c\u8272 $j$ \u65f6\u6240\u6709\u7684\u503c\uff0c$sum[i]$ \u4e3a\u8fd9\u4e2a\u70b9\u6240\u6709\u7684\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7b80\u5355\u63a8\u51fa\uff1a\n```\nf[\u5f53\u524d\u8282\u70b9][\u989c\u8272]*=(sum[\u5f53\u524d\u8282\u70b9\u5b50\u8282\u70b9]-df[\u5f53\u524d\u8282\u70b9\u5b50\u8282\u70b9][\u5bf9\u5e94\u989c\u8272]+MOD)%MOD;\nsum[\u5f53\u524d\u8282\u70b9]+=f[\u5f53\u524d\u8282\u70b9][\u989c\u8272]%MOD;\n```\n\u4e3a\u4e86\u5b8c\u6210 long long\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 Now \u8bb0\u5f55\uff0c\u8f6c\u5316\u4e3a\u4ee3\u7801\u5c31\u662f\uff1a\n```\nNow=(long long)((sum[G[i].next_to]-f[G[i].next_to][j])%MOD+MOD)%MOD;\nNow=(long long)f[x][j]*Now%MOD;\nf[x][j]=(int)Now;\n```\n\u518d\u8fdb\u884c\u5408\u7406\u7684\u6536\u5c3e\u5904\u7406\uff0c\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u4e0d\u59a8\u4eae\u4e00\u4e0b\u4ee3\u7801\uff1a\n```\nvoid F(int x,int y)\n{\n\tG[++k].Next=Top[x];\n\tG[k].next_to=y;\n\tTop[x]=k;\t\n}\nvoid dfs(int x,int y)\n{\n\tlong long Now=0;\n\tfor(int i=Top[x];i;i=G[i].Next)\n\t{\n\t\tif(G[i].next_to!=y)\n\t\t{\n\t\t\tdfs(G[i].next_to,x);\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tNow=(long long)((sum[G[i].next_to]-f[G[i].next_to][j])%MOD+MOD)%MOD;\n\t\t\t\tNow=(long long)f[x][j]*Now%MOD;\n\t\t\t\tf[x][j]=(int)Now;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tsum[x]=(sum[x]+f[x][i])%MOD;\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\tcin>>x;\n\t\tfor(int j=1;j<=x;j++)\n\t\t{\n\t\t\tint y;\n\t\t\tcin>>y;\n\t\t\tf[i][y]=1;\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tF(x,y);\n\t\tF(y,x);\n\t}\n\tdfs(1,0);\n\tcout<<sum[1];\n\treturn 0;\n}\n```",
        "postTime": 1644232132,
        "uid": 439177,
        "name": "Super_Sheep",
        "ccfLevel": 0,
        "title": "P3914\u9898\u89e3"
    },
    {
        "content": "# \u9898\u9762\n[\u67d3\u8272\u8ba1\u6570](https://www.luogu.com.cn/problem/P3914)\n# \u9898\u89e3\n\u663e\u800c\u6613\u89c1\u7684\u6811\u5f62Dp\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u4e2a\u70b9\u53ea\u4f1a\u548c\u5b83\u7684\u7236\u4eb2\u76f8\u90bb\uff0c\u6240\u4ee5\u8981\u8ba9\u76f8\u90bb\u7684\u989c\u8272\u4e0d\u540c\uff0c\u53ea\u9700\u8981\u8003\u8651\u67d0\u4e2a\u70b9\u548c\u5b83\u7236\u4eb2\u7684\u5173\u7cfb\u5c31\u597d\u4e86\u3002\n\n\u800c\u4e00\u4e2a\u70b9\u7684\u513f\u5b50\u4e4b\u95f4\u662f\u6ca1\u6709\u76f8\u4e92\u5f71\u54cd\u7684\uff0c\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u4e8b\u4ef6\uff0c\u6240\u4ee5\u7528\u4e58\u6cd5\u539f\u7406\u5c31\u53ef\u4ee5\u6c42\u51fa\u8fd9\u4e9b\u70b9\u7236\u4eb2\u7684\u65b9\u6848\u6570\u3002\n\n\u6240\u4ee5\u6211\u4eecDp\u7684\u57fa\u672c\u6846\u67b6\u5c31\u6709\u4e86\u3002\n\n\u5982\u679c\u6211\u4eec\u8fd9\u6837\u5199\u7684\u8bdd\uff1a\n```cpp\nfor(int p = 0; p < color[x].size(); p++)\n\tfor(int q = 0; q < color[y].size(); q++) {\n\t\tif(color[x][p] == color[y][q]) continue;\n```\n\u663e\u7136\u5c31\u53d8\u6210 $n^3$ \u4e86\uff0c\u8003\u8651\u4f18\u5316\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u628a $y$ \u7684\u603b\u65b9\u6848\u6570\u7684\u548c\u6c42\u51fa\u6765\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u5230\u7684\u72b6\u6001\u7684\u65b9\u6848\u6570\u5c31\u662f\uff1a\n$$tot_y - dp[y][j]$$\n\u610f\u601d\u5c31\u662f\u603b\u7684\u65b9\u6848\u6570\uff0c\u51cf\u53bb\u548c\u7236\u4eb2\u989c\u8272\u76f8\u540c\u7684\u65b9\u6848\u6570\u3002\n\n\u8fd9\u6837\u6bcf\u6b21\u5c31\u80fd $O(1)$ \u6c42\u51fa\u6211\u4eec\u8981\u7528\u7684\u72b6\u6001\uff0c\u4e0d\u7528\u518d\u53bb\u679a\u4e3e\u4e86\uff0c\u4e0d\u61c2\u5f97\u5730\u65b9\u53ef\u4ee5\u53c2\u7167\u4ee3\u7801\u7406\u89e3\u3002\n\n# \u4ee3\u7801\n\n\u52a0\u4e86\u6ce2\u5e38\u6570\u4f18\u5316\uff0c\u51b2\u4e0a\u4e86 rank1\u3002\n\n```cpp\n#include<cstdio>\n#include<ctype.h>\n\n#define re register\n\nconst int N = 5e3 + 5, mod = 1e9 + 7;\n\nint n, m, dp[N][N], tot[N];\n\nstruct edge {\n\t#define M N << 1\n\tint head[N], next[M], to[M], size;\n\tinline void add(int u,int v) {\n\t\tnext[++size] = head[u];\n\t\tto[size] = v; head[u] = size;\n\t\tnext[++size] = head[v];\n\t\tto[size] = u; head[v] = size;\n\t}\n\tvoid dfs(int x,int fa) {\n\t\tfor(re int i = head[x], y; i; i = next[i]) {\n\t\t\tif((y = to[i]) == fa) continue;\n\t\t\tdfs(y,x);\n\t\t\tfor(int j = 1; j <= m; j++)\n\t\t\t\tdp[x][j] = 1ll * dp[x][j] * (tot[y] - dp[y][j] + mod) % mod; \n\t\t}\n\t\tfor(re int i = 1; i <= m; i++)\n\t\t\ttot[x] = (tot[x] + dp[x][i]) % mod;\n\t}\n}a;\n\ninline int read() {\n\tre int x = 0, f = 1, c = getchar();\n\tfor(; !isdigit(c); c = getchar())\n\t\tif(c == '-') \n\t\t\tf = -1;\n\tfor(; isdigit(c); c = getchar())\n\t\tx = x * 10 + c - 48;\n\treturn x * f;\n}\n\nint main() {\n\tn = read(), m = read();\n\tfor(re int i = 1; i <= n; i++) \n    {\n\t\tint tot = read();\n\t\twhile(tot--) dp[i][read()] = 1;\n\t}\n\tfor(re int i = 1; i < n; i++)\n\t\ta.add(read(), read());\n\ta.dfs(1,0);\n\tprintf(\"%d\\n\",tot[1]);\n\treturn 0;\n}\n```",
        "postTime": 1623068007,
        "uid": 385145,
        "name": "\u795e\u7737\u4e4b\u6a31\u82b1",
        "ccfLevel": 4,
        "title": "P3914 \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\uff1a[P3914](https://www.luogu.com.cn/problem/P3914)\n\n## 1. \u524d\u8a00\n\n\u672c\u9898\u601d\u7ef4\u7b80\u5355\uff0c\u4f46\u662f\u601d\u7ef4\u8fc7\u7a0b\u548c\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4ee5\u8bf4\u662f\u6811\u5f62DP\u4e2d\u6bd4\u8f83\u5177\u6709\u4ee3(mu)\u8868(ban)\u6027\u7684\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc\u7740\u91cd\u8ba8\u8bba\u601d\u7ef4\u8fc7\u7a0b\u4ee5\u53ca\u6b63\u786e\u6027\u7684\u8bc1\u660e\u3002\n\n## 2. \u601d\u7ef4\u8fc7\u7a0b\n\n~~\u5b9e\u9645\u4e0a\u662f\u6811\u5f62DP\u7684\u63a5\u8fd1\u6a21\u677f\u7684\u9898~~\n\n\u89c2\u5bdf\u9898\u76ee\uff0c\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u82e5\u5e72\u4e2a\u53ef\u7528\u7684\u989c\u8272\uff0c\u4efb\u610f\u76f8\u90bb\u8282\u70b9\u989c\u8272\u4e0d\u80fd\u76f8\u540c\uff0c\u6c42\u603b\u5171\u7684\u67d3\u8272\u65b9\u6848\u6570\u3002\n\n\u5bf9\u4e8e\u8ba1\u6570\u7c7b\u95ee\u9898\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230\u9012\u63a8\u3002\u9996\u5148\uff0c\u5bf9\u4e8e\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u4efb\u610f\u6307\u5b9a\u4e00\u4e2a\u8282\u70b9$root$\u4e3a\u6839\uff0c\u7136\u540e\u6309\u7167\u4e00\u68f5\u6709\u6839\u6811\u8fdb\u884c\u5904\u7406\u3002\n\n\u800c\u5173\u4e8e\u76f8\u90bb\u8282\u70b9\u4e0d\u80fd\u540c\u8272\u7684\u9650\u5236\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a**\u5728\u6811\u4e0a\u4efb\u610f\u8282\u70b9\u4e0e\u5b83\u7684\u5b50\u8282\u70b9\u7684\u989c\u8272\u4e0d\u80fd\u76f8\u540c**\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5728\u6b64\u9898\u4e2d\uff0c\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u67d3\u8272\u7684\u603b\u65b9\u6848\u6570\u662f\u5df2\u77e5\u7684\uff0c\u800c\u5982\u679c\u5047\u5b9a\u8be5\u56fe\u662f\u83ca\u82b1\u56fe\uff0c\u5373\u5b58\u5728\u4e00\u4e2a\u8282\u70b9$p$\uff0c\u5f53\u4ee5$p$\u4e3a\u6839\u65f6\u5b83\u7684\u6bcf\u4e2a\u513f\u5b50\u90fd\u662f\u53f6\u5b50\u8282\u70b9\u3002\u90a3\u4e48\u603b\u65b9\u6848\u6570\u5c31\u662f\u628a\u6bcf\u4e2a\u8282\u70b9\u5206\u522b\u67d3\u8272\u7684\u65b9\u6848\u6570\u7684\u4e58\u79ef\uff0c\u51cf\u53bb$P$\u7684\u989c\u8272\u4e0e\u5176\u6bcf\u4e2a\u5b50\u8282\u70b9\u53d1\u751f\u51b2\u7a81\u7684\u60c5\u51b5\u603b\u6570\u7684\u603b\u548c\u3002\u628a\u8be5\u65b9\u6848\u6570\u8bbe\u4e3a$S_p$\u3002\n\n\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u4e0a\u8ff0\u60c5\u51b5\uff0c\u53ea\u9700\u8981$O(nm)$\u7684\u65f6\u95f4\u904d\u5386\u7236\u8282\u70b9\u7684\u989c\u8272\u5e76\u5206\u522b\u5904\u7406\u6bcf\u4e2a\u5b50\u8282\u70b9\u7684\u51b2\u7a81\u60c5\u51b5\uff0c\u5373\u53ef\u8fd0\u7528\u6392\u5217\u7ec4\u5408\u7684\u601d\u60f3\u6c42\u89e3\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5c06\u4e0a\u8ff0\u65b9\u6cd5\u8fdb\u4e00\u6b65\u63a8\u5e7f\u5462\uff1f\u53ef\u4ee5\u5047\u5b9a\u5b58\u5728\u82e5\u5e72\u4e2a\u7c7b\u4f3c$P$\u7684\u8282\u70b9$p_1,p_2,...,p_k$\uff0c\u5b83\u4eec\u6709\u5171\u540c\u7684\u7236\u8282\u70b9$i$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u7528\u4e0a\u8ff0\u65b9\u6cd5\u5206\u522b\u6c42\u51fa**\u4ee5$p_i$\u4e3a\u6839\u7684\u5b50\u6811**\u67d3\u8272\u7684\u65b9\u6848\u6570\uff0c\u5728\u8ba1\u7b97$S_i$\u65f6\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u53ea\u5173\u5fc3\u6bcf\u68f5\u5b50\u6811\u7684\u65b9\u6848\u6570\u4ee5\u53ca\u8be5\u5b50\u6811\u7684\u6839\u8282\u70b9\u7684\u989c\u8272\uff0c\u800c\u4e0d\u5173\u5fc3\u8be5\u5b50\u6811\u4e0b\u5176\u5b83\u8282\u70b9\u7684\u989c\u8272\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u8bbe$F_{i,j}$\u8868\u793a**\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5728\u628a$i$\u67d3\u8272\u4e3a$j$\u65f6\u7684\u67d3\u8272\u65b9\u6848\u6570**\u3002\u5bf9\u4e8e$i$\u4e0d\u5141\u8bb8\u7684\u67d3\u7684\u989c\u8272$j$\uff0c$F_{i,j}=0$\u3002\u4e8e\u662f\uff1a\n\n$$S_p=\\sum_{j=1}^m F_{p,j}$$\n\n\u540c\u6837\u8003\u8651\u904d\u5386$i$\u7684\u989c\u8272\uff0c\u5219\u5982\u679c$\\forall p \\in son(i)$\uff0c$F_p$\u7684\u6bcf\u4e00\u9879\u53ca$S_p$\u5df2\u88ab\u6b63\u786e\u6c42\u51fa\uff0c\u90a3\u4e48\u6709\uff1a\n\n$$F_{i,j}=\\prod_{p \\in son(i)} S_p - F_{p,j}$$\n\n\u901a\u4fd7\u5730\u8bf4\uff0c\u4e5f\u5c31\u662f\u8fd0\u7528\u4e58\u6cd5\u548c\u51cf\u6cd5\u539f\u7406\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4ee5\u5b50\u8282\u70b9$p$\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u6c42\u51fa\u8fd9\u4e2a\u5b50\u6811\u5728$i$\u67d3\u8272\u4e3a$j$\u65f6\u7684\u53ef\u884c\u65b9\u6848\u6570\uff08\u4e5f\u5c31\u662f\u603b\u65b9\u6848\u6570\u51cf\u53bb$p$\u67d3\u8272\u4e3a$j$\u7684\u4e0d\u53ef\u884c\u65b9\u6848\u6570\uff09\uff0c\u6700\u540e\u5c06\u6240\u6709\u5b50\u6811\u7684\u53ef\u884c\u65b9\u6848\u6570\u76f8\u4e58\u5373\u53ef\u3002\n\n\u5728\u63a8\u51fa$i$\u4e4b\u540e\uff0c\u540c\u6837\u53ef\u4ee5\u628a\u4e0e$i$\u6709\u5173\u7684\u503c\u4fdd\u5b58\u4e0b\u6765\uff0c\u6765\u63a8\u51fa\u4ee5$i$\u7684\u7236\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u67d3\u8272\u65b9\u6848\u6570\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6700\u540e\u5373\u53ef\u5f97\u5230**\u4ee5\u6574\u68f5\u6811\u7684\u6839\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u603b\u65b9\u6848\u6570**\u5373$S_{root}$\uff0c\u4e5f\u5c31\u662f\u6574\u4e2a\u95ee\u9898\u7684\u89e3\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9$i$\uff0c\u63a8\u51fa$F_i$\u7684\u6bcf\u4e00\u9879\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(|son(i)|*m)$\uff0c\u800c$\\sum_{i \\in V} |son(i)|+1=N$\uff0c\u56e0\u6b64\u603b\u5171\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nm)$\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u4e0a\u8ff0\u601d\u60f3\u5c31\u662f**\u81ea\u5e95\u5411\u4e0a\u7684\u6811\u5f62DP**\u7684\u4e00\u79cd\u3002\n\n## 3. \u5b9e\u73b0\n\n\u7ecf\u8fc7\u8ba1\u7b97\uff0c\u8f93\u5165\u6570\u636e\u6700\u591a\u53ef\u80fd\u8fbe\u523030MB\u5de6\u53f3\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u5feb\u8bfb\u3002\n\n\u800c\u5bf9\u4e8e\u6211\u4eec\u521a\u624d\u6240\u8bf4\u7684\u81ea\u5e95\u5411\u4e0a\u904d\u5386\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u904dDFS\u89e3\u51b3\uff0c\u4e5f\u5c31\u662f\u4f18\u5148**\u904d\u5386\u6bcf\u4e2a\u513f\u5b50$p$\uff0c\u9012\u5f52\u6c42\u51fa$F_p$\u7684\u6bcf\u4e00\u9879\u53ca$S_p$**\uff1b\u4e4b\u540e\u6839\u636e\u8fd9\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u7684\u65b9\u6848\u6570\u66f4\u65b0\u81ea\u8eab\u5b50\u6811\u7684\u65b9\u6848\u6570\u3002\u904d\u5386\u5b8c\u6240\u6709\u513f\u5b50\u540e\uff0c\u518d\u6839\u636e\u5df2\u7ecf\u6c42\u51fa\u7684\u4e0d\u540c\u989c\u8272\u7684\u65b9\u6848\u6570\u8fdb\u884c\u6c42\u548c\u3002\n\n\u7136\u540e\u662fDP\u8d77\u70b9\uff0c\u4e5f\u5c31\u662f\u53f6\u5b50\u8282\u70b9\u7684\u95ee\u9898\u3002\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u8f93\u5165\u67d0\u4e2a\u8282\u70b9$i$\u53ef\u4ee5\u67d3\u7684\u989c\u8272$j$\u65f6\uff0c\u4f7f$F_{i,j}=1$\uff1b\u5bf9\u4e8e\u5176\u4f59\u7684$j$\uff0c\u4f7f$F_{i,j}=0$\u3002\u90a3\u4e48\u5c31\u6709\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. $i$\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u6b64\u65f6\u4ee5$i$\u4e3a\u6839\u800c\u5c06$i$\u67d3\u8272\u4e3a$j$\u7684\u65b9\u6848\u53ea\u6709$1$\u79cd\uff0c\u7b26\u5408\u9898\u610f\uff1b\u5bf9\u4e8e\u4e0d\u5141\u8bb8\u7684\u989c\u8272\uff0c\u65b9\u6848\u4e3a$0$\u79cd\uff0c\u7b26\u5408\u9898\u610f\u3002\n\n2. $i$\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u6b64\u65f6\u5982\u679c$i$\u53ef\u4ee5\u67d3\u8272\u4e3a$j$\uff0c\u5219\u6839\u636e\u4e58\u6cd5\u539f\u7406\u521d\u59cb\u65f6\u5e94\u6709$F_{i,j}=1$\uff0c\u6700\u540e\u8fde\u4e58\u5f97\u5230\u5b9e\u9645\u65b9\u6848\u6570\uff0c\u7b26\u5408\u9898\u610f\uff1b\u5bf9\u4e8e\u4e0d\u5141\u8bb8\u7684\u989c\u8272\uff0c\u65e0\u8bba\u600e\u6837\u8fde\u4e58\uff0c\u6700\u7ec8\u4e00\u5b9a\u6709$F_{i,j}=0$\uff0c\u7b26\u5408\u9898\u610f\u3002\n\n\u5728\u53d6\u6a21\u95ee\u9898\u4e0a\uff0c\u7531\u4e8e\u6211\u4eec\u5b9e\u9645\u5f97\u5230\u7684$S_p$\u662f\u5df2\u7ecf\u7ecf\u8fc7\u53d6\u6a21\u624d\u5b58\u50a8\u7684\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u51fa\u73b0$S_p-F_{p,j}<0$\u7684\u60c5\u51b5\uff0c\u800c\u5bf9\u4e8e\u8d1f\u6570\u7684\u53d6\u6a21\u4f1a\u88ab\u9519\u8bef\u5730\u8f6c\u5316\u6210\u7edd\u5bf9\u503c\u53d6\u6a21\u6700\u540e\u518d\u52a0\u4e0a\u8d1f\u53f7\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a\u4e00\u4e2a$10^9+7$\u518d\u53d6\u6a21\uff0c\u5373\u53ef\u53d8\u4e3a\u6b63\u6570\u53d6\u6a21\u4e14\u7ed3\u679c\u6b63\u786e\u3002\n\n\u4ee5\u53ca\u4e58\u6cd5\u6ea2\u51fa\u548c\u5728\u65e0\u6839\u6811\u4e0a\u5b58\u56fe\u53caDFS\u7684\u4e00\u4e9b\u7ec6\u8282\uff0c\u53c2\u89c1\u6ce8\u91ca\u3002\n\n```cpp\n#include<iostream>\n#include<fstream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\n\nconst int mod=1e9+7;\nint n,m,x,y,tot,f[5010][5010],s[5010];\n//\u90bb\u63a5\u8868\u5efa\u56fe\u6a21\u677f \n//\u6ce8\u610f\u65e0\u6839\u6811\u4e2d\u8fb9\u6570=2n-2 \nint head[10010],ver[10010],Next[10010];\ninline void add(int x,int y){\n\tver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n}\n//\u5feb\u8bfb\u4f18\u5316\u65f6\u95f4\u5e38\u6570 \ninline void read(int &a){\n    char c=getchar();\n\tint x=0, f=1;\n    while(!isdigit(c)) f=(c=='-'?-1:f),c=getchar();\n    while(isdigit(c)) x=x*10+c-'0',c=getchar();\n    a=x*f;\n}\n//DFS\u8fdb\u884c\u6811\u5f62DP \ninline void dfs(int x,int fa){\n\tfor(int i=head[x];i;i=Next[i]){\n\t\tint y=ver[i];\n\t\t//\u6ce8\u610f\uff1a\u5728\u65e0\u6839\u6811\u4e0a\u6709\u51e0\u7387\u904d\u5386\u5230\u7236\u8282\u70b9\u9700\u8981\u820d\u53bb  \n\t\tif(y==fa) continue;\n\t\t//\u9012\u5f52 \n\t\tdfs(y,x);\n\t\t//\u6b64\u65f6\u5173\u4e8ey\u7684\u65b9\u6848\u6570\u5df2\u7ecf\u6c42\u51fa\uff0c\u8fd0\u7528\u7ec4\u5408\u6570\u539f\u7406\u66f4\u65b0\u81ea\u8eab \n\t\t//\u6ce8\u610f\u53d6\u6a21\u4ee5\u53ca\u5c06\u4e24\u4e2aint\u578b\u76f8\u4e58\u9700\u8981\u4e34\u65f6\u8f6c\u4e3along long\u7684\u95ee\u9898  \n\t\tfor(int j=1;j<=m;j++) f[x][j]=((long long)f[x][j]*(s[y]-f[y][j]+mod)%mod)%mod;\n\t}\n\t//\u6c42\u548c \n\tfor(int j=1;j<=m;j++) s[x]=(s[x]+f[x][j])%mod;\n}\nint main(){\n\tread(n),read(m); \n\tfor(int i=1;i<=n;i++){\n\t\tread(x);\n\t\twhile(x--) read(y),f[i][y]=1;\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tread(x),read(y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t} dfs(1,0); //\u4efb\u610f\u6307\u5b9a1\u53f7\u8282\u70b9\u4e3a\u6839  \n\tcout<<s[1];\n\treturn 0;\n}\n```",
        "postTime": 1618975727,
        "uid": 62440,
        "name": "MuelsyseU",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3914 \u3010\u67d3\u8272\u8ba1\u6570\u3011"
    }
]