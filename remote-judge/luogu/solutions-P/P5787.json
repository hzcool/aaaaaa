[
    {
        "content": "# $\\text{\u7ebf\u6bb5\u6811\u5206\u6cbb}$\n## $\\text{\u5f15\u5165}$\n\u4e00\u5f20\u56fe\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u56fe\uff0c \u5728 $k$ \u65f6\u95f4\u4e2d\u4f1a\u51fa\u73b0 $m$ \u6761\u8fb9\uff0c\u8868\u793a\u6709\u4e00\u6761\u8fde\u63a5 $x,y$ \u7684\u8fb9\u5728  $l$ \u65f6\u523b\u51fa\u73b0 $r$ \u65f6\u523b\u6d88\u5931\uff0c\u6c42\u95ee\u5728\u7b2c $i$ \u4e2a\u65f6\u95f4\u6bb5\u4e2d\u56fe\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\u3002\n### $\\text{\u5206\u6790}$\n- ### \u5148\u5bf9\u4e8e\u4e8c\u5206\u56fe\u6765\u5206\u6790\n\n\u5982\u679c\u9876\u70b9 $V$ \u53ef\u5206\u5272\u4e3a\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6 $(A,B)$ \uff0c\u5e76\u4e14\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9 $(i,j)$ \u6240\u5173\u8054\u7684\u4e24\u4e2a\u9876\u70b9 $i$ \u548c $j$ \u5206\u522b\u5c5e\u4e8e\u8fd9\u4e24\u4e2a\u4e0d\u540c\u7684\u9876\u70b9\u96c6 $(i \\in A,j \\in B)$ \uff0c\u5219\u79f0\u56fe $G$ \u4e3a\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002 \u2014\u2014 \u767e\u5ea6\u767e\u79d1\u3002\n\n- \u5728\u4e00\u822c\u7684\u505a\u6cd5\u4e2d\u5bf9\u4e8e\u4e00\u4e2a\u56fe\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\uff0c\u6211\u4eec\u4e00\u822c\u662f\u91c7\u7528\u67d3\u8272\u6cd5\uff0c\u5982\u679c\u4e00\u4e2a\u56fe\u4e3a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u4e00\u6761\u8fb9\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u4e00\u5b9a\u662f\u5728\u4e0d\u540c\u96c6\u5408\u7684\uff0c\u4e5f\u5c31\u662f\u70b9\u7684\u989c\u8272\u4e0d\u540c\u3002\n\n- \u5206\u6790\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u6700\u6734\u7d20\u7684\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u95f4\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u5f20\u56fe\uff0c\u518d\u7528 $O(n)$ \u7684\u65f6\u95f4\u904d\u5386\u67d3\u8272\u3002\u603b\u7684\u590d\u6742\u5ea6\u5c31\u4e3a $O(n^2\\times k)$ \u3002\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u5fc5\u987b\u4f18\u5316\u3002\u56de\u5fc6\u4e00\u4e0b\u6211\u4eec\u5728 [\u5173\u62bc\u7f6a\u72af](https://www.luogu.com.cn/problem/P1525) \u4e2d\u8fd8\u5b66\u4e86\u4e00\u79cd\u5224\u65ad\u4e8c\u5206\u56fe\u7684\u65b9\u6cd5 **\u6269\u5c55\u57df\u5e76\u67e5\u96c6** \u3002\u5982\u679c\u6709\u4e0d\u4e86\u89e3\u7684\uff0c\u7528\u51e0\u53e5\u8bdd\u4ecb\u7ecd\u4e00\u4e0b\u3002\n\n- \u6269\u5c55\u57df\u5e76\u67e5\u96c6\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $i$ \uff0c\u6211\u4eec\u5c06\u5176\u62c6\u5206\u4e3a\u4e24\u4e2a\u8282\u70b9\u3002\u4e00\u4e2a\u5c5e\u4e8e\u96c6\u5408 $S$ \uff0c\u53e6\u4e00\u4e2a\u5c5e\u4e8e\u96c6\u5408 $T$ \u3002\u90a3\u4e48\u4e00\u6761\u8fb9\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u8282\u70b9\u5c31\u5fc5\u987b\u5728\u4e0d\u540c\u7684\u96c6\u5408\u4e2d\u3002\u4e00\u4e2a\u70b9\u5728 $S$ \u4e2d\u548c\u5728 $T$ \u7684\u4e24\u4e2a\u70b9\u5c5e\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u8fd9\u5f20\u56fe\u5c31\u4e0d\u662f\u4e8c\u5206\u56fe\u3002\n\n\u5176\u5b9e\u6709\u4e86\u6269\u5c55\u57df\u5e76\u67e5\u96c6\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u8fd9\u53ea\u662f\u4e3a\u4e0b\u6587\u7684\u7b97\u6cd5\u94fa\u57ab\u3002\n\n- ### \u5bf9\u4e8e\u65f6\u95f4\u6bb5\u5206\u6790\n\n\u6211\u4eec\u5982\u679c\u8fd8\u8981\u4f18\u5316\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u80fd\u679a\u4e3e\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u3002\u5fc5\u987b\u627e\u4e2a\u66f4\u9760\u8c31\u7684\u7b97\u6cd5\u3002\n\n- \u5982\u679c\u5b66\u4e60\u8fc7\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\uff0c\u90a3\u4e48\u4e0b\u6587\u5c06\u597d\u7406\u89e3\u4e00\u4e9b\u3002\u6211\u4eec\u628a\u65f6\u95f4\u8f74\u753b\u51fa\u6765\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\u5b83\u603b\u662f\u5728\u65f6\u95f4\u8f74\u4e0a\u8986\u76d6\u4e86\u4e00\u4e9b\u533a\u57df\u3002\u6240\u4ee5\u5bf9\u4e8e\u4e00\u6761\u8fb9\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u89e3\u3002\n\n- \u6211\u4eec\u5148\u5c06\u65f6\u95f4\u8f74\u6784\u5efa $\\log k$ \u5c42\uff0c\u7136\u540e\u5c31\u50cf\u63d2\u5165\u533a\u95f4\u4e00\u6837\uff0c\u628a\u6bcf\u4e00\u6761\u8fb9\u63d2\u5165\u3002\u56e0\u4e3a\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u5b50\u8282\u70b9\u4e5f\u4e00\u5b9a\u88ab\u8fd9\u6761\u8fb9\u8986\u76d6\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u7236\u4eb2\u8282\u70b9\u50a8\u5b58\u8fd9\u6761\u8fb9\u3002\u90a3\u4e48\u8fd9\u6837\u5bf9\u4e8e\u4e00\u6761\u8fb9\u6700\u5927\u4e5f\u53ea\u4f1a\u5206\u89e3\u4e3a $\\log k $ \u4e0d\u91cd\u590d\u7684\u8f83\u5c0f\u7684\u8fb9\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/p2fgmu5l.png)\n\n- \u8fd9\u6837\u6211\u4eec\u628a\u6240\u6709\u8be2\u95ee\u4e0b\u6765\uff0c\u6700\u540e\u4e00\u6b21\u6027\u5904\u7406\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5f53\u6211\u4eec\u5904\u7406\u5b8c\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u5e76\u67e5\u96c6\u8fd8\u539f\u5230\u5904\u7406\u4e4b\u524d\u7684\u72b6\u6001\u624d\u53ef\u4ee5\u9012\u5f52\u5904\u7406\u5176\u4ed6\u8282\u70b9\u4e86\u3002\u96be\u9053\u6211\u4eec\u8fd9\u91cc\u53ea\u80fd\u5199\u4e2a $LCT$ \u8fd9\u79cd\u652f\u6301 $O(\\log n)$ \u5220\u8fb9\u7684\u6570\u636e\u7ed3\u6784\uff1f\u663e\u7136\u4e0d\u662f \u3002~~\uff08\u5426\u5219\u8bb2\u8fd9\u4e48\u4e45\u7684\u5e76\u67e5\u96c6\u5e72\u5565\uff09~~\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ceoa7omc.png)\n\n- \u8fd9\u91cc\u7684\u5e76\u67e5\u96c6\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\u6240\u5c5e\u5173\u7cfb\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u5176\u64cd\u4f5c\u5176\u5b9e\u662f\u975e\u5e38\u7b80\u660e\u7684\uff0c\u5c31\u662f\u6539\u53d8\u7236\u4eb2\u7684\u6240\u5c5e\u5173\u7cfb\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u64cd\u4f5c\u653e\u5728\u6808\u91cc\uff0c\u5f53\u6211\u4eec\u9000\u51fa\u65f6\uff0c\u64a4\u9500\u539f\u64cd\u4f5c\u5c31\u884c\u4e86\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u53ef\u4ee5\u8def\u5f84\u538b\u7f29\u4e86\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u662f\u8981\u50a8\u5b58\u771f\u6b63\u7684\u7236\u4eb2\u7684\u3002\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\u7684\u6b63\u786e\u6027\uff0c\u5fc5\u987b\u8981\u6309\u79e9\u5408\u5e76\u3002\u5927\u6982\u5c31\u662f\u6811\u4f4e\u7684\u5408\u5e76\u5230\u6811\u9ad8\u7684\u7236\u4eb2\u4e0b\u9762\uff0c\u8fd9\u6837\u6811\u7684\u9ad8\u5ea6\u662f\u4e0d\u4f1a\u9ad8\u4e8e $O(\\log n)$ \u7684\u3002\n\n- \u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u7b97\u505a\u5b8c\u4e86\u3002\u5176\u4e3b\u8981\u662f\u6784\u5efa\u4e00\u4e2a\u65f6\u95f4\u8f74\u4e0a\u7684\u7ebf\u6bb5\u6811\uff0c\u518d\u901a\u8fc7\u5e76\u67e5\u96c6\u7ef4\u62a4\u7b54\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log k\\log n)$ \u3002\n## $\\text{\u4ee3\u7801}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 10101010;\nint read(){\n\tint x = 0,f = 0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\treturn f?-x:x;\n}\n\nint n,m,k,fa[N],height[N],top;\nstruct E{int x,y;}e[N];\nstruct Stack{int x,y,add;}st[N];\nvector<int> t[N];\n\nint findfa(int x)\n{\n\twhile(x != fa[x]) x = fa[x];\n\treturn fa[x];\n}\nvoid debug()\n{\n\tprintf(\"\\n****************\\n\u4e0b\u6807\");\n\tfor(int i = 1;i <= n*2;i++) printf(\"%d \",i); \n\tprintf(\"\\n\u7236\u4eb2\");\n\tfor(int i = 1;i <= n*2;i++) printf(\"%d \",fa[i]);\n\tprintf(\"\\n\u7956\u5148(\u4ee3\u8868\u5143)\");\n\tfor(int i = 1;i <= n*2;i++) printf(\"%d \",findfa(i));\n}\nvoid merge(int x,int y)\n{\n\tint fx = findfa(x),fy = findfa(y);\n\tif(height[fx] > height[fy]) swap(fx,fy);\n\tst[++top] = (Stack){fx,fy,height[fx] == height[fy]};\n\tfa[fx] = fy;\n\tif(height[fx] == height[fy]) height[fy]++;\n}\nvoid update(int u,int l,int r,int L,int R,int x)\n{\n\tif(l > R || r < L) return;\n\tif(L <= l && r <= R) {t[u].push_back(x);return;}\n\tint mid = l + r >> 1;\n\tupdate(u<<1,l,mid,L,R,x);\n\tupdate(u<<1|1,mid+1,r,L,R,x);\n}\nvoid solve(int u,int l,int r)\n{\n//\tdebug();\n\tint ans = 1;\n\tint lasttop = top;\n\tfor(int i = 0;i < t[u].size();i++)\n\t{\n\t\tint a = findfa(e[t[u].at(i)].x);\n\t\tint b = findfa(e[t[u].at(i)].y);\n\t\tif(a == b)\n\t\t{\n\t\t\tfor(int k = l;k <= r;k++)\n\t\t\tprintf(\"No\\n\");\n\t\t\tans = 0;\n\t\t\tbreak;\n\t\t}\n\t\tmerge(e[t[u].at(i)].x,e[t[u].at(i)].y+n);\n\t\tmerge(e[t[u].at(i)].y,e[t[u].at(i)].x+n);\n\t}\n\tif(ans)\n\t{\n\t\tif(l==r) printf(\"Yes\\n\");\n\t\telse \n\t\t{\n\t\t\tint mid = l+r>>1;\n\t\t\tsolve(u<<1,l,mid);\n\t\t\tsolve(u<<1|1,mid+1,r);\n\t\t}\n\t}\n\twhile(top > lasttop)\n\t{\n\t\theight[fa[st[top].x]] -= st[top].add;\n\t\tfa[st[top].x] = st[top].x;\n\t\ttop--;\n\t}\n\treturn;\n}\nint main()\n{\n\tn = read();m = read();k = read();\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\te[i].x = read();e[i].y = read();\n\t\tint l = read()+1,r = read();\n\t\tupdate(1,1,k,l,r,i);\n\t}\n\tfor(int i = 1;i <= 2*n;i++) fa[i] = i,height[i] = 1;\n\tsolve(1,1,k);\n\treturn 0;\n}\n```\n\n## $\\text{\u5e94\u7528}$\n- CF1140F\n- P5227\n- P4585\n- CF576E\n",
        "postTime": 1595679537,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u7ebf\u6bb5\u6811\u5206\u6cbb"
    },
    {
        "content": "## \u6838\u5fc3\u601d\u60f3\n\n\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\n\n- \u6709\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u53ea\u5728 $l \\sim r$ \u7684\u65f6\u95f4\u6bb5\u5185\u6709\u6548\u3002\n- \u6709\u4e00\u4e9b\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u67d0\u4e00\u4e2a\u65f6\u95f4\u70b9\u6240\u6709\u64cd\u4f5c\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u8fd9\u6837\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u540e**\u5728\u65f6\u95f4\u8f74\u4e0a\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811**\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u533a\u95f4\u64cd\u4f5c\u3002\n\n\u904d\u5386\u6574\u9897\u7ebf\u6bb5\u6811\uff0c\u5230\u8fbe\u6bcf\u4e2a\u8282\u70b9\u65f6\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u7ee7\u7eed\u5411\u4e0b\u9012\u5f52\uff0c\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u65f6\u7edf\u8ba1\u8d21\u732e\uff0c\u56de\u6eaf\u65f6\u64a4\u9500\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u8fd9\u6837\u7684\u601d\u60f3\u88ab\u79f0\u4e3a**\u7ebf\u6bb5\u6811\u5206\u6cbb**\uff0c\u53ef\u4ee5\u5728\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u4e00\u7c7b**\u5728\u7ebf\u7b97\u6cd5\u5e76\u4e0d\u4f18\u79c0**\u7684\u95ee\u9898\u3002\n\n#### \u3010\u4f8b\u9898\u3011[P5787 \u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb](https://www.luogu.com.cn/problem/P5787)\n\n\u9996\u5148\uff0c\u56fe\u662f\u4e8c\u5206\u56fe\u7684\u5145\u8981\u6761\u4ef6\u662f\u4e0d\u5b58\u5728\u5947\u73af\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528**\u6269\u5c55\u57df\u5e76\u67e5\u96c6**\u8f7b\u677e\u7ef4\u62a4\u3002\n\n\u6309\u7167\u4e0a\u8ff0\u601d\u60f3\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u5c06\u5b83\u6309\u7167\u7ebf\u6bb5\u6811\u533a\u95f4\u64cd\u4f5c\u7684\u65b9\u5f0f\u5212\u5206\u6210 $\\mathcal O(\\log k)$ \u6bb5\uff0c\u7528 `vector` \u6302\u5728\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u4e0a\u3002\n\n\u904d\u5386\u65f6\uff0c\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u6bcf\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5c06\u6302\u5728\u8be5\u8282\u70b9\u4e0a\u7684\u6240\u6709\u8fb9\u5408\u5e76\uff0c\u7136\u540e\u9012\u5f52\u5904\u7406\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u3002\u5982\u679c\u53d1\u73b0\u6709\u67d0\u6761\u8fb9\u5408\u5e76\u4f1a\u51fa\u73b0\u5947\u73af\uff0c\u90a3\u4e48\u5f53\u524d\u7ebf\u6bb5\u6811\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u65f6\u95f4\u533a\u95f4\u90fd\u4e0d\u4f1a\u5f62\u6210\u4e8c\u5206\u56fe\u3002\n\n\u5f53\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u5982\u679c\u5408\u5e76\u4e86\u6240\u6709\u6302\u5728\u5f53\u524d\u8282\u70b9\u4e0a\u7684\u8fb9\uff0c\u4f9d\u65e7\u6ee1\u8db3\u4e8c\u5206\u56fe\u7684\u6027\u8d28\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa `Yes`\u3002\n\n\u56de\u6eaf\u65f6\uff0c\u7531\u4e8e\u5e76\u67e5\u96c6\u4e0d\u652f\u6301\u5220\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528**\u53ef\u64a4\u9500\u5e76\u67e5\u96c6**\uff0c\u5373\u7528\u4e00\u4e2a\u6808\u8bb0\u5f55\u4e0b\u6240\u6709\u5bf9\u5e76\u67e5\u96c6\u7684\u64cd\u4f5c\u3002\u7531\u4e8e\u53ef\u64a4\u9500\uff0c\u56e0\u6b64\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\uff0c\u4e3a\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u5fc5\u987b\u6309\u79e9\u5408\u5e76\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(m \\log n \\log k)$\u3002\n\n```cpp\nconst int N = 1e5 + 7, M = 2e5 + 7;\nint n, m, k, u[M], v[M], f[N<<1], d[N<<1];\nstruct T {\n\tint l, r;\n\tvi e;\n} t[N<<2];\nstack< pi > s;\n\nvoid build(int p, int l, int r) {\n\tt[p].l = l, t[p].r = r;\n\tif (l == r) return;\n\tbuild(ls, l, md), build(rs, md + 1, r);\n}\n\nvoid ins(int p, int l, int r, int x) {\n\tif (t[p].l >= l && t[p].r <= r) return t[p].e.pb(x), void();\n\tif (l <= md) ins(ls, l, r, x);\n\tif (r > md) ins(rs, l, r, x);\n}\n\ninline int get(int x) {\n\twhile (x ^ f[x]) x = f[x];\n\treturn x;\n}\n\ninline void merge(int x, int y) {\n\tif (x == y) return;\n\tif (d[x] > d[y]) swap(x, y);\n\ts.push(mp(x, d[x] == d[y])), f[x] = y, d[y] += d[x] == d[y];\n}\n\nvoid dfs(int p, int l, int r) {\n\tbool ok = 1;\n\tui o = s.size();\n\tfor (ui i = 0; i < t[p].e.size(); i++) {\n\t\tint x = t[p].e[i], u = get(::u[x]), v = get(::v[x]);\n\t\tif (u == v) {\n\t\t\tfor (int j = l; j <= r; j++) prints(\"No\");\n\t\t\tok = 0;\n\t\t\tbreak;\n\t\t}\n\t\tmerge(get(::u[x] + N), v), merge(get(::v[x] + N), u);\n\t}\n\tif (ok) {\n\t\tif (l == r) prints(\"Yes\");\n\t\telse dfs(ls, l, md), dfs(rs, md + 1, r);\n\t}\n\twhile (s.size() > o) d[f[s.top().fi]] -= s.top().se, f[s.top().fi] = s.top().fi, s.pop();\n}\n\nint main() {\n\trd(n), rd(m), rd(k), build(1, 1, k);\n\tfor (int i = 1, l, r; i <= m; i++) {\n\t\trd(u[i]), rd(v[i]), rd(l), rd(r);\n\t\tif (l ^ r) ins(1, l + 1, r, i);\n\t}\n\tfor (int i = 1; i <= n; i++) f[i] = i, f[i+N] = i + N;\n\tdfs(1, 1, k);\n\treturn 0;\n}\n```",
        "postTime": 1575978978,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5787 \u3010\u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P5787)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7ebf\u6bb5\u6811\u5206\u6cbb\u5165\u95e8\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\u5c06\u4e4b\u4e0e CDQ \u533a\u522b\u4e00\u4e0b\uff0c\u65b9\u4fbf\u8fa8\u8ba4\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CDQ \u5206\u6cbb\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u5c06\u4fee\u6539\u548c\u8be2\u95ee\u4e22\u4e00\u5757\uff0c\u7136\u540e\u5de6\u53f3\u533a\u95f4\u5408\u5e76\u4e0a\u6765\u7684\u65f6\u5019\u8003\u8651\u5de6\u8fb9\u533a\u95f4\u5bf9\u53f3\u8fb9\u533a\u95f4\u7684\u8d21\u732e\u3002\u7ecf\u5178\u7684\u4f8b\u5b50\u5c31\u662f\u8ba1\u7b97\u9006\u5e8f\u5bf9\u548c\u504f\u5e8f\u5bf9\u7684\u95ee\u9898\u3002 CDQ \u5206\u6cbb\u5904\u7406\u7684\u4fee\u6539\u4e00\u822c\u90fd\u662f**\u6c38\u4e45\u6027\u7684\uff0c\u4e0d\u53ef\u64a4\u9500**\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u800c\u7ebf\u6bb5\u6811\u5206\u6cbb\u4ec5\u5bf9\u8be2\u95ee\u533a\u95f4\u8fdb\u884c\u5206\u6cbb\uff0c\u5e76\u4e14\u4fee\u6539\u5bf9\u5e94**\u4e00\u6bb5\u533a\u95f4**\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e**\u53ef\u64a4\u9500**\u3002\u8fd9\u6837\u4e00\u4e00\u6765\uff0c\u6bcf\u4e2a\u4fee\u6539\u5bf9\u5e94\u7684\u5c31\u662f\u4e00\u6bb5\u8be2\u95ee\u533a\u95f4\u3002\u90a3\u4e48\u5c31\u53ef\u5c06\u8be2\u95ee\u5efa\u6210 \" \u7ebf\u6bb5\u6811 \" \u7684\u6a21\u6837\uff0c\u800c\u4fee\u6539\u5c31\u53ef\u4ee5\u62c6\u5206\u6210\u5bf9\u4e8e$O(\\log_2n)$\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u8fdb\u884c\u4fee\u6539\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5176\u4e2d\u4e00\u79cd\u5206\u6cbb\u65b9\u6cd5\u662f\uff0c\u5f53\u4fee\u6539\u62c6\u5206\u597d\u4e86\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5bf9\u6574\u68f5 \" \u7ebf\u6bb5\u6811 \" \u8fdb\u884c\u4e00\u53d1 DFS \uff0c\u4e2d\u9014\u7ef4\u62a4\u4fee\u6539\u4fe1\u606f\u3002\u4e5f\u5c31\u662f\u6309\u7167 DFS \u7684\u987a\u5e8f\uff0c\u8fdb\u5165\u8282\u70b9\u7684\u65f6\u5019\u5c06\u4fee\u6539\u4fe1\u606f\u63d2\u5165\uff0c\u5373\u5c06\u79bb\u5f00\u7684\u65f6\u5019\u5c06\u4fee\u6539\u4fe1\u606f\u5220\u9664\u3002\u8fd9\u4e2a\u65b9\u6cd5\u9002\u5408\u7ef4\u62a4**\u4fbf\u4e8e\u5feb\u901f\u7ef4\u62a4\u5355\u70b9\u7684\u8d21\u732e**\u3002\u4f8b\u5982\u672c\u9898\uff0c\u7531\u4e8e\u6bcf\u6b21\u4fee\u6539\u53ea\u4f1a\u5f71\u54cd\u4e24\u4e2a\u70b9\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u8fd9\u79cd\u5206\u6cbb\u65b9\u6cd5\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u91cc\u63d0\u5230\u7684 \" \u7ebf\u6bb5\u6811 \" \u65e2\u53ef\u4ee5\u771f\u7684\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u7528 vector \u7ef4\u62a4\u88ab\u5f71\u54cd\u5230\u7684\u64cd\u4f5c\uff1b\u4e5f\u53ef\u4ee5\u5728 DFS \u7684\u65f6\u5019\u7528\u4e00\u4e2a vector \u5b58\u4e0b\u6765\u4e0e\u5f53\u524d\u533a\u95f4\u6709\u4ea4\u96c6\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u50cf\u7ebf\u6bb5\u6811\u90a3\u6837\u5c06\u64cd\u4f5c\u5212\u5206\u7ed9\u5b50\u533a\u95f4\u3002\u672c\u9898\u89e3\u4f7f\u7528\u540e\u8005\u5b9e\u73b0\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u518d\u8bf4\u5230\u672c\u9898\u4e0a\u6765\u3002\u9996\u5148\u4e0d\u96be\u60f3\u5230\u8981\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u4e00\u4e0b\u8fde\u901a\u6027\u3002\u7531\u4e8e\u5b58\u5728\u5220\u9664\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f7f\u7528\u79e9\u4f18\u5316\u800c\u975e\u8def\u5f84\u538b\u7f29\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0b\u9762\u8003\u8651\u7ef4\u62a4\u8def\u5f84\u957f\u5ea6\u4ee5\u5224\u65ad\u4f1a\u5426\u51fa\u73b0\u5947\u73af\u3002\u5b9e\u9645\u4e0a\uff0c\u7531\u4e8e\u53ea\u6709\u8def\u957f\u7684\u5947\u5076\u6027\u624d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u8def\u5f84\u7684\u5947\u5076\u6027\u5373\u53ef\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5e0c\u671b\u7528\u5e76\u67e5\u96c6\u987a\u4fbf\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e2a\u4fe1\u606f\u3002\u7531\u4e8e\u79e9\u4f18\u5316\u7684\u5e76\u67e5\u96c6\u7684\u7956\u5b59\u5173\u7cfb\u662f\u6b63\u786e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u5e76\u67e5\u96c6\u6811\u4e0a\u627e\u5230\u6b63\u786e\u7684 LCA \u3002\u81ea\u7136\u800c\u7136\uff0c\u6211\u4eec\u60f3\u5230\u4e86\uff0c\u6700\u597d\u662f\u53ef\u4ee5\u8ba9\u5e76\u67e5\u96c6\u4e2d\u4e24\u70b9\u7684\u8def\u5f84\u5947\u5076\u6027\u5c31\u5bf9\u5e94\u5b9e\u9645\u56fe\u4e0a\u7684\u4e24\u70b9\u8def\u5f84\u5947\u5076\u6027\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u96be\u53d1\u73b0\u4e00\u79cd\u65b9\u6cd5\uff1a\u5e76\u67e5\u96c6\u4e0a\u6bcf\u4e2a\u70b9\u7ef4\u62a4**\u5f53\u5b83\u548c\u5b83\u7236\u4eb2\u8fde\u8d77\u6765\u65f6\u7684\u8def\u5f84\u957f\u5ea6**\u3002\u6817\u5b50\uff1a \n![P1.png](https://i.loli.net/2020/02/28/mZUarLRdFcsQgnI.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f53 4 \u548c 6 \u8fde\u8d77\u6765\u7684\u65f6\u5019\uff0c\u5e76\u67e5\u96c6\u4e0a\u5b9e\u9645\u662f 1 \u548c 5 \u8fde\u8d77\u6765\uff0c\u800c\u6b64\u65f6 1 \u548c 5 \u7684\u8ddd\u79bb\u5c31\u662f $(\\text{ 4 \u5230 1 \u7684\u8ddd\u79bb})+(\\text{ 6 \u5230 5 \u7684\u8ddd\u79bb})+1$\uff0c\u5373 4 \u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u67e5\u8be2\u540c\u4e00\u5e76\u67e5\u96c6\u5185\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u6709\u4e24\u79cd\u65b9\u6cd5\u3002\u4e00\u4e2a\u662f\u5728\u5e76\u67e5\u96c6\u4e0a\u9762\u66b4\u529b\u722c LCA \uff0c\u53e6\u4e00\u4e2a\u662f\u76f4\u63a5\u67e5\u8be2\u4e24\u4e2a\u70b9\u5404\u81ea\u5230\u7684\u8ddd\u79bb\u7684\u548c\u7684**\u5947\u5076\u6027**\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5947\u5076\u6027\uff0c\u56e0\u6b64\u4e00\u6761\u8def\u5f84\u8d70\u4e24\u904d**\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c**\u3002\u56e0\u6b64\uff0c\u4e24\u70b9\u7684 LCA \u5230\u6839\u7684\u8ddd\u79bb\u4f1a\u88ab\u7b97\u4e24\u904d\uff0c\u5c31\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u7684\u5947\u5076\u6027\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5728\u56de\u6eaf\u64a4\u9500\u64cd\u4f5c\u7684\u65f6\u5019\u53ef\u4ee5\u62ff\u4e00\u4e2a\u6808\u6765\u5b58\u4e0b\u9700\u8981\u64a4\u9500\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u5c31\u8fb9\u5f39\u8fb9\u6e05\u9664\u5373\u53ef\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u4e3b\u4f53\uff0c\u5916\u52a0\u5e76\u67e5\u96c6\u7ef4\u62a4\u4fe1\u606f\uff0c\u6211\u4eec\u505a\u5230\u4e86$O(n\\log_2^2n)$\u7684\u4f18\u79c0\u65f6\u95f4\u590d\u6742\u5ea6\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <vector>\nusing namespace std;\n\ntypedef vector<int> vi;\n\nconst int MAXN = 1e5 + 5, MAXK = 1e5 + 5, MAXM = 2e5 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\nvoid swapp( _T &x, _T &y )\n{\n\t_T t = x; x = y, y = t;\n}\n\nstruct data\n{\n\tint r1, r2;\n\tdata() { r1 = r2 = 0; }\n\tdata( const int R1, const int R2 ) { r1 = R1, r2 = R2; } \n};\n\ndata sta[MAXM]; int top;\nint fa[MAXN], siz[MAXN];\nint x[MAXM], y[MAXM], tl[MAXM], tr[MAXM];\nint N, M, K;\nbool dis[MAXN];\n\nint findSet( const int u ) { if( fa[u] == u ) return u; return findSet( fa[u] ); }\nvoid makeSet( const int s ) { for( int i = 1 ; i <= s ; i ++ ) fa[i] = i, siz[i] = 1; }\nint getDist( const int u ) { if( fa[u] == u ) return dis[u]; return dis[u] ^ getDist( fa[u] ); }\n\nbool unionSet( const int u, const int v, int &a, int &b )\n{\n\tint r1 = findSet( u ), r2 = findSet( v );\n\tif( r1 == r2 ) return false;\n\tif( siz[r1] > siz[r2] ) swapp( r1, r2 );\n\tfa[r1] = r2;\n\tsiz[r2] += siz[r1];\n\tdis[r1] = getDist( u ) ^ getDist( v ) ^ 1;\n\ta = r1, b = r2;\n\treturn true;\n}\n\nvoid divide( const int l, const int r, const vi op )\n{\n\tvi L = vi(), R = vi();\n\tint len = op.size(), mid = l + r >> 1, but = top;\n\tbool flag = true;\n\tfor( int i = 0, u, v, lef, rig, r1, r2 ; i < len ; i ++ )\n\t{\n\t\tu = x[op[i]], v = y[op[i]], lef = tl[op[i]], rig = tr[op[i]];\n\t\tif( lef <= l && r <= rig )\n\t\t{\n\t\t\tif( unionSet( u, v, r1, r2 ) ) sta[++ top] = data( r1, r2 );\n\t\t\telse if( getDist( u ) == getDist( v ) ) { flag = false; break; }\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif( lef <= mid ) L.push_back( op[i] );\n\t\t\tif( rig > mid ) R.push_back( op[i] );\n\t\t}\n\t}\n\tif( flag ) \n\t{\n\t\tif( l == r ) puts( \"Yes\" );\n\t\telse divide( l, mid, L ),  divide( mid + 1, r, R );\n\t}\n\telse for( int i = l ; i <= r ; i ++ ) puts( \"No\" );\n\twhile( top > but )\n\t{\n\t\tint r1 = sta[top].r1, r2 = sta[top].r2;\n\t\tsiz[r2] -= siz[r1], fa[r1] = r1, dis[r1] = 0;\n\t\ttop --;\n\t}\n}\n\nint main()\n{\n\tvi st = vi();\n\tread( N ), read( M ), read( K );\n\tmakeSet( N );\n\tfor( int i = 1 ; i <= M ; i ++ ) \n\t\tread( x[i] ), read( y[i] ), read( tl[i] ), read( tr[i] ), tl[i] ++, \n\t\tst.push_back( i );\n\tdivide( 1, K, st );\n\treturn 0;\n}\n```",
        "postTime": 1582903114,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb/\u4e8c\u5206\u56fe"
    },
    {
        "content": "\u6ca1\u4eba\u53d1\u4e00\u4e2a log \u7684\u89e3\u6cd5\uff1fqwq\n\n\u4e00\u4e2a\u56fe\u662f\u4e8c\u5206\u56fe\u5f53\u4e14\u4ec5\u5f53\u4e0d\u5b58\u5728\u5947\u73af\u3002\n\n\u8003\u8651\u73b0\u5728\u6709\u4e00\u4e2a\u73af\uff0c\u5728\u73af\u4e0a\u5220\u9664\u65f6\u95f4\u6700\u5c0f\u7684\u8fb9\u5220\u9664\u540e\uff0c\u8fd9\u4e2a\u73af\u5c31\u6d88\u5931\u6389\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5220\u9664\u65f6\u95f4\u6700\u5927\u7684\u751f\u6210\u6811\uff0c\u7136\u540e\u5c1d\u8bd5\u52a0\u5165\u8fd9\u4e9b\u8fb9\u3002\u82e5\u4e24\u70b9\u4e4b\u95f4\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u76f4\u63a5\u8fde\u4e0a\u8fd9\u6761\u8fb9\uff0c\u5426\u5219\u5982\u679c\u8fd9\u6761\u8fb9\u7684\u5220\u9664\u65f6\u95f4\u6bd4\u8def\u5f84\u4e2d\u5220\u9664\u65f6\u95f4\u6700\u5c0f\u7684\u8fb9\u5927\uff0c\u5220\u9664\u90a3\u6761\u8fb9\uff0c\u52a0\u5165\u8fd9\u6761\u8fb9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=300005;\nconst int inf=0x3f3f3f3f;\nint n,m,T,vis[maxn],ans[maxn],ch[maxn][2],fa[maxn],siz[maxn],id[maxn],sta[maxn],top;bool rev[maxn];\nvector<int> in[maxn],out[maxn];\nstruct Edge\n{\n    int x,y,st,ed;\n}e[maxn];\ninline void reverse(int x) { if(!x) return; swap(ch[x][0],ch[x][1]),rev[x]^=1; }\ninline void pushup(int x)\n{\n    siz[x]=siz[ch[x][0]]+siz[ch[x][1]]+(x>n);\n    id[x]=(x>n)?x-n:0;\n    if(ch[x][0] && e[id[ch[x][0]]].ed<e[id[x]].ed) id[x]=id[ch[x][0]];\n    if(ch[x][1] && e[id[ch[x][1]]].ed<e[id[x]].ed) id[x]=id[ch[x][1]];\n}\ninline void pushdown(int x) { if(rev[x]) reverse(ch[x][0]),reverse(ch[x][1]),rev[x]=0; }\ninline bool nrt(int x) { return ch[fa[x]][0]==x||ch[fa[x]][1]==x; }\ninline void rotate(int x)\n{\n    int y=fa[x],z=fa[y],k=(ch[y][1]==x),u=ch[x][k^1];\n    if(nrt(y)) ch[z][ch[z][1]==y]=x;\n    ch[y][k]=u;ch[x][k^1]=y;\n    if(u) fa[u]=y;fa[y]=x;fa[x]=z;\n    pushup(y);pushup(x);\n}\ninline void splay(int x)\n{\n    int y,z; top=0;\n    for(y=x;nrt(y);y=fa[y]) sta[++top]=y;\n    pushdown(y);\n    while(top) pushdown(sta[top--]);\n    while(nrt(x))\n    {\n        y=fa[x],z=fa[y];\n        if(nrt(y)) rotate((ch[y][1]==x)^(ch[z][1]==y)?x:y);\n        rotate(x);\n    }\n}\ninline void access(int x)\n{\n    for(int y=0;x;y=x,x=fa[x])\n        splay(x),ch[x][1]=y,pushup(x);\n}\ninline int findroot(int x)\n{\n    access(x),splay(x);\n    for(;ch[x][0];x=ch[x][0]) pushdown(x);\n    return x;\n}\ninline void makeroot(int x) { access(x),splay(x),reverse(x); }\ninline void split(int x,int y) { makeroot(x),access(y),splay(y); }\ninline void link(int x,int y) { makeroot(x),fa[x]=y; }\ninline void cut(int x,int y) { split(x,y),fa[x]=ch[y][0]=0,pushup(y); }\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&T);\n    e[0].ed=inf;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d%d\",&e[i].x,&e[i].y,&e[i].st,&e[i].ed);\n        in[e[i].st].push_back(i);\n        out[e[i].ed].push_back(i);\n    }\n    for(int i=1;i<=n+m;i++) id[i]=(i>n)?i-n:0;\n    int p,x,y,z,now=0;\n    for(int i=0;i<T;i++)\n    {\n        for(int j=0,k=out[i].size();j<k;j++)\n        {\n            p=out[i][j],x=e[p].x,y=e[p].y;\n            if(!vis[p]) vis[p]=1,cut(x,p+n),cut(y,p+n);\n        }\n        for(int j=0,k=in[i].size();j<k;j++)\n        {\n            p=in[i][j],x=e[p].x,y=e[p].y;\n            if(findroot(x)==findroot(y))\n            {\n                split(x,y),z=id[y];\n                if(e[p].ed<e[z].ed) z=p;\n                if(siz[y]%2==0) now=max(now,e[z].ed);\n                vis[z]=1;\n                if(z!=p)\n                {\n                    cut(e[z].x,z+n),cut(e[z].y,z+n);\n                    link(e[p].x,p+n),link(e[p].y,p+n);\n                }\n            }\n            else link(x,p+n),link(y,p+n);\n        }\n        if(i<now) printf(\"No\\n\");\n        else printf(\"Yes\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1576576654,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5787 \u3010\u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2alct\u505a\u6cd5\n\n\u663e\u7136\u8fd9\u79cd\u4e1c\u897f\u53ef\u4ee5\u5927\u529blct\u968f\u4fbf\u7ef4\u62a4\n\n\u6bcf\u4e2a\u8fb9\u7528\u626b\u63cf\u7ebf\u601d\u60f3\u5206\u6210\u52a0\u5165\u548c\u5220\u9664\u4e24\u6b21\uff0c\u8fb9\u6743\u4e3a\u5220\u9664\u65f6\u95f4\uff0c\u7528lct\u7ef4\u62a4\u6700\u5927\u751f\u6210\u6811\n\n\u4ece\u65f6\u95f40\u5230k\u626b\u4e00\u904d\n\n\u52a0\u8fb9\u5982\u679c\u4e0d\u6210\u73af\u76f4\u63a5\u52a0\n\n\u5426\u5219\u770b\u52a0\u8fdb\u53bb\u662f\u5426\u6784\u6210\u5947\u73af(lct\u8def\u5f84\u957f\u5ea6\u968f\u4fbf\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86)\n\n\u6784\u6210\u5947\u73af\u5c31\u628a\u591a\u4f59\u7684\u8fb9(\u73af\u4e0a\u7684\u6700\u5c0f\u8fb9)\u6807\u8bb0\u4e00\u4e0b\uff0c\u5e76\u505a\u7edf\u8ba1\n\n\u5220\u8fb9\u5728\u6811\u79cd\u76f4\u63a5\u5220\n\n\u5426\u5219\u770b\u6709\u6ca1\u6709\u88ab\u6807\u8bb0 \u88ab\u6807\u8bb0\u4e86\u5c31\u7edf\u8ba1\u6570\u51cf\u5c0f\n\n\u7136\u540e\u770b\u7edf\u8ba1\u6570\u662f\u4e0d\u662f\u4e3a0\u8f93\u51fa\u5373\u53ef\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cstddef>\nusing std::vector;\ntemplate<class type>inline const void swap(type &a,type &b)\n{\n\tconst type c(a);a=b;b=c;\n}\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch(getchar());bool f(0);\n\twhile (ch<48||ch>57){if (ch=='-')f=1;ch=getchar();}\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (f)in=-in;\n}\nconst int N(1e5+10),M(2e5+10),inf(2147483647);\nnamespace Link_Cut_Trees\n{\n\tstruct data\n\t{\n\t\tint val,id;\n\t\tinline data():val(inf),id(0){}\n\t\tinline data(const int &val,const int &id):val(val),id(id){}\n\t\tinline data operator+(const data &d)\n\t\t{\n\t\t\treturn val<d.val?data(val,id):data(d.val,d.id);\n\t\t}\n\t};\n\tstruct tree\n\t{\n\t\tbool rev;\n\t\tint size;\n\t\tdata val,mn;\n\t\ttree *son[2],*fa;\n\t\tstatic tree *null;\n\t\tvoid *operator new(size_t size);\n\t\tvoid *operator new[](size_t size);\n\t\tinline tree():size(0),rev(0)\n\t\t{\n\t\t\tstatic bool init(0);\n\t\t\tif (!init)\n\t\t\t\tinit=1,\n\t\t\t\tnull=new tree,\n\t\t\t\tnull->fa=null->son[0]=null->son[1]=null;\n\t\t\tson[0]=son[1]=fa=null;\n\t\t}\n\t\tinline const void pushup()\n\t\t{\n\t\t\tsize=son[0]->size+1+son[1]->size;\n\t\t\tmn=son[0]->mn+val+son[1]->mn;\n\t\t}\n\t\tinline const void reverse()\n\t\t{\n\t\t\tswap(son[0],son[1]);rev^=1;\n\t\t}\n\t\tinline const void pushdown()\n\t\t{\n\t\t\tif (rev)\n\t\t\t\tson[0]->reverse(),\n\t\t\t\tson[1]->reverse(),\n\t\t\t\trev=0;\n\t\t}\n\t\tinline const bool isroot()\n\t\t{\n\t\t\treturn fa->son[1]!=this&&fa->son[0]!=this;\n\t\t}\n\t\tinline const bool identity()\n\t\t{\n\t\t\treturn fa->son[1]==this;\n\t\t}\n\t\tinline const void rotate()\n\t\t{\n\t\t\tconst bool f(identity());\n\t\t\ttree *fa(this->fa),*gfa(fa->fa),*q(son[!f]);\n\t\t\tif (!fa->isroot())gfa->son[fa->identity()]=this;\n\t\t\t(son[!f]=fa)->son[f]=q;\n\t\t\t((q->fa=fa)->fa=this)->fa=gfa;\n\t\t\tfa->pushup();\n\t\t}\n\t\tinline const void relieve()\n\t\t{\n\t\t\tif (!isroot())fa->relieve();\n\t\t\tpushdown();\n\t\t}\n\t\tinline const void splay()\n\t\t{\n\t\t\tfor (relieve();!isroot();rotate())\n\t\t\t\tif (!fa->isroot())\n\t\t\t\t\t(fa->identity()^identity()?this:fa)->rotate();\n\t\t\tpushup();\n\t\t}\n\t};\n\ttree* tree::null;\n\t#define null tree::null\n\tinline const void access(tree *x)\n\t{\n\t\ttree *p(x);\n\t\tfor (tree *y=null;x!=null;x=(y=x)->fa)\n\t\t\tx->splay(),x->son[1]=y,x->pushup();\n\t\tp->splay();\n\t}\n\tinline const void evert(tree *x)\n\t{\n\t\taccess(x);x->reverse();\n\t}\n\tinline const void expose(tree *x,tree *y)\n\t{\n\t\tevert(x);access(y);\n\t}\n\tinline tree *findroot(tree *x)\n\t{\n\t\tfor (access(x);x->son[0]!=null;x->pushdown())x=x->son[0];\n\t\tx->splay();return x;\n\t}\n\tinline const void link(tree *x,tree *y)\n\t{\n\t\tevert(x);x->fa=y;\n\t}\n\tinline const void cut(tree *x,tree *y)\n\t{\n\t\texpose(x,y);y->son[0]=x->fa=null;y->pushup();\n\t}\n\tconst int maxn(N+M);\n\tchar memory_pool[maxn*sizeof(tree)],*tail(memory_pool+sizeof(memory_pool));\n\tinline void *tree::operator new(size_t size){return tail-=size;}\n\tinline void *tree::operator new[](size_t size){return tail-=size;}\n\ttree *node0,*edge0;\n\tinline tree *node(const int &x){return node0+x;}\n\tinline tree *edge(const int &x){return edge0+x;}\n}using namespace Link_Cut_Trees;\nbool intree[M],inset[M];\nint n,m,t,x[M],y[M],cnt;\ntypedef vector<int>vit;\nvit add[N],del[N];\ninline const void insert(const int &e)\n{\n\tconst int u(x[e]),v(y[e]),w(edge(e)->val.val);\n\tif (u==v)return inset[e]=1,cnt++,void();\n\tif (findroot(node(u))!=findroot(node(v)))\n\t\treturn intree[e]=1,link(node(u),edge(e)),link(edge(e),node(v));\n\texpose(node(u),node(v));\n\tconst int len(node(v)->size-1>>1),mn(node(v)->mn.id),mv(node(v)->mn.val);\n\tif (w>mv)\n\t\tcut(node(x[mn]),edge(mn)),\n\t\tcut(edge(mn),node(y[mn])),\n\t\tintree[mn]=0,\n\t\tlink(node(u),edge(e)),\n\t\tlink(edge(e),node(v)),\n\t\tintree[e]=1;\n\tif (len&1^1)inset[w>mv?mn:e]=1,cnt++;\n}\ninline const void remove(const int &e)\n{\n\tconst int u(x[e]),v(y[e]);\n\tif (intree[e])cut(node(u),edge(e)),cut(edge(e),node(v));\n\telse if (inset[e])cnt--;\n}\nint main()\n{\n\tread(n);read(m);read(t);\n\tnode0=new tree[n+1];edge0=new tree[m+1];\n\tfor (int i(1),s,e;i<=m;i++)\n\t\tread(x[i]),read(y[i]),\n\t\tread(s),read(e),\n\t\tadd[s].push_back(i),\n\t\tdel[e].push_back(i),\n\t\tedge(i)->val=edge(i)->mn=data(e,i);\n\tfor (int i(0);i<t;i++)\n\t{\n\t\tfor (vit::iterator j=add[i].begin();j!=add[i].end();j++)insert(*j);\n\t\tfor (vit::iterator j=del[i].begin();j!=del[i].end();j++)remove(*j);\n\t\tputs(cnt?\"No\":\"Yes\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1576570053,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5787 \u3010\u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u90fd\u8bf4\u7ebf\u6bb5\u6811\u5206\u6cbb\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u628a\u5b83\u4f18\u5316\u5230\u7ebf\u6027\uff01\n\n\u8bf7\u786e\u4fdd\u4f60\u4f1a\u57fa\u7840\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\n\n### \u601d\u8def\n\n\u4f3c\u4e4e\u662f\u4e2a\u7ecf\u5178\u7684 trick\uff1f\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u8fc7\u7a0b\u3002\n* \u5f80\u65f6\u95f4\u5e8f\u5217\u91cc\u52a0**\u8fb9**\u7684\u4fe1\u606f\u3002\n* dfs \u4e00\u904d\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u6b65\u5f88\u6d6a\u8d39\u7a7a\u95f4\u3002\n\n\u600e\u4e48\u529e\uff1f\n\n\u6ce8\u610f\u5230\u6bcf\u6761\u8fb9\u300e\u63d2\u5165\u300f\u7684\u4fe1\u606f\u53ef\u4ee5\u4fdd\u5b58\u5728\u6839\u7ed3\u70b9\uff0c\u5728 dfs \u65f6\u628a\u4fe1\u606f\u4e0b\u653e\u5e76**\u4e0d\u5728\u672c\u5730\u7559\u526f\u672c**\uff0c\u7136\u540e\u628a\u8fb9\u4fe1\u606f\u56de\u7ed9\u7236\u4eb2\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4fdd\u6301\u4e0d\u53d8\uff0c\u7a7a\u95f4\u7ebf\u6027\uff0c\u4e0d\u8fc7\u65f6\u95f4\u5e38\u6570\u5e94\u8be5\u5de8\u5927\u3002\n\n\u7406\u8bba\u4e0a\u4e5f\u53ef\u4ee5\u89e3\u51b3\u67d0\u4e9b[\u534a\u5728\u7ebf](https://www.luogu.com.cn/problem/CF576E)\u7684\u9898\u76ee\u3002\n\n---\n### Code\n\n\u4f7f\u7528**\u524d\u5411\u661f**\u7ef4\u62a4\uff0c\u4e5f\u4e0d\u89c1\u5f97\u6162\u4e86\u591a\u5c11\uff08\u8fd9\u8fd8\u662f\u5728\u4f7f\u7528 Heap-DSU \u7684\u57fa\u7840\u4e0a\uff09\u3002\n\n\u7a7a\u95f4\u4f4e\u4e8e 10MB\u3002\n\n```cpp\n#include <algorithm>\n#include <stdio.h>\n#include <vector>\ntypedef long long llt;\ntypedef unsigned uint;typedef unsigned long long ullt;\ntypedef bool bol;typedef char chr;typedef void voi;\ntypedef double dbl;\ntemplate<typename T>bol _max(T&a,T b){return(a<b)?a=b,true:false;}\ntemplate<typename T>bol _min(T&a,T b){return(b<a)?a=b,true:false;}\ntemplate<typename T>T lowbit(T n){return n&-n;}\ntemplate<typename T>T gcd(T a,T b){return b?gcd(b,a%b):a;}\ntemplate<typename T>T lcm(T a,T b){return(a!=0||b!=0)?a/gcd(a,b)*b:(T)0;}\ntemplate<typename T>T exgcd(T a,T b,T&x,T&y){if(b!=0){T ans=exgcd(b,a%b,y,x);y-=a/b*x;return ans;}else return y=0,x=1,a;}\ntemplate<typename T>T power(T base,T index,T mod)\n{\n    T ans=1%mod;\n    while(index)\n    {\n        if(index&1)ans=ans*base%mod;\n        base=base*base%mod,index>>=1;\n    }\n    return ans;\n}\nuint Ra=1,Rb=10007,Rc=114513;\nstruct Rand{uint operator()(){return Ra=Ra*Rb+Rc;}};\nnamespace Heap_DSU //\u4eba\u7c7b\u667a\u6167\u52bf\u80fd\u5e76\u67e5\u96c6\n{\n    uint Fath[200005],H[200005];\n    uint Used[200005],tp;\n    voi bzr(uint n){for(uint i=0;i<n;i++)Fath[i]=i,H[i]=Rand()();}\n    uint find(uint p){return Fath[p]==p?p:find(Fath[p]);}\n    bol connected(uint a,uint b){return find(a)==find(b);}\n    bol merge(uint a,uint b)\n    {\n        a=find(a),b=find(b);\n        if(a==b)return Used[tp++]=a,false;\n        if(H[a]<H[b])std::swap(a,b);\n        Fath[b]=a,Used[tp++]=b;\n        return true;\n    }\n    bol revoke()\n    {\n        if(!tp)return false;\n        uint p=Used[--tp];\n        if(p==Fath[p])return false;\n        Fath[p]=p;return true;\n    }\n};\ntypedef std::pair<uint,uint>Pair;\ntypedef std::pair<Pair,Pair>Pair2;\nPair2 P[200005];\nuint Last[200005],End[25]; // \u4f7f\u7528\u524d\u5411\u661f\u5361\u5e38\u3002\nvoi insert_edge(uint dep,uint p){Last[p]=End[dep],End[dep]=p;}\nvoi dfs(uint l,uint r,uint dep)\n{\n    uint cnt=0;\n    for(uint i=End[dep];~i;i=Last[i])if(P[i].second.first<=l&&P[i].second.second>=r)\n    {\n        cnt+=2;\n        Heap_DSU::merge(P[i].first.first<<1,P[i].first.second<<1|1);\n        Heap_DSU::merge(P[i].first.first<<1|1,P[i].first.second<<1);\n        if(Heap_DSU::connected(P[i].first.first<<1,P[i].first.first<<1|1))\n        {\n            for(uint i=l;i<r;i++)puts(\"No\");\n            while(cnt--)Heap_DSU::revoke();\n            return;\n        }\n    }\n    if(r-l==1)puts(\"Yes\");\n    else{\n        uint mid=(l+r)>>1;\n        End[dep+1]=-1;\n        for(uint i=End[dep],last=-1,nxt;~i;i=nxt)\n        {\n            nxt=Last[i];\n            if(!(P[i].second.first<=l&&P[i].second.second>=r)&&P[i].second.first<mid)\n            {\n                ((~last)?Last[last]:End[dep])=nxt;\n                insert_edge(dep+1,i);\n            }\n            else last=i;\n        }\n        dfs(l,mid,dep+1);\n        for(uint i=End[dep+1],nxt;~i;i=nxt)nxt=Last[i],insert_edge(dep,i);\n        End[dep+1]=-1;\n        for(uint i=End[dep],last=-1,nxt;~i;i=nxt)\n        {\n            nxt=Last[i];\n            if(!(P[i].second.first<=l&&P[i].second.second>=r)&&P[i].second.second>mid)\n            {\n                ((~last)?Last[last]:End[dep])=nxt;\n                insert_edge(dep+1,i);\n            }\n            else last=i;\n        }\n        dfs(mid,r,dep+1);\n        for(uint i=End[dep+1],nxt;~i;i=nxt)nxt=Last[i],insert_edge(dep,i);\n    }\n    while(cnt--)Heap_DSU::revoke();\n}\nint main()\n{\n#ifdef MYEE\n    freopen(\"QAQ.in\",\"r\",stdin);\n#endif\n\tuint n,m,k;scanf(\"%u%u%u\",&n,&m,&k),Heap_DSU::bzr(n<<1);\n    End[0]=-1;\n    for(uint i=0;i<m;i++)\n\t{\n\t\tscanf(\"%u%u%u%u\",&P[i].first.first,&P[i].first.second,&P[i].second.first,&P[i].second.second);\n        P[i].first.first--,P[i].first.second--;\n        insert_edge(0,i);\n\t}\n\tdfs(0,k,0);\n\treturn 0;\n}\n```\n",
        "postTime": 1650870459,
        "uid": 105050,
        "name": "myee",
        "ccfLevel": 7,
        "title": "5787"
    },
    {
        "content": "[\u4e5f\u8bb8\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.moyujiang.com/989.html)\u3002\n\n\u7ebf\u6bb5\u6811\u5206\u6cbb\u5176\u5b9e\u4e2a\u4eba\u66f4\u613f\u610f\u8ba4\u4e3a\u5b83\u66f4\u50cf\u4e00\u79cd\u6280\u5de7\u800c\u4e0d\u662f\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5373\u5e26\u64a4\u9500\u64cd\u4f5c\u7684\u65f6\u95f4\u5206\u6cbb\u3002\u64cd\u4f5c\u5f62\u5f0f\u591a\u4e3a\u7ef4\u62a4\u4e00\u4e9b\u4fe1\u606f\uff0c\u64cd\u4f5c\u53ef\u80fd\u6709\u8be2\u95ee/\u6267\u884c\u64cd\u4f5c/\u64a4\u56de\u64cd\u4f5c\uff0c\u5176\u64cd\u4f5c\u7684\u6267\u884c\u8f83\u4e3a\u5bb9\u6613\uff0c\u4f46\u64a4\u56de\u56f0\u96be\u3002\u6240\u4ee5\u628a\u64cd\u4f5c\uff0c\u8be2\u95ee\u4e00\u8d77\u79bb\u7ebf\u4e0b\u6765\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u53ea\u5728\u65f6\u95f4\u8f74\u4e0a\u7684\u4e00\u4e2a\u533a\u95f4\u751f\u6548\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u8fd9\u4e2a\u533a\u95f4\u6253\u4e0a\u64cd\u4f5c\u7684\u6807\u8bb0\uff0c\u7ef4\u62a4\u4fe1\u606f\uff0c\u5728\u53f6\u5b50\u7ed3\u70b9\u8ba1\u7b97\u7b54\u6848\u3002\n\n[\u6a21\u677f\u9898P5757](https://www.luogu.com.cn/problem/P5787)\uff1a\u4e00\u5f20 $n$ \u4e2a\u70b9\u7684\u56fe\uff0c\u6709 $m$ \u6761\u65e0\u5411\u8fb9\u4f1a\u5728 $[l_i,r_i]$ \u65f6\u523b\u5b58\u5728\uff0c\u6c42\u5728 $[1,k]$ \u65f6\u523b\u4e2d\u6bcf\u4e2a\u65f6\u523b\u6574\u5f20\u56fe\u662f\u5426\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n\n$1\\leq n\\leq 10^5$\uff0c$1\\leq l_i\\leq r_i\\leq k\\leq 10^5$\uff0c$1\\leq m\\leq 2\\times 10^5$\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u5224\u5b9a\u4e8c\u5206\u56fe\uff0c\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff0c\u7ebf\u6bb5\u6811\u3002\n\n\u8003\u8651\u4e8c\u5206\u56fe\u4e2d\u4e00\u6761\u8fb9\u7684\u610f\u4e49\u4e3a\u5176\u4e24\u8fb9\u7aef\u70b9\u4e0d\u5728\u540c\u4e00\u90e8\uff0c\u5219\u7528 $x,x+n$ \u4ee3\u8868 $x$ \u4e0e $x$ \u7684\u5bf9\u7acb\u70b9\uff0c\u548c $x$ \u7684\u5bf9\u7acb\u70b9\u5904\u4e8e\u540c\u4e00\u96c6\u5408\u7684\u5219\u548c $x$ \u4e0d\u5728\u540c\u4e00\u90e8\uff0c\u90a3\u4e48\u4e8c\u5206\u56fe\u4e2d\u4e00\u6761\u8fb9\u5c31\u662f\u4e92\u76f8\u548c\u5bf9\u65b9\u7684\u5bf9\u7acb\u70b9\u76f8\u8fde\uff0c\u82e5\u51fa\u73b0 $x$ \u548c $x+n$ \u5904\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408\u5219\u8bf4\u660e\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u5e76\u4e14\u82e5 $x,y$ \u662f\u56fe\u53d8\u4e3a\u975e\u4e8c\u5206\u56fe\u52a0\u7684\u6700\u540e\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48 $x,x+n$\uff0c$y,y+n$ \u4e4b\u95f4\u4f1a\u5206\u522b\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\n\n\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u7684\u539f\u7406\u662f\u8003\u8651\u5e76\u67e5\u96c6\u5e38\u89c1\u7684\u4e24\u79cd\u4f18\u5316\uff0c\u8def\u5f84\u538b\u7f29\u548c\u6309\u79e9\u5408\u5e76\uff0c\u8fd9\u91cc\u7684\u79e9\u53ef\u4ee5\u662f size,depth\uff0c\u751a\u81f3\u662f rand\uff0c\u5355\u72ec\u7528 size \u4f5c\u4e3a\u79e9\u8fdb\u884c\u6309\u79e9\u5408\u5e76\u7684\u597d\u5904\u662f\uff0c\u628a $x$ \u5e76\u5230 $y$ \u4e0a\u7684\u64cd\u4f5c\u53ea\u6709\u7d2f\u52a0 $sz_x$ \u81f3 $sz_y$\uff0c\u66f4\u65b0 $fa_x$ \u4e3a $y$\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u82e5\u6700\u8fd1\u4e00\u6b21\u64cd\u4f5c\u5c31\u662f\u628a $x$ \u5e76\u5230 $y$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5e76\u4e0a\u53bb\u7684\u64cd\u4f5c\u53ef\u4ee5\u628a $sz$ \u51cf\u56de\u53bb\uff0c$fa$ \u6062\u590d\uff0c\u5219\u505a\u5230\u4e86\u64a4\u9500\u3002\u5176\u9650\u5236\u5728\u4e8e\u53ea\u80fd\u6309\u7167\u5e76\u7684\u987a\u5e8f\u5012\u7740\u64a4\u9500\uff0c\u5373\u6309\u7167\u6808\u7684\u987a\u5e8f\uff0c\u5426\u5219\u540e\u6765\u5e76\u5230 $x$ \u4e0a\u7684\u8d21\u732e\u4e0d\u80fd\u4ec5\u51cf\u53bb $sz_x$ \u6765\u6d88\u9664\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u65f6\u95f4\u8f74\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a vector\uff0c\u7c7b\u4f3c\u6807\u8bb0\u6c38\u4e45\u5316\u5730\uff0c\u628a\u8fb9\u653e\u5165\u5176\u5b58\u5728\u65f6\u95f4\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u4e0a\uff0c\u5219\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u6240\u6709 vector \u91cc\u7684\u8fb9\u5c31\u662f\u5728\u5176\u5bf9\u5e94\u65f6\u523b\u5b58\u5728\u7684\u8fb9\u3002\u4e8e\u662f\u5f88\u81ea\u7136\u5730\u53d1\u73b0\u5728\u7ebf\u6bb5\u6811\u4e0a dfs\uff0c\u8fdb\u5165\u8282\u70b9\u65f6\u628a\u5b83 vector \u4e2d\u7684\u5143\u7d20\u63d2\u5165\u5e76\u67e5\u96c6\uff0c\u79bb\u5f00\u7684\u65f6\u5019\u5012\u5e8f\u64a4\u9500\uff0c\u5219 dfs \u6808\u9ed8\u8ba4\u5c31\u6709\u6309\u7167\u987a\u5e8f\u6765\u64a4\u9500\u7684\u6027\u8d28\uff0c\u5219\u5230\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u662f\u5426\u4ecd\u662f\u4e8c\u5206\u56fe\u3002\n\n\u4e8e\u662f\u603b\u590d\u6742\u5ea6 $O(m\\log k\\log n)$\uff0c[\u4e00\u4efd\u53c2\u8003\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/2erif1z6)\u3002\n\n[\u4f8b\u9898CF576E](https://www.luogu.com.cn/problem/CF576E)\uff1a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u989c\u8272\u4ece $1$ \u5230 $k$ \u7f16\u53f7\uff0c\u521d\u59cb\u8fb9\u4e0a\u989c\u8272\u5747\u4e3a $0$\uff0c$q$ \u6b21\u4fee\u6539\u64cd\u4f5c\u628a\u7b2c $e_i$ \u6761\u8fb9\u7684\u989c\u8272\u4fee\u6539\u4e3a $c_i$\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5408\u6cd5\u72b6\u6001\u4e3a $1\\cdots k$ \u6bcf\u4e2a\u989c\u8272\u7684\u8fb9\u96c6\u5206\u522b\u6784\u6210\u7684\u5b50\u56fe\u90fd\u662f\u4e8c\u5206\u56fe\uff0c\u82e5\u4fee\u6539\u4e4b\u540e\u7531\u5408\u6cd5\u72b6\u6001\u53d8\u4e3a\u975e\u6cd5\u72b6\u6001\uff0c\u5219\u6b64\u6b21\u4fee\u6539\u65e0\u6548\uff0c\u6c42\u6bcf\u6b21\u4fee\u6539\u662f\u5426\u6709\u6548\u3002\n\n$1\\leq n,m,q\\leq 5\\times 10^5$\uff0c$1\\leq k\\leq 50$\u3002\n\n\u8003\u8651\u8fd9\u9898\u7684\u5f62\u5f0f\u548c\u6a21\u677f\u9898\u975e\u5e38\u50cf\uff0c\u6570\u636e\u8303\u56f4\u4e5f\u652f\u6301\u6211\u4eec\u5bf9\u4e8e $k$ \u79cd\u989c\u8272\u5206\u522b\u7ef4\u62a4\uff0c\u6240\u4ee5\u8003\u8651\u5982\u4f55\u8fdb\u884c\u8f6c\u5316\u4f7f\u5f97\u53ef\u4ee5\u8ba9\u6211\u4eec\u7c7b\u4f3c\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u73b0\u5728\u7684\u56f0\u96be\u5728\u4e8e\uff0c\u6211\u4eec\u6ca1\u6709\u4e0a\u4e00\u9898\u4e00\u6837\u5f97\u5230\u4e00\u6761\u8fb9\u5728\u67d0\u4e2a\u65f6\u95f4\u5185\u5c5e\u4e8e\u67d0\u4e2a\u989c\u8272\u7684\u4fe1\u606f\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u6bcf\u6761\u8fb9\u7684\u989c\u8272\u60c5\u51b5\u3002\u82e5\u8fb9 $e_i$ \u76f8\u90bb\u7684\u4e24\u6b21\u989c\u8272\u4fee\u6539\u65f6\u523b\u4e3a $x<y$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u770b\u4f5c\uff0c\u5b83\u5728 $[x,x]$ \u65f6\u523b\u4fee\u6539\u4e86\u989c\u8272\uff0c\u5e76\u4e14\u7531\u4e8e\u662f\u5355\u70b9\u53d8\u66f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5230\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019\u5c1d\u8bd5\u4fee\u6539\u5e76\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u4ee5\u6b64\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u5176\u5728 $(x,y)$ \u65f6\u95f4\u4e2d\u7684\u989c\u8272\uff0c\u5c31\u548c\u4e0a\u9762\u4e00\u9898\u5b8c\u5168\u4e00\u81f4\u4e86\u3002\u8fd9\u91cc\u7684\u903b\u8f91\u662f\u5176\u9012\u5f52\u5230\u5e95\u5c42\u4e4b\u540e\u662f\u6ca1\u6709\u88ab\u524d\u9762\u6216\u540e\u9762\u7684\u4fee\u6539\u6240\u5305\u542b\u7684\uff0c\u800c\u4e14\u7531\u4e8e\u662f\u5148\u5904\u7406\u5de6\u513f\u5b50\uff0c\u5230 $(x,y)$ \u7684\u65f6\u5019\u4e00\u5b9a\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u53f6\u5b50 $x$\uff0c\u53ef\u4ee5\u77e5\u9053\u5176\u5bf9\u5e94\u7684\u989c\u8272\u5e76\u52a0\u5165\uff0c\u800c\u4e14\u7531\u4e8e\u662f\u5728\u65f6\u95f4\u8303\u56f4\u5185\u52a0\u5165\uff0c\u4e5f\u5e76\u6ca1\u6709\u5220\u9664\u7684\u64cd\u4f5c\u3002\n\n\u4e8e\u662f\u603b\u590d\u6742\u5ea6 $O(q\\log q\\log n+nk)$\uff0c[\u4e00\u4efd\u53c2\u8003\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/zjfnwcii)\u3002\n\n[\u4f8b\u9898CF603E](https://www.luogu.com.cn/problem/CF603E)\uff1a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u65e0\u5411\u56fe\uff0c$m$ \u6b21\u52a0\u5165\u4e00\u6761\u5e26\u6743\u8fb9 $(u,v,w)$\uff0c\u6c42\u6bcf\u6b21\u52a0\u5165\u540e\u662f\u5426\u80fd\u9009\u51fa\u4e00\u4e2a\u8fb9\u96c6\u4f7f\u5f97\u70b9 $\\operatorname{deg}_{1\\cdots n}$ \u5747\u4e3a\u5947\u6570\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u6700\u5c0f\u5316\u8be5\u8fb9\u96c6\u7684\u6700\u5927\u6743\u503c\u5e76\u8f93\u51fa\u3002\n\n$1\\leq n\\leq 10^5$\uff0c$1\\leq m\\leq 3\\times 10^5$\u3002\n\n\u8fd9\u9053\u9898\u9996\u5148\u9700\u8981\u5206\u6790\u4e00\u4e0b\u6027\u8d28\uff0c\u9996\u5148\u9009\u51fa\u6765\u7684\u8fb9\u96c6\u4e2d\u82e5\u5b58\u5728\u73af\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u628a\u73af\u5220\u6389\u4ee5\u5f97\u5230\u4e0d\u52a3\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u6784\u6210\u7684\u6bcf\u4e2a\u8054\u901a\u5757\u90fd\u662f\u6811\u3002\u8003\u8651\u4e00\u68f5\u4ec0\u4e48\u6837\u7684\u6811\u53ef\u4ee5\u6ee1\u8db3\u6027\u8d28\uff0c\u4e0d\u96be\u53d1\u73b0\u9664\u4e86\u6839\u6709\u5947\u6570\u4e2a\u513f\u5b50\uff0c\u5176\u5b83\u70b9\u90fd\u53ea\u6709\u5076\u6570\u4e2a\u513f\u5b50\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u901a\u8fc7\u5bf9\u4e00\u68f5\u4efb\u610f\u6811\u8fdb\u884c\u8c03\u6574\u6765\u63a7\u5236\u6839\u548c\u975e\u6839\u7684\u53f6\u5b50\u6570\u91cf\uff1a\u82e5\u4e00\u4e2a\u70b9\u6709\u5076\u6570\u4e2a\u513f\u5b50\uff0c\u5219\u4fdd\u7559\u5b83\u4e0e\u7236\u4eb2\u7684\u8fb9\uff0c\u5426\u5219\u5220\u6389\uff0c\u4f7f\u5176\u6210\u4e3a\u5b50\u6811\u7684\u6839\u8282\u70b9\u3002\u5982\u679c\u80fd\u5b8c\u6574\u7ecf\u8fc7\u8fd9\u6837\u7684\u8c03\u6574\uff0c\u65b0\u5f62\u6210\u7684\u82e5\u5e72\u68f5\u6811\u5c31\u5e94\u8be5\u662f\u5408\u6cd5\u7684\u3002\u8003\u8651\u4ece\u53f6\u5b50\u8282\u70b9\u6765\u770b\uff0c\u4e00\u4e2a\u975e\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e3a\u5176\u81ea\u8eab\u52a0\u4e0a\u5076\u6570\u4e2a\u513f\u5b50\u7684\u5b50\u6811\uff0c\u5219\u5176 size \u662f\u5947\u6570\uff1b\u4e00\u4e2a\u6839\u8282\u70b9\u662f\u5b83\u672c\u8eab\u52a0\u4e0a\u5947\u6570\u4e2a size \u4e3a\u5947\u6570\u7684\u513f\u5b50\u7684\u5b50\u6811\uff0c\u6240\u4ee5\u5b83\u7684 size \u662f\u5076\u6570\uff1b\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\uff0c\u6bcf\u4e2a\u70b9\u5ea6\u6570\u90fd\u662f\u5947\u6570\uff0c\u800c\u603b\u5ea6\u6570\u662f\u5076\u6570\uff08\u6bcf\u6761\u8fb9\u8d21\u732e $2$\uff09\uff0c\u4e5f\u8981\u6c42\u5176 size \u662f\u5076\u6570\u3002\u5219\u4e00\u68f5 size \u662f\u5076\u6570\u7684\u6811\uff0c\u82e5\u5176\u6bcf\u4e2a\u975e\u6839\u8282\u70b9 size \u90fd\u4e3a\u5947\u6570\uff0c\u5219\u4e00\u5b9a\u5408\u6cd5\uff0c\u5426\u5219\u5272\u6389\u6240\u6709 size \u7684\u5076\u6570\u7684\u5b50\u6811\u5c31\u5408\u6cd5\u4e86\uff0c\u4e8e\u662f\u8054\u901a\u5757 size \u662f\u5076\u6570\u5373\u4e3a\u6bcf\u4e2a\u70b9\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u5145\u8981\u6761\u4ef6\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\uff0c\u82e5\u4e00\u4e2a\u8054\u901a\u5757\u70b9\u6570\u4e3a\u5076\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u8c03\u6574\uff0c\u5220\u9664\u4e00\u4e9b\u8054\u901a\u5757\u4e2d\u7684\u8fb9\u4f7f\u5176\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5947\u6570\uff0c\u81f3\u6b64\u4fbf\u5f97\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\u9759\u6001\u7248\u89e3\u51b3\u65b9\u6cd5\uff1a\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u8fbe\u52a0\u5165\u5e76\u67e5\u96c6\uff0c\u76f4\u5230\u4e0d\u5b58\u5728 size \u4e3a\u5947\u6570\u7684\u8054\u901a\u5757\u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u52a8\u6001\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5982\u679c\u6cbf\u7528\u4e0a\u9762\u7684\u505a\u6cd5\uff0c\u90a3\u4e48\u4e0d\u6309\u8fb9\u6743\u987a\u5e8f\u52a0\u8fb9\u7684\u540e\u679c\u662f\uff0c\u53ef\u80fd\u4e00\u6b21\u4fee\u6539\u4f1a\u5bfc\u81f4\u6574\u5f20\u56fe\u7684\u7ed3\u6784\u53d1\u751f\u5de8\u5927\u53d8\u5316\uff0c\u8fd9\u4e0d\u662f\u7528\u76ee\u524d\u7684\u7b80\u5355\u505a\u6cd5\u53ef\u4ee5\u7ef4\u62a4\u7684\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6316\u6398\u6027\u8d28\uff0c\u627e\u5230\u5176\u5b83\u505a\u6cd5\u3002\u9996\u5148\u8003\u8651\u8fd9\u6837\u4e00\u4ef6\u4e8b\u60c5\uff0c\u4e00\u6761\u8fb9\u53ef\u80fd\u5b58\u5728\u4e8e\u8fb9\u96c6\u4e2d\u7684\u65f6\u95f4\u662f\u4e00\u4e2a\u533a\u95f4\u6216\u4e0d\u5b58\u5728\uff0c\u7531\u4e8e\u7b54\u6848\u662f\u5355\u8c03\u4e0d\u5347\u7684\uff0c\u89c2\u5bdf\u4e00\u4e0b\u53ef\u4ee5\u5f97\u5230\uff0c\u7b2c $i$ \u6761\u8fb9\u53ef\u80fd\u4ea7\u751f\u8d21\u732e\u7684\u65f6\u95f4\u4e3a $[i,j]$\uff0c\u5176\u4e2d $j$ \u662f\u6700\u540e\u4e00\u4e2a\u6ee1\u8db3 $ans_j\\ge val_i$ \u7684\u65f6\u523b\u3002\u6211\u4eec\u5e0c\u671b\u80fd\u5f97\u5230\u8fd9\u4e2a\u533a\u95f4\uff0c\u800c\u7b54\u6848\u53c8\u662f\u5355\u8c03\u4e0d\u5347\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8fb9\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5e76\u7ef4\u62a4\u4e00\u4e2a\u4ece\u524d\u5f80\u540e\u4e0d\u9000\u7684\u6307\u9488\uff0c\u7ebf\u6bb5\u6811\u5206\u6cbb\u5230\u53f6\u5b50\u8282\u70b9 $[l,l]$ \u4e4b\u540e\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u6ee1\u8db3\u4e0d\u5b58\u5728\u5947\u6570\u5927\u5c0f\u8054\u901a\u5757\uff0c\u5219\u66b4\u529b\u63a8\u8fdb\u6307\u9488\u5e76\u52a0\u5165\u7f16\u53f7 $<l$ \u7684\u8fb9\u76f4\u5230\u5408\u6cd5\u3002\u90a3\u4e48 $[i,j]$ \u7684 $j$ \u600e\u4e48\u6c42\u5462\uff1f\u53d1\u73b0\u6211\u4eec\u6bcf\u6b21\u63a8\u8fdb\u6307\u9488\u5e76\u52a0\u5165\u8fb9 $i$\uff0c\u5176\u5bf9\u5e94\u7684 $j$ \u5c31\u662f $l$\uff0c\u90a3\u4e48\u7531\u4e8e\u6211\u4eec\u53c8\u662f\u4ece\u540e\u5f80\u524d\u904d\u5386\u7684\uff0c\u5219\u6b64\u65f6\u628a $i$ \u653e\u5230 $[i,l)$ \u4e0a\u5c31\u597d\u4e86\uff0c\u5373\u8fd9\u662f\u4e00\u4e2a\u4e00\u8fb9\u5206\u6cbb\u4e00\u8fb9\u8986\u76d6\u7684\u8fc7\u7a0b\uff0c\u8986\u76d6\u7684\u4f4d\u7f6e\u662f\u6839\u636e\u5206\u6cbb\u7684\u8fc7\u7a0b\u6765\u51b3\u5b9a\u7684\u3002\n\n\u603b\u590d\u6742\u5ea6\u4f9d\u7136\u662f\u4e24\u53ea $\\log$\uff0c[\u4e00\u4efd\u53c2\u8003\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/9swuwnm5)\u3002\n\n\u540c\u6837\u662f\u4e24\u53ea $\\log$ \u7684\u590d\u6742\u5ea6\uff0c\u8fd9\u9898\u8fd8\u53ef\u4ee5\u7528\u6574\u4f53\u4e8c\u5206\u6765\u89e3\u51b3\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u6574\u4f53\u4e8c\u5206\u7684\u505a\u6cd5\u3002\n\n\u56e0\u4e3a\u7b54\u6848\u662f\u5355\u8c03\u7684\uff0c\u6211\u4eec\u7528\u51fd\u6570 $\\text{solve}(l,r,L,R)$ \u8868\u793a $ans_{l\\cdots r}\\in [L,R]$\uff0c\u5e76\u4e14 $i<l$ \u4e14 $val<L$ \u7684\u8fb9\u5df2\u7ecf\u52a0\u5165\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5206\u6cbb\u3002\n\n\u548c\u666e\u901a\u6574\u4f53\u4e8c\u5206\u4e00\u6837\u5730\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa $m=\\lfloor \\frac{l+r}2 \\rfloor$\uff0c$ans_{mid}$ \u7684\u503c $p$\uff0c\u5e76\u9012\u5f52\u5904\u7406 $\\text{solve}(l,m-1,p,R),\\text{solve}(m+1,r,L,p)$\uff0c\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u6c42 $ans_{m}$\u3002\n\n\u73b0\u5728\u5df2\u7ecf\u52a0\u5165\u7684\u8fb9\u6ee1\u8db3 $i<l$ \u4e14 $val<L$\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u52a0\u5165\u7684\u8fb9\u6709\uff1a\n\n1. $l\\leq i\\leq m$ \u4e14 $val< L$ \u7684\u8fb9\uff0c\u5bf9\u7b54\u6848\u65e0\u5f71\u54cd\uff0c\u76f4\u63a5\u52a0\u5165\uff1b\n2. $L\\leq val\\leq R$ \u4e14 $i\\leq m$ \u7684\u8fb9\uff0c\u6309 $val$ \u4ece\u5c0f\u5230\u5927\u52a0\u5165\uff0c\u76f4\u5230\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u6b64\u65f6\u7684\u8fb9\u6743\u5c31\u662f\u7b54\u6848\uff1b\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u5f97\u5230 $p$\uff0c\u518d\u5728\u9012\u5f52\u4e4b\u524d\u6062\u590d/\u52a0\u8fb9\u5230\u6ee1\u8db3\u9012\u5f52\u524d\u7f6e\u8981\u6c42\uff08$i<l$ \u4e14 $val<L$ \u7684\u8fb9\u5df2\u7ecf\u52a0\u5165\uff09\u518d\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6\u4e24\u53ea $\\log$\uff0c\u5b9e\u6d4b\u8dd1\u5f97\u6bd4\u7ebf\u6bb5\u6811\u5206\u6cbb\u7565\u5feb\uff0c[\u4e00\u4efd\u53c2\u8003\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/i4bamlk2)\u3002",
        "postTime": 1643109995,
        "uid": 173685,
        "name": "\u6478\u9c7c\u9171",
        "ccfLevel": 8,
        "title": "\u7ebf\u6bb5\u6811\u5206\u6cbb\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "- \u4f5c\u8005\u592a\u83dc\u4e0d\u4f1a\u6253 LCT\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u7bc7\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u535a\u5ba2\u3002\n- \u5e0c\u671b\u80fd\u8bb2\u5230\u4e00\u4e9b\u672c\u8d28\u4e0a\u7684\u4e1c\u897f\u3002\n\n**\u5f15\u5165**\n- \u9700\u8981\u4f60\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u52a0\u8fb9\uff0c\u5220\u8fb9\uff0c\u7ef4\u62a4\u8fde\u901a\u6027\uff0c\u600e\u4e48\u505a\uff1f\n- \u6211\u4eec\u77e5\u9053\u666e\u901a\u7684\u5e76\u67e5\u96c6\u52a0\u8fb9\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u4f46\u5220\u9664\u8fb9\u5374\u5f88\u56f0\u96be\uff08\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u4f5c\u8005\u53d1\u73b0\u6309\u79e9\u5408\u5e76\uff0c\u8def\u5f84\u538b\u7f29\u90fd\u5f88\u96be\u7528\uff09\u3002\n- \u4f46\u662f\u5982\u679c\u9700\u8981\u4f60\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u52a0\u8fb9\uff0c\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u7ef4\u62a4\u8fde\u901a\u6027\u3002\n- \u8fd9\u5176\u5b9e\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u6309\u79e9\u5408\u5e76\u7684\u5e76\u67e5\u96c6\uff0c\u7528\u4e00\u4e2a\u6808\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u6b21\u5408\u5e76\u66f4\u6539\u4e86\u54ea\u4e2a\u7684\u7236\u4eb2\uff0c\u5c31\u53ef\u4ee5\u8f7b\u6613\u5730\u7ef4\u62a4\u3002\n- \u4e8b\u5b9e\u4e0a\uff0c\u975e\u5747\u644a\u590d\u6742\u5ea6\u7684\u6570\u636e\u7ed3\u6784\u666e\u904d\u80fd\u591f\u9ad8\u6548\u7ef4\u62a4\u201c\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u4e4b\u524d\u7684\u72b6\u6001\u201d\u3002\uff08\u5747\u644a\u590d\u6742\u5ea6\u7684\u6570\u636e\u7ed3\u6784\u4f1a\u6253\u7834\u5f53\u524d\u7684\u52bf\uff09\n- \u4f46\u662f\u6211\u4eec\u600e\u4e48\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f\n\n**\u7ebf\u6bb5\u6811\u5206\u6cbb**\n- \u5b83\u5206\u6cbb\uff0c\u5206\u6cbb\u7684\u662f\u4ec0\u4e48\uff0c\u662f\u65f6\u95f4\u3002\n- \u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u5b58\u7684\uff0c\u662f\u5305\u542b\u8be5\u533a\u95f4\uff08\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u65f6\u95f4\u6bb5\uff09\u7684\u64cd\u4f5c\uff08\u540c\u65f6\u64cd\u4f5c\u4e0d\u4e0b\u4f20\uff09\u3002\n- \u90a3\u4e48 $n$ \u4e2a\u64cd\u4f5c\u4f1a\u53d8\u6210 $n\\lg t$ \u4e2a\u64cd\u4f5c\u3002\n- \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5bf9\u7ebf\u6bb5\u6811\u8fdb\u884c\u5148\u5e8f\u904d\u5386\uff0c\u8282\u70b9\u5165\u6808\u5c31\u52a0\u5165\u64cd\u4f5c\uff0c\u8282\u70b9\u51fa\u6808\u5c31\u64a4\u56de\uff0c\u5982\u679c\u63d2\u5165\u548c\u64a4\u56de\u7684\u64cd\u4f5c\u590d\u6742\u5ea6\u662f $f(m)$\uff0c\u90a3\u4e48\u603b\u7684\u590d\u6742\u5ea6\u5c31\u662f $n\\lg t\\cdot f(m)$\u3002\n\n**\u4f8b\u9898**\n- [\u4f8b\u9898](https://www.luogu.com.cn/problem/P5787)\u3002\n- \u5728\u4e00\u4e2a\u65f6\u95f4\u6bb5 $[l,r]$ \u5185\u52a0\u5165\u4e00\u6761\u8fb9\uff08$l$ \u65f6\u523b\u63d2\u5165 $r$ \u65f6\u523b\u5220\u9664\uff09\u3002\n- \u7ef4\u62a4\u56fe\u662f\u4e0d\u662f\u4e8c\u5206\u56fe\u3002\n- \u6240\u8bb2\u7684\u8ddf\u4e0a\u9762\u7684\u51e0\u4e4e\u4e00\u6837\uff0c\u4f46\u9009\u7528\u7684\u7ef4\u62a4\u6570\u636e\u7ed3\u6784\u9700\u8981\u7528\u5230\u4e00\u79cd[\u7279\u6b8a\u7684\u5e76\u67e5\u96c6](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/bing-zha-ji)\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/o5n7k9np)\u3002\n\n**\u540e\u8bb0**\n- \u4f5c\u8005\u8ba4\u4e3a\u7684\u96be\u5ea6\u3002\n- \u53ef\u8ffd\u6eaf\u5316\u6570\u636e\u7ed3\u6784 $>$ \u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784 $>$ \u53ef\u64a4\u56de\u5316\u6570\u636e\u7ed3\u6784 $\\ge$ \u753b\u98ce\u6b63\u5e38\u7684\u6570\u636e\u7ed3\u6784\u3002",
        "postTime": 1639048679,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "P5787"
    },
    {
        "content": "# P5787 \u9898\u89e3\n\u8fd9\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u5206\u6cbb\u9898\uff0c\u6211\u6765\u5c3d\u91cf\u7684\u628a\u7ebf\u6bb5\u6811\u5206\u6cbb\u8fd9\u4e2a\u7b97\u6cd5\u5728\u8fd9\u4e2a\u9898\u91cc\u7684\u5e94\u7528\u8bb2\u6e05\u695a\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5982\u679c\u6211\u4eec\u80fd\u7ef4\u62a4\u4ee5\u4e0b\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u89e3\u51b3\u8fd9\u9053\u9898\uff1a\n\n1. \u52a0\u4e00\u6761\u65e0\u5411\u8fb9\n\n2. \u5220\u9664\u4e00\u6761\u5df2\u7ecf\u52a0\u8fc7\u7684\u8fb9\n\n3. \u5224\u65ad\u5f53\u524d\u56fe\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\n\n\u5982\u679c\u6ca1\u6709 $2$ \u64cd\u4f5c,\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u4f7f\u7528\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u90a3\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u539f\u5148\u7684\u5e76\u67e5\u96c6\u591a\u7ef4\u62a4\u4e00\u4e2a\u5220\u8fb9\u7684\u64cd\u4f5c\u3002\u90a3\u8fd9\u4e2a\u600e\u4e48\u505a\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5355\u7eaf\u7684\u5e76\u67e5\u96c6\u662f\u53ef\u4ee5\u652f\u6301\u64a4\u9500\u4e0a\u4e00\u6b21\u64cd\u4f5c\u7684\uff0c\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u5728\u5e76\u67e5\u96c6\u5408\u5e76\u7684\u540c\u65f6\uff0c\u8bb0\u5f55\u8be5\u6b21\u5408\u5e76\u7684\u5de6\u53f3\u7aef\u70b9\u5373\u53ef\u3002\u5f53\u7136\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4fdd\u6301\u5e76\u67e5\u96c6\u7ed3\u6784\u4e0d\u53d1\u751f\u672c\u8d28\u6539\u53d8\uff0c\u6545\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6309\u79e9\u5408\u5e76\uff0c\u5e76\u5728\u6808\u4e2d\u540c\u65f6\u8bb0\u5f55\u5408\u5e76\u540e\u65b0\u589e\u7684\u5e76\u67e5\u96c6\u6811\u9ad8\uff0c\u4ee5\u65b9\u4fbf\u540e\u7eed\u7684\u64a4\u9500\u3002\n\n\u5373\uff0c\u6808\u4e2d\u6709\u5982\u4e0b\u4e09\u4e2a\u5143\u7d20\uff1a $u,v,add$ \uff0c \u5206\u522b\u4ee3\u8868\u4e00\u6b21\u5408\u5e76\u4e2d\u7684\u5de6\uff0c\u53f3\u8282\u70b9\u4ee5\u53ca\u6700\u540e\u6210\u4e3a\u7236\u4eb2\u7684\u8282\u70b9\u65b0\u589e\u7684\u6811\u9ad8\u3002\n\n\u4f46\u662f\uff0c\u5728\u8fd9\u9053\u9898\u91cc\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u64a4\u9500\u4e00\u6bb5\u65f6\u95f4\u7684\u64cd\u4f5c\uff0c\u6545\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u4e0a\u8ff0\u7684\u5e76\u67e5\u96c6\u7ef4\u62a4\u65b9\u6cd5\u505a\u8fd9\u4e2a\u9898\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7740\u601d\u8003\uff0c\u5982\u4f55\u5c06\u8fd9\u4e2a\u9898\u8f6c\u5316\u6210\u7acb\u9a6c\u64a4\u9500\u7684\u90a3\u79cd\uff1f\n\n\u6211\u4eec\u8fd9\u65f6\u5c31\u53ef\u4ee5\u8003\u8651\u5bf9\u65f6\u95f4\u8f74\u5206\u6cbb\uff0c\u4e5f\u5c31\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\u6211\u4eec\u8003\u8651\uff0c\u4e00\u6761\u8fb9\u5728\u65f6\u523b $l$ \u88ab\u52a0\u5165\uff0c\u5728\u65f6\u523b $r$ \u88ab\u5220\u9664\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5728\u65f6\u95f4\u8f74\u4e0a\u5f71\u54cd\u7684\u65f6\u95f4\u6bb5\u5c31\u662f $[l,r]$ \u3002\u6545\u6211\u4eec\u53ef\u4ee5\u5c06\u8be5\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u4e0a\u62c6\u5206\u6210 $log(N)$ \u4e2a\u5b50\u533a\u95f4\uff0c\u5e76\u5206\u522b\u5728\u8fd9 $log(N)$ \u4e2a\u5b50\u533a\u95f4\u4e0a\u6253\u4e00\u4e2a\u8fde\u8fb9\u7684\u6807\u8bb0\uff0c\u6700\u540e\u518d\u4e00\u8d77\u5904\u7406\u6240\u6709\u8be2\u95ee\u5373\u53ef\u3002\n\n\u66f4\u5177\u4f53\u4e00\u70b9\uff0c\u6211\u4eec\u5728\u6700\u540e\u5904\u7406\u8be2\u95ee\u65f6\u987a\u5e8f\u904d\u5386\u6574\u9897\u7ebf\u6bb5\u6811\u3002\u5728\u904d\u5386\u65f6\uff0c\u8bbe\u5728\u7ebf\u6bb5\u6811\u4e0a\uff0c\u5f53\u524d\u8282\u70b9\u5bf9\u5e94\u7684\u65f6\u95f4\u533a\u95f4\u662f $[l,r]$ \uff0c\u5219\u8fd9\u4e2a\u8282\u70b9\u4e0a\u6240\u6709\u7684\u8fde\u8fb9\u6807\u8bb0\u90fd\u8bf4\u660e\u4e86\uff1a\u5f53\u524d\u65f6\u95f4\u533a\u95f4\u7684\u4efb\u610f\u4e00\u4e2a\u5b50\u533a\u95f4\uff0c\u6216\u8005\u8bf4\uff0c\u5f53\u524d\u8282\u70b9\u5b50\u6811\u5185\u7684\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\uff0c\u90fd\u4f1a\u53d7\u8fd9\u4e9b\u6807\u8bb0\u7684\u5f71\u54cd\u800c\u8fde\u4e00\u4e9b\u8fb9\u3002\u5373\uff1a\u5728\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u76f4\u8ba9\u8fd9\u4e9b\u6807\u8bb0\u5bf9\u5e94\u7684\u8fb9\u4fdd\u6301\u8054\u901a\u72b6\u6001\uff0c\u76f4\u5230\u6211\u4eec\u9000\u51fa\u5bf9\u8fd9\u4e2a\u8282\u70b9\u5bf9\u5e94\u5b50\u6811\u7684\u904d\u5386\u3002\u800c\u5728\u904d\u5386\u8be5\u8282\u70b9\u7684\u6240\u6709\u7956\u5148\u8282\u70b9\u65f6\u8fde\u7684\u8fb9\uff0c\u5373\u5728\u904d\u5386\u8be5\u8282\u70b9\u5bf9\u5e94\u5b50\u6811\u7684\u8fc7\u7a0b\u4e4b\u524d\u5c31\u5df2\u7ecf\u8fde\u4e0a\u7684\u8fb9\uff0c\u4e5f\u90fd\u4e0d\u4f1a\u5728\u9000\u51fa\u8fd9\u4e2a\u8fc7\u7a0b\u4e4b\u524d\u65ad\u5f00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8fd9\u65f6\u5c31\u53ef\u4ee5\u91c7\u7528\u521a\u624d\u6240\u8bf4\u7684\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\uff0c\u6765\u8f85\u52a9\u7ef4\u62a4\u8fd9\u4e2a\u8fde\u8fb9\u65ad\u8fb9\u7684\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u6240\u6709\u8fb9\u5728\u9700\u8981\u65ad\u5f00\u65f6\uff0c\u5176\u5728\u5e76\u67e5\u96c6\u7684\u6808\u4e2d\u7684\u8bb0\u5f55\u90fd\u5df2\u7ecf\u5904\u4e8e\u4e86\u6808\u9876\u3002\u5f53\u7136\uff0c\u5728\u904d\u5386\u4e2d\uff0c\u82e5\u662f\u5728\u53ea\u8fde\u4e86\u4e00\u90e8\u5206\u8fb9\u65f6\u5c31\u5df2\u7ecf\u4e0d\u662f\u4e8c\u5206\u56fe\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u7684\u7b54\u6848\u8bbe\u4e3a\u4e0d\u884c\uff0c\u5e76\u9000\u51fa\u904d\u5386\u3002\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((N+M)log(N))$ \u7684\uff0c\u56e0\u4e3a\u7eaf\u6309\u79e9\u5408\u5e76\u5e76\u67e5\u96c6\u7684\u5355\u6b21\u64cd\u4f5c\u590d\u6742\u5ea6\u662f $O(log(N))$ \u7684\uff0c\u800c\u4e00\u5171\u8fde\u4e86 $M$ \u6761\u8fb9\uff0c\u518d\u52a0\u4e0a\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6 $O(Nlog(N))$ \uff0c\u5c31\u662f $O((N+M)log(N))$ \u7684\u3002\n\n**code:**\n\n```\nconst int N(2e6+10);\ntypedef vector < int > vi ;\n\nint top;\nint n,m,k;\n\nstruct Edge{int u,v;};\nstruct Node{int u,v,add;};\n\nvi f[N];\n//\u8bb0\u5f55\u7ebf\u6bb5\u6811\u4e0a\u8282\u70b9\u7684\u8fde\u8fb9\u6807\u8bb0\n//\u7531\u4e8e\u4e00\u4e2a\u8282\u70b9\u53ef\u80fd\u4f1a\u6709\u82e5\u5e72\u4e2a\u6807\u8bb0\uff0c\u4f46\u603b\u6807\u8bb0\u6570\u4e0d\u8d85\u8fc7m\uff0c\u6545\u7528vector\u5b58 \n\nint fa[N];\n\nEdge e[N];\n\nNode stk[N];\n//\u8bb0\u5f55\u5e76\u67e5\u96c6\u5408\u5e76\uff0c\u5e76\u7ef4\u62a4\u64a4\u9500\u64cd\u4f5c\u7684\u6808 \n\nint height[N];\n//\u6309\u79e9\u5408\u5e76\uff0c\u8bb0\u5f55\u5e76\u67e5\u96c6\u6811\u9ad8 \n\ninline int f_set(int x){\n\twhile(x^fa[x]){x=fa[x];} return x;\n}\n\ninline void u_set(int u,int v){\n\t\n\tint fu=f_set(u),fv=f_set(v);\n\tif(height[fu]>height[fv])swap(fu,fv); \n\t\n\tstk[++top]=(Node){fu,fv,height[fu]==height[fv]};\n\t\n\tfa[fu]=fv;\n\theight[fv]+=(height[fu]==height[fv]); \n}\n\n#define mid ((l+r)>>1)\n#define lsn p<<1,l,mid\n#define rsn p<<1|1,mid+1,r\n\ninline void ins(int p,int l,int r,int ql,int qr,int v){\n\t//\u5728\u65f6\u95f4\u8f74\u4e0a\u63d2\u5165\u6bcf\u4e00\u6761\u8fb9\n\tif(ql>qr||l>qr||r<ql)return;\n\tif(ql<=l&&qr>=r)return f[p].pb(v),void();\n    \n\tif(ql<=mid)ins(lsn,ql,qr,v);\n\tif(qr>mid) ins(rsn,ql,qr,v);\n}\n\ninline void solve(int p,int l,int r){\n\t//\u9012\u5f52\u5904\u7406\u6574\u9897\u7ebf\u6bb5\u6811 \n\t\n\tint ok=1,lasttop=top,sz(f[p].size());\n\t\n\trep(i,0,sz-1){\n\t\t\n\t\tint pos=f[p][i];\n        \n\t\tint u=e[pos].u,v=e[pos].v;\n\t\tint fu=f_set(u),fv=f_set(v);\n\t\t\n\t\tif(fu^fv)u_set(u,v+n),u_set(v,u+n);\n\t\t//\u8fde\u8fb9 \n\t\telse{ ok=0; rep(j,l,r){ puts(\"No\"); } break; }\n\t\t//\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u8f93\u51fa \"No\" \u5e76\u9000\u51fa\u9012\u5f52 \n\t}\n\t\n\tif(ok&&l==r)puts(\"Yes\");\n\t//\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\uff0c\u9012\u5f52\u7ec8\u6b62 \n\t\n\tif(ok&&l^r)solve(lsn),solve(rsn);\n\t//\u9012\u5f52\u5de6\u53f3\u5b50\u8282\u70b9 \n\t\n\twhile(top>lasttop){\n\t\t\n\t\tint u=stk[top].u;\n\t\tint v=stk[top].v;\n        \n\t\theight[v]-=stk[top].add;\n\t\tfa[u]=u,top--;\n\t\t//\u64a4\u9500\u64cd\u4f5c\n\t\t\n\t}\n}\n\nint main(){\n\t\n\tn=read(),m=read(),k=read();\n\t\n\trep(i,1,m){\n\t\t\n\t\te[i].u=read(),e[i].v=read();\n\t\tint tl=read()+1,tr=read();\n\t\t\n\t\tins(1,1,k,tl,tr,i);\n\t\t\n\t}\n\t\n\trep(i,1,n<<1)fa[i]=i,height[i]=1;\n\t\n\tsolve(1,1,k);\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1632746243,
        "uid": 100091,
        "name": "GaryH",
        "ccfLevel": 6,
        "title": "P5787 \u9898\u89e3"
    },
    {
        "content": "\u5ba3\u4f20\u535a\u5ba2 $\\to$ [link](https://blog.csdn.net/BWzhuzehao/article/details/123849806)\n\n# 1. \u524d\u8a00\n\n\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5e38\u7528\u6765\u79bb\u7ebf\u7ef4\u62a4\u4e00\u5f20\u56fe\u7684\u8fde\u901a\u6027\u3002\n\n\u5927\u81f4\u6765\u8bb2\uff0c\u8fd9\u5f20\u56fe\u7684\u8fb9\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u51fa\u73b0\uff0c\u522b\u7684\u65f6\u95f4\u6d88\u5931\uff0c\u7136\u540e\u4f1a\u6709\u4e00\u4e9b\u8be2\u95ee\uff0c\u7ebf\u6bb5\u6811\u5206\u6cbb\u89e3\u51b3\u7684\u5c31\u662f\u8fd9\u6837\u7684\u95ee\u9898\u3002\n\n# 2. \u8be6\u89e3\n\n\u6a21\u677f\u9898\uff1a[P5787 \u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb](https://www.luogu.com.cn/problem/P5787)\uff0c\u4e0b\u9762\u5047\u5b9a $n,m$ \u540c\u9636\u3002\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u505a\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65f6\u95f4\uff0c\u6211\u4eec\u5efa\u56fe\u7136\u540e\u67d3\u8272\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(n^2k)$ \u7684\u3002\n\n\u5f53\u7136\u53e6\u4e00\u79cd\u5224\u5b9a\u4e8c\u5206\u56fe\u7684\u65b9\u5f0f\u662f\u6269\u5c55\u57df\u5e76\u67e5\u96c6\uff0c\u5c31\u662f\u5bf9\u6bcf\u4e2a\u70b9\u5efa\u7acb\u4e24\u4e2a\u70b9 $x$ \u548c $x+n$\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9 $(x,y)$ \u5408\u5e76 $x,y+n$ \u548c $x+n,y$\uff0c\u5982\u679c\u6709\u4e00\u6761\u8fb9 $(x',y')$ \u6ee1\u8db3 $x',y'$ \u5728\u4e00\u4e2a\u96c6\u5408\u5185\u90a3\u4e48\u5c31\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u5426\u5219\u5c31\u662f\u4e8c\u5206\u56fe\u3002\n\n\u5229\u7528\u5e76\u67e5\u96c6\u505a\u6cd5\u590d\u6742\u5ea6\u7167\u6837\u662f $O(n^2k)$ \u7684\uff0c\u4e0d\u8fc7\u5e76\u67e5\u96c6\u6709\u4e00\u4e2a\u4f18\u52bf\u662f\u5728\u4e0d\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u64a4\u9500\u64cd\u4f5c\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u6761\u8fb9\u8986\u76d6\u7684\u662f\u4e00\u6bb5\u65f6\u95f4\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5728\u65f6\u95f4\u8f74\u4e0a\u5efa\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5c06\u6bcf\u6761\u8fb9\u63d2\u5165\u5230\u5176\u6240\u5bf9\u5e94\u7684\u533a\u95f4\u4e2d\u3002\n\n\u63d2\u5165\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539\uff0c\u8003\u8651\u5f80\u4e0b\u9012\u5f52\uff0c\u5f53\u9012\u5f52\u5230\u7684\u8282\u70b9\u88ab\u5b8c\u5168\u5305\u542b\u4e8e\u4fee\u6539\u533a\u95f4\u7684\u65f6\u5019\u5728\u8fd9\u4e2a\u8282\u70b9\u63d2\u5165\u8fd9\u6761\u8fb9\uff0c\u7136\u540e\u4e0d\u5f80\u4e0b\u9012\u5f52\uff0c\u6211\u4eec\u9700\u8981\u67d0\u4e2a\u70b9\u7684\u8fde\u8fb9\u4fe1\u606f\u65f6\u4ece\u6839\u8282\u70b9\u76f4\u63a5\u641c\u5230\u53f6\u8282\u70b9\uff0c\u4e2d\u9014\u7684\u70b9\u5b58\u7684\u8fb9\u4e0d\u65ad\u63d2\u5165\u5373\u53ef\uff0c\u5982\u4e0b\uff1a\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/1c679cf17a2c4b60b3a805e65282f8fb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAUGxvemlh,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n$(3,5)$ \u8fd9\u6761\u8fb9\u88ab\u63d2\u5165\u5230\u4e86\u4e0a\u56fe\u6253\u52fe\u7684\u4e24\u4e2a\u533a\u95f4\u5185\u3002\n\n\u7136\u540e\u8003\u8651 dfs \u6574\u68f5\u6811\uff0c\u5f80\u4e0b\u641c\u7684\u65f6\u5019\u52a0\u5165\u5f53\u8fd9\u4e2a\u8282\u70b9\u6240\u5b58\u7684\u8fb9\uff0c\u7528\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u5224\u5b9a\u4e8c\u5206\u56fe\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u5224\u5b9a\u51fa\u4e0d\u662f\u4e8c\u5206\u56fe\u5219\u5176\u7ef4\u62a4\u7684\u65f6\u95f4\u6bb5\u5168\u90fd\u8981\u6253\u4e0a\u6807\u8bb0\u3002\n\n\u5411\u4e0b\u641c\u7d22\u5c31\u662f\u4e0d\u65ad\u52a0\u8fb9\uff0c\u81f3\u4e8e\u56de\u6eaf\uff0c\u8003\u8651\u7528\u4e00\u4e2a\u6808\u7ef4\u62a4\u52a0\u8fb9\u64cd\u4f5c\uff0c\u56de\u6eaf\u65f6\u5f39\u6808\u8fd8\u539f\u5e76\u67e5\u96c6\u5373\u53ef\u3002\u6ce8\u610f\u5728\u8fd9\u79cd\u505a\u6cd5\u4e0b\u662f\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\u7684\uff0c\u56e0\u6b64\u5fc5\u987b\u91c7\u7528\u6309\u79e9\u5408\u5e76\uff0c\u800c\u4e14\u662f\u7528\u9ad8\u5ea6\u5408\u5e76\u800c\u4e0d\u662f\u7528\u5b50\u6811\u5927\u5c0f\u5408\u5e76\uff0c\u56e0\u4e3a\u5e76\u67e5\u96c6\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u770b\u7684\u662f\u9ad8\u5ea6\u4e0d\u662f\u5b50\u6811\u5927\u5c0f\u3002\n\n\u6ce8\u610f\u6a21\u677f\u9898\u5bf9\u65f6\u95f4\u8f74\u7684\u5904\u7406\u3002\n\nGitHub\uff1a[CodeBase-of-Plozia](https://github.com/Plozia/CodeBase-of-Plozia/blob/main/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%B8%93%E9%A2%98/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E6%B2%BB/P5787%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E6%B2%BB.cpp)\n\nCode\uff1a\n\n```cpp\n/*\n========= Plozia =========\n\tAuthor:Plozia\n\tProblem:P5787 \u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb\n\tDate:2022/3/27\n========= Plozia =========\n*/\n\n#include <bits/stdc++.h>\nusing std::vector;\nusing std::stack;\n\ntypedef long long LL;\nconst int MAXN = 1e5 + 5;\nint n, m, k, cnt, ans[MAXN], fa[MAXN << 1], Height[MAXN << 1];\nstruct node { int x, y, l, r; } Edge[MAXN << 1];\nstruct STA { int x, y, h; } ;\nstruct SgT\n{\n\tvector <int> E;\n}tree[MAXN << 2];\nstack <STA> sta;\n\nint Read()\n{\n\tint sum = 0, fh = 1; char ch = getchar();\n\tfor (; ch < '0' || ch > '9'; ch = getchar()) fh -= (ch == '-') << 1;\n\tfor (; ch >= '0' && ch <= '9'; ch = getchar()) sum = sum * 10 + (ch ^ 48);\n\treturn sum * fh;\n}\nint Max(int fir, int sec) { return (fir > sec) ? fir : sec; }\nint Min(int fir, int sec) { return (fir < sec) ? fir : sec; }\nint gf(int x) { while (fa[x] != x)  x = fa[x]; return x; }\n\nvoid Insert(int p, int l, int r, int Num, int lp, int rp)\n{\n\tif (lp >= l && rp <= r) { tree[p].E.push_back(Num); return ; }\n\tint mid = (lp + rp) >> 1;\n\tif (l <= mid) Insert(p << 1, l, r, Num, lp, mid);\n\tif (r > mid) Insert(p << 1 | 1, l, r, Num, mid + 1, rp);\n}\n\nvoid Merge(int x, int y)\n{\n\tx = gf(x), y = gf(y);\n\tif (Height[x] > Height[y]) std::swap(x, y);\n\tsta.push((STA){x, y, Height[x] == Height[y]});\n\tfa[x] = y; Height[y] += (Height[x] == Height[y]);\n}\n\nvoid dfs(int p, int lp, int rp)\n{\n\tint cnt = 0, flag = 0;\n\tfor (int i = 0; i < tree[p].E.size(); ++i)\n\t{\n\t\tint x = Edge[tree[p].E[i]].x, y = Edge[tree[p].E[i]].y;\n\t\tif (gf(x) == gf(y))\n\t\t{\n\t\t\tfor (int j = lp; j <= rp; ++j) ans[j] = 1;\n\t\t\tflag = 1; break ;\n\t\t}\n\t\tif (gf(x) != gf(y + n)) Merge(x, y + n), ++cnt;\n\t\tif (gf(y) != gf(x + n)) Merge(y, x + n), ++cnt;\n\t}\n\tif (lp < rp && !flag) { int mid = (lp + rp) >> 1; dfs(p << 1, lp, mid); dfs(p << 1 | 1, mid + 1, rp); }\n\twhile (cnt--)\n\t{\n\t\tSTA tmp = sta.top(); sta.pop();\n\t\tfa[tmp.x] = tmp.x; Height[tmp.y] -= tmp.h;\n\t}\n}\n\nint main()\n{\n\tn = Read(), m = Read(), k = Read();\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tint x = Read(), y = Read(), l = Read(), r = Read();\n\t\tEdge[i] = (node){x, y, l + 1, r};\n\t\tif (l + 1 <= r) Insert(1, l + 1, r, i, 1, k);\n\t}\n\tfor (int i = 1; i <= n * 2; ++i) fa[i] = i, Height[i] = 1;\n\tdfs(1, 1, k);\n\tfor (int i = 1; i <= k; ++i) puts((ans[i] == 0) ? (\"Yes\") : (\"No\"));\n\treturn 0;\n}\n```\n\n# 3. \u603b\u7ed3\n\n\u7ebf\u6bb5\u6811\u5206\u6cbb\u5c06\u8fb9\u62c6\u89e3\u5230\u533a\u95f4\u91cc\u9762\uff0c\u5229\u7528\u4e00\u4e9b\u53ef\u64a4\u9500\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c dfs \u7edf\u8ba1\u7b54\u6848\u3002\n\n\u6ce8\u610f\u7ebf\u6bb5\u6811\u5206\u6cbb\u662f\u4e2a\u79bb\u7ebf\u7b97\u6cd5\uff0c\u4e0d\u80fd\u5728\u7ebf\u3002\n\n# 4. \u53c2\u8003\u8d44\u6599\n\n- [\u7ebf\u6bb5\u6811\u5206\u6cbb - jklover \u7684\u535a\u5ba2 - \u6d1b\u8c37\u535a\u5ba2](https://www.luogu.com.cn/blog/xzc/xian-duan-shu-fen-zhi)",
        "postTime": 1648643438,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "P5787 \u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb \u9898\u89e3"
    },
    {
        "content": "## \u5206\u6790\n\n\u7ebf\u6bb5\u6811\u5206\u6cbb\u5462\uff0c\u5904\u7406\u7684\u5c31\u662f\u8fd9\u4e9b\u57fa\u4e8e\u65f6\u95f4\u4e0a\u7684\u7269\u54c1\u52a0\u5165\u5220\u9664\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u6240\u6709\u4e8b\u4ef6\u79bb\u7ebf\u5904\u7406\uff0c\u6bcf\u4e00\u4e2a\u8be2\u95ee\u4ee3\u8868\u4e00\u4e2a\u65f6\u523b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7269\u54c1\uff0c\u5904\u7406\u5b83\u6240\u5b58\u5728\u7684\u65f6\u6bb5\uff0c\u6982\u62ec\u4e00\u4e0b\u5c31\u662f\u7528\u7ebf\u6bb5\u6811\u6765\u5904\u7406\u6bcf\u4e00\u4e2a\u7269\u54c1\u80fd\u5bf9\u54ea\u4e9b\u8be2\u95ee\u8d77\u4f5c\u7528\u3002\n\n\u6240\u4ee5\u7ebf\u6bb5\u6811\u6bcf\u4e00\u4e2a\u8282\u70b9\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u65f6\u6bb5\uff0c\u800c\u5728\u8be2\u95ee\u4e2d\u6211\u4eec\u901a\u5e38\u662f\u627e\u67d0\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u6240\u4ee5\u7c7b\u4f3c\u4e8e\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u601d\u60f3\uff0c\u5728\u4ece\u4e0a\u5230\u4e0b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u80fd\u8986\u76d6\u4e00\u4e2a\u533a\u95f4\uff0c\u90a3\u533a\u95f4\u5185\u7684\u70b9\u4e5f\u80fd\u540c\u6837\u9020\u6210\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5c06\u6bcf\u4e00\u4e2a\u7269\u54c1\u52a0\u5230\u5b83\u5bf9\u5e94\u7684\u533a\u95f4\uff0c\u7528 vector \u5b58\u50a8\u5b8c\u5168\u8986\u76d6\u67d0\u4e00\u533a\u95f4\u7684\u7269\u54c1\u6709\u54ea\u4e9b\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u5927\u533a\u95f4\u5411\u5c0f\u533a\u95f4\u627e\uff0c\u6bcf\u5230\u4e00\u4e2a\u533a\u95f4\u65f6\uff0c\u5c06\u5b8c\u5168\u8986\u76d6\u8be5\u533a\u95f4\u7684\u8fb9\u6240\u5e26\u6765\u7684\u5f71\u54cd\u5904\u7406\uff0c\u7136\u540e\u5c06\u5904\u7406\u540e\u7684\u7ed3\u679c\u5e26\u7ed9\u66f4\u5c0f\u7684\u533a\u95f4\u3002\n\n\u73b0\u5728\u77e5\u9053\u4e86\u7ebf\u6bb5\u6811\u5206\u6cbb\u4e86\uff0c\u8003\u8651\u672c\u9898\u6bcf\u52a0\u5165\u4e00\u6761\u8fb9\u7684\u5f71\u54cd\u3002\n\n\u662f\u5426\u5f62\u6210\u4e8c\u5206\u56fe\uff0c\u5c31\u9700\u8981\u5c06\u70b9\u5206\u4e3a\u4e24\u7c7b,\u4f7f\u5f97\u6bcf\u4e00\u6761\u8fb9\u7684\u4e24\u4fa7\u90fd\u662f\u4e0d\u540c\u7c7b\u7684\u70b9\uff0c\u6211\u4eec\u518d\u5f15\u5165\u79cd\u7c7b\u5e76\u67e5\u96c6\u3002\n\n\u5c31\u662f\u5c06\u5e76\u67e5\u96c6\u6269\u5927\u51e0\u500d\uff0c\u5206\u4e3a\u51e0\u90e8\u5206\uff0c\u6bcf\u90e8\u5206\u8868\u793a\u6bcf\u4e00\u4e2a\u4e2a\u4f53\u53ef\u80fd\u5c5e\u4e8e\u7684\u79cd\u7fa4\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u4e2a\u4f53\u5728\u6bcf\u4e00\u90e8\u5206\u90fd\u6709\u81ea\u5df1\u7684\u70b9\uff0c\u6bcf\u4e00\u90e8\u5206\u5185\u90e8\u7684\u8fde\u8fb9\u5c31\u76f8\u5f53\u4e8e\u540c\u7c7b\u5173\u7cfb\uff0c\u4e0d\u540c\u90e8\u5206\u95f4\u7684\u8fde\u8fb9\u5c31\u4ee3\u8868\u5bf9\u5e94\u9898\u76ee\u4e2d\u6240\u7ed9\u51fa\u7684\u79cd\u7fa4\u95f4\u7684\u67d0\u79cd\u7279\u6b8a\u8054\u7cfb\u3002\n\n\u4f8b\u5982\u6b64\u9898\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u70b9\u62c6\u4e3a\u4e24\u4e2a\u70b9\uff0c$i$ \u8868\u793a\u7b2c\u4e00\u7c7b\uff0c$i+n$ \u8868\u793a\u7b2c\u4e8c\u7c7b\uff0c$i$ \u4e0e $j+n$ \u540c\u4e00\u5e76\u67e5\u96c6\u5185\u8868\u793a\u5b83\u4eec\u4e0d\u540c\u7c7b\uff0c$i$ \u4e0e $j$ \u6216 $i+n$ \u4e0e $j+n$ \u5728\u540c\u4e00\u5e76\u67e5\u96c6\u5185\u8868\u793a\u5b83\u4eec\u540c\u7c7b\uff0c\u6240\u4ee5\u5728\u8fde\u8fb9\u65f6\u5148\u5224\u65ad\u4e24\u7aef\u70b9\u662f\u5426\u540c\u7c7b\uff0c\u5982\u679c\u540c\u7c7b\u5219\u8bf4\u660e\u5f53\u524d\u5206\u6cbb\u5230\u7684\u6574\u4e2a\u533a\u95f4\u90fd\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a\u4e0b\u9762\u53ea\u4f1a\u8fde\u66f4\u591a\u7684\u8fb9\uff0c\u4e0d\u4f1a\u62b5\u6d88\u8fd9\u4e2a\u51b2\u7a81\uff0c\u53ea\u53ef\u80fd\u5e26\u6765\u66f4\u591a\u7684\u51b2\u7a81\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u56de\u9000\u3002\u5426\u5219\u5c31\u5c06\u4ee3\u8868\u4e24\u8005\u4e0d\u540c\u7c7b\u7684\u8fb9\u8fde\u4e0a\u3002\n\n\u5206\u6cbb\u4e2d\u8fd8\u5b58\u5728\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u9012\u5f52\u5b8c\u5de6\u533a\u95f4\u540e\uff0c\u9700\u8981\u53bb\u9664\u5de6\u533a\u95f4\u5bf9\u53f3\u533a\u95f4\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u6b64\u9898\u7684\u5e76\u67e5\u96c6\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\uff0c\u56e0\u4e3a\u5728\u56de\u5230\u4e0a\u4e00\u5c42\u65f6\u9700\u5c06\u5728\u8be5\u533a\u95f4\u8fde\u4e0a\u7684\u8fb9\u65ad\u6389\uff0c\u6240\u4ee5\u5728\u8fde\u8fb9\u65f6\u8bb0\u5f55\u672c\u6b21\u8fde\u8fb9\u7684\u513f\u5b50\uff0c\u4ee5\u53ca\u7236\u4eb2\u539f\u5e76\u67e5\u96c6\u7684\u6df1\u5ea6\uff08\u56e0\u4e3a\u8981\u4fdd\u8bc1\u6309\u79e9\u5408\u5e76\u7684\u6b63\u786e\u6027\uff09\uff0c\u5728\u8fd4\u56de\u65f6\u5012\u5e8f\u5c06\u72b6\u6001\u8fd8\u539f\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ls rt<<1\n#define rs rt<<1|1\ninline void read(int &res){\n\tres=0;\n\tint f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')res=(res<<1)+(res<<3)+c-48,c=getchar();\n\tres*=f;\n}\nint n,m,k;\nint l[200005],r[200005],u[200005],v[200005];\nint flag[200005][2];\nint flagg[200005][2];\nvector<int>V[400005];\nvoid modify(int rt,int l,int r,int L,int R,int x){\n\tif(L>R)return;\n\tif(l>=L&&R>=r){\n\t\tV[rt].push_back(x);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=L)modify(ls,l,mid,L,R,x);\n\tif(mid<R)modify(rs,mid+1,r,L,R,x);\n}\nint fa[200005],siz[200005];\nint find(int x){\n\treturn fa[x]==x?x:find(fa[x]);\n}\nbool merch(int s){\n\tint x=u[s],y=v[s];\n\tif(find(x)==find(y))return 1;\n\tif(find(x+n)==find(y+n))return 1;\n\tint kx=find(x),ky=find(y+n);\n\tif(kx!=ky){\n\t\tif(siz[kx]<siz[ky]){//\u6309\u79e9\u5408\u5e76\u57fa\u7840\u64cd\u4f5c \n\t\t\tflag[s][0]=kx;//\u8fd9\u6b21\u8fde\u8fb9\u5f53\u513f\u5b50\u7684\u662f\u8c01 \n\t\t\tflagg[s][0]=siz[ky];//\u4ed6\u7239\u539f\u6765\u6df1\u5ea6\u591a\u5c11 \n\t\t\tfa[kx]=ky;\n\t\t\tsiz[ky]=max(siz[ky],siz[kx]+1);\n\t\t}\n\t\telse {\n\t\t\tflag[s][0]=ky;\n\t\t\tflagg[s][0]=siz[kx];\n\t\t\tfa[ky]=kx;\n\t\t\tsiz[kx]=max(siz[kx],siz[ky]+1);\n\t\t}\n\t}\n\tkx=find(x+n),ky=find(y);\n\tif(kx!=ky){\n\t\tif(siz[kx]<siz[ky]){\n\t\t\tflag[s][1]=kx;\n\t\t\tflagg[s][1]=siz[ky];\n\t\t\tfa[kx]=ky;\n\t\t\tsiz[ky]=max(siz[ky],siz[kx]+1);\n\t\t}\n\t\telse {\n\t\t\tflag[s][1]=ky;\n\t\t\tflagg[s][1]=siz[kx];\n\t\t\tfa[ky]=kx;\n\t\t\tsiz[kx]=max(siz[kx],siz[ky]+1);\n\t\t}\n\t}\n\treturn 0;\n}\nvoid del(int x){\n\tif(flag[x][1]){\n\t\tint y=flag[x][1];\n\t\tint kx=find(y);\n\t\tsiz[kx]=flagg[x][1];//\u5c06\u539f\u72b6\u6001\u590d\u539f \n\t\tfa[y]=y;\n\t}\n\tif(flag[x][0]){\n\t\tint y=flag[x][0];\n\t\tint kx=find(y);\n\t\tsiz[kx]=flagg[x][0];\n\t\tfa[y]=y;\n\t}\n}\nvoid sol(int rt,int l,int r){\n\tfor(int i=0;i<V[rt].size();i++){\n\t\tint x=V[rt][i];\n\t\tif(merch(x)){\n\t\t\tfor(int j=l;j<=r;j++)puts(\"No\");//\u6574\u4e2a\u533a\u95f4\u90fd\u4e0d\u53ef\u884c \n\t\t\tfor(int j=i-1;j>=0;j--){\n\t\t\t\tdel(V[rt][j]);//\u5012\u5e8f\u5220\u9664 \n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\tif(l==r){\n\t\tfor(int i=V[rt].size()-1;i>=0;i--){ \n\t\t\tdel(V[rt][i]);\n\t\t}\n\t\tputs(\"Yes\");\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tsol(ls,l,mid);\n\tsol(rs,mid+1,r);\n\tfor(int i=V[rt].size()-1;i>=0;i--){\n\t\tdel(V[rt][i]);\n\t}\n}\nint main()\n{\n\tread(n);read(m);read(k);\n\tfor(int i=1;i<=m;i++){\n\t\tread(u[i]);read(v[i]);read(l[i]);read(r[i]);\n\t\tmodify(1,1,k,l[i]+1,r[i],i);\n\t}\n\tfor(int i=1;i<=2*n;i++)fa[i]=i,siz[i]=1;//\u9884\u5904\u7406 \n\tsol(1,1,k);\n}\n\n```\n",
        "postTime": 1639459903,
        "uid": 166410,
        "name": "\u6f20\u5bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5787 \u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a $n$ \u4e2a\u70b9\uff0c\u4e00\u5f00\u59cb\u4e92\u76f8\u72ec\u7acb\u3002\u6709\u82e5\u5e72\u6761\u8fb9\uff0c\u4f1a\u5728 $L$ **\u65f6\u523b**\u51fa\u73b0\uff0c$R$ **\u65f6\u523b**\u6d88\u5931\u3002\u95ee\u4f60\u5728 $i\\in[1,k]$ **\u65f6\u6bb5** \u65f6\u8fd9\u4e2a\u56fe\u662f\u5426\u662f\u4e8c\u5206\u56fe\u3002\n\n\u521a\u5b66\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u4e8e\u662f\u8bf4\u8bf4\u8fd9\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\u3002\n\n\u4f60\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u8fd9\u4e2a**\u533a\u95f4\u8868\u793a\u7684\u65f6\u95f4**\u54ea\u4e9b\u8fb9**\u5b58\u5728**\u8fc7\uff0c\u90a3\u4e48\u4f60\u62ff\u4e00\u4e2a map \u5b58\u4e00\u4e0b\u8fb9\u7684\u7f16\u53f7\uff0c\u5f53\u4f60\u5220\u9664\u8fb9\u7684\u65f6\u5019\uff0c\u5c31\u5f97\u51fa\u5220\u9664\u7684\u8fb9\u51fa\u73b0\u7684\u65f6\u95f4\u6bb5\uff0c\u6700\u540e\u518d\u628a\u5269\u4e0b\u7684\u8fb9\u5904\u7406\u4e00\u4e0b\u51fa\u73b0\u7684\u65f6\u95f4\u6bb5\uff0c\u7136\u540e\u8fdb\u884c\u5bf9\u4e8e\u6240\u6709\u7684\u64cd\u4f5c\u5206\u6cbb\u3002\n\n\u5206\u6cbb\u65f6\uff0c\u6709\u4e00\u4e2a dfs \u51fd\u6570\uff0c\u6765\u6df1\u641c\u7ebf\u6bb5\u6811\uff0c\u641c\u5230\u4e00\u4e2a\u70b9\uff0c\u5c31\u8868\u793a\u73b0\u5728\u8981\u5904\u7406\u8fd9\u4e2a**\u533a\u95f4\u7684\u65f6\u95f4**\u5b58\u5728\u7684\u8be2\u95ee\u3002\u6ce8\u610f\u5230\u6211\u4eec\u5220\u8fb9\u5e26\u6765\u7684\u590d\u6742\u662f\u6bc1\u706d\u6027\u7684\uff0c\u4e8e\u662f\u6211\u4eec**\u6539\u5220\u8fb9\u4e3a\u64a4\u9500**\uff0c\u6216\u8005\u8bf4**\u56de\u6eda**\u3002\n\ndfs \u5b8c\u5de6\u53f3\u7684\u65f6\u95f4\u6811\u540e\uff0c\u64a4\u9500\u6389**\u8fd9\u4e00\u6bb5\u65f6\u95f4**\u8fdb\u884c\u7684\u52a0\u8fb9\uff0c\u7b80\u5355\u5730\u7528\u6808\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5f53 dfs \u5230\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\u8be2\u95ee\uff0c\u5c31\u56de\u7b54\u8be2\u95ee\u3002\n\n```cpp\nint n,m,k;\nint X[200005],Y[200005],L[200005],R[200005];\nvector<int>v[100005<<2];\nvoid mdf(int L,int R,int id,int l=1,int r=k,int x=1){\n\tif(l>=L&&r<=R)return v[x].push_back(id);\n\tint mid=(l+r)>>1;\n\tif(L<=mid)mdf(L,R,id,l,mid,x<<1);\n\tif(R>mid)mdf(L,R,id,mid+1,r,x<<1|1);\n}\nint fa[200005],rk[200005],siz[200005];\nint sta[200005<<1],top;\nint get(int x){while(x!=fa[x])x=fa[x];return x;}\nvoid merge(int x,int y){\n\tx=get(x),y=get(y);\n\tif(rk[x]>rk[y])swap(x,y);\n\tfa[x]=y;sta[++top]=x;\n}\nvoid GG(int x){\n\tint g;\n\twhile(top>x){\n\t\tg=sta[top--];\n\t\tfa[g]=g;\n\t}\n}\nvoid dfs(int l=1,int r=k,int x=1){\n\tint now=top;\n\tint gg=0;\n\tfor(int i:v[x]){\n\t\tif(get(X[i])==get(Y[i])){\n\t\t\tfor(int o=l;o<=r;o++)cout<<\"No\"<<endl;\n\t\t\tgg=1;\n\t\t\tbreak;\n\t\t}\n\t\tmerge(X[i]+n,Y[i]),merge(X[i],Y[i]+n);\n\t}\n\tif(!gg){\n\t\tif(l==r){\n\t\t\tcout<<\"Yes\"<<endl;\n\t\t}else{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tdfs(l,mid,x<<1),dfs(mid+1,r,x<<1|1);\n\t\t}\t\t\n\t}\n\tGG(now);\n}\nmt19937 rnd(time(NULL));\nsigned main(){\n\tcin>>n>>m>>k;\n\trep(i,1,n*2)fa[i]=i,rk[i]=rnd(),siz[i]=1;\n\trep(i,1,m){\n\t\tcin>>X[i]>>Y[i]>>L[i]>>R[i];\n\t\tif(L[i]!=R[i])mdf(L[i]+1,R[i],i);\n\t}\n\tdfs();\n}\n```\n\u4e2d\u95f4\u7684\u5e76\u67e5\u96c6\u662f\u57fa\u4e8e[\u8fd9\u4e2a](https://www.luogu.com.cn/paste/xjnmhe25)\u5199\u7684\uff0c\u633a\u7b80\u5355\u7684",
        "postTime": 1636513779,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "P5787 \u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb \u8bb0\u5f55"
    },
    {
        "content": "> \u76ee\u5f55\n>\n> \u7ebf\u6bb5\u6811\u5206\u6cbb\n>\n> \u672c\u9898\u505a\u6cd5\n>\n> \u5b9e\u73b0\n\n\n\n## \u7ebf\u6bb5\u6811\u5206\u6cbb\n\n\u4e8b\u5b9e\u4e0a\u7ebf\u6bb5\u6811\u5206\u6cbb\u7684\u505a\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f**\u5728\u65f6\u95f4\u8f74\u4e0a\u5f00\u7ebf\u6bb5\u6811**\uff0c\u4ee5\u65b9\u4fbf\u5904\u7406\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u5176\u6548\u679c\u7684\u64cd\u4f5c\u3002\n\n\u6bd4\u5982\u8bf4\uff0c\u73b0\u5728\u6574\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u65f6\u95f4\u8303\u56f4\u662f $[1, 3]$\uff0c\u5f00\u51fa\u7684\u7ebf\u6bb5\u6811\u81ea\u7136\u662f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lijopwey.png)\n\n\n\u73b0\u5728\u6709\u4e00\u4e2a\u64cd\u4f5c\u5728\u65f6\u95f4 $[1, 2]$ \u4e0a\u4f5c\u7528\uff0c\u90a3\u4e48\u5bf9\u5e94\u4e8e\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u5c31\u662f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hn53kuyx.png)\n\n\u53c8\u6709\u4e00\u4e2a\u64cd\u4f5c\u5728\u65f6\u95f4 $[2, 3]$ \u4e0a\u4f5c\u7528\uff0c\u5bf9\u5e94\u4e8e\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u5c31\u662f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3vww99sr.png)\n\n\u6839\u636e\u7ebf\u6bb5\u6811\u7684\u6027\u8d28\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u81f3\u591a\u88ab\u5212\u5206\u6210 $\\rm{log}$ \u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u4e0a\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u5c06\u5212\u5206\u540e\u7684\u64cd\u4f5c\u4f9d\u6b21\u5b58\u5165\u53d1\u751f\u5f71\u54cd\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u5373\u53ef\u3002\n\n\u6700\u540e\uff0c\u6211\u4eec**\u5148\u5e8f\u904d\u5386**\u4e00\u904d\u8fd9\u68f5\u6811\uff0c\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\uff0c\u4f7f\u5176\u5b58\u50a8\u7684\u64cd\u4f5c**\u751f\u6548**\uff0c\u7136\u540e\u5728\u9012\u5f52\u5730\u8bbf\u95ee\u5de6\u53f3\u5b50\u6811\u540e**\u64a4\u9500**\u5373\u53ef\u3002\uff08\u8fd9\u4e00\u6b65\u4f7f\u7528\u4e00\u4e2a\u6808\u8fdb\u884c\u7ef4\u62a4\uff0c\u64cd\u4f5c\u751f\u6548\u65f6\u538b\u6808\uff0c\u6700\u540e\u5728\u5f39\u6808\u7684\u65f6\u5019\u6267\u884c\u64a4\u9500\uff09\n\n\n\n## \u672c\u9898\u505a\u6cd5\n\n\u672c\u9898\u7684\u64cd\u4f5c\u662f\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u5408\u5e76\u56fe\u4e0a\u7684\u4e24\u70b9\uff08\u4e5f\u5c31\u662f\u8fde\u8fb9\uff09\uff0c\u7136\u540e\u5224\u65ad\u67d0\u65f6\u95f4\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\uff0c\u7ed3\u5408\u4e0a\u9762\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\u8fc7\u7a0b\uff0c\u76f4\u63a5\u5728\u56fe\u4e0a\u7ef4\u62a4\uff08\u4f8b\u5982\u8003\u8651\u67d3\u8272\uff09\u5f53\u7136\u5f88\u4e0d\u65b9\u4fbf\u3002\u56e0\u6b64\u8003\u8651\u4f7f\u7528\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u7ef4\u62a4\uff1a\u800c\u4e3a\u4e86\u65b9\u4fbf\u64a4\u9500\u64cd\u4f5c\uff0c\u6211\u4eec\u4e0d\u53ef\u4ee5\u8fdb\u884c\u8def\u5f84\u538b\u7f29\uff0c\u53ea\u80fd\u91c7\u53d6**\u6309\u79e9\u5408\u5e76**\u3002\n\n\n\n## \u5b9e\u73b0\n\n\u5b9e\u73b0\u7684\u601d\u8def\u662f\uff1a\n\n- \u5148\u5728\u65f6\u95f4\u8f74 $[1, K]$ \u5efa\u7acb\u7ebf\u6bb5\u6811\u3002\n\n- \u9996\u5148\u5c06\u64cd\u4f5c\u5206\u914d\uff08assign\uff09\u8fdb\u7ebf\u6bb5\u6811\u8282\u70b9\u7684 `vector<pii> o` \u4e2d\u3002\n\n- \u7136\u540e\u5bf9\u6574\u68f5\u6811\u8fdb\u884c\u8be2\u95ee\uff0c\u5e76\u76f8\u5e94\u5730\u8fdb\u884c\u64cd\u4f5c\u751f\u6548\uff08\u8fd9\u9898\u662f\u5408\u5e76\uff0c\u4e5f\u5c31\u662f\u4ee3\u7801\u4e2d\u7684 merge\uff09\u3001\u64a4\u9500\uff08resume\uff09\u64cd\u4f5c\uff0c\n\n  - \u5982\u679c\u5f53\u524d\u533a\u95f4\u4f1a\u5bfc\u51fa\u77db\u76fe\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u8fd9\u4e2a\u533a\u95f4\u90fd\u8f93\u51fa `No`\u3002\n  - \u5426\u5219\uff0c\u7ee7\u7eed\u5411\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u76f4\u5230\u53f6\u8282\u70b9\uff0c\u5982\u679c\u76f4\u5230\u53f6\u8282\u70b9\u90fd\u6ca1\u6709\u77db\u76fe\uff0c\u76f4\u63a5\u8f93\u51fa `Yes`\u3002\n  - \u53ef\u4ee5\u53d1\u73b0\uff0c\u56e0\u4e3a\u662f\u5148\u5e8f\u904d\u5386\uff0c\u6240\u4ee5\u76f4\u63a5\u8f93\u51fa\u5c31\u80fd\u6ee1\u8db3\u9898\u76ee\u7684\u8f93\u51fa\u8981\u6c42\u3002\n\n  \n\n```cpp\n// Problem: P5787 \u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P5787\n// Memory Limit: 256 MB\n// Time Limit: 1000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include<bits/stdc++.h>\nusing namespace std;\n \n#define debug(x) cerr << #x << \": \" << (x) << endl\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define dwn(i,a,b) for(int i=(a);i>=(b);i--)\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n \n#define x first\n#define y second\nusing pii = pair<int, int>;\nusing ll = long long;\n \ninline void read(int &x){\n    int s=0; x=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9') {if(ch=='-')x=-1;ch=getchar();}\n    while(ch>='0' && ch<='9') s=(s<<3)+(s<<1)+ch-'0',ch=getchar();\n    x*=s;\n}\n\nconst int N=2e5+50;\n\nint n, m, K;\n\nstruct Msg{\n\tint x, y, z;\n}stk[N];\nint top;\n\nstruct Dsu{\n\tint fa[N], rk[N];\n\t\n\tvoid init(){\n\t\trep(i,1,n<<1) fa[i]=i, rk[i]=1;\n\t}\n\t\n\tint find(int x){\n\t\treturn x==fa[x]? x: find(fa[x]);\n\t}\n\t\n\tbool same(int x, int y){\n\t\treturn find(x)==find(y);\n\t}\n\t\n\tvoid merge(int x, int y){\n\t\tx=find(x), y=find(y);\n\t\tif(x==y) return;\n\t\tif(rk[x]>rk[y]) swap(x, y);\n\t\tfa[x]=y;\n\t\tstk[++top]={x, y, rk[x]==rk[y]};\n\t\tif(rk[x]==rk[y]) rk[y]++;\n\t}\n\t\n\tvoid resume(Msg t){\n\t\trk[t.y]-=t.z;\n\t\tfa[t.x]=t.x;\n\t}\n}dsu;\n\nstruct Node{\n\tint l, r;\n\tvector<pii> o;\n\t\n\t#define ls u<<1\n\t#define rs u<<1|1\n}tr[N<<2];\n\nvoid build(int u, int l, int r){\n\ttr[u]={l, r};\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tbuild(ls, l, mid), build(rs, mid+1, r);\n}\n\nvoid assign(int u, int l, int r, int x, int y){\n\tif(l<=tr[u].l && tr[u].r<=r){\n\t\ttr[u].o.pb({x, y});\n\t\treturn;\n\t}\n\tint mid=tr[u].l+tr[u].r>>1;\n\tif(l<=mid) assign(ls, l, r, x, y);\n\tif(mid<r) assign(rs, l, r, x, y);\n}\n\nvoid divi(int u){\n\tbool ng=false;\n\tint pre=top;\n\tfor(auto &[x, y]: tr[u].o){\n\t\tdsu.merge(x, y+n);\n\t\tdsu.merge(y, x+n);\n\t\tif(dsu.same(x, x+n) || dsu.same(y, y+n)){\n\t\t\tng=true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(ng) rep(i,tr[u].l,tr[u].r) puts(\"No\");\n\telse{\n\t\tif(tr[u].l==tr[u].r) puts(\"Yes\");\n\t\telse{\n\t\t\tdivi(ls);\n\t\t\tdivi(rs);\n\t\t}\n\t}\n\twhile(top!=pre){\n\t\tdsu.resume(stk[top--]);\n\t}\n}\n\nsigned main(){\n\tcin>>n>>m>>K;\n\tbuild(1, 1, K);\n\tdsu.init();\n\t\n\trep(i,1,m){\n\t\tint x, y, l, r; read(x), read(y), read(l), read(r);\n\t\tif(++l>r) continue;\n\t\tassign(1, l, r, x, y);\n\t}\n\tdivi(1);\n\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1657631965,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "\u7ebf\u6bb5\u6811\u5206\u6cbb"
    }
]