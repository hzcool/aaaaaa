[
    {
        "content": "\u8bb2\u4e00\u4e0b\u81ea\u5df1\u7684\u5927\u81f4\u601d\u8def\u3002\r\n\r\n\u5148\u8bf4\u4e00\u4e0b\u66b4\u529b\u5206\uff1a\r\n\r\n\u8fd9\u662f\u6211\u770b\u5230\u6b64\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\uff1a`dp`\uff0c\u590d\u6742\u5ea6\u4e3a$O(n^2m)$\u3002\r\n\r\n\r\n\u6211\u4eec\u5148\u5b9a\u4e49\u4e24\u5b57\u7b26\u4e32\u95f4\u7684\u8ddd\u79bb\u503c$dis[i][j]$\uff0c\u8868\u793a$j$\u53f7\u4e32\u62fc\u63a5\u5728$i$\u53f7\u4e32\u4e4b\u540e\uff0c\u9700\u8981\u5728$i$\u53f7\u4e32\u672b\u5c3e\u6dfb\u52a0\u7684\u5b57\u7b26\u6570\u3002\r\n\r\n\u6b64\u65f6\u6211\u4eec\u518d\u7528$dp[i][j]$ \u8868\u793a\u8fd9\u4e2a\u4e32\u91cc\u5e94\u7ecf\u6709\u4e86$i$\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u6700\u540e\u51fa\u73b0\u5728\u8be5\u4e32\u91cc\u7684\u5b50\u4e32\u662f$j$\u53f7\u4e32\u7684\u7b54\u6848\uff0c\u663e\u7136\u53ef\u4ee5\u6309\u4e0b\u8f6c\u79fb\uff1a\r\n\r\n$dp[1][i]=len(i)$\uff0c\u8868\u793a\u53d61\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u662f\u7b2c$i$\u4e2a\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5b83\u7684\u4ee3\u4ef7\u663e\u7136\u662f$len(i)$\r\n\r\n$dp[i][j] = min\\{ dp[i-1][k]+dis[k][j]\\}$\uff0c\u6211\u4eec\u5728$k$\u53f7\u5b57\u7b26\u4e32\r\n\u540e\u9762\u62fc\u63a5\u4e0a$j$\u53f7\u5b57\u7b26\u4e32\uff0c\u6dfb\u52a0\u5b57\u7b26\u91cf\u5373\u4e3a$dis[k][j]$\u3002\r\n\r\n\u6ce8\u610f\u8f6c\u79fb\u65f6\u7684\u987a\u5e8f\uff0c\u5e94\u8be5\u5148\u679a\u4e3e$i$\uff0c\u518d\u679a\u4e3e$j$\u548c$k$\u3002\u8bfb\u8005\u53ef\u4ee5\u60f3\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff1f\r\n\r\n\u8d34\u4e00\u4e0b`dp`\u7684\u6838\u5fc3\u90e8\u5206\uff1a\r\n\r\n```cpp\r\nvoid DP() {\r\n  memset(dp, 0x7f, sizeof(dp));\r\n  for (int i = 1; i <= n; i++)\r\n    dp[1][i] = len[i];\r\n  for (int i = 2; i <= m; i++)\r\n    for (int j = 1; j <= n; j++)\r\n      for (int k = 1; k <= n; k++)\r\n        dp[i][j] = min(dp[i][j], dp[i - 1][k] + dis[k][j]);\r\n}\r\n```\r\n\r\n\u6240\u4ee5\uff0c\u6211\u4eec\u5206\u6790\u60f3\u5230\u4e86\u8f6c\u79fb\u516c\u5f0f\uff0c\u90a3\u4e48\u7b54\u6848\u5373\u4e3a$min\\{ dp[m][i]\\}$\uff0c\u5176\u4e2d$1\\le i\\le n$\uff08\u56e0\u4e3a\u4e00\u5171\u6709$n$\u79cd\u5b57\u7b26\u4e32\uff09\u3002\r\n\r\n\u770b\u5230\u6709$n$\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a\u4e2a\u5b57\u7b26\u4e32\u9996\u5c3e\u62fc\u63a5\u800c\u6210\u7684\uff0c\u6211\u4eec\u5f88\u81ea\u7136\u7684\u60f3\u5230`AC\u81ea\u52a8\u673a`\u3002\r\n\r\n\r\n\u5728\u672c\u4eba\u7ecf\u8fc7\u957f\u8fbe1\u5c0f\u65f6\u7684\u601d\u8003\u540e\uff0c\u7ec8\u4e8e\u60f3\u51fa\u4e86\u6b63\u89e3\u3002\u3002\u3002\r\n\r\n\r\n\u672c\u4eba\u6bd4\u8f83\u64c5\u957f`KMP\u7b97\u6cd5`\uff0c\u770b\u5230\u8fd9\u9898\uff0c\u679c\u65ad\u60f3\u5230\u662f`KMP`\uff0c\u7c97\u7565\u8ba1\u7b97\u4e00\u4e0b\uff0c`KMP()`\u51fd\u6570\u90e8\u5206\u7684\u590d\u6742\u5ea6\u4e3a$O(\\sum^{n}_{i=1}\\sum^{n}_{j=1}(len(i)+len(j)))= O(\\sum^{n}_{i=1}(n\\times len[i]+\\sum |S|))\u2248 O(n|S|)$\uff0c\u7a0d\u5fae\u5e26\u4e00\u70b9\u5c0f\u5e38\u6570\u3002\r\n\r\n\u4e0b\u9762\u662f`KMP`\u90e8\u5206\u7684\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\nvoid KMP() {\r\n  // kmp1\uff1a\u5355\u4e2a\u5b57\u7b26\u4e32\u5185\u5339\u914d\r\n  for (int p = 1; p <= n; p++) {\r\n    int j = 0;\r\n    for (int i = 2; i <= len[p]; i++) {\r\n      while (j > 0 && str[p][j + 1] != str[p][i])\r\n        j = nxt[p][j];\r\n      if (str[p][j + 1] == str[p][i]) j++;\r\n      nxt[p][i] = j;\r\n    }\r\n  }\r\n  \r\n  // kmp2\uff1a\u4e24\u4e24\u5b57\u7b26\u4e32\u95f4\u5339\u914d\r\n  for (int p1 = 1; p1 <= n; p1++) {\r\n    for (int p2 = 1; p2 <= n; p2++) {\r\n      int j = 0;\r\n      for (int i = 2; i <= len[p1]; i++) {\r\n        while (j > 0 && str[p2][j + 1] != str[p1][i])\r\n          j = nxt[p2][j];\r\n        if (str[p2][j + 1] == str[p1][i]) j++;\r\n        if (i == len[p1]) {\r\n          a.v[p1][p2] = len[p2] - j;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\u597d\uff0c\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u9884\u5904\u7406`KMP`\u5f97\u5230\u4e86\u4e24\u4e24\u5b57\u7b26\u4e32\u95f4\u7684\u5173\u7cfb\uff08\u672b\u5c3e\u6dfb\u52a0\u5b57\u7b26\u91cf\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u4f18\u5316`dp`\u3002\r\n\r\n\u8bfb\u8005\u4e0d\u59a8\u518d\u56de\u5934\u53bb\u770b\u770b`dp`\u7684\u8f6c\u79fb\u90e8\u5206\uff0c\u6709\u6ca1\u6709\u53d1\u73b0\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u5f0f\u4f3c\u66fe\u76f8\u8bc6\uff1f\r\n\r\n\u6ca1\u9519\uff0c\u8fd9\u4f3c\u4e4e\u4e0e`floyd`\u7684\u8f6c\u79fb\u4ee3\u7801\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002\u5b83\u7684\u8f6c\u79fb\u65b9\u5f0f\uff0c\u8ddf`floyd`\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff01\u90a3\u4e48\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u5f0f\u7b49\u4ef7\u4e8e\u4e00\u4e2a$O(n^3)$\u7684`floyd`\uff0c\u6211\u4eec\u4ece\u53e6\u4e00\u79cd\u89d2\u5ea6\u53bb\u8003\u8651\u5982\u4f55\u4f18\u5316\u8fd9\u4e2a\u4f2a\u7684`floyd`\u3002\r\n\r\n\u5728\u4f18\u5316\u590d\u6742\u5ea6\u4e4b\u524d\uff0c\u8bf7\u8bfb\u8005\u5148\u8003\u8651\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff1a\r\n\r\n\u9996\u5148\uff0c\u5c06\u8fd9\u4e2a\u8f6c\u6362\u6210`floyd`\uff0c\u662f\u57fa\u4e8e\u70b9\u64cd\u4f5c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u89c6\u4f5c\u662f\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e0b\u6b21\u5c31\u662f\u5f7b\u5f7b\u5e95\u5e95\u7684`floyd`\u4e86233\u3002\r\n\r\n\u5176\u6b21\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u8be5\u4ece\u7b2c\u51e0\u53f7\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6574\u4e00\u4e2a\u4e32\u7684\u8d77\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u52a0\u4e00\u4e2a`\u8d85\u7ea7\u6e90`\uff0c\u8bbe\u5b83\u4e3a$0$\u53f7\u4e32\uff0c\u5c06$0$\u53f7\u4e32\u8fde\u63a5\u5230\u7b2c$i(1\\le i\\le n)$\u53f7\u4e32\u3002\u4ece$0$\u5230$i$\u7684\u6743\u503c\u4e3a$dis[0][i] = len(i)$\uff0c\u4ece$i$\u5230$0$\u663e\u7136\u505a\u4e0d\u5230\uff0c\u6240\u4ee5\u8bbe\u7f6e\u4e3a\u65e0\u7a77\u5927\uff0c\u5373\uff1a$dis[i][0] = inf$\u3002\r\n\r\n\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5982\u4f55\u53bb\u4f18\u5316\u590d\u6742\u5ea6\u3002\r\n\r\n\u5f88\u663e\u7136\uff0c\u6570\u636e\u8303\u56f4\u4e2d$m$\u7684\u8303\u56f4\u7279\u522b\u5927\uff0c\u5df2\u7ecf\u5230\u4e86$1e9$\u7684\u5730\u6b65\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u6570\u636e\u8303\u56f4\u5012\u63a8\uff0c\u663e\u7136\u4e0d\u53ef\u80fd\u662f$O(m)$\u7ebf\u6027\u626b\uff0c\u6240\u4ee5\u6781\u5927\u53ef\u80fd\u662f$O(\\sqrt{m})$\u6216\u8005$O(logm)$\u3002\r\n\r\n\u5982\u679c\u662f$O(\\sqrt{n})$\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u5173\u4e8e\u5f00\u6839\u53f7\u7684\u4e1c\u897f\uff0c\u4f46`floyd`\u663e\u7136\u4e0d\u53ef\u80fd\u4e0e\u6839\u53f7\u53d1\u751f\u5173\u7cfb\uff0c\u6240\u4ee5\u6682\u65f6\u6392\u9664\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u53ea\u53ef\u80fd\u662f$O(logm)$\u7684\u590d\u6742\u5ea6\u5185\u8fd0\u884c`floyd`\uff0c\u6b64\u65f6\u6211\u4eec\u679c\u65ad\u60f3\u5230\uff1a\u4e0e$log$\u6709\u5173\u7684\uff0c\u6781\u5927\u53ef\u80fd\u662f`\u5feb\u901f\u5e42`\uff0c\u4f46\u8fd9\u4e0d\u662f$a^p$\u7684\u5f62\u5f0f\uff0c\u800c\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5e42\u5f62\u5f0f\u3002\r\n\r\n\u76f8\u4fe1\u8bfb\u8005\u90fd\u5df2\u7ecf\u731c\u5230\u4e86\uff0c\u8fd9\u5c31\u662f`\u77e9\u9635\u5feb\u901f\u5e42`\uff01\r\n\r\n\u7efc\u4e0a\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u5728$O(n|S|+n^2*log\\space m)$\u7684\u590d\u6742\u5ea6\u5185\u8dd1\u51fa\u7ed3\u679c\uff0c\u5e38\u6570\u8f83\u5c0f\uff0c\u503c\u5f97\u4e00\u8bd5\u3002\r\n\r\n\u540c\u65f6\uff0c\u4f5c\u4e3a\u524d\u4eba\uff0c\u4e5f\u63d0\u9192\u4e00\u4e0b\u5927\u5bb6\uff1a\u8fd9\u9053\u9898\u53ef\u80fd\u8981\u5f00$-O2$\u624d\u80fd$AC$,`\u6570\u636e#1`\u7a0d\u5fae\u6709\u70b9\u5361\u5e38\u6570\uff01\r\n\r\n\u732e\u4e0a\u4ee3\u7801\uff0c\u5b8c\u7f8e\u6492\u82b1\uff1a\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\ntypedef long long ll;\r\n\r\nconst int N = 202;\r\nconst int M = 100002;\r\nstring str[N];\r\nint len[N], t;\r\nint nxt[N][M];\r\n//int dis[201][201];\r\nint n, m;\r\n\r\nstruct MAT {\r\n  ll v[N][N];\r\n  void print() {\r\n    for (int i = 0; i <= n; i++, puts(\"\"))\r\n      for (int j = 0; j <= n; j++)\r\n        printf(\"%lld \", v[i][j]);\r\n    putchar('\\n');\r\n  }\r\n} ans, a;\r\n\r\nMAT operator * (MAT a, MAT b) {\r\n  MAT c;\r\n  for (int i = 0; i <= n; i++)\r\n    for (int j = 0; j <= n; j++)\r\n      c.v[i][j] = 1e15;\r\n  for (int i = 0; i <= n; i++)\r\n    for (int j = 0; j <= n; j++)\r\n      for (int k = 0; k <= n; k++)\r\n        c.v[i][k] = min(c.v[i][k], a.v[i][j] + b.v[j][k]);  \r\n  return c;\r\n}\r\n\r\nvoid KMP() {\r\n  // init\r\n  a.v[0][0] = 1e15;\r\n  for (int p = 1; p <= n; p++)\r\n    a.v[0][p] = len[p], a.v[p][0] = 1e15;\r\n  \r\n  // kmp1\r\n  for (int p = 1; p <= n; p++) {\r\n    int j = 0;\r\n    for (int i = 2; i <= len[p]; i++) {\r\n      while (j > 0 && str[p][j + 1] != str[p][i])\r\n        j = nxt[p][j];\r\n      if (str[p][j + 1] == str[p][i]) j++;\r\n      nxt[p][i] = j;\r\n    }\r\n  }\r\n  \r\n  // kmp2\r\n  for (int p1 = 1; p1 <= n; p1++) {\r\n    for (int p2 = 1; p2 <= n; p2++) {\r\n      int j = 0;\r\n      for (int i = 2; i <= len[p1]; i++) {\r\n        while (j > 0 && str[p2][j + 1] != str[p1][i])\r\n          j = nxt[p2][j];\r\n        if (str[p2][j + 1] == str[p1][i]) j++;\r\n        if (i == len[p1]) {\r\n          a.v[p1][p2] = len[p2] - j;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  /*\r\n  for (int i = 1; i <= n; i++)\r\n    for (int j = i; j <= n; j++)\r\n      printf(\"dis[%d][%d] = %d\\n\", i, j, dis[i][j]);\r\n  */\r\n}\r\n\r\nvoid ksm() {\r\n  //a.print();\r\n  \r\n  for (int i = 0; i <= n; i++)\r\n    for (int j = 0; j <= n; j++)\r\n      ans.v[i][j] = a.v[i][j];\r\n  \r\n  // woc, m--!   \r\n  m--;\r\n  while (m > 0) { \r\n    //printf(\"in ksm %d\\n\", m);\r\n    //ans.print(); a.print();\r\n    //printf(\"----------\\n\");\r\n    if (m & 1) ans = ans * a;\r\n    a = a * a; m >>= 1;\r\n  }\r\n}\r\n\r\nbool check() {\r\n  for (int i = 1; i <= n; i++) {\r\n    if (len[i] == 1) return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nsigned main() {\r\n  scanf(\"%lld%lld\", &n, &m);\r\n  if (m == 0) {\r\n    puts(\"0\"); return 0;\r\n  }\r\n  \r\n  for (int i = 1; i <= n; i++) {\r\n    cin >> str[i];\r\n    len[i] = str[i].size();\r\n    str[i] = ' ' + str[i];\r\n  }\r\n  \r\n  if (check()) {\r\n    printf(\"%lld\\n\", m);\r\n    return 0;\r\n  }\r\n  \r\n  KMP();\r\n  ksm();\r\n  \r\n  ll anss = 2e15;\r\n  for (int i = 1; i <= n; i++)\r\n    anss = min(anss, ans.v[0][i]);\r\n  printf(\"%lld\\n\", anss);\r\n  return 0;\r\n}\r\n```\r\n\r\n\u9644\uff1a\u5982\u679c\u6709$WA$\u7684\u7f51\u53cb\uff0c\u6211\u5728\u8fd9\u91cc\u63d0\u4f9b\u51e0\u7ec4$hack$\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u4e0d\u59a8\u4e00\u6d4b\u3002\r\n\r\n$\\color{red}hack1.in$\r\n```cpp\r\n5 100\r\na\r\nb\r\nc\r\nd\r\ne\r\n```\r\n\r\n$\\color{red}hack1.out$\r\n```cpp\r\n100\r\n```\r\n\r\n$\\color{red}hack2.in$\r\n```\r\n1 0\r\na\r\n\r\n```\r\n$\\color{red}hack2.out$\r\n```\r\n0\r\n```\r\n\r\n$\\color{red}hack3.in$\r\n```\r\n4 5\r\nab\r\nbc\r\ncd\r\nde\r\n```\r\n\r\n$\\color{red}hack3.out$\r\n```\r\n7\r\n```\r\n",
        "postTime": 1562993634,
        "uid": 112381,
        "name": "wlzhouzhuan",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3502 \u3010[POI2010]CHO-Hamsters\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P3502)\n## \u9898\u610f\n\u7ed9\u51fa $n$ \u4e2a\u4e92\u4e0d\u5305\u542b\u7684\u5b57\u7b26\u4e32 $a_{1,2,...,n}$\uff0c\u8981\u6c42\u4f60\u6c42\u51fa\u4e00\u4e2a\u6700\u77ed\u7684\u5b57\u7b26\u4e32 $S$\uff0c\u4f7f\u5f97\u8fd9 $n$ \u4e2a\u5b57\u7b26\u4e32\u5728 $S$ \u4e2d\u603b\u5171\u81f3\u5c11\u51fa\u73b0 $m$ \u6b21\uff0c\u95ee $\\min|S|$\u3002\n\n$\\sum|a_i|\\le10^5,1\\le n\\le 200,1\\le m \\le 10^9$.\n## \u601d\u8def\n\u5f88\u662f\u795e\u4ed9\uff01\uff01\n\n\u9996\u5148\u6211\u4eec\u60f3\u5230 $\\text{dp}$\u3002\n\n\u8bbe\u8ba1\u72b6\u6001 $dp_{i,j}$ \u8868\u793a\u5f53\u524d $S$ \u4e2d\u5b57\u7b26\u4e32\u603b\u51fa\u73b0\u6b21\u6570\u4e3a $i$\uff0c\u5176\u4e2d\u6700\u540e\u51fa\u73b0\u7684\u5b57\u7b26\u4e32\u4e3a\u7b2c $j$ \u4e2a\u5b57\u7b26\u4e32\u3002\n\n\u6211\u4eec\u5148\u9884\u5904\u7406 $dis_{i,j}$ \u8868\u793a\u5728\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u540e\u6700\u5c11\u6dfb\u52a0\u591a\u5c11\u4e2a\u5b57\u7b26\u4f7f\u5f97\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u4e5f\u542b\u6709 $j$\u3002\n\n\u5219\u6709\u8fb9\u754c\u6761\u4ef6 $dp_{1,j}=|a_j|$\uff0c\u8f6c\u79fb\u65b9\u7a0b $dp_{i,j}=\\min(dp_{i-1,k}+dis_{k,j})(1\\le k\\le n)$\u3002\n\n\u7136\u540e\u518d\u60f3\u60f3\u600e\u4e48\u9884\u5904\u7406 $dis_{i,j}$\u3002\n\n\u663e\u7136\uff0c\u6211\u4eec\u5c06 $a_i,a_j$ \u62c9\u51fa\u6765\u505a $\\text{KMP}$\uff0c\u7136\u540e $dis_{i,j}$ \u5c31\u662f $|a_j|\\,-$ \u6700\u540e\u5339\u914d\u5230\u7684\u4f4d\u7f6e\u3002\n\n\u7b54\u6848\u4e3a $\\min_{i=1}^ndp_{m,i}$\u3002\n\n\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a $O(n\\sum|a_i|+n^2m)$ \u7684\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u518d\u770b\u770b\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u548c\u6700\u77ed\u8def\u76f8\u5173\u7684\u7b97\u6cd5\uff0c\u7136\u540e\u6211\u4eec~~\u556a\u7684\u4e00\u4e0b~~\u5c31\u77e5\u9053\u4e86\u8981\u77e9\u9635\u4f18\u5316\u4e86\u3002\n\n\u5373\u7ecf\u5178\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\uff0c\u82e5 $A\\times B=C$\uff0c\u5219 $C_{i,j}=\\min(A_{i,k}+B_{k,j})$\u3002\n\n\u5148\u8bbe\u5b9a $dis_{0,i}=|a_i|,dis_{i,0}=\\text{INF}$\u3002\n\n\u6211\u4eec\u8bbe\u5b9a\u521d\u59cb\u77e9\u9635 $A$ \u4e3a\uff1a\n$$\\begin{bmatrix}\ndis_{0,0}&dis_{0,1}&dis_{0,2}&...&dis_{0,n}\\\\\ndis_{1,0}&dis_{1,1}&dis_{1,2}&...&dis_{1,n}\\\\\ndis_{2,0}&dis_{2,1}&dis_{2,2}&...&dis_{2,n}\\\\\n &.\\\\\n & &.\\\\\n & & &.\\\\\ndis_{n,0}&dis_{n,1}&dis_{n,2}&...&dis_{n,n}\n\\end{bmatrix}\n$$\n\n\u5219\u76ee\u6807\u77e9\u9635 $C=A^{m}$\uff0c\u6240\u6c42\u5373\u4e3a $\\min_{i=1}^n C_{0,i}$\u3002\u8fd9\u663e\u7136\u53ef\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u3002\n\n\u6709\u4e00\u70b9\u5c0f\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff0c\u5373\u5bf9\u4e8e\u8fd9\u79cd\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\u6211\u6ca1\u6709\u627e\u5230\u5355\u4f4d\u5143\uff0c\u6240\u4ee5\u8fdb\u884c\u5feb\u901f\u5e42\u65f6\u6211\u4eec\u9700\u8981\u8ba1\u7b97 $C=A\\times A^{m-1}$\u3002\n\n\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n\\sum|a_i|+n^3\\log m)$ \u7684\u4f18\u79c0\u7b97\u6cd5\uff01\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=200+10;\nconst ll INF=1e15;\nchar a[N][100010];\nint nxt[N][100010],n,m,k,len[N];\nll dis[N][N];\nstruct Matrix{\n\tll a[N][N];\n\tMatrix(){memset(a,0,sizeof(a));}\n\tinline ll* operator[](const int &x){\n\t\treturn a[x];\n\t}\n}bas,ans;\ninline Matrix operator*(const Matrix &a,const Matrix &b){\n\tMatrix c;\n\tfor(int i=0;i<=n;i++){\n\t\tfor(int j=0;j<=n;j++){\n\t\t\tll s=INF;\n\t\t\tfor(int k=0;k<=n;k++){\n\t\t\t\ts=min(s,a.a[i][k]+b.a[k][j]);\n\t\t\t}\n\t\t\tc[i][j]=s;\n\t\t}\n\t}\n\treturn c;\n}\nint sum;\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++){\n\t\treadstr(a[i]);\n\t\tsum+=len[i]=strlen(a[i]+1);\n\t}\n\tif(sum==n) return printf(\"%d\",m),0;\n\tdis[0][0]=INF;\n\tfor(int l=1;l<=n;l++){\n\t\tk=0;\n\t\tdis[0][l]=len[l];\n\t\tdis[l][0]=INF;\n\t\tfor(int i=2;i<=len[l];i++){\n\t\t\twhile(k&&a[l][i]!=a[l][k+1])k=nxt[l][k];\n\t\t\tif(a[l][i]==a[l][k+1]) k++;\n\t\t\tnxt[l][i]=k;\n\t\t}\n\t}\n\tfor(int l1=1;l1<=n;l1++){\n\t\tfor(int l2=1;l2<=n;l2++){\n\t\t\tk=0;\n\t\t\tfor(int i=2;i<=len[l1];i++){\n\t\t\t\twhile(k&&a[l1][i]!=a[l2][k+1])k=nxt[l2][k];\n\t\t\t\tif(a[l1][i]==a[l2][k+1]) k++;\n\t\t\t\tif(i==len[l1]){\n\t\t\t\t\tdis[l1][l2]=len[l2]-k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=n;i++){\n\t\tfor(int j=0;j<=n;j++){\n\t\t\tbas[i][j]=dis[i][j];\n\t\t}\n\t}\n\tans=bas;\n\tm--;\n\twhile(m){\n\t\tif(m&1) ans=ans*bas;\n\t\tbas=bas*bas;\n\t\tm>>=1;\n\t}\n\tll sum=INF;\n\tfor(int i=1;i<=n;i++){\n\t\tsum=min(sum,ans[0][i]);\n\t}\n\twrite(sum);\n\tflush();\n}\n```\n\u518d\u89c1 qwq~",
        "postTime": 1624254026,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3502\u3010[POI2010]CHO-Hamsters\u3011"
    },
    {
        "content": "\u672c\u6765\u8fd9\u9898\u662f\u8054\u8d5b\u6a21\u62df\u7684\u4e00\u9053T3\uff0c\u7136\u800c\u5728\u8054\u8d5b\u524d\u4e00\u5929\u88ab\u6211\u627e\u5230\u4e86\u539f\u9898...\n\n\u8bdd\u4e0d\u591a\u8bf4\u8bb2\u505a\u6cd5\n\n\u9996\u5148\u4e92\u4e0d\u5305\u542b\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u524d\u63d0\uff0c\u8fd9\u8bf4\u660en\u4e2a\u5b57\u7b26\u4e32\u5728\u7b54\u6848\u4e32S\u4e2d\u7684m\u6b21\u51fa\u73b0\u4e00\u5b9a\u4f1a**\u4f9d\u6b21\u51fa\u73b0**\uff08\u6307\u7684\u662fm\u6b21\u51fa\u73b0\u7684\u9996\u4f4d\u7f6e\u4e00\u5b9a\u4f1a\u4e0d\u540c\uff0c\u4f46m\u6b21\u51fa\u73b0\u53ef\u80fd\u4f1a\u5b58\u5728\u91cd\u53e0\uff09\n\n\u90a3\u4e48\u6211\u4eec\u9884\u5148\u5904\u7406\u51fa\u6765\u6bcf\u4e2a\u4e32\u63a5\u5728\u53e6\u4e00\u4e2a\u4e32\u7684\u540e\u9762\u6240\u9700\u8981**\u65b0\u6dfb\u52a0\u7684\u5b57\u7b26\u6570\u91cf**\uff0c\u8bb0\u4e3adis[i][j]\u3002\u8fd9\u91cc\u6d89\u53ca\u7684\u7684\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u5b98\u65b9\u6b63\u89e3\u7ed9\u51fa\u7684\u662f**AC\u81ea\u52a8\u673a**\u3002\u7136\u800c\u6211\u8fd9\u4e2a\u5c0f\u849f\u84bb\u4e0d\u4f1a\u5440\uff0c\u6240\u4ee5\u5c31\u7528\u7684\u662f**KMP\u7b97\u6cd5**\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(\\sum\\sum(len(i)+len(j)))$\uff0c\u628a\u5f0f\u5b50\u5316\u4e00\u4e0b\u4f1a\u53d1\u73b0\u590d\u6742\u5ea6\u5c31\u662f$O(n$**\u603b\u4e32\u957f**$)$\uff0c\u6240\u4ee5\u8fd8\u662f\u80fd\u8fc7\u7684\u3002\n\n\u5982\u679c\u6709\u4e86dis[i][j]\uff0c\u90a3\u4e48\u5e94\u8be5\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a$O(n^2m)$\u7684DP\u5f0f\u3002\u6211\u4eec\u8bbedp[t][i]\u8868\u793a\u603b\u4e32\u4e2d\u5df2\u7ecf\u51fa\u73b0\u4e86t\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e14\u6700\u540e\u4e00\u4e2a\u51fa\u73b0\u7684\u4e32\u662fi\u53f7\u4e32\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor (int i=1;i<=n;i++)\n        dp[1][i]=len[i];\nfor (int t=2;t<=m;t++)\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=n;j++)\n            dp[t][i]=min(dp[t][i],dp[t-1][j]+dis[j][i]);\n            ```\n\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662fmin{dp[m][i]}\u3002\n\n\u7136\u800c\u6211\u4eec\u53d1\u73b0m\u5f88\u5927\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u4e0a\u9762\u7684\u90a3\u4e2a\u5f0f\u5b50\u662f\u4e0d\u662f\u6709\u70b9\u773c\u719f\uff1f\u6709\u70b9\u50cf$Floyed$\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8f6c\u5316\u4e00\u4e0b\u6a21\u578b\uff1a\u628a\u6bcf\u4e2a\u5b57\u7b26\u89c6\u4e3a\u4e00\u4e2a\u70b9\uff0c\u4e00\u6b21\u8f6c\u79fb\u76f8\u5f53\u4e8e\u4ece\u4e00\u4e2a\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u70b9\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\u95ee\u4f60\u603b\u5171\u8d70m\u6b21\u7684\u6700\u5c0f\u8ddd\u79bb\u3002\u8fb9\u754c\u60c5\u51b5\uff1a\u7b2c\u4e00\u4e2a\u4e32\u7684\u4ee3\u4ef7\u603b\u662f\u7b49\u4e8e\u4e32\u957f\uff0c\u6240\u4ee5\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a0\u53f7\u70b9\uff0c\u53e6`dis[0][i]=len[i]\uff0cdis[i][0]=dis[0][0]=INF`\uff0c\u90a3\u4e48\u5728\u7ecf\u8fc7m\u6b21\u8f6c\u79fb\u4e4b\u540e\uff0c\u6700\u7ec8\u7b54\u6848\u5c31\u662fmin{Ans[0][i]}\u3002\n\n\u8fd9\u6837\uff0c\u6bcf\u4e00\u6b21\u8f6c\u79fb\u5c31\u76f8\u5f53\u4e8e\u8dd1\u4e00\u6b21$O(n^3)$\u7684$Floyed$\uff0cm\u600e\u4e48\u529e\uff1f\u77e9\u9635\u52a0\u901f\u4f18\u5316\uff01\n\n\u81f3\u6b64\u8fd9\u9898\u5e94\u8be5\u5c31\u8bb2\u5b8c\u4e86\uff0c\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u5e94\u8be5\u8fd8\u662f\u4e0d\u96be\u7684^-^\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define ll long long\nconst int _ = 205;\nconst ll INF = 1e18;\nchar s[_][100005];\nint n,m,len[_],next[_][100005];\nll ans=INF;\nstruct matrix\n{\n    ll f[205][205];\n    matrix operator * (matrix &b)\n        {\n            matrix c;\n            memset(c.f,63,sizeof(c.f));\n            for (int i=0;i<=n;i++)\n                for (int j=0;j<=n;j++)\n                    for (int k=0;k<=n;k++)\n                        c.f[i][k]=min(c.f[i][k],f[i][j]+b.f[j][k]);//\u4e00\u904dFloyed,\u548c\u77e9\u9635\u4e58\u6cd5\u7c7b\u4f3c\u4f46\u6709\u4e0d\u540c\n            return c;\n        }\n}Tra,Ans;//\u72b6\u6001\u77e9\u9635Ans,\u8f6c\u79fb\u77e9\u9635Tra\nint main()\n{\n    //freopen(\"hamsters.in\",\"r\",stdin);\n    //freopen(\"hamsters.out\",\"w\",stdout);\n    scanf(\"%d %d\\n\",&n,&m);\n    for (int i=1;i<=n;i++)\n        scanf(\"%s\",s[i]+1),len[i]=strlen(s[i]+1);\n    for (int t=1;t<=n;t++)\n    {\n        int j=0;\n        for (int i=2;i<=len[t];i++)\n        {\n            while (j&&s[t][j+1]!=s[t][i]) j=next[t][j];//\u9884\u5904\u7406next\u6570\u7ec4\n            if (s[t][j+1]==s[t][i]) j++;\n            next[t][i]=j;\n        }\n    }\n    Tra.f[0][0]=INF;//\u8fb9\u754c\u60c5\u51b5\n    for (int x=1;x<=n;x++)\n    {\n        Tra.f[0][x]=len[x];Tra.f[x][0]=INF;//\u8fb9\u754c\u60c5\u51b5\n        for (int y=1;y<=n;y++)\n        {\n            int j=0;\n            for (int i=2;i<=len[x];i++)\n            {\n                while (j&&s[y][j+1]!=s[x][i]) j=next[y][j];\n                if (s[y][j+1]==s[x][i]) j++;\n                if (i==len[x]) Tra.f[x][y]=len[y]-j;\n            }\n        }\n    }\n    for (int i=0;i<=n;i++)\n        for (int j=0;j<=n;j++)\n            Ans.f[i][j]=Tra.f[i][j];\n    for (m--;m;m>>=1)//Ans\u7684\u521d\u59cb\u72b6\u6001\u5c31\u5df2\u7ecf\u6709\u4e00\u6b21\u8f6c\u79fb\u4e86\uff0c\u6240\u4ee5m--\n    {\n        if (m&1) Ans=Ans*Tra;\n        Tra=Tra*Tra;\n    }\n    for (int i=1;i<=n;i++)\n        ans=min(ans,Ans.f[0][i]);\n    return printf(\"%lld\\n\",ans),0;\n}\n```",
        "postTime": 1510274778,
        "uid": 47654,
        "name": "\u79df\u9165\u96e8",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3502 \u3010[POI2010]CHO-Hamsters\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u7684\u91cd\u70b9\u662f\u8f6c\u79fb\u65b9\u7a0b\u7684\u4f18\u5316\u548c\u5339\u914d\u5b57\u7b26\u4e32\u7684\u6280\u5de7\uff0c\u6240\u4ee5\u6211\u4eec\u5206\u5f00\u8bb2\u3002\n\n### Solution\u2014\u2014\u5b57\u7b26\u4e32\u5339\u914d\n\n#### 1.KMP\u7b97\u6cd5\n\n\u56e0\u4e3a\u662f\u9996\u5c3e\u62fc\u63a5\uff0c\u6240\u4ee5\u62ffKMP\u7b97\u6cd5\u5c06nxt\u6570\u7ec4\u7b97\u51fa\u6765\u3002\u53ef\u4ee5\u66f4\u7b80\u4fbf\u7684\u8fd0\u7b97\u7b2c $j$ \u79cd\u5b57\u7b26\u4e32\u63a5\u5728\u7b2c $i$ \u79cd\u7ed3\u5c3e\u7684\u6700\u5c0f\u589e\u52a0\u91cf\u3002\n\n```c++\nfor(int k=1;k<=n;k++){\n    int j=0;\n    for(int i=2;i<=len[k];i++){\n        while(j&&s[k][j+1]!=s[k][i]) j=nxt[k][j];\n        if(s[k][j+1]==s[k][i]) j++;\n        nxt[k][i]=j;\n    }\n}\n```\n\n#### 2.AC\u81ea\u52a8\u673a\n\n\u548cKMP\u5176\u5b9e\u5dee\u4e0d\u591a\uff08\u597d\u50cf\u5b98\u65b9\u6b63\u89e3\u662f\u8fd9\u4e2a\uff09\uff0cAC\u81ea\u52a8\u673a\u5c31\u662f\u7b97\u51fafail\u6570\u7ec4\u800c\u5df2\uff0c\u529f\u80fd\u4e00\u6837\u3002\n\n```c++\ninline void insert(char *s,int id){\n    int len=strlen(s+1),now=0;\n    for(int i=1;i<=len;i++){\n        int tmp=s[i]-'a';\n        if(!ch[now][tmp]) ch[now][tmp]=++tot;\n        now=ch[now][tmp];\n    }\n    ed[now]=id;pos[id]=now;\n}\n\ninline void get_fail()\n{\n\tqueue<int>q;q.push(0);\n\twhile(q.size())\n\t{\n        int x=q.front();q.pop();\n        for(int i=0;i<26;i++){\n            int y=ch[x][i];\n            if(!y) continue;\n            int k=fail[x];\n            while(k&&(!ch[k][i])) k=fail[k];\n            fail[y]=x?ch[k][i]:0;\n            q.push(y);\n        }\n\t}\n}\n```\n\n#### 3.Hash\n\n\u5148\u62ff\u7684\u5355Hash\u8bd5\u4e86\u8bd5 \uff0c\u53d1\u73b0\u5982\u679c\u6a21\u6570\u4e0d\u592a\u884c\u7684\u8bdd\uff0c\u662f\u4f1aWA\u597d\u51e0\u4e2a\u70b9\u7684\u3002\n\n~~\u4e5f\u53ef\u80fd\u662f\u6211\u8138\u9ed1\uff0c\u4e00\u53d1\u5165\u9b42~~\n\n```c++\ninline bool check(int x,int y,int l){\n\t//\u7b2c\u4e09\u4e2a(ll) \u4e0d\u5199\u4f1a\u95054\u4e2a\u70b9 \u4eb2\u6d4b\n    return (ll)(Hash[x][len[x]-1]-Hash[x][len[x]-l-1]+mod)%mod\n         ==(ll)((ll)Hash[y][l-1]*pow_26[len[x]-l]%mod);\n}\n\nfor(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++){\n        int l=Min(len[i],len[j]);\n        for(int k(i==j?l-1:l);k;--k)\n            if(check(i,j,k)){\n                f[0][i][j]=len[j]-k;\n                break;\n            }\n        if(f[0][i][j]>10000000) f[0][i][j]=len[j];\n    }\n//\u914d\u5408\u4e0b\u9762\u7684\u500d\u589eFloyd\u89c2\u770b\n```\n\n\u6211\u6700\u540e\u7528\u7684 mod=19280817\n\n#### 4.\u53ccHash\n\n\u548c\u5355Hash\u4e0d\u4e00\u6837\uff0c\u5bf9\u4e8e\u53ccHash\u6765\u8bb2\uff0c\u53ea\u8981\u4f60\u4e0dzz\uff0c\u8138\u4e5f\u4e0d\u7b97\u592a\u9ed1\uff0c\u51fa\u9898\u4eba\u6ca1\u6709\u5361\u4f60\u53ccHash\uff0c\u5e94\u8be5\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\n\u4f46\u662f\uff0c\u5f88\u4e0d\u5e78\n\n\u8fd9\u4e2a\u9898\u7684\u5185\u5b58\u662f $125MB$ \uff0c\u53ccHash\u662f\u4f1aMLE\u7684 \u3012\u25bd\u3012\n\n```c++\ninline int get_Hash(const int x,const int s,const int e){\n    if(s>e) return 0;\n    int t=(Hash[x][e+1]-1ll*Hash[x][s]*p26_1[e-s+1]%MOD)+MOD;\n    return t>=MOD?t-MOD:t;\n}\n\ninline int get_HASH(const int x,const int s,const int e){\n    if(s>e) return 0;\n    int t=(HASH[x][e+1]-1ll*HASH[x][s]*p26_2[e-s+1]%mod)+mod;\n    return t>=mod?t-mod:t;\n}\n\n\ninline int work(const int x,const int y){\n    int m=min(len[x],len[y]);\n    if(x==y) --m;\n    for(int i=m;~i;--i){\n        if((get_Hash(x,len[x]-i,len[x]-1)==get_Hash(y,0,i-1))&&(get_HASH(x,len[x]-i,len[x]-1)==get_HASH(y,0,i-1)))\n            return len[y]-i;\n    }\n    return 0;\n}\n//\u501f\u7528\u5927\u4f6c\u7684\u90e8\u5206\u4ee3\u7801\n\nfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n    \tdis[i][j]=work(i,j);\n//\u8fd9\u4e2adis[i][j]\u5bf9\u5e94\u7684\u662f\u77e9\u9635\u4f18\u5316\u4e2d\u7684dis\n```\n\n### Solution\u2014\u2014\u8f6c\u79fb\u65b9\u7a0b\u4f18\u5316\n\n#### 1.\u500d\u589eFloyd\n\n\u6211\u4eec\u9996\u5148\u8f6c\u5316\u9898\u610f\uff1a\n\n\u6709 $n$ \u4e2a\u70b9\uff0c\u4e24\u4e2a\u70b9 $i,j$ \u4e4b\u95f4\u7684\u6743\u503c\u4e3a\u5c06\u7b2c $j$ \u79cd\u5b57\u7b26\u4e32\u63a5\u5728\u7b2c $i$ \u79cd\u7ed3\u5c3e\u7684\u6700\u5c0f\u589e\u52a0\u91cf\uff08\u6ce8\u610f\u6b64\u5904 $i$ \u53ef\u4ee5\u548c $j$ \u76f8\u7b49\uff09\u3002\u6c42\u4e00\u6761\u7ecf\u8fc7 $m$ \u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u81ea\u5df1\u9009\u62e9\u3002\n\n\u66b4\u529b\u6c42\u6cd5\u5f88\u597d\u60f3\uff0c\u56e0\u4e3a $n\\leq 200$ \uff0c\u6240\u4ee5\u8003\u8651Floyd\u3002\u8bbe $f_{k,i,j}$ \u4e3a $i$ \u5230 $j$ \u7ecf\u8fc7 $k$ \u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u7136\u540e\u4e00\u5c42\u4e00\u5c42\u679a\u4e3e\uff0c\u76f4\u5230 $m$ \uff0c\u5c31\u6c42\u51fa\u6765\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3 m)$ \n\n~~\u8fd9\u4e0d\u76f4\u63a5\u6ee1\u5206\uff1f~~\n\n\u6240\u4ee5\u8003\u8651\u600e\u4e48\u4f18\u5316\u2014\u2014\u8fd9\u65f6**\u500d\u589eFloyd**\u51fa\u573a\u4e86\u3002\n\n\u73b0\u5728\u9700\u8981\u5e72\u5565\u5462\uff1f\u5728 $f_{k,i,j}$ \u7684\u57fa\u7840\u4e0a\u5c06\u610f\u4e49\u6539\u4e3a\u4ece $i$ \u5230 $j$ \u7ecf\u8fc7 $2^k$ \u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u8fd9\u6837\u8f6c\u79fb\u7684\u590d\u6742\u5ea6\u5c31\u4ece $O(m)$ \u53d8\u6210\u4e86 $O(\\log m)$ \u3002\n\n```c++\nfor(int t=1;t<=30;t++)\n    for(int k=1;k<=n;k++)\n        for(int j=1;j<=n;j++)\n            for(int i=1;i<=n;i++)\n                f[t][i][j]=Min(f[t-1][i][k]+f[t-1][k][j],f[t][i][j]);\nfor(int i=0;i<=30;i++)\n    if(m&(1<<i)){\n        for(int j=1;j<=n;j++){\n            tmp[j]=0x3f3f3f3f3f3f3f3fll;\n            for(int k=1;k<=n;k++)\n                tmp[j]=tmp[j]<dis[k]+f[i][k][j]?tmp[j]:dis[k]+f[i][k][j];\n        }\n        for(int j=1;j<=n;j++)\n            dis[j]=tmp[j];\n    }\n```\n\n\u73b0\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3\\log m)$ \u3002\n\n#### 2.\u77e9\u9635\u4f18\u5316\n\n\u5148\u8003\u8651\u4e0d\u52a0\u4f18\u5316\u65f6\u7684\u6734\u7d20\u505a\u6cd5\uff0c\u5373\u66b4\u529b\u3002\n\n\u8bbe $dp_{i,j}$ \u8868\u793a\u73b0\u5728\u4e32\u91cc\u6709 $i$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u4ee5\u7b2c $j$ \u79cd\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684\u6700\u77ed\u957f\u5ea6\uff0c $dis_{i,j}$ \u8868\u793a\u5c06\u7b2c $j$ \u79cd\u5b57\u7b26\u4e32\u63a5\u5728\u7b2c $i$ \u79cd\u7ed3\u5c3e\u7684\u6700\u5c0f\u589e\u52a0\u91cf\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5f88\u597d\u5f97\u5230\uff1a $dp_{i,j}=\\min\\{dp_{i-1,k}+dis_{k,j}\\}$ \uff0c\u5176\u4e2d\u521d\u59cb\u72b6\u6001\u5e94\u4e3a $dp_{1,i}=len_i$ \n\n\u6211\u4eec\u770b\u4e00\u4e0b\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```c++\nfor(int i=2;i=m;i++)\n    for(int j=1;j<=n;j++)\n        for(int k=1;k<=n;k++)\n            dp[i][j]=min(dp[i][j],dp[i-1][k]+dis[k][j]);\n```\n\n\u7b49\u7b49\uff0c\u8fd9\u4e00\u5768\u4e1c\u897f\u662f\u4e0d\u662f\u4f3c\u66fe\u76f8\u8bc6\u3002\n\n\u662f\u4e0d\u662f\u5728\u77e9\u9635\u4e58\u6cd5\u4e2d\u89c1\u8fc7\u4e00\u4e2a\u7c7b\u4f3c\u7684\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7528\u77e9\u9635\u53bb\u4f18\u5316\u8fd9\u4e2a\u8f6c\u79fb\u3002\n\n```c++\nfor(int x=1;x<=n;x++){\n    I.a[0][x]=len[x];I.a[x][0]=INF;\n    for(int y=1;y<=n;y++){\n        int j=0;\n        for(inti i=2;i<=len[x];i++){\n            whle(j&&s[y][j+1]!=s[x][i]) j=nxt[y][j];\n            if(s[y][j+1]==s[x][i]) j++;\n            if(i==len[x]) I.a[x][y]=len[y]-j;\n        }\n    }\n}\n\nfor(m--;m;m>>=1){\n    if(m&1) Ans=Ans*I;\n    I=I*I;\n}\n//\u642d\u914d\u4e0a\u9762\u7684KMP\u89c2\u770b\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $O(n^3\\log m)$ \u3002\n\n\n\n\u6ce8\u610f\uff1a\u6211\u5c06\u4e0a\u9762\u7684\u51e0\u4e4e\u6bcf\u4e2a\u7ec4\u5408\u90fd\u8bd5\u4e86\u4e00\u904d\uff0c\u9664\u4e86\u53ccHash\u5728\u4e0d\u7ba1\u65e0\u8bba\u5f00\u4e0d\u5f00O2\u7684\u60c5\u51b5\u4e0b\u90fd\u662f\u7b2c\u4e00\u4e2a\u70b9MLE\uff0c\u522b\u7684\u65b9\u6cd5\u5728\u4e0d\u5f00O2\u7684\u60c5\u51b5\u662f\u7b2c\u4e00\u4e2a\u70b9TLE\u3002\uff08\u54b1\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5bf9\u4e86\u8fd8\u4f1aT\uff0c\u8fd9\u4e5f\u5361\u5e38\uff1f\uff09\n\n### \u4ee3\u7801\n\n\u521a\u521a\u6bcf\u4e2a\u90fd\u653e\u4e86\u90e8\u5206\u4ee3\u7801\uff0c\u8fd9\u91cc\u5c31~~\u5495\u5495\u5495~~\n\n\u8fd8\u662f\u653e\u4e00\u4e2a\u500d\u589eFloyd\u7684\u5b8c\u6574\u4ee3\u7801\u5427\n\n~(\uffe3\u25bd\uffe3)~*\n\n```c++\n#include<bits/stdc++.h>\n#define ll long long\n\nusing namespace std;\nconst int N=210,L=100010,mod=19260817;\nchar s[N][L];\nll f[35][N][N],dis[N],tmp[N],n,m,ans;\nint len[N],Hash[N][L],pow_26[L];\n\nll Min(ll x,ll y){\n    return x<y?x:y;\n}\n\ninline bool check(int x,int y,int l){\n    //\u7b2c\u4e09\u4e2a(ll) \u4e0d\u5199\u4f1a\u95054\u4e2a\u70b9 \u4eb2\u6d4b\n    return (ll)(Hash[x][len[x]-1]-Hash[x][len[x]-l-1]+mod)%mod==(ll)((ll)Hash[y][l-1]*pow_26[len[x]-l]%mod);\n}\n\ninline void init(){\n    pow_26[0]=1;\n    for(int i=1;i<=100000;i++)\n        pow_26[i]=pow_26[i-1]*26%mod;\n    memset(f,0x3f,sizeof(f));\n}\n\nint main(){\n    init();\n    scanf(\"%lld%lld\",&n,&m); m--;\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",s[i]);\n        len[i]=strlen(s[i]);\n        dis[i]=len[i];\n        for(int j=0;j<len[i];j++)\n            if(j) Hash[i][j]=(Hash[i][j-1]+pow_26[j]*(s[i][j]-'a'+1))%mod;\n            else Hash[i][j]=s[i][j]-'a'+1;\n    }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++){\n            int l=Min(len[i],len[j]);\n            for(int k(i==j?l-1:l);k;--k)\n                if(check(i,j,k)){\n                    f[0][i][j]=len[j]-k;\n                    break;\n                }\n            if(f[0][i][j]>10000000) f[0][i][j]=len[j];\n        }\n    for(int t=1;t<=30;t++)\n        for(int k=1;k<=n;k++)\n            for(int j=1;j<=n;j++)\n                for(int i=1;i<=n;i++)\n                    f[t][i][j]=Min(f[t-1][i][k]+f[t-1][k][j],f[t][i][j]);\n    for(int i=0;i<=30;i++)\n        if(m&(1<<i)){\n            for(int j=1;j<=n;j++){\n                tmp[j]=0x3f3f3f3f3f3f3f3fll;\n                for(int k=1;k<=n;k++)\n                    tmp[j]=tmp[j]<dis[k]+f[i][k][j]?tmp[j]:dis[k]+f[i][k][j];\n            }\n            for(int j=1;j<=n;j++)\n                dis[j]=tmp[j];\n        }\n    ans=0x3f3f3f3f3f3f3f3fll;\n    for(int i=1;i<=n;i++)\n        ans=Min(ans,dis[i]);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1603098494,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "P3502 [POI2010]CHO-Hamsters"
    },
    {
        "content": "\u6211\u5199\u7684hash+\u77e9\u9635\u52a0\u901fFloyd\u3002\n\n##### ~~\u524d\u65b9\u9ad8\u80fd\u9884\u8b66~~\n\n\u76d8\u70b9\u4e00\u4e0b\u8fd9\u4e00\u9898\u7684\u51e0\u4e2a\u5751\u70b9\uff1a\n\n- \u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00longlong\u2026\u2026\uff08\u5176\u5b9e\u53ea\u662f\u6211\u592a\u83dc\u5fd8\u4e86QAQ\uff09\n\n- \u4e0d\u8981\u7528string\u7c7b\uff01\uff01\u4e0d\u7136\u4e0d\u5f00O2 T\u6389\u7b2c\u4e00\u4e2a\u70b9\uff08\u867d\u7136\u5f00\u53ea\u8981266ms\uff09\n\n- \u5bf9\u4e8e\u76f8\u540c\u7684\u4e32\u4e0d\u80fd\u7b97\u4e24\u6b21\uff0c\u5355\u4e5f\u8981\u8003\u8651\u4e00\u4e0b\uff1a\n\n\u6bd4\u5982aba\u76f8\u63a5\u4e24\u6b21\u5c31\u662fababa\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a5\u800c\u4e0d\u662f6\uff08\u6211\u4e00\u5f00\u59cb\u4ee5\u4e3a\u540c\u4e00\u4e2a\u4e32\u5bf9\u7b54\u6848\u8d21\u732e\u5fc5\u5b9a\u662f\u539f\u957f\u800cWa\u4e86\u4e00\u4e2a\u70b9\uff09\n\n- \u4e3a\u4e86\u4fdd\u9669\uff0c\u6211\u7528\u4e86\u53cchash\u503c\uff08\u4f46\u4e0d\u7528\u4f3c\u4e4e\u4e5f\u53ef\u4ee5\uff09\n\n- \u636e\u8bf4m\u53ef\u80fd\u4e3a0\uff0c\u4f46\u4eb2\u6d4b\u4e0d\u4f1a\uff08\u5982\u679cT\u4e86\u5e76\u4e0d\u662f\u8fd9\u4e2a\u9505\uff09\n\n\u63a5\u4e0b\u6765\u4e00\u4e9b\u7ec6\u8282\u5728\u4ee3\u7801\u4e2d\u5448\u73b0\n\n```cpp\n#pragma GCC optimize(2)\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <string>\nusing namespace std;\n\ntypedef long long ll;\nconst int N = 203, M = 100003, MOD = 299999973, mod = 399999977; //\u53cchash\u503c\u4fdd\u9669\u9632\u51b2\u7a81\nstring a[N];\nint n, m;\nint c[N][N], l[N];\nint Hash[N][M];\nint HASH[N][M];\n\nint p261[M], p262[M];\n\ninline int Get (const int x, const int s, const int e) {\n\tif (s > e) return 0;\n    int t = (Hash[x][e + 1] - 1ll * Hash[x][s] * p261[e - s + 1] % MOD) + MOD;\n    return t >= MOD ? t - MOD : t;\n} //\u7b97hash\u503c\n\ninline int GET (const int x, const int s, const int e) {\n\tif (s > e) return 0;\n    int t = (HASH[x][e + 1] - 1ll * HASH[x][s] * p262[e - s + 1] % mod) + mod;\n    return t >= mod ? t - mod : t;\n}\n\n\ninline int work (const int x, const int y) {\n    int i, m = min (l[x], l[y]);\n\tif (x == y) --m;\n    for (i = m; ~i; --i) {\n\t\tif (Get (x, l[x] - i, l[x] - 1) == Get (y, 0, i - 1)) {\n\t\t\tif (GET (x, l[x] - i, l[x] - 1) == GET (y, 0, i - 1)) return l[y] - i;\n\t\t}\n\t}\n\treturn 0;\n}//\u5224\u65ad\u5982\u679c\u4e32x\u540e\u63a5y\u7684\u957f\u5ea6\u4e3alen[y] - \u6700\u957f\u516c\u5171x\u524d\u7f00\u4e0ey\u540e\u7f00\n\nstruct stu {\n    ll x[N][N];\n};\n\ninline stu mult (const stu& p, const stu& q) {\n    stu r; memset (r.x, 0x3f, sizeof (r.x));\n    register int i, j, k;\n    for (k = 0; k <= n; ++k) {\n        for (i = 0; i <= n; ++i) {\n            for (j = 0; j <= n; ++j) \n\t\t\t\tr.x[i][j] = min (r.x[i][j], p.x[i][k] + q.x[k][j]);\n        }\n    }\n    return r;\n}\n\n/*\n\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u539f\u70b9\u4e3a0\u5230\u6bcf\u4e2a\u4e32\u6743\u503c\u4e3a\u4e32\u957f\n\u7136\u540e\u7528Floyed\u8fdb\u884c\n\u8bb0\u5f97\u5f00longlong \uff01\uff01\n*/\n\ninline ll ksm (int x) {\n    stu s, p;\n    int i, j; for (i = 0; i <= n; ++i) {\n        for (j = 0; j <= n; ++j) p.x[i][j] = s.x[i][j] = c[i][j];\n    }\n\tfor (i = 0; i <= n; ++i) p.x[i][0] = s.x[i][0] = 0x3f3f3f3f3f3f3f3fll;\n\twhile (x) {\n        if (x & 1) s = mult (s, p);\n        p = mult (p, p);\n        x >>= 1;\n    }\n    ll ans = 1ll << 60;\n    for (i = 1; i <= n; ++i) if (s.x[0][i]) ans = min (ans, s.x[0][i]);\n    return ans;\n}\n\nint main () {\n    cin >> n >> m;\n\tif (!m) {\n\t\tputs (\"0\");\n\t\treturn 0;\n\t}\n    int i, j; for (i = 1; i <= n; ++i) {\n        cin >> a[i];\n        l[i] = a[i].size ();\n        c[0][i] = l[i];\n    }\n    p261[0] = p262[0] = 1;\n    for (i = 1; i <= 100000; ++i) {\n\t\tp261[i] = 1ll * p261[i - 1] * 26 % MOD;\n\t\tp262[i] = 1ll * p262[i - 1] * 26 % mod;\n\t}\n    for (i = 1; i <= n; ++i) {\n\t\tHash[i][1] = a[i][0] - 'a';\n\t\tHASH[i][1] = a[i][0] - 'a';\n        for (j = 1; j < l[i]; ++j) {\n            Hash[i][j + 1] = (1ll * Hash[i][j] * 26 + (a[i][j] - 'a')) % MOD;\n\t\t\tHASH[i][j + 1] = (1ll * HASH[i][j] * 26 + (a[i][j] - 'a')) % mod;\n        }\n    }\n    for (i = 1; i <= n; ++i) {\n        for (j = 1; j <= n; ++j)\n            c[i][j] = work (i, j);\n    }\n    cout << ksm (m - 1) << '\\n';\n    return 0;\n}\n\n```\n",
        "postTime": 1567693179,
        "uid": 31193,
        "name": "\u68a7\u6850\u706f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3502 \u3010[POI2010]CHO-Hamsters\u3011"
    },
    {
        "content": "\u9898\u610f\uff1ahttps://www.luogu.org/problem/P3502\n\n\u6ca1\u6709AC\u81ea\u52a8\u673a\u7684\u9898\u89e3\u5417~~ \n\n\u601d\u8def\u8ddf\u5176\u4ed6\u9898\u89e3\u4e00\u6837,\u4e0d\u8fc7\u5c06KMP\u6362\u6210\u4e86AC\u81ea\u52a8\u673a\n\n\u9996\u5148n\u4e2a\u4e32\u4e92\u4e0d\u5305\u542b,\u56e0\u6b64\u6700\u7ec8\u7b54\u6848\u4e00\u5b9a\u662fm\u4e2a\u4e32\u524d\u540e\u62fc\u63a5\u800c\u6210\n\n\u56e0\u6b64\u8003\u8651f[i][j]->\u62fc\u6210\u4e86i\u4e2a\u4e32,\u6700\u540e\u4e00\u4e2a\u4e32\u4e3a\u7b2cj\u4e2a\u4e32\u7684\u6700\u5c0f\u957f\u5ea6\n\n\u53ef\u4ee5\u9884\u5904\u7406dis[i][j]\u8868\u793a\u5728i\u540e\u9762\u62fc\u63a5\u51e0\u4e2a\u5b57\u7b26\u80fd\u51fa\u73b0j:\n\n\u5982 i:aab j:ba dis[i][j]=1(aab+'a')\n\ndis\u6570\u7ec4\u663e\u7136\u53ef\u4ee5\u7528AC\u81ea\u52a8\u673a\u66b4\u529b\u8df3fail\u6c42(\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0d\u5f0002\u4f1aT\u7b2c\u4e00\u4e2a\u70b9,\u5e0c\u671bdalao\u4eec\u770b\u770b)\n\nf[i][j]=min(f[i-1][k]+dis[k][j])\n\n\u4f46\u662fi[0,m],m<=1e9,\u663e\u7136\u4f1aT\n\n\u8003\u8651\u4e0a\u9762\u7684DP\u5f0f\u5b50\u5176\u5b9e\u662f\u4e00\u4e2a\u53d6min\u7684\u77e9\u4e58,\u56e0\u6b64\u7528\u77e9\u4e58\u4f18\u5316\n\n\u590d\u6742\u5ea6:O(N^3logM)\n\n**\u5343\u4e07\u6ce8\u610f****\u5343\u4e07\u6ce8\u610f****\u5343\u4e07\u6ce8\u610f**\uff1a\u5355\u4f4d\u77e9\u9635\u4e3a\u5168inf\u77e9\u9635,\u4e0d\u8981\u50cf\u50bb\u4e4e\u4e4e\u7684nofind\u5f04\u6210\u5bf9\u89d2\u7ebf\u5168\u4e3a1\u7684\u77e9\u9635\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define re register\ntypedef long long ll;\nconst int maxn=210;\nconst int maxl=100010;\nll n,m,tot,ans=1LL<<60;\nint end[maxl],pos[maxl],len[maxn],fail[maxl],dep[maxl];\nint ac[maxl][26];\nchar s[maxl];\nstruct Mat\n{\n\tll a[maxn][maxn];\n\tll* operator[](int i){return a[i];}\n\tMat(){memset(a,0x3f,sizeof(a));}\n\tinline void idx(){for(re int i=1;i<=n;i++)a[i][i]=1;}\n}A;\nMat operator*(Mat &x,Mat &y)\n{\n\tMat res;\n\tfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=1;j<=n;j++)\n\t\t\tfor(re int k=1;k<=n;k++)\n\t\t\t\tres[i][j]=min(res[i][j],x[i][k]+y[k][j]);\n\treturn res;\n}\nMat operator ^(Mat &a,ll k)\n{\n    Mat res;\n    for(re int i=1;i<=n;i++)res[i][i]=0;\n    while(k)\n    {\n        if(k&1)res=res*a;\n        a=a*a;k>>=1;\n    }\n    return res;\n}\ninline void insert(char* s,int id)\n{\n\tint len=strlen(s+1),now=0;\n\tfor(re int i=1;i<=len;i++)\n\t{\n\t\tint c=s[i]-'a';\n\t\tif(!ac[now][c])ac[now][c]=++tot;\n\t\tnow=ac[now][c];\n\t}\n\tend[now]=id;pos[id]=now;\n}\ninline void getfail()\n{\n\tqueue<int>q;q.push(0);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor(re int i=0;i<26;i++)\n\t\t{\n\t\t\tint y=ac[x][i];\n\t\t\tif(!y)continue;\n\t\t\tint k=fail[x];\n\t\t\twhile(k&&(!ac[k][i]))k=fail[k];\n\t\t\tfail[y]=x?ac[k][i]:0;\n\t\t\tq.push(y);\n\t\t}\n\t}\n}\ninline void build()\n{\n\tfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=pos[i];fail[j];j=fail[j])\n\t\t{\n\t\t\tdep[fail[j]]=0;\n\t\t\tqueue<int>q;q.push(fail[j]);\n\t\t\twhile(!q.empty())\n\t\t\t{\n\t\t\t\tint x=q.front();q.pop();\n\t\t\t\tfor(int k=0;k<26;k++)\n\t\t\t\t{\n\t\t\t\t\tint y=ac[x][k];\n\t\t\t\t\tif(!y)continue;\n\t\t\t\t\tA[i][end[y]]=dep[y]=dep[x]+1;q.push(y);\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\t\t\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tif(!m){puts(\"0\");return 0;}\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s+1);len[i]=strlen(s+1);\n\t\tinsert(s,i);\n\t\tfor(re int j=1;j<=n;j++)A[j][i]=len[i];\n\t}\n\tgetfail();build();\n\tA=A^(m-1);\n\t/*for(int i=1;i<=n;i++,puts(\"\"))\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tprintf(\"%lld \",A[i][j]);\n\tputs(\"\");*/\n\tfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=1;j<=n;j++)\n\t\t\tans=min(ans,len[i]+A[i][j]);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1566490034,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P3502 [POI2010]CHO-Hamsters(AC\u81ea\u52a8\u673a+\u77e9\u4e58\u4f18\u5316DP)"
    },
    {
        "content": "\u6c34\u9898\uff0c\u611f\u89c9\u8bc4\u7d2b\u6709\u70b9\u8fc7\u5206\u3002\n\n\u548c\u662f $m$ \u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u63a5\u5230\u5927\u5b57\u7b26\u4e32\u7684\u540e\u8fb9\u3002\n\n\u4f8b\u5982\uff0c\u6211\u73b0\u5728\u62fc\u6210\u4e86 abcdefgabc\uff0c\u7136\u540e\u60f3\u52a0\u5165 abcdefg\uff08\u5b57\u7b26\u4e32 $s$\uff09\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u53d8\u6210 abcdefgabcdefg\uff0c\u52a0\u5165\u7684\u957f\u5ea6\u662f $|s|-C$\uff0c\u5176\u4e2d $C$ \u662f\u5927\u5b57\u7b26\u4e32\u672b\u5c3e\u548c $s$ \u7684\u524d\u90e8\u6700\u5927\u4ea4\u96c6\u3002\n\n\u53ef\u80fd\u8fd8\u662f\u8bf4\u7684\u6709\u4e9b\u62bd\u8c61\uff0c\u5982\u679c\u8bbe\u5927\u5b57\u7b26\u4e32\u4e3a $t$ \u5c31\u6709 $C=\\max\\limits_{k \\in [0,min(|s|,|t|))}k(t_{|t|-k+1\\sim|t|}=s_{1 \\sim k})$\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f KMP \u53ef\u4ee5\u505a\uff0c\u4f46\u662f KMP \u6bd5\u7adf\u9700\u8981\u8111\u5b50\uff0c\u4e8e\u662f\u679c\u65ad\u5b57\u7b26\u4e32 hash\u3002\n\n\u56e0\u4e3a\u6ca1\u6709\u5305\u542b\u5173\u7cfb\uff0c\u6240\u4ee5\u5927\u5b57\u7b26\u4e32\u53ef\u4ee5\u53d8\u6210\u8fd9\u4e2a\u5927\u5b57\u7b26\u4e32\u6700\u540e\u63a5\u5165\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u6837\u5c31\u6709\u4e86\u4e00\u4e2a\u77e9\u9635 $f_{i,j}$\u3002\u6700\u5f00\u59cb\u5927\u5b57\u7b26\u4e32\u662f\u7a7a\uff0c\u6240\u4ee5\u8fd8\u8981\u5f15\u5165 $f_{0,i}$\u3002\n\n\u53d1\u73b0\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u4ece $0$ \u5230\u4efb\u610f\u8282\u70b9\u6070\u597d\u7ecf\u8fc7 $m$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\uff01\u90a3\u8fd9\u73a9\u610f\u513f\u53ef\u4ee5\u7528\u77e9\u9635\u4e58\u6cd5\u53bb\u505a\uff0c\u5982\u679c\u4e0d\u4f1a\u53bb\u770b\u9b54\u6cd5\u503c\uff08NOI Online 3 \u63d0\u9ad8\u7ec4\uff09\u7684\u9898\u89e3\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nunsigned long long mo=111339248186143ull,bs[100005];\nchar s[205][100005];\nvector<unsigned long long>g[205];\nint l[205];\nlong long f[31][205][205],ff[205][205],f3[205][205];\nint main()\n{\n\tbs[0]=1;\n\tfor(int i=1;i<=100000;i++)bs[i]=bs[i-1]*mo;\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)scanf(\"%s\",s[i]+1),l[i]=strlen(s[i]+1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tg[i].push_back(0);\n\t\tfor(int j=1;j<=l[i];j++)\n\t\t{\n\t\t\tunsigned long long mm=g[i][j-1];\n\t\t\tg[i].push_back(mm*mo+s[i][j]);\n\t\t}\n\t}\n\tmemset(f,63,sizeof(f));\n\tfor(int i=1;i<=n;i++)f[0][0][i]=l[i];\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++)\n\t{\n\t\tint wz=0;\n\t\tfor(int k=1;k<min(l[i],l[j]);k++)\n\t\t\tif(g[i][l[i]]-g[i][l[i]-k]*bs[k]==g[j][k])wz=k;\n\t\tf[0][i][j]=l[j]-wz;\n\t}\n\tfor(int i=1;i<=30;i++)for(int j=0;j<=n;j++)for(int k=1;k<=n;k++)\n\t\tfor(int t=1;t<=n;t++)f[i][j][k]=min(f[i][j][k],f[i-1][j][t]+f[i-1][t][k]);\n\tint nnn=0;\n\tfor(int i=30;i>=0;i--)if(m>=(1<<i))\n\t{\n\t\tm-=1<<i;\n\t\tif(!nnn)\n\t\t{\n\t\t\tfor(int j=0;j<=n;j++)for(int k=1;k<=n;k++)ff[j][k]=f[i][j][k];\n\t\t\tnnn=1;\n\t\t}else\n\t\t{\n\t\t\tmemset(f3,63,sizeof(f3));\n\t\t\tfor(int j=0;j<=n;j++)for(int k=1;k<=n;k++)for(int t=1;t<=n;t++)\n\t\t\t\tf3[j][k]=min(f3[j][k],f[i][j][t]+ff[t][k]);\n\t\t\tfor(int j=0;j<=n;j++)for(int k=1;k<=n;k++)ff[j][k]=f3[j][k];\n\t\t}\n\t}\n\tlong long ans=LLONG_MAX;\n\tfor(int i=1;i<=n;i++)ans=min(ans,ff[0][i]);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1610012736,
        "uid": 107484,
        "name": "wmy_goes_to_thu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3502 \u3010[POI2010]CHO-Hamsters\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5f88\u5999\uff0c\u5f53\u65f6\u53ea\u6709@wlzhouzhuan \u5de8\u4f6c\u4e00\u4e2a\u505a\u51fa\u6765\u3002\n\n\u73b0\u5728\u60f3\u8981\u662f\u90a3\u4e2a\u65f6\u5019A\u8fd9\u9053\u9898\u8be5\u6709\u591a\u723d\u554a\uff08~~\u597d\u54272010\u5e74\u6211\u624d3\u5c81\u3002\u3002\u3002~~\uff09\n\n\u9996\u5148\u770b\u5230\u9898\u9762\uff0c\u6211\u7b2c\u4e00\u60f3\u6cd5\u662fdp\u4e0d\u53ef\u505a\uff0c\u4e3a\u4f55\uff1f\u6211\u60f3\uff1a\u6709\u53ef\u80fd\u4e0d\u662f\u6240\u6709\u7684\u4e32\u9996\u5c3e\u76f8\u63a5\u5440\uff0c\u53ef\u80fd\u4e00\u4e2a\u4e32\u542b\u5728\u53e6\u5916\u4e24\u4e2a\u5408\u5e76\u8d77\u6765\u7684\u5927\u4e32\u91cc\u5440\uff01\u3002\n\n\u5176\u5b9e\u4e0d\u662f\u7684\uff0c\u6bd4\u5982\u8bf4aaab abc bcc\n\u7b54\u6848\u662f6\n\n\u65e2\u7136\u90fd\u662f\u9996\u5c3e\u76f8\u63a5\uff0c\u90a3\u5c31\u597d\u529e\u4e86\uff0c\u6211\u4eec\u7528string_hash\u6c42\u51fa\u4efb\u610f\u4e24\u4e2a\u5b57\u7b26\u4e32\u8981\u8fde\u63a5\u8d77\u6765\u7684\u6700\u5c11\u957f\u5ea6(\u8bb0\u4e3adis[i][j])\uff0c\u7528\u8fd9\u4e2a\u8dd1dp\u5c31\u884c\u4e86\n\ndp\u5f0f\u5b50\u4e3a\uff1af[i][j]\uff1a\u4e32\u4e2d\u5df2\u7ecf\u6709\u4e86i\u4e2a\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u4e00\u4e2a\u4e3aj\u7684\u6700\u5c0f\u957f\u5ea6\u3002\nf[i][j]=min\uff08f[i][j],f[i-1][k]+dis[k][j]\uff09\uff1b\n\n\u5230\u8fd9\u91cc\u5c31\u670960\u5206\u4e86\uff08~~\u591f\u4e86\u591f\u4e86~~\uff09\uff0c\u53ef\u662f\u4e0eAK\u7684bmh201708\u5de8\u4f6c\u5dee\u8ddd\u8fd8\u662f\u4e0d\u5c0f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u8fdb\u884c\u4f18\u5316\uff0c\u7b97\u6cd5\u7684\u74f6\u9888\u5728m\u4e0a\u3002\n\n\u4f46\u662f\u60a8\u6709\u6ca1\u6709\u53d1\u73b0\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u76f8\u5f53\u4e8e\u6bcf\u6b21**\u53ea\u8f6c\u79fb\u4e00\u6761\u8fb9**\u7684floyd???\n\n\u6ca1\u9519\u54e6\uff0c\u5148\u6539\u5199\u6210floyd\u7684\u5f0f\u5b50\uff1af[i][j]=min(f[i][j],f[i][k]+f[k][j])\n\n\u673a\u623f\u91cc\u5927\u591a\u6570\u4eba\u653e\u5f03\u5728\u8fd9\u91cc\uff0c\u5979\u4eec\u60f3\u4e0d\u5230\u4e86\u3002\u5176\u5b9e\u8fd9\u5c31\u76f8\u5f53\u4e8e\u628a\u5b57\u7b26\u4e32\u770b\u6210\u70b9\uff0c\u53ea\u7ecf\u8fc7k\u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u8fd9\u6709\u4e2a\u4e1c\u897f\u53eb\u500d\u589efloyd\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u767e\u5ea6\n\n\u7136\u540e\u8fd8\u8981\u8fde\u4e00\u4e2a\u8d85\u7ea7\u6e90\uff0c\u4e0d\u7136\u4e0d\u77e5\u5230\u4ece\u54ea\u4e2a\u4e32\u5f00\u59cb\uff0c\u679a\u4e3e\u6d6a\u8d39\u65f6\u95f4\u3002\u5bf9\u4e8e\u8d85\u7ea7\u6e90\u6765\u8bf4\uff0c\u51fa\u8fb9\u8fde\u7684\u662f\u5bf9\u5e94\u70b9\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u5165\u8fb9\u8fdeinf\uff08\u76f8\u5f53\u4e8e\u4e0d\u80fd\u8d70\uff0c\u4e3a\u4f55\u4e0d\u80fd\u8d70\uff1f\u56e0\u4e3a\u8d70\u4e00\u6b65\u5c31\u76f8\u5f53\u4e8e\u6d6a\u8d39\u4e86\u4e00\u6761\u8fb9\uff08\u8d70\u5230\u4e86\u7a7a\u70b9\u4e0a\uff09\uff0c\u53ef\u662f\u5fc5\u987b\u5f97\u8d70\u6ee1\u5440\uff01\uff01\uff01\uff09\n\n\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\uff1am\u5728\u77e9\u4e58\u65f6\u8981\u51cf\u4e00\uff0c\u56e0\u4e3a\u5feb\u901f\u5e42res\u7684\u201c1\u201d\u4e0d\u77e5\u9053\uff08\u662f\u90bb\u63a5\u77e9\u9635\u5417\uff1f\u4e0d\u662f\uff0c\u5e94\u4e3a\u90bb\u63a5\u77e9\u9635\u81ea\u5df1\u5bf9\u81ea\u5df1\u8fde\u8fb9\u662f\u4e0d\u82b1\u8d39\u7684\uff0c\u53ef\u662f\u8fd9\u91cc\u4e00\u4e2a\u70b9\u91cd\u590d\u4e24\u6b21\u8981\u82b1\u8d39\u5440\uff01\uff01\uff01\u6240\u4ee5\u201c1\u201d\u5c31\u53d8\u6210\u5e95\u6570\uff0c\u7136\u540em--\uff0c\u4fdd\u8bc1\u662fm\u6b21\u65b9\uff09\n\n\u8be6\u7ec6\u5b9e\u73b0\u89c1\u4ee3\u7801\uff1a\n```c\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;//\u81ea\u7136\u6ea2\u51fa\u6cd5\nconst int N=1005;//\u4e0d\u7ed9\u6570\u636e\u8303\u56f4\u3002\u3002\u3002\nconst ll d=1003;\nconst ll inf=1e15;//\u4e0d\u8981\u592a\u5c0f\uff0c\u5176\u5b9e1e15\u5c31\u591f\u4e86\nint n; \nll m;\nchar s[N][10001];//\u4e0d\u7ed9\u6570\u636e\u8303\u56f4\u3002\u3002\u3002\nll dis[N][N];\null po[10001];\null hasa[10001],hasb[10001];\nstruct ju{\n\tll a[N][N];\n};\nju mul(ju a,ju b){//\u77e9\u9635\u4e58\u6cd5\uff0c\u89c1\u500d\u589efloyd\n\tju x;\n\tint i,j,k;\n\tfor(i=0;i<=n;i++)for(j=0;j<=n;j++)x.a[i][j]=inf;\n\tfor(k=0;k<=n;k++){//\u505afloyd\n\t\tfor(i=0;i<=n;i++){\n\t\t\tfor(j=0;j<=n;j++){\n\t\t\t\tx.a[i][j]=min(x.a[i][j],a.a[i][k]+b.a[k][j]);\n\t\t\t}\n\t\t}\t\n\t}\n\treturn x;\n}\nint len[N];\null chsuc(int x,int p){//\u540e\u7f00\u54c8\u5e0c\u503c\n\treturn hasa[len[x]]-hasa[p-1]*po[len[x]-p+1]; \n}\nll did(int x,int y,int same){//\u7b97dis\n\tint i,j;\n\tmemset(hasa,0,sizeof(hasa));\n\tmemset(hasb,0,sizeof(hasb));\n\tfor(i=1;i<=len[x];i++)hasa[i]=hasa[i-1]*d+s[x][i];\n\tfor(i=1;i<=len[y];i++)hasb[i]=hasb[i-1]*d+s[y][i];\n\tfor(i=len[y]-same;i>=1;i--){//\u6ce8\u610f\uff0c\u5f53\u4e24\u4e32\u76f8\u540c\u65f6\u4e0d\u53ef\u4ee5\u4e00\u4e2a\u5f53\u4e24\u4e2a\u7528\uff0c\u6700\u591a\u5339\u914d\u5230\u5012\u6570\u7b2c\u4e8c\u4f4d\n\t\tif(len[x]<i)continue;//i\u679a\u4e3e\u7684\u662fb\u7684\u524d\u7f00\u4e0ea\u7684\u540e\u7f00\u7684\u91cd\u590d\u5b57\u7b26\u6570\uff0c\u663e\u7136\u4e0d\u80fd\u8d85\u8fc7len[x]\n\t\tull h1=hasb[i],h2=chsuc(x,len[x]-i+1); \n\t\tif(h1==h2){\n\t\t\treturn len[y]-i;\n\t\t}\n\t}\n\treturn len[y];\n} \nint main(){\n\tcin>>n>>m;\n\tint i,j;\n\tfor(i=1;i<=n;i++)scanf(\"%s\",s[i]+1),len[i]=strlen(s[i]+1);\n\tpo[0]=1;\n\tfor(i=1;i<=10000;i++)po[i]=po[i-1]*d;//\u5947\u602a\u5417\uff1f\u591a\u5199string_hash\n\tfor(i=0;i<=n;i++){//\u8d85\u7ea7\u6e90\u4e3a0\u70b9\n\t\tfor(j=0;j<=n;j++){\n\t\t\tif(j==0)dis[i][j]=inf;\n\t\t\telse if(i==0)dis[i][j]=len[j];//build a super start \n\t\t\telse dis[i][j]=did(i,j,i==j);\n\t\t}\n\t}\n\tju hhh,res;\n\tfor(i=0;i<=n;i++)for(j=0;j<=n;j++)hhh.a[i][j]=dis[i][j];\t\t\t\n\tres=hhh;\n    m--;//m\u53ef\u4ee5\u4e3a0\u54e6\uff01\n\tif(m==-1){\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\twhile(m){//\u5feb\u901f\u5e42\n\t\tif(m&1)res=mul(res,hhh);\n\t\thhh=mul(hhh,hhh);\n\t\tm>>=1;\n\t}\n\tll ans=inf;\n\tfor(i=1;i<=n;i++)ans=min(ans,res.a[0][i]);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1564591245,
        "uid": 127915,
        "name": "Bosun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3502 \u3010[POI2010]CHO-Hamsters\u3011"
    }
]