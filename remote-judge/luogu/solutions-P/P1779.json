[
    {
        "content": "## \u601d\u8def\u6982\u8ff0\n\n\u6781\u5751\uff0c\u7ec6\u8282\u6781\u591a\uff0c\u8fd9\u662f\u5bf9\u672c\u9898\u7684\u6982\u62ec = . =\n\n\u8bfb\u5b8c\u9898\u540e\uff0c\u9996\u5148\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a**\u7528\u76f8\u540c\u653b\u51fb\u65b9\u5f0f\u6740\u654c\uff0c\u7ed3\u679c\u4e0e\u987a\u5e8f\u6ca1\u6709\u5173\u7cfb**\u3002\n\n\u5982\u4f55\u7406\u89e3\uff1f\u901a\u4fd7\u5730\u8bf4\uff0c\u5982\u679c\u73b0\u5728\u6709 3 \u4e2a\u602a\u517d\uff0c\u6211\u4eec\u4f7f\u7528 \u6cd5\u672f 1 \u7fa4\u4f53\u653b\u51fb \u4e00\u6b21\uff0c\u63a5\u7740\u7528 \u6cd5\u672f 2 \u5bf9 \u602a\u517d 1 \u5355\u4f53\u653b\u51fb \u4e00\u6b21\uff0c\u6700\u540e\u518d\u7528 \u6cd5\u672f 1 \u7fa4\u4f53\u653b\u51fb \u4e00\u6b21\u3002\u5047\u8bbe 3 \u53ea\u602a\u517d\u90fd\u5728\u8fd9\u6837\u7684\u653b\u51fb\u4e0b\u5168\u90e8\u9635\u4ea1\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u4f7f\u7528 \u6cd5\u672f 1 \u7fa4\u4f53\u653b\u51fb \u4e24\u6b21\uff0c\u6700\u540e\u624d\u7528 \u6cd5\u672f 2 \u5bf9 \u602a\u517d 1 \u5355\u4f53\u653b\u51fb\uff0c\u6548\u679c\u4ecd\u7136\u662f\u4e00\u6837\u7684\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6742\u4e71\u7684\u653b\u51fb\u65b9\u5f0f\u6574\u7406\u6210\uff1a**\u5148\u653e \u7fa4\u4f53\u653b\u51fb\uff0c\u518d\u653e \u5355\u4f53\u653b\u51fb**\u3002\n\n\u7b97\u6cd5\u5df2\u7ecf\u5f88\u663e\u7136\u4e86\uff0c\u7fa4\u4f53\u653b\u51fb\u7684\u4f24\u5bb3\u5bf9\u4efb\u4f55\u602a\u517d\u90fd\u662f\u6709\u6548\u7684\uff0c\u5982\u679c\u4ecd\u6709\u602a\u517d\u5728\u7fa4\u4f53\u653b\u51fb\u4e0b\u6ca1\u6709\u6b7b\uff0c\u6211\u4eec\u518d\u8017\u8d39\u6cd5\u529b\u7528\u5355\u4f53\u653b\u51fb\u8865\u4e2a\u5200\u3002\u7fa4\u4f53\u653b\u51fb\u7684\u6240\u6709\u4f24\u5bb3\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece 0\uff08\u4e0d\u7fa4\u4f53\u653b\u51fb\uff09\u5230 100000\uff08\u602a\u517d\u6700\u5927\u7684\u8840\u91cf\uff09\u679a\u4e3e\uff0c\u52a0\u4e0a\u679a\u4e3e\u91cf\u6240\u9700\u6700\u5c0f\u82b1\u8d39\uff0c\u518d\u4f9d\u6b21\u770b\u6bcf\u53ea\u602a\u517d\u6709\u65e0\u8840\u91cf\u5269\u4f59\uff0c\u6709\u7684\u8bdd\u653e\u4e00\u4e2a\u8be5\u5269\u4f59\u8840\u91cf\u7684\u5355\u4f53\u653b\u51fb\uff0c\u518d\u52a0\u4e0a\u5355\u4f53\u653b\u51fb\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u8fd9\u662f\u6700\u540e\u7684\u8fc7\u7a0b\u800c\u5df2\u3002\u6211\u4eec\u4e4b\u524d\u9700\u8981\u9884\u5904\u7406\u4e00\u4e0b\u3002\u5148\u7ed9\u6cd5\u672f\u5206\u7c7b\u3002\u6211\u4eec\u8bbe $f_i$ \u4e3a \u8981\u4f5c\u51fa**\u521a\u597d\uff08\u4e0d\u591a\u4e0d\u5c11\uff09** $i$ \u7684\u7fa4\u4f53\u4f24\u5bb3\u6240\u9700\u6700\u5c0f\u82b1\u8d39\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u53ef\u4ee5\u7528\u5b8c\u5168\u80cc\u5305\u6c42\u89e3\uff08\u56e0\u4e3a\u540c\u4e2a\u6cd5\u672f\u53ef\u4ee5\u65bd\u5c55\u591a\u6b21\u3002\u5c06\u7c7b\u522b\u4e3a \u7fa4\u4f53\u4f24\u5bb3 \u7684\u6cd5\u672f\u5f53\u505a\u4e00\u4e2a\u7269\u54c1\uff0c\u8bf7\u81ea\u884c\u601d\u8003\u8f6c\u79fb\u65b9\u7a0b\u548c\u4f9d\u636e\u662f\u4ec0\u4e48\uff0c\u5e94\u8be5\u4e0d\u96be\u770b\u51fa\uff09\u3002\u7c7b\u4f3c\u5730\uff0c\u8bbe $v_i$ \u4e3a \u8981\u4f5c\u51fa**\u81f3\u5c11\uff08\u53ef\u4ee5\u591a\u4e0d\u80fd\u5c11\uff09** $i$ \u7684\u5355\u4f53\u4f24\u5bb3\u6240\u9700\u6700\u5c0f\u82b1\u8d39\uff0c\u4e4b\u6240\u4ee5\u662f\u81f3\u5c11\u800c\u4e0d\u662f\u521a\u597d\uff0c\u662f\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u53ea\u5728\u7fa4\u4f53\u4f24\u5bb3\u4e0b\u4ecd\u7136\u575a\u5f3a\u6d3b\u7740\u7684 \u8840\u91cf 3 \u7684\u602a\u517d\uff0c\u4e0d\u8bba\u4f7f\u7528 3 \u7684\u5355\u4f53\u653b\u51fb\uff0c\u8fd8\u662f 4 \u554a 100000 \u554a\uff0c\u4ed6\u90fd\u5f97\u6b7b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4ecd\u65e7\u4f7f\u7528\u5b8c\u5168\u80cc\u5305\uff0c\u4e0d\u540c\u4e4b\u5904\u662f\u80cc\u5305\u505a\u5b8c\u540e\u8fd8\u8981\u9006\u5e8f\u8f6c\u79fb\u6700\u5c0f\u503c\u4e00\u904d\u3002\n\n\u4e0a\u9762\u5c31\u662f\u8fd9\u9053\u9898\u7684\u4e3b\u8981\u89e3\u6cd5\u4e86\u3002\u7136\u800c\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u80fd\u8fc7\u4e86\u5417\uff1f\u672c\u9898\u5751\u70b9\u8fd8\u591a\u7740~\u8be6\u89c1\u4e0b\u9762\u3002\n\n## \u6ce8\u610f\u4e8b\u9879\n\n- \u5751\u70b9 1\uff0c\u7edf\u8ba1\u548c\u505a\u80cc\u5305\u7684\u6570\u7ec4\u7528 long long\uff0c\u5e76\u4e14\u521d\u59cb\u5316\u4ec0\u4e48\u7684\u8981\u8bbe\u7684\u6070\u597d\uff0c\u53cd\u6b63\u6211\u662f $(long long)1 << 50$\u3002\n\n- \u5751\u70b9 2\uff0c\u6ce8\u610f\u6709\u8017\u8d39\u4e3a 0 \u7684\u6cd5\u672f\uff0c\u6b64\u65f6\u5982\u679c\u5b83\u4f24\u5bb3\u5927\u4e8e 0\uff0c\u5c31\u7528\u5b83\u4e86\u5457\uff01\u76f4\u63a5\u8f93\u51fa 0 \u9000\u51fa\u7a0b\u5e8f\u3002\n\n- \u5751\u70b9 3\uff0c\u6709\u4f24\u5bb3\u7b49\u4e8e 0 \u7684\u6cd5\u672f\uff0c\u6b64\u65f6\u9700\u8981\u8fc7\u6ee4\u3002\n\n- \u5751\u70b9 4\uff0c\u6709\u4f24\u5bb3\u5927\u4e8e 100000 \u7684\u6cd5\u672f\uff0c\u51fa\u4e8e\u602a\u517d\u7684\u8840\u91cf\u6700\u591a\u4e5f\u5c31 100000\uff0c\u5c06\u90a3\u4e2a\u6cd5\u672f\u7684\u4f24\u5bb3\u524a\u6210 100000\uff0c\u6548\u679c\u76f8\u540c\u3002\n\n- \u503c\u5f97\u6ce8\u610f\u7684\u5c31\u4e0a\u9762\u8fd9\u4e9b\u5751\u70b9\u4e86\uff0c\u5982\u679c\u8fd8\u6709\u7b2c 5 \u4e2a\u5751\u70b9\uff0c\u5e94\u8be5\u662f\u60a8\u4ee3\u7801\u7684\u95ee\u9898\u4e86\u5427\u2026\u2026\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\uff08\u6ce8\uff1a\u5df2\u7ecf\u5c0f\u5c0f\u4fee\u6539\u4e86\u4e00\u4e2a\u5730\u65b9\uff0c\u4e0d\u8981\u76f4\u63a5\u590d\u5236\u4ea4\u4e0a\u53bb\u4e86\uff09\n\n```cpp\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nint n , m , a[101] , b[101] , c[101];\nlong long res , ans = (long long)1 << 50 , f[100001] , v[100001];\nbool u[101];\nstring s;\n\nint main(){\n    cin >> n; // \u8f93\u5165\u602a\u517d\u6570\u91cf \n    for(int i = 1 ; i <= n ; i++)\n        cin >> a[i]; // \u8f93\u5165\u6bcf\u4e2a\u602a\u517d\u7684\u8840\u91cf \n    cin >> m; // \u8f93\u5165\u6cd5\u672f\u6570\u91cf\n    for(int i = 1 ; i <= m ; i++){\n        cin >> s; // \u8f93\u5165\uff08\u6ca1\u6709\u7528\u7684\uff09\u6cd5\u672f\u540d\u5b57\n        cin >> b[i]; // \u8f93\u5165\u6cd5\u672f\u82b1\u8d39\n        cin >> s; // \u8f93\u5165\u6cd5\u672f\u7c7b\u578b\n        u[i] = (bool)(s == \"A11\"); // \u5c06\u6cd5\u672f\u7c7b\u578b\u8f6c\u6362\u6210\u903b\u8f91\u503c\n        cin >> c[i]; // \u8f93\u5165\u6cd5\u672f\u4f24\u5bb3\n        if(c[i] == 0){\n            i-- , m--; // \u6cd5\u672f\u6ca1\u6709\u4f24\u5bb3\uff0c\u53ef\u4ee5\u5e9f\u6389 \n            continue;\n        }\n        if(c[i] > 100000)\n            c[i] = 100000; // \u6cd5\u672f\u4f24\u5bb3\u8fc7\u9ad8\uff0c\u524a\u6389\u4e00\u70b9 \n        if(b[i] == 0){\n            cout << 0 << endl; // \u82b1\u8d39\u4e3a 0 \u4f24\u5bb3\u4e0d\u4e3a 0\uff0c\u5f88\u5751\uff0c\u76f4\u63a5\u514d\u8d39\u7528\u5b8c \n            return 0;\n        }\n    } // \u4e0a\u9762\u7684\u8f93\u5165\u5b8c\u5168\u53ef\u4ee5\u7f29\u6210\u4e00\u884c\u554a QAQ\n    // f[i] \u8868\u793a\u7fa4\u4f53\u4f24\u5bb3\u65f6\u521a\u597d\u4f24\u5bb3 i \u8840\u6700\u5c0f\u82b1\u8d39\n    // v[i] \u8868\u793a\u5355\u4f53\u4f24\u5bb3\u65f6\u81f3\u5c11\u4f24\u5bb3 i \u8840\u6700\u5c0f\u82b1\u8d39\uff08\u4e24\u4e2a\u4e0d\u4e00\u6837\uff01\uff09 \n    for(int i = 1 ; i <= 100000 ; i++)\n       f[i] = v[i] = (long long)1 << 50; // \u521d\u59cb\u5316 \n    for(int i = 1 ; i <= m ; i++)\n        if(u[i]) // \u786e\u5b9a\u4e3a\u7fa4\u4f53\u4f24\u5bb3 \n            for(int j = c[i] ; j <= 100000 ; j++)\n                if(f[j] > f[j - c[i]] + b[i])\n                    f[j] = f[j - c[i]] + b[i]; // \u8dd1\u4e00\u904d\u5b8c\u5168\u80cc\u5305\uff08\u6cd5\u672f\u53ef\u4ee5\u653e\u591a\u6b21\uff09 \n    for(int i = 1 ; i <= m ; i++)\n        if(!u[i]) // \u786e\u5b9a\u4e3a\u5355\u4f53\u4f24\u5bb3 \n            for(int j = c[i] ; j <= 100000 ; j++)\n                if(v[j] > v[j - c[i]] + b[i])\n                    v[j] = v[j - c[i]] + b[i]; // \u518d\u8dd1\u4e00\u904d\u5b8c\u5168\u80cc\u5305\uff0c\u6ce8\u610f\u6570\u7ec4\u4e0d\u540c \n    for(int j = 99999 ; j >= 0 ; j--)\n        if(v[j] > v[j + 1])\n            v[j] = v[j + 1]; // \u9020\u6210 j+1 \u70b9\u4f24\u5bb3\uff0c\u5176\u5b9e\u4e5f\u9020\u6210\u4e86\u81f3\u5c11 j \u70b9\u4f24\u5bb3\uff0c\u53ef\u4ee5\u8f6c\u79fb \n    // \u6700\u540e\uff0c\u6211\u4eec\u679a\u4e3e\u7fa4\u4f53\u4f24\u5bb3\u6709\u591a\u5c11\uff0c\u5269\u4e0b\u6253\u4e0d\u6b7b\u5c31\u7528\u4e2a\u4f53\u4f24\u5bb3\u54af \n    for(int i = 0 ; i <= 100000 ; i++){\n        res = f[i]; // \u7fa4\u4f53\u4f24\u5bb3\u6240\u9700\u6700\u5c0f\u82b1\u8d39\n        for(int j = 1 ; j <= n ; j++)\n            if(a[j] - i > 0)\n                res += v[a[j] - i]; // \u6253\u4e0d\u6b7b\uff0c\u7528\u4e2a\u4f53\u4f24\u5bb3\uff0c\u8fd8\u8981\u591a\u7684\u82b1\u8d39\n        if(ans > res)\n            ans = res; // \u66f4\u65b0\u6700\u5c0f\u603b\u82b1\u8d39 \n    }\n    cout << ans << endl; // \u8f93\u51fa\u6700\u5c0f\u603b\u82b1\u8d39 \n    return 0;\n}\n```",
        "postTime": 1509708134,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1779 \u3010\u9b54\u9b3c\u6740\u624b_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0803\uff09\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u80cc\u5305 $dp$\n\n## \u6307\u5bfc\u601d\u60f3\uff1a\n\n\u8003\u8651\u5230\u6309\u7167\u4e0d\u540c\u987a\u5e8f\u653b\u51fb\u7ed3\u679c\u4e0d\u4f1a\u6539\u53d8\uff0c\u4e0d\u59a8\n**\u5148\u7528\u96c6\u4f53\u653b\u51fb\u5c06\u602a\u6253\u6b8b\uff0c\u518d\u7528\u4e2a\u4f53\u653b\u51fb\u8865\u5200\u3002**\n\n## \u5177\u4f53\u601d\u8def\uff1a\n\n\u8003\u8651 $dp$ \u6570\u7ec4 $f$ , $f_i$ \u8868\u793a**\u4f7f\u7528\u7fa4\u4f53\u653b\u51fb\u9020\u6210\u4f24\u5bb3\u4e3a $i$\uff08\u4e0d\u591a\u4e0d\u5c11\uff09\u8017\u8d39\u7684\u6700\u5c11\u9b54\u529b\u3002**\n\n\u8003\u8651 $dp$ \u6570\u7ec4 $g$ , $g_i$ \u8868\u793a**\u4f7f\u7528\u4e2a\u4f53\u653b\u51fb\u9020\u6210\u4f24\u5bb3\u81f3\u5c11\u4e3a $i$\uff08\u53ef\u591a\u4e0d\u53ef\u5c11\uff09\u8017\u8d39\u7684\u6700\u5c11\u9b54\u529b\u3002**\uff08\u8fd9\u4e24\u4e2a\u6570\u7ec4\u5747\u7531\u5b8c\u5168\u80cc\u5305\u6c42\u89e3\uff09\n\n\u5c06**\u7fa4\u4f53\u653b\u51fb**\u7684\u4f24\u5bb3\u4ece $1$ ~ $200000$ \u4f9d\u6b21\u679a\u4e3e\uff0c\u52a0\u4e0a**\u6240\u9700\u6700\u5c0f\u82b1\u8d39**\uff0c\u518d\u4f9d\u6b21\u770b\u6bcf\u53ea\u602a\u517d\u6709\u65e0\u8840\u91cf\u5269\u4f59\uff0c\u82e5\u6709\uff0c\u5219\u91ca\u653e\u4e00\u4e2a\u9020\u6210\u540c\u7b49\u8840\u91cf\u4f24\u5bb3\u7684**\u5355\u4f53\u653b\u51fb**\uff0c\u518d\u52a0\u4e0a\u8be5\u5355\u4f53\u653b\u51fb**\u6700\u5c0f\u82b1\u8d39** \u3002\n\n\u4ee5\u4e0a\uff0c\u4e3a\u6b64\u9898\u7684\u5177\u4f53\u601d\u8def\u3002\n\n## \u6ce8\u610f\u4e8b\u9879\uff1a\n\n- \u5751\u70b91\uff0c\u82e5\u6709\u4e24\u4e2a\u4f24\u5bb3\u4e3a $99999$ \u7684\u7fa4\u4f53\u653b\u51fb\uff0c \u76f8\u52a0\u540e\u4f24\u5bb3\u4f1a\u5927\u4e8e $100000$ , \u8fd9\u79cd\u60c5\u51b5\u662f\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u7684\uff0c\u6545\u6570\u7ec4\u5927\u5c0f\u8981\u8bbe\u5230 $200005$ \u3002\n\n- \u5751\u70b92\uff0c\u4f24\u5bb3\u975e\u96f6\u4e14\u8017\u8d39\u9b54\u529b\u4e3a\u96f6\uff0c\u76f4\u63a5\u8f93\u51fa $0$ , \u9000\u51fa\u7a0b\u5e8f\u3002\n\n- \u5751\u70b93\uff0c $g_i$ \u8868\u793a\u7684\u662f\u4f24\u5bb3**\u81f3\u5c11**\u4e3a $i$ \u65f6\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u6545\u540e\u9762\u8fd8\u8981\u8fdb\u884c\u4e00\u6b21**\u5012\u5e8f**\u8f6c\u79fb\u6700\u5c0f\u503c\u4e00\u904d\u3002\n\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, a[105], b[105], c[105];\nlong long res, ans = (long long)1 << 50, f[2000005], g[2000005];\nbool u[105];// \u7fa4\u4f53\u653b\u51fb\u8fd8\u662f\u4e2a\u4f53\u653b\u51fb \nstring s, t;\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]);// \u602a\u7684\u8840\u91cf \n\tscanf(\"%d\", &m);\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tcin >> s >> b[i] >> t >> c[i];\n\t\tif(t == \"All\")// \u6807\u8bb0\u4e3a\u7fa4\u4f53\u653b\u51fb \n\t\t\tu[i] = 1;\n\t\tif(!b[i] && c[i]) // \u514d\u8d39\u7684\u5348\u9910 \n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tc[i] = min(c[i], 200000);// \u7a0d\u5fae\u524a\u51cf\u4f24\u5bb3 \n\t}\n\tfor(int i = 1; i <= 200000; i++)\n\t\tf[i] = g[i] = (long long)1 << 50;// \u521d\u59cb\u5316 \n\tfor(int i = 1; i <= m; i++)// \u7fa4\u4f53\u653b\u51fb \n\t{\n\t\tif(u[i])\n\t\t{\n\t\t\tfor(int j = c[i]; j <= 200000; j++)\n\t\t\t\tf[j] = min(f[j], f[j - c[i]] + b[i]);\n\t\t}\n\t}\n\tfor(int i = 1; i <= m; i++)// \u4e2a\u4f53\u653b\u51fb \n\t{\n\t\tif(!u[i])\n\t\t{\n\t\t\tfor(int j = c[i]; j <= 200000; j++)\n\t\t\t{\n\t\t\t\tg[j] = min(g[j], g[j - c[i]] + b[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 199999; i >= 0; i--)// \u9006\u5e8f\u8f6c\u79fb \n\t{\n\t\tif(g[i] > g[i + 1])\n\t\t\tg[i] = g[i + 1];\n\t}\n\tfor(int i = 0; i <= 200000; i++)// \u679a\u4e3e\u7fa4\u4f53\u653b\u51fb\u4f24\u5bb3 \n\t{\n\t\tres = f[i];\n\t\tfor(int j = 1; j <= n; j++)\n\t\t{\n\t\t\tif(a[j] - i > 0)// \u4e2a\u4f53\u653b\u51fb\u8865\u5200 \n\t\t\t\tres += g[a[j] - i];\n\t\t}\n\t\tans = min(ans, res);\n\t}\n\tprintf(\"%lld\\n\", ans);// \u6109\u5feb\u8f93\u51fa \n    return 0;\n}\n// hjz AK IOI \n```\n",
        "postTime": 1647070287,
        "uid": 333785,
        "name": "xqh07",
        "ccfLevel": 0,
        "title": "P1779\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u505a\u6cd5\uff1a\n> \u5148\u7528\u56e2\u4f53\u653b\u51fb\u628a\u602a\u6253\u6b8b\uff0c\u518d\u7528\u5355\u4f53\u653b\u51fb\u8865\u5200\u3002\n\n\u8fa3\u4e48\uff0c\u6211\u4eec\u5c31\u5f00\u4e24\u4e2a\u6570\u7ec4\uff0c$f$\u548c$g$\uff0c$f_i$\u8868\u793a\u4f7f\u7528\u56e2\u4f53\u653b\u51fb\u6253$i$\u6ef4\u8840\u81f3\u5c11\u7528\u7684$mp$\uff0c$g_i$\u540c\u6837\uff0c\u4e0d\u8fc7\u662f\u4f7f\u7528\u5355\u4f53\u653b\u51fb\u3002\n\n\u6700\u540e\u679a\u4e3e\u56e2\u4f53\u653b\u51fb\u9020\u6210\u7684\u4f24\u5bb3\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nstruct note\n{\n\tint mp,dmg;\n\tbool tar;\n} skill[110];\nint n,m,hp[110],f[100010],g[100010],mini = 0x3f3f3f3f,tmp,maxi;\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tmemset(f,-1,sizeof f);\n\tmemset(g,-1,sizeof g);\n\tf[0] = 0;\n\tcin >> n;\n\tfor(register int i = 1;i <= n;++i)\n\t{\n\t\tcin >> hp[i];\n\t\tmaxi = max(maxi,hp[i]);\n\t}\n\tcin >> m;\n\tfor(register int i = 1;i <= m;++i)\n\t{\n\t\tstring tar,name;\n\t\tcin >> name >> skill[i].mp >> tar >> skill[i].dmg;\n\t\tskill[i].tar = (tar == \"All\");\n\t\tif(skill[i].mp == 0)\n\t\t{\n\t\t\tcout << 0;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(register int i = 1;i <= maxi;++i)\n\t\tfor(register int j = 1;j <= m;++j)\n\t\t\tif(skill[j].tar)\n\t\t\t\tif(i >= skill[j].dmg && f[i - skill[j].dmg] != -1)\n\t\t\t\t{\n\t\t\t\t\tif(f[i] == -1)\n\t\t\t\t\t\tf[i] = f[i - skill[j].dmg] + skill[j].mp;\n\t\t\t\t\telse\n\t\t\t\t\t\tf[i] = min(f[i],f[i - skill[j].dmg] + skill[j].mp);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(f[i] == -1)\n\t\t\t\t\t\tf[i] = skill[j].mp;\n\t\t\t\t\telse\n\t\t\t\t\t\tf[i] = min(f[i],skill[j].mp);\n\t\t\t\t}\n\tfor(register int i = 1;i <= maxi;++i)\n\t\tfor(register int j = 1;j <= m;++j)\n\t\t\tif(!skill[j].tar)\n\t\t\t\tif(i >= skill[j].dmg)\n\t\t\t\t{\n\t\t\t\t\tif(g[i] == -1)\n\t\t\t\t\t\tg[i] = g[i - skill[j].dmg] + skill[j].mp;\n\t\t\t\t\telse\n\t\t\t\t\t\tg[i] = min(g[i],g[i - skill[j].dmg] + skill[j].mp);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(g[i] == -1)\n\t\t\t\t\t\tg[i] = skill[j].mp;\n\t\t\t\t\telse\n\t\t\t\t\t\tg[i] = min(g[i],skill[j].mp);\n\t\t\t\t}\n\tfor(register int i = 1;i <= maxi;++i)\n\t{\n\t\tif(f[i] == -1)\n\t\t\tcontinue;\n\t\ttmp = f[i];\n\t\tfor(register int j = 1;j <= n;++j)\n\t\t\tif(hp[j] > i && g[hp[j] - i] != -1)\n\t\t\t\ttmp += g[hp[j] - i];\n\t\tmini = min(mini,tmp);\n\t}\n\tcout << mini;\n}\n```",
        "postTime": 1530283011,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1779 \u3010\u9b54\u9b3c\u6740\u624b_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0803\uff09\u3011"
    },
    {
        "content": "## PART 0\uff1a\u5410\u69fd\n\u8001\u89c4\u77e9\uff0c\u5f00\u5934\u5148\u5410\u69fd\u4e00\u4e0b\u8fd9\u4e2a\u9898\u76ee\u3002\u5751\u70b9\u592a\u591a\u4e86\uff0c\u800c\u4e14\u7b2c\u4e09\u4e2a\u70b9\u8fd8\u5f97\u5f00\u65e0\u7b26\u53f7\u957f\u6574\u578b\u624d\u80fd\u8fc7\uff08\u4e5f\u6709\u53ef\u80fd\u662f\u6211\u5199\u7684\u4e0d\u592a\u4f18\u79c0\uff09\u3002\n\n\u63a5\u4e0b\u6765\u653e\u6b63\u7247\n\n## PART 1\uff1a\u89e3\u9898\u601d\u8def\n~~\u4ece\u9898\u76ee\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u5361\u724c\u7b56\u7565\u7c7b\u7684\u56de\u5408\u6218\u6597\u6e38\u620f\uff0c\u90a3\u4e48\u6839\u636e\u6211\u4eec\u73a9\u6e38\u620f\u7684\u7ecf\u9a8c\uff0c\u80af\u5b9a\u662f\u5148\u7528\u7fa4\u4f53\u653b\u51fb\uff0c\u6700\u540e\u518d\u8865\u5200\u3002~~\uff08\u7528\u529b\u5212\u6389\uff09\n\n\u5f88\u663e\u7136\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u9b54\u6cd5\u5f53\u505a\u7269\u54c1\uff0c\u602a\u7269\u7684\u751f\u547d\u503c\u5f53\u505a\u80cc\u5305\uff0c\u5176\u4e2d\u7fa4\u4f53\u653b\u51fb\u662f\u5f80\u6240\u6709\u80cc\u5305\u4e2d\u52a0\u5165\u4e00\u4e2a\u7269\u54c1\uff0c\u800c\u5355\u4f53\u653b\u51fb\u53ea\u5f80\u4e00\u4e2a\u80cc\u5305\u4e2d\u52a0\u5165\u7269\u54c1\uff0c\u8981\u6c42\u5c06\u80cc\u5305\u586b\u6ee1\u3002\u5e76\u4e14\uff0c\u653e\u5165\u7269\u54c1\u7684\u987a\u5e8f\u4e0e\u6700\u7ec8\u7684\u6d88\u8017\u6ca1\u6709\u5173\u7cfb\uff0c\u56e0\u6b64\uff0c\u6211\u4e48\u53ef\u4ee5\u5148\u5904\u7406\u7fa4\u4f53\u653b\u51fb\uff0c\u6700\u540e\u518d\u4e00\u4e2a\u4e2a\u5f97\u7269\u54c1\u653e\u5165\u5c06\u80cc\u5305\u586b\u6ee1\u3002\u4f46\u662f\uff0c\u8fd9\u4e0e\u80cc\u5305\u6709\u4e0d\u540c\uff0c\u6211\u4eec\u6700\u7ec8\u9020\u6210\u7684\u4f24\u5bb3\u662f\u53ef\u4ee5\u5927\u4e8e\u602a\u7269\u7684\u603b PH \u503c\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5f00\u4e24\u4e2a\u6570\u7ec4 $group$ \u548c $monomer$ \u5206\u522b\u4ee3\u8868\u7fa4\u4f53\u653b\u51fb\u548c\u5355\u4f53\u653b\u51fb\u7684\u6700\u5c0f\u82b1\u8d39\u3002$group_i$ \u8868\u793a **\u6070\u597d\u9020\u6210 $i$ \u7684\u7fa4\u4f53\u4f24\u5bb3** \u65f6\u6700\u5c0f\u7684\u82b1\u8d39\uff0c\u800c $monomer_i$ \u8868\u793a **\u81f3\u5c11\u9020\u6210 $i$ \u4f24\u5bb3** \u65f6\u6700\u5c0f\u7684\u82b1\u8d39\u3002\n\n\u6ce8\u610f\u5230\u533a\u522b\u4e86\u5417\uff1f\u7531\u4e8e\u5355\u4f53\u4f24\u5bb3\u53ef\u4ee5\u8d85\u8fc7\u5f53\u524d\u7684\u653b\u51fb\u5bf9\u8c61\u7684\u751f\u547d\u503c\uff0c\u56e0\u6b64\u662f **\u81f3\u5c11**\u9020\u6210 $i$ \u7684\u4f24\u5bb3\uff0c\u800c\u7fa4\u4f53\u653b\u51fb\u5219\u9700\u8981\u6c42\u51c6\u786e\u503c\uff0c\u56e0\u6b64\u662f **\u6070\u597d** \u9020\u6210 $i$ \u7684\u4f24\u5bb3\u3002\n\n\u7406\u89e3\u4e86\u8fd9\u4e2a\uff0c\u6211\u4eec\u5c31\u5f88\u5bb9\u6613\u5f97\u5230\u9012\u63a8\u516c\u5f0f\u4e86\uff1a\n$$group_i=\\min(group_i,group_{(i-danage_j)}+mp_i)$$\n$$monome_i=\\min(monome_i,monome_{(i-danage_j)}+mp_i,monome_{(i+1)})$$\n\n\u5176\u4e2d $danage$ \u548c $mp$ \u7684\u542b\u4e49\u5982\u9898\uff0c\u5206\u522b\u662f\u9b54\u6cd5\u7684\u653b\u51fb\u529b\u548c\u6d88\u8017\u7684\u9b54\u529b\u3002\n\n\u5230\u4e86\u8fd9\u91cc\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u4e5f\u5c31\u8fd1\u5728\u773c\u524d\u4e86\uff0c\u53ea\u9700\u8981\u4ece $1 \\sim 200000$ \u679a\u4e3e $group_i$\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u602a\u7269\uff0c\u6c42\u51fa\u8865\u5200\u8fd8\u9700\u8981\u591a\u5c11\u9b54\u529b\uff0c\u76f8\u52a0\u53d6\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\u5173\u4e8e\u4e3a\u4ec0\u4e48\u679a\u4e3e\u5230 $200000$\uff0c\u540e\u9762\u4f1a\u8bb2\u3002\n\n\u7136\u800c\uff0c\u4f60\u4ee5\u4e3a\u4f60\u8fd9\u5c31\u53ef\u4ee5\u8bf4 I AK MONSTER \u4e86\u5417\uff1f\u4e0d\u4e0d\u4e0d\uff0c\u4f60\u8fd8\u5dee\u7684\u8fdc\u4e86\uff0c\u63a5\u7740\u5f80\u4e0b\u770b\u3002\n## PART 2\uff1a\u5751\u70b9\n\u8fd9\u9053\u9898\u76ee\u6700\u6bd2\u7624\u7684\u5c31\u662f\u5b83\u7684\u5751\u70b9\u6781\u591a\uff0c\u800c\u4e14\u6781\u5176\u9690\u853d\uff0c\u5f88\u96be\u4e0d\u8e29\u5751\u3001\n\n#### \u5751\u70b91\uff1a\u6709 0 \u6d88\u8017\u4f46\u662f\u6709\u653b\u51fb\u529b\u7684\u9b54\u6cd5\n\u50cf\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u65e0\u8111\u4f7f\u7528\u8fd9\u79cd\u9b54\u6cd5\uff0c\u4e00\u76f4\u5230\u628a\u602a AK\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5c31\u5224\u65ad\u597d\uff0c\u76f4\u63a5\u8f93\u51fa $0$ \u5373\u53ef\u3002\uff08\u514d\u8d39\u7684\u5348\u9910.jpg\uff09\n#### \u5751\u70b92\uff1a\u6709 0 \u653b\u51fb\u529b\u7684\u9b54\u6cd5\n\u4e0a\u9762\u63d0\u5230\u4e86\u514d\u8d39\u7684\u5348\u9910\uff0c\u8fd9\u91cc\u5c31\u662f\u505a\u6148\u5584\u7684\u60c5\u51b5\u4e86\uff0c\u6d88\u8017\u9b54\u529b\u4e0d\u9020\u6210\u4efb\u4f55\u6548\u679c\uff0c\u76f4\u63a5\u7565\u8fc7\u8fd9\u79cd\u9b54\u6cd5\u4e0d\u5b58\u5373\u53ef\u3002\uff08\u5bf9\u65b9\u514d\u75ab\u4e86\u4f60\u7684\u653b\u51fb\u5e76\u9119\u89c6\u4e86\u4f60\u4e00\u4e0b\uff09\n#### \u5751\u70b93\uff1a3 \u53f7\u6d4b\u8bd5\u70b9\u7b54\u6848\u8981\u5f00\u5230 unsigned long long\n\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5982\u9898\u3002\n#### \u5751\u70b94\uff1a\u6709\u653b\u51fb\u529b\u6781\u9ad8\u7684\u9b54\u6cd5\uff08$danage_i \\gt 100000$\uff09\n\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\u602a\u7269\u751f\u547d\u503c\u6700\u591a\u4e3a $100000$\uff0c\u56e0\u6b64\uff0c\u8fd9\u79cd\u653b\u51fb\u529b\u9ad8\u4e8e $100000$ \u7684\u6838\u5f39\u6d41\u6cd5\u672f\u53ef\u4ee5\u76f4\u63a5\u770b\u6210\u653b\u51fb\u529b\u4e3a $100000$\u3002\u4f46\u662f\u7531\u4e8e\u6700\u7ec8\u53ef\u80fd\u5b58\u5728\u4e24\u79cd\u6cd5\u672f\u7684\u4f24\u5bb3\u76f8\u52a0\u53ef\u80fd\u5927\u4e8e $100000$\uff08\u6bd4\u5982 $99999+99999$\uff09\uff0c\u8fd9\u6837\u6700\u5927\u53ef\u4ee5\u5230 $200000$ \u5de6\u53f3\uff0c\u5373 $100000 \\sim 200000$ \u8303\u56f4\u5185\uff0c\u7684\u6cd5\u672f\u4f24\u5bb3\u4e5f\u4f1a\u5bf9\u524d\u9762\u7684\u7ed3\u679c\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u80cc\u5305\u8981\u5f00\u5230 $200000$\u3002\u524d\u9762\u7684\u679a\u4e3e\u8303\u56f4\u4e5f\u662f\u5982\u6b64\u3002\n\n## PART 3\uff1aAC \u4ee3\u7801\n\u505a\u5230\u8fd9\u91cc\uff0c\u4f60\u53ef\u4ee5\u771f\u6b63\u5730\u8bf4 I AK MONSTER \u4e86\uff0c\u4e0b\u9762\u662f AC \u4ee3\u7801\uff0c\u4e0d\u61c2\u7684\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\n```cpp\n#include<bits/stdc++.h>\n#define max_att 200000\n#define INF 1e18\nusing namespace std;\nstruct magic{\n    string name;\n    string type;\n    int damage,mp;\n    bool isgt;//\u5224\u65ad\u662f\u4e0d\u662f\u7fa4\u4f53\u653b\u51fb\u9b54\u6cd5\n};\n\nmagic maho[110];//\u5b58\u9b54\u6cd5\u7684\u5404\u79cd\u53c2\u6570\nint n,m;\nunsigned long long ans=INF;\nint monster[110];\nlong long mon[max_att+10],gro[max_att+10];\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&monster[i]);\n    }\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++){\n        cin>>maho[i].name>>maho[i].mp>>maho[i].type>>maho[i].damage;\n        maho[i].isgt=(bool)(maho[i].type==\"All\");\n        if(maho[i].damage==0){\n            i--;m--;//\u7565\u8fc7\u6148\u5584\u9b54\u6cd5\n        }else if(maho[i].mp==0){\n            //\u514d\u8d39\u7684\u5348\u9910\n            printf(\"0\\n\");\n            exit(0);\n        }\n        //\u5904\u7406\u6838\u7206\u6d41\u9b54\u6cd5\n        maho[i].damage=min(maho[i].damage,max_att);\n    }\n    //\u4e24\u6b21\u80cc\u5305\u6c42\u51fa\u7fa4\u4f53\u548c\u5355\u4f53\u7684\u6700\u5c0f\u82b1\u8d39\n    memset(mon,0x7f,sizeof(mon));\n    memset(gro,0x7f,sizeof(gro));\n    mon[0]=gro[0]=0;\n    for(int i=1;i<=m;i++){\n        if(maho[i].isgt){\n            for(int j=maho[i].damage;j<=max_att;j++){\n                gro[j]=min(gro[j],gro[j-maho[i].damage]+maho[i].mp);\n            }\n        }\n    }\n    for(int i=1;i<=m;i++){\n        if(!maho[i].isgt){\n            for(int j=maho[i].damage;j<=max_att;j++){\n                mon[j]=min(mon[j],mon[j-maho[i].damage]+maho[i].mp);\n            }\n        }\n    }\n    //\u6ce8\u610f\u8fd9\u91cc\u8981\u9006\u5e8f\u5728\u904d\u5386\u4e00\u6b21\uff0c\u56e0\u4e3amon\u6570\u7ec4\u662f\u6c42\u81f3\u5c11\u9020\u6210i\u4f24\u5bb3\u65f6\u7684\u6700\u5c0f\u82b1\u8d39\n    for(int i=max_att-1;i>=0;i--){\n        mon[i]=min(mon[i],mon[i+1]);\n    }\n    //\u5f00\u59cb\u5237\u602a\n    for(int i=0;i<=max_att;i++){\n        //\u7fa4\u653b\n        unsigned long long res=gro[i];\n        for(int j=1;j<=n;j++){\n            //\u8865\u5200\n            if(monster[j]-i>0){\n                res+=mon[monster[j]-i];\n            }\n        }\n        ans=min(ans,res);\n    }\n    printf(\"%llu\\n\",ans);\n    return 0;\n}\n```\n## \u5e7f\u544a\n\u63a8\u9500 [\u6211\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/Michaela-chr/)",
        "postTime": 1629637219,
        "uid": 547908,
        "name": "Hoshino_kaede",
        "ccfLevel": 7,
        "title": "P1779 \u9b54\u9b3c\u6740\u624b \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\uff0c\u5f88\u660e\u663e\u7684\u4e00\u70b9\u5c31\u662f\uff0c\u4ea4\u6362\u4e24\u6b21\u653b\u51fb\u7684\u987a\u5e8f\uff0c\u7ed3\u679c\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u56e0\u4e3a $a-b-c=a-c-b$\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u505a\u5b8c\u7fa4\u4f53\u653b\u51fb\uff0c\u518d\u505a\u5355\u4e2a\u7684\u653b\u51fb\u3002   \n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u7fa4\u4f53/\u5355\u4e2a\u653b\u51fb\u9020\u6210 $i$ \u70b9\u6216 $i$ \u70b9\u4ee5\u4e0a\u7684\u653b\u51fb\u6700\u5c11\u9700\u8981\u7684\u9b54\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u80cc\u5305\u6765\u6c42\u3002\u8fd9\u91cc\uff0c\u7531\u4e8e\u540e\u9762\u8981\u8fdb\u884c\u5355\u4e2a\u653b\u51fb\uff0c\u6240\u4ee5\u7fa4\u4f53\u653b\u51fb\u6c42\u7684\u662f\u51c6\u786e\u7684\u9020\u6210 $i$ \u70b9\u653b\u51fb\u9700\u8981\u7684\u9b54\u529b\uff0c\u800c\u5bf9\u4e8e\u5355\u4e2a\u653b\u51fb\uff0c\u6700\u540e\u9020\u6210 $i$ \u70b9\u6216 $i$ \u70b9\u4ee5\u4e0a\u7684\u653b\u51fb\uff0c\u90fd\u80fd\u6253\u8d25\u602a\u7269\uff0c\u6240\u4ee5\u8981\u6c42\u7684\u662f\u9020\u6210 $i$ \u70b9\u6216 $i$ \u70b9\u4ee5\u4e0a\u7684\u653b\u51fb\u9700\u8981\u7684\u9b54\u529b\u3002  \n\u7136\u540e\uff0c\u6c42\u5b8c\u8fd9\u4e9b\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u7fa4\u4f53\u9020\u6210\u4e86\u591a\u5c11\u4f24\u5bb3\uff0c\u7136\u540e\u518d\u6c42\u7fa4\u4f53\u4f24\u5bb3\u540e\u6253\u6b7b\u6bcf\u4e2a\u602a\u7269\u6240\u9700\u7684\u5355\u4f53\u4f24\u5bb3\u7684\u9b54\u529b\uff0c\u6700\u540e\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002  \n\u8bb0\u5f97\u53d6\u6700\u5c0f\u503c\u3002\n\n\u53e6\u5916\uff0c\u7fa4\u4f53\u4f24\u5bb3\u9020\u6210\u7684\u4f24\u5bb3\u4e5f\u53ef\u80fd\u662f0\u3002\n\n\u53e6\u5916\u8fd8\u6709\u4e00\u4e9b\u5751\u70b9\uff1a\n\n- \u653b\u51fb\u529b\u4e3a $0$ \u7684\u9b54\u6cd5\u53ef\u4ee5\u76f4\u63a5\u7701\u7565\u3002\n- \u5982\u679c\u6709\u6d88\u8017\u4e3a $0$ \u653b\u51fb\u529b\u4e0d\u4e3a $0$ \u7684\u9b54\u6cd5\uff0c\u76f4\u63a5\u8f93\u51fa $0$\u3002\n- \u653b\u51fb\u529b\u5927\u4e8e $100000$ \uff08\u6700\u5927\u7684\u602a\u517d\u8840\u91cf\uff09\u7684\u9b54\u6cd5\u8981\u524a\u6210 $100000$\u3002\n- \u7531\u4e8e\u5927\u4e8e $100000$ \u7684\u4f24\u5bb3\u9700\u8981\u7684\u9b54\u529b\u7684\u7b54\u6848\u53ef\u80fd\u4f1a\u5f71\u54cd\u524d\u9762\u7684\uff0c\u6240\u4ee5\u80cc\u5305\u8981\u505a\u5230 $200000$\u3002\n\n\u7136\u540e\uff0c\u5c31\u53ef\u4ee5\u5feb\u4e50\u5730\u6572\u4ee3\u7801\u4e86\u3002\n```cpp\n#include<cstdio>\n#include<string>\n#include<iostream>\nusing namespace std;\nint n,m,hp[105],mp[105],damage[105];\nbool target[105];\nlong long ans=(long long)1<<50,all[200005],single[200005];\n//ans\u662f\u7b54\u6848\uff0call\u662f\u7fa4\u4f53\u4f24\u5bb3\u9700\u8981\u7684\u9b54\u529b\uff0csingle\u662f\u5355\u4e2a\u4f24\u5bb3\u9700\u8981\u7684\u9b54\u529b\uff0c\u5176\u4ed6\u5982\u9898\u76ee\u6240\u8ff0\u3002\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&hp[i]);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tstring s;\n\t\tcin>>s;\n\t\tscanf(\"%d\",&mp[i]);\n\t\tcin>>s;\n\t\ttarget[i]=(bool)(s==\"All\");\n\t\tscanf(\"%d\",&damage[i]);\n\t\tif(damage[i]>200000) damage[i]=200000;\n\t\tif(mp[i]==0&&damage[i]>0)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(damage[i]==0) i--,m--;\n\t}\n\tfor(int i=1;i<=200000;i++) all[i]=single[i]=(long long)1<<50;\n\tfor(int i=1;i<=m;i++)//\u4e24\u4e2a\u80cc\u5305\n\t\tif(target[i])\n\t\t{\n\t\t\tfor(int j=damage[i];j<=200000;j++)\n\t\t\t\tif(all[j]>all[j-damage[i]]+mp[i])\n\t\t\t\t\tall[j]=all[j-damage[i]]+mp[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=damage[i];j<=200000;j++)\n\t\t\t\tif(single[j]>single[j-damage[i]]+mp[i])\n\t\t\t\t\tsingle[j]=single[j-damage[i]]+mp[i];\n\t\t}\n\tfor(int i=199999;i>=0;i--)\n\t\tif(single[i]>single[i+1]) single[i]=single[i+1];\n\tfor(int i=1;i<=200000;i++)//\u679a\u4e3e\n\t{\n\t\tlong long res=all[i];\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(hp[j]>i) res+=single[hp[j]-i];\n\t\tif(res<ans) ans=res;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1598875137,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1779 \u3010\u9b54\u9b3c\u6740\u624b\u3011"
    }
]