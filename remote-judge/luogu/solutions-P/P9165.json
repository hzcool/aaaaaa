[
    {
        "content": "## Tag\n\n\u62c9\u683c\u6717\u65e5\u63d2\u503c\uff0c\u901a\u4fe1\u3002\n\n## Preface\n\n\u901a\u4fe1\u9898\u597d\u73a9\u3002\n\n## Solution\n\n\u9996\u5148\u53d1\u73b0\u5982\u679c\u72ec\u7acb\u5730\u5b58\u6bcf\u4e00\u4e2a\u6570\u636e\u4f1a\u5bfc\u81f4\u53ef\u80fd\u4f1a\u6709\u6574\u4e2a\u6570\u636e\u635f\u5931\u7684\u7ed3\u679c\u3002\u7b14\u8005\u53d1\u73b0\uff0c\u5f53\u6bcf\u4e2a\u503c\u5b58 24 \u4e2a\u65f6\uff0c\u4e5f\u7ecf\u5e38\u4f1a\u6709\u65e0\u6cd5\u5f97\u51fa\u7ed3\u679c\u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u8003\u8651\u628a\u6240\u6709\u6570\u636e\u538b\u5728\u4e00\u8d77\uff0c\u9996\u5148\u60f3\u5230\u7684\u662f\u62c9\u683c\u6717\u65e5\u63d2\u503c\u3002\u628a\u6570\u636e\u7528\u591a\u9879\u5f0f\u8868\u8fbe\uff0c\u6307\u5b9a\u82e5\u5e72\u4e2a\u70b9\u503c\uff0c\u5e76\u4e14\u628a\u70b9\u503c\u590d\u5236\u82e5\u5e72\u4efd\u53d1\u51fa\u53bb\uff0c\u53ea\u6709\u5f53\u5bf9\u5e94\u533a\u95f4\u5b58\u5728 $\\ge2$ \u7684\u65f6\u5019\u53d6\u8be5\u70b9\u503c\uff0c\u5426\u5219\u76f4\u63a5\u653e\u5f03\u3002\u53d1\u73b0\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u5bb9\u8bb8\u4e00\u5b9a\u7684\u6570\u636e\u5b8c\u5168\u635f\u5931\uff0c\u53ea\u9700\u8981\u6709 $100$ \u7ec4\u70b9\u503c\u6210\u529f\u53d1\u9001\u5373\u53ef\u6210\u529f\u89e3\u7801\u3002\u90a3\u4e48\u53d1 $150$ \u7ec4\u70b9\u503c\uff0c\u6bcf\u7ec4 $x$ \u503c\u4e3a\u4ece $0$ \u53d6\u5230 $149$\uff0c$y$ \u6839\u636e\u591a\u9879\u5f0f\u8ba1\u7b97\u3002$x$ \u4e0d\u9700\u8981\u53d1\u9001\uff0c\u7528\u4e0b\u6807\u5b58\u5373\u53ef\u3002$y$ \u5728\u6570\u7ec4\u4e2d\u653e $5$ \u4efd\uff0c\u53ea\u6709\u5728\u5b58\u5728 $\\ge2$ \u7ec4\u540c\u4e00\u4e2a $y$ \u65f6\u624d\u53d6\u6539\u7ec4\u70b9\u503c\uff0c\u5219\u53d1\u9001\u6570\u7ec4\u957f\u5ea6\u6070\u597d\u4e3a $750$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u70b9\u503c\u7ec4\u6570 $\\ge100$ \u5c31\u53ef\u4ee5\u901a\u8fc7\u3002\u5728\u63d0\u4ea4\u65f6\uff0c\u7b14\u8005\u53ea\u63d0\u4ea4\u4e86\u4e00\u53d1\u5c31\u6210\u529f\u901a\u8fc7\u3002$150$ \u7ec4\u4e2d\uff0c\u6bcf\u7ec4\u5931\u6548\u7684\u6982\u7387\u4e3a $\\frac{3}{16}$\uff0c\u6709 $\\ge50$ \u7ec4\u70b9\u503c\u5931\u6548\u7684\u6982\u7387\u662f\u6781\u5c0f\u7684\u3002\n\n\u62c9\u683c\u6717\u65e5\u63d2\u503c\u53ef\u4ee5\u505a\u5230 $O(n^2\\log m)$\uff0c\u6b64\u9898\u4e2d $m=998244353$\uff0c\u8db3\u591f\u901a\u8fc7\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <map>\n\nconst int mod = 0x3b800001;\nlong long qpow(long long p, long long q = mod - 2) {\n  if (q == 0) return 1;\n  long long h = qpow(p, q >> 1);\n  h = h * h % mod;\n  if ((q & 1) == 1) h = h * p % mod;\n  return h;\n}\nstd::vector<int> div(std::vector<int> P, long long Q) {\n  // P / (x - Q)\n  std::vector<int> r;\n  for (int i = P.size() - 1; i > 0; --i) {\n    r.push_back(P[i]);\n    P[i - 1] = (P[i - 1] + P[i] * Q) % mod;\n  }\n  std::reverse(r.begin(), r.end());\n  return r;\n}\nstd::vector<int> mul(std::vector<int> P, long long Q) {\n  // P * (x + Q);\n  std::vector<int> r{0};\n  for (int i = 0; i < int(P.size()); ++i) {\n    r.push_back(P[i]);\n    P[i] = P[i] * Q % mod;\n  }\n  for (int i = 0; i < int(P.size()); ++i) {\n    r[i] = (r[i] + P[i]) % mod;\n  }\n  return r;\n}\nstd::vector<int> Lagrange(std::vector<std::pair<int, int>> xy) {\n  int n = xy.size();\n  std::vector<int> prod{1};\n  for (int i = 0; i < n; ++i) {\n    prod = mul(prod, mod - xy[i].first);\n  }\n  std::vector<int> r(n);\n  for (int i = 0; i < n; ++i) {\n    long long k = 1;\n    for (int j = 0; j < n; ++j) {\n      if (j != i) k = k * (xy[i].first - xy[j].first + mod) % mod;\n    }\n    k = qpow(k) * xy[i].second % mod;\n    auto c = div(prod, xy[i].first);\n    for (int j = 0; j < n; ++j) {\n      r[j] = (r[j] + k * c[j]) % mod;\n    }\n  }\n  return r;\n}\nconst int tms = 5, ss = 150;\nstd::vector<int> Encode(std::vector<int> vec) {\n  auto f = [&](int x) {\n    long long p = 1;\n    int ans = 0;\n    for (int i = 0; i < int(vec.size()); ++i) {\n      ans = (ans + p * vec[i]) % mod;\n      p = p * x % mod;\n    }\n    return ans;\n  };\n  std::vector<int> r;\n  for (int i = 0; i < ss; ++i) {\n    int q = f(i);\n    for (int j = 0; j < tms; ++j) r.push_back(q);\n  }\n  return r;\n}\nstd::vector<int> Decode(std::vector<int> vec) {\n  std::vector<std::pair<int, int>> xy;\n  for (int i = 0; i < int(vec.size()); i += tms) {\n    std::map<int, int> S;\n    for (int j = i; j < i + tms; ++j) {\n      ++S[vec[j]];\n    }\n    for (auto [j, k] : S) {\n      if (k >= 2) {\n        xy.push_back({i / tms, j});\n      }\n    }\n  }\n  xy.resize(100);\n  return Lagrange(xy);\n}\n```",
        "postTime": 1679928950,
        "uid": 306090,
        "name": "0x3b800001",
        "ccfLevel": 5,
        "title": "P9165 \u300cINOH\u300dRound 1 - \u610f\u5916 \u9898\u89e3"
    },
    {
        "content": "\u901a\u4fe1\u9898\u597d\u73a9\u3002\n\n\u57fa\u672c\u7684\u60f3\u6cd5\u662f\u6bcf\u4e2a\u6570\u590d\u5236 $7$ \u6b21\u4f20\u8fdb\u53bb\u3002\u4f46\u662f\u8fd9\u6837\u5b50\u4e00\u4e2a\u6570\u5931\u8d25\u7684\u6982\u7387\u5df2\u7ecf\u5927\u4e8e\u8fbe\u5230 $2^{-7}$\uff0c\u6211\u4eec\u6709 $10^6$ \u4e2a\u6570\u8fd9\u4e2a\u6982\u7387\u663e\u7136\u63a5\u53d7\u4e0d\u4e86\u3002\n\n\u6211\u4eec\u60f3\u8981\u628a\u8fd9 $100$ \u4e2a\u6570\u538b\u7f29\u5728\u4e00\u8d77\uff0c\u968f\u4fbf\u5f97\u5230 $100$ \u4e2a\u503c\u4fbf\u53ef\u89e3\u7801\u8fd9\u539f\u6765\u7684 $100$ \u4e2a\u6570\u3002\u4e0d\u96be\u6784\u9020\u591a\u9879\u5f0f $f(x)=\\sum_{i=0}^{99} a_ix^i$\u3002\u5bf9\u6bcf\u4e2a\u70b9\u503c\u91cd\u590d $5$ \u6b21\u4f20\u8fdb\u53bb\u3002\u6211\u4eec\u5bf9\u8fde\u7eed\u7684 $5$ \u4e2a\u6570\uff0c\u5982\u679c\u4f17\u6570\u51fa\u73b0\u6b21\u6570 $\\geq 2$ \u90a3\u5c31\u53d6\u4f17\u6570\uff0c\u5426\u5219\u4e22\u5f03\u8fd9\u4e2a\u70b9\u503c\u3002\u8fd9\u6837\u4e00\u4e2a\u6570\u5931\u8d25\u7684\u6982\u7387\u662f $\\dfrac{6}{32}$\uff0c\u6211\u4eec\u4e00\u5171\u6709 $150$ \u4e2a\u6570\u3002\u6210\u529f\u7387\u8fd8\u662f\u6bd4\u8f83\u9ad8\u7684\uff0c\u5728\u672c\u673a\u4e0a\u8dd1\u5927\u6982 $3\\times 10^5$ \u7ec4\u6570\u636e\u624d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define MP make_pair\n#define vint vector<int>\n#define vl vector<long long>\n#define vll vector<pair<long long,long long> >\nint m=750,st=5,n=100;\nconst int MOD=998244353;\nll iv[355];\nll inv(ll a,int b=MOD-2){ll res=1;while(b){if(b&1)res=res*a%MOD;a=a*a%MOD,b>>=1;}return res;} \nvint lagr(vll a){\n\tvint res(n),f(n+1);\n\tif(!iv[n+1]){\n\t\tfor(int i=-155;i<=155;i++)\n\t\t\tiv[i+160]=inv(i+MOD);\n\t}\n\tf[0]=1;\n\tfor(int i=0;i<n;i++){// f*= (x-xi) \n\t\tfor(int j=n;j>=0;j--){\n\t\t\tf[j]=(MOD-a[i].first)*f[j]%MOD;\n\t\t\tif(j) f[j]=(f[j]+f[j-1])%MOD;\t\t\t\n\t\t} \n\t}\n\tfor(int i=0;i<n;i++){\n\t\tll c=a[i].second;\n\t\tfor(int j=0;j<n;j++) if(i!=j) c=c*iv[a[i].first-a[j].first+160]%MOD;\n\t\tvint g(n+1);\n\t\tfor(int j=n-1;j>=0;j--)\n\t\t\tg[j]=(f[j+1]+a[i].first*g[j+1])%MOD;\n\t\tfor(int j=0;j<n;j++)\n\t\t\tres[j]=(res[j]+c*g[j])%MOD;\n\t}\n\treturn res;\n}\nvint Decode(vint a){\n\tvll r;\n\tfor(int i=1;i*st<=m;i++){\n\t\tmap<int,int> M;\n\t\tfor(int j=(i-1)*st;j<i*st;j++)\n\t\t\tM[a[j]]++;\n\t\tfor(auto j:M) if(j.second>=2) r.push_back(MP(i,j.first));\n\t}\n\tassert(r.size()>=100);\n\tr.resize(100);\n\treturn lagr(r);\n}\nvint Encode(vint a){\n\tauto f=[&](int x){\n\t\tll ans=0;\n\t\tfor(int i=n-1;i>=0;i--)\n\t\t\tans=(ans*x+a[i])%MOD;\n\t\treturn ans;\n\t};\n\tvint r;\n\tfor(int i=1;i*st<=m;i++){\n\t\tint v=f(i);\n\t\tfor(int j=1;j<=st;j++) r.push_back(v);\n\t}\n\treturn r;\n} \n```",
        "postTime": 1685155028,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "\u901a\u4fe1\u9898\u597d\u73a9\u3002"
    }
]