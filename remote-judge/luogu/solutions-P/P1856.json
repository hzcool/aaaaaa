[
    {
        "content": "# \u7ebf\u6bb5\u6811\u626b\u63cf\u7ebf\u8be6\u89e3\n\n## \u57fa\u672c\u601d\u60f3\n\n\u6bd4\u5982\uff0c\u5bf9\u4e8e\u4e0b\u9762\u7684\u4e09\u4e2a\u77e9\u5f62\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/18006.png)\n\n\u60f3\u8c61\u6709\u4e00\u6761\u626b\u63cf\u7ebf\uff0c\u4ece\u4e0b\u5f80\u4e0a\u626b\u63cf\u5b8c\u6574\u4e2a\u56fe\u6848\uff0c\u6bcf\u9047\u5230\u4e00\u6761\u4e0a\u8fb9\u6216\u8005\u4e0b\u8fb9\u5c31\u505c\u4e0b\u6765\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/18007.png)\n\n\u7136\u540e\u6bcf\u6b21\u505c\u4e0b\u540e\u5bf9\u533a\u95f4\u8fdb\u884c\u5904\u7406\uff0c\u7528\u4e00\u4e2aans\u4ee3\u8868\u5f53\u524d\u5468\u957f\uff0c\u6700\u540eans\u5c31\u662f\u7b54\u6848\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u9996\u5148\uff0c\u8981\u5148\u628a\u77e9\u5f62\u62c6\u6210\u4e0a\u8fb9\u548c\u4e0b\u8fb9\uff0c\u75281\u548c-1\u5206\u522b\u4ee3\u8868\u4e0b\u8fb9\u548c\u4e0a\u8fb9\u3002\u7136\u540e\u6309\u9ad8\u5ea6\u6392\u5e8f\uff0c\u8fd9\u6837\u6570\u7ec4\u4ece\u524d\u5f80\u540e\u5904\u7406\u5c31\u76f8\u5f53\u4e8e\u626b\u63cf\u7ebf\u4ece\u4e0b\u5f80\u4e0a\u626b\u63cf\u3002\u5982\u679c\u662f\u4e0b\u8fb9\uff0c\u5c31\u5728\u5bf9\u5e94\u533a\u95f4\u4e0a\u52a01\uff0c\u5982\u679c\u662f\u4e0a\u8fb9\uff0c\u5c31\u5728\u5bf9\u5e94\u533a\u95f4\u4e0a\u51cf1\u3002\n\n\u5728\u6574\u4e2a\u533a\u95f4\u4e0a\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff1a\n\n```cpp\n#define lson o<<1\n#define rson o<<1|1\n#define mid (l+r)/2\nstruct Tree\n{\n    int sum;//\u6574\u4e2a\u533a\u95f4\u88ab\u6574\u4f53\u8986\u76d6\u4e86\u51e0\u6b21\uff08\u7c7b\u4f3clazytag\uff0c\u4f46\u4e0d\u4e0b\u4f20)\n    int num;//\u6574\u4e2a\u533a\u95f4\u88ab\u51e0\u6761\u4e92\u4e0d\u76f8\u4ea4\u7684\u7ebf\u6bb5\u8986\u76d6\uff08\u6bd4\u5982\uff0c[1,2],[4,5]\u5219\u4e3a2\uff0c[1,3],[4,5]\u5219\u4e3a1\uff08\u6211\u4e60\u60ef\u7528\u95ed\u533a\u95f4\uff09\uff0c[1,4],[2,2],[4,4]\u4e5f\u4e3a1\uff09\n    int len;//\u6574\u4e2a\u533a\u95f4\u88ab\u8986\u76d6\u7684\u603b\u957f\u5ea6\n    bool lflag;//\u5de6\u7aef\u70b9\u662f\u5426\u88ab\u8986\u76d6\uff08\u5408\u5e76\u7528\uff09\n    bool rflag;//\u53f3\u7aef\u70b9\u662f\u5426\u88ab\u8986\u76d6\uff08\u5408\u5e76\u7528\uff09\n}//\u5982\u679c\u4e0d\u61c2\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u63a5\u7740\u5f80\u4e0b\u770b\n```\n\n\u90a3\u4e48pushup\u8981\u600e\u4e48\u5199\u5462\uff1f\n\n```cpp\nvoid pushup(int o,int l,int r)\n{\n\tif(tree[o].sum)//\u6b64\u533a\u95f4\u4e4b\u524d\u88ab\u4e00\u6574\u4e2a\u7ebf\u6bb5\u8986\u76d6\u8fc7\n\t{\n\t\ttree[o].num=1;\n\t\ttree[o].len=r-l+1;\n\t\ttree[o].lflag=tree[o].rflag=1;\n\t}\n\telse if(l==r)//\u8fd9\u662f\u4e00\u4e2a\u53f6\u8282\u70b9\n\t{\n\t\ttree[o].num=0;\n\t\ttree[o].len=0;\n\t\ttree[o].lflag=tree[o].rflag=0;\n\t}\n\telse//\u4e00\u822c\u60c5\u51b5\n\t{\n\t\ttree[o].num=tree[lson].num+tree[rson].num;\n\t\tif(tree[lson].rflag&&tree[rson].lflag)tree[o].num--;//flag\u7684\u7528\u5904\n\t\ttree[o].len=tree[lson].len+tree[rson].len;\n\t\ttree[o].lflag=tree[lson].lflag;\n\t\ttree[o].rflag=tree[rson].rflag;\n\t\t//\u6ce8\u610f\uff1asum\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u53ea\u6709\u5f53\u5b83\u88ab\u4e00\u6574\u4e2a\u7ebf\u6bb5\u8986\u76d6\u65f6\u624d\u4f1a\u4fee\u6539\n\t}\n}\n```\n\n\u6709\u4e86pushup\uff0cadd\u51fd\u6570\u5c31\u597d\u5199\u4e86\uff1a\n\n```\nvoid add(int o,int l,int r,int from,int to,int value)//\u6b64\u533a\u95f4\u4e3a[l,r],\u5f85\u4fee\u6539\u533a\u95f4\u4e3a[from,to]\uff0c\u6dfb\u52a0\u503c\u4e3avalue\u3002\n{\n    if(l>=from&&r<=to)//\u88ab\u6574\u4e2a\u8986\u76d6\n    {\n        tree[o].sum+=value;\n        pushup(o,l,r);\n        return;\n    }\n    if(from<=mid)add(lson,l,mid,from,to,value);\n    if(to>mid)add(rson,mid+1,r,from,to,value);\n    pushup(o,l,r);\n}\n```\n\n## \u6d41\u7a0b\n\nStep 0\uff1abuild\n\n![](https://cdn.luogu.com.cn/upload/pic/18014.png)\n\nStep 1\uff1aadd(1,1,6,1,5,1)\n\n![](https://cdn.luogu.com.cn/upload/pic/18008.png)\n\n\u5148\u9012\u5f52\u5904\u7406\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/18015.png)\n\n\u518dpushup\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/18017.png)\n\nStep 2:add(1,1,6,2,3,1)\n\nStep 3:add(1,1,6,5,6,1)\n\n(\u61d2\u5f97\u5206\u5f00\u5199\u4e86\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/18009.png)\n\n\u9012\u5f52\u5904\u7406\uff0cpushup\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/18018.png)\n\nStep 4:add(1,1,6,1,5,-1)\n\n![](https://cdn.luogu.com.cn/upload/pic/18010.png)\n\n![](https://cdn.luogu.com.cn/upload/pic/18019.png)\n\nStep 5:add(1,1,6,2,3,-1)\n\nStep 6:add(1,1,6,5,6,-1)\n\n![](https://cdn.luogu.com.cn/upload/pic/18013.png)\n\n![](https://cdn.luogu.com.cn/upload/pic/18020.png)\n\n\u81f3\u6b64\uff0c\u603b\u7b97\u8bf4\u5b8c\u4e86\u7ebf\u6bb5\u6811\u7684\u4fee\u6539\u3002\n\n## \u7b54\u6848\u7edf\u8ba1\n\n\u7a81\u7136\u60f3\u8d77\u4e00\u4e2a\u5f88\u4e25\u8083\u7684\u4e8b\u60c5\u6765\uff1a\u7b54\u6848\u600e\u4e48\u7edf\u8ba1\uff1f\n\n\u5bf9\u4e8e\u6a2a\u8fb9\uff0c\u76f8\u90bb\u4e24\u6b21\u4fee\u6539\u7684\u533a\u95f4\u8986\u76d6\u957f\u5ea6\u5dee\uff08\u5c31\u662ftree[root].len\u7684\u5dee\uff09\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\uff08\u4e0d\u7406\u89e3\u7684\u81ea\u5df1\u60f3\u529e\u6cd5\u7406\u89e3\uff0c\u53cd\u6b63\u6211\u4e0d\u7406\u89e3\uff09\uff1b\n\n\u5bf9\u4e8e\u7ad6\u8fb9\uff0c\u4f60\u53ef\u4ee5\u518d\u8ba9\u626b\u63cf\u7ebf\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d~~\u4e0d\u8fc7\u8fd8\u662f\u8bf4\u7b80\u5355\u6cd5\u5427\u3002\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u6574\u4e2a\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u7aef\u70b9\uff08\u5305\u542b\u5728\u7ebf\u6bb5\u5185\u4e0d\u7b97\uff09\uff0c\u7136\u540e\u7528\u5b83\u4e58\u4e0a\u76f8\u90bb\u4e24\u6b21\u4fee\u6539\u7684\u9ad8\u5ea6\u5dee\u3002\n\n\u600e\u4e48\u8bb0\u5f55\u5462\uff1f\n\n\u5bf9\u4e86\uff0c\u5c31\u662f$tree[root].num*2*(h2-h1)$\uff08num\u7684\u4f5c\u7528\u5728\u8fd9\u91cc\uff09\n\n\u597d\u4e86\uff0c\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define lson o<<1\n#define rson o<<1|1\n#define mid (l+r)/2\nusing namespace std;\nstruct Edge\n{\n\tint left;\n\tint right;\n\tint height;\n\tint flag;\n}e[10005];\nstruct Tree\n{\n\tint sum;\n\tint num;\n\tint len;\n\tbool lflag;\n\tbool rflag;\n}tree[100005];\nint n,mx=-2147483647,mn=2147483647,edgenum,ans,last;\nvoid add_edge(int l,int r,int h,int f)\n{\n\te[++edgenum].left=l;\n\te[edgenum].right=r;\n\te[edgenum].height=h;\n\te[edgenum].flag=f;\n}\nbool cmp(Edge a,Edge b)\n{\n\treturn a.height<b.height||a.height==b.height&&a.flag>b.flag;\n}\nvoid pushup(int o,int l,int r)\n{\n\tif(tree[o].sum)\n\t{\n\t\ttree[o].num=1;\n\t\ttree[o].len=r-l+1;\n\t\ttree[o].lflag=tree[o].rflag=1;\n\t}\n\telse if(l==r)\n\t{\n\t\ttree[o].len=0;\n\t\ttree[o].num=0;\n\t\ttree[o].lflag=tree[o].rflag=0;\n\t}\n\telse\n\t{\n\t\ttree[o].len=tree[lson].len+tree[rson].len;\n\t\ttree[o].num=tree[lson].num+tree[rson].num;\n\t\tif(tree[lson].rflag&&tree[rson].lflag)tree[o].num--;\n\t\ttree[o].lflag=tree[lson].lflag;\n\t\ttree[o].rflag=tree[rson].rflag;\n\t}\n}\nvoid add(int o,int l,int r,int from,int to,int value)\n{\n\tif(l>=from&&r<=to)\n\t{\n\t\ttree[o].sum+=value;\n\t\tpushup(o,l,r);\n\t\treturn;\n\t}\n\tif(from<=mid)add(lson,l,mid,from,to,value);\n\tif(to>mid)add(rson,mid+1,r,from,to,value);\n\tpushup(o,l,r);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x1,y1,x2,y2;\n\t\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\t\tmx=max(mx,max(x1,x2));\n\t\tmn=min(mn,min(x1,x2));\n\t\tadd_edge(x1,x2,y1,1);\n\t\tadd_edge(x1,x2,y2,-1);\n\t}\n\tif(mn<=0)\n\t{\n\t\tfor(int i=1;i<=edgenum;i++)\n\t\t{\n\t\t\te[i].left+=-mn+1;\n\t\t\te[i].right+=-mn+1;\n\t\t}\n\t\tmx-=mn;\n\t}\n\tsort(e+1,e+edgenum+1,cmp);\n\tfor(int i=1;i<=edgenum;i++)\n\t{\n\t\tadd(1,1,mx,e[i].left,e[i].right-1,e[i].flag);//\u6ce8\u610f\u8fd9\u91cc\uff01\uff01\uff01\u52a0\u8fb9\u6709\u5b66\u95ee\uff01\uff01\uff01\n\t\twhile(e[i].height==e[i+1].height&&e[i].flag==e[i+1].flag)\n\t\t{\n\t\t\ti++;\n\t\t\tadd(1,1,mx,e[i].left,e[i].right-1,e[i].flag);\n\t\t}\n\t\tans+=abs(tree[1].len-last);\n\t\tlast=tree[1].len;\n\t\tans+=tree[1].num*2*(e[i+1].height-e[i].height);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u6700\u540e\u7ed9\u4e24\u4e2a\u5361\u6b7b\u6211\u7684\u6837\u4f8b\uff1a\n\n\u6837\u4f8b\u8f93\u51651\uff1a\n\n```cpp\n7\n-15 0 5 10\n-5 8 20 25\n15 -4 24 14\n0 -6 16 4\n2 15 10 22\n30 10 36 20\n34 0 40 16\n```\n\n\u6837\u4f8b\u8f93\u51fa1\uff1a\n\n```cpp\n228\n```\n\n\u6837\u4f8b\u8f93\u51652\uff1a\n\n```cpp\n2\n0 0 4 4\n0 4 4 8\n```\n\n\u6837\u4f8b\u8f93\u51fa2\uff1a\n\n```cpp\n24\n```",
        "postTime": 1524569572,
        "uid": 54214,
        "name": "wucstdio",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "\u8be6\u7ec6\u7684\u5185\u5bb9[\u8fd9\u7bc7\u535a\u5ba2](/blog/user54214/solution-p1856)\u8bb2\u5f97\u975e\u5e38\u597d\u4e86\uff0c\u4f46\u662f\u8981\u6ce8\u610f**\u540c\u5c42\u64cd\u4f5c\u7684\u987a\u5e8f\u95ee\u9898**\u3002\u5f53\u6211\u4eec\u5904\u7406\u540c\u4e00\u9ad8\u5ea6\u7684\u6a2a\u7ebf\u65f6\uff08\u7ad6\u7ebf\u540c\u7406\uff09\uff0c\u6211\u4eec\u5e94\u8be5**\u5148\u52a0\u8fb9\u518d\u5220\u8fb9**\u3002  \n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u8003\u8651\u4e00\u4e0b\u8fd9\u7ec4\u6570\u636e\uff1a\uff08\u6765\u6e90\u89c1\u4e0a\uff09  \n```\n2\n0 0 4 4\n0 4 4 8\n```\n```\n24\n```\n\u753b\u51fa\u6765\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a  \n![1.png](https://i.loli.net/2019/11/07/DP1TyYI2MhRvWNl.png)  \n\n\u8fd9\u91ccCD\u662f\u4e0d\u8ba1\u5165\u7b54\u6848\u7684\uff0c\u4f46\u5982\u679c\u6211\u4eec\u5148\u5220\u8fb9\u518d\u52a0\u8fb9\uff0cCD\u5c31\u4f1a\u88ab\u8ba1\u5165\u7b54\u68482\u6b21\uff08\u76f8\u5f53\u4e8e\u53d8\u6210\u4e24\u4e2a\u77e9\u5f62\u4e0d\u76f8\u90bb\u7684\u60c5\u51b5\uff09\u3002\n\n------------\n\n\u5bf9\u4e8e\u540c\u4e00\u5c42\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u52a0\u5b8c\u6240\u6709\u52a0\u8fb9\u518d\u7edf\u8ba1\u7b54\u6848\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u52a0\u4e00\u6761\u8fb9\u90fd\u518d\u7edf\u8ba1\u4e00\u6b21\u7b54\u6848\uff08\u5220\u8fb9\u540c\u7406\uff09\u4e0d\u8fc7\u8fd9\u4f18\u5316\u4f3c\u4e4e\u6ca1\u4ec0\u4e48\u7528\u3002  \n\u4f46\u662f\u6211\u4eec**\u4e0d\u80fd\u5728\u540c\u5c42\u7684\u52a0\u8fb9\u548c\u5220\u8fb9\u90fd\u64cd\u4f5c\u5b8c\u4e86\u518d\u7edf\u8ba1\u7b54\u6848**\u3002\u6211\u4eec\u628a\u4e0a\u9762\u90a3\u5f20\u56fe\u7a0d\u5fae\u6539\u4e00\u4e0b\uff1a  \n![1.png](https://i.loli.net/2019/11/07/oA84ECkYiHO2VWq.png)  \n\n\u8fd9\u4e00\u5c42\u4e2d\u7b54\u6848\u5e94\u8be5\u52a0\u4e0aCF\u548cDH\u4e24\u6bb5\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u505a\u5b8c\u8fd9\u4e00\u5c42\u6240\u6709\u64cd\u4f5c\u518d\u7edf\u8ba1\uff0c\u5b83\u4eec\u5c31\u4e0d\u4f1a\u88ab\u8ba1\u5165\uff08\u64cd\u4f5c\u524d\u8986\u76d6\u957f\u5ea6\u4e3a4\uff0c\u64cd\u4f5c\u5b8c\u4e86\u8fd8\u662f4\uff09",
        "postTime": 1573090298,
        "uid": 75165,
        "name": "\u5f7c\u5cb8\u5f52\u822a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "**\u7ebf\u6bb5\u6811\u626b\u63cf\u7ebf**\u7ecf\u5178\u9898\n\n~~***\u8fc7\u4e8e***~~\u6c34\uff0c\u5ffd\u7565\u79bb\u6563\u5316\u4e5f\u53ef\u4ee5\u8fc7\u3002\n\n\u6bcf\u4e2a\u77e9\u5f62\u6309\u7167\u56fd\u9645\u60ef\u4f8b\u770b\u6210\u56db\u6761\u7ebf\uff0c\u6a2a\u7ad6\u5404\u505a\u4e00\u6b21\u626b\u63cf\u6bd4\u8f83\u597d\u7406\u89e3\u3002\n\n\u6bcf\u6761\u8fb9\u88ab\u8ba1\u7b97\u65f6\uff0c\u5bf9\u7ebf\u6bb5\u6811\u4ea7\u751f\u7684\u5f71\u54cd\uff08\u53d6\u7edd\u5bf9\u503c\uff09\u5c31\u662f\u76f8\u5bf9\u5e94\u7684\u5468\u957f\u8d21\u732e\u3002\n\n\u6ce8\u610f\uff1a1\u3001\u540c\u4e00\u6c34\u5e73\u7ebf\u4e0a\u7684\u8fb9\u5148\u7b97\u4e0b\u65b9\u77e9\u5f62\u7684\u4e0a\u8fb9\uff0c\u518d\u7b97\u4e0a\u65b9\u77e9\u5f62\u7684\u4e0b\u8fb9\u3002\n\n2\u3001\u5982\u679c\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u662fx2-x1\uff0c\u5de6\u70b9\u5750\u6807x1\uff0c\u90a3\u4e48\u53f3\u70b9\u5e94\u5728x2-1\u5750\u6807\u7684\u5730\u65b9\u3002\n\n3\u3001\u91cd\u590d\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u5fc5\u987b\u628a\u6240\u6709\u5185\u5bb9\u5237\u65b0\u3002\u4e2a\u4eba\u56e0\u4e3a\u61d2\u6807\u7b7e\u6ca1\u6e05\u7a7aWA\u7684\u4e0d\u660e\u4e0d\u767d\u3002\n\n\n//\u5e76\u4e0d\u77e5\u9053\u626b\u63cf\u7ebf\u91cc\u7ebf\u6bb5\u6811\u5e72\u561b\u7684\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee5\u4e0b\u51e0\u884c\uff0c\u5176\u4f59\u8fd8\u8bf7\u81ea\u89c9\u7a7a\u964d\n\n\n//\u4fdd\u5b58\u533a\u95f4\u5185\u672a\u88ab\u8986\u76d6\uff08\u6216\u5df2\u88ab\u8986\u76d6\uff09\u7684\u70b9\u6570\n\n//\u4fdd\u5b58\u533a\u95f4\u8986\u76d6\u6570\u7684\u6700\u5c0f\u503c\uff08\u5bf9\u5355\u70b9\u6765\u8bf4\u76f8\u5f53\u4e8e\u5df2\u7ecf\u6709\u51e0\u6761\u7ebf\u6bb5\u8986\u76d6\uff09\n\n//\u505a\u4e00\u68f5\u5b89\u9759\u7f8e\u4e3d\u7684\u7ebf\u6bb5\u6811\uff08\u9003\n\nP.S.\uff1a\u6709\u8bef\u4e4b\u5904\u8fd8\u8bf7\u591a\u591a\u5305\u6db5\uff0c\u6709\u4ec0\u4e48\u60f3\u8bf4\u7684\u5c31\u618b\u7740\uff08\u9003\n\n\nP.S.\u00b7P.S.\uff1a\u4ee5\u4e0a\u662f\u5e9f\u8bdd\uff0c\u4ee5\u4e0b\u662f\u7cbe\u534e\uff01\n\n\n```cpp\n    #include <iostream>\n    #include <algorithm>\n    #include <stdio.h>\n    #include <math.h>\n    using namespace std;\n    typedef long long LL;\n    int tree[80020],lazy[80020],cnt[80020];\n    #define ls nod<<1\n    #define rs nod<<1|1\n    void pushdown(int nod,int l,int r){\n        if(lazy[nod]){\n            lazy[ls]+=lazy[nod];cnt[ls]+=lazy[nod];\n            lazy[rs]+=lazy[nod];cnt[rs]+=lazy[nod];\n            lazy[nod]=0;\n        }\n    }\n    void pushup(int nod,int l,int r){\n        if(cnt[ls]==cnt[rs]){cnt[nod]=cnt[ls];tree[nod]=tree[ls]+tree[rs];}\n        else if(cnt[ls]<cnt[rs]){cnt[nod]=cnt[ls];tree[nod]=tree[ls];}\n        else{cnt[nod]=cnt[rs];tree[nod]=tree[rs];}\n    }\n    void build(int nod,int l,int r){\n        lazy[nod]=0;\n        if(l==r){cnt[nod]=lazy[nod]=0;tree[nod]=1;return;}\n        int mid=l+r>>1;\n        build(ls,l,mid);build(rs,mid+1,r);\n        pushup(nod,l,r);\n    }\n    void ins(int nod,int l,int r,int x,int y,int v){\n        if(l==x&&r==y){\n            lazy[nod]+=v;\n            cnt[nod]+=v;\n            return;\n        }\n        pushdown(nod,l,r);\n        int mid=l+r>>1;\n        if(y<=mid)ins(ls,l,mid,x,y,v);\n        else if(x>mid)ins(rs,mid+1,r,x,y,v);\n        else{ins(ls,l,mid,x,mid,v);ins(rs,mid+1,r,mid+1,y,v);}\n        pushup(nod,l,r);\n    }\n    int n;LL x,ans;\n    struct bar{int a,b,c,d;bar(){}bar(int w,int x,int y,int z){a=w;b=x;c=y;d=z;}}b[5003],c[20003];\n    bool operator<(bar a,bar b){return a.a!=b.a?a.a<b.a:a.d>b.d;}\n    void doit(){\n        sort(c+1,c+2*n+1);build(1,1,20002);\n        for(int i=1;i<=n+n;i++){\n            x=tree[1]*(cnt[1]==0);\n            ins(1,1,20002,c[i].b,c[i].c,c[i].d);\n            ans+=abs(x-tree[1]*(cnt[1]==0));\n        }\n    }\n    int main(){\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++){\n            scanf(\"%d%d%d%d\",&b[i].a,&b[i].b,&b[i].c,&b[i].d);\n            b[i].a+=10001;b[i].b+=10001;b[i].c+=10001;b[i].d+=10001;\n            c[2*i-1]=bar(b[i].b,b[i].a,b[i].c-1,1);\n            c[2*i]=bar(b[i].d,b[i].a,b[i].c-1,-1);\n        }\n        doit();\n        for(int i=1;i<=n;i++){\n            c[2*i-1]=bar(b[i].a,b[i].b,b[i].d-1,1);\n            c[2*i]=bar(b[i].c,b[i].b,b[i].d-1,-1);\n        }\n        doit();\n        printf(\"%lld\",ans);\n        return 0;\n}\n```",
        "postTime": 1513583410,
        "uid": 13925,
        "name": "yyhhenry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "# P1856 \u77e9\u5f62\u5468\u957fPicture \u9898\u89e3 \n\n### \u90e8\u5206\u5927\u4f6c\u7684\u56fe\u5df2\u7ecf\u753b\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u4f60\u4eec\u7ed3\u5408\u770b\u4e00\u4e0b\n\n\u6211\u770b\u5230\u5f88\u591a\u4eba\u5199\u7684\u90fd\u662f\u626b\u63cf\u4e00\u6b21\uff0c\u8bb0\u5f55\u8986\u76d6\u6b21\u6570\uff0c\u7136\u540e\u518d\u89e3\u51b3\u53e6\u4e00\u65b9\u5411\uff1a\u6bd4\u5982\u8bf4\uff0c\u5e73\u884c\u4e8e$y$\u8f74\u626b\u63cf\uff0c\u7136\u540e\u8bb0\u5f55\u8986\u76d6\u7684\u6bb5\u6570\uff0c\u6700\u540e\u6bb5\u6570$*$\u626b\u8fc7\u7684\u6a2a\u5750\u6807\u957f\u5ea6 $+$ \u626b\u63cf\u8fc7\u7684\u7ebf\u6bb5\u957f\u5ea6\u5373\u4e3a\u7b54\u6848\u3002\n\n\u4f46\u662f\u6709\u5fc5\u8981\u8fd9\u4e48\u590d\u6742\u5417\uff1f\u626b\u4e24\u6b21\u4e0d\u5c31\u597d\u4e86\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u9897\u6a2a\u5411\u7684\u6811\uff0c\u518d\u5f00\u4e00\u9897\u626b\u7eb5\u5411\u7684\u6811\uff0c\u6700\u540e\u7b54\u6848\u76f8\u52a0\u5c31\u884c\u4e86\uff0c\u51fd\u6570\u4f20\u4e00\u4e0b\u5b58\u6811\u7684\u6570\u7ec4\u7684\u5730\u5740\u53ef\u4ee5\u51cf\u5c0f\u4e00\u534a\u7801\u91cf\u3002\n\n\u7136\u540e\u5c31\u662f\u79bb\u6563\u5316\uff0c\u867d\u7136\u8bf4\u4e0d\u7528\u79bb\u6563\u5316\u80fd\u8fc7(\u6211\u542c\u8bf4\u7684)\uff0c\u4f46\u662f\u771f\u7684\u6ca1\u51e0\u4e2a\u4eba\u5199\u79bb\u6563\u5316\uff1f\u57fa\u672c\u6ca1\u6709\u4eba\u5199$unique+lower\\_bound$\u79bb\u6563\u5316\u7684\u3002\n\n\u4e8e\u662f\u4e0b\u9762\u7ed9\u51fa\u6211\u7684\u4ee3\u7801\uff0c\u5e0c\u671b\u7ed9\u90a3\u4e9b\u770b\u4e60\u60ef\u51fd\u6570\u79bb\u6563\u5316\u7684\u4eba\u4e00\u4e9b\u5e2e\u52a9\uff0c\u4e5f\u4e3a\u5927\u5bb6\u63d0\u4f9b\u53e6\u4e00\u79cd\u5b9e\u73b0\u7a0d\u7b80\u5355\u4e00\u70b9\u7684\u601d\u8def\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ls(x) x<<1\n#define rs(x) x<<1|1\nusing namespace std;\n\nconst int SIZE = 5010;\n\nstruct rec {\n\tint l, r, s;\n\tint is;\n\tbool operator < (const rec &a) const {\n\t\treturn s == a.s ? is > a.is : s < a.s;\n\t}\n}line1[SIZE << 1], line2[SIZE << 1];\n//\u5b58\u7ebf\u6bb5,l\u4e3a\u5de6\u7aef\u70b9(x1/y1),r\u4e3a\u53f3\u7aef\u70b9(x2/y2)\n//\u8fd9\u4e48\u5199\u770b\u8d77\u6765\u597d\u53d7\u4e9b,s\u4e3a\u53e6\u4e00\u8f74\u7684\u5750\u6807(y/x) \n\nvoid add(int l, int r, int s, int is, int k, rec *line) {\n\t//\u5199\u4e2a\u51fd\u6570\u8ba9\u521d\u59cb\u5316\u66f4\u52a0\u7b80\u6d01 \n\tline[k].l = l, line[k].r = r;\n\tline[k].s = s, line[k].is = is;\n\treturn;\n}\n\nstruct SegmentTree {\n\tint l, r;\n\tint len, cnt;\n}t1[SIZE << 3], t2[SIZE << 3];\n//\u5b58\u6811,\u7531\u4e8e\u6bcf\u4e2a\u77e9\u5f62\u5206\u522b\u6709\u4e24\u6761\u7ad6\u8fb9\u4e24\u6761\u6a2a\u8fb9,\u6545\u6240\u6709\u6570\u7ec4\u591a\u5f00\u4e24\u500d \n\nint b1[SIZE << 1], b2[SIZE << 1];\n\nvoid updata(int p, SegmentTree *t, int *b) { //\u66f4\u65b0\u4fe1\u606f \n\tif(t[p].cnt) \n\t\tt[p].len = b[t[p].r + 1] - b[t[p].l];\n\telse t[p].len = t[ls(p)].len + t[rs(p)].len;\n}\n\nvoid build(int p, int l, int r, SegmentTree *t) {\n//\u4f20\u6811\u7684\u53c2\u6570\u5c31\u884c\uff0c\u51cf\u5c0f\u7801\u91cf\uff0c\u4e0b\u540c \n\tt[p].l = l, t[p].r = r;\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p), l, mid, t);\n\tbuild(rs(p), mid + 1, r, t);\n}\n\nvoid change(int p, int l, int r, int d, SegmentTree *t, int *b) {\n\t//\u8fd9\u91cc\u522b\u5fd8\u8bb0\u591a\u4f20\u4e00\u4e2ab1/b2\u6570\u7ec4\u7684\u4fe1\u606f\uff0c\u66f4\u65b0\u8981\u7528\uff0c\u4e0a\u9762updata\u540c \n\tif(l <= t[p].l && r >= t[p].r) {\n\t\tt[p].cnt += d;\n\t\tupdata(p, t, b);\n\t\treturn;\n\t}\n\tint mid = (t[p].l + t[p].r) >> 1;\n\tif(l <= mid) change(ls(p), l, r, d, t, b);\n\tif(r > mid) change(rs(p), l, r, d, t, b);\n\tupdata(p, t, b);\n}\n\n\nint main() { //\u4e0b\u9762\u662f\u770b\u7740\u5341\u5206\u6574\u6d01\u7684\u4ee3\u7801 \n\tint n;\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++) {\n\t\tint a, b, c, d, k = i << 1;\n\t\tscanf(\"%d %d %d %d\", &a, &b, &c, &d);\n\t\t//\u5de6\u7aef\u70b9  \u53f3\u7aef\u70b9  x/y  \u54ea\u6761\u8fb9  \u7f16\u53f7  \u6a2a/\u7ad6 \n\t\tadd(a, c, b, 1, k - 1, line1);\n\t\tadd(a, c, d, -1, k, line1);\n\t\tadd(b, d, a, 1, k - 1, line2);\n\t\tadd(b, d, c, -1, k, line2);\t\n\t\tb1[k - 1] = a, b1[k] = c;\n\t\tb2[k - 1] = b, b2[k] = d;\n\t}\n\tn <<= 1;\n\tsort(line1 + 1, line1 + n + 1);\n\tsort(line2 + 1, line2 + n + 1);\n\tsort(b1 + 1, b1 + n + 1);\n\tsort(b2 + 1, b2 + n + 1);\n\tint m1 = unique(b1 + 1, b1 + n + 1) - (b1 + 1);\n\tint m2 = unique(b2 + 1, b2 + n + 1) - (b2 + 1);\n\tbuild(1, 1, m1 - 1, t1), build(1, 1, m2 - 1, t2);\n\tint temp1 = 0, temp2 = 0; long long ans = 0;\n\tfor(int i = 1; i <= n; i++) {\n\t\tint l1 = lower_bound(b1 + 1, b1 + m1 + 1, line1[i].l) - b1,\n\t\t\tr1 = lower_bound(b1 + 1, b1 + m1 + 1, line1[i].r) - b1,\n\t\t\tl2 = lower_bound(b2 + 1, b2 + m2 + 1, line2[i].l) - b2,\n\t\t\tr2 = lower_bound(b2 + 1, b2 + m2 + 1, line2[i].r) - b2;\n\t\tchange(1, l1, r1 - 1, line1[i].is, t1, b1);\n\t\tchange(1, l2, r2 - 1, line2[i].is, t2, b2);\n\t\tans += abs(t1[1].len - temp1) + abs(t2[1].len - temp2);\n\t\ttemp1 = t1[1].len, temp2 = t2[1].len;\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n\n$END$\n------------\n(~~\u8fd9\u8c8c\u4f3c\u662f\u6211\u5199\u7684\u6700\u77ed\u7684\u4e00\u7bc7\u9898\u89e3\uff1f~~)**\u4e0d\u7ba1\u4e86\uff0c\u8981\u4e2a\u8d5e\u597d\u4e0d\u597dQAQ**",
        "postTime": 1563032446,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "\u6b64\u9898\u5176\u5b9e\u6570\u636e\u5b8c\u5168\u4e0d\u7528\u7ebf\u6bb5\u6811\u8fc7\u3002\n\n\u5f53\u7136\u6211\u7684\u7b97\u6cd5\u8fd8\u662f\u53ef\u4ee5\u7ebf\u6bb5\u6811\u4f18\u5316\u7684\uff0c\u7136\u800c\u5f53\u6211\u60f3\u5148\u4ea4\u4e2a\u66b4\u529b\u65f6\uff0c\u83ab\u660e\u5c31a\u6389\u4e86\uff0c\u6240\u4ee5\u4e5f\u4e0d\u80fd\u602a\u6211\u61d2\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u77e9\u5f62\u62bd\u8c61\u62104\u6761\u8fb9\u3002\n\n\u5bf9\u4e8e\u8fd94\u6761\u8fb9\uff0c\u6211\u4eec\u5206\u7eb5\u8fb9\u548c\u6a2a\u8fb9\u5206\u522b\u5904\u7406\u3002\n\n\u7531\u4e8e\u7eb5\u8fb9\u6a2a\u8fb9\u505a\u6cd5\u5b8c\u5168\u4e00\u6837\uff0c\u5c31\u76f4\u63a5\u53ea\u8bf4\u4e00\u79cd\u4e86\u3002\n\n**********\u4e0b\u9762\u8fdb\u5165\u4e3b\u4f53***********\n\n\u5bf9\u4e8e\u6bcf\u6761\u7eb5\u8fb9\uff0c\u6211\u4eec\u8bb0\u5f55\u5b83\u7684x\u8f74\u5750\u6807\u4ee5\u53cay\u8f74\u4e24\u4e2a\u5750\u6807\u5e76\u4ee5x\u5750\u6807\u6392\u5e8f\u3002\n\n\u7136\u540e\u4ece\u6700\u5de6\u8fb9\u5f00\u59cb\u5904\u7406\uff0c\u6bcf\u9047\u5230\u4e00\u6761\u5de6\u8fb9\u7684\u8fb9\uff0c\u5c31\u8bbe\u7f6e\u5f71\u54cd\uff0c\u6bd4\u5982\u8986\u76d6\u6570+1\n\n\u6bcf\u9047\u5230\u4e00\u6761\u53f3\u8fb9\u7684\u8fb9\uff0c\u5c31\u6d88\u9664\u5f71\u54cd\uff0c\u6bd4\u5982\u8986\u76d6\u6570-1\n\n\u6bcf\u6761\u8fb9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u4ed6\u5728y\u8f74\u6620\u5c04\u7684\u90a3\u4e00\u6bb5\u4e2d\u8986\u76d6\u6570\u4e3a0\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u6211\u5c31\u66b4\u529b\u4e86\u4e00\u4e0b\u5c31...\n\n***********************************\n\nyyyyyy\u7b49\u662f\u56e0\u4e3a\u6d1b\u53e4\u4e0d\u652f\u6301y1.y2,\u4e00\u6012\u4e4b\u4e0b\u5c31\u5168\u6362\u6210\u4e86yyyyyyyyyy\u3002\n\n\u987a\u4fbf\u4e5f\u9632\u76f4\u63a5\u6284\u9898\u89e3\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<algorithm>\nusing namespace std;\nstruct cxt{\n    int x,yyyyyyy,yyyyyyyyyy,flag;\n}s[800001],t[800001];\nint comp(cxt a,cxt b){ return a.x==b.x?a.flag>b.flag:a.x<b.x;}\nint n,m,x,y,xxxxxxx,yyyyyyy,z,tot,a[800001],b[800001],xb=400001,ans;\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;++i)\n    {\n        scanf(\"%d%d%d%d\",&x,&y,&xxxxxxx,&yyyyyyy);           \n        s[++tot].x=x;s[tot].yyyyyyy=y;s[tot].yyyyyyyyyy=yyyyyyy;s[tot].flag=1;\n        t[tot].x=y;t[tot].yyyyyyy=x;t[tot].yyyyyyyyyy=xxxxxxx;t[tot].flag=1;\n        s[++tot].x=xxxxxxx;s[tot].yyyyyyy=y;s[tot].yyyyyyyyyy=yyyyyyy;\n        t[tot].x=yyyyyyy;t[tot].yyyyyyy=x;t[tot].yyyyyyyyyy=xxxxxxx;\n    }\n    sort(s+1,s+tot+1,comp);\n    sort(t+1,t+tot+1,comp);\n    for (int i=1;i<=tot;++i)\n    {\n        if (s[i].flag) for (int j=s[i].yyyyyyy;j<s[i].yyyyyyyyyy;++j) {if (!a[j+xb]) ++ans;++a[j+xb];}\n          else for (int j=s[i].yyyyyyy;j<s[i].yyyyyyyyyy;++j) {--a[j+xb];if (!a[j+xb]) ++ans;}\n        if (t[i].flag) for (int j=t[i].yyyyyyy;j<t[i].yyyyyyyyyy;++j) {if (!b[j+xb]) ++ans;++b[j+xb];}\n          else for (int j=t[i].yyyyyyy;j<t[i].yyyyyyyyyy;++j) {--b[j+xb];if (!b[j+xb]) ++ans;}\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1489223141,
        "uid": 5261,
        "name": "\u65e0\u59a8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "\u5982\u679c\u6211\u4eec\u8981\u7edf\u8ba1\u4e00\u4e2a\u7531\u591a\u4e2a\u77e9\u5f62\u91cd\u53e0\u7ec4\u6210\u7684\u56fe\u5f62\u7684\u9762\u79ef\u3002\n\n\u66b4\u529b\u592a\u9ebb\u70e6\uff0c\u800c\u8ba1\u7b97\u673a\u53c8\u4e0d\u80fd\u60f3\u4eba\u4e00\u6837\u8ba1\u7b97\uff0c\u90a3\u600e\u4e48\u6c42\u89e3\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u626b\u63cf\u7ebffa\n\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u6709\u4e00\u6761\u7ebf\uff0c\u6309\u7167\u4e00\u4e2a\u987a\u5e8f\uff08\u4ece\u5de6\u5230\u53f3\u5440\uff0c\u4ece\u4e0a\u5230\u4e0b\u5440...\uff09\u626b\u63cf\u4e00\u4e2a\u56fe\u5f62\u3002\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u5f97\u5230\uff0c\u4e24\u6761\u6700\u8fd1\u7684\u76f8\u90bb\u7ebf\u6bb5\u95f4\uff0c\u6240\u5305\u542b\u7684\u8fd9\u4e00\u4e2a\u56fe\u5f62\u7684\u9762\u79ef\u662f\u89c4\u6574\u7684\u77e9\u5f62\uff0c\u53c8\u56e0\u4e3a\u8fd9\u4e9b\u77e9\u5f62\u7684\u957for\u5bbd\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff08\u5c31\u662f\u6570\u636e\u4e2d\u7ed9\u5b9a\u77e9\u5f62\u7684\u8fb9\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u53e6\u4e00\u6761\u8fb9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7ef4\u62a4\u7ebf\u6bb5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u897f\u5b89\u6bb5\u7d20\u4e86\u3002\n\n\u540c\u4e00\u4e2a\u77e9\u5f62\uff0c\u5728\u9047\u5230\u4ed6\u7684\u7b2c\u4e00\u6761\u548c\u626b\u63cf\u7ebf\uff08\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff09\u5e73\u884c\u7684\u7684\u8fb9\u65f6\uff0c\u5728\u8fd9\u6761\u8fb9\u548c\u626b\u63cf\u7ebf\u91cd\u53e0\u7684\u90e8\u5206\u4e0a\u7d2f\u52a01\uff08\u4e00\u5b9a\u662f\u7d2f\u52a0\uff09\uff0c\u7136\u540e\u7ee7\u7eed\u5f80\u540e\u626b\u63cf\uff0c\u9047\u5230\u5176\u4ed6\u77e9\u5f62\u7684\u7b2c\u4e00\u6761\u8fb9\u65f6\u4ea6\u662f\u3002\n\n\u77e5\u9053\u78b0\u5230\u67d0\u4e2a\u77e9\u5f62\u7684\u7b2c\u4e8c\u6761\u8fb9\uff0c\u5728\u51cf\u53bb\u3002\n\n\u90a3\u5728\u626b\u63cf\u4e2d\u600e\u4e48\u7b97\u9762\u79ef\u5462\uff1f  \u6211\u4eec\u9700\u8981\u7edf\u8ba1\u7684\u662f\u626b\u63cf\u7ebf\u4e0a\u6709\u591a\u5c11\u957f\u5ea6\u88ab\u8986\u76d6\uff0c\u7136\u540e\u4e58\u4e0a\u4e24\u6761\u7ebf\u6bb5\u4e4b\u95f4\u7684\u5782\u76f4\u8ddd\u79bb\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u90a3\u7edf\u8ba1\u5468\u957f\u600e\u4e48\u7b97\u5462\uff1f \n\n\uff08\u73b0\u5728\u90fd\u662f\u4ece\u4e0b\u5f80\u4e0a\u626b\uff09\u5148\u6765\u770b\u5e73\u884c\u4e8e\u626b\u63cf\u7ebf\u7684\u8fb9\u3002\n\n\u4e24\u6b21\u626b\u63cf\u540e\uff0c\u626b\u63cf\u7ebf\u4e0a\u7684\u88ab\u8986\u76d6\u957f\u5ea6\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u5c31\u662f\u6240\u589e\u52a0\u7684\u957f\u5ea6\u3002\n\n\u4e3a\u4ec0\u4e48\u662f\u5dee\u5462\uff1f\u53c8\u4e3a\u4ec0\u4e48\u662f\u7edd\u5bf9\u503c\u5462\uff1f\n\n\u6211\u4eec\u901a\u8fc7\u4e00\u5f20\u56fe\u6765\u89e3\u91ca\uff1a\n\n![](https://s1.ax2x.com/2018/06/20/gId1A.jpg)\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u662f\u4e24\u4e2a\u77e9\u5f62\u5d4c\u5957\uff0c\u7136\u540e\u81ea\u5df1\u5728\u5bbd\u6241\u7684\u77e9\u5f62\u7684\u5de6\u8fb9\u7b2c\u4e00\u6761\u8fb9\u7684\u626b\u63cf\u7ebf\u4e0a\u7684\u88ab\u8986\u76d6\u7684\u957f\u5ea6\uff0c\u548c\u53e6\u4e00\u4e2a\u77e9\u5f62\u7684\u7b2c\u4e00\u6761\u8fb9\u65f6\u7684\u5dee\u5c31\u662f\u7b2c\u4e8c\u4e2a\u77e9\u5f62\u5ef6\u5c55\u51fa\u6765\u7684\u957f\u5ea6\uff0c\u7136\u540e\u7edd\u5bf9\u503c\u7684\u610f\u601d\u662f\u5f53\u4e00\u4e2a\u77e9\u5f62\u7ed3\u675f\u65f6\uff0c\u4ed6\u6709\u53ef\u80fd\u4f1a\u4e0e\u4ed6\u6709\u91cd\u53e0\u7684\u77e9\u5f62\u51f9\u9677\uff0c\u7136\u540e\u7edd\u5bf9\u503c\u5c31\u5c06\u8fd9\u79cd\u60c5\u51b5\u7684\u8fb9\u53d6\u4e86\u51fa\u6765\u3002\n\n\u90a3\u4e8e\u626b\u63cf\u7ebf\u5782\u76f4\u7684\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e24\u6b21\u626b\u63cf\u4e2d\u95f4\u7684\u90a3\u4e9b\u4e0e\u626b\u63cf\u7ebf\u5782\u76f4\u7684\u7ebf\u6bb5\uff0c\u4ed6\u7684\u957f\u5ea6\u90fd\u662f\u4e24\u6b21\u626b\u63cf\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u6211\u4eec\u5c31\u9700\u8981\u7edf\u8ba1\u4ed6\u7684\u4e2a\u6570\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c  \u4e24\u6b21\u626b\u63cf\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u4e0d\u76f8\u8fde\u7684\u7a7a\u9699\uff0c\u5c31\u6709\u76f8\u540c\u4e2a\u6570*2\u6761\u5982\u6b64\u7ebf\u6bb5\n\n## ~~\u5176\u5b9e\u6211\u611f\u89c9\u81ea\u5df1\u5f88\u610f\u8bc6\u6d41\uff0c\u6211\u7684\u9505~~\n\n##### ~~\u8fd8\u662f\u770b\u770b\u4e0a\u9762\u5927\u4f6c\u7684\u5427~~\n\n\u7136\u540e\u5177\u4f53\u5b9e\u73b0\u4f1a\u4ece\u8be6\u89e3\u3002\u8bf7\u5148\u4ecemain\uff08\uff09\u770b\u8d77\n\n\u6211\u7684\u626b\u63cf\u7ebf\u7684\u7ebf\u6bb5\u6811\u662f\u5b58\u7684\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u7a7a\u9699\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nconst int manx=5010;\nstruct Edge\n{\n\tint x1,x2;\n\tint y;\n\tint f;\n\tvoid change()\n\t{\n\t\tif(x1>x2)\n\t\t\tswap(x1,x2);\n\t\treturn ;\n\t}\n};\nstruct node\n{\n\tint f;//\u6709\u591a\u5c11\u6761\u4e0d\u60f3\u4ea4\u7684\u7ebf\u6bb5\n\tint ha;//\u662f\u5426\u88ab\u6574\u4f53\u8986\u76d6\uff0c\u4e0d\u4e0b\u4f20\n\tint len;//\u603b\u5171\u957f\u5ea6\n\tint fl,fr;//\u5de6\u53f3\u7aef\u70b9\u662f\u5426\u88ab\u8986\u76d6\uff0c\u5728\u5408\u5e76\u65f6\u4f1a\u7528\u5230\n\tint l,r;//\u5b9e\u9645\u5de6\u53f3\u7aef\u70b9\n};\nint te,tx,k;\nEdge line[manx<<1];\nint base[manx<<1];\nint datx[manx<<1];\nnode t[manx<<5];\nvoid add(int a,int b,int c,int d)\n{\n\tif(b>d)\tswap(b,d);\n\tint x1=min(a,c),x2=max(a,c);\n\tline[++te].x1=x1;\n\tline[te].x2=x2;//x1\uff0cx2\u4e3a\u5de6\u53f3\u7aef\u70b9\uff0cy\u4e3a\u6a2a\u5750\u6807\n\tline[te].y=b;\n\tline[te].f=1;//\u8fd9\u91cc\u662f\u7cbe\u9ad3\uff0c\u4e0b\u8fb9\u662f\u4e00\u4e2a\u77e9\u9635\u7684\u5f00\u59cb\uff0c\u4e0a\u8fb9\u662f\u4e00\u4e2a\u77e9\u9635\u7684\u7ed3\u675f\uff0c\u5982\u6b64\u5904\u7406\uff0c\u6211\u4eec\u5230\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f20\u8fdb\u66f4\u65b0\u626b\u63cf\u7ebf\u7684\u51fd\u6570\u91cc\uff0c\u5c31\u4e0d\u7528\u5224\u65ad\u4e86\n\tline[++te].x1=x1;\n\tline[te].x2=x2;\n\tline[te].y=d;\n\tline[te].f=-1;\n}\nbool compare(const Edge &a,const Edge &b)\n{\n\treturn a.y==b.y ? a.f > b.f : a.y < b.y;\n}\nvoid make_base()\n{\n\tint now=0x7fffffff;\n\tfor(int i=1;i<=tx;i++)\n\t\tif(now!=datx[i])\n\t\t{\n\t\t\tnow=datx[i];\n\t\t\tbase[++k]=now;\n\t\t}//\u7b80\u7b80\u5355\u5355\u7684\u53bb\u91cd\n\treturn ;\n}\nvoid build(int root,int l,int r)\n{\n\tt[root].f=0;t[root].len=0;\n\tt[root].fl=t[root].fr=0;\n\tt[root].l=base[l];t[root].r=base[r+1];//\u56e0\u4e3a\u662f\u5b58\u7684\u662f\u8282\u70b9\u4e4b\u95f4\u7684\u95f4\u9699\uff0c\u800c\u4e14\u79bb\u6563\u5316\u4e86\uff0c\u6240\u4ee5\u8bf4\u5728\u5904\u7406\u5de6\u53f3\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u5c0f\u5fc3\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48r\u8981+1\uff0c\u56e0\u4e3a\u6211\u662f\u7b2ci\u4e2a\u70b9\u540e\u7684\u95f4\u9699\u7684\u6807\u53f7\u4e3ai\n\tif(l==r)\treturn ;//\u5269\u4e0b\u7684\u5c31\u5f88\u666e\u901a\u4e86\n\tint mid=(l+r)>>1;\n\tbuild(root<<1,l,mid);\n\tbuild(root<<1|1,mid+1,r);\n\treturn ;\n}\nint check(int val)\n{\n\tint l=1,r=k;\n\tint mid;\n\twhile(l<r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tif(base[mid]<val)\tl=mid+1;\n\t\telse\tr=mid;\n\t}\n\treturn l;\n}\nvoid push_up(int root,int l,int r)\n{\n\tif(t[root].ha)//\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u88ab\u6574\u4f53\u8986\u76d6\uff0cha\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u53d8\u6210\u8d1f\u6570\u3002\u4e3a\u4ec0\u4e48\uff0c\u53ef\u4ee5\u81ea\u5df1\u5c0f\u5c0f\u7684\u601d\u8003\u4e00\u4e0b\n\t{\n\t\tt[root].len=t[root].r-t[root].l;//\u8ba1\u7b97\u957f\u5ea6\n\t\tt[root].fl=t[root].fr=1;//\u5de6\u53f3\u7aef\u70b9\u90fd\u88ab\u8986\u76d6\n\t\tt[root].f=1;//\u5176\u4e2d\u6709\u4e00\u6761\u7ebf\u6bb5\n\t\treturn ;\n\t}//\u6b64\u5904\u6c38\u8fdc\u4e0d\u4f1a\u51fa\u73b0l==r\u7684\u60c5\u51b5\n\telse//\u4e00\u822c\u60c5\u51b5\n\t{\n\t\tt[root].len=t[root<<1].len+t[root<<1|1].len;//\u5408\u5e76\n\t\tt[root].fl=t[root<<1].fl;//\u5927\u533a\u95f4\u7684\u5de6\u7aef\u70b9\n\t\tt[root].fr=t[root<<1|1].fr;//\u5927\u533a\u95f4\u7684\u53f3\u7aef\u70b9\n\t\tt[root].f=t[root<<1].f+t[root<<1|1].f-(t[root<<1].fr&t[root<<1|1].fl);//\u5982\u679c\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9\u548c\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\u90fd\u88ab\u8986\u76d6\uff0c\u90a3\u6761\u6570\u5c31\u8981\u51cf1\n\t\treturn ;\n\t}\n}\nvoid updata(int root,int l,int r,int al,int ar,int k)\n{\n\tif(l>ar||r<al)\treturn ;\n\tif(l>=al&&r<=ar)\n\t{\n\t\tt[root].ha+=k;//\u86e4\u5478\uff0cha\u4e3a\u88ab\u6574\u4f53\u8986\u76d6\u7684\u6b21\u6570\uff0c\u6709\u53ef\u80fd\u88ab\u591a\u6b21\u8986\u76d6\n\t\tpush_up(root,l,r);//\u66f4\u65b0\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tupdata(root<<1,l,mid,al,ar,k);\n\tupdata(root<<1|1,mid+1,r,al,ar,k);\n\tpush_up(root,l,r);//\u5408\u5e76\uff0c\u8fd9\u91cc\u6ca1\u6709push_down\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a,b,c,d;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\tadd(a,b,c,d);//\u4fdd\u5b58\u8fb9\uff0c\u6211\u4eec\u8fd9\u91cc\u53ea\u9700\u8981\u5b58\u4e0e\u6211\u4eec\u626b\u63cf\u7ebf\u5e73\u884c\u7684\u8fb9\uff0c\u7136\u540e\u6211\u662f\u81ea\u4e0b\u800c\u4e0a\u7684\u3002\u6240\u4ee5\u6211\u5b58\u7684\u662f\u4e0a\u4e0b\u8fb9\uff0c\u7136\u540e\u8bf7\u4ed4\u7ec6\u770badd\u51fd\u6570   -\u300badd\n\t\tdatx[++tx]=a,datx[++tx]=c;//\u7528\u4e8e\u79bb\u6563\u5316\u7684\u6570\u7ec4\uff0c\u5f53\u7136\u6570\u636e\u5c0f\u7684\u8bdd\u53ef\u4ee5\u4e0d\u79bb\u6563\u5316\n\t}\n\tsort(line+1,line+1+te,compare);//\u6392\u5e8f\uff0c\u6709\u91cd\u8fb9\u4e00\u5b9a\u8981\u4e0b\u8fb9\u5148\u88ab\u5904\u7406\n\tsort(datx+1,datx+1+tx);//\u79bb\u6563\u5316\n\tmake_base();//\u771f\u79bb\u6563\u5316\n\tbuild(1,1,k-1);//\u5efa\u6811\uff0c\u6ce8\u610fk\u4e3a\u79bb\u6563\u5316\u540e\u7684\u5750\u6807\u4e2a\u6570\uff0c\u8fd9\u91cc\u8981\u5efa\u7acbk-1\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u7ebf\u6bb5\u6811\u4e2d\u5b58\u7684\u662f\u76f8\u90bb\u4e24\u4e2a\u5750\u6807\u4e4b\u95f4\u7684\u95f4\u9699\n\tint ans=0; //\u5468\u957f\n\tint last=0;//\u7528\u4e8e\u8bb0\u5f55\u4e24\u6b21\u626b\u63cf\u7684\u88ab\u8986\u76d6\u7684\u957f\u5ea6\u7684\u53d8\u91cf\n\tfor(int i=1;i<=te;i++)\n\t{\n\t\tint pos1=check(line[i].x1),pos2=check(line[i].x2);//\u4e8c\u5206\u67e5\u627e\u79bb\u6563\u5316\u540e\u7684\u4f4d\u7f6e\n\t\tupdata(1,1,k-1,pos1,pos2-1,line[i].f);//\u66f4\u65b0\uff0c\u8fd9\u91cc\u5c31\u4f53\u73b0\u51fa\u6211\u4eec\u6807\u8bb0\u4e0a\u4e0b\u8fb9\u7684\u597d\u5904\u4e86\n\t\tint pas=t[1].len;//\u6700\u8fd1\u4e00\u6b21\u626b\u63cf\u7684\u957f\u5ea6\n\t\tans+=abs(last-pas);//\u5904\u7406\u5e73\u884c\u8fb9\n\t\tans+=t[1].f*2*(line[i+1].y-line[i].y);//\u5904\u7406\u5782\u76f4\u8fb9\uff0c\u4e00\u5b9a\u8981\u4e0e\u540e\u4e00\u4e2a\u5f85\u626b\u63cf\u7ebf\u4e4b\u95f4\u7684\u8ddd\u79bb\n\t\tlast=pas; //\u8fed\u4ee3\n\t}\n\tprintf(\"%d\",ans);\n}\n\n```",
        "postTime": 1529492422,
        "uid": 28007,
        "name": "Lance1ot",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u6839\u672c\u4e0d\u9700\u8981\u4ec0\u4e48\u8986\u76d6\u5c42\u6570\uff0c\u76f4\u63a5\u6392\u5e8f+\u66b4\u529b\u5c31\u80fd\u8dd1\u51fa0ms.\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4highest\uff0chighest[i]\u5b58\u50a8[i, i+1)\u8fd9\u6761\u7ebf\u6bb5\u4e0a\u6240\u6709\u5df2\u7ecf\u641c\u8fc7\u7684\u77e9\u5f62\u7684\u6700\u9ad8\u7684\u4e0a\u8fb9\u7684\u9ad8\u5ea6\u3002\u5982\u679c\u73b0\u5728\u6b63\u5728\u641c\u7684\u77e9\u5f62\u7684\u6700\u4f4e\u8fb9\u9ad8\u4e8e\u5df2\u7ecf\u641c\u8fc7\u7684\uff0c\u5219\u4e2d\u95f4\u5c31\u4f1a\u6709\u4e00\u5c42\u6ca1\u8d34\u7684\uff0c\u4e8e\u662f\u9700\u8981\u8ba1\u5165\u603b\u5468\u957f\u3002\n\n\u600e\u4e48\u5904\u7406\u80fd\u4f7f\u5f97\u641c\u5230\u8fd9\u4e2a\u77e9\u5f62\u65f6\uff0c\u6240\u641c\u5230\u7684\u6700\u9ad8\u7684\u4e0a\u8fb9\u7684\u9ad8\u5ea6\u4e0d\u518d\u4f1a\u8986\u76d6\u6389\u8fd9\u4e2a\u77e9\u5f62\u5462\uff1f\u5176\u5b9e\u53ea\u8981\u6839\u636e\u77e9\u5f62\u7684\u4e0b\u8868\u9762\u4ece\u4e0b\u81f3\u4e0a\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u4ee5\u540e\u641c\u5230\u7684\u77e9\u5f62\u53ea\u4f1a\u5f80\u4e0a\u8d70\uff0c\u6700\u9ad8\u503c\u53ea\u4f1a\u8d8a\u6765\u8d8a\u9ad8\uff0c\u800c\u4e0d\u4f1a\u7a81\u7136\u53c8\u641c\u5230\u4e0b\u9762\u7684\u77e9\u5f62\uff0c\u5bfc\u81f4\u91cd\u590d\u7edf\u8ba1\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n log n + n \u00d7 (maxx - minx) + n \u00d7 (maxy - miny))\u3002\u5982\u679c\u52a0\u5165\u79bb\u6563\uff0c\u5219\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2)\u3002\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n\n//\u6bcf\u4e2a\u77e9\u5f62\u7684\u6570\u636e\nstruct data {\n    int lx,rx; //\u8be5\u77e9\u5f62\u6700\u5de6\u4fa7\u7684\u6a2a\u5750\u6807\u4e0e\u6700\u53f3\u4fa7\u7684\u6a2a\u5750\u6807\n    int ly,ry; //\u7eb5\u5750\u6807\u540c\u7406\n};\n\nconst int maxn=5000, maxx=20000;\nint n;\ndata a[maxn+1]; \nint highest[maxx+1]; //\u5df2\u641c\u5230\u7684\u6700\u9ad8\u77e9\u5f62\u4e0a\u8fb9\u754c\u7684\u9ad8\u5ea6 \n\nbool cmp_x(data x, data y) { return x.lx<y.lx; }\n\nbool cmp_y(data x, data y) { return x.ly<y.ly; }\n\nvoid kuaidu(int &p) {\n    char c; int f=1; p=0;\n    do { c=getchar(); if (c=='-') f=-1; } while (c<'0'||c>'9');\n    do p=p*10+c-'0', c=getchar(); while (c>='0'&&c<='9');\n    p*=f;\n}\n\nvoid init() {\n    kuaidu(n);\n    for (int i=1; i<=n; i++) {\n        kuaidu(a[i].lx); kuaidu(a[i].ly); kuaidu(a[i].rx); kuaidu(a[i].ry);\n        //\u4f7f\u6240\u6709\u5750\u6807\u53d8\u4e3a\u6b63\u6570\n        a[i].lx+=10001; a[i].ly+=10001; a[i].rx+=10001; a[i].ry+=10001;\n    }\n}\n\nint solve_x() {\n    memset(highest,-1,sizeof(highest));\n    int ans=0;\n    //\u6839\u636e\u4e0b\u5e95\u7684\u9ad8\u5ea6\uff0c\u5bf9\u6240\u6709\u77e9\u5f62\u6392\u5e8f\n    sort(a+1,a+1+n,cmp_x);\n    for (int i=1; i<=n; i++)\n        for (int j=a[i].ly; j<a[i].ry; j++) { //\u5904\u7406\u533a\u95f4[j,j+1)\n            //\u6b63\u5728\u5904\u7406\u7684\u77e9\u5f62\u4e0b\u8fb9\u754c\u9ad8\u4e8e\u5df2\u7ecf\u641c\u5230\u8fc7\u7684\u6240\u6709\u77e9\u5f62\u7684\u6700\u9ad8\u7ebf\n            //\u6240\u4ee5\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\u591a\u4e86\u4e00\u4e2a\u77e9\u5f62\uff0c\u7b54\u6848\u52a0\u4e0a\u4e0a\u4e0b\u8fb9\u7684\u957f\u5ea6(2)\n            if (highest[j]<a[i].lx) ans+=2;\n            //\u66f4\u65b0\u5df2\u641c\u5230\u7684\u77e9\u5f62\u533a\u95f4[j,j+1)\u7684\u6700\u9ad8\u7684\u7ebf\u7684\u9ad8\u5ea6\n            if (highest[j]<a[i].rx) highest[j]=a[i].rx;\n        }\n    return ans;\n}\n\n//y\u8f74\u540c\u7406\nint solve_y() {\n    memset(highest,-1,sizeof(highest));\n    int ans=0;\n    sort(a+1,a+1+n,cmp_y);\n    for (int i=1; i<=n; i++)\n        for (int j=a[i].lx; j<a[i].rx; j++) {\n            if (highest[j]<a[i].ly) ans+=2;\n            if (highest[j]<a[i].ry) highest[j]=a[i].ry;\n        }\n    return ans;\n}\n\nint main() {\n    init();\n    printf(\"%d\\n\",solve_x()+solve_y());\n    return 0;\n}\n```",
        "postTime": 1515499407,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "## \u849f\u84bb\u7248\u626b\u63cf\u7ebf\u8bb2\u89e3(\u6ca1\u79bb\u6563,\u592a\u5f31\u4e86QWQ)\n#### \u5173\u4e8e\u626b\u63cf\u7ebf\n\u9996\u5148,\u6211\u4eec\u9700\u8981\u77e5\u9053\u8fd9\u662f\u4e2a\u4ec0\u4e48\u73a9\u610f.\u4ee5\u6211\u7684\u7406\u89e3,\u5c31\u662f\u5728\u9700\u8981\u626b\u63cf\u6574\u4e2a\u4e8c\u7ef4\u5e73\u9762\u7684\u65f6\u5019,\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u7ef4\u4e2d\u6211\u4eec\u9700\u8981\u7684\u7b54\u6848,\u4f7f\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3nlogn\u7ea7\u522b.(\u6ca1\u6709\u79bb\u6563\u5316\u7684\u626b\u63cf\u7ebf\u548c\u666e\u901a\u7ebf\u6bb5\u6811\u6ca1\u4ec0\u4e48\u533a\u522b,\u666e\u901a\u7ebf\u6bb5\u6811\u4e0d\u4e5f\u662f\u52a8\u6001\u7ef4\u62a4\u5417?\u626b\u63cf\u7ebf\u53ea\u662f\u628a\u95ee\u9898\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u5750\u6807\u8ba9\u4f60\u4fee\u6539,\u6700\u540e\u56de\u7b54\u800c\u5df2)\n#### \u5173\u4e8e\u9898\u76ee\n\u8fd9\u662f\u626b\u63cf\u7ebf\u7684\u7ecf\u5178\u4f8b\u9898(\u5176\u4ed6\u7684\u8fd8\u6709[\u7b97\u9762\u79ef](https://www.luogu.org/problemnew/show/P2061),[\u7b97\u533a\u95f4\u91cc\u70b9\u4e2a\u6570](https://www.luogu.org/problemnew/show/P1502)\u7b49,\u4e5f\u53ef\u4ee5\u5237\u5237\u6765\u5de9\u56fa\u4e00\u4e0b),\u6211\u4eec\u5148\u8ba1\u7b97\u6a2a\u8fb9\u7684\u5468\u957f,\u5982\u679c\u7528\u4e00\u6761\u7ebf,\u4e00\u4e2a\u6a2a\u5750\u6807,\u4e00\u4e2a\u6a2a\u5750\u6807\u5730\u626b,\u6211\u4eec\u4f1a\u53d1\u73b0,\u5f53\u626b\u5230\u7684\u77e9\u5f62\u88ab\u8986\u76d6\u7684\u70b9\u7684\u4e2a\u6570\u53d1\u751f\u53d8\u5316\u65f6,\u5c31\u8bf4\u660e\u5468\u957f\u53d8\u5316\u4e86!\u4f60\u4eec\u770b\u770b\u9898\u76ee\u7684\u4e24\u5e45\u56fe\u5e94\u8be5\u80fd\u7406\u89e3(\u521a\u6362\u6210ubuntu\u7684\u64cd\u4f5c\u7cfb\u7edf,\u8fd8\u6ca1\u88c5\u753b\u56fe)~~(\u522b\u72e1\u8fa9\u4e86\u4f60\u5c31\u662f\u61d2)~~\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u5f53\u524d\u533a\u95f4\u5185\u88ab\u6700\u5c11\u77e9\u5f62\u8986\u76d6\u7684\u70b9\u7684\u4e2a\u6570,\u6bcf\u6b21\u7edf\u8ba1\u6574\u4e2a\u626b\u63cf\u7ebf\u4e0a\u6ca1\u6709\u88ab\u77e9\u5f62\u8986\u76d6\u7684\u4e2a\u6570,\u4e0e\u4e0a\u4e00\u4e2a\u5750\u6807\u5bf9\u6bd4,\u53d8\u5316\u91cf\u5c31\u662f\u5468\u957f\u7684\u4e00\u90e8\u5206.\n\n\u989d,\u5173\u4e8e\u5982\u4f55\u6c42\u7ad6\u8fb9\u7684\u5468\u957f\u561b...swap\u6a2a\u7eb5\u5750\u6807\u518d\u626b\u4e00\u6b21\u5427(\u9003\n#### \u5173\u4e8e\u6570\u636e\n\u8fd9\u4e00\u9898\u6570\u636e\u4e5f\u975e\u5e38\u7684\u826f\u5fc3,\u5750\u6807\u53ea\u7ed9\u523020000\u4e2a\u70b9,n\u90fd\u67095000,\u4fd7\u8bdd\u8bf4\u5f97\u597d,\u6570\u636e\u51b3\u5b9a\u7b97\u6cd5,\u8fd9\u6837\u7684\u6570\u636e\u5b9e\u5728\u6ca1\u6709\u79bb\u6563\u5316\u7684\u5fc5\u8981,\u6240\u4ee5\u4ee3\u7801\u771f\u7684\u548c\u7ebf\u6bb5\u6811\u6a21\u677f\u5dee\u4e0d\u591a.\n#### \u7f16\u7a0b\u7ec6\u8282\n1.\u6211\u4eec\u8f93\u5165\u7684\u4e24\u4e2a\u5750\u6807x1,x2\u90fd\u662f\u4e00\u4e2a\u70b9,\u4f46\u77e9\u5f62\u7684\u5b9e\u9645\u8fb9\u957f\u662f\u8fd9\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb,\u5373x2-x1,\u800c\u7531\u4e8e\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u662f\u95ed\u533a\u95f4,\u5982\u679c\u5199x1,x2\u7684\u8bdd\u8fb9\u957f\u5c31\u53d8\u6210\u4e86x2-x1+1,\u6240\u4ee5\u8ba1\u7b97\u65f6\u7b2c\u4e8c\u4e2a\u70b9\u5750\u6807\u8981-1~~(\u611f\u6027\u7406\u89e3\u4e0b)~~\n2.\u8bb0\u5f97\u6e05\u96f6!!!\u5c24\u5176\u662f\u61d2\u6807\u8bb0!!!\n3.\u6700\u597d\u4e0d\u7528y1,y2,\u6211\u524d\u9762\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u5bfc\u81f4\u62a5\u9519,\u540e\u9762\u6539\u7684\u53d8\u91cf\u540d\u6709\u70b9\u5947\u8469,\u65e0\u6240\u8c13.\n#### \u4ee3\u7801&\u6ce8\u91ca\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define Ls (nod<<1)\n#define Rs (nod<<1|1)\n#define mid ((l+r)>>1)\nstruct data{\n    int x1,x2,y,kind;\n}w[15005];\nbool cmp(data a,data b){\n    if(a.y!=b.y)return a.y<b.y;\n    return a.kind>b.kind;\n}//\u6309\u7eb5\u5750\u6807\u6392\u5e8f\nstruct Tree{\n    int cnt,line,add;\n    //line \u5f53\u524d\u533a\u95f4\u6700\u5c11\u6709\u51e0\u4e2a\u77e9\u5f62\u8986\u76d6;cnt \u88ab\u6700\u5c11\u77e9\u5f62\u8986\u76d6\u7684\u70b9\u7684\u4e2a\u6570;add \u61d2\u6807\u8bb0\n}tree[400005];\nint n,x1[15005],x2[15005],Y[15005],yLG[15005],ans;\nvoid pushup(int nod){//\u7ef4\u62a4\n    tree[nod].line=min(tree[Ls].line,tree[Rs].line);\n    if(tree[Ls].line==tree[Rs].line)\n        tree[nod].cnt=tree[Ls].cnt+tree[Rs].cnt,tree[nod].line=tree[Ls].line;\n    else\n        tree[nod].cnt=(tree[Ls].line<tree[Rs].line)?tree[Ls].cnt:tree[Rs].cnt;\n        //\u6ce8\u610f:cnt\u53ea\u8bb0\u5f55\u88ab\u6700\u5c11\u77e9\u5f62\u8986\u76d6\u7684\u70b9\u6570\n}\nvoid pushdown(int nod){//\u61d2\u6807\u8bb0\u4e0b\u4f20\n    tree[Ls].line+=tree[nod].add;\n    tree[Rs].line+=tree[nod].add;\n    tree[Ls].add+=tree[nod].add;\n    tree[Rs].add+=tree[nod].add;\n    tree[nod].add=0;\n}\nvoid build(int nod,int l,int r){//\u5efa\u6811(\u6e05\u96f6)\n    tree[nod].add=0;//\u7279\u522b\u6ce8\u610f!!!\u61d2\u6807\u8bb0\u4e0d\u80fd\u5728\u4e0b\u9762\u6e05\u7a7a!\n    if(l==r){tree[nod].line=0;tree[nod].cnt=1;return;}\n    build(Ls,l,mid);\n    build(Rs,mid+1,r);\n    pushup(nod);\n}\nvoid pluss(int nod,int l,int r,int b,int e,int ad){//\u4fee\u6539\n    if(l>r||l>e||r<b) return;\n    if(b<=l&&r<=e){tree[nod].add+=ad;tree[nod].line+=ad;return;}\n    pushdown(nod);\n    pluss(Ls,l,mid,b,e,ad);\n    pluss(Rs,mid+1,r,b,e,ad);\n    pushup(nod);\n}\nvoid solve(){\n    for(int i=1;i<=n;i++){\n        int before=tree[1].cnt*(tree[1].line==0);//\u5982\u679c\u6240\u6709\u70b9\u90fd\u88ab\u81f3\u5c11\u4e00\u4e2a\u77e9\u5f62\u8986\u76d6,\u90a3\u4e48\u8fd9\u4e2acnt\u5c31\u4e0d\u80fd\u4ee3\u8868\u6ca1\u6709\u88ab\u8986\u76d6\u7684\u70b9\n        pluss(1,-10000,10000,w[i].x1,w[i].x2-1,w[i].kind);\n        int now=tree[1].cnt*(tree[1].line==0);//\u540c\u4e0a\n        ans+=abs(now-before);//\u6c42\u53d8\u5316\u91cf\n    }\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d%d%d\",&x1[i],&Y[i],&x2[i],&yLG[i]);//\n        w[i*2-1].x1=w[i*2].x1=x1[i];\n        w[i*2-1].x2=w[i*2].x2=x2[i];\n\n        w[i*2-1].y=Y[i];\n        w[i*2].y=yLG[i];\n\n        w[i*2-1].kind=1;\n        w[i*2].kind=-1;\n        //\u8bb0\u5f55\n    }\n    n*=2;\n    sort(w+1,w+1+n,cmp);\n    build(1,-10000,10000);\n    solve();//\u6a2a\u8fb9\n    for(int i=2;i<=n;i+=2){\n        w[i-1].x1=w[i].x1=Y[i/2];\n        w[i-1].x2=w[i].x2=yLG[i/2];\n        w[i-1].y=x1[i/2];\n        w[i].y=x2[i/2];\n        w[i-1].kind=1;\n        w[i].kind=-1;\n    }\n    sort(w+1,w+1+n,cmp);\n    build(1,-10000,10000);\n    solve();//\u7ad6\u8fb9\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1550369264,
        "uid": 7480,
        "name": "skydogli",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "\r\n\u6b63\u89e3\uff1a\u7ebf\u6bb5\u6811+\u626b\u63cf\u7ebf\uff08\u53c8\u79f0\u79bb\u6563\u5316\u626b\u63cf\uff09\r\n\r\n\u4e00\u4e2a\u4f18\u79c0\u7684\u6570\u636e\u7ed3\u6784\u548c\u4e00\u4e2a\u795e\u5947\u7b97\u6cd5\uff0c\u53ef\u60dc\u6211\u90fd\u4e0d\u719f\u2026\u2026\u76f8\u4fe1\u6b63\u89e3\u5176\u4ed6\u5927\u4f6c\u90fd\u5df2\u7ecf\u8bb2\u8db3\u4e86\uff0c\u6211\u5c31\u6765\u5206\u4eab\u4e00\u4e0b\u672c\u849f\u84bb\u7684\u7384\u5b66\u65b9\u6cd5\r\n\r\n\u5206\u6cbb+\u6392\u5e8f+\u4e8c\u5206\r\n\r\n\u672c\u9898\u7684\u9ebb\u70e6\u4e4b\u5904\u5c31\u5728\u4e8e\u77e9\u5f62\u4e0e\u77e9\u5f62\u4e4b\u95f4\u6709\u91cd\u53e0\u533a\u57df\uff0c\u5982\u679c\u82e5\u5e72\u77e9\u9635\u6ca1\u6709\u91cd\u53e0\u533a\u57df\uff0c\u90a3\u4e48\u5468\u957f\u4f1a\u6bd4\u8f83\u597d\u5904\u7406\u3002\r\n\r\n\u4e8e\u662f\uff0c\u5148\u7528\u77e9\u5f62\u5207\u5272\u5206\u6cbb\u51fa\u82e5\u5e72\u4e92\u4e0d\u91cd\u53e0\u7684\u77e9\u9635\u2026\u2026\u7b49\u7b49\uff0c\u77e9\u5f62\u5207\u5272\u662f\u4ec0\u4e48\uff1f\r\n\r\n![](https://cdn.luogu.com.cn/upload/pic/61023.png)\r\n\r\n\u73b0\u5728\u6709\u4e00\u4e2a\u77e9\u5f62\r\n\r\n![](https://cdn.luogu.com.cn/upload/pic/61024.png)\r\n\r\n\u7a81\u7136\u51fa\u73b0\u4e86\u53e6\u4e00\u4e2a\u77e9\u5f62\u4e0e\u5b83\u76f8\u4ea4\u4e86\uff0c\u5219\u5982\u4e4b\u4f55\uff1f\r\n\r\n![](https://cdn.luogu.com.cn/upload/pic/61025.png)\r\n\r\n\u8fd9\u6837\u5207\u6210\u4e24\u4e2a\u77e9\u5f62\u5c31\u884c\u4e86\r\n\r\n\u540c\u6837\uff0c\u5982\u679c\u5176\u5b83\u77e9\u5f62\u4e5f\u4e0e\u5207\u5272\u540e\u7684\u77e9\u5f62\u91cd\u53e0\u4e86\uff0c\u8fd8\u8981\u518d\u8fdb\u884c\u5207\u5272\r\n\r\n```cpp\r\nvoid Partition(int depth,Square now)\r\n{\r\n    if(now.Impossible()) return;//\u77e9\u9635\u4e0d\u53ef\u80fd\u5b58\u5728\r\n    if(depth>n)//\u6700\u7ec8\u4e0d\u91cd\u53e0\u90e8\u5206\r\n    {\r\n        basic[++num]=now;//\u8ba1\u5165\u5e76\u4fdd\u7559\r\n        return;\r\n    }\r\n    Square U=Uarea(now,paper[depth]);//\u516c\u5171\u90e8\u5206\r\n    if(U.Impossible() || !U.InArea(now)) {Partition(depth+1,now);return;}\r\n\t//\u6ca1\u6709\u516c\u5171\u90e8\u5206\u6216\u8005\u516c\u5171\u90e8\u5206\u4e0d\u5728\u77e9\u5f62\u5185\u5c31\u8df3\u8fc7\r\n    Square rear[4];\r\n    rear[0]={Point{now.lef_dow.x,U  .rig_up .y},Point{U  .rig_up.x,now.rig_up .y}};\r\n    rear[1]={Point{U  .rig_up .x,U  .lef_dow.y},now.rig_up                       };\r\n    rear[2]={Point{U  .lef_dow.x,now.lef_dow.y},Point{now.rig_up .x,U .lef_dow.y}};\r\n    rear[3]={now.lef_dow                       ,Point{U  .lef_dow.x,U .rig_up .y}};\r\n    for(int i=0;i<4;i++) Partition(depth+1,rear[i]);//\u5206\u5272\u6210\u56db\u5757\uff0c\u5f53\u7136\u6709\u4e9b\u5230\u540e\u9762\u662f\u4f1a\u88ab\u820d\u5f03\u7684\r\n}\r\n```\r\n\r\n\r\n\r\n------------\r\n\r\n\u597d\u4e86\u73b0\u5728\u5f97\u5230\u4e86\u5f88\u591a\u4e0d\u91cd\u53e0\u7684\u77e9\u5f62\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u8981\u7b97\u5468\u957f\u4e86\r\n\r\n\u5982\u679c\u8981\u8ba1\u7b97\u4e00\u4e2a\u77e9\u5f62\u4e00\u6761\u8fb9\u7684\u8fb9\u957f\uff0c\u5f97\u627e\u5230\u6240\u6709\u8ddf\u8fd9\u6761\u8fb9\u6709\u91cd\u53e0\u7684\u5176\u5b83\u77e9\u5f62\u7684\u8fb9\uff0c\u7136\u540e\u8fdb\u884c\u7ebf\u6bb5\u5206\u5272\uff08\u4e00\u7ef4\u77e9\u5f62\u5206\u5272\uff09\uff0c\u6c42\u51fa\u8fd9\u6761\u8fb9\u4e0d\u4e0e\u5176\u5b83\u8fb9\u91cd\u5408\u90e8\u5206\u7684\u603b\u957f\uff0c\u5c31\u884c\u4e86\r\n\r\n![](https://cdn.luogu.com.cn/upload/pic/61026.png)\r\n\r\n### \u4f46\u662f\uff01\r\n\r\n\u4ee5 O(n^2) \u7b97\u6cd5\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\u7684\u91cd\u53e0\u60c5\u51b5\u80af\u5b9a\u662f\u4f1a\uff0c\u8d85\u65f6\u7684\uff0c\u6240\u4ee5\u5f97\u53e6\u52a0\u4f18\u5316\r\n\r\n\u73b0\u5728\u60f3\u8c61\u4f60\u8981\u6c42\u4e00\u4e2a\u77e9\u5f62\u7684\u5de6\u8fb9\u957f\u6709\u591a\u5c11\u662f\u8ba1\u5165\u603b\u5468\u957f\u7684\uff0c\u5982\u679c\u4e0e\u5176\u5b83\u8fb9\u91cd\u5408\uff0c\u5b83\u4eec\u7684 x\u8f74 \u5750\u6807\u80af\u5b9a\u662f\u76f8\u7b49\u7684\u3002\u4e3a\u4e86\u5feb\u901f\u627e\u5230\u6709\u54ea\u4e9b\u77e9\u5f62\u7684\u8fb9\u662f\u8ddf\u8fd9\u6761\u8fb9\u91cd\u5408\u7684\uff0c\u8003\u8651\u4e8c\u5206\r\n\r\n\u77e9\u5f62\u5148\u6309\u53f3\u8fb9 x\u8f74 \u5750\u6807\u6392\u5e8f\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u90a3\u4e48\u6309\u4e0b\u8fb9 y\u8f74 \u6392\u5e8f\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u77e9\u5f62\u4e0b\u8fb9\u7684 y\u8f74 \u5750\u6807\u6bd4\u6211\u7684\u4e0a\u8fb9\u7684 y\u8f74 \u5750\u6807\u8fd8\u8981\u5927\uff0c\u53ef\u4ee5\u5224\u65ad\u540e\u9762\u4e00\u5b9a\u518d\u6ca1\u6709\u8fb9\u4e0e\u5b83\u91cd\u5408\u4e86\uff0c\u53ef\u4ee5\u63d0\u524d\u9000\u51fa\u9012\u5f52\u52a0\u5feb\u901f\u5ea6\r\n\r\n\u540c\u6837\uff0c\u5bf9\u5de6\u8fb9\u7684\u5904\u7406\u65b9\u5f0f\u4e5f\u53ef\u4ee5\u62d3\u5c55\u5230\u4e0a\u8fb9\u3001\u53f3\u8fb9\u3001\u4e0b\u8fb9\u4e0a\uff0c\u6240\u4ee5\u540e\u9762\u53ef\u4ee5\u770b\u89c1\u4ee3\u7801\u662f\u5f88\u6709\u89c4\u5f8b\u7684\r\n\r\n```cpp\r\n//                    \u904d\u5386\u5230\u7684\u77e9\u5f62\u7f16\u53f7           \u4e0a\u9762 y\u5750\u6807 \u81ea\u5df1\u7684\u7f16\u53f7\r\nint Lef_Rig_SideLength(int depth,int dow,int up,int end,int self)\r\n//                             \u5782\u76f4\u7ebf\u6bb5\u7684\u4e0b\u9762 y\u5750\u6807\r\n{\r\n    if(dow>=up) return 0;//\u7ebf\u6bb5\u4e0d\u53ef\u80fd\u5b58\u5728\r\n    if(depth>end || up<=basic[depth].lef_dow.y) return up-dow;//\u6ca1\u6709\u518d\u8ddf\u5b83\u91cd\u5408\u7684\u8fb9\u4e86\r\n    if(depth==self || dow>=basic[depth].rig_up.y) return Lef_Rig_SideLength(depth+1,dow,up,end,self);//\u6ca1\u6709\u4ea4\u96c6\u6216\u627e\u5230\u4e86\u81ea\u5df1\uff0c\u90a3\u5c31\u8df3\u8fc7\r\n    return Lef_Rig_SideLength(depth+1,dow                           ,min(basic[depth].lef_dow.y,up),end,self)\r\n           +\r\n           Lef_Rig_SideLength(depth+1,max(basic[depth].rig_up.y,dow),up                            ,end,self);//\u5206\u6210\u4e24\u6bb5\r\n}\r\n\r\nint Up_Dow_SideLength (int depth,int lef,int rig,int end,int self)//\u8ddf\u8ba1\u7b97\u6c34\u5e73\u8fb9\u7684\u957f\u5ea6\u5dee\u4e0d\u591a\r\n{\r\n    if(lef>=rig) return 0;\r\n    if(depth>end || rig<=basic[depth].lef_dow.x) return rig-lef;\r\n    if(depth==self || lef>=basic[depth].rig_up.x) return Up_Dow_SideLength(depth+1,lef,rig,end,self);\r\n    return Up_Dow_SideLength(depth+1,lef                  ,min(basic[depth].lef_dow.x,rig),end,self)\r\n           +\r\n           Up_Dow_SideLength(depth+1,max(basic[depth].rig_up.x,lef),rig                   ,end,self);\r\n}\r\n```\r\n\u8fd9\u662f\u4e00\u7ef4\u77e9\u5f62\u5206\u5272\u7684\u4ee3\u7801\r\n```cpp\r\n //\u8ba1\u7b97\u5de6\u8fb9\u957f\r\n    sort(basic+1,basic+num+1,RigXorder);\r\n    for(int i=1;i<=num;i++)\r\n    {\r\n        //\u627e\u5230 rig_up.x \u4e0e\u8fd9\u4e2a\u65b9\u5757 lef_dow.x \u4e00\u6837\u7684\u65b9\u5757 \r\n        int L=1,R=num;\r\n        while(L<=R)//\u7b2c\u4e00\u4e2a x\u5750\u6807 \u76f8\u7b49\u7684\u77e9\u5f62\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].rig_up.x>=basic[i].lef_dow.x) R=mid-1;\r\n            else L=mid+1;\r\n        }\r\n        int bef=L;\r\n        R=num;\r\n        while(L<=R)//\u6700\u540e\u4e00\u4e2a\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].rig_up.x<=basic[i].lef_dow.x) L=mid+1;\r\n            else R=mid-1;\r\n        }\r\n        int aft=R;\r\n        ans+=Lef_Rig_SideLength(bef,basic[i].lef_dow.y,basic[i].rig_up.y,aft,i);\r\n    }\r\n    //\u8ba1\u7b97\u53f3\u8fb9\u957f\r\n    sort(basic+1,basic+num+1,LefXorder);\r\n    for(int i=1;i<=num;i++)\r\n    {\r\n        //\u627e\u5230 lef_dow.x \u4e0e\u8fd9\u4e2a\u65b9\u5757 rig_up.x \u4e00\u6837\u7684\u65b9\u5757 \r\n        int L=1,R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].lef_dow.x>=basic[i].rig_up.x) R=mid-1;\r\n            else L=mid+1;\r\n        }\r\n        int bef=L;\r\n        R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].lef_dow.x<=basic[i].rig_up.x) L=mid+1;\r\n            else R=mid-1;\r\n        }\r\n        int aft=R;\r\n        ans+=Lef_Rig_SideLength(bef,basic[i].lef_dow.y,basic[i].rig_up.y,aft,i);\r\n    }\r\n    //\u8ba1\u7b97\u4e0a\u8fb9\u957f\r\n    sort(basic+1,basic+num+1,DowYorder);\r\n    for(int i=1;i<=num;i++)\r\n    {\r\n        //\u627e\u5230 lef_dow.x \u4e0e\u8fd9\u4e2a\u65b9\u5757 rig_up.x \u4e00\u6837\u7684\u65b9\u5757 \r\n        int L=1,R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].lef_dow.y>=basic[i].rig_up.y) R=mid-1;\r\n            else L=mid+1;\r\n        }\r\n        int bef=L;\r\n        R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].lef_dow.y<=basic[i].rig_up.y) L=mid+1;\r\n            else R=mid-1;\r\n        }\r\n        int aft=R;\r\n        ans+=Up_Dow_SideLength(bef,basic[i].lef_dow.x,basic[i].rig_up.x,aft,i);\r\n    }\r\n    //\u8ba1\u7b97\u4e0b\u8fb9\u957f\r\n    sort(basic+1,basic+num+1,UpYorder);\r\n    for(int i=1;i<=num;i++)\r\n    {\r\n        //\u627e\u5230 lef_dow.x \u4e0e\u8fd9\u4e2a\u65b9\u5757 rig_up.x \u4e00\u6837\u7684\u65b9\u5757 \r\n        int L=1,R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].rig_up.y>=basic[i].lef_dow.y) R=mid-1;\r\n            else L=mid+1;\r\n        }\r\n        int bef=L;\r\n        R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].rig_up.y<=basic[i].lef_dow.y) L=mid+1;\r\n            else R=mid-1;\r\n        }\r\n        int aft=R;\r\n        ans+=Up_Dow_SideLength(bef,basic[i].lef_dow.x,basic[i].rig_up.x,aft,i);\r\n    }\r\n```\r\n\u8fd9\u662f\u6392\u5e8f+\u4e8c\u5206\u7684\u90e8\u5206\r\n\r\n------------\r\n\r\n\u6700\u540e\u4e0a\u603b\u4ee3\u7801\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n/*(\r\n--------------------- \r\n\u4f5c\u8005\uff1a\u9690\u8005_ \r\n\u6765\u6e90\uff1aCSDN \r\n\u539f\u6587\uff1ahttps://blog.csdn.net/qq_31975227/article/details/51758461 \r\n\u7248\u6743\u58f0\u660e\uff1a\u672c\u6587\u4e3a\u535a\u4e3b\u539f\u521b\u6587\u7ae0\uff0c\u8f6c\u8f7d\u8bf7\u9644\u4e0a\u535a\u6587\u94fe\u63a5\uff01\r\n\u8fd9\u4e2a\u4f5c\u8005\u63d0\u4f9b\u4e86\u6211\u65b9\u4fbf\u7684debug\u65b9\u6cd5\u2026\u2026\r\n*/\r\n\r\nbool inseg(int bef,int ob,int aft)\r\n{return bef<=ob && ob<=aft;}\r\n\r\nstruct Point\r\n{\r\n    int x,y;\r\n    void Scan () {scanf(\"%d %d\",&x,&y);}\r\n    void Print() {cout<<x<<' '<<y     ;}\r\n};\r\n\r\nstruct Square\r\n{\r\n    Point lef_dow,rig_up;\r\n    void Scan () {lef_dow.Scan(),rig_up.Scan();}\r\n    void Print() {lef_dow.Print(),cout<<\"  \",rig_up.Print(),cout<<endl;}\r\n    bool Impossible()\r\n    {\r\n        int L=rig_up.x-lef_dow.x;\r\n        int W=rig_up.y-lef_dow.y;\r\n        return (W<=0 || L<=0);\r\n    }\r\n    bool InArea(Square ob)\r\n    {\r\n        return inseg(ob.lef_dow.x,lef_dow.x,ob.rig_up.x)\r\n               &&\r\n               inseg(ob.lef_dow.x,rig_up .x,ob.rig_up.x)\r\n               &&\r\n               inseg(ob.lef_dow.y,lef_dow.y,ob.rig_up.y)\r\n               &&\r\n               inseg(ob.lef_dow.y,rig_up .y,ob.rig_up.y);\r\n    }\r\n}paper[5001],basic[100001];int num;\r\n\r\nint n,ans;\r\n/*\r\n    \u4ece\u540e\u5f80\u524d\u904d\u5386\r\n    \u78b0\u5230\u91cd\u53e0\u7684\u5c31\u628a\u5b83\u6253\u6563\r\n*/\r\n\r\nSquare Uarea(Square a,Square b)\r\n{\r\n    Point LD=Point{max(a.lef_dow.x,b.lef_dow.x),max(a.lef_dow.y,b.lef_dow.y)};\r\n    Point RU=Point{min(a.rig_up .x,b.rig_up .x),min(a.rig_up .y,b.rig_up .y)};\r\n    return Square{LD,RU};\r\n}\r\n\r\nvoid Partition(int depth,Square now)\r\n{\r\n    if(now.Impossible()) return;\r\n    if(depth>n)\r\n    {\r\n        basic[++num]=now;\r\n        return;\r\n    }\r\n    Square U=Uarea(now,paper[depth]);\r\n    if(U.Impossible() || !U.InArea(now)) {Partition(depth+1,now);return;}\r\n    Square rear[4];\r\n    rear[0]={Point{now.lef_dow.x,U  .rig_up .y},Point{U  .rig_up.x,now.rig_up .y}};\r\n    rear[1]={Point{U  .rig_up .x,U  .lef_dow.y},now.rig_up                       };\r\n    rear[2]={Point{U  .lef_dow.x,now.lef_dow.y},Point{now.rig_up .x,U .lef_dow.y}};\r\n    rear[3]={now.lef_dow                       ,Point{U  .lef_dow.x,U .rig_up .y}};\r\n    for(int i=0;i<4;i++) Partition(depth+1,rear[i]);\r\n}\r\n\r\nbool RigXorder(Square a,Square b)\r\n{return (a.rig_up .x==b.rig_up .x ? a.lef_dow.y<b.lef_dow.y : a.rig_up .x<b.rig_up .x);}\r\n\r\nbool LefXorder(Square a,Square b)\r\n{return (a.lef_dow.x==b.lef_dow.x ? a.lef_dow.y<b.lef_dow.y : a.lef_dow.x<b.lef_dow.x);}\r\n\r\nbool DowYorder(Square a,Square b)\r\n{return (a.lef_dow.y==b.lef_dow.y ? a.lef_dow.x<b.lef_dow.x : a.lef_dow.y<b.lef_dow.y);}\r\n\r\nbool UpYorder (Square a,Square b)\r\n{return (a.rig_up .y==b.rig_up .y ? a.lef_dow.x<b.lef_dow.x : a.rig_up .y<b.rig_up .y);} \r\n\r\nint Lef_Rig_SideLength(int depth,int dow,int up,int end,int self)\r\n{\r\n    if(dow>=up) return 0;\r\n    if(depth>end || up<=basic[depth].lef_dow.y) return up-dow;//2019 6 16 wrong: \u7ebf\u6bb5\u4ea4\u96c6\u5224\u65ad \r\n    if(depth==self || dow>=basic[depth].rig_up.y) return Lef_Rig_SideLength(depth+1,dow,up,end,self);\r\n    return Lef_Rig_SideLength(depth+1,dow                           ,min(basic[depth].lef_dow.y,up),end,self)\r\n           +\r\n           Lef_Rig_SideLength(depth+1,max(basic[depth].rig_up.y,dow),up                            ,end,self);\r\n}\r\n\r\nint Up_Dow_SideLength (int depth,int lef,int rig,int end,int self)\r\n{\r\n    if(lef>=rig) return 0;\r\n    if(depth>end || rig<=basic[depth].lef_dow.x) return rig-lef;\r\n    if(depth==self || lef>=basic[depth].rig_up.x) return Up_Dow_SideLength(depth+1,lef,rig,end,self);\r\n    return Up_Dow_SideLength(depth+1,lef                  ,min(basic[depth].lef_dow.x,rig),end,self)\r\n           +\r\n           Up_Dow_SideLength(depth+1,max(basic[depth].rig_up.x,lef),rig                   ,end,self);\r\n}\r\n\r\nint main()\r\n{\r\n    scanf(\"%d\",&n);\r\n    for(int i=1;i<=n;i++) paper[i].Scan();\r\n    for(int i=1;i<=n;i++) Partition(i+1,paper[i]);\r\n    //for(int i=1;i<=num;i++) basic[i].Print();\r\n    //\u8ba1\u7b97\u5de6\u8fb9\u957f\r\n    sort(basic+1,basic+num+1,RigXorder);\r\n    for(int i=1;i<=num;i++)\r\n    {\r\n        //\u627e\u5230 rig_up.x \u4e0e\u8fd9\u4e2a\u65b9\u5757 lef_dow.x \u4e00\u6837\u7684\u65b9\u5757 \r\n        int L=1,R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].rig_up.x>=basic[i].lef_dow.x) R=mid-1;\r\n            else L=mid+1;\r\n        }\r\n        int bef=L;\r\n        R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].rig_up.x<=basic[i].lef_dow.x) L=mid+1;\r\n            else R=mid-1;\r\n        }\r\n        int aft=R;\r\n        ans+=Lef_Rig_SideLength(bef,basic[i].lef_dow.y,basic[i].rig_up.y,aft,i);\r\n    }\r\n    //\u8ba1\u7b97\u53f3\u8fb9\u957f\r\n    sort(basic+1,basic+num+1,LefXorder);\r\n    for(int i=1;i<=num;i++)\r\n    {\r\n        //\u627e\u5230 lef_dow.x \u4e0e\u8fd9\u4e2a\u65b9\u5757 rig_up.x \u4e00\u6837\u7684\u65b9\u5757 \r\n        int L=1,R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].lef_dow.x>=basic[i].rig_up.x) R=mid-1;\r\n            else L=mid+1;\r\n        }\r\n        int bef=L;\r\n        R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].lef_dow.x<=basic[i].rig_up.x) L=mid+1;\r\n            else R=mid-1;\r\n        }\r\n        int aft=R;\r\n        ans+=Lef_Rig_SideLength(bef,basic[i].lef_dow.y,basic[i].rig_up.y,aft,i);\r\n    }\r\n    //\u8ba1\u7b97\u4e0a\u8fb9\u957f\r\n    sort(basic+1,basic+num+1,DowYorder);\r\n    for(int i=1;i<=num;i++)\r\n    {\r\n        //\u627e\u5230 lef_dow.x \u4e0e\u8fd9\u4e2a\u65b9\u5757 rig_up.x \u4e00\u6837\u7684\u65b9\u5757 \r\n        int L=1,R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].lef_dow.y>=basic[i].rig_up.y) R=mid-1;\r\n            else L=mid+1;\r\n        }\r\n        int bef=L;\r\n        R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].lef_dow.y<=basic[i].rig_up.y) L=mid+1;\r\n            else R=mid-1;\r\n        }\r\n        int aft=R;\r\n        ans+=Up_Dow_SideLength(bef,basic[i].lef_dow.x,basic[i].rig_up.x,aft,i);\r\n    }\r\n    //\u8ba1\u7b97\u4e0b\u8fb9\u957f\r\n    sort(basic+1,basic+num+1,UpYorder);\r\n    for(int i=1;i<=num;i++)\r\n    {\r\n        //\u627e\u5230 lef_dow.x \u4e0e\u8fd9\u4e2a\u65b9\u5757 rig_up.x \u4e00\u6837\u7684\u65b9\u5757 \r\n        int L=1,R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].rig_up.y>=basic[i].lef_dow.y) R=mid-1;\r\n            else L=mid+1;\r\n        }\r\n        int bef=L;\r\n        R=num;\r\n        while(L<=R)\r\n        {\r\n            int mid=(L+R)>>1;\r\n            if(basic[mid].rig_up.y<=basic[i].lef_dow.y) L=mid+1;\r\n            else R=mid-1;\r\n        }\r\n        int aft=R;\r\n        ans+=Up_Dow_SideLength(bef,basic[i].lef_dow.x,basic[i].rig_up.x,aft,i);\r\n    }\r\n    printf(\"%d\\n\",ans);\r\n    return 0;\r\n}\r\n/*\r\n2\r\n0 0 1 2\r\n0 0 2 1\r\n\r\n7\r\n-15 0 5 10\r\n-5 8 20 25\r\n15 -4 24 14\r\n0 -6 16 4\r\n2 15 10 22\r\n30 10 36 20\r\n34 0 40 16\r\n\r\n2\r\n0 0 1 1\r\n2 2 3 3\r\n\r\n2\r\n0 0 8 8\r\n2 2 3 3\r\n*/\r\n```\r\n\u672c\u6765\u611f\u89c9\u4f1a TLE \u7684\uff0c\u6ca1\u60f3\u5230\u6548\u7387\u5176\u5b9e\u8fd8\u662f\u633a\u9ad8\u7684\uff08\u5c31\u6015\u662fUSACO\u6570\u636e\u6c34\uff09",
        "postTime": 1560778320,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0  \n\u5899\u4e0a\u8d34\u7740\u8bb8\u591a\u5f62\u72b6\u76f8\u540c\u7684\u6d77\u62a5\u3001\u7167\u7247\u3002\u5b83\u4eec\u7684\u8fb9\u90fd\u662f\u6c34\u5e73\u548c\u5782\u76f4\u7684\u3002\u6bcf\u4e2a\u77e9\u5f62\u56fe\u7247\u53ef\u80fd\u90e8\u5206\u6216\u5168\u90e8\u7684\u8986\u76d6\u4e86\u5176\u4ed6\u56fe\u7247\u3002\u6240\u6709\u77e9\u5f62\u5408\u5e76\u540e\u7684\u8fb9\u957f\u79f0\u4e3a\u5468\u957f\u3002  \n\n\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u8ba1\u7b97\u5468\u957f\u3002  \n![](https://cdn.luogu.com.cn/upload/pic/702.png)  \n\u5982\u56fe1\u6240\u793a7\u4e2a\u77e9\u5f62\u3002  \n![](https://cdn.luogu.com.cn/upload/pic/703.png)  \n\u5982\u56fe2\u6240\u793a\uff0c\u6240\u6709\u77e9\u5f62\u7684\u8fb9\u754c\u3002\u6240\u6709\u77e9\u5f62\u9876\u70b9\u7684\u5750\u6807\u90fd\u662f\u6574\u6570\u3002  \n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f  \n\n**\u8f93\u5165\u683c\u5f0f:**\n\n\u8f93\u5165\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570$N(0<=N<5000)$\uff0c\u8868\u793a\u6709\u591a\u5c11\u4e2a\u77e9\u5f62\u3002\u63a5\u4e0b\u6765$N$\u884c\u7ed9\u51fa\u4e86\u6bcf\u4e00\u4e2a\u77e9\u5f62\u5de6\u4e0b\u89d2\u5750\u6807\u548c\u53f3\u4e0a\u89d2\u5750\u6807\uff08\u6240\u6709\u5750\u6807\u7684\u6570\u503c\u8303\u56f4\u90fd\u5728$-10000$\u5230$10000$\u4e4b\u95f4\uff09\u3002\n\n**\u8f93\u51fa\u683c\u5f0f:**\n\n\u8f93\u51fa\u6587\u4ef6\u53ea\u6709\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u6240\u6709\u77e9\u5f62\u7684\u5468\u957f\u3002  \n\n----\n\n### \u57fa\u672c\u601d\u8def  \n\u89e3\u51b3\u8fd9\u4e00\u7c7b\u5e73\u9762\u77e9\u5f62\u9762\u79ef/\u5468\u957f\u5e76\u7684\u65b9\u6cd5\uff0c\u8fd8\u662f\u7528\u6700\u7ecf\u5178\u7684\u65b9\u6cd5(\u89c1\u4e0b)\u5427\u3002  \n\u6bd5\u7adf\u8fd9\u662f\u4e00\u9053\u6a21\u677f\u9898\u3002\u3002\u3002  \n\u5927\u4f6c\u4eec\u90fd\u89e3\u91ca\u4e86\u5f88\u591a\u4e86\uff0c\u849f\u84bb\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86(~~\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u4e0d\u4f1a\u8bb2~~)\n\n----\n\n### \u626b\u63cf\u7ebf$+$\u7ebf\u6bb5\u6811  \n\u5927\u4f53\u6a21\u677f\u5e94\u8be5\u90fd\u5dee\u4e0d\u592a\u591a:  \n\u626b\u63cf\u4e00\u6b21\uff0c\u4ece\u4e0b\u5f80\u4e0a\uff0c\u987a\u4fbf\u8bb0\u5f55\u8def\u4e0a\u7684y\u8f74\u65b9\u5411\u7684\u7ebf\u6bb5\u957f,\u5f80$ans$\u4e2d\u7d2f\u52a0\u5c31\u597d\u4e86\u3002\n\n----\n\n### \u7ec6\u8282\u6ce8\u610f\u4e8b\u9879  \n\u7b2c\u4e00\u6b21\u4ea4\u7684\u65f6\u5019\u83ab\u540dWA\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u5f88\u662f\u4e0d\u89e3\uff0c\u7ffb\u4e86\u7ffb\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u624d\u53d1\u73b0:  \n```cpp\n    bool cmp(edge a,edge b){return a.h<b.h;}\n```  \n\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u4ea4\u65f6\u5199\u7684cmp\u51fd\u6570\u3002\n```cpp\n    bool cmp(edge a,edge b){return a.h<b.h||(a.h==b.h&&a.f>b.f);}  \n```\n\u8fd9\u662fAC\u65f6\u7684cmp\u51fd\u6570\u3002  \n\n\u5bf9\u4e8e\u9047\u5230\u7684\u91cd\u5408\u7684\u4e00\u6761\u4e0a\u8fb9\u548c\u4e00\u6761\u4e0b\u8fb9(\u5f53\u7136\u4e0d\u4f1a\u5728\u540c\u4e00\u4e2a\u77e9\u5f62\u5185)\uff0c\u6211\u4eec\u4f18\u5148\u5904\u7406\u4e0b\u8fb9\u7684\u4fe1\u606f\u3002  \n\n----\n\n### \u53c2\u8003\u4ee3\u7801  \n\u4e0b\u9762\u5c31\u662f\u672c\u849f\u84bb\u7684AC\u4ee3\u7801\uff0c\u6709\u4ec0\u4e48\u4e0d\u5f53\u6216\u53ef\u4ee5\u6539\u8fdb\u7684\u5730\u65b9\u6b22\u8fce\u5927\u4f6c\u6765\u6307\u6559%%%  \n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#define rg register\nusing namespace std;\nconst int MAXN=5010;\nconst int MAXM=20010;\nconst int INF=2147483647;\ninline int read(){\n\tint s=0;bool f=false;char c=getchar();\n\twhile(c<'0'||c>'9')f|=(c=='-'),c=getchar();\n\twhile(c>='0'&&c<='9')s=(s<<3)+(s<<1)+(c^48),c=getchar();\n\treturn (f)?(-s):(s);\n}\nstruct node{\n\tint l,r,cnt;\n\tint numx,numy;\n\tbool lf,rf;\n}c[MAXM<<2];\n#define lson rt<<1\n#define rson rt<<1|1\ninline void pushup(int rt){\n\tif(c[rt].cnt){\n\t\tc[rt].numx=c[rt].r-c[rt].l+1;\n\t\tc[rt].lf=c[rt].rf=true;\n\t\tc[rt].numy=1;\n\t}\n\telse if(c[rt].l==c[rt].r){\n\t\tc[rt].numx=0;\n\t\tc[rt].numy=0;\n\t\tc[rt].lf=c[rt].rf=false;\n\t}\n\telse{\n\t\tc[rt].numx=c[lson].numx+c[rson].numx;\n\t\tc[rt].lf=c[lson].lf;\n\t\tc[rt].rf=c[rson].rf;\n\t\tc[rt].numy=c[lson].numy+c[rson].numy-(c[lson].rf&c[rson].lf);\n\t}\n}\ninline void build(int rt,int l,int r){\n\tc[rt].l=l;\n\tc[rt].r=r;\n\tc[rt].cnt=0;\n\tc[rt].numx=0;\n\tc[rt].numy=0;\n\tc[rt].lf=false;\n\tc[rt].rf=false;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n}\ninline void update(int rt,int l,int r,int v){\n\tif(l<=c[rt].l&&c[rt].r<=r)\n\t\treturn c[rt].cnt+=v,pushup(rt);\n\tint mid=(c[rt].l+c[rt].r)>>1;\n\tif(l<=mid)update(lson,l,r,v);\n\tif(r>mid) update(rson,l,r,v);\n\tpushup(rt);\n}\nstruct edge{int l,r,h,f;}e[MAXN<<1];\nbool cmp(edge a,edge b){\n\treturn a.h<b.h||(a.h==b.h&&a.f>b.f);\n}\nint main(){\n\tint n=read(),tot=0;\n\tint maxl=INF,maxr=-INF;\n\tfor(rg int i=1;i<=n;i++){\n\t\tint x1=read(),y1=read();\n\t\tint x2=read(),y2=read();\n\t\tmaxl=min(maxl,min(x1,x2));\n\t\tmaxr=max(maxr,max(x1,x2));\n\t\te[++tot]=(edge){x1,x2,y1,1};\n\t\te[++tot]=(edge){x1,x2,y2,-1};\n\t}\n\tsort(e+1,e+tot+1,cmp);\n\tlong long ans=0,last=0;\n\tbuild(1,maxl,maxr-1);\n\tfor(rg int i=1;i<=tot;i++){\n\t\tupdate(1,e[i].l,e[i].r-1,e[i].f);\n\t\tans+=labs(c[1].numx-last);\n\t\tans+=(e[i+1].h-e[i].h)*2*c[1].numy;\n\t\tlast=c[1].numx;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1 $qwq$",
        "postTime": 1560216841,
        "uid": 87839,
        "name": "Sangber",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u53d1\u73b0\u81ea\u5df1\u7684\u505a\u6cd5\u597d\u50cf\u4e0d\u592a\u4e00\u6837???\n\n\u8fd8\u662f\u626b\u63cf\u7ebf\uff0c\u7136\u540e\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u88ab\u8986\u76d6\u7684\u957f\u5ea6\u7684\u53d8\u5316\u503c\u52a0\u5230\u7b54\u6848\u91cc.\u6ce8\u610f\u5148\u5165\u540e\u51fa.\n\n\u884c\u5217\u5206\u5f00\u505a.\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u8981\u7ef4\u62a4\u7684\u662f\u975e$0$\u7684\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u652f\u6301\u533a\u95f4\u52a0\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4f5c\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u533a\u95f4\u800c\u4e0d\u53ea\u662f\u865a\u70b9\uff0c\u7136\u540e\u8bb0\u5f55\u8fd9\u4e2a\u533a\u95f4\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u6b21\u6570$num$. $pushup$\u7684\u65f6\u5019\uff0c\u5206\u4e09\u79cd\u60c5\u51b5:\n\n\t1. num>0 \u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u4e3a\u533a\u95f4\u957f\u5ea6\n    2. num=0,\u53f6\u5b50\u8282\u70b9 \u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u4e3a0\n    3. num=0,\u975e\u53f6\u5b50\u8282\u70b9 \u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u662f\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u7b54\u6848\u4e4b\u548c\n\u5bb9\u6613\u77e5\u9053$num$\u4e0d\u4f1a\u5c0f\u4e8e$0$\uff0c\u6807\u8bb0\u4e0d\u9700\u8981\u4e0b\u4f20\uff0c\u56e0\u4e3anum>0\u7684\u65f6\u5019\u5b50\u8282\u70b9\u7684\u4fee\u6539\u65e0\u5173\u7d27\u8981\uff0cnum=0\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u6ca1\u4fee\u6539\u8fc7\n\n\u79bb\u6563\u5316\u4e86\u4e00\u4e0b \u5f53\u7136\u8fd9\u9898\u7684\u6570\u636e\u5145\u6ee1\u4e86\u66b4\u529b\u7684\u6c14\u606f\uff0c\u4e0d\u79bb\u6563\u5316\u4e5f\u80fd\u8fc7\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=200000;\nstruct Q{int x,l,r,w;}q[N];\nstruct JX{int xa,ya,xb,yb;}ja[N],jb[N];\nint n,a[N],num[N],cnt,lsh[N];\nint abs1(int x){return x>0?x:-x;}\nvoid pushup(int rot,int lt,int rt)//\u5206\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\n{\n\tif(num[rot])a[rot]=lsh[rt+1]-lsh[lt];\n\telse if(lt==rt)a[rot]=0;\n\telse a[rot]=a[rot<<1]+a[rot<<1|1];\n}\nvoid update(int rot,int lt,int rt,int lq,int rq,int w)\n{\n\tif(lq>rq)return;\n\tif(lt>=lq&&rt<=rq){num[rot]+=w,pushup(rot,lt,rt);return;}\n\tint mid=(lt+rt)>>1;\n\tif(rq<=mid)update(rot<<1,lt,mid,lq,rq,w);\n\telse if(lq>mid)update(rot<<1|1,mid+1,rt,lq,rq,w);\n\telse update(rot<<1,lt,mid,lq,mid,w),update(rot<<1|1,mid+1,rt,mid+1,rq,w);\n\tpushup(rot,lt,rt);\n}\nvoid build(int rot,int lt,int rt)\n{\n\tnum[rot]=a[rot]=0;\n\tif(lt==rt)return;\n\tint mid=(lt+rt)>>1;\n\tbuild(rot<<1,lt,mid),build(rot<<1|1,mid+1,rt);\n}\nint cmp(const Q &a,const Q &b){return a.x==b.x?a.w>b.w:a.x<b.x;}\nint solve(JX jx[])\n{\n\tint ans=0,lst=0,cnt=0,qn=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tq[++qn]=(Q){jx[i].xa,jx[i].ya,jx[i].yb,1};\n\t\tq[++qn]=(Q){jx[i].xb,jx[i].ya,jx[i].yb,-1};\n\t\tlsh[++cnt]=jx[i].ya,lsh[++cnt]=jx[i].yb;\n\t}\n\tsort(lsh+1,lsh+cnt+1);cnt=unique(lsh+1,lsh+cnt+1)-lsh-1;\n\tsort(q+1,q+qn+1,cmp);build(1,1,cnt);\n\tfor(int i=1;i<=qn;i++)\n\t{\n\t\tint l=lower_bound(lsh+1,lsh+cnt+1,q[i].l)-lsh,r=lower_bound(lsh+1,lsh+cnt+1,q[i].r)-lsh-1;\n\t\tupdate(1,1,cnt,l,r,q[i].w);\n\t\tans+=abs1(a[1]-lst),lst=a[1];\n\t}\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint xa,ya,xb,yb;\n\t\tscanf(\"%d%d%d%d\",&xa,&ya,&xb,&yb);\n\t\tja[i]=(JX){xa,ya,xb,yb},jb[i]=(JX){ya,xa,yb,xb};\n\t}\n\tcout<<solve(ja)+solve(jb)<<endl;\n}\n```",
        "postTime": 1552209410,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "# \u626b\u63cf\u7ebf\u4e86\u89e3\u4e00\u4e0b\n\n\u6211\u4eec\u7ed9\u628a\u4e00\u4e2a\u77e9\u5f62\u53d8\u4e3a\u56db\u6761\u8fb9\uff0ca\u6570\u7ec4\u8bb0\u5f55\u7eb5\u5411\u8fb9\uff0cb\u6570\u7ec4\u8bb0\u5f55\u6a2a\u5411\u8fb9\uff0c\u6bcf\u4e2a\u77e9\u5f62\u53ef\u4ee5\u7ed9\n\na\uff0cb\u4e24\u6570\u7ec4\u5206\u522b\u8d21\u732e\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u5b9a\u4e49\u6570\u7ec4\u7684\u65f6\u5019\u8981\u7ffb\u500d\n\n\u6309\u7167\u8fb9\u7684x\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8fa\uff0c\u518d\u6309\u7167\u8fb9\u7684y\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8fb\n\n## \u73b0\u5728\u5f00\u59cb\u6700\u4e3b\u8981\u7684--\u626b\u63cf\u7ebf\uff08\u66b4\u529b\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\uff09\n\n\u5148\u8bf4a\u6570\u7ec4\u5427\uff08\u7eb5\u5411\u8fb9\uff09\n\n\u5b9a\u4e49\u4e00\u4e2a\uff08y\uff09\u6570\u7ec4\n\n\u6392\u597d\u5e8f\u4ee5\u540e\uff0c\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff1a\n\n\n------------\n\n\n\u5982\u679c\u662f\u77e9\u5f62\u7684\u7b2c\u4e00\u6761\uff08\u5de6\u8fb9\uff09\u7eb5\u5411\u8fb9\uff0c\u5c31\u628a\u8fd9\u6761\u8fb9\u6240\u8986\u76d6\u7684\u8303\u56f4\u5185\u7684\u6570+1\uff08\u8868\u793a\u5f53\u524d\u8986\u76d6\u4e86\u7684\u8fb9\n\n\u6570\uff0c\u7528\u521a\u624d\u5b9a\u4e49\u7684\u6570\u7ec4\u6765\u5b58\uff09\uff0c\u5982\u679c\u662f0\uff08\u6ca1\u6709\u88ab\u8986\u76d6\u5230\uff09\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5c31\u662f\u8981\u627e\u7684\u5468\u957f\n\n\u8fb9\uff0cans+1\n\n------------\n\n\u5982\u679c\u662f\u77e9\u5f62\u7b2c\u4e8c\u6761\uff08\u53f3\u8fb9\uff09\u7eb5\u5411\u8fb9\uff0c\u5c31\u628a\u8fd9\u6761\u8fb9\u6240\u8986\u76d6\u5230\u7684\u8303\u56f4\u5185\u7684\u6570-1\uff0c\u5982\u679c\u662f\n\n0\uff08\u56fe\u5f62\u6700\u53f3\u8fb9\u7684\u90a3\u6761\u8fb9\uff09\uff0cans+1\n\n------------\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nstruct node\n{\n    int t,a1,a2;//t\u8868\u793a\u6574\u6761\u8fb9\u6240\u5728\u7684x\uff08\u6216y\u5750\u6807\uff09\uff0ca1-a2\u8868\u793a\u6240\u8986\u76d6\u7684\u8303\u56f4 \n    int bk;//bk\u4e3a1\u8868\u793a\u7b2c\u4e00\u6761\u8fb9\uff0cbk\u4e3a2\u8868\u793a\u7b2c\u4e8c\u6761\u8fb9 \n}a[11000],b[11000];int len;\ninline int cmp(const void *xx,const void *yy)//\u6392\u5e8f \n{\n    node x=*(node*)xx;\n    node y=*(node*)yy;\n    if(x.t==y.t)//\u5982\u679c\u6240\u5728\u4f4d\u7f6e\u76f8\u540c \n    {\n        if(x.bk>y.bk) return 1;//\u5148\u627e\u7b2c\u4e00\u6761\u8fb9\uff08\u653e\u5728\u524d\u9762\uff0c\u4f4d\u7f6e\u4e0d\u53d8\uff09 \n        return -1;\n    }\n    if(x.t>y.t) return 1;//\u5426\u5219\u5c31\u6309\u7167\u524d\u540e\u987a\u5e8f\u6392\u5e8f \n    return -1;\n}\nint x1,y1,x2,y2;\nint x[21000],y[21000],key=10000;//x\u548cy\u4e0d\u89e3\u91ca\uff0ckey\u662f\u4e3a\u4e86\u628a\u8d1f\u6570\u53d8\u4e3a\u975e\u8d1f\u6570\uff08c++\u6570\u7ec4\u4e0d\u80fd\u5b58\u8d1f\u6570\uff09 \nint main()\n{\n    int n,i,j,ans=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n        len++;//\u7b2c\u4e00\u6761\u8fb9 \n        a[len].t=x1;a[len].a1=y1;a[len].a2=y2;a[len].bk=1;\n        b[len].t=y1;b[len].a1=x1;b[len].a2=x2;b[len].bk=1;\n        len++;//\u7b2c\u4e8c\u6761\u8fb9 \n        a[len].t=x2;a[len].a1=y1;a[len].a2=y2;a[len].bk=2;\n        b[len].t=y2;b[len].a1=x1;b[len].a2=x2;b[len].bk=2;\n    }\n    qsort(a+1,len,sizeof(node),cmp);\n    qsort(b+1,len,sizeof(node),cmp);\n    for(i=1;i<=len;i++)//\u626b\u63cf\u7ebf \n    {\n        if(a[i].bk==1)//\u5982\u679c\u662f\u7b2c\u4e00\u6761\u8fb9 \n        {\n            for(j=a[i].a1;j<a[i].a2;j++)\n            {\n                if(y[j+key]==0) ans++;\n                y[j+key]++;\n            }\n        }\n        else//\u5982\u679c\u662f\u7b2c\u4e8c\u6761\u8fb9 \n        {\n            for(j=a[i].a1;j<a[i].a2;j++)\n            {\n                y[j+key]--;\n                if(y[j+key]==0) ans++;\n            }\n        }\n        if(b[i].bk==1)//\u540c\u4e0a \n        {\n            for(j=b[i].a1;j<b[i].a2;j++)\n            {\n            \tif(x[j+key]==0) ans++;\n            \tx[j+key]++;\n            }\n        }\n        else\n        {\n        \tfor(j=b[i].a1;j<b[i].a2;j++)\n        \t{\n        \t\tx[j+key]--;\n        \t\tif(x[j+key]==0) ans++;\n        \t}\n        }\n    }\n    printf(\"%d\\n\",ans);//\u8f93\u51fa \n    return 0;\n}\n```\n\n\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\n\n\u4e3a\u4ec0\u4e48\u67e5\u627e\u8303\u56f4\u91cc\u9762\u8981\u201cj=a[i].a1;j< a[i].a2;j++\u201d\uff0c\n\n\u800c\u4e0d\u662f\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u201cj=a[i].a1;j<=a[i].a2;j++\u201d\n\n\uff08\u76f8\u5dee\u4e86\u4e00\u4e2a=\u53f7\uff09\n\n\u539f\u56e0\u5c31\u662f\u6570\u7ec4\u5b58\u7684\u4e0d\u662f\u70b9\uff0c\u800c\u662f\u957f\u5ea6\u4e3a1\u7684\u8fb9\n\n\uff08\u5047\u5982\u5168\u90e8\u7684\u70b9\u90fd\u662f\u5728\u7b2c\u4e00\u8c61\u9650\uff0c\u4e0d\u6253key\u4e86\uff09\uff0c\u90a3\u4e48\n\nx[0]\u8868\u793a0-1\u5f53\u524d\u6240\u8986\u76d6\u7684\u6b21\u6570\uff0cx[1]\u8868\u793a1-2\u5f53\u524d\u6240\u8986\u76d6\u7684\u6b21\u6570\uff0c\u8fb9\u7684\u6570\u91cf\u6bd4\u70b9\u7684\u5c111\uff0c\n\n\u6240\u4ee5\u5c31\u8981\u5c06\u8fd9\u4e2a\u7b49\u53f7\u5220\u53bb\u4e86",
        "postTime": 1529504416,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "\u770b\u5230\u4e00\u5768\u77e9\u5f62\u5c31\u8981\u60f3\u5230\u626b\u63cf\u7ebf\u3002\uff08poj atlantis\uff09\n\n\u6211\u4eec\u628a\u6a2a\u8fb9\u7ad6\u8fb9\u5206\u5f00\u8ba1\u7b97\uff0c\u56e0\u4e3a\u6a2a\u8fb9\u7ad6\u8fb9\u5176\u5b9e\u6ca1\u6709\u533a\u522b\uff0c\u4ee5\u4e0b\u8bba\u8ff0\u5168\u4e3a\u8003\u8651\u7ad6\u8fb9\u7684\u3002\n\n\u600e\u6837\u7edf\u8ba1\u4e00\u4e2a\u7ad6\u8fb9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5462\uff1f\u7b54\uff1a\u628a\u8fd9\u4e2a\u7ad6\u8fb9\u52a0\u5165\u7ebf\u6bb5\u6811\uff0c\u5f53\u524d\u7684\u603b\u8986\u76d6\u957f\u5ea6 \u51cf\u53bb \u52a0\u5165\u524d\u7684\u603b\u8986\u76d6\u957f\u5ea6 **\u7684\u7edd\u5bf9\u503c** \u5373\u4e3a\u8fd9\u4e2a\u7ad6\u8fb9\u7684\u8d21\u732e\u3002\n\n\u8fd9\u6837\u505a\u6709\u4e00\u4e2a\u8981\u6c42\uff0c\u6a2a\u5750\u6807\u76f8\u540c\u7684\u7ad6\u8fb9\uff0c\u8981\u5148\u52a0\u8fdb\u53bb\u5165\u8fb9\u518d\u5220\u6389\u51fa\u8fb9\u3002\uff08\u4e3a\u4ec0\u4e48\u5462\uff1f\u8003\u8651\u4e24\u4e2a\u77e9\u5f62\uff0c\u4e00\u4e2a\u77e9\u5f62\u7684\u53f3\u8fb9\u548c\u53e6\u4e00\u4e2a\u77e9\u5f62\u7684\u5de6\u8fb9\u7684\u6a2a\u5750\u6807\u76f8\u540c\u4f46\u4e0a\u4e0b\u9519\u843d\uff09\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nint n, qwq1, pwp1, qwq2, pwp2, cnt, m, num[20005], ans;\nstruct Line{\n\tint uu, vv, ww, id;\n}li1[10005], li2[10005];\nbool cmp(Line x, Line y){\n\tif(x.uu!=y.uu)\treturn x.uu<y.uu;\n\telse\treturn x.id>y.id;\n}\nstruct SGT{\n\tint sum[80005], len[80005];\n\tvoid update(int o, int l, int r, int x, int y, int k){\n\t\tif(num[l]>=x && num[r]<=y)\tsum[o] += k;\n\t\telse{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tint lson=o<<1;\n\t\t\tint rson=lson|1;\n\t\t\tif(x<num[mid])\tupdate(lson, l, mid, x, y, k);\n\t\t\tif(num[mid]<y)\tupdate(rson, mid, r, x, y, k);\n\t\t}\n\t\tif(sum[o]>0)\tlen[o] = num[r] - num[l];\n\t\telse if(l+1==r)\tlen[o] = 0;\n\t\telse\tlen[o] = len[o<<1] + len[(o<<1)|1];\n\t}\n}sgt;\nint main(){\n\tcin>>n;\n\tfor(int i=-10000; i<=10000; i++)\tnum[++m] = i;\n\tfor(int i=1; i<=n; i++){\n\t\tscanf(\"%d %d %d %d\", &qwq1, &pwp1, &qwq2, &pwp2);\n\t\tcnt++;\n\t\tli1[cnt] = (Line){qwq1, pwp1, pwp2, 1};\n\t\tli2[cnt] = (Line){pwp1, qwq1, qwq2, 1};\n\t\tcnt++;\n\t\tli1[cnt] = (Line){qwq2, pwp1, pwp2, -1};\n\t\tli2[cnt] = (Line){pwp2, qwq1, qwq2, -1};\n\t}\n\tsort(li1+1, li1+1+cnt, cmp);\n\tsort(li2+1, li2+1+cnt, cmp);\n\tfor(int i=1; i<=cnt; i++){\n\t\tint lst=sgt.len[1];\n\t\tsgt.update(1, 1, m, li1[i].vv, li1[i].ww, li1[i].id);\n\t\tans += abs(sgt.len[1]-lst);\n\t}\n\tfor(int i=1; i<=cnt; i++){\n\t\tint lst=sgt.len[1];\n\t\tsgt.update(1, 1, m, li2[i].vv, li2[i].ww, li2[i].id);\n\t\tans += abs(sgt.len[1]-lst);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1520085553,
        "uid": 44733,
        "name": "poorpool",
        "ccfLevel": 0,
        "title": "luogu1856 [USACO5.5]\u77e9\u5f62\u5468\u957fPicture"
    },
    {
        "content": "\u4e0a\u6b21\u505a\u4e86\u77e9\u5f62\u9762\u79ef\u5e76\u4e4b\u540e\uff0c\u5076\u7136\u770b\u5230\u4e86\u8fd9\u4e2a\u5468\u957f\u5e76\uff0c\u987a\u624b\u505a\u5b8c\u540e\u5199\u4e86\u672c\u6587\u3002\r\n\r\n\u63d0\u793a\uff1a\u5982\u679c\u4f60\u6ca1\u6709\u770b\u8fc7\u6211\u7684\u90a3\u7bc7 `\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0-\u626b\u63cf\u7ebf`\uff0c\u90a3\u8bf7\u5148\u53bb\u770b\u90a3\u4e2a\uff0c\u91cc\u9762\u8bb2\u4e86\u626b\u63cf\u7ebf\u7684\u57fa\u7840\u548c\u9762\u79ef\u5e76\u7684\u6c42\u6cd5\u3002\r\n\r\n---\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u660e\u786e\u626b\u63cf\u7ebf\u77e9\u5f62\u5468\u957f\u5e76\u7684\u601d\u60f3\u3002\r\n\r\n\u7c7b\u6bd4\u4e00\u4e0b\u9762\u79ef\u5e76\uff1a\r\n\r\n\u9762\u79ef\u5e76\u662f\u5c06\u591a\u8fb9\u5f62\u5207\u6210\u4e00\u4e2a\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u77e9\u5f62\uff0c\u7136\u540e\u5c06\u5176\u9762\u79ef\u7b80\u5355\u52a0\u548c\u3002\r\n\r\n\u90a3\u5468\u957f\u5e76\u53ef\u4ee5\u600e\u4e48\u505a\u5462\uff1f\r\n\r\n\u7531\u4e8e\u8fd9\u91cc\u662f\u626b\u63cf\u7ebf\u7b97\u6cd5\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u4e00\u5b9a\u4e0e\u5207\u5272\u6709\u5173\u3002\r\n\r\n\u5efa\u8bae\u601d\u8003\u4e00\u4e0b\uff0c\u4e0b\u9762\u662f\u65b9\u6cd5\u3002\r\n\r\n---\r\n\r\n\u6211\u4eec\u5c06\u591a\u8fb9\u5f62\u5207\u6210\u4e00\u4e2a\u4e2a\u9762\u79ef\u4ea4\u4e3a 0 \u7684\u77e9\u5f62\uff0c\u7136\u540e\u5c06\u5176\u5468\u957f\u52a0\u548c\uff0c\u6bcf\u6b21\u51cf\u53bb\u4e24\u4e2a\u76f8\u90bb\u77e9\u5f62\u91cd\u53e0\u7684\u957f\u5ea6\u3002\r\n\r\n\u8fd9\u4e2a\u65b9\u6cd5\u770b\u4e0a\u53bb\u5b8c\u5168\u53ef\u4ee5\uff0c\u4f46\u662f\u4ed4\u7ec6\u60f3\u60f3\uff0c\u6211\u4eec\u8981\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\r\n\r\n\u6211\u4eec\u7684\u626b\u63cf\u7ebf\u79fb\u52a8\u662f\u4f9d\u9760\u8fb9\u7684\u589e\u51cf\uff0c\u4e5f\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u52a0\u51cf\u6765\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5904\u7406\uff1a\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u7b97\u6bcf\u4e2a\u77e9\u5f62\u7684\u5468\u957f\u3002\r\n\r\n\u8fd9\u91cc\u5c31\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\r\n\r\n\u4e4b\u524d\u7684\u626b\u63cf\u7ebf\u677f\u5b50\u53ea\u80fd\u8ba9\u6211\u4eec\u77e5\u9053\u6574\u4e2a\u6570\u8f74\u4e0a\u88ab\u8986\u76d6\u7684\u603b\u957f\u5ea6\uff0c\u8fd9\u5bf9\u4e8e\u4e0d\u9700\u8981\u7ba1\u5176\u5185\u90e8\u5f62\u72b6\u7684\u9762\u79ef\u5e76\u662f\u5b8c\u5168\u591f\u7528\u7684\u3002\r\n\r\n\u4f46\u662f\u73b0\u5728\u662f\u9700\u8981\u6c42\u5468\u957f\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u4fe1\u606f\u5c31\u5b8c\u5168\u4e0d\u591f\u4e86\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u77e5\u9053\u8986\u76d6\u7684\u5185\u90e8\u662f\u4ec0\u4e48\u60c5\u51b5\u3002\r\n\r\n\u8fd9\u5c31\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u65b0\u7684\u4fe1\u606f\uff1a\u6574\u4e2a\u533a\u95f4\u4e0a\u7684\u7aef\u70b9\u4e2a\u6570\u3002\r\n\r\n\u4e3a\u4ec0\u4e48\uff1f\u6211\u4eec\u628a\u4e00\u6279\u5e95\u76f8\u540c\u7684\u77e9\u5f62\uff08\u4e5f\u5c31\u662f\u540c\u4e00\u6b21\u5207\u5272\u4ea7\u751f\u7684\u77e9\u5f62\uff09\u62ff\u51fa\u6765\uff0c\u770b\u770b\u5b83\u7684\u5468\u957f\u7531\u4ec0\u4e48\u7ec4\u6210\u3002\r\n\r\n\u9996\u5148\u5c31\u662f\u4e0e\u626b\u63cf\u7ebf\u5e73\u884c\u7684\u90e8\u5206\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6574\u4e2a\u6570\u8f74\u4e0a\u7684\u8986\u76d6\u957f\u5ea6\u4e58\u4e8c\u5373\u53ef\u3002\r\n\r\n\u7136\u540e\u662f\u4e0e\u626b\u63cf\u7ebf\u5782\u76f4\u7684\u90e8\u5206\uff0c\u8fd9\u91cc\u5c31\u7528\u5230\u4e86\u6574\u4e2a\u533a\u95f4\u7684\u7aef\u70b9\u4e2a\u6570\u3002\r\n\r\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u4e00\u6761\u626b\u63cf\u7ebf\u5728\u79fb\u52a8\uff0c\u4e0a\u9762\u6709\u51e0\u4e2a\u70b9\u4e00\u8d77\u79fb\u52a8\uff0c\u7136\u540e\u770b\u770b\u8fd9\u4e9b\u70b9\u7684\u8f68\u8ff9\u3002\r\n\r\n\u7b97\u4e86\uff0c\u8a00\u4f20\u5f88\u96be\uff0c\u6211\u4f20\u4e2a\u56fe\u5427\u3002\r\n\r\n![img](https://cdn.luogu.com.cn/upload/image_hosting/2vij78zl.png \"\u52a8\u4e4b\u524d\")\r\n\r\n\u4e0a\u9762\u7684\u662f\u52a8\u4e4b\u524d\u7684\u626b\u63cf\u7ebf\r\n\r\n![img](https://cdn.luogu.com.cn/upload/image_hosting/2hyk51e3.png \"\u52a8\u4e4b\u540e\")\r\n\r\n\u8fd9\u662f\u52a8\u540e\u7684\u3002\r\n\r\n\u6df1\u7070\u8272\u7684\u662f\u626b\u63cf\u7ebf\u6ca1\u6709\u88ab\u8986\u76d6\u7684\u90e8\u5206\uff08\u53c2\u8003\u7ebf\uff09\r\n\r\n\u6a59\u8272\u7684\u662f\u626b\u63cf\u7ebf\u4e0a\u7684\u70b9\u3002\r\n\r\n\u7c89\u8272\u7684\u662f\u70b9\u8fd0\u52a8\u7684\u8f68\u8ff9\u3002\r\n\r\n\u6d45\u7070\u8272\u7684\u662f\u626b\u8fc7\u7684\u9762\u79ef\u3002\r\n\r\n\u9ec4\u8272\u7684\u662f\u626b\u63cf\u7ebf\u88ab\u8986\u76d6\u7684\u533a\u57df\u3002\r\n\r\n\u6211\u60f3\u8fd9\u6837\u5e94\u8be5\u5c31\u80fd\u660e\u767d\u6211\u7684\u610f\u601d\u4e86\u5427\u3002\r\n\r\n\u6211\u4eec\u8981\u6c42\u7684\u77e9\u5f62\u5468\u957f\u4fbf\u662f\u7c89\u8272\u7684\u52a0\u4e0a\u9ec4\u8272\u7684\u3002\r\n\r\n\u660e\u767d\u4e86\u5417\uff1f\r\n\r\n\u524d\u9762\u8bf4\u7684\u4e0e\u626b\u63cf\u7ebf\u5e73\u884c\u7684\u90e8\u5206\uff0c\u5176\u5b9e\u5c31\u662f\u9ec4\u8272\u7684\u90e8\u5206\u3002\r\n\r\n\u663e\u7136\uff0c\u5c31\u662f\u88ab\u8986\u76d6\u7684\u957f\u5ea6\u7684\u4e8c\u500d\u3002\r\n\r\n\u7136\u540e\u4e0e\u626b\u63cf\u7ebf\u5782\u76f4\u7684\u90e8\u5206\uff0c\u5c31\u662f\u7c89\u8272\u7684\u90e8\u5206\u3002\r\n\r\n\u53ea\u8981\u7528\u6574\u4e2a\u626b\u63cf\u7ebf\u4e0a\u7aef\u70b9\u7684\u6570\u76ee\u4e58\u79fb\u52a8\u7684\u8ddd\u79bb\uff0c\u5c31\u662f\u8fd9\u90e8\u5206\u7684\u603b\u957f\u5ea6\u3002\r\n\r\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u6c42\u51fa\u4efb\u4f55\u4e00\u6279\u77e9\u5f62\u7684\u5468\u957f\u4e86\u3002\r\n\r\n---\r\n\r\n\u7136\u540e\u5c31\u662f\u5982\u4f55\u51cf\u53bb\u91cd\u53e0\u7684\u90e8\u5206\u4e86\u3002\r\n\r\n\u8fd8\u662f\u4ee5\u56fe\u4e3a\u4f8b\uff1a\r\n\r\n\u5728\u5904\u7406\u67d0\u6761\u8fb9\u7684\u53d8\u52a8\u4e4b\u524d\uff0c\u6211\u4eec\u7684\u77e9\u5f62\u662f\u8fd9\u6837\u7684\uff1a\r\n\r\n![img](https://cdn.luogu.com.cn/upload/image_hosting/2hyk51e3.png \"\u5904\u7406\u524d\")\r\n\r\n\u5728\u5904\u7406\u5b8c\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u626b\u63cf\u7ebf\u53d8\u6210\u4e86\u53f3\u8fb9\u7684\u90a3\u6837\uff1a\r\n\r\n![img](https://cdn.luogu.com.cn/upload/image_hosting/rtirlwb8.png \"\u5904\u7406\u5b8c\u540e\")\r\n\r\n\u8fd9\u91cc\u6211\u5c06\u5904\u7406\u540e\u7684\u626b\u63cf\u7ebf\u548c\u4e4b\u524d\u7684\u626b\u63cf\u7ebf\u5206\u79bb\u5f00\u4e86\uff0c\u66f4\u65b9\u4fbf\u89c2\u5bdf\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u8fd9\u91cc\u6ca1\u6709\u4efb\u4f55\u626b\u63cf\u7ebf\u7684\u79fb\u52a8\u3002\r\n\r\n\u800c\u7eff\u8272\u7684\u90a3\u4e00\u6761\u4fbf\u662f\u6211\u4eec\u8fd9\u6b21\u65b0\u8986\u76d6\u7684\u4e00\u6bb5\u3002\r\n\r\n\u6211\u4eec\u6765\u627e\u627e\u54ea\u4e00\u90e8\u5206\u662f\u91cd\u53e0\u7684\u3002\r\n\r\n\u663e\u7136\uff0c\u5c31\u662f\u6211\u4eec\u5904\u7406\u524d\u7684\u957f\u5ea6\u3002\r\n\r\n\u90a3\u5982\u679c\u6211\u4eec\u662f\u53bb\u6389\u4e86\u4e00\u6bb5\uff0c\u4f1a\u662f\u600e\u4e48\u6837\u5462\uff1f\r\n\r\n\u770b\u56fe\uff1a\r\n\r\n![img](https://cdn.luogu.com.cn/upload/image_hosting/s6ev2az9.png \"\u53bb\u6389\u4e00\u6bb5\u540e\")\r\n\r\n\u7ea2\u8272\u7684\u662f\u8fd9\u6b21\u5b9e\u9645\u53bb\u6389\u7684\u8986\u76d6\u533a\u57df\u3002\r\n\r\n\u663e\u7136\uff0c\u8fd9\u65f6\u91cd\u53e0\u7684\u533a\u57df\u5c31\u662f\u6211\u4eec\u5904\u7406\u540e\u7684\u957f\u5ea6\u3002\r\n\r\n\u603b\u800c\u8a00\u4e4b\uff0c\u91cd\u53e0\u7684\u533a\u57df\u957f\u5ea6\u5c31\u662f\u6211\u4eec\u5904\u7406\u524d\u540e\u8f83\u77ed\u7684\u90a3\u4e2a\u7684\u957f\u5ea6\u3002\r\n\r\n\u56e0\u4e3a\u6211\u4eec\u51cf\u53bb\u7684\u4e8b\u5b9e\u4e0a\u662f\u4e24\u6761\u7ebf\u91cd\u5408\u7684\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u51cf\u5f97\u65f6\u5019\u8981\u51cf\u4e8c\u500d\u3002\r\n\r\n\u81ea\u6b64\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u5177\u4f53\u7684\u601d\u8def\u3002\r\n\r\n---\r\n\r\n\u4f46\u662f\uff0c\u5f88\u53ef\u80fd\u4f1a\u6709\u4eba\u7591\u60d1\uff1a\u5982\u679c\u662f\u6709\u589e\u6709\u51cf\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff1f\r\n\r\n\u786e\u5b9e\uff0c\u6211\u4eec\u4e4b\u524d\u7684\u7ed3\u8bba\u53ea\u9002\u5408\u5355\u72ec\u589e\u6216\u51cf\u7684\u60c5\u51b5\uff0c\u800c\u4e8c\u8005\u90fd\u6709\u7684\u60c5\u51b5\u5341\u5206\u590d\u6742\uff0c\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u5904\u7406\u3002\r\n\r\n\u4f46\u662f\uff0c\u4fd7\u8bdd\u8bf4\u5f97\u597d\uff0c\u89e3\u51b3\u4e0d\u4e86\u95ee\u9898\uff0c\u5c31\u89e3\u51b3\u63d0\u51fa\u95ee\u9898\u7684\u4eba\u3002\r\n\r\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ea\u8981\u8ba9\u5b83\u6bcf\u6b21\u90fd\u662f\u5355\u72ec\u7684\u589e\u52a0\u6216\u8005\u662f\u51cf\u5c11\uff0c\u90a3\u4e0d\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u5417\uff1f\r\n\r\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u6761\u9700\u8981\u5904\u7406\u7684\u8fb9\u5355\u72ec\u89c6\u4f5c\u4e00\u6b21\u64cd\u4f5c\uff0c\u8ba9\u540c\u4e00\u6761\u7ebf\u4e0a\u7684\u4e24\u4e2a\u8fb9\u4e5f\u5206\u522b\u8fdb\u884c\u5207\u5272\uff0c\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\r\n\r\n\u4f46\u662f\uff0c\u6709\u7684\u4eba\u53ef\u80fd\u8981\u95ee\u4e86\uff1a\u8fd9\u6837\u4e0d\u4f1a\u591a\u51fa\u6765\u4e00\u4e2a\u5bbd\u5ea6\u4e3a 0 \u7684\u77e9\u5f62\u5417\uff1f\r\n\r\n\u9996\u5148\uff0c\u5982\u679c\u6211\u4eec\u662f\u6c42\u9762\u79ef\u5e76\uff0c\u90a3\u6211\u4eec\u5c31\u4e0d\u7528\u62c5\u5fc3\u8fd9\u79cd\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u7684\u77e9\u5f62\u3002\r\n\r\n\u4f46\u6211\u4eec\u662f\u5468\u957f\u5e76\uff0c\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u503c\u5f97\u6df1\u601d\u3002\r\n\r\n\u9996\u5148\u544a\u8bc9\u4f60\u7b54\u6848\uff1a\u4e0d\u4f1a\u5f71\u54cd\u3002\r\n\r\n\u81ea\u884c\u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\uff0c\u4e0b\u9762\u4f1a\u6709\u89e3\u91ca\u3002\r\n\r\n---\r\n\r\n\u6709\u56fe\u6709\u771f\u76f8\uff0c\u653e\u56fe\uff1a\r\n\r\n![img](https://cdn.luogu.com.cn/upload/image_hosting/b1tixnco.png \"\u89e3\u91ca\")\r\n\r\n\u5de6\u8fb9\u7684\u7ebf\u662f\u6211\u4eec\u5904\u7406\u524d\u7684\uff0c\u4e2d\u95f4\u7684\u662f\u4e00\u4e2a\u4e2d\u95f4\u72b6\u6001\uff08\u4e5f\u5c31\u662f\u5bbd\u5ea6\u4e3a 0 \u7684\u77e9\u5f62\uff0c\u4e24\u6761\u8fb9\u91cd\u5408\u4e86\uff09\uff0c\u53f3\u9762\u662f\u5904\u7406\u540e\u7684\u72b6\u6001\u3002\r\n\r\n\u6211\u4eec\u4e0d\u59a8\u8bbe\u4e00\u5f00\u59cb\u8986\u76d6\u957f\u5ea6\u4e3a $l_0$\uff0c\u589e\u52a0\u7684\u90a3\u4e00\u6bb5\u8bbe\u4e3a $\\Delta l_1$\uff0c\u51cf\u5c11\u7684\u90a3\u4e00\u6bb5\uff08\u957f\u5ea6\uff09\u8bbe\u4e3a $\\Delta l_2$\u3002\r\n\r\n\u7136\u540e\u5f88\u5bb9\u6613\u5f97\u51fa\uff0c\u4e2d\u95f4\u72b6\u6001\u7684\u957f\u5ea6\u5c31\u662f $l_0+\\Delta l_1$\uff0c\u800c\u5904\u7406\u5b8c\u7684\u90a3\u4e00\u6bb5\u957f\u5ea6\u5c31\u662f $l_0+\\Delta l_1-\\Delta l_2$\u3002\r\n\r\n\u6211\u4eec\u6309\u7167\u5e38\u8bc6\u7b97\u4e00\u4e0b\u8fd9\u4e2d\u95f4\u5e94\u8be5\u51cf\u53bb\u7684\u957f\u5ea6\uff1a\r\n\r\n$2(l_0-\\Delta l_2)$\r\n\r\n\u90a3\u4e48\uff0c\u6839\u636e\u6211\u4eec\u7684\u89c4\u5f8b\uff0c\u770b\u4e00\u4e0b\u6211\u4eec\u4f1a\u51cf\u53bb\u591a\u5c11\uff1a\r\n\r\n$2\\times \\min(l_0,l_0+\\Delta l_1)+2\\times\\min(l_0+\\Delta l_1,l_0+\\Delta l_1 - \\Delta l_2)$\r\n\r\n\u5316\u7b80\u4e00\u4e0b\uff0c\u4e5f\u5c31\u662f\uff1a\r\n\r\n$2\\times(2l_0+\\Delta l_1-\\Delta l_2)$\r\n\r\n\u4e0d\u4e00\u6837\uff1f\u522b\u6025\uff0c\u8fd8\u6709\u4e00\u90e8\u5206\u6ca1\u7b97\u4e0a\u3002\r\n\r\n\u6211\u4eec\u591a\u7b97\u7684\u90a3\u4e00\u4e2a\u5bbd\u5ea6\u4e3a 0 \u7684\u77e9\u5f62\u8fd8\u6ca1\u7b97\u4e0a\u5462\u3002\r\n\r\n\u5b83\u7684\u5bbd\u5ea6\u662f 0\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5b83\u5e73\u884c\u4e8e\u626b\u63cf\u7ebf\u7684\u90e8\u5206\u5c31\u884c\u4e86\u3002\r\n\r\n$2\\times(l_0+\\Delta l_1)$\r\n\r\n\u6211\u4eec\u5c06\u51cf\u53bb\u7684\u957f\u5ea6\u51cf\u53bb\u591a\u7b97\u7684\u957f\u5ea6\uff08\u76f8\u5f53\u4e8e\u8d1f\u6570\u52a0\u6b63\u6570\uff0c\u4e5f\u5c31\u662f\u7edd\u5bf9\u503c\u76f8\u51cf\uff09\uff0c\u5f97\u5230\u8fd9\u4e2a\uff1a\r\n\r\n$2(l_0-\\Delta l_2)$\r\n\r\n\u5b8c\u7f8e\u3002\r\n\r\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd9\u4e2a\u4e2d\u95f4\u72b6\u6001\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u7b54\u6848\u3002\r\n\r\n\u4f11\u606f\u4e00\u4e0b\uff0c\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\u3002\r\n\r\n---\r\n\r\n\u7531\u4e8e\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u5185\u7684\u7aef\u70b9\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u6211\u4eec\u7684\u677f\u5b50\u91cc\u9762\u52a0\u4e0a\u4e00\u4e9b\u4e1c\u897f\u3002\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u4ecd\u7136\u662f\u5229\u7528\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u8fd9\u4e2a\u4e0d\u7528\u52a8\u3002\r\n\r\n\u6211\u4eec\u7684 `pushup` \u51fd\u6570\u5c06\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a\r\n\r\n```cpp\r\nvoid pushup(void) {\r\n        if (cover > 0) {  // \u5b8c\u5168\u8986\u76d6\r\n            length= R - L + 1;\r\n            num= 0;\r\n            lcover= rcover= true;\r\n            return;\r\n        }\r\n        if (lc == nullptr || rc == nullptr) {  // \u6ca1\u6709\u8986\u76d6\u4e14\u6ca1\u5b69\u5b50\r\n            length= 0;\r\n            num= 0;\r\n            lcover= rcover= false;\r\n        } else {  // \u4e00\u822c\r\n            length= lc->length + rc->length;\r\n            num= lc->num + rc->num;\r\n            if (lc->rcover != rc->lcover) {\r\n                ++num;\r\n            }\r\n            lcover= lc->lcover;\r\n            rcover= rc->rcover;\r\n            if (lc->lc == rc->rc && lc->cover == 0&&rc->cover==0) {\r\n                delete lc;\r\n                delete rc;\r\n                lc= rc= nullptr;\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n\u8fd9\u91cc\u9762\u591a\u4e86\u51e0\u4e2a\u4f60\u6ca1\u89c1\u8fc7\u7684\u53d8\u91cf\uff0c\u8fd9\u91cc\u5217\u4e00\u4e0b\u5b83\u4eec\u7684\u610f\u4e49\uff1a\r\n\r\n`cover`\uff1a\u5b9e\u9645\u4e0a\u5c31\u662f\u4e0a\u6b21\u7684 `time`\u3002\r\n\r\n`lcover`\uff08`rcover`\uff09\uff1a\u533a\u95f4\u6700\u5de6\uff08\u53f3\uff09\u7aef\u662f\u5426\u88ab\u8986\u76d6\u3002\r\n\r\n`num`\uff1a\u533a\u95f4\u5185\u90e8\u7684\u7aef\u70b9\u4e2a\u6570\u3002\r\n\r\n\u7531\u4e8e\u8fd9\u4e2a\u51fd\u6570\u5927\u53d8\u6837\u4e86\uff0c\u6211\u5728\u8fd9\u91cc\u68b3\u7406\u4e00\u4e0b\u6574\u4e2a\u51fd\u6570\u7684\u601d\u8def\uff1a\r\n\r\n\u9996\u5148\uff0c\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u88ab\u8986\u76d6\u4e86\u81f3\u5c11\u4e00\u6b21\uff08\u4e0d\u7ba1\u7956\u5148\uff0c\u7956\u5148\u7684\u4e8b\u60c5\u7528\u4e0d\u5230\u540e\u4ee3\u5173\u5fc3\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u603b\u8986\u76d6\u957f\u5ea6\u5c31\u662f\u70b9\u7684\u603b\u957f\u5ea6\uff0c\u8fd9\u4e00\u6bb5\u5185\u90e8\u81ea\u7136\u4e5f\u4e0d\u4f1a\u6709\u7aef\u70b9\uff0c\u800c\u5de6\u53f3\u4e24\u8fb9\u81ea\u7136\u90fd\u88ab\u8986\u76d6\u4e86\u3002\r\n\r\n\u7136\u540e\u662f\u6ca1\u6709\u88ab\u8986\u76d6\u4e14\u6ca1\u6709\u5b69\u5b50\u7684\u60c5\u51b5\uff0c\u8fd9\u8868\u660e\u8fd9\u4e2a\u70b9\u548c\u6211\u4eec\u7684\u8986\u76d6\u533a\u57df\u6beb\u65e0\u5173\u8054\uff0c\u56e0\u6b64\u5b83\u7684\u8986\u76d6\u957f\u5ea6\u662f 0\uff0c\u5185\u90e8\u6ca1\u6709\u7aef\u70b9\uff0c\u4e24\u7aef\u4e5f\u90fd\u6ca1\u6709\u88ab\u8986\u76d6\u3002\r\n\r\n\u6700\u540e\u662f\u4e00\u822c\u60c5\u51b5\uff1a\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u4f46\u5b83\u6709\u5b69\u5b50\uff0c\u6709\u53ef\u80fd\u53c2\u4e0e\u5230\u6211\u4eec\u7684\u7edf\u8ba1\u4e2d\u6765\u3002\r\n\r\n\u8fd9\u4e00\u6bb5\u7684\u603b\u8986\u76d6\u957f\u5ea6\u663e\u7136\u5c31\u662f\u4e24\u4e2a\u5b69\u5b50\u7684\u957f\u5ea6\u548c\u3002\r\n\r\n\u8fd9\u4e00\u6bb5\u5185\u90e8\u7684\u7aef\u70b9\u5305\u62ec\u8fd9\u6837\u4e09\u90e8\u5206\uff1a\r\n\r\n1. \u5de6\u513f\u5b50\u91cc\u7684\r\n2. \u53f3\u513f\u5b50\u91cc\u7684\r\n3. \u4e24\u4e2a\u513f\u5b50\u4e2d\u95f4\u6b63\u597d\u5939\u7740\u4e00\u4e2a\u70b9\r\n\r\n\u8fd9\u4e5f\u5c31\u662f\u5904\u7406\u65b9\u6cd5\u3002\r\n\r\n\u9996\u5148\uff0c\u5c06\u603b\u6570\u8bbe\u4e3a\u4e24\u4e2a\u513f\u5b50\u7684\u6570\u91cf\u548c\u3002\r\n\r\n\u4e4b\u540e\uff0c\u5982\u679c\u5de6\u513f\u5b50\u7684\u53f3\u8fb9\u88ab\u8986\u76d6\u4e86\u4e14\u53f3\u513f\u5b50\u7684\u5de6\u8fb9\u6ca1\u6709\u8986\u76d6\uff0c\u6216\u8005\u5de6\u513f\u5b50\u7684\u53f3\u8fb9\u6ca1\u6709\u8986\u76d6\u4e14\u53f3\u513f\u5b50\u7684\u5de6\u8fb9\u88ab\u8986\u76d6\u4e86\uff0c\u90a3\u4e48\u4e2d\u95f4\u5c31\u662f\u5939\u7740\u4e00\u4e2a\u70b9\u3002\r\n\r\n\u4eba\u8bdd\uff1a\u4e24\u4e2a\u513f\u5b50\u4e34\u8fd1\u5bf9\u65b9\u7684\u90a3\u4e00\u7aef\uff0c\u4e00\u4e2a\u88ab\u8986\u76d6\uff0c\u4e00\u4e2a\u6ca1\u6709\uff0c\u90a3\u5c31\u8bf4\u660e\u4e2d\u95f4\u6709\u4e2a\u7aef\u70b9\u3002\r\n\r\n\u5982\u679c\u7b26\u5408\u4e0a\u8ff0\uff0c\u90a3\u4e48\u5c31\u5c06\u70b9\u6570+1\u3002\r\n\r\n\u4e4b\u540e\u4e24\u7aef\u7684\u8986\u76d6\u5904\u7406\u548c\u5bf9\u5e94\u513f\u5b50\u4e00\u6837\uff0c\u4e0d\u5fc5\u591a\u8a00\u3002\r\n\r\n\u7136\u540e\u662f\u4e0a\u6b21\u7684\u4f20\u7edf\u624b\u827a\uff0c\u5982\u679c\u513f\u5b50\u6ca1\u7528\u4e86\uff0c\u5c31\u6e05\u7406\u95e8\u6237\uff0c\u817e\u51fa\u7a7a\u95f4\u7ed9\u5176\u5b83\u60f3\u51fa\u751f\u7684\u513f\u5b59\u7956\u5148\u4eec\u3002\r\n\r\n\u4e0b\u9762\u6211\u653e\u4e00\u4e0b\u6211\u8fd9\u6b21\u6253\u7684\u677f\u5b50\uff1a\r\n\r\n```cpp\r\nstruct node {\r\n    int L, R;\r\n    node *lc, *rc;\r\n    int cover;\r\n    int num;\r\n    int length;\r\n    bool lcover, rcover;\r\n    void pushup(void) {\r\n        if (cover > 0) {\r\n            length= R - L + 1;\r\n            num= 0;\r\n            lcover= rcover= true;\r\n            return;\r\n        }\r\n        if (lc == nullptr || rc == nullptr) {\r\n            length= 0;\r\n            num= 0;\r\n            lcover= rcover= false;\r\n        } else {  // \u4e00\u822c\r\n            length= lc->length + rc->length;\r\n            num= lc->num + rc->num;\r\n            if (lc->rcover != rc->lcover) {\r\n                ++num;\r\n            }\r\n            lcover= lc->lcover;\r\n            rcover= rc->rcover;\r\n            if (lc->lc == rc->rc && lc->cover == 0&&rc->cover==0) {\r\n                delete lc;\r\n                delete rc;\r\n                lc= rc= nullptr;\r\n            }\r\n        }\r\n    }\r\n    void add(int l, int r, int x) {\r\n        if (l <= L && r >= R) {\r\n            cover+= x;\r\n            pushup();\r\n            return;\r\n        }\r\n        if (lc == nullptr || rc == nullptr) {\r\n            lc= new node;\r\n            rc= new node;\r\n            lc->L= L;\r\n            lc->R= (L + R) >> 1;\r\n            rc->L= lc->R + 1;\r\n            rc->R= R;\r\n            lc->cover= rc->cover= 0;\r\n            lc->num= rc->num= 0;\r\n            lc->lcover= lc->rcover= rc->lcover= rc->rcover= false;\r\n            lc->length= rc->length= 0;\r\n            lc->lc= lc->rc= rc->lc= rc->rc= nullptr;\r\n        }\r\n        if (l <= lc->R) lc->add(l, r, x);\r\n        if (r >= rc->L) rc->add(l, r, x);\r\n        pushup();\r\n    }\r\n};\r\n```\r\n\r\n\u6574\u4f53\u548c\u4e0a\u6b21\u5dee\u4e0d\u591a\uff0c\u5c31\u662f `pushup` \u6709\u4e9b\u53d8\u5316\u3002\r\n\r\n\u7136\u540e\u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e0b\u4f8b\u9898\uff1a[P1856](https://www.luogu.com.cn/problem/P1856)\u3002\r\n\r\n\u8fd9\u91cc\u662f\u8fd9\u9053\u9898\u7684\u4e3b\u51fd\u6570\uff08\u8fd9\u79cd\u65b9\u6cd5\uff09\uff1a\r\n\r\n```cpp\r\n\r\nint main() {\r\n    node* root= new node;\r\n    root->L= -20000;\r\n    root->R= 20000;\r\n    root->num= root->cover= 0;\r\n    root->lcover= root->rcover= false;\r\n    root->lc= root->rc= nullptr;\r\n    root->length= 0;\r\n    int n;\r\n    read(n);\r\n    int a, b, c, d;\r\n    for (int i= 0; i < n; ++i) {\r\n        read(a, b, c, d);\r\n        lines.push_back({a, {{b, d - 1}, 1}});\r\n        lines.push_back({c, {{b, d - 1}, -1}});\r\n    }\r\n    sort(lines.begin(), lines.end());\r\n    int ans= 0;\r\n    int l1,l2;\r\n    for (int i= 0; i < lines.size(); ++i) {\r\n        if (i != 0) {\r\n            ans+= root->num * (lines[i].first - lines[i - 1].first);\r\n        }\r\n        ans+=root->length*2;\r\n        l1=root->length;\r\n        root->add(lines[i].second.first.first, lines[i].second.first.second, lines[i].second.second);\r\n        l2=root->length;\r\n        ans-=2*min(l1,l2);\r\n    }\r\n    cout << ans;\r\n}\r\n```\r\n\r\n`read` \u662f\u5feb\u8bfb\uff0c\u53ef\u4ee5\u6362\u6389\u3002\r\n\r\n\u4f46\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u7b2c\u4e00\u904d\u8fc7\u7684\u4ee3\u7801\u3002\r\n\r\n\u6211\u7b2c\u4e00\u904d\u8fc7\u7684\u4ee3\u7801\u957f\u8fd9\u6837\uff08\u4e3b\u51fd\u6570\uff09\uff1a\r\n\r\n```cpp\r\n\r\nint main() {\r\n    node* root= new node;\r\n    root->L= -20000;\r\n    root->R= 20000;\r\n    root->num= root->cover= 0;\r\n    root->lcover= root->rcover= false;\r\n    root->lc= root->rc= nullptr;\r\n    root->length= 0;\r\n    int n;\r\n    read(n);\r\n    int a, b, c, d;\r\n    for (int i= 0; i < n; ++i) {\r\n        read(a, b, c, d);\r\n        lines.push_back({a, {{b, d - 1}, 1}});\r\n        lines.push_back({c, {{b, d - 1}, -1}});\r\n    }\r\n    sort(lines.begin(), lines.end());\r\n    int ans= 0;\r\n    for (int i= 0; i < lines.size(); ++i) {\r\n        if (i != 0) {\r\n            ans+= root->num * (lines[i].first - lines[i - 1].first);\r\n        };\r\n        ans+= lines[i].second.first.second - lines[i].second.first.first + 1;\r\n        if (lines[i].second.second > 0) {\r\n            ans-= root->ask(lines[i].second.first.first, lines[i].second.first.second);\r\n            root->add(lines[i].second.first.first, lines[i].second.first.second, lines[i].second.second);\r\n        } else {\r\n            root->add(lines[i].second.first.first, lines[i].second.first.second, lines[i].second.second);\r\n            ans-= root->ask(lines[i].second.first.first, lines[i].second.first.second);\r\n        }\r\n    }\r\n    cout << ans;\r\n}\r\n```\r\n\r\n\u8fd9\u662f\u6211\u7684\u601d\u8def\uff1a\r\n\r\n\u6211\u4eec\u5148\u628a\u8fd9\u6b21\u7684\u6a2a\u5411\u5bbd\u5ea6\u7b97\u51fa\u6765\uff0c\u7136\u540e\u76f4\u63a5\u5904\u7406\u548c\u626b\u63cf\u7ebf\u5e73\u884c\u7684\u90e8\u5206\u3002\r\n\r\n\u5982\u679c\u8fd9\u6b21\u662f\u6dfb\u52a0\u4e86\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u8fd9\u90e8\u5206\u7684\u957f\u5ea6\u5c31\u662f\u6211\u4eec\u65b0\u52a0\u5165\u7684\u5b9e\u9645\u957f\u5ea6\uff08\u4e5f\u5c31\u662f\u5728\u626b\u63cf\u7ebf\u4e0a\u591a\u51fa\u7684\u90a3\u4e00\u5757\uff09\uff0c\u53ea\u8981\u7528\u8fd9\u4e00\u6761\u8fb9\u7684\u603b\u957f\u5ea6\u51cf\u53bb\u589e\u52a0\u524d\u90a3\u4e2a\u533a\u57df\u539f\u672c\u5c31\u88ab\u8986\u76d6\u8fc7\u7684\u957f\u5ea6\u3002\r\n\r\n\u5982\u679c\u8fd9\u6b21\u662f\u5220\u9664\u4e86\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u5c31\u662f\u6211\u4eec\u53bb\u6389\u7684\u5b9e\u9645\u957f\u5ea6\uff0c\u53ea\u8981\u7528\u8fd9\u4e00\u6761\u8fb9\u7684\u603b\u957f\u5ea6\u51cf\u53bb\u5220\u6389\u8fd9\u6761\u8fb9\u540e\u90a3\u4e00\u90e8\u5206\u8fd8\u6ca1\u6709\u5220\u6389\u7684\u957f\u5ea6\u3002\r\n\r\n\u5177\u4f53\u770b\u67d0\u4e00\u90e8\u5206\u7684\u8986\u76d6\u957f\u5ea6\u4f7f\u7528\u4e86\u7ed3\u6784\u4f53\u91cc\u7684 `ask` \u51fd\u6570\uff0c\u957f\u8fd9\u6837\uff1a\r\n\r\n```cpp\r\nint ask(int l, int r) {\r\n    if (cover > 0) {\r\n        return min(r, R) - max(l, L) + 1;\r\n    }\r\n    if (l <= L && r >= R) {\r\n        return length;\r\n    }\r\n    if (lc == nullptr && rc == nullptr) return 0;\r\n    if (r <= lc->R) return lc->ask(l, r);\r\n    if (l >= rc->L) return rc->ask(l, r);\r\n    return lc->ask(l, r) + rc->ask(l, r);\r\n}\r\n```\r\n\r\n\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u80fd\u901a\u8fc7\u6b64\u9898\uff0c\u6240\u4ee5\u80fd\u8bb0\u4f4f\u54ea\u79cd\u5c31\u7528\u54ea\u79cd\u5427\u3002\r\n\r\n\u597d\u4e86\uff0c\u6211\u8981\u8bb2\u7684\u5c31\u8fd9\u4e48\u591a\u4e86\uff0c\u5982\u679c\u6211\u8fd8\u6709\u673a\u4f1a\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u518d\u7ed9\u626b\u63cf\u7ebf\u7cfb\u5217\u51fa\u7eed\u7bc7\u3002\r\n\r\n[The End](https://www.luogu.com.cn/blog/478861/)",
        "postTime": 1677506631,
        "uid": 478861,
        "name": "Gumbo",
        "ccfLevel": 6,
        "title": "\u626b\u63cf\u7ebf\u5468\u957f\u5e76"
    },
    {
        "content": "## \u524d\u8a00\n~~\u5bf9\u4e8e\u8fd9\u9053\u9898\u7ebf\u6bb5\u6811\u7684\u5199\u6cd5\u8bf7\u53c2\u89c1\u5176\u4ed6dalao\u9898\u89e3~~\n\n\u53ef\u80fd\u56e0\u4e3a\u8fd9\u9053\u9898\u7684\u6d4b\u8bd5\u70b9\u90fd\u633a\u6c34\uff0c\u672c\u4eba\u53c2\u7167\uff08\u819c\u62dc\uff09[3206583219sjw](https://www.luogu.com.cn/user/129601) \u7684\u60f3\u6cd5\u6765\u6c34\u4e86\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u56e0\u4e3a\u8fd9\u4e2a\u7c7b\u4f3c\u4e8e\u626b\u63cf\u7684\u601d\u7ef4\u548c\u6807\u7a0b\u6709~~\u5f02\u66f2\u540c\u5de5\u4e4b\u5999~~\u53ef\u80fd\u4f1a\u5bf9\u50cf\u6211\u8fd9\u6837\u7684\u65b0\u624b\u8d77\u4e00\u70b9\u6307\u5bfc\u4f5c\u7528\u4ee5\u7406\u89e3\u548c\u5e94\u7528\u5176\u4ed6\u66f4\u4e3a\u9ad8\u5927\u4e0a\u7684\u65b9\u6cd5\u5427~\n\n###### \u4e0d\u77e5\u9053\u6570\u636e\u4f1a\u4e0d\u4f1a\u52a0\u5f3a\u2026\u2026\n\n## \u601d\u8def\n\u89c2\u5bdf\u8fd9\u4e9b\u4e2a\u77e9\u5f62\uff0c\u901a\u8fc7\u9898\u610f\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u8fd9\u4e2a\u9898\u53ea\u4e0e\u77e9\u5f62\u7684\u5468\u957f\u6709\u5173\uff08\u5e9f\u8bdd\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u81ea\u7136\u800c\u7136\u5730\u60f3\u5230\u53ef\u4ee5\u5c06\u77e9\u5f62\u5206\u4e3a\u56db\u6761\u7ebf\u5206\u522b\u8fdb\u884c\u8ba1\u7b97\u3002\u7531\u4e8e\u77e9\u5f62\u7684\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u5c06\u6240\u6709\u77e9\u5f62\u7684\u5de6\u8fb9\u7ad6\u7ebf\u548c\u4e0b\u8fb9\u6a2a\u7ebf\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u5c06\u7b54\u6848\u4e582\u5373\u53ef\u3002\u8fd9\u4e2a\u505a\u6cd5\u7684\u597d\u5904\u5728\u4e8e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/02homnyn.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6bd4\u5982\u4e0a\u4e24\u4e2a\u77e9\u5f62\uff08\u5185\u542b\u8fb9\u7528\u9ec4\u8272\u6807\u6ce8\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5e73\u79fb\u7684\u65b9\u6cd5\u786e\u4fdd\u6574\u4f53\u4f4d\u4e8e\u5de6\u8fb9\u7684\u7ad6\u8fb9\u548c\u53f3\u8fb9\u7684\u8fb9\u4e00\u5b9a\u4e00\u4e00\u5bf9\u5e94\u3002\u90a3\u4e48\u6211\u4eec**\u5148\u5c06\u6bcf\u4e2a\u77e9\u5f62\u7684\u5de6\u8fb9\u4ece\u5de6\u5f80\u53f3\u6392\u5217\u4e00\u4e0b**\uff0c\u8ba8\u8bba\u5de6\u8fb9\u77e9\u5f62\u65f6\uff0c\u5bf9\u4e8e\u5185\u542b\u7684\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4tag\u6807\u8bb0\uff0c\u5373\n```cpp\nfor(int i=1;i<=n;++i)\t\t\t\t\t //\u4ece\u5de6\u5f80\u53f3\u904d\u5386\u77e9\u5f62\n\t{\n\t\tfor(int j=e[i].ly;j<e[i].ry ;++j)//\u4ece\u4e0b\u5012\u4e0a\u904d\u5386\u6807\u8bb0\u6bcf\u4e2a\u6784\u6210\u8fb9\u7684\u70b9\n\t\t{\n\t\t\tif(tag[j]<e[i].lx )ans+=2;   //tag\u5728\u904d\u5386\u7b2c\u4e8c\u4e2a\u77e9\u5f62\u65f6\u5728\u9ec4\u8272\u7684\u53f3\u7ad6\u8fb9\u65f6\u904d\u5386\u7684\u70b9\u5728\u7b2c\u4e00\u4e2a\u77e9\u5f62\u5185\u90e8\uff0cso\u4e0d\u52a0\uff0c\u539f\u6765\u7684\u9ec4\u8fb9\u79fb\u5230\u4e86\u6700\u53f3\u8fb9\u7684\u7c89\u8fb9\n            \t\t\t\t\t\t\t //ans+=2\u662f\u8fde\u63a5\u7684\u6574\u4e2a\u56fe\u5f62\u7684\u5de6\u8fb9+\u53f3\u8fb9\uff0c\u4fdd\u8bc1\u4e24\u4e24\u914d\u5bf9\n\t\t\tif(tag[j]<e[i].rx )tag[j]=e[i].rx ;//\u66f4\u65b0\u6574\u4f53\u56fe\u50cf\u7684\u6700\u53f3\u8fb9\u754c\n\t\t}\n\t}\n```\n\u7528tag\u6570\u7ec4\u6807\u8bb0\u4e0a\u4e00\u4e2a\uff08\u6216\u4e4b\u524d\u53f3\u8fb9\u6700\u53f3\u7684\uff09\u77e9\u5f62\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u660e\u786e\u63a5\u4e0b\u6765\u7684\u77e9\u5f62\u662f\u5426\u76f8\u63a5\u3002\u8fd9\u91cctag\u8868\u793a\u7684\u662f\u7ad6\u7740\u7684y\u8f74\u3002\n\u5bf9\u4e8e\u6a2a\u8fb9\u4e5f\u4e00\u6837\uff1a\n```cpp\nfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=e[i].lx ;j<e[i].rx ;++j)\n\t\t{\n\t\t\tif(tag[j]<e[i].ly )ans+=2;\n\t\t\tif(tag[j]<e[i].ry )tag[j]=e[i].ry;\n\t\t}\n\t}\n```\n\u603b\u7684\u6765\u8bf4\u8fd9\u4e2a\u601d\u8def\u7684\u6d41\u7a0b\u548c\u7ebf\u6bb5\u6811\u505a\u6cd5\u662f\u4e00\u6837\u7684\uff08\u5427\uff09\uff0c~~\u4f46\u7531\u4e8e\u6211\u592a\u83dc\u4e86\u800c\u4e14\u7ebf\u6bb5\u6811\u60f3\u4e0d\u51fa\u6765~~\u53ea\u80fd\u7528\u8fd9\u4e2a\u7a0d\u5fae\u6295\u673a\u53d6\u5de7\u7684\u65b9\u6cd5\uff0c\u7ebf\u6bb5\u6811\u5e94\u8be5\u662f\u6bd4\u8fd9\u4e2a\u66f4\u4f18\u79c0\uff08\u6211\u6ca1\u6bd4\u8f83\u8fc7\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6~~\u4e0d\u77e5\u9053~~\u3002\u8fd9\u91cc\u518d\u6b21\u819c\u62dc\u63d0\u4f9b\u65b9\u6cd5\u601d\u8def\uff08\u548c\u6807\u7a0b\uff09\u7684[dalao](https://www.luogu.com.cn/user/129601)\u3002\n## \u8fc7\u7a0b\n\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u50a8\u77e9\u5f62\u3002\n```cpp\n\nint tag[21000],ans=0,n;\nstruct square\n{\n\tint lx,ly,rx,ry;//lx\uff0cly\u662f\u5de6\u4e0b\u5750\u6807\uff0crx\uff0cry\u53f3\u4e0a\n}e[5005];\n\nbool cmpx(edge a , edge b){return a.lx <b.lx ;}\nbool cmpy(edge a , edge b){return a.ly <b.ly ;}\n//\u8ba8\u8bba\u4e0d\u540c\u65b9\u5411\u4e0a\u7528\u4e8esort\u7684\u6392\u5e8f\u51fd\u6570\n```\n\u4e3b\u51fd\u6570\n```cpp\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d%d%d%d\",&e[i].lx ,&e[i].ly ,&e[i].rx ,&e[i].ry );\n\t\te[i].lx +=10001;\n\t\te[i].ly +=10001;\n\t\te[i].rx +=10001;\n\t\te[i].ry +=10001;\n\t}                          //\u56e0\u4e3atag\u521d\u59cb\u662f0\uff0c\u800c\u9898\u76ee\u5750\u6807\u6709\u8d1f\u6570\u6240\u4ee5\u6295\u4e0b\u673a\n//////////////////////////////////////////////////////////////////////////\n\tmemset(tag,-1,sizeof(tag));//\u53ef\u4ee5\u4e00\u6570\u7ec4\u4e8c\u7528\n\tsort(e+1,e+n+1,cmpx);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=e[i].ly ;j<e[i].ry ;++j)\n\t\t{\n\t\t\tif(tag[j]<e[i].lx )ans+=2;\n\t\t\tif(tag[j]<e[i].rx )tag[j]=e[i].rx ;\n\t\t}\n\t}\n//////////////////////////////////////////////////////////////////////////\n//\t\u2026\u2026\u6a2a\u8fb9\u4ee3\u7801\u8bf7\u81ea\u884c\u60f3\u8c61\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u56e0\u4e3a\u9632\u5237\u9898\u548c~~\u7248\u6743\u539f\u56e0~~\u4e0d\u80fd\u53d1\u5b8c\u6574\u7a0b\u5e8f\u975e\u5e38\u62b1\u6b49\u2026\u2026\u4f46\u662f\u57fa\u672c\u601d\u8def\u5e94\u8be5\u90fd\u6e05\u695a\u4e86~~\u4e0d\u6e05\u695a\u7684\u8bf7\u51fa\u95e8\u53f3\u8f6c\u7ebf\u6bb5\u6811\u3010\u6ed1\u7a3d\u3011~~\n\n### \u5e0c\u671b\u6211\u7684\u9898\u89e3\u80fd\u5e2e\u5230\u4f60\n###### \u7b2c\u4e00\u7bc7\u9898\u89e3\u7559\u5ff5",
        "postTime": 1583413226,
        "uid": 280015,
        "name": "Star_Cried",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u8fd9\u9898\u6539\u4e86\u597d\u4e45\u554a\u3002\u3002\u3002\n\n\u4e00\u76f4\u6ca1\u6709\u60f3\u5230\u600e\u4e48\u7ef4\u62a4\u73b0\u5728\u7a7a\u51fa\u6765\u7684\u8fb9\uff0c\u7ed3\u679c\u5361\u4e86\u5f88\u4e45\u3002\n\n\u6700\u540e\u770b\u9898\u89e3\u4e4b\u540e\u624d\u8c41\u7136\u5f00\u6717\u3002\n\n\u4f46\u662f\u5904\u7406\u8fb9\u6392\u5e8f\u7684\u65f6\u5019\u4e5f\u662f\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u6700\u540e\u505a\u4e86 $3$ \u5c0f\u65f6\u7ec8\u4e8e\u505a\u51fa\u6765\u4e86\u3002\u3002\u3002\n\n# \u9898\u9762\n\n[P1856 [USACO5.5]\u77e9\u5f62\u5468\u957fPicture](https://www.luogu.org/problem/P1856)\n\n# Solution\n\n\u8fd9\u79cd\u7ef4\u62a4\u9762\u79ef\u5e76\uff0c\u5468\u957f\u5e76\u7684\u9898\u90fd\u53ef\u4ee5\u7528\u626b\u63cf\u7ebf\u6765\u89e3\u51b3\u3002\n\n\u548c\u7ef4\u62a4\u9762\u79ef\u5e76\u4e00\u6837\uff0c\u6211\u4eec\u8fd8\u662f\u5c06\u539f\u56fe\u5212\u5206\u6210\u4e00\u6bb5\u4e00\u6bb5\u7684\u3002\n\n\u4f46\u662f\u548c\u9762\u79ef\u5e76\u6709\u5dee\u522b\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6a2a\u8fb9\u548c\u7ad6\u8fb9\u5206\u522b\u8ba1\u7b97\u4ed6\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\uff08\u867d\u7136\u597d\u50cf\u53ef\u4ee5\u53ea\u7b97\u4e00\u6b21\uff0c\u4f46\u6ca1\u5fc5\u8981\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6761\u7ebf\uff0c\u5b83\u80fd\u4ea7\u751f\u7684\u8d21\u732e\u80af\u5b9a\u662f\u5b83\u7ba1\u8f96\u7684\u533a\u95f4\u91cc\u9762\u6682\u65f6\u6ca1\u88ab\u5176\u4ed6\u77e9\u5f62\u8986\u76d6\u7684\u957f\u5ea6\u3002\n\n\u4f46\u662f\u6211\u4eec\u8981\u76f4\u63a5\u7ef4\u62a4\u662f\u5f88\u56f0\u96be\u7684\uff0c\u8003\u8651\u6362\u4e00\u79cd\u601d\u8def\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u52a0\u8fb9\uff0c\u5b83\u7684\u7b54\u6848\u5176\u5b9e\u5c31\u662f**\u65b0\u8986\u76d6/\u64a4\u9500**\u7684\u7ebf\u6bb5\u957f\u5ea6\u3002\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\n\n\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u8bb0\u5f55\u4e00\u4e0b\u4e0a\u4e00\u6b21\u7684\u88ab\u8986\u76d6\u4e86\u591a\u5c11\uff0c\u6bcf\u4e00\u6b21\u66f4\u65b0\u540e\u5c06\u7b54\u6848\u52a0\u4e0a\u5f53\u524d\u8986\u76d6\u548c\u4e0a\u4e00\u6b21\u8986\u76d6\u7684\u957f\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\u662f\u5bf9\u6bcf\u4e00\u6761\u7ebf\u6bb5\u6392\u5e8f\u662f\u7684\u987a\u5e8f\u3002\n\n\u5bf9\u4e8e\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u5c06\u52a0\u5165\u7684\u8fb9\u6392\u5728\u524d\u9762\uff0c\u5220\u9664\u7684\u8fb9\u6392\u5728\u540e\u9762\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4fdd\u8bc1\u4e86\u4e00\u4e2a\u5de6\u53f3\u90fd\u6709\u77e9\u5f62\u7684\u8fb9\u4e0d\u4f1a\u9519\u8bef\u7684\u52a0\u5165\u7b54\u6848\u4e2d\u3002\uff08\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u5220\u9664\uff0c\u524d\u9762\u5fc5\u7136\u5bf9\u5e94\u4e86\u4e00\u4e2a\u6dfb\u52a0\uff0c\u5982\u679c\u8fd8\u6709\u6dfb\u52a0\uff0c\u90a3\u6211\u4eec\u52a0\u4e0a\u540e\uff0c\u6700\u540e\u7684\u4e00\u6b21\u5220\u9664\u7ed3\u675f\uff0c\u8ba1\u6570\u5668\u8fd8\u4f1a\u6709\u503c\uff0c\u4e0d\u4f1a\u5c06\u5b83\u52a0\u5165\u5230\u603b\u8d21\u732e\u3002\uff09\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il print(T x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 5e3+5;\nint n,a,b,c,d,ans,s[MAXN<<1],s1[MAXN<<1],sz,tmp;\nstruct Node{\n\tint x,a,b,ty;\n\tNode(){}\n\tNode(int x,int a,int b,int ty):x(x),a(a),b(b),ty(ty){}\n\tbool operator <(const Node &t) const{\n\t\treturn x==t.x?ty>t.ty:x<t.x;\n\t}\n}node[MAXN<<1],node1[MAXN<<1];\nit get_id(int x){return lower_bound(s+1,s+1+sz,x)-s;}\nit get_id1(int x){return lower_bound(s1+1,s1+1+sz,x)-s1;}\n#define lc (cur<<1)\n#define rc (cur<<1|1)\nstruct Seg_Tree{\n\tint len,cnt;\n}T[MAXN<<3];\nil pushup(int cur,int l,int r,int ty){\n\tif(T[cur].cnt) T[cur].len=ty==1?s[r+1]-s[l]:s1[r+1]-s1[l];\n\telse{\n\t\tif(l==r) T[cur].len=0;\n\t\telse T[cur].len=T[lc].len+T[rc].len;\n\t}\n}\nil updata(int cur,int l,int r,int L,int R,int k,int ty){\n\tif(l>=L&&r<=R) T[cur].cnt+=k;\n\telse{\n\t\tif(mid>=L) updata(lc,l,mid,L,R,k,ty);\n\t\tif(R>mid) updata(rc,mid+1,r,L,R,k,ty);\n\t}\n\tpushup(cur,l,r,ty);\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n);\n\tfor(ri i=1;i<=n;++i){\n\t\tread(a),read(b),read(c),read(d);\n\t\tnode[i*2-1]=Node(a,b,d,1),node[2*i]=Node(c,b,d,-1);\n\t\ts[2*i-1]=b,s[2*i]=d;\n\t\tnode1[i*2-1]=Node(b,a,c,1),node1[2*i]=Node(d,a,c,-1);\n\t\ts1[2*i-1]=a,s1[2*i]=c;\n\t}\n\tsort(node+1,node+1+2*n),sort(s+1,s+1+2*n),sz=unique(s+1,s+1+2*n)-s-1;\n\tfor(ri i=1;i<=2*n;++i){\n\t\tri ty=node[i].ty,x=get_id(node[i].a),y=get_id(node[i].b)-1;\n\t\tupdata(1,1,sz-1,x,y,ty,1);\n\t\tans+=abs(tmp-T[1].len),tmp=T[1].len;\n\t}\n\tsort(node1+1,node1+1+2*n),sort(s1+1,s1+1+2*n),sz=unique(s1+1,s1+1+2*n)-s1-1,tmp=0;\n\tfor(ri i=1;i<=2*n;++i){\n\t\tri ty=node1[i].ty,x=get_id1(node1[i].a),y=get_id1(node1[i].b)-1;\n\t\tupdata(1,1,sz-1,x,y,ty,2);\n\t\tans+=abs(tmp-T[1].len),tmp=T[1].len;\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u8981\u6ce8\u610f\u7ec6\u8282\uff0c\u8fd8\u6709\u505a\u9898\u8981\u591a\u8f6c\u6362\u4e00\u4e0b\uff0c\u5c06\u95ee\u9898\u5c3d\u53ef\u80fd\u7684\u7b80\u5316\uff0c\u65b9\u4fbf\u6211\u4eec\u8fdb\u884c\u5904\u7406\u3002",
        "postTime": 1567687961,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P1856 [USACO5.5]\u77e9\u5f62\u5468\u957fPicture \u9898\u89e3"
    },
    {
        "content": "# \u65b9\u6cd5\uff1a\u7ebf\u6bb5\u6811+\u626b\u63cf\u7ebf\n\n\u8bf4\u5230\u626b\u63cf\u7ebf\uff0c\u5c31\u662f\u6c42\u8986\u76d6\u9762\u79ef\u4e86\uff08\u84bb\u57fa\u6211\u6ca1\u505a\u8fc7\u2565\ufe4f\u2565...\uff09\uff1b\u800c\u8fd9\u9053\u9898\u662f\u6c42\u5468\u957f\uff0c\u611f\u89c9\u4e0d\u4e00\u6837\uff0c\u5176\u5b9e\u5dee\u4e0d\u591a\uff0c\u4e5f\u662f\u6a21\u677f\uff1b\n\n\u6211\u4eec\u53ef\u4ee5\uff0c\u6a2a\u7ad6\u626b\u4e00\u904d\u8bb0\u5f55\u957f\u5ea6\u7136\u540eduang~\u5728\u4e00\u8d77\uff0c\u4f46\u662f\u663e\u5f97\u4e0d\u662f\u5f88\u9ad8\u7aef\u3002\n\n\u6240\u4ee5\u5728\u6c42\u9762\u79ef\u7684\u65f6\u5019\u4f1a\u7528\u5230\u7684\u9ad8\u5ea6\u5dee\u5176\u5b9e\u5c31\u7b49\u4e8e\u7ad6\u8fb9\uff0c\u518d\u4e58\u4ee5\u7ad6\u8fb9\u7684\u4e2a\u6570num\u5c31\u53ef\u4ee5\u5f97\u51fa\u7ad6\u8fb9\u7684\u603b\u957f\u5ea6\n\n\u7136\u540e\u7ec6\u8282\uff1a\n\n1.\u6ce8\u610f\u4e24\u6761\u8fb9\u90fd\u5728\u6761\u7ebf\u4e0a\u521a\u597d\u90bb\u7684\u65f6\u5019\n\n2.\u6ce8\u610f\u53f6\u8282\u70b9\u8986\u76d6\u7684\u662f\u70b9\u4e0d\u662f\u7ebf\u6bb5\n\n3.\u6ce8\u610f\u6570\u636e\u5f88\u6c34\u4e0d\u7528\u79bb\u6563\u5316\u03a3(\u3063 \u00b0\u0414 \u00b0;)\u3063\n\n4.\u522b\u7b97\u4e86\u7ad6\u8fb9\u5c31\u5fd8\u4e86\u6a2a\u7740\u7684\uff08\u8fd9\u6b21\u957f\u5ea6-\u4e0a\u6b21\u7684\u957f\u5ea6\uff09\n\n5.\u4e24\u4e2a\u77e9\u5f62\u91cd\u5408\u7684\u8bdd\uff0c\u9700\u8981\u6539\u53d8num\u503c\n\n6\u3002\u6700\u597d\u4e0d\u8981\u5728\u7ed3\u6784\u4f53\u4e2d\u653e\u6784\u9020\u51fd\u6570\uff0c\u6570\u636e\u5927\u5bb9\u6613MLE\uff0c\u5f53\u7136\u8fd9\u9053\u9898\u4e0d\u4f1a......\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint const maxn=25000;\nstruct X{\nint l,r,h,s;//l,r\u5206\u522b\u2014>\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff0ch=\u9ad8\u5ea6\uff0cs=\u6807\u8bb0\uff1b\n/*X(){};\nX(int l_,int r_,int h_,int s_):l(l_),r(r_),h(h_),s(s_){}//\u8d4b\u503c\u51fd\u6570 \nbool operator <(const X &S) const {\n\treturn h<S.h;\n}//\u91cd\u8f7d\u6bd4\u8f83 */\n}arr[maxn];\n//\u6700\u597d\u4e0d\u8981\u5728\u7ed3\u6784\u4f53\u4e2d\u653e\u6784\u9020\u51fd\u6570\uff0c\u6570\u636e\u5927\u5bb9\u6613MLE\uff0c\u5f53\u7136\u8fd9\u9053\u9898\u4e0d\u4f1a\nbool cmp(X a,X b){\n\t  return a.h<b.h||a.h==b.h&&a.s>b.s;//\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u7cbe\u9ad3(\u0e07 \u2022_\u2022)\u0e07\n}\nX Fu(int l_,int r_,int h_,int s_){\n\tX sh;\n\tsh.l=l_,sh.h=h_,sh.r=r_,sh.s=s_;\n\treturn sh;\n}//\u8d4b\u503c\u51fd\u6570\nbool ln[maxn<<2],rn[maxn<<2];//\u6807\u8bb0\u5de6\u53f3\u7aef\u70b9\u662f\u5426\u88ab\u8986\u76d6\uff08\u5408\u5e76\u7528\uff09\nint num[maxn<<2],cnt[maxn<<2],len[maxn<<2]; //num=\u533a\u95f4\u5185\u7ebf\u6bb5\u6570\u91cf\uff0ccnt=\u533a\u95f4\u88ab\u8986\u76d6\u6b21\u6570\uff0clen=\u533a\u95f4\u8986\u76d6\u957f\u5ea6\nvoid PushUp(int rt,int l,int r){\n\tif(cnt[rt]){//\u5982\u679c\u88ab\u8986\u76d6\u3010\u6574\u4e2a\u533a\u95f4\u3011 ,\u5373>0 \n\t\tln[rt]=rn[rt]=1;//\u5de6\u53f3\u7aef\u70b9\u90fd\u88ab\u8986\u76d6\n\t\t len[rt]=r-l+1;//\u66f4\u65b0\u957f\u5ea6\n\t\t num[rt]=2;//\u6bcf\u6761\u7ebf\u6bb5\u6709\u4e24\u4e2a\u7aef\u70b9; \n\t}\n\telse {\n\t\tif(l==r) len[rt]=num[rt]=ln[rt]=rn[rt]=0;//\u5982\u679c\u662f\u53f6\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\uff08l,l\uff09/\uff08r,r\uff09\u7684\u70b9\u800c\u4e0d\u662f\u7ebf\u6bb5\uff0c\u90a3\u4e48\u5168\u90e8\u90fd\u4e3a0\uff1b\n\t\telse{//\u672a\u88ab\u5b8c\u5168\u8986\u76d6\u4f46\u662f\u4e0d\u662f\u53f6\u8282\u70b9 \n\t\t\tln[rt]=ln[rt<<1]; \trn[rt]=rn[rt<<1|1];//\u548c\u5de6\u53f3\u513f\u5b50\u5171\u7aef\u70b9\uff1b\n\t\t\tlen[rt]=len[rt<<1]+len[rt<<1|1];num[rt]=num[rt<<1]+num[rt<<1|1]; \n\t\t\tif(ln[rt<<1|1]&&rn[rt<<1]) num[rt]-=2;//\u4e24\u70b9\u91cd\u5408\uff08\u53f3\u513f\u5b50\u5de6\u7aef\u70b9&&\u5de6\u513f\u5b50\u53f3\u7aef\u70b9\uff09   \n\t\t} \n\t}\n} \nvoid Update(int L,int R,int l,int r,int n,int now){\n\tif(L<=l&&r<=R){\n\t\tcnt[now]+=n;\n\t\tPushUp(now,l,r);\n\t\t return;                             }\n\tint mid=(l+r)>>1;\n\tif(L<=mid) Update(L,R,l,mid,n,now*2);\n\tif(R>mid) Update(L,R,mid+1,r,n,now*2+1);\n\tPushUp(now,l,r);\n} \nint main(){\nint N;\nint nn=0,lnn=10000,rnn=-10000;\nscanf(\"%d\",&N);\nfor(int i=1;i<=N;i++){\n\tint a,b,c,d;\n\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\tlnn=min(lnn,a),rnn=max(rnn,c);//\u6574\u4e2a\u56fe\u5f62\u7684\u5de6\u53f3\u7aef\u70b9\uff1b\n\tarr[nn++]=Fu(a,c,b,1);//\u4e0b\u8fb9\n\tarr[nn++]=Fu(a,c,d,-1);//\u4e0a\u8fb9 \n}\nsort(arr,arr+nn,cmp);//\u6309h\u6392\u5e8f \nint L=0;\nlong long int sum=0;\nfor(int i=0;i<nn;i++){\n\tif(arr[i].l<arr[i].r) Update(arr[i].l,arr[i].r-1,lnn,rnn-1,arr[i].s,1);\n\tsum+=num[1]*(arr[i+1].h-arr[i].h);//\u7ad6\u7ebf\n\tsum+=abs(len[1]-L);\n\tL=len[1]; \n} \nprintf(\"%lld\",sum);//\u7ed3\u675f\u03b5=\u03b5=\u03b5=(~\uffe3\u25bd\uffe3)~\nreturn 0; \n} \n```\n",
        "postTime": 1559187403,
        "uid": 76230,
        "name": "ZQYZQY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "\u7b97\u6cd5\u4e00 \u79bb\u6563\u5316\n\n\u628a\u6240\u6709\u77e9\u5f62\u79bb\u6563\u5316(\u5c31\u662f\u5c06\u6574\u4e2a\u5e73\u9762\u5206\u6210\u8bb8\u591a\u201c\u7ad6\u6761\u201d\u6216\u201c\u6a2a\u6761\u201d\uff0c\u5bf9\u5176\u64cd\u4f5c\uff09\uff0c\u6bcf\u4e2a\u77e9\n\n\u5f62\u90fd\u7531\u56db\u6761\u8fb9\u7ec4\u6210\uff0c\u5206\u4e3a\u7eb5\u8fb9\u548c\u6a2a\u8fb9\u3002\u5bf9\u7eb5\u8fb9\u548c\u6a2a\u8fb9\u5206\u522b\u626b\u63cf\u4e00\u6b21\uff0c\u4ee5\u6a2a\u8fb9\u4e3a\u4f8b\uff1a\n\n\u6bcf\u4e2a\u77e9\u5f62\u7684\u4e24\u6761\u6a2a\u8fb9\u4e2d\uff0c\u79f0\u4e0b\u9762\u7684\u4e3a\u59cb\u8fb9\uff0c\u4e0a\u9762\u7684\u4e3a\u7ec8\u8fb9\u3002\u628a\u6bcf\u6761\u6a2a\u8fb9\u4ee5\u7eb5\u5750\u6807\u4ece\u5c0f\u5230\n\n\u5927\u6392\u5e8f\uff0c\u5982\u679c\u7eb5\u5750\u6807\u76f8\u540c\uff0c\u5219\u5e94\u628a\u59cb\u8fb9\u6392\u5230\u7ec8\u8fb9\u4e4b\u524d\u3002\n\n\u4f9d\u6b21\u679a\u4e3e\u6bcf\u6761\u6a2a\u8fb9\u3002\u5982\u679c\u5f53\u524d\u8fb9\u4e3a\u59cb\u8fb9\uff0c\u5219\u628a\u8fd9\u6761\u8fb9\u7684\u6a2a\u5411\u7684\u6240\u6709\u70b9j \u7684\u5c42\u6570\u589e\u52a01\uff0c\n\n\u5373\u4e3alevel[j]++\u3002\u5982\u679c\u5c42\u6570\u75310 \u53d8\u4e3a\u4e861\uff0c\u5219\u8fd9\u4e00\u70b9\u4e00\u5b9a\u662f\u8fb9\u7f18\u70b9\uff0c\u603b\u5468\u957fans++\u3002\u5982\u679c\u5f53\u524d\n\n\u8fb9\u4e3a\u7ec8\u8fb9\uff0c\u5219\u628a\u8fd9\u6761\u8fb9\u7684\u6a2a\u5411\u7684\u6240\u6709\u70b9j \u7684\u5c42\u6570\u51cf\u5c111\uff0c\u5373\u4e3alevel[j]--\u3002\u5982\u679c\u5c42\u6570\u75311 \u53d8\u4e3a\n\n\u4e860\uff0c\u5219\u8fd9\u4e00\u70b9\u4e00\u5b9a\u662f\u8fb9\u7f18\u70b9\uff0c\u603b\u5468\u957fans++\u3002\n\n\u540c\u7406\u6309\u6b64\u65b9\u6cd5\u626b\u63cf\u7eb5\u8fb9\uff0c\u5373\u53ef\u5f97\u5230\u6700\u540e\u7ed3\u679c\u3002\n\n\u7b97\u6cd5\u4e8c\n\n\u603b\u601d\u8def\uff1a\u79bb\u6563+\u7ebf\u6bb5\u6811(\u5176\u5b9e\u5c31\u662f\u63d0\u9ad8level[j]++\u7684\u6548\u7387)\n\n\u9996\u5148\u662f\u79bb\u6563\uff1a\n\n\u663e\u7136\uff0c\u6211\u4eec\u67092n \u6761\u7eb5\u7ebf\u548c2n \u6761\u6a2a\u7ebf\u3002\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u8003\u8651\u7eb5\u7ebf\uff0c\u56e0\u4e3a\u6a2a\u7ebf\u7684\u505a\u6cd5\u540c\u7eb5\n\n\u7ebf\u7684\u505a\u6cd5\u662f\u76f8\u540c\u7684\u3002\u79bb\u6563\u5c31\u662f\u5c06\u8fd92n \u6761\u7ebf\u6bb5\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u6392\u5e8f\uff08\u4e5f\u5c31\u662f\u6309\u7167\u6bcf\u6761\u7eb5\n\n\u7ebf\u7684\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff09\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u5982\u679c\u51fa\u73b0\u4e24\u4e2a\u76f8\u540c\u6a2a\u5750\u6807\u7684\u7eb5\u7ebf\u6bb5\uff0c\u5c5e\u4e8e\n\n\u6240\u5728\u77e9\u5f62\u5de6\u8fb9\u7684\u7ebf\u6bb5\u8981\u6392\u5728\u5c5e\u4e8e\u6240\u5728\u77e9\u5f62\u53f3\u8fb9\u7684\u7ebf\u6bb5\u7684\u5de6\u8fb9\u3002\uff08\u8fd9\u4e24\u4e2a\u7ebf\u6bb5\u5c5e\u4e8e\u4e0d\u540c\u7684\u77e9\n\n\u5f62\uff09\u3002\n\n\u7136\u540e\u662f\u7ebf\u6bb5\u6811\uff1a\u6bcf\u4e2a\u8282\u70b9\u67096 \u4e2a\u5c5e\u6027\uff1as\uff0ct\uff0cl\uff0cr\uff0cc\uff0cm\uff0c\u5206\u522b\u8868\u793a\u5de6\u8fb9\u754c\u3001\u53f3\u8fb9\u754c\u3001\n\n\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\u3001\u8986\u76d6\u6570\u3001\u533a\u95f4\u5185\u7ebf\u6bb5\u603b\u957f\u5ea6\u3002\n\n\u5bf9\u4e8e2n \u6761\u7eb5\u7ebf\u6bb5\uff0c\u5c5e\u4e8e\u77e9\u5f62\u5de6\u8fb9\u7684\u7ebf\u6bb5\u6dfb\u52a0\u8be5\u7ebf\u6bb5\u5230\u7ebf\u6bb5\u6811(\u8986\u76d6\u6570+1)\uff0c\u5c5e\u4e8e\u77e9\u5f62\u53f3\n\n\u8fb9\u7684\u7ebf\u6bb5\u5219\u4ece\u7ebf\u6bb5\u6811\u4e2d\u5220\u9664\u8be5\u7ebf\u6bb5(\u8986\u76d6\u6570-1)\u3002\u505a\u6dfb\u52a0\u3001\u5220\u9664\u7ebf\u6bb5\u7684\u540c\u65f6\uff0c\u8981\u7ef4\u62a4m \u5c5e\u6027\u3002\n\n\u89c4\u5219\u5982\u4e0b\uff1a\n\n\u5982\u679c\u8be5\u6bb5\u7ebf\u6bb5\u8986\u76d6\u6570(c)>0\uff0c\u5219M \u5373\u4e3a\u7ebf\u6bb5\u957f\uff0c\n\n\u5982\u679c\u8986\u76d6\u6570(c)=0\uff0c\u5219M \u4e3a\u5de6\u513f\u5b50\u7684M+\u53f3\u513f\u5b50\u7684M\u3002(\u5982\u679c\u672c\u8eab\u662f\u53f6\u5b50\u5c31\u4e3a0\uff09\n\n\u6bcf\u6b21\u64cd\u4f5c\u7ebf\u6bb5\u540e\u6539\u53d8\u603b\u957f\u5ea6\uff08\u4e5f\u53ef\u80fd\u4e0d\u53d8\uff09\uff0c\u5982\u679c\u539f\u6765\u7684\u957f\u5ea6\u4e3anow\uff0c\u65b0\u7684\u957f\u5ea6\u4e3anew\uff0c\n\n\u5982\u679cnew>now\uff0c\u5219new-now \u7b97\u5165\u7b54\u6848ans\u3002\n\n\u4e0b\u9644\u7ebf\u6bb5\u6811\u4ee3\u7801\uff1a\uff08C++\u9009\u624b\u81ea\u884c\u66ff\u6362\u5934\u6587\u4ef6\u5427...\u6211\u662fC\uff09\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nstruct Line {\n    int x, y1, y2;\n    bool in;\n} *_a_, *_b_;\nLine a[10000], b[10000];\nint f[88888];\nbool g[88888]; \nint i, n = 0, x1, y1, x2, y2;\nlong ans = 0;\ninline int cmp_line(const void *a, const void *b) {\n    _a_ = (Line *)a, _b_ = (Line *)b;\n    if (_a_->x > _b_->x) return 1;\n    if (_a_->x < _b_->x) return -1;\n    return _a_->in ? -1 : 1;\n}\nvoid insert(const long t, const int l, const int r) {\n    if (l >= y1 && r <= y2 && !g[t]) {\n        if (!f[t]++) ans += r - l;\n        return ;\n    }\n    long mid = (l + r) / 2, t1 = t << 1, t2 = t1 | 1;\n    f[t1] += f[t], f[t2] += f[t], f[t] = 0; \n    if (mid >= y2) insert(t1, l, mid);\n    else if (mid <= y1) insert(t2, mid, r);\n    else insert(t1, l, mid), insert(t2, mid, r);\n    g[t] = f[t1] || f[t2] || g[t1] || g[t2];\n}\nvoid erase(const long t, const int l, const int r) {\n    if (l >= y1 && r <= y2 && !g[t]) {\n        if (!--f[t]) ans += r - l;\n        return ;\n    }\n    long mid = (l + r) / 2, t1 = t << 1, t2 = t1 | 1;\n    f[t1] += f[t], f[t2] += f[t], f[t] = 0;\n    if (mid >= y2) erase(t1, l, mid);\n    else if (mid <= y1) erase(t2, mid, r);\n    else erase(t1, l, mid), erase(t2, mid, r);\n    g[t] = f[t1] || f[t2] || g[t1] || g[t2];\n}\nint main() {\n    for (scanf(\"%d\", &i); i; --i) {\n        scanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n        a[n].x = x1, a[n].y1 = y1, a[n].y2 = y2, a[n].in = true;\n        b[n].x = y1, b[n].y1 = x1, b[n].y2 = x2, b[n++].in = true;\n        a[n].x = x2, a[n].y1 = y1, a[n].y2 = y2, a[n].in = false;\n        b[n].x = y2, b[n].y1 = x1, b[n].y2 = x2, b[n++].in = false;\n    }\n    qsort(a, n, sizeof(Line), cmp_line);\n    memset(f, 0, sizeof f);\n    memset(g, 0, sizeof g);\n    for (i = 0; i < n; ++i) {\n        y1 = a[i].y1, y2 = a[i].y2;\n        a[i].in ? insert(1, -10000, 10000) : erase(1, -10000, 10000);\n    }\n    qsort(b, n, sizeof(Line), cmp_line);\n    memset(f, 0, sizeof f);\n    memset(g, 0, sizeof g);\n    for (i = 0; i < n; ++i) {\n        y1 = b[i].y1, y2 = b[i].y2;\n        b[i].in ? insert(1, -10000, 10000) : erase(1, -10000, 10000);\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1504275659,
        "uid": 39922,
        "name": "vinvor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    },
    {
        "content": "//\u6211\u4e0a\u4e00\u4e2a\u4ee3\u7801\u6709\u70b9\u95ee\u9898\uff0c\u6539\u8fdb\u4e86\u4e00\u4e0b\uff0c\u9ebb\u70e6\u7ba1\u7406\u5458\u5e2e\u5fd9\u5220\u6389\u4e0a\u4e00\u4e2a\uff0c\u7559\u4e0b\u8fd9\u4e00\u4e2a\n\n\u6211\u770b\u5148\u8f88\u5df2\u7ecf\u5206\u6790\u5f97\u5341\u5206\u900f\u5f7b\u4e86\uff0c\u867d\u7136\u6b64\u9898\u6570\u636e\u53ef\u80fd\u5f88\u6c34\uff0c\u4f46\u8fd8\u662f\u60f3\u8d81\u673a\u5b66\u4e60\u4e00\u4e0b\u626b\u63cf\u7ebf\uff0c\u4e8e\u662f\u5c31\u6765\u4e00\u53d1\u6b63\u5b97\u7684\u7ebf\u6bb5\u6811\u4e4b\u626b\u63cf\u7ebf\uff1a\n\n\u5f88\u660e\u663e\u626b\u63cf\u65f6\u53ef\u4ee5\u5148\u6a2a\u518d\u7ad6\uff0c\u4f46\u90a3\u6837\u592a\u8d39\u65f6\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e00\u79cd\u66f4\u52a0\u7b80\u4fbf\u7684\u65b9\u6cd5\uff1a\n\n##\u6309\u7167\u6a2a\u8fb9\u7684\u987a\u5e8f\u626b\u63cf\uff0c\u987a\u4fbf\u8ba1\u7b97\u7ad6\u8fb9\uff1a\n\n\u8fd9\u91cc\u6709\u51e0\u4e2a\u5173\u952e\u7684\u53d8\u91cf\uff1a\n\nl , r : \u8be5\u8282\u70b9\u4ee3\u8868\u7684\u7ebf\u6bb5\u7684\u5de6\u53f3\u7aef\u70b9\u5750\u6807\n\n2.len : \u8fd9\u4e2a\u533a\u95f4\u88ab\u8986\u76d6\u7684\u957f\u5ea6\uff08\u5373\u8ba1\u7b97\u65f6\u7684\u6709\u6548\u957f\u5ea6\uff09\n\n3.s : \u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u88ab\u8986\u76d6\u4e86\u51e0\u6b21\n\nlc , rc : \u6807\u8bb0\u8fd9\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u88ab\u8986\u76d6\uff080\u8868\u793a\u6ca1\u6709\uff0c1\u8868\u793a\u6709\uff09\n\n5.num :\u8fd9\u4e2a\u533a\u95f4\u6709\u591a\u5c11\u6761\u7ebf\u6bb5\uff08\u8fd9\u4e2a\u533a\u95f4\u88ab\u591a\u5c11\u6761\u7ebf\u6bb5\u8986\u76d6\uff09\n\n##\u8fd8\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5982\u679c\u6709\u91cd\u53e0\u7684\u8fb9\uff0c\u5e94\u5f53\u5148\u52a0\u5165\u8fb9\u540e\u52a0\u51fa\u8fb9\uff0c\u5426\u5219\u4f1a\u591a\u7b97\n\n##\u8fd9\u4e2a\u5728\u6d1b\u8c37\u4e0a\u6d4b\u4e0d\u51fa\u6765\uff0c\u4f46\u662f\u5728USACO\u4e0a\u53ef\u4ee5\uff0c\u6211\u89c9\u5f97\u5927\u5bb6\u8fd8\u662f\u505a\u7ec6\u4e00\u70b9\u6bd4\u8f83\u543c\n\n##\u8fd9\u5757\u5177\u4f53\u770b\u770b\u4ee3\u7801\u7684\u6ce8\u91ca\n\n\n\u8be6\u60c5\u8bf7\u53c2\u8003\uff1ahttp://blog.csdn.net/tomorrowtodie/article/details/52048323\n\n\uff08\u4e0d\u8981\u6284\u4ed6\u7684\u4ee3\u7801\uff0c\u6709\u95ee\u9898\uff09\n\n\u4e0b\u9762\u662f\u53c2\u8003\u4ee3\u7801\uff1a\n\n\n/\\*\nID: linda\\_f1\n\nPROG: picture\n\nLANG: C++\n\n\\*/\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#define ls i<<1\n#define rs i<<1|1\nusing namespace std;\nconst int N=10000+10;\nconst int X=20000+10;\nconst int inf=1<<29;\nstruct Edge\n{\n    int l,r;\n    int h;\n    int f,ff;\n}e[N];\nstruct point\n{\n    int l,r;\n    int len;\n    int s;//having been lapped or not\n    bool lc,rc;\n    int num;//having been lapped how many times\n}q[X*4];\nint n,a1,b1,a2,b2,tot=0;\nint mn=inf,mx=-inf;\nbool comp(const Edge &a,const Edge &b)\n{\n    if(a.h!=b.h)\n        return a.h<b.h;\n    else\n        return a.f>b.f;//\u5c31\u662f\u8fd9\uff0c\u8ba9\u5165\u8fb9\u4f18\u5148 \n}\nvoid push_up(int i)\n{\n    if(q[i].s) \n    {\n        q[i].len=q[i].r-q[i].l+1;\n        q[i].lc=1;\n        q[i].rc=1;\n        q[i].num=1;\n    }\n    else if(q[i].l==q[i].r)\n    {\n        q[i].len=0;\n        q[i].lc=0;\n        q[i].rc=0;\n        q[i].num=0;\n    }\n    else//#1 \u8fd9\u91cc\u5c31\u4f1a\u4f7f\u5f97q[1].len\u88ab\u66f4\u65b0  ==> \u8f6c\u5230 #2\n    {\n        q[i].len=q[ls].len+q[rs].len; \n        q[i].lc=q[ls].lc;\n        q[i].rc=q[rs].rc;\n        q[i].num=q[ls].num+q[rs].num-(q[ls].rc&q[rs].lc);\n    }\n}\nvoid build(int i,int l,int r)\n{\n    q[i].l=l;\n    q[i].r=r;\n    q[i].len=q[i].s=0;\n    q[i].lc=q[i].rc=q[i].num=0;\n    if(l==r)\n        return;\n    int mid=(q[i].l + q[i].r)>>1;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n}\nvoid update(int i,int l,int r,int xx)\n{\n    if(q[i].l==l && q[i].r==r)\n    {\n        //\u5982\u679c\u6709\u91cd\u53e0\u8fb9\u5148\u626b\u51fa\u8fb9\u5c31\u4f1a\u4f7f\u5f97q[1].s=0 ==>\u8f6c\u5230 #1 \n        q[i].s+=xx;//\u5982\u679c\u6709\u91cd\u53e0\u8fb9\u5148\u626b\u51fa\u8fb9\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u6210\u4e24\u6761\u7ebf\uff0c\u4f1a\u591a\u52a0 \n        push_up(i);\n        return;\n    }\n    int mid=(q[i].l + q[i].r)>>1;\n    if(r<=mid)\n        update(ls,l,r,xx);\n    else if(l>mid)\n        update(rs,l,r,xx);\n    else\n        {\n            update(ls,l,mid,xx);\n            update(rs,mid+1,r,xx);\n        }\n    push_up(i);\n}\nint main()\n{\n//    freopen(\"picture.in\",\"r\",stdin);\n//    freopen(\"picture.out\",\"w\",stdout); \n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a1>>b1>>a2>>b2;\n        mx=max(mx,max(a1,a2));\n        mn=min(mn,min(a1,a2));\n        Edge &t1=e[tot];\n        Edge &t2=e[tot+1];\n        t1.l=t2.l=a1;\n        t1.r=t2.r=a2;\n        t1.h=b1;\n        t1.f=1;\n        t2.h=b2;\n        t2.f=-1;\n        tot+=2;\n    }\n    sort(e,e+tot,comp);\n    int ans=0;\n    int last=0;\n    build(1,mn,mx-1);\n    for(int i=0;i<tot;i++)\n    {\n        update(1,e[i].l,e[i].r-1,e[i].f);\n        ans+=abs(q[1].len-last);//#3 \u8fd9\u91cc\u5c31\u4f1a\u628a\u548c\u51fa\u8fb9\u91cd\u53e0\u7684\u8fb9\u518d\u52a0\u4e00\u904d \n        ans+=(e[i+1].h-e[i].h)*2*q[1].num;\n        last=q[1].len;//#2 \u8fd9\u91cc\u66f4\u65b0\u4e86last,\u5c31\u4f1a\u8ba4\u4e3a\u51fa\u8fb9\u7ed3\u675f\u4e86 ==>\u8f6c\u5230 #3 \n    }\n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1502159483,
        "uid": 36294,
        "name": "feng_chengjie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1856 \u3010[USACO5.5]\u77e9\u5f62\u5468\u957fPicture\u3011"
    }
]