[
    {
        "content": "\u4ece\u4e5d\u7701\u8054\u8003\u524d\u5495\u5230\u73b0\u5728\u7684\u4e00\u9053\u9898\u2026\u2026\n\n\u7cbe\u795e\u6c61\u67d3\uff0c\u505a\u597d\u78015~6\u4e2ak\u7684\u5fc3\u7406\u51c6\u5907\u2026\u2026\n\n____________________\n\n## \u524d\u7f6e\u77e5\u8bc6\uff1a\u5feb\u901f\u6c83\u5c14\u4ec0\u53d8\u6362(FWT)\n\n\u5982\u679c\u4e0d\u4f1afwt\u7684\u8bdd\u53ef\u4ee5\u53bb\u8fd9\u4e2a\u6a21\u677f\u533a\u5b66\u4e60\u4e00\u4e0b\n\n[P4717](https://www.luogu.org/problemnew/show/P4717)\n\n## \u672c\u9898\u9898\u89e3\n\n\u9996\u5148\u5462\u9898\u610f\u662f\u7b80\u5355\u6613\u61c2\u7684\uff0c\u6c42\u6811\u4e0a\u5f02\u6216\u548c\u4e3ak\u7684\u8054\u901a\u5757\u4e2a\u6570\n\n\u5230\u6b64\u4e3a\u6b62\u5b83\u8fd8\u662f$trival$\u7684\uff0c\u6700\u591a\u662f\u4e2a\u7d2b\u724c\u9898\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u9700\u8981\u652f\u6301\u52a8\u6001\u4fee\u6539\u70b9\u6743\u5462?\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\u9ed1\u724c\u9898\u4e86\n\n\u5f53\u7136\u732b\u8001\u5e08\u4e5f\u7528\u8fd9\u9053\u9898\u4f5c\u4e3a\u4e86\u4ed6[\u535a\u5ba2](http://immortalco.blog.uoj.ac/blog/2625)\u4e0a\u7684\u4e00\u9053\u4f8b\u9898\u2026\u2026\n\n\u90a3\u4e48\u8ba9\u6211\u4eec\u8bb2\u89e3\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u539f\u7406\u5427\u2026\u2026\n\n___________________\n\n## \u6734\u7d20\u7684dp\n\n\u6211\u4eec\u53ef\u4ee5\u8bbe$Dp_{i,j}$\u8868\u793a\u6700\u9ad8\u70b9\u4e3ai\u7684\u5f02\u6216\u548c\u4e3aj\u7684\u8054\u901a\u5757\u4e2a\u6570\n\n\u90a3\u4e48,\u5982\u679c\u8be2\u95ee\u4e3ak\u7684\u8bdd\u6211\u4eec\u6700\u540e\u5c31\u662f\u6c42\n\n## $\\sum_{i=1}^{n}Dp_{i,k}$\n\n\u8ba9\u6211\u5148\u6765\u6109\u5feb\u7684\u63a8\u4e00\u4e0b\u8f6c\u79fb\u65b9\u7a0b\n\n\u8fd8\u662f\u8003\u8651\u6211\u4eec\u6709\u4e86$Dp_{u,k}$\u73b0\u5728\u8981\u52a0\u5165\u4e00\u4e2a\u5b50\u6811$Dp_{v}$\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\n\n## $Dp_{u,k}=\\sum_{i \\oplus j==k}Dp_{u,i}Dp_{v,j}+Dp_{u,k}$\n\n\u6211\u4eec\u53d1\u73b0\u90a3\u4e2a\u548c\u5f0f\u5176\u5b9e\u662f\u6240\u8c13\u7684\u5f02\u6216\u5377\u79ef\u7684\u5f62\u5f0f\n\n\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528fwt\u8fdb\u884c\u4f18\u5316\n\n\u6240\u4ee5\u5047\u5982\u6211\u4eec\u8bbe$\\hat{Dp}_{i}$\u4e3a\u6570\u7ec4$Dp_{i}$\u7ecf\u8fc7fwt\u4e4b\u540e\u7684\u6570\u7ec4\u7684\u8bdd\n\n\u6211\u4eec\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u8f6c\u79fb\u5f0f\u5b50\n\n## $\\hat{Dp}_{u,k}=\\hat{Dp}_{u,k}\\hat{Dp}_{v,k}+\\hat{Dp}_{u,k}$\n\n\u5373\n\n## $\\hat{Dp}_{u,k}*=(\\hat{Dp}_{v,k}+1)$\n\n\u7136\u540e\u6211\u4eec\u5047\u5982\u8bbe\n\n## $g_{u,k}=\\sum_{i \\in u.subtree}Dp_{u,k}$\n\n\u7684\u8bdd(u.subtree)\u5c31\u662fu\u7684\u5b50\u6811\u7684\u610f\u601d\n\n\u7b49\u5f0f\u4e24\u8fb9\u53d6\u6c83\u5c14\u4ec0\u53d8\u6362\n\n## $\\hat{g}_{u,k}=\\sum_{i \\in u.subtree}\\hat{Dp}_{u,k}$\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u6b21\u8ba1\u7b97\u51fa$\\hat{g}_{1}$\u8fd9\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f53\u7136\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u66b4\u529b\u91cd\u65b0\u8ba1\u7b97\u7684\u8bdd\u7b97\u6cd5\u590d\u6742\u5ea6\u5e94\u8be5\u662f\n\n## $O(nqmlogm)$\n\n\u7684\uff0c\u663e\u7136\u65e0\u6cd5\u901a\u8fc7\u672c\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u4f18\u5316\n\n_____________________\n\n## \u52a8\u6001dp\n\n\u770b\u5230\u8fd9\u91cc\u7684\u8bdd\u4f60\u5df2\u7ecf\u6ce8\u610f\u5230dp\u7684\u8f6c\u79fb\u65b9\u7a0b\u5341\u5206\u7b80\u5355\u8fd9\u4e2a\u4e8b\u5b9e\u4e86\n\n\u8fd9\u4e00\u822c\u9884\u793a\u7740\u4e00\u79cd\u53eb\u505a\u52a8\u6001dp\u7684\u6280\u672f\uff0c\u5141\u8bb8\u6211\u4eec\u6bcf\u6b21\u4ec5\u4ec5\u505a$O(logn)$\u6b21\u77e9\u9635\u4e58\u6cd5\u5c31\u53ef\u4ee5\u5feb\u901f\u5b8c\u6210dp\u7684\u5355\u70b9\u4fee\u6539\n\n\u90a3\u4e48\u5177\u4f53\u6765\u8bb2\u662f\u4ec0\u4e48\u64cd\u4f5c\u5462\u2026\u2026\uff1f\n\n\u4e3a\u4e86\u52a0\u6df1\u7406\u89e3\u53ef\u4ee5\u5148\u53bb\u505a\u4e00\u505a\u8fd9\u4e24\u9053\u9898\n\n[P4751](https://www.luogu.org/problemnew/show/P4751)\n\n[P4719](https://www.luogu.org/problemnew/show/P4719)\n\n\u7136\u540e\u5982\u679c\u4f60\u8fd8\u662f\u4e0d\u975e\u5e38\u7406\u89e3\u8fd9\u79cd\u5199\u6cd5\u7684\u8bdd\u53ef\u4ee5\u770b\u8fd9\u91cc\u7684\u4ecb\u7ecd\n\n______________________\n\n## \u94fe\u5206\u6cbb\n\n\u8bf4\u767d\u4e86\u5c31\u662f\u8f7b\u91cd\u94fe\u5256\u5206\u2026\u2026\n\n\u6211\u4eec\u5bf9\u8fd9\u4e2a\u6811\u8fdb\u884c\u4e00\u6ce2\u8f7b\u91cd\u94fe\u5256\u5206\uff0c\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u7684$siz$\u548c\u91cd\u513f\u5b50\n\n\u7136\u540e\u6211\u4eec\u91c7\u53d6\u4e00\u79cd\u4e0d\u5bfb\u5e38\u7684dp\u65b9\u5f0f\u8fdb\u884cdp\n\n\u6211\u4eec\u4e00\u6761\u91cd\u94fe\u4e00\u6761\u91cd\u94fe\u7684dp\n\n\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\u2026\u2026\n\n\u5047\u5982\u6211\u4eec\u6b63\u5728\u8ba1\u7b97\u4e00\u6761\u91cd\u94fe\u4e0a\u8282\u70b9\u7684dp\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u9996\u5148for\u4e00\u904d\u8fd9\u4e2a\u91cd\u94fe\uff0c\u9012\u5f52\u7684\u6c42\u51fa\u548c\u8fd9\u4e2a\u91cd\u94fe\u76f8\u8fde\uff0c\u4e14**\u6700\u9ad8\u70b9\u6df1\u5ea6\u5927\u4e8e\u8fd9\u4e2a\u91cd\u94fe\u6700\u9ad8\u70b9\u7684\u91cd\u94fe**\u7684dp\u503c\uff0c\u73b0\u5728\u5462\u5bf9\u4e8e\u8fd9\u4e2a\u91cd\u94fe\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u8f7b\u513f\u5b50\u7684dp\u503c\u5df2\u7ecf\u88ab\u7b97\u51fa\u6765\u4e86\uff0c\u8fd8\u5dee\u91cd\u513f\u5b50\u7684dp\u503c\u6ca1\u6709\u7b97\n\n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u5e8f\u5217\u4e0a\u7684dp\uff0c\u4ece\u5e95\u5411\u4e0a\u4f9d\u6b21\u9012\u63a8\u51fa\u91cd\u94fe\u4e0a\u6bcf\u4e00\u4e2a\u7684dp\u503c\n\n\u597d\u4e86\u5230\u8fd9\u91cc\u4f60\u53ef\u80fd\u4f1a\u8bf4\uff0c\u8fd9\u4e0d\u662f\u6ca1\u4ec0\u4e48\u5375\u7528\u5417\u2026\u2026\n\n\u4f60\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u4ecd\u7136\u662f$O(n)$\u7684\u554a\u2026\u2026\n\n\u4f46\u662f\uff0c\u8bf7\u4f60\u518d\u597d\u597d\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u901a\u8fc7\u8f7b\u91cd\u94fe\u5256\u5206\u8fd9\u4e2a\u6280\u672f\u5c06\u8fa3\u624b\u7684\u6811\u4e0a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86(\u7565\u5fae\u597d\u505a\u4e00\u70b9\u7684)\u5e8f\u5217\u95ee\u9898\n\n\u90a3\u4e48\u4e0d\u5982\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u7528\u8fd9\u79cd\u65b9\u5f0f\u505a\u7684dp\u7684\u8f6c\u79fb\u65b9\u7a0b\u4f1a\u4ea7\u751f\u4ec0\u4e48\u6548\u679c\n\n\u90a3\u4e48\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u8f7b\u513f\u5b50\u7684dp\u503c\u4ee5\u53ca\u8f7b\u513f\u5b50\u5b50\u6811\u5f53\u4e2ddp\u7684\u548c\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5728\u91cd\u94fe\u4e0adp\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5957\u7528\u6811\u5f62dp\u65f6\u7684\u8868\u8fbe\u5f0f(\u56e0\u4e3a\u90fd\u662f\u52a0\u4e00\u6761\u8fb9)\n\n\u6240\u4ee5\u6211\u4eec\u8bbe\n\n## $ldp_{u,k}=dp_{u,k}\\prod_{v \\in u.lightson}(dp_{v,k}+1)$\n\n\u5047\u8bbe\u8fd9\u91cc\u7684\u6570\u7ec4\u90fd\u662ffwt\u4e4b\u540e\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u4e58\u6cd5\u662f\u666e\u901a\u7684\u6309\u4f4d\u76f8\u4e58\u800c\u4e0d\u662f\u5f02\u6216\u5377\u79ef\n\n\u6211\u4eec\u8ba4\u4e3a$Dp_{u}$\u7684\u521d\u503c\u662f\u4e00\u58060\uff0c\u53ea\u6709\u81ea\u5df1\u7684\u503c\u90a3\u4e00\u4f4d\u662f\u4e00\u4e2a1\u7684\u6570\u7ec4\uff0c\u4e0a\u9762\u516c\u5f0f\u91cc\u7684$dp_{u}$\u6307\u7684\u662f\u8fd9\u4e2a\u521d\u503c\u6570\u7ec4fwt\u4e4b\u540e\u7684\u5f62\u5f0f\n\n\u7136\u540e\u63a5\u7740\u8bbe\n\n## $lg_{u,k}=\\sum_{v \\in u.lightson}lg_{v,k}$\n\n\u5f53\u7136\u8fd9\u91cc\u7684\u6570\u7ec4\u4f9d\u7136\u4e5ffwt\u4e4b\u540e\u7684\u5f62\u5f0f\u7ed9\u51fa\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u5728\u91cd\u94fe\u4e0a\u7684dp\u5f0f\u5b50\u5c31\u662f\u8fd9\u6837\n\n## $dp_{i}=ldp_{i+1}dp_{i}+ldp_{i+1}$\n\n## $g_{i}=dp_{i}+lg_{i+1}+g_{i}$\n\n\u7136\u540e\u5c06$g_{i}$\u8868\u8fbe\u5f0f\u5f53\u4e2d\u7684$dp_{i}$\u4ee3\u5165\u4e00\u4e0b\u5c31\u662f\n\n## $g_{i}=ldp_{i+1}dp_{i}+ldp_{i+1}+lg_{i+1}+g_{i}$\n\n\u7136\u540e\u662f\u6700\u4e3a\u5173\u952e\u7684\u4e00\u6b65\u4e86\u2026\u2026\n\n\u5728immortalco\u795e\u4ed9\u5c06dp\u7684\u8f6c\u79fb\u5199\u6210\u77e9\u9635\u4e4b\u524d\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u8001\u5f0f\u7684\u505a\u6cd5\u2026\u2026\n\n\u5c31\u662f\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e00\u6761\u91cd\u94fe\u3002\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a44\u4e2a\u503c\uff0c\u5206\u522b\u662f\u53d6\u4e86\u4e00\u6bb5\u8fde\u7eed\u7684\u91cd\u94fe\u533a\u95f4\uff0c\u4e14\u5de6\u7aef\u70b9\u53d6\u5230/\u53f3\u7aef\u70b9\u53d6\u5230/\u5de6\uff0c\u53f3\u7aef\u70b9\u90fd\u6ca1\u53d6/\u5de6\uff0c\u53f3\u7aef\u70b9\u90fd\u53d6\u4e86\u8fd9\u4e2a\u56db\u79cd\u72b6\u6001\u7684\u65b9\u6848\u6570\n\n\u7136\u540e\u4f60\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u662f\u53ef\u4ee5\u5927\u529b\u8f6c\u79fb\u7684\uff0c\u4e8e\u662f\u5927\u529b\u8f6c\u79fb\u5c31\u662f\u4e86\n\n\u5f53\u7136\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u4ee3\u7801\u5341\u5206\u7684\u6076\u5fc3\u2026\u2026\u800c\u4e14\u96be\u5199(\u8fd9\u9053\u9898\u989d\u5916\u8d60\u9001\u4e00\u4e2a\u66f4\u52a0\u96be\u53d7\u7684\u8f7b\u8fb9\u5904\u7406\u95ee\u9898)\n\n\u5f53\u7136\u81ea\u4ece\u732b\u8001\u5e08\u628adp\u7684\u8f6c\u79fb\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\u5c31\u4e0d\u4f1a\u8fd9\u4e48\u9ebb\u70e6\u4e86\u2026\u2026\n\n\u6765\uff0c\u8ba9\u6211\u4eec\u5c1d\u8bd5\u7740\u628adp\u7684\u8f6c\u79fb\u5199\u6210\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\n\n\u6211\u4eec\u53d1\u73b0\u4f3c\u4e4e\u8fd9\u6837\u505a\u662f\u53ef\u884c\u7684\n\n\u624b\u73a9\u4e00\u4e0b\u4f1a\u53d1\u73b0\n\n### $$\\begin{bmatrix} dp_{i} \\\\ g_{i} \\\\ 1 \\end{bmatrix} \u00d7 \\begin{bmatrix} ldp_{i+1} & ldp_{i+1} & 0 \\\\ 0 & 1  & 0\\\\ ldp_{i+1} & ldp_{i+1}+lg_{i+1} & 1\\end{bmatrix} = \\begin{bmatrix} dp_{i+1} \\\\ g_{i+1} \\\\ 1\\end{bmatrix}$$\n\n\u5f53\u7136\u968f\u4e4b\u800c\u6765\u7684\u4e8b\u60c5\u5c31\u662f\uff0c\u4f60\u53d1\u73b0\u6bcf\u505a\u4e00\u6b21\u77e9\u4e58\u4f3c\u4e4e\u8981\u505a27\u6b21\u4e58\u6cd5\u548c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u5e76\u4e14\uff0c\u8fd9\u4e9b\u4e1c\u897f\u597d\u50cf\u8fd8\u90fd\u662f\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a128\u7684\u6570\u7ec4\u6765\u8bb2\u7684\u6211\u4eec\u7684\u5e38\u6570\u53ef\u80fd\u6709\u70b9\u7206\u70b8\n\n\u6ca1\u5173\u7cfb\u6211\u4eec\u63a5\u7740\u624b\u73a9\u4e00\u4e0b\u77e9\u9635\u4e58\u6cd5\uff0c\u53d1\u73b0\u4e00\u4e2a\u6709\u8da3\u7684\u4e8b\u5b9e\n\n### $$\\begin{bmatrix} a_{0,0} & a_{0,1} & 0 \\\\ 0 & 1 & 0 \\\\ a_{1,0} & a_{1,1} & 1 \\end{bmatrix} \u00d7 \\begin{bmatrix} b_{0,0} & b_{0,1} & 0 \\\\ 0 & 1 & 0 \\\\ b_{1,0} & b_{1,1} & 1 \\end{bmatrix}=\\begin{bmatrix} c_{0,0} & c_{0,1} & 0 \\\\ 0 & 1 & 0 \\\\ c_{1,0} & c_{1,1} & 1 \\end{bmatrix}$$\n\n\u800c\u4e14\n\n### $c_{0,0}=a_{0,0}b_{0,0}$\n\n### $c_{0,1}=a_{0,0}b_{0,1}+a_{0,1}$\n\n### $c_{1,0}=a_{1,0}b_{0,0}+b_{1,0}$\n\n### $c_{1,1}=a_{1,0}b_{0,1}+a_{1,1}+b_{1,1}$\n\n\u6240\u4ee5\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u5b58 $a_{0,0},a_{0,1},a_{1,0},a_{1,1}$\u5c31\u884c\u4e86\n\n\u800c\u4e14\u505a\u4e00\u6b21\u77e9\u4e58\u53ea\u9700\u89814\u6b21\u4e58\u6cd5\u548c\u52a0\u6cd5\u4e86\uff0c\u5e38\u6570\u964d\u4f4e\u5230\u4e86\u4e00\u4e2a\u53ef\u4ee5\u4ee4\u4eba\u63a5\u53d7\u7684\u8303\u56f4\n\n\u5bf9\u4e86\uff0c\u77e9\u9635\u5f53\u4e2d\u7684\u5143\u7d20\u53ef\u662f\u591a\u9879\u5f0f\uff0c\u56e0\u6b64\u8fd9\u91cc\u76840\u548c1\u6307\u7684\u662f\u7cfb\u6570\u5168\u90e8\u662f0\u6216\u80051\u7684\u591a\u9879\u5f0f\n\n\u90a3\u4e48\u6211\u4eec\u60f3\u8981\u77e5\u9053\u4e00\u4e2a\u8f7b\u513f\u5b50\u7684dp\u503c\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u63d0\u53d6\u51fa\u6574\u6761\u91cd\u94fe\u7684\u8f6c\u79fb\u77e9\u9635\u8fde\u4e58\u79ef\uff0c\u7136\u540e\u4e58\u4e0a\u4e00\u4e2a\u521d\u59cb\u5411\u91cf(0,0,1)\u5c31\u884c\u4e86\uff0c\u5176\u5b9e\u5b9e\u9645\u5199\u4ee3\u7801\u7684\u65f6\u5019\u751a\u81f3\u6ca1\u6709\u5fc5\u8981\u5199\u521d\u503c\u5411\u91cf\u4e58\u4e0a\u8f6c\u79fb\u77e9\u9635\u8fd9\u4e00\u6b65\uff0c\u56e0\u4e3a\u4e8b\u5b9e\u4e0a\u4f60\u4f1a\u53d1\u73b0$dp_{u}=a_{1,0},g_{u}=a_{1,1}$\n\n\u6240\u4ee5\u5728\u7ecf\u5386\u4e86\u597d\u4e00\u987f\u6298\u817e\u4e4b\u540e\u6211\u4eec\u7ec8\u4e8e\u628adp\u7684\u8f6c\u79fb\u5199\u6210\u4e86\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\uff0c\u5e76\u4e14\u628a\u5f97\u51fadp\u503c\u8f6c\u5316\u4e3a\u4e86\u8be2\u95ee\u4e00\u6761\u91cd\u94fe\u7684\u77e9\u9635\u8fde\u4e58\u79ef\u7684\u5f62\u5f0f\n\n\u597d\u4e86\u90a3\u8fd9\u4e48\u6298\u817e\u6709\u5565\u7528\u5462\uff1f\n\n\n**\u77e9\u9635\u7684\u4e58\u6cd5\u5177\u6709\u7ed3\u5408\u5f8b\uff0c\u56e0\u6b64\u53ef\u4ee5\u65b9\u4fbf\u7684\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u77e9\u9635\u8fde\u4e58\u79ef**\n\n\u60f3\u50cf\u4e00\u4e0b\u4fee\u6539\u65f6\u7684\u60c5\u666f\u5427\uff0c\u9996\u5148\u6211\u4eec\u4fee\u6539\u4e86\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\uff0c\u8fd9\u5bf9\u5e94\u7740\u7ebf\u6bb5\u6811\u4e0a\u7684\u5355\u70b9\u4fee\u6539\uff0c\u4e8e\u662f\u6211\u4eec\u4f7f\u7528\u7ebf\u6bb5\u6811\u4e00\u8def\u4fee\u6539\u4e0a\u53bb\uff0c\u4e8e\u662f\u8fd9\u4e2a\u91cd\u94fe\u9876\u7aef\u8282\u70b9\u7684dp\u503c\u6539\u53d8\u4e86\uff0c\u4e8e\u662f\u9876\u7aef\u8282\u70b9\u7236\u4eb2\u7684$ldp,lg$\u503c\u90fd\u4f1a\u6539\u53d8\uff0c\u8fd9\u5bf9\u5e94\u7740\u53e6\u4e00\u4e2a\u91cd\u94fe\u7684\u5355\u70b9\u4fee\u6539\uff0c\u4e8e\u662f\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u4fee\u6539\uff0c\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5f53\u6211\u4eec\u4fee\u6539\u52301\u53f7\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u5c31\u7ed3\u675f\u4e86\n\n\u8bf4\u7684\u597d\u50cf\u5f88\u8f7b\u677e\uff0c\u4f46\u662f\u521a\u624d\u7684\u7b97\u6cd5\u6d41\u7a0b\u662f\u6709\u786c\u4f24\u7684\n\n\u6211\u4eec\u4fee\u6539\u4e86\u4e00\u4e2a\u91cd\u94fe\u9876\u7684dp\u503c\u4e4b\u540e\uff0c\u5982\u4f55\u5feb\u901f\u8ba1\u7b97\u5b83\u7684\u7236\u4eb2\u7684$ldp,lg$\u503c\u5462\uff1f\n\n\u4f60\u53ef\u80fd\u4f1a\u8bf4\uff0c\u8fd9\u6709\u4f55nan\uff0c\u628a\u8001\u7684\u503c\u9664\u6389/\u51cf\u53bb\uff0c\u7136\u540e\u4e58\u4e0a/\u52a0\u4e0a\u65b0\u7684\u8f7b\u513f\u5b50\u7684dp\u503c\u548cg\u503c\u4e0d\u5c31\u597d\u4e86\u2026\u2026\n\n\u4f46\u662f\u554a\uff0c\u6211\u4eec\u5f88\u6709\u53ef\u80fd\u9664\u4e00\u4e2a0\u2026\u2026\u6b64\u65f6\u60c5\u51b5\u77ac\u95f4\u53d8\u5f97\u8fa3\u624b\u8d77\u6765\uff0c\u5176\u5b9e\uff0c\u8fd9\u91cc\u6211\u4eec\u7ef4\u62a4\u7684\u4fe1\u606f\u4f3c\u4e4e\u5e76\u4e0d\u53ef\u51cf\u2026\u2026\u6b64\u65f6\u60c5\u51b5\u5f00\u59cb\u53d8\u5f97\u8fa3\u624b\n\n\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u5411\u732b\u8001\u5e08\u4e00\u6837\u6bcf\u4e2a\u8282\u70b9\u5355\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u5f3a\u884c\u7ef4\u62a4\u4e00\u6ce2ldp\u503c\uff0c\u4f46\u662f\u7531\u4e8e\u5728\u6bcf\u4e2a\u8282\u70b9\u5904\u5355\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4f1a\u59a8\u788d\u6211\u4eec\u4f7f\u7528\u52a8\u6001dp\u7684\u6539\u8fdb\u7b97\u6cd5\u4f7f\u5f97\u672c\u9898\u7684\u590d\u6742\u5ea6\u964d\u81f3\n\n$O((n+qm)logn+(n+q)mlogm)$\n\n\u6240\u4ee5\u8bf4\u8fd9\u91cc\u6211\u4eec\u5fc5\u987b\u5fcd\u75db\u820d\u5f03\u6389\u7ebf\u6bb5\u6811\uff0c\u8f6c\u800c\u91c7\u53d6\u53e6\u4e00\u79cd\u65b9\u5f0f\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u96640\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u6211\u4eec\u5bf9\u4e8e$ldp$\u6570\u7ec4\uff0c\u989d\u5916\u5f00\u4e00\u4e2a\u6570\u7ec4$cntzero$\u6765\u5f3a\u884c\u7ef4\u62a4\u5b83\uff0c\u7531\u4e8e$ldp$\u662f\u4e00\u5806\u591a\u9879\u5f0f\u6309\u4f4d\u76f8\u4e58\u5f97\u5230\u7684\uff0c\u6240\u4ee5$ldp$\u7684\u7b2ci\u4f4d\u7684\u503c\u662f\u6240\u6709\u975e\u96f6\u9879\u7684\u4e58\u79ef\uff0c\u800c$cntzero$\u7b2ci\u4f4d\u662f\u8fd9\u4e00\u4f4d0\u9879\u7684\u4e2a\u6570\uff0c\u5f53\u7136\u6211\u4eec\u63d0\u53d6\u8fd9\u4e2a\u6570\u7ec4\u7684\u7b2ci\u4f4d\u7684\u65f6\u5019\u9700\u8981\u5224\u65ad\u4e00\u4e0b$cntzero$\u662f\u5426\u4e3a0\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u529e\u6cd5\u4e58\u548c\u96640\u4e86\uff0c\u6bcf\u6b21\u6211\u4eec\u4e58\u6216\u8005\u9664\u4e00\u4e2a0\uff0c\u4e0d\u5bf9$ldp$\u6570\u7ec4\u8fdb\u884c\u64cd\u4f5c\u800c\u662f\u5bf9$cntzero$\u6570\u7ec4\u8fdb\u884c\u64cd\u4f5c\uff0c\u6b64\u65f6\u64cd\u4f5c\u5c31\u53d8\u5f97\u5b8c\u5168\u53ef\u9006\u4e86\n\n\u597d\u4e86\u5230\u6b64\u4e3a\u6b62\u6076\u5fc3\u7684\u8f7b\u8fb9\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u8003\u8651\u5230\u8fd9\u9053\u9898\u7684n\u6bd4\u8f83\u5c0f\uff0c\u6211\u63a8\u8350\u4f7f\u7528\u5e38\u6570\u6bd4\u8f83\u5c0f\u7684\u6811\u5256(\u81ea\u5e26\u4e00\u4e2a0.25\u7684\u5e38\u6570)\u8fdb\u884c\u7ef4\u62a4\uff0c\u4f46\u662f\u2026\u2026\u6811\u5256\u96be\u5199\n\n\u6240\u4ee5\u6211\u5199\u7684\u662f\u201c\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u201d\n\n\u5177\u4f53\u6765\u8bb2\u6211\u4eec\u4f7f\u7528bst\u6765\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u91cd\u94fe\uff0c\u5728\u5efabst\u7684\u65f6\u5019\u4e0d\u662f\u91c7\u53d6\u5e73\u51e1\u7684\u53d6\u4e2d\u70b9\u5de6\u53f3\u4e24\u8fb9\u9012\u5f52\u5efa\u6811\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u52a0\u4e0a\u4e00\u4e2a\u9644\u52a0\u6743\u503c\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u6240\u6709\u8f7b\u513f\u5b50\u7684siz\u548c+1\uff0c\u7136\u540e\u627e\u8fd9\u6761\u94fe\u7684\u5e26\u6743\u91cd\u5fc3\u9012\u5f52\u4e24\u8fb9\u5de6\u53f3\u5efa\u6811\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u65e0\u8bba\u662f\u7ecf\u8fc7\u4e00\u6761bst\u8fb9\u8fd8\u662f\u865a\u8fb9,\u6240\u5728\u5b50\u6811\u7684size\u81f3\u5c11\u7ffb\u4e00\u500d\uff0c\u8fd9\u6837\u7684\u7b97\u4e0a\u865a\u8fb9\u7684\u6811\u9ad8\u5c31\u662flogn\u7684\uff0c\u5c3d\u7ba1\u67d0\u4e00\u4e2abst\u7684\u5f62\u6001\u53ef\u80fd\u5c31\u662f\u4e00\u6761\u94fe\n\n~~\u4f46\u662f\u6709\u4e00\u4e2a2\u7684\u5e38\u6570\uff0c\u800c\u4e14\u5728\u94fe\u4e0a\u7684\u5e38\u6570\u4f1a\u7ffb\u4e00\u500d\u2026\u2026\u8fd9\u9053\u9898n\u5c0f\u4f53\u73b0\u4e0d\u51fa\u6765\uff0c\u5e38\u6570\u88ab\u6811\u5256\u540a\u6253~~\n\n~~\u53ef\u4ee5\u53bb\u5199\u4e00\u4e0bP4751~~\n\n\u4f46\u662f\u597d\u5904\u5c31\u662f\u6bd4\u8d77\u6811\u5256\u6765\u8bf4\u597d\u5199\n\n\u7136\u540e\u5173\u4e8e\u8fd9\u9053\u9898\u7684\u5b9e\u73b0\u90e8\u5206\uff0c\u5c31\u662f\u5c01\u88c5\u5c01\u88c5\u518d\u5c01\u88c5\uff0c\u505a\u597d\u5199\u4e0a5~6\u4e2ak\u7684\u5fc3\u7406\u51c6\u5907\n\n\u6700\u96be\u53d7\u7684\u662f\u7aef\u70b9\u8c03\u8bd5\u57fa\u672c\u6ca1\u6709\uff0c\u90fd\u5f97\u4eba\u8089\u8c03100\u591a\u884c\u7684\u4ee3\u7801\u2026\u2026\n\n\u4e0a\u4ee3\u7801\n\n```C\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=3*1e4+10;const int M=130;typedef unsigned int uit;\nconst uit mod=10007;int n;int m;int q;uit iv[mod+10];uit ans[M];char opt[20];int rot;\ninline void fwt(uit* a,const uit& o)//fwt\n{\n    for(int k=1;k<m;k<<=1)\n        for(int s=0;s<m;s+=(k<<1))\n            for(int i=s;i<s+k;i++)\n            {uit a0=a[i];uit a1=a[i+k];a[i]=(a0+a1)*o%mod;a[i+k]=(a0+mod-a1)*o%mod;}\n}\nstruct poly//\u591a\u9879\u5f0f\u7c7b\n{\n    uit f[M];\n    inline uit& operator [](const int& x){return f[x];}\n    friend poly operator *(poly a,poly b){poly c;for(int i=0;i<m;i++)c[i]=a[i]*b[i]%mod;return c;}\n    friend poly operator /(poly a,poly b){poly c;for(int i=0;i<m;i++)c[i]=a[i]*iv[b[i]]%mod;return c;}\n    friend poly operator +(poly a,poly b){poly c;for(int i=0;i<m;i++)c[i]=(a[i]+b[i])%mod;return c;}\n    friend poly operator -(poly a,poly b){poly c;for(int i=0;i<m;i++)c[i]=(a[i]+mod-b[i])%mod;return c;}\n    void operator +=(const poly& b){for(int i=0;i<m;i++)f[i]=(f[i]+b.f[i])%mod;}\n    void operator -=(const poly& b){for(int i=0;i<m;i++)f[i]=(f[i]+mod-b.f[i])%mod;}\n    inline void setone(){for(int i=0;i<m;i++)f[i]=1;}\n}we[N],one;\nstruct mar//\u77e9\u9635\u7c7b\n{\n    poly mp[2][2];\n    inline poly* operator [](const int& x){return mp[x];}\n    friend mar operator* (mar a,mar b)\n    {\n        mar c;c[0][0]=a[0][0]*b[0][0];\n        c[0][1]=a[0][0]*b[0][1]+a[0][1];\n        c[1][0]=a[1][0]*b[0][0]+b[1][0];\n        c[1][1]=a[1][0]*b[0][1]+a[1][1]+b[1][1];return c;\n    }\n};\nint v[2*N];int x[2*N];int ct;int al[N];int siz[N];int h[N];\ninline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;}\ninline int dfs(int u)//\u8f7b\u91cd\u94fe\u5256\u5206\n{\n    siz[u]=1;\n    for(int i=al[u];i;i=x[i])if(siz[v[i]]==0){siz[u]+=dfs(v[i]);if(siz[h[u]]<siz[v[i]])h[u]=v[i];}\n    return siz[u];\n}\nstruct data//\u7528\u6765\u7ef4\u62a4\u8f7b\u8fb9\u7684\u7ed3\u6784\u4f53\n{\n    int fz[M];uit fv[M];\n    inline void wt(const int& i,const int& x){if(x==0)fz[i]=fv[i]=1;else fz[i]=0,fv[i]=x;}\n    void operator *=(const poly& b)\n    {for(int i=0;i<m;i++)fz[i]+=(b.f[i]==0);for(int i=0;i<m;i++)fv[i]=fv[i]*(b.f[i]?b.f[i]:1)%mod;}\n    void operator /=(const poly& b)\n    {for(int i=0;i<m;i++)fz[i]-=(b.f[i]==0);for(int i=0;i<m;i++)fv[i]=fv[i]*iv[b.f[i]]%mod;}\n};\ninline void cpy(poly& a,const data& b){for(int i=0;i<m;i++)a[i]=b.fz[i]?0:b.fv[i];}\nstruct global_balanced_tree//\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\n{\n    int s[N][2];int fa[N];int lsiz[N];int st[N];int tp;mar w[N];mar mul[N];data lt[N];poly lh[N];\n    inline void udw(const int& p)\n    {cpy(w[p][0][0],lt[p]);w[p][1][1]=w[p][1][0]=w[p][0][1]=w[p][0][0];w[p][1][1]+=lh[p];}\n    inline void ud(const int& p){mul[p]=mul[s[p][0]]*w[p]*mul[s[p][1]];}\n    inline void ins(const int& u,const int& v){lt[u]*=(mul[v][1][0]+one);lh[u]+=mul[v][1][1];}\n    inline void del(const int& u,const int& v){lt[u]/=(mul[v][1][0]+one);lh[u]-=mul[v][1][1];}\n    inline bool isr(const int& u){return (s[fa[u]][0]!=u)&&(s[fa[u]][1]!=u);}\n    inline int subbuild(int l,int r)//\u4e00\u6761\u91cd\u94fe\u9012\u5f52\u5efa\u6811\n    {\n        if(l==r){ud(st[l]);return st[l];}if(l>r){return 0;}\n        int tot=0;for(int i=l;i<=r;i++)tot+=lsiz[st[i]];\n        for(int i=l,nsiz=lsiz[st[i]];i<=r;i++,nsiz+=lsiz[st[i]])\n            if(2*nsiz>=tot)\n            {\n                s[st[i]][0]=subbuild(l,i-1);s[st[i]][1]=subbuild(i+1,r);\n                fa[s[st[i]][0]]=st[i];fa[s[st[i]][1]]=st[i];ud(st[i]);return st[i];\n            }\n    }\n    inline int build(int p)//\u94fe\u5206\u6cbb\n    {\n        for(int i=p;i;i=h[i])lsiz[i]=siz[i]-siz[h[i]];\n        for(int i=p;i;i=h[i])\n            for(int j=al[i];j;j=x[j])\n                if(lsiz[v[j]]==0){int ls=build(v[j]);fa[ls]=i;ins(i,ls);}\n        for(int i=p;i;i=h[i])udw(i);\n        tp=0;for(int i=p;i;i=h[i])st[++tp]=i;reverse(st+1,st+tp+1);\n        return subbuild(1,tp);\n    }\n    inline void modify(int u,const int& w1)//\u4fee\u6539\uff0c\u6bcf\u6b21\u8df3\u4e00\u6761\u8f7b\u8fb9\n    {\n        lt[u]/=we[u];\n        for(int i=0;i<m;i++)we[u][i]=0;we[u][w1]=1;fwt(we[u].f,1);lt[u]*=we[u];udw(u);\n        for(int p=u;p;p=fa[p])\n            if(isr(p)&&fa[p]){del(fa[p],p);ud(p);ins(fa[p],p);udw(fa[p]);}else ud(p);\n        for(int i=0;i<m;i++)ans[i]=mul[rot][1][1][i];fwt(ans,5004);\n    }\n    inline void ih()//\u521d\u59cb\u5316\n    {\n        for(int i=1;i<=n;i++)for(int j=0;j<m;j++)lt[i].wt(j,we[i][j]);\n        w[0][0][0].setone();mul[0][0][0].setone();\n    }\n}gbt;\nint main()\n{\n    iv[0]=1;iv[1]=1;for(int i=2;i<mod;i++)iv[i]=(mod-mod/i)*iv[mod%i]%mod;\n    scanf(\"%d%d\",&n,&m);one.setone();\n    for(int i=1,w;i<=n;i++){scanf(\"%d\",&w),we[i][w]=1,fwt(we[i].f,1);}\n    for(int i=1,u,v;i<n;i++)scanf(\"%d%d\",&u,&v),add(u,v),add(v,u);\n    dfs(1);gbt.ih();rot=gbt.build(1);\n    for(int i=0;i<m;i++)ans[i]=gbt.mul[rot][1][1][i];fwt(ans,5004);scanf(\"%d\",&q);\n    for(int i=1;i<=q;i++)\n    {\n        scanf(\"%s\",opt);\n        if(opt[0]=='Q'){int t;scanf(\"%d\",&t);printf(\"%d\\n\",ans[t]);}\n        else {int w;int u;scanf(\"%d%d\",&u,&w);gbt.modify(u,w);}\n    }return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```\n\n\n\n\n",
        "postTime": 1532510112,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3781 \u3010[SDOI2017]\u5207\u6811\u6e38\u620f\u3011"
    },
    {
        "content": "# \u5207\u6811\u6e38\u620f\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3781)\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u4e2a$n$\u4e2a\u70b9\u7684\u6811\uff0c\u6709$m$\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u8981\u4e48\u67e5\u8be2\u6709\u591a\u5c11\u68f5\u5b50\u6811\u5f02\u6216\u4e4b\u548c\u4e3a$k$,$k$\u4e3a\u6bcf\u6b21\u7ed9\u51fa\u7684\u5e38\u6570\uff0c\u8981\u4e48\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u3002\n## \u524d\u7f6e\u5b9a\u4e49\n\u4e0b\u9762\u6211\u4eec\u7edf\u79f0$son_u$\u4e3a$u$\u7684\u513f\u5b50\uff0c$wson_u$\u4e3a$u$\u7684\u91cd\u513f\u5b50\u3002$FWT[a_u]$\u8868\u793a\u53ea\u6709$A[a_u]=1$\u7684$FWT[A]$\uff0c\u6811\u4ee5$1$\u4e3a\u6839\u3002\n## \u601d\u8def\n\u672c\u6765\u60f3\u770b\u9898\u89e3\u7684\uff0c\u4f46\u662f\u53d1\u73b0\u9898\u89e3\u770b\u4e0d\u61c2\uff0c\u4e8e\u662f\u53ea\u597d\u81ea\u5df1\u60f3\uff0c\u4f46\u662f\u53d1\u73b0\u8fd8\u662f\u5f88\u597d\u60f3\u7684\uff0c\u53ea\u662f\u4ee3\u7801\u6709\u90a3\u4e48**\u4ebf\u70b9**\u96be\u8c03\u3002\u3002\u3002\n\n\u9996\u5148\uff0c\u770b\u5230\u5f02\u6216\u4e4b\u548c\u6211\u4eec\u663e\u7136\u5f97\u60f3\u5230$\\texttt{FWT}$\uff08\u4e0d\u4f1a\u7684\u53ef\u4ee5[\u6233\u8fd9\u91cc\u5b66\u4e60\u4e00\u4e0b](https://www.cnblogs.com/Dark-Romance/p/13266355.html)\uff09\u3002\u6211\u4eec\u5982\u679c\u8bbe:\n\n$$nf[u]=FWT[a_u]$$\n\n\u518d\u8bbe$f[u]$\u8868\u793a\u4ee5$u$\u4e3a\u6839\u7684\u7b54\u6848\uff08$\\texttt{IFWT}$\u4e4b\u524d\u7684\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230:\n\n$$f[u]=nf[u]\\prod_{v\\in son_u}(f[v]+1)$$\n\n\u8fd9\u4e2a\u975e\u5e38\u663e\u7136\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\uff08$\\texttt{IFWT}$\u4e4b\u524d\uff09\u5c31\u662f:\n\n$$\\sum_{i=1}^{n} f[u]$$\n\n\u5982\u679c\u6211\u4eec\u8bbe:\n\n$$s[u]=f[u]+\\sum_{v\\in son_u} s[v]$$\n\n\u90a3\u4e48\uff0c\u7b54\u6848\u5c31\u662f$s[1]$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u975e\u5e38\u7b80\u6d01\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230\u52a8\u6001dp\uff0c\u6211\u4eec\u4e8e\u662f\u53ef\u4ee5\u8bbe:\n\n$$lf[u]=nf[u]\\prod_{v\\in son_u\\wedge v\\not= wson_u} (f[v]+1)$$\n\n$$ls[u]=\\sum_{v\\in son_u\\wedge v\\not= wson_u} s[v]$$\n\n\u5c31\u53ef\u4ee5\u5f97\u5230:\n\n$$f[u]=lf[u](f[wson_u]+1)$$\n\n$$s[u]=ls[u]+s[wson_u]+f[u]$$\n\n$$=ls[u]+s[won_u]+lf[u]f[wson_u]+lf[u]$$\n\n\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u5f0f\u5b50\u7528\u77e9\u9635\u8868\u793a\u51fa\u6765\uff0c\u5c31\u662f:\n\n$$\\begin{bmatrix}lf[u]&0&lf[u]\\\\lf[u]&1&lf[u]+ls[u]\\\\0&0&1\\end{bmatrix}\\begin{bmatrix}f_{wson_u}\\\\s_{wson_u}\\\\1\\end{bmatrix}=\\begin{bmatrix}f_u\\\\s_u\\\\1\\end{bmatrix}$$\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6811\u94fe\u5256\u5206\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002\u4f46\u662f\u8fd9\u4e2a\u77e9\u9635\u5de8\u5927\u7684\u5e38\u6570$27$\u4f1a\u8ba9\u6211\u4eec$\\texttt{GG}$\u5f97\u5f88\u60e8\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u6837\u4e00\u4e2a\u795e\u5947\u7684\u4e8b\u60c5:\n\n$$\\begin{bmatrix}a_1&0&b_1\\\\c_1&1&d_1\\\\0&0&1\\end{bmatrix}\\begin{bmatrix}a_2&0&b_2\\\\c_2&1&d_2\\\\0&0&1\\end{bmatrix}=\\begin{bmatrix}a_1a_2&0&a_1b_2+b1\\\\a_2c_1+c2&1&c_1b_2+d_2+d_1\\\\0&0&1\\end{bmatrix}$$\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u7ef4\u62a4$a_1,b_1,c_1,d_1$\uff0c\u5e38\u6570\u5c31\u964d\u5230\u4e86$4$\u3002\n\n\u4e0d\u8fc7\u8fd9\u4e2a\u9898\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u6211\u4eec\u7684$f[u]$\u91cc\u9762\u6709\u4e58\u79ef\u5f0f\uff0c\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u6211\u4eec\u5728\u66f4\u6539\u91cd\u94fe\u5934\u7684\u65f6\u5019\u5b83\u7684\u7236\u4eb2\u9700\u8981\u9664\u4ee5\u91cd\u94fe\u5934\u7684$f+1$\u3002\u867d\u7136$\\texttt{FWT}$\u662f\u53ef\u4ee5\u9664\u7684\uff0c\u4f46\u662f\u5982\u679c\u91cc\u9762\u6709$0$\u7684\u8bdd\u5c31\u65e0\u6cd5\u8ba9\u4fe1\u606f\u590d\u539f\u3002\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u662f\u518d\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u6240\u6709\u865a\u513f\u5b50\u7684$f+1$\u4e4b\u79ef\uff0c\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u8bb0\u5f55$0$\u7684\u4e2a\u6570\u3002\u6211\u7528\u7684\u524d\u8005\uff0c\u56e0\u4e3a\u6bd4\u8f83\u597d\u5c01\u88c5\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u5728$\\Theta(nm+q\\log^2nm)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4e0d\u8fc7\u8bdd\u8bf4\uff0cluogu\u4e0a\u6709\u4eba\u51fa\u4e86\u53ef\u4ee5\u5361\u6389\u6811\u5256\u7684\u6570\u636e\uff0c\u6240\u4ee5\u4f1a$\\texttt{T}$\u6389\u4e24\u4e2a\u70b9\uff0c\u4ee5\u4e0b\u4ee3\u7801\u53ea\u80fd\u5728$\\texttt{LOJ}$\u901a\u8fc7\u3002\n\n\u8fd9\u91cc\u63d0\u4e00\u4e2a\u5c0f\u9192\uff0c$\\texttt{FWT}$\u6570\u7ec4\u6bcf\u6b21\u521d\u59cb\u5316\u7684\u65f6\u5019\u4e0d\u80fd$\\texttt{memset}$\uff0c\u5426\u5219\u4f1a$\\texttt{MLE}$\u3002\n## $\\texttt{Code}$\n[\u4ee3\u7801\u6233\u8fd9\u91cc\u6253\u5f00](https://www.luogu.com.cn/paste/qyrja9vm)",
        "postTime": 1595905833,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3781 \u3010[SDOI2017]\u5207\u6811\u6e38\u620f\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5206\u6790\n[dalao tql](http://immortalco.blog.uoj.ac/blog/2625)\n\n## \u66b4\u529bDP\n\u8bbe$f(x,k)$\u8868\u793a\u6df1\u5ea6\u6700\u6d45\u70b9\u4e3a$x$\u7684\u8fde\u901a\u5757\uff0c\u4ef7\u503c\u4e3a$k$\u7684\u6709\u591a\u5c11\u4e2a\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e$x$\uff0c\u5728\u904d\u5386\u513f\u5b50\u524d$f(x,v_x)=1$\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u513f\u5b50$y$\uff0c\u90fd\u6709\u8f6c\u79fb\uff1a\n\n$$f'(x,k)=f(x,k)+\\sum_{i=0}^{m-1}f(x,i)f(y,k-i)$$\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u7edf\u8ba1\u6240\u6709$x$\u7684$f(x,k)$\u3002\n\n\u590d\u6742\u5ea6$O(Qnm^2)$\n\n## \u52a0\u4e2aFWT\n\u53d1\u73b0\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u662f\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u5f04\u4e2aFWT\u6765\u641e\u641e\u3002\n\n\u4e00\u5f00\u59cb\u5c06\u6240\u6709\u6570\u7ec4\u90fd\u5148FWT\u4e00\u6b21\uff0c\u90a3\u4e48\u4e2d\u95f4\u8fc7\u7a0b\u7684\u6240\u6709\u5377\u79ef\u64cd\u4f5c\u90fd\u53d8\u6210\u76f4\u63a5\u4e58\u6cd5\u4e86\uff0c\u6700\u540e\u518dFWT\u56de\u6765\uff0c\u590d\u6742\u5ea6$O(Qnm)$\n\n## \u52a8\u6001DP\n\u9996\u5148\u6309\u7167\u52a8\u6001DP\u7684\u5173\u952e\u5148\u6811\u5256\u4e00\u4e0b\uff0c\u7136\u540e\u5c31\u662f\u8f7b\u91cd\u513f\u5b50\u5206\u5f00\u8003\u8651\u4e86\u3002\n\n\u4e0d\u80fd\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u628a\u6bcf\u4e2a\u8282\u70b9\u7684$f(x,k)$\u90fd\u52a0\u8d77\u6765\u4e86\uff0c\u6240\u4ee5\u8bbe\u4e00\u4e2a$h(x,k)$\uff0c\u8868\u793a\u5b50\u6811$x$\u5185\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684$f(y,k)$\u7684\u548c\u3002\n\n\u8bbe$lf(x,k)=\\prod_{y \\in lightson_x} (1+f(y,k)),lh(x,k)=\\sum_{y \\in lightson_x} h(y,k)$\n\n\u5199\u51fa\u751f\u6210\u51fd\u6570$F(x)=\\sum_{i=0}^{m-1} f(x,i)z^i$\uff0c$H(x),lF(x),lH(x)$\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u8bbe$x$\u7684\u91cd\u513f\u5b50\u4e3a$y$\uff0c\u90a3\u4e48\u5411\u91cf$(F(y),H(y),z^0)$\u8f6c\u79fb\u5230$(F(x),H(x),z^0)$\u662f\u4e58\u4e86\u8fd9\u6837\u4e00\u4e2a\u77e9\u9635\uff1a\n\n$$\\begin{pmatrix} lF(x) {z^{v_{x}}} & lF(x) {z^{v_{x}}} & 0\\\\ 0 & 1 & 0 \\\\ lF(x) {z^{v_{x}}} & lH(x) + lF(x {z^{v_{x}}} & 1\\end{pmatrix}$$\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u4e8b\u60c5\u5c31\u662f\uff0c\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u8f6c\u79fb\u77e9\u9635\u7684\u4e58\u79ef\u3002\n\n\u8be2\u95ee\u6bd4\u8f83\u597d\u5904\u7406\uff0c\u76f4\u63a5\u5c06\u6839\u8282\u70b9\u6240\u5728\u91cd\u94fe\u7684\u6240\u6709\u8f6c\u79fb\u77e9\u9635\u4e58\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n\u4fee\u6539\u7684\u8bdd\uff0c\u4e00\u8def\u6761\u91cd\u94fe\u4e0a\u53bb\uff0c\u8fd9\u6761\u91cd\u94fe\u94fe\u9876\u7684$F$\u548c$H$\u6539\u53d8\u4e86\uff0c\u4f1a\u5bfc\u81f4\u94fe\u9876\u7236\u4eb2\u7684$lF$\u548c$lH$\u6539\u53d8\uff0c\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u2026\u2026\u5443\uff0c\u7b49\u7b49\u3002\n\n\u201c\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u201d\uff1f\u8bf4\u7684\u8f7b\u5de7\u3002\u56e0\u4e3a$lF(x)=\\prod_{y \\in lightson_x} (F(y)+1)$\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u8981\u9664\u4ee5$y$\u5728$F$\u6539\u53d8\u524d\u7684$F(y)+1$\uff0c\u518d\u4e58\u4ee5\u6539\u53d8\u540e\u7684\u3002\u53ef\u662f\u8fd9\u4e2a\u8981\u9664\u7684\u503c\uff0c\u53ef\u80fd\u662f\u4e2a\u8d1f\u6570\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u7528\u7ed3\u6784\u4f53\u5199\u4e2a\u7279\u6b8a\u7684\u53d8\u91cf\u6765\u7ef4\u62a4$lF(x)$\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5c06\u4e00\u4e2a\u503c\u5199\u6210$x \\times 0^y$\u7684\u5f62\u5f0f\u3002\u9664\u4ee50\u7684\u65f6\u5019\uff0c\u5c31\u76f4\u63a5\u5c06$y$\u51cf1\u5373\u53ef\u3002\n\n## \u5e38\u6570\u4f18\u5316\n\u6b63\u89e3\u7b97\u6cd5\u5df2\u7ecf\u51fa\u7089\u4e86\uff0c\u4f46\u662f\u8fd8\u53ef\u4ee5\u8fdb\u884c\u5e38\u6570\u4f18\u5316\u3002\u6211\u4eec\u7684\u77e9\u9635\u662f$3 \\times 3$\u7684\uff0c\u76f8\u5f53\u4e8e\u5e38\u6570\u4e3a$27$\u3002\n\n\u4f46\u662f\uff08\u5f0f\u5b50\u76f4\u63a5\u6284\u7684immortalCO\u5927\u795e\u7684\uff09\uff1a\n\n$$\\begin{pmatrix} a_1 & b_1 & 0 \\\\ 0 & 1 & 0 \\\\ c_1 & d_1 & 1 \\end{pmatrix} \\times \\begin{pmatrix} a_2 & b_2 & 0 \\\\ 0 & 1 & 0 \\\\ c_2 & d_2 & 1 \\end{pmatrix} = \\begin{pmatrix} a_1 a_2 & b_1 + a_1 b_2 & 0 \\\\ 0 & 1 & 0 \\\\ a_2 c_1 + c_2 & b_2 c_1 + d_1 + d_2 & 1 \\end{pmatrix}$$\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u7ef4\u62a4$a,b,c,d$\u56db\u4e2a\u503c\u5373\u53ef\uff0c\u5e38\u6570\u51cf\u5c0f\u5230$4$\u3002\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define RI register int\nconst int M=130,inv2=5004,mod=10007,N=30005;\nint n,m,Q,tot,tim;\nint e[M][M],inv[mod+5],v[N],tmp1[M],tmp2[M];\nint h[N],ne[N<<1],to[N<<1];\nstruct orz{\n\tint x,y;\n\tvoid put_val(int k) {if(k) x=k,y=0; else x=1,y=1;}\n\tfriend orz operator * (orz A,int B) {\n\t\tif(!B) ++A.y; else A.x=A.x*B%mod;\n\t\treturn A;\n\t}\n\tfriend orz operator / (orz A,int B) {\n\t\tif(!B) --A.y; else A.x=A.x*inv[B]%mod;\n\t\treturn A;\n\t}\n\tint val() {return y?0:x;}\n};\nint qm(int x) {return x>=mod?x-mod:x;}\nvoid add(int x,int y) {to[++tot]=y,ne[tot]=h[x],h[x]=tot;}\nvoid FWT(int *a,int n,int x) {\n    for(RI i=1;i<n;i<<=1)\n        for(RI j=0;j<n;j+=(i<<1))\n            for(RI k=0;k<i;++k) {\n                int t1=a[j+k],t2=a[j+i+k];\n                a[j+k]=qm(t1+t2),a[j+i+k]=qm(t1-t2+mod);\n                if(x==-1) a[j+k]=a[j+k]*inv2%mod,a[j+i+k]=a[j+i+k]*inv2%mod;\n            }\n}\n\nint fa[N],dep[N],top[N],sz[N],pos[N],repos[N],son[N],bot[N];\norz lF[N][M];int F[N][M],H[N][M],lH[N][M];\nvoid dfs1(int x,int las) {\n    fa[x]=las,dep[x]=dep[las]+1,sz[x]=1;\n    for(RI i=h[x];i;i=ne[i])\n        if(to[i]!=las) dfs1(to[i],x),sz[x]+=sz[to[i]];\n}\nvoid dfs2(int x,int las) {\n    int bj=0,mx=0; pos[x]=++tim,repos[tim]=x;\n    for(RI i=h[x];i;i=ne[i])\n        if(to[i]!=las&&sz[to[i]]>mx) mx=sz[to[i]],bj=to[i];\n    if(!bj) {bot[top[x]]=pos[x];return;}\n    son[x]=bj,top[bj]=top[x],dfs2(bj,x);\n    for(RI i=h[x];i;i=ne[i])\n        if(to[i]!=las&&to[i]!=bj) top[to[i]]=to[i],dfs2(to[i],x);\n}\nvoid pre_dfs(int x,int las) {\n    for(RI i=0;i<m;++i) F[x][i]=e[v[x]][i];\n    for(RI i=h[x];i;i=ne[i]) {\n        if(to[i]==las) continue;\n        pre_dfs(to[i],x);\n        for(RI j=0;j<m;++j) {\n            F[x][j]=qm(F[x][j]+F[x][j]*F[to[i]][j]%mod);\n            H[x][j]=qm(H[x][j]+H[to[i]][j]);\n        }\n    }\n    for(RI i=0;i<m;++i) H[x][i]=qm(H[x][i]+F[x][i]);\n}\nvoid pre_getl() {\n\tfor(RI x=1;x<=n;++x) {\n\t\tfor(RI i=0;i<m;++i) lF[x][i].put_val(e[0][i]),lH[x][i]=0;\n\t\tfor(RI i=h[x];i;i=ne[i]) {\n\t\t\tif(to[i]==fa[x]||to[i]==son[x]) continue;\n\t\t\tfor(RI j=0;j<m;++j) {\n\t\t\t\tlF[x][j]=lF[x][j]*qm(1+F[to[i]][j]);\n\t\t\t\tlH[x][j]=qm(lH[x][j]+H[to[i]][j]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nstruct tree_node{int a[M],b[M],c[M],d[M];}tr[N<<2];\ntree_node operator * (tree_node A,tree_node B) {\n\ttree_node C;\n\tfor(RI i=0;i<m;++i) C.a[i]=C.b[i]=C.c[i]=C.d[i]=0;\n\tfor(RI i=0;i<m;++i) {\n\t\tC.a[i]=A.a[i]*B.a[i]%mod;\n\t\tC.b[i]=qm(A.b[i]+A.a[i]*B.b[i]%mod);\n\t\tC.c[i]=qm(B.a[i]*A.c[i]%mod+B.c[i]);\n\t\tC.d[i]=qm(B.b[i]*A.c[i]%mod+qm(A.d[i]+B.d[i]));\n\t}\n\treturn C;\n}\nvoid update_node(int i,int x) {\n\tfor(RI j=0;j<m;++j) {\n\t\ttr[i].a[j]=tr[i].b[j]=tr[i].c[j]=tr[i].d[j]=lF[x][j].val()*e[v[x]][j]%mod;\n\t\ttr[i].d[j]=qm(tr[i].d[j]+lH[x][j]);\n\t}\n}\nvoid build(int s,int t,int i) {\n\tif(s==t) {update_node(i,repos[s]);return;}\n\tint mid=(s+t)>>1;\n\tbuild(s,mid,i<<1),build(mid+1,t,(i<<1)|1);\n\ttr[i]=tr[(i<<1)|1]*tr[i<<1];//\u6ce8\u610f\u5408\u5e76\u7684\u987a\u5e8fQAQ\n}\ntree_node query(int l,int r,int s,int t,int i) {\n\tif(l<=s&&t<=r) return tr[i];\n\tint mid=(s+t)>>1;\n\tif(r<=mid) return query(l,r,s,mid,i<<1);\n\tif(mid+1<=l) return query(l,r,mid+1,t,(i<<1)|1);\n\treturn query(l,r,mid+1,t,(i<<1)|1)*query(l,r,s,mid,i<<1);\n}\nvoid chan(int x,int s,int t,int i) {\n\tif(s==t) {update_node(i,repos[s]);return;}\n\tint mid=(s+t)>>1;\n\tif(x<=mid) chan(x,s,mid,i<<1);\n\telse chan(x,mid+1,t,(i<<1)|1);\n\ttr[i]=tr[(i<<1)|1]*tr[i<<1];\n}\n\nvoid getans(int x) {\n\ttree_node re=query(pos[x],bot[x],1,n,1);\n\tfor(RI i=0;i<m;++i) tmp1[i]=re.c[i],tmp2[i]=re.d[i];//F,H\n}\nvoid walk(int x,int new_v) {\n\tv[x]=new_v;\n\twhile(x) {\n\t\tint y=fa[top[x]];getans(top[x]);\n\t\tif(y) {\n\t\t\tfor(RI i=0;i<m;++i)\n\t\t\t\tlF[y][i]=lF[y][i]/qm(tmp1[i]+1),\n\t\t\t\tlH[y][i]=qm(lH[y][i]-tmp2[i]+mod);\n\t\t}\n\t\tchan(pos[x],1,n,1),getans(top[x]);\n\t\tif(y) {\n\t\t\tfor(RI i=0;i<m;++i)\n\t\t\t\tlF[y][i]=lF[y][i]*qm(tmp1[i]+1),\n\t\t\t\tlH[y][i]=qm(lH[y][i]+tmp2[i]);\n\t\t}\n\t\tx=y;\n\t}\n}\n\nint main()\n{\n\tchar op[10];int x,y;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(RI i=1;i<=n;++i) scanf(\"%d\",&v[i]);\n\tfor(RI i=1;i<n;++i) scanf(\"%d%d\",&x,&y),add(x,y),add(y,x);\n\tfor(RI i=0;i<m;++i) e[i][i]=1,FWT(e[i],m,1);\n\tinv[1]=1;for(RI i=2;i<mod;++i) inv[i]=(mod-mod/i)*inv[mod%i]%mod;\n\tdfs1(1,0),top[1]=1,dfs2(1,0),pre_dfs(1,0),pre_getl(),build(1,n,1);\n\tscanf(\"%d\",&Q);\n\twhile(Q--) {\n\t\tscanf(\"%s\",op);\n\t\tif(op[0]=='C') scanf(\"%d%d\",&x,&y),walk(x,y);\n\t\telse {\n\t\t\tscanf(\"%d\",&x),getans(1);\n\t\t\tFWT(tmp2,m,-1),printf(\"%d\\n\",tmp2[x]);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1551018624,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3781 \u3010[SDOI2017]\u5207\u6811\u6e38\u620f\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u4f7f\u7528\u77e9\u9635\u4e58\u6cd5\u7684\u89e3\u6cd5\uff0c\u7406\u8bba\u590d\u6742\u5ea6 $O(nm)-O(m\\log n)$\uff0c\u5e38\u6570\u5728 2~3 \u5de6\u53f3\uff0c\u5b9e\u9645\u8fd0\u884c\u6548\u7387\u4e0e\u77e9\u9635\u4e58\u6cd5\u76f8\u5f53\uff0c\u53c2\u8003\u4e86 [_rqy](https://rqy.moe/Solutions/bzoj4911/) \u795e\u4ed9\u7684\u535a\u5ba2\u3002\n\nrqy \u8d34\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u590d\u6742\u5ea6\u597d\u50cf\u6709\u70b9\u5c0f\u95ee\u9898\uff0c\u5e94\u8be5\u662f\u8fc7\u4e0d\u4e86 LG \u7684\u6570\u636e\u7684\uff0c\u8fd9\u91cc\u6211\u91cd\u65b0\u7528\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u5b9e\u73b0\u4e86\u4e00\u4e0b\uff0c\u53bb\u6389\u4e86\u4e00\u4e2a $\\log$\u3002\n\n\u5148\u8003\u8651\u4e00\u4e2a DP\uff1a\u8bbe $f[u,k]$ \u8868\u793a\u8003\u8651\u4ee5 $u$ \u4e3a\u6839\u7684**\u8fde\u901a\u5b50\u6811**\uff0c\u70b9\u6743\u5f02\u6216\u548c\u4e3a $k$ \u7684\u6709\u591a\u5c11\u4e2a\uff0c\u90a3\u4e48\u8f6c\u79fb\u662f $f'[u,k]\\gets f[v,i]f[u,j][i\\oplus j=k]$\uff0c\u53ef\u4ee5\u7406\u89e3\u505a\u4e00\u4e2a\u7c7b\u4f3c\u6811\u4e0a\u80cc\u5305\u7684\u4e1c\u897f\u3002\n\n\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=1}^n f[i,x]$\u3002\n\n\u6ce8\u610f\u5230\u8f6c\u79fb\u4e2d\u6c42\u548c\u662f\u5145\u5206\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u662f\u4e00\u7c7b\u4e0b\u6807\u8fd0\u7b97\u4e3a\u5f02\u6216\u7684\u5e8f\u5217\u5377\u79ef\u3002\n\n\u6211\u4eec\u7528\u591a\u9879\u5f0f\u7684\u7406\u8bba\u53bb\u5206\u6790\uff0c\u5c31\u76f8\u5f53\u4e8e\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6709\u4e00\u4e2a\u751f\u6210\u51fd\u6570 $F(u,z)=\\sum\\limits_{i=0}^{m-1}f[u,i]z^i$\uff0cDP \u7684\u8f6c\u79fb\u5c31\u53d8\u6210\u4e86 $F(u,z)=z^{w_u}\\prod\\limits_{fa[v]=u}(1+F(v,z))$\uff0c\u5176\u4e2d $w_u$ \u662f\u70b9\u6743\uff0c\u4e58\u6cd5\u5b9a\u4e49\u4e3a\u5f02\u6216\u5377\u79ef\u3002\n\n\u8003\u8651\u7ef4\u62a4\u52a8\u6001 DP\u3002\u6211\u4eec\u5148\u7528\u719f\u6089\u7684\u91cd\u94fe\u5256\u5206\u6765\u5206\u6790\u3002\n\n\u8bbe $G(u,z)=z^{w_u}\\prod\\limits_{fa[v]=u,v\\neq p[u]}(1+F(u,z))$\uff0c\u5176\u4e2d $p[u]$ \u662f $u$ \u7684\u91cd\u513f\u5b50\uff0c\u90a3\u4e48\u6709 $F(u,z)=(1+F(p[u],z))G(u,z)$\u3002\n\n\u6211\u4eec\u8003\u8651\u5728\u91cd\u94fe\u5256\u5206\u7684 dfs \u5e8f\u4e0a\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $G()$\u3002\u5bf9\u4e8e\u4e00\u6761\u91cd\u94fe\uff0c\u6709\uff1a\n\n$$F(u,z)=(1+F(p[u],z))G(u,z)=G(u,z)+G(u,z)G(p[u],z)(1+F(p[p[u]],z))=...$$\n\n\u6211\u4eec\u628a\u8fd9\u4e2a\u67ff\u5b50\u4e00\u76f4\u5c55\u5f00\u4e0b\u53bb\uff0c\u76f4\u5230\u53f6\u5b50\u8282\u70b9\uff08\u91cd\u94fe\u7684\u7ed3\u675f\u4e00\u5b9a\u662f\u53f6\u5b50\uff09\uff0c\u5c31\u53ef\u4ee5\u63a8\u5f97\u4e00\u4e2a\u70b9\u5bf9\u5e94\u7684\u76ee\u6807\u751f\u6210\u51fd\u6570 $F(u,z)$ \u5373\u662f\u5176\u91cd\u94fe\u4e0a\u8fd9\u4e00\u6bb5\u540e\u7f00\u6240\u6709\u524d\u7f00\u5377\u79ef\u7684\u548c\u3002\n\n\u5f62\u5f0f\u5316\u5730\uff0c\u8bbe $u$ \u5728 dfs \u5e8f\u4e0a\u7684\u4f4d\u7f6e\u662f $l$\uff0c$u$ \u6240\u5728\u91cd\u94fe\u7684\u53f6\u8282\u70b9\u5728 dfs \u5e8f\u4e0a\u7684\u4f4d\u7f6e\u662f $r$\uff0c\u6709 $F(l,z)=\\sum\\limits_{i=l}^r\\prod\\limits_{j=l}^i G(i,z)$\u3002\u4e3a\u4e86\u8868\u793a\u65b9\u4fbf\uff0c\u67ff\u5b50\u4e2d\u7684\u4e0b\u6807\u505a\u4e86\u4e00\u4e9b\u53d8\u5316\u3002\n\n\u6700\u7ec8\u7b54\u6848\u5373\u662f\u6240\u6709\u91cd\u94fe\u7684\u7b54\u6848\u548c\uff0c\u800c\u5bb9\u6613\u53d1\u73b0\uff0c\u4e00\u6761\u91cd\u94fe\u7684\u7b54\u6848\u5c31\u662f**\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684\u6240\u6709\u5b50\u533a\u95f4\u7684\u4e58\u79ef\u548c**\u3002\n\n\u8003\u8651\u5982\u4f55\u5feb\u901f\u5730\u7ef4\u62a4\u751f\u6210\u51fd\u6570\u7684\u5377\u79ef\u3002\u6734\u7d20\u7684\u505a\u6cd5\u662f $O(m^2)$ \u7684\uff0c\u8fd9\u663e\u7136\u4e0d\u884c\u3002\u6211\u4eec\u8003\u8651\u5bf9\u5176\u8fdb\u884c\u5feb\u901f\u6c83\u5c14\u4ec0\u53d8\u6362\uff08FWT\uff09\uff0c\u5373\u8bbe $f$ \u662f $F$ \u7684\u7cfb\u6570\u5e8f\u5217\uff0c\u6709\uff1a\n\n$$\\mathcal{F}(f)_i=\\sum\\limits_{j=0}^{m-1}(-1)^{|i\\cap j|}f_j$$\n\n\u53ef\u4ee5\u8bc1\u660e\u8be5\u53d8\u6362\u6ee1\u8db3\u5377\u79ef\u5b9a\u7406 $\\mathcal{F}(a)_i\\mathcal F(b)_i=\\mathcal F(ab)_i$ \u4ee5\u53ca $\\mathcal F(a)_i+\\mathcal F(b)_i=\\mathcal F(a+b)_i$\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u70b9\u503c\u8fdb\u884c\u8fd0\u7b97\u5373\u53ef\u3002\n\n\u8003\u8651\u73b0\u5728\u5982\u679c\u4fee\u6539 $w_u$ \u4e3a $w'_u$\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u9700\u8981\u628a $G(u)$ \u9664\u6389\u4e00\u4e2a $x^{w_u}$ \u518d\u4e58 $x^{w'_u}$\uff1b\u628a $G(fa[top[u]])$\uff08$top[u]$ \u662f\u91cd\u94fe\u9876\u7aef\uff09\u9664\u6389\u4e00\u4e2a $F(top[u])$ \u518d\u4e58 $F'(top[u])$\uff1b\u7136\u540e\u4e00\u76f4\u4f20\u9012\u5f71\u54cd\u5230\u6839\u3002\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7\u70b9\u503c\u7684\u4e58 / \u9664\u5728 $O(m)$ \u7684\u65f6\u95f4\u5185\u5b9e\u73b0\u3002\n\n\u6211\u4eec\u8981\u7ef4\u62a4\u7b54\u6848\uff0c\u5c31\u53ea\u9700\u8981\u7ef4\u62a4\u7ebf\u6bb5\u6811\u4e0a\u67d0\u4e2a\u533a\u95f4\u6240\u6709\u5b50\u533a\u95f4\u4e58\u79ef\u7684\u548c\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u7684\u5b50\u533a\u95f4\u4e58\u79ef\u548c\uff0c\u524d\u7f00\u533a\u95f4\u4e58\u79ef\u548c\uff0c\u540e\u7f00\u533a\u95f4\u4e58\u79ef\u548c\uff0c\u8fd8\u6709\u533a\u95f4\u4e58\u79ef\uff0c\n\u6765\u5b9e\u73b0\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u5e7f\u4e49\u4e58\u6cd5\u5206\u914d\u7387 $\\sum\\limits_{i=1}^k\\sum\\limits_{j=k+1}^n s_ip_j=\\left( \\sum\\limits_{i=1}^k s_i\\right)\\left(\\sum\\limits_{i=k+1}^np_i \\right)$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u505a\u53ea\u5f71\u54cd\u5230\u4e86 $O(\\log n)$ \u4e2a\u70b9\u7684\u70b9\u6743\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u76f4\u63a5\u7ef4\u62a4\u6811\u94fe\u5256\u5206\u7136\u540e\u5927\u529b\u4fee\u6539\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $O(nm)-O(m\\log^2 n)$ \u7684\u505a\u6cd5\u3002\n\n~~\u542c\u8bf4\u52a0\u4e2a O \u677e\u4f18\u5316\u5c31\u8fc7\u4e86\uff0c\u4e8b\u5b9e\u4e0a\u5bf9\u4e8e loj \u7684\u786e\u5982\u6b64~~  \u4f46\u662f\u8fc7\u4e0d\u4e86 LG \u7684\u6570\u636e\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u6765\u7ef4\u62a4\u3002\u7b80\u5355\u6765\u8bb2\uff0c\u5c31\u662f\u5bf9\u6bcf\u6761\u91cd\u94fe\u5355\u72ec\u5904\u7406\uff0c\u5c06\u5176\u770b\u4f5c\u5e8f\u5217\uff0c\u8bbe $ep[x]=sz[x]-sz[imp[x]]$ \u4e3a\u67d0\u4e2a\u70b9\u7684\u6743\uff0c\u7136\u540e\u627e\u5230\u8fd9\u6bb5\u5e8f\u5217\u7684\u5e26\u6743\u91cd\u5fc3\u4f5c\u4e3a\u6839\uff0c\u7136\u540e\u9012\u5f52\u5de6\u53f3\u5b50\u5e8f\u5217\u5efa\u7acb\u4e8c\u53c9\u7ed3\u6784\u3002\u5bb9\u6613\u8bc1\u660e\u6811\u9ad8\u662f $O(\\log n)$ \u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u6839\u5904\u7ef4\u62a4\u5b83\u8fd9\u4e00\u6bb5\u5e8f\u5217\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u6539\u4e00\u4e2a\u70b9\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u66b4\u529b $O(\\log)$ \u5730\u8df3\u5230\u6811\u6839\uff0c\u6cbf\u9014\u628a\u6240\u6709\u91cd\u94fe\u7684\u6743\u90fd\u4fee\u6539\u4e00\u4e0b\u597d\u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u5168\u5c40\u7684\u7b54\u6848\uff0c\u5c31\u662f\u6bcf\u4e2a\u91cd\u94fe\u7684\u7b54\u6848\u4e4b\u548c\u3002\u6211\u4eec\u5728\u4fee\u6539\u4e00\u6761\u91cd\u94fe\u65f6\u5373\u53ef\u7ef4\u62a4\uff0c\u4e0a\u8ff0\u4e24\u6b65\u7ef4\u62a4\u90fd\u662f $O(m)$ \u7684\uff0c\u56e0\u6b64\u4fee\u6539\u590d\u6742\u5ea6 $O(m\\log n)$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6700\u540e\u7ef4\u62a4\u51fa\u6765\u4e86 $Ans(z)=\\sum\\limits_{i=1}^n F(i,z)$\uff0c$Ans$ \u8fd9\u4e2a\u751f\u6210\u51fd\u6570\u7684\u70b9\u503c\u3002\n\n\u518d\u770b\u4e0a\u9762 FWT \u7684\u67ff\u5b50\uff0c\u901a\u8fc7\u4ee3\u5165\u6cd5\u6613\u8bc1 $\\mathcal F(\\mathcal F(f))_i=mf_i$\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u505a\u4e00\u6b21\u53d8\u6362\u5c31\u80fd\u6c42\u51fa\u7b54\u6848\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f $O(nm+qm\\log n)$\u3002\n\n\u6709\u4e00\u4e2a\u5751\u70b9\uff1a\u70b9\u503c\u8ba1\u7b97\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u51fa\u73b0\u9006\u5143\u4e0d\u5b58\u5728\uff0c\u5373\u9664\u6570\u662f\u6a21\u6570\u7684\u500d\u6570\u3002\u90a3\u4e48\u624b\u52a8\u5b9e\u73b0\u4e00\u4e2a\u53d6\u6a21\u6574\u6570\u7c7b\uff0c\u5c06\u6570\u5b57\u62c6\u5206\u6210 $a\\times P^b$ \u7684\u5f62\u5f0f\u7ef4\u62a4\u5373\u53ef\uff0c\u5176\u4e2d $P$ \u4ee3\u6307\u6a21\u6570\u3002\n\n\u5176\u4ed6\u9898\u89e3\u770b\u8d77\u6765\u5728\u8ba1\u7b97\u8f6c\u79fb\u7684\u65f6\u5019\u7528\u5230\u4e86\u77e9\u9635\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b8c\u5168\u53ef\u4ee5\u8f6c\u5316\u6210\u70b9\u503c\u8ba1\u7b97\u3002\n\n\u4ee3\u7801\uff085.2k\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\nconst int CN = 3e4 + 10;\nconst int P = 1e4 + 7; int inv[P];\nint read(){\n    int s = 0, ne = 1; char c = getchar();\n    for(;c < '0' || c > '9';c = getchar()) if(c == '-') ne = -1;\n    for(;c >= '0' && c <= '9';c = getchar()) s = (s << 1) + (s << 3) + c - '0';\n    return s * ne;\n}\nint add(int x, int y) {return x + y >= P ? x + y - P : x + y;}\nclass Z {\n  public: int a, b; // a * P ^ b\n    void init(int x) {b = 0, a = (x % P + P) % P;}\n    Z operator + (int o){\n        Z r = *this; o = (o % P + P) % P;\n        if(o){\n            if(r.b) r.b = 0, r.a = o;\n            else r.a = add(r.a, o);\n        }\n        return r;\n    }\n    Z operator * (int o){\n        Z r = *this; o = (o % P + P) % P;\n        if(!o) r.b++;\n        else r.a = r.a * o % P;\n        return r;\n    }\n    Z operator / (int o){\n        Z r = *this; o = (o % P + P) % P;\n        if(!o) r.b--;\n        else r.a = r.a * inv[o] % P;\n        return r;\n    }\n} g[CN][128]; int f[CN][128], pop[128], ans[128];\nint n, q, w[CN]; vector<int> G[CN];\nint sz[CN], imp[CN];\nvoid dfs(int u, int p){\n    sz[u] = 1;\n    for(int j = 0; j < 128; j++) g[u][j].init(pop[j & w[u]] & 1 ? -1 : 1);\n    for(int l = G[u].size(), i = 0; i < l; i++){\n        int v = G[u][i]; if(v == p) continue;\n        dfs(v, u), sz[u] += sz[v];\n        if(sz[imp[u]] < sz[v]) imp[u] = v;\n    }\n    for(int l = G[u].size(), i = 0; i < l; i++){\n        int v = G[u][i]; if(v == p || v == imp[u]) continue;\n        for(int j = 0; j < 128; j++) g[u][j] = g[u][j] * (f[v][j] + 1);\n    }\n    for(int j = 0; j < 128; j++) if(!g[u][j].b) f[u][j] = g[u][j].a;\n    if(imp[u]){\n        for(int j = 0; j < 128; j++) f[u][j] = f[u][j] * (f[imp[u]][j] + 1) % P;\n    }\n    for(int j = 0; j < 128; j++) ans[j] = add(ans[j], f[u][j]);\n}\nclass node{\n  public: int sum[128], pre[128], suf[128], prd[128];\n    node(){\n        for(int i = 0; i < 128; i++){\n            sum[i] = pre[i] = suf[i] = 0;\n            prd[i] = 1;\n        }\n    }\n    void init(Z g[]){\n        for(int j = 0; j < 128; j++){\n            sum[j] = pre[j] = suf[j] = prd[j] = g[j].b ? 0 : g[j].a;\n        }\n    }\n    node operator * (const node &o) const{\n        node r;\n        for(int i = 0; i < 128; i++){\n            r.sum[i] = (sum[i] + o.sum[i] + suf[i] * o.pre[i]) % P;\n            r.pre[i] = (pre[i] + prd[i] * o.pre[i]) % P;\n            r.suf[i] = (o.suf[i] + o.prd[i] * suf[i]) % P;\n            r.prd[i] = prd[i] * o.prd[i] % P;\n        }\n        return r;\n    }\n} ;\nnamespace BST{\n    node d[CN]; int rt, ch[CN][2], fa[CN], ep[CN], s[CN];\n    #define lc ch[u][0]\n    #define rc ch[u][1]\n    void pu(int u){\n        d[u].init(g[u]);\n        if(lc && rc) d[u] = (d[lc] * d[u]) * d[rc];\n        else if(lc) d[u] = d[lc] * d[u];\n        else if(rc) d[u] = d[u] * d[rc];\n    }\n    int bdseq(int l, int r){\n        if(l > r) return 0; int tot = 0, cur = 0;\n        for(int i = l; i <= r; i++) tot += ep[i]; tot >>= 1;\n        for(int i = l; i <= r; i++){\n            int u = s[i]; cur += ep[i];\n            if(cur >= tot){\n                lc = bdseq(l, i - 1), rc = bdseq(i + 1, r);\n                if(lc) fa[lc] = u; if(rc) fa[rc] = u;\n                return pu(u), u;\n            }\n        }\n        return -1;\n    }\n    int bd(int top, int p){\n        for(int u = top; u; p = u, u = imp[u])\n            for(int l = G[u].size(), i = 0; i < l; i++){\n                int v = G[u][i]; if(v == imp[u] || v == p) continue;\n                fa[bd(v, u)] = u;\n            }\n        s[0] = 0;\n        for(int u = top; u; u = imp[u]) s[++s[0]] = u, ep[s[0]] = sz[u] - sz[imp[u]];\n        return bdseq(1, s[0]);\n    }\n    bool is(int u) {return u ^ ch[fa[u]][0] && u ^ ch[fa[u]][1];}\n    node prv, cur;\n    void md(int u, int x){\n        for(int j = 0; j < 128; j++){\n            if(pop[j & w[u]] & 1) g[u][j] = g[u][j] / -1;\n        }\n        w[u] = x;\n        for(int j = 0; j < 128; j++){\n            if(pop[j & w[u]] & 1) g[u][j] = g[u][j] * -1;\n        }  \n        while(u){\n            prv = d[u], pu(u), cur = d[u];\n            if(is(u)){\n                for(int j = 0; j < 128; j++){\n                    ans[j] = add(ans[j], P - prv.sum[j]);\n                    ans[j] = add(ans[j], cur.sum[j]);\n                }\n                if(fa[u]){\n                    for(int j = 0; j < 128; j++){\n                        g[fa[u]][j] = g[fa[u]][j] / (1 + prv.pre[j]);\n                        g[fa[u]][j] = g[fa[u]][j] * (1 + cur.pre[j]);\n                    }\n                }\n            }\n            u = fa[u];\n        }\n    }\n}\nint qu(int x){\n    int res = 0;\n    for(int j = 0; j < 128; j++){\n        if(pop[j & x] & 1) res = add(res, P - ans[j]);\n        else res = add(res, ans[j]);\n    }\n    return res * inv[128] % P;\n}\nint main()\n{\n//    freopen(\"_in.in\", \"r\", stdin);\n    n = read(), read();\n    inv[1] = 1; for(int i = 2; i < P; i++) inv[i] = inv[P % i] * (P - P / i) % P;\n    for(int i = 1; i < 128; i++) pop[i] = pop[i & (i - 1)] + 1;\n    for(int i = 1; i <= n; i++) w[i] = read();\n    for(int i = 1; i < n; i++){\n        int u = read(), v = read();\n        G[u].pb(v), G[v].pb(u);\n    }\n    dfs(1, 0);\n    BST :: rt = BST :: bd(1, 0);\n    q = read();\n    while(q--){\n        char ch[10]; scanf(\"%s\", ch); int x = read();\n        if(ch[0] == 'Q') printf(\"%d\\n\", qu(x));\n        else BST :: md(x, read());\n    }\n    return 0;\n}\n```",
        "postTime": 1608038964,
        "uid": 70177,
        "name": "big_news",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3781 \u3010[SDOI2017]\u5207\u6811\u6e38\u620f\u3011"
    },
    {
        "content": "[P3781 [SDOI2017]\u5207\u6811\u6e38\u620f](https://www.luogu.com.cn/problem/P3781) \n\n\u9996\u5148\u8003\u8651\u4e0d\u5e26\u4fee\u65f6\u7684\u66b4\u529b dp\uff1a\u8bbe $f_{u,i}$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u3001\u4ef7\u503c\u4e3a $i$ \u7684\u8054\u901a\u5b50\u6811\u7684\u4e2a\u6570\uff0c$h_{u,i}$ \u8868\u793a $u$ \u5b50\u6811\u5185 $f_{v,i}$ \u7684\u548c\uff0c\u8f6c\u79fb\u4e3a \n$$\nf_{u,k}+=\\sum_{i \\oplus j=k}f_{u,i}\\times f_{v,j},h_{u,i}=f_{u,i}+\\sum h_{v,i}\n$$\n\u590d\u6742\u5ea6\u4e3a $O(nm^2)$ \u3002\u53d1\u73b0\u8f6c\u79fb\u5f0f\u662f\u4e00\u4e2a\u5f02\u6216\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u4e8e\u662f\u53ef\u4ee5\u5148 FWT \u4e00\u6b21\uff0c\u8f6c\u79fb\u65f6\u76f4\u63a5\u7528\u70b9\u503c\u76f8\u4e58\uff0c\u590d\u6742\u5ea6\u4e3a $O(nm)$\n\n\u5e26\u4fee\u600e\u4e48\u529e\uff1f\u52a8\u6001 dp\uff01\u8bbe $lf_{u,i}=\\prod_{v\\in lightson_{u}}(1+f_{v,i}),lh_{u,i}=\\sum_{v\\in lightson_{u}}h_{v,i}$ \u3002\u8bbe $F,H,LF,LH$ \u5206\u522b\u8868\u793a $f,h,lf,lh$ \u7684\u751f\u6210\u51fd\u6570\uff0c\u8bbe $v$ \u4e3a $u$ \u7684\u91cd\u513f\u5b50\uff0c\u5219\u8f6c\u79fb\u4e3a\n$$\nf_{u,i}=(1+f_{v,i})\\times lf_{u,i}\\\\\nh_{u,i}=h_{v,i}+lh_{u,i}+(1+f_{v,i})\\times lf_{u,i}\\\\\n\\begin{pmatrix} F_v,H_v,1\\\\\\end{pmatrix}\\times\\begin{pmatrix}\\ &LF_u,&LF_u,&0\\\\&0,&1,&0\\\\&LF_u,&LH_u+LF_u,&1\\end{pmatrix}=\\begin{pmatrix} F_u,H_u,1\\\\\\end{pmatrix}\n$$\n\u4f18\u5316\u5e38\u6570\uff1a\u5982\u4e0b\u5f0f\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 $a,b,c,d$ \u5904\u7684\u56db\u4e2a\u503c\u5373\u53ef\u3002\n$$\n\\begin{pmatrix}&a_1,&b_1,&0\\\\&0,&1,&0\\\\&c_1,&d_1,&1\\end{pmatrix}\\times\\begin{pmatrix}\\ &a_2,&b_2&0\\\\&0,&1,&0\\\\&c_2,&d_2,&1\\end{pmatrix}=\\begin{pmatrix}\\ &a_1a_2,&a_1b_2+b_1,&0\\\\&0,&1,&0\\\\&a_2c_1+c_2,&c_1b_2+d_1+d_2,&1\\end{pmatrix}\n$$\n\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\uff1a\u8df3\u91cd\u94fe\u4fee\u6539\u7236\u4eb2 $lf$ \u7684\u503c\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u51fa\u73b0\u9664\u4ee5 0 \u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u5fc5\u987b\u518d\u5f00\u4e00\u4e2a\u53d8\u91cf\u8bb0 $lf$ \u4e2d 0 \u7684\u4e2a\u6570\uff0c\u9664\u4ee5 0 \u5c31\u76f4\u63a5\u51cf\u4e00\uff0c\u901a\u8fc7\u8fd9\u4e2a\u53d8\u91cf\u63a8\u51fa $lf$ \u7684\u771f\u5b9e\u503c\u3002\n\n\u8fd9\u91cc\u653e\u4e00\u4e2aloj\u80fd\u8fc7\uff0c\u6d1b\u8c37\u88ab\u5361\u5230 T \u98de\u7684\u5783\u573e\u6811\u5256\u4ee3\u7801\uff0c\u590d\u6742\u5ea6 $O(qm\\log^2n)$\uff0c\u6d1b\u8c37\u4e0a 80 pts\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define inl inline\n#define mid ((l+r)>>1)\nusing namespace std;\ntypedef pair<int,int> pii;\nnamespace FGF\n{\n\tint n,m,Q;\n\tconst int N=30005,M=135,mo=1e4+7;\n\tint a[N],siz[N],son[N],fa[N],dep[N],top[N],dfn[N],id[N],c[M][M],f[N][M],h[N][M],lh[N][M],tmp1[M],tmp2[M],ed[N],inv[N],num;\n\tvector<int> g[N];\n\tstruct matrx{\n\t\tint a[M],b[M],c[M],d[M];\n\t\tvoid clear()\n\t\t{\n\t\t\tmemset(a,0,sizeof(int[m])),memset(b,0,sizeof(int[m])),memset(c,0,sizeof(int[m])),memset(d,0,sizeof(int[m]));\n\t\t}\n\t}t[N<<2];\n\tstruct Node{\n\t\tint x,y;\n\t\tinline void operator =(int a){a?(x=a,y=0):(x=1,y=1);}\n\t\tfriend Node operator *(Node a,int b){!b?a.y++:a.x=1ll*a.x*b%mo;return a;}\n\t\tfriend Node operator /(Node a,int b){!b?a.y--:a.x=1ll*a.x*inv[b]%mo;return a;}\n\t\tint val(){return y?0:x;}\n\t}lf[N][M];\n\tinl matrx operator *(const matrx &x,const matrx &y)\n\t{\n\t\tmatrx s;s.clear();\n\t\tfor(int i=0;i<m;i++)\n\t\t{\n\t\t\ts.a[i]=x.a[i]*y.a[i]%mo;\n\t\t\ts.b[i]=(x.a[i]*y.b[i]%mo+x.b[i])%mo;\n\t\t\ts.c[i]=(x.c[i]*y.a[i]%mo+y.c[i])%mo;\n\t\t\ts.d[i]=(x.c[i]*y.b[i]%mo+x.d[i]+y.d[i])%mo;\n\t\t}\n\t\treturn s;\n\t}\n\tvoid dfs1(int u,int f)\n\t{\n\t\tfa[u]=f,dep[u]=dep[f]+1,siz[u]=1;\n\t\tfor(auto v:g[u])\n\t\t\tif(v!=f)\n\t\t\t{\n\t\t\t\tdfs1(v,u);\n\t\t\t\tsiz[u]+=siz[v];\n\t\t\t\tif(siz[v]>siz[son[u]])son[u]=v;\n\t\t\t}\n\t}\n\tvoid dfs2(int u,int tp)\n\t{\n\t\ttop[u]=tp,dfn[u]=++num,id[num]=u,ed[tp]=u;\n\t\tif(son[u])dfs2(son[u],tp);\n\t\tfor(auto v:g[u])\n\t\t\tif(v!=son[u]&&v!=fa[u])dfs2(v,v);\n\t}\n\tinl void FWTxor(int *y,int op)\n\t{\n\t\tfor(int i=1;1<<i<=m;i++)\n\t\t\tfor(int j=0;j<m;j+=(1<<i))\n\t\t\t\tfor(int k=0,c,d;k<(1<<(i-1));k++)\n\t\t\t\t\tc=(y[j|k]+y[j|k|(1<<(i-1))])%mo,d=(y[j|k]-y[j|k|(1<<(i-1))]+mo)%mo,\n\t\t\t\t\ty[j|k]=1ll*op*c%mo,y[j|k|(1<<(i-1))]=1ll*op*d%mo;\n\t}\n\tvoid dfs3(int u)\n\t{\n\t\tfor(int i=0;i<m;i++)\n\t\t\tf[u][i]=c[a[u]][i];\n\t\tfor(auto v:g[u])\n\t\t\tif(v!=fa[u])\n\t\t\t{\n\t\t\t\tdfs3(v);\n\t\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\t\tf[u][i]=(f[u][i]+f[u][i]*f[v][i]%mo)%mo,h[u][i]=(h[u][i]+h[v][i])%mo;\n\t\t\t}  \n\t\tfor(int i=0;i<m;i++)\n\t\t\th[u][i]=(h[u][i]+f[u][i])%mo;\n\t}\n\tvoid build(int ro,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tint u=id[l];\n\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\tlf[u][i]=c[0][i];\n\t\t\tfor(auto v:g[u])\n\t\t\t\tif(v!=son[u]&&v!=fa[u])\n\t\t\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\t\t\tlf[u][i]=lf[u][i]*((f[v][i]+1)%mo),lh[u][i]=(lh[u][i]+h[v][i])%mo;\n\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\tt[ro].a[i]=t[ro].b[i]=t[ro].c[i]=t[ro].d[i]=lf[u][i].val()*c[a[u]][i]%mo,(t[ro].d[i]+=lh[u][i])%=mo;\n\t\t\treturn;\t\n\t\t}\n\t\tbuild(ro<<1,l,mid),build(ro<<1|1,mid+1,r);\n\t\tt[ro]=t[ro<<1|1]*t[ro<<1];\n\t}\n\tmatrx query(int ro,int l,int r,int L,int R)\n\t{\n\t\tif(L<=l&&r<=R)return t[ro];\n\t\tif(R<=mid)return query(ro<<1,l,mid,L,R);\n\t\tif(L>mid)return query(ro<<1|1,mid+1,r,L,R);\n\t\treturn query(ro<<1|1,mid+1,r,L,R)*query(ro<<1,l,mid,L,R);\n\t}\n\tvoid modif(int ro,int l,int r,int x)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tint u=id[l];\n\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\tt[ro].a[i]=t[ro].b[i]=t[ro].c[i]=t[ro].d[i]=lf[u][i].val()*c[a[u]][i]%mo,(t[ro].d[i]+=lh[u][i])%=mo;\n\t\t\treturn;\t\n\t\t}\n\t\tx<=mid?modif(ro<<1,l,mid,x):modif(ro<<1|1,mid+1,r,x);\n\t\tt[ro]=t[ro<<1|1]*t[ro<<1];\n\t}\n\tvoid askk(int x)\n\t{\n\t\tmatrx ans=query(1,1,n,dfn[top[x]],dfn[ed[top[x]]]);\n\t\tfor(int i=0;i<m;i++)\n\t\t\ttmp1[i]=ans.c[i],tmp2[i]=ans.d[i];\n\t}\n\tvoid updat(int x,int y)\n\t{\n\t\ta[x]=y;\n\t\twhile(x)\n\t\t{\n\t\t\taskk(x);\n\t\t\tif(fa[top[x]])\n\t\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\t\tlf[fa[top[x]]][i]=lf[fa[top[x]]][i]/((tmp1[i]+1)%mo),lh[fa[top[x]]][i]=(lh[fa[top[x]]][i]-tmp2[i]+mo)%mo;\n\t\t\tmodif(1,1,n,dfn[x]),askk(x);\t\n\t\t\tif(fa[top[x]])\n\t\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\t\tlf[fa[top[x]]][i]=lf[fa[top[x]]][i]*((tmp1[i]+1)%mo),lh[fa[top[x]]][i]=(lh[fa[top[x]]][i]+tmp2[i])%mo;\n\t\t\tx=fa[top[x]];\n\t\t}\n\t}\n\tvoid work()\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;i++)\t\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tfor(int i=1,u,v;i<n;i++)\n\t\t\tscanf(\"%d%d\",&u,&v),g[u].push_back(v),g[v].push_back(u);\n\t\tfor(int i=0;i<m;i++)\n\t\t\tc[i][i]=1,FWTxor(c[i],1);\n\t\tinv[1]=1;\n\t\tfor(int i=2;i<mo;i++)\n\t\t\tinv[i]=inv[mo%i]*(mo-mo/i)%mo;\n\t\tdfs1(1,0),dfs2(1,1),dfs3(1);\n\t\tbuild(1,1,n);\n\t\tscanf(\"%d\",&Q);\n\t\twhile(Q--)\n\t\t{\n\t\t\tchar ch[20];int x,y;\n\t\t\tscanf(\"%s%d\",ch,&x);\n\t\t\tif(ch[0]=='C')scanf(\"%d\",&y),updat(x,y);\n\t\t\telse askk(1),FWTxor(tmp2,(mo+1)/2),printf(\"%d\\n\",tmp2[x]);\n\t\t}\n\t}\n}\nint main()\n{\n\tFGF::work();\n\treturn 0;\n}\n```\n\n\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define inl inline\nusing namespace std;\ntypedef pair<int,int> pii;\nnamespace FGF\n{\n\tint n,m,Q;\n\tconst int N=30005,M=135,mo=1e4+7;\n\tint a[N],siz[N],son[N],c[M][M],f[N][M],h[N][M],lh[N][M],tmp[M],ff[N],inv[N];\n\tint fa[N],rt,ls[N],rs[N],st[N],sum[N];\n\tvector<int> g[N];\n\tstruct matrx{\n\t\tint a[M],b[M],c[M],d[M];\n\t\tvoid clear()\n\t\t{\n\t\t\tmemset(a,0,sizeof(int[m])),memset(b,0,sizeof(int[m])),memset(c,0,sizeof(int[m])),memset(d,0,sizeof(int[m]));\n\t\t}\n\t}hw[N];\n\tstruct Node{\n\t\tint x,y;\n\t\tinline void operator =(int a){a?(x=a,y=0):(x=1,y=1);}\n\t\tfriend Node operator *(Node a,int b){!b?a.y++:a.x=1ll*a.x*b%mo;return a;}\n\t\tfriend Node operator /(Node a,int b){!b?a.y--:a.x=1ll*a.x*inv[b]%mo;return a;}\n\t\tint val(){return y?0:x;}\n\t}lf[N][M];\n\tinl matrx operator *(const matrx &x,const matrx &y)\n\t{\n\t\tmatrx s;s.clear();\n\t\tfor(int i=0;i<m;i++)\n\t\t{\n\t\t\ts.a[i]=x.a[i]*y.a[i]%mo;\n\t\t\ts.b[i]=(x.a[i]*y.b[i]%mo+x.b[i])%mo;\n\t\t\ts.c[i]=(x.c[i]*y.a[i]%mo+y.c[i])%mo;\n\t\t\ts.d[i]=(x.c[i]*y.b[i]%mo+x.d[i]+y.d[i])%mo;\n\t\t}\n\t\treturn s;\n\t}\n\tvoid dfs(int u,int fa)\n\t{\n\t\tff[u]=fa,siz[u]=1;\n\t\tfor(int i=0;i<m;i++)\n\t\t\tf[u][i]=c[a[u]][i],lf[u][i]=c[0][i];\n\t\tfor(auto v:g[u])\n\t\t\tif(v!=fa)\n\t\t\t{\n\t\t\t\tdfs(v,u);\n\t\t\t\tsiz[u]+=siz[v];\n\t\t\t\tif(siz[v]>siz[son[u]])son[u]=v;\n\t\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\t\tf[u][i]=(f[u][i]+f[u][i]*f[v][i]%mo)%mo,h[u][i]=(h[u][i]+h[v][i])%mo;\n\t\t\t}\n\t\tfor(int i=0;i<m;i++)\n\t\t\th[u][i]=(h[u][i]+f[u][i])%mo;\n\t\tfor(auto v:g[u])\n\t\t\tif(v!=son[u]&&v!=ff[u])\n\t\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\t\tlf[u][i]=lf[u][i]*((f[v][i]+1)%mo),lh[u][i]=(lh[u][i]+h[v][i])%mo;\n\t}\n\tinl void FWTxor(int *y,int op)\n\t{\n\t\tfor(int i=1;1<<i<=m;i++)\n\t\t\tfor(int j=0;j<m;j+=(1<<i))\n\t\t\t\tfor(int k=0,c,d;k<(1<<(i-1));k++)\n\t\t\t\t\tc=(y[j|k]+y[j|k|(1<<(i-1))])%mo,d=(y[j|k]-y[j|k|(1<<(i-1))]+mo)%mo,\n\t\t\t\t\ty[j|k]=1ll*op*c%mo,y[j|k|(1<<(i-1))]=1ll*op*d%mo;\n\t}\n\tvoid pushup(int x)\n\t{\n\t\tfor(int i=0;i<m;i++)\n\t\t\thw[x].a[i]=hw[x].b[i]=hw[x].c[i]=hw[x].d[i]=lf[x][i].val()*c[a[x]][i]%mo,(hw[x].d[i]+=lh[x][i])%=mo;\n    \tif(ls[x])hw[x]=hw[x]*hw[ls[x]];\n\t\tif(rs[x])hw[x]=hw[rs[x]]*hw[x];\n\t}\n\tint construc(int L,int R)\n\t{\n\t\tint l=L,r=R,mid,ans,x;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tmid=(l+r)>>1;\n\t\t\tsum[mid-1]-sum[L-1]<=sum[R]-sum[mid-1]?(l=mid+1,ans=mid):r=mid-1;\n\t\t}\n\t\tx=st[ans];\n\t\tif(ans!=L)ls[x]=construc(L,ans-1),fa[ls[x]]=x;\n\t\tif(ans!=R)rs[x]=construc(ans+1,R),fa[rs[x]]=x;\n\t\tpushup(x);\n\t\treturn x;\n\t}\n\tint build(int x)\n\t{\n\t\tint y=x;\n\t\tdo{\n\t\t\tfor(auto v:g[y])\n\t\t\t\tif(v!=son[y]&&v!=ff[y])fa[build(v)]=y;\n\t\t}while(y=son[y]);\n\t\twhile(x)st[++y]=x,sum[y]=sum[y-1]+siz[x]-siz[son[x]],x=son[x];\n\t\treturn construc(1,y);\n\t}\n\tvoid updat(int x,int y)\n\t{\n\t\ta[x]=y;\n\t\twhile(x)\n\t\t{\n\t\t\tif(fa[x]&&ls[fa[x]]!=x&&rs[fa[x]]!=x)\n\t\t\t{\n\t\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\t\tlf[fa[x]][i]=lf[fa[x]][i]/((hw[x].c[i]+1)%mo),lh[fa[x]][i]=(lh[fa[x]][i]-hw[x].d[i]+mo)%mo;\n\t\t\t\tpushup(x);\t\n\t\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\t\tlf[fa[x]][i]=lf[fa[x]][i]*((hw[x].c[i]+1)%mo),lh[fa[x]][i]=(lh[fa[x]][i]+hw[x].d[i])%mo;\n\t\t\t}\n\t\t\telse pushup(x);\n\t\t\tx=fa[x];\n\t\t}\n\t}\n\tvoid work()\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;i++)\t\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tfor(int i=1,u,v;i<n;i++)\n\t\t\tscanf(\"%d%d\",&u,&v),g[u].push_back(v),g[v].push_back(u);\n\t\tfor(int i=0;i<m;i++)\n\t\t\tc[i][i]=1,FWTxor(c[i],1);\n\t\tinv[1]=1;\n\t\tfor(int i=2;i<mo;i++)\n\t\t\tinv[i]=inv[mo%i]*(mo-mo/i)%mo;\n\t\tdfs(1,0),rt=build(1);;\n\t\tscanf(\"%d\",&Q);\n\t\twhile(Q--)\n\t\t{\n\t\t\tchar ch[20];int x,y;\n\t\t\tscanf(\"%s%d\",ch,&x);\n\t\t\tif(ch[0]=='C')scanf(\"%d\",&y),updat(x,y);\n\t\t\telse \n\t\t\t{\n\t\t\t\tfor(int i=0;i<m;i++)\n\t\t\t\t\ttmp[i]=hw[rt].d[i];\n\t\t\t\tFWTxor(tmp,(mo+1)/2),printf(\"%d\\n\",tmp[x]);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tFGF::work();\n\treturn 0;\n}\n```",
        "postTime": 1620372297,
        "uid": 224403,
        "name": "\u6728xx\u6728\u5927",
        "ccfLevel": 9,
        "title": "P3781 [SDOI2017]\u5207\u6811\u6e38\u620f\uff08FWT+\u52a8\u6001dp\uff09"
    },
    {
        "content": "\u4e0d\u4f1a\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811 \u4f46\u5176\u5b9e\u90a3\u73a9\u610f\u5b9e\u8d28\u4e0a\u662f\u4e2a\u9759\u6001lct\u7684\u73a9\u610f\n\n\u63d0\u4f9b\u4e00\u4e2a\u7528lct\u5199\u7684 \u6ca1\u60f3\u5230\u5361\u6811\u5256\u6ca1\u5361\u6389lct\n\n\u7528$f(i,j)$\u8868\u793a\u4ee5\u70b9i\u4e3a\u9876\u7aef\u6709\u591a\u5c11\u4e2a\u8fde\u901a\u5757\u5f02\u6216\u548c\u4e3aj\uff0c\u4e0d\u96be\u5199\u51fau\u52a0\u5165\u4e00\u4e2a\u5b50\u6811v\u7684\u72b6\u6001\u8f6c\u79fb(\u5bf9\u4e8e\u6bcf\u79cdk):\n$f(u,k)=f(u,k)+\\sum_{i \\bigoplus j=k}f(u,i)f(v,j)$\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u73a9\u610f\u662f\u4e2a\u5f02\u6216\u5377\u79ef\uff0c\u7528$f'()$\u8868\u793a\u7ecffwt\u8f6c\u6362\u8fc7\u7684$f$:$f'(u)=f'(u)+f'(u)f'(v)$(\u56e0\u4e3a\u662ffwt\u540e\u7684 \u6240\u4ee5\u662f\u76f4\u63a5\u5bf9\u5e94\u76f8\u4e58 \u4e0d\u7528\u5f02\u6216\u5377\u79ef)\n\n\u4e3a\u4e86\u4e4b\u540e\u65b9\u4fbf \u76f4\u63a5\u628a$f'()$\u5f53\u6210$f()$\uff0c\u5373:$f(u)=[w_u]\\prod (f(v)+1)$([w_u]\u8868\u793a$w_u$\u90a3\u4e00\u9879\u4e3a1\u7684\u6570\u7ec4 \u56e0\u4e3a\u53ea\u6709u\u8fd9\u4e2a\u70b9\u81ea\u5df1\u7684\u65f6\u5019\u53ea\u6709$w_u$\u7684\u7b54\u6848\u4e3a1)\n\n\u7136\u540e\u8fd9\u4e2af\u53ea\u662f\u5bf9\u4e8e\u5355\u4e2a\u70b9\u4e3a\u9876\u7aef\u7684\uff0c\u9898\u76ee\u8be2\u95ee\u7684\u662f\u6574\u68f5\u6811\u4e2d\uff0c\u6240\u4ee5\u4e0d\u59a8\u5bf9f\u505a\u4e2a\u5b50\u6811\u548c\uff0c\u7528$F()$\u8868\u793a:$F(u)=f(u)+\\sum_{v\\in son_u}F(v)$\n\n\u6839\u636e\u52a8\u6001dp\u7684\u7ecf\u5178\u5957\u8def \u7528$g$\uff0c$G$\u8868\u793a\u8f7b\u5b50\u6811\u7684$f$,$F$:\n\n$G(u)=\\sum_{v\\in light_u}F(v) \\ \\  \\ \\ g(u)=\\prod_{v\\in light_u} (f(v)+1)$\n\n\u7136\u540e\u56de\u53bb\u8868\u793af,F:\n\n$f(u)=[w_u](f(heavy_u)+1)g(u)\\ \\ \\ F(u)=f(u)+F(heavy_u)+G(u)$\n\n\u7ecf\u5178\u5730\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u4e09\u7ef4\u7684\u77e9\u9635\u4e58\u6cd5\n\n$\\begin{vmatrix} F(heavy_u) & f(heavy_u) & 1\\end{vmatrix}\\quad \\times \\begin{vmatrix}1 & 0 & 0\\\\ [w_u]*g(u) & [w_u]*g(u) & 0\\\\ G(u)+[w_u]*g(u) & [w_u]*g(u) &1\\end{vmatrix}\\quad=\\begin{vmatrix}F(u)&f(u)& 1\\end{vmatrix}\\quad$\n\n\u7136\u800c\u8fd8\u5e76\u6ca1\u6709\u505a\u5b8c \u56e0\u4e3a\u5207\u6362\u8f7b\u91cd\u94fe\u66f4\u65b0$g$\u7684\u65f6\u5019\u4f1a\u9047\u5230/0\u7684\u60c5\u51b5 \u6240\u4ee5\u5373\u6bcf\u4e00\u4f4d\u4e0a\u96f6\u7684\u4e2a\u6570 \u6700\u540e\u83b7\u53d6\u771f\u6b63\u7684$g$\u65f6\u6839\u636e\u96f6\u7684\u4e2a\u6570\u5b58\u4e0d\u5b58\u5728\u8fd8\u539f\u5373\u53ef\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u77e9\u9635\u6709\u4e00\u58061,0\uff0c\u62ff\u53bb\u800d\u800d\n\n$\\begin{vmatrix} 1 & 0 & 0 \\\\ a & b & 0 \\\\ c & d &1\\end{vmatrix}\\times \\begin{vmatrix} 1 & 0 & 0 \\\\ e & f & 0\\\\ g & h &1\\end {vmatrix} \\quad \\quad=\\begin {vmatrix} 1 & 0 & 0 \\\\ a+be & bf & 0 \\\\ c+de+g & df+h & 1\\end {vmatrix} \\quad\t $\n\n\u53d1\u73b0\u4e24\u4e2a\u8fd9\u6837\u5f62\u5f0f\u7684\u77e9\u9635\u4e58\u5b8c\uff0c\u8be501\u7684\u5730\u65b9\u8fd8\u662f01\n\n\u7136\u540e\u53ea\u7ef4\u62a4\u5de6\u4e0b\u89d2\u56db\u4e2a\uff0c\u5c31\u53ef\u4ee5\u628a$3^3=27$\u7684\u5e38\u6570\u964d\u4e3a4\n```cpp\n#include<cstdio>\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch(getchar());\n\twhile (ch<48||ch>57)ch=getchar();\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n}\nconst int N(3e4+5),mod(1e4+7),inv2(1+mod>>1);\ninline const int add(const int &a,const int &b){return (a+b)%mod;}\ninline const int dec(const int &a,const int &b){return (a-b+mod)%mod;}\ninline const int mul(const int &a,const int &b){return a*b%mod;}\nint n,w[N],m,q,inv[mod],head[N],edc,to[N<<1],next[N<<1];\ninline const void addedge(const int &u,const int &v)\n{\n\tnext[++edc]=head[u];to[head[u]=edc]=v;\n\tnext[++edc]=head[v];to[head[v]=edc]=u;\n}\nstruct poly\n{\n\tint val[130];\n\tinline poly(){for (int i(0);i<128;i++)val[i]=0;}\n\tinline int &operator[](const int &x){return val[x];}\n\tinline const void fullset(){for (int i(0);i<m;i++)val[i]=1;}\n\tinline friend poly operator+(poly a,const poly &b){for (int i(0);i<m;i++)a[i]=add(a[i],b.val[i]);return a;}\n\tinline friend poly &operator+=(poly &a,const poly &b){for (int i(0);i<m;i++)a[i]=add(a[i],b.val[i]);return a;}\n\tinline friend poly operator-(poly a,const poly &b){for (int i(0);i<m;i++)a[i]=dec(a[i],b.val[i]);return a;}\n\tinline friend poly &operator-=(poly &a,const poly &b){for (int i(0);i<m;i++)a[i]=dec(a[i],b.val[i]);return a;}\n\tinline friend poly operator*(poly a,const poly &b){for (int i(0);i<m;i++)a[i]=mul(a[i],b.val[i]);return a;}\n\tinline friend poly operator*=(poly &a,const poly &b){for (int i(0);i<m;i++)a[i]=mul(a[i],b.val[i]);return a;}\n\tinline const void fwt(const int k=1)\n\t{\n\t\tfor (int mid(1);mid<m;mid<<=1)\n\t\t\tfor (int i(0);i<m;i+=mid<<1)\n\t\t\t\tfor (int j(0);j<mid;j++)\n\t\t\t\t{\n\t\t\t\t\tconst int x(val[i+j]),y(val[i+j+mid]);\n\t\t\t\t\tval[i+j]=mul(k,add(x,y));\n\t\t\t\t\tval[i+j+mid]=mul(k,dec(x,y));\n\t\t\t\t}\n\t}\n}one;\nstruct matrix\n{\n\tpoly a,b,c,d;\n\tinline matrix(){}\n\tinline matrix(const poly &a,const poly &b):a(a),b(a),c(b),d(a){}\n\tinline matrix(const poly &a,const poly &b,const poly &c,const poly &d):a(a),b(b),c(c),d(d){}\n\tinline friend matrix operator*(const matrix &A,const matrix &B)\n\t{\n\t\treturn matrix(A.a+A.b*B.a,A.b*B.b,A.c+A.d*B.a+B.c,A.d*B.b+B.d);\n\t}\n};\nstruct sp_poly\n{\n\tpoly val,zero;\n\tinline const void set(const int &x,const int &y)\n\t{\n\t\tif (y)zero[x]=0,val[x]=y;else zero[x]=val[x]=y;\n\t}\n\tinline sp_poly operator*=(poly p)\n\t{\n\t\tfor (int i(0);i<m;i++)\n\t\t\tif (p[i])val[i]=mul(val[i],p[i]);\n\t\t\telse zero[i]++;\n\t\treturn *this;\n\t}\n\tinline sp_poly operator/=(poly p)\n\t{\n\t\tfor (int i(0);i<m;i++)\n\t\t\tif (p[i])val[i]=mul(val[i],inv[p[i]]);\n\t\t\telse zero[i]--;\n\t\treturn *this;\n\t}\n\tinline poly restore()\n\t{\n\t\tstatic poly t;\n\t\tfor (int i(0);i<m;i++)t[i]=zero[i]?0:val[i];\n\t\treturn t;\n\t}\n};\nstruct tree\n{\n\tmatrix f;\n\tsp_poly g;\n\tpoly G,val;\n\ttree *son[2],*fa;\n\tstatic tree *null;\n\tvoid *operator new(size_t size);\n\tvoid *operator new[](size_t size);\n\tinline tree()\n\t{\n\t\tstatic bool init(0);\n\t\tif (!init)\n\t\t\tinit=1,\n\t\t\tnull=new tree,\n\t\t\tnull->son[0]=null->son[1]=null->fa=null;\n\t\tg.val=one;\n\t\tson[0]=son[1]=fa=null;\n\t}\n\tinline const void pushup()\n\t{\n\t\tconst poly w(val*g.restore());\n\t\tf=matrix(w,w+G);\n\t\tif (son[0]!=null)f=son[0]->f*f;\n\t\tif (son[1]!=null)f=f*son[1]->f;\n\t}\n\tinline const bool isroot()\n\t{\n\t\treturn fa->son[0]!=this&&fa->son[1]!=this;\n\t}\n\tinline const bool id()\n\t{\n\t\treturn fa->son[1]==this;\n\t}\n\tinline const void rotate()\n\t{\n\t\tconst bool f(id());\n\t\ttree *fa(this->fa),*gfa(fa->fa),*q(son[!f]);\n\t\tif (!fa->isroot())gfa->son[fa->id()]=this;\n\t\t((((son[!f]=fa)->son[f]=q)->fa=fa)->fa=this)->fa=gfa;\n\t\tfa->pushup();pushup();\n\t}\n\tinline const void splay()\n\t{\n\t\tfor (;!isroot();rotate())\n\t\t\tif (!fa->isroot())\n\t\t\t\t(fa->id()^id()?this:fa)->rotate();\n\t}\n}*tree::null,*node0;\n#define node(x) (node0+x)\n#define null tree::null\nchar memory_pool[N*sizeof(tree)],*tail(memory_pool+sizeof(memory_pool));\ninline void *tree::operator new(size_t size){return tail-=size;}\ninline void *tree::operator new[](size_t size){return tail-=size;}\ninline const void access(tree *p)\n{\n\tp->splay();\n\tif (p->son[1]!=null)\n\t\tp->g*=one+p->son[1]->f.a,\n\t\tp->G+=p->son[1]->f.c;\n\tp->son[1]=null;\n\tp->pushup();\n\tfor (tree *q(p->fa);q!=null;q=p->fa)\n\t{\n\t\tq->splay();\n\t\tif (q->son[1]!=null)\n\t\t\tq->g*=one+q->son[1]->f.a,\n\t\t\tq->G+=q->son[1]->f.c;\n\t\tq->g/=one+(q->son[1]=p)->f.a,\n\t\tq->G-=p->f.c,\n\t\tq->pushup(),\n\t\tp->rotate();\n\t}\n}\ninline const void link(tree *p,tree *q)\n{\n\tq->fa=p;\n\tp->g*=q->f.a+one;\n\tp->G+=q->f.c;\n\tp->pushup();\n}\ninline const void modify(tree *p,const int &v)\n{\n\taccess(p);\n\tpoly f;f[v]=1;f.fwt();p->val=f;\n\tp->pushup();\n}\ninline const int query(const int &k)\n{\n\tnode(1)->splay();\n\tpoly f(node(1)->f.c);\n\tf.fwt(inv2);\n\treturn f[k];\n}\npoly f[N],F[N];\ninline const void build(int p,int fa)\n{\n\tf[p][w[p]]=1;f[p].fwt();node(p)->val=f[p];\n\tfor (int son,i(head[p]);i;i=next[i])\n\t\tif ((son=to[i])^fa)\n\t\t\tbuild(son,p),\n\t\t\tf[p]*=one+f[son],\n\t\t\tF[p]+=F[son],\n\t\t\tlink(node(p),node(son));\n\tF[p]+=f[p];\n\tnode(p)->pushup();\n}\nint main()\n{\n\tinv[1]=1;for (int i(2);i<mod;i++)inv[i]=mul((mod-mod/i),inv[mod%i]);\n\tread(n);read(m);\n\tone.fullset();node0=new tree[n+1];\n\tfor (int i(1);i<=n;i++)read(w[i]);\n\tfor (int u,v,i(n);--i;)read(u),read(v),addedge(u,v);\n\tbuild(1,0);\n\tchar opt[7];read(q);\n\tfor (int k,v;q--;)\n\t\tif (scanf(\"%s\",opt),read(k),opt[0]=='C')read(v),modify(node(k),v);\n\t\telse printf(\"%d\\n\",query(k));\n\treturn 0;\n}\n```",
        "postTime": 1604328142,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3781 \u3010[SDOI2017]\u5207\u6811\u6e38\u620f\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3781)\n\nSDOI 2017 R2 D1 T3\uff0cnb tea %%%\n\n~~\u8bb2\u4e2a\u7b11\u8bdd\uff0c\u6700\u8fd1\u6211\u5728\u5b66\u52a8\u6001 dp\uff0cwjz \u5728\u5b66 FWT\uff0c\u800c\u6211\u4eec\u521a\u597d\u5728\u540c\u4e00\u5929\u505a\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u800c\u8fd9\u9053\u9898\u521a\u597d\u53c8\u662f FWT+\u52a8\u6001 dp~~\n\n\u9996\u5148\u8003\u8651\u600e\u6837\u66b4\u529b\u8ba1\u7b97\u7b54\u6848\uff0c\u6211\u4eec\u8bb0 $dp_{u,j}$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u8fde\u901a\u5757\u5305\u542b $u$ \u4e14\u6743\u503c\u7684\u5f02\u6216\u548c\u4e3a $j$\uff0c\u521d\u59cb $dp_{u,val_u}=1$\uff0c\u6bcf\u6b21\u904d\u5386 $u$ \u7684\u4e00\u4e2a\u5b50\u6811 $v$ \u5c31\u5bf9\u8fd9\u4e2a\u5b50\u6811\u5c31\u5bf9\u8fd9\u4e24\u4e2a\u5b50\u6811\u7684 $dp$ \u505a\u4e00\u4e2a\u5408\u5e76\uff0c\u5373 $dp_{u,x}\\leftarrow dp_{u,x}+\\sum\\limits_{y=0}^{m-1}dp_{u,y}\\times dp_{v,x\\oplus y}$\uff0c\u6700\u7ec8\u7b54\u6848\u5373\u4e3a $\\sum\\limits_{u}dp_{u,k}$\u3002\u6b63\u786e\u6027\u663e\u7136\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(qnm^2)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u524d\u56db\u4e2a\u6d4b\u8bd5\u70b9\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u9996\u5148\u4e00\u4e2a\u975e\u5e38\u660e\u663e\u7684\u4f18\u5316\u662f\uff0cDP \u8f6c\u79fb\u65b9\u7a0b\u5f0f\u957f\u5f97\u4e00\u8138 xor \u5377\u79ef\u7684\u6837\u5b50\uff0c\u5982\u679c\u6211\u4eec\u8bb0 $f*g$ \u8868\u793a $f,g$ \u4e24\u4e2a\u96c6\u5408\u5e42\u7ea7\u6570\u7684 FWTxor\uff0c\u90a3\u4e48\u4e0a\u8ff0\u5f0f\u5b50\u53ef\u4ee5\u6539\u5199\u4e3a $dp_u=dp_u+dp_u*dp_v=dp_u*(dp_v+1)$\uff0c\u56e0\u6b64\u8003\u8651\u5c06\u6240\u6709 $dp_u$ \u90fd\u53d8\u4e3a $\\text{FWT}(dp_u)$\uff0c\u90a3\u4e48 $dp_u$ \u7684\u521d\u59cb\u503c\u5c31\u53d8\u4e3a $dp_{u,i}=\\text{FWT}(E_{val_u})_i$\uff0c\u5176\u4e2d $E_i$ \u4e3a\u6ee1\u8db3 $f_i=1,f_j=0(j\\ne i)$ \u7684\u96c6\u5408\u5e42\u7ea7\u6570 $f$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u6240\u6709 $\\text{FWT}(E_i)$ \u5b9e\u73b0 $\\mathcal O(m)$ \u521d\u59cb\u5316\u3002\u8f6c\u79fb\u64cd\u4f5c\u53ef\u4ee5\u6839\u636e FWT \u90a3\u4e00\u5957\u7406\u8bba\u53d8\u6210 $dp_{u,i}\\leftarrow dp_{u,i}\\times(dp_{v,i}+1)$\uff0c\u8fd9\u6837\u5373\u53ef\u5b9e\u73b0 $\\mathcal O(m)$ \u8f6c\u79fb\u3002\u7136\u540e\u6bcf\u6b21\u64cd\u4f5c\u5b8c\u4e86\u4e4b\u540e\u518d IFWT \u56de\u6765\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u4e86 $\\mathcal O(qnm+qm\\log m)$\uff0c\u8fd8\u662f\u53ea\u80fd\u901a\u8fc7\u524d\u56db\u4e2a\u6d4b\u8bd5\u70b9\uff08\n\n\u6ce8\u610f\u5230\u4e0a\u8ff0 $dp$ \u5bf9\u4e8e\u4e0d\u5e26\u4fee\u6539\u7684\u60c5\u51b5\u662f efficient enough \u7684\uff0c\u4f46\u662f\u5e26\u4e0a\u4fee\u6539\u5c31\u76f4\u63a5\u840e\u6389\u4e86\uff0c\u56e0\u6b64\u8003\u8651\u64c5\u957f\u5904\u7406\u4fee\u6539\u64cd\u4f5c\u7684\u52a8\u6001 $dp$ \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6309\u7167\u52a8\u6001 $dp$ \u7684\u5957\u8def\u6211\u4eec\u5c06\u6811\u5256\u6210\u4e00\u6761\u6761\u91cd\u94fe\uff0c$dp$ \u5206\u4e3a\u8f7b\u513f\u5b50\u548c\u91cd\u513f\u5b50\u5904\u7406\uff0c\u6211\u4eec\u8bb0 $dpl_{u,i}=\\sum\\limits_{v\\in\\text{lightson}(u)}(dp_{v,i}+1)$\uff0c\u90a3\u4e48\u8bb0 $w=wson_u$\uff0c\u5219\u6709 $dp_{u,i}=dpl_{u,i}\\times\\text{FWT}(E_{val_u})_i\\times (dp_{w,i}+1)$\u3002\n\n\u4f46\u662f\u5149\u8bb0\u5f55\u4e00\u4e2a $dp$ \u503c\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\uff0c\u56e0\u4e3a\u6700\u7ec8\u6211\u4eec\u8981\u6c42\u7684\u662f\u6574\u68f5\u5b50\u6811\u4e2d $dp_{u,k}$ \u7684\u503c\u4e4b\u548c\uff0c\u6240\u6709\u6211\u4eec\u4e0d\u5f97\u4e0d\u518d\u989d\u5916\u8bb0\u5f55 $sum_{u,i}$ \u8868\u793a\u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684 $dp_{u,i}$ \u4e4b\u548c\uff0c\u90a3\u4e48\u6709 $sum_{u,i}=\\sum\\limits_{v\\in \\text{son}(u)}sum_{v,i}+dp_{u,i}$\uff0c\u6309\u7167\u5957\u8def\u6211\u4eec\u8fd8\u662f\u8bb0 $suml_{u,i}=\\sum\\limits_{v\\in\\text{lightson}(u)}sum_{v,i}$\uff0c\u90a3\u4e48\u6709 $sum_{u,i}=sum_{w,i}+dp_{u,i}+suml_{u,i}=sum_{w,i}+dpl_{u,i}\\times\\text{FWT}(E_{val_u})_i\\times(dp_{w,i}+1)+suml_{u,i}$\n\n\u8003\u8651\u5c06\u8fd9\u4e1c\u897f\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u6709\uff1a\n$$\n\\begin{bmatrix}dp_{u}&sum_{u}&1\\end{bmatrix}=\\begin{bmatrix}dp_{w}&sum_{w}&1\\end{bmatrix}\\times\n\\begin{bmatrix}\ndpl_u\\times\\text{FWT}(E_{val_u})&dpl_u\\times\\text{FWT}(E_{val_u})&0\\\\\n0&1&0\\\\\ndpl_u\\times\\text{FWT}(E_{val_u})&dpl_u\\times\\text{FWT}(E_{val_u})+suml_u&1\n\\end{bmatrix}\n$$\n\u5176\u4e2d $f\\times g$ \u5c31\u5bf9\u5e94\u9879\u76f8\u4e58\u597d\u4e86\uff0c$f+g$ \u4e5f\u540c\u7406\u3002\n\n\u8bb0 $A_u=\\begin{bmatrix}\ndpl_u\\times\\text{FWT}(E_{val_u})&dpl_u\\times\\text{FWT}(E_{val_u})&0\\\\\n0&1&0\\\\\ndpl_u\\times\\text{FWT}(E_{val_u})&dpl_u\\times\\text{FWT}(E_{val_u})+suml_u&1\n\\end{bmatrix}$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$ \u800c\u8a00\uff0c\u8bb0\u5b83\u5230\u91cd\u94fe\u5e95\u7ecf\u8fc7\u7684\u8282\u70b9\u4f9d\u6b21\u662f $u=v_1,v_2,\\cdots,v_k$\uff0c\u90a3\u4e48\u6709\n$$\n\\begin{bmatrix}dp_{u}&sum_{u}&1\\end{bmatrix}=\\begin{bmatrix}0&0&1\\end{bmatrix}\\times\\prod\\limits_{i=k}^1A_{v_i}\n$$\n\u8fd9\u4e2a\u53ef\u4ee5\u6811\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u4fee\u6539\u64cd\u4f5c\u5c31\u6309\u7167\u52a8\u6001 $dp$ \u7684\u5957\u8def\u4e0d\u65ad\u8df3\u91cd\u94fe\u5e76\u64a4\u9500\u539f\u6765\u7684 $dp_{top_u}$ \u5bf9 $dpl_{fa[top_u]}$ \u548c $suml_{fa[top_u]}$ \u7684\u5f71\u54cd\u5e76\u52a0\u5165\u65b0\u7684\u8d21\u732e\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $q\\log^2nm+qm\\log m$\uff0cLOJ \u4e0a\u53ef\u4ee5\u901a\u8fc7\uff0c\u800c\u6d1b\u8c37\u4e0a\u7531\u4e8e\u67d0\u4e24\u4f4d\u6bd2\u7624\u63d0\u4f9b\u7684\u6bd2\u7624\u5361\u6811\u5256\u7684\u6570\u636e\uff0c\u53ea\u80fd\u83b7\u5f97 $80$ \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u8bf4\u8d77\u6765\u8f7b\u5de7\uff0c\u5b9e\u73b0\u8d77\u6765\u4e00\u5806\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a\n\n1. \u76f4\u63a5\u77e9\u9635\u4e58\u6cd5\u4f1a\u591a $27$ \u7684\u5e38\u6570\uff0c\u5bfc\u81f4 TLE\uff0c\u56e0\u6b64\u9700\u8981\u6309\u7167\u5957\u8def\u8fdb\u884c\u4f18\u5316\uff0c\u6ce8\u610f\u5230\u8fd9\u4e2a $3\\times 3$ \u7684\u77e9\u9635\u4e2d\u53ea\u6709\u56db\u4e2a\u4f4d\u7f6e\u662f\u6709\u7528\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u53ea\u7ef4\u62a4\u8fd9\u56db\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u5373 $\\begin{bmatrix}a&b&0\\\\0&1&0\\\\c&d&1\\end{bmatrix}$\uff0c\u90a3\u4e48\u6709 $\\begin{bmatrix}a_1&b_1&0\\\\0&1&0\\\\c_1&d_1&1\\end{bmatrix}\\times \\begin{bmatrix}a_2&b_2&0\\\\0&1&0\\\\c_2&d_2&1\\end{bmatrix}=\\begin{bmatrix}a_1a_2&a_1b_2+b_1&0\\\\0&1&0\\\\a_2c_1+c_2&b_2c_1+d_1+d_2&1\\end{bmatrix}$\uff0c\u8fd9\u6837\u5e38\u6570\u53ef\u4ee5\u964d\u5230 $4$\u3002\n2. \u6ce8\u610f\u7ebf\u6bb5\u6811 `pushup` \u7684\u987a\u5e8f\u3002\n3. \u5728\u64a4\u9500\u539f\u6765\u7684\u8d21\u732e\u65f6\u4f1a\u51fa\u73b0\u9664\u4ee5 $0$ \u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06 $dpl_{u,i}$ \u5b58\u6210\u4e00\u4e2a\u4e2a\u7ed3\u6784\u4f53\uff0c\u6bcf\u4e2a\u7ed3\u6784\u4f53\u7528 $x\\times 0^y$ \u8868\u793a\u4e00\u4e2a\u6570\uff0c\u6bcf\u6b21\u4e58\u4ee5 $0$ \u65f6\u4ee4 $y$ \u52a0\u4e00\uff0c\u9664\u4ee5 $0$ \u5219\u4ee4 $y$ \u51cf\u4e00\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898~~\uff08u1s1 \u849f\u84bb\u662f\u7b2c\u4e00\u6b21\u9047\u5230\u8fd9\u4e2a\u5957\u8def\u5462\uff0c\u5927\u4f6c\u4e0d\u559c\u52ff\u55b7\uff09~~\n4. \u6ce8\u610f\u8ba1\u7b97\u65b0\u52a0\u5165\u7684\u8d21\u732e\u65f6\u662f\u8ba1\u7b97\u7ebf\u6bb5\u6811\u4e0a $[dfn[top[x]]],dfn[bot[top[x]]]$ \u5185\u77e9\u9635\u7684\u4e58\u79ef\uff0c\u800c\u4e0d\u662f $[dfn[x]],dfn[bot[top[x]]]$\uff0c\u849f\u84bb\u56e0\u4e3a\u8fd9\u4e2a\u9519\u8bef\u8c03\u4e86 1h\uff0c\u5fc3\u6001\u70b8\u88c2\u3002\n\n\u7801\u4e86 212 \u884c\u2026\u2026\n\n```cpp\nconst int MAXN=3e4;\nconst int MAXV=1<<7;\nconst int MOD=1e4+7;\nconst int INV2=5004;\nint n,m,val[MAXN+5],inv[MOD+4];\nvoid getinv(){\n\tfor(int i=(inv[0]=inv[1]=1)+1;i<MOD;i++) inv[i]=inv[MOD%i]*(MOD-MOD/i)%MOD;\n}\nvoid FWTxor(int *a,int len,int type){\n\tfor(int i=2;i<=len;i<<=1)\n\t\tfor(int j=0;j<len;j+=i)\n\t\t\tfor(int k=0;k<(i>>1);k++){\n\t\t\t\tint X=a[j+k],Y=a[(i>>1)+j+k];\n\t\t\t\tif(~type) a[j+k]=(X+Y)%MOD,a[(i>>1)+j+k]=(X-Y+MOD)%MOD;\n\t\t\t\telse a[j+k]=(X+Y)*INV2%MOD,a[(i>>1)+j+k]=(X-Y+MOD)*INV2%MOD;\n\t\t\t}\n}\nstruct num0{//number expressed as x*0^y\n\tint x,y;\n\tnum0(int v=1){(!v)?(y=x=1):(x=v,y=0);}\n\tnum0 operator *(const int &rhs){\n\t\t(!rhs)?(++y):(x=x*rhs%MOD);\n\t\treturn *this;\n\t}\n\tnum0 operator /(const int &rhs){\n\t\t(!rhs)?(--y):(x=x*inv[rhs]%MOD);\n\t\treturn *this;\n\t}\n\tint num(){return y?0:x;}\n};\nstruct poly{\n\tint a[MAXV+5];\n\tpoly(){memset(a,0,sizeof(a));}\n\tpoly(int x){for(int i=0;i<m;i++) a[i]=x;}\n\tpoly operator +(poly rhs) const{\n\t\tpoly res;\n\t\tfor(int i=0;i<m;i++) res.a[i]=(a[i]+rhs.a[i])%MOD;\n\t\treturn res;\n\t}\n\tpoly operator *(poly rhs) const{\n\t\tpoly res(1);\n\t\tfor(int i=0;i<m;i++) res.a[i]=a[i]*rhs.a[i]%MOD;\n\t\treturn res;\n\t}\n\tvoid FWT(){FWTxor(a,m,1);}\n\tvoid IFWT(){FWTxor(a,m,-1);}\n} e[MAXV+5];\nint hd[MAXN+5],to[MAXN*2+5],nxt[MAXN*2+5],ec=0;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nint siz[MAXN+5],fa[MAXN+5],dep[MAXN+5],wson[MAXN+5];\nint top[MAXN+5],dfn[MAXN+5],tim=0,rid[MAXN+5];\nint bot[MAXN+5];\nvoid dfs1(int x=1,int f=0){\n\tsiz[x]=1;fa[x]=f;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f) continue;\n\t\tdep[y]=dep[x]+1;dfs1(y,x);siz[x]+=siz[y];\n\t\tif(siz[y]>siz[wson[x]]) wson[x]=y;\n\t}\n}\nvoid dfs2(int x=1,int tp=1){\n\ttop[x]=tp;rid[dfn[x]=++tim]=x;if(wson[x]) dfs2(wson[x],tp);\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==wson[x]||y==fa[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\nint f[MAXN+5][MAXV+5],sum[MAXN+5][MAXV+5],suml[MAXN+5][MAXV+5];\nnum0 fl[MAXN+5][MAXV+5];\nvoid dfs3(int x=1){\n\tfor(int i=0;i<m;i++) f[x][i]=e[val[x]].a[i],fl[x][i]=1;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==fa[x]) continue;dfs3(y);\n\t\tfor(int i=0;i<m;i++) f[x][i]=f[x][i]*(f[y][i]+1)%MOD;\n\t\tfor(int i=0;i<m;i++) sum[x][i]=(sum[x][i]+sum[y][i])%MOD;\n\t} for(int i=0;i<m;i++) sum[x][i]=(sum[x][i]+f[x][i])%MOD;\n}\nvoid dfs4(int x=1){\n\tif(wson[x]) dfs4(wson[x]);\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==fa[x]||y==wson[x]) continue;dfs4(y);\n\t\tfor(int i=0;i<m;i++) fl[x][i]=fl[x][i]*((f[y][i]+1)%MOD);\n\t\tfor(int i=0;i<m;i++) suml[x][i]=(suml[x][i]+sum[y][i])%MOD;\n\t}\n}\nstruct mat{\n\tpoly a,b,c,d;\n\tmat(){}\n\tmat operator *(const mat &rhs){\n\t\tmat res;res.a=a*rhs.a;res.b=b+a*rhs.b;\n\t\tres.c=rhs.a*c+rhs.c;res.d=rhs.b*c+d+rhs.d;\n\t\treturn res;\n\t}\n};\nvoid print(mat x){\n\tfor(int i=0;i<m;i++) printf(\"%d%c\",x.a.a[i],\" \\n\"[i==m-1]);\n\tfor(int i=0;i<m;i++) printf(\"%d%c\",x.b.a[i],\" \\n\"[i==m-1]);\n\tfor(int i=0;i<m;i++) printf(\"%d%c\",x.c.a[i],\" \\n\"[i==m-1]);\n\tfor(int i=0;i<m;i++) printf(\"%d%c\",x.d.a[i],\" \\n\"[i==m-1]);\n}\nmat get(int x){\n\tmat res;\n\tfor(int i=0;i<m;i++) res.a.a[i]=res.b.a[i]=res.c.a[i]=fl[x][i].num()*e[val[x]].a[i]%MOD;\n\tfor(int i=0;i<m;i++) res.d.a[i]=(res.a.a[i]+suml[x][i])%MOD;\n\treturn res;\n}\nstruct node{int l,r;mat v;} s[MAXN*4+5];\nvoid pushup(int k){s[k].v=s[k<<1|1].v*s[k<<1].v;}\nvoid build(int k,int l,int r){\n\ts[k].l=l;s[k].r=r;if(l==r) return s[k].v=get(rid[l]),void();\n\tint mid=l+r>>1;build(k<<1,l,mid);build(k<<1|1,mid+1,r);pushup(k);\n}\nmat query(int k,int l,int r){\n\tif(l<=s[k].l&&s[k].r<=r) return s[k].v;\n\tint mid=s[k].l+s[k].r>>1;\n\tif(r<=mid) return query(k<<1,l,r);\n\telse if(l>mid) return query(k<<1|1,l,r);\n\telse return query(k<<1|1,mid+1,r)*query(k<<1,l,mid);\n}\nvoid modify(int k,int p){\n\tif(s[k].l==s[k].r) return s[k].v=get(rid[p]),void();\n\tint mid=s[k].l+s[k].r>>1;\n\tif(p<=mid) modify(k<<1,p);else modify(k<<1|1,p);\n\tpushup(k);\n}\nvoid change(int x){\n\twhile(x){\n\t\tif(fa[top[x]]){\n\t\t\tmat res=query(1,dfn[top[x]],dfn[bot[top[x]]]);\n//\t\t\tprintf(\"%d\\n\",fa[top[x]]);\n//\t\t\tfor(int i=0;i<m;i++) printf(\"{%d,%d}%c\",fl[fa[top[x]]][i].x,fl[fa[top[x]]][i].y,\" \\n\"[i==m-1]);\n//\t\t\tfor(int i=0;i<m;i++) printf(\"%d%c\",(res.c.a[i]+1)%MOD,\" \\n\"[i==m-1]);\n//\t\t\tprint(get(fa[top[x]]));\n\t\t\tfor(int i=0;i<m;i++) fl[fa[top[x]]][i]=fl[fa[top[x]]][i]/((res.c.a[i]+1)%MOD);\n\t\t\tfor(int i=0;i<m;i++) suml[fa[top[x]]][i]=(suml[fa[top[x]]][i]-res.d.a[i]+MOD)%MOD;\n\t\t} modify(1,dfn[x]);\n\t\tif(fa[top[x]]){\n\t\t\tmat res=query(1,dfn[top[x]],dfn[bot[top[x]]]);\n//\t\t\tprint(res);\n\t\t\tfor(int i=0;i<m;i++) fl[fa[top[x]]][i]=fl[fa[top[x]]][i]*((res.c.a[i]+1)%MOD);\n\t\t\tfor(int i=0;i<m;i++) suml[fa[top[x]]][i]=(suml[fa[top[x]]][i]+res.d.a[i])%MOD;\n//\t\t\tfor(int i=0;i<m;i++) printf(\"{%d,%d}%c\",fl[fa[top[x]]][i].x,fl[fa[top[x]]][i].y,\" \\n\"[i==m-1]);\n//\t\t\tfor(int i=0;i<m;i++) printf(\"%d%c\",(res.c.a[i]+1)%MOD,\" \\n\"[i==m-1]);\n//\t\t\tprint(get(fa[top[x]]));\n\t\t} x=fa[top[x]];\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);getinv();\n\tfor(int i=0;i<m;i++) e[i].a[i]=1,e[i].FWT();\n//\tfor(int i=0;i<m;i++) for(int j=0;j<m;j++) printf(\"%d%c\",e[i].a[j],\" \\n\"[j==m-1]);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&val[i]);\n\tfor(int i=1,u,v;i<n;i++) scanf(\"%d%d\",&u,&v),adde(u,v),adde(v,u);\n\tdfs1();dfs2();dfs3();dfs4();build(1,1,n);\n//\tfor(int i=1;i<=n;i++) for(int j=0;j<m;j++) printf(\"%d%c\",f[i][j],\" \\n\"[j==m-1]);\n//\tfor(int i=1;i<=n;i++) for(int j=0;j<m;j++) printf(\"%d%c\",sum[i][j],\" \\n\"[j==m-1]);\n//\tfor(int i=1;i<=n;i++) for(int j=0;j<m;j++) printf(\"%d%c\",fl[i][j].num(),\" \\n\"[j==m-1]);\n//\tfor(int i=1;i<=n;i++) for(int j=0;j<m;j++) printf(\"%d%c\",suml[i][j],\" \\n\"[j==m-1]);\n//\tfor(int i=0;i<m;i++) printf(\"%d%c\",t.d.a[i],\" \\n\"[i==m-1]);\n\tfor(int i=1;i<=n;i++) if(top[i]==i){\n\t\tint cur=i;while(wson[cur]) cur=wson[cur];\n\t\tbot[i]=cur;\n\t} int qu;scanf(\"%d\",&qu);\n\twhile(qu--){\n\t\tchar opt[9];scanf(\"%s\",opt+1);\n\t\tif(opt[1]=='C'){\n\t\t\tint x,v;scanf(\"%d%d\",&x,&v);\n\t\t\tval[x]=v;change(x);\n\t\t} else {\n\t\t\tint k;scanf(\"%d\",&k);\n\t\t\tmat res=query(1,dfn[1],dfn[bot[1]]);\n//\t\t\tfor(int i=0;i<m;i++) printf(\"%d%c\",res.d.a[i],\" \\n\"[i==m-1]);\n\t\t\tres.d.IFWT();\n\t\t\tprintf(\"%d\\n\",res.d.a[k]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1625715927,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3781 [SDOI2017]\u5207\u6811\u6e38\u620f"
    }
]