[
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u6309 $l$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u8003\u8651\u5b58\u50a8\u5f53\u524d\u6b63\u5728\u88ab\u6253\u7684\u50f5\u5c38\u7684 $r$\u3002\n\n\u65b0\u52a0\u4e00\u53ea\u50f5\u5c38\u53ef\u4ee5\u52063\u7c7b\u8ba8\u8bba:\n- \u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u5f53\u524d\u8fd8\u6709\u7a7a\u95f2\u7684\u8c4c\u8c46\u5c04\u624b\uff0c\u76f4\u63a5\u5b58\u50a8\u5f53\u524d\u50f5\u5c38\u7684 $r$\u3002\n- \u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u5f53\u524d\u88ab\u6253\u7684\u50f5\u5c38\u6700\u65e9\u88ab\u6740\u7684\u5df2\u7ecf\u6b7b\u4e86\uff0c\u5220\u9664\u6b7b\u7684\u50f5\u5c38\u7684 $r$ \u5e76\u63d2\u5165\u5f53\u524d\u50f5\u5c38\u7684 $r$\u3002\n- \u7b2c\u4e09\u79cd\u60c5\u51b5\uff1a\u6ca1\u6709\u5df2\u7ecf\u6b7b\u7684\u50f5\u5c38\u7684\u8bdd\u7b54\u6848\u52a01\uff0c\u5e76\u6bd4\u8f83\u6700\u665a\u6b7b\u7684\u50f5\u5c38\u7684 $r$ \u4e0e\u5f53\u524d\u50f5\u5c38\u7684 $r$ \u7684\u5927\u5c0f\u3002\u5982\u679c\u5f53\u524d\u50f5\u5c38\u7684 $r$ \u5c0f\uff0c\u5219\u5c06\u6700\u665a\u6b7b\u7684\u50f5\u5c38\u7684 $r$ \u5220\u9664\u5e76\u63d2\u5165\u5f53\u524d\u50f5\u5c38\u7684 $r$ \u3002\n\n\u7efc\u4e0a\uff0c\u9700\u8981\u7684\u64cd\u4f5c\u6709\uff1a\u63d2\u5165\u4e00\u4e2a\u503c\uff0c\u67e5\u627e\u6700\u5c0f\u503c\uff0c\u67e5\u627e\u6700\u5927\u503c\uff0c\u5220\u9664\u6700\u5c0f\u503c\uff0c\u5220\u9664\u6700\u5927\u503c\n\n\u6240\u4ee5\u5f88\u81ea\u7136\u7684\u5c31\u80fd\u60f3\u5230\u5e73\u8861\u6811\n\n## code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=2e5+5;\nconst int Inf=1e9+5;\nint n,m,tot,ans=0,root;\nstruct zz{\n\tint l,r;\n}a[MAXN];\nbool cmp(zz x,zz y){\n\treturn x.l!=y.l?x.l<y.l:x.r<y.r;//\u8d2a\u5fc3\u7684\u6392\u5e8f\n}\nstruct tr{\n\tint v,l,r,pr,k;\n}t[MAXN];\nvoid zig(int& x){\n\tint y=t[x].l;\n\tt[x].l=t[y].r;\n\tt[y].r=x;\n\tx=y;\n}\nvoid zag(int& x){\n\tint y=t[x].r;\n\tt[x].r=t[y].l;\n\tt[y].l=x;\n\tx=y;\n}\nvoid Insert(int& no,int vi){//\u63d2\u5165\n\tif(no==0){\n\t\tno=++tot;\n\t\tt[tot].pr=rand();\n\t\tt[tot].v=vi;\n\t\tt[tot].k++;\n\t\treturn;\n\t}\n\tif(t[no].v==vi){\n\t\tt[no].k++;\n\t\treturn;\n\t}\n\tif(t[no].v<vi){\n\t\tInsert(t[no].r,vi);\n\t\tif(t[no].pr>t[t[no].r].pr)zag(no);\n\t}\n\telse{\n\t\tInsert(t[no].l,vi);\n\t\tif(t[no].pr>t[t[no].l].pr)zig(no);\n\t}\n}\nvoid de(int& no,int vi){//\u5220\u9664\n\tif(t[no].v==vi){\n\t\tif(t[no].k>1){\n\t\t\tt[no].k--;\n\t\t\treturn;\n\t\t}\n\t\tif(t[no].l==0||t[no].r==0){\n\t\t\tno=t[no].l^t[no].r;\n\t\t}\n\t\telse{\n\t\t\tif(t[t[no].l].pr<t[t[no].r].pr){\n\t\t\t\tzig(no);\n\t\t\t\tde(no,vi);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tzag(no);\n\t\t\t\tde(no,vi);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tif(vi<t[no].v){\n\t\tde(t[no].l,vi);\n\t}\n\telse{\n\t\tde(t[no].r,vi);\n\t}\n}\nint qi(int x){//\u67e5\u627e\u524d\u9a71\n\tint ans;\n\tint roo=root;\n\twhile(roo){\n\t\tif(t[roo].v<=x){\n\t\t\tans=t[roo].v;\n\t\t\troo=t[roo].r;\n\t\t}\n\t\telse{\n\t\t\troo=t[roo].l;\n\t\t}\n\t}\n\treturn ans;\n}\nint ho(int x){//\u67e5\u627e\u540e\u7ee7\n\tint ans;\n\tint roo=root;\n\twhile(roo){\n\t\tif(t[roo].v>=x){\n\t\t\tans=t[roo].v;\n\t\t\troo=t[roo].l;\n\t\t}\n\t\telse{\n\t\t\troo=t[roo].r;\n\t\t}\n\t}\n\treturn ans;\n}\nint main(){\n\tsrand(time(NULL));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d%d\",&a[i].l,&a[i].r);\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n;++i){\n\t\tif(m!=0){//\u60c5\u51b5\u4e00\n\t\t\tm--;\n\t\t\tInsert(root,a[i].r);\n\t\t\tcontinue;\n\t\t}\n\t\tif(ho(0)/*\u4e00\u4e2a\u6781\u5c0f\u503c\u7684\u540e\u7ee7\u662f\u5f53\u524d\u6811\u91cc\u7684\u6700\u5c0f\u503c*/<=a[i].l){//\u60c5\u51b5\u4e8c\n\t\t\t//cout<<ho(0)<<\"\\n\";\n\t\t\tde(root,ho(0));\n\t\t\tInsert(root,a[i].r);\n\t\t\tcontinue;\n\t\t}\n\t\t//cout<<i<<\"\\n\";\n\t\tans++;\n\t\tif(qi(Inf)/*\u4e00\u4e2a\u6781\u5927\u503c\u7684\u524d\u9a71\u662f\u5f53\u524d\u6811\u91cc\u7684\u6700\u5927\u503c*/>a[i].r){//\u60c5\u51b5\u4e09\n\t\t\tde(root,qi(Inf));\n\t\t\tInsert(root,a[i].r);\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1632553992,
        "uid": 368884,
        "name": "sunrise1024",
        "ccfLevel": 0,
        "title": "P7391\u9898\u89e3"
    },
    {
        "content": "## P7391 \u300cTOCO Round 1\u300d\u81ea\u9002\u5e94 PVZ \u9898\u89e3\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P7391)\n\n### \u601d\u8def\n\u8fd9\u9053\u9898\u8d2a\u5fc3\u7684\u65b9\u6848\u6709\u70b9\u591a\uff0c\u8fd9\u91cc\u4e00\u4e00\u5217\u4e3e\u3002\u7b2c\u4e00\uff0c\u628a\u50f5\u5c38\u51fa\u73b0\u65f6\u523b\u548c\u8d70\u8fdb\u623f\u5b50\u65f6\u523b\u60f3\u6210\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u7b2c\u4e8c\u5bf9\u4e8e\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u7684\u8c4c\u8c46\u5c04\u624b\uff0c\u6211\u4eec\u4e00\u5b9a\u9009\u62e9\u4e0a\u6b21\u653b\u51fb\u65f6\u95f4\u6700\u8fd1\u7684\u8c4c\u8c46\u5c04\u624b\u653b\u51fb\u50f5\u5c38\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u66f4\u7075\u6d3b\u7684\u653b\u51fb\u540e\u9762\u7684\u50f5\u5c38\u3002\n\n___\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,i,j,ans;\nmultiset<int>s;//multiset\u7ef4\u62a4\u4e0a\u6b21\u653b\u51fb\u65f6\u95f4\u6700\u8fd1\u7684\u8c4c\u8c46\u5c04\u624b\nstruct zombie{\n\tint l,r;\n}z[200001];\nbool cmp(zombie x,zombie y){\n\treturn x.r<y.r;\n}\nint main(){\n\tmultiset<int>::iterator it;\n\tscanf(\"%d%d\",&n,&m);\n\tif(m>=n){\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&z[i].l,&z[i].r);\n\tsort(z+1,z+1+n,cmp);\n\tfor(i=1;i<=n;i++){\n\t\tit=s.upper_bound(z[i].l);\n\t\tif(it!=s.begin()){\n\t\t\tit--;\n\t\t\ts.erase(it);\n\t\t\ts.insert(z[i].r);\n\t\t}\n\t\telse{\n\t\t\tif(s.size()+1>m)//\u6253\u4e0d\u6b7b\u7684\u60c5\u51b5\n\t\t\t\tans++;\n\t\t\telse\n\t\t\t\ts.insert(z[i].r);\t\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1643007082,
        "uid": 371848,
        "name": "\u5434\u601d\u8bda",
        "ccfLevel": 6,
        "title": "P7391 \u300cTOCO Round 1\u300d\u81ea\u9002\u5e94 PVZ \u9898\u89e3"
    },
    {
        "content": "\u5199\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u601d\u8def\u3002\n\n\u8003\u8651 $m=1$ \u7684\u65f6\u5019\u5c31\u662f\u51cc\u4e71\u7684\u7ebf\u6bb5\uff0c\u76f4\u63a5\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u7136\u540e\u80fd\u6253\u5c31\u6253\u3002\n\n\u63a8\u5e7f\u4e00\u4e0b\uff0c$m>1$ \u7684\u65f6\u5019\u80fd\u4e0d\u80fd\u6709\u8c4c\u8c46\u80fd\u6253\u5c31\u6253\u7684\u53bb\u8fd9\u6837\u5b50\u8d2a\u5fc3\u5462\uff0c\u8fd9\u4e2a\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ea\u662f\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4e0d\u662f\u5168\u5c40\u6700\u4f18\u3002\n\n\u9519\u8bef\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define LL long long\nint n,m,ans,dou[200005];\nstruct node{\n\tint l,r;\n}a[200005];\nbool tag[200005];\nbool cmp(node x,node y){\n\tif(x.r==y.r)return x.l<y.l;\n\treturn x.r<y.r;\n}\nint main() {\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d %d\",&a[i].l,&a[i].r);\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(a[i].l>=dou[j])ans++,dou[j]=a[i].r;\n\tprintf(\"%d\\n\",n-ans);\n    return 0;\n}\n```\n\n\u53d1\u73b0\u8fd9\u4e2a\u8d2a\u5fc3\u4f1a\u6709\u4e00\u4e2a\u81f4\u547d\u7684\u7f3a\u70b9\uff0c\u5373\u662f\u5982\u679c\u4e00\u4e2a\u8c4c\u8c46\u5f53\u524d\u4fdd\u5b58\u7684\u53f3\u7aef\u70b9\u5f88\u5c0f\uff0c\u6709\u4e00\u4e2a\u5f88\u5927\uff0c\u4f46\u662f\u5f53\u524d\u6709\u4e00\u4e2a\u50f5\u5c38\u7684\u5de6\u7aef\u70b9\u90fd\u5927\u4e8e\u7b49\u4e8e\u5b83\u4eec\uff0c\u5982\u679c\u9009\u5230\u4e86\u8fd9\u4e2a\u5f88\u5c0f\u7684\uff0c\u5c82\u4e0d\u662f\u6d6a\u8d39\uff1f\u4e8e\u662f\u8003\u8651\u6bcf\u6b21\u9009\u540e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u53ef\u4ee5\u83b7\u5f97 `60 pts`\u3002\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define LL long long\nint n,m,ans,dou[200005];\nstruct node{\n\tint l,r;\n}a[200005];\nbool tag[200005];\nbool cmp(node x,node y){\n\tif(x.r==y.r)return x.l<y.l;\n\treturn x.r<y.r;\n}\nbool Cmp(int x,int y){\n\treturn x>y;\n}\nint main() {\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d %d\",&a[i].l,&a[i].r);\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(a[i].l>=dou[j]){\n\t\t\t\tans++,dou[j]=a[i].r;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tsort(dou+1,dou+m+1,Cmp);\n\t}\n\tprintf(\"%d\\n\",n-ans);\n    return 0;\n}\n```\n\u8fd9\u4e0d\u5c31\u662f\u67e5\u4e2a\u524d\u9a71\u5417\uff0c\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u641e\uff0c\u4e0d\u8fc7\u76f4\u63a5\u4e0a\u5e73\u8861\u6811\u5c31\u884c\uff0c\u8fd9\u91cc\u7528\u7684 `fhq-treap`\u3002\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <ctime>\n#include <algorithm>\nusing namespace std;\n#define LL long long\nint n,m,ans;\nstruct node{\n\tint l,r;\n}a[200005];\nconst int INF=2e9;\nbool cmp(node x,node y){\n\tif(x.r==y.r)return x.l<y.l;\n\treturn x.r<y.r;\n}\nstruct fhq_treap{\n\tint cnt,root,x,y,z,ch[400005][2],size[400005],rnd[400005],val[400005];\n\tint newnode(int value){\n\t\tsize[++cnt]=1;\n\t\tval[cnt]=value;\n\t\trnd[cnt]=rand()*rand()%998244353+1;\n\t\treturn cnt;\n\t}\n\tvoid updata(int now){\n\t\tsize[now]=size[ch[now][0]]+size[ch[now][1]]+1;\n\t}\n\tvoid split(int now,int value,int &x,int &y){\n\t\tif(!now)x=y=0;\n\t\telse {\n\t\t\tif(val[now]<=value){\n\t\t\t\tx=now;\n\t\t\t\tsplit(ch[now][1],value,ch[now][1],y);\n\t\t\t}else{\n\t\t\t\ty=now;\n\t\t\t\tsplit(ch[now][0],value,x,ch[now][0]);\n\t\t\t}\n\t\t\tupdata(now);\n\t\t}\n\t}\n\tint merge(int x,int y){\n\t\tif(!x||!y)return x+y;\n\t\tif(rnd[x]<rnd[y]){\n\t\t\tch[x][1]=merge(ch[x][1],y);\n\t\t\tupdata(x);\n\t\t\treturn x;\n\t\t}else{\n\t\t\tch[y][0]=merge(x,ch[y][0]);\n\t\t\tupdata(y);\n\t\t\treturn y;\n\t\t}\n\t}\n\tvoid ins(int value){\n\t\tsplit(root,value,x,y);\n\t\troot=merge(merge(x,newnode(value)),y);\n\t}\n\tvoid del(int value){\n\t\tsplit(root,value,x,z);\n\t\tsplit(x,value-1,x,y);\n\t\ty=merge(ch[y][0],ch[y][1]);\n\t\troot=merge(merge(x,y),z);\n\t}\n\tint rank(int value){\n\t\tsplit(root,value-1,x,y);\n\t\tint res=size[x]+1;\n\t\troot=merge(x,y);\n\t\treturn res;\n\t}\n\tint kth(int now,int k){\n\t\twhile(1){\n\t\t\tif(k<=size[ch[now][0]])now=ch[now][0];\n\t\t\telse if(k==size[ch[now][0]]+1)return now;\n\t\t\telse k=k-size[ch[now][0]]-1,now=ch[now][1];\n\t\t}\n\t}\n\tint pre(int value){\n\t\tsplit(root,value,x,y);\n\t\tint res=val[kth(x,size[x])];\n\t\troot=merge(x,y);\n\t\treturn res;\n\t} \n\tint nxt(int value){\n\t\tsplit(root,value,x,y);\n\t\tint res=val[kth(y,1)];\n\t\troot=merge(x,y);\n\t\treturn res;\n\t} \n}T;\nint main() {\n\tsrand(time(0));\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d %d\",&a[i].l,&a[i].r);\n\tsort(a+1,a+n+1,cmp);\n\tT.ins(-INF),T.ins(INF);\n\tfor(int i=1;i<=m;i++)T.ins(0);\n\tfor(int i=1;i<=n;i++){\n\t\tint x=T.pre(a[i].l);\n\t\tif(x==-INF)continue;\n\t\telse {\n\t\t\tans++;\n\t\t\tT.del(x);\n\t\t\tT.ins(a[i].r); \n\t\t}\n\t}\n\tprintf(\"%d\\n\",n-ans);\n    return 0;\n}\n```\n",
        "postTime": 1614691699,
        "uid": 154560,
        "name": "Silver187",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 \u300cTOCO Round 1\u300d\u81ea\u9002\u5e94 PVZ"
    },
    {
        "content": "## \u9898\u89e3 P7391 \u3010\u300cTOCO Round 1\u300d\u81ea\u9002\u5e94 PVZ\u3011\n\n### \u9898\u610f\n\n+ $n$ \u4e2a\u5de6\u95ed\u53f3\u5f00\u533a\u95f4 $[l,r)$\uff0c\u9009\u53d6\u533a\u95f4\uff0c\u4f7f\u6bcf\u4e2a\u70b9\u90fd\u88ab\u4e0d\u8d85\u8fc7 $m$ \u4e2a\u533a\u95f4\u8986\u76d6\uff1b\n+ \u6700\u5927\u5316\u9009\u53d6\u7684\u533a\u95f4\u6570\uff1b\n+ $1\\le n,m\\le2\\times10^5$\uff0c$1\\le l_i,r_i\\le10^9$\u3002\n\n### \u505a\u6cd5\n\n\u53d1\u73b0\u4f3c\u4e4e\u548c P1803 \u5f88\u50cf\uff1f\n\n\u4ed4\u7ec6\u6bd4\u8f83\uff0c\u53d1\u73b0\u4e3b\u8981\u6709\u4e24\u70b9\u4e0d\u540c\uff1a\n1. P1803 \u4fdd\u8bc1 $m=1$\uff1b\n2. P1803 \u7684 $l,r$ \u662f $10^6$ \u6b21\u65b9\u7ea7\u522b\u7684\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u70b9\uff0c\u52a0\u4e2a\u79bb\u6563\u5316\u5373\u53ef\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u7136\u540e\u662f\u7b2c\u4e00\u70b9\u3002\n\n\u5148\u56de\u5fc6\u4e00\u4e0b P1803 \u7684\u505a\u6cd5\u3002\n\n> \u663e\u7136\u653e\u53f3\u7aef\u70b9\u6700\u9760\u5de6\u7684\u7ebf\u6bb5\u6700\u597d\uff0c\u4ece\u5de6\u5411\u53f3\u653e\uff0c\u53f3\u7aef\u70b9\u8d8a\u5c0f\u59a8\u788d\u8d8a\u5c11  \n\n> \u5176\u4ed6\u7ebf\u6bb5\u653e\u7f6e\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u8d2a\u5fc3\u653e\u7f6e\u7ebf\u6bb5\uff0c\u5373\u80fd\u653e\u5c31\u653e\n\n\u2014\u2014kkksc03\n\n\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u5982\u679c\u6309\u53f3\u7aef\u70b9\u5347\u5e8f\u6392\u5e8f\uff0c\u90a3\u4e24\u4e2a\u533a\u95f4\u5982\u679c\u76f8\u4ea4\uff0c\u90a3\u9009\u53f3\u7aef\u70b9\u5c0f\u7684\u533a\u95f4\u7ed3\u679c\u4e0d\u4f1a\u66f4\u5dee\u3002\n\n\u5982\u679c\u8fd8\u6709\u4e00\u4e2a\u53f3\u7aef\u70b9\u66f4\u5927\u7684\u533a\u95f4\uff1a\n1. \u5982\u679c\u4e0e\u4e24\u4e2a\u533a\u95f4\u90fd\u76f8\u4ea4\uff0c\u90a3\u9009\u54ea\u4e2a\u7b54\u6848\u90fd\u4e00\u6837\uff1b\n2. \u5982\u679c\u4e0e\u4e24\u4e2a\u533a\u95f4\u90fd\u4e0d\u76f8\u4ea4\uff0c\u90a3\u9009\u54ea\u4e2a\u7b54\u6848\u90fd\u4e00\u6837\uff1b\n3. \u5982\u679c\u4e0e\u53f3\u7aef\u70b9\u5927\u7684\u533a\u95f4\u76f8\u4ea4\uff0c\u4e0e\u53f3\u7aef\u70b9\u5c0f\u7684\u533a\u95f4\u76f8\u4ea4\uff0c\u90a3\u9009\u53f3\u7aef\u7684\u5c0f\u7684\u533a\u95f4\u663e\u7136\u66f4\u4f18\uff1b\n4. \u5982\u679c\u4e0e\u53f3\u7aef\u70b9\u5c0f\u7684\u533a\u95f4\u76f8\u4ea4\uff0c\u4e0e\u53f3\u7aef\u70b9\u5927\u7684\u533a\u95f4\u76f8\u4ea4\uff0c\u4f60\u4f1a\u53d1\u73b0\u6ca1\u6709\u8fd9\u79cd\u53ef\u80fd\u3002\n\n\u8fd9\u4e2a\u8bc1\u660e\u540c\u6837\u9002\u7528\u4e8e\u672c\u9898\u3002\n\n\u672c\u9898\u505a\u6cd5\u4e5f\u662f\u6309\u53f3\u7aef\u70b9\u5347\u5e8f\u6392\u5e8f\uff0c\u80fd\u653e\u5c31\u653e\u3002\n\n\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u600e\u4e48\u5224\u65ad\u80fd\u4e0d\u80fd\u653e\u5462\uff1f\n\n\u9009\u4e00\u4e2a\u533a\u95f4\uff0c\u5c31\u628a\u8fd9\u4e2a\u533a\u95f4\u5168\u90e8\u52a0\u4e0a $1$\uff0c\u8981\u4fdd\u8bc1\u52a0\u540e\u6bcf\u4e2a\u70b9\u90fd\u4e0d\u8d85\u8fc7 $m$\uff0c\u90a3\u52a0\u4e4b\u524d\u533a\u95f4\u6700\u5927\u503c\u5c31\u8981\u5c0f\u4e8e $m$\u3002\n\n\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6c42\u6700\u5927\u503c\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 2e5 + 5;\n\nvector<int> v;\n\nint id(int x) {\n\treturn lower_bound(v.begin(), v.end(), x) - v.begin() + 1;\n}\n\nstruct Node {\n\tint l, r;\n\t\n\tbool operator < (Node a) {\n\t\tif (r != a.r) {\n\t\t\treturn l > a.l;\n\t\t}\n\t\treturn r < a.r;\n\t}\n} a[N];\n\nstruct Tree {\n\tTree *ls, *rs;\n\tint maxx, lazy;\n\t\n\tTree() {\n\t\tmaxx = lazy = 0;\n\t}\n\t\n\tvoid update(int k) {\n\t\tlazy += k;\n\t\tmaxx += k;\n\t}\n\t\n\tvoid merge(Tree t1, Tree t2) {\n\t\tmaxx = max(t1.maxx, t2.maxx);\n\t}\n} seg[N << 2], *root = seg;\nint tot;\n\nvoid build(Tree *t, int l, int r) {\n\tif (l == r) {\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tt->ls = &seg[++tot];\n\tt->rs = &seg[++tot];\n\tbuild(t->ls, l, mid);\n\tbuild(t->rs, mid + 1, r);\n}\n\nvoid pushdown(Tree *t) {\n\tt->ls->update(t->lazy);\n\tt->rs->update(t->lazy);\n\tt->lazy = 0;\n}\n\nvoid change(Tree *t, int l, int r, int x, int y, int k) {\n\tif (x <= l && r <= y) {\n\t\tt->update(k);\n\t\treturn;\n\t}\n\tpushdown(t);\n\tint mid = (l + r) >> 1;\n\tif (x <= mid) {\n\t\tchange(t->ls, l, mid, x, y, k);\n\t}\n\tif (mid < y) {\n\t\tchange(t->rs, mid + 1, r, x, y, k);\n\t}\n\tt->merge(*t->ls, *t->rs);\n}\n\nTree query(Tree *t, int l, int r, int x, int y) {\n\tif (x <= l && r <= y) {\n\t\treturn *t;\n\t}\n\tpushdown(t);\n\tint mid = (l + r) >> 1;\n\tTree ans;\n\tif (x <= mid) {\n\t\tans.merge(ans, query(t->ls, l, mid, x, y));\n\t}\n\tif (mid < y) {\n\t\tans.merge(ans, query(t->rs, mid + 1, r, x, y));\n\t}\n\treturn ans;\n}\n\nint main() {\n\tint n, m;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d%d\", &a[i].l, &a[i].r);\n\t\t++a[i].l;\n\t\tv.push_back(a[i].l);\n\t\tv.push_back(a[i].r);\n\t}\n\tsort(v.begin(), v.end());\n\tv.erase(unique(v.begin(), v.end()), v.end());\n\tsort(a + 1, a + n + 1);\n\tint cnt = 0;\n\tbuild(root, 1, n + n);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (query(root, 1, n + n, id(a[i].l), id(a[i].r)).maxx == m) {\n\t\t\tcontinue;\n\t\t}\n\t\t++cnt;\n\t\tchange(root, 1, n + n, id(a[i].l), id(a[i].r), 1);\n\t}\n\tprintf(\"%d\", n - cnt);\n}\n```",
        "postTime": 1615634531,
        "uid": 246014,
        "name": "Cutest_Junior",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P7391 \u3010\u300cTOCO Round 1\u300d\u81ea\u9002\u5e94 PVZ\u3011"
    },
    {
        "content": "\u5206\u6790\u53ef\u4ee5\u5f97\u51fa\u8fd9\u6837\u4e00\u4e2a\u8d2a\u5fc3\u7ed3\u8bba\uff0c\u6211\u4eec\u9996\u5148\u5c06\u65f6\u95f4\u6309 $r$ \u6392\u5e8f\uff0c\u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5230\u6765\u7684\u50f5\u5c38\uff0c\u6211\u4eec\u901a\u8fc7\u67e5\u8be2\u6bd4 $l$ \u5c0f\u7684\u6700\u5927\u6570\uff0c\u5b89\u6392\u5176\u6765\u653b\u51fb\u8fd9\u53ea\u50f5\u5c38\uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u66f4\u591a\u7684\u673a\u4f1a\u8ba9\u7a7a\u4f59\u65f6\u95f4\u5728\u524d\u7684\u8c4c\u8c46\u653b\u51fb\u5230\u6765\u65f6\u95f4\u65e9\u7684\u50f5\u5c38\uff0c\u67e5\u8be2\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5f97\u5230\u7528\u5e73\u8861\u6811\uff0c\u4e5f\u5c31\u662f\u67e5\u627e\u524d\u9a71\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\u8fb9\u754c\u95ee\u9898\uff0c\u9898\u76ee\u4e2d\u8bf4\u4e0d\u5305\u542b $l_i$\uff0c $r_i$\uff0c\u610f\u601d\u5c31\u662f\uff0c\u8c4c\u8c46\u4ece $l_i + 1$ \u5f00\u59cb\u6253\uff0c\u6253\u5230 $r_i - 1$ \u5373\u53ef\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6700\u7ec8\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u5c06 $m$ \u4e2a $0$ \u63d2\u5165\u5230\u5e73\u8861\u6811\u4e2d\uff0c\u4ee3\u8868\u6709 $m$ \u4e2a\u8c4c\u8c46\u4ece\u65f6\u523b $0$ \u5f00\u59cb\u5c31\u53ef\u4ee5\u653b\u51fb\u50f5\u5c38\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u50f5\u5c38\uff0c\u6211\u4eec\u67e5\u8be2 $l_i + 1$ \u7684\u524d\u9a71\uff0c\u6ce8\u610f\u4e0d\u662f $l_i$\uff0c\u56e0\u4e3a\u6211\u4eec\u4ece $l_i + 1$ \u5f00\u59cb\u6253\u5c31\u884c\uff08\u4e3b\u8981\u56e0\u4e3a\u6211\u7684 splay \u67e5\u8be2\u524d\u9a71\u662f\u4e25\u683c\u5c0f\u4e8e\uff0c\u56e0\u6b64\u5c31\u8981\u67e5 $l_i + 1$ \u4e86\uff09\uff0c\u5b89\u6392\u4e86\u8fd9\u4e00\u4e2a\u8c4c\u8c46\u4e4b\u540e\uff0c\u6211\u4eec\u8981\u66f4\u65b0\u5b83\u7684\u53ef\u7528\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u4ece\u5e73\u8861\u6811\u4e2d\u5220\u6389 $l_i + 1$ \u7684\u524d\u9a71\uff0c\u518d\u63d2\u5165 $r_i$\uff0c\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4e0d\u662f $r_i - 1$ \u4e86\u5462\uff0c\u56e0\u4e3a\u6253\u5230 $r_i - 1$ \u65f6\u8fd8\u5728\u6253\uff0c\u5230 $r_i$ \u624d\u80fd\u7528\u4e8e\u4e0b\u4e00\u4e2a\uff0c\u8fd9\u6837\u5c31\u505a\u5b8c\u5566\u3002\n\n\u4e0b\u9762\u8d34\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define inf 0x3fffffff\n#define maxn 2000005\nusing namespace std;\nstruct node {\n\tint l, r;\n\tbool operator<(const node& x) const {\n\t\treturn r == x.r ? l < x.l : r < x.r;\n\t}\n}N[maxn];\nclass Splay {\nprivate:\n    int rt, tot, fa[maxn], ch[maxn][2], cnt[maxn], siz[maxn];\n    void maintain(int x) { siz[x] = siz[ch[x][0]] + siz[ch[x][1]] + cnt[x]; }\n    bool get(int x) { return x == ch[fa[x]][1]; }\n    void clear(int x) { ch[x][0] = ch[x][1] = fa[x] = cnt[x] = siz[x] = val[x] = 0; }\n    void rotate(int x) {\n        int y = fa[x], z = fa[y], chk = get(x);\n        ch[y][chk] = ch[x][chk ^ 1];\n        if (ch[x][chk ^ 1]) fa[ch[x][chk ^ 1]] = y;\n        ch[x][chk ^ 1] = y;\n        fa[y] = x; fa[x] = z;\n        if (z) ch[z][y == ch[z][1]] = x;\n        maintain(x); maintain(y);\n    }\n    void splay(int x) {\n        for (int f = fa[x]; f = fa[x], f; rotate(x))\n            if (fa[f]) rotate(get(x) == get(f) ? f : x);\n        rt = x;\n    }\npublic:\n    int val[maxn];\n    void insert(int k) {\n        if (!rt) {\n            val[++tot] = k;\n            cnt[tot]++;\n            rt = tot;\n            maintain(rt);\n            return;\n        }\n        int cur = rt, f = 0;\n        while (1) {\n            if (val[cur] == k) {\n                cnt[cur]++;\n                maintain(cur);\n                maintain(f);\n                splay(cur);\n                return;\n            }\n            f = cur;\n            cur = ch[cur][val[cur] < k];\n            if (!cur) {\n                val[++tot] = k;\n                cnt[tot]++;\n                fa[tot] = f;\n                ch[f][val[f] < k] = tot;\n                maintain(tot);\n                maintain(f);\n                splay(tot);\n                return;\n            }\n        }\n    }\n    int rank(int k) {\n        int ans = 0, cur = rt;\n        while (1) {\n            if (k < val[cur])\n                cur = ch[cur][0];\n            else {\n                ans += siz[ch[cur][0]];\n                if (k == val[cur]) {\n                    splay(cur);\n                    return ans + 1;\n                }\n                ans += cnt[cur];\n                cur = ch[cur][1];\n            }\n        }\n    }\n    int kth(int k) {\n        int cur = rt;\n        while (1) {\n            if (ch[cur][0] && k <= siz[ch[cur][0]])\n                cur = ch[cur][0];\n            else {\n                k -= cnt[cur] + siz[ch[cur][0]];\n                if (k <= 0) {\n                    splay(cur);\n                    return val[cur];\n                }\n                cur = ch[cur][1];\n            }\n        }\n    }\n    int pre() {\n        int cur = ch[rt][0];\n        if (!cur) return cur;\n        while (ch[cur][1]) cur = ch[cur][1];\n        splay(cur);\n        return cur;\n    }\n    int nxt() {\n        int cur = ch[rt][1];\n        if (!cur) return cur;\n        while (ch[cur][0]) cur = ch[cur][0];\n        splay(cur);\n        return cur;\n    }\n    void del(int k) {\n        rank(k);\n        if (cnt[rt] > 1) {\n            cnt[rt]--;\n            maintain(rt);\n            return;\n        }\n        if (!ch[rt][0] && !ch[rt][1]) {\n            clear(rt);\n            rt = 0;\n            return;\n        }\n        if (!ch[rt][0]) {\n            int cur = rt;\n            rt = ch[cur][1];\n            fa[rt] = 0;\n            clear(cur);\n            return;\n        }\n        if (!ch[rt][1]) {\n            int cur = rt;\n            rt = ch[cur][0];\n            fa[rt] = 0;\n            clear(cur);\n            return;\n        }\n        int cur = rt, x = pre();\n        fa[ch[cur][1]] = x;\n        ch[x][1] = ch[cur][1];\n        clear(cur);\n        maintain(rt);\n        return;\n    }\n}spl;\nint n, m, ans;\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> N[i].l >> N[i].r;\n\tsort(N + 1, N + 1 + n);\n    spl.insert(inf), spl.insert(-inf);\n    for (int i = 1; i <= m; i++) spl.insert(0);\n    for (int i = 1; i <= n; i++) {\n        spl.insert(N[i].l + 1);\n        int x = spl.val[spl.pre()];\n        spl.del(N[i].l + 1);\n        if (x == -inf)continue;\n        else {\n            ans++;\n            spl.del(x);\n            spl.insert(N[i].r);\n        }\n    }\n    cout << n - ans;\n    return 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1641814518,
        "uid": 315252,
        "name": "lsy_41",
        "ccfLevel": 6,
        "title": "P7391 \u300cTOCO Round 1\u300d\u81ea\u9002\u5e94 PVZ \u9898\u89e3"
    },
    {
        "content": "~~\uff08\u672c\u9898\u89e3\u5199\u7684\u65f6\u5019\uff09\u63a5\u8fd1 2k \u63d0\u4ea4\u53ea\u6709 60 \u591a\u4e2a\u901a\u8fc7\uff0c\u53ef\u4ee5\u88ab\u79f0\u4e3a\u5f53\u4e4b\u65e0\u6127\u7684\u6bd2\u7624\u9898\u3002~~    \n\n\u4e3a\u4e86\u4f7f\u5f97\u8fdb\u5165\u5c4b\u5b50\u7684\u50f5\u5c38\u6700\u5c11\uff0c\u90a3\u4e48\u663e\u7136\u662f\u8ba9\u88ab\u6d88\u706d\u7684\u50f5\u5c38\u6700\u591a\uff0c\u5bf9\u4e8e $m=1$ \u7684\u65f6\u5019\u53ef\u4ee5\u53c2\u8003 [P1083](https://www.luogu.com.cn/problem/P1803) \u7684\u505a\u6cd5\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u4e4b\u540e\u7ebf\u6027\u626b\u4e00\u904d\u3002  \n\n\u5bf9\u4e8e $m>1$ \u4e5f\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a\u601d\u8def\uff0c\u7ef4\u62a4 $m$ \u4e2a\u5b8c\u6210\u4efb\u52a1\u7684\u65f6\u95f4 $f_i$\uff0c\u6bcf\u6b21\u4ece\u53ef\u4ee5\u63a5\u8fd9\u4e2a\u4efb\u52a1\uff08\u5373 $f_j \\leqslant l_i$\uff09\u7684\u91cc\u9762\u9009\u53d6\u6d6a\u8d39\uff08\u7a7a\u95f2\u65f6\u95f4\uff09**\u6700\u5c11**\uff08\u5373 $l_i-f_j$ \u6700\u5c0f\uff09\u7684\u4e00\u4e2a\uff0c\u5c06 $f_j$ \u66f4\u65b0\u4e3a $r_i$ \u5373\u53ef\u3002  \n\n\u4f46\u662f\u5982\u679c\u6bcf\u6b21\u90fd\u901a\u8fc7 $O(m)$ \u7684\u626b\u63cf\u6765\u786e\u5b9a\u6700\u5c0f\u503c\u90a3\u4e48\u663e\u7136\u4f1a TLE ~~\u660e\u660e\u662f Time Limit Excellent~~\u3002\u6240\u4ee5\u5fc5\u987b\u8981\u5feb\u901f\u6c42\u51fa\u67d0\u4e2a\u6570\u5728\u5e8f\u5217\u4e2d\u6700\u5c0f\u5927\u4e8e\u7b49\u4e8e\u5176\u7684\u6570\u636e\u7ed3\u6784\u3002  \n\n\u7531\u4e8e\u4e00\u4e2a\u6570\u5148\u67e5\u8be2\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8e\u5b83\uff08\u5047\u5982\u6709 $k$ \u4e2a\uff09\u7136\u540e\u5728\u53bb\u627e\u5e8f\u5217\u4e2d\u6700\u5c0f\u7684\u6709 $k$ \u4e2a\u6570\u5c0f\u4e8e\u5b83\u7684\u6570\uff0c\u5c31\u53ef\u4ee5\u627e\u51fa\u6700\u5c0f\u7684\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u6570\uff0c\u90a3\u4e48\u5728\u63d2\u5165\u548c\u67e5\u8be2\u7684\u65f6\u5019\u7ed9\u6240\u6709\u6570\u4e58 $-1$ \u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u64cd\u4f5c\u627e\u51fa\u6700\u5927\u7684\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u6570\u3002  \n\n\u770b\u5230\u8fd9\u51e0\u4e2a\u64cd\u4f5c\u5c31\u53ef\u4ee5\u60f3\u5230\u5e73\u8861\u6811\uff0c\u7531\u4e8e\u672c\u849f\u84bb\u592a\u83dc\u4e86\u6240\u4ee5\u53ea\u4f1a\u5199\u66ff\u7f6a\u7f8a\u6811\u3002$O(n\\log m+n\\log n)$ \u5f88\u6109\u5feb\u7684\u5c31\u8fc7\u4e86\uff1a~~\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u56e0\u4e3a\u9700\u8981\u8c03\u5e73\u8861\u56e0\u5b50\u624d\u80fd\u5361\u8fc7\u53bb\u63d0\u4ea4\u4e86\u534a\u9875\u5462~~\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#define N 200010\n#define ALPHA 0.85\nstruct node\n{\n    int v,c;\n    node *l,*r;\n    int size,nodes;\n    int empty;\n\tvoid update()\n\t{\n\t\tsize=c+(l?l->size:0)+(r?r->size:0);\n\t\tnodes=(c>0)+(l?l->nodes:0)+(r?r->nodes:0);\n\t\tempty=(c==0)+(l?l->empty:0)+(r?r->empty:0);\n\t}\n}*head;\ntypedef node* sgt;\ninline bool bad(sgt o)\n{\n    return (o->l&&o->l->size > ALPHA*o->size)||\n            (o->r&&o->r->size > ALPHA*o->size)||\n            (o->empty > ALPHA*o->nodes);\n}\nint tmpv[N],tmpc[N];\nsgt build(int l,int r)\n{\n    if(l>r) return NULL;\n    int mid=(l+r)/2;\n    sgt o=(sgt)malloc(sizeof(node));\n    o->l=build(l,mid-1);\n    o->r=build(mid+1,r);\n    o->v=tmpv[mid];\n    o->c=tmpc[mid];\n\to->empty=0;\n    o->update();\n\treturn o;\n}\nint cur;\nvoid splat(sgt &o)\n{\n    if(!o) return;\n    splat(o->l);\n    if(o->c)\n    {\n        tmpv[cur]=o->v;\n        tmpc[cur]=o->c;\n        cur++;\n    }\n    splat(o->r);\n    free(o);\n}\nvoid rebuild(sgt &o)\n{\n    cur=1;\n    splat(o);\n    o=build(1,cur-1);\n}\ninline void check(sgt &o)\n{\n\tif(bad(o)) rebuild(o);\n}\nvoid insert(int v,sgt &o)\n{\n    if(!o)\n    {\n        o=(sgt)malloc(sizeof(node));\n        o->l=o->r=NULL;\n        o->v=v;\n        o->c=1;\n        o->size=1;\n\t\to->nodes=1;\n        o->empty=0;\n        return;\n    }\n    if(o->v==v) o->c++;\n    else if(v<o->v) insert(v,o->l);\n    else insert(v,o->r);\n\to->update();\n    check(o);\n}\nvoid remove(int v,sgt &o)\n{\n\tif(!o)\n\t{\n\t\tputs(\"FUCK\");\n\t\tabort();\n\t}\n\tif(v<o->v) remove(v,o->l);\n\telse if(v>o->v) remove(v,o->r);\n\telse o->c--;\n\to->update();\n\tcheck(o);\n}\nint rank(int v,sgt o)\n{\n\tif(!o) return 0;\n\tif(v<o->v) return rank(v,o->l);\n\telse if(v==o->v) return o->l?o->l->size:0;\n\telse return (o->l?o->l->size:0)+o->c+rank(v,o->r);\n}\nint query(int rk,sgt o)\n{\n\tint s=o->l?o->l->size:0;\n\tif(rk<s) return query(rk,o->l);\n\trk-=s;\n\tif(rk<o->c) return o->v;\n\trk-=o->c;\n\treturn query(rk,o->r);\n}\nusing std::sort;\nstruct seg\n{\n\tint l,r;\n\tbool operator<(seg b) const\n\t{\n\t\treturn r<b.r;\n\t}\n}a[N];\nint n,m;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d%d\",&a[i].l,&a[i].r);\n\tsort(a,a+n);\n\t//f[i]=i\u4e0d\u63a5\u53d7l<i\n\tint ans=n;\n\tsgt head=NULL;\n\tfor(int i=0;i<m;i++) insert(0,head);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\t//\u628af\u585e\u5230\u5e73\u8861\u6811\u91cc\n\t\t//\u9700\u8981\u7684\u5c31\u662f>=a[i].l\u7684\u6700\u5c0f\n\t\tint rk=rank(-a[i].l,head);\n\t\tif(rk!=m)\n\t\t{\n\t\t\tint mn=query(rk,head);\n\t\t\tans--;\n\t\t\tremove(mn,head);\n\t\t\tinsert(-a[i].r,head);\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1632759148,
        "uid": 298051,
        "name": "xkcdjerry",
        "ccfLevel": 7,
        "title": "P7391\u9898\u89e3"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P7391)\n\n\u9898\u76ee\u5927\u6982\u610f\u601d\u662f\uff1a\u6709 $n$ \u4e2a\u5f00\u533a\u95f4 $(l_i, r_i)$\uff0c\u6709 $m$ \u6761\u76f4\u7ebf\uff0c\u73b0\u5728\u5c06\u8fd9 $n$ \u4e2a\u5f00\u533a\u95f4\u8986\u76d6\u5728 $m$ \u6761\u76f4\u7ebf\u4e0a\uff0c\u4f7f\u5f97\u6bcf\u6761\u76f4\u7ebf\u4e0a\u7684\u6bcf\u4e2a\u70b9\u90fd\u4e0d\u88ab\u4e00\u4e2a\u4ee5\u4e0a\u7684\u533a\u95f4\u8986\u76d6\u3002\u95ee\u6700\u5c11\u6709\u591a\u5c11\u4e2a\u5f00\u533a\u95f4\u8986\u76d6\u4e0d\u5230\u76f4\u7ebf\u4e0a\u3002\n\n\u8fd9\u9053\u9898\u663e\u7136\u662f\u8d2a\u5fc3\uff0c\u5177\u4f53\u601d\u8def\u5982\u4e0b\uff1a\n\n\u5148\u5c06\u6240\u6709\u533a\u95f4\u4ee5 $l_i$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$r_i$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n```cpp\nstruct zom {\n\tint l, r;\n\t\n\tbool operator < (const zom & z) const {\n\t\tif (l == z.l) {\n\t\t\treturn r < z.r;\n\t\t}\n\t\t\n\t\treturn l < z.l;\n\t}\n};\n\nsort(_z + 1, _z + _n + 1);\n```\n\n\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u533a\u95f4\uff1a\n\n- \u82e5\u73b0\u5728\u6709\u4e00\u6761\u76f4\u7ebf\u6ca1\u6709\u533a\u95f4\u8986\u76d6\uff0c\u90a3\u4e48\u5c31\u5c06\u533a\u95f4 $i$ \u8986\u76d6\u5728\u8fd9\u6761\u76f4\u7ebf\u4e0a\u3002\n\n- \u5426\u5219\uff0c\u5982\u679c\u4e00\u6761\u76f4\u7ebf\u7684\u6700\u53f3\u8986\u76d6\u70b9\u5728 $l_i$ \u7684\u5de6\u8fb9\uff08\u80af\u5b9a\u662f\u8981\u627e\u6700\u53f3\u8986\u76d6\u70b9\u5728\u6700\u5de6\u8fb9\u7684\u76f4\u7ebf\uff09\uff0c\u90a3\u4e48\u5c31\u5c06\u533a\u95f4 $i$ \u8986\u76d6\u5728\u8fd9\u6761\u76f4\u7ebf\u4e0a\u3002\n\n- \u5426\u5219\u5c31\u80af\u5b9a\u8986\u76d6\u4e0d\u4e0a\u4e86\u3002\u4f46\u8fd8\u6709\u4e00\u79cd\u5c0f\u60c5\u51b5\uff1a\n\n\t- \u5982\u679c\u4e00\u6761\u76f4\u7ebf\u7684\u6700\u53f3\u8986\u76d6\u70b9\u5728 $r_i$ \u7684\u53f3\u8fb9\uff08\u80af\u5b9a\u662f\u8981\u627e\u6700\u53f3\u8986\u76d6\u70b9\u5728\u6700\u53f3\u8fb9\u7684\u76f4\u7ebf\uff09\uff0c\u90a3\u4e48\u5c31\u5c06\u8fd9\u6761\u76f4\u7ebf\u7684\u6700\u53f3\u8986\u76d6\u70b9\u6539\u4e3a $r_i$\uff08\u56e0\u4e3a $l_i$ \u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u8fd9\u6761\u76f4\u7ebf\u539f\u6765\u7684\u6700\u53f3\u8986\u76d6\u70b9\u6240\u5728\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e00\u5b9a\u5728 $l_i$ \u7684\u5de6\u8fb9\u6216\u662f\u4e0e $l_i$ \u76f8\u7b49\uff0c\u4f7f\u5f97\u8fd9\u6761\u76f4\u7ebf\u539f\u6765\u7684\u6700\u53f3\u8986\u76d6\u70b9\u6240\u5728\u533a\u95f4\u80fd\u88ab\u66ff\u6362\u6210\u7b2c $i$ \u4e2a\u533a\u95f4\u3002\u8fd9\u6bb5\u8bdd\u6709\u70b9\u7ed5\u53ef\u4ee5\u591a\u8bfb\u51e0\u904d\uff09\u3002\n    \n\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u590d\u6742\u5ea6\u662f $O(n^2)$\uff0c\u592a\u9ad8\u4e86\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u6765\u5b58\u6bcf\u6761\u76f4\u7ebf\u7684\u6700\u53f3\u8986\u76d6\u70b9\uff0c\u53ef\u4ee5\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n- \u63d2\u5165\u5143\u7d20\n- \u67e5\u627e\u6700\u5c0f\u503c\n- \u5220\u9664\u6700\u5c0f\u503c\n- \u67e5\u627e\u6700\u5927\u503c\n- \u5220\u9664\u6700\u5927\u503c\n\n\u6240\u4ee5\u9898\u89e3\u533a\u91cc\u5c31\u6709\u4e86\u5404\u5f0f\u5404\u6837\u7684\u89e3\u6cd5\uff0c\u6211\u7528\u7684\u662f ```multiset```\uff0c\u5b83\u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u7ea2\u9ed1\u6811\uff0c\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u80fd\u4fdd\u8bc1\u4ee5\u4e0a\u64cd\u4f5c\u90fd\u662f $O(logN)$ \u7684\u590d\u6742\u5ea6\uff0c\u8fd9\u6837\u5c31\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u4e86\u3002\n\n```cpp\nfor (int i = 1; i <= _n; i++) {\n\tif (_m) {\n\t\t_s.insert(_z[i].r);\n\t\t_m--;\n\t}\n\t \n\telse if ((*(_s.begin())) <= _z[i].l) {\n\t\t_s.erase(_s.begin());\n\t\t_s.insert(_z[i].r);\n\t}\n\t\n\telse {\n\t\t_res++;\n\t\t\n\t\tit = _s.end();\n\t\tit--;\n\t\t\n\t\tif ((*it) > _z[i].r) {\n\t\t\t_s.erase(it);\n\t\t\t_s.insert(_z[i].r);\n\t\t}\n\t}\n}\n```\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct zom {\n\tint l, r;\n\t\n\tbool operator < (const zom & z) const {\n\t\tif (l == z.l) {\n\t\t\treturn r < z.r;\n\t\t}\n\t\t\n\t\treturn l < z.l;\n\t}\n}_z[200009];\n\nint _n, _m, _res; \nmultiset<int> _s;\n\nvoid ParseIn () { \n\tcin >> _n >> _m;\n\t\n\tfor (int i = 1; i <= _n; i++) {\n\t\tcin >> _z[i].l >> _z[i].r;\n\t}\n}\n\nvoid Core () {\n\tint tmp = _m;\n\tmultiset<int>::iterator it;\n\t\n\tsort(_z + 1, _z + _n + 1);\n\t\n\tfor (int i = 1; i <= _n; i++) {\n\t\tif (_m) {\n\t\t\t_s.insert(_z[i].r);\n\t\t\t_m--;\n\t\t}\n\t\t \n\t\telse if ((*(_s.begin())) <= _z[i].l) {\n\t\t\t_s.erase(_s.begin());\n\t\t\t_s.insert(_z[i].r);\n\t\t}\n\t\t\n\t\telse {\n\t\t\t_res++;\n\t\t\t\n\t\t\tit = _s.end();\n\t\t\tit--;\n\t\t\t\n\t\t\tif ((*it) > _z[i].r) {\n\t\t\t\t_s.erase(it);\n\t\t\t\t_s.insert(_z[i].r);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid WriteOut () {\n\tcout << _res << endl;\n}\n\nint main () {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\t\n\tParseIn();\n\tCore();\n\tWriteOut();\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1633486645,
        "uid": 299086,
        "name": "Mistybranch",
        "ccfLevel": 5,
        "title": "P7391 \u300cTOCO Round 1\u300d\u81ea\u9002\u5e94 PVZ"
    }
]