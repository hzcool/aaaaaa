[
    {
        "content": "### \u524d\u8a00\uff1a\n\n-  \u9898\u76ee\u7684\u6570\u636e\u4f3c\u4e4e\u88ab\u4eba\u4e3a\u6269\u5145\u5230\u4e86 n,m\u2264350 \u3002\n-  \u4ee5\u524d\u597d\u50cf\u6570\u636e\u5f88\u6c34\uff0c\u5404\u79cd\u66b4\u529b\u90fd\u80fd\u5361\u8fc7\u3002\n-  \u9898\u9762\u662fn,m\u2264100\u662f\u9519\u7684\u3002\n-  \u6ce8\u610f n,m\u2264350 \uff0c\u522b\u88ab\u5751\u5f97RE\u3002\n\n------------\n\n### \u9898\u9762\u7b80\u8ff0\n\n-  n\u00d7m \u7684\u65b9\u9635\uff0c\u5f97\u627e\u4e00\u4e2a\u91d1\u5b57\u5854\u90a3\u6837\u7684\u4e1c\u897f\uff0c\u7b2c\u4e00\u5708\u662f1\uff0c\u7b2c\u4e8c\u5708\u662f2\uff0c...\uff0c\u6709k\u6b21\u673a\u4f1a\u8ba9\u67d0\u4e00\u4e2a\u70b9\u7684\u503c\u63d0\u9ad81\uff0c\u6c42\u80fd\u591f\u5efa\u6210\u7684\u6700\u9ad8\u7684\u91d1\u5b57\u5854\u3002\n-  n,m\u2264350 \uff0c\u63d0\u9ad8\u6b21\u6570 k\u226410\u2078\uff0c\u77e9\u9635\u7684\u6570\u5b57\u90fd\u57280\u523050\u4e4b\u95f4\u3002\n\n------------\n\n### \u601d\u8def\n\n\u5224\u65ad\u4e00\u4e2a\u65b9\u9635\u662f\u5426\u80fd\u591f\u642d\u5efa\u91d1\u5b57\u5854\uff0c\u9700\u8981\uff1a\n-  \u5224\u65ad\u91d1\u5b57\u5854\u8981\u591a\u5c11\u6b21\u63d0\u9ad8\u5730\u9762\u7684\u673a\u4f1a\uff0c\u8fd9\u70b9\uff0c\u4e24\u4e2a\u77e9\u9635\u76f8\u51cf\u5373\u53ef\u3002\n-  \u5224\u65ad\u63d0\u9ad8\u5730\u9762\u662f\u5426\u4e00\u5b9a\u80fd\u5efa\u6210\uff0c\u5373\u5224\u65ad\u7b2c\u4e00\u5c42\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e1\uff0c\u7b2c\u4e8c\u5c42\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e2\uff0c...\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5426\u5219\u673a\u4f1a\u518d\u591a\u4e5f\u65e0\u6cd5\u5efa\u6210\u3002\n\n------------\n\n#### \u4e0b\u9762\u662f\u4e00\u4e9b\u7b97\u6cd5\uff08\u4ee5\u4e0b\u6240\u6709\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u57fa\u4e8em,n\u89c4\u6a21\u76f8\u5dee\u4e0d\u5927\u7684\u5047\u8bbe)\u3002\n\n------------\n\n## 1. $O(n^5)$ \u7b97\u6cd5\n\n- \u5206\u522b\u679a\u4e3e\u6b63\u65b9\u5f62\u7684\u4e24\u4e2a\u9876\u70b9\uff0c\u53ef\u4ee5\u786e\u5b9a\u6574\u4e2a\u6b63\u65b9\u5f62\u3002\n-  $O(n^5)$ \u53ef\u4ee5\u786e\u5b9a\u6b63\u65b9\u5f62\u662f\u5426\u5408\u6cd5\u3002\n\n\n------------\n\n## 2.\u53e6\u4e00\u4e2a $O(n^5)$ \u7b97\u6cd5\n\n-  \u53ef\u4ee5\u679a\u4e3e\u6b63\u65b9\u5f62\u7684\u4e2d\u5fc3\u548c\u534a\u5f84\uff0c $O(n^2)$ \u9a8c\u8bc1\u3002\n-  \u8fd9\u6837\u7684\u65b9\u5f0f\u6709\u4e2a\u6bd4\u8f83\u7279\u522b\u7684\u6027\u8d28\uff1a\u5b83\u7684\u90e8\u5206\u6570\u636e\u53ef\u4ee5\u91cd\u590d\u5229\u7528\u3002\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u4f18\u5316\u3002\n\n------------\n\n## 3. $O(n^4)$ \u7b97\u6cd5\n\n-  \u4e5f\u662f\u57fa\u4e8e\u4e8c\u7684\u6539\u8fdb\uff0c\u6211\u4eec\u4ecd\u7136 $O(n^2)$ \u679a\u4e3e\u4e2d\u5fc3\u3002\n-  \u5728\u679a\u4e3e\u534a\u5f84\u65f6\uff0c\u8bb8\u591a\u6570\u636e\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u5982\u5224\u65ad\u77e9\u9635\u5408\u6cd5\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u5c42\u4e00\u5c42\u5730\u5224\u65ad\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6bd4\u5982\u4e00\u5708\u7684\u6700\u5927\u503c\u4e3a4\uff0c\u80af\u5b9a\u81f3\u5c11\u8fd8\u5f97\u62d3\u5c553\u5c42\uff1a4\uff0c3\uff0c2\uff0c1\uff0c\u6211\u628a\u5b83\u79f0\u4f5c\u201c\u524d\u77bb\u6027\u5224\u65ad\u201d\u3002\n```cpp\n\tint maxv=get_square_max(i,j,d);//\u627e\u5230\u4e86\u6700\u5927\u503c\u3002\n\tmind=max(mind,d+maxv-1);//\u770b\u770b\u7b2c\u51e0\u5c42\u624d\u80fd\u5224\u65ad\u3002\n```\n- \u81f3\u4e8e\u77e9\u9635\u7684\u548c\uff0c\u66f4\u7b80\u5355\u4e86\uff0c\u6bcf\u6b21\u626b\u4e00\u904d\uff0c\u52a0\u4e0a\u53bb\u5373\u53ef\u3002\n- \u56e0\u6b64\uff0c\u5e73\u5747\u6bcf\u6b21\u5224\u65ad\u77e9\u9635\u5408\u6cd5\u6027\u590d\u6742\u5ea6\u53d8\u6210\u4e86 $O(n^2)$ \u3002\n\n\u5176\u5b83\u4e0e2\u65e0\u5f02\u3002\n\n------------\n\n## 4.\u53e6\u4e00\u4e2a $O(n^4)$ \u7b97\u6cd5\n\n\u8fd8\u662f\u57fa\u4e8e2\u7684\u6539\u8fdb\uff0c\u6211\u4eec\u770b\u4e00\u770b\u80fd\u4e0d\u80fd\u901a\u8fc7\u9884\u5904\u7406\uff0c\u4f7f\u5f97\u5224\u65ad\u4e00\u4e2a\u77e9\u9635\u53d8\u5feb\u3002\n#### \u65b9\u9635\u6570\u503c\u7684\u548c\n\n\u8003\u8651[\u5dee\u5206](https://blog.csdn.net/u014683535/article/details/98473767)\u3002\n```\n\u5b83\u662f\u53ef\u4ee5O(n\u00b2)\u9884\u5904\u7406\uff0cO(1)\u6c42\u51fa\u7684\u3002\n\u8bbec[i+1][j+1]\u4e3a1~i\u884c\uff0c1~j\u5217\u7684\u6570\u7684\u548c\u3002\n\u9884\u5904\u7406\u53ef\u4ee5\u5148\u7b97\u884c\u7684\u524d\u7f00\u548c\uff0c\u518d\u7b97\u5217\u7684\u524d\u7f00\u548c\u3002\ni~k\u884c\uff0cj~l\u5217\u7684\u6570\u7684\u548c\u5c31\u662fc[k][l]-c[k][j-1]-c[i-1][l]+c[i-1][j-1]\u3002\n```\n\n#### \u56db\u8fb9\u5f62\u8fb9\u6846\u7684\u6700\u5927\u503c\n\n\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u6c42\u6bcf\u884c\u6bcf\u5217\u7684\u53ef\u4ee5 $O(n^2\\log_2{n})$ \u9884\u5904\u7406  $O(1)$ \u6c42\u51fa\u3002\n\u8003\u8651[ ST \u8868](https://www.cnblogs.com/qq965921539/p/9608980.html)\u3002\n```cpp\n\u8fd9\u91cc\u53ef\u4ee5\u8bbea[i][j][k]\u4e3a\u7b2ci\u884cj~j+2^k-1\u5217\u4e2d\u6570\u7684\u6700\u5927\u503c\uff0c\nb[i][j][k]\u4e3a\u7b2cj\u884ci~i+2^k-1\u5217\u4e2d\u6570\u7684\u6700\u5927\u503c\u3002\n\u90a3\u4e48\u663e\u7136\uff1a\na[i][j][k]=max(a[i][j][k-1],a[i][j+(1<<(k-1))][k-1])\nb[i][j][k]=max(b[i][j][k-1],b[i+(1<<(k-1))][j][k-1])\n\u81f3\u4e8e\u5224\u65ad\uff0c\u7531\u4e8e\u6709\u91cd\u590d\u4e0d\u4f1a\u5f71\u54cdmax\u503c\u6b63\u786e\u6027\uff0c\u76f4\u63a5\u628a\u4e24\u4e2a\u5927\u533a\u95f4\u62fc\u5728\u4e00\u8d77\u3002\n\u7c7b\u4f3c\u8fd9\u6837\uff1a\ninline int get_row_max(int i,int j,int k)\n{\n\tint len=k-j+1;\n\tlen=log2[len];\n\treturn max(a[i][j][len],a[i][k+1-(1<<len)][len]);\n}\n```\n\n\u56e0\u6b64\uff0c $O(n)$ \u53ef\u4ee5\u5355\u7eaf\u5224\u65ad\u4e00\u4e2a\u77e9\u9635\u662f\u5426\u5408\u6cd5\u3002\n\n\u548c 2 \u7684\u505a\u6cd5\u51e0\u4e4e\u4e00\u81f4\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n------------\n\n## 5. $O(n^3)$ \u7b97\u6cd5\n\n-  \u57fa\u4e8e 4 \u548c 5 \u7684\u6539\u8fdb\uff0c\u6211\u4eec\u4ecd\u7136 $O(n^2)$ \u679a\u4e3e\u4e2d\u5fc3\u3002\n-  \u5728\u679a\u4e3e\u534a\u5f84\u65f6\uff0c\u548c4\u4e00\u6837\uff0c\u8bb8\u591a\u6570\u636e\u8fd8\u662f\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u4f46\u8fd9\u6b21\uff0c\u6211\u4eec\u7684\u4f18\u5316\u4f7f\u5f97\u77e9\u9635\u5408\u6cd5\u6027\u7684\u590d\u6742\u5ea6\u964d\u5230\u4e86 $O(1)$ \u3002\n-  \u4f30\u7b97\u4e86\u4e00\u4e0b\uff0c 5\u00d7350 \u00b3 =214375000 \u3002\u786e\u5b9e\u4f1a TLE\uff0c\u4f46\u52a0 O2 \u4f18\u5316\u5c31\u6ca1\u4e8b\u4e86\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u9898\u9762\u7684 n , m \u2264 100 \u5b83\u662f\u4e00\u4e2a\u5b8c\u5168\u53ef\u63a5\u53d7\u7684\u7b97\u6cd5\u3002 \n## \u7a0b\u5e8f\n\n```cpp\n#include<fstream>\nusing namespace std;\nconst int MAXN=350,MAXLOG=10;\nint T,n,m,v[MAXN][MAXN],a[MAXN][MAXN][MAXLOG];\nint b[MAXN][MAXN][MAXLOG],log2[MAXN];\nlong long maxcost,c[MAXN][MAXN];\ninline void input()\n{\n\tscanf(\"%d%d%lld\",&n,&m,&maxcost);\n\tfor(int i=0;i<n;i++)\n\tfor(int j=0;j<m;j++)\n\t{\n\t\tscanf(\"%d\",&v[i][j]);\n\t\ta[i][j][0]=b[i][j][0]=c[i+1][j+1]=v[i][j];\n\t}\n}\ninline void prepare_sum()\n{\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\tc[i][j]+=c[i-1][j];\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\tc[i][j]+=c[i][j-1];\n}\ninline void prepare_max()\n{ \n\tfor(int k=1;k<=log2[n];k++)\n\tfor(int i=0;i<n;i++)\n\tfor(int j=0;j<m;j++)\n\t{\n\t\t//The second mistake\n\t\t//if(i+(1<<(k-1)|1)>=n)\n\t\tif(i+(1<<(k-1))>=n)\n\t\tb[i][j][k]=b[i-1][j][k];\n\t\telse\n\t\tb[i][j][k]=\n\t\t//The first mistake\n\t\t//max(b[i][j][k-1],b[i+(1<<(k-1)|1)][j][k-1])\n\t\tmax(b[i][j][k-1],b[i+(1<<(k-1))][j][k-1]);\n\t} \n\tfor(int k=1;k<=log2[m];k++)\n\tfor(int i=0;i<n;i++)\n\tfor(int j=0;j<m;j++)\n\t{\n\t\t//The second mistake\n\t\t//if(j+(1<<(k-1)|1)>=n)\n\t\t//The third mistake\n\t\t//if(j+(1<<(k-1))>=n)\n\t\tif(j+(1<<(k-1))>=m)\n\t\ta[i][j][k]=a[i][j-1][k];\n\t\telse\n\t\ta[i][j][k]=\n\t\t//The first mistake\n\t\t//max(a[i][j][k-1],a[i][j+(1<<(k-1)|1)][k-1]);\n\t\tmax(a[i][j][k-1],a[i][j+(1<<(k-1))][k-1]);\n\t}\n}\ninline long long get_sum(int i,int k,int j,int l)\n{\n\treturn c[k+1][l+1]-c[k+1][j]-c[i][l+1]+c[i][j];\n}\ninline int get_row_max(int i,int j,int k)\n{\n\tint len=k-j+1;\n\tlen=log2[len];\n\treturn max(a[i][j][len],a[i][k+1-(1<<len)][len]);\n}\ninline int get_column_max(int j,int k,int i)\n{\n\tint len=k-j+1;\n\tlen=log2[len];\n\treturn max(b[j][i][len],b[k+1-(1<<len)][i][len]);\n}\ninline int get_square_max(int x,int y,int d)\n{\n\treturn max(max(get_row_max(x-d,y-d,y+d),\n\tget_row_max(x+d,y-d,y+d)),\n\tmax(get_column_max(x-d,x+d,y-d),\n\tget_column_max(x-d,x+d,y+d)));\n}\ninline bool ok(int x,int y,int d)\n{\n\treturn x-d>=0&&x+d<n&&y-d>=0&&y+d<m; \n}\ninline void just_do_it()\n{\n\tint ans=0;\n\tfor(int i=0;i<n;i++)\n\tfor(int j=0;j<m;j++)\n\t{\n\t\tlong long alsum=0;\n\t\tint mind=0;//\u6700\u5c0f\u7684d \n\t\tfor(int d=0;ok(i,j,d);d++)\n\t\t{\n\t\t\talsum+=(d<<1|1)*(d<<1|1);\n\t\t\t//\u9700\u8981\u68c0\u67e5\uff1a i\u00b1d (j-d,j+d)\n\t\t\t//j\u00b1d (i-d,i+d) \n\t\t\tint maxv=get_square_max(i,j,d);//\u4e8b\u5b9e\u4e0a\u662f\u65b9\u6846 \n\t\t\t//\u7136\u540e\u8fd9\u4e2a\u503c\u8bf4\u660e\u4e86\u4ec0\u4e48\uff1f\n\t\t\t//maxv(d)\uff0cmaxv-1(d+1)\uff0c...\uff0c1(d+maxv-1)\n\t\t\t//\u8bf4\u660e\u2026\u2026\u8fd8\u6709maxv-1\u6b69\u624d\u884c\n//\t\t\tprintf(\"(%d %d)*%d %d\\n\",i+1,j+1,d,maxv);\n\t\t\tlong long sm=get_sum(i-d,i+d,j-d,j+d);\n//\t\t\tprintf(\"(%d %d)*%d %lld %lld\\n\",i+1,j+1,d,\n//\t\t\talsum,sm);\n\t\t\tmind=max(mind,d+maxv-1);\n\t\t\tif(mind<=d&&alsum-sm<=maxcost)\n\t\t\tans=max(ans,d+1);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\ninline void solve()\n{\n\tinput();\n\tprepare_sum();\n\tprepare_max();\n/*\tfor(int i=0;i<=n;i++)\n\t{\n\t\tfor(int j=0;j<=m;j++)\n\t\tprintf(\"%3lld \",c[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\tprintf(\"%d\\n\",get_sum(1,2,1,3));\n\tprintf(\"%d\\n\",get_row_max(1,1,4));*/\n\tjust_do_it();\n}\nint main()\n{\n\tscanf(\"%d\",&T);\n\tfor(int i=2;i<=MAXN;i++)\n\tlog2[i]=log2[i-1]+!(i&(i-1));\n\twhile(T--)\n\tsolve(); \n\treturn 0;\n}\n```\n\n------------\n",
        "postTime": 1598766285,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "P6463"
    }
]