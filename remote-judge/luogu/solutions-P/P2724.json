[
    {
        "content": "\u6211\u53d1\u4e00\u4e2a0ms\u7684\u4ee3\u7801\u3002\n\n\u6211\u7684\u601d\u60f3\u662f\u679a\u4e3e\u957f\u5ea6\uff0c\u628a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u538b\u4f4d\uff0c\u7136\u540e\u7d2f\u52a0\n\n\u8be6\u89c1\u6ce8\u91ca\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=4096;\nstruct kk{\n    int x,y,z;\n}b[500000];\nint A,B,n,m,s[200003],v[N],k,c[13],i,j,t,cnt,to,k1;\nchar ch;\nint cmp(kk x,kk y){\n    return x.x>y.x || x.x==y.x && (x.z<y.z || x.z==y.z && x.y<y.y);\n}\nvoid chan(int x,int y){//\u628a\u5341\u8fdb\u5236x\u8f6c\u6210\u4e8c\u8fdb\u5236\uff0cy\u8868\u793a\u4e8c\u8fdb\u5236\u4f4d\u6570\n    int tot=0;\n    while (x){\n        c[tot++]=x%2;\n        x/=2;\n    }\n    for (int i=0;i<=y-tot;i++) putchar(48);//\u4f4d\u6570\u4e0d\u591f\u75280\u8865\n    for (int i=tot-1;i>=0;i--) putchar(c[i]|48);\n}\nint main(){\n    cin>>A>>B>>n;\n    while ((ch=getchar())!=EOF)\n        if (ch==48 || ch==49) s[m++]=ch^48;//\u8bfb\u5165\uff0c\u628a'0'\u548c'1'\u53d8\u62100\u548c1\uff0c\u4f4d\u8fd0\u7b97\u66f4\u5feb\n    B=min(B,m);//\u6700\u957f\u4e5f\u4e0d\u80fd\u8d85\u8fc7\u603b\u957f\u5ea6\n    for (i=0;i<B;i++){\n        k=k<<1|s[i];//k\u8bb0\u5f550..i-1\u4f4d\u7684\u5e8f\u5217\uff0ck<<1|1\u76f8\u5f53\u4e8ek*2+1\uff0c\u4f46\u8fd9\u6837\u66f4\u5feb\n        if (i>=A-1){\n            t=(1<<i+1)-1;\n            memset(v,0,sizeof(v));\n            v[k]++;\n            k1=k;\n            for (j=i+1;j<m;j++){\n                k1=(k1<<1|s[j])&t;//\u8fd9\u91cc\u662f\u53d6k\u7684\u4e8c\u8fdb\u5236\u540ei+1\u4f4d %(2^(i+1))\u76f8\u5f53\u4e8e&(2^(i+1)-1)\uff0c\u5e38\u7528\u6280\u5de7\uff0c\u4e0d\u61c2\u7684\u8bdd\u4e0b\u9762\u6709\u89e3\u91ca\n                v[k1]++;//\u8bb0\u5f55\n            }\n            for (j=0;j<=t;j++)\n                if (v[j]) b[cnt].x=v[j],b[cnt].y=j,b[cnt++].z=i;//x\u8bb0\u5f55\u9891\u7387\uff0cy\u8bb0\u5f55\u503c\uff0cz\u8bb0\u5f55\u957f\u5ea6\n        }\n    }\n    sort(b,b+cnt,cmp);\n    j=0;\n    for (i=0;i<n && j<cnt;i++){\n        printf(\"%d\\n\",b[j].x);\n        to=1;\n        while (b[j+1].x==b[j].x){\n            chan(b[j].y,b[j].z);\n            j++;\n            if (to==6) putchar('\\n'),to=0;//\u6ca16\u4e2a\u63621\u884c\n            else putchar(' ');\n            to++;\n        }\n        chan(b[j].y,b[j].z);\n        j++;\n        if (to) putchar('\\n');\n    }\n}\n```\n\u5176\u5b9e\u4ee3\u7801\u4e2d\u8fd8\u6709\u4e00\u4e9b\u5730\u65b9\u53ef\u4ee5\u4f18\u5316\uff0c\u4f46\u662f\u6211\u5df2\u7ecf0ms\u4e86\uff0c\u4e5f\u6ca1\u7ee7\u7eed\u4f18\u5316\n\n\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u5f53k=2^t\u65f6x%k=x&(k-1)\n\nx%k\u76f8\u5f53\u4e8e\u53d6x\u4e8c\u8fdb\u5236\u672bt\u4f4d\n\nk-1\u7684\u4e8c\u8fdb\u5236\u5c31\u662ft\u4e2a1\n\nx\u672bt\u4f4d0\u8fd8\u662f0\uff0c1\u8fd8\u662f1\uff0c\u4e0d\u53d8\n\nx\u524d\u9762\u7684\u51e0\u4f4d\u4e0d\u7ba1\u662f0\u8fd8\u662f1\uff0c\u56e0\u4e3ak\u7684\u5bf9\u5e94\u4f4d\u662f0\uff0c\u6240\u4ee5\u4e5f\u53d8\u62100\n",
        "postTime": 1516514837,
        "uid": 22469,
        "name": "Mingoal",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    },
    {
        "content": "\u9898\u89e3by\uff1aredbag\n\n\u767e\u5ea6\u4e86\u5f88\u591a\u9898\u89e3\uff0c\u90fd\u6709\u5199\u5230\u8f93\u51fa\u5f88\u5751\u3002\n\n\u7136\u800c\u6211\u60f3\u8bf4\u7684\u662f\n\n###**\u8f93\u51fa\u592a\u5751\u4e86\u3002**\n\nusaco\u5bf9\u683c\u5f0f\u8981\u6c42\u592a\u4e25\u683c\u4e86\u3002\n\n\n0. \u8f93\u51fa\u5b8c\u9891\u7387\u8981\u6362\u884c\u3002\n\n0. \u8f93\u51fa6\u4e2a\u5e8f\u5217\u8981\u6362\u884c\u3002\n\n0. \u8f93\u51fa\u5b8c\u5e8f\u5217\u8981\u6362\u884c\u3002\n\n0. \u5982\u679c\u8be5\u9891\u7387\u7684\u5e8f\u5217\u521a\u597d\u662f6\u4e2a\u7684\u8bdd\u53ea\u8981\u6362\u4e00\u6b21\u884c\u3002\n\n0. \u6bcf\u884c\u7b2c\u4e00\u4e2a\u5e8f\u5217\u4e4b\u524d\u4e0d\u80fd\u6709\u7a7a\u683c\u3002\n\n0. \u6bcf\u884c\u6700\u540e\u4e00\u4e2a\u5e8f\u5217\u4e4b\u540e\u4e0d\u80fd\u6709\u7a7a\u683c\u3002\n\n\n\u5173\u4e8e\u6392\u5e8f\n\n\n0. \u9891\u7387\u9ad8\u7684\u5728\u524d\u3002\n\n0. \u9891\u7387\u4e00\u6837\u65f6\uff0c\u4f4d\u6570\u5c11\u7684\u5728\u524d\u3002\n\n0. \u4f4d\u6570\u4e5f\u4e00\u6837\u65f6\uff0c\u5b57\u5178\u5e8f\u5c0f\u7684\u5728\u524d\u3002\n\n\n\u5b58\u7684\u8bdd\u7528map\u6765\u5b58\u6bcf\u4e2a\u5e8f\u5217\u5bf9\u5e94\u7684\u7f16\u53f7\u3002\n\nx[i/\\*i\u4e3a\u6807\u53f7\\*/].s\u5b58\u8fd9\u4e2a\u5e8f\u5217\uff0cx[i].a\u5b58\u9891\u7387\u3002\n\n\u7136\u540e\u624d\u80fd\u4e0d\u6109\u5feb\u7684AC\u3002\n\n```cpp\n\n/*\nID: ylx14271\nPROG: contact\nLANG: C++     \n*/\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm>\n#define LL unsigned long long\nusing namespace std;\nmap<string,int> s;\nint a,b,n,i,j,k,len,ls,xx;\nchar ch;\nchar c[5000000];\nstruct haha\n{\n    string s;\n    int a;\n}x[100100];\nint cmp(haha aa,haha bb)\n{\n    if (aa.a>bb.a) return 1;//\u9891\u7387\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n    if (aa.a==bb.a)//\u9891\u7387\u76f8\u7b49 \n    {\n        if (aa.s.size()<bb.s.size())return 1;//\u957f\u5ea6\u77ed\u7684\u5728\u524d \n        if (aa.s.size()==bb.s.size()&&aa.s<bb.s)return 1;//\u5b57\u5178\u5e8f\u5c0f\u7684\u5728\u524d \n        return 0; \n    } \n    return 0;\n} \nint main()\n{\n    freopen(\"contact.in\",\"r\",stdin);\n    freopen(\"contact.out\",\"w\",stdout);\n    scanf(\"%d %d %d\\n\",&a,&b,&n);\n    while ((ch=getchar())!=EOF)//\u8bfb\u5165 \n    {\n        if (ch=='1'||ch=='0') \n        {\n            len++;//len\uff1a\u7edf\u8ba1\u4f4d\u6570\u7684 \n            c[len]=ch;//\u5b58\u8d77\u6765\n            //len\u4f5c\u4e3a\u67d0\u4e2a\u4e32\u7684\u7ed3\u5c3e\uff0c\u679a\u4e3e\u5f00\u5934\n            string ss=\"\";\n            int B=max(len+1-b,1);//\u4e00\u5b9a\u8981\u6bd41\u5927  \n            for (i=len;i>=B;i--)\n            {\n                ss=c[i]+ss;//\u8981\u52a0\u5728\u524d\u9762\uff0c\u6211\u5c31\u4e0d\u7528substr \n                if (len-i+1>=a)//\u957f\u5ea6>=a \n                    {\n                        if (s[ss]==0)//\u4ece\u672a\u51fa\u73b0\n                        {\n                            ls++; \n                            s[ss]=ls;//\u6807\u8bb0 \n                            x[s[ss]].s=ss;//\u50a8\u5b58 \n                        }\n                        x[s[ss]].a++;//\u7edf\u8ba1 \n                    } \n            }\n        }\n    }//\u5c3c\u739b\u8981\u600e\u4e48\u8f93\u51fa\u554a (\u256f\u25bd\u2570),\u597d\u5751\n    sort(x+1,x+ls+1,cmp);//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n    for (i=1;i<=ls;i++)\n    {//N\u4e2a\u9891\u7387\u6700\u9ad8\u7684\u5e8f\u5217\u8981\u5168\u90e8\u8f93\u51fa\u5b8c\u624d\u80fd\u9000\u51fa \n        if (n==0&&x[i].a!=x[i-1].a) break;\n        if (x[i].a==x[i-1].a)//\u548c\u4e0a\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e00\u6837\n        {\n            if (xx%6==0) cout<<x[i].s;//\u6bcf\u4e00\u884c\u7684\u5f00\u5934\u4e0d\u8981\u52a0\u7a7a\u683c \n            else cout<<\" \"<<x[i].s;//\u5426\u5219\u5c31\u8981\u52a0\u7a7a\u683c \n            xx++;\n            if (xx%6==0) printf(\"\\n\");//6\u4e2a\u4e00\u6362\u884c \n        }\n        else\n        {\n            n--;//\u53c8\u8f93\u51fa\u4e86\u4e00\u4e2a\u51fa\u73b0\u9891\u7387 \n            if (i!=1&&xx%6!=0) printf(\"\\n\");\n//\u51fa\u73b0\u4e4b\u524d\u90a3\u4e2a\u9891\u7387\u7684\u4e32\uff0c\u5982\u679c\u662f6\u7684\u500d\u6570\uff0c\u7ed3\u5c3e\u5c31\u6362\u884c\u4e86\uff0c\u5728\u6b64\u5c31\u4e0d\u7528\u518d\u6362\u884c\u4e86\u3002 \n            printf(\"%d\\n\",x[i].a);//\u8f93\u51fa\u5b8c\u9891\u7387\u4e4b\u540e\u6362\u884c \n            cout<<x[i].s;//\u518d\u8f93\u51fa\u4e32 \n            xx=1;//\u91cd\u65b0\u7edf\u8ba1 \n        }\n    } \n    if (xx%6!=0) printf(\"\\n\");//\u5982\u679c\u6700\u540e\u4e00\u4e2a\u6570\u67096\u4e2a\u7684\u8bdd\uff0c \n    return 0;\n}```",
        "postTime": 1470117717,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    },
    {
        "content": "# \u7279\u5751\u9898\n## \u9898\u610f\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u4f1a\u6709\u6362\u884c\uff09\uff0c\u6c42\u51fa\u5728\u957f\u5ea6A~B\u768401\u5b57\u7b26\u4e32\u51fa\u73b0\u6700\u591a\u7684N\u79cd\uff08\u51fa\u73b0\u6b21\u6570\u4e00\u6837\u591a\u7684\u7b97\u4e00\u79cd\uff09\uff0c\u8f93\u51fa\u5b83\u7684\u6b21\u6570\u4ee5\u53ca\u5206\u522b\u662f\u54ea\u4e9b\u5b57\u7b26\u4e32\uff0c\u51fa\u73b0\u6b21\u6570\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff08\u4e5f\u5c31\u662f\u4e8c\u8fdb\u5236\u5316\u4e3a\u6574\u6570\u7684\u5927\u5c0f\uff09\u4e3a\u7b2c\u4e09\u5173\u952e\u5b57\u3002\n## \u505a\u6cd5\n\u7b2c\u4e00\u773c\u770b\u65f6\u89c9\u5f97\u633a\u6c34\uff0c\u611f\u89c9\u53ea\u6709\u666e\u53ca+\u5de6\u53f3\u7684\u96be\u5ea6\uff0c\u5c31\u662f\u666e\u901a\u7684\u66b4\u529b\u679a\u4e3e\uff0c\u4f46\u662f\u7528DFS\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u8981\u7528\u4e00\u4e9b\u6280\u5de7\uff0c\u4e5f\u5c31\u662f\u4f4d\u8fd0\u7b97\u7684\u6280\u5de7\uff0c\u628a\u4e8c\u8fdb\u5236\u5f3a\u538b\u6210\u5341\u8fdb\u5236\u6570\uff0c\u5c31\u4e0d\u7528\u4e00\u4f4d\u4e00\u4f4d\u7684\u6bd4\u8f83\u4e86\uff0c\u518d\u7528\u7ed3\u6784\u4f53sort\u6392\u5e8f\uff0c\u5728\u8f93\u51fa\u5c31\u884c\u3002\n## \u5751\u70b9\n1.\u679a\u4e3e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5173\u952e\uff0c\u5982\u679c\u4f60\u4e0d\u4fe1\uff0c\u53ef\u4ee5\u7528\u66b4\u529b\u679a\u4e3e\u5c1d\u8bd5\uff08\u7b2c\u4e94\u4e2a\u70b9\u548c\u7b2c\u4e03\u4e2a\u70b9\u4f1a\u8ba9\u4f60\u6000\u7591\u4eba\u751f\uff09\uff1b\n\n2.\u8f93\u5165\u65f6\u7684\u6362\u884c\uff1b\n\n3.\u8f93\u51fa\u662f\u7684\u6bcf\u516d\u4e2a\u4e00\u884c\u4ee5\u53ca\u672b\u5c3e\u4e0d\u80fd\u6709\u7a7a\u683c\uff08\u516d\u4e2a\u4e00\u884c\u65f6\u8981\u6ce8\u610f\uff1a\u5f53\u63a5\u4e0b\u6765\u6ca1\u6709\u7b54\u6848\u65f6\uff0c\u4e0d\u80fd\u6362\u884c\uff08\u672c\u4eba\u5361\u8fd9\u591a\u65f6\uff09\uff09\uff1b\n##  \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint A,B,N;\nchar s[200010];\nint ans=0;//\u8bb0\u5f55\u51fa\u73b0\u8fc7\u7684\u4e8c\u8fdb\u5236\u6570\u7684\u4e2a\u6570\uff08\u56e0\u4e3a\u8981\u6392\u9664\u672a\u51fa\u73b0\u7684\uff09 \nint n;\nstruct t \n{\n    int len, value, cnt;\n}pinlu[20010];//len\u662f\u4e8c\u8fdb\u5236\u6570\u7684\u957f\u5ea6\uff0cvalue\u662f\u4e8c\u8fdb\u5236\u5316\u5341\u8fdb\u5236\u7684\u7ed3\u679c\uff0ccnt\u662f\u51fa\u73b0\u6b21\u6570 \n\nbool cmp(t x,t y)\n{\n\tif(x.cnt==y.cnt) \n\t{\n\t\tif(x.len==y.len) return x.value < y.value;\n\t\treturn x.len < y.len;\n\t}\n\treturn x.cnt > y.cnt;\n}\n\nvoid print(int l, int v)\n{\n\tfor (int i = l-1; i >= 0; --i)\n\t\tputchar('0'+ ((v>>i)&1));//\u5c06\u5341\u8fdb\u5236\u5316\u4e3a\u4e8c\u8fdb\u5236\u540e\u8f93\u51fa \n}\nint main() \n{\n    cin>>A>>B>>N;\n    while (true)\n    {\n    \tchar ch = getchar();\n    \tif (ch == EOF) break;\n    \tif (ch == '0' || ch == '1')\n    \t\ts[++n] = ch;\n\t}\n\tint ans=0;\n\tfor(int m=A;m<=B;++m)\n\t{\n\t\tint cnt[1<<12]={};\n\t\tint sum=0;\n\t\tfor(int i=1;i<=m;++i)\n\t\t   sum*=2,sum+=s[i]-'0';//\u4e8c\u8fdb\u5236\u5341\u8fdb\u5236 \n\t\tfor(int i=m;i<=n;++i)\n\t\t{\n\t\t\tcnt[sum]++;\n\t\t\tif(s[i-m+1] == '1') sum-=(1<<(m-1));\n\t\t\tsum*=2;\n\t\t\tsum+=s[i+1]-'0';//\u6280\u5de7\u8ba1\u7b97 \n\t\t} \n\t\tfor(int i=0;i<(1<<m);++i)\n\t\t  if(cnt[i]) pinlu[++ans].len=m,pinlu[ans].cnt=cnt[i],pinlu[ans].value=i;\n\t}\n\tsort(pinlu+1,pinlu+ans+1,cmp);//\u6392\u5e8f \n\tint ss=0;//ss\u8bb0\u5f55\u79cd\u7c7b\u6570 \n\tint now=0;//now\u8bb0\u5f55\u5f53\u524d\u8f6e\u5230\u7684\u4e8c\u8fdb\u5236\u6570 \n\twhile(ss<N&&now<ans)\n\t{\n\t\t++ss;\n\t\t++now;\n\t    if(ss!=1) cout<<endl;//\u5728\u7b2c\u4e00\u6b21\u7684\u8f93\u51fa\u540e\u6362\u884c \n\t\tcout<<pinlu[now].cnt<<endl;//\u8f93\u51fa\u79cd\u7c7b\u6570 \n\t\tprint(pinlu[now].len,pinlu[now].value);\n\t\tint lh=1;//\u540e\u9762\u7684\u6362\u884c\u8bb0\u5f55 \n\t\tfor(int i=now+1;i<=ans;++i)\n\t\t{\n\t\t   if(pinlu[i].cnt==pinlu[now].cnt)//\u5224\u65ad\u51fa\u73b0\u6b21\u6570\u662f\u5426\u76f8\u7b49 \n\t\t    {\n\t\t    \tif(lh%6!=0) cout<<\" \"; \n\t\t    \tprint(pinlu[i].len, pinlu[i].value);\n\t\t\t\t++now;\n\t\t\t\t++lh; \n\t\t\t\tif(lh%6==0&&pinlu[i+1].cnt==pinlu[now].cnt) cout<<endl;//\u6bcf\u516d\u4e2a\u6362\u884c\uff0c\u5224\u65ad\u662f\u5426\u6709\u201c\u7b2c\u4e03\u8005\u201d \n\t\t    }\n            else break;//\u5982\u679c\u6ca1\u6709\u627e\u5230\u5c31\u8df3\u51fa \n\t    }\n    }\t\n    cout<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1582457731,
        "uid": 196538,
        "name": "LikC1606",
        "ccfLevel": 7,
        "title": "P2724 \u8054\u7cfb Contact"
    },
    {
        "content": "[$$\\color{blue}\\texttt{\u94fe\u63a5:\u849f\u84bb\u7684Blog}$$](https://blog.csdn.net/SSL_ZYC/article/details/89055398)\n\n![](https://i.loli.net/2019/04/06/5ca83f453ecb8.png)\n\u7531\u4e8e$A,B\\leq12$\uff0c\u6240\u4ee5\u663e\u7136\u628a01\u4e32\u72b6\u538b\u3002\n\n\u72b6\u538b\u4e4b\u540e\u7528$cnt[S]$\u8868\u793a\u538b\u7f29\u540e\u4e3a$S$\u7684\u72b6\u6001\u4e2a\u6570\u3002\n\n\u4f46\u662f\u8fd9\u6837\u5ffd\u7565\u4e86\u524d\u5bfc\u96f6\u7684\u60c5\u51b5\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u80fd\u627e\u5230\u8fd9\u6837\u7684\u4e24\u4e2a\u5b50\u4e32\n\n```\n00101\n101\n```\n\n\n\u6211\u4eec\u90fd\u4f1a\u538b\u7f29\u62105\u3002\u4f46\u662f\u8fd9\u4e24\u4e2a\u4e32\u662f\u4e0d\u540c\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5728$cnt$\u6570\u7ec4\u4e0a\u518d\u52a0\u4e0a\u4e00\u7ef4\uff0c\u8bbe$cnt[S][i]$\u8868\u793a\u72b6\u6001\u4e3a$S$\uff0c\u6709$i$\u4e2a\u524d\u5bfc\u96f6\u7684\u5b50\u4e32\u4e2a\u6570\u3002\uff08\u5176\u5b9e\u4e5f\u53ef\u4ee5\u8bbe01\u4e32\u4f4d\u6570\u4e3a$i$\u4f4d\uff0c\u4f46\u662f\u6572\u5b8c\u4e86\u5c31\u61d2\u5f97\u6539\u4e86XD\uff09\n\n\u90a3\u4e48\u8003\u8651\u5982\u4f55\u679a\u4e3e\u51fa\u957f\u5ea6\u5728$l\\sim r$\u7684\u6240\u6709\u5b50\u4e32\u3002\n\n\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u7b2c$i\\sim j$\u4f4d\u538b\u7f29\u540e\u7684\u72b6\u6001\uff0c\u7b2c$j+1$\u4f4d\u662f$x$\uff0c\u9700\u8981\u6211\u4eec\u63a8\u51fa$i\\sim j+1$\u4f4d\u538b\u7f29\u540e\u7684\u72b6\u6001\uff0c\u663e\u7136`\u5c31\u662f\u628ai\u223cj\u4f4d\u7684\u72b6\u6001\u5de6\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0ax`\u3002\n\n\u6240\u4ee5\u5f53\u6211\u4eec\u679a\u4e3e\u5230\u539f\u4e32\u7b2c$i$\u4f4d\u5f00\u59cb\u7684\u5b50\u4e32\u65f6\uff0c\u8bbe$num[j]$\u8868\u793a\u957f\u5ea6\u4e3a$j$\u7684\u5b50\u4e32\u538b\u7f29\u540e\u7684\u72b6\u6001\uff08\u5373$i\\sim j$\u7ef4\u538b\u7f29\u540e\u7684\u72b6\u6001\uff09\u3002\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u8fd9\u6837\u63a8\u51fa\n\n\n```cpp\nfor (int j=min(i,r);j>=1;j--)\n\tnum[j]=(num[j-1]<<1)+x;\n```\n\n\u7136\u540e\u66f4\u65b0$cnt$\n\n\n```cpp\nfor (int i=l;i<=min(j,r);i++)\n\tcnt[num[i]][count(i,num[i])]++;\n```\n\u5176\u4e2d$count$\u7528\u6765\u8ba1\u7b97\u6709\u591a\u5c11\u4f4d\u524d\u5bfc\u96f6\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u9700\u8981\u7ed9$cnt$\u6570\u7ec4\u6309\u503c\u6392\u5e8f\u4e86\u3002\n\n\u663e\u7136\u662f\u4e0d\u53ef\u80fd\u7528$sort$\u7684\u3002\u56e0\u4e3a\u4e00\u4e2a\u503c\u53ef\u80fd\u4f1a\u5bf9\u5e94\u591a\u4e2a\u72b6\u6001\u3002\n\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7528\u961f\u5217\u3002\n\n\u8bbe$q[i]$\u8868\u793a\u51fa\u73b0\u6b21\u6570\u4e3a$i$\u7684\u5b50\u4e32\u96c6\u5408\u3002$q[i].first$\u8868\u793a\u8be5\u5b50\u4e32\u72b6\u538b\u540e\u7684\u72b6\u6001\uff0c$q[i].second$\u8868\u793a\u8be5\u5b50\u4e32\u7684\u957f\u5ea6\u3002\n\n\u7136\u540e\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u5148\u679a\u4e3e\u5b50\u4e32\u957f\u5ea6\uff0c\u7136\u540e\u6309\u5b57\u5178\u5e8f\u679a\u4e3e\u5b50\u4e32\u7684\u72b6\u6001\u3002\u5e76\u52a0\u5165\u961f\u5217\u3002\n\n```cpp\nfor (int j=l;j<=r;j++)\n\tfor (int i=0;i<(1<<j);i++)\n\t\tq[cnt[i][count(j,i)]].push(make_pair(i,j));\n```\n\u7136\u540e\u5c31\u662f\u8f93\u51fa\u7684\u4e8b\u60c5\u4e86\u3002\n\n\u6839\u636e[$redbag$\u5927\u7237\u7684\u9898\u89e3](https://www.luogu.org/blog/ylx/solution-p2724)\uff0c\u6709\u4ee5\u4e0b\u51e0\u70b9\u8f93\u51fa\u8981\u6c42\uff1a\n\n 1.  \u8f93\u51fa\u5b8c\u9891\u7387\u8981\u6362\u884c\u3002\n 2. \u8f93\u51fa6\u4e2a\u5e8f\u5217\u8981\u6362\u884c\u3002\n 3. \u8f93\u51fa\u5b8c\u5e8f\u5217\u8981\u6362\u884c\u3002\n 4. \u5982\u679c\u8be5\u9891\u7387\u7684\u5e8f\u5217\u521a\u597d\u662f6\u4e2a\u7684\u8bdd\u53ea\u8981\u6362\u4e00\u6b21\u884c\u3002\n 5. \u6bcf\u884c\u7b2c\u4e00\u4e2a\u5e8f\u5217\u4e4b\u524d\u4e0d\u80fd\u6709\u7a7a\u683c\u3002\n 6. \u6bcf\u884c\u6700\u540e\u4e00\u4e2a\u5e8f\u5217\u4e4b\u540e\u4e0d\u80fd\u6709\u7a7a\u683c\u3002\n\n\u7ec6\u8282\u5904\u7406\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u5b50\u4e32\u51fa\u73b0\u6b21\u6570$i$\uff0c\u5982\u679c\u5b58\u5728\u51fa\u73b0$i$\u6b21\u7684\u5b50\u4e32\uff0c\u4e00\u4e00\u8f93\u51fa\u5c31\u597d\u4e86\u3002\u6211\u4eec\u5728\u52a0\u5165\u961f\u5217\u7684\u65f6\u5019\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u5b50\u4e32\u957f\u5ea6\u548c\u5b57\u5178\u5e8f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u5728\u610f\u8f93\u51fa\u987a\u5e8f\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f$O(|S|\\times r+max\\{cnt\\})$\u3002\n\n```cpp\n/*\nID:ssl_zyc2\nTASK:contact\nLANG:C++\n*/\n#include <cstdio>\n#include <queue>\n#include <iostream>\n#define mp make_pair\nusing namespace std;\n\nconst int N=200010;\nint l,r,n,x,maxn,num[15],cnt[1<<12][15];\n\nint count(int s,int x)\n{\n\tif (!x) return s-1;\n\tint sum=0;\n\twhile (x)\n\t{\n\t\tx>>=1;\n\t\tsum++;\n\t}\n\treturn s-sum; \n}\n\nvoid print(int x)\n{\n\tif (x>1) print(x>>1);\n\tprintf(\"%d\",x&1);\n}\n\nint main()\n{\n\tfreopen(\"contact.in\",\"r\",stdin);\n\tfreopen(\"contact.out\",\"w\",stdout);\n\tscanf(\"%d%d%d\",&l,&r,&n);\n\tfor (int j=1;scanf(\"%1d\",&x)==1;j++)\n\t{\n\t\tfor (int i=min(j,r);i>=1;i--)\n\t\t\tnum[i]=(num[i-1]<<1)+x;\n\t\tfor (int i=l;i<=min(j,r);i++)\n\t\t{\n\t\t\tcnt[num[i]][count(i,num[i])]++;\n\t\t\tmaxn=max(maxn,cnt[num[i]][count(i,num[i])]);\n\t\t}\n\t}\n\tqueue<pair<int,int> > q[maxn+1];\n\tfor (int j=l;j<=r;j++)\n\t\tfor (int i=0;i<(1<<j);i++)\n\t\t\tq[cnt[i][count(j,i)]].push(mp(i,j));\n\tfor (int i=maxn;i>=1&&n;i--)\n\t\tif (q[i].size())\n\t\t{\n\t\t\tn--;\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tint len=q[i].size();\n\t\t\tfor (int j=1;j<=len;j++)\n\t\t\t{\n\t\t\t\tfor (int k=1;k<=count(q[i].front().second,q[i].front().first);k++)\n\t\t\t\t\tputchar(48);  //\u8f93\u51fa\u524d\u5bfc\u96f6\n\t\t\t\tprint(q[i].front().first);\n\t\t\t\tq[i].pop();\n\t\t\t\tif (!(j%6)) printf(\"\\n\");\n\t\t\t\t\telse if (j!=len) printf(\" \");\n\t\t\t}\n\t\t\tif (len%6) printf(\"\\n\");\n\t\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1554531747,
        "uid": 53962,
        "name": "stoorz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5de8\u591a\u5751\u70b9\u554a\uff0c\u5c31\u7b97\u7b97\u6cd5\u5bf9\u4e86\u4e5fD\u4e86\u534a\u4e2a\u5c0f\u65f6orz\n\n\u770b\u5230\u9898\u76ee\uff0c\u6211\u7684\u60f3\u6cd5\u662f\u8bb0\u5f55\u6bcf\u79cd\u4e32\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5c06\u4e32\u8f6c\u6210\u4e8c\u8fdb\u5236\u8ba1\u7b97\u503c\u5373\u53ef\u3002\u7531\u4e8e010\u548c0010\u53ef\u80fd\u88ab\u91cd\u590d\u8ba1\u5728\u4e00\u8d77\uff0c\u6240\u4ee5\u8981\u9650\u5236\u957f\u5ea6k\n\n\u6240\u4ee5,\u7528cnt[k][i]\u8868\u793a\u957f\u5ea6\u4e3ak\uff0c\u503c\u4e3ai\u7684\u4e32\u7684\u51fa\u73b0\u6b21\u6570\n\n\u4f46\u7a0d\u7b49\uff01\u5982\u679c\u6211\u4eec\u6bcf\u4e2a\u4e32\u90fd\u8ba1\u7b97\u4e00\u6b21\uff0c\u90a3\u4e48\u662f\u4f1a\u8d85\u65f6\u7684\uff0c\u8fd9\u91cc\u5c31\u8981\u7528\u5230\u4e00\u4e2a\u6280\u5de7\uff1a\u6eda\u52a8\u54c8\u5e0c\n\n\u8003\u8651\u4e00\u4e2a\u4e32110110101,\u957f\u5ea6\u4e3a3\uff0c\u73b0\u5728\u6211\u4eec\u7b97\u51fa\u4e86110\u7684\u54c8\u5e0c\u503c\u4e3a5\uff0c\u90a3\u4e48\u600e\u4e48\u7b97\u4e0b\u4e00\u4f4d101\u7684\u503c\u5462\uff1f\n\n\u7a0d\u52a0\u5206\u6790\u5373\u53ef\u53d1\u73b0\uff0c\u6211\u4eec\u5c06110\u5411\u5de6\u79fb\u4e00\u4f4d\u53d8\u62101100,\u73b0\u5728\u6211\u4eec\u5f97\u53bb\u6389\u6700\u9ad8\u4f4d\u76841\uff0c\u5c31\u5c06\u5b83& ((1<<k) - 1\uff09\uff08\u5373\u4e3a0111\uff0c\u8fd9\u6837\u5c31\u9664\u53bb\u4e86\u8d85\u8fc7\u4e09\u4f4d\u7684\u6570\u5b57\uff09\uff0c\u518d\u5c06\u5b83\u6216\u76ee\u524d\u7684\u503c\uff0c\u5c31\u80fdO(1)\u5f97\u5230\u5f53\u524d\u54c8\u5e0c\u503c\n\n\u8fd9\u6837\uff0c\u590d\u6742\u5ea6\u5c31\u4e3aO(nb),\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\n\n\u4f46\u8fd9\u9053\u9898\u7684\u5751\u70b9\u4e0d\u5728\u6b64\uff0c\u800c\u662f\u8f93\u51fa\u548c\u7279\u5224\uff01\uff01\n\n\u8f93\u51fa\u7684\u6362\u884c\u548c\u7ec6\u8282\u5177\u4f53\u89c1\u4ee3\u7801\uff0c\u8fd8\u6709\u5c31\u662f\u5982\u679ca > b\u76f4\u63a5return 0 ,\u5982\u679cb > len\uff0c\u90a3\u4e48\u5c06b\u53d8\u4e3alen\u5373\u53ef\uff0c\u89c1\u4ee3\u7801\n\n\u4ee5\u4e0a\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<climits>\n#include<queue>\nusing namespace std;\nconst int maxn = 2e5 + 5;\ninline int read()\n{\n    int ans = 0,op = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n    {\n        if(ch == '-') op = -1;\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9')\n    {\n        (ans *= 10) += ch - '0';\n        ch = getchar();\n    }\n    return ans * op;\n}\nint aa,b,n;\nint cnt[13][1 << 12];\nchar s[maxn];\nchar ss[110];\nint a[maxn];\nint invert(int s,int e)\n{\n    int ans = 0;\n    for(int i = s;i <= e;i++)\n    {\n        (ans += a[i]) *= 2;\n        //cout << a[i];\n    }\n    return ans >> 1;\n}\nint ans[20];\nvoid rebuild(int k,int len)\n{\n  int temp = len;\n  memset(ans,0,sizeof(ans));\n    while(len--)\n    {\n      ans[len] = k & 1;\n      k = k >> 1; \n    }\n for(int i = 0;i < temp;i++) printf(\"%d\",ans[i]);\n}\nstruct node\n{\n    int v,len,tv;\n    bool operator < (const node& a) const\n    {\n      if(v != a.v) return v > a.v;\n      else if(len != a.len) return len < a.len;\n      else return tv < a.tv;\n    }\n}st[maxn];\nint top;\nint len;\nint main()\n{\n    aa = read(),b = read(),n = read();\t\n    while(scanf(\"%s\",ss + 1) != EOF)\n    {\n    \tfor(int i = 1;i <= strlen(ss + 1);i++)\n    \t{\n    \t\tlen++;\n    \t\ts[len] = ss[i];\n    \t}\n    }\n    b = min(b,len);\n    if(aa > b) return 0;\n    for(int i = 1;i <= len;i++) a[i] = s[i] - '0';\n    for(int k = aa;k <= b;k++)\n    {\n        int temp = invert(1,1 + k - 1);\n        cnt[k][temp]++;\n        for(int i = k + 1;i <= len;i++)\n        {\n            temp = ((temp << 1) & ((1 << k) - 1)) | a[i];\n            cnt[k][temp]++;\n        }\n    }\n    for(int k = aa;k <= b;k++)\n        for(int i = 0;i <= (1 << k) - 1;i++)\n          if(cnt[k][i]) st[++top].v = cnt[k][i],st[top].len = k,st[top].tv = i;\n    sort(st + 1,st + 1 + top);\n    int j = 1;\n    for(int i = 1;i <= n;i++)\n        {\n            if(j > top) break;\n            printf(\"%d\\n\",st[j].v);\n            int tot = 1;\n            rebuild(st[j].tv,st[j].len);\n            printf(\" \");\n            while(st[j].v == st[j + 1].v && j + 1 <= top)\n            {\n                j++;\n                rebuild(st[j].tv,st[j].len);\n                tot++;\n                printf(\" \");\n                if(tot >= 6) { printf(\"\\n\"); tot = 0; }\n            }\n            j++;\n            if(tot) printf(\"\\n\");\n        }\n    //cout << endl;\n}\n\n```\n",
        "postTime": 1543230096,
        "uid": 86721,
        "name": "L_M_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    },
    {
        "content": "#### \u63d0\u4f9b\u65b0\u7684\u5904\u7406\u524d\u5bfc\u96f6\u7684\u65b9\u6cd5\n\n\u4e00\u770b\u9898\u76ee\uff0c\u663e\u7136\u5c31\u662f$(B-A+1)*len$\u7684\u505a\u6cd5\n\n\u56e0\u4e3a$A$\u3001$B$\u5f88\u5c0f\uff0c\u8003\u8651\u72b6\u538b\u3002\n\n\u72b6\u538b\u4e4b\u540e\u5c31\u53ef\u4ee5\u7528\u6570\u7ec4\u50a8\u5b58\uff0c\u5982\u679c\u7528\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u5341\u4e8c\u4f4d\u6700\u591a\u6709$2^{12}$\u79cd\uff0c\u53ef\u4ee5\u8f7b\u677e\u7684\u7528\u6570\u7ec4\u5b58\u4e0b\u3002\n\n\u4f46\u5b9e\u9645\u8fc7\u7a0b\u4e2d\u6211\u4eec\u4f1a\u9047\u5230\u95ee\u9898\uff0c\u5982\u6211\u4eec\u65e0\u6cd5\u533a\u5206$1$\u3001$01$\u3001$001$\u7b49\u8fd9\u6837\u5e26\u6709\u524d\u5bfc\u96f6\u7684\u6570\u5b57\uff0c \n\n\u5927\u90e8\u5206\u9898\u89e3\u9009\u62e9\u4e86\u540c\u65f6\u8bb0\u5f55\u957f\u5ea6\uff0c\n\n\u4e5f\u6709\u4eba\u628a$01$\u98a0\u5012\uff0c\u6216\u8005\u5229\u7528\u5eb7\u6258\u5c55\u5f00\u628a\u4e8c\u8fdb\u5236\u8f6c\u4e3a\u5341\u8fdb\u5236\uff0c\u628a$0$\u53d8\u6210$2$\uff0c\u4f46\u8fd9\u6837\u5c31\u5927\u5927\u589e\u52a0\u4e86\u6392\u5e8f\u7684\u96be\u5ea6\n\n\u8fd8\u6709\u7684\u7528\u4e86$map$\uff1f\n\n\u5176\u5b9e\u6211\u4eec\u53ea\u8981\u5728\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a$1$\uff0c\u50cf\u662f\u4e0a\u9762\u7684\u4e09\u4e2a\u53d8\u6210$11$\u3001$101$\u3001$1001$\n\n\u5c31\u4e0d\u518d\u51fa\u73b0\u524d\u5bfc\u96f6\u7684\u95ee\u9898\n\n\u800c\u4e14\u8fd9\u6837\u7684\u8bdd\uff0c\u6392\u5e8f\u4e5f\u65b9\u4fbf\u4e86\u8bb8\u591a\uff0c\u957f\u5ea6\u77ed\u7684\u672c\u6765\u5b57\u5178\u5e8f\u5c31\u5c0f\n\n\u800c\u4e8c\u8fdb\u5236\u7684\u5b57\u5178\u5e8f\u5c31\u662f\u4ece\u5c0f\u5230\u5927\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5bf9\u5b58\u7684\u6570\u6392\u5e8f\uff0c\u5c31\u89e3\u51b3\u4e86\u6240\u6709\u95ee\u9898\n\n\u8fd9\u6837\u7684\u8bdd\u7a7a\u95f4\u591a\u4e86\u4e00\u500d\uff0c\u4f46\u8fd8\u662f\u5f88\u5c0f\uff08$2^{13}=16384$\uff09\n\n### \u8be6\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<ctype.h>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ninline int read(){//\u8d85\u7ea7\u5feb\u4f46\u8fd9\u9053\u9898\u6ca1\u6709\u7528\u7684\u5feb\u8bfb\n\tint x=0,f=0;char ch=getchar();\n\twhile(!isdigit(ch))f|=ch=='-',ch=getchar();\n\twhile(isdigit(ch))x=x*10+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\nstruct OOO{//\u7ed3\u6784\u4f53\u5b58\u5e8f\u5217\n\tint id,cnt;//id\u8868\u793a\u4e8c\u8fdb\u5236\u8f6c\u5316\u6210int\u7684\u6570\uff0ccnt\u8868\u793a\u9891\u7387\n\tbool operator <(OOO b)const{//\u6392\u5e8f\u51fd\u6570\uff0c\u5148\u6309\u9891\u7387\u6392\uff0c\u7136\u540e\u6309\u5b57\u5178\u5e8f\uff08\u5373\u6570\u7684\u5927\u5c0f\uff09\n\t\tif(cnt==b.cnt)return id<b.id;\n\t\treturn cnt>b.cnt;\n\t}\n}f[16387];\nchar s[87];//\u8f85\u52a9\u8bfb\u5165\u6570\u7ec4\nint a[200007];//\u5b58\u6574\u4e2a\u5e8f\u5217\ninline void put(int x){//\u8f93\u51fa\n\tfor(int i=13;i>=0;--i)\n\t\tif((x&(1<<i))){\u627e\u5230\u7b2c\u4e00\u4f4d1\uff0c\u56e0\u4e3a\u8fd9\u4e00\u4f4d\u662f\u6211\u4eec\u81ea\u5df1\u52a0\u7684\uff0c\u6240\u4ee5\u4ece\u4e0b\u4e00\u4f4d\u5f00\u59cb\n\t\t\tfor(int j=i-1;j>=0;--j)putchar((x&(1<<j)?1:0)+48);//\u6328\u4e2a\u8f93\u51fa\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\n\t\t\tbreak;//\u9000\u51fa\u5faa\u73af\n\t\t}\n}\nint main(){\n\tint A=read(),B=read(),n=read(),m=B-A+1;\n\tint l=0,o=0;\n\twhile(scanf(\"%s\",s)!=EOF)for(int i=0;i<strlen(s);++i)a[++l]=s[i]^48;//\u8f6c\u5316\u6210int\uff0c\u65b9\u4fbf\u5904\u7406\n\t//\u4e0b\u9762\u662f\u72b6\u538b\u8fc7\u7a0b\n    for(int i=1;i<A;++i)o=o<<1|a[i];//o\u6eda\u52a8\u8bb0\u5f55A-1\u4f4d\u5e8f\u5217\n\tfor(int i=A;i<=l;++i){\n\t\tint p=o|(1<<A-1);//\u8fd9\u662f\u589e\u52a0\u4e00\u4f4d1\n\t\tfor(int j=0;j<m && i+j<=l;++j){\n\t\t\tp=p<<1|a[i+j];//\u6bcf\u6b21\u4e582\uff0c\u589e\u52a0\u4e00\u4f4d\n\t\t\tf[p].cnt++,f[p].id=p;//\u5b58\u50a8\u9891\u7387\u548c\u6570\u7684\u5927\u5c0f\n\t\t}\n\t\to=o%(1<<A-1)<<1|a[i];//o%(1<<A-1)\u662f\u53bb\u6389\u6700\u524d\u9762\u4e0a\u4e00\u4f4d\uff0c<<1|a[i]\u662f\u518d\u589e\u52a0\u4e00\u4f4d\n\t}\n\tsort(f,f+16387);//\u6392\u5e8f\n\tint i=0,cn=0;//\u7a0d\u7a0d\u6076\u5fc3\u7684\u8f93\u51fa\u3002\n\twhile(f[i].cnt && ++cn<=n){//\u8981\u4fdd\u8bc1\u9891\u7387\u4e0d\u4e3a\u96f6\u4e14\u53ea\u8f93\u51fan\u4e2a\n    \t\tprintf(\"%d\\n\",f[i].cnt);\n\t\tint j=i-1;\n\t\tdo{//do-while\u5faa\u73af\u65b9\u4fbf\u4e00\u4e9b\n\t\t\tput(f[++j].id);\n\t\t\tif((j-i+1)%6==0)puts(\"\");(j-i+1)\u662f\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u957f\u5ea6\uff0c\u82e5\u662f6\u7684\u500d\u6570\uff0c\u5c31\u6362\u884c\n\t\t\telse putchar(' ');\n\t\t}while(f[j+1].cnt==f[j].cnt);\n\t\tif((j-i+1)%6)puts(\"\");//\u5982\u679c\u4e0d\u662f6\u7684\u500d\u6570\uff0c\u5c31\u4e0d\u6362\u884c\n\t\ti=j+1;//i\u8df3\u5230j\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7559\u5230\u4e0b\u6b21\u5faa\u73af\u7ee7\u7eed\u505a\n\t}\n\treturn 0;//\u597d\u4e60\u60ef\n}\n\n\n```\n",
        "postTime": 1567383928,
        "uid": 56653,
        "name": "\u73c5\u8090",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7531\u4e8e\u6211\u7684\u66b4\u529b\u7b97\u6cd5\u5751\u4e86\u6211\u597d\u4e45\u2026\u2026\n\n1. \u60f3\u5230\u4eba\u4eba\u90fd\u6709\u60f3\u5230\u7684\u72b6\u538b\uff1a\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u538b\u6210\u4e00\u4e2aint\u3002\n\n2. \u7136\u540e\u679a\u4e3e\u5b57\u7b26\u4e32\u7b97CNT\u3002\u4f46\u662f\u524d\u5bfc\u96f6\u4f1a\u6709\u6b67\u4e49\u600e\u4e48\u529e\u5462\uff1f\u540c\u65f6\u5b58\u4e0a\u957f\u5ea6\u3002\n\n3. \u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a**vector<pair<int,int> > V[i]\u6307\u51fa\u73b0\u6b21\u6570\u4e3ai\u7684\u5b57\u7b26\u4e32**\u3002\u5176\u4e2dpair\u7684**first\u662f\u538b\u51fa\u7684int\uff0csecond\u662f\u5b57\u7b26\u4e32\u957f\u5ea6**\u3002\n\n\u7b2c\u4e09\u6b65\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvector<pair<int,int> > P[N];\n...\nvoid D2B(int x,int l){\n    for(int i=l-1;~i;--i)\n        printf(\"%d\",(x&(1<<i))>0);\n}\n...\nint main(){\n\t...\n\tfor(int i=a;i<=b;++i)\n\tfor(int j=0;j<1<<i;j++)\n\t\tP[Cnt[j][i]].push_back(make_pair(j,i));\n\tfor(int i=l;i&&n;--i)\n\t\tif(P[i].size()){\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tfor(int j=0;j*6<P[i].size();++j){\n\t\t\t\tD2B(P[i][j*6].first,P[i][j*6].second);\n\t\t\t\tfor(int k=1;k<6&&j*6+k<P[i].size();++k){\n\t\t\t\t\tprintf(\" \");\n\t\t\t\t\tD2B(P[i][j*6+k].first,P[i][j*6+k].second);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\t--n;\n\t\t}\n}\n```\n\nPS\uff1a\u4e8b\u5b9e\u4e0a\u6211\u662f\u56e0\u4e3a\u7528\u4e86\u4e2a\u66f4\u6162\u7684\u7b2c\u4e8c\u6b65\u800c\u5361\u7684\u3002",
        "postTime": 1559222130,
        "uid": 52914,
        "name": "MornEveGlow",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    },
    {
        "content": "\u5404\u4f4d\u5927\u4f6c\u7684\u4ee3\u7801\u597d\u5389\u5bb3\u3002\u3002\u3002\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u849f\u84bb\u7684\u601d\u8def\uff0c\u7531\u9898\u610f\u53ef\u77e5\uff0c\u8fd9\u91cc\u7684\u5b57\u4e32\u53ea\u67091\u548c0\u6784\u6210\uff0c\u4e8e\u662f\u4e4e\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8c\u8fdb\u5236\u6765\u4ee3\u66ff\u3002\u3002\u3002\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u96f6\u524d\u7f6e\u600e\u4e48\u529e\uff1a\u5c06\u4e00\u548c\u96f6\u7684\u4f5c\u7528\u98a0\u5012\uff0c\u7528\u4e8c\u7ef4\u6570\u7ec4\u5b58\u8d77\u6765\u3002\u3002\u3002\u4f46\u8fd9\u9053\u9898\u9ebb\u70e6\u7684\u4e0d\u662f\u65b9\u6cd5\u3002\u3002\u3002\u800c\u662f\u8f93\u5165\u8f93\u51fa\u6392\u5e8f\u3002\u3002\u3002\n1.\u8f93\u5165\uff1a\u76f4\u63a5\u5230\u6587\u4ef6\u7ed3\u5c3e\uff08\u88ab\u5361\u4e86\u597d\u591a\u6b21\u3002\u3002\u3002\uff09\n2.\u8f93\u51fa\uff1a\u63a7\u5236\u8f93\u51fa\u4e2a\u6570\uff0c\u6bcf\u884c\u516d\u4e2a\uff0c\u6ce8\u610f\u6700\u540e\u4e00\u884c\u6ca1\u6709\u5230\u516d\u4e2a\u4e5f\u8981\u6362\u884c\n3.\u6392\u5e8f\uff1a\u5148\u6309\u51fa\u73b0\u6570\u76ee\uff0c\u540e\u6309\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u5728\u540e\u6309\u5927\u5c0f\u3002\u3002\u3002\u3002\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cmath>\nusing namespace std;\nint i,d,n,m,g,h,j,ps;\nstring l,q,mp[100000];\ntypedef struct{\n    int ss;\n    string x;\n}fhs;\nfhs a[2][5000],bm[100000];\nint zh1(string b)\n{\nint m=0;\nfor(int x=b.size()-1;x>=0;x--)\n{\n    if(b[x]=='1')\n    m+=(int)pow(2.0,(double)(b.size()-1-x));\n}\nreturn m;\n}\nint zh2(string bl)\n{\nint m=0;\nfor(int x=bl.size()-1;x>=0;x--)\n{\n    if(bl[x]=='0')\n    m+=(int)pow(2.0,(double)(bl.size()-x-1));\n}\nreturn m;\n}\nstring hz1(int x)\n{\n    string m;\n    int nlog=log((double)x)/log(2.0);\n    for(int v=nlog;v>=0;v--)\n    {\n        if(x>=(int)(pow(2.0,double(v))))\n        {\n            m+='1';\n            x-=(int)(pow(2.0,double(v)));\n        }\n        else\n        {\n            m+='0';\n        }\n    }\n    //reverse(m.begin(),m.end());\n    return m;\n}\nstring hz2(int x)\n{\nstring m;\n    int nlog=log((double)x)/log(2.0);\n    for(int v=nlog;v>=0;v--)\n    {\n        if(x>=(int)(pow(2.0,double(v))))\n        {\n            m+='0';\n            x-=(int)(pow(2.0,double(v)));\n        }\n        else\n        {\n            m+='1';\n        }\n    }\n    //reverse(m.begin(),m.end());\n    return m;\n}\nbool cmp(fhs a1,fhs a2)\n{\n    if(a1.ss!=a2.ss)\n    {\n        return a1.ss>a2.ss;\n    }\n    else\n    {\n        if(a1.x.size()==a2.x.size())\n        return zh1(a1.x)<zh1(a2.x);\n        else\n        return a1.x.size()<a2.x.size();\n    }\n}\n\nint main()\n{\n    for(int x=1;x<5000;x++)\n    {\n        a[1][x].ss=0;\n        a[1][x].x=hz1(x);\n    }\n    for(int x=1;x<5000;x++)\n    {\n        a[0][x].ss=0;\n        a[0][x].x=hz2(x);\n    }\n    a[0][1].ss=0;\n    a[0][1].x=\"0\";\n    cin>>i>>d>>n;\n    while(cin>>q)\n    {\n    \tl+=q;\n\t}\n\t//cin>>l;\n    int pa=0;\n    int mmp=l.length();\n    j=min(d,mmp);\n    for(int x=i;x<=j;x++)\n    for(int y=0;y<=mmp-x;y++)\n    {string ll;\n    for(int z=0;z<x;z++)\n    {\n        ll+=l[y+z];\n    }\n    if(ll[0]=='0')\n    {\n        int u=zh2(ll);\n        a[0][u].ss++;\n    }\n    else\n    {int u=zh1(ll);\n        a[1][u].ss++;\n    }\n   /* if(x==12)\n    {\n\n        cout<<ll<<endl;\n    }*/\n    }\n    for(int x=0;x<2;x++)\n    for(int y=0;y<5000;y++)\n    {\n        if(a[x][y].ss!=0)\n        {\n            bm[pa].ss=a[x][y].ss;\n            bm[pa++].x=a[x][y].x;\n        }\n    }\n    bm[pa].ss=0;\n    bm[pa].x=\"a\";\n    sort(bm,bm+pa,cmp);\n    int du=0,cs=1331313,mnmn=0;\n    for(int x=0;x<=pa||cs-1==0;x++)\n    {\n        if(x==0)\n        {\n            cs=bm[x].ss;\n        }\n        else\n        {\n\n            if(cs!=bm[x].ss&&cs!=0)\n            {\n                cout<<cs<<endl;\n                int v=du;\n                for(;du<x;du++)\n                {\n                    cout<<bm[du].x<<\" \";\n                    if((du-v)!=0&&(du-v)%6==5)\n                    {\n                        cout<<endl;\n                    }\n                }\n                if((du-v)%6!=0)\n                cout<<endl;\n                cs=bm[x].ss;\n                mnmn++;\n            }\n        }\n        if(mnmn==n)\n            return 0;\n    }\n\n}\n\n```\n\u5982\u679c\u51fa\u73b0\u758f\u5ffd\u7684\u5730\u65b9\u8fd8\u671b\u5927\u4f6c\u4eec\u6307\u70b9\u3002\u3002\u3002\u3002",
        "postTime": 1530105750,
        "uid": 73320,
        "name": "lenaalyth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u5229\u7528\u5eb7\u6258\u5c55\u5f00\u628a\u4e8c\u8fdb\u5236\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\uff0c\u5e76\u4e14\u5f55\uff0c\u8f93\u5165\n\n\u4e2d\u95f4\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u6bd4\u5982\u8bf4010101\uff0c\u5e94\u8be5\u4e00\u5f00\u59cb\u5c31\u53d8\u6210121212\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u957f\u5ea6\u7684\u4e0d\u540c\u800c\u51fa\u73b0\u9519\u8bef\u4e86\n\n\u5b8c\u5b57\u7b26\u4e32\u4ee5\u540e\u9010\u4e2a\u641c\u7d22\uff0c\u627e\u5b8c\u540e\u6392\u5e8f\u4e00\u904d\u7136\u540e\u8f93\u51fa\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,a[610000];//a\u8bb0\u5f55\u51fa\u73b0\u8fc7\u7684\u6570\nint A,B,n,len;\nchar st[210000],ss[110];\nint f[610000];//\u628a\u4e8c\u8fdb\u5236\u53d8\u6210\u5341\u8fdb\u5236\u540e\u7684\u6570\nint kt[21],t;//kt\u8bb0\u5f55\u6bcf\u4e00\u4f4d\u7684\u5b57\u7b26\ninline int kangtuo()//\u5eb7\u6258\u5c55\u5f00\n{\n    int ans=0,s=1;\n    for(int i=t;i>=1;i--)//\u8bb0\u5f97\u53cd\u8fc7\u6765\u6c42\n    {\n        ans=ans+kt[i]*s;\n        s*=3;\n    }\n    return ans;\n}\ninline int kangtuo_(int x)//\u8f93\u51fa\u628ax\u53d8\u6210\u5341\u8fdb\u5236\u5e76\u4e14\u8f93\u51fa\n{\n    int lenth=0,g[51];\n    while(x>0)\n    {\n        lenth++;g[lenth]=x%3;\n        x/=3;\n    }\n    for(int i=lenth;i>=1;i--) printf(\"%d\",g[i]-1);//\u53cd\u7740\u8f93\u51fa\uff0c\u5e76\u4e14-1\n}\ninline int cmp(const void *xx,const void *yy)//\u6392\u5e8f\n{\n    int x=*(int*)xx;\n    int y=*(int*)yy;\n    if(f[x]>f[y]) return -1;//\u6309\u9891\u7387\u6392\u5e8f\n    if(f[x]<f[y]) return 1;\n    if(x>y) return 1;//\u6309\u7167\u5927\u5c0f\u6392\u5e8f\n    if(x<y) return -1;\n    return 0;\n}\nint main()\n{\n    int i,j;\n    scanf(\"%d%d%d\",&A,&B,&n);\n    while(scanf(\"%s\",ss+1)!=EOF)//\u6bcf\u6b21\u8f93\u5165\n    {\n        for(int i=1;i<=strlen(ss+1);i++)//\u8bb0\u5f55\n        {\n            len++;st[len]=ss[i];\n        }\n    }\n    for(i=1;i<=len;i++) st[i]++;//\u628a\u5168\u90e8\u7684\u5b57\u7b26\u90fd\u641c\u7d22\u4e00\u904d\n    B=min(B,len);//B\u7684\u957f\u5ea6\u518d\u600e\u4e48\u957f\u4e5f\u4e0d\u80fd\u6bd4len\u957f\n    if(A>B) return 0;//\u5982\u679c\u8981\u627e\u7684\u957f\u5ea6\u6bd4\u7ed9\u51fa\u7684\u957f\u5ea6\u8fd8\u957f\uff0c\u5c31\u4e0d\u7528\u7ba1\u4e86\n    for(i=1;i<=len;i++)\n    {\n        t=0;\n        if(len<i+A-1) break;\n        for(j=i;j<=min(len,i+B-1);j++)\n        {\n            t++;kt[t]=st[j]-'0';//\u8bb0\u5f55\u5b57\u7b26\n            if(t>=A)//\u5982\u679c\u6ee1\u8db3\u8981\u6c42\u4e86\n            {\n                int tt=kangtuo();//\u628a\u8fd9\u4e2a\u6570\u53d8\u6210\u5341\u8fdb\u5236\n                f[tt]++;\n                if(f[tt]==1) //\u5982\u679c\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\n                {\n                    m++;\n                    a[m]=tt;//\u8bb0\u5f55\u8fd9\u4e2a\u5b57\u7b26\n                }\n            }\n        }\n    }\n    qsort(a+1,m,sizeof(int),cmp);//\u6392\u5e8f\n    i=1;int s=1;\n    for(i=1;i<=n;i++)//\u8f93\u51fa\uff0c\u5982\u679c\u6ca1\u6709\u90a3\u4e48\u591a\u7684\u8bdd\u5c31\u8f93\u51fa\u80fd\u627e\u5230\u7684\u6240\u6709\n    {\n        printf(\"%d\\n\",f[a[s]]);//\u8f93\u51fa\n\tt=0;\n        for(j=s;j<=m;j++)\n        {\n            if(f[a[j]]==f[a[s]])//\u5982\u679c\u5b83\u4eec\u7684\u9891\u7387\u76f8\u540c\n            {\n                kangtuo_(a[j]);//\u8f93\u51fa\u4e8c\u8fdb\u5236\u4e0b\u7684\u6570\n\t\tif(j==m) //\u5982\u679c\u5168\u90e8\u627e\u5b8c\u4e86\n\t\t{\n\t\t\tprintf(\"\\n\");return 0;//\u5c31\u76f4\u63a5\u8f93\u51fa\n\t\t}\n                printf(\" \");\n                t++;if(t%6==0) printf(\"\\n\");//\u5982\u679c\u591f\u7559\u4e2a\u4e86\uff0c\u5c31\u6362\u884c\n            }\n            else \n            {\n                s=j;break;//\u4e0d\u76f8\u540c\u7684\u8bdd\u5c31\u8bb0\u5f55\u8fd9\u4e2a\u6570\n            }\n        }\n        if(t%6!=0) printf(\"\\n\");//\u5982\u679c\u524d\u9762\u6ca1\u6709\u6362\u8fc7\u884c\uff0c\u5c31\u6362\u884c\n    }\n    return 0;\n}\n```",
        "postTime": 1525255607,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6570\u636e\u770b\u8d77\u6765\u5f88\u5927\uff0c\u5176\u5b9e\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u626b\u63cf\u6574\u4e2a01\u4e32\uff0c\u627e\u51fa\u6240\u6709\u957f\u5ea6\u5728A\u5230B\u4e4b\u95f4\u7684\u5b50\u4e32\uff0c\u7528cnt\u6570\u7ec4\u8ba1\u6570\u518d\u7528\u4f18\u5148\u961f\u5217\u8f93\u51fa\u524dn\u5373\u53ef\uff0c\u9700\u8981\u5c24\u5176\u6ce8\u610f\u683c\u5f0f\u3002\n\n\u8fd9\u9898\u6211\u7684\u65b9\u6cd5\u662f\u628a\u6240\u6709\u957f\u5ea6\u5728A\u5230B\u4e4b\u95f4\u768401\u4e32\u7f16\u7801\u62100~65535\u4e4b\u95f4\u7684\u6574\u6570\uff0c\u8f93\u51fa\u65f6\u8fd8\u539f\u5373\u53ef\u3002\u7f16\u7801\u65f6\u8981\u5b58\u50a8\u4e32\u672c\u8eab\u548c\u4e32\u7684\u957f\u5ea6\u4e24\u4e2a\u4fe1\u606f\uff08\u5426\u52190, 00, 000\u8fd9\u4e9b\u4e32\u5c06\u65e0\u4ece\u533a\u5206\uff09\u3002\n\n\u4ee3\u7801(43ms,\u76ee\u524d\u6700\u4f18)\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#define MAXN 200005\nusing namespace std;\ntypedef unsigned short str; //\u4f7f\u7528unsigned short\u6765\u5b58\u50a801\u5b50\u4e32\nstruct Kinds{ //Kinds\u8868\u793a\u4e00\u79cd\u5b50\u4e32(a KIND of Str)\uff0c\u5728\u4f18\u5148\u961f\u5217\u4e2d\u4f7f\u7528\n    int n; //\u8be5\u4e32\u51fa\u73b0\u7684\u6b21\u6570\n    str s; //\u8be5\u4e32\u672c\u8eab\n    //\u4ee5\u4e0b\u662f\u6784\u9020\u548c\u6790\u6784\u51fd\u6570\n    Kinds(int tn,str ts){\n        n=tn,s=ts;\n    }\n    Kinds(void){\n        n=0;s=0;\n    }\n    ~Kinds(void){}\n    //\u53cb\u5143\u5c0f\u4e8e\u8fd0\u7b97\u7b26\uff0c\u4f18\u5148\u961f\u5217\u7528\n    friend bool operator<(const Kinds lhs,const Kinds rhs);\n};\nchar sstr[MAXN]; //\u7528\u6765\u5b58\u50a8\u8f93\u5165\u7684\u5b57\u7b26\u5e8f\u5217\nint cnt[65536]={0}; //cnt\u6570\u7ec4\uff0c\u7528\u4e8e\u7ed9\u6bcf\u4e00\u79cd\u4e32\u8ba1\u6570\nstr shash(char *,int); //char\u4e32->\u6574\u6570\u7f16\u7801\nint unshash(str,char *); //\u6574\u6570\u7f16\u7801->char\u4e32\nint main(void){\n    int a,b,n,len; //len\u5b58\u50a8\u6574\u4e2a\u5b57\u7b26\u5e8f\u5217\u7684\u957f\u5ea6\n    char linet[25];//\u8f93\u51fa\u65f6\u4f7f\u7528\u7684\u7f13\u5b58\n    char chart;  //\u8f93\u5165\u7f13\u5b58\n    int i,l,last,tmpn; //\u5206\u522b\u4e3a\u5faa\u73af\u53d8\u91cf(\u6570\u7ec4\u7d22\u5f15\u4f4d\u7f6e)\u3001\u5faa\u73af\u53d8\u91cf(\u679a\u4e3e\u957f\u5ea6)\u3001\u8f93\u51fa\u7528\u53d8\u91cf\u3001\u8f93\u51fa\u7528\u53d8\u91cf\uff08\u4e13\u95e8\u6ee1\u8db3\u9898\u76ee\u82db\u523b\u7684\u683c\u5f0f\u8981\u6c42\uff09\n    priority_queue<Kinds> q; //\u8f93\u51fa\u7528\u7684\u4f18\u5148\u961f\u5217\n    Kinds tmp;\n    cin >> a >> b >> n;\n    i=0;\n    while ((chart=getchar())!=EOF)\n        if (chart=='0' || chart=='1')\n            sstr[i++]=chart;\n    \n    len=i;\n    //\u4ee5\u4e0a\u4e3a\u8f93\u5165\u5b57\u7b26\u5e8f\u5217\n    \n    for (l=a;l<=b;l++)\n        for (i=0;i<=len-l;i++)\n            cnt[shash(sstr+i,l)]++;\n    \n    //\u4ee5\u4e0a\u4e3a\u679a\u4e3e\u548c\u7edf\u8ba1\u6bcf\u79cd\u4e32\n    for (i=0;i<65536;i++)\n        if (cnt[i]>0)\n            q.push(Kinds(cnt[i],str(i)));\n    //\u4ee5\u4e0a\u4e3a\u5c06\u51fa\u73b0\u7684\u4e32\u653e\u8fdb\u4f18\u5148\u961f\u5217\u91cc\n\n    last=-1,tmpn=0,i=0;\n    while (!q.empty()){\n        tmp=q.top();\n        q.pop();\n        if (tmp.n!=last){\n            last=tmp.n;\n            tmpn=0;\n            i++;\n            if (i>n)\n                break;\n            if (i>1)\n                cout << endl;\n            cout << last << endl;\n        }\n        if (tmpn==6){\n            cout << endl;\n            tmpn=0;\n        }\n        unshash(tmp.s,linet);\n        cout << linet << ' ';\n        tmpn++;\n    }\n    //\u4ee5\u4e0a\u4e3a\u8f93\u51fa\n    cout << endl; //\u63a7\u5236\u53f0\u8c03\u8bd5\u65f6\u4e3a\u4e86\u7f8e\u89c2\u52a0\u4e0a\u7684\uff0c\u8bc4\u6d4b\u65f6\u53ef\u5220\u9664\n    return 0;\n}\nstr shash(char * a,int l){\n    //char\u4e32->\u6574\u6570\u7f16\u7801\uff0c\u4e24\u4e2a\u53c2\u6570\u4e3achar\u4e32\u548c\u4e32\u7684\u957f\u5ea6\uff0c\u8fd4\u56de\u7f16\u7801\u4e32\n    //\u7f16\u7801\u7684\u7ed3\u6784\uff1a\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\uff0c\u524d12\u4f4d\u4e3a\u5b50\u4e32\u672c\u8eab\uff0c\u540e4\u4f4d\u5b58\u50a8\u4e32\u7684\u957f\u5ea6\u4fe1\u606f\n    str s=0;\n    int i;\n    for (i=0;i<l;i++)\n        s=(s<<1)|(a[i]-'0');//\u76f8\u5f53\u4e8es=s*2+(a[i]-'0')\n    s=(s<<4)+l;//\u76f8\u5f53\u4e8es=s*16+l\n    return s;\n}\nint unshash(str s,char * a){\n    //\u6574\u6570\u7f16\u7801->char\u4e32\uff0c\u4e24\u4e2a\u53c2\u6570\u4e3a\u7f16\u7801\u4e32\u548c\u5b58\u50a8char\u4e32\u7684\u4f4d\u7f6e\uff0c\u8fd4\u56de\u4e32\u7684\u957f\u5ea6\n    int l,i;\n    l=s&15;//\u76f8\u5f53\u4e8el=s%16\n    s=s>>4;//\u76f8\u5f53\u4e8es/=16\n    for (i=l-1;i>=0;i--){\n        a[i]=(s&1)+'0'; //\u76f8\u5f53\u4e8ea[i]=(s%2)+'0'\n        s=s>>1; //\u76f8\u5f53\u4e8es/=2\n    }\n    a[l]='\\0'; //\u4e3a\u4e86\u8f93\u51fa\u6b63\u5e38\uff0c\u7279\u52a0\u4e0a\u8fd9\u4e00\u884c\n    return l;\n}\n\nbool operator<(const Kinds lhs,const Kinds rhs){\n    //\u6bd4\u8f83\u51fd\u6570\n    if (rhs.n!=lhs.n)\n        return lhs.n<rhs.n; //\u51fa\u73b0\u6b21\u6570\u591a\u7684\u6392\u5728\u524d\u9762\n    if (((rhs.s)&15)!=((lhs.s)&15))\n        return ((lhs.s)&15)>((rhs.s)&15); //\u957f\u5ea6\u77ed\u7684\u6392\u5728\u524d\u9762\n    return (((lhs.s)>>4))>(((rhs.s)>>4)); //\u4e8c\u8fdb\u5236\u8868\u793a\u5c0f\u7684\u6392\u5728\u524d\u9762\n}\n```",
        "postTime": 1500960491,
        "uid": 50406,
        "name": "\u7acb\u82b1\u6cf7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8003\u683c\u5f0f\u8003\u7684\u4e0d\u662f\u4e00\u822c\u53ef\u4ee5\uff0c \u9996\u5148\u8f93\u5165\u7684**\u5b57\u7b26\u4e32\u4f1a\u6709\u591a\u884c**\uff08\u6ce8\u610f\u522b\u5165\u5751\uff09\uff0c \u7136\u540e\u8f93\u51fa**\u4e0d\u80fd\u6709\u591a\u4f59\u7a7a\u884c\u548c\u7a7a\u683c**\uff08\u5e76\u4e14\u8f93\u51fa6\u4e2a\u5b57\u7b26\u4e32\u5c31\u8981\u6362\u4e00\u6b21\u884c\uff0c\u7136\u540e\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u524d\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u540e\u4e0d\u80fd\u6709\u7a7a\u683c\uff09\u3002\n\n\u6ce8\u610f\u6392\u5e8f\uff01\uff01\uff01\n\n**1.\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5728\u524d\u9762\uff1b**\n\n**2.\u5b57\u7b26\u4e32\u6700\u957f\u7684\u5728\u524d\u9762\uff1b**\n\n**3.\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u6811\u6392\u5e8f\uff1b**\n\n\n\u6211\u7528\u4e86\u4e00\u4e2a map <string, int> id \u8868\u793a\u5f53\u524d\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7f16\u53f7\n\n\u7136\u540e\u6211\u66b4\u529b\u63d0\u53d6 \u6bcf\u4e00\u8282\u5b57\u7b26\u4e32\u6765\u7b97\u51fa\u73b0\u7684\u6b21\u6570\uff08\u4e8b\u5b9e\u8bc1\u660e\u6ca1\u6709TLE\uff09\n\n\u5176\u4ed6\u7684\u5c31\u6309\u9898\u76ee\u7684\u610f\u601d\u6765\u5f04\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\u5185\u89e3\u91ca\u5f88\u8be6\u7ec6\u4e86\n\nC++\u4ee3\u7801\u5982\u4e0b\uff1a\n\n/*************************************************************************\n\n    > Author: wzw-cnyali\n    > Created Time: 2017/3/27 20:15:46\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<map>\nusing namespace std;\ntypedef long long LL;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define EREP(i, a) for(register int i = (be[a]); i != -1; i = nxt[i])\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mem(a, b) memset((a), b, sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nconst int Size = 200020;\nconst int inf = 0x3f3f3f3f;\nmap <string, int> id;\nstring S;\nstruct node\n{\n    string s;//\u5f53\u524d\u5b57\u7b26\u4e32\n    int time;//\u51fa\u73b0\u6b21\u6570\n    friend bool operator < (node a, node b)//\u6bd4\u8f83\u51fd\u6570\n    {\n        if(a.time == b.time)\n        {\n            if(a.s.length() == b.s.length())\n                return a.s < b.s;\n            else \n                return a.s.length() < b.s.length();\n        }\n        return a.time > b.time;\n    }\n}contact[Size];\nint cnt;\nint ID(string s)//\u7ed9\u5b57\u7b26\u4e32\u7f16\u53f7\n{\n    if(!id.count(s)) id[s] = ++cnt;//\u5224\u65ad\u5f53\u524d\u5b57\u7b26\u4e32\u662f\u5426\u51fa\u73b0\u8fc7\n    return id[s];\n}\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.in\", \"r\", stdin);\n    freopen(\"output.out\", \"w\", stdout);\n#endif\n    int A = read(), B = read(), N = read();\n    string s;\n    while(cin>>s) S += s;//\u8f93\u5165\n    REP(i, 0, S.length() - 1)\n    {\n        for(int j = A, _end_ = S.length(); j <= B && i + j <= _end_; ++j)\n        {\n            s = S.substr(i, j);//\u63d0\u53d6\u5b57\u7b26\u4e32 S \u4e2d   \u4ece\u7b2c i \u4f4d\u5f00\u59cb\u957f\u5ea6\u4e3a j \u7684\u5b57\u7b26\u4e32\n            int ls = ID(s);\n            contact[ls].s = s;\n            contact[ls].time++;\n        }\n    }\n    sort(contact + 1, contact + cnt + 1);//\u6392\u4e2a\u5e8f\n    int ans = 0;\n    REP(i, 1, cnt)\n    {\n        printf(\"%d\\n\", contact[i].time);\n        int ls = 0;\n        while(contact[i].time == contact[i + 1].time)//\u5224\u65ad\u662f\u5426\u540e\u9762\u6709\u6ca1\u6709\u51fa\u73b0\u76f8\u540c\u6b21\u6570\u7684\n        {\n            cout<<contact[i].s;\n            ls++;\n            if(ls % 6 == 0) puts(\"\");\n            else printf(\" \");\n            i++;\n        }\n        cout<<contact[i].s<<endl;//\u6700\u540e\u4e00\u4e2a\u8981\u6362\u884c\n        if(++ans == N) break;\n    }\n    return 0;\n}\n```",
        "postTime": 1490711029,
        "uid": 19623,
        "name": "Jason_Yvan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2724 \u3010\u8054\u7cfb Contact\u3011"
    }
]