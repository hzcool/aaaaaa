[
    {
        "content": "# \u9898\u89e3\uff1aP3110 \u9a6e\u8fd0Piggy Back\n### \u9898\u76ee\u5927\u610f\uff1a\n- \u7ed9\u51fa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0cBessie\u4ece1\u53f7\u4ed3\u5e93\u8d70\u5230n\u53f7\uff08\u6bcf\u6b21\u82b1\u8d39B\uff09\uff0c Elsie\u4ece2\u53f7\u4ed3\u5e93\u8d70\u5230n\u53f7\uff08\u6bcf\u6b21\u82b1\u8d39E\uff09\uff0c\u5982\u679c\u4e24\u4e2a\u4eba\u8d70\u540c\u4e00\u6761\u8def\u82b1\u8d39P\uff0c\u6c42\u603b\u82b1\u8d39\u6700\u5c0f\u3002\n- \u8f93\u5165B\uff0cE\uff0cP\uff0cn\uff0cm\u548cm\u6761\u8fb9\u7684\u8054\u901a\u60c5\u51b5\n- \u8f93\u51fa\u6700\u5c11\u82b1\u8d39\u3002\n### \u9898\u76ee\u5206\u6790\uff1a\n- \uff08~~dalao\u8df3\u8fc7~~\uff09\u6211\u521a\u5f00\u59cb\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u7684\u65f6\u5019\uff0c\u786e\u5b9e\u65e0\u6cd5\u52a8\u7b14\u3002\u4e8e\u662f\u6211\u62b1\u7740\u5b66(jie)\u4e60(jian)\u7684\u5fc3\u6001\u6253\u5f00\u4e86\u9898\u89e3\uff0c\u53d1\u73b0\u9898\u89e3\u91cc\u7684\u5927\u4f6c\u90fd\u5728\u8bf4\u4ec0\u4e483\u4e2aSPFA\uff0c3\u4e2aDijkstra\uff0c\u8dd1\u4e09\u904d\u6700\u77ed\u8def\u7b49\u7b49\u3002\u7ecf\u8fc7\u4e00\u756a\u601d\u7d22\u540e\uff0c\u6211\u7ec8\u4e8e\u660e\u767d\u4e86\u4ed6\u7684\u610f\u601d\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u7ed9\u8fd8\u6ca1\u6709\u5f04\u61c2\u7684\u540c\u5b66\u89e3\u91ca\u4e00\u4e0b\u3002\n### \u89e3\u9898\u65b9\u6cd5\n- \u5148\u8dd1\u4e09\u904d\u6700\u77ed\u8def\uff08SPFA\u6216\u8005\u662fDijkstra ~~\u5f53\u7136\u5982\u679c\u4f60\u662f\u5927\u4f6cBfs\u4e5f\u53ef\u4ee5~~\uff09\uff0c\u5206\u522b\u5f97\u5230Bessie\u4ece\u2460\u51fa\u53d1\u7684\u6700\u77ed\u8def,Elsie\u4ece\u2461\u51fa\u53d1\u7684\u6700\u77ed\u8def,\u548c\u4ecen\u51fa\u53d1\u5230\u5176\u4ed6\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u3002\u6700\u540e\u679a\u4e3e\u6240\u4ee5\u7684\u70b9\n```cpp\nans = max(ans ,B*disB[i]+E*disE[i]+P*disP[i]);\n```\n\n- #### \u89e3\u91ca\uff1a\u8fd9\u4e2a\u5f0f\u5b50\u4ee3\u8868\u8d70\u7740\u6761\u8def\u7684\u82b1\u8d39\uff0c\u5206\u522b\u662fBessie\u5230i\u70b9\u7684\u8ddd\u79bb+Elsie\u5230i\u70b9\u7684\u8ddd\u79bb+B&&E\u5230n\u70b9\u7684\u82b1\u8d39\u3002\n\n### \u6700\u540e\n- \u611f\u8c22 \u9898\u89e3dalao @ezoixx\u2642130 \u63d0\u4f9b\u601d\u8def\uff08~~\u8fd9\u4e2a\u540d\u5b57\u6709\u70b9\u54f2\u5b66\u554a~~\uff09\n- ## \u795d\u4f60AC\uff08~~\u5176\u5b9e\u8fd9\u9053\u9898\u8fd8\u662f\u86ee\u6c34\u7684~~\uff09\n- \u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff08\u6e29\u99a8\u63d0\u793a\uff1a\u4e0d\u8981\u6284\u88ad\uff09\uff1a\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<string.h>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#define N 100007\nusing namespace std;\nint B,P,E,n,m,cnt,ans;\t \nint head[N],disB[N],disP[N],disE[N];\nstruct Edge\n{\n\tint next,to;\t//\u8fb9\u6ca1\u6709\u6743\u503c \n}edge[N];\t//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe \nvoid add(int u,int v)\t//\u589e\u52a0\u8fb9 \n{\n\tedge[++cnt].next = head[u];\n\tedge[cnt].to = v;\n\thead[u] = cnt;\n}\n//\t\u4e00\u4e2a\u6734\u7d20\u7684SPFA\uff08QWQ\uff09 \uff0c\u4f20\u5165s\u6e90\u70b9\uff0c\u548cdis\u6570\u7ec4\uff08\u6700\u77ed\u8def\u6570\u7ec4\uff09 \nvoid SPFA(int s,int dis[])\t \n{\n//\tint num[N];\t\t//\u65e0\u8d1f\u73af\n\tqueue<int> q;\n\tbool vis[N];\n\tfor(int i=1;i<=n;++i) dis[i] = 88888888;\n//\tprintf(\"BiG TesT : dis=%d\",dis[5]);\n\tmemset(vis,0,sizeof(vis));\n\tq.push(s) ,vis[s] = 1 ,dis[s] = 0;\n\twhile(!q.empty())\n\t{\n\t\tint cur = q.front();\n\t\tq.pop() ,vis[cur] = 0;\n\t\tfor(int i=head[cur];i;i=edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to ,w=1;\t//\u6743\u503c\u8bbe\u7f6e\u4e3a1 \n\t\t\tif(dis[v] > dis[cur]+w)\n\t\t\t{\n\t\t\t\tdis[v] = dis[cur]+w;\n\t\t\t\tif(!vis[v]) vis[v] = 1 ,q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\twhile(1) cout << \"Plagiarists are shameless\" << endl;\n//\t\u8bf7\u5927\u5bb6\u81ea\u884c\u7ffb\u8bd1\u4e00\u4e0bQWQ \n}\nint main()\n{\n//\tprintf(\"%d\",ans);\n\tscanf(\"%d%d%d%d%d\",&B,&E,&P,&n,&m);\n\tfor(int i=1,u,v;i<=m;++i)\n\t\tscanf(\"%d%d\",&u,&v) ,add(u,v) ,add(v,u);\n//\t\u4ee5\u4e0a\u8f93\u5165\u4e0d\u7528\u89e3\u91ca\u5427\uff1f \n\tSPFA(1,disB);\t//\u641cB \n\tSPFA(2,disE);\t//\u641cE \n\tSPFA(n,disP);\t//\u4ecen\u5f00\u59cb\u641c\u7684P \n//\t\u6253\u64c2\u53f0 \n\tans = 0xfffffff;\n\tfor(int i=1;i<=n;++i)\n\t\tans = min(ans ,B*disB[i]+E*disE[i]+P*disP[i]);\n\tprintf(\"%d\",ans);\n\treturn 0;\t//\u5b8c\u7f8e\u7ed3\u675f \n}\n```\n\u6c42\u7ba1\u7406\u5927\u5927\u6279\u8fc7 QWQ \uff01",
        "postTime": 1554434066,
        "uid": 147511,
        "name": "\u57fa\u5730A_I",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "[Best Wath in the Blog](https://www.luogu.com.cn/blog/Shuchong/)\n\n### Description\n\n> [P3110](https://www.luogu.com.cn/problem/P3110)    \n> \u4e00\u5f20 $n$ \u70b9 $m$ \u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u5c0f B \u8981\u4ece $1$ \u8d70\u5230 $n$\uff0c\u6bcf\u6761\u8fb9\u8981\u82b1\u8d39 $b$\uff0c\u5c0f E \u8981\u4ece $2$ \u8d70\u5230 $n$\uff0c\u6bcf\u6761\u8fb9\u82b1\u8d39 $e$\uff0c\u5f53\u5c0f B \u548c\u5c0f E \u4e00\u5757\u8d70\u7684\u65f6\u5019\uff0c\u56e0\u4e3a $\\color{Orange}\\text{\u53cb\u8c0a}$ \u5730\u4e45\u5929\u957f\u4ed6\u4eec\u4e00\u5171\u53ea\u9700\u8981\u82b1\u8d39 $p$\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u5404\u8d70\u5404\u7684\u3002\u6c42\u6700\u5c0f\u82b1\u8d39\u3002    \n> $1 \\le n,m,b,e,p\\le 4 \\times 10^4$\uff0c$n \\ge 3$\n\n### Solution\n\n\u6a21\u62df\u8d5b\u9898\u76ee\uff0c\u611f\u8c22\u6628\u5929\u5728\u505a P3106 \u65f6 @limaopipi2022 \u7ed9\u4e86\u6211\u7279\u6b8a\u7684\u5e26\u6570\u7ec4 SPFA \u7684\u65b9\u6cd5\u3002\uff08\u4eca\u5929\u505a\u8fd9\u9898\u7528\u4e0a\u4e86\uff09\n\n\u4e3b\u8981\u5c31\u662f\u5206\u4e09\u4e2a SPFA\uff1a\n\n- \u7b2c\u4e00\u4e2a SPFA \u662f\u5c0f B \u7684\uff0c\u4ece $1$ \u5230 $n$\n- \u7b2c\u4e8c\u4e2a SPFA \u662f\u5c0f E \u7684\uff0c\u4ece $2$ \u5230 $n$\n- \u7b2c\u4e09\u4e2a SPFA \u662f\u5168\u5c40\u7684\uff0c\u53cd\u5411\u5168\u56fe\u6700\u77ed\u8def\n\n\u5728\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $i$\uff0c\u8ba1\u7b97 \n$$disb_i\\times b+dise_i \\times e+disa_i \\times p$$\n\u7684\u6700\u5c0f\u503c\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\uff0c\u4e0d\u77e5\u9053\u662f\u5426\u6709\u4e9b\u4eba\u8ddf\u6211\u4e00\u6837\u7231\u7528\u4f18\u5148\u961f\u5217\u641e SPFA\uff0c\u8fd9\u9898\u7684 SPFA \u4e0d\u80fd\u7528\u4f18\u5148\u961f\u5217\uff0c\u53ea\u80fd\u7528\u666e\u901a\u7684\u961f\u5217\u3002\n\n\u90a3\u6211\u5728\u6700\u5f00\u59cb\u8bf4\u7684\u5e26\u6570\u7ec4 SPFA \u662f\u600e\u6837\u7684\u5462\uff1f\u5c31\u662f\u628a SPFA \u540e\u9762\u7684\u53c2\u6570\u52a0\u4e0a\u4e24\u4e2a\uff0c$s$ \u548c $dist$ `void SPFA (int s, int *dist)` \u7136\u540e\u5e95\u4e0b\u5c31\u6b63\u5e38 SPFA \u5c31\u53ef\u4ee5\u4e86\u5566\u3002\u53ef\u4ee5\u8fd9\u4e48\u641e\u5f97\u539f\u56e0\u5c31\u662f\u56e0\u4e3a\u6570\u7ec4\u662f\u6307\u9488\uff0c\u6307\u5411\u51fd\u6570\u7684\u6570\u7ec4\u6307\u9488\u5bf9\u4e8e\u8fdb\u884c SPFA \u7684\u6570\u7ec4\u4e5f\u6709\u5f71\u54cd\u3002\uff08\u9ad8\u7cbe\u5e94\u8be5\u6709\u4eba\u5c31\u662f\u8fd9\u4e48\u6253\u7684\uff0c\u6bd4\u5982\u6211\uff09\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct node {\n\tint val, next, len;\n} e[100086];\n\nint b, e1, p, n, m, cnt;\nint head[100086];\nint disb[100086], dise[100086], disa[100086];\nint sum[100086];\n\n\nvoid AddEdge (int u, int v, int w) {\n\te[++cnt].val = v;\n\te[cnt].next = head[u];\n\te[cnt].len = w;\n\thead[u] = cnt;\n}\n\nvoid SPFA (int s, int *dist) {\n\tqueue <int> q;\n\tfor (int i = 1; i <= n; i++)\n\t\tdist[i] = 0x3f3f3f3f;\n\tdist[s] = 0;\n\tsum[s] = 1;\n\tq.push(s);\n\twhile (!q.empty()) {\n\t\tint cur = q.front();\n\t\tq.pop();\n\t\tsum[cur] = 0;\n\t\tfor (int p = head[cur]; p > 0; p = e[p].next)\n\t\t\tif (dist[e[p].val] > dist[cur] + e[p].len) {\n\t\t\t\tdist[e[p].val] = dist[cur] + e[p].len;\n\t\t\t\tif (!sum[e[p].val]) {\n\t\t\t\t\tq.push(e[p].val);\n\t\t\t\t\tsum[e[p].val] = 1;\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n\nint main () {\n\tscanf(\"%d%d%d%d%d\", &b, &e1, &p, &n, &m);\n\tfor (int i = 1, u, v; i <= m; i++) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tAddEdge(u, v, 1);\n\t\tAddEdge(v, u, 1);\n\t}\n\tSPFA(1, disb), SPFA(2, dise), SPFA(n, disa);\n\tint Min = 1e9;\n\tfor (int i = 1; i <= n; i++)\n\t\tMin = min(Min, disb[i] * b + dise[i] * e1 + disa[i] * p);\n\tprintf(\"%d\", Min);\n\treturn 0;\n}\n```\n\nBy Shuchong     \n2020.7.12",
        "postTime": 1594519881,
        "uid": 114914,
        "name": "\u4e00\u53ea\u4e66\u866b\u4ed4",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]Piggy Back S\u3011"
    },
    {
        "content": "# \u9898\u610f\nBessie \u548c Elsie \u5206\u522b\u4ece $1$ , $2$ \u51fa\u53d1\u5230 $n$ \uff0cBessie\u79fb\u52a8\u4e00\u6b21\u7684\u4ee3\u4ef7\u662f $B$\uff0cElsie\u79fb\u52a8\u4e00\u6b21\u7684\u4ee3\u4ef7\u662f $E$\uff0c\u4e24\u4eba\u76f8\u9047\u540eBessie\u53ef\u4ee5\u9a6eElsie\u4ee3\u4ef7\u662f $P$\u3002\u95ee\u5230\u8fbe\u7ec8\u70b9 $n$ \u7684\u6700\u5c0f\u4ee3\u4ef7\u548c\u3002\n# \u9898\u89e3\n\u5176\u5b9e\u4e24\u4eba\u76f8\u9047\u540e\u53c8\u5206\u5f00\u7684\u60c5\u51b5\u4e0d\u7528\u8003\u8651\uff0c\u7531\u4e8e\u4ece\u4e00\u4e2a\u70b9\u5230\u8fbe\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u54ea\u4e2a\u66f4\u4f18\u5c31\u53d6\u51b3\u4e8e\u6240\u52a0\u7684\u6743\u503c\u3002  \n\u5982\u679c $B+E<=P$ \uff0c\u90a3\u4e48\u4e0d\u5206\u5f00\u4e00\u5b9a\u4e0d\u4f1a\u5dee\uff1b  \n\u5982\u679c $B+E\\ \\ \\ >P$ \uff0c\u90a3\u4e48\u4e24\u4eba\u8fd8\u4e0d\u5982\u4e0d\u76f8\u9047\uff0c\u5404\u8d70\u5404\u81ea\u7684\u8def\uff0c\u4e5f\u5c31\u662f\u6700\u540e\u5728 $n$ \u76f8\u9047\u3002  \n\u6240\u4ee5\uff0c\u53ea\u9700\u8981\u5206\u522b\u4ece $1$\uff0c$2$\uff0c$n$ \u8dd1\u4e00\u8fb9 $bfs$ \uff0c\u6c42\u51fa\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e\u4e24\u4e2a\u4eba\u76f8\u9047\u7684\u70b9\uff0c\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n# \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n#define N 40005\n#define M 1000005\n\nint B,E,P,n,m;\n\ninline int read() {\n\tint tmp=0,w=1;\n\tchar ch=0;\n\twhile(!isdigit(ch)) {if(ch=='-') w=-1;ch=getchar();}\n\twhile(isdigit(ch)) tmp=(tmp<<1)+(tmp<<3)+ch-'0',ch=getchar();\n\treturn tmp*w;\n}\n\nstruct node {\n\tint v,nex;\n}e[M<<1];\nint tot,h[N];\nvoid add(int u,int v) {\n\te[++tot].v=v,e[tot].nex=h[u],h[u]=tot;\n}\n\nint dis[3][N];\nbool vis[3][N];\nqueue<int>q;\nvoid bfs(int t) {\n\tif(t==0) vis[t][1]=1,q.push(1);\n\telse if(t==1) vis[t][2]=1,q.push(2);\n\telse vis[t][n]=1,q.push(n);\n\tint x,xx;\n\twhile(!q.empty()) {\n\t\tx=q.front();\n\t\tq.pop();\n\t\tfor(int i=h[x];i;i=e[i].nex) {\n\t\t\txx=e[i].v;\n\t\t\tif(!vis[t][xx]) {\n\t\t\t\tvis[t][xx]=1;\n\t\t\t\tdis[t][xx]=dis[t][x]+1;\n\t\t\t\tq.push(xx);\n\t\t\t}\n\t\t}\n\t}\n} \n\nint main()\n{\n\tB=read(),E=read(),P=read(),n=read(),m=read();\n\tint u,v;\n\tfor(int i=1;i<=m;++i) u=read(),v=read(),add(u,v),add(v,u);\n\tbfs(0);\n\tbfs(1);\n\tbfs(2);\n\tint ans=1e9;\n\tfor(int i=1;i<=n;++i) ans=min(ans,dis[0][i]*B+dis[1][i]*E+dis[2][i]*P);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1521196975,
        "uid": 36728,
        "name": "\u96e8\u5b63",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u505a\u8fc7\u76f8\u5f53\u7b80\u5355\u7684\u6700\u77ed\u8def\u597d\u9898\uff0c\u800c\u4e14\u8fd8\u662f\u84dd\u8272\u7684\u3002\n\n\u8bf4\u767d\u4e86\u5c31\u662f\u6700\u77ed\u8def\uff0c\u53d8\u4e00\u4e0b\u3002\n\nBessie\u548cElsie\u662f\u4e24\u5934USACOW\u7684\u8457\u540d\u725b~~\u9b3c\u90fd\u77e5\u9053~~\uff0c\u4ed6\u4eec\u653e\u7267\u7684\u65f6\u5019\uff0c\u5e0c\u671b\u82b1\u8d39\u5c3d\u91cf\u5c11\u7684\u529b\u6c14\u56de\u8c37\u4ed3\uff0c\u4ed6\u4eec\u81ea\u5df1\u8d70\u82b1\u8d39\u7684\u7cbe\u529b\u5355\u4f4d\u5206\u522b\u4e3ab\u548ce\uff0c\u4f46\u662f\u4ed6\u4eec\u53ef\u4ee5\u4e00\u4e2a\u80cc\u7740\u4e00\u4e2a\u4e00\u8d77\u8d70\u3002\u95ee\u82b1\u8d39\u6700\u5c0f\u7684\u529b\u91cf\u56de\u5230\u8c37\u4ed3\u3002\n\n### **\u9898\u89e3\uff1a**\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u95ee\u9898\u62c6\u6210\u4e09\u4e2a\u6700\u77ed\u8def\u95ee\u9898\uff0c\u4e00\u4e2a\u662fBessie\u7684\uff0c\u4e00\u4e2a\u662fElsie\u7684\uff0c\u8fd8\u6709\u4e00\u4e2a\u662f\u4e00\u4e2a\u80cc\u7740\u4e00\u4e2a\u7684\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u6240\u6709\u7684\u6700\u77ed\u8defdis\u6570\u7ec4\u91cc\u4e58\u4ee5\u4ed6\u4eec\u7684\u5355\u4f4d\u7684\u548c\u5c31\u662f\u4ed6\u4eec\u6240\u82b1\u8d39\u7684\u6700\u5c0f\u4f53\u529b\uff0c\u6240\u4ee5\u6211\u4eec\u8dd1\u5b8c\u4e09\u904d\u6700\u77ed\u8def\uff0c\u679a\u4e3e\u4e00\u4e0bdis\u6570\u7ec4\uff0c\u8bb0\u5f55\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5199\u4e09\u4e2a\u6700\u77ed\u8def\uff0c\u53ef\u4ee5\u8c03\u51fd\u6570\u65f6\u4f20\u8fdb\u53bb\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u8d77\u59cb\u70b9\uff0c\u8fd8\u6709\u5c31\u662f\u8fd9\u6b21\u8981\u64cd\u4f5c\u7684dis\u6570\u7ec4\uff0c\u6bd4\u5982\u7b2c\u4e00\u6b21\u6389disB\uff0c\u7b2c\u4e8c\u6b21disE\uff0c\u7b2c\u4e09\u6b21disP\u3002\u7b2c\u4e00\u6b21\u8d77\u59cb\u70b9\u4e3a1\uff0c\u7b2c\u4e8c\u6b21\u4e3a2\uff0c\u7b2c\u4e09\u6b21\u4e3an\uff0c\u5177\u4f53\u9898\u76ee\u4e2d\u5df2\u7ecf\u8bf4\u4e86\u3002\n\n**Bessie and Elsie start in fields 1 and 2, respectively. The barn resides in field N.**\n\n\u8fd9\u9898\u8fd8\u6ca1\u6709\u7ed9\u6570\u636e\u8303\u56f4\uff0c\u6211\u5c31\u662f\u5f00\u4e86$10^5$\uff0c\u5c31\u53ef\u4ee5\u8fc7\u3002\n\n\u7a0b\u5e8f\u770b\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u6ce8\u91ca\n\n\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\n\nusing namespace std;\n\nconst int N = 100005;\n\nstruct node {//\u7ed3\u6784\u4f53\u5199\u524d\u5411\u661f\n    int v, u, w;\n} pool[N];\n\nint b, e, p, n, m, nn;\nint head[N];\nint disB[N], disE[N], disP[N];\nint vis[N];\n\n\nvoid add(int u, int v, int w) {//\u524d\u5411\u661f\n    pool[++nn].v = v;\n    pool[nn].u = head[u];\n    pool[nn].w = w;\n    head[u] = nn;\n}\n\nvoid spfa(int s/*\u8d77\u59cb\u70b9*/, int dis[N]/*\u64cd\u4f5c\u7684dis*/) {//spfa\u51fd\u6570\n    for (int i = 1; i <= n; i++) dis[i] = 0x3f3f3f3f;//\u521d\u59cb\u5316\n    queue<int> q;\n    q.push(s);\n    vis[s] = 1;\n    dis[s] = 0;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        vis[u] = 0;\n        for (int i = head[u]; i > 0; i = pool[i].u)\n            if (dis[pool[i].v] > dis[u] + pool[i].w) {\n                dis[pool[i].v] = dis[u] + pool[i].w;\n                if (!vis[pool[i].v]) {\n                    q.push(pool[i].v);\n                    vis[pool[i].v] = 1;\n                }\n            }\n    }\n}\n\nint main() {\n    cin >> b >> e >> p >> n >> m;\n    for (int i = 1; i <= m; i++) {//\u65e0\u5411\u56fe\u5efa\u56fe\n        int u, v;\n        cin >> u >> v;\n        add(u, v, 1);\n        add(v, u, 1);\n    }\n    spfa(1, disB);//Bessie\u7684SPFA\n    spfa(2, disE);//Elsie\u7684SPFA\n    spfa(n, disP);//\u4e00\u8d77\u7684SPFA\n    int minn = 0x3f3f3f3f;//minn\u5b9a\u7684\u5927\u4e00\u70b9\n    for (int i = 1; i <= n; i++) {\n        minn = min(minn, disB[i] * b /*bessie\u4f53\u529b*/ + disE[i] * e /*Elsie\u4f53\u529b*/ + disP[i] * p/*together \u4f53\u529b*/);//\u6c42\u6700\u5c0f\u4f53\u529b\n    }\n    cout << minn << '\\n';//\u8f93\u51fa\n    return 0;\n}\n```\n\n\u770b\u849f\u84bb\u5199\u7684\u8fd9\u4e48\u8ba4\u771f\uff0c\u70b9\u4e2a\u8d5e\u518d\u8d70\u5457~\n",
        "postTime": 1594528074,
        "uid": 298325,
        "name": "Marshadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]Piggy Back S\u3011"
    },
    {
        "content": "# \u7b97\u6cd5\uff1a\u6700\u77ed\u8def\uff0b\u679a\u4e3e\n## \u9898\u76ee\u6982\u62ec\uff1a\n\nBessie \u5728 1 \u53f7\u70b9\uff0cElsie\u5728 2 \u53f7\u70b9\uff0c\u4e14\u79fb\u52a8\u4e00\u6b21\u7684\u4ee3\u4ef7\u5206\u522b\u4e3aa\u3001b\u3002\u4f46\u662f Bessie \u53ef\u4ee5\u80cc\u7740 Elsie \u8d70\u8def\uff08\u524d\u63d0\u662f\u5fc5\u987b\u76f8\u9047\uff09\uff0c\u4ee3\u4ef7\u53d8\u4e3ac\u3002\u6c42\uff1a Bessie \u548c Elsie \u90fd\u5230\u8fbe n \u53f7\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n## \u9898\u76ee\u5206\u6790\uff1a\n\n\u9898\u610f\u8fd8\u662f\u6bd4\u8f83\u6e05\u6670\u7684\uff0c\u4e00\u770b\u5c31\u662f\u6700\u77ed\u8def\u7684\u677f\u5b50\u9898\uff08\u4e0d\u662f\uff09\u3002\u7b97\u6cd5\u4e0d\u96be\uff0c\u96be\u5c31\u96be\u5728\u5982\u4f55\u5904\u7406\u3000Bessie\u3000\u548c\u3000Elsie\u3000\u4f55\u65f6\u76f8\u9047\uff0c\u6240\u4ee5\uff0c\u5904\u7406\u597d\u8fd9\u4e2a\u95ee\u9898\u662f\u89e3\u9898\u7684\u5173\u952e\u3002\n\n## \u89e3\u9898\u6280\u5de7\uff1a\n\n- \u4e00\u5f00\u59cb\u628a\u8fb9\u6743\u8d4b\u4e3a\uff11\uff0c\u8981\u4f7f\u7528\u65f6\u4e58\u4e00\u4e0b\u5404\u81ea\u7684\u4ee3\u4ef7\u5373\u53ef\uff0c\u4ece\u800c\u907f\u514d\u591a\u6b21\u5efa\u56fe\u5e26\u6765\u7684\u4e0d\u4fbf\u3002\n\n- \u5982\u679cB + E >= P\uff0c\u5219\u76f8\u9047\u540e\u66f4\u4f18\u3002\u4f9d\u6b21\u679a\u4e3e\u5728\u54ea\u4e2a\u70b9\u76f8\u9047\uff0c\u5e76\u6c42\u51fa\u6700\u5c0f\u7684\u4ee3\u4ef7\u5373\u53ef\u3002\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u5728\uff11\u3001\uff12\u3001\uff4e\u5206\u522b\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff08\u8fd9\u91cc\u63a8\u8350dijkstra\uff0c\u6bd5\u7adf\u51fa\u9898\u7ec4\u53ef\u4ee5~~\u8f7b\u677e~~\u5361\u6389spfa\uff09\uff0c\u6700\u540e\u6c42\u51fa\u6700\u5c0f\u7684dis1+dis2+disn\u5373\u53ef\u3002\n\n- \u5982\u679cB + E < P ,\u5c31\u8ba9P = E + B\uff08\u60f3\u60f3\u4e3a\u4ec0\u4e48\uff09\u3002\n\n- \u867d\u7136\u9898\u76ee\u8bf4\u76f8\u9047\u4e4b\u540e\u53ef\u4ee5\u5206\u5f00\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u8fd9\u6837\u64cd\u4f5c\u540e\u5176\u5b9e\u6839\u672c\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u3002\n\n## \u4ee3\u7801\u5982\u4e0b\uff1a\n\n``` cpp\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\u5927\u6cd5\u597d\n\nusing namespace std;\n\nconst int N = 1e7;\nconst int maxn = 200005;\nconst int maxm = 500005;\n\ntypedef long long ll; //\u505a\u9898\u7684\u597d\u4e60\u60ef\ntypedef long double ld;\n\n#define ms(a) memset(a, 0, sizeof(a))\n\nint n, m, a, b, c;//a\uff0cb\uff0cc\u5206\u522b\u662f\u9898\u76ee\u4e2d\u7684B\u3001E\u3001P\n\nstruct Edge{\n\tint nxt, to, w;\n}e[maxm];\n\nint head[maxn], cnt;\n\nvoid addEdge(int u, int v, int w) {\n\te[++cnt] = (Edge){head[u], v, w}, head[u] = cnt;\n}\n\nint vis[maxn], dis[maxn];\n\n//d1\u3001d2\u3001dn\u5206\u522b\u4e3a\u4ece1\u30012\u3001n\u51fa\u53d1\u7684\u6700\u77ed\u8def\nll d1[maxn], d2[maxn], dn[maxn], minn = 1e12;//\u4e0d\u6e05\u695a\uff1f\u6700\u597d\u7528long long\u5427\u2026\u2026\n\nvoid dijkstra(int s) {\n\tfor (int i = 1; i <= n; i++) dis[i] = 0x3f3f3f3f;\n\tpriority_queue< pair<int, int> > q;\n\tq.push(make_pair(0, s));\n\tdis[s] = 0;\n\twhile (q.size()) {\n\t\tint u = q.top().second;\n\t\tq.pop();\n\t\tif (vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif (dis[v] > dis[u] + e[i].w) {\n\t\t\t\tdis[v] = dis[u] + e[i].w;\n\t\t\t\tq.push(make_pair(-dis[v], v));\n\t\t\t}\n\t\t}\n\t}\n} \n\nint main() {\n\tcin >> a >> b >> c >> n >> m;\n\tif (c > a + b) c = a + b;\n\tfor (int i = 1; i <= m; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\taddEdge(u, v, 1);\n\t\taddEdge(v, u, 1);\n\t}\n\t//\u5269\u4e0b\u7684\u4e0d\u60f3\u6ce8\u91ca\u4e86\uff0c\u5927\u5bb6\u770b\u770b\u89e3\u9898\u6280\u5de7\u5c31\u660e\u767d\u4e86\n\tdijkstra(1);\n\tfor (int i = 1; i <= n; i++) d1[i] = (ll)dis[i] * a;\n\tms(vis);\n\tdijkstra(2);\n\tfor (int i = 1; i <= n; i++) d2[i] = (ll)dis[i] * b;\n\tms(vis);\n\tdijkstra(n);\n\tfor (int i = 1; i <= n; i++) dn[i] = (ll)dis[i] * c;\n\tfor (int i = 1; i <= n; i++) \n\t\tif (d1[i] + d2[i] + dn[i] < minn) minn = d1[i] + d2[i] + dn[i];\n\tcout << minn;\n\treturn 0;\n}\n```\n\n# \u611f\u8c22\uff01",
        "postTime": 1565177265,
        "uid": 127608,
        "name": "My_666",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u8981\u660e\u767d\uff1a\u5982\u679c\u4e24\u5934\u725b\u80cc\u7740\u8d70\u4e86\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u76f4\u63a5\u8fd9\u6837\u5b50\u8d70\u5230\u7ec8\u70b9\u4e86\u3002\n\u56e0\u4e3a\u5982\u679c\u8d70\u8d70\u505c\u505c\uff0c\u6700\u540e\u52a0\u8d77\u6765\u7684\u80fd\u91cf\u4e0e\u521a\u624d\u6240\u8bf4\u7684\u503c\u662f\u4e00\u6837\u7684\u3002\n\u56e0\u6b64\u95ee\u9898\u5c31\u8f6c\u6362\u6210\u4e86\uff1a\u4e24\u5934\u725b\u5206\u522b\u4ece1\uff0c2\u4e24\u70b9\u8d70\u5230\u4e00\u70b9\uff0c\u518d\u4ece\u8fd9\u4e00\u70b9\u4e24\u725b\u5408\u4e8c\u4e3a\u4e00\u7528P\u7684\u80fd\u91cf\u8d70\u5230N\u8fd9\u4e2a\u7ec8\u70b9\u3002\n\u6240\u4ee5\u95ee\u9898\u6700\u540e\u5c31\u53d8\u6210\u4e86\u4e09\u4e2a\u6700\u77ed\u8def\n\u800c\u89c2\u5bdf\u53d1\u73b0N<=40000,\u6240\u4ee5\u5c31\u53ea\u80fd\u7528SPFA\u6216Dijkstra+\u5806\u4f18\u5316\n\u800c\u8fd8\u6709\u4e00\u70b9\u5f88\u96be\u60f3\u5230\uff0c\u5c31\u662f\u90a3\u4e2a\u5207\u6362\u7684\u5730\u70b9\u53ea\u6709\u77e5\u9053\u4e86\u624d\u80fd\u8fdb\u884c\u7b2c\u4e09\u4e2a\u6700\u77ed\u8def\uff0c\u800c\u5982\u679c\u5148\u679a\u4e3e\u90a3\u4e2a\u70b9\u5728\u8fdb\u884c\u6700\u77ed\u8def\u7684\u8bdd\uff0c\u662f\u80af\u5b9a\u4f1a\u8d85\u65f6\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53c8\u8981\u6362\u4e2a\u601d\u8def\uff1a\n\u56e0\u4e3a\u6240\u6709\u7684\u70b9\u4ed6\u4eec\u90fd\u662f\u8981\u8d70\u5230N\u8fd9\u4e2a\u70b9\u53bb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u505a\u4e00\u4e2a\u4eceN\u5f00\u59cb\u7684\u6700\u77ed\u8def\uff0c\u90a3\u4e48\u4ece\u4efb\u610f\u4e00\u70b9\u5230N\u7684\u8ddd\u79bb\u5c31\u90fd\u77e5\u9053\u4e86\uff0c\u6240\u4ee5\u6700\u540e\u53ea\u8981\u679a\u4e3e\u90a3\u4e2a\u5207\u6362\u70b9\uff0c\u7136\u540e\u518d\u6c42\u51fa\u7b2c\u4e00\u5934\u5976\u725b\u4ed6\u90a3\u4e2a\u70b9\u7684\u80fd\u91cf\u4e0e\u7b2c\u4e8c\u5934\u5976\u725b\u5230\u90a3\u4e2a\u70b9\u7684\u80fd\u91cf\u4e0e\u4ece\u90a3\u4e2a\u70b9\u5230\u7ec8\u70b9\u7684\u603b\u548c\u6c42\u4e2a\u6700\u5c0f\u503c\u5c31\u662f\u95ee\u9898\u7684\u7b54\u6848\u4e86\u3002\n```pascal\nvar min,cnt,x1,x2,x3,n,m,x,y,t,w:int64;\ni:longint;\na,b,d,f1,f2,f3,f4:array[0..1000001] of int64;\nf5:array[0..1000001] of boolean;\nprocedure add(x,y:longint);\nbegin\ncnt:=cnt+1;a[cnt]:=y;b[cnt]:=d[x];d[x]:=cnt;\nend;\nbegin\nreadln(x1,x2,x3,n,m);\nfor i:=1 to m do\n   begin\n   readln(x,y);\n   add(x,y);add(y,x);\n   end;\nfillchar(f5,sizeof(f5),0);\nt:=1;w:=1;f1[1]:=0;f4[1]:=1;f5[1]:=true;\nwhile t<=w do\n   begin\n   i:=d[f4[t]];\n   while i>0 do\n       begin\n       if f5[a[i]]=false then\n          begin\n          f5[a[i]]:=true;\n          f1[a[i]]:=f1[f4[t]]+1;\n          w:=w+1;f4[w]:=a[i];\n          end;\n       i:=b[i];\n       end;\n   t:=t+1;\n   end;\nfillchar(f5,sizeof(f5),0);\nt:=1;w:=1;f2[2]:=0;f4[1]:=2;f5[2]:=true;\nwhile t<=w do\n   begin\n   i:=d[f4[t]];\n   while i>0 do\n       begin\n       if f5[a[i]]=false then\n          begin\n          f5[a[i]]:=true;\n          f2[a[i]]:=f2[f4[t]]+1;\n          w:=w+1;f4[w]:=a[i];\n          end;\n       i:=b[i];\n       end;\n   t:=t+1;\n   end;\nfillchar(f5,sizeof(f5),0);\nt:=1;w:=1;f3[n]:=0;f4[1]:=n;f5[n]:=true;\nwhile t<=w do\n   begin\n   i:=d[f4[t]];\n   while i>0 do\n       begin\n       if f5[a[i]]=false then\n          begin\n          f5[a[i]]:=true;\n          f3[a[i]]:=f3[f4[t]]+1;\n          w:=w+1;f4[w]:=a[i];\n          end;\n       i:=b[i];\n       end;\n   t:=t+1;\n   end;\nmin:=maxlongint*maxlongint div 4;\nfor i:=1 to n do\n   if min>x1*f1[i]+x2*f2[i]+x3*f3[i] then\n      min:=x1*f1[i]+x2*f2[i]+x3*f3[i];\nwriteln(min);\nend.\n```",
        "postTime": 1541752846,
        "uid": 77615,
        "name": "OIerAlbedo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "#### \u778e\u626f\u6de1\n\u5efa\u8bae\u53bb[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/bljfy/p/9494330.html)\u9605\u8bfb\uff0c\u4ee5\u4fbf\u6709\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\n\n#### \u89e3\u9898\u601d\u8def\n\n\u770b\u5230\u4e0b\u9762\u5f88\u591a\u4eba\u90fd\u5728\u8bf4\u4ec0\u4e48\u9047\u5230\u4e86\u4e4b\u540e\u8981\u4e0d\u8981\u80cc\u7740\u8d70\uff0c\u5176\u5b9e\u6839\u672c\u4e0d\u9700\u8981\uff0c\u540c\u6837\u7684\u6211\u4e5f\u662f\u8dd1\u4e86\u4e09\u904d$SPFA$\uff0c\u6c42\u51fa\u4e86\u4ee5$1$\u4e3a\u8d77\u70b9\u5230\u4e2a\u70b9\u7684$dist$\uff0c\u548c\u4ee5$2$\u4e3a\u8d77\u70b9\u5230\u4e2a\u70b9\u7684$dist$\uff0c\u8fd8\u6709\u4ee5$n$\u4e3a\u8d77\u70b9\u5230\u4e2a\u70b9\u7684$dist$\u3002\n\n\u4e4b\u540e\u76f4\u63a5\u679a\u4e3e\u4e24\u5934\u725b\u5728\u54ea\u91cc\u76f8\u9047\uff0c\u76f8\u9047\u4e4b\u540e\u4e00\u8d77\u80cc\u7740\u8d70\u7684\u8def\u7a0b\u4e58\u4ee5$p+$\u76f8\u9047\u4e4b\u524d$B$\u8d70\u7684\u8ddd\u79bb\u4e58\u4ee5$b+$\u76f8\u9047\u4e4b\u524d$E$\u8d70\u7684\u8ddd\u79bb\u4e58\u4ee5$e$\uff0c\u53bb\u4e00\u4e2a\u6700\u5c0f\u7684\u8fd9\u6837\u7684\u503c\u5c31\u662f\u7b54\u6848\u3002\n\n\u5173\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff0c\u56e0\u4e3a\u4f60\u628a\u6bcf\u4e2a\u70b9\u90fd\u679a\u4e3e\u4e86\u4e00\u904d\uff0c\u5373\u4f7f\u5b58\u5728$p>b+e$\u7684\u60c5\u51b5\uff0c\u90a3\u8fd9\u79cd\u60c5\u51b5\u5c31\u7b49\u4ef7\u4e8e\u4e24\u5934\u5976\u725b\u5728$n$\u70b9\u76f8\u9047\u3002\n\n#### \u9644\u4e0a\u4ee3\u7801\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\nconst int maxn = 8e4+3, INF = 2147483647;\nint b, e, p, n, m, fir[maxn], nxt[maxn], u[maxn], v[maxn], cnt;\nint dist_n[maxn], dist_1[maxn], dist_2[maxn], w[maxn], Ans = INF;\nbool vis[maxn];\ninline int read() {\n\tint x = 0, f = 1; char c;\n\twhile (c < '0' || c > '9') {if(c == '-') f = -1; c = getchar();}\n\twhile (c <= '9' && c >= '0') {x = x*10 + c-'0'; c = getchar();}\n\treturn x * f;\n}\ninline void addedge(int x, int y, int z) {\n\tnxt[++cnt] = fir[x];\n\tfir[x] = cnt;\n\tu[cnt] = x, v[cnt] = y, w[cnt] = z;\n}\ninline void SPFA(int s, int *dist) {\n\tstd::queue<int> Q;\n\tstd::memset(vis, 0, sizeof(vis));\n\tstd::fill(dist+1, dist+1+n, INF);\n\tvis[s] = 1, dist[s] = 0;\n\tQ.push(s);\n\tint x, k;\n\twhile (!Q.empty()) {\n\t\tx = Q.front(), Q.pop();\n\t\tint k = fir[x];\n\t\twhile (k != -1) {\n\t\t\tif(dist[v[k]] > dist[u[k]] + w[k]) {\n\t\t\t\tdist[v[k]] = dist[u[k]] + w[k];\n\t\t\t\tif(!vis[v[k]]) Q.push(v[k]);\n\t\t\t}\n\t\t\tk = nxt[k];\n\t\t}\n\t\tvis[x] = 0;\n\t}\n}\nint main() {\n\tb = read(), e = read(), p = read(), n = read(), m = read();\n\tstd::memset(fir, -1, sizeof(fir));\n\tint x, y, z = 1;\n\tfor(register int i=1; i<=m; i++) {\n\t\tx = read(), y = read();\n\t\taddedge(x, y, z), addedge(y, x, z);\n\t}\n\tSPFA(1, dist_1), SPFA(2, dist_2), SPFA(n, dist_n);\n\tfor(int i=1; i<=n; i++)\n\t\tAns = std::min(Ans, dist_1[i] * b + dist_2[i] * e + dist_n[i] * p);\n\tprintf(\"%d\", Ans);\n}\n```",
        "postTime": 1534496933,
        "uid": 60941,
        "name": "\u5954\u6ce2\u513f\u9738",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u8fd9\u662f\u4e00\u9053\u6700\u77ed\u8def\u7684\u9898\u76ee\uff0c\u7136\u800c\u8981\u6c423\u904d\u6700\u77ed\u8def\u3002\n\nTips\uff1a\u53ef\u4ee5\u5c06\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165spfa()\u4e2d\u3002\n\n\u7528SPFA\u6c42\u51fab\u3001e\u3001p\u7684\u5355\u6e90\u6700\u77ed\u8defdb[]\u3001de[]\u3001dp[]\u3002\n\n\u7136\u540e\u66b4\u529b\u679a\u4e3e\u5979\u4eec\u76f8\u9047\u7684\u70b9\uff0c\u66f4\u65b0\u7b54\u6848\uff0c\u5373ans=min(b\\*db[i]+e\\*de[i]+p\\*dp[i])\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint b,e,p,n,m;\n\n#define MAXN 100000\n\nvector<int> edge[MAXN],we[MAXN];\nint db[MAXN],de[MAXN],dp[MAXN],inque[MAXN];\n\nvoid spfa(int x,int *d)\n{\n    queue<int> q;\n    q.push(x);\n    for(int i=1;i<=n;++i)\n    {\n        d[i]=100000;\n    }\n    d[x]=0;\n    memset(inque,false,sizeof(inque));\n    inque[x]=true;\n    do\n    {\n        int u=q.front();\n        q.pop();\n        inque[u]=false;\n        for(unsigned i=0;i<edge[u].size();++i)\n        {\n            int v=edge[u][i],w=we[u][i];\n            if(d[v]>d[u]+w)\n            {\n                d[v]=d[u]+w;\n                if(!inque[v])\n                {\n                    inque[v]=true;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    while(!q.empty());\n}\n\nint main()\n{\n    scanf(\"%d%d%d%d%d\",&b,&e,&p,&n,&m);\n    for(int i=1;i<=m;++i)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        edge[u].push_back(v);\n        we[u].push_back(1);\n        edge[v].push_back(u);\n        we[v].push_back(1);\n    }\n    spfa(1,db);\n    spfa(2,de);\n    spfa(n,dp);\n    int ans=2147483647;\n    for(int i=1;i<=n;++i)\n    {\n        ans=min(ans,b*db[i]+e*de[i]+p*dp[i]);\n    }\n    printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1504914993,
        "uid": 30413,
        "name": "ez\u043eixx130",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u3010\u5206\u6790\u3011\u6700\u77ed\u8def\u5927\u6c34\u9898\u3002\u5148\u7528SPFA\u6c423\u6b21\u6700\u77ed\u8def\uff0c\u7b2c\u4e00\u6b21\u662f\u725bB\u4ece\u4e00\u53f7\u4ed3\u5e93\u4e3a\u8d77\u59cb\u70b9\u7684\u5355\u6e90\u6700\u77ed\u8defdb[]\uff0c\u7b2c\u4e8c\u6b21\u662f\u725bE\u4ece\u4e8c\u53f7\u4ed3\u5e93\u4e3a\u8d77\u59cb\u70b9\u7684\u5355\u6e90\u6700\u77ed\u8defde[]\uff0c\u7b2c\u4e09\u6b21\u662f\u4ecen\u53f7\u4ed3\u5e93\u4e3a\u8d77\u59cb\u70b9\u5012\u8fc7\u6765\u6c42\u7684\u5355\u6e90\u6700\u77ed\u8defdp[]\u3002\u7136\u540e\u5c31\u7c7b\u4f3c\u4e8eDP\u4e86\uff1a\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4ed3\u5e93\u4e3a\u9876\u70b9i\uff0c\u6bcf\u6b21\u8ba1\u7b97db[i]+de[i]+dp[i]\uff0c\u610f\u601d\u662f\u725bB\u5355\u72ec\u5230\u8fd9\u4e2a\u9876\u70b9\u6700\u77ed\u8def+\u725bE\u5355\u72ec\u5230\u8fd9\u4e2a\u9876\u70b9\u6700\u77ed\u8def+\u7ec8\u70b9\u4ed3\u5e93n\u5230\u8fd9\u4e2a\u9876\u70b9\u6700\u77ed\u8def\uff08\u5230\u8fbe\u8fd9\u4e2a\u9876\u70b9i\u4e4b\u540e\u5c31\u53ef\u4ee5\u80cc\u7740\u8d70\u4ee5\u81f3\u4e8e\u53ea\u9700\u8981\u82b1\u8d39p\u7684\u4f53\u529b\u4e86\uff09\uff0c\u7136\u540e\u6253\u64c2\u53f0\u6bd4\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u3010\u4ee3\u7801\u3011\n\n\n\n    \n        \n     \n    \n    \n    \n    \n```cpp\n#include<iostream>\n#include<fstream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<vector>\n#include<queue>\n#include<deque>\n#include<utility>\n#include<map>\n#include<set>\n#include<cmath>\n#include<cstdlib>\n#include<ctime>\n#include<functional>\n#include<sstream>\n#include<cstring>\n#include<bitset>\n#include<stack>\nusing namespace std;\nint b,e,p,n,m,x,y,z,s,ans;\nstruct sdt\n{\n    int to,w;\n}v;\nint d[40005],db[40005],de[40005],dp[40005];\nbool vis[40005];\nvector<sdt>cp[40005];\nvector<pair<int,int> >rec;\nvoid spfa(int st)\n{\n    memset(vis,0,sizeof(vis));\n    for(int i=1;i<=n;i++)d[i]=2147483647;\n    queue<int>q;\n    d[st]=0;\n    q.push(st);\n    vis[st]=1;\n    while(!q.empty())\n    {\n        int k=q.front();\n        q.pop();\n        vis[k]=0;\n        for(int i=0;i<cp[k].size();i++)\n        {\n            v=cp[k][i];\n            if(d[k]!=2147483647 && d[v.to]>d[k]+v.w)\n            {\n                d[v.to]=d[k]+v.w;\n                if(!vis[v.to])\n                {\n                    vis[v.to]=1;\n                    q.push(v.to);\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d%d%d\",&b,&e,&p,&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        rec.push_back(make_pair(x,y));\n        v.to=y;\n        v.w=b;\n        cp[x].push_back(v);\n        v.to=x;\n        v.w=b;\n        cp[y].push_back(v);\n    }\n    spfa(1);\n    for(int i=1;i<=n;i++)\n    {\n        db[i]=d[i];\n        cp[i].clear();\n    }\n    for(int i=0;i<rec.size();i++)\n    {\n        x=rec[i].first;\n        y=rec[i].second;\n        v.to=y;\n        v.w=e;\n        cp[x].push_back(v);\n        v.to=x;\n        v.w=e;\n        cp[y].push_back(v);\n    }\n    spfa(2);\n    for(int i=1;i<=n;i++)\n    {\n        de[i]=d[i];\n        cp[i].clear();\n    }\n    for(int i=0;i<rec.size();i++)\n    {\n        x=rec[i].first;\n        y=rec[i].second;\n        v.to=y;\n        v.w=p;\n        cp[x].push_back(v);\n        v.to=x;\n        v.w=p;\n        cp[y].push_back(v);\n    }\n    spfa(n);\n    for(int i=1;i<=n;i++)\n    {\n        dp[i]=d[i];\n        cp[i].clear();\n    }\n    ans=2147483647;\n    for(int i=1;i<=n;i++)\n    {\n        ans=min(ans,db[i]+de[i]+dp[i]);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1480861383,
        "uid": 16817,
        "name": "winmt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "## \u5f00\u5fc3\u5f00\u5fc3\u5f00\u5fc3\n### \u7b2c\u4e00\u6b21\u84dd\u9898\u4e00\u904d\u8fc7\uff01\uff01\uff01\u54e6\u8036\u3002\n(\u6076\u5fc3\u7684\u662f\u82f1\u6587\uff0c\u4e0d\u77e5\u9053\u6570\u7ec4\u8981\u5f00\u591a\u5927\u3002\u3002)\n\n### \u6b63\u9898\uff1a\n\u9996\u5148\u7ffb\u8bd1\u4e00\u4e0b\u9898\n```\n\u7ed9\u51fa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0cBessie\u4ece1\u53f7\u4ed3\u5e93\u8d70\u5230n\u53f7\uff08\u6bcf\u6b21\u82b1\u8d39B\uff09\uff0c Elsie\u4ece2\u53f7\u4ed3\u5e93\u8d70\u5230n\u53f7\uff08\u6bcf\u6b21\u82b1\u8d39E\uff09\uff0c\u5982\u679c\u4e24\u4e2a\u4eba\u8d70\u540c\u4e00\u6761\u8def\u82b1\u8d39P\uff0c\u6c42\u603b\u82b1\u8d39\u6700\u5c0f\u3002\n\u8f93\u5165B\uff0cE\uff0cP\uff0cn\uff0cm\u548cm\u6761\u8fb9\u7684\u8054\u901a\u60c5\u51b5\n\u8f93\u51fa\u6700\u5c11\u82b1\u8d39\u3002\n```\n\u90a3\u4e48\u6765\u770b\u4e00\u4e0b\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u77e5\u9053\u4ed6\u4eec\u662f\u5426\u9700\u8981\u76f8\u9047\uff0c\u6216\u8005\u8bf4\u5728\u90a3\u4e2a\u70b9\u76f8\u9047\uff0c\u4f46\u662f\u6709\u4e00\u70b9\u662f\u660e\u786e\u7684\uff0c\u5982\u679c\u8bf4\u5728\u76f8\u9047\u540e\u80cc\u7740\u8d70\u4ee3\u4ef7\u5c0f\uff0c\u90a3\u4e48\uff0c\u5f80\u540e\u5c31\u4e00\u5b9a\u662f\u4e00\u76f4\u80cc\u7740\u7684\uff0c\u800c\u4e14\u5728\u8d70\u5230\u76f8\u9047\u7684\u5730\u70b9\u4e4b\u524d\u4e00\u5b9a\u662f\u81ea\u5df1\u8d70\u81ea\u5df1\u7684\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u8981\u8003\u8651\u4ed6\u4eec\u5728\u6bcf\u4e00\u4e2a\u70b9\u76f8\u9047\u7684\u60c5\u51b5\uff0c\u800c\u4e14\u5df2\u77e5\u5bf9\u4e0d\u540c\u7684\u60c5\u51b5\u6765\u770b\uff0c\u8fb9\u6743\u4e00\u5b9a\u76f8\u540c\uff0c\u6240\u4ee5\u53ea\u7528\u6c42\u51fa\u9700\u8981\u7ecf\u8fc7\u7684\u8fb9\u6570\uff0c\u518d\u4e58\u4ee5\u5bf9\u5e94\u60c5\u51b5\u5373\u53ef\u3002\n\nso\uff0c\u5728\u8d70\u5230\u76f8\u9047\u70b9\u4e4b\u524d\uff0c\u4e24\u4eba\u4e00\u5b9a\u8d70\u7684\u662f\u5bf9\u5e94\u6700\u77ed\u8def\u624d\u80fd\u51cf\u5c0f\u8bdd\u8d39\uff0c\u6240\u4ee5\u8bf4\u53ef\u4ee5\u7684\u51famin1=min(dis1[i]*b+dis2[i]*e+dis3[i]*p);\u8fd9\u6837\u5f97\u51fa\u7684\u4e00\u5b9a\u662f\u8d70\u8fd9\u4e2a\u70b9\u7684\u6700\u5c0f\u503c\u3002\u4e0d\u76f8\u9047\u7684\u60c5\u51b5\u5373\u4e3a\u5728\u70b9n\u76f8\u9047\u3002\n\n\u90a3\u4e48\uff0c\u8d70\u4e09\u904d\u6700\u77ed\u8def\uff0c\u5206\u522b\u6c42\u51fa\u70b91,\u70b92\uff0c\u70b9n\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5373\u53ef\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint b,e,p,n,m,disA[40001],disB[40001],disC[40001],head[40001];\nint min1=2147483647,num;\nbool dian[40001];\nstruct edge{\n\tint to,next,w;\n}f[1000000];\nstruct node{\n\tint hao,dis1;\n\tbool operator<(const node &x)const{\n\t\treturn x.dis1<dis1;\n\t}\n};\nvoid add(int a,int b,int c){\n\tf[++num].to=b;\n\tf[num].w=c;\n\tf[num].next=head[a];\n\thead[a]=num;return;\n}\nvoid dijstra(int fr){\n\tpriority_queue< node >q;\n\tmemset(disA,0x3f,sizeof(disA));\n\tmemset(dian,0,sizeof(dian));\n\tdisA[fr]=0;\n\tq.push((node){fr,0});\n\twhile(!q.empty()){\n\t\tint x=q.top().hao;q.pop();\n\t\tif(dian[x])continue;\n\t\tdian[x]=1;\n\t\tfor(int i=head[x];i;i=f[i].next){\n\t\t\tint y=f[i].to;\n\t\t\tif(disA[y]>disA[x]+f[i].w){\n\t\t\t\tdisA[y]=disA[x]+f[i].w;\n\t\t\t\tq.push((node){y,disA[y]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tcin>>b>>e>>p>>n>>m;\n\tfor(int a,c,i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a,&c);\n\t\tadd(a,c,1);add(c,a,1);\n\t}\n\tdijstra(2);\n\tfor(int i=1;i<=n;i++)disB[i]=disA[i];\n\tdijstra(n);\n\tfor(int i=1;i<=n;i++)disC[i]=disA[i];\n\tdijstra(1);\n\tfor(int i=1;i<=n;i++)\n\t\tmin1=min(min1,disA[i]*b+disB[i]*e+disC[i]*p);\n\tcout<<min1<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1578545937,
        "uid": 287225,
        "name": "thelast",
        "ccfLevel": 0,
        "title": "P3110 [USACO14DEC]\u9a6e\u8fd0Piggy Back"
    },
    {
        "content": "\u5728\u5b66\u6821\u7684\u6a21\u62df\u8d5b\u4e0a\u505a\u4e86\u7c7b\u4f3c\u7684\u9898\uff0c\u4e8e\u662f\u6765\u5199\u4e00\u4e0b\u9898\u89e3\n\n\u672c\u849f\u84bb\u7684\u601d\u8def\uff1a\n\n\u8fd4\u56de\u8c37\u4ed3\u7684\u60c5\u51b5\u6709\u4e24\u79cd\n\n\u4e00\u662f\u4e24\u5934\u725b\u5747\u5355\u72ec\u8d70\n\n\u4e8c\u662f\u5728\u67d0\u4e2a\u70b9\u8fdb\u884c\u9a6e\u8fd0\n\n\u53ef\u4ee5\u5148\u4ece1\u70b9\u548c2\u70b9\u8dd1\u4e24\u904d\u6700\u77ed\u8def\n\n\u6c42\u51fa\u4e24\u5934\u725b\u5747\u5355\u72ec\u8d70\u65f6\u7684\u82b1\u8d39\n\n\u5e76\u5b58\u4e0b\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n\n\u7136\u540e\u4ecen\u70b9\u8dd1\u4e00\u904d\u6700\u77ed\u8def\n\n\u6c42\u51fa\u4ecen\u70b9\u5230i\u70b9\u7684\u6700\u77ed\u8def\n\n\uff08\u4e5f\u5c31\u662fi\u70b9\u5230n\u70b9\u7684\u6700\u77ed\u8def\uff09\n\n\u5e76\u904d\u5386\u4e24\u5934\u725b\u5206\u522b\u5355\u72ec\u8d70\u5230\u4e00\u4e2a\u70b9\u518d\u9a6e\u8fd0\u5230n\u70b9\u7684\u6700\u4f18\u89e3\n\n\u4e0e\u4e24\u5934\u725b\u5747\u5355\u72ec\u8d70\u7684\u6700\u77ed\u8def\u8fdb\u884c\u6bd4\u8f83\n\n\u627e\u5230\u8f83\u5c0f\u503c\u5373\u53ef\u5f97\u5230\u6700\u4f18\u89e3\n\n\u672c\u849f\u84bb\u4f7f\u7528\u4e86\u5806\u4f18\u5316\u7684Dijkstra\n\n~~SPFA\u88ab\u5361\u5230\u4e0d\u6562\u7528\u4e86~~\n\n\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n    int to,w;\n};\nvector<node>g[40010];//\u672c\u849f\u84bb\u53ea\u4f1avector\u5efa\u56fe\nstruct point\n{\n    int d,dis;\n    bool operator<(const point b)const//\u8fd0\u7b97\u7b26\u91cd\u8f7d\n    {\n        return dis>b.dis;\n    }\n};\nint r,s,p,n,m;\nint ans1,ans2=1e9;\nint dis[40010],dis1[40010],dis2[40010],dis3[40010];\nvoid pri_dij(int s)//\u5806\u4f18\u5316Dijkstra\u6a21\u677f\n{\n    priority_queue<point>q;\n    bool vis[40010]={0};\n    memset(dis,0x3f,sizeof(dis));\n    dis[s]=0;\n    q.push({s,0});\n    while(!q.empty())\n    {\n        point p=q.top();\n        q.pop();\n        long long u=p.d;\n        if(vis[u])\n        {\n            continue;\n        }\n        vis[u]=1;\n        for(int j=0; j<g[u].size();j++) \n        { \n            long long v=g[u][j].to,w=g[u][j].w;\n            if(!vis[v]&&dis[v]>dis[u]+w)\n            {\n                dis[v]=dis[u]+w;\n                q.push({v,dis[v]});\n            }\n        }\n    }\n}\nint main()\n{\n\tscanf(\"%d%d%d%d%d\",&r,&s,&p,&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tnode tmp;\n\t\ttmp.to=v;\n\t\ttmp.w=1;//\u7531\u4e8e\u6743\u503c\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u91cc\u5148\u5b58\u8fb9\u6570\n\t\tg[u].push_back(tmp);\n\t\ttmp.to=u;\n\t\tg[v].push_back(tmp);//\u5b58\u65e0\u5411\u56fe\n\t}\n\tpri_dij(1);//\u4ece1\u70b9\u8dd1\u6700\u77ed\u8def\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis1[i]=dis[i]*r;//\u6c42\u51fa\u7b2c\u4e00\u53ea\u725b\u5230i\u70b9\u7684\u6700\u77ed\u8def\n\t}\n\tpri_dij(2);//\u4ece2\u70b9\u8dd1\u6700\u77ed\u8def\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis2[i]=dis[i]*s;//\u6c42\u51fa\u7b2c\u4e8c\u53ea\u725b\u5230i\u70b9\u7684\u6700\u77ed\u8def\n\t}\n\tans1=dis1[n]+dis2[n];//\u5148\u5b58\u4e0b\u5355\u72ec\u8d70\u65f6\u7684\u6700\u5c0f\u82b1\u8d39\n\tpri_dij(n);//\u4ecen\u70b9\u8dd1\u6700\u77ed\u8def\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis3[i]=dis[i]*p;//\u6c42\u51fa\u4ecei\u70b9\u9a6e\u8fd0\u81f3n\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\n\t\tans2=min(ans2,dis1[i]+dis2[i]+dis3[i]);//\u5b58\u4e0b\u4e24\u53ea\u725b\u5148\u8d70\u5230i\u70b9\uff0c\u518d\u9a6e\u8fd0\u81f3n\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\n\t}\n\tcout<<min(ans1,ans2);//\u8f93\u51fa\u5355\u72ec\u8d70\u65f6\u548c\u6709\u9a6e\u8fd0\u4e2d\u7684\u8f83\u5c0f\u503c\n\treturn 0;\n}\n```\n",
        "postTime": 1566986589,
        "uid": 116067,
        "name": "Create_Random",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]Piggy Back S\u3011"
    },
    {
        "content": "### \u5806\u4f18$Dijkstra$\n\n\u770b\u5230\u9898\uff0c\u53d1\u73b0\u5f88\u660e\u663e\uff0c\u662f\u6700\u77ed\u8def\u3002\u90a3\u4e48\uff0c\u600e\u6837\u6c42\u5462\uff08\u6bd5\u7adf\u4e0d\u662f[\u6a21\u677f](https://www.luogu.org/problemnew/show/P4779)\uff09\n\n\u9996\u5148\uff0c\u5982\u679c\u4e24\u4eba\u4e0d\u80fd\u80cc\u7740\u8d70\uff0c\u90a3\u4e48\u76f4\u63a5\u4ee5\u4e24\u4eba\u4f4d\u7f6e\u4e3a\u6e90\u70b9\u8dd1\u4e24\u6b21$Dijkstra$\uff0c\u7b54\u6848\u76f8\u52a0\u5c31\u597d\u4e86\n\n\u90a3\u4e48\u5982\u679c\u5141\u8bb8\u80cc\u7740\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u8ba9$p=min(p,b+e)$\uff0c\u8fd9\u6837**\u53ea\u8981\u4e24\u4eba\u76f8\u9047\uff0c\u5c31\u4e0d\u4f1a\u5206\u5f00**\n\n\u8003\u8651\u518d\u8dd1\u4e00\u904d$Dijkstra$\uff0c\u53ea\u4e0d\u8fc7\u4ee5\u8c37\u4ed3\u4e3a\u6e90\u70b9\u3002\u4e4b\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u4e24\u4eba\u76f8\u9047\u7684\u5730\u65b9\uff0c\u8ba1\u7b97\u7b54\u6848\u5373\u53ef\u3002\n\n#### \u4e00\u4e9b\u5c0f\u63d0\u793a\uff1a\n- \u4e0d\u786e\u5b9a\u81ea\u5df1\u5199\u7684$Dijkstra$\u5bf9\u4e0d\u5bf9\u7684\uff0c\u53ef\u4ee5\u53bb[P4779](https://www.luogu.org/problemnew/show/P4779)\u63d0\u4ea4\u4e00\u4e0b\u8bd5\u8bd5~\n- $SPFA$\uff0c$Dijkstra$\uff0c\u751a\u81f3$BFS$\u90fd\u80fd\u8fc7\n- \u8bb0\u5f97\u6e05\u7a7a\u6570\u7ec4\uff01\u8bb0\u5f97\u6e05\u7a7a\u6570\u7ec4\uff01\u8bb0\u5f97\u6e05\u7a7a\u6570\u7ec4\uff01\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4ee3\u7801\u4e86~\n\n$code:$\n```\n#include<iostream>\n#include<queue>\n#include<functional>\n#include<utility>\n#include<cstring>\nusing namespace std;\nstruct edge{\n\tint v,next;\n} a[80005];\nint head[40005],cnt=0;\nlong long dis[3][40005];\nbool vis[40005];\nvoid add_edge(int u,int v){\n\tcnt++;a[cnt].next=head[u];\n\ta[cnt].v=v;head[u]=cnt;\n}//\u94fe\u5f0f\u524d\u5411\u661f\nvoid dijkstra(int val,int opt,int u){\n\tmemset(dis[opt],0x7f,sizeof(dis[opt]));\n\tmemset(vis,0,sizeof(vis));\n\tpriority_queue<pair<long long,int>,vector<pair<long long,int> >,greater<pair<long long,int> > > pq;\n\tpq.push(make_pair(0,u));\n\tdis[opt][u]=0;pair<long long,int> v;\n\twhile(!pq.empty()){\n\t\tv=pq.top();pq.pop();\n\t\tif(vis[v.second])continue;\n\t\tvis[v.second]=1;\n\t\tfor(int i=head[v.second];i;i=a[i].next){\n\t\t\tif(dis[opt][a[i].v]>v.first+val&&!vis[a[i].v]){\n\t\t\t\tdis[opt][a[i].v]=v.first+val;\n\t\t\t\tpq.push(make_pair(dis[opt][a[i].v],a[i].v));\n\t\t\t}//\u677e\u5f1b\n\t\t}\n\t}\n}//Dijkstra\nint main(){\n\tint b,e,p,n,m,u,v;\n\tcin>>b>>e>>p>>n>>m;p=min(p,b+e);\n\tfor(int i=0;i<m;i++){\n\t\tcin>>u>>v;add_edge(u,v);add_edge(v,u);\n\t}\n\tdijkstra(b,0,1);\n\tdijkstra(e,1,2);\n\tdijkstra(p,2,n);//\u4e09\u6b21\u6700\u77ed\u8def\n\tlong long ans=0x7f7f7f7f;\n\tfor(int i=1;i<=n;i++)\n\t\tans=min(ans,dis[0][i]+dis[1][i]+dis[2][i]);//\u8ba1\u7b97\u7b54\u6848\n\tcout<<ans;\n\treturn 0;\n}\n\n```",
        "postTime": 1556013797,
        "uid": 55959,
        "name": "AC_Automation",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u53d1\u73b0\u597d\u50cf\u8981\u679a\u4e3e\u4e00\u4e0b\u90a3\u4e2a\u70b9\n\n\u4f46\u662f\u6bcf\u5f53\u679a\u4e3e\u4e00\u6b21\u5c31\u8981bfs\u4e00\u6b21\n\n\u53d1\u73b0\u975e\u5e38\u8017\u65f6\n\n\u591a\u7b97\u4e86\u8bb8\u591a\u65e0\u7528\u7684\u4e1c\u897f\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u53eabfs\u4e00\u8fb9\u7684\u9ad8\u6548\u7b97\u6cd5\n\n\u4e8e\u662f\u8003\u8651\u76f4\u63a5\u53cd\u89c1\u56fe\uff0c\u7136\u540ebfs3\u904d\n\n\u6700\u540e\u6c42\u4e00\u4e0b\u548c\uff0c\u53bb\u4e2amin\u5373\u53ef\n\n\u5f53\u65f6\u6bd4\u8f83\u83dc\uff0c\u5199\u7684\u597d\u50cf\u662fspfa\n\n\u8fdebfs\u90fd\u4e0d\u4f1a\n\nqwq\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define         INF         99999999\n#define         MAXN        40010\nint B, F, P, mindis = INT_MAX, n, m;\nint dis_1[MAXN], dis_2[MAXN], dis_n[MAXN];\nvector<int>E[MAXN];\nbool inq[MAXN];\nvoid spfa_1() {\n    queue<int>q;\n    memset(inq, 0, sizeof(inq));\n    while(!q.empty())q.pop();\n    for(int i = 2;i <= n;i++)dis_1[i] = INF;\n    q.push(1);dis_1[1] = 0;inq[1] = 1;\n    while(!q.empty()) {\n        int x = q.front();\n        q.pop();\n        int le = E[x].size();\n        for(int i = 0;i < le;i++) {\n            int y = E[x][i];\n            if(dis_1[y] > dis_1[x] + 1) {\n                dis_1[y] = dis_1[x] + 1;\n                if(!inq[y]) {inq[y] = 1;q.push(y);}\n            }\n        }\n        inq[x] = 0;\n    }\n}\nvoid spfa_2() {\n    queue<int>q;\n    memset(inq, 0, sizeof(inq));\n    while(!q.empty())q.pop();\n    for(int i = 1;i <= n;i++)dis_2[i] = INF;\n    q.push(2);dis_2[2] = 0;inq[2] = 1;\n    while(!q.empty()) {\n        int x = q.front();\n        q.pop();\n        int le = E[x].size();\n        for(int i = 0;i < le;i++) {\n            int y = E[x][i];\n            if(dis_2[y] > dis_2[x] + 1) {\n                dis_2[y] = dis_2[x] + 1;\n                if(!inq[y]) {inq[y] = 1;q.push(y);}\n            }\n        }\n        inq[x] = 0;\n    }\n}\nvoid spfa_n() {\n    queue<int>q;\n    memset(inq, 0, sizeof(inq));\n    while(!q.empty())q.pop();\n    for(int i = 1;i < n;i++)dis_n[i] = INF;\n    q.push(n);dis_n[n] = 0;inq[n] = 1;\n    while(!q.empty()) {\n        int x = q.front();\n        q.pop();\n        int le = E[x].size();\n        for(int i = 0;i < le;i++) {\n            int y = E[x][i];\n            if(dis_n[y] > dis_n[x] + 1) {\n                dis_n[y] = dis_n[x] + 1;\n                if(!inq[y]) {inq[y] = 1;q.push(y);}\n            }\n        }\n        inq[x] = 0;\n    }\n}\nint main() {\n    ios :: sync_with_stdio(false);\n    cin >> B >> F >> P >> n >> m;\n    for(int i = 1;i <= m;i++) {\n        int u, v;\n        cin >> u >> v;\n        E[u].push_back(v);\n        E[v].push_back(u);\n    }\n    spfa_1();spfa_2();spfa_n();\n    for(int i = 1;i <= n;i++)mindis = min(mindis, dis_1[i] * B + dis_2[i] * F + dis_n[i] * P);\n    cout << mindis << endl;\n    return 0;\n}\n```\n",
        "postTime": 1552129543,
        "uid": 30817,
        "name": "muller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1ahttps://www.luogu.org/problemnew/show/P3110\n\n---\n\n## \u9898\u76ee\u5206\u6790\n\n\u9898\u76ee\u5927\u610f\u5c31\u662f\uff1a  \n$Bessie$  \u4ece\u70b9$1$\u51fa\u53d1\uff0c$Elsie$\u4ece\u70b9$2$\u51fa\u53d1\uff0c\u5411\u70b9$n$\u8d70\u53bb\uff1b\u5176\u4e2d$Bessie$\u6bcf\u8d70\u4e00\u6b65\u9700\u4ee3\u4ef7$B$\uff0c$Elsie$\u9700\u4ee3\u4ef7$E$\uff1b\u4e24\u4eba\u76f8\u9047\u540e\uff0c\u53ef\u4ee5\u4e00\u8d77\u4ee5$P$\u7684\u4ee3\u4ef7\u7ee7\u7eed\u8d70\uff0c\u4e5f\u53ef\u4ee5\u5206\u5f00\u5404\u8d70\u5404\u7684\uff0c\u6c42\u4ed6\u4eec\u90fd\u5230\u8fbe\u70b9$n$\u6240\u9700\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002  \n\n\u5f88\u5bb9\u6613\u53ef\u4ee5\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u7684\u95ee\u9898\u3002  \n\u6613\u77e5\uff1a  \n\u5f53$P<=B+E$\u65f6\uff0c\u76f8\u9047\u540e\u4e00\u8d77\u8d70\u66f4\u597d\u3002  \n\u5f53$P>B+E$\u65f6\uff0c\u5404\u8d70\u5404\u7684\u66f4\u597d\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u4e24\u4eba\u76f8\u9047\u7684\u70b9$i(1<=i<=n)$\uff0c\u8ba1\u7b97$f[1][i]*B+f[2][i]*E+f[n][i]*P$\uff0c\u5e76\u5c06\u5b83\u4e0e$ans$\u8fdb\u884c\u6bd4\u8f83\uff0c\u82e5\u5c0f\u4e8e$ans$\u5219\u66f4\u65b0\u3002  \n\uff08\u5176\u4e2d$f[a][b]$\u8868\u793a$a$\u5230$b$\u7684\u6700\u77ed\u8ddd\u79bb\uff09\n\n\u5f53$i==n$\u65f6\uff0c\u5c31\u662f\u4e24\u4eba\u6700\u7ec8\u5728$n$\u70b9\u76f8\u9047\uff0c\u5373\u5404\u8d70\u5404\u7684\uff0c\u4e2d\u9014\u4e0d\u4e00\u8d77\u8d70\uff0c\u8fd9\u6837\u5c31\u4e0d\u6015\u6709$P>B+E$\u7684\u60c5\u51b5\u4e86\u3002\n\n\u90a3\u4e48\uff0c$f$\u6570\u7ec4\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f  \n\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u8dd1$SPFA$\u3002\u7531\u4e8e$n$\u8f83\u5927\uff08$40000$\uff09\uff0c\u6240\u4ee5\u4e0d\u80fd\u5f00\u4e8c\u7ef4\u6570\u7ec4\uff0c\u53ea\u9700\u5f00\u4e09\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5373\u53ef\u3002\n\n---\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n//\u4ee3\u7801\u4e11\u52ff\u55b7QAQ\n#include<bits/stdc++.h>\nconst int N=40000+10;\nconst int inf=0x3f3f3f3f;\nusing namespace std;\nint b,e,p,n,m,ans;\nint f1[N],f2[N],fn[N];\nbool k[N];\nvector<int> v[N];\nvoid spfa(int now)\n{\n    int i,u,c;\n    queue<int> q;\n    memset(k,0,sizeof(k));\n    q.push(now);\n    k[now]=1;\n    while(!q.empty())\n    {\n      u=q.front();\n      q.pop();\n      k[u]=0;\n      for(i=0;i<v[u].size();i++)\n      {\n      \tc=v[u][i];\n      \tif(now==1)\n      \t{\n      \t  if(f1[u]+1<f1[c])\n      \t  {\n      \t    f1[c]=f1[u]+1;\n      \t    if(!k[c]){q.push(c); k[c]=1;}\n          }\n          continue;\n        }\n        \n        if(now==2)\n        {\n          if(f2[u]+1<f2[c])\n      \t  {\n      \t    f2[c]=f2[u]+1;\n      \t    if(!k[c]){q.push(c); k[c]=1;}\n          }\n          continue;\n        }\n        \n        if(now==n)\n        {\n          if(fn[u]+1<fn[c])\n      \t  {\n      \t    fn[c]=fn[u]+1;\n      \t    if(!k[c]){q.push(c); k[c]=1;}\n          }\n        }\n        \n      }\n    }\n}\nvoid csh()\n{\n    memset(f1,inf,sizeof(f1));\n    f1[1]=0;\n    memset(f2,inf,sizeof(f2));\n    f2[2]=0;\n    memset(fn,inf,sizeof(fn));\n    fn[n]=0;\n}\nint main()\n{\n    int i,x,y,now;\n    cin>>b>>e>>p>>n>>m;\n    for(i=1;i<=m;i++)\n    {\n      cin>>x>>y;\n      v[x].push_back(y);\n      v[y].push_back(x);\n    }\n    csh();\t\n    spfa(1);\n    spfa(2);\n    spfa(n);\n    ans=inf;\n    for(i=1;i<=n;i++)\n    {\n      if(f1[i]==inf||f2[i]==inf||fn[i]==inf) continue;\n      now=f1[i]*b+f2[i]*e+fn[i]*p;\n      ans=min(ans,now);\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1551421628,
        "uid": 108712,
        "name": "Cxs3",
        "ccfLevel": 0,
        "title": "P3110 [USACO14DEC]\u9a6e\u8fd0Piggy Back"
    },
    {
        "content": "**\u89e3\u9898\u601d\u8def**\n\n\u6211\u4eec\u77e5\u9053\uff1a$Bessie$\u548c$Elsie$\u6700\u7ec8\u4f1a\u6c47\u5408\u7684\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u6c47\u5408\u70b9\u7684\u95ee\u9898\u3002\u8fd9\u6837\u81ea\u7136\u5c31\u77e5\u9053\u8981\u4e0d\u8981\u9a6e\u7740\u8d70\u4e86\u3002\n\n- \u82e5\u5728\u7b2c$1$\u5230$n-1$\u4e2a\u70b9\u6c47\u5408\uff0c$Bessie$\u9700\u8981\u9a6e\u7740$Elsie$\u5230\u7ec8\u70b9\u3002\n\n- \u82e5\u5728\u7b2c$n$\u4e2a\u70b9\u6c47\u5408\uff0c\u5373\u662f\u8ba9$Bessie$\u548c$Elsie$\u81ea\u5df1\u5206\u522b\u5230\u7ec8\u70b9\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u679a\u4e3e\u6c47\u5408\u70b9\uff0c\u7136\u540e\u6c42\u51fa\u8be5\u70b9\u5230\u7b2c$1$\uff0c$2$\uff0c$n$\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u7531\u4e8e\u8fb9\u662f\u65e0\u5411\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u7b2c$1$\uff0c$2$\uff0c$n$\u4e2a\u70b9\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u3002\n\n\u9884\u5904\u7406\u65f6\u6211\u4eec\u5148\u5c06\u8fb9\u6743\u8bbe\u4e3a$1$\uff0c\u7edf\u8ba1\u7684\u65f6\u5019\u5206\u522b\u4e58\u4e0a$B$\uff0c$E$\uff0c$P$\u5373\u53ef\u3002\n\n**\u9644\u4e0a\u4ee3\u7801**\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n#include <cstdlib>\nusing namespace std;\n\n//\u4e8c\u8fdb\u5236\u5feb\u901f\u8bfb\u5165\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){\n    return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?EOF:*A++;\n}\ninline void qr(int &s){\n    char c=gc(); s=0;\n    for(;c<'0'||c>'9';c=gc());\n    for(;c>='0'&&c<='9';c=gc())\n        s=(s<<1)+(s<<3)+(c^48);\n}\ninline int mn(int x,int y){\n    return x<y?x:y;\n}\n\nconst int N=40001,K=3;\nstruct edge{\n    int node,next;\n}Edge[N<<1];\nint n,m,tot,Dis[K][N],Head[N],v0,v1,v2,i,u,v,ans=2e9;\nbool Inq[N];\ninline void Add(int x,int y){\n    Edge[++tot].node=y;\n    Edge[tot].next=Head[x];\n    Head[x]=tot;\n}\n\nvoid SPFA(int k,int s){//\u6a21\u677f\n//\u6211\u4eec\u5c06\u4e09\u6b21\u6c42\u7684\u6700\u77ed\u8def\u5206\u522b\u4fdd\u5b58\u4e0b\u6765\n    for(i=1;i<=n;++i){\n        Dis[k][i]=1e9; Inq[i]=0;\n    }\n    Dis[k][s]=0; Inq[s]=1;\n    queue<int> q; q.push(s);\n    while(!q.empty()){\n        u=q.front(); q.pop(); Inq[u]=0;\n        for(int t=Head[u];t;t=Edge[t].next){\n            v=Edge[t].node;\n            if(Dis[k][u]+1<Dis[k][v]){\n          \t//\u8fb9\u6743\u521d\u59cb\u4e3a1\n                Dis[k][v]=Dis[k][u]+1;\n                if(!Inq[v]){\n                    q.push(v); Inq[v]=1;\n                }\n            }\n        }\n    }\n}\n\nint main(){\n    qr(v0); qr(v1); qr(v2); qr(n); qr(m);\n    while(m--){\n        qr(u); qr(v);\n        Add(u,v); Add(v,u);\n    }\n    SPFA(0,1); SPFA(1,2); SPFA(2,n);//\u9884\u5904\u7406\n    for(i=1;i<=n;++i)//\u679a\u4e3e\u6c47\u5408\u70b9\n        ans=mn(ans,Dis[0][i]*v0+Dis[1][i]*v1+Dis[2][i]*v2);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n**\u7ba1\u7406\u5458\u5927\u4f6c\u6c42\u901a\u8fc7**",
        "postTime": 1548141475,
        "uid": 51198,
        "name": "bits",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u6c34\u4e00\u6ce2\u9898\u89e3....\n\u55ef\u8fd9\u4e2a\u9898\u5f88\u5751\u662f\u65e0\u5411\u56fe...\n\u9996\u5148\u6211\u4eec\u5206\u6790\u4e00\u4e0b \n\u5c31\u662f\u4e24\u4e2a\u4eba\u5982\u679c\u8981\u76f8\u9047\u5e76\u4e14\u4e00\u8d77\u8d70\u7684\u8bdd\n\u4e00\u5b9a\u4f1a\u9009\u62e9\u6700\u77ed\u8def\uff08\u628a\u8def\u7684\u8fb9\u6743\u770b\u505a1\uff09\n\u800c\u82e5P < B + E\n\u4ed6\u4eec\u5c31\u4e0d\u4f1a\u518d\u5206\u5f00 \u56e0\u4e3a\u4e00\u8d77\u8d70\u6700\u77ed\u8def\u4e00\u5b9a\u6bd4\u5206\u5f00\u8d70\u6700\u77ed\u8def\u4f18\n\u90a3\u4e483\u904dspfa\u5c31\u591f\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int max_n = 40010;\n\nstruct Edge\n{\n\tint to, val;\n\tEdge(){}\n\tEdge(int a, int b)\n\t{\n\t\tto = a;\n\t\tval = b;\n\t}\n};\n\nint n, m, B, E, P;\nvector<Edge> G[max_n], RG[max_n];\nint dis_fir[max_n], dis_sec[max_n], rdis[max_n];\nbool vis[max_n];\n\nvoid spfa(int s)\n{\n\tmemset(vis, 0, sizeof(vis));\n\tmemset(dis_fir, 0x3f, sizeof(dis_fir));\n\tvis[s] = 1;\n\tdis_fir[s] = 0;\n\tdeque<int> q;\n\tq.push_back(s);\n\twhile(!q.empty())\n\t{\n\t\tint top = q.front();\n\t\tq.pop_front();\n\t\tvis[top] ^= 1;\n\t\tfor(int i = 0;i < G[top].size(); i++)\n\t\t{\n\t\t\tint u = G[top][i].to;\n\t\t\tif(dis_fir[u] > dis_fir[top] + G[top][i].val)\n\t\t\t{\n\t\t\t\tdis_fir[u] = dis_fir[top] + G[top][i].val;\n\t\t\t\tif(!vis[u])\n\t\t\t\t{\n\t\t\t\t\tif(!q.empty() && dis_fir[u] < dis_fir[q.front()])\n\t\t\t\t\tq.push_front(u);\n\t\t\t\t\telse q.push_back(u);\n\t\t\t\t\tvis[u] ^= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid sec_spfa(int s)\n{\n\tmemset(vis, 0, sizeof(vis));\n\tmemset(dis_sec, 0x3f, sizeof(dis_sec));\n\tvis[s] = 1;\n\tdis_sec[s] = 0;\n\tdeque<int> q;\n\tq.push_back(s);\n\twhile(!q.empty())\n\t{\n\t\tint top = q.front();\n\t\tq.pop_front();\n\t\tvis[top] ^= 1;\n\t\tfor(int i = 0;i < G[top].size(); i++)\n\t\t{\n\t\t\tint u = G[top][i].to;\n\t\t\tif(dis_sec[u] > dis_sec[top] + G[top][i].val)\n\t\t\t{\n\t\t\t\tdis_sec[u] = dis_sec[top] + G[top][i].val;\n\t\t\t\tif(!vis[u])\n\t\t\t\t{\n\t\t\t\t\tif(!q.empty() && dis_sec[u] < dis_sec[q.front()])\n\t\t\t\t\tq.push_front(u);\n\t\t\t\t\telse q.push_back(u);\n\t\t\t\t\tvis[u] ^= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid rspfa(int s)\n{\n\tmemset(vis, 0, sizeof(vis));\n\tmemset(rdis, 0x3f, sizeof(rdis));\n\tvis[s] = 1;\n\trdis[s] = 0;\n\tdeque<int> q;\n\tq.push_back(s);\n\twhile(!q.empty())\n\t{\n\t\tint top = q.front();\n\t\tq.pop_front();\n\t\tvis[top] ^= 1;\n\t\tfor(int i = 0;i < G[top].size(); i++)\n\t\t{\n\t\t\tint u = G[top][i].to;\n\t\t\tif(rdis[u] > rdis[top] + G[top][i].val)\n\t\t\t{\n\t\t\t\trdis[u] = rdis[top] + G[top][i].val;\n\t\t\t\tif(!vis[u])\n\t\t\t\t{\n\t\t\t\t\tif(!q.empty() && rdis[u] < rdis[q.front()])\n\t\t\t\t\tq.push_front(u);\n\t\t\t\t\telse q.push_back(u);\n\t\t\t\t\tvis[u] ^= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin >> B >> E >> P >> n >> m;\n\tint a, b;\n\tfor(int i = 1;i <= m; i++)\n\t{\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tG[a].push_back(Edge(b, 1));\n\t\tG[b].push_back(Edge(a, 1));\n\t}\n\tspfa(1);\n\tsec_spfa(2);\n\trspfa(n);\n\tif(B + E < P)\n\tprintf(\"%d\", dis_fir[n] * B + dis_sec[n] * E);\n\telse \n\t{\n\t\tint ans = 9999999;\n\t\tfor(int i = 1;i <= n; i++)\n\t\tans = min(ans, dis_fir[i] * B + dis_sec[i] * E + rdis[i] * P);\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}\n```\n\u6ce8\u91ca\u6211\u5c31\u4e0d\u52a0\u4e86\nspfa\u4e09\u904d\u90fd\u662f\u590d\u5236\u7684\n\u6240\u4ee5\u770b\u7740\u7801\u7684\u5f88\u957f\u5b9e\u9645\u53ea\u6709\u4e00\u70b9\u70b9\n\u5173\u952e\u662f\u8d2a\u5fc3\u9009\u62e9",
        "postTime": 1539913566,
        "uid": 53746,
        "name": "aha\u6d6e\u4e91",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "## Sol ##\n\n[blog\u98df\u7528](http://www.caolaoshi.men/index.php/archives/usaco14dec-piggyback.html)\n\n\u6700\u77ed\u8def\u5f84\u3002\u8c8c\u4f3c\u6ca1\u6709dij\u7684\u4ee3\u7801\uff0c~~\u867d\u7136dij\u6b64\u9898\u6bd4spfa\u8dd1\u5f97\u6162\u7f62\u4e86\u3002~~\n\n\u505a\u4e09\u6b21\u6700\u77ed\u8def\u5f84\uff0c\u6c42\u51fa\u6bcf\u4e00\u4e2a\u70b9\u52301 \uff0c 2 \uff0c $n$\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3aB \u548c E \u76f8\u9047\u7684\u70b9\uff0c\u6c42\u7b54\u6848\u3002\n\n\u7b54\u6848 $= B * disB[i] + E * disE[i] + P * disP[i]$\n\nPS\uff1a\u6ca1\u5fc5\u8981\u5199\u4e09\u904d\u6700\u77ed\u8def\u7684\u7a0b\u5e8f\uff0c\u76f4\u63a5\u51fd\u6570\u4f20\u6570\u7ec4\u548c\u8d77\u59cb\u4f4d\u7f6e\u7684\u53c2\u6570\u5c31\u597d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(3 \u00d7 dij + N)$\n\n## Code ##\n\n```\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\n#define INF 2147483647\nusing namespace std;\n\nconst int L = 40005;\nstruct Node {\n\tint to , next;\n};\nNode e[2 * L];\nstruct Road {\n\tint num , len;\n\tRoad(int nn , int dd) {\n\t\tnum = nn , len = dd;\n\t}\n\tbool operator < (const Road &a) const {\n\t\treturn len > a.len;\n\t}\n};\npriority_queue<Road>q;\nint head[L] , tot = 0;\nint B , E , P , n , m , ans = INF;\nint disb[L] , dise[L] , disp[L];\n\nvoid add(int x , int y) {\n\ttot++;\n\te[tot].next = head[x];\n\te[tot].to = y;\n\thead[x] = tot;\n}\n\nvoid dij(int dis[] , int s) {\n\tfor(int i=1; i<=n; i++)\n\t\tdis[i] = INF;\n\tdis[s] = 0;\n\tq.push(Road(s , dis[s]));\n\twhile(!q.empty()) {\n\t\tRoad u = q.top();\n\t\tq.pop();\n\t\tif(u.len != dis[u.num])\n\t\t\tcontinue;\n\t\tfor(int i=head[u.num]; i; i=e[i].next) {\n\t\t\tint v = e[i].to;\n\t\t\tif(dis[v] > u.len + 1) {\n\t\t\t\tdis[v] = u.len + 1;\n\t\t\t\tq.push(Road(v , dis[v]));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d%d%d%d\",&B,&E,&P,&n,&m);\n\tfor(int i=1; i<=m; i++) {\n\t\tint x , y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x , y);\n\t\tadd(y , x);\n\t}\n\tdij(disb , 1);\n\tdij(dise , 2);\n\tdij(disp , n);\n\tfor(int i=1; i<=n; i++)\n\t\tans = min(ans , B * disb[i] + E * dise[i] + P * disp[i]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\n  [1]: http://usaco.org/index.php?page=viewproblem2&cpid=491\n  [2]: https://www.luogu.org/problemnew/show/P3110",
        "postTime": 1534595797,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u6807\u7b7edp\u771f\u7684\u6709\u95ee\u9898  XD   \u8fd9\u662f\u4e00\u9053\u56fe\u8bba\u9898=v=\n\n------------\n\n- First\uff0c\u4eceBessie\u6240\u5728\u76841\u53f7\u70b9bfs\uff0c\u5f97\u5230disB[i]\u4e3a1\u53f7\u70b9\u5230i\u7684\u8ddd\u79bb\uff1b\n- Secondly\uff0c\u4eceElsie\u6240\u5728\u76842\u53f7\u70b9bfs\uff0c\u5f97\u5230disE[i]\u4e3a2\u53f7\u70b9\u5230i\u7684\u8ddd\u79bb\uff1b\n- Finally\uff0c\u4ece\u7ec8\u70b9\u6240\u5728\u7684N\u53f7\u70b9bfs\uff0c\u5f97\u5230disS[i]\u4e3a\u7ec8\u70b9\u5230i\u7684\u8ddd\u79bb\uff1b\n- \u63a5\u7740\u679a\u4e3e1~n\uff0c\u5373\u679a\u4e3eBessie\u548cElsie\u5728\u54ea\u4e2a\u70b9\u4f1a\u548c\u7136\u540e\u4e00\u8d77\u8d70\u3002obviously\uff0c\u7b54\u6848\u4e3a\uff1aans=min{disB[i]xB+disE[i]xE+disS[i]xP},1<=i<=n\n- code XD\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct Lin{\n\tint nt,v;\n};\nLin e[80010];\nint list[40010],l;\ninline void add(int u,int v){\n\tl++;\n\te[l].v=v; e[l].nt=list[u]; list[u]=l;\n\treturn;\n}\nqueue<int>q;\nbool vis[40010];\nint de[40010],db[40010],ds[40010];\nint b,E,p,n,m;\nvoid bfs(int s,int *d){\n\tmemset(vis,0,sizeof(vis));\n\tint f;\tvis[s]=1;\td[s]=0;\n\tq.push(s);\n\twhile (!q.empty()){\n\t\tf=q.front();\n\t\tq.pop();\n\t\tfor (int i=list[f];i;i=e[i].nt){\n\t\t\tint v=e[i].v;\n\t\t\tif (!vis[v]){\n\t\t\t\td[v]=d[f]+1;\n\t\t\t\tq.push(v);\n\t\t\t\tvis[v]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main(){\n\tscanf(\"%d%d%d%d%d\",&b,&E,&p,&n,&m);\n\tint u,v;\n\tfor (int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\tadd(v,u);\n\t}\n\tbfs(1,db);\tbfs(2,de);\tbfs(n,ds);\n\tint ans=(1e9+7);\n\tfor (int i=1;i<=n;i++){\n\t\tans=min(ans,db[i]*b+de[i]*E+ds[i]*p);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n\t\t\n}\n```",
        "postTime": 1533643145,
        "uid": 17540,
        "name": "yangzechenc",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u6740\u9e21\u7109\u7528\u725b\u5200\uff0cbfs\u5373\u53ef\u65e0\u9700spfa\n\n\u601d\u8def\u662f\u5904\u7406\u8fd9\u4e2a\u70b9\u52301\u53f7\u70b9\uff0c2\u53f7\u70b9\uff0cn\u53f7\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u7136\u540e\u679a\u4e3e\u5728\u6bcf\u4e00\u4e2a\u70b9\u4f1a\u548c\u7684\u60c5\u51b5\n\n\u82b1\u8d39=d1\\*b+d2\\*e+d3\\*p;\n\n\u522b\u544a\u8bc9\u6211bfs\u4f60\u8fd8\u4e0d\u4f1a\u5199\uff0c\n\n\u7b80\u5355\u7c97\u66b4\uff0c\u7b97\u6cd5\u590d\u6742\u5ea6O\uff08n)\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<stdio.h>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nint b;int e;int p;int nx;int m;\nstruct node//\u4fdd\u5b58\u5230\u70b91\uff0c2\uff0cn\u7684\u8ddd\u79bb\n{\n    int num;int d1;int d2;int d3;\n}n[40010];int now;\nstruct data//\u90bb\u63a5\u8868\n{\n    int v;int next;\n}edge[80020];int cnt;int alist[40010];\nvoid add(int u,int v)\n{\n    edge[++cnt].v=v;\n    edge[cnt].next=alist[u];\n    alist[u]=cnt;\n    return;\n}\nqueue <node> q;\nint res=0x3f3f3f3f;\nint main()\n{\n    scanf(\"%d%d%d%d%d\",&b,&e,&p,&nx,&m);\n    for(int i=0;i<m;i++)//\u5efa\u56fe\n    {\n        int u;int v;\n        scanf(\"%d%d\",&u,&v);\n        add(u,v);add(v,u);\n    }\n    for(int i=1;i<=nx;i++)//\u521d\u59cb\u5316\n    {\n        n[i].num=i;\n        n[i].d1=-1;\n        n[i].d2=-1;\n        n[i].d3=-1;\n    }\n    n[1].d1=0;n[2].d2=0;n[nx].d3=0;\n    q.push(n[1]);//bfs\u819c\u677f\uff0c\u88f8\u7684bfs\n    while(!q.empty())\n    {\n        now=q.front().num;q.pop();\n        int next=alist[now];\n        while(next)\n        {\n            int v=edge[next].v;\n            if(n[v].d1==-1)\n            {\n                n[v].d1=n[now].d1+1;\n                q.push(n[v]);\n            }\n            next=edge[next].next;\n        }\n    }\n    q.push(n[2]);//\u540c\u4e0a\n    while(!q.empty())\n    {\n        now=q.front().num;q.pop();\n        int next=alist[now];\n        while(next)\n        {\n            int v=edge[next].v;\n            if(n[v].d2==-1)\n            {\n                n[v].d2=n[now].d2+1;\n                q.push(n[v]);\n            }\n            next=edge[next].next;\n        }\n    }\n    q.push(n[nx]);//\u540c\u4e0a\n    while(!q.empty())\n    {\n        now=q.front().num;q.pop();\n        int next=alist[now];\n        while(next)\n        {\n            int v=edge[next].v;\n            if(n[v].d3==-1)\n            {\n                n[v].d3=n[now].d3+1;\n                q.push(n[v]);\n            }\n            next=edge[next].next;\n        }\n    }\n    for(int i=1;i<=nx;i++)//\u5904\u7406\u7b54\u6848\n    {\n        if(n[i].d1==-1||n[i].d2==-1||n[i].d3==-1)//\u524d\u63d0\u662f\u8be5\u70b9\u5fc5\u987b\u80fd\u5230\u8fbe1\uff0c2\uff0c\u548cn\n        continue;\n        res=min(res,n[i].d1*b+n[i].d2*e+n[i].d3*p);\n    }\n    printf(\"%d\",res);\n    return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```",
        "postTime": 1509428312,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u7b2c\u4e00\u4e2a\u4eba\u4ece\u70b91\u51fa\u53d1\u6bcf\u8d70\u4e00\u6761\u8fb9\u6d88\u8017A\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u4ece\u70b92\u51fa\u53d1\u6bcf\u8d70\u4e00\u6761\u8fb9\u6d88\u8017B\uff0c\u4e24\u4e2a\u4eba\u76f8\u9047\u540e\u4e00\u8d77\u8d70\u6bcf\u8d70\u4e00\u6761\u8fb9\u6d88\u8017C\uff0c\u4e24\u4e2a\u4eba\u5230\u8fbe\u70b9n\u7684\u6700\u5c0f\u82b1\u9500\n\n\u5206\u522b\u4ece\u70b91\u3001\u70b92\u3001\u70b9n\u51fa\u53d1BFS\u4e00\u904d\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u70b91\u3001\u70b92\u3001\u70b9n\u7684\u6700\u77ed\u8def\n\n\u7136\u540e\u679a\u4e3e\u4e24\u4eba\u76f8\u9047\u7684\u70b9\uff0c\u8ba1\u7b97\u6d88\u8017\u4e4b\u548c\u5373\u53ef\n\n```cpp\n#include <cstdio>  \n#include <cstring>  \n#include <iostream>  \n#include <algorithm>  \n#define M 40400  \nusing namespace std;  \nstruct abcd{  \n    int to,next;  \n}table[M<<1];  \nint head[M],tot;  \nint n,m,A,B,C;  \nlong long ans=2147483647;  \nint f[M],g[M],t[M];  \nint q[M],r,h;  \nbool v[M];  \nvoid Add(int x,int y)  \n{  \n    table[++tot].to=y;  \n    table[tot].next=head[x];  \n    head[x]=tot;  \n}  \nvoid BFS(int f[])  \n{  \n    int i;  \n    while(r!=h)  \n    {  \n        int x=q[++h];  \n        for(i=head[x];i;i=table[i].next)  \n            if(!v[table[i].to])  \n            {  \n                v[table[i].to]=true;  \n                q[++r]=table[i].to;  \n                f[table[i].to]=f[x]+1;  \n            }  \n    }  \n}  \nint main()  \n{  \n    int i,x,y;  \n    cin>>A>>B>>C>>n>>m;  \n    for(i=1;i<=m;i++)  \n    {  \n        scanf(\"%d%d\",&x,&y);  \n        Add(x,y);Add(y,x);  \n    }  \n    memset(v,0,sizeof v);r=h=0;v[q[++r]=1]=true;BFS(f);  \n    memset(v,0,sizeof v);r=h=0;v[q[++r]=2]=true;BFS(g);  \n    memset(v,0,sizeof v);r=h=0;v[q[++r]=n]=true;BFS(t);  \n    for(i=1;i<=n;i++)  \n        ans=min(ans,(long long)A\\*f[i]+B\\*g[i]+C\\*t[i]);  \n    cout<<ans<<endl;  \n    return 0;  \n}  \n'''",
        "postTime": 1480833671,
        "uid": 32378,
        "name": "Malgr\u00e9_L_Guerre",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3110 \u3010[USACO14DEC]\u9a6e\u8fd0Piggy Back\u3011"
    }
]