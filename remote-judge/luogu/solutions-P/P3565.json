[
    {
        "content": "# \u8bf7\u5230\u535a\u5ba2\u4e2d\u67e5\u770b\r\n\r\n\u8bbe $f_{i,j}$ \u4e3a\u6ee1\u8db3 $x$ \u5728 $i$ \u7684\u5b50\u6811\u4e2d\u4e14 $d(x, i) = j$ \u7684 $x$ \u7684\u4e2a\u6570\uff0c$g_{i,j}$ \u4e3a\u6ee1\u8db3 $x,y$ \u5728 $i$ \u7684\u5b50\u6811\u4e2d\u4e14 $d(\\operatorname{lca}(x, y), x) = d(\\operatorname{lca}(x, y), y) = d(\\operatorname{lca}(x, y), i) + j$ \u7684\u65e0\u5e8f\u6570\u5bf9 $(x,y)$ \u7684\u4e2a\u6570\u3002\r\n\r\n\u6709\u8f6c\u79fb\uff1a\r\n\r\n$$ans \\leftarrow g_{i, 0}$$\r\n\r\n$$ans \\leftarrow \\sum_{x,y \\in \\operatorname{son}(i), x \\ne y} f_{x,j-1} \\times g_{y,j+1}$$\r\n\r\n$$g_{i,j} \\leftarrow \\sum_{x,y \\in \\operatorname{son}(i), x \\ne y} f_{x,j-1} \\times f_{y,j-1}$$\r\n\r\n$$g_{i,j} \\leftarrow \\sum_{x \\in \\operatorname{son}(i)} g_{x, j+1}$$\r\n\r\n$$f_{i,j} \\leftarrow \\sum_{x \\in \\operatorname{son}(i)} f_{x, j-1}$$\r\n\r\n\u663e\u7136\u8fd9\u53ef\u4ee5\u5229\u7528\u524d\u7f00\u548c\uff0c\u6216\u8005\u8bf4\u662f\u6240\u6709\u513f\u5b50\u300c\u5411 $i$ \u5408\u5e76\u300d\uff0c\u505a\u5230 $\\mathcal O(n)$ \u8f6c\u79fb\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2)$\u3002\r\n\r\n\u8fd9\u4e2a\u590d\u6742\u5ea6\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u4e86\u3002\r\n\r\n---\r\n\r\n\u8003\u8651\u7ee7\u7eed\u4f18\u5316\u3002\r\n\r\n\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u4fe1\u606f\u90fd\u662f\u4ee5\u6df1\u5ea6\u4e3a\u4e0b\u6807\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u5229\u7528\u957f\u94fe\u5256\u5206\u5c06\u590d\u6742\u5ea6\u964d\u4e3a\u5747\u644a $\\mathcal O(1)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5373\u53ef\u964d\u4e3a $\\mathcal O(n)$\u3002\r\n\r\n\u5728\u300c\u76f4\u63a5\u7ee7\u627f\u91cd\u513f\u5b50\u7684\u4fe1\u606f\u300d\u65f6\uff0c\u9700\u8981\u7528\u6307\u9488\u7ef4\u62a4\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\r\n\r\n```cpp\r\nconst int N = 1e5 + 7;\r\nint n, d[N], dep[N], son[N];\r\nvi e[N];\r\nll *f[N], *g[N], p[N<<2], *o = p, ans;\r\n\r\nvoid dfs(int x, int fa) {\r\n\td[x] = d[fa] + 1;\r\n\tfor (auto y : e[x])\r\n\t\tif (y != fa) {\r\n\t\t\tdfs(y, x);\r\n\t\t\tif (dep[y] > dep[son[x]]) son[x] = y;\r\n\t\t}\r\n\tdep[x] = dep[son[x]] + 1;\r\n}\r\n\r\nvoid dp(int x, int fa) {\r\n\tif (son[x])\r\n\t\tf[son[x]] = f[x] + 1, g[son[x]] = g[x] - 1, dp(son[x], x);\r\n\tf[x][0] = 1, ans += g[x][0];\r\n\tfor (auto y : e[x])\r\n\t\tif (y != fa && y != son[x]) {\r\n\t\t\tf[y] = o, o += dep[y] << 1, g[y] = o, o += dep[y] << 1;\r\n\t\t\tdp(y, x);\r\n\t\t\tfor (int i = 0; i < dep[y]; i++) {\r\n\t\t\t\tif (i) ans += f[x][i-1] * g[y][i];\r\n\t\t\t\tans += g[x][i+1] * f[y][i];\r\n\t\t\t}\r\n\t\t\tfor (int i = 0; i < dep[y]; i++) {\r\n\t\t\t\tg[x][i+1] += f[x][i+1] * f[y][i];\r\n\t\t\t\tif (i) g[x][i-1] += g[y][i];\r\n\t\t\t\tf[x][i+1] += f[y][i];\r\n\t\t\t}\r\n\t\t}\r\n}\r\n\r\nint main() {\r\n\trd(n);\r\n\tfor (int i = 1, x, y; i < n; i++)\r\n\t\trd(x), rd(y), e[x].pb(y), e[y].pb(x);\r\n\tdfs(1, 0), f[1] = o, o += dep[1] << 1, g[1] = o, o += dep[1] << 1;\r\n\tdp(1, 0), print(ans);\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1578415385,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e24\u7ef4\u7684\u505a\u6cd5\u5e94\u8be5\u633a\u597d\u60f3\u7684\uff0c\u4f46\u662f\u8981\u5f002\u4e2a$5000\\times 5000$\u7684\u6570\u7ec4\uff0c\u597d\u50cf\u6709\u70b9\u5927\uff1f\u5f00$short$\uff0c\u7b97\u51fa\u6765\u5dee\u4e0d\u591a96M\uff0c\u597d\u50cf\u80fd\u5361\u8fc7\u53bb\uff1f\u4e00\u770b\u7a7a\u95f4\uff1a67.5M\uff08\u5927\u8279\n\n\u90a3\u6211\u4eec\u8003\u8651\u4e00\u7ef4\u7684\u505a\u6cd5\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e09\u4e2a\u70b9\u8ddd\u79bb\u76f8\u7b49\u7684\u8bdd\u5c31\u662f\u4ed6\u4eec\u6df1\u5ea6\u8f83\u6df1\u7684\u4e24\u4e2a\u70b9\u7684$lca$\u5230\u4e09\u4e2a\u70b9\u7684\u8ddd\u79bb\u76f8\u7b49\n\n\u6211\u5f00\u59cb\u60f3\u7684\u505a\u6cd5\u662f\u679a\u4e3e\u4e24\u4e2a\u70b9\uff08\u590d\u6742\u5ea6\u663e\u7136\u662f$O(n^2)$\uff09\uff0c\u7136\u540e\u9884\u5904\u7406\u51fa\u6765\u4ec0\u4e48\u4e1c\u897f\u7136\u540e\u641e\uff0c\u4f46\u662f\u4e0d\u592a\u597d\u5f04\n\n\u7b49\u7b49\uff0c\u5982\u679c\u628a\u90a3\u4e2a$lca$\u62ce\u4e0a\u6765\u53d8\u6210\u6839\uff0c\u90a3\u4e48\u8fd9\u4e09\u4e2a\u70b9\u5c31\u5728\u540c\u4e00\u6df1\u5ea6\u4e86\uff0c\u4e0d\u662f\u5f88\u597d\u505a\u4e86\u5417\uff1f\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u679a\u4e3e\u90a3\u4e2a\u70b9\uff0c\u7136\u540e\u6811\u5f62$dp\\ O(n)$\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\n\n\u4f46\u662f\u7edf\u8ba1\u7b54\u6848\u8fd8\u662f\u6709\u70b9\u9ebb\u70e6\uff0c\u6211\u4eec\u4e0d\u80fd\u5355\u7eaf\u7684\u7edf\u8ba1\u6bcf\u4e2a\u6df1\u5ea6\u7684\u70b9\u6709\u591a\u5c11\u4e2a\uff08\u6837\u4f8b\u90fd\u8fc7\u4e0d\u53bb\uff09\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u4fdd\u8bc1\u4efb\u610f\u4e24\u4e2a\u7684$lca$\u8fd8\u662f\u8fd9\u4e2a\u6839\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5f53\u524d\u679a\u4e3e\u7684\u6839\u8282\u70b9\u7684\u6bcf\u6761\u51fa\u8fb9\u6307\u5411\u7684\u70b9\u6240\u5728\u7684\u5b50\u6811\u4e0a\u6700\u591a\u53ea\u80fd\u9009\u4e00\u4e2a\u70b9\n\n\u6240\u4ee5\u6211\u4eec\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5b50\u6811\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\uff0c\u56e0\u4e3a\u8981\u4e09\u4e2a\u70b9\uff0c\u6240\u4ee5\u662f\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u4e2a\u6570\u4e58\u4e0a\u4e4b\u524d\u9009\u8fc7\u7684\u91cc\u9762\u9009\u4e862\u4e2a\u70b9\u7684\u60c5\u51b5\u6570\u4e86\n\n\u6211\u4eec\u8ba9$box[d]$\u8868\u793a\u5f53\u524d\u5b50\u6811\u4e2d\u6df1\u5ea6\u4e3a$d$\u7684\u70b9\u7684\u4e2a\u6570\uff0c$f[d]$\u8868\u793a\u5728\u6574\u68f5\u6811\u4e4b\u524d\u904d\u5386\u7684\u90e8\u5206\u4e2d\uff0c\u6df1\u5ea6\u4e3a$d$\u7684\u6240\u6709\u70b9\u4e2d\uff0c\u9009\u51fa\u4e24\u4e2a\u70b9\u7684\u5408\u6cd5\u65b9\u6848\u6570\n\n\u4e3a\u4e86\u65b9\u4fbf\u8f6c\u79fb\uff0c\u6211\u4eec\u518d\u5f15\u5165\u4e00\u4e2a$g[d]$\u8868\u793a\u5728\u6574\u68f5\u6811\u4e4b\u524d\u904d\u5386\u7684\u90e8\u5206\u4e2d\uff0c\u6df1\u5ea6\u4e3a$d$\u7684\u6240\u6709\u70b9\u4e2d\uff0c\u9009\u51fa\u4e00\u4e2a\u70b9\u7684\u65b9\u6848\u6570\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u6b21\u679a\u4e3e\u5b50\u6811\uff0c\n\n$$ans=ans+f[d]\\times box[d]$$\n$$f[d]=f[d]+g[d]\\times box[d]$$\n$$g[d]=g[d]+box[d]$$\n\n\u7136\u540e\u8f93\u51fa\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\uff0c\u8bb0\u5f97\u5f00$long\\  long$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=5005;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n;\nint head[N],cnt;\nll box[N],f[N],g[N],deepest;\nll ans;\n\nstruct Edge{\n    int to,next;\n}e[N<<1];\n\nvoid add(int x,int y){\n    e[++cnt]=(Edge){y,head[x]},head[x]=cnt;\n}\n\nvoid dfs(int u,int fa,int dep){\n    deepest=max(deepest,1ll*dep);\n    box[dep]++;\n    RepG(i,u){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dfs(v,u,dep+1);\n    }\n}\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n    read(n);\n    Rep(i,1,n-1){\n        int x,y;\n        read(x),read(y);\n        add(x,y),add(y,x);\n    }\n    Rep(i,1,n){\n        memset(f,0,sizeof(box));\n        memset(g,0,sizeof(g));\n        RepG(j,i){\n            int v=e[j].to;\n            deepest=0;\n            memset(box,0,sizeof(box));\n            dfs(v,i,1);\n            Rep(k,1,deepest){\n                ans+=f[k]*box[k];\n                f[k]+=g[k]*box[k];\n                g[k]+=box[k];\n            }\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1584773763,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "## [\u9898\u610f](https://blog.csdn.net/BeNoble_/article/details/79901441)\n\n\u7ed9\u4f60\u4e00\u68f5\u6811$,$\u6c42\u4efb\u9009$3$\u4e2a\u70b9\u4f7f\u5f97\u4e24\u4e24\u6811\u4e0a\u8ddd\u79bb\u76f8\u540c\u7684\u65b9\u6848\u6570\n\n[$n\\le 10^5$](https://www.lydsy.com/JudgeOnline/problem.php?id=4543)\n\n---\n\n## \u9898\u89e3\n\n\u8bbe$f[u][i]$\u8868\u793a$u$\u5b50\u6811\u91cc\u8ddd\u79bb$u$\u4e3a$i$\u7684\u8282\u70b9\u4e2a\u6570\n\n$g[u][i]$\u8868\u793a$u$\u5b50\u6811\u91cc\u4e24\u4e2a\u70b9$x,y$\u5230\u5176$lca$\u7684\u8ddd\u79bb\u90fd\u662f$d,lca$\u5230$u$\u7684\u8ddd\u79bb\u662f$d-i$\u7684\u65b9\u6848\u6570\n\n\u753b\u4e2a\u56fe\u5c31\u662f\u8fd9\u6837![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://cdn.luogu.com.cn/upload/image_hosting/zwwmtsu2.png)\n\n$\\forall v\\in son_u$\u53ef\u4ee5\u5f97\u5230\n\n$$ans=\\sum_u(\\sum_i f[u][i]*g[v][i+1]+f[u][i-1]*g[v][i])+g[u][0]$$\n\n\u8003\u8651\u600e\u4e48\u8f6c\u79fb$($\u521d\u503c$f[u][0]=1)$\n\n$$g[u][i]=\\sum_vg[v][j+1]+f[u][i]*f[v][i-1]$$\n\n$$f[u][i]=\\sum_vf[v][i-1]$$\n\n\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u4e2d\u7684$f[u][i]$\u662f\u904d\u5386\u5b8c$v$\u524d\u9762\u5b50\u6811\u5f97\u5230\u7684$dp$\u503c\n\n$($\u5927\u6982\u6839\u636e\u5b9a\u4e49\u753b\u4e2a\u56fe\u5e94\u8be5\u5c31\u80fd\u7406\u89e3\u4e86$)$\n\n\u8bbe$mx[u]$\u8868\u793a$dep[u$\u5b50\u6811\u91cc\u6700\u6df1\u7684\u70b9$]-dep[u]+1$\n\n\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e$u$\u7684\u4efb\u610f\u4e00\u4e2a\u513f\u5b50$v$\u4e0a\u9762\u7684\u8f6c\u79fb\u590d\u6742\u5ea6\u90fd\u662f\u662f$mx[v]$\n\n\u800c\u5982\u679c$u$\u53ea\u6709\u4e00\u4e2a\u513f\u5b50$v$\u53ef\u4ee5\u53d1\u73b0\n\n$$f[u][i]=f[v][i-1]$$\n\n$$g[u][i]=g[v][i+1]$$\n\n\u7528\u6307\u9488\u8868\u793a\u5c31\u662f\n\n$$f[u]=f[v]-1$$\n\n$$g[u]=g[v]+1$$\n\n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u662f\u94fe\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u7ebf\u6027\u8f6c\u79fb\n\n\u6240\u4ee5\u8003\u8651\u957f\u94fe\u5256\u5206$,u$\u7684\u91cd\u513f\u5b50$son[u]$\u5c31\u662f$mx$\u6700\u5927\u7684\u8282\u70b9\n\n\u5bf9\u4e8e\u91cd\u513f\u5b50\u6211\u4eec\u7528\u4e0a\u9762\u7684\u8f6c\u79fb$,$\u5176\u4ed6\u8f7b\u513f\u5b50\u66b4\u529b\u8f6c\u79fb\n\n\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684\n\n\u8003\u8651\u6bcf\u4e2a\u70b9$u$\u8f6c\u79fb\u7684\u590d\u6742\u5ea6$p(u)=\\sum_vmx[v]-mx[son[u]]=\\sum_vmx[v]-mx[u]+1$\n\n\u603b\u590d\u6742\u5ea6\u5c31\u662f$\\sum_up(u)=\\sum_u\\sum_vmx[v]-mx[u]+1=n$\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u5ea6\u5c31\u662f$O(\\sum$\u957f\u94fe\u957f\u5ea6$)=O(n),$\u7528\u6307\u9488\u5206\u914d\u5185\u5b58\u5c31\u597d\u4e86\n\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=1e5+5;\ntypedef int arr[N];\ntypedef long long ll;\nstruct eg{int nx,to;}e[N<<1];\nint n,df[N*5],*f[N],*idf=df+1;arr fi,fa,mx,son;ll ans,dg[N*5],*g[N],*idg=dg+1;\ninline void add(int u,int v){static int ce=0;e[++ce]={fi[u],v},fi[u]=ce;}\nvoid dfs(int u){\n\tgo(u)if(v^fa[u]){\n\t\tfa[v]=u,dfs(v),cmax(mx[u],mx[v]);\n\t\tif(mx[v]>mx[son[u]])son[u]=v;\n\t}++mx[u];\n}\ninline void Give(int u){f[u]=idf,idf+=mx[u]+1,idg+=mx[u]+1,g[u]=idg,idg+=mx[u]+1;}\nvoid dp(int u){\n\tif(son[u])f[son[u]]=f[u]+1,g[son[u]]=g[u]-1,dp(son[u]);\n\tf[u][0]=1,ans+=g[u][0];\n\tgo(u)if(v^fa[u]&&v^son[u]){\n\t\tGive(v),dp(v);\n\t\tfd(j,mx[v],0)ans+=g[v][j]*f[u][j-1]+g[u][j+1]*f[v][j];\t\n\t\tfp(j,0,mx[v])g[u][j]+=g[v][j+1]+.3,f[u][j]+=f[v][j-1];\n\t}\n}\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n   \tsd(n);int u,v;\n   \tfp(i,2,n)sd(u),sd(v),add(u,v),add(v,u);\n   \tdfs(1);Give(1);dp(1);\n   \tprintf(\"%lld\\n\",ans);\nreturn 0;\n}\n```",
        "postTime": 1523445462,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "\u611f\u89c9\u5176\u4ed6\u9898\u89e3\u4e2d\u5bf9\u8f6c\u79fb\u65b9\u7a0b\u7684\u89e3\u91ca\u4e0d\u591f\u8be6\u7ec6,\u56e0\u6b64\u849f\u84bb\u5c31\u5199\u4e00\u7bc7\u8be6\u7ec6\u89e3\u91ca\u8f6c\u79fb\u65b9\u7a0b\u7684\u9898\u89e3\u5427,\u6b63\u89e3\u7684\u8bb2\u89e3\u53ef\u4ee5\u770b\u770b\u5176\u4ed6\u9898\u89e3\n\n------------\n\u9898\u610f\uff1ahttps://www.luogu.org/problem/P3565\n\n\u8003\u8651O(n^2)\n\n\u9996\u5148\u8003\u8651\u6240\u6c42\u7684\u4e09\u70b9\u7684\u5206\u5e03\u4e00\u5b9a\u662f\u8fd9\u6837:\n![](https://cdn.luogu.com.cn/upload/pic/75272.png)\n\u5373\u6bcf\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u4e09\u5143\u7ec4\u90fd\u4f1a\u5b58\u5728\u4e00\u4e2a\u4e2d\u95f4\u70b9(2),\u6ce8\u610f\u56fe\u4e2d\u9ad8\u4f4e\u987a\u5e8f\u4e0d\u4ee3\u8868\u6df1\u5ea6\u5927\u5c0f,\u53ea\u662f\u4e3a\u4e86\u597d\u770b...\n\n\u4e8e\u662f\u8003\u8651\u5728\u4e2d\u95f4\u70b9\u5904\u8ba1\u6570\n\n\u56e0\u6b64\u8bbe\u72b6\u6001:f[x][i]\u8868\u793a\u5728x\u7684\u5b50\u6811\u4e2d,\u5230x\u8ddd\u79bb\u4e3ai\u7684\u70b9\u7684\u4e2a\u6570,g[x][i]\u8868\u793a\u5728x\u7684\u5b50\u6811\u4e2d\u5230lca\u8ddd\u79bb\u76f8\u7b49(\u8bbe\u4e3ad)\uff0c\u4e14\u5b83\u4eec\u7684lca\u5230x\u7684\u8ddd\u79bb\u4e3ad-i\u7684\u70b9\u5bf9\u4e2a\u6570\n\n\u8fd9\u91ccf\u6570\u7ec4\u7684\u8f6c\u79fb\u663e\u7136\u4e3a:f[x][i]+=f[y][i-1],\u4f46\u662fg\u6570\u7ec4\u7684\u8f6c\u79fb\u5374\u4e0d\u597d\u60f3(\u849f\u84bb\u60f3\u4e86\u534a\u4e2a\u5c0f\u65f6\u624d\u60f3\u660e\u767d,dalao\u4e0d\u8981\u5632\u8bbd)\n\n1.g[x][i]+=g[y][i+1]:\n\n\u8fd9\u4e2a\u753b\u56fe\u5f88\u597d\u7406\u89e3,\u4f46\u662f\u5f3a\u884c\u60f3(\u6bd4\u5982\u6211~)\u5c31\u4f1a\u5f88\u7ed5\n\n\u89c1\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/75276.png)\n\n\u57282\u5904\u70b9\u5bf9\uff083,4\uff09\u662f\u5b58\u5728g[2][1]\u4e2d\u7684,\u800c\u57285\u5904,(3,4)\u662f\u5b58\u5728g[5][0]\u4e2d\u7684\n\n2.g[x][i]+=f[x][i]*f[y][i-1]\n\n\u8fd9\u91cc\u8981\u6ce8\u610f:\u4e0a\u5f0f\u4e2d\u7684f[x][i]\u662f\u4e0d\u5305\u542by\u4e2d\u7684\u70b9\u7684\n\n![](https://cdn.luogu.com.cn/upload/pic/75279.png)\n\u6bd4\u5982\u4e0a\u56fe:\n\u5047\u8bbe1\u6709\u4e24\u9897,\u65b0\u904d\u5386\u7684\u5b50\u6811\u4e3a3\u7684,\u4e4b\u524d\u5904\u7406\u597d\u7684\u5b50\u6811\u4e3a2\u7684,\u5047\u8bbe2\u53f7\u5b50\u6811\u4e2d\u76844\u52301\u8ddd\u79bb\u4e3ai,5\u52303\u7684\u8ddd\u79bb\u4e3ai-1,\u90a3\u4e48\u663e\u71363,4\u5230\u5b83\u4eec\u7684lca(\u53731)\u7684\u8ddd\u79bb\u4e3ai,\u56e0\u6b64\u5e94\u8be5\u52a0\u5230g[x][i](1\u4e3alca,\u6839\u636eg\u6570\u7ec4\u7684\u5b9a\u4e49,i-i=0,\u56e0\u6b64\u662fg[x] [i])\n\nf\u548cg\u6570\u7ec4\u6c42\u597d\u4e86,\u6c42\u7b54\u6848\u5c31\u5f88\u7b80\u5355\u4e86\n\n1.\u5728x\u4e4b\u524d\u5904\u7406\u597d\u7684\u5b50\u6811\u4e2d\u9009\u4e24\u4e2a\u70b9,\u4e0ey\u4e2d\u7684\u70b9\u62fc\u63a5:ans+=g[x][i]*f[y][i-1]\n\n2.\u5728y\u4e2d\u9009\u4e24\u4e2a\u70b9,\u4e0ex\u4e4b\u524d\u5904\u7406\u597d\u7684\u5b50\u6811\u4e2d\u7684\u70b9\u62fc\u63a5ans+=f[x][i]*g[y][i+1]\n\n\u4e8e\u662fN^2\u7684\u5c31\u5199\u5b8c\u4e86\n\ncode(\u53ea\u670980pts,f\u548cg\u8981\u7528\u6307\u9488,\u4e0d\u7136\u4f1aMLE,\u53cd\u6b63\u662f\u66b4\u529b\u5c31\u61d2\u5f97\u6539\u4e86)\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn=5010;\nint n,cnt,ans;\nint head[maxn];\nint f[maxn][maxn],g[maxn][maxn];\nstruct edge\n{\n\tint to,nxt;\n}e[maxn<<1];\ninline int read()\n{\n\tchar c=getchar();int res=0,f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')res=res*10+c-'0',c=getchar();\n\treturn res*f;\n}\ninline void add(int u,int v)\n{\n\te[++cnt].nxt=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n}\nvoid dfs(int x,int fa)\n{\n\tf[x][0]=1;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\tfor(int j=0;j<n;j++)\t\n\t\t{\n\t\t\tif(j)ans+=f[x][j-1]*g[y][j];\n\t\t\tans+=g[x][j+1]*f[y][j];\n\t\t}\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tg[x][j+1]+=f[x][j+1]*f[y][j];\n\t\t\tif(j)g[x][j-1]+=g[y][j];\n\t\t\tf[x][j+1]+=f[y][j];\n\t\t}\n\t}\n}\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd(u,v);add(v,u);\n\t}\n\tdfs(1,0);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\u5047\u8bbe\u6211\u4eec\u65e0\u89c6n<=5000,\u504f\u8981\u60f3O(N)\u7684\u7b97\u6cd5,\u90a3\u4e48\u5c31\u8981\u7528\u5230\u957f\u94fe\u5256\u5206,\u8fd9\u4e2a\u9898\u89e3\u7684\u5404\u4f4ddalao\u5df2\u7ecf\u5199\u5f97\u5f88\u8be6\u7ec6\u4e86:\u7528\u957f\u94fe\u5256\u5206\u4f18\u5316\n\ncode\uff08\u6284\u7684\u522b\u4eba\u7684,\u7384\u5b66\u6307\u9488\u4e0d\u4f1a\u7528\u554a\uff09:\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn=100010;\nint n,cnt,ans;\nint head[maxn],maxdep[maxn],son[maxn];\nint *f[maxn],*g[maxn],tmp[maxn<<2],*id=tmp;\nstruct edge\n{\n\tint to,nxt;\n}e[maxn<<1];\ninline int read()\n{\n\tchar c=getchar();int res=0,f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')res=res*10+c-'0',c=getchar();\n\treturn res*f;\n}\ninline void add(int u,int v)\n{\n\te[++cnt].nxt=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n}\nvoid dfs1(int x,int fa)\n{\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(y==fa)continue;\n\t\tdfs1(y,x);\n\t\tmaxdep[x]=max(maxdep[x],maxdep[y]);\n\t\tif(maxdep[y]>maxdep[son[x]])son[x]=y;\n\t}\n\tmaxdep[x]=maxdep[son[x]]+1;\n}\nvoid dfs(int x,int fa)\n{\n\tif(son[x])f[son[x]]=f[x]+1,g[son[x]]=g[x]-1,dfs(son[x],x);\n\tf[x][0]=1;ans+=g[x][0];\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(y==fa||y==son[x])continue;\n\t\tf[y]=id,id+=maxdep[y]<<1;g[y]=id,id+=maxdep[y]<<1;\n\t\tdfs(y,x);\n\t\tfor(int j=0;j<maxdep[y];j++)\n\t\t{\n\t\t\tif(j)ans+=f[x][j-1]*g[y][j];\n\t\t\tans+=g[x][j+1]*f[y][j];\n\t\t}\n\t\tfor(int j=0;j<maxdep[y];j++)\n\t\t{\n\t\t\tg[x][j+1]+=f[x][j+1]*f[y][j];\n\t\t\tif(j)g[x][j-1]+=g[y][j];\n\t\t\tf[x][j+1]+=f[y][j];\n\t\t}\n\t}\n}\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd(u,v);add(v,u);\n\t}\n\tdfs1(1,0);\n\tf[1]=id,id+=maxdep[1]<<1;g[1]=id,id+=maxdep[1]<<1;\n\tdfs(1,0);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1566897313,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P3565 [POI2014]HOT-Hotels(\u957f\u94fe\u5256\u5206\u4f18\u5316DP)"
    },
    {
        "content": "\u795e\u4ed9\u72b6\u6001\u3002\n\u753b\u753b\u56fe\u53ef\u4ee5\u53d1\u73b0\u6709\u5982\u4e0b\u4e24\u79cd\u53ef\u80fd\uff1a  \n![\u56fe\u7247\u6807\u9898](https://leanote.com/api/file/getImage?fileId=5d38067bab64414b8a006248)\n\n(\u6b64\u65f65\u662f\u6839)  \n![\u56fe\u7247\u6807\u9898](https://leanote.com/api/file/getImage?fileId=5d380684ab64414d870060fb)\n(\u6b64\u65f61\u662f\u6839)  \n\u7136\u540e\u5c31\u662f\u63a8\u5230\u72b6\u6001~~\u770b\u9898\u89e3~~  \n\u6211\u4eec\u7528$f[i][j]$\u8868\u793a\u5728$i$\u7684\u5b50\u6811\u4e2d\u8ddd\u79bb$i$\u7684\u957f\u5ea6\u4e3a$j$\u7684\u70b9\u6709\u591a\u5c11\u4e2a\uff0c\u90a3\u4e48\u663e\u7136\uff0c$f[i][j] = \\sum f[t][j-1]$\u3002\n\u53e6$g[i][j]$\u4e3a\u5728\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c$x$,$y$ \u5230\u5176$LCA(x,y)$\u7684\u8ddd\u79bb\u4e3a$d$\uff0c$i$\u5230$LCA(x,y)$\u7684\u8ddd\u79bb\u4e3a$d-i$\u7684\u8fd9\u6837\u7684\u70b9\u5bf9$(x,y)$\u6709\u591a\u5c11\u5bf9\u3002\u90a3\u4e48~~\u663e\u7136~~$g[i][j] = \\sum g[t][j+1]$\u5173\u4e8e\u4e3a\u4ec0\u4e48$g$\u662f\u8fd9\u6837\u8f6c\u79fb\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u56fe\u89e3\u91ca  \n![\u56fe\u7247\u6807\u9898](https://leanote.com/api/file/getImage?fileId=5d380905ab64414d8700617a)\n\u56fe\u4e2d\uff0cg[2][0] \u8868\u793a\u7684\u70b9\u67092\u4e2a\uff0c\u90a3\u4e48\uffe5g[2][0] = 2\uffe5\uff0c\u90a3\u4e48\u56e0\u4e3a$2->1=1$\uff0c\u6240\u4ee5$1$\u53f7\u70b9\u7684\u72b6\u6001\u5c31\u662f$g[1][d-(j-1)]=g[1][d-j+1]$(\u5411\u4e0a\u632a\u4e86\u4e00\u6b65\uff0c\u6240\u4ee5\u8ddd\u79bb\u8981\u51cf1\uff09\u3002  \n\u6240\u4ee5\u4ed6\u662f\u8fd9\u4e48\u8f6c\u79fb\u7684\u3002  \n\u597d\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\u3002  \n\u5bf9\u4e8e\u4e00\u4e2a\u70b9$i$\u663e\u7136\u3002$g[i][0]$\u5c31\u662f\u7b54\u6848\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u6b64\u65f6$i$\u5df2\u7ecf\u662fLCA\u4e86\u3002\u7136\u540e\u6211\u4eec\u65b0\u52a0\u5165\u4e00\u4e2a\u5b50\u8282\u70b9\u662f\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u901a\u8fc7\u4e58\u6cd5\u539f\u7406\u53ef\u4ee5\u8ba1\u7b97\u7684\u5230\u662f$g[i][j]*f[t][j-1]$\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u4e0b\u9762\u8fd9\u4e2a\u56fe  \n![\u56fe\u7247\u6807\u9898](https://leanote.com/api/file/getImage?fileId=5d380bccab64414b8a006390)  \n\u4e00\u4e0b\u5b50\u5c31\u660e\u767d\u4e86\uff0c6 2 3 \u6784\u62103\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u7684hotel\u3002\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u679c\u53ef\u4ee5\u4ece\u5b50\u6811\u4e2d\u628af\u548cj\u7ee7\u627f\u8fc7\u6765\u5c31\u597d\u4e86\uff0c\u7136\u540e\u8dd1\u4e00\u6ce2\u957f\u94fe\u5256\u5206\u3002(\u5982\u679c\u4e0d\u4f1a\u53ef\u4ee5\u770b\u8fd9\u7bc7[\u535a\u5ba2](https://www.cnblogs.com/cjyyb/p/9479258.html)\uff0c\u5982\u679c\u4e0d\u4f1a\u6307\u9488\uff0c\u53ef\u4ee5\u770bzxyoi\u795e\u4ed9\u7684[\u535a\u5ba2]  (https://blog.csdn.net/zxyoi_dreamer/article/details/84828291))\n\u6ce8\u610f\u4e00\u4e0b\u4ee3\u7801\u7ec6\u8282  \n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#define int long long \nusing namespace std;\nconst int MAXN = 300100;\nint len[MAXN],lson[MAXN];\nstruct edge{\n    int t,w,next;\n}edges[MAXN<<2];\nint head[MAXN];\nint top;\nvoid add(int f,int t,int w = 0) {\n    edges[++top].next = head[f];\n    edges[top].t = t;\n    edges[top].w = w;\n    head[f] = top;\n}\nint n,q;\nvoid dfs1(int x,int fa){\n    for(int i = head[x];i;i = edges[i].next){\n        int t = edges[i].t;\n        if(t==fa)continue;\n        dfs1(t,x);\n        if(len[t]>len[lson[x]])lson[x] = t;\n    }\n    len[x] = len[lson[x]]+1;\n}\nlong long tmp[MAXN<<2],*f[MAXN],*g[MAXN],*id = tmp;\nlong long ans;\nvoid work(int x,int fa){\n\tif(lson[x])f[lson[x]] = f[x]+1,g[lson[x]] = g[x]-1,work(lson[x],x);\n\tf[x][0] = 1;ans+=g[x][0];\n\tfor(int i = head[x];i;i = edges[i].next){\n\t\tint t = edges[i].t;\n\t\tif(t==fa||to==lson[x])continue;\n\t\tf[t] = id;id+=len[t]<<1;\n\t\tg[t] = id;id+=len[t]<<1;\n\t\twork(t,x);\n\t\tfor( int j = 0; j < len[t]; j++){//\u5904\u7406\u7b54\u6848\n            if(j) ans += f[x][j - 1] * g[t][j];\n            ans += g[x][j + 1] * f[t][j];//\u4e3a\u4e86\u5904\u7406\u4e09\u4e2a\u70b9\u5747\u662fx\u7684\u5b50\u8282\u70b9\u548c1\u4e2a\u4e0d\u662fx\u7684\u5b50\u8282\u70b9\u7684\u60c5\u51b5\u3002\u4e0d\u53ef\u80fd2\u4e2a\u90fd\u4e0d\u662fx\u7684\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u68f5\u6811\n        }\n        for( int j = 0; j < len[t]; j++){//\u5904\u7406\u8f6c\u79fb\n            g[x][j + 1] += f[x][j + 1] * f[t][j];\n            if(j) g[x][j - 1] += g[t][j];\n            f[x][j + 1] += f[t][j];\n        }\n    }\n}\nsigned main(){\n    scanf(\"%lld\",&n);\n    int fr,t;\n    for(int i = 1;i<n;i++){\n        scanf(\"%lld%lld\",&fr,&t);add(fr,t);add(t,fr);\n    }\n    dfs1(1,0);\n    f[1] = id,id+=len[1]<<1;\n    g[1] = id;id+=len[1]<<1;\n    work(1,0);\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\u5982\u679c\u54ea\u5929\u56fe\u7247\u70b8\u4e86\uff0c\u8bf7\u52a0\u6211QQ1724458359\u6211\u4f1a\u8865\u56fe\uff0c\u6ce8\u660e\u7701\u4efd\u5b66\u6821\uff0c\u53cd\u6b63\u6211\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u611f\u89c9\u6709\u4e2a\u56fe\u633a\u5f62\u8c61\u7684",
        "postTime": 1563954980,
        "uid": 61493,
        "name": "BeyondStars",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "$$\\color{cornflowerblue}{\\mathcal{Treaker}}$$\n# \u6811\u5f62DP\n\u8fd9\u9898\u6bd4\u8f83\u96be\u60f3~~\u5bf9\u4e8e\u6211\u8fd9\u79cdDP\u849f\u84bb~~\n\n\u6211\u4eec\u8bbe\u4e24\u4e2a\u6570\u7ec4$f[x][i]$\u8868\u793a\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u91cc\u5230$x$\u8ddd\u79bb\u4e3a$i$\u7684\u8282\u70b9\u4e2a\u6570\uff0c$g[x][i]$\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u5185\uff0c\u518d\u6765\u4e00\u6761\u957f\u5ea6\u4e3a$i$\u7684\u94fe\u5c31\u80fd\u5f62\u6210\u65b9\u6848\u7684\u8282\u70b9\u4e2a\u6570\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\n\n\u8fd9\u4e2a$n$\u4e0d\u8981\u592a\u5728\u610f\uff0c\u61d2\u5f97\u90a3\u4e48\u7ec6\u81f4\u4e86\u3002\n```cpp\nfor(int i = 0;i <= n;i ++) ans += g[x][i] * (i == 0 ? 0 : f[to][i-1]) + g[to][i+1] * f[x][i];\nfor(int i = 0;i <= n;i ++) g[x][i] += f[x][i] * (i == 0 ? 0 : f[to][i-1]) + g[to][i+1];\nfor(int i = 1;i <= n;i ++) f[x][i] += f[to][i-1];\n```\n\u80bf\u4e48\u7edf\u8ba1$ans$\u5462\u3002\n\n\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u4e24\u4e2a\u70b9\u5728\u5de6\u8fb9\uff0c\u4e00\u4e2a\u70b9\u5728\u53f3\u8fb9\uff1b\u8fd8\u6709\u4e00\u79cd\u662f\u4e24\u4e2a\u70b9\u5728\u53f3\u8fb9\uff0c\u4e00\u4e2a\u70b9\u5728\u5de6\u8fb9\u3002\n\n$g$\u6570\u7ec4\u7684\u8bdd\uff0c\u52063\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u539f\u6765\u5c31\u6709\u7684\uff0c\u53e6\u4e00\u79cd\u662f\u4e00\u4e2a\u70b9\u5728\u5de6\u8fb9\uff0c\u53e6\u4e00\u4e2a\u70b9\u5728\u53f3\u8fb9\uff0c\u8fd8\u6709\u4e00\u79cd\u662f\u5168\u5728\u53f3\u8fb9\u3002\n\n$f$\u66f4\u7b80\u5355\u4e86\uff0c\u4e0d\u591a\u8d58\u8ff0\n\n\u66b4\u529b\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u66f4\u7cbe\u5f69\u7684\u5728\u540e\u9762\uff09\n```cpp\n#include <cstdio>\n#include <iostream>\n#define ll long long\nusing namespace std;\nconst int N = 5001;\ninline int read()\n{\n    int x = 0 , f = 1;  char ch = getchar();\n    while(ch < '0' || ch > '9') {if(ch == '-')  f = -1; ch = getchar();}\n    while(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n    return x * f;\n}\nint n;\nint dep[N] , f[N][N] , g[N][N];\nll ans;\nstruct Edge\n{\n\tint to; Edge *nxt;\n\tEdge(int to,Edge *nxt) : to(to) , nxt(nxt) {}\n}*head[N];\ninline void add(int u,int v) {head[u] = new Edge(v,head[u]);}\nvoid get_tree(int x)\n{\n\tf[x][0] = 1;\n\tfor(Edge *i = head[x];i;i = i -> nxt)\n\t{\n\t\tint to = i -> to;\n\t\tif(dep[to]) continue;\n\t\tdep[to] = dep[x] + 1;\n\t\tget_tree(to);\n\t\tfor(int i = 0;i <= n;i ++) ans += g[x][i] * (i == 0 ? 0 : f[to][i-1]) + g[to][i+1] * f[x][i];\n\t\tfor(int i = 0;i <= n;i ++) g[x][i] += f[x][i] * (i == 0 ? 0 : f[to][i-1]) + g[to][i+1];\n\t\tfor(int i = 1;i <= n;i ++) f[x][i] += f[to][i-1];\n\t}\n}\nint main()\n{\n//\tfreopen(\"c.in\",\"r\",stdin);\n//\tfreopen(\"c.out\",\"w\",stdout);\n\tn = read();\n\tfor(int i = 1 , u , v;i < n;i ++) \n\t{\n\t\tu = read(); v = read();\n\t\tadd(u,v); add(v,u);\n\t}\n\tdep[1] = 1;\n\tget_tree(1);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\u6211\u53c8\u56de\u6765\u4e86\uff0c\u5982\u679c$n$\u662f$1e5$\u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\n\n\u5148\u7ed9\u4ed6\u957f\u94fe\u5256\u5206\uff08\u5b66\u8fc7\u6811\u5256\u5e94\u8be5\u90fd\u77e5\u9053\uff09\uff0c\u90a3\u4e48\u5bf9\u5b83\u8fdb\u884c\u52bf\u80fd\u5206\u6790\uff0c\u7136\u540e\u4ed6\u5c31\u6210$O(n)$\u7684\u4e86\uff1f\uff1f\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/n577xs81.png)\n\n\u53ef\u6ca1\u8fd9\u4e48\u7b80\u5355\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u7684\u524d\u63d0\u662f\u6211\u4eec\u76f4\u63a5\u5904\u7406\u957f\u513f\u5b50\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\uff0c\n\n\u6211\u4eec\u76f4\u63a5\u628a\u957f\u513f\u5b50\u8d4b\u7ed9$x$\uff0c\u7136\u540e\u5728\u5bf9\u77ed\u513f\u5b50\u8fdb\u884c\u5904\u7406\n\n\u52bf\u80fd\u5206\u6790\u7684\u8bdd\u662f\uff1a\u8fd9\u91cc$u$\u662f$x$\u7684\u5b50\u8282\u70b9\n$$\\sum_{x=1}^n((\\sum_uh(u)) - h(x))$$\n\n\u5b83\u4f1a\u76f8\u4e92\u62b5\u6d88\uff0c\u6700\u540e\u5c31\u662f\u8fd1\u4f3c$O(n)$.\n\n\u8fd9\u91cc\u91c7\u7528\u4e86\u6307\u9488\u662f\u56e0\u4e3a\uff0c\u76f4\u63a5\u5f00\u6570\u7ec4\u771f\u7684\u5f00\u4e0d\u4e0b\u3002\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u5927\u6570\u7ec4\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u4ece\u5927\u6570\u7ec4\u91cc\u9762\u53d6\u4e00\u6bb5\u51fa\u6765\u8d4b\u503c\uff0c\u8282\u7701\u7a7a\u95f4\u3002\n\n\u6211\u8fd9\u91cc\u91c7\u7528\u4ece\u4e0a\u5411\u4e0b\u8d4b\u5730\u5740\uff0c\u56e0\u4e3a\u6211\u4ece\u4e0b\u5f80\u4e0a\u8d4b\u4e00\u76f4RE\uff08\u6211\u5bf9\u5185\u5b58\u7684\u7406\u89e3\u8fd8\u662f\u592a\u6d45\u663e\u4e86\uff09\u3002\n\n\u7ec6\u8282\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#define ll long long\nusing namespace std;\nconst int N = 100005 , M = 100005;\ninline int read()\n{\n    int x = 0 , f = 1;  char ch = getchar();\n    while(ch < '0' || ch > '9') {if(ch == '-')  f = -1; ch = getchar();}\n    while(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n    return x * f;\n}\nint n;\nint dep[M] , hs[M] , in[M] , fa[M] , h[M];\nll ans , pool[N << 2] , *f[M] , *g[M] , *tail = pool;\nstruct Edge\n{\n\tint to; Edge *nxt;\n\tEdge(int to,Edge *nxt) : to(to) , nxt(nxt) {}\n}*head[N];\ninline void add(int u,int v) {head[u] = new Edge(v,head[u]); in[v] ++;}\nvoid get_tree(int x)\n{\n\th[x] = 1;\n\tfor(Edge *i = head[x];i;i = i -> nxt)\n\t{\n\t\tint to = i -> to;\n\t\tif(dep[to]) continue;\n\t\tfa[to] = x;\n\t\tdep[to] = dep[x] + 1;\n\t\tget_tree(to);\n\t\th[x] = max(h[x],h[to] + 1);\n\t\tif(h[to] > h[hs[x]]) hs[x] = to; \n\t}\n}\nvoid dfs(int x)\n{\n\tif(hs[x])\n\t{\n\t\tf[hs[x]] = f[x] + 1;\n\t\tg[hs[x]] = g[x] - 1;\n\t\tdfs(hs[x]);\t\t\n\t}\n\tf[x][0] = 1; ans += g[x][0];\n\tfor(Edge *i = head[x];i;i = i -> nxt)\n\t{\n\t\tint to = i -> to;\n\t\tif(to == hs[x] || to == fa[x]) continue;\n\t\tf[to] = tail; tail += h[to] << 1; g[to] = tail; tail += h[to] << 1;\n\t\tdfs(to);\n\t\tfor(int j = 0;j <= h[to];j ++) ans += g[x][j] * (j == 0 ? 0 : f[to][j-1]) + g[to][j+1] * f[x][j];\n\t\tfor(int j = 0;j <= h[to];j ++) g[x][j] += f[x][j] * (j == 0 ? 0 : f[to][j-1]) + g[to][j+1];\n\t\tfor(int j = 1;j <= h[to];j ++) f[x][j] += f[to][j-1];\n\t}\n}\nint main()\n{\n//\tfreopen(\"c.in\",\"r\",stdin);\n//\tfreopen(\"c.out\",\"w\",stdout);\n\tn = read();\n\tfor(int i = 1 , u , v;i < n;i ++) \n\t{\n\t\tu = read(); v = read();\n\t\tadd(u,v); add(v,u);\n\t}\n\tdep[1] = 1;\n\tget_tree(1); f[1] = tail; tail += h[1] << 1; g[1] = tail; tail += h[1] << 1;\n\tdfs(1);\n\tprintf(\"%lld\\n\",ans);\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```\n",
        "postTime": 1570232501,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "# \u8fd9\u7bc7\u9898\u89e3\u7684\u7b97\u6cd5\u975e\u5e38\u66b4\u529b\uff0c\u4f46\u601d\u7ef4\u96be\u5ea6\u5f88\u4f4e\u4e14\u53ef\u8fc7\uff0c\u8bf7\u914c\u60c5\u53c2\u8003\n\n\u9996\u5148\u8003\u8651\u8981\u9009\u7684\u4e09\u4e2a\u70b9\u957f\u4ec0\u4e48\u6837\u5b50\uff0c\u663e\u7136\u5b83\u4eec\u5f97\u6709\u5171\u540c\u7684LCA\uff0c\u800c\u4e14\u4ee5LCA\u4e3a\u6839\u65f6\u8fd9\u4e09\u4e2a\u70b9\u7684\u6df1\u5ea6\u4e00\u5b9a\u76f8\u7b49\uff1b\n\n\u7136\u540e\u770b\u5230\u6570\u636e\u8303\u56f4\u662fn=5000\uff0c\u663e\u7136O(n\u00b2)\u53ef\u8fc7\uff0c\u90a3\u4e48\u4e0d\u96be\u60f3\u5230\u5148\u679a\u4e3e\u70b9\uff0c\u7136\u540e\u7528O(n)\u4ee5\u5185\u7684\u590d\u6742\u5ea6\u5904\u7406\u51fa**\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u65f6**\u7684\u6240\u6709\u65b9\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u9a6c\u4e0a**\u66b4\u529b\u5730**\u60f3\u5230\uff0c\u53ef\u4ee5\u5bf9\u6839\u7684\u6bcf\u4e00\u4e2a**\u513f\u5b50**\u5f00\u6876\uff0c\u6876\u91cc\u653e**\u8fd9\u4e2a\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u5185**\u5bf9\u5e94\u6df1\u5ea6\u7684\u70b9\u7684\u6570\u91cf\uff0c\u540c\u65f6\u6211\u4eec\u518d\u5bf9**\u6574\u68f5\u6811**\u5f00\u4e00\u4e2a\u6876\uff0c\u653e\u6574\u68f5\u6811\u5185\u5bf9\u5e94\u6df1\u5ea6\u7684\u70b9\u7684\u6570\u91cf\uff1b\n\n\u7136\u540e\u6211\u4eec\u76f4\u63a5dfs\uff0c\u6c42\u51fa\u6876\u91cc\u7684\u70b9\u6570\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6df1\u5ea6\uff0c\u5982\u679c\u8fd9\u4e2a\u6df1\u5ea6\u4e0b\u70b9\u6570\u5c0f\u4e8e\u7b49\u4e8e2\u5219\u76f4\u63a5\u8df3\u8fc7\uff0c\u5426\u5219\u628a\u7b54\u6848\u52a0\u4e0a**\u8be5\u6df1\u5ea6\u4e0b\u6574\u68f5\u6811\u7684\u5bf9\u5e94\u70b9\u6570\u4e2d\u9009\u4e09\u4e2a\u7684\u7ec4\u5408\u6570**\uff1b\n\n\u4f46\u6211\u4eec\u53c8\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u4f1a\u7b97\u9519\uff0c**\u56e0\u4e3a\u5982\u679c\u6709\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\uff0c\u8fd9\u4e24\u4e2a\u70b9\u7684LCA\u5c31\u4e0d\u662f\u5f53\u524d\u679a\u4e3e\u7684\u6839**\uff0c\u8fdd\u80cc\u4e86\u6211\u4eec\u7684\u5b9a\u4e49\uff0c\u5e94\u8be5\u662f\u4e0d\u80fd\u7b97\u7684\uff1b\n\n\u6211\u4eec\u518d\u8003\u8651\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff1a\n\n1.\u5728\u540c\u4e00\u4e2a\u5b50\u6811\u5185\u9009\u4e24\u4e2a\uff0c\u5728\u5176\u4ed6\u4e00\u4e2a\u5b50\u6811\u5185\u9009\u4e00\u4e2a\uff1b\n\n2.\u5728\u540c\u4e00\u4e2a\u5b50\u6811\u5185\u9009\u4e09\u4e2a\uff1b\n\n\u5bf9\u4e8e\u540e\u4e00\u79cd\u76f4\u63a5\u6c42\u7ec4\u5408\uff1b\u524d\u4e00\u79cd\u7684\u8bdd\u8fd8\u5f97\u4e58\u4e0a\u6574\u4f53\u5bf9\u5e94\u6df1\u5ea6\u7684\u70b9\u6570\u51cf\u53bb\u8be5\u5b50\u6811\u5185\u7684\u70b9\u6570\uff08\u56e0\u4e3a\u53e6\u4e00\u4e2a\u70b9\u662f\u5728\u5176\u4ed6\u5b50\u6811\u5185\u9009\u7684\uff09\u3002\n\n\u7b97\u6cd5\u5206\u6790\u5b8c\u6bd5\uff0c**\u603b\u7ed3\u8d77\u6765\u5c31\u662f\u66b4\u529b\u679a\u4e3e+\u7b80\u5355\u7ec4\u5408\u6570\u5b66+\u7b80\u5355\u5bb9\u65a5\u539f\u7406**\uff0c~~\u7531\u4e8e\u6d89\u53ca\u5230\u679a\u4e3e\u6df1\u5ea6\u5185\u679a\u4e3e\u5b50\u6811\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u5206\u6790\uff0c\u63a8\u6d4b\u4e3aO(n\u00b2)~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#define INL inline\n#define REG register\n#include <cstdio>\n#include <iostream>\n#include <memory.h>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=5050;\nint n,sum[maxn];\nll ans;\nvector<int> graf[maxn],buck[maxn];\nll c[maxn][5];//\u8bb0\u5fc6\u5316\u6570\u7ec4\uff0c\u7531\u4e8e\u6700\u591a\u7528\u5230\u90093\u4e2a\uff0c\u7b2c\u4e8c\u7ef4\u4e0d\u7528\u5f00\u592a\u5927\nINL int read(){//\u5feb\u8bfb\n    REG int sum=0,sign=1;\n    REG char tmp=getchar();\n    while(tmp<'0'||tmp>'9'){\n        if(tmp=='-'){\n            sign=-1;\n        }\n        tmp=getchar();\n    }\n    while(tmp>='0'&&tmp<='9'){\n        sum=(sum<<1)+(sum<<3)+(tmp-'0');\n        tmp=getchar();\n    }\n    return sum*sign;\n}\nll comb(int x,int y){//\u8bb0\u5fc6\u5316\u641c\u7d22\u6c42\u7ec4\u5408\u6570\n    if(y<0||x<0||y>x){\n        return 0;\n    }\n    if(c[x][y]){\n        return c[x][y];\n    }\n    if(x==y||!y){\n        return 1;\n    }\n    return c[x][y]=comb(x-1,y)+comb(x-1,y-1);\n}\nvoid dfs(int pos,int fa,int root/*\u6876\u7f16\u53f7*/,int dep/*\u5f53\u524d\u6df1\u5ea6*/){\n    if((int)buck[root].size()==dep){//\u5b50\u6811\u5185\u7684\u6876\n        buck[root].push_back(1);\n    }\n    else{\n        buck[root][dep]++;\n    }\n    sum[dep]++;//\u5168\u5c40\u6876\n    for(REG unsigned i=0;i<graf[pos].size();i++){\n        REG int tar=graf[pos][i];\n        if(tar==fa){//\u9632\u6b62\u5012\u6d41\n            continue;\n        }\n        dfs(tar,pos,root,dep+1);\n    }\n}\nint main(){\n    //freopen(\"P3565.in\",\"r\",stdin);\n    //freopen(\"P3565.out\",\"w\",stdout);\n    n=read();\n    for(REG int i=0;i<n-1;i++){\n        REG int x=read(),y=read();\n        graf[x].push_back(y);\n        graf[y].push_back(x);\n    }\n    for(REG int pos=1;pos<=n;pos++){//\u679a\u4e3eLCA\n        if(graf[pos].size()<=2){//\u53ea\u6709\u4e24\u4e2a\u4ee5\u4e0b\u7684\u513f\u5b50\u4e00\u5b9a\u6ca1\u6cd5\u5f53\u4e09\u4e2a\u70b9\u7684LCA\n            continue;\n        }\n        REG int maxd=-1;\n        memset(sum,0,sizeof(sum));//\u8bb0\u5f97\u6e05\u7a7a\uff01\uff01\n        for(REG unsigned i=0;i<graf[pos].size();i++){\n            dfs(graf[pos][i],pos,graf[pos][i],0);\n            maxd=max<int>(maxd,buck[graf[pos][i]].size()-1);//\u4fdd\u8bc1\u679a\u4e3e\u5230\u6700\u6df1\u6df1\u5ea6\n        }\n        for(REG int i=0;i<=maxd;i++){//\u679a\u4e3e\u6df1\u5ea6\n            if(sum[i]<=2){//\u4e0d\u5230\u4e09\u4e2a\u70b9\uff0c\u6ca1\u5f97\u9009\n                continue;\n            }\n            ans+=comb(sum[i],3);//\u7b97\u4e0a\u4e0d\u5408\u6cd5\u65b9\u6848\u7684\u8be5\u6df1\u5ea6\u4e0b\u7684\u65b9\u6848\u6570\n            for(REG unsigned j=0;j<graf[pos].size();j++){\n                if(i>=(int)buck[graf[pos][j]].size()){//\u6709\u53ef\u80fd\u6709\u7684\u5b50\u6811\u6df1\u5ea6\u4e0d\u8db3\u679a\u4e3e\u5230\u7684\u6df1\u5ea6\n                    continue;\n                }\n                if(buck[graf[pos][j]][i]>=2){//\u53bb\u9664\u7b2c\u4e00\u79cd\u4e0d\u5408\u6cd5\u65b9\u6848\n                    ans-=comb(buck[graf[pos][j]][i],2)*(sum[i]-buck[graf[pos][j]][i]);\n                }\n                if(buck[graf[pos][j]][i]>=3){//\u53bb\u9664\u7b2c\u4e8c\u79cd\u4e0d\u5408\u6cd5\u65b9\u6848\n                    ans-=comb(buck[graf[pos][j]][i],3);\n                }\n            }\n        }\n        for(REG unsigned i=0;i<graf[pos].size();i++){//\u8bb0\u5f97\u6e05\u7a7a*2\n            buck[graf[pos][i]].clear();\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n```\n",
        "postTime": 1586944992,
        "uid": 137280,
        "name": "FC_Viiiiictor_K",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3565)\n\n~~\u4e3a\u4ec0\u4e48\u603b\u6709\u4eba\u8bf4\u8fd9\u662f\u957f\u94fe\u5256\u5206\u677f\u5b50\u9898\uff1f~~\n\n### Solution\n\n\u9898\u610f\u975e\u5e38\u7b80\u6d01\uff0c\u8fd9\u8ba9\u6211\u5c11\u4e86\u8f6c\u5316\u9898\u610f\u8fd9\u4e00\u6b65\u3002\n\n\u6211\u4eec\u8003\u8651\u4ec0\u4e48\u6837\u7684\u4e09\u4e2a\u70b9**\u5728\u6811\u4e0a**\u6ee1\u8db3\u4e24\u4e24\u4e4b\u95f4\u8ddd\u79bb $d$ \u76f8\u7b49\uff1a\n\n1. \u5bf9\u4e8e\u67d0\u4e00\u4e2a\u70b9\uff0c\u5b83\u7684\u5b50\u6811\u5185\u4ee5\u5b83\u4e3aLCA\uff0c\u8ddd\u5b83 $d$ \u7684\u4e09\u4e2a\u70b9\n2. \u5bf9\u4e8e\u67d0\u4e00\u4e2a\u70b9\uff0c\u5b83\u7684 $d$ \u7ea7\u7956\u5148\u4ee5\u53ca\u5b50\u6811\u5185\u4e24\u4e2a\u4ee5\u5b83\u4e3aLCA\uff0c\u8ddd\u5b83 $d$ \u7684\u70b9\n\n\u90a3\u4e48\u6211\u4eec\u9009\u62e9\u7528\u6811\u5f62DP\u3002\n\n\u5bf9\u4e8e\u60c5\u51b51\uff0c\u8bbe $f_{i,j}$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u8ddd $i$ \u8ddd\u79bb\u4e3a $j$ \u7684\u70b9\u6570\u3002\n\n\u90a3\u4e48\u60c5\u51b52\u600e\u4e48\u8868\u793a\u6bd4\u8f83\u597d\uff1f~~\u770b\u9898\u89e3~~\u53d1\u73b0\u53ef\u4ee5\u7528\u4e0a\u9762\u63d0\u5230\u7684 `\u67d0\u4e00\u4e2a\u70b9` \uff0c\u5373\u4e2d\u95f4\u70b9 \u3002\n\n\u8bbe $g_{i,j}$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u4e24\u4e2a\u70b9\u5230LCA\u7684\u8ddd\u79bb\u76f8\u7b49\uff08\u6b64\u5904\u7528 $d$ \u8868\u793a\uff09\uff0cLCA\u5230 $i$ \u7684\u8ddd\u79bb\u4e3a $d-j$ \u7684**\u70b9\u5bf9**\u6570\u3002\n\n \u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\u6700\u6734\u7d20\u7684\u8f6c\u79fb\uff1a\n$$\nans+=g_{i,0},ans+=\\sum_{u,v\\in son_i,u\\not=v}f_{u,j-1}\\times g_{v,j+1}$$\n$$g_{i,j}+=\\sum_{u,v\\in son_i,u\\not=v}f_{u,j-1}\\times f_{v,j-1}$$\n$$\nf_{i,j}+=\\sum_{u\\in son_i}f_{u,j-1},g_{i,j}+=\\sum_{u\\in son_i}g_{u,j+1}\n$$\n\u8fd9\u4e2a\u8f6c\u79fb\u6709\u7684\u5730\u65b9\u6bd4\u8f83\u597d\u60f3\uff0c\u4f46\u662f\u8003\u8651\u5468\u5168\u8fd8\u662f\u8981\u8c28\u614e\u601d\u8003\u7684\u3002\u81f3\u4e8e\u8fd9\u91cc\u9762\u6bcf\u4e2a\u8f6c\u79fb\u7684\u542b\u4e49\uff0c\u753b\u4e2a\u56fe\u4f1a\u604d\u7136\u5927\u609f\u7684\u3002\n\n~~\u8bb2\u5b8c\u4e86~~\n\n\u56e0\u4e3a\u662f\u6700\u6734\u7d20\u7684\uff0c\u5728\u4f1a\u679a\u4e3e\u5b50\u6811\u7684\u4e24\u4e2a\u70b9\u7684\u8f6c\u79fb\u4e2d\uff0c\u590d\u6742\u5ea6\u663e\u7136\u662f\u4f1a\u7206\u70b8\u7684\u3002\n\n---\n\n\u6765\u5230\u7b2c\u4e00\u4e2a\u4f18\u5316\u2014\u2014\u5229\u7528\u524d\u7f00\u548c\u7684**\u601d\u60f3**\n\n\u8003\u8651\u5c06 $i$ \u7684**\u4e00\u4e2a**\u65b0\u513f\u5b50 $u$ \u52a0\u5165\u6811\u4e2d\u5bf9 $ans$ \u4ea7\u751f\u7684\u8d21\u732e\uff0c\u5e94\u8be5\u662f $ans+=g_{i,j}\\times f_{u,j-1}$ \uff0c\u56e0\u4e3a\u8fd9\u4e2a\u513f\u5b50\u53ea\u5bf9\u4e4b\u524d\u52a0\u5165\u7684\u6709\u8d21\u732e\uff08\u4e5f\u53ef\u4ee5\u81ea\u5df1\u6a21\u62df\u63d2\u5165\u513f\u5b50\u7b97\u7b97\uff09\n\n\u540c\u7406\u53ef\u4ee5\u5f97\u5230\uff1a $g_{i,j}+=f_{i,j}\\times f_{u,j-1}$ \n\n\u90a3\u4e48\u8fd9\u4e94\u79cd\u8f6c\u79fb\u5c31\u90fd\u662f $O(n)$ \u8f6c\u79fb\u7684\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86 $O(n^2)$ (\u00b4\u25bd`\u0283\u2661\u01aa)\n\n~~\u5b8c\u7ed3~~\n\n\u4ec0\u4e48\uff0c\u4f60\u8bf4\u6211\u4e0a\u9762\u63d0\u5230\u4e86\u957f\u94fe\u5256\u5206\uff1f\n\n---\n\n\u8fd9\u91cc\u662f\u7b2c\u4e8c\u6b21\u4f18\u5316\u2014\u2014\u957f\u94fe\u5256\u5206\n\n\u4ed4\u7ec6\u770b\u6700\u540e\u4e24\u4e2a\u8f6c\u79fb\uff1a $f_{i,j}+=\\sum_{u\\in son_i}f_{u,j-1},g_{i,j}+=\\sum_{u\\in son_i}g_{u,j+1}$ \n\n\u8fd9\u6837\u53ef\u80fd\u4e0d\u660e\u663e\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff1a $f_{i,j}=f_{son,j-1},g_{i,j}=g_{son,j+1}$ \n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u6211\u4eec\u662f\u53ef\u4ee5\u505a\u5230\u76f4\u63a5\u8d4b\u503c\u7684\n\n\u7528**\u6307\u9488**\u5199\u5c31\u662f $f_i=f_{son}-1,g_{i}=g_{son}+1$ \n\n\u5982\u679c\u662f\u5728\u6811\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u957f\u94fe\u5256\u5206\uff0c\u8ba9\u91cd\u513f\u5b50\u76f4\u63a5\u8d4b\u503c\uff0c\u8f7b\u513f\u5b50\u548c\u539f\u6765\u4e00\u6837\u8f6c\u79fb\n\n\u56e0\u4e3a\u8f7b\u513f\u5b50\u90fd\u662f\u91cd\u94fe\u7684\u9876\u90e8\uff0c\u6240\u4ee5\u8f6c\u79fb\u590d\u6742\u5ea6\u5c31\u662f\u91cd\u94fe\u957f\u5ea6\n\n\u90a3\u4e48\u5168\u5c40\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(\\sum len)=O(n)$ \n\n\u6b63\u5f0f\u5b8c\u7ed3(\u2267\u2207\u2266)\uff89\n\n### Code\n\n```c++\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define ll long long\n\nusing namespace std;\nconst int N=100010;\nint n;\n\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){x=x*10+(ch^48);ch=getchar();}\n    return x*f;\n}\n\nstruct edge{\n    int to,nxt;\n}e[N<<1];\nint head[N],cnt;\ninline void add(int u,int v){\n    e[++cnt].to=v;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n}\n\nint h[N],son[N];\nvoid dfs1(int u,int fa){\n    for(int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v==fa) continue;\n        dfs1(v,u);\n        h[u]=max(h[u],h[v]);\n        if(h[v]>h[son[u]]) son[u]=v;\n    }\n    h[u]=h[son[u]]+1;\n}\n\nll *f[N],*g[N],tmp[N<<2],*id=tmp,ans;//\u8fd9\u91cc\u662f\u6307\u9488\nvoid dfs2(int u,int fa){\n    if(son[u]) f[son[u]]=f[u]+1,g[son[u]]=g[u]-1,dfs2(son[u],u);\n    f[u][0]=1;ans+=g[u][0];\n    for(int i=head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v==fa||v==son[u]) continue;\n        f[v]=id;id+=h[v]<<1;\n        g[v]=id;id+=h[v]<<1;\n        dfs2(v,u);\n        for(int j=0;j<h[v];j++){\n            if(j) ans+=f[u][j-1]*g[v][j];\n            ans+=g[u][j+1]*f[v][j];\n        }\n        for(int j=0;j<h[v];j++){\n            g[u][j+1]+=f[u][j+1]*f[v][j];\n            if(j) g[u][j-1]+=g[v][j];\n            f[u][j+1]+=f[v][j];\n        }\n    }\n}\n\nint main(){\n    n=read();\n    for(int i=1,u,v;i<n;i++){\n        u=read();v=read();\n        add(u,v);add(v,u);\n    }\n    dfs1(1,0);\n    f[1]=id;id+=h[1]<<1;\n    g[1]=id;id+=h[1]<<1;\n    dfs2(1,0);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1603356915,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "P3565 [POI2014]HOT-Hotels"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u505a\u4e00\u6b21\u6811\u5f62dp\uff0c\u628a\u6bcf\u4e2a\u6df1\u5ea6\u7684\u70b9\u4f7f\u7528\u4e58\u6cd5\u539f\u7406\uff1a   \n```\n\u8bbef1,f2,f3\u5206\u522b\u4e3a\u67091\uff0c2\uff0c3\u4e2a\u8ddd\u79bb\u76f8\u540c\u7684\u70b9\u7684\u65b9\u6848\u6570\n\u8bbef3[k]+=f2[k]*g[k],f2[k]+=f1[k]*g[k],f1[k]+=g[k],g[k]=0;\n```\n```\n#include <bits/stdc++.h>\n#define ll long long\n#define res register ll\n#define N 5001\nusing namespace std;\nll maxdeep,f3[N],f2[N],f1[N],d[N],n,tot,g[N],deep[N],ans;\nbool vis[N];\nstruct papa{\n\tll to,next;\n}e[N];\ninline ll read(){\n   ll s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\ninline void add(ll x,ll y){\n\te[++tot].to=y;\n\te[tot].next=d[x];\n\td[x]=tot;\n}\ninline void dfs(ll now,ll fa){\n\tmaxdeep=max(maxdeep,deep[now]);\n\tg[deep[now]]++;\n\tfor(res i=d[now];i;i=e[i].next){\n\t\tif(e[i].to==fa) continue;\n\t\tdeep[e[i].to]=deep[now]+1;\n\t\tdfs(e[i].to,now);\n\t}\n}\nint main(){\n\tn=read();\n\tfor(res i=1;i<=n-1;i++){\n\t\tll x=read(),y=read();\n\t\tadd(x,y);\n\t    add(y,x);\n\t}\n\tfor(res i=1;i<=n;i++)\n\t{\n\t\tmemset(f3,0,sizeof(f3));\n\t\tmemset(f1,0,sizeof(f1));\n\t\tmemset(f2,0,sizeof(f2));\n\t    for(res j=d[i];j;j=e[j].next){\n\t    \tdeep[e[j].to]=maxdeep=1;\n\t    \tdfs(e[j].to,i);\n\t    \tfor(res k=maxdeep;k>=1;k--)\n\t    \t  f3[k]+=f2[k]*g[k],f2[k]+=f1[k]*g[k],f1[k]+=g[k],g[k]=0;\n\t\t}\n\t\tfor(res k=n;k>=1;k--)\n\t\t  ans+=f3[k];\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1539864562,
        "uid": 26848,
        "name": "miaokehao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "~~\u8fd9\u4e2a\u662fn\u65b9\u505a\u6cd5\uff0c\u4ee5\u540e\u518d\u8865\u957f\u94fe\u5256\u5206\u7684~~\n\n\u5f88\u660e\u663e\u5230\u4e00\u4e2a\u70b9\u8ddd\u79bb\u76f8\u7b49\u7684\u4e09\u4e2a\u70b9\u4e24\u4e24\u4e4b\u95f4\u8ddd\u79bb\u76f8\u7b49\u3002\n\n\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u91cd\u5fc3\uff0c\u5bf9\u5b50\u6811\u8fdb\u884c\u66b4\u529b\u7edf\u8ba1,\u6ce8\u610f\u7edf\u8ba1\u7684\u987a\u5e8f\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<cmath>\nusing namespace std;\ntypedef long long ll;\nconst ll size=5e3+10;\nll n,ans,tot,mx,d[size],tmp[size],s1[size],s2[size];\nll head[size],ver[size*2],next[size*2];\ninline ll read(){\n\tll x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\ninline void add(ll x,ll y){\n\tver[++tot]=y;next[tot]=head[x];head[x]=tot;\n}\ninline void dfs(ll x,ll fa){\n\tmx=max(mx,d[x]);\n\ttmp[d[x]]++;\n\tfor(ll i=head[x];i;i=next[i]){\n\t\tll y=ver[i];\n\t\tif(y==fa) continue;\n\t\td[y]=d[x]+1;dfs(y,x);\n\t}\n}\nint main(){\n\tn=read();\n\tfor(ll i=1;i<n;i++){\n\t\tll x=read(),y=read();\n\t\tadd(x,y);add(y,x);\n\t}\n\tfor(ll x=1;x<=n;x++){\n\t\tmemset(s1,0,sizeof(s1));\n\t\tmemset(s2,0,sizeof(s2));\n\t\tfor(ll i=head[x];i;i=next[i]){\n\t\t\tll y=ver[i];mx=0;\n\t\t\td[y]=1;dfs(y,x);\n\t\t\tfor(ll j=1;j<=mx;j++){\n\t\t\t\tans+=s2[j]*tmp[j];\n\t\t\t\ts2[j]+=s1[j]*tmp[j];\n\t\t\t\ts1[j]+=tmp[j];\n\t\t\t}\n\t\t\tfor(ll j=1;j<=mx;j++) tmp[j]=0;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1543061067,
        "uid": 53032,
        "name": "\u5c0f\u5858\u7a7a\u660e",
        "ccfLevel": 0,
        "title": "P3565 [POI2014]HOT-Hotels(n^2)"
    },
    {
        "content": "### [P3565 \\[POI2014\\]HOT-Hotels](https://www.luogu.com.cn/problem/P3565)\n [\u53c2\u8003\u9898\u89e3](https://www.luogu.com.cn/blog/jasony/p3565-poi2014hot-hotels)\n\n>  \u9898\u76ee\u5927\u610f\uff1a\n>  \u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u5728\u6811\u4e0a\u9009 3 \u4e2a\u70b9\uff0c\u8981\u6c42\u4e24\u4e24\u8ddd\u79bb\u76f8\u7b49\uff0c\u6c42\u65b9\u6848\u6570\u3002\n>  \n\u4e09\u4e2a\u70b9\u6811\u4e0a\u4e24\u4e24\u8ddd\u79bb\u4e3ad\u5b58\u5728\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\n\n - \u67d0\u4e2a\u70b9\u4e09\u4e2a\u5b50\u6811\uff08\u4fdd\u8bc1\u8be5\u70b9\u662fLCA\uff09\u4e2d\u5206\u522b\u7531\u4e09\u4e2a\u70b9\u8ddd\u79bb\u5b83\u4e3ad\n - \u5bf9\u4e8e\u67d0\u4e00\u4e2a\u70b9\uff0c\u5b83\u7684 d \u7ea7\u7956\u5148\u4ee5\u53ca\u5b50\u6811\u5185\u4e24\u4e2a\u4ee5\u5b83\u4e3aLCA\uff0c\u8ddd\u5b83 d \u7684\u70b9\n\n\u5bf9\u4e8e\u60c5\u51b5\u4e00\uff0c\u8bbe\u8ba1dp\uff1a $f_{u,j}$\u8868\u793a\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u8dddi\u8ddd\u79bb\u4e3a$j$\u7684\u70b9\u6570\n\n\u5bf9\u4e8e\u60c5\u51b5\u4e8c\uff0c\u8bbe\u8ba1dp\uff1a$g_{u,j}$\u8868\u793a\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u4e24\u4e2a\u70b9\u7684\u5230LCA\u8ddd\u79bb\u76f8\u7b49\uff08\u6b64\u51fa\u7528d\u8868\u793a\uff09\uff0cLCA\u5230$u$\u7684\u8ddd\u79bb\u4e3a$d-j$\u7684**\u70b9\u5bf9**\n\n\u5bf9\u4e8e$f_{u,j}$\u7684\u72b6\u6001\u8f6c\u79fb\u5341\u5206\u663e\u7136\uff1a$f_{u,j}=\\sum_{v\\in son_u }f_{v,j-1}$\n\n\n\u800c\u5bf9\u4e8e$g_{u,j}$\u6765\u8bf4\u5b58\u5728\u4e24\u79cd\u60c5\u51b5\n\n - \u67d0\u4e2a\u5b50\u6811\u5185\u90e8\u5b58\u5728\u4e24\u4e2a\u70b9\uff1a$g_{u,j}=\\sum_{v\\in son_u}g_{v,j+1}$\n - \u4e24\u4e2a\u4e0d\u540c\u7684\u5b50\u6811\u5404\u8d21\u732e\u4e00\u4e2a\u70b9\uff0c\u4ee5$u$\u4e3aLCA\uff1a$g_{u,j}=\\sum_{v,w\\in son_u,v \\ne w} f_{v,j-1}\u00d7f_{w,j-1}$\n\n\u5f88\u660e\u663e\uff0c\u7b2c\u4e8c\u4e2d\u60c5\u51b5$f_{v,j-1}\u00d7f_{w,j-1}, f_{w,j-1}\u00d7f_{v,j-1}$\u662f\u540c\u4e00\u79cd\u60c5\u51b5\uff0c\u8fd9\u91cc\u6211\u4eec\u8ba9$v$\u662f$u$**\u8f83\u9760\u524d**\u7684\u513f\u5b50\u5373\u53ef\u907f\u514d\u91cd\u590d\u8ba1\u7b97\n\n\u800c\u5bf9\u4e8e\u7b54\u6848\u8ba1\u7b97\u6765\u8bf4\u4e5f\u5b58\u5728\u4e24\u79cd\u60c5\u51b5\uff1a\n\u9996\u5148\u5bf9\u4e8e\u4e09\u4e2a\u70b9**\u6811\u4e0a\u4e24\u4e24\u8ddd\u79bb\u4e3ad**\u7684\u60c5\u51b5\u90fd\u53ef\u4ee5\u770b\u6210\u4e24\u4e2a\u70b9\u5728\u4e00\u4e2a\u5b50\u6811\u4e2d\uff0c\u800c\u53e6\u4e00\u4e2a\u70b9\u201c**\u522b\u5904**\u201d\n\n - \u5728\u5b50\u6811$v$\u4e2d\u9009\u4e00\u4e2a\u70b9\uff0c\u800c\u5728**\u5176\u4ed6\u5b50\u6811**\u4e2d\u9009\u4e24\u4e2a\u70b9\uff1a$g_{u,j+1}\u00d7f_{v,j}$\n - \u5728\u5b50\u6811$v$\u4e2d\u9009\u4e24\u4e2a\u70b9\uff0c\u800c\u5728**\u5176\u4ed6\u5b50\u6811**\u4e2d\u9009\u4e00\u4e2a\u70b9\uff1a$f_{u,j-1}\u00d7g_{v,j}$\n\n\u540c\u6837\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u53ea\u9700\u8981\u8ba9**\u5176\u4ed6\u5b50\u6811**\u641e\u6210$v$\u524d\u9762\u7684\u5b50\u6811\u5373\u53ef\n\u6ce8\u610f\u4e0a\u8ff0$g_{u,j+1}$\u548c$f_{u,j-1}$\u90fd\u8fd8\u672a\u7b97$v$\u5bf9\u5176\u7684\u8d21\u732e\uff0c\u8fd9\u4e2a\u53ea\u9700\u8981\u5148\u8ba1\u7b97\u7b54\u6848\u5728\u52a0\u8d21\u732e\u5373\u53ef\u3002\n\n\u8ba1\u7b97\u72b6\u6001\u6570\u7ec4\u548c\u7b54\u6848\u65f6\uff0c\u90fd\u6709\u8ba1\u7b97\u524d\u9762\u5b50\u6811\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u8fd0\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\u5373\u53ef\u8fb9\u8ba1\u7b97\u7b54\u6848\uff0c\u8fb9\u8f6c\u79fb\u6570\u7ec4\u3002\n\n\u8fd9\u91cc\u8981\u63d0\u4e00\u70b9\uff0c\u6211\u4eec\u81f3\u4eca\u6ca1\u6709\u63d0\u5230$g_{u,0}$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5b83\u786e\u5b9e\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u4f46\u662f\u6211\u4eec**\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86**\uff0c\u5982\u679c\u5728\u6b64\u52a0\u4e0a\u4f1a\u91cd\u590d\u8ba1\u7b97\u3002\n\n\u800c\u5176\u4ed6\u535a\u4e3b\u5728\u8ba1\u7b97\u7684\u65f6\u5019\u52a0\u4e0a$g_{u,0}$**\u5b9e\u9645\u4e0a**\u589e\u52a0\u7684\u65f6$g_{wson,1}$\u5373\u91cd\u513f\u5b50\u7684\u8d21\u732e\u3002\n\n\u6839\u636eg\u7684\u8f6c\u79fb\u65b9\u7a0b\u53ef\u77e5\u9053\uff1a$g_{u,0}$\u7684\u8d21\u732e**\u5168\u90e8**\u6765\u81ea\u4e8e$\\sum_{v\\in son_u}g_{v,1}$\uff0c\u800c\u8ba1\u7b97$f_{u,j-1}\u00d7g_{v,j}$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u65f6\u6211\u4eec\u5177\u4f53\u5199\u4e00\u4e0b$f_{u,0}\u00d7g_{v,1}$\u800c$f_{u,0}=1$\uff0c\u56e0\u6b64\u5df2\u7ecf\u8ba1\u7b97\u8fc7$g_{u,0}$\u7684\u8d21\u732e\uff01\uff01\uff01\n* * *\n\u7136\u540e\u5c31\u662f\u957f\u94fe\u5256\u5206\u4f18\u5316dp\uff0c\u6bcf\u6b21\u4fdd\u5b58\u957f\u513f\u5b50\u7684\u8d21\u732e\uff0c\u5176\u4ed6\u513f\u5b50\u66b4\u529b\u5408\u5e76\uff0c\u6bcf\u6761\u957f\u94fe\u90fd\u4f1a\u5728\u94fe\u5934\u66b4\u529b\u5408\u5e76\u4e00\u6b21\u65f6\u95f4\u590d\u6742\u5ea6$O(len)$\u603b\u7684\u5408\u5e76\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\n\n\u6700\u540e\u5982\u679c\u5199\u6307\u9488\u7248\u672c\u7684\u8bdd\uff0c\u7531\u4e8eg\u6570\u7ec4\u662f\u5012\u7740\u8f6c\u79fb\u7684\uff0c$f$\u8981\u591a\u5f00\u4e00\u500d\u7684\u5185\u5b58\uff0c\u5426\u5219g\u53ef\u80fd\u5012\u56de\u6765\u8986\u76d6\u6389$f$\n### code\n```cpp\n#define IO ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr)\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nusing ll=long long;\nconstexpr int N=5010;\nint h[N],e[2*N],ne[2*N],idx;\nvoid add(int a,int b){e[idx]=b,ne[idx]=h[a],h[a]=idx++;}\nint n;\nint dep[N],son[N];\nvoid dfs1(int u,int fa)\n{\n    for(int i=h[u];i!=-1;i=ne[i])\n    {\n        int v=e[i];\n        if(v==fa) continue;\n        dfs1(v,u);\n        if(dep[v]>dep[son[u]]) son[u]=v;\n    }\n    dep[u]=dep[son[u]]+1;\n}\n\nll pool[4*N];\nll *f[N],*g[N],*now=pool;\nll ans;\nvoid dfs2(int u,int fa)\n{\n    f[u][0]=1;\n    if(son[u])\n    {\n        f[son[u]]=f[u]+1;\n        g[son[u]]=g[u]-1;\n        dfs2(son[u],u);\n        ans+=g[son[u]][1];// \u52a0\u4e0a\u91cd\u513f\u5b50\u7684\u8d21\u732e\n    }\n    for(int i=h[u];i!=-1;i=ne[i])\n    {\n        int v=e[i];\n        if(v==fa||v==son[u]) continue;\n        f[v]=now;now+=dep[v]<<1;\n        g[v]=now;now+=dep[v];\n        dfs2(v,u);\n        // \u8fb9\u8ba1\u7b97\n        for(int j=0;j<dep[v];j++)\n        {\n            if(j) ans+=f[u][j-1]*g[v][j];\n            ans+=g[u][j+1]*f[v][j];\n        }\n        // \u8fb9\u8f6c\u79fb\n        for(int j=0;j<dep[v];j++)\n        {\n            g[u][j+1]+=f[u][j+1]*f[v][j];\n            if(j) g[u][j-1]+=g[v][j];\n            f[u][j+1]+=f[v][j];\n        }\n    }\n    \n}\nint main()\n{\n    IO;\n    cin>>n;\n    memset(h,-1,sizeof h);\n    for(int i=1;i<n;i++)\n    {\n        int u,v;\n        cin>>u>>v;\n        add(u,v);\n        add(v,u);\n    }\n    dfs1(1,0);\n    f[1]=now;now+=dep[1]<<1;//\u591a\u5f00\u4e00\u500d\u7684\u5185\u5b58\n    g[1]=now;now+=dep[1];\n    dfs2(1,0);\n    cout<<ans<<'\\n';\n    return 0;\n}\n```\n\u83dc\u83dc\u7684\u6211\u641e\u4e86\u4e00\u5929\u8fd9\u4e2a\u9898\u554a\u554a\u554a\u554a\n",
        "postTime": 1613370601,
        "uid": 319741,
        "name": "Nateiru",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "[luogu's link](https://www.luogu.com.cn/problem/P3565)\n\n#### \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u5728\u6811\u4e0a\u9009 $3$ \u4e2a\u70b9\uff0c\u8981\u6c42\u4e24\u4e24\u8ddd\u79bb\u76f8\u7b49\uff0c\u6c42\u65b9\u6848\u6570\u3002\n\n#### Solution\uff1a\n\n\u6765\u4e2a\u9898\u89e3\u533a\u6ca1\u6709\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u4e2d\u95f4\u70b9\uff0c\u679a\u4e3e\u4e2d\u95f4\u70b9\u7684\u5b50\u6811\uff0c\u518d\u679a\u4e3e\u4e0b\u8ddd\u79bb\u3002\n\n\u8003\u8651\u5b50\u6811\u7684\u4e2a\u6570\uff1a\n\n$3$ \u4e2a\uff1a\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u4e3a $x_1 \\times x_2 \\times x_3$\n\n$4$ \u4e2a\uff1a\u5bf9\u7b54\u6848\u8d21\u732e\u4e3a $x_1 \\times x_2 \\times x_3+x_1 \\times x_2 \\times x_4+x_1 \\times x_3 \\times x_4+x_2 \\times x_3 \\times x_4$\uff0c\u5373\u5728 $3$ \u4e2a\u7684\u57fa\u7840\u4e0a\u589e\u52a0  $x_4\\times (x_1\\times x_2+x_1\\times x_3+x_2\\times x_3)$\u3002\n\n\u540c\u7406\u53ef\u5f97 $5$ \u4e2a\u65f6\uff0c\u5728 $4$ \u4e2a\u7684\u57fa\u7840\u4e0a\u589e\u52a0 $x_5\\times(x_1\\times x_2+x_1\\times x_3+x_1\\times x_4+x_2\\times x_3+x_2\\times x_4+x_3\\times x_4)$\u3002\n\n\u589e\u52a0\u7684\u7528 $sum2$ \u7ef4\u62a4\u3002\n\n$x_4\\times (x_1\\times x_2+x_1\\times x_3+x_2\\times x_3) \\Rightarrow x_5\\times(x_1\\times x_2+x_1\\times x_3+x_1\\times x_4+x_2\\times x_3+x_2\\times x_4+x_3\\times x_4)$\uff0c\u589e\u52a0\u4e86 $x_5\\times(x_1+x_2+x_3)$\uff0c\u518d\u7528 $sum1$ \u7ef4\u62a4\u5373\u53ef\u3002\n\n#### Code\uff1a\n\n```cpp\n/*\n * @Author: FuTianyu \n * @Date: 2020-11-08 18:44:32 \n * @Last Modified by: FuTianyu\n * @Last Modified time: 2020-11-08 19:18:09\n */\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define REP(i,a,b) for(int i=a;i>=b;i--)\n/*\n\u5feb\u8bfb\u5feb\u8f93\n*/\nconst int N=5e3+5;\nint n,fir[N],tot;\nstruct edge{\n\tint nxt,to;\n}e[N<<1];\nvoid add(int u,int v){\n\te[++tot]={fir[u],v};\n\tfir[u]=tot;\n\te[++tot]={fir[v],u};\n\tfir[v]=tot;\n}\nint MaxDeep,dep[N],Ans,sum1[N],sum2[N];\nvoid dfs(int u,int dad,int Deep){\n\tMaxDeep=max(MaxDeep,Deep+1);\n\tdep[Deep]++;\n\tfor(int i=fir[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==dad) continue;\n\t\tdfs(v,u,Deep+1);\n\t}\n}\nvoid work(int u){\n\tfor(int i=fir[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tMaxDeep=1;\n\t\tdfs(v,u,1);\n\t\tFOR(j,1,MaxDeep){\n\t\t\tAns+=sum2[j]*dep[j];\n\t\t\tsum2[j]+=dep[j]*sum1[j];\n\t\t\tsum1[j]+=dep[j];\n\t\t\tdep[j]=0;\n\t\t}\n\t}\n}\nsigned main(){\n\tn=read();\n\tFOR(i,1,n-1) add(read(),read());\n\tFOR(i,1,n){\n\t\tmemset(sum1,0,sizeof sum1);\n\t\tmemset(sum2,0,sizeof sum2);\n\t\twork(i);\n\t}\n\twrite(Ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1604835711,
        "uid": 306443,
        "name": "\u5085\u5929\u5b87",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "## [POI2014]Hot-Hotels \u9898\u89e3\n\n##### $\\text{Description}$\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6c42\u6811\u4e0a\u5b58\u5728\u591a\u5c11\u4e2a\u4e09\u5143\u7ec4 $(a,b,c)$\uff0c\u6ee1\u8db3 $\\operatorname{dis}(a,b)=\\operatorname{dis}(a,c)=\\operatorname{dis}(b,v)$\u3002\n\n$n\\le 10^5$\n\n##### $\\text{Solution}$\n\n\u4e3a\u4e86\u5c06\u6765\u4f18\u5316\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u5148\u4ee5 $1$ \u4e3a\u6839\u3002\u8003\u8651\u6ee1\u8db3\u6761\u4ef6\u7684\u4e09\u5143\u7ec4\u4f1a\u5448\u73b0\u4ec0\u4e48\u6837\u7684\u5f62\u6001\uff1a\n\n![](https://lcuter.gitee.io/picture/Picture/clpf1.png)\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u4ee4 $f_{i,j}$ \u8868\u793a $i$ \u7684\u5b50\u6811\u4e2d\u5230 $i$ \u8ddd\u79bb\u4e3a $j$ \u7684\u8282\u70b9\u4e2a\u6570\u3002\u4f46\u662f\u76f4\u63a5\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u6bcf\u4e2a\u6df1\u5ea6\u8fdb\u884c\u7edf\u8ba1\u4f1a\u91cd\u590d\uff0c\u6211\u4eec\u5148\u6765\u8003\u8651\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\u8003\u8651\u4ee4 $g_{i,j}$ \u8868\u793a $i$ \u7684\u5b50\u6811\u4e2d\uff0c\u6709\u591a\u5c11\u4e8c\u5143\u7ec4 $(a,b)$ \u6ee1\u8db3 $\\operatorname{dis}(\\operatorname{LCA}(a,b),a)=\\operatorname{dis}(\\operatorname{LCA(a,b),b})=\\operatorname{dis}(\\operatorname{LCA}(a,b),i)+j$\u3002\u90a3\u4e48\u7b2c\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u770b\u6210\uff1a\n\n![](https://lcuter.gitee.io/picture/Picture/clpf2.png)\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u53ea\u9700\u4fdd\u8bc1\u5de6\u8fb9\u7684\u8282\u70b9\u548c\u53f3\u8fb9\u4e24\u4e2a\u8282\u70b9\u4e0d\u5728\u67d0\u4e00\u4e2a\u70b9\u7684\u540c\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u88ab\u91cd\u590d\u7edf\u8ba1\u3002\n\n\u90a3\u4e48\uff0c\u8282\u70b9 $now$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5e94\u662f\uff1a\n\n$$g_{now,0}+\\sum_{j}\\sum_{x,y\\in son(now)}f_{x,j-1}\\cdot g_{y,j+1}$$\n\n\u4e0a\u5f0f\u7684\u4e3b\u8981\u95ee\u9898\u5728\u4e8e\uff0c\u6211\u4eec\u8981\u8ba9\u5de6\u8282\u70b9\u548c\u53f3\u4e8c\u8282\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\uff0c\u6240\u4ee5\u9700\u8981\u679a\u4e3e\u4e0d\u540c\u7684\u513f\u5b50\u8fdb\u884c\u7edf\u8ba1\uff0c\u90a3\u4e48\u6df1\u5ea6\u90a3\u4e00\u7ef4\u4e5f\u9700\u8981\u53d1\u751f\u76f8\u5e94\u7684\u6539\u53d8\u3002\n\n$f$ \u7684\u8f6c\u79fb\u6bd4\u8f83\u5bb9\u6613\uff1a\n\n$$f_{now,j}=\\sum_{x\\in son(now)}f_{x,j-1}$$\n\n\u63a5\u4e0b\u6765\u8003\u8651 $g$ \u7684\u8f6c\u79fb\u3002\u6211\u4eec\u53d1\u73b0\uff0c$g$ \u53ef\u4ee5\u6709\u4e24\u79cd\u4ece\u513f\u5b50\u8f6c\u79fb\u7684\u65b9\u5f0f\uff1a\n\n![](https://lcuter.gitee.io/picture/Picture/clpf3.png)\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5176\u5b9e\u5c31\u662f $j$ \u5c11\u4e86\u4e00\u4e2a\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53d1\u73b0 $\\operatorname{LCA}(a,b)=now$\uff0c\u90a3\u4e48 $\\operatorname{dis}(\\operatorname{LCA}(a,b),a)=\\operatorname{dis}(\\operatorname{LCA}(a,b),b)=j$\uff0c\u7136\u540e $now$ \u5230\u5b83\u672c\u8eab\u7684\u8ddd\u79bb\u663e\u7136\u4e3a $0$\uff0c\u6545\u5c31\u5dee\u4e86 $j$\uff0c\u4e8e\u662f\u6709\uff1a\n\n$$g_{now,j}=\\sum_{x,y\\in son(now),x\\neq y}f_{x,j-1}\\cdot f_{y,j-1}+\\sum_{x\\in son(now)}g_{x,j+1}$$\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n^2)$ \u7684\u52a8\u6001\u89c4\u5212\u65b9\u7a0b\uff0c\u4f46\u662f\u8981\u60f3\u8fbe\u5230\u8fd9\u4e2a\u590d\u6742\u5ea6\u9700\u8981\u7528\u5230\u524d\u7f00\u548c\uff0c\u5177\u4f53\u53c2\u8003\u4ee3\u7801\u3002\n\n\u7136\u540e\u53d1\u73b0\u4ee5\u6df1\u5ea6\u4e3a\u4e0b\u6807\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u957f\u94fe\u5256\u5206\u4f18\u5316\u81f3 $O(n)$\u3002\u5177\u4f53\u8bf7\u53c2\u8003\u4ee3\u7801\u53ca\u4ee3\u7801\u6ce8\u91ca\u3002\n\n##### $\\text{Code}$\n\n```cpp\n#include<bits/stdc++.h>\n#define REG register\n#define MAXN 100005\n#define LL long long\n#define FORE(i,now) for(REG int i=head[now];i;i=ed[i].nxt)\nusing namespace std;\ninline int read(){\n    REG int x(0);\n    REG char c=getchar();\n    while(!isdigit(c)) c=getchar();\n    while(isdigit(c)) x=(x*10)+(c^48),c=getchar();\n    return x;\n}\n\nstruct Edge{\n    int v,nxt;\n}ed[MAXN<<1];\nint head[MAXN],cnt;\ninline void adde(int u,int v){ed[++cnt]=(Edge){v,head[u]},head[u]=cnt;}\ninline void add(int u,int v){adde(u,v),adde(v,u);}\n\nint n;\n\nLL *f[MAXN],*g[MAXN],*p,G[MAXN<<2],ans;\nint Son[MAXN],Len[MAXN];\n\nvoid dfs1(int now,int fa){\n    FORE(i,now){\n        int v=ed[i].v;\n        if(v==fa) continue;\n        dfs1(v,now);\n        if(Len[v]>Len[Son[now]]) Son[now]=v;\n    }\n    Len[now]=Len[Son[now]]+1;\n}\n\ninline void Assign(int now){f[now]=p,p+=Len[now]<<1,g[now]=p,p+=Len[now]<<1;}\n\nvoid dfs2(int now,int fa){\n    if(Son[now])\n        f[Son[now]]=f[now]+1,g[Son[now]]=g[now]-1,dfs2(Son[now],now);\n    f[now][0]=1,ans+=g[now][0];\n    FORE(i,now){\n        int v=ed[i].v;\n        if(v==fa||v==Son[now]) continue;\n        Assign(v),dfs2(v,now);\n        for(REG int j=0;j<Len[v];++j){\n            if(j) ans+=f[now][j-1]*g[v][j]; // \u8fd9\u91cc\u542b now \u7684\u5b9e\u9645\u4e0a\u662f\u4e4b\u524d\u904d\u5386\u8fc7\u7684\u513f\u5b50\u7684 f[son][j-2] \u4e4b\u548c \n            ans+=g[now][j+1]*f[v][j]; // \u8003\u8651\u5230\u4e0a\u5f0f\u7684\u524d\u7f00\u548c\u6ca1\u6709\u8ba1\u7b97\u540e\u8005\uff0c\u8fd9\u91cc\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u8ba1\u7b97\u540e\u8005 \n        }\n        for(REG int j=0;j<Len[v];++j){\n            g[now][j+1]+=f[now][j+1]*f[v][j];\n            if(j) g[now][j-1]+=g[v][j];\n            f[now][j+1]+=f[v][j];\n        }\n    }\n}\n\nvoid Work(){\n    n=read();\n    for(REG int i=1;i<n;++i)\n        add(read(),read());\n    dfs1(1,0);\n    p=G,Assign(1);\n    dfs2(1,0);\n    printf(\"%lld\\n\",ans);\n}\n\nint main(){\n    Work();\n}\n```\n",
        "postTime": 1578889813,
        "uid": 83547,
        "name": "LCuter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/P3565)\n\n[\u52a0\u5f3a\u7248](https://www.lydsy.com/JudgeOnline/problem.php?id=4543)\n\n\u957f\u94fe\u5256\u5206\u3002\n\n\u957f\u94fe\u5256\u5206\u6a21\u677f\u9898\u3002\u9996\u5148\u8003\u8651DP\uff0c$f[i][j]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u79bb$i$\u8ddd\u79bb\u4e3a$j$\u7684\u8282\u70b9\u4e2a\u6570\uff0c$g[i][j]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u5b58\u5728\u4e24\u4e2a\u70b9\u79bb\u8fd9\u4e24\u4e2a\u70b9\u7684$lca$\u7684\u8ddd\u79bb\u4e00\u6837\uff08\u5047\u8bbe\u4e3a$d$\uff09\uff0c$lca$\u79bb$i$\u8ddd\u79bb\u4e3a$d-j$\u7684\u7ed3\u70b9\u5bf9\u4e2a\u6570\u3002$ans$\u8868\u793a\u6700\u7ec8\u7b54\u6848\u3002\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5f88\u597d\u5199\u3002$f[i][j]+=f[tox][j-1],g[i][j]+=g[tox][j+1]+f[i][j]*f[tox][j],ans+=f[i][j]*g[i][j]$\u3002\u7136\u540e\u518d\u628a\u8f6c\u79fb\u65b9\u7a0b\u5199\u5f97\u597d\u770b\u4e00\u70b9\uff0c\u5148\u5904\u7406$ans$\uff0c\u518d\u5904\u7406$f$\u548c$g$\u3002\n\n\u90a3\u4e48\u5c31\u662f$ans+=f[i][j]*g[tox][j+1]+g[i][j]*f[tox][j-1],g[i][j+1]+=f[i][j+1]*f[tox][j],g[i][j-1]+=g[tox][j],f[i][j+1]+=f[tox][j]$\n\n\u8fd9\u662f$O(n^2)$\u7684\u3002\u53d1\u73b0\u8f6c\u79fb\u65b9\u7a0b\u7684\u4e0b\u6807\u662f\u6df1\u5ea6\uff0c\u6240\u4ee5\u957f\u94fe\u5256\u5206\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\ncode:\n```\n//2018.9.12 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline int _abs(const res &x){\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int N=1e5+10;\nnamespace MAIN{\n    int n;\n    struct E{\n        int next,to;\n        E() {}\n        E(res next,res to):next(next),to(to) {}\n    }edge[N<<1];\n    int head[N],cnt;\n    inline void addedge(res u,res v){\n        edge[++cnt]=E(head[u],v),head[u]=cnt;\n        edge[++cnt]=E(head[v],u),head[v]=cnt;\n    }\n    int fa[N],dep[N],maxdep[N],son[N];\n    void dfs(res x,res fax,res depx){\n        fa[x]=fax,dep[x]=maxdep[x]=depx;\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fax)continue;\n            dfs(tox,x,depx+1);\n            maxdep[x]=_max(maxdep[x],maxdep[tox]);\n            if(maxdep[tox]>maxdep[son[x]])son[x]=tox;\n        }\n    }\n    LL ans;\n    LL *f[N],*g[N],tmp[N<<5],*now=tmp+1;\n    inline void Dp(res x){\n        f[x]=now,now+=(maxdep[x]-dep[x]+1)<<1,g[x]=now,now+=(maxdep[x]-dep[x]+1)<<1;\n    }\n    void DP(res x){\n        if(son[x])f[son[x]]=f[x]+1,g[son[x]]=g[x]-1,DP(son[x]);\n        f[x][0]=1,ans+=g[x][0];\n        for(res i=head[x];~i;i=edge[i].next){\n            res tox=edge[i].to;\n            if(tox==fa[x]||tox==son[x])continue;\n            Dp(tox);\n            DP(tox);\n            for(res j=maxdep[tox]-dep[tox];~j;j--){\n                if(j)ans+=f[x][j-1]*g[tox][j];\n                ans+=f[tox][j]*g[x][j+1];\n                g[x][j+1]+=f[x][j+1]*f[tox][j];\n            }\n            for(res j=0;j<=maxdep[tox]-dep[tox];j++){\n                if(j)g[x][j-1]+=g[tox][j];\n                f[x][j+1]+=f[tox][j];\n            }\n        }\n    }\n    inline void MAIN(){\n        memset(head,-1,sizeof(head));\n        n=read();\n        for(res i=1;i<n;i++){\n            res u=read(),v=read();\n            addedge(u,v);\n        }\n        dfs(1,0,1);\n        Dp(1);\n        DP(1);\n        printf(\"%lld\\n\",ans);\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1536734557,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010POI2014\u3011HOT-Hotels"
    },
    {
        "content": "poi2014 hotel\n\n\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6c423\u4e2a\u70b9\u4fe9\u4fe9\u8ddd\u79bb\u76f8\u7b49\u7684\u4e2a\u6570\n\n$f[i][j]$\u8868\u793a\u4ee5i\u4e3a\u6839\uff0c\u8ddd\u79bb\u4e3aj\u7684\u4e2a\u6570\n\n$g[i][j]$\u8868\u793a2\u4e2a\u70b9\u8ddd\u79bb\u5176lca\u4e3ad\uff0c\u4e14\u5176lca\u8ddd\u79bbi\u4e3ad-j\u7684\u4e2a\u6570\n\n\u8bbey\u4e3ai\u513f\u5b50\n\n\u663e\u7136\n\n$ans+=g[i][0]$\n\n$ans+=g[i][j]*f[y][j-1]$\n\n$f[i][j]+=f[y][j-1]$\n\n$g[i][j]=g[y][j+1]$\n\n\u7136\u800c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f59\u5feb\u5730n^2dp\u4e86\n\n\u4f46\u662f\uff0cb\u7ad9\u4e0a\u6709\u4e2an<=10w\u7684\u52a0\u5f3a\u7248\n\n\u8fd9\u65f6\u5c31\u9700\u8981\u957f\u94fe\u5256\u5206\u4e86\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u6b21\u5408\u5e76\u9700\u8981\u7684\u662f\u6df1\u5ea6\u7684\u8f83\u5c0f\u503c\uff0c\u800c\u7236\u4eb2\u8282\u70b9\u7b2c\u4e00\u6b21\u80fdo(1)\u7ee7\u627f\u4e00\u4e2a\u5b50\u513f\u5b50\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u5c06\u6700\u957f\u7684\u513f\u5b50\u4e3a\u91cd\u513f\u5b50\u5c31\u53ef\u4ee5\u505a\u5230o(n)\u4e86\n\n\u8bc1\u660e\uff0c\u6613\u8bc1\uff08\u96fe\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define N 200005\n#define M 200005\n#define inf 1000000005\n#define mod 1000000007\n#define put putchar('\\n')\n#define dg putchar('x')\n#define int ll\n#define db double\n#define eps 1e-5\nusing namespace std;\ninline int read(){char c=getchar();int tot=1;while ((c<'0'|| c>'9')&&c!='-') c=getchar();if (c=='-'){tot=-1;c=getchar();}\nint sum=0;while (c>='0'&&c<='9'){sum=sum*10+c-'0';c=getchar();}return sum*tot;}\ninline void wr(int x){if (x<0) {putchar('-');wr(-x);return;}if(x>=10)wr(x/10);putchar(x%10+'0');}\ninline void wrn(int x){wr(x);put;}inline void wri(int x){wr(x);putchar(' ');}\nint l,u,cnt,x,y,n,m,ans,dis[N],fa[N],mx[N],son[N];\nstruct xx{\n\tdb add,max;\n}tree[M*4];\nint f[N],num[N];\nint Next[N*2],head[N],to[N*2],nedge;\ndb pd,lon[N*2],v1;\nvoid add(int a,int b,db c){Next[++nedge]=head[a];head[a]=nedge;to[nedge]=b;lon[nedge]=c;}\nvoid dfs(int x){\n\tdis[x]=dis[fa[x]]+1;\n\tmx[x]=x;\n\tfor (int i=head[x];i;i=Next[i]){\n\t\tif (to[i]!=fa[x]) {fa[to[i]]=x,dfs(to[i]);if (dis[mx[to[i]]]>dis[mx[x]]) mx[x]=mx[to[i]];son[x]=to[i];}\n\t}\n}\n#define V to[i]\n//f[i]\u8868\u793ai\u7684\u8d77\u59cb\u4f4d\u7f6e ,num[i]\u8868\u793ai\u9700\u8981\u591a\u5c11 \nvoid init(int x){\t\n\tif (!f[x]) f[x]=cnt,cnt+=num[x];\n\telse if (f[x]+num[x]>cnt) cnt=f[x]+num[x]; \n\tif (son[x]) f[son[x]]=f[x]+1,init(son[x]);\n\tfor (int i=head[x];i;i=Next[i]){\n\t\tif (V==fa[x]||V==son[x]) continue;\n\t\tinit(V);\n\t}\n}\nvoid build(int x,int l,int r){\n\ttree[x].max=-inf;tree[x].add=0;\n\tif (l==r) return;\n\tint mid=(l+r)>>1;\n\tbuild(x*2,l,mid);build(x*2+1,mid+1,r);\n}\nvoid change(int x,int k,db p,int l,int r){\n\tp-=tree[x].add;\n\tif (l==r){\n\t\ttree[x].max=p;return;\n\t}\n\tint mid=l+r>>1;\n\tif (k<=mid) change(x*2,k,p,l,mid);\n\telse change(x*2+1,k,p,mid+1,r);\n\ttree[x].max=max(tree[x*2].max+tree[x*2].add,tree[x*2+1].max+tree[x*2+1].add);\n}\ndb get_max(int x,int l,int r,int l1,int r1){\n\tif (l>r) return -inf;\n\tif (l==l1&&r==r1) return tree[x].add+tree[x].max;\n\tint mid=l1+r1>>1;\n\tif (r<=mid) return get_max(x*2,l,r,l1,mid)+tree[x].add;\n\telse if (l>mid) return get_max(x*2+1,l,r,mid+1,r1)+tree[x].add;\n\treturn max(get_max(x*2,l,mid,l1,mid),get_max(x*2+1,mid+1,r,mid+1,r1))+tree[x].add; \n}\nvoid tadd(int x,int l,int r,db k,int l1,int r1){\n\tif (l1==l&&r1==r){\n\t\ttree[x].add+=k;return;\n\t}\n\tint mid=l1+r1>>1;\n\tif (r<=mid) tadd(x*2,l,r,k,l1,mid);\n\telse if (l>mid) tadd(x*2+1,l,r,k,mid+1,r1);\n\telse tadd(x*2,l,mid,k,l1,mid),tadd(x*2+1,mid+1,r,k,mid+1,r1);\n\ttree[x].max=max(tree[x*2].max+tree[x*2].add,tree[x*2+1].max+tree[x*2+1].add);\n}\nvoid dfs2(int x){\n\tchange(1,f[x],0,1,cnt);\n\tif (son[x]){\n\t\tdfs2(son[x]);\t\t\n//\t\tprintf(\"%.3lf %d\\n\",get_max(1,4,4,1,cnt),x);\n\t\tfor (int i=head[x];i;i=Next[i])\n\t\tif (V==son[x])\n\t\ttadd(1,f[x]+1,f[x]+num[x]-1,lon[i],1,cnt);\n//\t\tprintf(\"%.3lf %d %d %d \\n\",get_max(1,4,4,1,cnt),x,f[x]+1,f[x]+num[x]-1);\n\t}\n\tif (num[x]>l) pd=max(pd,get_max(1,f[x]+l,f[x]+min(num[x]-1,u),1,cnt));\n\t//\u8f6c\u79fb\u65f6f[i][j]=f[p][j-1],g[i][j]=g[i][j+1],\u5373f\u53f3\u79fb\u4e00\u4f4d\uff0cj\u5de6\u79fb\u4e00\u4f4d \n\tfor (int i=head[x];i;i=Next[i]){\n\t\tif (V==son[x]||V==fa[x]) continue;\n\t\tdfs2(V);\n\t\tfor (int j=min(u-1,num[V]-1);~j;j--){\n\t\t\tif (j+num[x]>=l) pd=max(pd,lon[i]+get_max(1,f[V]+j,f[V]+j,1,cnt)+get_max(1,f[x]+max((ll)0,l-j-1),f[x]+min(num[x]-1,u-j-1),1,cnt));\n\t\t}\n\t\tfor(int j=1;j<=min(u,num[V]);j++)\n        {\n        \tdb t1=get_max(1,f[x]+j,f[x]+j,1,cnt),t2=get_max(1,f[V]+j-1,f[V]+j-1,1,cnt)+lon[i];\n        \tif (t2>t1) change(1,f[x]+j,t2,1,cnt);\n        }\n\t}\n}\nbool check(db x){\n\tfor (int i=1;i<=nedge;i++) lon[i]-=x;\n\tpd=-100;build(1,1,cnt);\n\tdfs2(1);\n\tfor (int i=1;i<=nedge;i++) lon[i]+=x;\n\treturn pd>=-(1e-5);\n}\nsigned main(){\n//\tfreopen(\".in\",\"r\",stdin);freopen(\".out\",\"w\",stdout);\n\tn=read();dis[0]=-1;l=read();u=read();cnt=1;\n\tfor (int i=1;i<n;i++){\n\t\tx=read();y=read();v1=read();add(x,y,v1);add(y,x,v1);\n\t}\n\tdfs(1);\n\tfor (int i=1;i<=n;i++) num[i]=dis[mx[i]]-dis[i]+1;\n\tinit(1); \n\tif (cnt!=n+1) return 0;\n\tdb L=0,r=1e9;\n\twhile (r-L>eps){\n\t\tdb mid=(L+r)/2;\n\t\tif (check(mid)) L=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.3lf\",L);\n\treturn 0;\n}\n```\n\n\u53e6\u5916wc2010\u4e5f\u53ef\u4ee5\u7528\u8fd9\u4e2a\u5f04\u8fc7\u53bb\uff0c\u4e8c\u5206+\u7ebf\u6bb5\u6811\u5373\u53ef",
        "postTime": 1520323507,
        "uid": 11837,
        "name": "yukuai26",
        "ccfLevel": 0,
        "title": "\u957f\u94fe\u5256\u5206\u5c0f\u8ba1"
    },
    {
        "content": "\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u9053\u6811\u5f62DP\n\n\u7528f[i][j]\u8868\u793ai\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u6df1\u5ea6\u4e3aj\u7684\u70b9\n\ng[i][j]\u8868\u793ai\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u5230lca\u8ddd\u79bb=d\u7684\u70b9\u5bf9\uff0c\u4e14lca\u7684\u6df1\u5ea6\u4e3ad-j\u3002\n\n\uff08\u8fd9\u4e2a\u8868\u8ff0\u6709\u70b9\u96be\u7406\u89e3\uff0c\u901a\u4fd7\u5730\u8bb2\uff0c\u5c31\u662f\u5728\u4ee5i\u4e3a\u6839\u80fd\u548c\u8ddd\u79bbi\u4e3aj\u7684\u70b9\u7ec4\u6210\u7b54\u6848\u7684\u70b9\u5bf9\u6570\uff09\n\n\u90a3\u4e48\u5bb9\u6613\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\nf[x][a]+=f[y][a-1]\n\ng[x][a]+=g[y][a+1]+f[x][a]\\*f[y][a]\n\nans+=f[x][a]\\*g[y][a+1]+g[x][a]\\*f[y][a-1]\n\n\uff08\u6ce8\u610f\u65b9\u7a0b\u987a\u5e8f\uff0c\u5b9e\u9645\u64cd\u4f5c\u4e2d\u4e8e\u7ed9\u51fa\u987a\u5e8f\u4e0d\u540c\uff09\n\n\u603b\u590d\u6742\u5ea6\u662fO(n^2)\n\n\u5bf9\u4e8ePOI\u539f\u9898\uff08n<=5000\uff09\u662f\u8db3\u591f\u4e86\u3002\n\n\u4f46\u662fBZOJ\u7684\u52a0\u5f3a\u7248\uff08n<=100000\uff09\u5c31\u4e0d\u884c\u4e86\u3002\n\n\u5982\u4f55\u4f18\u5316\u5462\uff1f\u7528\u957f\u94fe\u5256\u5206\u3002\n\n\u53d1\u73b0\u6bcf\u4e2a\u8282\u70b9\u7684\u7b2c\u4e00\u6b21\u8f6c\u79fb\u5c31\u76f8\u5f53\u4e8e\u5c06y\u7684f\u6570\u7ec4\u5411\u53f3\u79fb\u4e00\u683c\uff0cg\u6570\u7ec4\u5411\u5de6\u79fb\u4e00\u683c\u3002\n\n\u6240\u4ee5\u8003\u8651\u7528\u6307\u9488\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u7684\u7b2c\u4e00\u6b21\u8f6c\u79fb\u5c31\u662fO(1)\u7684\u4e86\u3002\n\n\u6211\u4eec\u5bf9\u539f\u6811\u8fdb\u884c\u957f\u94fe\u5256\u5206\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u7684\u957f\u513f\u5b50\uff0c\u7528\u6307\u9488O(1)\u8f6c\u79fb\uff0c\u5176\u4f59\u7684\u66b4\u529b\u8f6c\u79fb\u3002\n\n\u590d\u6742\u5ea6\u53d8\u6210\u4e86O(n)\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<vector>\nusing namespace std;\nvector<int> a[100001];\nint deep[100001],son[100001],fa[100001],n,cnt;\nlong long *f[100001],*g[100001],ans,mem[1000010],*now=mem+1;\nvoid dfs1(int o)\n{\n    deep[o]=0;\n    for(int i=0;i<a[o].size();i++)  \n        if(a[o][i]!=fa[o])\n        {\n            fa[a[o][i]]=o;\n            dfs1(a[o][i]);\n            deep[o]=max(deep[o],deep[a[o][i]]+1);\n            if(deep[a[o][i]]>deep[son[o]]) son[o]=a[o][i];\n        }\n}\nvoid dfs2(int o)\n{\n    if(son[o])\n    {\n        f[son[o]]=f[o]+1;\n        g[son[o]]=g[o]-1;\n        dfs2(son[o]);\n    }\n    f[o][0]=1;\n    ans+=g[o][0];\n    for(int i=0;i<a[o].size();i++)  \n        if((a[o][i]!=fa[o])&&(a[o][i]!=son[o]))\n        {\n            int y=a[o][i];\n            f[y]=now;\n            now+=deep[y]+1;\n            g[y]=now+deep[y]+1;\n            now+=deep[y]*2+2;\n            dfs2(y);\n            for(int j=deep[y];j>=0;j--)\n            {\n                if(j)\n                    ans+=f[o][j-1]*g[y][j];\n                ans+=g[o][j+1]*f[y][j];\n                g[o][j+1]+=f[o][j+1]*f[y][j];\n            }\n            for(int j=0;j<=deep[y];j++)\n            {\n                if(j)\n                    g[o][j-1]+=g[y][j];\n                f[o][j+1]+=f[y][j];\n            }\n        }\n}\nint main()\n{\n    cin>>n;\n    deep[0]=-1;\n    for(int i=1;i<n;i++) \n    {\n        int x,y;\n        cin>>x>>y;\n        a[x].push_back(y);\n        a[y].push_back(x);\n    }\n    dfs1(1);\n    f[1]=now;\n    now+=deep[1]+1;\n    g[1]=now+deep[1]+1;\n    now+=deep[1]*2+2;\n    dfs2(1);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1515140145,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8fd8\u662f\u6709\u96be\u5ea6\uff1b\u5c31\u5728\u4e8e\u516c\u5f0f\u5f88\u96be\u63a8\uff0c\u5176\u5b9e\u4e5f\u4e0d\u662f\u5f88\u96be\u60f3\uff0c\u53ea\u662f\u4ee3\u7801\u5904\u7406\u6709\u70b9\u70e6\uff0c\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u601d\u8def\uff1a\u6211\u4eec\u5728\u8003\u8651\u65b9\u6848\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u80af\u5b9a\u8981\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6839\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5148dfs\u4e00\u904d\u627e\u51fa\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u662f\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u548c\u5b83\u7236\u4eb2\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u4e8e\u662f\u6211\u4eec\u7b2c\u4e8c\u904ddfs\u5c31\u53ef\u4ee5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u6211\u4eec\u7528dp\u3010i\u3011\u3010j\u3011\u3010k\u3011\u8868\u793a\u4ee5x\u4e3a\u6839\u7684\u6811\u7684\u8282\u70b9\u4e2d\u8ddd\u79bbx  j\u4e2a\u5355\u4f4d\u957f\u5ea6\u7684\u8282\u70b9\u4e2d\u9009\u51fak\u4e2a\u7684\u65b9\u6848\u6570\n\n\u7136\u540e\u5c31\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int maxn=5000+10;\nstruct nod\n{\n    int next,to;\n}e[maxn*2];\nlong long n,m,k=1,ans;\nlong long head[maxn];\nint dp[maxn][maxn][3];\nvoid adde(int u,int v)\n{\n    e[++k].next=head[u];\n    e[k].to=v;head[u]=k;\n}\nvoid dfs1(int x,int f)\n{\n    dp[x][0][1]=1;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        if(e[i].to==f)continue;\n        dfs1(e[i].to,x);\n        for(int j=1;dp[e[i].to][j-1][1]!=0;j++)\n        {\n            ans+=dp[x][j][2]*dp[e[i].to][j-1][1];\n            dp[x][j][2]+=dp[x][j][1]*dp[e[i].to][j-1][1];\n            dp[x][j][1]+=dp[e[i].to][j-1][1];\n        }\n    }\n}\nvoid dfs2(int x,int f)\n{\n    if(x!=1)\n    {\n        int h=1;\n        for(int i=1;dp[f][i-1][1] && dp[x][i][1];i++)\n        {\n            if(i==1)ans+=dp[x][i][2]*dp[f][i-1][1];\n            else ans+=dp[x][i][2]*(dp[f][i-1][1]-dp[x][i-2][1]);h=i;\n        }\n        for(int i=h;i>=1;i--)\n        {\n            if(i==1)dp[x][i][2]+=dp[x][i][1],dp[x][i][1]+=dp[f][i-1][1];\n            else dp[x][i][2]+=dp[x][i][1]*(dp[f][i-1][1]-dp[x][i-2][1]),dp[x][i][1]+=(dp[f][i-1][1]-dp[x][i-2][1]);\n        }\n    }\n    for(int i=head[x];i;i=e[i].next)\n    {\n        if(e[i].to==f)continue;\n        dfs(e[i].to,x);\n    }\n}\nint main()\n{\n    scanf(\"%lld\",&n);\n    for(int i=1;i<n;i++)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);adde(u,v);adde(v,u);\n    }dfs1(1,1);dfs2(1,1);printf(\"%lld\\n\",ans);\n}\n```",
        "postTime": 1505434291,
        "uid": 25365,
        "name": "zhouenji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3565 \u3010[POI2014]HOT-Hotels\u3011"
    }
]