[
    {
        "content": "\u8ba9\u6211\u4eec\u5148\u5ffd\u7565\u5eca\u6865\u6570\u91cf\u7684\u9650\u5236\u6765\u5b89\u6392\u822a\u73ed\u3002\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u7a7a\u95f2\u7684\u5eca\u6865\u961f\u5217\uff0c\u6bcf\u5230\u8fbe\u4e00\u67b6\u822a\u73ed\uff0c\u5c31\u7ed9\u5b83\u5b89\u6392\u7f16\u53f7\u6700\u5c0f\u7684\u5eca\u6865\u4f9b\u5176\u4f7f\u7528\u3002\n\n\u73b0\u5728\u52a0\u4e0a\u5eca\u6865\u6570\u91cf\u7684\u9650\u5236\u3002\u5bb9\u6613\u53d1\u73b0\u521a\u624d\u7684\u5eca\u6865\u5206\u914d\u65b9\u6cd5\u76f4\u63a5\u5c31\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\u5eca\u6865\u9650\u5236\u7684\u95ee\u9898\uff1a\u5982\u679c\u5f53\u524d\u6709 $n$ \u4e2a\u5eca\u6865\u53ef\u4f9b\u4f7f\u7528\uff0c\u5219\u5206\u914d\u5230 $n+1$ \u53f7\u53ca\u4ee5\u540e\u7684\u5eca\u6865\u5b9e\u8d28\u4e0a\u5c31\u662f\u5206\u914d\u5230\u8fdc\u673a\u4f4d\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u505a\u4efb\u4f55\u989d\u5916\u7684\u5904\u7406\u3002\n\n\u5230\u8fd9\u91cc\u505a\u6cd5\u5c31\u5f88\u6e05\u6670\u4e86\uff1a\u6211\u4eec\u6309\u7167\u5f00\u5934\u63d0\u5230\u7684\u5206\u914d\u65b9\u6cd5\u6765\u5b89\u6392\u822a\u73ed\u7684\u505c\u9760\u4f4d\u7f6e\uff0c\u8bb0\u5f55\u5404\u5eca\u6865\u505c\u9760\u7684\u822a\u73ed\u6570\uff0c\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u6700\u540e\u679a\u4e3e\u5206\u914d\u7ed9\u67d0\u4e2a\u533a\u7684\u5eca\u6865\u6570\uff0c\u7b97\u51fa\u5404\u60c5\u51b5\u4e0b\u4e24\u533a\u5b9e\u9645\u4f7f\u7528\u5eca\u6865\u7684\u822a\u73ed\u6570\u603b\u548c\uff0c\u5373\u53ef\u89e3\u51b3\u672c\u9898\u3002\n\n```cpp\n// Problem: P7913 [CSP-S 2021] \u5eca\u6865\u5206\u914d\uff08\u6d1b\u8c37\u6c11\u95f4\u6570\u636e\uff09\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P7913\n// Memory Limit: 512 MB\n// Time Limit: 1000 ms\n//\n// Powered by CP Editor (https://cpeditor.org)\n\n#include <algorithm>\n#include <iostream>\n#include <queue>\n#include <vector>\nusing namespace std;\ntypedef pair<int, int> pii;\nstruct range {\n  int x, y;\n} a[100005], b[100005];\nint res1[100005], res2[100005];\nint n;\nbool cmp(const range& a, const range& b) { return a.x < b.x; }\nvoid calc(range* t, int m, int* res) {\n  priority_queue<pii, vector<pii>, greater<pii> > lq; // \u7b49\u5f85\u79bb\u6e2f\u822a\u73ed\u961f\u5217\n  priority_queue<int, vector<int>, greater<int> > wq; // \u7a7a\u95f2\u5eca\u6865\u961f\u5217\n  for (int i = 1; i <= n; i++) wq.push(i);\n  for (int i = 1; i <= m; i++) {\n    while (!lq.empty() && t[i].x >= lq.top().first) {\n      wq.push(lq.top().second);\n      lq.pop();\n    }\n    if (wq.empty()) continue;\n    int dest = wq.top();\n    wq.pop();\n    res[dest]++;\n    lq.push(make_pair(t[i].y, dest));\n  }\n  for (int i = 1; i <= n; i++) res[i] += res[i - 1];\n}\nint main() {\n  int m1, m2;\n  cin >> n >> m1 >> m2;\n  for (int i = 1; i <= m1; i++) cin >> a[i].x >> a[i].y;\n  for (int i = 1; i <= m2; i++) cin >> b[i].x >> b[i].y;\n  sort(a + 1, a + m1 + 1, cmp);\n  sort(b + 1, b + m2 + 1, cmp);\n  calc(a, m1, res1);\n  calc(b, m2, res2);\n  int ans = 0;\n  for (int i = 0; i <= n; i++) {\n    ans = max(ans, res1[i] + res2[n - i]);\n  }\n  cout << ans << endl;\n  return 0;\n}\n```",
        "postTime": 1635002616,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7913 \u3010[CSP-S 2021] \u5eca\u6865\u5206\u914d\u3011"
    },
    {
        "content": "> Upd on 2021/11/1: \u6362\u4e0a\u5b98\u65b9\u6570\u636e\u540e\uff0c\u539f\u6765\u7684\u4ee3\u7801\u88ab hack \u4e86\uff0c\u62b1\u6b49\u6ca1\u6709\u5145\u5206\u6d4b\u8bd5\u5176\u4ed6 OJ \u4e0a\u7684\u6570\u636e\uff0c\u4ec5\u4ec5\u5728\u4ee3\u7801\u5b8c\u6210\u540e\u901a\u8fc7\u4e86 Infoj \u548c\u6d1b\u8c37\u7684\u6c11\u95f4\u6570\u636e\uff08LibreOJ WA + RE\uff09\uff0c\u73b0\u5df2\u4fee\u590d\u5e76\u5220\u9664\u539f\u6765\u5b58\u5728\u7684\u8c03\u8bd5\u5185\u5bb9\u3002\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5173\u952e\u7ed3\u8bba\uff1a\u5982\u679c\u7ed9\u5eca\u6865\u7f16\u4e0a\u53f7\uff0c\u6bcf\u5f53\u4e00\u67b6\u98de\u673a\u5230\u8fbe\u540e\uff0c\u5982\u679c\u5f3a\u5236\u8ba9\u5b83\u8fdb\u5165\u7f16\u53f7\u6700\u5c0f\u7684\u5eca\u6865\uff0c\u8fd9\u6837\u4e0d\u4f1a\u5f71\u54cd\u8fdb\u5165\u5eca\u6865\u98de\u673a\u7684\u96c6\u5408\uff0c\u4e14\u5f53\u5eca\u6865\u603b\u6570\u589e\u52a0\u540e\uff0c\u539f\u672c\u5728\u54ea\u4e2a\u5eca\u6865\u7684\u98de\u673a\uff0c\u4ecd\u65e7\u4f1a\u8fdb\u5165\u539f\u6765\u7684\u5eca\u6865\u3002\n\n\u8fd9\u4e2a\u6027\u8d28\u4e5f\u5f88\u597d\u7406\u89e3\uff1a\u65b0\u52a0\u5165\u5eca\u6865\u53ef\u4ee5\u89c6\u4e3a\u539f\u5148\u7684\u8fdc\u673a\u4f4d\u7684\u4e00\u90e8\u5206\uff0c\u8fdb\u5165\u65b0\u52a0\u7684\u8fd9\u4e2a\u5eca\u6865\u7684\u98de\u673a\u53ef\u4ee5\u89c6\u4e3a\u5728\u539f\u6765\u8be5\u8fdb\u5165\u8fdc\u673a\u4f4d\u7684\u98de\u673a\u4e2d\u8d2a\u5fc3\u9009\u62e9\u4e00\u8f6e\u3002\n\n\u81f3\u6b64\u672c\u9898\u5df2\u7ecf\u6709\u4e86\u4f18\u79c0\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u5904\u7406\u51fa\u6bcf\u67b6\u98de\u673a\u5728\u5eca\u6865\u5145\u8db3\u7684\u65f6\u5019\u4f1a\u8fdb\u5165\u54ea\u4e2a\u5eca\u6865\uff0c\u7136\u540e\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u7edf\u8ba1\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u8003\u8651\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2a\u9884\u5904\u7406\u8fc7\u7a0b\uff1a\n\n\u8003\u8651\u65b0\u5efa\u4e00\u4e2a\u65f6\u95f4\u5806\u548c\u7a7a\u95f2\u7684\u7f16\u53f7\u5806\uff0c\u628a\u6240\u6709\u7684\u98de\u673a\u6309\u7167\u5230\u8fbe\u65f6\u95f4\u6392\u5e8f\uff0c\u5982\u679c\u7f16\u53f7\u5806\u4e2d\u6709\u5269\u4f59\u5c31\u53d6\u51fa\u6700\u5c0f\u7684\u7f16\u53f7\uff0c\u7ed1\u4e0a\u8fd9\u5bb6\u98de\u673a\u7684\u79bb\u5f00\u65f6\u95f4\u6254\u8fdb\u65f6\u95f4\u5806\u4e2d\uff0c\u6bcf\u5f53\u4e00\u67b6\u98de\u673a\u8fdb\u5165\u4e4b\u524d\uff0c\u5148\u628a\u5df2\u7ecf\u8d85\u8fc7\u79bb\u5f00\u65f6\u95f4\u7684\u98de\u673a\u5f39\u51fa\uff0c\u91ca\u653e\u7a7a\u95f2\u7684\u5eca\u6865\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int Maxn = 1e5 + 5;\n\nstruct e {\n\tint st, ed;\n} a[Maxn];\nbool cmp(e x, e y) {\n\treturn x.st < y.st;\n}\n\nstd::priority_queue<int> hp_id;\nstd::priority_queue<std::pair<int, int> > hp_ed; \n\nint n, m1, m2, ca[Maxn], cb[Maxn];\n\nint main() {\n\tscanf(\"%d%d%d\", &n, &m1, &m2);\n\tfor(int i = 1; i <= m1; ++i) scanf(\"%d%d\", &a[i].st, &a[i].ed);\n\tstd::sort(a + 1, a + m1 + 1, cmp);\n\tfor(int i = 1; i <= n; ++i) hp_id.push(-i);\n\tfor(int i = 1; i <= m1; ++i) {\n\t\tif(!hp_ed.empty()) {\n            while(-hp_ed.top().first < a[i].st) {\n                hp_id.push(-hp_ed.top().second), hp_ed.pop();\n                if(hp_ed.empty()) break;\n            }\n        }\n        if(!hp_id.empty()) {\n\t\t\tint x = -hp_id.top(); hp_id.pop();\n\t\t\tca[x]++; hp_ed.push(std::make_pair(-a[i].ed, x));\n\t\t}\n\t}\n    for(int i = 1; i <= n; ++i) ca[i] += ca[i - 1];\n\twhile(!hp_ed.empty()) hp_ed.pop(); while(!hp_id.empty()) hp_id.pop();\n\tfor(int i = 1; i <= m2; ++i) scanf(\"%d%d\", &a[i].st, &a[i].ed);\n\tstd::sort(a + 1, a + m2 + 1, cmp);\n\tfor(int i = 1; i <= n; ++i) hp_id.push(-i); \n\tfor(int i = 1; i <= m2; ++i) {\n\t\tif(!hp_ed.empty()) {\n            while(-hp_ed.top().first < a[i].st) {\n                hp_id.push(-hp_ed.top().second), hp_ed.pop();\n                if(hp_ed.empty()) break;\n            }\n        }\n\t\tif(!hp_id.empty()) {\n\t\t\tint x = -hp_id.top(); hp_id.pop();\n\t\t\tcb[x]++; hp_ed.push(std::make_pair(-a[i].ed, x));\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++i) cb[i] += cb[i - 1]; \n\t\n\tint mx_ans = 0;\n\tfor(int i = 0; i <= n; ++i) mx_ans = std::max(mx_ans, ca[i] + cb[n - i]);\n\tprintf(\"%d\", mx_ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1634997010,
        "uid": 118196,
        "name": "zimujun",
        "ccfLevel": 6,
        "title": "CSP-S2 2021 T1 \u5eca\u6865\u5206\u914d"
    },
    {
        "content": "$\\texttt{Upd On 2020/5/9}$\uff1a\u8865\u5145\u82e5\u5e72\u8bf4\u660e\uff0c\u89c4\u8303 $\\LaTeX$\u3002\n\n\u63d0\u4f9b\u4e00\u79cd **\u4ec5\u4f7f\u7528\u666e\u53ca\u77e5\u8bc6\u70b9\uff0c\u4e0d\u7528\u4f18\u5148\u961f\u5217\u3001`set`\u3001`pair`\u3001\u7ebf\u6bb5\u6811\u3001\u6811\u72b6\u6570\u7ec4\u3001\u5206\u5757** \u7684\u505a\u6cd5\u3002 \n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P7913)\n\n\u6211\u4eec\u4ece\u6837\u4f8b $1$ \u5165\u624b\u3002\n![\u5f53\u4f60\u770b\u5230\u8fd9\u884c\u6587\u5b57\u65f6\uff0c\u8fd9\u5f20\u56fe\u7247\u5df2\u7ecf\u6302\u4e86\u3002](https://cdn.luogu.com.cn/upload/image_hosting/huhkczmn.png)\n\n\u89c2\u5bdf\u56fe\u7247\uff0c\u4e0d\u96be\u770b\u51fa\u80fd\u5171\u7528\u4e00\u4e2a\u5eca\u6865\u7684\u98de\u673a\u4e00\u5b9a\u662f\u5728\u65f6\u95f4\u4e0a\u6ca1\u6709\u91cd\u53e0\u7684\uff08\u4f8b\u5982\u4e0a\u56fe\u56fd\u5185\u822a\u73ed\u7b2c $1,3, 5$ \u67b6\uff09\u3002\u8fd9\u542f\u793a\u6211\u4eec\u5c06\u6240\u6709\u98de\u673a\u4e0d\u91cd\u4e0d\u6f0f\u5730\u5206\u7ec4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u7ec4\u5185\u7684\u98de\u673a\u90fd\u53ef\u4ee5\u7528\u4e00\u4e2a\u5eca\u6865\u89e3\u51b3\u505c\u9760\u95ee\u9898\u3002\n\n\u7531\u4e8e\u56fd\u5185\u822a\u73ed\u548c\u56fd\u9645\u822a\u73ed\u662f\u5404\u81ea\u72ec\u7acb\u7684\uff0c\u5728\u6b64\u53ea\u7528\u56fd\u5185\u822a\u73ed\u8bf4\u660e\u3002\u7528 $arr_i$ \u548c $lea_i$ \u8868\u793a\u7b2c $i$ \u67b6\u98de\u673a\u7684\u62b5\u8fbe\u3001\u79bb\u5f00\u65f6\u523b\uff0c$id_i$ \u8868\u793a\u7b2c $i$ \u67b6\u98de\u673a\u662f\u5426\u5df2\u88ab\u5206\u7ec4\u3002\u9996\u5148\u5c06\u6240\u6709\u98de\u673a\u6309\u7167\u62b5\u8fbe\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u4e0b\u6587\u6240\u6307\u5747\u4e3a\u6392\u5e8f\u540e\u7684\u98de\u673a\uff09\uff0c\u7136\u540e\u4ece $1$ \u5f00\u59cb\u679a\u4e3e\u98de\u673a\u3002\n\n\u8fd8\u662f\u4ee5\u6837\u4f8b $1$ \u4e3a\u4f8b\uff0c\u4e0d\u59a8\u628a\u98de\u673a $1\\;\\left[ 1,5 \\right]$ \u5206\u5230\u7b2c $1$ \u7ec4\uff0c\u5e76\u628a $id_1$ \u4fee\u6539\u4e3a $1$\u3002\u56e0\u4e3a\u540c\u7ec4\u5185\u98de\u673a\u6ca1\u6709\u65f6\u95f4\u51b2\u7a81\uff0c\u6240\u4ee5\u4e0b\u4e00\u67b6\u53ef\u9009\u98de\u673a $3\\;\\left[6,10\\right]$\u3001$4\\;\\left[9,14\\right]$\u3001$5\\;\\left[13,18\\right]$\u3002\u5e94\u8be5\u9009\u54ea\u4e00\u67b6\u5462\uff1f\u98de\u673a\u9075\u5faa\u201c\u5148\u5230\u5148\u5f97\u201d\u539f\u5219\uff0c\u8d2a\u5fc3\u5730\u60f3\uff0c\u5f53\u98de\u673a $3$ \u964d\u843d\u65f6\uff0c\u81f3\u5c11\u6709\u4e00\u5ea7\u5eca\u6865\u662f\u7a7a\u95f2\u7684\uff08\u5373\u98de\u673a $1$ \u4f7f\u7528\u7684\uff09\uff0c\u800c\u5b83\u5728\u54ea\u91cc\u505c\u9760\u90fd\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u628a\u5b83\u548c\u98de\u673a $1$ \u5206\u4e3a\u4e00\u7ec4\u4e0d\u4f1a\u6539\u53d8\u7b54\u6848\u3002\u63a8\u5e7f\u4e00\u4e0b\uff0c\u5047\u8bbe\u98de\u673a $i$ \u5df2\u7ecf\u88ab\u5206\u7ec4\uff0c\u540c\u7ec4\u5185\u7684\u4e0b\u4e00\u67b6\u5e94\u662f\u6240\u6709\u6ee1\u8db3 $arr_x > lea_i \\; \\land \\; id_x = 0$ \u4e2d\u62b5\u8fbe\u65f6\u95f4\u6700\u65e9\u7684\u3002\u7531\u4e8e\u4e8b\u5148\u5df2\u5c06\u98de\u673a\u6392\u5e8f\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u627e\u51fa\u7b2c\u4e00\u67b6\u62b5\u8fbe\u65f6\u95f4\u665a\u4e8e $lea_i$ \u7684\u98de\u673a $x$\u3002\u4e0d\u65ad\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5982\u679c\u6ca1\u6709\u98de\u673a\u53ef\u9009\uff0c\u5219\u8fd9\u4e00\u7ec4\u5df2\u7ecf\u5206\u5b8c\u3002\n\n\u6ce8\u610f\u5230 $id$ \u6570\u7ec4\u5e76\u6ca1\u6709\u5355\u8c03\u6027\uff0c\u5373\u6709\u53ef\u80fd $id_x \\ne 0$\u3002\u82e5\u4ece $x$ \u5411\u540e\u66b4\u529b\u679a\u4e3e\uff0c\u590d\u6742\u5ea6\u53ef\u80fd\u9000\u5316\u6210 $O\\left(n^2\\right)$\uff0c\u663e\u7136\u65e0\u6cd5\u63a5\u53d7\u3002\u6211\u4eec\u501f\u7528\u5e76\u67e5\u96c6\u7684\u8def\u5f84\u538b\u7f29\u601d\u60f3\u6765\u5de7\u5999\u5730\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\u5b9a\u4e49 $c_i$ \u4e3a\u7b2c\u4e00\u67b6\u964d\u843d\u65f6\u95f4\u665a\u4e8e $arr_i$ \u4e14\u6ca1\u6709\u7ec4\u7684\u98de\u673a\u7f16\u53f7\uff0c\u521d\u59cb\u65f6 $c_i \\gets i + 1$\u3002\u91cd\u590d\u6267\u884c $x \\gets c_x$\uff0c\u76f4\u5230 $id_x = 0$\uff0c\u5f00\u4e00\u4e2a `vector` \u5b58\u50a8\u6240\u6709\u7ecf\u8fc7\u7684\u98de\u673a\u7f16\u53f7\u3002\u5bf9\u4e8e `vector` \u4e2d\u7684\u6bcf\u4e2a\u6570 $num$\uff0c\u628a $c_{num} \\gets c_x$\uff0c\u8fd9\u6837\u4e0b\u6b21\u67e5\u627e\u65f6\u5c31\u4f1a\u8df3\u8fc7\u6ca1\u7528\u7684\u98de\u673a\u3002\uff08$\\texttt{Upd}$\uff1a\u5176\u5b9e\u8fd9\u5c31\u662f\u5e76\u67e5\u96c6\uff0c\u6b64\u90e8\u5206\u590d\u6742\u5ea6 $O\\left( n\\log n \\right)$\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u548c\u6309\u79e9\u5408\u5e76\uff0c\u590d\u6742\u5ea6\u51e0\u4e4e\u7ebf\u6027\u3002\uff09\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5206\u597d\u7ec4\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u4ece\u4e2d\u9009\u62e9\u98de\u673a\u6570\u6700\u591a\u7684 $n$ \u4e2a\u7ec4\u5373\u4e3a\u7b54\u6848\uff0c\u90a3\u5c31\u5927\u9519\u7279\u9519\u4e86\u3002\u56de\u987e\u7b97\u6cd5\u6d41\u7a0b\uff0c\u7ec4\u4e0e\u7ec4\u4e4b\u95f4\u5176\u5b9e\u6709\u7740\u65f6\u95f4\u4e0a\u7684\u5148\u540e\u3002\u56de\u5230\u6837\u4f8b\uff0c\u7b2c $1,3,5$ \u67b6\u4e3a\u7b2c\u4e00\u7ec4\uff0c\u7b2c $2,4$ \u67b6\u4e3a\u7b2c\u4e8c\u7ec4\u3002\u82e5\u6b64\u65f6\u53ea\u6709\u4e00\u4e2a\u5eca\u6865\uff0c\u5219\u7b2c\u4e8c\u7ec4\u662f\u7528\u4e0d\u4e0a\u7684\uff0c\u56e0\u4e3a\u98de\u673a $1$ \u5df2\u7ecf\u5360\u7528\u4e86\uff01\u6211\u4eec\u4e0d\u7528\u6392\u5e8f\uff0c\u76f4\u63a5\u5904\u7406\u51fa\u524d $i$ \u4e2a\u56fd\u5185/\u56fd\u9645\u822a\u73ed\u7684\u7ec4\u7684\u524d\u7f00\u548c $s_1,\\,s_2$\uff0c\u7b54\u6848\u4e3a $\\max\\left\\{s_{1_i} + s_{2_{n - i}}\\right\\}$\u3002\n\n\u4ee5\u4e0b\u4e3a\u8003\u573a\u4ee3\u7801\u3002\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n\nconst int N = 1e5;\nint n,m1,m2;\nstruct Node{\n    int arr,lea,id;\n    void read()\n    {\n        scanf(\"%d%d\",&arr,&lea);\n        return ;\n    }\n    bool operator < (const Node& x) const\n    {\n        return arr < x.arr;\n    }\n}a[N + 5],b[N + 5];\nint g1[N + 5],g2[N + 5],top1,top2;//g1 : \u56fd\u5185\u822a\u73ed  g2 : \u56fd\u9645\u822a\u73ed\nint c[N + 5];\nint nxta(int x)//\u4e8c\u5206+\u8def\u5f84\u538b\u7f29\n{\n    int l = 1,r = m1,res = -1;\n    while (l <= r)\n    {\n        int mid = (l + r) >> 1;\n        if (a[mid].arr >= x)\n        {\n            res = mid;\n            r = mid - 1;\n        }\n        else l = mid + 1;\n    }\n    if (res < 0) return res;\n    vector<int> upd;\n    while (res > 0 && a[res].id != 0)\n    {\n        upd.push_back(res);\n        res = c[res];\n    }\n    while (!upd.empty())\n    {\n        c[upd.back()] = c[res];\n        upd.pop_back();\n    }\n    return res;\n}\nvoid pre1()\n{\n    for (int i = 1;i < m1;i++) c[i] = i + 1;\n    c[m1] = -1;//-1\u8868\u793a\u6ca1\u6709\u98de\u673a\n    for (int i = 1;i <= m1;i++)\n    {\n        if (a[i].id != 0) continue;\n        a[i].id = 1;\n        int cnt = 1,x = a[i].lea + 1;\n        int pos = nxta(x);\n        while (pos > 0)\n        {\n            a[pos].id = 1;\n            x = a[pos].lea + 1;\n            cnt++;\n            pos = nxta(x);\n        }\n        top1++;\n        g1[top1] = cnt;\n    }\n    return ;\n}\nint nxtb(int x)\n{\n    int l = 1,r = m2,res = -1;\n    while (l <= r)\n    {\n        int mid = (l + r) >> 1;\n        if (b[mid].arr >= x)\n        {\n            res = mid;\n            r = mid - 1;\n        }\n        else l = mid + 1;\n    }\n    if (res < 0) return res;\n    vector<int> upd;\n    while (res > 0 && b[res].id != 0)\n    {\n        upd.push_back(res);\n        res = c[res];\n    }\n    while (!upd.empty())\n    {\n        c[upd.back()] = c[res];\n        upd.pop_back();\n    }\n    return res;\n}\nvoid pre2()\n{\n    for (int i = 1;i < m2;i++) c[i] = i + 1;\n    c[m2] = -1;\n    for (int i = 1;i <= m2;i++)\n    {\n        if (b[i].id != 0) continue;\n        b[i].id = 1;\n        int cnt = 1,x = b[i].lea + 1;\n        int pos = nxtb(x);\n        while (pos > 0)\n        {\n            b[pos].id = 1;\n            x = b[pos].lea + 1;\n            cnt++;\n            pos = nxtb(x);\n        }\n        top2++;\n        g2[top2] = cnt;\n    }\n    return ;\n}\nint s1[N + 5],s2[N + 5];\nvoid calc()\n{\n    for (int i = 1;i <= n;i++)\n    {\n        s1[i] = s1[i - 1] + g1[i];\n    }\n    for (int i = 1;i <= n;i++)\n    {\n        s2[i] = s2[i - 1] + g2[i];\n    }\n    return ;\n}\n\nint main()\n{\n    freopen(\"airport.in\",\"r\",stdin);\n    freopen(\"airport.out\",\"w\",stdout);\n    scanf(\"%d%d%d\",&n,&m1,&m2);\n    for (int i = 1;i <= m1;i++)\n    {\n        a[i].read();\n    }\n    for (int i = 1;i <= m2;i++)\n    {\n        b[i].read();\n    }\n    sort(a + 1,a + m1 + 1);\n    sort(b + 1,b + m2 + 1);\n    pre1();\n    pre2();\n    calc();\n    int ans = 0;\n    for (int i = 0;i <= n;i++)\n    {\n        ans = max(ans,s1[i] + s2[n - i]);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1635522567,
        "uid": 191754,
        "name": "yhk1001",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7913 [CSP-S 2021] \u5eca\u6865\u5206\u914d"
    },
    {
        "content": "## CSP-S 2021\u7684\u7b7e\u5230\u9898 (\u4e0d\u9700\u8981\u7528\u5806\u7684\u505a\u6cd5)\n\n### \u5047\u6389\u7684\u4e09\u5206\n\n\u5148\u8bf4\u4e0b\u6211\u521a\u5f00\u59cb\u60f3\u5230\u7684\u9519\u8bef\u505a\u6cd5\u5427\u3002\n\n\u9996\u5148\u60f3\u5230\u4e86\u4e09\u5206\u7b54\u6848\uff0c\u4f46\u662f\u5f88\u663e\u7136\u8fd9\u9053\u9898\u4e0d\u4e00\u5b9a\u662f\u4e2a\u5355\u5cf0\u51fd\u6570\uff0c\u4e8e\u662f\u4e00\u5206\u949f\u540e\u4fbf\u5f03\u6389\u4e86\u8fd9\u4e2a\u505a\u6cd5\u3002\n\n### \u6b63\u786e\u89e3\u6cd5\n\n\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u5eca\u6865\u5bf9\u6700\u7ec8\u7b54\u6848\u7684\u8d21\u732e\u3002\u7531\u4e8e\u9898\u76ee\u4e2d\u8bf4\u201c\u5148\u5230\u5148\u5f97\u201d\uff0c\u6240\u4ee5\u65b0\u52a0\u5165\u4e00\u4e2a\u5eca\u6865\u80af\u5b9a\u662f\u4e0d\u4f1a\u5f71\u54cd\u5230\u5df2\u7ecf\u6709\u5eca\u6865\u7684\u98de\u673a\uff0c\u53c8\u56e0\u4e3a\u5148\u5230\u5148\u5f97\uff0c\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u4e00\u4e0b\u8fd8\u6ca1\u6709\u5206\u914d\u5230\u5eca\u6865\u7684\u98de\u673a\uff0c\u4ece\u4e2d\u53d6\u51fa\u6700\u5148\u5230\u8fbe\u7684\u5206\u914d\u7ed9\u5f53\u524d\u7684\u5eca\u6865\uff0c\u7b49\u5230\u8fd9\u67b6\u98de\u673a\u79bb\u5f00\u540e\u53d6\u51fa\u5728\u90a3\u4e4b\u540e\u6700\u5148\u5230\u8fbe\u7684\u672a\u5206\u914d\u7684\u98de\u673a\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6ca1\u6709\u66f4\u9760\u540e\u5230\u8fbe\u7684\u98de\u673a\u4e3a\u6b62\u3002\n\n\u8fd9\u663e\u7136\u53ef\u4ee5\u7528 `set` \u6765\u7ef4\u62a4\u672a\u5206\u914d\u7684\u98de\u673a\u3002\u7b54\u6848\u5b58\u5165 $cnt1$ \u548c $cnt2$ \u6570\u7ec4\uff0c\u5206\u522b\u8868\u793a\u56fd\u5185\u548c\u56fd\u9645\u822a\u73ed\u5206\u914d $i$ \u4e2a\u5eca\u6865\u7684\u7b54\u6848\u6570\u3002\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f $\\max\\limits_{i=0}^{n}{(cnt1_i+cnt2_{n-i})}$ \n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define uint unsigned long long\n#define resetIO(x) freopen(#x\".in\", \"r\", stdin), freopen(#x\".out\", \"w\", stdout)\n#define debug(fmt, ...) \\\n\tfprintf(stderr, \"[%s:%d] \" fmt \"\\n\", __FILE__, __LINE__, ## __VA_ARGS__)\ntemplate<class T> inline T &read(T &x){\n\tbool f = true; x = 0; char ch = getchar();\n\tfor(; !isdigit(ch); ch = getchar()) f ^= (ch == '-');\n\tfor(; isdigit(ch); ch = getchar()) x = (x << 1) + (x << 3) + (ch ^ 48);\n\treturn f ? x : (x = -x);\n}\ntemplate<class T> inline void write(T x){\n\tif(x < 0) putchar('-'), x = -x;\n\tif(x > 9) write(x / 10);\n\tputchar((x % 10) ^ 48);\n}\nconst int maxn = 1e5+5;\nconst int inf = 0x3f3f3f3f3f3f3f3f;\nstruct node{\n\tint l, r;\n\tbool operator<(const node &o)const{\n\t\treturn l < o.l;\n\t}\n};\nint n, m1, m2, cnt1[maxn], cnt2[maxn];\nnode a1[maxn], a2[maxn];\nset<node> st;\nsigned main(){\n\t// resetIO(airport);\n\tread(n); read(m1); read(m2);\n\tfor(int i=1; i<=m1; i++)\n\t\tread(a1[i].l), read(a1[i].r);\n\tfor(int i=1; i<=m2; i++)\n\t\tread(a2[i].l), read(a2[i].r);\n\tst.clear();\n\tfor(int i=1; i<=m1; i++)\n\t\tst.insert(a1[i]);\n\tfor(int i=1; i<=n; i++){\n\t\tint pos = 0, c = 0;\n\t\twhile(true){\n\t\t\tauto it = st.lower_bound(node{pos, 0});\n\t\t\tif(it == st.end()) break;\n\t\t\tpos = it->r;\n\t\t\tst.erase(it); ++c;\n\t\t}\n\t\tcnt1[i] = cnt1[i - 1] + c;\n\t}\n\tst.clear();\n\tfor(int i=1; i<=m2; i++)\n\t\tst.insert(a2[i]);\n\tfor(int i=1; i<=n; i++){\n\t\tint pos = 0, c = 0;\n\t\twhile(true){\n\t\t\tauto it = st.lower_bound(node{pos, 0});\n\t\t\tif(it == st.end()) break;\n\t\t\tpos = it->r;\n\t\t\tst.erase(it); ++c;\n\t\t}\n\t\tcnt2[i] = cnt2[i - 1] + c;\n\t}\n\tint ans = 0;\n\tfor(int i=0; i<=n; i++)\n\t\tans = max(ans, cnt1[i] + cnt2[n - i]);\n\twrite(ans); putchar('\\n');\n\treturn 0;\n}\n```\n\n~~\u611f\u89c9\u6bd4\u53bb\u5e74\u7684T1\u597d\u591a\u4e86qwq~~\n\nupdate 2021.10.27: \u53bb\u6389\u4e86\u4e24\u884c\u6beb\u65e0\u7528\u5904\u7684\u4ee3\u7801~~\uff08sort\u4e86\u4e2a\u7a7a\u6570\u7ec4\uff09~~",
        "postTime": 1634997178,
        "uid": 141573,
        "name": "yaoxi",
        "ccfLevel": 8,
        "title": "CSP-S-2021-T1"
    },
    {
        "content": "\u8003\u8bd5\u5199\u6302\u4e86 qwq\u3002\n\n\u4f5c\u4e3a T1 \u597d\u50cf\u6709\u70b9\u96be\u5427\u2026\u2026\n\n### \u5206\u6790\n\n\u98de\u673a\u6570\u91cf\u4e3a $10^5$ \u7ea7\u522b\uff0c\u4e0d\u662f\u7ebf\u6027\u5c31\u662f\u5e26 $\\log$\u3002\n\n\u5148\u5c06\u6bcf\u4e00\u4e2a\u822a\u73ed\u98de\u673a\u5b58\u4e3a\u4e00\u4e2a `pair<int,int>`\uff0c\u4e3a\u6b64\u822a\u73ed\u98de\u673a\u62b5\u8fbe\u3001\u79bb\u5f00\u65f6\u523b\u3002\n\n\u7136\u800c\u6700\u7ec8\u6240\u6c42\u505c\u9760\u5eca\u6865\u7684\u98de\u673a\u6570\u91cf\u7684\u6700\u5927\u503c\u53ef\u4ee5\u8f6c\u5316\u6210 $\\max(f(x)+g(n-x)) \\quad (0\\leqslant x\\leqslant n)$\uff0c\u5176\u4e2d $f(x),g(x)$ \u5206\u522b\u8868\u793a\u5c06 $x$ \u4e2a\u5eca\u6865\u5206\u914d\u7ed9\u56fd\u5185\u822a\u73ed / \u56fd\u9645\u822a\u73ed\uff0c\u6b64\u7c7b\u822a\u73ed\u505c\u9760\u5eca\u6865\u7684\u98de\u673a\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n\u4e0b\u6587\u53ea\u8bb2\u8ff0 $f(x)$ \u7684\u6c42\u6cd5\uff0c$g(x)$ \u7684\u6c42\u6cd5\u7c7b\u4f3c\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u8fb9\u754c\u503c\uff1a$f(0)=0$\n\n\u8003\u8651\u5c06\u5eca\u6865\u4e00\u6761\u4e00\u6761\u4f9b\u5e94\u81f3\u56fd\u5185\u822a\u73ed\uff0c\u7528 `std::set<pair<int,int> >` \u7ef4\u62a4\u5f53\u524d\u8fd8\u5728\u8fdc\u673a\u4f4d\u7684\u98de\u673a\u3002\n\n\u5f53\u4e00\u6761\u5eca\u6865\u52a0\u5165\u540e\uff0c\u4ece `set` \u4e2d\u5220\u53bb\u8fd9\u4e9b\u98de\u673a\uff1a\n\n* `set` \u4e2d\u6700\u65e9\u62b5\u8fbe\u7684\u98de\u673a $p$\n\n* `set` \u4e2d\u5728 $p$ \u79bb\u5f00\u540e\u6700\u65e9\u62b5\u8fbe\u7684\u98de\u673a $p'$\n\n* `set` \u4e2d\u5728 $p'$ \u79bb\u5f00\u540e\u6700\u65e9\u62b5\u8fbe\u7684\u98de\u673a $p''$\n\n* $\\dots$\n\n\uff08\u5efa\u8bae\u4f7f\u7528 `lower_bound`\uff09\n\n\u6700\u540e\u5f53\u524d\u7684 $f=m_1-set.size()$\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 $O(m\\log m)$ \u5185 A \u8fc7\u6b64\u9898\u3002\n\n### Code\n\n\u4e0d\u52a0\u6ce8\u91ca\u5e94\u8be5\u4e5f\u770b\u5f97\u61c2\u5427\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(i,j,k) for(register int i=j;i<=k;i++)\n#define ckmx(a,b) if(a<b){a=b;}\n#define fir first\n#define sec second\n#define mkp make_pair\n#define pii pair<int,int>\n#define N 100010\n\nint n,at,bt;\nset<pii > a,b;\npii tmp;\nset<pii >::iterator id;\nint aa[N],bb[N];\nint ma(){\n\tint res=0,now=0;\n\twhile(true){\n\t\tid=a.lower_bound(mkp(now,now));\n\t\tif(id==a.end()) break;\n\t\tres++;\n\t\tnow=id->sec;\n\t\ta.erase(id);\n\t}\n\treturn res;\n}\nint mb(){\n\tint res=0,now=0;\n\twhile(true){\n\t\tid=b.lower_bound(mkp(now,now));\n\t\tif(id==b.end()) break;\n\t\tres++;\n\t\tnow=id->sec;\n\t\tb.erase(id);\n\t}\n\treturn res;\n}\nsigned main(){\n\tscanf(\"%d%d%d\",&n,&at,&bt);\n\tFor(i,1,at){\n\t\tscanf(\"%d%d\",&tmp.fir,&tmp.sec);\n\t\ta.insert(tmp);\n\t}\n\tFor(i,1,bt){\n\t\tscanf(\"%d%d\",&tmp.fir,&tmp.sec);\n\t\tb.insert(tmp);\n\t}\n\taa[0]=0;\n\tFor(i,1,n)\n\t\taa[i]=aa[i-1]+ma();\n\tbb[0]=0;\n\tFor(i,1,n)\n\t\tbb[i]=bb[i-1]+mb();\n\tint ans=0;\n\tFor(i,0,n)\n\t\tckmx(ans,aa[i]+bb[n-i]);\n\tprintf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1634998300,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "P7913 [CSP-S 2021] \u5eca\u6865\u5206\u914d \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u9700\u8981\u5bf9\u539f\u6765\u5f62\u8c61\u7684\u5b9e\u9645\u95ee\u9898\u8fdb\u884c\u62bd\u8c61\u5316\u3002\r\n\r\n\u4ee5\u6837\u4f8b 1 \u7684\u56fd\u5185\u822a\u73ed\u62b5\u8fbe\u3001\u79bb\u5f00\u65f6\u523b\u4fe1\u606f\u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u533a\u95f4\u6765\u8868\u793a\u6bcf\u67b6\u98de\u673a\u4f4d\u4e8e\u673a\u573a\u7684\u65f6\u95f4\uff1a\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/8hr0ne6d.png)\r\n\r\n\u4e0d\u59a8\u5148\u5047\u8bbe\u5eca\u6865\u6570\u91cf\u6ca1\u6709\u9650\u5236\uff0c\u90a3\u4e48\u5f53\u4e00\u4e2a\u65b0\u7684\u98de\u673a\u62b5\u8fbe\u65f6\uff0c\u663e\u7136\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u7a7a\u95f2\u7684\u5eca\u6865\u3002\u5f53\u98de\u673a\u79bb\u5f00\u65f6\uff0c\u5c31\u53ef\u4ee5\u91ca\u653e\u51fa\u4e00\u4e2a\u7a7a\u95f2\u7684\u5eca\u6865\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u4e0b\u6240\u9700\u5eca\u6865\u7684\u6570\u91cf\u3002\u5f53\u4e00\u67b6\u98de\u673a\u62b5\u8fbe\u65f6\u8ba1\u6570\u5668 $+1$\uff0c\u79bb\u5f00\u65f6 $-1$\uff1a\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/79al6hlt.png)\r\n\r\n\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\uff1a\r\n\r\n|\u65f6\u523b|\u822a\u73ed\u5e8f\u53f7|\u62b5\u8fbe/\u79bb\u5f00|\u5f53\u524d\u6b63\u5728\u4f7f\u7528\u7684\u5eca\u6865\u6570\u91cf\uff08\u8ba1\u6570\u5668\uff09\r\n| :----------: | :----------: | :----------: | :----------: |\r\n|$1$|$1$|\u62b5\u8fbe|$0+1=1$|\r\n|$3$|$2$|\u62b5\u8fbe|$1+1=2$|\r\n|$5$|$1$|\u79bb\u5f00|$2-1=1$|\r\n|$6$|$3$|\u62b5\u8fbe|$1+1=2$|\r\n|$8$|$2$|\u79bb\u5f00|$2-1=1$|\r\n|$9$|$4$|\u62b5\u8fbe|$1+1=2$|\r\n|$10$|$3$|\u79bb\u5f00|$2-1=1$|\r\n|$13$|$5$|\u62b5\u8fbe|$1+1=2$|\r\n|$14$|$4$|\u79bb\u5f00|$2-1=1$|\r\n|$18$|$5$|\u79bb\u5f00|$1-1=0$|\r\n\r\n\u663e\u7136\uff0c\u6240\u9700\u7684\u5eca\u6865\u6570\u91cf\u4e3a\u8ba1\u6570\u5668\u5728\u6240\u6709\u65f6\u523b\u5185\u7684\u6700\u5927\u503c\uff0c\u5728\u672c\u4f8b\u4e2d\u4e3a $2$\u3002\r\n\r\n\u63a5\u4e0b\u6765\u8003\u8651\u589e\u52a0\u5eca\u6865\u9650\u5236\u65f6\u7684\u64cd\u4f5c\u65b9\u6cd5\uff1a\r\n\r\n\u5728\u8fdb\u884c\u8ba1\u6570\u5668 $+1$ \u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u8ba1\u6570\u5668\u5728\u64cd\u4f5c\u4e4b\u540e\u8d85\u8fc7\u5eca\u6865\u9650\u5236\u6570\u91cf\uff0c\u90a3\u4e48\u5c31\u8ba9\u8be5\u98de\u673a\u4e0d\u8fdb\u5165\u5eca\u6865\uff0c\u540c\u65f6\u8fdb\u884c\u6807\u8bb0\u4ee5\u9632\u540e\u9762\u64cd\u4f5c\u65f6\u5bf9\u8be5\u822a\u73ed\u8fdb\u884c $-1$ \u64cd\u4f5c\u3002\r\n\r\n\u5982\u679c\u5eca\u6865\u6570\u91cf\u9650\u5236\u4e3a $1$\uff0c\u90a3\u4e48\u793a\u610f\u56fe\u5c06\u4f1a\u53d8\u6210\u8fd9\u6837\uff08\u7070\u8272\u8868\u793a\u65e0\u6cd5\u8fdb\u5165\u5eca\u6865\uff09\uff1a\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/ikod8svd.png)\r\n\r\n\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u662f\u5148\u628a\u8bfb\u5165\u7684\u822a\u73ed\u4fe1\u606f\u6309\u7167\u62b5\u8fbe\u65f6\u523b\u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\u5e76\u5bf9\u65f6\u523b\u8fdb\u884c\u79bb\u6563\u5316\u3002\u7136\u540e\u5728 $[0,n]$ \u5185\u679a\u4e3e\u5eca\u6865\u6570\u91cf\u9650\u5236\uff0c\u5e76\u5728\u9650\u5236\u6761\u4ef6\u4e0b\u5bf9\u6bcf\u4e2a\u79bb\u6563\u5316\u540e\u7684\u65f6\u523b\u8fdb\u884c $+1/-1$ \u5904\u7406\uff0c\u4f9d\u6b21\u5f97\u5230\u6700\u5927\u822a\u73ed\u6570\u91cf\u3002\u6700\u540e\u8fdb\u884c\u7edf\u8ba1\u5373\u53ef\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m_1,m_2,ld,li,ans,td[200005],ti[200005],posd[200005][2],posi[200005][2];\r\nbool vis[100005];\r\nstruct flight\r\n{\r\n    int a,b;\r\n    bool operator<(const flight &x)const\r\n    {\r\n        return a<x.a;\r\n    }\r\n}dom[100005],inter[100005]; // domestic: \u56fd\u5185\uff0cinternational: \u56fd\u9645\r\nint solve(int a[][2],int len,int x)\r\n{\r\n    int cnt=0,ans=0; // cnt \u4e3a\u5eca\u6865\u6570\u91cf\u8ba1\u6570\u5668\uff0cans \u8bb0\u5f55\u80fd\u591f\u8fdb\u5165\u5eca\u6865\u7684\u822a\u73ed\u6570\u91cf\r\n    memset(vis,false,sizeof(vis)); // vis \u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u822a\u73ed\u662f\u5426\u80fd\u591f\u8fdb\u5165\u5eca\u6865\r\n    for(int i=1;i<=len;++i)\r\n    {\r\n        if(a[i][1]) // \u5224\u65ad\u662f\u5426\u4e3a\u62b5\u8fbe\r\n        {\r\n            if(cnt<x) // \u5224\u65ad\u662f\u5426\u8fd8\u53ef\u8fdb\u5165\u5eca\u6865\r\n            {\r\n                ++cnt; // \u5f53\u524d\u5eca\u6865\u6570\u91cf +1\r\n                ++ans; // \u53ef\u8fdb\u5165\u5eca\u6865\u7684\u822a\u73ed\u6570 +1\r\n                vis[a[i][0]]=true; // \u6807\u8bb0\u8be5\u822a\u73ed\u80fd\u8fdb\u5165\u5eca\u6865\r\n            }\r\n        }\r\n        else if(vis[a[i][0]])--cnt; // \u5982\u679c\u5f53\u524d\u65f6\u523b\u6709\u98de\u673a\u79bb\u5f00\u4e14\u8be5\u98de\u673a\u539f\u6765\u5728\u5eca\u6865\u4e2d\uff0c\u5219\u5f53\u524d\u5eca\u6865\u6570\u91cf -1\r\n    }\r\n    return ans;\r\n}\r\ntemplate<typename T>void read(T &x)\r\n{\r\n    char ch=getchar();\r\n    while(!isdigit(ch))ch=getchar();\r\n    while(isdigit(ch))\r\n    {\r\n        x=(x<<3)+(x<<1)+(ch^48);\r\n        ch=getchar();\r\n    }\r\n}\r\nint main()\r\n{\r\n    read(n),read(m_1),read(m_2);\r\n    for(int i=1;i<=m_1;++i)\r\n    {\r\n        read(dom[i].a),read(dom[i].b);\r\n        td[++ld]=dom[i].a;\r\n        td[++ld]=dom[i].b;\r\n        // \u5c06\u65f6\u523b\u5b58\u5165\u5f85\u79bb\u6563\u5316\u7684\u6570\u7ec4\u4e2d\uff08\u56fd\u5185\u3001\u56fd\u9645\u5206\u5f00\u5b58\u50a8\uff09\r\n    }\r\n    for(int i=1;i<=m_2;++i)\r\n    {\r\n        read(inter[i].a),read(inter[i].b);\r\n        ti[++li]=inter[i].a;\r\n        ti[++li]=inter[i].b;\r\n    }\r\n    sort(td+1,td+ld+1);\r\n    sort(ti+1,ti+li+1);\r\n    // \u7531\u4e8e\u6ca1\u6709\u91cd\u590d\u65f6\u523b\uff0c\u56e0\u6b64\u53ea\u9700\u6392\u5e8f\u3001\u65e0\u9700\u53bb\u91cd\r\n    sort(dom+1,dom+m_1+1);\r\n    sort(inter+1,inter+m_2+1);\r\n    // \u6309\u7167\u62b5\u8fbe\u65f6\u523b\u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff08\u56fd\u5185\u3001\u56fd\u9645\u5206\u5f00\uff09\r\n    for(int i=1;i<=m_1;++i)\r\n    {\r\n        dom[i].a=lower_bound(td+1,td+ld+1,dom[i].a)-td;\r\n        dom[i].b=lower_bound(td+1,td+ld+1,dom[i].b)-td;\r\n        // \u5c06\u822a\u73ed\u7684\u65f6\u523b\u4fee\u6539\u4e3a\u79bb\u6563\u5316\u540e\u7684\u6570\u503c\uff0c\u65b9\u4fbf\u64cd\u4f5c\r\n        posd[dom[i].a][0]=posd[dom[i].b][0]=i;\r\n        posd[dom[i].a][1]=1;\r\n        // \u7b2c\u4e8c\u7ef4 0 \u4e0b\u6807\u5b58\u50a8\u822a\u73ed\u5e8f\u53f7\u30011 \u4e0b\u6807\u5b58\u50a8\u8be5\u65f6\u523b\u662f\u5426\u662f\u98de\u673a\u62b5\u8fbe\r\n    }\r\n    for(int i=1;i<=m_2;++i)\r\n    {\r\n        inter[i].a=lower_bound(ti+1,ti+li+1,inter[i].a)-ti;\r\n        inter[i].b=lower_bound(ti+1,ti+li+1,inter[i].b)-ti;\r\n        posi[inter[i].a][0]=posi[inter[i].b][0]=i;\r\n        posi[inter[i].a][1]=1;\r\n    }\r\n    for(int i=0;i<=n;++i)ans=max(ans,solve(posd,ld,i)+solve(posi,li,n-i)); // [0,n] \u679a\u4e3e\u5eca\u6865\u6570\u91cf\u9650\u5236\r\n    printf(\"%d\",ans);\r\n    return 0;\r\n}\r\n```\r\n\r\n\u8fd9\u6837\uff0c\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u4e00\u4e2a $\\mathcal O(n(m_1+m_2)+m_1 \\log m_1+m_2 \\log m_2) \\approx \\mathcal O(n^2)$ \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u83b7\u5f97 $40$ \u5206\u7684\u597d\u6210\u7ee9\u3002\r\n\r\n\u63a5\u7740\u8003\u8651\u5982\u4f55\u5bf9 $O(n^2)$ \u505a\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\r\n\r\n\u539f\u6765\u7684\u66b4\u529b\u7a0b\u5e8f\u91c7\u7528\u5148\u679a\u4e3e\u9650\u5236\u518d\u904d\u5386\u65f6\u523b\u7684\u65b9\u6cd5\u3002\u7531\u4e8e\u904d\u5386\u65f6\u523b\u7684\u64cd\u4f5c\u4e0d\u53ef\u4f18\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u904d\u5386\u65f6\u523b\u518d\u679a\u4e3e\u9650\u5236\u3002\r\n\r\n\u4e0d\u59a8\u7528\u6570\u7ec4 $\\{\\text{sum}_i\\}$ \u6765\u8bb0\u5f55\u9650\u5236\u6570\u91cf\u4e3a $i$ \u65f6\u5f53\u524d\u6240\u9700\u5eca\u6865\u7684\u6570\u91cf\uff0c\u7528\u6570\u7ec4 $\\{\\text{ans}_i\\}$ \u6765\u8bb0\u5f55\u9650\u5236\u6570\u91cf\u4e3a $i$ \u65f6\u5f53\u524d\u53ef\u8fdb\u5165\u5eca\u6865\u7684\u822a\u73ed\u6570\u91cf\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e24\u4e2a\u6570\u7ec4\u4e00\u5b9a**\u5355\u8c03\u4e0d\u9012\u51cf**\u3002\r\n\r\n\u5728\u904d\u5386\u65f6\u523b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65f6\u523b\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\r\n\r\n- \u8be5\u65f6\u523b\u6709\u98de\u673a\u62b5\u8fbe\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5728 $\\{\\text{sum}_i\\}$ \u4e2d\u8fdb\u884c\u4e8c\u5206\uff0c\u627e\u5230\u4e00\u4e2a\u6700\u5927\u7684 $p$\uff0c\u4f7f\u5f97 $\\text{sum}_p \\lt p$\uff08\u5373\u98de\u673a\u8fd8\u53ef\u8fdb\u5165\u5eca\u6865\uff09\u3002\u7d27\u63a5\u7740\uff0c\u6211\u4eec\u628a $[p,n]$ \u5185\u7684 $\\text{sum}$ \u503c\u548c $\\text{ans}$ \u503c\u5168\u90e8\u52a0\u4e0a $1$\u3002\u548c\u66b4\u529b\u7a0b\u5e8f\u7c7b\u4f3c\uff0c\u6211\u4eec\u5728\u8be5\u822a\u73ed\u7684\u5bf9\u5e94\u4f4d\u7f6e\u6807\u8bb0 $p$\uff0c\u65b9\u4fbf\u540e\u7eed\u64cd\u4f5c\u3002\u5982\u679c\u6240\u6709\u7684 $\\text{sum}$ \u503c\u90fd\u4e0d\u5c0f\u4e8e $p$\uff0c\u90a3\u4e48\u5c31\u6807\u8bb0 $-1$\u3002\r\n\r\n- \u8be5\u65f6\u523b\u6709\u98de\u673a\u79bb\u5f00\u3002\u7531\u4e8e\u8be5\u98de\u673a\u7684\u79bb\u5f00\u65f6\u523b\u4e00\u5b9a\u665a\u4e8e\u62b5\u8fbe\u65f6\u523b\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e4b\u524d\u6240\u505a\u7684\u6807\u8bb0\u3002\u5982\u679c\u6807\u8bb0 $\\text{pos}$ \u4e0d\u4e3a $-1$\uff0c\u90a3\u4e48\u5c31\u628a $[\\text{pos},n]$ \u5185\u7684 $\\text{sum}$ \u5168\u90e8\u51cf $1$\uff0c\u5b8c\u6210\u8fd8\u539f\u64cd\u4f5c\u3002\r\n\r\n\u5982\u679c\u6bcf\u6b21\u8fdb\u884c\u66b4\u529b $+1$ / $-1$\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u4e3a $\\mathcal O(n^2)$\u3002\u4f46\u8003\u8651\u5230\u4fee\u6539\u90fd\u662f\u533a\u95f4\u6027\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6bb5\u6811\u3001\u533a\u4fee\u5355\u67e5\u7684\u6811\u72b6\u6570\u7ec4\u6216\u5206\u5757\u5b9e\u73b0\u3002\r\n\r\n\u5e38\u6570\u8f83\u5927\u7684 $\\mathcal O(n \\log^2n)$ \u7ebf\u6bb5\u6811\u4ee3\u7801\uff1a\uff08\u6700\u5927\u65f6\u9650 $\\approx 200$ $\\text{ms}$\uff09\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m_1,m_2,ld,li,cn,ANS,td[200005],ti[200005],posd[200005][2],posi[200005][2],pos[100005],ansd[100005],ansi[100005];\r\nstruct flight\r\n{\r\n    int a,b;\r\n    bool operator<(const flight &x)const\r\n    {\r\n        return a<x.a;\r\n    }\r\n}dom[100005],inter[100005];\r\nstruct node\r\n{\r\n    int l,r,ls,rs,sum,tag;\r\n};\r\nstruct segtree\r\n{\r\n    node t[200005]; // \u8fd9\u79cd\u7ebf\u6bb5\u6811\u5199\u6cd5\u53ea\u9700\u5f00 2 \u500d\u7a7a\u95f4\r\n    void build(int p,int l,int r) // \u7ebf\u6bb5\u6811\u5efa\u6811\u7684\u590d\u6742\u5ea6\u4e3a O(n)\r\n    {\r\n        t[p].l=l,t[p].r=r;\r\n        if(l==r)return;\r\n        int mid=(t[p].l+t[p].r)>>1;\r\n        build(t[p].ls=++cn,l,mid);\r\n        build(t[p].rs=++cn,mid+1,r);\r\n    }\r\n    void init()\r\n    {\r\n        cn=1;\r\n        build(1,1,n);\r\n    }\r\n    void reset()\r\n    {\r\n        for(int i=1;i<=n<<1;++i)\r\n        {\r\n            t[i].sum=0;\r\n            t[i].tag=0;\r\n        }\r\n    }\r\n    void push_up(int p)\r\n    {\r\n        if(!t[p].tag)return;\r\n        int l=t[p].ls,r=t[p].rs;\r\n        t[l].sum+=(t[l].r-t[l].l+1)*t[p].tag;\r\n        t[r].sum+=(t[r].r-t[r].l+1)*t[p].tag;\r\n        t[l].tag+=t[p].tag;\r\n        t[r].tag+=t[p].tag;\r\n        t[p].tag=0;\r\n    }\r\n    void update(int p,int l,int r,int k) // \u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\u7684\u590d\u6742\u5ea6\u4e3a O(log n)\r\n    {\r\n        if(l<=t[p].l&&t[p].r<=r)\r\n        {\r\n            t[p].sum+=(t[p].r-t[p].l+1)*k;\r\n            t[p].tag+=k;\r\n            return;\r\n        }\r\n        push_up(p);\r\n        int mid=(t[p].l+t[p].r)>>1;\r\n        if(l<=mid)update(t[p].ls,l,r,k);\r\n        if(r>mid)update(t[p].rs,l,r,k);\r\n        t[p].sum=t[t[p].ls].sum+t[t[p].rs].sum;\r\n    }\r\n    int query(int p,int l,int r) // \u7ebf\u6bb5\u6811\u5355\u70b9 / \u533a\u95f4\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u5747\u4e3a O(log n)\r\n    {\r\n        if(l<=t[p].l&&t[p].r<=r)return t[p].sum;\r\n        push_up(p);\r\n        int mid=(t[p].l+t[p].r)>>1;\r\n        if(l>mid)return query(t[p].rs,l,r);\r\n        if(r<=mid)return query(t[p].ls,l,r);\r\n        return query(t[p].ls,l,r)+query(t[p].rs,l,r);\r\n    }\r\n}sum,ans;\r\nvoid solve(int a[][2],int len,bool flag)\r\n{\r\n    memset(pos,0,sizeof(pos));\r\n    if(flag)sum.reset(),ans.reset();\r\n    else sum.init(),ans.init();\r\n    // flag \u8868\u793a\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\u8fdb\u884c solve \u64cd\u4f5c\uff1b\u5982\u679c\u4e3a false \u5c31\u8fdb\u884c\u5efa\u6811\uff0c\u5426\u5219\u91cd\u65b0\u8d4b\u503c\r\n    for(int i=1;i<=len;++i)\r\n    {\r\n        if(a[i][1])\r\n        {\r\n            int l=1,r=n,p=-1;\r\n            while(l<=r)\r\n            {\r\n                int mid=(l+r)>>1;\r\n                if(sum.query(1,mid,mid)<mid)\r\n                {\r\n                    r=mid-1;\r\n                    p=mid;\r\n                }\r\n                else l=mid+1;\r\n            }\r\n            // \u4e8c\u5206\u67e5\u627e\u6700\u5927\u7684 p\uff0c\u4f7f\u5f97 sum[p]<p\r\n            pos[a[i][0]]=p;\r\n            if(~p)\r\n            {\r\n                sum.update(1,p,n,1);\r\n                ans.update(1,p,n,1);\r\n                // +1 \u64cd\u4f5c\r\n            }\r\n        }\r\n        else if(~pos[a[i][0]])sum.update(1,pos[a[i][0]],n,-1); // -1 \u8fd8\u539f\u6027\u64cd\u4f5c\r\n    }\r\n    for(int i=1;i<=n;++i)\r\n    {\r\n        if(flag)ansi[i]=ans.query(1,i,i);\r\n        else ansd[i]=ans.query(1,i,i);\r\n        // \u5c06\u7b54\u6848\u5b58\u5165\u5bf9\u5e94\u6570\u7ec4\u4e2d\uff0c\u65b9\u4fbf\u540e\u9762\u8fdb\u884c O(n) \u7edf\u8ba1\r\n    }\r\n}\r\ntemplate<typename T>void read(T &x)\r\n{\r\n    char ch=getchar();\r\n    while(!isdigit(ch))ch=getchar();\r\n    while(isdigit(ch))\r\n    {\r\n        x=(x<<3)+(x<<1)+(ch^48);\r\n        ch=getchar();\r\n    }\r\n}\r\nint main()\r\n{\r\n    read(n),read(m_1),read(m_2);\r\n    for(int i=1;i<=m_1;++i)\r\n    {\r\n        read(dom[i].a),read(dom[i].b);\r\n        td[++ld]=dom[i].a;\r\n        td[++ld]=dom[i].b;\r\n    }\r\n    for(int i=1;i<=m_2;++i)\r\n    {\r\n        read(inter[i].a),read(inter[i].b);\r\n        ti[++li]=inter[i].a;\r\n        ti[++li]=inter[i].b;\r\n    }\r\n    sort(td+1,td+ld+1);\r\n    sort(ti+1,ti+li+1);\r\n    sort(dom+1,dom+m_1+1);\r\n    sort(inter+1,inter+m_2+1);\r\n    for(int i=1;i<=m_1;++i)\r\n    {\r\n        dom[i].a=lower_bound(td+1,td+ld+1,dom[i].a)-td;\r\n        dom[i].b=lower_bound(td+1,td+ld+1,dom[i].b)-td;\r\n        posd[dom[i].a][0]=posd[dom[i].b][0]=i;\r\n        posd[dom[i].a][1]=1;\r\n    }\r\n    for(int i=1;i<=m_2;++i)\r\n    {\r\n        inter[i].a=lower_bound(ti+1,ti+li+1,inter[i].a)-ti;\r\n        inter[i].b=lower_bound(ti+1,ti+li+1,inter[i].b)-ti;\r\n        posi[inter[i].a][0]=posi[inter[i].b][0]=i;\r\n        posi[inter[i].a][1]=1;\r\n    }\r\n    solve(posd,ld,false);\r\n    solve(posi,li,true);\r\n    for(int i=0;i<=n;++i)ANS=max(ANS,ansd[i]+ansi[n-i]);\r\n    printf(\"%d\",ANS);\r\n    return 0;\r\n}\r\n```\r\n\r\n$\\mathcal O(n \\log n + n \\sqrt n)$ \u7684\u5206\u5757\u4ee3\u7801\uff1a\uff08\u6700\u5927\u65f6\u9650 $\\approx 100$ $\\text{ms}$\uff09\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m_1,m_2,ld,li,len,ANS,td[200005],ti[200005],posd[200005][2],posi[200005][2],pos[100005],id[100005],ansd[100005],ansi[100005];\r\nstruct flight\r\n{\r\n    int a,b;\r\n    bool operator<(const flight &x)const\r\n    {\r\n        return a<x.a;\r\n    }\r\n}dom[100005],inter[100005];\r\nstruct block\r\n{\r\n    int a[100005],b[325],block[325];\r\n    void reset()\r\n    {\r\n        memset(a,0,sizeof(a));\r\n        memset(b,0,sizeof(b));\r\n        memset(block,0,sizeof(block));\r\n    }\r\n    void update(int l,int r,int k) // \u5206\u5757\u533a\u95f4\u4fee\u6539\u7684\u590d\u6742\u5ea6\u4e3a O(sqrt(n))\r\n    {\r\n        int x=id[l],y=id[r];\r\n        if(x==y)\r\n        {\r\n            for(int i=l;i<=r;++i)\r\n            {\r\n                a[i]+=k;\r\n                block[x]+=k;\r\n            }\r\n            return;\r\n        }\r\n        for(int i=l;i<=len*x;++i)\r\n        {\r\n            a[i]+=k;\r\n            block[x]+=k;\r\n        }\r\n        for(int i=x+1;i<y;++i)\r\n        {\r\n            b[i]+=k;\r\n            block[i]+=len*k;\r\n        }\r\n        for(int i=len*(y-1)+1;i<=r;++i)\r\n        {\r\n            a[i]+=k;\r\n            block[y]+=k;\r\n        }\r\n    }\r\n}sum,ans;\r\nvoid solve(int a[][2],int len,bool flag)\r\n{\r\n    if(flag)\r\n    {\r\n        memset(pos,0,sizeof(pos));\r\n        sum.reset(),ans.reset();\r\n    }\r\n    for(int i=1;i<=len;++i)\r\n    {\r\n        if(a[i][1])\r\n        {\r\n            int l=1,r=n,p=-1;\r\n            while(l<=r)\r\n            {\r\n                int mid=(l+r)>>1;\r\n                if(sum.a[mid]+sum.b[id[mid]]<mid)\r\n                {\r\n                    r=mid-1;\r\n                    p=mid;\r\n                }\r\n                else l=mid+1;\r\n                // \u5206\u5757\u5355\u70b9\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a O(1)\r\n            }\r\n            pos[a[i][0]]=p;\r\n            if(~p)\r\n            {\r\n                sum.update(p,n,1);\r\n                ans.update(p,n,1);\r\n            }\r\n        }\r\n        else if(~pos[a[i][0]])sum.update(pos[a[i][0]],n,-1);\r\n    }\r\n    for(int i=1;i<=n;++i)\r\n    {\r\n        if(flag)ansi[i]=ans.a[i]+ans.b[id[i]];\r\n        else ansd[i]=ans.a[i]+ans.b[id[i]];\r\n    }\r\n}\r\ntemplate<typename T>void read(T &x)\r\n{\r\n    char ch=getchar();\r\n    while(!isdigit(ch))ch=getchar();\r\n    while(isdigit(ch))\r\n    {\r\n        x=(x<<3)+(x<<1)+(ch^48);\r\n        ch=getchar();\r\n    }\r\n}\r\nint main()\r\n{\r\n    read(n),read(m_1),read(m_2);\r\n    for(int i=1;i<=m_1;++i)\r\n    {\r\n        read(dom[i].a),read(dom[i].b);\r\n        td[++ld]=dom[i].a;\r\n        td[++ld]=dom[i].b;\r\n    }\r\n    for(int i=1;i<=m_2;++i)\r\n    {\r\n        read(inter[i].a),read(inter[i].b);\r\n        ti[++li]=inter[i].a;\r\n        ti[++li]=inter[i].b;\r\n    }\r\n    sort(td+1,td+ld+1);\r\n    sort(ti+1,ti+li+1);\r\n    sort(dom+1,dom+m_1+1);\r\n    sort(inter+1,inter+m_2+1);\r\n    for(int i=1;i<=m_1;++i)\r\n    {\r\n        dom[i].a=lower_bound(td+1,td+ld+1,dom[i].a)-td;\r\n        dom[i].b=lower_bound(td+1,td+ld+1,dom[i].b)-td;\r\n        posd[dom[i].a][0]=posd[dom[i].b][0]=i;\r\n        posd[dom[i].a][1]=1;\r\n    }\r\n    for(int i=1;i<=m_2;++i)\r\n    {\r\n        inter[i].a=lower_bound(ti+1,ti+li+1,inter[i].a)-ti;\r\n        inter[i].b=lower_bound(ti+1,ti+li+1,inter[i].b)-ti;\r\n        posi[inter[i].a][0]=posi[inter[i].b][0]=i;\r\n        posi[inter[i].a][1]=1;\r\n    }\r\n    len=sqrt(n);\r\n    for(int i=1;i<=n;++i)id[i]=(i-1)/len+1;\r\n    solve(posd,ld,false);\r\n    solve(posi,li,true);\r\n    for(int i=0;i<=n;++i)ANS=max(ANS,ansd[i]+ansi[n-i]);\r\n    printf(\"%d\",ANS);\r\n    return 0;\r\n}\r\n```\r\n\r\n\u5e38\u6570\u8f83\u5c0f\u7684 $\\mathcal O(n \\log^2 n)$ \u6811\u72b6\u6570\u7ec4\u4ee3\u7801\uff1a\uff08\u6700\u5927\u65f6\u9650 $\\approx 50$ $\\text{ms}$\uff09\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m_1,m_2,ld,li,ANS,td[200005],ti[200005],posd[200005][2],posi[200005][2],pos[100005],ansd[100005],ansi[100005];\r\nstruct flight\r\n{\r\n    int a,b;\r\n    bool operator<(const flight &x)const\r\n    {\r\n        return a<x.a;\r\n    }\r\n}dom[100005],inter[100005];\r\nstruct BIT\r\n{\r\n    int t[100005];\r\n    void update(int x,int k)\r\n    {\r\n        while(x<=n)\r\n        {\r\n            t[x]+=k;\r\n            x+=x&-x;\r\n        }\r\n    }\r\n    int query(int x)\r\n    {\r\n        int s=0;\r\n        while(x)\r\n        {\r\n            s+=t[x];\r\n            x-=x&-x;\r\n        }\r\n        return s;\r\n    }\r\n    // \u8fd9\u79cd\u6811\u72b6\u6570\u7ec4\u7684\u4fee\u6539\u548c\u67e5\u8be2\u590d\u6742\u5ea6\u5747\u4e3a O(log n)\r\n}sum,ans;\r\nvoid solve(int a[][2],int len,bool flag)\r\n{\r\n    if(flag)\r\n    {\r\n        memset(pos,0,sizeof(pos));\r\n        memset(sum.t,0,sizeof(sum.t));\r\n        memset(ans.t,0,sizeof(ans.t));\r\n    }\r\n    for(int i=1;i<=len;++i)\r\n    {\r\n        if(a[i][1])\r\n        {\r\n            int l=1,r=n,p=-1;\r\n            while(l<=r)\r\n            {\r\n                int mid=(l+r)>>1;\r\n                if(sum.query(mid)<mid)\r\n                {\r\n                    r=mid-1;\r\n                    p=mid;\r\n                }\r\n                else l=mid+1;\r\n            }\r\n            pos[a[i][0]]=p;\r\n            if(~p)\r\n            {\r\n                sum.update(p,1);\r\n                ans.update(p,1);\r\n            }\r\n        }\r\n        else if(~pos[a[i][0]])sum.update(pos[a[i][0]],-1);\r\n    }\r\n    for(int i=1;i<=n;++i)\r\n    {\r\n        if(flag)ansi[i]=ans.query(i);\r\n        else ansd[i]=ans.query(i);\r\n    }\r\n}\r\ntemplate<typename T>void read(T &x)\r\n{\r\n    char ch=getchar();\r\n    while(!isdigit(ch))ch=getchar();\r\n    while(isdigit(ch))\r\n    {\r\n        x=(x<<3)+(x<<1)+(ch^48);\r\n        ch=getchar();\r\n    }\r\n}\r\nint main()\r\n{\r\n    read(n),read(m_1),read(m_2);\r\n    for(int i=1;i<=m_1;++i)\r\n    {\r\n        read(dom[i].a),read(dom[i].b);\r\n        td[++ld]=dom[i].a;\r\n        td[++ld]=dom[i].b;\r\n    }\r\n    for(int i=1;i<=m_2;++i)\r\n    {\r\n        read(inter[i].a),read(inter[i].b);\r\n        ti[++li]=inter[i].a;\r\n        ti[++li]=inter[i].b;\r\n    }\r\n    sort(td+1,td+ld+1);\r\n    sort(ti+1,ti+li+1);\r\n    sort(dom+1,dom+m_1+1);\r\n    sort(inter+1,inter+m_2+1);\r\n    for(int i=1;i<=m_1;++i)\r\n    {\r\n        dom[i].a=lower_bound(td+1,td+ld+1,dom[i].a)-td;\r\n        dom[i].b=lower_bound(td+1,td+ld+1,dom[i].b)-td;\r\n        posd[dom[i].a][0]=posd[dom[i].b][0]=i;\r\n        posd[dom[i].a][1]=1;\r\n    }\r\n    for(int i=1;i<=m_2;++i)\r\n    {\r\n        inter[i].a=lower_bound(ti+1,ti+li+1,inter[i].a)-ti;\r\n        inter[i].b=lower_bound(ti+1,ti+li+1,inter[i].b)-ti;\r\n        posi[inter[i].a][0]=posi[inter[i].b][0]=i;\r\n        posi[inter[i].a][1]=1;\r\n    }\r\n    solve(posd,ld,false);\r\n    solve(posi,li,true);\r\n    for(int i=0;i<=n;++i)ANS=max(ANS,ansd[i]+ansi[n-i]);\r\n    printf(\"%d\",ANS);\r\n    return 0;\r\n}\r\n```",
        "postTime": 1635036873,
        "uid": 137367,
        "name": "hensier",
        "ccfLevel": 6,
        "title": "P7913 [CSP-S 2021] \u5eca\u6865\u5206\u914d \u9898\u89e3"
    },
    {
        "content": "- **\u505a\u6cd5**\uff1a\n\n\u9996\u5148\uff0c\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u3002\u56e0\u4e3a\u6709\u201c\u5148\u5230\u5148\u5f97\u201d\u8fd9\u4e2a\u6761\u4ef6\uff0c\u90a3\u4e48\u5982\u679c\u6709 $k+1$ \u4e2a\u5eca\u6865\u7684\u8bdd\uff0c\u6700\u540e\u4e00\u4e2a\u5eca\u6865\u4e00\u5b9a\u662f\u5728\u539f\u6765\u53ea\u6709 $k$ \u4e2a\u5eca\u6865\u7684\u57fa\u7840\u4e0a\u9009\u7684\u3002\n\n\u8003\u8651\u5f52\u7eb3\uff0c\u5bb9\u6613\u77e5\u9053 $0$ \u4e2a\u5eca\u6865\u7684\u65f6\u5019\u7b54\u6848\u4e3a $0$\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u601d\u8003\u5df2\u77e5 $k$ \u7684\u7b54\u6848\u5982\u4f55\u8ba1\u7b97 $k+1$ \u7684\u7b54\u6848\u3002\n\n\u9996\u5148\uff0c\u6700\u524d\u9762\u4e00\u4e2a\u672a\u9009\u7684\u533a\u95f4\u80af\u5b9a\u662f\u8981\u9009\u7684\u3002\u63a5\u7740\u7531\u201c\u5148\u5230\u5148\u5f97\u201d\u8fd9\u4e2a\u539f\u5219\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u9009\u5de6\u7aef\u70b9\u79bb\u6700\u540e\u4e00\u4e2a\u5df2\u9009\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u6700\u8fd1\u7684\u90a3\u4e2a\u672a\u9009\u533a\u95f4\u3002\u90a3\u4e48\u6211\u4eec\u5bf9\u6240\u6709\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u5f00\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u6bcf\u6b21\u9009\u53f3\u7aef\u70b9\u7684\u540e\u7ee7\u5373\u53ef\u3002\n\n\u6bcf\u4e2a\u533a\u95f4\u6700\u591a\u8fdb\u51fa\u5e73\u8861\u6811\u4e00\u6b21\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((m1+m2)\\log n)$\u3002\n\n\u7edf\u8ba1\u51fa\u6765\u6bcf\u8fb9\u653e\u7684\u5eca\u6865\u6240\u5bf9\u5e94\u7684\u7b54\u6848\u4e4b\u540e\uff0c\u679a\u4e3e\u4e24\u8fb9\u5206\u522b\u653e\u591a\u5c11\u4e2a\u5eca\u6865\u52a0\u8d77\u6765\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n- [\u4ee3\u7801](https://www.luogu.com.cn/paste/zx3f3x8o)",
        "postTime": 1634990972,
        "uid": 225755,
        "name": "LinkZelda",
        "ccfLevel": 8,
        "title": "P7913"
    },
    {
        "content": "\u5199\u4e00\u53d1\u8003\u573a\u601d\u8def\n\n\u6bd4\u8f83\u663e\u7136\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f**\u6bcf\u67b6\u98de\u673a\u6700\u7ec8\u505c\u5728\u54ea\u4e2a\u5eca\u6865** \u4e0e **\u5206\u914d\u7684\u5eca\u6865\u4e2a\u6570**\u65e0\u5173\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u9075\u5faa\u5148\u5230\u5148\u5f97\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u98de\u673a\u5c06\u4f1a\u5728\u54ea\u4e2a\u5eca\u6865\u505c\u4e0b\uff0c\u4ece\u800c\u5f97\u51fa\u6bcf\u4e2a\u5eca\u6865\u80fd\u505c\u9760\u7684\u98de\u673a\u6570\u91cf\uff0c\u5373\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u6700\u7ec8\u7b54\u6848\u5219\u53ef\u4ee5\u8868\u793a\u4e3a\n\n$$Ans=max\\{\\sum_{x=1}^{i}g(x)+\\sum_{x=1}^{n-i}u(n-x)\\}$$\n\n\u5176\u4e2d $g(x)$ \u8868\u793a\u5728\u56fd\u5185\u7b2c $x$ \u53f7\u5eca\u6865\u52a0\u5165\u540e\u627f\u8f7d\u7684\u98de\u673a\u6570\u91cf\uff0c $u(x)$ \u540c\u7406\n\n\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528\u4e00\u4e2a\u524d\u7f00\u548c\u505a\u5230 $O(N)$ \u6c42\n\n\u95ee\u9898\u662f\u5982\u4f55\u6c42\u6bcf\u4e2a\u98de\u673a\u5728\u54ea\u4e2a\u5eca\u6865\u505c\u9760\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u98de\u673a\u90fd\u4f1a\u9009\u62e9\u5f53\u524d\u7a7a\u95f2\u7684\u7f16\u53f7\u6700\u5c0f\u7684\u5eca\u6865\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u5806\u6765\u7ef4\u62a4\uff0c\u5efa\u7acb\u4e00\u4e2a\u5806\u91cc\u9762\u653e\u5f53\u524d\u7a7a\u95f2\u7684\u5eca\u6865\u7684\u7f16\u53f7\uff0c\u6bcf\u6b21\u6709\u98de\u673a\u843d\u5730\u5c31`pop()`\u6709\u8d77\u98de\u5c31`push()`\n\n\u6309\u8d77\u98de\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u5206\u522b\u7ed9\u4e24\u79cd\u822a\u73ed\u6392\u5e8f\uff0c\u5efa\u7acb\u53e6\u4e00\u4e2a\u5806\uff0c\u5b58\u653e\u5f53\u524d\u4ecd\u7136\u505c\u5728\u673a\u573a\u7684\u98de\u673a\n\n\u6bcf\u6b21\u6709\u65b0\u98de\u673a\u843d\u5730\u65f6\u628a\u6240\u6709\u8d77\u98de\u65f6\u95f4\u5c0f\u4e8e\u5b83\u843d\u5730\u65f6\u95f4\u7684\u98de\u673a`pop()`\u51fa\u53bb\uff0c\u628a\u4ed6\u4eec\u5360\u7528\u7684\u5eca\u6865\u91cd\u65b0\u52a0\u56de\u7b2c\u4e00\u4e2a\u5806\u91cc\n\n\u7136\u540e\u5206\u914d\u7ed9\u65b0\u98de\u673a\u4e00\u4e2a\u6700\u5c0f\u7a7a\u95f2\u5eca\u6865\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u5eca\u6865\u7f16\u53f7\u5e76\u4e14`pop()`\u51fa\u7b2c\u4e00\u4e2a\u5806\uff0c\u7ed9\u8fd9\u4e2a\u5eca\u6865\u7684\u8d21\u732e++\u3002\n\n\u4e0a\u9762\u7684\u8fc7\u7a0b\u56fd\u5185\u822a\u73ed\u505a\u4e00\u904d\uff0c\u56fd\u9645\u822a\u73ed\u518d\u505a\u4e00\u904d\uff0c\u6c42\u524d\u7f00\u548c\uff0c\u5c31\u53ef\u4ee5\u6309\u4e0a\u9762\u7684\u5f0f\u5b50\u6c42\u5f97\u7b54\u6848\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(NlogN)$\n\n~~\u4eba\u79f0`priority_queue`\u7ec3\u4e60\u9898~~\n\n~~\u5e0c\u671b\u81ea\u5df1\u4e0d\u8981\u5199\u6302\u5206~~",
        "postTime": 1635000573,
        "uid": 75954,
        "name": "AuCloud",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 \u5eca\u6865\u5206\u914d"
    },
    {
        "content": "## Observation \n\n \u5148\u53ea\u8003\u8651\u4e00\u4e2a\u533a\uff08\u6bd4\u5982\u56fd\u5185\u533a\uff09\u3002\u53ef\u4ee5\u89c2\u5bdf\u4e00\u4e0b\u5eca\u6865\u6570\u4ece $1$ \u53d8\u4e3a $2$ \u65f6\u7b54\u6848\u7684\u53d8\u5316\u3002\n\n\u6ce8\u610f\u5230\uff0c\u539f\u6709\u7684\u98de\u673a\u662f\u4e0d\u4f1a\u5220\u53bb\u7684\uff0c\u800c\u65b0\u589e\u7684\u98de\u673a\u7684\u5b58\u6d3b\u65f6\u95f4\u662f**\u4e92\u4e0d\u76f8\u4ea4**\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ece\u4efb\u610f $i$ \u8f6c\u79fb\u5230 $i + 1$ \u8fd9\u4e2a\u6027\u8d28\u90fd\u662f\u6210\u7acb\u7684\u3002\n\n  \u53cd\u8bc1\u3002\u4e0d\u59a8\u8bbe\u65b0\u589e\u4e86\u4e24\u4e2a\u76f8\u4ea4\u7684\u98de\u673a $[l_1, r_1], [l_2, r_2]$\n  \u4e14 $l_1 < l_2 < r_1$\u3002\u8fd9\u610f\u5473\u7740 $[l_2, r_1]$\n  \u8fd9\u6bb5\u533a\u95f4\u4e4b\u524d\u53ea\u5b58\u5728\u81f3\u591a $i - 1$ \u4e2a\u98de\u673a\uff0c\u90a3\u4e48 $[l_2, r_2]$ \u5728 $i$\n  \u5904\u5c31\u53ef\u4ee5\u589e\u52a0\uff0c\u800c\u65e0\u9700\u7b49\u5230 $i + 1$\u3002\n\n## Solution\n\n\u4e0b\u9762\u662f\u672c\u9898\u7684 $\\Theta (n \\log n)$ \u505a\u6cd5\u3002\n\n\u8003\u8651\u5bf9 $i \\in [1, m_1]$ \u6c42\u51fa $f_{1, i}$\uff0c\u8868\u793a\u56fd\u5185\u822a\u73ed\u6709 $i$\n\u4e2a\u5eca\u6865\u65f6\uff0c\u6709 $f_{1, i}$ \u67b6\u98de\u673a\u53ef\u4ee5\u505c\u9760\u5728\u5eca\u6865\u3002$f_{2, i}$\n\u540c\u7406\u3002\u7b54\u6848\u5219\u4e3a\n$$ \\max_{i=0}^n (f_{1, i} + f_{2, n - i}) $$\n\n\n\u6c42\u51fa $f_1$ \u53ea\u9700\u679a\u4e3e $i$ \u4ece 1 \u5230 $m_1$\uff1b\u518d\u7528\n`std::set<std::pair<int, int> >` \u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\n$S$\uff08\u521d\u59cb\u4e3a\u6240\u6709\u56fd\u5185\u98de\u673a\uff09\uff0c\u8868\u793a\u8fd8\u672a\u9009\u4e2d\u7684\u98de\u673a\u3002\u6839\u636e\u4e0a\u9762\u7684\u89c2\u5bdf\uff0c$i$\n\u7684\u6bcf\u6b21\u8f6c\u79fb\u9700\u8981\u6c42\u51fa\u5305\u542b $\\min S$\n\u7684\u6781\u5927\u4e0d\u4ea4\u5b50\u96c6 $T$\uff0c\u5e76\u4ee4 $S \\gets S \\backslash T$\u3002\u8be6\u7ec6\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <set>\n\nconst int MAXN = 100000;\n\nint n, m1, m2;\nstd::set<std::pair<int, int> > a, b;\nint f[3][MAXN];\n\ninline void Work(std::set<std::pair<int, int> > &set, int *t) {\n  for (int i = 1; i <= n; ++i) {\n    std::vector<std::pair<int, int> > del;\n    t[i] += t[i - 1];\n    for (auto it = set.begin(); it != set.end(); it = set.lower_bound({it->second, 0})) {\n      ++t[i];\n      del.push_back(*it);\n    }\n    for (auto it : del)\n      set.erase(it);\n  }\n}\n\nint main() {\n  scanf(\"%d%d%d\", &n, &m1, &m2);\n  for (int i = 1; i <= m1; ++i) {\n    int l, r;\n    scanf(\"%d%d\", &l, &r);\n    a.insert({l, r});\n  }\n  for (int i = 1; i <= m2; ++i) {\n    int l, r;\n    scanf(\"%d%d\", &l, &r);\n    b.insert({l, r});\n  }\n  Work(a, f[1]);\n  Work(b, f[2]);\n  int ans = 0;\n  for (int i = 0; i <= n; ++i)\n    ans = std::max(ans, f[1][i] + f[2][n - i]);\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n```",
        "postTime": 1635001274,
        "uid": 346119,
        "name": "_\u9c7c\u975e\u4ed9_",
        "ccfLevel": 7,
        "title": "\u5eca\u6865\u5206\u914d"
    },
    {
        "content": "[\u9898\u4f20](https://www.luogu.com.cn/problem/P7913)\n\n### \u7ea6\u5b9a\uff1a\n\n\n _\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u201c\u5148\u5230\u5148\u5f97\u201d\uff0c\u6240\u4ee5\u4e8b\u5148\u5bf9\u6240\u6709\u98de\u673a\u5206\u7ec4\u540e\u6309\u5de6\u7aef\u70b9\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002_ \n\n### \u9898\u5916\u8bdd\n\n\u4ee5\u6b64\u7eaa\u5ff5\u6211\u5728 CSP - S 2021 \u552f\u4e00\u4e00\u9053\u8fc7\u4e86\u7684\u9898\u76ee\uff0c\u4ee5\u53ca\u6211 2 \u5e74\u7684\u521d\u4e2d OI \u751f\u6daf\u3002\n\n### \u56de\u5230\u6b63\u9898\n\n\n\u62ff\u5230\u9898\u76ee\u4f60\u5148\u60f3\uff1a\u6b38\u8fd9\u4e2a\u7b54\u6848\u597d\u50cf\u6709\u5355\u8c03\u6027\u6b38\uff1f\u73c2\u4e0d\u73c2\u4ee5\u4e8c\u5206\uff1f\n\n\u4e0d\u597d\u610f\u601d\uff0c\u8bf7\u4f60\u7ed9\u6211\u8868\u6f14\u4e00\u4e0b `check` \u600e\u4e48\u5199\u3002\n\n\u601d\u8003\uff1a`check` \u96be\u505a\u7684\u539f\u56e0\u662f\u6211\u4eec\u4e8c\u5206\u7b54\u6848\u540e\uff0c\u4ecd\u5bf9\u4e24\u4e2a\u957f\u5eca\u5e94\u8be5\u653e\u56fd\u5185/\u5916\u98de\u673a\u4e00\u65e0\u6240\u77e5\uff0c\u6240\u4ee5\uff0c\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u4e86\u7528 $L$ \u4e2a\u957f\u5eca\u653e\u56fd\u5185\u98de\u673a\u73c2\u4ee5\u653e\u4e0b\u7684\u98de\u673a\u6570\u91cf\uff0c\u5269\u4e0b $n-L$ \u653e\u56fd\u5916\u98de\u673a\u73c2\u4ee5\u653e\u4e0b\u7684\u98de\u673a\u6570\u91cf\uff0c\u5e76\u4e14\u679a\u4e3e\u8fd9\u4e2a $L$\uff0c\u6211\u4eec\u5c31\u6210\u529f**\u629b\u5f00\u4e86\u957f\u5eca\u6570\u91cf\u7684\u5e72\u6270**\uff0c\u4e0d\u662f\u5417\uff1f\n\n\u73b0\u5728\u6211\u4eec\u5c31\u662f\u8981\u6c42\u4e24\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u5b50\u95ee\u9898\uff1a\u6709 $m_{0/1}$ \u67b6\u98de\u673a\uff0c\u5230\u8fbe\u548c\u79bb\u5f00\u7684\u65f6\u95f4\u5206\u522b\u4e3a $arr_i,lea_i$\uff0c\u6c42\u5f53\u6709 $1 - n$ \u4e2a\u957f\u5eca\u65f6\u5206\u522b\u80fd\u653e\u4e0b\u7684\u98de\u673a\u6570\u91cf $sum$\u3002\n\n\u8fdb\u4e00\u6b65\u601d\u8003\uff1a\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86 $1-(L-1)$ \u7684 $sum$\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u667e\u90a3\u4e0d\u7ba1\u5427\uff1f\u80af\u5b9a\u662f\u6709\u7528\u7684\uff0c\u4e0d\u7136\u6211\u4eec\u8fd8\u5f97\u66b4\u529b $O(n)$ \u505a\u4e00\u904d\u3002\n\n\u7ecf\u8fc7~~\u591a\u6b21\u8bd5\u9a8c~~\u601d\u8003\u73c2\u4ee5\u5f97\u51fa\uff1a\u8bb0 $E_i$ \u4e3a\u7528 $i$ \u4e2a\u957f\u5eca\u6240\u80fd\u505c\u653e\u7684\u98de\u673a\u7684\u96c6\u5408\uff0c\u5219\u5bf9\u4e8e $\\forall j >i$ \u6709 $E_i \\subseteq E_j$\uff0c\u8bc1\u660e\u4e5f\u4e0d\u96be\uff1a\u82e5\u5b58\u5728\u4e00\u67b6\u98de\u673a $x \\in E_i \\wedge x\\notin E_j$\uff0c\u5219\u5fc5\u7136\u5b58\u5728 $j$ \u4e2a\u4e0d\u540c\u7684 $y \\in E_j \\wedge y \\ne x$ \u4f7f\u5f97 $arr_x \\in (arr_y, lea_y]$\uff0c\u8fd9 $j$ \u4e2a $y$ \u5fc5\u7136\u4f1a\u5728 $i$ \u4e2a\u957f\u5eca\u65f6\u4f1a\u6bd4 $x$ \u5148\u9009\u5230\uff0c\u4ece\u800c\u5360\u4e86 $x$ \u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e0e $x \\in E_i$ \u77db\u76fe\u3002\n\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u4eec\u5f97\u5230\u4e86 $sum_{L-1}$ \u548c $sum_{L-1}$\uff0c \u6211\u4eec\u53ea\u9700\u8981\uff08\u4ece\u5de6\u5f80\u53f3\uff09\u627e\u5230 $S-E_{L-1}$\uff08\u4e5f\u5c31\u662f $E_{L-1}$ \u7684\u8865\u96c6\uff09\u4e2d\u88ab\u8986\u76d6\u6b21\u6570 $< L$ \u7684\u98de\u673a\u52a0\u5165 $E_{L}$ \u4e2d\uff0c\u5e76\u4e14\u628a\u5b83\u5bf9\u540e\u9762\u98de\u673a\u4ea7\u751f\u7684\u5f71\u54cd\u7b97\u4e0a\uff0c\u6700\u540e\u518d\u628a $E_{L-1}$ \u4e22\u8fdb $E_{L}$ \u91cc\uff0c\u5c31\u5f97\u5230\u4e86\u771f\u6b63\u7684 $E_L$\uff0c\u6b64\u65f6 $sum_L=|E_L|$\u3002\n\n\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u96c6\u5408 $E$\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u662f\u627e\u6700\u5de6\u8fb9\u7684\u3001\u8986\u76d6\u6b21\u6570 $< v$ \u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u8003\u8651\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u8bb0\u533a\u95f4\u6700\u5c0f\u503c $Mn$\uff0c\u82e5 $Mn_{lc} < v$ \u5219\u9012\u5f52\u5de6\u513f\u5b50\uff0c\u5426\u5219\u9012\u5f52\u53f3\u513f\u5b50\uff0c\u8fd9\u6837\u505a\u590d\u6742\u5ea6\u662f $O(\\log n)$\u3002\n\n\u8fd8\u6709\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u600e\u4e48\u628a\u53d6\u51fa\u6765\u7684\u5143\u7d20\u5bf9\u540e\u9762\u7684\u5f71\u54cd\u7b97\u4e0a\uff1f\n\n\u8fd9\u4e2a\u95ee\u9898\u672c\u8d28\u4e0a\u5c31\u662f\u8be2\u95ee $x$ \u98de\u673a\u73c2\u4ee5\u5f71\u54cd\u5230\u7684\u98de\u673a\u8303\u56f4\uff0c\u56e0\u4e3a\u73c2\u5f71\u54cd\u7684\u98de\u673a\u7684 $arr$ \u90fd\u5728\u5f53\u524d\u98de\u673a\u7684\u533a\u95f4\u91cc\uff0c\u6240\u4ee5\u9884\u5148\u79bb\u6563\u5316\uff0c\u53d6\u4e2a\u524d\u7f00\u548c\u5c31\u73c2\u4ee5\u5f97\u5230\u5176\u5f71\u54cd\u7684\u533a\u95f4\uff0c\u52a0\u4e0a\u5f71\u54cd\u5c31\u662f\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4 +1\uff0c\u5f88\u5bb9\u6613\u505a\u5230\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u6570\u6700\u591a\u53ea\u4f1a\u88ab\u53d6\u51fa\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\n\n\u7ec6\u8282\uff1a\u53d6\u51fa\u4e00\u4e2a\u6570\u540e\u8bb0\u5f97\u628a\u503c\u8d4b\u6210\u65e0\u7a77\u5927\u3002\n\n\u4ee5\u4e0b\u662f\u8003\u573a\u4ee3\u7801\uff0c\u65e0\u4fee\u3002\n\n### Code\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tchar ch=getchar();int x=0, f=1;\n\twhile(!isdigit(ch)) f=(ch=='-'?-1:f), ch=getchar();\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0', ch=getchar();\n\treturn x*f; \n}\n//\u5df2\u77e5\u4fe1\u606f\uff1a\n//1. \u82e5\u67d0\u4e00\u533a\u7684\u673a\u4f4d\u6570\u91cf\u589e\u52a0\uff0c\u8be5\u533a\u53ef\u505c\u9760\u7684\u6570\u91cf\u53ea\u589e\u4e0d\u51cf\uff0c\n//\u5e76\u4e14\u539f\u6765\u53ef\u505c\u7684\u673a\u5b50\u4e00\u5b9a\u4e0d\u52a8\uff0c\n\n//\u8003\u8651\u7528 L \u4e2a\u673a\u4f4d\u63a8\u51fa L+1\uff0c\u7ef4\u62a4\u4e00\u4e2a\u8fd8\u672a\u8fdb\u5165\u5eca\u6865\u7684\u98de\u673a\u96c6\u5408 S\uff0c\n//\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5355\u4f4d\u65f6\u95f4\u5185\u6709\u591a\u5c11\u98de\u673a\u505c\u9760\uff0c\n//\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u6b21\u626b\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u53ea\u9700\u770b\u662f\u5426\u5927\u4e8e L+1 \u5373\u53ef\n//\u5224\u65ad\u8fd9\u4e2a\u65b0\u98de\u673a\u662f\u5426\u80fd\u505c\u9760\u5728\u5eca\u6865\uff0c\u5982\u679c\u80fd\uff0c\u5219\u4ece\u96c6\u5408\u4e2d\u5220\u53bb\n//\u76f4\u63a5\u505a n^2 log n \n//\u8003\u8651\u5230\u6bcf\u4e00\u6b21\u5f97\u5230\u65b0\u98de\u673a\u90fd\u662f\u4e00\u6b21\u533a\u95f4\u52a0\uff0c\n//\u5e76\u4e14\u6211\u4eec\u8981\u627e\u7684\u662f\u9760\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u8986\u76d6\u6b21\u6570 < i \u7684\n//\u8003\u8651\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff1f \u4f3c\u4e4e\u53ef\u884c\n//\u590d\u6742\u5ea6 O(nlogn) \n//2. \u7b54\u6848\u663e\u7136\u5177\u6709\u5355\u8c03\u6027\nconst int N=1e5+5;\nint n, m1, m2, ans, sum[N][2], p[N*2], cnt, c[N*2];\npair <int, int> pl[N];\nnamespace SegmentTree{\n\t#define ls k<<1\n\t#define rs k<<1|1\n\t#define mid (l+r>>1)\n\tconst int dfg=1e9; \n\tint Mn[N*2], tag[N*2];\n\tvoid pushup(int k){Mn[k]=min(Mn[ls], Mn[rs]);}\n\tvoid upd(int k, int v){if(Mn[k]==dfg) return;Mn[k]+=v, tag[k]+=v;}\n\tvoid pushdown(int k){upd(ls, tag[k]), upd(rs, tag[k]);tag[k]=0;return ;}\n\tvoid build(int k, int l, int r){\n\t\tMn[k]=tag[k]=0;if(l==r) return ;\n\t\tbuild(ls, l, mid), build(rs, mid+1, r);\n\t}\n\tvoid modify(int k, int l, int r, int x, int y){\n\t\tif(x<=l&&r<=y) return upd(k, 1);pushdown(k);\n\t\tif(x<=mid) modify(ls, l, mid, x, y);\n\t\tif(mid<y) modify(rs, mid+1, r, x, y);\n\t\treturn pushup(k);\n\t}\n\tvoid change(int k, int l, int r, int x){\n\t\tif(l==r){Mn[k]=dfg;return ;}pushdown(k);\n\t\tif(x<=mid) change(ls, l, mid, x);\n\t\telse change(rs, mid+1, r, x);\n\t\treturn pushup(k);\n\t}\n\tint query(int k, int l, int r, int V){\n\t\tif(Mn[k]>=V) return 0;\n\t\tif(l==r) return l&r;pushdown(k);\n\t\tif(Mn[ls]<V) return query(ls, l, mid, V);\n\t\treturn query(rs, mid+1, r, V);\n\t}\n\t#undef ls\n\t#undef rs\n\t#undef mid\n} \nvoid solve(int f, int m){\n\tcnt=0;memset(c, 0, sizeof(c));\n\tfor(int i=1; i<=m; i++)\n\t\tp[++cnt]=pl[i].first=read(), p[++cnt]=pl[i].second=read();\n\tsort(p+1, p+cnt+1);\n\tcnt=unique(p+1, p+cnt+1)-p-1;\n\tfor(int i=1; i<=m; i++)\n\t\tpl[i].first=lower_bound(p+1, p+cnt+1, pl[i].first)-p,\n\t\tpl[i].second=lower_bound(p+1, p+cnt+1, pl[i].second)-p;\n\tsort(pl+1, pl+m+1);\n\tfor(int i=1; i<=m; i++)\n\t\tc[pl[i].first]++;\n\tfor(int i=1; i<=cnt; i++)\n\t\tc[i]+=c[i-1];\n\tSegmentTree :: build(1, 1, m);\n\tint nw=0;\n\tfor(int i=1; i<=n; i++){\n\t\tfor(; ;){\n\t\t\tint fin=SegmentTree :: query(1, 1, m, i);\n\t\t\tif(!fin) break;nw++;int hw=c[pl[fin].second]-c[pl[fin].first];\n\t\t\tif(hw) SegmentTree :: modify(1, 1, m, fin+1, fin+hw);\n\t\t\tSegmentTree :: change(1, 1, m, fin);\n\t\t}\n\t\tsum[i][f]=nw;\n\t}\n\treturn ;\n}\nsigned main(){\n\tfreopen(\"airport.in\", \"r\", stdin);\n\tfreopen(\"airport.out\", \"w\", stdout);\n\tn=read(), m1=read(), m2=read();\n\tsolve(0, m1);\n\tsolve(1, m2);\n\tfor(int i=0; i<=n; i++)\n\t\tans=max(ans, sum[i][0]+sum[n-i][1]);\n\tprintf(\"%d\", ans);\n\treturn 0;\n} \n```\n\n\n\n",
        "postTime": 1635001438,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "P7913 [CSP-S 2021] \u5eca\u6865\u5206\u914d"
    },
    {
        "content": "T3 \u6bd4 T1 \u6c34 ![](//\u5567.tk/tuu)\n\n## \u505a\u6cd5\n\n\u8003\u8651\u56fd\u9645\uff0c\u56fd\u5185\u822a\u73ed\u5206\u522b\u8ba1\u7b97\u3002\n\n\u7136\u540e\u518d\u8003\u8651\u4e00\u624b\u8d2a\u5fc3\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u8db3\u591f\u591a\u7684\u5eca\u6865\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5c3d\u91cf\u591a\u7684\u98de\u673a\u505c\u5728\u5c3d\u91cf\u9760\u524d\u7684\u5730\u65b9\uff0c\u8fd9\u6837\u4e00\u4e2a\u524d\u7f00\u548c\u5c31\u53ef\u5f97\u5230\u5f53\u67d0\u4e00\u533a\u5206\u914d\u4e86 $p$ \u4e2a\u5eca\u6865\u7684\u5730\u65b9\u4e86\u3002\n\n\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u8fd9\u73a9\u610f\u3002\n\n$a_i,b_i\\le 10^8$\uff0c\u4e2d\u95f4\u5927\u90e8\u5206\u6ca1\u5565\u7528\uff0c\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u53d8\u6210 $2\\times 10^5$ \u7684\u6570\u636e\u8303\u56f4\u3002\n\n\u7528\u4e00\u4e2a `priority_queue` \u7ef4\u62a4\u5f53\u524d\u53ef\u7528\u7684\u5eca\u6865\u7f16\u53f7\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u7ef4\u62a4\u5f53\u524d\u98de\u673a\u5982\u679c\u505c\u9760\u5728\u5eca\u6865\u4e0a\u7684\u8bdd\u662f\u51e0\u53f7\u3002\n\n**\u4ee5\u4e0b\u5047\u8bbe\u8fd9\u4e2a\u4f18\u5148\u961f\u5217\u662f\u5c0f\u6839\u5806\u3002**\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u5982\u679c\u98de\u673a\u98de\u5165\uff0c\u53d6\u51fa\u961f\u9996\uff0c\u8ba9\u8fd9\u67b6\u98de\u673a\u505c\u9760\u3002\n\n\u5982\u679c\u98de\u673a\u98de\u51fa\uff0c\u627e\u5230\u8fd9\u67b6\u98de\u673a\u505c\u9760\u7684\u5eca\u6865\u7136\u540e\u538b\u5165\u3002\n\n\u505a\u4e24\u904d\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{n\\log n}$\u3002\n\n\u5c0f\u4e11\uff0c\u597d\u50cf\u524d\u7f00\u548c\u7684\u65f6\u5019\u8981\u6c42\u5230 $10^5$\u3002\n\n## \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n#define N 100009\n#define INF 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\ninline ll read(){\n    ll x=0,f=1;char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nll n,m[2],rk[2][2*N],in[2][2*N],out[2][2*N],nw[2][2*N],ans[2][N],ANS;\nstruct node2{\n\tll id,k;\n\tbool operator<(const node2&x)const{return k<x.k;}\n} q[2*N];\nstruct node{\n\tll l,r;\n\tbool operator<(const node&x)const{return l<x.l;}\n} a[2][N];\npriority_queue<ll> qu[2];\nvoid solve(ll x){\n\tfor(int i=1;i<=m[x];i++) qu[x].push(-i);\n\tfor(int i=1;i<=2*m[x];i++){\n\t\tif(in[x][i]){\n\t\t\tll u=-qu[x].top();qu[x].pop();\n\t\t\tnw[x][in[x][i]]=u;\n\t\t\tans[x][u]++;\n\t\t}\n\t\telse qu[x].push(-nw[x][out[x][i]]),nw[x][out[x][i]]=0;\n\t}\n\tfor(int i=1;i<=100000;i++) ans[x][i]+=ans[x][i-1];\n}\nint main(){\n\t//freopen(\"airport.in\",\"r\",stdin);\n\t//freopen(\"airport.out\",\"w\",stdout);\n\tn=read(),m[0]=read(),m[1]=read();\n\tfor(int i=1;i<=m[0];i++) q[2*i-1].k=read(),q[2*i-1].id=2*i-1,q[2*i].k=read(),q[2*i].id=2*i;\n\tsort(q+1,q+2*m[0]+1);\n\tfor(int i=1;i<=2*m[0];i++) rk[0][q[i].id]=i;\n\tfor(int i=1;i<=m[0];i++) a[0][i].l=rk[0][2*i-1],a[0][i].r=rk[0][2*i],in[0][a[0][i].l]=i,out[0][a[0][i].r]=i;\n\tfor(int i=1;i<=m[1];i++) q[2*i-1].k=read(),q[2*i-1].id=2*i-1,q[2*i].k=read(),q[2*i].id=2*i;\n\tsort(q+1,q+2*m[1]+1);\n\tfor(int i=1;i<=2*m[1];i++) rk[1][q[i].id]=i;\n\tfor(int i=1;i<=m[1];i++) a[1][i].l=rk[1][2*i-1],a[1][i].r=rk[1][2*i],in[1][a[1][i].l]=i,out[1][a[1][i].r]=i;\n\tsolve(0),solve(1);\n\tfor(int i=0;i<=n;i++) ANS=max(ANS,ans[0][i]+ans[1][n-i]);\n\tprintf(\"%lld\\n\",ANS);\n\treturn 0;\n}\n\n\n```",
        "postTime": 1635002995,
        "uid": 278629,
        "name": "Rubidium_Chloride",
        "ccfLevel": 7,
        "title": "\u4f60\u786e\u5b9a\u8fd9\u9898\u4e0d\u662f\u771f\u6b63\u7684 T2\uff1f\uff1f\uff1f"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u7bc7\u4ee3\u7801\u6bd4\u8f83\u957f\u7684\u9898\u89e3\uff0c\u4f46\u662f\u601d\u8def\u5f88\u7b80\u5355\u3002\n\n### \u9898\u610f\n> \u7ed9\u5b9a $n$ \u548c\u4e24\u6761\u6570\u8f74\uff0c\u9700\u8981\u5c06\u7ed9\u5b9a\u7684 $m_1$ \u6761\u7ebf\u6bb5\u9009\u4e00\u4e9b\u653e\u5728\u6570\u8f74\u4e00\u4e0a\uff0c\u5c06\u7ed9\u5b9a\u7684 $m_2$ \u6761\u7ebf\u6bb5\u9009\u4e00\u4e9b\u653e\u5728\u6570\u8f74\u4e8c\u4e0a\uff0c\u8981\u6c42\u662f\u7b2c\u4e00\u6761\u6570\u8f74\u4e0a\u4efb\u610f\u4e00\u4e2a\u70b9\u81f3\u591a\u88ab\u8986\u76d6 $k$ \u6b21\uff0c\u7b2c\u4e8c\u6761\u6570\u8f74\u4e0a\u4efb\u610f\u4e00\u4e2a\u70b9\u81f3\u591a\u88ab\u8986\u76d6 $(n-k)$ \u6b21\uff0c\u4f60\u9700\u8981\u9009\u5b9a\u4e00\u4e2a $0\\le k\\le n$ \u4f7f\u653e\u7f6e\u7684\u7ebf\u6bb5\u603b\u6570\u6700\u5927\uff0c\u53ea\u9700\u8f93\u51fa\u8fd9\u4e2a\u6700\u5927\u503c\u3002\n> \n> $1\\le n,m_1+m_2\\le 10^5$\uff0c$2(m_1+m_2)$ \u4e2a\u7ebf\u6bb5\u7684\u7aef\u70b9\u4e92\u4e0d\u76f8\u540c\u3002\n\n### \u9898\u89e3\n\u7531\u4e8e\u6709\u201c\u5148\u5230\u5148\u5f97\u201d\u7684\u539f\u5219\uff0c\u5728 $k=k_0$ \u65f6\u9009\u7684\u7ebf\u6bb5\u5728 $k=k_0+1$ \u65f6\u4e5f\u4e00\u5b9a\u88ab\u9009\u3002\u5b9e\u5728\u4e0d\u884c\uff0c\u901a\u8fc7\u5904\u7406\u5927\u6837\u4f8b\u627e\u89c4\u5f8b\u6253\u5370\u51fa\u5982\u3010\u6837\u4f8b\u89e3\u91ca#1\u3011\u90a3\u6837\u7684\u8868\u4f60\u4e5f\u4f1a\u53d1\u73b0\u5b83\u662f\u4f1a\u5f62\u6210\u201c\u949f\u4e73\u77f3\u201d\u6216\u201c\u77f3\u7b0b\u201d\u72b6\uff0c\u5f97\u5230\u540c\u6837\u7684\u7ed3\u8bba\u3002\n\n\u56e0\u6b64\u8003\u8651 DP\u3002\u8bbe $f1_i$ \u8868\u793a\u6570\u8f74\u4e00\u4e0a\u9650\u5236\u81f3\u591a\u4e3a $i$ \u65f6\u7684\u8986\u76d6\u7ebf\u6bb5\u6761\u6570\uff0c\u90a3\u4e48 $f1_i=f1_{i-1}+cnt1_i$\uff0c\u5176\u4e2d $cnt1_i$ \u662f\u9650\u5236\u4ece $i-1$ \u5230 $i$ \u65f6\u65b0\u589e\u7684\u7ebf\u6bb5\u6761\u6570\u3002\u4e3b\u8981\u77db\u76fe\u8f6c\u4e3a\u7b97 $cnt1_i$\u3002\u8003\u8651\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u9009\u7684\u8fd9\u4e2a\u5168\u8fc7\u7a0b\u3002\u9996\u5148 $i=1$ \u65f6\u7b2c\u4e00\u6761\u7ebf\u6bb5\u4e00\u5b9a\u4f1a\u9009\uff0c\u7136\u540e\u5c31\u8981\u9009\u4e00\u4e2a\u5de6\u7aef\u70b9 $>r_1$\uff08$l_j,r_j$ \u8868\u793a\u7ebf\u6bb5 $j$ \u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u4e0b\u540c\uff09\u7684 $j$\uff0c\u8df3\u5230\u90a3\u91cc\u53bb\uff0c\u7136\u540e\u518d\u9009\u4e00\u4e2a $l_k>r_j$\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u4e00\u76f4\u5230\u6211\u4eec\u65e0\u6cd5\u53ef\u8df3\u4e3a\u6b62\u3002\u63a5\u7740\u6211\u4eec\u5f00\u59cb\u7b2c\u4e8c\u8f6e\uff0c\u9996\u5148\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u88ab\u9009\u7684\u4f5c\u4e3a\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7136\u540e\u5c31\u50cf\u7b2c\u4e00\u8f6e\u90a3\u6837\u505a\uff0c\u53ea\u4e0d\u8fc7\u9009\u8fc7\u7684\u7ebf\u6bb5\u4e0d\u80fd\u518d\u9009\u4e86\u3002\u6211\u4eec\u8003\u8651\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u6700\u5927\u503c\uff0c\u6bcf\u6b21\u8df3\u7684\u65f6\u5019\u4f7f\u7528\u4e8c\u5206\u7684\u65b9\u6cd5\u627e\u5230\u5e94\u8be5\u8df3\u5f80\u7684\u4f4d\u7f6e\uff0c\u5373\u5982\u679c $\\max_l[p,mid]>r_p$\uff08$p$ \u4e3a\u73b0\u5728\u7684\u4f4d\u7f6e\uff09\u5c31\u628a\u53f3\u7aef\u70b9\u5de6\u8c03\uff0c\u5426\u5219\u5de6\u7aef\u70b9\u53f3\u8c03\uff0c\u6700\u540e\u53f3\u7aef\u70b9\u5c31\u662f\u8981\u8df3\u5230\u7684\u4f4d\u7f6e\u3002\u6bcf\u4e00\u6b21\u9009\u5b9a\u4e00\u6761\u7ebf\u6bb5\u5c31\u5c06\u7ebf\u6bb5\u6811\u4e2d\u5b83\u7684\u503c\u7f6e\u4e3a $0$\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6b63\u786e\u7684\u8df3\u8dc3\u3002\u5355\u6b21\u8df3\u8dc3\u590d\u6742\u5ea6 $O(\\log^2n)$\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u81f3\u591a\u9009\u4e00\u6b21\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c[\u53ef\u4ee5\u901a\u8fc7](https://www.luogu.com.cn/record/60744865)\u3002\n\n\u4e0a\u9762\u8bb2\u89e3\u7684\u662f $cnt_1$ \u7684\u6c42\u6cd5\uff0c\u663e\u7136 $cnt_2,f_2$ \u7684\u6c42\u6cd5\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002\u6211\u4eec\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f $\\max\\limits_{i=0}^nf1_i+f2_{n-i}$\u3002\n\n```cpp\n//\u4ee3\u7801\u6613\u61c2\u65e0\u6ce8\u91ca\n#include <bits/stdc++.h>\n//#define int long long \n//typedef long long ll;\n#define pii pair<int,int>\nusing namespace std;\ninline int read(){\n\tregister int x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn x*f;\n}\nconst int N=1e5+5;\nint n,ma,mb,ans,T;\npii a[N],b[N];\nint t[N<<2],cnta[N],cntb[N],f1[N],f2[N];\nbool bk[N];\nvoid pushup(int k){\n\tt[k]=max(t[k<<1],t[k<<1|1]);\n}\nvoid build1(int l,int r,int k){\n\tif(l==r){\n\t\tt[k]=a[l].first;\n\t\treturn;\n\t}int mid=l+r>>1;\n\tbuild1(l,mid,k<<1),build1(mid+1,r,k<<1|1);\n\tpushup(k);\n}\nvoid build2(int l,int r,int k){\n\tif(l==r){\n\t\tt[k]=b[l].first;\n\t\treturn;\n\t}int mid=l+r>>1;\n\tbuild2(l,mid,k<<1),build2(mid+1,r,k<<1|1);\n\tpushup(k);\n}\nvoid chg(int p,int v,int l,int r,int k){\n\tif(l==r){\n\t\tt[k]=v;return;\n\t}int mid=l+r>>1;\n\tif(p<=mid)chg(p,v,l,mid,k<<1);\n\telse chg(p,v,mid+1,r,k<<1|1);\n\tpushup(k);\n}\nint ask(int L,int R,int l,int r,int k){\n\tif(L<=l&&r<=R)return t[k];\n\tint mid=l+r>>1,ans=0;\n\tif(L<=mid)ans=max(ans,ask(L,R,l,mid,k<<1));\n\tif(R>mid) ans=max(ans,ask(L,R,mid+1,r,k<<1|1));\n\treturn ans;\n}\nint main(){\n\t//freopen(\"airport.in\",\"r\",stdin);\n\t//freopen(\"airport.out\",\"w\",stdout);\n\tn=read(),ma=read(),mb=read();\n\tfor(int i=1;i<=ma;i++)a[i].first=read(),a[i].second=read();\n\tfor(int i=1;i<=mb;i++)b[i].first=read(),b[i].second=read();\n\tsort(a+1,a+ma+1),sort(b+1,b+mb+1);\n\tbuild1(1,ma,1);//for(int k=1;k<=ma;k++)printf(\"(%d)\",ask(1,k,1,ma,1));\n\tfor(int i=1;i<=ma;i++)if(!bk[i]){\n\t\tT++;\n\t\tfor(int j=i;j<=ma;){//cout<<j<<','<<a[j].second<<' ';\n\t\t\tcnta[T]++;bk[j]=1;\n\t\t\tchg(j,0,1,ma,1);\n\t\t\tint L=j,R=ma+1,mid;\n\t\t\t\n\t\t\twhile(L<R-1){\n\t\t\t\tmid=L+R>>1;\n\t\t\t\tif(ask(j,mid,1,ma,1)>=a[j].second)R=mid;\n\t\t\t\telse L=mid;\n\t\t\t}\n\t\t\tif(R==ma+1)break;\n\t\t\tj=R;\n\t\t}//puts(\"\");\n\t}T=0;build2(1,mb,1);memset(bk,0,sizeof(bk));\n\tfor(int i=1;i<=mb;i++)if(!bk[i]){\n\t\tT++;\n\t\tfor(int j=i;j<=mb;){\n\t\t\tcntb[T]++;bk[j]=1;\n\t\t\tchg(j,0,1,mb,1);\n\t\t\tint L=j,R=mb+1,mid;\n\t\t\twhile(L<R-1){\n\t\t\t\tmid=L+R>>1;\n\t\t\t\tif(ask(j,mid,1,mb,1)>=b[j].second)R=mid;\n\t\t\t\telse L=mid;\n\t\t\t}\n\t\t\tif(R==mb+1)break;\n\t\t\tj=R;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)f1[i]=f1[i-1]+cnta[i];\n\tfor(int i=1;i<=n;i++)f2[i]=f2[i-1]+cntb[i];\n\tfor(int i=0;i<=n;i++)ans=max(ans,f1[i]+f2[n-i]);\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1635000008,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "[CSP-S 2021] \u5eca\u6865\u5206\u914d"
    }
]