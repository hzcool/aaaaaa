[
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P4196)\n\n**\u5efa\u8bae\u653e\u5927 $150\\%$ \u98df\u7528 ~~\uff08\u5426\u5219\u770b\u4e0d\u6e05\u522b\u602a\u6211\uff09~~**\n\n**\u849f\u84bb\u7b2c\u4e00\u7bc7\u7b97\u4e3a\u8be6\u7ec6\u7684\u9898\u89e3\uff0c\u8bb2\u5f97\u4e0d\u591f\u6e05\u695a\u7684\u8fd8\u671b\u591a\u591a\u5305\u6db5\u3002**\n\n\u9996\u5148\uff0c\u770b\u770b\u9898\u76ee\u540d\u79f0\uff0c\u5c31\u80fd\u77e5\u9053\u672c\u9898\u662f\u4e00\u9053\u534a\u5e73\u9762\u4ea4\u7684\u6a21\u677f\u9898\u3002\n\n## \u4e00\u3001\u5b9a\u4e49\n\n### 1\u3001\u534a\u5e73\u9762\n\n\u4e00\u6761\u76f4\u7ebf\u548c\u76f4\u7ebf\u7684\u4e00\u4fa7\u3002\u534a\u5e73\u9762\u662f\u4e00\u4e2a\u70b9\u96c6\uff0c\u56e0\u6b64\u662f\u4e00\u6761\u76f4\u7ebf\u548c\u76f4\u7ebf\u7684\u4e00\u4fa7\u6784\u6210\u7684\u70b9\u96c6\u3002\u5f53\u5305\u542b\u76f4\u7ebf\u65f6\uff0c\u79f0\u4e3a\u95ed\u534a\u5e73\u9762\uff1b\u5f53\u4e0d\u5305\u542b\u76f4\u7ebf\u65f6\uff0c\u79f0\u4e3a\u5f00\u534a\u5e73\u9762\u3002\n\n\u89e3\u6790\u5f0f\u4e00\u822c\u4e3a $Ax+By+C\\ge0$ \u6216 $Ax+By+C>0$\u3002\n\n\u5982\u4e0b\u56fe\u9ec4\u8272\u90e8\u5206\u5c31\u662f\u89e3\u6790\u5f0f\u4e3a $Ax+By+C>0$ \u7684\u534a\u5e73\u9762\u3002\n\n![](https://oi-wiki.org/geometry/images/hpi1.PNG)\n\n### 2\u3001\u534a\u5e73\u9762\u4ea4\n\n\u51e0\u4e2a\u534a\u5e73\u9762\u7684\u4ea4\u96c6\u3002\u56e0\u4e3a\u534a\u5e73\u9762\u662f\u70b9\u96c6\uff0c\u6240\u4ee5\u534a\u5e73\u9762\u4ea4\u4e5f\u662f\u70b9\u96c6\u3002\n\n## \u4e8c\u3001\u89e3\u6cd5\uff08S&I \u7b97\u6cd5\uff09\n\n### 1\u3001\u524d\u7f6e\n\n#### \uff08\u4e00\uff09\u76f4\u7ebf\n\n\u8fd9\u91cc\u7528\u5411\u91cf\u6765\u8868\u793a\u76f4\u7ebf\uff0c\u534a\u5e73\u9762\u4e3a\u5411\u91cf\u7684\u5de6\u4fa7\u90e8\u5206\u3002\n\n#### \uff08\u4e8c\uff09\u6c42\u4ea4\u70b9\n\n\u5bf9\u4e8e $\\vec{a}(start_{\\vec{a}},end_{\\vec{a}})$ \u548c $\\vec{b}(start_{\\vec{b}},end_{\\vec{b}})$ \u4e24\u4e2a\u5411\u91cf\u8868\u793a\u7684\u76f4\u7ebf\u7684\u4ea4\u70b9 O\uff0c\u6709\uff1a\n$$x_O=(S_1\\times x_{start_{\\vec{b}}}-S_2\\times x_{end_{\\vec{b}}})/(S_1-S_2)$$\n$$y_O=(S_1\\times y_{start_{\\vec{b}}}-S_2\\times y_{end_{\\vec{b}}})/(S_1-S_2)$$\n\n\u5176\u4e2d $S_1,S_2$ \u5206\u522b\u4e3a $(end_{\\vec{b}}-start_{\\vec{a}})\\times(end_{\\vec{a}}-start_{\\vec{a}})$ \u548c $(start_{\\vec{b}}-start_{\\vec{a}})\\times(end_{\\vec{a}}-start_{\\vec{a}})$\uff08\u5411\u91cf\u53c9\u79ef\uff09\u3002\n\n##### \u8bc1\u660e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0kq4bohi.png)\n\n\u7531[\u5171\u8fb9\u5b9a\u7406](https://baike.baidu.com/item/%E5%85%B1%E8%BE%B9%E5%AE%9A%E7%90%86/5508944?fr=aladdin)\u53ef\u5f97\uff1a$\\dfrac{end_{\\vec{b}}\\,O}{O\\,start_{\\vec{b}}}=\\dfrac{S_1}{S_2}$\uff08\u6709\u5411\u7ebf\u6bb5\u957f\u548c\u6709\u5411\u9762\u79ef\uff09\u3002\u7136\u540e\u53c8\u56e0\u4e3a $S_1,S_2$ \u662f\u7528\u5411\u91cf\u53c9\u79ef\u7b97\u7684\u6240\u4ee5\u6ee1\u8db3\u6761\u4ef6\u3002\u5f97\u8bc1\u3002\n\n#### \uff08\u4e09\uff09\u51f8\u5305\n\n\u5982\u679c\u60a8\u4e0d\u4f1a\u51f8\u5305\u7684\u8bdd\uff0c\u8fd9\u8fb9\u5efa\u8bae\u51fa\u95e8\u5de6\u8f6c[\u4e8c\u7ef4\u51f8\u5305](https://www.luogu.com.cn/problem/P2742)\u3002\n\n#### \uff08\u56db\uff09\u6781\u89d2\n\n\u6781\u89d2\u5c31\u662f\u5411\u91cf\u4e0e $x$ \u8f74\u7684\u5939\u89d2\uff08\u6709\u5411\uff09\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u8d77\u70b9\u548c\u7ec8\u70b9\u5206\u522b\u4e3a $A(x_A,y_A)$ \u548c $B(x_b,y_b)$ \u7684\u5411\u91cf\u6240\u4ee3\u8868\u7684\u76f4\u7ebf\uff0c\u5b83\u7684\u6781\u89d2\u5728 c++ \u91cc\u8868\u793a\u4e3a\uff1a\n```cpp\natan2(y[B]-y[A],x[B]-x[A])\n```\n\u5176\u5b9e\u5c31\u662f\u659c\u7387\u3002\n\n### 2\u3001\u7b97\u6cd5\u5b9e\u73b0\n\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u6309\u6781\u89d2\u7ed9\u6240\u6709\u5411\u91cf\u6392\u5e8f\uff0c\u6781\u89d2\u5c0f\u7684\u6392\u5728\u524d\u9762\uff0c\u5982\u679c\u6781\u89d2\u76f8\u540c\u3002\u56e0\u4e3a\u6211\u4eec\u6c42\u7684\u662f\u5411\u91cf\u5de6\u4fa7\u7684\u534a\u5e73\u9762\u7684\u4ea4\u96c6\uff0c\u6240\u4ee5\u4f18\u5148\u9009\u62e9\u9760\u5de6\u7684\u534a\u5e73\u9762\uff0c\u7528\u5411\u91cf\u53c9\u79ef\u5224\u65ad\u5373\u53ef\u3002\u6392\u5e8f\u540e\uff0c\u4ee5\u6781\u89d2\u4e3a\u6807\u51c6\u53bb\u4e0b\u91cd\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\u3002\u53cc\u7aef\u961f\u5217\u7528\u6765\u5b58\u50a8\u76ee\u524d\u6240\u6709\u7528\u6765\u8868\u793a\u534a\u5e73\u9762\u4ea4\u7684\u8fb9\u7684\u5411\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5411\u91cf\uff0c\u6211\u4eec\u5148\u5bf9\u5176\u68c0\u67e5\uff0c\u5982\u679c\u53cc\u7aef\u961f\u5217\u91cc\u540e\u4e24\u6761\u5411\u91cf\u7684\u4ea4\u70b9\u5728\u8fd9\u6761\u5411\u91cf\u7684\u53f3\u4fa7\u3002\u90a3\u4e48\uff0c\u5f39\u51fa\u53cc\u7aef\u961f\u5217\u7684\u6700\u540e\u4e00\u6761\u5411\u91cf\uff0c\u76f4\u5230\u6ee1\u8db3\u8981\u6c42\u4e3a\u6b62\u3002\u63a5\u4e0b\u6765\uff0c\u5bf9\u53cc\u7aef\u961f\u5217\u524d\u9762\u7684\u5411\u91cf\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\u3002\u518d\u628a\u5f53\u524d\u5411\u91cf\u63d2\u5165\u53cc\u7aef\u961f\u5217\u3002\n\n\u6700\u540e\uff0c\u5bf9\u53cc\u7aef\u961f\u5217\u5185\u90e8\u7684\u5411\u91cf\u8fdb\u884c\u68c0\u9a8c\uff0c\u5f39\u51fa\u4e0d\u5408\u6cd5\u7684\u5411\u91cf\u3002\u518d\u6c42\u9762\u79ef\u5c31\u884c\u4e86\u3002\n\n## \u4e09\u3001\u4ee3\u7801\n\n```cpp\n  #include<bits/stdc++.h>\n  #define db double\n  using namespace std;\n  int n,cnt,tot,top,back;\n  db ans;\n  const db eps=1e-7;//\u56e0\u4e3a\u662f\u5b9e\u6570\u8303\u56f4\uff0c\u6709\u7cbe\u5ea6\u8bef\u5dee\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7528\u201c==\u201d\uff0c\u800c\u662f\u53d6\u7edd\u5bf9\u503c\u548c\u4e00\u4e2a\u5f88\u5c0f\u7684\u503c\u8fdb\u884c\u6bd4\u5bf9\u3002\n  struct node{\n      db x,y;\n      node(){}\n      node(db _x,db _y){x=_x,y=_y;}\n      bool operator<(const node &t)const{return y<t.y||(y==t.y&&x<t.x);}\n      node operator-(node &t){return node(x-t.x,y-t.y);}\n      bool operator==(const node &t)const{return x==t.x&&y==t.y;}\n  }_P,N[55],Ans[505];//\u5b58\u50a8\u70b9\n  db CPr(node A,node B){return A.x*B.y-A.y*B.x;}\n  db CPr(node A,node B,node C){return CPr(B-A,C-A);}//\u5411\u91cf\u53c9\u79ef\n  struct edge{\n      node start,end;\n      db angle;\n      edge(){}\n      edge(node A,node B){\n          start=A,end=B;//\u8d77\u70b9\u548c\u7ec8\u70b9\n          angle=atan2((B-A).y,(B-A).x);//\u6781\u89d2\n      }\n      bool operator<(const edge &t)const{\n          if(fabs(angle-t.angle)<=eps)return CPr(start,t.start,t.end)>0;//\u6781\u89d2\u76f8\u540c\u6bd4\u4f4d\u7f6e\n          return angle<t.angle;//\u5426\u5219\u6bd4\u6781\u89d2\n      }\n  }e[505],dq[505];//\u5b58\u50a8\u5411\u91cf\n  db S1,S2;\n  node getnode(edge A,edge B){\n      S1=CPr(A.start,B.end,A.end);\n      S2=CPr(A.start,B.start,A.end);\n      return node((S1*B.start.x-S2*B.end.x)/(S1-S2),(S1*B.start.y-S2*B.end.y)/(S1-S2));\n  }\n  bool ch(edge A,edge B,edge C){\n      _P=getnode(B,C);\n      return CPr(_P,A.start,A.end)<0;\n  }//\u6c42\u4ea4\u70b9\n  signed main()\n  {\n      scanf(\"%d\",&n);\n      for(int i=1,m;i<=n;i++){\n          scanf(\"%d\",&m);\n          for(int j=1;j<=m;j++)scanf(\"%lf%lf\",&N[j].x,&N[j].y);\n          for(int j=1;j<=m;j++)e[++cnt]=edge(N[j],N[j%m+1]);//\u8bfb\u70b9\uff0c\u6784\u5efa\u5411\u91cf\n      }\n      sort(e+1,e+cnt+1);//\u6392\u5e8f\n      tot=1;\n      for(int i=2;i<=cnt;i++)if(fabs(e[i].angle-e[i-1].angle)>eps)e[++tot]=e[i];//\u53bb\u91cd\n      top=2,back=1;\n      dq[1]=e[1];\n      dq[2]=e[2];\n      for(int i=3;i<=tot;i++){\n          while(back<top&&ch(e[i],dq[top],dq[top-1]))top--;\n          while(back<top&&ch(e[i],dq[back],dq[back+1]))back++;\n          dq[++top]=e[i];//\u589e\u91cf\n      }\n      while(back<top&&ch(dq[back],dq[top-1],dq[top]))top--;\n      while(back<top&&ch(dq[top],dq[back],dq[back+1]))back++;//\u5f39\u51fa\u4e0d\u5408\u6cd5\u7684\u5411\u91cf\n      for(int i=back;i<top;i++)Ans[i-back+1]=getnode(dq[i],dq[i+1]);//\u6c42\u4ea4\u70b9\n      if(top-back>1)Ans[top-back+1]=getnode(dq[top],dq[back]);\n      tot=top-back+1;\n      for(int i=1;i<=tot;i++)ans+=CPr(Ans[i],Ans[i%tot+1]);//\u7b97\u9762\u79ef\n      printf(\"%.3lf\",fabs(ans)/2);\n      return 0;\n  }\n```",
        "postTime": 1649482345,
        "uid": 428358,
        "name": "cqbztzl",
        "ccfLevel": 5,
        "title": "P4196\u9898\u89e3"
    },
    {
        "content": "# \u534a\u5e73\u9762\u4ea4\u6a21\u677f\u9898\n\n\u53ef\u4ee5\u5efa\u8bae\u6539\u6210\u3010\u6a21\u677f\u3011\u534a\u5e73\u9762\u4ea4\n\n### \u534a\u5e73\u9762\u4ea4\u662f\u4ec0\u4e48\n\u611f\u89c9\u524d\u9762\u5927\u5bb6\u8bb2\u5f97\u90fd\u590d\u6742\u4e86\uff0c\u8ba9\u8bfb\u8005\u8bef\u4ee5\u4e3a\u534a\u5e73\u9762\u4ea4\u662f\u4e00\u4e2a\u5f88\u96be\u5b9e\u73b0\u7684\u7b97\u6cd5\n\n\u636e\u6211\u6240\u4e86\u89e3\u7684\u6765\u770b\uff0c\u5c31\u662f\u6c42\u82e5\u5e72\u534a\u5e73\u9762\u7684\u4ea4\uff0c\u672c\u9898\u4f53\u73b0\u5728\u591a\u8fb9\u5f62\u7684\u6bcf\u6761\u8fb9\u5206\u5272\u7684\u4e24\u4e2a\u534a\u5e73\u9762\u7684\u4ea4\u5e73\u9762\n\n### \u600e\u4e48\u5b9e\u73b0\n\u5171\u5206\u4e09\u4e2a\u90e8\u5206\uff1a\n\n- \u8ba1\u7b97\u4e24\u4e2a\u76f4\u7ebf\u7684\u4ea4\u70b9\uff08Add\u51fd\u6570\uff0c\u7528\u5b9a\u6bd4\u5206\u70b9\u5b9e\u73b0\uff09\n- \u8ba1\u7b97\u9762\u79ef\uff08CalcS\u51fd\u6570\uff0c\u7528\u53c9\u79ef\u7684\u51e0\u4f55\u610f\u4e49\u5b9e\u73b0\uff09\n- \u6c42\u5df2\u6709\u5e73\u9762\u4e0e\u65b0\u7684\u4e00\u4e2a\u534a\u5e73\u9762\u7684\u4ea4\uff08Cut\uff0c\u753b\u753b\u56fe\u53ef\u4ee5\u77e5\u9053\uff09\n\n\u5982\u679c\u7406\u89e3\u8d77\u6765\u6709\u95ee\u9898\u53ef\u4ee5\u518d\u770b\u770b[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/xzyxzy/p/10033130.html)\n\n\u5982\u679c\u5b9e\u73b0\u8d77\u6765\u6709\u95ee\u9898\u53ef\u4ee5\u53c2\u7167\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nconst int N=510;\nstruct Node\n{\n\tdouble x,y;\n\tNode operator - (const Node A) {return (Node){x-A.x,y-A.y};}\n\tNode operator + (const Node A) {return (Node){x+A.x,y+A.y};}\n\tNode operator * (double t) {return (Node){x*t,y*t};}\n\tdouble crs(Node A) {return x*A.y-y*A.x;}\n}A[N],B[N],C[N];\nint n,m,tt,node;\nvoid Add(Node a1,Node a2,Node b1,Node b2)\n{\n\tNode a=a2-a1,b=b2-b1,c=b1-a1;\n\tdouble t=b.crs(c)/b.crs(a);\n\tC[++tt]=a1+a*t;\n}\nvoid Cut(Node a,Node b)\n{\n\ttt=0;A[node+1]=A[1];\n\tfor(int i=1;i<=node;i++)\n\t\tif((a-A[i]).crs(b-A[i])>=0)\n\t\t{\n\t\t\tC[++tt]=A[i];\n\t\t\tif((a-A[i+1]).crs(b-A[i+1])<0)\n\t\t\t\tAdd(A[i],A[i+1],a,b);\n\t\t}\n\t\telse if((a-A[i+1]).crs(b-A[i+1])>=0)\n\t\t\tAdd(A[i],A[i+1],a,b);\n\tfor(int i=1;i<=tt;i++) A[i]=C[i];\n\tnode=tt;\n}\ndouble CalcS()\n{\n\tdouble res=0;\n\tfor(int i=2;i<node;i++) res+=(A[i]-A[1]).crs(A[i+1]-A[1]);\n\treturn res/2;\n}\nint main()\n{\n\tcin>>n>>m;node=m;n--;\n\tfor(int i=1;i<=m;i++) cin>>A[i].x>>A[i].y;\n\twhile(n--)\n\t{\n\t\tcin>>m>>B[1].x>>B[1].y;B[m+1]=B[1];\n\t\tfor(int i=2;i<=m;i++) cin>>B[i].x>>B[i].y;\n\t\tfor(int i=1;i<=m;i++) Cut(B[i],B[i+1]);\n\t}\n\treturn printf(\"%.3f\\n\",CalcS()),0;\n}\n\n```",
        "postTime": 1543482694,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4196 \u3010[CQOI2006]\u51f8\u591a\u8fb9\u5f62\u3011"
    },
    {
        "content": "\u6c42\u534a\u5e73\u9762\u4ea4\u7684\u6a21\u677f\u9898\n\n\u663e\u7136\u51f8\u591a\u8fb9\u5f62\u7684\u4ea4\u5c31\u662f\u6240\u6709\u6309\u9006\u65f6\u9488\u65b9\u5411\u7684\u591a\u8fb9\u5f62\u7684\u8fb9\u7684\u5de6\u534a\u5e73\u9762\u7684\u4ea4\u96c6\n\n\u5927\u81f4\u7684\u601d\u8def\u662f\uff0c\u5148\u5c06\u6240\u6709\u8fb9\u6309\u6781\u89d2\u6392\u5e8f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u6bcf\u6b21\u5f53\u961f\u9996\u6216\u8005\u961f\u5c3e\u7684\u8fb9\u4e0e\u534a\u5e73\u9762\u4ea4\u5df2\u7ecf\u65e0\u4ea4\u70b9\u65f6\uff0c\u5c31\u5c06\u5176\u8e22\u51fa\uff0c\u4fdd\u8bc1\u5269\u4e0b\u7684\u90fd\u662f\u4e0e\u534a\u5e73\u9762\u4ea4\u6709\u5173\u7684\u8fb9\uff0c\u5e76\u4e14\u5bf9\u4e8e\u591a\u4e2a\u5e73\u884c\u7684\u5411\u91cf\uff0c\u53ef\u4ee5\u5c06\u66f4\u9760**\u5de6**\u7684\u5411\u91cf\u4fdd\u7559\uff0c\u5176\u4ed6\u7684\u5220\u9664\uff0c\u7136\u540e\u6c42\u51fa\u5176\u4ea4\u70b9\u540e\u8ba1\u7b97\u9762\u79ef\u5373\u53ef\n\n\u7136\u540e\u4e00\u4e9b\u89e3\u91ca\u5199\u4ee3\u7801\u91cc\u4e86..\u5eb7\u5eb78qwq\n```cpp\n/*  Never Island  */\n/*deco loves Chino*/\n#include <bits/stdc++.h>\nusing namespace std;\nconst double eps=1e-10;\nint n,m,sum;\nstruct vec\n{\n\tdouble x,y;\n\tvec(double X=0,double Y=0):x(X),y(Y){}\n\tvec operator+(const vec&a)const\n\t{\n\t\treturn vec(x+a.x,y+a.y);\n\t}\n\tvec operator-(const vec&a)const\n\t{\n\t\treturn vec(x-a.x,y-a.y);\n\t}\n\tvoid operator+=(const vec&a)\n\t{\n\t\tthis->x+=a.x,this->y+=a.y;\n\t}\n\tvoid operator-=(const vec&a)\n\t{\n\t\tthis->x-=a.x,this->y-=a.y;\n\t}\n\tvec operator*(const double&a)const\n\t{\n\t\treturn vec(x*a,y*a);\n\t}\n\tvec operator/(const double&a)const\n\t{\n\t\treturn vec(x/a,y/a);\n\t}\n\tvoid operator*=(const double&a)\n\t{\n\t\tthis->x*=a,this->y*=a;\n\t}\n\tvoid operator/=(const double&a)\n\t{\n\t\tthis->x/=a,this->y/=a;\n\t}\n}Q[1100],M[1100];\ndouble cp(vec A,vec B)//\u53c9\u79ef\n{\n\treturn A.x*B.y-A.y*B.x;\n}\ndouble pp(vec A,vec B)//\u70b9\u79ef\n{\n\treturn A.x*B.x+A.y*B.y;\n}\nstruct line\n{\n\tvec A,B;\n\tdouble K;\n\tline(vec a,vec b):A(a),B(b){K=atan2(B.y,B.x);}//\u6309\u6781\u89d2\u6392\u5e8f\n\tline(){}\n\tbool operator<(const line&a)const\n\t{\n\t\treturn K<a.K; \n\t}\n}P[1100],T[1100];\nint st,en;\nvec get(line A,line B)//\u6c42\u4ea4\u70b9\n{\n\tvec C=A.A-B.A;\n\tdouble t=cp(B.B,C)/cp(A.B,B.B);\n\treturn A.A+A.B*t; \n}\nvoid work()\n{\n\tst=en=1;\n\tT[st]=P[1];\n\tfor(int i=2;i<=sum;i++)\n\t{\n\t\twhile(st<en&&cp(P[i].B,M[en-1]-P[i].A)<=eps)//\u8e22\u51fa\u961f\u5c3e\uff0c\u4ea4\u70b9\u5728\u5f53\u524d\u8fb9\u53f3\u4fa7\n\t\t{\t\t\t\n\t\t\t--en;\n\t\t}\n\t\twhile(st<en&&cp(P[i].B,M[st]-P[i].A)<=eps)//\u8e22\u51fa\u961f\u9996\uff0c\u4ea4\u70b9\u5728\u5f53\u524d\u8fb9\u53f3\u4fa7\n\t\t{\n\t\t\t++st;\n\t\t}\n\t\tT[++en]=P[i]; \n\t\tif(fabs(cp(T[en].B,T[en-1].B))<=eps)//\u5e73\u884c\n\t\t{\n\t\t\ten--;\n\t\t\tif(cp(T[en].B,P[i].A-T[en].A)>eps)//\u53d6\u66f4\u5de6\u8fb9\u90a3\u4e2a\n\t\t\t{\n\t\t\t\tT[en]=P[i];\n\t\t\t}\n\t\t}\n\t\tif(st<en)//\u6709\u591a\u4e2a\u8fb9\u5728\u96c6\u5408\u4e2d\uff0c\u52a0\u5165\u4ea4\u70b9\n\t\t{\n\t\t\tM[en-1]=get(T[en-1],T[en]);\n\t\t}\n\t}\n\twhile(st<en&&cp(T[st].B,M[en-1]-T[st].A)<=eps)\n\t{\n\t\t--en;\n\t}\n\tif(en-st<=1)\n\t{\n\t\treturn ;\n\t}\n\tM[en]=get(T[st],T[en]);\n}\nvoid solve()\n{\n\tdouble ans=0;\n\tfor(int i=st;i<=en;i++)//\u8ba1\u7b97\u9762\u79ef\n\t{\n\t\tint to=i+1;\n\t\tif(i==en)\n\t\t{\n\t\t\tto=st;\n\t\t}\n\t\tans+=cp(M[i],M[to]);\n\t}\n\tprintf(\"%.3lf\",ans/2);\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>m;\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%lf%lf\",&Q[j].x,&Q[j].y);\n\t\t}\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\t++sum;\n\t\t\tint to=j+1;\n\t\t\tif(j==m)\n\t\t\t{\n\t\t\t\tto=1;\n\t\t\t}\n\t\t\tP[sum]=line(Q[j],Q[to]-Q[j]);\n\t\t}\n\t}\n\tsort(P+1,P+sum+1);//\u6781\u89d2\u6392\u5e8f\n\twork();\n\tsolve();\n\treturn 0;\n}\n\n```",
        "postTime": 1576311011,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4196 \u3010[CQOI2006]\u51f8\u591a\u8fb9\u5f62\u3011"
    },
    {
        "content": "\u4e4b\u524d\u90a3\u4e2a\u65b9\u6cd5\u9047\u5230\u76f8\u53cd\u4f46\u957f\u5ea6\u4e0d\u76f8\u7b49\u7684\u5411\u91cf\u5c31\u6b7b\u4e86\uff0c\u6240\u4ee5\u6539\u4e86\u4e0b\uff08  \n\n\u534a\u5e73\u9762\u4ea4\u5176\u4ed6\u9898\u89e3\u548c [oi-wiki](https://oi-wiki.org//geometry/half-plane/) \u5df2\u7ecf\u8bb2\u89e3\u6bd4\u8f83\u5145\u5206\uff0c\u4e3b\u8981\u8bf4\u4e00\u4e0b\u5224\u65ad\u65e0\u89e3\u7684\u7ec6\u8282  \n\u8ba8\u8bba\u533a\u6709\u4eba\u7ed9\u51fa\u8fd9\u6837\u4e00\u7ec4\u6570\u636e\uff1a  \n\n```plaint\n3\n4\n0 0\n3 0\n3 1\n0 1\n4\n4 0\n5 0\n5 1\n4 1\n3\n0 0\n4 0\n0 2\n```  \n\n\u73b0\u6709\u9898\u89e3\u552f\u4e00\u8fc7\u7684\u4e24\u7bc7\u4e00\u4e2a\u662f\u6284\u4e66\u4e00\u4e2a\u662f $n^2$ \u66b4\u529b\uff08  \n\n\u753b\u51fa\u56fe\u6765\u662f\u6709\u4e24\u4e2a\u56db\u8fb9\u5f62\u53ea\u6709\u4e00\u4e2a\u516c\u5171\u70b9\uff0c\u6240\u4ee5\u7b54\u6848\u5e94\u8be5\u4e3a $0$  \n\u8fd9\u79cd\u60c5\u51b5\u5e94\u8be5\u88ab\u5224\u65e0\u89e3\u672c\u8d28\u4e0a\u662f\u56e0\u4e3a\uff0c\u6709\u4e24\u4e2a\u5e73\u884c\u4f46\u53cd\u5411\u7684\u5411\u91cf\uff0c\u4e14\u5b83\u4eec\u4e92\u76f8\u5728\u5bf9\u65b9\u7684\u53f3\u8fb9\uff08\u6b64\u5904\u9ed8\u8ba4\u4e00\u4e2a\u5411\u91cf\u5de6\u8fb9\u7684\u534a\u5e73\u9762\u662f\u6211\u4eec\u8981\u53d6\u7684\uff09  \n\n\u5982\u4f55\u5224\uff1f  \n\u5f53\u8981\u52a0\u5165\u65b0\u7684\u4e00\u6761\u76f4\u7ebf\u65f6\uff0c\u8981\u628a\u961f\u5217\u4e2d\u6bcf\u4e2a\u4e0e\u524d\u4e00\u4e2a\u5411\u91cf\u4ea4\u70b9\u5728\u4ed6\u53f3\u8fb9\u7684\u5411\u91cf\u90fd\u8e22\u51fa\u961f\u5217  \n\u6240\u4ee5\u5f53\u52a0\u5165\u67d0\u4e00\u4e2a\u5411\u91cf\u800c\u5bfc\u81f4\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u961f\u5217\u4e2d\u5176\u4ed6\u5411\u91cf\u4e4b\u95f4\u7684\u4ea4\u70b9\u5fc5\u7136\u5728\u4ed6\u7684\u53f3\u8fb9\uff0c\u6240\u4ee5\u5b83\u5c31\u5df2\u7ecf\u628a\u5b83\u53f3\u8fb9\u7684\u5411\u91cf\u90fd\u5f39\u6389\u4e86\uff0c\u90a3\u4e48\u4e0e\u4ed6\u5e73\u884c\u4e14\u53cd\u5411\u7684\u90a3\u4e00\u4e2a\u5411\u91cf\u6210\u4e3a\u73b0\u5728\u961f\u5217\u91cc\u7684\u552f\u4e00\u4e00\u4e2a  \n\u4e8e\u662f\u5728\u628a\u5f53\u524d\u7684\u5411\u91cf\u52a0\u5165\u961f\u5217\u540e\uff0c\u5c31\u53ea\u7528\u5224\u65ad\u961f\u5c3e\u548c\u961f\u5c3e\u7684\u524d\u4e00\u4e2a\u4f1a\u4e0d\u4f1a\u6784\u6210\u8fd9\u79cd\u60c5\u51b5\u5373\u53ef  \n\n\n\u4e8e\u662f\u5c31\u662f\uff1a  \n\n```cpp  \nque[++right]=a[i];\nif(abs(cross(que[right].way,que[right-1].way))<=eps){//\u5e73\u884c\n\tif(onRight(que[right],que[right-1].p)&&dot(que[right].way,que[right-1].way)<=-eps) return 0;\n\tright--;\n\tif(!onRight(que[right],a[i].p)) que[right]=a[i];\n}\n```  \n\n\u5927\u6982\u5c31\u662f\u53c9\u4e58\u5224\u5e73\u884c\uff0c\u70b9\u4e58\u5224\u5939\u89d2\u5927\u4e8e $90$ \u5ea6\uff0c\u4e8e\u662f\u5c31\u5f97\u51fa\u4e86\u53cd\u5411  \n\n\u6570\u636e\u6bd4\u8f83\u6c34\uff0c\u5efa\u8bae\u53bb\u8fd9\u4e24\u9898\u8fdb\u4e00\u6b65\u9a8c\u8bc1\u4e00\u4e0b\u677f\u5b50\u7684\u6b63\u786e\u6027\uff1a[POJ2451 Uyuw's Concert\n](http://poj.org/problem?id=2451) \u548c [POJ1279 Art Gallery](http://poj.org/problem?id=1279)  \n\n\u5b8c\u6574\u4ee3\u7801\uff1a  \n\n```cpp  \n#define N 100006\n#define eps 1e-13\ninline double abs(const double &a){return a>0?a:-a;}\nstruct Vector{\n\tdouble x,y;\n\tinline double len(){return std::sqrt(x*x+y*y);}\n\tinline void operator += (const Vector &a){x+=a.x;y+=a.y;}\n\tinline void operator -= (const Vector &a){x-=a.x;y-=a.y;}\n\tinline void operator *= (const double &a){x*=a;y*=a;}\n\tinline void operator /= (const double &a){x/=a;y/=a;}\n};\ninline Vector operator + (const Vector &a,const Vector &b){return (Vector){a.x+b.x,a.y+b.y};}\ninline Vector operator - (const Vector &a,const Vector &b){return (Vector){a.x-b.x,a.y-b.y};}\ninline Vector operator * (const Vector &a,const double &b){return (Vector){a.x*b,a.y*b};}\ninline Vector operator / (const Vector &a,const double &b){return (Vector){a.x/b,a.y/b};}\ninline double dot(const Vector &a,const Vector &b){return a.x*b.x+a.y*b.y;}\ninline double cross(const Vector &a,const Vector &b){return a.x*b.y-a.y*b.x;}\nstruct Line{\n\tVector p,way;\n\tdouble ang;\n\tinline void makeLine(const Vector &a,const Vector &b){p=a;way=b;ang=atan2(b.y,b.x);}\n};\ninline int onRight(const Line &a,const Vector &b){return cross(a.way,b-a.p)<=-eps;}\ninline int cmp(const Line &a,const Line &b){return a.ang<b.ang;} \ninline Vector intersect(const Line &a,const Line &b){\n\tdouble x=cross(b.way,a.p-b.p)/cross(a.way,b.way);\n\treturn a.p+a.way*x;\n}\ninline double polygonArea(int n,Vector *a){\n\tdouble S=0;\n\tfor(reg int i=1;i<n;i++) S+=cross(a[i],a[i+1]);\n\tS+=cross(a[n],a[1]);\n\treturn S/2;\n}\nint left,right;\nLine que[N];\ninline int halfPlane(int n,Line *a,Vector *p){\n\tstd::sort(a+1,a+1+n,cmp);\n\tleft=right=0;que[0]=a[1];\n\tfor(reg int i=2;i<=n;i++){\n\t\twhile(left<right&&onRight(a[i],p[right])) right--;\n\t\twhile(left<right&&onRight(a[i],p[left+1])) left++;\n\t\tque[++right]=a[i];\n\t\tif(abs(cross(que[right].way,que[right-1].way))<=eps){//\u5e73\u884c\n\t\t\tif(onRight(que[right],que[right-1].p)&&dot(que[right].way,que[right-1].way)<=-eps) return 0;\n\t\t\tright--;\n\t\t\tif(!onRight(que[right],a[i].p)) que[right]=a[i];\n\t\t}\n\t\tif(left<right) p[right]=intersect(que[right],que[right-1]);\n\t}\n\twhile(left<right&&onRight(que[left],p[right])) right--;\n\tif(right-left<=1) return 0;\n\tp[left]=intersect(que[left],que[right]);\n\treturn 1;\n}\nVector p[N],in[N];\nLine a[N];\nint main(){\n\tint n=read(),o=0;\n\twhile(n--){\n\t\tint m=read();\n\t\tfor(reg int i=1;i<=m;i++) in[i].x=read(),in[i].y=read();\n\t\tfor(reg int i=1;i<m;i++) a[++o].makeLine(in[i],in[i+1]-in[i]);\n\t\ta[++o].makeLine(in[m],in[1]-in[m]);\n\t}\n\tif(!halfPlane(o,a,p)) puts(\"0.000\");\n\telse printf(\"%.3lf\\n\",polygonArea(right-left+1,p+left-1));\n\treturn 0;\n}\n```",
        "postTime": 1621944007,
        "uid": 164432,
        "name": "suxxsfe",
        "ccfLevel": 9,
        "title": "P4196 \u534a\u5e73\u9762\u4ea4"
    },
    {
        "content": "\u5f88\u660e\u663e\u662f\u4e00\u9053\u534a\u5e73\u9762\u4ea4\u7684\u9898\u3002  \n\u5148\u8bf4\u4e00\u4e0b\u534a\u5e73\u9762\u4ea4\u7684\u6b65\u9aa4\uff1a  \n1.\u7528\u70b9\u5411\u6cd5\uff08\u70b9+\u5411\u91cf\uff09\u8868\u793a\u76f4\u7ebf   \n2.\u6781\u89d2\u6392\u5e8f\uff0c\u82e5\u6781\u89d2\u76f8\u540c\uff0c\u6309\u76f8\u5bf9\u4f4d\u7f6e\u6392\u5e8f\u3002  \n3.\u53bb\u91cd\uff0c\u6781\u89d2\u76f8\u540c\u7684\u4fdd\u7559\u66f4\u4f18\u7684  \n4.\u679a\u4e3e\u8fb9\u7ef4\u62a4\u53cc\u7aef\u961f\u5217  \n5.\u6c42\u7b54\u6848  \n  \n1\u5c31\u4e0d\u8bf4\u4e86\uff0c2\u4e2d\u7684\u6781\u89d2\u53ef\u4ee5\u7528atan2(y,x)\u6765\u6c42,\u56e0\u4e3aatan2\u7cbe\u5ea6\u8981\u9ad8\n\n![](http://ww1.sinaimg.cn/large/0060lm7Tly1fo0oxyllyzj308h07tt8l.jpg)    \n\u53cc\u7aef\u961f\u5217\u7684\u539f\u56e0\u662f\u65b0\u52a0\u7684\u4e00\u6761\u8fb9\u5bf9\u5934\u548c\u5c3e\u90fd\u6709\u5f71\u54cd,\u5982\u56fe\uff1a  \n![](https://s1.ax2x.com/2018/02/01/ZiEKX.png)\n\n\u5982\u4f55\u53bb\u5224\u65ad\uff1a\u53ea\u8981\u5224\u65ad\u7ebfhead\u548c\u7ebfhead+1,\u7684\u4ea4\u70b9p\u4e0e\u65b0\u7684\u4e00\u6761\u7ebf\u7684\u4f4d\u7f6e\u5173\u7cfb\u5c31\u53ef\u4ee5  \n\n\u81f3\u4e8e\u4ea4\u70b9\u7684\u6c42\u6cd5\uff1a\u5148\u89c1\u56fe\uff1a  \n![](https://s1.ax2x.com/2018/02/01/ZiUWJ.png)\n\n\u6c42$p_1v_1,p_2v_2$\u7684\u4ea4\u70b9$p_0$  \n\u8bbe$p_0=p_2+kv_2\\ \\ u=p_2-p_1$  \n$S_1=u\\times v_1,S_2=v_1\\times v_2,k=S_1/S2$  \n\u6240\u4ee5$p_0=p_2+kv_2$  \n$S_1$\u4e3a$u$\u4e0e$v_1$\u7684\u9762\u79ef\uff0c$S_2$\u4e3a$v_1$\u4e0e$v_2$\u7684\u9762\u79ef\uff0c\u6309\u6bd4\u4f8b\u6c42\u5f97$k$\u518d\u4e58\u4e00\u4e0b\u5c31\u6c42\u51fa$p_0$  \n\u6700\u540e\u7edf\u8ba1\u7b54\u6848  \n\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a  \n\n\n``` \n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<set>\n#include<bitset>\n#include<vector>\n#include<cstdlib>\n#define QAQ int\n#define TAT long long\n#define OwO bool\n#define ORZ double\n#define F(i,j,n) for(QAQ i=j;i<=n;++i)\n#define E(i,j,n) for(QAQ i=j;i>=n;--i)\n#define MES(i,j) memset(i,j,sizeof(i))\n#define MEC(i,j) memcpy(i,j,sizeof(j))\n\nusing namespace std;\nconst int N=505;\nconst double eps=1e-8;\n\nint n;\nstruct Point{\n\tdouble x,y;\n\t\n\tfriend Point operator - (Point a,Point b){\n\t\tPoint t;\n\t\tt.x=a.x-b.x;t.y=a.y-b.y;\n\t\treturn t;\n\t}\n\tfriend Point operator + (Point a,Point b){\n\t\tPoint t;\n\t\tt.x=a.x+b.x;t.y=a.y+b.y;\n\t\treturn t;\n\t}\n\tfriend double operator * (Point a,Point b){\n\t\treturn a.x*b.x+a.y*b.y;\n\t}\n\tfriend double operator ^ (Point a,Point b){\n\t\treturn a.x*b.y-b.x*a.y;\n\t}\n\tfriend Point operator * (double k,Point b){\n\t\tPoint t;\n\t\tt.x=k*b.x;t.y=k*b.y;\n\t\treturn t; \n\t}\n}b[N];\nint sign(double x){\n\treturn fabs(x)<=eps ?  0 : (x>0 ? 1 : -1);\n}\nstruct Line{\n\tPoint p,v;\n\tdouble poa;\n\tfriend OwO operator < (Line x,Line y){\n\t\treturn sign(x.poa-y.poa)==0 ? sign((x.v-x.p) ^ (y.v-x.p)) >0 : sign(x.poa-y.poa)<0;\n\t\t//\u56e0\u4e3a\u6211\u662f\u5411\u91cf\u5de6\u4fa7\u6c42\u4ea4\uff0c\u6240\u4ee5\u6781\u89d2\u76f8\u540c\u65f6\u9760\u5de6\u7684\u66f4\u4f18\uff0c\u628a\u4f18\u7684\u653e\u5728\u540e\u9762\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u64cd\u4f5c \uff0c\u53ef\u4ee5\u753b\u56fe\u4f53\u4f1a\u4e00\u4e0b \n\t}\n}a[N],q[N];\nint js,cnt,head,tail;\ndouble ans;\n\nPoint inter(Line a,Line b){//\u6c42\u4ea4\u70b9 \n\tPoint p1=a.p,p2=b.p,v1=a.v,v2=b.v;\n\tv1=v1-p1;v2=v2-p2;\n\tPoint u=p2-p1;\n\tPoint p=p2+((u^v1)/(v1^v2))*v2;\n\treturn p;\n}\n\nOwO pd(Line i,Line j,Line k){\n\tPoint p=inter(i,j);\n\treturn sign((k.v-k.p) ^ (p-k.p))<0;\n}\n\nvoid Half_Plane(){\n\tsort(a+1,a+js+1);//\u6392\u5e8f \n\tF(i,1,js) {\n\t\tif(sign(a[i].poa-a[i-1].poa)!=0) cnt++;\n\t\ta[cnt]=a[i];//\u56e0\u4e3a\u6392\u8fc7\u5e8f\uff0c\u5373\u4f7f\u6781\u89d2\u76f8\u540c\uff0c\u540e\u9762\u7684\u4e5f\u6bd4\u524d\u9762\u7684\u4f18 \n\t}\n\thead=1;tail=0;\n\tq[++tail]=a[1];q[++tail]=a[2];\n\tF(i,3,cnt){\n\t\twhile(head<tail&&pd(q[tail-1],q[tail],a[i])) tail--;//\u7ef4\u62a4\u53cc\u7aef\u961f\u5217 \n\t\twhile(head<tail&&pd(q[head+1],q[head],a[i])) head++;\n\t\tq[++tail]=a[i];\n\t}\n\twhile(head<tail&&pd(q[tail-1],q[tail],q[head])) tail--;\n\twhile(head<tail&&pd(q[head+1],q[head],q[tail])) head++;\n\tq[tail+1]=q[head];\n\tjs=0;\n\tF(i,head,tail) b[++js]=inter(q[i],q[i+1]);\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tF(i,1,n){\n\t\tint k;\n\t\tscanf(\"%d\",&k);\n\t\tF(j,1,k) scanf(\"%lf%lf\",&b[j].x,&b[j].y);\n\t\tb[k+1]=b[1];\n\t\tF(j,1,k) a[++js].p=b[j],a[js].v=b[j+1];\n\t}\n\tF(i,1,js) a[i].poa=atan2(a[i].v.y-a[i].p.y,a[i].v.x-a[i].p.x);\n\tHalf_Plane();\n\tb[js+1]=b[1];\n\tif(js>2) F(i,1,js) ans+=(b[i]^b[i+1]);\n\tans=fabs(ans)/2.0;\n\tprintf(\"%.3lf\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1517452114,
        "uid": 36170,
        "name": "Fheiwn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4196 \u3010[CQOI2006]\u51f8\u591a\u8fb9\u5f62\u3011"
    },
    {
        "content": "# \u534a\u5e73\u9762\u4ea4\n## \u4e00\u4e9b\u5b9a\u4e49\n**\u76f4\u7ebf**\uff1a$y = kx+b$\u3002\u7531\u521d\u4e2d\u77e5\u8bc6\u77e5\u4e24\u70b9\u786e\u5b9a\u4e00\u6761\u76f4\u7ebf\uff0c\u8fd9\u91cc\u4ee5 $(0,b)$ \u548c $(1,k+b)$ \u786e\u5b9a\u4e00\u6761**\u6709\u5411\u76f4\u7ebf**\uff0c\u7531 $(0,b)$ \u6307\u5411 $(1,k+b)$\u3002\n\n**\u534a\u5e73\u9762**\uff1a\u76f4\u7ebf**\u4e00\u4fa7**\u7684\u5e73\u9762\u5c31\u53eb\u534a\u5e73\u9762\uff0c\u5de6\u534a\u5e73\u9762 $y \\geq kx+b$(\u5305\u542b\u4e86\u8fd9\u6761\u76f4\u7ebf\u4e0a\u7684\u70b9)\uff0c\u53f3\u534a\u5e73\u9762 $y < kx +b$\uff0c\u8fd9\u91cc\u5176\u5b9e\u662f\u5411\u91cf\u7684\u8fd0\u7b97\uff0c$k$ \u4e0d\u80fd\u7b80\u5355\u7406\u89e3\u6210\u659c\u7387\uff0c\u5177\u4f53\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u786e\u5b9a\u4e00\u79cd\u5b9a\u5411\u65b9\u6cd5\u5e76\u4e14\u786e\u5b9a\u6211\u4eec\u8981\u6c42\u7684\u662f\u54ea\u4e00\u4e2a\u534a\u5e73\u9762\u5373\u53ef\u3002\n\n**\u534a\u5e73\u9762\u4ea4**\uff1a\u591a\u4e2a\u534a\u5e73\u9762\u7684\u76f8\u4ea4\u90e8\u5206\uff0c\u534a\u5e73\u9762\u662f\u70b9\u96c6\uff0c\u534a\u5e73\u9762\u4ea4\u80af\u5b9a\u4e5f\u662f\u70b9\u96c6\u3002\n\n**\u534a\u5e73\u9762\u4ea4\u5e94\u7528**\uff1a\u6c42\u51f8\u8fb9\u5f62\u7684\u9762\u79ef\u4ea4\uff0c\u6c42\u7ebf\u6027\u89c4\u5212\u7684\u53ef\u884c\u57df\u3002\n\n## \u6c42\u89e3-S&I \u7b97\u6cd5\n### \u524d\u7f6e\u77e5\u8bc6\n**\u6781\u89d2**\uff1a`C++` \u4e2d\u6709\u4e00\u4e2a\u5e93\u51fd\u6570\u53eb\u505a `atan2(double y,double x)`\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u89d2 $\\theta \\in (-\\pi,\\pi],\\theta = \\arctan \\frac{y}{x}$\uff0c\u8fd9\u4e2a\u89d2\u5176\u5b9e\u5c31\u662f\u8fd9\u4e2a\u76f4\u7ebf\u4e0e $x$ \u8f74\u7684\u5939\u89d2\u3002\n\n### \u7b97\u6cd5\u6d41\u7a0b\n1. \u7ed9\u8fd9\u4e9b\u8fb9\u7684\u65b9\u5411\u5b9a\u4e3a\u9006\u65f6\u9488\u65b9\u5411\uff0c\u8fd9\u6837\uff0c\u5de6\u5e73\u9762\u7684\u4ea4\u5c31\u662f\u534a\u5e73\u9762\u4ea4\u3002\u5bf9\u8fd9\u4e9b\u8fb9\u6309\u7167\u6781\u89d2\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6781\u89d2\u76f8\u540c\u7684\u4e24\u6761\u76f4\u7ebf\uff0c\u628a\u9760\u5185\u7684\u653e\u5728\u524d\u9762\uff08\u9760\u5185\u7684\u9762\u79ef\u80af\u5b9a\u662f\u5c0f\u7684\uff09\u3002\n\n2. \u7528\u53cc\u7aef\u961f\u5217\u7ef4\u62a4\u8fb9\u96c6\uff0c\u9006\u65f6\u9488\u52a0\u8fb9\u3002\u5148\u7ef4\u62a4\u961f\u5c3e\u518d\u7ef4\u62a4\u961f\u5934\u3002\n\n\u5177\u4f53\u5185\u5bb9\u89c1\u4ee3\u7801\uff0c\u8fd9\u91cc\u4ee5[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P4196)\u4e3a\u4f8b\uff1a\n```cpp\n#include<bits/stdc++.h>\n//#define int long long\n#define ll long long\n#define next nxt\n#define re register\n#define il inline\nconst int N = 5e2 + 5;\nconst double eps = 1e-6;\nconst double Pi = acos(-1.0);\nusing namespace std;\n\nstruct Point{\n\tdouble x,y;\n}p[N];\nstruct Line{\n\tPoint s,e;\n}a[N],q[N];\nint n,m,cnt,k;\ndouble res;\n\nil int read()\n{\n\tint f=0,s=0;\n\tchar ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) f |= (ch=='-');\n\tfor(; isdigit(ch);ch=getchar()) s = (s<<1) + (s<<3) + (ch^48);\n\treturn f ? -s : s;\n}\n\nPoint operator +(Point a,Point b) { return Point{a.x+b.x,a.y+b.y}; }//\u52a0\n\nPoint operator -(Point a,Point b) { return Point{a.x-b.x,a.y-b.y}; }//\u51cf\n\nPoint operator *(Point a,double b) { return Point{a.x*b,a.y*b}; }//\u6570\u4e58\n\nil double operator *(Point a,Point b) { return a.x*b.y - a.y*b.x; }//\u53c9\u79ef\n\nil double Angle(Line a) { return atan2(a.e.y-a.s.y,a.e.x-a.s.x); }//\u5939\u89d2\n\nPoint GetNode(Line a,Line b)//\u6c42\u4ea4\u70b9\n{\n\tPoint u = a.e - a.s , v = b.e - b.s , w = a.s - b.s;\n\tdouble t = w*v / (v*u);\n\treturn a.s + u*t;\n}\n\nil bool cross(Line a,Line b,Line c)//\u5224\u65adb\u548cc\u7684\u4ea4\u70b9\u662f\u5426\u5728\u76f4\u7ebfa\u7684\u53f3\u4fa7\n{\n\tPoint p = GetNode(b,c);\n\treturn (a.e-a.s)*(p-a.s) < 0;\n}\n\nil bool cmp(Line a,Line b)\n{\n\tdouble A = Angle(a) , B = Angle(b);\n\treturn fabs(A-B) > eps ? A < B : (a.e-a.s)*(b.e-a.s) < 0;\n}\n\nil double HalfPlane()\n{//\u5171\u6709cnt\u6761\u8fb9\n\tsort(a+1,a+cnt+1,cmp);\n\tint head = 1 , tail = 1; q[1] = a[1];\n\tfor(re int i=2;i<=cnt;i++)\n\t{\n\t\tif(Angle(a[i]) - Angle(a[i-1]) < eps) continue;\n\t\twhile(head < tail && cross(a[i],q[tail],q[tail-1])) tail--;\n\t\twhile(head < tail && cross(a[i],q[head],q[head+1])) head++;\n\t\tq[++tail] = a[i];\n\t}\n\twhile(head < tail && cross(q[head],q[tail],q[tail-1])) tail--;\n\tq[++tail] = q[head];\n\tfor(re int i=head;i<tail;i++) p[++k] = GetNode(q[i],q[i+1]);\n\tfor(re int i=1;i<=k;i++) res += p[i]*p[i%k+1];\n\treturn res/2;\n}\n\nint main()\n{\n\t...\n}\n\n```\n\n\u8fd9\u91cc `Line` \u7ed3\u6784\u4f53\u5c31\u662f\u5b58\u50a8\u7684\u4e00\u6761\u8fb9\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\u6211\u4eec\u4e00\u4e2a\u51fd\u6570\u4e00\u4e2a\u51fd\u6570\u89e3\u91ca\uff0c\u90a3\u4e9b\u5411\u91cf\u7684\u57fa\u7840\u5185\u5bb9\u5c31\u4e0d\u518d\u8bf4\u660e\u3002\n\n**Angle\u51fd\u6570**\n\n\u8fd0\u7528 `atan2` \u51fd\u6570\u6c42\u6781\u89d2\u3002\n\n**GetNode\u51fd\u6570**\n\n\u8fd9\u4e2a\u5176\u5b9e\u4e5f\u7b97\u662f\u57fa\u7840\u5185\u5bb9\uff0c\u77e5\u9053\u4e86\u4e00\u6761\u76f4\u7ebf\u7684\u4e24\u4e2a\u70b9\uff0c\u5f88\u5bb9\u6613\u80fd\u591f\u8f6c\u5316\u6210\u70b9\u5411\u5f0f\u3002\n\n**cmp \u51fd\u6570**\n\n\u5148\u662f\u6bd4\u8f83\u6781\u89d2\uff0c\u628a\u5c0f\u7684\u653e\u524d\u9762\uff0c\u8fd9\u6837\u5c31\u662f\u4e00\u4e2a\u9006\u65f6\u9488\u7684\u987a\u5e8f\u4e86\u3002\n\n\u5982\u679c\u6781\u89d2\u76f8\u540c\uff0c\u9760\u5de6\u7684\u653e\u5728\u524d\u8fb9\uff0c\u8fd9\u91cc\u7684\u5de6\u662f\u6709\u65b9\u5411\u7684\u5de6\uff0c\u6ce8\u610f\u8fa8\u522b\u3002\n\n\u6765\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/z3f5qba6.png)\n\n\u8fd0\u7528\u53c9\u79ef\u7684\u76f8\u5173\u6027\u8d28\uff0c\u5982\u679c `(a.e-a.s)*(b.e-a.s) < 0`\uff0c\u90a3\u4e48\u5c31\u80fd\u8bf4\u660e $b$ \u5728 $a$ \u7684\u53f3\u4fa7\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6765\u5224\u65ad\u4f4d\u7f6e\u5173\u7cfb\u3002\n\n**cross \u51fd\u6570**\n\n\u8fd9\u4e2a\u5176\u5b9e\u548c cmp \u51fd\u6570\u7c7b\u4f3c\u3002\u5148\u7528 GetNode \u51fd\u6570\u6c42\u89e3 $b$ \u548c $c$ \u7684\u4ea4\u70b9\uff0c\u518d\u5224\u65ad\u8fd9\u4e2a\u4ea4\u70b9\u548c $a$ \u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u539f\u7406\u548c\u4e0a\u9762 cmp \u7684\u539f\u7406\u662f\u4e00\u6837\u7684\uff0c\u5c06\u4ea4\u70b9\u7c7b\u6bd4\u6210 $b.e$ \u5373\u53ef\u3002\n\n**HalfPlane \u51fd\u6570**\n\n\u8fd9\u4e2a\u5176\u5b9e\u5c31\u662f\u6c42\u89e3\u7684\u4e3b\u51fd\u6570\u3002\n\n\u9996\u5148\u6309\u6781\u89d2\u6392\u5e8f\u4e00\u4e0b\uff0c\u5148\u628a\u7b2c\u4e00\u6761\u76f4\u7ebf\u653e\u8fdb\u53cc\u7aef\u961f\u5217\u5185\uff0c\u7136\u540e\u5f00\u59cb\u679a\u4e3e\u76f4\u7ebf\u3002\n\n\u5f00\u59cb\u7684\u7b2c\u4e00\u4e2a `if` \u5c31\u662f\u628a\u6781\u89d2\u5e8f\u76f8\u540c\u7684\u6392\u9664\u6389\uff0c\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5728\u6392\u5e8f\u7684\u65f6\u5019\u5df2\u7ecf\u628a\u6700\u9760\u5de6\u7684\u6781\u89d2\u5e8f\u76f8\u540c\u7684\u653e\u5230\u524d\u9762\uff0c\u6240\u4ee5\u540e\u9762\u90a3\u4e9b\u9760\u53f3\u7684\u5c31\u4e0d\u7528\u8003\u8651\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u91cd\u5934\u620f\uff0c\u5148\u7ef4\u62a4\u961f\u5c3e\uff0c\u518d\u7ef4\u62a4\u961f\u5934\uff0c\u628a\u4ea4\u70b9\u5728\u5f53\u524d\u76f4\u7ebf\u7684\u53f3\u8fb9\u7684\u5f39\u51fa\u3002\n\n\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/gff33r39.png)\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u8981\u52a0\u5165\u7b2c\u56db\u6761\u8fb9\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c$2$ \u548c $3$ \u7684\u4ea4\u70b9\u5728 $4$ \u7684\u53f3\u8fb9\uff0c\u8fd9\u4e5f\u5c31\u8bf4\u660e $3$ \u548c\u5176\u5b83\u76f4\u7ebf\u4ea4\u7684\u8303\u56f4\u8981\u6bd4 $4$ \u548c\u5176\u4ed6\u76f4\u7ebf\u4ea4\u7684\u8303\u56f4\u591a\uff0c\u8fd9\u4e5f\u5c31\u8bf4\u660e $3$ \u662f\u9700\u8981\u88ab\u5f39\u51fa\u7684\u3002\u7531\u4e8e\u6309\u6781\u89d2\u6392\u5e8f\u4e86\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u6709\u4e9b\u5730\u65b9\u662f $4$ \u4ea4\u5230\u800c $3$ \u6ca1\u4ea4\u5230\u7684\uff0c\u6240\u4ee5 $3$ \u4e00\u5b9a\u8981\u5f39\u51fa\u3002\u5bf9\u4e8e\u961f\u5934\u4e5f\u662f\u540c\u7406\u7684\u3002\n\n\u6700\u540e\u5728\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019\u8fd8\u4f1a\u6e05\u7a7a\u4e00\u6b21\u961f\u5c3e\uff0c\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/dtufnblp.png)\n\n\u5728 $6$ \u52a0\u8fdb\u53bb\u4ee5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u6211\u4eec\u628a\u7b2c\u4e00\u6761\u76f4\u7ebf\u5ef6\u4f38\u4e00\u4e0b\u5c31\u80fd\u53d1\u73b0\u7aef\u502a\uff1a$6$ \u662f\u591a\u4f59\u7684\uff0c\u56e0\u6b64\u5728\u51fd\u6570\u6700\u540e\uff0c\u6211\u4eec\u8981\u53bb\u9664\u591a\u4f59\u7684\u961f\u5c3e\u3002\u800c\u961f\u5934\u662f\u4e0d\u4f1a\u591a\u4f59\u7684\uff0c\u56e0\u4e3a\u5728\u5faa\u73af\u91cc\u7684\u7b2c\u4e8c\u4e2a `while` \u91cc\u5df2\u7ecf\u5224\u65ad\u4e86\u3002\n\n\u518d\u8003\u8651\u4e3a\u4ec0\u4e48\u5148\u961f\u5c3e\u540e\u961f\u5934\uff0c\u518d\u8003\u8651\u4e00\u79cd\u60c5\u51b5\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/ltvzjlnh.png)\n\n\u5982\u679c\u6211\u4eec\u5148\u961f\u5934\u540e\u961f\u5c3e\uff0c\u90a3\u4e48\u6700\u7ec8\u53ea\u4f1a\u5269\u4e0b $3,4$ \u4e24\u6761\u8fb9\uff0c\u56f4\u6210\u7684\u9762\u79ef\u5c31\u662f $\\angle AOD$ \u56f4\u6210\u7684\u9762\u79ef\uff1b\u5982\u679c\u5148\u961f\u5c3e\u540e\u961f\u5934\uff0c\u90a3\u4e48\u5c31\u5269\u4e0b $1,4$ \u4e24\u6761\u8fb9\uff0c\u56f4\u6210\u7684\u9762\u79ef $\\angle CBD$ \u56f4\u6210\u7684\u9762\u79ef\uff0c\u663e\u7136\uff0c\u6b63\u786e\u7684\u5e94\u8be5\u662f $\\angle CBD$ \u56f4\u6210\u7684\u9762\u79ef\u3002\n\n----\n\u7531\u6b64\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u51fa\u5168\u90e8\u7684\u5bf9\u534a\u5e73\u9762\u4ea4\u6709\u7528\u7684\u8fb9\u4e86\uff0c\u901a\u8fc7\u518d\u6b21\u8c03\u7528 GetNode \u51fd\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u8fb9\u4e4b\u95f4\u7684\u4ea4\u70b9\uff0c\u4ece\u800c\u80fd\u591f\u6c42\u51fa\u534a\u5e73\u9762\u4ea4\u7684\u9762\u79ef\u3002",
        "postTime": 1684330942,
        "uid": 231543,
        "name": "bloodstalk",
        "ccfLevel": 4,
        "title": "P4196 \u9898\u89e3"
    },
    {
        "content": "[\u535a\u5ba2\u56ed\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/ytxy-bolg/articles/17045942.html)\u3002\n\n\u9898\u76ee\u4f20\u9001\u95e8\uff1a[\u6d1b\u8c37](https://www.luogu.com.cn/problem/P4196)\u3002\n\n# \u7b80\u8981\u9898\u610f\n\n\u9006\u65f6\u9488\u7ed9\u51fa $n$ \u4e2a\u4e8c\u7ef4\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5750\u6807\uff0c\u6c42\u4ed6\u4eec\u4ea4\u7684\u9762\u79ef\u7ed3\u679c\u4fdd\u7559\u4e09\u4f4d\u5c0f\u6570\u3002\n\n$2 \\le n \\le 10,3 \\le m_i \\le 50$\uff0c$m_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u591a\u8fb9\u5f62\u7684\u8fb9\u6570\u3002\u4fdd\u8bc1\u6bcf\u7ef4\u5750\u6807\u4e3a $[1000,1000]$ \u4e2d\u7684\u6574\u6570\u3002\n\n# \u89e3\u9898\u601d\u8def\n\n\u4e0b\u8bbe $a=\\sum\\limits_{i =1}\\limits^nm_i$\u3002\n\n\u534a\u5e73\u9762\u4ea4\u6a21\u677f\u9898\uff0c\u5bf9\u4e8e\u8fd9\u4e00\u9898\u53ef\u4ee5\u8003\u8651\u66b4\u529b $\\mathcal{O}(a^2)$ \u6c42\u89e3\u3002\u4f46\u662f\u8fd9\u6837\u5e76\u4e0d\u80fd\u901a\u8fc7\u5927\u90e8\u5206\u7684\u534a\u5e73\u9762\u4ea4\u9898\u76ee\u3002\n\n\u6211\u4eec\u9700\u8981\u8003\u8651\u66f4\u4f18\u7684\u505a\u6cd5\u3002\u6709\u4e24\u79cd\uff1a\u5206\u6cbb\u3001\u53cc\u7aef\u961f\u5217\u3002\u5b83\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff0c\u4f46\u662f\u5206\u6cbb\u7684\u5e38\u6570\u4ee5\u53ca\u5b9e\u73b0\u96be\u5ea6\u90fd\u9ad8\u4e8e\u53cc\u7aef\u961f\u5217\u505a\u6cd5\uff0c~~\u90a3\u6211\u8981\u4ed6\u4f5c\u751a~~\u3002\n\n\u8fd9\u4e24\u79cd\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $\\mathcal{O}(a\\log_2a)$\n\n\u6240\u4ee5\u672c\u6587\u53ea\u6d89\u53ca\u53cc\u7aef\u961f\u5217\u505a\u6cd5\uff0c~~\u8fd8\u4e0d\u662f\u7b14\u8005\u592a\u5f31\u4e0d\u4f1a\u5206\u6cbb\u505a\u6cd5~~\u3002\n\n# \u53cc\u7aef\u961f\u5217\u6c42\u89e3\u534a\u5e73\u9762\u4ea4\u95ee\u9898\n\n\u65e2\u7136\u4f60\u6765\u4e86\u8fd9\u91cc\u7b14\u8005\u9ed8\u8ba4\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u4e8c\u7ef4\u51f8\u5305\uff0c\u5982\u679c\u4e0d\u4f1a\u7684\u8bdd\u8bf7\u51fa\u95e8\u53f3\u8f6c[\u4e8c\u7ef4\u51f8\u5305](https://www.luogu.com.cn/problem/P2742)\u3002\n\n- \u9996\u5148\uff0c\u4e0d\u59a8\u5047\u8bbe\u76f4\u7ebf\u7684\u5de6\u4fa7\uff08\u5982\u679c\u4f60\u60f3\uff0c\u53f3\u8fb9\u4e5f\u4e0d\u662f\u4e0d\u884c\uff09\u662f\u534a\u5e73\u9762\uff0c\u5728\u5bf9\u76f4\u7ebf\u8fdb\u884c\u6781\u89d2\u6392\u5e8f\u540e\u6211\u4eec\u8fdb\u884c\u201c\u53bb\u91cd\u201d\uff0c\u4fdd\u7559\u6781\u89d2\u76f8\u540c\u7684\u76f4\u7ebf\u4e2d\u6700\u9760\u5de6\u7684\uff08\u5373\u9650\u5236\u6700\u4e25\u683c\u7684\uff09\u3002\n\n- \u4e0b\u4e00\u6b65\uff0c\u626b\u63cf\u4e00\u904d\u6240\u6709\u76f4\u7ebf\uff0c\u5982\u679c\u961f\u9996\u7684\u4e24\u6761\u76f4\u7ebf\u7684\u4ea4\u70b9\u5728\u5f53\u524d\u76f4\u7ebf\u7684\u53f3\u4fa7\uff0c\u5219\u4ece\u961f\u9996\u5220\u9664\u4e00\u6761\u76f4\u7ebf\uff0c\u961f\u5c3e\u505a\u540c\u6837\u7684\u64cd\u4f5c\u3002\u63a5\u7740\u5c06\u5f53\u524d\u76f4\u7ebf\u538b\u5165\u961f\u5c3e\u3002\n\n- \u5b8c\u6210\u4e86\u4e0a\u9762\u4e00\u6b65\u53ef\u80fd\u8fd8\u4e0d\u884c\uff0c\u56e0\u4e3a\u961f\u9996\u7684\u4ea4\u70b9\u53ef\u80fd\u8fd8\u4f1a\u5728\u961f\u5c3e\u76f4\u7ebf\u7684\u53f3\u4fa7\uff0c\u6240\u4ee5\u8fd8\u8981\u5220\u9664\u4e0d\u5408\u6cd5\u7684\uff0c\u961f\u5c3e\u540c\u7406\uff08\u867d\u7136\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\uff0c\u4f46\u4fdd\u9669\u8d77\u89c1\uff09\u3002\n\n- \u6700\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u56f4\u51fa\u534a\u5e73\u9762\u4ea4\u7684\u6240\u6709\u76f4\u7ebf\uff0c\u8ba1\u7b97\u4ea4\u70b9\uff0c\u7528\u53c9\u79ef\u6c42\u9762\u79ef\u5373\u53ef\u3002\n\n# \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\nconst double eps = 1e-8;//\u907f\u514d\u6d6e\u70b9\u6570\u8bef\u5dee\nconst int N = 504;\nint n, cnt, tot;\ndouble sum;\n\nstruct node {\n    double x, y;\n    node(double x = 0, double y = 0):\n    x(x), y(y){}\n    node operator - (node &b) {\n        return node(x - b.x, y - b.y);\n    }\n} nod[N], ans[N];\n\ndouble cross(node a, node b) {\n    return (a.x * b.y - a.y * b.x);//\u4e24\u70b9\u7684\u53c9\u79ef\n}\ndouble cross(node a, node b, node c) {\n    return cross(b - a, c - a);\n}\n\nstruct edge {\n    node start, end;\n    double angle;//\u6781\u89d2\n    edge(node start = node(), node end = node()):\n    start(start), end(end), angle(atan2((start - end).y, (start - end).x)){}\n    bool operator < (const edge &b) const {//\u6781\u89d2\u6392\u5e8f\u7684\u6bd4\u8f83\n        if(fabs(angle - b.angle) <= eps) return cross(start, b.start, b.end) > 0;\n        return angle < b.angle;//\u6781\u89d2\u76f8\u540c\u7684\u4f18\u5148\u628a\u5de6\u8fb9\u7684\u653e\u5728\u524d\u9762\uff08\u5426\u5219\u53bb\u91cd\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4e00\u4e9b\u201c\u5c0f\u95ee\u9898\u201d\uff09\n    }\n} e[N], deq[N];\n\nnode getnode(edge a, edge b){//\u4e24\u76f4\u7ebf\u7684\u8ba1\u7b97\u4ea4\u70b9\n    double s1 = cross(a.start, b.end, a.end);\n    double s2 = cross(a.start, b.start, a.end);\n    return node((s1 * b.start.x - s2 * b.end.x) / (s1 - s2), (s1 * b.start.y - s2 * b.end.y) / (s1 - s2));\n}\nbool check(edge a, edge b, edge c){\n    node p = getnode(b, c);\n    return cross(p, a.start, a.end) < 0;//\u5224\u65adb,c\u76f4\u7ebf\u7684\u4ea4\u70b9\u662f\u5426\u5728a\u76f4\u7ebf\u7684\u53f3\u4fa7\n}\nvoid HalfPlane() {//\u534a\u5e73\u9762\u4ea4\n    sort(e + 1, e + cnt + 1);\n    tot = 1;\n    for(int i = 2; i <= cnt; i++)\n        if(fabs(e[i].angle - e[i - 1].angle) > eps)\n            e[++tot] = e[i];\n    int top = 2, back = 1;\n    deq[1] = e[1];\n    deq[2] = e[2];\n    for(int i = 3; i <= tot; i++){\n        while(back < top && check(e[i], deq[top], deq[top - 1])) top--;\n        while(back < top && check(e[i], deq[back], deq[back + 1])) back++;\n        deq[++top] = e[i];\n    }\n    while(back < top && check(deq[back], deq[top], deq[top - 1])) top--;\n    while(back < top && check(deq[top], deq[back], deq[back + 1])) back++;\n    for(int i = back; i < top; i++)\n        ans[i - back + 1] = getnode(deq[i], deq[i + 1]);\n    if(top - back + 1 > 2)//\u53ef\u80fd\u4f1a\u51fa\u73b0\u534a\u5e73\u9762\u4ea4\u7684\u9762\u79ef\u4e3a0\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u9700\u8981\u5224\u65ad\u662f\u5426\u67092\u6761\u4ee5\u4e0a\u7684\u76f4\u7ebf\u56f4\u51fa\u4e86\u534a\u5e73\u9762\u4ea4\n        ans[top - back + 1] = getnode(deq[top], deq[back]);\n    tot = top - back + 1;\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++){\n        int m; \n        scanf(\"%d\", &m);\n        for(int j = 1; j <= m; j++)\n            scanf(\"%lf%lf\", &nod[j].x, &nod[j].y);\n        for(int j = 1; j <= m; j++)\n            e[++cnt] = edge(nod[j], nod[j % m + 1]);\n    }\n    HalfPlane();\n    for(int i = 1; i <= tot; i++)\n        sum += cross(ans[i], ans[i % tot + 1]);//\u901a\u8fc7\u53c9\u79ef\u8ba1\u7b97\u9762\u79ef\n    printf(\"%.3lf\", fabs(sum) / 2);\n}\n/*\n*/\n```",
        "postTime": 1673493905,
        "uid": 661044,
        "name": "_saltFish_",
        "ccfLevel": 0,
        "title": "P4196 [CQOI2006]\u51f8\u591a\u8fb9\u5f62 /\u3010\u6a21\u677f\u3011\u534a\u5e73\u9762\u4ea4 \u9898\u89e3"
    },
    {
        "content": "## \u534a\u5e73\u9762\u4ea4\n\n\u5b9a\u4e49\uff1a\u5e73\u9762\u4e0a\u6709\u8bb8\u591a\u5411\u91cf\uff0c\u5bf9\u4e8e\u6bcf\u6761\u5411\u91cf\uff0c\u89c4\u5b9a\u53ea\u4fdd\u7559\u5411\u91cf\u7684\u5de6\u4fa7\u90e8\u5206\u7684\u5e73\u9762\u800c\u5220\u53bb\u53f3\u4fa7\u90e8\u5206\u7684\u5e73\u9762\uff0c\u5982\u6709\u82e5\u5e72\u6761\u76f4\u7ebf\u56f4\u6210\u51f8\u591a\u8fb9\u5f62\uff0c\u8fd9\u4e2a\u51f8\u591a\u8fb9\u5f62\u5c31\u662f\u8fd9\u4e9b\u82e5\u5e72\u5411\u91cf\u7684\u534a\u5e73\u9762\u4ea4\n\n- \u6ce8\uff1a\u5982\u679c\u9898\u76ee\u89c4\u5b9a\u4fdd\u7559\u53f3\u4fa7\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u6240\u6709\u8f93\u5165\u7684\u6709\u5411\u5411\u91cf\u7684\u65b9\u5411\u53d6\u53cd\u5373\u53ef\n\n- \u6240\u6709\u76f4\u7ebf\u4fdd\u7559\u540e\u7684\u4ea4\u96c6\n\n![image-20211027100950454](https://cdn.jsdelivr.net/gh/QiuHong-1202/FigureBed/2021/202110271009671.png)\n\n### \u7b97\u6cd5\u63cf\u8ff0\n\n1. \u5c06\u6240\u6709\u8fb9\u6309\u89d2\u5ea6\u6392\u5e8f\n   - \u4f7f\u7528 `atan2(y,x)` \u5f97\u5230\u89d2\u5ea6\u8303\u56f4\u5728 $(-\\pi,\\pi]$ \u4e4b\u95f4\u7684\u89d2\u5ea6\n2. \u5229\u7528\u53cc\u7aef\u961f\u5217\u5b58\u50a8\u76f4\u7ebf\uff0c\u6b63\u5411\u904d\u5386\u6240\u6709\u8fb9\n   - \u76f4\u7ebf\u7684\u5b58\u50a8\u65b9\u5f0f\u4e3a\u70b9\u5411\u5f0f $p+t\\vec{v}$ \uff08\u53c2\u6570\u65b9\u7a0b\uff09\n3. \u68c0\u67e5\u961f\u5c3e\u76f4\u7ebf\u548c\u961f\u5c3e\u524d\u4e00\u6761\u7684\u4ea4\u70b9\u662f\u5426\u5728\u5f53\u524d\u8fb9\u7684\u53f3\u8fb9\uff0c\u5982\u679c\u5728\u53f3\u8fb9\uff0c\u5219\u5c06\u961f\u5c3e\u5143\u7d20\u8e22\u51fa\u961f\u5217\n   - ![image-20211027102745944](https://cdn.jsdelivr.net/gh/QiuHong-1202/FigureBed/2021/202110271027027.png)\n4. \u5bf9\u4e8e\u961f\u5934\u91cd\u590d3\n   - ![image-20211027103030865](https://cdn.jsdelivr.net/gh/QiuHong-1202/FigureBed/2021/202110271030934.png)\n5. \u6700\u540e\u961f\u5217\u4e2d\u7684\u6240\u6709\u76f4\u7ebf\u5c31\u662f\u6784\u6210\u6700\u7ec8\u534a\u5e73\u9762\u4ea4\u7684\u8fb9\u96c6\n6. \u76f8\u90bb\u4e24\u8fb9\u7684\u4ea4\u70b9\u5c31\u662f\u6700\u7ec8\u534a\u5e73\u9762\u4ea4\u7684\u6240\u6709\u9876\u70b9\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a$O(n\\log n)$\n\n\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define LL long long\n#define debug(a) cout << #a << \" \" << a << endl\n#define de(a) cout << a << \" \"\n#define make_unique(x) sort((x).begin(), (x).end()); (x).erase(unique((x).begin(), (x).end()), (x).end())\n#define PII pair<int, int>\n#define fi first\n#define se second\nconst int maxn = 3000;\nconst int maxp = 3000;\nconst int N = 1e6 + 7, M = N * 2;\nconst int inf = 0x3f3f3f3f;\nconst long long INF = 0xFFFFFFFFFF;\nconst long long mod = 1e9 + 7;\nconst double eps = 1e-8;\n\ninline long long read();\n\n/*\n * \u5c06\u6240\u6709\u51f8\u5305\u62c6\u5f00,\u6c42\u51f8\u5305\u7684\u9762\u79ef\u4ea4\u76f8\u5f53\u4e8e\u6240\u6709\u6c42\u534a\u5e73\u9762\u4ea4\n */\n\nint sgn(double x) {\n    if (fabs(x) < eps)return 0;\n    if (x < 0)return -1;\n    else return 1;\n}\n\nstruct Point {\n    double x, y;\n\n    Point() {}\n\n    Point(double _x, double _y) {\n        x = _x;\n        y = _y;\n    }\n\n    Point operator-(const Point &b) const {\n        return Point(x - b.x, y - b.y);\n    }\n\n    double operator^(const Point &b) const {\n        return x * b.y - y * b.x;\n    }\n};\n\nstruct Line {\n    Point s, e;\n\n    //`\u6c42\u4e24\u76f4\u7ebf\u7684\u4ea4\u70b9`\n    //`\u8981\u4fdd\u8bc1\u4e24\u76f4\u7ebf\u4e0d\u5e73\u884c\u6216\u91cd\u5408`\n    Point crosspoint(Line v) {\n        double a1 = (v.e - v.s) ^ (s - v.s);\n        double a2 = (v.e - v.s) ^ (e - v.s);\n        return Point((s.x * a2 - e.x * a1) / (a2 - a1), (s.y * a2 - e.y * a1) / (a2 - a1));\n    }\n\n    //`\u4e24\u5411\u91cf\u5e73\u884c(\u5bf9\u5e94\u76f4\u7ebf\u5e73\u884c\u6216\u91cd\u5408)`\n    bool parallel(Line v) {\n        return sgn((e - s) ^ (v.e - v.s)) == 0;\n    }\n};\n\nstruct polygon {\n    int n;\n    Point p[maxp];\n    Line l[maxp];\n\n    //`\u5f97\u5230\u9762\u79ef`\n    double getarea() {\n        double sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += (p[i] ^ p[(i + 1) % n]);\n        }\n        return fabs(sum) / 2;\n    }\n};\n\nstruct halfplane : public Line {\n    double angle;\n\n    halfplane() {}\n\n    //`\u8868\u793a\u5411\u91cfs->e\u9006\u65f6\u9488(\u5de6\u4fa7)\u7684\u534a\u5e73\u9762`\n    halfplane(Point _s, Point _e) {\n        s = _s;\n        e = _e;\n    }\n\n    halfplane(Line v) {\n        s = v.s;\n        e = v.e;\n    }\n\n    void calcangle() {\n        angle = atan2(e.y - s.y, e.x - s.x);\n    }\n\n    bool operator<(const halfplane &b) const {\n        return angle < b.angle;\n    }\n\n\n};\n\n\nstruct halfplanes {\n    int n;\n    halfplane hp[maxp];\n    Point p[maxp];\n    int que[maxp];\n    int st, ed;\n\n    void push(halfplane tmp) {\n        hp[n++] = tmp;\n    }\n\n    //\u53bb\u91cd\n    void unique() {\n        int m = 1;\n        for (int i = 1; i < n; i++) {\n            if (sgn(hp[i].angle - hp[i - 1].angle) != 0)\n                hp[m++] = hp[i];\n            else if (sgn((hp[m - 1].e - hp[m - 1].s) ^ (hp[i].s - hp[m - 1].s)) > 0)\n                hp[m - 1] = hp[i];\n        }\n        n = m;\n    }\n\n    bool halfplaneinsert() {\n        for (int i = 0; i < n; i++)hp[i].calcangle();\n        sort(hp, hp + n);\n        unique();\n        que[st = 0] = 0;\n        que[ed = 1] = 1;\n        p[1] = hp[0].crosspoint(hp[1]);\n        for (int i = 2; i < n; i++) {\n            while (st < ed && sgn((hp[i].e - hp[i].s) ^ (p[ed] - hp[i].s)) < 0)ed--;\n            while (st < ed && sgn((hp[i].e - hp[i].s) ^ (p[st + 1] - hp[i].s)) < 0)st++;\n            que[++ed] = i;\n            if (hp[i].parallel(hp[que[ed - 1]]))return false;\n            p[ed] = hp[i].crosspoint(hp[que[ed - 1]]);\n        }\n        while (st < ed && sgn((hp[que[st]].e - hp[que[st]].s) ^ (p[ed] - hp[que[st]].s)) < 0)ed--;\n        while (st < ed && sgn((hp[que[ed]].e - hp[que[ed]].s) ^ (p[st + 1] - hp[que[ed]].s)) < 0)st++;\n        if (st + 1 >= ed)return false;\n        return true;\n    }\n\n    //`\u5f97\u5230\u6700\u540e\u534a\u5e73\u9762\u4ea4\u5f97\u5230\u7684\u51f8\u591a\u8fb9\u5f62`\n    //`\u9700\u8981\u5148\u8c03\u7528halfplaneinsert() \u4e14\u8fd4\u56detrue`\n    void getconvex(polygon &con) {\n        p[st] = hp[que[st]].crosspoint(hp[que[ed]]);\n        con.n = ed - st + 1;\n        for (int j = st, i = 0; j <= ed; i++, j++)\n            con.p[i] = p[j];\n    }\n};\n\nint n, m;\nLine line;\nhalfplanes hfs;\npolygon poly;\n\nvoid solve() {\n    scanf(\"%d\", &n);\n    int cnt = 0;\n    Point point[maxp];\n    for (int cas = 1; cas <= n; cas++) {\n        scanf(\"%d\", &m);\n        double x, y;\n        //\u8bfb\u5165\u9006\u65f6\u9488\u65b9\u5411\u8f93\u5165\u7684\u70b9\n        for (int i = 1; i <= m; i++) {\n            scanf(\"%lf%lf\", &x, &y);\n            point[i] = {x, y};\n        }\n        //\u6784\u6210\u76f4\u7ebf\n        for (int i = 1; i <= m; i++) {\n            Point s, e;\n            s = point[i];\n            if (i == m) e = point[1];\n            else e = point[i + 1];\n            line = {s, e};\n            halfplane hf = halfplane(line);\n            hfs.push(hf);\n        }\n    }\n//    hfs.unique();\n    if (hfs.halfplaneinsert()) {\n        hfs.getconvex(poly);\n        printf(\"%.3lf\", poly.getarea());\n    }\n    else {\n        printf(\"0.000\");\n    }\n\n\n}\n\nint main() {\n#ifdef LOCAL\n    int begin_time = clock();\n    freopen(\"../input.txt\", \"r\", stdin);\n//    freopen(\"../output.txt\", \"w\", stdout);\n#endif\n\n//\tios::sync_with_stdio(false); //\u4f7f\u7528read\u548ccout\u65f6\u4e0d\u80fd\u89e3\u9664\u6d41\u540c\u6b65\n    int T = 1;\n//    T = read();\n    for (int cas = 1; cas <= T; cas++) {\n#ifdef LOCAL\n        printf(\"Case #%d: \\n\", cas);\n#endif\n        solve();\n    }\n\n#ifdef LOCAL\n    int end_time = clock();\n    printf(\"\\nRun time: %.2lf ms\", (double) (end_time - begin_time) / CLOCKS_PER_SEC * 1000);\n#endif\n\n    return 0;\n}\n\n/*\n\u6570\u7ec4\u5f00\u591f\u4e86\u5417\n\u521d\u59cb\u5316\u4e86\u5417\n*/\n\ninline long long read() {\n    char ch_read = getchar();\n    long long p_read = 1, data_read = 0;\n    while (ch_read < '0' || ch_read > '9') {\n        if (ch_read == '-') p_read = -1;\n        ch_read = getchar();\n    }\n    while (ch_read >= '0' && ch_read <= '9') {\n        data_read = data_read * 10 + (ch_read ^ 48);\n        ch_read = getchar();\n    }\n    return p_read * data_read;\n}\n```",
        "postTime": 1635305213,
        "uid": 333793,
        "name": "\u5e7c\u513f\u7b97\u6570",
        "ccfLevel": 0,
        "title": "[\u6a21\u677f] \u6c42\u534a\u5e73\u9762\u4ea4\u7684\u51f8\u591a\u8fb9\u5f62\u7684\u9762\u79ef"
    },
    {
        "content": "## \u534a\u5e73\u9762\u4ea4\n\n### 0.\u524d\u8a00\n\n\u5173\u4e8e\u6211\u5199\u4ee3\u7801\u7684\u4e00\u4e9b\u4e60\u60ef\u4e0e\u58f0\u660e\uff1a\n\n```\ntypedef pair<double, double> PDD;\n\n#define x first\n#define y second\n\nstruct Line {\n    PDD st, ed;\n}line[N];\n\nPDD operator - (PDD a,  PDD b) {\n    return {a.x - b.x, a.y - b.y};\n}\n```\n\n### 1.\u524d\u7f6e\u77e5\u8bc6\n\n**1.1 \u9ad8\u4e2d\u5e73\u9762\u5411\u91cf\u76f8\u5173\u77e5\u8bc6**\n\n**1.2 \u5411\u91cf\u53c9\u79ef (cross)** \n\n1.2.1 \u51e0\u4f55\u610f\u4e49\uff1a\u7531\u4e24\u4e2a\u5411\u91cf\u56f4\u6210\u5e73\u884c\u56db\u8fb9\u5f62\u7684**\u6709\u5411**\u9762\u79ef\u3002\n\n1.2.2 \u89c4\u5b9a\uff1a\u7b2c\u4e8c\u4e2a\u5411\u91cf\u5728\u7b2c\u4e00\u4e2a\u5411\u91cf\u7684\u9006\u65f6\u9488\u65b9\u5411\u4e3a\u6b63\uff0c\u987a\u65f6\u9488\u65b9\u5411\u4e3a\u8d1f\u3002 \n\n```\ndouble cross(PDD a, PDD b) {\n    return a.x * b.y - a.y * b.x;\n}\n\ndouble area(PDD a, PDD b, PDD c) {\n    return cross(b - a, c - a);\n}\n```\n\n**1.3 \u6c42\u76f4\u7ebf\u4ea4\u70b9 (get line intersection)**\n\n\u8bbe\u4ea4\u70b9\u4e3a $p + t \\times \\vec{v}$\u3002\n\n\u4ee4 $\\vec{u} = p - q$\uff0c\n\n\u6839\u636e\u4e09\u89d2\u5f62\u76f8\u4f3c\uff0c\u4e0d\u96be\u5f97\u51fa $t = \\frac{\\vec{w} \\times \\vec{u}}{\\vec{v} \\times \\vec{w}}$\u3002\n\n```\nPDD gli(PDD p, PDD v, PDD q, PDD w) {\n    auto u = p - q;\n    double t = cross(w, u) / cross(v, w);\n    return {p.x + v.x * t, p.y + v.y * t};\n}\n\nPDD gli(Line a, Line b) {\n    return gli(a.st, a.ed - a.st, b.st, b.ed - b.st);\n}\n```\n\n**1.4 \u5224\u65ad\u4e24\u76f4\u7ebf\u4ea4\u70b9\u662f\u5426\u5728\u53e6\u4e00\u76f4\u7ebf\u53f3\u4fa7**\n\n\u8bbe\u4e24\u76f4\u7ebf\u4ea4\u70b9\u4e3a $o$\u3002\n\n\u5224\u65ad\u8fd9\u6761\u76f4\u7ebf\u4e0a\u7684\u4efb\u4e00\u6761\u7ebf\u6bb5\u548c\u8fd9\u4e2a\u4ea4\u70b9\u56f4\u6210\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u7b26\u53f7\u5373\u53ef\u3002\n\n```\nbool on_right(Line a, Line b, Line c) {\n    auto o = gli(b, c);\n    return sign(area(a.st, a.ed, o)) <= 0;\n}\n```\n\n**1.5 \u6c42\u67d0\u6761\u76f4\u7ebf\u4e0e\u6c34\u5e73\u65b9\u5411\u7684\u5939\u89d2**\n\n\u8bbe\u8fd9\u6761\u76f4\u7ebf\u4e0a\u7684\u67d0\u4e2a\u70b9\u4e3a $(x, y)$\uff0c\u4e0e\u6c34\u5e73\u65b9\u5411\u7684\u5939\u89d2\u4e3a $\\alpha$\u3002\n\n$\\tan \\alpha = \\frac{y}{x}$\uff0c\n\n$\\alpha = \\arctan(\\frac{y}{x})$\u3002\n\n\u4f7f\u7528 ```cmath``` \u5e93\u4e2d\u7684 ```atan2``` \u51fd\u6570\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2a\u51fd\u6570\u5728\u8c03\u7528\u65f6\u5148\u4f20\u7eb5\u5750\u6807\uff0c\u518d\u4f20\u6a2a\u5750\u6807\u3002\n\n```\ndouble get_angle(Line a) {\n    return atan2(a.ed.y - a.st.y, a.ed.x - a.st.x);\n}\n```\n\n### 2.\u534a\u5e73\u9762 \u534a\u5e73\u9762\u4ea4\n\n**2.1 \u534a\u5e73\u9762**\n\n\u4e00\u4e2a\u5411\u91cf\u628a\u5e73\u9762\u5206\u6210\u4e86\u5de6\u3001\u53f3\u4e24\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u5de6\uff08\u53f3\uff09\u90e8\u5206\u7684\u96c6\u5408\u79f0\u4f5c\u534a\u5e73\u9762\u3002\n\n\u8fd9\u91cc\u7684\u5de6\u662f\u6307\u4ee5\u5411\u91cf\u7684\u65b9\u5411\u4e3a\u5411\u524d\u7684\u5de6\u8fb9\u3002\n\n**2.2 \u534a\u5e73\u9762\u4ea4** \n\n\u8bb8\u591a\u5411\u91cf\u7684\u534a\u5e73\u9762\u7684\u4ea4\u96c6\u79f0\u4f5c\u534a\u5e73\u9762\u4ea4\u3002\n\n\u6211\u4eec\u628a\u9898\u76ee\u7ed9\u7684\u51f8\u591a\u8fb9\u5f62\u6309\u9006\u65f6\u9488\u6807\u5b9a\u65b9\u5411\uff0c\u6240\u6c42\u5373\u4e3a\u6240\u6709\u5411\u91cf\u7684\u534a\u5e73\u9762\u4ea4\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\u3002\n\n\u6bd4\u5982\u6211\u4eec\u8981\u6c42\u4e00\u4e2a\u7ed9\u5b9a\u4e09\u8fb9\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1vvzzcvm.png?x-oss-process=image/resize,m_lfit,h_200,w_200)\n![](https://cdn.luogu.com.cn/upload/image_hosting/plxx0ur6.png?x-oss-process=image/resize,m_lfit,h_200,w_200)\n![](https://cdn.luogu.com.cn/upload/image_hosting/ljo3wpet.png?x-oss-process=image/resize,m_lfit,h_200,w_200)\n\n\u7ef4\u62a4\u4e09\u6761\u76f4\u7ebf\uff0c\u6c42\u4ed6\u4eec\u7684\u534a\u5e73\u9762\u4ea4\u5373\u53ef\u3002\n\n\u672c\u9898\u6837\u4f8b\u5982\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bkjdv01o.png?x-oss-process=image/resize,m_lfit,h_200,w_200)\n\n### 3.\u7b97\u6cd5\u6d41\u7a0b\n\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u7ed9\u5b9a\u7684\u6240\u6709\u76f4\u7ebf\u6309\u7167\u4e0e\u6c34\u5e73\u9762\u7684\u5939\u89d2\u6392\u5e8f\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\u7ef4\u62a4\u6240\u6709\u7684\u76f4\u7ebf\u3002\n\n\u5982\u4f55\u7ef4\u62a4\uff1f\u6216\u8005\u8bf4\uff0c\u5f53\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u4e0d\u518d\u9700\u8981\u961f\u5217\u4e2d\u7684\u67d0\u6761\u76f4\u7ebf\u4e86\uff1f\n\n\u9996\u5148\uff0c\u5982\u679c\u6709\u5e73\u884c\u7684\u76f4\u7ebf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b83\u4eec\u4e4b\u4e2d\u9760\u5de6\u7684\u90a3\u6761\u3002\n\n\u5176\u4ed6\u7684\u66f4\u65b0\u65b9\u5f0f\uff0c\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002\u6211\u4eec\u4ee5\u9ed1\u8272\u8868\u793a\u961f\u5217\u4e2d\u539f\u6709\u7684\u76f4\u7ebf\uff0c\u84dd\u8272\u8868\u793a\u679a\u4e3e\u5230\u7684\u7528\u6765\u66f4\u65b0\u7684\u76f4\u7ebf\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vv2t6q3j.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u8fd9\u4e2a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u4e0d\u518d\u9700\u8981\u961f\u5c3e\u7684\u76f4\u7ebf\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/h71behqa.png?x-oss-process=image/resize,m_lfit,h_200,w_225)\n\n\u800c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5219\u9700\u8981\u4fdd\u7559\u961f\u5c3e\u7684\u76f4\u7ebf\u3002\n\n\u7a0d\u52a0\u603b\u7ed3\uff0c\u4e0d\u96be\u5f97\u5230\uff1a\u770b\u961f\u5185\u4e24\u6761\u76f4\u7ebf\u7684\u4ea4\u70b9\u5728\u65b0\u7684\u76f4\u7ebf\u7684\u5de6\u4fa7\u8fd8\u662f\u53f3\u4fa7\u5373\u53ef\u3002\u82e5\u5728\u53f3\u4fa7\uff0c\u5219\u6211\u4eec\u4e0d\u518d\u9700\u8981\u961f\u5c3e\u76f4\u7ebf\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f39\u51fa\u3002\n\n\u66f4\u65b0\u961f\u5934\u65b9\u5f0f\u540c\u7406\u3002\u6700\u540e\u8fd8\u8981\u7528\u961f\u5934\u66f4\u65b0\u4e00\u4e0b\u961f\u5c3e\u3002\n\n\u6ce8\u610f\uff0c\u5f53\u4e09\u7ebf\u4ea4\u4e8e\u4e00\u70b9\u65f6\u5e94\u5f53\u5982\u4f55\u53d6\u820d\uff0c\u5e94\u5f53\u6839\u636e\u9898\u5e72\u800c\u5b9a\u3002\u672c\u9898\u4e2d\u8fd9\u79cd\u60c5\u51b5\u5bf9\u6700\u540e\u7684\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5f39\u51fa\u3002\n\n```\ndouble calc() {\n    sort(line, line + cnt, cmp);\n    int hh = 0, tt = -1;\n    rep(i, 0, cnt - 1) {\n        if(i && !dcmp(get_angle(line[i]), get_angle(line[i - 1]))) continue;\n        while(hh + 1 <= tt && on_right(line[i], line[q[tt - 1]], line[q[tt]])) -- tt;\n        while(hh + 1 <= tt && on_right(line[i], line[q[hh]], line[q[hh + 1]])) ++ hh;\n        q[ ++ tt] = i;\n    }\n    while(hh + 1 <= tt && on_right(line[q[hh]], line[q[tt - 1]], line[q[tt]])) -- tt;\n    \n    q[ ++ tt] = q[hh];\n    int k = 0;\n    rep(i, hh, tt - 1) \n        ans[k ++ ] = gli(line[q[i]], line[q[i + 1]]);\n    double res = 0;\n    rep(i, 1, k - 2) \n        res += area(ans[0], ans[i], ans[i + 1]);\n    return res / 2;\n} \n```\n\n### 4.\u4ee3\u7801\n\n\u64cd\u4f5c\u6838\u5fc3\u4ee3\u7801\u5728\u4e0a\u9762\u5df2\u7ecf\u7ed9\u51fa\u3002[\u5b8c\u6574\u4ee3\u7801\u3002](https://www.luogu.com.cn/paste/ctn717jz)",
        "postTime": 1684145261,
        "uid": 477674,
        "name": "Lagerent",
        "ccfLevel": 0,
        "title": "P4196 [CQOI2006]\u51f8\u591a\u8fb9\u5f62 /\u3010\u6a21\u677f\u3011\u534a\u5e73\u9762\u4ea4 \u9898\u89e3"
    },
    {
        "content": "# Description\n\n[P4196 [CQOI2006]\u51f8\u591a\u8fb9\u5f62 /\u3010\u6a21\u677f\u3011\u534a\u5e73\u9762\u4ea4](https://www.luogu.com.cn/problem/P4196)$~\\&~$[\u9898\u9762 $\\LaTeX$ \u4fee\u7f2e](https://www.luogu.com.cn/paste/w9j9i7n5)\n\n\u9006\u65f6\u9488\u7ed9\u51fa $n$ \u4e2a\u51f8\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5750\u6807\uff0c\u6c42\u5b83\u4eec\u4ea4\u7684\u9762\u79ef\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$2 \\leq n \\leq 10$\uff0c$3 \\leq m_i \\leq 50$\u3002\u4fdd\u8bc1\u6bcf\u7ef4\u5750\u6807\u4e3a $[-1000,1000]$ \u5185\u7684\u6574\u6570\u3002\n\n# Analysis\n\n\u534a\u5e73\u9762\u4ea4\u6a21\u677f\u9898\u3002\n\n\u5bf9\u4e8e\u66b4\u529b\u534a\u5e73\u9762\u4ea4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O(n^2)}$\uff0c\u672c\u9898\u5e94\u8be5\u53ef\u4ee5\u8fc7\u3002\n\n\u8fd9\u91cc\u8bb2\u89e3\u4e00\u4e0b\u7528\u53cc\u7aef\u961f\u5217\u6c42\u534a\u5e73\u9762\u4ea4\u7684\u65b9\u6cd5\uff1a\n\n- \u9996\u5148\uff0c\u4e0d\u59a8\u8bbe\u76f4\u7ebf\u7684\u53f3\u4fa7\u4e3a\u534a\u5e73\u9762\uff0c\u90a3\u4e48\u628a\u6240\u6709\u534a\u5e73\u9762\u6309\u7167\u76f4\u7ebf\u7684\u6781\u89d2\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6781\u89d2\u76f8\u540c\u7684\u4ec5\u4fdd\u7559\u9650\u5236\u6761\u4ef6\u6700\u4e25\u683c\u7684\uff0c\u5373\u6700\u53f3\u4fa7\u7684\u3002\n\n- \u63a5\u4e0b\u6765\uff0c\u5229\u7528\u6392\u5e8f\u53bb\u91cd\u4ee5\u540e\uff0c\u626b\u63cf\u4e00\u904d\u6240\u6709\u76f4\u7ebf\uff0c\u5224\u65ad\u961f\u5c3e\u4ea4\u70b9\u548c\u961f\u5934\u4ea4\u70b9\u5206\u522b\u662f\u5426\u5728\u5f53\u524d\u76f4\u7ebf\u5de6\u7aef\uff0c\u82e5\u5728\uff0c\u5c31\u8e22\u51fa\u53cc\u7aef\u961f\u5217\u3002\u7136\u540e\u518d\u628a\u5f53\u524d\u534a\u5e73\u9762\u538b\u5165\u53cc\u7aef\u961f\u5217\u961f\u5c3e\u3002\n\n- \u6700\u540e\uff0c\u961f\u5c3e\u7684\u4ea4\u70b9\u4e0e\u961f\u9996\u53ef\u80fd\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u56e0\u6b64\u8fd8\u8981\u8e22\u6389\u961f\u5c3e\u4e0d\u5408\u6cd5\u7684\u90e8\u5206\u3002\n\n\u6c42\u9762\u79ef\u7684\u8bdd\u76f4\u63a5\u4e0a\u53c9\u79ef\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3a $\\mathcal{O(n \\log n)}$\u3002\n\n# Code\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define eps 1e-9\n#define N 510\nusing namespace std;\nstruct point\n{\n    double x , y;\n    point() {}\n    point(double a , double b) {x = a , y = b;}\n    point operator+(const point &a)const {return point(x + a.x , y + a.y);}\n    point operator-(const point &a)const {return point(x - a.x , y - a.y);}\n    point operator*(const double &a)const {return point(a * x , a * y);}\n}p[N];\nstruct line\n{\n    point p , v;\n    double ang;\n}a[N] , q[N] , c[N];\ninline double cross(point a , point b) {return a.x * b.y - a.y * b.x;}\ninline bool left(line a , point b) {return cross(a.v , b - a.p) > eps;}\ninline point inter(line a , line b)\n{\n    point u = a.p - b.p;\n    double tmp = cross(b.v , u) / cross(a.v , b.v);\n    return a.p + a.v * tmp;\n}\nbool cmp(const line &a , const line &b)\n{\n    return fabs(a.ang - b.ang) < eps ? left(a , b.p) : a.ang < b.ang;\n}\nint main()\n{\n    int n , i , j , m , cnt = 0 , tot = 1 , l = 1 , r = 1;\n    double ans = 0;\n    scanf(\"%d\" , &n);\n    for(i = 1 ; i <= n ; i ++ )\n    {\n        scanf(\"%d\" , &m);\n        for(j = 1 ; j <= m ; j ++ ) scanf(\"%lf%lf\" , &p[j].x , &p[j].y);\n        for(j = 1 ; j <= m ; j ++ ) a[++cnt].p = p[j] , a[cnt].v = p[j] - p[j % m + 1] , a[cnt].ang = atan2(a[cnt].v.y , a[cnt].v.x);\n    }\n    sort(a + 1 , a + cnt + 1 , cmp);\n    for(i = 2 ; i <= cnt ; i ++ )\n        if(fabs(a[i].ang - a[i - 1].ang) > eps)\n            a[++tot] = a[i];\n    q[1] = a[1];\n    for(i = 2 ; i <= tot ; i ++ )\n    {\n        while(l < r && left(a[i] , p[r - 1])) r -- ;\n        while(l < r && left(a[i] , p[l])) l ++ ;\n        q[++r] = a[i];\n        if(l < r) p[r - 1] = inter(q[r - 1] , q[r]);\n    }\n    while(l < r && left(q[l] , p[r - 1])) r -- ;\n    p[r] = inter(q[l] , q[r]) , p[r + 1] = p[l];\n    for(i = l ; i <= r ; i ++ ) ans += cross(p[i] , p[i + 1]);\n    printf(\"%.3lf\\n\" , ans / 2);\n    return 0;\n}\n```",
        "postTime": 1672733249,
        "uid": 897776,
        "name": "Infinite_Eternity",
        "ccfLevel": 0,
        "title": "P4196 [CQOI2006]\u51f8\u591a\u8fb9\u5f62 /\u3010\u6a21\u677f\u3011\u534a\u5e73\u9762\u4ea4"
    },
    {
        "content": "**(\u53c2\u8003\u81ea\u300a\u4fe1\u606f\u5b66\u5965\u8d5b\u4e4b\u6570\u5b66\u4e00\u672c\u901a\u300b\uff09**\n\n\u672c\u9898\u4e2d\u53ea\u8981\u628a\u6bcf\u6761\u8fb9\u5f53\u4f5c\u534a\u5e73\u9762\uff0c\u628a\u6bcf\u4e2a\u591a\u8fb9\u5f62\u7684\u6bcf\u6761\u8fb9\u505a\u534a\u5e73\u9762\u4ea4\u5373\u53efAC\u3002\u6570\u636e\u8303\u56f4\u8f83\u5c0f\uff0c\u4e0d\u5fc5\u5bb3\u6015\u8d85\u65f6\u3002\n\n## **\u534a\u5e73\u9762\u4ea4\u7684\u5b9a\u4e49\u548c\u5b9e\u73b0\u65b9\u6cd5**\n\n\u76f4\u7ebf\u5e38\u7528\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0bax+by+c=0\u8868\u793a\uff0c\u6211\u4eec\u628a\u5e73\u9762\u4e0a\u7684\u76f4\u7ebf\u53ca\u5176\u4e00\u4fa7\u7684\u90e8\u5206\u79f0\u4e3a**\u534a\u5e73\u9762**\u3002\u534a\u5e73\u9762\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\u53ef\u7531\u4e0d\u7b49\u5f0fax+by+c\u2265\uff08\u6216\u2264\uff090\u8868\u793a\u3002\n\n\u7ed9\u5b9an\u4e2a\u5f62\u5982ax+by+c\u22640\u7684\u534a\u5e73\u9762\uff0c\u627e\u5230\u6240\u6709\u6ee1\u8db3\u5b83\u4eec\u7684\u70b9\u6240\u7ec4\u6210\u7684\u70b9\u96c6\uff0c\u79f0\u4e3a**\u534a\u5e73\u9762\u4ea4**\u3002\n\n\u534a\u5e73\u9762\u548c\u534a\u5e73\u9762\u4ea4\u5177\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n\uff081\uff09\u534a\u5e73\u9762\u6216\u534a\u5e73\u9762\u4ea4\u662f\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\u533a\u57df\uff0c\u53ef\u80fd\u65e0\u8fb9\u754c\uff0c\u6b64\u65f6\u589e\u52a04\u4e2a\u534a\u5e73\u9762\u5c31\u80fd\u4fdd\u8bc1\u9762\u79ef\u6709\u754c\uff1b\n\n\uff082\uff09n\u4e2a\u534a\u5e73\u9762\u7684\u4ea4\u662f\u4e00\u4e2a\u81f3\u591an\u6761\u8fb9\u7684\u51f8\u591a\u8fb9\u5f62\u3002\n\n\u76f8\u4ea4\u540e\u7684\u533a\u57df\u53ef\u80fd\u662f\u76f4\u7ebf\u3001\u5c04\u7ebf\u3001\u7ebf\u6bb5\u6216\u8005\u70b9\uff0c\u751a\u81f3\u4e5f\u6709\u53ef\u80fd\u662f\u7a7a\u96c6\u3002\n\n\u6211\u4eec\u5148\u6765\u7814\u7a76\u4e24\u4e2a\u51f8\u591a\u8fb9\u5f62\u4ea4\u7684\u95ee\u9898\u3002\n\n\u9996\u5148\uff0c\u4e24\u4e2a\u51f8\u591a\u8fb9\u5f62\u7684\u4ea4\u8fd8\u662f\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\uff0c\u4e00\u822c\u91c7\u7528**\u5e73\u9762\u626b\u63cf\u6cd5**\u6765\u6c42\u4e24\u4e2a\u51f8\u591a\u8fb9\u5f62\u7684\u4ea4\u3002\u5e73\u9762\u626b\u63cf\u6cd5\u7684\u4e3b\u8981\u601d\u60f3\u662f\uff1a\u4ee5\u4e24\u4e2a\u51f8\u591a\u8fb9\u5f62\u8fb9\u7684\u4ea4\u70b9\u4f5c\u4e3a\u5206\u754c\u70b9\uff0c\u5c06\u8fb9\u5206\u4e3a\u5185\u3001\u5916\u4e24\u79cd\uff0c\u5185\u8fb9\u4e92\u76f8\u8fde\u63a5\uff0c\u6210\u4e3a\u6240\u6c42\u7684\u591a\u8fb9\u5f62\u3002\n\n\u5047\u8bbe\u6709\u4e00\u6761\u5782\u76f4\u7684\u626b\u63cf\u7ebf\uff0c\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u626b\u63cf\u3002\u4efb\u4f55\u65f6\u5019\uff0c\u626b\u63cf\u7ebf\u548c\u4e24\u4e2a\u591a\u8fb9\u5f62\u90fd\u81f3\u591a\u67094\u4e2a\u4ea4\u70b9\u3002\u6211\u4eec\u79f0\u88ab\u626b\u63cf\u5230\u7684\u5750\u6807x\u4e3ax\u4e8b\u4ef6\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e0d\u80fd\u626b\u63cf\u6240\u6709\u6709\u7406\u6570\u3002\u4f46\u663e\u7136\uff0c\u6211\u4eec\u80fd\u77e5\u9053\u4e0b\u4e00\u4e2ax\u65f6\u95f4\u5c06\u4f1a\u5728\u5f53\u524d\u6240\u626b\u5230\u7684\u591a\u8fb9\u5f62\u7684\u4e24\u6761\u8fb9\u548c\u5782\u76f4\u626b\u63cf\u7ebf\u7684\u4e0a\u4e0b\u4e24\u90e8\u5206\u8fd9\u56db\u6761\u7ebf\u6bb5\u7684\u65ad\u70b9\u548c\u8fd9\u56db\u6761\u7ebf\u6bb5\u7684\u4e24\u4e24\u4e4b\u95f4\u7684\u4ea4\u70b9\u4e2d\u9009\u51fa\u3002\u6574\u4e2a\u626b\u63cf\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002\n\n\u5982\u679c\u6c42N\u4e2a\u534a\u5e73\u9762\u7684\u4ea4\uff0c\u5219\u901a\u5e38\u4f7f\u7528\u57fa\u4e8e\u5206\u6cbb\u601d\u60f3\u7684**D&C\u7b97\u6cd5**\uff0c\u5206\u4e3a3\u4e2a\u6b65\u9aa4\uff1a\n\n\u7b2c\u4e00\u6b65\uff0c\u628an\u4e2a\u534a\u5e73\u9762\u5206\u6210\u4e24\u4e2an/2\u4e2a\u534a\u5e73\u9762\u7684\u96c6\u5408\uff1b\n\n\u7b2c\u4e8c\u6b65\uff0c\u628a\u4e24\u4e2a\u5b50\u96c6\u5408\u9012\u5f52\u6c42\u89e3\u534a\u5e73\u9762\u4ea4\uff1b\n\n\u7b2c\u4e09\u6b65\uff0c\u628a\u524d\u4e00\u6b65\u7b97\u51fa\u6765\u7684\u4e24\u4e2a\u534a\u5e73\u9762\u4ea4\u5229\u7528\u5e73\u9762\u626b\u63cf\u53d1\u6c42\u89e3\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n log n)\u3002\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u6709\u4e00\u79cd\u66f4\u4f18\u7684\u7b97\u6cd5\uff1a**\u6392\u5e8f\u589e\u91cf\u7b97\u6cd5**\u3002\n\n\u5148\u5b9a\u4e49\u4e00\u4e2a\u534a\u5e73\u9762\u7684\u6781\u89d2\uff1a\u6bd4\u5982x-y\u2265\u5e38\u6570\u7684\u5e73\u9762\uff0c\u5b9a\u4e49\u5b83\u7684\u6781\u89d2\u4e3a\u03c0/4\u3002\n\n\u6392\u5e8f\u589e\u91cf\u7b97\u6cd5\u5171\u6709\u4ee5\u4e0b4\u4e2a\u6b65\u9aa4\uff1a\n\n\uff081\uff09\u628a\u534a\u5e73\u9762\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u6781\u89d2\u8303\u56f4\u4e4b\u5185\u7684\uff08-1/2\u03c0\uff0c1/2\u03c0\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u8303\u56f4\u4e4b\u5916\u7684\uff08-\u03c0\uff0c-1/2\u03c0\uff09\u548c\uff081/2\u03c0\uff0c\u03c0\uff09\u3002\u5728\u6b64\u6240\u6709\u533a\u95f4\u90fd\u662f\u5de6\u5f00\u53f3\u95ed\u7684\uff0c\u4e0b\u540c\u3002\n\n\uff082\uff09\u8003\u8651\uff08-1/2\u03c0\u548c1/2\u03c0\uff09\u7684\u534a\u5e73\u9762\uff0c\u628a\u5b83\u4eec\u6309\u6781\u89d2\u6392\u5e8f\u3002\u5bf9\u6781\u89d2\u76f8\u540c\u7684\u534a\u5e73\u9762\uff0c\u6839\u636e\u5e38\u6570\u9879\u4fdd\u7559\u5176\u4e2d\u7684\u4e00\u4e2a\u3002\n\n\uff083\uff09\u4ece\u6392\u5e8f\u540e\u6781\u89d2\u6700\u5c0f\u7684\u4e24\u4e2a\u534a\u5e73\u9762\u5f00\u59cb\uff0c\u6c42\u51fa\u5b83\u4eec\u7684\u4ea4\u70b9\u5e76\u5c06\u5b83\u4eec\u538b\u5165\u4e00\u4e2a\u6808\u3002\u6bcf\u6b21\u6309\u7167\u6781\u89d2\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u589e\u52a0\u4e00\u4e2a\u534a\u5e73\u9762\uff0c\u7b97\u51fa\u5b83\u4e0e\u6808\u9876\u534a\u5e73\u9762\u7684\u4ea4\u70b9\u3002\u5982\u679c\u5f53\u524d\u7684\u4ea4\u70b9\u5728\u6808\u9876\u4e24\u4e2a\u534a\u5e73\u9762\u4ea4\u70b9\u7684\u53f3\u8fb9\uff0c\u5219\u8ba9\u5b83\u51fa\u6808\u3002\u6ce8\u610f\u51fa\u6808\u5e76\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u6b21\uff0c\u8981\u7ee7\u7eed\u8fdb\u884c\u4ea4\u70b9\u68c0\u67e5\uff0c\u5982\u679c\u8fd8\u6709\u5728\u53f3\u8fb9\u7684\u8981\u7ee7\u7eed\u51fa\u6808\uff0c\u76f4\u5230\u5f53\u524d\u4ea4\u70b9\u5728\u6808\u9876\u4ea4\u70b9\u7684\u5de6\u8fb9\u3002\n\n\uff084\uff09\u76f8\u90bb\u534a\u5e73\u9762\u7684\u4ea4\u70b9\u7ec4\u6210\u534a\u4e2a\u51f8\u591a\u8fb9\u5f62\uff0c\u5219\u6211\u4eec\u6709\u4e24\u4e2a\u70b9\u96c6\uff1a\uff08-1/2\u03c0\uff0c1/2\u03c0\uff09\u662f\u4e0a\u534a\u4e2a\uff0c\uff08-\u03c0\uff0c-1/2\u03c0\uff09\u548c\uff081/2\u03c0\uff0c\u03c0\uff09\u662f\u4e0b\u534a\u4e2a\u3002\n\n\u521d\u59cb\u7684\u65f6\u5019\uff0c\u6709\u56db\u4e2a\u6307\u9488p1\u3001p2\u3001p3\u548cp4\u5206\u522b\u6307\u5411\u4e0a\u4e0b\u51f8\u58f3\u7684\u5de6\u53f3\u7aef\uff0cp1\u548cp3\u5411\u53f3\u8d70\uff0cp2\u548cp4\u5411\u5de6\u8d70\u3002\n\n\u5728\u4efb\u610f\u65f6\u523b\uff0c\u5982\u679c\u6700\u5de6\u8fb9\u7684\u4ea4\u70b9\u4e0d\u6ee1\u8db3p1\u6216p3\u6240\u5728\u7684\u534a\u5e73\u9762\u7684\u9650\u5236\uff0c\u8fd9\u4e2a\u4ea4\u70b9\u5c31\u9700\u8981\u88ab\u5220\u9664\uff0cp1\u6216p3\u8d70\u5411\u5b83\u53f3\u8fb9\u7684\u76f8\u90bb\u8fb9\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u5730\u5904\u7406\u53f3\u8fb9\u7684\u4ea4\u70b9\uff0c\u91cd\u590d\u8fd0\u4f5c\u76f4\u5230\u4e0d\u518d\u6709\u66f4\u65b0\u51fa\u73b0\u3002\n\n\u6392\u5e8f\u589e\u91cf\u7b97\u6cd5\u9664\u4e86\u7b2c\u4e8c\u6b65\u7684\u6392\u5e8f\u4e4b\u5916\u90fd\u662f\u7ebf\u6027\u7684\uff0c\u7b2c\u4e8c\u6b65\u901a\u5e38\u4f7f\u7528\u5feb\u901f\u6392\u5e8f\uff0c\u5219\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n log n)\uff0c\u5982\u679c\u91c7\u7528\u57fa\u6570\u6392\u5e8f\u5219\u4e3aO(n)\u3002\u8be5\u7b97\u6cd5\u7684\u5e38\u6570\u8fdc\u5c0f\u4e8eD&C\u7b97\u6cd5\uff0c\u4e14\u7f16\u5199\u4e5f\u66f4\u5bb9\u6613\uff0c\u6240\u4ee5\u4e00\u822c\u6765\u8bf4\u5747\u91c7\u7528\u6b64\u7b97\u6cd5\u5b9e\u73b0\u3002\n\n## **Code C++**\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nconst double eps=1e-13;\nstruct point\n{\n    double x,y;\n    point operator -(point &s)\n    {\n        return (point){x-s.x,y-s.y};\n    }\n};\ndouble operator *(point a,point b)\n{\n    return a.x*b.y-a.y*b.x;\n}\nstruct line\n{\n    double d;\n    point a,b;\n}l[1005];\nbool cmpd(line a,line b)\n{\n    return a.d<b.d;\n}\nbool bian(point Q,point P1,point P2)\n{\n    return fabs((Q-P1)*(P2-P1)<eps&&min(P1.x,P2.x)-eps<=Q.x&&Q.x-eps<=max(P1.x,P2.x)&&min(P1.y,P2.y)-eps<=Q.y&&Q.y-eps<=max(P1.y,P2.y));\n}\npoint crosp(line a,line b)\n{\n    double s1=(b.a-a.a)*(a.b-a.a),s2=(a.b-a.a)*(b.b-a.a);\n    return (point){(b.a.x*s2+s1*b.b.x)/(s1+s2),(b.a.y*s2+s1*b.b.y)/(s1+s2)};\n}\nint n,m,sta[2005];\nint main()\n{\n    cin>>n;\n    for (int i=1;i<=n;i++)\n    {\n        int mm;\n        cin>>mm;\n        for (int j=1;j<=mm;j++)\n        {\n            m++,cin>>l[m].a.x>>l[m].a.y;\n            l[(j==1)?m+mm-1:m-1].b=l[m].a;\n        }\n    }\n    n=m;\n    for (int i=1;i<=n;i++)\n        l[i].d=atan2(l[i].b.y-l[i].a.y,l[i].b.x-l[i].a.x);\n    sort(&l[1],&l[n+1],cmpd);\n    for (int i=1;i<=n;i++)\n    {\n        for (;sta[0]>=1;sta[0]--)\n        {\n            if (fabs(l[i].d-l[sta[sta[0]]].d)<eps)\n            {\n                if ((l[sta[sta[0]]].b-l[sta[sta[0]]].a)*(l[i].a-l[sta[sta[0]]].a)<eps) break;\n            }\n            else break;\n        }\n        for (;sta[0]>=2;sta[0]--)\n        {\n            if ((l[i].b-l[i].a)*(crosp(l[sta[sta[0]]],l[sta[sta[0]-1]])-l[i].a)>eps) break;\n        }\n        if (fabs(l[i].d-l[sta[sta[0]]].d)>=eps) sta[++sta[0]]=i;\n    }\n    int L=1,R=sta[0];\n    while (L<R)\n    {\n        if ((l[sta[L]].b-l[sta[L]].a)*(crosp(l[sta[R]],l[sta[R-1]])-l[sta[L]].a)<eps) R--;\n        else\n        {\n            if ((l[sta[R]].b-l[sta[R]].a)*(crosp(l[sta[L]],l[sta[L+1]])-l[sta[R]].a)<eps) L++;\n            else break;\n        }\n    }\n    if (R-L<=1)\n    {\n        printf(\"0.000\\n\");\n        return 0;\n    }\n    double ans=0;\n    sta[R+1]=sta[L],sta[R+2]=sta[L+1];\n    for (int i=L;i<=R;i++)\n        ans+=crosp(l[sta[i]],l[sta[i+1]])*crosp(l[sta[i+1]],l[sta[i+2]])/2;\n    printf(\"%.3lf\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1532583886,
        "uid": 54456,
        "name": "\u9752\u4e18\u6768\u54f2",
        "ccfLevel": 0,
        "title": "\u3010P4196\u3011 [CQOI2006]\u51f8\u591a\u8fb9\u5f62 \u9898\u89e3"
    }
]