[
    {
        "content": "\uff08\u5176\u5b9e\u5982\u679c\u4f60\u5199\u8fc7 P2617 Dynamic Rankings\uff0c\u8fd9\u4e00\u9898\u7684\u6761\u4ef6\u770b\u8d77\u6765\u5c31\u4f1a\u76f8\u5f53\u773c\u719f\u4e86\uff09\n### \u7b80\u5316\u9898\u610f\uff1a\n*\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4\u7b2c\u516b\u5927\u7684\u6570\uff0c\u8981\u6c42\u652f\u6301\u4fee\u6539\u64cd\u4f5c* \n### \u524d\u7f6e\u77e5\u8bc6\uff1a\u4e3b\u5e2d\u6811\uff0c\u6811\u72b6\u6570\u7ec4\n~~\u7b97\u662f\u4e00\u9053\u6811\u5957\u6811\u7684\u677f\u5b50\u9898\u5427~~ \n\n\u6211\u4eec\u77e5\u9053\uff0c\u4e3b\u5e2d\u6811\u76f8\u5f53\u4e8e\u662f\u4e00\u7cfb\u5217\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u524d\u7f00\u548c\u3002\u5728\u4f7f\u7528\u4f20\u7edf\u4e3b\u5e2d\u6811\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u5176\u76f8\u51cf\u6765\u83b7\u5f97\u4e00\u6bb5\u533a\u95f4\u4e4b\u5185\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e3b\u5e2d\u6811\u7684\u524d\u7f00\u548c\u6027\u8d28\u80fd\u591f\u62d3\u5c55\u5230\u66f4\u5bbd\u7684\u9886\u57df\u3002\u6bd4\u5982\u8bf4\uff0c\u5229\u7528\u8fd9\u4e00\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u80fd\u5c06\u5176\u548c\u6811\u72b6\u6570\u7ec4\u8054\u7cfb\u8d77\u6765\u3002\u6211\u4eec\u5c06\u4e3b\u5e2d\u6811\u7684\u6bcf\u4e00\u4e2a\u6839\u8282\u70b9\u5b58\u50a8\u5230\u6811\u72b6\u6570\u7ec4\u5f53\u4e2d\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u5229\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4**\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u6c42\u548c**\u7684\u6027\u8d28\uff0c\u5c31\u80fd\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0\u672c\u9898\u4e2d\u7684**\u4fee\u6539\u64cd\u4f5c**\u3002\n\n\u800c\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6211\u4eec\u540c\u6837\u5229\u7528\u6811\u72b6\u6570\u7ec4\u7684\u6027\u8d28\uff0c\u6c42\u4e00\u904d $[1,l-1]$ \u548c $[1,r]$ \u4e24\u4e2a\u533a\u95f4\u7684\u524d\u7f00\u548c\uff0c\u518d\u5c06\u5f7c\u6b64\u76f8\u51cf\uff0c\u5c31\u80fd\u591f\u5f97\u5230\u76f8\u5e94\u533a\u95f4\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\n\u4e3a\u4e86\u65b9\u4fbf\u79bb\u6563\u5316\uff0c\u6211\u4eec\u5c06\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u8bfb\u5165\u4e4b\u540e\uff0c\u518d\u5bf9\u76f8\u5e94\u7684\u4fee\u6539\u503c\u505a\u7edf\u4e00\u5904\u7406\u3002\u7531\u4e8e\u6240\u6c42\u7684\u662f\u533a\u95f4\u7b2c\u516b\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u79bb\u6563\u5316\u7684\u65f6\u5019\uff0c\u5c06\u6570\u7ec4\u5012\u8fc7\u6765\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nconst int maxn = 3e5 + 9;\nusing namespace std;\n\nstruct node{\n  int sum,ls,rs;\n}tree[maxn<<7];\nint rt[maxn<<1],idx,x[maxn],y[maxn];\nint b[maxn],c[maxn],totn,val[maxn];\nint cnt1,cnt2,n,m;\n\nmap<int,int> mp;\n\nstruct oper{\n  int typ,p1,p2;\n}oprs[maxn];\n\nint read(){\n  int x = 0,f = 1;\n  char ch = getchar();\n  while(ch<'0'||ch>'9'){if(ch=='-')f = -f;ch = getchar();}\n  while(ch>='0'&&ch<='9'){x = (x<<3)+(x<<1)+(ch^48);ch = getchar();}\n  return x*f;\n}\n\ninline void pushup(int u){\n  tree[u].sum = tree[tree[u].ls].sum + tree[tree[u].rs].sum;\n}\n\nvoid update(int &u,int L,int R,int p,int v = 1){\n  tree[++idx] = tree[u],u = idx;\n  if(L==R){\n    tree[u].sum += v;\n    return;\n  }\n\n  int mid = (L+R)>>1;\n  if(p<=mid)update(tree[u].ls,L,mid,p,v);\n  else update(tree[u].rs,mid+1,R,p,v);\n  pushup(u);\n}\n\nint query(int L,int R,int rnk){\n  if(L==R)return L;\n  int sum = 0,mid = (L+R)>>1;\n  for(int i = 1;i<=cnt1;i++)sum -= tree[tree[x[i]].ls].sum;\n  for(int i = 1;i<=cnt2;i++)sum += tree[tree[y[i]].ls].sum;\n  //cerr<<\"sum2:\"<<sum<<'\\n';\n  if(rnk<=sum){\n    for(int i = 1;i<=cnt1;i++)x[i] = tree[x[i]].ls;\n    for(int i = 1;i<=cnt2;i++)y[i] = tree[y[i]].ls;\n    return query(L,mid,rnk);\n  }else{\n    for(int i = 1;i<=cnt1;i++)x[i] = tree[x[i]].rs;\n    for(int i = 1;i<=cnt2;i++)y[i] = tree[y[i]].rs;\n    return query(mid+1,R,rnk-sum);\n  }\n}\n\ninline int lb(int x){return x&(-x);}\nstruct BIT{\n  void add(int po,int newV,int v = 1){\n    for(int i = po;i<=n;i+=lb(i))update(rt[i],0,totn,newV,v);\n  }\n\n  int find(int l,int r,int rnk = 8){\n    cnt1 = cnt2 = 0;\n    int sum = 0;\n    for(int i = l-1;i;i -= lb(i))x[++cnt1] = rt[i],sum -= tree[rt[i]].sum;\n    for(int i = r;i;i-= lb(i))y[++cnt2] = rt[i],sum += tree[rt[i]].sum;\n    //cerr<<\"sum:\"<<sum<<'\\n';\n    if(sum<rnk)return 0;\n    return query(0,totn,rnk);\n  }\n}bit;\n\nint main(){\n  n = read(),m = read();\n  for(int i = 1;i<=m;i++){\n    char ch[3];\n    int x,y;\n    scanf(\"%s\",ch);\n    x = read(),y = read();\n\n    if(*ch=='C') oprs[i] = {0,x,y};\n    else oprs[i] = {1,x,y};\n  }\n\n  //\u79bb\u6563\u5316\n  int total = 0;\n  for(int i = 1;i<=m;i++)\n    if(oprs[i].typ==0)b[++total] = oprs[i].p2;\n  sort(b+1,b+1+total);\n  reverse(b+1,b+1+total);\n  for(int i = 1;i<=total;i++)\n    if(i==1||b[i]!=b[i-1])c[++totn] = b[i],mp[b[i]] = totn;\n\n  for(int i = 1;i<=m;i++)\n    if(oprs[i].typ==0)oprs[i].p2 = mp[oprs[i].p2];\n  //\u79bb\u6563\u5316\u7ed3\u675f\n\n  for(int i = 1;i<=m;i++){\n    oper now = oprs[i];\n    if(now.typ==0){\n      //\u51cf\u53bb\u539f\u6765\u7684\u503c\n      if(val[now.p1]!=0)bit.add(now.p1,val[now.p1],-1);\n      val[now.p1] = now.p2;\n      bit.add(now.p1,now.p2,1);\n    }else{\n      printf(\"%d\\n\",c[bit.find(now.p1,now.p2)]);\n    }\n  }\n}\n\n```",
        "postTime": 1684309785,
        "uid": 540287,
        "name": "stupid_collie",
        "ccfLevel": 0,
        "title": "P8701\u9898\u89e3"
    }
]