[
    {
        "content": "### 1. \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $a_1,a_2,a_3,...,a_n$ , \u5e76\u7ed9\u51fa $m$ \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u7c7b\u578b\u5982\u4e0b\uff1a\n\n\u64cd\u4f5c1\uff1a\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\uff0c\u8f93\u51fa\u6700\u5927\u503c\u4e0e $a_1$ \u7684\u5dee\uff1b\n\n\u64cd\u4f5c2\uff1a\u4ea4\u6362\u4e24\u4e2a\u6570\u7684\u4f4d\u7f6e\uff1b\n\n\u64cd\u4f5c3\uff1a\u9009\u62e9\u4e00\u6bb5\u533a\u95f4 $[l,r]$ \u5e76\u7ed9\u5b9a $t$ \uff0c\u5c06\u533a\u95f4\u4e2d\u7b2c $x$ \u4e2a\u6570\u52a0\u4e0a $x\\cdot t $ .\n\n$n,m \\le 10^5$ .\n\n### 2. \u89e3\u9898\u62a5\u544a\n\n\u672c\u9898\u7684\u6b63\u89e3\u662f\u5206\u5757\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u8003\u8651\u64cd\u4f5c3\uff0c\u5bf9\u4e8e\u4e24\u8fb9\u7684\u5143\u7d20\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u7136\u540e\u91cd\u6784\u5373\u53ef\u3002\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u7ef4\u62a4\u6574\u5757\u5462\uff1f\n\n\u7ef4\u62a4 $add[ x ]$ \u8868\u793a\u7b2c $x$ \u5757\u7d2f\u52a0\u7684 $t$ , \u90a3\u6211\u4eec\u8981\u5f97\u5230\u5355\u4e2a\u5143\u7d20\uff0c\u518d\u7ef4\u62a4\u4e00\u4e2a\u504f\u79fb\u91cf $del[x]$ \uff0c\u8fd9\u6837\u5757\u4e2d\u5143\u7d20\u7684\u6743\u503c\u5373\u53ef\u8868\u793a\u4e3a $w[i]=a[i]+add[x]\\times i-del[x]$. \n\n\uff08\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u82e5\u7ed9\u5757 $[4,6]$ \u52a0\u4e0a $2T, 3T, 4T$ \uff0c\u90a3\u4e48$add[x]=T$ \uff0c$del[x]=2T$\uff0c\u8fd9\u6837 $w[5]=a[5]+5T-2T=a[5]+3T$ .\uff09\n\n\u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u4ea4\u6362\u7136\u540e\u91cd\u6784\u5757\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u6211\u4eec\u8003\u8651\u5728\u6574\u5757\u88ab\u4fee\u6539\u540e\uff0c\u5982\u4f55\u7ef4\u62a4\u5757\u5185\u7684\u6700\u5927\u503c\u3002\u7531\u4e8e\u6bcf\u4e2a\u5143\u7d20\u7684\u7f16\u53f7 $i$ \u548c\u6743\u503c $a_i$ \u90fd\u662f\u5b9a\u503c\u4e14 $i$ \u5355\u589e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5143\u7d20\u770b\u6210 $(i,a_i)$ \uff0c\u7136\u540e\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u4e00\u4e2a\u4e0a\u51f8\u58f3\u3002\u8fd9\u6837\u968f\u7740 $add$ \u7684\u589e\u5927\uff0c\u6700\u5927\u5143\u7d20\u4f4d\u7f6e\u4e00\u5b9a\u5411\u53f3\u79fb\u52a8\uff0c\u4e14\u5143\u7d20\u6743\u503c\u5448\u5355\u5cf0\u3002\n\n\u6bcf\u4e2a\u64cd\u4f5c\u7ef4\u62a4\uff08\u8be2\u95ee\uff09\u7684\u590d\u6742\u5ea6\u90fd\u4e3a $O( n\\sqrt{n} )$\uff0c\u518d\u52a0\u4e0a\u672c\u9898\u65f6\u95f4\u9650\u5236\u5bbd\u677e\uff0c\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\u3002\n\n### 3. \u53c2\u8003\u7a0b\u5e8f\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nnamespace io {\n\tconst int SIZE=(1<<21)+1;\n\tchar ibuf[SIZE],*iS,*iT;\n\tchar gc()\n\t{\n\t\tif(iS==iT) iT=(iS=ibuf)+fread(ibuf,1,SIZE,stdin);\n\t\tif(iS==iT) return EOF;\n\t\treturn *iS++;\n\t}\n\tinline int gi()\n\t{\n\t\tchar c; int x=0,f=1;\n\t\tfor(;c<'0'||c>'9';c=gc())if(c=='-')f=-1;\n\t\tfor(;c>='0'&&c<='9';c=gc())x=(x<<1)+(x<<3)+c-'0';\n\t\treturn x*f;\n\t}\n}\nusing io::gi;\nconst int N=100005,qN=320;\nint n,m,bel[N],b,s[qN][qN],tp[qN],pos[qN];\nll h[N],a[N],add[qN],del[qN];\n#define top s[x][tp[x]]\n#define dtp s[x][tp[x]-1]\n#define Max(x) s[x][pos[x]]\nvoid remove(int x)\n{\n\tfor(int i=(x-1)*b+1;i<=x*b;i++) a[i]+=add[x]*i-del[x];\n\tadd[x]=del[x]=pos[x]=tp[x]=0;\n}\nvoid build(int x)\n{\n\tmemset(s[x],0,sizeof(s[x]));\n\tfor(int i=(x-1)*b+1;i<=x*b;i++)\n\t{\n\t\twhile(tp[x]>1&&(a[i]-a[top])*(top-dtp)>=(a[top]-a[dtp])*(i-top))--tp[x];\n\t\ts[x][++tp[x]]=i;\n\t}\n\tfor(pos[x]=1;pos[x]<=tp[x]&&a[s[x][pos[x]+1]]>=a[s[x][pos[x]]];pos[x]++);\n}\nvoid update(int x)\n{\n\tfor(;pos[x]<=tp[x];pos[x]++)\n\t\tif(a[s[x][pos[x]+1]]+add[x]*s[x][pos[x]+1]<a[s[x][pos[x]]]+add[x]*s[x][pos[x]])\n\t\t\tbreak;\n}\nint main()\n{\n\tn=gi(),m=gi();\n\tb=sqrt(n);\n\tfor(int i=1;i<=n;i++) bel[i]=(i-1)/b+1,a[i]=gi();\n\tfor(int i=1;i<=bel[n];i++) build(i);\n\twhile(m--)\n\t{\n\t\tint op=gi(),l=gi(),r=gi();\n\t\tif(op==1)\n\t\t{\n\t\t\tll k=a[1]+add[1]-del[1];\n\t\t\tll mx=k;\n\t\t\tfor(;bel[l]==bel[l-1]&&l<=r;l++)\n\t\t\t\tmx=max(mx,a[l]+add[bel[l]]*l-del[bel[l]]);\n\t\t\tfor(;l+b<=r;l+=b)\n\t\t\t\tmx=max(mx,a[Max(bel[l])]+add[bel[l]]*Max(bel[l])-del[bel[l]]);\n\t\t\tfor(;l<=r;l++)\n\t\t\t\tmx=max(mx,a[l]+add[bel[l]]*l-del[bel[l]]);\n\t\t\tprintf(\"%lld\\n\",mx-k);\n\t\t}\n\t\tif(op==2)\n\t\t{\n\t\t\tremove(bel[l]),remove(bel[r]);\n\t\t\tswap(a[l],a[r]);\n\t\t\tbuild(bel[l]); build(bel[r]);\n\t\t}\n\t\tif(op==3)\n\t\t{\n\t\t\tint t=gi(),tl=l;\n\t\t\tfor(;bel[l]==bel[l-1]&&l<=r;l++) a[l]+=(l-tl+1)*t;\n\t\t\tremove(bel[l-1]); build(bel[l-1]);\n\t\t\tfor(;l+b<=r;l+=b) add[bel[l]]+=t,del[bel[l]]+=(tl-1)*t,update(bel[l]);\n\t\t\tfor(;l<=r;l++) a[l]+=(l-tl+1)*t;\n\t\t\tremove(bel[r]); build(bel[r]);\n\t\t}\n\t}\n}\n```\n\n### 4. \u9644\uff1a\u7ef4\u62a4\u4e0a\u51f8\u58f3\u7684\u6b63\u786e\u6027\u6570\u5b66\u8bc1\u660e\n\n\u9644\u8d60\u7ed9\u4e0d\u80fd\u7406\u89e3\u7ef4\u62a4\u4e0a\u51f8\u58f3\u6b63\u786e\u6027\u7684\u540c\u5b66\uff1a\n\n\u5047\u8bbe\u73b0\u5728\u67093\u4e2a\u5143\u7d20 $x,y,z$ \uff0c\u8bbe\u5b83\u4eec\u7684\u7f16\u53f7\u5206\u522b\u4e3a $h_x, h_y, h_z$\uff0c\u5143\u7d20\u5927\u5c0f\u4e3a $a_x,a_y,a_z$ \uff0c\u6743\u503c\u4e3a$w_x,w_y,w_z$ \uff0c $h_x<h_y<h_z$ \u3002\u8bbe $add$ \u503c\u4e3a $T$, \u82e5\u5b58\u5728 $T$ \u4f7f\u5f97 $w_y > w_x$ \u4e14 $w_y>w_z$\uff0c\u5219\u4f5c\u5dee\u5217\u51fa\u4e0d\u7b49\u5f0f\uff1a\n\n$a_x-a_y<(h_y-h_x)T$ \uff0c $a_y-a_z>(h_z-h_y)T$ .\n\n\u4e24\u5f0f\u6574\u7406\u5408\u5e76\u53ef\u5f97 $\\displaystyle \\frac{a_z-a_y}{h_z-h_y}<\\frac{a_y-a_x}{h_y-h_x}$  .\n\n\u5373\uff1a\u76f4\u7ebf $y\\to z$ \u7684\u659c\u7387\u5c0f\u4e8e\u76f4\u7ebf $x\\to y$ \u7684\u659c\u7387\uff0c\u6545\u7ef4\u62a4\u4e0a\u51f8\u58f3\u3002\u540c\u65f6\u6613\u53d1\u73b0\uff0c\u968f\u7740 $T$ \u7684\u4e0d\u65ad\u589e\u5927\uff0c\u6700\u5927\u5143\u7d20\u7684\u4f4d\u7f6e\u53f3\u79fb\uff0c\u4e14\u6700\u5927\u5143\u7d20\u5de6\u8fb9\u7684\u6743\u503c\u9012\u589e\uff0c\u53f3\u8fb9\u7684\u6743\u503c\u9012\u51cf\uff08\u5373\u5355\u5cf0\uff09\u3002\n\n",
        "postTime": 1543729166,
        "uid": 9757,
        "name": "x_faraway_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2496 \u3010[SDOI2012]\u4f53\u80b2\u8bfe\u3011"
    },
    {
        "content": "\u65b9\u6cd5\u4e00\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u3002\u9884\u8ba1\u5f97\u520620\u5206\n\n\n\n\u65b9\u6cd5\u4e8c\uff1a\n\n\u6211\u4eec\u4e0d\u8003\u8651\u7b2c\u4e09\u79cd\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u9884\u8ba1\u5f97\u520640\u5206\n\n\n\n\u65b9\u6cd5\u4e09\uff1a\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u6bb5\u8fdb\u884c\u5206\u6bb5\u64cd\u4f5c\uff0c\u5206\u6210sqrt(n)\u5757\u3002\n\n\u6709\u4e00\u4e2a\u6280\u5de7\u662f\uff0c\u6211\u4eec\u6c42\u7684\u662f\u4e00\u6bb5\u533a\u95f4\u7684\u6700\u5927\u503c\u3002\u6211\u4eec\u628a\u6bcf\u4e2a\u503ca[i]\u4fee\u6539\u4e3aa[i]-a[i-1]\uff0c\u8fd9\u6837\u7684\u8bdd\u95ee\u9898\u53d8\u6210\u6c42\u6700\u5927\u524d\u7f00\u548c\u3002\u800c\u7b2c\u4e09\u79cd\u64cd\u4f5c\u5c31\u53d8\u6210\u4e86\u5bf9\u4e00\u6bb5\u533a\u95f4\u8fdb\u884c\u52a0t\u7684\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5feb\uff0c\u6211\u4eec\u8bb0\u5f55\u8fd9\u4e00\u5757\u7684\u6700\u5927\u503cmaxs\uff0c\u548c\u5bf9\u4e00\u6574\u6bb5\u8fdb\u884c\u64cd\u4f5c\u7684\u8bdd\uff0c\u540e\u9762\u80fd\u591f\u8d85\u8fc7\u8fd9\u4e2a\u6700\u5927\u503c\u7684\u6700\u5c0f\u7684\u662f\u591a\u5c11min\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6o(sqrt(n));\n\n\u5bf9\u4e8e\u7b2c\u4e09\u79cd\u64cd\u4f5c\uff0c\u5982\u679c\u8de8\u7acb\u4e00\u4e2a\u5757\u5f97\u8bdd\uff0c\u6211\u4eec\u76f4\u63a5\u5bf9\u8fd9\u4e00\u6bb5\u533a\u95f4\u6807\u8bb0\u52a0\u4e0at\u3002\u5982\u679c\u8fd9\u4e2a\u6807\u8bb0\u5927\u4e8e\u8fd9\u4e00\u6bb5\u7684min\u7684\u8bdd\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e00\u5757\u66b4\u529b\u8fdb\u884c\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6o(sqrt(n)).\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u64cd\u4f5c,\u6211\u4eec\u53ef\u4ee5\u53d8\u6210\u6c42\u6700\u5927\u524d\u7f00\u548c\u5566\u3002\u65f6\u95f4\u590d\u6742\u5ea6o(sqrt(n));\n\n\u8fd9\u4e00\u6574\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3ao((n+m)*sqrt(n));\n\n\n\n\u590d\u6742\u5ea6\u5341\u5206\u7384\u5b66(\u6211\u662f\u770b\u4e86\u8d34\u5427\u7684\u8ba8\u8bba\u5199\u7684)\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <set>\n#include <cassert>\n\nusing namespace std;\n\ntypedef long long LL;\n\nvoid read(LL &x) {\n    char c;bool flag = 0;\n    while((c=getchar())<'0'||c>'9') flag |= (c=='-');\n    x=c-'0';while((c=getchar())>='0'&&c<='9') x = x*10+c-'0';\n    flag?x=-x:x;\n}\n\nvoid read(int &x) {\n    char c;bool flag = 0;\n    while((c=getchar())<'0'||c>'9') flag |= (c=='-');\n    x=c-'0';while((c=getchar())>='0'&&c<='9') x = x*10+c-'0';\n    flag?x=-x:x;\n}\n\nconst LL inf = ~0u>>2;\nvoid FRE();\n\nvoid upval(LL &a,const LL &b) {if(a<b) a=b;}\n\n#define MAXX 101000\n#define N 600\nint n,m;\nLL h[MAXX],bsf[N];\nint bsiz,bl[N],br[N],bk[MAXX];\nLL lazy1[N],lazy2[N];\nstruct pii{LL h,pos;pii(LL h=0,LL pos=0):h(h),pos(pos){}} st[N][N];\nint top[N];\n\nvoid reset(int bk) {\n\tbsf[bk] = inf; top[bk] = 0;\n\tfor (LL i = bl[bk]; i <= br[bk]; i++) {\n\t\twhile(top[bk] && st[bk][top[bk]].h <= h[i]) top[bk]--;\n\t\tst[bk][++top[bk]] = pii(h[i],i);\t\t\t\n\t}\n\tfor (LL i = 2; i <= top[bk]; i++)\n\t  bsf[bk] = min(bsf[bk], \n\t     ((st[bk][1].h-st[bk][i].h)/(st[bk][i].pos-st[bk][1].pos)));\n}\n\nvoid push_down(int bk) {\n\tif(!lazy1[bk] && !lazy2[bk]) return;\n\tfor (LL i = bl[bk]; i <= br[bk]; i++)\n\t h[i] += lazy1[bk]+i*lazy2[bk];\n\tlazy1[bk] = lazy2[bk] = 0;\n}\n\nvoid Swap(int x,int y) {\n\tpush_down(bk[x]); push_down(bk[y]);\n\tswap(h[x],h[y]);\n\treset(bk[x]); reset(bk[y]);\n}\n\nLL Max(int x,int y) {\n\tint li = min(br[bk[x]],y); LL mx = 0;\n\tpush_down(bk[x]);\n\tfor (int i = x; i <= li; i++) upval(mx,h[i]);\n\treset(bk[x]);\n\tfor (int i = bk[x]+1; i < bk[y]; i++) {\n\t  \tif(lazy2[i] >= bsf[i] && lazy2[i]) {\n\t\t\tpush_down(i);\n\t\t\treset(i);\n\t\t}\n\t\tupval(mx,st[i][1].h+lazy1[i]+lazy2[i]*st[i][1].pos);\n\t}\n\tif(bk[x] != bk[y]) {\n\t\tpush_down(bk[y]);\n\t\tfor (int i = bl[bk[y]]; i <= y; i++) upval(mx,h[i]);\n\t\treset(bk[y]);\n\t}\n    mx -= h[1]+lazy1[bk[1]]+lazy2[bk[1]];\n    return mx>0 ? mx:0;\n}\n\nvoid Add(int x,int y,LL t) {\n\tint li = min(br[bk[x]],y); LL L = x-1;\n\tpush_down(bk[x]);\n\tfor (int i = x; i <= li; i++) h[i] += (i-L)*t;\n\treset(bk[x]);\n\tfor (int i = bk[x]+1; i < bk[y]; i++) \n\t\tlazy1[i] += -L*t,lazy2[i] += t;\n\tif(bk[x] != bk[y]) {\n\t\tpush_down(bk[y]);\n\t\tfor (int i = bl[bk[y]]; i <= y; i++) h[i] += (i-L)*t;\n\t\treset(bk[y]);\n\t}\n}\n\nint main() {\n\t//FRE();\n\tread(n); read(m);\n\tbsiz = sqrt(n+0.5);\n    for (int i = 1; i <= n; i++) {\n       read(h[i]);\n       bk[i] = i/bsiz+1;\n       if(!bl[bk[i]]) bl[bk[i]] = i;\n       br[bk[i]] = i;\n\t} \n\tfor (int i = 1; i <= bk[n]; i++) reset(i);\n\tfor (int i = 1,tp,x,y,t; i <= m; i++) {\n\t\tread(tp); read(x); read(y);\n\t\tif(tp == 1) printf(\"%lld\\n\",Max(x,y));\n\t\telse if(tp == 2) Swap(x,y);\n\t\telse read(t),Add(x,y,t);\n\t}\n\treturn 0;\n}\n\nvoid FRE() {\n\tassert(freopen(\"sdoi12_line.in\",\"r\",stdin));\n    assert(freopen(\"sdoi12_line.out\",\"w\",stdout));\n}\n```\n",
        "postTime": 1552746474,
        "uid": 24701,
        "name": "wine",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2496 \u3010[SDOI2012]\u4f53\u80b2\u8bfe\u3011"
    },
    {
        "content": "\u771f\u662fR2\u6bd2\u7624\u9898\u3002\u3002\u3002\u7f51\u4e0a\u8fd8\u627e\u4e0d\u5230\u9898\u89e3  \n\u6700\u7ec8\u5728\u4e00\u4e2a6\u5e74\u524d\u7684NOIP\u8ba8\u8bba\u5e16\u770b\u5230\u4e86\u505a\u6cd5\u7684\u7b80\u4ecb\n  \n\u6838\u5fc3\u601d\u60f3\uff1a\u5206\u5757\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u6211\u4eec\u4fdd\u5b58\u6700\u5927\u503c\u548c\u5176\u4f4d\u7f6e\u3002  \n\u5bf9\u4e8e1\u64cd\u4f5c\u5c31\u662f\u6b63\u5e38\u67e5\u8be2  O(msqrt(n))  \n\u5bf9\u4e8e2\u64cd\u4f5c \u4e5f\u662f\u6b63\u5e38swap\uff0c\u7136\u540e\u66b4\u529b\u518d\u91cd\u7b97\u90a3\u4e24\u4e2a\u5757\u7684\u4fe1\u606fO(msqrt(n))    \n\u5bf9\u4e8e3\u64cd\u4f5c \u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u5757\u7684\u6700\u5927\u503c\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u5c31\u66b4\u529b\u91cd\u7b97\u8be5\u5757\u3002  \n\u7531\u4e8e\u5f53\u8fd9\u4e2a\u5757\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u52a0\u503c\u65f6\uff0c\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u662f\u5355\u8c03\u5411\u53f3\u66f4\u6539\u7684\u3002  \n\u6240\u4ee5\u6bcf\u4e2a\u5757\u6700\u591a\u66f4\u6539sqrt(n)\u6b21  \u6bcf\u6b21\u4fee\u6539\u91cf\u4e3asqrt(n) \u603b\u5171sqrt(n)\u4e2a\u5757  \n\u90a3\u4e2a\u79fb\u52a8\u7684\u603b\u590d\u6742\u5ea6\u4e3asqrt(n)^3=nsqrt(n)\n\n\u90a3\u4e48\u8fd9\u4e2a\u9898\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 O((n+m)sqrt(n))\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u4e86\u3002\n\nand,\u6837\u4f8b\u662f\u9519\u7684\u3002\u3002\u3002\u6211\u5728\u8ba8\u8bba\u91cc\u63d0\u5230\u4e86\u3002  \n\u5e76\u4e14\uff0c\u540c\u5fd7\u4eec\u8981\u6ce8\u610f\u5361\u5e38\u3002\u3002\u8fd9\u9898\u6709\u5f88\u5927\u5e38\u6570\uff0c\u6240\u4ee5wysssssss+\u5f00O2\u624d\u80fd\u8fc7\u3002\n\n\u5f53\u7136\u4e5f\u9700\u8981\u4e00\u70b9\u5c0f\u4f18\u5316\u4e4b\u7c7b\u7684\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define o 200011\n#define ll long long\nconst int inf=1e9;\nvoid max(ll &a,ll b){\n    if(b>a) a=b;\n}\nvoid min(ll &a,ll b){\n    if(a>b) a=b;\n}\nstruct Point{\n    int p;ll v;\n};\nll A[o],Ti,S[o];\nint bl[o],P[o];\nint n,m,li,ri,type,top;\nstruct node{\n    int l,r;ll T,sum,lim;\n    Point bst;\n    ll Maxnum(){\n        return bst.v+(ll)bst.p*T-sum;\n    }\n    void pushdown(){\n        if(!T)return;\n        bst.v=Maxnum();\n        for(register ll i=l;i<=r;i++) A[i]+=i*T-sum;\n        T=sum=0;\n    }\n    void clear(){\n        r=T=sum=0,l=inf,lim=1e13;\n        bst.v=0,bst.p=0;\n    }\n    void Reset(){\n        lim=1e13;bst.v=0,bst.p=0;\n        top=0;\n        for(register int i=l;i<=r;i++){\n            if(bst.v<=A[i]){\n                bst.v=A[i],bst.p=i;\n                top=0;\n            }\n            else{\n                while(top&&S[top]<=A[i]) top--;\n                S[++top]=A[i];P[top]=i;\n            }\n        }  \n        for(register int i=1;i<=top;i++) lim=std::min(lim,(bst.v-S[i])/(ll)(P[i]-bst.p));\n    }\n    void Come(){\n        top=0;\n        for(register int i=bst.p;i<=r;i++){\n            if(bst.v<=A[i]){\n                bst.v=A[i],bst.p=i;\n                top=0;\n            }\n            else{\n                while(top&&S[top]<=A[i]) top--;\n                S[++top]=A[i];P[top]=i;\n            }\n        }  \n        lim=1e13;\n        for(register int i=1;i<=top;i++) lim=std::min(lim,(bst.v-S[i])/(ll)(P[i]-bst.p));\t\n    }\n}Block[405];\ninline void in(ll &ans, char ch = getchar(), bool flag = false)\n{\n    ans = 0;\n    for (; (ch < '0' || ch > '9') && ch != '-'; ch = getchar());\n    if (ch == '-')\n    {\n        ch = getchar();\n        flag = true;\n    }\n    for (; ch >= '0' && ch <= '9'; ans = (ans << 3) + (ans << 1) + ch - 48, ch = getchar());\n    if (flag) ans = -ans;\n}\ninline void In(int &ans, char ch = getchar(), bool flag = false)\n{\n    ans = 0;\n    for (; (ch < '0' || ch > '9') && ch != '-'; ch = getchar());\n    if (ch == '-')\n    {\n        ch = getchar();\n        flag = true;\n    }\n    for (; ch >= '0' && ch <= '9'; ans = (ans << 3) + (ans << 1) + ch - 48, ch = getchar());\n    if (flag) ans = -ans;\n}\nint main(){\n    In(n),In(m);\n    for(register int i=1;i<=n;i++) in(A[i]);\n    int len=sqrt(n),N;\n    for(register int i=1;i<=n;i++) bl[i]=(i-1)/len+1;\n    N=bl[n];\n    for(register int i=1;i<=N;i++) Block[i].clear();\n    for(register int i=1;i<=n;i++) Block[bl[i]].l=std::min(Block[bl[i]].l,i),Block[bl[i]].r=std::max(Block[bl[i]].r,i);\n    for(register int i=1;i<=N;i++) Block[i].Reset();\n    for(register int t=1;t<=m;t++){\n        In(type),In(li),In(ri);\n        if(type==1){\n            ll ans=0,h1=A[1]+Block[1].T-Block[1].sum;\n            if(bl[li]!=bl[ri]){\n                Block[bl[li]].pushdown();Block[bl[li]].Reset();\n                Block[bl[ri]].pushdown();Block[bl[ri]].Reset();\n                for(register int i=li;i<=Block[bl[li]].r;i++) max(ans,A[i]);\n                for(register int i=Block[bl[ri]].l;i<=ri;i++) max(ans,A[i]);\n                for(register int i=bl[li]+1;i<=bl[ri]-1;i++){\n                    if(Block[i].T>Block[i].lim) Block[i].pushdown(),Block[i].Come();\n                    max(ans,Block[i].Maxnum());\n                }\n            }\n            else{\n                Block[bl[li]].pushdown();Block[bl[li]].Come();\n                for(register int i=li;i<=ri;i++) max(ans,A[i]);\n            }\n            printf(\"%lld\\n\",std::max(0ll,ans-h1));\n            continue;\n        }\n        if(type==2){\n            Block[bl[li]].pushdown();Block[bl[ri]].pushdown();\n            std::swap(A[li],A[ri]);\n            Block[bl[li]].Reset(); Block[bl[ri]].Reset();\n            continue;\n        }\n        if(type==3){\n            in(Ti);ll L=li-1;\n            if(bl[li]!=bl[ri]){\n                for(register ll i=li;i<=Block[bl[li]].r;i++) A[i]+=(i-L)*Ti;\n                for(register ll i=Block[bl[ri]].l;i<=ri;i++) A[i]+=(i-L)*Ti;\n                Block[bl[li]].pushdown();Block[bl[li]].Reset();\n                Block[bl[ri]].pushdown();Block[bl[ri]].Reset();\n                \n                for(register int i=bl[li]+1;i<=bl[ri]-1;i++){\n                    Block[i].T+=Ti;\n                    Block[i].sum+=L*Ti;\n                }\n            }\n            else{\n                for(register ll i=li;i<=ri;i++) A[i]+=(i-L)*Ti;\n                Block[bl[li]].pushdown();Block[bl[li]].Reset();\n            }\n        }\n    }\n}\n```",
        "postTime": 1524052823,
        "uid": 24559,
        "name": "Treeloveswater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2496 \u3010[SDOI2012]\u4f53\u80b2\u8bfe\u3011"
    },
    {
        "content": "\u8003\u8651\u5206\u5757\u3002\u5047\u8bbe\u5757\u957f\u4e3a $B$\uff0c\u4f9d\u6b21\u8003\u8651\u4e0b\u9762\u4e09\u4e2a\u64cd\u4f5c\uff1a\n\n1. \u533a\u95f4\u52a0\u7b49\u5dee\u6570\u5217\n\n\t\u662f\u4e00\u4e2a\u57fa\u7840\u64cd\u4f5c\u3002\n\n\t\u6211\u4eec\u628a $l \\sim r$ \u7684\u6bcf\u4e00\u4e2a $i$ \u7684\u589e\u91cf $\\Delta i=(i-l+1)t$ \u62c6\u5f00\uff0c\u5f97\u5230 $\\Delta i=i\\cdot t-(l-1)t$\u3002\u7136\u540e\u6211\u4eec\u7531\u8fd9\u4e2a\u5f0f\u5b50\u7684\u53ef\u52a0\u6027\uff0c\u7ef4\u62a4\u4e00\u4e0b $i\\cdot t$ \u7684\u503c\u5c31\u597d\u4e86\u3002\n    \n    \u5355\u6b21\u590d\u6742\u5ea6 $O\\left(B+\\dfrac{n}{B}\\right)$\u3002\n\n2. \u4ea4\u6362\u4e24\u4e2a\u6570\n\n\t\u8fd9\u4e2a\u6bd4\u4e0a\u9762\u90a3\u4e2a\u8fd8\u7b80\u5355\u3002\n    \n    \u76f4\u63a5\u4ea4\u6362\uff0c\u7136\u540e\u66b4\u529b\u91cd\u6784\u4e24\u4e2a\u6570\u6240\u5728\u7684\u5757\u5373\u53ef\u3002\u5355\u6b21\u590d\u6742\u5ea6 $O(B)$\u3002\n    \n3. \u7ef4\u62a4\u6700\u5927\u503c\n\n\t\u8fd9\u7b97\u662f\u672c\u9898\u7684\u96be\u70b9\u4e86\u3002\u9996\u5148\uff0c\u5728\u4e00\u5f00\u59cb\u53ef\u4ee5\u76f4\u63a5\u9884\u5904\u7406\u4e00\u4e0b\u3002\n    \n    \u7136\u540e\u8003\u8651\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5206\u6210\u6563\u5757\u548c\u6574\u5757\u3002\n    \n    - \u6563\u5757\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u3001\u66b4\u529b\u8ba1\u7b97\u3002\n    \n    - \u6574\u5757\u4e0d\u592a\u597d\u5904\u7406\uff0c\u4f46\u662f\u89c2\u5bdf\u5230 $t \\geq 0$\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5bf9\u4e8e\u4efb\u610f\u7684 $x_1,x_2 \\in [l,r],x_1 \\leq x_2$\uff0c\u6709 $x_2t-x_1t \\geq 0$\u3002\n    \n    \n    \t\u8fd9\u4e2a\u5f0f\u5b50\u8bf4\u660e\u4e86\u4ec0\u4e48\u5462\uff1f\u8fd9\u8bf4\u660e\u4e00\u4e2a\u5757\u5185\u5982\u679c\u662f\u6574\u5757\u52a0\uff0c\u90a3\u4e48\u540e\u9762\u7684\u6570\u7684\u589e\u91cf\u4e00\u5b9a\u5927\u4e8e\u524d\u9762\u7684\u6570\u7684\u589e\u91cf\u3002\u90a3\u4e48\u663e\u7136\u6700\u5927\u503c\u53ea\u53ef\u80fd\u5411\u540e\u5ef6\u4f38\uff0c\u5373\u5177\u6709\u5355\u8c03\u6027\u3002\n        \n        \u53ef\u4ee5\u4e8c\u5206\u7136\u540e\u5e73\u8861\u590d\u6742\u5ea6\uff0c\u662f $O(n\\sqrt{n\\log n})$ \u7684\uff1b\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5355\u8c03\u6808\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u4e0a\u51f8\u58f3\uff0c\u7136\u540e\u8bb0\u5f55\u4e00\u4e2a\u6700\u5927\u503c\u6307\u9488 $pos_i$\uff0c\u6bcf\u6b21\u5411\u540e\u79fb\u52a8\u3002\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(n\\sqrt{n})$ \u7684\uff08\u89c1\u540e\u6587\uff09\u3002\n        \n\u4e8e\u662f\u672c\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u5757\u957f\u53d6 $\\sqrt{n}$ \u65f6\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n})$\u3002\n\n- **\u5173\u4e8e\u79fb\u52a8\u590d\u6742\u5ea6\u7684\u8bc1\u660e**\n\n\u663e\u7136\u4e00\u4e2a\u5757\u7684\u4e0a\u51f8\u58f3\u6700\u591a\u6709\u5757\u957f\u4e2a\u5143\u7d20\uff0c\u5373 $\\sqrt{n}$ \u4e2a\u3002\u90a3\u4e48\u5bb9\u6613\u53d1\u73b0\uff0c\u6bcf\u4e2a\u5757\u5982\u679c\u4e0d\u91cd\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u603b\u79fb\u52a8\u590d\u6742\u5ea6\u662f $O\\left(\\sqrt{n} \\cdot \\dfrac{n}{\\sqrt{n}}\\right) = O(n)$ \u7684\u3002\n\n\u8003\u8651\u73b0\u5728\u4e00\u4e2a\u5757\u5982\u679c\u91cd\u6784\u4e86\uff0c\u90a3\u4e48\u663e\u7136\u6307\u9488\u4f1a\u79fb\u56de\u6700\u5de6\u8fb9\u91cd\u65b0\u5f80\u53f3\u8dd1\uff0c\u4e5f\u5c31\u662f\u8bf4\u590d\u6742\u5ea6\u4f1a\u52a0\u4e0a\u6700\u591a $\\sqrt{n}$\u3002\n\n\u90a3\u4e48\u4f1a\u91cd\u6784\u591a\u5c11\u4e2a\u5757\u5462\uff1f\n\n\u8003\u8651\u64cd\u4f5c $1$\uff0c\u6bcf\u6b21\u6700\u591a\u4ea7\u751f\u4e24\u4e2a\u6563\u5757\u91cd\u6784\u3002\n\n\u8003\u8651\u64cd\u4f5c $2$\uff0c\u6bcf\u6b21\u4e5f\u662f\u6700\u591a\u4ea7\u751f\u4e24\u4e2a\u3002\n\n\u6240\u4ee5\u603b\u7684\u91cd\u6784\u6570\u91cf\u662f $O(n)$ \u7684\uff08\u51c6\u786e\u6765\u8bf4\u662f $O(q)$ \u7684\uff0c\u4f46\u662f $n,q$ \u540c\u7ea7\u3002\u603b\u590d\u6742\u5ea6\u4e5f\u5c31\u662f $O(n \\sqrt{n})$ \u4e86\u3002\n\n\u4e0d\u8fc7\u8fd9\u4e2a\u53ea\u662f\u6700\u52a3\u590d\u6742\u5ea6\u5206\u6790\uff0c\u5b9e\u9645\u4e0a\u5e94\u8be5\u8dd1\u7684\u8fd8\u662f\u86ee\u5feb\u7684\uff0c\u6bd5\u7adf\u6307\u9488\u79fb\u52a8\u4e00\u822c\u8dd1\u4e0d\u592a\u6ee1\u3002",
        "postTime": 1683100900,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "P2496 \u9898\u89e3"
    }
]