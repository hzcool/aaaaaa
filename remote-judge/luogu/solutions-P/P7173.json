[
    {
        "content": "\u589e\u5e7f\u8def\u7b97\u6cd5\u7531\u4e8e\u5b9e\u73b0\u4e2d\u5b58\u5728\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u65e0\u6cd5\u5904\u7406\u5b58\u5728\u8d39\u7528\u8d1f\u5708\u7684\u6700\u5c0f\u8d39\u7528\u6d41\u95ee\u9898\u3002\n\n\u6d88\u5708\u7b97\u6cd5\u672c\u8eab\u5c31\u6709\u6d88\u9664\u8d1f\u5708\u7684\u8fc7\u7a0b\uff0c\u4f46\u7531\u4e8e\u6548\u7387\u4f4e\u4e0b\uff0c\u5728 OI \u4e2d\u5e76\u4e0d\u5b9e\u7528\u3002\n\n\u6211\u4eec\u8003\u8651\u5229\u7528\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u7684\u6280\u672f\u6765\u89e3\u51b3\u8d1f\u5708\u7684\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u7f51\u7edc\u4e2d\u7684\u8d1f\u8d39\u7528\u8fb9 $x\\rightarrow y$\uff0c\u6211\u4eec\u5148\u8ba9\u5176\u76f4\u63a5\u6ee1\u6d41\u3002\u7136\u540e\u52a0\u5165\u4e00\u6761\u8fb9 $y\\rightarrow x$\uff0c\u8d39\u7528\u4e3a\u539f\u6765\u8d39\u7528\u7684\u76f8\u53cd\u6570\uff0c\u7528\u4e8e\u9000\u6d41\u3002\n\n\u6ee1\u6d41\u76f4\u63a5\u7528\u4e0a\u4e0b\u754c\u8d39\u7528\u6d41\u7684\u6280\u672f\u89e3\u51b3\uff0c\u8dd1\u4e00\u4e2a\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=200,M=10000,INF=(1<<30)-1;\n\nint n,m,st0,td0,df[N+9];\nint ans[2];\nstruct side{\n  int y,next,f,v;\n}e[M*2+N*2+9];\nint lin[N+9],cs;\n\nvoid Ins(int x,int y,int f,int v){e[++cs].y=y;e[cs].f=f;e[cs].v=v;e[cs].next=lin[x];lin[x]=cs;}\nvoid Ins_flow(int x,int y,int f,int v){Ins(x,y,f,v);Ins(y,x,0,-v);}\n\nvoid into(){\n  scanf(\"%d%d%d%d\",&n,&m,&st0,&td0);\n  cs=1;\n  for (int i=1;i<=m;++i){\n    int x,y,f,v;\n    scanf(\"%d%d%d%d\",&x,&y,&f,&v);\n    if (v>=0) Ins_flow(x,y,f,v);\n    else{\n      df[x]-=f;df[y]+=f;ans[1]+=f*v;\n      Ins_flow(y,x,f,-v);\n    }\n  }\n}\n\nint st,td,cn;\n\nvoid Get_graph(){\n  st=n+1;td=cn=n+2;\n  for (int i=1;i<=cn-2;++i){\n    if (!df[i]) continue;\n    df[i]>0?Ins_flow(st,i,df[i],0):Ins_flow(i,td,-df[i],0);\n  }\n  Ins_flow(td0,st0,INF,0);\n}\n\nint flow,value;\nint dis[N+9],vis[N+9],pre[N+9],f[N+9];\nqueue<int>q;\n\nbool Spfa(int st,int td){\n  for (int i=1;i<=cn;++i) dis[i]=INF,vis[i]=0;\n  dis[st]=0;vis[st]=1;f[st]=INF;q.push(st);\n  for (;!q.empty();){\n    int t=q.front();q.pop();\n    vis[t]=0;\n    for (int i=lin[t];i;i=e[i].next)\n      if (e[i].f&&dis[t]+e[i].v<dis[e[i].y]){\n        dis[e[i].y]=dis[t]+e[i].v;\n        pre[e[i].y]=i;\n        f[e[i].y]=min(f[t],e[i].f);\n        if (!vis[e[i].y]) vis[e[i].y]=1,q.push(e[i].y);\n      }\n  }\n  return dis[td]^INF;\n}\n\nvoid Max_flow(int st,int td){\n  flow=0;value=0;\n  for (;Spfa(st,td);flow+=f[td],value+=f[td]*dis[td])\n    for (int k=td;k^st;k=e[pre[k]^1].y) e[pre[k]].f-=f[td],e[pre[k]^1].f+=f[td];\n}\n\nvoid Get_ans(){\n  Max_flow(st,td);\n  ans[1]+=value;\n  Max_flow(st0,td0);\n  ans[0]=flow;ans[1]+=value;\n}\n\nvoid work(){\n  Get_graph();\n  Get_ans();\n}\n\nvoid outo(){\n  printf(\"%d %d\\n\",ans[0],ans[1]);\n}\n\nint main(){\n  into();\n  work();\n  outo();\n  return 0;\n}\n```",
        "postTime": 1609209786,
        "uid": 32331,
        "name": "hezlik",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7173 \u3010\u6709\u8d1f\u5708\u7684\u8d39\u7528\u6d41\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6709\u8d1f\u73af\u7684\u8d39\u7528\u6d41\uff0c\u5c31\u5f97\u4f7f\u7528\u53e6\u5916\u4e00\u79cd\u5904\u7406\u65b9\u5f0f\u4e86\uff0c\u90a3\u5c31\u662f\u5f3a\u5236\u6ee1\u6d41\u3002\u5bf9\u4e8e\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6765\u8ba9\u4ed6\u7684\u8d39\u7528\u53d8\u4e3a\u6b63\u3002\n\n\u9996\u5148\uff0c\u5982\u56fe\uff0c\u5047\u8bbe $u$ \u5230 $v$ \u6709\u4e00\u6761\u6743\u503c\u4e3a $-w$ \u7684\u8fb9 $(w > 0)$ \uff0c\u5bb9\u91cf\u4e3a $cap$ \u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/d6932tj7.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5982\u56fe\uff0c\u6211\u4eec\u5148\u5efa\u4e00\u4e2a\u865a\u62df\u6e90\u70b9 $(ss)$ \u548c\u865a\u62df\u6c47\u70b9 $(tt)$ \uff0c\u7531 $ss$ \u6307\u5411 $u$ \uff0c $tt$ \u6307\u5411 $v$ \uff0c\u5bb9\u91cf\u6682\u65f6\u4e0d\u7ba1\uff0c\u8d39\u7528\u5747\u4e3a0\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/uw1by4bj.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u4ece $ss$ \u5230 $tt$ \u6709\u4e00\u6761\u5bb9\u91cf\u4e3a $cap$ \u7684\u589e\u5e7f\u8def\uff0c\u90a3\u4e48\u6b63\u597d\u6d41\u6ee1\n\u8fd9\u4e00\u6761\u8def\uff0c\u6b8b\u4f59\u7f51\u7edc\u53d8\u6210\u4e86\u8fd9\u4e2a\u6837\u5b50\uff0c\u5982\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/n4qv56sw.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u8fd9\u6837\u5982\u679c\u4e0d\u770b $ss$ \u548c $tt$ \u8fde\u5411 $u,v$ \u7684\u8fb9\u7684\u5bb9\u91cf\u7684\u8bdd\uff0c\u5b9e\u9645\u5c31\u662f\u5c06\u8fde\u63a5 $u,v$ \u7684\u8fb9\u53cd\u5411\u4e86\uff0c\u6216\u8005\u8bf4\uff0c\u662f**\u63d0\u524d\u5c06\u8fd9\u6761\u8fb9\u6d41\u6ee1\u4e86**\uff0c\u6ca1\u9519\uff0c\u56e0\u4e3a\u7f51\u7edc\u6d41\u7684\u201c\u53cd\u6094\u201d\u6027\u8d28\uff0c\u63d0\u524d\u6d41\u6ee1\u4e00\u6761\u8fb9\u662f\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u7684\u3002\u4f46\u662f\u5728\u539f\u7f51\u7edc\u56fe\u4e2d\uff0c\u5373\u4f7f\u4f60\u8fd9\u6761\u8fb9\u6d41\u6ee1\u4e86\uff0c\u8fd9\u5728\u5f53\u524d\u7684\u7f51\u7edc\u4e2d\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u8fd9\u65f6\u600e\u4e48\u529e\u5462\uff1f $ss$ \u548c $tt$ \u7684\u4f5c\u7528\u5c31\u5728\u4e8e\u8fd9\u91cc\uff0c\u865a\u62df\u6e90\u6c47\u80fd\u4fdd\u969c\u4f60\u5f53\u524d\u7f51\u7edc\u7684\u5408\u6cd5\u6027\uff0c\u4ece\u800c\u4fdd\u969c\u5f3a\u5236\u6ee1\u6d41\u7684\u5408\u6cd5\u6027\u3002\u8dd1\u8d39\u7528\u6d41\u65f6\uff0c\u5148\u8dd1\u4e00\u904d\u865a\u62df\u6e90\u6c47\uff0c\u518d\u8dd1\u4e00\u904d\u771f\u5b9e\u7684\u6e90\u6c47\u5373\u53ef\u3002\u5bf9\u4e8e\u6ee1\u6d41\u5bf9\u8d39\u7528\u7684\u5f71\u54cd\uff0c\u4e00\u5f00\u59cb\u628a\u8fb9\u7684\u8d39\u7528\u7b97\u4e00\u4e0b\u5373\u53ef\uff0c\u8fd8\u662f\u4e0d\u96be\u7684\u3002\n\n\u81f3\u4e8e $ss$ \u8fde\u5411 $u$ \u548c $v$ \u8fde\u5411 $tt$ \u7684\u8fb9\u7684\u5bb9\u91cf\uff0c\u9009\u4e3a $cap$ \u5373\u53ef\uff0c\u56e0\u4e3a\u53cd\u6094\u7684\u5bb9\u91cf\u4e0d\u4f1a\u8d85\u8fc7 $cap$ \u3002\n\n\u6700\u540e\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5b9e\u9645\u8fd0\u7528\u5f53\u4e2d\uff0c\u56e0\u4e3a $ss$ \u8fde\u51fa\u7684\u8fb9\u548c $tt$ \u8fde\u5165\u7684\u8fb9\u8d39\u7528\u90fd\u4e3a 0 \uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u65e2\u6709\u7531 $ss$ \u8fde\u5165\u7684\u8fb9\uff0c\u53c8\u6709\u8fde\u5411 $tt$ \u7684\u8fb9\uff0c\u5c31\u53ef\u4ee5\u628a\u8fb9\u62b5\u6d88\u4e00\u90e8\u5206\uff0c\u4ece\u800c\u51cf\u5c11\u5e38\u6570\u3002\n\n\u5904\u7406\u8d1f\u6743\u7684\u90e8\u5206\uff1a\n\n```cpp\ninline void init()\n{\n\tfoir(i,1,m)\n\t{\n\t\tint u=read(),v=read(),c=read(),w=read();\n\t\tif (w>=0)\n\t\t\tlink(u,v,c,w),link(v,u,0,-w);\n\t\telse\n\t\t{\n\t\t\tlink(v,u,c,-w),link(u,v,0,w);\n\t\t\ttot[u]-=c,tot[v]+=c;\n\t\t\tminc+=c*w;  \n\t\t}\n\t}\n\tst=n+1,tt=st+1;\n\tfoir(i,1,n)\n\t{\n\t\tif(!tot[i])\n\t\t\tcontinue;\n\t\tif(tot[i]>0)\n\t\t\tlink(st,i,tot[i],0),link(i,st,0,0);\n\t\telse link(i,tt,-tot[i],0),link(tt,i,0,0);\n\t}\n}\n```",
        "postTime": 1630409806,
        "uid": 215590,
        "name": "Ckger",
        "ccfLevel": 5,
        "title": "P7173\u3010\u6a21\u677f\u3011\u6709\u8d1f\u5708\u7684\u8d39\u7528\u6d41 \u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\u76f8\u8f83\u4e8e\u666e\u901a\u7684\u8d39\u7528\u6d41\u6a21\u677f\u53ea\u591a\u4e86\u4e00\u4e2a\u5bf9\u4e8e\u8d1f\u8fb9\u7684\u5904\u7406\uff08\u5f3a\u5236\u6ee1\u6d41\uff09\u3002\n\n\u5bf9\u4e8e\u8d1f\u7684\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u4e34\u65f6\u7684\u539f\u70b9\u548c\u6c47\u70b9\uff0c\u5148\u624b\u8dd1\u4e00\u8fb9\u589e\u5e7f\u3002\n\n\u5b9e\u9645\u4e0a\u5c31\u76f8\u5f53\u4e0e\u539f\u672c\u4ece  $   a \\rightarrow b   $   \u6709\u4e00\u6761 $ -1 $  \u7684\u8fb9\uff0c\u5b9e\u9645\u4e0a\u5c31\u76f8\u5f53\u4e8e\uff0c\u4ece   $b \\rightarrow a$ \u6709\u4e00\u6761  $1$  \u7684\u8fb9\uff0c\u53ea\u4e0d\u8fc7\u8d39\u7528\u76f8\u53cd\uff0c\u7136\u540e\u5c06 $a$ \u5f80\u4e34\u65f6\u6c47\u70b9\uff0c $b$  \u5f80\u4e34\u65f6\u6e90\u70b9 \u8fde\u4e00\u6761\u8fb9\u3002\n\n\u6700\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n```\n#include<cstdio>\n#include<queue>\n#include<string.h>\nusing std::queue;\n#define min(a,b) a<b?a:b\n#define N 100005\nconst int INF = (1<<29);\nint tot=1,head[N<<1],cost[N<<1],to[N<<1],cap[N<<1],nex[N<<1];\nint incf[N],pre[N],vis[N],d[N];\nint maxflow,ans;\nvoid add(int x,int y,int c,int z){\n    ++tot;\n    to[tot]=y;\n    cost[tot]=z;\n    cap[tot]=c;\n    nex[tot]=head[x];\n    head[x]=tot;\n}\ninline bool spfa(int s,int t){\n    memset(vis,0,sizeof vis);\n    memset(d,127,sizeof d);\n    queue<int> Q;\n    Q.push(s),d[s]=0,vis[s]=1,incf[s]=INF;\n    while(!Q.empty()){\n        int x=Q.front();Q.pop();\n        vis[x]=0;\n        for(int i=head[x];i;i=nex[i]){\n            int u=to[i];\n            if(cap[i]&&d[u]>d[x]+cost[i]){\n               d[u]=d[x]+cost[i];\n               pre[u]=i;\n               incf[u]=min(incf[x],cap[i]);\n               if(!vis[u]) \n                   vis[u]=1,Q.push(u);\n            }\n        }\n    }\n    if(d[t]>=INF)\n        return 0;\n    return 1;\n}\ninline void update(int s,int t){\n\tint u=t,i;\n\twhile(u!=s){\n\t\ti=pre[u];\n\t\tcap[i]-=incf[t];\n\t\tcap[i^1]+=incf[t];\n\t\tu=to[i^1];\n\t}\n\tmaxflow+=incf[t]; \n    ans+=incf[t]*d[t];\n}\nint n,m,s,t,st,tt,total[N];\ninline void EK(){\n    while(spfa(st,tt))\n        update(st,tt);\n    maxflow=0;\n    while(spfa(s,t))\n        update(s,t);\n}\nsigned main(){\n    int u,v,c,w;\n    scanf(\"%d%d%d%d\",&n,&m,&s,&t);\n    for(register int i=1;i<=m;++i){\n        scanf(\"%d%d%d%d\",&u,&v,&c,&w);\n        if(w>=0)\n            add(u,v,c,w),add(v,u,0,-w);\n        else{\n            add(v,u,c,-w),add(u,v,0,w);\n            total[u]-=c,total[v]+=c;\n            ans+=c*w;  \n        }\n    }\n    st=n+1,tt=n+2;\n    for(register int i=1;i<=n;++i){\n        if(!total[i])\n            continue;\n        if(total[i]>0)\n            add(st,i,total[i],0),add(i,st,0,0);\n        else add(i,tt,-total[i],0),add(tt,i,0,0);\n    }\n    add(t,s,INF,0),add(s,t,0,0),\n    EK();\n    printf(\"%d %d\\n\",maxflow,ans);\n    return 0;\n}\n```\n",
        "postTime": 1626178735,
        "uid": 154334,
        "name": "Garrison",
        "ccfLevel": 0,
        "title": "P7173 \u3010\u6a21\u677f\u3011\u6709\u8d1f\u5708\u7684\u8d39\u7528\u6d41 \u9898\u89e3"
    },
    {
        "content": "\u8d39\u7528\u6d41\u56e0\u4e3a\u662f\u4f7f\u7528\u6700\u77ed\u8def\u6765\u67e5\u627e\u589e\u5e7f\u8def\u7684\uff0c\u6240\u4ee5\u5f53\u539f\u56fe\u4e0a\u5b58\u5728\u8d1f\u6743\u5708\u7684\u65f6\u5019\uff0c\u4f1a\u5bfc\u81f4\u4e0d\u80fd\u6b63\u5e38\u7ec8\u6b62\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u539f\u56fe\u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u4ecd\u7136\u5b58\u5728\uff0c\u6240\u4ee5\u8003\u8651\u6d88\u53bb\u8d1f\u5708\u3002\n\n\u6709\u4e00\u79cd\u53ef\u4ee5\u6d88\u53bb\u8d1f\u5708\u7684\u6d88\u5708\u7b97\u6cd5\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u5b9e\u5728\u592a\u9ad8\uff0c\u6240\u4ee5\u8003\u8651\u6700\u7b80\u5355\u7c97\u66b4\u7684\u505a\u6cd5\uff1a\u5bf9\u4e8e\u4e00\u6761\u8fb9 $u \\to v$\uff0c\u5176\u4e2d $u,v \\in V$\uff0c\u5982\u679c\u5176\u8d39\u7528 $w$ \u4e3a\u8d1f\uff0c\u5219\u66b4\u529b\u4f7f\u8fd9\u6761\u8fb9\u6ee1\u6d41\uff0c\u5373\u53ef\u8fbe\u5230\u6d88\u9664\u8d1f\u6743\u8fb9\u7684\u76ee\u7684\u3002\n\n\u5982\u4f55\u624d\u80fd\u4f7f\u8fd9\u6761\u8fb9\u5f3a\u5236\u6ee1\u6d41\uff1f\u8003\u8651\u589e\u52a0\u8d85\u7ea7\u6e90 $s'$ \u548c\u8d85\u7ea7\u6c47 $t'$\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8d1f\u6743\u8fb9 $u \\to v$\uff0c\u8bbe\u5176\u5bb9\u91cf\u4e3a $w$\uff0c\u8d39\u7528\u4e3a $c$\u3002\u5c06\u5176\u6ee1\u6d41\u540e\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a $v \\to u$ \u7684\u4e00\u6761\u5bb9\u91cf\u4e3a $w$\uff0c\u8d39\u7528\u4e3a $-c$ \u7684\u8fb9\uff0c\u5e76\u52a0\u4e0a\u5bf9\u8d39\u7528\u7684\u8d21\u732e\u3002\n\n\u8bbe $\\operatorname{tot}(u)$ \u4e3a $u$ \u9644\u8fd1\u7684\u6240\u6709\u8d1f\u6743\u8fb9\u51fa\u8fb9\u7684\u5bb9\u91cf\u51cf\u53bb\u6240\u6709\u8d1f\u6743\u5165\u8fb9\u7684\u5bb9\u91cf\u3002\u5bf9\u4e8e\u6240\u6709 $u \\in V,u \\ne s',u \\ne t'$\uff0c\u5982\u679c $\\operatorname{tot}(u) > 0$\uff0c\u5219 \u4ece $s'$ \u5411 $u$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $\\operatorname{tot}(u)$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff1b\u5982\u679c $\\operatorname{tot}(u) < 0$\uff0c\u5219\u4ece $u$ \u5411 $t'$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $-\\operatorname{tot}(u)$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u53ef\u77e5\u539f\u56fe\u4e0a\u5df2\u4e0d\u5b58\u5728\u8d1f\u6743\u5708\u3002\n\n\u518d\u4ee5 $s$ \u4e3a\u6e90\u70b9\uff0c$t$ \u4e3a\u6c47\u70b9\uff0c\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u7b54\u6848\u5373\u4e3a\u539f\u56fe\u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\nACcode\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define inf 1000000000000000\n#define V 100100\n#define E 200100\ntypedef long long int ll;\nstruct edge {\n\tint to, next;\n\tll capa, cost;\n};\nint cnt = 0, head[V], n, m; edge node[E];\ninline void add(int fir, int nxt, ll w, ll c) {\n\tnode[cnt].to = nxt,\n\t\tnode[cnt].capa = w,\n\t\tnode[cnt].cost = c,\n\t\tnode[cnt].next = head[fir],\n\t\thead[fir] = cnt++;\n}\nint s, t, cur[V]; deque<int>que; ll dep[V], sum = 0, cost = 0;\nbool vis[V];\ninline bool spfa() {\n\tfor (register int i = 0; i <= n; ++i)dep[i] = inf;\n\tdep[s] = 0; que.push_back(s); int u, v;\n\twhile (!que.empty()) {\n\t\tv = que.front(); que.pop_front();\n\t\tfor (register int i = head[v]; i != -1; i = node[i].next) {\n\t\t\tu = node[i].to;\n\t\t\tif (dep[v] + node[i].cost < dep[u] && node[i].capa) {\n\t\t\t\tdep[u] = dep[v] + node[i].cost;\n\t\t\t\tif (!que.empty() && dep[u] < dep[que.front()])que.push_front(u);\n\t\t\t\telse que.push_back(u);\n\t\t\t}\n\t\t}\n\t}\n\treturn (dep[t] != inf);\n}\nll dfs(register int v, register ll flow) {\n\tif (v == t || flow == 0)return flow; ll used = 0, wei = 0;\n\tvis[v] = true;\n\tfor (register int i = cur[v]; i != -1; i = node[i].next) {\n\t\tcur[v] = i;\n\t\tif (!vis[node[i].to] && dep[node[i].to] == dep[v] + node[i].cost && node[i].capa) {\n\t\t\twei = dfs(node[i].to, min(flow - used, node[i].capa));\n\t\t\tif (wei) {\n\t\t\t\tnode[i].capa -= wei,\n\t\t\t\t\tnode[i ^ 1].capa += wei,\n\t\t\t\t\tused += wei,\n\t\t\t\t\tcost += node[i].cost * wei;\n\t\t\t}\n\t\t}\n\t\tif (used == flow)break;\n\t}\n\tvis[v] = false;\n\treturn used;\n}\ninline void Dinic() {\n\twhile (spfa()) {\n\t\tmemcpy(cur, head, (n + 1) * sizeof(int));\n\t\tsum += dfs(s, inf);\n\t}\n}\ninline void addE(int u, int v, ll w, ll c) {\n\tadd(u, v, w, c);\n\tadd(v, u, 0, -c);\n}\nint st, ed; ll tot[V];\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(); cout.tie();\n\tmemset(head, -1, V * sizeof(int));\n\tcin >> n >> m >> st >> ed; \n\tint f, l; ll w, c;\n\tfor (register int i = 0; i < m; ++i) {\n\t\tcin >> f >> l >> w >> c;\n\t\tif (c >= 0)addE(f, l, w, c);\n\t\telse {\n\t\t\taddE(l, f, w, -c);\n\t\t\ttot[f] -= w; tot[l] += w;\n\t\t\tcost += w * c;\n\t\t}\n\t\t\n\t}\n\ts = n + 1, t = n + 2; n = t;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!tot[i])continue;\n\t\tif (tot[i] > 0)addE(s, i, tot[i], 0);\n\t\telse addE(i, t, -tot[i], 0);\n\t}\n\tDinic();\n\ts = st, t = ed; sum = 0; n -= 2;//sum \u4e00\u5b9a\u8981\u6e05\u7a7a\n\tDinic();\n\tcout << sum << \" \" << cost;\n\treturn 0;\n}\n```\n",
        "postTime": 1651569118,
        "uid": 551861,
        "name": "wql_cai",
        "ccfLevel": 4,
        "title": "P7173\u9898\u89e3"
    },
    {
        "content": "## \u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n[P3381 \u3010\u6a21\u677f\u3011\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41](https://www.luogu.com.cn/problem/P3381)\n\n### Dinic(\u8d39\u7528\u6d41)\n\u548c [Dinic\u6700\u5927\u6d41](https://wdsa001.github.io/2021/12/04/dinic/) \u7684\u6700\u5927\u7684\u533a\u522b\u5728\u4e8e\u591a\u4e86\u201c\u8d39\u7528\u201d\u8fd9\u4e00\u6982\u5ff5\uff08\u6240\u4ee5\u4e0d\u80fd\u968f\u5fc3\u6240\u6b32\u7684\u201c\u6d41\u201d\u4e86\uff09\u3002\n\n\u65e2\u7136\u4e0d\u80fd\u968f\u5fc3\u6240\u6b32\u7684\u201c\u6d41\u201d\u4e86\uff0c\u90a3\u5206\u5c42\uff08\u627e\u589e\u5e7f\u8def\u7684\uff09\u7684\u610f\u4e49\u4e5f\u4e0d\u5927\u4e86\u3002\u6240\u4ee5\u5c31\u4e0d\u7528\u5199 `Bfs`\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684 `Spfa`\uff08\u6216\u8005 `Dij`\uff09\uff0c\u601d\u8def\u53d8\u4e3a\u6bcf\u56de\u627e\u5230\u82b1\u8d39\u6700\u5c0f\u7684\u4e00\u6761\u8def\uff0c\u4e00\u6761\u4e00\u6761\u7684\u627e\uff0c\u4e0d\u65ad\u66f4\u65b0\u5373\u53ef\u3002\n\n\u5728\u8bb0\u5f55\u8def\u5f84\u65f6\uff0c\u6211\u4eec\u65b0\u5f00\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u8d1f\u8d23\u5b58\u50a8\u6d41\u8fc7\u6765\u7684\u8282\u70b9\u662f\u8c01\uff08\u7c7b\u4f3c\u4e8e\u5b58\u7236\u8282\u70b9\uff09\uff0c\u53e6\u4e00\u4e2a\u5b58\u50a8\u662f\u4ece\u90a3\u6761\u8def\u6d41\u8fc7\u6765\u7684\uff08\u65b9\u4fbf\u66f4\u65b0\u53cd\u5411\u5f27\uff09\u3002\u5728\u6700\u540e\u66f4\u65b0\u6d41\u91cf\u65f6\uff0c\u901a\u8fc7\u4e0d\u65ad\u7684\u201c\u722c\u6811\u201d\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\n\n- \u7531\u4e8e\u591a\u4e86\u201c\u8d39\u7528\u201d\uff0c\u6240\u4ee5\u8fde\u53cd\u5411\u8fb9\u7684\u65f6\u5019\uff0c\u8981\u5c06\u8d39\u7528\u53d6\u53cd\u3002\n\n- \u867d\u7136\u8981\u627e\u6700\u5c0f\u8d39\u7528\uff0c\u4f46\u524d\u63d0\u662f\u80fd\u6d41\u51fa\u6700\u5927\u6d41\u3002\n\n### \u4ee3\u7801\u601d\u8def\n- \u52a0\u8fb9\uff08\u6ce8\u610f\u53cd\u5411\u5f27\uff09\u3002\n\n- \u5224\u65ad\u6c47\u70b9\u6e90\u70b9\u8054\u901a\uff08\u540c\u65f6\u8ba1\u7b97\u8054\u901a\u7684\u6700\u5c0f\u4ef7\u503c\uff09\u3002\n\n- \u7d2f\u8ba1\u4ef7\u503c\u548c\u6d41\u91cf\u3002\n\n- \u66f4\u65b0\u7ecf\u8fc7\u8def\u5f84\u7684\u6d41\u91cf\u3002\n\n- \u8f93\u51fa\u6700\u5927\u6d41\uff0c\u6700\u5c0f\u8d39\u7528\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<cctype>\n#include<queue>\n#include<vector>\nusing namespace std;\nlong long r_r(){//\u5feb\u8bfb \n\tlong long x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\nconst int o_o=1e5+10;\nstruct po{\n\tint n_t;\n\tint v;\n\tint l;//\u6d41\u91cf \n\tint c;//\u8d39\u7528 \n}p_p[o_o];\nint h_d[o_o],x_p=1;\nint n=r_r(),m=r_r(),s=r_r(),t=r_r();\nbool b_b[o_o];//\u6807\u8bb0\u662f\u5426\u91cd\u590d\u8bbf\u95ee\u8282\u70b9\uff08\u8dd1\u73af\uff09 \nint l_v[o_o];//\u8282\u70b9\u5269\u4f59\u6d41\u91cf \nint v_l[o_o];//\u5230\u5f53\u524d\u8282\u70b9\u6700\u5c0f\u4ef7\u503c \nint f_f[o_o];//\u5b58\u6d41\u5411\u5f53\u524d\u70b9\u7684\u70b9 \nint l_t[o_o];//\u5b58\u6d41\u5411\u5f53\u524d\u70b9\u7684\u8fb9 \nint m_l,m_v;//\u6700\u5927\u6d41\uff0c\u6700\u5c0f\u82b1\u8d39 \nvoid a_d(int u,int v,int l,int c){//\u52a0\u8fb9 \n\tp_p[++x_p].v=v;\n\tp_p[x_p].l=l;\n\tp_p[x_p].c=c;\n\tp_p[x_p].n_t=h_d[u];\n\th_d[u]=x_p;\n}\nqueue<int>q_q;\nbool s_p(){\n\t//\u521d\u59cb\u5316\u6240\u6709\u6570\u7ec4 \n\tmemset(b_b,0,sizeof b_b);\n\tmemset(l_v,0x3f,sizeof l_v);\n\tmemset(v_l,0x3,sizeof v_l);\n\t\n\tq_q.push(s);//\u6e90\u70b9\u5165\u961f \n\tb_b[s]=1;//\u6807\u8bb0 \n\tv_l[s]=0;//\u4ef7\u503c\u521d\u59cb\u5316 \n\tf_f[t]=-1;\n\twhile(!q_q.empty()){\n\t\tint k_k=q_q.front();\n\t\tq_q.pop();\n\t\tb_b[k_k]=0;//\u53d6\u6d88\u6807\u8bb0 \n\t\tfor(int i=h_d[k_k];i;i=p_p[i].n_t){//\u679a\u4e3e\u51fa\u8fb9 \n\t\t\tint v=p_p[i].v;\n\t\t\tif(p_p[i].l&&v_l[v]>v_l[k_k]+p_p[i].c){//\u6709\u6d41\u91cf\u5e76\u4e14\u4ef7\u503c\u53ef\u4ee5\u51cf\u5c0f \n\t\t\t\tv_l[v]=v_l[k_k]+p_p[i].c;//\u66f4\u65b0\u4ef7\u503c \n\t\t\t\tf_f[v]=k_k;//\u8bb0\u5f55\u6765\u7684\u70b9 \n\t\t\t\tl_t[v]=i;//\u8bb0\u5f55\u6765\u7684\u8fb9\u7684\u7f16\u53f7 \n\t\t\t\tl_v[v]=min(l_v[k_k],p_p[i].l);//\u6700\u591a\u80fd\u6d41\u591a\u5c11 \n\t\t\t\tif(!b_b[v]){//\u6ca1\u6709\u88ab\u6807\u8bb0\u8fc7\uff08\u4e0d\u4f1a\u8dd1\u73af\uff09 \n\t\t\t\t\tb_b[v]=1;//\u6807\u8bb0 \n\t\t\t\t\tq_q.push(v);//\u5165\u961f \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn f_f[t]!=-1;//\u6e90\u70b9\u6c47\u70b9\u662f\u5426\u8054\u901a \n}\nint main(){\n\tfor(int i=1;i<=m;i++){\n\t\tint a=r_r(),b=r_r(),v=r_r(),c=r_r();//\u52a0\u8fb9 \n\t\ta_d(a,b,v,c);\n\t\ta_d(b,a,0,-c);//\u53cd\u5411\u5f27\uff0c\u6ce8\u610f\u82b1\u8d39\u53d6\u53cd \n\t}\n\twhile(s_p()){//\u6e90\u70b9\u6c47\u70b9\u8054\u901a\uff0c\u8fd8\u6709\u6d41\u91cf\u53ef\u6d41 \n\t\tint k_k=t;\n\t\tm_l+=l_v[k_k];//\u7d2f\u8ba1\u6d41\u91cf \n\t\tm_v+=l_v[k_k]*v_l[k_k];//\u7d2f\u8ba1\u4ef7\u503c \n\t\twhile(k_k!=s){//\u6ca1\u6709\u8fd4\u56de\u6e90\u70b9 \n\t\t\tp_p[l_t[k_k]].l-=l_v[t];//\u66f4\u65b0\u8fb9\u7684\u6d41\u91cf \n\t\t\tp_p[l_t[k_k]^1].l+=l_v[t];//\u66f4\u65b0\u53cd\u5411\u5f27\u7684\u6d41\u91cf \n\t\t\tk_k=f_f[k_k];//\u8df3\u4e0a\u4e00\u7ea7 \n\t\t}\n\t}\n\tprintf(\"%d %d\",m_l,m_v);//\u8f93\u51fa\u6700\u5927\u6d41\uff0c\u6700\u5c0f\u8d39\u7528 \n\treturn 0;\n} \n```\n## \u6709\u8d1f\u5708\u7684\u8d39\u7528\u6d41\n[P7173 \u3010\u6a21\u677f\u3011\u6709\u8d1f\u5708\u7684\u8d39\u7528\u6d41](https://www.luogu.com.cn/problem/P7173)\n\n### \u601d\u8def\n\u548c\u666e\u901a\u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u7684\u533a\u522b\u5728\u4e8e\u51fa\u73b0\u4e86\u201c\u8d1f\u5708\u201d\u7684\u60c5\u51b5\u3002\n\n\u800c\u5728\u4e0a\u9762\u7684 `Dinic` \u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u7528\u5230\u4e86 `SPFA` \u6765\u5224\u6700\u5c0f\u82b1\u8d39\uff0c\u6240\u4ee5\u5982\u679c\u51fa\u73b0\u201c\u8d1f\u5708\u201d\uff0c\u90a3\u4e48\u5c31\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\u3002\n\n\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u6240\u6709\u7684\u8d1f\u8fb9\u5148\u6d41\u6ee1\uff0c\u8fd9\u6837\uff0c\u5b83\u5c31\u548c\u6ca1\u6709\u6d41\u6ee1\u7684\u6b63\u8fb9\u7684\u53cd\u5411\u5f27\u6027\u8d28\u76f8\u540c\u4e86\uff0c\u6ce8\u610f\u6b64\u65f6\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u6d41\u91cf\u60c5\u51b5\u3002\u53ef\u4ee5\u8ba9\u4e00\u4e9b\u8282\u70b9\u5148\u201c\u900f\u652f\u201d\u4e00\u4e9b\u6d41\u91cf\uff0c\u6ce8\u610f\u4ee3\u4ef7\u8981\u8bb0\u5f55\u7ed3\u679c\u3002\n\n\u73b0\u5728\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u8282\u70b9\u5269\u4f59\u7684\u201c\u91cf\u201d\u662f\u6b63\u6570\uff0c\u800c\u53e6\u4e00\u4e9b\u662f\u8d1f\u6570\u3002\u8fd9\u4e9b\u503c\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u5904\u7406\u7684\uff0c\u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u4e24\u4e2a\u65b0\u8282\u70b9\uff0c\u4e00\u4e2a\u65b0\u6e90\u70b9\u548c\u6240\u6709\u5927\u4e8e\u96f6\u7684\u8282\u70b9\u8fde\u8fb9\uff08\u8fd9\u6837\u624d\u80fd\u6ee1\u8db3\u5b83\u4eec\u7684\u201c\u9700\u6c42\u201d\uff09\uff0c\u4e00\u4e2a\u65b0\u6c47\u70b9\u548c\u6240\u6709\u5c0f\u4e8e\u96f6\u7684\u8282\u70b9\u8fde\u8fb9\uff08\u8ba9\u5b83\u4eec\u591a\u4f59\u7684\u201c\u6d41\u8d70\u201d\uff09\u3002\n\n\u8fd9\u65f6\u901a\u8fc7\u65b0\u6e90\u70b9\u548c\u65b0\u6c47\u70b9\u8dd1\u4e00\u904d\u6700\u5927\u8d39\u7528\u6700\u5c0f\u6d41\uff0c\u5c3d\u91cf\u6ee1\u8db3\u4e0d\u540c\u8282\u70b9\u7684\u4e0d\u540c\u201c\u9700\u6c42\u201d\uff08\u6b64\u65f6\u5df2\u7ecf\u4e0d\u5b58\u5728\u8d1f\u8fb9\u4e86\uff0c\u8d1f\u8fb9\u662f\u8d8a\u8dd1\u8d8a\u5212\u7b97\u7684\u6240\u4ee5\u4e5f\u662f\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff09\u3002\u56e0\u4e3a\u6211\u4eec\u4e00\u5f00\u59cb\u5047\u8bbe\u7684\u662f\u6240\u6709\u8d1f\u8fb9\u201c\u6d41\u6ee1\u201d\uff0c\u800c\u8fd9\u4e4b\u4e2d\u53ef\u5b9a\u6709\u591a\u4f59\u7684\uff08\u8fbe\u4e0d\u5230\u6700\u5927\u6d41\u91cf\u7684\u8fb9\uff09\uff0c\u6240\u4ee5\u901a\u8fc7\u8fd9\u6b21\u6700\u5927\u8d39\u7528\u6700\u5c0f\u6d41\u6765\u5c06\u8fd9\u4e9b\u201c\u5197\u4f59\u201d\u7684\u201c\u6d41\u91cf\u201d\u9664\u53bb\u3002\n\n\u6ee1\u8db3\u5c3d\u91cf\u591a\u7684\u8282\u70b9\u540e\uff0c\u5c31\u53ef\u4ee5\u5c06\u6e90\u70b9\u548c\u6c47\u70b9\u6b63\u5e38\u518d\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u4e86\uff0c\u56e0\u4e3a\u8fd8\u6709\u4e00\u4e9b\u6ca1\u6709\u201c\u9700\u6c42\u201d\u7684\u8282\u70b9\uff08\u6ca1\u6709\u8d1f\u8fb9\u7684\u8282\u70b9\uff09\u9700\u8981\u7edf\u8ba1\u3002\n\n### \u4ee3\u7801\u601d\u8def\n- \u52a0\u8fb9\uff08\u6ce8\u610f\u53cd\u5411\u5f27\uff09\u3002\n\n- \u5c06\u6240\u6709\u8d1f\u8fb9\u201c\u6d41\u6ee1\u201d\uff0c\u5e76\u8bb0\u5f55\u8282\u70b9\u72b6\u6001\u548c\u8d39\u7528\u3002\n\n- \u5efa\u65b0\u6e90\u70b9\u548c\u65b0\u6c47\u70b9\uff0c\u5e76\u548c\u6709\u9700\u8981\u7684\u8282\u70b9\u8fde\u8fb9\u3002\n\n- \u7528\u65b0\u6e90\u70b9\u548c\u65b0\u6c47\u70b9\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u53bb\u9664\u201c\u5197\u4f59\u201d\u3002\n\n- \u5728\u8dd1\u4e00\u904d\u771f\u6b63\u7684\u6e90\u70b9\u548c\u6c47\u70b9\u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u7edf\u8ba1\u7ed3\u679c\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<cctype>\n#include<queue>\n#include<vector>\nusing namespace std;\nlong long r_r(){//\u5feb\u8bfb \n\tlong long x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\nconst int o_o=2e5+10;\nconst int m_a=1e9+10;\nstruct po{\n\tint n_t;\n\tint v;\n\tint l;//\u8fb9\u7684\u6700\u5927\u6d41\u91cf \n\tint c;//\u201c\u8def\u8d39\u201d \n}p_p[o_o];\nint x_p=1,h_d[o_o];\nint v_l[o_o];//\u5230\u5f53\u524d\u8282\u70b9\u6700\u5c0f\u4ef7\u503c \nint l_t[o_o];//\u8bb0\u5f55\u6d41\u5230\u5f53\u524d\u8282\u70b9\u7684\u8def \nint l_v[o_o];//\u6700\u591a\u80fd\u6d41\u7684\u91cf \nint s_m[o_o];//\u5f53\u524d\u70b9\u5269\u4f59\u6d41\u91cf \nbool b_b[o_o];//\u6807\u8bb0\u662f\u5426\u91cd\u590d\u8bbf\u95ee\u8282\u70b9\uff08\u8dd1\u73af\uff09\nint m_l,m_v;//\u6700\u5927\u6d41\u91cf\uff0c\u6700\u5c0f\u82b1\u8d39 \nint s_i,t_i;//\u4e34\u65f6\u8282\u70b9 \nint n=r_r(),m=r_r(),s=r_r(),t=r_r();\nvoid a_d(int u,int v,int l,int c){//\u52a0\u8fb9 \n\tp_p[++x_p].v=v;\n\tp_p[x_p].l=l;\n\tp_p[x_p].c=c;\n\tp_p[x_p].n_t=h_d[u];\n\th_d[u]=x_p;\n}\nqueue<int>q_q;\nbool s_p(int s,int t){\n\tmemset(b_b,0,sizeof b_b);//\u6807\u8bb0\u662f\u5426\u91cd\u590d\u8bbf\u95ee\u8282\u70b9\uff08\u8dd1\u73af\uff09\n\tmemset(v_l,0x3f,sizeof v_l);//\u521d\u59cb\u5316\u6d41\u5230\u5f53\u524d\u8282\u70b9\u7684\u6700\u5c0f\u8d39\u7528 \n\tq_q.push(s);\n\tv_l[s]=0;//\u521d\u59cb\u5316\u8d39\u7528 \n\tb_b[s]=1;//\u6807\u8bb0 \n\tl_v[s]=m_a;//\u521d\u59cb\u5316\u6700\u591a\u6d41\u7684\u91cf \n\twhile(!q_q.empty()){\n\t\tint k_k=q_q.front();\n\t\tq_q.pop();\n\t\tb_b[k_k]=0;//\u6807\u8bb0 \n\t\tfor(int i=h_d[k_k];i;i=p_p[i].n_t){\n\t\t\tint v=p_p[i].v;\n\t\t\tif(p_p[i].l&&v_l[v]>v_l[k_k]+p_p[i].c){//\u6709\u6d41\u91cf\u5e76\u4e14\u66f4\u65b0\u6700\u5c0f\u8d39\u7528 \n\t\t\t\tv_l[v]=v_l[k_k]+p_p[i].c;//\u66f4\u65b0\u6700\u5c0f\u8d39\u7528 \n\t\t\t\tl_t[v]=i;//\u8bb0\u5f55\u6d41\u8fc7\u6765\u7684\u8def \n\t\t\t\tl_v[v]=min(l_v[k_k],p_p[i].l);//\u6700\u591a\u80fd\u6d41\u7684\u91cf \n\t\t\t\tif(!b_b[v]){//\u6807\u8bb0\u662f\u5426\u91cd\u590d\u8bbf\u95ee\u8282\u70b9\uff08\u8dd1\u73af\uff09\n\t\t\t\t\tb_b[v]=1;//\u6807\u8bb0 \n\t\t\t\t\tq_q.push(v);//\u5165\u961f \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn v_l[t]!=v_l[0];//\u68c0\u67e5\u6e90\u70b9\u6c47\u70b9\u662f\u5426\u8054\u901a \n} \nvoid u_p(int s,int t){\n\tint k_k=t;\n\twhile(k_k!=s){//\u672a\u56de\u5230\u539f\u70b9 \n\t\tint i=l_t[k_k];//\u8fd4\u56de\u6d41\u8fc7\u6765\u7684\u8def \n\t\tp_p[i].l-=l_v[t];//\u66f4\u65b0\u8def\u5f84\u6d41\u91cf \n\t\tp_p[i^1].l+=l_v[t];//\u66f4\u65b0\u6d41\u91cf \n\t\tk_k=p_p[i^1].v;//\u56de\u5230\u6d41\u8fc7\u6765\u7684\u70b9 \n\t}\n\tm_l+=l_v[t];//\u7edf\u8ba1\u6d41\u91cf \n\tm_v+=l_v[t]*v_l[t];//\u7edf\u8ba1\u8d39\u7528 \n}\nint main(){\n\tfor(int i=1;i<=m;i++){\n\t\tint a=r_r(),b=r_r(),w=r_r(),c=r_r();//\u8bfb\u5165 \n\t\t\n\t\t//\u52a0\u8fb9 \n\t\tif(c>=0){\n\t\t\ta_d(a,b,w,c);\n\t\t\ta_d(b,a,0,-c);//\u52a0\u53cd\u5411\u5f27 \n\t\t}else {//\u5047\u8bbe\u6240\u6709\u8d1f\u8fb9\u5168\u90e8\u6d41\u5b8c\u4e86 \n\t\t\ta_d(a,b,0,c);//\u6d41\u91cf\u6e05\u96f6 \n\t\t\ta_d(b,a,w,-c);//\u53cd\u5411\u5f27\u66f4\u65b0 \n\t\t\ts_m[a]-=w;//\u8282\u70b9\u6d41\u91cf\u66f4\u65b0 \n\t\t\ts_m[b]+=w;//\u8282\u70b9\u6d41\u91cf\u66f4\u65b0 \n\t\t\tm_v+=w*c;//\u7edf\u8ba1\u8d39\u7528\u6d41 \n\t\t}\n\t}\n\ts_i=n+1;//\u65b0\u6e90\u70b9 \n\tt_i=n+2;//\u65b0\u6c47\u70b9 \n\tfor(int i=1;i<=n;i++){\n\t\tif(!s_m[i])continue;//\u6ca1\u6709\u6d41\u91cf\u8df3\u8fc7 \n\t\tif(s_m[i]>0){//\u8282\u70b9\u9700\u8981\u6d41\u91cf \n\t\t\ta_d(s_i,i,s_m[i],0);//\u548c\u65b0\u6e90\u70b9\u8fde\u8fb9\uff08\u53ef\u4ee5\u8ba9\u201c\u91cf\u201d\u6d41\u8fc7\u6765\uff09 \n\t\t\ta_d(i,s_i,0,0);//\u53cd\u5411\u5f27 \n\t\t}else {//\u8282\u70b9\u4e0d\u9700\u8981\u8fd9\u4e9b\u6d41\u91cf \n\t\t\ta_d(i,t_i,-s_m[i],0);//\u548c\u65b0\u6c47\u70b9\u8fde\u8fb9\uff08\u53ef\u4ee5\u8ba9\u201c\u91cf\u201d\u6d41\u8d70\uff09\n\t\t\ta_d(t_i,i,0,0);//\u53cd\u5411\u5f27 \n\t\t}\n\t}\n\t\n\t//\u5904\u7406\u6240\u6709\u9700\u6c42\u548c\u591a\u4f59\u6709\u5173\u7684\u201c\u6d41\u52a8\u201d \n\twhile(s_p(s_i,t_i))u_p(s_i,t_i);//\u65b0\u8282\u70b9\u6d41\u91cf \n\t\n\tm_l=0;//\u521d\u59cb\u5316\u6700\u5927\u6d41\u91cf \n\t\n\t//\u6b64\u65f6\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u53ef\u4ee5\u8dd1\u6b63\u5e38\u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u4e86 \n\twhile(s_p(s,t))u_p(s,t);//\u771f\u6b63\u6d41\u91cf\u8ba1\u7b97 \n\t\n\tprintf(\"%d %d\\n\",m_l,m_v);//\u8f93\u51fa\u6700\u5927\u6d41\u91cf\uff0c\u6700\u5c0f\u8d39\u7528 \n\treturn 0;\n} \n```\n\n",
        "postTime": 1638669734,
        "uid": 120012,
        "name": "\u738b\u5927\u795e\u2014\u2014A001",
        "ccfLevel": 0,
        "title": "\u8d39\u7528\u6d41"
    },
    {
        "content": "##### \u672c\u9898\u89e3\u4f7f\u7528\u7684\u662f `vector` \u5b58\u56fe\u7684 SPFA_Dinic\u3002\u90e8\u5206\u601d\u60f3\u53c2\u8003\u81ea @[wql_cai](https://www.luogu.com.cn/user/551861) \u5de8\u4f6c\u7684[\u9898\u89e3](https://www.luogu.com.cn/blog/wangqianlong463/solution-p7173)\uff0c\u4f46\u52a0\u4e0a\u4e86\u4e00\u4e9b\u81ea\u5df1\u7684\u7406\u89e3\u3002\n\n### \u9898\u76ee\u7b80\u4ecb\uff1a\n\n\u8d39\u7528\u6d41\uff08\u5e9f\u8bdd\uff09\n\n\u6709\u8d1f\u5708\uff08\u55ef\uff1f\uff09\n\n### \u7b80\u8981\u601d\u8def\uff1a\n\n\u56e0\u4e3a\n\n> \u6ce8\u610f\u5b58\u5728\u8d39\u7528\u4e3a\u8d1f\u7684\u8fb9\u548c\u603b\u8d39\u7528\u4e3a\u8d1f\u7684\u73af\u3002\n\n> \u6ce8\u610f\uff0c\u672c\u9898\u4e2d\u5141\u8bb8\u4e00\u4e2a\u4e0d\u7ecf\u8fc7 $s,t$ \u7684\u73af\u6574\u4f53\u52a0\u4e0a\u4e00\u4e2a\u6d41\u91cf\u3002\n\n\u7b80\u5355\u601d\u8003\u4e00\u4e0b\uff0c\u8981\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u8fd9\u4e2a\u8d1f\u73af\u663e\u7136\u662f\u4f1a\u8dd1\u6ee1\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u884c\u624b\u52a8\u5904\u7406\u6bcf\u4e00\u4e2a\u8d1f\u73af\uff0c\u5c06\u5176\u6ee1\u6d41\u3002\n\n\u4f46\u662f\uff0c\u8981\u662f\u62ff\u5230\u4e00\u5f20\u56fe\u8fd8\u5f97\u5148\u53bb\u5224\u65ad\u54ea\u91cc\u662f\u8d1f\u73af\u592a\u70e6\u4e86 ~~\uff08\u6307\u672c\u849f\u84bb\u4e0d\u4f1a\u5224 qwq\uff09~~\u3002\n\n\u7f51\u7edc\u6d41\u4e2d\u6709\u8fd9\u4e48\u4e00\u53e5\u540d\u8a00\uff1a\n\n> \u6b63\u96be\u5219\u53cd\u3002\n\n~~\uff08\u867d\u7136\u597d\u50cf\u548c\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u5173\u7cfb\u5c31\u662f\u4e86\uff09~~\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u5c06\u6240\u6709\u8d1f\u6743\u8fb9\u5168\u90e8\u5f3a\u5236\u6ee1\u6d41\uff0c\u7136\u540e\u901a\u8fc7\u4e00\u4e9b\u624b\u6bb5\u518d\u5c06\u975e\u8d1f\u73af\u4e0a\u7684\u8fb9\u8fd4\u56de\u6765\u3002\n\n\u90a3\u7b2c\u4e00\u6b65\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u6ce8\u610f\u8fc7\u7a0b\u4e2d\u522b\u5fd8\u4e86\u5148\u8bb0\u4e0b\u6ee1\u6d41\u8fb9\u9020\u6210\u7684\u8d21\u732e $mincost_1$\u3002\n\n```cpp\nfor (rint i = 1; i <= m; i++)\n\t{\n\t\tx = readint();\n\t\ty = readint();\n\t\tf = readint();\n\t\tc = readint();\n\t\tif (c < 0)\n\t\t{\n\t\t\tedge[x].push_back({y, 0, c, (int)edge[y].size()});\n\t\t\tedge[y].push_back({x, f, -c, (int)edge[x].size() - 1});\n\t\t\tmincost1 += f * c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tedge[x].push_back({y, f, c, (int)edge[y].size()});\n\t\t\tedge[y].push_back({x, 0, -c, (int)edge[x].size() - 1});\n\t\t}\n\t}\n```\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u5e72\u7684\u5c31\u662f\u9000\u8fd8\u6240\u6709\u4e0d\u5e94\u8be5\u6ee1\u6d41\u7684\u8fb9\u7684\u6d41\u91cf\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u5148\u8bbe\u865a\u62df\u6e90\u70b9 $s'$ \u548c\u6c47\u70b9 $t'$\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u7edf\u8ba1\u5176\u6240\u6709\u8d1f\u6743\u51fa\u8fb9\u5bb9\u91cf\u4e4b\u548c\u51cf\u53bb\u8d1f\u6743\u5165\u8fb9\u5bb9\u91cf\u4e4b\u548c\uff0c\u8bb0\u4e3a $tot_x$\uff0c\u5982 $tot_x>0$\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u70b9\u5b58\u5728\u8d1f\u6743\u51fa\u8fb9\u4e0d\u5e94\u8be5\u6ee1\u6d41\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u70b9\u8fde\u5411 $t'$\uff0c\u6743\u503c\u4e3a $tot_x$\uff1b\u53cd\u4e4b\u5219\u5b58\u5728\u8d1f\u6743\u5165\u8fb9\u4e0d\u5e94\u8be5\u6ee1\u6d41\uff0c\u5c06 $s'$ \u8fde\u5411\u8fd9\u4e2a\u70b9\uff0c\u6743\u503c\u4e3a $-tot_x$\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u518d\u4ece $s'$ \u5230 $t'$ \u8dd1\u4e00\u904d\u8d39\u7528\u6d41\uff0c\u5f97\u5230\u7684\n $minconst_2$ \u5c31\u662f\u5e94\u8fd4\u8fd8\u7684\u8d39\u7528\uff0c\u540c\u65f6\u8dd1\u8d39\u7528\u6d41\u7684\u8fc7\u7a0b\u4e2d\u5c06\u6d41\u91cf\u8fd4\u8fd8\u4e86\u3002\n \n ```cpp\nfor (rint i = 1; i <= n; i++)\n\t\tif (tot[i])\n\t\t{\n\t\t\tif (tot[i] > 0)\n\t\t\t{\n\t\t\t\tedge[i].push_back({t, tot[i], 0, (int)edge[t].size()});\n\t\t\t\tedge[t].push_back({i, 0, 0, (int)edge[i].size() - 1});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge[s].push_back({i, -tot[i], 0, (int)edge[i].size()});\n\t\t\t\tedge[i].push_back({s, 0, 0, (int)edge[s].size() - 1});\n\t\t\t}\n\t\t}\n\twhile (SPFA())\n\t\twhile (flow = dinic(s, INF))\n\t\t\tmaxflow += flow;\n```\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u5f20\u6b63\u5e38\u7684\u8d39\u7528\u6d41\u7684\u56fe\uff0c\u518d\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u5373\u53ef\u3002\n\n\u6700\u540e\u7b54\u6848 $mincost=mincost_1-mincost_2+mincost_3$\uff0c\n\u5c31\u662f\u5f3a\u5236\u6ee1\u6d41\u7684\u8d21\u732e\u51cf\u53bb\u9000\u8fd8\u7684\u8d21\u732e\u52a0\u4e0a\u6700\u540e\u5904\u7406\u8fc7\u8d1f\u8fb9\u7684\u8d21\u732e\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define rint register int\n#define INF 0x7f7f7f7f\nusing namespace std;\nnamespace IO\n{\n\tinline int readint()\n\t{\n\t\tint x = 0, f = 1;\n\t\tchar ch = getchar();\n\t\twhile (!isdigit(ch) && ch != '-')\n\t\t\tch = getchar();\n\t\tif (ch == '-')\n\t\t{\n\t\t\tf = -1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch))\n\t\t{\n\t\t\tx = x * 10 + ch - '0';\n\t\t\tch = getchar();\n\t\t}\n\t\treturn x * f;\n\t}\n\tinline ll readlong()\n\t{\n\t\tll x = 0;\n\t\tint f = 1;\n\t\tchar ch = getchar();\n\t\twhile (!isdigit(ch) && ch != '-')\n\t\t\tch = getchar();\n\t\tif (ch == '-')\n\t\t{\n\t\t\tf = -1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch))\n\t\t{\n\t\t\tx = x * 10 + ch - '0';\n\t\t\tch = getchar();\n\t\t}\n\t\treturn x * f;\n\t}\n\tinline void write(ll x)\n\t{\n\t\tif (x < 0)\n\t\t{\n\t\t\tputchar('-');\n\t\t\twrite(-x);\n\t\t\treturn;\n\t\t}\n\t\tif (x < 10)\n\t\t{\n\t\t\tputchar('0' + x);\n\t\t\treturn;\n\t\t}\n\t\twrite(x / 10);\n\t\tputchar('0' + x % 10);\n\t}\n\tinline void write_(ll x)\n\t{\n\t\twrite(x);\n\t\tputchar(' ');\n\t}\n\tinline void writeln(ll x)\n\t{\n\t\twrite(x);\n\t\tputchar('\\n');\n\t}\n}\nusing namespace IO;\n\nconst int MAXN = 40005;\nint n, m, snode, tnode;\nint x, y, f, c;\nint s, t;\nint mincost1, mincost;\nint maxflow, flow;\nint tot[MAXN];\nint dis[MAXN];\nint inque[MAXN];\nint cur[MAXN]; \nstruct node\n{\n\tint to, val, cost, inv;\n};\nvector < node > edge[MAXN];\n\ninline bool SPFA()\n{\n\tqueue < int > q;\n\tmemset(dis, INF, sizeof(dis));\n\tmemset(inque, 0, sizeof(inque));\n\tdis[s] = 0;\n\tq.push(s);\n\tcur[s] = 0;\n\tinque[s] = 1;\n\twhile (!q.empty())\n\t{\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tinque[x] = 0;\n\t\tfor (rint i = 0; i < edge[x].size(); i++)\n\t\t{\n\t\t\tnode y = edge[x][i];\n\t\t\tif (y.val && dis[y.to] > dis[x] + y.cost)\n\t\t\t{\n\t\t\t\tcur[y.to] = 0;\n\t\t\t\tdis[y.to] = dis[x] + y.cost;\n\t\t\t\tif (!inque[y.to])\n\t\t\t\t{\n\t\t\t\t\tinque[y.to] = 1;\n\t\t\t\t\tq.push(y.to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn (dis[t] != INF);\n}\n\ninline int dinic(int x, int flow)\n{\n\tif (x == t)\n\t\treturn flow;\n\tint rest = flow, k = 0;\n\tinque[x] = 1;\n\tfor (rint i = cur[x]; i < edge[x].size(); i++)\n\t{\n\t\tcur[x] = i;\n\t\tnode y = edge[x][i];\n\t\tif (rest && !inque[y.to] && y.val && dis[y.to] == dis[x] + y.cost)\n\t\t{\n\t\t\tk = dinic(y.to, min(rest, y.val));\n\t\t\trest -= k;\n\t\t\tedge[x][i].val -= k;\n\t\t\tedge[y.to][y.inv].val += k;\n\t\t\tmincost1 += k * y.cost;\n\t\t}\n\t}\n\tinque[x] = 0;\n\treturn flow - rest;\n}\n\nint main()\n{\n\tn = readint();\n\tm = readint();\n\tsnode = readint();\n\ttnode = readint();\n\tfor (rint i = 1; i <= m; i++)\n\t{\n\t\tx = readint();\n\t\ty = readint();\n\t\tf = readint();\n\t\tc = readint();\n\t\tif (c < 0)\n\t\t{\n\t\t\ttot[x] += f;\n\t\t\ttot[y] -= f;\n\t\t\tedge[x].push_back({y, 0, c, (int)edge[y].size()});\n\t\t\tedge[y].push_back({x, f, -c, (int)edge[x].size() - 1});\n\t\t\tmincost1 += f * c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tedge[x].push_back({y, f, c, (int)edge[y].size()});\n\t\t\tedge[y].push_back({x, 0, -c, (int)edge[x].size() - 1});\n\t\t}\n\t}\n\ts = n + 1;\n\tt = n + 2;\n\tfor (rint i = 1; i <= n; i++)\n\t\tif (tot[i])\n\t\t{\n\t\t\tif (tot[i] > 0)\n\t\t\t{\n\t\t\t\tedge[i].push_back({t, tot[i], 0, (int)edge[t].size()});\n\t\t\t\tedge[t].push_back({i, 0, 0, (int)edge[i].size() - 1});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge[s].push_back({i, -tot[i], 0, (int)edge[i].size()});\n\t\t\t\tedge[i].push_back({s, 0, 0, (int)edge[s].size() - 1});\n\t\t\t}\n\t\t}\n\tmincost += mincost1;\n\tmincost1 = 0;\n\twhile (SPFA())\n\t\twhile (flow = dinic(s, INF))\n\t\t\tmaxflow += flow;\n\ts = snode;\n\tt = tnode;\n\tmincost += mincost1;\n\tmincost1 = 0;\n\tmaxflow = 0;\n\twhile (SPFA())\n\t\twhile (flow = dinic(s, INF))\n\t\t\tmaxflow += flow;\n\twrite_(maxflow);\n\twriteln(mincost + mincost1);\n\tsystem(\"pause\");\n\treturn 0;\n}\n\n```",
        "postTime": 1679464920,
        "uid": 433135,
        "name": "GordonWood",
        "ccfLevel": 6,
        "title": "P7173 \u9898\u89e3"
    }
]