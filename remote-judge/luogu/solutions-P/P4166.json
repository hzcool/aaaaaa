[
    {
        "content": "\u9898\u76ee\u63cf\u8ff0\u89c1[\u539f\u9898](https://www.luogu.com.cn/problem/P4166)\u3002\n\n~~\u539f\u6765\u4ee5\u4e3a\u6d1b\u8c37\u4e0a\u4f1a\u6709\u5f88\u591a\u4eba\u53d1\u73b0 hack \u70b9\u4f46\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u2026\u2026~~\n\n\u8981\u6c42\u5e73\u9762\u6700\u5927\u7ec4\u6210\u7684\u56db\u8fb9\u5f62\u9762\u79ef\uff0c\u5b9e\u9645\u4e0a\u548c [Gym102460L](https://codeforces.com/gym/102460) \u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u539f SCOI \u9898\u9762\u5199\u7684\u5b9e\u5728\u662f\u592a\u6a21\u7cca\uff0c\u5e76\u6ca1\u6709\u8bf4\u6570\u636e\u662f\u5426\u6709\u91cd\u590d\u7684\u70b9\uff08\u4f46\u662f\u672c\u9898\u4e2d\u597d\u50cf\u4e0d\u5f71\u54cd\u7b54\u6848\uff09\uff0c\u6240\u4ee5\u8fd8\u662f\u770b Gym \u7684\u90a3\u9053\u9898\u63cf\u8ff0\u597d\u4e9b\u3002\n\n\u9996\u5148\u6839\u636e\u8c03\u6574\u6cd5\uff0c\u53ef\u4ee5\u8bc1\u660e\u6700\u5927\u56db\u8fb9\u5f62\u81f3\u5c11\u6709\u4e09\u4e2a\u70b9\u5728\u51f8\u5305\u4e0a\uff0c\u4f46\u662f\u51f8\u5305\u5927\u5c0f\u6709\u4e09\u79cd\u60c5\u51b5\uff0c\u4e0b\u9762\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n#### \u51f8\u5305\u5927\u5c0f\u5c0f\u4e8e\u7b49\u4e8e $2$ \u65f6\n\n\u5f53\u51f8\u5305\u5927\u5c0f\u5c0f\u4e8e\u7b49\u4e8e $2$\uff0c\u53ef\u4ee5\u8bf4\u660e\u539f\u6765\u7684\u6240\u6709\u70b9\u90fd\u662f\u5171\u7ebf\u6216\u5171\u70b9\u7684\uff0c\u6613\u77e5\u7b54\u6848\u4e3a $0$\u3002\n\n#### \u51f8\u5305\u5927\u5c0f\u7b49\u4e8e $3$ \u65f6\n\n\u51e0\u4e4e\u7f51\u4e0a\u6240\u6709\u9898\u89e3\u90fd\u5ffd\u7565\u4e86\u8fd9\u70b9\uff0c\u4f46\u662f Gym \u9898\u76ee\u7684\u6837\u4f8b\u4e2d\u5c31\u80fd\u5c06\u8fd9\u4e9b\u4ee3\u7801\u5361\u6389\u3002\u8c8c\u4f3c\u9898\u89e3\u533a\u53ea\u6709\u4e00\u4e2a\u7070\u540d\u7528\u66b4\u529b+\u5e38\u6570\u4f18\u5316\u8fc7\u4e86 hack\u2026\u2026\n\n\u8003\u8651\u6240\u6709\u7684\u70b9\u90fd\u5728\u4e00\u4e2a\u4e09\u89d2\u5f62\u8303\u56f4\u5185\uff0c\u8fd9\u65f6\u7b54\u6848\u5e94\u8be5\u662f\u4e00\u4e2a\u51f9\u56db\u8fb9\u5f62\uff0c\u5229\u7528\u65cb\u8f6c\u5361\u58f3\u662f\u65e0\u6cd5\u6b63\u786e\u6c42\u89e3\u7684\u3002\u4f46\u662f\u6839\u636e\u6027\u8d28\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u679a\u4e3e\u9664\u6784\u6210\u51f8\u5305\u7684\u4e09\u4e2a\u70b9\u4ee5\u5916\u7684\u70b9\uff0c\u8ba1\u7b97\u5927\u4e09\u89d2\u5f62\u9762\u79ef\u51cf\u53bb\u7531\u8fd9\u4e2a\u70b9\u548c\u4e09\u89d2\u5f62\u4e09\u8fb9\u4e4b\u4e00\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u6700\u5c0f\u8005\uff0c\u5f97\u5230\u7684\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u4e86\u3002\n\n#### \u51f8\u5305\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e $4$ \u65f6\n\n\u4ecd\u7136\u6839\u636e\u8c03\u6574\u6cd5\uff0c\u53ef\u77e5\u6b64\u65f6\u7ec4\u6210\u6700\u5927\u56db\u8fb9\u5f62\u7684\u56db\u4e2a\u70b9\u4e00\u5b9a\u5168\u90e8\u4f4d\u4e8e\u51f8\u5305\u4e0a\uff0c\u6b64\u65f6\u679a\u4e3e\u8fd9\u4e2a\u56db\u8fb9\u5f62\u7684\u5bf9\u89d2\u7ebf\uff0c\u5229\u7528\u65cb\u8f6c\u5361\u58f3\u7684\u65b9\u5f0f\u6c42\u89e3\u5206\u5e03\u5728\u5bf9\u89d2\u7ebf\u4e24\u4fa7\u7684\u6700\u5927\u4e09\u89d2\u5f62\uff0c\u4e24\u90e8\u5206\u4e4b\u5e76\u5373\u4e3a\u6700\u5927\u56db\u8fb9\u5f62\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n^2)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define MAXN 2005\nusing namespace std;\n\nconst double eps=1e-8;\n\nstruct Point\n{\n\tdouble x,y,i;\n\tPoint(){}\n\tPoint(double _x,double _y):x(_x),y(_y){}\n\tPoint operator - (const Point &p2)const{\n\t\treturn Point(x-p2.x,y-p2.y);\n\t}\n\tbool operator < (const Point p)const{\n\t\tif (p.x!=x) return p.x>x;\n\t\treturn p.y>y;\n\t}\n\tdouble operator * (const Point &p2) {\n\t\treturn 1LL*x*p2.y-1LL*y*p2.x;\n\t}\n};\n\nint n;\nPoint p[MAXN],ch[MAXN];\n\nint ConvexHull(Point *p,int n)\n{\n\tsort(p,p+n);int m=0;\n\tfor (int i=0;i<n;i++)\n\t{\n\t\twhile (m>1&&(ch[m-1]-ch[m-2])*(p[i]-ch[m-2])<=eps) --m;\n\t\tch[m++]=p[i];\n\t}\n\tint k=m;\n\tfor (int i=n-2;~i;i--)\n\t{\n\t\twhile (m>k&&(ch[m-1]-ch[m-2])*(p[i]-ch[m-2])<=eps) --m;\n\t\tch[m++]=p[i];\n\t}\n\tif (n>1) --m;\n\treturn m;\n}\n\ninline bool OK(Point a,Point b,Point c,Point d)\n{\n\tdouble A=fabs((b-a)*(c-a));\n\tdouble B=fabs((b-a)*(d-a));\n\treturn A<B;\n}\n\ninline void Rotating_Calipers(int m)\n{\n\tdouble ans=0,now;\n\tif (m<=2) ans=0;\n\telse if (m==3)\n\t{\n\t\tnow=~(1LL<<63);\n\t\tans=abs((ch[0]-ch[2])*(ch[1]-ch[2]));\n\t\tfor (int i=0;i<n;i++)\n\t\t{\n\t\t\tif (ch[0].i==p[i].i||ch[1].i==p[i].i||ch[2].i==p[i].i) continue;\n\t\t\tdouble s1=fabs((ch[0]-p[i])*(ch[1]-p[i]));\n\t\t\tdouble s2=fabs((ch[1]-p[i])*(ch[2]-p[i]));\n\t\t\tdouble s3=fabs((ch[2]-p[i])*(ch[0]-p[i]));\n\t\t\tnow=min(min(now,s1),min(s2,s3));\n\t\t}\n\t\tif (now!=~(1LL<<63)) ans-=now;\n\t\telse ans=0;\n\t}\n\telse\n\t{\n\t\tfor (int i=0;i<m;i++)\n\t\t{\n\t\t\tint x=(i+1)%m,y=(i+2)%m;\n\t\t\tfor (int j=(i+2)%m;j!=i;(++j)%=m)\n\t\t\t{\n\t\t\t\twhile (x!=j&&OK(ch[i],ch[j],ch[x],ch[x+1])) (++x)%=m;\n\t\t\t\twhile (y!=i&&OK(ch[i],ch[j],ch[y],ch[y+1])) (++y)%=m;\n\t\t\t\tnow=fabs((ch[x]-ch[i])*(ch[j]-ch[i]))+fabs((ch[y]-ch[i])*(ch[j]-ch[i]));\n\t\t\t\tif (now>ans) ans=now;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.3lf\\n\",ans/2.0);\n\treturn ;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=0;i<n;i++) scanf(\"%lf %lf\",&p[i].x,&p[i].y),p[i].i=i;\n\tRotating_Calipers(ConvexHull(p,n));\n\treturn 0;\n}\n/*\n4\n0 0\n4 0\n0 4\n1 1\n*/\n```",
        "postTime": 1582514239,
        "uid": 15681,
        "name": "HeRaNO",
        "ccfLevel": 4,
        "title": "\u300cSCOI2007\u300d\u6700\u5927\u571f\u5730\u9762\u79ef"
    },
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u505a\u5230$O(nlogn)$\uff0c\u74f6\u9888\u5728\u4e8e\u6c42\u51f8\u5305\u3002\n\n\u9996\u5148\u8fd9\u56db\u4e2a\u70b9\u80af\u5b9a\u90fd\u5728\u51f8\u5305\u4e0a\uff0c\u6240\u4ee5\u9996\u5148\u6c42\u51fa\u51f8\u5305\u3002\n\n\u800c\u4e14\u8fd9\u4e2a\u56db\u8fb9\u5f62\u7684\u5bf9\u89d2\u7ebf\u7684\u4e24\u4e2a\u7aef\u70b9\u4e00\u5b9a\u662f\u5bf9\u8e35\u70b9\uff0c\u8003\u8651\u65cb\u8f6c\u5361\u58f3\uff0c$O(n)$\u679a\u4e3e\u5bf9\u89d2\u7ebf$P_u,P_v$\uff0c\u5e76\u5728\u679a\u4e3e\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u5206\u522b\u5728\u5bf9\u89d2\u7ebf\u4e24\u4fa7\uff0c\u79bb\u5bf9\u89d2\u7ebf\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9$P_a,P_b$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d$u,v,a,b$\u90fd\u53ea\u5bf9\u6bcf\u4e2a\u70b9\u626b\u4e86$O(1)$\u6b21\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n)$\u3002\n\n\u52a0\u4e0a\u51f8\u5305\u7684\u590d\u6742\u5ea6\uff0c\u603b\u590d\u6742\u5ea6\u5c3e\u4e3a$O(nlogn)$\u3002\n\n\u4ee3\u7801\n\n\uff08\u4e4b\u524d\u7684\u4ee3\u7801\u51fa\u4e86\u5199\u5c0f\u9519\u8bef\uff0c\u5728\u679a\u4e3e\u70b9u,v\u65f6,\u4f7f\u7528u+1,v+1\u6ca1\u6709\u8fdb\u884c\u6a21\u8fd0\u7b97\uff0c\u5df2\u66f4\u6b63\uff09\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n\nconst double eps = 1e-10;\n\ninline int dcmp(const double &x) {\n\tif (fabs(x) < eps) return 0; return x < 0 ? -1 : 1;\n}\n\nnamespace geometry {\n\tusing std::max;\n\tusing std::sort;\n\tusing std::unique;\n\n\tstruct point {\n\t\tdouble x, y;\n\t\tpoint(double x = 0, double y = 0) : x(x), y(y) { }\n\t\tbool operator < (const point &b) const {\n\t\t\treturn x != b.x ? x < b.x : y < b.y;\n\t\t}\n\t};\n\ttypedef point vector;\n\ttypedef std::vector<point> polygon;\n\n\tstruct line {\n\t\tpoint p; vector v; double ang;\n\t\tline() {}\n\t\tline(point p, vector v) : p(p), v(v) { ang = atan2(v.y, v.x);}\n\t\tbool operator < (const line &b) const {\n\t\t\treturn ang < b.ang;\n\t\t}\n\t};\n\ttypedef std::vector<line> line_set;\n\n\tvector operator + (const vector &A, const vector &B) { return point(A.x + B.x, A.y + B.y);}\n\tvector operator - (const point &A, const point &B) { return point(A.x - B.x, A.y - B.y);}\n\tvector operator * (const vector &A, const double &b) { return vector(A.x * b, A.y * b);}\n\tvector operator / (const vector &A, const double &b) { return vector(A.x / b, A.y / b);}\n\tbool operator == (const point &A, const point &B) { return fabs(A.x - B.x) < eps && fabs(A.y - B.y) < eps;}\n\n\tinline double dot(const vector &A, const vector &B) { return A.x * B.x + A.y * B.y;}\n\tinline double cross(const vector &A, const vector &B) { return A.x * B.y - A.y * B.x;}\n\tinline double length(const vector &A) { return sqrt(dot(A, A));}\n\tinline double angle(const vector &A, const vector &B) { return acos(dot(A, B) / length(A) / length(B));}\n\n\tinline vector rotate(const vector &A, const double &rad) {\n\t\tdouble c = cos(rad), s = sin(rad);\n\t\treturn vector(A.x * c - A.y * s, A.x * s + A.y * c);\n\t}\n\n\tinline vector normal(const vector &A) {\n\t\tdouble L = length(A); return vector(-A.y / L, A.x / L);\n\t}\n\n\tinline bool on_left(line L, point p) {\n\t\treturn cross(L.v, p - L.p) > 0;\n\t}\n\n\tinline bool on_segment(point p, point a1, point a2) {\n\t\treturn dcmp(cross(a1 - p, a2 - p) == 0) && dcmp(dot(a1 - p, a2 - p)) < 0;\n\t}\n\n\tinline bool segment_proper_intersection(point a1, point a2, point b1, point b2) {\n\t\tdouble c1 = cross(a2 - a1, b1 - a1), c2 = cross(a2 - a1, b2 - a1),\n\t\t\t   c3 = cross(b2 - b1, a1 - b1), c4 = cross(b2 - b1, a2 - b1);\n\t\treturn dcmp(c1) * dcmp(c2) < 0 && dcmp(c3) * dcmp(c4) < 0;\n\t}\n\n\tint in_polygon(point p, polygon &poly) {\n\t\tint wn = 0;\n\t\tfor (int i = 0, n = poly.size(); i < n; i++) {\n\t\t\tif (on_segment(p, poly[i], poly[i%n+1])) return -1;\n\t\t\tint k = dcmp(cross(poly[i%n+1] - poly[i], p - poly[i]));\n\t\t\tint d1 = dcmp(poly[i].y - p.y);\n\t\t\tint d2 = dcmp(poly[i%n+1].y - p.y);\n\t\t\tif (k > 0 && d1 <= 0 && d2 > 0) wn++;\n\t\t\tif (k < 0 && d2 <= 0 && d1 > 0) wn--;\n\t\t}\n\t\tif (wn != 0) return 1;\n\t\treturn 0;\n\t}\n\n\tinline point line_intersection(point p, vector v, point q, vector w) {\n\t\tvector u = p - q; double t = cross(w, u) / cross(v, w);\n\t\treturn p + v * t;\n\t}\n\t\n\tinline point line_intersection(line a, line b) {\n\t\tvector u = a.p - b.p; double t = cross(b.v, u) / cross(a.v, b.v);\n\t\treturn a.p + a.v * t;\n\t}\n\n\tdouble distance_to_line(point p, point a, point b) {\n\t\tvector v1 = b - a, v2 = p - a;\n\t\treturn fabs(cross(v1, v2)) / length(v1);\n\t}\n\t\n\tdouble distance_to_line(point p, line L) {\n\t\tvector v2 = p - L.p;\n\t\treturn fabs(cross(L.p, v2)) / length(L.p);\n\t}\n\t\n\tdouble polygon_area(polygon &poly) {\n\t\tdouble ans = 0;\n\t\tfor (int i = 1, n = poly.size(); i < n - 1; i++)\n\t\t\tans += cross(poly[i] - poly[0], poly[i+1] - poly[0]);\n\t\treturn ans / 2;\n\t}\n\n\tpolygon convex_hull(polygon &p) {\n\t\tsort(p.begin(), p.end());\n\t\tp.erase(unique(p.begin(), p.end()), p.end());\n\t\tint m = 0, n = p.size(); polygon ch(n + 1);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\twhile (m > 1 && cross(ch[m-1] - ch[m-2], p[i] - ch[m-2]) <= 0) m--;\n\t\t\tch[m++] = p[i];\n\t\t}\n\t\tfor (int i = n - 2, k = m; i >= 0; i--) {\n\t\t\twhile (m > k && cross(ch[m-1] - ch[m-2], p[i] - ch[m-2]) <= 0) m--;\n\t\t\tch[m++] = p[i];\n\t\t}\n\t\tif (n > 1) m--; ch.resize(m);\n\t\treturn ch;\n\t}\n\n\tpolygon half_plane_intersection(line_set &L) {\n\t\tsort(L.begin(), L.end());\n\t\tint first, last, n = L.size();\n\t\tpoint *p = new point[n]; line *q = new line[n];\n\t\tq[first=last=0] = L[0];\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\twhile (first < last && !on_left(L[i], p[last-1])) last--;\n\t\t\twhile (first < last && !on_left(L[i], p[first])) first++;\n\t\t\tq[++last] = L[i];\n\t\t\tif (fabs(cross(q[last].v, q[last-1].v)) < eps)\n\t\t\t\tif (on_left(q[--last], L[i].p)) q[last] = L[i];\n\t\t\tif (first < last) p[last-1] = line_intersection(q[last-1], q[last]);\n\t\t}\n\t\tpolygon ans;\n\t\twhile (first < last && !on_left(q[first], p[last-1])) last--;\n\t\tif (last - first <= 1) return ans;\n\t\tp[last] = line_intersection(q[last], q[first]);\n\t\tfor (int i = first; i <= last; i++) ans.push_back(p[i]);\n\t\treturn ans;\n\t}\n}\n\nusing namespace std;\nusing namespace geometry;\n\nint n;\ndouble ans;\npolygon p;\n\ninline void chkmx(int u, int v, int &a, int &b) {\n\twhile ((a + 1) % n != v && distance_to_line(p[a+1], p[u], p[v]) > distance_to_line(p[a], p[u], p[v]))\n\t\ta = (a + 1) % n;\n\twhile ((b + 1) % n != u && distance_to_line(p[b+1], p[u], p[v]) > distance_to_line(p[b], p[u], p[v]))\n\t\tb = (b + 1) % n;\n\tans = max(ans,\n\t\t  length(p[u] - p[v]) * (distance_to_line(p[b], p[u], p[v]) + distance_to_line(p[a], p[u], p[v])));\n}\n\nint main() {\n\tdouble x, y;\n\tcin >> n; p.resize(n);\n\tfor (int i = 0; i < n; i++)\n\t\tcin >> x >> y, p[i] = point(x, y);\n\tp = convex_hull(p);\n\t\n\tn = p.size();\n\tfor (int u = 0, v = 1, a = 0, b = 1; u < n; u++) {\n\t\twhile (1) {\n\t\t\tint diff = dcmp(cross(p[(u+1)%n] - p[u], p[(v+1)%n] - p[v]));\n\t\t\tif (diff <= 0) {\n\t\t\t\tchkmx(u, v, a, b);\n\t\t\t\tif (diff == 0) chkmx(u, (v + 1) % n, a, b);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (b == v) b = (b + 1) % n;\n\t\t\tv = (v + 1) % n;\n\t\t}\n\t\tif (a == u) a = (a + 1) % n;\n\t}\n\tprintf(\"%.3lf\\n\", ans / 2);\n}\n```",
        "postTime": 1557819476,
        "uid": 75102,
        "name": "zsplj_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4166 \u3010[SCOI2007]\u6700\u5927\u571f\u5730\u9762\u79ef\u3011"
    },
    {
        "content": "\u9996\u5148\u60f3\u5230\u7684\u5f53\u7136\u662f$n^4$\u5927\u529b\u679a\u4e3e\u6240\u6709\u70b9\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u4e00\u6761\u8fb9\uff0c\u518d\u4ee5\u8be5\u8fb9\u4e3a\u5bf9\u89d2\u7ebf\u6c42\u51fa\u5de6\u53f3\u4e24\u8fb9\u7684\u4e09\u89d2\u5f62\u6700\u5927\u503c\uff08\u6211\u7684\u65b9\u6cd5\u662f\u7528\u53c9\u79ef\u6c42\u51fa\u6709\u5411\u9762\u79ef\uff0c\u627e\u51fa\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\uff0c\u51cf\u4e00\u4e0b\u5373\u53ef\uff09\uff0c30\u5206\u3002\n\n\u8003\u8651\u7ee7\u7eed\u4f18\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u56db\u8fb9\u5f62\u7684\u56db\u4e2a\u9876\u70b9\u4e00\u5b9a\u5728\u51f8\u5305\u4e0a\uff0c\u6240\u4ee5\u6c42\u5148\u6c42\u51f8\u5305\u518d\u679a\u4e3e\uff0c50\u5206\u3002\n\n\u4e94\u5341\u5206\u6838\u5fc3\u4ee3\u7801\u5927\u81f4\u5982\u4e0b\uff1a\n\n```cpp\ntubao();\ndouble ans = 0.;\nfor(int i = 1; i <= m; ++i)\n{\n\tfor(int j = 1; j < i; ++j)\n\t{\n\t\tminn = inf;\n\t\tmaxx = -inf;\n\t\tfor(int k = 1; k <= m; ++k)\n\t\t{\n\t\t\tif(i == k || j == k)\n\t\t\t\tcontinue;\n\t\t\tdouble area = area2(P[sta[i]], P[sta[j]], P[sta[k]]);\n\t\t\tminn = min(minn, area);\n\t\t\tmaxx = max(maxx, area);\n\t\t}\n\t\tif(minn < 0. && maxx > 0.)\n\t\t\tans = max(maxx - minn, ans);\n\t}\n}\nprintf(\"%.3f\", ans / 2.);\n```\n\n\u6211\u4eec\u53c8\u80fd\u53d1\u73b0\u5bf9\u4e8e\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u5b83\u5728\u51f8\u5305\u4e0a\u4e14\u4f5c\u4e3a\u5bf9\u89d2\u7ebf\uff0c\u6211\u4eec\u53d1\u73b0\u51f8\u5305\u4e0a\u7684\u4e00\u4fa7\u7684\u70b9\u5230\u8be5\u7ebf\u6bb5\u7684\u8ddd\u79bb\u662f\u4e00\u4e2a\u51f8\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e09\u5206\uff0c\u590d\u6742\u5ea6$O(n^2\\log n)$\uff0c\u542c\u8bf4\u5361\u4e00\u4e0b\u5e38\u80fd\u8fc7\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u6574\u7406\u5df2\u7ecf\u6574\u7406\u51fa\u4e86\u4e00\u4e9b\u6027\u8d28\uff0c\u867d\u7136\u90fd\u975e\u5e38\u663e\u800c\u6613\u89c1\uff0c\u4f46\u6211\u4eec\u8fd8\u6ca1\u6709\u628a\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\u3002\n\n\u9996\u5148\uff0c\u51f8\u5305\u662f\u80af\u5b9a\u8981\u6c42\u7684\u3002\n\n\u53d7\u5230\u4e4b\u524d\u7684\u542f\u53d1\uff0c\u6211\u4eec\u4ecd\u7136\u8003\u8651\u679a\u4e3e\u4e00\u6761\u5bf9\u89d2\u7ebf\uff0c\u8bbe\u73b0\u5728\u679a\u4e3e\u5230\u7684\u9876\u70b9\u4e3a$i, j$\u3002\n\n\u8bbe\u53e6\u4e24\u4e2a\u70b9\u4e3a$a, b$\u3002\u6211\u4eec\u5148\u6765\u770b$b$\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u4e0d\u96be\u5f97\u51fa\u5982\u679c\u786e\u5b9a$i,j$\uff0c\u90a3$b$\u5230$ij$\u7684\u8ddd\u79bb\u4e00\u5b9a\u662f\u5355\u5cf0\u7684\u3002\u90a3\u5982\u679c$j$\u5f00\u59cb\u9006\u65f6\u9488\u8f6c\u52a8\uff0c\u5cf0\u663e\u7136\u4e5f\u4f1a\u9006\u65f6\u9488\u8f6c\u52a8\uff08\u53ef\u4ee5\u60f3\u8c61\u662f\u6574\u4e2a\u51f8\u5305\u8f6c\u8fc7\u6765\u4e86\uff09\u3002\n\n![](https://github.com/pfypfypfy/images-in-blogs/blob/master/20180629003.png?raw=true)\n\n\u4e8e\u662f\u6211\u4eec\u8ba9$b$\u9006\u65f6\u9488\u8dd1\u5c31\u884c\u4e86\u3002\n\n\u90a3$a$\u4e5f\u540c\u7406\u3002\n\n\u6211\u4eec\u53d1\u73b0$b$\u5bf9\u6bcf\u4e2a\u70b9\u53ea\u626b\u4e86\u4e00\u904d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a$i$\u590d\u6742\u5ea6$O(n)$\uff0c\u540c\u7406$j,b$\u90fd\u662f\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ntubao();\ndouble ans = 0.;\nfor(int i = 1; i <= m; ++i)\n{\n\tint a = i % m + 1;\n\tint b = (i + 2) % m + 1;\n\tfor(int j = i % m + 2; j <= m; ++j)\n\t{\n\t\twhile(a % m + 1 != j && area(P[sta[i]], P[sta[j]], P[sta[a%m+1]]) > area(P[sta[i]], P[sta[j]], P[sta[a]]))\n\t\t\ta = a % m + 1;\n\t\twhile(b % m + 1 != i && area(P[sta[i]], P[sta[j]], P[sta[b%m+1]]) > area(P[sta[i]], P[sta[j]], P[sta[b]]))\n\t\t\tb = b % m + 1;\n\t\tans = max(ans, area(P[sta[i]], P[sta[j]], P[sta[a]]) + area(P[sta[i]], P[sta[j]], P[sta[b]]));\n\t}\n}\nprintf(\"%.3f\", ans / 2.);\n```",
        "postTime": 1530412679,
        "uid": 84088,
        "name": "pufanyi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4166 \u3010[SCOI2007]\u6700\u5927\u571f\u5730\u9762\u79ef\u3011"
    },
    {
        "content": "\u9996\u5148\u663e\u7136\u9009\u53d6\u7684\u56db\u4e2a\u70b9\u90fd\u5728\u51f8\u5305\u4e0a\u3002\n\n\u6c42\u51fa\u51f8\u5305\u4ee5\u540e\u8003\u8651\u66b4\u529b\u3002\n\n\u679a\u4e3e\u56db\u8fb9\u5f62\u7684\u56db\u4e2a\u70b9 $O(n^4)$ \u6548\u7387\u592a\u4f4e\u3002\n\n\u8003\u8651\u4f18\u5316\u3002\u53d1\u73b0\u6570\u636e\u8303\u56f4 $n\\le 2000$\u3002\u4e8e\u662f\u8003\u8651 $O(n^2)$ \u7b97\u6cd5\u3002\n\n\u8003\u8651\u53ea\u679a\u4e3e\u5bf9\u89d2\u7ebf\uff0c\u5269\u4e0b\u7684\u4e24\u4e2a\u70b9\u901a\u8fc7\u67d0\u4e9b\u6280\u5de7\u627e\u5230\u3002\n\n\u56e0\u4e3a\u8981\u8ba9\u56db\u8fb9\u5f62\u9762\u79ef\u6700\u5927\uff0c\u4e0d\u59a8\u628a\u56db\u8fb9\u5f62\u9762\u79ef\u8f6c\u5316\u4e3a\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u9762\u79ef\uff0c\n\n\u5373 \u56db\u8fb9\u5f62$\\text{abcd} (\\text{a}<\\text{b}<\\text{c}<\\text{d})$ \u4e2d\u679a\u4e3e\u70b9 $\\text{a}$ \u548c\u70b9 $\\text{c}$ \u3002\n\n\u4ee4 $S\\Delta abc$ \u548c $S\\Delta acd$ \u9762\u79ef\u6700\u5927\u3002\n\n\u53c8\u7531\u4e8e\u4e24\u4e2a\u9762\u79ef\u4e92\u4e0d\u5e72\u6270\uff0c\u56e0\u6b64\u53ef\u4ee5\u5206\u5f00\u8ba1\u7b97\u3002\n\n\uff08\u8fd9\u91cc\u5efa\u8bae\u81ea\u5df1\u753b\u56fe\u65b9\u4fbf\u7406\u89e3\u3002\uff09\n\n\u5047\u8bbe\u6211\u4eec\u7684\u591a\u8fb9\u5f62\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/28y725wl.png)\n\n\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u627e\u51fa $b$ \u7684\u4f4d\u7f6e\u3002\n\n\u5f53 $c$ \u70b9\u5f80\u4e0a\u79fb\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2xxwgo8l.png)\n\n$b$ \u70b9\u4e00\u5b9a\u4e0d\u4f1a\u53cd\u800c\u5411\u5de6\u79fb\u3002\n\n\u5f53 $a$ \u5411\u4e0b\u79fb\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bn17vu5u.png)\n\n$b$ \u70b9\u4e5f\u4e0d\u4f1a\u5411\u4e0a\u79fb\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u5176\u5b9e\u5c31\u5f88\u50cf\u65cb\u8f6c\u5361\u58f3\u3002\n\n\u4e8e\u662f $O(n^2)$ \u679a\u4e3e\u5957\u4e00\u4e2a\u7c7b\u65cb\u8f6c\u5361\u58f3\u7684\u4e1c\u897f\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#define ll  \nusing namespace std;\ninline int read(){\n\tchar c=getchar();int x=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\nint i,j,k,n,m;\nstruct point{\n\t double x,y;\n}a[1000010];\nconst double eps=1e-15;\nbool can(int X1,int X2,int Y1,int Y2){\n\treturn (a[Y1].x-a[Y2].x)*(a[X1].y-a[X2].y)-(a[X1].x-a[X2].x)*(a[Y1].y-a[Y2].y)>-eps;\n}\ndouble dist(int X,int Y){\n\treturn sqrt((a[X].x-a[Y].x)*(a[X].x-a[Y].x)+(a[X].y-a[Y].y)*(a[X].y-a[Y].y));\n}\nint T[1000010];\nbool cmp(point x,point y){\n\treturn x.x<y.x||(x.x==y.x&&x.y<y.y);\n}\nint S[1000010];\nvoid work(){\n\tint top=0;\n\tsort(a+1,a+1+n,cmp);\n\tfor(i=1;i<=n;i++){\n\t\twhile(top>1 && can(S[top-1],i,S[top-1],S[top]))top--;\n\t\tS[++top]=i;\n\t}\n\ttop--;\n\twhile(top)T[++k]=S[top--];\n\ttop=0;\n\tfor(i=n;i>=1;i--){\n\t\twhile(top>1 && can(S[top-1],i,S[top-1],S[top]))top--;\n\t\tS[++top]=i;\n\t}\n\ttop--;\n\twhile(top)T[++k]=S[top--];\n//\tcout<<k<<endl;\n//\tfor(i=1;i<=k;i++)cout<<T[i]<<' ';cout<<endl; \n}\ndouble sum(double a,double b,double c){\n\tdouble p=(a+b+c)/2;\n\treturn sqrt(p*(p-a)*(p-b)*(p-c));\n}\ndouble getsum(int a,int b,int c){\n\treturn sum(dist(a,b),dist(b,c),dist(c,a));\n}\ndouble ans=0;\nint main(){\n\twhile(cin>>n){\n\t\tans=0;k=0;\n\t\tfor(i=1;i<=n;i++)\n\t\t\tscanf(\"%lf%lf\",&a[i].x,&a[i].y);\n\t\twork();\n\t\t\n\t\tif(k<=3){\n\t\t\tprintf(\"0.000\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(i=1;i<=k-3;i++){\n\t\t\tint x=i+1,y=i+3;\n\t\t\tfor(j=i+2;j<=k;j++){\n\t\t\t\twhile(x+1!=j && getsum(T[i],T[x],T[j])<getsum(T[i],T[x+1],T[j]))++x;\n\t\t\t\twhile(y!=k && getsum(T[i],T[y],T[j])<getsum(T[i],T[y+1],T[j]))++y;\n\t\t\t\tans=max(ans,getsum(T[i],T[j],T[x])+getsum(T[i],T[j],T[y]));\n\t\t\t}\n\t\t}\n\t\tprintf(\"%.3lf\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582819831,
        "uid": 35891,
        "name": "huangzirui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4166 \u3010[SCOI2007]\u6700\u5927\u571f\u5730\u9762\u79ef\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5e73\u9762\u51f8\u5305\u95ee\u9898\u7684\u4e00\u9053\u5f88\u597d\u7684\u4f8b\u9898\u3002\n\n\u6211\u4eec\u5148\u6c42\u51f8\u5305\uff0c\u7136\u540e\u6211\u4eec\u679a\u4e3e\u70b9 $i$\uff0c\u7136\u540e\u5bf9\u4e8e\u70b9 $j$ \u5f97\u5230\u7684 $i$ \u4e0e $j$ \uff08\u6709\u5e8f\uff09\u4e2d\u70b9\u7684\u70b9\uff0c\u4ee5\u53ca $j$ \u4e0e $i$ \uff08\u6709\u5e8f\uff09\u4e2d\u70b9\u7684\u70b9\uff0c\u90fd\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u80fd\u6c42\u51fa\u6700\u540e\u7684\u7ed3\u679c\u3002\n\n## AC\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\ntypedef long long LL;\nconst int MAXN = 1e5 + 10;\nconst int INF = 0x3f;\nconst double eps = 1e-10;\nstruct point{\n\tdouble x, y;\n\tpoint operator -(point &s){\n\t\treturn (point){x-s.x,y-s.y};\n\t}\n}p[MAXN],sta[MAXN];\nint top;\ndouble operator *(point a,point b){\n\treturn a.x * b.y - a.y * b.x;\n} \ndouble dist2(point P1,point P2){\n\treturn (P1.x - P2.x) * (P1.x - P2.x) + (P1.y - P2.y) * (P1.x - P2.y);\n}\nbool left(point p0, point p1,point p2){\n\tdouble s = (p1 - p0) * (p2 - p0);\n\treturn (s < 0) || (s == 0 && dist2(p1,p0) >= dist2(p2,p0));\n}\nint n;\nbool cmp(const point &a,const point &b){\n\treturn a.y < b.y || (a.y == b.y && a.x < b.x);\n}\nint graham(){\n\tsort(&p[1],&p[n + 1],cmp);\n\tsta[1] = p[1];\n\tsta[2] = p[2];\n\ttop = 2;\n\tfor(int i = 3;i <= n; i++){\n\t\twhile(top > 1 && left(sta[top - 1], p[i], sta[top]))top--;\n\t\tsta[++top] = p[i];\n\t}\n\tfor(int i = n - 1;i >= 1; i--){\n\t\twhile(top > 1 && left(sta[top - 1], p[i], sta[top]))top--;\n\t\tsta[++top] = p[i];\n\t}\n\ttop--;\n\treturn top;\n}\ndouble solve(){\n\tif(n < 2)return 0;\n\tdouble ans = 0;\n\tsta[n + 1] = sta[1];\n\tfor(int i = 1;i <= n + 1;i ++)p[i] = sta[i];\n\tfor(int i = 1;i <= n;i ++){\n\t\tint a = i;\n\t\tint b = i + 1;\n\t\tfor(int j = i;j <= n; j++){\n\t\t\twhile((p[j] - p[i]) * (p[a + 1] - p[i]) - (p[j] - p[i]) * (p[a] - p[i]) > 0)a = (a == n ? 1 : a+1);\n\t\t\twhile((p[b + 1] - p[i]) * (p[j] - p[i]) - (p[b] - p[i]) * (p[j] - p[i]) > 0)b = (b == n ? 1 : b+1);\n\t\t\tans = max(ans, (p[j] - p[i]) * (p[a] - p[i]) + (p[b] - p[i]) * (p[j] - p[i]));\n\t\t}\n\t}\n\treturn ans / 2;\n}\nint main()\n{\n\tcin >> n;\n\tfor(int i = 1;i <= n; i++){\n\t\tcin >> p[i].x >> p[i].y;\n\t}\n\tn = graham();\n\tprintf(\"%.3lf\", solve());\n    return 0;\n}\n\n```",
        "postTime": 1648132288,
        "uid": 341036,
        "name": "\u8521\u7ae3\u51ef",
        "ccfLevel": 4,
        "title": "P4166"
    },
    {
        "content": "\u8fd9\u91cc\u8865\u5145\u4e00\u4e0b\u4e09\u5206\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148$n^2$\u679a\u4e3e\u5bf9\u89d2\u7ebf\uff0c\u7136\u540e\u6211\u4eec\u8981\u7b97\u7684\u662f\u5728\u5bf9\u89d2\u7ebf\u5de6\u8fb9\u6700\u5927\u7684\u4e09\u89d2\u5f62\u548c\u5bf9\u89d2\u7ebf\u53f3\u8fb9\u6700\u5927\u7684\u4e09\u89d2\u5f62\u3002\n\n\u663e\u7136\u5982\u679c\u6211\u4eec\u4efb\u9009\u4e00\u4fa7\uff0c\u4ece\u5bf9\u89d2\u7ebf\u7684\u4e00\u4e2a\u9876\u70b9\u5230\u53e6\u4e00\u4e2a\u9876\u70b9\u4f9d\u6b21\u8ba1\u7b97\uff0c\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u80af\u5b9a\u662f\u5148\u589e\u5927\u540e\u51cf\u5c0f\u7684\uff0c\u6240\u4ee5\u8003\u8651\u4e09\u5206\u3002\n\n\u663e\u7136\u6211\u4eec\u4e09\u5206\u51f8\u5305\u4e0a\u70b9\u7684\u4e0b\u6807\uff0c\u7136\u800c\u6211\u4eec\u4f1a\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u6bd4\u5982\u6211\u4eec\u7684\u9876\u70b9\u6807\u53f7\u662f$0-6$\uff0c\u5f53\u524d\u6211\u4eec\u679a\u4e3e\u5230\u5bf9\u89d2\u7ebf$1-4$\uff0c\u7136\u540e\u6211\u4eec\u5728\u5bf9\u89d2\u7ebf\u5de6\u8fb9\u4e09\u5206\u7684\u8bdd\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e9b\u70b9\u7684\u4e0b\u6807\u53d8\u6210\u4e86$5,6,0$\uff0c\u4e09\u5206\u8d77\u6765\u5f88\u9ebb\u70e6\u3002\n\n\u8fd9\u91cc\u6211\u7528\u7684\u5c0f\u6280\u5de7\uff0c\u5c31\u662f\u628a\u70b9\u518d\u590d\u5236\u4e00\u4efd\uff0c\u5373\u603b\u5171\u6709$cnt$\u4e2a\u70b9\uff0c\u6211\u4eec\u5206\u6210$0- (cnt-1)$\uff0c$cnt-(2\\times cnt-1)$\u76f8\u540c\u7684\u4e24\u4efd\uff0c\u679a\u4e3e\u5bf9\u89d2\u7ebf\u65f6\uff0c\u6211\u4eec\u5728\u7b2c\u4e8c\u4efd\u4e2d\u679a\u4e3e\uff0c\u6bd4\u5982\u679a\u4e3e\u5230$(i,j)$\uff0c\u90a3\u4e48\u4e09\u5206\u65f6\uff0c\u5de6\u53f3\u533a\u95f4\u5206\u522b\u662f$(j-cnt+1,i-1)$\uff0c$(i+1,j-1)$\uff0c\u5b9e\u73b0\u8d77\u6765\u5c31\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n\u6ce8\u610f\u4e09\u5206\u65f6\uff0c\u56e0\u4e3a\u6211\u4eec\u4e09\u5206\u53c2\u6570\u662f\u4e0b\u6807\uff0c\u6240\u4ee5\u5f53$r-l=2$\u65f6\u7279\u5224\u4e00\u4e0b\uff0c\u5426\u5219\u4f1a\u6b7b\u5faa\u73af\u3002\n\n\u603b\u590d\u6742\u5ea6$O(n^2 log\\ n)$\n\n```cpp\n#include<bits/stdc++.h>\n#define ts cout<<\"ok\"<<endl\n#define ll long long\n#define hh puts(\"\")\nusing namespace std;\nint n,st[10005],top,cnt;\ndouble eps=1e-8,ans;\nstruct point{\n    double x,y;\n}a[10005],t[10005];\ninline int read(){\n    int ret=0,ff=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') ff=-ff;ch=getchar();}\n    while(isdigit(ch)){ret=(ret<<3)+(ret<<1)+(ch^48);ch=getchar();}\n    return ret*ff;\n}\ninline bool cmp(point A,point B){\n    return fabs(A.x-B.x)<eps?A.y<B.y:A.x<B.x;\n}\ninline double cross(point A,point B){\n    return A.x*B.y-A.y*B.x;\n}\npoint operator - (point A,point B){\n    return (point){A.x-B.x,A.y-B.y};\n}\nsigned main(){\n    n=read();\n    for(int i=1;i<=n;i++) scanf(\"%lf%lf\",&a[i].x,&a[i].y);\n    sort(a+1,a+n+1,cmp);\n    top=0;\n    for(int i=1;i<=n;i++){\n        st[++top]=i;\n        while(top>=3&&cross(a[st[top]]-a[st[top-2]],a[st[top-1]]-a[st[top-2]])>=0){\n            st[top-1]=st[top];\n            top--;\n        }\n    }\n    for(int i=1;i<=top;i++) t[++cnt]=a[st[i]];\n    top=0;\n    for(int i=1;i<=n;i++){\n        st[++top]=i;\n        while(top>=3&&cross(a[st[top]]-a[st[top-2]],a[st[top-1]]-a[st[top-2]])<=0){\n            st[top-1]=st[top];\n            top--;\n        }\n    }\n    for(int i=top-1;i>=2;i--) t[++cnt]=a[st[i]];\n    t[0]=t[cnt];\n    for(int i=cnt+1;i<2*cnt;i++) t[i]=t[i-cnt];\n    for(int i=cnt;i<2*cnt;i++){\n        for(int j=i+2;j<2*cnt;j++){\n            int l,r,lmid,rmid,left,right;\n            l=i+1,r=j-1;\n            point D=t[j]-t[i];\n            while(r-l>1){\n                if(r-l==2){\n                    if(cross(t[l]-t[i],D)>cross(t[r]-t[i],D)) r--;\n                    else l++;\n                    break;\n                }\n                lmid=l+(r-l)/3;\n                rmid=r-(r-l)/3;\n                if(cross(t[lmid]-t[i],D)>cross(t[rmid]-t[i],D)) r=rmid;\n                else l=lmid;\n            }\n            if(r-l==1){\n                if(cross(t[r]-t[i],D)>cross(t[l]-t[i],D)) right=r;\n                else right=l;\n            }\n            else right=l;\n            r=i-1,l=j-cnt+1;\n            while(r-l>1){\n                if(r-l==2){\n                    if(cross(D,t[l]-t[i])>cross(D,t[r]-t[i])) r--;\n                    else l++;\n                    break;\n                }\n                lmid=l+(r-l)/3;\n                rmid=r-(r-l)/3;\n                if(cross(D,t[lmid]-t[i])>cross(D,t[rmid]-t[i])) r=rmid;\n                else l=lmid;\n            }\n            if(r-l==1){\n                if(cross(D,t[r]-t[i])>cross(D,t[l]-t[i])) left=r;\n                else left=l;\n            }\n            else left=l;\n            ans=max(ans,(cross(t[right]-t[i],D)+cross(D,t[left]-t[i]))/2.);\n        }\n    }\n    printf(\"%.3lf\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1560296251,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4166 \u3010[SCOI2007]\u6700\u5927\u571f\u5730\u9762\u79ef\u3011"
    },
    {
        "content": "# P4166\n\u53d1\u7bc7\u9898\u89e3\u5e86\u795d\u4e00\u4e0b\u849f\u84bb\u6210\u4e3a\u6700\u4f18\u89e3\u3002\n____\n\u5148\u628a\u51f8\u5305\u6a21\u677f\u6572\u4e0a\u53bb\u3002  \n\u63a5\u4e0b\u6765\uff0c\u8fd9\u9898\u6211\u4eec\u53ef\u4ee5\u8fd0\u7528 OIer \u7684\u654f\u9510\u76f4\u89c9\uff0c\u63a8\u6d4b\u9762\u79ef\u6700\u5927\u7684\u56db\u8fb9\u5f62\u7684\u5bf9\u89d2\u7ebf\u4e00\u5b9a\u662f\u591a\u8fb9\u5f62\u7684\u5bf9\u89d2\u7ebf\u3002\u5176\u4ed6\u9898\u89e3\u91cc\u4e5f\u8bf4\u4e86\u8fd9\u4e00\u70b9\u3002  \n\u90a3\u4e48\u8fd9\u4e00\u9898\u5c31\u53d8\u6210\u4e86\u65cb\u8f6c\u5361\u58f3\u3002\u6bcf\u6b21\u56fa\u5b9a\u4e00\u4e2a\u70b9\uff0c\u987a\u65f6\u9488\u65cb\u8f6c\u4e0a\u7aef\u70b9\u6765\u786e\u5b9a\u5bf9\u89d2\u7ebf\uff0c\u8ba9\u5bf9\u89d2\u7ebf\u53d6\u6700\u5927\u3002\u518d\u987a\u65f6\u9488\u65cb\u8f6c\u5de6\u7aef\u70b9\uff0c\u4f7f\u5bf9\u89d2\u7ebf\u5de6\u4fa7\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u6700\u5927\u3002\u6700\u540e\u987a\u65f6\u9488\u65cb\u8f6c\u53f3\u7aef\u70b9\uff0c\u4f7f\u5bf9\u89d2\u7ebf\u53f3\u4fa7\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u6700\u5927\u3002\u9762\u79ef\u4e3a\u4e24\u4e2a\u4e09\u89d2\u5f62\u4e4b\u548c\uff0c\u6bcf\u6b21\u53d6 max \u5373\u53ef\u3002  \n\u4ee3\u7801\u8fc7\u4e8e\u4e11\u964b\uff0c\u4e0d\u53d1\u4e86\u3002",
        "postTime": 1643083226,
        "uid": 340819,
        "name": "cwfxlh",
        "ccfLevel": 5,
        "title": "P4166"
    },
    {
        "content": "\u697c\u4e0b\u66b4\u529b\u786e\u6709\u53ef\u53d6\u4e4b\u5904\uff0c\u4f46\u8fd9\u4e2a\u9898\u6b63\u89e3\u4e0d\u8fd8\u662f\u51f8\u5305\u4e48\u3002\u3002\u3002\n\n\u5173\u4e8e\u51f8\u5305\u53ef\u4ee5\u8f6c\u849f\u84bb\u535a\u5ba2\uff1a[\u51f8\u5305\u5c0f\u7ed3](http://www.cnblogs.com/victorique/p/8666123.html)\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5230\u5982\u679c\u6211\u4eec\u53d6\u5230\u4e86\u4e00\u4e2a\u6700\u5927\u7684\u56db\u8fb9\u5f62\uff0c\u90a3\u4e48\u8fd9\u4e2a\u56db\u8fb9\u5f62\u7684\u56db\u4e2a\u9876\u70b9\u4e00\u5b9a\u662f\u8fd9\u4e9b\u70b9\u51f8\u5305\u4e0a\u7684\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5148\u6c42\u51fa\u8fd9\u4e9b\u70b9\u7684\u51f8\u5305\u3002\n\n\u90a3\u4e48\u6c42\u51fa\u6765\u4e86\u4e4b\u540e\u5462\uff1f\u6211\u4eec\u5f88\u660e\u663e\u4e0d\u80fd\u66b4\u529b\u6c42\u3002\u3002\u3002\u590d\u6742\u5ea6\u660e\u663e\u662fN^4\u7ea7\u522b\u3002\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u6c42\u5462\uff1f\u8003\u8651\u56db\u8fb9\u5f62\u6027\u8d28\uff0c\u53ef\u4ee5\u6cbf\u7740\u5bf9\u89d2\u7ebf\u5206\u6210\u4e24\u4e2a\u4e09\u89d2\u5f62\uff0c\u6211\u4eec\u53ea\u9700\u679a\u4e3e\u5bf9\u89d2\u7ebf\u5373\u53ef\uff0c\u7136\u540e\u65cb\u8f6c\u5361\u58f3\uff0c\u6c42\u51fa\u4e24\u8fb9\u6700\u5927\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u6c42\u548c\u5373\u53ef\u3002\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u53ef\u4ee5\u662f\u8fd9\u4e2a\u4e09\u89d2\u5f62\u6784\u6210\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u9762\u79ef/2\uff0c\u6240\u4ee5\u7528\u53c9\u79ef\u5c31\u53ef\u4ee5\u65b9\u4fbf\u6c42\u51fa\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#define ll long long\n#define inf 50000000\n#define re register\n#define MAXN 5005\nusing namespace std;\nstruct node{\n\tdouble x,y;\n};\nnode a[MAXN],stackk[MAXN];\ndouble xx,yy;\nint n,top;\ninline int read()\n{\n    int x=0,c=1;\n    char ch=' ';\n    while((ch>'9'||ch<'0')&&ch!='-')ch=getchar();\n    while(ch=='-') c*=-1,ch=getchar();\n    while(ch<='9'&&ch>='0')x=x*10+ch-'0',ch=getchar();\n    return x*c;\n}\ninline bool cmp(node a,node b)\n{\n\tif(a.y==b.y) return a.x<b.x;\n\treturn a.y<b.y;\n}\ninline double cross(node a,node b,node c)\n{\n\treturn (b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y);\n}\ninline double js(node a,node b)\n{\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\ninline bool cmp1(node a,node b)\n{\n\tint k=cross(stackk[1],a,b);\n\tif(k>0) return 1;\n\telse if(k==0) return js(stackk[1],a)<js(stackk[1],b);\n\treturn 0;\n}\nint main()\n{\n\tn=read();\n\tfor(re int i=1;i<=n;i++)\n\tscanf(\"%lf %lf\",&a[i].x,&a[i].y);\n\tsort(a+1,a+n+1,cmp);\n\tstackk[++top]=a[1];\n\tsort(a+2,a+n+1,cmp1);\n\tstackk[++top]=a[2];stackk[++top]=a[3];\n\tfor(re int i=4;i<=n;i++){\n\t\twhile(top>0&&cross(stackk[top-1],stackk[top],a[i])<=0)\n\t\ttop--;\n\t\tstackk[++top]=a[i];\n\t}\n\tstackk[++top]=a[1];\n\tdouble ans=0;\n\tint a,b;\n\tfor(re int x=1;x<=top;x++){\n\t\ta=x%top+1;b=(x+2)%top+1;\n\t\tfor(re int y=x+2;y<=top;y++){\n\t\t\twhile(a%top+1!=y&&cross(stackk[x],stackk[a+1],stackk[y])>cross(stackk[x],stackk[a],stackk[y]))\n\t\t\ta=a%top+1;\n\t\t\twhile(b%top+1!=x&&cross(stackk[x],stackk[y],stackk[b+1])>cross(stackk[x],stackk[y],stackk[b]))\n\t\t\tb=b%top+1;\n\t\t\tans=max(cross(stackk[x],stackk[a],stackk[y])+cross(stackk[x],stackk[y],stackk[b]),ans);\n\t\t}\n\t}\n\tprintf(\"%.3lf\",ans/2);\n}\n```",
        "postTime": 1522223404,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4166 \u3010[SCOI2007]\u6700\u5927\u571f\u5730\u9762\u79ef\u3011"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\uff1a\u77e2\u91cf\uff0c\u5e73\u9762\u51f8\u5305\uff0c\u65cb\u8f6c\u5361\u58f3\n\u5e73\u9762\u51f8\u5305\u662f\u6307\u8986\u76d6\u5e73\u9762\u4e0a $n$ \u683c\u70b9\u7684\u6700\u5c0f\u7684\u51f8\u591a\u8fb9\u5f62\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528[\u659c\u7387\u903c\u8fd1\u6cd5](https://copyfuture.com/blogs-details/201908152140442207sfoppbxserhmk3)\u3002\n\n\u5bf9\u5df2\u4ee5\u4e0a\u7b97\u6cd5\uff0c\u4e07\u4e00\u659c\u7387\u65e0\u7a77\u5927\uff0c\u5373\u4e0d\u80fd\u4fdd\u8bc1\u51c6\u786e\u6027\uff0c\u6211\u4eec\u5c31\u5f97\u91c7\u7528\u53e6\u4e00\u79cd\u7b97\u6cd5\uff0c[Jarvis \u7b97\u6cd5](https://blog.csdn.net/zhouzi2018/article/details/82177489)\u3002\n\n\u7b97\u6cd5\u5927\u4f53\u601d\u60f3\uff1a\u5f62\u6210\u51f8\u5305\u7684\u6784\u9020\u51fd\u6570\u662f\u8fd9\u6837\u7684\uff0c\u627e\u5230\u4e00\u6761\u76f4\u7ebf $l$ \u8fc7\u5176\u4e2d\u4e00\u70b9(\u8bb0\u4e3a $A$ )\u5e76\u4e14\u6240\u6709\u5176\u4ed6\u70b9\u90fd\u5728 $l$ \u7684\u540c\u4fa7(\u663e\u7136\u8fd9\u6837\u7684\u76f4\u7ebf\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230)\uff0c\u5219 $A$ \u5fc5\u4e3a\u51f8\u5305\u4e0a\u7684\u4e00\u70b9\u3002\u8ba9l\u4ee5 $A$ \u4e3a\u8f74\u70b9\u5411\u4e00\u4e2a\u65b9\u5411(\u6bd4\u5982\uff1a\u987a\u65f6\u9488\u65b9\u5411)\u4e0d\u65ad\u65cb\u8f6c\uff0c\u76f4\u5230l\u78b0\u5230\u9664 $A$ \u4ee5\u5916\u7684\u7b2c\u4e00\u4e2a\u70b9(\u8bb0\u4e3a $B$ )\u3002\u5982\u679c\u540c\u65f6\u78b0\u5230\u591a\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5219\u53d6\u4e0e $A$ \u70b9\u8ddd\u79bb\u6700\u5927\u7684\u3002\u518d\u6b21\u4ee5B\u4e3a\u8f74\u70b9\uff0c\u5411\u76f8\u540c\u7684\u65b9\u5411\u7684\u65cb\u8f6c $l$\uff0c\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230l\u56de\u5230 $A$ \u70b9\u3002\n\n```\n#include<bits/stdc++.h>\nconst double eps = 1e-10;\ninline int dcmp(const double &x) {\n\tif (fabs(x) < eps) return 0; return x < 0 ? -1 : 1;\n}\n\nnamespace geometry {\n\tusing std::max;\n\tusing std::sort;\n\tusing std::unique;\n\n\tstruct point {\n\t\tdouble x, y;\n\t\tpoint(double x = 0, double y = 0) : x(x), y(y) { }\n\t\tbool operator < (const point &b) const {\n\t\t\treturn x != b.x ? x < b.x : y < b.y;\n\t\t}\n\t};\n\ttypedef point vector;\n\ttypedef std::vector<point> polygon;\n\n\tstruct line {\n\t\tpoint p; vector v; double ang;\n\t\tline() {}\n\t\tline(point p, vector v) : p(p), v(v) { ang = atan2(v.y, v.x);}\n\t\tbool operator < (const line &b) const {\n\t\t\treturn ang < b.ang;\n\t\t}\n\t};\n\ttypedef std::vector<line> line_set;\n\n\tvector operator + (const vector &A, const vector &B) { return point(A.x + B.x, A.y + B.y);}\n\tvector operator - (const point &A, const point &B) { return point(A.x - B.x, A.y - B.y);}\n\tvector operator * (const vector &A, const double &b) { return vector(A.x * b, A.y * b);}\n\tvector operator / (const vector &A, const double &b) { return vector(A.x / b, A.y / b);}\n\tbool operator == (const point &A, const point &B) { return fabs(A.x - B.x) < eps && fabs(A.y - B.y) < eps;}\n\n\tinline double dot(const vector &A, const vector &B) { return A.x * B.x + A.y * B.y;}\n\tinline double cross(const vector &A, const vector &B) { return A.x * B.y - A.y * B.x;}\n\tinline double length(const vector &A) { return sqrt(dot(A, A));}\n\tinline double angle(const vector &A, const vector &B) { return acos(dot(A, B) / length(A) / length(B));}\n\n\tinline vector rotate(const vector &A, const double &rad) {\n\t\tdouble c = cos(rad), s = sin(rad);\n\t\treturn vector(A.x * c - A.y * s, A.x * s + A.y * c);\n\t}\n\n\tinline vector normal(const vector &A) {\n\t\tdouble L = length(A); return vector(-A.y / L, A.x / L);\n\t}\n\n\tinline bool on_left(line L, point p) {\n\t\treturn cross(L.v, p - L.p) > 0;\n\t}\n\n\tinline bool on_segment(point p, point a1, point a2) {\n\t\treturn dcmp(cross(a1 - p, a2 - p) == 0) && dcmp(dot(a1 - p, a2 - p)) < 0;\n\t}\n\n\tinline bool segment_proper_intersection(point a1, point a2, point b1, point b2) {\n\t\tdouble c1 = cross(a2 - a1, b1 - a1), c2 = cross(a2 - a1, b2 - a1),\n\t\t\t   c3 = cross(b2 - b1, a1 - b1), c4 = cross(b2 - b1, a2 - b1);\n\t\treturn dcmp(c1) * dcmp(c2) < 0 && dcmp(c3) * dcmp(c4) < 0;\n\t}\n\n\tint in_polygon(point p, polygon &poly) {\n\t\tint wn = 0;\n\t\tfor (int i = 0, n = poly.size(); i < n; i++) {\n\t\t\tif (on_segment(p, poly[i], poly[i%n+1])) return -1;\n\t\t\tint k = dcmp(cross(poly[i%n+1] - poly[i], p - poly[i]));\n\t\t\tint d1 = dcmp(poly[i].y - p.y);\n\t\t\tint d2 = dcmp(poly[i%n+1].y - p.y);\n\t\t\tif (k > 0 && d1 <= 0 && d2 > 0) wn++;\n\t\t\tif (k < 0 && d2 <= 0 && d1 > 0) wn--;\n\t\t}\n\t\tif (wn != 0) return 1;\n\t\treturn 0;\n\t}\n\n\tinline point line_intersection(point p, vector v, point q, vector w) {\n\t\tvector u = p - q; double t = cross(w, u) / cross(v, w);\n\t\treturn p + v * t;\n\t}\n\t\n\tinline point line_intersection(line a, line b) {\n\t\tvector u = a.p - b.p; double t = cross(b.v, u) / cross(a.v, b.v);\n\t\treturn a.p + a.v * t;\n\t}\n\n\tdouble distance_to_line(point p, point a, point b) {\n\t\tvector v1 = b - a, v2 = p - a;\n\t\treturn fabs(cross(v1, v2)) / length(v1);\n\t}\n\t\n\tdouble distance_to_line(point p, line L) {\n\t\tvector v2 = p - L.p;\n\t\treturn fabs(cross(L.p, v2)) / length(L.p);\n\t}\n\t\n\tdouble polygon_area(polygon &poly) {\n\t\tdouble ans = 0;\n\t\tfor (int i = 1, n = poly.size(); i < n - 1; i++)\n\t\t\tans += cross(poly[i] - poly[0], poly[i+1] - poly[0]);\n\t\treturn ans / 2;\n\t}\n\n\tpolygon convex_hull(polygon &p) {\n\t\tsort(p.begin(), p.end());\n\t\tp.erase(unique(p.begin(), p.end()), p.end());\n\t\tint m = 0, n = p.size(); polygon ch(n + 1);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\twhile (m > 1 && cross(ch[m-1] - ch[m-2], p[i] - ch[m-2]) <= 0) m--;\n\t\t\tch[m++] = p[i];\n\t\t}\n\t\tfor (int i = n - 2, k = m; i >= 0; i--) {\n\t\t\twhile (m > k && cross(ch[m-1] - ch[m-2], p[i] - ch[m-2]) <= 0) m--;\n\t\t\tch[m++] = p[i];\n\t\t}\n\t\tif (n > 1) m--; ch.resize(m);\n\t\treturn ch;\n\t}\n\n\tpolygon half_plane_intersection(line_set &L) {\n\t\tsort(L.begin(), L.end());\n\t\tint first, last, n = L.size();\n\t\tpoint *p = new point[n]; line *q = new line[n];\n\t\tq[first=last=0] = L[0];\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\twhile (first < last && !on_left(L[i], p[last-1])) last--;\n\t\t\twhile (first < last && !on_left(L[i], p[first])) first++;\n\t\t\tq[++last] = L[i];\n\t\t\tif (fabs(cross(q[last].v, q[last-1].v)) < eps)\n\t\t\t\tif (on_left(q[--last], L[i].p)) q[last] = L[i];\n\t\t\tif (first < last) p[last-1] = line_intersection(q[last-1], q[last]);\n\t\t}\n\t\tpolygon ans;\n\t\twhile (first < last && !on_left(q[first], p[last-1])) last--;\n\t\tif (last - first <= 1) return ans;\n\t\tp[last] = line_intersection(q[last], q[first]);\n\t\tfor (int i = first; i <= last; i++) ans.push_back(p[i]);\n\t\treturn ans;\n\t}\n}\n\nusing namespace std;\nusing namespace geometry;\n\nint n;\ndouble ans;\npolygon p;\n\ninline void chkmx(int u, int v, int &a, int &b) {\n\twhile ((a + 1) % n != v && distance_to_line(p[a+1], p[u], p[v]) > distance_to_line(p[a], p[u], p[v]))\n\t\ta = (a + 1) % n;\n\twhile ((b + 1) % n != u && distance_to_line(p[b+1], p[u], p[v]) > distance_to_line(p[b], p[u], p[v]))\n\t\tb = (b + 1) % n;\n\tans = max(ans,\n\t\t  length(p[u] - p[v]) * (distance_to_line(p[b], p[u], p[v]) + distance_to_line(p[a], p[u], p[v])));\n}\n\nint main() {\n\tdouble x, y;\n\tcin >> n; p.resize(n);\n\tfor (int i = 0; i < n; i++)\n\t\tcin >> x >> y, p[i] = point(x, y);\n\tp = convex_hull(p);\n\t\n\tn = p.size();\n\tfor (int u = 0, v = 1, a = 0, b = 1; u < n; u++) {\n\t\twhile (1) {\n\t\t\tint diff = dcmp(cross(p[(u+1)%n] - p[u], p[(v+1)%n] - p[v]));\n\t\t\tif (diff <= 0) {\n\t\t\t\tchkmx(u, v, a, b);\n\t\t\t\tif (diff == 0) chkmx(u, (v + 1) % n, a, b);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (b == v) b = (b + 1) % n;\n\t\t\tv = (v + 1) % n;\n\t\t}\n\t\tif (a == u) a = (a + 1) % n;\n\t}\n\tprintf(\"%.3lf\\n\", ans / 2);\n}\n```\n",
        "postTime": 1660886479,
        "uid": 303525,
        "name": "s_c_lmlm_L",
        "ccfLevel": 0,
        "title": "P4166 [SCOI2007]\u6700\u5927\u571f\u5730\u9762\u79ef \u9898\u89e3"
    },
    {
        "content": "\u5148\u5047\u8bbe\u51f8\u5305\u7684\u70b9\u6570\u5927\u4e8e\u7b49\u4e8e $4$\uff0c\u95ee\u9898\u6bd4\u8f83\u4e00\u822c\u5316\u3002              \n\n\u8ba1\u7b97\u4e00\u4e2a\u56db\u8fb9\u5f62\u7684\u9762\u79ef\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u6761\u5bf9\u89d2\u7ebf\u5c06\u56db\u8fb9\u5f62\u9694\u6210\u4e24\u4e2a\u4e09\u89d2\u5f62\uff0c\u5206\u522b\u8ba1\u7b97\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u3002              \n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651 $O(n ^ 2)$ \u679a\u4e3e\u5bf9\u89d2\u7ebf\u3002               \n\n\u73b0\u5728\u60f3\u529e\u6cd5\u8ba1\u7b97\u53e6\u5916\u4e24\u4e2a\u80fd\u5c06\u4e09\u89d2\u5f62\u9762\u79ef\u53d6\u5230\u6700\u5927\u7684\u6781\u503c\u70b9\uff0c\u6211\u4eec\u4e0d\u59a8\u7ee7\u7eed\u5229\u7528\u7c7b\u4f3c\u6c42\u51f8\u5305\u6700\u8fdc\u70b9\u5bf9\u7684\u65b9\u6cd5\uff0c\u7531\u4e8e\u9762\u79ef\u7684\u51fd\u6570\u5448\u5355\u5cf0\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5f80\u540e\u9762\u7528\u53cc\u6307\u9488\u626b\u5c31\u53ef\u4ee5\u505a\u8fd9\u79cd\u60c5\u51b5\u4e86\u3002               \n\n\u63a5\u7740\u8003\u8651\u5f53\u51f8\u5305\u7684\u70b9\u6570\u7b49\u4e8e $3$ \u65f6\uff0c\u6211\u4eec\u662f\u4e00\u4e2a\u4e09\u89d2\u5f62\u5305\u70b9\uff0c\u7531\u4e8e\u6211\u4eec\u5fc5\u9009\u51f8\u5305\u4e0a\u7684\u70b9\u6240\u4ee5\u53ea\u5269\u4e0b\u4e00\u4e2a\u70b9\u7684\u9009\u62e9\u3002                    \n\n\u679a\u4e3e\u5269\u4e0b\u8981\u9009\u7684\u70b9\uff0c\u5f97\u5230\u6240\u6709\u53ef\u5f62\u6210\u7684\u51f9\u56db\u8fb9\u5f62\uff0c\u9700\u8981\u53d6\u5230\u6240\u6709\u51f9\u56db\u8fb9\u5f62\u9762\u79ef\u6700\u5927\u7684\u51f9\u56db\u8fb9\u5f62\u3002\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u51f9\u56db\u8fb9\u5f62\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u542b\u9009\u62e9\u70b9\u7684\u4e09\u89d2\u5f62\uff0c\u63a5\u4e0b\u6765\u53ea\u8981\u770b\u54ea\u4e2a\u4e09\u89d2\u5f62\u4e0a\uff0c\u9009\u62e9\u70b9\u662f\u5728\u4e09\u89d2\u5f62\u8fb9\u4e0a\u7684\u53f3\u4fa7\u5c31\u77e5\u9053\u54ea\u4e2a\u4e09\u89d2\u5f62\u4e0d\u5408\u6cd5\u4e86\uff0c\u5228\u6389\u5b83\u5373\u53ef\u7b97\u51fa\u5f53\u524d\u51f9\u56db\u8fb9\u5f62\u7684\u9762\u79ef\u3002                   \n\n```cpp\n/*\n\u627e\u5230\u6bcf\u4e09\u70b9\u6784\u6210\u7684\u6700\u5927\u4e09\u89d2\u5f62\u7136\u540e\u76f4\u63a5\u679a\u4e3e\uff1f\n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 2e3 + 5;\nconst double eps = 1e-3;\nstruct point\n{\n\tdouble x,y;\n\tpoint(){x = y = 0.0;}\n\tpoint(double X,double Y){x = X , y = Y;}\n\tbool operator == (const point &Ano) const\n\t{\n\t\treturn x == Ano.x && y == Ano.y;\n\t}\n\tpoint operator - (const point &Ano) const\n\t{return point(x - Ano.x , y - Ano.y);} \n\tdouble operator ^ (const point &Ano) const\n\t{return x * Ano.y - y * Ano.x;}\n\tdouble operator * (const point &Ano) const\n\t{return x * Ano.x + y * Ano.y;}\n}p[Len] , stk[Len << 1];\nint top,n;\nint idf(double x){if(fabs(x) < eps) return 0;if(x > 0) return 1;return -1; }\ndouble mul(point p0,point p1,point p2){return (p1 - p0) ^ (p2 - p0);}\ndouble dis(point a,point b){return ((b - a) * (b - a));}\nbool cmp(point x,point y)\n{\n\tdouble tmp = mul(p[1] , x , y);\n\tif(idf(tmp) > 0) return 1;\n\tif(idf(tmp) == 0 && dis(p[1] , x) < dis(p[1] , y)) return 1;\n\treturn 0;\n}\nvoid Init()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tscanf(\"%lf %lf\",&p[i].x,&p[i].y);\n\t\tif((p[i].y < p[1].y) || (p[i].y == p[1].y && p[i].x < p[1].x)) swap(p[i] , p[1]);\n\t}\n}\nvoid Find_Hull()\n{\n\tsort(p + 2 , p + 1 + n , cmp);\n\tstk[top = 1] = p[1]; \n\tfor(int i = 2 ; i <= n ; i ++)\n\t{\n\t\tif(p[i - 1].x == p[i].x && p[i - 1].y == p[i].y) continue;\n\t\twhile(top > 1 && idf(mul(stk[top - 1] , stk[top] , p[i])) <= 0) top --;\n\t\tstk[++ top] = p[i];\n\t}\n\tstk[top + 1] = p[1];\n}\ninline int Nxt(int x)\n{\n\tif(x + 1 > top) return x + 1 - top;\n\treturn x + 1;\n}\nint aside(point a,point b,point c)\n{\n\tdouble mul = (b - a) ^ (c - a);\n\tif(mul > 0) return 1;\n\tif(mul < 0) return 0;\n\tdouble minx = min(a.x , b.x) , maxx = max(a.x , b.x) , miny = min(a.y , b.y) , maxy = max(a.y , b.y);\n\treturn (minx <= c.x) && (c.x <= maxx) && (miny <= c.y) && (c.y <= maxy);\n}\ndouble Max_S()\n{\n\t//if(top == 2) return dis(stk[1] , stk[2]);\n\tdouble ans = 0.0;\n\tif(top == 2) return ans;\n\tif(top == 3)\n\t{\n\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t{\n\t\t\tif(p[i] == stk[1] || p[i] == stk[2] || p[i] == stk[3]) continue;\n\t\t\tdouble nowS = 0.0;\n\t\t\tnowS += fabs(mul(stk[1] , stk[2] , p[i]));\n\t\t\tnowS += fabs(mul(stk[1] , stk[3] , p[i]));\n\t\t\tnowS += fabs(mul(stk[2] , stk[3] , p[i]));\n\t\t\tif(!aside(p[i] , stk[1] , stk[2])) nowS -= fabs(mul(stk[1] , stk[2] , p[i]));\n\t\t\tif(!aside(p[i] , stk[1] , stk[3])) nowS -= fabs(mul(stk[1] , stk[3] , p[i]));\n\t\t\tif(!aside(p[i] , stk[2] , stk[3])) nowS -= fabs(mul(stk[2] , stk[3] , p[i]));\n\t\t\tans = max(ans , nowS);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor(int i = 1 ; i <= top ; i ++) \n\t\t{\n\t\t\tint a = i , b = Nxt(a);\n\t\t\tfor(int j = b ; j != i ; j = Nxt(j))\n\t\t\t{\n\t\t\t\twhile(j != a && fabs(mul(stk[i] , stk[j] , stk[a])) < fabs(mul(stk[i] , stk[j] , stk[a + 1]))) a = Nxt(a);\n\t\t\t\twhile(i != b && fabs(mul(stk[i] , stk[j] , stk[b])) < fabs(mul(stk[i] , stk[j] , stk[b + 1]))) b = Nxt(b);\n\t\t\t\tans = max(ans , fabs(mul(stk[i] , stk[j] , stk[a])) + fabs(mul(stk[i] , stk[j] , stk[b]))); \n\t\t\t}\n\t\t}\t\n\t}\n\t\n\treturn ans;\n}\nint main()\n{\n\tInit();\n\tFind_Hull();\n\tprintf(\"%.3f\\n\",Max_S() / 2.0); \n\treturn 0;\n}\n```",
        "postTime": 1644203690,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4166 [SCOI2007]\u6700\u5927\u571f\u5730\u9762\u79ef"
    },
    {
        "content": "[\u66f4\u597d\u5730\u9605\u8bfb\uff1f](https://www.luogu.com.cn/blog/chairmanZhangjvruo/solution-p4166)\n# P4166\u9898\u89e3\n\u9898\u76ee\u6709\u4e24\u4e2a\u8981\u6c42\u3002\n\n1. \u9009\u62e9 $4$ \u4e2a\u70b9\u628a\u4e00\u4e9b\u70b9\u56f4\u8d77\u6765\u3002\n1. \u56f4\u8d77\u6765\u7684\u591a\u8fb9\u5f62\u9762\u79ef\u6700\u5927\u3002\n\n\u8981\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u8981\u6c42\u9996\u5148\u51f8\u5305\u7cca\u4e0a\u53bb\u3002\n```cpp\nsta[++cnt]=1;\nfor(int i=2;i<=n;i++)\n{\n  while(cnt>=2&&CJ(p[sta[cnt-1]],p[sta[cnt]],p[i])<=0)cnt--;\n  sta[++cnt]=i;\n}\n```\n\u63a5\u4e0b\u6765\u6c42\u9762\u79ef\u6700\u5927\u3002\n\n\u8bbe\u51f8\u5305\u70b9\u7684\u4e2a\u6570\u4e3a $x$\u3002\n\n\u82e5$ x \\leq 2$\uff0c\u6240\u6709\u70b9\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u6545\u9762\u79ef\u4e3a $0$\u3002\n```cpp\nif(cnt<=2)\n{\n  cout<<0;\n  return 0;\n}\n```\n\n\n------------\n\n\n**\u82e5 $x=3$\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u679a\u4e3e\u7b2c\u56db\u4e2a\u70b9**\uff0c\u7136\u540e\u628a\u6700\u5927\u9762\u79ef\uff08\u51f8\u5305\u4e0a $3$ \u4e2a\u70b9\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u51cf\u53bb\u679a\u4e3e\u7684\u8fd9\u4e2a\u70b9\u4e0e\u4e09\u4e2a\u70b9\u4e2d\u4efb\u610f\u4e24\u4e2a\u70b9\u6784\u6210\u4e09\u89d2\u5f62\u7684\u6700\u5c0f\u9762\u79ef\uff09\u7b97\u51fa\u6765\u5c31\u5b8c\u4e86\u3002\n```\ndouble Special()\n{\n  double tri=Tris(p[sta[1]],p[sta[2]],p[sta[3]]),mina=1e18;\n  for(int i=1;i<=n;i++)\n  {\n    if(i==sta[1]||i==sta[2]||i==sta[3])continue;\n    double S=min(min(Tris(p[i],p[sta[1]],p[sta[2]]),Tris(p[i],p[sta[1]],p[sta[3]])),Tris(p[i],p[sta[2]],p[sta[3]]));\n    mina=min(mina,S);\n  }\n  if(mina==1e18)return 0;\n  return tri-mina;\n}\nif(cnt==3)\n{\n  cout<<fixed<<setprecision(3)<<Special();\n  return 0;\n}\n\n\n```\n\n------------\n\n\n**\u82e5 $ x \\ge 4 $\uff0c\u9006\u65f6\u9488\u679a\u4e3e\u5bf9\u89d2\u7ebf**\uff0c\u7136\u540e\u6839\u636e\u65cb\u8f6c\u5361\u58f3\u90a3\u4e00\u5957\u7406\u8bba\u53ef\u4ee5\u53d1\u73b0\u79bb\u8fd9\u4e00\u6761\u8fb9\u4e0a\u4e0b\u6216\u6700\u6709\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\u4e5f\u9006\u65f6\u9488\u8f6c\u52a8\uff0c\u4e8e\u662f\u53ef\u4ee5\u901a\u8fc7\u6d77\u4f26\u516c\u5f0f\u6c42\u4e09\u89d2\u5f62\u9762\u79ef\u6216\u8005\u5411\u91cf\u53c9\u79ef\u901a\u8fc7 $O(n^2)$ \u6c42\u51fa\uff08\u4e00\u6761\u5bf9\u89d2\u7ebf\u8981\u679a\u4e3e\u4e24\u4e2a\u70b9\u561b\uff09\u3002\n```cpp\ndouble ans=0;\nfor(int i=1;i<=cnt;i++)\n{\n  a=i%cnt+1,b=(i+2)%cnt+1;\n  for(int j=i+2;j<=cnt;j++)\n  {\n    while(a%cnt+1!=j&&Tris(p[sta[i]],p[sta[j]],p[sta[a]])<Tris(p[sta[i]],p[sta[j]],p[sta[a+1]]))a=a%cnt+1;\n    while(b%cnt+1!=i&&Tris(p[sta[i]],p[sta[j]],p[sta[b]])<Tris(p[sta[i]],p[sta[j]],p[sta[b+1]]))b=b%cnt+1;\n    ans=max(ans,Tris(p[sta[i]],p[sta[j]],p[sta[a]])+Tris(p[sta[i]],p[sta[j]],p[sta[b]]));\n  }\n}\n```\n\n\n------------\n\n## AC CODE\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\nconst int kMaxN=2001;\nstruct POINT\n{\n  double x,y;\n}p[kMaxN];\nint n;\nint sta[kMaxN],cnt;\ndouble CJ(POINT a,POINT b,POINT c)\n{\n  return (b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y);\n}\ndouble Dis(POINT i,POINT j)\n{\n  return sqrt((i.x-j.x)*(i.x-j.x)+(i.y-j.y)*(i.y-j.y));\n}\nbool cmp(POINT i,POINT j)\n{\n  double cj=CJ(p[1],i,j);\n  if(cj>0)return true;\n  if(cj==0&&Dis(p[1],i)<Dis(p[1],j))return true;\n  return false;\n}\ndouble Tris(POINT a,POINT b,POINT c)\n{\n  double i=Dis(a,b),j=Dis(a,c),k=Dis(b,c);\n  double p=(i+j+k)/2.0;\n  return sqrt(p*(p-i)*(p-j)*(p-k));\n}\ndouble Special()\n{\n  double tri=Tris(p[sta[1]],p[sta[2]],p[sta[3]]),mina=1e18;\n  for(int i=1;i<=n;i++)\n  {\n    if(i==sta[1]||i==sta[2]||i==sta[3])continue;\n    double S=min(min(Tris(p[i],p[sta[1]],p[sta[2]]),Tris(p[i],p[sta[1]],p[sta[3]])),Tris(p[i],p[sta[2]],p[sta[3]]));\n    mina=min(mina,S);\n  }\n  if(mina==1e18)return 0;\n  return tri-mina;\n}\nsigned main()\n{\ncin>>n;\ncin>>p[1].x>>p[1].y;\nfor(int i=2;i<=n;i++)\n{\n  cin>>p[i].x>>p[i].y;\n  if(p[i].y<p[1].y)swap(p[i],p[1]);\n  else if(p[i].y==p[1].y&&p[i].x<p[1].x)swap(p[i],p[1]);\n}\nsort(p+2,p+n+1,cmp);\nsta[++cnt]=1;\nfor(int i=2;i<=n;i++)\n{\n  while(cnt>=2&&CJ(p[sta[cnt-1]],p[sta[cnt]],p[i])<=0)cnt--;\n  sta[++cnt]=i;\n}\nif(cnt<=2)\n{\n  cout<<0;\n  return 0;\n}\nif(cnt==3)\n{\n  cout<<fixed<<setprecision(3)<<Special();\n  return 0;\n}\nsta[++cnt]=1;\nint a,b;\ndouble ans=0;\nfor(int i=1;i<=cnt;i++)\n{\n  a=i%cnt+1,b=(i+2)%cnt+1;\n  for(int j=i+2;j<=cnt;j++)\n  {\n    while(a%cnt+1!=j&&Tris(p[sta[i]],p[sta[j]],p[sta[a]])<Tris(p[sta[i]],p[sta[j]],p[sta[a+1]]))a=a%cnt+1;\n    while(b%cnt+1!=i&&Tris(p[sta[i]],p[sta[j]],p[sta[b]])<Tris(p[sta[i]],p[sta[j]],p[sta[b+1]]))b=b%cnt+1;\n    ans=max(ans,Tris(p[sta[i]],p[sta[j]],p[sta[a]])+Tris(p[sta[i]],p[sta[j]],p[sta[b]]));\n  }\n}\ncout<<fixed<<setprecision(3)<<ans;\nreturn 0;\n}\n```\n",
        "postTime": 1639880820,
        "uid": 210719,
        "name": "Violet___Evergarden",
        "ccfLevel": 4,
        "title": "P4166"
    },
    {
        "content": "n=2000\uff0c\u8003\u8651\u4e00\u4e0b\u4e0d\u6c42\u56fe\u5305\u7684n^2log\u7b97\u6cd5\u3002\n\n\u7ed9\u4e00\u6761\u76f4\u7ebf\u7684\u8bdd\u5c31\u53ef\u4ee5O\uff08n\uff09\u7684\u641e\u51fa\u7b54\u6848\u4e86\u3002\n\n\u76f4\u611f\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u6761\u76f4\u7ebf\u5e94\u8be5\u662f\u4e24\u4e2a\u70b9\u8ddd\u79bb\u6700\u5927\u7684\uff1b\u5c31\u7b97\u4e0d\u662f\uff0c\u597d\u50cf\u8d8a\u957f\u8d8a\u597d\u3002\n\n\u6211\u4e0d\u4f1a\u8bc1\u660ehhhhh\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u53d6\u8ddd\u79bbi\u53f7\u70b9\u524dm\u957f\u7684\u51e0\u4e2a\u70b9\u51fa\u6765\uff0c\u6bcf\u6b21\u5c31\u8ba4\u4e3a\u77e9\u5f62\u4e2d\u5305\u542b\u8fd9\u6761\u76f4\u7ebf\u3002\n\n\u590d\u6742\u5ea6O(m*n^2)\u3002\n\n\u4ee3\u7801\n```cpp\n// \u9700\u8981-O2\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n\nusing namespace std;\n\nconst double res=1e-9;\n\nint sign(double x)\n{\n    if(fabs(x)<=res) return 0;\n    return x>0?1:-1;\n}\n\nstruct node\n{\n    double x,y;\n    \n    double operator ^ (const node &rhs) const\n    {\n        return x*rhs.y-y*rhs.x;\n    }\n    double operator * (const node &rhs) const\n    {\n        return x*rhs.x+y*rhs.y;\n    }\n    node operator - (const node &rhs) const\n    {\n        return (node){x-rhs.x,y-rhs.y};\n    }\n}p[2010];\n\n\ndouble dis(node a,node b)\n{\n    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\n\ndouble get_s(node a,node b,node c)\n{\n    return ((a^b)+(b^c)+(c^a))/2;\n}\n\n\nint vis[2010][2010],a[2010][15],n,m;\n\ndouble ans;\n\nstruct wtf\n{\n    double dis;\n    int id;\n}d[2010];\n\nbool comp(wtf aa,wtf bb)\n{\n    return aa.dis>bb.dis;\n}\n\nvoid pre(int id)\n{\n    for(int i=1;i<=n;++i) d[i]=(wtf){dis(p[id],p[i]),i};\n    sort(d+1,d+n+1,comp);\n    \n    int js=0;\n    vis[id][id]=1;\n    for(int i=1;i<=n;++i)\n    {\n        if(!vis[id][d[i].id])\n        {\n            vis[id][d[i].id]=vis[d[i].id][id]=1;\n            a[id][++js]=d[i].id;\n            if(js==m) break;\n        }\n    }\n}\n\ndouble C(node A,node B,node C)\n{\n    return (A-C)^(B-C);\n}\n\nint main()\n{\n//\tfreopen(\"area.in\",\"r\",stdin);\n//\tfreopen(\"area.out\",\"w\",stdout);\n    \n    scanf(\"%d\",&n);m=min(n,10);\n    for(int i=1;i<=n;++i) scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n    \n    for(int i=1;i<=n;++i) pre(i);\n    \n    for(int i=1;i<=n;++i)\n    {\n        for(int zz=1;zz<=m;++zz)\n        {\n            int j=a[i][zz];\n            if(!j) break;\n            //cout<<i<<\"---\"<<j<<endl;\n            \n            //a line i---j\n            double bb=0,bs=1e9,sb=0,ss=1e9;\n            \n            for(int k=1;k<=n;++k)\n            {\n                if(k==i||k==j) continue;\n                int it=sign(C(p[i],p[j],p[k]));\n//\t\t\t\tcout<<i<<\" \"<<j<<\" \"<<k<<\"  :\"<<it<<endl;\n                double pp=fabs(get_s(p[i],p[j],p[k]));\n                \n                if(it==0) bs=ss=0;\n                else if(it==1)\n                {\n                    //do it in b\n                    bb=max(bb,pp);\n                    bs=min(bs,pp);\n                }\n                else\n                {\n                    //do it in s\n                    sb=max(sb,pp);\n                    ss=min(ss,pp);\n                }\n            }\n            \n            if(bb==0) ans=max(ans,sb-ss);\n            else if(sb==0) ans=max(ans,bb-bs);\n            else ans=max(ans,bb+sb);\n        }\n    }\n    printf(\"%.3lf\\n\",ans);\n    return 0;\n}\n```\n\n\u5361\u5361\u5e38\u53d1\u73b0\u597d\u50cfm\u53d61\u4e5f\u662f\u5bf9\u7684\uff0c\u81f3\u4e8e\u662f\u8fd9\u4e2a\u6570\u636e\u7684\u95ee\u9898\u8fd8\u662f\u6709\u4ec0\u4e48\u6211\u4e0d\u4f1a\u8bc1\u660e\u7684\u6027\u8d28\u5c31\u4e0d\u5f97\u800c\u77e5\u4e86\u3002\n\n\u4ee3\u7801\n\n```cpp\n//\u4e0d\u9700\u8981 -O2\n#define big(a,b) (a)>(b)?(a):(b)\n#define sml(a,b) (a)<(b)?(a):(b)\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n\nusing namespace std;\n\nconst double res=1e-9;\n\nint sign(double x)\n{\n\tif(fabs(x)<=res) return 0;\n\treturn x>0?1:-1;\n}\n\nstruct node\n{\n\tdouble x,y;\n\t\n\tdouble operator ^ (const node &rhs) const\n\t{\n\t\treturn x*rhs.y-y*rhs.x;\n\t}\n\tdouble operator * (const node &rhs) const\n\t{\n\t\treturn x*rhs.x+y*rhs.y;\n\t}\n\tnode operator - (const node &rhs) const\n\t{\n\t\treturn (node){x-rhs.x,y-rhs.y};\n\t}\n}p[2010];\n\n\ndouble dis(node a,node b)\n{\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\n\ndouble get_s(node a,node b,node c)\n{\n\treturn ((a^b)+(b^c)+(c^a))/2;\n}\n\n\nint vis[2010][2010],a[2010],n,m;\n\ndouble ans;\n\ndouble d[2010];\n\nvoid pre(int id)\n{\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\td[i]=dis(p[id],p[i]);\n\t\tif(d[a[id]]<d[i]) a[id]=i;\n\t}\n}\n\ndouble C(node A,node B,node C)\n{\n\treturn (A-C)^(B-C);\n}\n\nint main()\n{\n\tfreopen(\"area.in\",\"r\",stdin);\n\tfreopen(\"area.out\",\"w\",stdout);\n\t\n\t\n\t\n\tscanf(\"%d\",&n);m=min(n,1);\n\tfor(int i=1;i<=n;++i) scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n\t\n\tfor(int i=1;i<=n;++i) pre(i);\n\t\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\t\tint j=a[i];\n\n\t\t\tdouble bb=0,bs=1e9,sb=0,ss=1e9;\n\t\t\t\n\t\t\tfor(int k=1;k<=n;++k)\n\t\t\t{\n\t\t\t\tif(k==i||k==j) continue;\n\t\t\t\tint it=sign(C(p[i],p[j],p[k]));\n\t\t\t\tdouble pp=fabs(get_s(p[i],p[j],p[k]));\n\t\t\t\t\n\t\t\t\tif(it==0) bs=ss=0;\n\t\t\t\telse if(it==1)\n\t\t\t\t{\n\t\t\t\t\tbb=big(bb,pp);\n\t\t\t\t\tbs=sml(bs,pp);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsb=big(sb,pp);\n\t\t\t\t\tss=sml(ss,pp);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(bb==0) ans=big(ans,sb-ss);\n\t\t\telse if(sb==0) ans=big(ans,bb-bs);\n\t\t\telse ans=big(ans,bb+sb);\n\t}\n\tprintf(\"%.3lf\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1519439844,
        "uid": 35718,
        "name": "MloVtry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4166 \u3010[SCOI2007]\u6700\u5927\u571f\u5730\u9762\u79ef\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u6709\u610f\u601d\u7684\u8ba1\u7b97\u51e0\u4f55\n\n\n\u56db\u8fb9\u5f62\u7684\u56db\u4e2a\u9876\u70b9\u663e\u7136\u4e00\u5b9a\u5728\u51f8\u5305\u4e0a\n\n\n\u90a3\u4e48\u6c42\u51fa\u51f8\u5305\u4e4b\u540e\u5462\uff1f\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u679a\u4e3e\u56db\u4e2a\u9876\u70b9\u7684O(n^4)\u7684\u505a\u6cd5\n\n\n\u4f46\u662f\u5982\u679c\u7528\u65cb\uff08xu\u00e1n\uff09\u8f6c\uff08zhu\u01cen)\u5361(qi\u01ce)\u58f3(k\u00e9)\u6765\u4f18\u5316\u7684\u8bdd\n\n\n![](https://cdn.luogu.com.cn/upload/pic/13682.png )\n\n\u5c31\u53d8\u6210\u4e86O(n^2)\n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nstruct Point\n{\n    double x, y;\n}point[2018], stack[2018];\nint n, top;\ndouble ans;\n//\u5404\u79cd\u5411\u91cf\u8fd0\u7b97\ndouble dis(Point a, Point b)\n{\n    return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);\n}\n\nPoint operator - (Point a, Point b)\n{\n    return (Point){a.x - b.x, a.y - b.y};\n}\n\ndouble operator * (Point a, Point b)\n{\n    //\u5411\u91cf\u53c9\u79efcross(A,B)=xA*yB-xB*yA;\n    return a.x * b.y - a.y * b.x;\n}\nbool operator < (Point a, Point b)\n{\n    double t = (a - point[1]) * (b - point[1]);\n    return t > 0 || t == 0 && dis(point[1], a) < dis(point[1], b);\n}\n\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++)\n        scanf(\"%lf%lf\", &point[i].x, &point[i].y);\n    \n    //\u6c42\u51f8\u5305 \n    //\u8fed\u4ee3\u627e\u51fa\u7eb5\u5750\u6807\u6700\u5c0f\u7684\u70b9 \n    int k = 1;\n    for(int i = 2; i <= n; i++)\n        if(point[k].y > point[i].y || point[k].y == point[i].y && point[k].x > point[i].x)\n            k = i;\n    swap(point[k], point[1]);\n    \n    //\u6309\u6781\u89d2\u6392\u5e8f\n    sort(point + 2, point + n + 1);\n    //\u6211\u4eec\u94a6\u5b9a\u7eb5\u5750\u6807\u6700\u5c0f\u7684\u70b9\u3001\u6781\u89d2\u6700\u5c0f\u7684\u70b9\u4e00\u5b9a\u5728\u51f8\u5305\u4e0a\n    stack[++top] = point[1]; stack[++top] = point[2];\n    for(int i = 3; i <= n; i++)\n    {\n        while(top > 1 && (stack[top] - stack[top-1]) * (point[i] - stack[top-1]) <= 0)\n        //\u53c9\u79ef\u5c0f\u4e8e0\uff0c\u8bf4\u660e\u6808\u9876\u5411\u91cf\u4e0d\u5728\u51f8\u5305\u4e0a\n            top--;\n        stack[++top] = point[i];\n        //\u65b0\u5411\u91cf\u52a0\u5165\u51f8\u5305\n    }\n    //\u65cb\u8f6c\u5361\u58f3\n    stack[top+1] = point[1];\n    int a, b;\n    for(int i = 1; i <= top; i++)\n    { \n        a = i % top + 1; b = (i + 2) % top + 1;\n        for(int j = i + 2; j <= top; j++)\n        { \n            while(a % top + 1 != j && (stack[a] - stack[i])*(stack[j] - stack[i]) < (stack[a+1] - stack[i])*(stack[j] - stack[i]))\n                a = a % top + 1;\n            while(b % top + 1 != j && (stack[j] - stack[i])*(stack[b] - stack[i]) < (stack[j] - stack[i])*(stack[b+1] - stack[i]))\n                b = b % top + 1;\n            ans = max(ans, (stack[a] - stack[i])*(stack[j] - stack[i]) + (stack[j] - stack[i])*(stack[b] - stack[i]));\n        }\n    }\n    printf(\"%.3lf\",ans/2.0);\n    return 0;\n}\n```",
        "postTime": 1517214518,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4166 \u3010[SCOI2007]\u6700\u5927\u571f\u5730\u9762\u79ef\u3011"
    }
]