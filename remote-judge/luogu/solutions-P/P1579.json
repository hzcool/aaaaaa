[
    {
        "content": "\n##//\u7ffb\u770b\u4e86\u4e00\u4e0b\u5404\u4f4d\u5927\u7287\u7684\u4ee3\u7801\uff0c\u597d\u50cf\u6ca1\u6709\u548c\u6211\u4e00\u6837\u7684\uff0c\u9f13\u8d77\u52c7\u6c14\u53d1\u4e00\u7bc7\u9898\u89e3//\u4ee3\u7801\u6709\u70b9\u77ed\u3002\n###  \u8fd9\u4e2a\u9898\u76ee\u6c42\u4efb\u610f\u4e00\u4e2a\u5927\u4e8e\u4e5d\u7684\u5947\u6570\u7b49\u4e8e\u4e09\u4e2a\u8d28\u6570\u7684\u548c\uff0c\u9898\u76ee\u8bf4\u660e\u4e86\u7b2c\u4e00\u4e2a\u8d28\u6570\u8981\u6700\u5c0f\uff0c\u5176\u6b21\u7b2c\u4e8c\u4e2a\uff0c\u636e\u6b64\u53ef\u4ee5\u8fdb\u884c\u4f18\u5316\u5faa\u73af\u7684\u6b21\u6570\u3002\u7136\u540e\u5c31\u662f\u8fdb\u5165\u6b63\u9898\u4e86 ,\u9996\u5148\u5148\u8981\u660e\u767d\u4e00\u4ef6\u4e8b\uff0c\u4e09\u4e2a\u6570\u76f8\u52a0\u4e3a\u5947\u6570\uff0c\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\n### \u2460\u4e24\u4e2a\u5076\u6570\u52a0\u4e00\u4e2a\u5947\u6570.\n### \u2461\u4e09\u4e2a\u5947\u6570.\n#### \u2460\u5148\u5224\u65ad\u524d\u4e24\u4e2a\u8d28\u6570\u90fd\u662f\u5076\u6570\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u5076\u6570\u4e2d\u53ea\u67092\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u5c31\u53ea\u8981\u5224\u65ad\u8fd9\u4e2a\uff08n-4\uff09\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u5982\u679c\u662f\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa2,2\uff0cn-4\u3002\n#### \u2461\u5982\u679c\u8fd9\u4e09\u4e2a\u6570\u90fd\u662f\u8d28\u6570\uff0c\u90a3\u4e48\u4ecei=3\u5f00\u59cb\u5faa\u73af\uff0c\u5e76\u4fdd\u8bc1i\u4e3a\u5947\u6570\u5e76\u4e14i\u4e3a\u7d20\u6570\uff0c\u518d\u5728\u7b2c\u4e8c\u91cd\u5faa\u73af\u91cc\u9762\u8ba9j=i\u5e76\u4fdd\u8bc1j\u4e3a\u5947\u6570\u4e14j\u4e3a\u7d20\u6570\uff0c\u6700\u540e\u53ea\u8981\u5224\u65ad\uff08n-i-j)\u662f\u5426\u4e3a\u5947\u6570\u4e14\u4e3a\u7d20\u6570\u5c31\u884c\u4e86\uff0c\u6ee1\u8db3\u5c31\u8f93\u51fa\u7b54\u6848\u3002\n\n\n------------\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint check(int x){\n\tfor (int i=2;i*i<=x;i++)\n\tif(x%i==0) return 0;\n\treturn 1;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tif(check(n-4)) {\n\tcout<<\"2 \"<<\"2 \"<<n-4;\n    return 0;\n    }     //\u7b2c\u4e00\u79cd\u60c5\u51b5\n\tfor (int i=3;i<n;i++)//\u7b2c\u4e8c\u79cd\u60c5\u51b5\n\tif((i%2)!=0&&check(i))//\u4f18\u5316\n\tfor (int j=i;j<n;j++)\n\t\tif((j%2)!=0&&check(j))//\u4f18\u5316\n\t\tif(check(n-i-j)) {\n\t\tcout<<i<<\" \"<<j<<\" \"<<n-i-j;return 0;//\u4e0d\u7528\u5faa\u73af\u7b2c\u4e09\u4e2a\u6570\uff0c\u4f18\u5316\u3002\n        }\n\t\n}\n```",
        "postTime": 1533566686,
        "uid": 106667,
        "name": "IOCTYCNconbill",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "emmmm\n\n\u770b\u8fc7\u90a3\u4e48\u591a\u7684\u5927\u4f6c\u90fd\u662f_O(n^2)_\u90a3\u6211\u5728\u8fd9\u91cc\u53d1\u4e00\u4e2a_O(n)_\u7684\u6765\u5438\u5f15\u5927\u4f6c\u597d\u4e86\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint isNotPrime[20005] = {1};\n\nint main()\n{\n    for (int i = 2; i < 20005; ++i)\n        for (int j = i * 2; j < 20005; j += i)\n            isNotPrime[j] = 1;\n    \n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 2; i < n - 2; ++i)\n        if (!isNotPrime[i])\n            if (!isNotPrime[n - 2 - i])\n            {\n                printf(\"2 %d %d\\n\", i, n - 2 - i);\n                return 0;\n            }\n    for (int i = 3; i < n - 2; ++i)\n        if (!isNotPrime[i])\n            if (!isNotPrime[n - 3 - i])\n            {\n                printf(\"3 %d %d\\n\", i, n - 3 - i);\n                return 0;\n            }\n    return 0;\n}\n```\n\n\u505a\u6cd5\uff1a\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6570\uff0c2\u548c3\u5404\u8bd5\u4e00\u6b21\u5c31\u884c\u3002\n\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f\n\u7528\u73b0\u4ee3\u7684\u6570\u5b66\u8bed\u8a00\uff0c\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\u53ef\u4ee5\u9648\u8ff0\u4e3a\uff1a\n\n_\u4efb\u4e00\u5927\u4e8e2\u7684\u5076\u6570\uff0c\u90fd\u53ef\u8868\u793a\u6210\u4e24\u4e2a\u7d20\u6570\u4e4b\u548c\u3002\t_\n\n\u5e76\u4e14\u5df2\u77e5\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\u5728 _n < 4 * 10 ^ 18_ \u7684\u8303\u56f4\u5185\u5e76\u6ca1\u6709\u627e\u5230\u53cd\u4f8b\uff0c\u6240\u4ee5\u5077\u4e2a\u61d2\uff0c\u5c31\u53ea\u8bd5\u4e862\u548c3.\uff08n \u662f\u5947\u6570\uff0c\u90a3\u4e48 n - 3 \u4e00\u5b9a\u662f\u5076\u6570\u554a\uff09",
        "postTime": 1541953548,
        "uid": 102850,
        "name": "\u4e0d\u51c6\u7761\u89c9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "# \u770b\u5230\u90a3\u4e48\u591a\u9898\u89e3\u6ca1\u4eba\u7528\u5230\u57c3\u7b5b\u6240\u4ee5\u5fcd\u4e0d\u4f4f\u628a\u6211\u7684\u4ee3\u7801\u53d1\u4e0a\u6765\n\n\u8fd9\u4e2a\u9898\u76ee\u4f3c\u4e4e\u975e\u5e38\u9002\u5408\u7528\u57c3\u6c0f\u7b5b\u5b50\u5148\u628a20000\u4ee5\u5185\u7684\u8d28\u6570\u5168\u90e8\u7b5b\u51fa\u6765\uff0c\u7136\u540e\u4e00\u4e2a\u7b80\u5355\u7684\u5d4c\u5957\u5faa\u73af\u5c31\u53ef\u4ee5\u89e3\u4e86\u3002\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u770b\u4e86\u90a3\u4e48\u591a\u5927\u4f6c\u7684\u9898\u89e3\u90fd\u6ca1\u6709\u7528\u57c3\u7b5b\u7684\uff0c\u5c31\u7b97\u6709\u5148\u6253\u8d28\u6570\u8868\u7684\u4e5f\u57fa\u672c\u90fd\u662f\u7528\u9010\u4e2a\u6d4b\u8bd5\u8d28\u6570\u7684\u65b9\u6cd5\u3002\n\n\u7b2c\u4e00\u6b21\u5fcd\u4e0d\u4f4f\u53d1\u9898\u89e3\uff0c\u8bf4\u660e\u4ee5\u4e0b\u51e0\u70b9\uff1a\n1. \u7531\u4e8e\u5de5\u4f5c\u540e\u4e00\u76f4\u4ece\u4e8b\u5927\u578b\u8f6f\u4ef6\u5f00\u53d1\uff0c\u6240\u4ee5\u5bf9\u4ee3\u7801\u98ce\u683c\u6bd4\u8f83\u6ce8\u91cd\u3002\u5373\u4f7f\u662f\u7b97\u6cd5\u7f16\u7a0b\u6211\u4e5f\u575a\u6301\u80fd\u4e0d\u7528\u5168\u5c40\u53d8\u91cf\u5c31\u4e0d\u7528\u5168\u5c40\u53d8\u91cf\u3002\u6240\u4ee5\u6211\u7684\u4ee3\u7801\u91cc\u7528\u5f15\u7528\u4f20\u6570\u7ec4\uff0c\u6709\u4e0d\u660e\u767d\u7684\u53ef\u4ee5\u5148\u4e86\u89e3\u4e00\u4e0bC++ \u4f7f\u7528\u5f15\u7528\u4f20\u6570\u7ec4\u7684\u8bed\u6cd5\u3002\n2. \u7531\u4e8e\u5de5\u4f5c\u4e2d\u7eafC\u3001Java\u548cPython\u7528\u5f97\u6bd4C++\u90fd\u591a\u5f97\u591a\uff0c\u6240\u4ee5\u65e0\u53ef\u6551\u836f\u5730\u559c\u6b22printf\u548cscanf\uff0c\u5bf9\u4e0d\u4f4f\u559c\u6b22cin\uff0ccout\u7684\u5927\u4f6c\u4eec\u4e86\u3002\n3. \u56e0\u4e3a\u4e00\u4e9b\u8be1\u5f02\u7684\u5f3a\u8feb\u75c7\u75c5\u6bd2\u611f\u67d3\u4e25\u91cd\uff0c\u6240\u4ee5\u4ece\u6765\u4e0d\u7528\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570\uff0c\u6240\u6709\u51fd\u6570\u90fd\u6709\u8fd4\u56de\u503c\uff0c\u786e\u5b9e\u6ca1\u5fc5\u8981\u8fd4\u56de\u4ec0\u4e48\u503c\u7684\u4e5f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6574\u65700\uff0c\u6240\u4ee5\u5927\u4f6c\u4eec\u8bf7\u539f\u8c05\u6211\u7684\u51fd\u6570\u91cc\u6709\u83ab\u540d\u5176\u5999\u7684return 0\u3002\n4. \u4e3a\u4e86\u65b9\u4fbf\u521d\u59cb\u5316\uff0c\u6211\u7684\u57c3\u7b5b\u7528\u7684\u6570\u7ec4\u548c\u901a\u5e38\u8bfe\u672c\u4e0a\u7684\u662f\u53cd\u7684\uff0cbool primes[]\u6570\u7ec4\u5143\u7d20\u503c\u4e3afalse\u7684\u8868\u793a\u662f\u8d28\u6570\uff0ctrue\u53cd\u800c\u8868\u793a\u4e0d\u662f\u8d28\u6570\u3002\u53ef\u80fd\u6211\u628a\u6570\u7ec4\u540d\u5b57\u6539\u6210bool composite[]\u66f4\u5408\u9002\uff0c\u72c2\u6c57\uff01\u5927\u4f6c\u4eec\u6c42\u539f\u8c05\u3002\n5. \u4ee3\u7801\u672c\u8eab\u8d85\u7ea7\u7b80\u5355\uff0c\u4e3b\u8981\u662f\u4e24\u4e2a\u51fd\u6570\uff0cerato()\u7528\u6765\u5728\u6307\u5b9a\u7684bool\u6570\u7ec4\u4e2d\u8fdb\u884c\u8d28\u6570\u7b5b\u9009\uff0cfind()\u7528\u6765\u5206\u89e3n\u3002\u53e6\u6709\u4e00\u4e2a\u5de5\u5177\u51fd\u6570next_prime\u7528\u6765\u8fed\u4ee3\u4e0b\u4e00\u4e2a\u8d28\u6570\u3002\u6ca1\u6709\u7528\u5230\u4ec0\u4e48\u9ad8\u5927\u4e0a\u7684\u6280\u672f\uff0c\u4ece\u5934\u5230\u5c3e\u90fd\u662f\u5e73\u94fa\u76f4\u53d9\u7684\u4ee3\u7801\u3002\n6. find()\u51fd\u6570\u7531\u4e8e\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8d28\u6570\u90fd\u662f\u4ece2\u5f00\u59cb\u5faa\u73af\uff0c\u6240\u4ee5\u5e26\u6709\u70b9\u8d2a\u5a6a\u5c5e\u6027\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u89e3\u5c31\u662f\u6ee1\u8db3\u9898\u76ee\u6240\u8981\u6c42\u7684\u90a3\u79cd\u89e3\u3002\n\n\u597d\u5427\uff0c\u76f4\u63a5\u770b\u4ee3\u7801\u5427\uff0c\u521a\u521aAC\u7684\uff0c\u901f\u5ea6\u4e5f\u5f88\u5feb\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u70b9\u90fd\u662f10ms\u4ee5\u5185\u7684\u3002\u57c3\u6c0f\u7b5b\u5b50\u7ecf\u8fc7\u4e00\u4e9b\u7b80\u5355\u7684\u4f18\u5316\uff0c\u6548\u7387\u8fd8\u662f\u76f8\u5f53\u9ad8\u7684\u3002\n\n\n```cpp\n#include <cstdio>\n\nconst int N = 20000;    // \u957f\u671f\u4ece\u4e8b\u5de5\u7a0b\u5f00\u53d1\u7684\u5f3a\u8feb\u75c7\u540e\u679c\n\nint erato(bool (&primes)[N]);\nint next_prime(int p, bool (&primes)[N]);\nint find(int n, bool (&primes)[N]);\n\nint main()\n{\n\tbool primes[N] = { false };\n\terato(primes);      // \u57c3\u7b5b\uff0c\u7b5b\u51fa\u6240\u6709\u8d28\u6570\u5148\n\n\tint n;\n\tscanf(\"%d\", &n);\n\tfind(n, primes);    // \u53bb\u5bfb\u627e\u89e3\n\n\treturn 0;\n}\n\nint erato(bool (&primes)[N])\n{\n\tfor (int t = 2; t * t <= N;) {\n\t\tfor (int i = t * t; i <= N ; i++) {\n\t\t\tif (primes[i]) continue;\n\t\t\tif (i % t == 0) primes[i] = true;\n\t\t}\n\t\twhile (primes[++t]);\n\t}\n\n\treturn 0;\n}\n\nint next_prime(int p, bool (&primes)[N])\n{\n\twhile (primes[++p]);\n\treturn p;\n}\n\nint find(int n, bool (&primes)[N])\n{\n\tbool found;\n\tfor (int p1 = 2; p1 < n; p1 = next_prime(p1, primes)) {\n\t\tfound = false;       // \u6709\u6ca1\u6709\u627e\u5230\u89e3\u7684flag\n\t\tfor (int p2 = 2; p2 < n; p2 = next_prime(p2, primes)) {\n\t\t\tint p3 = n - p1 - p2;\n\t\t\tif (p3 < 2)      // \u8bf4\u660e\u8fd9\u4e00\u8f6ep2\u5168\u90e8\u8bd5\u73a9\uff0c\u5e94\u8be5\u6362p1\u4e86\n\t\t\t\tbreak;\n\t\t\tif (primes[p3])  // p3\u4e0d\u662f\u8d28\u6570\uff0c\u5faa\u73af\u4e0b\u4e00\u4e2ap2\n\t\t\t\tcontinue;\n\t\t\tprintf(\"%d %d %d\\n\", p1, p2, p3);\n\t\t\tfound = true;    // \u627e\u5230\u89e3\u4e86\uff0c\u628aflag\u7acb\u8d77\u6765\uff0c\u8be5\u8fd4\u56de\u4e86\n\t\t\tbreak;\n\t\t}\n\t\tif (found)           // \u89e3\u5df2\u7ecf\u627e\u5230\uff0c\u4efb\u52a1\u7ed3\u675f\uff0c\u8df3\u51fa\u5faa\u73af\n\t\t\tbreak;\n\t}\n\n\treturn 0;\n}\n\n```",
        "postTime": 1548257954,
        "uid": 173413,
        "name": "majorli",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "# \u8fd9\u662f\u672c\u849f\u84bb\u53d1\u5e03\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u8bf7\u5404\u4f4d\u5927\u795e\u591a\u591a\u6307\u6559\uff01\n\n\u4e3b\u8981\u601d\u8def\uff1a\u5b9a\u4e49\u4e00\u4e2a\u5224\u65ad\u8d28\u6570\u7684\u51fd\u6570\uff0c\u7136\u540e\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\n\n~~\u771f\u8349\u7387\uff01~~ \n\n\u9644\u4e0aAC\u4ee3\u7801\uff1a\n```\n# include <cstdio>\nusing namespace std;\n\nbool prime(int n)\n{\n\tfor (int i = 2; i * i <= n; i++)\n\t\tif (n % i == 0) return false;\n\treturn true;\n}\n\nint main()\n{\n\tint x;\n\tscanf (\"%d\", &x);\n\tfor (int i = 2; i <= x / 3; i++)\n\t{\n\t\tif (!prime(i)) continue;\n\t\tfor (int j = 2; j <= (x - i) / 2; j++)\n\t\t{\n\t\t\tif (!prime(j)) continue;\n\t\t\tint k = x - i - j;\n\t\t\tif (prime(k))\n\t\t\t{\n\t\t\t\tprintf (\"%d %d %d\\n\", i, j, k);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1544628810,
        "uid": 98577,
        "name": "Ge_er",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u96be\uff0c\u4f46\u662f\u6253\u4e86\u4e00\u4e2a\u8d28\u6570\u8868\u5c31\u611f\u89c9\u4e0d\u96be\u4e86\u3002\u6211\u7684\u65b9\u6cd5\u662f\u679a\u4e3e\u7b2c\u4e00\u4e2a\u6570\u548c\u7b2c\u4e8c\u4e2a\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u4e00\u4e2afor\u5faa\u73af\u679a\u4e3e\u7b2c\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u5728\u8d28\u6570\u8868\u91cc\u662f\u8d28\u6570\uff0c\u90a3\u4e48\u518d\u7528\u4e00\u4e2afor\u679a\u4e3e\u7b2c\u4e8c\u4e2a\u6570\uff0c\u5982\u679c\u7b2c\u4e8c\u4e2a\u6570\u548c\u7b2c\u4e09\u4e2a\u6570\u90fd\u662f\u8d28\u6570\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa\uff0c\u5e76\u4e14\u7ed3\u675f\u5faa\u73af\u3002\n\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint n,b,o;\nint a[100000];\nint main()\n{\n    cin>>n;\n    a[1]=1;\n    a[0]=1;\n    for(int i=1;i<=trunc(sqrt(n));i++)\n    {\n        if(a[i]==0)\n        {\n          for(int j=2;j<=n/i;j++)\n          {                     //\u8d28\u6570\u8868\n              a[i*j]=1;\n          }    \n        }\n    }\n    for(int i=2;i<=n;i++)\n    {\n        b=n;\n        if(a[i]==0)        //\u679a\u4e3e\u7b2c\u4e00\u4e2a\u6570\n        {\n            b-=i;\n            for(int j=2;j<=b;j++)\n            {\n                if((a[j]==0)&&(a[b-j]==0))            //\u679a\u4e3e\u7b2c\u4e8c\u4e2a\u6570\u548c\u7b2c\u4e09\u4e2a\u6570\n                {\n                    cout<<i<<\" \"<<j<<\" \"<<b-j<<endl;         //\u8f93\u51fa\u3002\n                    return 0;\n                }\n            }\n        }\n    }\n}\n```",
        "postTime": 1482278221,
        "uid": 27123,
        "name": "\u767e\u91cc\u4ea6\u5b88\u7ea6_test",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u5728\u4e0b\u8ba4\u4e3a\u6700\u7b80\u5355\u7684C\u8bed\u8a00\u7a0b\u5e8f\n\n```cpp\n#include <stdio.h>\nint zs (int a)  //\u5224\u65ada\u662f\u5426\u4e3a\u8d28\u6570,\u662f\u7684\u8bdd\u8f93\u51fa1\uff0c\u5426\u5219\u8f93\u51fa0\n{int i;\n if (a==1) return 0;\n for (i=2;i*i<=a;i++)  //i\u4ece2\u5230\u6839\u53f7a\uff0c\u5982\u679ca\u6574\u9664i\uff0c\u5c31\u8bf4\u660ea\u4e0d\u662f\u8d28\u6570\n   if (a%i==0) return 0;\n return 1;\n}\nint n,a,b,c;\nint main()\n{scanf(\"%d\",&n);  //\u8f93\u5165\u4e00\u4e2a\u6570\uff0c\u8fd9\u91cc\u6211\u60f3\u8bf4\u4e00\u4e0b\uff0c\u4e8b\u5b9e\u4e0a\u6ca1\u5fc5\u8981\u7ba1\u5927\u4e8e\u5c0f\u4e8e9\u7684\uff0c\u9898\u76ee\u80af\u5b9a\u4f1a\u7ed9\u4f60\u5408\u7406\u7684\u6570\n for (a=2;a<=n-4;a++)  //a\uff0cb\uff0cc\u67e5\u627e\n   for (b=2;b<=n-4;b++) {\n     c=n-a-b;\n     if (zs(a) && zs(b) && zs(c)) {\n       printf(\"%d %d %d\",a,b,c);  //\u5982\u679ca\uff0cb\uff0cc\u90fd\u4e3a\u8d28\u6570\uff0c\u5219\u8f93\u51fa\uff0c\u7136\u540e\u7ed3\u675f\u7a0b\u5e8f\n       return 0;\n     }\n   }\n}\n```",
        "postTime": 1482208832,
        "uid": 33337,
        "name": "wfstupig",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "## Code  $O(n^2)$\n\n\u5f53\u7136\u6700\u6734\u7d20\u7684\u65b9\u6cd5\u662f\u904d\u53862\u4e2a\u6570`i,j`\uff0c\u5bf9`i`,`j`,`n-i-j`\u9a8c\u8bc1\u7d20\u6570\u3002\u7d20\u6570\u9a8c\u8bc1\u4f18\u5316\u5f97\u597d\u7684\u8bdd\u5927\u7ea6\u662f$O(n^2\\sqrt n)\\rightarrow O(n\\sqrt n)$\u5427\u3002\u3002\n\n```c++\nbool is_prime(int number){\n    for(int i = 2; i*i <= number; i+=1)  //i*i\u662f\u4f18\u5316\n        if(!(number % i)) return 0;\n    return 1;\n}\n```\n\n### Force $O(n^3)\\rightarrow O(n)+O(n)$\n\n\u5982\u679c\u505a\u8fc7\u4e4b\u524d\u7684\u56de\u6587\u7d20\u6570\u9898\u7684\u8bdd\uff0c\u8fd9\u9053\u9898\u5c31\u76f8\u5f53\u7b80\u5355\u8fa3\u3002\u3002\u5957\u677f\u5b50\u5c31\u884c\u3002\n\n\u5148\u751f\u6210n\u8303\u56f4\u5185\u7684\u8d28\u6570\uff08\u6bd4\u5982\u6b27\u62c9\u7b5b\u6cd5\uff09\uff0c\u7136\u540e\u66b4\u529b\u7ec4\u5408\u9a8c\u8bc1\u3002\u3002\u4e0d\u7a33\u5b9a\u3002\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAX_N 20005\n\nbool prime[MAX_N];\nint p_numbers[MAX_N], size = 0; //reserve primes\n\nvoid Euler(int Length){  //about O(n)\n    prime[0] = prime[1] = 0;\n    for(int i = 2; i <= Length; ++i) prime[i] = 1; //initialize all as true\n    for(int i = 2; i <= Length; ++i){\n        if(prime[i]){\n            p_numbers[size++] = i;\n        }\n        for(int j = 0; j <size && i*p_numbers[j] < Length; j++){\n            prime[ i*p_numbers[j] ] = 0;  //sieve i*p_numbers[j]\n            if(i % p_numbers[j] == 0)  //special\n               break;\n        }\n    }\n}\n\nint main(){\n    int n; cin>> n;\n    Euler(n);\n    for(int i = 0; i < size; ++i)\n        for(int j = i; j < size; ++j)\n            for(int k = j; k < size; ++k){\n            \tif(p_numbers[i]+p_numbers[j]+p_numbers[k]==n){\n            \t\tcout<<p_numbers[i]<<\" \"<<p_numbers[j]<<\" \"<<p_numbers[k];\n            \t\treturn 0;\n\t\t\t\t} \n\t\t\t}\n}\n```\n\n### \u7a0d\u5fae\u4f18\u5316\u4e00\u4e0b $O(n^2)\\rightarrow O(n)+O(n)$\n\n\u6ce8\u610f\u5230\u6211\u4eec**\u5e76\u4e0d\u9700\u8981\u904d\u5386\u7b2c\u4e09\u4e2a\u5faa\u73af**\uff0c\u56e0\u4e3a`n`\u5df2\u77e5\uff0c\u7b2c3\u4e2a\u6570\u4e00\u5b9a\u662f`n-p[i]-p[j]`\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u501f\u52a9`prime`\u6570\u7ec4\u8fdb\u884cO(1)\u7684\u5224\u65ad\u8fa3\u3002\n\n> ~~\u600e\u4e48\u53c8\u662f\u8fd9\u4e2a\u5957\u8def\uff0c\u597d\u719f\u6089\u7684\u611f\u89c9~~\u3002\u3002orz\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAX_N 20005\n\nbool prime[MAX_N];\nint p_numbers[MAX_N], size = 0; //reserve primes\n\nvoid Euler(int Length){  //about O(n)\n    prime[0] = prime[1] = 0;\n    for(int i = 2; i <= Length; ++i) prime[i] = 1; //initialize all as true\n    for(int i = 2; i <= Length; ++i){\n        if(prime[i]){\n            p_numbers[size++] = i;\n        }\n        for(int j = 0; j <size && i*p_numbers[j] < Length; j++){\n            prime[ i*p_numbers[j] ] = 0;  //sieve i*p_numbers[j]\n            if(i % p_numbers[j] == 0)  //special\n               break;\n        }\n    }\n}\n\nint main(){\n    int n; cin>> n;\n    Euler(n);\n    for(int i = 0; i < size; ++i)\n        for(int j = i; j < size; ++j)  //\u76f4\u63a5\u5c11\u4e86\u4e00\u4e2a\u5faa\u73af\n        \tif(prime[n - (p_numbers[i]+p_numbers[j])]){\n        \t\tcout<<p_numbers[i]<<\" \"<<p_numbers[j]<<\" \"<<n - (p_numbers[i]+p_numbers[j]);\n        \t\treturn 0;\n\t\t\t} \n}\n```\n\n# ",
        "postTime": 1548563757,
        "uid": 124054,
        "name": "Vel_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "###  \u849f\u84bb\u9996\u53d1\n\u5728\u4e24\u4f4d\u5de8\u4f6c@\u849f\u84bb365 @BCZSX\u7684\u5e2e\u52a9\u4e0b\u6210\u529fAC,\u4e3a\u8868\u611f\u6069\uff0c\u4f9b\u4e0a\u9898\u89e3\u3002\n\u8bf7\u5404\u4f4d\u5de8\u4f6c\u591a\u591a\u6307\u6559\uff01\n~~10009\u7684\u6570\u636e\u5feb\u628a\u5c0f\u849f\u84bb\u903c\u75af\u4e86~~\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint zhishu(int x) {\n    if(x==0||x==1) return 0;\n    for(int i=2; i*i<=x; i++) {\n        if(x%i==0) {\n            return 0;\n        }\n    }\n    return 1;\n}\nint main() {\n    int n;\n    cin>>n;\n    if(zhishu(n-4)){\n        cout<<\"2\"<<\" \"<<\"2\"<<\" \"<<n-4;\n        return 0;\n    }\n    for(int i=3;i<n;i+=2){\n        if(zhishu(i))\n        {\n            for(int j=3;j<n;j+=2)\n            {\n                if(zhishu(j)&&zhishu(n-i-j))\n                {\n                    cout<<i<<\" \"<<j<<\" \"<<n-i-j;\n                    return 0;\n                }\n            }\n        }\n    }\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n```c\ninclude<bits/stdc++.h>\nusing namespace std;\n\nint zhishu(int x){\n\nfor(int i=2;i*i<=x;i++){\n\n    if(x%i==0){\n\n        return 0;\n    }\n}\nreturn 1;\n} int main(){\n\nint n;\n\ncin>>n;\nif(zhishu(n-4)){\n    cout<<\"2\"<<\" \"<<\"2\"<<\" \"<<n-4;\n    return 0;\n}\nfor(int i=3;i<n;i+=2){\n    if(!zhishu(i)) continue;\n    for(int j=i;j<n;j+=2){\n        if(zhishu(j)){ \n            if(zhishu(n-i-j)==1){\n                cout<<i<<\" \"<<j<<\" \"<<n-i-j;\n                return 0;\n            } \n        }\n    }\n\n}\n}\n```",
        "postTime": 1550366421,
        "uid": 138434,
        "name": "\u51cc\u58a8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u6c34\u9898\uff0c\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u7a0b\u5e8f\n\n[codec ]\n\n```cpp\n#include<iostream>\n#include<math.h>\nusing namespace std;\nbool zhishu(int x)//\u5224\u65ad\u662f\u4e0d\u662f\u8d28\u6570;\n{\nfor(int i=2;i<=sqrt(x);i++)\nif(x%i==0)\nreturn false;\nreturn true;\n}\nint main()\n{\nint m,a,b,c;\ncin>>m;\nfor(a=2;a<=m;a++)//\u6839\u672c\u4e0d\u9700\u8981\u523b\u610f\u7684\u53bb\u770b\u7ed3\u679c\u7684\u5927\u5c0f\uff0c\u53ea\u9700\u8981\u6309\u987a\u5e8f\u679a\u4e3e\u5c31\u884c\u4e86; \nfor(b=2;b<=m;b++)\n{\nc=m-a-b;\nif(zhishu(a)&&zhishu(b)&&zhishu(c)&&c>=2)//\u56e0\u4e3ac\u662fm-\u4e24\u6570\u4e4b\u548c\u5f97\u6765\u7684\uff0c\u6240\u4ee5\u5b83\u8981\u5224\u65ad\u5927\u5c0f \n{\ncout<<a<<\" \"<<b<<\" \"<<c;\nreturn 0;\n}\n}\n}\n```\n[/codec ]\n\u65b0\u4eba\u53d1\u5e16\uff0c\u671b\u91c7\u7eb3\uff01\uff01\uff01\n",
        "postTime": 1441356120,
        "uid": 8179,
        "name": "wanglishuang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\n```cpp\n\n#include <iostream>  \n#include <cmath>  \nusing namespace std;  \nint pri(int a)  //\u5224\u65ad\u8d28\u7d20\n{  \n    for(int i=2;i<=sqrt(a);i++)if(a%i==0)return 1;  \n    return 0;  \n}  \nint main(int argc, char *argv[])  \n{  \n    int n,a,b,c;  \n    cin >> n;  \n    for(int i=2;i<n;i++) // \u627e\u5230\u7b2c\u4e00\u4e2a\u6570\n    {  \n        if(pri(i)==0) for(int j=2;j<n-i;j++)  //\u5224\u65ad\u7b2c\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u8d28\u7d20\uff0c\u5982\u679c\u662f\u8fd9\u5bfb\u627e\u7b2c\u4e8c\u4e2a\u6570\n        {  \n            if(pri(j)==0&&pri(n-i-j)==0) //\u627e\u52302\u4e2a\u6570\u81ea\u7136\u786e\u5b9a\u4e86\u7b2c\u4e09\u4e2a\u6570 \uff0c\u5e76\u5224\u65ad\u7b2c\u4e8c\u548c\u7b2c\u4e09\u4e2a\u6570\u4e3a\u8d28\u7d20\n            {cout << i << ' ' << j << ' '<< n-i-j; return 0;}  \n        }  \n    }  \n}  \n\n```",
        "postTime": 1428232098,
        "uid": 4138,
        "name": "linzihao1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u54c7\uff01A\u4e00\u9053\u6a59\u9898\u5c45\u7136$TLE$\u4e86\u4e09\u6b21\uff0c\u96be\u9053\u8fd9\u4e2a\u5e74\u4ee3\u8fde\u66b4\u529b\u90fd\u6c34\u4e0d\u8fc7\u53bb\u5417\uff1f\n\n\u7a81\u7136\u611f\u89c9~~\u6c34\u591a\u4e86\u9ec4\u9898\uff0c\u6a59\u9898\u90fd\u4e0d\u4f1a\u505a\u4e86~~\n\n### ispriem(num)\u679a\u4e3e\n\u4f5c\u4e3a\u4e00\u4e2a\u6a59\u9898\u9898\u89e3\uff0c\u4e5f\u9700\u8981\u8be6\u7ec6\u4e00\u70b9\u5566\uff01\n\n~~\u5b9e\u9645\u4e0a\u662f\u4e3a\u4e86\u6c42\u7ba1\u7406\u5458\u5927\u4eba\u901a\u8fc7~~$QwQ$\n\n\u8fd9\u4e2a\u51fd\u6570\u662f\u5224\u65ad\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u662f\u5219```true```\uff0c\u975e\u5219```false```\n\n\u5b9e\u73b0\u5f88\u7b80\u5355\n\n\u81ea\u7136\u53ef\u4ee5\u679a\u4e3e\u4ece\u5c0f\u5230\u5927\u7684\u6bcf\u4e2a\u6570\u770b\u662f\u5426\u80fd\u6574\u9664\n\n**\u5f53\u7136\uff0c\u9664\u6570\u4e0d\u80fd\u4e3a`1`\u548c\u539f\u6570`num`\uff0c\u6240\u4ee5\u4ece2\u5f00\u59cb\uff0c\u5230num-1\u7ed3\u675f**\n\n```c++\nbool isprime(int num){\n    for(int i=2;i<num;++i){\n        if(!(num%i)){\n            return false;\n        }\n    }\n    return true;\n}\n```\n\n### 40\u5206\u4ee3\u7801\n\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u8fd9\u4e09\u4e2a\u6570\uff0c\u4e09\u4e2a```for```\u76f4\u63a5\u521a\u4e0a\u53bb\uff0c\u6211\\*\\*\uff0c\u90a3\u4e2a\u723d\uff0c$40$\u5206\uff0c$TLE$\n\n\u7528```sum```\u5224\u65ad$i+j+z$\u662f\u5426\u7b49\u4e8e$n$\n\n```c++\n#include<cstdio>\nbool isprime(int num){\n    for(int i=2;i<num;++i){\n        if(!(num%i)){\n            return false;\n        }\n    }\n    return true;\n}\nint main(){\n    int n,sum=0;\n    scanf(\"%d\",&n);\n    for(int i=2;i<n;i++){\n        if(isprime(i)==true){//\u5982\u679c\u662f\u7d20\u6570\n            sum+=i;\n            for(int j=2;j<n;j++){\n                if(isprime(j)==true){//\u5982\u679c\u662f\u7d20\u6570\n                    sum+=j;\n                    for(int z=2;z<n;z++){//\u5176\u5b9e\u5b8c\u5168\u4e0d\u9700\u8981\u8fd9\u4e2afor\uff0c\u53ea\u9700\u8981\uff08n-i-j\uff09\u5373\u53ef\uff0c\u4f46\u6211\u5f53\u65f6\u50bb\u554a\uff01\n                        if(isprime(z)==true){//\u5982\u679c\u662f\u7d20\u6570\n                            sum+=z;\n                            if(sum==n){//\u5982\u679c\u627e\u5230\u4e86\u8fd9\u4e09\u4e2a\u6570\uff0c\u8f93\u51fa\u5e76\u9000\u51fa\u5373\u53ef\n                                printf(\"%d %d %d\",i,j,z);\n                                return 0;\n                            }\n                            sum-=z;//\u4e0d\u662f\u8fd9\u4e2a\u6570\n                        }\n                    }\n                    sum-=j;//\u4e0d\u662f\u8fd9\u4e2a\u6570\n                }\n            }\n            sum=0;//\u4e0d\u662f\u8fd9\u4e2a\u6570\n        }\n    }\n}\n```\n\u8fd9\u4e2a\u5c31\u4e0d\u6d88\u8bb2\u4e86\u5427\uff01\n### \u8bb280\u5206\u4ee3\u7801\u4e4b\u524d\uff0c\u8bb2\u4e00\u4e0bisprime(num)\u4f18\u5316\n\u6211\u4eec\u867d\u7136\u53ef\u4ee5\u679a\u4e3e\uff0c\u4f46\u6bd5\u7adf\u6548\u7387\u592a\u4f4e\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u5176\u5b9e\u6211\u4eec\u4e0d\u5fc5\u8981\u6bcf\u4e2a\u6570\u90fd\u9700\u8981\u5224\u65ad\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5982\u679c$x$\u662f$a$\u7684\u7ea6\u6570\uff0c\u90a3\u4e48$\\frac{a}{x}$\u4e5f\u662f$a$\u7684\u7ea6\u6570\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u544a\u8bc9\u6211\u4eec\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5bf9$(x,\\frac{a}{x})$\uff0c\u53ea\u9700\u8981\u68c0\u9a8c\u5176\u4e2d\u7684\u4e00\u4e2a\u5c31\u597d\u4e86\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u4e4b\u8003\u5bdf\u6bcf\u4e00\u5bf9\u91cc\u9762\u5c0f\u7684\u90a3\u4e2a\u6570\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u6240\u6709\u8fd9\u4e9b\u8f83\u5c0f\u6570\u5c31\u662f$[1,\\sqrt{a}]$\u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6570\u3002\n\n\u90a3\u4e48\uff0c\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e5f\u5c31\u6709\u4e86\u65b0\u4e00\u4ee3```isprime(num)```\n\n```c++\nbool isprime(int num){\n\tfor(int i=2;i*i<=num;++i){\n\t\tif(!(num%i)){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n```\n\n### 80\u5206\u4ee3\u7801\n```c++\n#include<cstdio>\nbool isprime(int num){\n    for(int i=2;i*i<=num;++i){\n        if(!(num%i)){\n            return false;\n        }\n    }\n    return true;\n}\nint main(){\n    int n,sum=0;\n    scanf(\"%d\",&n);\n    for(int i=2;i<n;i++){\n        if(isprime(i)==true){\n            sum+=i;\n            for(int j=i;j<n;j++){\n                if(isprime(j)==true){\n                    sum+=j;\n                    for(int z=j;z<n;z++){\n                        if(isprime(z)==true){\n                            sum+=z;\n                            if(sum==n){\n                                printf(\"%d %d %d\",i,j,z);\n                                return 0;\n                            }\n                            sum-=z;\n                        }\n                    }\n                    sum-=j;\n                }\n            }\n            sum=0;\n        }\n    }\n}\n```\n\n\u5c31\u662f\u5c06```isprime```\u4f18\u5316\u4e86\u4e00\u4e0b\n\n### \uff08~~AK~~\uff09AC\u4ee3\u7801\n\u4f18\u5316\u5230\u8fd9\u91cc\uff0c\u6211\u61f5\u4e86\uff0c\u8fd8\u80fd\u600e\u4e48\u4f18\u5316\u3002\n\n\u6211\u771f\u662f\u592a\u5f31\u4e86\uff0c\u5341\u5206\u949f\u4e4b\u540e\uff0c\u6211\u660e\u767d\u4e86\u3002\n\n\u6700\u540e\u90a3\u4e2a```for```\u6839\uff01\u672c\uff01\u4e0d\uff01\u9700\uff01\u8981\uff01\n\n\u56e0\u4e3a\u662f\u4e09\u4e2a\u6570\uff0c\u800c\u4e14\u7ed3\u679c\u4e00\u5b9a\u662f$i+j+z==n$,\u90a3\u4e48```for(z)```\u5c31\u53ef\u4ee5\u88ab\u66ff\u6362\u4e3a```(n-i-j)```\n\n```c++\n#include<cstdio>\nbool isprime(int num){\n\tfor(int i=2;i*i<=num;++i){\n\t\tif(!(num%i)){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nint main(){\n\tint n,sum=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=2;i<n;i++){\n\t\tif(isprime(i)==true){\n\t\t\tsum+=i;\n\t\t\tfor(int j=i;j<n;j++){\n\t\t\t\tif(isprime(j)==true){\n\t\t\t\t\tsum+=j;\n\t\t\t\t\tif(isprime(n-i-j)==true&&(n-i-j)>0){//\u8981\u5224\u65ad\u5fc5\u987b\u5927\u4e8e0\n\t\t\t\t\t\tsum+=(n-i-j);\n\t\t\t\t\t\tif(sum==n){\n\t\t\t\t\t\t\tprintf(\"%d %d %d\",i,j,n-i-j);\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsum-=(n-i-j);\n\t\t\t\t\t}\n\t\t\t\t\tsum-=j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsum=0;\n\t\t}\n\t}\n}\n```\n\n\u6211\u592a\u5f31\u4e86\uff01\uff01\uff01",
        "postTime": 1542381939,
        "uid": 70178,
        "name": "noall",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u770b\u4e86\u534a\u5929\u597d\u50cf\u6ca1\u6709\u76f4\u63a5\u679a\u4e3e\u7d20\u6570\u7684\u2026\u2026\n\n\u611f\u89c9\u8fd9\u6837\u4f1a\u5feb\u4e00\u70b9\u70b9\uff0c\u6240\u4ee5\u6211\u5077\u5077\u5730\n\n\uff08\u8981\u662f\u6709\u91cd\u590d\u5f53\u6211\u6ca1\u53d1\u597d\u4e86\n\n\n\n\u601d\u8def\uff1a\u6253\u8868\uff0c\u628a\u5c0f\u4e8e\u8f93\u5165\u7684\u6570\u7684\u7d20\u6570\u6311\u51fa\u6765\uff0c\u7136\u540e\u7528\u4e24\u91cdfor\u5faa\u73af\u679a\u4e3e..\u6211\u8868\u8fbe\u4e0d\u51fa\u6765\uff0c\u8fd8\u662f\u770b\u4ee3\u7801\u5427\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint js,p[20005],prime[3000],cnt=1;\n```\njs\uff1a\u8f93\u5165\u7684\u5947\u6570\uff08\u6beb\u65e0\u903c\u683c\u7684\u53d8\u91cf\u540d\n\np\u548cprime\u4e0b\u9762\u518d\u89e3\u91ca\uff0ccnt\u662f\u8f93\u5165\u7684\u6570\u5b57\u4e4b\u5185\u7684\u7d20\u6570\u4e2a\u6570\n\n```\nint main()\n{\n\tcin>>js;\n\tfor(int i=2;i<=js;i++)\n\t{\n\t\tp[i]=i;\n\t}\n\tfor(int i=2;i<=js;i++)\n\t{\n\t\tif(p[i]==i)\n\t\t{\n\t\t\tprime[cnt]=i;\n\t\t\tcnt++;\n\t\t\tfor(int j=i*2;j<=js;j+=i)\n\t\t\t{\n\t\t\t\tp[j]/=i;\n\t\t\t}\n\t\t}\n\t}\n\tcnt-=1;\n```\n\u6253\u7d20\u6570\u8868\u3002\u6211\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u7b5b\uff0c\u53cd\u6b63\u5199\u5f97\u5f88\u723d...\n\n\u7531\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679cp[i]==i\uff0c\u90a3\u4e48i\u662f\u7d20\u6570\uff1bprime[1]~prime[cnt]\u91cc\u9762\u7684\u90fd\u662f\u7d20\u6570\uff0c\u800c\u4e14\u4ece\u5c0f\u5230\u5927\u6392\u5217\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u66b4\u529b\u4e86\u3002\n\n```\n\tfor(int a1=1;a1<=cnt;a1++)\n\t{\n\t\tfor(int a2=1;a2<=cnt;a2++)\n\t\t{\n\t\t\tint left=js-prime[a1]-prime[a2];\n\t\t\tif(p[left]==left&&left!=0)\n\t\t\t{\n\t\t\t\tcout<<prime[a1]<<\" \"<<prime[a2]<<\" \"<<left;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n```\n\nleft\u4e0d\u662f\u5de6\uff0c\u662fleave\u7684\u5f62\u5bb9\u8bcd\u5f62\u5f0f\uff0c\u662f\u8f93\u5165\u7684\u6570\u51cf\u53bb\u524d\u9762\u679a\u4e3e\u7684\u8d28\u6570\u4e4b\u540e\u5269\u4e0b\u7684\u6570\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\u5462\uff1f\u53ef\u80fd\u662fnlogn\u5427\uff0c\u53ef\u80fd\u662fcnt^2\u5427\u2026\u2026\u672c\u849f\u84bb\u4e0d\u4f1a\u7b97\uff0c\u4f46\u5c31\u662f\u89c9\u5f97\u5f88\u8212\u670d\u3002\uff08\u9003",
        "postTime": 1540209987,
        "uid": 64286,
        "name": "qAzXsW_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528\u7ebf\u6027\u7b5b\u8d28\u6570\u6765\u6c34\uff08\u96fe\uff09\n```c\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#define I 2000000\nusing namespace std;\nint p[I],c[I],n;\n/*n\u4e3a\u7ed9\u51fa\u6570\uff0cc[I]\u7528\u6765\u5224\u65ad\u662f\u5426\u4e3a\u8d28\u6570\u548c\u5c06\u975e\u8d28\u6570\u5b58\u4e0a\u6d88\u6389\u5b83\u7684\u8f83\u5c0f\u7684\u8d28\u6570\u7684\u4e0b\u6807\uff08\u770b\u770b\u4ee3\u7801\u4f60\u5c31\u61c2\u4e86\uff09\uff0cp[I]\u7528\u6765\u5b58\u8d28\u6570*/\nint k=0;\nvoid prime(int n)  /*\u6c42\u51fa1~n\u5185\u6240\u6709\u7684\u8d28\u6570*/\n{\n\tc[0]=c[1]=1;//\u662f\u8d28\u6570\u5c31\u4e3a0\uff0c\u4e0d\u662f\u5c31\u5b58\u4e0a\u5176\u4ed6\u6570\uff082\u4ee5\u540e\u7684\u975e\u8d28\u6570\u4e0d\u80fd\u4e71\u5b58\uff09\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tif(!c[i])//\u5224\u65ad\u5f53\u524d\u7684\u6570\u662f\u5426\u4e3a\u8d28\u6570\n\t\t{\n\t\t\tp[++k]=i;//\u5b58\u8d28\u6570\n\t\t\tfor(int j=1;j<=k&&i*p[j]<=n;j++)//\u5224\u65ad\u662f\u5426\u8d85\u754c\n\t\t\t   c[i*p[j]]=j;//\u5c06\u8d28\u6570\u7684\u500d\u6570\u6392\u9664\u5e76\u505a\u4e0a\u6807\u8bb0\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=1;j<=c[i]&&i*p[j]<=n;j++)\n\t\t\tc[i*p[j]]=j;//\u5c06\u975e\u8d28\u6570\u7684\u500d\u6570\u518d\u6392\u9664\n\t\t}\n\t}\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    \n    prime(n);\n    \n    int m;\n    \n    m=n;\n    \n    for(int i=1;i<=k;i++)//\u56e0\u4e3a\u8981\u8f93\u51fa\u8981\u524d2\u9879\u6700\u5c0f\uff0c\u6240\u4ee5\u76f4\u63a5\u4ece\u6700\u5c0f\u7684\u5f00\u59cb\u7b97\n    \n    {   m-=p[i];//\u51cf\u53bb\u6700\u5c0f\u7684\u7b2c\u4e00\u9879\n    \n    \tfor(int j=i;j<=k&&m>0;j++)\n        \n    \t{\t\n        m-=p[j];//\u51cf\u53bb\u6700\u5c0f\u7684\u7b2c\u4e8c\u9879\u9879\n\t\t\tif(!c[m]&&m>0)//\u76f4\u63a5\u7528c[I]\u5224\u65ad\u662f\u5426\u4e3a\u8d28\u6570,\u6ce8\u610f\u8981\u5224\u65adm\u662f\u5426\u4e3a\u6b63\u6570\n            { \n            cout<<p[i]<<\" \"<<p[j]<<\" \"<<m; return 0;//\u7b26\u5408\u7b54\u6848\uff0c\u76f4\u63a5\u8f93\u51fa\u4e0e\u7ed3\u675f\n            }\n\t\tm+=p[j];//\u51cf\u6389\u7684\u8981\u8865\u56de\u6765\n\t\t}\n\tm+=p[i];//\u51cf\u6389\u7684\u8981\u8865\u56de\u6765\n\t}\n    return 0;\n}\n```",
        "postTime": 1520416585,
        "uid": 40865,
        "name": "\u6851\u68cb\u5b97",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u5176\u5b9e\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u5728\u5224\u65ad\u8d28\u6570\u65f6\u8981\u6392\u9664\u5c0f\u4e8e2\u7684\u6570\uff0c\u6069\uff0c\u4e0a\u4ee3\u7801\u2014\u2014\u2014\u2014\n\n```cpp\nprogram gdbh;\nvar\n  n,i,j:longint;\nfunction check(temp:longint):boolean;\nvar\n  xx:longint;\nbegin\n  if temp<2 then exit(false);\n  for xx:= 2 to trunc(sqrt(temp)) do\n    if temp mod xx=0 then exit(false);\n  exit(true);\nend;\nbegin\n  readln(n);\n  for i:= 2 to n-1 do\n    if check(i) then \n      for j:= 2 to n-i do\n        if (check(j)) and (check(n-i-j)) then begin\n                                                 writeln(i,' ',j,' ',n-i-j);\n                                                 halt;\n                                              end;\nend.\n```",
        "postTime": 1471163665,
        "uid": 19015,
        "name": "bobble",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "```cpp\n\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<string>\n#include<cmath>\nusing namespace std;\nbool ss(int i)//\u5224\u65ad\u7d20\u6570 \n{\n    int x=2;\n    while(x<=floor(sqrt(i))&&i%x!=0)\n        x++;\n    if(x>sqrt(i))\n        return 1;\n    return 0;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=2;i<=n-4;i++)//\u679a\u4e3e \n        if(ss(i))//\u82e5\u4e0d\u4e3a\u7d20\u6570\uff0c\u5219\u7ee7\u7eed\u5bfb\u627e \n            for(int j=i;i+j<=n-2;j++)//\u4fdd\u8bc1n-i-j>=2 \n                if(ss(j))\n                    if(ss(n-j-i))\n                        {\n                            printf(\"%d %d %d\\n\",i,j,n-j-i);//\u8f93\u51fa \n                            return 0;\n                        }\n    return 0;\n}\n\n```",
        "postTime": 1458278271,
        "uid": 12070,
        "name": "Lynx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u6709\u6bd2\u7684\u9898\u76ee\uff0c\u672c\u6765\u4ee5\u4e3a\u8981\u7528\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u666e\u901a\u7248\uff09\u7684\u65b9\u6cd5\u6765\u6539\u8fdb\uff0c\u7ed3\u679c\u505a\u4e0d\u51fa\u6765\uff0c\u540e\u6765\u770b\u4e86\u9898\u89e3\u8bf4\u7206\u641c\u5c31ac\u4e86\uff0c\u6c34\u4f53\uff0c\u4f46\u6ce8\u610f\u522b\u7528for\u5faa\u73af\uff0c\u4f1a\u8d85\u65f6\u4e00\u4e2a\u70b9\uff08pascal\uff09\n\n```delphi\nprogram ffsadfsdfds;  \nvar i2,j2,k2,i1,j1,k1,n:longint;  \n    function prime(x:longint):boolean;  \n    var i,j,k,l:longint;  \n    begin  \n    prime:=true;  \n    if x=1 then prime:=false  \n      else if x=2 then prime:=true  \n        else begin  \n             i:=2;  \n             while (i<=round(sqrt(x))) and (x mod i<>0) do i:=i+1;  \n             if i<=round(sqrt(x)) then prime:=false;  \n             end;  \n    end;  \n  \n    procedure dayin(i,j,k:longint);  \n    begin  \n   // writeln(i,j,k);  \n    if (i<=j) and (i<=k) then begin write(i,' '); if k<=j then write(k,' ',j) else write(j,' ',k); exit;end;  \n    if (j<=k) and (j<=i) then begin write(j,' '); if k<=i then write(k,' ',i) else write(i,' ',k);exit;end;  \n    if (k<=j) and (k<=i) then begin write(k,' '); if i<=j then write(i,' ',j) else write(j,' ',i);exit;end;  \n    end;  \n  \nbegin  \nreadln(n);  \ni1:=2;  \nj1:=2;  \nk1:=2;  \nwhile i1<=n do  \n begin j1:=1;  \n  while j1<=n do  \n   begin k1:=1;  \n    while k1<=n do  \n     begin  \n        if (i1+k1+j1=n) and (prime(i1)=true) and (prime(j1)=true) and (prime(k1)=true) then begin dayin(i1,j1,k1);      halt; end;  \n  \n         if k2<>100 then begin k2:=100; k1:=k1+1;end else k1:=k1+2 ;  \n     end;  \n     if j2<>100 then begin j2:=100; j1:=j1+1;end else j1:=j1+2 ;  \n    end;  \n   if i2<>100 then begin i2:=100; i1:=i1+1;end else i1:=i1+2 ;  \n   end;  \n  end.  \n  \n  \n  \n  \nend.  \n```",
        "postTime": 1457187984,
        "uid": 14904,
        "name": "smzzl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "```cpp\nvar n,i,j,s,k,f:longint;\n    a,b:array[0..20006] of longint;\nbegin\n  readln(n);\n  for i:=1 to n do a[i]:=1;//\u8bb0\u5f97\u4e00\u5b9a\u6e05\n  a[1]:=0;//\u8bb0\u5f97\u4e00\u5b9a\u6e05\n  for i:=2 to trunc(sqrt(n)) do//\u6c42\u7d20\u6570\n    if a[i]=1 then\n      for j:=2 to n div i do\n        a[i*j]:=0;\n  s:=0;\n  for i:=2 to n do\n    if a[i]=1 then\n      begin\n        inc(s);\n        b[s]:=i;\n      end;\n  f:=0;\n  for i:=1 to s do\n    begin\n      for j:=1 to s do\n        begin\n          for k:=s downto 1 do//AC\u7684\u4e0d\u4f1a\u8d85\n            if b[i]+b[j]+b[k]=n then\n              begin\n                writeln(b[i],' ',b[j],' ',b[k]);\n                f:=1;\n                break;\n              end;\n          if f=1 then break;\n        end;\n      if f=1 then break;\n    end;\nend.\n```",
        "postTime": 1456664982,
        "uid": 10592,
        "name": "LXHLXH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "```cpp\n#include<stdio.h>\n#include<string.h>\n#include<iostream>\nusing namespace std;\n#define N 40000\n#define QN 200\nint a[N];\nint prime[N];\nint main()\n{\n    int n;\n    cin>>n;\n    memset(a,0,sizeof(a));\n    for(int i=2; i<QN; i++)//\u6253\u7d20\u6570\u8868\n        if(!a[i])\n        {\n            for(int j=i*i; j<N; j+=i)a[j]=1;\n        }\n    int ans=0;\n    for(int i=2; i<N; i++)\n        if(!a[i])prime[ans++]=i;//\u53d6\u51fa\u6240\u6709\u7d20\u6570\u653e\u8fdb\u6570\u7ec4\n    for(int i=0; i<ans; i++)\n        for(int j=0; j<ans; j++)\n            for(int k=0; k<ans; k++)\n            {\n                if(prime[i]+prime[j]+prime[k]==n)//\u679a\u4e3e\u6240\u6709\u60c5\u51b5\n                {\n                    cout<<prime[i]<<\" \"<<prime[j]<<\" \"<<prime[k]<<endl;\n                    return 0;\n                }\n            }\n}\n\n```",
        "postTime": 1452427631,
        "uid": 13599,
        "name": "wuliang1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\n\n\n```cpp\nprogram gdbhcx(input,output);\nlabel 1;\nvar\na,b,i,j,k,t1,t2,t3:longint;\nfunction zs(n:integer):boolean;        //\u5224\u65ad\u7d20\u6570\nvar\ni,t:longint;\nbegin\nt:=0;\nfor i:=2 to n-1 do\nif n mod i=0 then inc(t);\nif t=0 then zs:=true\n       else zs:=false;\nend;\nbegin\nt1:=100000;\nt2:=100000;\nt3:=100000;\nreadln(a);\nfor i:=2 to a div 3 do\n  for j:=2 to a div 3 do\n    for k:=2 to a-4 do      //\u653e\u5fc3\uff0c\u4e0d\u4f1a\u8d85\u65f6\n    if (i+j+k=a) and (zs(i)=true) and (zs(j)=true) and (zs(k)=true) then if i<t1 then if j<t2 then begin t1:=i; t2:=j; t3:=k; writeln(i,' ',j,' ',k); end\n                                                                                              else goto 1\n                                                                                 else goto 1;\n1:end.\n```\n\u6211\u7684\u601d\u8def\u597d\u50cf\u548c\u4e0a\u9762\u51e0\u4f4d\u5927\u795e\u7684\u4e0d\u4e00\u6837\uff0c\u53cd\u6b63AC\u4e86",
        "postTime": 1444656886,
        "uid": 7316,
        "name": "ZYR_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e3b\u8981\u8003\u9a8c\u679a\u4e3e\u548c\u5224\u8d28\u6570\uff0c\u5173\u952e\u662f\u8981\u4f1a\u6709\u65b9\u6cd5\u5f97\u679a\u4e3e\uff0c\u5730\u6bef\u5f0f\u641c\u7d22\u53ef\u80fd\u8d85\u65f6\u3002\n\n```cpp\n#include<stdio.h>\n#include<math.h>\\\u5f00math\u5e93\uff0c\u56e0\u4e3a\u7528\u4e86sqrt(\u5f00\u65b9)\nint main(){\n    int n,k,i,j;\n    bool c[20010];\n    scanf(\"%d\",&n);\n    for (i=2;i<=int (sqrt(n));i++)\n        if (!c[i])\n            for (j=i*i;j<=n;j=j+i)\n                c[j]=1;\\\u7ed9\u6240\u6709\u8d28\u6570\u8d4b\u503c\u4e3a1\n    for (i=2;;i++)\\\u5728\u5faa\u73af\u5185\u90e8\u7ec8\u6b62\uff0c\u6240\u6709\u4e0d\u8bbe\u7ec8\u6b62\u6761\u4ef6\n        {\n        k=n;\\\u4ee5\u514d\u6539\u53d8n\n        if (!c[i])\\i\u4e0d\u662f\u8d28\u6570\u5c31\u7ee7\u7eed\u5faa\u73af\n           {\n            k=k-i;\n            for (j=2;j<=k-2;j++)\n                if (!(c[j]||c[k-j]))\n                    {\n                    printf(\"%d %d %d\",i,j,k-j);\n                    goto n;\\\u90fd\u662f\u8d28\u6570\u5c31\u8df3\u51fa\u5faa\u73af\n                }\n        }\n    }\n    n:;\n    return 0;\n}\n```",
        "postTime": 1441634321,
        "uid": 9008,
        "name": "eagadsgbsadfhb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76f8\u5f53\u6c34\uff0c\u53ef\u4ee5\u5148\u5c062~n-4\u4e4b\u95f4\u7684\u7d20\u6570\u5148\u7b97\u51fa\u6765\u3002\n\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nvector<int> dealCheck;\n\nvoid dealFindCheck(int in)\n{\n    for (int i = 2; i <= in - 4; i++) {\n        bool dealCheckTemp = false;\n        for (int j = 2; j <= i - 1; j++) {\n            if (i % j == 0) {\n                dealCheckTemp = true;\n                break;\n            }\n        }\n        if (dealCheckTemp == false) dealCheck.push_back(i);\n    }\n}\n\nint main()\n{\n    int inN = 0;\n    cin >> inN;\n    dealFindCheck(inN);\n    for (int i = 0; i <= dealCheck.size() - 1; i++) {\n        for (int j = 0; j <= dealCheck.size() - 1; j++) {\n            for (int k = 0; k <= dealCheck.size() - 1; k++) {\n                if ((dealCheck[i] + dealCheck[j] + dealCheck[k]) == inN) {\n                    cout << dealCheck[i] << ' ' << dealCheck[j] << ' ' << dealCheck[k] << endl;\n                    return 0;\n                }\n            }\n        }\n    }\n}\n```\uff08c/c++\uff09\n",
        "postTime": 1438938425,
        "uid": 7257,
        "name": "ZStarShadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u5b9e\u9645\u4e0a\u53ea\u8981\u679a\u4e3e\u5c31\u53ef\u4ee5\u8fc7\u6b64\u9898\uff0c\u4e0d\u8fc7\u65e0\u8bba\u662f\u5728\u65f6\u95f4\u8fd8\u662f\u7a7a\u95f4\u65b9\u9762\u4f30\u8ba1\u90fd\u4e0d\u7b97\u6700\u4f18\u3002\n\n```delphi\n\nvar a,n,b,c,gb:longint;\n    zhishu:array[1..2262] of longint;\n    shu:array[2..20000] of longint;\nprocedure sf;\nbegin\n for a:=2 to 20000 do\n   if shu[a]<>0 then\n     begin\n      zhishu[gb]:=shu[a];\n      inc(gb);\n      for b:=2 to 20000 div shu[a] do shu[shu[a]*b]:=0;\n     end\n   else continue;\n dec(gb);\nend;\nbegin\n readln(n);\n gb:=1;\n for a:=2 to 20000 do shu[a]:=a;\n sf;\n for a:=1 to 2262 do\n   for b:=a to 2262 do\n     for c:=b to 2262 do\n       if zhishu[a]+zhishu[b]+zhishu[c]=n then\n         begin\n          writeln(zhishu[a],' ',zhishu[b],' ',zhishu[c]);\n          exit;\n         end\n         else continue;\nend.\n\n```",
        "postTime": 1438776999,
        "uid": 7997,
        "name": "\u96f7\u7535\u97f3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u4e5f\u53ef\u4ee5\u5148\u7528\u6734\u7d20\u7684\u7b5b\u6cd5\u628a\u8d28\u6570/\u7d20\u6570\u7b5b\u51fa\u6765\u2026\u2026\n\n```cpp\n\n#include<iostream>\n#include<memory.h>\nusing namespace std;\nint n,i,j/*,pnum,p[2262]*/;\nbool f[20001];\nvoid shai()\n{\n    int k=1;\n    memset(f+2,true,sizeof(f)-2);\n    while(k<=n){\n        do k++;while(!f[k]);\n        for(j=k*2;j<=n;j+=k)f[j]=false;\n    }\n//    for(j=2;j<=n;j++)if(f[j])p[pnum++]=j;\n}\nint main()\n{\n    cin>>n;\n    shai();\n//    for(;i<pnum;i++)cout<<p[i]<<' ';\n    for(i=2;i<=n/3;i++)\n        for(j=i;j<=n/2;j++)\n            if(f[i]&&f[j]&&f[n-i-j]){cout<<i<<' '<<j<<' '<<n-i-j;return 0;}\n    \n    return 0;\n}\n\n```",
        "postTime": 1437321431,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5c31\u53ef\u4ee5\u4e86\u00b7\u00b7\u00b7\u00b7\u00b7\n\n```delphi\n\nprogram p1579;\nvar\n  i,j,n:longint;\nfunction prime(num:longint):boolean;\nvar\n  i:longint;\nbegin\n  if (num=1)or(num=0) then exit(false);\n  if num=2 then exit(true);\n  for i:=2 to trunc(sqrt(num)) do if num mod i=0 then exit(false);\n  exit(true);\nend;\nbegin\n  readln(n);\n  for i:=1 to n do\n    begin\n      if not prime(i) then continue;\n      for j:=i to n-i-1 do\n        begin\n          if not prime(j) then continue;\n          if prime(n-i-j) then\n            begin\n              writeln(i,' ',j,' ',n-i-j);\n              halt;\n            end;\n        end;\n    end;\nend.\n\n```",
        "postTime": 1429009379,
        "uid": 3258,
        "name": "Das_Reich",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u9996\u5148\u9700\u8981\u5148\u7528\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad\u8d28\u6570\n\n\u7136\u540e\u5728main\u51fd\u6570\u4e2d\u751f\u621020000\u4ee5\u5185\u7684\u6240\u6709\u8d28\u6570\uff08\u7528p[]\u4fdd\u5b58\uff0cp[0]\u53ef\u76f4\u63a5\u521d\u59cb\u5316\u4e3a2\uff09\n\n\u8f93\u5165\u540e\u5f00\u59cb\u5faa\u73af\uff0c\u67e5\u627e\u65b9\u6cd5\uff0c\u4e3a\u4e86\u786e\u4fdd\u8f93\u51fa\u65f6\u662f\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\uff0cif\u8bed\u53e5\u4e2d\u7684\u6761\u4ef6\u5982\u4ee3\u7801\u6240\u793a\n\n\u6700\u540e\u4e00\u5b9a\u8981\u6ce8\u610f\u4e24\u70b9\uff1a\n\n1.\u8f93\u51fa\u7684\u6700\u540e\u4e00\u4e2a\u8d28\u6570\u4e4b\u540e\u6ca1\u6709\u7a7a\u683c\n\n2.\u5207\u8bb0\u53ca\u65f6\u9000\u51fa\u5faa\u73af\uff0c\u5426\u5219\u53ef\u80fd\u8f93\u51fa\u591a\u7ec4\u7b54\u6848\n\n```cpp\n\n#include <iostream>\n#include <cmath> \nusing namespace std;\nbool prime(int x)\n{\n    bool b=true;\n    for(int i=2;i<=sqrt(x);i++)\n    {\n        if(x%i==0)\n            b=false;\n    }\n    return b;\n}\nint main()\n{\n    bool b=false;\n    int n;\n    long long p[30000];\n    int i,j=1;\n    p[0]=2;\n    for(int i=3;i<20000;i+=2)\n    {\n        if(prime(i)==true)\n        {\n            p[j]=i;\n            j++;\n        }\n    }\n    cin>>n;\n    for(int i=0;i<2263;i++)\n    {\n        for(int j=i;j<2263;j++)\n        {\n                if(prime(n-p[i]-p[j])==true&&(n-p[i]-p[j]>0)&&(p[i]<=p[j])&&(p[j]<=n-p[i]-p[j]))\n                {\n                    cout<<p[i]<<\" \"<<p[j]<<\" \"<<n-p[i]-p[j];\n                    b=true;\n                    break; \n            }\n        }\n        if(b==true)\n            break;\n    }\n}\n\n```",
        "postTime": 1427374493,
        "uid": 6201,
        "name": "herofox",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u4e09\u4e2a\u52a0\u6570\u5fc5\u987b\u662f\u8d28\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u679a\u4e3e2~n\u8303\u56f4\u5185\u7684\u8d28\u6570\uff0c\u8fd9\u4e9b\u6570\u90fd\u6709\u53ef\u80fd\u4f5c\u4e3a\u52a0\u6570\u3002\n\n\u5176\u6b21\uff0c\u679a\u4e3e\u524d\u4e24\u4e2a\u52a0\u6570\uff0c\u7b2c\u4e09\u4e2a\u52a0\u6570\u81ea\u7136\u4e5f\u5c31\u6c42\u51fa\u6765\u4e86\uff0c\u5224\u65ad\u5176\u662f\u5426\u8d28\u6570\uff0c\u5982\u679c\u662f\u5219\u6ee1\u8db3\u6761\u4ef6\uff0c\u8f93\u51fa\u89e3\u5e76\u9000\u51fa\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u6b64\u89e3\u6cd5\u4ec5\u9002\u7528\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u66f4\u5927\u8303\u56f4\u7684\u6570\u636e\u8fd8\u9700\u8981\u66f4\u4f18\u7b97\u6cd5\u6765\u5b9e\u73b0\uff01\n\n```delphi\n\nvar\n n,i,j:longint;\n a:array [0..20000] of longint;\n b:array [0..20000] of boolean;\n\nfunction prime(n:longint):boolean;//\u5224\u65ad\u8d28\u6570\nvar\n i:longint;\nbegin\n prime:=true;\n for i:=2 to trunc(sqrt(n)) do\n  if n mod i=0 then exit(false);\nend;\n\nbegin\n read(n);\n for i:=2 to n do\n  if prime(i) then\n   begin\n    inc(a[0]);\n    a[a[0]]:=i;\n    b[i]:=true;//\u6876\u6392\uff0c\u4f9b\u540e\u9762\u5224\u65ad\u7b2c\u4e09\u4e2a\u52a0\u6570\u662f\u5426\u8d28\u6570\u65f6\u7528\n   end;\n for i:=1 to a[0]-1 do//\u679a\u4e3e\n  for j:=1 to a[0] do\n   if (a[i]+a[j]<=n){\u5f53a[i]+a[j]>n\u65f6\u8be5\u65b9\u6848\u80af\u5b9a\u4e0d\u6210\u7acb} and (b[n-a[i]-a[j]]) then\n    begin\n     writeln(a[i],' ',a[j],' ',n-a[i]-a[j]);\n     halt;\n    end;\nend.\n\n```",
        "postTime": 1426899857,
        "uid": 2699,
        "name": "Ufowoqqqo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u5c0f\uff0c\u53ef\u4ee5\u7528\u666e\u901a\u7684\u7d20\u6570\u7b5b\uff0c\u7b5b\u51fa\u6240\u6709\u8303\u56f4\u5185\u7684\u7d20\u6570\uff0c\u7136\u540e\u6309\u5927\u5c0f\u679a\u4e3e\uff0c\u627e\u5230\u6b63\u786e\u89e3\u5373\u8f93\u51fa\uff0c\u7ed3\u675f\u7a0b\u5e8f\u5373\u53ef\u3002\n",
        "postTime": 1426442624,
        "uid": 5863,
        "name": "xvhuanlin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\n\n\n\n```cpp\nvar\ni,j,k,n:longint;\na:array[1..2300]of longint;\nl:array[1..3]of longint;\nprocedure zs;\nvar i,j:longint;f:boolean;\nbegin\nk:=1;a[1]:=2;\nfor i:=3 to 19999 do\nbegin\nf:=true;\nfor j:=1 to k do\nif i mod a[j]=0 then begin f:=false;break;end;\nif f then begin inc(k);a[k]:=i;end;\nend;\nend;\nprocedure search(t,sum:longint);\nvar i,j:longint;\nbegin\nif t>3 then begin\nif sum=0 then begin writeln(l[1],' ',l[2],' ',l[3]);halt;end;\nexit;end;\nfor i:=1 to k do\nif sum>=a[i] then begin\nsum:=sum-a[i];l[t]:=a[i];\nsearch(t+1,sum);\nsum:=sum+a[i];\nend;\nend;\nbegin\nzs;\nreadln(n);\nsearch(1,n);\nend.\n\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u4e09\u4e2a\u6570\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u4e3a\u8d28\u6570\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n```",
        "postTime": 1423828220,
        "uid": 5680,
        "name": "\u4e0a\u8fdb\u7684z\u541b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u6211\u505a\u8fd9\u4e2a\u9898\u6709\u4e09\u6b21\uff1a\n\n\u7b2c\u4e00\u6b21\uff0c\u66b4\u529b\u679a\u4e3e\n\n\u628a1~10000\u7684\u8d28\u6570\u4ece\u7f51\u4e0a\u62a0\u4e0b\u6765\uff0c\u518d\u7528\u6309\u952e\u7cbe\u7075\u6572',',\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint i,n;\n\tint a[10001]={0,2,3,5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,367 ,373 ,379 ,383 ,389 ,397 ,401 ,409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521 ,523 ,541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643 ,647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757 ,761,769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839 ,853, 857, 859, 863, 877, 881, 883 ,887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477, 2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593, 2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699, 2707, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797, 2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897, 2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999, 3001, 3011, 3019, 3023, 3037, 3041, 3049, 3061, 3067, 3079, 3083, 3089, 3109, 3119, 3121, 3137, 3163, 3167, 3169, 3181, 3187, 3191, 3203, 3209, 3217, 3221, 3229, 3251, 3253, 3257, 3259, 3271, 3299, 3301, 3307, 3313, 3319, 3323, 3329, 3331, 3343, 3347, 3359, 3361, 3371, 3373, 3389, 3391, 3407, 3413, 3433, 3449, 3457, 3461, 3463, 3467, 3469, 3491, 3499, 3511, 3517, 3527, 3529, 3533, 3539, 3541, 3547, 3557, 3559, 3571, 3581, 3583, 3593, 3607, 3613, 3617, 3623, 3631, 3637, 3643, 3659, 3671, 3673, 3677, 3691, 3697, 3701, 3709, 3719, 3727, 3733, 3739, 3761, 3767, 3769, 3779, 3793, 3797, 3803, 3821, 3823, 3833, 3847, 3851, 3853, 3863, 3877, 3881, 3889, 3907, 3911, 3917, 3919, 3923, 3929, 3931, 3943, 3947, 3967, 3989, 4001, 4003, 4007, 4013, 4019, 4021, 4027, 4049, 4051, 4057, 4073, 4079, 4091, 4093, 4099, 4111, 4127, 4129, 4133, 4139, 4153, 4157, 4159, 4177, 4201, 4211, 4217, 4219, 4229, 4231, 4241, 4243, 4253, 4259, 4261, 4271, 4273, 4283, 4289, 4297, 4327, 4337, 4339, 4349, 4357, 4363, 4373, 4391, 4397, 4409, 4421, 4423, 4441, 4447, 4451, 4457, 4463, 4481, 4483, 4493, 4507, 4513, 4517, 4519, 4523, 4547, 4549, 4561, 4567, 4583, 4591, 4597, 4603, 4621, 4637, 4639, 4643, 4649, 4651, 4657, 4663, 4673, 4679, 4691, 4703, 4721, 4723, 4729, 4733, 4751, 4759, 4783, 4787, 4789, 4793, 4799, 4801, 4813, 4817, 4831, 4861, 4871, 4877, 4889, 4903, 4909, 4919, 4931, 4933, 4937, 4943, 4951, 4957, 4967, 4969, 4973, 4987, 4993, 4999, 5003, 5009, 5011, 5021, 5023, 5039, 5051, 5059, 5077, 5081, 5087, 5099, 5101, 5107, 5113, 5119, 5147, 5153, 5167, 5171, 5179, 5189, 5197, 5209, 5227, 5231, 5233, 5237, 5261, 5273, 5279, 5281, 5297, 5303, 5309, 5323, 5333, 5347, 5351, 5381, 5387, 5393, 5399, 5407, 5413, 5417, 5419, 5431, 5437, 5441, 5443, 5449, 5471, 5477, 5479, 5483, 5501, 5503, 5507, 5519, 5521, 5527, 5531, 5557, 5563, 5569, 5573, 5581, 5591, 5623, 5639, 5641, 5647, 5651, 5653, 5657, 5659, 5669, 5683, 5689, 5693, 5701, 5711, 5717, 5737, 5741, 5743, 5749, 5779, 5783, 5791, 5801, 5807, 5813, 5821, 5827, 5839, 5843, 5849, 5851, 5857, 5861, 5867, 5869, 5879, 5881, 5897, 5903, 5923, 5927, 5939, 5953, 5981, 5987, 6007, 6011, 6029, 6037, 6043, 6047, 6053, 6067, 6073, 6079, 6089, 6091, 6101, 6113, 6121, 6131, 6133, 6143, 6151, 6163, 6173, 6197, 6199, 6203, 6211, 6217, 6221, 6229, 6247, 6257, 6263, 6269, 6271, 6277, 6287, 6299, 6301, 6311, 6317, 6323, 6329, 6337, 6343, 6353, 6359, 6361, 6367, 6373, 6379, 6389, 6397, 6421, 6427, 6449, 6451, 6469, 6473, 6481, 6491, 6521, 6529, 6547, 6551, 6553, 6563, 6569, 6571, 6577, 6581, 6599, 6607, 6619, 6637, 6653, 6659, 6661, 6673, 6679, 6689, 6691, 6701, 6703, 6709, 6719, 6733, 6737, 6761, 6763, 6779, 6781, 6791, 6793, 6803, 6823, 6827, 6829, 6833, 6841, 6857, 6863, 6869, 6871, 6883, 6899, 6907, 6911, 6917, 6947, 6949, 6959, 6961, 6967, 6971, 6977, 6983, 6991, 6997, 7001, 7013, 7019, 7027, 7039, 7043, 7057, 7069, 7079, 7103, 7109, 7121, 7127, 7129, 7151, 7159, 7177, 7187, 7193, 7207, 7211, 7213, 7219, 7229, 7237, 7243, 7247, 7253, 7283, 7297, 7307, 7309, 7321, 7331, 7333, 7349, 7351, 7369, 7393, 7411, 7417, 7433, 7451, 7457, 7459, 7477, 7481, 7487, 7489, 7499, 7507, 7517, 7523, 7529, 7537, 7541, 7547, 7549, 7559, 7561, 7573, 7577, 7583, 7589, 7591, 7603, 7607, 7621, 7639, 7643, 7649, 7669, 7673, 7681, 7687, 7691, 7699, 7703, 7717, 7723, 7727, 7741, 7753, 7757, 7759, 7789, 7793, 7817, 7823, 7829, 7841, 7853, 7867, 7873, 7877, 7879, 7883, 7901, 7907, 7919, 7927, 7933, 7937, 7949, 7951, 7963, 7993, 8009, 8011, 8017, 8039, 8053, 8059, 8069, 8081, 8087, 8089, 8093, 8101, 8111, 8117, 8123, 8147, 8161, 8167, 8171, 8179, 8191, 8209, 8219, 8221, 8231, 8233, 8237, 8243, 8263, 8269, 8273, 8287, 8291, 8293, 8297, 8311, 8317, 8329, 8353, 8363, 8369, 8377, 8387, 8389, 8419, 8423, 8429, 8431, 8443, 8447, 8461, 8467, 8501, 8513, 8521, 8527, 8537, 8539, 8543, 8563, 8573, 8581, 8597, 8599, 8609, 8623, 8627, 8629, 8641, 8647, 8663, 8669, 8677, 8681, 8689, 8693, 8699, 8707, 8713, 8719, 8731, 8737, 8741, 8747, 8753, 8761, 8779, 8783, 8803, 8807, 8819, 8821, 8831, 8837, 8839, 8849, 8861, 8863, 8867, 8887, 8893, 8923, 8929, 8933, 8941, 8951, 8963, 8969, 8971, 8999, 9001, 9007, 9011, 9013, 9029, 9041, 9043, 9049, 9059, 9067, 9091, 9103, 9109, 9127, 9133, 9137, 9151, 9157, 9161, 9173, 9181, 9187, 9199, 9203, 9209, 9221, 9227, 9239, 9241, 9257, 9277, 9281, 9283, 9293, 9311, 9319, 9323, 9337, 9341, 9343, 9349, 9371, 9377, 9391, 9397, 9403, 9413, 9419, 9421, 9431, 9433, 9437, 9439, 9461, 9463, 9467, 9473, 9479, 9491, 9497, 9511, 9521, 9533, 9539, 9547, 9551, 9587, 9601, 9613, 9619, 9623, 9629, 9631, 9643, 9649, 9661, 9677, 9679, 9689, 9697, 9719, 9721, 9733, 9739, 9743, 9749, 9767, 9769, 9781, 9787, 9791, 9803, 9811, 9817, 9829, 9833, 9839, 9851, 9857, 9859, 9871, 9883, 9887, 9901, 9907, 9923, 9929, 9931, 9941, 9949, 9967, 9973};//\u66b4\u529b\u4e0d\uff01\uff01\uff01\n\tcin>>n;\n\tint j,k,l;\n\tfor(j=1;j<=n;j++)\n\t{\n\t\tfor(k=1;k<=n;k++)\n\t\t{\n\t\t\tfor(l=1;l<=n;l++)\n\t\t\t{\n\t\t\t\tif(a[j]+a[k]+a[l]==n)\n\t\t\t\t{\n\t\t\t\t\tcout<<a[j]<<\" \"<<a[k]<<\" \"<<a[l];\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u7ed3\u679cwa\u3002\n\n\u7b2c\u4e8c\u6b21\uff0c\n\u7565\u6709\u6539\u8fdb\uff0c\u628a\u7d20\u6570\u90fd\u6253\u5230\u4e00\u4e2a\u6570\u7ec4\u79bb\u53bb\uff1b\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n\nusing namespace std;\nint i,j,k,l;\nbool ok(int x)\n{\n    for (int i=2;i<=sqrt(x);i++)\n        if (x%i==0)\n            return false;\n    return true;\n}\nint main()\n{\n\tint a[10001],sum=1,n;\n    cin>>n;\n    for(i=2;i<=10000;i++)//\u6253\u8fdb\u6570\u7ec4\n    {\n    \tif(ok(i)==true)\n    \t{\n    \t\ta[sum]=i;\n    \t\tsum++;\n\t\t}\n\t}\n\tfor(j=1;j<=n;j++)\n\t{\n\t\tfor(k=1;k<=n;k++)\n\t\t{\n\t\t\tfor(l=1;l<=n;l++)\n\t\t\t{\n\t\t\t\tif(a[j]+a[k]+a[l]==n)\n\t\t\t\t{\n\t\t\t\t\tcout<<a[j]<<\" \"<<a[k]<<\" \"<<a[l];\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\u6b64\u4e3a60\u5206\u4ee3\u7801\u3002\n\n\u7b2c\u4e09\u6b21\uff0c\n\u7ee7\u7eed\u5b8c\u5584\uff0c\u4e0d\u7528\u6253\u5230\u6570\u7ec4\u79bb\u53bb\uff0c\u76f4\u63a5\u5224\u65ad\uff0c\u53bb\u6389'k'\u7684\u5faa\u73af\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a,i,j,k;\nbool ok(int x)\n{\n    for (int i=2;i<=sqrt(x);i++)\n        if (x%i==0)\n            return false;\n    return true;\n}\nint main()\n{\n    cin>>a;\n    for(i=2;i<=a-4;i++)\n        for(j=2;j<=a-4;j++)\n        {\n            k=a-i-j;//\u5f97\u5230k\n            if(ok(i)&&ok(j)&&ok(k)) //\u5224\u65adi,j,k\u662f\u5426\u4e3a\u7d20\u6570\n            {\n                cout<<i<<' '<<j<<' '<<k;\n                return 0;\n            }\n        }\n}\n```\n\u6700\u540e 100\u5206\u4e86\uff01\uff01\uff01\uff01\n\n\u4ec5\u4f9b\u53c2\u8003\uff0c\u7981\u6b62\u6284\u88ad\uff01\uff01\uff01\uff01\uff01\uff01",
        "postTime": 1533977165,
        "uid": 103959,
        "name": "chenjianye",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u5176\u5b9e\u672c\u9898\u8fd8\u662f\u5341\u5206\u7b80\u5355\u7684\uff0c\u53ea\u8981\u5728\u539f\u6709\u57fa\u7840\u4e0a\u518d\u52a0\u4e00\u70b9\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u6b64\u76f4\u63a5\u7ed9\u51fa\u7a0b\u5e8f\uff0c\u601d\u8def\u4e5f\u5728\u7a0b\u5e8f\u4e2d\u7ed9\u51fa\u3002\n\n```delphi\nvar\n  i,n:longint;\nfunction prime(x:longint):boolean;\nvar i:longint;\nbegin\n  for i:=2 to trunc(sqrt(x)) do//\u5230\u5e73\u65b9\u6839\u5c31\u8db3\u77e3\u4e86\n    if x mod i=0 then exit(false);\n  exit(true);\nend;//\u5224\u65ad\u662f\u5426\u662f\u8d28\u6570\nbegin\n  read(n);\n  if prime(n-4) then//\u9996\u5148\u5224\u65ad\u5b83-4\u662f\u5426\u662f\u8d28\u6570\n    begin write(2,' ',2,' ',n-4); halt; end;\n  write(3,' ');//\u5426\u5219\u4e00\u5b9a\u662f\u4e09\u5f00\u5934\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5076\u6570\u4e00\u5b9a\u80fd\u62c6\u5206\u4e3a\u4e24\u4e2a\u8d28\u6570\n  n:=n-3;//\u51cf\u53bb\u4e09\u518d\u505a\u54e5\u5fb7\u5df4\u8d6b\n  for i:=3 to n shr 1 do\n    if prime(i) and prime(n-i) then\n      begin writeln(i,' ',n-i); break; end;//\u54e5\u5fb7\u5df4\u8d6b\uff0c\u4e0d\u591a\u89e3\u91ca\nend.[cedep/]\n",
        "postTime": 1383189425,
        "uid": 734,
        "name": "lych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1579 \u3010\u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3\uff08\u5347\u7ea7\u7248\uff09\u3011"
    }
]