[
    {
        "content": "\u6211\u4eec\u5145\u5206\u53d1\u626c\u4eba\u7c7b\u667a\u6167\uff1a\n\n\u5c06\u6240\u6709\u70b9\u5168\u90e8\u7ed5\u539f\u70b9\u65cb\u8f6c\u540c\u4e00\u4e2a\u89d2\u5ea6\uff0c\u7136\u540e\u6309$x$\u5750\u6807\u6392\u5e8f\n\n\u6839\u636e\u6570\u5b66\u76f4\u89c9\uff0c\u5728\u968f\u673a\u65cb\u8f6c\u540e\uff0c\u7b54\u6848\u4e2d\u7684\u4e24\u4e2a\u70b9\u5728\u6570\u7ec4\u4e2d\u80af\u5b9a\u4e0d\u4f1a\u79bb\u5f97\u592a\u8fdc\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u53d6\u6bcf\u4e2a\u70b9\u5411\u540e\u76845\u4e2a\u70b9\u6765\u8ba1\u7b97\u7b54\u6848\n\n\u8fd9\u6837\u901f\u5ea6\u5feb\u5f97\u98de\u8d77\uff0c\u5728$n=1000000$\u65f6\u90fd\u53ef\u4ee5\u57281s\u5185\u5361\u8fc7\n",
        "postTime": 1474966919,
        "uid": 12655,
        "name": "3A17K",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "**UPD\uff1a\u8c22\u8c22\u5927\u5bb6\u5bf9\u4e4b\u524d\u9898\u89e3\u7684\u652f\u6301\uff0c\u8fd9\u91cc\u6211\u91cd\u65b0\u66f4\u6362\u4e00\u4e0b\u4ee5\u524d\u96be\u770b\u7684\u56fe\u7247\uff0c\u540c\u65f6\u8865\u8865\u9505\uff0c\u56de\u7b54\u4e00\u4e0b\u7591\u70b9\u3002**\r\n\r\n**UPD2\uff1a\u6839\u636e\u65b0\u7684\u9898\u89e3\u89c4\u8303\u4fee\u6539\u4e86\u6587\u7ae0\u3002\u53e6\u5916\u5927\u5bb6\u559c\u6b22\u7684\u8bdd\u4e0d\u59a8\u70b9\u70b9\u8d5e\u652f\u6301\u652f\u6301\u3002**\r\n\r\n**UPD3\uff1a\u5e94\u8bc4\u8bba\u8981\u6c42\u8865\u5145\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\u3002\u53e6\u5916\u53d1\u73b0\u9898\u89e3\u7684\u56fe\u7247\u4e2d $\\rm P_9$ \u548c $\\rm P_{10}$ \u5168\u90e8\u6807\u53cd\u4e86\uff0c\u4f46\u56e0\u4e3a\u4e0d\u5f71\u54cd\u7b97\u6cd5\u7406\u89e3\uff0c\u4e14\u539f\u56fe\u6e90\u4e22\u5931\uff0c\u6682\u65f6\u8bf7\u5927\u5bb6\u9605\u8bfb\u65f6\u81ea\u884c\u5bf9\u6362\u8fc7\u6765\u3002**\r\n\r\n----\r\n\r\n\u9996\u5148\u611f\u8c22\uff1a\r\n\r\n* @[plane](https://www.luogu.org/space/show?uid=277) \u548c\u4ed6\u7684[\u9898\u89e3](https://www.luogu.org/blog/user277/solution-p1429)\uff1b\r\n* @[frankchenfu](https://www.luogu.org/space/show?uid=23398) \u548c\u4ed6\u7684[\u9898\u89e3](https://www.luogu.org/blog/frankchenfu/solution-p1429)\u3002\r\n\r\n\u4e0b\u9762\u6211\u8d34\u4e0a @[frankchenfu](https://www.luogu.org/space/show?uid=23398) \u7684\u4ee3\u7801\uff0c\u6211\u5c06\u7ed9\u51fa\u56fe\u793a\u6a21\u62df\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u770b\u4e0d\u61c2\u7684\u540c\u5b66\u7406\u89e3\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <cmath>\r\nusing namespace std;\r\nconst int maxn = 1000001;\r\nconst int INF = 2 << 20;\r\nint n, temp[maxn];\r\nstruct Point \r\n{\r\n    double x, y;\r\n} S[maxn];\r\nbool cmp(const Point &a, const Point &b) \r\n{\r\n    if(a.x == b.x) return a.y < b.y;\r\n    else return a.x < b.x;\r\n}\r\nbool cmps(const int &a, const int &b) { return S[a].y < S[b].y; }\r\ndouble min(double a, double b) { return a < b ? a : b; }\r\ndouble dist(int i, int j) \r\n{\r\n    double x = (S[i].x - S[j].x) * (S[i].x - S[j].x);\r\n    double y = (S[i].y - S[j].y) * (S[i].y - S[j].y);\r\n    return sqrt(x + y);\r\n}\r\ndouble merge(int left, int right) \r\n{\r\n    double d = INF;\r\n    if(left == right) return d;\r\n    if(left + 1 == right) return dist(left, right);\r\n    int mid = left + right >> 1;\r\n    double d1 = merge(left, mid);\r\n    double d2 = merge(mid + 1, right);\r\n    d = min(d1, d2);\r\n    int i, j, k = 0;\r\n    for(i = left; i <= right; i++)\r\n        if(fabs(S[mid].x - S[i].x) < d) // \u8fd9\u91cc\u4e0d\u592a\u4e00\u6837\r\n            temp[k++] = i;\r\n    sort(temp, temp + k, cmps);\r\n    for(i = 0; i < k; i++)\r\n        for(j = i + 1; j < k && S[temp[j]].y - S[temp[i]].y < d; j++) \r\n\t\t{\r\n            double d3 = dist(temp[i], temp[j]);\r\n            if(d > d3) d = d3;\r\n        }\r\n    return d;\r\n}\r\nint main() \r\n{\r\n    scanf(\"%d\", &n);\r\n    for(int i = 0; i < n; i++) scanf(\"%lf%lf\", &S[i].x, &S[i].y);\r\n    sort(S, S + n, cmp);\r\n    return !printf(\"%.4lf\\n\", merge(0, n - 1));\r\n}\r\n```\r\n\r\n\u4e00\u4e2a\u4e2a\u6765\u89e3\u91ca\u3002\r\n\r\n\u6bd4\u5982\u8bf4\u6211\u4eec\u62ff\u5230\u4e86\u8fd9\u6837\u4e00\u7ec4\u6837\u4f8b\uff1a\r\n\r\n> $\\textbf{InputData:}$  \r\n> ```plain\r\n> 10   \r\n> 1 1   \r\n> 1 5   \r\n> 3 1   \r\n> 5 1  \r\n> 5 6  \r\n> 6 7  \r\n> 7 3  \r\n> 8 1  \r\n> 10 3  \r\n> 9 9  \r\n> ```\r\n\r\n\u8fd9\u7ec4\u6837\u4f8b\u662f\u6392\u597d\u5e8f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u56fe\uff1a\r\n\r\n[](https://cdn.luogu.com.cn/upload/pic/61217.png)\r\n![image.png](https://i.loli.net/2019/12/20/3jrHFVlvaZUPsDI.png)\r\n\r\n\u4e0b\u9762\u6211\u4eec\u8981\u5f00\u59cb $\\mathrm{merge()}$\u4e86\u3002\uff08\u6ce8\u610f\u6211\u7684\u56fe\u4ece $1$ \u5f00\u59cb\u7f16\u53f7\uff0c\u7565\u6709\u4e0d\u540c\uff09\r\n\r\n$\\mathrm{merge}(\\textit{left},\\textit{right})$ \u662f\u8fd4\u56de\u7531\u7f16\u53f7 $\\textit{left}\\sim \\textit{right}$ \u7684\u70b9\u6784\u6210\u7684\u6700\u8fd1\u70b9\u5bf9\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5 $\\mathrm{merge}(1, n)$ \u5373\u4e3a\u7b54\u6848\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\uff0c\u6211\u4eec\u5047\u8bbe\u5b83\u5df2\u7ecf\u80fd\u8fd4\u56de\u4e00\u4e2a\u533a\u57df\u4e2d\u7684\u6700\u8fd1\u70b9\u5bf9\u4e86\u3002\r\n\r\n```cpp\r\n// \u9884\u5904\u7406\r\n    double d = INF;\r\n    if(left == right) return d;\r\n    if(left + 1 == right) return dist(left, right);\r\n```\r\n\u7136\u540e\u7b97\u51fa $mid$ \u5e76\u8fdb\u884c\u9012\u5f52\u3002\r\n\r\n[](https://cdn.luogu.com.cn/upload/pic/61219.png )\r\n![image.png](https://i.loli.net/2019/12/20/REruPGLKoTlj7nc.png)\r\n\r\n\u4e5f\u5c31\u662f\u6c42\u51fa $[\\text P_1\\sim \\text P_5]$ \u548c $[\\text P_6\\sim \\text P_{10}]$ \u4e2d\u7684\u6700\u8fd1\u70b9\u5bf9\u3002\r\n\r\n\u663e\u7136 $d_1=2$\uff08$\\text P_1$ \u4e0e $\\text P_3$ \u4e4b\u95f4\uff09\uff0c$d_2=\\sqrt{5}$\uff08$\\text P_7$ \u548c $\\text P_8$ \u4e4b\u95f4\uff09\u3002\r\n\r\n\u90a3\u4e48 $d = \\min(d_1,d_2)=2$\u3002\r\n\r\n```cpp\r\n// \u9012\u5f52\r\n    int mid = left + right >> 1;\r\n    double d1 = merge(left, mid);\r\n    double d2 = merge(mid + 1, right);\r\n    d = min(d1, d2);\r\n```\r\n\r\n[](https://cdn.luogu.com.cn/upload/pic/61221.png)\r\n![image.png](https://i.loli.net/2019/12/20/zlwsxXZT7RIuvQP.png)\r\n\r\n**\u524d\u65b9\u9ad8\u80fd**\r\n\r\n\u63a5\u4e0b\u6765\u5c31\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6838\u5fc3\uff0c\u5982\u4f55\u6c42\u51fa\u8de8\u8d8a\u84dd\u7ebf\u7684\u6700\u8fd1\u70b9\u5bf9\u4e86\u3002\r\n\r\n\u9996\u5148\u9501\u5b9a\u70b9\u96c6 $\\text{Temp}$\u3002\r\n```cpp\r\n// \u6c42\u51fatemp[]\u5e76\u6392\u5e8f\r\n    for(i = left; i <= right; i++)\r\n        if(fabs(S[mid].x - S[i].x) < d)\r\n            temp[k++] = i;\r\n    sort(temp, temp + k, cmps);\r\n```\r\n\r\n[](https://cdn.luogu.com.cn/upload/pic/61218.png)\r\n![image.png](https://i.loli.net/2019/12/20/XPskY3NgrcMBEW6.png)\r\n\r\n\u7531\u7a0b\u5e8f\u53ef\u77e5 $\\text{Temp}$ \u5305\u542b\u4e86\u79bb\u76f4\u7ebf\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $d$ \u7684\u6240\u6709\u70b9\u3002\r\n\r\n\u4e3a\u5565\u5176\u5b83\u70b9\u4e0d\u7528\u8003\u8651\u5462\uff1f\r\n\r\n**\u56e0\u4e3a\u5176\u5b83\u70b9\u79bb\u8be5\u7ebf\u7684\u8ddd\u79bb\u90fd\u5927\u4e8e\u7b49\u4e8e ${d}$ \u4e86\uff0c\u5c31\u66f4\u4e0d\u7528\u8bf4\u5230\u53e6\u4e00\u4fa7\u7684\u70b9\u7684\u8ddd\u79bb\u4e86\uff0c\u5fc5\u5b9a\u4e0d\u5982\u76f4\u63a5\u8fd4\u56de ${d}$ \u6765\u7684\u4f18**\u3002\r\n\r\n\u800c\u6309\u7167\u7eb5\u5750\u6807\u6392\u5e8f\u662f\u4e3a\u4e86\u540e\u9762\u7684\u65b9\u4fbf\u3002\r\n```cpp\r\n// \u6c42\u51fa\u6700\u8fd1\u70b9\u5bf9\uff08TLE\uff09\r\n    for(i = 0; i < k; i++)\r\n        for(j = i + 1; j < k; j++) \r\n\t\t{\r\n            double d3 = dist(temp[i], temp[j]);\r\n            if(d > d3) d = d3;\r\n        }\r\n```\r\n\u76f8\u4fe1\u8fd9\u6bb5\u4ee3\u7801\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\uff0c\u4f46\u662f\u5f88\u53ef\u60dc\uff0c\u5f00 `-O2` \u624d\u80fd\u8fc7\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\r\n\r\n\u4e0d\u96be\u53d1\u73b0\u6e90\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff1a\r\n\r\n```cpp\r\n// \u6c42\u51fa\u6700\u8fd1\u70b9\u5bf9\r\n    for(i = 0; i < k; i++)\r\n        for(j = i + 1; j < k && S[temp[j]].y - S[temp[i]].y < d; j++) \r\n\t\t{\r\n            double d3 = dist(temp[i], temp[j]);\r\n            if(d > d3) d = d3;\r\n        }\r\n```\r\n\r\n\u597d\u50cf\u591a\u4e86\u4e00\u4e2a `S[temp[j]].y - S[temp[i]].y < d`\uff0c\u5b83\u6709\u4ec0\u4e48\u7528\u5462\uff1f\r\n\r\n\u548c\u4e0a\u9762\u540c\u7406\uff0c**\u5982\u679c\u4e24\u8005\u7684\u7eb5\u5750\u6807\u4e4b\u5dee\u90fd\u5927\u4e8e\u7b49\u4e8e ${d}$ \u4e86\uff0c\u90a3\u518d\u8ba1\u7b97\u5c31\u6ca1\u6709\u4e1d\u6beb\u610f\u4e49\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u52a0\u4e0a\u6c34\u5e73\u8ddd\u79bb\u7684\u8bdd\uff0c\u5fc5\u5b9a\u4e0d\u5982\u76f4\u63a5\u8fd4\u56de ${d}$ \u6765\u7684\u4f18**\u3002\r\n\r\n\u4f8b\u5982 $\\text P_3$ \u53f7\u70b9\uff0c\u5b83\u53ea\u9700\u548c $\\text P_4$ \u5339\u914d\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u7eb5\u5750\u6807\u4e4b\u5dee\u4e3a $0$\uff0c\u6709\u53ef\u80fd\u4f1a\u5e26\u6765\u66f4\u597d\u7684\u7b54\u6848\uff0c\u800c\u5b83\u548c $\\text P_7$ \u5339\u914d\u5c31\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\uff0c\u56e0\u4e3a\u5373\u4fbf\u5b83\u4eec\u7684\u7eb5\u5750\u6807\u4e4b\u5dee\u7b49\u4e8e $d$\uff0c\u4f46\u5c31\u7b97 $\\text P_7$ \u5728 $\\text P_3$ \u7684\u6b63\u4e0a\u65b9\uff0c\u8ddd\u79bb\u4e5f**\u4e0d\u4f1a\u5c0f\u4e8e** $d$\u3002\r\n\r\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u6bd4\u5982 $\\text P_3$ \u548c $\\text P_4$ \u4f1a\u88ab\u91cd\u65b0\u8ba1\u7b97\uff0c\u4f46\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u6ca1\u6709\u5f71\u54cd\u3002\r\n\r\n[](https://cdn.luogu.com.cn/upload/pic/61220.png)\r\n![image.png](https://i.loli.net/2019/12/20/V4XayQD2Snmp8uP.png)\r\n\r\n\u81f3\u6b64\uff0c\u6211\u4eec\u6c42\u51fa\u4e86\u7ed3\u679c $ans = \\sqrt{2}$\uff08$\\text{P}_5$ \u548c $\\text P_6$ \u4e4b\u95f4\uff09\u3002\r\n\r\n\u6240\u4ee5\uff1a\r\n\r\n> $\\textbf{OutputData:}$ \r\n> ```plain\r\n> 1.4142\r\n> ```\r\n\r\n---\r\n\r\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53c8\u662f\u600e\u4e48\u6837\u7684\u5462\uff1f\uff08\u4e0d\u60f3\u770b\u5206\u6790\u7684\u53ef\u4ee5\u8df3\u8fc7\uff09\r\n\r\n![image.png](https://i.loli.net/2021/07/21/B8iSIFZ5zE4wCjn.png)\r\n\r\n\u8003\u8651\u5bf9\u4e8e\u5de6\u8fb9\u7684\u4e00\u4e2a\u70b9 $\\text{P}_i$\uff0c**\u53ef\u80fd\u548c\u5b83\u6210\u4e3a\u65b0\u7684\u6700\u8fd1\u516c\u5171\u70b9\u5bf9**\u7684\u70b9 $\\text{P}_j$ \u6709\u591a\u5c11\u4e2a\u3002\r\n\r\n```cpp\r\n// \u6c42\u51fa\u6700\u8fd1\u70b9\u5bf9\r\n    for(i = 0; i < k; i++)\r\n        for(j = i + 1; j < k && S[temp[j]].y - S[temp[i]].y < d; j++) \r\n\t\t{\r\n            double d3 = dist(temp[i], temp[j]);\r\n            if(d > d3) d = d3;\r\n        }\r\n```\r\n\r\n\u4e0d\u96be\u53d1\u73b0 $\\text{P}_j$ \u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\uff1a\r\n\r\n1. $\\text{P}_j$ \u4e0e $mid$ \u7ebf\u7684\u8ddd\u79bb\u5c0f\u4e8e $d$\u3002\r\n2. $\\text{P}_j$ \u7684\u7eb5\u5750\u6807\u6bd4 $P_i$ \u5927\uff08\u56e0\u4e3a\u5982\u679c $\\text{P}_j$ \u7684\u7eb5\u5750\u6807\u6bd4 $\\text{P}_i$ \u5c0f\uff0c\u5219\u8fd9\u4e2a\u72b6\u6001\u4f1a\u5728\u4e4b\u524d\u8003\u8651\u6709\u54ea\u4e9b\u70b9\u53ef\u80fd\u4e0e $\\text{P}_j$ \u5f62\u6210\u6700\u8fd1\u516c\u5171\u70b9\u5bf9\u7684\u65f6\u5019\u8003\u8651\u5230\uff0c\u6ca1\u5fc5\u8981\u91cd\u590d\u8003\u8651\uff0c\u867d\u7136\u771f\u7684\u8003\u8651\u7684\u8bdd\u4e5f\u5c31\u53ea\u662f $2$ \u500d\u5e38\u6570\uff09\u3002\r\n3. $\\text{P}_j$ \u548c $\\text{P}_i$ \u7684\u7eb5\u5750\u6807\u4e4b\u5dee\u5c0f\u4e8e $d$\u3002\r\n\r\n\u6839\u636e\u8fd9\u4e09\u6761\uff0c\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u4e00\u4e2a $d \\times 2d$ \u7684\u77e9\u5f62\uff0c\u5408\u6cd5\u7684 $\\text{P}_j$ \u4e00\u5b9a\u662f\u5728\u8fd9\u4e2a\u77e9\u5f62\u4e2d\u7684\uff08\u4e0d\u542b\u8fb9\u754c\uff09\u3002\r\n\r\n\u4f46\u662f\uff0c\u6211\u4eec\u53c8\u77e5\u9053\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u540c\u5728\u5de6\u4fa7\uff0c\u5219\u8ddd\u79bb $\\ge d$\uff1b\u5982\u679c\u4e24\u4e2a\u70b9\u540c\u5728\u53f3\u4fa7\uff0c\u5219\u8ddd\u79bb $\\ge d$\u3002\r\n\r\n\u90a3\u4e48\uff0c\u65e0\u8bba\u662f $mid$ \u5de6\u8fb9\u7684\u6b63\u65b9\u5f62\u8fd8\u662f\u53f3\u8fb9\u7684\u6b63\u65b9\u5f62\uff0c**\u6bcf\u4e2a\u91cc\u9762\u90fd\u81f3\u591a\u653e $3$ \u4e2a\u70b9\uff08\u5305\u62ec $\\text{P}_i$\uff09**\u3002\r\n\r\n\u56fe\u4e2d\u7ea2\u8272\u70b9\u5373\u4ee3\u8868 $\\text{P}_j$\uff0c\u5c55\u793a\u4e86\u4e00\u79cd\u65b9\u6848\uff0c\u5176\u4e2d\u6bcf\u6761\u865a\u7ebf\u8fb9\u7684\u957f\u5ea6\u90fd $\\ge d$\u3002\r\n\r\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a $\\text{P}_i$\uff0c\u68c0\u9a8c\u81f3\u591a\u5176\u4ed6 $5$ \u4e2a\u70b9\u5373\u53ef\uff0c\u6240\u4ee5\u6c42\u6700\u8fd1\u70b9\u5bf9\u7684\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\uff01\r\n\r\n\uff08\u5f53\u7136\u5176\u5b9e\u4e0e $\\text{P}_i$ \u540c\u4fa7\u7684 $\\text{P}_j$ \u662f\u4e0d\u53ef\u80fd\u5bf9\u66f4\u65b0\u7b54\u6848\u6709\u7528\u7684\uff0c\u5982\u679c\u4f60\u613f\u610f\u7684\u8bdd\uff0c\u68c0\u9a8c\u81f3\u591a $3$ \u4e2a\u70b9\u5373\u53ef\uff09\r\n\r\n\u4e8e\u662f\u6574\u4e2a\u4ee3\u7801\u7684\u74f6\u9888\u5c31\u5728 `sort` \u4e0a\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $T(n) = 2\\cdot T(\\frac n 2) + O(n \\log n) = O(n \\log^2 n)$\uff0c\u5f53\u7136\u5982\u679c\u4f7f\u7528**\u5f52\u5e76\u6392\u5e8f\u66ff\u6362 `sort`** \u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u4e25\u683c\u7684 $O(n \\log n)$\uff01\r\n\r\n---\r\n\r\n\u6700\u540e\uff0c\u5982\u679c\u5927\u5bb6\u53d1\u73b0\u4e86\u95ee\u9898\uff0c\u4e5f\u6b22\u8fce\u5927\u5bb6\u6307\u6b63\u54e6\uff01",
        "postTime": 1561264812,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "#\u65b9\u6cd5\u4e00\uff1a\n\n\u5148\u6c42\u7b2c1\u4e2a\u70b9\u4e0e\u5176\u4f59n-1\u4e2a\u70b9\u7684\u8ddd\u79bb\uff1b\n\n\u518d\u6c42\u7b2c2\u4e2a\u70b9\u4e0e\u5176\u4f59n-2\u4e2a\u70b9\u7684\u8ddd\u79bb\uff1b\n\n\u518d\u6c42\u7b2c3\u4e2a\u70b9\u4e0e\u5176\u4f59n-3\u4e2a\u70b9\u7684\u8ddd\u79bb\uff1b\n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u518d\u6c42\u7b2cn-1\u4e2a\u70b9\u4e0e\u5176\u4f591\u4e2a\u70b9\u7684\u8ddd\u79bb\uff1b\n\n\u7136\u540e\u627e\u51fa\u6700\u5c0f\u503c\u3002\n\n\u5982\u6b64\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3aO(n^2)\uff0c\u663e\u7136\u4e0d\u80fd\u6ee1\u8db3\u672c\u9898\u7684\u9700\u8981\u3002\u5f88\u9057\u61be\u2026\u2026\u6d1b\u8c37\u795e\u673a\u8fd9\u56de\u4e0d\u53ef\u4ee5\u54af\u2026\u2026\n\n\n##\u65b9\u6cd5\u4e8c\uff1a\n\n\u8003\u8651\u4ee5\u4e0b\u5206\u6cbb\u7b97\u6cd5\uff1a\n\n\u8bbe\u5e73\u9762\u4e0a\u7684\u70b9\u90fd\u5728\u70b9\u96c6S\u4e2d\uff0c\u4e3a\u4e86\u5c06S\u7ebf\u6027\u5206\u5272\u4e3a\u5927\u5c0f\u5927\u81f4\u76f8\u7b49\u76842\u4e2a\u5b50\u96c6S1\u548cS2\uff0c\u6211\u4eec\u9009\u53d6\u4e00\u5782\u76f4\u7ebfl\uff08\u65b9\u7a0b\uff1ax=m\uff09\u6765\u4f5c\u4e3a\u5206\u5272\u76f4\u7ebf\u3002\u5176\u4e2dm\u4e3aS\u4e2d\u5404\u70b9x\u5750\u6807\u7684\u4e2d\u4f4d\u6570\u3002\u7531\u6b64\u5c06S\u5206\u5272\u4e3aS1={p\u2208S|px\u2264m}\u548cS2={p\u2208S|px>m}\u3002\u4ece\u800c\u4f7fS1\u548cS2\u5206\u522b\u4f4d\u4e8e\u76f4\u7ebfl\u7684\u5de6\u4fa7\u548c\u53f3\u4fa7\uff0c\u4e14S=S1\u222aS2 \u3002\u7531\u4e8em\u662fS\u4e2d\u5404\u70b9x\u5750\u6807\u503c\u7684\u4e2d\u4f4d\u6570\uff0c\u56e0\u6b64S1\u548cS2\u4e2d\u7684\u70b9\u6570\u5927\u81f4\u76f8\u7b49\u3002\n\u9012\u5f52\u5730\u5728S1\u548cS2\u4e0a\u89e3\u6700\u63a5\u8fd1\u70b9\u5bf9\u95ee\u9898\uff0c\u6211\u4eec\u5206\u522b\u5f97\u5230S1\u548cS2\u4e2d\u7684\u6700\u5c0f\u8ddd\u79bb\u03b41\u548c\u03b42\u3002\u73b0\u8bbe\u03b4=min (\u03b41,\u03b42)\u3002\n\n\n\u82e5S\u7684\u6700\u63a5\u8fd1\u70b9\u5bf9(p,q)\u4e4b\u95f4\u7684\u8ddd\u79bbd(p,q)<\u03b4\u5219p\u548cq\u5fc5\u5206\u5c5e\u4e8eS1\u548cS2\u3002\u4e0d\u59a8\u8bbep\u2208S1\uff0cq\u2208S2\u3002\u90a3\u4e48p\u548cq\u8ddd\u76f4\u7ebfl\u7684\u8ddd\u79bb\u5747\u5c0f\u4e8e\u03b4\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u82e5\u7528P1\u548cP2\u5206\u522b\u8868\u793a\u76f4\u7ebfl\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u5bbd\u4e3a\u03b4\u76842\u4e2a\u5782\u76f4\u957f\u6761\uff0c\u5219p\u2208S1\uff0cq\u2208S2\n\n\n\u6b64\u65f6\uff0cP1\u4e2d\u6240\u6709\u70b9\u4e0eP2\u4e2d\u6240\u6709\u70b9\u6784\u6210\u7684\u70b9\u5bf9\u5747\u4e3a\u6700\u63a5\u8fd1\u70b9\u5bf9\u7684\u5019\u9009\u8005\u3002\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u6709n^2/4\u5bf9\u8fd9\u6837\u7684\u5019\u9009\u8005\u3002\u4f46\u662fP1\u548cP2\u4e2d\u7684\u70b9\u5177\u6709\u4ee5\u4e0b\u7684\u7a00\u758f\u6027\u8d28\uff0c\u5b83\u4f7f\u6211\u4eec\u4e0d\u5fc5\u68c0\u67e5\u6240\u6709\u8fd9n2/4\u5bf9\u5019\u9009\u8005\u3002\u8003\u8651P1\u4e2d\u4efb\u610f\u4e00\u70b9p,\u5b83\u82e5\u4e0eP2\u4e2d\u7684\u70b9q\u6784\u6210\u6700\u63a5\u8fd1\u70b9\u5bf9\u7684\u5019\u9009\u8005\uff0c\u5219\u5fc5\u6709d(p,q)<\u03b4\u3002\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684P2\u4e2d\u7684\u70b9\u6709\u591a\u5c11\u4e2a\u5462\uff1f\u5bb9\u6613\u770b\u51fa\u8fd9\u6837\u7684\u70b9\u4e00\u5b9a\u843d\u5728\u4e00\u4e2a\u03b4\u00d72\u03b4\u7684\u77e9\u5f62R\u4e2d\uff0c\n\n\n\u7531\u03b4\u7684\u610f\u4e49\u53ef\u77e5P2\u4e2d\u4efb\u4f552\u4e2aS\u4e2d\u7684\u70b9\u7684\u8ddd\u79bb\u90fd\u4e0d\u5c0f\u4e8e\u03b4\u3002\u7531\u6b64\u53ef\u4ee5\u63a8\u51fa\u77e9\u5f62R\u4e2d\u6700\u591a\u53ea\u67096\u4e2aS\u4e2d\u7684\u70b9\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u77e9\u5f62R\u7684\u957f\u4e3a2\u03b4\u7684\u8fb93\u7b49\u5206\uff0c\u5c06\u5b83\u7684\u957f\u4e3a\u03b4\u7684\u8fb92\u7b49\u5206\uff0c\u7531\u6b64\u5bfc\u51fa6\u4e2a\uff08\u03b4/2\uff09\u00d7\uff082\u03b4/3\uff09\u7684\u77e9\u5f62\u3002\n\n\n\u56e0\u6b64d(u,v)\u22645\u03b4/6<\u03b4 \u3002\u8fd9\u4e0e\u03b4\u7684\u610f\u4e49\u76f8\u77db\u76fe\u3002\u4e5f\u5c31\u662f\u8bf4\u77e9\u5f62R\u4e2d\u6700\u591a\u53ea\u67096\u4e2aS\u4e2d\u7684\u70b9\u3002\u7531\u4e8e\u8fd9\u79cd\u7a00\u758f\u6027\u8d28\uff0c\u5bf9\u4e8eP1\u4e2d\u4efb\u4e00\u70b9p\uff0cP2\u4e2d\u6700\u591a\u53ea\u67096\u4e2a\u70b9\u4e0e\u5b83\u6784\u6210\u6700\u63a5\u8fd1\u70b9\u5bf9\u7684\u5019\u9009\u8005\u3002\u56e0\u6b64\uff0c\u5728\u5206\u6cbb\u6cd5\u7684\u5408\u5e76\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u6700\u591a\u53ea\u9700\u8981\u68c0\u67e56\u00d7n/2=3n\u5bf9\u5019\u9009\u8005\uff0c\u800c\u4e0d\u662fn^2/4\u5bf9\u5019\u9009\u8005\u3002\n\n\n\n\u6211\u4eec\u53ea\u77e5\u9053\u5bf9\u4e8eP1\u4e2d\u6bcf\u4e2aS1\u4e2d\u7684\u70b9p\u6700\u591a\u53ea\u9700\u8981\u68c0\u67e5P2\u4e2d\u76846\u4e2a\u70b9\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u4e0d\u786e\u5207\u5730\u77e5\u9053\u8981\u68c0\u67e5\u54ea6\u4e2a\u70b9\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06p\u548cP2\u4e2d\u6240\u6709S2\u7684\u70b9\u6295\u5f71\u5230\u5782\u76f4\u7ebfl\u4e0a\u3002\u7531\u4e8e\u80fd\u4e0ep\u70b9\u4e00\u8d77\u6784\u6210\u6700\u63a5\u8fd1\u70b9\u5bf9\u5019\u9009\u8005\u7684S2\u4e2d\u70b9\u4e00\u5b9a\u5728\u77e9\u5f62R\u4e2d\uff0c\u6240\u4ee5\u5b83\u4eec\u5728\u76f4\u7ebfl\u4e0a\u7684\u6295\u5f71\u70b9\u8dddp\u5728l\u4e0a\u6295\u5f71\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8e\u03b4\u3002\u7531\u4e0a\u9762\u7684\u5206\u6790\u53ef\u77e5\uff0c\u8fd9\u79cd\u6295\u5f71\u70b9\u6700\u591a\u53ea\u67096\u4e2a\u3002\u56e0\u6b64\uff0c\u82e5\u5c06P1\u548cP2\u4e2d\u6240\u6709S\u7684\u70b9\u6309\u5176y\u5750\u6807\u6392\u597d\u5e8f\uff0c\u5219\u5bf9P1\u4e2d\u6240\u6709\u70b9p\uff0c\u5bf9\u6392\u597d\u5e8f\u7684\u70b9\u5217\u4f5c\u4e00\u6b21\u626b\u63cf\uff0c\u5c31\u53ef\u4ee5\u627e\u51fa\u6240\u6709\u6700\u63a5\u8fd1\u70b9\u5bf9\u7684\u5019\u9009\u8005\uff0c\u5bf9P1\u4e2d\u6bcf\u4e00\u70b9\u6700\u591a\u53ea\u8981\u68c0\u67e5P2\u4e2d\u6392\u597d\u5e8f\u7684\u76f8\u7ee76\u4e2a\u70b9\u3002\n\n\n**\u81f3\u6b64\uff0c\u6211\u4eec\u7528\u5206\u6cbb\u6cd5\u6c42\u51fa\u5e73\u9762\u6700\u63a5\u8fd1\u70b9\u5bf9\u3002**\n\n\n```delphi\n\n\ntype rec=record\n     x,y:int64;\n     end;\nvar a:array [0..200001] of rec;\n    tt,ttt,tttt:array [0..200001] of rec;\n    n,l,m,min:int64;\n    i,j,k:longint;\nprocedure sort(l,r:longint);\nvar i,j:longint;\n    x,y:rec;\nbegin\n  i:=l;\n  j:=r;\n  x:=a[(l+r) div 2];\n  repeat\n    while (a[i].x<x.x) or ((a[i].x=x.x) and (a[i].y>x.y)) do inc(i);\n    while (x.x<a[j].x) or ((x.x=a[j].x) and (x.y>a[j].y)) do dec(j);\n    if not(i>j)\n    then\n      begin\n        y:=a[i];\n        a[i]:=a[j];\n        a[j]:=y;\n        inc(i);\n        j:=j-1;\n      end;\n  until i>j;\n  if l<j then sort(l,j);\n  if i<r then sort(i,r);\nend;\nprocedure sortt(l,r:longint);\nvar i,j:longint;\n    x,y:rec;\nbegin\n  i:=l;\n  j:=r;\n  x:=tttt[(l+r) div 2];\n  repeat\n    while (tttt[i].y<x.y) do inc(i);\n    while (x.y<tttt[j].y) do dec(j);\n    if not(i>j)\n    then\n      begin\n        y:=tttt[i];\n        tttt[i]:=tttt[j];\n        tttt[j]:=y;\n        inc(i);\n        j:=j-1;\n      end;\n  until i>j;\n  if l<j then sortt(l,j);\n  if i<r then sortt(i,r);\nend;\nfunction dis(a,b:rec):int64;\nbegin\n  exit(sqr(a.x-b.x)+sqr(a.y-b.y));\nend;\nfunction minn(a,b:int64):int64;\nbegin if a<b then exit(a) else exit(b); end;\nfunction work(le,ri:longint):int64;\nvar tl,tr,t1,t2,min:int64;\n    i,j,k,lenr,lenl,p1,p2:longint;\nbegin\n  if ri-le=1 then exit(dis(a[ri],a[le]));\n  if ri-le=2 then exit(minn(minn(dis(a[ri],a[le]),dis(a[ri-1],a[le])),dis(a[le+1],a[ri])));\n  tl:=work(le,(le+ri) div 2);\n  tr:=work(((le+ri) div 2)+1,ri);\n  min:=minn(tl,tr);\n  t1:=(le+ri) div 2;\n  t2:=t1+1;\n  while (t1>=le) and (sqr(a[t1].x-a[(le+ri) div 2].x)<=min) do dec(t1);\n  inc(t1);\n  while (t2<=ri) and (sqr(a[t2].x-a[(le+ri) div 2].x)<=min) do inc(t2);\n  dec(t2);\n  if (t2=(le+ri) div 2) or (t1=((le+ri) div 2)+1) then exit(min);\n  for k:=t1 to t2 do tttt[k]:=a[k];\n  sortt(t1,t2);\n  for k:=t1 to t2-1 do\n    begin\n      for j:=k+1 to minn(k+8,t2) do\n        begin\n          min:=minn(min,dis(tttt[k],tttt[j]));\n        end;\n    end;\n  exit(min);\nend;\nbegin\n  readln(n);\n  for i:=1 to n do readln(a[i].x,a[i].y);\n  sort(1,n);\n  writeln(sqrt(work(1,n)):0:4);\nend.\n\n\n```",
        "postTime": 1376293203,
        "uid": 277,
        "name": "plane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "### \u8be5\u7b97\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4\u662f\uff1a\n### 1. \u968f\u673a\u65cb\u8f6c\n### 2. \u6309\u6a2a\u5750\u6807\u6392\u5e8f\u540e\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4e0e\u5176\u540e\u97625\u4e2a\u70b9\u7684\u8ddd\u79bb\u53d6\u6700\u5c0f\u503c\u66f4\u65b0\u7b54\u6848\u3002\n### \u65cb\u8f6c\u516c\u5f0f\uff08\u65cb\u8f6c\u4e2d\u5fc3\u4e3a\uff08x2,y2\uff09\uff09\uff1a\n### x=(x1-x2)*cos(\u03b8)-(y1-y2)*sin(\u03b8)+x2;\n### y=(x1-x2)*sin(\u03b8)+(y1-y2)*cos(\u03b8)+y2;\n### \u6ce8\u610f\u03b8\u4e3a\u5f27\u5ea6(\u5728C++\u4e2d\u4e09\u89d2\u51fd\u6570\u4ee5\u5f27\u5ea6\u8fdb\u884c\u8fd0\u7b97)\n\n#### \u5982\u679c\u4e0d\u65cb\u8f6c\u4f1a\u600e\u4e48\u51fa\u9519\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/98jr6pco.png)\n#### \u5982\u56feA\u70b9\u4f1a\u4e0eB\u3001C\u3001D\u3001E\u3001F\uff08\u6309\u987a\u5e8f\uff09\u66f4\u65b0\u7b54\u6848\uff0c\u4f46\u662fG\u5e94\u8be5\u662f\u79bbA\u6700\u8fd1\u7684\u70b9\u3002\n#### \u65cb\u8f6c\u53ef\u4ee5\u5f88\u597d\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u4e0b\u56fe\uff1aA\u70b9\u4f1a\u4e0eG\u3001F\u3001D\u3001B\u3001C\uff08\u6309\u987a\u5e8f\uff09\u66f4\u65b0\u7b54\u6848\n![](https://cdn.luogu.com.cn/upload/image_hosting/vvgc1ox4.png)\n```cpp\n\n#include<bits/stdc++.h>\n#define pi acos(-1.0)\nusing namespace std;\nstruct node{\n    double x,y;\n}a[200005];\nint n;\ndouble ans=1e15;//\u521d\u59cb\u5316\u7b54\u6848\n\nbool cmp(node a,node b){\n    return a.x<b.x;//\u6309\u7167\u6a2a\u5750\u6807\u6392\u5e8f \n}\ndouble dis(node a,node b){\n    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));//\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb \n}\nvoid calc(){\n    for (int i=1;i<=n;i++)\n        for (int j=i+1;j<=i+5&&j<=n;j++)\n            ans=min(ans,dis(a[i],a[j]));\n}\nvoid around(double ds){\n    ds=ds/180.0*pi;//\u89d2\u5ea6\u8f6c\u6362\u4e3a\u5f27\u5ea6 \n    for (int i=1;i<=n;i++){\n        double x=a[i].x,y=a[i].y;//\u65cb\u8f6c\u524d\u7684\u70b9 \n        double xn,yn;//\u65cb\u8f6c\u540e\u7684\u70b9 \n        double xyu=0.0,yyu=0.0;  //\u65cb\u8f6c\u4e2d\u5fc3 \n        xn=(x-xyu)*cos(ds)-(y-yyu)*sin(ds)+xyu;\n        yn=(x-xyu)*sin(ds)+(y-yyu)*cos(ds)+yyu;\n        a[i].x=xn,a[i].y=yn;\n    }\n    sort(a+1,a+1+n,cmp);//\u6392\u5e8f \n    calc();//\u8ba1\u7b97 \n}\n\nint main(){\n    srand(time(NULL));\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++){\n        scanf(\"%lf%lf\",&a[i].x,&a[i].y);\n    }\n    around(0);//\u5c06\u539f\u56fe\u50cf\u8fdb\u884c\u6392\u5e8f\u5e76\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4e0e\u5176\u540e\u4e94\u4e2a\u70b9\u6bd4\u8f83 \n    around(rand()%360);//\u5c06\u56fe\u50cf\u968f\u673a\uff080\u00b0~359\u00b0\uff09\u65cb\u8f6c  \u5e76\u6392\u5e8f \u8ba1\u7b97 \n    around(rand()%360);//\u5c06\u56fe\u50cf\u968f\u673a\uff080\u00b0~359\u00b0\uff09\u65cb\u8f6c  \u5e76\u6392\u5e8f \u8ba1\u7b97 \n    printf(\"%.4lf\\n\",ans);\n    return 0;\n}\n\n```\n### upd 11/4\uff1a\u6709\u8bc4\u8bba\u6307\u51faC++\u7684\u4e09\u89d2\u51fd\u6570\u5e94\u8be5\u4e3a\u5f27\u5ea6\u5236\uff0c\u8c22\u8c22\uff0c\u73b0\u5df2\u6539\u6b63\u3002\n### \u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9\u4e0d\u59a8\u70b9\u4e2a\u8d5e\u3002",
        "postTime": 1546561239,
        "uid": 36107,
        "name": "yuy_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u6709\u8da3\u7684\u5206\u6cbb\u5462\n\n\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\u679a\u4e3e\u4e24\u4e2a\u70b9\u7b97\u8ddd\u79bb\u66f4\u65b0\u7b54\u6848\n\n\u5373\u4f7f\u8fd9\u6837\u4f60\u4e5f\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\u4f60\u7684\u66b4\u529b\n\n\u4f17\u6240\u5468\u77e5$sqrt$\u662f\u4e00\u4e2a\u8dd1\u5f97\u6781\u6162\u7684\u51fd\u6570\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e24\u8fb9\u5e73\u65b9\u6d88\u6389$sqrt$\uff0c\u6700\u540e\u518d\u7b97\u4e00\u6b21\u5373\u53ef\n\n\u7136\u540e\u770b\u5206\u6cbb\u505a\u6cd5.\u5f53\u7136\u4e0a\u9762\u7684\u6280\u5de7\u57fa\u672c\u4e0a\u53ef\u4ee5\u7528\u4e8e\u5e26$sqrt$\u7684\u6240\u6709\u9898\u76ee.\n\n\u5148\u8003\u8651\u964d\u7ef4~~\u6253\u51fb~~\uff0c\u5982\u679c\u53ea\u6709\u4e00\u7ef4\u600e\u4e48\u505a.\n\n\u628a\u6240\u6709\u70b9\u6309\u7167\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u5728\u4e2d\u4f4d\u6570\u7684\u4f4d\u7f6e\u753b\u4e00\u6761\u7ebf\uff0c\u628a\u70b9\u5206\u6210\u4e24\u4e2a\u5b50\u96c6$P_1$\u548c$P_2$.\n\n\u6211\u4eec\u53ea\u9700\u8981\u7b97\u51fa\u6240\u6709$p\\in P_1,q\\in P_2$\u7684$min{dis(p,q)}$\uff0c\u7136\u540e\u9012\u5f52\u5730\u5904\u7406$P_1,P_2$\u5373\u53ef.\n\n\u5982\u679c\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u4e24\u8fb9\u7684\u70b9\uff0c\u90a3\u4e48\u590d\u6742\u5ea6$f(n)=2f(n/2)+O(n^2)=O(n^2\\log n)$\uff0c\u53d8\u5dee\u4e86\uff0c\u6240\u4ee5\u4e0d\u53ef\u4ee5\u8fd9\u4e48\u505a.\n\n\u73b0\u5728\u5047\u8bbe\u4e24\u4e2a\u5b50\u96c6\u7684\u7b54\u6848\u5df2\u7ecf\u6c42\u51fa\uff0c\u90a3\u4e48\u6211\u4eec\u8bbe$d=min(solve(P_1),solve(P_2))$,\u4e2d\u4f4d\u6570\u7684\u5750\u6807\u662f$m$\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u6240\u6709\u5750\u6807\u5728$[m-d,m+d]$\u8303\u56f4\u5185\u7684\u70b9\u5373\u53ef\u3002\u5bb9\u6613\u770b\u51fa\u8fd9\u6837\u7684\u70b9\u6bcf\u8fb9\u6700\u591a\u53ea\u6709$2$\u4e2a\uff0c\u5426\u5219\u4ed6\u4eec\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e00\u5b9a$<d$\uff0c\u77db\u76fe\uff0c\u6240\u4ee5\u53ef\u4ee5$O(1)$\u5730\u5904\u7406\uff0c\u6240\u4ee5\u590d\u6742\u5ea6$f(n)=2f(n/2)+O(1)=O(n)$\uff0c\u8003\u8651\u6392\u5e8f\u4e4b\u540e\u590d\u6742\u5ea6$O(n\\log n)$\n\n\u73b0\u5728\u628a\u5750\u6807\u53d8\u6210\u4e8c\u7ef4\uff0c\u4e0a\u9762\u7684\u505a\u6cd5\u5e94\u8be5\u5bf9\u6211\u4eec\u6709\u4e00\u4e9b\u542f\u53d1\u6027.\n\n\u5148\u6309\u7167$x$\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u627e\u4e00\u4e2a\u4e2d\u4f4d$x$\u5750\u6807$m$\uff0c\u5728\u8fd9\u91cc\u753b\u4e00\u6761\u5e73\u884c\u4e8e$y$\u8f74\u7684\u5206\u5272\u7ebf\uff0c\u628a\u70b9\u5206\u6210$P_1$\u548c$P_2$\u4e24\u4e2a\u5b50\u96c6.\u8bbe\u4e24\u4e2a\u5b50\u96c6\u7684\u7b54\u6848\u7684\u8f83\u5c0f\u503c\u662f$d$\uff0c\u90a3\u4e48\u6211\u4eec\u5904\u7406\u7684\u70b9\u4e00\u5b9a\u662f$x$\u5750\u6807\u5728$[m-d,m+d]$\u8303\u56f4\u5185\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u7ad6\u76f4\u957f\u6761.\u4f46\u8fd9\u6b21\u6211\u4eec\u6ca1\u8fd9\u4e48\u5e78\u8fd0\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u957f\u6761\u5185\u7684\u70b9\u8fd8\u662f$O(n)$\u7684.\u6211\u4eec\u6765\u66b4\u529b\u5730\u5c1d\u8bd5\u4e00\u4e0b:\n\n\u628a\u8fd9\u4e2a\u533a\u57df\u5185\u7684\u70b9\u6309$y$\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u4ece\u5b83\u5f80\u540e\u679a\u4e3e\u7b2c\u4e8c\u4e2a\u70b9\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u7684$y$\u5750\u6807\u4e4b\u5dee$>=d$\u90a3\u4e48\u5c31\u505c\u6b62\u679a\u4e3e\u7b2c\u4e8c\u4e2a\u70b9.\n\n\u7136\u540e\u4f60\u53d1\u73b0\u4f60$A$\u6389\u4e86\u8fd9\u9053\u9898.\n\n\u4e3a\u4ec0\u4e48\u5462?\u56e0\u4e3a\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u7b2c\u4e8c\u4e2a\u70b9\u5728\u4e24\u8fb9\u5404\u6700\u591a\u6709$6$\u4e2a\u3002\u6240\u4ee5\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u4fdd\u8bc1\u7684.\u4e3a\u4ec0\u4e48\u662f$6$\u4e2a\u5462?\u8fd9\u91cc\u7ed9\u51fa\u8bc1\u660e.\n\n\u663e\u7136\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5230\u5b83\u7684\u8ddd\u79bb$<d$\u7684\u70b9\u5728\u6bcf\u4e00\u8fb9\u4e00\u5b9a\u4f1a\u843d\u5728\u4e00\u4e2a$d\\times2d$\u7684\u77e9\u5f62\u4e4b\u5185(\u5176\u5b9e\u662f\u4e2a\u534a\u5f84\u4e3a$d$\u7684\u5706\uff0c\u4f46\u662f\u5706\u96be\u4ee5\u5904\u7406\uff0c\u6240\u4ee5\u7528\u77e9\u5f62\u8fd1\u4f3c).\u8fd9\u4e2a\u77e9\u5f62\u5185\u7684\u70b9\u9700\u8981\u6ee1\u8db3\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb$>=d$.\u8fd9\u6837\u7684\u70b9\u5982\u679c$>6$\u4e2a\uff0c\u90a3\u4e48\u6211\u4eec\u7528\u9e3d\u5de2\u539f\u7406:\u628a$d\\times 2d$\u7684\u77e9\u5f62\u5207\u62106\u4e2a$\\dfrac{1}{2}d\\times\\dfrac{2}{3}d$\u7684\u5c0f\u77e9\u5f62\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u70b9\u843d\u5728\u540c\u4e00\u4e2a\u5c0f\u77e9\u5f62\u5185\uff0c\u4f46\u662f\u8fd9\u4e2a\u5c0f\u77e9\u5f62\u4e2d\u4e24\u70b9\u7684\u6700\u5927\u8ddd\u79bb\u7b49\u4e8e\u5bf9\u89d2\u7ebf\u957f\uff0c\u4e5f\u5c31\u662f$\\dfrac{5}{6}d<d$\uff0c\u77db\u76fe.\u56e0\u6b64\u6700\u591a\u53ea\u6709\u516d\u4e2a\u70b9\u3002\n\n\u4e8e\u662f\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u627e\u8fd9\u4e9b\u70b9\u5c31\u53ef\u4ee5\u4e86\n\n\u5230\u8fd9\u91cc\u7b97\u6cd5\u5df2\u7ecf\u660e\u786e\uff0c\u4f46\u5b9e\u73b0\u4e0a\u51fa\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898:\n\n1. \u5982\u679c\u4f60\u5408\u5e76\u7b54\u6848\u7528$stl$\u7684$sort$\uff0c\u90a3\u4e48\u590d\u6742\u5ea6$f(n)=2f(n/2)+O(nlogn)=O(n\\log^2n)$\u5c31\u4e0d\u5bf9\u4e86.\u6211\u4eec\u9700\u8981\u5f52\u5e76\u6392\u5e8f.\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u53ef\u80fd\u53ea\u5bf9\u4e24\u4e2a\u957f\u6761\u5185\u7684\u70b9\u6392\u5e8f\uff0c\u800c\u662f\u9700\u8981\u5bf9\u6240\u6709\u6b63\u5728\u5904\u7406\u7684\u533a\u95f4\u5185\u7684\u70b9\u6392\u5e8f\u4e86.\u5f52\u5e76\u7684\u590d\u6742\u5ea6\u4e5f\u662f\u57fa\u4e8e\u9012\u5f52\u7684\uff0c\u5e76\u4e14\u5904\u7406\u5b50\u95ee\u9898\u7684\u65f6\u5019\u4e24\u4e2a\u5e8f\u5217\u5df2\u7ecf\u6709\u5e8f\uff0c\u6240\u4ee5\u5f52\u5e76\u6392\u5e8f\u53ef\u4ee5\u628a\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u51cf\u5c0f\u5230$O(n\\log n)$.\u4f46\u662f\u8fd9\u9053\u9898\u6570\u636e\u6c34\uff0c\u6240\u4ee5$sort$\u53ef\u4ee5\u53d6\u5f97\u66f4\u52a0\u4f18\u79c0\u7684\u6548\u7387.\u8bf4\u4e00\u4e0b\u600e\u4e48\u5361:\u6240\u6709\u7684\u70b9\u5168\u90fd\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u5c31\u53ef\u4ee5\u628a$sort$\u5361\u5230\u6781\u9650.\n\n2. $sort$\u6709\u4e00\u4e2a\u597d\u5904:\u5b83\u53ef\u4ee5\u53ea\u628a\u4e24\u4e2a\u957f\u6761\u5185\u7684\u70b9\u63d0\u51fa\u6765\u6392\u5e8f\uff0c\u5bf9\u4e8e\u968f\u673a\u6570\u636e\u6548\u7387\u4f18\u79c0.\n\n$sort$\u7684\u4ee3\u7801\u53ef\u4ee5\u53bb\u770b\u5176\u4ed6\u9898\u89e3\uff0c\u8fd9\u91cc\u653e\u51fa\u5f52\u5e76\u7684\u4ee3\u7801.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstruct Point{int x,y;}a[2000000],tmp[2000000];\nint n,b[2000000];\nconst long long inf=5e18;\nlong long sqr(int x){return (long long)x*x;}\nlong long dis(int l,int r){return sqr(a[l].x-a[r].x)+sqr(a[l].y-a[r].y);}\nint cmp(const Point &a,const Point &b){return a.x==b.x?a.y<b.y:a.x<b.x;}\nvoid merge(int l,int r)\n{\n\tint mid=(l+r)>>1,i=l,j=mid+1;//\u5f52\u5e76\n\tfor(int k=l;k<=r;k++)\n\t{\n\t\tif(i<=mid&&(j>r||a[i].y<a[j].y))tmp[k]=a[i++];\n\t\telse tmp[k]=a[j++];\n\t}\n\tfor(int i=l;i<=r;i++)a[i]=tmp[i];\n}\nlong long solve(int l,int r)\n{\n\tif(l>=r)return inf;\n\tif(l+1==r){if(a[l].y>a[r].y)swap(a[l],a[r]);return dis(l,r);}\n\tint mid=(l+r)>>1,t=a[mid].x,cnt=0;//\u91cd\u65b0\u6392\u5e8f\u540e\u4e2d\u4f4d\u6570\u5c31\u4e71\u4e86\uff0c\u9700\u8981\u8bb0\u4e0b\u6765\n\tlong long d=min(solve(l,mid),solve(mid+1,r));\n\tmerge(l,r);\n\tfor(int i=l;i<=r;i++)\n\t\tif(sqr(a[i].x-t)<d)//\u4e24\u8fb9\u5e73\u65b9\u7684\u6280\u5de7\n\t\t\tb[++cnt]=i;//\u533a\u95f4\u5185\u7684\u62c9\u51fa\u6765\u5904\u7406\n\tfor(int i=1;i<=cnt;i++)\n\t\tfor(int j=i+1;j<=cnt&&sqr(a[b[j]].y-a[b[i]].y)<d;j++)\n\t\t\td=min(d,dis(b[j],b[i]));\n\treturn d;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&a[i].x,&a[i].y);\n\tsort(a+1,a+n+1,cmp);\n\tprintf(\"%.4lf\",sqrt(solve(1,n)));\n} \n```",
        "postTime": 1548907323,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u4e00\u9053\u8d85\u7ea7\u7ecf\u5178\u7684~~\u8ba1\u7b97\u51e0\u4f55~~\u95ee\u9898\uff0c\u5b66\u4e86\u597d\u4e45\u7ec8\u4e8e\u5b66\u660e\u767d\u4e86\uff0c\u8fd9\u91cc\u4ed4\u7ec6\u8ddf\u5927\u5bb6\u804a\u4e00\u4e0b\uff1a\n\n\u9996\u5148\u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u7b2c\u4e00\u53cd\u5e94\u80af\u5b9a\u662f\u66b4\u529b\uff0c\u4e24\u91cd\u5faa\u73af\uff0c\u6c42\u51fa\u6240\u6709\u7684\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u518d\u627e\u6700\u5c0f\u503c\uff0c\u5bf9\u5427\uff1f\uff1f\uff1f\n\n\u5e9f\u8bdd\u5c11\u8bf4\uff0c\u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nstruct node{\n\tdouble x;\n\tdouble y;\n};\nstruct node point[200005];\ndouble dis(node a,node b)\n{\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>point[i].x>>point[i].y;\n\t}\n\tdouble minn=1<<31-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(i==j)continue;\n\t\t\tif(minn>=dis(point[i],point[j]))minn=dis(point[i],point[j]);\n\t\t}\n\t}\n\tprintf(\"%.4lf\\n\",minn);\n\treturn 0;\n}\n```\n\u61d2\u5f97\u52a0\u6ce8\u91ca\u4e86\uff0c\u80fd\u505a\u5230\u8fd9\u7684\u6211\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\uff0c\u7136\u540e\u5f88\u9ad8\u5174\u7684\u63d0\u4ea4\u4e86\uff0c\u4e8e\u662f\u4e4e\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/67229.png)\n\u5565\u73a9\u610f\uff1f\u8d85\u65f6\uff0c\u4e8e\u662f\u770b\u4e86\u4e00\u4e0b\u9898\u76ee\n![](https://cdn.luogu.com.cn/upload/pic/67230.png)\n\u7136\u540e\u6211\u7528\u4e86\u4e00\u4e2a\u5c0f\u65f6\u7b97\u4e86\u4e00\u4e0b 200000*200000\u597d\u50cf\u8d85\u4e86\uff0c\n\u8fd9\u548b\u505a\uff1f\uff1f\uff1f\uff1f\uff1f~~\u4e0d\u4f1a\u4e86\uff0c\u7b97\u4e86\u4e0d\u505a\u4e86~~\n\n\n\u4e8e\u662f\u4e4e\uff0c\u672c\u7740\u6267\u7740\u63a2\u7d22\u7684\u7cbe\u795e\uff0c\u7ec8\u4e8e\u7814\u7a76\u660e\u767d\u4e86\uff0c\u8fd9\u9053\u9898\u662f\u4e00\u9053\u5f88\u7ecf\u5178\u7684\u8ba1\u7b97\u51e0\u4f55\u95ee\u9898\uff0c\u53eb\u6700\u8fd1\u70b9\u5bf9\uff0c\u4ec0\u4e48\u601d\u8def\u5462\uff1f\n\n\n\u5206\u6cbb\u7b97\u6cd5\uff1a\n\n\n\u5565\u662f\u5206\u6cbb\u7b97\u6cd5\uff1f\n\n  \n**1) \u628a\u5b83\u5206\u6210\u4e24\u4e2a\u6216\u591a\u4e2a\u66f4\u5c0f\u7684\u95ee\u9898\uff1b    \n2) \u5206\u522b\u89e3\u51b3\u6bcf\u4e2a\u5c0f\u95ee\u9898\uff1b  \n3) \u628a\u5404\u5c0f\u95ee\u9898\u7684\u89e3\u7b54\u7ec4\u5408\u8d77\u6765\uff0c\u5373\u53ef\u5f97\u5230\u539f\u95ee\u9898\u7684\u89e3\u7b54\u3002\u5c0f\u95ee\u9898\u901a\u5e38\u4e0e\u539f\u95ee\u9898\u76f8\u4f3c\uff0c\u53ef\u4ee5\u9012\u5f52\u5730\u4f7f\u7528\u5206\u800c\u6cbb\u4e4b\u7b56\u7565\u6765\u89e3\u51b3\u3002**\n\n\u8bf4\u5565\u5462\uff1f\n\n\u53cd\u6b63\u5c31\u662f\u628a\u5927\u95ee\u9898\u6362\u6210\u82e5\u5e72\u4e2a**\u76f8\u540c**\u5c0f\u95ee\u9898\uff0c\u7136\u540e\u5c06\u5c0f\u95ee\u9898\u89e3\u51b3\uff0c\u4ece\u800c\u89e3\u51b3\u5927\u95ee\u9898\n\n\u5565\u610f\u601d\uff1f\n\u8fd9\u9053\u9898\uff0c\u6bd4\u5982\u8bf4\u54b1\u4eec\u8981\u6c42\u5e73\u9762\u4e2d\u4e24\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u90a3\u54b1\u4eec\u53ef\u4e0d\u53ef\u4ee5\u628a\u5e73\u9762\u5206\u6210\u5de6\u8fb9\u548c\u53f3\u8fb9\u4e24\u534a\uff1f\u597d\uff0c\u90a3\u8fd9\u9053\u9898\u53d8\u6210\u4e86\u627e\u5de6\u8fb9\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\u548c\u627e\u53f3\u8fb9\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\u662f\u4e0d\u662f\uff1f\u8fd8\u662f\u4e0d\u4f1a\uff1f\uff0c\u90a3\u7ee7\u7eed\u5206\u5457\n\u6700\u7ec8\u5206\u5230\u4e86\u6bcf\u4e2a\u5e73\u9762\u53ea\u6709\u4e24\u4e2a\u70b9\uff0c\u8fd9\u4f60\u603b\u8be5\u4f1a\u4e86\u5427\uff0c\u628a\u6bcf\u4e2a\u5c0f\u5e73\u9762\u7684\u8ddd\u79bb\u7b97\u51fa\u6765\uff0c\u7136\u540e\u627e\u6700\u5c0f\u503c\uff1f\uff1f\uff1fno  \u6ca1\u8fd9\u4e48\u7b80\u5355\uff0c\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/67233.png)\n\n\u5982\u56fe\u6240\u793a\uff0c\u5de6\u8fb9\u6700\u5c0f\u7684\u8ddd\u79bb\u662fd1\uff0c\u53f3\u8fb9\u6700\u5c0f\u7684\u8ddd\u79bb\u662fd2\uff0c\n\u90a3\u4e48\u5982\u679cd1<d2\uff0c\u90a3\u6700\u5c0f\u8ddd\u79bb\u5c31\u662fd1\u561b\uff1f\u663e\u7136\u4e0d\u662f\uff0c\u56e0\u4e3a\u4e24\u4e2a\u5e73\u9762\u7684\u4ea4\u53c9\u90e8\u5206\u8fd8\u53ef\u80fd\u6709\u66f4\u5c0f\u7684\u8ddd\u79bb\uff0c\u90a3\u600e\u4e48\u529e\uff1f\u7ee7\u7eed\u6bd4\u8f83\u66f4\u5c0f\u4e24\u4e2a\u5e73\u9762\u4e2d\u95f4\u7684\u70b9\u5457\u3002\n\n\n~~\u597d\uff0c\u9898\u505a\u5b8c\u4e86~~\n\u8fd8\u6709\u70b9\u61f5\u662f\u4e0d\u662f\uff1f\n\u90a3\u54b1\u4eec\u5462\u91cd\u65b0\u634b\u4e00\u4e0b\uff0c\n\u7b2c\u4e00\u6b65\uff1a\u628a\u9898\u76ee\u5206\u6210\u4e24\u4e2a\u5de6\u53f3\u4e24\u4e2a\u9762\u3002\n\u7b2c\u4e8c\u6b65\uff1a\u5206\u522b\u6c42\u51fa\u5de6\u53f3\u4e24\u4e2a\u5e73\u9762\u7684\u6700\u8fd1\u70b9\u5bf9\n\u7b2c\u4e09\u90e8\uff1a\u770b\u4e24\u4e2a\u5e73\u9762\u4e2d\u95f4\u7684\u70b9\u6709\u6ca1\u6709\u6bd4\u521a\u624d\u90a3\u4e2a\u6700\u8fd1\u8ddd\u79bb\u8fd8\u8fd1\u7684\u3002\n~~\u9898\u505a\u5b8c\u4e86~~\n\u597d\uff0c\u90a3\u73b0\u5728\u53ea\u6709\u7b2c\u4e8c\u6b65\u54b1\u4eec\u4e0d\u4f1a\u662f\u5427\uff1f\n\uff1f\uff1f\uff1f\uff1f\uff1f\u53d1\u73b0\u4e86\u6ca1\uff0c\u7b2c\u4e8c\u6b65\u548c\u9898\u76ee\u4e00\u6837\u5427\uff1f\n\n\u662f\u4e0d\u662f\u53d1\u73b0\u70b9\u89c4\u5f8b\u4e86\uff1f\n\n\n\u8fd9\u5c31\u662f\u4e86\uff0c\u5206\u6cbb\u7684\u601d\u60f3\n\n\u4e0a\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\n#define Inf 1<<31-1\nstruct node{\n\tdouble x;\n\tdouble y;\n};\nstruct node point[200005];\nint mpt[300005];\ndouble dis(node a,node b)\n{\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));//\u4e0d\u89e3\u91ca\uff0c\u4e0d\u4f1a\u81ea\u5df1\u53bb\u9762\u58c1 \n}\nbool cmp1(node a,node b)\n{\n\tif(a.x==b.x)return a.y<b.y;\n\treturn a.x<b.x;\n}//\u7b2c\u4e00\u4e2a\u6392\u5e8f\u662f\u6309\u7167x\u5750\u6807\u6392\u5e8f\uff0c\u6392\u5e8f\u4ee5\u540e\u624d\u597d\u5206\u5de6\u53f3\u5e73\u9762 \nbool cmp2(int a,int b)\n{\n\treturn point[a].y<point[b].y;\n}//\u7b2c\u4e8c\u4e2a\u6392\u5e8f\u662f\u9009\u62e9\u4e2d\u95f4\u7684\u70b9\uff0c\u4e0d\u61c2\u5f97\u5f80\u4e0b\u770b \ndouble run(int left,int right)\n{\n\tint d=Inf; \n\tif(left==right)return d;//\u5982\u679c\u81ea\u5df1\u548c\u81ea\u5df1\u7684\u8ddd\u79bb\u6700\u8fd1\uff0c\u90a3\u8fd9\u9898\u5c31\u53d8\u6210\u5165\u95e8\u4e86\uff0c\u76f4\u63a5cout<<0.0000<<endl\u5c31\u8fc7\u4e86\u3002\u3002\u3002\u6240\u4ee5\u54b1\u4eec\u628a\u81ea\u5df1\u548c\u81ea\u5df1\u7684\u8ddd\u79bb\u8bbe\u7f6e\u4e3a\u6b63\u65e0\u7a77 \n\tif(left+1==right)return dis(point[left],point[right]);//\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u95f4\u6ca1\u6709\u4efb\u4f55\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u6c42\u8ddd\u79bb\u5c31\u662f\u4e86 \n\tint mid=(left+right)>>1;//\u5982\u679c\u4e2d\u95f4\u8fd8\u6709\u5176\u4ed6\u70b9\uff0c\u90a3\u5c31\u518d\u4e2d\u95f4\u5206\u5f00\u3002 \n\tdouble d1=run(mid,right);//\u627e\u5de6\u8fb9\u7684\u6700\u5c0f\u8ddd\u79bb \n\tdouble d2=run(left,mid-1);//\u627e\u53f3\u8fb9\u7684\u6700\u5c0f\u8ddd\u79bb \n\tdouble minn=min(d1,d2);//\u6c42\u51fa\u4e24\u4e2a\u6700\u5c0f\u8ddd\u79bb\u8c01\u66f4\u5c0f \n\tint k=0;\n\tfor(int i=left;i<=right;i++)\n\t{\n\t\tif(fabs(point[mid].x-point[i].x)<=minn)\n\t\t{\n\t\t\tmpt[++k]=i;\n\t\t}\n\t}//\u8fd8\u8bb0\u5f97\u521a\u624d\u8bb2\u8fc7\uff0c\u6709\u53ef\u80fd\u5728\u4e24\u4e2a\u5e73\u9762\u4e2d\u95f4\u8fd8\u6709\u5176\u4ed6\u7684\u66f4\u5c0f\u8ddd\u79bb\u561b\uff1f\u8fd9\u4e2a\u5c31\u662f\u6309\u7167x\u5750\u6807\u627e\u53ef\u80fd\u51fa\u73b0\u7684\u70b9 \n\tsort(mpt+1,mpt+k+1,cmp2);//\u6309\u8fd9\u4e9b\u70b9\u7684y\u5750\u6807\u6392\u5e8f \n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tfor(int j=i+1;j<=k && point[mpt[j]].y-point[mpt[i]].y<=minn;j++)\n\t\t{\n\t\t\tif(minn>=dis(point[mpt[i]],point[mpt[j]]))\n\t\t\t\tminn=dis(point[mpt[i]],point[mpt[j]]);\n\t\t}\n\t}//\u7ebf\u6027\u626b\u63cf\uff0c\u627e\u8fd9\u4e9b\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb \n\treturn minn;\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>point[i].x>>point[i].y;\n\t}\n\tsort(point+1,point+n+1,cmp1);\n\tprintf(\"%.4lf\",run(1,n));\n\treturn 0;\n}\n```\n",
        "postTime": 1564658266,
        "uid": 189657,
        "name": "kcs007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u6211\u7684\u662f\u4e00\u79cd\u7384\u5b66\u7b97\u6cd5\uff1a\n\n**\u76f4\u63a5\u627e**\n\n\u6309\u7167\u6a2a\u7eb5\u5750\u6807\uff0c\u6392\u4e2a\u5e8f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5f80\u540e\u627ek\u4e2a\u70b9\uff08\u8fd9\u4e2ak\u81ea\u5df1\u5b9a\uff09\n\n\u672c\u9898n\u662f\u4e8c\u5341\u4e07\uff0c\u5e38\u6570\u5c0f\u70b9\u7684\u8bdd\u80fd\u628ak\u5347\u5230100\n\n\uff08\u672c\u9898\u6570\u636e\u6c34\u7206\u4e86\uff0c\u6211\u5728k=5\u65f6\u5c31A\u4e86\u8fd9\u9053\u9898\uff09\n\n\u6bcf\u56de\uff0c\u66f4\u65b0ans\n\n\u5176\u5b9e\u5c31\u662f\u7a0d\u5fae\u4f18\u5316\u4e00\u4e0bO(n2)\u505a\u6cd5\n\n\u4ee3\u7801\u597d\u7b80\u5355\u7684\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\n\nstruct point {double x, y;} a[200010];\ndouble dist (point a, point b) {return sqrt ((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));}\nbool cmp (point a, point b) {return a.x < b.x || (a.x == b.x && a.y < b.y);}\ndouble ans = (1 << 30) + 0.01;\nint n;\n\nint main() {\n    scanf (\"%d\", &n);\n    for (register int i = 1; i <= n; i ++)\n        scanf (\"%lf%lf\", &a[i].x, &a[i].y);\n    sort (a + 1, a + n + 1, cmp);\n    for (register int i = 1; i < n; i ++) {\n        for (register int j = 1; j <= 5; j ++)//\u6240\u8c13\u7684k\n            ans = min (ans, dist(a[i], a[i + j]));\n    }\n    printf (\"%.4lf\\n\", ans);\n    return 0;\n}\n\n```\n\n\u6211\u7684\u505a\u6cd5\uff0c\u80af\u5b9a\u662f\u9519\u7684\uff08\u6ed1\u7a3d\uff09\n\n\u4f46\u662f\uff0c\u5728\u8003\u8bd5\u65f6\uff0c\u6211\u4eec\u62ff\u5341\u5206\u949f\u7ed9\u7b2c\u4e8c\u9898\u62ff\u4e8680\u4ee5\u4e0a\u7684\u5206\u6570\n\n\u6211\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u662f\u5f88\u503c\u5f97\u7684\uff08\u53cd\u6b63\u672c\u849f\u84bb\u8003\u8bd5\u65f6\u7a0d\u96be\u70b9\u7684\u9898\u603b\u662f\u82b1\u597d\u957f\u65f6\u95f4\uff0c\u8fd8\u7ecf\u5e38\u70b8\u9505\uff09\n\n\uff08\u4f55\u51b5\u8fd9\u9898\u672c\u6765100\u4e5f\u5c31\u662f\u5f88\u6781\u9650\u7684\u6570\u636e\u4e86\uff0c\u4e5f\u5c31\u5dee\u4e0d\u591a\u4e86\uff09\n\n\u79bbNoip\u8fd8\u6709\u4e00\u767e\u6765\u5929\uff0c\u5927\u5bb6\u52a0\u6cb9(/@\"A\"@)/ ",
        "postTime": 1562465356,
        "uid": 162867,
        "name": "shame_djj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u8865\u4e00\u53d1**\u975e\u5206\u6cbb** $O(n\\log n)$ \u89e3\u6cd5\r\n\r\n\u6211\u4eec\u4ee5 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$y$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u7ed9\u70b9\u6392\u5e8f\uff0c\u4f9d\u6b21\u679a\u4e3e\u3002\u5f53\u524d\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u8bb0\u4e3a $d$\u3002\r\n\r\n\u5047\u8bbe\u4e0b\u56fe\u4e2d\u5927\u957f\u65b9\u5f62\u4e3a\u6240\u6709\u70b9\u6240\u5728\u7684\u533a\u57df\u3002\r\n\r\n1. \u8003\u8651\u5bf9\u7c89\u8272\u957f\u65b9\u5f62**\u5185**\u7684\u7eff\u8272\u70b9\u7ef4\u62a4\u4e00\u4e2a\u53ef\u91cd\u96c6\uff08`multiset`\uff09\uff0c\u679a\u4e3e\u5230 $i$ \u65f6\u5148\u628a\u5728\u957f\u65b9\u5f62\u5916\u7684\u70b9\u5220\u53bb\uff1b\u6700\u540e\u5c06 $i$ \u52a0\u5165 `multiset`\u3002\r\n2. \u56e0\u4e3a\u4e24\u4e2a\u9634\u5f71\u6b63\u65b9\u5f62\u4ee5\u5916\u7684\u70b9\u4e00\u5b9a\u4e0d\u80fd\u4e0e $i$ \u6784\u6210\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u53ea\u7528\u679a\u4e3e\u9634\u5f71\u5185\u7684\u70b9\u3002\u4e8e\u662f\u6211\u4eec\u4ee4 `multiset` \u4ee5 $y$ \u4e3a\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\uff0c\u90a3\u4e48\u9634\u5f71\u5185\u6240\u6709\u70b9\u4e00\u5b9a\u8fde\u7eed\uff0c\u6211\u4eec\u53ef\u4ee5 `lower_bound` \u627e\u51fa\u5176\u8d77\u59cb\u70b9\u3002\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/x0z8rt3y.png)\r\n\r\n\u56fe(1) \u548c \u56fe(2) \u5206\u522b\u5bf9\u5e94\u4e0a\u8ff0\u4e24\u70b9\r\n\r\n\u8fd9\u4e2a\u65b9\u6cd5\u597d\u7406\u89e3\uff0c\u4e5f\u597d\u5199\u3002\u4ee3\u7801\uff1a\r\n\r\n```C++\r\n#include<algorithm>\r\n#include<iostream>\r\n#include<cmath>\r\n#include<set>\r\nusing namespace std;\r\n\r\nconst int N = 2e5;\r\nstruct point {double x, y;point(double x=0, double y=0): x(x), y(y){}} a[N];\r\nbool operator < (point a, point b) {return a.y < b.y;}\r\nint main() {\r\n    int n; double d = 2e9; multiset<point> s; cin >> n;\r\n    for (int i=0; i<n; i++) cin >> a[i].x >> a[i].y;\r\n    sort(a, a+n, [](point a, point b){return a.x==b.x?a.y<b.y:a.x<b.x;});\r\n    for (int i=0, j=0; i<n; s.insert(a[i++])) {\r\n        while (j<i && a[j].x<=a[i].x-d) s.erase(a[j++]);\r\n        for (auto it=s.lower_bound(point(a[i].x, a[i].y-d)); it!=s.end()&&it->y<a[i].y+d; it++)\r\n            d = min(d, hypot(a[i].x-it->x, a[i].y-it->y));\r\n    }\r\n    return printf(\"%.4lf\", d), 0;\r\n}\r\n```\r\n\r\nSome Useful Tips:\r\n\r\n1. `multiset` \u4e2d\u5305\u542b\u7c89\u8272\u957f\u65b9\u5f62**\u5185**\u7684\u70b9\u3001\u957f\u65b9\u5f62\u4e0a\u4e0b\u8fb9\u4e0a\u7684\u70b9\u3001\u957f\u65b9\u5f62\u53f3\u4fa7\u8fb9\u4e0a\u4f4d\u4e8e $i$ \u4e0a\u65b9\u7684\u70b9\uff1b\r\n2. 16 \u884c `for` \u5faa\u73af\u4e2d\u7684 `lower_bound` \u53ef\u4ee5\u6539\u4e3a `upper_bound`\uff0c`multiset` \u6539\u4e3a `set`\uff0c\u5c31\u662f\u8981\u5224\u4e24\u70b9\u91cd\u5408\uff0c\u89e3\u4e3a $0$ \u7684\u60c5\u51b5\uff1b\r\n3. 15 \u884c `while` \u5faa\u73af\u4e2d\u7b2c\u4e8c\u4e2a `<=` \u6539\u6210 `<` \u5728\u52a0\u5f3a\u7248\u52a0\u5f3a\u7248\u4e2d\u4f1a\u9519\uff08\u800c\u4e14\u662f\u7b97\u5927\u4e86\uff09\uff0c\u539f\u56e0\u4e0d\u660e\uff0c\u5e0c\u671b\u9ad8\u4eba\u6307\u70b9\u8ff7\u6d25\uff08\u53ef\u80fd\u662f\u7cbe\u5ea6\u7684\u95ee\u9898\uff1f\uff09\r\n4. \u5173\u4e8e\u590d\u6742\u5ea6\u7684\u8bc1\u660e\uff1a\u7531\u4e8e\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u8fdb `multiset` \u4e00\u6b21\uff0c\u800c\u9634\u5f71\u5185\u7684\u70b9\u53ea\u6709\u5e38\u6570\u4e2a\uff08\u8fd9\u91cc\u540c\u5206\u6cbb\u7b97\u6cd5\uff09\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\r\n",
        "postTime": 1640096561,
        "uid": 360214,
        "name": "nalemy",
        "ccfLevel": 6,
        "title": "P1429 \u9898\u89e3"
    },
    {
        "content": "\u849f\u84bb\u4e0d\u4f1a\u5199\u5206\u6cbb,\u53ea\u597d\u7528K-Dtree\u9a97\u5206...\n\n\u65e2\u7136\u7528K-Dtree, \u5c31\u4e0d\u9700\u8981\u4ec0\u4e48\u601d\u8003\u4e86\n\n\u76f4\u63a5\u4e00\u4e2a\u4e00\u4e2a\u70b9\u5728\u6811\u91cc\u627e\u548c\u5b83\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9, \u627e\u5b8c\u4e86\u63d2\u8fdb\u53bb\u5c31\u884c\u4e86\n\nK-Dtree\u627e\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u636e\u8bf4\u662f$O(\\sqrt n)$\u7684, \u6240\u4ee5\u5c31\u53ef\u4ee5\u8fc7\n\n------------\n\n\u8fd8\u6709\u4e00\u79cd\u7528K-Dtree\u7684\u5199\u6cd5\u662f\u4e0d\u63d2\u70b9, \u800c\u662f\u5148\u5efa\u597d\u6811, \u76f4\u63a5\u628a\u70b9\u4e22\u8fdb\u53bb\u627e\n\n\u4f46\u662f\u5bf9\u4e8e\u8fd9\u79cd\u5199\u6cd5, \u627e\u7684\u65f6\u5019\u5982\u679c\u627e\u5230\u76f8\u540c\u7684\u70b9\u8981\u5ffd\u7565\n\n\u8fd8\u662f\u89c9\u5f97\u524d\u4e00\u79cd\u5199\u6cd5\u6bd4\u8f83\u4f18\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,nw,rt,D; double ans=4e18;\nstruct Node {\n  double p[2],mn[2],mx[2]; int l,r;\t//p:\u70b9\tmn,mx:\u5b50\u6811\u533a\u57df\u5750\u6807\u6781\u503c\tl,r:\t\u5b69\u5b50\n  void up(Node &A) {\n    for (int i=0;i<2;++i)\n      mn[i]=min(mn[i],A.p[i]),mx[i]=max(mx[i],A.p[i]);\n  }\n} t[50005];\ndouble get(int u) {\t//\u5f53\u524d\u70b9nw\u5230u\u7684\u5b50\u6811\u533a\u57df\u7684\u6700\u5c0f\u53ef\u80fd\u8ddd\u79bb\n  if (!u) return 4e18; double s=0;\n  for (int i=0;i<2;++i) {\n    double x=max(t[nw].p[i]-t[u].mx[i],0.0)\n        +max(t[u].mn[i]-t[nw].p[i],0.0);\n    s+=x*x;\n  }\n  return s;\n}\ndouble dis(int u) {\t//\u5f53\u524d\u70b9nw\u5230\u70b9u\u7684\u8ddd\u79bb\n  double s=0;\n  for (int i=0;i<2;++i) {\n    double x=t[nw].p[i]-t[u].p[i];\n    s+=x*x;\n  }\n  return s;\n}\nvoid Query(int u) {\t//K-Dtree\u7684\u8be2\u95ee\n  if (!u) return; ans=min(ans,dis(u));\n  double lv=get(t[u].l),rv=get(t[u].r);\n  if (lv>rv) {\n    if (rv<ans) Query(t[u].r); if (lv<ans) Query(t[u].l);\n  }\n  else {\n    if (lv<ans) Query(t[u].l); if (rv<ans) Query(t[u].r);\n  }\n}\nvoid Ins(int &u,int d) {\t//\u4e8c\u53c9\u67e5\u627e\u6811\u5f0f\u7684\u63d2\u70b9\n  if (!u) return void(u=nw);\n  Ins(t[nw].p[d]<=t[u].p[d] ? t[u].l : t[u].r,d^1);\n  t[u].up(t[nw]);\n}\nint main() {\n  scanf(\"%d\",&n);\n  for (int i=1;i<=n;++i) {\n    scanf(\"%lf%lf\",&t[i].p[0],&t[i].p[1]);\n    for (int j=0;j<2;++j) t[i].mn[j]=t[i].mx[j]=t[i].p[j];\n  }\n  random_shuffle(t+1,t+n+1);\t//\u6211\u597d\u61d2\u554a\u4e0d\u60f3\u5199\u91cd\u6784\u5c31rand\u4e00\u4e0b\u987a\u5e8f\u5427\u53cd\u6b63\u7ed3\u679c\u4e00\u6837\n  for (nw=1;nw<=n;++nw) Query(rt),Ins(rt,0);\n  printf(\"%.2lf\\n\",sqrt(ans));\n}\n```",
        "postTime": 1525772101,
        "uid": 49920,
        "name": "\u8e72\u5728\u4e1b\u4e2d\u7b11",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "# \u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e2a\u7384\u5b66\u65b9\u6cd5\n  \u5199\u6cd5\u6781\u5176\u7b80\u5355\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u96be\u4ee5\u8ba1\u7b97\uff0c\u5341\u5206\u7384\u5b66\u3002\n  \n  ## \u7b2c\u4e00\u6b65\n\u5c06\u4e2a\u70b9\u4ee5\u6a2a\u5750\u6807\u4ee5\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u7eb5\u5750\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\n## \u7b2c\u4e8c\u6b65\n\u679a\u4e3e\u6bcf\u4e2a\u70b9\u548c\u4ed6\u4e4b\u540e\u7684\u70b9\uff0c\u4e0d\u65ad\u66f4\u65b0\u5f53\u524d\u6700\u5c0f\u8ddd\u79bbans\uff0c\u5982\u679c\u5f53\u524d\u4e24\u70b9\u6a2a\u5750\u6807\u4e4b\u5dee\u5df2\u7ecf\u5927\u4e8eans\uff0c\u9000\u51fa\u5f53\u524d\u5faa\u73af\u3002\u663e\u7136\u540e\u9762\u7684\u70b9\u540e\u5f53\u524d\u70b9\u7684\u8ddd\u79bb\u7edd\u5bf9\u5927\u4e8eans\u3002\n```cpp\n#include<stdio.h>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n,len;\nstruct point{\n\tdouble x;\n\tdouble y;\n} pointset[100005];\ndouble ans=0,anans=9999999999;\ndouble dis(point a,point b)\n{\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\nbool cmp2(point a,point b)\n{\n\treturn  a.x!=b.x?a.x<b.x:a.y<b.y;\n}\nvoid work()\n{\n\t\n\tsort(pointset,pointset+n,cmp2);\n\tfor(int i=0;i<n-1;i++)\n\t\tfor(int j=i+1;j<n;j++)\n\t\t{\n\t\t\tanans=min(dis(pointset[i],pointset[j]),anans);\n\t\t\tif(pointset[j].x-pointset[i].x>anans)\n\t\t\tbreak;\n\t\t}\n}\nint main()\n{\n\tint i,j,k;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%lf %lf\",&pointset[i].x,&pointset[i].y);\n\twork();\n\tprintf(\"%.4lf\",anans);\n\treturn 0;\n}\n```\n\u4ee3\u7801\u957f\u5ea6\u6781\u5c0f\u4e14\u975e\u5e38\u597d\u5199\uff0c\u901f\u5ea6\u4f1a\u6bd4\u5206\u6cbb\u6162\u4f46\u7edd\u5bf9\u53ef\u4ee5\u7a33\u8fc7\u3002\n",
        "postTime": 1533801916,
        "uid": 49048,
        "name": "hylhyl",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u56e0\u4e3a\u6570\u636e\u6c34\uff0c\u7136\u540e\u88ab\u6211\u7528\uff08\u968f\u673a\u5316\u8d2a\u5fc3\uff1f\uff09\u6a21\u62df\u9000\u706b\uff08\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\uff09\u6c34\u8fc7\u53bb\u4e86\uff0c\u4e3b\u8981\u662f\u4e0d\u77e5\u9053\u5206\u6cbb\u600e\u4e48\u5199$QAQ$\u3002\u3002\n\n\u9996\u5148\u8003\u8651\u6309\u7167x\u5750\u6807\u6392\u5e8f\u3002\n\n\u7136\u540e\u8003\u8651\u968f\u673a\u4e00\u4e2a\u70b9\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8981\u6c42\u6700\u8fd1\u7684\u70b9\u5bf9\uff0c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e24\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\u5dee\u8ddd\u4f1a\u6bd4\u8f83\u5c0f\u3002\u6240\u4ee5\u8003\u8651\u8bbe\u7f6e\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u6211\u4eec\u5e94\u8be5\u968f\u673a\u7684\u5176\u4ed6\u70b9\u5728\u4ed6\u5de6\u53f3\u6d6e\u52a8\u591a\u5c11\u3002(\u6211\u5199\u7684\u662f$12(dela=12)$)\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u968f\u673a\u51fa\u6765\u7684\u7b54\u6848\uff0c\u5982\u679c\u6bd4\u5f53\u524d\u7b54\u6848\u4f18\u6211\u4eec\u5c31\u8f6c\u79fb$from$\uff0c\u5426\u5219\u5c31\u4e00\u5b9a\u6982\u7387\u8f6c\u79fb$from$(\u5176\u5b9e\u8fd9\u53e5\u8bdd\u5b8c\u5168\u4e0d\u9700\u8981\uff0c\u53ea\u8981\u968f\u673a\u679a\u4e3e\u5c31\u597d\u4e86\uff0c\u4f46\u52a0\u4e0a\u8fd9\u53e5\u662f\u4e3a\u4e86\u51cf\u5c11\u91cd\u590d\u91cf)\n\n\u8bf4\u5b9e\u8bdd\uff0c\u6211\u70b9\u5b50\u4f4e\uff0c\u5f00\u7740O2\u624d\u8dd1\u8fc7\u53bb\u7684\u3002\u3002\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\uff1a\n\n\n\n------------\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 2e6 + 5;\nstruct X{\n    double x, y;\n    bool operator < (const X& a){\n        return (x == a.x) ? y < a.y : x < a.x;\n    }\n}e[N];\ndouble T = 1966, delta = 0.99995, tt = 1e-18;//\u57fa\u672c\u53c2\u6570\ndouble num = 9999999;//\u521d\u59cb\u7b54\u6848\nint n, dela = 12;//\u6d6e\u52a8\u7a0b\u5ea6\uff08\u5728\u5de6\u53f312\u4e2a\u7684\u6837\u5b50\u6d6e\u52a8\uff09\ndouble check(int x, int y){\n    double ans = 0, xx = e[x].x - e[y].x, yy = e[x].y - e[y].y;\n    ans = xx * xx + yy * yy;\n    return sqrt(ans);\n}\nint qwq(int x){\n    if(rand() % 2) return -x;\n    return x;\n}\nvoid SA(){\n    double t = T;\n    int from, to;\n    from = rand() % n + 1, to = from + rand() % dela + 1; \n    double DE;\n    while(t > tt){\n        to = qwq(rand() % dela) + from;//\u968f\u673a\u51fa\u6765\u9644\u8fd1\u4e00\u4e2a\u70b9\n        if(to < 0) to = 1;//\u5904\u7406\u6ea2\u51fa\n        if(to >= n) to = n;//\u5904\u7406\u6ea2\u51fa\n        if(to == from)//\u5982\u679c\u76f8\u540c\u5c31\u91cd\u65b0\u968f\u673a\u4e00\u4e2a\u70b9\n            continue;\n        double ans = check(from, to);\n        DE = num - ans;\n        if(DE > 0){//\u5982\u679c\u65b0\u7b54\u6848\u66f4\u4f18\uff0c\u5c31\u63a5\u53d7\n            num = ans;\n            from = to;\n        }\n        else if(exp(-DE / t)*RAND_MAX > rand()){//\u5426\u5219\u4ee5\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\n            from = to;\n        }\n        t *= delta;\n    }\n}\nvoid input(){\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++){\n  \t\tscanf(\"%lf%lf\", &e[i].x, &e[i].y);\n    }\n    int qaq = 12;\n    num = 999999;\n    sort(e + 1, e + n + 1);\n    while(qaq--){//\u8dd112\u904d\n        SA();\n    }\n    printf(\"%.4lf\", num);\n    return ;\n}\nsigned main()\n{\n    srand(time(0));\n    input();\n    return 0;\n}\n```\n\n\u5b9e\u9645\u4e0a\uff0c\u4e0a\u9762\u8fd9\u4e2a\u505a\u6cd5\u5e76\u4e0d\u662f\u7279\u522b\u4f18\u79c0\uff0c\u56e0\u4e3a\u5e38\u5e38\u4f1a\u56e0\u4e3a\u5f53\u524d\u7b54\u6848\u5e76\u4e0d\u5927\uff0c\u4f46\u5374\u968f\u673a\u4e0d\u51fa\u4e00\u4e2a\u66f4\u597d\u7684\u7b54\u6848\u800c\u5361\u58f3\u3002\u6240\u4ee5\u6700\u597d\u6539\u4e0b\u5199\u6cd5\u2014>(\u628a\u4ee5\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\u53bb\u6389\uff0c\u6539\u4e3a\u968f\u673a\u4e00\u4e2a\u7aef\u70b9)\u8fd9\u6837\u53c2\u6570\u5c31\u53ef\u4ee5\u5c0f\u4e00\u70b9\uff0c\u5e94\u8be5\u53ef\u4ee5\u5feb\u4e00\u4e9b\n\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 2e6 + 5;\nstruct X{\n    double x, y;\n    bool operator < (const X& a){\n        return (x == a.x) ? y < a.y : x < a.x;\n    }\n}e[N];\ndouble T = 1966, delta = 0.991, tt = 1e-18;\ndouble num = 9999999;\nint n, dela = 12;\ndouble check(int x, int y){\n    double ans = 0, xx = e[x].x - e[y].x, yy = e[x].y - e[y].y;\n    ans = xx * xx + yy * yy;\n    return sqrt(ans);\n}\nint qwq(int x){\n    if(rand() % 2) return -x;\n    return x;\n}\nvoid SA(){\n    double t = T;\n    int from, to;\n    from = rand() % n + 1, to = from + rand() % dela + 1; \n    double DE;\n    while(t > tt){\n    \tfrom = rand() % n + 1; \n        to = qwq(rand() % dela) + from;\n        if(to < 0) to = 1;\n        if(to >= n) to = n;\n        if(to == from)\n            continue;\n        double ans = check(from, to);\n        DE = num - ans;\n        if(DE > 0){\n            num = ans;\n            from = to;\n        }\n        else if(exp(-DE / t)*RAND_MAX > rand()){\n            from = to;\n        }\n        t *= delta;\n    }\n}\nvoid input(){\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++){\n  \t\tscanf(\"%lf%lf\", &e[i].x, &e[i].y);\n    }\n    int qwq = 12;\n    num = 999999;\n    sort(e + 1, e + n + 1);\n    while(qwq--){\n        SA();\n    }\n    printf(\"%.4lf\", num);\n    return ;\n}\nsigned main()\n{\n    srand(time(0));\n    input();\n    return 0;\n}\n```\n\nemm\uff0c\u4e0b\u9762\u4e00\u4f4d\u8001\u54e5\u8bc4\u8bba\u4e86\u597d\u50cf\u6570\u636e\u52a0\u5f3a\u4e86\u7684\u4e9a\u5b50\u3002\n\n\u6211\u9644\u4e00\u4e2a\u65b0\u53c2\u6570\u5427...dela = 20, delta = 0.9998\uff0c\u73b0\u9636\u6bb5\u662f\u53ef\u4ee5\u7ee7\u7eed\u901a\u8fc7\u7684",
        "postTime": 1541223469,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9"
    },
    {
        "content": "~~\u6765\u8fd9\u6cbe\u6cbe\u5927\u4f6c\u4e4b\u6c14~~\n\n# \u5927\u4f6c\u5199\u7684\u662f\u5728\u592a\u725b\u903c\u4e86\n\n\u8ba9\u6211\u6765\u5199\u4e00\u7bc7\u840c\u65b0\u6613\u61c2\u7684\uff0c\n\u9996\u5148\u8fd9\u662f\u4e00\u9053\u5206\u6cbb\u9898\uff0c\n\u7528\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\uff0c\n\u5148\u628a\u8fd9\u4e9b\u70b9\u6309\u6a2a\u5750\u6807\u4ece\u5de6\u5230\u53f3\u6392\u4e00\u904d\uff0c\n\u518d\u628a\u8fd9\u4e9b\u70b9\u4ece\u4e2d\u95f4\u5f00\u59cb\u5de6\u53f3\u5206\u6210\u4e24\u6bb5\u7684\uff0c\n\u518d\u628a\u5de6\u8fb9\u4e00\u6bb5\u548c\u53f3\u8fb9\u4e00\u6bb5\u90fd\u5206\u6210\u4e24\u7aef\n\u3002\n\u8fd9\u6837\u4e00\u76f4\u5206\u4e0b\u53bb\n\uff0c\n\u76f4\u5230\u4e00\u6bb5\u7684\u70b9\u6570\u53ea\u6709\u4e00\u4e2a\u6216\u4e24\u4e2a\n\uff0c\n\u4e24\u4e2a\u70b9\u8fd4\u56de\u8fd9\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\n\n# \u6ce8\u610f\uff01\u4e00\u4e2a\u70b9\u8981\u8fd4\u56de\u65e0\u7a77\u5927\n\n\u56e0\u4e3a\u4e00\u4e2a\u70b9\u6ca1\u6709\u8ddd\u79bb\n\uff0c\n\u7136\u540e\u518d\u6bd4\u8f83\u5de6\u53f3\u4e24\u6bb5\u7684\u6700\u5c0f\u8ddd\u79bb\u53d6\u66f4\u5c0f\u7684.\n\n# \u91cd\u70b9\u6765\u4e86\uff01\n\n\u4e07\u4e00\u8fd9\u4e24\u4e2a\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9\u4e0d\u5728\u540c\u4e00\u6bb5\u91cc\u5462\n\uff0c\n\u5c31\u50cf\u8fd9\u6837\uff1a\n\u5047\u8bbe\u6709a,b,c,d\u8fd9\u56db\u4e2a\u70b9\uff0c\u8ddd\u79bb\u6700\u8fd1\u7684\u662fb,c\u4e24\u70b9\n\uff0c\n\u7b2c\u4e00\u6b21\u5206\u5b8c\u65f6\u662f\u8fd9\u6837\u7684:a,b|c,d\n\uff0c\n\u521a\u597d\u9694\u5f00\u4e86b\u548cc\n\u3002\n~~\u51c9\u51c9\u591c\u8272\u4e3a\u4f60\u601d\u5ff5\u6210\u6cb3~~\n\n\u6240\u4ee5\u6211\u4eec\u8981\u589e\u52a0\u4e00\u6b65\n\uff0c\n\u5728\u5de6\u6bb5\u7684\u70b9\u548c\u53f3\u6bb5\u7684\u70b9\u7684\u8ddd\u79bb\u662f\u5426\u5c0f\u4e8e\u76ee\u524d\u6700\u77ed\u8ddd\u79bb\n\uff0c\n\u5982\u679c\u4f60\u5199\u4e2a\u66b4\u529b\u76f4\u63a5TLE\u3002\n\n# \u4f46\u6211\u4eec\u53d1\u73b0\uff1a\u5982\u679c\u5de6\u6bb5\u7684\u70b9\u548c\u53f3\u6bb5\u7684\u70b9\u8ddd\u79bb\u6bd4\u76ee\u524d\u8ddd\u79bb\u6700\u77ed\u7684\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u8fd8\u8981\u77ed\u65f6\uff0c\u8fd9\u4e24\u4e2a\u70b9\u6a2a\u5750\u6807\u79bb\u5de6\u53f3\u4e24\u6bb5\u548c\u8d77\u6765\u7684\u8fd9\u4e00\u5927\u6bb5\u7684\u6700\u4e2d\u95f4\u7684\u70b9\u7684\u6a2a\u5750\u6807\u7684\u8ddd\u79bb\u4e00\u5b9a\u8981\u5c0f\u4e8e\u76ee\u524d\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u8fd9\u6837\u5c31\u80fd\u7f29\u5c0f\u8303\u56f4\u4e86\n\uff0c\n\u8d34\u4e0a\u849f\u84bb\u7684\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>//\u534e\u4e3d\u7684\u5f00\u5934\nusing namespace std;\nstruct str{//\u70b9\u7684\u7ed3\u6784\u4f53\n\tint x;//\u6a2a\u5750\u6807\n  \tint y;//\u7eb5\u5750\u6807\n};\nstr s[200001];//\u5b58\u5165\u6240\u6709\u7684\u70b9\nstr smid[1000];//\u79bb\u4e2d\u70b9\u6a2a\u5750\u6807\u8ddd\u79bb\u5c0f\u4e8e\u76ee\u524d\u6700\u5c0f\u8ddd\u79bb\u7684\u70b9\nbool cmp(str a,str b){\n\treturn a.x<b.x;//\u4ece\u5de6\u5230\u53f3\u6392\u5e8f\n}\ndouble g(str a,str b){\n\treturn sqrt((abs(pow(a.y-b.y,2))+abs(pow(a.x-b.x,2))));//\u8ba1\u7b97\u8ddd\u79bb\n}\ndouble dis(int l,int r){\n\tif(l==r-1){\n\t\treturn g(s[l],s[r]);//\u5982\u679c\u53ea\u5269\u4e24\u4e2a\u70b9\uff0c\u8fd4\u56de\u8ddd\u79bb\n\t}else if(l==r){\n\t\treturn 99999999;//\u5982\u679c\u53ea\u5269\u4e00\u4e2a\u70b9\uff0c\u8fd4\u56de\u65e0\u7a77\u5927\n\t}else{\n\t\tint mid=(l+r)/2,tmp=0;//\u7b2c\u4e00\u4e2a\u662f\u4e2d\u70b9\uff0c\u7b2c\u4e8c\u4e2a\u662f\u79bb\u4e2d\u70b9\u6a2a\u5750\u6807\u8ddd\u79bb\u5c0f\u4e8e\u76ee\u524d\u6700\u5c0f\u8ddd\u79bb\u7684\u70b9\u7684\u6570\u91cf\n\t\tdouble min1=min(dis(l,mid),dis(mid+1,r));//\u6c42\u51fa\u6700\u5c0f\u8ddd\u79bb\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tif(fabs(s[i].x-s[mid].x)<min1){//fabs\u6c42\u5c0f\u6570\u7684\u7edd\u5bf9\u503c\uff0c\u5224\u65ad\u70b9\u79bb\u4e2d\u70b9\u6a2a\u5750\u6807\u8ddd\u79bb\u662f\u5426\u5c0f\u4e8e\u76ee\u524d\u6700\u5c0f\u8ddd\u79bb\n\t\t\t\tsmid[tmp]=s[i];//\u5b58\u5165\u6570\u7ec4\n\t\t\t\ttmp++;//\u522b\u5fd8\u4e86++\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<tmp;i++){\n\t\t\tfor(int j=0;j<tmp;j++){\n\t\t\t\tif(i!=j&&g(smid[i],smid[j])<min1){\n\t\t\t\t\tmin1=g(smid[i],smid[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}//\u7528\u66b4\u529b\u627e\u6709\u6ca1\u6709\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8e\u76ee\u524d\u6700\u5c0f\u8ddd\u79bb\n\t\treturn min1;//\u6700\u540e\u8981\u8fd4\u56de\n\t}\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d %d\",&s[i].x,&s[i].y);\n\t}//\u8f93\u5165\n\tsort(s,s+n,cmp);//\u6a2a\u5750\u6807\u4ece\u5de6\u5f80\u53f3\u6392\u5e8f\n\tprintf(\"%.4lf\",dis(0,n-1));//\u8981\u4fdd\u7559\u56db\u4f4d\u5c0f\u6570\n\treturn 0;//\u7ed3\u675f\n}\n```\n\n~~\u5e0c\u671b\u7ba1\u7406\u5458\u5927\u5927\u80fd\u8fc7~~",
        "postTime": 1568708763,
        "uid": 129867,
        "name": "I_AK_IOI\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u6211\u4eec\u4e0d\u53d1\u626c\u4eba\u7c7b\u667a\u6167\u4e86\u3002\n\n\u6bd5\u7adf\u65cb\u8f6c\u592a\u6162 ~~\uff0c\u800c\u4e14\u6211\u542c\u4e0d\u61c2\u3002~~\n\n\u7ed9\u51fa\u8fd9\u9053\u9898\u7684\u7ec8\u6781\u89e3\u6cd5\uff1a\n\n**\u76f4\u63a5\u6309 $x$ \u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9\u5f80\u540e\u53d6 $4$ \u4e2a\u70b9\u6bd4\u8f83\u8ddd\u79bb\u3002**\n\n\u56e0\u4e3a\u6839\u636e\u76f4\u89c9\uff0c\u4e24\u4e2a\u70b9\u7684 $x$ \u5750\u6807\u4e0d\u4f1a\u76f8\u5dee\u592a\u8fdc\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n\u8fd9\u6837\u8dd1\u5f97\u98de\u5feb\uff0c\u5e38\u6570\u5c0f\uff08\u6bd5\u7adf\u662f $\\texttt{sort}$ \uff0c\u8fd8\u4e0d\u5e26\u4e09\u89d2\u51fd\u6570\u8ba1\u7b97\u7684\u5e38\u6570 \uff09\u3002\n\n\u5f53\u7136\uff0c\u8fd9\u91cc\u518d\u7ed9\u51fa\u63d0\u9ad8\u6210\u529f\u7387\u7684\u65b9\u6cd5\uff1a\n\n* \u5f80\u540e\u53d6\u7684\u70b9\u591a\u4e00\u4e9b\n\n* \u5982\u679c\u6309 $x$ \u5750\u6807 \u6392\u5e8f\u4e0d\u884c\uff0c\u90a3\u5c31\u518d\u5bf9 $y$ \u5750\u6807\u6392\u4e00\u6b21\u5e8f\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int s=4;\nstruct note\n{\n\tdouble x,y;\n}a[200005];\nbool cmp(note x,note y)\n{\n\treturn x.x<y.x;\n}\ndouble cover(note x,note y)\n{\n\treturn sqrt((x.x-y.x)*(x.x-y.x)+(x.y-y.y)*(x.y-y.y));\n}\nint main()\n{\n\tint i,j,n;\n\tdouble mn=1e20;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lf%lf\",&a[i].x,&a[i].y); \n\tsort(a,a+n,cmp);\n\tfor(i=0;i<n;i++)\n\t\tfor(j=i+1;j<n&&j<i+s;j++)\n\t\t\tmn=min(mn,cover(a[i],a[j]));\n\tprintf(\"%.4f\",mn);\n} \n```\n\u5b8c\u3002",
        "postTime": 1584080182,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5f88\u96be\u5f88\u96be\u5f88\u96be\u5f88\u96be\u5f88\u96be\u7684\u9898\n\n\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u60f3\u5230\u7528\u4e8c\u5206\u5427\uff1f\n\nO(\u2229\\_\u2229)O\u7c73\u5154\n\n\u6240\u4ee5\u6765\u770b\u770b\u600e\u4e48\u7528\u4e8c\u5206\u7684\u5427\n\n\u9996\u5148\u561b\uff0c\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u6bcf\u4e24\u4e2a\u53bb\u7b97\u8ddd\u79bbO(n^2)\u7684\u590d\u6742\u5ea6\u80af\u5b9a\u4f1a\u8d85\u65f6\u7684\n\n\u6240\u4ee5\u4e8c\u5206\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u53ef\u4ee5\u5c06\u65f6\u95f4\u964d\u5230O(nlog2n)\uff08\u4e8c\u5206log2n\u7136\u540e\u6bd4\u8f83\u5404\u4e2a\u70b9\u7684\u8ddd\u79bb\u4e0e\u7b54\u6848\u7ea6\u662fn\uff09\n\n\u4e8e\u662f\u2014\u2014\u600e\u4e48\u5206\n\n\u2714\u5c06\u5404\u4e2a\u70b9\uff08\u7ed3\u6784\u4f53\uff09\u6309x\u7684\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u2714\u9996\u5148\u8fd0\u7528\u4e8c\u5206\u601d\u60f3\u5c06\u70b9\u96c6\u5408\u5206\u5230\u6700\u540e\u53ea\u5269\u4e24\u4e2a\u70b9\u7684\u65f6\u5019\n\n\u2714\u7136\u540e\u7528\u8fd9\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u66f4\u65b0\u7b54\u6848\uff08\u7b54\u6848\u521d\u59cb\u5316\u4e3a\u65e0\u9650\u5927\uff09\n\n\u2714\u7136\u540e\u6211\u4eec\u8981\u627e\u5230\u4e8c\u5206\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u6848\u2014\u2014\u6bcf\u6b21\u5206\u5230\u4e00\u4e9b\u70b9\u65f6\uff0c\u627e\u5230\u8fd9\u4e9b\u70b9\u6807\u53f7\u7684\u4e2d\u95f4\uff08\u56e0\u4e3a\u70b9\u90fd\u6392\u597d\u5e8f\u4e86\uff0c\u6240\u4ee5\u5176\u5b9e\u4e5f\u5c31\u662f\u627e\u5230x\u8f74\u4e0a\u4e00\u6761\u5206\u754c\u7ebf\uff09\uff0c\u5c06\u6574\u4e2a\u70b9\u7684\u96c6\u5408\u5927\u81f4\u5747\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\n\n\u2714\u5728\u5206\u754c\u7ebf\u7684\u53f3\u4fa7\uff0c\u5c06\u4e0e\u5206\u754c\u7ebf\u7684\u8ddd\u79bb\u5c0f\u4e8eans\u7684\u70b9\u7eb3\u5165\u5230\u4e00\u4e2a\u8f85\u52a9\u7ed3\u6784\u4f53\u91cc\u9762\n\n\u2714\u5728\u5206\u754c\u7ebf\u7684\u5de6\u4fa7\uff0c\u4e0d\u65ad\u679a\u4e3e\u70b9\uff0c\u679a\u4e3e\u5230\u79bb\u5206\u754c\u7ebf\u5c0f\u4e8eans\u7684\u70b9\u65f6\uff0c\u4e0e\u8f85\u52a9\u7ed3\u6784\u4f53\u4e2d\u7684\u70b9**\u6328\u4e2a**\uff08\u7b49\u4f1a\u6709\u89e3\u91ca\uff09\u5224\u65ad\u5176\u8ddd\u79bb\u6709\u6ca1\u6709\u5c0f\u4e8eans\uff0c\u66f4\u65b0ans\n\n\n\u6ce8\u610f\u4e0b\u7528double**\u522b\u6389\u4e86\u7cbe\u5ea6**\uff0c\u7136\u540e\u683c\u5f0f\u5316\u8f93\u51fa\u5c31\u597d\u4e86\n\n\u7136\u540e\u6211\u7684\u4ee3\u7801\u4e2d\uff0c\u4e3a\u4e86\u907f\u514d\u8d85\u65f6\uff0c\u8fd8\u662f\u5f88\u52aa\u529b\u5730\u81ea\u5df1\u5199\u4e86\u4e2a\u5b9e\u6570\u7684\u8f93\u5165\u4f18\u5316\u6ca1\u60f3\u5230\u4e5f\u8fc7\u4e86\n\n\n\u89e3\u91ca\u4e0b\u8fd9\u4e2a\u201c\u6328\u4e2a\u201d\n\n\u6709\u4e9b\u9898\u89e3\u4e2d\u5728\u6bcf\u6b21\u66f4\u65b0\u5b8cans\u540e\u90fd\u5c06\u8fd9\u4e9b\u70b9\u6309y\u8f74\u4ece\u5c0f\u5230\u5927\u6392\u4e86\u5e8f\uff0c\u7136\u800c\u6211\u5e76\u4e0d\u77e5\u9053\u8fd9\u6709\u4ec0\u4e48\u7528\uff0c\u7167\u7740\u9898\u89e3\u6253\u4e00\u904dWA\u4e86\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u3002\u3002\u8c03\u8bd5\u4e00\u756a\u540e\u611f\u89c9\u771f\u7684\u6ca1\u4ec0\u4e48\u5375\u7528\uff0c\u53bb\u6389\u4e86\uff08\u6ce8\u91ca\u90e8\u5206\uff09\u518d\u5728\u6e90\u4ee3\u7801\u4e0a\u7a0d\u52a0\u4fee\u6539\uff0c\u5c31\u8fc7\u4e86\n\n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u8bf7\u6559\u5927\u4f6c\u4e2d\uff08\u8be2\u95ee\u8fd9\u4e2a\u6392\u5e8f\u6709\u4ec0\u4e48\u7528\uff09\n\n\u55ef\uff0c\u8fd9\u4e2a\u6392\u5b8c\u5e8f\u540e\u5f53\u626b\u5230\u4e00\u4e2a\u70b9\u4e0e\u8be5\u70b9\u8ddd\u79bb\u5927\u4e8eans\u65f6\uff0c\u5c31\u53ef\u4ee5\u4e0d\u518d\u626b\u4e86\n\n\u4f46\u662f\uff0c\uff0c\u96be\u9053\u6392\u5e8f\u4e0d\u8981\u65f6\u95f4\u5417\u3002\u3002\u3002\u6240\u4ee5\u53ef\u80fd\u4e5f\u8bb8\u5927\u6982\u6392\u5b8c\u5e8f\u540e\u6709\u90a3\u4e48\u4e00\u4e22\u4e22\u4f18\u5316/\u7b11\u54ed/\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<cstring> \nusing namespace std;\nstruct dian{\n    double x,y;\n}a[200001],b[200001];\nint n;\nint cmpx(const dian&a,const dian&b)\n{\n    if(a.x<b.x) return 1;\n    if(a.x>b.x) return 0;\n    if(a.y<b.y) return 1;\n    return 0;\n}\ndouble read()\n{\n    char ch=getchar();\n    while(ch!='.'&&(ch>'9'||ch<'0')) ch=getchar();\n    int h=0,t=1,b=0;\n    while(ch!='.'&&ch<='9'&&ch>='0')\n    {\n        h=h*10+ch-48;\n        ch=getchar();\n    }\n    if(ch=='.')\n    {\n        ch=getchar();\n        while(ch<='9'&&ch>='0')\n        {\n            b=b*10+ch-48;\n            ch=getchar();\n            t*=10;\n        }\n    }\n    return h+(b*1.000000000)/t;\n}\ndouble mini(double a,double b)\n{\n    return a>b?b:a;\n}\ndouble ans=1000000000;\nvoid merge(int l,int r)\n{\n    if(l==r) return;\n    int mid=(l+r)/2;//\u627e\u5230\u4e2d\u95f4\u4f4d\u7f6e\u7684\u70b9 \n    merge(l,mid);\n    merge(mid+1,r);//\u9012\u5f52\u8c03\u7528 \n    //memset(b,0,sizeof(b));\n    int line=a[mid].x;//\u5206\u754c\u7ebf\n    int p=1;//\u6307\u5411b\u7684\u9996\u4f4d\uff08b\u6570\u7ec4\u6309\u7167x\u8f74\u987a\u5e8f\u6765\u7684\uff09 \n    int t=0;//\u6307\u5411b\u7684\u5b58\u50a8\u7684\u4f4d\u7f6e \n    for(int i=mid+1;i<=r;i++)//\u679a\u4e3e\u5206\u754c\u7ebf\u53f3\u8fb9\u7684\u70b9 \n    {\n        if(a[i].x-line<ans) \n            b[++t]=a[i];//\u5982\u679c\u8be5\u70b9\u4e0e\u5206\u754c\u7ebf\u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b54\u6848\u7684\u8bdd\uff0c\u5c06\u6b64\u70b9\u5b58\u5165b\u4e2d \n    } \n    for(int i=l;i<=mid;i++)\n    {\n        if(line-a[i].x>=ans) continue;//\u5982\u679c\u8be5\u70b9\u4e0e\u5206\u754c\u7ebf\u7684\u8ddd\u79bb\u5927\u4e8e\u7b54\u6848\uff0c\u7ee7\u7eed\u627e\n        //while(p<=t&&a[i].y-b[p].y>=ans)//\u8981\u6c42\u5728b\u4e2d\u627e\u5230\u4e00\u4e2ap \n        //    p++;//\u4f7f\u5f97a[i]\u7684y\u8f74\u5750\u6807-b[p]\u7684\u503c\u8981\u5c0f\u4e8e\u7b54\u6848\n        for(int j=p;j<=t&&abs(b[j].y-a[i].y)<ans;j++)//\u4e0d\u65ad\u5730\u679a\u4e3eb\u4e2d\u5269\u4e0b\u7684\u70b9 \n            ans=mini(ans,sqrt((a[i].x-b[j].x)*(a[i].x-b[j].x)+(a[i].y-b[j].y)*(a[i].y-b[j].y)));//\u7136\u540e\u66f4\u65b0\u7b54\u6848 \n    }\n    /*for(int i=l,p1=l,p2=mid+1;i<=r;i++)\n        if(p1<=mid&&(p2>r||a[p1].y<a[p2].y)) b[i]=a[p1++];\n        else b[i]=a[p2++];\n    for(int i=l;i<=r;i++) a[i]=b[i];//\u6309\u7eb5\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f */\n} \nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++) \n    {\n        a[i].x=read();\n        a[i].y=read();\n    }\n    sort(a+1,a+n+1,cmpx);//\u4ee5X\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\n    merge(1,n);//\u5c061\u5230n\u53bb\u67e5\u627e \n    printf(\"%0.4lf\",ans);\n    return 0; \n}\n```",
        "postTime": 1499931529,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u6211\u61d2\u5f97\u5b66\u5206\u6cbb\u6cd5\u3002\u3002\u4e8e\u662f\u6211\u7528\u4e86kd-tree\u3002\n\n\u5efa\u6811\u5c31\u662f\u6bcf\u6b21\u4ea4\u66ff\u9009\u62e9x,y\u5750\u6807\u4f5c\u4e3a\u5173\u952e\u5b57\uff0c\u9009\u62e9\u4f4d\u4e8e\u4e2d\u95f4\u7684\u70b9\u505a\u6839\uff0c\u5de6\u53f3\u9012\u5f52\u64cd\u4f5c\u3002\n\n\u641c\u7d22\u6700\u8fd1\u70b9\u5c31\u662f\u7528\u81ea\u5df1\u53bb\u66f4\u65b0ans\uff0c\u4e4b\u540e\u9884\u4f30\u5de6\u53f3\u513f\u5b50\u7684\u53ef\u80fd\u7684\u6700\u4f18\u503c\uff0c\u4e4b\u540e\u9009\u62e9\u8f83\u4f18\u7684\u5148dfs\u3002\u540c\u65f6\u5982\u679c\u53ef\u80fd\u7684\u6700\u4f18\u503c>ans\u5c31\u9000\u51fa\u3002\n\n\u6211\u53ea\u80fd\u8bf4\u5efa\u6811\u662fnlogn\u7684\uff0c\u4f46\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6211\u4e5f\u4e0d\u4f1a\u8bc1(\u4e5f\u6ca1\u770b\u5230\u8fc7\u8bc1\u660e\uff0c\u4f30\u8ba1\u662fn^2\u7684\uff0c\u4f46\u4e5f\u6ca1\u770b\u5230\u8fc7\u88ab\u5361\u7684)\u3002\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define N 200100\nvoid chmin(double &x,const double &y) { if(x>y)x=y; }\nvoid chmax(double &x,const double &y) { if(x<y)x=y; }\ndouble sqr(const double &x) { return x*x; } \nstruct point\n{\n    double x[2];\n    void read() { scanf(\"%lf%lf\",x,x+1); }\n    friend double dis(const point &x,const point &y)\n    {\n        return sqr(x.x[0]-y.x[0])+sqr(x.x[1]-y.x[1]);\n    }\n}p[N],now;\n\nbool xiao0(const point &x,const point &y) \n{\n    return x.x[0]<y.x[0]||x.x[0]==y.x[0]&&x.x[1]<y.x[1];\n}\nbool xiao1(const point &x,const point &y) \n{\n    return x.x[1]<y.x[1]||x.x[1]==y.x[1]&&x.x[0]<y.x[0];\n}\n\nstruct tree\n{\n    int l,r;double mx[2],mn[2];\n}T[N];\nvoid up(int k,int c)\n{\n    chmin(T[k].mn[0],T[c].mn[0]);chmin(T[k].mn[1],T[c].mn[1]);\n    chmax(T[k].mx[0],T[c].mx[0]);chmax(T[k].mx[1],T[c].mx[1]);\n}\nint build(int l,int r,bool d)\n{\n    int k=l+r>>1;\n    nth_element(p+l,p+k,p+r+1,d?xiao0:xiao1); \n    T[k].mn[0]=T[k].mx[0]=p[k].x[0];T[k].mn[1]=T[k].mx[1]=p[k].x[1];\n    d=!d;\n    if (l!=k) up(k,T[k].l=build(l,k-1,d));\n    if (r!=k) up(k,T[k].r=build(k+1,r,d));\n    return k;\n} \n\ndouble ans=1e18,x;\ndouble may(int k)\n{\n    if (now.x[0]<T[k].mn[0]) x=sqr(T[k].mn[0]-now.x[0]);else\n    if (now.x[0]>T[k].mx[0]) x=sqr(T[k].mx[0]-now.x[0]);else\n    x=0;\n    if (now.x[1]<T[k].mn[1]) return x+sqr(T[k].mn[1]-now.x[1]);\n    if (now.x[1]>T[k].mx[1]) return x+=sqr(T[k].mx[1]-now.x[1]);\n    return x;\n}\nvoid dfs(int k)\n{\n    chmin(ans,dis(p[k],now));\n    int l=T[k].l,r=T[k].r;\n    double ml=may(l),mr=may(r);\n    if (ml<mr)\n    {\n        if (ml<ans) { dfs(l);if(mr<ans) dfs(r); }\n    }\n    else \n    {\n        if (mr<ans) { dfs(r);if(ml<ans) dfs(l); }\n    }\n}\n\nint main()\n{ //freopen(\"1.in\",\"r\",stdin);freopen(\"1.out\",\"w\",stdout);\n    int n,i,rt;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;++i) p[i].read();\n    rt=build(1,n,1);\n    \n    T[0].mn[0]=T[0].mn[1]=2e9;\n    now=p[1];p[1]=p[2];dfs(rt);p[1]=now;\n    for (i=2;i<=n;++i)\n    {\n       now=p[i];p[i]=p[i-1];dfs(rt);p[i]=now;\n    }\n    printf(\"%.4lf\",sqrt(ans));\n}\n```",
        "postTime": 1483621936,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "## \u89e3\u6cd5\uff1a\n\u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4ee5\u7528\u5206\u6cbb\uff0c\u628a\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u6bb5\u533a\u95f4\uff0c\u6211\u4eec\u8003\u8651\u8de8\u8fc7\u5206\u754c\u7ebf\u7684\u8d21\u732e(\u5206\u754c\u7ebf\u53ef\u4ee5\u7528\u5e73\u5747\u503c\u6765\u5f97\u5230)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u8ddd\u5206\u754c\u7ebf\u8ddd\u79bb\u5728ans\u4ee5\u5185\u7684\u70b9\uff0c\u518d\u5206\u7ec4\u6c42\u8ddd\u79bb\u66f4\u65b0ans\u5373\u53ef\u3002\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#define N (200020)\nusing namespace std;\nint n;\ndouble ans = 2147483647.0;\nstruct node\n{\n\tdouble x , y;\n\tfriend bool operator < (const node &a,const node &b)\n\t{\n\t\tif(a.x == b.x)\treturn a.y < b.y;\n\t\treturn a.x < b.x;\n\t}\n}e[N] , tmp[N] , temp[N];\nvoid feez(int l,int r)\n{\n\tif(l == r)\treturn ;\n\tint mid = (l + r) >> 1 , p = 0 , q = 0;\n\tfeez(l,mid); feez(mid+1,r);\n\tdouble fj = (e[mid].x + e[mid+1].x) / 2.0;\n\tfor(int i = l;i <= mid;i ++)\tif(fj - e[i].x <= ans) tmp[++ p] = e[i];\n\tfor(int i = mid + 1;i <= r;i ++)\tif(e[i].x - fj <= ans)\ttemp[++ q] = e[i];\n\tfor(int i = 1;i <= p;i ++)\tfor(int j = 1;j <= q;j ++)\n\t\tans = min(ans,sqrt((tmp[i].x - temp[j].x) * (tmp[i].x - temp[j].x) + (tmp[i].y - temp[j].y) * (tmp[i].y - temp[j].y)));\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i <= n;i ++)\tscanf(\"%lf%lf\",&e[i].x,&e[i].y);\n\tsort(e+1,e+1+n);\n\tfeez(1,n);\n\tprintf(\"%.4f\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1567156161,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09"
    },
    {
        "content": "\u5148\u819c\u62dc@3A17K\u5927\u4f6c\u7684\u795e\u4ed9\u7b97\u6cd5\uff01\uff01\n\n\u539f\u7406\u4e0d\u8d58\u8ff0\u4e86\uff0c3A17K\u5de8\u4f6c\u5df2\u7ecf\u8bb2\u660e\u767d\u4e86\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e0b\u4ee3\u7801\u3002\n\n\u6ce8\u610f\u65cb\u8f6c\u03b8\u89d2\u65f6\u5750\u6807\u53d8\u6362\n\n- **x'=xcos\u03b8-ysin\u03b8**\n- **y'=xsin\u03b8+ycos\u03b8**\n\n```\n#include<cstdio>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N=2e5+50;\n#define D double\nstruct spot{\n\tD a[4];\n}p[N];\nD x,y,x_,y_,z,w,ans;\nint n;\nbool mmp(const spot &u,const spot &v){\n\treturn u.a[0]<v.a[0];\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tz=sin(1),w=cos(1);  //\u65cb\u8f6c1\u5f27\u5ea6\u224857\u00b0\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lf%lf\",&x,&y);\n\t\tx_=x*w-y*z;\n\t\ty_=x*z+y*w;   //\u8ba1\u7b97\u65cb\u8f6c\u540e\u7684\u5750\u6807\n\t\tp[i].a[0]=x_;\n\t\tp[i].a[1]=y_;\n\t\tp[i].a[2]=x;\n\t\tp[i].a[3]=y;   //\u5b58\u4e0b\u6765\n\t}\n\tsort(p+1,p+n+1,mmp);   //\u6392\u5e8f\n\tfor(int i=n+1;i<=n+10;i++)\n\tp[i].a[0]=p[i].a[1]=-N-0.01;  //\u8fb9\u754c\u5904\u7406\n\tans=2e9+0.01;  //\u521d\u59cb\u5316\u7b54\u6848\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=5;j++){  //\u679a\u4e3e\n\t\tx=p[i].a[2];y=p[i].a[3];\n\t\tx_=p[i+j].a[2];y_=p[i+j].a[3];\n\t\tz=sqrt((x-x_)*(x-x_)+(y-y_)*(y-y_));  //\u8ba1\u7b97\u8ddd\u79bb\n\t\tif(ans>z)ans=z;   //\u66f4\u65b0\u7b54\u6848\n\t}\n\tprintf(\"%.4lf\\n\",ans);  //\u8f93\u51fa\n}\n/*\nx'=xcos\u03b8-ysin\u03b8\ny'=xsin\u03b8+ycos\u03b8\n*/\n```\n## \u4eba\u7c7b\u7684\u667a\u6167\u662f\u65e0\u7a77\u65e0\u5c3d\u7684\uff01",
        "postTime": 1531742783,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "# \u7b2c\u4e00\u7bc7\u84dd\u9898\u9898\u89e3\n\n[p.s.~~\uff08\u611f\u89c9\u4e0d\u662f\u84dd\u9898\u554a\uff09~~](https://www.luogu.org/record/26573514)\n\n# step1\uff1a\u66b4\u529b\n\u5bf9\u4e8e\u4e24\u4e2a\u70b9i\uff0cj\uff0c\u8ba1\u7b97dis\uff08i\uff0cj\uff09\uff0c\u7136\u540e\u53d6\u6700\u5c0f\u503c\u3002\n\n\u4ee3\u7801\uff0837\u5206\uff0cO2\u540e46\u5206\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstruct node{\n\tlong double x,y;\n}a[200010];\ndouble ans=10000000.0;\ndouble dis(double a,double b,double c,double d){\n\treturn sqrt(abs(c-a)*abs(c-a)+abs(d-b)*abs(d-b));\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i].x>>a[i].y;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tans=min(ans,dis(a[i].x,a[i].y,a[j].x,a[j].y));\n\tprintf(\"%.4lf\",ans);\n\treturn 0;\n}\n```\n~~\uff08\u54ce\u5466\uff09~~\n\n# step2\uff1a\u6392\u5e8f\u4f18\u5316\n\u6309\u7167x\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8ba1\u7b97min\uff08ans\uff0cdis\uff08i\uff0ci-1\uff09\uff09\n\u4ee3\u7801\uff0881\u5206\uff09\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstruct node{\n\tlong double x,y;\n}a[200010];\ndouble ans=10000000.0;\ndouble dis(double a,double b,double c,double d){\n\treturn sqrt(abs(c-a)*abs(c-a)+abs(d-b)*abs(d-b));\n}\nbool cmp(node a,node b){return (a.x==b.x)?(a.y<b.y):(a.x<b.x);}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i].x>>a[i].y;\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=2;i<=n;i++)ans=min(ans,dis(a[i].x,a[i].y,a[i-1].x,a[i-1].y));\n\tprintf(\"%.4lf\",ans);\n\treturn 0;\n}\n```\n~~\uff08\u54c8\u54c8\u54c8\uff0c\u4f60\u6709\u4e24\u4e2a\u70b9\u6ca1\u8fc7\uff01\uff01\uff09~~\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n# step3:\u7384\u5b66\u6392\u95191\n\u6309\u7167x\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8ba1\u7b97min\uff08ans\uff0cdis\uff08i\uff0ci-1\uff09\uff09\u548cmin\uff08ans\uff0cdis\uff08i\uff0ci-2\uff09\uff09\n\u4ee3\u7801\uff0890\u5206\uff09\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstruct node{\n\tlong double x,y;\n}a[200010];\ndouble ans=10000000.0;\ndouble dis(double a,double b,double c,double d){\n\treturn sqrt(abs(c-a)*abs(c-a)+abs(d-b)*abs(d-b));\n}\nbool cmp(node a,node b){return (a.x==b.x)?(a.y<b.y):(a.x<b.x);}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i].x>>a[i].y;\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=2;i<=n;i++)ans=min(ans,dis(a[i].x,a[i].y,a[i-1].x,a[i-1].y));\n\tfor(int i=3;i<=n;i++)ans=min(ans,dis(a[i].x,a[i].y,a[i-2].x,a[i-2].y));\n\tprintf(\"%.4lf\",ans);\n\treturn 0;\n}\n```\n~~\uff08\u54c8\u54c8\u54c8\uff0c\u4f60\u67091\u4e2a\u70b9\u6ca1\u8fc7\uff01\uff01\uff09~~\n\n\u53c8\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\n# step4:\u7384\u5b66\u6392\u95192\n\u6309\u7167x\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8ba1\u7b97min\uff08ans\uff0cdis\uff08i\uff0ci-1\uff09\uff09\n\n\u6309\u7167y\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8ba1\u7b97min\uff08ans\uff0cdis\uff08i\uff0ci-1\uff09\uff09\n\n\u4ee3\u7801\uff0890\u5206\uff09\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstruct node{\n\tlong double x,y;\n}a[200010];\ndouble ans=10000000.0;\ndouble dis(double a,double b,double c,double d){\n\treturn sqrt(abs(c-a)*abs(c-a)+abs(d-b)*abs(d-b));\n}\nbool cmp(node a,node b){return (a.x==b.x)?(a.y<b.y):(a.x<b.x);}\nbool cmp1(node a,node b){return (a.y==b.y)?(a.x<b.x):(a.y<b.y);}\n\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i].x>>a[i].y;\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=2;i<=n;i++)ans=min(ans,dis(a[i].x,a[i].y,a[i-1].x,a[i-1].y));\t\n\tsort(a+1,a+n+1,cmp1);\n\tfor(int i=2;i<=n;i++)ans=min(ans,dis(a[i].x,a[i].y,a[i-1].x,a[i-1].y));\n\tprintf(\"%.4lf\",ans);\n\treturn 0;\n}\n```\n~~\uff08\u54c8\u54c8\u54c8\uff0c\u4f60\u67091\u4e2a\u70b9\u6ca1\u8fc7\uff01\uff01\uff09~~\n\n\u2026\u2026\u2026\u2026\u2026\u2026\n# step5\uff1a\u7384\u5b66\u4f18\u5316*2\n\n\u6309\u7167x\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8ba1\u7b97min\uff08ans\uff0cdis\uff08i\uff0ci-1\uff09\uff09\u548cmin\uff08ans\uff0cdis\uff08i\uff0ci-2\uff09\uff09\u548cmin\uff08ans\uff0cdis\uff08i\uff0ci-3\uff09\uff09~~\uff08\u4f60\u65e0\u804a\u5417\uff1f\uff09~~\n\n\u4ee3\u7801\uff08100\u5206\uff09\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstruct node{\n\tlong double x,y;\n}a[500010];\ndouble ans=10000000.0;\ndouble dis(double a,double b,double c,double d){\n\treturn sqrt(abs(c-a)*abs(c-a)+abs(d-b)*abs(d-b));\n}\nbool cmp(node a,node b){return (a.x==b.x)?(a.y<b.y):(a.x<b.x);}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i].x>>a[i].y;\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=2;i<=n;i++)ans=min(ans,dis(a[i].x,a[i].y,a[i-1].x,a[i-1].y));\n\tfor(int i=3;i<=n;i++)ans=min(ans,dis(a[i].x,a[i].y,a[i-2].x,a[i-2].y));\n\tfor(int i=4;i<=n;i++)ans=min(ans,dis(a[i].x,a[i].y,a[i-3].x,a[i-3].y));\n\tprintf(\"%.4lf\",ans);\n\treturn 0;\n}\n```\n~~(666666\u2026\u2026)~~",
        "postTime": 1573214636,
        "uid": 90706,
        "name": "_jimmywang_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u4f17\u6240\u5468\u77e5\u7684\u662f\uff0c\u5904\u7406\u5e73\u9762\u95ee\u9898\u5b58\u5728\u4e00\u79cd\u975e\u5e38\u597d\u5199\u53c8\u8dd1\u5f97\u76f8\u5f53\u5feb\u7684\u6570\u636e\u7ed3\u6784---$KD-Tree$\u3002\n\n\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u4e0d\u65ad\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\u7136\u540e\u518d\u6574\u68f5\u6811\u4e0a\u9762\u67e5\u627e\u6700\u8fd1\u7684\u70b9\u3002\n\n\u6ce8\u610f\u7684\u662f\u4f7f\u7528$KD-Tree$\u8fdb\u884c~~\u66b4\u529b~~\u67e5\u8be2\u7684\u65f6\u5019\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u4f30\u4ef7\u51fd\u6570\u8fd8\u8fdb\u884c\u526a\u679d\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u4f30\u4ef7\u51fd\u6570\u5c31\u662f\u5c06\u8fd9\u4e2a\u70b9\u548c\u5f53\u524d\u77e9\u5f62\u4e24\u6761\u8fb9\u4e4b\u95f4\u7684\u8ddd\u79bb\u8ba1\u7b97\u51fa\u6765\u3002\n\n\u987a\u5e26\u4e00\u63d0\uff0c\u4e3a\u4e86\u51cf\u5c0f\u5e38\u6570\uff0c\u53ef\u4ee5\u4e0d\u76f4\u63a5\u50a8\u5b58\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u800c\u77e5\u50a8\u5b58\u8ddd\u79bb\u7684\u5e73\u65b9\u3002\n\n```\n#include<cmath>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define rnt re int\n#define lc t[p].ls\n#define rc t[p].rs\n#define re register\n#define LL inline ll\n#define I inline int\n#define V inline void\n#define B inline bool\n#define lson lc,L,mid-1\n#define rson rc,mid+1,R\n#define ll long long int\n#define isnum(ch) ('0'<=ch&&ch<='9')\n#define FOR(i,a,b) for(rnt i=a;i<=b;i++)\n#define ROF(i,a,b) for(rnt i=a;i>=b;i--)\n#define gc (_op==_ed&&(_ed=(_op=_buf)+fread(_buf,1,100000,stdin),_op==_ed)?EOF:*_op++)\nchar _buf[100000],*_op(_buf),*_ed(_buf);\nI getint(){\n\trnt _s=0;re char _ch=gc;\n\twhile(!isnum(_ch))_ch=gc;\n\twhile(isnum(_ch))_s=_s*10+_ch-48,_ch=gc;\n\treturn _s;\n}\nI min(const int&x,const int&y){return x<y?x:y;}\nI max(const int&x,const int&y){return x>y?x:y;}\nconst int N=2e5+1,INF=0x7fffffff;\nll ans=1ll<<62;const double alpha=0.75;\nint n,m,rt,WD;\nstruct node{\n\tint sta[N],top,tot;\n\tV del(rnt x){if(x)sta[++top]=x;}\n\tI newnode(){return top?sta[top--]:++tot;}\n}T;\nLL pw(const int&x){return 1ll*x*x;}\nstruct poi{\n\tint x[2];\n\tV input(){FOR(i,0,1)x[i]=getint();}\n\tB operator<(const poi&u)const{return x[WD]<u.x[WD];}\n\tLL operator-(const poi&u)const{\n\t\treturn pw(x[0]-u.x[0])+pw(x[1]-u.x[1]);\n\t}\n}a[N];\nstruct mat{\n\tint x[2][2];\n\tmat(){FOR(i,0,1)x[i][0]=INF,x[i][1]=-INF;}\n};\nstruct kdt{\n\tmat pos;poi now;\n\tint ls,rs,siz;\n}t[N];\nV init(rnt p){\n\tt[p].siz=t[lc].siz+t[rc].siz+1;\n\tFOR(i,0,1)t[p].pos.x[i][0]=min(t[p].now.x[i],min(t[lc].pos.x[i][0],t[rc].pos.x[i][0]));\n\tFOR(i,0,1)t[p].pos.x[i][1]=max(t[p].now.x[i],max(t[lc].pos.x[i][1],t[rc].pos.x[i][1]));\n}\nV pia(rnt p){if(p)a[++m]=t[p].now,T.del(p),pia(lc),pia(rc),lc=rc=0;}\nV build(int&p,rnt L,rnt R,rnt wd){\n\tif(L>R)return;rnt mid=L+R>>1;WD=wd;\n\tnth_element(a+L,a+mid,a+R+1),t[p=T.newnode()].now=a[mid];\n\tbuild(lson,wd^1),build(rson,wd^1),init(p);\n}\nLL dis(const poi&x,const mat&y){\n\tre ll out=0;\n\tFOR(i,0,1)out+=pw(max(0,y.x[i][0]-x.x[i])+max(0,x.x[i]-y.x[i][1]));\n\treturn out;\n}\nV ask(rnt p,const poi&x){\n\tif(!p)return;\n\tre ll lval=dis(x,t[lc].pos),rval=dis(x,t[rc].pos),val=x-t[p].now;\n\tif(val<ans)ans=val;\n\tif(lval<rval){\n\t\tif(lval<ans)ask(lc,x);\n\t\tif(rval<ans)ask(rc,x);\n\t}else{\n\t\tif(rval<ans)ask(rc,x);\n\t\tif(lval<ans)ask(lc,x);\n\t}\n}\nB check(rnt p){return alpha*t[p].siz<max(t[lc].siz,t[rc].siz);}\nV ins(int&p,const poi&x,rnt wd){\n\tif(!p)return t[p=T.newnode()].now=x,init(p);WD=wd;\n\tif(x<t[p].now)ins(lc,x,wd^1);\n\telse ins(rc,x,wd^1);init(p);\n\tif(check(p))pia(p),build(p,1,m,wd),m=0;\n}\nV work(){\n\tn=getint();poi tmp;\n\twhile(n--)tmp.input(),ask(rt,tmp),ins(rt,tmp,0);\n\tprintf(\"%.4lf\",(double)sqrt(ans));\n}\nint main(){\n\twork();\n\treturn 0;\n}\n```\n",
        "postTime": 1569942040,
        "uid": 109236,
        "name": "Fuyuki",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "#### ~~\u5173\u4e8e\u8fd9\u9053\u9898\uff0c\u5176\u5b9e\u662f\u6bd4\u8f83\u7384\u5b66\u7684~~\n-----\n#### \u601d\u8def\u5f88\u7b80\u5355\uff08~~\u7b80\u76f4\u5c31\u662f\u66b4\u529b\u4e2d\u7684\u6781\u54c1~~\uff09\n\n#### \u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48dalao\u4eec\u8bf4\u8981\u968f\u673a\u65cb\u8f6c\n\n\u6211\u57fa\u672c\u4e0a\u7eaf\u66b4\u529bA\u6389\u4e86\n\n\u4ee5\u4e0b\u4e3a\u65b9\u6cd5\uff1a\n\n\u5148\u6c42\u7b2c1\u4e2a\u70b9\u4e0e\u5176\u4f59n-1\u4e2a\u70b9\u7684\u8ddd\u79bb\uff1b\n\n\u518d\u6c42\u7b2c2\u4e2a\u70b9\u4e0e\u5176\u4f59n-2\u4e2a\u70b9\u7684\u8ddd\u79bb\uff1b\n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u518d\u6c42\u7b2cn-1\u4e2a\u70b9\u4e0e\u5176\u4f591\u4e2a\u70b9\u7684\u8ddd\u79bb\uff1b\n\n\u7136\u540e\u627e\u51fa\u6700\u5c0f\u503c\uff0c\u5982\u6b64\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3aO(n^2)\n\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\n  for(int i=1; i<=n; i++)\n        for(int j=i; j<=n; j++)\n            if(i+j<=n)\n            {\n                d=sqrt((x[i]-x[j])*(x[i]-x[j])*1.0+(y[i]-y[j])*(y[i]-y[j])*1.0);\n                if(d<mindist)\tmindist=d;\n            }\n            \n```\n\n\u663e\u7136\u4e0d\u884c\n\n\u7136\u540e\u5c31\u6bd4\u8f83~~\u7384\u5b66~~\u4e86\n\n\u4e3a\u4e86\u51cf\u5c11\u679a\u4e3e\u91cf\uff0c\u672c\u5c11\u51b3\u5b9a\u53ea\u6bd4\u8f83\u6bcf\u4e2a\u70b9\u540e\u9762\u7684150\u4e2a\u70b9\n\n\u7136\u540e\u83ab\u540dAC\u4e86\n\n\u4e3a\u4e86\u518d\u6b21\u51cf\u5c11\u679a\u4e3e\u91cf\uff0c\u672c\u5c11\u51b3\u5b9a\u53ea\u6bd4\u8f83\u6bcf\u4e2a\u70b9\u540e\u9762\u768450\u4e2a\u70b9\n\n\u7136\u540e\u518d\u6b21\u83ab\u540dAC\u4e86\n\n\u4e3a\u4e86\u518d\u6b21\u51cf\u5c11\u679a\u4e3e\u91cf\uff0c\u672c\u5c11\u51b3\u5b9a\u53ea\u6bd4\u8f83\u6bcf\u4e2a\u70b9\u540e\u9762\u76843\u4e2a\u70b9\n\n\u7136\u540e\u518d\u6b21\u83ab\u540dAC\u4e86\n\n~~\u8fd9\u662f\u4e00\u4e2a\u7384\u5b66\u95ee\u9898~~\n\nAC\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <cmath>\n#include <string>\n#include <cstring>\n#include <algorithm>\nusing namespace std;//\u6d41\u7ebf\u578b\u5934\u6587\u4ef6\n\nconst int Max=200010;\ndouble x[Max],y[Max];\n\nvoid Qsort(int l,int r)\n{\n    int i,j;\n    double a,b;\n    i=l;\n    j=r;\n    a=x[(l+r)/2];\n    while(i<=j)\n    {\n        while(x[i]<a)\ti++;\n        while(a<x[j])\tj--;\n        if(i<=j)\n        {\n            b=x[i];\tx[i]=x[j]; x[j]=b;\n            b=y[i];\ty[i]=y[j]; y[j]=b;\n            i++;\n            j--;\n        }\n    }\n    if(i<r)\tQsort(i,r);\n    if(l<j)\tQsort(l,j);\n}//\u5148\u7ed9x\u5750\u6807\u6392\u5e8f\n\nint main()\n{\n    int len;\n    scanf(\"%d\",&len);\n    for(int i=1; i<=len; i++)\n        scanf(\"%lf%lf\",&x[i],&y[i]);\n    double mindist=99999999999;\n    Qsort(1,len);\n    double d;\n    for(int i=1; i<=len; i++)\n        for(int j=1; j<=3; j++)//\u6bd4\u8f83\u6bcf\u4e2a\u70b9\u540e\u9762\u76843\u4e2a\u70b9\n            if(i+j<=len)\n            {\n                d=sqrt((x[i]-x[i+j])*(x[i]-x[i+j])*1.0+(y[i]-y[i+j])*(y[i]-y[i+j])*1.0);\n                if(d<mindist)\tmindist=d;\n            }//\u6bd4\u8f83\n    printf(\"%.4lf\\n\",mindist);\n    return 0;\n}\n```\n",
        "postTime": 1562814104,
        "uid": 174687,
        "name": "\u767d\u83dc\u9053\u58eb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u600e\u4e48\u80fd\u6ca1\u6709KD-Tree\u7684\u9898\u89e3\u5462\uff08\u9003\uff09\n\nKD-Tree\u662f\u4e00\u79cd\u4f18(Bao)\u7f8e(Li)\u7684\u6570\u636e\u7ed3\u6784\n\n\u5176\u5b9e\u548c\u5206\u6cbb\u7684\u601d\u8def\u662f\u5dee\u4e0d\u591a\u7684\n\n\u6700\u5f00\u59cbT\u98de\u4e86,\u7136\u540e\u5145\u5206\u53d1\u626c\u4eba\u7c7b\u7684\u667a\u6167\n\n\u8be2\u95ee\u7684\u65f6\u5019\u6539\u4e00\u4e0b\u5de6\u53f3\u5b50\u6811\u7684\u987a\u5e8f,\u7136\u540e\u5438\u6c27\u5c31\u53ef\u4ee5AC\u5566\n\n### Code\n```cpp\n#include<bits/stdc++.h>\n#define inf 2e9\n#define N 200005\n#define db double\n#define lc t[x].ch[0]\n#define rc t[x].ch[1]\n#define mid ((l+r)>>1)\n#define MIN(x,y) x=min(x,y)\n#define MAX(x,y) x=max(x,y)\nusing namespace std;\nstruct node{\n\tdb p[2];\n\tnode(){}\n\tnode(db x,db y){p[0]=x;p[1]=y;}\n}a[N];\nstruct tree{\n\tint sz,ch[2];\n\tdb x1,x2,y1,y2;\n}t[N];\ndb ans=inf,res;\nint n,rt,tot;\nbool cmp0(node x,node y){\n\treturn x.p[0]<y.p[0];\n}\nbool cmp1(node x,node y){\n\treturn x.p[1]<y.p[1];\n}\nvoid update(int x,int y){\n\tMIN(t[x].x1,t[y].x1);\n\tMIN(t[x].y1,t[y].y1);\n\tMAX(t[x].x2,t[y].x2);\n\tMAX(t[x].y2,t[y].y2);\n}\nvoid push_up(int x){\n\tt[x].sz=t[lc].sz+t[rc].sz+1;\n\tif(lc) update(x,lc);\n\tif(rc) update(x,rc);\n}\nvoid build(int &x,int l,int r,int tp){\n\tif(l>r) return;\n\tif(tp==0) sort(a+l,a+r+1,cmp0);\n\tif(tp==1) sort(a+l,a+r+1,cmp1);\n\tx=mid;t[x].sz=1;\n\tt[x].x1=t[x].x2=a[x].p[0];\n\tt[x].y1=t[x].y2=a[x].p[1];\n\tbuild(lc,l,mid-1,tp^1);\n\tbuild(rc,mid+1,r,tp^1);\n\tpush_up(x);\n}\ndb sp(db x){return x*x;}\ndb dis(node x,node y){\n\treturn sqrt(sp(fabs(x.p[0]-y.p[0]))+sp(fabs(x.p[1]-y.p[1])));\n}\ndb ex(int x,int u){\n\tdb now=inf;\n\tdb x1=t[x].x1,x2=t[x].x2;\n\tdb y1=t[x].y1,y2=t[x].y2;\n\tdb xn=a[u].p[0],yn=a[u].p[1];\n\tif(x1<=xn&&xn<=x2&&y1<=yn&&yn<=y2) return 0;\n\tMIN(now,dis(a[u],node(x1,y1)));\n\tMIN(now,dis(a[u],node(x1,y2)));\n\tMIN(now,dis(a[u],node(x2,y1)));\n\tMIN(now,dis(a[u],node(x2,y2)));\n\treturn now;\n}\nvoid ask(int x,int u){\n\tif(u!=x) MIN(res,dis(a[u],a[x]));\n\tif(rc&&ex(rc,u)<res) ask(rc,u);//\u5728\u8fd9\u91cc\u8c03\u6574\u987a\u5e8f\n\tif(lc&&ex(lc,u)<res) ask(lc,u);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%lf%lf\",&a[i].p[0],&a[i].p[1]);\n\tbuild(rt,1,n,0);\n\tfor(int i=1;i<=n;++i){\n\t\tres=inf;ask(rt,i);\n\t\tMIN(ans,res);\n\t}\t\n\tprintf(\"%.4lf\\n\",ans);\n}\n```",
        "postTime": 1575965555,
        "uid": 133410,
        "name": "Resonance",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u672c\u9898\u8a00\u7b80\u610f\u8d45\uff0c\u7ed9n\u4e2a\u70b9\uff0c\u6c42\u6700\u8fd1\u70b9\u5bf9($n\\le 10^5$)\n\n[Luogu](https://www.luogu.org/problem/P1429)\n\n[poj(\u7565\u6709\u4e0d\u540c)](http://poj.org/problem?id=3714)\n\n## \u9898\u89e3\uff1a\n\n\u8fd9\u9898\u521d\u770b\u4ee4\u4eba\u7729\u6655\uff0c\u6709\u6548\u4fe1\u606f\u4e24\u4e24\u70b9\u7684\u8ddd\u79bb\u5c31\u6709$O(n^2)$\uff0c\u53ea\u80fd\u662f\u51cf\u4e00\u4e9b\u72b6\u6001\u3002\u6bd4\u5982\u8bf4$\\Delta x \\Delta y$\u90fd\u66f4\u5927\u5c31\u820d\u53bb\uff1f\uff1f\u660e\u663e\u6ca1\u6709\u53ef\u64cd\u4f5c\u6027\u3002\u3002\n\n\u6b63\u89e3\u662f\u4e00\u4e2a\u7ecf\u5178\u5206\u6cbb\uff0c\u672c\u9898\u5206\u6cbb\u7279\u70b9\u662f\u5229\u7528\u5206\u6cbb\u7b54\u6848\u6765\u8fdb\u884c\u5206\u6cbb\uff0c\u6309x\u6392\u5e8f\uff0c\u6309x\u5206\u6cbb\uff0c\u679a\u4e3emid\u5de6\u53f3ans\u8303\u56f4\u5185\u7684\u70b9\uff0c\u628a\u8fd9\u4e9b\u70b9\u6309y\u6392\u5e8f\uff0cy\u5750\u6807\u76f8\u5dee\u4e0d\u8d85\u8fc7ans\u7684\u70b9\u7edf\u8ba1\u7b54\u6848\uff08\u6a2a\u7740\u7684\u65e5\u5b57\u5212\u5206\uff0c\u53ef\u8bc1\u6bcf\u4e2a\u70b9\u7edf\u8ba1\u7b54\u6848\u4e0d\u8d85\u8fc76\u4e2a\uff09\uff0c\u603b\u590d\u6742\u5ea6$O(6nlog^2n)$\n\n\u5177\u4f53\u7684\u8bf4\uff0c\u672c\u9898\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6a21\u578b\uff0c\u672c\u6765$O(n^2)$\u65e0\u6cd5\u4f18\u5316\u7684\u72b6\u6001\u6570\uff0c\u901a\u8fc7\u5206\u6cbb\u4e0b\u4e00\u4e2a\u201c\u81ea\u77db\u76fe\u201d\u5de7\u5999\u5730\u907f\u514d\u4e86\u679a\u4e3e\u660e\u663e\u4e0d\u53ef\u80fd\u7684\u70b9\u5bf9\u3002\u8de8\u8fb9\u754c\u7684\u53ef\u80fd\u662f\u7b54\u6848\u7684\u70b9\u5bf9\u5176\u5b9e\u53ea\u6709\u4e00\u70b9\u70b9\uff0c\u4ec0\u4e48\u201c\u81ea\u77db\u76fe\u201d\uff0c\u5176\u5b9e\u5c31\u662f\u6839\u636e\u5de6\u53f3\u5df2\u7edf\u8ba1\u7684\u7b54\u6848\u4e25\u8c28\u5730\u8bc1\u660e\u4e86\u8fd9\u4e2a\u201c\u4e00\u70b9\u70b9\u201d\n\n## \u4ee3\u7801\uff08Luogu\uff09\uff1a\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <algorithm>\n#include <math.h>\nusing namespace std;\ntypedef long double ld;\nconst int N=2e5+50;\nconst ld le=1e-7;\nconst ld INf=2000000000.0;\nstruct Point{\n\tint x,y;\n\tPoint(){}\n}po[N],tmp[N];\nint n;\nld ans=INf;\n\nbool cmpx(Point a,Point b){return a.x<b.x;}\n\nbool cmpy(Point a,Point b){return a.y<b.y;}\n\ninline int wdabs(int a){return (a>0?a:(-a));}\n\ninline ld sqr(ld a){return a*a;}\n\ninline ld dis(int a,int b){return sqrt(sqr(tmp[a].x-tmp[b].x)+sqr(tmp[a].y-tmp[b].y));}\n\nvoid solve(int l,int r)\n{\n\tif(l==r) return;\n\tint mid=(l+r)/2;\n\tsolve(l,mid);\n\tsolve(mid+1,r);\n\tint d=ans,cnt=0;d+=1;\n\tfor(int i=l;i<=r;i++)\n\t\tif(wdabs(po[i].x-po[mid].x)<=d)\n\t\t\ttmp[++cnt]=po[i];\n\tsort(tmp+1,tmp+1+cnt,cmpy);\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tfor(int j=i+1;tmp[j].y-tmp[i].y<=d && j<=cnt;j++)\n\t\t\tans=min(ans,dis(i,j));\n\t}\n\treturn;\n}\n\nint main()\n{\n\tans=INf;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&po[i].x,&po[i].y);\n\tsort(po+1,po+1+n,cmpx);\n\tsolve(1,n);\n\tprintf(\"%.4Lf\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1569399481,
        "uid": 41271,
        "name": "\u59a9\u5a9a\u7684ak\u841d\u8389",
        "ccfLevel": 9,
        "title": "\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u5206\u6cbb\uff09"
    },
    {
        "content": "## \u611f\u60f3\uff1a\n### \u4e00\u5f00\u59cb\uff0c\u5b8c\u5168\u4e0d\u660e\u767d\u8fd9\u4e2a\u601d\u8def\uff0c\u611f\u89c9\u8fd9\u4e2a\u601d\u8def\u5f88\u7384\u5b66\uff0c\u786e\u5b9e\uff0c\u5f88\u7384\u5b66\uff0c\u4e5f\u6bd4\u8f83\u96be\u61c2\u3002\n## \n## \u601d\u8def\uff1a\n### \u5229\u7528\u5206\u6cbb\uff0c\u5206\u800c\u6cbb\u4e4b\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u80fd\u591f\u5728 n log n\u7684\u590d\u6742\u5ea6\u4e0b\u8dd1\u8fc7\u3002\u4efb\u4f55\u4f18\u5316\u7b97\u6cd5\u7684\u524d\u63d0\u90fd\u662f\u7b54\u6848\u7684\u6b63\u786e\u6027\u548c\u590d\u6742\u5ea6\u7684\u6b63\u786e\u6027\uff0c\u90a3\u4e48\u6211\u5c31\u6765\u8bc1\u660e\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u6b63\u786e\u6027\u3002 \uff08\u8fd9\u91cc\uff0c\u5bf9\u4e8e\u7b97\u6cd5\u7684\u5b9e\u73b0\u548c\u7406\u89e3\uff0c\u5c31\u4e0d\u8fc7\u591a\u4ecb\u7ecd\uff0c\u5b8c\u5168\u53ef\u4ee5\u770b\u522b\u7684\u9898\u89e3\u3002\uff09\n##\n## \u8bc1\u660e\u7b54\u6848\u6b63\u786e\u6027\uff1a\n### \u8fd9\u4e2a\u8bc1\u660e\u4e0d\u96be\uff0c\u5206\u6cbb\u5206\u6cbb\uff0c\u5206\u800c\u6cbb\u4e4b\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4 \u3010L,R\u3011\u7684\u7b54\u6848\uff0c\u5c31\u662f  Min(\u3010L,Mid\u3011\uff0c\u3010Mid+1\uff0cR\u3011\uff09\uff0c\u8fd9\u4e2a\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u7406\u89e3\u5427\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u4f1a\u6709\u4e00\u4e2a\u4e2d\u95f4\u5730\u5e26\u7684\u70b9\u5f71\u54cd\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66b4\u529b\u6c42\u89e3\u4e2d\u95f4\u5730\u5e26\u7684\u70b9\uff0c\u7b97\u51fa\u5b83\u4eec\u4e24\u4e24\u5339\u914d\u7684\u8ddd\u79bb\u3002\uff08\u4e2d\u95f4\u5730\u5e26\u7684\u70b9\u5305\u62ec\u54ea\u4e9b\uff0c\u5c31\u4e0d\u7ec6\u8bf4\u4e86\uff09\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u7b54\u6848\uff0c\u660e\u663e\u662f\u6b63\u786e\u7684\u5440\uff0c\u56e0\u4e3a\uff0c\u6211\u4eec\u7684\u7b54\u6848\u5df2\u7ecf\u5b8c\u5168\u5305\u62ec\u4e86\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\u3002\n## \u8bc1\u660e\u590d\u6742\u5ea6\uff1a\n### \u5206\u6cbb\u9012\u5f52\u590d\u6742\u5ea6\u4e3a log n,\u6bcf\u6b21\u5206\u6cbb\u65f6\u5019\u8dd1\u4e00\u904dL\u5230R\uff0c\u6240\u4ee5\u5c31\u662fn log n\u4e86\u3002\u53ef\u80fd\u4f1a\u6709\u4eba\u95ee\uff0c\u5bf9\u4e8e\u90a3\u4e2acnt^2\u7684\u590d\u6742\u5ea6\u600e\u4e48\u4fdd\u8bc1\u4e0d\u4f1a\u8d85\u65f6\uff0c\u6211\u60f3\u8bf4\u7684\u662f\uff0c\u53ea\u8981\u4e0d\u662f\u4eba\u4e3a\u5361\u4f60\u7684\u6570\u636e\uff0c\u90a3\u4e2acnt\u4f1a\u53d8\u5f97\u6781\u5c0f\u6781\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5ffd\u7565\u3002 \uff08\u53ea\u8981\u4e0d\u662f\u4eba\u4e3a\u5361\u4f60\u7684\u6570\u636e\uff0c\u90a3\u4e2acnt\u4f1a\u53d8\u5f97\u6781\u5c0f\u6781\u5c0f\uff0c\u53ef\u4ee5\u597d\u597d\u9886\u609f\u4e00\u4e0b\uff09\n## \u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nint n;\nstruct number{double x,y;}a[N],b[N];\n\ninline bool cmp(number a,number b){return a.x<b.x;}\n\ninline double solve(int l,int r)\n{\n\tif (l==r) return 100000000.0;\t\n\tint mid=l+r>>1;\n\tdouble ans=min(solve(l,mid),solve(mid+1,r));   //\u5206\u800c\u6cbb\u4e4b \n\tint cnt=0;\n\t//\u5bf9\u4e8e\u4e2d\u95f4\u5730\u5e26\u7684\u70b9\u8fdb\u884c\u66b4\u529b\u6c42\u89e3 \n\tfor (register int i=l; i<=r; ++i) if (fabs(a[i].x-a[mid].x)<ans) b[++cnt]=a[i];\n\tfor (register int i=1; i<cnt; ++i)\n\tfor (register int j=i+1; j<=cnt; ++j) \n\tans=min(ans,sqrt((b[i].x-b[j].x)*(b[i].x-b[j].x)+(b[i].y-b[j].y)*(b[i].y-b[j].y)));\n\treturn ans;\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (register int i=1; i<=n; ++i) scanf(\"%lf%lf\",&a[i].x,&a[i].y);\n\tsort(a+1,a+n+1,cmp);\n\tprintf(\"%.4lf\\n\",solve(1,n));\nreturn 0;\n}\n```\n",
        "postTime": 1554905153,
        "uid": 73436,
        "name": "\u8bf4\u597d\u4e0d\u54ed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u8981\u5206\u6cbb\u554a\uff1f\u66b4\u529b\u679a\u4e3e\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u867d\u7136\u6b63\u5e38\u679a\u4e3eO(n^2)\u65e0\u6cd5\u627f\u53d7\uff0c\u4f46\u662f\u53ef\u4ee5\u5148\u6392\u5e8f\uff0c\u5728\u6bcf\u6b21\u679a\u4e3e\u524d\u786e\u5b9a\u4e00\u4e2a\u679a\u4e3e\u4e0a\u754c\uff0c\u5982\u679cx\u5750\u6807\u5dee\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u4e0a\u754c\uff0c\u7b54\u6848\u4e0d\u4f1a\u66f4\u4f18\uff0c\u76f4\u63a5\u5f39\u51fa\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(\u80fd\u8fc7)\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\n#define Forward(i,a,b) for(i=(a);i>=(b);--i)\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\nusing namespace std;\ntemplate<typename T>inline void read(T &x)//\u8bfb\u5165\u4f18\u5316\n{\n    T s=0,f=1;char k=getchar();\n    while(!isdigit(k)&&(k^'-'))k=getchar();\n    if(!isdigit(k)){f=-1;k=getchar();}\n    while(isdigit(k)){s=s*10+(k^48);k=getchar();}\n    x=s*f;\n}\nvoid file()\n{\n    #ifndef ONLINE_JUDGE\n        freopen(\"dist.in\",\"r\",stdin);\n        freopen(\"dist.out\",\"w\",stdout);\n    #endif\n}\nconst int MAXN=200010;\nint n;\ntypedef pair<int,int>Pr;//\u70b9\nPr a[MAXN];\nvoid init()\n{\n    read(n);\n    Rep(i,1,n)read(a[i].first),read(a[i].second);\n    sort(a+1,a+n+1);//\u6392\u5e8f\n}\nlong long ans;\nlong long dist(int x,int y)//\u6c42\u8ddd\u79bb\n    {return (long long)(a[x].first-a[y].first)*(a[x].first-a[y].first)\n        +(long long)(a[x].second-a[y].second)*(a[x].second-a[y].second);}\n#define Chkmin(a,b) a=a<b?a:b\nvoid search(int poi,long long &r)//\u66b4\u529b\u641c\u7d22\n{\n    Rep(i,poi+1,n)\n    {\n        if((a[i].first-a[poi].first)*(a[i].first-a[poi].first)>=r)return;//\u7b54\u6848\u4e0d\u4f1a\u66f4\u4f18\uff0c\u5f39\u51fa\n        Chkmin(r,dist(poi,i));\n    }\n}\nvoid solve()\n{\n    ans=dist(1,2);//\u5148\u786e\u8ba4\u7b2c\u4e00\u4e2a\u4e0a\u754c\n    Rep(i,1,n)search(i,ans);//\u518d\u641c\u7d22\n    printf(\"%.4lf\\n\",sqrt(ans));//\u8bb0\u5f97\u522b\u5148\u5f00\u65b9\uff0c\u9632\u6b62\u7cbe\u5ea6\u8bef\u5dee\n}\nint main()\n{\n    file();\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1510130716,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "#### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P1429)\n\n## \u9898\u76ee\u63cf\u8ff0\uff1a\n\u7ed9\u5b9a\u5e73\u9762\u4e0an\u4e2a\u70b9\uff0c\u627e\u51fa\u5176\u4e2d\u7684\u4e00\u5bf9\u70b9\u7684\u8ddd\u79bb\uff0c\u4f7f\u5f97\u5728\u8fd9n\u4e2a\u70b9\u7684\u6240\u6709\u70b9\u5bf9\u4e2d\uff0c\u8be5\u8ddd\u79bb\u4e3a\u6240\u6709\u70b9\u5bf9\u4e2d\u6700\u5c0f\u7684\u3002\n***\n# Solution\n\u8fd9\u9898\u8003\u8651\u5206\u6cbb\u3002\n\u5148\u5c06\u70b9\u5bf9\u6309\u7167\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u6bcf\u6b21\u8fdb\u884c\u5206\u6cbb\u65f6\u6bcf\u6b21\u4ee5\u4e2d\u95f4\u7684\u6a2a\u5750\u6807\u7684\u70b9\u4e3a\u5206\u754c\u7ebf\u5206\u6cbb\u3002\n* \u6211\u4eec\u8bbe\u4e2d\u95f4\u90a3\u4e2a\u70b9\u7684\u7f16\u53f7\u4e3a$mid\n* \u6211\u4eec\u5c06\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9\u5bf9\u5206\u4e3a\u4e09\u7c7b\uff1a\n 1\u3001$[l,mid]\u95f4\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\u5bf9$\n 2\u3001$[mid+1,r]\u95f4\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\u5bf9$\n 3\u3001$\u8de8\u533a\u95f4\u7684\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\u5bf9$\n* \u53ea\u9700\u8981\u5c06\u4e09\u4e2a\u7b54\u6848\u53bb\u4e00\u4e2amin\u5373\u53ef\n\n\u5bf9\u4e8e\u524d\u4e24\u79cd\uff0c\u597d\u5904\u7406\uff0c\u4e0d\u65ad\u5730\u9012\u5f52\u5206\u6cbb\u5373\u53ef\n\u95ee\u9898\u4e3b\u8981\u5904\u7406\u7b2c\u4e09\u79cd\u3002\n\u56e0\u4e3a\u6211\u4eec\u5148\u8fdb\u884c\u4e86\u9012\u5f52\u5206\u6cbb\uff0c\u8fd9\u662f\u5f97\u51fa\u4e86$min(1,2)$\u7684\u7b54\u6848\u662fans\uff08\u6307\u7684\u662f\u7b2c1\u30012\u79cd\u65b9\u6848\u7684\u8f83\u5c0f\u503c\uff09\n\u8fd9\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636eans\u6765\u9650\u5b9a\u641c\u67e5\u7684\u8303\u56f4\n\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6709\u6548\u7684\u641c\u67e5\u8303\u56f4\uff0c\u5f53\u4e14\u4ec5\u5f53$x[i] - x[mid] <=ans$\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u5f53\u4e24\u6a2a\u5750\u6807\u4e4b\u5dee>ans\u65f6\uff0c\u8fd9\u662f\u7edd\u5bf9\u4e0d\u4f1a\u4e3a\u6700\u4f18\u89e3\u7684\n\n\u5c06\u8fd9\u51e0\u4e2a\u70b9\u66b4\u529b\u904d\u5386\u4e00\u904d\u5373\u53ef\u3002\n//\u8fd8\u6709\u3002\u3002\u8fd9\u4e2a\u5b9e\u6570\u7684\u5750\u6807\u662f\u4e00\u4e2a\u5751\u3002\u3002\u3002\u786e\u5b9e\u662f\u7b2c\u4e00\u6b21\u9047\u5230\n***\n# Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,maxx=0;\n//vector < int , int > xn[200010];\nstruct node{\n    double x,y,num;\n}a[200010];\n\ninline bool mycmp(node x,node y){\n    return x.x <y.x;\n}\n\ninline bool mycmpp(node x,node y){\n   return x.y<y.y;\n}\n\ndouble js(node x,node y){\n     X=x.x,Y=x.y,XX=y.x,YY=y.y;\n    return sqrt((X-XX)*(X-XX) + (Y-YY)*(Y-YY) * 1.0);\n}\n\ndouble dfs(int l,int r){\n\tdouble ans=1e12;\n    if (l >= r) return 1000000000.00;\n    if (l + 1 == r) return js(a[l],a[r]);\n    int mid=l+r>>1;\n    ans = min(dfs(l,mid) , dfs(mid+1,r));\n\tint len=0;\n\tnode b[n+10];\n\tfor (int i=l;i<=r;i++)\n\t  if (fabs(a[i].x - a[mid].x) <= ans) b[++len] = a[i]; \n\tsort(b+1,b+len+1,mycmpp);\n\tfor (int i=1;i<=len;i++)\n\t  for (int j=i+1;j<=len;j++){\n\t      if (fabs(b[i].y - b[j].y) > ans) break;\n\t      ans = min(ans,js(b[i],b[j]));\n\t  }\n\treturn ans;\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n      scanf(\"%lf %lf\",&a[i].x,&a[i].y);\n    sort(a+1,a+n+1,mycmp);\n//    dfs(1,n);\n    printf(\"%.4lf\",dfs(1,n));\n    return 0;\n}\n```\n",
        "postTime": 1564483497,
        "uid": 34301,
        "name": "\u9e6d\u5929",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u6b64\u5904\u4f7f\u7528\u4e86\u7f6e\u9876\u9898\u89e3\u7684\u65b9\u6cd5\uff0c\u5efa\u8bae\u642d\u914d\u98df\u7528\u3002\n\n\u5c31\u662f\u5148\u968f\u673a\u65cb\u8f6c\uff0c\u7136\u540e\u6839\u636e\u6a2a\u5750\u6807\u6392\u4e00\u904d\u5e8f\uff0c\u679a\u4e3e\u540e\u4e94\u4e2a\u70b9\u3002\n\n\u590d\u6742\u5ea6$O(nlogn)$\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\ntypedef long long ll;\n\nll n;\ndouble ans=0x7f7f7f7f7f7f;\n\nstruct node {\n    double x,y;\n}p[200010];\n\ninline bool cmp(node a,node b){return a.x<b.x;}\n\ninline double dis(node a,node b){return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));}\n\ninline int read(){\n    ll ans=0;bool f=0;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar())f^=(ch=='-');\n    for(;isdigit(ch);ch=getchar())ans=(ans<<3)+(ans<<1)+(ch^48);\n    return f? -ans: ans;\n}\n\nint main(){\n    n=read();\n    for(re int i=1;i<=n;i++){\n        double xx,yy;\n        scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n        xx=p[i].x*cos(422)-p[i].y*sin(422);//\u65cb\u8f6c\u516c\u5f0f\n        yy=p[i].x*sin(422)+p[i].y*cos(422);//\u8f6c\u4e24\u6b21\n        p[i].x=xx,p[i].y=yy;\n    }\n    sort(p+1,p+n+1,cmp);\n    for(re int i=1;i<=n;i++){\n        ans=(ans>dis(p[i+1],p[i]))? dis(p[i+1],p[i]): ans;//\u679a\u4e3e\u53ef\u884c\u7684\u70b9\n        ans=(ans>dis(p[i+2],p[i]))? dis(p[i+2],p[i]): ans;\n        ans=(ans>dis(p[i+3],p[i]))? dis(p[i+3],p[i]): ans;\n        ans=(ans>dis(p[i+4],p[i]))? dis(p[i+4],p[i]): ans;\n        ans=(ans>dis(p[i+5],p[i]))? dis(p[i+5],p[i]): ans;\n    }\n    printf(\"%.4lf\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1546561302,
        "uid": 104379,
        "name": "Cesare",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u697c\u4e0a\u8bf4\u7684O(n)\u7b97\u6cd5\u90fd\u662f\u4e0d\u80fd\u4fdd\u8bc1\u7edd\u5bf9\u6b63\u786e\u7684 \u800c\u4e14\u5927\u591a\u7528\u65cb\u8f6c\u5750\u6807\u8f74\u505a\u7684\u90fd\u53ea\u65cb\u8f6c\u4e86\u4e00\u6b21\t\u662f\u53ef\u4ee5\u88ab\u8f7b\u677e\u5361\u6389\u7684\n\n\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u65cb\u8f6c\u7684\u6b21\u6570\uff0c \u540c\u65f6\u628a\u5411\u540e\u679a\u4e3e\u7684\u8303\u56f4\u7f29\u5c0f\u4e00\u4e9b\uff0c\u8fd9\u6837\u7b97\u6cd5\u7684\u5e38\u6570\u867d\u7136\u5927\u4e86\uff0c\u4f46\u6b63\u786e\u6027\u66f4\u6709\u4fdd\u8bc1\uff0c\u8db3\u4ee5\u5728\u6d1b\u8c37AC.\n\n\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define Max(_A,_B) (_A>_B?_A:_B)\n#define Min(_A,_B) (_A<_B?_A:_B)\n#define maxn 200007\n#define maxm 1000001\n#define V e[i].v\n#define ull unsigned long long\n#define R register\n#define dd double\n//#define pf(x) ((x * x))\ndouble DIST(double _x, double _y, double __x, double __y) {\n    return sqrt((_x - __x) * (_x - __x) + (_y - __y) * (_y - __y));\n}\nint n, m, k, tot;\ninline int read(){\n    R int s = 0, f = 1; R char c = getchar();\n    while (c > '9' || c < '0') {if(c=='-') f= -1; c = getchar();}\n    while (c >= '0' && c <= '9') {s = s * 10 + c - '0'; c = getchar();}\n    return s * f;\n}\nstruct Point{\n    dd x, y, xx, yy;\n    bool operator < (const Point &rhs) const {\n        return xx < rhs.xx;\n    }\n}p[maxn];\ndd x, y, xx, yy, ans, sine1, cosine1;\nvoid round(){\n    static dd x, y;\n    for (int i = 1; i <= n; i++) {\n        x = p[i].xx, y = p[i].yy;\n        p[i].xx = x * cosine1 - y * sine1;\n        p[i].yy = x * sine1 + y * cosine1;\n    }\n}\nvoid work(){\n   // printf(\"%.4lf\\n\", ans);\n    for (int i = 1; i < n; i++){\n        for (int j = 1; j <= 2 && j + i <= n; j++) {//\u65cb\u8f6c\u591a\u6b21 \u6bcf\u6b21\u5411\u540e\u53d63\u4e2a\u70b9\n            x = p[i].x; y = p[i].y;\n            xx = p[i + j].x; yy = p[i + j].y;\n            ans = Min(ans, DIST(x,y,xx,yy));\n        }   \n    }\n}\nint main() {\n    n = read();\n    sine1 = sin(1); cosine1 = cos(1);   //\u6bcf\u6b21\u65cb\u8f6c1\u5f27\u5ea6 \u65cb\u8f6c\u82e5\u5e72\u6b21\n    for (int i = 1; i <= n; i++) {\n        scanf (\"%lf%lf\", &x, &y);\n        xx = x * cosine1 - y * sine1;\n        yy = x * sine1 + y * cosine1;\n        p[i].xx = xx; p[i].yy = yy; \n        p[i].x = x; p[i].y = y;\n    }\n    ans = 2e9 + 0.01;    \n    work();\n    sort(p + 1, p + n + 1);\n    work();\n    round();\n    sort(p + 1, p + n + 1);\n    work();\n    round();\n    sort(p + 1, p + n + 1);\n    work();\n    printf(\"%.4lf\\n\", ans);\n    return 0;\n}\n\n```",
        "postTime": 1532245481,
        "uid": 48887,
        "name": "YJMSTR",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u53ef\u4ee5kdtree\u505a  \n\u4f46\u662f\u6570\u636e\u7ed3\u6784\u592a\u65e0\u8111\u4e86\uff01  \n\u8fd9\u4e2a\u65f6\u5019\u5f53\u7136\u662f\u9009\u62e9\u4f18\u7f8e\u7684\u5206\u6cbb\u5566~  \n\u56e0\u4e3a\u8fd9\u9053\u9898\u4e0d\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u800c\u4e14\u70b9\u7684\u5750\u6807\u4e5f\u4e0d\u662f\u6574\u6570\uff0c\u6240\u4ee5\u4e0d\u80fd\u518d\u7528\u4e09\u7ef4\u504f\u5e8f\u90a3\u4e00\u5957\u7406\u8bba  \n\u60f3\u8fd9\u4e2a\u9898\u7684\u65f6\u5019\u628a\u601d\u7ef4\u4ececdq\u5206\u6cbb\u91cc\u8fb9\u62c9\u51fa\u6765\u8fd8\u662f\u8d39\u4e86\u4e00\u756a\u529f\u592b  \n\u56e0\u4e3a\u8fd9\u9898\u6211\u6ca1\u6709\u81ea\u5df1\u60f3\u51fa\u6765\uff0c\u6240\u4ee5\u4e0d\u518d\u505a\u601d\u8def\u5f15\u5bfc\uff0c\u76f4\u63a5\u8bf4\u660e\u505a\u6cd5\u548c\u6b63\u786e\u6027 \n\u9996\u5148\u662f\u505a\u6cd5  \n\u76f4\u63a5\u770b\u505a\u6cd5\u4e0d\u5bb9\u6613\u7406\u89e3\uff0c\u5efa\u8bae\u7ed3\u5408\u6b63\u786e\u6027\u8bc1\u660e\u89c2\u770b  \n\u5f00\u59cb\u5206\u6cbb\u524d\u5148\u4ee5\u6a2a\u5750\u6807\u4e3a\u7b2c\u4e00\u4f18\u5148\u7ea7\u6392\u5e8f  \n\u8fd9\u9053\u9898\u4f7f\u7528\u7684\u662f\u540e\u5e8f\u5206\u6cbb\uff0c\u5148\u9012\u5f52\u5206\u6cbb\u4e24\u8fb9\u7684\u533a\u95f4\uff0c\u83b7\u5f97\u4e24\u8fb9\u533a\u95f4\u91cc\u7684\u6700\u4f18\u503cd  \n\uff08\u4e24\u4e2a\u533a\u95f4\u663e\u7136\u8981\u5bf9\u534a\u5206  \n\u7136\u540e\u5c06\u53f3\u8fb9\u533a\u95f4\u4e2d\u6240\u6709\u6ee1\u8db3\u6a2a\u5750\u6807\u548c\u4e2d\u70b9\u6a2a\u5750\u6807\u4e4b\u5dee\u5c0f\u4e8ed\u7684\u70b9\u5168\u90e8\u6309\u4e0b\u6807\u9012\u589e\u7684\u987a\u5e8f\u6536\u5f55\u5230\u4e00\u4e2a\u961f\u5217\u91cc  \n\u73b0\u5728\u6309\u4e0b\u6807\u9012\u589e\u7684\u987a\u5e8f\u626b\u63cf\u5de6\u8fb9\u7684\u70b9\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u6ee1\u8db3\u6a2a\u5750\u6807\u548c\u4e2d\u70b9\u6a2a\u5750\u6807\u4e4b\u5dee\u5c0f\u4e8ed\u7684\u70b9\uff0c\u9996\u5148\u4ece\u961f\u5c3e\u9010\u6e10\u5c06\u4e0d\u6ee1\u8db3\u7eb5\u5750\u6807\u548c\u5f53\u524d\u70b9\u7eb5\u5750\u6807\u4e4b\u5dee\u5c0f\u4e8ed\u7684\u70b9\u51fa\u961f\uff0c\u518d\u4ece\u961f\u5c3e\u5411\u540e\u626b\u63cf\u6240\u6709\u70b9\uff0c\u76f4\u5230\u5230\u8fbe\u961f\u5934\u6216\u961f\u4e2d\u70b9\u7684\u7eb5\u5750\u6807\u548c\u5f53\u524d\u70b9\u4e4b\u5dee\u5927\u4e8ed  \n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u626b\u63cf\u5230\u7684\u961f\u4e2d\u7684\u70b9\uff0c\u8ba1\u7b97\u548c\u5f53\u524d\u70b9\u7684\u8ddd\u79bb\u5e76\u66f4\u65b0\u7b54\u6848  \n\u6700\u540e\u4ee5\u5f52\u5e76\u6392\u5e8f\u7684\u5f62\u5f0f\u628a\u5f53\u524d\u533a\u95f4\u4ee5\u7eb5\u5750\u6807\u4e3a\u7b2c\u4e00\u4f18\u5148\u7ea7\u6392\u5e8f  \n\u73b0\u5728\u8bf4\u660e\u6b63\u786e\u6027  \n\u5f00\u59cb\u5bf9\u6a2a\u5750\u6807\u7684\u6392\u5e8f\u53ea\u662f\u5feb\u901f\u53d6\u5230\u533a\u95f4\u4e2d\u95f4\u70b9\u7684\u6a2a\u5750\u6807\u4ee5\u786e\u4fdd\u590d\u6742\u5ea6  \n\u4e24\u8fb9\u9012\u5f52\u540e\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u6a2a\u5750\u6807\u548c\u4e2d\u7ebf\u8ddd\u79bb\u5dee\u5c0f\u4e8ed\u7684\u70b9\uff0c\u628a\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u5de6\u8fb9\u4e2d\u70b9\u7684\u6b63\u65b9\u5f62\u4e2d\u7684\u6240\u6709\u70b9\u62ff\u51fa\u6765\uff0c\u5e76\u7edf\u8ba1\u7b54\u6848  \n\u56e0\u4e3a\u5982\u679c\u4e24\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\u5dee\u5927\u4e8ed\uff0c\u663e\u7136\u4e00\u5b9a\u4e0d\u4f1a\u662f\u6700\u4f18\u89e3\uff0c\u7eb5\u5750\u6807\u540c\u7406  \nd\u662f\u9012\u5f52\u5f97\u5230\u7684\uff0c\u53ef\u4ee5\u653e\u5fc3\u4ea4\u7ed9\u9012\u5f52\u800c\u4e0d\u7528\u7ba1\u5b83  \n\u6700\u540e\u7684\u5f52\u5e76\u6392\u5e8f\u4fdd\u8bc1\u533a\u95f4\u5408\u5e76\u540ey\u662f\u5355\u8c03\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u961f\u5217\u7684\u65b9\u5f0f\u5feb\u901f\u9009\u51fa\u6b63\u65b9\u5f62\u4e2d\u7684\u70b9  \n\u73b0\u5728\u8bc1\u660e\u590d\u6742\u5ea6  \n\u7531\u9e3d\u5de2\u539f\u7406\u6613\u5f97\u6b63\u65b9\u5f62\u4e2d\u7684\u70b9\u4e0d\u4f1a\u8d85\u8fc76\u4e2a  \n\uff08\u60f3\u8c61\u4e00\u4e0b\u5f80\u4e00\u4e2a\u8fb9\u957f\u4e3a2d\u7684\u6b63\u65b9\u5f62\u91cc\u585e\u534a\u5f84\u662fd\u7684\u7403\uff0c\u585e\u4e0d\u4e86\u51e0\u4e2a  \n\u90a3\u4e48\u6bcf\u4e2a\u5de6\u8fb9\u7684\u70b9\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u95f4\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e38\u6570\uff0c\u53ef\u4ee5\u5ffd\u7565  \n\u5bf9\u4e8e\u961f\u5217\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u70b9\u6700\u591a\u8fdb\u4e00\u6b21\u961f\uff0c\u51fa\u4e00\u6b21\u961f\uff0c\u590d\u6742\u5ea6\u4e3a$ O(n) $  \n\u5f52\u5e76\u6392\u5e8f\u4e5f\u662f$ O(n) $  \n\u90a3\u4e48\u4ee4$ T(n) $\u4e3a\u7b97\u6cd5\u590d\u6742\u5ea6\uff0c\u6ee1\u8db3$ T(n)=2T(\\frac{n}{2})+O(n) $  \n\u7531\u4e3b\u5b9a\u7406\u53ef\u5f97\u6700\u7ec8\u590d\u6742\u5ea6\u4e3a$ \\Theta (nlogn) $   \n\uff08\u9898\u89e3\u5199\u7684\u6709\u70b9\u5947\u602a\uff0c\u8fd8\u662f\u9700\u8981\u7406\u89e3\u6e05\u695a\uff0c\u601d\u8def\u518d\u4ece\u5934\u8003\u8651\u4e00\u4e2a  \n\u8fd9\u4e2a\u505a\u6cd5\u7684\u6838\u5fc3\uff0c\u5c31\u662f\u5e94\u7528\u4e86\u4e24\u8fb9\u5206\u6cbb\u5b8c\u540ey\u5355\u8c03\u7684\u6027\u8d28\uff0c\u4ee5\u53ca\u60f3\u5230\u5728\u4e2d\u7ebf\u4e24\u8fb9\u6a2a\u5750\u6807\u8ddd\u79bb\u5c0f\u4e8ed\u7684\u8303\u56f4\u5185\u9009\u70b9\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba  \nd\u4e5f\u662f\u4e24\u8fb9\u5206\u6cbb\u7684\u5230\u7684\uff0c\u6240\u4ee5\u5206\u6cbb\u65f6\u6ce8\u610f\u5206\u6cbb\u5f97\u5230\u7684\u6027\u8d28\u771f\u7684\u662f\u5f88\u91cd\u8981\u5462~  \n\u6709\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879  \n\u6ce8\u610f\u8fb9\u754c\uff08r=l+1\uff09\u7684\u65f6\u5019\u4e0d\u8981\u5fd8\u4e86\u5904\u7406y\u7684\u987a\u5e8f  \n\u533a\u95f4\u4e2d\u70b9\u662f\u4f1a\u53d8\u7684\uff08\u4e24\u8fb9\u9012\u5f52\u7684\u65f6\u5019\u5bf9y\u8fdb\u884c\u4e86\u6392\u5e8f\uff09\uff0c\u6240\u4ee5\u8981\u5148\u8bb0\u5f55\u4e00\u4e0b\u4e2d\u70b9\u6a2a\u5750\u6807  \n\u4ee3\u7801\uff1a  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst double oo=1e9;\nint rd(){int z=0,mk=1;  char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')mk=-1;  ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){z=(z<<3)+(z<<1)+ch-'0';  ch=getchar();}\n\treturn z*mk;\n}\nstruct nds{double x,y;}a[210000];\ninline double sqr(double x){  return x*x;}\ninline double dstc(nds x,nds y){  return sqrt(sqr(x.x-y.x)+sqr(x.y-y.y));}\nint n;\nnds q[210000];  int hd=0,tl=1;\nint bnrsch(double x,int l,int r){\n\tint md;\n\twhile(l+1<r)  md=(l+r)>>1,(q[md].y>x ? l : r)=md;\n\treturn q[l].y>x ? l : r;\n}\ndouble dac(int l,int r){\n\tif(l==r)  return oo;\n\tif(r==l+1){\n\t\tif(a[l].y>a[r].y)  swap(a[l],a[r]);\n\t\t//\u6ce8\u610f\u8fb9\u754c\u7684\u65f6\u5019\u5904\u7406y\u7684\u6392\u5e8f\n\t\treturn dstc(a[l],a[r]);\n\t}\n\tint md=(l+r)>>1;\n\tdouble mdx=a[md].x;\n\t//\u6ce8\u610fa[md]\u4f1a\u53d8\uff01\uff01\uff01\uff01\uff01\uff01\n\tdouble d=min(dac(l,md),dac(md+1,r));\n\tdouble bwl=d;\n\thd=0,tl=1;\n\tfor(int i=md+1;i<=r;++i)\n\t\t//if(abs(a[i].x-a[md].x)<d)\n\t\tif(abs(a[i].x-mdx)<d)\n\t\t\tq[++hd]=a[i];\n\tfor(int i=l;i<=md;++i)\n\t\tif(abs(a[i].x-mdx)<d){\n\t\t\twhile(tl<=hd && a[i].y-q[tl].y>d)  ++tl;\n\t\t\tfor(int j=tl;j<=hd && abs(a[i].y-q[j].y)<d;++j)\n\t\t\t\tbwl=min(bwl,dstc(a[i],q[j]));\n\t\t}\n\tint hd1=l,hd2=md+1;\n\tfor(int i=l;i<=r;++i){\n\t\tif(hd2<=r && (hd1>md || a[hd2].y<a[hd1].y))  q[i]=a[hd2++];\n\t\t//\u6ce8\u610f\u4e0d\u8981\u5fd8\u4e86hd2<=r\n\t\telse  q[i]=a[hd1++];\n\t}\n\tfor(int i=l;i<=r;++i)  a[i]=q[i];\n\treturn bwl;\n}\nbool cmp(nds x,nds y){  return x.x==y.x ? x.y<y.y : x.x<y.x;}\n//\u7ed9\u521d\u59cb\u6570\u7ec4\u7684\u6240\u6709\u7ef4\u5ea6\u90fd\u6392\u4e2a\u5e8f\u662f\u597d\u4e60\u60ef\nint main(){//freopen(\"ddd.in\",\"r\",stdin);  freopen(\"ddd.out\",\"w\",stdout);\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)  scanf(\"%lf %lf\",&a[i].x,&a[i].y);\n\tsort(a+1,a+n+1,cmp);\n\tprintf(\"%.4lf\\n\",dac(1,n));\n\treturn 0;\n}\n```",
        "postTime": 1527945667,
        "uid": 26087,
        "name": "cdcq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1429 \u3010\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u3011"
    }
]