[
    {
        "content": "\n\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\u3002\u76f4\u63a5\u5224\u65ad\u4e24\u4e2a\u70b9\u6240\u5c5e\u7684\u4e0d\u540c\u7684\u77e9\u5f62\u7684\u6570\u91cf\u3002\n\n\u6700\u5f00\u59cb\u4e00\u76f4\u4e0d\u77e5\u9053\u95ee\u9898\u51fa\u5728\u54ea\u513f\uff0c\u540e\u6765\u501f\u9274\u4e86\u9898\u89e3\u7684\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/63cz8nyg.png)\n\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u9898\u76ee\u7684\u5751\u70b9\u5728\u4e8e\u65e0\u6cd5\u6cbf\u8fb9\u7ebf\u8d70\u3002\n\n\u6b63\u89e3\uff1a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u53d1\u73b0\uff0cn\u975e\u5e38\u5c0f\uff0c\u53ea\u6709100\u3002\u90a3\u4e48\u6211\u4eec\u5148\u79bb\u6563\u5316\u3002\u7136\u540e\u5728\u79bb\u6563\u5316\u540e\u7684\u56fe\u4e2d\u5728\u4e24\u70b9\u4e4b\u95f4\u8fde\u8fb9\u3002\u6ca1\u6709\u8de8\u8fc7\u78c1\u573a\u7684\u8fb9\u6743\u4e3a0\uff0c\u8de8\u8fc7\u78c1\u573a\u7684\u8fb9\u6743\u4e3a1\u3002\u7136\u540e\u8dd1spfa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0d\u8fc7\u79bb\u6563\u5316\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u4e00\u4e9b\u5c0f\u95ee\u9898\u3002\u4e0d\u80fd\u76f4\u63a5\u628a\u7b2c\u4e00\u4e2a\u51fa\u73b0\u548c\u6700\u540e\u4e00\u4e2a\u51fa\u73b0\u7684\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u770b\u6210\u662f\u8fb9\u754c\uff0c\u56e0\u4e3a\u78c1\u573a\u662f\u6ca1\u6709\u8fb9\u754c\u7684\uff0c\u5b83\u6709\u53ef\u80fd\u4ece\u5916\u9762\u7ed5\u4e00\u5927\u5708\u8fc7\u53bb\uff0c\u5e76\u4e0d\u7a7f\u8fc7\u78c1\u573a\u3002\n\u8fd8\u6709\u5c31\u662f\u8981\u6ce8\u610f\u79bb\u6563\u5316\u7684\u65f6\u5019\u4e0d\u8981\u628a\u4e00\u4e9b\u80fd\u901a\u8fc7\u7684\u5730\u65b9\u53d8\u6210\u4e0d\u80fd\u901a\u8fc7\u7684\u4e86\uff0c\u6bd4\u5982\u8bf4\u672c\u6765\u4e24\u6761\u8fb9\u4e2d\u95f4\u6709\u8def\u53ef\u8d70\u7ed3\u679c\u5904\u7406\u6210\u4e86\u4e24\u6761\u8fb9\u76f8\u90bb\uff0c\u4e5f\u4e0d\u80fd\u628a\u539f\u6765\u4e0d\u80fd\u8d70\u7684\u5730\u65b9\u5904\u7406\u6210\u80fd\u8d70\u7684\u4e86\u3002\n\n## code\n```\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define maxn 510\nusing namespace std;\n\nstruct node{\n\tint a,b,c,d;\n}s[maxn];\n\nint n,x,y,l,A,B,C,D;\nint xx,yy,cntx,cnty,X[maxn*2],Y[maxn*2],xp[maxn*2],yp[maxn*2],lshx[maxn*2],lshy[maxn*2];\nint tot,point[maxn*maxn],nxt[maxn*maxn*10],v[maxn*maxn*10],c[maxn*maxn*10],dis[maxn*maxn];\nbool flag[maxn][maxn][2],vis[maxn*maxn];\nqueue<int> q;\n\nint cmpx(int x,int y){\n\treturn X[x]<X[y];\n}\n\nint cmpy(int x,int y){\n\treturn Y[x]<Y[y];\n}\n\nvoid add(int x,int y,int z){\n\tnxt[++tot]=point[x];point[x]=tot;v[tot]=y;c[tot]=z;\n\tnxt[++tot]=point[y];point[y]=tot;v[tot]=x;c[tot]=z;\n}\n\nvoid spfa(){\n\tint s=(A-1)*cnty+B;\n\tmemset(dis,127,sizeof(dis)),dis[s]=0;\n\tmemset(vis,0,sizeof(vis)),vis[s]=true;\n\twhile(!q.empty()) q.pop();\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tvis[now]=false;\n\t\tfor(int i=point[now];i;i=nxt[i])\n\t\t\tif(dis[v[i]]>dis[now]+c[i]){\n\t\t\t\tdis[v[i]]=dis[now]+c[i];\n\t\t\t\tif(!vis[v[i]]){\n\t\t\t\t\tvis[v[i]]=true;\n\t\t\t\t\tq.push(v[i]);\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n\nvoid init(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d%d%d\",&x,&y,&l);\n\t\tX[++xx]=x,xp[xx]=xx,X[++xx]=x+l,xp[xx]=xx;\n\t\tY[++yy]=y,yp[yy]=yy,Y[++yy]=y+l,yp[yy]=yy;\n\t}\n\tscanf(\"%d%d%d%d\",&A,&B,&C,&D);\n\tX[++xx]=A,xp[xx]=xx,X[++xx]=C,xp[xx]=xx;\n\tY[++yy]=B,yp[yy]=yy,Y[++yy]=D,yp[yy]=yy;\n\n\tX[++xx]=-1,xp[xx]=xx,Y[++yy]=-1,yp[yy]=yy;\n\tX[++xx]=10000,xp[xx]=xx,Y[++yy]=10000,yp[yy]=yy;\n}\n\nvoid lsh(){\n\tsort(xp+1,xp+xx+1,cmpx);sort(yp+1,yp+yy+1,cmpy);\n\tfor(int i=1;i<=xx;++i){\n\t\tif(X[xp[i]]!=X[xp[i-1]]) ++cntx,lshx[xp[i]]=++cntx;\n\t\telse lshx[xp[i]]=cntx;\n\t}\n\tfor(int i=1;i<=yy;++i){\n\t\tif(Y[yp[i]]!=Y[yp[i-1]]) ++cnty,lshy[yp[i]]=++cnty;\n\t\telse lshy[yp[i]]=cnty;\n\t}\n\txx=yy=0;\n\tfor(int i=1;i<=n;++i){\n\t\ts[i].a=lshx[++xx],s[i].b=lshx[++xx];\n\t\ts[i].c=lshy[++yy],s[i].d=lshy[++yy];\n\t}\n\tA=lshx[++xx],C=lshx[++xx],B=lshy[++yy],D=lshy[++yy];\n}\n\nint main(){\n\tinit();\n\tlsh();\n\tfor(int i=1;i<=n;++i){\n\t\tint a=s[i].a,b=s[i].b,c=s[i].c,d=s[i].d;\n\t\tfor(int j=a;j<b;++j) flag[j][d][0]=flag[j][c][0]=1;\n\t\tfor(int j=c;j<d;++j) flag[a][j][1]=flag[b][j][1]=1;\n\t}\n\tfor(int i=1;i<=cntx;++i)\n\t\tfor(int j=1;j<=cnty;++j){\n\t\t\tint r=(i-1)*cnty+j,t;\n\t\t\tif(!flag[i][j][0]){\n\t\t\t\tt=i*cnty+j;\n\t\t\t\tif(flag[i][j][1]) add(r,t,1);\n\t\t\t\telse add(r,t,0);\n\t\t\t}\n\t\t\tif(!flag[i][j][1]){\n\t\t\t\tt=(i-1)*cnty+j+1;\n\t\t\t\tif(flag[i][j][0]) add(r,t,1);\n\t\t\t\telse add(r,t,0);\n\t\t\t}\n\t\t}\n\tspfa();\n\tint t=(C-1)*cnty+D;\n\tprintf(\"%d\\n\",dis[t]);\n}\n```\n",
        "postTime": 1568770185,
        "uid": 111961,
        "name": "D_14134",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2537 \u3010[AHOI2005]\u7a7f\u8d8a\u78c1\u573a\u3011"
    },
    {
        "content": "\u5c06\u6240\u6709\u7684\u6b63\u65b9\u5f62\u78c1\u573a\u7684\u8fb9\u754c\u5750\u6807\u79bb\u6563\u5316\uff0c\u5c06\u539f\u56fe\u53d8\u6210\u7f51\u683c\u56fe\u3002\n\n\u5904\u7406\u4e00\u4e0b\u5f80\u4e0a/\u4e0b/\u5de6/\u53f3\u8d70\u4f1a\u8de8\u8d8a\u6b63\u65b9\u5f62\u8fb9\u754c\u7684\u683c\u5b50\uff0c\u4ed6\u4eec\u5f80\u8fd9\u4e2a\u65b9\u5411\u8d70\u652f\u4ed81\u7684\u4ee3\u4ef7\uff0c\u5176\u4ed6\u683c\u5b50\u4efb\u610f\u8d70\u652f\u4ed80\u7684\u4ee3\u4ef7\u3002\n\n\u7136\u540e\u53ef\u4ee5\u7528dijkstra\u6216\u800501bfs\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\u5373\u53ef\u89e3\u51b3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define RI register int\nconst int N=105,inf=0x3f3f3f3f;\nint n,js1,js2,sx,sy,tx,ty;\nint bx[N<<1],by[N<<1],X[N],Y[N],C[N],v[N][N][4],dis[N][N];\nint mvx[5]={-1,1,0,0},mvy[5]={0,0,-1,1};\n\nint getx(int x) {return lower_bound(bx+1,bx+1+js1,x)-bx;}\nint gety(int y) {return lower_bound(by+1,by+1+js2,y)-by;}\nvoid prework() {\n\tbx[n+n+1]=by[n+n+1]=inf,bx[n+n+2]=by[n+n+2]=-inf;\n    //\u6dfb\u52a0\u65e0\u9650\u8fb9\u754c\uff0c\u4e5f\u5c31\u662f\u4e0d\u5728\u4efb\u4f55\u78c1\u573a\u4e2d\u7684\u683c\u5b50\n\tsort(bx+1,bx+n+n+3),sort(by+1,by+n+n+3);\n\tjs1=1;for(RI i=2;i<=n+n+2;++i) if(bx[i]!=bx[js1]) bx[++js1]=bx[i];\n\tjs2=1;for(RI i=2;i<=n+n+2;++i) if(by[i]!=by[js2]) by[++js2]=by[i];\n    //\u53bb\u91cd\n\tfor(RI i=1;i<=n;++i) {\n\t\tint X1=getx(X[i]),X2=getx(X[i]+C[i]);\n\t\tint Y1=gety(Y[i]),Y2=gety(Y[i]+C[i]);\n\t\tfor(RI j=X1;j<X2;++j)//\u5904\u7406\u8de8\u8d8a\u6b63\u65b9\u5f62\u7684\u4ee3\u4ef7\n\t\t\tv[j][Y1][2]=v[j][Y2-1][3]=v[j][Y1-1][3]=v[j][Y2][2]=1;\n\t\tfor(RI j=Y1;j<Y2;++j)\n\t\t\tv[X1][j][0]=v[X2-1][j][1]=v[X1-1][j][1]=v[X2][j][0]=1;\n\t}\n    //\u627e\u5230\u8d77\u70b9\u548c\u7ec8\u70b9\u6240\u5728\u7684\u683c\u5b50\n\tsx=getx(sx)-1,sy=gety(sy)-1,tx=getx(tx)-1,ty=gety(ty)-1;\n}\ntypedef pair<int,int> PR;\ndeque<PR> q;\nvoid bfs() {//01bfs\n\tfor(RI i=1;i<js1;++i)\n\t\tfor(RI j=1;j<js2;++j) dis[i][j]=inf;\n\tdis[sx][sy]=0,q.push_back((PR){sx,sy});\n\twhile(!q.empty()) {\n\t\tPR kl=q.front();q.pop_front();\n\t\tint x=kl.first,y=kl.second;\n\t\tfor(RI i=0;i<4;++i) {\n\t\t\tint kx=x+mvx[i],ky=y+mvy[i];\n\t\t\tif(kx<1||ky<1||kx>=js1||ky>=js2) continue;\n\t\t\tif(dis[x][y]+v[x][y][i]<dis[kx][ky]) {\n\t\t\t\tif(dis[kx][ky]==inf) {\n\t\t\t\t\tif(v[x][y][i]) q.push_back((PR){kx,ky});\n\t\t\t\t\telse q.push_front((PR){kx,ky});\n\t\t\t\t}\n\t\t\t\tdis[kx][ky]=dis[x][y]+v[x][y][i];\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(RI i=1;i<=n;++i) {\n\t\tscanf(\"%d%d%d\",&X[i],&Y[i],&C[i]);\n\t\tbx[i]=X[i],bx[n+i]=X[i]+C[i];\n\t\tby[i]=Y[i],by[n+i]=Y[i]+C[i];\n\t}\n\tscanf(\"%d%d%d%d\",&sx,&sy,&tx,&ty);\n\tprework(),bfs();\n\tprintf(\"%d\\n\",dis[tx][ty]);\n\treturn 0;\n}\n```",
        "postTime": 1541149055,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2537 \u3010[AHOI2005]\u7a7f\u8d8a\u78c1\u573a\u3011"
    },
    {
        "content": "# P2537 [AHOI2005]\u7a7f\u8d8a\u78c1\u573a\n\n##   [LINK](https://www.luogu.com.cn/problem/P2537)\n\n## \u4e3b\u8981\u601d\u60f3\uff1a\u79bb\u6563\u5316 + \u6700\u77ed\u8def\n\n\u9898\u76ee\u4e2d\u8981\u6c42\u6211\u4eec\u6c42\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7ecf\u8fc7\u7684\u78c1\u573a\u8fb9\u7f18\u7684\u6570\u76ee\uff0c\u90a3\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u8f6c\u5316\u4e00\u4e0b\uff0c\u628a\u6bcf\u4e00\u4e2a\u533a\u57df\u770b\u6210\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8d77\u70b9\u6240\u5728\u7684\u8054\u901a\u5757\u5230\u7ec8\u70b9\u6240\u5728\u7684\u8054\u901a\u5757\uff0c\u5176\u4e2d\u6240\u7ecf\u8fc7\u7684\u8054\u901a\u5757\u7684\u5757\u6570\uff0c\u5c31\u662f\u6211\u4eec\u6240\u8981\u6c42\u7684\u7684\u7b54\u6848\u3002**\u8fd9\u6837\u6211\u4eec\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6c42\u8054\u901a\u5757\uff0c\u518d\u628a\u76f8\u90bb\u7684\u8054\u901a\u5757\u7684\u8fb9\u6743\u8bbe\u4e3a 1 \u5c31\u884c\u4e86**\uff0c\u95ee\u9898\u662f\u600e\u4e48\u6c42\u51fa\u8054\u901a\u5757\u3002\n\n**BFS??**\n\n\u663e\u7136\u6548\u7387\u8fc7\u4e8e\u4f4e\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u4e24\u6761\u5206\u5272\u7ebf\u4e4b\u95f4\u4f1a\u6709\u5f88\u591a\u6ca1\u6709\u7528\u7684\u70b9\uff0c\u5373\u77e9\u5f62\u5185\u90e8\u7684\u7a7a\u767d\u533a\u57df\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u8d70\u7684\u8bdd\u662f\u6ca1\u6709\u4efb\u4f55\u8d21\u732e\u7684\uff0c\u6240\u4ee5\u663e\u5f97\u5f88\u591a\u4f59\uff0c\u8fd8\u4f1a\u4f7f\u6211\u4eec\u7684\u77e9\u5f62\u6269\u5927\uff0c\u90a3\u6211\u4eec\u771f\u6b63\u6709\u610f\u4e49\u7684\u8bf4\u662f\u4ec0\u4e48\uff1f\uff1f\uff1f\n\n\u5c31\u662f\u8fb9\u754c\uff0c\u5f53\u6211\u4eec\u7ecf\u8fc7\u8fb9\u754c\u7684\u65f6\u5019\u624d\u4f1a\u589e\u52a0\u7b54\u6848\uff0c\u4f46\u662f\u5728\u8fb9\u754c\u5185\u90e8\uff0c\u6839\u672c\u4e0d\u4f1a\u9020\u6210\u4ec0\u4e48\u592a\u5927\u7684\u5f71\u54cd\uff0c\u518d\u8003\u8651\u5230\u6211\u4eec\u7684\u8fb9\u957f\u5f88\u5927\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u79bb\u6563\u5316\u4e86\u3002\n\n\u4f46\u662f\u79bb\u6563\u5316\u7684\u8fc7\u7a0b\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u70b9\uff1a\n\n$\\bullet$ \u5bf9\u4e8e\u4e24\u4e2a\u8fb9\u4e4b\u95f4\u6709\u7a7a\u767d\u7684\u8fb9\uff0c\u9700\u8981\u6211\u4eec\u518d\u52a0\u4e0a\u4e00\u6761\u8fb9\u6765\u8868\u793a\u4e2d\u95f4\u7684\u7a7a\u767d\u90e8\u5206\uff08\u4e3a\u4e86\u4e0d\u6539\u53d8\u539f\u6765\u56fe\u50cf\u7684\u6027\u8d28\uff09\u3002\n\n$\\bullet$ \u6211\u4eec\u8fd8\u662f\u770b\u6210\u7f51\u683c\u56fe\u6765\u8ba1\u7b97\uff0c\u53ea\u662f\u9700\u8981\u6211\u4eec\u628a $x,y$ \u4e24\u7ef4\u5206\u5f00\u8ba1\u7b97\u5373\u53ef\u3002\n\n```c++\nint n, tx, ty, sx, sy, ex, ey;\nint dx[5] = {0, 1, -1, 0, 0}, dy[5] = {0, 0, 0, 1, -1};\nint Sx[N], Sy[N], visx[1001][1001], visy[1001][1001];\nstruct node\n{\n    int x1, x2, y1, y2;\n}a[N];\nint head[N], ver[N], nxt[N], edge[N], tot;\nil void add(int x, int y, int z) {ver[++tot] = y; nxt[tot] = head[x]; head[x] = tot; edge[tot] = z;}\nil int id(int x, int y) {return (x - 1) * ty + y;}\nint d[N], v[N];\nqueue<int> q;\nil void spfa()\n{\n    memset(d, 0x3f, sizeof(d));\n    d[id(sx, sy)] = 0;\n    v[id(sx, sy)] = 1;\n    q.push(id(sx, sy));\n    while(q.size())\n    {\n        int x = q.front(); q.pop();\n        v[x] = 0;\n        for_edge(i, x)\n        {\n            int y = ver[i], z = edge[i];\n            if(d[y] > d[x] + z)\n            {\n                d[y] = d[x] + z;\n                if(!v[y]) v[y] = 1, q.push(y);\n            }\n        }\n    }\n}\n\nsigned main()\n{\n    n = re();\n    for_1(i, n)\n    {\n        int x = re(), y = re(), c = re();\n        a[i] = node{x, x + c, y, y + c};\n    }\n    sx = re(), sy = re(), ex = re(), ey = re();\n    Sx[++tx] = sx, Sx[++tx] = ex, Sy[++ty] = sy, Sy[++ty] = ey;\n    for_1(i, n)\n    {\n        Sx[++tx] = a[i].x1, Sx[++tx] = a[i].x2;\n        Sy[++ty] = a[i].y1, Sy[++ty] = a[i].y2;\n    }\n    sort(Sx + 1, Sx + 1 + tx); sort(Sy + 1, Sy + 1 + ty);\n    tx = unique(Sx + 1, Sx + 1 + tx) - Sx - 1, ty = unique(Sy + 1, Sy + 1 + ty) - Sy - 1;\n    for_xy(i, 2, tx) if(Sx[i] - Sx[i - 1] > 1) Sx[++tx] = Sx[i] - 1;\n    for_xy(i, 2, ty) if(Sy[i] - Sy[i - 1] > 1) Sy[++ty] = Sy[i] - 1;//\u8fd9\u4e00\u884c\u548c\u4e0a\u4e00\u884c\u5c31\u662f\u4fdd\u8bc1\u4e4b\u95f4\u6709\u4e00\u4e2a\u7a7a\u767d\n    Sx[++tx] = -10, Sy[++ty] = -10; Sx[++tx] = INF, Sy[++ty] = INF;//\u52a0\u4e0a\u8fb9\u754c\n    sort(Sx + 1, Sx + 1 + tx); sort(Sy + 1, Sy + 1 + ty);\n    tx = unique(Sx + 1, Sx + 1 + tx) - Sx - 1, ty = unique(Sy + 1, Sy + 1 + ty) - Sy - 1;\n    for(int i = 1; i <= n; ++i)\n    {\n        a[i].x1 = lower_bound(Sx + 1, Sx + 1 + tx, a[i].x1) - Sx;\n        a[i].x2 = lower_bound(Sx + 1, Sx + 1 + tx, a[i].x2) - Sx;\n        a[i].y1 = lower_bound(Sy + 1, Sy + 1 + ty, a[i].y1) - Sy;\n        a[i].y2 = lower_bound(Sy + 1, Sy + 1 + ty, a[i].y2) - Sy;\n        for_xy(j, a[i].x1, a[i].x2) visx[j][a[i].y1] = visx[j][a[i].y2] = 1;//\u5206\u6210x,y\u4e24\u7ef4\uff0c\u65b9\u4fbf\u8ba1\u7b97\n        for_xy(j, a[i].y1, a[i].y2) visy[a[i].x1][j] = visy[a[i].x2][j] = 1;\n    }\n    sx = lower_bound(Sx + 1, Sx + 1 + tx, sx) - Sx, sy = lower_bound(Sy + 1, Sy + 1 + ty, sy) - Sy;\n    ex = lower_bound(Sx + 1, Sx + 1 + tx, ex) - Sx, ey = lower_bound(Sy + 1, Sy + 1 + ty, ey) - Sy;\n    for_1(i, tx)\n    {\n        for_1(j, ty)\n        {\n            for(int k = 1; k <= 4; ++k)\n            {\n                int xx = i + dx[k], yy = j + dy[k];\n                if(xx < 1 || xx > tx || yy < 1 || yy > ty) continue;\n                if(k == 1) add(id(i, j), id(xx, yy), visy[xx][yy]);//\u5efa\u8fb9\uff0c\u4e0e\u4e0a\u9762\u76f8\u5bf9\u5e94\uff0c\u4e0d\u518d\u8d58\u8ff0\n                if(k == 2) add(id(i, j), id(xx, yy), visy[xx][yy]);\n                if(k == 3) add(id(i, j), id(xx, yy), visx[xx][yy]);\n                if(k == 4) add(id(i, j), id(xx, yy), visx[xx][yy]);\n            }\n        }\n    }\n    spfa();//\u6109\u5feb\u7684\u8dd1\u6700\u77ed\u8def\n    cout<<d[id(ex, ey)]<<endl;\n}\n\n```\n\n\u5b8c\u7ed3\u6492\u82b1\u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f",
        "postTime": 1631660511,
        "uid": 333580,
        "name": "Zwaire",
        "ccfLevel": 6,
        "title": "P2537"
    }
]