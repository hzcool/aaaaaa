[
    {
        "content": "[\u66f4\u4f18\u9605\u8bfb\u4f53\u9a8c](https://sunnuozhou.github.io/2020/04/22/Berlekamp-Massey%E7%AE%97%E6%B3%95%E7%AE%80%E4%BB%8B/)\n\n\u672c\u9898\u7531BM\u7b97\u6cd5\u548c\u77e9\u9635\u7279\u5f81\u591a\u9879\u5f0f\u4e24\u90e8\u5206\u6784\u6210\n\n# Berlekamp-Massey\u7b97\u6cd5\n\nBerlekamp-Massey\u7b97\u6cd5\uff0c\u7b80\u79f0BM\u7b97\u6cd5\uff0c\u662f\u7528\u6765\u6c42\u89e3\u4e00\u4e2a\u6570\u5217\u6700\u77ed\u7ebf\u6027\u9012\u63a8\u5f0f\u7684\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n\n## \u7b97\u6cd5\u6d41\u7a0b\n\n\u8bb0\u6570\u5217\u4e3a $\\{a_1,a_2,..,a_n\\}$\uff0c\u53ea\u8003\u8651 $\\{a_1,a_2,..,a_i\\}$\u7684\u6700\u77ed\u7ebf\u6027\u9012\u63a8\u4e3a $R_i$\uff0c$a_{i+1}$ \u548c\u7528 $R_i$ \u63a8\u7b97\u51fa\u7684\u4e0b\u4e00\u4e2a\u6570\u7684\u5dee\u4e3a $delta_i$\u3002\u7279\u522b\u7684\uff0c$R_0=\\{\\}$\u3002\n\u73b0\u5728\u8003\u8651\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 $R_1,R_2,..R_{i-1}$\uff0c\u5982\u4f55\u6c42 $R_i$\uff1f\n\n- \u5982\u679c $delta_{i-1}=0$\uff0c\u90a3\u4e48\u663e\u7136 $R_i=R_{i-1}$\n\n- \u5982\u679c $R_{i-1}$ \u4e3a $\\{\\}$\uff0c\u90a3\u4e48 $R_i=\\{0,0,..,0\\}$\uff0c\u5171 $i$ \u4e2a0\u3002\n\n- \u5426\u5219\u6211\u4eec\u9700\u8981\u5bf9 $R_{i-1}$ \u8fdb\u884c\u8c03\u6574\u6765\u5f97\u5230 $R_i$\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u60f3\u662f\u627e\u5230\u4e00\u4e2a\u7ebf\u6027\u9012\u63a8\u5f0f $R'=\\{r'_1,r'_2,..,r'_k\\}$ \u6ee1\u8db3 $\\sum_{j=1}^kr'_j\\times a_{w-j}=0$ \u5bf9\u6240\u6709 $k<w<i$ \u6210\u7acb\uff0c\u5e76\u4e14\u5728 $i$ \u5904\u7684\u503c\u4e3a $delta_{i-1}$\u3002\u90a3\u4e48 $R_i$ \u5c31\u53ef\u4ee5\u7b49\u4e8e $R_{i-1}+R'$\u3002\n\n- \u4e00\u79cd\u53ef\u884c\u7684\u6784\u9020\u65b9\u6848\u662f\u5bf9\u4e8e $0\\le w<i-1$\uff0c\u53ef\u4ee5\u4f7f $R'=\\{0,0,..,0,\\frac{delta_{i-1}}{delta_w},-\\frac{delta_{i-1}}{delta_w}\\times R_w\\}$\uff0c\u5176\u4e2d0\u7684\u4e2a\u6570\u4e3a $i-w-2$\u3002\n\n- \u4e3a\u4e86\u4f7f $R_i$ \u6700\u77ed\uff0c\u627e\u5230\u4e00\u4e2a $w$ \u4f7f\u5f97 $R'$ \u6700\u77ed\u5373\u53ef\u3002\n\n\u5176\u4e2d\u6709\u7528\u7684 $R_i$ \u53ea\u6709\u5f53\u524d\u7684 $R_i$ \u548c\u4f7f $R'$ \u6700\u77ed\u7684 $R_w$\uff0c\u5e76\u4e0d\u9700\u8981\u8bb0\u5f55\u6240\u6709 $R_i$\uff0c\u7a7a\u95f4\u662f $O(n)$ \u7684\u3002\n\u7528\u8fd9\u4e2a\u65b9\u6cd5\u751f\u6210\u7684\u7ebf\u6027\u9012\u63a8\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\uff0c\u4f46\u6211\u5e76\u4e0d\u4f1a\u8bc1\u660e\u4e00\u5b9a\u662f\u6700\u77ed\u7684\u3002~~\u4f46\u662f\u8fc7\u4e86\u6a21\u677f\u9898~~\n\n\n\n## \u4ee3\u7801\n\n```cpp\nvoid BM(ll *a,int n,vector<ll>&ans){\n\tans.clear();\n\tvector<ll> lst;\n\tint w=0;ll delta=0;\n\tfor(int i=1;i<=n;i++){\n\t\tll tmp=0;\n\t\tfor(int j=0;j<ans.size();j++)\n\t\t\ttmp=(tmp+a[i-1-j]*ans[j])%mod;\n\t\tif((a[i]-tmp)%mod==0) continue;\n\t\tif(!w){\n\t\t\tw=i;delta=a[i]-tmp;\n\t\t\tfor(int j=i;j;j--) ans.push_back(0);\n\t\t\tcontinue;\n\t\t}\n\t\tvector<ll> now=ans;\n\t\tll mul=(a[i]-tmp)*fp(delta,mod-2)%mod;\n\t\tif(ans.size()<lst.size()+i-w) ans.resize(lst.size()+i-w);\n\t\tans[i-w-1]=(ans[i-w-1]+mul)%mod;\n\t\tfor(int j=0;j<lst.size();j++) ans[i-w+j]=(ans[i-w+j]-mul*lst[j])%mod;\n\t\tif(now.size()-i<lst.size()-w){\n\t\t\tlst=now;w=i;delta=a[i]-tmp;\n\t\t}\n\t}\n}\n\n```\n\n# \u7279\u5f81\u591a\u9879\u5f0f\n\n## \u57fa\u672c\u6982\u5ff5\n\n\u56e0\u4e3a\u6a21\u677f\u9898\u8981\u7528\uff0c\u5c31\u987a\u5e26\u8bb2\u4e00\u4e0b\u3002\n\n\u4e00\u4e2a $n\\times n$ \u77e9\u9635A\u7684\u7279\u5f81\u591a\u9879\u5f0f\u4e3a$f(\\lambda)=det(I_n\\lambda-A)$\uff0c\u5176\u4e2d $I_n$ \u4e3a $n$ \u9636\u5355\u4f4d\u77e9\u9635\uff0c$det$ \u4e3a\u884c\u5217\u5f0f\u8fd0\u7b97\u3002\n\u800c\u4e00\u4e2a\u7ebf\u6027\u9012\u63a8\u77e9\u9635\u5982\u4e0b\uff1a\n$$\nA=\n\\left\\{\n\t\\begin{matrix}\n\ta_1 & a_2 & \\cdots & a_{n-1} &a_n\\\\\n\t1 & 0 & \\cdots & 0 & 0 \\\\\n\t\\vdots & \\vdots & \\ddots & \\vdots& \\vdots \\\\\n\t0 & 0 & \\cdots  & 0 & 0 \\\\\n\t0 & 0 & \\cdots  & 1 & 0 \\\\\n\t\\end{matrix} \n\\right\\}\n$$\n$$\nf(\\lambda)=\n\\left |\n\t\\begin{matrix}\n\t\\lambda-a_1 & -a_2 & \\cdots & -a_{n-1} &-a_n\\\\\n\t-1 & \\lambda & \\cdots & 0 & 0 \\\\\n\t\\vdots & \\vdots & \\ddots & \\vdots& \\vdots \\\\\n\t0 & 0 & \\cdots  & \\lambda & 0 \\\\\n\t0 & 0 & \\cdots  & -1 & \\lambda \\\\\n\t\\end{matrix} \n\\right|\n$$\n\n\u5c55\u5f00\u7b2c\u4e00\u884c\u5f97:\n\n$$f(\\lambda)=(\\lambda-a_1)A_{1,1}+(-a_2)A_{1,2}+\\cdots+(-a_n)A_{1,n}$$\n\n\u5176\u4e2d $A_{i,j}$ \u4e3a $A$ \u7684\u4ee3\u6570\u4f59\u5b50\u5f0f\uff0c\u663e\u7136\u7ed3\u679c\u4e3a\n$$f(\\lambda)=\\lambda^n-\\sum_{i=1}^na_i\\lambda^{n-i}$$\n\n\n## \u5b9e\u7528\n\n\u73b0\u5728\u8003\u8651\u6c42\u9012\u63a8\u5f0f\u7684\u7b2c $m$ \u9879\uff0c\u5373 $A^{m-1}\\times\\vec H $ \u7684\u6700\u540e\u4e00\u9879\u3002\n\u6839\u636e[Cayley-Hamilton\u5b9a\u7406](https://zh.wikipedia.org/wiki/\u51f1\u840a\u2013\u54c8\u5bc6\u9813\u5b9a\u7406)\u53ef\u5f97\uff0c$f(A)=0$\n\n\u4e8e\u662f\u6709\n$$A^{m-1}=g(A)\\times f(A)+r(A)$$\n\u5176\u4e2d $r(A)$ \u7684\u6700\u9ad8\u9879\u6b21\u6570\u5c0f\u4e8e $n$\u3002\n\u7531\u4e8e $f(A)=0$\uff0c\u53ef\u4ee5\u5f97\u5230 $A^{m-1}=r(A)$\u3002\n\u8fd9\u91cc\u53ef\u4ee5\u66b4\u529b\u5730\u5feb\u901f\u5e42\u7b97\u51fa $r(A)$\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u9879\u5f0f\u53d6\u6a21+\u5feb\u901f\u5e42\u7684\u65b9\u5f0f~~\u4f46\u6211\u4e0d\u4f1a~~\n\n\u73b0\u5728\u8981\u6c42\u7684\u5c31\u662f $\\sum_{i=0}^{n-1}r_i\\times A^i \\times \\vec H$ \u7684\u6700\u540e\u4e00\u9879\u3002\n\u5176\u4e2d $A_i\\times \\vec H$ \u7684\u6700\u540e\u4e00\u9879\u4e3a $H_{i+1}$\u3002\n\u6240\u4ee5\n$$ans=\\sum_{i=0}^{n-1}r_i\\times H_{i+1}$$\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2\\log m)$\u6216$O(n\\log n\\log m)$\n\n## \u4ee3\u7801\n\n```cpp\nll calc(int m,vector<ll>&coef,ll*h){\n\tif(m<=coef.size()) return h[m];\n\tint k=coef.size();\n\tstatic ll f[N],g[N],res[N],p[N];\n\tp[0]=-1;\n\tfor(int i=1;i<=k;i++) p[i]=coef[i-1];\n\tfor(int i=0;i<=2*k;i++) f[i]=g[i]=0;\n\tf[0]=1;\n\tif(k>1) g[1]=1;\n\telse g[0]=p[0];\n\tauto mul = [&](ll *a,ll *b,ll *c){\n\t\tfor(int i=0;i<=2*k;i++) res[i]=0;\n\t\tfor(int i=0;i<k;i++)\n\t\t\tfor(int j=0;j<k;j++)\n\t\t\t\tres[i+j]=(res[i+j]+a[i]*b[j])%mod;\n\t\tfor(int i=2*k;i>=k;i--)\n\t\t\tif(res[i]%mod)\n\t\t\t\tfor(int j=k;~j;j--)\n\t\t\t\t\tres[i-j]=(res[i-j]+res[i]*p[j])%mod;\n\t\tfor(int i=0;i<2*k;i++) c[i]=res[i];\n\t\treturn 0;\n\t};\n\tfor(;m;m>>=1,mul(g,g,g))\n\t\tif(m&1) mul(f,g,f);\n\tll ans=0;\n\tfor(int i=0;i<k;i++)\n\t\tans=(ans+h[i+1]*f[i])%mod;\n\treturn ans;\n}\n```\n\n# \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define lld long ll\nusing namespace std;\ntemplate<typename tn> void read(tn &a){\n\ttn x=0,f=1; char c=' ';\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0';\n\ta=x*f;\n}\nconst int N = 10010,mod = 998244353;\nll h[N];\nint n,m;\nll fp(ll a,ll k){\n\tll ans=1;\n\tfor(;k;k>>=1,a=a*a%mod)\n\t\tif(k&1) ans=a*ans%mod;\n\treturn ans;\n}\nvoid BM(ll *a,int n,vector<ll>&ans){\n\tans.clear();\n\tvector<ll> lst;\n\tint w=0;ll delta=0;\n\tfor(int i=1;i<=n;i++){\n\t\tll tmp=0;\n\t\tfor(int j=0;j<ans.size();j++)\n\t\t\ttmp=(tmp+a[i-1-j]*ans[j])%mod;\n\t\tif((a[i]-tmp)%mod==0) continue;\n\t\tif(!w){\n\t\t\tw=i;delta=a[i]-tmp;\n\t\t\tfor(int j=i;j;j--) ans.push_back(0);\n\t\t\tcontinue;\n\t\t}\n\t\tvector<ll> now=ans;\n\t\tll mul=(a[i]-tmp)*fp(delta,mod-2)%mod;\n\t\tif(ans.size()<lst.size()+i-w) ans.resize(lst.size()+i-w);\n\t\tans[i-w-1]=(ans[i-w-1]+mul)%mod;\n\t\tfor(int j=0;j<lst.size();j++) ans[i-w+j]=(ans[i-w+j]-mul*lst[j])%mod;\n\t\tif(now.size()-i<lst.size()-w){\n\t\t\tlst=now;w=i;delta=a[i]-tmp;\n\t\t}\n\t}\n}\nll calc(int m,vector<ll>&coef,ll*h){\n\tif(m<=coef.size()) return h[m];\n\tint k=coef.size();\n\tstatic ll f[N],g[N],res[N],p[N];\n\tp[0]=-1;\n\tfor(int i=1;i<=k;i++) p[i]=coef[i-1];\n\tfor(int i=0;i<=2*k;i++) f[i]=g[i]=0;\n\tf[0]=1;\n\tif(k>1) g[1]=1;\n\telse g[0]=p[0];\n\tauto mul = [&](ll *a,ll *b,ll *c){\n\t\tfor(int i=0;i<=2*k;i++) res[i]=0;\n\t\tfor(int i=0;i<k;i++)\n\t\t\tfor(int j=0;j<k;j++)\n\t\t\t\tres[i+j]=(res[i+j]+a[i]*b[j])%mod;\n\t\tfor(int i=2*k;i>=k;i--)\n\t\t\tif(res[i]%mod)\n\t\t\t\tfor(int j=k;~j;j--)\n\t\t\t\t\tres[i-j]=(res[i-j]+res[i]*p[j])%mod;\n\t\tfor(int i=0;i<2*k;i++) c[i]=res[i];\n\t\treturn 0;\n\t};\n\tfor(;m;m>>=1,mul(g,g,g))\n\t\tif(m&1) mul(f,g,f);\n\tll ans=0;\n\tfor(int i=0;i<k;i++)\n\t\tans=(ans+h[i+1]*f[i])%mod;\n\treturn ans;\n}\nint main(){\n\tread(n);read(m);\n\tfor(int i=1;i<=n;i++)\n\t\tread(h[i]);\n\tvector<ll> ans;\n\tBM(h,n,ans);\n\tfor(auto x:ans) cout<<(x+mod)%mod<<' ';\n\tcout<<'\\n';\n\tcout<<(calc(m,ans,h)+mod)%mod<<'\\n';\n\treturn 0;\n}\n```\n\n",
        "postTime": 1587598020,
        "uid": 64225,
        "name": "sunnuozhou",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5487 \u3010\u3010\u6a21\u677f\u3011Berlekamp-Massey\u7b97\u6cd5\u3011"
    },
    {
        "content": "\u7136\u800c\u662f\u4e2a\u677f\u5b50\u3002\n\n\u56e0\u4e3a\u8fc4\u4eca\u4e3a\u6b62\u6ca1\u6709\u4ec0\u4e48\u4eba\u5199\u8fd9\u9053\u9898\uff0c\u6240\u4ee5\u9009\u62e9\u81ea\u5df1\u629b\u7816\u5f15\u4e2a\u7389\u3002\n\n\u5b66\u4e60BM\u7b97\u6cd5\u63a8\u8350\u4ee5\u4e0b\u4e24\u4e2a\u535a\u5ba2\n\n[zzd\u7684\u535a\u5ba2](https://www.cnblogs.com/zhouzhendong/p/Berlekamp-Massey.html)\n\n[zzq\u7684\u535a\u5ba2](https://www.cnblogs.com/zzqsblog/p/6877339.html)\n\n~~\u8fd9\u4fe9\u540d\u5b57\u597d\u5bf9\u79f0\u554a~~\n\n\u7136\u540e\u5176\u5b9eBM\u7684\u7528\u9014\u5c31\u662f\u4e00\u4e2a\u6c42\u9012\u63a8\u5f0f\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u5b8c\u5168\u53ef\u4ee5\u7528\u6765\u6253\u8868\u3002\u9047\u5230\u5f88zz\u7684\u8ba1\u6570\u9898\u6216\u8005\u4ec0\u4e48\uff0c\u53ea\u8981\u8138\u597d\u4e00\u822c\u90fd\u662f\u53ef\u4ee5\u627e\u5230\u4f4e\u6b21\u7ebf\u6027\u9012\u63a8\u5f0f\u5b50\u3002\u6240\u4ee5\u8fd9\u4e5f\u4e0d\u59a8\u662f\u4e00\u4e2a\u9ed1\u79d1\u6280\u3002\n\n\u4e4b\u540eBM\u6c42\u51fa\u6765\u7684\u5f0f\u5b50\u76f4\u63a5\u62ff\u7ebf\u6027\u9012\u63a8\u8dd1\u4e00\u4e0b\u5c31\u597d\u3002\u6b64\u5904\u5982\u679c\u4f60\u5199\u7684$k^2 \\log n$\u7684\u66b4\u529b\u5e38\u6570\u6bd4\u8f83\u5c0f\u7684\u8bdd\uff0c\u4e5f\u662f\u53ef\u4ee5\u8dd1\u8fc7\u53bb\u7684\u2014\u2014\u5361\u5e38\u6570\u53ef\u4ee5\u53c2\u7167zzq\u7684\u535a\u5ba2\uff0c\u4ed6\u6eda\u4e86\u4e00\u4e0b\u7a7a\u95f4\u5e76\u4e14\u65f6\u95f4\u4e0a\u4e5f\u662f\u5f88\u4f18\u7684\u3002\n\n~~\u6240\u4ee5\u4e0d\u8981\u8bf4\u6211\u6bd2\u7624\u554a~~\n\n\u65f6\u9650\u4e0a\u4e5f\u662f\u5b8c\u5168\u591f\u7684~~\u4e0d\u50cf\u67d0\u591a\u70b9\u6c42\u503c\u548c\u5feb\u901f\u63d2\u503c~~\u3002\u53ea\u662f\u6ce8\u610f\u4e00\u4e0b\u7ebf\u6027\u9012\u63a8\u7684\u65f6\u5019\u6e05\u96f6\u5c31\u597d\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u4e0a\u4e86\uff0c\u90fd\u662f\u677f\u5b50\uff0c\u8fd8\u662f\u5404\u4f4d\u81ea\u5df1\u5199\u5427qwq\n\n____\n\n\u7136\u800c\u56e0\u4e3a\u6ca1\u6709\u4ee3\u7801\u88ab\u7ba1\u7406\u7ed9ban\u4e86\uff0c\u6240\u4ee5\u8fd8\u662f\u4e0a\u4e00\u4e0bBM\u7b97\u6cd5\u7684\u677f\u5b50\u5427\uff1a\n\n```cpp\nvector <LL> f[MAXN] ;\nint fail[MAXN] ; LL delta[MAXN], now ;\ninline void BM(int I){\n    int i, j ;\n    for (i = 1 ; i <= I ; ++ i){\n        for (now = base[i], j = 0 ; j < f[M].size() ; ++ j)\n            now = (now - base[i - j - 1] * f[M][j] % Mod) % Mod ;\n        delta[i] = now ; if (!delta[i]) continue ; fail[M] = i ;\n        if (!M) { f[++ M].resize(i), delta[i] = base[i] ;  continue ; }\n        int Id = M - 1, v = f[Id].size() - fail[Id] + i ;\n        for (j = 0 ; j < M ; ++ j)\n            if (i - fail[j] + f[j].size() < v)\n                Id = j, v = i - fail[j] + f[j].size() ;\n        f[M + 1] = f[M] ; ++ M ; while (f[M].size() < v) f[M].push_back(0) ;\n        LL mul = delta[i] * expow(delta[fail[Id]], Mod - 2) % Mod ;\n        (f[M][i - fail[Id] - 1] += mul) %= Mod  ;\n        for (j = 0 ; j < f[Id].size() ; ++ j)\n            (f[M][i - fail[Id] + j] -= mul * f[Id][j]) %= Mod ;\n    }\n    K = f[M].size() ;\n    for (i = 0 ; i < f[M].size() ; ++ i)\n        p[i + 1] = (f[M][i] % Mod + Mod) % Mod, cout << p[i + 1] << \" \" ; puts(\"\") ;\n}\n\u3002\u3002\u3002\u3002\u3002\u3002\nint main(){\n    int W ; cin >> W >> N ; rr int Len = 1, l = 0, i ;\n    for (i = 1 ; i <= W ; ++ i) scanf(\"%lld\", &base[i]) ; BM(W) ;\n    while (Len < (K << 1)) Len <<= 1, ++ l ; F[0] = 1 ; Len <<= 1, ++ l ;\n    for (i = 0 ; i < Len ; ++ i) R[i] = (R[i >> 1] >> 1) | ((i & 1) << (l - 1)) ;\n    for (i = 1 ; i <= K ; ++ i) G[K - i] = Mod - p[i] ; T[1] = G[K] = 1, reverse(G, G + K + 1), _Inv(G, IG, Len >> 1) ;\n    reverse(G, G + K + 1), NTT(G, Len, 1), NTT(IG, Len, 1) ;\n    while(N){\n        NTT(T, Len, 1) ;\n        if (N & 1) {\n            NTT(F, Len, 1) ;\n            for (i = 0 ; i < Len ; ++ i) F[i] = F[i] * T[i] % Mod ;\n            NTT(F, Len, -1) ; _Div(F, Len) ;\n        }\n        for (i = 0 ; i < Len ; ++ i) (T[i] *= T[i]) %= Mod ; NTT(T, Len, -1) ; _Div(T, Len), N >>= 1 ;\n    }\n    for (i = 0 ; i < K ; ++ i) (Ans += (F[i] * base[i + 1]) % Mod) %= Mod ; printf(\"%lld\\n\", Ans) ; return 0 ;\n}\n```",
        "postTime": 1564727926,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5487 \u3010\u3010\u6a21\u677f\u3011\u7ebf\u6027\u9012\u63a8+BM\u7b97\u6cd5\u3011"
    },
    {
        "content": "\u53c2\u8003\u81ea[ EI \u7684\u6587\u7ae0](https://blog.csdn.net/EI_Captain/article/details/115840021?spm=1001.2014.3001.5501)\u3002\n\n\u9996\u5148\u4e00\u4e2a\u91cd\u8981\u7684\u6761\u4ef6\u662f\u89c2\u6d4b\u8ba8\u8bba\u533a\u53ef\u77e5\u6b64\u9898\u6700\u77ed\u9012\u63a8\u5f0f\u957f\u5ea6 $\\le n/2$\uff08\u5426\u5219\u6700\u77ed\u9012\u63a8\u5f0f\u662f\u53ef\u80fd\u4e0d\u552f\u4e00\u7684\uff09\u3002\n\n\u90a3\u4e48\u5bb9\u6613\u77e5\u9053\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6709\u7406\u5206\u5f0f $f$ \u7684\u524d $2n$ \u9879\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ed9\u51fa\u4e00\u7ec4 $p/q \\equiv f \\pmod{x^{2n}}$\uff0c\u5176\u4e2d $\\deg p < n,\\deg q \\le n$ \u5373\u53ef\u6b63\u786e\u62df\u5408\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5c06\u95ee\u9898**\u9002\u5f53\u6cdb\u5316**\u4e3a\u300c**\u6709\u7406\u51fd\u6570\u91cd\u5efa**\u300d\u95ee\u9898\uff1a  \n> \u7ed9\u5b9a\u57df\u4e0a\u7684\u591a\u9879\u5f0f $f(x),M(x)$\uff0c\u8bbe $\\deg M = n$\uff0c\u5bf9\u4e8e\u591a\u9879\u5f0f $p,q$ \u6ee1\u8db3 $\\deg p < k,\\deg q \\le n-k$ \u4e14 $p\\equiv qf \\pmod M$\uff0c\u79f0 $p,q$ \u662f $f$ \u7684\u4e00\u4e2a $(k,n-k)$ \u6709\u7406\u903c\u8fd1\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8fd9\u9898\u91cc\u6211\u4eec\u4ee4 $M(x)=x^{2n}$\uff0c\u6c42\u51fa\u4e00\u7ec4 $(n,n)$ \u6709\u7406\u903c\u8fd1\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u7c7b\u4f3c\u719f\u77e5\u7684\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff0c\u5c06\u540c\u4f59\u5f0f\u6539\u5199\u4e3a\u65b9\u7a0b $p=qf+Mt$\uff0c\u7136\u540e\u8003\u8651\u4eff\u7167\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u7684\u8fc7\u7a0b\uff1a  \n\u4e00\u5f00\u59cb\u6211\u4eec\u6709\n$$\n\\begin{bmatrix}f\\\\M\\end{bmatrix}=\\begin{bmatrix}1&0\\\\0&1\\end{bmatrix}\\begin{bmatrix}f\\\\M\\end{bmatrix}\n$$\n\n\u8fc7\u7a0b\u4e2d\uff0c\u8003\u8651\u67d0\u4e2a\u65f6\u523b\u7684\u72b6\u6001\u662f\n$$\n\\begin{bmatrix}A\\\\B\\end{bmatrix}=\\begin{bmatrix}X_A&Y_A\\\\X_B&Y_B\\end{bmatrix}\\begin{bmatrix}f\\\\M\\end{bmatrix}\n$$\n\n\u8bbe $k=\\deg A+1,m=\\deg B$\uff0c\u90a3\u4e48\u4e0d\u59a8**\u5f52\u7eb3\u5047\u8bbe** $\\deg X_A,\\deg X_B \\le n-k$\uff0c\u5373 $A,X_A$ \u662f\u4e00\u7ec4 $(k,n-k)$ \u6709\u7406\u903c\u8fd1\u3002  \n\u63a5\u4e0b\u6765\u5c1d\u8bd5\u5c06 $A$ \u53d6\u6a21 $B$\uff0c\u4ee4 $d$ \u4e3a\u5546\u6570\uff0c\u5219\u81ea\u7136\u6709 $\\deg d < k-m$\u3002  \n\u800c\u63a5\u4e0b\u6765\u53ea\u9700\u9996\u5148\u4ee4 $(X_A,X_B)$ \u53d8\u4e3a $(X_A-dX_B,X_B)$\uff0c\u5ea6\u6570\u5747  $<n-m$\u3002\u5f53\u7136\uff0c\u63a5\u4e0b\u6765\u8fd8\u9700\u8981\u4ea4\u6362 $A,B$ \u548c $X_A,X_B$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5fc5\u7136\u4f1a\u627e\u5230\u67d0\u4e2a\u65f6\u523b\u4f7f\u5f97 $\\deg A < n/2,\\deg X_A \\le n/2$\uff0c\u5728\u6b64\u523b\u505c\u6b62\u5373\u53ef\u3002\n\n\u4e8b\u5b9e\u4e0a\u901a\u8fc7 HALF-GCD \u7b97\u6cd5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9e\u73b0 $\\Theta(n \\log^2 n)$ \u7684 BM\uff08\u751a\u81f3\u4e5f\u53ef\u4ee5\u6c42\u51fa\u4efb\u610f\u9636\u6bb5\u7684\u6709\u7406\u903c\u8fd1\uff09\uff01\n\n\u987a\u4fbf\u8d34\u4e00\u4e2a\u81ea\u5df1\u7528\u7684\u66b4\u529b\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <vector>\n#include <utility>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int mod = 998244353;\ninline int norm(int x) {\n  return x >= mod ? x - mod : x;\n}\ninline int reduce(int x) {\n  return x < 0 ? x + mod : x;\n}\ninline int neg(int x) {\n  return x ? mod - x : 0;\n}\ninline void add(int &x, int y) {\n  if ((x += y - mod) < 0)\n    x += mod;\n}\ninline void sub(int &x, int y) {\n  if ((x -= y) < 0)\n    x += mod;\n}\ninline void fam(int &x, int y, int z) {\n  x = (x + (ll)y * z) % mod;\n}\ninline int qpow(int a, int b) {\n  int ret = 1;\n  for (; b; b >>= 1)\n    (b & 1) && (ret = (ll)ret * a % mod),\n    a = (ll)a * a % mod;\n  return ret;\n}\n\nint n, m;\nvector<int> base;\n\npair<vector<int>, vector<int>> berlekampMassey(int n, const vector<int> &base) {\n  vector<int> u(n * 2 + 1), v(n * 2), x, y(1, 1);\n  u[n * 2] = 1;\n  for (int i = 0; i < v.size(); ++i)\n    v[i] = base[i];\n  while (1) {\n    while (!v.empty() && !v.back())\n      v.pop_back();\n    if (v.size() - 1 < n && y.size() - 1 <= n)\n      break;\n    x.resize(max(x.size(), u.size() - v.size() + y.size()));\n    int t = neg(qpow(v.back(), mod - 2));\n    for (int i = u.size() - v.size(); i >= 0; --i) {\n      int c = (ll)t * u[i + v.size() - 1] % mod;\n      for (int j = 0; j < y.size(); ++j)\n        fam(x[i + j], c, y[j]);\n      for (int j = 0; j < v.size(); ++j)\n        fam(u[i + j], c, v[j]);\n    }\n    swap(u, v), swap(x, y);\n  }\n  int inv = qpow(y[0], mod - 2);\n  for (int i = 0; i < y.size(); ++i)\n    y[i] = (ll)y[i] * inv % mod;\n  for (int i = 0; i < v.size(); ++i)\n    v[i] = (ll)v[i] * inv % mod;\n  return make_pair(v, y);\n}\n\nint bostanMori(int n, vector<int> p, vector<int> q) {\n  p.resize(q.size() - 1);\n  vector<int> u(p.size()), v(q.size());\n  for (; n; n >>= 1) {\n    for (int i = 0; i < v.size(); ++i) {\n      v[i] = 0;\n      int id = i << 1;\n      for (int j = 0; j <= id; ++j)\n        if (j < q.size() && id - j < q.size())\n          fam(v[i], j & 1 ? neg(q[j]) : q[j], q[id - j]);\n    }\n    for (int i = 0; i < u.size(); ++i) {\n      u[i] = 0;\n      int id = (i << 1) | (n & 1);\n      for (int j = 0; j <= id; ++j)\n        if (j < q.size() && id - j < p.size())\n          fam(u[i], j & 1 ? neg(q[j]) : q[j], p[id - j]);\n    }\n    p = u, q = v;\n  }\n  return (ll)p[0] * qpow(q[0], mod - 2) % mod;\n}\ninline int bostanMori(int n, pair<vector<int>, vector<int>> f) {\n  return bostanMori(n, f.first, f.second);\n}\n\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  vector<int> base(n);\n  for (int i = 0; i < n; ++i)\n    scanf(\"%d\", &base[i]);\n  auto f = berlekampMassey(n >> 1, base);\n  auto q = f.second;\n  for (int i = 1; i < q.size(); ++i)\n    printf(\"%d%c\", neg(q[i]), \" \\n\"[i == q.size() - 1]);\n  printf(\"%d\\n\", bostanMori(m, f));\n}\n```",
        "postTime": 1633958477,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u300c\u6700\u77ed\u7ebf\u6027\u9012\u63a8\u5f0f\u6c42\u89e3\u4e0e\u6709\u7406\u51fd\u6570\u91cd\u5efa\u300d\u9605\u8bfb\u7b14\u8bb0"
    },
    {
        "content": "\u5bf9\u4e8e\u6570\u5217 $\\{a_0,a_1 \\dots\\}$\uff0c\u5b58\u5728\u6709\u9650\u6570\u5217 $\\{r_0,r_1\\dots r_{m-1}\\}$\uff0c\u4f7f\u5f97 $p\\ge m-1,\\sum\\limits_{i=0}^{m-1}r_ia_{p-i}=0$\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u6570\u5217 $r$ \u4e3a\u6570\u5217 $a$ \u7684\u7ebf\u6027\u9012\u5f52\u5f0f\uff0c\u82e5 $r_0=1$\uff0c\u5219\u79f0 $r$ \u4e3a\u7ebf\u6027\u9012\u63a8\u5f0f\uff0c\u79f0\u5176\u9636\u6570\u4e3a $m-1$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u8bbe $r$ \u7684\u751f\u6210\u51fd\u6570\u4e3a $R$\uff0c\u8bbe $a$ \u7684\u751f\u6210\u51fd\u6570\u4e3a $A$\uff0c\u8bbe $S=AR$\uff0c\u5219 $S$ \u7684\u6b21\u6570\u4e0d\u8d85\u8fc7 $m-2$\u3002\n\n### Berlekamp-Massey \u7b97\u6cd5\n\n\u5df2\u77e5\u6570\u5217 $\\{a_0,a_1\\dots a_{n-1}\\}$\uff0cBerlekamp-Massey \u7b97\u6cd5\u4f1a\u5bf9\u5176\u6bcf\u4e2a\u524d\u7f00 $\\{a_0,a_1\\dots a_i\\}$ \u6c42\u51fa\u8fd9\u4e00\u524d\u7f00\u7684\u6700\u77ed\u7ebf\u6027\u9012\u63a8\u5f0f $r^{(i)}$\uff0c\u6211\u4eec\u8bbe $|r^{(i)}|-1=l_i$\uff0c\u5373 $l_i$ \u4e3a\u7ebf\u6027\u9012\u63a8\u5f0f $r^{(i)}$ \u7684\u9636\uff0c\u663e\u7136\u6709 $l_{i-1}\\le l_i$\u3002\u6211\u4eec\u4ee4 $r^{(-1)}=\\{1\\}$\u3002\n\n### \u7b97\u6cd5\u6d41\u7a0b\n\n**\u5f15\u7406**\uff1a\u82e5 $r^{(i-1)}$ \u4e0d\u662f $\\{a_0,a_1,a_2\\dots a_i\\}$ \u7684\u7ebf\u6027\u9012\u63a8\u5f0f\uff0c\u90a3\u4e48\u6709 $l_i\\ge i+1-l_{i-1}$\u3002\n\n**\u8bc1\u660e**\uff1a\u53cd\u8bc1\u6cd5\uff0c\u8bbe $l_i\\le i-l_{i-1}$\uff0c\u8bbe $r^{(i-1)}=\\{p_0,p_1\\dots p_{l_{i-1}}\\},r^{(i)}=\\{q_0,q_1\\dots q_{l_i}\\}$\u3002\n\n\u6211\u4eec\u6709 $l_i\\le j\\le i,a_j=-\\sum\\limits_{t=1}^{l_i}q_ta_{j-t}$\u3002\n\n\u7531\u4e8e $l_i\\le i-l_{i-1}$\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u51fa\u5982\u4e0b\u53d8\u6362\u3002\n\n$$\n\\begin{aligned}\n-\\sum\\limits_{j=1}^{l_{i-1}}p_ja_{i-j}&=\\sum\\limits_{j=1}^{l_{i-1}}p_j\\sum\\limits_{k=1}^{l_i}q_ka_{i-j-k}\\\\\n&=\\sum\\limits_{k=1}^{l_i}q_k\\sum\\limits_{j=1}^{l_{i-1}}p_ja_{i-j-k}\\\\\n&=-\\sum\\limits_{k=1}^{l_i}q_ka_{i-k}\\\\\n&=a_i\n\\end{aligned}\n$$\n\n\u6240\u4ee5 $r^{(i-1)}$ \u662f $\\{a_0,a_1,a_2\\dots a_i\\}$ \u7684\u7ebf\u6027\u9012\u63a8\u5f0f\uff0c\u77db\u76fe\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u6709 $l_i\\ge \\max(i+1-l_{i-1},l_{i-1})$\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u79cd\u6784\u9020\u4f7f\u5f97 $l_i=\\max(i+1-l_{i-1},l_{i-1})$\uff0c\u663e\u7136\u8fd9\u6837\u7684 $r^{(i)}$ \u5373\u4e3a $\\{a_0,a_1,a_2\\dots a_i\\}$ \u7684\u6700\u77ed\u7ebf\u6027\u9012\u63a8\u5f0f\u3002\n\n\u5982\u679c $r^{(i-1)}$ \u662f $\\{a_0,a_1,a_2\\dots a_i\\}$ \u7684\u7ebf\u6027\u9012\u63a8\u5f0f\uff0c$r^{(i)}=r^{(i-1)}$\u3002\n\n\u5426\u5219\uff0c\u6211\u4eec\u8bbe $a$ \u7684\u751f\u6210\u51fd\u6570\u4e3a $A$\uff0c$r^{(i)}$ \u7684\u751f\u6210\u51fd\u6570\u4e3a $R^{(i)}$\uff0c\u8bbe $S^{(i)}\\equiv AR^{(i)}\\pmod{x^{i+1}}$\uff0c\u5219\u6709 $S^{(i)}$ \u7684\u6b21\u6570\u4e0d\u8d85\u8fc7 $l_i-1$\uff0c\u5373 $R^{(i)}$ \u7684\u6b21\u6570 $-1$\u3002\n\n\u8003\u8651\u7531 $R^{(i-1)}$ \u63a8\u51fa $R^{(i)}$\uff0c\u7531\u4e8e $r^{(i-1)}$ \u4e0d\u662f $\\{a_0,a_1,a_2\\dots a_i\\}$ \u7684\u7ebf\u6027\u9012\u63a8\u5f0f\uff0c\u6211\u4eec\u6709 $AR^{(i-1)}\\equiv S^{(i-1)}+dx^i\\pmod{x^{i+1}}$\u3002\n\n\u82e5 $0\\le j< i,l_j=0$\uff0c\u6211\u4eec\u4ee4 $r^{(i)}=\\{1,0\\dots 0\\}$\uff0c\u6b64\u5904\u6709 $i+1$ \u4e2a $0$\uff0c\u663e\u7136\u6ee1\u8db3 $l_i=i+1-l_{i-1}$\u3002\n\n\u5426\u5219\u6211\u4eec\u8003\u8651\u4e0a\u4e00\u6b21 $l_p>l_{p-1}$ \u7684\u60c5\u5f62\uff0c\u8bbe\u5f53\u65f6\u7684\u60c5\u51b5\u4e3a $AR^{(p-1)}\\equiv S^{(p-1)}+cx^p\\pmod{x^{p+1}}$\uff0c\u7ed9\u4e24\u4fa7\u5206\u522b\u4e58\u4e0a $x^{i-p}dc^{-1}$\uff0c\u90a3\u4e48\u6709 $x^{i-p}dc^{-1}AR^{(p-1)}\\equiv x^{i-p}dc^{-1}S^{(p-1)}+dx^i\\pmod {x^{i+1}}$\u3002\n\n\u4e24\u5f0f\u76f8\u51cf\u53ef\u4ee5\u5f97\u5230 $A(R^{(i-1)}-x^{i-p}dc^{-1}R^{(p-1)})\\equiv S^{(i-1)}-x^{i-p}dc^{-1}S^{(p-1)}\\pmod {x^{i+1}}$\u3002\n\n\u663e\u7136 $S^{(i-1)}-x^{i-p}dc^{-1}S^{(p-1)}$ \u7684\u6b21\u6570\u4e0d\u8d85\u8fc7 $R^{(i-1)}-x^{i-p}dc^{-1}R^{(p-1)}$ \u7684\u6b21\u6570 $-1$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4ee4 $R^{(i)}=R^{(i-1)}-x^{i-p}dc^{-1}R^{(p-1)}$ \u5373\u53ef\u3002\n\n\u7531\u5f52\u7eb3\u6cd5\uff0c\u6211\u4eec\u8bbe $l_p=\\max(l_{p-1},p+1-l_{p-1})$\uff0c\u7531\u4e8e $l_p>l_{p-1}$\uff0c\u6240\u4ee5 $l_p=p+1-l_{p-1}$\uff0c\u90a3\u4e48 $l_i=\\max(l_{i-1},i-p+l_{p-1})=\\max(l_{i-1},i+1-l_p)=\\max(l_{i-1},i+1-l_{i-1})$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n**\u5f15\u7406**\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u65e0\u9650\u6570\u5217\uff0c\u82e5\u6211\u4eec\u5df2\u77e5\u5176\u7ebf\u6027\u9012\u63a8\u5f0f\u9636\u6570\u4e0d\u8d85\u8fc7 $s$\uff0c\u5219\u53ea\u9700\u53d6 $\\{a_0,a_1\\dots a_{2s-1}\\}$ \u7684\u6700\u77ed\u7ebf\u6027\u9012\u63a8\u5f0f\u5373\u53ef\u3002\n\n**\u8bc1\u660e**\uff1a\u53cd\u8bc1\uff0c\u4ee4 $t$ \u4e3a\u6700\u5c0f\u7684\u6ee1\u8db3 $t\\ge 2s,r^{(t)}\\ne r^{(2s-1)}$ \u7684\u6570\uff0c\u7531\u4e0a\u4e00\u4e2a\u5f15\u7406\uff0c\u6211\u4eec\u5c31\u6709 $l_t\\ge t+1-l_{2s-1}\\ge t+1-s\\ge 2s+1-s\\ge s+1$\uff0c\u77db\u76fe\u3002\n\n### \u7ebf\u6027\u9012\u63a8\u6570\u5217\u7684\u5355\u70b9\u6c42\u503c\n\n\u8bbe\u6570\u5217 $\\{a_0,a_1\\dots \\}$ \u7684\u7ebf\u6027\u9012\u63a8\u5f0f\u4e3a $\\{r_0,r_1\\dots r_{m-1}\\}$\uff0c\u6211\u4eec\u73b0\u5728\u8981\u6c42\u89e3 $a_n$\u3002\n\n\u6211\u4eec\u9700\u8981\u5df2\u77e5 $a_0,a_1\\dots a_{m-2}$\u3002\n\n\u8bbe $F(x)=\\sum\\limits_{i=0}^{m-1}r_ix^{m-1-i}$\uff0c$G(x)=x^n\\bmod F(x)=\\sum\\limits_{i=0}^{m-2}g_ix^i$\u3002\n\n\u5219\u7b54\u6848\u4e3a $\\sum\\limits_{i=0}^{m-2}g_ia_i$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log m\\log n)$ \u6216 $O(m^2\\log n)$\uff0c\u53d6\u51b3\u4e8e\u662f\u5426\u4f7f\u7528 FFT \u52a0\u901f\u5377\u79ef\u3002\n\n```cpp\n#include<iostream>\nusing std::cin;\nusing std::cout;\nint const mod=998244353;\nint pow(int x,int y){\n\tint res=1;\n\twhile(y){\n\t\tif(y&1) res=1ll*res*x%mod;\n\t\tx=1ll*x*x%mod,y>>=1;\n\t}\n\treturn res;\n}\nint n,m,r[5010],a[10010],len;\nint bm(int *a,int n,int *r){\n\tint len=1,p=0,clen=0,dt=0;\n\tstatic int cr[5010];\n\tr[0]=1;\n\tfor(int i=0;i<n;i++){\n\t\tint d=0;\n\t\tfor(int j=0;j<len;j++) d=(d+1ll*a[i-j]*r[j])%mod;\n\t\tif(d==0) continue;\n\t\tif(len==1){\n\t\t\tlen=i+2,p=i,cr[0]=1,clen=1,dt=d;\n\t\t\tcontinue;\n\t\t}\n\t\tint u=1ll*d*pow(dt,mod-2)%mod;\n\t\tif(i-p+clen>len){\n\t\t\tstatic int pr[5010];\n\t\t\tfor(int i=0;i<len;i++) pr[i]=r[i];\n\t\t\tfor(int j=0;j<clen;j++) pr[i-p+j]=(pr[i-p+j]-1ll*cr[j]*u%mod+mod)%mod;\n\t\t\tfor(int i=0;i<len;i++) cr[i]=r[i];\n\t\t\tint tmp=clen;\n\t\t\tclen=len,dt=d;\n\t\t\tlen=i-p+tmp;\n\t\t\tp=i;\n\t\t\tfor(int i=0;i<len;i++) r[i]=pr[i];\n\t\t}else for(int j=0;j<clen;j++) r[i-p+j]=(r[i-p+j]-1ll*cr[j]*u%mod+mod)%mod;\n\t}\n\treturn len-1;\n} \nint getans(int *r,int len,int m,int *a){\n\tstatic int x[20010],res[20010];\n\tx[1]=1,res[0]=1;\n\tif(len==1) x[0]=1ll*(mod-x[1])*r[1]%mod,x[1]=0;\n\tint t=2*len-2;\n\tauto mul=[&t,&len](int *a,int *b,int *p){\n\t\tstatic int tmp[20010];\n\t\tfor(int i=0;i<=t;i++) tmp[i]=0;\n\t\tfor(int i=0;i<len;i++) for(int j=0;j<len;j++) tmp[i+j]=(tmp[i+j]+1ll*a[i]*b[j])%mod;\n\t\tfor(int i=0;i<=t;i++) a[i]=tmp[i];\n\t\tfor(int i=t;i>=len;i--){\n\t\t\tint u=(mod-a[i])%mod;\n\t\t\ta[i]=0;\n\t\t\tfor(int j=1;j<=len;j++) a[i-j]=(a[i-j]+1ll*u*p[j])%mod;\n\t\t}\n\t};\n\twhile(m){\n\t\tif(m&1) mul(res,x,r);\n\t\tmul(x,x,r);\n\t\tm>>=1;\n\t}\n\tint ans=0;\n\tfor(int i=0;i<len;i++) ans=(ans+1ll*a[i]*res[i])%mod;\n\treturn ans;\n}\nint main(){\n\tstd::ios::sync_with_stdio(false),cin.tie(nullptr);\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++) cin>>a[i];\n\tlen=bm(a,n,r);\n\tfor(int i=1;i<=len;i++) cout<<(mod-r[i])%mod<<' ';\n\tcout<<'\\n'<<getans(r,len,m,a)<<'\\n';\n\treturn 0;\n}\n```\n\n",
        "postTime": 1659078824,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "Berlekamp-Massey \u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "\u65e2\u7136$\\texttt{\\color{black}F\\color{red}lower\\_pks}$\u629b\u4e86\u4e00\u5757\u7816\uff0c\u90a3\u6211\u5c31\u6765\u5f15\u4e00\u5757\u53ef\u80fd\u6709\u70b9\u7455\u75b5\u7684\u7389\u5427\u3002\n\n### \u9898\u610f\n\n\u7ed9\u5b9a$P_0\\cdots P_n$\u548c$m$\uff0c\u6c42$P$\u7684\u6700\u77ed\u9012\u63a8\u5f0f\u4ee5\u53ca$P_m$\u3002\n\n$\\texttt{Data Range:}m\\leq 10^9,1\\leq n\\leq 10^4$\n\n### \u9898\u89e3\n\n\u9996\u5148\u8bb2\u4e00\u4e0b$\\texttt{Berlekamp-Massey Algorithm}$\u5427\uff0c\u8fd9\u4e1c\u897f\u4f7f\u7528\u7684\u662f\u7c7b\u4f3c\u4e8e\u62c9\u683c\u6717\u65e5\u63d2\u503c\u7684\u601d\u60f3\uff0c\u6240\u4ee5\u4e0b\u6587\u4f1a\u7efc\u5408\u7406\u89e3\u3002\n\n\u8003\u8651\u73b0\u5728\u7684\u9012\u63a8\u5f0f$f_n=\\sum\\limits_{i=0}^{n-1}a_if_i$\u6ee1\u8db3$P_1\\cdots P_n$\uff0c\u4f46\u662f\u5728$P_{n+1}$\u8fd9\u4e2a\u5730\u65b9\u840e\u4e86\u3002\u600e\u4e48\u529e\uff1f\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u4e00\u79cd\u63d2\u503c\u7684\u65b9\u5f0f\u3002\u5047\u8bbe\u63d2\u51fa\u6765\u7684\u591a\u9879\u5f0f\u5df2\u7ecf\u62df\u5408\u4e86\u524d$n$\u4e2a\u70b9\uff0c$n+1$\u4e2a\u70b9\u840e\u4e86\uff0c\u5c31\u50cf\u8fd9\u6837\n\n![](https://s2.ax1x.com/2019/08/07/eoSkjI.jpg)\n\n\u7d2b\u8272\u7684\u70b9\u90fd\u88ab\u62df\u5408\u4e86\uff0c\u800c\u7ea2\u8272\u7684\u70b9\u840e\u4e86\u3002\n\n\u8fd9\u65f6\u6784\u9020\u4e00\u4e2a\u591a\u9879\u5f0f\u4f7f\u5f97\u90a3\u4e9b\u62df\u5408\u4e0a\u4e86\u7684\u70b9\u7684$x$\u5750\u6807\u4ee3\u5165\u8fdb\u53bb\u4e3a$0$\uff0c\u5e76\u4e14\u8fc7\u90a3\u4e2a\u840e\u4e86\u7684\u70b9\uff0c\u50cf\u8fd9\u6837\n\n![](https://s2.ax1x.com/2019/08/07/eoSVDP.jpg)\n\n\u628a\u4e24\u4e2a\u51fd\u6570\u52a0\u8d77\u6765\uff0c\u6709\n\n![](https://s2.ax1x.com/2019/08/07/eoSEut.jpg)\n\n\u8fd9\u6837\uff0c\u5c31\u628a\u90a3\u4e2a\u840e\u4e86\u7684\u70b9\u4e5f\u62df\u5408\u4e0a\u53bb\u4e86\u3002\n\n\u6309\u7167\u8fd9\u79cd\u65b9\u6cd5\uff0c\u8003\u8651\u6784\u9020\u9012\u63a8\u5f0f$g_n=\\sum\\limits_{i=0}^{n-1}b_ig_i$\uff0c\u4f7f\u5f97\u5728\u524d$n$\u9879\u90fd\u4e3a$0$\uff0c\u800c\u7b2c$n+1$\u9879\u4e3a$P_{n+1}$\u3002\uff08\u5176\u5b9e\u4e0d\u4e3a$0$\u5c31\u597d\u4e86\uff09\n\n\u4e8e\u662f\u8003\u8651\u5982\u679c\u6211\u4eec\u4e4b\u524d\u5904\u7406\u8fc7\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u4e1c\u897f\u7b80\u5355\u79fb\u9879\u5f97\u5230$g$\u4e86\u3002\u6700\u8fd1\u7684\u4e00\u4e2a\u80af\u5b9a\u6700\u4f18\u3002\n\n\n$\\texttt{example}$\u4ec0\u4e48\u7684\u5c31\u4e0d\u7ed9\u4e86\uff0c\u53ef\u4ee5\u627e$\\texttt{\\color{black}z\\color{red}{zq}}$\u5927\u795e\u7684\u535a\u5ba2\u3002\n\n\u6c42\u51fa\u9012\u63a8\u5f0f\u540e\u7ebf\u6027\u9012\u63a8\u7167\u6837\u505a\u3002\n\n### \u4ee3\u7801\n\n\u7531\u4e8e$\\texttt{\\color{black}F\\color{red}lower\\_pks}$\u8fd9\u6837\u7684\u5927\u795e\u4ed9\u4e0d\u5c51\u4e8e\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801\uff0c\u6211\u8fd9\u79cd\u5c0f\u849f\u84bb\u770b\u4e86\u597d\u957f\u65f6\u95f4\uff0c\u6240\u4ee5\u672c\u7740\u60e0\u53ca\u4f60\u8c37\u7528\u6237\uff0c\u8003\u8651\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801\u3002\n\n\u8fd8\u6709\uff0c$\\texttt{\\color{black}N\\color{red}aCly\\_Fish}$\u662f\u600e\u4e48\u5199\u51fa\u90a3\u4e48\u957f\u7684\u4ee3\u7801\u7684\uff1f\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=3e5+51,MOD=998244353,G=3,INVG=332748118;\nll exponent,fd,cnt=1,limit=-1,rres,ptr;\nll rev[MAXN],f[MAXN],g[MAXN],tmp[MAXN],tmp2[MAXN],tmp3[MAXN],tbm[MAXN];\nll res[MAXN],base[MAXN],fail[MAXN];\nli delta[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline ll qpow(ll base,ll exponent)\n{\n    li res=1;\n    while(exponent)\n    {\n        if(exponent&1)\n        {\n            res=1ll*res*base%MOD;\n        }\n        base=1ll*base*base%MOD,exponent>>=1;\n    }\n    return res;\n}\ninline void NTT(ll *cp,ll cnt,ll inv)\n{\n    ll cur=0,res=0,omg=0;\n    for(register int i=0;i<cnt;i++)\n    {\n        if(i<rev[i])\n        {\n            swap(cp[i],cp[rev[i]]);\n        }\n    }\n    for(register int i=2;i<=cnt;i<<=1)\n    {\n        cur=i>>1,res=qpow(inv==1?G:INVG,(MOD-1)/i);\n        for(register ll *p=cp;p!=cp+cnt;p+=i)\n        {\n            omg=1;\n            for(register int j=0;j<cur;j++)\n            {\n                ll t=1ll*omg*p[j+cur]%MOD,t2=p[j];\n                p[j+cur]=(t2-t+MOD)%MOD,p[j]=(t2+t)%MOD;\n                omg=1ll*omg*res%MOD;\n            }\n        }\n    }\n    if(inv==-1)\n    {\n        ll invl=qpow(cnt,MOD-2);\n        for(register int i=0;i<=cnt;i++)\n        {\n            cp[i]=1ll*cp[i]*invl%MOD;\n        }\n    }\n}\ninline void inv(ll fd,ll *f,ll *res)\n{\n    static ll tmp[MAXN];\n    if(fd==1)\n    {\n        res[0]=qpow(f[0],MOD-2);\n        return;\n    }\n    inv((fd+1)>>1,f,res);\n    ll cnt=1,limit=-1;\n    while(cnt<(fd<<1))\n    {\n        cnt<<=1,limit++;\n    }\n    for(register int i=0;i<cnt;i++)\n    {\n        tmp[i]=i<fd?f[i]:0;\n        rev[i]=(rev[i>>1]>>1)|((i&1)<<limit);\n    }\n    NTT(tmp,cnt,1),NTT(res,cnt,1);\n    for(register int i=0;i<cnt;i++)\n    {\n        res[i]=1ll*(2-1ll*tmp[i]*res[i]%MOD+MOD)%MOD*res[i]%MOD;\n    }\n    NTT(res,cnt,-1);\n    for(register int i=fd;i<cnt;i++)\n    {\n        res[i]=0;\n    }\n}\ninline void mod(ll *f)\n{\n    static ll tmp[MAXN],q[MAXN];\n    ll deg=fd<<1;\n    while(!f[--deg]);\n    if(deg<fd)\n    {\n\treturn;\n    }\n    for(register int i=0;i<cnt;i++)\n    {\n    \ttmp[i]=i<=deg?f[i]:0;\n    }\n    reverse(tmp,tmp+1+deg);\n    for(register int i=deg+1-fd;i<=deg;i++)\n    {\n    \ttmp[i]=0;\n    }\n    NTT(tmp,cnt,1);\n    for(register int i=0;i<cnt;i++)\n    {\n    \tq[i]=(li)tmp[i]*tmp3[i]%MOD;\n    }\n    NTT(q,cnt,-1);\n    for(register int i=0;i<cnt;i++)\n    {\n    \ttmp[i]=0;\n    \tq[i]=i<=deg-fd?q[i]:0;\n    }\n    reverse(q,q+1+deg-fd),NTT(q,cnt,1);\n    for(register int i=0;i<cnt;i++)\n    {\n        tmp[i]=(li)q[i]*g[i]%MOD;\n    }\n    NTT(tmp,cnt,-1);\n    for(register int i=0;i<fd;i++)\n    {\n        f[i]=(f[i]-tmp[i]+MOD)%MOD;\n    }\n    for(register int i=0;i<cnt;i++)\n    {\n        q[i]=tmp[i]=0,f[i]=i<fd?f[i]:0;\n    }\n}\nvector<li>bmf[MAXN];\ninline void BerlekampMassey(ll length,ll *base,ll *res)\n{\n\tll cur=0;\n    for(register int i=1;i<=length;i++)\n    {\n    \tli curr=base[i];\n        for(register int j=0;j<bmf[cur].size();j++)\n        {\n            curr=(curr-(li)base[i-j-1]*bmf[cur][j]%MOD)%MOD;\n        }\n        delta[i]=curr;\n        if(!delta[i])\n        {\n            continue;\n        }\n        fail[cur]=i;\n        if(!cur)\n        {\n            bmf[++cur].resize(i),delta[i]=base[i];\n            continue;\n        } \n        ll id=cur-1,x=bmf[id].size()-fail[id]+i;\n        for(register int j=0;j<cur;j++)\n        {\n            if(i-fail[j]+bmf[j].size()<x)\n            {\n            \tid=j,x=i-fail[j]+bmf[j].size();\n            }\n        }\n        bmf[cur+1]=bmf[cur],cur++;\n        while(bmf[cur].size()<x)\n        {\n            bmf[cur].push_back(0);\n        }\n        li mul=(li)delta[i]*qpow(delta[fail[id]],MOD-2)%MOD;\n        bmf[cur][i-fail[id]-1]=(li)(bmf[cur][i-fail[id]-1]+mul)%MOD;\n        for(register int j=0;j<bmf[id].size();j++)\n        {\n            ll t=(li)mul*bmf[id][j]%MOD;\n            bmf[cur][i-fail[id]+j]=(bmf[cur][i-fail[id]+j]-t+MOD)%MOD;\n        }\n    }\n    ptr=cur;\n    for(register int i=0;i<bmf[cur].size();i++)\n    {\n    \tres[i+1]=(bmf[cur][i]%MOD+MOD)%MOD;\n    }\n} \nint main()\n{\n    fd=read(),exponent=read();\n    for(register int i=0;i<fd;i++)\n    {\n    \ttbm[i+1]=f[i]=(read()+MOD)%MOD;\n    }\n    BerlekampMassey(fd,tbm,tmp);\n    for(register int i=1;i<=bmf[ptr].size();i++)\n    {\n    \tprintf(\"%d \",tmp[i]);\n    }\n    puts(\"\");\n    for(register int i=1;i<=fd;i++)\n    {\n    \tg[fd-i]=MOD-tmp[i];\n    }\n    g[fd]=1;\n    for(register int i=0;i<=fd;i++)\n    {\n    \ttmp2[i]=g[i];\n    }\n    reverse(tmp2,tmp2+1+fd),inv(fd<<1,tmp2,tmp3);\n    for(register int i=0;i<=fd;i++)\n    {\n    \ttmp2[i]=0;\n    }\n    while(cnt<(fd<<2))\n    {\n    \tcnt<<=1,limit++;\n    }   \n    for(register int i=0;i<cnt;i++)\n    {\n    \trev[i]=(rev[i>>1]>>1)|((i&1)<<limit);\n    }\n    NTT(g,cnt,1),NTT(tmp3,cnt,1),base[1]=res[0]=1;\n    while(exponent)\n    {\n        if(exponent&1)\n        {\n            NTT(res,cnt,1),NTT(base,cnt,1);\n            for(register int i=0;i<cnt;i++)\n            {\n                res[i]=(li)res[i]*base[i]%MOD;\n            }\n            NTT(res,cnt,-1),NTT(base,cnt,-1),mod(res);\n        }\n        NTT(base,cnt,1);\n        for(register int i=0;i<cnt;i++)\n        {\n            base[i]=(li)base[i]*base[i]%MOD;\n        }\n        NTT(base,cnt,-1),mod(base),exponent>>=1;\n    }\n    for(register int i=0;i<fd;i++)\n    {\n    \trres=(rres+(li)res[i]*f[i]%MOD)%MOD;\n    }\n    printf(\"%d\\n\",rres);\n}\n```",
        "postTime": 1565185935,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5487 \u3010\u3010\u6a21\u677f\u3011\u7ebf\u6027\u9012\u63a8+BM\u7b97\u6cd5\u3011"
    }
]