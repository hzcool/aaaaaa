[
    {
        "content": "\u9996\u5148\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u76ee\u8fdb\u884c\u4e00\u6ce2\u5206\u6790\uff0c\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\u4e00\u6392\u725b\uff0c\u8ba9\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u8f6c\u5411\uff0c\u53ef\u4ee5\u770b\u5230\u6837\u4f8b\u6240\u7ed9\u7684\u6570\u636e\uff1a\r\n\r\n**0 0 1 0 1 0 0**\uff080\u8868\u793a\u671d\u5411\u540e\u65b9\uff0c1\u8868\u793a\u671d\u5411\u524d\u65b9\uff09\r\n\r\n- \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6240\u8fdb\u884c\u7684\u8c03\u6574\u4e00\u5b9a\u662f\u4ece\u5de6\u7aef\u6216\u8005\u53f3\u7aef\u5f00\u59cb\u7684\uff08\u56e0\u4e3a\u4ece\u4e2d\u95f4\u5f00\u59cb\u5bf9\u524d\u540e\u9020\u6210\u7684\u5f71\u54cd\u662f\u96be\u4ee5\u63a7\u5236\u7684\uff09\r\n\r\n- \u5728\u6211\u4eec\u8f6c\u725b\u7684\u8fc7\u7a0b\u4e2d\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u4e00\u5b9a\u662f\u4ece\u7b2c\u4e00\u4e2a 0 \u5f00\u59cb\u8fdb\u884c\u8f6c\u5411\u3002\u62ff\u6837\u4f8b\u6765\u770b\uff1a\r\n\t\t\r\n0 0 1 0 1 0 0\r\n\r\n\u4ece\u7b2c\u4e00\u4e2a\u96f6\u5f00\u59cb\r\n\r\n\u6211\u4eec\u4f1a\u5f97\u5230 \uff1a 1 1 0 0 1 0 0\r\n\r\n\u4ece\u7b2c\u4e8c\u4e2a\u96f6\u5f00\u59cb\r\n\r\n\u6211\u4eec\u4f1a\u5f97\u5230 \uff1a 0 1 0 1 1 0 0\r\n\r\n***\u663e\u7136\u82e5\u662f\u4ece\u7b2c\u4e8c\u4e2a\u5f00\u59cb\u6211\u4eec\u4ecd\u9700\u8981\u5c06\u524d\u9762\u7684 0 \u8fdb\u884c\u8f6c\u5411***\r\n\r\n\u5f53\u7136\u4e5f\u8bb8\u6709\u4eba\u4f1a\u60f3  \u4ece\u7b2c\u540e\u9762\u7684\u96f6\u5f00\u59cb\u8c03\u6574\u4f1a\u5f71\u54cd\u5230\u540e\u65b9\u7684\u6570\r\n\r\n\u90a3\u4e48\u6211\u4eec\u518d\u770b\r\n\r\n\r\n\u5c06\u4ece\u7b2c\u4e8c\u4e2a\u96f6\u5f00\u59cb\u8f6c\u5411\u7684\u8f6c\u5411\u4e24\u6b21\uff1a 1 0 1 1 1 0 0\r\n\r\n\u53cd\u89c2\u7b2c\u4e00\u4e2a\uff1a 1 1 1 1 0 0 0\r\n\r\n***\u4ece\u7b2c\u4e8c\u4e2a\u96f6\u5f00\u59cb\u8f6c\u5411\u7684\u4ecd\u9700\u8981\u5904\u7406\u524d\u9762\u76840 \uff0c\u800c\u4e14\u8fd9\u6837\u4e5f\u4f1a\u7834\u574f\u4e4b\u524d\u7684\u8f6c\u5411\u6210\u679c\uff0c\u6240\u4ee5\u76f8\u540c\u6b21\u6570\u7684\u8f6c\u5411\u663e\u7136\u4ece\u7b2c\u4e00\u4e2a0\u5f00\u59cb\u66f4\u4f18***\r\n\r\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u904d\u5386\uff0c\u4e00\u9047\u5230 0 \u5bf9\u4e4b\u540e\u7684 k \u4e2a\u6570\u636e\u8fdb\u884c\u8f6c\u5411\r\n\r\n**\u4f46\u5199\u5b8c\u4e4b\u540e\u53d1\u73b0\u4f1aT**\r\n\r\n\u56de\u5230\u6570\u636e\u5206\u6790\u4e4b\u540e\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u6211\u4eec\u4f7f\u7528\u7684\u7b97\u6cd5\u65f6\u95f4\u4e3a O(n *  n  * n)\u5bf9\u4e8e5000\u7684\u6570\u636e\u6765\u8bf4\u663e\u7136\u5f88\u5371\u9669\u3002\r\n\r\n\u6211\u4eec\u4f1a\u60f3\u5230\u628a\u6bcf\u6b21\u5c06\u540e\u65b9 k \u4e2a\u5143\u7d20\u7684\u8f6c\u5411\u7684\u65f6\u95f4\u6539\u4e3a O(1) \u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u601d\u8003\r\n\r\n**\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u8f6c\u5411\u4e0d\u7528\u4fee\u5b83\u7684\u503c\uff0c\u800c\u662f\u8fdb\u884c\u6807\u8bb0\u4e4b\u540e\u5224\u65ad\u5b83\u6807\u8bb0\u7684\u503c\u5c31\u53ef\u4ee5\u77e5\u9053\u5b83\u9762\u5411\u54ea\u91cc**\r\n\r\n\r\n\u7136\u540e *\u6807\u8bb0* -> *\u4f60\u662f\u5426\u60f3\u5230\u4e86\u5dee\u5206*  \r\n\r\n\u5e94\u8be5\u90fd\u5b66\u8fc7\u5427\uff08~~\u7136\u800c\u6211\u5f53\u65f6\u542c\u7684\u65f6\u5019\u5c31\u6ca1\u5b66\u8fc7~~\uff09\r\n\r\n\u8fd9\u6837\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a tage \u6765\u8bb0\u5f55\u5143\u7d20\u88ab\u6807\u8bb0\u7684\u4e2a\u6570\uff0c\u6bcf\u6b21\u904d\u5386\u5230 0 \u7684\u65f6\u5019\u628a\u540e\u9762\u7b2c i+k-1 \u4e2a\u5143\u7d20\u6807\u8bb0\u4e00\u4e0b \u5f53\u6211\u4eec\u904d\u5386\u5230\u90a3\u4e2a\u5143\u7d20\u65f6\u5c06 tage- - \uff08~~\u76f8\u4fe1\u540e\u9762\u7684\u4e8b\u60c5\u5c31\u4e0d\u7528\u6211\u8bf4\u4e86~~\uff09 \r\n\r\n\u8fd8\u6709\u4e00\u4ef6\u4e8b \u5f53\u5e8f\u5217\u540e\u9762\u7684\u5143\u7d20\u6570\u76ee\u4e0d\u8db3k-1\u4e2a\u7684\u65f6\u5019,\u5224\u5b9a\u8fd9\u4e2ak\u4e0d\u6210\u7acb\u76f4\u63a5\u8df3\u8fc7\u53bb \r\n\r\n\r\n\uff08~~\u6211&#\uffe5A^^S%*&)%$#%^$%@ \u56e0\u4e3a\u8fd9\u4e2a90\u5206 \u627e\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\u7684\u9519~~\uff09\r\n\r\n\r\n\r\n```\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int MAXN=5008;\r\nint n,k,a[MAXN],f[MAXN<<1],tag,op,ans=MAXN;\r\nint ansk,sum;\r\ninline int read()\r\n{\r\n    register int x=0,f=1;\r\n    char s;\r\n    while((s=getchar())<'0'||s>'9')\r\n    {\r\n        s=='-'?f=-1:f=1;\r\n    }\r\n    x=s-'0';\r\n    while((s=getchar())>='0'&&s<='9')\r\n    {\r\n        x=x*10+s-'0';\r\n    }\r\n    return x*f;\r\n}\r\nint main()\r\n{\r\n\tn=read();\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tchar s;\r\n\t\tcin>>s;\r\n\t\tif(s=='B') a[i]=0;\r\n\t\tif(s=='F') a[i]=1;\r\n\t}\r\n\tfor(register int k=1;k<=n;k++)\r\n\t{\r\n\t\tsum=0;tag=0;op=0;\r\n\t\tmemset(f,0,sizeof(f));\r\n\t\tfor(register int i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tif((a[i]+tag)%2==0)\r\n\t\t\t{\r\n\t\t\t\tif(i+k-1>n)\t\r\n\t\t\t\t{\r\n\t\t\t\t\top=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t++sum;\r\n\t\t\t\t++tag;\r\n\t\t\t\tf[i+k-1]=-1;\r\n\t\t\t}\r\n\t\t\tif(f[i]==-1)\r\n\t\t\t{\r\n\t\t\t\t--tag;\r\n\t\t\t\tf[i]=0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(op) continue;\r\n\t\tif(sum<ans)\r\n\t\t{\r\n\t\t\tans=sum;\r\n\t\t\tansk=k;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d %d\",ansk,ans);\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1564016243,
        "uid": 179730,
        "name": "FallR",
        "ccfLevel": 0,
        "title": "P2882"
    },
    {
        "content": "###  \u8d2a\u5fc3\uff0c\u679a\u4e3e\uff0c\u5dee\u5206\n\u56e0\u4e3a\u540c\u4e00\u4e2a\u70b9\u7ffb\u8f6c\u4e24\u6b21\u5c31\u4e0e\u6ca1\u6709\u7ffb\u8f6c\u7684\u6548\u679c\u76f8\u540c\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\u4e3a\uff1a\n\n\u4ece\u5de6\u5230\u53f3\u5bf9\u4e8e\u51fa\u73b0\u7684\u6bcf\u4e00\u4e2aB\u7ffb\u8f6c\u4e00\u6b21\u4ece\u5f53\u524d\u70b9\u5f00\u59cb\u7684\u533a\u95f4\uff0c\u5c31\u80fd\u4fdd\u8bc1\u662f\u6700\u4f18\u89e3\u3002\n\n**\u6837\u4f8b\u7684\u6a21\u62df\uff1a**\n\n\u5982\u679c\u5f53\u524d\u7ffb\u8f6c\u7684\u533a\u95f4\u957f\u5ea6\u4e3a3\n\n\u7c97\u4f53\u8868\u793a\u5f53\u524d\u4e0b\u6807\n\n**B** B F B F B B\n\n(**B** B F) B F B B\n\n**F** F B B F B B\n\nF **F** B B F B B\n\nF F **B** B F B B\n\nF F (**B** B F) B B\n\nF F **F** F B B B\n\nF F F **F** B B B\n\nF F F F **B** B B\n\nF F F F (**B** B B)\n\nF F F F **F** F F\n\nF F F F F **F** F\n\nF F F F F F **F**\n\n\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u6837\u662fn^2\u7684\uff0c\u518d\u679a\u4e3e\u957f\u5ea6\uff0c\u5c31\u53d8\u4e3a\u4e86n^3.\u56e0\u6b64\uff0c\u9700\u8981\u5bf9\u533a\u95f4\u7ffb\u8f6c\u5dee\u5206\u4e00\u4e0b\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fn^2\u7684\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn = 10009;\nint n;\nbool A[maxn],B[maxn];\nint main(){\n\tscanf(\"%d\",&n);\n\tchar ch;\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>ch;A[i]=ch=='B'?0:1;\n\t}\n\tint mincnt=0x7fffffff,anslen;\n\tfor(int len=1;len<=n;++len){\n\t\tmemset(B,0,sizeof B);\n\t\tbool b=0,flag=1;int cnt=0;//flag\u8bb0\u5f55\u5f53\u524d\u957f\u5ea6\u662f\u5426\u6709\u89e3\n\t\tfor(int i=1;i<=n;++i){//\u56e0\u4e3a\u533a\u95f4\u7ffb\u8f6c\u53ea\u6709\u72b6\u60010\u548c1\uff0c\u6240\u4ee5\u7528^\u4ee3\u66ff+\u548c-\n\t\t\tb^=B[i];//\u6570\u7ec4B\u4e3a\u8bb0\u5f55\u5dee\u5206\u7684\u6570\u7ec4\n\t\t\tif(!(A[i]^b)){//\u82e5\u5f53\u524d\u4f4d\u7f6e\u4e3a0\n\t\t\t\tif(i+len-1>n){flag=0;break;}//\u552f\u4e00\u7684\u5931\u8d25\u6761\u4ef6\uff1a\u4e00\u6b21\u7ffb\u8f6c\u7684\u957f\u5ea6\u5927\u4e8e\u5269\u4f59\u7684\u957f\u5ea6\n\t\t\t\tb^=1,B[i+len]^=1;\n\t\t\t\t++cnt;\n\t\t\t}\n\t\t}\n\t\tif(flag){if(cnt<mincnt)mincnt=cnt,anslen=len;}\n\t}printf(\"%d %d\\n\",anslen, mincnt);\n} \n```",
        "postTime": 1540253655,
        "uid": 51189,
        "name": "Delva",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]\u9762\u5bf9\u6b63\u786e\u7684\u65b9\u5f0fFace The Right Way\u3011"
    },
    {
        "content": "# P2882\n\n## \u9898\u610f\u7b80\u8ff0\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684 01 \u4e32\u3002\n- **\u9009\u62e9\u4e00\u4e2a k \u503c**\uff0c\u6bcf\u6b21\u4e00\u6bb5\u957f\u5ea6\u4e3a k \u533a\u95f4\u5c06\u5176\u4e2d\u7684\u6570\u53d6\u53cd\uff080\u53d8\u62101\uff0c1\u53d8\u62100\uff09\uff0c\u6700\u7ec8\u4f7f\u6574\u4e2a\u4e32\u53d8\u6210 1 \u3002\n- \u6c42\u51fa\u6700\u5c0f\u9700\u8981\u7684\u64cd\u4f5c\u6b21\u6570\u548c**\u5728\u6b64\u6761\u4ef6\u4e0b**\u6700\u5c0f\u7684 k \u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u6bcf\u6b21\u9009\u62e9\u533a\u95f4\u7684\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e k \uff0c\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a \u201c\u6bcf\u6b21\u4e00\u6bb5\u957f\u5ea6\u4e3a k \u533a\u95f4\u53d6\u53cd\uff0c\u9700\u8981\u591a\u5c11\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u6574\u4e2a\u4e32\u53d8\u62101 \u3002\n\n\u663e\u7136\u5bf9\u4e8e\u6bcf\u4e00\u4e2a 0 \u6211\u4eec\u90fd\u8981\u5bf9\u5b83\u81f3\u5c11\u64cd\u4f5c\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u5de6\u5230\u53f3\u8003\u8651\uff0c\u6bcf\u6b21\u9047\u5230 0 \u90fd\u5c06\u4ece\u8fd9\u4e2a 0 \u4e3a\u5de6\u7aef\u70b9\u957f\u5ea6\u4e3a k \u533a\u95f4\u4e2d\u7684\u6570\u53d6\u53cd\uff0c\u76f4\u5230\u5168\u53d8\u62101\u3002**\u5982\u679c\u78b0\u5230 0 \u65f6\u6b64\u65f6\u5230\u672b\u5c3e\u7684\u957f\u5ea6\u5c0f\u4e8e k \uff0c\u5219\u65e0\u89e3**\uff0c\u8003\u8651\u4e0b\u4e00\u4e2a k \u3002\n\n**\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u662f\u5bf9\u7684\u5462\uff1f**\n\n\n\n\u5047\u5982\u6709\u8fd9\u6837\u4e00\u4e2a\u4e32 1$\\color{red}\\text{0}$$\\color{gold}\\text{10}$0\u2026\u2026 , \u6211\u4eec\u679a\u4e3e\u7684 k = 2  \uff0c\u90a3\u4e48\u8981\u5c06\u6700\u5de6\u8fb9$\\color{red}\\text{\u7ea2\u8272\u7684 0}$ \u53d8\u6210 1\uff0c\u5e94\u8be5\u5c06\u8fd9\u4e2a 0 \u548c\u53f3\u8fb9\u7684$\\color{gold}\\text{\u91d1\u8272\u7684 10}$  \u53d6\u53cd\u800c\u4e0d\u53bb\u52a8\u5b83\u5de6\u8fb9\u9ed1\u8272\u7684 1 \u3002\u6bcf\u4e00\u4e2a\u72b6\u6001\u4e0b\u6700\u5de6\u8fb9\u7684 0 \u6211\u4eec\u90fd\u8981\u53bb\u5c06\u5b83\u53d8\u6210 1 \uff08\u56e0\u4e3a\u6700\u7ec8\u8981\u628a\u6574\u4e2a\u4e32\u53d8\u6210 1\uff09\uff0c\u800c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u5de6\u5230\u53f3\u8003\u8651\u7684\uff0c\u6240\u4ee5\u5b83\u5de6\u8fb9\u4e00\u5b9a\u5df2\u7ecf\u5168\u90e8\u662f 1 \u4e86 \u3002\n\n**\u540c\u65f6\uff0c\u56e0\u4e3a\u6211\u4eec\u6709\u4e24\u6b21\u679a\u4e3e\u548c\u4e00\u6b21\u533a\u95f4\u4fee\u6539\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f $O(n^3)$ \u6211\u4eec\u8fd8\u8981\u4f18\u5316**\n\n\u4e24\u6b21\u679a\u4e3e\u4e0d\u53ef\u907f\u514d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528**\u5dee\u5206**\uff0c\u5c06\u4fee\u6539\u53d8\u6210 $O(1)$ \u3002\n\n## \u4ee3\u7801\u601d\u8def\n\n\u5f88\u591a\u540c\u5b66\u90fd\u662f\u770b\u61c2\u4e86\u4e0a\u9762\u7684\u601d\u8def\u4f46\u662f\u5230\u4ee3\u7801\u5b9e\u73b0\u4e0a\u5c31\u6709\u4e9b\u56f0\u96be\u4e86\uff0c\u4e00\u4e2a\u8f83\u5927\u7684\u95ee\u9898\u5c31\u662f\u5dee\u5206\u5982\u4f55\u5b9e\u73b0\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a bool \u53d8\u91cf $\"now\"$ \u6765\u8868\u793a\u5f53\u524d\u72b6\u6001\u2014\u2014\u662f\u5426\u7ffb\u8f6c\u3002\u6613\u77e5\u7ffb\u8f6c\u5076\u6570\u6b21\u548c\u4e0d\u7ffb\u8f6c\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\u53ea\u8981\u5f02\u6216\u4e0a $1$ \u5c31\u53ef\u4ee5\u4e86\u3002\u800c\u5f53\u524d\u7684\u7684\u4e32\uff08\u5b58\u5728\u6570\u7ec4 a \u4e2d\uff09\u7684\u503c\u5c31\u662f $a[i]$ \u5f02\u6216 $now$\uff0c\u6bcf\u6b21\u5dee\u5206\u65f6\u5c06 $now$\u548c\u5dee\u5206\u6570\u7ec4$cha[i+k]$\u4fee\u6539 ,\u4e5f\u5c31\u662f\u73b0\u5728\u7ffb\u8f6c\u4e00\u4e0b\uff0c\u5230\u4e86\u4f4d\u7f6e $i+k$ \u7684\u65f6\u5019\u518d\u6539\u56de\u6765\uff0c\u7b49\u4ef7\u4e8e\u4fee\u6539 $i$ \u5230 $i+k$ \u7684\u503c\u3002\n\n## \u6613\u9519\u70b9\n- \u6bcf\u6b21\u679a\u4e3e k \u7684\u65f6\u5019\u8981\u5c06\u5dee\u5206\u6570\u7ec4\u6e050\n- \u6ce8\u610f\u5148\u8f93\u51fa k \u503c\u518d\u8f93\u51fa m \u503c\n- \u8bb0\u5f97\u5224\u65ad\u65e0\u89e3\n\n## AC\u4ee3\u7801\n\n\u5185\u5e26\u8be6\u7ec6\u6ce8\u91ca\u5e2e\u52a9\u7406\u89e3\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvoid read(int &x){\n\tint f=1;x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') { x=x*10+ch-'0';ch=getchar();}\n\tx*=f;\n}\n#define N 5010\nint n,ansm=2100000000,ansk;\nint a[N];//\u539f\u4e32 \nbool cha[N];//\u5dee\u5206\u6570\u7ec4 \nint main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++){\n\t\tchar ch;cin>>ch;\n\t\tif(ch=='F') a[i]=1;//\u8bfb\u5165\uff0c\u671d\u524d\u7684\u4e3a 1 \n\t}\n\tfor(int k=1;k<=n;k++){\n\t\tmemset(cha,0,sizeof(cha));//\u6613\u9519\u70b9 1 \n\t\tint flag=1,tot=0,now=0;//tot \u8bb0\u5f55\u5f53\u524d\u9700\u8981\u64cd\u4f5c\u51e0\u6b21 \n\t\tfor(int i=1;i<=n;i++){\n\t\t\tnow^=cha[i];//\u6bcf\u6b21\u64cd\u4f5c\u524d\u5f02\u6216\u5dee\u5206\u6570\u7ec4\uff0c\u4e5f\u8bb8\u8fd9\u4e2a\u70b9\u5c31\u662f\u67d0\u6b21\u5dee\u5206\u7684\u672b\u5c3e \n\t\t\tif(a[i]^now==0){//\u78b0\u5230 0 \uff0c\u8fdb\u884c\u64cd\u4f5c \n\t\t\t\tif(i+k-1>n){//\u65e0\u89e3 \n\t\t\t\t\tflag=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttot++;//\u8bb0\u5f55\u7b54\u6848 \n\t\t\t\tnow^=1,cha[i+k]^=1;//\u5dee\u5206\u4fee\u6539 \n\t\t\t}\n\t\t}\n\t\tif(flag){\n\t\t\tif(tot<ansm){//\u66f4\u65b0\u7b54\u6848 \n\t\t\t\tansm=tot;\n\t\t\t\tansk=k;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\",ansk,ansm);\n}\n\n```\n\n\u849f\u84bb\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u70b9\u4e2a\u8d5e\u5457",
        "postTime": 1595404814,
        "uid": 235658,
        "name": "llzzxx712",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]Face The Right Way G\u3011"
    },
    {
        "content": "### ~~**\u4e3a\u4e86\u7f13\u89e3\u4e00\u4e0b\u6211\u519b\u8bad\u5f52\u6765\u7684\u75b2\u60eb\u8eab\u5fc3\uff0c \u6211\u51b3\u5b9a\u4ee5\u53d1\u9898\u89e3\u6765\u6109\u60a6\u8eab\u5fc3**~~\n\n\n------------\n\n\u597d\u5427\u8fdb\u5165\u6b63\u9898\u2014\u2014\u2014\u2014>>\n  \n------------\n\u539f\u9898\u7684\u7ffb\u8bd1\uff1aN\u5934\u725b\u6392\u6210\u4e00\u52171<=N<=5000\u3002\u6bcf\u5934\u725b\u6216\u8005\u5411\u524d\u6216\u8005\u5411\u540e\u3002\u4e3a\u4e86\u8ba9\u6240\u6709\u725b\u90fd \u9762\u5411\u524d\u65b9\uff0c\u519c\u592b\u6bcf\u6b21\u53ef\u4ee5\u5c06K\u5934\u8fde\u7eed\u7684\u725b\u8f6c\u54111<=K<=N\uff0c\u6c42\u64cd\u4f5c\u7684**\u6700\u5c11\u6b21\u6570M\u548c\u5bf9\u5e94\u7684\u6700\u5c0fK**\u3002\n\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e86\uff0c \u7ffb\u8bd1\u5148\u8bf4M\u540e\u8bf4K\uff0c\u8fd9\u5f88\u5bb9\u6613\u8bef\u5bfc\u5927\u5bb6\uff0c\u800c\u4e14\u6837\u4f8b\u7684\u7ed3\u679c3 3\u4e5f\u4e0d\u660e\u663e\u3002\u8f93\u51fa\u683c\u5f0f\u5982\u56fe(\uff89\uff9f\u25bd\uff9f)\uff89\n\n![](https://img-blog.csdnimg.cn/20190826110539491.png)\n\n###              \u5148K\u518dM\uff01\uff01\n\u8fd9\u53ef\u80fd\u662f\u5927\u5bb6\u720620\u5206\u7684\u539f\u56e0QAQ.\n\n------------\n\n\u9898\u76ee\u5206\u6790\u2014\u2014\u2014\u2014>>\n\nn\u5934\u725b\uff0cB\u8868\u793a\u671d\u540e\uff08back\uff09\uff0c F\u8868\u793a\u671d\u524d\uff08front\uff09\uff0c\u8fd9\u662f\u5f88\u660e\u663e\u7684**\u8d2a\u5fc3**\u3002\u8981\u6c42\u628an\u5934\u725b\u90fd\u671d\u524d\u3002\u56e0\u4e3a\u53ef\u4ee5\u5c06\u8fde\u7eed\u7684k\u5934\u725b\u7ffb\u8f6c\uff0c\u6211\u4eec\u4e0d\u59a8**\u4ee4\u671d\u524d\u4e3a1\uff0c \u671d\u540e\u4e3a0\uff0c\u76ee\u7684\u662f\u628a\u6240\u67090\u53d81\u3002\u7ffb\u8f6c\u89c4\u5219\u662f0\u53d81\uff0c1\u53d80\u3002** \u7ffb\u8f6c\u65f6\uff0c \u6211\u4eec\u4e0d\u59a8\u4ee5\u7b2ci\u5934\u725b\u4e3a\u8d77\u70b9\uff0c**\u5982\u679c\u5b83\u671d\u540e\uff0c\u5c31\u628a\u5b83\u53ca\u540e\u9762\u7684\u8fde\u7eedk\u5934\u725b\u7ffb\u8f6c\uff1b\u53cd\u4e4b\u5219\u4e0d\u8f6c**\u3002\u518d\u8003\u8651\u7b2ci+1\u5934\u725b\u3002\u4e3a\u4ec0\u4e48\u5450\uff1f\u56e0\u4e3a\u8fd9\u4e48\u505a\u4ee5\u540e\uff0c\u4e4b\u540e\u7684\u7ffb\u8f6c\u5bf9\u8fd9\u4e9b\u66fe\u4f5c\u4e3a\u8d77\u70b9\u7684\u725b\u5df2\u7ecf\u6ca1\u6709\u5f71\u54cd\u4e86\uff0c\u800c\u6211\u4eec\u5df2\u7ecf\u628a\u8fd9\u4e9b\u725b\u90fd\u671d\u524d\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651\u540e\u9762\u6ca1\u6709\u505a\u8fc7\u8d77\u70b9\u7684\u725b\u662f\u4e0d\u662f\u671d\u524d\uff0c\u82e5\u5168\u671d\u524d\uff0c\u5219\u66f4\u65b0\u7b54\u6848\u4e86QAQ\u3002\n\n\u6bcf\u5934\u725b\u505a\u8d77\u70b9\u8981\u4e48\u8f6c\u8981\u4e48\u4e0d\u8f6c,\u56e0\u4e3a\u8f6c2\u6b21\u548c\u4e0d\u8f6c\u6ca1\u4ec0\u4e48\u533a\u522b\u6211\u60f3\u5927\u5bb6\u90fd\u5e94\u8be5\u77e5\u9053\u5427QAQ\n\n### **~~\u7136\u800c\u8fd9\u6837\u66b4\u529b\u53ea\u80fd\u62ff\u523080\u5206~~**\n\n## 80\u5206 Code\n\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n\nusing namespace std;\n\nint n, a[5005][5005], minn = 99999, step , pin;\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i = 1; i <= n; i++){\n\t\tchar ch;\n        getchar();\n\t\tch = getchar();\n\t\tif(ch == 'B') a[0][i] = 0;\n\t\telse a[0][i] = 1;\n\t}\n\tfor(int i = 1; i <= n; i++){\n\t\tstep = 0;\n\t\tint flag = 0;\n\t\tfor(int j = 1; j <= n; j++)\n\t\ta[i][j] = a[0][j];\n\t\tfor(int j = 1; j <= n - i + 1; j++){\n\t\t\tif(!a[i][j]){\n\t\t\tfor(int k = 0; k < i ; k++){\n\t\t\t\ta[i][j + k] ^= 1;\n\t\t\t}\n\t\t\tstep++;\n\t\t\tif(step > minn) break;\n\t\t\t}\n\t\t}\n\t\tfor(int j = n - i + 2; j <= n; j++){\n\t\t\tif(!a[i][j]){\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(int j = 1; j <= n; j++)\n\t\tif(!flag) {\n\t\t\tif(minn > step)\n\t\t\t{\n\t\t\t\tminn = step;\n\t\t\t\tpin = i;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\", pin, minn);\n\treturn 0;\n} \n```\n\u8fd9\u6837\u5b50\u5c31\u6709**\u597d\u591a\u597d\u591a\uff08!!!\u2211(\uff9f\u0414\uff9f\u30ce)\u30ce\uff09\u4e2an^2**\u4e86\uff01\uff01\uff01\n\n\u90a3\u80bf\u4e48\u529e\u5462\uff1f\n\u8fd9\u65f6\u5019\uff0c \u5c31\u8981\u7528\u5230\u4e00\u4e2a\u6211\u4e5f\u8bb2\u4e0d\u6e05\u695a\u540d\u79f0\u7684\u4e00\u4e2a\u65b9\u6cd5(\u611fjio\u662f\u5dee\u5206\uff1f\uff1f\uff1f)/\u624b\u52a8\u6ed1\u7a3d\n\u2014\u2014\u2014\u2014>>\n\n------------\n\u5148\u6765\u5b66\u4e60\u4e00\u4e0b\u2018 ^ \u2019\u7684\u57fa\u672c\u77e5\u8bc6\n\n\u2018 ^ \u2019\u540d\u66f0\u5f02\u6216\uff0c ~~\u82f1\u6587\u4e3aexclusive OR\uff0c\u7f29\u5199\u6210xor\uff0c\u5176\u8fd0\u7b97\u6cd5\u5219\u4e3a\uff1aa\u2295b = (\u00aca \u2227 b) \u2228 (a \u2227\u00acb)~~\uff0c0 ^ 1 \u4e3a1\uff0c 1 ^ 0 \u4e3a1, 0 ^ 0\u4e3a0 , 1 ^ 1\u4e3a0\u3002\u7b80\u800c\u8a00\u4e4b\uff0c**\u540c\u4e3a0\uff0c\u5f02\u4e3a1**\u3002\n\n\u90a3\u4e48 \u2018 ^ \u2019\u5230\u5e95\u6709\u867e\u7c73\u7528\u5462\uff1f\u5927\u5bb6\u60f3\u60f3\u770b\uff0c\u5148\u628anow\u8bbe\u4e3a0\uff0c\u7531\u4e0a\u8ff0\u89c4\u5219\u6613\u5f97\uff0c 1\u548c0 ^ 0\u90fd\u7b49\u4e8e\u5b83\u672c\u8eab\uff0c \u800c ^ 1\u90fd\u7b49\u4e8e\u975e1\u548c\u975e0\u3002\u6240\u4ee5\u5982\u679c\u5c06\u725b\u7ed9\u8f6c\u5411\u4e86\uff0c \u6211\u4eec\u5c31\u5c06**now ^= 1**, \u5373\u5c06now\u975e\u4e00\u4e0b\uff0c\u7136\u540e\u5c06\u6bcf\u5934\u725b\u90fd **^= now**, \u5c31\u80fd\u77e5\u9053\u8fd9\u5934\u725b\u76ee\u524d\u7684\u72b6\u6001\u3002\u4f46\u662f\u7b2ci+k\u5934\u725b\u53ca\u4e4b\u540e\u90fd\u662f\u4e0d\u8f6c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53c8\u7528\u4e00\u4e2a\u6570\u7ec4b\u6765\u50a8\u5b58\uff0cb\u521d\u503c\u8bbe\u4e3a0\uff0c\u5c06**b[i+k] ^= 1**\u3002 \u6bcf\u6b21\u90fd\u5c06**now ^= b[i]**, \u5c31\u53ef\u4ee5\u5c06now\u8c03\u6574\u8fc7\u6765\u3002\u5177\u4f53~~\u4e0d\u4e25\u8c28\u7684~~\u8bc1\u660e\uff1a~~\u6839\u636e\u767e\u5ea6\u767e\u79d1\u7b49\u8fd0\u7b97\u89c4\u5f8b\u53ca\u5927\u8111\u60f3\u8c61~~\u5206\u6790\u5f97\u2014\u2014\u2014\u2014>> \u56e0\u4e3ab[i] ^= 1 , now ^= 1,\u6240\u4ee5 now ^= b[i] = now\u3002\u6734\u7d20\u7684\u60f3\u6cd5\u662f:**\u7531\u4e8enow\u548cb\u7684\u521d\u503c\u90fd\u662f0\uff0c\u6240\u4ee5\u5c06now\u975e\u4e00\u4e0b\u53d8\u62101\uff0c b\u975e\u4e00\u4e0b\u53d8\u62101\uff0c 1^1\u8fd8\u662f0\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e0d\u8f6c\u4e86\uff0c\u591a\u4e2a\u91cd\u53e0\u5728\u4e00\u8d77\u4e5f\u4e00\u6837**\u3002\n\u8fd9\u4e00\u7247\u6bb5\u4ee3\u7801\u5982\u4e0b\u2193\u2193\u2193\n\n```cpp\nfor(int i = 1; i <= n; i++){\n\tmemset(b,0,sizeof(b));//\u5f52\u96f6\n\tnow = 0;\n\tstep = 0;//\u6b65\u6570\n\tint flag = 0;\n\tfor(int j = 1; j <= n; j++)//\u4f20\u9012\n\tdif[j] = a[j];\n\tfor(int j = 1; j <= n - i + 1; j++){//\u8981\u6ce8\u610f\u8303\u56f4\n\t\tnow ^= b[j];//\u8c03\u6574now\n\t\tdif[j] ^= now;//\u8c03\u6574\u725b\u7684\u671d\u5411\n\t\tif(!dif[j]){//\u8f6c\u5411\uff0c\u6b64\u65f6dif[i]\u4e0d\u4fee\u6539\u4e5f\u65e0\u6240\u8c13\uff0c\u5bf9\u540e\u9762\u4e0d\u5f71\u54cd\n\t\t\tnow ^= 1;\n\t\t\tb[i + j] ^= 1;\n\t\t\tstep++;\n\t\t}\n\t}\n\tfor(int j = n - i + 2; j <= n; j++){//\u67e5\u770b\u540e\u9762\u662f\u5426\u90fd\u671d\u524d\n\t\tnow ^= b[j];\n\t\tif(!(dif[j] ^ now)){\n\t\t\tflag = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!flag) {//\u5982\u679c\u90fd\u671d\u524d\n\t\tif(minn > step)\n\t\t{\n\t\t\tminn = step;\n\t\t\tpin = i;//\u6211\u4eec\u7ba1pin\u53eb\u9488|\u0942\uff65\u03c9\uff65` )\n\t\t}\n\t}\n}\n```\n------------\n~~151ms\u8ba9\u6211\u50b2\u5a07\u4e00\u4e0b\u0aee(\uff9f\u2200\uff9f)\u10d0~~\n\n------------\n\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nint n, a[5005], minn = 99999, step , pin, dif[5005], now, b[5005];\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i = 1; i <= n; i++){//\u8fd9\u662f\u8bfb\u5165QAQ\n\t\tchar ch;\n        getchar();\n\t\tch = getchar();\n\t\tif(ch == 'B') a[i] = 0;\n\t\telse a[i] = 1;\n\t}\n\tfor(int i = 1; i <= n; i++){//\u540c\u4e0a\n\t\tmemset(b,0,sizeof(b));\n\t\tnow = 0;\n\t\tstep = 0;\n\t\tint flag = 0;\n\t\tfor(int j = 1; j <= n; j++)\n\t\tdif[j] = a[j];\n\t\tfor(int j = 1; j <= n - i + 1; j++){\n\t\t\tnow ^= b[j];\n\t\t\tdif[j] ^= now;\n\t\t\tif(!dif[j]){\n\t\t\t\tnow ^= 1;\n\t\t\t\tb[i + j] ^= 1;\n\t\t\t\tstep++;\n\t\t\t}\n\t\t}\n\t\tfor(int j = n - i + 2; j <= n; j++){\n\t\t\tnow ^= b[j];\n\t\t\tif(!(dif[j] ^ now)){\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag) {\n\t\t\tif(minn > step)\n\t\t\t{\n\t\t\t\tminn = step;\n\t\t\t\tpin = i;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\", pin, minn);\n\treturn 0;\n} \n```\n\n\n------------\n\u5982\u679c\u53d9\u8ff0\u4e0d\u5f53\u6216\u8005\u4e0d\u61c2\u53ef\u4ee5\u8bc4\u8bba\u5594QAQ\n\n\u5b8c\u7ed3\u6492\u82b1**\u2570( \u00b4\u30fb\u03c9\u30fb)\u3064\u2500\u2500\u2606\u273f\u273f\u273f**\n",
        "postTime": 1566792705,
        "uid": 209604,
        "name": "pikabi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]\u9762\u5bf9\u6b63\u786e\u7684\u65b9\u5f0fFace The Right Way\u3011"
    },
    {
        "content": "### \u6709\u95ee\u9898\u53ef\u4ee5\u79c1\u4fe1\u95ee\u6211\uff0c\u8bc4\u8bba\u5f88\u5c11\u770b...\u56e0\u4e3a\u6ca1\u6709\u63d0\u9192\n\n#### \u8fd9\u662f\u4e00\u7bc7\u534a\u5a31\u4e50\u6027\u9898\u89e3\n\n## \u4f46\u4e5f\u662f\u4e00\u4e2a\u53ea\u8981\u4f1a\u66b4\u529b\u5c31\u80fdA\u7684\u9898\u89e3\n\n\u4e3b\u8981\u4ecb\u7ecd\u4e00\u4e9b\u5361\u5e38\u4f18\u5316+\u4e00\u4e9b**NOIP\u5e76\u4e0d\u80fd\u7528**\u7684\u4f18\u5316\uff0c\u5173\u4e8e\u6b63\u89e3\u7684\u9884\u5904\u7406\u6216\u662f\u8d2a\u5fc3\u8fd9\u91cc\u4e0d\u505a\u4ecb\u7ecd\n\n\u663e\u7136\u6b63\u89e3\u8981\u8003\u8651\u8d2a\u5fc3\u6216\u8005\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u7ffb\u8f6c\u9884\u5904\u7406\uff08O(2*N^2)\uff09\uff0c\u4f46\u8fd9\u91cc\u662f\u4e00\u7bc7**\u66b4\u529b+\u6bd2\u7624\u4f18\u5316**\u8fc7\u7684\u9898\u89e3...\n\n~~\u65e0\u804a\u60f3\u5237\u6c34\u9898\u7136\u800c\u5374T\u4e86...\u6012\u603c\u4e00\u6ce2\u5e38\u6570~~\n\n\u9996\u5148\u57fa\u672c\u7684\u8bfb\u4f18+\u8f93\u4f18\uff08\u4f18\u53161\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u8fd8\u662f\u4f1aT\uff09\n\n\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u533a\u95f4\u957f\u5ea6\uff0c\u627e\u5230\u6b63\u89e3\u76f4\u63a5\u9000\u51fa\uff08\u4f18\u53162\uff09\n\n\u533a\u95f4\u590d\u5236\u7684\u65f6\u5019memcpy\uff08\u4f18\u53163\uff09\n\n\u5faa\u73af\u53d8\u91cf\u7684register \u548c++i\uff08\u4f18\u53164\uff09\n\n\u597d\u5427\uff0c\u5176\u5b9e\u4e0a\u9762\u7684\u4f18\u5316\u90fd\u662f\u53ea\u8d77\u5230\u4e00\u70b9\u70b9\u4f5c\u7528\u7684...\n\n\u4f18\u53165\uff1aLuogu\u81ea\u5e26O2\n\n\u4f18\u53166\uff1a\u624b\u52a8O3\u7b49\u7b49\uff0c\u53ef\u4ee5\u4f18\u5316\u5230500ms\u5de6\u53f3\n\n```\n// luogu-judger-enable-o2\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"Ofast\")\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define int long long\nconst int M=1e9+7;\nusing namespace std;\ninline int read(){\n    char chr=getchar();\tint f=1,ans=0;\n    while(!isdigit(chr)) {if(chr=='-') f=-1;chr=getchar();}\n    while(isdigit(chr))  {ans=(ans<<3)+(ans<<1);ans+=chr-'0';chr=getchar();}\n    return ans*f;\n}\nvoid write(int x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint n,m;char a[5005],b[5005];\ninline void rever(char &x){\n    if(x=='B') x='F';\n    else x='B';\n}\nsigned main(){\n    n=read();\n    for(int i=1;i<=n;++i)a[i]=getchar(),getchar();\n    for(int k=n;k>=1;--k){\n        memcpy(b,a,sizeof b);\n        int t=0;\n        for(register int i=1;i+k-1<=n;++i){\n            if(b[i]=='B'){\n                ++t;\n                for(register int j=i;j<=i+k-1;++j) rever(b[j]);\n            }\n        }\n        int ff=0;\n        for(int i=1;i<=n;i++) if(b[i]=='B') ff=1;\n        if(ff) continue;\n        cout<<k<<\" \"<<t<<endl;\n        return 0;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1551180016,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]\u9762\u5bf9\u6b63\u786e\u7684\u65b9\u5f0fFace The Right Way\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6ca1\u6709\u4e00\u4e2a\u6bd4\u8f83\u8be6\u7ec6\u7684\u9898\u89e3\uff0c\u6211\u6765\u63d0\u4f9b\u4e00\u4efd\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u53cd\u8f6c\u533a\u95f4\u7684\u987a\u5e8f\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff0c\u800c\u4e14\u4e00\u4e2a\u533a\u95f4\u5982\u679c\u7ffb\u8f6c\u4e24\u6b21\u4ee5\u4e0a\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6240\u4ee5\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6c42\u54ea\u4e9b\u533a\u95f4\u9700\u8981\u53cd\u8f6c\u3002\n\n\u6211\u4eec\u679a\u4e3ek\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2ak\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2acalc\u51fd\u6570\u6765\u5224\u65adk\u7684\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u663e\u7136\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c31\u662f\u6bcf\u4e00\u6b21\u90fd\u68c0\u67e5\u6700\u5de6\u7aef\uff0c\u7136\u540e\u8fdb\u884c\u53cd\u8f6c\uff0c\u5f88\u5bb9\u6613\u5199\u51fa\u4e0b\u9762\u7684calc\u51fd\u6570\u3002\n\n```cpp\nint calc(int k) {\n    int ans = 0;\n    int i; \n    for(i = 1; i + k - 1 <= N; i++) {\n        if(f[i] == 1) {\n            for(int j = i; j <= i + k - 1; j++) {\n                f[j] = !f[j];\n            }\n            ans++;\n        }\n    }\n    for(i--; i <= N; i++) {\n        if(f[i] == 1) return -1;\n    }\n    return ans;\n}\n```\n\u8fd9\u6837\u7684\u68c0\u67e5\u65b9\u5f0f\u590d\u6742\u5ea6\u4e3aO(n2)\uff0c\u518d\u7ed3\u5408\u679a\u4e3ek\uff0c\u603b\u7684\u590d\u6742\u5ea6\u662fO(n3)\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u901a\u8fc770%\u7684\u6570\u636e\uff0c\u4f46\u8fd8\u4e0d\u591f\u597d\u3002\n\n\u6211\u4eec\u6765\u8003\u8651\u600e\u4e48\u4f18\u5316\u3002\u663e\u7136\u7684\uff0c\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u53bb\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u7684\u72b6\u6001\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b58\u50a8\u6bcf\u4e00\u4e2a\u533a\u95f4\u662f\u5426\u53cd\u8f6c\u8fc7\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5b9a\u4e49\n\nf[i]\u4e3a\u533a\u95f4[i, i+k-1]\u662f\u5426\u53cd\u8f6c\u3002\n\n\u8fd9\u6837\uff0c\u53cd\u8f6c\u7684\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86O(1)\uff0c\u603b\u7684\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86O(n2)\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5AC\u8fd9\u9053\u9898\u4e86\u3002\n\n\u5bf9\u4e8e\u5b9e\u73b0\u4e0a\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u600e\u4e48\u5224\u65ad\u6bcf\u4e00\u4e2a\u683c\u5b50\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u7559\u7ed9\u8bfb\u8005\u601d\u8003\u3002\n\n\u4e0b\u9762\u8d34\u4e0acalc\u7684\u4ee3\u7801\u3002\n\n```cpp\nint calc(int K) {\n    memset(f, 0, sizeof(f));\n    int ans = 0;\n    int sum = 0;\n    for(int i = 0; i + K <= N; i++) {\n        if((g[i] + sum) % 2 != 0) {\n            ans++;\n            f[i] = 1;\n        }\n        sum += f[i];\n        if(i - K + 1 >= 0) sum-=f[i-K+1];\n    }\n    for(int i = N - K + 1; i < N; i++) {\n        if((g[i] + sum) % 2 != 0) {\n            return -1;\n        }\n        if(i-K+1 >= 0) {\n            sum-=f[i-K+1];\n        }\n    }\n    return ans;\n}\n```\n\u5982\u679c\u6709\u95ee\u9898\uff0c\u53ef\u4ee5\u79c1\u4fe1\u3002\n",
        "postTime": 1478486997,
        "uid": 7429,
        "name": "MrMorning",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]\u9762\u5bf9\u6b63\u786e\u7684\u65b9\u5f0fFace The Right Way\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u8fd9\u4e2a\u9898\u6765\u770b\u7684\u8bdd\u597d\u50cf\u6709\u70b9\u96be\u4e0b\u624b\uff0c\u4e0d\u5982\u518d\u53bb\u8bfb\u4e00\u904d\u9898 ~~N\u904d~~\uff0c\u53d1\u73b0\u4e00\u53e5\u8bdd\u5f88\u91cd\u8981**Each time the machine is used, it reverses the facing direction of a contiguous group of K cows in the line**\uff0c\u5c31\u662f\u8bf4\u53ea\u80fd\u7ffb\u8f6c\u56fa\u5b9a\u7684\u957f\u5ea6\u533a\u95f4\uff0c\u90a3\u8fd9\u6837\u662f\u4e0d\u662f\u5c31\u53ef\u4ee5\u679a\u4e3e\u533a\u95f4\u4e86\uff1f\u679a\u4e3e\u4e00\u5c42\u533a\u95f4,\u518d\u679a\u4e3e\u6bcf\u6b21\u8d77\u70b9\uff0c\u6700\u540e\u52a0\u4e0a\u533a\u95f4\u4fee\u6539\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(N^3)$\uff0c\u80af\u5b9a\u4f1aT\u6389\uff0c\u63a5\u4e0b\u6765\u5c31\u8003\u8651\u4f18\u5316\u4e86\u3002\n\n\u4f18\u5316\u600e\u4e48\u5165\u624b\u5462\uff1f\u65f6\u95f4\u4e3b\u8981\u5c31\u662f\u51fa\u5728\u8fd9\u4e09\u5c42\u5faa\u73af\u4e0a\uff0c\u53ea\u8981\u7701\u6389\u4e00\u5c42\u5faa\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u80fd\u5230$O(N^2)$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\uff0c\u7b2c\u4e00\u5c42\u5faa\u73af\uff0c\u663e\u7136\u4e0d\u80fd\u7701\u7565\uff0c\u7b2c\u4e8c\u5c42\u540c\u6837\uff0c\u53ea\u6709\u5728\u533a\u95f4\u4fee\u6539\u8fd9\u4e00\u5c42\u5faa\u73af\u4e0a\u53ef\u4ee5\u505a\u70b9\u624b\u811a\uff0c\u56de\u5fc6\u533a\u95f4\u4fee\u6539\uff0c\u6709\u51e0\u79cd\u505a\u6cd5\uff0c\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4\uff0c\u8fd8\u6709\u5dee\u5206\uff0c\u524d\u4e24\u8005\u7528\u5728\u8fd9\u90fd\u6709\u70b9\u5927\u6750\u5c0f\u7528\u6216\u662f\u8bf4\u4e0d\u662f\u5f88\u5408\u9002\uff0c\u56e0\u4e3a\u5224\u65ad\u662f\u5426\u533a\u95f4\u4fee\u6539\u5b8c\u6210\u4e0d\u597d\u5224\u65ad\uff0c\u800c\u5dee\u5206\u7528\u5728\u8fd9\u4e2a\u533a\u95f4\u4e0a\u5c31\u5f88\u5408\u9002\u4e86\u3002\u90a3\u6211\u4eec\u5927\u6982\u601d\u8def\u4e5f\u5c31\u6709\u4e86\uff0c\u9996\u5148\u8bfb\u5165\u6570\u7ec4\uff0c\u5c06B\u6807\u8bb0\u62101\uff0cF\u6807\u8bb0\u62100\uff0c\u8fd9\u91cc\u600e\u4e48\u6807\u8bb0\u90fd\u65e0\u6240\u8c13\uff0c\u7136\u540e\u5229\u7528\u679a\u4e3e\u533a\u95f4\uff0c\u5dee\u5206\u4fee\u6539\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848\uff0c\u4e0b\u9762\u8003\u8651\u4e00\u4e0b\u7ec6\u8282\u3002\n\n\u6211\u4eec\u679a\u4e3e\u533a\u95f4\u5b8c\uff0c\u8981\u4ece\u5de6\u5230\u53f3\u4e00\u6b21\u53cd\u8f6c\u533a\u95f4\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u662f\u6700\u5c0f\u6b21\u6570\uff0c\u5c31\u662f\u8981\u5148\u4fdd\u8bc1\u6b21\u6570\u6700\u5c0f\uff0c\u518d\u8003\u8651\u533a\u95f4\u957f\u5ea6\uff0c\u800c\u6211\u4eec\u5982\u679c\u5148\u4fee\u6539\u540e\u9762\u7684\uff0c\u628a\u540e\u9762\u6539\u597d\u4e86\uff0c\u518d\u53bb\u6539\u524d\u8fb9\u7684\uff0c\u7ed3\u679c\u4e00\u5b9a\u4e0d\u4f1a\u6bd4\u5148\u6539\u524d\u8fb9\u7684\u597d\uff08**\u6709\u53ef\u80fd\u76f8\u7b49\uff0c\u598200100**\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u4e3a\u4fdd\u8bc1\u6700\u5c0f\u6b21\u6570\uff0c\u4e00\u5b9a\u4ece\u6700\u5de6\u7aef\u5f00\u59cb\u4f9d\u6b21\u679a\u4e3e\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u7b26\u5408\uff0c\u5c31\u628a\u4ed6\u540e\u9762\u7684\u6574\u4e2a\u533a\u95f4\u7ffb\u8f6c\uff0c\u8fd9\u91cc\u5c31\u8981\u7528\u5230\u5dee\u5206\u4e86\uff0c\u80af\u5b9a\u76f4\u63a5\u4fee\u6539\u4f1aT\u6389\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\uff0c\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u8981\u4fee\u6539\uff0c\u90a3\u4e48\u539f\u6765\u76841\u4f1a\u53d8\u62102\uff0c0\u4f1a\u53d8\u62101\uff0c\u597d\u50cf\u6ca1\u4ec0\u4e48\u89c4\u5f8b\uff0c\u4f46\u518d\u770b\u5c31\u53d1\u73b0\u6240\u6709\u7684\u5947\u6570\u90fd\u9700\u8981\u6539\u53d8\uff0c\u5076\u6570\u5c31\u4e0d\u7528\uff0c\u6bcf\u6b21\u4fee\u6539\u7ed9\u6574\u4e2a\u533a\u95f4\u52a0\u4e00\uff0c\u5224\u65ad\u5947\u5076\u6570\u5c31\u884c\uff0c\u7136\u540e\u8fd9\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\u52a0\u4e00\u4e2a\u6570\u7684\u64cd\u4f5c\uff0c\u76f8\u4fe1\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\u3002\u8fd9\u6837\u4fee\u6539\u5c31\u5b8c\u6210\u4e86\uff0c\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u80fd\u4e0d\u80fd\u5b8c\u6210\u9898\u76ee\u7684\u4efb\u52a1\u5462\uff1f\n\n\u7531\u9898\u610f\u53ef\u4ee5\u77e5\u9053\u5982\u679c\u5f53\u524d\u533a\u95f4\u957f\u5ea6\u5c0f\u4e8e\u4fee\u6539\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u662f\u4e0d\u80fd\u4fee\u6539\u7684\uff0c\u4e5f\u5c31\u662f\u4ecen\u5f80\u524d\u7684\u957f\u5ea6\u4e3alen\u7684\u533a\u95f4\u603b\u662f\u65e0\u6cd5\u88ab\u4fee\u6539\u7684\uff0c\u6240\u4ee5\u5224\u65ad\u8fd9\u4e00\u6bb5\u533a\u95f4\u5185\u6709\u65e0\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5373\u53ef\u3002\n\n\u6700\u540e\u627e\u7b54\u6848\u7684\u65f6\u5019\u4e5f\u6709\u4e00\u4e2a\u5730\u65b9\uff0c\u5c31\u662f\u5f53\u64cd\u4f5c\u4fee\u6539\u6b21\u6570\u4e0d\u540c\u65f6\uff0c\u76f4\u63a5\u7528\u64cd\u4f5c\u4fee\u6539\u6b21\u6570\u6700\u5c0f\u7684\u90a3\u4e2a\u7b54\u6848\u5c31\u884c\uff0c\u4f46\u5982\u679c\u5f53\u524d\u64cd\u4f5c\u6b21\u6570\u548c\u539f\u6765\u7b54\u6848\u76f8\u540c\uff0c\u662f\u4e0d\u662f\u8981\u8003\u8651\u4e00\u4e0b\u533a\u95f4\u957f\u5ea6\u6539\u6210\u6700\u5c0f\u503c\uff1f\u7b54\u6848\u663e\u7136\u662f**\u4e0d\u662f**\uff0c\u2026\u2026\u2026\u2026\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u6240\u4ee5\u5728\u9047\u5230\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u5f97\u5230\u7684\u7b54\u6848\u7684\u533a\u95f4\u957f\u4e00\u5b9a\u662f\u5c0f\u7684\uff0c\u6240\u4ee5\u53ea\u5728\u6b21\u6570\u4e0d\u540c\u65f6\u4fee\u6539\u7b54\u6848\uff0c\u4f46\u5224\u65ad\u4e0a\u4e5f\u4e0d\u4f1a\u9519\u3002\n## \u5176\u4ed6\u4f18\u5316\n\u5f53\u7136\u4ee5\u4e0b\u4f18\u5316\u4e0d\u52a0\u4e5f\u6ca1\u95ee\u9898\uff0c\u6bd5\u7adf\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u8db3\u591f\u8fc7\u6389\u8fd9\u9053\u9898\u3002\n\u6211\u505a\u5b8c\u4e4b\u540e\u770b\u4e86\u770b\u65f6\u95f4\u5927\u6982700ms\u5de6\u53f3\uff0c\u597d\u50cf\u6709\u70b9\u9ad8\uff0c\u770b\u522b\u4eba\u7684\u65f6\u95f4\u597d\u50cf\u6ca1\u6709\u7279\u522b\u5927\uff0c\u6240\u4ee5\u6211\u52a0\u4e86\u52a0\u5c0f\u4f18\u5316\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5ezh4z50.png?x-oss-process=image/resize,m_lfit,h_00,w_500)\n\n\u4e3a\u65b9\u4fbf\u8bf4\uff0c\u7531\u4e0a\u5230\u4e0b\u4e00\u6b21\u6807\u53f7$1-4$,1,2\u8dd1\u7684\u65f6\u95f4\u8fd8\u662f\u633a\u5feb\u7684\u4f46\u5bf9$NOIp$\u6ca1\u5565\u7528\uff0c$NOIp$\u4e0d\u53ef\u80fd\u7ed9\u4f60\u5f00O2\u4e5f\u4e0d\u53ef\u80fd\u7ed9\u4f60c++17\uff0c\u6240\u4ee5\u8fd8\u662f\u770b\u4e00\u4e0b3\u548c4\uff0c\u8fd9\u4fe9\u65f6\u95f4\u5927\u6982\u6709\u4e00\u500d\u7684\u5173\u7cfb\uff0c\u770b\u4e00\u4e0b\u4ee3\u7801\u5427\n# 3\n```\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=5e3+10;\nchar s[3];\nint cf[N],a[N];\nint min(int a,int b){\n    if(a<b)return a;\n    else return b;\n}\nint main(){\n    int n;scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",s);\n        if(s[0]=='B')a[i]=1;\n        else a[i]=0;\n    }\n    int res=0x3f3f3f3f,ans=0x3f3f3f3f;\n    for(int len=1;len<=n;len++){\n        int cnt=1,k=0;memset(cf,0,sizeof(cf));\n        for(int i=1;i<=n;i++){\n            cf[i]+=cf[i-1];\n            if(i+len-1<=n){\n                if(a[i]+cf[i]&1){\n                    cf[i]++;cf[i+len]--;k++;\n                }\n            }else if(cf[i]+a[i]&1){cnt=0;break;}\n        }\n        if(cnt)\n            if(k<ans){\n                ans=k;res=len;\n            }\n            else if(k==ans)res=min(res,len);\n    }\n    printf(\"%d %d\",res,ans);\n    return 0;\n}\n\n```\n## 4\n```\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=5e3+10;\nchar s[3];\nint cf[N],a[N];\nint min(int a,int b){\n    if(a<b)return a;\n    else return b;\n}\nint main(){\n    int n;scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",s);\n        if(s[0]=='B')a[i]=1;\n        else a[i]=0;\n    }\n    int res=0x3f3f3f3f,ans=0x3f3f3f3f;\n    for(int len=1;len<=n;len++){\n        int cnt=1,k=0;memset(cf,0,sizeof(cf));\n        for(int i=1;i<=n;i++){\n            cf[i]+=cf[i-1];\n            if(i+len-1<=n){\n                if(a[i]+cf[i]&1){\n                    cf[i]++;cf[i+len]--;k++;\n                }\n            }else if(cf[i]+a[i]&1)cnt=0;\n        }\n        if(cnt)\n            if(k<ans){\n                ans=k;res=len;\n            }\n            else if(k==ans)res=min(res,len);\n    }\n    printf(\"%d %d\",res,ans);\n    return 0;\n}\n\n```\n\u5176\u5b9e\u5c31\u662f\u5c11\u4e00\u4e2abreak\uff0c\u611f\u89c9\u8fd9\u4e2a\u52a0\u4e0a\u8fd8\u662f\u5f88\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u53ef\u80fd\u6781\u9650\u6570\u636e\u7684\u65f6\u5019\uff0cCCF\u90a3\u8bc4\u6d4b\u673a\u72b6\u6001\u4e0d\u597d\uff0c\u518d\u5361\u4e00\u4e0b\uff0c\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\u3002\n## \u95ee\u9898\n\u90a3\u4e48\u6709\u6ca1\u6709\u53ef\u80fd\u6700\u5f00\u59cb\u5168\u90e8\u662f\u671d\u524d\u7684\u5462\uff1f\u7b54\u6848\u662f\u6ca1\u6709\uff0c\u82f1\u6587\u9898\u9762\u4e2d\u5df2\u7ecf\u8bb2\u5230\uff0c**\u6709\u4e00\u4e9b**\u725b\uff0c\u6240\u4ee5\u8bf4\u4e0d\u53ef\u80fd\u5176\u5b9e\u5168\u90e8\u671d\u524d\u8fb9\u7684\u3002",
        "postTime": 1586837067,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2882"
    },
    {
        "content": "##\u5176\u5b9e\u662f\u4e00\u4e2a\u975e\u5e38\u5de7\u5999\u7684\u987a\u5e8f\u6a21\u62df\n\n\u57fa\u672c\u601d\u8def\u540c\u697c\u4e0b\uff0c\u4f46\u662f\u5728\u68c0\u9a8ck\u65f6\u8fd8\u53ef\u4ee5\u5199\u5f97\u66f4\u52a0\u6e05\u6670\uff1a\n\n\u8bb0f[i]\u4e3ai\u8fd9\u4e2a\u70b9\u662f\u591a\u5c11\u4e2a\u64cd\u4f5c\u7684\u7ec8\u6b62\u8282\u70b9\uff0c\u8bb0t\u4e3a\u5f53\u524d\u6b64\u70b9\u53d7\u5230\u7684\u5f71\u54cd\u6570\uff08\u5947\u6570\u6b21\u6539\u53d8\u65b9\u5411\uff0c\u5076\u6570\u6b21\u4e0d\u53d8\uff09\uff0c\u8bb0st\u4e3a\u5df2\u7ecf\u64cd\u4f5c\u591a\u5c11\u6b21\u3002\n\n\u6bcf\u5f53\u5224\u65ad\u5230$(a[i]+t)%2==1$\u65f6(\u6211\u628aF\u8bb0\u4e3a0\uff0cB\u8bb0\u4e3a1)\uff0c\u5c31\u5fc5\u987b\u8fdb\u884c\u64cd\u4f5c\uff0c\u6807\u8bb0\u5b83\u7684\u7ec8\u6b62\u6807\u8bb0\n\n\u6bcf\u5f53\u5224\u65ad\u5230$f[i]>1$\u65f6\uff0c\u8bf4\u660e\u6709$f[i]$\u4e2a\u64cd\u4f5c\u7ec8\u6b62\u4e86\uff0c\u5219$t-=f[i]$\uff0c\u5e76\u5c06$f[i]$\u6e05\u96f6\n\n\u6700\u540e\u5224\u65ad$n-k+2~n$\u6709\u6ca1\u6709\u8fd8\u6ca1\u53cd\u8fc7\u6765\u7684\uff0c\u65e0\u5219\u5c1d\u8bd5\u66f4\u65b0\u7b54\u6848\uff0c\u6709\u5219\u653e\u5f03\u8be5\u6b21\u7684$k$\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint n,g[5005],f[5005];\nchar c;\nint ans=0,kk;\nint main()\n{\n    scanf(\"%d\\n\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        cin>>c;\n        if(c=='F') g[i]=0;\n        else g[i]=1;    \n    }\n    ans=1e9;\n    for(int k=1;k<=n;k++)\n    {\n        memset(f,0,sizeof(f));\n        int t=0,ok=1,st=0;\n        for(int i=1;i+k-1<=n;i++)\n        {\n            if((g[i]+t)%2==1)\n            {\n                f[i+k-1]++;    \n                t++;\n                st++;\n            }    \n            if(f[i])\n            {\n                t-=f[i];\n                f[i]=0;    \n            }\n        }\n        for(int i=n-k+2;i<=n;i++)\n        {\n            if((g[i]+t)%2==1)\n                ok=0;    \n            if(f[i])\n            {\n                t-=f[i];\n                f[i]=0;    \n            }\n        }\n        if(ok && st<ans)\n        {\n            ans=st;\n            kk=k;    \n        }\n    }\n    cout<<kk<<\" \"<<ans;\n    return 0;\n} \n\n```",
        "postTime": 1509444083,
        "uid": 36294,
        "name": "feng_chengjie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]\u9762\u5bf9\u6b63\u786e\u7684\u65b9\u5f0fFace The Right Way\u3011"
    },
    {
        "content": "[\u94fe\u63a5](https://www.cnblogs.com/liuchanglc/p/12643679.html)\n## \u5206\u6790\n\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\u4e24\u79cd\u5b57\u6bcdB\u548cF\uff0c\u5f88\u663e\u7136\uff0c\u7528\u5b57\u7b26\u6570\u7ec4\u5199\u4ee3\u7801\u5f88\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u6211\u4eec\u5c06B\u8f6c\u5316\u4e3a0\uff0cF\u8f6c\u5316\u4e3a1\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\u5c06\u4e00\u4e2a\u53ea\u542b\u67090\u548c1\u7684\u6570\u7ec4\u8fdb\u884c\u591a\u6b21\u53d6\u53cd\uff0c\u4f7f\u5f97\u6700\u7ec8\u6570\u7ec4\u91cc\u7684\u5143\u7d20\u5168\u90fd\u53d8\u62101\n```cpp\nfor(int i=1;i<=n;i++){\n          scanf(\" %c\",&s);\n          if(s=='B') a[i]=0;\n          else a[i]=1;\n      }\n```\n\u8fd9\u9053\u9898\u66b4\u529b\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u6b21\u64cd\u4f5c\u53cd\u8f6c\u7684\u957f\u5ea6k\u4ece1\u5230n\u5f00\u59cb\u679a\u4e3e\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2ak\u503c\uff0c\u6211\u4eec\u4ece1\u5230n\u679a\u4e3e\u957f\u5ea6\u4e3ak\u7684\u533a\u95f4\n\n\u56e0\u4e3a\u540c\u4e00\u4e2a\u70b9\u7ffb\u8f6c\u4e24\u6b21\u5c31\u4e0e\u6ca1\u6709\u7ffb\u8f6c\u7684\u6548\u679c\u76f8\u540c\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\u4e3a\uff1a\n\n\u4ece\u5de6\u5230\u53f3\u5bf9\u4e8e\u51fa\u73b0\u7684\u6bcf\u4e00\u4e2aB\u7ffb\u8f6c\u4e00\u6b21\n\n\u4ece\u5f53\u524d\u70b9\u5f00\u59cb\u7684\u533a\u95f4\uff0c\u5c31\u80fd\u4fdd\u8bc1\u662f\u6700\u4f18\u89e3\u3002\n\n\u5982\u679cf[i]=0\uff0c\u90a3\u4e48\u628af[i]\u5230f[i+k-1]\u8fd9\u4e2a\u957f\u5ea6\u4e3ak\u7684\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u5168\u90e8\u53d6\u53cd\n\n\u53d6\u53cd\u540e\u7ee7\u7eed\u4ecei+1\u904d\u5386\uff0c\u91cd\u590d\u4e0a\u4e00\u6b65\n\n\u8fd9\u6837\uff0c\u4ece1\u5230n\u7684\u6bcf\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u90fd\u9700\u8981\u628a\u5b83\u8fdb\u884c\u4e00\u6b21\u904d\u5386\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3an^3\n```cpp\nint solve(int k) {\n    int ans = 0;\n    int i; \n    for(i = 1; i + k - 1 <= N; i++) {\n        if(f[i] == 1) {\n            for(int j = i; j <= i + k - 1; j++) {\n                f[j] = !f[j];\n            }\n            ans++;\n        }\n    }\n    for(i--; i <= N; i++) {\n        if(f[i] == 1) return -1;\n    }\n    return ans;\n}\n```\n\u5f88\u663e\u7136n=5000\u7684\u6570\u636e\u8fc7\u4e0d\u4e86\uff0c\u4e0d\u8fc7\u8fd8\u662f\u53ef\u4ee5\u62ff\u4e00\u90e8\u5206\u5206\u7684\n\n## \u4f18\u5316\nn^3\u7684\u590d\u6742\u5ea6\u8fc7\u4e0d\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7701\u53bb\u4e00\u91cd\u5faa\u73af\uff0c\u628a\u5b83\u53d8\u6210n^2\n\n\u7b2c\u4e00\u5c42\u662f\u679a\u4e3e\u533a\u95f4k\u7684\u5927\u5c0f\uff0c\u8fd9\u4e00\u5c42\u6211\u4eec\u663e\u7136\u4e0d\u80fd\u7701\u53bb\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e5f\u4e0d\u80fd\u7701\u53bb\n\n\u800c\u4e14\u5b83\u4eec\u4e5f\u4e0d\u5177\u6709\u5355\u8c03\u6027\uff0c\u56e0\u6b64\u4e8c\u5206\u4e5f\u4e0d\u53ef\u4ee5\n\n\u90a3\u4e48\u6211\u4eec\u518d\u91cd\u65b0\u8003\u8651\u4e00\u4e0b\u64cd\u4f5c\u7684\u6027\u8d28\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u5bf9\u5b83\u64cd\u4f5c\u5076\u6570\u6b21\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u6ca1\u6709\u64cd\u4f5c\n\n\u5982\u679c\u5bf9\u5b83\u64cd\u4f5c\u5947\u6570\u6b21\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u53d6\u53cd\u4e00\u6b21\n\n\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u53bb\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u7684\u72b6\u6001\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b58\u50a8\u6bcf\u4e00\u4e2a\u5143\u7d20\u88ab\u53cd\u8f6c\u7684\u6b21\u6570\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5dee\u5206\u6570\u7ec4\uff08\u540d\u79f0\u4e3acf\uff09\u8bb0\u5f55\u8be5\u5143\u7d20\u88ab\u64cd\u4f5c\u7684\u6b21\u6570\n\n\u5982\u679c\u8be5\u5143\u7d20\u662f1\uff0c\u90a3\u4e48\u5b83\u88ab\u64cd\u4f5c\u5076\u6570\u6b21\u624d\u7b26\u5408\u8981\u6c42\uff0c\u5982\u679c\u662f0\u5c31\u8981\u64cd\u4f5c\u5947\u6570\u6b21\n\n\u6240\u4ee5\u5982\u679c\u5f53\u524d\u5143\u7d20\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u6211\u4eec\u5c31\u66f4\u65b0\u64cd\u4f5c\u6570,\u628acf[i]++,\u540c\u65f6\u8981\u628af[i+k-1]--\uff0c\u56e0\u4e3a\u8be5\u64cd\u4f5c\u53ea\u5bf9[i,i-k+1]\u8fd9\u4e2a\u533a\u95f4\u6709\u6548\n```cpp\n if((a[i]+cf[i])%2==0){\n     cf[i]++;\n     cf[i+k]--;\n     js++;\n }\n```\n\u7ef4\u62a4\u4ee3\u7801\u5982\u4e0a\n\n\u90a3\u4e48\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4e0d\u6210\u7acb\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u5f53\u5e8f\u5217\u540e\u9762\u7684\u5143\u7d20\u6570\u76ee\u4e0d\u8db3k-1\u4e2a\u7684\u65f6\u5019,\u5224\u5b9a\u8fd9\u4e2ak\u4e0d\u6210\u7acb\u76f4\u63a5\u8df3\u8fc7\u53bb\n\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxn=5010;\nchar s;\nint a[maxn],cf[maxn];//cf\u5dee\u5206\u6570\u7ec4,a\u539f\u59cb\u6570\u7ec4\nint n;\nint solve(int k){\n    int js=0;//\u8bb0\u5f55\u533a\u95f4\u53d6\u53cd\u7684\u4e2a\u6570\n    memset(cf,0,sizeof(cf));//\u4e0d\u8981\u5fd8\u4e86\u521d\u59cb\u5316\n    for(int i=1;i<=n;i++){\n        cf[i]+=cf[i-1];//\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\n        if(i+k-1<=n){\n            if((a[i]+cf[i])%2==0){\n                cf[i]++;\n                cf[i+k]--;\n                js++;\n            }//\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u4ecd\u7136\u662f0\uff0c\u64cd\u4f5c\u6570\u52a0\u4e00\n        }else{\n            if((a[i]+cf[i])%2==0){\n                return 0x3f3f3f3f;\n            }//\u4e0a\u9762\u8bb2\u7684\u4e0d\u6210\u7acb\u7684\u60c5\u51b5\n        }\n    }\n    return js;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\" %c\",&s);\n        if(s=='B') a[i]=0;\n        else a[i]=1;\n    }\n    int cd=1,cx=n;//cx\u8bb0\u5f55\u6700\u5c0f\u53cd\u8f6c\u6b21\u6570,cd\u8bb0\u5f55\u64cd\u4f5c\u7684\u533a\u95f4\u957f\u5ea6\n    for(int i=1;i<=n;i++){\n        int ans=solve(i);\n        if(ans!=0x3f3f3f3f && ans<cx){\n            cd=i;\n            cx=ans;//\u5982\u679c\u6210\u7acb\uff0c\u66f4\u65b0\n        }\n    }\n    printf(\"%d %d\\n\",cd,cx);\n    return 0;\n}\n```\n",
        "postTime": 1586212355,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]Face The Right Way G\u3011"
    },
    {
        "content": "## \u9898\u76ee\n[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P2882)\n## \u89e3\u8bf4\n\u9898\u76ee\u5927\u81f4\u5c31\u662f\u8bf4\uff0c\u6709n\u5934\u5976\u725b\u6392\u6210\u4e00\u961f\uff0c\u6709\u7684\u8138\u671d\u524d\u6709\u7684\u8138\u671d\u540e\uff0cF\u4ee3\u8868\u524d\uff0cB\u4ee3\u8868\u540e\u3002\u73b0\u5728\u6709\u4e00\u79cd\u64cd\u4f5c\u53ef\u4ee5\u8ba9\u8fde\u7eedK\u5934\u5976\u725b\u540c\u65f6\u53cd\u8f6c\uff0c\u95ee\u81f3\u5c11\u8981\u53cd\u8f6c\u591a\u5c11\u6b21\uff0c\u6b64\u65f6K\u81f3\u5c11\u4e3a\u591a\u5c11\u3002\u5148\u8f93\u51faK\uff0c\u518d\u8f93\u51fa\u6700\u5c0f\u53cd\u8f6c\u6b21\u6570\u3002\n\n\u663e\u7136\u6211\u4eec\u9700\u8981\u4ece1\u5230n\u6328\u4e2a\u5c1d\u8bd5K\u7684\u53ef\u80fd\u53d6\u503c\uff0c\u5e76\u4ece\u4e2d\u9009\u53d6\u6700\u4f18\uff0c\u4e3b\u8981\u95ee\u9898\u5728\u4e8e\u600e\u4e48\u7b97K\u4e00\u5b9a\u65f6\u7684\u6700\u5c0f\u53cd\u8f6c\u6b21\u6570\u5462\uff1f\u81ea\u7136\u60f3\u5230\u904d\u5386\u533a\u95f4\u3002\u4ece[1,k]\u533a\u95f4\u904d\u5386\u5230[n-k+1,n]\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u533a\u95f4\u7684\u7b2c\u4e00\u4e2a\u662f\u53cd\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6574\u4e2a\u533a\u95f4\u53cd\u8f6c\u3002\u5f53\u7136\u6211\u4eec\u4e0d\u53ef\u80fd\u76f4\u63a5\u4fee\u6539\u539f\u6570\u7ec4\u56e0\u4e3a\u540e\u9762\u8fd8\u8981\u7528\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7528\u4e00\u4e2asum\u6807\u8bb0\u524dk-1\u4fee\u6539\u4e86\u591a\u5c11\u6b21\u6765\u786e\u5b9a\u5f53\u524d\u662f\u5426\u9700\u8981\u4fee\u6539\u3002\n\n\uff08\u90e8\u5206\u89e3\u91ca\u653e\u5728\u4e86\u4ee3\u7801\u91cc\uff09\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm> \nusing namespace std;\nconst int maxn=5000+3;\nint a[maxn],n,flag[maxn];\nint solve(int k){\n    int i;\n    memset(flag,0,sizeof(flag));\n    //flag[i]\u8868\u793a\u533a\u95f4[i,i+k-1] \u662f\u5426\u9700\u8981\u7ffb\u8f6c\n    int sum=0,cnt=0;//\u524dk-1\u4e2a\u8f6c\u53d8\u7684\u6b21\u6570\n    for(i=1;i<=n-k+1;i++){\n    //sum\u8bb0\u5f55\u8d70\u5230\u5f53\u524di\uff0c\u5176\u524d\u9762k-1\u4e2a\u7ffb\u8f6c\u4e86\u591a\u5c11\u6b21\n        if(i-k>=1){\n            sum-=flag[i-k];\n        }\n        if(a[i]==0&&sum%2==0){\n        //\u5982\u679c\u662fB \u4e14\u524d\u9762\u7ffb\u8f6c\u4e86\u5076\u6570\u6b21 \u4ecd\u65e7\u9700\u8981\u7ffb\u8f6c\n             flag[i]=1;\n             sum+=flag[i];\n             cnt++;\n        }\n        else if(a[i]==1&&sum%2==1){\n        //\u5982\u679c\u662fF  \u4e14\u524d\u9762\u7ffb\u8f6c\u4e86\u5947\u6570\u6b21\n            flag[i]=1;\n            sum+=flag[i];\n            cnt++;\n        }\n    }\n    for(i;i<=n;i++){\n        if(i-k>=1)\n        {\n            sum-=flag[i-k];\n        }\n        if(sum%2==0&&a[i]==0) return -1;\n        else if(sum%2==1&&a[i]==1) return -1;\n    }\n    return cnt;\n}\nint main(){\n    int k=1,Max;\n    char s[1];\n    scanf(\"%d\",&n);\n    Max=100010000;\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",s);\n        if(s[0]=='B') a[i]=0;\n        else if(s[0]=='F') a[i]=1;\n    }\n    for(int i=1;i<=n;i++){\n        int mid=solve(i);\n        if(mid==-1) continue;\n        if(Max>mid){\n            Max=mid;\n            k=i;\n        }\n    }\n    printf(\"%d %d\",k,Max);\n    return 0;\n}\n```\n\u5e78\u751a\u81f3\u54c9\uff0c\u6b4c\u4ee5\u548f\u5fd7\u3002",
        "postTime": 1586181780,
        "uid": 239287,
        "name": "DarthVictor",
        "ccfLevel": 6,
        "title": "[POJ3276]Face The Right Way"
    },
    {
        "content": "# \u66b4\u529b=\uff08\u524d\u7f00\u548c+\u5dee\u5206+\u679a\u4e3e\uff09\n## \u601d\u8def\u5f88\u7b80\u5355\uff1a\u5982\u679c\u6709\u725b\u53cd\u7740\uff0c\u5c06\u5b83\u4ee5\u53ca\u5b83\u540e\u9762\u7684\u725b\u7ffb\u8f6c\u3002\uff08\u8fd9\u79cd\u505a\u6cd5\u5fc5\u7136\u6700\u4f18\uff09\n### **\u4e0d\u591a\u8bf4\u4e86\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801**\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nchar ch;\nbool cow[5005]; //\u725b\u7684\u539f\u672c\u72b6\u6001\nint f[5005]; // \u524d\u7f00+\u5dee\u5206\nint minn=5005,k; //\nint main() {\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) {\n\t\tcin>>ch;\n\t\tif(ch=='F') {\n\t\t\tcow[i]=1; // \u5c06\u5b57\u6bcd\u8f6c\u6362\u4e3a\u6570\u5b57\u72b6\u6001 \u20180 \u2019\u4e3a \u2018B \u2019 \uff0c\u20181 \u2019\u4e3a \u2018F \u2019\n\t\t}\n\t}\n\tfor(int i=1; i<=n; i++) { // \u679a\u4e3e\u8f6c\u52a8\u725b\u4e2a\u6570\n\t\tmemset(f,0,sizeof(f)); //  \u6e05\u7a7a\u72b6\u6001\n\t\tint ans=0;\n\t\tfor(int j=1; j<=n; j++) { // \u8fd9\u91cc\u4e00\u5b9a\u4e0d\u80fd\u5199 j<n (\u8981\u628a\u6240\u6709\u7684\u725b\u5168\u90e8\u4e3e\u4f8b\u4e00\u904d)\n\t\t\tif(abs((cow[j]+f[j-1]+f[j]))%2==0&&j+i-1<=n) { // -1%2==-1 \u6ce8\u610f \u8fde\u7eed\u7684\u7ffb\u8f6c\u4e0d\u53ef\u4ee5\u7ffb\u7a7a\u6c14\n\t\t\t\tf[j]+=f[j-1]+1; //\n\t\t\t\tf[j+i]-=1;    // \u8fd9\u4e24\u53e5\u662f\u5173\u952e \u5dee\u5206+\u524d\u7f00\u548c\n\t\t\t\tans++;\n\t\t\t} else if(abs((cow[j]+f[j-1]+f[j]))%2==1) {\n\t\t\t\tf[j]+=f[j-1]; //\u4e0d\u7ffb\u8f6c\u4e5f\u8981\u524d\u7f00\u548c\n\t\t\t} else { // \u76f8\u5f53\u4e8e else if(abs((cow[j]+f[j-1]+f[j]))%2==0&&j+i-1>n)\n\t\t\t\tans=99999;  // \u9632\u6b62\u8bfb\u5165\u7b54\u6848\n\t\t\t}\n\t\t}\n\t\tif(minn>=ans) {\n\t\t\tif(minn==ans) {\n\t\t\t\tminn=ans;\n\t\t\t} else { // K\u8981\u53d6\u6700\u5c0f\u503c\n\t\t\t\tminn=ans;\n\t\t\t\tk=i;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<k<<\" \"<<minn;\n    return 0;\n}\n```\n",
        "postTime": 1566193035,
        "uid": 82121,
        "name": "\u738b\u94b0\u7fd4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]\u9762\u5bf9\u6b63\u786e\u7684\u65b9\u5f0fFace The Right Way\u3011"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u7ed9\u51fak\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u5728\u81f3\u591a$O(n^2)$\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u81f3\u5c11\u9700\u8981\u51e0\u6b65\uff08\u6216\u4e0d\u53ef\u80fd\u5168\u90e8\u671d\u524d\uff09\n\n\u8fd9\u91cc\u53ef\u4ee5\u60f3\u5230\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u68c0\u9a8c\u3002\u53ef\u60dc\u8fd9\u4e00\u9898\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u80fd\u679a\u4e3e\u6bcf\u4e2ak\u3002\u4f46\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(n^3)$,\u8dd1\u4e0d\u52a85000.\n\n\u8003\u8651\u4f18\u5316\u68c0\u9a8c\u90e8\u5206\u3002\u5728$O(n^2)$\u7684\u66b4\u529b\u68c0\u9a8c\u4e2d\uff0c\u6bcf\u6b21\u6539\u53d8\u725b$i$\u7684\u65b9\u5411\u9700\u8981\u628a\u5b83\u548c\u5b83\u540e\u9762$k-1$\u5934\u725b\u7684\u65b9\u5411\uff0c\u8fd9\u6837\u662f\u6700\u574f$O(n^2)$.\n\n\u8003\u8651\u5dee\u5206\uff0c\u5373\u6bcf\u6b21\u53ea\u4fee\u6539$i,i+k-1$,\u7136\u540e\u901a\u8fc7\u524d\u7f00\u548c\u6c42\u89e3\u6bcf\u4e00\u4f4d\u662f\u5426\u53cd\u8f6c\u3002\u7531\u4e8e\u53cd\u8f6c\u5947\u6570\u6b21\u4f7f\u65b9\u5411\u76f8\u53cd\uff0c\u5076\u6570\u6b21\u4f7f\u65b9\u5411\u4e0d\u53d8\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5f02\u6216\u3002\u6700\u540e\u7684\u603b\u590d\u6742\u5ea6\u662f$O(n^2)$\n\n\u4ee3\u7801\uff1a\n```cpp\n//Wan Hong 2.2\n//home\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\ntypedef long long ll;\ntypedef std::string str;\n#define INF (1ll<<58)\nll read()\n{\n\tchar c;\n\tll f=1,x=0;\n\tdo\n\t{\n\t\tc=getchar();\n\t\tif(c=='-')f=-1;\n\t}while(c<'0'||c>'9');\n\tdo\n\t{\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}while(c>='0'&&c<='9');\n\treturn f*x;\n}\nll max(ll a,ll b)\n{\n\treturn a>b?a:b;\n}\nll min(ll a,ll b)\n{\n    return a<b?a:b;\n}\n\n/**********/\n#define MAXN 5011\nll a[MAXN],c[MAXN],n;\nll check(ll k)//\u68c0\u9a8ck\uff0c\u8fd4\u56de\u6700\u5c11\u6b65\u6570\uff08INF\u8868\u793a\u4e0d\u53ef\u80fd\u5168\u671d\u524d\uff09\n{\n\tmemset(c,0,sizeof c);\n\tll sum=0,res=0;\n\tfor(ll i=1;i<=n-k+1;++i)\n\t{\n\t\tll x=sum^a[i];\n\t\tif(x)\n\t\t{\n\t\t\t++res;\n\t\t\tc[i]^=1;c[i+k-1]^=1;\n\t\t}\n\t\tsum^=c[i];\n\t}\n\tfor(ll i=n-k+2;i<=n;++i)\n\t{\n\t\tll x=sum^a[i];\n\t\tif(x)return INF;\n\t\tsum^=c[i];\n\t}\n\treturn res;\n}\nint main()\n{\n\tn=read();\n\tfor(ll i=1;i<=n;++i)\n\t{\n\t\tchar c=getchar();\n\t\twhile(c!='B'&&c!='F')c=getchar();\n\t\ta[i]=(c=='B');\n\t}\n\tll t,ans=INF;\n\tfor(ll k=1;k<=n;++k)\n\t{\n\t\tll p=check(k);\n\t\tif(p<ans)\n\t\t{\n\t\t\tt=k;ans=p;\n\t\t}\n\t}\n\tprintf(\"%lld %lld\",t,ans);\n\treturn 0;\n}\n```",
        "postTime": 1563953185,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]\u9762\u5bf9\u6b63\u786e\u7684\u65b9\u5f0fFace The Right Way\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u79cd\u5728USACO\u91cc\u9762\u5341\u5206\u5e38\u89c1\u7684\u63d0\u9192.\n\n\u4e4b\u524d\u5df2\u7ecf\u89c1\u8fc7\u4e09\u56db\u6b21\u4e86.\n\n\u90a3\u4e48\u8fd9\u4e00\u9898\u7684\u64cd\u4f5c\u6709\u4ec0\u4e48\u4e0d\u540c\u70b9\u5462?\n\n\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u4e00\u4e0b, \u540c\u4e00\u4e2a\u5730\u65b9\u53cd\u8f6c\u4e24\u6b21\u5c31\u662fzz\u64cd\u4f5c\u4e86\u5bf9\u5427......\n\n\u90a3\u4e48\u7adf\u7136\u6bcf\u4e00\u4e2a\u5730\u65b9\u53ea\u9700\u8981\u7ffb\u4e00\u6b21, \u90a3\u4e48\u6211\u4eec\u5c31\u8003\u8651\u4ece\u5de6\u5f80\u53f3\u7ffb.\n\n\u90a3\u4e48\u5982\u679c\u4e00\u5f00\u59cb\u90a3\u5934\u725b\u662f\u5411\u540e\u7684, \u90a3\u4e48\u5c31\u7ffb\u6700\u5de6\u9762\u7684\u533a\u95f4, \u4e4b\u540e\u5c31\u4e0d\u518d\u52a8\u5b83.\n\n\u7136\u540e\u540c\u7406\u770b\u7b2c\u4e8c\u5934\u725b......\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u53cd\u8f6c\u957f\u5ea6, \u7136\u540e\u5c31\u53ef\u4ee5\u987a\u5229\u7684AC\u4e86.\n\n\u8fd9\u79cd\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u64cd\u4f5c\u4e00\u6b21\u7684\u9898\u578b\u5728USACO\u4e2d\u662f\u5341\u5206\u5e38\u89c1\u7684, \u601d\u8def\u5c31\u662f\u6309\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u7684\u987a\u5e8f\u53bb\u64cd\u4f5c.\n\n\u6bd4\u5982\u8bf4\u8fd9\u9053\u9898\u7684\u4e8c\u7ef4\u7248\u672c, \u4e00\u6b21\u53cd\u8f6c\u7684\u662f\u5b83\u548c\u5b83\u5468\u56f44\u4e2a\u683c\u5b50\u7684\u503c, \u6211\u4eec\u662f\u679a\u4e3e\u7b2c\u4e00\u884c, \u7136\u540e\u5c31\u518d\u4e5f\u4e0d\u7ffb\u8f6c\u7b2c\u4e00\u884c\u4e86. \u7136\u540e\u6211\u4eec\u5c31\u4e00\u76f4\u5411\u4e0b\u64cd\u4f5c.\n\n\u8fd8\u6709\u53e6\u4e00\u4e2a\u4e00\u5b9a\u662f$4*4$\u7684\u4e8c\u7ef4\u7248\u672c, \u5c31\u662f\u6bcf\u4e00\u6b21\u4f1a\u53cd\u8f6c\u5168\u884c\u4ee5\u53ca\u5168\u5217.\u53d1\u73b0\u6bcf\u4e00\u6b21\u6211\u4eec\u64cd\u4f5c\u65f6\u53cd\u8f6c\u5168\u884c\u5168\u5217\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u9505, \u6211\u4eec\u5c31\u8fd9\u4e48\u505a. \u7136\u540e\u53bb\u9664\u91cd\u590d\u7684\u5c31\u597d\u4e86.\n\n\u653e\u4e00\u4e0b\u8fd9\u9898\u7684\u4ee3\u7801......\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nnamespace fio {\n\tstreambuf* in = cin.rdbuf();\n\tchar bb[1000000], * s = bb, * t = bb;\n#define gc() (s==t&&(t=(s=bb)+in->sgetn(bb,1000000),s==t)?EOF:*s++)\n#define peek() (s==t&&(t=(s=bb)+in->sgetn(bb,1000000),s==t)?EOF:*s)\n\tinline int read() {\n\t\tint x = 0;\n\t\tchar ch = gc();\n\t\twhile (ch < 48)ch = gc();\n\t\twhile (ch >= 48)x = x * 10 + ch - 48, ch = gc();\n\t\treturn x;\n\t}\n}using namespace fio;\nint n, arr[100005];\nint brr[100005], cf[100005];\nint chk(int x) {\n\tmemset(cf, 0, sizeof(cf)), memcpy(brr, arr, sizeof(brr));\n\tint ans = 0;\n\tfor (int i = 1; i <= n - x + 1; i++) {\n\t\tbrr[i] ^= cf[i] ^= cf[i - 1];\n\t\tif (brr[i])ans++, cf[i] ^= 1, cf[i + x] ^= 1;\n\t}\n\tfor (int i = n - x + 2; i <= n; i++) { brr[i] ^= cf[i] ^= cf[i - 1]; if (brr[i])return -1; }\n\treturn ans;\n}\nint minn = 0x7fffffff, ans;\nint main() {\n\tn = read();\n\tfor (int i = 1; i <= n; i++) { while (!isupper(peek()))gc(); arr[i] = (gc()) == 'B'; }\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x = chk(i);\n\t\tif (x != -1 && x < minn)minn = x, ans = i;\n\t}\n\tcout << ans << ' ' << minn;\n}\n```\n",
        "postTime": 1572072543,
        "uid": 38485,
        "name": "Erina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]\u9762\u5bf9\u6b63\u786e\u7684\u65b9\u5f0fFace The Right Way\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,a[10100],ans=100000000,b[10100],m;\nchar x;\nvoid work(int k){\n    int s=0,sum=0;\n    memset(a,0,sizeof(a));\n    for(int i=1;i<=n-k+1;i++){//\u5982\u679c\u53d8\u6362\u4e24\u6b21\uff0c\u5219\u7b49\u4e8e\u6ca1\u6709\u53d8\u6362\n        if(sum%2==1 && b[i]){//\u5224\u65ad\u7b2ci\u4f4d\u662f\u5426\u9700\u8981\u8f6c\u6362\n            a[i]=1;\n            s++;\n        }\n        if(sum%2==0 && (!b[i])){\n            a[i]=1;//\u5982\u679c\u53d8\u6362\uff0c\u6253\u4e0b\u4e00\u4e2a\u6807\u8bb0\n            s++;\n        }\n        sum+=a[i];\n        if(i-k+1>=0)//\u8ba1\u7b97\u6709\u51e0\u6b21\u53d8\u6362\u5f71\u54cd\u5230\u4e86\u4e0b\u4e00\u4f4d\n            sum-=a[i-k+1];\n    }\n    for(int i=n-k+2;i<=n;i++){\n        if((sum%2==1 && b[i]) || (sum%2==0 && (!b[i]))) \n            return;\n        if(i-k+1>=0)\n            sum-=a[i-k+1];\n    }\n    if(ans>s){\n        ans=s;\n        m=k;\n    }\n    return;\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){//\u5c06\u65b9\u5411\u5b58\u4e3a\u6570\u5b57\n        cin>>x;\n        if(x=='F')\n            b[i]=1;\n        else\n            b[i]=0;\n    }\n    for(int i=1;i<=n;i++)//\u679a\u4e3ek\uff0c\u5224\u65ad\u53ef\u884c\u6027\n        work(i);\n    cout<<m<<\" \"<<ans;\n    return 0;\n}\n```",
        "postTime": 1477654478,
        "uid": 11438,
        "name": "zhm411821",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2882 \u3010[USACO07MAR]\u9762\u5bf9\u6b63\u786e\u7684\u65b9\u5f0fFace The Right Way\u3011"
    }
]