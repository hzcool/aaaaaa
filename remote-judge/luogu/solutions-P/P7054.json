[
    {
        "content": "> **\u9898\u610f.**\n>\n> \u7ed9\u5b9a\u4e00\u5f20 $n$ \u70b9 $m$ \u6761\u8fb9\u7684 DAG\uff0c\u4f60\u53ef\u4ee5\u81f3\u591a\u6dfb\u52a0 $k$ \u6761\u6709\u5411\u8fb9\uff0c\u4f7f\u5f97\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a DAG\uff0c\u4f7f\u5f97\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u62d3\u6251\u5e8f\u7684\u5b57\u5178\u5e8f\u5c3d\u91cf\u5927\u3002\n>\n> \u8f93\u51fa\u8fd9\u4e2a\u62d3\u6251\u5e8f\u4ee5\u53ca\u65b9\u6848\u3002\n>\n> $n,m,k\\le 10^5$\u3002\n\n\u554a\u53c8\u662f\u5f00\u95e8\u4e00\u4e2a key obeservation \u7684\u9898\u3002\n\n> **\u5f15\u7406.**\n>\n> \u82e5\u6700\u7ec8\u62d3\u6251\u5e8f\u4e3a $p$\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u65b9\u6848\u6ee1\u8db3\u6240\u6709\u52a0\u7684\u8fb9\u90fd\u5f62\u5982 $p_i\\Rightarrow p_{i+1}$\u3002\n\n> **\u8bc1\u660e.**\n>\n> \u5426\u5219\uff0c\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u628a $p_{i}\\Rightarrow p_j$ \u66ff\u6362\u4e3a $p_{i+1}\\Rightarrow p_j$\u3002\u8bf4\u660e\u5982\u4e0b\u3002\n>\n> \u8bbe\u66ff\u6362\u540e\u7684\u65b0\u6392\u5217\u4e3a $q$\u3002\n>\n> - \u663e\u7136 $p_1=q_1,...,p_i=q_i$\u3002\u8fd9\u90e8\u5206\u7684\u62d3\u6251\u6392\u5e8f\u5b8c\u5168\u548c\u8fd9\u6761\u8fb9\u6ca1\u5173\u7cfb\u3002\n> - \u53c8\u53ef\u4ee5\u53d1\u73b0 $q_{i+1}\\neq p_j$\uff0c\u56e0\u4e3a\u6b64\u65f6\u4ecd\u5b58\u5728 $p_{i+1}\\Rightarrow p_j$\u3002\u5176\u4ed6\u70b9\u7684\u60c5\u51b5\u548c\u8be5\u8fb9\u6362\u4e0d\u6362\u6ca1\u5173\u7cfb\uff0c\u6240\u4ee5 $q_{i+1}=p_{i+1}$\u3002\n> - \u5982\u679c\u518d\u5f80\u540e\uff0c\u90a3\u6240\u6709\u70b9\u7684\u60c5\u51b5\u90fd\u548c\u8be5\u8fb9\u6362\u4e0d\u6362\u6ca1\u5173\u7cfb\u3002\n\n\u73b0\u5728\u6211\u4eec\u9010\u4f4d\u786e\u5b9a $p$\u3002\u5982\u679c $k=0$\uff0c\u90a3\u81ea\u7136\u662f\u6ca1\u620f\u5531\u4e86\uff0c\u76f4\u63a5\u5f00\u59cb\u62d3\u6251\u6392\u5e8f\u5373\u53ef\u3002\n\n\u5426\u5219\uff0c\n\n> \u73b0\u5728\u5c06\u6240\u6709\u5165\u5ea6\u4e3a $0$ \u7684\u8282\u70b9\u53d6\u51fa\uff0c\u8003\u8651\u5176\u4e2d\u7684\u6700\u5c0f\u8005 $u$\uff1a\n>\n> - \u5982\u679c $u$ \u5e76\u975e\u552f\u4e00\u7684\u5165\u5ea6\u4e3a $0$ \u5143\u7d20\uff0c\u90a3\u6211\u4eec\u80af\u5b9a\u4e0d\u5e0c\u671b $u$ \u5f53\u4e0a\u5f53\u524d\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u4e34\u65f6**\u52a0\u4e00\u6761\u8fb9**\u628a $u$ \u653e\u5230\u540e\u9762\u53bb\uff08\u8ba9\u5b83\u7684\u5ea6\u6570\u4e0d\u4e3a $0$\uff09\u3002\n> - - $k\\leftarrow k-1$\uff1b\u663e\u7136\u8fd9\u6761\u8fb9\u8fde\u80af\u5b9a\u662f\u80fd\u8fde\u7684\uff08$u$ \u5e76\u975e\u552f\u4e00\u7684\u5165\u5ea6\u4e3a $0$ \u5143\u7d20\uff09\uff1b\u81f3\u4e8e\u8fd9\u6761\u8fb9\u5230\u5e95\u548c\u8c01\u8fde\uff0c\u6211\u4eec**\u6682\u65f6\u4e0d\u5173\u5fc3**\u3002\u5230\u65f6\u5019\u53ea\u9700\u8981\u5728\u6c42\u51fa $p$ \u4e4b\u540e\u6839\u636e\u4e0a\u9762\u7684\u5f15\u7406\u7f16\u51fa\u6240\u9700\u7684\u8fb9\u5373\u53ef\u3002\n> - \u5982\u679c $u$ \u5c31\u662f\u552f\u4e00\u7684\u5165\u5ea6\u4e3a $0$ \u5143\u7d20\uff0c\u90a3\u4e48\u53ea\u597d\u628a $u$ \u4f5c\u4e3a\u5f53\u524d\u4f4d\u7f6e\uff0c\u5220\u53bb $u$\u3002\n\n\u542c\u8d77\u6765\u5341\u5206\u7f8e\u597d\uff0c\u4f46\u8fd9\u4e2a\u8fc7\u7a0b\u662f**\u660e\u663e\u6709\u95ee\u9898\u7684**\u3002\u8fd9\u4e2a\u95ee\u9898\u4f53\u73b0\u5728\u6700\u540e\u3010\u5220\u53bb $u$\u3011\u5904\uff1a\u6211\u4eec\u6ca1\u6709\u8003\u8651 $u$ \u53ef\u80fd\u8fde\u51fa\u4e86\u4e00\u4e9b**\u65b0\u52a0\u8fb9**\uff0c\u81ea\u7136\u4e5f\u5c31\u6ca1\u6709\u66f4\u65b0\u76ee\u6807\u8282\u70b9\u7684\u5ea6\uff0c\u5b83\u4eec\u5c31\u6c38\u8fdc\u5165\u5ea6\u4e3a $1$ \u4e86\uff01\n\n\u6240\u4ee5\u6211\u4eec\u5e94\u5f53\u7ef4\u62a4\u4e24\u4e2a\u96c6\u5408\uff1a\n\n- \u6240\u6709\u3010\u660e\u663e\u662f\u5165\u5ea6\u4e3a $0$\u3011\u7684\u8282\u70b9\uff1b\n- \u548c\u6240\u6709\u3010\u56e0\u4e3a\u88ab\u4e00\u6761**\u65b0\u52a0\u8fb9**\u8fde\u5165\u800c\u53ef\u80fd\u73b0\u5728\u662f\u5165\u5ea6\u4e3a $0$\u3011\u7684\u8282\u70b9\u3002\n\n\u987a\u4fbf\uff0c\u6211\u4eec\u6307\u51fa\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u3010\u53ef\u80fd\u662f\u5165\u5ea6\u4e3a $0$\u3011\u7684\u8282\u70b9\uff0c\u6211\u4eec\u5728\u4efb\u4f55\u65f6\u523b\u94a6\u5b9a\u5b83\u5165\u5ea6\u4e3a $0$ \u90fd\u662f\u5408\u6cd5\u7684\uff1a\u663e\u7136\u53ea\u8981\u6211\u4eec\u4e0d\u8ba4\u4e3a\u5b83\u5165\u5ea6\u4e3a $0$\uff0c\u5b83\u7684\u540e\u7ee7\u8282\u70b9\u4eec\u5c31\u4e0d\u53ef\u80fd\u88ab\u5904\u7406\uff0c\u4ece\u800c\u4e0d\u4f1a\u8fde\u51fa\u73af\u3002\n\n\u4e0b\u9762\u662f\u4fee\u6b63\u540e\u7684\u6d41\u7a0b\u3002\n\n> \u73b0\u5728\u5c06\u6240\u6709\u5165\u5ea6\u4e3a $0$ \u7684\u8282\u70b9\u53d6\u51fa\uff0c\u8003\u8651\u5176\u4e2d\u7684\u6700\u5c0f\u8005 $u$\uff1a\n>\n> - \u5982\u679c $u$ \u5e76\u975e\u552f\u4e00\u7684\u5165\u5ea6\u4e3a $0$ \u5143\u7d20\uff0c\u90a3\u6211\u4eec\u80af\u5b9a\u4e0d\u5e0c\u671b $u$ \u5f53\u4e0a\u5f53\u524d\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u4e34\u65f6**\u52a0\u4e00\u6761\u8fb9**\u628a $u$ \u653e\u5230\u540e\u9762\u53bb\uff08\u8ba9\u5b83\u7684\u5ea6\u6570\u4e0d\u4e3a $0$\uff09\u3002\n> - - $k\\leftarrow k-1$\uff1b\u663e\u7136\u8fd9\u6761\u8fb9\u8fde\u80af\u5b9a\u662f\u80fd\u8fde\u7684\uff08$u$ \u5e76\u975e\u552f\u4e00\u7684\u5165\u5ea6\u4e3a $0$ \u5143\u7d20\uff09\uff1b\u81f3\u4e8e\u8fd9\u6761\u8fb9\u5230\u5e95\u548c\u8c01\u8fde\uff0c\u6211\u4eec**\u6682\u65f6\u4e0d\u5173\u5fc3**\u3002\u5230\u65f6\u5019\u53ea\u9700\u8981\u5728\u6c42\u51fa $p$ \u4e4b\u540e\u6839\u636e\u4e0a\u9762\u7684\u5f15\u7406\u7f16\u51fa\u6240\u9700\u7684\u8fb9\u5373\u53ef\u3002\n> - \u5982\u679c $u$ \u5c31\u662f\u552f\u4e00\u7684\u5165\u5ea6\u4e3a $0$ \u5143\u7d20\uff1a\n> - - \u90a3\u4e48\u6211\u4eec\u5e94\u5f53\u628a\u3010\u53ef\u80fd\u662f\u5165\u5ea6\u4e3a $0$\u3011\u7684\u8282\u70b9\u4e2d\u7684\u6700\u5927\u8005\u53d6\u51fa\u66ff\u6362\u6389 $u$\u3002\uff08\u5f53\u7136\uff0c\u5982\u679c\u5b83\u6bd4 $u$ \u5c0f\u90a3\u8fd8\u4e0d\u5982\u4e0d\u6362\uff0c\u8fd8\u662f\u628a\u8ba4\u5b9a $u$ \u5c31\u662f\u5f53\u524d\u4f4d\u7f6e\u5e76\u5220\u9664\u5427\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 100005;\n\nint n, K, k;\nvector<int> G[maxn];\nint deg[maxn];\n\npriority_queue<int, vector<int>, greater<int> > U;\npriority_queue<int> V;\n\nvoid del(int u) {\n    for (int v : G[u])\n        if (!(--deg[v])) U.push(v);\n}\nint p[maxn], tot;\nbool qaq[maxn];\n\nint main() {\n    int m;\n    scanf(\"%d%d%d\", &n, &m, &K);\n    while (m--) {\n        int u, v; scanf(\"%d%d\", &u, &v);\n        G[u].push_back(v);\n        deg[v]++;\n    }\n    for (int i = 1; i <= n; i++) if (deg[i] == 0) U.push(i);\n    while (tot != n) {\n        if (U.empty()) {\n            int u = V.top(); V.pop();\n            del(u); p[++tot] = u; continue;\n        }\n        int u = U.top(); U.pop();\n        if (k == K) { del(u); p[++tot] = u; continue; }\n        if (!U.empty()) {\n            k++;\n            qaq[u] = 1;\n            V.push(u);\n            continue;\n        }\n        if (V.empty()) { del(u); p[++tot] = u; continue; }\n        int v = V.top();\n        if (v < u) { del(u); p[++tot] = u; continue; }\n        V.pop(), V.push(u), U.push(v), qaq[u] = 1, k++;\n    }\n    for (int i = 1; i <= n; i++) printf(\"%d \", p[i]); printf(\"\\n\");\n    printf(\"%d\\n\", k);\n    for (int i = 2; i <= n; i++) if (qaq[p[i]]) printf(\"%d %d\\n\", p[i - 1], p[i]);\n}\n```",
        "postTime": 1630027999,
        "uid": 58567,
        "name": "x\u4e49x",
        "ccfLevel": 7,
        "title": "luoguP7054 \u9898\u89e3 - \u3010NWRRC2015\u3011Graph"
    },
    {
        "content": "# \u4e00\u3001\u9898\u76ee\uff1a\n\n[\u6d1b\u8c37\u539f\u9898](https://www.luogu.com.cn/problem/P7054)\n\n[codeforces\u539f\u9898](https://codeforces.com/gym/100801)\n\n# \u4e8c\u3001\u601d\u8def\uff1a\n\n\u4e00\u9053\u53f2\u8bd7\u7ea7\u7684\u601d\u7ef4\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u6765\u8003\u8651\uff0c\u5982\u679c\u6ca1\u6709\u52a0\u8fb9\u64cd\u4f5c\uff0c\u600e\u4e48\u624d\u80fd\u6c42\u51fa\u6765\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u62d3\u6251\u5e8f\uff0c\u65e0\u975e\u5c31\u662f\u5c06\u666e\u901a\u62d3\u6251\u6392\u5e8f\u4e2d\u7684\u961f\u5217\u6362\u6210\u5c0f\u6839\u5806\u3002\n\n\u518d\u6765\u8003\u8651\u52a0\u8fb9\u64cd\u4f5c\u3002\u5bf9\u4e8e\u5f53\u524d\u5c0f\u6839\u5806\u4e2d\u4fdd\u5b58\u7684\u5165\u5ea6\u4e3a 0 \u7684\u70b9\uff0c\u6211\u4eec\u80af\u5b9a\u60f3\u52a0\u4e00\u4e9b**\u6307\u5411\u5b83\u4eec\u7684\u8fb9**\u4ece\u800c\u4e0d\u8ba9\u5b83\u4eec\u51fa\u73b0\u5728\u8fd9\u4e00\u4f4d\uff1b\u53cd\u8fc7\u6765\uff0c\u6211\u4eec\u53c8\u60f3\u5728\u8fd9\u4e00\u4f4d\u653e\u5165\u5c3d\u53ef\u80fd\u5927\u7684\u70b9\u3002\u6240\u4ee5\u53ef\u4ee5\u6709\u4ee5\u4e0b\u7b97\u6cd5\uff1a\n\n\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806 $q$ \u548c\u4e00\u4e2a\u5c0f\u6839\u5806 $p$\u3002$p$ \u7ef4\u62a4\u7684\u662f\u5f53\u524d\u6240\u6709\u5165\u5ea6\u4e3a 0 \u7684\u70b9\uff0c$q$ \u4e2d\u7ef4\u62a4\u7684\u662f\u5df2\u7ecf\u786e\u5b9a\u8981\u8fde\u4e00\u6761**\u6307\u5411\u5b83\u4eec\u7684\u8fb9**\u7684\u90a3\u4e9b\u70b9\u3002\u8bbe $a$ \u4e3a\u6700\u4f18\u62d3\u6251\u5e8f\u7684\u4e0a\u4e00\u4f4d\uff0c$b$ \u4e3a\u6700\u4f18\u62d3\u6251\u5e8f\u7684\u5f53\u524d\u4f4d\uff08\u7b49\u5f85\u88ab\u6c42\u89e3\uff09\u3002\n\n\u5c1d\u8bd5\u5c06 $p$ \u4e2d\u7684\u5143\u7d20\u52a0\u5165\u5230 $q$ \u4e2d\u3002\u5982\u679c $p$ \u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u4e14\u8be5\u5143\u7d20\u8fd8\u6bd4 $q$ \u7684\u5806\u9876\u5927\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e0d\u7528\u6d6a\u8d39\u4e00\u6b21\u52a0\u8fb9\u7684\u673a\u4f1a\uff0c\u76f4\u63a5\u5c06\u8be5\u70b9\u786e\u5b9a\u4e3a $b$\u3002\u5426\u5219\u7684\u8bdd\uff0c\u4f9d\u6b21\u5c06 $p$ \u4e2d\u7684\u5143\u7d20\u63d2\u5165\u5230 $q$ \u5e76\u8ba9 $k\\gets k-1$\uff0c\u76f4\u5230 $p$ \u53d8\u7a7a\u6216\u8005 $k$ \u53d8\u6210 $0$\u3002\n\n\u64cd\u4f5c\u5b8c\u4e00\u8f6e\u540e\uff0c\u5982\u679c $p$ \u4e2d\u8fd8\u6709\u5143\u7d20\uff0c\u8bf4\u660e\u6211\u4eec\u4e0d\u5f97\u4e0d\u5c06 $p$ \u7684\u5806\u9876\u4f5c\u4e3a $b$\u3002\u5426\u5219\u5c31\u53ef\u4ee5\u5c06 $q$ \u7684\u5806\u9876\u4f5c\u4e3a $b$\uff0c\u5e76\u8fde\u4e00\u6761\u65b0\u8fb9 $(a,b)$\u3002\n\n\u6700\u540e\uff0c\u4ee4 $b$ \u7684\u540e\u7ee7\u7684\u5165\u5ea6\u81ea\u51cf 1\u3002\u8981\u662f\u51cf\u4e3a 0\uff0c\u5c31\u52a0\u5165\u5230 $p$ \u4e2d\u3002\n\n# \u4e09\u3001\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <queue>\n\nusing namespace std;\n#define FILEIN(s) freopen(s, \"r\", stdin)\n#define FILEOUT(s) freopen(s, \"w\", stdout)\n#define mem(s, v) memset(s, v, sizeof s)\n\ninline int read(void) {\n    int x = 0, f = 1; char ch = getchar();\n    while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); }\n    while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); }\n    return f * x;\n}\n\nconst int MAXN = 100005;\n\nint n, m, K;\nint in[MAXN], ans[MAXN];\n\nvector<int>linker[MAXN];\nvector<pair<int, int> >add;\n\npriority_queue<int, vector<int>, greater<int> >p;\npriority_queue<int>q;\n\nint main() {\n    FILEIN(\"graph.in\"); FILEOUT(\"graph.out\");\n    n = read(); m = read(); K = read();\n    for (int i = 1; i <= m; ++ i) {\n        int x = read(), y = read();\n        linker[x].push_back(y);\n        ++ in[y];\n    }\n    for (int i = 1; i <= n; ++ i) {\n        if (!in[i]) p.push(i);\n    }\n    int a, b;\n    for (int i = 1; i <= n; ++ i) {\n        while (!p.empty() && K > 0) {\n            int y = -1, x = p.top();\n            if (q.size()) y = q.top();\n            if (x > y && p.size() == 1) break;\n            p.pop(); q.push(x); -- K;\n        }\n        if (!p.empty()) {\n            b = p.top(); p.pop();\n        }\n        else {\n            b = q.top(); q.pop();\n            add.push_back({ a, b });\n        }\n        ans[i] = b;\n        for (auto &y : linker[b]) {\n            -- in[y];\n            if (!in[y]) p.push(y);\n        }\n        a = b;\n    }\n    for (int i = 1; i <= n; ++ i) printf(\"%d \", ans[i]);\n    puts(\"\");\n    printf(\"%d\\n\", (int)add.size());\n    for (auto &p : add)\n        printf(\"%d %d\\n\", p.first, p.second);\n    return 0;\n}\n```\n\n",
        "postTime": 1625373181,
        "uid": 43513,
        "name": "\u5cb8\u82b7\u6c40\u5170",
        "ccfLevel": 8,
        "title": "\u6d1b\u8c37 P7054 [NWRRC2015]Graph \u9898\u89e3"
    }
]