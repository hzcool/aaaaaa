[
    {
        "content": "\u8fd9\u4e2a\u9898\u4e3a\u5565\u5b50dp\u554a\u3002\u3002\u3002\n\n\u5176\u5b9e\u5c31\u662f\u51e0\u4e2a\u6ce2\u5cf0\u6ce2\u8c37 ans+1\u4ec0\u4e48\u7684\u64cd\u4f5c\u81ea\u5df1\u5199\u5427 \u7136\u540e\u6211\u7684\u505a\u6cd5\u662f\u8bb0\u5f55con \u5982\u679c\u5728\u4e0b\u964d\u7a81\u7136\u4e0a\u5347\u4e86\u5c31ans++ \u53cd\u6b63\u540c\u7406\n\n        \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,h[1000005],ans=1;bool con;\nint main()\n{\n    cin>>n;for(int i=1;i<=n;i++) cin>>h[i];\n    if(h[2]>=h[1]) con=1;\n    for(int i=1;i<=n;i++)\n    {\n        if(con==0&&i==n) {ans++;break;}\n        if(con==1) if(h[i+1]<h[i]){ans++;con=0;continue;}\n        if(con==0) if(h[i+1]>h[i]) {ans++;con=1;continue;}\n    }\n    cout<<ans; \n}\n```",
        "postTime": 1500374088,
        "uid": 19600,
        "name": "LittlePrincess",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u9053NOIP\u771f\u9898\uff0c\u8fd9\u9053\u9898\u4e2a\u4eba\u611f\u89c9\u6bd4\u8f83\u6c34\uff0c\u7a0d\u7a0d\u7528\u5230\u4e86DP\u7684\u601d\u60f3\uff1b\n\n\n\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\uff0c\u53d1\u73b0\u4e24\u4e2a\u6761\u4ef6\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a\u6c42\u4e00\u4e2a\u6700\u957f\u5e8f\u5217\uff0c\u4f7f\u5f97\u8be5\u5e8f\u5217\u7684\u4efb\u610f\u4e09\u4e2a\u76f8\u90bb\u5143\u7d20\uff0c\u4e2d\u95f4\u7684\u5143\u7d20\u662f\u4e09\u4e2a\u4e2d\u6700\u5927\u7684\uff0c\u6216\u8005\u6700\u5c0f\u7684\uff1b\n\n\n\u5bf9\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u8fd9\u9053\u9898\u6211\u662f\u7531\u6b64\u60f3\u5230\u6b63\u89e3\u7684\uff1b\n\n\n\u6bd4\u5982\u5143\u7d20d[i]\u548cd[j]\uff0c\u5047\u8bbed[i]>d[j]\u4e14j>i\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u8ba9long\\_[j]=max(long\\_[j],long\\_[i]+1); \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u4e00\u4e0b\uff0c\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u662f\u5728\u5f53\u524d\u8282\u70b9\u524d\u9762\u627e\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u9053\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u6765\u505a\uff0c\u53ea\u662f\u5f53\u524d\u8282\u70b9\u5bfb\u627e\u524d\u9a71\u7684\u8303\u56f4\u662f\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u4e14\u6211\u4eec\u8fd8\u8981\u7528\u540c\u6837\u7684\u65b9\u6cd5\u6c42\u4e00\u4e2a\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u6700\u540e\u53d6max\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u5b8c\u4e86\uff1b\n\n\n\u7ec6\u8282\u5904\u7406\u89c1\u4ee3\u7801\uff1a\n\n\n(\u4ee3\u7801\u4e2d\u7684\u6700\u9ad8\u6700\u4f4e\u5168\u90e8\u662f\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u4e2d\u5fc3\u65f6\u7684\u76f8\u5bf9\u503c)\n\n\n\u6211\u7684\u535a\u5ba2\uff1a  http://blog.csdn.net/pretend\\_fal\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define II int\n#define R register\n#define I 123456\nusing namespace std;\n\n\nII a[I],d_1[I],d_2[I];\n\nII n;\n\n\nint main()\n{\n//  freopen(\"FlowerNOIP2013.in\",\"r\",stdin);\n//  freopen(\"FlowerNOIP2013.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    R II x;\n    for(R II i=1;i<=n;i++) scanf(\"%d\",&x), a[i]=x;\n    d_1[1]=d_2[1]=1;\n    //d_1[]\u4ee3\u8868\u7684\u662f\u5f53\u524d\u5143\u7d20\u662f\u4ee5\u5f53\u524d\u5143\u7d20\u4e3a\u4e2d\u5fc3\u7684\u4e09\u4e2a\u76f8\u90bb\u7684\u5143\u7d20\u4e2d\u6700\u5927\u7684\uff1b\n    //\u540c\u7406\uff0cd_2[]\u4ee3\u8868\u7684\u662f\u5f53\u524d\u5143\u7d20\u662f\u4ee5\u5f53\u524d\u5143\u7d20\u4e3a\u4e2d\u5fc3\u7684\u4e09\u4e2a\u76f8\u90bb\u7684\u5143\u7d20\u4e2d\u6700\u5c0f\u7684\uff1b\n    //\u4f46\u662f\u5f53\u524d\u5143\u7d20\u4e0d\u4e00\u5b9a\u9009\uff0c\u53ef\u80fd\u662f\u7ee7\u627f\u4e0a\u4e00\u4e2a\u5143\u7d20\u7684\u4fe1\u606f\uff1b\n    for(R II i=2;i<=n;i++)\n    {\n        if(a[i]>a[i-1]) d_1[i]=max(d_1[i-1],d_2[i-1]+1), d_2[i]=d_2[i-1];\n        //\u5982\u679c\u5f53\u524d\u5143\u7d20\u5927\u4e8e\u8fd9\u4e2a\u524d\u4e00\u4e2a\u5143\u7d20\uff1b\n        //\u90a3\u4e48\u5f53\u524d\u5143\u7d20\u82e5\u679c\u9009\uff0c\u5219\u662f\u524d\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u6700\u4f4e\u70b9\u65f6\u7684\u957f\u5ea6+1\uff1b\n        //\u5982\u679c\u4e0d\u9009\uff0c\u5c31\u7ee7\u627f\u524d\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u6700\u9ad8\u70b9\uff0c\u7b49\u4ef7\u4e8e\u5f53\u524d\u5143\u7d20\u4f5c\u4e3a\u6700\u9ad8\u70b9\uff1b\n        //\u5f53\u524d\u5143\u7d20\u4f5c\u4e3a\u6700\u4f4e\u70b9\u5c31\u53ea\u80fd\u7ee7\u627f\u524d\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6700\u4f4e\u70b9\uff1b\n            else{\n                if(a[i]<a[i-1]) d_1[i]=d_1[i-1], d_2[i]=max(d_1[i-1]+1,d_2[i-1]);\n                //\u5982\u679c\u5f53\u524d\u5143\u7d20\u5c0f\u4e8e\u524d\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u9053\u7406\u540c\u4e0a\uff0c\u53ea\u662f\u53cd\u8fc7\u6765\uff1b\n                    else d_1[i]=d_1[i-1],   d_2[i]=d_2[i-1];\n                    //\u5982\u679c\u5f53\u524d\u5143\u7d20\u7b49\u4e8e\u524d\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5143\u7d20\u76f4\u63a5\u7ee7\u627f\u524d\u4e00\u4e2a\u5143\u7d20\u7684\u6240\u6709\u4fe1\u606f\uff1b\n                    //\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u70b9\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\uff1b\n            }\n    }\n    R II ans=max(d_1[n],d_2[n]);\n    //\u6211\u4eec\u5728\u6700\u540e\u65f6\u53d6\u4e24\u79cd\u72b6\u6001\u7684\u6700\u5927\u503c\u4f5c\u4e3a\u7b54\u6848\uff1b\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1506083225,
        "uid": 36716,
        "name": "wuzhoupei",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u6b64\u9898\u89e3\u6cd5\u5de7\u5999\n\n\u7528\u5230\u4e86DP\u601d\u60f3\n\n\u901a\u8fc7\u89c2\u5bdf\u9898\u9762\u53ef\u4ee5\u53d1\u73b0\u9012\u63a8\u5173\u7cfb\n\n\u4e8e\u662f\u53ef\u4ee5\u7528\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8bb0\u5f55\u5230i\u4e0b\u964d\u548c\u5230i\u4e0a\u5347\n\n\u5bb9\u6613\u5f97\u51fa\u9012\u63a8\u516c\u5f0f\n\n\n```cpp\nif(a[i]>a[i-1])f[i][0]=f[i-1][1]+1;\nelse f[i][0]=f[i-1][0];\nif(a[i]<a[i-1])f[i][1]=f[i-1][0]+1;\nelse f[i][1]=f[i-1][1];\n```\n\u4ee3\u7801\u541b\u5949\u4e0a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 100010\nint a[N],f[N][2]={0};\nint n,tmp=0;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n    f[1][0]=f[1][1]=1;\n    for(int i=2;i<=n;i++){\n        if(a[i]>a[i-1])f[i][0]=f[i-1][1]+1;\n        else f[i][0]=f[i-1][0];\n        if(a[i]<a[i-1])f[i][1]=f[i-1][0]+1;\n        else f[i][1]=f[i-1][1];\n    }\n    cout<<max(f[n][0],f[n][1]);\n    return 0;\n}\n```",
        "postTime": 1508649565,
        "uid": 32083,
        "name": "dream_maker",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5b9e\u9645\u4e0a\u8981\u6c42\u6ce2\u52a8\u6570\u5217\u7684\u6700\u957f\u957f\u5ea6\uff0c\u4f7f\u7528\u4e86DP\u7684\u601d\u60f3\u3002\n\n\u4e00\u76c6\u82b1\uff0c\u4e0d\u4e0a\u5347\u5373\u4e3a\u4e0b\u964d\uff08\u4e0d\u8003\u8651\u9ad8\u5ea6\u76f8\u540c\u7684\uff09\uff01\n\n\u73b0\u5728\u6211\u4eec\u6765\u60f3\u4e00\u60f3\uff1a\u5047\u8bbe\u6211\u4eec\u4ece\u7b2c\u4e8c\u76c6\u82b1\u5f00\u59cb\u8bfb\u53d6\uff0c\u8bb0\u5f53\u524d\u8bfb\u5230\u8fd9\u76c6\u82b1\u4e3anow\uff0cnow\u524d\u9762\u7684\u4e00\u76c6\u82b1\u4e3apre\uff0c\u82e5\u9ad8\u5ea6now>pre\uff0c\u5219now\u5904\u4e8e\u4e0a\u5347\u72b6\u6001\uff0c\u5c31\u8981\u6c42\u51fa\u7b2c\u4e00\u4e2a\u82b1\u76c6\u5230now\u4e14\u6ce2\u52a8\u4e3a\u4e0a\u5347\u7684\u6700\u4f18\u89e3\uff0c\u5219\u91c7\u53d6\u4ee5\u4e0b\u7b56\u7565\uff1a\n\n\u4ece\uff08\u539f\u6765\u6c42\u51fa\u7684\u6700\u540e\u6ce2\u52a8\u4e3a\u4e0a\u5347\u7684\u6700\u4f18\u89e3\uff09\u548c\uff08\u6700\u540e\u6ce2\u52a8\u4e3a\u4e0b\u964d\u7684\u6700\u4f18\u89e3+1\uff08\u5373\u4e0d\u79fb\u8d70\uff09\uff09\u4e24\u8005\u4e2d\u9009\u53d6\u6700\u4f18\u503c\uff1a**r=max(r,d+1)**\n\n\u53cd\u4e4b\uff0c\u5bf9\u4e8enow\u5904\u4e8e\u4e0b\u964d\u72b6\u6001\u7684\uff0c\u6709\uff1a**d=max(d,r+1)**\n\n```c\n#include <stdio.h>\nint max(int a,int b)//\u8fd4\u56dea\u4e0eb\u7684\u8f83\u5927\u503c \n{\n\treturn a>b?a:b;\n}\nint main()\n{\n\tint n,pre,now,r=1,d=1;\n\tint i;\n\tscanf(\"%d%d\",&n,&pre);\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&now);//\u8bfb\u5165\u5f53\u524d\u8fd9\u76c6\u82b1 \n        if(now>pre) r=max(r,d+1); \n        if(now<pre) d=max(d,r+1);\n        pre=now;//\u66f4\u65b0 \n\t}\n\tprintf(\"%d\\n\",max(r,d));\n\treturn 0;\n}\n```",
        "postTime": 1541233012,
        "uid": 5070,
        "name": "pkfbc2014",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u3010\u80cc\u666f\u3011 \u4f5c\u4e3a\u5f80\u5e74\u7684noip\u9898\uff0c\u6211\u66fe\u7ecf\u5f53\u4f5cdp\u9898\u5199\u8fc7\uff0c\u65f6\u95f4\u6bd4\u8f83\u5403\u7d27\u3002\n\n\u4f46\u662f\u6211\u6700\u8fd1\u505a\u7684\u4e00\u5957\u6a21\u62df\u9898\u91cc\u6709\u8fd9\u9053\u9898\u7684\u5f3a\u5316\uff08\u6570\u636e\u5f3a\u5316\u4e3a10000000\uff0c\u65f6\u95f4\u53d8\u4e3a2\u79d2\uff09\uff0c\u6240\u4ee5\u4e0d\u5f97\u4e0d\u601d\u8003\u8d2a\u5fc3\u505a\u6cd5\uff08\u8981\u7528\u8bfb\u5165\u4f18\u5316\uff09\u3002\n\n\u3010\u89e3\u6cd5\u3011 \u8d2a\u5fc3\u505a\u6cd5\u5176\u5b9e\u4e0d\u662f\u592a\u96be\u60f3\u3002\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u6ce2\u6d6a\u5e8f\u5217\uff08\u6bcf\u4e00\u76c6\u82b1\u90fd\u662f\u6ce2\u5cf0\u6216\u6ce2\u8c37\uff09\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u76c6\u82b1\uff0c\u4e0d\u8bba\u5982\u4f55\u90fd\u8981\u9009\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u9009\uff0c\u7b2c\u4e8c\u76c6\u82b1\u5c31\u76f8\u5f53\u4e8e\u7b2c\u4e00\u76c6\uff0c\u800c\u82b1\u7684\u603b\u6570\u5374\u51cf\u5c11\u4e86\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u4f18\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u76c6\u82b1\uff0c\u5982\u679c\u548c\u7b2c\u4e00\u76c6\u7b49\u9ad8\uff0c\u5c31\u6ca1\u6709\u7528\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e0d\u9009\uff08\u8fd9\u65f6\u5019\u8fd8\u662f\u627e\u7b2c\u4e8c\u76c6\uff09\uff1b\u5982\u679c\u6bd4\u7b2c\u4e00\u76c6\u9ad8\uff0c\u90a3\u4e48\u5b83\u5c31\u4e00\u5b9a\u8981\u4f5c\u4e3a\u6ce2\u5cf0\uff08\u5982\u679c\u4f5c\u4e3a\u6ce2\u8c37\u5219\u7b49\u540c\u4e8e\u7b2c\u4e00\u76c6\u6ca1\u9009\uff09\uff1b\u540c\u7406\u5982\u679c\u6bd4\u7b2c\u4e00\u76c6\u4f4e\u5c31\u4e00\u5b9a\u662f\u6ce2\u8c37\u3002\n\n\u5bf9\u4e8e\u540e\u9762\u7684\u82b1\uff0c\u5982\u679c\u627e\u6ce2\u5cf0\uff0c\u5982\u679c\u5f53\u524d\u82b1\u6bd4\u4e0a\u4e00\u76c6\u9ad8\uff0c\u90a3\u4e48\u6ce2\u5cf0\u5c31\u627e\u5230\u4e86\uff0c\u63a5\u4e0b\u6765\u627e\u6ce2\u8c37\uff1b\u5982\u679c\u4e0d\u5982\u4e0a\u4e00\u76c6\u9ad8\uff0c\u90a3\u4e48\u7528\u8fd9\u76c6\u66f4\u4f4e\u7684\u82b1\u7ee7\u7eed\u627e\u6ce2\u5cf0\u7ed3\u679c\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u5dee\u3002\u627e\u6ce2\u8c37\u540c\u7406\u3002\n\n\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u7559\u4e0b\u591a\u5c11\u82b1\u5373\u53ef\u3002\n\n\u7ed3\u5408\u4ee3\u7801\u601d\u8003\u4e00\u4e0b\u3002\n\n\u3010\u4ee3\u7801\u3011\uff08\u770b\u4e0d\u61c2\u53ef\u4ee5\u79c1\u4fe1\u6211\uff09\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nbool flag1,flag2;//flag1:\u662f\u5426\u627e\u5230\u7b2c\u4e8c\u76c6\u82b1;flag2:\u5f53\u524d\u627e\u6ce2\u5cf0\u8fd8\u662f\u6ce2\u8c37\uff0c1:\u627e\u6ce2\u5cf0; 0:\u627e\u6ce2\u8c37 \nint n,lst,h,ans;//h:\u5f53\u524d\u82b1\u9ad8\u5ea6;lst:\u4e0a\u4e00\u76c6\u82b1\u9ad8\u5ea6;ans:\u7b54\u6848 \ninline int red()\n{\n    int X=0,w=1;\n    char ch=0;\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')\n        {\n            w=-1;\n        }\n        ch=getchar();\n    }\n    while(ch<='9'&&ch>='0')\n    {\n        X=(X<<3)+(X<<1)+ch-'0';\n        ch=getchar();\n    }\n    return X*w;\n}\nint main()\n{\n//    freopen(\"flower.in\",\"r\",stdin);freopen(\"flower.out\",\"w\",stdout);\n    n=red();\n    int i=0;\n    for(i=1;i<=n;i++)\n    {\n        h=red();\n        if(i==1)\n        {\n            lst=h;\n            ans++;\n        }\n        else if(!flag1)//\u5982\u679c\u6ca1\u627e\u5230\u7b2c\u4e8c\u76c6\u82b1 \n        {\n            if(h>lst)\n            {\n                ans++;\n                flag1=1;//\u8868\u793a\u5df2\u7ecf\u627e\u5230\u7b2c\u4e8c\u76c6\u82b1 \n                lst=h;\n            }\n            else if(h<lst)\n            {\n                ans++;\n                flag1=1;//\u8868\u793a\u5df2\u7ecf\u627e\u5230\u7b2c\u4e8c\u76c6\u82b1\n                flag2=1;\n                lst=h;\n            }\n        }\n        else\n        {\n            if(flag2==0)\n            {\n                if(h<lst)\n                {\n                    ans++;\n                    flag2=1;//\u5df2\u627e\u5230\u6ce2\u8c37\uff0c\u63a5\u4e0b\u6765\u627e\u6ce2\u5cf0 \n                }\n                lst=h;\n            }\n            else\n            {\n                if(h>lst)\n                {\n                    ans++;\n                    flag2=0;//\u5df2\u627e\u5230\u6ce2\u5cf0\uff0c\u63a5\u4e0b\u6765\u627e\u6ce2\u53e4 \n                }\n                lst=h;\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1509629209,
        "uid": 62691,
        "name": "_King__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "XJB\u4e71\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u7b2c\u4e00\u4e2a\u4e00\u5b9a\u9009\u3002\n\n\u63a5\u7740\u7b2c\u4e8c\u4e2a\u53ea\u8981\u548c\u7b2c\u4e00\u4e2a\u4e0d\u4e00\u6837\u5c31\u4e0d\u9009\u3002\n\n\u63a5\u4e0b\u6765\u6bcf\u4e00\u4e2a\uff1a\u5982\u679c\u548c\u524d\u4e00\u4e2a\u65b9\u5411\u4e0d\u4e00\u6837\u5c31\u9009\uff0c\u5426\u5219\u7528\u5b83\u66ff\u4ee3\u524d\u4e00\u4e2a\uff08\u8fd9\u6837\u66f4\u5bb9\u6613\u627e\u5230\u65b9\u5411\u4e0d\u4e00\u6837\u7684\u3002\uff09\n\n\u5c31\u884c\u4e86\u3002\n\n[\u4ee3\u7801](https://paste.ubuntu.com/25387832/)\n\n\u4fdd\u8bc1\u76f4\u63a5\u7c98\u4f1aCE\uff0c\u8bf7\u52ff\u5c1d\u8bd5\uff08\u5feb\u8bfb\u88ab\u6211\u5403\u4e86\uff09\n",
        "postTime": 1503645407,
        "uid": 8943,
        "name": "\u8001K",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u7ebf\u6027\u7684\u8d2a\u5fc3\u505a\u6cd5\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u95ee\u9898\uff0c\u6d1b\u8c37\u5b8c\u5168\u80fdac\uff0c\u6b22\u8fce\u6765hack\u6211\u7684\u4ee3\u7801\u3002\n\n\u8fd9\u9898\u663e\u7136\u662f\u6c42\u4e00\u4e2a\u6700\u957f\u6ce2\u6d6a\u578b\u7684\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c**\u4e00\u4e2a\u8fde\u7eed\u7684\u4e0a\u5347\u6216\u4e0b\u964d\u5e8f\u5217\u4e2d\uff0c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u80fd\u88ab\u9009\u5165\u6700\u7ec8\u7684\u5b50\u5e8f\u5217\u4e2d**\uff0c\u4e0d\u7136\u5c31\u4e0d\u6ee1\u8db3\u6ce2\u6d6a\u7684\u9700\u6c42\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u8fde\u7eed\u7684\u4e0a\u5347\u4e0e\u4e0b\u964d\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u7b49\u4e8e\u7edf\u8ba1\u6570+1\u3002\n\n\u53e6\u5916\uff0c\u56e0\u4e3a\u662f\u8981\u6c42\u4e25\u683c\u6ce2\u6d6a\uff0c\u6240\u4ee5\u5bf9\u4e8e\u76f8\u7b49\u7684\u8fde\u7eed\u5e8f\u5217\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\uff0c\u76f8\u5f53\u4e8e\u53ea\u6709\u4e00\u4e2a\u70b9\u3002\n\n\u9644\u4e0a\u7b80\u77ed\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#include<queue>\n#define RG register\n#define N 100100\n#define ll long long\n#define ld long double\nusing namespace std;\n\ninline ll read(){\n  RG ll x=0,o=1; RG char ch=getchar();\n  while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n  if(ch=='-') o=-1,ch=getchar();\n  while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n  return x*o;\n}\n\nint main(){\n    int n=read(),las=read(),op=0,ans=0;\n    //\u5148\u5904\u7406\u4e00\u4e2a\u70b9\u9632\u70b8\u88c2\uff0c\u4e0d\u8fc7\u6700\u597d\u7279\u5224\u4e0bn=1\n    //op\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u5355\u8c03\u5e8f\u5217\u7684\u79cd\u7c7b 1\u662f\u4e0a\u5347 2\u662f\u4e0b\u964d\n    //las\u4e3a\u4e0a\u4e00\u4e2a\u9ad8\u5ea6\n    for(RG int i=2;i<=n;++i){\n        int x=read();\n        if(x==las) continue ;\n        //\u82e5\u4e0d\u6ee1\u8db3\u4e0a\u4e00\u4e2a\u5e8f\u5217\u5355\u8c03\u6027\n        if(op!=1&&x>las) ++ans,op=1;\n        else if(op!=2&&x<las) ++ans,op=2;\n        las=x; \n    } cout<<ans+1;\n}\n\n```",
        "postTime": 1522157165,
        "uid": 66636,
        "name": "mona",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "### \u3010\u524d\u8a00\u3011 \n\n\u672c\u849f\u84bb\u4e0d\u592a\u4f1a\u8d2a\u5fc3\uff08\u90a3\u4e9b\u8bc1\u660e\u8868\u793a\u641e\u4e0d\u6e05\uff09\uff0c\u6240\u4ee5\u6211\u7528DP+\u7ebf\u6bb5\u6811\u4f18\u5316A\u4e86\u6b64\u9898\u3002  \n\n### \u3010\u6b63\u6587\u3011\n\n\u9996\u5148$\\Theta(n^2)$\u7684DP\u6bd4\u8f83\u597d\u60f3\u3002\u6211\u4eec\u7528`dp[i][0]`\u8868\u793a\u5230\u7b2ci\u4f4d\uff0c\u6ee1\u8db3\u5f53\u524d\u6761\u4ef6\uff0c\u4e14\u7b97\u4e0a\u7b2ci\u4f4d\u5e8f\u5217\u957f\u5ea6\u4e3a\u5076\u6570\u4e2a\u7684\u6700\u5927\u4e2a\u6570\uff1b`dp[i][1]`\u8868\u793a\u5230\u7b2ci\u4f4d\uff0c\u6ee1\u8db3\u5f53\u524d\u6761\u4ef6\uff0c\u4e14\u7b97\u4e0a\u7b2ci\u4f4d\u5e8f\u5217\u957f\u5ea6\u4e3a\u5947\u6570\u4e2a\u7684\u6700\u5927\u4e2a\u6570\u3002\n\n\u5047\u8bbe\u6211\u4eec\u8981\u6ee1\u8db3A\u6761\u4ef6\uff0c\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n`if (a[i]>a[j]) dp[i][0]=max(dp[i][0],dp[j][1]+1);`\n\n`if (a[i]<a[j]) dp[i][1]=max(dp[i][1],dp[j][0]+1);`\n\n\u8981\u6ee1\u8db3B\u6761\u4ef6\u540c\u7406\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n### \u3010\u4ee3\u7801\u3011\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,ans,a[100010],dp[100010][2];\nint main() {\n\tscanf(\"%d\",&n);\n\tfor (int i=1; i<=n; i++) scanf(\"%d\",&a[i]);\n\tmemset(dp,0,sizeof(dp));\n\tfor (int i=1; i<=n; i++) {\n\t\tdp[i][1]=1;//\u521d\u59cb\u5316\uff0c\u5355\u72ec\u4e00\u4e2a\u6570\u6ee1\u8db3\u4e24\u79cd\u5e8f\u5217\u3002\n\t\tfor (int j=i-1; j>=1; j--) \n\t\t\tif (a[i]>a[j]) dp[i][0]=max(dp[i][0],dp[j][1]+1);\n\t\t\telse\n\t\t\tif (a[i]<a[j]) dp[i][1]=max(dp[i][1],dp[j][0]+1);\n\t\tans=max(ans,max(dp[i][0],dp[i][1]));\n\t}//\u6ee1\u8db3A\u6761\u4ef6\n\tmemset(dp,0,sizeof(dp));\n\tfor (int i=1; i<=n; i++) {\n\t\tdp[i][1]=1;//\u521d\u59cb\u5316\uff0c\u5355\u72ec\u4e00\u4e2a\u6570\u6ee1\u8db3\u4e24\u79cd\u5e8f\u5217\u3002\n\t\tfor (int j=i-1; j>=1; j--) \n\t\t\tif (a[i]<a[j]) dp[i][0]=max(dp[i][0],dp[j][1]+1);\n\t\t\telse\n\t\t\tif (a[i]>a[j]) dp[i][1]=max(dp[i][1],dp[j][0]+1);\n\t\tans=max(ans,max(dp[i][0],dp[i][1]));\n\t}//\u6ee1\u8db3B\u6761\u4ef6\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u5f88\u9057\u61be\u6211\u4eec\u4f1a\u83b7\u5f97\u8d85\u65f6\u7684\u201c\u597d\u6210\u7ee9\u201d\u3002\u8003\u8651\u4f18\u5316\uff0c`a[i]<a[j]`\u548c`a[i]>a[j]`\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u6765\u4f18\u5316\u3002\u5148\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u6bd5\u7adf`n`\u6bd4`a[i]`\u8981\u5c0f\u4e00\u4e9b\u3002\n\n\u5728\u8fd9\u4ee5\u540e\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u6ee1\u8db3A\u6761\u4ef6\uff0c\u90a3\u4e48\u6bcf\u6b21\u66f4\u65b0`dp[i][0]`\u65f6\u5c31\u5728\u533a\u95f4`1~a[i]-1`\u91cc\u627e\u4e00\u4e2a\u6700\u5927\u7684`dp[j][1]`\uff1b\u66f4\u65b0`dp[i][1]`\u65f6\u5c31\u5728\u533a\u95f4`a[i]+1~n`\u91cc\u627e\u4e00\u4e2a\u6700\u5927\u7684`dp[j][0]`\u3002\u806a\u660e\u7684\u4f60\u662f\u4e0d\u662f\u5df2\u7ecf\u9886\u609f\u5230\u6211\u4eec\u5e94\u8be5\u8981\u7ef4\u62a4\u4e24\u68f5\u7ebf\u6bb5\u6811\u5462\uff1f\u4e00\u68f5\u4e3a`dp[j][0]`\uff0c\u4e00\u68f5\u4e3a`dp[j][1]`\u3002\n\n### \u3010AC\u4ee3\u7801\u3011\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,ans,a[100010],b[100010],dp[100010][2];\nint sum[400010][2];\nint find(int val) {\n\treturn lower_bound(b+1,b+1+n,val)-b;\n}\nvoid pushup(int u,int t) {\n\tsum[u][t]=max(sum[u<<1][t],sum[u<<1|1][t]);\n}\nvoid change(int u,int t,int l,int r,int pos,int k) {\n\tif (l==r) {\n\t\tsum[u][t]=max(sum[u][t],k);\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif (pos<=mid) change(u<<1,t,l,mid,pos,k);\n\tif (mid<pos) change(u<<1|1,t,mid+1,r,pos,k);\n\tpushup(u,t);\n}\nint query(int u,int t,int l,int r,int ll,int rr) {\n\tif (ll<=l && r<=rr) return sum[u][t];\n\tint ans=-2019201920;\n\tint mid=(l+r)/2;\n\tif (ll<=mid) ans=max(ans,query(u<<1,t,l,mid,ll,rr));\n\tif (mid<rr) ans=max(ans,query(u<<1|1,t,mid+1,r,ll,rr));\n\treturn ans;\n}\nvoid build(int u,int t,int l,int r) {\n\tif (l==r) {\n\t\tsum[u][t]=-2019201920;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(u<<1,t,l,mid);\n\tbuild(u<<1|1,t,mid+1,r);\n\tpushup(u,t);\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor (int i=1; i<=n; i++) scanf(\"%d\",&a[i]),b[i]=a[i];\n\tsort(b+1,b+1+n);\n\tfor (int i=1; i<=n; i++) a[i]=find(a[i]);//\u79bb\u6563\u5316\n\tbuild(1,0,1,n);build(1,1,1,n);\n\tmemset(dp,0,sizeof(dp));\n\tfor (int i=1; i<=n; i++) {\n\t\tdp[i][1]=1;dp[i][0]=0;\n\t\tif (a[i]>1) dp[i][0]=max(0,query(1,1,1,n,1,a[i]-1)+1);//\u6ce8\u610f\u533a\u95f4\u662f\u5426\u5b58\u5728\u7684\u5224\u65ad\n\t\tif (a[i]<n) dp[i][1]=max(1,query(1,0,1,n,a[i]+1,n)+1);//\u6ce8\u610f\u533a\u95f4\u662f\u5426\u5b58\u5728\u7684\u5224\u65ad\n\t\tans=max(ans,max(dp[i][0],dp[i][1]));\n\t\tchange(1,0,1,n,a[i],dp[i][0]);\n\t\tchange(1,1,1,n,a[i],dp[i][1]);\n\t}//\u6ee1\u8db3A\u6761\u4ef6\n\tbuild(1,0,1,n);build(1,1,1,n);\n\tmemset(dp,0,sizeof(dp));//\u4e0d\u8981\u5fd8\u8bb0\u6e05\u7a7a\n\tfor (int i=1; i<=n; i++) {\n\t\tdp[i][1]=1;dp[i][0]=0;\n\t\tif (a[i]<n) dp[i][0]=max(0,query(1,1,1,n,a[i]+1,n)+1);//\u6ce8\u610f\u533a\u95f4\u662f\u5426\u5b58\u5728\u7684\u5224\u65ad\n\t\tif (a[i]>1) dp[i][1]=max(1,query(1,0,1,n,1,a[i]-1)+1);//\u6ce8\u610f\u533a\u95f4\u662f\u5426\u5b58\u5728\u7684\u5224\u65ad\n\t\tans=max(ans,max(dp[i][0],dp[i][1]));\n\t\tchange(1,0,1,n,a[i],dp[i][0]);\n\t\tchange(1,1,1,n,a[i],dp[i][1]);\n\t}//\u6ee1\u8db3B\u6761\u4ef6\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u563b\u563b\u563b\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730A\u6389\u6b64\u9898\u5566\\~\\~\\~\n\n### \u3010\u603b\u7ed3\u3011\n\n\u7ebf\u6bb5\u6811\u771f\u7684\u662f\u4e00\u79cd\u7070\u5e38\u597d\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8bf7\u591a\u591a\u98df\u7528\\~\\~\\~\u8fd9\u662f\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u4e0d\u559c\u52ff\u55b7\u54e6\uff01\n\n\u795d\u5927\u5bb6RP\\+\\+\uff01\n\n",
        "postTime": 1564109775,
        "uid": 20336,
        "name": "RARELY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "## \u7b2c\u4e00\u79cd\u89e3\u6cd5\u2014\u2014\u5de7\u5999\u7684DP\u5927\u6cd5\n--------------\n**\u901a\u8fc7\u89c2\u5bdf\u9898\u9762\u53ef\u4ee5\u53d1\u73b0\u9012\u63a8\u5173\u7cfb**\n\n\u4e8e\u662f\u53ef\u4ee5\u7528\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8bb0\u5f55\u5230i\u4e0b\u964d\u548c\u5230i\u4e0a\u5347\n\n\u5bb9\u6613\u5f97\u51fa\u9012\u63a8\u516c\u5f0f\n\n```cpp\nif(a[i]>a[i-1])f[i][0]=f[i-1][1]+1;\nelse f[i][0]=f[i-1][0];\nif(a[i]<a[i-1])f[i][1]=f[i-1][0]+1;\nelse f[i][1]=f[i-1][1];\n```\n### \u4ee3\u7801\u541b\u5949\u4e0a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 100010\nint a[N],f[N][2]={0};\nint n,tmp=0;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n    f[1][0]=f[1][1]=1;\n    for(int i=2;i<=n;i++){\n        if(a[i]>a[i-1])f[i][0]=f[i-1][1]+1;\n        else f[i][0]=f[i-1][0];\n        if(a[i]<a[i-1])f[i][1]=f[i-1][0]+1;\n        else f[i][1]=f[i-1][1];\n    }\n    cout<<max(f[n][0],f[n][1]);\n    return 0;\n}\n```\n\n\u7b2c\u4e8c\u79cd\u89e3\u6cd5\u2014\u2014\u66f4\u5de7\u5999\u7684\u8d2a\u5fc3\uff08Orz\uff09\u00a0\n-------\n-------\n\n\n### \u5047\u8bbe\u6709N\u6735\u82b1\n\n\u5927\u81f4\u6839\u636e\u6211\u4eec\u5b66\u8fc7\u7684\u51fd\u6570\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c**\u5b58\u5728m\u4e2ag(2i)\u70b9\u5728\u6ce2\u5cf0\u6216\u6ce2\u8c37\u4e0a\u3002**\n\n\u56e0\u4e3a\u5728\u6ce2\u5cf0\u5230\u6ce2\u8c37\u6216\u8005\u4ece\u6ce2\u8c37\u5230\u6ce2\u5cf0\u4e0a\u7684\u70b9\u5355\u8c03\uff0c\u6240\u4ee5\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u51b3\u5b9a\u820d\u53bb\u8fd9\u4e9b\u70b9\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4ec0\u4e48\u6837\u7684\u70b9\u7559\u4e0b\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6\u90a3\u4e9b\u6ce2\u5cf0\u548c\u6ce2\u8c37\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6253\u6807\u8bb0\uff0c\u7528flag\u8868\u793a\u3002\u518d\u5b9a\u4e49\u4e00\u4e2a\u8ba1\u6570\u7684ans\u3002\n\n\u6211\u4eec\u9996\u5148\u80af\u5b9a\u8981\u53d61\u70b9\uff0c\u5e76\u4e141\u70b9\u80af\u5b9a\u662f\u4e00\u4e2a\u6ce2\u5cf0\u6216\u6ce2\u8c37\uff08\u8fd9\u4e2a\u5f88\u91cd\u8981\uff09\n\n\u6240\u4ee5\u6211\u4eec\u5148\u5224\u65ad\u4e00\u4e0b**hi[1]\u548chi[2]\u7684\u5173\u7cfb\uff08hi [ ]\u8868\u793a\u9ad8\u5ea6\uff09**\n\n\u5982\u679chi[1]<hi[2] \u00a0\u8bf4\u660e1\u662f\u6ce2\u8c37\uff0c\u90a3\u4e48\u6211\u4eec\u6807\u8bb0flag=-1\n\n\u5982\u679chi[1]>hi[2] \u8bf4\u660e1\u662f\u6ce2\u5cf0\uff0c\u90a3\u4e48\u6211\u4eec\u6807\u8bb0flag=1\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426hi[i]\u4e58\u4ee5flag > h[i+1]\u4e58\u4ee5flag \n\n\u5982\u679c\u662f\u7684\u8bdd \uff0c\u90a3\u4e48ans++; \n\n\u5426\u5219\u8bf4\u660e\u72b6\u6001\u6539\u53d8\u4e86\uff0c\u90a3\u4e48\u5c31\u8ba9\u6807\u8bb0flag*=-1\n\n\u901a\u8fc7\u4e00\u4e2afor\u5faa\u73af\uff0c\u6211\u4eec\u5c31\u6c42\u51fa\u4e86ans\u7684\u503c\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8f93\u51fa\uff1a\uff08N-ans\uff09\n\n\n\u597d\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u4ee3\u7801\uff08\u65f6\u95f4\u590d\u6742\u5ea6O(N)\uff09\n```cpp\n#include <iostream>\nusing namespace std;\nint main()\n{\n\tint N;\n\tint hi[1000001]={0};\n\tint ans=0;\n\tcin>>N;\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tcin>>hi[i];\n\t}\n\tint flag;\n\tif(hi[1]>hi[2]) flag=1;\n\telse flag=-1;\n\tfor(int i=2;i<=N-1;i++)\n\t{\n\tif(hi[i]*flag>=hi[i+1]*flag) ans++;\n\telse flag*=-1; }\n\tcout<<N-ans;\n}\n```",
        "postTime": 1550411045,
        "uid": 61112,
        "name": "Michigan_King",
        "ccfLevel": 4,
        "title": "P1970 \u82b1\u5320 \u9898\u89e3"
    },
    {
        "content": "\u55ef\u2026\u2026\u5176\u5b9e\u6211\u4e0d\u4f1a\u6b63\u89e3\uff0c\u4e25\u683c\u6765\u8bb2\u6211\u53ea\u4f1a70\u5206dp\uff0c\u5269\u4e0b\u768430\u5206\u662f\u9a97\u51fa\u6765\u7684\n\n\u597d\u5427\u8fd9\u9053\u9898\u6211\u786e\u5b9e\u6709\u70b9\u201c\u9762\u5411\u6570\u636e\u7f16\u7a0b\u201d\u4e86\n\n70\u5206dp\u7684\u539f\u7406\u5f88\u7b80\u5355\uff0c\u89c4\u5b9adp[i][1]\u6216\u8005dp[i][0]\uff08\\_1\u8868\u793a\u8be5\u627e\u4e0b\u964d\u7684\u82b1\u6735\u4e86\uff0c0\u8868\u793a\u8be5\u627e\u4e0a\u5347\u7684\u82b1\u6735\u4e86\\_\uff09\u662f**\u4ee5i\u4e3a\u7ed3\u5c3e\u7684**\uff0c\u5e94\u8be5\u5bfb\u627e\u4e0a\u5347\u6216\u8005\u4e0b\u964d\u7684\u82b1\u6735\u7684\u65f6\u5019\u6700\u5927\u80fd\u4fdd\u7559\u7684\u82b1\u6735\u6570\u3002\n\n\u4ee5dp[i][0]\u4e3a\u4f8b\uff0c\u5bfb\u627e\u4e0a\u5347\u82b1\u6735\u7684\u524d\u4e00\u6b65\u5e94\u8be5\u662f\u5bfb\u627e\u7684\u4e0b\u964d\u7684\u82b1\u6735\uff0c\u56e0\u4e3a\u6b63\u89e3\u6709\u70b9\u7c7b\u4f3c\u4e8e\u6ce2\u6d6a\u561b\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u5e94\u8be5\u662f\u5bfb\u627e\u524d\u9762\u7684\u4e0b\u964d\u7684\u82b1\u6735\uff0c\u540c\u65f6\u4e00\u4e2a\u72b6\u6001\u53ef\u80fd\u7531\u591a\u79cd\u72b6\u6001\u8f6c\u8bd1\u800c\u6765\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u503c\u6bd4\u8f83\u597d\uff08\u4fdd\u9669\u8d77\u89c1\u561b~\uff09\n\ndp[i][0]=max(dp[i][1]+1,dp[i][0]);\n\ndp[i][1]=max(dp[i][0]+1,dp[i][1]);\n\n\u6211\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u7ef4\u62a4\u4e86\u4e00\u4e2aans\u503c\uff0c\u56e0\u4e3a\u6b63\u89e3\u4e0d\u4e00\u5b9a\u662f\u4ee5\u6700\u540e\u4e00\u6735\u82b1\u7ed3\u5c3e\u7684\uff0c\u8fd9\u70b9\u8981\u6ce8\u610f\u3002\n\n\u8fd8\u6709\u5c31\u662f\u8f6c\u79fb\u65b9\u7a0b\u7684\u65f6\u5019\u4e00\u5b9a\u8bb0\u5f97\u52a0\u4e00\uff0c\u8981\u4e0d\u7136\u534a\u5929\u767d\u6298\u817e\u4e86\u3002\n\n\u53ea\u5269\u4e0b\u4e00\u6735\u82b1\u80af\u5b9a\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c\u6545dp[1][1]\u548cdp[1][0]\u90fd\u662f1\u3002\n\n70\u5206dp\u7684\u597d\u5904\u5c31\u5728\u4e8e5\u5206\u949f\u62ff\u523070\u5206\uff0c\u6027\u4ef7\u6bd4\u8fd8\u662f\u6bd4\u8f83\u9ad8\u7684\u3002\n\n\u5269\u4e0b\u768430\u5206\u539f\u7406\u548c70\u5206dp\u539f\u7406\u76f8\u540c\uff0c\u4f46\u662f\u6570\u636e\u4e0a\u4e0d\u662f\u8bf4hi\u4e0d\u57fa\u672c\u4e0a\u90fd\u662f\u5747\u5300\u5206\u5e03\u7684\u5417\uff1f\u6240\u4ee5\u6b63\u89e3\u6765\u8bb2\u7684\u8bdd\u5e94\u8be5\u4e0d\u4f1a\u8ba9\u524d\u4e00\u6735\u82b1\u8ddd\u79bb\u81ea\u5df1\u592a\u8fdc\uff0c\u90a3\u4e48\u6211\u5c31\u968f\u4fbf\u9009\u53d6\u4e86\u4e00\u4e2a\u6570\uff08100\uff0c\u975e\u5e38\u597d\uff09\u5f80\u524d\u627e\uff0c\u592a\u4e45\u8fdc\u7684\u82b1\u6735\u5c31\u4e0d\u627e\u4e86\uff0c\u8282\u7ea6\u65f6\u95f4\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n;\nint w[100007];//\u82b1\u6735\u7684\u9ad8\u5ea6\nint dp[100007][2];//\u8f6c\u79fb\u6570\u7ec4\uff0c0\u4e0a\u5347\uff0c1\u4e0b\u964d \nint main(){\n    //freopen(\"flower.in\",\"r\",stdin);\n    //freopen(\"flower.out\",\"w\",stdout);\n    int ans=0;\n    cin>>n;\n    if(n<=1000)//\u7279\u5224n\u7684\u5927\u5c0f\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c\u65b9\u4fbf\u9a97\u5206\uff0c\u201c\u9762\u5411\u6570\u636e\u7f16\u7a0b\u201d\n    {\n        for(int i=1;i<=n;i++)\n        {\n            cin>>w[i];\n        }\n        dp[1][0]=1;\n        dp[1][1]=1;\n        for(int i=2;i<=n;i++)\n        {\n            for(int l=1;l<i;l++)\n            {\n                if(w[l]<w[i])\n                {\n                    dp[i][1]=max(dp[i][1],dp[l][0]+1);\n                    ans=max(dp[i][1],ans);\n                }\n                else if(w[l]>w[i])//\u6ce8\u610f\u5982\u679c\u524d\u9762\u7684\u82b1\u7b49\u4e8e\u81ea\u5df1\u7684\u9ad8\u5ea6\u7684\u65f6\u5019**\u4e0d\u80fd\u53c2\u4e0e\u8f6c\u79fb\uff01\uff01**\uff08\u8bba70\u5206\u7b97\u6cd5\u5f97\u4e8660\u5206\uff09\n                {\n                    dp[i][0]=max(dp[i][0],dp[l][1]+1);\n                    ans=max(dp[i][0],ans);\n                }\n            }\n        }\n               cout<<ans;\n    }\n    else\n    {\n        for(int i=1;i<=n;i++)\n        {\n            cin>>w[i];\n        }\n        dp[1][0]=1;\n        dp[1][1]=1;\n        for(int i=2;i<=n;i++)\n        {\n            for(int l=max(1,i-100);l<i;l++)\n            {\n                if(w[l]<w[i])\n                {\n                    dp[i][1]=max(dp[i][1],dp[l][0]+1);\n                    ans=max(dp[i][1],ans);\n                }\n                else if(w[l]>w[i])\n                {\n                    dp[i][0]=max(dp[i][0],dp[l][1]+1);\n                    ans=max(dp[i][0],ans);\n                }\n            }\n        }\n                cout<<ans;\n    }\n    return 0;\n}\n```",
        "postTime": 1509458835,
        "uid": 41249,
        "name": "\u5b89\u59ae007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u89e3\u6cd5\u6bd4\u8f83\u6e05\u5947\uff1f\n\n\u9996\u5148\u770b\u5230\u9898\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u5f88\u663e\u7136\u7684 DP\uff1a  \n\u8bbe $f_{i,0/1}$ \u5206\u522b\u8868\u793a\u9009\u53d6\u7684\u5b50\u5e8f\u5217\u7684\u7ed3\u5c3e\u662f $h_i$\uff0c\u6ee1\u8db3 $A/B$ \u6027\u8d28\u7684\u6700\u5927\u957f\u5ea6\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u7684\u8bdd\uff0c\n\n$$\\begin{aligned} f_{i,0} = \\max\\limits_{j < i,a_j < a_i} f_{i,1} + 1 \\\\ f_{i,1} = \\max\\limits_{j < i,a_j > a_i} f_{i,0} + 1 \\end{aligned}$$\n\n\u4f46\u662f\u8fd9\u6837\u5b50\u662f $O(n^2)$ \u7684\u3002  \n\u4e8e\u662f\u5f88\u591a\u4eba\u628a\u5b83\u4f18\u5316\u5230\u4e86 $O(n)$\u3002  \n\u4f46\u662f\u6211\u592a\u83dc\u4e86\u53ea\u80fd\u4f18\u5316\u5230 $O(n \\log n)$\u3002\n\n\u5148\u53ea\u8003\u8651 A \u6027\u8d28\uff0cB \u540c\u7406\u3002  \n\u4ed4\u7ec6\u89c2\u5bdf\u8f6c\u79fb\u7684\u5f0f\u5b50\uff0c\u5bf9 $j$ \u7684\u9650\u5236\u662f $j < i,a_j < a_i$\u3002  \n\u90a3\u4e48\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\uff1f  \n\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784 $O(n \\log^2 n)$ \u6216 $O(n \\log n)$ \u89e3\u51b3\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u6570\u770b\u6210\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0a\u7684\u70b9 $(i,a_i)$\uff0c\u5e76\u4e14\u8fd9\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c $f_{i,0}$\u3002  \n\u90a3\u4e48\u6bcf\u4e2a $f_{i,0}$ \u5c31\u662f\u5728\u77e9\u5f62 $(1,0) - (i - 1,a_i - 1)$ \u91cc\u7684\u6743\u503c\u6700\u5927\u503c $+ 1$\u3002  \n\u4f46\u662f\u8fd9\u4e2a\u6743\u503c\u662f\u52a8\u6001\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6309\u7167 $i$ \u7684\u987a\u5e8f\u9012\u63a8\u3002\n\n\u7136\u540e\u95ee\u9898\u5728\u4e8e\u4e8c\u7ef4\u504f\u5e8f\u600e\u4e48\u89e3\u51b3\u3002  \n\u51e0\u4e2a\u7ecf\u5178\u505a\u6cd5\u4e2d\uff0c\u9996\u5148\u663e\u7136 CDQ \u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u6743\u503c\u52a8\u6001\u53d8\u5316\u8981\u5728\u7ebf\u67e5\u8be2\u3002  \n\u6811\u5957\u6811\u7801\u91cf\u6bd4\u8f83\u5927\uff0c\u800c\u4e14\u6ca1\u6709\u5fc5\u8981\u3002\n\n\u5148\u5ffd\u7565 $j < i$ \u7684\u9650\u5236\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002  \n\u65f6\u523b\u4fdd\u6301\u7ebf\u6bb5\u6811\u91cc\u53ea\u6709 $[1,i-1]$ \u7684\u6570\u5373\u53ef\u6ee1\u8db3 $j < i$ \u7684\u9650\u5236\uff0c\u4e5f\u5c31\u662f\u5904\u7406\u5b8c\u4e00\u4e2a $i$ \u624d\u628a $f_{i,0}$ \u63d2\u5165\u7ebf\u6bb5\u6811\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int N = 1e5;\nconst int A = 1e6;\nint n,a[N + 5];\nint f[N + 5][2];\nstruct node\n{\n    int max,ls,rs;\n} seg[(N << 5) + 10];\nint rt[2];\nvoid change(int x,int k,int &p,int tl,int tr)\n{\n    static int tot = 0;\n    if(!p)\n        p = ++tot;\n    if(tl == tr)\n    {\n        seg[p].max = k;\n        return ;\n    }\n    int mid = tl + tr >> 1;\n    if(x <= mid)\n        change(x,k,seg[p].ls,tl,mid);\n    else\n        change(x,k,seg[p].rs,mid + 1,tr);\n    seg[p].max = max(seg[seg[p].ls].max,seg[seg[p].rs].max);\n}\nint query(int l,int r,int p,int tl,int tr)\n{\n    if(!p || (l <= tl && tr <= r))\n        return seg[p].max;\n    int mid = tl + tr >> 1;\n    int ret = 0;\n    if(l <= mid)\n        ret = max(ret,query(l,r,seg[p].ls,tl,mid));\n    if(r > mid)\n        ret = max(ret,query(l,r,seg[p].rs,mid + 1,tr));\n    return ret;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(register int i = 1;i <= n;++i)\n    {\n        scanf(\"%d\",a + i);\n        f[i][0] = query(0,a[i] - 1,rt[1],0,A) + 1,f[i][1] = query(a[i] + 1,A,rt[0],0,A) + 1;\n        change(a[i],f[i][0],rt[0],0,A),change(a[i],f[i][1],rt[1],0,A);\n    }\n    printf(\"%d\\n\",max(f[n][0],f[n][1]));\n}\n```",
        "postTime": 1554428028,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "# \u82b1\u5320\n\u771f\u7684\u6ca1\u6709\u770b\u660e\u767dDP\u662f\u4ec0\u4e48\u60c5\u51b5\u2026\u2026\u800c\u4e14\u6211\u89c9\u5f97\u597d\u50cf\u4e0d\u4e00\u5b9a\u8981\u7528DP\u5427_(:\u0437\u300d\u2220)_ \n\n\u6211\u4f7f\u7528\u4e86\u8d2a\u5fc3\u7684\u65b9\u6cd5(\u3003'\u25bd'\u3003)\n\n\u4e4b\u524d\u7684\u5927\u4f6c\u4e0d\u5c11\u4f7f\u7528\u4e86\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u7a0d\u4f5c\u4e86\u4fee\u6539\uff0c\u6539\u52a8\u4e86\u4e00\u90e8\u5206\u6211\u89c9\u5f97\u4e0d\u592a\u5bf9\u7684\u5730\u65b9\u5e76\u4e14\u51c6\u5907\u5bf9\u90e8\u5206\u5185\u5bb9\u505a\u4e00\u4e0b\u89e3\u91ca\u30fe(\u0e51\u2579\u25e1\u2579)\uff89\"\n\n\n------------\n\n\u9996\u5148\u4e3b\u8981\u7684\u60f3\u6cd5\u5c31\u662f\uff1a\u5148\u6839\u636e\u524d2\u4e2a\uff08\u4e0d\u5305\u62ec\u76f8\u7b49\u60c5\u51b5\u8be6\u89c1\u6ce8\u91ca1\uff09\u786e\u5b9a\u65b9\u5411\uff0c\u7136\u540e\uff0c\u6211\u4eec\u6839\u636e\u9898\u610f\u5224\u65ad\uff1a**\u7b54\u6848\u60f3\u8981\u8fd9\u6837\u7684\u6ce2\u6d6a\u7ebf~~~~\uff0c\u5c31\u662f _\u9ad8\u77ee\u9ad8\u77ee\u9ad8\u77ee_ \u3002**\n\u673a\u667a\u7684\u6211\u4eec\u51b3\u5b9a\u521b\u9020\u8fd9\u79cd\u7f8e\u4e3d\u7684\u6ce2\u6d6a\u7ebf\u3002\u6240\u4ee5\u786e\u5b9a\u4e86\u65b9\u5411\u4ee5\u540e\u2014\u2014\n\n\u5982\u679c\u4e00\u5f00\u59cb\u662f\u4e0b\u964d\u7684\uff0c\u5c31\u627e\u7b2c\u4e00\u4e2a\u7a81\u7136\u5f00\u59cb\u4e0a\u5347\u7684\uff0cans++\uff0c\u628a\u65b9\u5411\u6539\u6389\uff0c\u53cd\u4e4b\u540c\u7406\u3002\u6211\u4eec\u7528o\u8868\u793a\u65b9\u5411\u3002\n0\u662f\u73b0\u5728\u4e0a\u5347\uff0c1\u662f\u4e0b\u964d\n\n\u6211\u60f3\u4e86\u60f3\u2026\u2026\u51b3\u5b9a\u7528\u6587\u8a00\u6587\u6ce8\u91ca\u7684\u65b9\u6cd5\u89e3\u51b3\u5177\u4f53\u7684\u5185\u5bb9qwq\n\n-----( \u2022 \u0300\u03c9\u2022\u0301 )\u2727---------\u9614\u8010\u7684\u5206\u5272-------------------------------------------------\n1. \u9996\u5148\u6211\u4eec\u8003\u8651\u4e00\u79cd\u6bd4\u8f83\u70e6\u4eba\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u8f93\u51653 1 1 1\uff0c\u6bd4\u8f83\u9057\u61be\u7684\u662f\uff0c \u524d\u9762\u51e0\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\u7b54\u6848\u662f2\u2026\u2026 \u7136\u800cemmm\u5f53\u8f93\u51651 1\uff0c\u7b54\u6848\u4e5f\u662f2\u2026\u2026\n\n\t\u6211\u8ba4\u4e3a\u95ee\u9898\u5728\u4e8e\u53ea\u8003\u8651\u4e86\u524d\u4e24\u4e2a\uff0c\u7136\u524d\u4e24\u4e2a\u53ef\u80fd\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u65e0\u6cd5\u786e\u5b9a\u65b9\u5411\u4e86\u3002\u6240\u4ee5\u6211\u9009\u62e9\u7528while\u5faa\u73af\u627e**\u7b2c\u4e00\u76c6**\u4e0e\u7b2c\u4e00\u76c6\u82b1**\u4e0d\u4e00\u6837**\u7684\u82b1\uff0c\u6839\u636e\u5979\u5224\u65ad\u65b9\u5411\u3002\u5982\u679c\u6ca1\u6709 \u8fd9\u79cd\u82b1\uff0c\u5c31\u662f\u5168\u662f\u4e00\u6837\u7684\uff0c\u5c31\u53ea\u80fd\u7559\u4e00\u76c6\u4e86 \u771f\u662f\u4e2a\u60b2\u4f24\u7684\u6545\u4e8b\u5624TAT\u3002\n1. \u5904\u7406\u5b8c\u5f00\u5934\uff0c\u7ed3\u5c3e\u4e5f\u9700\u8981\u5904\u7406~~\u5199\u4e86\u597d\u4e45\u5624~~\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u6570\u636e10 1 83 31 100 68 53 40 81 66 0~~\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e00\u4e2a\u5462\uff0c\u56e0\u4e3a\u6211\u5728\u8fd9\u91ccwa\u4e86~~\u5904\u7406\u523081\u65f6\uff0c\u56e0\u4e3a\u76ee\u524d\u4e0a\u5347\u800c\u4e1466<81,ans++,\u65b9\u5411\u53d8\u6210\u4e0b\u964d\uff0c\u7136\u540e\u523066,0<66\u6240\u4ee5\u4e0d\u80fd\u9009\uff0c\u52300,\uff08\u4e0b\u4e00\u4f4d\u8fd8\u662f0\uff090=0,\u4e5f\u4e0d\u884c\uff01\uff01\uff01TAT\u6240\u4ee5\u5982\u679c\u5230n\u662f\u4e0b\u964d\uff0c\u90a3\u4e48\u8981\u52a0\u4e00\uff0c\u56e0\u4e3an+1\u4f4d\u662f\u521d\u59cb\u503c0\uff0c\u4e5f\u662f\u4e0b\u964d\uff0c\u4f1a\u5c11\u9009\u4e00\u4e2a\uff0c\u534e\u4e3d\u7684wa\u51fa\u65b0\u5929\u5730\n\n\t\u90a3\u4e48\u5982\u679c\u662f\u4e0a\u5347\u5462\uff1f8 1 83 31 100 68 53 40 81 \uff0c\u7a0b\u5e8f\u8fd0\u884c\u523081\u65f6\uff0c\u662f\u4e0a\u5347\u72b6\u6001\uff0c\u9700\u8981\u4e0b\u964d\uff0cn+1\u662f0\uff0c\u6b63\u6b63\u597d\u597d\u5c0f\u4e8e81~\u5c31\u4e0d\u9700\u8981\u5224\u65ad\u5566\uff0c\u4f1a\u52a0\u4e00\u7684(\uffe3^\uffe3)\n\n\n------------\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n;\nint ans;\nint o;\nint f[100010];\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>f[i];\n    }\n    if(f[1]>f[2])//1\n    {\n        o=1;\n        ans++;\n    }\n    if(f[1]<f[2])//1\n    {\n        o=0;ans++;\n    }\n    if(f[1]==f[2])//1\n    {\n        int b=2;\n        while(f[1]==f[b]&&b<=n)\n        {\n            b++;\n        }\n        if(b>n)\n        {\n            cout<<1;\n            return 0;\n        }\n        if(f[1]<f[b])\n        {\n            o=0;ans++;\n        }\n        if(f[1]>f[b])\n        {\n            o=1;ans++;\n        }\n    }//\u4ee5\u4e0a\u6ce8\u91ca1\n    for(int i=1;i<=n;i++)\n    {\n        if(o==1&&i==n)\n        {\n            ans++;\n            break;\n        }//2\n        if(o==0&&f[i]>f[i+1])\n        {\n            o=1;ans++;\n            continue;\n        }\n        if(o==1&&f[i]<f[i+1])\n        {\n            o=0;ans++;\n            continue;\n        }\n    }\n    cout<<ans;\n}\n```",
        "postTime": 1534164322,
        "uid": 45476,
        "name": "Wichiene",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "> \u542c\u8bf4NOIP\u524d\u53d1\u9898\u89e3RP++\u54e6\n\n\u770b\u5230\u6ca1\u6709\u5185\u5b58\u7528\u6eda\u5b58\u7684\n\n\u53d1\u4e00\u4e2a\u5bf9\u5185\u5b58\u7684\u6eda\u5b58\u4f18\u5316\uff0c0.77MB \n\n\uff08\u5982\u679c\u6709\u66f4\u4f18\u7684\u4e0d\u8981\u5410\u69fd\uff09\n\n\u505a\u9898\u7684\u601d\u8def\u5f88\u7b80\u5355\n\n\u5728\u8bfb\u5165\u7684\u540c\u65f6\u4e5f\u53ef\u4ee5\u8fdb\u884c\u64cd\u4f5c\uff0c\u5bfb\u627e\u62d0\u70b9\n\n\u8fd9\u91cc\u7528flag\u4f53\u73b0\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint h[2];//\u6eda\u5b58 \u53ea\u9700\u8981\u4e24\u4e2a\u5c31\u884c\u4e86\n\tint n,flag=-1,ans=1;scanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)//\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982O(n)\n\t{\n\t\th[0]=h[1];\n\t\tscanf(\"%d\",&h[1]);//\u6eda\u52a8\u5b58\u50a8\u7684\u4f18\u5316\u4f53\u73b0\n\t\tif(i>=2){\n\t\t\tif(h[1]>h[0]&&flag!=1) ans++,flag=1;//\u60c5\u51b5A\u7684\u62d0\u70b9\n\t\t\tif(h[1]<h[0]&&flag!=0) ans++,flag=0;//\u60c5\u51b5B\u7684\u62d0\u70b9\n\t\t}\n\t}\n\tprintf(\"%d\",ans);//\u7ed3\u675f\n\treturn 0;\n } \n```",
        "postTime": 1540946142,
        "uid": 41868,
        "name": "\u54d4\u54e9\u54d4\u54e9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970  | \u82b1\u5320"
    },
    {
        "content": "\u4e27\u5fc3\u75c5\u72c2\u5730\u5199\u4e86\u4e00\u4e2a\u7a7a\u95f4\u590d\u6742\u5ea6O\uff081\uff09\u7684\u4ee3\u7801\u3002\u3002\u3002\n\n\u7528\u4e24\u4e2a\u6570f1,f2\u8bb0\u5f55\u4e24\u79cd\u4e0d\u540c\u7684\u6ce2\u52a8\u5e8f\u5217\uff08\u5148\u8fd9\u4e48\u53eb\u5427\uff09\n\n\u4e3a\u4ec0\u4e48f1,f2\u53ef\u4ee5\u8d4b\u503c\u4e3a1\uff0c\u96be\u9053\u7b2c\u4e00\u76c6\u4e00\u5b9a\u9009\uff1f\n\n\u662f\u7684\uff0c\u7b2c\u4e00\u76c6\u5c31\u662f\u5fc5\u9009\u7684\uff0c\u9009\u4e86\u4e4b\u540e\uff0c\u7b54\u6848\u4e0d\u4f1a\u53d8\u5dee\u3002\n\nx \u8bb0\u5f55\u4e0a\u4e00\u76c6\uff0ch\u8bb0\u5f55\u5f53\u524d\u76c6\n\n1 h==x \u65e0\u9700\u8f6c\u79fb\n\n2 h>x  \u53ef\u4ee5\u8f6c\u79fb\u5176\u4e2d\u4e00\u4e2a\n\n3 h<x \u8f6c\u79fb\u53e6\u4e00\u4e2a\n\n\u6700\u540e\u6bd4\u8f83\u4e00\u4e0bf1,f2\u7684\u5927\u5c0f\uff0c\u6700\u5927\u7684\u662f\u7b54\u6848\n\n\u5b89\u5229\u4e0b\u535a\u5ba2\uff1a<http://www.cnblogs.com/zeroform/>\n\n```cpp\n#include<cstdio>\nvoid read(int &y)\n{\n    y=0;char x=getchar();\n    while(x<'0'||x>'9') x=getchar();\n    while(x>='0'&&x<='9')\n    {\n        y=y*10+x-'0';\n        x=getchar();\n    }\n}\nint max(int x,int y)\n{\n    if(x>y) return x;\n    else return y;\n}\nint n,h,f1=1,f2=1,x;\nint main()\n{\n    read(n);read(h);\n    for(int i=2;i<=n;i++)\n    {\n        x=h;read(h);\n        if(h>x) f1=max(f1,f2+1);\n        if(h<x) f2=max(f2,f1+1);\n    }\n    printf(\"%d\",max(f1,f2)); \n    return 0;\n}\n```",
        "postTime": 1505821687,
        "uid": 25426,
        "name": "Excim",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709C/C++\u7684\u9898\u89e3\uff0c\u5c31\u6765\u5199\u4e00\u4efd\uff08p\u515a\u4e5f\u80fd\u770b\u61c2\uff0c\u5176\u5b9e\u53ea\u670970%\u7684cpp\u7a0b\u5e8f\uff0c100%\u7684\u53ea\u8bb2\u601d\u8def233\uff09 \u3002\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6ee1\u8db3\u6761\u4ef6A\u6216B\u7684\u90fd\u662f\u6570\u636e\u4e0a\u5347\u4e0b\u964d\u4ea4\u66ff\u51fa\u73b0\u7684\u3002\u6211\u4eec\u8bbeF(i)\u8868\u793a\u4ee5\u7b2ci\u4e2a\u6570\u7ed3\u5c3e\u7684\uff0c\u4e14\u6700\u540e\u4e00\u6bb5\u662f\u4e0a\u5347\u7684\u4e0a\u5347\u4e0b\u964d\u4ea4\u66ff\u51fa\u73b0\u7684\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff1bG(i)\u8868\u793a\u4ee5\u7b2ci\u4e2a\u6570\u7ed3\u5c3e\u7684\uff0c\u4e14\u6700\u540e\u4e00\u6bb5\u662f\u4e0b\u964d\u7684\u4e0a\u5347\u4e0b\u964d\u4ea4\u66ff\u51fa\u73b0\u7684\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\u3002\n\n\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u53d1\u73b0\uff1aF(i) = max{G(j) + 1}(1 <= j < i\u4e14H(i) > H(j))\uff0c G(i) = max{F(j) + 1}(1 <= j < i\u4e14H(i) < H(j))\n\nans = max{max{F(i)}, max{G(i)}}\n\n\u90a3\u4e48\u53ef\u4ee5\u5f88\u5bb9\u6613\u5199\u51fa\u5982\u4e0b\u7a0b\u5e8f\u6bb5\uff1a\n\n\n```cpp\nfor(i = 2; i <= N; i++) {\n    F[i] = 1, G[i] = 1;\n    for(j = 1; j < i; j++) {\n        if(H[i] > H[j])\n            F[i] = max(F[i], G[j] + 1);\n        if(H[i] < H[j])\n            G[i] = max(G[i], F[j] + 1);\n    }\n        Ans = max(Ans, max(F[i], G[i]));\n}\n```\n\n\u5f88\u663e\u7136O(n^2)\u7684\u7b97\u6cd5\u53ea\u80fd\u8fc770%\u7684\u6570\u636e\uff0c\u6211\u4eec\u518d\u8003\u8651\u4f18\u5316\u3002\n\n\n\u6211\u4eec\u6362\u4e00\u79cd\u8bbe\u6cd5\u3002\n\n\u8bbeF(i)\u8868\u793a\u524di\u4e2a\u6570\u4e2d\uff0c\u6700\u540e\u4e00\u6bb5\u662f\u4e0a\u5347\u7684\u4e0a\u5347\u4e0b\u964d\u4ea4\u66ff\u51fa\u73b0\u7684\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff1bG(i)\u8868\u793a\u524di\u4e2a\u6570\u4e2d\uff0c\u6700\u540e\u4e00\u6bb5\u662f\u4e0b\u964d\u7684\u4e0a\u5347\u4e0b\u964d\u4ea4\u66ff\u51fa\u73b0\u7684\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a\n\n\u2460\u82e5H(i) > H(i - 1)\uff0c\u5219F(i) = max{F(i - 1), G(i - 1) + 1}\uff0c G(i) = G(i - 1)\n\n\u2461\u82e5H(i) = H(i - 1)\uff0c\u5219F(i) = F(i - 1)\uff0c G(i) = G(i - 1)\n\n\u2462\u82e5H(i) < H(i - 1)\uff0c\u5219F(i) = F(i - 1)\uff0c G(i) = max{G(i - 1), F(i - 1) + 1}\n\nans = max{F(n), G(n)}\n\n\u8fd9\u6837\u4e5f\u5c31\u5f88\u597d\u5199\u51fa\u4ee3\u7801\u4e86\uff08\u4ee3\u7801\u7565\uff0c\u5c31\u5f53\u770b\u61c2\u4e86\u81ea\u5df1\u518d\u7ec3\u4e60\u4e00\u4e0b\u4ee3\u7801\u80fd\u529b\u5427233\uff09\u3002\n\n\n\u987a\u4fbf\u4e00\u63d0\uff0c\u8fd9\u6837F\u6570\u7ec4\u548cG\u6570\u7ec4\u53ef\u4ee5\u4f18\u5316\u6210\u6eda\u52a8\u6570\u7ec4\u751a\u81f3\u4e24\u4e2a\u53d8\u91cf\u3002\n\n\u518d\u987a\u4fbf\u4e00\u63d0\uff0c\u5176\u5b9e\u8fd8\u53ef\u4ee5\u628a\u8fde\u7eed\u7684\u5355\u8c03\u6570\u636e\u7f29\u6210\u4e00\u4e2a\uff0c\u53ea\u8bb0\u5f55\u62d0\u70b9\u8fdb\u884c\u5904\u7406\uff08\u672a\u6d4b\u8bd5\uff09\u3002\n",
        "postTime": 1470925588,
        "uid": 3144,
        "name": "\u6d6e\u5c18ii",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "### \u5206\u6790\n**\u76f4\u63a5\u8d2a\u5fc3**\uff08\u636e\u8bf4**\u52a8\u6001\u89c4\u5212**\u4e5f\u53ef\u4ee5orz\uff09\n\n\u4fdd\u7559\u7684\u82b1\u8981\u4e48\u5de6\u53f3\u4e24\u8fb9\u9ad8\u5ea6\u90fd\u6bd4\u5b83\u9ad8\uff0c\u8981\u4e48\u5de6\u53f3\u4e24\u8fb9\u9ad8\u5ea6\u90fd\u6bd4\u5b83\u4f4e\u3002\n\n\u56e0\u6b64\u4e00\u6bb5\u8fde\u7eed\u4e0a\u5347\u7684\u5e8f\u5217\u548c\u4e00\u6bb5\u8fde\u7eed\u4e0b\u964d\u7684\u5e8f\u5217\u53ea\u4fdd\u7559\u4e00\u4e2a\u8f6c\u6298\u70b9\u3002\n\n\u6ce8\u610f\u7b54\u6848\u8fd8\u8981\u52a0\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u70b9\u221a\n### \u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100050;\nint n,a[N],ans;\nint read(){\n\tint sum=0,f=1;\n    char ch=getchar();\n    while(ch>'9'||ch<'0')\n    {\n    \tif(ch=='-')f=-1;\n    \tch=getchar();\n\t}\n\t while(ch>='0'&&ch<='9')\n    {\n    \tsum=(sum<<3)+(sum<<1)+ch-'0';\n    \tch=getchar();\n\t}\n\treturn sum*f;\n}\nint main(){\n\tfreopen(\"flower.in\",\"r\",stdin);\n\tfreopen(\"flower.out\",\"w\",stdout);\n\tn=read();\n\ta[1]=read();\n\tans=1;\n\tint flag=-1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tif(i==n)ans++; \n\t\tif(a[i]>a[i-1]){\n\t\t\tif(flag==0)ans++;\n\t\t\tflag=1;\n\t\t}\n\t\tif(a[i]<a[i-1]){\n\t\t\tif(flag==1)ans++;\n\t\t\tflag=0;\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n} \n```\n",
        "postTime": 1563890376,
        "uid": 100708,
        "name": "Trilarflagz",
        "ccfLevel": 0,
        "title": "\u3010NOIP2013\u63d0\u9ad8\u7ec4 day2\u3011\u82b1\u5320"
    },
    {
        "content": "# \u8d2a\u5fc3\u6cd5\n#### Greedy Algorithm\n\u8d2a\u5fc3\u6cd5\u76f4\u89c2\u5730\u505a\u51fa\n\n\u5c40\u90e8\u6027\u6700\u4f18\u51b3\u7b56\n\n\u8bd5\u56fe\u627e\u5230\u5168\u5c40\u6027\u6700\u4f18\u89e3\n\n### \u8d2a\u5fc3\u6cd5\u601d\u7ef4\u6846\u67b6\n\u201c\u4f9d\u6b21\u627e\u6700@#$%\u7684...\u5c31\u628a\u5b83...\u201d\n\n\u201c\u6bcf\u6b21\u53d1\u73b0\u6709*&^%\u7279\u70b9\u7684...\u5c31\u628a\u5b83\n\n(**\u9898\u610f**) \u82b1\u7684\u6574\u6570\u9ad8\u5ea6h1,h2,...,hn \u79fb\u8d70\u4e00\u90e8\u5206\u82b1\u540e\uff0c\u5269\u4e0b\u82b1\u7684\u9ad8\u5ea6\n\n\u4f9d\u6b21\u4e3ag1,g2,...,gm \uff0c\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\u4e2d\u81f3\u5c11\u8981\u6ee1\u8db3\u4e00\u4e2a\uff1a\n\n\u6761\u4ef6A \uff1a\u5bf9\u4e8e\u6240\u6709g2i>g2i\u22121, g2i>g2i+1\n\n\u6761\u4ef6B \uff1a\u5bf9\u4e8e\u6240\u6709g2i<g2i\u22121, g2i<g2i+1\n\n\u8bf7\u95ee\uff0c\u6700\u591a\u80fd\u5c06\u591a\u5c11\u682a\u82b1\u7559\u5728\u539f\u5730\u3002m\u53ef\u4ee5\u4e3a1\n\n1\u2264n\u2264105, 0\u2264hi\u226410^6\n\n**\u9664\u4e86\u4e24\u8fb9\u7aef\u70b9\u4ee5\u5916**\n\n**\u6bcf\u6b21\u53d1\u73b0\u9ad8\u5ea6\u62d0\u70b9\uff0c\u5c31\u4fdd\u7559\u4e0b\u6765**\n\n# \u82b1\u5320\uff1a\u9519\u8bef\u4ee3\u7801\n```cpp\n#include<iostream>\nusing namespace std;\nint n,cnt=0,x[100005];\nint main(){\n\tcin>>n; \n\tfor(int i=0;i<n;i++)cin>>x[i];\n\tfor(int i=1;i<n-1;i++){\n\t\tint a=x[i]-x[i-1];\n\t\tint b=x[i]-x[i+1];\n\t\tif(a*b>0)cnt++;\n\t}\n\tcout<<cnt+2<<endl;\n\treturn 0;\n}\n\n\n\n```\n\u601d\u8003\uff1a**\u9519\u5728\u54ea\u91cc\uff1f**\n\n**\u5982\u4f55\u4fee\u6539\uff1f**\n\n# \u82b1\u5320\uff1a\u6784\u9020\u6570\u636e\n```\n\u8f93\u5165\u6837\u4f8b\n5\n5 3 1 1 2\n\u8f93\u51fa\u6837\u4f8b\n3\n```\n**\uff08\u76f8\u90bb\u6570\u76f8\u540c\uff09**\n```\n\u8f93\u5165\u6837\u4f8b\n3\n6 6 6\n\u8f93\u51fa\u6837\u4f8b\n1\n```\n**\uff08\u5168\u90e8\u6570\u76f8\u540c\uff09**\n```\n\u8f93\u5165\u6837\u4f8b\n3\n1 1000000 1\n\u8f93\u51fa\u6837\u4f8b\n3\n```\n**\uff08\u6570\u503c\u5dee\u5f88\u5927\uff09**\n# \u82b1\u5320\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,cnt=0,x[100005];\nint main(){\n\tcin>>n; \n\tn=1; cin>>x[0];\n\twhile(cin>>x[n])\n\t\tif(x[n]!=x[n-1])n++;//\u53bb\u91cd\n\tfor(int i=1;i<n-1;i++){\n\t\tint a=x[i]-x[i-1];\n\t\tint b=x[i]-x[i+1];\n\t\tif(a>0&&b>0||a<0&&b<0)//\u627e\u62d0\u70b9\n\t\t\tcnt++;\n\t}\n\tif(n==1)cout<<1;//\u5224\u7279\u4f8b\n\telse cout<<cnt+2<<endl;\n\treturn 0;\n}\n```\n# \u8d2a\u5fc3\u6cd5\u603b\u7ed3\n\n\u628a\u89e3\u7b54\u62c6\u6210\u591a\u4e2a\u6b65\u9aa4\uff0c\u6bcf\u6b65\u4f9d\u6b21\u6267\u884c\n\n\u6bcf\u4e00\u6b65\u90fd\u627e\u5c40\u90e8\u6700\u4f18\u89e3\n\n**\uff08\u6709\u65f6\u6392\u5e8f\u64cd\u4f5c\u80fd\u542f\u53d1\u7b97\u6cd5\uff09**\n\n\u201c\u4f9d\u6b21\u90fd\u627e\u6700@#$%\u7684...\u5c31\u628a\u5b83...\u201d\n\n\u201c\u6bcf\u6b21\u53d1\u73b0\u6709*&^%\u7279\u70b9\u7684...\u5c31\u628a\u5b83...\u201d\n\n### \u4ece\u8fb9\u8fb9\u89d2\u89d2\u5165\u624b\u6700\u5bb9\u6613\u786e\u5b9a\u5c40\u90e8\u6700\u4f18\u89e3\n\n# \u540e\u8bb0\n\u867d\u7136\u5bf9\u4e8e\u6709\u4e9b\u6700\u4f18\u5316\u95ee\u9898\n\n\u8d2a\u5fc3\u6cd5\u5e76\u4e0d\u662f\u6b63\u786e\u89e3\u6cd5\n\n\u4f46\u8d2a\u5fc3\u6cd5\u7684\u89e3\u53ef\u80fd\u662f\u8fd1\u4f3c\u89e3\n\n\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u53c2\u7167\n\n\u4e00\u822c\u60c5\u51b5\uff0c\u8d2a\u5fc3\u6cd5\u590d\u6742\u5ea6\u90fd\u4e0d\u9ad8",
        "postTime": 1562380297,
        "uid": 185092,
        "name": "Frainstak",
        "ccfLevel": 5,
        "title": "\u8d2a\u5fc3\u6cd5"
    },
    {
        "content": "## \u524d\u8a00\n\u9996\u5148\u770b\u770b\u9898\u610f\uff0c\u9898\u610f\u5c31\u662f\u8981\u4fdd\u8bc1\u5bf9\u540e\u7684\u5230\u7684\u82b1\u7684\u9ad8\u5ea6\u5fc5\u987b\u8981\u662f\u4e0a\u4e0b\u4e0a\u4e0b\u8d77\u4f0f\u7684\u60c5\u51b5\uff0c\u800c\u4e14\u4e0d\u80fd\u65ad\uff0c\u4e5f\u5c31\u662f\u8bf4\u5fc5\u987b\u4e25\u683c\u6309\u7167\u4e0a\u4e0b\u8d77\u4f0f\u7684\u60c5\u51b5\u6765\uff0c\u6bd4\u5982\uff0c\u5f53\u524d\u8fd9\u4e00\u6b65\u5982\u679c\u548c\u524d\u9762\u7684\u6bd4\u662f\u964d\u4e86\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b65\u5fc5\u987b\u8981\u5347\u3002\n \n\u90a3\u4e48\u6700\u540e\u5176\u5b9e\u5c31\u662f\u6c42\u6709\u591a\u5c11\u4e2a\u6298\u70b9\uff0c\u4e5f\u5c31\u662f\u6709\u591a\u5c11\u4e2a\u65b9\u5411\uff08\u5c31\u662f\u5347\u964d\u4e24\u4e2a\u65b9\u5411\uff09\u53d8\u5316\u3002\u6240\u4ee5\u8dd1\u4e00\u8fb9\u6a21\u62df\u6c42\u5cf0\u8c37\u5cf0\u9876\u5c31\u53ef\u4ee5\u4e86\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100010;\nint Max(int x, int y){if(x > y)return x;return y;}\nint a[maxn], f[maxn][2];\nint n;\nint main(){\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; ++i)scanf(\"%d\", &a[i]);\n    f[1][0] = f[1][1] = 1;\n    for(int i = 2; i <= n; ++i){\n        if(a[i] > a[i-1]) f[i][0] = f[i-1][1]+1;\n        else f[i][0] = f[i-1][0];\n        if(a[i] < a[i-1]) f[i][1] = f[i-1][0]+1;\n        else f[i][1] = f[i-1][1];\n    }\n    cout<< Max(f[n][0],f[n][1]);//\u624b\u5199\u51fd\u6570\u662f\u4e2a\u597d\u4e60\u60ef -_-||\n    return 0;\n\uff5d\n```",
        "postTime": 1543028961,
        "uid": 119118,
        "name": "\u665a\u5b89\u665a\u5b89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u88ab61\u7ea7\u540a\u6253\u3002\u3002\u3002\n\n\u8fd9\u9898\u4e0a\u5348\u521a\u8003\u5b8c\uff0c\u81ea\u4ee5\u4e3a\u5199\u7684\u6b63\u786e\u7684\uff0c\u5c31\u76f4\u63a5\u7565\u8fc7\u4e86\uff0c\u6837\u4f8b\u5e76\u4e0d\u4ee3\u8868\u5168\u90e8\uff01\uff01\uff01\n\n\u4e2d\u5348\u60f3\u4e86\u4e00\u4e0b\uff0c\u8d2a\u5fc3\u5927\u6cd5\u597d\uff1a\n\n```cpp\n\u663e\u7136\uff0c\u8fd9\u4e2a\u9898\u9700\u8981\u5efa\u7acb\u4e24\u4e2a\u6a21\u578b\n\u4e00\u4e2a1 2 1 2 1 2 1......\u5076\u6570\u4f4d\u5927\u4e8e\u4e24\u8fb9\u7684\u5947\u6570\u4f4d\n\u53e6\u4e00\u4e2a2 1 2 1 2 1......\u5947\u6570\u4f4d\u5927\u4e8e\u4e24\u8fb9\u7684\u5076\u6570\u4f4d\n\n\u53ea\u9700\u8981\u7528\u4e24\u4e2a\u53d8\u91cf\uff0clast\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u88ab\u9009\u62e9\u6570\u7684\u5927\u5c0f\uff0cplast\u8bb0\u5f55\u5df2\n\u9009\u6570\u7684\u4e2a\u6570\n\n\u62ff\u7b2c\u4e00\u4e2a\u6a21\u578b\u4e3a\u4f8b\n\t\u4e0a\u4e00\u4e2a\u82e5\u662f\u5947\u6570\u4f4d\uff0c\u663e\u7136\u82e5h[i]<=last,\u53ea\u6709\u8ba9\u5947\u6570\u4f4d\u66f4\u5c0f\u624d\u6700\n    \u4f18\uff0c\u82e5h[i]>last,\u5f53\u524d\u7684\u4fbf\u53ef\u4ee5\u4f5c\u4e3a\u5076\u6570\u4f4d\uff0c++plast\n    \n    \u4e0a\u4e00\u4e2a\u82e5\u662f\u5076\u6570\u4f4d\uff0c\u663e\u7136\u82e5h[i]>=last,\u53ea\u6709\u8ba9\u5076\u6570\u4f4d\u66f4\u5927\u624d\u6700\n    \u4f18\uff0c\u82e5h[i]<last\uff0c\u5f53\u524d\u7684\u4fbf\u53ef\u4ee5\u4f5c\u4e3a\u5947\u6570\u4f4d\uff0c++plast\n    \n\n```\n\n\n\u5949\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n,last,plast,ans,h[101010];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&h[i]);\n\tlast=h[1];plast=1;\n\t//121\n\tfor(int i=2;i<=n;i++){\n\t\tif(plast%2)\n\t\t\tif(h[i]<=last) last=h[i];\n\t\t\telse ++plast,last=h[i];\n\t\telse \n\t\t\tif(h[i]>=last) last=h[i];\n\t\t\telse ++plast,last=h[i];\t\n\t}ans=plast;\n\t//212\n\tlast=h[1];plast=1;\n\tfor(int i=2;i<=n;i++){\n\t\tif(plast%2)\n\t\t\tif(h[i]>=last) last=h[i];\n\t\t\telse ++plast,last=h[i];\n\t\telse \n\t\t\tif(h[i]<=last) last=h[i];\n\t\t\telse ++plast,last=h[i];\n\t}ans=max(ans,plast);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1534142520,
        "uid": 60939,
        "name": "\u6e05\u98ce\u6211\u5df2\u901d",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u82b1\u4e86\u597d\u4e45\u624d\u8f6c\u8fc7\u5f2f\u6765\uff0c\u4ee5\u540e\u518d\u4e5f\u4e0d\u8f7b\u4fe1\u6807\u7b7e\u4e86\u3002\n\n\u5982\u679c\u8fd9\u9053\u9898\u771f\u7528DP\u505a\uff0c\u662f\u5f88\u6709\u53ef\u80fdTLE\u7684(\u795e\u7287\u9664\u5916)\uff0c\u6211\u8fd8\u662f\u89c9\u5f97\u8d2a\u5fc3\u662f\u6b63\u89e3\u3002\n\n\u5728noip\u4e2d\u6d89\u53caDP\u53c8\u601d\u7ef4\u96be\u5ea6\u8f83\u9ad8\u7684\u9898\uff0c\u52a8\u8f84\u8017\u8d39\u4e00\u4e2a\u591a\u5c0f\u65f6\u7684\u65f6\u95f4\uff0c\u5374\u4ecd\u53ef\u80fd\u7206\u96f6\u3002\n\n\u6362\u505a\u5199\u8d2a\u5fc3\u4e0d\u4ec5\u8282\u7701\u65f6\u95f4\u8fd8\u4fdd\u5e95\u8fc7\u6570\u636e\u5f31\u7684\u51e0\u70b9\uff0c\u5269\u4e0b\u7684\u65f6\u95f4\u53ef\u4ee5\u5b89\u4e0b\u5fc3\u6765\u60f3\u6b63\u89e3\u3002\n\n###\u6240\u4ee5\uff0c\u8bf4\u5230\u5e95\u8d2a\u5fc3\u6700\u597d\u554a\uff01\n\n\n\u4ee5\u4e0a\u4e3a\u5e9f\u8bdd\u53ef\u4ee5\u65e0\u89c6\u3002\n\n\u6211\u4eec\u6765\u8c08\u8c08\u8fd9\u4e2a\u8d2a\u5fc3\u7684\u8bc1\u660e\uff1a\n\n1.\u4efb\u610f\u5355\u8c03\u9012\u589e\u6216\u9012\u51cf\u7684\u533a\u95f4\u5185\u4e0d\u4f1a\u6709\u591a\u4e8e\u4e24\u682a\u7559\u4e0b\u3002\n\n\u56fe\u793a(\u5047\u8bbe\u9ad8\u5ea6\u4e3a1,2,3,4,5)\uff1a\n\n              \uff0a  ||\n          \uff0a  ||   ||\n           ||   ||   ||\n \uff0a  ||   ||   ||   ||\n  ||   ||   ||   ||   ||\n\u82e5\u6709\u4e09\u682a\u7559\u4e0b\u5219\u77db\u76fe\u3002\n\n2.\u4efb\u610fn\u4e2a\u76f8\u8fde\u7eed\u7684\u5355\u8c03\u9012\u589e\u6216\u9012\u51cf\u7684\u533a\u95f4\u5185\u4e0d\u4f1a\u6709\u591a\u4e8en+1\u682a\u7559\u4e0b\u3002\n\n\u6b64\u547d\u9898\u53ef\u7531\u4e0a\u8ff0\u56fe\u793a\u7684\u53cd\u8bc1\u6cd5\u8bc1\u660e\u3002\n\n###3.\u53ea\u6709\u53d6\u6bcf\u4e2a\u6700\u5927\u5355\u8c03\u533a\u95f4\u4e24\u5934\u7684\u690d\u682a\uff0c\u624d\u4e0d\u4f1a\u5f71\u54cd\u5bf9\u4e0b\u4e00\u4e2a\u690d\u682a\u7684\u9009\u62e9(\u624d\u53ef\u4ee5\u53d6\u5230\u6700\u591a)\u3002\n\n\u6b64\u547d\u9898\u867d\u6613\u5f97\uff0c\u5374\u662f\u8d2a\u5fc3\u7684\u7cbe\u9ad3\u3002\n\n\u4ee5\u4e0b\u4fbf\u662f\u53c2\u8003\u4ee3\u7801\uff0c\u4e3b\u8981\u662f\u6a21\u62df\u9009\u62e9\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint a[100010];\nvoid jyxin(int &x)\n{\n    char c=getchar();\n    x=0;\n    while(c>'9'||c<'0')c=getchar();\n    while(c>='0'&&c<='9')x=x*10+c-48,c=getchar();\n}\nint main()\n{\n    int n,i=2,sum=0;\n    jyxin(n);jyxin(a[1]);\n    if(n==2)\n    {\n        jyxin(a[2]);\n        if(a[2]==a[1])cout<<1;\n        else cout<<2;\n    }\n    if(n==1)cout<<1;\n    jyxin(a[2]);\n    while(i<n)\n    {\n       i++;\n       jyxin(a[i]);\n       if(a[i]==a[i-1])a[i-1]=a[i-2];\n       if((a[i]>a[i-1]&&a[i-2]>a[i-1])||(a[i]<a[i-1]&&a[i-2]<a[i-1]))sum++;\n    }\n    if(sum==0)\n    {\n        if(a[n]==a[n-1])cout<<1;\n         else cout<<2;\n    }\n    else cout<<sum+2;\n    return 0;    \n}\n```",
        "postTime": 1504095706,
        "uid": 31798,
        "name": "\u8861\u5c7f\u777f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u53ef\u8d2a\u5fc3\uff0c\u7b2c\u4e00\u4e2a\u6570\u4f5c\u4e3a\u5fc5\u53d6\u7684\uff0c\u63a5\u4e0b\u6765\u5728\u4e0a\u5347\u5e8f\u5217\u4e2d\u53d6\u6700\u5927\uff0c\u5728\u4e0b\u964d\u5e8f\u5217\u4e2d\u53d6\u6700\u5c0f\u3002\n\n\u63d0\u4f9b\u4e00\u6bb5\u611f\u89c9\u6bd4\u8f83\u7b80\u6d01\u7f8e\u89c2\u7684\u4ee3\u7801\n\n```cpp\n#include <cstdio>\nusing namespace std;\n\nint N,t,p,d,ans;\n\nint main()\n{\n    scanf(\"%d%d\",&N,&p);\n    for (int i=2;i<=N;i++)\n    {\n        scanf(\"%d\",&t);\n        if (t-p)\n            if (d>0&&t<p||d<0&&t>p||d==0)\n                ans++,d=t-p;\n        p=t;\n    }\n    printf(\"%d\",ans+1);\n\n    return 0;\n}\n```",
        "postTime": 1479268934,
        "uid": 22031,
        "name": "Master_Fan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u8ba4\u4e3a\u6700\u7b80\u5355\u7684\u89e3\u6cd5\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6c42\u4e00\u4e2a\u6570\u5217\u4e2d\u5448\u6298\u7ebf\u5f62\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff0c\n\n\u5373\u5b50\u5e8f\u5217\u91cc\u9664\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5916\uff0c\u5168\u90e8\u5143\u7d20(a[i]>a[i-1] && a[i]>a[i+1]) \u6216\u8005 (a[i]<a[i-1] && a[i]<a[i+1])\u3002\n\n\u628a\u5168\u90e8\u5143\u7d20\u8bfb\u5165\u65f6\u5224\u91cd\uff0c\u7136\u540e\u6309\u4e0a\u8ff0\u65b9\u5f0f\u5904\u7406\u5373\u53ef\u3002\n\n\n\u7279\u6b8a\uff1a\n\n1\u3001\u53bb\u91cd\u540e\u7684\u5143\u7d20\u4e2a\u6570\u7b49\u4e8e1\u62162\u65f6\u8f93\u51fa1\u62162\u3002\n\n2\u3001\u5176\u4ed6\u5199\u6cd5\u4e2d\u6240\u6709\u5143\u7d20\u5168\u76f8\u540c\u65f6\u7684\u7279\u5224\u5728\u8fd9\u4e0d\u9700\u8981~~~\n\n3\u3001\u6211\u5c06ans\u521d\u503c\u8bbe\u6210\u4e862\uff08\u663e\u7136\u7b2c\u4e00\u4e2a\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e00\u5b9a\u53d6\uff09\uff0c\u5faa\u73af\u91cc i \u4ece2\u5230n-1\u3002\n\n\n\u4e0b\u9644\u4ee3\u7801\n\n\n\n    \n    \n    \n        \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<string>\n#include<queue>\n#include<vector>\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\n#define ll long long\nusing namespace std;\nint n;    \nint a[100001];\nint ans=2;\nint top=0;\nint main(){\n/*    freopen(\"flower.in\",\"r\",stdin);\n    freopen(\"flower.out\",\"w\",stdout);*/\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        int p;\n        scanf(\"%d\",&p);\n        if(a[top]!=p)\n        a[++top]=p;\n    }\n    if(top<=2){cout<<top;return 0;}\n    for(int i=2;i<=top-1;i++)\n        if((a[i]>a[i-1] && a[i]>a[i+1])||(a[i]<a[i-1] && a[i]<a[i+1]))\n        ans++;\n    cout<<ans;\n    return 0;    \n}\n```",
        "postTime": 1478784223,
        "uid": 23431,
        "name": "\u539f\u5b50\u5206\u5b50\u5976\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u6211\u521d\u770b\u6b64\u9898\uff0c\u8111\u4e2d\u4e00\u56e2\u6d46\u7cca\uff0c\u53ea\u77e5\u9053\u8981\u6c42\u6ce2\u5f62\u4e2a\u6570\u3002\u540e\u6765\u604d\u7136\u5927\u609f\uff0c\u6b64\u9898\u5b9e\u5728\u7b80\u5355\u81f3\u6781\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u77e5\u9053\u7684\u662f\uff0c\u6bd4\u5982\u9898\u76ee\u7ed9\u51fa\u76845 3 2 1 2\uff0c\u6211\u4eec\u4e0d\u96be\u770b\u51fa5 1 2\uff0c3 1 2\uff0c2 1 2\uff0c\u4e0e\u5176\u5e76\u6ca1\u6709\u534a\u6bdb\u94b1\u533a\u522b\uff0c\u6240\u4ee5\uff0c\u5176\u5b9e5 3 2\u8fd9\u4e00\u6bb5\u548c\u5355\u5355\u4e00\u4e2a\u6570\u6ca1\u4ec0\u4e48\u5dee\u522b\u3002\n\n\u77e5\u9053\u8fd9\u4e00\u70b9\u5c31\u597d\u505a\u4e86\uff0c\u8003\u8651\u5b83\u7684\u4e0b\u964d\u4e0a\u5347\u8d8b\u52bf\uff0c\u5982\u679c\u51fa\u73b0\u8f6c\u6298\uff08\u6bd4\u5982\u9898\u89e3\u76841\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u7406\u89e3\u6210\u4e00\u4e2a\u6ce2\u7684\u8f6c\u6298\u70b9\uff09\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6539\u53d8\u9700\u8981\u5bfb\u627e\u7684\u8d8b\u52bf\u7ee7\u7eed\u505a\u3002\n\n\u672c\u6e23\u7684\u7a0b\u5e8f\uff1a\n\n```delphi\n\nvar\n  i,n,ans,f:longint;\n  a:array[1..100000] of longint;\nbegin\n  read(n);\n  for i:=1 to n do read(a[i]);\n  ans:=1;f:=-1;\n  for i:=2 to n do\n    begin\n      if a[i]>a[i-1] then\n        if f<>1 then\n          begin\n            inc(ans);\n            f:=1;\n          end;\n      if a[i]<a[i-1] then\n        if f<>0 then\n          begin\n            inc(ans);\n            f:=0;\n          end;\n    end;\n  write(ans);\nend.\n\n```",
        "postTime": 1441114301,
        "uid": 8496,
        "name": "twy847727884",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u7684\u672c\u8d28\u662f\u6c42\u51fa\u4e00\u4e2a\u6700\u957f\u7684\u6570\u5b57\u5e8f\u5217\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u7684\u6570\u5b57\u4e00\u5927\u4e00\u5c0f\u3001\u4e00\u5927\u4e00\u5c0f\u3002\n\n\u2460\u8fde\u7eed\u7684\u76f8\u540c\u7684\u6570\u5b57\uff0c\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u4f1a\u4f7f\u7528\u5230\u3002\u8fd9\u4e2a\u663e\u7136\u3002\u5408\u5e76\u8fde\u7eed\u800c\u76f8\u540c\u7684\u6570\u5b57\u6709\u52a9\u4e8e\u6c42\u51fa\u6ce2\u5cf0\u6ce2\u8c37\u3002\n\n\u2461\u6c42\u51fa\u6ce2\u5cf0\u6ce2\u8c37\u6570\u76ee+2\u5c31\u662f\u7b54\u6848\u4e86\u3002\n",
        "postTime": 1385209225,
        "uid": 1885,
        "name": "EZ_lzh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u5bb9\u6613\u8bc1\u660e\u53ea\u8981\u770b\u524d\u4e00\u4f4d\u5c31\u80fd\u77e5\u9053\u8fd9\u4e00\u4f4d\u7684\u72b6\u6001\u3002\n\n\u7531\u6b64\u60f3\u5230O(N)\u7b97\u6cd5:\n\n```delphi\n\nvar h,fa,fb:array[1..100000]of longint;\n  n,i,j:longint;\nbegin\n  readln(n);\n  for i:=1 to n do\n    read(h[i]);\n  readln;\n  fa[1]:=1;fb[1]:=1;\n  for i:=2 to n do\n    begin\n      if fa[i-1]and 1=1 then\n                            begin\n                              if h[i]<h[i-1]then fa[i]:=fa[i-1]+1\n                                else fa[i]:=fa[i-1];\n                            end\n        else if h[i]>h[i-1]then fa[i]:=fa[i-1]+1 else fa[i]:=fa[i-1];\n      if fb[i-1]and 1=0 then\n                            begin\n                              if h[i]<h[i-1]then fb[i]:=fb[i-1]+1\n                                else fb[i]:=fb[i-1];\n                            end\n        else if h[i]>h[i-1]then fb[i]:=fb[i-1]+1 else fb[i]:=fb[i-1];\n    end;\n  if fa[n]>fb[n]then writeln(fa[n])else writeln(fb[n]);\n  readln;\nend.\n\n```",
        "postTime": 1384319455,
        "uid": 408,
        "name": "jxpxcsh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u6211\u6bd4\u8f83sb,\u4e00\u773c\u770b\u51fa\u4e86$O(nlogn)$\u7684\u505a\u6cd5\uff0c\u6240\u4ee5\u6ca1\u53bb\u60f3O(n)\u7684\u505a\u6cd5\u3002 \n#### \u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u4f18\u5316\u539f\u6765$O(n^2)$\u7684dp  \n\u9996\u5148\u8003\u8651\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b  \n\n\u6ee1\u8db3\u6761\u4ef6A: $g_{2i} > g_{2i-1}$ , $g_{2i} > g_{2i+1}$ \u7684\u60c5\u51b5  \n\u8bbedpA[i][0]\u8868\u793a\u524di\u4e2a\u6570\uff0c\u4e14\u9009\u4e2d\u7b2ci\u4e2a\u6570\u4f5c\u4e3a\u5269\u4e0b\u7684\u6570\u5217\u4e2d\u7684\u5076\u6570\u4f4d \u6700\u591a\u80fd\u9009\u7684\u82b1\u7684\u6570\u91cf  \n\u8bbedpA[i][1]\u8868\u793a\u524di\u4e2a\u6570\uff0c\u4e14\u9009\u4e2d\u7b2ci\u4e2a\u6570\u4f5c\u4e3a\u5269\u4e0b\u7684\u6570\u5217\u4e2d\u7684\u5947\u6570\u4f4d \u6700\u591a\u80fd\u9009\u7684\u82b1\u7684\u6570\u91cf  \n\u5219$dpA[i][0]=min \\left\\{dpA[j][1]\\right\\}+1,(Data[j]<Data[i])$  \n\u5219$dpA[i][1]=min \\left\\{dpA[j][0]\\right\\}+1,(Data[j]>Data[i]) $ \n  \n\u6ee1\u8db3\u6761\u4ef6B:  $g_{2i} < g_{2i-1} ,g_{2i} < g_{2i+1}$ \u7684\u60c5\u51b5  \n\u8bbedpB[i][0]\u8868\u793a\u524di\u4e2a\u6570\uff0c\u4e14\u9009\u4e2d\u7b2ci\u4e2a\u6570\u4f5c\u4e3a\u5269\u4e0b\u7684\u6570\u5217\u4e2d\u7684\u5076\u6570\u4f4d \u6700\u591a\u80fd\u9009\u7684\u82b1\u7684\u6570\u91cf  \n\u8bbedpB[i][1]\u8868\u793a\u524di\u4e2a\u6570\uff0c\u4e14\u9009\u4e2d\u7b2ci\u4e2a\u6570\u4f5c\u4e3a\u5269\u4e0b\u7684\u6570\u5217\u4e2d\u7684\u5947\u6570\u4f4d \u6700\u591a\u80fd\u9009\u7684\u82b1\u7684\u6570\u91cf  \n\u5219$dpB[i][0]=min \\left\\{dpB[j][1]\\right\\}+1,(Data[j]>Data[i])$  \n\u5219$dpB[i][1]=min \\left\\{dpB[j][0]\\right\\}+1,(Data[j]<Data[i]) $ \n  \n\u6240\u4ee5\u4ee3\u7801\u4e3a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\n\nint dpA[100010][2],dpB[100010][2],Data[100010];\nint N,Ans=0;\n\nint main(){\n\tfreopen(\"flower.in\",\"r\",stdin);\n\tfreopen(\"flower.ans\",\"w\",stdout);\n\tscanf(\"%d\",&N);\n\tfor(register int i=1;i<=N;++i)\n\t\tscanf(\"%d\",&Data[i]);\n\tif(N==1){printf(\"1\\n\");return 0;}\n\tif(N==2){printf(\"1=2\\n\");return 0;}\n\tdpA[1][1]=1;\n\tdpB[1][1]=1;\n\tfor(register int i=2;i<=N;++i){\n\t\tdpA[i][1]=dpB[i][1]=1;\n\t\tfor(register int j=1;j<i;++j){\n\t\t\tif(Data[j]<Data[i] && dpA[j][1]!=0) dpA[i][0]=max(dpA[i][0],dpA[j][1]+1);\n\t\t\tif(Data[j]>Data[i] && dpA[j][0]!=0) dpA[i][1]=max(dpA[i][1],dpA[j][0]+1);\n\t\t\tif(Data[j]>Data[i] && dpB[j][1]!=0) dpB[i][0]=max(dpB[i][0],dpB[j][1]+1);\n\t\t\tif(Data[j]<Data[i] && dpB[j][0]!=0) dpB[i][1]=max(dpB[i][1],dpB[j][0]+1);\n\t\t}\n\t}\n\tfor(register int i=1;i<=N;++i){\n\t\tAns=max(Ans,max(dpA[i][0],dpA[i][1]));\n\t\tAns=max(Ans,max(dpB[i][0],dpB[i][1]));\t\n\t}\n\tprintf(\"%d\\n\",Ans);\n\t\n\treturn 0;\n}\n\n```\n  \n\u4f46\u662f\u4e0d\u884c\uff0c$O(n^2)$\u53ea\u670970\u5206\u3002  \n\u56e0\u4e3a$n<=100000$,\u6211\u53c8\u53d1\u73b0\u72b6\u6001\u8f6c\u79fb\u53ef\u4ee5\u4f18\u5316\uff0c\u6240\u4ee5\u6211\u5c31\u4ee5\u4e3a\u8fd9\u9898\u662fO(nlogn)\u7684\u3002\u3002\u3002  \n\u4ee5\u8fd9\u4e2a\u8f6c\u79fb\u4e3a\u4f8b $dpA[i][0]=min \\left\\{dpA[j][1]\\right\\}+1,(Data[j]<Data[i])$  \n\u6211\u4eec\u60f3\u8981\u5728$O(logn)$\u65f6\u95f4\u5185\u5b8c\u6210\u4e00\u4e2a\u72b6\u6001\u7684\u8f6c\u79fb\uff0c  \n\u7136\u540e\u9a6c\u4e0a\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u4f18\u5316\u3002\u5efa\u6811\u524d\u5148\u5bf9\u82b1\u7684\u9ad8\u5ea6$Data[i]$\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u5b58\u7684\u662fdp\u503c   \n\u56e0\u4e3a\u72b6\u6001\u8f6c\u79fb\u8981\u6c42$Data[j]<Data[i]$,\u6211\u4eec\u53ea\u9700\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u6743\u503c\u6bd4$Data[i]$\u5c0f\u7684\u533a\u95f4\u5185\u67e5\u8be2dp\u7684\u6700\u5927\u503c\u5373\u53ef\u3002  \n\u6bcf\u83b7\u5f97\u4e00\u4e2adp\u503c,\u5c31\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u66f4\u65b0\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$.\u671f\u671b\u5f97\u5206100.   \n\n## Code\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <vector>\nusing namespace std;\n\nint dpA[100010][2],dpB[100010][2],Data[100010];\nint N,Ans=0,Index;\nvector<int> HashData;\nstruct SegTreeNode{\n\tSegTreeNode():A0(0),A1(0),B0(0),B1(0) {}//\u7ef4\u62a4dpA[i][0],dpA[i][1],dpB[i][0],dpB[i][1], \n\tint A0,A1,B0,B1;\n};\nSegTreeNode SegTree[400010];\n\nvoid Push_Up(int root){\n\tSegTree[root].A0=max(SegTree[root<<1].A0,SegTree[root<<1|1].A0);//dpA[i][0]\n\tSegTree[root].A1=max(SegTree[root<<1].A1,SegTree[root<<1|1].A1);//dpA[i][1]\n\tSegTree[root].B0=max(SegTree[root<<1].B0,SegTree[root<<1|1].B0);//dpB[i][0]\n\tSegTree[root].B1=max(SegTree[root<<1].B1,SegTree[root<<1|1].B1);//dpB[i][1]\n\treturn;\n}\n\nvoid Insert(int root,int L,int R,int pos,int Value,int Case){//\u63d2\u5165dp\u503c \n\tif(L==R){\n\t\tif(Case==1) SegTree[root].A0=max(SegTree[root].A0,Value);//dpA[i][0]\n\t\telse if(Case==2) SegTree[root].A1=max(SegTree[root].A1,Value);//dpA[i][1]\n\t\telse if(Case==3) SegTree[root].B0=max(SegTree[root].B0,Value);//dpB[i][0]\n\t\telse if(Case==4) SegTree[root].B1=max(SegTree[root].B1,Value);//dpB[i][1]\n\t\treturn;\n\t}\n\tint mid=(L+R)>>1;\n\tif(pos<=mid) Insert(root<<1,L,mid,pos,Value,Case);\n\telse Insert((root<<1)|1,mid+1,R,pos,Value,Case);\n\tPush_Up(root);\n\treturn;\n}\n\nint Query(int root,int L,int R,int QL,int QR,int Case){//\u67e5\u8be2\u6700\u5927\u503c \n\tif(QL>QR) return 0;\n\tif(R<QL || QR<L) return 0;\n\tif(QL<=L && R<=QR){\n\t\tif(Case==1) return SegTree[root].A0;//dpA[i][0]\n\t\telse if(Case==2) return SegTree[root].A1;//dpA[i][1]\n\t\telse if(Case==3) return SegTree[root].B0;//dpB[i][0]\n\t\telse if(Case==4) return SegTree[root].B1;//dpB[i][1]\n\t}\n\tint mid=(L+R)>>1;\n\treturn max(Query(root<<1,L,mid,QL,QR,Case),Query((root<<1)|1,mid+1,R,QL,QR,Case));\t\n}\n\nint GetPos(int x){//\u83b7\u53d6Data[i]\u5728\u79bb\u6563\u5316\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e \n\treturn lower_bound(HashData.begin(),HashData.end(),x)-HashData.begin()+1;\n}\n\nint main(){\n\tfreopen(\"flower.in\",\"r\",stdin);\n\tfreopen(\"flower.out\",\"w\",stdout);\n\tscanf(\"%d\",&N);\n\tfor(register int i=1;i<=N;++i){\n\t\tscanf(\"%d\",&Data[i]);\n\t\tHashData.push_back(Data[i]);\n\t}\n\tsort(HashData.begin(),HashData.end());\n\tHashData.erase(unique(HashData.begin(),HashData.end()),HashData.end());//\u53bb\u91cd\uff0c\u79bb\u6563\u5316 \n\tIndex=HashData.size();\n\tdpA[1][1]=1;\n\tdpB[1][1]=1;\n\tInsert(1,1,Index,GetPos(Data[1]),1,2);\n\tInsert(1,1,Index,GetPos(Data[1]),1,4);\n\tfor(register int i=2;i<=N;++i){\n\t\tdpA[i][1]=dpB[i][1]=1;\n\t\tint Pos=GetPos(Data[i]);\n\t\tdpA[i][0]=max(dpA[i][0],Query(1,1,Index,1,Pos-1,2)+1);\n\t\tdpA[i][1]=max(dpA[i][1],Query(1,1,Index,Pos+1,Index,1)+1);\n\t\tdpB[i][0]=max(dpB[i][0],Query(1,1,Index,Pos+1,Index,4)+1);\n\t\tdpB[i][1]=max(dpB[i][1],Query(1,1,Index,1,Pos-1,3)+1);\n\t\tInsert(1,1,Index,Pos,dpA[i][0],1);\n\t\tInsert(1,1,Index,Pos,dpA[i][1],2);\n\t\tInsert(1,1,Index,Pos,dpB[i][0],3);\n\t\tInsert(1,1,Index,Pos,dpB[i][1],4);\n\t}\n\tfor(register int i=1;i<=N;++i){\n\t\tAns=max(Ans,max(dpA[i][0],dpA[i][1]));\n\t\tAns=max(Ans,max(dpB[i][0],dpB[i][1]));\t\n\t}\n\tprintf(\"%d\\n\",Ans);\n\t\n\t\n\treturn 0;\t\n}\n```",
        "postTime": 1541501128,
        "uid": 28172,
        "name": "AE\u9171",
        "ccfLevel": 7,
        "title": "\u6d1b\u8c37 P1970 \u82b1\u5320 (NOIP 2013 TG Day2 T2)"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u9898\u76ee\uff1a[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1970)\n\nennn\uff0c\u5728\u7f51\u4e0a\u770b\u5230\u4e86\u8bb8\u591a\u4e0d\u662f\u52a8\u6001\u89c4\u5212\u7684\u505a\u6cd5\uff08\u800c\u4e14\u6211\u5728\u8003\u573a\u4e0a\u9762\u4e5f\u662f\u7528\u8d2a\u5fc3\u5199\u7684\uff09\uff0c\u4f46\u662f\uff0c\u65e2\u7136\u6807\u7b7e\u91cc\u9762\u663e\u793a\u7684\u662f\u52a8\u6001\u89c4\u5212\uff0c\u6211\u4eec\u5c31\u6765\u4e00\u6ce2\u52a8\u6001\u89c4\u5212\u7684\u89e3\u6cd5\u5427\u3002\n\n80\u5206\u505a\u6cd5\uff1a\n\n\u9996\u5148\uff0c\u73b0\u5728\u5148\u6765\u786e\u5b9a\u4e00\u6ce2\u72b6\u6001\uff0c\u9996\u5148\uff0c\u6211\u4eec\u7528dp[x][0]\u8868\u793a\u6700\u540e\u4e00\u6b21\u662f\u4e0b\u964d\uff0c\u5230\u8fbex\u8fd9\u4e2a\u70b9\u7684\u53ef\u4ee5\u7559\u4e0b\u7684\u6700\u591a\u7684\u82b1\u3002dp[x][1]\u5c31\u8868\u793a\u4e0a\u5347\u5566\u3002\n\n\u4ee5dp[x][0]\u4e3a\u4f8b\uff0c\u8003\u8651\u524d\u9762\u4e00\u4e2a\u70b9\u662f\u54ea\u4e2a\uff0c\u7531\u4e8e\u6700\u540e\u662f\u4e0b\u964d\u5230\u8fbe\u7684\uff0c\u6240\u4ee5\u524d\u9762\u4e00\u4e2a\u70b9\u7684\u9ad8\u5ea6\u4e00\u5b9a\u8981\u5927\u4e8ex\u8fd9\u4e2a\u70b9\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u524d\u9762\u6240\u6709\u7684\u70b9\uff0c\u7136\u540e\u9009\u51fadp[k][1]\u6700\u5927\u7684\u70b9\uff0cdp[x][0]=dp[k][1]+1\u540c\u7406dp[x][1]\u4e5f\u662f\u5982\u6b64\u3002\u7531\u4e8e\u6bcf\u4e00\u6b21\u90fd\u8981\u679a\u4e3e\u524d\u9762\u6240\u6709\u7684\u70b9\uff0c\u6240\u4ee5\u4f1a\u8d85\u65f6\u3002\n\n\u73b0\u9644\u4e0a\u4ee3\u7801\uff08\u867d\u7136\u6211\u90fd\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u670980\u5206\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int maxN=100100;\nint n;\nint h[maxN],dp[maxN][2];\n\nint main()\n{\n    int ans=0;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>h[i];\n    dp[1][0]=1;\n    dp[1][1]=1;\n    for(int i=2;i<=n;i++){\n        for(int j=1;j<i;j++){\n            if(h[j]<h[i]){\n                dp[i][1]=max(dp[i][1],dp[j][0]+1);\n                ans=max(dp[i][1],ans);\n            }\n            else if(h[j]>h[i]){\n                dp[i][0]=max(dp[i][0],dp[j][1]+1);\n                ans=max(dp[i][0],ans);\n            }\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\n\u63a5\u4e0b\u6765\uff0c\u662f\u6ee1\u5206\u505a\u6cd5\uff1a\n\n\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u6bcf\u4e00\u6b21\u90fd\u8981\u627e\u4e00\u904d\u6700\u5927\u503c\uff0c\u6211\u4eec\u4e0d\u59a8\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u6bcf\u4e00\u6b21\u4ece\u4e2d\u95f4\u53d6\u51fa\u6765\u5c31\u597d\u4e86\u3002\n\n\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff08\u5929\u554a\uff0c\u6211\u7ebf\u6bb5\u6811\u5c45\u7136\u8fd8\u8bb0\u5f97\uff0c\u9707\u60ca\uff01\uff01\uff01\uff09\n```cpp\n#include<iostream>\n#include<cstring>\n#include<utility>\n#include<cstdio>\nusing namespace std;\nconst int maxN=100100;\nconst int maxH=1000100;\nint n,h[maxN],maxh;\nint dp[maxN][2],a[4*maxH][2];\n\ninline int query(int l,int r,int nl,int nr,int x,int i)\n{\n    if((l==nl)&&(r==nr))\n        return a[x][i];\n    int m=(l+r)/2;\n    int p1=0,p2=0;\n    if(m+1<=nl)\n        p1=query(m+1,r,nl,nr,x+x+1,i);\n    if(nr<=m)\n        p1=query(l,m,nl,nr,x+x,i);\n    if((nl<=m)&&((m+1)<=nr)){\n        p1=query(l,m,nl,m,x+x,i);\n        p2=query(m+1,r,m+1,nr,x+x+1,i);\n    }\n    return max(p1,p2);\n}\n\ninline void change(int l,int r,int t,int target,int x,int i)\n{\n    if(l==r){\n        a[x][i]=max(a[x][i],target);\n        return;\n    }\n    int m=(l+r)/2;\n    if(m>=t)\n        change(l,m,t,target,x+x,i);\n    else\n        change(m+1,r,t,target,x+x+1,i);\n    a[x][i]=max(a[x+x][i],a[x+x+1][i]);\n}\n\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;++i){\n        cin>>h[i];\n        maxh=max(maxh,h[i]);\n    }\n    for(int i=1;i<=n;++i){\n        if(h[i]==0)\n            dp[i][0]=1;\n        else\n            dp[i][0]=query(0,maxh+1,0,h[i]-1,1,1)+1;\n        dp[i][1]=query(0,maxh+1,h[i]+1,maxh+1,1,0)+1;\n        //cout<<dp[i][0]<<\" \"<<dp[i][1]<<endl;\n        change(0,maxh+1,h[i],dp[i][1],1,1);\n        change(0,maxh+1,h[i],dp[i][0],1,0);\n    }\n    int ans=0;\n    for(int i=1;i<=n;++i){\n        ans=max(ans,dp[i][0]);\n        ans=max(ans,dp[i][1]);\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1541143668,
        "uid": 112221,
        "name": "Nirvana_Xero",
        "ccfLevel": 0,
        "title": "P1970 \u82b1\u5320"
    },
    {
        "content": "\u771f\u5fc3\u60f3\u4e0d\u660e\u767d\u8fd9\u9053\u9898\u600e\u4e48\u7528DP\u505a\u2026\u2026\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u7edf\u8ba1\u6ce2\u5cf0\u548c\u6ce2\u8c37\u7684\u6570\u91cf\u3002H[1]\u7531\u4e8e\u5176\u4f4d\u7f6e\u7684\u7279\u6b8a\u6027\uff0c\u80af\u5b9a\u662f\u6ce2\u8c37\u6216\u8005\u6ce2\u5cf0\uff0c\u8fd9\u53d6\u51b3\u4e8eH[1]\u4e4b\u540e\u7684\u8d8b\u52bf\u662f\u4e0a\u5347\u8fd8\u662f\u4e0b\u964d\u3002\u6240\u4ee5\u628aH[1]\u4e0eH[2]\u8fdb\u884c\u6bd4\u8f83\uff0c\u5224\u65ad\u7b2c\u4e00\u4e2a\u8d8b\u52bf\u662f\u4e0a\u5347\u8fd8\u662f\u4e0b\u964d\u3002\n\n\u4e4b\u540e\uff0c\u5f53\u8d8b\u52bf\u4e0d\u53d8\u65f6\uff0c\u5c06\u4e00\u8def\u4e0a\u7684\u82b1\u5168\u90e8\u79fb\u9664\uff1b\u6bcf\u5f53\u8d8b\u52bf\u53d8\u5316\u65f6\uff0c\u5c06\u53d8\u5316\u53d1\u751f\u7684\u8282\u70b9\u4fdd\u7559\uff0c\u5e76\u7ee7\u7eed\u5411\u4e0b\u5faa\u73af\uff0c\u76f4\u5230\u5faa\u73af\u5230H[N-1]\u3002\n\nH[N]\u548cH[1]\u4e00\u6837\uff0c\u80af\u5b9a\u662f\u6ce2\u8c37\u6216\u8005\u6ce2\u5cf0\uff0c\u56e0\u6b64\u4e0d\u5fc5\u5224\u65ad\uff0c\u76f4\u63a5\u4fdd\u7559\u3002\n\n\u56e0\u6b64\u53ea\u9700\u5faa\u73af\u4e00\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint UD,N,F_N,H[1000001],Tot;\nint main()\n{\n    cin >> N;\n    for (F_N=1;F_N<=N;F_N++)\n        cin >> H[F_N];\n    if (H[1]>H[2]) UD=1; else UD=-1;\n    for (F_N=2;F_N<=N-1;F_N++)\n        if (H[F_N]*UD>=H[F_N+1]*UD) Tot++; else UD*=-1;\n    cout << (N-Tot);\n    return 0;\n}\n```",
        "postTime": 1532089090,
        "uid": 58411,
        "name": "Blansburg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "###\u62ff\u8fd9\u9053\u9898\u7ec3\u4e86\u4e00\u4e0bDP+\u6811\u72b6\u6570\u7ec4\uff08\u6211\u624d\u4e0d\u4f1a\u8bf4\u6211\u6ca1\u60f3\u5230\u8d2a\u5fc3\uff09\n\n##\u8fd9\u9053\u9898\u7528DP\u505a\u7684\u8bdd\uff0c\u9700\u8981\u89e3\u51b3\u7684\u5c31\u662f\uff1a\n\n1.\u76f4\u63a5\u505a\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u7528\u7ebf\u6bb5\u6811\uff08\u6811\u72b6\u6570\u7ec4\uff09\u4f18\u5316\u5230O(n log n)\uff1b\n\n2.\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u7684\u95ee\u9898\u3002\n\n\u7136\u800c......\u8c8c\u4f3c\u9898\u89e3\u91cc\u6ca1\u4eba\u7528\u6811\u72b6\u6570\u7ec4\u505a\uff0c\u6240\u4ee5\u6211\u501f\u6b64\u8bb2\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u7684\u65b9\u6cd5\u3002\n\n**\u5404\u4e2a\u53d8\u91cf\u53ca\u51fd\u6570\u7684\u542b\u4e49:**\n\n**a[ ]\u8868\u793a\u53bb\u91cd\u540e\u7684\u82b1\u513f\u4eec\uff0c\u4e4b\u540e\u8868\u793a\u79bb\u6563\u5316\u540e\u7684\u82b1\u513f\u4eec\uff1b**\n\n**xu[ ]\u662f\u79bb\u6563\u5316\u65f6\u6240\u7528\u7684\u6570\u7ec4\uff0c\u6807\u8bc6\u82b1\u513f\u7684\u76f8\u5bf9\u9ad8\u5ea6\u6392\u5e8f\uff1b**\n\n**cnt\u662f\u53bb\u91cd\u4e4b\u540e\u7684\u82b1\u513f\u6570\uff1b**\n\n**ans\u8868\u793a\u7b54\u6848\uff1b**\n\n**bit[ ][0/1]\u8868\u793a\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u7b2c\u4e8c\u7ef4\u4e3a0\u8868\u793a\u8fd9\u76c6\u82b1\u5982\u679c\u7559\u4e0b\u7684\u8bdd\uff0c\u4e0b\u4e00\u76c6\u8981\u9009\u53d6\u82b1\u7684\u9ad8\u5ea6\u8981\u6bd4\u8fd9\u76c6\u82b1\u4f4e\uff08\u7b80\u79f0\u4e3a:\u8fd9\u76c6\u82b1\u8981\u4f4e\u5934\uff09\uff0c\u7b2c\u4e8c\u7ef4\u4e3a1\u8868\u793a\u8fd9\u76c6\u82b1\u5982\u679c\u7559\u4e0b\uff0c\u4e0b\u4e00\u76c6\u8981\u9009\u53d6\u7684\u82b1\u7684\u9ad8\u5ea6\u8981\u6bd4\u8fd9\u76c6\u82b1\u9ad8\uff08\u7b80\u79f0\u4e3a:\u8fd9\u76c6\u82b1\u8981\u62ac\u5934\uff09\uff1b**\n\n**f[ ][0/1]\u662f\u72b6\u6001\uff0cf[i][0]\u8868\u793a\u5f53\u524d\u82b1\u5fc5\u9009\uff0c\u5e76\u4e14\u4e0b\u4e00\u76c6\u82b1\u9ad8\u5ea6\u8981\u4f4e\u4e8e\u5f53\u524d\u82b1\uff08\u5f53\u524d\u82b1\u8981\u4f4e\u5934\uff09\u7684\u6700\u5927\u89e3\uff0cf[i][1]\u8868\u793a\u5f53\u524d\u82b1\u5fc5\u9009\uff0c\u5e76\u4e14\u5f53\u524d\u82b1\u8981\u62ac\u5934\u7684\u6700\u5927\u89e3\uff1b**\n\n**update(int x,int t,int p) : \u628at\u8fd9\u4e2a\u503c\u52a0\u5230bit[x][p]\u4e2d\uff0c\u5e76\u66f4\u65b0\u6574\u4e2a\u6811\u72b6\u6570\u7ec4\uff1b**\n\n**maximum(int l,int r,int p) : \u6c42\u51fa\u7b2c\u4e8c\u7ef4\u4e3ap\u7684\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\u4e0b\u6807\u4e3a l...r \u7684\u6700\u5927\u503c\uff0c\u5373max(bit[l...r][p])\uff1b**\n\n#DP\u65b9\u7a0b:\n\n```cpp\nf[i][0]=maximum(1,a[i]-1,1)+1;//\u6bd4a[i]\u4f4e\u7684\u8981\u62ac\u5934\u7684\u82b1\u4e2d\u7684\u7b54\u6848\u6700\u5927\u503c;\nf[i][1]=maximum(a[i]+1,cnt,0)+1;//\u6bd4a[i]\u9ad8\u7684\u8981\u4f4e\u5934\u7684\u82b1\u4e2d\u7684\u7b54\u6848\u6700\u5927\u503c\uff1b\n```\n#\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c:\n\n**\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u533a\u95f4\u4e0d\u80fd\u5b8c\u5168\u5212\u5206\u5230\u6700\u4f4e\u7684\u90a3\u4e00\u5c42\uff08\u5373\u6240\u6709\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u5206\u522b\u76f8\u7b49\u7684\u90a3\u4e00\u5c42\uff09\uff0c\u6240\u4ee5\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u8fd8\u9700\u8981\u501f\u52a9a[ ]\u6570\u7ec4\uff0c\u6c42\u6700\u5927\u503c\u7684\u601d\u8def\u5c31\u662f : **\u80fd\u7528\u6811\u72b6\u6570\u7ec4\u7684\u90e8\u5206\u5c31\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u6811\u72b6\u6570\u7ec4\u4e0d\u80fd\u7528\u7684\u65f6\u5019\u5c31\u7528a[ ]\u6570\u7ec4\uff1b**\n\n\u6211\u4eec\u77e5\u9053\uff0c\u6811\u72b6\u6570\u7ec4\uff08\u5148\u5ffd\u7565\u7b2c\u4e8c\u7ef4\uff09\u7684\u4e00\u4e2a\u5143\u7d20bit[i]\u8868\u793aa[i-lowbit(i)+1]...a[i]\u8fd9\u4e00\u6bb5\u6570\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u5728\u8bbf\u95eel...r\u65f6\uff0c\u5982\u679cr-lowbit(r)+1\u5230r\u8fd9\u4e00\u6bb5\u5305\u62ec\u5728\u6240\u6c42\u8303\u56f4\u5185\uff0c\u5c31\u76f4\u63a5\u8bbf\u95eebit[r]\uff0c\u5e76\u8ba1\u7b97maximum(l,r-lowbit(r),p)\uff1b\u5982\u679cr-loebit(r)+1\u6bd4l\u5c0f\uff0c\u8bf4\u660ebit[r]\u8868\u793a\u7684\u533a\u95f4\u4e0d\u80fd\u76f4\u63a5\u7528\u6765\u8ba1\u7b97\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u90a3\u5c31\u53ea\u80fd\u7f29\u5c0fbit[ ]\u8868\u793a\u7684\u8303\u56f4\uff0c\u5373\uff1a\u8ba1\u7b97maximum(l,r-1,p)\u548ca[r]\u76f8\u6bd4\u7684\u8f83\u5927\u503c\uff08\u4e0d\u80fd\u7528bit[ ]\u5c31\u7528a[ ]\uff09\uff1b\u628a\u9012\u5f52\u5199\u6210\u5faa\u73af\uff0c\u5c31\u5f97\u5230\u4e86\u6211\u4eec\u60f3\u8981\u7684code\uff1b**\n\n**\u6bcf\u6b21\u8ba1\u7b97\u51faf[i][0/1]\u4e4b\u540e\uff0c\u628a\u5b83\u52a0\u5230\u5f53\u524d\u7684\u6811\u72b6\u6570\u7ec4\u91cc\uff0c\u5219\u6811\u72b6\u6570\u7ec4\u4e2d\u6240\u5b58\u7684\u503c\u4e00\u5b9a\u662f\u5f53\u524d\u82b1\u4e4b\u524d\u7684\u82b1\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u7531\u4e0b\u6807\u7684\u76f8\u5bf9\u7684\u5927\u5c0f\u6765\u786e\u5b9a\u82b1\u7684\u76f8\u5bf9\u9ad8\u4f4e\uff1b**\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801:\n\n```cpp\n/*\u82b1\u5320DP\u505a\u6cd5*/\n#include<iostream>\n#include<cstdio>\n#include<algorithm> \nusing namespace std;\nint n,ans,cnt,a[100010],xu[100010],f[100010][2],bit[100010][2];//\u6811\u72b6\u6570\u7ec4+\u79bb\u6563\u5316 \nbool cmp(int x,int y)//Discretization \u79bb\u6563\u5316\u3002\n{\n    return a[x]<a[y];\n}\nint read()\n{\n    char c=getchar();int x=0,y=1;\n    while(c<'0'||c>'9') {if(c=='-') y=-1;c=getchar();}\n    while(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-'0',c=getchar();\n    return x*y;\n}\nint Lowbit(int x)\n{\n    return (x)&(-x);\n}\nvoid update(int x,int t,int p)//\u628at\u52a0\u5230bit[x][p]\u4e2d\u3002 \n{\n    while(x<=n) {\n        bit[x][p]=max(bit[x][p],t);\n        x+=Lowbit(x);\n    }\n    return ;\n} \nint maximum(int l,int r,int p)\n{\n    int ans1=0;\n    while(l<=r) {\n        for(;r-Lowbit(r)>=l;r-=Lowbit(r)) \n            ans1=max(ans1,bit[r][p]);\n        ans1=max(ans1,f[xu[r]][p]);\n        r--;\n    }\n    return ans1;\n}\nint main()\n{\n    n=read();\n    cnt=0;\n    for(int i=1;i<=n;++i) {\n        a[++cnt]=read();\n        if(a[cnt]==a[cnt-1] && i!=1)//\u53bb\u4e2a\u91cd\u3002\u5426\u5219\u9ad8\u5ea6\u76f8\u540c\u7684\u8fde\u7eed\u7684\u4e00\u6bb5\u5c06\u88ab\u8bc6\u522b\u4e3a\u4e0a\u5347\uff08\u4e0b\u964d\uff09\u5e8f\u5217\u3002 \n            --cnt;\n        xu[cnt]=cnt;\n    }\n    sort(xu+1,xu+cnt+1,cmp);//\u79bb\u6563\u5316\u3002\n    for(int i=1;i<=cnt;++i) {\n        a[xu[i]]=i;\n    }\n    f[1][0]=f[1][1]=1;update(a[1],1,0);update(a[1],1,1);//\u521d\u59cb\u72b6\u6001\u3002\n    for(int i=2;i<=cnt;++i) {\n        f[i][0]=maximum(1,a[i]-1,1)+1;//\u8fd9\u91cc\u662fa[i]\u800c\u4e0d\u662fi\uff01\uff01\uff01 \n        f[i][1]=maximum(a[i]+1,cnt,0)+1;//\u540c\u4e0a\uff01\uff01\uff01 \n        ans=max(max(ans,f[i][0]),f[i][1]);\n        update(a[i],f[i][0],0);\n        update(a[i],f[i][1],1);\n    }\n    printf(\"%d\",ans);\n    return 0;\n} \n```",
        "postTime": 1505630051,
        "uid": 37839,
        "name": "\u7d2b\u94a6",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "emmm... \u5168\u90e8\u90fd\u662f\u7528\u8d2a\u5fc3\u7684\uff1f\u5c31\u6ca1\u6709\u4eba\u50cf\u6211\u4e00\u6837\u8111\u6b8b\u7684\u7528\u4e86 DP \u5417\u2026\u2026\n\n\u4f7f\u7528 $f[i][0/1]$ \u8868\u793a\u7528\u524d $i$ \u76c6\u82b1\uff0c\u5e76\u4e14\u5904\u4e8e \u4e0a\u5347/\u4e0b\u964d \u9636\u6bb5\n\n\u8f6c\u79fb\u5f88\u7b80\u5355\uff1a\n\n$f[i][0]=max(f[j][1]+1)  (0<j<i,a[j]<a[i])$\n\n$f[i][1]=max(f[j][0]+1)  (0<j<i,a[j]>a[i])$\n\n\u7136\u800c\u8fd9\u6837\u5b50\u662f $O(N^2)$ \u7684\uff0c\u4f1a\u70b8\u6389\uff0c\u4e8e\u662f\u641e\u4e2a\u7ebf\u6bb5\u6811\u4f18\u5316\u5c31\u884c\u4e86\n\n\u6ce8\u610f\u8fd8\u8981\u79bb\u6563\u5316\u4e00\u4e0b\n\n``` cpp\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#define N 100020\nusing namespace std;\n\nclass Segment\n{\nprivate:\n    int f[N * 4];\n    int k;\n\npublic:\n    Segment(int n = 1)\n    {\n        k = pow(2, ceil(log(n) / log(2)));\n\n        return;\n    }\n\n    void Set(int x, int v)\n    {\n        for(x += k, f[x] = max(f[x], v);x >>= 1;)\n            f[x] = max(f[x * 2], f[x * 2 + 1]);\n\n        return;\n    }\n\n    int Max(int s, int t)\n    {\n        int o;\n\n        for(o = 0, s = s + k - 1, t = t + k + 1;s ^ t ^ 1;s >>= 1, t >>= 1)\n        {\n            o = max(o, (~s & 1) * f[s ^ 1]);\n            o = max(o, ( t & 1) * f[t ^ 1]);\n        }\n\n        return o;\n    }\n};\n\nint a[N];\nint f[N][2];\nSegment g[2];\nvector<int> v;\n\nint main()\n{\n    int n;\n    int i, o;\n\n    cin >> n;\n    g[0] = g[1] = Segment(n);\n\n    for(i = 1;i <= n;i ++)\n    {\n        cin >> a[i];\n        v.push_back(a[i]);\n    }\n\n    sort(v.begin(), v.end());\n    for(i = v.end() - unique(v.begin(), v.end());i --;)\n        v.pop_back();\n    for(i = 1;i <= n;i ++)\n        a[i] = lower_bound(v.begin(), v.end(), a[i]) - v.begin();\n    \n\n    for(i = 1, o = 0;i <= n;i ++)\n    {\n        f[i][0] = max(1, g[1].Max(0, a[i] - 1) + 1);\n        f[i][1] = max(1, g[0].Max(a[i] + 1, n) + 1);\n        o = max(o, max(f[i][0], f[i][1]));\n        g[0].Set(a[i], f[i][0]);\n        g[1].Set(a[i], f[i][1]);\n    }\n    cout << o << endl;\n\n    return 0;\n}\n```",
        "postTime": 1503403477,
        "uid": 34354,
        "name": "gorokokoro",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u7684\u60f3\u6cd5\u771f\u7684\u8d85\u7ea7\u597d\u60f3\n\n\n\u6700\u7ec8\u5269\u4e0b\u7684\u82b1\u4e00\u5b9a\u662f\u4e00\u5927\u4e00\u5c0f\u4e00\u5927\u6216\u4e00\u5c0f\u4e00\u5927\u4e00\u5c0f\u7684\u6a21\u578b\u6392\u5217\u7684\n\n\n\u800c\u4e14\u6700\u540e\u95ee\u7684\u662f\u6700\u540e\u6700\u591a\u603b\u5171\u53ef\u4ee5\u5269\u4e0b\u591a\u5c11\u76c6\u82b1\n\n\n\u90a3\u6211\u4eec\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u53bb\u5728\u610f\u7559\u4e0b\u4e86\u54ea\u4e00\u76c6\u82b1\n\n\n\u53ea\u8981\u6c42\u603b\u5171\u6709\u591a\u5c11\u4e2a\u4e0a\u5347\u5e8f\u5217\u548c\u4e0b\u964d\u7684\u5e8f\u5217\u5c31\u53ef\u4ee5\u4e86\n\n\n\u56e0\u4e3a\u8fd9\u4e9b\u5e8f\u5217\u4e00\u5b9a\u8981\u7559\u4e0b\u4e00\u4e2a\u624d\u80fd\u6ee1\u8db3\u6700\u540e\u7684\u6a21\u578b\u7684\u524d\u63d0\u4e0b\u53d6\u5230\u6700\u5927\u503c\n\n\n\u4e0b\u9762\u8d34\u51fa\u4ee3\u7801\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,h[100005],ans;\ninline int read()\n{\n    char ch=getchar();\n    int sum=0;\n    while(ch>'9'||ch<'0') ch=getchar();\n    while(ch<='9'&&ch>='0') sum=sum*10+ch-48,ch=getchar();\n    return sum;\n}\nvoid Input()\n{\n    n=read();\n    for(int i=1;i<=n;i++) h[i]=read();\n}\nvoid Work1()\n{\n    int p=h[1],t,d=0;\n    for(int i=2;i<=n;i++)\n    { \n        t=h[i];\n        if(t-p)\n         if(d==0||d>0&&t<p||d<0&&t>p)\n          ans++,d=t-p;\n        p=t;\n    }\n    printf(\"%d\\n\",ans+1);\n}\nvoid Work()\n{\n    int last=h[1],now,d=0;\n    for(int i=2;i<=n;i++)\n    { \n        now=h[i];\n        if(now!=last)//\u5982\u679c\u8fde\u7eed\u4e24\u4e2a\u76f8\u7b49\u7684\u8bdd\u76f4\u63a5\u8fc7\u6ee4\u6389\n         if(d==0||d>0&&now<last||d<0&&now>last) \n          ans++,d=now-last;\n        //\u9664\u4e86\u7b2c\u4e8c\u4e2a\u4ee5\u5916\u4ec5\u5f53\u4e0a\u5347(\u4e0b\u964d)\u5e8f\u5217\u53d8\u4e3a\u4e0b\u964d(\u4e0a\u5347)\u5e8f\u5217\u624d\u4f1a\u591a\u4e00\u682a \n        last=now; \n    }\n    printf(\"%d\\n\",ans+1); //\u56e0\u4e3a\u6ca1\u6709\u7b97\u7b2c\u4e00\u682a\u82b1\u6240\u4ee5\u7b54\u6848\u8fd8\u8981\u52a0\u4e00 \n}\nint main()\n{\n    Input();\n    Work();\n    return 0; \n}\n```",
        "postTime": 1502524314,
        "uid": 33963,
        "name": "\u6a80\u9ece\u6597\u00b7\u795e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u4e2ao\uff08n\uff09\u7684\u7b97\u6cd5\u3002\n\n\u5c06 \u5408\u5531\u961f\u5f62 \u7684 stl \u7b97\u6cd5\u6539\u4e00\u4e0b\uff0c\u518d\u5229\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\u3002\n\n## \u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8d2a\u5fc3\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u8981\u627e\u9ad8\u7684\u82b1\uff0c\u5982\u679c\u51fa\u73b0\u7684\u8fde\u7eed\u51e0\u4e2a\u9ad8\u7684\u82b1\uff0c\u80af\u5b9a\u662f\u53d6\u6700\u9ad8\u7684\uff0c\u56e0\u4e3a\u53d6\u6700\u9ad8\u7684\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u6210\u529f\u53d6\u77ee\u7684\u82b1\u7684\u51e0\u7387\u5c31\u4f1a\u53d8\u9ad8\u3002\n\n\u5982\u679c\u6211\u4eec\u8981\u627e\u77ee\u7684\u82b1\uff0c\u5982\u679c\u51fa\u73b0\u7684\u8fde\u7eed\u51e0\u4e2a\u77ee\u7684\u82b1\uff0c\u80af\u5b9a\u662f\u53d6\u6700\u77ee\u7684\uff0c\u56e0\u4e3a\u53d6\u6700\u77ee\u7684\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u6210\u529f\u53d6\u9ad8\u7684\u82b1\u7684\u51e0\u7387\u5c31\u4f1a\u53d8\u9ad8\u3002\n\n```cpp\n#include<iostream>\nusing namespace std;\nint f[100005];\nint ft[100005];\nint h[100005];    int n;\nint check() //\u6761\u4ef6A\n{                   //f\u5b58\u5408\u683c\u7684\u82b1\n    int r=1;   //\u7528\u6765\u5207\u6362\u627e\u77ee\u7684\u8fd8\u662f\u627e\u9ad8\u7684\n    f[1]=h[1]; //\u52a0\u8fdb\u53bb\u7b2c\u4e00\u4e2a\u82b1\n    int now=1; //f\u7684\u4e0b\u6807\n    for(int i=2;i<=n;i++)\n    if(r%2==0)\n    {\n        if(f[now]>h[i])            //\u627e\u5230\u9ad8\u7684\u82b1\n        {\n            f[++now]=h[i];  //\u52a0\u8fdb\u5408\u683c\u7684\u6570\u7ec4f\n            r++;\n         } \n        else\n        {\n            if(h[i]>=f[now])\n            {\n                f[now]=h[i];\n            }     \n        } \n    }\n    else\n    {\n        if(f[now]<h[i])\n        {\n            f[++now]=h[i];\n            r++;\n        }     \n        else\n        {\n            if(h[i]<=f[now])\n            {\n                f[now]=h[i];\n            }         \n        }\n    }\n    return now;\n}\nint check1()  //\u6761\u4ef6B\n{\n    int r=1;  //\u7528\u6765\u5207\u6362\u627e\u77ee\u7684\u8fd8\u662f\u627e\u9ad8\u7684\n    ft[1]=h[1];  \n    int now=1;\n    for(int i=2;i<=n;i++)\n    if(r%2!=0)\n    {\n        if(ft[now]>h[i])                 //\u627e\u4e00\u4e2a\u77ee\u7684\u82b1\u3002\n        {\n            ft[++now]=h[i];\n            r++;              \n         } \n        else\n        {\n            if(h[i]>=ft[now])\n            {\n                ft[now]=h[i];\n            }     \n        } \n    }\n    else\n    {\n        if(ft[now]<h[i])\n        {\n            ft[++now]=h[i];\n            r++;\n        }     \n        else\n        {\n            if(h[i]<=ft[now])\n            {\n                ft[now]=h[i];\n            }         \n        }\n    }\n    return now;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&h[i]);\n    }\n    printf(\"%d\",max(check(),check1()));\n}\n```",
        "postTime": 1502515047,
        "uid": 34187,
        "name": "huanghu996",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898O(n)\u7684\u65b9\u6cd5\u6211\u5c45\u7136\u6ca1\u60f3\u5230\u3002\u3002\u3002\u6211\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u662fO(n^2)\u7684DP\uff0cdp[i][0]\u4ee3\u8868\u7684\u662f\uff0c\u7b2ci\u4f4d\u53d6\u6ce2\u5cf0\u7684\u4e0a\u5347\u7684\u8d77\u70b9,dp[i][1]\u8868\u793a\u7684\u662f\uff0c\u53d6\u6ce2\u5cf0\u4e0b\u964d\u7684\u8d77\u70b9\uff0cdp[i][0] = max(dp[j][1]+1),a[j]>a[i];dp[i][1] = max(dp[j][0]+1),a[j]<a[i]\u3002\u53d1\u73b0\u8fd9\u6837\u663e\u7136\u4f1aT\uff0c\u7136\u540e\u5c31\u60f3\u5230\u4e86\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6781\u503c\uff0c\u4ee5\u6bcf\u4e2a\u6570\u7684\u6743\u503c\u4f5c\u4e3a\u4e0b\u6807\uff0c\u7ef4\u62a4dp[i][0]\u548cdp[i][1]\u7684\u6700\u5927\u503c\uff0c\u6211\u4eec\u52a8\u6001\u66f4\u65b0\u6700\u5927\u503c\uff0c\u6bcf\u6b21log\u7684\u590d\u6742\u5ea6\uff0c\u4e00\u5171\u662fO(nlogn)\u7684\u590d\u6742\u5ea6\u3002\n\n/*************************************************************************\n\n    > File Name: \u82b1\u5320.cpp\n    > Author: Drinkwater-cnyali\n    > Created Time: 2017/6/3 22:28:41\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define mem(a, b) memset((a), b, sizeof(a))\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nconst int maxn = 100000+10;\nint n;\nint    a[maxn],dp[maxn][2];\nconst int maxm = 1000000+10;\nint t1[maxm<<2],t2[maxm<<2];\nint query(int h,int l,int r,int q,int w,int t)\n{\n    //cout<<h<<endl;\n    if(l == q && r == w)\n    {\n        if(t)return t2[h];\n        else return t1[h];\n    }\n    int mid = (l + r) >>1;\n    //cout<<l<<\" \"<<r<<\" \"<<mid<<\" \"<<q<<\" \"<<w<<endl;\n    if(q > mid)return query(h<<1|1,mid+1,r,q,w,t);\n    else if(w <= mid)return query(h<<1,l,mid,q,w,t);\n    else return max(query(h<<1,l,mid,q,mid,t),query(h<<1|1,mid+1,r,mid+1,w,t));\n}\nvoid updata(int h,int l,int r,int d,int x,int t)\n{\n    if(l == r)\n    {\n        if(t)t2[h] = max(t2[h],x);\n        else t1[h] = max(t1[h],x);\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    //cout<<h<<\" \"<<mid<<\" \"<<d<<\" asd\"<<endl;\n    //cout<<l<<\" \"<<r<<endl;\n    if(d > mid)updata(h<<1|1,mid+1,r,d,x,t);\n    else updata(h<<1,l,mid,d,x,t);\n    if(t)t2[h] = max(t2[h<<1],t2[h<<1|1]);\n    else t1[h] = max(t1[h<<1],t1[h<<1|1]);\n}\nconst int inf = 0x3f3f3f3f;\nint maxa = 0, minx = inf;\nint main()\n{\n    n = read();\n    REP(i,1,n)a[i] = read(),maxa = max(a[i],maxa),minx = min(a[i],minx);\n    dp[n][0] = 1,dp[n][1] = 1;\n    for(int i = n; i >= 1; --i)\n    {\n        int ans1 = a[i] == maxa ? 0 : query(1,minx,maxa,a[i]+1,maxa,0);\n        int ans2 = a[i] == minx ? 0 : query(1,minx,maxa,minx,a[i]-1,1);\n        dp[i][0] = ans2+1;\n        dp[i][1] = ans1+1;\n        //cout<<ans1<<\" \"<<ans2<<endl;\n        updata(1,minx,maxa,a[i],dp[i][0],0);\n        updata(1,minx,maxa,a[i],dp[i][1],1);\n    }\n    int ans = max(dp[1][0],dp[1][1]);\n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1496580100,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "[http://blog.csdn.net/Fine\\_rose/article/details/72667392](http://blog.csdn.net/Fine\\_rose/article/details/72667392)\n\n\n\u6761\u4ef6 A \u4e0e B \u53ea\u8981\u6c42\u4e0b\u6807\u4e3a\u5076\u6570\u7684\u6570\u636e\u4e0e\u5176\u4e24\u4fa7\u6570\u636e\u7684\u5173\u7cfb\uff0c\u56e0\u6b64\u5177\u6709\u52a8\u6001\u89c4\u5212\u7684\u6807\u5fd7\u2014\u2014\u65e0\u540e\u6548\u6027\n\n\u7528\u53d8\u91cf up \u8868\u793a\u957f\u5ea6\u4e3a uplen \u4e14\u6ee1\u8db3\u6761\u4ef6 A \u7684\u5e8f\u5217\u7684\u5c3e\u503c\n\n\u7528\u53d8\u91cf low \u8868\u793a\u957f\u5ea6\u4e3a lowlen \u4e14\u6ee1\u8db3\u6761\u4ef6 B \u7684\u5e8f\u5217\u7684\u5c3e\u503c\n\n\u7528 flower[i] \u8868\u793a\u8f93\u5165\u7684\u7b2c i \u7684\u6570\u636e \uff08\u4e0b\u540c\uff09 \u3002\n\n\u7ef4\u62a4 up \u548c uplen \u7684\u65b9\u6cd5\uff1a\n\n\u5f53 uplen \u4e3a\u5076\u6570\u65f6\uff0c\u8bf4\u660e\u6b64\u65f6\u6ee1\u8db3\u6761\u4ef6 A \u7684\u6700\u957f\u5e8f\u5217\u9700\u8981\u5728\u5176\u540e\u8ffd\u52a0\u4e00\u4e2a\u5c0f\u4e8e\u5176\u5c3e\u503c\u7684\u6570\u636e\uff0c\u90a3\u4e48\u5f53 flower[i] \u5c0f\u4e8e up \u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06 flower[i] \u8ffd\u52a0\u5230\u6ee1\u8db3\u6761\u4ef6 A \u7684\u6700\u957f\u5e8f\u5217\u4e4b\u540e\uff0c\u5e76\u4f7f\u8be5\u5e8f\u5217\u7684\u957f\u5ea6 +1\u3002\u5f53flower[i] < up \u65f6\uff0c\u8bf4\u660e\u5176\u4e0d\u80fd\u8ffd\u52a0\u5230\u6b64\u5e8f\u5217\u4e4b\u540e\uff0c\u4f46\u80fd\u4f7f\u6ee1\u8db3\u6761\u4ef6 A \u7684\u5e8f\u5217\u7684\u5c3e\u503c\u66f4\u5c0f\uff0c\u4e3a\u4e0b\u4e00\u4e2a\u503c\u7559\u51fa\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u56e0\u6b64\u5c06\u5c3e\u503c\u66f4\u65b0\u4e3a flower[i]\n\n\u5f53 uplen \u4e3a\u5947\u6570\u65f6\uff0c\u8bf4\u660e\u6b64\u65f6\u6ee1\u8db3\u6761\u4ef6 A \u7684\u6700\u957f\u5e8f\u5217\u9700\u8981\u5728\u5176\u540e\u8ffd\u52a0\u4e00\u4e2a\u5927\u4e8e\u5176\u5c3e\u503c\u7684\u6570\u636e\uff0c\u90a3\u4e48\u5f53 flower[i] \u5927\u4e8e up \u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06 flower[i] \u8ffd\u52a0\u5230\u6ee1\u8db3\u6761\u4ef6 A \u7684\u6700\u957f\u5e8f\u5217\u4e4b\u540e\uff0c\u5e76\u4f7f\u8be5\u5e8f\u5217\u7684\u957f\u5ea6 +1\u3002\u5f53 flower[i] > up \u65f6\uff0c\u8bf4\u660e\u5176\u4e0d\u80fd\u8ffd\u52a0\u5230\u6b64\u5e8f\u5217\u4e4b\u540e\uff0c\u4f46\u80fd\u4f7f\u6ee1\u8db3\u6761\u4ef6\u7684 A \u5e8f\u5217\u7684\u5c3e\u503c\u66f4\u5927\uff0c\u4e3a\u4e0b\u4e00\u4e2a\u503c\u7559\u51fa\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u56e0\u6b64\u5c06\u5c3e\u503c\u66f4\u65b0\u4e3a flower[i]\n\n\u540c\u7406\u7ef4\u62a4 low \u548c lowlen:\n\nlowlen \u4e3a\u5076\u6570\uff1a\u5f53 flower[i] > low \u65f6\u5c06\u5176\u8ffd\u52a0\u5728\u5e8f\u5217\u4e4b\u540e\u5e76\u4f7f\u5e8f\u5217\u7684\u957f\u5ea6 + 1\u3002\u5f53 flower[i] < low \u65f6\u7528\u5176\u66f4\u65b0 low \u7684\u503c\n\nlowlen \u4e3a\u5947\u6570\uff1a\u5f53 flower[i] < low \u65f6\u5c06\u5176\u8ffd\u52a0\u5728\u5e8f\u5217\u4e4b\u540e\u5e76\u4f7f\u5e8f\u5217\u7684\u957f\u5ea6 + 1\u3002\u5f53 flower[i] > low \u65f6\u7528\u5176\u66f4\u65b0 low \u7684\u503c\n\n\u6700\u540e\u5c06 lowlen \u548c uplen \u4e2d\u8f83\u5927\u7684\u503c\u8f93\u51fa\n\n\u6e90\u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n;\nint flower[100005];\nint up,low;\nint uplen,lowlen;\nint main(){\n    freopen(\"in.txt\",\"r\",stdin);\n    scanf(\"%d\",&n);\n    for(int i = 1;i <= n;i++)\n        scanf(\"%d\",&flower[i]);\n    up = low = flower[1];\n    uplen = lowlen = 1;\n    for(int i = 2;i <= n;i++){\n        if(uplen % 2 == 0){\n            if(flower[i] < up){\n                uplen++;\n                up = flower[i];\n            }else if(flower[i] > up)\n                up = flower[i];\n        }else{\n            if(flower[i] > up){\n                uplen++;\n                up = flower[i];\n            }else if(flower[i] < up)\n                up = flower[i];\n        }\n        if(lowlen % 2 == 0){\n            if(flower[i] > low){\n                lowlen++;\n                low = flower[i];\n            }else if(flower[i] < low)\n                low = flower[i];\n        }else{\n            if(flower[i] < low){\n                lowlen++;\n                low = flower[i];\n            }else if(flower[i] > low)\n                low = flower[i];\n        }\n    }\n    cout << max(uplen,lowlen);\n    return 0;\n}\n```",
        "postTime": 1495545707,
        "uid": 25845,
        "name": "Snitro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "/\\*\n\u4e3b\u8981\u60f3\u901a\u8fc7\u8fd9\u9053\u9898\u7ec3\u4e60\u7ebf\u6bb5\u6811RMQ\u3002\n\n\u65f6\u95f4O(n\\*log 1000000)\n\nf[i][1]=max(f[j][0])+1 (h[j]<h[i])\n\nf[i][0]=max(f[j][1])+1 (h[j]>h[i])\n\n\u53ea\u9700\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u9ad8\u5ea6\u5373\u53ef\u3002\n\n\u7ef4\u62a42\u68f5\u7ebf\u6bb5\u6811\uff0c\u5206\u522b\u7ef4\u62a4f[i][0]\u4e0ef[i][1]\u7684\u6781\u503c\n\n\u6ce8\u610f\u5f88\u91cd\u8981\u7684\u4e00\u70b9\uff0c0 \u2264hi\u22641000000\n\n\u4e00\u5b9a\u8981\u6ce8\u610f\u5ba1\u9898\uff0c\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff01\uff01\n\n\u81f3\u6b64\uff0c\u6210\u529f\u5730\u5229\u7528xds\u964d\u4f4e\u72b6\u6001\u8f6c\u79fb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n\n\\*/\n```cpp\n#include<cstdio>\n#include<iostream>\n#define MAXV 1<<20\nusing namespace std;\nint i,j,n,h[100001];\nint f[100001][2],ans=1; //1:up 0:down\nstruct ele\n{\n    int l,r,v;\n} tree1[MAXV<<2],tree0[MAXV<<2]; //\u4fdd\u9669\u8d77\u89c1\nint size;\nvoid update(ele tree[], int k, int a, int b)\n{\n    if (tree[k].l==tree[k].r) {\n        tree[k].v=b;\n        return;\n    }\n    if (tree[k<<1].l<=a&&tree[k<<1].r>=a) update(tree,k<<1,a,b);\n    if (tree[(k<<1)+1].l<=a&&tree[(k<<1)+1].r>=a) update(tree,(k<<1)+1,a,b);\n    tree[k].v=max(tree[k<<1].v,tree[(k<<1)+1].v); //\u9012\u5f52\u56de\u53bb\uff0c\u66f4\u65b0\u6781\u503c\n}\nint query(ele tree[], int k, int a, int b)\n{\n    if (a>b||b<tree[k].l||a>tree[k].r) return 0; //\u533a\u95f4\u5916 \n    if (a<=tree[k].l&&b>=tree[k].r) return tree[k].v; //\u5b8c\u5168\u8986\u76d6 \n    return max(query(tree,k<<1,a,b),query(tree,(k<<1)+1,a,b)); //\u5206\u4e24\u8fb9\u627e \n}\nvoid build(ele tree[], int k, int l, int r)\n{\n    tree[k].l=l; tree[k].r=r; tree[k].v=0; //\u5b9a\u533a\u95f4\uff0c\u53ca\u662f\u5426\u5b58\u5728\n    if (l==r) return;\n    int mid=(l+r)>>1;\n    build(tree,k<<1,l,mid);\n    build(tree,(k<<1)+1,mid+1,r);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (i=1; i<=n; i++) {\n        scanf(\"%d\",&h[i]);\n        size=max(size,h[i]);\n    }\n    build(tree1,1,0,size); build(tree0,1,0,size);\n    for (i=1; i<=n; i++) {\n        f[i][1]=query(tree0,1,0,h[i]-1)+1;\n        f[i][0]=query(tree1,1,h[i]+1,size)+1;\n        ans=max(ans,max(f[i][0],f[i][1]));\n        update(tree1,1,h[i],f[i][1]);\n        update(tree0,1,h[i],f[i][0]);\n        //printf(\"%d %d\\n\",f[i][0],f[i][1]);\n    }\n    printf(\"%d\",ans);\n    return 0;\n} //tree0(i):h[]\u4e3a1..i\u4e2d\u6700\u5927f[i][0]  i\u7ef4\u62a4h[] \n//tree1(i):h[]\u4e3ai..max(h[])\u4e2d\u6700\u5927f[i][1]  \n//i\u8303\u56f4\u4e3ah[],0..1000000\n```",
        "postTime": 1480081240,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "//\u597d\u4e86\u6211\u7684\u8fd9\u4e2a\u7a0b\u5e8f\u975e\u5e38\u7b80\u5355\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u521a\u5b66\u8fc7c++\u7684\u4eba\u90fd\u80fd\u591f\u7406\u89e3\u3002\n\n```cpp\n//\u4e3b\u8981\u601d\u8def\uff1a\n//\u5927\u5927\u53d6\u5927\uff0c\u5c0f\u5c0f\u53d6\u5c0f\u3002 \n#include <iostream>\nusing namespace std;\nint a[100001],b[100001];\nint main()\n{\n    int n,i,j=0,k=0,bt=2;\n    cin>>n;\n    for (i=1;i<=n;++i) cin>>a[i];     //\u8f93\u5165 \n    b[1]=a[1];\n    b[2]=a[2];\n    if (b[1]>b[2]) j=0;\n    else j=1;    \n                 //\u9884\u5904\u7406\uff0c\u56e0\u4e3a\u4e0d\u7ba1a[1]\uff0ca[2]\u8c01\u5927\u90fd \u53ef\u4ee5\u9009\uff0c\u6240\u4ee5\u5b58\u4e0b\u6765\u3002a[1]>a[2],j=0;a[1]<a[2],j=1\u3002 \n                 //j\u8bb0\u5f55\u72b6\u6001\uff0c\u5373\u4e0b\u4e00\u4e2a\u5e94\u53d6\u5f97\u6570\u5e94\u5927\u4e8e\u5f53\u524d\u6570\u6216\u5c0f\u4e8e\u5f53\u524d\u6570\u3002 \n                 //bt\u5373b\u6570\u7ec4\u6307\u9488\u3002 \n    for (i=3;i<=n;++i)\n    {\n        if (j==0)\n        {\n            if (b[bt]<a[i]) \n            {\n                j=1;\n                ++bt;\n                b[bt]=a[i];\n            }                   //\u7b26\u5408\u53d6\u6570\u6761\u4ef6\uff0c\u53d6\u6570\u3002 \n            else b[bt]=a[i];    //\u5927\u5927\u53d6\u5927\uff1a\u5e94\u53d6\u5927\u4e8eb[bt]\u7684\u6570\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u53d6\u6570\u6761\u4ef6\uff0c\u66f4\u65b0b[bt]\u3002\n        }\n        else \n        {\n            if (b[bt]>a[i])\n            {\n                j=0;\n                bt++;\n                b[bt]=a[i];\n            }                   //\u7b26\u5408\u53d6\u6570\u6761\u4ef6\uff0c\u53d6\u6570\u3002\n            else b[bt]=a[i];    //\u5c0f\u5c0f\u53d6\u5c0f\uff1a\u5e94\u53d6\u5c0f\u4e8eb[bt]\u7684\u6570\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u53d6\u6570\u6761\u4ef6\uff0c\u66f4\u65b0b[bt]\u3002\n        }\n    }\n    cout<<bt;     //\u8f93\u51fab\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u4e2a\u6570\u3002 \n    return 0;\n}\n//\u5b8c\u6210\uff01\u6492\u82b1\uff01\n//\u53ef\u4ee5\u81ea\u5df1\u627e\u51e0\u7ec4\u6570\u636e\u8bd5\u8bd5\u54e6\u3002\n```",
        "postTime": 1476923838,
        "uid": 23035,
        "name": "Ice_teapoy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u4e25\u683c\u6296\u52a8\u5e8f\u5217\uff08\u624b\u52a8\u6ed1\u7a3d\n\n\u4e00\u4e2a\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u76f8\u6bd4\u697c\u4e0a\u5404\u4f4d\u7684dp\u8c8c\u4f3c\u66f4\u52a0\u7b80\u5355\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint main(){\n        int n,tot=0;\n        bool f,           //\u7528\u6765\u8868\u793a\u5f53\u524d\u7684\u72b6\u6001\uff0c0\u4e3a\u9012\u51cf\uff0c1\u4e3a\u9012\u589e \n        s=0;              //\u7528\u6765\u6392\u9664\u5f00\u5934\u5168\u90fd\u76f8\u7b49\u7684\u72b6\u51b5  \n        cin>>n;\n        if (n<=2){cout<<n;return 0;}                 //\u5c11\u4e8e\u7b49\u4e8e\u4e24\u6735\u82b1\u65f6\uff0c\u4e0d\u9700\u8981\u62d4\u6389 \n        for (int i=1,now,former;i<=n;i++){\n                former=now;scanf(\"%d\",&now);\n                if (i==1) continue;                           //\u7b2c\u4e00\u4e2a\u6570\u5b57\u4e0d\u9700\u8981\u5904\u7406\n                if (now==former) continue;         //\u82e5\u4e0e\u524d\u4e00\u9879\u76f8\u7b49\uff0c\u5219\u89c6\u4e3a\u72b6\u6001\u4e0d\u53d8 \n                if (!s) {f=(now>former),s=1;    continue;}//\u7528\u6765\u6392\u9664\u5f00\u5934\u5168\u90fd\u76f8\u7b49\u7684\u72b6\u51b5 \n                if ((now>former) ^ f){                  //\u5f53\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6 \n                    tot++;\n                    f=!f;\n                }\n        }\n        cout<<tot+2;//\u52a0\u4e0a\u5934\u5c3e\u4e24\u4e2a \n        return 0;\n}\n```",
        "postTime": 1474443358,
        "uid": 19582,
        "name": "\u8868_LL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u4ee3\u7801\u548c\u697c\u4e0b\u6709\u4e00\u4f4d\u7684\u65b9\u6cd5\u662f\u4e00\u6837\u7684\uff0c\u4f46\u6211\u81ea\u8ba4\u4e3a\u697c\u4e0b\u5173\u4e8e\u8f6c\u79fb\u8bb2\u7684\u4e0d\u662f\u5f88\u8be6\u7ec6\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bb2\u4e00\u4e0b\u65b9\u7a0b\u7684\u8f6c\u79fb\n\ndp1\u548cdp2\u7684\u4f5c\u7528\u5df2\u7ecf\u5728\u4ee3\u7801\u4e2d\u6253\u4e0a\u6ce8\u91ca\uff0c\u8fd9\u91cc\u76f4\u63a5\u8fdb\u5165\u8f6c\u79fb\n\n\n\u8bfb\u61c2\u9898\u76ee\u4f1a\u53d1\u73b0\u7559\u4e0b\u7684\u6839\u636e\u9ad8\u5ea6\u6765\u770b\u4f1a\u662f\u4e00\u4e2a\u952f\u9f7f\u7684\u5f62\u72b6\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u5f97\u51fa\u5f53h[i] == h[i - 1]\u65f6\u4e24\u4e2adp\u6570\u7ec4\u90fd\u4e0d\u52a0\u6539\u52a8\n\n\u800c\u8fd9\u4e2a\u65b9\u6cd5\u6700\u7cbe\u9ad3\u7684\u654c\u65b9\u5728\u4e8e\u4e24\u4e2adp\u6570\u7ec4\u8981\u4e92\u76f8\u8f6c\u79fb\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u4e92\u76f8\u8f6c\u79fb\u800c\u4e0d\u662f\u5355\u72ec\u8f6c\u79fb\uff0c\u8fd9\u91cc\u7ed9\u51fa\u8bf4\u660e\uff1a\n\n\n\u9996\u5148\u9700\u8981\u660e\u786e\u5c31\u662f\u6bcf\u4e2a\u952f\u9f7f\u7684\u957f\u5ea6(\u627e\u4e0d\u5230\u5f88\u597d\u7684\u5f62\u5bb9\u8bcd)\u4e00\u5b9a\u662f1\uff0c\u4f8b\u59821  2  0  2  1\u5c31\u662f\u7b26\u5408\u8981\u6c42\u7684\n\n\u800c\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u80fd\u957f\u5ea6\u5927\u4e8e1\u5462\uff0c\u6211\u4eec\u968f\u4fbf\u4e3e\u51fa\u4e00\u4e2a\u4f8b\u5b50 0   1   2   3   2   1   0\uff0c\u8fd9\u6837\u5982\u679c2\u5904\u4e8e\u5076\u6570\u4e3a\uff0c\u5219\u5b83\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5982\u679c2\u5904\u4e8e\u5947\u6570\u4f4d\uff0c\u5219\n\n1\u4fbf\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u6709\u7684\u670b\u53cb\u53ef\u80fd\u4f1a\u95ee\u5982\u679c\u628a\u4e24\u4e2a0\u53bb\u6389\u4e0d\u5c31\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e1\u7684\u952f\u9f7f\u4e86\u5417\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u5982\u679c1\u524d\u9762\u7684\u6570\u5927\u4e8e1\uff0c\u5219\u952f\u9f7f\u7684\u957f\u5ea6\u5c31\u6709\u53d8\u56de\u4e861\uff0c\u5982\u679c1\u524d\u9762\u7684\u6570\u5c0f\u4e8e1\uff0c\u5219\u5c31\u4f1a\u50cf\u4f8b\u5b50\u4e00\u6837\u4e0d\u5408\u8981\u6c42\uff0c\u5f53\u952f\u9f7f\u957f\u5ea6\u66f4\u5927\u65f6\u4e5f\u662f\u5982\u6b64\uff0c\u6240\u4ee5\u952f\u9f7f\u957f\u5ea6\u6700\u5927\u4e3a1\n\n\n\u5f97\u51fa\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5047\u8bbe\u6700\u540e\u7559\u4e0b\u7684\u82b1\u662f\u7b26\u5408\u8981\u6c42\u7684\uff0c\u90a3\u4e48\u5982\u679ch[i] > h[i - 1] \u5219h[i - 1]\u5fc5\u7136\u5c0f\u4e8eh[i - 2]\u6240\u4ee5\u5982\u679ch[i] > h[i - 1]\u5219\u8fd9\u4e00\u6b65\u7684\u8f6c\u79fb\u5fc5\u987b\u4e0a\u4e00\u6b65\u5728i-1\u65f6\u662f\u5728\u4e0b\u964d\u7684\u5e8f\u5217\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u800c\u5f53h[i] < h[i - 1]\u7684\u65f6\u5019\u540c\u7406\uff0c\u5fc5\u987b\u7531\u4e0a\u4e00\u6b65\u5728i - 1\u65f6\u662f\u4e0a\u5347\u7684\u5e8f\u5217\u8f6c\u79fb\u8fc7\u6765\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4e24\u4e2adp\u6570\u7ec4\u8981\u4e92\u76f8\u8f6c\u79fb\u7684\u539f\u56e0\n\n\n\u7406\u89e3\u4e86\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u8f6c\u79fb\uff0c\u90a3\u4e48\u5faa\u73af\u4e2d\u7684\u65b9\u7a0b\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff0c\u4e0b\u9762\u662f\u4ee3\u7801\n\n[codec]\n\n\n\n\n    \n        \n    \n    \n    \n```cpp\n#include <fstream>\n#include <iostream>\nusing namespace std;\nifstream fin(\"flower.in\");\nofstream fout(\"flower.out\");\ninline int max(int a, int b){\n    if(a > b)\n        return a;\n    else\n        return b;\n}\nint main(){\n    int dp1[100005], dp2[100005], n, h[100005];//dp1[i]\u8868\u793a\u5f53\u626b\u5230i\u662f\u5e8f\u5217\u6b63\u5728\u4e0a\u5347\u7684\u6700\u957f\u5e8f\u5217, dp2[i]\u8868\u662f\u5f53\u626b\u5230i\u662f\u5e8f\u5217\u6b63\u5728\u4e0b\u964d\u7684\u6700\u957f\u5e8f\u5217, h[i]\u8868\u793a\u9ad8\u5ea6\n    fin>>n;\n    dp1[0] = dp2[0] = 1;\n    for(int i = 0;i < n;i++)\n        fin>>h[i];\n    for(int i = 1;i < n;i++){\n        if(h[i] > h[i - 1]){\n            dp1[i] = dp1[i - 1];\n            dp2[i] = max(dp2[i - 1], dp1[i - 1] + 1);\n        }\n        if(h[i] == h[i - 1]){\n            dp1[i] = dp1[i - 1];\n            dp2[i] = dp2[i - 1];\n        }\n        if(h[i] < h[i - 1]){\n            dp1[i] = max(dp1[i - 1], dp2[i - 1] + 1);\n            dp2[i] = dp2[i - 1];\n        }\n    } \n    fout<<max(dp1[n - 1], dp2[n - 1])<<endl;\n    fin.close();\n    fout.close();\n    return 0;\n}\n```\n[/codec]\n\u795d\u5927\u5bb6\u6109\u5feb\u5730AC\n",
        "postTime": 1474282167,
        "uid": 6201,
        "name": "herofox",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u6211\u4f7f\u7528\u4e86\u6700\u7b80\u5355\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[i]\u8868\u793a\u524di\u4e2a\u6570\u4ee5i\u7ed3\u5c3e\u7684\u6240\u4fdd\u5b58\u7684\u82b1\u7684\u6700\u5927\u503c\uff0c\u6761\u4ef6B\u7684\u6c42\u6cd5\u4e0e\u6761\u4ef6A\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u53ea\u8bf4\u6761\u4ef6A\u7684\u6c42\u6cd5\uff0c\u65b9\u7a0b\u5982\u4e0b\uff1af[i]=max{f[j]+1};\u5f53\u7136\u662f\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u7a76\u7adf\u600e\u4e48\u505a\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u8f83\u6162O(n^2)\uff0c\u4e0d\u80fdAC\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4f18\u5148\u961f\u5217\u8bb0\u5f55\u6700\u5927\u503c\uff0c\u4f46\u662f\u7531\u4e8e\u6700\u5927\u503c\u6761\u4ef6\u6709\u53ef\u80fd\u4e0d\u6ee1\u8db3\uff0c\u9700\u8981\u627e\u7b2c\u4e8c\u5927\uff0c\u7b2c\u4e09\u5927\uff0c\u751a\u81f3\u6240\u6709\u7684f[j]\u90fd\u4e0d\u884c\uff0c\u53ea\u80fd\u81ea\u5df1\u5355\u72ec\u4fdd\u7559\uff0c\u73a9\u4e86\u4e4b\u540e\u8fd8\u8981\u628a\u6240\u6709\u51fa\u8fc7\u961f\u5217\u7684\u63d2\u56de\u53bb\u3002\u5982\u679c\u662f\u4e2a\u7279\u6b8a\u8bbe\u8ba1\u7684\u6570\u636e\u5f88\u53ef\u80fd\u7206\u70b8\uff08\u5176\u5b9e\u8fd9\u4e2a\u6548\u7387\u66f4\u6162\uff0c\u7531\u4e8e\u4f18\u5148\u961f\u5217\u63d2\u5165\u5220\u9664\u6548\u7387\u662fO\uff08nlogn\uff09\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f\u53ef\u4ee5\u8fbe\u5230O\uff08n^2logn\uff09\uff09\uff0c\u4f46\u662f\u9898\u76ee\u8bf4\u660e\u7684\u5f88\u6e05\u695a\u662f\u968f\u673a\u7684\uff0c\u56e0\u6b64\u5c31\u8fc7\u4e86\uff08\u8036\u8036\u8036\uff09\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint n,h[100002],f[100002],l,sx[100002],sy[100002],ans;\ntypedef pair<int,int>P;\npriority_queue<P>m;\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    scanf(\"%d\",&h[i]);\n    m.push(P(ans=f[1]=1,1));\n    for (int i=2;i<=n;i++)\n    {\n        l=0;f[i]=1;\n        while(!m.empty())\n        {\n            if ((m.top().first+1)%2 && h[m.top().second]>h[i] || (m.top().first+1)%2==0 && h[m.top().second]<h[i])\n            {m.push(P(f[i]=m.top().first+1,i));break;}\n            sx[l]=m.top().first;sy[l++]=m.top().second;\n            m.pop();\n        }\n        for (int j=0;j<l;j++)\n        m.push(P(sx[j],sy[j]));\n        if (f[i]>ans)ans=f[i];\n    }\n    priority_queue<P>m;\n    m.push(P(f[1]=1,1));\n    for (int i=2;i<=n;i++)\n    {\n        l=0;f[i]=1;\n        while(!m.empty())\n        {\n            if ((m.top().first+1)%2 && h[m.top().second]<h[i] || (m.top().first+1)%2==0 && h[m.top().second]>h[i])\n            {m.push(P(f[i]=m.top().first+1,i));break;}\n            sx[l]=m.top().first;sy[l++]=m.top().second;\n            m.pop();\n        }\n        for (int j=0;j<l;j++)\n        m.push(P(sx[j],sy[j]));\n        if (f[i]>ans)ans=f[i];\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1474026254,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u5176\u5b9e\u4e5f\u7528\u4e0d\u7740DP\uff0c\u7a0d\u7a0d\u5206\u6790\u4e00\u4e0b\u626b\u4e24\u904d\u6570\u636e\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u90fd\u662fO(N) //\u5177\u4f53\u8bf4\u6765\u65f6\u95f4\u662fo(2\\*N)\n\n\u5148\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,h[1000001],hh[1000001],sum=0,ans=0;\nint main(){\n    //freopen(\"FlowerNOIP2013.in\",\"r\",stdin);\n    //freopen(\"FlowerNOIP2013.out\",\"w\",stdout);\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>h[i];\n    }\n    hh[0]=h[1];\n    for(int i=2;i<n;i++){\n        if(h[i]>h[i-1]&&h[i]>=h[i+1]) hh[++sum]=h[i];\n        if(h[i]<h[i-1]&&h[i]<=h[i+1]) hh[++sum]=h[i];\n```\n}//\u7b2c\u4e00\u904d\u5224\u65ad\u54ea\u4e9b\u82b1\u548c\u5b83\u5de6\u53f3\u672c\u6765\u5c31\u6ee1\u8db3A\u6216B\uff0c\u8fd9\u6837\u7684\u82b1\u53ef\u4ee5\u7559\u4e0b\u6765\uff0c\u5e76\u5b58\u5230hh[]\u4ee5\u4f9b\u8fdb\u4e00\u6b65\u7b5b\u9009\n/\\*\n\u5176\u5b9e\u5206\u6790\u4e00\u4e0b\u5c31\u77e5\u9053\u603b\u6709\u4e00\u79cd\u65b9\u6848\u6700\u7ec8\u7559\u4e0b\u7684\u82b1\u662f\u4e0a\u8ff0\u82b1\u7684\u5b50\u96c6\n\n\\*/\n    hh[sum+1]=h[n]; //\u6784\u5efa\u65b0\u7684\u82b1\u5e8f\u5217\n\n/\\*\n\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\uff0c\u539f\u5e8f\u5217\u6709\u5f62\u59822 1 2 1 2\u7684\u5b50\u5e8f\u5217\uff0c\u7b2c\u4e00\u6b65\u7b5b\u9009\u540e\uff0c\u56e0\u4e3a\u4e24\u4e2a1\u90fd\u6ee1\u8db3\u6761\u4ef6\u88ab\u7559\u4e0b\uff0c\u5bfc\u81f4\u65b0\u5e8f\u5217\u51fa\u73b01 1\u7684\u975e\u6cd5\u60c5\u51b5\uff0c\u6545\u9700\u8981\u8fdb\u884c\u7b2c\u4e8c\u6b21\u7b5b\u9009\n\n\\*/\n\n```cpp\n    for(int i=1;i<=sum;i++){\n        if(hh[i]>hh[i-1]&&hh[i]>=hh[i+1]) ans++;\n        if(hh[i]<hh[i-1]&&hh[i]<=hh[i+1]) ans++;\n    } //\u6839\u636e\u89c4\u5219\u627e\u51fa\u8fd9\u4e00\u5e8f\u5217\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u82b1\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u7b5b\u9009\u7ed3\u679c\u5fc5\u7136\u4e0d\u5b58\u5728\u76f8\u90bb\u7b49\u9ad8\u82b1\u6735\uff0c\u6545\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u79cd\u6700\u4f18\u65b9\u6848\n    ans+=2; //\u5934\u5c3e\u7684\u82b1\u90fd\u53ef\u4ee5\u7559\u4e0b\n    cout<<ans<<endl;\n    //fclose(stdin);\n    //fclose(stdout);\n}\n```\n\u5176\u5b9e\u8bf4\u767d\u4e86\u8fd9\u79cd\u89e3\u6cd5\u8ddf\u627e\u51fd\u6570\u56fe\u5f62\u6781\u503c\u70b9\u4e00\u6837\u3002\n\u5f31\u9e21\u4e00\u679a\uff0c\u5982\u6709\u9519\u8bef\u8bf7\u4e0d\u5ba2\u6c14\u5730\u6307\u51fa\u6765hhh\n",
        "postTime": 1473998943,
        "uid": 9828,
        "name": "ciyou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u9898\u89e3\u600e\u4e48\u6211\u90fd\u770b\u4e0d\u61c2\uff0c\n\n\u5b66\u4e60\uff08\u6284\u5199\uff09\u4e86\u4e00\u7bc7\u4ee3\u7801\u4ee5\u540e\u7ec8\u4e8e\u660e\u767d\u3002\n\n\u5176\u5b9e\u9898\u76ee\u7ed5\u6765\u7ed5\u53bb\u5c31\u662f\u8981\u5f04\u51fa\u4e00\u4e2a\u9ad8\u5ea6\u5e8f\u5217\uff0c\u4f7f\u5f97\u5b83\u7684\u503c\u4e00\u5927\u4e00\u5c0f\u4e00\u5927\u4e00\u5c0f\u8fd9\u6837\u5b50\u3002\n\n\u5c31\u662f\u6bd4\u59821,3,2,6,0,8\u8fd9\u79cd\u53ef\u4ee5\uff0c\n\n\u4f46\u662f1,2,3\u5c31\u4e0d\u884c\u3002\n\n\u6240\u4ee5\uff0c\n\n\u80fd\u770b\u61c2\u5176\u4ed6\u9898\u89e3\u7684\u4ee3\u7801\u4e86\u5427\u3002\n\n\u9644\u4e0a\u7b2c\u4e00\uff08littleprincess\uff0chttps://www.luogu.org/space/show?uid=19600\n\uff09\n\u7684\u9898\u89e3\u6539\u4e86\u53d8\u91cf\u540d\u7684\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n\tbool continues=false;\n\tint answer=1,n;\n\tcin>>n;\n\tint heights[n+1];\n\theights[n]=0;\n\tfor(int i=0;i<n;i++) cin>>heights[i];\n\tif(heights[1]>=heights[0]) continues=true;\n\tfor(int i=0;i<n;i++){\n\t\tif(continues==false&&i==n-1){answer++;break;}\n\t\telse if(continues==true){\n\t\t\tif(heights[i+1]<heights[i]){\n\t\t\t\tanswer++;\n\t\t\t\tcontinues=false;\n\t\t\t}\n\t\t}else if(continues==false){\n\t\t\tif(heights[i+1]>heights[i]){\n\t\t\t\tanswer++;\n\t\t\t\tcontinues=true;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",answer);\n}\n```\n\n",
        "postTime": 1568196639,
        "uid": 234205,
        "name": "\u7535\u8111\u4e13\u5bb6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e2a\u9524\u5b50\u7684dp\u554a\u3002\u3002\u3002\u8fd9\u4e0d\u5c31\u662f\u9012\u63a8\u5417\u3002\u3002\u3002\u3002\u5982\u679c\u524d\u4e00\u4e2a\u6bd4\u4ed6\u5c31\u5927\u5230\u4ed6\u9012\u51cf\u7684\u4e2a\u6570++ \u5982\u679c\u6bd4\u4ed6\u5c0f\u5c31\u9012\u589e\u4e2a\u6570++ \u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,a[100005],z[100005],j[100005];\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tcin>>n;\n\tfor (int i=0;i<n;i++)\n\tcin>>a[i];\n\tz[0]=1;j[0]=1;\n\tfor (int i=1;i<n;i++)\n\t{\n\t\tif (a[i]>a[i-1]) z[i]=j[i-1]+1;\n\t\telse z[i]=z[i-1];\n\t\tif (a[i]<a[i-1]) j[i]=z[i-1]+1;\n\t\telse j[i]=j[i-1];\n\t}\n\tcout<<max(z[n-1],j[n-1]);\n    return 0;\n}\n```",
        "postTime": 1540649857,
        "uid": 97509,
        "name": "SS_Yi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "\u6211\u53ef\u4ee5\u8bf4\u4e0d\u4f1a\u6b63\u89e3\u4e48\uff1f\n\n\n\u4e5f\u76f8\u5f53\u4e8eDP\uff0c\u5bf9\u4e8e\u5f53\u524d\u7684\u6570\u503c\uff0c\u6211\u4eec\u6c42\u4ee5\u8fd9\u4e2a\u6570\u4e3a**\u6ce2\u5cf0/\u6ce2\u8c37**\u7ed3\u5c3e\u7684\u6700\u957f\u7684\u6ce2\u5cf0\u3001\u6ce2\u8c37\u4ea4\u66ff\u7684\u5e8f\u5217\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u503c\u57df\uff0c\u6bcf\u4e2a\u503c\u5bf9\u5e94\u7684\u662f\u4ee5\u8fd9\u4e2a\u503c\u7ed3\u5c3e\u7684\u6700\u957f\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u5217\u957f\u5ea6\n\n\n\u5728\u8fd9\u91cc $\\large{\\downarrow}$\n\n\n```cpp\n for(i=2;i<=N;i++){\n        int val_f=num[i]-1>=1?F.getmax_f(1,1,num[i]-1):0;\n        int val_g=num[i]+1<=n?F.getmax_g(1,num[i]+1,n):0;\n        F.modify(1,num[i],val_g+1,val_f+1);\n    }\n```\n$f$ \u5c31\u662f\u4ee5\u5f53\u524d\u6570\u4e3a\u6ce2\u5cf0\u7684\u6570\u5217\u957f\u5ea6\n\n$g$ \u5c31\u662f\u4ee5\u5f53\u524d\u6570\u4e3a\u6ce2\u8c37\u7684\u6570\u5217\u957f\u5ea6\n\n\u5c06\u8fd9\u4e2a\u6570\u503c\u63d2\u5165\u7ebf\u6bb5\u6811\u65f6\uff0c\u5c06\u4e0a\u9762\u6c42\u7684\u4e24\u4e2a\u503c+1\u518d\u4ea4\u6362\uff08\u6ce2\u5cf0\u6ce2\u8c37\u4ea4\u66ff\uff09\u5c31\u884c\u4e86\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN = 100000+9;\nint b[MAXN];\nint num[MAXN];\nint n,N;\nclass Segment_Tree{\n    private:\n        struct T{\n            int ls,rs,left_range,right_range;\n            int val_f;\n            int val_g;\n        }tree[MAXN*4];\n        int lazy_min[MAXN*4];\n        int lazy_max[MAXN*4];\n        int cnt;\n        \n        void update(int x){\n            tree[x].val_f=max(tree[tree[x].ls].val_f,tree[tree[x].rs].val_f);\n            tree[x].val_g=max(tree[tree[x].ls].val_g,tree[tree[x].rs].val_g);\n        }\n    public:\n        int Build(int l,int r){\n            int now=++cnt;\n            tree[now].left_range=l;\n            tree[now].right_range=r;\n            if(l==r){\n                return now;\n            }\n            int mid=l+r>>1;\n            tree[now].ls=Build(l,mid);\n            tree[now].rs=Build(mid+1,r);\n            update(now);\n            return now;\n        }\n\n        int getmax_f(int k,int l,int r){\n            if(l<=tree[k].left_range && tree[k].right_range<=r){\n                return tree[k].val_f;\n            }\n            int mid=tree[k].left_range+tree[k].right_range>>1;\n            int re=-1;\n            if(l<=mid)re=max(re,getmax_f(tree[k].ls,l,r));\n            if(r>=mid+1) re=max(re,getmax_f(tree[k].rs,l,r));\n            return re;\n        }\n\n        int getmax_g(int k,int l,int r){\n            if(l<=tree[k].left_range && tree[k].right_range<=r){\n                return tree[k].val_g;\n            }\n            int mid=tree[k].left_range+tree[k].right_range>>1;\n            int re=-1;\n            if(l<=mid)re=max(re,getmax_g(tree[k].ls,l,r));\n            if(r>=mid+1) re=max(re,getmax_g(tree[k].rs,l,r));\n            return re;\n        }\n\n        void modify(int k,int pos,int val1,int val2){\n            if(tree[k].left_range==tree[k].right_range){\n                tree[k].val_f=val1;\n                tree[k].val_g=val2;\n                return;\n            }\n            int mid=tree[k].left_range+tree[k].right_range>>1;\n            if(pos<=mid)modify(tree[k].ls,pos,val1,val2);\n            else modify(tree[k].rs,pos,val1,val2);\n            update(k);\n        }\n}F;\n\nint main(){\n    scanf(\"%d\",&N);\n    int i;\n    for(i=1;i<=N;i++){\n        scanf(\"%d\",&num[i]);\n        b[i]=num[i];\n    }\n    sort(b+1,b+N+1);\n    n=unique(b+1,b+N+1)-(b+1);\n    for(i=1;i<=N;i++)\n        num[i]=lower_bound(b+1,b+n+1,num[i])-b;\n    F.Build(1,n);\n    F.modify(1,num[1],1,1);\n    int ans;\n    for(i=2;i<=N;i++){\n        int val_f=num[i]-1>=1?F.getmax_f(1,1,num[i]-1):0;\n        int val_g=num[i]+1<=n?F.getmax_g(1,num[i]+1,n):0;\n        F.modify(1,num[i],val_g+1,val_f+1);\n    }\n    printf(\"%d\\n\",max(F.getmax_f(1,1,n),F.getmax_g(1,1,n)));\n    return 0;\n}\n```",
        "postTime": 1508973787,
        "uid": 34848,
        "name": "zzzc18",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    },
    {
        "content": "```cpp\n//\u5047\u8bbe\u82b1\u662f\u6309\u5982\u4e0b\u9ad8\u5ea6\u548c\u65b9\u5f0f\u6392\u5e8f\u7684:\n// 0      0    0      0\n//   0  0  0      0    0\n//     0      0  0  0\n//\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u8981\u627e\u7684\u82b1\u5176\u5b9e\u5c31\u662f\n// 1      1    1      1\n//   0  0  0      1    1\n//     1      1  1  1\n//\u4e5f\u5c31\u662f\u6bcf\u6b21\u4e0a\u5347\u6216\u4e0b\u964d\u7684\u8f6c\u6298\u70b9\u4e0a\n//\u800c\u8fd9\u4e9b\u8f6c\u6298\u70b9\u518d\u52a0\u4e0a\u9996\u5c3e\u7684\u4e24\u76c6\u82b1\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u7ed3\u679c\n//\u5982\u679c\u82b1\u7684\u4f4d\u7f6e\u8f83\u4e3a\u7279\u6b8a\uff0c\u6ca1\u6709\u5177\u4f53\u7684\u4e00\u4e2a\u8f6c\u6298\u70b9\uff0c\u5982:\n// 0            0 \u6211\u4eec\u5c31\u5c06\u5b83\u53d8\u4e3a 0            0 \u5373\u53ef\u5f97\u5230\u5177\u4f53\u552f\u4e00\u7684\u8f6c\u6298\u70b9 \n//   0        0                            0 0 0  0\n//     0 0 0                                     0\n//\u8fd9\u6837\u505a\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u95ee\u9898(\u4f46\u6570\u636e\u592a\u6c34\u6ca1\u6709\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u5c31\u61d2\u5f97\u5224\u65ad\u4e86):\n//\u5982\u679c\u6240\u6709\u82b1\u7684\u9ad8\u5ea6\u90fd\u4e00\u6837\uff0c\u53ea\u80fd\u653e\u4e00\u6735\uff0c\u4f46\u6211\u5c06\u9996\u5c3e\u90fd\u52a0\u4e86\uff0c\u5bfc\u81f4\u8f93\u51fa\u53d8\u4e3a2(\u53ef\u60dc\u6570\u636e\u6ca1\u6709)\n//\u65f6\u95f4\u590d\u6742\u5ea6O(n)\n#include <bits/stdc++.h>\nusing namespace std;\nint a[100100] = {0};\nint main(void)\n{\n    int ans = 0;\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    for (int i = 2; i < n; i++) {\n        if (a[i] == a[i+1]) a[i] = a[i-1]; //\u5982\u679c\u7b2ci\u76c6\u82b1\u4e0e\u7b2ci+1\u76c6\u82b1\u4e00\u6837\u9ad8\uff0c\u5c31\u5c06\u7b2ci\u76c6\u82b1\u53d8\u4e3a\u7b2ci-1\u76c6\u82b1\u7684\u9ad8\u5ea6\n        if (a[i] > a[i-1] && a[i] > a[i+1] || a[i] < a[i-1] && a[i] < a[i+1]) ans++; //\u5224\u65ad\u662f\u5426\u5728\u8f6c\u6298\u70b9\u4e0a\n    }\n    cout << ans+2; //\u6700\u540e\u52a0\u4e0a\u9996\u5c3e\n    return 0;\n}\n```",
        "postTime": 1502615591,
        "uid": 47421,
        "name": "star_city",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1970 \u3010\u82b1\u5320\u3011"
    }
]