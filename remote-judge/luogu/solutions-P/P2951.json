[
    {
        "content": "## Update\n- $\\texttt{2020.9.13}$ \u91cd\u65b0\u4fee\u6539\u4e86\u4e00\u4e9b\u683c\u5f0f\u548c $\\texttt{LaTeX}$ \u65b9\u9762\u7684\u95ee\u9898\uff0c\u5e76\u4fee\u6539\u4e86\u4e00\u4e9b\u63aa\u8f9e\uff0c\u5220\u9664\u4e86\u4e00\u4e9b\u5e9f\u8bdd\u3002\n\n## Content\n\u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u70b9\u3001$m$ \u6761\u8fb9\uff08\u6bcf\u6761\u8fb9\u8fb9\u6743\u4e3a $1$\uff09\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u4ece $1$ \u53f7\u70b9\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u4e2d\uff1a\n\n- \u6700\u957f\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u6700\u5927\u7684\u70b9\u7684\u7f16\u53f7\u3002\n- \u6700\u957f\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u3002\n- \u6709\u591a\u5c11\u4e2a\u70b9\u79bb $1$ \u53f7\u70b9\u7684\u8ddd\u79bb\u4e3a\u6700\u957f\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u3002\n\n**\u6570\u636e\u8303\u56f4\uff1a$2\\leqslant n\\leqslant 50000,1\\leqslant m\\leqslant 50000$\u3002**\n## Solution\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u91cc\u6bcf\u4e2a\u8fb9\u7684\u8fb9\u6743\u662f $1$\uff0c\u6240\u4ee5\u5148\u76f4\u63a5\u8dd1\u8dd1\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\n### Part 1 Dijkstra+\u5806\u4f18\u5316\n\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u7684\u662f\u5806\u4f18\u5316+ $\\texttt{dijkstra}$ \u7684\u8fc7\u7a0b\uff0c\u5177\u4f53\u601d\u8def\u53ef\u4ee5\u81ea\u5df1\u753b\u4e2a\u56fe\u52a0\u6df1\u7406\u89e3\uff1a\n\n```cpp\nvoid dj() {\n\tmemset(dis, 0x3f, sizeof(dis));\n\tdis[1] = 0;\n\tq.push(make_pair(0, 1));\n\twhile(!q.empty()) {\n\t\tint x = q.top().second;\n\t\tq.pop();\n\t\tif(vis[x])\tcontinue;\n\t\tvis[x] = 1;\n\t\tfor(int i = h[x]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to, z = e[i].v;\n\t\t\tif(dis[v] > dis[x] + z) {\n\t\t\t\tdis[v] = dis[x] + z;\n\t\t\t\tq.push(make_pair(-dis[v], v));\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u591a\u8bf4\u51e0\u53e5\u5199\u5806\u4f18\u5316+ $\\texttt{dijkstra}$\u8981\u6ce8\u610f\u7684\uff1a\n\n1. \u4e00\u5b9a\u8981\u8bb0\u5f97\u5c06 $dis$ \u6570\u7ec4\u8d4b\u521d\u503c\u4e3a 0x3f3f3f\uff01\uff08\u81f3\u4e8e vis \u6570\u7ec4\u968f\u4fbf\uff0c\u56e0\u4e3a\u5b83\u672c\u6765\u7684\u521d\u503c\u90fd\u662f0\uff09\n2. \u4e0d\u8981\u76f4\u63a5\u7528 ``memset(dis,0x3f3f3f3f,sizeof(dis))``\uff01\u56e0\u4e3a memset \u662f\u6309\u5b57\u8282\u8d4b\u503c\u7684\uff0c\u4e0d\u7136\u4f60\u7684\u7a0b\u5e8f\u4f1a\u70b8\u6389\u3002\n3. \u5224\u65ad\u662f\u5426\u904d\u5386\u8be5\u70b9\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u5c06\u4e4b\u524d\u672a\u6807\u8bb0\u7684\u70b9\u6807\u8bb0\u4e3a $1$\uff01\u4e0d\u7136\u60a8\u7684 while \u5faa\u73af\u4f1a\u4e00\u76f4\u5faa\u73af\u4e0b\u53bb\uff01\n\n### Part 2 \u6b63\u89e3\n\u597d\u4e86\uff0c\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u63a5\u4e0b\u6765\u8981\u8bb2\u7684\u662f\u5904\u7406\u6700\u5927\u6700\u77ed\u8def\u5f84\u7684\u95ee\u9898\u3002\n\n\u5176\u5b9e\u6700\u5927\u6700\u77ed\u8def\u5f84\u7684\u5904\u7406\u4e5f\u5f88\u7b80\u5355\uff0c\u9996\u5148\u904d\u5386\u4e00\u904d\u627e\u51fa\u6700\u5927\u6700\u77ed\u8def\u5f84\u7684\u8ddd\u79bb\uff0c\u518d\u904d\u5386\u770b\u6709\u8fd9\u4e2a\u6700\u5927\u6700\u77ed\u8def\u5f84\u7684\u70b9\u7684\u7f16\u53f7\u662f\u591a\u5c11\uff0c\u6700\u540e\u7edf\u8ba1\u51fa\u8fd9\u4e2a\u6700\u5927\u6700\u77ed\u8def\u5f84\u7684\u6570\u91cf\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b8c\u5168\u66b4\u529b\u3002\n\n## Code\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <iostream>\n#include <queue>\nusing namespace std;\n\nint n, m, a, b, h[100007], cnt, dis[100007], vis[100007];\nstruct edge {\n\tint v, to, nxt;\n}e[100007];\npriority_queue<pair<int, int> > q;\nvoid a_e(int u, int v) {\n\te[++cnt] = (edge){1, v, h[u]}; h[u] = cnt;\n\te[++cnt] = (edge){1, u, h[v]}; h[v] = cnt;\n}\nvoid dj() {\n\tmemset(dis, 0x3f, sizeof(dis));\n\tdis[1] = 0;\n\tq.push(make_pair(0, 1));\n\twhile(!q.empty()) {\n\t\tint x = q.top().second;\n\t\tq.pop();\n\t\tif(vis[x])\tcontinue;\n\t\tvis[x] = 1;\n\t\tfor(int i = h[x]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to, z = e[i].v;\n\t\t\tif(dis[v] > dis[x] + z) {\n\t\t\t\tdis[v] = dis[x] + z;\n\t\t\t\tq.push(make_pair(-dis[v], v));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= m; ++i) {\n\t\tscanf(\"%d%d\", &a, &b);\n\t\ta_e(a, b);\n\t}\n\tdj();\n\tint maxi = 0, ans = 0;\n\tfor(int i = 1; i <= n; ++i)\n\t\tmaxi = max(maxi, dis[i]);\n\tfor(int i = 1; i <= n; ++i)\n\t\tif(dis[i] == maxi) {\n\t\t\tprintf(\"%d\", i);\n\t\t\tbreak;\n\t\t}\n\tprintf(\" %d\", maxi);\n\tfor(int i = 1; i <= n; ++i)\n\t\tif(dis[i] == maxi)\tans++;\n\tprintf(\" %d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1572683170,
        "uid": 112917,
        "name": "Eason_AC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "## \u601d\u8def\uff1a\n\u628a\u8fb9\u6743\u503c\u770b\u62101\uff0c\u7136\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u597d\u4e86\n\uff08\u8fd9\u91cc\u7528\u7684\u662f\u5806\u4f18\u5316dijkstra\uff09\n## \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint pre[800001],now[800001],son[800001],dist[800001],V[800001],tot;\nbool vis[800001];\nint n,m,s;\nvoid read(int &x) {\n\tchar ch; bool ok;\n\tfor(ok=0,ch=getchar(); !isdigit(ch); ch=getchar()) if(ch=='-') ok=1;\n\tfor(x=0; isdigit(ch); x=x*10+ch-'0',ch=getchar()); if(ok) x=-x;\n}\nstruct node{\n    int dis;\n    int pos;\n    bool operator <( const node &x )const\n    {\n      return x.dis < dis;\n    }\n};\nvoid put(int x,int y,int z)\n{\n  pre[++tot]=now[x];\n  now[x]=tot;\n  son[tot]=y;\n  V[tot]=z;\n}\nvoid dijkstra()//\u6700\u77ed\u8def\n{\n  priority_queue<node>q;\n  for(int i=1;i<=n;i++)\n    dist[i]=9999999999;\n  dist[s]=0;\n  q.push((node){dist[s],s});\n  while(!q.empty())\n  {\n    node temp=q.top();\n    q.pop();\n    int x=temp.pos;\n    int d=temp.dis;\n    if(vis[x])\n    continue;\n    vis[x]=1;\n    for(int i=now[x];i;i=pre[i])\n    {\n      int y=son[i];\n      if(dist[y]>dist[x]+V[i])\n      {\n        dist[y]=dist[x]+V[i];\n        if(!vis[y])\n        q.push((node){dist[y],y});\n      }\n    }\n  }\n}\nint main()\n{\n  read(n),read(m);\n\t//read(s);\n\ts=1;\n  int x,y,z;\n  for(int i=1;i<=m;i++)\n    read(x),read(y),put(x,y,1),put(y,x,1);\n  dijkstra();\n\n\tint l=0;\n\tint ans=0;\n\tint cnt=0;\n\tfor(int i = 1 ; i <= n ; i++){\n  //\u7edf\u8ba1\u7b54\u6848\n\t\tif(dist[i] > l){\n\t\t\t\tl = dist[i];\n\t\t\t\tans = i;\n\t\t\t\tcnt = 1;\n\t\t}\n\t\telse if(dist[i] == l)\n\t\t\t\tcnt++;\n}\n printf(\"%d %d %d \",ans,l,cnt);\n\n}\n\n```\n",
        "postTime": 1553341599,
        "uid": 95392,
        "name": "zengxr",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "# \u6572\u9ed1\u677f\n   \u6211\u7684\u535a\u5ba2\u5730\u5740\n   \n   [\u9178\u9178\u7684\u7b14\u8bb0](https://www.luogu.org/blog/99NL/)\n\n##  \u5173\u4e8e\u8fd9\u9053\u9898\u76ee\n\n  \u9898\u76ee\u5927\u610f\u662f\u8be2\u95ee\u6211\u4eec\u4ece\u6e90\u70b9\u5230\u54ea\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u6700\u957f\u3002\n  \n  ~~\u6240\u4ee5\u7b2c\u4e00\u773c\u4f1a\u88ab\u770b\u6210\u4e8c\u5206+spfa~~\n  \n  \u4f46\u662f\u4ed4\u7ec6\u5206\u6790\u7684\u8bdd\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e9b\u8fb9\u6743\u503c\u90fd\u662f\u4e00\u5b9a\u7684\uff08\u5373\u6743\u503c\u4e3a1\uff09\uff0c\u6240\u4ee5\u54b3\u54b3\uff0c\u4e00\u79cd\u5947\u602a\u7684bfs\u5199\u6cd5\u5c31\u5b55\u80b2\u800c\u751f\u4e86\u3002\n  \n##   \u7b97\u6cd5\u6d41\u7a0b\n\n1.\u521d\u59cb\u5316\u6240\u6709\u70b9\u5230\u6e90\u70b9\u7684\u8ddd\u79bb\u4e3an-1,\u7136\u540e\u7528bfs\u5bf9\u961f\u5934\u7684\u6240\u6709\u51fa\u8fb9\u8fdb\u884c\u904d\u5386\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u8ddd\u79bb\uff0c\u5f53\u67d0\u4e2a\u8282\u70b9\u88ab\u7b2c\u4e00\u6b21\u62d3\u5c55\u5230\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u7684\u8ddd\u79bb\u5c31\u662f\u6e90\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bbQAQ\u3002\n\n2.\u7ed3\u675f\u5b8c\u7b2c\u4e00\u6b65\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u7b80\u5355\u4e86\uff0c\u7528\u4e00\u4e2amax2\u8bb0\u5f55\u6700\u957f\u8ddd\u79bb\u3002\n\n3.\u6700\u540efor\u4e00\u904d\u627e\u6700\u957f\u8ddd\u79bb\u7684\u70b9\u6570\u3002\n\n\u5b8c\u7ed3\u6492\u82b1~~~~~\n\n\u5bf9\u4e86\uff0c\u5bf9\u4e8e\u8fd9\u79cdUSACO\u7684\u9898\u76ee\uff0c\u4ee5\u4e0b\u4ee3\u7801\u4f1a\u5f97\u5230\u5341\u5206\u7684\u8f9b\u82e6\u5206\uff0c\u56e0\u4e3a\u7b2c\u4e00\u7ec4\u6570\u636e\u90fd\u662f\u6837\u4f8b\u3002\u3002\u3002\u3002\uff08\u8c8c\u4f3c\u662f\u7b7e\u5230\u5206\uff1f\uff1f\uff09\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\ncout<<\"4 2 3\";\n\treturn 0;\n}\n```\n\u4e0b\u9762\u662f\u6b63\u89e3\u4ee3\u7801+\u6ce8\u91ca\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nint n,m,step1=0;\nstruct node{\nint to;\nint last1;\nint next1;\n}map1[100005];//\u90bb\u63a5\u8868\u5b58\u56fe\n\nint max1[20005];//\u8ddd\u79bb\u6e90\u70b9\u7684\u8ddd\u79bb\nbool vis[20005];//\u662f\u5426\u88ab\u6269\u5c55\u8fc7\n\nvoid add(int x,int y)\n{\n   map1[++step1].to=y;\n   map1[step1].next1=map1[x].last1;\n   map1[x].last1=step1;\n}//\u6dfb\u52a0\u4e00\u6761\u8fb9 \nvoid bfs()//bfs\u5927\u6cd5\u597d \n{\nqueue <pair<int,int> > q;//\u7b2c\u4e00\u5173\u952e\u5b57\u662f\u5f53\u524d\u961f\u5934\u7684\u5e8f\u53f7\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u662f\u8ddd\u79bb\u6e90\u70b9\u7684\u8ddd\u79bb \nq.push(make_pair(1,0));//\u5148\u5c06\u6e90\u70b9\u5165\u961f \nmax1[1]=0;\nfor (int a=2;a<=n;a++)\n   max1[a]=n-1;//\u521d\u59cb\u5316\nwhile (!q.empty())\n{\n   int d=q.front().second;\n   int i=q.front().first;\n   q.pop();\n   vis[i]=1;\n   for (int j=map1[i].last1;j;j=map1[j].next1)\n   {\n   \t   if (vis[map1[j].to])//\u5173\u952e\uff1a\u6bcf\u4e00\u4e2a\u70b9\u53ea\u88ab\u6269\u5c55\u4e00\u6b21 \n         continue;\n      else\n      {\n      \t vis[map1[j].to]=1;\n   \t     max1[map1[j].to]=d+1;\n         q.push(make_pair(map1[j].to,d+1));\n      }\n   }\n}\n}\nint main() {\ncin>>n>>m;\nint x1,x2;\nfor (int a=1;a<=m;a++)\n{\n   cin>>x1>>x2;\n   add(x1,x2);\n   add(x2,x1);\n}//\u7531\u4e8e\u662f\u65e0\u5411\u8fb9\u6240\u4ee5\u8981\u6dfb\u52a0\u4e24\u6b21 \nbfs();\nint max2=0;\nint s=0;\nfor (int a=2;a<=n;a++)\n   if (max1[a]>max2)\n   {\n      s=a;\n      max2=max1[a];\n   }\nint k=0;\ncout<<s<<\" \"<<max2;//\u5148\u8f93\u51fa\u8ddd\u79bb\u6700\u957f\u6700\u5c0f\u70b9\u7684\u5e8f\u53f7\u548c\u957f\u5ea6 \nfor (int a=2;a<=n;a++)\n{\n   if (max1[a]==max2)\n      k++;\n}\ncout<<\" \"<<k;//\u8f93\u51fa\u6700\u957f\u8ddd\u79bb\u7684\u70b9\u7684\u4e2a\u6570\n\n    return 0;\n}\n```\n\u8dd1\u7684\u6700\u6162\u7684\u70b9\u53ea\u670928ms\uff0c\u5feb\u7684\u98de\u8d77\u3002\u3002\u3002",
        "postTime": 1550644176,
        "uid": 76806,
        "name": "99NL",
        "ccfLevel": 4,
        "title": "\u4e00\u79cd\u5947\u602a\u7684\u961f\u5217+pair\u5199\u6cd5"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u7684\u8fb9\u6743\u90fd\u4e3a1,\u7528\u4e0d\u4e0a\u6700\u77ed\u8def.\u8003\u8651\u76f4\u63a5bfs,\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53node\u8bb0\u5f55\u73b0\u5728\u5230\u4e86\u90a3\u4e2a\u70b9\u4ee5\u53ca\u5df2\u7ecf\u8d70\u7684\u6b65\u6570.\u90a3\u4e48\u53ef\u4ee5\u5148bfs\u4e00\u904d\u6c42\u51fa\u6700\u77ed\u8def,\u518dbfs\u4e00\u904d\u6c42\u51fa\u7b26\u5408\u6700\u77ed\u8def\u7684\u70b9\u7684\u6570\u76ee\u4ee5\u53ca\u8fd9\u4e9b\u70b9\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a.\n\n\u6211\u4e0a\u6765\u7b2c\u4e00\u904d\u6253\u8fd9\u4e2a\u7684\u65f6\u5019\u6ca1\u6709pop,\u7136\u540e\u961f\u9996\u6c38\u8fdc\u662f1,\u8fd8\u5361\u4e86\u621110\u5206\u949f.\n```cpp\n#include<bits/stdc++.h>\n#define nico puts(\"niconiconi!\")\nnamespace chtholly{\ntypedef long long ll;\n#define rel register ll\n#define rec register char\n#define re0 register int\n#define gc getchar\n#define pc putchar\n#define p32 pc(' ')\n#define pl puts(\"\")\ninline int read(){\n  re0 x=0,f=1;rec c=gc();\n  for (;!isdigit(c);c=gc()) f^=c=='-';\n  for (;isdigit(c);c=gc()) x=x*10+c-'0';\n  return x*(f?1:-1);\n  }\ninline void read(ll &x){\n  x=0;re0 f=1;rec c=gc();\n  for (;!isdigit(c);c=gc()) f^=c=='-';\n  for (;isdigit(c);c=gc()) x=x*10+c-'0';\n  x*=f?1:-1;\n  }\ninline int write(int x){\n  if (!x) return pc(48);\n  if (x<0) pc('-'),x=-x;\n  re0 bit[20],i,p=0;\n  for (;x;x/=10) bit[++p]=x%10;\n  for (i=p;i;--i) pc(bit[i]+48);\n  }\ninline char fuhao(){\n  rec c=gc();\n  for (;isspace(c);c=gc());\n  return c;\n  }\n}\nusing namespace chtholly;//\u8bfb\u5165\u548c\u8f93\u51fa\u4f18\u5316\nusing namespace std;\n#define to first//\u8d70\u5230\u7684\u70b9\n#define step second//\u5df2\u7ecf\u8d70\u7684\u6b65\u6570\ntypedef pair<int,int> node;//\u7528\u4e00\u4e2apair\u4ee3\u66ff\u7ed3\u6784\u4f53\nconst int karen=1e5;//\u542c\u8bf4\u8303\u56f4\u8981\u5f00\u5927,\u5f00\u4e861e5\nint n=read(),m=read();\nvector<int> lj[karen|10];\nint p=n,ans,da,vis[karen|10];\n//\u6ce8\u610f\u8fd9\u4e09\u4e2a\u53d8\u91cf\u5206\u522b\u662f\u7b26\u5408\u6761\u4ef6\u5e8f\u53f7\u6700\u5c0f\u7684\u70b9\u7684\u7f16\u53f7,\u7b26\u5408\u6700\u957f\u8def\u5f84\u7684\u70b9\u7684\u6570\u91cf,\u6700\u957f\u7684\u8def\u5f84.\nvoid bfs()\n{\nqueue<node> q;//\u961f\u5217\nq.push(node(1,0));//\u628a1\u653e\u8fdb\u53bb,\u5e76\u6807\u8bc61\u5df2\u7ecf\u8d70\u8fc7\u4e86.\nvis[1]=1;\nfor (;!q.empty();)\n  {\n  node u=q.front();q.pop();\n  da=u.step;//\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u76f4\u63a5\u628astep\u8d4b\u503c\u7ed9da\u5462?\u56e0\u4e3a\u662fbfs,\u663e\u7136\u6700\u5c11\u7684\u6b65\u6570\u4e00\u5b9a\u662f\u9012\u589e\u7684.\n  for (int i:lj[u.to]) if (!vis[i])\n    vis[i]=1,q.push(node(i,u.step+1));\n  }//\u6c42\u51fa\u4e86\u6700\u957f\u7684\u8def\u5f84\nq.push(node(1,0)),memset(vis,0,sizeof vis);\nfor (vis[1]=1;!q.empty();)//\u91cd\u590d\u64cd\u4f5c\u518d\u6765\u4e00\u904d\n  {\n  node u=q.front();q.pop();\n  if (u.step==da) ++ans,p=min(p,u.to);//\u627e\u5230\u6700\u77ed\u7684\u8def\u5f84\u7b49\u4e8e\u5927\u7684\u6240\u6709\u70b9,\u5e76\u53d6\u5176\u4e2d\u7684\u6700\u5c0f\u503c.\n  for (int i:lj[u.to]) if (!vis[i]) \n    vis[i]=1,q.push(node(i,u.step+1));\n  }\n}\n\nint main()\n{\nfor (;m--;)\n  {\n  re0 u=read(),v=read();\n  lj[u].push_back(v);\n  lj[v].push_back(u);\n  }\nbfs();\nwrite(p),p32,write(da),p32,write(ans);//\u6700\u540e\u6ce8\u610f\u8f93\u51fa\u7684\u987a\u5e8f.\n}//Thank you!\n```",
        "postTime": 1522213360,
        "uid": 49371,
        "name": "Fuko_Ibuki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "# \u9707\u60ca\u554a\uff0c\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u8c01\u6c34SPFA\uff1f\uff1f\uff01\n\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u518d\u5bf9\u7b54\u6848$dis$\u6570\u7ec4\u5904\u7406\u5373\u53ef\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,x,y;\nint ver[100010],Next[100010],head[20010],tot=1;\nbool v[100010];\nint d[100010];\nint q[111111],l=1,r;\nvoid add(int x,int y)\n{\n\tver[++tot]=y;\n\tNext[tot]=head[x];\n\thead[x]=tot;\n}\nvoid SPFA()\n{\n\tq[++r]=1;\n\tmemset(d,0x3f,sizeof d);\n\td[1]=0;\n\twhile(l<=r)\n\t{\n\t\tint x=q[l++];\n\t\tv[x]=0;\n\t\tfor(int i=head[x];i;i=Next[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(d[y]>d[x]+1)\n\t\t\t{\n\t\t\t\td[y]=d[x]+1;\n\t\t\t\tif(!v[y])q[++r]=y,v[y]=1;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&m);\n\twhile(m--)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tSPFA();\n\tint ans1=0,ans2=0,ans3=0;\n//\tfor(int i=1;i<=n;i++)\n//\tprintf(\"%d \",d[i]);puts(\"\");\n\tfor(int i=1;i<=n;i++)\n\tans1=max(ans1,d[i]);\n\tfor(int i=1;i<=n;i++)\n\tif(d[i]==ans1)\n\t{\n\t\tif(!ans2)\n\t\tans2=i;\n\t\tans3++;\n\t}\n\tprintf(\"%d %d %d\",ans2,ans1,ans3);\n}\n```\n",
        "postTime": 1569401106,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "# **Dijkstra+\u5806\u4f18\u5316**\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u4f7f\u7528\u6700\u77ed\u8def\u505a\uff0c\u7531\u4e8e\u8fb9\u6743\u4e3a\u4e00\uff0c\u4e5f\u53ef\u4ee5\u5f53\u505aBFS.\u4f46\u662f\u770b\u6570\u636e\u8303\u56f4\uff0c\u53ef\u4ee5\u5f53\u505a\u4e00\u9053\u7ec3\u4e60\u5806\u4f18\u5316Dijkstra\u7684\u6a21\u677f\u3002\n\npair\u5728\u4f18\u5148\u961f\u5217\u4e2d\u9ed8\u8ba4\u6309\u7167\u7b2c\u4e00\u7ef4\u5347\u5e8f\u6392\u5e8f\uff0c\u6240\u4ee5top\u4e3a\u8ddd\u79bb\u6700\u957f\u7684\u70b9\uff1b\u800c\u6211\u4eec\u8981\u6c42\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u8981\u628a\u8fb9\u6743\u7684\u76f8\u53cd\u6570\u63d2\u5165\u961f\u5217\n\n\u8fd8\u6709\uff0c\u7531\u4e8e\u6b63\u53cd\u90fd\u8981\u5b58\u8fb9\uff0c\u6240\u4ee5\u5b58\u8fb9\u6570\u7ec4\u8981\u5f00\u52302*m\u4ee5\u4e0a\uff0c\u4e0d\u7136\u4f1aRE\u3002\u3002\u3002\n```\n\n\n#include<iostream>\n#include<cstdio>\n#include<queue>//\u4f7f\u7528STL\u53ef\u4ee5\u964d\u4f4e\u7801\u91cf\n#include<algorithm>\nusing namespace std;\nstruct node{\n\tint v;\n\tint t;\n}w[100010];//node\u7ed3\u6784\u4f53\u5b58\u50a8\u56fe\u4e2d\u7684\u8fb9\npriority_queue<pair<int,int> >p;//pair\u7684\u7b2c\u4e00\u7ef4\u5b58\u50a8\u8fb9\u6743\uff0c\u7b2c\u4e8c\u7ef4\u5b58\u50a8\u8fb9\u7684\u5e8f\u53f7(STL\u4f18\u5148\u961f\u5217)\n(pair\u5728\u4f18\u5148\u961f\u5217\u4e2d\u9ed8\u8ba4\u4ee5\u7b2c\u4e00\u7ef4\u5347\u5e8f\uff0c\u6240\u4ee5\u6bcf\u6b21\u63d2\u5165\u8fb9\u6743\u76f8\u53cd\u6570\u53d6top,top\u662f\u961f\u9996)\nint dis[100010],n,s=0,m;//dis[i]\u5b58\u50a8\u4ece\u7b2c\u4e00\u4e2a\u70b9\u5230\u7b2ci\u4e2a\u70b9\u7684\u8ddd\u79bb,s\u8868\u793a\u603b\u8fb9\u6570\nint vis[100010],f[100010];//f[]\u5b58\u50a8\u90bb\u63a5\u8868\uff0cvis[i]\u8868\u793a\u7b2ci\u4e2a\u70b9\u662f\u5426\u5df2\u7ecf\u6c42\u5f97\u6700\u77ed\u8def\nvoid add(int x,int y){\n\ts++;//\u8fb9\u6570\n\tw[s].v=y;\n\tw[s].t=f[x];\n\tf[x]=s;\n}//\u7531\u4e8e\u70b9\u6570\u9650\u5236\uff0c\u4f7f\u7528\u90bb\u63a5\u8868\u5b58\u56fe\nvoid dijkstra(){\n\tdis[1]=0;\n\tp.push(make_pair(0,1));//\u63d2\u5165\u7b2c\u4e00\u4e2a\u70b9\n\tint d,x;\n\twhile(!p.empty()){\n\t\td=p.top().second;\n\t\tp.pop();\n\t\tif(vis[d]!=0)\n\t\t\tcontinue;//\u5982\u679c\u5df2\u7ecf\u6c42\u5f97\u6700\u77ed\u8def\uff0c\u5219continue\n\t\tvis[d]=1;//\u6807\u8bb0\n\t\tfor(int i=f[d];i!=0;i=w[i].t){\n\t\t\tx=w[i].v;\n\t\t\tif(dis[x]>dis[d]+1){\n\t\t\t\tdis[x]=dis[d]+1;\n\t\t\t\tp.push(make_pair(-dis[x],x));//\u63d2\u5165\u76f8\u53cd\u6570\n\t\t\t}//\u8fb9\u6743\u4e3a\u4e00\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tint u,v;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>u>>v;\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}//\u7531\u4e8e\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u6b63\u53cd\u90fd\u5efa\u8fb9\n\tfor(int i=1;i<=n;i++)\n\t\tdis[i]=0x3fffffff;//\u8d4b\u521d\u503c\n\tdijkstra();\n\tint x,y=-1,z=0;\n\tfor(int i=1;i<=n;i++){\n//\t\tcout<<dis[i]<<\" \";\n\t\tif(dis[i]==y)\n\t\t\tz++;\n\t\tif(dis[i]>y){\n\t\t\tx=i;\n\t\t\ty=dis[i];\n\t\t\tz=1;\n\t\t}//\u66f4\u65b0\u7b54\u6848\n\t}\n//\tcout<<endl;\n\tcout<<x<<\" \"<<y<<\" \"<<z;\n\treturn 0;\n}\n```\n",
        "postTime": 1558443545,
        "uid": 118433,
        "name": "LB_tq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "# \u88f8\u7684\u5355\u6e90\u6700\u77ed\u8def\n\n\u6807\u7b7e SPFA \uff1f\n\n~~\u4e0d\u662f\u6b7b\u4e86\u5417~~\n\n\u5806\u4f18\u5316 dij\nand\npair+\u94fe\u5f0f\u524d\u5411\u661f\u4e13\u5c5e\u798f\u5229\n\n\u53cc\u500d\u7ecf\u9a8c: [P3371](https://www.luogu.org/problem/P3371)\u3001[P4779](https://www.luogu.org/problem/P4779)\n\n\u6211\u7528\u4e86\u4e00\u4e2a pq \u6765\u5b58\u7b54\u6848\uff0c\u89e3\u91ca\u5728\u4ee3\u7801\u91cc\n\nCode\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define ll long long\n#define f(i,a,b) for(int (i)=(a);i<=(b);++i)\n#define mk(a,b) make_pair((a),(b))\n#define P pair<ll,ll>\n#define s(x) scanf(\"%lld\",&(x))\n#define p(x) prllf(\"%lld \",(x))\n#define fi first\n#define se second\n\n//define\u4f18\u5316  -> \u5b9e\u9645\u662f\u624b\u61d2  \n\nstruct Node {\n\tll to,next,disv;\n}e[200010];\n\nll h[200010],n,m,tot;\nll dis[200010];\n\nbool used[200010];\n\npriority_queue <P,vector<P>,greater<P> > q;\n\nvoid add_edge(ll u,ll v,ll w) {\n\t++tot;\n\te[tot].to=v;\n\te[tot].next=h[u];\n\te[tot].disv=w;\n\th[u]=tot;\n}\n//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe \n\nvoid input() {\n\ts(n);s(m);\n\tf(i,1,m) {\n\t\tll u,v;\n\t\ts(u);s(v);\n\t\t//\u628a\u8fb9\u6743\u770b\u505a\u662f 1 \n\t\tadd_edge(u,v,1);\n\t\tadd_edge(v,u,1);\n\t\t//\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\u9898\u76ee\u4e2d\u8bf4\u7684\u662f\u53cc\u5411\u8fb9\uff0c\u6240\u4ee5\u8fde\u4e24\u6b21 \n\t}\n}\n\nvoid Dijkstra() {\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[1]=0;\n\t//\u521d\u59cb\u5316 and memset\u4e00\u5b9a\u8981\u521d\u59cb\u5316\u4e3a 0x3f \n\tq.push(mk(0,1));\n\t//make_pair \u5165\u961f \n\twhile(!q.empty()) {\n\t\tll u=q.top().se;\n\t\tq.pop();\n\t\tif(used[u]) continue;//\u5982\u679c\u5df2\u7ecf\u66f4\u65b0\u8fc7\u5c31\u4e0d\u5728\u66f4\u65b0 \n\t\tused[u]=true;\n\t\tfor(ll i=h[u];i;i=e[i].next) {\n\t\t\tll v=e[i].to;\n\t\t\tif(dis[v]>dis[u]+e[i].disv) {\n\t\t\t\tdis[v]=dis[u]+e[i].disv;//\u66f4\u65b0 \n\t\t\t\tq.push(mk(dis[v],v));//make_pair \u5165\u961f \n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid output() {\n\tDijkstra();\n\tpriority_queue <ll,vector<ll>,greater<ll> >pq;//\u5b58\u7b54\u6848 \n\tll maxn=-INT_MAX;//\u6700\u5927\u503c \n\tf(i,1,n){\n\t\tif(dis[i]>maxn) maxn=dis[i];//\u66f4\u65b0maxn \n\t}\n\tf(i,1,n) {\n\t\tif(dis[i]==maxn) pq.push(i);//\u8f93\u51fa\u6700\u5c0f\u70b9\u7684\u7f16\u53f7 \n\t}\n\tll now=pq.top();//\u6700\u5c0f\u70b9\u7684\u7f16\u53f7 \n\tll siz=pq.size();//\u70b9\u7684\u4e2a\u6570 \n\tll disv1=dis[now];//\u8ddd\u79bb \n\tcout<<now<<\" \"<<disv1<<\" \"<<siz<<endl;//\u8f93\u51fa \n}\n\nint main() {\n\tinput();\n\toutput();\n\t//\u5e72\u51c0\u6574\u6d01\u7684 int main() \n\treturn 0;\n}\n```\n",
        "postTime": 1573213868,
        "uid": 99430,
        "name": "Leaved_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "### dij+priority_queue\uff08\u6ca1\u8bdd\u8bf4\uff09\n\u5176\u5b9e\u5c31\u662f\u4e2a\u88f8\u9898\u3002\u3002\u3002\n\n\u4e3b\u8981\u662f\u4ecb\u7ecd\u4e00\u4e2a\u597d\u4e1c\u897f\n#### typedef pair<int,int>p;\n\u8fd9\u4e2a\u4e1c\u4e1c\u5f88\u597d\u7528\n\n\u76f8\u5f53\u4e8e\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53p\uff1b\n\np\u91cc\u6709\u4e24\u4e2a\u6210\u5458p.first\u548cp.second\uff0c\u90fd\u662fint\u578b\uff1b\n\n\u5728\u4f18\u5148\u961f\u5217\u4e2d\u9ed8\u8ba4\u6309\u7167\u7b2c\u4e00\u4e2a\u6210\u5458\u6392\u5e8f\uff0c\u5373q.first.\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,u,v,k=1,ans,place,cnt;\nint head[20000+5],d[20000+5],in[20000+5];//in\u7528\u6765\u8bb0\u5f55\u5165\u5ea6\uff0c\u4e07\u4e00\u6709\u53bb\u4e0d\u5230\u7684\u8c37\u4ed3\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\uff08\u867d\u7136\u597d\u50cf\u6ca1\u6709\uff09\nbool visit[20000+5];\ntypedef pair<int,int>p;//\u8fd9\u662f\u4e2a\u597d\u4e1c\u897f\npriority_queue<p,vector<p>,greater<p> >q;\n\nstruct graph{\n\tint v,next;\n}e[50000*2+5];\n\nvoid input(int u,int v)\n{\n\te[k].next=head[u];\n\te[k].v=v;\n\thead[u]=k++;\n\tin[v]++;\n\treturn;//\u524d\u5411\u661f\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tinput(u,v);\n\t\tinput(v,u);//\u65e0\u5411\u56fe\u53cc\u5411\u5b58\n\t}\n\tmemset(d,0x3f,sizeof(d));\n\td[1]=0;\n\tq.push(make_pair(0,1));\n\twhile(!q.empty())\n\t{\n\t\tint now=q.top().second;\n\t\tq.pop();\n\t\tif(visit[now]) continue;\n\t\tvisit[now]=true;\n\t\tfor(int i=head[now];i!=0;i=e[i].next)\n\t\t\tif(d[e[i].v]>d[now]+1)\n\t\t\t{\n\t\t\t\td[e[i].v]=d[now]+1;\n\t\t\t\tq.push(make_pair(d[e[i].v],e[i].v));\n\t\t\t}\n\t}\t\n\tfor(int i=2;i<=n;i++)\n\t\tif(d[i]>ans&&in[i]!=0)//in\u7684\u4f5c\u7528\u5728\u8fd9\u91cc\u4f53\u73b0\uff08\u6ca1\u7528\uff09\n\t\t{\n\t\t\tans=d[i];\n\t\t\tplace=i;\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(d[i]==ans) cnt++;\n\tprintf(\"%d %d %d\\n\",place,ans,cnt);\n\treturn 0;\n}\n```\n",
        "postTime": 1570802612,
        "uid": 224358,
        "name": "\u6e05\u5e73\u4e50",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u8ba9\u4f60\u6c42\u8fd9\u5f20\u56fe\u7684\u6700\u77ed\u8def\u7684\u6700\u5927\u503c$\\text{weight}$\u3001\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u4e3a$\\text{weight}$\u7684**\u7f16\u53f7\u6700\u5c0f\u7684**\u70b9\uff0c\u548c\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u4e3a $\\text{weight}$ \u4e00\u5171\u6709\u591a\u5c11\u4e2a\u70b9\n\n\u65b9\u6cd5\uff1a\n\n\u5bf9\u4e8e\u524d\u4e24\u4e2a\u6570\uff0c\u76f4\u63a5\u8dd1\u4e00\u904d $\\text{Dijkstra}$\uff0c\u626b\u4e00\u904d $\\text{dis}$ \u6570\u7ec4\u5e76\u66f4\u65b0\u6700\u5927\u503c\u5c31\u884c\u4e86\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u6570\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a`map<int, int> mp`\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u6700\u77ed\u8def\u5f84\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6700\u540e\u8f93\u51fa\u5373\u53ef\n\n\u8dd1\u7684\u8fd8\u633a\u5feb\u7684 \u53ea\u670991ms\n\n```cpp\n/* -- Basic Headers -- */\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#include <queue>\n#include <map>\n\n/* -- Defined Functions -- */\n#define For(a,x,y) for (int a = x; a <= y; ++a)\n#define Forw(a,x,y) for (int a = x; a < y; ++a)\n#define Bak(a,y,x) for (int a = y; a >= x; --a)\n\nnamespace FastIO {\n    inline int getint() {\n        int s = 0, x = 1;\n        char ch = getchar();\n        while (!isdigit(ch)) {\n            if (ch == '-') x = -1;\n            ch = getchar();\n        }\n        while (isdigit(ch)) {\n            s = s * 10 + ch - '0';\n            ch = getchar();\n        }\n        return s * x;\n    }\n    inline void __basic_putint(int x) {\n        if (x < 0) {\n            x = -x;\n            putchar('-');\n        }\n        if (x >= 10) __basic_putint(x / 10);\n        putchar(x % 10 + '0');\n    }\n    \n    inline void putint(int x, char external) {\n        __basic_putint(x);\n        putchar(external);\n    }\n}\n\nnamespace Solution {\n    const int MAXN = 20000 + 10;\n    const int MAXM = 50000 + 10;\n    \n    struct Node {\n        int nweight, now;\n        \n        Node() { nweight = now = 0; }\n        \n        bool operator < (const Node &that) const {\n            return nweight > that.nweight;\n        }\n        // \u5e76\u4e0d\u60f3\u7528pair\uff0c\u4e8e\u662f\u81ea\u5df1\u5199\u4e86\u4e2a\u51fa\u6765\n    };\n    \n    struct Edge {\n        int now, weight, next;\n    } edge[MAXM * 2]; // \u53cc\u5411\u8fb9\n    \n    std::map<int, int> mp;\n    \n    int n, m, head[MAXN], dis[MAXN], cnt, ans, w = -233;\n    \n    inline void addEdge(int prev, int next, int weight) {\n        edge[++cnt].now = next;\n        edge[cnt].weight = weight;\n        edge[cnt].next = head[prev];\n        head[prev] = cnt;\n    }\n    \n    inline Node NewNode(int nowWeight, int now) {\n        Node tmp;\n        tmp.nweight = nowWeight;\n        tmp.now = now;\n        return tmp;\n    }\n    // \u5e76\u4e0d\u60f3\u7528\u6784\u9020\u51fd\u6570\n    \n    inline void SPFA() {\n    \t// \u770b\u4f3c\u662f SPFA\uff0c\u5b9e\u5219\u662f Dijkstra\n        memset(dis, 0x7f, sizeof(dis));\n        std::priority_queue<Node> q;\n        q.push(NewNode(0, 1));\n        dis[1] = 0;\n        while (!q.empty()) {\n            Node NowNode = q.top();\n            q.pop();\n            int now = NowNode.now;\n            for (int e = head[now]; e; e = edge[e].next) {\n                int to = edge[e].now;\n                if (dis[to] > dis[now] + edge[e].weight) {\n                    dis[to] = dis[now] + edge[e].weight;\n                    q.push(NewNode(dis[to], to));\n                }\n            }\n        }\n    }\n}\n\nsigned main() {\n    using namespace Solution;\n    using FastIO::getint;\n    n = getint();\n    m = getint();\n    For (i, 1, m) {\n        int prev = getint();\n        int next = getint();\n        int weight = 1;\n        addEdge(prev, next, weight);\n        addEdge(next, prev, weight);\n    }\n    SPFA();\n    for (int i = 1; i <= n; ++i) {\n        if (dis[i] == 0x7f7f7f7f) continue;\n        ++mp[dis[i]];\n        // \u8ba9\u5bf9\u5e94\u7684\u8def\u5f84\u957f\u5ea6\u51fa\u73b0\u6b21\u6570 + 1\n        if (dis[i] > w) {\n            w = dis[i];\n            ans = i;\n            // \u66f4\u65b0\u7b54\u6848\n        }\n    }\n    printf(\"%d %d %d\\n\", ans, w, mp[w]);\n    // ans \u4e3a\u70b9\u7f16\u53f7\uff0cw \u4e3a\u5bf9\u5e94\u8def\u5f84\u957f\u5ea6\uff0c \n    // mp[w] \u4e3a\u5bf9\u5e94\u8def\u5f84\u957f\u5ea6\u51fa\u73b0\u6b21\u6570\n    return 0;\n}\n\n```\n",
        "postTime": 1543644455,
        "uid": 56626,
        "name": "HDWR",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "SPFA? \u5f53\u7136\u53ef\u4ee5\u3002\n\n## \u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u53bb[\u6211\u7684\u535a\u5ba2\u56ed](https://www.cnblogs.com/xiongchongwen/p/11857605.html)\u770b\uff08\u535a\u5ba2\u56ed\u4e2d\u6709\u65e0\u6ce8\u91ca\u7248\u7684cpp\uff09\u3002\n\n**SPFA\u9002\u7528\u8303\u56f4\uff1a**\n\n\u7ed9\u5b9a\u7684\u56fe\u5b58\u5728\u8d1f\u6743\u8fb9\uff08\u5c3d\u7ba1\u8fd9\u9898\u6ca1\u6709\u8d1f\u6743\u8fb9\uff09\uff0c\u8fd9\u65f6\u7c7b\u4f3cDijkstra\u7b49\u7b97\u6cd5\u4fbf\u6ca1\u6709\u4e86\u7528\u6b66\u4e4b\u5730\uff0c\u800cBellman-Ford\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u53c8\u8fc7\u9ad8\uff0cSPFA\u7b97\u6cd5\u4fbf\u6d3e\u4e0a\u7528\u573a\u4e86\u3002 \u6211\u4eec\u7ea6\u5b9a\u6709\u5411\u52a0\u6743\u56feG\u4e0d\u5b58\u5728\u8d1f\u6743\u56de\u8def\uff0c\u5373\u6700\u77ed\u8def\u5f84\u4e00\u5b9a\u5b58\u5728\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6267\u884c\u8be5\u7b97\u6cd5\u524d\u505a\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\uff0c\u4ee5\u5224\u65ad\u662f\u5426\u5b58\u5728\u8d1f\u6743\u56de\u8def\uff0c\u4f46\u8fd9\u4e0d\u662f\u6211\u4eec\u8ba8\u8bba\u7684\u91cd\u70b9\u3002\n\n**\u7b97\u6cd5\u601d\u60f3\uff1a**\n\n\u6211\u4eec\u7528\u6570\u7ec4d\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\uff0c\u7528\u90bb\u63a5\u8868\u6765\u5b58\u50a8\u56feG\u3002\u6211\u4eec\u91c7\u53d6\u7684\u65b9\u6cd5\u662f\u52a8\u6001\u903c\u8fd1\u6cd5\uff1a\u8bbe\u7acb\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u7684\u961f\u5217\u7528\u6765\u4fdd\u5b58\u5f85\u4f18\u5316\u7684\u7ed3\u70b9\uff0c\u4f18\u5316\u65f6\u6bcf\u6b21\u53d6\u51fa\u961f\u9996\u7ed3\u70b9u\uff0c\u5e76\u4e14\u7528u\u70b9\u5f53\u524d\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u5bf9\u79bb\u5f00u\u70b9\u6240\u6307\u5411\u7684\u7ed3\u70b9v\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\uff0c\u5982\u679cv\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u6709\u6240\u8c03\u6574\uff0c\u4e14v\u70b9\u4e0d\u5728\u5f53\u524d\u7684\u961f\u5217\u4e2d\uff0c\u5c31\u5c06v\u70b9\u653e\u5165\u961f\u5c3e\u3002\u8fd9\u6837\u4e0d\u65ad\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u7ed3\u70b9\u6765\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\uff0c\u76f4\u81f3\u961f\u5217\u7a7a\u4e3a\u6b62\u3002\n\n**\u89e3\u91ca**\u5728\u4ee3\u7801\u4e2d\u3002\n\n\u90a3\u4e48\uff0c\u4ee3\u7801:\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<queue>\nusing namespace std;\nint n,m,tot;\nint head[20006],ver[500006],edge[500006],next[500006],d[20006];\nqueue<int> q;\nbool v[20006];\nint maxx=-2147483647,sum,where;\nint read(){//\u5feb\u8bfb\n\tint a=0,b=1;\n\tchar ch=getchar();\n\twhile((ch<'0'||ch>'9')&&(ch!='-')){\n\t\tch=getchar();\n\t}\n\tif(ch=='-'){\n\t\tb=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\ta=a*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn a*b;\n}\nvoid add(int x,int y,int z){//\u5efa\u8fb9\n\tver[++tot]=y;\n\tedge[tot]=z;\n\tnext[tot]=head[x];\n\thead[x]=tot;\n}\nvoid spfa(){\n\tmemset(d,0x3f,sizeof(d));// dist\u6570\u7ec4\n\tmemset(v,0,sizeof(v));// \u662f\u5426\u5728\u961f\u5217\u4e2d\n\td[1]=0;\n\tv[1]=1;\n\tq.push(1);\n\twhile(q.size()){// \u53d6\u51fa\u961f\u5934\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tv[x]=0;// \u626b\u63cf\u6240\u6709\u51fa\u8fb9\n\t\tfor(int i=head[x];i;i=next[i]){\n\t\t\tint y=ver[i],z=edge[i];\n\t\t\tif(d[y]>d[x]+z){// \u66f4\u65b0\uff0c\u628a\u65b0\u7684\u4e8c\u5143\u7ec4\u63d2\u5165\u5806\n\t\t\t\td[y]=d[x]+z;\n\t\t\t\tif(!v[y]){\n\t\t\t\t\tq.push(y);\n\t\t\t\t\tv[y]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++){// \u6784\u5efa\u90bb\u63a5\u8868\n\t\tint x,y;\n\t\tx=read(),y=read();\n\t\t// \u65e0\u5411\u56fe\u6b63\u53cd\u90fd\u9700\u8981\u5efa\u8fb9\n\t\tadd(x,y,1);// \u5047\u5b9a\u8ddd\u79bb\u4e3a1\n\t\tadd(y,x,1);// \u5047\u5b9a\u8ddd\u79bb\u4e3a1\n\t}\n\tspfa();// \u6c42\u5355\u6e90\u6700\u77ed\u8def\u5f84\n\tfor(int i=1;i<=n;i++){\n\t\tif(d[i]>maxx){// \u67e5\u627e\u6700\u8fdc\u8ddd\u79bb\n\t\t\tmaxx=d[i];\n\t\t\twhere=i;// \u8bb0\u5f55\u6700\u5c0f\u7684\u7684\u4e00\u4e2a\u4f4d\u7f6e\n\t\t}\n\t}\n\tprintf(\"%d %d \",where,maxx);// \u8f93\u51fa\u4f4d\u7f6e\u548c\u6700\u5927\u503c\n\tfor(int i=1;i<=n;i++){// \u7edf\u8ba1\u4e0emaxx\u8ddd\u79bb\u76f8\u7b49\u7684\u70b9\u7684\u4e2a\u6570\n\t\tif(d[i]==maxx){\n\t\t\tsum++;\n\t\t}\n\t}\n\tprintf(\"%d\",sum);// \u8f93\u51fa\u4e2a\u6570\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1573716007,
        "uid": 37086,
        "name": "\u718a\u5d07\u6587",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2951"
    },
    {
        "content": "### \u6700\u77ed\u8def\u7684\u6a21\u677f\u9898\n\u62ff\u5230\u4e00\u9053\u9898\uff0c\u6211\u4eec\u5148\u770b\u6570\u636e\u8303\u56f4 **n<=20000,m<=50000**\n\n\u5f88\u663e\u7136\uff0cFloyd O(n\u00b2)\u548c Bell-man O\uff08mn\uff09 \u7b97\u6cd5\u7edd\u5bf9\u4f1a\u8d85\u65f6\uff0c\u90a3\u4e48\u9009\u62e9\u63a5\u53ea\u5269\u4e0b SPFA \u548c Dij \u4e86\uff0c\u4f46\u662f Dij \u5fc5\u987b\u5199\u4f18\u5316\uff0c\u90a3\u4e48\u5c31\u9009\u62e9\u4e86\u7b80\u5355\u76f4\u63a5\u7684 SPFA\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct eage{\n\tint v,last,w;\n}e[100005];//\u56fe\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u6570\u7ec4\u5f00\u53cc\u500d\nint k=1,head[20005];\nint n,m,d[20005],vis[20005],ans1,ans2,ans3;\n\nvoid add(int u,int v,int w)\n{\n\te[k].last=head[u];\n\te[k].w=w;\n\te[k].v=v;\n\thead[u]=k++;\n}\n```\n\u8fd9\u4e0a\u9762\u5c31\u662f\u6807\u51c6\u7684\u94fe\u8868\u5b58\u56fe\n```\nint main()\n{\n\tcin>>n>>m;\n\tmemset(head,-1,sizeof(head));\n\tmemset(d,0x3f,sizeof(d));\n```\n\u521d\u59cb\u5316\n```\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a,b,1);\n\t\tadd(b,a,1);\n\t}\n\tqueue<int>q;\n\tq.push(1);\n\td[1]=0;\n\tvis[1]=true;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=false;\n\t\tfor(int i=head[u];i!=-1;i=e[i].last)\n\t\t{\n\t\t\tint v=e[i].v,w=e[i].w;\n\t\t\tif(d[v]>d[u]+w)\n\t\t\t{\n\t\t\t\td[v]=d[u]+w;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n```\n\u4e0a\u9762\u5c31\u662f\u6807\u51c6\u7684SPFA\u6a21\u677f\uff0c\u4f46\u662f\u8fd9\u91cc\u5c11\u6253\u4e86\u67d0\u4e9b\u4e1c\u897f\uff08\u4f46\u662f\u8fd8\u662fAK\u4e86\uff0c\u6570\u636e\u6709\u70b9\u6c342333\uff09\n```\n\tfor(int i=1;i<=n;i++)\n\t\tif(d[i]>ans2)\n\t\t{\n\t\t\tans2=d[i];\n\t\t\tans1=i;\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(d[i]==ans2)\n\t\t\tans3++;\n\t}\n\tcout<<ans1<<\" \"<<ans2<<\" \"<<ans3<<endl;\n\treturn 0;\n}\n```\n\u8f93\u51fa\u6ce8\u610f\u4e00\u4e0b\u4e0d\u662f\u4e00\u822c\u6700\u77ed\u8def\u95ee\u9898\u7684\u8f93\u51fa",
        "postTime": 1570795284,
        "uid": 224229,
        "name": "Caicz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "~~\u597d\u4e00\u5934\u53ef\u7231\u7684\u5976\u725b~~\n\n\u9996\u5148\u8bfb\u9898\uff0c\u672c\u9898\u6c42\u7684\u662f\u6700\u77ed\u8def\u5f84\u7684\u6700\u5927\u503c\uff0c\u800c\u4e0d\u662f\u6700\u957f\u8def\u5f84~~\u6211\u8fd8\u5728\u60f3\u7740\u5565\u7b97\u6cd5\u80fd\u6c42\u6700\u957f\u8def~~\uff0c\u8fd9\u4e0d\u5c31\u5f88\u7b80\u5355\u4e86\u561b.Dijkstra\u8dd1\u4e00\u904d\uff0c\u6c42\u51faFJ\u6240\u5728\u7684\u4e00\u53f7\u8c37\u4ed3\u5230\u5404\u4e2a\u8c37\u4ed3\u7684\u6700\u77ed\u8def\uff0c\u7136\u540e\u904d\u5386\u4e00\u904d\u6c42\u51fa\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\uff0c\u518d\u4ecen\u52301\u904d\u5386\u4e00\u904d\u6c42\u51fa\u6700\u5c0f\u7f16\u53f7\u4ee5\u53ca\u603b\u6570\n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Edge{\n\tint next;\n\tint to;\n\tint dis;\n}edge[100005];\npriority_queue<pair<int,int> > q;  //\u5806\u4f18\u5316\nint n,m,x,y,cnt=0,ans=0,id,dist=0;\nint head[100005],d[20005],vis[20005];\nvoid add(int from,int to,int dis){  //\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n\tedge[++cnt].next=head[from];\n\tedge[cnt].to=to;\n\tedge[cnt].dis=dis;\n\thead[from]=cnt;\n}\nvoid Dijkstra(){\n\td[1]=0;\n\tq.push(make_pair(0,1));\n\twhile(!q.empty()){\n\t\tint a=q.top().second;\n\t\tq.pop();\n\t\tif(vis[a]) continue;\n\t\tvis[a]=1;\n\t\tfor(int i=head[a];i;i=edge[i].next)\n\t\t\tif(d[edge[i].to]>d[a]+edge[a].dis){\n\t\t\t\td[edge[i].to]=d[a]+edge[a].dis;\n\t\t\t\tq.push(make_pair(-d[edge[i].to],edge[i].to));  //\u5229\u7528\u76f8\u53cd\u6570\u628a\u5927\u6839\u5806\u53d8\u4e3a\u5c0f\u6839\u5806\n\t\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) dist=max(dist,d[i]);\n\tfor(int i=n;i>=1;i--)\n\t\tif(d[i]==dist) ans++,id=i;\n}\nint main(){\n\tmemset(vis,0,sizeof(vis));\n\tmemset(d,0x3f,sizeof(d));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){  //\u8f93\u5165\uff0c\u5b58\u8fb9\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y,1),add(y,x,1);\n\t}\n\tDijkstra();\n\tprintf(\"%d %d %d\",id,dist,ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1566639499,
        "uid": 189438,
        "name": "\u5149\u9634\u4e14\u542b\u7b11",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "###### \u6765\u6c34\u4e00\u7bc7\u5806\u4f18\u5316\u8fea\u6770\u65af\u7279\u62c9\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <vector>\n#include <queue>\nusing namespace std;\nconst int N=7000;\ninline int read()\n{\n\tint res=0;\n\tchar ch;\n\twhile(isspace(ch=getchar()));\n\tdo res=res*10+ch-'0';\n\twhile(isdigit(ch=getchar()));\n\treturn res;\n}\nconst int inf=99999999;\nint n,m,s,t,tot,x,y,d;\nint dis[N];\nstruct pp{\n\tint to,nxt,dis,from;\n}a[N<<2];\nint head[N<<2];\ninline void add(int u,int v,int di)\n{\n\ta[++tot].nxt=head[u];\n\thead[u]=tot;\n\ta[tot].to=v;\n\ta[tot].dis=di;\n\ta[tot].from=u;\n}\n\nstruct node{\n\tint u,d;\n\tbool operator<(const node&bb)const{\n\t\treturn d>bb.d;\n\t}\n};\ninline void dij()\n{\n\tfor(int i=1;i<=n;i++)dis[i]=inf;\n\tdis[s]=0;\n\tpriority_queue<node>q;\n\tq.push(node{s,0});\n\twhile(!q.empty())\n\t{\n\t\tnode aa=q.top();q.pop();\n\t\tint u=aa.u,d=aa.d;\n\t\tif(d!=dis[u])continue;\n\t\tfor(int i=head[u];i;i=a[i].nxt)\n\t\t{\n\t\t\tint v=a[i].to;\n\t\t\tint w=a[i].dis;\n\t\t\tif(dis[u]+w<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tq.push((node){v,dis[v]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read();m=read();s=read();t=read();\n\twhile(m--){\n\t\tx=read();y=read();d=read();\n\t\tadd(x,y,d);\n\t\tadd(y,x,d);\n\t}\n\tdij();\n\tcout<<dis[t]<<endl;\n\treturn 0;\n}\n```\n\u5148\u81ea\u5df1\u7406\u89e3\n\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u79c1\u4fe1\u54df",
        "postTime": 1552742610,
        "uid": 71844,
        "name": "\u6768\u94e0\u8fdc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "# \u4e00\u9053SPFA\u7684\u677f\u5b50\u9898\n\n### \u5f88\u7b80\u5355\u7684\u4e00\u9053\u9898\uff0c\u4f46\u4e0d\u77e5\u9053\u697c\u4e0a\u697c\u4e0b\u7684\u9898\u89e3\u600e\u4e48\u8fd9\u4e48\u9ebb\u70e6\uff01\uff01\uff01\n\n\n# \u5f88\u66b4\u529b\u7684\u601d\u8def\uff1a\n\n\u5efa\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u8dd1\u4e00\u8fb9SPFA\uff0c\u518d\u5224\u65ad\u4e00\u4e0b\u70b9\u6743\u503c\u7684\u5927\u5c0f\u5c31\u5b8c\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n\n#define maxn 52000\n#define M 100010\n\nusing namespace std;\n\nqueue<int> q;\n\nint t,n,m,ans,l,cnt;\nint dis[maxn],head[maxn],f[maxn];\nbool book[M];\n\nstruct edge{\n\tint to;\n\tint from;\n\tint data;\n}e[maxn * 2 + 1];//\u65e0\u5411\u56fe\u6709\u53cc\u5411\u8fb9\uff0c\u6240\u4ee5\u8981\u5f00\u4e24\u500d\u518d\u52a01\n\ninline void add(int x,int y,int z){\n\te[++t].from = y;\n\te[t].to = head[x];\n\te[t].data = z;\n\thead[x] = t;\n}\n\ninline void spfa(){\n\tmemset(dis,0x3f3f3f,sizeof(dis));\n\tq.push(1);\n\tdis[1] = 0;\n\twhile(!q.empty()){\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tbook[u] = 0;\n\t\tfor(int i = head[u] ; i ; i = e[i].to){\n\t\t\tint v = e[i].from,w = e[i].data;\n\t\t\tif(dis[v] > dis[u] + w){\n\t\t\t\tdis[v] = dis[u] + w;\n\t\t\t\tf[v] = u;\n\t\t\t\tif(!book[v]){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tbook[v] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1 ; i <= m ; i++ ){\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a,b,1); add(b,a,1);//\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u5efa\u4e24\u6b21\u56fe\n\t}\n\tspfa();\n\tfor(int i = 1 ; i <= n ; i++){\n\t\tif(dis[i] > l){\n\t\t\tl = dis[i];\n\t\t\tans = i;\n\t\t\tcnt = 1;\n\t\t}\n\t\telse if(dis[i] == l)\n\t\t\tcnt++;\n\t}\n\tprintf(\"%d %d %d \",ans,l,cnt);\n\treturn 0;\n}\n```\n\n~~## \u54ce\uff01\u8fd9\u9053USACO\u7684\u9898\u5c45\u7136\u4e0d\u5361SPFA\uff08\u9003~~",
        "postTime": 1526477529,
        "uid": 54879,
        "name": "Law_Aias",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "```cpp\n//dijkstra+heap\n//\u770b\u6ca1\u4ebadij\u8d76\u5feb\u6c34\u4e00\u53d1 \n//\u4e5f\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\uff0c\u5c31\u662f\u4e0a\u7248\u5b50\u597d\u4e86 \n//\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u4f18\u5148\u961f\u5217\u548cpair\uff0c\u6bd5\u7adf\u624b\u5199\u5806\u6216\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5bf9\u6211\u8fd9\u4e2a\u849f\u84bb\u4e0d\u592a\u53cb\u597d \n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#pragma GCC optimize(3)\nusing namespace std;\n#define maxw 50000*2//\u65e0\u5411\u56fe\u524d\u5411\u661f\u5f00\u4e24\u500d \n#define maxn 20001\n#define re register\n#define inf 99999999\nstruct node\n{\n    int u,v,w,nxt;\n}edge[maxw];\nint n,m,num=1;\nbool f[maxn];\nint d[maxn],head[maxn];\ntypedef pair<int,int> pii;//\u4e00\u4e2apair\uff0c\u7528\u6765\u653e\u4ece\u6e90\u70b9\u5230\u6307\u5b9a\u70b9\u7684\u8ddd\u79bb\u548c\u6307\u5b9a\u70b9\npriority_queue<pii,vector<pii>,greater<pii> > q;// \u4e00\u4e2a\u5c0f\u6839\u5806 \ninline void read(int &x)\n{\n    char c=getchar();\n    x=0;\n    while(c<'0'||c>'9') c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        x=x*10+c-48;\n        c=getchar();\n    }\n}\ninline void add_edge(int x,int y,int z)\n{\n    edge[num].u=x;\n    edge[num].v=y;\n    edge[num].w=z;\n    edge[num].nxt=head[x];\n    head[x]=num;\n    num++;\n}\ninline void dijkstra(int s)\n{\n    for(re int i=1;i<=n;i++)\n      d[i]=inf;\n    d[s]=0;\n    q.push(make_pair(d[s],s));//make_pair(x,y),\u751f\u6210pair\u5bf9\u8c61\u5165\u961f \n    while(!q.empty())\n    {\n        pii mind=q.top();\n        q.pop();\n        int k=mind.second;\n        if(f[k]) continue;\n        else\n        {\n            f[k]=true;\n            for(re int i=head[k];i!=-1;i=edge[i].nxt)\n            if(d[edge[i].v]>edge[i].w+d[k])\n            {\n                d[edge[i].v]=edge[i].w+d[k];//\u677e\u5f1b\u64cd\u4f5c \n                q.push(make_pair(d[edge[i].v],edge[i].v));//\u65b0\u72b6\u6001\u5165\u961f \n            }\n        }\n    }\n}\nint main()\n{\n    read(n);\n    read(m);\n    for(re int i=1;i<=n;i++)\n      head[i]=-1;\n    int xx,yy;\n    for(re int i=1;i<=m;i++)\n    {\n        read(xx);\n        read(yy);\n        add_edge(xx,yy,1);\n        add_edge(yy,xx,1);\n    }\n    dijkstra(1);\n    int ans=-1,point;\n    for(re int i=1;i<=n;i++)\n     if(ans<d[i])\n     {\n         point=i;\n         ans=d[i];\n     }\n    int tot=0;\n    for(re int i=1;i<=n;i++)\n    if(d[i]==ans) tot++;\n    cout<<point<<\" \"<<ans<<\" \"<<tot<<endl;\n    return 0;\n}\n```",
        "postTime": 1515242676,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "\u5178\u578b\u7684\u6700\u77ed\u8def\uff0c\u800c\u4e14\u53ea\u8981\u518d\u52a0\u4e00\u70b9\u70b9\u64cd\u4f5c\uff0c\u5c31\u80fd\u5f97\u5230\u7b54\u6848\n\n\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5957\u6a21\u677f\n\n\u5177\u4f53\u770b\u7a0b\u5e8f\uff1a\uff1a\uff1a\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<queue>//\u961f\u5217\u4e13\u5c5e\u5934\u6587\u4ef6\n#include<algorithm>\nusing namespace std;\nconst int N=100005;\nint a[N];\nint n,m,l,sum,ans;\nint d1[N],t[N],head1[N],next1[N],w1[N],adj1[N],k1;\nbool f1[N];\nqueue<int> q1;//\u6bd4\u8f83\u559c\u6b22\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\nvoid add(int u,int v){//\u52a0\u8fb9\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6bcf\u6761\u8fb9\u6743\u503c\u4e3a1\uff0c\u5c31\u4e0d\u7528\u7b2c\u4e09\u4e2a\u53d8\u91cf\u4e86\n    next1[++k1]=head1[u];\n    head1[u]=k1;\n    w1[k1]=1;//\u5982\u679c\u4e0d\u662f1\uff0c\u5c31\u628a\u4e00\u6362\u6210\u53d8\u91cft\uff08\u81ea\u5df1\u5b9a\u4e49\uff09\n    adj1[k1]=v;\n}\nvoid spfa(int s,int e){//SPFA,\u6700\u77ed\u8def\u6a21\u677f\n    for(int i=1;i<=n;i++)\n        d1[i]=1<<30;//\u8d4b\u65e0\u9650\u5927\n    d1[s] =0;\n    q1.push(s);\n    f1[s]=true ;\n    while(!q1.empty()){\n        int top1=q1.front() ;\n        q1.pop() ;//\u51fa\u961f\n        f1[top1]=false;\n        for(int j=head1[top1];j!=0;j=next1[j]){\n            if(d1[adj1[j]]>d1[top1]+w1[j]){//\u677e\u5f1b\u64cd\u4f5c\n                t[adj1[j]]++;\n                d1[adj1[j]]=d1[top1]+w1[j] ;\n                if(!f1[adj1[j]]){\n                    q1.push(adj1[j]);\n                    f1[adj1[j]]=true;\n                }\n            }    \n        }            \n    }\n}\nint main(){\n    //freopen(\"hideseek.in\",\"r\",stdin);\n    //freopen(\"hideseek.out\",\"w\",stdout);\u4e0d\u8981\u5728\u610f\u3002\u3002\u3002\n    scanf(\"%d%d\",&n,&m);//\u8bfb\u5165\n    for(int i=1;i<=m;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n        add(y,x);//\u52a0\u8fb9\u64cd\u4f5c\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u8981\u52a0\u4e24\u6b21\n    }\n    spfa(1,n);//\u8c03\u7528\n    for(int i=1;i<=n;i++){\n        if(d1[i]>l){//\u5982\u679c\u51fa\u73b0\u4e86\u6bd4\u73b0\u5728\u5927\u7684\u70b9\uff0c\u5c31\u4ea4\u6362\n            l=d1[i];\n            ans=i;\n            sum=1;\n        }\n        else{\n            if(d1[i]==l){//\u4e00\u6837\u5c31\u52a0\n                sum++;\n            }\n        }\n    }\n    printf(\"%d %d %d\\n\",ans,l,sum);//\u8f93\u51fa\n    return 0;\n}\n\u4e0d\u7528\u6570\u7ec4\u6a21\u62df\u961f\u5217\u5176\u5b9e\u86ee\u9ebb\u70e6\u7684\uff0c\u6211\u4e5f\u53ea\u662f\u5957\u7528\u6a21\u677f\uff0c\u61d2\u5f97\u6539\u4e86\uff0c\u6bd4\u624d\u662f\u73b0\u573a\u5199\u8fd8\u662f\u8981\u5199\u81ea\u5df1\u6709\u628a\u63e1\u7684\n```",
        "postTime": 1509023403,
        "uid": 44063,
        "name": "zy\u5c0f\u53ef\u7231\u10e6",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "##SPFA\u7b97\u6cd5\u9898\u89e3\uff0c\u4e3b\u8981\u5728\u8f93\u51fa\u4e0a\uff0c\u7b80\u5355\u7684\u6700\u77ed\u8def\n\n###\u8d34\u8d34\u8d34\u9898\u89e3\n\n```cpp\n#include<bits/stdc++.h> //\u4e07\u80fd\u8868\u5934\u5927\u6cd5\u597dovo \nusing namespace std;\nint dui[100001],dis[100001],h[100001],head=1,tail=1,num=0,maxxxx=0,maxx=0,maxxx=0;\nbool b[100001];\nstruct pre\n{\n    int x;\n    int y;\n    int w;\n}a[100001];\nvoid add(int u,int v,int l)\n{\n    a[++num].y=v;    \n    a[num].w=l;\n    a[num].x=h[u];\n    h[u]=num;\n}\nint main()\n{\n    int n,m,l1,l2,k,l;\n    cin>>n>>m;\n    for(int i=1; i<=m; i++)\n     {\n         cin>>l1>>l2;\n         add(l1,l2,1);\n         add(l2,l1,1); //\u53cc\u5411\u8def \n     }\n    for(int i=1; i<=n; i++)\n     dis[i]=0xfffff; //\u5b9a\u4e49\u65e0\u9650\u5927 \n    memset(b,0,sizeof(b));   \n    dis[1]=0; b[1]=1; dui[tail++]=1; //\u961f\u5217\u521d\u59cb\u5316 \n    while(head<tail)   \n    {\n        k=dui[head++]; \n        b[k]=0;       //\u51fa\u961f \n        for(int i=h[k]; i; i=a[i].x)    \n         {\n             l=a[i].y;\n             if(dis[k]+a[i].w<dis[l])    \n              {                           //\u677e\u5f1b\u5927\u6cd5 \n                  dis[l]=dis[k]+a[i].w;\n                  if(!b[l])\n                  {\n                      b[l]=1;\n                      dui[tail++]=l;    //\u8fdb\u961f \n                  }\n              }\n         }\n    }\n    for(int i=n; i>=1; i--)\n     if(dis[i]>=maxxxx)    //\u5224\u65ad**\u8ddd\u79bb\u6700\u8fdc**\u7684\u8c37\u4ed3\n     {\n      maxxxx=dis[i];   //\u8bb0\u5f55**\u6700\u8fdc\u8ddd\u79bb** \n      maxx=i;       //\u8bb0\u5f55**\u7f16\u53f7** \n     } \n    for(int i=1; i<=n; i++) \n     if(dis[i]==maxxxx)  //\u5224\u65ad\u6709\u591a\u5c11\u8ddd\u79bb\u76f8\u540c \n      maxxx++;\n    cout<<maxx<<\" \"<<maxxxx<<\" \"<<maxxx; \n}\n```",
        "postTime": 1501763996,
        "uid": 40756,
        "name": "weige233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "\u6211\u6765\u53d1\u7b2c\u4e00\u4e2a\u9898\u89e3\u5427\u3002\n\n\u8fd9\u9898\u7684\u8bdd\uff0c\u5012\u7740\u8dd1\u4e00\u904d\u8fb9\u6743\u4e3a1\u7684SPFA\uff08dij+heap\u4e5fOK\uff09\uff0c\u7136\u540e\u4e00\u76f4\u4e0d\u65ad\u66f4\u65b0\u9898\u76ee\u8981\u6c42\u7684\u90a3\u4e09\u4e2a\u503c\u5c31AC\u4e86\uff0c\u88f8\u6700\u77ed\u8def\u554a\uff5e\n\n\u3010C++ Code\u3011\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct edge{\n    int to,next,v;\n}e[200001];\nint head[50001];\nint dis[50001];\nint q[500001];\nbool mrk[50001];\nint n,m,cnt,t,w=1,mx=0,rep,num;\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\ninline void ins(int u,int v,int w)\n{\n    e[++cnt].v=w;\n    e[cnt].to=v;\n    e[cnt].next=head[u];\n    head[u]=cnt;\n}\ninline void insert(int u,int v,int w)\n{\n    ins(u,v,w);\n    ins(v,u,w);\n}\ninline void spfa()\n{\n    memset(dis,127/3,sizeof(dis));\n    q[1]=1;dis[1]=0;mrk[1]=1;\n    while (t<w)\n    {\n        int now=q[++t];\n        for (int i=head[now];i;i=e[i].next)\n          if (dis[e[i].to]>dis[now]+e[i].v)\n          {\n              dis[e[i].to]=dis[now]+e[i].v;\n              if (!mrk[e[i].to])\n              {\n                  q[++w]=e[i].to;\n                  mrk[e[i].to]=1;\n              }\n          }\n        mrk[now]=0;\n    }\n}\nint main()\n{\n    n=read();\n    m=read();\n    for (int i=1;i<=m;i++)\n      {\n          int x=read(),y=read();\n          insert(x,y,1);\n      }\n    spfa();\n    for (int i=n;i>=2;i--)\n    {\n        if (dis[i]>mx)\n        {\n            mx=dis[i];\n            num=i;\n            rep=1;\n        }else\n        if (dis[i]==mx)\n        {\n            num=i;\n            rep++;\n        }\n    }\n    printf(\"%d %d %d\\n\",num,mx,rep);\n    return 0;\n}\n```",
        "postTime": 1475583976,
        "uid": 16817,
        "name": "winmt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2951 \u3010[USACO09OPEN]\u6349\u8ff7\u85cfHide and Seek\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709pascal\uff0c\u5c31\u6765\u4e00\u6ce2\u5427~\n\n\u5176\u5b9e\u8fd9\u9898\u5c31\u662f\u6765\u7ec3\u4e60\u6700\u77ed\u8def\u7684\n\np\u515a\u60f3\u770b\u6700\u77ed\u8def\u677f\u5b50\u671d\u8fd9\u91cc\u770b\u54e6~\n\n\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\u5c31\u884c\u4e86\n\n\u6240\u4ee5\u521a\u5f00\u59cb\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6253\u4e86\u4e2a\u88f8\u7684dijkstra\n\nP2951.pas\n------------\n```pascal\nvar\n        n,m,i,j,tot,v,minn,head,x,y,ans,bns,cns:longint;\n        he,ne,t,w,dis:array[0..1000000] of longint;\n        p:array[0..1000000] of boolean;\nprocedure link(x,y:longint);\nbegin\n        inc(tot);\n        ne[tot]:=he[x];\n        he[x]:=tot;\n        t[tot]:=y;\n        w[tot]:=1;\nend;\nbegin\n        readln(n,m);\n        for i:=1 to m do begin\n                read(x,y);\n                link(x,y);\n                link(y,x);\n        end;\n        for i:=2 to n do dis[i]:=maxlongint;\n        head:=1;\n        while not p[head] do begin\n                p[head]:=true;\n                v:=he[head];\n                while v>0 do begin\n                        if (not p[t[v]]) and (dis[t[v]]>dis[head]+w[v]) then\n                         dis[t[v]]:=dis[head]+w[v];\n                        v:=ne[v];\n                end;\n                minn:=maxlongint;\n                for i:=1 to n do if (not p[i]) and (minn>dis[i]) then begin\n                        minn:=dis[i];\n                        head:=i;\n                end;\n        end;\n        for i:=n downto 1 do begin\n                if ans<=dis[i] then begin\n                        ans:=dis[i];\n                        bns:=i;\n                end;\n        end;\n        for i:=1 to n do if dis[i]=ans then inc(cns);\n        write(bns,' ',ans,' ',cns);\nend.\n```\n\u7ed3\u679ct\u4e86\u4e24\u4e2a\u70b9\n\n\u6240\u4ee5\u6211\u5c31\u8001\u5b9e\u7684\u6253\u4e86\u4e2a\u5806\u4f18\u5316\u7684dijkstra\u4e0a\u53bb\n\nP2951\uff081\uff09.pas\n```pascal\nvar\n        n,m,s,i,tot,bj,v,x,y,z,head:longint;\n        ans,bns,cns:int64;\n        he,ne,t,w,cj,num:array[0..4000010] of longint;\n        dis,heap:array[0..4000010] of int64;\nfunction max(x,y:int64):int64;\nbegin\n        if x>y then exit(x) else exit(y);\nend;\nprocedure swap(var x,y:int64);\nvar\n        t:int64;\nbegin\n        t:=x;\n        x:=y;\n        y:=t;\nend;\nprocedure swap1(var x,y:longint);\nvar\n        t:longint;\nbegin\n        t:=x;\n        x:=y;\n        y:=t;\nend;\nprocedure link(x,y,z:longint);\nbegin\n        inc(tot);\n        ne[tot]:=he[x];\n        he[x]:=tot;\n        t[tot]:=y;\n        w[tot]:=z;\nend;\nprocedure insert(a,x:longint);\nvar\n        i:longint;\nbegin\n        if cj[x]<>0 then begin\n                heap[cj[x]]:=a;\n                i:=cj[x];\n        end else begin\n                inc(heap[0]);\n                heap[heap[0]]:=a;\n                num[heap[0]]:=x;\n                i:=heap[0];\n                cj[x]:=heap[0];\n        end;\n        while (i>>1>0) and (heap[i]<heap[i>>1]) do begin\n                swap1(cj[num[i]],cj[num[i>>1]]);\n                swap(heap[i],heap[i>>1]);\n                swap1(num[i],num[i>>1]);\n                i:=i>>1;\n        end;\nend;\nprocedure del;\nvar\n        mid,i:longint;\nbegin\n        cj[num[1]]:=0;\n        heap[1]:=heap[heap[0]];\n        num[1]:=num[heap[0]];\n        dec(heap[0]);\n        i:=1;\n        if (heap[i<<1]<heap[i<<1+1]) or (i=heap[0]) then mid:=i<<1 else mid:=i<<1+1;\n        while (mid<=heap[0]) and (heap[mid]<heap[i]) do begin\n                swap1(cj[num[i]],cj[num[mid]]);\n                swap(heap[i],heap[mid]);\n                swap1(num[i],num[mid]);\n                i:=mid;\n                if (heap[i<<1]<heap[i<<1+1]) or (i<<1=heap[0]) then mid:=i<<1 else mid:=i<<1+1;\n        end;\nend;\nbegin\n        readln(n,m);\n        for i:=1 to m do begin\n                readln(x,y);\n                link(x,y,1);\n                link(y,x,1);\n        end;\n        for i:=1 to n do dis[i]:=maxlongint;\n        dis[1]:=0;\n        head:=1;\n        heap[0]:=1;\n        heap[1]:=0;\n        num[1]:=1;\n        while heap[0]<>0 do begin\n                v:=he[head];\n                while v<>0 do begin\n                        if dis[t[v]]>dis[head]+w[v] then begin\n                                dis[t[v]]:=dis[head]+w[v];\n                                ans:=max(dis[t[v]],ans);\n                                insert(dis[t[v]],t[v]);\n                        end;\n                        v:=ne[v];\n                end;\n                del;\n                head:=num[1];\n        end;\n         for i:=1 to n do if dis[i]=ans then begin\n                inc(cns);\n                if bj=0 then begin\n                        bns:=i;\n                        bj:=1;\n                end;\n        end;\n        write(bns,' ',ans,' ',cns);\nend.\n```\n72ms\n\n\u4f46\u540e\u6765\u53d1\u73b0\u88f8\u7684spfa\u7adf\u7136\u53ef\u4ee5\u8fc7\uff0c\u6240\u4ee5\u53c8\u6253\u4e86\u4e2a\u88f8\u7684spfa\n\nP2951\uff082\uff09.pas\n```pascal\nvar\n        n,m,i,v,x,y,bj,tot,ans,bns,cns,head,tail:longint;\n        he,ne,t,w,dis,q:array[0..4000000] of longint;\nfunction max(x,y:longint):longint;\nbegin\n        if x>y then exit(x) else exit(y);\nend;\nprocedure link(x,y:longint);\nbegin\n        inc(tot);\n        ne[tot]:=he[x];\n        he[x]:=tot;\n        t[tot]:=y;\n        w[tot]:=1;\nend;\nbegin\n        readln(n,m);\n        for i:=1 to m do begin\n                read(x,y);\n                link(x,y);\n                link(y,x);\n        end;\n        for i:=2 to n do dis[i]:=maxlongint;\n        tail:=1;\n        q[1]:=1;\n        repeat\n                inc(head);\n                v:=he[q[head]];\n                while v>0 do begin\n                        if dis[t[v]]>dis[q[head]]+w[v] then begin\n                                dis[t[v]]:=dis[q[head]]+w[v];\n                                ans:=max(ans,dis[t[v]]);\n                                inc(tail);\n                                q[tail]:=t[v];\n                        end;\n                        v:=ne[v];\n\n                end;\n        until head>tail;\n        for i:=1 to n do begin\n                if dis[i]=ans then begin\n                        inc(cns);\n                        if bj=0 then begin\n                                bns:=i;\n                                bj:=1;\n                        end;\n                end;\n        end;\n        write(bns,' ',ans,' ',cns);\nend.\n```\n79ms\n",
        "postTime": 1553439241,
        "uid": 113864,
        "name": "kfhkx",
        "ccfLevel": 0,
        "title": "P2951 \u9898\u89e3"
    }
]