[
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u53cc\u673a\u6d41\u6c34\u4f5c\u4e1a\u6a21\u677f\u9898\u3002\n\u4f46\u662f\u76f4\u63a5\u7528jhonson\u4e0d\u7b49\u5f0f\u4f1a\u9505,\u4e4b\u524d\u6211\u7684\u7a0b\u5e8f\u5c31\u88ab[fjtcin](https://www.luogu.org/space/show?uid=86563)\u5927\u4f6chack\u4e86\n\u4e8e\u662f\u6211\u75db\u5b9a\u601d\u75db,\u51b3\u5b9a\u7528\u6280(xuan)\u672f(xue)\u6765\u9632\u6b62\u76ee\u524d\u7a0b\u5e8f\u6240\u9020\u6210\u7684\u4e00\u7cfb\u5217\u95ee\u9898\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct ss{\n    int a,b,c;\n}dp[25005];\nbool cmp(const ss u,const ss v)\n{\n    return(min(u.a,v.b)<min(v.a,u.b))?1:0;//\u5f15\u7528johnson\u4e0d\u7b49\u5f0f\n}\nint main()\n{\n    int n,ans=0,tb=0,op=0;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>dp[i].a>>dp[i].b;\n    do\n    {\n    \trandom_shuffle(dp+1,dp+n+1);//\u6280(xuan)\u672f(xue)\n\t\tans=0; tb=0;\n    \tsort(dp+1,dp+n+1,cmp);//\u6392\u5e8f\n   \t\tans+=dp[1].a;\n    \tfor(int i=1;i<n;i++)//\u6a21\u62df\n    \t{\n    \t    ans+=dp[i+1].a;\n    \t    tb+=dp[i].b-dp[i+1].a;\n    \t    if(tb<0) tb=0;\n    \t}\n    \top=max(ans+tb+dp[n].b,op);\n\t}\n    while(clock()<0.8*CLOCKS_PER_SEC);\n    printf(\"%d\",op);\n}\n```\n\u90a3\u4e48,\u4e0d\u7528\u7384\u5b66\u600e\u4e48\u505a\u5462?\n\u5148\u770b\u770b\u6211\u662f\u600e\u4e48\u88ab[hack](https://www.luogu.org/paste/4qail3wd)\n\u7684\u5427,\u7136\u540e\u6211\u5c31\u53bb\u770b\u4e86\u770b[https://www.luogu.org/blog/ouuan/QAQ-p2123](https://www.luogu.org/blog/ouuan/QAQ-p2123),\u7136\u540e\u6539\u4e86\u4e0b\u4ee3\u7801\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u90a3\u7bc7\u535a\u5ba2\u5df2\u7ecf\u8bf4\u5f97\u5f88\u8be6\u7ec6\u4e86,\u6211\u5c31\u4e0d\u8d58\u8ff0\u4e86\n\n```\n\u66f4\u6539\u5f15\u7528jhonson\u7684\u65b9\u5f0f\nbool cmp(const ss u,const ss v)\n{\n    return min(u.a,v.b)==min(u.b,v.a)?u.a<v.a: min(u.a,v.b)==min(u.b,v.a);//\u5f15\u7528johnson\u4e0d\u7b49\u5f0f\n}\n```\n### ~~\u7384\u5b66\u5927\u6cd5\u597d~~ ###",
        "postTime": 1527252578,
        "uid": 55201,
        "name": "clamee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1561 \u3010[USACO12JAN]\u722c\u5c71Mountain Climbing\u3011"
    },
    {
        "content": "\u88ab\u53eb\u53bb\u7ed9\u5b66\u5f1f\u8bb2\u8fd9\u9053\u9898\uff0c\u6ca1\u60f3\u5230\u88ab\u5b66\u5f1fHack\u4e86\u3002\u3002\u3002Orz\n\n\u505a\u6cd5\u548c\u5927\u5bb6\u4e00\u6837\uff1a\n\n$$ans=\\max\\left\\{\\sum_{k=1}^n{up_k}+down_{\\min},\\sum_{k=1}^n{down_k}+up_{\\min}\\right\\}$$\n\n\u4f46\u662f\u8fd9\u4e2a\u505a\u6cd5\u662f\u4e0d\u5b8c\u5168\u6b63\u786e\u7684\uff0c\u6bd4\u5982\u4ee5\u4e0b\u6570\u636e\uff1a\n\n```plain\n3\n6 4\n8 3\n2 1\n```\n\u6b63\u786e\u7b54\u6848\u5e94\u8be5\u662f$18$\u800c\u4e0d\u662f$17$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u624b\u52a8\u6a21\u62df\uff0c\u4f1a\u53d1\u73b0\u4e4b\u524d\u7684\u505a\u6cd5\u6709\u95ee\u9898\u3002\n\n\u6211\u53bb\u67e5\u4e86\u4e00\u4e0b[USACO\u5b98\u65b9\u9898\u89e3](http://usaco.org/current/data/sol\\_climb.html \"\u4f20\u9001\u95e8\")\uff0c\u4e0b\u9762\u6765\u7b80\u5355\u8bf4\u4e00\u4e0b\u3002\n\n\n- \u9996\u5148\uff0c\u8d2a\u5fc3\u7684\u60f3\u6cd5\u548c\u4e4b\u524d\u7684\u505a\u6cd5\u662f\u76f8\u540c\u7684\uff0c\u5c31\u662f\u8ba9\u66f4\u591a\u7684\u725b\u65e9\u5230\u5c71\u9876\uff1b\n\n- \u6211\u4eec\u628a\u725b\u5206\u6210\u4e24\u7c7b\uff1a1. up < down    2. up > down\uff0cup=down\u7684\u5f52\u4e3a\u4efb\u610f\u4e00\u7c7b\u662f\u4e0d\u5f71\u54cd\u7684\uff1b\n\n- \u4e4b\u540e\uff0c\u8003\u8651\u5230up\u5c0f\u7684\u5148\u5230\u5c71\u9876\u4e0d\u4f1a\u62d6\u6162\u540e\u9762\u7684\u725b\uff0c\u6211\u4eec\u628a\u7b2c\u4e00\u7c7b\u90fd\u6392\u5728\u7b2c\u4e8c\u7c7b\u524d\u9762\uff0c\u800c\u4e14\u6309up\u5347\u5e8f\u6392\uff1b\n\n- \u7b2c\u4e8c\u7c7b\u725b\u6211\u4eec\u6309down\u964d\u5e8f\u6392\uff0c\u8fd9\u4e2a\u6ca1\u4e0a\u9762\u90a3\u4e2a\u663e\u7136\uff0c\u4f46\u662f\u539f\u56e0\u4e5f\u5f88\u7b80\u5355\uff0c\u4e0b\u7684\u6162\u7684\u5148\u4e0b\u53ef\u4ee5\u62d6\u4f4f\u540e\u9762\u7684\u725b\u4e0b\u5c71\uff0c\u51cf\u5c11\u51fa\u73b0\u5c71\u9876\u7684\u725b\u5df2\u7ecf\u4e0b\u5b8c\u4e86\uff0c\u4e0b\u9762\u7684\u725b\u8fd8\u6ca1\u4e0a\u5b8c\u8fd9\u79cd\u6d6a\u8d39\u7684\u60c5\u51b5\uff1b\n\n- \u4e4b\u540e\u662f\u8ba1\u7b97\u65f6\u95f4\uff0c\u5176\u5b9e\u6700\u521d\u90a3\u4e2a\u65b9\u6cd5\u7684\u8d2a\u5fc3\u7b56\u7565\u548c\u4e0a\u9762\u5e94\u8be5\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u8ba1\u7b97\u51fa\u4e86\u95ee\u9898\uff1b\n\n- \u90a3\u7ec4\u6570\u636e\u4e4b\u6240\u4ee5\u88abHack\uff0c\u5c31\u662f\u56e0\u4e3a\u6700\u521d\u7684\u65b9\u6cd5\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\u725b\u4e0a\u5c71\u540e\uff0c\u6240\u6709\u4e0a\u4e0b\u5c71\u662f\u4e00\u8d77\u8fdb\u884c\u7684\uff0c\u5176\u5b9e\u6709\u53ef\u80fd\u51fa\u73b0\u4e0d\u91cd\u53e0\u7684\u60c5\u51b5\uff0c\u4e8e\u662f\u5c11\u7b97\u4e86\uff1b\n\n- \u6b63\u786e\u7684\u505a\u6cd5\u662f\u6309\u4e4b\u524d\u90a3\u4e2a\u7b56\u7565\u6392\u5e8f\u540e\uff0cO(n)\u6a21\u62df\u4e00\u4e0b\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nusing std::sort;\nusing std::max;\n\nconst int MAXN=25005;\nint n;\nint up_tm[MAXN],dwn_tm[MAXN];\n\nstruct Cow{\n    int up,dwn;\n    static bool cmp_tm(const Cow &a,const Cow &b){\n        if(a.up<a.dwn){\n            if(b.up<b.dwn) return a.up<b.up;\n            else return true;\n        }\n        else{\n            if(b.up<b.dwn) return false;\n            else return a.dwn>b.dwn;\n        }\n    }\n}cow[MAXN];\n\ninline int greedy(){\n    sort(cow+1,cow+n+1,Cow::cmp_tm);\n    for(int i=1;i<=n;++i)\n        up_tm[i]=up_tm[i-1]+cow[i].up;\n    for(int i=1;i<=n;++i)\n        dwn_tm[i]=max(dwn_tm[i-1],up_tm[i])+cow[i].dwn;\n    return dwn_tm[n];\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n        scanf(\"%d%d\",&cow[i].up,&cow[i].dwn);\n    printf(\"%d\",greedy());\n    return 0;\n}\n```",
        "postTime": 1514791918,
        "uid": 34849,
        "name": "Kirin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1561 \u3010[USACO12JAN]\u722c\u5c71Mountain Climbing\u3011"
    },
    {
        "content": "![](https://cdn.luogu.com.cn/upload/image_hosting/6d6vlvq0.png)\n\n[P2123](https://www.luogu.org/problem/P2123)\u9898\u9762\u7684\u516c\u5f0f\u6b63\u662f\u672c\u9898\u7684\u6838\u5fc3\n\n\u8ba9\u7a9d\u6765\u89e3\u91ca\u4e00\u4e0b\u8db4QAQ\uff1a\n\n```cpp\n\u5982\u56fe\uff0cC[i]\u8868\u793a\u5f53\u5230\u7b2ci\u4e2acow\u56de\u53bb\u540e\uff0c\u603b\u5171\u82b1\u8d39\u7684\u6700\u591a\u65f6\u95f4\n\n\u7a9d\u89c9\u5f97\uff0c\u4e3e\u6817\u7eb8\u66f4\u901a\u4fd7\u6613\u61c2\u70b9\uff1a\n\nC1 = a1 + b1\uff08\u7b2c\u4e00\u5934\u725b\u4e0a\u5c71\u65f6\u95f4+\u4e0b\u5c71\u65f6\u95f4\uff09\n\n\u5219C2 = max(C1 , a1 + a2) + b2\n\n\u5373C2 = max(a1+b1 , a1 + a2) + b2//\u6572\u9ed1\u677f\uff01\uff01\uff01\n\n\u8fd9\u65f6\u5c31\u6709\u60f9  b1\u4e0ea2\u7684\u6bd4\u8f83\n\n\u5982\u679c\u7b2c\u4e00\u4e2acow\u4e0b\u5c71\u7684\u65f6\u95f4\u5927\u4e8e\u7b2c\u4e8c\u4e2acow\u5728\u4e0a\u5c71\u7684\u65f6\u95f4\uff0c\u5219\u4ee5\u7b2c\u4e00\u4e2acow\u4e0b\u5c71\u7684\u65f6\u95f4\u4e3a\u57fa\u51c6\uff0c\u518d+b2\uff08b2,\u5373\u7b2c\u4e8c\u4e2acow\u4e0b\u5c71\u7684\u65f6\u95f4\uff09\n\u5982\u679c\u7b2c\u4e8c\u4e2acow\u5728\u4e0a\u5c71\u7684\u65f6\u95f4\u5927\u4e8e\u7b2c\u4e00\u4e2acow\u4e0b\u5c71\u7684\u65f6\u95f4\uff0c\u5219\u4ee5\u7b2c\u4e8c\u4e2acow\u4e0a\u5c71\u7684\u65f6\u95f4\u4e3a\u57fa\u51c6\uff0c\u518d+b2\n\u81f3\u4e8e\u76f8\u7b49\u65f6\uff0c\u65e0\u6240\u8c13\u54ea\u4e00\u4e2a\u60f9QAQ\n\n\u56fe\u4e0a\u7684\u5f0f\u5b50\u662f\u53ef\u4ee5\u5316\u7b80\u7684\uff0c\n\n\n```\n\n[\u6233\u7a9d](https://www.luogu.org/problemnew/solution/P2123)\n\n\n\n\u91cc\u9762\u7684\u7b2c\u4e00\u7bc7\u5f88\u8be6\u5c3d\u60f9\n\n\u7136\u540e\u5148\u53bb\u505aP2123\n\n\u518d\u56de\u6765\u505a\u672c\u9898\n\n\u4e0a\u56fe\u7684\u5f0f\u5b50\u6700\u7ec8\u53ef\u5316\u7b80\u4e3a\n\n```cpp\nif(p1.d!=p2.d)return p1.d<p2.d;\n\telse if(p1.d<=0)return p1.a<p2.a;\n\treturn p1.b>p2.b;\n```\n\n\n\nAC\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define maxn 30100\nusing namespace std;\nstruct node \n{\n\tint a, b,d;\n}cow[maxn];\nint T,n;\nlong long C[maxn];\nbool cmp(node p1,node p2)\n{\n\tif(p1.d!=p2.d)return p1.d<p2.d;\n\telse if(p1.d<=0)return p1.a<p2.a;\n\treturn p1.b>p2.b;\n}\nsigned main()\n{\n\t\tlong long suma = 0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i = 1 ;i <= n ;i++)\n\t\t{\n\t\t\tscanf(\"%d%d\",&cow[i].a,&cow[i].b);\n\t\t\tif(cow[i].a<cow[i].b)cow[i].d = -1;\n\t\t\telse if(cow[i].a>cow[i].b)cow[i].d = 1;\n\t\t\telse cow[i].d = 0;\n\t\t}\n\t\tsort(cow+1,cow+1+n,cmp);\n\t\tfor(int i = 1;i<=n;i++)\n\t\t{\n\t\t\tsuma += cow[i].a;\n\t\t    C[i] = max(C[i-1],suma) + cow[i].b;\n\t\t}\n\t\tprintf(\"%lld\\n\",C[n]);\n\treturn 0;\n}\n}\n\u4e09\u500d\u7ecf\u9a8c\u9898\n\n```\n\n\u5583~\n\n\n[P2123](https://www.luogu.org/problem/P2123)\n\n[P1248](https://www.luogu.org/problem/P1248)\n\n[P1561](https://www.luogu.org/problem/P1561)",
        "postTime": 1570433757,
        "uid": 116162,
        "name": "\u7fbd\u5107",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1561 \u3010[USACO12JAN]\u722c\u5c71Mountain Climbing\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u8003\u8651\u4ec0\u4e48\u6837\u7684\u5976\u725b\u5f97\u5148\u4e0a\u5761\u3002\u5f88\u660e\u663e\uff0c\u4e0a\u5761\u8017\u65f6\u77ed\u7684\u5976\u725b\u5148\u4e0a\u5761\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5982\u679c\u8017\u65f6\u957f\u7684\u5976\u725b\u5148\u4e0a\u5761\u7684\u8bdd\uff0c\u90a3\u4e48\u540e\u9762\u7684\u5976\u725b\u5c31\u4f1a\u88ab\u5168\u90e8\u62d6\u6162\uff0c\u540c\u65f6\u4e0b\u5761\u7684\u5f00\u59cb\u65f6\u95f4\u4e5f\u88ab\u5ef6\u540e\u3002\u6240\u4ee5\u8fd9\u65f6\u6211\u4eec\u5c06\u4e0a\u5761\u8017\u65f6\u77ed\u7684\u5976\u725b\u6392\u5728\u524d\u9762\u3002\n\n\u5176\u6b21\u8003\u8651\u4ec0\u4e48\u6837\u7684\u5976\u725b\u5f97\u5148\u4e0b\u5761\u3002\u5f88\u660e\u663e\uff0c\u4e0b\u5761\u8017\u65f6\u957f\u7684\u5976\u725b\u5148\u4e0b\u5761\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5982\u679c\u8017\u65f6\u77ed\u7684\u5976\u725b\u5148\u4e0b\u5761\u7684\u8bdd\uff0c\u90a3\u4e48\u8d8a\u5230\u540e\u9762\uff0c\u4e0a\u5761\u4e86\u5728\u5c71\u9876\u4e0a\u7684\u5976\u725b\u5c31\u4f1a\u88ab\u5168\u90e8\u62d6\u6162\uff0c\u540c\u65f6\u4e0b\u4e86\u5761\u7684\u5976\u725b\u4e5f\u4f1a\u56e0\u7b49\u5f85\u800c\u6d6a\u8d39\u65f6\u95f4\u3002\u6240\u4ee5\u8fd9\u65f6\u6211\u4eec\u5c06\u4e0b\u5761\u8017\u65f6\u957f\u7684\u5976\u725b\u6392\u5728\u524d\u9762\u3002\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u8981\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u4e0a\u5761\u6162\u7684\u5976\u725b\u4e0b\u5761\u5f88\u5feb\uff0c\u6211\u4eec\u600e\u4e48\u529e\uff1f\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u5976\u725b\u5f52\u4e3a\u4e24\u7c7b\u3002\u7b2c\u4e00\u7c7b\u662f\u4e0a\u5761\u65f6\u95f4\u5c0f\u4e8e\u4e0b\u5761\u65f6\u95f4\u7684\uff0c\u7b2c\u4e8c\u7c7b\u662f\u4e0a\u5761\u65f6\u95f4\u5927\u4e8e\u7b49\u4e8e\u4e0b\u5761\u65f6\u95f4\u7684\u3002\n\n\u5f88\u660e\u663e\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u7b2c\u4e00\u7c7b\u6392\u5728\u7b2c\u4e8c\u7c7b\u524d\uff0c\u6309\u4e0a\u5761\u65f6\u95f4\u5347\u5e8f\uff0c\u8fd9\u4e2a\u5728\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u8ba8\u8bba\u4e2d\u5f88\u663e\u7136\u3002\u540c\u7406\uff0c\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e2d\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u4e0b\u5761\u65f6\u95f4\u957f\u7684\u6392\u5728\u524d\u9762\u3002\u56e0\u4e3a\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e2d\uff0c\u4e0a\u5761\u65f6\u95f4\u5927\u4e8e\u7b49\u4e8e\u4e0b\u5761\u65f6\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5fc5\u987b\u628a\u4e0b\u5761\u65f6\u95f4\u957f\u7684\u6392\u5728\u524d\u9762\u3002\u8fd9\u6837\u5c31\u80fd\u5c3d\u91cf\u907f\u514d\u4e0b\u5761\u5df2\u7ecf\u4e0b\u5b8c\u4e86\u4f46\u4e0b\u4e00\u5934\u725b\u8fd8\u6ca1\u4e0a\u6765\u8fd9\u6837\u7684\u60c5\u51b5\u3002\n\n\u6240\u4ee5\u6700\u540e\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5c31\u662f\uff1a\n$$\nans = \\max(\\sum_{j=1}^nup_j,ans)+down_i\n$$\n\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be\u3002\n\n\u6700\u540e\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nstruct node\n{\n\tint a,b;\n}x[100010];\nbool cmp(node a,node b)\n{\n\tif(a.a < a.b)\n\t{\n\t\tif(b.a < b.b)return a.a < b.a;\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\tif(b.a < b.b)return 0;\n\t\treturn a.b > b.b;\n\t} \n}\nint main()\n{\n\tint n;\n\tcin >> n;\n\tfor (int i = 1;i <= n;i++)\n\t{\n\t\tcin >> x[i].a >> x[i].b; \n\t}\n\tsort(x + 1,x + n + 1,cmp);\n\tint ut = 0,dt = 0,ans = 0;\n\tfor (int i = 1;i <= n;i++)\n\t{\n\t\tut += x[i].a;\n\t\tdt = max(ut,dt) + x[i].b;\n\t}\n\tcout << dt << endl;\n} \n```",
        "postTime": 1684543341,
        "uid": 508988,
        "name": "PP__",
        "ccfLevel": 4,
        "title": "P1561 [USACO12JAN]Mountain Climbing S \u9898\u89e3"
    },
    {
        "content": "# P1561 \u9898\u89e3\n## \u9898\u610f\n$n$ \u5934\u725b\uff0c\u4e0a\u5c71\u65f6\u95f4\u4e3a $u_i$ ,\u4e0b\u5c71\u4e3a $d_i$ \u3002  \n\u8981\u6c42\u6bcf\u4e00\u65f6\u523b\u6700\u591a\u53ea\u6709\u4e00\u5934\u725b\u4e0a\u5c71\uff0c\u4e00\u5934\u725b\u4e0b\u5c71\u3002  \n\u95ee\u6bcf\u5934\u725b\u90fd\u4e0a\u4e0b\u5c71\u540e\u82b1\u8d39\u6700\u5c11\u65f6\u95f4\u3002\n\n## \u89e3\u7b54\n\u8fd9\u662f\u4e00\u9053\u7ecf\u5178\u7684\u5e8f\u5217\u7ea6\u675f\u5efa\u6a21\u9898\u3002\u5e8f\u5217\u5c31\u662f\u4e0a\u5c71\u548c\u4e0b\u5c71\uff0c\u7ea6\u675f\u5c31\u5728\u4e8e**\u5fc5\u987b\u5148\u4e0a\u5c71\u624d\u80fd\u4e0b\u5c71**\uff0c\u6211\u4eec\u8981\u4f7f\u5f97\u4e0b\u5c71\u5e8f\u5217\u5c3d\u91cf\u77ed\u3002\n\n\u5f88\u5bb9\u6613\u80fd\u8bc1\u660e**\u6700\u4f18\u7684\u60c5\u51b5\u4e0a\u5c71\u5e8f\u5217\u5fc5\u5b9a\u662f\u8fde\u7eed\u7684**\uff0c\u4f46\u662f\u4e0b\u5c71\u4e5f\u8981\u5c3d\u91cf\u4fdd\u6301\u8fde\u7eed\u987a\u5e8f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u76ee\u6807\uff1a\u8ba9\u5c71\u9876\u7684\u725b\u591a\u4e00\u4e9b\uff0c\u8ba9\u4e0b\u5c71\u5e8f\u5217\u5c3d\u91cf\u8fde\u7eed\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u8ba9\u5c71\u4e0a\u7684\u725b\u591a\u4e00\u70b9\uff0c\u5373\u8ba9\u4e0a\u5c71\u5feb\u7684\u725b\u5148\u4e0a\u6765\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u53ef\u80fd\u4e0b\u5c71\u592a\u5feb\uff0c\u5c71\u4e0a\u90fd\u8fd8\u6ca1\u6709\u725b\u5c31\u4e0b\u5c71\u4e86\uff0c\u4f1a\u51fa\u73b0\u7b49\u5f85\u3002\n\n**\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u4e0a\u5c71\u65f6\u95f4\u548c\u4e0b\u5c71\u65f6\u95f4\u5206\u522b\u8003\u8651**  \n\uff08\u8fd9\u91cc\u8bb0\u4e0a\u5c71\u65f6\u95f4\u4e3a $up$ \uff0c\u4e0b\u5c71\u65f6\u95f4\u4e3a $dn$ \uff09\n\n1. \u5f53 $up < dn$ \uff0c\u6309 $up$ \u5347\u5e8f\u6392\u5e8f\n2. \u5f53 $up \u2265 dn$ \uff0c\u6309 $dn$ \u964d\u5e8f\u6392\u5e8f\n\n\u4e8e\u662f\u6211\u4eec\u8bb0\u5f55\u6bcf\u5934\u725b\u7684 $upt$ \u4ee3\u8868\u524d $i$ \u5934\u725b\u4e0a\u5c71\u65f6\u95f4\u548c $dnt$ \u524d $i$ \u5934\u725b\u4e0b\u5c71\u65f6\u95f4\u3002\n\n\u5219\uff1a\n$$dnt_i=max\\{dnt_{i-1},upt_i\\}+cow_i.dn$$\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u4e50\u7684\u5199\u7a0b\u5e8f\u5566~\n\n## \u4ee3\u7801\u519b\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nconst int MAXN=25005;\nint n;\nint up_tm[MAXN],dwn_tm[MAXN];\n\nstruct Cow{\n    int up,dwn;\n    static bool cmp_tm(const Cow &a,const Cow &b){\n        if(a.up<a.dwn){\n            if(b.up<b.dwn) return a.up<b.up;\n            else return true;\n        }\n        else{\n            if(b.up<b.dwn) return false;\n            else return a.dwn>b.dwn;\n        }\n    }\n}cow[MAXN];\n\ninline int greedy(){\n    sort(cow+1,cow+n+1,Cow::cmp_tm);\n    for(int i=1;i<=n;++i)\n        up_tm[i]=up_tm[i-1]+cow[i].up;\n    for(int i=1;i<=n;++i)\n        dwn_tm[i]=max(dwn_tm[i-1],up_tm[i])+cow[i].dwn;\n    return dwn_tm[n];\n}\n\nint main(){\n    freopen(\"climb.in\",\"r\",stdin);\n    freopen(\"climb.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n        scanf(\"%d%d\",&cow[i].up,&cow[i].dwn);\n    printf(\"%d\",greedy());\n    return 0;\n}\n```\n$$\\tiny{\\color{lightgrey}{\u5b98\u65b9\u9898\u89e3\u52ff\u55b7}}$$\n\u5b8c\u7ed3\u6492\u82b1~\u987a\u4fbf\u6c42\u8d5e",
        "postTime": 1596766459,
        "uid": 291706,
        "name": "GspTools",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1561 \u3010[USACO12JAN]Mountain Climbing S\u3011"
    },
    {
        "content": "\u7b97\u6cd5\u6784\u9020\uff1a\n\n1.\u8bbe\u7f6e\u96c6\u5408F\u3001M\u3001S\uff1a\u5148\u8ba9F\u4e2d\u5976\u725b\u7684\u722c\u5c71\uff0c\u518d\u8ba9M\u4e2d\u5976\u725b\u7684\u722c\u5c71\uff0c\u6700\u540e\u8ba9S\u4e2d\u5976\u725b\u7684\u722c\u5c71\u3002\n\n2.\u5bf9\u7b2ci\u4ef6\uff0c\u82e5U[i]>D[i]\uff0c\u5219\u5f52\u5165S\uff1b\u82e5U[i]=D[i]\uff0c\u5219\u5f52\u5165M\uff0c\u5426\u5219\u5f52\u5165F\u3002\n\n3.\u5bf9F\u4e2d\u7684\u5143\u7d20\u6309U[i]\u5347\u5e8f\u6392\u5217\uff0cS\u4e2d\u7684\u6309D[i]\u964d\u5e8f\u6392\u5217\u3002\n\n\u8bc1\u660e\u601d\u8def\uff1a\n\n1.F\u4e2d\u7684\u80fd\u201c\u62c9\u5f00\u201dJohn\u3001Don\u8ba9\u540c\u4e00\u5934\u5976\u725b\u4e0a\u4e0b\u5c71\u7684\u7ed3\u675f\u65f6\u523b\uff0c\u4e3a\u540e\u9762\u7684\u5976\u725b\u722c\u5c71\u201c\u62c9\u5f00\u65f6\u95f4\u5dee\u201d\uff0c\u5229\u4e8e\u8282\u7701\u603b\u65f6\u95f4\u3002S\u4e2d\u7684\u521a\u597d\u76f8\u53cd\u3002\u56e0\u800c\uff0cF\u4e2d\u5143\u7d20\u653e\u5728\u6700\u524d\u4e00\u5b9a\u662f\u6700\u4f18\u7b56\u7565\u4e4b\u4e00\u3002\n\n2.F\u4e2dU[i]\u5c0f\u7684\u524d\u7f6e\uff0c\u53ef\u4ee5\u7f29\u77ed\u5f00\u59cb\u65f6B\u7684\u7a7a\u95f2\u65f6\u95f4\uff0c\u4f46\u4f1a\u4f7fF\u6240\u6709\u5976\u725b\u201c\u62c9\u5f00\u7684\u65f6\u95f4\u5dee\u201d\u7f29\u77ed\u3002\u4e0d\u8fc7\u53ef\u4ee5\u8bc1\u660e\uff0c\u540e\u8005\u5e26\u6765\u7684\u635f\u5931\u4e0d\u5927\u4e8e\u524d\u8005\u83b7\u5f97\u7684\u4f18\u52bf\u3002\u5bf9\u79f0\u5730\uff0c\u5bf9S\u4e5f\u4e00\u6837\u3002\u56e0\u800c\u6b65\u9aa43\u662f\u53ef\u884c\u7684\u3002\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5b9e\u9645\u7f16\u5199\u6bd4\u8f83\u9ebb\u70e6\u3002\n",
        "postTime": 1380642269,
        "uid": 203,
        "name": "JOHNKRAM",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1561 \u3010[USACO12JAN]\u722c\u5c71Mountain Climbing\u3011"
    },
    {
        "content": "USACO\u7684\u9898\u89e3\u90fd\u5f88\u5c11\u5462\uff0c\u6211\u6765\u53d1\u4e00\u53d1\n\n9102\u5e74\uff0cP\u515a\u7684\u4eba\u66f4\u5c11\u4e86\uff0c\u6211\u6765\u5e2e\u52a9 ~~\uff08\u62ef\u6551\uff09~~\u4e00\u6ce2P\u515a\u3002\n\n\u9898\u76ee\u610f\u601d\u975e\u5e38\u5730\u6e05\u695a\uff0c\u6bd5\u7adf\u8fde\u6211\u8fd9\u6837\u7684\u8bed\u6587\u767d\u75f4\u90fd\u770b\u61c2\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5f00\u59cb\u8bb2\u601d\u8def\u5427\uff01\n\n# \u8d2a\u5fc3\n\n\u672c\u849f\u84bb\u770b\u5230\u597d\u591a\u9898\u89e3\u90fd\u7528\u4e86\u6392\u5e8f\uff0c\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981\u5440\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5206\u522b\u7edf\u8ba1\u5976\u725b\u4e0a\u5c71\u548c\u4e0b\u5c71\u7684\u65f6\u95f4\u4e4b\u548c\uff0c\u4ee5\u53ca\u5206\u522b\u627e\u51fa\u5976\u725b\u4e0a\u5c71\u548c\u4e0b\u5c71\u65f6\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u6700\u540e\u5728\u4e0a\u5c71\u65f6\u95f4\u548c\u4e0e\u4e0b\u5c71\u6700\u5c0f\u503c\u4e4b\u548c\u4ee5\u53ca\u4e0b\u5c71\u65f6\u95f4\u548c\u4e0e\u4e0a\u5c71\u65f6\u95f4\u6700\u5c0f\u503c\u4e4b\u548c\u627e\u4e2a\u6700\u5c0f\u503c\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u53ef\u4ee5\u60f3\u60f3\u6b63\u786e\u6027\u7684\u8bc1\u660e\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bc1\u660e\u4e86\uff0c\u6bd5\u7adf\u6709\u4e00\u7bc7\u9898\u89e3\u91cc\u5199\u51fa\u4e86\u8be6\u7ec6\u7684\u8fc7\u7a0b\uff0c\u6211\u7684\u8c8c\u4f3c\u6ca1\u6709ta\u7684\u8be6\u7ec6\u54c7qaq\n\n\n\u6700\u540e\u5e16\u4ee3\u7801\u5427\n```\nvar n,i,x1,y1,x2,y2,x,y:longint;\nfunction min(x,y:longint):longint;\nbegin\nif x>y then exit(x);\nexit(y);\nend;\nbegin\nreadln(n);\nx1:=maxlongint;y1:=maxlongint;\nfor i:=1 to n do\n  begin\n  readln(x,y);\n  if x1>x then x1:=x;\n  if y1>y then y1:=y;\n  x2:=x2+x;y2:=y2+y;\n  end;\nwriteln(min(x2+y1,x1+y2));\nend.\n```\n\u849f\u84bb\u7684tips\uff1a\u5343\u4e07\u522bcsp\u7684\u65f6\u5019\u7528uses math \u554a\uff0c\u4f1a\u62b1\u96f6\u7684\u3002\n\n\u6765\u81ea\u4e00\u4f4d\u5df2\u7ecf\u9000\u5f79\u7684\u9009\u624b\u3002~~\u7ba1\u7406\u5458\u5927\u5927\u6c42\u8fc7~~",
        "postTime": 1575200446,
        "uid": 77612,
        "name": "_\u6276\u7b19_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1561 \u3010[USACO12JAN]\u722c\u5c71Mountain Climbing\u3011"
    },
    {
        "content": "~~~~\n\u770b\u4e86\u86ee\u591a\u9898\u89e3\u7684\uff0c\uff0c\u53d1\u73b0\u4e00\u4e2a\u60ca\u4eba\u7684\u4e8b\u5b9e\uff0c\uff0c\u4ee3\u7801\u7384\u5b66\u554a\uff0c\uff0c\u96be\u61c2\uff0c\uff0c\n\u4e3b\u8981\u662f\u592a\u591a\u9ad8\u7ea7\u7684\u64cd\u4f5c\uff0c\uff0c\u5bf9\u6211\u6211\u7b49\u849f\u84bb\u6765\u8bf4\uff0c\uff0c\u7406\u89e3\u96be\u5ea6\u7206\u8868\uff1b\n\u6240\u4ee5\uff0c\uff0c\u7279\u5730\u6765\u53d1\u4e86\u4e00\u6ce2\u7b80\u5355\u7684\u4ee3\u7801\uff0c\uff0c\n\u4e3b\u8981\u662f\u8d2a\u5fc3\uff0c\uff0c\u8bb2\u89e3\u5176\u5b9e\u697c\u4e0b\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\n\u4e3b\u8981\u601d\u60f3\u4e5f\u5c31\u662f\u627e\u5230\u6bcf\u4e00\u5934\u725b\u7684\u76f8\u5bf9\u4ef7\u503c\u6700\u5c0f\uff0csort\u66b4\u529b\u6392\u5e8f\u4e00\u904d\uff0c\uff0c\n\u63a5\u7740\u5c31\u53ef\u4ee5\u4e71\u641e\u4e86\uff0c\uff0c\uff08\u5176\u5b9e\uff0c\uff0c\u505a\u5230\u8fd9\u4e00\u6b65\u4e86\uff0c\uff0c\u5c31\u5dee\u4e0d\u591a\u4e86\u53ef\u4ee5\u76f4\u63a5\u5c06\u7b54\u6848\u5904\u7406\u4e00\u4e0b\uff0c\u52a0\u8d77\u6765\u5c31\u597d\u4e86\uff09\n\n\u8d2a\u5fc3\u8d2a\u5fc3\n------------------------------------------------\n********************************************\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,total;\nlong long ans;\nstruct data{\n    int t,d;\n}a[100001];\nbool cmp(data a,data b){\n    return min(a.t,b.d)<min(a.d,b.t);\n}\nint main()\n{\n    long long ans;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&a[i].t,&a[i].d);\n    }\n    sort(a+1,a+n+1,cmp);\n    for (int i=1; i<=n; i++){\n        a[i].t+=a[i-1].t;//\u524d\u7f00\u548c\uff0c\uff0c\uff0c\u522b\u544a\u8bc9\u6211\u8fd9\u4e2a\u4f60\u4e0d\u4f1a\uff1b\n    }\n    ans=a[1].t;\n    for(int i=1;i<=n;i++)\n    {\n       if (a[i].t>ans)\n       ans=a[i].t;\n       ans+=a[i].d;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n************************************************\n~~~~\n",
        "postTime": 1517734418,
        "uid": 21869,
        "name": "maple_tzc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1561 \u3010[USACO12JAN]\u722c\u5c71Mountain Climbing\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u6709 $n$ \u5934\u725b\uff0c\u7b2c $i$ \u5934\u725b\u4e0a\u5c71\u6240\u7528\u7684\u65f6\u95f4\u4e3a $u_i$\uff0c\u4e0b\u5c71\u6240\u7528\u7684\u65f6\u95f4\u4e3a $d_i$\u3002\n\n\u6bcf\u4e00\u65f6\u523b\u6700\u591a\u53ea\u6709\u4e00\u5934\u725b\u6b63\u5728\u4e0a\u5c71\uff0c\u4e00\u5934\u725b\u6b63\u5728\u4e0b\u5c71\u3002\n\n\u95ee\u6700\u5c11\u9700\u8981\u591a\u5c11\u65f6\u95f4\u4f7f\u5f97\u6bcf\u5934\u725b\u90fd\u8fc7\u5c71\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u9053\u9898\u62c6\u6210\u4e24\u6b65\u60f3\u3002\n\n1. \u8fd8\u6ca1\u4e0a\u5c71\u7684\u5976\u725b\u9700\u8981\u4e0a\u5c71\u3002\n2. \u5df2\u7ecf\u4e0a\u5c71\u4e86\u7684\u5976\u725b\u9700\u8981\u4e0b\u5c71\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u4e0a\u5c71\u548c\u4e0b\u5c71\u662f\u4e92\u4e0d\u5e72\u9884\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5c71\u4e0a\u4e00\u76f4\u6709\u5976\u725b\u7b49\u7740\u4e0b\u5c71\uff0c\u4e5f\u5c31\u662f\u6240\u4e0b\u5c71\u7684\u5976\u725b\u51e0\u4e4e\u4e0d\u95f4\u65ad\u7684\u8bdd\uff0c\u7b54\u6848\u80af\u5b9a\u662f\u6700\u4f18\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5982\u4e0b\u7b56\u7565\uff1a\n\n1. \u4e0a\u5c71\u7684\u987a\u5e8f\u6309\u7167\u4e0a\u5c71\u65f6\u95f4\u5c11\u7684\u5148\u4e0a\u3002\uff08\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5c71\u9876\u6709\u66f4\u591a\u7684\u725b\u7b49\u5f85\u6216\u76f4\u63a5\u4e0b\u5c71\uff09\n2. \u4e0b\u5c71\u987a\u5e8f\u6309\u7167\u4e0b\u5c71\u65f6\u95f4\u957f\u7684\u5148\u4e0b\u3002\uff08\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u5730\u62d6\u6162\u65f6\u95f4\u7b49\u540e\u9762\u7684\u725b\uff0c\u4f46\u662f\u4e0b\u5c71\u7684\u5976\u725b\u57fa\u672c\u4e0a\u4e0d\u4f1a\u95f4\u65ad\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u662f\u66f4\u4f18\u7684\uff09\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u5e76\u4e0d\u80fd\u4f7f\u4e0b\u5c71\u7684\u5976\u725b\u5c3d\u53ef\u80fd\u4e0d\u95f4\u65ad\uff0c\u5982\u679c\u4e00\u5934\u725b\u7684 $u_i > d_i$\uff0c\u5c31\u8bf4\u660e\u4e0a\u4e0b\u5c71\u7684\u65f6\u95f4\u4f1a\u6709\u7a7a\u5f53\uff0c\u5982\u679c\u8fde\u7eed\u591a\u5934\u725b\u90fd\u662f\u8fd9\u6837\u5c31\u6709\u53ef\u80fd\u95f4\u65ad\u4e0b\u5c71\u961f\u5217\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6309\u7167\u5976\u725b\u5206\u7c7b\uff1a\n\n1. \u7b2c\u4e00\u79cd\u5976\u725b $u_i \\le d_i$\uff0c\u8fd9\u79cd\u5976\u725b\u7684\u4e0a\u5c71\u65f6\u95f4\u5c0f\u4e8e\u4e0b\u5c71\u65f6\u95f4\uff0c\u6211\u4eec\u6309\u7167 $u_i$ \u5347\u5e8f\u6392\u5217\uff0c\u65e2\u80fd\u4fdd\u8bc1\u5c71\u9876\u5976\u725b\u5c3d\u53ef\u80fd\u591a\uff0c\u53c8\u4e0d\u4f1a\u51fa\u73b0\u65f6\u95f4\u7a7a\u5f53\u3002\n2. \u7b2c\u4e8c\u79cd\u5976\u725b $u_i > d_i$\uff0c\u8fd9\u4e9b\u5976\u725b\u4e0b\u5c71\u65f6\u95f4\u5c0f\u4e8e\u4e0a\u5c71\u65f6\u95f4\uff0c\u6211\u4eec\u6309\u7167 $d_i$ \u964d\u5e8f\u6392\u5217\uff0c\u5c3d\u53ef\u80fd\u62d6\u6162\u4e0b\u5c71\u901f\u5ea6\uff0c\u4e3a\u540e\u9762\u5976\u725b\u53ca\u65f6\u5230\u8fbe\u5c71\u9876\u4e89\u53d6\u65f6\u95f4\u3002\n3. \u7b2c\u4e00\u58f0\u5976\u725b\u6392\u5728\u7b2c\u4e8c\u79cd\u5976\u725b\u524d\u9762\uff0c\u56e0\u4e3a\u7b2c\u4e00\u79cd\u5976\u725b\u80fd\u66f4\u597d\u7684\u4f7f\u5c71\u9876\u6709\u66f4\u591a\u7684\u5976\u725b\u3002\n\n\u6309\u7167\u8fd9\u6837\u6392\u5e8f\u540e\u5c31\u53ef\u4ee5 dp \u6c42\u89e3\u4e86\uff0c\u6211\u4eec\u8bbe $f_i$ \u4e3a\u7b2c $i$ \u5934\u5976\u725b\u8fc7\u5c71\u540e\u7684\u6700\u5c11\u65f6\u95f4\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$$f_i = \\max(f_{i-1}, \\sum_{j=1}^{j\\le i} u_i) + d_i$$\n\n\u5bf9\u4e8e $\\sum_{j=1}^{j\\le i} u_i$\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u4e00\u4e2a $sum$ \u7136\u540e\u5c31\u53ef\u4ee5 $\\mathcal O(1)$ \u6c42\u503c\u4e86\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(n)$ \u7684\u3002\n### code\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define int long long\nusing namespace std;\nconst int N = 3e4 + 5;\nstruct node{\n\tint u, d, opt;\n}p[N];\nint T, n, f[N], now;\nbool cmp(node x, node y)\n{\n\treturn (x.opt != y.opt) ? x.opt < y.opt : ((x.opt <= 0) ? x.u < y.u : x.d > y.d);\n}\nsigned main()\n{\n\tscanf(\"%lld\", &n);\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tscanf(\"%lld %lld\", &p[i].u, &p[i].d);\n\t\tp[i].opt = p[i].u < p[i].d ? -1 : (p[i].u > p[i].d ? 1 : 0);\n\t}\n\tsort(p + 1, p + 1 + n, cmp);\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tnow += p[i].u;\n\t    f[i] = max(f[i-1], now) + p[i].d;\n\t}\n\tprintf(\"%lld\", f[n]);\n\treturn 0;\n}\n```",
        "postTime": 1682328229,
        "uid": 551108,
        "name": "Zhang_bingjia",
        "ccfLevel": 3,
        "title": "P1561\u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a $N$ \u53ea\u5976\u725b\u4e0a\u5c71\u548c\u4e0b\u5c71\u9700\u8981\u7684\u65f6\u95f4\uff0c\u53ef\u4ee5\u6309\u7167\u4efb\u610f\u987a\u5e8f\u4e0a\u5c71\u548c\u4e0b\u5c71\uff0c\u4f46\u540c\u65f6\u53ea\u6709\u4e00\u53ea\u5976\u725b\u5728\u4e0a\u5c71\uff0c\u53ea\u6709\u4e00\u53ea\u5976\u725b\u5728\u4e0b\u5c71\uff0c\u6c42\u6240\u6709\u5976\u725b\u4e0a\u4e0b\u5c71\u82b1\u8d39\u7684\u6700\u5c11\u65f6\u95f4\u3002\n## \u601d\u8def\n\u9996\u5148\uff0c\u867d\u7136\u5976\u725b\u53ef\u4ee5\u6309\u7167\u4efb\u610f\u7684\u987a\u5e8f\u4e0a\u4e0b\u5c71\uff0c\u4f46\u662f\u4e0d\u96be\u53d1\u73b0\uff0c\u4e0b\u5c71\u7684\u987a\u5e8f\u662f\u6ca1\u5fc5\u8981\u8c03\u6574\u7684\uff0c\u5982\u679c\u540c\u65f6\u6709\u591a\u53ea\u5976\u725b\u5728\u5c71\u9876\uff0c\u5979\u4eec\u6309\u7167\u4efb\u610f\u987a\u5e8f\u4e0b\u5c71\uff0c\u90fd\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5976\u725b\u884c\u52a8\u7684\u987a\u5e8f\u5373\u53ef\u3002\n\n\u4ee4\u5f53\u524d\u6700\u540e\u4e00\u53ea\u5976\u725b\u4e0a\u5c71\u7684\u65f6\u95f4\u4e3a $x$\uff0c\u4e0b\u5c71\u65f6\u95f4\u4e3a $y$\uff0c\u52a0\u4e0a\u4e0b\u4e00\u53ea\u4e0a\u4e0b\u5c71\u65f6\u95f4\u5206\u522b\u4e3a $u$ \u548c $d$ \u7684\u5976\u725b\uff0c\u66f4\u65b0\u65f6\u95f4\u7684\u65b9\u5f0f\u4e3a\uff1a\n1. $x$ \u52a0\u4e0a $u$\u3002\n2. $y$ \u548c $x$ \u53d6\u8f83\u5c0f\u503c\u3002\n3. $y$ \u52a0\u4e0a $d$\u3002\n\n\u521d\u59cb\u65f6 $x$ \u548c $y$ \u5747\u4e3a $0$\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $y$\u3002\n\u901a\u8fc7\u66f4\u65b0\u7684\u65b9\u5f0f\u53ef\u77e5\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u907f\u514d $y$ \u88ab $x$ \u66f4\u65b0\uff0c\u7531\u6b64\u53ef\u4ee5\u8d2a\u5fc3\u7684\u5b89\u6392\u987a\u5e8f\uff1a\n\n1. $u<d$ \u7684\u5976\u725b\u5e94\u8be5\u6bd4 $u\\ge d$ \u7684\u5976\u725b\u5148\u8d70\u3002\n2. \u5728\u6240\u6709 $u<d$ \u7684\u5976\u725b\u4e2d\uff0c \u5c0f\u7684\u5976\u725b\u5e94\u8be5\u5148\u8d70\uff0c\u6b64\u65f6\u7b2c\u4e00\u53ea\u5976\u725b\u4e0a\u5c71\u7684\u65f6\u95f4\u4e5f\u6700\u77ed\u3002\n3. \u5728\u6240\u6709 $u\\ge d$ \u7684\u5976\u725b\u4e2d\uff0c \u5927\u7684\u5976\u725b\u5e94\u8be5\u5148\u8d70\uff0c\u6b64\u65f6\u6700\u540e\u4e00\u53ea\u5976\u725b\u4e0b\u5c71\u7684\u65f6\u95f4\u4e5f\u6700\u77ed\u3002\n## CODE\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing Pii = pair<int, int>;\nconst int kMaxN = 25001;\nPii a[kMaxN];\nint n, x, y;\nint C(Pii p) {                                           // \u8ba1\u7b97\u6392\u5e8f\u65f6\u7684\u503c\n  return p.first < p.second ? p.first : 1e9 - p.second;  // \u5148\u6bd4\u8f83\u4e24\u4e2a\u503c\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u518d\u6bd4\u8f83\u5bf9\u5e94\u503c\n}\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i].first >> a[i].second;\n  }\n  sort(a + 1, a + 1 + n, [](Pii i, Pii j) { return C(i) < C(j); });\n  x = y = 0;  // \u521d\u59cb\u5316\u65f6\u95f4\n  for (auto p : a) {\n    x += p.first;   // \u7d2f\u52a0\u4e0a\u5c71\u65f6\u95f4\n    y = max(x, y);  // \u66f4\u65b0\u4e0b\u5c71\u65f6\u95f4\n    y += p.second;  // \u7d2f\u52a0\u4e0b\u5c71\u65f6\u95f4\n  }\n  cout << y;\n  return 0;\n}\n```",
        "postTime": 1661332713,
        "uid": 444534,
        "name": "\u54c8\u58eb\u5947\u61a8\u61a8",
        "ccfLevel": 5,
        "title": "P1561 [USACO12JAN]Mountain Climbing S"
    },
    {
        "content": "### \u3010\u9898\u76ee\u5927\u610f\u3011\nn\u5934\u5976\u725b\u9700\u8981\u4e0a\u5c71\u4e0b\u5c71\uff0c\u9700\u8981\u82b1\u65f6\u95f4\n\n\u4e00\u6b21\u53ea\u80fd\u6709\u4e00\u5934\u5976\u725b\u4e0a\u5c71\uff0c\u4e5f\u53ea\u80fd\u7531\u4e00\u5934\u5976\u725b\u4e0b\u5c71\n\n\u6c42\u6240\u6709\u5976\u725b\u5b8c\u6210\u953b\u70bc\u7684\u6700\u77ed\u65f6\u95f4\n\n------------\n\n### \u3010\u5206\u6790\u3011\n\n\u89c2\u5bdf\u6570\u636e\uff0c\u663e\u7136\u8fd9\u662f\u8d2a\u5fc3\n\n\u4e00\u822c\u63a8\u5bfc\u8d2a\u5fc3\u65b9\u6cd5\u5f88\u56f0\u96be\n\n\u4e0d\u59a8\u7528\u751f\u6d3b\u7ecf\u9a8c\u611f\u6027\u5206\u6790\n\n\u9996\u5148\u5fc5\u987b\u8981\u77e5\u9053\u5148\u5b8c\u6210\u4e0a\u5c71\u7684\u725b\u5148\u5f00\u59cb\u4e0b\u5c71\uff0c\u53ef\u4ee5\u51cf\u5c11\u7b49\u5f85\u65f6\u95f4\n\n\u6709\u4e24\u79cd\u725b\u53ef\u4ee5\u5f88\u5feb\u786e\u5b9a\u65b9\u6848\n\n\u7b2c\u4e00\u79cd\u662f\u4e0a\u5c71\u5feb\u7684\u725b\uff0c\u628a\u5b83\u653e\u5728\u524d\u9762\uff0c\u8fd9\u6837\u80fd\u51cf\u5c11\u5176\u5b83\u725b\u7b49\u5f85\u4e0a\u5c71\u7684\u65f6\u95f4\n\n\u7b2c\u4e8c\u79cd\u662f\u4e0b\u5c71\u5feb\u7684\u725b\uff0c\u628a\u5b83\u653e\u5728\u540e\u9762\uff0c\u8fd9\u6837\u80fd\u51cf\u5c11\u5df2\u7ecf\u5b8c\u6210\u7684\u725b\u7b49\u5f85\u6240\u6709\u725b\u5b8c\u6210\u7684\u65f6\u95f4\n\n\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e00\u79cd\u8d2a\u5fc3\u65b9\u5f0f\uff1a\u6839\u636e\u4e0a\u5c71\u4e0b\u5c71\u65f6\u95f4\u4e2d\u8f83\u5c0f\u503c\u6392\u5e8f\uff0c\u8ba9\u725b\u5c3d\u53ef\u80fd\u5206\u914d\u5230\u8282\u7701\u65f6\u95f4\u7684\u7ec4\uff0c\u4e0a\u5c71\u8f83\u5feb\u7684\u6392\u524d\u9762\uff0c\u4e0b\u5c71\u8f83\u5feb\u7684\u6392\u540e\u9762\u3002\n\n\u8fd9\u91cc\u7684\u6bd4\u8f83\u90fd\u662f\u5148\u5bf9\u6bcf\u5934\u725b\u81ea\u8eab\u4e0a\u4e0b\u5c71\u7684\u6bd4\u8f83\uff0c\u518d\u5bf9\u6240\u6709\u725b\u8fdb\u884c\u6bd4\u8f83\n\n------------\n### \u3010\u7b97\u6cd5\u3011\n\u8d2a\u5fc3\n\n------------\n\n### \u3010\u4ee3\u7801\u3011\n```cpp\n#include<bits/stdc++.h>\n#define maxn 25005\nusing namespace std;\nint n,fst,lst,id[maxn],p[maxn];\nstruct why{\n\tint u,d,c;\n\tbool operator <(why b)const{return c<b.c||(c==b.c&&u<b.u);}\n}a[maxn];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nbool cmp(int x,int y){return a[x].c<a[y].c;}\nint main(){\n \tfreopen(\"P1561.in\",\"r\",stdin);\n \tfreopen(\"P1561.out\",\"w\",stdout);\n\tn=read();\n\tint L=0,R=n+1;\n\tfor(int i=1;i<=n;i++)  a[i].u=read(),a[i].d=read(),a[i].c=min(a[i].u,a[i].d),id[i]=i;\n\tsort(id+1,id+1+n,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[id[i]].c==a[id[i]].u) p[++L]=id[i];\n\t\telse p[--R]=id[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfst+=a[p[i]].u;\n\t\tlst=max(lst,fst)+a[p[i]].d;\n\t}\n\tprintf(\"%d\\n\",lst);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1590677055,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1561 \u3010[USACO12JAN]Mountain Climbing S\u3011"
    }
]