[
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/T169571?contestId=41599)\n\n\u672c\u9898\u7684\u5e95\u5c42\u6a21\u578b\u662f\u65e0\u5411\u56fe\u4e0a\u7684\u6982\u7387\u52a8\u6001\u89c4\u5212\u3002\n\n\u6bcf\u4e2a\u72b6\u6001\u6709\u4e09\u4e2a\u53c2\u6570\uff1a\u5f53\u524d\u6240\u5728\u9876\u70b9 $u$\uff0c\u5df2\u7ecf\u6d88\u8017\u7684\u4f53\u529b $h$\uff0c\u5df2\u7ecf\u82b1\u8d39\u7684\u65f6\u95f4 $t$\u3002\u4ee4 $hp[u][h][t]$ \u8868\u793a\u5728\u9876\u70b9 $u$\uff0c\u5df2\u7ecf\u6d88\u8017\u7684\u4f53\u529b\u4e3a $h$\uff0c\u5df2\u7ecf\u82b1\u8d39\u7684\u65f6\u95f4\u4e3a $t$ \u65f6\u6d88\u8017\u4f53\u529b\u7684\u671f\u671b\u503c\uff08\u5373\u5e73\u5747\u503c\uff09\uff0c$elapsed[u][h][t]$ \u8868\u793a\u5728\u9876\u70b9 $u$\uff0c\u5df2\u7ecf\u6d88\u8017\u7684\u4f53\u529b\u4e3a $h$\uff0c\u5df2\u7ecf\u82b1\u8d39\u7684\u65f6\u95f4\u4e3a $t$ \u65f6\u82b1\u8d39\u65f6\u95f4\u7684\u671f\u671b\u503c\uff08\u5373\u5e73\u5747\u503c\uff09\uff0c\u6839\u636e\u9898\u76ee\u7ed9\u5b9a\u7684\u89c4\u5219\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff0c\u6240\u6c42\u5373 $hp[0][0][0]$\uff0c$elapsed[0][0][0]$\u3002\u8bfb\u8005\u53ef\u7ed3\u5408\u53c2\u8003\u4ee3\u7801\u7684\u6ce8\u91ca\u8fdb\u884c\u7406\u89e3\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int INF = 0x7f7f7f7f;\n\n// \u8868\u793a\u65e0\u5411\u56fe\u4e2d\u8fb9\u7684\u6570\u636e\u7ed3\u6784\uff0cv \u4e3a\u90bb\u63a5\u9876\u70b9\u7684\u7f16\u53f7\uff0ch \u4e3a\u6d88\u8017\u7684\u4f53\u529b\uff0ct \u4e3a\u82b1\u8d39\u7684\u65f6\u95f4\nstruct edge\n{\n    int v, h, t;\n    edge (int v = 0, int h = 0, int t = 0): v(v), h(h), t(t) {}\n    // \u91cd\u8f7d\u5c0f\u4e8e\u8fd0\u7b97\u7b26\u4ee5\u4f7f\u7528\u4f18\u5148\u961f\u5217\n    bool operator<(const edge &e) const { return t != e.t ? t > e.t : h > e.h; }\n};\n\n// p[i] \u8868\u793a\u7b2c i \u4e2a\u72e9\u730e\u70b9\u6355\u83b7\u730e\u7269\u7684\u6982\u7387\uff0c\n// hp[i][j][k] \u548c elapsed[i][j][k] \u7684\u610f\u4e49\u5982\u524d\u6240\u8ff0\ndouble p[210], hp[210][260][260], elapsed[210][260][260];\n\n// visited \u4e3a\u6807\u8bb0\u6570\u7ec4\uff0c\u6807\u8bb0\u67d0\u4e2a\u72b6\u6001\u662f\u5426\u5df2\u7ecf\u8bbf\u95ee\nint visited[210][260][260];\nvector<edge> edges[210];\n\n// dH[i] \u8868\u793a\u4ece\u5730\u70b9 i \u56de\u5230\u5de2\u7a74\u7684\u7b26\u5408\u8981\u6c42\u7684\u8def\u5f84\u6240\u6d88\u8017\u7684\u4f53\u529b\n// dT[i] \u8868\u793a\u4ece\u5730\u70b9 i \u56de\u5230\u5de2\u7a74\u7684\u7b26\u5408\u8981\u6c42\u7684\u8def\u5f84\u6240\u82b1\u8d39\u7684\u65f6\u95f4\n// neighbours[i] \u8868\u793a\u9876\u70b9 i \u6240\u90bb\u63a5\u7684\u72e9\u730e\u70b9\u4e2a\u6570\n// hi[i] \u8868\u793a\u5728\u7b2c i \u4e2a\u5730\u70b9\u8fdb\u884c\u4e00\u6b21\u6355\u730e\u6240\u6d88\u8017\u7684\u4f53\u529b\n// ti[i] \u8868\u793a\u5728\u7b2c i \u4e2a\u5730\u70b9\u8fdb\u884c\u4e00\u6b21\u6355\u730e\u6240\u82b1\u8d39\u7684\u65f6\u95f4\n// \u5f88\u660e\u663e\uff0c\u5728\u5de2\u7a74\u65e0\u6cd5\u8fdb\u884c\u6355\u730e\uff0c\u6545 hi[0] = ti[0] = 0\nint N, M, H, T, dH[210], dT[210], neighbours[210], hi[210], ti[210];\n\n// u \u4e3a\u5f53\u524d\u6240\u5728\u7684\u9876\u70b9\uff0ch \u4e3a\u5df2\u7ecf\u6d88\u8017\u7684\u4f53\u529b\uff0ct \u4e3a\u5df2\u7ecf\u82b1\u8d39\u7684\u65f6\u95f4\nvoid dfs(int u, int h, int t)\n{\n    // \u5907\u5fd8\u4ee5\u52a0\u5feb\u6c42\u89e3\u901f\u5ea6\uff0c\u5426\u5219\u4f1a\u8d85\u65f6\n    if (visited[u][h][t]) return;\n    visited[u][h][t] = 1;\n    hp[u][h][t] = elapsed[u][h][t] = 0;\n    // \u5982\u679c\u5f53\u524d\u662f\u72e9\u730e\u70b9\n    if (u)\n    {\n        // \u6709 p[u] \u7684\u6982\u7387\u5728\u8be5\u72e9\u730e\u70b9\u6355\u730e\u6210\u529f\uff0c\u76f4\u63a5\u8fd4\u56de\u5de2\u7a74\u7ed3\u675f\u72e9\u730e\n        hp[u][h][t] += p[u] * (h + dH[u]);\n        elapsed[u][h][t] += p[u] * (t + dT[u]);\n\n        // \u82e5\u4e0d\u6210\u529f\uff0c\u68c0\u67e5\u4f53\u529b\u548c\u65f6\u95f4\u662f\u5426\u8d85\u51fa\u9650\u5236\uff0c\u5982\u679c\u8d85\u51fa\uff0c\u76f4\u63a5\u9009\u62e9\u8fd4\u56de\u5de2\u7a74\n        if (h >= H || t >= T)\n        {\n            hp[u][h][t] += (1 - p[u]) * (h + dH[u]);\n            elapsed[u][h][t] += (1 - p[u]) * (t + dT[u]);\n            return;\n        }\n\n        // \u5f53\u72e9\u730e\u4e0d\u6210\u529f\u4e14\u4f53\u529b\u548c\u548c\u65f6\u95f4\u5747\u672a\u8d85\u51fa\u9650\u5236\u65f6\uff0c\n        // \u5982\u679c\u5f53\u524d\u72e9\u730e\u70b9\u4e0e\u5176\u4ed6\u72e9\u730e\u70b9\u65e0\u76f4\u8fde\u53cc\u5411\u9053\u8def\u5219\n        // \u8fd4\u56de\u5de2\u7a74\uff0c\u66f4\u65b0\u671f\u671b\u4f53\u529b\u548c\u65f6\u95f4\uff0c\u6ce8\u610f\u662f\u8f6c\u79fb\u5230\n        // \u5de2\u7a74\u540e\u518d\u66f4\u65b0\n        if (!neighbours[u])\n        {\n            dfs(0, h + dH[u], t + dT[u]);\n            hp[u][h][t] += (1 - p[u]) * hp[0][h + dH[u]][t + dT[u]];\n            elapsed[u][h][t] += (1 - p[u]) * elapsed[0][h + dH[u]][t + dT[u]];\n        }\n        // \u5f53\u524d\u72e9\u730e\u70b9\u4e0e\u5176\u4ed6\u72e9\u730e\u70b9\u6709\u76f4\u8fde\u53cc\u5411\u9053\u8def\uff0c\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u72e9\u730e\u70b9\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\n        else\n        {\n            double s = 1.0 / neighbours[u];\n            for (auto e : edges[u])\n            {\n                // \u786e\u4fdd\u662f\u72e9\u730e\u70b9\u800c\u4e0d\u662f\u5de2\u7a74\n                if (e.v)\n                {\n                    dfs(e.v, h + e.h + hi[e.v], t + e.t + ti[e.v]);\n                    hp[u][h][t] += s * (1 - p[u]) * hp[e.v][h + e.h + hi[e.v]][t + e.t + ti[e.v]];\n                    elapsed[u][h][t] += s * (1 - p[u]) * elapsed[e.v][h + e.h + hi[e.v]][t + e.t + ti[e.v]];\n                }\n            }\n        }\n    }\n    // \u5f53\u524d\u4f4d\u4e8e\u5de2\u7a74\n    else\n    {\n        // \u4f53\u529b\u6216\u8005\u65f6\u95f4\u8d85\u51fa\u9650\u5236\n        if (h >= H || t >= T)\n        {\n            hp[u][h][t] = h + dH[u];\n            elapsed[u][h][t] = t + dT[u];\n            return;\n        }\n        // \u5982\u679c\u6709\u72e9\u730e\u70b9\u4e0e\u5de2\u7a74\u76f8\u90bb\uff0c\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u72e9\u730e\u70b9\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\n        if (neighbours[u])\n        {\n            double s = 1.0 / neighbours[u];\n            for (auto e : edges[u])\n            {\n                dfs(e.v, h + e.h + hi[e.v], t + e.t + ti[e.v]);\n                hp[u][h][t] += s * hp[e.v][h + e.h + hi[e.v]][t + e.t + ti[e.v]];\n                elapsed[u][h][t] += s * elapsed[e.v][h + e.h + hi[e.v]][t + e.t + ti[e.v]];\n            }\n        }\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    cin.tie(0), cout.tie(0), ios::sync_with_stdio(false);\n\n    cin >> N;\n    for (int i = 1; i <= N; i++) cin >> hi[i] >> ti[i] >> p[i];\n    for (int i = 0; i <= N; i++)\n    {\n        edges[i].clear();\n        neighbours[i] = 0;\n    }\n    cin >> M;\n    for (int i = 0, u, v, h, t; i < M; i++)\n    {\n        cin >> u >> v >> h >> t;\n        edges[u].push_back(edge(v, h, t));\n        edges[v].push_back(edge(u, h, t));\n        // \u786e\u5b9a\u6bcf\u4e2a\u9876\u70b9\u6709\u591a\u5c11\u4e2a\u72e9\u730e\u70b9\u4e0e\u4e4b\u76f8\u90bb\n        neighbours[u] += (v > 0);\n        neighbours[v] += (u > 0);\n    }\n    cin >> H >> T;\n\n    // \u786e\u5b9a\u6bcf\u4e2a\u5730\u70b9\u8fd4\u56de\u5de2\u7a74\u65f6\u5177\u6709\u6700\u77ed\u65f6\u95f4\u7684\u8def\u5f84\uff0c\n    // \u5982\u679c\u6709\u591a\u6761\u5177\u6709\u6700\u77ed\u65f6\u95f4\u7684\u8def\u5f84\uff0c\u9009\u62e9\u6d88\u8017\u4f53\u529b\n    // \u6700\u5c11\u7684\u8def\u5f84\n    memset(dH, INF, sizeof dH);\n    memset(dT, INF, sizeof dT);\n    priority_queue<edge> q;\n    dH[0] = dT[0] = 0;\n    q.push(edge(0, 0, 0));\n    while (!q.empty())\n    {\n        edge e1 = q.top();\n        q.pop();\n        if (dT[e1.v] < e1.t) continue;\n        for (auto e2 : edges[e1.v])\n        {\n            if (dT[e2.v] > dT[e1.v] + e2.t || \n                (dT[e2.v] == dT[e1.v] + e2.t && dH[e2.v] > dH[e1.v] + e2.h))\n            {\n                dT[e2.v] = dT[e1.v] + e2.t;\n                dH[e2.v] = dH[e1.v] + e2.h;\n                q.push(edge(e2.v, dH[e2.v], dT[e2.v]));\n            }\n        }\n    }\n\n    // \u9012\u5f52\u52a0\u5907\u5fd8\u786e\u5b9a\u671f\u671b\u503c\n    memset(visited, 0, sizeof(visited));               \n    dfs(0, 0, 0);\n    cout << fixed << setprecision(1) << hp[0][0][0] << ' ' << elapsed[0][0][0] << '\\n';\n\n    return 0;\n}\n```",
        "postTime": 1614644833,
        "uid": 333388,
        "name": "metaphysis",
        "ccfLevel": 0,
        "title": "\u72e9\u730e\uff082021 CoE-II D\uff09"
    }
]