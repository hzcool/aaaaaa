[
    {
        "content": "Orz EA!\n\n\u9996\u5148\u4f60\u53d1\u73b0\uff0c\u5411\u4e0a\u6d41\u548c\u5411\u4e0b\u6d41\u5b9e\u9645\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u5de6\u53f3\u540c\u7406\uff0c\u5e76\u4e14\u64cd\u4f5c\u987a\u5e8f\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u7b56\u7565\u662f\u4e0b\u79fb $A$ \u6b21\u540e\u53f3\u79fb $B$ \u6b21\uff0c\u6b64\u65f6\u4e00\u4e2a\u70b9\u4f1a\u5411\u53f3\u5411\u4e0b\u5ef6\u4f38\u51fa\u4e00\u4e2a $(A+1) \\times (B+1)$ \u7684\u77e9\u5f62\u3002\n\n\u8003\u8651\u4e24\u4e2a\u9ed1\u70b9 $(x,y) \\to (x',y')$ \u5565\u65f6\u5019\u80fd\u8054\u901a\uff08\u4e0d\u59a8 $x<x'$, $y<y'$\uff09\uff0c\u90a3\u5c31\u662f $A \\ge x'-x-1$\uff0c$B \\ge y'-y-1$ \u7684\u65f6\u5019\u3002\u6700\u66b4\u529b\u7684\u60f3\u6cd5\u662f\uff0c\u628a\u4e24\u9ed1\u70b9\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a\u4e8c\u5143\u7ec4 $(x'-x-1,y'-y-1)$ \u7684\u8fb9\uff0c\u90a3\u6211\u4eec\u5c31\u8981\u6c42\u7684\u662f $\\max x + \\max y$ \u7684 MST\u3002\n\n\u4e00\u79cd\u6c42\u6cd5\u662f\u679a\u4e3e $\\max x$ \u7136\u540e\u8ba1\u7b97 $\\max y$ \u7684\u6700\u5c0f\u503c\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5c06\u6240\u6709 $M$ \u6761\u8fb9\u6309\u7167 $x$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u9010\u6761\u52a0\u5165\u8fdb\u6765\uff0c\u540c\u65f6 LCT \u7ef4\u62a4 $y$ \u8fd9\u7ef4\u7684 MST\uff0c\u53ef\u4ee5 $O(M \\log n)$\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5 $O(M \\log^2 M)$ \u6574\u4f53\u4e8c\u5206\uff0c\u6bd4\u8f83\u597d\u5199\u3002\n\n\u9ed1\u70b9\u6570\u8f83\u591a\u65f6 $M$ \u53ef\u4ee5\u5230 $O(n^2m^2)$ \u7684\u7ea7\u522b\uff0c\u4f46\u5176\u5b9e\u6709\u5f88\u591a\u8fb9\u662f\u4e0d\u9700\u8981\u7684\uff1a\u4ee5\u4e24\u4e2a\u9ed1\u70b9 $p,q$ \u4e3a\u5bf9\u89d2\u7684\u77e9\u5f62\u5185\uff0c\u5982\u679c\u8fd8\u5b58\u5728\u5176\u4ed6\u9ed1\u70b9\uff0c\u5219\u8fd9\u6761\u8fb9\u5c31\u4e0d\u9700\u8981\u4e86\uff0c\u56e0\u4e3a\u53ef\u4ee5\u7531\u8fd9\u4e24\u6761\u8f83\u77ed\u7684\u8fb9\u201c\u62fc\u5408\u201d\u8d77\u6765\u5f97\u5230\u3002\u8fd9\u6837\u8fde\u8fb9\u7684\u8bdd\uff0c\u663e\u7136\u540c\u4e00\u884c\u5185\u7684\u70b9\u8fde\u51fa\u7684\u8fb9\u662f $O(m)$ \u7ea7\u522b\uff0c\u6545\u603b\u8fb9\u6570\u662f $O(nm)$ \u7ea7\u522b\u7684\u3002\u5957\u7528\u4e0a\u9762\u6c42 MST \u7684\u505a\u6cd5\uff0c\u6211\u4eec\u5c31\u4ee5 $O(nm \\log nm)$ \u7684\u590d\u6742\u5ea6\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u3002\n\n\u53ef\u80fd\u4f1a\u5361\u5e38\uff0c\u4f46\u663e\u800c\u6613\u89c1\u8fd9\u4e2a $O(nm)$ \u7684\u8fb9\u6570\u5f88\u96be\u5361\u5230\u5f88\u6ee1\u3002\u6709\u4e00\u4e2a\u6709\u529b\u7684\u526a\u679d\uff1a\u4e00\u5f00\u59cb\u5b58\u5728\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u9ed1\u70b9\u53ef\u4ee5\u76f4\u63a5\u7f29\u8d77\u6765\u3002\n\n\u8fd9\u4efd\u4ee3\u7801\u662f $O(nm \\log n \\log m)$ \u7684\u6574\u4f53\u4e8c\u5206\uff0c\u53ef\u4ee5\u6bd4\u8f83\u5feb\u8dd1\u8fc7\u53bb\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define FOR(i,a,b) for(int i=a,i##i=b;i<=i##i;++i)\n#define ROF(i,a,b) for(int i=a,i##i=b;i>=i##i;--i)\nusing namespace std;\nconst int N=1e3+7,M=3*N*N;\nint n,m,C=1,lm,ct[M],T,ans[N],h[N],id[N],res=M,X[N],Y[N],g;\nchar s[N];\nstruct mem{int t,p,v;};\nstruct unf{\n\tint a[M],C=0;mem f[M];\n\tint& operator[](int x){return a[x];}\n\tvoid st(int x,int v){f[++C]={T,x,a[x]},a[x]=v;}\n\tvoid rbk(int t){for(;C&&f[C].t>=t;--C)a[f[C].p]=f[C].v;}\n}fa,rk;\nint rbk(int t){return fa.rbk(t),rk.rbk(t),T=t-1;}\nint fd(int x){return fa[x]==x?x:fd(fa[x]);}\nint merge(int x,int y){\n\tx=fd(x),y=fd(y);\n\tif(x!=y){\n\t\tif(rk[x]<rk[y])swap(x,y);\n\t\tct[T+1]=ct[T]-1,++T,fa.st(y,x);\n\t\tif(rk[x]==rk[y])rk.st(x,rk[x]+1);\n\t}\n\treturn ct[T]==1;\n}\nstruct edge{\n\tint u,v,x,y;\n\tvoid mtn(){\n\t\tu=fd(u),v=fd(v);\n\t\tif(u==v)x=m+1,y=n+1;\n\t}\n\tint add(int o){return x<=o?merge(u,v):0;}\n}x[M],y[M];\nvoid solve(int l,int r,int L,int R){\n\tif(L==R)FOR(i,l,r)ans[i]=L;\n\tif(l>r||L>R)return;\n\tint d=(l+r)/2,G,t=T+1,p=R;\n\tFOR(i,X[l],X[d+1]-1)if(x[i].y<L)x[i].add(M);\n\tG=T+1;\n\tFOR(i,Y[L],Y[R+1]-1)if(y[i].add(d)){p=y[i].y;break;}\n\tans[d]=p,rbk(G),solve(d+1,r,L,p),rbk(t);\n\tFOR(i,Y[L],Y[p]-1)y[i].add(l-1);\n\tsolve(l,d-1,p,R);\n}\nvoid link(int i,int j){\n\tif(id[i]&&id[j])++C,x[C]=y[C]={id[i],id[j],max(j-i-1,0),max(abs(h[j]-h[i])-1,0)};\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m),lm=max(n,m);\n\tFOR(i,1,n){\n\t\tscanf(\"%s\",s+1),s[m+1]='1';\n\t\tint w=1;\n\t\tFOR(j,1,m)if(s[j]=='1'){\n\t\t\tif(id[j])++C,x[C]=y[C]={ct[0]+1,id[j],0,i-h[j]-1};\n\t\t\tg=h[j],id[j]=++ct[0],h[j]=i;\n\t\t\tfor(int p=j-1,k=g;p>=w;--p)if(h[p]>k)k=h[p],link(p,j);\n\t\t\tfor(int p=j+1,k=g;s[p]<'1';++p)if(h[p]>k)k=h[p],link(j,p);\n\t\t\tw=j;\n\t\t}\n\t}\n\tFOR(i,1,ct[0])fa[i]=i;\n\tFOR(i,1,C)if(!x[i].y)x[i].add(0);\n\tFOR(i,1,C)x[i].mtn(),y[i].mtn();\n\tsort(x+1,x+C+1,[](edge a,edge b){return a.x<b.x;});\n\tsort(y+1,y+C+1,[](edge a,edge b){return a.y<b.y;});\n\twhile(x[C-1].y>n)--C;\n\tROF(i,C,1)X[x[i].x]=Y[y[i].y]=i;\n\tROF(i,m,1)if(!X[i])X[i]=X[i+1];\n\tROF(i,n,1)if(!Y[i])Y[i]=Y[i+1];\n\tY[n+2]=C+1,X[m+2]=C+1,solve(0,m,0,n+1);\n\tFOR(i,0,m)if(ans[i]<=n)res=min(res,i+ans[i]);\n\tprintf(\"%d\",res);\n\treturn 0;\n}\n```\n",
        "postTime": 1645511894,
        "uid": 78372,
        "name": "M4_SOPMODII_JR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7274 \u8349\u5730"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u56db\u4e2a\u65b9\u5411\u90fd\u79fb\u52a8\uff0c\u53ea\u9700\u4ece\u5de6\u53f3\uff0c\u4e0a\u4e0b\u4e2d\u4efb\u9009\u4e24\u4e2a\u65b9\u5411\u5373\u53ef\uff0c\u8bc1\u660e\u7b80\u8981\u6765\u8bf4\u5c31\u662f\u64cd\u4f5c\u65b9\u6848\u53ea\u4e0e\u76f8\u5bf9\u8ddd\u79bb\u6709\u5173\uff0c\u4e0e\u5177\u4f53\u6269\u5c55\u7684\u65b9\u5411\u6ca1\u6709\u5fc5\u7136\u8054\u7cfb\u3002\u53e6\u5916\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\u64cd\u4f5c\u4e4b\u95f4\u53ef\u4ee5\u4e92\u6362\uff0c\u5bf9\u7b54\u6848\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002\u4ee5\u6b64\u4e3a\u57fa\u7840\uff0c\u5728\u4ee5\u4e0b\u5185\u5bb9\uff0c\u7b14\u8005\u9ed8\u8ba4\u53ea\u8003\u8651\u5de6\u4e0e\u4e0b\u65b9\u5411\u3002\n\n\u90a3\u4ee5\u6b64\u4e3a\u57fa\u7840\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u51fa\u53ef\u4ee5\u4e8c\u5206\u64cd\u4f5c\u6b21\u6570\uff0c\u540c\u65f6\u66b4\u529b\u679a\u4e3e\u5de6\u8fb9\u6269\u5c55\u4e86\u591a\u5c11\u6b65\uff0c\u6a21\u62df check \u5373\u53ef\uff0c\u590d\u6742\u5ea6\u4e3a $O(n^3\\log n)$\uff0c\u540c\u65f6\u56e0\u4e3a\u672c\u9898\u5177\u6709\u5355\u8c03\u6027\uff0c\u8fbe\u5230\u5408\u6cd5\u72b6\u6001\u7684\u5de6\u4fa7\u64cd\u4f5c\u6b21\u6570\u589e\u52a0\uff0c\u4e0b\u4fa7\u64cd\u4f5c\u6b21\u6570\u5c31\u4f1a\u51cf\u5c11\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c\u5355\u8c03\u6307\u9488\u7684\u65b9\u6cd5\u4f18\u5316\u5230 $O(n^3)$\u3002\n\n\u8003\u8651\u6b63\u89e3\uff0c\u6211\u4eec\u5bf9\u4efb\u610f\u4e24\u4e2a\u9ed1\u70b9\u5efa\u8fb9\uff0c\u5b9a\u4e49\u8fb9\u6743\u4e3a\u4e8c\u5143\u7ec4 $(a,b)$ \u8868\u793a\u4e24\u70b9\u5728\u4e24\u4e2a\u65b9\u5411\u5750\u6807\u503c\u7684\u5dee\u8ddd\uff0c\u5373\u4e24\u70b9\u8054\u901a\u7684\u4ee3\u4ef7\u3002\u90a3\u6211\u4eec\u6700\u540e\u53ea\u9700\u8981\u9009\u51fa\u6700\u5c0f\u4ee3\u4ef7\u610f\u4e49\u4e0b\u8fb9\u7684\u96c6\u5408\uff0c\u4f7f\u4efb\u610f\u4e24\u70b9\u8054\u901a\u5373\u53ef\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u679a\u4e3e $max_a$\uff0c\u5bf9 $b$ \u8dd1 $MST$ \u6765\u5b9e\u73b0\uff0c\u4f46\u8fb9\u6570\u662f $n^2$ \u7ea7\u522b\u7684\uff0c\u590d\u6742\u5ea6\u4e3a $O(nm\\log n)$\u3002\n\n\u8003\u8651\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u5f88\u591a\u8fb9\u662f\u591a\u4f59\u7684\u3002\u5982\u4e0b\u56fe\u6240\u5c55\u793a\uff0c\u540c\u65f6\u9009\u62e9 $A$\uff0c$B$ \u8981\u6bd4\u9009\u62e9 $C$ \u66f4\u4f18\u3002 \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4xibuu0c.png)\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u628a\u6240\u6709\u7c7b\u4f3c $C$ \u7684\u8fb9\u5220\u6389\uff0c\u4e0d\u96be\u53d1\u73b0\u6574\u5f20\u56fe\u4f1a\u5448\u73b0\u5982\u4e0b\u5f62\u5f0f(\u56fe\u753b\u7684\u5f88\u70c2\uff0c\u6709\u4e00\u4e9b\u9519\u8bef\uff0c\u611f\u6027\u7406\u89e3....)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2uo289i6.png)\n\n\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u70b9\u53ea\u4f1a\u5411\u5728\u5176\u4e0b\u65b9\u4e14\u9ad8\u5ea6\u6700\u5927\u7684\u70b9\u8fde\u8fb9\uff0c\u6709\u6548\u8fb9\u53ea\u6709 $O(n)$ \u6761\uff0c\u8003\u8651\u5982\u4f55\u5b9e\u73b0\uff0c\u6211\u4eec\u987a\u5e8f\u904d\u5386\u6bcf\u4e00\u884c\uff0c\u8bb0\u5f55\u6bcf\u4e00\u5217\u51fa\u73b0\u7684\u6700\u9760\u4e0b\u9ed1\u70b9\u7684\u7f16\u53f7\u4e0e\u4f4d\u7f6e\uff0c\u5206\u522b\u7ef4\u62a4\u4ee5\u8fd9\u4e00\u5217\u5411\u5de6\uff0c\u5411\u53f3\u7684\u5355\u8c03\u6808\uff0c\u987a\u5e8f\u5efa\u8fb9\u5c31\u597d\u3002(\u8bb2\u7684\u4e0d\u662f\u5f88\u660e\u767d\uff0c\u5982\u679c\u4e0d\u7406\u89e3\u53ef\u4ee5\u770b\u4ee3\u7801)\u3002\n\n\u89e3\u51b3\u4e86\u8fb9\u6570\u7684\u95ee\u9898\u540e\uff0c\u6211\u4eec\u53ea\u5269\u4e0b\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5feb\u901f\u7684\u6c42\u51fa $n$ \u6b21\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7528\u6574\u4f53\u4e8c\u5206\uff0c\u5c06\u6743\u503c $a$ \u89c6\u505a\u4e8c\u5206\u7684\u5bf9\u8c61\uff0c\u6bcf\u6b21\u627e\u5230\u5728\u5bf9\u5e94\u4e8c\u5206\u5bf9\u8c61\u4e0b\u6ee1\u8db3\u6761\u4ef6\u7684 $b$ \u7684\u6700\u5c0f\u503c\uff0c\u518d\u7ee7\u7eed\u5212\u5206\u90e8\u5206\u6c42\u89e3\u5373\u53ef\uff0c\u4e3a\u907f\u514d\u4f7f\u7528 $LCT$\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u6a21\u62df\u6b64\u8fc7\u7a0b\u3002\u4e00\u4e2a\u66f4\u597d\u7684\u4f18\u5316\u662f\uff0c\u9884\u5148\u5c06\u5728\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\u7684\u9ed1\u70b9\u7f29\u8d77\u6765\uff0c\u4f1a\u63d0\u5347\u6548\u7387\u3002\u672c\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2\\log n)$\u3002\n\ncode:(\u6709\u4e9b\u538b\u884c\u60c5\u8c05\u89e3)\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N=1005;\ninline int read()\n{\n    int x=0,f=1; char c;\n    while(!isdigit(c=getchar())) if(c=='-') f=-1;\n    do x=(x<<1)+(x<<3)+(c^48); while(isdigit(c=getchar()));\n    return x*f;\n}\nint H,L,kk,acn,ret,tot;\nint sig[N],lin[N],ans[N],X[N],Y[N],in[N];\nstruct node{int x,y,a,b;}fir[N*N<<1],sec[N*N<<1];\nstruct Diset\n{\n    int fa[N*N],size[N*N],ope=0; struct His{int pos,fid;}his[N*N]; \n    int find(int x){ return (x==fa[x])?fa[x]:find(fa[x]); } \n    void init(int len){ for(int i=1;i<=len;i++) fa[i]=i,size[i]=1; }\n    bool merge(int x,int y)\n    {\n        x=find(x); y=find(y); if(x==y) return tot==1;\n        if(size[x]>size[y]) swap(x,y); fa[x]=y; size[y]+=size[x];\n        tot--; his[++ope]=(His){x,y}; return tot==1;\n    }\n    void Revoke(int tim) { while(ope>tim) fa[his[ope].pos]=his[ope].pos,size[his[ope].fid]-=size[his[ope].pos],tot++,ope--; }\n}self;\nvoid Divid(int l,int r,int F,int T)\n{\n    if(F>T||l>r) return; if(F==T){ for(int i=l;i<=r;i++) ans[i]=F; return; }\n    int mid=(l+r)>>1,pre=self.ope,fro,boun=T;\n    for(int i=X[l];i<=X[mid+1]-1;i++) if(fir[i].b<F) self.merge(fir[i].x,fir[i].y); fro=self.ope;\n    for(int i=Y[F];i<=Y[T+1]-1;i++) if(sec[i].a<=mid&&self.merge(sec[i].x,sec[i].y)){ boun=sec[i].b; break; }\n    ans[mid]=boun; self.Revoke(fro); Divid(mid+1,r,F,boun); self.Revoke(pre);\n    for(int i=Y[F];i<=Y[boun]-1;i++) if(sec[i].a<=l-1) self.merge(sec[i].x,sec[i].y); Divid(l,mid-1,boun,T);\n}\nsigned main()\n{\n    H=read(); L=read(); in[L+1]=1;\n    for(int i=1;i<=H;i++)\n    {\n        for(int j=1;j<=L;j++) scanf(\"%1d\",&in[j]);\n        for(int j=1,pre=1;j<=L;j++) if(in[j])\n        {\n            if(sig[j]) ++kk,fir[kk]=sec[kk]=(node){sig[j],tot+1,0,i-lin[j]-1}; sig[j]=++tot; \n            for(int k=j-1,s=lin[j];k>=pre;k--) if(lin[k]>s) s=lin[k],++kk,fir[kk]=sec[kk]=(node){sig[k],tot,j-k-1,max(i-lin[k]-1,0)};\n            for(int k=j+1,s=lin[j];!in[k];k++) if(lin[k]>s) s=lin[k],++kk,fir[kk]=sec[kk]=(node){sig[k],tot,k-j-1,max(i-lin[k]-1,0)};\n            pre=j; lin[j]=i;\n        }\n    }\n    self.init(tot);\n    for(int i=1;i<=kk;i++) if(!fir[i].a&&!fir[i].b) self.merge(fir[i].x,fir[i].y);\n    if(tot==1) return printf(\"0\\n\"),0;\n    for(int i=1;i<=kk;i++)\n    {\n        fir[i].x=sec[i].x=self.find(fir[i].x); fir[i].y=sec[i].y=self.find(fir[i].y);\n        if(fir[i].x==fir[i].y) fir[i].a=L+1,sec[i].b=H+1;\n    }\n    sort(fir+1,fir+kk+1,[&](const node A,const node B){return A.a<B.a;});\n    sort(sec+1,sec+kk+1,[&](const node A,const node B){return A.b<B.b;});\n    while(fir[kk].a>L) kk--; for(int i=kk;i>=1;i--) X[fir[i].a]=i,Y[sec[i].b]=i;\n    X[L+2]=X[L+1]=kk+1; for(int i=L;i>=0;i--) if(!X[i]) X[i]=X[i+1];\n    Y[H+2]=Y[H+1]=kk+1; for(int i=H;i>=0;i--) if(!Y[i]) Y[i]=Y[i+1];\n    ret=1e9; Divid(0,L,0,H+1); for(int i=0;i<=L;i++) if(ans[i]<=H) ret=min(ret,ans[i]+i); printf(\"%d\",ret);\n    return 0;\n}\n```",
        "postTime": 1667975747,
        "uid": 664961,
        "name": "crs_line",
        "ccfLevel": 0,
        "title": "P7274 \u8349\u5730 \u9898\u89e3"
    },
    {
        "content": "\u53ef\u4ee5\u53d1\u73b0\u4e0a\u548c\u4e0b\u662f\u7b49\u4ef7\u7684\uff0c\u540c\u7406\u5de6\u548c\u53f3\u4e5f\u662f\u7b49\u4ef7\u7684\u3002\n\n\u679a\u4e3e\u4e00\u5171\u5411\u53f3\u79fb\u52a8\u4e86 $a$ \u6b65\uff0c\u5c06\u6c34\u5e73\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e $a$ \u7684\u9ed1\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a\u5782\u76f4\u8ddd\u79bb\u7684\u8fb9\uff0c\u90a3\u4e48\u6b64\u65f6\u5411\u4e0b\u81f3\u5c11\u9700\u8981\u79fb\u52a8\u7684\u6b65\u6570 $b$ \u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u8fb9\u6743\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u53ef\u4ee5\u7528 LCT \u6765\u7ef4\u62a4\u3002\n\n\u4f46\u662f\u8fb9\u5b9e\u5728\u662f\u592a\u591a\u4e86\uff0c\u4e8e\u662f\u8003\u8651\u5355\u8c03\u6808\u4f18\u5316\u4e00\u4e0b\u8fde\u8fb9\uff0c\u90a3\u4e48\u8fb9\u6570\u5c31\u662f $O(nm)$ \u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n```\n#include<stdio.h>\n#include<algorithm>\n#include<set>\n#include<iostream>\n#include<vector>\n#define inf 1000000000\nusing namespace std;\nconst int maxN=1000005,maxn=maxN*3,maxm=1005;\nint n,m,ans,etot,es,vtot,top;\nint a[maxm][maxm],lft[maxm][maxm],rgt[maxm][maxm];\nint f[maxN],val[maxn];\nset< pair<int,int> >s;\nstring str;\nstruct edge {\n\tint L,x,y,z;\n} d[maxN<<1];\nstruct point {\n\tint x,y;\n} stk[maxN];\ninline int cmp(edge a,edge b) {\n\treturn a.L<b.L;\n}\nstruct Link_Cut_Tree {\n\tint cnt;\n\tint chd[maxn][2],f[maxn],tag[maxn],mx[maxn],id[maxn];\n\tinline void build() {\n\t\tcnt=0;\n\t}\n\tinline int check(int now) {\n\t\treturn chd[f[now]][0]==now? 0:1;\n\t}\n\tinline int checkroot(int now) {\n\t\treturn chd[f[now]][0]^now&&chd[f[now]][1]^now;\n\t}\n\tinline void connect(int now,int son,int dir) {\n\t\tf[son]=now,chd[now][dir]=son;\n\t}\n\tinline void pushup(int now) {\n\t\tmx[now]=val[now],id[now]=now;\n\t\tif(chd[now][0]&&mx[chd[now][0]]>mx[now])\n\t\t\tmx[now]=mx[chd[now][0]],id[now]=id[chd[now][0]];\n\t\tif(chd[now][1]&&mx[chd[now][1]]>mx[now])\n\t\t\tmx[now]=mx[chd[now][1]],id[now]=id[chd[now][1]];\n\t}\n\tinline void getlazy(int now) {\n\t\tswap(chd[now][0],chd[now][1]),tag[now]^=1;\n\t}\n\tinline void pushdown(int now) {\n\t\tif(tag[now])\n\t\t\tgetlazy(chd[now][0]),getlazy(chd[now][1]),tag[now]=0;\n\t}\n\tvoid deal(int now) {\n\t\tif(checkroot(now)==0)\n\t\t\tdeal(f[now]);\n\t\tpushdown(now);\n\t}\n\tinline void rotate(int now) {\n\t\tint fth=f[now],gfth=f[fth],frlt=check(now),grlt=check(fth);\n\t\tif(checkroot(fth)==0)\n\t\t\tchd[gfth][grlt]=now;\n\t\tf[now]=gfth;\n\t\tconnect(fth,chd[now][frlt^1],frlt),connect(now,fth,frlt^1);\n\t\tpushup(fth),pushup(now);\n\t}\n\tvoid splay(int now) {\n\t\tdeal(now);\n\t\twhile(now&&checkroot(now)==0) {\n\t\t\tint fth=f[now],frlt=check(now),grlt=check(fth);\n\t\t\tif(checkroot(fth)==0)\n\t\t\t\trotate(frlt^grlt? now:fth);\n\t\t\trotate(now);\n\t\t}\n\t\tpushup(now);\n\t}\n\tvoid access(int now) {\n\t\tint last=0;\n\t\twhile(now) {\n\t\t\tsplay(now);\n\t\t\tchd[now][1]=last;\n\t\t\tpushup(now);\n\t\t\tlast=now,now=f[now];\n\t\t}\n\t}\n\tvoid makeroot(int now) {\n\t\taccess(now),splay(now),getlazy(now),pushup(now);\n\t}\n\tvoid split(int x,int y) {\n\t\tmakeroot(x),access(y),splay(y);\n\t}\n\tvoid link(int x,int y) {\n\t\tmakeroot(x),f[x]=y;\n\t}\n\tvoid cut(int x,int y) {\n\t\tsplit(x,y);\n\t\tif(chd[y][0]==x&&chd[x][1]==0) {\n\t\t\tf[x]=chd[y][0]=0;\n\t\t\tpushup(x);\n\t\t}\n\t}\n} LCT;\nint find(int x) {\n\treturn f[x]==x? x:f[x]=find(f[x]);\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; i++) {\n\t\tcin>>str;\n\t\tfor(int j=1; j<=m; j++)\n\t\t\tif(str[j-1]=='1')\n\t\t\t\ta[i][j]=++vtot;\n\t}\n\tif(vtot==1) {\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\tfor(int i=1; i<=n; i++) {\n\t\tfor(int j=1; j<=m; j++)\n\t\t\tlft[i][j]=a[i][j-1]? j-1:lft[i][j-1];\n\t\tfor(int j=m; j>=1; j--)\n\t\t\trgt[i][j]=a[i][j+1]? j+1:rgt[i][j+1];\n\t}\n\tfor(int j=1; j<=m; j++) {\n\t\ttop=0;\n\t\tfor(int i=n; i>=1; i--) {\n\t\t\tif(rgt[i][j]) {\n\t\t\t\twhile(top&&stk[top].y>=rgt[i][j])\n\t\t\t\t\ttop--;\n\t\t\t\tstk[++top]=point {i,rgt[i][j]};\n\t\t\t}\n\t\t\tif(a[i][j]) {\n\t\t\t\twhile(top) {\n\t\t\t\t\td[++es]=edge {abs(j-stk[top].y),a[i][j],a[stk[top].x][stk[top].y],abs(i-stk[top].x)};\n\t\t\t\t\ttop--;\n\t\t\t\t}\n\t\t\t\tstk[++top]=point {i,j};\n\t\t\t}\n\t\t}\n\t}\n\tfor(int j=m; j>=1; j--) {\n\t\ttop=0;\n\t\tfor(int i=n; i>=1; i--) {\n\t\t\tif(lft[i][j]) {\n\t\t\t\twhile(top&&stk[top].y<=lft[i][j])\n\t\t\t\t\ttop--;\n\t\t\t\tstk[++top]=point {i,lft[i][j]};\n\t\t\t}\n\t\t\tif(a[i][j]) {\n\t\t\t\twhile(top) {\n\t\t\t\t\tif(stk[top].x!=i&&stk[top].y!=j)\n\t\t\t\t\t\td[++es]=edge {abs(j-stk[top].y),a[i][j],a[stk[top].x][stk[top].y],abs(i-stk[top].x)};\n\t\t\t\t\ttop--;\n\t\t\t\t}\n\t\t\t\tstk[++top]=point {i,j};\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1; i<=vtot; i++)\n\t\tf[i]=i,val[i]=-inf;\n\tLCT.build();\n\tsort(d+1,d+1+es,cmp),ans=inf;\n\tfor(int i=0,j=1; i<=m; i++) {\n\t\tfor(; j<=es&&d[j].L<=i+1; j++) {\n\t\t\tint x=d[j].x,y=d[j].y,z=d[j].z;\n\t\t\tif(x==y)\n\t\t\t\tcontinue;\n\t\t\tval[vtot+j]=d[j].z;\n\t\t\tif(find(x)!=find(y)) {\n\t\t\t\tetot++,f[find(x)]=find(y);\n\t\t\t\ts.insert(make_pair(z,j)),LCT.link(x,vtot+j),LCT.link(y,vtot+j);\n\t\t\t} else {\n\t\t\t\tLCT.split(x,y);\n\t\t\t\tif(LCT.mx[y]<=z)\n\t\t\t\t\tcontinue;\n\t\t\t\tint k=LCT.id[y]-vtot;\n\t\t\t\ts.erase(make_pair(d[k].z,k)),LCT.cut(d[k].x,vtot+k),LCT.cut(d[k].y,vtot+k);\n\t\t\t\ts.insert(make_pair(z,j)),LCT.link(x,vtot+j),LCT.link(y,vtot+j);\n\t\t\t}\n\t\t}\n\t\tif(etot==vtot-1)\n\t\t\tans=min(ans,i+max((s.rbegin()->first)-1,0));\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1648104543,
        "uid": 105611,
        "name": "IdnadRev",
        "ccfLevel": 0,
        "title": "\u3010DS\u8bb0\u5f55\u3011P7274 \u8349\u5730"
    }
]