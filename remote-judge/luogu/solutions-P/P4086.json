[
    {
        "content": "\u6b64\u9898\uff0c$emmmm...$\n\n\u5176\u5b9e\u7b80\u5316\u4e00\u4e0b\u9898\u76ee\uff0c\u5c31\u662f\u5728\u4ece$a_{k+1}$\u5230$a_n$\u91cc\u627e\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u5e76\u628a\u5b83\u53bb\u6389\uff0c\u518d\u7b97\u5269\u4e0b\u7684\u51e0\u4e2a\u6570\u7684\u5e73\u5747\u503c\uff0c\u6c42\u662f\u8fd9\u4e2a\u5e73\u5747\u503c\u6700\u5927\u7684$k$\n\n\u90a3\u4e48\uff0c\u5176\u5b9e\u5c31\u662f$3$\u90e8\u5206\uff1a\u6700\u5c0f\u503c\u3001\u5e73\u5747\u6570\u3001\u6c42\u5e73\u5747\u6570\u6700\u5927\u503c\u3002\n\n\u4e00\u4e2a\u4e00\u4e2a\u770b\uff1a\n\n### $1.$\n\n\u6700\u5c0f\u503c\u7684\u6734\u7d20\u89e3\u6cd5\u662f\u4ec0\u4e48\uff1f$O(n)$\u626b\u4e00\u904d\u554a\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u8981\u904d\u5386\u4e00\u6b21$k$\u4ece$1$\u5230$n$\uff0c\u800c\u4e14\u5982\u679c\u6c42\u5e73\u5747\u503c\u4e5f\u662f$O(n)$\u7684\u8bdd\uff0c\u603b\u7684\u6765\u8bf4\u5c31\u662f$O(n^3)$\u4e86\uff0c\u7edd\u5bf9\u7206\u70b8\u3002\n\n\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u4e0d\u7528\u6bcf\u6b21\u90fd\u6c42\u6700\u5c0f\u503c\u554a\uff0c\u4e00\u5f00\u59cb\u5c31\u9884\u5904\u7406\u6389\u4e0d\u5c31\u597d\u4e86\uff0c\u53cd\u6b63\u662f\u9759\u6001\u7684\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4efd\u4ee3\u7801\uff1a\n\n```\nfor(int i=n;i>=2;i--)mn[i]=min(mn[i+1],a[i]);\n```\n\u5c31\u8fd9\u4e48\u4e00\u884c\uff1f\n\n\u5bf9\uff0c\u5c31\u8fd9\u4e48\u4e00\u884c\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd$O(1)$\u6c42\u6700\u5c0f\u503c\u5566~~\n\n### $2.$\n\n\u5e73\u5747\u503c\u3002\u3002\u3002\n\n\u8981\u6c42\u5e73\u5747\u503c\uff0c\u5c31\u8981\u77e5\u9053\u4e00\u4e2a\u533a\u95f4\u7684\u548c\n\n\u548c\u6700\u5c0f\u503c\u4e00\u6837\uff0c\u6734\u7d20\u7684\u65b9\u6cd5\u662f$O(n)$\u7684\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u8981\u904d\u5386\u4e00\u6b21$k$\u4ece$1$\u5230$n$\uff0c\u603b\u7684\u6765\u8bf4\u53c8\u662f$O(n^2)$\u4e86\uff0c\u8fd8\u662f\u70b8\u4e86\u3002\n\n\u4f46\u662f\u6211\u4eec\u6709\u4ec0\u4e48\uff1f\u524d\u7f00\u548c\u554a\uff01\n\n\u800c\u4e14\u8fd9\u91cc\u8fd8\u4e0d\u7528\u524d\u7f00\u548c\uff0c\u53ea\u8981\u5012\u7740\u4e00\u4e2a\u4e00\u4e2a\u52a0\uff0c\u8fd8\u80fd\u5408\u5e76\u5230\u4e0a\u9762\u6700\u5c0f\u503c\u4ee3\u7801\u91cc\n\n\u4e8e\u662f\u5c31\u662f\u8fd9\u6837\u4e86\uff1a\n\n```\nfor(int i=n;i>=2;i--)mn[i]=min(mn[i+1],a[i]),sum[i]=sum[i+1]+a[i];\n```\n\u5c31\u8fd9\u4e48\u4e00\u884c\uff1f\n\n\u5bf9\uff0c\u8fd8\u662f\u5c31\u8fd9\u4e48\u4e00\u884c\u3002\n\n\u4e8e\u662f\uff0c$O(1)$\u6c42\u5e73\u5747\u503c\u4e5f$OK$\u5566~~\n\n### $2.5:$\n\n\u5176\u5b9e\u5e73\u5747\u6570\u4e5f\u80fd\u4e0e\u5904\u7406\u554a\uff0c\u5c31\u662f\n\n```\n(sum[i]-min[i])/(n-i)\n```\n\u561b\n\n\u4e8e\u662f\u5c31\u662f\u8fd9\u6837\u4e86\uff1a\n\n```\nfor(int i=n;i>=2;i--){\n    mn[i]=min(mn[i+1],a[i]);\n    sum[i]=sum[i+1]+a[i];\n    if(i!=n)avr[i]=(sum[i]-mn[i])/(double)(n-i);\n}\n```\n\u518d\u5c31\u662f\u6bd4\u8f83\u4e86\uff0c\u6b64\u5904\u4e0d\u518d\u8bf4\u660e\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```\n#include<algorithm>\n#include<bitset>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<iostream>\n#include<queue>\n#include<set>\n#include<stack>\n#include<string>\n#include<vector>\nusing namespace std;\n#define ll long long\n#define f(i,a,b) for(int i=a;i<=b;i++)\ninline ll read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\n#define d read()\nll n;\ndouble a[1000010];\ndouble avr[1000010];\ndouble sum[1000010];\ndouble mn[1000010];\ndouble mx;\nint main(){\n\tn=d;\n\tf(i,1,n+1)mn[i]=10010;\n\tf(i,1,n)scanf(\"%lf\",&a[i]);\n\tfor(int i=n;i>=2;i--){\n\t\tmn[i]=min(mn[i+1],a[i]);\n\t\tsum[i]=sum[i+1]+a[i];\n\t\tif(i!=n)avr[i]=(sum[i]-mn[i])/(double)(n-i);\n\t}\n\tf(i,2,n-1)mx=max(mx,avr[i]);\n\tf(i,2,n-1)if(mx==avr[i])printf(\"%lld\\n\",i-1);\n\treturn 0;\n}\n```\n",
        "postTime": 1588297783,
        "uid": 90706,
        "name": "_jimmywang_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework S\u3011"
    },
    {
        "content": "## \u672c\u9898\u601d\u8def\uff1a\n\n1. \u6309\u6b63\u5e38\u601d\u7ef4\u8bfb\u5165\u9898\u76ee\u6240\u8ff0\u7684\u6240\u6709\u6570\u636e\u3002\u6682\u65f6\u4e0d\u505a\u4efb\u4f55\u9884\u5904\u7406\u3002\n\n\n2. \u5b9a\u4e49\u5173\u952e\u53d8\u91cf\uff1amins\u8868\u793a\u5f53\u524d\u533a\u95f4\u5185\u7684\u6700\u5c0f\u6210\u7ee9\uff0csum\u8868\u793a\u5f53\u524d\u533a\u95f4\u5185\u6210\u7ee9\u603b\u548c\uff0caver\u8868\u793a\u5f53\u524d\u5df2\u77e5\u6700\u5927\u5e73\u5747\u6210\u7ee9\u3002\n\n\n3. \u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u679a\u4e3e\u533a\u95f4\uff0c\u4e5f\u5c31\u662f\u679a\u4e3ek\u7684\u503c\uff0c\u9012\u63a8\u6c42\u51fa\u6700\u4f18\u89e3\uff0c\u5b58\u5728\u6570\u7ec4k\u4e2d\u3002\uff08\u8be6\u89c1\u4ee3\u7801\u6ce8\u91ca\uff09\n\n\n~~\uff08**\u6700\u4f18\u89e3**\u4fdd\u6301\u8005\uff012018.1.23\u63d0\u4ea4\uff09~~\n\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#define min(a,b) (a<b?a:b)\n#define rep1(i,a,b) for(register int i=a;i<=b;i++)\n#define rep2(i,a,b) for(register int i=a;i>=b;i--)\n//\u8bf7\u81ea\u884c\u5ffd\u7565\u4ee5\u4e0adefine\u2026\u2026\nusing namespace std;\nint n,k[100002],cnr=0;     //cnr\u8868\u793ak\u7684\u6570\u91cf\uff0c\u521d\u59cb\u4e3a0\nint s[100002],mins,sum;\ndouble aver=0;\ninline int read()     //\u5feb\u8bfb\n{\n    int s=0;\n    char c=getchar();\n    while(c<'0'||c>'9')  c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        s=(s<<1)+(s<<3)+c-'0';\n        c=getchar();\n    }\n    return s;\n}\nint main()\n{\n    n=read();\n    rep1(i,1,n)  s[i]=read();     //\u6309\u7167\u6b63\u5e38\u601d\u8def\u8bfb\u5165\n    mins=s[n];  sum=s[n];     //\u5c06\u5f53\u524d\u7684mins\uff08\u533a\u95f4[n,n]\u6700\u5c0f\u6210\u7ee9\uff09\u8d4b\u4e3as[n]\uff1b\u5c06\u5f53\u524d\u7684sum\uff08\u533a\u95f4[n,n]\u603b\u6210\u7ee9\uff09\u8d4b\u4e3as[n]\n    rep2(i,n-1,2)     //\u679a\u4e3e\u533a\u95f4\u5de6\u754ci\uff0c\u5373\u679a\u4e3e\u533a\u95f4[i,n]\n    {\n        mins=min(mins,s[i]);     //\u533a\u95f4[i,n]\u4e2d\u7684\u6700\u5c0f\u6210\u7ee9\uff08\u524d\u7f00\u548c\u601d\u60f3\uff09\n        sum+=s[i];     //\u533a\u95f4[i,n]\u4e2d\u7684\u603b\u6210\u7ee9\uff08\u4f9d\u65e7\u662f\u524d\u7f00\u548c\u601d\u60f3\u2026\u2026\uff09\n        if((sum-mins)/(double)(n-i)>aver)     //\u5982\u679c\u603b\u6210\u7ee9\u9664\u53bb\u6700\u5c0f\u6210\u7ee9\u540e\u7684\u5e73\u5747\u6210\u7ee9\u5c0f\u4e8e\u5f53\u524d\u6700\u5927\u5e73\u5747\u6210\u7ee9\n        //\u6ce8\u610f\uff1a\u533a\u95f4[i,n]\u4e2d\u539f\u672c\u6709n-i+1\u4e2a\u5143\u7d20\uff0c\u7136\u800c\u9664\u53bb\u4e86\u6700\u5c0f\u5143\u7d20\uff0c\u6545\u6709n-i\u4e2a\u5143\u7d20\n        {\n            cnr=1;     //cnr\u7684\u503c\u53d8\u4e3a0\uff0c\u56e0\u4e3a\u6b64\u65f6\u6709\u5176\u4ed6k\u7684\u503c\u4f7f\u5f97\u5e73\u5747\u6210\u7ee9\u5927\u4e8e\u5f53\u524d\u6700\u5927\u5e73\u5747\u6210\u7ee9\n            k[cnr]=i-1;     //k\u7684\u503c\u4e3a\uff1a\u533a\u95f4\u5de6\u754c-1\n            aver=(sum-mins)/(double)(n-i);     //\u66f4\u65b0\u6700\u5927\u5e73\u5747\u6210\u7ee9\n        }else  if((sum-mins)/(double)(n-i)==aver)     //\u5982\u679c\u5f53\u524d\u5e73\u5747\u6210\u7ee9\u4e5f\u662f\u6700\u5927\u5e73\u5747\u6210\u7ee9\n            k[++cnr]=i-1;     //k\u7684\u6570\u91cf\u589e\u52a01\uff0c\u4e14\u5c06\u6b64\u65f6\u7684k\u7684\u503c\u5b58\u5165\u6570\u7ec4\n    }\n    rep2(i,cnr,1)  printf(\"%d\\n\",k[i]);     //\u56e0\u4e3a\u5728\u9012\u63a8\u8fc7\u7a0b\u4e2d\uff0ck\u7684\u503c\u662f\u964d\u5e8f\u5b58\u5165\u6570\u7ec4\u7684\uff0c\u6545\u6b64\u65f6\u8981\u9006\u5e8f\u8f93\u51fa\u4f7f\u5f97k\u7684\u503c\u5347\u5e8f\n    return 0;     //\u5b8c\u7f8e\u5730\u7ed3\u675f\n}\n```\n\n\u770b\u5230\u697c\u4e0a\u5927\u4f6c\u7684\u4ee3\u7801\u5f00\u4e863\u4e2adouble\u6570\u7ec4\u3001\u7528\u4e86\u597d\u591a\u6b21for\u3001\u8fc7\u7a0b\u4e5f\u633a\u7e41\u7410\u7684\u2026\u2026\n\n\n\u672c\u4eba\u849f\u84bb\uff0c\u9898\u89e3\u5982\u679c\u6709\u8bef\u8bf7\u5404\u4f4d\u5927\u4f6c\u7ea0\u6b63\uff01\n",
        "postTime": 1516718483,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework\u3011"
    },
    {
        "content": "\u53ea\u9700\u8981\u6ce8\u610f\u5b9e\u6570\u8fd0\u7b97\u7684\u4e00\u4e9b\u95ee\u9898\uff08\u5982\u7cbe\u5ea6\uff09\u5373\u53efAC\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#define EPS 1e-6\n//\u5b9e\u6570\u6bd4\u8f83\u5927\u5c0f\uff0c\u8981\u5e26EPS\n \ninline int Read()//\u5feb\u8bfb \n{\n    int x = 0;char c = getchar();\n    while(!isdigit(c))\n        c = getchar();\n    while(isdigit(c))\n    {\n        x = (x << 3) + (x << 1) + c - '0';\n        c = getchar();\n    }\n    return x;\n}\n\ndouble score[100005], minn[100005], grade[100005], maxn=0.0, sum=0.0;\n\nint main()\n{\n    int n=Read();\n    for (int i = 1; i <= n; ++i)\n    {\n        score[i] = Read();//\u8bb0\u5f55\u6bcf\u9053\u9898\u7684\u5f97\u5206 \n        sum += score[i];//\u9884\u5904\u7406\u5f97\u5206\u603b\u548c \n    }\n    minn[n] = score[n];\n    for (int i = n - 1; i; --i)\n        minn[i] = score[i] < minn[i + 1] ? score[i] : minn[i + 1];\n    //minn\u6570\u7ec4\u4ee3\u8868[i,n]\u533a\u95f4\u5185\u7684\u6700\u4f4e\u5206 \n    for (int i = 1; i <= n - 2; ++i)\n    {\n        sum -= score[i];\n        //\u6b64\u65f6\u7684sum\u4e3a[i + 1, n]\u533a\u95f4\u5185\u7684\u5206\u6570\u548c \n        grade[i] = (sum - minn[i + 1]) / (double)(n - i - 1);\n        maxn = grade[i] > maxn ? grade[i] : maxn;\n        //maxn\u4ee3\u8868\u6700\u9ad8\u5e73\u5747\u5f97\u5206 \n    }\n    \n    for (int i = 1; i <= n - 2; ++i)\n    {\n        if (maxn - grade[i] < EPS && maxn - grade[i] > - EPS)\n        //\u5373maxn==grade[i] \n            printf(\"%d\\n\", i);\n    }\n    return 0;\n}\n```",
        "postTime": 1516617069,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u601d\u8def\u8fd8\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u533a\u95f4\u548c\uff0c\u679a\u4e3ek\u503c\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u6bcf\u6b21\u679a\u4e3e\u7684k\uff0c\u5982\u679c\u4f7f\u5f97\u5e73\u5747\u6210\u7ee9\u5927\u4e8e\u5f53\u524d\u6700\u5927\u5e73\u5747\u6210\u7ee9\uff0c\u5c31\u66f4\u65b0\u5f53\u524d\u7684\u6700\u5927\u5e73\u5747\u6210\u7ee9\uff0c\u6e05\u7a7a\u7b54\u6848\u6570\u7ec4\uff0c\u653e\u5165\u8fd9\u4e2ak\u503c\u3002\n\n\u5982\u679c\u8fd9\u6b21\u5e73\u5747\u6210\u7ee9\u7b49\u4e8e\u5f53\u524d\u6700\u5927\u5e73\u5747\u6210\u7ee9\uff0c\u90a3\u4e48\u76f4\u63a5\u628ak\u503c\u52a0\u5165\u7b54\u6848\u6570\u7ec4\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tchar c;int res=0,flag=1;\n\tfor(;!isdigit(c);c=getchar())if(c=='-')flag=-1;\n\tfor(;isdigit(c);c=getchar())res=res*10+c-'0';\n\treturn res*flag;\n}\nconst int N=100010;\nint n;\nint sum[N<<2],Min[N<<2];\nint s,minn;\ndouble last;\nvector<int>ans; \nvoid build(int i,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tsum[i]=Min[i]=read();\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(i<<1,l,mid);\n\tbuild(i<<1|1,mid+1,r);\n\tsum[i]=sum[i<<1]+sum[i<<1|1];\n\tMin[i]=min(Min[i<<1],Min[i<<1|1]);\n}\nvoid query(int i,int l,int r,int x,int y)\n{\n\tif(l>=x&&r<=y)\n\t{\n\t\ts+=sum[i];\n\t\tminn=min(minn,Min[i]);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid)query(i<<1,l,mid,x,y);\n\tif(y>mid) query(i<<1|1,mid+1,r,x,y);\n}\nint main()\n{\n\tn=read();\n\tbuild(1,1,n);\n\tfor(int k=1;k<=n-2;k++)\n\t{\n\t\t// k+1  ->  n\n\t\tminn=INT_MAX;\n\t\ts=0;\n\t\tquery(1,1,n,k+1,n);\n\t\tdouble score=(s-minn)*1.0/(double)(n-k-1);\n\t\tif(score>last)\n\t\t{\n\t\t\tans.clear();\n\t\t\tans.push_back(k);\n\t\t\tlast=score;\n\t\t}\n\t\telse if(score==last)\n\t\t{\n\t\t\tans.push_back(k);\n\t\t}\n\t}\n\tfor(int i:ans)\n\t{\n\t\tprintf(\"%d\\n\",i);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1587977248,
        "uid": 203102,
        "name": "Diamiko",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework S\u3011"
    },
    {
        "content": "**\u9898\u89e3 [P4086 \u3010[USACO17DEC]My Cow Ate My Homework S\u3011](https://www.luogu.com.cn/problem/P4086)**  \n# Description  \n\u7ed9\u4f60\u4e00\u4e32\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4\uff0c\u5728\u53bb\u6389\u524d $k$ \u4e2a\u6570\u5b57\u548c\u5270\u4e0b\u6765\u6570\u5b57\u4e2d**\u6700\u5c0f**\u7684\u6570\u5b57\u540e\uff0c\u5c06\u5269\u4e0b\u6765\u7684\u6570\u5b57\u6c42**\u5e73\u5747\u503c**\uff0c\u4f7f\u5f97\u5e73\u5747\u503c**\u6700\u5927**\uff0c\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684**\u6240\u6709** $k$ \u7684\u503c\uff0c\u628a\u8fd9\u4e9b $k$ **\u6362\u884c\u8f93\u51fa**\u3002  \n# Solution  \n\u8fd9\u9898\u6211\u4eec\u8003\u8651\u524d\u7f00\u548c\uff0c\u8bbe $\\text{sum}(i)$ \u8868\u793a\u533a\u95f4 $[1,i]$ \u4e2d\u6240\u6709\u6570\u5b57\u7684\u548c\uff0c$\\min(i)$ \u8868\u793a**\u533a\u95f4 $[i,n]$** \u4e4b\u95f4\u6240\u6709\u6570\u5b57\u7684\u6700\u5c0f\u503c\u3002\u63a5\u4e0b\u6765\u679a\u4e3e $k$ \u7684**\u6240\u6709\u53ef\u80fd\u53d6\u503c** ,\u5e76\u786e\u5b9a **\u6700\u5927\u6570\u5b57** \u540e\u627e\u5230\u6240\u6709\u7684 $k$ \u5e76\u4e14\u8f93\u51fa\u5373\u53ef\u3002  \n# Code\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1000009;\nconst double eps = 0.00000000000217;//\u786e\u5b9a\u6700\u5c0f\u7cbe\u5ea6\uff0c\u4e0d\u7136\u53ef\u80fd\u4f1a\u51fa\u9519\n\nint sum[N],n,Min[N],a[N];\ndouble Score,Max;\n\ntemplate<class T>\ninline void read(T& x) {//\u5feb\u8bfb\n\tx = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') {\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9') {\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n}\n\nint main() {\n\tread(n);\n\tsum[0] = 0;Min[n + 1] = 2147483647;\n\tfor(int i = 1;i <= n;i++) {\n\t\tread(a[i]);\n\t\tsum[i] = sum[i - 1] + a[i];//\u524d\u7f00\u548c\n\t}\n\tfor(int i = n;i >= 1;i--) {\n\t\tMin[i] = min(Min[i + 1],a[i]);//\u540e\u7f00\u6700\u5c0f\u503c\n\t}\n\tfor(int i = 1;i <= n - 2;i++) {//\u679a\u4e3e\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684k\u503c\n\t\tScore = (sum[n] - sum[i] - Min[i]) * 1.0 / (n - i - 1);//\u8ba1\u7b97\u5f0f\u5b50\n\t\tif(Score - Max >= eps) {//\u786e\u5b9a\u6700\u5927\u503c\n\t\t\tMax = Score;\n\t\t}\n\t}\n\tfor(int i = 1;i <= n - 2;i++) {\n\t\tScore = (sum[n] - sum[i] - Min[i]) * 1.0 / (n - i - 1);\n\t\tif(fabs(Score - Max) < eps) printf(\"%d\\n\",i);//\u627e\u5230\u6240\u6709\u7684k\u5e76\u4e14\u8f93\u51fa\n\t}\n\treturn 0;\n}\n```  \n\u672c\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta(n)$\u3002",
        "postTime": 1593918966,
        "uid": 86971,
        "name": "TRZ_2007",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework S\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u770b\u89c1\u60f3\u7528\u7ebf\u6bb5\u6811\uff0c\u540e\u6765\u53d1\u73b0\u66b4\u529b\u5c31\u884c\uff0c\u4e8e\u662f\u66b4\u529b\u5c31\u6765\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100001],sum[100001],mi[100001];//\u7528int,\u4e0d\u7528double,\u8fd9\u91cc\u7528double\u4f1awa\u4e24\u4e2a\u70b9\u3002\nint n;\nint main()\n{\n\tcin>>n;\n\tmemset(mi,7873833,sizeof(mi));//mi\u662f\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u8981\u5728\u8fd9\u91cc\u5148\u8d4b\u4e00\u4e2a\u5927\u4e8e100000\u7684\u503c\uff0c\u4e3a\u4ec0\u4e48\u5927\u4e8e100000\u8bf7\u53bb\u770b\u9898\u3002\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t\tsum[i]=sum[i-1]+a[i];//\u524d\u7f00\u548c\n\t}\n\tfor(int k=n-2;k>=1;k--)//\u4ece\u540e\u5411\u524d\uff0c\u56e0\u4e3a\u524d\u9762\u7684\u6570\u662f\u4f1a\u88ab\u5403\u6389\u7684~~\u6211\u4e5f\u60f3\u8981\u4e00\u53ea\u8fd9\u6837\u7684\u5ba0\u7269QAQ~~\u3002\n\t{\n\t\tmi[k]=min(mi[k+1],a[k]);\n\t}\n\tdouble maxn=0.0,minn=1938120.0;//double,\u8981\u7528double\uff0c\u4e0d\u7136wa\u4e03\u4e2a\u70b9\u3002\n\tfor(int k=1;k<=n-2;k++)\n\t{\n\t\tmaxn=max((sum[n]-sum[k]-mi[k])/(double)(n-k-1),maxn);//\u9884\u5904\u7406\uff0c\u7edf\u8ba1\u6700\u5927\u503c\uff08\u6ce8\u610f\u7cbe\u5ea6\uff0c\u7528double\uff09\u3002\n\t}\n\tfor(int k=1;k<=n-2;k++)\n\t{\n\t\tif((sum[n]-sum[k]-mi[k])/(double)(n-k-1)==maxn)//\u6ce8\u610f\u7cbe\u5ea6\uff0c\u7528double\u3002\n\t\tcout<<k<<endl;//\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\uff0c\u53cd\u6b63\u662f\u4ece\u524d\u5f80\u540e\u679a\u4e3e\u3002\n\t}\n}\n```",
        "postTime": 1542508997,
        "uid": 94437,
        "name": "philosopherchang",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework\u3011"
    },
    {
        "content": "**\u7ebf\u6bb5\u6811\u7b80\u5355\u5e94\u7528**\n\n**\u601d\u8def\uff1a**\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u4ee5\u53ca\u533a\u95f4\u548c\n\n\u7136\u540e\u679a\u4e3ek\uff08 i \u2264 k \u2264 n - 2 \uff09 \uff0c\u5c06[1 , n ] \u5206\u4e3a \u591a\u4e2a[ 1 + k ,n ]\uff0c\u53d6\u8fd9\u6240\u6709\u533a\u6bb5\u7684\u6309\u9898\u76ee\u6240\u8bf4\u7684\u5e73\u5747\u503c\n\n\u7528flag\u6570\u7ec4\u5b58\u50a8\u76f8\u540c\u5e73\u5747\u503c\u7684 k \u503c\uff0ccnt\u6765\u6807\u8bb0\u5143\u7d20\u4e2a\u6570\u3002\u82e5\u5f53\u524d\u533a\u6bb5\u5e73\u5747\u503c\u5927\u4e8e\u4e4b\u524d\u7684\u5e73\u5747\u503c\uff0c\u5219\u6e05\u9664flag\u6570\u7ec4\uff0c\u91cd\u65b0\u5b58\u5165\u65b0\u7684 k \u503c\u3002\n\n**\u4ee3\u7801\u5982\u4e0b\uff1a**\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 100008\n#define lson root<<1\n#define rson root<<1|1\nusing namespace std;\nint n, a[MAXN], flag[MAXN];\nint ans, m, cnt;\nstruct Tree\n{\n    int l, r;\n    int  mmin, sum;\n}xtree[MAXN << 2];\ninline void build(int root, int l, int r)\n{\n    xtree[root].l = l, xtree[root].r = r;\n    if (l == r)\n    {\n        xtree[root].mmin = xtree[root].sum = a[l];\n        return;\n    }\n    int mid = (l + r) / 2;\n    build(lson, l, mid), build(rson, mid + 1, r);\n    xtree[root].mmin = min(xtree[lson].mmin, xtree[rson].mmin);\n    xtree[root].sum = xtree[lson].sum + xtree[rson].sum;\n    return;\n}\ninline void query(int root, int fl, int fr)\n{\n    if (xtree[root].l >= fl && xtree[root].r <= fr)\n    {\n        ans += xtree[root].sum;\n        m = min(xtree[root].mmin, m);\n        return;\n    }\n    int mid = (xtree[root].l + xtree[root].r) / 2;\n    if (fl <= mid)\n        query(lson, fl, fr);\n    if (mid < fr)\n        query(rson, fl, fr);\n    return;\n}\nint main()\n{\n    while (~scanf(\"%d\", &n))\n    {\n        memset(xtree, 0, sizeof(xtree));\n        for (int i = 1; i <= n; i++)\n            scanf(\"%d\", &a[i]);\n        build(1, 1, n);\n        cnt = 0;\n        double t = 0;\n        for (int i = 1; i <= n - 2; i++)\n        {\n            ans = 0;\n            m = 0x3f3f3f3f;\n            query(1, 1 + i, n);\n            double s = (double)(ans - m) / (double)(n - i - 1);//\u53d6\u8fd9\u6bb5\u533a\u95f4\u7684\u5e73\u5747\u503c\n            if (t == s)//\u5982\u679c\u4e0e\u4e4b\u524d\u6700\u5927\u5e73\u5747\u503c\u76f8\u540c\uff0c\u5219\u52a0\u5165flag\u6570\u7ec4\n                flag[++cnt] = i;\n            else if (s > t)//\u5982\u679c\u5f53\u524d\u5e73\u5747\u503c\u66f4\u5927\uff0c\u5219\u91cd\u65b0\u5b58\u50a8 k \u503c\n            {\n                cnt = 0;\n                flag[++cnt] = i;\n                t = s;\n            }\n        }\n        for (int i = 1; i <= cnt; i++)\n            printf(\"%d\\n\", flag[i]);\n    }\n}\n```\n",
        "postTime": 1557633434,
        "uid": 178665,
        "name": "\u5927\u5934\u51b2\u950b\u8f66\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework\u3011"
    },
    {
        "content": "# \u7ebf\u6bb5\u6811+\u524d\u7f00\u548c+STL\n### \u601d\u8def\n\u6211\u4eec\u53ef\u4ee5\u5148\u6a21\u62df\u4e0b\u66b4\u529b\u8ba1\u7b97\u7684\u8fc7\u7a0b\uff0c\u5373**\u679a\u4e3e\u4ece\u5f53\u524d\u6210\u7ee9$i$\u5f00\u59cb\u5230\u7b2c$n-2$\u4e2a\u6210\u7ee9\u7684\u548c\uff0c\u987a\u4fbf\u8bb0\u5f55\u8fd9\u6bb5\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c**\u7136\u540e\u8ba1\u7b97\u5e73\u5747\u5206\u5e76\u4e0e\u6700\u9ad8\u5e73\u5747\u5206\u5bf9\u6bd4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u60f3\u4e0b\u80fd\u4e0d\u80fd\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff0c__\u5bf9\u4e8e\u6c42\u548c\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6210\u7ee9\u662f\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u7684\uff0c\u5373\u67d0\u6bb5\u533a\u95f4\u5185\u7684\u6210\u7ee9\u4e4b\u548c\u662f\u56fa\u5b9a\u503c\u3002__ \u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u591f\u60f3\u5230\u5229\u7528 __\u524d\u7f00\u548c__ \u9884\u5904\u7406\u4e0b\u6bcf\u4e00\u6bb5\u533a\u95f4\u7684\u6210\u7ee9\u548c\uff0c\u7136\u540e\u679a\u4e3e\u533a\u95f4\u8d77\u70b9\u4e0e\u7ec8\u70b9\u5e76\u505a\u5dee\u5373\u53ef\u5f97\u5230\u8fd9**\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u6210\u7ee9\u4e4b\u548c**\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4e0b\u600e\u4e48\u7b97\u8fd9\u6bb5\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\u9996\u5148\u8003\u8651\u4e0b\u66b4\u529b\uff0c\u679a\u4e3e\u6bcf\u4e2a\u5206\u6570\u7136\u540e\u8bb0\u5f55\u4e0b\u6765\uff0c\u590d\u6742\u5ea6\u4e3a$O(n)$\uff0c\u59a5\u59a5\u7684 __\u8d85\u65f6__\u3002 \u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e0b\u7ebf\u6bb5\u6811\uff0c__\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6240\u6709\u533a\u95f4\u7684\u6700\u5c0f\u503c__\uff0c\u7136\u540e\u679a\u4e3e\u533a\u95f4\u76f4\u63a5\u67e5\u8be2\uff0c\u590d\u6742\u5ea6\u4e3a$O(logn)$\uff0c\u80fd\u8fc7\u8fd9\u4e2a\u9898\u3002\u800c\u4e14\u56e0\u4e3a\u8fd9\u4e2a\u9898\u6ca1\u6709\u4fee\u6539\u8981\u6c42\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u5199\u4fee\u6539\u51fd\u6570\u3002\n\n\u6700\u540e\u60f3\u60f3\u600e\u4e48\u8bb0\u5f55\u7b54\u6848\uff0c\u56e0\u4e3a __\u53ef\u80fd\u5b58\u5728\u5f88\u591a\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4__~~\u4e8b\u5b9e\u4e0a\u7528\u4f8b\u91cc\u5c31\u4e00\u4e2a~~ \uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u9009\u62e9 __STL\u91cc\u7684vector__ \u6765\u5b58\u653e\u7b54\u6848\u3002\n\n```\n#include <iostream>\n#include <cstdio>\n#include <vector>\nusing namespace std;\ntypedef long long LL;\nconst int N = 100000 + 100, M = N * 4;\nint arr[N], root[M];\nLL s[N];\nvector<int > res;\n// \u5efa\u7acb\u7ebf\u6bb5\u6811\nvoid build(int now, int left, int right) {\n\t// \u5982\u679c\u8d70\u5230\u4e86\u53f6\u5b50\u8282\u70b9\uff0c\u5c06\u5176\u8d4b\u503c\n\tif (left == right) {\n\t\troot[now] = arr[left];\n\t\treturn;\n\t}\n\tint mid = (left + right) >> 1;\n\tint l_node = now << 1, r_node = now << 1 | 1;\n\tbuild(l_node, left, mid);\n\tbuild(r_node, mid + 1, right);\n   // \u5f53\u524d\u8282\u70b9\u7684\u6700\u5c0f\u503c\u5c31\u662f\u5b83\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u503c\n\troot[now] = min(root[l_node], root[r_node]);\n}\nint query(int now, int left, int right, int L, int R) {\n\t// \u5982\u679c\u5df2\u7ecf\u627e\u5230\u4e86\u5408\u6cd5\u533a\u95f4\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7b54\u6848\u4ece\u800c\u63d0\u5347\u6548\u7387\n\tif (L <= left && right <= R) return root[now];\n   // \u907f\u514d\u65e0\u610f\u4e49\u67e5\u8be2\n\tif(L > right || R < left) return 1e9;\n\tint mid = (left + right) >> 1;\n\tint l_node = now << 1, r_node = now << 1 | 1;\n   // \u8fd4\u56de\u533a\u95f4\u6700\u5c0f\u503c\n\treturn min(query(l_node, left, mid, L, R), query(r_node, mid + 1, right, L, R));\n}\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\ts[0] = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &arr[i]);\n     \t// \u9884\u5904\u7406\u524d\u7f00\u548c\uff0c\u6ce8\u610f\u5f00long long\u9632\u6b62\u6ea2\u51fa\n\t\ts[i] = s[i - 1] + arr[i];\n\t}\n\tbuild(1, 1, n);\n\tdouble temp, maxScore = -1e9;\n\tfor (int i = 1; i <= n - 2; i++) {\n    // \u8ba1\u7b97\u5e73\u5747\u5206\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684+.0\u5c06\u524d\u9762\u8fd9\u4e2a\u5f0f\u5b50\u8f6c\u6362\u4e3adouble\u7c7b\u578b\uff0c\u5426\u5219\u7b54\u6848\u5c31\u662f\u4e2a\u6574\u5f62\uff01\n\t\ttemp = (s[n] - s[i] - query(1, 1, n, i + 1, n) + .0) / (n - i - 1);\n     // \u5982\u679c\u51fa\u73b0\u4e86\u65b0\u7684\u6700\u5927\u503c\uff0c\u6e05\u7a7a\u7ed3\u679c\uff0c\u7136\u540e\u66f4\u65b0\u6700\u5927\u503c\n\t\tif (temp > maxScore) maxScore = temp, res.clear();\n     // \u5982\u679c\u5f53\u524d\u5206\u6570\u662f\u6700\u9ad8\u5206\uff0c\u5c31\u5c06\u5b83\u52a0\u5165\u5230\u7ed3\u679c\u91cc\n\t\tif (temp == maxScore) res.push_back(i);\n\t}\n\tint rLen = res.size();\n    // \u6700\u540e\u8f93\u51fa\u7ed3\u679c\n\tfor (int i = 0; i < rLen; i++) printf(\"%d\\n\", res[i]);\n\treturn 0;\n}\n```",
        "postTime": 1590472401,
        "uid": 277849,
        "name": "AveMarina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework S\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u5708\uff0c\u7adf\u7136\u6ca1\u6709\u5206\u5757\u2026\u2026$N=10^5$ \u8dd1 $O(n\\sqrt{n})$ \u7684\u7b97\u6cd5\uff0c\u4e0d\u4ec5\u96be\u5ea6\u4e0d\u5927\uff0c\u601d\u7ef4\u76f4\u63a5\uff0c\u8fd8~~\u65b9\u4fbf\u5957\u6a21\u677f\uff0c\u5728TLE\u8fb9\u7f18\u75af\u72c2\u8bd5\u63a2~~~\n\n\u8fd9\u9898\u672c\u8d28\u5c31\u662f\u7ef4\u62a4\u4e00\u4e32\u6570\u636e\u7684\u533a\u95f4\u548c\u4e0e\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5bf9\u5206\u5757\u7b97\u6cd5\u6765\u8bf4\uff0c\u6bcf\u6b21\u67e5\u8be2\u90fd\u662f$O(\\sqrt{n})$\u7ea7\u522b\u7684\uff0c\u5c06\u6240\u6709\u53ef\u80fd\u7684K\u904d\u5386\u4e00\u6b21\uff0c\u590d\u6742\u5ea6$O(n\\sqrt{n})$\uff0c\u7ed3\u5408\u6570\u636e\u8303\u56f4\uff0c\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\n\n\u56e0\u4e3a\u672c\u9898\u89e3\u5957\u6a21\u677f\u672c\u8d28\u592a\u660e\u663e\uff0c\u5c31\u4e0d\u5199\u591a\u5c11\u6ce8\u91ca\u4e86~~\u5176\u5b9e\u5c31\u662f\u61d2~~\n\n![\u4e0d\u5438\u6c27\u7684\u8bc4\u6d4b\u7ed3\u679c\uff0c\u5176\u5b9e\u633a\u6162\u7684](https://i.ibb.co/FmNYzq4/P4086.png)\n\n\u6709\u4e00\u8bf4\u4e00\uff0c\u5bf9\u4e8e$N=10^5$\u7684\u6570\u636e\u6765\u8bf4\uff0c\u8fd9\u4e2a\u771f\u4e0d\u7b97\u5feb\u4e86\u2026\u2026\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0b\u9762\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100005\nusing namespace std;\n\nlong long n,m,len,a[maxn],add[maxn],val_sum[maxn],val_min[maxn],be[maxn];\n\nfloat ans[maxn],max_ans=0;\n\n//devised from my P3372 Segment Tree I Template  \n  \n/*//not needed for this problem\nvoid modify(long long from,long long to,long long ad){  \n    for(long long i=from;i<=min(to,be[from]*len);i++) a[i]+=ad,val[be[from]]+=ad;\n    if(be[from]!=be[to]){\n        for(long long i=(be[to]-1)*len+1;i<=to;i++) a[i]+=ad,val[be[to]]+=ad;\n    }\n    for(long long i=be[from]+1;i<=be[to]-1;i++) add[i]+=ad;\n}\n*/\n\nlong long query_sum(long long from,long long to){\n    long long cnt=0;\n    for(long long i=from;i<=min(to,be[from]*len);i++) cnt+=(a[i]+add[be[from]]);\n    if(be[from]!=be[to]){\n        for(long long i=(be[to]-1)*len+1;i<=to;i++) cnt+=(a[i]+add[be[to]]);\n    }\n    for(long long i=be[from]+1;i<=be[to]-1;i++) cnt+=(val_sum[i]+add[i]*len);\n    return cnt;\n}\n\nlong long query_min(long long from,long long to){\n    long long cnt=9223372036854775805; //giving the minimum counter a de facto infinite value is critical for the functioning of the algorithm\n    for(long long i=from;i<=min(to,be[from]*len);i++) cnt=min(cnt,a[i]+add[be[from]]);\n    if(be[from]!=be[to]){\n        for(long long i=(be[to]-1)*len+1;i<=to;i++) cnt=min(cnt,a[i]+add[be[to]]);\n    }\n    for(long long i=be[from]+1;i<=be[to]-1;i++) cnt=min(cnt,val_min[i]);\n    return cnt;\n}\n\n\nint main(){\n    scanf(\"%lld\",&n);\n    len=sqrt(n);\n    for(long long i=1;i<=n;i++){\n    \tbe[i]=(i-1)/len+1;\n    }//initialization\n    for(long long i=1;i<=n;i++){\n    \tval_min[be[i]]=9223372036854775805;\n    }//initialization\n    for(long long i=1;i<=n;i++){\n    \tscanf(\"%lld\",&a[i]);\n\t\tval_sum[be[i]]+=a[i];\n\t\tval_min[be[i]]=min(val_min[be[i]],a[i]);\n    }//initialization\n    for(long long i=1;i<=n-2;i++){\n//      printf(\"%d \",query_sum(i+1,n)-query_min(i+1,n));\n\t\tans[i]=(query_sum(i+1,n)-query_min(i+1,n)*1.0)/(n-i-1);\n\t\tmax_ans=max(max_ans,ans[i]);\n//\t\tcout<<ans[i]<<endl;\n    }\n    //to ensure that the numbers are properly stored as floats, some test printout messages are used\n    for(int i=1;i<=n-2;i++){\n    \tif(ans[i]==max_ans){\n    \t\tcout<<i<<endl;\n    \t}\n    }//counting the final answer\n}\n```\n",
        "postTime": 1585413273,
        "uid": 62562,
        "name": "B_1168",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework S\u3011"
    },
    {
        "content": "## \u5206\u6790\u9898\u76ee\n\u8fd9\u662f\u4e00\u9053\u540e\u7f00\u548c+\u533a\u95f4\u6700\u5c0f\u503c\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6216ST\u8868\u6765\u89e3\u51b3\uff0c\u4e0b\u9762\u6211\u8bb2\u4e00\u4e0b\u7ebf\u6bb5\u6811\u505a\u6cd5\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u662f\u4ece\u524d\u5f80\u540e\u5403\u6389\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5012\u5e8f\u7ef4\u62a4\u6570\u7ec4\u540e\u7f00\u548c\u3002\u63a5\u7740\uff0c\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5b58\u50a8\u5f53\u524d\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\u7136\u540e\u4ecek=1\u7684\u60c5\u51b5\u5f00\u59cb\u987a\u5e8f\u679a\u4e3e\u76f4\u5230k=n-2\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u679a\u4e3e\uff0c\u6211\u4eec\u628a\u540e`n-i`\u4e2a\u5143\u7d20\u7684\u548c\u51cf\u53bb\u4e0b\u6807`i`\u5230`n-1`\u7684\u6700\u5c0f\u503c\u9664\u4ee5`n-i-1`\uff0c\u5373\u5403\u6389i\u4e2a\u9898\u76ee\u65f6\u7684\u5206\u6570\uff0c\u50a8\u5b58\u4e0b\u6765\uff0c\u4ee5\u4fbf\u4ee5\u540e\u67e5\u8be2\uff0c\u5e76\u4e0e\u5f53\u524d\u6700\u5927\u5206\u6570\u6bd4\u8f83\uff0c\u53d6`max`\u503c\u3002**\u6700\u540e\u904d\u5386\u50a8\u5b58\u5206\u6570\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u548c\u6700\u5927\u5206\u6570\u4e00\u6837\u7684\u5143\u7d20\uff0c\u8f93\u51fa\u5176\u4e0b\u6807**\u3002\n\n## \u6ce8\u610f\u4e8b\u9879\n- \u6700\u540e\u4e00\u6b65\u5f88\u91cd\u8981\uff0c\u6211\u5c31\u56e0\u4e3a\u8fd9\u4e2aWA\u4e863\u6b21\uff0c\u8fd8\u662f\u8981\u597d\u597d\u8bfb\u9898\u3002\n\n- \u6ce8\u610f\u7cbe\u5ea6\uff0c\u5206\u6570\u8981\u7528`double`\u5b58\u50a8\n\n## \u4ee3\u7801\n\u8fd9\u9898\u867d\u7136\u601d\u7ef4\u96be\u5ea6\u4e0d\u5927\uff0c\u4f46\u8981\u6ce8\u610f\u7684\u5730\u65b9\u633a\u591a\u3002\n### \u7ef4\u62a4\u540e\u7f00\u548c\n```cpp\nfor(int i=n-1;i>=0;i--)\n\t\tsum[i]=sum[i+1]+arr[i];\n```\n### \u5efa\u7acb\u7ebf\u6bb5\u6811\n\u975e\u5e38\u6a21\u677f\n```cpp\nvoid build(int l,int r,int node){\n\tif(l==r){\n\t\ttree[node]=arr[l];\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tint lnode=(node<<1)+1;\n\tint rnode=(node<<1)+2;\n\tbuild(l,mid,lnode);\n\tbuild(mid+1,r,rnode);\n\ttree[node]=min(tree[lnode],tree[rnode]);\n}\n```\n\n### \u8be2\u95ee\n\u975e\u5e38\u6a21\u677f\n```cpp\nint query(int l,int r,int node,int start,int end){\n\tif(end<l||start>r)\n\t\treturn 0x7fffffff;\n\tif(start<=l&&r<=end)\n\t\treturn tree[node];\n\tif(l==r)\n\t\treturn tree[node];\n\tint mid=l+r>>1;\n\tint lnode=(node<<1)+1;\n\tint rnode=(node<<1)+2;\n\tint lmin=query(l,mid,lnode,start,end);\n\tint rmin=query(mid+1,r,rnode,start,end);\n\treturn min(lmin,rmin);\n}\n```\n### \u679a\u4e3e\n```cpp\nfor(int i=1;i<=n-2;i++){\n\t\t//\u8ba1\u7b97\u5206\u6570 \n\t\tk[i]=(double)(sum[i]-query(0,n-1,0,i,n-1));\n\t\tk[i]/=n-i-1;\n\t\tres=max(res,k[i]);\n\t}\n```\n\n### \u5b8c\u6574\u4ee3\u7801\n### \u7248\u672c1\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=100004;\nint n,m,arr[maxn],sum[maxn],tree[maxn<<2];\ndouble res=-1,comp,k[maxn];\n\nvoid build(int l,int r,int node){\n\tif(l==r){\n\t\ttree[node]=arr[l];\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tint lnode=(node<<1)+1;\n\tint rnode=(node<<1)+2;\n\tbuild(l,mid,lnode);\n\tbuild(mid+1,r,rnode);\n\ttree[node]=min(tree[lnode],tree[rnode]);\n}\n\nint query(int l,int r,int node,int start,int end){\n\tif(end<l||start>r)\n\t\treturn 0x7fffffff;\n\tif(start<=l&&r<=end)\n\t\treturn tree[node];\n\tif(l==r)\n\t\treturn tree[node];\n\tint mid=l+r>>1;\n\tint lnode=(node<<1)+1;\n\tint rnode=(node<<1)+2;\n\tint lmin=query(l,mid,lnode,start,end);\n\tint rmin=query(mid+1,r,rnode,start,end);\n\treturn min(lmin,rmin);\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\tfor(int i=n-1;i>=0;i--)\n\t\tsum[i]=sum[i+1]+arr[i];\n\tbuild(0,n-1,0);\n\tfor(int i=1;i<=n-2;i++){\n\t\t//\u8ba1\u7b97\u5206\u6570 \n\t\tk[i]=(double)(sum[i]-query(0,n-1,0,i,n-1));\n\t\tk[i]/=n-i-1;\n\t\tres=max(res,k[i]);\n\t}\n\tfor(int i=1;i<=n-2;i++)\n\t\tif(res==k[i])\n\t\t\tprintf(\"%d\\n\",i);\n\treturn 0;\n}\n```\n### \u7248\u672c2\n\u5176\u5b9e\u9664\u4e86`duoble`\uff0c\u4e5f\u53ef\u4ee5\u7528`long long`\u8c03\u6574\u7cbe\u5ea6\uff0c\u4e3a\u907f\u514d\u91cd\u590d\u5197\u4f59\uff0c\u53ea\u8d34\u90e8\u5206\u4ee3\u7801\n\n#### \u7cbe\u5ea6\u8bbe\u7f6e\n```cpp\nconst int e=1000000;\n```\n\u5982\u679c\u4f60\u613f\u610f\u53ef\u4ee5\u8c03\u5f97\u66f4\u9ad8\n#### \u679a\u4e3e\n\n```cpp\nfor(int i=1;i<=n-2;i++){\n\t\tk[i]=sum[i]-query(0,n-1,0,i,n-1);\n      k[i]=k[i]*e/(n-i-1);\n\t\tif(res<k[i])\n\t\t\tres=k[i];\n\t}\n```",
        "postTime": 1588214593,
        "uid": 289944,
        "name": "Na2PtCl6",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework S\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\nA \u6389\u4e86\u8fd9\u4e48\u4e00\u9053\u9898\u76ee\uff0c\u5982\u679c\u4e0d\u53d1\u9898\u89e3\u4e5f\u592a\u53ef\u60dc\u4e86 \u2026\u2026\n\n\u6211\u4e5f\u662f\u592a\u60e8\u4e86\uff0c\u6211 [\u53d1\u4e86\u8d34](https://www.luogu.com.cn/discuss/show/207014) \u4e0b\u8f7d\u4e86\u4e24\u6b21\u6570\u636e\uff0c\u7136\u540e\u518d\u8c03\u4e86 30 minutes\u3002\n\n### \u5206\u6790\n\n\u8fd9\u9053\u9898\u76ee\u5176\u5b9e\u53ef\u4ee5\u66b4\u529b\u6216\u8005\u7ebf\u6bb5\u6811\u505a\u51fa\u6765\uff0c\u4f46\u662f\u6211\u60f3\u5229\u7528 \u5355\u8c03\u6808 \u8fd9\u79cd o(n) \u7684\u7ebf\u6027\u8868\u6765\u505a\uff0c\u987a\u4fbf\u5de9\u56fa\u4e00\u4e0b \u5355\u8c03\u6808 \u3002\n\n~~\u4e0d\u8fc7\u9898\u89e3\u533a\u597d\u50cf\u6ca1\u6709 \u5355\u8c03\u6808 \u3002~~\n\n\u90a3\u4e48\u9898\u610f\u5c31\u4e0d\u591a\u8bb2\u4e86\uff0c\u5c31\u662f\u8981\u4f60\u6c42\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u603b\u548c\uff0c\u5e73\u5747\u503c\u3002\n\n\u90a3\u4e48\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u6beb\u65e0\u7591\u95ee\u5229\u7528\u5355\u8c03\u6808\u7684\u5355\u8c03\u4f18\u52bf\uff0c\u5982\u4f55\u4f60\u4e0d\u61c2\u5355\u8c03\u961f\u5217\uff0c\u5efa\u8bae\u8fd8\u662f\u770b\u66b4\u529b\u3002\n\n\u7136\u540e\u5c31\u662f\u603b\u548c\uff0c\u603b\u548c\u6211\u5229\u7528\u4e86\u524d\u7f00\u548c\u7684 o(1) \u67e5\u8be2\u64cd\u4f5c\u6765\u505a\u3002\n\n\u5e73\u5747\u503c\u8981\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898\u3002\n\n\u8f93\u51fa\u4e48\uff0c\u5c31\u8981\u6ce8\u610f\u662f\u5347\u5e8f\u8f93\u51fa\u7684 \uff01\u6211\u8fd9\u91cc\u7528\u6808\u6765\u505a\u5b58\u50a8\u7b54\u6848\u7684\u5bb9\u5668\u3002\n\n\u5e76\u4e14\uff0c$1 \\le K \\le N-2$\uff0c\u8fd9\u4e2a\u8868\u793a K \u53ea\u6709\u5728 1~N-2 \u4e4b\u95f4\u5b58\u5728\u7740\u7b54\u6848\u3002\n\n\u5229\u7528\u4e00\u4e2a\u6765\u53d8\u91cf\u6765\u8bb0\u5f55\u6700\u5927\u503c\u3002\n\n\u5269\u4e0b\u7684\u7ec6\u8282\u4e5f\u53ea\u6709\u89c1\u4ee3\u7801\u4e86\uff1a\n\n### \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int INF=100005;\nint n,a[INF],q[INF<<1],r,sum[INF],ans1[INF],r1;\ndouble Max;\n//\u5b9a\u4e49\u53d8\u91cf\uff0c\u8fd9\u91cc\u6211\u5355\u8c03\u6808\u5f00\u4e86 2 \u500d\u7a7a\u95f4\uff0c\u5c31\u6015\u4e0d\u591f\u3002\u5176\u5b9e\u4e0d\u7528\u7ba1\u8fd9\u4e9b\u7684\uff0c\u4e00\u822c\u6765\u8bf4\uff0c1 \u500d\u7a7a\u95f4\u5c31\u591f\u4e86\u3002\nsigned main()\n{\n        scanf(\"%d\",&n);\n        //\u8bfb\u5165 n \u3002\n        for (int i=1; i<=n; i++) {\n                scanf(\"%lld\",&a[i]);\n                sum[i]=sum[i-1]+a[i];\n               \t //\u8bfb\u5165 a[i] \u5e76\u4e14\u5efa\u7acb sum \u524d\u7f00\u548c\u3002\n        }\n        for (int j=n; j>=n-2; j--) {\n                while (r>0 && a[q[r]]>=a[j]) r--;\n                q[++r]=j;\n        }\n        //\u6211\u7528\u7684\u662f\u5012\u5e8f\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u6837\u5b50\u5355\u8c03\u961f\u5217\u6bd4\u8f83\u597d\u5b9e\u73b0\uff0c\u4e0a\u9762\u7684\u662f\u9884\u5904\u7406\u6700\u540e\u4e24\u4e2a\u3002\n        for (int k=n-2; k>=1; k--)\n        {\n                double ans=0;\n                ans=(double) ((sum[n]-sum[k])-a[q[1]])/(1.0*(n-k-1));\n                // printf(\"%lf %d %d\\n\",ans,k,q[1]);\n                //\u7136\u540e\u5c31\u662f\u5403\u6389\u4e86 \u524d k \u4e2a\u90a3\u4e48\u5c31\u51cf\u53bb\uff0c\u7136\u540e\u518d\u53bb\u6389\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u5355\u8c03\u6808\u91cc\u9762\u7684\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\u4e00\u822c\u662f\u7b2c 1 \u4e2a\u6216\u8005\u7b2c 0 \u4e2a\uff0c\u5355\u8c03\u961f\u5217\u91cc\u662f l \uff0c\u540e\u9762\u662f\u7b14\u8005\u6bd4\u8f83\u5bb9\u6613\u51fa\u9519\u7684\u5730\u65b9\uff0cn-k-1 \u8868\u793a\u4e86\u6709 n \u4e2a\u6570\uff0c\u53bb\u6389\u4e86\u524d k \u4e2a\u6570\uff0c\u8fd8\u8981\u53bb\u6389\u4e00\u4e2a\u6700\u5c0f\u503c\u7684\u6570\u3002\u6240\u4ee5\u5927\u5bb6\u5f15\u4ee5\u4e3a\u6212\u3002\n                if (Max<ans) {\n                        r1=1;\n                        ans1[r1]=k;\n                        Max=ans;\n                }\n                //\u5047\u5982\u8bf4\u627e\u5230\u4e86\u6bd4 Max \u8fd8\u8981\u5927\u7684\uff0c\u90a3\u4e48\u5c31\u5c06\u961f\u5217\u6e05\u7a7a\uff0c\u4e5f\u5c31\u662f r1=1 \u3002\u5e76\u4e14 Max \u8d4b\u503c\u4e3a ans \u3002\n                else if (Max==ans) {\n                        ++r1;\n                        ans1[r1]=k;\n                        Max=ans;\n                }\n                //\u5982\u679c\u4e00\u6837\u5462\uff1f\u90a3\u4e48\u5c31\u5229\u7528\u6808\u6765\u5b58\u8d77\u6765\u3002\n                while (r>0 && a[q[r]]>=a[k]) r--;\n                q[++r]=k;\n                //\u8fd9\u91cc\u5c31\u662f\u5355\u8c03\u6808\u7684\u7ef4\u62a4\u65b9\u5f0f\uff0c(\u5982\u679c\u9047\u5230\u4e00\u4e2a\u6bd4\u4f60\u5c0f\u8fd8\u6bd4\u4f60\u5f3a\u7684\u4eba\uff0cAFO \u5427\u3002\u4e5f\u5c31\u662f r-- \u5f39\u51fa\u3002\u7136\u540e\u5728\u5229\u7528\u4e0b\u6807\u5b58\u73b0\u5728\u7684\u503c\u3002\n        }\n        for (int i=r1; i>=1; i--)    printf(\"%d\\n\",ans1[i]);//\u5012\u5e8f\u8f93\u51fa\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5347\u5e8f\u3002\n        //\u7136\u540e\u8f93\u51fa\uff0c\u6ce8\u610f\u7528\u6362\u884c\u7b26\u8f93\u51fa \uff0c\u4f46\u662f\u7a7a\u683c\u8f93\u51fa\u6211\u4e0d\u6e05\u695a\u4f1a\u4e0d\u4f1a\u70b8\u3002\n        return 0;\n}\n\n```\n\n### \u5199\u5728\u540e\u9762\u7684\u8bdd\n\n\u6211\u8fd9\u7bc7\u9898\u89e3\u5982\u679c\u6709\u9519\u8bef\uff0c\u90a3\u4e48\u8bf7\u5728\u8bc4\u8bba\u533a\u91cc\u7559\u8a00\uff0c\u6211\u5c06\u4f1a\u5f88\u611f\u8c22\u53cd\u6620\u7684\u4eba\u3002\n\n**\u8c22\u8c22\u89c2\u8d4f\uff01**",
        "postTime": 1585054954,
        "uid": 260980,
        "name": "cstdios",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework S\u3011"
    },
    {
        "content": "\u54c7\u54c7\u54c7\uff0c\u96be\u9053\u6ca1\u6709\u4eba\u7528\n\n## \u96c6\u5408\n\n\u6c42\u89e3\u7684\u5417\uff1f\n\n\u6211\u7684\u60f3\u6cd5\u5c31\u662f\u96c6\u5408\u5148\u628aa\u6570\u7ec4\u5168\u90e8\u585e\u8fdb\u53bb\uff0c\u7136\u540ek\u679a\u4e3e\u4e00\u904d\uff0c\u7136\u540e\u8fd0\u7528\u96c6\u5408\u4e2d\u7684$find$\u51fd\u6570\u4ee5\u53ca$erase$\u51fd\u6570\u5c31\u53ef\u4ee5\u628a\u96c6\u5408\u4e2d\u7684\u7b2ca[k]\u4e2a\u5143\u7d20\u5220\u9664\u4e86\u3002\u6ce8\u610f$find(a[k])$\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u800c$erase(find(a[k]))$\u5c31\u53ef\u4ee5\u628a\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u503c\u4e3aa[k]\u7684\u5143\u7d20\u5220\u6389\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u6309\u7167\u9898\u76ee\u6240\u8bf4\uff0c\u6311\u4e00\u4e2a\u6700\u5927\u7684\u7b54\u6848\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u96c6\u5408\u4e00\u5b9a\u8981\u58f0\u660e\u6210$multiset$\u624d\u53ef\u4ee5\uff0c\u56e0\u4e3a$set$\u4f1a\u81ea\u52a8\u53bb\u6389\u91cd\u590d\u7684\u5143\u7d20\uff0c~~\u5341\u5206\u7325\u7410~~\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[100005],s; double maxn,ans[100005];\ninline int read(){\n\tint ret=0,f=1; char ch=getchar();\n\tfor(;ch<'0'||ch>'9';ch=getchar()) if(ch=='-') f=-f;\n\tfor(;ch>='0'&&ch<='9';ch=getchar()) ret=ret*10+ch-'0';\n\treturn ret*f;\n}\nmultiset<int>S;\nmultiset<int>::iterator it;\t//\u53ea\u80fd\u58f0\u660e\u6210multiset\n\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++) S.insert(a[i]=read()),s+=a[i];\n\tint num=n;\n\tfor(int k=1;k<=n-2;k++){\n\t\tS.erase(S.find(a[k]));\n\t\ts-=a[k];\n\t\tnum-=1;\n\t\tans[k]=(double)(s-*S.begin())/(num-1);\t\t//S.begin()\u662f\u96c6\u5408\u4e2d\u7684\u6839\u8282\u70b9\u7684\u8fed\u4ee3\u5668\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u7684\u4e00\u4e2a\n\t\tmaxn=max(maxn,ans[k]);\n\t}\n\tfor(int i=1;i<=n-2;i++) if(maxn==ans[i]) printf(\"%d\\n\",i);\n\treturn 0;\n}\n\n```\n\n\u8fd9\u9053\u9898\u5c31\u8fd9\u4e48\u89e3\u5b8c\u4e86\u3002\u3002\u3002\n\n**END**\n\n\n\n------------\n",
        "postTime": 1566739639,
        "uid": 177287,
        "name": "Mkarry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework\u3011"
    },
    {
        "content": "## Sol ##\n\n[blog\u98df\u7528](http://www.caolaoshi.men/index.php/archives/usaco17dec-mcamh.html)\n\n\u54c7\u54c7\u54c7\uff0c\u96be\u9053\u5c31\u6211\u4e00\u4e2a\u4eba\u5199\u7ebf\u6bb5\u6811\u5417\uff1f\uff1f\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u679a\u4e3e$k$\uff0c\u7136\u540e\u68c0\u67e5\u8fd9\u4e2a$k$\u6c42\u51fa\u6765\u7684\u503c\u662f\u5426\u662f\u6700\u5927\u7684\uff0c\u6216\u8005\u662f\u5426\u4e0e\u6700\u5927\u503c\u76f8\u7b49\uff0c\u7136\u540e\u7528\u961f\u5217\u5b58\u8d77\u6765~~(\u849f\u84bb\u5b9e\u5728\u4e0d\u77e5\u9053\u7528\u4ec0\u4e48\u5b58\u662f\u6700\u597d\u7684\uff0c\u80e1\u4e71\u641e\u4e86\u4e2a\u961f\u5217)~~\uff0c\u63a5\u7740\u5c31\u662f\u7b54\u6848\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$k$\uff0c\u6c42\u7b54\u6848\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u662f\u533a\u95f4$[k+1$ \uff0c$ n]$\u4e4b\u95f4\u53bb\u6389\u4e00\u4e2a\u6700\u5c0f\u503c\u4e4b\u540e\u7684\u5e73\u5747\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u524d$i$\u4e2a\u6570\u5b57(\u4e58\u79ef)\u7684\u603b\u548c\uff0c\u8fd9\u6837$O(1)$\u5c31\u80fd\u77e5\u9053$[k+1$\uff0c $n]$\u4e4b\u95f4\u6ca1\u6709\u53bb\u6389\u6700\u5c0f\u503c\u65f6\u5019\u7684\u603b\u548c\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u53bb\u6389\u6700\u5c0f\u503c\u7684\u64cd\u4f5c\u3002\u6211\u8fd9\u91cc\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u6bd5\u7adf\u53ea\u6709\u5efa\u6811\u548c\u67e5\u8be2\u6700\u5c0f\u503c\uff0c\u662f\u975e\u5e38\u597d\u5199\u7684\u3002\u8fd9\u6837\u6c42\u51fa\u6700\u5c0f\u503c\u6765\uff0c\u7136\u540e\u7528\u603b\u548c\u51cf\u53bb\uff0c\u518d\u9664\u4ee5\u5143\u7d20\u4e2a\u6570\uff0c\u5c31\u80fd\u6c42\u5f97\u5e73\u5747\u6570\uff0c\u6ce8\u610f\u7cbe\u5ea6\uff0c\u66f4\u65b0\u548c\u4fdd\u5b58\u7b54\u6848\u3002\n\n~~(\u597d\u4e45\u6ca1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u4e86\u2026\u2026)~~\n\n\u67e5\u8be2\u6700\u5c0f\u503c\uff1a$O(logn)$ \u603b\u7684\u67e5\u8be2\u65f6\u95f4\uff1a$O(k \u00d7 logn)$ \u603b\u548c\u67e5\u8be2\u65f6\u95f4\uff1a$O(1)$ \u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(k \u00d7 logn)$\n\n## Code ##\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#include<vector>\nusing namespace std;\n\nstruct SegTree {\n    int l , r , min;\n};\nSegTree seg[400005];\nint n , data[100005] , sum[100005];\ndouble opt = 0;\nqueue<int>q;\n\nvoid update(int num) {\n    seg[num].min = min(seg[num<<1].min , seg[num<<1|1].min);\n}\n\nvoid build(int num , int l , int r) {\n    seg[num].l = l;\n    seg[num].r = r;\n    if(l == r) {\n        seg[num].min = data[l];\n        return ;\n    }\n    int mid = (l + r)>>1;\n    build(num<<1 , l , mid);\n    build(num<<1|1 , mid+1 , r);\n    update(num);\n}\n\nint query(int num , int l , int r) {\n    if(seg[num].l >= l && seg[num].r <= r)\n        return seg[num].min;\n    int mid = (seg[num].l + seg[num].r)>>1 , res = 1e9;\n    if(l <= mid)\n        res = min(query(num<<1 , l , r) , res);\n    if(r > mid)\n        res = min(query(num<<1|1 , l , r) , res);\n    return res;\n}\n\nint main() {\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n; i++) {\n        scanf(\"%d\",&data[i]);\n        sum[i] = sum[i - 1] + data[i];\t\n    }\n    build(1 , 1 , n);\n    for(int k=1; k<=n-2; k++) {\n        int l = k+1 , r = n;\n        double res;\n        res = (double)(sum[r] - sum[l-1]);\n        res -= query(1 , l , r);\n        res = res / (r - l);\n        if(res > opt) {\n            while(!q.empty())\n                q.pop();\n            q.push(k);\n            opt = res;\n        }else \n            if(res == opt)\n                q.push(k);\n    }\n    while(!q.empty()) {\n        printf(\"%d\\n\",q.front());\n        q.pop();\n    }\n    return 0;\n}\n```\n\n\n  [1]: https://www.luogu.org/problemnew/show/P4086",
        "postTime": 1534925852,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4086 \u3010[USACO17DEC]My Cow Ate My Homework\u3011"
    }
]