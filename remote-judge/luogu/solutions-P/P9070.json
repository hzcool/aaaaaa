[
    {
        "content": "\u73b0\u5728\u7684\u5c0f\u4f19\u5b50\u51fa\u7684\u9898\u8fd8\u662f\u76f8\u5f53\u7684\u89c4\u8303\uff0c\u6ca1\u6709\u88ab\u62b9\u6740\u6389\u521b\u9020\u529b\uff01\n\n\u5148\u8003\u8651\u7b2c\u4e8c\u6863\u90e8\u5206\u5206\u56ca\u7ed9\u4fce\uff0c\u55ef\u4ea4\u6362\u6bd4\u8f83\u56f0\u96be\uff0c\u6211\u4eec\u8003\u8651\u7ed9\u4ed6\u8f66\u4e00\u8f6c\uff0c\u8fd9\u6837\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\u5b83\u6ee1\u8db3\u4e86\u6bcf\u884c\u90fd\u6709 $n$ \u79cd\u94a5\u5319\uff01\u8fd9\u7ed9\u6211\u4eec\u542f\u53d1\u4ece\u8f6c\u7f6e\u7684\u89d2\u5ea6\u5165\u624b\u8fd9\u4e2a\u9898\u3002\n\n\u90a3\u4e48\u5b9e\u9645\u4e0a\u8f6c\u7f6e\u4e4b\u540e\u5c31\u662f\u4e00\u4e2a\u505a\u677f\u51f3\u7684\u95ee\u9898\u4e86\u54c8\u3002\u6bcf\u4e2a\u4eba\u624b\u91cc\u94a5\u5319\u7684\u987a\u5e8f\u5b9e\u9645\u4e0a\u662f\u4e0d\u5f71\u54cd\u7684\u3002\u6211\u4eec\u8003\u8651\u628a\u6bcf\u79cd\u94a5\u5319\u6302\u5728\u4e00\u4e2a\u677f\u51f3\u4e0a\uff0c\u7b2c $i$ \u884c\u6709\u4e00\u4e2a\u7b2c $j$ \u79cd\u94a5\u5319\u5c31\u4ece\u5de6 $i$ \u5f80\u53f3 $j$ \u8fde\u4e00\u6761\u8fb9\u3002\u7b2c $i$ \u4e2a\u4eba\u624b\u91cc\u8be5\u589e\u4e48\u6362\u634f\uff1f\u6bcf\u6b21\u7ed9\u6bcf\u79cd\u94a5\u5319\u5339\u914d\u4e00\u4e2a\u677f\u51f3\uff0c\u7136\u540e\u628a\u5339\u914d\u7684\u8fb9\u5220\u6389\u3002\u8fd9\u6837\u6839\u636e\u5899\uff08$\\text{Hall}$\uff09\u5b9a\u7406\u6bcf\u6b21\u90fd\u6709\u5b8c\u7f8e\u5339\u914d\uff01\n\n\u5bf9\u7740\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u54a9\uff01\u6211\u7684\u4ee3\u7801\u5199\u5f97\u8fd8\u662f\u5f88\u6e05\u695a\u7684\u54c8\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nbool used[210];\nint head[210],go[66666],last[66666],fl[66666],cnt,T,n,ans[210][210],seat[210],hp[210][210],ct,lp[66666],zh[66666];\nvoid add(int a,int b)\n{\n  go[++cnt]=b;\n  last[cnt]=head[a];\n  head[a]=cnt;\n}\nbool sit(int a)\n {\n  if(used[a])return 0;\n   used[a]=1;\n  for(int i=head[a];i;i=last[i])\n   {if(!fl[i])\n   if(!seat[go[i]] ||sit(seat[go[i]])){seat[go[i]]=a;return 1;\n  }\n }\n  return 0;\n}\nint main()\n {\n  scanf(\"%d\",&T);\n while(T--){\n   scanf(\"%d\",&n);\n  for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)\n    {\n     int x;\n    scanf(\"%d\",&x);\n    add(i,x);\n    zh[++ct]=j;\n    lp[ct]=hp[i][x];\n    hp[i][x]=ct;\n   }\n for(int i=1;i<=n;i++){\n  memset(seat,0,sizeof seat);\n   for(int j=1;j<=n;j++)\n   {memset(used,0,sizeof(used));\n    sit(j) ;\n   }\n  for(int j=1;j<=n;j++)\n  {\n   int x=seat[j];\n   ans[x][i]=zh[hp[x][j]] ;\n   hp[x][j] =lp[hp[x][j]];\n   for(int k=head[x];k;k=last[k])\n    {if(!fl[k]&&go[k]==j)\n     {\n      fl[k]=1;\n       break;\n     }\n   }\n  }\n }\n printf(\"%d\\n\",n*(n-1)/2);\n for(int i=1;i<=n;i++)\n  {for(int j=1;j<i;j++){\n    printf(\"%d %d %d %d\\n\",i,ans[i][j],j,ans[j][i]);}\n }\n  memset (head,0,sizeof head);\n  memset(go,0,sizeof go);\n  cnt=0 ;\n  memset(last,0,sizeof (last));\n memset(ans,0,sizeof ans) ;\n  memset(fl,0, sizeof fl);ct=0;\n  memset (hp, 0 ,sizeof( hp )) ;\n  memset(lp ,0 ,sizeof (lp));\n  memset(zh,0,sizeof( zh));}\n   return 0;\n  }\n```",
        "postTime": 1677071469,
        "uid": 337548,
        "name": "myyes",
        "ccfLevel": 0,
        "title": "[CTS2023] \u742a\u9732\u8bfa\u7684\u7b26\u5361\u4ea4\u6362"
    },
    {
        "content": "\u5148\u8003\u8651 Subtask 1\u3002\n\n\u5982\u679c\u6bcf\u4e2a\u4eba\u53ea\u6301\u6709\u4e00\u79cd\u5361\u7247\uff0c\u90a3\u4e48\u8fd9\u4e2a\u77e9\u9635\u7684\u8f6c\u7f6e\u4e00\u5b9a\u7b26\u5408\u6761\u4ef6\u3002\n\n\u4e8e\u662f\u5bf9\u4e8e $\\forall i > j$\uff0c\u4ea4\u6362 $a[i][j]$ \u548c $a[j][i]$ \u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u79cd\u529e\u6cd5\u6211\u4eec\u53ea\u8981\u6c42\u6bcf\u4e00\u5217\u5c31\u662f\u4e2a\u6392\u5217\u5373\u53ef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u8c03\u6574\u81ea\u5df1\u624b\u91cc\u724c\u7684\u987a\u5e8f\uff0c\u4f7f\u5f97\u6bcf\u4e00\u5217\u90fd\u662f\u4e2a\u6392\u5217\u3002\n\n\u600e\u4e48\u8c03\u6574\uff1f\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u8bb0\u5f55\u539f\u672c\u5728\u54ea\u4e00\u5217\u5373\u53ef\uff0c\u6700\u540e\u8f93\u51fa\u65b9\u6848\u7684\u65f6\u5019\u8f93\u51fa\u539f\u6765\u7684\u5217\uff0c\u6240\u4ee5\u73b0\u5728\u53d8\u6210\u4e86\u81ea\u5df1\u624b\u91cc\u7684\u724c\u53ef\u4ee5\u4efb\u610f\u4ea4\u6362\u3002\n\n\u4e8e\u662f\u4ece\u5de6\u5230\u53f3\u626b\u5217\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\u5411\u540e\u9762\u53ef\u4ee5\u4ea4\u6362\u7684\u6570\u8fde\u8fb9\uff0c\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u5373\u53ef\u3002\n\n\u6839\u636e\u970d\u5c14\u5b9a\u7406\uff0c\u4e0d\u5b58\u5728\u65e0\u89e3\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>\n#define fi first\n#define se second\n\nusing i64 = long long;\n\ntemplate <typename T>\nstruct Flow_dinic {\n\tstruct Edge {\n\t\tint to;\n\t\tT cap;\n\t\tEdge() {}\n\t\tEdge(int to, T cap) : to(to), cap(cap) {}\n\t};\n\tstd::vector<Edge> e;\n\tstd::vector<std::vector<int>> adj;\n\tstd::vector<int> cur, dep;\n\tvoid init(int n) {\n\t\tadj.resize(n), adj.assign(n, std::vector<int>());\n\t\te.clear();\n\t\tcur.resize(n);\n\t\tdep.resize(n);\n\t}\n\tFlow_dinic() {}\n\tFlow_dinic(int n) {\n\t\tinit(n);\n\t}\n\tint addedge(int x, int y, T z) {\n\t\te.emplace_back(y, z), adj[x].push_back((int)e.size() - 1);\n\t\te.emplace_back(x, 0), adj[y].push_back((int)e.size() - 1);\n\t\treturn (int)e.size() - 2;\n\t}\n\tT dfs(int u, int source, int sink, T flow) {\n\t\tif (u == sink) return flow;\n\t\tT sum = 0;\n\t\tfor (int &i = cur[u]; i < (int)adj[u].size(); i++) {\n\t\t\tint x = adj[u][i], v = e[x].to;\n\t\t\tif (dep[v] == dep[u] + 1 && e[x].cap) {\n\t\t\t\tT t = dfs(v, source, sink, std::min(flow - sum, e[x].cap));\n\t\t\t\te[x].cap -= t, e[x ^ 1].cap += t;\n\t\t\t\tsum += t;\n\t\t\t\tif (sum == flow) return sum;\n\t\t\t}\n\t\t}\n\t\treturn sum;\n\t}\n\tT bfs(int source, int sink) {\n\t\tstd::queue<int> q;\n\t\tint n = (int)adj.size();\n\t\tfor (int i = 0; i < n; i++) dep[i] = -1, cur[i] = 0;\n\t\tq.push(source), dep[source] = 0;\n\t\twhile (!q.empty()) {\n\t\t\tint u = q.front();q.pop();\n\t\t\tfor (auto x : adj[u]) {\n\t\t\t\tint v = e[x].to;\n\t\t\t\tif (e[x].cap && dep[v] == -1) {\n\t\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (dep[sink] == -1) return 0;\n\t\treturn dfs(source, source, sink, std::numeric_limits<T>::max());\n\t}\n\tT maxflow(int source, int sink) {\n\t\tT ans = 0;\n\t\tfor (auto x = bfs(source, sink); x; x = bfs(source, sink)) ans += x;\n\t\treturn ans;\n\t}\n};\n\nvoid solve() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tstd::vector<std::vector<int>> a(n, std::vector<int>(n));\n\tauto id = a;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d\", &a[i][j]);\n\t\t\t--a[i][j];\n\t\t\tid[i][j] = j;\n\t\t}\n\t}\n\tfor (int j = 0; j < n - 1; j++) {\n\t\tFlow_dinic<int> flow(2 * n + 2);\n\t\tint source = 2 * n, sink = 2 * n + 1;\n\t\tstd::vector<std::vector<int>> pos(n, std::vector<int>(n, -1));\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tflow.addedge(source, i, 1);\n\t\t\tflow.addedge(i + n, sink, 1);\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int k = j; k < n; k++) {\n\t\t\t\tif (pos[i][a[i][k]] == -1) {\n\t\t\t\t\tpos[i][a[i][k]] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\tif (pos[i][k] != -1) {\n\t\t\t\t\tflow.addedge(i, k + n, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tassert(flow.maxflow(source, sink) == n);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (auto x : flow.adj[i]) {\n\t\t\t\tif (!flow.e[x].cap) {\n\t\t\t\t\tint k = pos[i][flow.e[x].to - n];\n\t\t\t\t\tstd::swap(id[i][j], id[i][k]);\n\t\t\t\t\tstd::swap(a[i][j], a[i][k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", n * (n - 1) / 2);\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tprintf(\"%d %d %d %d\\n\", i + 1, id[i][j] + 1, j + 1, id[j][i] + 1);\n\t\t}\n\t}\n}\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) solve();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1677224335,
        "uid": 201278,
        "name": "xianggl",
        "ccfLevel": 0,
        "title": "CTS2023 \u742a\u9732\u8bfa\u7684\u7b26\u5361\u4ea4\u6362 \u9898\u89e3"
    },
    {
        "content": "**\u89c2\u5bdf\u5230**\u6784\u9020 $n$ \u4e2a\u6392\u5217 $p_1,p_2,\\cdots.p_n$\uff0c\u6ee1\u8db3\u6761\u4ef6\uff1a\n\n\u8bb0 $ b_{i,j}=\\color{red}a_{j,p_{j,i}}$\uff0c$b$ \u6bcf\u884c\u90fd\u662f\u4e00\u4e2a\u6392\u5217\u3002\n\n\u8bf4\u4eba\u8bdd\u662f\uff1a$n$ \u8f6e\uff0c\u6bcf\u8f6e\u5728\u6bcf\u884c\u9009\u4e00\u4e2a\u6ca1\u6709\u9009\u8fc7\u7684\u4f4d\u7f6e\u5220\u6389\uff0c\u5e76\u4e14\u9009\u62e9\u7684\u4f4d\u7f6e\u4e0a\u7684\u6570\u6784\u6210\u6392\u5217\u3002\n\n\u9996\u5148\u8bc1\u660e\u5b58\u5728\u8fd9\u6837\u7684 $p$\u3002\u76f8\u5f53\u4e8e\u6bcf\u6b21\u5728(\u884c-\u503c)\u4e0a\u8dd1\u4e00\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u8bc1\u660e\u5339\u914d\u5927\u5c0f\u4e00\u5b9a\u662f $n$\u3002\n\n> \u8bc1\u660e\u8003\u8651 Hall \u5b9a\u7406\uff1a\u5728\u5220\u9664\u4e86 $n-x$ \u8f6e\u4e4b\u540e\uff0c\u5de6\u53f3\u8fb9\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u90fd\u662f $x$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5927\u5c0f $d$ \u7684\u70b9\u96c6\u8fde\u51fa $xd$ \u6761\u8fb9\uff0c\u90a3\u4e48\u53f3\u8fb9\u8fde\u7740\u7684\u70b9\u7684\u6570\u91cf\u4e5f\u4e00\u5b9a $\\ge d$\u3002\n\n\u7136\u540e\u600e\u4e48\u505a\u5462\uff1f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5bf9 $(i,j)$ \u6ee1\u8db3 $i<j$ \u76f4\u63a5\u6267\u884c $ \\operatorname{swap}(a_{i,p_{i,j}},\\color{red}a_{j,p_{j,i}}\\color{black})$\uff01\n\n\u6b63\u786e\u6027\uff1a\u6bcf\u4e2a\u70b9\u786e\u5b9e\u4ea4\u6362\u4e0d\u8d85\u8fc7\u4e00\u6b21\uff1b\u4ea4\u6362\u7ed3\u675f\u4e4b\u540e\u7b2c $i$ \u884c\u5c31\u662f\u4e0a\u9762\u9650\u5236\u91cc\u7684\u90a3\u4e2a\u6392\u5217\u3002\u8fd9\u5c31\u505a\u5b8c\u4e86\uff01\uff01\uff01\n\n\u590d\u6742\u5ea6 $O(n^4)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 bitset \u4f18\u5316\u3002\n\n",
        "postTime": 1676984268,
        "uid": 735057,
        "name": "wghyt1314",
        "ccfLevel": 0,
        "title": "\u4e94\u5723\u53ec\u5524"
    },
    {
        "content": "\u5148\u8003\u8651 $sub2$\uff0c\u5373\u6bcf\u4e2a\u4eba\u6301\u6709\u81f3\u5c11 $n - 1$ \u5f20\u540c\u4e00\u79cd\u5361\u7247\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u5c06\u4e0d\u540c\u7684\u90a3\u5f20\u653e\u5728\u672b\u5c3e\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e00\u5217\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u8f6c\u7f6e\u4e4b\u540e\u5c31\u80fd\u6ee1\u8db3\u9898\u610f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u5c06\u9898\u610f\u8f6c\u5316\u4e3a\u5982\u4f55\u94a6\u5b9a\u6bcf\u4e00\u6392\u7684\u987a\u5e8f\uff0c\u4f7f\u5f97\u6bcf\u79cd\u989c\u8272\u5728\u6bcf\u4e00\u5217\u90fd\u51fa\u73b0\u8fc7\u3002\n\n\u5c06\u6bcf\u4e00\u6392\u548c\u5b83\u6709\u7684\u989c\u8272\u8fde\u8fb9\uff0c\u5efa\u51fa\u4e8c\u5206\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217\u8dd1\u4e00\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u5f97\u51fa\u6bcf\u4e00\u4e2a\u989c\u8272\u7684\u4f4d\u7f6e\u3002\n\n\u6839\u636e $Hall$ \u5b9a\u7406\uff0c\u5bf9\u4e8e\u4e24\u4fa7\u70b9\u96c6\u4e3a $X, Y (|X| < |Y|)$ \u7684\u4e8c\u5206\u56fe, $N(S)$ \u8868\u793a\u70b9\u96c6 $S$ \u7684\u90bb\u57df\uff0c\u82e5 $\\max_{S \\in X}(|S| - N(S)) \\leq 0$\uff0c\u90a3\u4e48\u5b58\u5728\u5b8c\u7f8e\u5339\u914d\u3002\n\n\u8003\u8651\u5728\u672c\u9898\u4e2d\uff0c\u7ecf\u8fc7 $i$ \u8f6e\u5220\u8fb9\u540e\uff0c\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a $n - i$\uff0c\u5bf9\u4e8e\u5de6\u4fa7\u4efb\u610f\u4e00\u4e2a\u5927\u5c0f\u4e3a $x$ \u7684\u70b9\u96c6\uff0c\u5411\u53f3\u4fa7\u8fde\u8fb9\u6570\u4e3a $(n - i)x$\u3002\u6839\u636e\u9e3d\u5de2\u539f\u7406\uff0c\u82e5\u90bb\u57df\u5c0f\u4e8e $x$\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u5927\u4e8e $n - i$\uff0c\u4e0d\u7b26\u5408\u9898\u610f\uff0c\u6240\u4ee5\u4e00\u5b9a\u6709\u5b8c\u7f8e\u5339\u914d\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ninline int read() {\n\tint res = 0, f = 1; char ch;\n\twhile((ch = getchar()) && (ch < '0' || ch > '9') && ch != '-');\n\t(ch == '-') ? f = -1 : res = ch - '0';\n\twhile((ch = getchar()) && ch >= '0' && ch <= '9') res = (res << 3) + (res << 1) + ch - '0';\n\treturn res * f;\n}\n\nconst int MAXN = 205;\n\nint T, n, match[MAXN], pos[MAXN][MAXN]; \nvector<int> son[MAXN], has[MAXN][MAXN];\nbool vis[MAXN];\n\nbool dfs(int now) {\n\tfor(int it : son[now])\n\t if(!vis[it]) {\n\t \tvis[it] = true;\n\t \tif(!match[it] || dfs(match[it]))\n\t \t return match[it] = now, true;\n\t }\n\treturn false;\n}\n\nvoid solve() {\n\tn = read();\n\tfor(int i = 0; i <= n + 3; i++) {\n\t\tson[i].clear();\n\t\tfor(int j = 0; j <= n + 3; j++) has[i][j].clear();\n\t}\n\tfor(int i = 1, x; i <= n; i++)\n\t for(int j = 1; j <= n; j++) {\n\t \tx = read();\n\t \tson[i].push_back(x);\n\t \thas[i][x].push_back(j);\n\t }\n\tfor(int cas = 1; cas <= n; cas++) {\n\t\tfor(int i = 0; i <= n + 3; i++) match[i] = 0;\n\t\tfor(int i = 1; i <= n; i++) {\n\t\t\tfor(int j = 0; j <= n + 3; j++) vis[j] = false;\n\t\t\tdfs(i);\n\t\t}\n\t\tfor(int i = 1; i <= n; i++) {\n\t\t\tint x = match[i];\n\t\t\tpos[x][cas] = has[x][i].back();\n\t\t\thas[x][i].pop_back();\n\t\t\tson[x].erase(find(son[x].begin(), son[x].end(), i));\n\t\t}\n\t}\n\tprintf(\"%d\\n\",n * (n - 1) / 2);\n\tfor(int i = 1; i <= n; i++)\n\t for(int j = i + 1; j <= n; j++)\n\t  printf(\"%d %d %d %d\\n\",i, pos[i][j], j, pos[j][i]);\n}\n\nint main() {\n\tT = read();\n\twhile(T--) solve();\n\treturn 0;\n}\n```\n",
        "postTime": 1677641070,
        "uid": 304556,
        "name": "zym417",
        "ccfLevel": 7,
        "title": "P9070"
    },
    {
        "content": "**\u9898\u610f** \u7ed9\u5b9a\u6b63\u6574\u6570 $n$\u3002\u73b0\u5728\u603b\u5171\u6709 $n$ \u79cd\u989c\u8272\u7684\u5361\u7247\uff0c\u989c\u8272\u7528 $1\\sim n$ \u7684\u6b63\u6574\u6570\u6807\u53f7\uff0c\u6bcf\u79cd\u989c\u8272\u7684\u5361\u7247\u5404\u6709 $n$ \u5f20\u3002\u5c06\u8fd9\u4e9b\u5361\u7247\u5206\u7ed9 $n$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u5404\u62ff\u4e86 $n$ \u5f20\u5361\u7247\u3002\u63a5\u4e0b\u6765\u4f60\u9700\u8981\u6267\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u5f62\u5982\uff1a\n\n- \u9009\u62e9\u4e24\u4e2a\u4eba\uff0c\u5e76\u4ea4\u6362\u4ed6\u4eec\u624b\u4e2d\u7684\u4e00\u5f20\u5361\u7247\u3002\n\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u9700\u8981\u4fdd\u8bc1\uff1a\u6bcf\u5f20\u5361\u7247\u81f3\u591a\u88ab\u4ea4\u6362\u4e00\u6b21\u3002\u800c\u4f60\u7684\u76ee\u6807\u5219\u662f\uff1a\u6bcf\u4e2a\u4eba\u624b\u4e2d\u90fd\u6709\u5168\u90e8\u989c\u8272\u7684\u5361\u7247\u3002\n\n\u7ed9\u5b9a\u521d\u59cb\u65f6\u6240\u6709\u4eba\u624b\u4e2d\u7684\u5361\u7247\u6301\u6709\u60c5\u51b5\uff0c\u4f60\u9700\u8981\u6784\u9020\u4e00\u79cd\u7b26\u5408\u4e0a\u8ff0\u8981\u6c42\u7684\u4ea4\u6362\u65b9\u6cd5\uff0c\u6216\u8005\u6307\u51fa\u8fd9\u662f\u4e0d\u53ef\u80fd\u505a\u5230\u7684\u3002\n\n\u4fdd\u8bc1 $n\\leq 200$\u3002\n\n\uff08\u5267\u900f\u8b66\u544a\uff09\n\n\uff08\u5267\u900f\u8b66\u544a\uff09\n\n\uff08\u5267\u900f\u8b66\u544a\uff09\n\n\uff08\u5267\u900f\u8b66\u544a\uff09\n\n\uff08\u5267\u900f\u8b66\u544a\uff09\n\n\uff08\u5267\u900f\u8b66\u544a\uff09\n\n----------------\n\n\u6211\u4eec\u628a $n$ \u4e2a\u4eba\u6301\u6709\u7684 $n$ \u5f20\u5361\u6392\u6210\u4e00\u4e2a $n\\times n$ \u7684\u65b9\u9635\uff0c\u7b2c $i$ \u4e2a\u4eba\u7684\u6240\u6709\u5361\u7247\u90fd\u5728\u7b2c $i$ \u884c\u3002\u8003\u8651\u4e0b\u9762\u7684\u64cd\u4f5c\uff1a\n\n- \u5bf9\u6240\u6709 $1\\leq i < j\\leq n$\uff0c\u4ea4\u6362\u4f4d\u4e8e $(i,j)$ \u548c $(j,i)$ \u7684\u5361\u7247\u3002\n\n\u8fd9\u6837\uff0c\u6700\u540e\u7b2c $i$ \u4e2a\u4eba\u62ff\u5230\u7684\u5361\u7247\u5c31\u662f\u539f\u6765\u7b2c $i$ \u5217\u7684\u6240\u6709\u5361\u7247\u3002\n\n\u8003\u8651\u5408\u7406\u5730\u5b89\u6392\u6240\u6709\u5361\u7247\uff0c\u4f7f\u5f97\u6bcf\u4e00\u5217\u7684\u5361\u7247\u90fd\u662f $1\\sim n$ \u7684\u6392\u5217\u3002\u6211\u4eec\u6765\u4e00\u5217\u4e00\u5217\u5b89\u6392\u5361\u7247\u3002\u6bcf\u6b21\u76f8\u5f53\u4e8e\uff1a\n\n- \u4ece\u6bcf\u884c\u5269\u4e0b\u7684\u5361\u7247\u4e2d\u5404\u62bd\u4e00\u5f20\u51fa\u6765\uff0c\u6784\u6210 $1\\sim n$ \u7684\u6392\u5217\u3002\n\n\u6211\u4eec\u6765\u8bc1\u660e\u8fd9\u603b\u662f\u505a\u5f97\u5230\u7684\u3002\u5047\u8bbe\u73b0\u5728\u6bcf\u884c\u8fd8\u5269 $k$ \u5f20\u5361\u7247\uff0c\u603b\u5171\u8fd8\u5269 $kn$ \u5f20\u5361\u7247\uff0c\u53ef\u77e5\u73b0\u5728 $1,...,n$ \u5269\u4e0b\u7684\u5361\u7247\u6570\u91cf\u90fd\u4e3a $k$\u3002\u6211\u4eec\u9700\u8981\u5728\u884c\u548c\u989c\u8272\u4e4b\u95f4\u505a\u4e00\u4e2a\u4e8c\u5206\u56fe\u5b8c\u5907\u5339\u914d\u3002\u7531 Hall \u5b9a\u7406\uff1a\n\n**\u5b9a\u7406** \u4e24\u90e8\u70b9\u6570\u76f8\u7b49\u7684\u4e8c\u5206\u56fe\u6709\u5b8c\u5907\u5339\u914d\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u5de6\u90e8\u7684\u4efb\u610f $x$ \u4e2a\u70b9\uff0c\u53f3\u90e8\u4e2d\u4e0e\u8fd9\u4e9b\u70b9\u4e2d\u81f3\u5c11\u4e00\u70b9\u6709\u8fde\u8fb9\u7684\u70b9\u7684\u6570\u91cf $\\geq x$\u3002\n\n\u5bf9\u4e8e $c$ \u79cd\u989c\u8272\uff0c\u603b\u5171\u8fd8\u5269\u4e0b $ck$ \u5f20\u8fd9\u4e9b\u989c\u8272\u7684\u5361\u7247\uff0c\u5219\u7531\u62bd\u5c49\u539f\u7406\u77e5\u6709\u81f3\u5c11 $c$ \u884c\u6709\u81f3\u5c11\u4e00\u5f20\u8fd9\u4e9b\u5361\u7247\u3002\u8fd9\u5c31\u5b8c\u6210\u4e86\u8bc1\u660e\u3002\n\n-------\n\n\u6c42\u89e3\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u53ef\u4ee5\u91c7\u7528\u5308\u7259\u5229\u6216\u6700\u5927\u6d41\u7b97\u6cd5\u3002\u7531\u4e8e\u603b\u5171\u9700\u8981\u6c42\u89e3 $n$ \u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^4)$ \u6216 $O(n^{3.5})$\u3002",
        "postTime": 1673954089,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CTS2023\u3010\u742a\u9732\u8bfa\u7684\u7b26\u5361\u4ea4\u6362\u3011"
    }
]