[
    {
        "content": "\u6211\u4eec\u5bf9\u4e8e\u8be2\u95ee\u505a\u83ab\u961f\u3002\u4e00\u79cd\u7b80\u5355\u7684\u9519\u8bef\u60f3\u6cd5\u662f\u628a $2n$ \u4e2a\u7aef\u70b9\u79bb\u6563\u5316\u4e4b\u540e\u62ff\u6765\u83ab\u961f\uff0c\u4f46\u662f\u5047\u5982 $l<L$\uff0c$r>R$\uff0c\u5219\u8be2\u95ee $[L,R]$ \u662f\u7b97\u4e0d\u5230 $[l,r]$ \u8fd9\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u7684\u3002\u4e5f\u5c31\u662f\uff0c\u8fd9\u6837\u65e0\u6cd5\u5904\u7406\u201c\u5305\u542b\u201d\u7684\u60c5\u51b5\u3002\n\n\u4e3a\u4e86\u80fd\u591f\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8003\u8651\u56de\u6eda\u83ab\u961f\u3002\u628a\u5de6\u7aef\u70b9\u653e\u5728\u6240\u5c5e\u5757\u4e0a\uff0c\u8003\u8651\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u5206\u7c7b\u8ba8\u8bba\u3002\n\n- \u4e24\u7aef\u70b9\u5728\u540c\u4e00\u5757\uff08\u8bbe\u4e3a $i$\uff09\uff1a\n  - \u628a\u5305\u542b\u8fd9\u4e00\u5757\u7684\u533a\u95f4\u5148\u52a0\u5230\u67d0\u4e2a\u6570\u636e\u7ed3\u6784\u91cc\uff0c\u7136\u540e\u4e0d\u7ba1\u4ed6\u4eec\uff08\u8fd9\u4e9b\u4e00\u5b9a\u6709\u8d21\u732e\uff09\n  - \u5269\u4e0b\u7684\u53ef\u80fd\u4ea7\u751f\u8d21\u732e\u533a\u95f4\uff08\u4e5f\u5c31\u662f\u81f3\u5c11\u6709\u4e00\u7aef\u5728\u5757\u5185\u7684\u533a\u95f4\uff09\u53ea\u6709 $O(\\sqrt n)$ \u4e2a\uff0c\u626b\u4e00\u904d\uff0c\u52a0\u5230\u67d0\u4e2a\u6570\u636e\u7ed3\u6784\u91cc\uff0c\u66f4\u65b0\u7b54\u6848\u5c31\u884c\n  - \u8fd9\u90e8\u5206\u590d\u6742\u5ea6 $O(T(n)q\\sqrt n)$\n- \u5426\u5219\uff08\u5de6\u7aef\u70b9\u5c5e\u4e8e $i$\uff0c\u53f3\u7aef\u70b9\u6240\u5c5e $>i$\uff09\u4ece\u5de6\u5f80\u53f3\u626b\u5de6\u7aef\u70b9\u5728\u8be5\u5757\u7684\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\n  - \u628a\u6a2a\u8de8\u4e86 $i,i+1$ \u4e24\u5757\u7684\u533a\u95f4\u5148\u52a0\u5230\u67d0\u4e2a\u6570\u636e\u7ed3\u6784\u91cc\uff0c\u7136\u540e\u4e0d\u7ba1\u4ed6\u4eec\uff08\u8fd9\u4e9b\u4e00\u5b9a\u6709\u8d21\u732e\uff09\n  - \u5269\u4e0b\u7684\u533a\u95f4\u4e0d\u53ef\u80fd\u5305\u542b\u8be2\u95ee\u533a\u95f4\u4e86\uff0c\u505a\u666e\u901a\u7684\u56de\u6eda\u83ab\u961f\u5373\u53ef\n  - \u8fd9\u90e8\u5206\u590d\u6742\u5ea6 $O(T(n)q\\sqrt n)$\n  \n\u4ee5\u4e0a\u7684\u201c\u67d0\u4e2a\u6570\u636e\u7ed3\u6784\u201d\u9700\u8981\u5728 $T(n)$ \u590d\u6742\u5ea6\u5185\u652f\u6301\uff1a\n\n- \u52a0\u5165\u4e00\u4e2a\u5143\u7d20\n- \u8be2\u95ee\u6700\u5927\u7684\u5143\u7d20\u8fde\u7eed\u6bb5\n- \u64a4\u9500\u6700\u540e\u51e0\u6b21\u64cd\u4f5c\uff08\u56de\u6eda\uff09\n\n\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u662f $O(\\log n)$ \u7684\uff0c\u5176\u5b9e\u76f4\u63a5\u7528\u4e24\u4e2a\u6570\u7ec4 $l,r$ \u5c31\u53ef\u4ee5 $O(1)$ \u5b9e\u73b0\u3002\u5177\u4f53\u770b\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint n,Q,bel[200005],ass[200005],tmp[200005],st[1005],ed[1005];\nstruct Seg{\n\tint l,r,id;\n}t[200005];\nstruct Thing{\n\tint x,id;\n}a[200005];\nstruct Query{\n\tint l,r,id;\n};\nbool operator <(const Thing i,const Thing j){\n\treturn i.x!=j.x?i.x<j.x:i.id<j.id;\n}\nvector<Query> q[1005];\nint l[200005],r[200005],ans=0,top=0;\nstruct Oper{\n\tint c,x,ax,ans;\n}S[3000005];\ninline void Add(int x){\n\tif(l[x]||r[x])return ;\n\tif(!l[x-1]&&!r[x+1])S[++top]={0,x,l[x],ans},S[++top]={1,x,r[x],ans},l[x]=r[x]=x,ans=max(ans,1);\n\telse if(!l[x-1])S[++top]={0,r[x+1],l[r[x+1]],ans},S[++top]={1,x,r[x],ans},l[r[x+1]]=x,r[x]=r[x+1],ans=max(ans,r[x]-x+1);\n\telse if(!r[x+1])S[++top]={1,l[x-1],r[l[x-1]],ans},S[++top]={0,x,l[x],ans},r[l[x-1]]=x,l[x]=l[x-1],ans=max(ans,x-l[x]+1);\n\telse S[++top]={1,l[x-1],r[l[x-1]],ans},S[++top]={0,r[x+1],l[r[x+1]],ans},S[++top]={0,x,l[x],ans},\n\t\t l[r[x+1]]=l[x-1],r[l[x-1]]=r[x+1],l[x]=x,ans=max(ans,r[x+1]-l[x-1]+1);\n}\nvoid Rollback(int t){\n\twhile(top>t){\n\t\tif(!S[top].c)l[S[top].x]=S[top].ax;\n\t\telse r[S[top].x]=S[top].ax;\n\t\tans=S[top].ans,top--;\n\t}\n}\nvoid Solve(int id){\n\tRollback(0);\n\tfor(int i=1;i<=n;i++)if(t[i].l<st[id]&&t[i].r>ed[id])Add(t[i].id);\n\tsort(q[id].begin(),q[id].end(),[](Query i,Query j){return i.r<j.r;});\n\tint tp=top,cur=ed[id];\n\tfor(Query i:q[id]){\n\t\tif(i.r>ed[id])continue;\n\t\tfor(int j=st[id];j<=ed[id];j++)if(i.l<=t[a[j].id].r&&t[a[j].id].l<=i.r)Add(a[j].id);\n\t\tass[i.id]=ans,Rollback(tp);\n\t}\n\tRollback(0);\n\tfor(int i=1;i<=n;i++)if(t[i].l<=ed[id]&&t[i].r>ed[id])Add(t[i].id);\n\tfor(Query i:q[id]){\n\t\tif(i.r<=ed[id])continue;\n\t\twhile(cur<i.r)Add(a[++cur].id);\n\t\ttp=top;\n\t\tfor(int j=ed[id];j>=i.l;j--)Add(a[j].id);\n\t\tass[i.id]=ans,Rollback(tp);\n\t}\n}\nint main() {\n\tscanf(\"%d%d\",&n,&Q);\n\tfor(int i=1,l,r;i<=n;i++)scanf(\"%d%d\",&l,&r),a[i]={l,i},a[i+n]={r,i},t[i]={l,r,i};\n\tsort(a+1,a+2*n+1);\n\tfor(int i=1;i<=n;i++){\n\t\tt[i].l=lower_bound(a+1,a+2*n+1,(Thing){t[i].l,0})-a;\n\t\tt[i].r=upper_bound(a+1,a+2*n+1,(Thing){t[i].r,1<<30})-a-1;\n\t}\n\tint SQ=sqrt(2*n);\n\tfor(int i=2*n;i>=1;i--)bel[i]=i/SQ+1,st[bel[i]]=i;\n\tfor(int i=1;i<=2*n;i++)ed[bel[i]]=i;\n\tfor(int i=1,l,r;i<=Q;i++){\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tl=lower_bound(a+1,a+2*n+1,(Thing){l,0})-a;\n\t\tr=upper_bound(a+1,a+2*n+1,(Thing){r,1<<30})-a-1;\n\t\tq[bel[l]].push_back((Query){l,r,i});\n\t}\n\tfor(int i=1;i<=bel[2*n];i++)if(q[i].size())Solve(i);\n\tfor(int i=1;i<=Q;i++)printf(\"%d\\n\",ass[i]);\n\treturn 0;\n}\n```",
        "postTime": 1608620432,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6349 \u3010[PA2011]Kangaroos\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u5168\u65b0\u7684\u5206\u5757\u505a\u6cd5\uff0c\u611f\u8c22@\u65f6\u95f4\u6709\u6cea \u591a\u6b21\u5c06\u7b97\u6cd5\u6551\u6d3b\u3002\n\n\u4ee4\u5757\u5927\u5c0f\u4e3a $T$ \uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(Tn\\log n+\\dfrac{mn\\log T}{T})$\uff0c\u76ee\u524d\u7684\u6700\u4f18\u89e3\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u533a\u95f4 $[L,R]$ \u662f\u5426\u4e0e\u4e00\u4e2a\u533a\u95f4\u6240\u6709\u7684 $[l_i,r_i]$ \u76f8\u4ea4\uff1f\n\n\u4e24\u6761\u7ebf\u6bb5 $[L,R],[l,r]$ \u6709\u4ea4\uff0c\u5f53\u4e14\u4ec5\u5f53 $L\\leq r$ \u4e14 $l\\leq R$\u3002\n\n\u90a3\u4e48\u4e00\u6761\u7ebf\u6bb5\u4e0e\u8fd9\u4e9b\u7ebf\u6bb5\u90fd\u6709\u4ea4\u5f53\u4e14\u4ec5\u5f53 $L\\leq \\min(r_i),R\\geq \\max(l_i)$\u3002\n\n\u4e8e\u662f\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u5757\u5185\u524d\u7f00\u540e\u7f00\u7684 $\\max,\\min$\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u4f1a\u6709\u4e00\u7c7b\u8d21\u732e\u7edf\u8ba1\u4e0d\u5230\uff0c\u5c31\u662f\u7b54\u6848\u533a\u95f4\u5728\u4e00\u4e2a\u5757\u5185\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u628a\u6240\u6709\u957f\u5ea6\u5c0f\u4e8e $\\sqrt n$ \u7684\u5b50\u533a\u95f4\u53d6\u51fa\u6765\uff0c\u770b\u6210\u4e00\u4e2a\u4e8c\u7ef4\u70b9\u5bf9 $(x,y)$\uff0c$x$ \u4e3a $l$ \u7684\u6700\u5927\u503c\uff0c $y$ \u4e3a $r$ \u7684\u6700\u5c0f\u503c\uff0c\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u8fd9\u6837\u505a\u5f88\u5bb9\u6613\u88ab\u5361\u5e38\uff0c\u4e00\u4e9b\u4f18\u5316\uff1a\n\n$1.$ \u5982\u679c\u60a8\u7528\u7684\u662f\u6811\u5957\u6811\u7ef4\u62a4\uff0c\u60a8\u7684\u9884\u5904\u7406\u5c31\u591a\u4e86\u4e00\u4e2a $\\log$\uff0c\u4f46\u662f\uff0c\u53ef\u4ee5\u5f00\u6876\u4f18\u5316\uff08\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff09\uff0c\u4f18\u5316\u5230\u4e00\u4e2a $\\log$\u3002\n\n$2.$ \u53ef\u4ee5\u628a\u6240\u6709\u957f\u5ea6\u5c0f\u4e8e $2\\sqrt n$ \u7684\u5b50\u533a\u95f4\u53d6\u51fa\u6765\uff0c\u8fd9\u6837\u5176\u4f59\u7684\u7b54\u6848\u4e00\u5b9a\u5305\u542b\u4e00\u4e2a\u6574\u5757\uff0c\u90a3\u4e48\u9047\u5230\u6574\u5757\u65f6\u518d\u4e8c\u5206\u3002\n\n$3.$ \u518d\u4e0d\u53ef\u80fd\u6700\u4f18\u65f6\u4e0d\u4e8c\u5206\u3002\n\n$4.$ \u6211\u7684\u5199\u6cd5\u5757\u5927\u5c0f\u5728 $100$ \u65f6\u6bd4\u8f83\u4f18\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\nconst int Mxdt=100000;\t//\u5355\u6b21\u5927\u5c0f \ninline char gc(){\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,Mxdt,stdin),p1==p2)?EOF:*p1++;\n}\ninline char pc(char ch,bool bj){\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf+Mxdt;\n\treturn (bj||(*p1++=ch)&&p1==p2)&&fwrite(p1=buf,1,p1-buf,stdout),0;\n}\nvoid print(int x)\n{\n\tif(x>9)print(x/10);\n\tpc(x%10^48,false);\n}\ninline void printnum(int x,char ch)\n{\n\tprint(x),pc(ch,false);\n}\ninline int read(){\n\tre int t=0;re char v=gc();\n\twhile(v<'0')v=gc();\n\twhile(v>='0')t=(t<<3)+(t<<1)+v-48,v=gc();\n\treturn t;\n}\nconst int blk=120,N=50000/blk+10;\nint n,m,a[50002],b[50002],p[100002],cnt,rt[100002],prel[N][blk+1],sufl[N][blk+1],prer[N][blk+1],sufr[N][blk+1],tr[400002],ans,st[N],ed[N],bl[100002],L[N],R[N],ls[9000002],rs[9000002],mx[9000002],tot,ll[100002][402];\ninline void add(re int &p,re int l,re int r,re int x,re int z){\n\tif(!p)p=++tot;\n\tmx[p]=max(mx[p],z);\n\tif(l==r)return;\n\tre int mid=l+r>>1;\n\tif(x<=mid)add(ls[p],l,mid,x,z);\n\telse add(rs[p],mid+1,r,x,z);\n}\ninline int ask(re int p,re int l,re int r,re int x,re int y){\n\tif(l>=x&&r<=y)return mx[p];\n\tre int mid=l+r>>1,s=0;\n\tif(x<=mid)s=max(s,ask(ls[p],l,mid,x,y));\n\tif(y>mid)s=max(s,ask(rs[p],mid+1,r,x,y));\n\treturn s;\n}\ninline void add(re int x,re int y,re int z){\n\tfor(;x<=cnt;x+=x&(-x)){\n\t\tll[x][z]=max(ll[x][z],y);\n\t}\n}\ninline void ask(re int x,re int y){\n\tfor(;x;x-=x&(-x))ans=max(ans,ask(rt[x],1,cnt,y,cnt));\n}\ninline int finds(re int p,re int x,re int y){\n\tre int l=1,r=ed[p]-st[p]+1,s=0;\n\twhile(l<=r){\n\t\tre int mid=l+r>>1;\n\t\tif(sufl[p][mid]<=y&&sufr[p][mid]>=x)s=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\treturn s;\n}\ninline int findp(re int p,re int x,re int y){\n\tre int l=1,r=ed[p]-st[p]+1,s=0;\n\twhile(l<=r){\n\t\tre int mid=l+r>>1;\n\t\tif(prel[p][mid]<=y&&prer[p][mid]>=x)s=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\treturn s;\n}\nint main(){\n\tn=read(),m=read();\n\tfor(re int i=1;i<=n;++i){a[i]=read(),b[i]=read(),p[++cnt]=a[i],p[++cnt]=b[i],bl[i]=(i-1)/blk+1,ed[bl[i]]=i;if(!st[bl[i]])st[bl[i]]=i;}p[++cnt]=2e9;\n\tsort(p+1,p+cnt+1),cnt=unique(p+1,p+cnt+1)-p-1;\n\tfor(re int i=1;i<=n;++i)a[i]=lower_bound(p+1,p+cnt+1,a[i])-p,b[i]=lower_bound(p+1,p+cnt+1,b[i])-p;\n\tfor(re int i=1;i<=n;++i){\n\t\tre int tmpx=0,tmpy=cnt;\n\t\tfor(re int j=i;j<=min(i+blk*2-1,n);++j)tmpx=max(tmpx,a[j]),tmpy=min(tmpy,b[j]),add(tmpx,tmpy,j-i+1);\n\t}\n\tfor(re int i=1;i<=cnt;++i)for(re int j=1;j<=blk*2;++j)if(ll[i][j])add(rt[i],1,cnt,ll[i][j],j);\n\tfor(re int i=1;i<=bl[n];++i){\n\t\tprel[i][0]=L[i]=1,prer[i][0]=R[i]=cnt;\n\t\tfor(re int j=st[i];j<=ed[i];++j)prel[i][j-st[i]+1]=max(prel[i][j-st[i]],a[j]),prer[i][j-st[i]+1]=min(prer[i][j-st[i]],b[j]),L[i]=max(L[i],a[j]),R[i]=min(R[i],b[j]);\n\t\tsufl[i][0]=1,sufr[i][0]=cnt;\n\t\tfor(re int j=ed[i];j>=st[i];--j)sufl[i][ed[i]-j+1]=max(sufl[i][ed[i]-j],a[j]),sufr[i][ed[i]-j+1]=min(sufr[i][ed[i]-j],b[j]);\n\t}\n\twhile(m--){\n\t\tre int l=read(),r=read();ans=0;\n\t\tl=lower_bound(p+1,p+cnt+1,l)-p,r=upper_bound(p+1,p+cnt+1,r)-p-1;\n\t\tfor(re int i=1,j;i<=bl[n];i=j+1){\n\t\t\tre int sum=0;\n\t\t\tj=i;\n\t\t\twhile(L[j]<=r&&R[j]>=l)sum+=ed[j]-st[j]+1,++j;\n\t\t\t--j;\n\t\t\tif(j<i){++j;continue;}\n\t\t\tif(sum+ed[i-1]-st[i-1]+1+ed[j+1]-st[j+1]+1<=ans)continue;\n\t\t\tif(i-1)sum+=finds(i-1,l,r);\n\t\t\tif(j!=bl[n])sum+=findp(j+1,l,r);\n\t\t\tans=max(ans,sum);\n\t\t\tif(j<i)j=i;\n\t\t}\n\t\task(r,l);\n\t\tprintnum(ans,'\\n');\n\t}\n\treturn pc('0',1);\n}\n```\n",
        "postTime": 1608542194,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6349 \u3010[PA2011]Kangaroos\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6349)\n\nKDT \u4e0a\u6253\u6807\u8bb0\u7684 hot tea\u3002\n\n\u8003\u8651\u5c06\u8be2\u95ee $A,B$ \u770b\u4f5c\u4e8c\u7ef4\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0a\u7684\u4e00\u4e2a\u70b9 $(A,B)$\uff0c\u90a3\u4e48\u6211\u4eec\u8fd9\u6837\u8003\u8651\uff0c\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u626b\u8fc7\u5168\u90e8 $n$ \u4e2a\u533a\u95f4\u5e76\u5f00\u4e00\u4e2a\u53d8\u91cf $cnt$ \u8868\u793a\u5f53\u524d\u4e0e $[l_i,r_i]$ \u6709\u4ea4\u7684\u533a\u95f4\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5982\u679c\u5f53\u524d\u626b\u63cf\u5230\u7684\u533a\u95f4 $[l_i,r_i]$ \u4e0e\u533a\u95f4 $[A,B]$ \u6709\u4ea4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4ee4 $cnt$ \u52a0 $1$\uff0c\u5426\u5219 $cnt$ \u6e05\u7a7a\uff0c\u7b54\u6848\u5c31\u662f\u4efb\u610f\u65f6\u523b\u6700\u5927\u7684 $cnt$\u3002\n\n\u663e\u7136\u5982\u679c\u6211\u4eec\u66b4\u529b\u5730\u5bf9\u6240\u6709\u533a\u95f4\u90fd\u91cd\u590d\u4e00\u904d\u8fd9\u4e2a\u64cd\u4f5c\u90a3\u65f6\u95f4\u590d\u6742\u5ea6\u80af\u5b9a\u7206\u70b8\uff0c\u8003\u8651\u5982\u4f55\u4f18\u5316\uff0c\u6211\u4eec\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u5e76\u4e00\u904d\u626b\u8fc7\u5168\u90e8 $n$ \u4e2a\u533a\u95f4\u5904\u7406\u6240\u6709\u8be2\u95ee\uff0c\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $[l_i,r_i]$ \u800c\u8a00\uff0c\u4e0e\u5176\u6ca1\u6709\u4ea4\u7684\u8be2\u95ee\u5bf9\u5e94\u7684\u70b9\u80af\u5b9a\u4f1a\u843d\u5728\u4e24\u4e2a\u77e9\u5f62\u5185\uff0c\u56e0\u6b64\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u505a\u7684\u5373\u662f\uff1a\n\n- \u5c06\u67d0\u4e24\u4e2a\u77e9\u5f62\u4e2d\u6240\u6709\u70b9\u7684\u6743\u503c\u6e05\u96f6\u3002\n- \u5c06\u4e0d\u5728\u8fd9\u4e24\u4e2a\u77e9\u5f62\u4e2d\u7684\u6240\u6709\u70b9\u6743\u503c\u52a0\u4e00\n\n\u6700\u540e\u8981\u6c42\u7684\u5373\u662f\u6bcf\u4e2a\u8282\u70b9\u6743\u503c\u7684\u5386\u53f2\u6700\u5927\u503c\u3002\n\n\u8003\u8651\u5bf9\u8fd9 $m$ \u4e2a\u8be2\u95ee\u70b9\u5efa\u7acb KDT\uff0c\u90a3\u4e48\u6839\u636e KDT \u90a3\u4e00\u5957\u7406\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u77e9\u5f62\u4e0a\u7684\u64cd\u4f5c\u8f6c\u5316\u4e3a $\\sqrt{n}$ \u4e2a\u5355\u70b9\u64cd\u4f5c $+$ $\\sqrt{n}$ \u4e2a\u5b50\u6811\u64cd\u4f5c\u3002\u5355\u70b9\u64cd\u4f5c\u662f\u5bb9\u6613\u7684\uff0c\u96be\u70b9\u5728\u4e8e\u5b50\u6811\u64cd\u4f5c\uff0c\u56e0\u6b64\u6211\u4eec\u73b0\u5728\u8981\u5b9e\u73b0\u7684\u5373\u4e3a\uff1a\n\n- \u5c06\u5b50\u6811\u5185\u6240\u6709\u70b9\u6743\u503c\u6e05\u96f6\n- \u5c06\u5b50\u6811\u5185\u6240\u6709\u70b9\u6743\u503c\u52a0\u4e00\n\n\u5bf9\u6c42\u89e3\u5386\u53f2\u6700\u5927\u503c\u7ebf\u6bb5\u6811\u6bd4\u8f83\u4e86\u89e3\u7684\u540c\u5b66\u5230\u8fd9\u4e00\u6b65\u5e94\u8be5\u4f1a\u505a\u4e86\u3002\u4f46\u662f\u6211\u5bf9\u7406\u662f\u6700\u5927\u503c\u7ebf\u6bb5\u6811\u4e0d\u662f\u592a\u4e86\u89e3\uff0c\u56e0\u6b64\u8fd9\u91cc\u4f1a\u8f83\u4e3a\u8be6\u7ec6\u5730\u8bb2\u89e3\u4e00\u4e0b\u5982\u4f55\u7528\u5386\u53f2\u6700\u5927\u503c\u7684\u6807\u8bb0\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u8003\u5bdf\u4e00\u4e2a\u70b9\u4e0a\u4e00\u6b21\u6807\u8bb0\u4e0b\u63a8\u5230\u73b0\u5728\u4e00\u5171\u7ecf\u5386\u4e86\u54ea\u4e9b\u8fc7\u7a0b\uff0c\u6709\u4e24\u79cd\u53ef\u80fd\uff0c\u8981\u4e48\u6ca1\u6709\u88ab\u6e05\u7a7a\uff0c\u6743\u503c\u76f4\u63a5\u88ab\u52a0\u4e0a\u4e86\u4e00\u4e2a\u6570 $v$\u3002\u8981\u4e48\u66fe\u7ecf\u88ab\u6e05\u7a7a\u8fc7\uff0c\u4e00\u5f00\u59cb\u5148 $+v_0$\uff0c\u7136\u540e\u6e05\u7a7a\uff0c\u53c8\u52a0\u4e86 $v_1$\uff0c\u518d\u6e05\u7a7a\uff0c$+v_2$\uff0c\u6e05\u7a7a\uff0c\u2026\u2026\uff0c\u6700\u540e $+v_m$\uff0c\u503c\u4e3a $v_m$\u3002\u4e0d\u96be\u53d1\u73b0\u7531\u4e8e\u6211\u4eec\u53ea\u5173\u5fc3\u5386\u53f2\u6700\u5927\u503c\uff0c\u56e0\u6b64 $v_1,v_2,\\cdots,v_m$ \u5177\u4f53\u662f\u4ec0\u4e48\u4e0d\u91cd\u8981\uff0c\u6211\u4eec\u53ea\u7528\u5173\u5fc3\u4ee5\u4e0b\u51e0\u4e2a\u503c\uff1a\n\n- \u7b2c\u4e00\u6b21\u52a0\u7684\u503c $v_0$\uff0c\u7a0b\u5e8f\u4e2d\u7528 $add\\_mx$ \u8868\u793a\u3002\n- \u8fd9\u4e2a\u503c\u4ece\u4e0a\u4e00\u6b21\u88ab\u6807\u8bb0\u4e0b\u63a8\u662f\u5426\u88ab\u6e05\u7a7a\uff0c$clr$\u3002\n- $\\max{v_1,v_2,\\cdots,v_m}$\uff0c\u7a0b\u5e8f\u4e2d\u7528 $cov\\_mx$ \u8868\u793a\u3002\n- \u8fd9\u4e2a\u4f4d\u7f6e\u5f53\u524d\u7684\u503c $v_m$\uff0c\u7a0b\u5e8f\u4e2d\u7528 $tg$ \u8868\u793a\u3002\n\n\u5f53\u7136\u9664\u4e86\u8fd9\u56db\u4e2a\u6807\u8bb0\u4e4b\u5916\uff0c\u8fd8\u6709\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6743\u503c $v$ \u4ee5\u53ca\u5386\u53f2\u6700\u5927\u503c $hmx$\u3002\n\n\u8003\u8651\u5bf9\u4e00\u4e2a\u5b50\u6811\u6e05\u7a7a/\u6574\u4f53\u52a0\u503c\u4f1a\u5bf9\u6807\u8bb0\u4ea7\u751f\u600e\u6837\u7684\u5f71\u54cd\u3002\u9996\u5148\u662f\u5b50\u6811\u6e05\u7a7a\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u5bb9\u6613\uff0c\u76f4\u63a5\u5c06 $clr$ \u8bbe\u4e3a $1$\uff0c$tg,v$ \u8bbe\u4e3a $0$ \u5373\u53ef\u3002\u5176\u6b21\u662f\u6574\u4f53\u52a0\u503c\uff0c\u5982\u679c $clr\\ne 0$ \u90a3\u5c31\u4ee4 $tg$ \u52a0 $v$\uff0c\u5e76\u5c06 $cov\\_mx$ \u5bf9 $tg$ \u53d6 $\\max$\uff0c\u5426\u5219\u4ee4 $add\\_mx$ \u52a0 $v$\u3002\n\n\u7136\u540e\u662f\u4e0b\u63a8\u6807\u8bb0\u7684\u95ee\u9898\uff0c\u5982\u679c $clr=0$ \u90a3\u4e48\u76f4\u63a5\u5bf9\u5de6\u53f3\u513f\u5b50\u8fdb\u884c\u6574\u4f53 $+add\\_mx$ \u64cd\u4f5c\u5373\u53ef\u3002\u5426\u5219\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5148\u5bf9\u5de6\u53f3\u513f\u5b50\u8fdb\u884c $+add\\_mx$\uff0c\u7136\u540e $+v_1$\uff0c\u6e05\u7a7a\uff0c$+v_2$\uff0c\u6e05\u7a7a\uff0c\u2026\u2026\uff0c\u6700\u540e $+v_m$\uff0c\u8fd9\u7b49\u4ef7\u4e8e\u5148\u5bf9\u5de6\u53f3\u513f\u5b50\u8fdb\u884c\u6574\u4f53 $+add\\_mx$ \u64cd\u4f5c\uff0c\u7136\u540e\u4ee4\u5de6\u53f3\u513f\u5b50\u7684 $cov\\_mx$ \u5bf9\u8be5\u8282\u70b9\u7684 $cov\\_mx$ \u53d6 $\\max$\uff0c\u7136\u540e\u4ee4\u5de6\u53f3\u513f\u5b50\u7684 $tg$ \u548c $v$ \u90fd\u7b49\u4e8e $tg$\u3002\u6ce8\u610f\u6bcf\u6b21\u64cd\u4f5c\u4e4b\u540e\u90fd\u8981\u5b9e\u65f6\u66f4\u65b0 $hmx$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $n\\sqrt{m}$\u3002\n\n```cpp\nconst int MAXN=2e5;\nconst int K=2;\nint n,m,res[MAXN+5];pii a[MAXN+5];\nstruct point{\n\tint x[K+2],id;\n\tpoint(){memset(x,0,sizeof(x));id=0;}\n\tint& operator [](int id){return x[id];}\n} p[MAXN+5];\nstruct node{int ch[2],v,hmx,add_mx,cov_mx,tg,clr;point val,mn,mx;} s[MAXN+5];\nint ncnt=0,rt=0;\nvoid build(int &k,int l,int r){\n\tif(l>r) return;k=++ncnt;\n\tstatic double avg[K+2],var[K+2];\n\tfill(avg,avg+K,0);fill(var,var+K,0);\n\tfor(int i=l;i<=r;i++) for(int j=0;j<K;j++) avg[j]+=p[i][j];\n\tfor(int j=0;j<K;j++) avg[j]/=(r-l+1);\n\tfor(int i=l;i<=r;i++) for(int j=0;j<K;j++) var[j]+=(p[i][j]-avg[j])*(p[i][j]-avg[j]);\n\tdouble mx=0;int dim=0;\n\tfor(int j=0;j<K;j++) if(mx<var[j]) mx=var[j],dim=j;\n\tint mid=l+r>>1;\n\tnth_element(p+l,p+mid,p+r+1,[&](point x,point y){return x[dim]<y[dim];});\n\tbuild(s[k].ch[0],l,mid-1);build(s[k].ch[1],mid+1,r);\n\ts[k].val=s[k].mn=s[k].mx=p[mid];\n\tfor(int i=0;i<K;i++){\n\t\tif(s[k].ch[0]) chkmin(s[k].mn[i],s[s[k].ch[0]].mn[i]),chkmax(s[k].mx[i],s[s[k].ch[0]].mx[i]);\n\t\tif(s[k].ch[1]) chkmin(s[k].mn[i],s[s[k].ch[1]].mn[i]),chkmax(s[k].mx[i],s[s[k].ch[1]].mx[i]);\n\t}\n}\nvoid tagclr(int k){s[k].clr=1;s[k].tg=0;s[k].v=0;}\nvoid tagadd(int k,int v){\n\ts[k].v+=v;chkmax(s[k].hmx,s[k].v);s[k].tg+=v;\n\tif(s[k].clr) chkmax(s[k].cov_mx,s[k].tg);\n\telse chkmax(s[k].add_mx,s[k].tg);\n}\nvoid pushdown(int k){\n\tif(s[k].add_mx){\n\t\tif(s[k].ch[0]) tagadd(s[k].ch[0],s[k].add_mx);\n\t\tif(s[k].ch[1]) tagadd(s[k].ch[1],s[k].add_mx);\n\t\ts[k].add_mx=0;\n\t} if(s[k].clr){\n\t\tif(s[k].ch[0]){\n\t\t\ts[s[k].ch[0]].clr=1;\n\t\t\tchkmax(s[s[k].ch[0]].cov_mx,s[k].cov_mx);\n\t\t\tchkmax(s[s[k].ch[0]].hmx,s[k].cov_mx);\n\t\t\ts[s[k].ch[0]].tg=s[k].tg;\n\t\t\ts[s[k].ch[0]].v=s[k].tg;\n\t\t} if(s[k].ch[1]){\n\t\t\ts[s[k].ch[1]].clr=1;\n\t\t\tchkmax(s[s[k].ch[1]].cov_mx,s[k].cov_mx);\n\t\t\tchkmax(s[s[k].ch[1]].hmx,s[k].cov_mx);\n\t\t\ts[s[k].ch[1]].tg=s[k].tg;\n\t\t\ts[s[k].ch[1]].v=s[k].tg;\n\t\t} s[k].cov_mx=s[k].clr=0;\n\t} s[k].tg=0;\n}\nvoid clrpt(int k){pushdown(k);s[k].v=0;}\nvoid addpt(int k,int v){pushdown(k);s[k].v+=v;chkmax(s[k].hmx,s[k].v);}\nvoid modify(int k,int l,int r){\n\tif(!k) return;\n\tif(s[k].mn[0]>r||s[k].mx[1]<l) return tagclr(k),void();\n\tif(l<=s[k].mn[1]&&s[k].mx[0]<=r) return tagadd(k,1),void();\n\tpushdown(k);\n\tif(s[k].val[0]>r||s[k].val[1]<l) clrpt(k);\n\telse addpt(k,1);\n\tmodify(s[k].ch[0],l,r);modify(s[k].ch[1],l,r);\n}\nvoid dfs(int k){\n\tif(!k) return;res[s[k].val.id]=s[k].hmx;\n\tpushdown(k);dfs(s[k].ch[0]);dfs(s[k].ch[1]);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d\",&a[i].fi,&a[i].se);\n\tfor(int i=1;i<=m;i++) scanf(\"%d%d\",&p[i][0],&p[i][1]),p[i].id=i;\n\tbuild(rt,1,m);\n\tfor(int i=1;i<=n;i++) modify(rt,a[i].fi,a[i].se);\n\tdfs(rt);\n\tfor(int i=1;i<=m;i++) printf(\"%d\\n\",res[i]);\n\treturn 0;\n}\n/*\n8 2\n4 5\n5 6\n2 4\n1 3\n5 7\n6 7\n1 6\n2 5\n4 7\n4 5\n*/\n```\n\n",
        "postTime": 1632207043,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6349 [PA2011]Kangaroos"
    },
    {
        "content": "## **\u6734\u5b9e\u65e0\u534e\uff0c\u4f46\u5feb\u4e50\u7684O($n\\sqrt{n}$)\u83ab\u961f\u3002**\n\n\n\n\u663e\u7136\u8fd9\u9898\u7684\u8be2\u95ee\u9700\u8981\u7684\u4fe1\u606f\u662f\u5f88\u96be\u5feb\u901f\u5408\u5e76\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u83ab\u961f**\u4f18\u5316\u66b4\u529b**\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u7684\u8bbe\u8ba1\u51fa\u4e00\u4e2aO($n\\sqrt{nlogn}$)\u7684\u83ab\u961f\uff0c\u5373\u6309\u7167\u83ab\u961f\u7684\u5faa\u5e8f\u5904\u7406\u8be2\u95ee\uff0c\u540c\u65f6\u4f7f\u7528\u7ebf\u6bb5\u6811\u5728\u8fb9\u754c\u79fb\u52a8\u65f6\u7ef4\u62a4\u6700\u957f\u8fde\u7eed\u6bb5\u3002\n\n\u4f46\u662flog\u6570\u636e\u7ed3\u6784\u548c\u6839\u53f7\u7b97\u6cd5\u516b\u5b57\u4e0d\u5408\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u6709\u4ec0\u4e48\u529e\u6cd5\u641e\u6389\u8fd9\u4e2alog\u3002\n\n~~\u867d\u7136\u4f60\u5199\u4e2a\u5e26log\u7684\u5361\u5361\u5e38\u4e00\u6837\u80fd\u8fc7\u5c31\u662f\u5f88\u5371\u9669\u3002~~\n\n\n------------\n\n\n\u6211\u4eec\u601d\u8003\uff0c\u5177\u4f53\u4ec0\u4e48\u64cd\u4f5c\u9700\u8981\u4f9d\u9760\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u4fe1\u606f\u6765\u5904\u7406\u3002\n\n\u8fd9\u91cc\u64cd\u4f5c\u5f88\u663e\u7136\u53ea\u6709\u4e24\u4e2a\uff0c\u5c31\u662f\u6dfb\u52a0\u548c\u5220\u9664\u3002\n\n\u540c\u6837\u5f88\u663e\u7136\u7684\u662f\uff0c\u6dfb\u52a0\u5b8c\u5168\u4e0d\u9700\u8981\u5206\u6cbb\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u8be2\u95ee\u5168\u5c40\u6700\u957f\u8fde\u7eed\u6bb5\uff0c\u800c\u4e0d\u5173\u5fc3\u67d0\u4e2a\u4f4d\u7f6e\u6240\u5c5e\u7684\u8fde\u7eed\u6bb5\u957f\u5ea6\u3002\u6211\u4eec\u53ea\u9700\u8981\u5728\u4e00\u4e2a\u8fde\u7eed\u6bb5\u7684\u5de6\u53f3\u4e24\u7aef\u8bb0\u5f55\u5176\u957f\u5ea6\uff0c\u5408\u5e76\u7684\u65f6\u5019\u66f4\u65b0\u5373\u53ef\u3002\n\n\u90a3\u6211\u4eec\u7684\u95ee\u9898\u5c31\u6765\u5230\u5220\u9664\u4e86\uff0c\u663e\u7136\u6309\u7167\u4e0a\u9762\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5220\u9664\u662f\u56f0\u96be\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u5f53\u524d\u4f4d\u7f6e\u6240\u5904\u7684\u8fde\u7eed\u6bb5\u4e24\u8fb9\u5728\u54ea\uff0c\u4e5f\u5c31\u6ca1\u6cd5\u5feb\u901f\u5206\u88c2\u4e00\u4e2a\u8fde\u7eed\u6bb5\u3002\n\n\u4fe1\u606f**\u6613\u6dfb\u52a0\uff0c\u96be\u5220\u9664**\u3002**\u56de\u6eda\u83ab\u961f**\u7684\u6807\u5fd7\u7279\u5f81\u3002\n\n\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a**\u53ef\u56de\u9000\u5316\u6570\u7ec4**\u5904\u7406\u4e0a\u9762\u7684\u63d2\u5165\u64cd\u4f5c\u5373\u53ef\uff0c\u6bcf\u6b21\u5904\u7406\u8be2\u95ee\u5148\u5b9a\u4f4d\u53f3\u7aef\u70b9r\uff0c\u518d\u628al\u4ece\u6240\u5c5e\u5757\u53f3\u7aef\u70b9\u79fb\u52a8\u5230\u8be2\u95ee\u7684\u4f4d\u7f6e\uff0c\u8bb0\u5f55\u7b54\u6848\uff0c\u56de\u6eda\u5de6\u7aef\u70b9l\u5373\u53ef\u3002\n\n\u4e00\u822c\u7684\u53ef\u56de\u9000\u5316\u6570\u636e\u7ed3\u6784\u5141\u8bb8\u64a4\u9500\u4efb\u610f\u6b21\u4fee\u6539\uff0c\u4f46\u8fd9\u91cc\u6ca1\u5fc5\u8981\u5b9e\u73b0\u4e00\u4e2a\u901a\u7528\u7684\u53ef\u56de\u9000\u5316\u6570\u7ec4\u3002\u663e\u7136\u6211\u4eec\u6bcf\u6b21\u56de\u6eda\u90fd\u662f\u56de\u6eda\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u7248\u672c\u3002\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u5de6\u7aef\u70b9\u79fb\u52a8\u4ea7\u751f\u7684\u64cd\u4f5c\uff0c\u8bb0\u5f55\u5f71\u54cd\u7684\u70b9\u548c\u5f71\u54cd\u524d\u7684\u503c\uff0c\u56de\u6eda\u65f6\u6839\u636e\u8bb0\u5f55\u7684\u53d7\u5f71\u54cd\u70b9\uff0c\u76f4\u63a5\u7528\u5f71\u54cd\u524d\u7684\u503c\u8986\u76d6\u56de\u53bb\u5373\u53ef\u3002\n\n------------\n### \u8981\u6ce8\u610f\u51e0\u70b9\uff1a\n1.  \u56de\u6eda\u83ab\u961f**\u4e0d\u80fd**\u5904\u7406**\u4e24\u7aef\u70b9\u5728\u540c\u4e00\u5757\u4e2d**\u7684\u8be2\u95ee\uff0c\u8fd9\u4e9b\u8be2\u95ee\u8981\u6309\u6240\u5c5e\u5757\u653e\u5230\u4e00\u8d77\u5904\u7406\u3002\u663e\u7136**\u5305\u542b\u5f53\u524d\u5757\u7684\u533a\u95f4\u4e00\u5b9a\u5305\u542b\u5176\u4e2d\u7684\u8be2\u95ee**\uff0c\u6211\u4eec\u626b\u51fa\u8fd9\u4e9b\u533a\u95f4\uff0c\u5269\u4e0b\u7684\u533a\u95f4\u53ea\u4f1a\u662f\u7aef\u70b9\u5728\u5f53\u524d\u5757\u4e2d\u7684\uff0c\u6bcf\u4e2a\u8be2\u95ee\u626b\u4e00\u4e0b\u5f53\u524d\u5757\uff0c\u4f7f\u7528\u53e6\u4e00\u4e2a\u53ef\u56de\u9000\u5316\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n2. \u83ab\u961f\u53ea\u80fd\u5904\u7406\u51fa**\u4e24\u7aef\u70b9\u81f3\u5c11\u4e00\u4e2a\u5728\u8be2\u95ee\u533a\u95f4\u5185**\u7684\u533a\u95f4\uff0c\u5bf9\u4e8e\u5305\u542b\u8be2\u95ee\u533a\u95f4\u7684\u533a\u95f4\uff0c**\u663e\u7136\u5305\u542b\u5f53\u524d\u8be2\u95ee\u6240\u5c5e\u5757\u7684\u53f3\u7aef\u70b9\uff08\u6ce8\u610f\u4e0d\u4e00\u5b9a\u5305\u542b\u6574\u4e2a\u5757\uff09**\uff08\u4e0d\u8de8\u5757\u7684\u6211\u4eec\u5728\u4e0a\u9762\u6309\u5757\u5206\u7ec4\u4e00\u8d77\u66b4\u529b\uff09\uff0c\u540c\u6837\u5148\u9884\u5904\u7406\u518d\u505a\u83ab\u961f\u3002\n3. \u6362\u5757\u5904\u7406\u65f6\u5019\u522b\u5fd8\u4e86\u6e05\u7a7a\u6570\u7ec4\u548c\u7b54\u6848\uff0c\u56de\u6eda\u65f6\u5019\u522b\u5fd8\u4e86\u56de\u6eda\u7b54\u6848\u3002\n\n\n------------\n\n\n\u5e38\u6570\u4e0d\u5927\uff0c\u751a\u81f3\u7528\u4e86vector\u4f9d\u65e7\u8dd1\u7684\u98de\u5feb\u3002\u5feb\u4e50rk1\u3002~~\u5efa\u8bae\u6539\u4e3a\uff1a\u9999 \u6e2f \u8bb0 \u8005~~\n![\u63d0\u4ea4](https://cdn.luogu.com.cn/upload/image_hosting/k1j7skwa.png)\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <list>\n#include <cmath>\nusing namespace std;\nconst int kmaxn=200000+5;\nstruct Array\n{\n\tint a[kmaxn];\n\tint vis[kmaxn];\n\tint rv[kmaxn];\n\tint t[kmaxn],st;\n\tinline const int operator[](const int i)const\n\t{\n\t\treturn a[i];\n\t}\n\tinline void mod(int x,int v)\n\t{\n\t\tif(vis[x])\n\t\t\ta[x]=v;\n\t\telse\n\t\t{\n\t\t\tt[++st]=x;\n\t\t\tvis[x]=1;\n\t\t\trv[x]=a[x];\n\t\t\ta[x]=v;\n\t\t}\n\t}\n\tinline void set(int x,int v)\n\t{\n\t\ta[x]=v;\n\t}\n\tvoid cancel_all()\n\t{\n\t\tint tp;\n\t\twhile(st)\n\t\t{\n\t\t\ttp=t[st--];\n\t\t\ta[tp]=rv[tp];\n\t\t\tvis[tp]=0;\n\t\t}\n\t}\n\tvoid clear(int n)\n\t{\n\t\tfor(int i=1;i<=n;++i)\n\t\t\ta[i]=rv[i]=vis[i];\n\t\tst=0;\n\t}\n};\ntypedef pair<int,int> PR;\nArray tb1,tb2;\nPR a[kmaxn];\nPR seg[kmaxn];\nvector<PR> ask[kmaxn];\nint trs[kmaxn];\nint LE[kmaxn];\nint n,m,bs;\ninline int BK(int i){return (i-1)/bs+1;}\ninline int BR(int i){return min(i*bs,n);}\ninline int BL(int i){return BR(i-1)+1;}\ninline int TL(int x)\n{\n\treturn lower_bound(trs+1,trs+1+n,x)-trs;\n}\ninline int TR(int x)\n{\n\treturn upper_bound(trs+1,trs+1+n,x)-trs-1;\n}\nint res1,res2,ans[kmaxn];\nvoid add1(int x,Array& tb,int &res)\n{\n\tif(tb[x]!=0)return;\n\tint dl,dr,len;\n\tdl=tb[x-1];\n\tdr=tb[x+1];\n\tlen=dl+dr+1;\n\ttb.set(x-dl,len);\n\ttb.set(x+dr,len);\n\ttb.set(x,len);\n\tres=max(len,res);\n}\nvoid add2(int x,Array& tb,int &res)\n{\n\tif(tb[x]!=0)return;\n\tint dl,dr,len;\n\tdl=tb[x-1];\n\tdr=tb[x+1];\n\tlen=dl+dr+1;\n\ttb.mod(x-dl,len);\n\ttb.mod(x+dr,len);\n\ttb.mod(x,len);\n\tres=max(len,res);\n}\nint nb;\nbool ck(int k,int l,int r)\n{\n\tint tl=seg[k].first,tr=seg[k].second;\n\treturn !(tr<l||tl>r);\n}\nint brute(int b,int l,int r)\n{\n\tint k=n/2,tl=BL(b),tr=BR(b);\n\tif(nb!=b)\n\t{\n\t\tnb=b;\t\n\t\ttb2.clear(n);\n\t\tres2=0;\n\t\tfor(int i=1;i<=k;++i)\n\t\t{\n\t\t\tif(seg[i].first<tl&&seg[i].second>tr)\n\t\t\t\tadd1(i,tb2,res2);\n\t\t}\n\t}\n\tint tres=res2,p=0;\n\tfor(int i=tl;i<=tr;++i)\n\t{\n\t\tp=a[i].second;\n\t\tif(ck(p,l,r))\n\t\t\tadd2(p,tb2,res2);\n\t}\n\tswap(tres,res2);\n\ttb2.cancel_all();\n\treturn tres;\n}\nvoid solve(int b)\n{\n\tint l,r,tl,tr,tres,k;//[l,r),[tl,tr]\n\ttb1.clear(n/2);\n\tres1=0;\n\tl=r=k=BR(b);\n\tfor(int i=n/2;i>0;--i)\n\t{\n\t\tif(ck(i,r,r))\n\t\t\tadd1(i,tb1,res1);\n\t}\n\tfor(auto p:ask[b])\n\t{\n\t\ttl=LE[p.second];\n\t\ttr=p.first;\n\t\tif(tr<=k)\n\t\t{\n\t\t\tans[p.second]=brute(b,tl,tr);\n\t\t\tcontinue;\n\t\t}\n\t\twhile(r<=tr)\n\t\t\tadd1(a[r++].second,tb1,res1);\n\t\ttres=res1;\n\t\twhile(l>tl)\n\t\t\tadd2(a[--l].second,tb1,res1);\n\t\tans[p.second]=res1;\n\t\ttb1.cancel_all();\n\t\tres1=tres;\n\t\tl=k;\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tcin>>seg[i].first>>seg[i].second;\n\t\ta[i].first=trs[i]=seg[i].first;\n\t\ta[i+n].first=trs[i+n]=seg[i].second;\n\t\ta[i].second=a[i+n].second=i;\n\t}\n\tn*=2;\n\tbs=sqrt(n);\n\tsort(trs+1,trs+1+n);\n\tsort(a+1,a+1+n);\n\tPR tp;\n\tfor(int i=n/2;i>0;--i)\n\t{\n\t\tseg[i].first=TL(seg[i].first);\n\t\tseg[i].second=TR(seg[i].second);\n\t}\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tcin>>LE[i]>>tp.first;\n\t\tLE[i]=TL(LE[i]);\n\t\ttp.first=TR(tp.first);\n\t\ttp.second=i;\n\t\task[BK(LE[i])].push_back(tp);\n\t}\n\tfor(int i=1;BL(i)<=n;++i)\n\t{\n\t\tif(ask[i].empty())continue;\n\t\tsort(ask[i].begin(),ask[i].end());\n\t\tsolve(i);\n\t}\n\tfor(int i=1;i<=m;++i)\n\t\tcout<<ans[i]<<'\\n';\n\treturn 0;\n}\n```\n\u4e3a\u4ec0\u4e48\u4f1a\u6709\u5b66\u5f1f\u641e\u51fak-d\u6811\u8fd9\u79cd\u795e\u4ed9\u505a\u6cd5\uff1f\uff1f\uff1f\uff1f\n\n\u5f3a\u7684\u79bb\u8c31\uff0ci\u4e86i\u4e86\u3002",
        "postTime": 1589390044,
        "uid": 56184,
        "name": "_\u8679_",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6349 \u3010[PA2011]Kangaroos\u3011"
    },
    {
        "content": "\u5148\u8003\u8651\u5bf9\u9898\u76ee\u8fdb\u884c\u8f6c\u5316\uff0c\u6211\u4eec\u79f0\u4e24\u4e2a\u533a\u95f4\u6709\u4ea4\u96c6\u4e3a\u8fd9\u4e24\u4e2a\u533a\u95f4\u80fd\u5339\u914d\uff0c\u6bcf\u4e2a\u8be2\u95ee\u5c31\u662f\u5728\u5e8f\u5217\u4e2d\u6700\u957f\u80fd\u8fde\u7eed\u5339\u914d\u7684\u957f\u5ea6\u3002\n\n\u5bf9\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u533a\u95f4$[l,r]$\u548c\u8be2\u95ee\u7684\u4e00\u4e2a\u533a\u95f4$[L,R]$\uff0c\u82e5\u6ee1\u8db3$L \\leqslant r$\u4e14$l \\leqslant R$\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u533a\u95f4\u662f\u80fd\u5339\u914d\u7684\u3002\n\n\u53ef\u4ee5\u5c06\u4e00\u4e2a\u533a\u95f4\u7528\u70b9\u6765\u8868\u793a\uff0c\u7136\u540e\u7528$K-D\\ Tree$\u6765\u7ef4\u62a4\u6240\u6709\u7684\u8be2\u95ee\u533a\u95f4\uff0c\u5e8f\u5217\u533a\u95f4\u6309\u987a\u5e8f\u4e00\u4e2a\u4e2a\u53bb\u66f4\u65b0\u6bcf\u4e2a\u8be2\u95ee\u7684\u5339\u914d\u4fe1\u606f\u5373\u53ef\u3002\n\n\u5bf9$K-D\\ Tree$\u4e2d\u7684\u7ef4\u62a4\u4e00\u4e2a\u77e9\u5f62\u6765\u8003\u8651\uff0c\u6bd4\u5982\u4e0b\u56fe\u7684\u84dd\u8272\u77e9\u5f62\u4e3a\u8fd9\u4e2a\u77e9\u5f62\u3002\n\n\u5f53\u4e00\u4e2a\u70b9\u843d\u5728\u7ea2\u8272\u77e9\u5f62\u65f6\uff0c\u90a3\u4e48\u8be5\u70b9\u548c\u77e9\u5f62\u5185\u7684\u6240\u6709\u70b9\u90fd\u80fd\u5339\u914d\uff0c\u5bf9\u8be5\u77e9\u5f62\u6253\u4e0a\u52a0\u6cd5\u6807\u8bb0\uff0c\u4f7f\u77e9\u5f62\u5185\u6240\u6709\u70b9\u7684\u5f53\u524d\u5339\u914d\u6570\u52a0\u4e00\u3002\n\n\u5f53\u4e00\u4e2a\u70b9\u843d\u5728\u9ec4\u8272\u77e9\u5f62\u65f6\uff0c\u90a3\u4e48\u8be5\u70b9\u548c\u77e9\u5f62\u5185\u7684\u6240\u6709\u70b9\u90fd\u4e0d\u80fd\u5339\u914d\uff0c\u5bf9\u8be5\u77e9\u5f62\u6253\u4e0a\u6e05\u96f6\u6807\u8bb0\uff0c\u4f7f\u77e9\u5f62\u5185\u6240\u6709\u70b9\u7684\u5f53\u524d\u5339\u914d\u6570\u6e05\u96f6\u3002\n\n![](https://s1.ax1x.com/2020/04/12/GqtQ0K.png)\n\n\u540c\u65f6\u8bb0\u5f55\u4e00\u4e2a\u70b9\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u7684\u5386\u53f2\u6700\u5927\u5339\u914d\u6570\uff0c\u5176\u5373\u4e3a\u6700\u7ec8\u4e00\u4e2a\u70b9\u6240\u5bf9\u5e94\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e00\u4e2a\u77e9\u5f62\u6e05\u7a7a\u540e\uff0c\u8fd8\u4f1a\u8fdb\u884c\u4e00\u7cfb\u5217\u5bf9\u5176\u5339\u914d\u6570\u589e\u52a0\u7684\u64cd\u4f5c\uff0c\u4f46\u6b64\u65f6\u6253\u4e0a\u52a0\u6cd5\u6807\u8bb0\u662f\u9519\u8bef\u7684\uff0c\u6240\u4ee5\u7ed9\u5b83\u6253\u4e0a\u4e00\u4e2a\u8d4b\u503c\u6807\u8bb0\uff0c\u6253\u6807\u8bb0\u65f6\u589e\u52a0\u8d4b\u503c\u6807\u8bb0\u5373\u53ef\uff0c\u540c\u65f6\u8bb0\u5f55\u4e0b\u8fd9\u9636\u6bb5\u8d4b\u503c\u6807\u8bb0\u7684\u5386\u53f2\u6700\u5927\u503c\uff0c\u5e76\u7528\u5176\u53bb\u66f4\u65b0\u8be5\u70b9\u7684\u5386\u53f2\u6700\u5927\u5339\u914d\u6570\u3002\n\n\u6807\u8bb0\u6bd4\u8f83\u591a\uff0c\u6709\u5f88\u591a\u7ec6\u8282\uff0c\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u5427\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 400010\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,m,root,tot,type;\nint cov[maxn],his[maxn],add[maxn],tag[maxn];\nint ans[maxn],ma[maxn],cnt[maxn];\nstruct node\n{\n    int l,r;\n}p[maxn];\nstruct KD_tree\n{\n    int d[2],mi[2],ma[2],ls,rs,id;\n}t[maxn],dat[maxn];\nbool cmp(const KD_tree &a,const KD_tree &b)\n{\n    return a.d[type]<b.d[type];\n}\nvoid pushup(int x)\n{\n    int ls=t[x].ls,rs=t[x].rs;\n    for(int i=0;i<=1;++i)\n    {\n        t[x].ma[i]=t[x].mi[i]=t[x].d[i];\n        if(ls)\n        {\n            t[x].ma[i]=max(t[x].ma[i],t[ls].ma[i]);\n            t[x].mi[i]=min(t[x].mi[i],t[ls].mi[i]);\n        }\n        if(rs)\n        {\n            t[x].ma[i]=max(t[x].ma[i],t[rs].ma[i]);\n            t[x].mi[i]=min(t[x].mi[i],t[rs].mi[i]);\n        }\n    }\n}\nvoid update(int x,int v)\n{\n    cnt[x]+=v,ma[x]=max(ma[x],cnt[x]);\n}\nvoid pushadd(int x,int v)\n{\n    update(x,v);\n    if(cov[x]) tag[x]+=v,his[x]=max(his[x],tag[x]);\n    else add[x]+=v;\n}\nvoid pushcov(int x)\n{\n    if(!cov[x]) cov[x]=1,his[x]=0;\n    cnt[x]=tag[x]=0;\n}\nvoid pushtag(int x,int v1,int v2)\n{\n    cov[x]=1,his[x]=max(his[x],v2);\n    cnt[x]=tag[x]=v1,ma[x]=max(ma[x],his[x]);\n}\nvoid pushdown(int x)\n{\n    int ls=t[x].ls,rs=t[x].rs;\n    if(add[x])\n    {\n        pushadd(ls,add[x]),pushadd(rs,add[x]);\n        add[x]=0;\n    }\n    if(cov[x])\n    {\n        pushtag(ls,tag[x],his[x]),pushtag(rs,tag[x],his[x]);\n        cov[x]=tag[x]=0;\n    }\n}\nvoid build(int l,int r,int k,int &x)\n{\n    x=++tot,type=k;\n    int mid=(l+r)>>1;\n    nth_element(dat+l+1,dat+mid+1,dat+r+1,cmp);\n    t[x]=dat[mid];\n    if(l<mid) build(l,mid-1,k^1,t[x].ls);\n    if(r>mid) build(mid+1,r,k^1,t[x].rs);\n    pushup(x);\n}\nbool in(KD_tree tr,int l,int r)\n{\n    return tr.ma[0]<=r&&l<=tr.mi[1];\n}\nbool out(KD_tree tr,int l,int r)\n{\n    return tr.mi[0]>r||l>tr.ma[1];\n}\nvoid modify(int x,int l,int r)\n{\n    int ls=t[x].ls,rs=t[x].rs;\n    if(in(t[x],l,r))\n    {\n        pushadd(x,1);\n        return;\n    }\n    if(out(t[x],l,r))\n    {\n        pushcov(x);\n        return;\n    }\n    pushdown(x);\n    if(t[x].d[0]<=r&&l<=t[x].d[1]) update(x,1);\n    else cnt[x]=0;\n    if(ls) modify(ls,l,r);\n    if(rs) modify(rs,l,r);\n}\nvoid dfs(int x)\n{\n    int ls=t[x].ls,rs=t[x].rs;\n    pushdown(x),ans[t[x].id]=ma[x];\n    if(ls) dfs(ls);\n    if(rs) dfs(rs);\n}\nint main()\n{\n    read(n),read(m);\n    for(int i=1;i<=n;++i) read(p[i].l),read(p[i].r);\n    for(int i=1;i<=m;++i)\n        read(dat[i].d[0]),read(dat[i].d[1]),dat[i].id=i;\n    build(1,m,0,root);\n    for(int i=1;i<=n;++i) modify(root,p[i].l,p[i].r);\n    dfs(root);\n    for(int i=1;i<=m;++i) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1586625827,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6349 \u3010[PA2011]Kangaroos\u3011"
    }
]