[
    {
        "content": "\u672c\u9898\u662f\u4e2a\u6570\u5b66\u9898\uff0c\u60c5\u51b5\u603b\u6570\u4e3a\u91cd\u6392\u5217\u6570\uff0c\u5373$\\dfrac{(a+b)!}{a!b!}$  \n\u7531\u9898\u610f\u53ef\u5f97\uff0c\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u603b\u4f1a\u7528\u5b8c\u6240\u6709\u9ca4\u9c7c\uff0c\u5219\u7ea2\u9ca4\u9c7c\u7684\u7f5a\u65f6\u5fc5\u5b9a\u4f1a\u5168\u90e8\u7d2f\u52a0\uff0c\u6700\u540e\u4e5f\u5fc5\u5b9a\u4e3a1\u6b21AC\uff0c\u5219\u7f5a\u65f6\u603b\u503c\u4e3a$5\\dfrac{(a+b)!}{a!b!}(2a+b+1)$  \n\u6211\u4eec\u6765\u8003\u8651\u524d\u9762\u7684\u7eff\u9ca4\u9c7c\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u7eff\u9ca4\u9c7c\u8bb0\u5f55\u7684\u65f6\u95f4\u4e4b\u4e0e\u5b83\u6240\u5904\u7684\u4f4d\u7f6e\u6709\u5173\uff0c\u8bc1\u660e\u53ef\u5f97\uff0c\u7eff\u9ca4\u9c7c\u5728\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6b21\u6570\u662f\u76f8\u540c\u7684\u3002\u6b21\u6570\u4e3a$\\dfrac{b}{a+b}\\dfrac{(a+b)!}{a!b!}$\u6b21\u3002  \n\u5219\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u9ad8\u65af\u516c\u5f0f\u6c42\u51fa\u7b49\u5dee\u6570\u5217\uff0c\u518d\u52a0\u4e0a\u4e4b\u524d\u7b97\u51fa\u7684\u7f5a\u65f6\uff0c\u5373\u53ef\u6c42\u51fa\u6700\u7ec8\u7f5a\u65f6\u603b\u503c\u3002$5\\dfrac{b}{a+b}\\dfrac{(a+b)!}{a!b!}\\dfrac{(1+a+b)(a+b)}{2}+5\\dfrac{(a+b)!}{a!b!}(2a+b+1)$  \n\u9664\u4ee5\u60c5\u51b5\u6570\uff0c\u5e76\u7ea6\u5206\u5f97\u671f\u671b\u503c\u4e3a$5(\\dfrac{(1+a+b)b}{2}+2a+b+1)$  \n\u53ef\u5f97\u5206\u6bcd\u53ea\u67092\u8fd9\u4e00\u79cd\u60c5\u51b5\uff0c\u9884\u5904\u74062\u7684\u53d6\u6a21\u60c5\u51b5\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<iomanip>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nlong long ans,a,b;\nconst long long p=499122427;\nint main()\n{\n    scanf(\"%lld%lld\",&a,&b);\n    ans=(5*((4*(a%998244853))%998244853+(2*(b%998244853))%998244853+2+(b%998244853)*(1+(a%998244853)+(b%998244853))))%998244853;\n    if(ans%2==0)\n    {\n        printf(\"%lld\",ans/2);\n    }\n    else printf(\"%lld\",(ans*p)%998244853);\n}\n```",
        "postTime": 1531962942,
        "uid": 78488,
        "name": "b2019dy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4773 \u3010\u7ea2\u9ca4\u9c7c\u4e0e\u7eff\u9ca4\u9c7c\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u53ea\u6c42\u51fa\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u603b\u548c\u3002\n\n\u8fd9\u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u628a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u56fa\u5b9a\u4e0b\u6765\u4e86\uff0c\u540e\u9762(m+n\u22121)(m+n\u22121)\u4e2a\u4f4d\u7f6e\u4e0a\u6709(m\u22121)(m\u22121)\u3002\u7ec4\u5408\u6570\u7b97\u4e00\u4e0b\u65b9\u6848\u6570\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7b54\u6848\u7684\u8d21\u732e\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u90fd\u4f1a\u6709Cm\u22121m+n\u22121Cm+n\u22121m\u22121\u4e2aACAC\uff0c\u6240\u4ee5\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u5355\u6b21\u8d21\u732e\u7684\u548c\u518d\u4e58\u4e0a\u51fa\u73b0\u6b21\u6570\u5c31\u597d\u4e86\u3002\nso\n\nans=5\u2217(2\u2217a+b+1)+5\u2217C b\u22121 b+a\u22121\u2217(a+b+1)\u2217(a+b)/2/C b a+b\n\n\u5316\u7b80\u5c31\u53ef\u5f97\u5230\nans=5\u2217(2\u2217a+b+1)+5\u2217b\u2217(a+b+1)\n\n\u6570\u636e\u662f\u6bd4\u8f83\u5927\u4f46\u7528\u4e0d\u5230\u9ad8\u7cbe\uff0c\u5f00unsigned long long\n\u6bcf\u7b97\u4e00\u6b21\u90fd\u53d6\u6a21\u5c31\u884c\u4e86\n\u3002\u3002\n\n _\u53c2\u8003\u6bd4\u8d5b\u7684\u8bb2\u89e3_ \n\n\n```\n#include<bits/stdc++.h>\nunsigned long long ans,m,n,mod=998244853,ss=499122427;\nint main(){\n    scanf(\"%lld%lld\",&m,&n);\n    ans=(5*((4*(m%mod))%mod+(2*(n%mod))%mod+(n%mod)*(1+(m+n)%mod))+10)%mod;\n    ans%2==0?printf(\"%lld\",ans/2):printf(\"%lld\",(ans*ss)%mod);\n}\n```\n",
        "postTime": 1532435603,
        "uid": 47269,
        "name": "yzx72424",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4773 \u3010\u7ea2\u9ca4\u9c7c\u4e0e\u7eff\u9ca4\u9c7c\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u601d\u8def\u3002\n\u8bbered\u8868\u793a\u7ea2\u9ca4\u9c7c\u6761\u6570\uff0cgreen\u8868\u793a\u7eff\u9ca4\u9c7c\u6761\u6570\u3002\n\u8bd5\u60f3\uff0c\u5982\u679c\u53ea\u6709\u7eff\u9ca4\u9c7c\uff0c\u90a3\u4e48\u603b\u65f6\u95f4\u662f\u4e0d\u662f\u5c31\u662f\n\n5 + 10 + 15 + 20 + ... + 5 * (green + 1)\n\n\u73b0\u5728\uff0c\u6211\u4eec\u628a\u7ea2\u9ca4\u9c7c\u63d2\u8fdb\u6765\uff0c\u5728\u770b\u770b\uff0c\u5047\u8bbe\u5c06\u4e00\u6761\u7ea2\u9ca4\u9c7c\u63d2\u5728\u7b2c\u4e8c\u6761\u7eff\u9ca4\u9c7c\u540e\u9762\uff0c\u90a3\u4e48\u603b\u65f6\u95f4\u5c31\u662f\n\n5 + 10 + 5 + 20 + 25 + ... + 5 * (green + red + 1)\n\n\u53d1\u73b0\uff0c\u7ea2\u9ca4\u9c7c\u7684\u51fa\u73b0\u53ea\u4f1a\u8ba9\u65f6\u95f4\u51cf\u5c11\uff0c\u800c\u4e14\u53ea\u5f71\u54cd\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a(green + red + 1)\u7684\u7b49\u5dee\u6570\u5217\uff0c\u5dee\u503c\u4e3a5\u3002\n\n5 + 10 + 15 +...+ 5 * (red + green + 1)\n\n\u7136\u540e\u6211\u4eec\u6709red\u6b21\u673a\u4f1a\u5728\u7b2c1~(red+green)\u4e2a\u6570\u4e2d\u9009\u4e00\u4e2a\u6570\u53d8\u62105\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7b2c\u4e00\u4e2a\u6570\u53d8\u62105\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\uff0c\u7b2c\u4e8c\u4e2a\u6570\u53d8\u62105\u7b54\u6848\u51cf\u5c115\uff0c\u7b2c\u4e09\u4e2a\u6570\u53d8\u62105\u7b54\u6848\u51cf\u5c1110\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u7b2c1~(red+green)\u4e2a\u6570\u6bcf\u4e2a\u6570\u90fd\u6709red/(red+green)\u7684\u6982\u7387\u53d8\u62105\uff0c\u90a3\u4e48\u603b\u5171\u51cf\u5c11\u7684\u503c\u5c31\u662f0+5+...+5*(red+green-1) * (red/(red+green)) \u3002\n\n\u7528\u4e00\u5f00\u59cb\u7684\u7b49\u5dee\u6570\u5217\u51cf\u53bb\u8fd9\u4e2a\u503c\u5c31\u884c\u4e86\u3002\n\n\u5982\u679c\u662f\u5206\u6570\u8981\u7528\u5feb\u901f\u5e42\u5f97\u5230\u7ed3\u679c\u3002\n\n\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u8981\u9ad8\u7cbe\u3002\n\n\u53c2\u8003\u4ee3\u7801(\u6ca1\u7528\u9ad8\u7cbe\uff0c\u6240\u4ee5\u53ea\u670970\u5206)\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <list>\n#define rep(i,m,n) for(int i=m;i<=n;++i)\n#define dop(i,m,n) for(int i=m;i>=n;--i)\n#define ll long long\n#define INF 2147483647\nusing namespace std;\ninline ll read(){\n    ll s = 0, w = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9'){if(ch == '-')w = -1;ch = getchar();}\n    while(ch >= '0' && ch <= '9') s = s * 10 + ch - '0',ch = getchar();\n    return s * w;\n}\nconst int MOD = 998244853;\nll a, b, c;\nll sum, sum2;\nll fast_pow(ll x, int k){\n    ll ans = 1, tmp = x;\n    while(k){\n      if(k & 1) ans = ans * tmp % MOD;\n      tmp = tmp * tmp % MOD;\n      k >>= 1;\n    }\n    return ans;\n}\nll getAns(ll A, ll B){\n    return (ll)(A * fast_pow(B, MOD - 2) % MOD);\n}\nll gcd(ll a, ll b){\n    return !b ? a : gcd(b, a%b);\n}\nint main(){\n    a = read(); b = read();\n    sum = (a + b + 2) * 5 * (a + b + 1) / 2;\n    sum2 = (a + b) * 5 * (a + b - 1) / 2;\n    c = a + b;\n    (sum *= c) -= sum2 * a;\n    ll GCD = gcd(sum, c);\n    sum /= GCD; c /= GCD;\n    if(sum % c == 0) printf(\"%lld\\n\", sum / c);\n    else printf(\"%lld\\n\", getAns(sum, c));\n    return 0;\n}\n\n```",
        "postTime": 1531963024,
        "uid": 61834,
        "name": "Huami360",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4773 \u3010\u7ea2\u9ca4\u9c7c\u4e0e\u7eff\u9ca4\u9c7c\u3011"
    }
]