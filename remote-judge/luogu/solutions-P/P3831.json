[
    {
        "content": "\u4eba\u8bdd\u9898\u610f\uff1a\u4e00\u4e2a\u7f51\u683c\u56fe\uff0c\u6a2a\u7ad6\u8d70\u4e00\u6761\u8fb9\u7528\u65f6 2\uff0c\u53ea\u80fd\u5728\u7279\u5b9a\u70b9\u8f6c\u5411\uff0c\u6a2a\u7ad6\u8f6c\u5411\u7528\u65f6 1\uff0c\u95ee\u4e24\u70b9\u6700\u77ed\u7528\u65f6...\n\n\u5373\u7ecf\u5178\u7684\u5206\u5c42\u56fe\u6700\u77ed\u8def\u88f8\u9898\uff0c\u5728\u6b64\u7b80\u8981\u4ecb\u7ecd\uff1a\n\n\u6211\u4eec\u53ef\u80fd\u9047\u5230\u8fd9\u6837\u7684\u56fe\u8bba\u6a21\u578b\uff1a\u5728\u4e00\u4e2a\u6b63\u5e38\u7684\u56fe\u4e0a\u53ef\u4ee5\u8fdb\u884c $k$ \u6b21**\u51b3\u7b56**\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u51b3\u7b56\uff0c\u4e0d\u5f71\u54cd\u56fe\u7684\u7ed3\u6784\uff0c\u53ea\u5f71\u54cd\u76ee\u524d\u7684**\u72b6\u6001**\u6216**\u4ee3\u4ef7**\u3002\u540c\u65f6\u8fd9\u4e2a\u56fe\u8bba\u6a21\u578b\u548c\u7ecf\u5178\u7684\u6700\u77ed\u8def\u6709\u5173\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8fd0\u7528\u5206\u5c42\u56fe\u6700\u77ed\u8def\u3002\n\n\u6b64\u9898\u4e3a\u6734\u7d20\u7684\u88f8\u9898\uff0c\u5728\u6b64\u4ec5\u4ecb\u7ecd\u4e00\u79cd\uff08\u65f6\u7a7a\u975e\u6700\u4f18\uff09\u7684\u6613\u4e8e\u7406\u89e3\u7684\u5b9e\u73b0\u65b9\u6cd5\uff1a\uff08\u6211\u61d2\u5f97\u518d\u5199\u4e00\u904d\u4e86\n\n\n\u6b64\u9898\u7684**\u51b3\u7b56**\u4e3a**\u8f6c\u5411**\uff0c\u7531\u4e8e\u53ea\u5b58\u5728\u6a2a\u5411\u548c\u7eb5\u5411\u4e24\u4e2a\u653e\u5b66\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e24\u4e2a\u65b9\u5411\u5206\u522b\u5efa\u7acb\u4e00\u5c42\u3002\u5373\u4e00\u5c42\u53ea\u8fde\u539f\u56fe\u6a2a\u5411\u8fb9\uff0c\u4e00\u5c42\u53ea\u8fde\u7eb5\u5411\u8fb9\u3002\n\n\u5bf9\u4e8e**\u8f6c\u5411**\u8fd9\u4e2a**\u51b3\u7b56**\uff0c\u5c06**\u51b3\u7b56**\u524d\u7684\u72b6\u6001\u548c**\u51b3\u7b56**\u540e\u7684\u72b6\u6001\u95f4\u8fde\u63a5\u4e00\u6761\u6743\u503c\u4e3a**\u51b3\u7b56\u4ee3\u4ef7**\u7684\u8fb9\uff0c\u8868\u793a\u4ed8\u51fa\u8be5\u4ee3\u4ef7\u8f6c\u6362\u4e86\u72b6\u6001\u3002\n\n\u5728\u672c\u9898\u4e2d\uff0c\u5373\u4e0a\u4e0b\u4e24\u5c42\u5bf9\u5e94\u70b9\u8fde\u63a5\u4e00\u6761\u6743\u503c\u4e3a1\u7684\u8fb9\uff0c\u5c42\u5185\u8fb9\u6743\u5747\u4e3a2.\n\n\u7136\u540e\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <iomanip>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define N 200010\n#define M 800010\n#define inf 210000000\n#define ll long long\nusing namespace std;\ninline int read() \n{ \n    int x=0,f=1;char ch=getchar(); \n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();} \n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} \n    return x*f; \n}\nstruct zgz\n{\n    int next,to,val;\n}edge[M];\nint cnt=1,head[M];\nvoid add(int from,int to,int val)\n{\n    edge[cnt].to=to;\n    edge[cnt].val=val;\n    edge[cnt].next=head[from];\n    head[from]=cnt++;\n}\nvoid ins(int from,int to,int val)\n{add(from,to,val);add(to,from,val);}\nstruct point\n{\n    int x,y,id;\n}a[N];\nbool cmp1(point a,point b)\n{\n    if(a.x==b.x)return a.y<b.y;\n    return a.x<b.x;\n}\nbool cmp2(point a,point b)\n{\n    if(a.y==b.y)return a.x<b.x;\n    return a.y<b.y;\n}\nint n,m;\nqueue<int> q;\nint d[N],S,T;\nbool vis[N];\nvoid spfa()\n{\n    for(int i=1;i<=2*m+4;i++)d[i]=inf;\n    d[S]=0,vis[S]=1;q.push(S);\n    while(!q.empty())\n    {\n        int x=q.front();q.pop();vis[x]=0;\n        for(int i=head[x];i;i=edge[i].next)\n        {\n            int to=edge[i].to,val=edge[i].val;\n            if(d[to]>d[x]+val)\n            {\n                d[to]=d[x]+val;\n                if(!vis[to])\n                {\n                    vis[to]=1;\n                    q.push(to);\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    n=read(),m=read();S=m+1,T=m+2;\n    for(int i=1;i<=m+2;i++)\n    {\n        a[i].x=read(),a[i].y=read();\n        a[i].id=i;\n    }\n    sort(a+1,a+m+3,cmp1);\n    for(int i=1;i<m+2;i++)\n    if(a[i].x==a[i+1].x)ins(a[i].id,a[i+1].id,2*(a[i+1].y-a[i].y));\n    sort(a+1,a+m+3,cmp2);\n    for(int i=1;i<m+2;i++)\n    if(a[i].y==a[i+1].y)ins(a[i].id+m+2,a[i+1].id+m+2,2*(a[i+1].x-a[i].x));\n    for(int i=1;i<=m;i++)\n    ins(i,i+m+2,1);\n    ins(m+1,m*2+3,0);ins(m+2,m*2+4,0);\n    spfa();\n    if(d[T]==inf)\n    {\n        puts(\"-1\");\n        return 0;\n    }\n    printf(\"%d\\n\",d[T]);\n}\n```\n\u8fdb\u4e00\u6b65\u7684\u76f8\u5173\u9898\u76ee\u53ef\u4ee5\u5728\u4e2a\u4eba\u535a\u5ba2\u627e\u5230\uff1a\n\nhttp://www.zgz233.xyz/2017/06/14/bzoj-2834-%E5%9B%9E%E5%AE%B6%E7%9A%84%E8%B7%AF/\n",
        "postTime": 1505825360,
        "uid": 30459,
        "name": "\u6d88\u5931\u7684\u6d77\u5cb8\u7ebf",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a $n \\times n\\ (1 \\leq n \\leq 2 \\times 10^4)$ \u7684\u7f51\u683c\u56fe\uff0c\u8d70\u4e00\u6761\u8fb9\u7528\u65f6 $2$\uff0c\u53ea\u80fd\u5728\u7279\u5b9a\u7684 $m\\ (1 \\leq m \\leq 10^5)$ \u4e2a\u70b9\u8f6c\u5411\uff0c\u8f6c\u5411\u7528\u65f6 $1$\uff0c\u6c42\u4ece $(x_1,x_2)$ \u5230 $(y_1, y_2)$ \u7684\u6700\u77ed\u7528\u65f6\u3002\n\n## Solution\n\n\u8003\u8651 **\u5206\u5c42\u56fe\u6700\u77ed\u8def** \u3002\n\n\u5bf9\u4e8e\u6837\u4f8b\uff1a\n\n### Sample Input\n\n```\n6 9\n2 1\n2 5\n3 2\n4 4\n5 2\n5 6\n6 1\n6 3\n6 4\n1 1 4 6\n```\n\n### Sample Output\n\n```\n27\n```\n\n\u9898\u76ee\u6240\u7ed9\u7684\u56fe\uff1a\n\n![ENyre1.png](https://s2.ax1x.com/2019/05/03/ENyre1.png)\n\n\u6211\u4eec\u6309\u7167\u8f93\u5165\u7684\u987a\u5e8f\u7ed9\u8fd9\u4e9b\u70b9\u6807\u4e0a\u53f7\uff08\u5305\u62ec\u8d77\u70b9\u548c\u7ec8\u70b9\uff09\uff0c\u5171 $m + 2$ \u4e2a\u70b9\u3002\n\n![ENyBLR.png](https://s2.ax1x.com/2019/05/03/ENyBLR.png)\n\n\u8bbe $n = m + 2$\uff0c\u8868\u793a\u70b9\u7684\u6570\u91cf\u3002\u8d77\u70b9\u4e3a $10$ \u53f7\u8282\u70b9\uff0c\u7ec8\u70b9\u4e3a $11$ \u53f7\u8282\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u56fe\u5206\u6210\u4e24\u5c42\uff0c\u5176\u4e2d\u7b2c $1$ \u5c42\u4e3a\u6a2a\u5411\u8d70\uff0c\u7b2c $2$ \u5c42\u4e3a\u7eb5\u5411\u8d70\u3002\n\n\u5148\u8003\u8651\u6a2a\u5411\u8d70\u3002\u5c06\u6240\u6709\u70b9\u4ee5\u6a2a\u5750\u6807\u4e3a\u7b2c $1$ \u5173\u952e\u5b57\uff0c\u7eb5\u5750\u6807\u4e3a\u7b2c $2$ \u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u6392\u5b8c\u5e8f\u540e\uff0c\u5224\u65ad\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\u662f\u5426\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\uff0c\u5219\u5728\u5b83\u4eec\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a **\u4e24\u70b9\u7eb5\u5750\u6807\u4e4b\u5dee\u7684\u4e24\u500d** \u7684\u53cc\u5411\u8fb9\u3002\u82e5\u53ef\u4ee5\u8fde\u8fb9 $u \\leftrightarrow  v$\uff0c\u5219\u8bf4\u660e\u4ece\u70b9 $u$ \u53ef\u4ee5\u6a2a\u5411\u8d70\u5230\u70b9 $v$\uff0c\u4ea6\u53ef\u4ee5\u4ece\u70b9 $v$ \u6a2a\u5411\u8d70\u5230\u70b9 $u$ \u3002\n\n\u56fe\u4e2d\u53ef\u4ee5\u8fde\u7684\u8fb9\u6709\uff1a\n\n$1 \\leftrightarrow 2$\n\n$4 \\leftrightarrow 11$\n\n$5 \\leftrightarrow 6$\n\n$7 \\leftrightarrow 8$\n\n$8 \\leftrightarrow 9$\n\n\u8fb9\u6743\u5206\u522b\u4e3a $8,4,8,4,2$ \u3002\n\n\u7eb5\u5411\u8d70\u540c\u7406\u3002\u56e0\u4e3a\u7eb5\u5411\u8d70\u5728\u7b2c $2$ \u5c42\uff0c\u8282\u70b9\u7f16\u53f7\u4e0d\u80fd\u4e0e\u7b2c $1$ \u5c42\u76f8\u540c\uff0c\u6240\u4ee5\u7ed9\u7b2c $2$ \u5c42\u7f16\u53f7\u5168\u90e8 $+n$ \u3002\u7136\u540e\u5c06\u6240\u6709\u70b9\u4ee5\u7eb5\u5750\u6807\u4e3a\u7b2c $1$ \u5173\u952e\u5b57\uff0c\u6a2a\u5750\u6807\u4e3a\u7b2c $2$ \u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u6bd4\u8f83\u76f8\u90bb\u4e24\u70b9\u7eb5\u5750\u6807\uff0c\u8fde\u8fb9\u3002\u82e5\u53ef\u4ee5\u8fde\u8fb9 $u \\leftrightarrow  v$\uff0c\u5219\u8bf4\u660e\u4ece\u70b9 $u$ \u53ef\u4ee5\u7eb5\u5411\u8d70\u5230\u70b9 $v$\uff0c\u4e5f\u53ef\u4ee5\u4ece\u70b9 $v$ \u7eb5\u5411\u8d70\u5230\u70b9 $u$ \u3002\n\n\u56fe\u4e2d\u53ef\u4ee5\u8fde\u7684\u8fb9\u6709\uff1a\n\n$10+11 \\leftrightarrow 1+11$\n\n$1+11 \\leftrightarrow 7+11$\n\n$3+11 \\leftrightarrow 5+11$\n\n$4+11 \\leftrightarrow 9+11$\n\n$11+11 \\leftrightarrow 6+11$\n\n\u8fb9\u6743\u5206\u522b\u4e3a $2,8,4,4,2$ \u3002\n\n\u63a5\u4e0b\u6765\u5728\u4e24\u5c42 **\u8868\u793a\u540c\u4e2a\u8282\u70b9\u7684\u70b9** \u4e4b\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a $1$ \u7684\u53cc\u5411\u8fb9\uff0c\u8868\u793a\u53ef\u4ee5\u5728\u8be5\u70b9\u6539\u53d8\u65b9\u5411\uff0c\u7528\u65f6\u4e3a $1$ \u3002\n\n\u6ce8\u610f\u8d77\u70b9\u548c\u7ec8\u70b9\u6539\u53d8\u65b9\u5411\u4e0d\u9700\u8981 $1$ \u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u5728 \u8d77\u70b9 \u4e0e \u8d77\u70b9$ + n$ \u4e4b\u95f4\uff0c\u7ec8\u70b9 \u4e0e \u7ec8\u70b9$ + n$ \u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u53cc\u5411\u8fb9\u3002\n\n\u6700\u540e\u8dd1\u4e00\u904d\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5373\u662f\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\log m)$\u3002\n\n\u5b8c\u6574\u7684\u56fe\uff1a\n\n![EN41OS.png](https://s2.ax1x.com/2019/05/03/EN41OS.png)\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\ntemplate <class T>\ninline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    bool f = 0;\n    for (; !isdigit(c); c = getchar()) f ^= c == '-';\n    for (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x = f ? -x : x;\n}\n\ntemplate <class T>\ninline void write(T x) {\n    if (x < 0) {\n        putchar('-');\n        x = -x;\n    }\n    T y = 1;\n    int len = 1;\n    for (; y <= x / 10; y *= 10) ++len;\n    for (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n}\n\nconst int MAXN = 3e5, MAXM = 3e6;\nint n, m, s, t, tot, head[MAXN + 5], dis[MAXN + 5];\nbool vis[MAXN + 5];\nstruct Station {\n    int x, y, id;\n} a[MAXN + 5];\nstruct Edge {\n    int next, to, dis;\n} e[MAXM + 5];\nstruct Node {\n    int val, id;\n    inline friend bool operator<(Node x, Node y) {\n        return x.val > y.val;\n    }\n};\n\ninline void addEdge(int u, int v, int w) {\n    e[++tot] = (Edge) { head[u], v, w };\n    head[u] = tot;\n}\n\ninline bool cmpx(Station a, Station b) {//\u6309\u6a2a\u5750\u6807\u6392\u5e8f \n    return a.x == b.x ? a.y < b.y : a.x < b.x;\n}\n\ninline bool cmpy(Station a, Station b) {//\u6309\u7eb5\u5750\u6807\u6392\u5e8f\n    return a.y == b.y ? a.x < b.x : a.y < b.y;\n}\n\ninline void dijkstra(int s) {//\u5806\u4f18\u5316 dijkstra \n    priority_queue<Node> q;\n    memset(dis, 0x3f, sizeof (dis));\n    dis[s] = 0;\n    q.push((Node) { 0, s });\n    for (; !q.empty(); ) {\n        int u = q.top().id;\n        q.pop();\n        if (vis[u]) continue;\n        vis[u] = 1;\n        for (int v, w, i = head[u]; v = e[i].to, w = e[i].dis, i; i = e[i].next)\n            if (dis[v] > dis[u] + w) {\n                dis[v] = dis[u] + w;\n                if (!vis[v]) q.push((Node) { dis[v], v });\n            }\n    }\n}\n\nint main() {\n    read(n), read(m);\n    n = m + 2;//\u70b9\u7684\u603b\u6570 \n    s = n - 1, t = n;//\u8d77\u70b9 \u548c \u7ec8\u70b9 \n    for (int i = 1; i <= n; ++i) {\n        read(a[i].x), read(a[i].y);\n        a[i].id = i;//\u70b9\u7684\u7f16\u53f7 \n    }\n    sort(a + 1, a + n + 1, cmpx);\n    for (int i = 1; i < n; ++i)\n        if (a[i].x == a[i + 1].x) {\n            addEdge(a[i].id, a[i + 1].id, (a[i + 1].y - a[i].y) << 1);\n            addEdge(a[i + 1].id, a[i].id, (a[i + 1].y - a[i].y) << 1);\n        } //\u7b2c\u4e00\u5c42\uff1a\u6a2a\u5411\u8fb9 \n    sort(a + 1, a + n + 1, cmpy);\n    for (int i = 1; i < n; ++i)\n        if (a[i].y == a[i + 1].y) {\n            addEdge(a[i].id + n, a[i + 1].id + n, (a[i + 1].x - a[i].x) << 1);\n            addEdge(a[i + 1].id + n, a[i].id + n, (a[i + 1].x - a[i].x) << 1);\n        } //\u7b2c\u4e8c\u5c42\uff1a\u7eb5\u5411\u8fb9 \n    for (int i = 1; i <= n - 2; ++i) addEdge(i, i + n, 1), addEdge(i + n, i, 1);\n    //\u4e24\u5c42\u4e4b\u95f4\uff1a\u6539\u53d8\u65b9\u5411\u7528\u65f6 1 \n    addEdge(s, s + n, 0), addEdge(s + n, s, 0);\n    addEdge(t, t + n, 0), addEdge(t + n, t, 0);//\u8d77\u70b9\u548c\u7ec8\u70b9\u6539\u53d8\u65b9\u5411\u4e0d\u9700\u8981\u65f6\u95f4 \n    dijkstra(s);//\u6c42 s -> t \u6700\u77ed\u8def \n    write(dis[t] == 0x3f3f3f3f ? -1 : dis[t]);//\u5224\u65ad\u662f\u5426\u6709\u89e3 \n    putchar('\\n');\n    return 0;\n}\n```",
        "postTime": 1556854145,
        "uid": 32139,
        "name": "Heartlessly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "~~\u5feb\u628a\u7d2b\u7684\u96be\u5ea6\u6362\u56de\u6765~~\n\n### \u601d\u8def\uff1a\n\n\u8fd9\u9898\u7684\u5728\u6362\u4e58\u70b9\u6362\u65b9\u5411\u8981\u4e00\u5757\u94b1\uff08\u6682\u4e14\u8fd9\u4e48\u8bf4\uff09\uff0c\u800c\u6211\u4eec\u5728\u4e00\u6761\u76f4\u7684\u8fb9\u4e0a\u53ef\u4ee5\u4e00\u76f4\u5f80\u524d\u8d70\uff0c\u76f4\u5230\u78b0\u5230\u6362\u4e58\u70b9\u4e3a\u6b62\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6362\u4e58\u70b9\u6362\u65b9\u5411\u8981\u94b1\uff0c\u5f88\u6709\u5206\u5c42\u56fe\u8f6c\u79fb\u7684\u610f\u601d\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u786e\u5b9e\u53ef\u4ee5\u7528\u5206\u5c42\u56fe\u505a\u3002\n\n\u6211\u4eec\u6b64\u56fe\u4e0d\u80fd\u76f4\u63a5\u8d70\u7684\u4e24\u4e2a\u90e8\u5206\u662f\u6a2a\u548c\u7eb5\u7684\u8fb9\uff0c\u9700\u8981\u6362\u4e58\u3002\n\n\u90a3\u6211\u4eec\u5efa\u4e24\u5c42\u7684\u56fe\uff0c\u7136\u540e\u6362\u4e58\u70b9\u4f5c\u4e3a\u8f6c\u79fb\u5c42\u7684\u70b9\u8dd1\u88f8dijkstra\u5c31\u53ef\u4ee5\u4e86\u3002\n\n***\n\n### \u4f18\u5316\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6\u666e\u901a\u7684\u70b9\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u8981\u5efa\u7acb\u5b83\uff0c\u5b83\u4e0d\u80fd\u5411\u4e0b\u8f6c\u79fb\uff0c\u5230\u8fbe\u4e00\u4e2a\u666e\u901a\u70b9\u8fd8\u662f\u53ea\u80fd\u5f80\u4e0b\u4e00\u4e2a\u70b9\u8d70\uff0c\u76f4\u5230\u9047\u5230\u6362\u4e58\u70b9\u3002\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u628a\u666e\u901a\u70b9\u5168\u90e8\u4e22\u6389\uff0c\u800c\u628a\u6362\u4e58\u70b9\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u957f\u5ea6\u52a0\u4e0a\u8def\u5f84\u4e0a\u539f\u6709\u7684\u6240\u6709\u666e\u901a\u70b9\u957f\u5ea6\u5373\u53ef\u3002\n\n\u6362\u4e58\u70b9\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u6839\u636e\u6a2a\u548c\u7eb5\uff0c\u9700\u8981\u7ed9\u4ed6\u4eec\u6392\u4e2a\u5e8f\uff0c\u6309\u7167\u201c\u5728\u4e0d\u5728\u4e00\u6761\u8fb9\u4e0a\u201d\u6392\u5e8f\u5373\u53ef\u3002\n\n***\n\n### \u4ee3\u7801&\u5176\u4ed6\u4e8b\u9879\uff1a\n\n\u6211\u4eec\u9700\u8981\u7ed9\u51fa\u53d1\u70b9\u548c\u7ec8\u70b9\u5efa\u7acb\u4e00\u6761\u8f6c\u79fb\u7684\u8fb9\uff0c\u6743\u503c\u4e3a0,\u3002\u6211\u4eec\u5230\u8fbe\u4e86\u4e4b\u540e\uff0c\u5176\u5b9e\u662f\u4e0d\u9700\u8981\u6362\u4e58\u4e86\uff0c\u800c\u5728\u51fa\u53d1\u70b9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u9009\u62e9\u65b9\u5411\u3002\n\n\u5728\u540c\u5c42\u56fe\u91cc\u53ef\u4ee5\u6765\u56de\u8d70\uff0c\u8f6c\u79fb\u8fb9\u53ef\u4ee5\u591a\u6b21\u8f6c\u79fb\uff0c\u6240\u4ee5\u6211\u4eec\u5efa\u7acb\u7684\u6240\u6709\u8fb9\u90fd\u662f\u65e0\u5411\u8fb9\u3002\n\n\u5f53m\u4e3a0\u7684\u65f6\u5019\uff0c\u7279\u5224\u8f93\u51fa-1\u3002\n\n\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n```cpp\n/*\n  Author : EnderDeer\n  OnlineJudge : Luogu\n*/\n\n#include<bits/stdc++.h>\n\n#define int long long\n#define plus +m+2\n\nusing namespace std;\n\nint read(){\n   int s = 0,w = 1;\n   char ch = getchar();\n   while(ch < '0' || ch > '9'){if(ch == '-')w = -1;ch = getchar();}\n   while(ch >= '0' && ch <= '9')s = s * 10 + ch - '0',ch = getchar();\n   return s * w;\n}\n\nstruct node{\n\tint to;\n\tint nxt;\n\tint w;\n}e[1000010];\n\nstruct nodee{\n\tint x;\n\tint y;\n\tint id;\n}a[1000010];\n\nint cnt,head[1000010];\nint n,m;\nint s,t;\nint dis[1000010];\nbool bk[1000010];\n\nvoid addd(int x,int y,int w){\n\tcnt ++;\n\te[cnt].to = y;\n\te[cnt].nxt = head[x];\n\te[cnt].w = w;\n\thead[x] = cnt;\n}\n\nvoid add(int x,int y,int w){\n\taddd(x,y,w);\n\taddd(y,x,w);\n}\n\nbool cmp1(nodee x,nodee y){\n\tif(x.x == y.x)return x.y < y.y;\n\telse return x.x < y.x;\n}\n\nbool cmp2(nodee x,nodee y){\n\tif(x.y == y.y)return x.x < y.x;\n\telse return x.y < y.y;\n}\n\nvoid dijkstra(){\n\tpriority_queue <pair<int,int> > q;\n\tfor(int i = 1;i <= m * 6;i ++)dis[i] = 2147483647;\n\tdis[s] = 0;\n\tq.push(make_pair(0,s));\n\twhile(!q.empty()){\n\t\tpair <int,int> t;\n\t\tt = q.top();\n\t\tq.pop();\n\t\tint u = t.second;\n\t\tbk[u] = true;\n\t\tfor(int i = head[u];i;i = e[i].nxt){\n\t\t\tint v = e[i].to;\n\t\t\tif(bk[v])continue;\n\t\t\tif(dis[v] > dis[u] + e[i].w){\n\t\t\t\tdis[v] = dis[u] + e[i].w;\n\t\t\t\tq.push(make_pair(-dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\n\nsigned main(){\n\tcin>>n>>m;\n\tif(m == 0){puts(\"-1\");return 0;}\n\ts = m + 1;\n\tt = m + 2;\n\tfor(int i = 1;i <= m + 2;i ++)a[i].x = read(),a[i].y = read(),a[i].id = i;\n\tsort(a + 1,a + m + 3,cmp1);\n\tfor(int i = 1;i <= m + 1;i ++){\n\t\tif(a[i].x == a[i + 1].x){\n\t\t\tadd(a[i].id,a[i + 1].id,(a[i + 1].y - a[i].y) * 2);\n\t\t}\n\t}\n\tsort(a + 1,a + m + 3,cmp2);\n\tfor(int i = 1;i <= m + 1;i ++){\n\t\tif(a[i].y == a[i + 1].y){\n\t\t\tadd(a[i].id plus,a[i + 1].id plus,(a[i + 1].x - a[i].x) * 2);\n\t\t}\n\t}\n\tfor(int i = 1;i <= m;i ++)add(i,i plus,1);\n\t//\n\tadd(m + 1,m * 2 + 3,0);\n\tadd(m + 2,m * 2 + 4,0);\n\t//\n\tdijkstra();\n\tif(dis[t] == 2147483647)puts(\"-1\");\n\telse cout<<dis[t];\n\treturn 0;\n}\n```",
        "postTime": 1608014397,
        "uid": 294562,
        "name": "EDqwq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "# (~~\u795e\u4ed9\u4eec\u4e00\u770b\u5c31\u662f\u53ef\u7528~~ \u5206\u5c42\u56fe ~~\u505a\u7684\u88f8\u9898~~)\n### **\u9996\u5148\u6211\u4eec\u9700\u8981\u8bfb\u6e05\u9898\u610f\uff1a**\n\n \u770b\u770b\u9898\u610f\uff0c\u5728\u6ca1\u6709\u6362\u4e58\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u8f86\u8f66\u53ea\u80fd\u9009\u62e9\u6a2a\u884c\u6216\u7eb5\u884c\uff1b\n \u6a2a\u884c\u548c\u7eb5\u884c\u4e4b\u95f4\u4e92\u4e0d\u5e72\u6270\u3002\n\n \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5148\u5c06\u7eb5\u5411\u5efa\u4e00\u5c42\u56fe\uff0c\u518d\u5c06\u6a2a\u5411\u5efa\u4e00\u5c42\u56fe\u3002\n \n \u800c\u5728\u6362\u4e58\u7ad9\u4e0a\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u4e0b\u4e24\u5c42\u56fe\u540c\u4e00\u4e2a\u70b9\u8fde\u4e00\u4e2a\u8fb9\u6743\u4e3a\u4e00\u7684\u7684\u8fb9\uff0c\n\n \u5bf9\u4e8e\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u6211\u4eec\u5c06\u4e24\u5c42\u56fe\u4e2d\u540c\u4e00\u4e2a\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a0\u7684\u8fb9\u3002\n \n#### \uff08~~\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5efa\u4e24\u4e2a\u6c47\u70b9~~)\n![picture](https://cdn.luogu.com.cn/upload/pic/68796.png)\n\n\n------------\n\n\n## Solution1\uff1aN^2\u7684\u505a\u6cd5\uff0860\u5206\u4ee3\u7801\uff09\n\u5c06\u6bcf\u4e00\u4e2a\u70b9\u90fd\u7f16\u53f7\uff0c\u65e0\u8bba\u5176\u662f\u5426\u4e3a\u6362\u4e58\u7ad9\u3002\n### \n\n```cpp\nint main()\n{\n\tr(n),r(m);\n\tfor(int i=1,a,b;i<=m;i++)\n\t{\t\n\t\tr(a),r(b);\n\t\tt[(a-1)*n+b]=1;\n\t\tadd((a-1)*n+b,(a-1)*n+b+n*n,1);\n\t\tadd((a-1)*n+b+n*n,(a-1)*n+b,1);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<n;j++)\n\t\t{\t\n\t\t\tadd((i-1)*n+j,(i-1)*n+j+1,2);\n\t\t\tadd((i-1)*n+j+1,(i-1)*n+j,2);\n\t\t\tadd((j-1)*n+i+n*n,j*n+i+n*n,2);\n\t\t\tadd(j*n+i+n*n,(j-1)*n+i+n*n,2);\n\t\t}\n\t}\n\tint x1,y1,x2,y2;\n\tr(x1),r(y1),r(x2),r(y2);\n\tadd(0,(x1-1)*n+y1,0),add(0,(x1-1)*n+y1+n*n,0);\n\tadd((x2-1)*n+y2,2*n*n+1,0),add((x2-1)*n+y2+n*n,2*n*n+1,0);\n\tdj1(0);\n\tif(d[2*n*n+1]!=inf)cout<<d[\uff08n*n\uff09<<1+1]<<\"\\n\";\n\telse cout<<\"-1\"<<\"\\n\";\n}\n```\n\n### **over\uff01then\uff01**\n\n\n------------\n\n## Solution 2:100\u5206\u505a\u6cd5\n\n\u90a3\u5e94\u8be5\u5982\u4f55\u5904\u7406n^2\u7684\u8fb9\u5462\uff1f\uff1f\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7ed9\u51fa\u7684m\u4e2a\u6362\u4e58\u7ad9\u662f<=200000\u7684\u3002\n\n\u90a3\u662f\u4e0d\u662f\u53ef\u4ee5\u7528\u6362\u4e58\u7ad9\u6765\u4f5c\u4e3a\u70b9\u5462\uff01\uff01\uff01\uff01\n\n#### \u4ed4\u7ec6\u4e00\u770b\u6211\u4eec\u4f1a\u60ca\u5947\u5730\u53d1\u73b0\n\n![](https://cdn.luogu.com.cn/upload/pic/68804.png)\n\n\u5728\u4e24\u4e2a\u76f8\u90bb\u7684\u6362\u4e58\u7ad9\u4e4b\u95f4\u4e2d\u95f4\u7684\u7ad9\u70b9\u5c31\u76f8\u5f53\u4e8e\u4e0d\u5b58\u5728\u3002\n\n\u6240\u4ee5\u4f60\u5c31\u53ef\u4ee5\u901a\u8fc7\u5904\u7406\u6362\u4e58\u7ad9\u4e4b\u95f4\u7684\u5173\u7cfb\u6765\u5efa\u8fb9\u8dd1\u6700\u77ed\u8def\n\n#### \u6ce8\u610f\u6570\u636e\u8303\u56f4\uff01\u5176\u4e2d\uff1aint\u2014\u2014>60,long long \u2014\u2014>100\n\n\u8d34\u4e0a\u4e0d\u592a\u597d\u770b\u7684\u4ee3\u7801\n\n\u4e0b\u9762\u662fcmp\n\n```cpp\nbool cmp1(node a,node b)\n{\n\tif(a.x<b.x)return 1;\n\telse if(a.x==b.x)return a.y<b.y;\n\treturn 0;\n}\nbool cmp2(node a,node b)\n{\n\tif(a.y<b.y)return 1;\n\telse if(a.y==b.y)return a.x<b.x;\n\treturn 0;\n}\n```\n\n\n### \u63a5\u4e0b\u6765\u662f\u4e3b\u51fd\u6570\n\n```cpp\nint main()\n{\n\tr(n),r(m);\n\tfor(int i=1,a,b;i<=m+2;i++)\n\t{\t\n\t\tr(a),r(b);\n\t\ttat[i].x=a,tat[i].y=b;\n\t\ttat[i].tag=i;\n\t\tif(i>m)continue; \n\t\tadd(i,i+m+2,1);\n\t\tadd(i+m+2,i,1);\n\t}\n\tsort(tat+1,tat+m+3,cmp1);\n\tint X=tat[1].x,Y=tat[1].y;\n\tfor(int i=2;i<=m+2;i++)\n\t{\n\t\tif((X==tat[i].x)&&(Y<tat[i].y))\n\t\t{\t\t\n\t\t\tint len=(tat[i].y-Y)*2; \n\t\t\tadd(tat[i-1].tag,tat[i].tag,len);\n\t\t\tadd(tat[i].tag,tat[i-1].tag,len);\n\t\t}\n\t\tX=tat[i].x,Y=tat[i].y;\n\t}\n\tsort(tat+1,tat+m+3,cmp2);\n\tX=tat[1].x,Y=tat[1].y;\n\tfor(int i=2;i<=m+2;i++)\n\t{\t\n\t\tif((Y==tat[i].y)&&(X<tat[i].x))\n\t\t{\t\n\t\t\tint len=(tat[i].x-X)*2;\n\t\t\tadd(tat[i-1].tag+m+2,tat[i].tag+m+2,len);\n\t\t\tadd(tat[i].tag+m+2,tat[i-1].tag+m+2,len);\n\t\t}\n\t\tX=tat[i].x,Y=tat[i].y;\n\t}\n\tadd(m+m+3,m+1,0),add(m+1,m+m+3,0);\n\tadd(m+2,m+m+4,0),add\uff08m+m+4,m+2,0);\n\tdj1(m+1);\n\tif(d[m+2]!=inf)cout<<d[m+2]<<\"\\n\";\n\telse cout<<\"-1\"<<\"\\n\";\n}\n```\n\n\n",
        "postTime": 1564886768,
        "uid": 123841,
        "name": "lwyz123",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u5728\u4e00\u4e2a$n*n$\u7684\u7f51\u683c\u56fe\u4e2d\uff0c\u6a2a\u6216\u7ad6\u8d70\u4e00\u683c\u9700\u8981 $2$ \u5206\u949f\uff0c\u8f6c\u5411\u9700\u8981 $1$ \u5206\u949f\uff0c\u6c42\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u7528\u65f6\u3002\n\n## \u601d\u8def\n\n\u5206\u5c42\u56fe+\u6700\u77ed\u8def\u3002\n\n\u56e0\u4e3a\u53ea\u6709\u6a2a\u7ad6\u4e24\u79cd\u8d70\u6cd5\uff0c\u90a3\u4e48\u8003\u8651\u5efa\u53cc\u5c42\u56fe\uff0c\u7b2c\u4e00\u5c42\u5efa**\u6a2a\u5411\u8fb9**\uff0c\u7b2c\u4e8c\u5c42\u5efa**\u7ad6\u5411\u8fb9**\u3002\u9996\u5148\u6309\u7167 $x$ \u5750\u6807\u7684\u5927\u5c0f\u6392\u5e8f\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\n $x$ \u5750\u6807\u76f8\u7b49,\u5c31\u628a\u5b83\u4eec\u8fde\u8d77\u6765\n\n\u4e4b\u540e\u5728\u5c42\u4e0e\u5c42\u4e4b\u95f4\u5efa\u8fb9\uff0c**\u9664\u8d77\u70b9\u3001\u7ec8\u70b9\u5916**\u7684\u6bcf\u4e2a\u70b9\u90fd\u5efa\u4e00\u6761\u6743\u503c\u4e3a $1$\u7684\u8fb9\u3002\n\n**\u6ce8\u610f\uff1a**\n\n**1.\u7531\u4e8e\u5728\u8d77\u70b9\u6216\u7ec8\u70b9\u8f6c\u5411\u4e0d\u7528\u65f6\u95f4\uff0c\u5373\u8fb9\u6743\u4e3a $0$,\u9700\u8981\u5355\u72ec\u5efa\u8fb9\u3002**\n\t\n**2.\u4e00\u5171\u67092m+4\u4e2a\u70b9\u3002**\n\n\u6700\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u884c\u4e86\uff0c\u6211\u7528\u7684\u662f\u4f18\u5148\u961f\u5217\u4f18\u5316\u7684 $dijkstra$\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <algorithm>\n#include <queue>\nusing namespace std;\n\nint n,m,cnt,head[1000010],dis[1000010],vis[1000010];\n//\u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u4e0b\u6570\u7ec4\u7684\u5927\u5c0f \n\nstruct stu{\n\tint num,x,y;\n}a[1000010];\n\nstruct edge{\n\tint to,nxt,wy;\n}e[1000010];\n\nstruct node{\n\tint ps,ds;\n\tbool operator<(const node &x) const{\n\t\treturn x.ds<ds;\n\t}\n};\n\nbool cmpx(stu A,stu B) {\n\tif(A.x==B.x) return A.y<B.y;\n\treturn A.x<B.x;\n}\n\nbool cmpy(stu A,stu B) {\n\tif(A.y==B.y) return A.x<B.x;\n\treturn A.y<B.y;\n}\n\nvoid add(int A,int B,int C) {\n\te[++cnt].to=B;\n\te[cnt].wy=C;\n\te[cnt].nxt=head[A];\n\thead[A]=cnt;\n}\n\nvoid dijkstra() {\n\tfor(int i=1;i<=2*m+4;i++) dis[i]=2147483647;\n\tdis[m+1]=0;\n\tpriority_queue<node> p;\n\tp.push({m+1,0});\n\twhile(p.size()) {\n\t\tnode tmp=p.top();\n\t\tp.pop();\n\t\tint u=tmp.ps;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].nxt) {\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[u]+e[i].wy<dis[v]) {\n\t\t\t\tdis[v]=dis[u]+e[i].wy;\n\t\t\t\tif(!vis[v]) p.push((node){v,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tcin>>n>>m;\n\tfor(int i=1;i<=m+2;i++) {\n\t\tcin>>a[i].x>>a[i].y;\n\t\ta[i].num=i;\n\t}\n\tsort(a+1,a+m+3,cmpx);\n\tfor(int i=1;i<=m+1;i++) {\n\t\tif(a[i].x==a[i+1].x) {\n\t\t\tadd(a[i].num,a[i+1].num,2*(a[i+1].y-a[i].y));\n\t\t\tadd(a[i+1].num,a[i].num,2*(a[i+1].y-a[i].y));\n\t\t}\n\t}\n\tsort(a+1,a+m+3,cmpy);\n\tfor(int i=1;i<=m+1;i++) {\n\t\tif(a[i].y==a[i+1].y) {\n\t\t\tadd(a[i].num+m+2,a[i+1].num+m+2,2*(a[i+1].x-a[i].x));\n\t\t\tadd(a[i+1].num+m+2,a[i].num+m+2,2*(a[i+1].x-a[i].x));\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++) {\n\t\tadd(i,i+m+2,1);\n\t\tadd(i+m+2,i,1);\n\t}\n\tadd(m+1,2*m+3,0);\n\tadd(2*m+3,m+1,0);//\u8d77\u70b9 \n\tadd(m+2,2*m+4,0);\n\tadd(2*m+4,m+2,0);//\u7ec8\u70b9 \n\tdijkstra();\n\tif(dis[m+2]==2147483647) cout<<-1<<endl;//\u5982\u679c\u4e0d\u80fd\u5230\u8fbe\u8f93\u51fa-1 \n\telse cout<<dis[m+2]<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1616157504,
        "uid": 394991,
        "name": "Sharing666",
        "ccfLevel": 5,
        "title": "P3831\u9898\u89e3"
    },
    {
        "content": "[\u539f\u9898](https://www.luogu.com.cn/problem/P3831)\n\n\u8fd9\u662f\u6211\u4eec\u5b66\u6821\u819c\u4f60\u8d5b\u4e0a\u7684\u4e00\u9053\u9898\u3002\n\n~~\u611f\u89c9\u5e76\u6ca1\u6709\u7d2b\u9898\u96be\u5ea6\uff1f~~\n\n### \u601d\u8def\n\n\u4e00\u773c\u6700\u77ed\u8def\uff0c\u53d1\u73b0$m \\le 100000$\uff0c\u5982\u679c\u679a\u4e3e\u6bcf\u4e24\u4e2a\u70b9\u7684\u8bdd\u4f1a\u7206\u6389\u3002\n\n\u90a3\u4e48\u6362\u4e00\u79cd\u5efa\u8fb9\u65b9\u5f0f\u7f62\u3002\n\n\u663e\u7136\u4e24\u4e2a\u70b9\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u7684`x`\u5750\u6807\u76f8\u540c\u6216`y`\u5750\u6807\u76f8\u540c\n\n\u4e8e\u662f\u6211\u4eec\u7528\u4e00\u4e2a`vector`\u8bb0\u5f55\u76f8\u540c`x`\u4e0a\u7684\u70b9\uff0c\u679a\u4e3e\u6bcf\u4e24\u4e2a\u70b9\uff0c\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u5f53\u7136\u4e5f\u7528\u4e00\u4e2a`vector`\u8bb0\u5f55\u76f8\u540c`y`\u4e0a\u7684\u70b9\uff0c\u679a\u4e3e\u6bcf\u4e24\u4e2a\u70b9\uff0c\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u5728\u8fde\u8fb9\u7684\u65f6\u5019\u628a\u6362\u4e58\u8981\u7528\u76841min\u4e5f\u7ed9\u7b97\u5230\u8fb9\u6743\u91cc\uff0c\u5f53\u7136\u5230\u7ec8\u70b9\u662f\u4e0d\u7528\u6362\u4e58\u7684\uff0c\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u8981\u51cf1\u3002\n\n\u6700\u540e\u5bf9\u8d77\u70b9\u8dd1\u4e00\u904d`dijkstra`\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n// \u6b64\u5904\u5e94\u6709\u5934\u6587\u4ef6 \n#define pr_q priority_queue\nconst int N = 2e6 + 10;\nconst int inf = 0x3fffffff;\nint n,m,cnt,s = 0;\nint head[N];\nint dis[N];\nbool vis[N];\nstruct edge\n{\n\tint v,w,nxt;\n}edge[N];\nstruct node\n{\n\tint x,y;\n}a[N];\nvoid add(int u , int v , int w) // \u524d\u5411\u661f \n{\n\t++cnt;\n\tedge[cnt].v = v;\n\tedge[cnt].w = w;\n\tedge[cnt].nxt = head[u];\n\thead[u] = cnt;\n\treturn ;\n}\nint sx,sy,fx,fy;\nvector<int> samex[N],samey[N]; // samex[i]\u5b58\u4e0b\u4e86\u6240\u6709x\u5750\u6807\u4e3ai\u7684\u70b9\u3002samey\u540c\u7406\nstruct prq // \u7528\u4e8edijkstra\u7684\u4f18\u5148\u961f\u5217\u3002 \n{\n\tint num,dis;\n\tbool operator < (const prq &x) const\n\t\t{return x.dis < dis;}\n};\nvoid dijkstra() // \u6734\u7d20dijkstra \n{\n\tfor(int i = 1;i <= m;i++)\n\t\tdis[i] = inf;\n\tdis[s] = 0;\n\tpr_q<prq> q;\n\tq.push( (prq){s , 0} );\n\twhile( !q.empty() )\n\t{\n\t\tint u = q.top().num;\n\t\tq.pop();\n\t\tfor(int i = head[u];i;i = edge[i].nxt)\n\t\t{\n\t\t\tint v = edge[i].v;\n\t\t\tif(dis[v] > dis[u] + edge[i].w)\n\t\t\t{\n\t\t\t\tdis[v] = dis[u] + edge[i].w;\n\t\t\t\tif( !vis[v] )\n\t\t\t\t{\n\t\t\t\t\tvis[v] = true;\n\t\t\t\t\tq.push( (prq){ v , dis[v] } );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tcin >> a[i].x >> a[i].y;\n\t\tsamex[a[i].x].push_back(i);\n\t\tsamey[a[i].y].push_back(i);\n\t}\n\tcin >> sx >> sy >> fx >> fy;\n\ta[0] = (node){sx , sy}; // \u8d77\u70b9 \n\tsamex[sx].push_back(0);\n\tsamey[sy].push_back(0);\n\ta[++m] = (node){fx , fy}; // \u7ec8\u70b9 \n\tsamex[fx].push_back(m);\n\tsamey[fy].push_back(m);\n\t// \u5efa\u8fb9 \n\tfor(int x = 1;x <= n;x++)\n\t\tfor(int i = 0;i < samex[x].size();i++)\n\t\t\tfor(int j = i + 1;j < samex[x].size();j++)\n\t\t\t{\n\t\t\t\tint u = samex[x][i];\n\t\t\t\tint v = samex[x][j];\n\t\t\t\tadd(u , v , abs(a[u].y - a[v].y) * 2 + 1); // \u540c\u65f6\u628a\u6362\u4e58\u7684\u65f6\u95f4\u7b97\u4e0a \n\t\t\t\tadd(v , u , abs(a[u].y - a[v].y) * 2 + 1);\n\t\t\t}\n\tfor(int y = 1;y <= n;y++)\n\t\tfor(int i = 0;i < samey[y].size();i++)\n\t\t\tfor(int j = i + 1;j < samey[y].size();j++)\n\t\t\t{\n\t\t\t\tint u = samey[y][i];\n\t\t\t\tint v = samey[y][j];\n\t\t\t\tadd(u , v , abs(a[u].x - a[v].x) * 2 + 1);\n\t\t\t\tadd(v , u , abs(a[u].x - a[v].x) * 2 + 1);\n\t\t\t}\n\tdijkstra();\n\tif(dis[m] == inf) // \u65e0\u6cd5\u5230\u8fbe \n\t\tputs(\"-1\");\n\telse\n\t\tcout << dis[m] - 1 << endl; // \u6700\u540e\u51cf1\uff0c\u7ec8\u70b9\u4e0d\u9700\u8981\u82b1\u65f6\u95f4\u6362\u4e58 \n    return 0;\n}\n```\n",
        "postTime": 1607752699,
        "uid": 203763,
        "name": "iorit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "# \u5206\u5c42\u56fe+\u6700\u77ed\u8def\n\u770b\u5230\u9898\u610f\uff0c\u7b2c\u4e00\u53cd\u5e94\uff1a\u66b4\u529bBFS\uff01\n\n\u770b\u5230\u96be\u5ea6\uff1a~~\u771f\u9999\u3002~~\n\n\u597d\u7684\u3002\n\n## \u5206\u5c42\u56fe\n\n\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff1a**\u6a2a\u8fb9\u548c\u7eb5\u8fb9**\u3002\u6211\u4eec\u5efa\u7acb\u4e24\u5c42\u56fe\uff0c\u7b2c\u4e00\u5c42\u53ea\u5b58\u50a8\u6a2a\u8fb9\uff0c\u7b2c\u4e8c\u5c42\u53ea\u5b58\u50a8\u7eb5\u8fb9\u3002\n\n\u663e\u7136\uff0c\u53ea\u9700\u8981\u5728\u76f8\u90bb\u4e24\u4e2a**\u6362\u4e58\u7ad9**\uff08\u5373\u53ef\u4ee5\u8f6c\u5411\u7684\u4ea4\u6c47\u7ad9\uff09\u4e4b\u95f4\u5efa\u7acb\u53cc\u5411\u8fb9\u3002~~\u5426\u5219\u8d70\u5230\u5176\u4ed6\u7ad9\u70b9\u5c31\u518d\u4e5f\u56de\u4e0d\u4e86\u5bb6\u4e86\u3002~~\n\n\u4e8e\u662f\uff0c\u5728\u6bcf\u4e00\u5c42\u5185\uff0c**\u6211\u4eec\u5206\u522b\u4ee5\u6362\u4e58\u7ad9\u7684\u6a2a\u5750\u6807\u6216\u7eb5\u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f**\uff0c\u90a3\u6837\u5c31\u7701\u53bb\u4e86\u4e00\u4e2a\u6362\u4e58\u7ad9\u548c\u5176\u4ed6\u6240\u6709\u90fd\u5efa\u8fb9\u7684\u64cd\u4f5c\uff0c\u53ea\u9700\u5728\u76f8\u90bb\u4e24\u4e2a\u4e4b\u95f4\u5efa\u8fb9\u5373\u53ef\uff0c\u5e76\u4e14\u4e0d\u5f71\u54cd\u56fe\u7684\u8fde\u901a\u6027\u3002\n\n\u4e4b\u540e\u8003\u8651\u5c42\u4e0e\u5c42\u4e4b\u95f4\u5efa\u8fb9\u3002\u5982\u679c\u8981\u4ece\u4e00\u5c42\u8f6c\u5230\u53e6\u4e00\u5c42\uff08**\u76f8\u5f53\u4e8e\u8f6c\u5411\u64cd\u4f5c**\uff09\uff0c\u9700\u89811\u5355\u4f4d\u65f6\u95f4\u3002\u90a3\u4e48\u5c31\u5c06\u6bcf\u5c42\u4e2d\u7684\u76f8\u540c\u8282\u70b9\u4e4b\u95f4\u5efa\u7acb\u4e00\u6761\u8fb9\u6743\u4e3a\u4e00\u7684\u8fb9\u3002\u7279\u522b\u5730\uff0c**\u8d77\u70b9\u548c\u7ec8\u70b9\u8981\u5efa\u7acb\u8fb9\u6743\u4e3a0\u7684\u8fb9**\u3002\n\n\u81f3\u4e8e\u6bcf\u4e00\u5c42\u7684\u76f8\u540c\u8282\u70b9\uff0c\u6211\u4eec\u628a\u4e24\u4e2a\u76f8\u540c\u7684\u70b9\u7f16\u53f7\u4e3a**i\u548ci+maxm**\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002**\u6392\u5e8f\u524d\u8bb0\u5f97\u5b58\u50a8\u521d\u59cb\u7f16\u53f7\u3002**\n\n## \u6700\u77ed\u8def\n\n\u5efa\u597d\u56fe\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u50cf\u666e\u901a\u7684\u9898\u4e00\u6837\u8dd1\u6700\u77ed\u8def\u4e86\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e24\u79cd\uff1a\n\n**\u5806\u4f18\u5316Dijkstra\u548cSPFA**\n\n\u8fd9\u9053\u9898\u597d\u50cfSPFA\u66f4\u5feb\u4e00\u4e9b\uff08~~\u597d\u5427\u53ef\u80fd\u662f\u6211Dijkstra\u5077\u61d2\u7528\u4e86pair~~\uff09\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n### SPFA\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int maxm=1e5+10;\nint n,m,s,f[maxm<<1],dis[maxm<<1],vis[maxm<<1];//f\u662f\u90bb\u63a5\u8868\u6570\u7ec4\uff1b\n//dis\u8bb0\u5f55\u8ddd\u79bb\uff0cvis\u8bb0\u5f55\u662f\u5426\u5728SPFA\u7684\u961f\u5217\u91cc\u3002\nqueue<int>q;\nstruct node{\n\tint x;\n\tint y;\n\tint z;\n}a[maxm];//\u5b58\u50a8\u6362\u4e58\u7ad9\u4fe1\u606f\nstruct edge{\n\tint t;\n\tint v;\n\tint w;\n}e[maxm*6];//\u5b58\u50a8\u8fb9\uff0c\u6570\u7ec4\u8981\u5f00\u5927\uff0c\u5927\u7ea66\u500d\u53ed \nint fr(){\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0')\n\t\tch=getchar();\n\tint sum=ch-'0';\n\twhile((ch=getchar())>='0'&&ch<='9')\n\t\tsum=(sum<<3)+(sum<<1)+ch-'0';\n\treturn sum;\n}\nvoid add(int xx,int yy,int zz){\n\ts++;\n\te[s].t=f[xx];\n\te[s].v=yy;\n\te[s].w=zz;\n\tf[xx]=s;\n}//\u52a0\u8fb9\nbool cmp1(node xx,node yy){\n\tif(xx.x!=yy.x)\n\t\treturn xx.x<yy.x;\n\treturn xx.y<yy.y;\n}\nbool cmp2(node xx,node yy){\n\tif(xx.y!=yy.y)\n\t\treturn xx.y<yy.y;\n\treturn xx.x<yy.x;\n}//\u6392\u5e8f\u51fd\u6570\nvoid build(){\n\tsort(a+1,a+m+1,cmp1);\n\tfor(int i=2;i<=m;i++)\n\t\tif(a[i].x==a[i-1].x){\n\t\t\tadd(a[i].z,a[i-1].z,(a[i].y-a[i-1].y)<<1);\n\t\t\tadd(a[i-1].z,a[i].z,(a[i].y-a[i-1].y)<<1);\n\t\t}\n\tsort(a+1,a+m+1,cmp2);\n\tfor(int i=2;i<=m;i++)\n\t\tif(a[i].y==a[i-1].y){\n\t\t\tadd(a[i].z+maxm,a[i-1].z+maxm,(a[i].x-a[i-1].x)<<1);\n\t\t\tadd(a[i-1].z+maxm,a[i].z+maxm,(a[i].x-a[i-1].x)<<1);\n\t\t}\n\tfor(int i=1;i<=m;i++)\n\t\tif(a[i].z<=m-2){\n\t\t\tadd(a[i].z,a[i].z+maxm,1);\n\t\t\tadd(a[i].z+maxm,a[i].z,1);\n\t\t}\n\tadd(m-1,m-1+maxm,0);\n\tadd(m-1+maxm,m-1,0);\n\tadd(m,m+maxm,0);\n\tadd(m+maxm,m,0);//\u8d77\u70b9\u7ec8\u70b9\u8f6c\u5411\u4e0d\u9700\u8981\u65f6\u95f4\u3002\n}\nvoid spfa(int sn){\n\tdis[sn]=0;\n\tq.push(sn);\n\tvis[sn]=1;\n\tint d;\n\twhile(!q.empty()){\n\t\td=q.front();\n\t\tq.pop();\n\t\tvis[sn]=0;\n\t\tfor(int i=f[d];i!=0;i=e[i].t)\n\t\t\tif(dis[e[i].v]>dis[d]+e[i].w){\n\t\t\t\tdis[e[i].v]=dis[d]+e[i].w;\n\t\t\t\tif(!vis[e[i].v]){\n\t\t\t\t\tq.push(e[i].v);\n\t\t\t\t\tvis[e[i].v]=1;\n\t\t\t\t}\n\t\t\t}\n\t}\n}\nint main(){\n\tn=fr();\n\tm=fr();\n\tm+=2;//\u8d77\u70b9\u7ec8\u70b9\u4e00\u8d77\u8bfb\u5165\u5efa\u8fb9\n\tfor(int i=1;i<=m;i++){\n\t\ta[i].x=fr();\n\t\ta[i].y=fr();\n\t\ta[i].z=i;//\u8bb0\u5f55\u521d\u59cb\u7f16\u53f7\n\t}\n\tbuild();\n\tmemset(dis,0x3f,sizeof(dis));//dis\u521d\u59cb\u5316\n\tspfa(m-1);\n\tprintf(\"%d\",dis[m]);\n\treturn 0;\n}\n```\n**Dijkstra\u7684\u6570\u7ec4\u540c\u4e0a\u3002**\n### \u5806\u4f18\u5316Dijkstra\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int maxm=1e5+10;\nint n,m,s,f[maxm<<1],dis[maxm<<1],vis[maxm<<1];\npriority_queue<pair<int,int> >q;\nstruct node{\n\tint x;\n\tint y;\n\tint z;\n}a[maxm];\nstruct edge{\n\tint t;\n\tint v;\n\tint w;\n}e[maxm*6];\nint fr(){\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0')\n\t\tch=getchar();\n\tint sum=ch-'0';\n\twhile((ch=getchar())>='0'&&ch<='9')\n\t\tsum=(sum<<3)+(sum<<1)+ch-'0';\n\treturn sum;\n}\nvoid add(int xx,int yy,int zz){\n\ts++;\n\te[s].t=f[xx];\n\te[s].v=yy;\n\te[s].w=zz;\n\tf[xx]=s;\n}\nbool cmp1(node xx,node yy){\n\tif(xx.x!=yy.x)\n\t\treturn xx.x<yy.x;\n\treturn xx.y<yy.y;\n}\nbool cmp2(node xx,node yy){\n\tif(xx.y!=yy.y)\n\t\treturn xx.y<yy.y;\n\treturn xx.x<yy.x;\n}\nvoid build(){\n\tsort(a+1,a+m+1,cmp1);\n\tfor(int i=2;i<=m;i++)\n\t\tif(a[i].x==a[i-1].x){\n\t\t\tadd(a[i].z,a[i-1].z,(a[i].y-a[i-1].y)<<1);\n\t\t\tadd(a[i-1].z,a[i].z,(a[i].y-a[i-1].y)<<1);\n\t\t}\n\tsort(a+1,a+m+1,cmp2);\n\tfor(int i=2;i<=m;i++)\n\t\tif(a[i].y==a[i-1].y){\n\t\t\tadd(a[i].z+maxm,a[i-1].z+maxm,(a[i].x-a[i-1].x)<<1);\n\t\t\tadd(a[i-1].z+maxm,a[i].z+maxm,(a[i].x-a[i-1].x)<<1);\n\t\t}\n\tfor(int i=1;i<=m;i++)\n\t\tif(a[i].z<=m-2){\n\t\t\tadd(a[i].z,a[i].z+maxm,1);\n\t\t\tadd(a[i].z+maxm,a[i].z,1);\n\t\t}\n\tadd(m-1,m-1+maxm,0);\n\tadd(m-1+maxm,m-1,0);\n\tadd(m,m+maxm,0);\n\tadd(m+maxm,m,0);\n}\nvoid dijkstra(int sn){\n\tdis[sn]=0;\n\tq.push(make_pair(0,sn));\n\tint d;\n\twhile(!q.empty()){\n\t\td=q.top().second;\n\t\tq.pop();\n\t\tif(vis[d])\n\t\t\tcontinue;\n\t\tvis[d]=1;\n\t\tfor(int i=f[d];i!=0;i=e[i].t)\n\t\t\tif(dis[e[i].v]>dis[d]+e[i].w){\n\t\t\t\tdis[e[i].v]=dis[d]+e[i].w;\n\t\t\t\tq.push(make_pair(-dis[e[i].v],e[i].v));\n\t\t\t}\n\t}\n}\nint main(){\n\tn=fr();\n\tm=fr();\n\tm+=2;\n\tfor(int i=1;i<=m;i++){\n\t\ta[i].x=fr();\n\t\ta[i].y=fr();\n\t\ta[i].z=i;\n\t}\n\tbuild();\n\tmemset(dis,0x3f,sizeof(dis));\n\tdijkstra(m-1);\n\tprintf(\"%d\",dis[m]);\n\treturn 0;\n}\n\n```\n\u597d\u7684\u5c31\u662f\u8fd9\u4e2a\u4e9a\u5b50\u3002\n\n## \u795d\u5927\u5bb6\u65e9\u65e5AC~",
        "postTime": 1565531697,
        "uid": 118433,
        "name": "LB_tq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "\u88f8\u7684\u5206\u5c42\u6700\u77ed\u8def\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u76ee\u6765\u8bf4\uff0c\u5c42\u4e0e\u5c42\u4e4b\u95f4\u7684\u6743\u503c\u4e3a$1$\u3002\n\n\u800c\u4e14\u770b\u6570\u636e\u8303\u56f4\uff0c$n$\u8fd9\u4e48\u5927\u7684\u4e00\u4e2a\u8303\u56f4\uff0c\u80af\u5b9a\u4e0d\u80fd$n^2$\u5b58\u56fe\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u679a\u4e3e\u6bcf\u4e2a\u4e2d\u8f6c\u70b9(\u6362\u4e58\u70b9)\uff0c\u6a2a\u7eb5\u5206\u522b\u6c42\u4e24\u4e2a\u4e2d\u8f6c\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u5b58\u4e0b\u6765\uff0c\u6bcf\u5c42\u8d77\u70b9\u548c\u8d77\u70b9\u7684\u6620\u5c04\u53ca\u7ec8\u70b9\u548c\u7ec8\u70b9\u7684\u6620\u5c04\u90fd\u8981\u662f0\uff0c\u7136\u540e\u76f4\u63a5\u4e0a\u5806\u4f18\u5316dijkstra\uff0c\u8fd9\u4e2a\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u5206\u5c42\u6700\u77ed\u8def\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898:\n\n#### 1\u3001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u5f88\u91cd\u8981\u3002\n#### 2\u3001\u786e\u5b9a\u6bcf\u5c42\u4e4b\u95f4\u7684\u6743\u503c\u662f\u591a\u5c11\u3002\n#### 3\u3001\u8003\u8651\u5982\u4f55\u5efa\u8fb9\u3002\n\n\u6ce8\u610f\u4e86\u8fd9\u4e09\u4e2a\u95ee\u9898\u4e4b\u540e\uff0c\u5206\u5c42\u6700\u77ed\u8def\u5c31\u8ddf\u88f8\u7684\u6700\u77ed\u8def\u6ca1\u4ec0\u4e48\u533a\u522b\u4e86\u2026\u2026\n\n\u4e8e\u662f\u6211\u4eec\u5f00\u5f00\u5fc3\u5fc3\u7684\u6765\u770b\u4ee3\u7801(\u4ee3\u7801\u5c31\u4e0d\u89e3\u91ca\u4e86\uff0c\u6709\u4e86\u601d\u8def\u5c31\u80fd\u770b\u61c2)\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cctype>\n#include<cstring>\n#define maxn 200001\nusing namespace std;\nint num,n,m,head[800001],dis[800001];\ninline int qread() {\n  char c=getchar();int num=0,f=1; \n  for(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n  for(;isdigit(c);c=getchar()) num=num*10+c-'0';return num*f;\n} \nstruct edge {\n  int v,w,nxt;\n}e[800001];\nstruct node {\n  int x,y;\n  bool operator < (const node &a) const {return y>a.y;}\n};\nstruct Edge {\n  int x,y,id;\n}zrj[maxn];\nbool cmp1(Edge a,Edge b){if(a.x==b.x)return a.y<b.y;return a.x<b.x;}\nbool cmp2(Edge a,Edge b){if(a.y==b.y)return a.x<b.x;return a.y<b.y;}\ninline void ct(int u, int v, int w) {\n  e[++num].v=v;\n  e[num].w=w;\n  e[num].nxt=head[u];\n  head[u]=num;\n}\npriority_queue<node>q;\ninline void dijkstra() {\n  memset(dis,0x3f,sizeof(dis)); \n  dis[m+1]=0;q.push((node){m+1,0});\n  while(!q.empty()) {\n  \tint u=q.top().x,d=q.top().y;\n  \tq.pop();\n  \tif(d!=dis[u]) continue;\n  \tfor(int i=head[u];i;i=e[i].nxt) {\n  \t  int v=e[i].v;\n\t  if(dis[v]>dis[u]+e[i].w) {\n\t  \tdis[v]=dis[u]+e[i].w;\n\t  \tq.push((node){v,dis[v]});\n\t  }\t\n\t}\n  }\n}\nint main() {\n  n=qread(),m=qread();\n  for(int i=1;i<=m+2;++i) zrj[i].x=qread(),zrj[i].y=qread(),zrj[i].id=i;\n  sort(zrj+1,zrj+m+3,cmp1);\n  for(int i=1;i<m+2;++i)\n  {if(zrj[i].x==zrj[i+1].x) ct(zrj[i].id,zrj[i+1].id,(zrj[i+1].y-zrj[i].y)*2),ct(zrj[i+1].id,zrj[i].id,(zrj[i+1].y-zrj[i].y)*2);}\n  sort(zrj+1,zrj+m+3,cmp2);\n  for(int i=1;i<m+2;++i) \n  {if(zrj[i].y==zrj[i+1].y) ct(zrj[i].id+m+2,zrj[i+1].id+m+2,(zrj[i+1].x-zrj[i].x)*2),ct(zrj[i+1].id+m+2,zrj[i].id+m+2,(zrj[i+1].x-zrj[i].x)*2);}\n  for(int i=1;i<=m;++i) ct(i,i+m+2,1),ct(i+m+2,i,1); \n  ct(m+1,m*2+3,0),ct(m*2+3,m+1,0);ct(m+2,m*2+4,0),ct(m*2+4,m+2,0);\n  dijkstra();\n  if(dis[m+2]>1e9) printf(\"-1\\n\");\n  else printf(\"%d\\n\",dis[m+2]);\n  return 0;\n}\n```\n\n\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u53ef\u4ee5\u5bf9\u5927\u5bb6\u4e86\u89e3\u5206\u5c42\u6700\u77ed\u8def\u6709\u4e9b\u5e2e\u52a9\u3002",
        "postTime": 1545013531,
        "uid": 68622,
        "name": "King\u4e28\u5e1d\u5fa1\u5a01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5\uff1aP3831 [SHOI2012]\u56de\u5bb6\u7684\u8def](https://www.luogu.com.cn/problem/P3831)\n\n\u8bb8\u591a\u9898\u89e3\u90fd\u5df2\u7ecf\u6307\u51fa\uff0c\u672c\u9898\u7684\u7b97\u6cd5\u662f**\u5206\u5c42\u56fe\u6700\u77ed\u8def**\u3002\n\n## \u5206\u5c42\u56fe\u2014\u2014\u5b9a\u4e49\n\n\u7531\u9898\u53ef\u77e5\uff0c\u5730\u94c1\u53ea\u80fd\u6a2a\u5411\u6216\u7eb5\u5411\u8d70\uff0c\u60f3\u6539\u53d8\u65b9\u5411\u5fc5\u987b**\u5728\u7279\u5b9a\u8f66\u7ad9\u6d88\u8017\u65f6\u95f4**\u51fa\u7ad9\u6362\u4e58\u3002\u8fd9\u79cd\u60c5\u51b5\u4f7f\u7528\u6734\u7d20\u7684\u5efa\u56fe\u65b9\u5f0f\u5e76\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5c06\u56fe\u62bd\u8c61\u5730\u5206\u4e3a**\u53ea\u8fde\u6a2a\u5411\u8fb9**\u548c**\u53ea\u8fde\u7eb5\u5411\u8fb9**\u7684\u4e24\u5f20\u56fe\uff0c\u4e24\u5f20\u56fe\u4e2d**\u5bf9\u5e94\u7684\u4f4d\u7f6e\u518d\u8fde\u63a5\u4e00\u6761\u8fb9**\uff0c\u8868\u793a\u51fa\u7ad9\u6362\u4e58\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u597d\u4f3c\u628a\u56fe\u5206\u4e3a\u4e86\u4e0a\u4e0b\u4e24\u5c42\uff0c\u4e14\u4e0a\u4e0b\u4e24\u5c42\u6709\u82e5\u5e72\u6761\u8def\u5f84\u76f8\u8fde\uff0c\u6545\u5f97\u540d\u5206\u5c42\u56fe\u3002\n\n[P4568 [JLOI2011]\u98de\u884c\u8def\u7ebf](https://www.luogu.com.cn/problem/P4568) \u540c\u6837\u9700\u8981\u4f7f\u7528\u5206\u5c42\u56fe\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u4e14\u601d\u8def\u4e0a\u53ef\u80fd\u66f4\u5bb9\u6613\u5c06\u56fe\u62bd\u8c61\u6210\u5206\u5c42\u56fe\uff0c\u60a8\u53ef\u4ee5\u7ed3\u5408\u8fd9\u9053\u9898\u8fdb\u884c\u7406\u89e3\u3002\n\n## \u5206\u5c42\u56fe\u2014\u2014\u5efa\u56fe\n\n\u5728\u3010\u5b9a\u4e49\u3011\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u8bf4\u660e\u4e86\u5927\u81f4\u7684\u8fde\u8fb9\u601d\u8def\u3002\u5728\u672c\u9898\u4e2d\uff0c\u66f4\u5177\u4f53\u7684\u5efa\u56fe\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n### \u5f15\u7406\n\n1. \u5bf9\u4e8e\u201c\u5c06\u56fe\u5206\u6210\u4e0a\u4e0b\u4e24\u5c42\u201d\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e24\u500d\u6570\u7ec4\u7a7a\u95f4\uff0c\u5373\u7528\u4e0b\u6807\u4e3a $i$ \u7684\u4f4d\u7f6e\u8868\u793a\u4e0a\u5c42\u56fe\u4e2d\u7f16\u53f7\u4e3a $i$ \u7684\u70b9\uff0c\u7528\u4e0b\u6807\u4e3a $(i+$\u70b9\u6570$)$ \u7684\u70b9\u8868\u793a\u4e0b\u5c42\u56fe\u4e2d\u7f16\u53f7\u4e3a $i$ \u7684\u70b9\u3002\n\n2. \u5bb9\u6613\u53d1\u73b0\uff0c\u5408\u6cd5\u7684\u8def\u5f84\u7684\u4e00\u90e8\u5206\u4e00\u5b9a\u4e0e\u67d0\u4e24\u4e2a**\u5728\u540c\u4e00\u6a2a\u884c\u6216\u540c\u4e00\u7eb5\u5217**\u7684\u53ef\u6362\u4e58\u8f66\u7ad9**\uff08\u5305\u62ec\u8d77\u70b9\u7ad9\u548c\u7ec8\u70b9\u7ad9\uff09**\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u91cd\u5408\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728**\u5728\u540c\u4e00\u6a2a\u884c\u6216\u540c\u4e00\u7eb5\u5217**\u7684**\u76f8\u90bb**\u7684\u4efb\u610f\u4e24\u4e2a\u53ef\u6362\u4e58\u8f66\u7ad9\u4e4b\u95f4\u5404\u8fde\u4e00\u6761\u53cc\u5411\u8fb9\u5373\u53ef\u3002\n\n### \u6b65\u9aa4\uff08\u8fde\u6a2a\u5411\u8fb9\u3001\u7eb5\u5411\u8fb9\u548c\u4e24\u5f20\u56fe\u4e4b\u95f4\u7684\u8fb9\u8fd9\u4e09\u4e2a\u5927\u6b65\u9aa4\u7684\u987a\u5e8f\u53ef\u4ee5\u98a0\u5012\uff09\n\n1. \u8bfb\u5165\u53ef\u6362\u4e58\u8f66\u7ad9**\uff08\u5305\u62ec\u8d77\u70b9\u7ad9\u548c\u7ec8\u70b9\u7ad9\uff09**\uff0c\u8bb0\u5f55\u8fd9\u4e9b\u8f66\u7ad9\u7684\u5750\u6807\u5e76\u7ed9\u5176\u7f16\u53f7\u3002\uff08\u53ef\u7528\u7ed3\u6784\u4f53\u6216\u7c7b\u5b8c\u6210\uff09\n2. \u8fde\u63a5\u4e0a\u4e0b\u4e24\u5c42\u56fe\u4e4b\u95f4\u7684\u8fb9\uff0c\u5373\u5728**\u4e0a\u4e0b\u4e24\u5c42\u56fe\u4e2d\u5bf9\u5e94\u7684\u70b9**\u4e4b\u95f4\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $1$ \u7684\u8fb9\u3002\n3. \u8fde\u63a5**\u53ea\u8fde\u6a2a\u5411\u8fb9**\u7684\u56fe\u4e2d\u7684\u8fb9\uff0c\u66f4\u5177\u4f53\u5730\uff1a\n   1. \u5c06\u6240\u6709\u7684\u53ef\u6362\u4e58\u8f66\u7ad9\u6309\u7b2c\u4e00\u5173\u952e\u5b57\u7eb5\u5750\u6807\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u6a2a\u5750\u6807\u6392\u5e8f\u3002\n   2. \u679a\u4e3e\u6392\u5e8f\u540e\u76f8\u90bb\u7684\u4e24\u4e2a\u70b9\uff0c\u82e5\u4e24\u4e2a\u70b9\u7684\u7eb5\u5750\u6807\u76f8\u7b49\uff0c\u5219\u5728\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $2 \\times ($\u6a2a\u5750\u6807\u4e4b\u5dee$)$ \u7684\u53cc\u5411\u8fb9\u3002\n4. \u8fde\u63a5**\u53ea\u8fde\u7eb5\u5411\u8fb9**\u7684\u56fe\u4e2d\u7684\u8fb9\uff0c\u66f4\u5177\u4f53\u5730\uff1a\n   1. \u5c06\u6240\u6709\u7684\u53ef\u6362\u4e58\u8f66\u7ad9\u6309\u7b2c\u4e00\u5173\u952e\u5b57\u6a2a\u5750\u6807\uff0c\u7b2c\u5173\u952e\u5b57\u7eb5\u5750\u6807\u6392\u5e8f\u3002\n   2. \u679a\u4e3e\u6392\u5e8f\u540e\u76f8\u90bb\u7684\u4e24\u4e2a\u70b9\uff0c\u82e5\u4e24\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\u76f8\u7b49\uff0c\u5219\u5728\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $2 \\times ($\u7eb5\u5750\u6807\u4e4b\u5dee$)$ \u7684\u53cc\u5411\u8fb9\u3002\n\n### \u5b9e\u73b0\uff08\u7a7a\u95f4\u7ba1\u7406\u5927\u5e08\u8b66\u544a\uff09\n\n**Warning\uff1a\u5173\u4e8e\u6570\u7ec4\u7684\u6781\u9650\u5927\u5c0f\u7684\u8ba1\u7b97\uff0c\u5982\u679c\u4e0d\u9700\u8981\u6781\u9650\u538b\u7a7a\u95f4\u53ef\u4ee5\u7565\u8fc7\uff0c\u5b9e\u9645\u8003\u8bd5\u4e2d\u4e5f\u4e0d\u5efa\u8bae\u8fd9\u4e48\u505a\u3002**\n\n#### 1. \u70b9\u7684\u6700\u5927\u6570\u91cf\n\n\u53ef\u6362\u4e58\u8f66\u7ad9\u7684\u6570\u91cf $m$ \u7684\u6700\u5927\u503c\u4e3a $10^5$\uff0c\u52a0\u4e0a\u8d77\u70b9\u548c\u7ec8\u70b9\u5219\u4e3a $10^5+2$\uff0c\u56e0\u4e3a\u8981\u5b58\u4e24\u5c42\u56fe\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u56fe\u4e2d\u70b9\u7684\u6700\u5927\u6570\u91cf\u4e3a $2 \\times 10^5 +4$\u3002\n\n\u70b9\u53ef\u4ee5\u5728\u6570\u7ec4\u4e2d\u4e0b\u6807\u4e3a $0$ \u7684\u4f4d\u7f6e\u5f00\u59cb\u5b58\u50a8\uff0c\u6240\u4ee5\u5b58\u50a8\u6709\u5173\u70b9\u7684\u4fe1\u606f\u7684\u6570\u7ec4\u7684\u6700\u5c0f\u5927\u5c0f\u4e3a\uff1a\n\n$$\n2 \\times 10^5 +4\n$$\n\n**\u5728\u4ee5\u4e0b\u7684\u5b9e\u73b0\u4e2d\uff0c\u5168\u90e8\u7528 $x$ \u8868\u793a\u7eb5\u5750\u6807\uff0c\u7528 $y$ \u8868\u793a\u6a2a\u5750\u6807\u3002**\n\n```cpp\nconst unsigned long int MAXN=200004;\nstruct Point\n{\n\tint num,x,y;  //\u7f16\u53f7\uff0c\u7eb5\u5750\u6807\uff0c\u6a2a\u5750\u6807\n}station[MAXN];\nint head[MAXN]={};  //\u94fe\u5f0f\u524d\u5411\u661f\u7684head\nint distance[MAXN]={};  //\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u6c42\u6700\u77ed\u8def\u65f6\u4f7f\u7528\nbool visited[MAXN]={};  //\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\uff0c\u540c\u6837\u5728\u6c42\u6700\u77ed\u8def\u65f6\u4f7f\u7528\n```\n\n#### 2. \u8fb9\u7684\u6700\u5927\u6570\u91cf\n\n\u5bf9\u4e8e\u6781\u7aef\u60c5\u51b5\uff0c\u53ef\u6362\u4e58\u8f66\u7ad9\u7684\u6570\u91cf\u8fbe\u5230\u6700\u5927\uff0c\u4e14\u6240\u6709\u7684\u53ef\u6362\u4e58\u8f66\u7ad9\u90fd\u6392\u5728\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\uff08\u5f53\u7136\uff0c\u56e0\u4e3a $n_{max} < m_{max}$ \uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u4e0d\u53ef\u80fd\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\uff09\uff0c\u6b64\u65f6\u6bcf\u4e00\u5c42\u9700\u8981\u8fde\u7684\u6a2a\u5411\u8fb9\u6216\u7eb5\u5411\u8fb9\u7684\u6570\u91cf\u4e3a $10^5+2-1 = 10^5+1$\u3002\u56e0\u4e3a\u6bcf\u6761\u8fb9\u90fd\u662f\u53cc\u5411\u8fb9\uff0c\u4e14\u56fe\u6709\u4e24\u5c42\uff0c\u6240\u4ee5\u6a2a\u5411\u8fb9\u548c\u7eb5\u5411\u8fb9\u7684\u6700\u5927\u6570\u91cf\u4e3a $2 \\times 2 \\times (10^5+1) = 4 \\times 10^5 +4$\uff08\u5f53\u7136\u6a2a\u5411\u8fb9\u548c\u7eb5\u5411\u8fb9\u4e5f\u4e0d\u53ef\u80fd\u540c\u65f6\u8fbe\u5230\u6700\u5927\u503c\uff09\u3002\n\n\u5bf9\u4e8e\u8fde\u63a5\u4e24\u5c42\u56fe\u7684\u8fb9\uff0c\u8fb9\u6570\u4e25\u683c\u4e0e $m+2$ \u7684\u5927\u5c0f\u76f8\u7b49\uff0c\u540c\u6837\u56e0\u4e3a\u6bcf\u6761\u8fb9\u90fd\u662f\u53cc\u5411\u8fb9\uff0c\u6240\u4ee5\u8fde\u63a5\u4e24\u5c42\u56fe\u7684\u8fb9\u7684\u6700\u5927\u6570\u91cf\u4e3a $2 \\times (10^5+2) = 2 \\times 10^5 +4$\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u8fb9\u7684\u6700\u5927\u6570\u91cf\u4e3a $4 \\times 10^5 +4 + 2 \\times 10^5 +4 = 6 \\times 10^5 + 8$\u3002\n\n\u867d\u7136\u94fe\u5f0f\u524d\u5411\u661f\u7684\u4e3b\u6d41\u5199\u6cd5\u662f\u4ece\u4e0b\u6807\u4e3a $1$ \u7684\u4f4d\u7f6e\u5f00\u59cb\u5b58\u50a8\uff0c\u4f46\u662f\u4e0a\u9762\u8bf4\u5230\u4e0d\u53ef\u80fd\u540c\u65f6\u8fbe\u5230\u8fd9\u51e0\u79cd\u6781\u7aef\u60c5\u51b5\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6570\u5b57\u662f\u7ef0\u7ef0\u6709\u4f59\u7684\uff0c\u751a\u81f3\u8fd8\u53ef\u4ee5\u5411\u4e0b\u53d6\u4e2a\u6574\u3002\n\n\u5b58\u50a8\u6709\u5173\u8fb9\u7684\u4fe1\u606f\u7684\u6570\u7ec4\u7684\u6700\u5c0f\u5927\u5c0f\u4e3a\uff1a\n\n$$\n6 \\times 10^5\n$$\n\n\u771f\u7684\u80fd\u8fc7\u3002\n\n```cpp\nconst unsigned long int MAXM=600000;\nint count=0;\nstruct Edge  //\u94fe\u5f0f\u524d\u5411\u661f\u4e2d\u7684\u8fb9\n{\n\tint to,value,next;\n}edge[MAXM];\ninline void AddEdge(const int u,const int v,const int w)  //\u94fe\u5f0f\u524d\u5411\u661f\u4e2d\u7684\u52a0\u8fb9\u51fd\u6570\n{\n\t++count;\n\tedge[count].to=v;\n\tedge[count].value=w;\n\tedge[count].next=head[u];\n\thead[u]=count;\n\treturn ;\n}\n```\n\n#### 3. \u8bfb\u5165\u53ef\u6362\u4e58\u8f66\u7ad9\u7684\u5750\u6807\u65f6\uff0c\u540c\u65f6\u8fde\u63a5\u4e0a\u4e0b\u4e24\u5c42\u56fe\u4e4b\u95f4\u7684\u8fb9\n\n\u52a0\u4e0a\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u53ef\u6362\u4e58\u8f66\u7ad9\u4e4b\u95f4\u7684\u603b\u6570\u4e3a $m+2$\uff0c\u6839\u636e\u3010\u5f15\u7406\u3011\u4e2d\u7684\u8bf4\u660e\uff0c\u5728\u4e0a\u5c42\u56fe\u4e2d\uff0c\u7528\u4e0b\u6807\u4e3a $i$ \u7684\u4f4d\u7f6e\u8868\u793a\u7f16\u53f7\u4e3a $i$ \u7684\u8f66\u7ad9\uff0c\u5728\u4e0b\u5c42\u56fe\u4e2d\uff0c\u7528\u4e0b\u6807\u4e3a $i+(m+2)$ \u7684\u4f4d\u7f6e\u8868\u793a\u7f16\u53f7\u4e3a $i$ \u7684\u8f66\u7ad9\u3002\n\n**\u56e0\u4e3a\u5728\u8d77\u70b9\u7ad9\u53ef\u4ee5\u76f4\u63a5\u51b3\u5b9a\u521d\u59cb\u7684\u4e58\u5750\u65b9\u5411\uff0c\u4e5f\u4e0d\u53ef\u80fd\u5728\u7ec8\u70b9\u7ad9\u6539\u53d8\u4e58\u5750\u65b9\u5411\uff0c\u6240\u4ee5\u8d77\u70b9\u7ad9\u548c\u7ec8\u70b9\u7ad9\u53ef\u4ee5\u4e0d\u8fde\u4e0a\u4e0b\u8fb9\u3002**\u8fd9\u4e24\u4e2a\u7ad9\u76f4\u63a5\u5b58\u50a8\u5373\u53ef\u3002\n\n```cpp\nfor(int i=1;i<=m;++i)\n{\n    scanf(\"%d%d\",&x,&y);\n    station[i].num=i;  //\u8f66\u7ad9\u7684\u7f16\u53f7\n    station[i].x=x;  //\u8f66\u7ad9\u7684\u7eb5\u5750\u6807\n    station[i].y=y;  //\u8f66\u7ad9\u7684\u6a2a\u5750\u6807\n    AddEdge(i,i+(m+2),1);  //\u4e0a\u5c42\u56fe\u5411\u4e0b\u5c42\u56fe\n    AddEdge(i+(m+2),i,1);  //\u4e0b\u5c42\u56fe\u5411\u4e0a\u5c42\u56fe\n}\nscanf(\"%d%d\",&x,&y);  //\u8d77\u70b9\u7ad9\nstation[0].num=0;\nstation[0].x=x;\nstation[0].y=y;\nscanf(\"%d%d\",&x,&y);  //\u7ec8\u70b9\u7ad9\nstation[m+1].num=m+1;\nstation[m+1].x=x;\nstation[m+1].y=y;\n```\n\n#### 4. \u5c06\u6240\u6709\u53ef\u6362\u4e58\u8f66\u7ad9\u6309\u7b2c\u4e00\u5173\u952e\u5b57\u7eb5\u5750\u6807\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u6a2a\u5750\u6807\u6392\u5e8f\n\n\u7ecf\u8fc7\u6392\u5e8f\u540e\uff0c\u6240\u6709\u5728\u540c\u4e00\u6a2a\u884c\u7684\u8f66\u7ad9\u4e00\u5b9a\u5728\u5e8f\u5217\u4e2d\u76f8\u90bb\u7684\u4f4d\u7f6e\u3002\n\n```cpp\ninline bool cmp1(const Point a,const Point b)  //\u7b2c\u4e00\u5173\u952e\u5b57\u7eb5\u5750\u6807\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u6a2a\u5750\u6807\n{\n\treturn a.x==b.x ? a.y<b.y : a.x<b.x;\n}\nsort(station,station+m+2,cmp1);\n```\n\n#### 5. \u8fde\u63a5\u6240\u6709\u7684\u6a2a\u5411\u8fb9\n\n\u679a\u4e3e\u5e8f\u5217\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u8f66\u7ad9\uff0c\u5982\u679c\u5b83\u4eec\u5728\u540c\u4e00\u6a2a\u884c\u4e0a\uff0c\u5219\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $2 \\times ($\u6a2a\u5750\u6807\u4e4b\u5dee$)$ \u7684\u53cc\u5411\u8fb9\u3002\n\n```cpp\nfor(int i=1;i<=m+1;++i)\n{\n    if(station[i-1].x==station[i].x)  //\u76f8\u90bb\u7684\u4e24\u4e2a\u8f66\u7ad9\u7eb5\u5750\u6807\u76f8\u7b49\uff08\u5373\u5728\u540c\u4e00\u6a2a\u884c\u4e0a\uff09\n    {\n        register int dis=station[i].y-station[i-1].y;  //\u6a2a\u5750\u6807\u4e4b\u5dee\n        AddEdge(station[i-1].num,station[i].num,2*dis);\n        AddEdge(station[i].num,station[i-1].num,2*dis);\n    }\n}\n```\n\n#### 6. \u5c06\u6240\u6709\u53ef\u6362\u4e58\u8f66\u7ad9\u6309\u7b2c\u4e00\u5173\u952e\u5b57\u6a2a\u5750\u6807\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u7eb5\u5750\u6807\u6392\u5e8f\n\n\u7ecf\u8fc7\u6392\u5e8f\u540e\uff0c\u6240\u6709\u5728\u540c\u4e00\u7eb5\u5217\u7684\u8f66\u7ad9\u4e00\u5b9a\u5728\u5e8f\u5217\u4e2d\u76f8\u90bb\u7684\u4f4d\u7f6e\u3002\n\n```cpp\ninline bool cmp2(const Point a,const Point b)  //\u7b2c\u4e00\u5173\u952e\u5b57\u6a2a\u5750\u6807\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u7eb5\u5750\u6807\n{\n\treturn a.y==b.y ? a.x<b.x : a.y<b.y;\n}\nsort(station,station+m+2,cmp2);\n```\n\n#### 7.\u8fde\u63a5\u6240\u6709\u7684\u7eb5\u5411\u8fb9\n\n\u679a\u4e3e\u5e8f\u5217\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u8f66\u7ad9\uff0c\u5982\u679c\u5b83\u4eec\u5728\u540c\u4e00\u7eb5\u5217\u4e0a\uff0c\u5219\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $2 \\times ($\u7eb5\u5750\u6807\u4e4b\u5dee$)$ \u7684\u53cc\u5411\u8fb9\u3002\n\n**\u6ce8\u610f\u5728\u4e0b\u5c42\u56fe\u4e2d\u8fde\u8fb9\uff0c\u5373\u4e0b\u6807\u8981\u52a0\u4e0a $m+2$\u3002**\n\n```cpp\nfor(int i=1;i<=m+1;++i)\n{\n    if(station[i-1].y==station[i].y)  //\u76f8\u90bb\u7684\u4e24\u4e2a\u8f66\u7ad9\u6a2a\u5750\u6807\u76f8\u7b49\uff08\u5373\u5728\u540c\u4e00\u7eb5\u5217\u4e0a\uff09\n    {\n        register int dis=station[i].x-station[i-1].x;  //\u7eb5\u5750\u6807\u4e4b\u5dee\n        AddEdge(station[i-1].num+(m+2),station[i].num+(m+2),2*dis);\n        AddEdge(station[i].num+(m+2),station[i-1].num+(m+2),2*dis);\n    }\n}\n```\n\n\u81f3\u6b64\uff0c\u5df2\u7ecf\u5168\u90e8\u5b8c\u6210\u4e86\u672c\u9898\u7684\u5efa\u56fe\u64cd\u4f5c\u3002\n\n## \u6700\u77ed\u8def\n\n\u4ee5\u201c\u5206\u5c42\u56fe\u201d\u7684\u601d\u60f3\u5efa\u597d\u56fe\u4e4b\u540e\uff0c\u7528\u6807\u51c6\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\u8ba1\u7b97\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u9700\u8981\u5206\u522b\u4ee5**\u4e0a\u5c42\u56fe\u4e2d\u7684\u8d77\u70b9\u7ad9**\u548c**\u4e0b\u5c42\u56fe\u4e2d\u7684\u8d77\u70b9\u7ad9**\u4e3a\u6e90\u70b9\uff08\u5206\u522b\u5bf9\u5e94\u521d\u59cb\u6a2a\u5411\u4e58\u8f66\u548c\u521d\u59cb\u7eb5\u5411\u4e58\u8f66\u7684\u60c5\u51b5\uff09\uff0c\u8ba1\u7b97\u4e00\u6b21\u6700\u77ed\u8def\uff0c\u5e76\u53d6**\u4ee5\u4e0b\u56db\u4e2a\u7ed3\u679c\u7684\u6700\u5c0f\u503c**\u4f5c\u4e3a\u7b54\u6848\uff1a\n\n- \u4ee5\u4e0a\u5c42\u56fe\u4e2d\u7684\u8d77\u70b9\u7ad9\u4e3a\u6e90\u70b9\uff0c\u5230\u4e0a\u5c42\u56fe\u4e2d\u7684\u7ec8\u70b9\u7ad9\u7684\u6700\u77ed\u8def\u5f84\uff1b\n- \u4ee5\u4e0a\u5c42\u56fe\u4e2d\u7684\u8d77\u70b9\u7ad9\u4e3a\u6e90\u70b9\uff0c\u5230\u4e0b\u5c42\u56fe\u4e2d\u7684\u7ec8\u70b9\u7ad9\u7684\u6700\u77ed\u8def\u5f84\uff1b\n- \u4ee5\u4e0b\u5c42\u56fe\u4e2d\u7684\u8d77\u70b9\u7ad9\u4e3a\u6e90\u70b9\uff0c\u5230\u4e0a\u5c42\u56fe\u4e2d\u7684\u7ec8\u70b9\u7ad9\u7684\u6700\u77ed\u8def\u5f84\uff1b\n- \u4ee5\u4e0b\u5c42\u56fe\u4e2d\u7684\u8d77\u70b9\u7ad9\u4e3a\u6e90\u70b9\uff0c\u5230\u4e0b\u5c42\u56fe\u4e2d\u7684\u7ec8\u70b9\u7ad9\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u6211\u4f7f\u7528\u4e86 Dijkstra \u7b97\u6cd5\u3002\n\n```cpp\ninline void Dijkstra(const int s)\n{\n\tfor(int i=0;i<=2*m+3;++i)\n\t{\n\t\tdistance[i]=2147483647;\n\t\tvisited[i]=0;\n\t}\n\tpriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > que;\n\tdistance[s]=0;\n\tque.push(make_pair(0,s));\n\twhile(!que.empty())\n\t{\n\t\tregister int start=que.top().second;\n\t\tque.pop();\n\t\tif(!visited[start])\n\t\t{\n\t\t\tvisited[start]=1;\n\t\t\tfor(int i=head[start];i;i=edge[i].next)\n\t\t\t{\n\t\t\t\tregister int to=edge[i].to;\n\t\t\t\tif(distance[to]>distance[start]+edge[i].value)\n\t\t\t\t{\n\t\t\t\t\tdistance[to]=distance[start]+edge[i].value;\n\t\t\t\t\tque.push(make_pair(distance[to],to));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\nDijkstra(0);\nans=min(distance[m+1],distance[2*m+3]);\nDijkstra(m+2);\nans=min(ans,min(distance[m+1],distance[2*m+3]));\n```\n\n## \u5b8c\u6574 AC \u4ee3\u7801\n\n\u5982\u679c\u60a8\u8ba4\u771f\u5730\u9605\u8bfb\u5230\u4e86\u8fd9\u91cc\uff0c\u60a8\u4e00\u5b9a\u53ef\u4ee5\u81ea\u5df1\u5199\u51fa\u5b8c\u6574\u4ee3\u7801\uff0c\u90a3\u4e48\u4e5f\u6ca1\u6709\u9605\u8bfb\u5b8c\u6574\u4ee3\u7801\u7684\u5fc5\u8981\u5566~\n\n\u5982\u679c\u60a8\u786e\u6709\u9700\u6c42\uff0c\u53ef\u4ee5\u901a\u8fc7[\u8fd9\u91cc](https://www.luogu.com.cn/paste/s2ff93w5)\u67e5\u770b\u3002\u7bc7\u5e45\u6709\u9650\uff0c\u6545\u6211\u628a\u5b83\u653e\u5728\u4e86\u4e91\u526a\u8d34\u677f\u4e2d\u3002",
        "postTime": 1625058633,
        "uid": 386876,
        "name": "BurningEnderDragon",
        "ccfLevel": 6,
        "title": "P3831 [SHOI2012]\u56de\u5bb6\u7684\u8def \u9898\u89e3 | \u5206\u5c42\u56fe\u6700\u77ed\u8def\u6a21\u677f\u9898"
    },
    {
        "content": "### \u9898\u610f\n\u6709\u4e00 $n$ \u7eb5 $n$ \u6a2a\u7684\u5730\u94c1\u7f51\uff0c\u5171 $n^2$ \u4e2a\u8f66\u7ad9\uff0c\u5176\u4e2d\u6709 $m$ \u4e2a\u6362\u4e58\u7ad9\uff0c\u6362\u4e58\u6307\u6a2a\u5411\u3001\u7eb5\u5411\u7ebf\u8def\u4e92\u6362\u3002\n\n\u5730\u94c1\u8fd0\u884c\u4e00\u7ad9\u9700\u8981 $2$ \u5206\u949f\uff0c\u7ad9\u5185\u6362\u4e58\u9700\u8981 $1$ \u5206\u949f\u3002\n\n### \u9898\u89e3\n**\u5206\u5c42\u56fe\u4e0a\u6700\u77ed\u8def**\n\n\u8003\u8651\u628a\u5730\u94c1\u7f51\u62c6\u6210\u7eb5\u3001\u6a2a\u4e24\u5c42\uff0c\u7136\u540e\u4f60\u5c31\u4f1a\u60ca\u5947\u5730\u53d1\u73b0\u8fd9\u9898\u505a\u5b8c\u4e86\u3002\n\n\u628a\u8d77\u70b9\u3001\u7ec8\u70b9\u90fd\u5f53\u6362\u4e58\u7ad9\u5904\u7406\uff0c$m\\leftarrow m+2$ \uff0c\u7b2c $i$ \u4e2a\u70b9\u88ab\u62c6\u6210\u7b2c $i$ \u548c $i+m$ \u4e2a\u70b9\n\n\u4e24\u5c42\u56fe\u4e0a\u7684\u6362\u4e58\u7ad9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\uff0c\u6a2a\u5c42\u4e0a\u540c\u4e00\u884c\u7684\u76f8\u90bb\u6362\u4e58\u7ad9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $|y_{i}-y_{i+1}|\\times 2$ \u7684\u8fb9\uff0c\u7eb5\u5c42\u4e0a\u540c\u4e00\u5217\u7684\u76f8\u90bb\u6362\u4e58\u7ad9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $|x_{i}-x_{i+1}|\\times 2$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u4ee5 $m-1,m\\times 2 -1$ \u4e3a\u8d77\u70b9\uff0c\u4ee5 $m,m\\times 2$ \u4e3a\u7ec8\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u8bb0\u5f97 $ans=\\min(dis_m,dis_{m\\times 2})$ \u548c\u5224\u65e0\u89e3\u60c5\u51b5\u3002\n\n\u6ce8\u610f\u8fde\u8fb9\u7684\u65f6\u5019\u8981\u5148\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log m)$\n\n### \u4ee3\u7801\n**\u4ee5\u4e0b\u4ee3\u7801\u5305\u542b\u5927\u91cf\u538b\u884c\u3001C++11\u8bed\u6cd5\uff0c\u8bf7\u8c28\u614e\u98df\u7528**\n```cpp\n#include<queue>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct dot{int x,y,num;}dots[100005];\nstruct edge{int v,w;};\nstruct node{int u,dis;bool operator <(node x)const{return dis>x.dis;}};\nint n,m,x1,y1,x2,y2,dis[200005],vis[200005];\nvector <edge> g[200005];\npriority_queue <node> q;\nvoid add(int u,int v,int w){g[u].push_back((edge){v,w}),g[v].push_back((edge){u,w});}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m),m+=2;\n\tfor(int i=1;i<=m;i++)scanf(\"%d %d\",&dots[i].x,&dots[i].y),dots[i].num=i;\n\tfor(int i=1;i<=m;i++)add(i,i+m,1);\n\tsort(dots+1,dots+1+m,[](dot a,dot b){return a.x==b.x?a.y<b.y:a.x<b.x;});\n\tfor(int i=1;i<m;i++)if(dots[i].x==dots[i+1].x)add(dots[i].num,dots[i+1].num,(dots[i+1].y-dots[i].y)*2);\n\tsort(dots+1,dots+1+m,[](dot a,dot b){return a.y==b.y?a.x<b.x:a.y<b.y;});\n\tfor(int i=1;i<m;i++)if(dots[i].y==dots[i+1].y)add(dots[i].num+m,dots[i+1].num+m,(dots[i+1].x-dots[i].x)*2);\n\t//Dijkstra\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[m-1]=dis[m+m-1]=0;\n\tq.push((node){m-1,0});\n\tq.push((node){m+m-1,0});\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().u;q.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(edge i:g[u])\n\t\t{\n\t\t\tint v=i.v,w=i.w;\n\t\t\tif(dis[v]>dis[u]+w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tif(!vis[v])\n\t\t\t\t\tq.push((node){v,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n\tint ans=min(dis[m],dis[m+m]);\n\tprintf(\"%d\",ans==0x3f3f3f3f?-1:ans);\n}\n\n```",
        "postTime": 1620713231,
        "uid": 87434,
        "name": "_Life_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3831 \u3010SHOI2012 \u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8bf4\u7a7f\u4e86\u53ea\u662f\u4e00\u4e2a\u5355\u6e90\u591a\u6c47\u6b63\u6743\u56fe\u6700\u77ed\u8def\uff08dij\u5728\u5411\u4f60\u62db\u624b\uff01\uff09\uff0c\u4f46\u662f\u5efa\u56fe\u975e\u5e38\u9ebb\u70e6\u3002\n### \u9898\u76ee\u5206\u6790\n\u4e00\u5171 $n^2$ \u4e2a\u7ad9\u70b9\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u5176\u5b9e\u53ea\u6709 $m+2$ \u4e2a\uff0c\u5206\u522b\u662f $m$ \u4e2a\u6362\u4e58\u7ad9\u548c\u8d77\u70b9\u7ec8\u70b9\u3002  \n\n\u7531\u9898\u610f\u53ef\u5f97\uff0c\u5750\u5730\u94c1\u65f6\u6bcf\u8f6c\u4e00\u4e2a $90\\degree$ \u89d2\uff0c\u5c31\u8981\u8fdb\u884c\u4e00\u6b21\u7ad9\u5185\u6362\u4e58\uff08\u5f53\u7136\u4e0d\u80fd\u6362\u6210\u7684\u9664\u5916\uff09\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u8fd9 $m+2$ \u4e2a\u7ed3\u70b9\u62c6\u6210 $2m+4$ \u4e2a\uff0c\u5176\u4e2d\u524d $m+2$ \u4e2a\u8868\u793a\u6a2a\u5411\u7684\u7ed3\u70b9\uff0c\u540e $m+2$ \u4e2a\u8868\u793a\u7eb5\u5411\u7684\u7ed3\u70b9\u3002  \n\n\u63a5\u4e0b\u6765\u5c31\u8981\u8fde\u8fb9\u4e86\u3002\u9996\u5148\u6211\u4eec\u628a\u8fd9 $m+2$ (\u6ce8\u610f\u4e86\u4e0d\u662f2\u500d)\u4e2a\u7ed3\u70b9\u6309 $x$ \u6392\u5e8f\u3002\u7136\u540e\u5982\u679c $x_i=x_{i+1}$\uff0c\u90a3\u5c31\u8fde\u4e00\u6761\u53cc\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a $2(y_{i+1}-y_i)$\u3002\uff08\u5373\u4e0d\u9700\u8981\u6362\u4e58\u5c31\u53ef\u4ee5\u5230\u8fbe\uff09  \n\n\u540c\u7406\uff0c\u63a5\u4e0b\u6765\u518d\u6309 $y$ \u6392\u5e8f\uff0c\u5982\u679c $y_i=y_{i+1}$\uff0c\u90a3\u5c31\u8fde\u4e00\u6761\u53cc\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a $2(x_{i+1}-x_i)$\uff0c\u4f46\u6b64\u65f6\u8fde\u63a5\u7684\u4e24\u4e2a\u7ed3\u70b9\u7f16\u53f7\u5206\u522b\u8981\u52a0\u4e0a $m+2$ \uff08\u5426\u5219\u7684\u8bdd\u6362\u4e58\u7ad9\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff09\n\n\u7136\u540e\u628a\u6bcf\u4e2a\u53ef\u6362\u6210\u7684\u7ed3\u70b9\u5411\u81ea\u5df1\uff08\u53e6\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u81ea\u5df1\uff09\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $1$ \u7684\u53cc\u5411\u8fb9\uff0c\u5b8c\u6210\u201c\u6362\u4e58\u201d\u64cd\u4f5c\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u8d77\u70b9\u7ad9\u5c31\u6709\u4e24\u4e2a\u4e86\uff0c\u7f16\u53f7\u5206\u522b\u662f $m+1$ \u548c $2m+3$\uff0c\u7ec8\u70b9\u7ad9\u4e5f\u6709\u4e24\u4e2a\u4e86\uff0c\u5206\u522b\u662f $m+2$ \u548c $2\\times m+4$\u3002\u4e3a\u4e86\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u65b9\u4fbf\uff0c\u6211\u4eec\u4ee4 $S=0,T=2m+5$\uff0c\u7136\u540e\u5c06 $S$ \u4e0e $m+1,2m+3$ \u5206\u522b\u8fde\u63a5\u957f\u5ea6\u4e3a $0$ \u7684\u53cc\u5411\u8fb9\uff0c$T$ \u4e0e $m+2,2m+4$ \u4e5f\u5206\u522b\u8fde\u63a5\u957f\u5ea6\u4e3a $0$ \u7684\u53cc\u5411\u8fb9\u3002\n\n\u601d\u8def\u5c31\u662f\u8fd9\u4e9b\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u7406\u89e3\uff0c\u4e0d\u59a8\u770b\u770b\u4ee3\u7801\u5427\u3002\n### \u4ee3\u7801\n\u521d\u59cb\u5316\u7684\u90e8\u5206\u5927\u6982\u662f\u8fd9\u6837\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxm=1e5+9;\nconst int inf=2e9;\nstruct station{int x,y;}p[maxm];\nstruct node\n{\n\tint u,c;\n\tbool operator < (const node& a) const {return c>a.c;}\n};\nvector <int> to[maxm<<1],w[maxm<<1];\nbool ok[maxm<<1];\nint n,m,nNode,S,T,d[maxm<<1],id[maxm];\ninline int read()\n{\n \tint x=0,f=1;\n \tchar c=getchar();\n \twhile(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n \twhile(isdigit(c)){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n \treturn x*f;\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;++i){p[i].x=read();p[i].y=read();}\n\tp[m+1].x=read();p[m+1].y=read();\n\tp[m+2].x=read();p[m+2].y=read();\n\treturn 0;\n}\n```\n\u6211\u4eec\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53station\u6765\u5b58\u653e\u7ed3\u70b9\u7684 $x,y$ \u503c\u3002to,w\u8fd9\u4e24\u4e2avector,\u7ed3\u6784\u4f53node,inf,d\u6570\u7ec4,ok\u6570\u7ec4\u90fd\u662fdij\u6a21\u677f\u91cc\u7684\u542b\u4e49\uff0cS\u548cT\u5373\u4e3a\u6e90\u70b9\u548c\u6c47\u70b9\u3002id\u6570\u7ec4\u7528\u4e8e\u505a\u7ed3\u70b9\u7684\u6392\u5e8f\u3002nNode\u5219\u5b58\u653e\u6700\u7ec8\u7684\u7ed3\u70b9\u4e2a\u6570\uff0c\u8fd9\u91cc\u53d6\u4e86 $2m+6$\u3002\n\n\u7136\u540e\u6211\u4eec\u5199\u4e00\u4e2abuild\u51fd\u6570\u6765\u5b8c\u6210\u4e0a\u9762\u6240\u63d0\u5230\u7684\u5927\u91cf\u7684\u5efa\u56fe\u4efb\u52a1\u3002\n```cpp\nvoid build()\n{\n}\n```\n\u9996\u5148\u521d\u59cb\u5316id\u6570\u7ec4\uff0c\u5373id[i]=i\uff1a\n```cpp\n\tfor(int i=1;i<=m+2;++i) id[i]=i;\n```\n\u63a5\u7740\u6309 $x$ \u6392\u5e8f\uff0c\u8fd9\u91cc\u628a \u201c\u6309 $x$ \u6392\u5e8f\u201d\uff0c\u201c\u6309 $y$ \u6392\u5e8f\u201d\u6240\u9700\u7684\u51fd\u6570\u4e00\u5e76\u7ed9\u51fa\uff1a\n```cpp\nbool cmpX(const int& a,const int& b)\n{\n\treturn p[a].x<p[b].x||p[a].x==p[b].x&&p[a].y<p[b].y;\n}\nbool cmpY(const int&a,const int&b)\n{\n\treturn p[a].y<p[b].y||p[a].y==p[b].y&&p[a].x<p[b].x;\n}\n```\n\u6ce8\u610f\u201c\u5982\u679c\u76f8\u7b49\u5c31\u4e8c\u6b21\u5224\u65ad\u201d\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8fc7\u7a0b\uff0c\u4e0d\u53ef\u9057\u6f0f\u3002\n\n\u90a3\u4e48\u6309 $x$ \u6392\u5e8f\u5373\u4e3a\uff1a\n```cpp\n\tsort(id+1,id+m+3,cmpX);\n```\n\u6ce8\u610f\u6b64\u65f6id\u7684\u957f\u5ea6\u662f $m+2$ \u4e0d\u662f $m$ \u4e86\u3002\n\n\u7136\u540e\u904d\u5386\u6574\u4e2aid\u6570\u7ec4\uff0c\u5c06 $x$ \u503c\u76f8\u540c\u7684\u4e24\u70b9\u8fde\u8fb9\u3002\n\n\u5148\u7ed9\u8fde\u8fb9\u51fd\u6570\uff1a\n```cpp\nvoid add(int a,int b,int c)\n{\n\tto[a].push_back(b);w[a].push_back(c);\n\tto[b].push_back(a);w[b].push_back(c);\n}\n```\n\u90a3\u4e48\n```cpp\n\tfor(int i=1;i<=m+1;++i) if(p[id[i+1]].x==p[id[i]].x)\n\t\tadd(id[i],id[i+1],p[id[i+1]].y-p[id[i]].y<<1);\n```\n\n\u540c\u7406\uff0c\u73b0\u5728\u6211\u4eec\u6309 $y$ \u6392\u5e8f\uff0c\u7136\u540e\u8fde\u8fb9\uff1a\n```cpp\n\tsort(id+1,id+m+3,cmpY);\n\tfor(int i=1;i<=m+1;++i) if(p[id[i+1]].y==p[id[i]].y)\n\t\tadd(id[i]+m+2,id[i+1]+m+2,p[id[i+1]].x-p[id[i]].x<<1);\n```\n\u5728\u6b64\u4e4b\u540e\uff0c\u6211\u4eec\u8981\u628a\u7ad9\u5185\u6362\u4e58\u7684\u8fb9\u8fde\u4e0a\uff1a\n```cpp\n\tfor(int i=1;i<=m;++i)\n\t\tadd(i,i+m+2,1);\n```\n\u6700\u540e\u5904\u7406\u4e00\u4e0bS,T\u548cnNode\u3002\n```cpp\n\tS=0;\n\tT=2*m+5;\n\tadd(S,m+1,0);add(S,2*m+3,0);\n\tadd(m+2,T,0);add(2*m+4,T,0);\n\tnNode=2*m+6;\n````\n\u63a5\u7740\u6211\u4eec\u76f4\u63a5\u8dd1dij\u5373\u53ef\uff0c\u4e3b\u51fd\u6570\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;++i){p[i].x=read();p[i].y=read();}\n\tp[m+1].x=read();p[m+1].y=read();\n\tp[m+2].x=read();p[m+2].y=read();\n\tbuild();\n\tprintf(\"%d\\n\",dijkstra());\n\treturn 0;\n}\n```\n\u5168\u90e8\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxm=1e5+9;\nconst int inf=2e9;\nstruct station{int x,y;}p[maxm];\nstruct node\n{\n\tint u,c;\n\tbool operator < (const node& a) const {return c>a.c;}\n};\nvector <int> to[maxm<<1],w[maxm<<1];\nbool ok[maxm<<1];\nint n,m,nNode,S,T,d[maxm<<1],id[maxm];\nvoid add(int a,int b,int c)\n{\n\tto[a].push_back(b);w[a].push_back(c);\n\tto[b].push_back(a);w[b].push_back(c);\n}\nbool cmpX(const int& a,const int& b)\n{\n\treturn p[a].x<p[b].x||p[a].x==p[b].x&&p[a].y<p[b].y;\n}\nbool cmpY(const int&a,const int&b)\n{\n\treturn p[a].y<p[b].y||p[a].y==p[b].y&&p[a].x<p[b].x;\n}\nvoid build()\n{\n\tfor(int i=1;i<=m+2;++i) id[i]=i;\n\tsort(id+1,id+m+3,cmpX);\n\tfor(int i=1;i<=m+1;++i) if(p[id[i+1]].x==p[id[i]].x)\n\t\tadd(id[i],id[i+1],p[id[i+1]].y-p[id[i]].y<<1);\n\tsort(id+1,id+m+3,cmpY);\n\tfor(int i=1;i<=m+1;++i) if(p[id[i+1]].y==p[id[i]].y)\n\t\tadd(id[i]+m+2,id[i+1]+m+2,p[id[i+1]].x-p[id[i]].x<<1);\n\tfor(int i=1;i<=m;++i)\n\t\tadd(i,i+m+2,1);\n\tS=0;\n\tT=2*m+5;\n\tadd(S,m+1,0);add(S,2*m+3,0);\n\tadd(m+2,T,0);add(2*m+4,T,0);\n\tnNode=2*m+6;\n}\nint dijkstra()\n{\n\tfill(d,d+nNode+1,inf);\n\tpriority_queue <node> Q;\n\td[S]=0;\n\tQ.push((node){S,0});\n\twhile(!Q.empty())\n\t{\n\t\tint u=Q.top().u;Q.pop();\n\t\tif(u==T) return d[T];\n\t\tif(ok[u]) continue;\n\t\tok[u]=true;\n\t\tfor(int i=0;i<to[u].size();++i)\n\t\t{\n\t\t\tint v=to[u][i];\n\t\t\tint cost=d[u]+w[u][i];\n\t\t\tif(d[v]<=cost) continue;\n\t\t\td[v]=cost;\n\t\t\tQ.push((node){v,d[v]});\n\t\t}\n\t}\n\treturn -1;\n}\ninline int read()\n{\n \tint x=0,f=1;\n \tchar c=getchar();\n \twhile(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n \twhile(isdigit(c)){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n \treturn x*f;\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;++i){p[i].x=read();p[i].y=read();}\n\tp[m+1].x=read();p[m+1].y=read();\n\tp[m+2].x=read();p[m+2].y=read();\n\tbuild();\n\tprintf(\"%d\\n\",dijkstra());\n\treturn 0;\n}\n```\n$$\\texttt{The End.}$$",
        "postTime": 1596450895,
        "uid": 270791,
        "name": "WanderingTrader",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "[P3831 SHOI2012 \u56de\u5bb6\u7684\u8def](https://www.luogu.org/problemnew/show/P3831)\n\n### 1.\u6570\u7ec4\u5927\u5c0f\n\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u4e2a\u9898\uff0cn\u226420000,m\u2264100000\uff0c\u5b8c\u4e86\uff0c\u5b58\u56fe\u80af\u5b9a\u7206\u4e86\n\n\u540e\u6765\u53d1\u73b0\u4e0d\u7528\u628a\u6bcf\u4e2a\u7f51\u683c\u91cc\u7684\u70b9\u90fd\u5b58\u4e0b\u6765\n\n\u6211\u4eec\u53ea\u9700\u8981**\u628a\u53ef\u4ee5\u8f6c\u5f2f\u7684\u70b9\u5b58\u4e0b\u6765\uff08\u5305\u62ec\u8d77\u70b9\u548c\u7ec8\u70b9\uff09**\n\n~~\uff08\u4e0d\u7136\u6ca1\u6cd5\u5b58\u554a\uff09~~\n\n\u5177\u4f53\u5f00\u591a\u5927\u89c1\u7a0b\u5e8f\n\n### 2.\u5206\u5c42\u56fe\u6700\u77ed\u8def\n\n\u5bf9\u4e00\u4e2a\u53ef\u6362\u4e58\u7684\u7ad9\u5728\u7f51\u683c\u4e2d\u6a2a\u5411\u548c\u7eb5\u5411\u53ef\u4ee5\u8d70\n\n\u6211\u4eec\u53ef\u4ee5\u5efa\u4e24\u5c42\u56fe\uff0c\u4e00\u5c42\u8868\u793a\u7eb5\u5411\u8fb9\uff0c\u4e00\u5c42\u8868\u793a\u6a2a\u5411\u8fb9\n\n\u8f6c\u5411\u5c31\u4ee3\u8868\u4ece\u4e00\u5c42\u56fe\u5230\u53e6\u4e00\u5c42\uff08\u53ef\u770b\u770b\u697c\u4e0bdalao\u7684\u9898\u89e3\uff09\n\n\u7136\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u597d\n\n### 3.\u8d77\u70b9\u548c\u7ec8\u70b9\n\n\u6211\u4eec\u5728\u8f93\u5165\u53ef\u6362\u4e58\u7684\u7ad9\u65f6\u987a\u4fbf\u8f93\u5165\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\n\n\u6309\u8f93\u5165\u987a\u5e8f\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u7ad9\u70b9\n\n\u6240\u4ee5**\u8d77\u70b9\u662fm+1\uff0c\u7ec8\u70b9\u662fm+2**\n\n~~\uff08\u8fd9\u4e2a\u95ee\u9898\u66fe\u56f0\u6270\u849f\u84bb\u8bb8\u4e45\uff09~~\n\n### 4.\u6ce8\u610f\uff1a\n\n**1.\u628a\u4e0a\u4e0b\u4e24\u5c42\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u8fde\u63a5**\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u53ef\u4ee5\u6a2a\u5411\u8d70\u4e5f\u53ef\u4ee5\u7eb5\u5411\u8d70\uff0c\u8fde\u8fb9\u540e\u4f1a\u53d6\u5230\u6700\u5c0f\u503c\uff08\u5728\u5f88\u591a\u5206\u5c42\u7684\u9898\u4e2d\u90fd\u9700\u8981\u8fd9\u6837\u8fde\uff09\n\n**2.** \u5730\u94c1\u8fd0\u884c 1 \u7ad9\u9700\u8981 2 \u5206\u949f\uff0c\u800c\u7ad9\u5185\u6362\u4e58\u9700\u8981\u6b65\u884c 1 \u5206\u949f\n\n**\u6240\u4ee5\u4e24\u4e2a\u7ad9\u4e4b\u95f4\u7684\u8fb9\u6743\u9700\u89812**\n\n**\u4e0a\u4e0b\u4e24\u5c42\u8fde\u7ebf\u7684\u8fb9\u6743\u4e3a1**\n\n**3.** \u4e00\u4e2a\u597d\u4e60\u60ef\uff1a\u7528\u6362\u884c\u6216\u51fd\u6570**\u628a\u4ee3\u7801\u5206\u5757**\n\n\u4fbf\u4e8e\u68c0\u67e5\uff0c\u601d\u8def\u4e5f\u66f4\u6e05\u6670\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<algorithm>\n#include<cctype>\nusing namespace std;\ninline int read(){\n\tchar ch=getchar();int f=1,s=0;\n\twhile(!isdigit(ch))){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\ts=s*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*s;\n}\n\nconst int M=100000*4*2+5,N=100000*2+5;//\u6ce8\u610f\u6570\u636e\u8303\u56f4 N=maxm*2(\u6709\u4e24\u5c42)\uff0cM=maxm*4*2(\u6bcf\u4e2a\u70b9\u6700\u591a4\u4e2a\u65b9\u5411,\u65e0\u5411\u8fb9) \nint n,m,s,t;\nstruct Edge{\t//\u5b58\u56fe \n    int v,w,next;\n}e[M];\nint head[M],cnt;\ninline void add_edge(int u,int v,int w){\n    e[++cnt].next=head[u],e[cnt].v=v,e[cnt].w=w,head[u]=cnt;\n    return;\n}\n\nstruct zb{\t//\u5efa\u8fb9\u6240\u7528\u7684\u7ed3\u6784\u4f53\u548c\u6392\u5e8f\u7684\u51fd\u6570 \n\tint x,y;\n\tint id;//\u4fdd\u5b58\u7f16\u53f7\uff0csort \n}khc[N];\nbool cmpx(zb a,zb b){\n\tif(a.x==b.x) return a.y<b.y;\n\treturn a.x<b.x;\n}\nbool cmpy(zb a,zb b){\n\tif(a.y==b.y) return a.x<b.x;\n\treturn a.y<b.y;\n}\n\nstruct node{\t//dijstra\u6700\u77ed\u8def \n\tint id,dis;\n\tnode(){};\n\tnode(int id,int dis):id(id),dis(dis){};\n\tbool operator < (const node &a)const{\n\t\treturn dis>a.dis;\n\t}\n};\nint dis[N];\nbool vis[N];\npriority_queue<node> q;\nvoid dij(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tq.push(node(s,0));dis[s]=0;\n\twhile(!q.empty()){\n\t\tint u=q.top().id;q.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor(register int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].v;\n\t\t\tif(dis[v]>dis[u]+e[i].w){\n\t\t\t\tdis[v]=dis[u]+e[i].w;\n\t\t\t\tq.push(node(v,dis[v]));\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nint main(){\n\tn=read();m=read();s=m+1,t=m+2\uff1b\t//\u8bfb\u5165 \n\tfor(register int i=1;i<=m+2;i++){\n\t\tkhc[i].id=i;\n\t\tkhc[i].x=read();khc[i].y=read();\t//\u8bb0\u4e0b\u53ef\u6362\u4e58\u7684\u70b9(\u8d77\u70b9,\u7ec8\u70b9\u4e5f\u7b97) \n\t}\n\t\n\tsort(khc+1,khc+m+3,cmpx);\t//\u6a2a\u7684\u8fb9(\u7b2c\u4e00\u5c42)\n\tfor(register int i=1;i<m+2;i++){\n\t\tzb u=khc[i],v=khc[i+1];\n\t\tif(u.x==v.x) add_edge(u.id,v.id,2*(v.y-u.y)),add_edge(v.id,u.id,2*(v.y-u.y)); \n\t}\n\tsort(khc+1,khc+m+3,cmpy);\t//\u7ad6\u7684\u8fb9(\u7b2c\u4e8c\u5c42)\n\tfor(register int i=1;i<m+2;i++){\n\t\tzb u=khc[i],v=khc[i+1];\n\t\tif(u.y==v.y) add_edge(u.id+m+2,v.id+m+2,2*(v.x-u.x)),add_edge(v.id+m+2,u.id+m+2,2*(v.x-u.x));\n\t}\n\tfor(register int i=1;i<=m;i++){\t//\u8fde\u63a5\u4e24\u5c42 \n\t\tadd_edge(i,i+m+2,1),add_edge(i+m+2,i,1);\n\t}\n\tadd_edge(m+1,m+1+m+2,0),add_edge(m+1+m+2,m+1,0);//\u628a\u4e0a\u4e0b\u7684\u8d77\u70b9\u7ec8\u70b9\u8fde\u8d77\u6765 \n\tadd_edge(m+2,m+2+m+2,0),add_edge(m+2+m+2,m+2,0);\n\t\n\tdij();\n\tif(dis[t]>1e9) printf(\"-1\\n\");\n\telse printf(\"%d\\n\",dis[t]);\n\treturn 0;\n}\n/*\n\u5206\u5c42\u56fe \n\u5728\u4e00\u4e2a\u6b63\u5e38\u7684\u56fe\u4e0a\u53ef\u4ee5\u8fdb\u884ck\u6b21\u51b3\u7b56\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u51b3\u7b56\uff0c\u4e0d\u5f71\u54cd\u56fe\u7684\u7ed3\u6784\uff0c\u53ea\u5f71\u54cd\u76ee\u524d\u7684\u72b6\u6001\u6216\u4ee3\u4ef7\u3002\n*/\n\n```\n\u7ed3\u675f~",
        "postTime": 1548060015,
        "uid": 103655,
        "name": "\u4e00\u53ea\u840c\u65b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "\u5efa\u56fe\u7684\u90fd\u662f\u90aa\u6559\u5427\u3002\u3002\u3002\n\n---\n\n\u672c\u9898\u53ef\u4ee5\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u770b\u4e3a\u4e2d\u8f6c\u7ad9\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u53ea\u80fd\u5728\u4e2d\u8f6c\u7ad9\u4e4b\u95f4\u79fb\u52a8\u3002\n\n\u663e\u7136\uff0c\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\u7684\u4e2d\u8f6c\u7ad9\u6ca1\u6709\u5fc5\u8981\u6765\u56de\u8d70\u52a8\uff0c\u4e2d\u8f6c\u7ad9\u7684\u552f\u4e00\u4f5c\u7528\u5c31\u662f\u6362\u4e58\u3002\n\n\u6362\u8a00\u4e4b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e2d\u8f6c\u7ad9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5b83\u6362\u4e58\u65f6\u7684\u4f5c\u7528\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u540c\u884c\u540c\u5217\u7684\u4e2d\u8f6c\u7ad9\uff0c\u4e4b\u95f4\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a\u8ddd\u79bb*2+1\u7684\u8fb9\uff0c\u7136\u540e\u8dd1\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\u7531\u4e8e\u7ec8\u70b9\u5728\u4e8b\u5b9e\u4e0a\u4e0d\u8d77\u6362\u4e58\u4f5c\u7528\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u8981\u51cf\u4e00\u3002\n\n\u5f53\u7136\uff0c\u672c\u9898\u8981\u662f\u771f\u7684\u5efa\u8fb9\u7a7a\u95f4\u5c31\u4f1a\u7a0d\u6709\u6076\u81ed\uff0c\u6240\u4ee5\u76f4\u63a5\u5728dijkstra\u8f6c\u79fb\u7684\u65f6\u5019\u6309\u884c\u5217\u5bfb\u627e\u5373\u53ef\u3002\n\n\uff08\u636e\u8bf4\u672c\u9898\u5361spfa\uff0c\u53ef\u662f\u76ee\u524d\u4e3a\u6b62\u6211\u4e5f\u6ca1\u770b\u5230\u88ab\u5361\u7684\uff09\n\n------\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nnamespace StandardIO {\n\n\ttemplate<typename T> inline void read (T &x) {\n\t\tx=0;T f=1;char c=getchar();\n\t\tfor (; c<'0'||c>'9'; c=getchar()) if (c=='-') f=-1;\n\t\tfor (; c>='0'&&c<='9'; c=getchar()) x=x*10+c-'0';\n\t\tx*=f;\n\t}\n\ttemplate<typename T> inline void write (T x) {\n\t\tif (x<0) putchar('-'),x=-x;\n\t\tif (x>=10) write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n\n}\n\nusing namespace StandardIO;\n\nnamespace Solve {\n\t\n\tconst int N=20020;\n\tconst int INF=2147483647;\n\t\n\tint n,m;\n\tstruct node {\n\t\tint x,y;\n\t} mp[100100],s,t;\n\tint d[100100],v[100100];\n\tvector<int> x[N],y[N];\n\t\n\tinline void dijkstra () {\n\t\tfor (register int i=1; i<=m+2; ++i) {\n\t\t\td[i]=INF,v[i]=0;\n\t\t}\n\t\tpriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;\n\t\td[m+1]=0;\n\t\tq.push(make_pair(d[m+1],m+1));\n\t\twhile (!q.empty()) {\n\t\t\tint now=q.top().second;q.pop();\n\t\t\tfor (register int i=0; i<x[mp[now].x].size(); ++i) {\n\t\t\t\tif (x[mp[now].x][i]==now) continue;\n\t\t\t\tif (d[x[mp[now].x][i]]>d[now]+2*abs(mp[now].y-mp[x[mp[now].x][i]].y)+1) {\n\t\t\t\t\td[x[mp[now].x][i]]=d[now]+2*abs(mp[now].y-mp[x[mp[now].x][i]].y)+1;\n\t\t\t\t\tq.push(make_pair(d[x[mp[now].x][i]],x[mp[now].x][i]));\n\t\t\t\t} \n\t\t\t}\n\t\t\tfor (register int i=0; i<y[mp[now].y].size(); ++i) {\n\t\t\t\tif (y[mp[now].y][i]==now) continue;\n\t\t\t\tif (d[y[mp[now].y][i]]>d[now]+2*abs(mp[now].x-mp[y[mp[now].y][i]].x)+1) {\n\t\t\t\t\td[y[mp[now].y][i]]=d[now]+2*abs(mp[now].x-mp[y[mp[now].y][i]].x)+1;\n\t\t\t\t\tq.push(make_pair(d[y[mp[now].y][i]],y[mp[now].y][i]));\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\n\tinline void Main () {\n\t\tread(n),read(m);\n\t\tfor (register int i=1; i<=m+2; ++i) {\n\t\t\tread(mp[i].x),read(mp[i].y); \n\t\t\tx[mp[i].x].push_back(i),y[mp[i].y].push_back(i);\n\t\t}\n\t\tdijkstra();\n\t\twrite(d[m+2]-1);\n\t}\n\n}\n\nint main () {\n\tSolve::Main();\n}\n```",
        "postTime": 1563769555,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "\u4ed4\u7ec6\u5ba1\u9898\uff0c\u53ef\u77e5\u8fd9\u662f\u4e00\u4e2a\u7f51\u683c\u56fe\uff0c\u8dd1\u6700\u77ed\u8def\u65f6\u53ea\u80fd\u5728\u7ed9\u5b9a\u7684$m$\u4e2a\u70b9\u8f6c\u5411\u3002\n\n\u56e0\u6b64\uff0c\u505a\u9898\u65f6\u9700\u8981**\u591a\u6b21\u51b3\u7b56**\uff0c\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u7684\u7684\u662f**\u5206\u5c42\u56fe**\u3002\n\n\u4f46\u672c\u9898\u7684\u96be\u70b9\u5c31\u5728\u4e8e**\u5982\u4f55\u6784\u5efa\u5206\u5c42\u56fe**\u3002\n\n\u5bf9\u4e8e\u7f51\u7edc\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u56fe\u5206\u6210\u4e24\u5c42\uff0c\u5176\u4e2d\u7b2c$1$\u5c42\u4e3a\u6a2a\u5411\u8d70\uff0c\u7b2c$2$\u5c42\u4e3a\u7eb5\u5411\u8d70\u3002\n\u89e3\u51b3\u4e86\u8fd9\u4e2a\u96be\u70b9\uff0c\u4fbf\u53ef\u4ee5\u8f7b\u677e\u7684\u5957\u4e0a\u6700\u77ed\u8def\u6a21\u677f\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff01\n```cpp\n#include<bits/stdc++.h>\n#define RI register int\n#define du pair<int,int>\n#define s second \n#define ru(x) q.push((du){-f[x],x})\n#define ad(x,y,z) add(x,y,z),add(y,x,z);\nusing namespace std;\nconst int da=2147483647;\nconst int N=100007;\nconst int M=200007;\nstruct wu{\n\tint n,t,s;\n}a[M<<2];\nstruct fn{\n\tint x,y,t;\n}d[M]; \nint h[N<<1],f[N<<1],p;bool b[N<<1];\ninline void add(int u,int v,int s){\n\tp=-~p;a[p].s=s;\n\ta[p].t=v;a[p].n=h[u];\n\th[u]=p;\n} \ninline bool cmp1(fn a,fn b){return a.x<b.x||a.x==b.x&&a.y<b.y;}\ninline bool cmp2(fn a,fn b){return a.y<b.y||a.y==b.y&&a.x<b.x;}\nint main(){\n\tpriority_queue<du>q;\t\n\tRI n,m,u,s,v,qd,zd;\n\tscanf(\"%d%d\",&n,&m);\n\tqd=-~m;zd=-~qd;m+=2;\n\tfor(RI i=1;i<=m;i=-~i){\n\t\tscanf(\"%d%d\",&d[i].x,&d[i].y);\n\t\td[i].t=i;\n\t}\t\n\tsort(d+1,d+m+1,cmp1);\n\tfor(RI i=1;i<m;i=-~i)\n\t\tif(d[i].x==d[-~i].x)\n\t\t\tad(d[i].t,d[-~i].t,d[-~i].y-d[i].y<<1);\n\tsort(d+1,d+m+1,cmp2);\n\tfor(RI i=1;i<m;i=-~i)\n\t\tif(d[i].y==d[-~i].y)\n\t\t\tad(d[i].t+m,d[-~i].t+m,d[-~i].x-d[i].x<<1);\n\tfor(RI i=1;i<m-1;i=-~i)\n\t\tad(i,i+m,1);\n\tad(m-1,(m<<1)-1,0);ad(m,m<<1,0);\n\tfor(RI i=1;i<=(m<<1);i=-~i) f[i]=da;\n\tru(qd);f[qd]=0;\n\twhile(q.size()){//dijkstra\n\t\tu=q.top().s;q.pop();\n\t\tif(b[u]) continue;\n\t\tb[u]=1;\n\t\tfor(RI i=h[u];i;i=a[i].n){\n\t\t\tv=a[i].t;s=a[i].s;\n\t\t\tif(f[v]>f[u]+s)\n\t\t\t\tf[v]=f[u]+s,ru(v);\n\t\t} \n\t}\n\tif(f[zd]==da) printf(\"-1\");\n\telse printf(\"%d\",f[zd]);\n\treturn 0;\n}\n```\n### \u540e\u8bb0\n\u5bf9\u4e8e\u56fe\u8bba\u9898\u800c\u8a00\uff0c\u968f\u7740OI\u9009\u624b\u80fd\u529b\u7684\u666e\u904d\u63d0\u5347\uff0c\u9898\u76ee\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c**\u4f46\u662f\uff0c\u53ea\u8981\u8bfb\u61c2\u9898\u76ee\u5e76\u4e14\u4ece\u672a\u7ed3\u679c\u7684\u9898\u76ee\u8f6c\u6362\u6210\u5df2\u77e5\u7684\u9898\u578b\uff0c\u627e\u5230\u89e3\u9898\u601d\u8def\uff0c\u4fbf\u5c31\u6210\u4e86\u4e00\u4e2a\u5957\u6a21\u677f\u7684\u95ee\u9898\u4e86**\u3002",
        "postTime": 1609516120,
        "uid": 133037,
        "name": "_OccDreamer_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7528\u4eba\u8bdd\u6765\u8bb2 \u5c31\u662f\u4e00\u4e2a\u7f51\u683c\u56fe\u5728\u6a2a\uff0c\u7eb5\u65b9\u5411\u4e0a\u4e92\u76f8\u72ec\u7acb\u884c\u8d70\uff08\u5355\u4f4d\u6b65\u65702\uff09\uff0c\u8f6c\u5411\u89811\u7684\u6b65\u6570\n\n\u7406\u89e3\u5b8c\u9898\u610f\u540e\u4e0d\u96be\u5f97\u51fa\u8fd9\u662f\u4e00\u9053\u5206\u5c42\u56fe\n\n#### \u4ee5\u6a2a\uff0c\u7eb5\u8fb9\u5206\u522b\u8fde\u4e00\u4e2a\u56fe\uff08\u957f\u5ea6\u4e3a\u8ddd\u79bb * 2\uff09\uff0c\u540c\u4e00\u4e2a\u70b9\u6a2a\u7eb5\u76f8\u8fde\uff08\u957f\u5ea6\u4e3a1\uff09\n\n#### \u7136\u540e\u8dd1Dijkstra\u5c31\u884c\u4e86\n\n### \u6ce8\u610f\u7ec6\u8282\uff01\uff08~~\u6765\u81ea\u6b7b\u5728\u7ec6\u8282\u7684\u849f\u84bb~~\uff09\n1.\u4e00\u4e2a\u70b9\u4e0d\u80fd\u8de8\u70b9\u53bb\u8fde\u6a2a\uff0c\u7eb5\u5411\u7684\u70b9\n```cpp\nbool cmp_1(node b, node c) {return b.x == c.x ? b.y < c.y : b.x < c.x;}\nbool cmp_2(node b, node c) {return b.y == c.y ? b.x < c.x : b.y < c.y;}\n```\n\uff08\u4e00\u5b9a\u4e0d\u80fd\u628ab.x == c.x\u8fd9\u79cd\u60c5\u51b5\u843d\u4e0b\uff09\n\n2.\u8d77\u70b9\u548c\u7ec8\u70b9\u6a2a\uff0c\u7eb5\u8f6c\u6362\u4ee3\u4ef7\u4e3a0\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nconst int N = 300010;\nconst int inf = 1e9 + 7;\n\nint n, m;\nstruct node {\n\tint x, y, id;\n}a[N];\nstruct Edge {\n\tint to, nxt, val;\n}edge[N << 2];\nint head[N << 2], tot;\nint vis[N << 2], dis[N << 2];\npriority_queue<pair<int, int>, vector<pair<int, int> >, greater<pair<int, int> > > q;\n\nbool cmp_1(node b, node c) {return b.x == c.x ? b.y < c.y : b.x < c.x;}\nbool cmp_2(node b, node c) {return b.y == c.y ? b.x < c.x : b.y < c.y;}\nvoid add_edge(int x, int y, int z) {\n\tedge[++tot].to = y;\n\tedge[tot].val = z;\n\tedge[tot].nxt = head[x];\n\thead[x] = tot;\n\t\n\tedge[++tot].to = x;\n\tedge[tot].val = z;\n\tedge[tot].nxt = head[y];\n\thead[y] = tot;\n}\nvoid solve() {\n\tfor(int i = 1; i <= 2 * m + 4; i ++ ) dis[i] = inf;\n\tdis[1] = dis[m + 3] = 0;\n\tq.push(make_pair(dis[1], 1)); q.push(make_pair(dis[m + 3], m + 3));\n\twhile(!q.empty()) {\n\t\tpair<int, int> k = q.top();\n\t\tq.pop();\n\t\tint u = k.second;\n\t\tif(vis[u]) continue;\n\t\tvis[u] = 1;\n\t\tfor(int i = head[u]; i; i = edge[i].nxt) {\n\t\t\tint v = edge[i].to;\n\t\t\tif(dis[v] > dis[u] + edge[i].val) {\n\t\t\t\tdis[v] = dis[u] + edge[i].val;\n\t\t\t\tif(!vis[v]) q.push(make_pair(dis[v], v));\n\t\t\t}\n\t\t}\n\t}\n}\nint main () {\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i = 2; i <= m + 1; i ++ ) scanf(\"%d %d\", &a[i].x, &a[i].y), a[i].id = i; a[1].id = 1, a[m + 2].id = m + 2;\n\tscanf(\"%d %d %d %d\", &a[1].x, &a[1].y, &a[m + 2].x, &a[m + 2].y);\n\t//for(int i = 1; i <= 2 * m + 4; i ++ ) a[i].id = i;\n\tsort(a + 1, a + 3 + m, cmp_1);\n\tfor(int i = 1; i < m + 2; i ++ ) if(a[i].x == a[i + 1].x) add_edge(a[i].id, a[i + 1].id, 2 * abs(a[i].y - a[i + 1].y));\n\tsort(a + 1, a + 3 + m, cmp_2);\n\tfor(int i = 1; i < m + 2; i ++ ) if(a[i].y == a[i + 1].y) add_edge(a[i].id + m + 2, a[i + 1].id + m + 2, 2 * abs(a[i].x - a[i + 1].x));\n\tfor(int i = 2; i <= m + 1; i ++ ) add_edge(i, i + m + 2, 1);\n   //1,m+3\u5bf9\u5e94\u8d77\u70b9\u6a2a\uff0c\u7eb5;m+2,m*2+4\u5206\u522b\u5bf9\u5e94\u7ec8\u70b9\u6a2a\uff0c\u7eb5\n\tadd_edge(1, m + 3, 0), add_edge(m + 2, m * 2 + 4, 0);\n\tsolve();\n\tif(dis[m + 2] == inf) printf(\"-1\\n\");\n\telse printf(\"%d\\n\", dis[m + 2]);\n\treturn 0;\n}\n```\n",
        "postTime": 1590751456,
        "uid": 54396,
        "name": "Lysus",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "vector\u7248\u7684\u5206\u5c42\u56fe?\n\n\u7528\u4e00\u4e2avector\u5b58\u6bcf\u4e00\u6a2a\u884c\u4e0a\u7684\u4e2d\u8f6c\u7ad9,\u53e6\u4e00\u4e2a\u5b58\u7eb5\u884c.\n\n\u4ee5\u524d\u6ca1\u5b66\u8fc7\u5206\u5c42\u56fe,\u4e0d\u8fc7\u673a\u623f\u5927\u4f6c\u544a\u8bc9\u6211\u8fd9\u5c31\u662f\u5206\u5c42\u56fe.\n\n\u4e8e\u662f\u4e4e,\u5c31\u6ca1\u5efa\u8fb9\u7684\u8dd1\u4e86\u6700\u77ed\u8def,\u4ee3\u7801\u4e11\u54ed.\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <vector>\n\nconst int MAXN = 100005;\nint n, m, s, t, node_count, dis[MAXN], vis[MAXN];\n\nstruct Point\n{\n\tint x, y;\n} p[MAXN];\nstd::vector<int> Gx[20005], Gy[20005];\n\nstruct Node\n{\n    int id, dis;\n\n    Node(int _id = 0, int _dis = 0)\n        : id(_id), dis(_dis) {}\n\n    bool operator<(const Node &A) const\n    {\n        return dis > A.dis;\n    }\n};\nstd::priority_queue<Node> Q;\n\nint get_dis(int from, int to)\n{\n\tint x = p[from].x, y = p[from].y, xx = p[to].x, yy = p[to].y;\n\tif (x == xx)\n\t\treturn yy > y ? (yy - y) << 1 | 1 : (y - yy) << 1 | 1;\n\treturn xx > x ? (xx - x) << 1 | 1 : (x - xx) << 1 | 1;\n}\n\nvoid Dijkstra()\n{\n\tint _Siz, now, to, x, y;\n\tmemset(dis, -1, sizeof dis);\n\tdis[s] = 0;\n\tQ.push(Node(s, 0));\n\twhile (!Q.empty())\n\t{\n\t\tnow = Q.top().id;\n\t\tQ.pop();\n\t\tif (vis[now])\n\t\t\tcontinue;\n\t\tvis[now] = 1;\n\t\tx = p[now].x, y = p[now].y;\n\t\t_Siz = Gx[x].size();\n\t\tfor (int i = 0; i < _Siz; ++i)\n\t\t{\n\t\t\tto = Gx[x][i];\n\t\t\tif (dis[to] == -1 || get_dis(to, now) + dis[now] < dis[to])\n\t\t\t{\n\t\t\t\tdis[to] = get_dis(to, now) + dis[now];\n\t\t\t\tQ.push(Node(to, dis[to]));\n\t\t\t}\n\t\t}\n\t\t_Siz = Gy[y].size();\n\t\tfor (int i = 0; i < _Siz; ++i)\n\t\t{\n\t\t\tto = Gy[y][i];\n\t\t\tif (dis[to] == -1 || get_dis(to, now) + dis[now] < dis[to])\n\t\t\t{\n\t\t\t\tdis[to] = get_dis(to, now) + dis[now];\n\t\t\t\tQ.push(Node(to, dis[to]));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint x, y, a, b;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tp[++node_count] = (Point){x, y};\n\t\tGx[x].push_back(node_count);\n\t\tGy[y].push_back(node_count);\n\t}\n\tscanf(\"%d%d%d%d\", &x, &y, &a, &b);\n\tp[++node_count] = (Point){x, y}, p[++node_count] = (Point){a, b};\n\ts = node_count - 1, t = node_count;\n\tGx[x].push_back(s), Gx[a].push_back(t), Gy[y].push_back(s), Gy[b].push_back(t);\n\tDijkstra();\n\tprintf(\"%d\\n\", dis[t] - 1);\n\treturn 0;\n}\n```\n",
        "postTime": 1573549731,
        "uid": 32380,
        "name": "\u6563\u534e\u793c\u5f25",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "\u5c06\u6bcf\u4e00\u4e2a\u70b9 $v$ \u62c6\u6210\u51fa\u5165\u70b9 $id_{v,1}$ \u548c $id{v,2}$ \u5373\u53ef,\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u6210\u8f6c\u5411\u7684\u64cd\u4f5c\u3002\n\n\u968f\u540e\u8003\u8651\u6392\u5e8f\u5c06\u70b9\u8fde\u8fb9\u3002\n\n\u6392\u5e8f\u6ce8\u610f\u5173\u952e\u5b57\u95ee\u9898\u3002\n\n```pascal\n// T3\n\nUses math;\n\nConst \n    total=210000;\n\nvar\n    from,next,value,reach:array[-1..total*8] of longint;\n    heap,node:array[-1..total*20] of longint;\n    dis,cnt:array[-1..total*3] of longint;\n    id:array[-1..total*3,1..2] of longint;\n    ask:array[-1..total*3] of boolean;\n    x,y:array[-1..total*3] of longint;\n    i,n,m,num,tot,tail,sink,source,number:longint;\n\nprocedure Swap(var a,b:longint);var t:longint; begin t:=a; a:=b; b:=t; end;\n\nprocedure Add(l,r,sum:longint);\nbegin\n    inc(tot); from[tot]:=l; reach[tot]:=r; value[tot]:=sum; next[tot]:=cnt[l]; cnt[l]:=tot;\n    inc(tot); from[tot]:=r; reach[tot]:=l; value[tot]:=sum; next[tot]:=cnt[r]; cnt[r]:=tot;\nend;\n\nprocedure Insert(x:longint);\nvar father:longint;\nbegin\n    if x=1 then exit; father:=x >> 1;\n    if heap[father]>heap[x] then begin swap(heap[x],heap[father]); swap(node[x],node[father]); Insert(father);  end;\nend;\n\nprocedure Down(x:longint);\nvar son:longint;\nbegin\n    if x << 1>num then exit; son:=x << 1;\n    if (son+1<=num)and(heap[son+1]<=heap[son]) then inc(son);\n    if heap[x]>heap[son] then begin swap(heap[x],heap[son]); swap(node[x],node[son]); end;\n    Down(son);\nend;\n\nprocedure Sort(l,r:longint);\nvar i,j,mid1,mid2:longint;\nbegin\n    i:=l; j:=r; mid1:=x[(l+r) >> 1]; mid2:=y[(l+r) >> 1];\n    repeat\n        while (x[i]<mid1)or((x[i]=mid1)and(y[i]<mid2)) do inc(i);\n        while (x[j]>mid1)or((x[j]=mid1)and(y[j]>mid2)) do dec(j);\n        if i<=j then begin Swap(x[i],x[j]); Swap(y[i],y[j]); Swap(id[i,1],id[j,1]); Swap(id[i,2],id[j,2]); inc(i); dec(j); end;\n    until i>=j;\n    if i<r then Sort(i,r);\n    if j>l then Sort(l,j);\nend;\n\nprocedure Dijkstra;\nvar i,key,rope:longint;\nbegin\n    rope:=0; inc(num); heap[num]:=0; node[num]:=source; Insert(num); \n    repeat\n        if num=0 then break;\n        key:=node[1]; heap[1]:=heap[num]; node[1]:=node[num]; dec(num); Down(1); \n        if ask[key]=False then\n        begin\n            inc(rope); ask[key]:=True; i:=cnt[key];\n            while i<>-1 do\n            begin\n                if (dis[reach[i]]>value[i]+dis[key]) then\n                begin\n                    dis[reach[i]]:=value[i]+dis[key]; inc(num); \n                    heap[num]:=dis[reach[i]]; node[num]:=reach[i]; Insert(num);\n                end; i:=next[i];\n            end;\n        end;\n    until rope=(m+2) << 1;\n    writeln(dis[sink]);\nend;\n\nbegin\n    filldword(cnt,sizeof(cnt) div 4,maxlongint*2+1);\n    filldword(dis,sizeof(dis) div 4,maxlongint);\n    read(n,m); number:=0; tail:=0;\n    for i:=1 to m+3 do begin inc(number); id[i,1]:=number; inc(number); id[i,2]:=number; end;\n    for i:=1 to m do begin inc(tail); read(x[tail],y[tail]); Add(id[tail,1],id[tail,2],1); end;\n    inc(tail); read(x[tail],y[tail]); Add(id[tail,1],id[tail,2],0); source:=id[tail,1];\n    inc(tail); read(x[tail],y[tail]); Add(id[tail,1],id[tail,2],0); sink:=id[tail,2]; \n    Sort(1,tail);\n    for i:=2 to tail do if (x[i-1]=x[i]) then Add(id[i-1,1],id[i,1],abs(y[i]-y[i-1]) << 1);\n    for i:=1 to tail do Swap(x[i],y[i]); Sort(1,tail);\n    for i:=2 to tail do if (x[i-1]=x[i]) then Add(id[i-1,2],id[i,2],abs(y[i]-y[i-1]) << 1);\n    dis[source]:=0; Dijkstra;\nend.\n```",
        "postTime": 1548232143,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "**P3831 [SHOI2012]\u56de\u5bb6\u7684\u8def**   \n\u6709\u4eba\u7528dijkstra\u5417\uff1f   \n\u4f30\u8ba1\u6ca1......   \n\u601d\u8def\u5c31\u662f\u5206\u5c42\u56fe\u6700\u77ed\u8def  \nf[pos][k]\u8868\u793a\u5728\u7b2cpos\u4f4d\u4e14\u5728\u7b2ck\u5c42\u6240\u7528\u6700\u77ed\u8def   \n\u521d\u59cb\u5316\u5168\u90e8\u4e3a-1(\u5230\u4e0d\u4e86)   \n\u7136\u540e\u5806\u4f18\u5316\u7684dijkstra  \n\u8bb0\u4f4f\uff1a\u6ca1\u6807\u8bb0\u7684\u70b9\u65e0\u5375\u7528\uff01  \n\u5c31\u662f\u8fd9\u6837\uff01  \n\u81f3\u4e8e\u6709\u4e00\u4e2a\u70b9\u5361\u4e86\u6211\u8d85\u7ea7\u4e45\uff1a  \n\u6211\u662f\u8fd9\u6837\uff1a  \n```cpp\nwhile(!q.empty()){\n        node u=q.top();\n        q.pop();\n        used[u.pos][u.Kth]=1;\n        f[u.pos][u.Kth]=u.mon;\n        int U=u.pos;\n        if(u.Kth==0){\n            for(int i=firrrr.hed[u.pos];i;i=firrrr.nxt[i]){\n                int v=firrrr.tal[i];\n                int val=firrrr.val[i];\n                if(!used[v][0]&&(f[v][u.Kth]==-1||f[U][u.Kth]+val<f[v][u.Kth])){\n                    f[v][u.Kth]=f[U][u.Kth]+val;\n                    push(v,f[v][u.Kth],u.Kth);\n                }\n            }\n            if(f[U][1]==-1||f[U][0]+1<f[U][1]){\n                f[U][1]=f[U][0]+1;\n                push(U,f[U][0]+1,1);\n            }\n        }\n        else{\n            for(int i=secccc.hed[u.pos];i;i=secccc.nxt[i]){\n                int v=secccc.tal[i];\n                int val=secccc.val[i];\n                if(!used[v][1]&&(f[U][u.Kth]+val<f[v][u.Kth]||f[v][u.Kth]==-1)){\n                    f[v][u.Kth]=f[U][u.Kth]+val;\n                    push(v,f[v][u.Kth],u.Kth);\n                }\n            }\n            if(f[U][0]==-1||f[U][1]+1<f[U][0]){\n                f[U][0]=f[U][1]+1;\n                push(U,f[U][1]+1,0);\n            }\n        }\n    }\n\n```\n\u7136\u540e\uff1a    \n# 90\n\u4e8b\u5b9e\u4e0a\u5e94\u8be5\uff1a   \n```cpp\nwhile(!q.empty()){\n\t\tnode u=q.top();\n\t\t\n\t\tq.pop();if(u.mon>f[u.pos][u.Kth]) continue;\n\t\tused[u.pos][u.Kth]=1;\n\t\tint U=u.pos;\n\t\tif(u.Kth==0){\n\t\t\tfor(int i=firrrr.hed[u.pos];i;i=firrrr.nxt[i]){\n\t\t\t\tint v=firrrr.tal[i];\n\t\t\t\tint val=firrrr.val[i];\n\t\t\t\tif(!used[v][0]&&(f[v][u.Kth]==-1||f[U][u.Kth]+val<f[v][u.Kth])){\n\t\t\t\t\tf[v][u.Kth]=f[U][u.Kth]+val;\n\t\t\t\t\tpush(v,f[v][u.Kth],u.Kth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f[U][1]==-1||f[U][0]+1<f[U][1]){\n\t\t\t\tf[U][1]=f[U][0]+1;\n\t\t\t\tpush(U,f[U][0]+1,1);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tfor(int i=secccc.hed[u.pos];i;i=secccc.nxt[i]){\n\t\t\t\tint v=secccc.tal[i];\n\t\t\t\tint val=secccc.val[i];\n\t\t\t\tif(!used[v][1]&&(f[v][u.Kth]==-1||f[U][u.Kth]+val<f[v][u.Kth])){\n\t\t\t\t\tf[v][u.Kth]=f[U][u.Kth]+val;\n\t\t\t\t\tpush(v,f[v][u.Kth],u.Kth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f[U][0]==-1||f[U][1]+1<f[U][0]){\n\t\t\t\tf[U][0]=f[U][1]+1;\n\t\t\t\tpush(U,f[U][1]+1,0);\n\t\t\t}\n\t\t}\n\t}\n```\n\u8bb0\u4f4f\u8981\u5c11\u66f4\u65b0\uff0c\u4f1a\u51fa\u5927\u4e8b\uff01     \n\u66f4\u65b0\u8fc7\u5c31\u4e0d\u66f4\u65b0\uff01   \nstd:(\u751a\u957f)  \n```cpp\n//emm,\u8fd9\u662f\u4e00\u4e2a\u795e\u5947\u7684\u505a\u6cd5 \n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100001;\nconst int M=1000005;\nconst int MAXN=1000005;\ntypedef long long ll;\nstruct node{\n\tint pos;\n\tll mon;\n\tint Kth;//\u6240\u5728\u7684\u5c42 \n};\nstruct lined{\n\tint hed[MAXN];\n\tint tal[MAXN];\n\tint val[MAXN];\n\tint nxt[MAXN];\n}firrrr,secccc;\nll ans=-1;\nstruct pointy{\n\tint x,y;\n\tint Rk;\n}steam,eded,a[M],b[M];\nll f[M][2];//f[i][k]\u8868\u793a\u7b2c\u7f16\u53f7\u4e3ai\u7684\u70b9\uff0c\u5728\u7b2ck\u5c42\u6700\u77ed\u8def\u662f\u591a\u5c11\u3002\nint num1[N]={0};//\u90fd\u662f\u4e00\u4e9b\u6beb\u65e0\u5375\u7528\u7684\u5efa\u8fb9\u795e\u5668 \nint num2[N]={0};\nint s[N];\nvector<int> S1[N],S2[N];\nvector<int> s1[N],s2[N];\nint n,m;\nint real_mmm;\nint c1c=0;\nint c2c=0;\nbool used[M][2]={0};\npriority_queue<node> q;\ninline ll min(ll x,ll y){\n\treturn x<y?x:y;\n}\ninline ll max(ll x,ll y){\n\treturn x>y?x:y;\n}\ninline ll abs(ll x,ll y){\n\tif(x>y) return x-y;\n\telse return y-x;\n}\ninline void addegeX(int x,int y,int z){\n\t//cout << b[x].x << \" \" << b[y].x << endl;\n\t//cout << x << \" \" << y << \" \" << z<<endl;\n\tc1c++;\n\tfirrrr.tal[c1c]=y;\n\tfirrrr.val[c1c]=z;\n\tfirrrr.nxt[c1c]=firrrr.hed[x];\n\tfirrrr.hed[x]=c1c;\n}\ninline void addegeY(int x,int y,int z){\n\t//cout << x << \" \" << y << \" \" << z<<endl;\n\tc2c++;\n\tsecccc.tal[c2c]=y;\n\tsecccc.val[c2c]=z;\n\tsecccc.nxt[c2c]=secccc.hed[x];\n\tsecccc.hed[x]=c2c;\n}\ninline ll distr(int aa,int bb){\n\treturn 2*abs(b[bb].y,b[aa].y);\n}\ninline ll distlr(int aa,int bb){\n\treturn 2*abs(b[bb].x,b[aa].x);\n}\nbool cmp2(pointy x,pointy y){\n\tif(x.x==y.x) return x.y<y.y;\n\treturn x.x<y.x;\n}\nbool cmp1(pointy x,pointy y){\n\tif(x.y==y.y) return x.x<y.x;\n\treturn x.y<y.y;\n}\nbool kcmp2(int x,int y){\n\tif(a[x].x==a[y].x) return a[x].y<a[y].y;\n\treturn a[x].x<a[y].x;\n}\nbool kcmp1(int x,int y){\n\tif(a[x].y==a[y].y) return a[x].x<a[y].x;\n\treturn a[x].y<a[y].y;\n}\nbool operator<(const node &aa,const node &bb) //\u91cd\u8f7d\u5c0f\u4e8e\u8fd0\u7b97\u7b26  \n{  \n    return aa.mon>bb.mon;  \n}  \ninline void push(int pos,ll mon,int Kth)  \n{  \n    node x;  \n    x.pos=pos,x.mon=mon,x.Kth=Kth;  \n    q.push(x);  \n}  \ninline void ins_sort_a(int x){\n\tint u=S1[x].size();\n\tfor(int i=0;i<u;i++){\n\t\ts[i]=S1[x][i];\n\t}\n\tsort(s,s+u,kcmp1);\n\tfor(int i=0;i<u;i++){\n\t\ts1[x].push_back(s[i]);\n\t}\n\treturn;\n}\ninline void ins_sort_b(int x){\n\tint u=S2[x].size();\n\tfor(int i=0;i<u;i++){\n\t\ts[i]=S2[x][i];\n\t}\n\tsort(s,s+u,kcmp2);\n\tfor(int i=0;i<u;i++){\n\t\ts2[x].push_back(s[i]);\n\t}\n\treturn;\n}\ninline void preddd(){\n\tscanf(\"%d%d\",&n,&m);\n\treal_mmm=m+2;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\t\ta[i].Rk=i;\n\t\tb[i]=a[i];\n\t\tS1[a[i].x].push_back(i);\n\t\tS2[a[i].y].push_back(i);\n\t\tnum1[a[i].x]++;\n\t\tnum2[a[i].y]++;\n\t}\n\tscanf(\"%d%d%d%d\",&steam.x,&steam.y,&eded.x,&eded.y);\n\tsteam.Rk=m+1;\n\teded.Rk=m+2;\n\t\n\tif(steam.x==eded.x&&steam.y==eded.y){\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\ta[m+1]=steam;\n\ta[m+2]=eded;\n\tb[m+1]=a[m+1];\n\tb[m+2]=a[m+2];\n\tnum1[a[m+1].x]++;\n\tnum2[a[m+1].y]++;\n\tnum1[a[m+2].x]++;\n\tnum2[a[m+2].y]++;\n\t//\u522b\u5fd8\u8bb0\u628a\u8d77\u70b9\u7ec8\u70b9\u5f39\u5165!\n\tS1[a[m+1].x].push_back(m+1);\n\tS2[a[m+1].y].push_back(m+1);\n\tS1[a[m+2].x].push_back(m+2);\n\tS2[a[m+2].y].push_back(m+2);\n\t//\u5148\u5bf9x\u5750\u6807\u641e\u641e\n\t/*\n\tfor(int i=1;i<=n;i++){\n\t\tins_sort_a(i);\n\t\tins_sort_b(i);\n\t}\n\t*/\n\t/*\n\tfor(int i=1;i<=n;i++){\n\t\tif(num1[i]<2) continue;\n\t\tfor(int j=0;j<num1[i];j++){\n\t\t\tif(j==0){\n\t\t\t\taddegeX(s1[i][j],s1[i][j+1],distr(s1[i][j],s1[i][j+1]));\n\t\t\t}\n\t\t\telse if(j==num1[i]-1){\n\t\t\t\taddegeX(s1[i][j],s1[i][j-1],distr(s1[i][j],s1[i][j-1])); \n\t\t\t} \n\t\t\telse{\n\t\t\t\taddegeX(s1[i][j],s1[i][j+1],distr(s1[i][j],s1[i][j+1]));\n\t\t\t\taddegeX(s1[i][j],s1[i][j-1],distr(s1[i][j],s1[i][j-1]));\n\t\t\t}\n\t\t}\n\t} \n\tfor(int i=1;i<=n;i++){\n\t\tif(num2[i]<2) continue;\n\t\tfor(int j=0;j<num2[i];j++){\n\t\t\tif(j==0){\n\t\t\t\taddegeY(s2[i][j],s2[i][j+1],distlr(s2[i][j],s2[i][j+1]));\n\t\t\t}\n\t\t\telse if(j==num2[i]-1){\n\t\t\t\taddegeY(s2[i][j],s2[i][j-1],distlr(s2[i][j],s2[i][j-1])); \n\t\t\t} \n\t\t\telse{\n\t\t\t\taddegeY(s2[i][j],s2[i][j+1],distlr(s2[i][j],s2[i][j+1]));\n\t\t\t\taddegeY(s2[i][j],s2[i][j-1],distlr(s2[i][j],s2[i][j-1]));\n\t\t\t}\n\t\t}\n\t} //111\n\t*/\n\tsort(a+1,a+m+3,cmp2);\n\tfor(int i=1;i<m+2;i++){\n\t\tif(b[a[i].Rk].x==b[a[i+1].Rk].x){\n\t\t\taddegeX(a[i].Rk,a[i+1].Rk,distr(a[i].Rk,a[i+1].Rk));\n\t\t\taddegeX(a[i+1].Rk,a[i].Rk,distr(a[i].Rk,a[i+1].Rk));\n\t\t}\n\t}\n\tsort(a+1,a+m+3,cmp1);\n\tfor(int i=1;i<m+2;i++){\n\t\tif(b[a[i].Rk].y==b[a[i+1].Rk].y){\n\t\t\taddegeY(a[i].Rk,a[i+1].Rk,distlr(a[i].Rk,a[i+1].Rk));\n\t\t\taddegeY(a[i+1].Rk,a[i].Rk,distlr(a[i].Rk,a[i+1].Rk));\n\t\t}\n\t}\n}\ninline void upt(ll x,ll y){\n\tif(x==-1){\n\t\tif(ans==-1) ans=y; \n\t\telse ans=min(ans,y);\n\t\treturn;\n\t}\n\telse if(y==-1){\n\t\tif(ans==-1) ans=x;\n\t\telse ans=min(ans,x);\n\t\treturn;\n\t}\n\telse{\n\t\tif(ans==-1) ans=min(x,y);\n\t\telse ans=min(ans,min(x,y));\n\t\treturn;\n\t}\n}\ninline int numy(int x,ll y){\n\tint a[30],NMN=0;\n\twhile(y){\n\t\ta[++NMN]=y%10;\n\t\ty/=10;\n\t}\n\treturn a[NMN-(x-1)];\n}\ninline int print(ll y){\n\tint a[30],NMN=0;\n\twhile(y){\n\t\ta[++NMN]=y%10;\n\t\ty/=10;\n\t}\n\ta[NMN-2]--;\n\ta[NMN-3]+=6;\n\tfor(int i=NMN;i>=1;i--) printf(\"%d\",a[i]);\n\tprintf(\"\\n\");\n}\ninline void dijkstra(){\n\tmemset(f,-1,sizeof(f));\n\tpush(m+1,0,0);//\u4e24\u5c42\u90fdpush\u4e00\u904d \n\tpush(m+1,0,1);\n\tf[m+1][0]=0,f[m+1][1]=0;\n\tmemset(used,0,sizeof(used));\n\twhile(!q.empty()){\n\t\tnode u=q.top();\n\t\t\n\t\tq.pop();if(u.mon>f[u.pos][u.Kth]) continue;\n\t\tused[u.pos][u.Kth]=1;\n\t\tint U=u.pos;\n\t\tif(u.Kth==0){\n\t\t\tfor(int i=firrrr.hed[u.pos];i;i=firrrr.nxt[i]){\n\t\t\t\tint v=firrrr.tal[i];\n\t\t\t\tint val=firrrr.val[i];\n\t\t\t\tif(!used[v][0]&&(f[v][u.Kth]==-1||f[U][u.Kth]+val<f[v][u.Kth])){\n\t\t\t\t\tf[v][u.Kth]=f[U][u.Kth]+val;\n\t\t\t\t\tpush(v,f[v][u.Kth],u.Kth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f[U][1]==-1||f[U][0]+1<f[U][1]){\n\t\t\t\tf[U][1]=f[U][0]+1;\n\t\t\t\tpush(U,f[U][0]+1,1);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tfor(int i=secccc.hed[u.pos];i;i=secccc.nxt[i]){\n\t\t\t\tint v=secccc.tal[i];\n\t\t\t\tint val=secccc.val[i];\n\t\t\t\tif(!used[v][1]&&(f[v][u.Kth]==-1||f[U][u.Kth]+val<f[v][u.Kth])){\n\t\t\t\t\tf[v][u.Kth]=f[U][u.Kth]+val;\n\t\t\t\t\tpush(v,f[v][u.Kth],u.Kth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f[U][0]==-1||f[U][1]+1<f[U][0]){\n\t\t\t\tf[U][0]=f[U][1]+1;\n\t\t\t\tpush(U,f[U][1]+1,0);\n\t\t\t}\n\t\t}\n\t}\n\tif(f[m+2][0]==-1&&f[m+2][1]==-1) ans=ans;\n\telse upt(f[m+2][0],f[m+2][1]);\n\t//if(numy(3,ans)==1&&numy(4,ans)==3) print(ans);\n\t//else\n\tprintf(\"%lld\\n\",ans);\n}\nint main(){\n\tpreddd();\n\tdijkstra();\n\t//SPFA();\n\treturn 0;\n} \n/*\nLALALALALAL\nLALLA\nLALLA\nLALL\nALL\nLA\n*/\n```\n\u53ea\u6709300\u884c~",
        "postTime": 1545637420,
        "uid": 61757,
        "name": "Seanq",
        "ccfLevel": 0,
        "title": "P3831 [SHOI2012]\u56de\u5bb6\u7684\u8def"
    },
    {
        "content": "\u8fd9\u4e2a\u6ca1\u6709\u67d0dalao\u7684\u90a3\u4e48\u9ad8\u6548\uff0c\u4f46\u662f\u5bf9\u4e8e\u6570\u636e\u8f83\u5c0f\u7684\u6570\u636e\u70b9\u8fd8\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\u53ef\u4ee5\u4f5c\u4e3a\u6700\u77ed\u8def\u7684\u4e00\u9053\u6a21\u677f\u9898\u3002\n\n\u601d\u8def\uff1a\n\n\u53ef\u4ee5\u770b\u6210\u6bcf\u4e2a\u6362\u4e58\u7ad9\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\u7684\u56fe\u3002\u8f93\u5165\u65f6\u5148\u628a\u6240\u6709\u70b9\u5b58\u5728\u4e00\u4e2a\u56fe\u91cc\uff0c\u5305\u62ec\u8d77\u70b9\u7ec8\u70b9\u3002\u5982\u679cx\u76f8\u7b49\u6216y\u76f8\u7b49\u5c31\u5efa\u8fb9\u3002\n\n\u4e4b\u540e\u8fdb\u884cSPFA\u5373\u53ef\u3002\n\n60\u5206\u4ee3\u7801\uff1a\n\n \n \n \n \n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <queue>\nusing namespace std;\nstruct edge{\n    int t;\n    int dist;\n};\nint n,m;\nint x,y;\nint xb,yb;\nint xd,yd;\nint tail=1;\nqueue<int> q;\nint xs[100001];\nint ys[100001];\nint dis[20001];\nbool vis[20001];\nvector<edge> g[20001];\nvoid spfa(int s){\n    for(int i=1;i<=tail;i++) dis[i]=0x7ffffff;\n    for(int i=1;i<=tail;i++) vis[i]=false;\n    dis[s]=0;\n    q.push(s);\n    while(not(q.empty())){\n        int u=q.front();\n        q.pop();\n        vis[u]=false;\n        for(int i=0;i<g[u].size();i++){\n            int v=g[u][i].t;\n            int w=g[u][i].dist;\n            if(dis[u]+w+1<dis[v]){\n                dis[v]=dis[u]+w+1;\n                if(vis[v]==false){\n                    q.push(v);\n                    vis[v]=true;\n                }\n            }\n        }\n    }\n}\nint main(int argv,char* argc[]){\n    scanf(\"%d%d\",&n,&m);\n    while(m--){\n        scanf(\"%d%d\",&x,&y);\n        xs[tail]=x;\n        ys[tail++]=y;\n    }scanf(\"%d%d%d%d\",&xb,&yb,&xd,&yd);\n    xs[tail]=xb;\n    ys[tail++]=yb;\n    xs[tail]=xd;\n    ys[tail++]=yd;\n    for(int i=1;i<=tail;i++) for(int j=1;j<=tail;j++) if((i)not_eq(j))\n        if(xs[i]==xs[j])      g[i].push_back((edge){j,abs(ys[i]-ys[j])*2});\n        else if(ys[i]==ys[j]) g[i].push_back((edge){j,abs(xs[i]-xs[j])*2});\n    spfa(tail-2);\n    if(dis[tail-1]==0x7ffffff)    printf(\"-1\");\n    else                        printf(\"%d\",dis[tail-1]-1);\n}\n```",
        "postTime": 1506427192,
        "uid": 48148,
        "name": "gzh01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "**Solution**\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u6709\u5411\u4e00\u4e2a\u65b9\u5411\u4e00\u76f4\u8d70\u3001\u8f6c\u5411\u4e24\u79cd\u8d70\u6cd5\uff0c\u4e0d\u96be\u60f3\u5230\u62c6\u70b9\u540e\u8dd1\u6700\u77ed\u8def\n\n\u5177\u4f53\u7684\u8bf4\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u683c\u70b9$a_{i,j}$\u62c6\u6210\u4e24\u4e2a$a_{i, j, 0}, a_{i, j, 1}$\uff0c\u5206\u522b\u8868\u793a\u6a2a\u5411\u8d70\u4e0e\u7eb5\u5411\u8d70\uff0c\u6b64\u65f6\u7684\u70b9\u6570\u662f$N^2$\u7ea7\u522b\u7684\uff0c\u8003\u8651\u4f18\u5316\n\n\u663e\u7136\uff0c\u6709\u7528\u7684\u53ea\u6709\u90a3\u4e9b\u53ef\u4ee5\u8f6c\u5411\u7684\u8fb9\u4e0e\u8d77\u70b9\u7ec8\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u4fdd\u7559\u8fd9\u4e9b\u70b9\uff0c\u4e00\u6b21\u6807\u53f7\u4e3a$v_{1..m+2,0/1}$\uff0c\u5176\u4e2d$1$~$m$\u4e3a\u8f93\u5165\u7ed9\u5b9a\u7684\u53ef\u4ee5\u8f6c\u5411\u7684\u70b9\uff0c$m+1$\u4e0e$m+2$\u4e3a\u8d77\u70b9\u4e0e\u7ec8\u70b9\uff0c\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u8fde\u5982\u4e0b\u8fb9\uff1a\n$$\n\\begin {aligned}\nv_{i, 0} &\\longleftrightarrow v_{j, 0} | row_i == row_j&\\quad(weight = (col_i - col_j) \\times 2)\\\\\nv_{i, 1} &\\longleftrightarrow v_{j, 1} | col_i == col_j&\\quad(weight = (row_i-row_j)\\times 2) \\\\\nv_{i, 0} &\\longleftrightarrow v_{i, 1} &\\quad (weight = 1)\n\n\\end {aligned}\n$$\n\u5176\u4e2d$row_i$\u8868\u793a$i$\u5728\u539f\u6765\u7f51\u683c\u56fe\u4e2d\u7684\u884c\u53f7\uff0c$col_i$\u8868\u793a$i$\u5728\u539f\u6765\u7f51\u683c\u56fe\u4e2d\u7684\u5217\u53f7\n\n\u663e\u7136\uff0c\u4e3a\u4e86\u4f18\u5316\u5efa\u56fe\uff0c\u6211\u4eec\u53ea\u5c06$i$\u5411\u79bb\u4ed6\u6700\u8fd1\u7684$j$\u8fde\u8fb9\u5373\u53ef\n\n\u7136\u540e\u5728\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u8d77\u70b9$S$\uff0c\u8fde\u8fb9\uff1a\n$$\nS \\to v_{m+1, 0/1} \\quad (weight = 0)\n$$\n\u7136\u540e\u4ece\u8d85\u7ea7\u8d77\u70b9\u8dd1\u4e00\u8fb9$dijkstra$\uff0c\u6700\u540e\u7684\u7b54\u6848\u4e3a$min (dis[v_{m+2, 0}], dis[v_{m+2, 1}])$\n\n\u590d\u6742\u5ea6\u5927\u6982\u662f$O(M\\log M)$\n\n**Code**\n\n```c++\n#include <bits/stdc++.h>\n\n#define INF 0x3f3f3f3f\n#define N (int) 1e6\n\nusing namespace std;\nint input () {\n    int x = 0, f = 0;\n    char c = getchar ();\n    while (c < '0' || c > '9') f = c == '-', c = getchar ();\n    while (c >= '0' && c <= '9') x = (x << 1) + (x << 3) + (c ^ 48), c = getchar ();\n    return f ? - x : x;\n}\n\nint n, m;\npair <int, int> a[N];\nvector <int> r[N], c[N];\n\nbool cmpr (const int & x, const int & y) {\n    return a[x].second < a[y].second;\n}\nbool cmpc (const int & x, const int & y) {\n    return a[x].first < a[y].first;\n}\n\nstruct Edge {\n    int v, w, next;\n} edge[N];\nint fst[N], ecnt;\nvoid add_edge (int u, int v, int w) {\n    edge[ecnt].v = v, edge[ecnt].w = w, edge[ecnt].next = fst[u], fst[u] = ecnt ++;\n}\nvoid init_e () {\n    memset (fst, -1, sizeof (fst));\n}\n\nint dis[N];\nint vis[N];\nstruct Node {\n    int u, dis;\n    friend bool operator < (const Node & x, const Node & y) {\n        return x.dis > y.dis;\n    }\n    Node (int _u, int _dis) : u (_u), dis (_dis) {}\n};\nvoid dij () {\n    memset (dis, INF, sizeof (dis));\n    memset (vis, 0, sizeof (vis));\n    priority_queue <Node> pq;\n\n    pq.push (Node (1, 0));\n    dis[1] = 0;\n    while (! pq.empty ()) {\n        int u = pq.top ().u;\n        pq.pop ();\n        if (vis[u]) continue;\n        vis[u] = true;\n        for (int e = fst[u]; e != -1; e = edge[e].next) {\n            int v = edge[e].v, w = edge[e].w;\n            if (dis[v] > dis[u] + w) {\n                dis[v] = dis[u] + w;\n                pq.push (Node (v, dis[v]));\n            }\n        }\n    }\n}\n\nint main () {\n    init_e ();\n\n    n = input (), m = input ();\n\n    for (int i = 1; i <= m+2; i ++) {\n        a[i].first = input (), a[i].second = input ();\n        r[a[i].first].push_back (i);\n        c[a[i].second].push_back (i);\n        add_edge (i<<1, i<<1|1, 1);\n        add_edge (i<<1|1, i<<1, 1);\n    }\n\n    for (int i = 1; i <= n; i ++) {\n        sort (r[i].begin (), r[i].end (), cmpr);\n        sort (c[i].begin (), c[i].end (), cmpc);\n        for (int j = 1; j < r[i].size (); j ++) {\n            int u = r[i][j-1] << 1, v = r[i][j] << 1, w = (a[r[i][j]].second-a[r[i][j-1]].second)<<1;\n            add_edge (u, v, w);\n            add_edge (v, u, w);\n        }\n        for (int j = 1; j < c[i].size (); j ++) {\n            int u = c[i][j-1] << 1|1, v = c[i][j] << 1|1, w = (a[c[i][j]].first-a[c[i][j-1]].first)<<1;\n            add_edge (u, v, w);\n            add_edge (v, u, w);\n        }\n    }\n\n    add_edge (1, (m+1)<<1, 0), add_edge (1, (m+1)<<1|1, 0);\n    \n    dij ();\n\n    int ans = min (dis[(m+2)<<1], dis[(m+2)<<1|1]);\n\n    cout << (ans == INF ? -1 : ans) << endl;\n\n    return 0;\n}\n```\n\n**Conclusion**\n\n* \u62c6\u70b9\uff08\u597d\u50cf\u4e5f\u53eb\u5206\u5c42\u56fe\uff09\n* \u5efa\u7acb\u865a\u70b9\n* \u6700\u77ed\u8def",
        "postTime": 1606406317,
        "uid": 74333,
        "name": "BDFCL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831"
    },
    {
        "content": "\u4e00\u4e2a `std::vector` \u5c31\u53ef\u4ee5\u89e3\u51b3\u7684\u4e8b\u60c5\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528\u5206\u5c42\u56fe\u6700\u77ed\u8def\u5440QWQ\uff1f  \n\n\u6574\u4e2a\u77e9\u9635\u5f88\u5927\uff0c\u6362\u4e58\u7ad9\u5374\u76f8\u5bf9\u5f88\u7a00\u758f\uff0c\u56e0\u6b64\u9664\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\n\u8003\u8651\u6362\u4e58\u7ad9\u4e4b\u95f4\u7684\u8df3\u8f6c\u5c31\u53ef\u4ee5\u4e86\u3002  \n\u56e0\u6b64\uff0c\u9996\u5148\u8003\u8651\u6362\u4e58\u7ad9\u4e4b\u95f4\u7684\u8df3\u8f6c\uff1a\u5148\u7528 `std::vector` \u5c06\u540c\u884c\uff0c\u540c\u5217\u7684\u8df3\u8f6c\u7ad9\u8bb0\u5f55\u4e0b\u6765\uff0c  \n\u4e4b\u540e Dijkstra \u5728\u4e0a\u9762\u8df3\u8f6c\u5c31\u53ef\u4ee5\u4e86\u3002 \n\n\u8bb0\u5f55\u7684\u4ee3\u7801\n```cpp\ntypedef unsigned int word;\nword x[100010],y[100010];\nvector<word> line[20010],column[20010];\n...\ncin>>n>>m;\nfor(register word i=1;i<=m;++i){\n\tcin>>x[i]>>y[i];\n\tline[x[i]].push_back(i);\n\tcolumn[y[i]].push_back(i);\n}\n```\nDijkstra \u7684\u4ee3\u7801\n```cpp\nstruct pair{\n\tword id,value;\n\tinline bool operator <(register pair p){\n\t\tif(value==p.value) return id<p.id;\n\t\treturn value<p.value;\n\t}\n};\nHEAP<pair> heap;//\u624b\u5199\u5806\nword dis[100010];\n...\n#define abs(a,b) (((a)>(b)? (a)-(b):(b)-(a))<<1)\n#define getnext(x,y,line)\t\t\t\t\t\t\t\t\t\t\t\t\\\n\tfor(register word i=0;i<line[x[p.id]].size();++i){\t\t\t\t\t\\\n\t\tq.id=line[x[p.id]][i],q.value=p.value+1+abs(y[p.id],y[q.id]);\t\\\n\t\tif(dis[q.id]>q.value) dis[q.id]=q.value,heap.push(q);\t\t\t\\\n\t}\nwhile(heap.size){\n\tregister pair p=heap.top();\n    heap.pop();\n    if(dis[p.id]<p.value) continue;\n    getnext(x,y,line);//\u884c\u4e0e\u5217\u7684\u66f4\u65b0\u76f8\u4f3c\n    getnext(y,x,column);\n}\n```\n\u4f46\u663e\u7136\uff0c\u8fd9\u4e2a\u505a\u6cd5\u4f1a TLE\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8981\u5c06\u540c\u884c\uff0c\u540c\u5217\u7684\u70b9\u5168\u90e8\u66f4\u65b0\u4e00\u904d\uff0c\u603b\u4f53\u6700\u574f\u662f $\\Theta(mn)$ \u7684\u3002  \n\uff08\u7136\u800c\u4f60\u8c37\u6570\u636e\u5361\u4e0d\u6389\uff09  \n\u4f46\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u66f4\u65b0\u7684\u8fed\u4ee3\u5f0f\uff1a$dis_v=\\min_{x_u=x_v}dis_u+1+2|y_u-y_v|$  \n\u82e5\u5c06 $v$ \u4f5c\u4e3a\u81ea\u53d8\u91cf\uff0c\u53ef\u4ee5\u53d1\u73b0 $2|y_u-y_v|$ \u7684\u659c\u7387\u662f\u56fa\u5b9a\u7684\u3002  \n\u56e0\u6b64\u6709\u4e00\u4e2a\u526a\u679d\u5927\u4f18\u5316\uff1a\u5148\u6392\u5e8f\u5e76\u8bb0\u5f55\u5404\u4e2a\u4e2d\u8f6c\u70b9\u5728\u6240\u5728\u884c/\u5217\u7684\u6b21\u5e8f\uff0c\u7136\u540e\u66f4\u65b0\u65f6\u5f80\u4e24\u7aef\u626b\u3002  \n\u5982\u679c $dis_v\\ge dis_u+1+2|y_u-y_v|$\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u70b9\u90fd\u4e0d\u7528\u66f4\u65b0\u4e86\uff0c\u76f4\u63a5\u9000\u51fa\u3002\n\n\u6392\u5e8f\u4e0e\u8bb0\u5f55\u6b21\u5e8f\u7684\u4ee3\u7801\n```cpp\nword xrot[100010],yrot[100010];\ninline bool cmpx(register word id1,register word id2){\n\treturn x[id1]<x[id2];}\ninline bool cmpy(register word id1,register word id2){\n\treturn y[id1]<y[id2];}\n...\nfor(register word i=1;i<=n;++i){\n\tstd::sort(line[i].begin(),line[i].end(),cmpy);\n\tstd::sort(column[i].begin(),column[i].end(),cmpx);\n    for(register word j=0;j<line[i].size();++j)\n\txrot[line[i][j]]=j;\n\tfor(register word j=0;j<column[i].size();++j)\n\tyrot[column[i][j]]=j;\n}\n```\n\u65b0\u7684 `getnext(x,y,line)`\n```cpp\n#define getnext(x,y,line)\t\t\t\t\t\t\t\t\t\t\t\t\\\n\tfor(register word i=x##rot[p.id]+1;i<line[x[p.id]].size();++i){\t\t\\\n\t\tq.id=line[x[p.id]][i],q.value=p.value+1+((y[q.id]-y[p.id])<<1);\t\\\n\t\tif(dis[q.id]>q.value) dis[q.id]=q.value,heap.push(q);\t\t\t\\\n\t\telse break;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\tfor(register int i=x##rot[p.id]-1;i>=0;--i){\t\t\t\t\t\t\\\n\t\tq.id=line[x[p.id]][i],q.value=p.value+1+((y[p.id]-y[q.id])<<1);\t\\\n\t\tif(dis[q.id]>q.value) dis[q.id]=q.value,heap.push(q);\t\t\t\\\n\t\telse break;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t}\n```\n\u5c31\u6b64\uff0c\u53ea\u5269\u4e0b\u8d77\u70b9\u548c\u7ec8\u70b9\u6ca1\u6709\u8003\u8651\uff0c\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n- \u8d77\u70b9$\\quad\\rightarrow$ \u6362\u4e58\u7ad9$\\qquad$ \u4e0d\u7528\u6362\u4e58\n- \u8d77\u70b9$\\quad\\rightarrow$ \u7ec8\u70b9$\\qquad\\ \\ \\ \\ $ \u4e0d\u7528\u6362\u4e58\n- \u6362\u4e58\u7ad9 $\\ \\rightarrow$ \u7ec8\u70b9$\\qquad\\ \\ \\ $ \u4e0d\u7528\u6362\u4e58\n\n\u76f4\u63a5\u66f4\u65b0\u5c31\u53ef\u4ee5\u4e86\uff0c\u6b64\u5904\u4e0d\u7528\u5199\u526a\u679d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a  \n- \u521d\u59cb\u5316\u65f6\u7684\u6392\u5e8f\u662f $\\Theta(n+m\\log n)$ \u7684\u3002  \n- \u5904\u7406\u8d77\u70b9\u548c\u7ec8\u70b9\u662f $\\Theta(n)$ \u7684\u3002\n- Dijkstra \u662f $\\Theta(m\\log m)$ \u7684\uff08\u66f4\u65b0\u53ef\u8fd1\u4f3c\u770b\u4f5c $\\Theta(1)$\uff09\n\n\u56e0\u6b64\u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n+m(\\log m+\\log n))$\uff0c\u53ef\u8fd1\u4f3c\u770b\u4f5c $\\Theta(m\\log m)$\n\n\u6700\u7ec8\u4ee3\u7801 (O2,118ms,6.60MB) ~~\u8dd1\u5f97\u98de\u5feb\u5c31\u662f\u4e86~~\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<vector>\n#include<algorithm>\ntypedef unsigned long long ull;\ntypedef unsigned int word;\ntemplate<typename type>\nstruct HEAP{//\u624b\u5199\u5806\n\ttype list[1<<18];\n\tword size;\n\tinline HEAP(){size=0;}\n#define swap(a,b)(\t\t\t\t\t\t\t\t\\\n\tlist[0]=list[a],\t\t\t\t\t\t\t\\\n\tlist[a]=list[b],\t\t\t\t\t\t\t\\\n\tlist[b]=list[0])\n\tinline void push(type in){\n\t\tlist[++size]=in;\n\t\tfor(register word i=size;i>1&&list[i]<list[i>>1];i>>=1)\n\t\t\tswap(i,i>>1);\n\t}\n\tinline void pop(){\n\t\tlist[1]=list[size--];\n\t\tfor(register word i=1;i<<1<=size;swap(i,i>>1))\n\t\t\tif(list[i<<1]<list[i])\n\t\t\t\tif(i<<1<size&&list[i<<1|1]<list[i<<1]) i=i<<1|1;\n\t\t\t\telse i<<=1;\n\t\t\telse if(i<<1<size&&list[i<<1|1]<list[i]) i=i<<1|1;\n\t\t\telse return;\n\t}\n\tinline type& top(){return list[1];}\n};\nstruct pair{\n\tword id,value;\n\tinline bool operator <(register pair p){\n\t\tif(value==p.value) return id<p.id;\n\t\treturn value<p.value;\n\t}\n};\nHEAP<pair> heap;\nstruct READ{//\u5feb\u8bfb\n\tchar *top;\n\tinline READ(){fread(top=(char*)heap.list,1<<21,1,stdin);}\n\ttemplate<typename type>\n\tinline READ& operator >>(register type& num){\n\t\twhile('0'>*top||*top>'9') ++top;\n\t\tfor(num=0;'0'<=*top&&*top<='9';)\n\t\t\tnum=num*10+(*(top++)-'0');\n\t\treturn *this;\n\t}\n};\nusing std::vector;\nusing std::lower_bound;\nvector<word> line[20010],column[20010];\nword x[100010],y[100010],xrot[100010],yrot[100010];\nword dis[100010];\ninline bool cmpx(register word id1,register word id2){\n\treturn x[id1]<x[id2];}\ninline bool cmpy(register word id1,register word id2){\n\treturn y[id1]<y[id2];}\n#define getnext(x,y,line)\t\t\t\t\t\t\t\t\t\t\t\t\\\n\tfor(register word i=x##rot[p.id]+1;i<line[x[p.id]].size();++i){\t\t\\\n\t\tq.id=line[x[p.id]][i],q.value=p.value+1+((y[q.id]-y[p.id])<<1);\t\\\n\t\tif(dis[q.id]>q.value) dis[q.id]=q.value,heap.push(q);\t\t\t\\\n\t\telse break;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\tfor(register int i=x##rot[p.id]-1;i>=0;--i){\t\t\t\t\t\t\\\n\t\tq.id=line[x[p.id]][i],q.value=p.value+1+((y[p.id]-y[q.id])<<1);\t\\\n\t\tif(dis[q.id]>q.value) dis[q.id]=q.value,heap.push(q);\t\t\t\\\n\t\telse break;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t}//\u66f4\u65b0\uff08\u5305\u542b\u526a\u679d\u4f18\u5316\uff09\nint main(){\n\tregister READ cin;\n\tregister word n,m;\n\tcin>>n>>m;\n\tfor(register word i=1;i<=m;++i){\n\t\tcin>>x[i]>>y[i];\n\t\tline[x[i]].push_back(i);\n\t\tcolumn[y[i]].push_back(i);\n\t}//\u5c06\u540c\u884c\uff0c\u540c\u5217\u7684\u70b9\u653e\u5165\u540c\u4e00\u4e2a vector\n\tfor(register word i=1;i<=n;++i){\n\t\tstd::sort(line[i].begin(),line[i].end(),cmpy);\n\t\tstd::sort(column[i].begin(),column[i].end(),cmpx);\n\t\tfor(register word j=0;j<line[i].size();++j)\n\t\t\txrot[line[i][j]]=j;\n\t\tfor(register word j=0;j<column[i].size();++j)\n\t\t\tyrot[column[i][j]]=j;\n\t}//\u6392\u5e8f\u5e76\u8bb0\u5f55\u76f8\u5bf9\u6b21\u5e8f\n\tword beginx,beginy,endx,endy;\n\tcin>>beginx>>beginy>>endx>>endy;\n\tmemset(dis,0x7f,sizeof(dis));\n#define abs(a,b) (((a)>(b)? (a)-(b):(b)-(a))<<1)\n\tregister pair p,q;\n\tfor(register word i=0;i<line[beginx].size();++i){\n\t\tq.id=line[beginx][i],q.value=abs(y[q.id],beginy);\n\t\tif(dis[q.id]>q.value) dis[q.id]=q.value,heap.push(q);\n\t}\n\tfor(register word i=0;i<column[beginy].size();++i){\n\t\tq.id=column[beginy][i],q.value=abs(x[q.id],beginx);\n\t\tif(dis[q.id]>q.value) dis[q.id]=q.value,heap.push(q);\n\t}//\u5904\u7406\u8d77\u70b9\n\twhile(heap.size){\n\t\tp=heap.top(),heap.pop();\n\t\tif(dis[p.id]<p.value) continue;\n\t\tgetnext(x,y,line);\n\t\tgetnext(y,x,column);//\u884c\u4e0e\u5217\u662f\u7c7b\u4f3c\u7684\n\t}\n\tregister word ans=0x7f7f7f7f;\n\tif(beginx==endx) ans=abs(beginy,endy);\n\tif(beginy==endy) ans=abs(beginx,endx);\n\tfor(register word i=0;i<line[endx].size();++i){\n\t\tq.id=line[endx][i],q.value=dis[q.id];\n\t\tif(y[q.id]!=endy) q.value+=1+abs(y[q.id],endy);\n\t\tif(ans>q.value) ans=q.value;\n\t}\n\tfor(register word i=0;i<column[endy].size();++i){\n\t\tq.id=column[endy][i],q.value=dis[q.id];\n\t\tif(x[q.id]!=endx) q.value+=1+abs(x[q.id],endx);\n\t\tif(ans>q.value) ans=q.value;\n\t}//\u5904\u7406\u7ec8\u70b9\u7684\u60c5\u51b5\n\tif(ans==0x7f7f7f7f) printf(\"-1\");\n\telse printf(\"%u\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1604900364,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e3a\u6570\u4e0d\u591a\u7684\u5199\u8fc7\u7684\u5206\u5c42\u56fe\u9898\u8fd8\u662f\u53d1\u7bc7\u9898\u89e3\n\n## \\* \u5206\u5c42\u56fe\u7b80\u4ecb\n\n\u4e3b\u8981\u662f\u5c06\u5728\u56fe\u4e0a\u7684\u51b3\u7b56\u4e5f\u8f6c\u5316\u4e3a\u8fb9\uff0c\u5e76\u8d4b\u4e88\u8fb9\u6743\uff0c\u4ece\u800c\u53ef\u4ee5\u7528\u4e00\u822c\u7684\u56fe\u7b97\u6cd5\u89e3\u51b3\u542b\u51b3\u7b56\u7684\u56fe\u4e0a\u95ee\u9898\n\n\u57fa\u672c\u4e0a\u5206\u5c42\u56fe\u9898 dp \u4e5f\u80fd\u505a\uff0c\u6700\u4f18\u590d\u6742\u5ea6\u662f\u4e00\u6837\u7684\uff08\u6bd5\u7adf dijkstra \u4e5f\u662f\u4e00\u79cd dp\uff09\u3002\u4e0d\u8fc7\u5206\u5c42\u56fe\u7684\u4f18\u70b9\u5728\u4e8e\u4fbf\u4e8e\u76f4\u89c2\u7406\u89e3\n\n## \u89e3\u6790\n\n\u5176\u4e2d\u6362\u7ad9\u7684\u51b3\u7b56\u5f88\u9ebb\u70e6\n\n\u4e00\u79cd\u601d\u8def\u662f\u5c06\u51b3\u7b56\u7684\u8d21\u732e\u76f4\u63a5\u52a0\u5230\u8fb9\u6743\u4e0a\uff0c\u4f8b\u5982\u5728\u67d0\u884c\u6216\u67d0\u5217\u4e0a\u6709\u5143\u7d20 $\\{v_1, v_2, \\cdots v_i\\}$\uff0c**\u6211\u4eec\u5bf9\u5b83\u4eec\u4e24\u4e24\u8fde\u8fb9**\uff0c\u8fb9\u6743\u4e3a \u4e58\u8f66\u65f6\u95f4 $+1$\n\n\u663e\u7136\u8fd9\u6837\u4f5c\u51fa\u7684\u56fe\u8fb9\u6570\u5f88\u591a\uff0c\u5efa\u56fe\u4e5f\u5f88\u6162\n\n\u8003\u8651\u628a\u6a2a\u5411\u8d70\u7684\u5206\u4e3a\u4e00\u5c42\u56fe\uff0c\u7eb5\u5411\u8d70\u7684\u5206\u4e3a\u4e00\u5c42\u56fe\uff0c\u6a2a/\u7eb5\u5411\u8d70\u7684\u5c42\u53ea\u8fde\u539f\u56fe\u4e0a\u6a2a/\u7eb5\u94c1\u8def\u7684\u8fb9\uff0c\u4e14\u53ea\u5728\u76f8\u90bb\u7684\u7ed3\u70b9\u95f4\u8fde\u3002\u5982\u82e5\u6709\u8f74\u4e0a\u7684\u987a\u5e8f\u4e09\u4e2a\u70b9 $u_1, u_2, u_3$\uff0c\u6211\u4eec\u53ea\u8fde $(u_1, u_2), (u_2, u_3)$\uff0c\u8fd9\u662f\u56e0\u4e3a $w(u_1, u_3)=w(u_1, u_2)+w(u_2, u_3)=w(p(u_1, u_3))$\uff08\u56e0\u4e3a\u6ca1\u6709\u6362\u7ad9\uff0c\u56e0\u6b64\u4e0d\u7528\u5bf9\u8fb9\u6743\u52a8\u624b\u811a\uff09\n\n\u4e24\u5c42\u7ed3\u70b9\u4e00\u4e00\u5bf9\u5e94\uff0c\u8bbe\u4e3a $u_i, v_i$\uff0c\u5728\u6bcf\u4e2a $u_i, v_i$ \u95f4\u8fde\u6743\u503c\u4e3a $1$ \u7684\u8fb9\uff0c\u5373\u6362\u7ad9\u51b3\u7b56\u7684\u6d88\u8017\n\n\u5927\u6982\u8fd9\u6837\uff1a\n\n![div-map](https://cdn.luogu.com.cn/upload/image_hosting/9lgg8xrw.png)\n\n\uff08\u6211\u4ee3\u7801\u4e2d\u8fd8\u6709\u4e2a \u201c\u8d85\u7ea7\u8d77\u70b9/\u7ec8\u70b9\"\uff0c\u56fe\u4e2d\u6ca1\u753b\uff0c\u5e94\u8be5\u633a\u597d\u7406\u89e3\uff09\n\n\u7136\u540e\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u5373\u53ef\n\n## CODE\n\n\u6ce8\u610f\u5c06\u8f93\u5165\u7ed9\u51fa\u7684\u8d77\u70b9\u7ec8\u70b9\u4e5f\u89c6\u4e3a\u7ad9\u70b9\u653e\u5165\u5206\u5c42\u56fe\n\n\u7136\u540e\u8bbe\u4e00\u4e2a \u201c\u8d85\u7ea7\u8d77\u70b9/\u7ec8\u70b9\"\uff0c\u5206\u522b\u5bf9\u4e24\u5c42\u7684\u8d77\u70b9/\u7ec8\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nusing std::priority_queue;\nusing std::vector;\nusing std::pair;\nusing std::sort;\ntypedef pair<int, int> pad;\n\n/*------------------------------Map------------------------------*/\n\nconst int MAXN =1e5+50;\n\nint n, m;\nvector<pad> E[MAXN<<1];\nint dist[MAXN<<1];\nbool vis[MAXN<<1];\nstruct elm{\n\tint to, dist;\n\telm(int tt, int d):to(tt), dist(d){}\n\tbool operator < (const elm &B) const{ return dist > B.dist; }\n};\n\ninline void addedge(int u, int v, int w){\n\tE[u].push_back(pad(v, w)), E[v].push_back(pad(u, w));\n}\n\npriority_queue<elm, vector<elm> > que;\n\ninline int dijkstra(int s, int t){\n\tmemset(dist, 0x3f, sizeof(dist));\n\tdist[s] =0;\n\tque.push(elm(s, 0));\n\twhile(que.size()){\n\t\telm u =que.top();\n\t\tque.pop();\n\t\tif(vis[u.to]) continue;\n\t\tif(u.to == t)\n\t\t\treturn dist[t];\n\t\tvis[u.to] =1;\n\t\tfor(pad v:E[u.to]){\n\t\t\tif(!vis[v.first] && dist[u.to]+v.second < dist[v.first]){\n\t\t\t\tdist[v.first] =dist[u.to]+v.second;\n\t\t\t\tque.push(elm(v.first, dist[u.to]+v.second));\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; register char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nvector<pad> line[(int)2e4+50], row[(int)2e4+50]/*\u884c\u3001\u5217*/;\n\nint main(){\n\tn =read(), m =read();\n\tfor(int i =1; i <= m+2; ++i){\n\t\tint x =read(), y =read();\n\t\tline[x].push_back(pad(y, i));\n\t\trow[y].push_back(pad(x, m+2+i));\n\t}\n\tfor(int i =1; i <= n; ++i){\n\t\tsort(line[i].begin(), line[i].end());\n\t\tsort(row[i].begin(), row[i].end());\n\t\tfor(int k =1; k < (int)line[i].size(); ++k)\n\t\t\taddedge(line[i][k].second, line[i][k-1].second, 2*(line[i][k].first-line[i][k-1].first));\n\t\tfor(int k =1; k < (int)row[i].size(); ++k)\n\t\t\taddedge(row[i][k].second, row[i][k-1].second, 2*(row[i][k].first-row[i][k-1].first));\n\t}\n\tfor(int i =1; i <= m; ++i)\n\t\taddedge(i, m+2+i, 1);\n\tint s =2*(m+2)+1, t =2*(m+2)+2;\n\taddedge(s, m+1, 0), addedge(s, (m+2)+m+1, 0);\n\taddedge(t, m+2, 0), addedge(t, (m+2)+m+2, 0);\n\tprintf(\"%d\", dijkstra(s, t));\n}\n```\n\n## \\* \u66f4\u591a\u4f8b\u9898\n\n[2018 ACM-ICPC \u5357\u4eac](https://blog.csdn.net/monochrome00/article/details/82289394)\n\n[P4822 [BJWC2012]\u51bb\u7ed3](https://www.luogu.com.cn/problem/P4822)\n\n[P4568 [JLOI2011]\u98de\u884c\u8def\u7ebf](https://www.luogu.com.cn/problem/P4568)\n\n[P2939 [USACO09FEB]Revamping Trails G](https://www.luogu.com.cn/problem/P2939)",
        "postTime": 1599303104,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "### \u601d\u8def\n\n\u5f88\u7b80\u5355 \u5206\u5c42\u56fe + $SPFA$\n\n\n### \u5751\u70b9\n\n\u6211\u63d0\u4ea4\u4e86$10+$\u6b21 \u5168\u90e8$90pts$\n\n\u5e0c\u671b\u5404\u4f4d\u5927\u4f6c\u4e0d\u4f1a\u8ddf\u6211\u72af\u4e00\u6837\u7684\u9519\u8bef\n\n**\u7a7a\u95f4\u5927\u5c0f\u4e0d\u8981\u5f00\u9519\u4e86**\n\n\u4e0d\u7136\u4f1a$WA$ \u800c\u4e0d\u662f$RE$ \u534a\u5929\u5dee\u4e0d\u51fa\u6765\u9519\u7684\u90a3\u79cd\uff08\u7b2c\u4e8c\u4e2a\u70b9\u4e00\u76f4\u9519\uff09\n\n\u70b9 \u5f00 $3e5 + 10$\n\n\u8fb9\u5f00 $3e6 + 10$\n\n\n\u8fd9\u9898\u6ca1\u6709\u5361$SPFA$\n\n\u4e0d\u7528\u5806\u4f18\u5316 \uff08374ms\uff09\u5728\u9898\u89e3\u4e2d\u7b97\u633a\u5feb\u7684\n\n\u4e0d\u7528\u5f00$long long$\n\n### $Code$\n\n```cpp\n#include <stack>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define reg register int\n#define isdigit(x) ('0' <= x&&x <= '9')\ntemplate<typename T>\ninline T Read(T Type)\n{\n\tT x = 0,f = 1;\n\tchar a = getchar();\n\twhile(!isdigit(a)) {if(a == '-') f = -1;a = getchar();}\n\twhile(isdigit(a)) {x = (x << 1) + (x << 3) + (a ^ '0');a = getchar();}\n\treturn x * f;\n}\nconst int MAXN = 3e5 + 10,MAXM = 3e6 + 10;\nstruct node\n{\n\tint x,y,num;\n}sta[MAXN];\nbool cmp1(node a,node b)\n{\n\tif(a.x < b.x) return 1;\n\tif(a.x == b.x) return (a.y < b.y?1:0);\n\treturn 0;\n}\nbool cmp2(node a,node b)\n{\n\tif(a.y < b.y) return 1;\n\tif(a.y == b.y) return (a.x < b.x?1:0);\n\treturn 0;\n}\ninline int cost(int a,int b) {return (a - b > 0?a - b:b - a) * 2;}\nstruct EDGE\n{\n\tint u,v,w,next;\n}edge[MAXM];\nint n,m,cnt,head[MAXN];\ninline void addedge(int u,int v,int w)\n{\n\tedge[++cnt].u = u;\n\tedge[cnt].v = v;\n\tedge[cnt].w = w;\n\tedge[cnt].next = head[u];\n\thead[u] = cnt;\n}\ninline void add(int u,int v,int w) {addedge(u,v,w),addedge(v,u,w);}\ninline void buildgraph()\n{\n\tsort(sta + 1,sta + 3 + m,cmp1);\n\tfor(reg i = 2;i <= m + 2;i++)\n\t\tif(sta[i].x == sta[i - 1].x) \n\t\t\tadd(sta[i].num,sta[i - 1].num,cost(sta[i - 1].y,sta[i].y));\n\tsort(sta + 1,sta + 3 + m,cmp2);\n\tfor(reg i = 2;i <= m + 2;i++)\n\t\tif(sta[i].y == sta[i - 1].y) \n\t\t\tadd(sta[i].num + m + 2,sta[i - 1].num + m + 2,cost(sta[i - 1].x,sta[i].x));\n\tfor(reg i = 1;i <= m + 2;i++)\n\t\tadd(sta[i].num,sta[i].num + m + 2,(sta[i].num > m?0:1));\n}\nbool vis[MAXN];\nint d[MAXN];\ninline int dijkstra(int s,int t)\n{\n\tqueue<int> q;\n\tq.push(s);\n\tvis[s] = 1;\n\tmemset(d,0x7f7f7f,sizeof(d));\n\td[s] = 0;\n\twhile(!q.empty())\n\t{\n\t\tint tp = q.front();q.pop();\n\t\tvis[tp] = 0;\n\t\tfor(reg e = head[tp];e;e = edge[e].next)\n\t\t{\n\t\t\tint v = edge[e].v,w = edge[e].w;\n\t\t\tif(d[tp] + w < d[v])\n\t\t\t{\n\t\t\t\td[v] = d[tp] + w;\n\t\t\t\tif(!vis[v]) q.push(v);\n\t\t\t\tvis[v] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn (d[t] < 0x7f7f7f?d[t]:-1);\n}\nint main()\n{\n\tn = Read(1),m = Read(1);\n\tfor(reg i = 1;i <= m + 2;i++)\n\t\tsta[i].x = Read(1),sta[i].y = Read(1),sta[i].num = i;\n\tbuildgraph();\n\tint ans = dijkstra(m + 1,m + 2);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1573732634,
        "uid": 73992,
        "name": "resftlmuttmotw",
        "ccfLevel": 0,
        "title": "P3831 [SHOI2012]\u56de\u5bb6\u7684\u8def"
    },
    {
        "content": "\u8fd9\u9053\u9898\u663e\u7136\u662f\u6700\u77ed\u8def\uff0c\u4f46\u662f\u4f3c\u4e4e\u8f6c\u5411\u65f6\u4e0d\u597d\u5904\u7406\uff0c\u4e8e\u662f\u6211\u4eec\u8981\u7528\u5230\u5206\u5c42\u56fe\u3002\n\n\u5b9e\u73b0\u5f88\u7b80\u5355\uff0c\u5efa\u7acb\u4e24\u5c42\u56fe\uff0c\u7b2c\u4e00\u5c42\u8bb0\u5f55\u6a2a\u5411\u8fb9\uff0c\u7b2c\u4e8c\u5c42\u8bb0\u5f55\u7eb5\u5411\u8fb9\uff0c\u76f8\u540c\u7684\u5173\u952e\u70b9\u4e24\u5c42\u56fe\u8fde\u4e00\u6761\u8d39\u7528\u4e3a1\u7684\u8fb9\u3002\n\n\u8fd8\u6709\uff0c\u8fd9\u9053\u9898\u53ea\u9700\u8981\u5728\u5173\u952e\u70b9\u4e4b\u95f4\u8fde\u8fb9\uff08\u975e\u5173\u952e\u70b9\u65e0\u6cd5\u8f6c\u5411\uff0c\u8fde\u4e86\u4e5f\u6ca1\u7528\uff09\uff0c\u8def\u5f84\u957f\u5ea6\u4e3a\u5750\u6807\u5dee*2\u3002\n\n\u5bf9\u4e8e\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u6211\u4eec\u628a\u5b83\u4e5f\u5f53\u4f5c\u5173\u952e\u70b9\uff0c\u4f46\u8f6c\u5411\u53ea\u97000\u7684\u8d39\u7528\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define INF 0x3f3f3f3f\n\nconst int MAXM = 100005;\nint n , m;\nstruct Point{\n    int x , y , id;\n}imp[ MAXM + 5 ];\nbool cmpx( const Point &a , const Point &b ) {\n    return a.x < b.x || ( a.x == b.x && a.y < b.y );\n}\nbool cmpy( const Point &a , const Point &b ) {\n    return a.y < b.y || ( a.y == b.y && a.x < b.x );\n} \nbool cmpi( const Point &a , const Point &b ) {\n\treturn a.id < b.id;\n}\n\nstruct node{\n    int v , w;\n    bool operator > ( const node &x ) const {\n        return w > x.w;\n    }\n};\nvector< node > Graph[ 8 * MAXM + 5 ];\nint dist[ 2 * MAXM + 5 ];\nbool vis[ 2 * MAXM + 5 ];\nint Dijkstra( int s , int t ) {\n    priority_queue< node , vector< node > , greater< node > > Que;\n    memset( dist , INF , sizeof( dist ) );\n    memset( vis , 0 , sizeof( vis ) );\n\n    Que.push( { s , dist[ s ] = 0 } );\n    while( !Que.empty( ) ) {\n        int u = Que.top( ).v; Que.pop( );\n        \n        if( vis[ u ] ) continue;\n\t\tvis[ u ] = 1;\n\t\t\n        for( int i = 0 ; i < Graph[ u ].size( ) ; i ++ ) {\n            int v = Graph[ u ][ i ].v , w = Graph[ u ][ i ].w;\n            if( dist[ v ] > dist[ u ] + w ) {\n                dist[ v ] = dist[ u ] + w;\n                Que.push( { v , dist[ v ] } );\n            }\n        }\n    }\n    return dist[ t ] == INF ? -1 : dist[ t ];\n}\n\nint main( ) {\n    scanf(\"%d %d\",&n,&m);\n    for( int i = 1 ; i <= m ; i ++ )\n        scanf(\"%d %d\", &imp[ i ].x , &imp[ i ].y ) , imp[ i ].id = i;\n    m ++ , scanf(\"%d %d\", &imp[ m ].x , &imp[ m ].y ) , imp[ m ].id = m;\n    m ++ , scanf(\"%d %d\", &imp[ m ].x , &imp[ m ].y ) , imp[ m ].id = m;\n\n    sort( imp + 1 , imp + m + 1 , cmpx );\n    for( int i = 1 ; i <= m ; i ++ ) {\n        int dex1 = imp[ i ].id , dex2 = imp[ i + 1 ].id;\n        if( imp[ i ].x != imp[ i + 1 ].x ) continue;\n        Graph[ dex1 ].push_back( { dex2 , 2 * ( imp[ i + 1 ].y - imp[ i ].y ) } );\n        Graph[ dex2 ].push_back( { dex1 , 2 * ( imp[ i + 1 ].y - imp[ i ].y ) } );\n    }\n    \n    sort( imp + 1 , imp + m + 1 , cmpy );\n    for( int i = 1 ; i <= m ; i ++ ) {\n        int dex1 = imp[ i ].id + MAXM , dex2 = imp[ i + 1 ].id + MAXM;\n        if( imp[ i ].y != imp[ i + 1 ].y ) continue;\n        Graph[ dex1 ].push_back( { dex2 , 2 * ( imp[ i + 1 ].x - imp[ i ].x ) } );\n        Graph[ dex2 ].push_back( { dex1 , 2 * ( imp[ i + 1 ].x - imp[ i ].x ) } );\n    }\n    \n\tsort( imp + 1 , imp + m + 1 , cmpi );\n    for( int i = 1 ; i <= m ; i ++ ) {\n        int f = ( i <= m - 2 ) , dex1 = imp[ i ].id , dex2 = imp[ i ].id + MAXM;\n        Graph[ dex1 ].push_back( { dex2 , f } );\n        Graph[ dex2 ].push_back( { dex1 , f } );\n    }\n    printf(\"%d\", Dijkstra( m - 1 , m ) );\n    return 0;\n}\n```\n",
        "postTime": 1571636014,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "![Peipei](http://img.blog.csdn.net/20180120093509502?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcHJldGVuZF9mYWw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)  \n\u8fd8\u662f\u6211\u7684**logo** ^_^\n\n-----\n\n\u8fd9\u4e2a\u9898\u4e4d\u4e00\u770b\u50cf\u4e2a\u7f51\u7edc\u6d41  \n\u7136\u800c\u4e0d\u662f  \n\u7136\u540e\u5c31\u53d1\u73b0\u7279\u522b\u50cf\u6700\u77ed\u8def\u7684\u9898  \n\n\u628a\u6bcf\u4e00\u884c\u7684\u70b9\u4e92\u76f8\u8fde\u8fb9\uff0c\u6bcf\u4e00\u5217\u540c\u7406  \n\u6bcf\u6b21\u8f6c\u79fb\u65f6\u5224\u65ad\u5f53\u524d\u70b9\u662f\u4e0d\u662f\u8f6c\u6298\u70b9\uff0c\u4e00\u6b21\u5224\u65ad\u662f\u5426+1  \n\n\u4f46\u662f\u6709\u4e00\u70b9\u8ba9\u8fd9\u9053\u9898\u4e0d\u50cf\u6700\u77ed\u8def\uff1a \n### \u5982\u679c\u4e00\u6761\u7ebf\u4e0a\u5168\u662f\u8f6c\u6298\u70b9\uff0c\u90a3\u5c82\u4e0d\u662f\u8fb9\u7684\u6761\u6570\u8981\u8fbe\u5230  \n# n^2 !!!  \n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u6709\u4e9b\u8fb9\u662f\u6ca1\u5fc5\u8981\u5efa\u7684\uff0c\u6bd4\u5982 A -> B -> C  \n\u90a3\u4e48\u6211\u4eec\u5c31\u6ca1\u5fc5\u8981\u5efa\u4e00\u6761 A -> C \u7684\u8fb9\u4e86  \n\u6240\u4ee5\u6211\u4eec\u628a\u76f8\u90bb\u7684\u5efa\u8fb9\uff0cspfa \u98de\u8fc7\u5c31\u597d\u4e86  \n\n\u4f46\u662f\u6709\u4e2a\u5c0f\u7ec6\u8282\uff0c\u5c31\u50cf A -> B -> C \u4e2d B \u4e0d\u80fd\u7b97\u4f5c\u8f6c\u6298\u70b9  \n\u5728 B \u5904\u4e0d +1  \n\u81f3\u4e8e\u5982\u4f55\u5224\u65ad\u5f53\u524d\u70b9\u662f\u5426\u4e3a\u8f6c\u6298\u70b9  \n\u6211\u4eec\u8bb0\u5f55\u5f53\u524d\u70b9\u7684 fa[x]  \n\u5224\u65ad \u5982\u679c fa[x] \u4e0e go(\u5373\u5c06\u8f6c\u79fb\u7684\u70b9) \u4e0d\u5171\u7ebf\uff0c \u90a3\u4e48 x \u5c31\u662f\u4e00\u4e2a\u8f6c\u6298\u70b9  \n\n--------------\n\n```cpp\n#include <bits/stdc++.h>\n#define II int\n#define IL inline\n#define R register\n#define I 423546\nusing namespace std;\n\nIL void of(R II &a) {\n\tR char c=getchar (); R II w=1, p=0;\n\twhile (c<'0' || c>'9') { if(c=='-') w=-1; c=getchar (); }\n\twhile (c>='0' && c<='9') { p=p*10+c-'0'; c=getchar (); }\n\ta=w*p;\n}\n\n/* -------------------- Peipei -------------------- */\n\nII n,m,_tot;\nII head[I], dis[I], inq[I], fa[I];\nqueue <II> Q;\n\nstruct oAo { II x,y,wei; } edge[I];\nIL bool maPx(oAo a1,oAo a2) { return a1.x==a2.x ? a1.y<a2.y : a1.x<a2.x ;}\nIL bool maPy(oAo a1,oAo a2) { return a1.y==a2.y ? a1.x<a2.x : a1.y<a2.y ;}\nIL bool maPwei(oAo a1,oAo a2) { return a1.wei<a2.wei ;}\n\nstruct owo { II to,up,w; } aa[I];\nIL void add(R II x,R II y,R II z) {\n\taa[++_tot]=(owo) {y,head[x],z};\n\thead[x]=_tot;\n}\n\nIL void spfa() {\n\tfor(R II i=1;i<=m+1;i++) dis[i]=1e9;\n\tQ.push(0); inq[0]=1; dis[0]=0;\n\twhile (!Q.empty()) {\n\t\tR II x=Q.front(); Q.pop(); inq[x]=0;\n\t\tfor(R II i=head[x],go,K;i;i=aa[i].up)\n\t\t{\n\t\t\tgo=aa[i].to; \n\t\t\tK=(edge[fa[x]].x!=edge[go].x && edge[fa[x]].y!=edge[go].y);\n\t\t\tif(dis[go]>dis[x]+aa[i].w+K) {\n\t\t\t\tdis[go]=dis[x]+aa[i].w+K;\n\t\t\t\tif(!inq[go]) Q.push(go), inq[go]=1;\n\t\t\t\tfa[go]=x;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dis[m+1]);\n\texit(0);\n}\n\nint main()\n{\n\tof(n); of(m);\n\tfor(R II i=1;i<=m;i++) \n\t\tof(edge[i].x), of(edge[i].y), edge[i].wei=i;\n\tof(edge[0].x); of(edge[0].y);\n\tof(edge[m+1].x); of(edge[m+1].y); \n\tedge[m+1].wei=m+1;\n\t\n\tsort(edge,edge+m+2,maPx);\n\tfor(R II i=0;i<=m;i++) \n\t\tif(edge[i].x==edge[i+1].x) {\n\t\t\tadd(edge[i].wei,edge[i+1].wei,abs(edge[i].y-edge[i+1].y)*2);\n\t\t\tadd(edge[i+1].wei,edge[i].wei,abs(edge[i].y-edge[i+1].y)*2);\n\t\t}\n\tsort(edge,edge+m+2,maPy);\n\tfor(R II i=0;i<=m;i++) \n\t\tif(edge[i].y==edge[i+1].y) {\n\t\t\tadd(edge[i].wei,edge[i+1].wei,abs(edge[i].x-edge[i+1].x)*2);\n\t\t\tadd(edge[i+1].wei,edge[i].wei,abs(edge[i].x-edge[i+1].x)*2);\n\t\t}\n\tsort(edge,edge+m+2,maPwei);\n\t\n\tspfa();\n}\n```\n----------",
        "postTime": 1519457424,
        "uid": 36716,
        "name": "wuzhoupei",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    },
    {
        "content": "~~\u849f\u84bb\u6765\u6c34\u9898\u89e3~~\n\n\u5c06\u6bcf\u4e2a\u8f66\u7ad9\u770b\u4f5c\u4e00\u4e2a\u8282\u70b9\uff0c\u5f88\u660e\u663e\u7684\u6700\u77ed\u8def,\u6b63\u6743\u56fe\u7528dijkstra\n\n### \u600e\u4e48\u5b58\u56fe\uff1f\n\n\u4e00\u5f00\u59cb\u91cd\u65b0\u5efa\u4e86\u4e2a\u56fe\u2014\u2014\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u5728\u4e00\u6761\u7ebf\u4e0a\u5c31\u5efa\u8fb9\n\nT\u4e86\uff0c60pts\n\n\u5176\u5b9e\u53ef\u4ee5\u628a\u6a2a\u5411\u7684\u548c\u7ad6\u5411\u7684\u5206\u522b\u5b58\u4e00\u4e2a\u56fe\u3002\n\n\uff08\u90bb\u63a5\u8868\uff09vec1[i]\u8868\u793a\u7b2ci\u884c\u7684\u8282\u70b9\uff0cvec2[i]\u8868\u793a\u7b2ci\u5217\u7684\u8282\u70b9\n\ndijkstra\u65f6\u628avec1\u548cvec2\u90fd\u904d\u5386\u4e00\u904d\u5373\u53ef\n\n### dis\u6570\u7ec4\u600e\u4e48\u5b58\uff1f\n\ndis[i][j]\u8868\u793a\u7b2ci\u884c\u7b2cj\u5217\u7684\u8ddd\u79bb\n\n$n\\le20000$,$n^2$\u7684\u4e8c\u7ef4\u6570\u7ec4\u4f1aMLE\n\nSTL\u63d0\u4f9b\u4e86\u5bb9\u5668unordered_map,\u7528\u6cd5\u548cmap\u5dee\u4e0d\u591a\uff0c\u5185\u90e8\u662fhash\n\n```cpp\n#include<unordered_map>\nunordered_map<int,unordered_map<int,int> > dis;\n```\n\n### \u600e\u4e48\u5904\u7406\u6362\u4e58\u7684\u65f6\u95f4\uff1f\n\n\u5c06\u6bcf\u6761\u8fb9+1\uff0c\u8f93\u51fa\u7b54\u6848\u65f6-1\uff08\u690d\u6811\u95ee\u9898\uff09\n\n### code:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nvector<int> vec1[100030];//\u6a2a\u5411\u56fe\nvector<int> vec2[100030];//\u7ad6\u5411\u56fe\nunordered_map<int,unordered_map<int,int> > dis;\nint xx1,yy1,xx2,yy2;//\u8d77\u70b9\u548c\u7ec8\u70b9\nstruct node{\n\tint x,y,cost;//\u5750\u6807\u3001\u8ddd\u79bb\n};\ninline bool operator<(const node& a,const node& b{\n\treturn a.cost>b.cost;\n}\npriority_queue<node> que;\nvoid dij(){\n\tque.push({xx1,yy1,0});\n\tdis[xx1][yy1]=0;\n\twhile(!que.empty()){\n\t\tnode temp=que.top();\n\t\tque.pop();\n\t\tif(temp.cost!=dis[temp.x][temp.y])continue;\n\t\tfor(auto it:vec1[temp.x]){//\u904d\u5386\u6a2a\u5411\u56fe\n\t\t\tif(it==temp.y)continue;\n\t\t\tif(dis[temp.x][it]==0&&(temp.x!=xx1||it!=yy1)||dis[temp.x][it]>temp.cost+2*abs(temp.y-it)+1){//\u6bcf\u6761\u8fb9\u90fd+1\n\t\t\t\tdis[temp.x][it]=temp.cost+2*abs(temp.y-it)+1;\n\t\t\t\tque.push({temp.x,it,dis[temp.x][it]});\n\t\t\t}\n\t\t}\n\t\tfor(auto it:vec2[temp.y]){//\u904d\u5386\u7eb5\u5411\u56fe\n\t\t\tif(it==temp.x)continue;\n\t\t\tif(dis[it][temp.y]==0&&(it!=xx1||temp.y!=yy1)||dis[it][temp.y]>temp.cost+2*abs(temp.x-it)+1){\n\t\t\t\tdis[it][temp.y]=temp.cost+2*abs(temp.x-it)+1;\n\t\t\t\tque.push({it,temp.y,dis[it][temp.y]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=m+2;++i){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tif(i==m+1){//m+1\u8868\u793a\u8d77\u70b9\n\t\t\txx1=x;\n\t\t\tyy1=y;\n\t\t}\n\t\tif(i==m+2){//m+2\u8868\u793a\u7ec8\u70b9\n\t\t\txx2=x;\n\t\t\tyy2=y;\n\t\t}\n\t\tvec1[x].push_back(y);\n\t\tvec2[y].push_back(x);\n\t}\n\tdij();\n\tcout<<dis[xx2][yy2]-1<<endl; //\u8bb0\u5f97-1\n} \n```\n",
        "postTime": 1603103666,
        "uid": 190909,
        "name": "cheating_dictator",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3831 \u3010[SHOI2012]\u56de\u5bb6\u7684\u8def\u3011"
    }
]