[
    {
        "content": "\u8bb0 $w = \\max\\{a_i\\}$\u3002\n\n\u8003\u8651\u8ba1\u7b97\u6bcf\u4e2a\u7d20\u6570\u7684\u8d21\u732e\u3002\u5bf9\u7d20\u6570\u6309 $\\sqrt w$ \u5206\u7c7b\uff0c\u5219\u6bcf\u4e2a $a_i$ \u4ec5\u5305\u542b\u81f3\u591a\u4e00\u4e2a $> \\sqrt w$ \u7684\u7d20\u56e0\u5b50\u3002\n\n\u5bf9\u4e8e\u7d20\u6570 $p \\le \\sqrt w$\uff0c\u8bbe\u533a\u95f4\u4e2d\u6709 $k$ \u4e2a $p$ \u7684\u500d\u6570\uff0c\u5219 $\\gcd$ \u4e3a $p$ \u500d\u6570\u7684\u975e\u7a7a\u5b50\u96c6\u6709 $2^k - 1$ \u4e2a\u3002\u5bf9\u4e8e $p^2, p^3, \\dots$\uff0c\u53ef\u4ee5\u5728\u5148\u524d\u7684\u57fa\u7840\u4e0a\u589e\u91cf\u8ba1\u7b97\u8d21\u732e\uff0c\u540c\u6837\u4e5f\u4e3a $p^{2^k-1}$\u3002\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406 $p^1, p^2, p^4, \\dots, p^{2^n}$ \u4e0e $p^{-1}$\uff0c\u5feb\u901f\u8ba1\u7b97\u6bcf\u6b21\u8be2\u95ee\u7684\u7b54\u6848\u3002\u4e0d\u96be\u8bc1\u660e\u7d20\u6570\u5e42\u7684\u4e2a\u6570\u662f $O(\\sqrt w)$ \u7ea7\u522b\u7684\uff0c\u56e0\u6b64\u8be5\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\sqrt w)$\u3002\u53ef\u4ee5\u901a\u8fc7\u79bb\u7ebf\u505a\u5230 $O(n + m + w)$ \u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\n\n\u5bf9\u4e8e\u7d20\u6570 $p > \\sqrt w$\uff0c\u4e0d\u540c\u7684 $p$ \u7684\u603b\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7 $n$\uff0c\u53ef\u4ee5\u540c\u4e0a\u9884\u5904\u7406\u51fa $p^1, p^2, p^4, \\dots$\u3002\u67e5\u8be2\u65f6\u9700\u8981\u67e5\u8be2\u533a\u95f4\u4e2d $p$ \u7684\u500d\u6570\u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u83ab\u961f\u89e3\u51b3\u3002\u8be5\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt m)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n + m)$\u3002\n\n\u7efc\u4e0a\uff0c\u53ef\u4ee5\u5728 $O(n \\sqrt w + m\\sqrt w + n \\sqrt m)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c$O(n + m + w)$ \u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u672c\u9898\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define Getchar() p1 == p2 and (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++\nchar buf[1 << 21], *p1, *p2;\nint read (void)\n{\n    int x = 0; char c = Getchar();\n    while (c < '0' or c > '9') c = Getchar();\n    while (c >= '0' and c <= '9') x = x * 10 + c - 48, c = Getchar();\n    return x;\n}\nconst int maxn = 1 << 17;\nconst int mod = 998244353;\nint n, m, a[maxn], S, pos[maxn], ans[maxn], res_pow = 1, res_inv = 1;\nint M, B, pr[maxn], tot, inv[maxn], Pow[maxn], sum[maxn];\nint cnt[maxn], vec[maxn], L[maxn], C;\nstruct query {int l, r, id;} q[maxn];\nint sqr (int x) {return 1LL * x * x % mod;}\nint power (int x, int y)\n{\n    int z = 1;\n    for (; y; y >>= 1, x = 1LL * x * x % mod) if (y & 1) z = 1LL * z * x % mod;\n    return z;\n}\nvoid sieve (int B)\n{\n\tstd::vector<int> vis(B + 1, 0);\n\tfor (int i = 2; i <= B; i++) if (!vis[i])\n\t{\n\t\tpr[++tot] = i;\n\t\tfor (int j = i; j <= B; j += i) vis[j] = 1;\n\t}\n}\nvoid add (int w) {if (w > 1) res_pow = 1LL * res_pow * vec[L[w] + (cnt[w]++)] % mod;}\nvoid del (int w) {if (w > 1) res_inv = 1LL * res_inv * vec[L[w] + (--cnt[w])] % mod;}\nsigned main ()\n{\n\tn = read(); m = read(); S = n / sqrt(m);\n\tfor (int i = 1; i <= n; i++) M = std::max(M, a[i] = read()), pos[i] = (i - 1) / S + 1;\n\tsieve(B = sqrt(M)); inv[0] = inv[1] = 1;\n\tfor (int i = 2; i <= M; i++) inv[i] = 1LL * (mod - mod / i) * inv[mod % i] % mod;\n\tfor (int i = 1; i <= m; i++) q[i].l = read(), q[i].r = read(), q[i].id = i, ans[i] = 1;\n\tfor (int i = 1; i <= tot; i++)\n\t{\n\t\tPow[0] = pr[i];\n\t\tfor (int j = 1; j <= n; j++) Pow[j] = sqr(Pow[j - 1]);\n\t\tfor (int j = pr[i]; j <= M; j *= pr[i])\n\t\t{\n\t\t\tfor (int k = 1; k <= n; k++) sum[k] = sum[k - 1] + (a[k] % j == 0);\n\t\t\tfor (int k = 1; k <= m; k++) ans[k] = 1LL * ans[k] * Pow[sum[q[k].r] - sum[q[k].l - 1]] % mod * inv[pr[i]] % mod;\n\t\t}\n\t\tfor (int j = 1; j <= n; j++) while (a[j] % pr[i] == 0) a[j] /= pr[i];\n\t}\n\tfor (int i = 1; i <= n; i++) if (a[i] > 1) cnt[a[i]]++;\n\tfor (int i = 1; i <= M; i++) if (cnt[i])\n\t{\n\t\tvec[L[i] = ++C] = i;\n\t\tfor (int j = 1; j < cnt[i]; j++) ++C, vec[C] = sqr(vec[C - 1]);\n\t}\n\tfor (int i = 1; i <= M; i++) cnt[i] = 0;\n\tstd::sort(q + 1, q + m + 1, [] (const query &q1, const query &q2) {return pos[q1.l] == pos[q2.l] ? q1.r < q2.r : q1.l < q2.l;});\n\tfor (int i = 1, l = 1, r = 0; i <= m; i++)\n\t{\n\t\twhile (l > q[i].l) add(a[--l]);\n\t\twhile (r < q[i].r) add(a[++r]);\n\t\twhile (l < q[i].l) del(a[l++]);\n\t\twhile (r > q[i].r) del(a[r--]);\n\t\tans[q[i].id] = 1LL * ans[q[i].id] * res_pow % mod * power(res_inv, mod - 2) % mod;\n\t}\n\tfor (int i = 1; i <= m; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1676112667,
        "uid": 46197,
        "name": "_RSY_",
        "ccfLevel": 10,
        "title": "\u3010\u9898\u89e3\u3011P9060"
    },
    {
        "content": "\u597d\u4e45\u6ca1\u5199 Ynoi \u4e86\uff0c\u518d\u4e0d\u5199\u4e0d\u4f1a\u5199\u4e86\u3002\u54e6\u597d\u50cf\u5df2\u7ecf\u4e0d\u4f1a\u5199\u4e86\uff0c\u90a3\u6ca1\u4e8b\u4e86\u3002\n\n\u7531\u4e8e\u662f\u6c42\u4e58\u79ef\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u8d28\u56e0\u5b50\u72ec\u7acb\u3002\u8bbe\u8d28\u56e0\u5b50 $p$ \u5728 $a_i$ \u91cc\u9762\u51fa\u73b0 $b_{p,i}$ \u6b21\uff0c\u5219\u5bf9\u4e8e\u8be2\u95ee $[l,r]$\uff0c$p$ \u5c06\u4f1a\u5411\u7b54\u6848\u8d21\u732e $\\sum_{S\\in [l,r]}\\min_{i\\in S}b_{p,i}$ \u6b21\u3002\u8fd9\u7b49\u4e8e $\\sum_{i=0}^{+\\infty}(2^{\\sum_{j=l}^r[b_{p,j}\\geq i]}-1)$\u3002\n\n\u7136\u540e\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\u5bf9\u4e8e\u4efb\u610f\u8d28\u6570 $p\\leq \\sqrt V$\uff0c\u8003\u8651\u5176\u6240\u6709 $p^k\\leq V$\uff0c\u7ef4\u62a4\u51fa\u524d\u7f00\u548c $s_{p,k,i}=\\sum_{j=1}^i[p^k|a_i]$\u3002\u6e10\u8fdb\u590d\u6742\u5ea6\u662f $O\\left(n\\times \\dfrac{\\sqrt V}{\\log V}\\times \\log V\\right)=O(n\\sqrt V)$\uff0c\u770b\u8d77\u6765\u6709\u70b9\u5927\uff0c\u4f46\u5176\u5b9e\u6ee1\u8db3 $p\\leq \\sqrt V$ \u662f\u8d28\u6570\uff0c$p^k\\leq V$ \u7684 $(p,k)$ \u5bf9\u5728 $V=10^5$ \u65f6\u53ea\u6709 $170$ \u4e2a\u5de6\u53f3\uff0c\u6240\u4ee5\u6ca1\u95ee\u9898\u3002\n\n\u7136\u540e\u8fd9\u4e00\u90e8\u5206\u7684\u8d21\u732e\u53ea\u9700\u8981\u80fd\u591f\u7b97\u51fa $p^{2^k-1}$ \u5c31\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b $O(\\sqrt V)$ \u8ba1\u7b97\u3002\u8fd9\u53ef\u4ee5\u76f4\u63a5\u9012\u63a8 $p^{2^k}=(p^{2^{k-1}})^2$\u3002\n\n\u5bf9\u4e8e\u8d28\u6570 $p>\\sqrt V$\uff0c\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u6700\u591a\u51fa\u73b0\u4e00\u4e2a\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u5173\u5fc3\u533a\u95f4\u91cc\u9762\u6709\u591a\u5c11\u4e2a\u3002\u5bb9\u6613\u83ab\u961f\u7ef4\u62a4\u3002\u9700\u8981 $p^{2^k}$ \u4ee5\u53ca $p^{-2^{k}}$ \u7684\u4fe1\u606f\u3002\u6ce8\u610f\u5230\u5bf9\u4e8e\u6240\u6709\u7684 $p$\uff0c\u9700\u8981\u7684 $k$ \u603b\u548c\u662f $O(n)$ \u91cf\u7ea7\uff0c\u4e8e\u662f\u4e5f\u53ef\u4ee5\u9012\u63a8\u3002\n\n\u4e8e\u662f\u5c31 $O(n\\sqrt q+n\\sqrt V)$ \u505a\u5b8c\u4e86\u3002\n\n```cpp\ninline void Prefix() {\n    int tot = 0;\n    for (int i = 2;i <= S;i++) {\n        if (isp(i)) {\n            pri.push_back(i);\n            int cur = i;\n            int pwr = 1;\n            while (cur <= 100000) {\n                tot++;\n                idx[i][pwr] = tot;\n                pwr++;\n                cur *= i;\n            }\n            int sz = pri.size();\n            pwx[sz][0] = i;\n            for (int j = 1;j <= n;j++) pwx[sz][j] = pwx[sz][j - 1] * pwx[sz][j - 1] % mod;\n        }\n    }\n    ptot = tot;\n    for (int i = 1;i <= n;i++) {\n        sp[i] = 1;\n        int tmp = a[i];\n        for (int j = 2;j * j <= tmp;j++) {\n            if (tmp % j == 0) {\n                int k = 0;\n                while (tmp % j == 0) {\n                    tmp /= j;\n                    k++;\n                    pct[i][idx[j][k]]++;\n                }\n            }\n        }\n        if (tmp > 1) {\n            if (tmp > S) sp[i] = tmp;\n            else pct[i][idx[tmp][1]]++;\n        }\n    }\n    for (int i = 1;i <= n;i++) {\n        for (int j = 1;j <= ptot;j++) pct[i][j] += pct[i - 1][j];\n    }\n    for (int i = 1;i <= 100000;i++) pwl[i].push_back(i);\n    for (int i = 1;i <= 100000;i++) pwil[i].push_back(inv[i] = Power(i, mod - 2));\n    for (int i = 1;i <= n;i++) {\n        if (sp[i] != 1) {\n            pwl[sp[i]].push_back(pwl[sp[i]].back() * pwl[sp[i]].back() % mod);\n            pwil[sp[i]].push_back(pwil[sp[i]].back() * pwil[sp[i]].back() % mod);\n        }\n    }\n    for (int i = 1;i <= pri.size();i++) {\n        for (int j = 0;j <= n;j++) pwx[i][j] = pwx[i][j] * inv[pri[i - 1]] % mod;\n    }\n    for (int i = 1;i <= n;i++) {\n        for (long long &j : pwl[i]) j = j * inv[i] % mod;\n        for (long long &j : pwil[i]) j = j * i % mod;\n    }\n}\n\ninline void Add(int i) {\n    if (sp[i] != 1) {\n        cur = cur * pwil[sp[i]][mct[sp[i]]] % mod;\n        mct[sp[i]]++;\n        cur = cur * pwl[sp[i]][mct[sp[i]]] % mod;\n    }\n}\n\ninline void Rmv(int i) {\n    if (sp[i] != 1) {\n        cur = cur * pwil[sp[i]][mct[sp[i]]] % mod;\n        mct[sp[i]]--;\n        cur = cur * pwl[sp[i]][mct[sp[i]]] % mod;\n    }\n}\n\ninline void Solve() {\n    sort(qry + 1, qry + q + 1);\n    int l = 1, r = 0; cur = 1;\n    //for (int i = 1;i <= n;i++) cout << sp[i] << \" \";\n    //cout << endl;\n    for (int i = 1;i <= q;i++) {\n        //cout << qry[i].l << \" \" << qry[i].r << endl;\n        while (l > qry[i].l) Add(--l);\n        while (r < qry[i].r) Add(++r);\n        while (l < qry[i].l) Rmv(l++);\n        while (r > qry[i].r) Rmv(r--);\n        ans[qry[i].i] = cur;\n        for (int j = 1;j <= pri.size();j++) {\n            for (int k = 1;idx[pri[j-1]][k] != 0;k++) {\n                //cout << pct[qry[i].r][idx[pri[j-1]][k]] - pct[qry[i].l - 1][idx[pri[j-1]][k]] << endl;\n                ans[qry[i].i] = ans[qry[i].i] * pwx[j][pct[qry[i].r][idx[pri[j-1]][k]] - pct[qry[i].l - 1][idx[pri[j-1]][k]]] % mod;\n            }\n        }\n    }\n    for (int i = 1;i <= q;i++) cout << ans[i] << \"\\n\";\n}\n```\n\n",
        "postTime": 1675954242,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P9060 \u3010[Ynoi2002] Goedel Machine\u3011"
    },
    {
        "content": "### Part1 \u524d\u8a00\n\n\u6bd4\u8f83 Easy \u7684 Ynoi\uff0c\u53ea\u662f\u60f3\u534a\u5c0f\u65f6\uff0c\u5199\u534a\u5c0f\u65f6\uff0c\u7adf\u7136\u5bf9\u7740\u5c0f\u6837\u4f8b\u8c03\u5b8c\u5c31\u76f4\u63a5\u8fc7\u4e86\u3002\n\n### Part2 \u8f6c\u5316\u6210\u53ef\u7ef4\u62a4\u5f62\u5f0f\n\n\u5e94\u8be5\u662f\u7ecf\u5178\u7684\u5bb9\u65a5\u5957\u8def\uff0c\u8bbe $cnt_x$ \u8868\u793a\u6570\u5b57 $\\sum\\limits_{i=1}^n[x|a_i]$\uff0c$cnt_{[l,r],x}$ \u8868\u793a $\\sum\\limits_{i=l}^r[x|a_i]$\u3002\n\n\u8bbe $p$ \u4e3a**\u8d28\u6570**\uff0c\u5219\u7b54\u6848\u4e3a $\\prod\\limits_{p^k\\le n}p^{2^{cnt_{[l,r],p^k}}-1}$\u3002\n\n\u4ee4 $A$ \u4e3a $a_i$ \u7684\u6700\u5927\u503c\uff0c\u8fd9\u6837\u5c31\u81f3\u5c11\u53ef\u4ee5\u5f97\u51fa $O(nA)$ \u7684\u66b4\u529b\u4e86\u3002\n\n### Part3 \u975e\u66b4\u529b\u4e0d\u53ef\u8fc7\u89e3\n\n\u9996\u5148\u5bf9\u6bcf\u4e00\u4e2a $p$ \u9884\u5904\u7406\u51fa $p^{2^k}$ \u53ca\u5176\u9006\u5143\uff0c\u8003\u8651\u5728\u533a\u95f4\u91cc\u589e\u52a0\u4e00\u4e2a\u6570 $d$\uff0c\u5219\u679a\u4e3e\u6240\u6709\u7684 $p^k|d$\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7d20\u6570\u7b5b\u9884\u5904\u7406\u505a\u5230 $O(\\log_2d)$\uff0c\u800c\u5c06 $cnt_{[l,r],p^k}$ \u4ece $x$ \u53d8\u4e3a $x+1$\uff0c\u53ea\u9700\u8981\u5c06\u7b54\u6848\u4e58\u4e0a $p^{2^x}$ \u5373\u53ef\uff0c\u5220\u9664\u4e00\u4e2a\u6570\u5c31\u4e58\u9006\u5143\uff0c\u8fd9\u90e8\u5206\u662f $O(1)$ \u7684\u3002\n\n\u65e2\u7136\u53ef\u4ee5\u5728 $O(\\log_2d)$ \u7684\u65f6\u95f4\u5185\u52a0\u51cf\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u83ab\u961f\u4e86\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt m\\log_2A)$\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\uff0c\u5230\u8fd9\u90e8\u5206\u5e94\u8be5\u90fd\u662f\u5927\u4f17\u5206\u3002\n\n### Part4 \u975e\u66b4\u529b\u53ef\u8fc7\u89e3\uff08\u6b63\u89e3\uff09\n\n\u662f\u4e0d\u662f\u5bf9\u4e8e\u8fd9\u4e9b\u8d28\u6570\u603b\u662f\u8981\u6839\u53f7\u5206\u6cbb\u7684\u5440\uff1f\n\n\u8003\u8651\u4e0a\u9762\u7b97\u6cd5\u7684\u74f6\u9888\u5728\u4e8e\u52a0\u51cf\u6570\u65f6\u6570\u5b57\u8d28\u56e0\u6570\u592a\u591a\u4e86\uff0c\u8981\u662f\u6240\u6709 $a_i$ \u90fd\u53ea\u6709 $\\sqrt A$ \u4ee5\u4e0a\u7684\u8d28\u56e0\u6570\u5c31\u597d\u4e86\uff0c\u5177\u4f53\u5730\uff0c\u6b64\u65f6\u6240\u6709 $a_i$ \u90fd\u662f $1$ \u6216\u8d28\u6570\uff0c\u8fd9\u65f6\u518d\u83ab\u961f\u5c31\u662f $O(n\\sqrt m)$ \u7684\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u5bf9 $\\sqrt A$ \u4ee5\u4e0b\u7684\u8d28\u6570\u7279\u6b8a\u5bf9\u5f85\uff0c\u5373\u5728\u83ab\u961f\u4e4b\u524d\u5c31\u5c06\u5b83\u4eec\u7684\u8d21\u732e\u8ba1\u7b97\u597d\uff0c\u5176\u5b9e\u53ea\u8981\u679a\u4e3e $p^k\\le n$\uff0c\u5c06 $cnt_{[1,r],p^k}$ \u7684\u524d\u7f00\u548c\u6c42\u51fa\u6765\uff0c\u6bcf\u4e00\u4e2a\u8be2\u95ee\u53ef\u4ee5 $O(1)$ \u66f4\u65b0\uff0c\u8fd9\u91cc\u7531\u4e8e\u8d28\u6570\u4e2a\u6570\u5927\u7ea6 $\\dfrac{\\sqrt A}{\\ln A}$ \u4e2a\uff0c\u6bcf\u4e00\u4e2a\u8d28\u6570\u5927\u7ea6\u8981\u7b97 $\\ln A$ \u6b21\uff0c\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u662f $O((n+m)\\sqrt A)$ \u7684\u3002\n\n\u6ce8\u610f\u5230\u7b97 $p^{2^k}$ \u65f6\uff0c$p$ \u7684\u6bcf\u4e00\u6b21\u51fa\u73b0\u90fd\u4f1a\u6709\u4e00\u6b21\u8d21\u732e\uff0c\u800c\u6700\u591a\u4f1a\u51fa\u73b0 $n\\log_2A$ \u6b21\uff0c\u8fd9\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log_2A\\log_2M)$ \u7684\u3002\n\n\u5bf9\u4e8e $\\sqrt A$ \u4ee5\u4e0b\u7684 $p^{2^k}$ \u53ef\u4ee5\u5171\u7528\u4e00\u4e2a\u6570\u7ec4\uff0c$\\sqrt A$ \u4ee5\u4e0a\u7684 $p$ \u6700\u591a\u51fa\u73b0 $n$ \u6b21\uff0c\u6240\u4ee5\u7a7a\u95f4\u7ebf\u6027\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd9\u9898\u7a7a\u95f4\u5f00\u8fd9\u4e48\u5927\uff1f\n\n\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n(\\log_2A\\log_2M+\\sqrt m)+(n+m)\\sqrt A)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n+m+A)$\uff0c\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\uff0c\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\u3002\n\n### Part5 \u540e\u8bb0\n\n\u77e5\u9053\u81ea\u5df1\u5b9e\u529b\u4e0d\u591f\uff0c\u5207\u8fd9\u79cd\u9898\u7eaf\u5c5e\u4fa5\u5e78\uff0c\u800c\u4e14\u6570\u636e\u7ed3\u6784\u5f80\u5f80\u5728\u6b63\u5f0f\u8003\u8bd5\u4e2d\u53ea\u5360\u5c0f\u90e8\u5206\u751a\u81f3\u90fd\u662f\u7528\u4f5c\u9632 AK\uff0c\u6240\u4ee5\u6682\u65f6\u4ee5\u6211\u7684\u5b9e\u529b\u4e5f\u53ea\u80fd\u6d45\u5c1d\u8f84\u6b62\u4e86\u3002",
        "postTime": 1676163926,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u6839\u53f7\u5206\u6cbb\u548c\u666e\u901a\u83ab\u961f"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P9060)\n\nJRKSJ \u66fe\u7ecf\u6709\u4e00\u9053\u7c7b\u4f3c\u7684\u9898\uff0c\u4f46\u548c\u8fd9\u9898\u91cd\u4e86\u3002\n\n## \u9898\u610f\n\u7ed9\u4e00\u6b21\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u6bcf\u6b21\u67e5\u8be2 $[l,r]$ \u7684\u6240\u6709\u5b50\u5e8f\u5217\u7684 $\\gcd$ \u7684\u4e58\u79ef\uff0c\u5bf9 $998244353$ \u53d6\u6a21\u3002\n\n$n,q,a_i\\le 10^5$\u3002\n## \u601d\u8def\n\u8d28\u56e0\u6570\u76f8\u5173\uff0c\u76f4\u63a5\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\u7531\u4e8e\u662f\u4e58\u79ef\uff0c\u5404\u8d28\u56e0\u5b50\u8d21\u732e\u72ec\u7acb\u3002\n\n\u8bb0 $v=\\max(a_i)$\u3002\u6211\u4eec\u5148\u7b5b\u51fa $v$ \u4ee5\u5185\u7684\u8d28\u6570\u3002\n\n\u5bf9\u4e8e $p\\le\\sqrt v$\uff0c\u8fd9\u7c7b\u6570\u53ea\u6709 $O(\\pi(\\sqrt v))\u2248O(\\dfrac {\\sqrt v}{\\log v})$ \u4e2a\uff0c\u8003\u8651\u4f7f\u7528 $O(n\\log)$ \u7ea7\u522b\u7684\u505a\u6cd5\u6c42\u51fa\u8fd9\u4e2a\u8d28\u6570\u5bf9\u6240\u6709\u8be2\u95ee\u7684\u8d21\u732e\u3002\u8003\u8651\u8bb0 $s_{i}$ \u8868\u793a $\\max_{p^k|a_i}k$\uff0c\u8bb0 $e_{i,j}=\\sum_{k=1}^i[s_i=j]$\uff0c$f_{i,j}=\\sum_{k=1}^i[s_i>j]$\uff0c\u5219\u5bf9\u4e8e\u8be2\u95ee $[l,r]$\uff0c\u679a\u4e3e $k$ \u8868\u793a\u533a\u95f4\u5185\u5728\u8fd9\u4e2a\u8d28\u56e0\u6570\u7684 $\\gcd$ \u7b49\u4e8e $p^k$\uff0c\u4ee4 $a=e_{r,k}-e_{l-1,k},b=f_{r,k}-f_{l-1,k}$\uff0c\u5219\u8fd9\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u9700\u8981\u4e58\u4e0a $p^{k(2^a-1)2^b}$\uff0c\u4f46\u662f\u6b64\u5904\u7684\u590d\u6742\u5ea6\u4e0d\u5141\u8bb8\u6211\u4eec\u518d\u4f7f\u7528\u5feb\u901f\u5e42\u4e86\u3002\n\n\u6211\u4eec\u60f3\u7b97\u51fa $p^k$ \u6070\u597d\u4f1a\u5bf9\u8fd9\u4e2a\u533a\u95f4\u8d21\u732e\u591a\u5c11\u6b21\uff0c\u5982\u679c\u6307\u6570\u4e0a\u662f $2^{a+b}-1$ \u5219\u4f1a\u7b97\u591a $p^{k+c}$ \u7684\u6b21\u6570\u3002\u6211\u4eec\u4e00\u4e2a\u9ebb\u70e6\u662f\u6b64\u5904\u7684 $p^k$ \u963b\u788d\u4e86\u6211\u4eec\u7528 $p^{2^i}$ \u8ba1\u7b97\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5982\u679c\u6bcf\u4e2a $c\\in[1,k]$ \u90fd\u8d21\u732e\u4e00\u6b21\uff0c\u90a3\u4e48\u6b64\u5904\u7684 $p^k$ \u5c31\u53ef\u4ee5\u5316\u5f00\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7b97 $p^{2^{a+b}-1}$ \u7684\u79ef\u3002\u5373 $\\prod_k p^{2^{\\sum_{i=l}^r[s_i\\ge k]}-1}$\uff0c$2$ \u7684\u6307\u6570\u4e0a\u7684\u90a3\u4e2a\u53ef\u4ee5\u540c\u6837\u524d\u7f00\u548c\uff0c$p^{2^k-1}$ \u53ef\u4ee5\u9884\u5904\u7406 $p^{2^k}$ \u548c $p^{-1}$ \u6c42\u51fa\u3002\n\n\u5bf9\u4e8e $p>\\sqrt n$\uff0c\u6211\u4eec\u6cbf\u7528\u601d\u8def\uff0c\u5982\u679c\u533a\u95f4\u4e2d\u6709 $k$ \u4e2a\u542b $p$ \u8fd9\u4e2a\u8d28\u56e0\u5b50\u7684\u6570\uff0c\u5219\u4f1a\u6709 $p^{2^k-1}$ \u7684\u8d21\u732e\u3002\u6211\u4eec\u4f7f\u7528\u83ab\u961f\uff0c\u9884\u5904\u7406\u6240\u6709 $p^{2^k-1}$ \u548c $p^{1-2^k}$\uff0c\u7531\u4e8e\u6bcf\u4e2a $p$ \u603b\u7684\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\u662f $n$\uff0c\u6211\u4eec\u9884\u5904\u7406 $k$ \u5230 $p$ \u7684\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(v+n\\pi(\\sqrt v)\\log v+m\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\log v)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=1e5+10,L=18,mod=998244353;\nint n,q,v,a[N],pri[N],cnt,pr[L][N],bgp[N],tot[N],con[N],qp2[N],pt2[N];\nbool vis[N];\nint curL=1,curR,bel[N],blk,sq=400,T,ans[N],res=1;\nvector<int>pqp[N],pip[N];\nstruct Query{\n\tint l,r,id;\n\tinline friend bool operator<(const Query &a,const Query &b){\n\t\treturn bel[a.l]^bel[b.l]?bel[a.l]<bel[b.l]:(bel[a.l]&1?a.r<b.r:a.r>b.r);\n\t}\n}qr[N];\ninline void seive(int n){\n\tvis[1]=1;\n\tfor(int i=2;i<=n;i++){\n\t\tif(!vis[i])\n\t\t\tpri[++cnt]=i;\n\t\tfor(int j=1;i*pri[j]<=n;j++){\n\t\t\tvis[i*pri[j]]=1;\n\t\t\tif(i%pri[j]==0) break;\n\t\t}\n\t}\n}\ninline int qpow(int x,int y){\n\tint res=1;\n\twhile(y){\n\t\tif(y&1) res=1ll*res*x%mod;\n\t\tx=1ll*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn res;\n}\ninline void ins(int p){\n\tif(p==1) return ;\n\tres=1ll*res*pip[p][con[p]]%mod;\n\tcon[p]++;\n\tres=1ll*res*pqp[p][con[p]]%mod;\n}\ninline void del(int p){\n\tif(p==1) return ;\n\tres=1ll*res*pip[p][con[p]]%mod;\n\tcon[p]--;\n\tres=1ll*res*pqp[p][con[p]]%mod;\n}\nint main(){\n\tn=read(),q=read();\n\tfor(int i=1;i<=n;i++)\n\t\tv=max(v,a[i]=read());\n\tseive(v);\n\tT=sqrt(v)+2;\n\tfor(int i=1;i<=q;i++)\n\t\tqr[i].l=read(),qr[i].r=read(),qr[i].id=i,ans[i]=1;\n\tif(v==1){\n\t\tfor(int i=1;i<=q;i++)\n\t\t\twrite(1),putc('\\n');\n\t\tflush();\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i+=sq)\n\t\tfor(int j=i,k=++blk;j<=min(i+sq-1,n);j++)\n\t\t\tbel[j]=k;\n\tint pos=1;\n\tfor(;pri[pos+1]<=T&&pos+1<=cnt;pos++);\n\tqp2[0]=1;\n\tfor(int i=1;i<=n;i++)\n\t\tqp2[i]=2ll*qp2[i-1]%(mod-1);\n\tfor(int i=1;i<=pos;i++){\n\t\tint p=pri[i],ip=qpow(p,mod-2);\n\t\tint l=0;\n\t\tfor(int j=1;j<=v;j*=p,l++);\n\t\tl--;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tint k=0;\n\t\t\twhile(a[j]%p==0) k++,a[j]/=p;\n\t\t\tfor(int p=1;p<=l;p++)\n\t\t\t\tpr[p][j]=pr[p][j-1]+(p<=k);\n\t\t}\n\t\tpt2[0]=p;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tpt2[i]=1ll*pt2[i-1]*pt2[i-1]%mod;\n\t\tfor(int i=0;i<=n;i++)\n\t\t\tpt2[i]=1ll*pt2[i]*ip%mod;\n\t\tfor(int j=1;j<=q;j++){\n\t\t\tint L=qr[j].l-1,R=qr[j].r;\n\t\t\tfor(int k=1,mul=p;k<=l;k++,mul=mul*p){\n\t\t\t\tif(mul>v) break;\n\t\t\t\tint ge=pr[k][R]-pr[k][L];\n\t\t\t\tans[j]=1ll*ans[j]*pt2[ge]%mod;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]>1)\n\t\t\ttot[a[i]]++;\n\tfor(int i=pos+1;i<=cnt;i++){\n\t\tif(!tot[pri[i]]) continue;\n\t\tint p=pri[i],ip=qpow(p,mod-2);\n\t\tpqp[p].emplace_back(1);\n\t\tpip[p].emplace_back(1);\n\t\tfor(int i=1,tp=1ll*p*p%mod,qp=1ll*ip*ip%mod;i<=tot[p];i++,tp=1ll*tp*tp%mod,qp=1ll*qp*qp%mod){\n\t\t\tpqp[p].emplace_back(1ll*tp*ip%mod);\n\t\t\tpip[p].emplace_back(1ll*qp*p%mod);\n\t\t}\n\t}\n\tsort(qr+1,qr+q+1);\n\tfor(int i=1;i<=q;i++){\n\t\tint l=qr[i].l,r=qr[i].r;\n\t\twhile(curL>l) ins(a[--curL]);\n\t\twhile(curR<r) ins(a[++curR]);\n\t\twhile(curL<l) del(a[curL++]);\n\t\twhile(curR>r) del(a[curR--]);\n\t\tans[qr[i].id]=1ll*ans[qr[i].id]*res%mod;\n\t}\n\tfor(int i=1;i<=q;i++)\n\t\twrite(ans[i]),putc('\\n'); \n\tflush();\n}\n```\n\n\u518d\u89c1 qwq~",
        "postTime": 1676168119,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P9060\u3010[Ynoi2002] Goedel Machine\u3011"
    },
    {
        "content": "~~\u8bdd\u8bf4\u8fd9\u9898\u9898\u9762\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\u65e0\u610f\u4e49\u5185\u5bb9\u554a w~~\n\n\u8003\u8651\u6240\u6709\u975e\u7a7a\u5b50\u96c6\u7684 $\\gcd$ \u7684\u4e58\u79ef\uff0c\u6211\u4eec\u628a\u4ed6\u8f6c\u5316\u6210\u7b97\u8d21\u732e\u7684\u5f62\u5f0f\uff0c\u4e5f\u5c31\u662f\u679a\u4e3e $\\gcd$\uff0c\u7136\u540e\u6c42\u51fa\u6709\u591a\u5c11\u4e2a\u6570\u662f $\\gcd$ \u7684\u500d\u6570\uff0c\u8003\u8651\u5230\u8fd9\u4e9b\u6570\u53ef\u4ee5\u9009\u6216\u8005\u4e0d\u9009\uff0c\u4f46\u662f\u4e0d\u80fd\u5168\u90e8\u4e0d\u9009\uff0c\u603b\u5171\u6709 $2^{cnt}-1$ \u79cd\u9009\u62e9\uff0c\u4e5f\u5c31\u662f $\\gcd^{2^{cnt}-1}$ \u7684\u8d21\u732e\uff0c\u5f88\u660e\u663e\u8fd9\u4e2a\u6570\u53ef\u4ee5\u9012\u63a8\u9884\u5904\u7406\u5f97\u5230\u3002\n\n\u7136\u540e\u662f $\\gcd$\uff0c\u6211\u4eec\u53d1\u73b0\u53ea\u6709\u8d28\u6570\u548c\u8d28\u6570\u7684\u6b21\u65b9\u6709\u6548\uff0c\u56e0\u4e3a\u5176\u4ed6\u7684\u90fd\u4f1a\u88ab\u8868\u793a\u51fa\u6765\uff0c\u800c\u6b21\u65b9\u53c8\u53ea\u6709\u6700\u9ad8\u6b21\u9879\u53c8\u7528\uff0c\u6211\u4eec\u5f88\u96be\u505a\u7b5b\u9009\uff0c\u6240\u4ee5\u6211\u4eec\u628a $p^k$ \u7684\u8d21\u732e\u7edf\u4e00\u53d8\u6210 $p$\uff0c\u8fd9\u6837\u56e0\u4e3a\u603b\u5171\u6709 $k$ \u4e2a\u6b21\u65b9\u4f1a\u4f5c\u51fa\u8d21\u732e\uff0c\u4e5f\u5c31\u5f97\u5230 $p^k$\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u533a\u95f4\u64cd\u4f5c\u5b9e\u5728\u662f\u4e0d\u597d\u5f04\u554a\u554a\uff0c\u600e\u4e48\u529e\u5462\uff0c\u6211\u4eec\u5c31\u83ab\u961f\uff01\u7136\u540e\u5220\u9664\u5c31\u662f\u4e58\u9006\u5143\u518d\u4e58\u65b0\u7684\u6570\u7ed9\u7684\u8d21\u732e\uff0c\u53ef\u4ee5\u7528\u6b27\u62c9\u7b5b\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7136\u540e\u76f4\u63a5\u505a\u5c31\u662f\u4e86\uff0c\u8fd9\u4e2a\u5c31\u662f $O(n\\sqrt n\\log n)$ \u7684\uff0c\u8fd9\u4e48\u5bf9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c45\u7136\u8fc7\u4e0d\u53bb\uff01\uff01\n\n\u6ca1\u529e\u6cd5\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7531\u6bcf\u4e2a\u6570\u8d28\u56e0\u6570\u5206\u89e3\u7684\u6b21\u6570\u51b3\u5b9a\uff0c\u5982\u679c\u90fd\u662f\u90a3\u79cd\u6bd4 $\\sqrt A$ \u8fd8\u8981\u5927\u7684\u8d28\u6570\uff0c\u90a3\u5c31\u597d\u529e\u4e86\uff0c\u76f4\u63a5\u505a\u4e00\u6b21\uff0c\u4f18\u5316\u6210 $n\\sqrt n$\u3002\n\n\u4f46\u662f\u600e\u4e48\u53ef\u80fd\u8fd9\u4e48\u597d\uff01\uff01\uff01\uff01\n\n\u8bf6\uff0c\u8981\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u628a $sqrt A$ \u4ee5\u4e0b\u7684\u90fd\u9884\u5904\u7406\u5462\uff1f\n\n\u5bf9\u4e8e\u8fd9\u6837\u7684\u8d28\u6570\uff0c\u6211\u4eec\u5148\u5168\u5c40\u5904\u7406\u51fa\u8d28\u6570\u6570\u91cf\uff0c\u7136\u540e\u518d\u7528\u524d\u7f00\u548c\u6765\u5904\u7406\uff01\n\n\u9884\u5904\u7406\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\sqrt A)$\uff01\uff01\uff01\n\n\u5269\u4e0b\u7684\u5168\u90e8\u90fd\u662f\u5355\u4e2a\u7684\u6bd4 $\\sqrt A$ \u8981\u5927\u7684\u8d28\u6570\uff0c\u597d\u554a\uff0c\u8fd9\u4e2a\u8d28\u6570\u53ef\u4ee5\u76f4\u63a5\u505a\uff01\uff01\n\n\u90a3\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u88ab\u62c6\u6210\u4e86 $O(n\\sqrt A+n\\sqrt n)$\uff0c\u975e\u5e38\u725b\uff01\uff01\uff01\uff01\uff01\n\n\u6709\u70b9\u7b54\u8fa9\uff0c\u4f46\u662f\u4e5f\u8fd8\u597d\uff01\n\n\u770b\u5230\u8fd9\u79cd\u603b\u6570\u4e00\u5b9a\u4f46\u662f\u5355\u4e2a\u4e0d\u5b9a\u7684\u5c31\u60f3\u5f00\u4e00\u5927\u5806 vector\uff0c\u8fd9\u6b21\u88ab\u731b\u5361\uff0c\u957f\u6559\u8bad\u4e86\u545c\u545c\u545c\u3002\n\n```cpp\n#include <bits/stdc++.h>\nnamespace FAST_IO\n{\n    using namespace std;\n#define ll long long\n#define ull unsigned long long\n#define db double\n#define _8 __int128_t\n    const int LEN = 1 << 20;\n    char BUF[LEN], PUF[LEN];\n    int Pin = LEN, Pout;\n    inline void flushin()\n    {\n        memcpy(BUF, BUF + Pin, LEN - Pin), fread(BUF + LEN - Pin, 1, Pin, stdin), Pin = 0;\n        return;\n    }\n    inline void flushout()\n    {\n        fwrite(PUF, 1, Pout, stdout), Pout = 0;\n        return;\n    }\n    inline char Getc() { return (Pin == LEN ? (fread(BUF, 1, LEN, stdin), Pin = 0) : 0), BUF[Pin++]; }\n    inline char Get() { return BUF[Pin++]; }\n    inline void Putc(char x)\n    {\n        if (Pout == LEN)\n            flushout(), Pout = 0;\n        PUF[Pout++] = x;\n    }\n    inline void Put(char x) { PUF[Pout++] = x; }\n    template <typename tp = int>\n    inline tp read()\n    {\n        (Pin + 32 >= LEN) ? flushin() : void();\n        tp res = 0;\n        char f = 1, ch = ' ';\n        for (; ch < '0' || ch > '9'; ch = Get())\n            if (ch == '-')\n                f = -1;\n        for (; ch >= '0' && ch <= '9'; ch = Get())\n            res = (res << 3) + (res << 1) + ch - 48;\n        return res * f;\n    }\n    template <typename tp>\n    inline void wt(tp a)\n    {\n        if (a > 9)\n            wt(a / 10);\n        Put(a % 10 + '0');\n        return;\n    }\n    template <typename tp>\n    inline void write(tp a, char b = '\\n')\n    {\n        static int stk[20], top;\n        (Pout + 32 >= LEN) ? flushout() : void();\n        if (a < 0)\n            Put('-'), a = -a;\n        else if (a == 0)\n            Put('0');\n        for (top = 0; a; a /= 10)\n            stk[++top] = a % 10;\n        for (; top; --top)\n            Put(stk[top] ^ 48);\n        Put(b);\n        return;\n    }\n    inline void wt_str(string s)\n    {\n        for (char i : s)\n            Putc(i);\n        return;\n    }\n}\nusing namespace FAST_IO;\n\n#define int long long\nusing namespace std;\nconst int MAXN = 100005;\nconst int MAXA = 100005;\nconst int P = 998244353;\nint n, m;\nint a[MAXN];\nbool vis[MAXA];\nint A[MAXA];\nint d[MAXA];\nint rnk[MAXA];\nvector<int> prime;\nvoid EulerPrime(int n)\n{\n    d[1]=1;\n    for (int i = 2; i <= n; i++)\n    {\n        if (!vis[i])\n        {\n            prime.emplace_back(i);\n            d[i] = i;\n        }\n        for (int p : prime)\n        {\n            if (i * p > n)\n                break;\n            vis[i * p] = true;\n            d[i * p] = min(d[i], d[p]);\n            if (i % p == 0)\n                break;\n        }\n    }\n    return;\n}\nint power(int x, int y = P - 2)\n{\n    if (y == 0)\n        return 1;\n    int tmp = power(x, y >> 1);\n    if (y & 1)\n        return tmp * tmp % P * x % P;\n    return tmp * tmp % P;\n}\nstruct point\n{\n    int lt, rt, block, id;\n} query[MAXA];\nbool cmp(point a, point b)\n{\n    return a.block < b.block ||\n           a.block == b.block && (a.block & 1) && a.rt < b.rt ||\n           a.block == b.block && !(a.block & 1) && a.rt > b.rt;\n}\nvector<int> PM[MAXA];\nvector<int> QM[MAXA];\nint cnt[MAXN][20];\nint ans = 1;\nint T[MAXA];\nvoid add(int cur)\n{\n    if (a[cur] == 0)\n        return;\n    int tmp = T[a[cur]];\n    ans = ans * PM[rnk[a[cur]]][tmp] % P * a[cur] % P;\n    T[a[cur]]++;\n    return;\n}\nvoid del(int cur)\n{\n    if (a[cur] == 0)\n        return;\n    int tmp = T[a[cur]];\n    ans = ans * QM[rnk[a[cur]]][tmp - 1] % P * QM[rnk[a[cur]]][1] % P;\n    T[a[cur]]--;\n    return;\n}\nsigned main()\n{\n    EulerPrime(100000);\n    n = read();\n    m = read();\n    for (int i = 1; i <= n; i++)\n    {\n        a[i] = read();\n    }\n    int block = sqrt(n);\n\n    for (int i = 1; i <= m; i++)\n    {\n        int lt, rt;\n        lt = read();\n        rt = read();\n        query[i] = point{lt, rt, lt / block, i};\n        A[i] = 1;\n    }\n    sort(query + 1, query + 1 + m, cmp);\n    for (int i = 0; i < prime.size(); i++)\n    {\n        rnk[prime[i]] = i;\n        PM[i].emplace_back(1);\n        QM[i].emplace_back(1);\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        int L = a[i];\n        while (L > 1)\n        {\n            int tmp = d[L];\n            while (d[L] == tmp)\n            {\n                L /= d[L];\n            }\n            int dinner = PM[rnk[tmp]][PM[rnk[tmp]].size() - 1];\n            dinner = dinner * dinner % P * tmp % P;\n            PM[rnk[tmp]].emplace_back(dinner);\n            QM[rnk[tmp]].emplace_back(power(dinner));\n        }\n    }\n    for (int i = 0; i < prime.size(); i++)\n    {\n        int p = prime[i];\n        if (p * p <= MAXA)\n        {\n            int tmp = 1;\n            int genshin=0;\n            for (int k = 1; k <= n; k++)\n            {\n                tmp *= p;\n                int C = 0;\n                if (tmp > MAXA)\n                    break;\n                genshin++;\n                for (int j = 1; j <= n; j++)\n                {\n                    if ((a[j] % tmp) == 0)\n                    {\n                        C++;\n                    }\n                    cnt[j][k]=C;\n                }\n                if (cnt == 0)\n                    break;\n                int now = 1;\n            }\n            for (int dinner = 1; dinner <= m; dinner++)\n            {\n                point B = query[dinner];\n                int lt = B.lt;\n                int rt = B.rt;\n                int id = B.id;\n                int tmp = 1;\n                for (int k = 1; k <= genshin; k++)\n                {\n                    tmp = tmp * (PM[i][(cnt[rt][k] - cnt[lt - 1][k])]) % P;\n                }\n                A[id] = A[id] * tmp % P;\n            }\n        }\n        else\n        {\n            break;\n        }\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        while (d[a[i]] ^ a[i])\n            a[i] /= d[a[i]];\n        if (a[i] * a[i] <= MAXA)\n        {\n            a[i] = 0;\n        }\n    }\n    int lt = 1, rt = 0;\n    for (int i = 1; i <= m; i++)\n    {\n        int L = query[i].lt;\n        int R = query[i].rt;\n        while (rt < R)\n        {\n            add(++rt);\n        }\n\n        while (lt > L)\n            add(--lt);\n        while (rt > R)\n            del(rt--);\n        while (lt < L)\n            del(lt++);\n        A[query[i].id] = A[query[i].id] * ans % P;\n    }\n    for (int i = 1; i <= m; i++)\n    {\n        write(A[i], '\\n');\n    }\n    flushout();\n    return 0;\n}\n```\n\n\u7528\u4e86\u7f51\u4e0a\u7684\u8d85\u7ea7\u5feb\u8bfb\uff0c\u771f\u7684\u8d85\u7ea7\u5feb\uff01",
        "postTime": 1679917518,
        "uid": 653218,
        "name": "kisara_qwq",
        "ccfLevel": 0,
        "title": "P9060\u9898\u89e3"
    },
    {
        "content": "\u5e94\u8be5\u662f\u7b2c\u4e00\u7bc7 Ynoi \u7684\u9898\u89e3\u5427\u3002\n\n## \u9898\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u6570\uff0c$q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u6c42 $[l,r]$ \u5185\u6240\u6709\u975e\u7a7a\u5b50\u96c6\u7684\u516c\u56e0\u6570\u7684\u4e58\u79ef\uff0c\u7b54\u6848\u5bf9 $998244353$ \u53d6\u6a21\u3002\n\n## Solution\n\u5982\u679c\u4f60\u6ca1\u6709\u601d\u8def\uff0c\u770b\u770b\u6570\u636e\u8303\u56f4\uff1a\u9759\u6001\u95ee\u9898\uff08\u4e0d\u5e26\u4fee\uff09\u3001\u503c\u57df $10^5$ \u800c\u4e0d\u662f $10^9$\uff0c\u5f88\u5927\u6982\u7387\u4f1a\u4ece\u503c\u57df\u5165\u624b\u3002\n\n\u76f4\u63a5\u8ba1\u7b97\u5b50\u96c6\u662f\u6307\u6570\u7ea7\u7684\uff0c\u6211\u4eec\u663e\u7136\u8981\u4ece\u6bcf\u4e2a\u8d28\u56e0\u5b50\u7684\u8d21\u732e\u5165\u624b\u3002\n\n\u5047\u8bbe\u5e8f\u5217\u4e2d\u6709 $c$ \u4e2a\u6570\u4e3a $p$ \u7684\u500d\u6570\uff0c\u5219\u4ee5 $p$ \u4e3a\u6700\u5927\u516c\u56e0\u6570\u7684\u975e\u7a7a\u5b50\u96c6\u5c31\u6709 $2^c-1$ \u4e2a\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4f1a\u6709 $p^{2^c-1}$\u3002\n\n\u5bf9\u503c\u57df\u8fdb\u884c\u6839\u53f7\u5206\u6cbb\u3002\u8bb0 $\\max\\{a_i\\}=mx$\u3002\n\n\u5bf9\u4e8e $p\\leq \\sqrt{mx}$\uff0c\u7531\u4e8e\u6700\u591a\u4e0d\u8d85\u8fc7 $\\sqrt{mx}$ \u4e2a\u6570\uff0c\u8303\u56f4\u5185\u7684\u8d28\u6570\u5927\u6982\u6709 $\\dfrac{\\sqrt{mx}}{\\ln mx}$ \u4e2a\u3002\u4f46\u8d28\u6570\u7684\u5e42\u4e5f\u4f1a\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u4e00\u5171\u4f1a\u6709\u5927\u6982 $O(\\sqrt{mx})$ \u4e2a\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570 $p$ \u90fd\u7b97\u51fa $tim_i=\\prod\\limits_{j=1}^{i}a_j[p|a_j]$\uff0c\u5373\u524d\u7f00\u6240\u6709\u80fd\u6574\u9664 $p$ \u7684\u6570\u7684\u4e58\u79ef\u3002\n\n\u5149\u679a\u4e3e\u590d\u6742\u5ea6\u5df2\u7ecf $O(n\\sqrt{mx})$\uff0c\u8ba1\u7b97 $p^{2^k-1}$ \u7684\u65f6\u95f4\u53ea\u5269\u4e0b $O(1)$\u3002\u6240\u4ee5\u8003\u8651\u9884\u5904\u7406\u6240\u6709 $p^{2^k}$ \u4ee5\u53ca $p^{-1}$\uff08\u7b97\u7684\u65f6\u5019\u8981\u7528\u9006\u5143\uff0c\u663e\u7136\uff09\u3002\n\n\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt{mx}+n\\sqrt{mx}+m\\sqrt{mx})$\uff08\u9884\u5904\u7406 $p^{2^k}$ \u88ab\u6211\u7ea6\u6210 $O(\\sqrt{mx})$ \u4e86\uff0c\u51e0\u4e2a\u5c31\u8d85\u8fc7\u503c\u57df\u4e86\uff09\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{mx})$\uff08\u540c\u6837 $p^{2^k}$ \u88ab\u6211\u4f30\u6210 $O(1)$ \u4e86\uff0c\u7406\u7531\u540c\u4e0a\uff09\u3002\n\n\u5bf9\u4e8e $p>\\sqrt{mx}$\uff0c\u4efb\u4f55\u4e00\u4e2a\u6570\u53ea\u80fd\u591f\u51fa\u73b0\u4e00\u4e2a\u8fd9\u6837\u7684\u6570\uff0c\u56e0\u6b64\u603b\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7 $O(n)$\u3002\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u53ef\u80fd\u7528\u5230\u7684 $p^{2^k}$\uff0c\u663e\u7136\u8fd9\u90e8\u5206\u7684\u603b\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7 $n$ \u4e2a\u3002\u5f53\u7136\uff0c$p^{-1}$ \u4e5f\u662f\u5fc5\u8981\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8ddf $<\\sqrt{mx}$ \u7684\u90e8\u5206\u4e00\u8d77\u7ebf\u6027\u6c42\u9006\u5143\u3002\n\n\u5bf9\u8fd9\u90e8\u5206\u8dd1\u83ab\u961f\uff0c\u5f00\u6876\u7ef4\u62a4\u6bcf\u4e2a $p$ \u7684\u8d21\u732e\u3002\u8bbe\u5f53\u524d\u6709 $cnt$ \u4e2a $p$ \u7684\u500d\u6570\u3002\u52a0\u8fdb\u6765\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u9700\u8981\u4e58\u4e0a $p^{2^{cnt}}$\uff1b\u5220\u9664\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u9700\u8981\u9664\u4ee5 $p^{2^{cnt-1}}$\uff0c\u770b\u8d77\u6765\u8fd8\u9700\u8981\u9884\u5904\u7406\u4e00\u4e2a $\\big(p^{2^{cnt}}\\big)^{-1}$\u3002\u4f46\u6b63\u5982 @xfrvq \u5927\u4f6c\u6240\u8bf4\uff0c\u5206\u522b\u7ef4\u62a4\u7b54\u6848\u7684\u5206\u5b50\u5206\u6bcd\uff0c\u6700\u540e\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt{mx}+n\\sqrt{mx}+m\\sqrt{mx}+m\\sqrt n)$\uff0c$n,m,mx$ \u540c\u9636\u7ea6\u7b49\u4e8e $O(n\\sqrt n)$\uff0c\u53ef\u987a\u5229\u901a\u8fc7\u672c\u9898\u3002\n\n\u6ca1\u5f00 `long long` \u8c03\u4e86\u4e00\u6574\u5929\uff0c\u544a\u8beb\u540e\u4eba\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int MOD = 998244353;\nconst int N = 1e5 + 10;\nint n, m, v, mx, a[N];\nint inv[N], pw[N], tim[N];\nint blk, fm = 1, fz = 1, cnt[N], ans[N];\nbool isp[N];\nvector<int> pr, pp[N];\nstruct query{\n\tint l, r, id;\n\tbool operator < (const query &p) const {\n\t\tif(l / blk != p.l / blk)\n\t\t\treturn l / blk < p.l / blk;\n\t\tif((l / blk) & 1)\n\t\t\treturn r < p.r;\n\t\treturn r > p.r;\n\t}\n} q[N];\n\nvoid Euler(int n){\n\tfor(int i=2;i<=n;i++){\n\t\tif(!isp[i])\n\t\t\tpr.push_back(i);\n\t\tfor(int p: pr){\n\t\t\tif(i * p > n)\n\t\t\t\tbreak;\n\t\t\tisp[i * p] = 1;\n\t\t\tif(p % i == 0)\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nvoid add(int x){\n\tif(x == 1)\n\t\treturn ;\n\t(fz *= pp[x][cnt[x]] % MOD) %= MOD;\n\t++cnt[x];\n}\n\nvoid del(int x){\n\tif(x == 1)\n\t\treturn ;\n\t--cnt[x];\n\t(fm *= pp[x][cnt[x]]) %= MOD;\n}\n\nint exp(int a, int b){\n\tint cnt = 1;\n\twhile(b){\n\t\tif(b & 1)\n\t\t\t(cnt *= a) %= MOD;\n\t\t(a *= a) %= MOD, b >>= 1;\n\t}\n\treturn cnt;\n}\n\nmain(){\n\tscanf(\"%lld%lld\", &n, &m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lld\", &a[i]), mx = max(mx, a[i]);\n\tEuler(v = sqrt(mx));\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%lld%lld\", &q[i].l, &q[i].r), q[i].id = i, ans[i] = 1;\n\tinv[0] = inv[1] = 1;\n\tfor(int i=2;i<=mx;i++)\n\t\tinv[i] = ((-MOD / i) * inv[MOD % i] % MOD + MOD) % MOD;\n\tfor(int p: pr){\n\t\tpw[0] = p;//\u5f85\u4f1a\u8981*p^-1\uff0c\u6240\u4ee5\u8fd9\u4e2a\u521d\u59cb\u5316\u6bd4\u8f83\u7279\u6b8a \n\t\tfor(int i=1;i<=n;i++)\n\t\t\tpw[i] = pw[i - 1] * pw[i - 1] % MOD;\n\t\tfor(int x=p;x<=mx;x*=p){\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\ttim[i] = tim[i - 1] + (a[i] % x == 0);\n\t\t\tfor(int i=1;i<=m;i++)\n\t\t\t\t(ans[i] *= pw[tim[q[i].r] - tim[q[i].l - 1]] * inv[p] % MOD) %= MOD;\n\t\t\t//\u6bcf\u6b21\u90fd\u53ea\u9700\u8981\u52a0 p \u7684\u8d21\u732e\uff0c\u56e0\u4e3a\u5982\u679c gcd \u662f p \u7684\u6b21\u5e42\u7684\u8bdd\u4f1a\u8fdb\u6765\u591a\u6b21 \n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\twhile(a[i] % p == 0)\n\t\t\t\ta[i] /= p;\n\t}//< sqrt(n) \u7684\u5df2\u7ecf\u641e\u5b8c\u4e86\n\tfor(int i=1;i<=n;i++)\n\t\tcnt[a[i]]++;\n\tfor(int i=v+1;i<=mx;i++){\n\t\tif(cnt[i]){\n\t\t\tpp[i].push_back(i);\n\t\t\tfor(int j=1;j<=cnt[i];j++)\n\t\t\t\tpp[i].push_back(pp[i][j - 1] * pp[i][j - 1] % MOD);\n\t\t}\n\t}\n\tblk = n / sqrt(m);\n\tsort(q + 1, q + 1 + m);\n\tint l = 1, r = 0;\n\tmemset(cnt, 0, sizeof(cnt));\n\tfor(int i=1;i<=m;i++){\n\t\twhile(r < q[i].r)\n\t\t\tadd(a[++r]);\n\t\twhile(l > q[i].l)\n\t\t\tadd(a[--l]);\n\t\twhile(r > q[i].r)\n\t\t\tdel(a[r--]);\n\t\twhile(l < q[i].l)\n\t\t\tdel(a[l++]);\n\t\t(ans[q[i].id] *= fz * exp(fm, MOD - 2) % MOD) %= MOD;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%lld\\n\", (ans[i] % MOD + MOD) % MOD);\n\treturn 0;\n}\n```\n",
        "postTime": 1679410968,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "P9060 [Ynoi2002] Goedel Machine \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u5bf9\u8d28\u6570\u7684\u6b63\u6574\u6570\u6b21\u5e42\u5206\u5f00\u8ba1\u7b97\u8d21\u732e\u3002\n\n\u5177\u4f53\u5730\uff0c\u8bbe $p$ \u662f\u8d28\u6570\uff0c$k$ \u662f\u6b63\u6574\u6570\u3002\u5982\u679c\u533a\u95f4 $[l,r]$ \u5185\u6709 $c$ \u4e2a\u6570\u80fd\u88ab $p^k$ \u6574\u9664\uff0c\u90a3\u4e48 $p^k$ \u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f $p^{2^c-1}$\u3002\n\n$p^k$ \u7684\u8d21\u732e\u53ef\u4ee5\u7528\u666e\u901a\u83ab\u961f\u5904\u7406\u3002\u5177\u4f53\u5730\uff0c\u6211\u5bf9\u6bcf\u4e2a $p^k$ \u5f00\u4e86\u4e24\u4e2a\u6808\uff0c\u5206\u522b\u5b58 $p^{2^0},p^{2^1},\\dots,p^{2^{c-1}}$ \u53ca\u5176\u9006\u5143\u7684\u503c\u3002\n\n\u4e0b\u9762\u7684\u64cd\u4f5c\u9ed8\u8ba4\u5f53\u524d\u6808\u91cc\u6709 $c$ \u4e2a\u503c\u3002\n\n\u52a0\u5165\u4e00\u4e2a\u503c\u7684\u65f6\u5019\u3002\u628a $p^{2^c}$ \u548c $p^{-2^c}$ \u52a0\u5230\u5bf9\u5e94\u7684\u6808\u5185\uff0c\u5c06\u7b54\u6848\u4e58\u4e0a $p^{2^c}$\u3002\n\n\u5220\u9664\u4e00\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u628a\u7b54\u6848\u4e58\u4e0a $p^{-2^{c-1}}$\uff0c\u63a5\u7740\u8fdb\u884c\u5f39\u6808\u64cd\u4f5c\u3002\n\n\u5982\u679c\u83ab\u961f\u65f6\u5bf9\u6bcf\u4e2a $a_i$ \u66b4\u529b\u679a\u4e3e\u5b83\u7684\u8d28\u56e0\u5b50\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\sqrt{m}\\log A)$\uff08$A=\\max{a_i}$\uff09\u7684\uff0c\u65e0\u6cd5\u83b7\u5f97\u6ee1\u5206\u3002\n\n\u8003\u8651\u6839\u53f7\u5206\u6cbb\u3002\u5bf9\u4e8e\u5c0f\u4e8e\u7b49\u4e8e $\\sqrt{A}$ \u7684\u8d28\u6570 $p$\uff0c\u5b83\u4eec\u7684\u6b63\u6574\u6570\u6b21\u5e42\u603b\u4e2a\u6570\u4e0d\u591a\uff0c\u4e0d\u8d85\u8fc7 $O(\\frac{\\sqrt{A}}{\\log \\sqrt{A}}\\times \\log \\sqrt{A})=O(\\sqrt{A})$ \u4e2a\u3002\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e $p^k$\uff0c\u9884\u5904\u7406 $c$ \u7684\u524d\u7f00\u548c\uff0c\u5bf9\u6bcf\u4e2a\u95ee\u8be2\u7b97\u5b83\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u5927\u4e8e $\\sqrt{A}$ \u7684\u8d28\u6570\uff0c\u6bcf\u4e2a $a_i$ \u6700\u591a\u53ea\u6709 $1$ \u4e2a\u8fd9\u6837\u7684\u8d28\u56e0\u5b50\uff0c\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u83ab\u961f\u7b97\u6cd5\u5904\u7406\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f $O(n\\sqrt m)$ \u7684\uff0c\u53cd\u6b63 $n,m,A$ \u7684\u8303\u56f4\u90fd\u76f8\u540c\u3002",
        "postTime": 1675943027,
        "uid": 362346,
        "name": "TianyiLemon",
        "ccfLevel": 0,
        "title": "[Ynoi2002] Goedel Machine"
    },
    {
        "content": "\u8003\u8651\u5bf9\u5e8f\u5217\u5206\u89e3\u53ea\u56e0\u6570\uff0c\u4e0d\u540c\u53ea\u56e0\u6570\u4e4b\u95f4\u7684\u8d21\u732e\u662f\u72ec\u7acb\u7684\u3002\n\n\u7136\u540e\u5bf9\u8d28\u56e0\u6570\u505a\u6839\u53f7\u5206\u6cbb\u3002\u8bbe\u503c\u57df\u4e3a $v=\\max\\{a_i\\}$\uff0c\u8d28\u6570 $p$\uff0c\u5373\u5206\u4e3a $p\\le\\sqrt v$ \u4ee5\u53ca $p\\gt\\sqrt v$\u3002\n\n\u4ee5\u4e0b\u8bbe $n,m,v$ \u540c\u9636\u3002\n\n---\n\n\u5bf9\u4e8e $p\\le\\sqrt v$ \u7684\u60c5\u51b5\u3002$v$ \u4ee5\u5185\u8d28\u6570\u6709 $O\\left(\\dfrac{\\sqrt v}{\\ln\\sqrt v}\\right)$ \u4e2a\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a $O\\left(\\dfrac{\\sqrt n}{\\log n}\\right)$\u3002\n\n\u4f46\u662f\u4ea7\u751f\u8d21\u732e\u7684\u4e0d\u6b62\u6709\u8d28\u56e0\u6570\u672c\u8eab\uff0c\u5176\u6b21\u5e42\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u7b97\u4e0a\u5176 $\\log_{p}v$ \u7684\u6b21\u5e42\uff0c\u603b\u548c\u5c31\u662f $O(\\sqrt n)$\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u80fd\u4ea7\u751f\u8d21\u732e\u7684\u6570 $x$\uff0c\u8bbe\u5176\u51fa\u73b0\u6b21\u6570\u4e3a $k$\uff0c\u90a3\u5c31\u4f1a\u4ea7\u751f $x^{2^k-1}$ \u7684\u8d21\u732e\u3002\u56e0\u6b64\uff0c\u8003\u8651\u679a\u4e3e\u6240\u6709\u8fd9\u6837\u7684 $x$\uff0c\u8ba1\u7b97\u51fa\u5728\u533a\u95f4\u4f5c\u4e3a\u56e0\u6570\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002\n\n\u4f46\u662f\u679a\u4e3e\u8fd9\u4e00\u6b65\u5df2\u7ecf $O(\\sqrt n)$ \u4e86\uff0c\u7559\u7ed9\u8ba1\u7b97 $k$ \u4ee5\u53ca $x^{2^k-1}$ \u53ea\u6709 $O(1)$ \u7684\u65f6\u95f4\u3002\u56e0\u6b64\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a $x$ \u9884\u5904\u7406\uff1a\n\n+ $pre_j=\\sum_{i=1}^j[x\\mid a_i]$\u3002\n+ \u6240\u6709\u7684 $x^{2^k}$ \u4ee5\u53ca $x^{-1}$\u3002\n\n---\n\n\u5bf9\u4e8e $p\\gt\\sqrt v$ \u7684\u60c5\u51b5\u3002\u56e0\u4e3a $a_i$ \u6700\u591a\u6709\u4e00\u4e2a $\\gt\\sqrt v$ \u7684\u53ea\u56e0\u6570\uff08\u8bbe\u4e3a $b_i$\uff09\uff0c\u6240\u4ee5\u53ea\u6709 $p$ \u81ea\u8eab\u4f1a\u5e26\u6765\u8d21\u732e\u3002\n\n\u6211\u4eec\u5bf9\u533a\u95f4\u8dd1\u83ab\u961f\uff0c\u8bb0\u5f55 $c_p$ \u4ee3\u8868\u5f53\u524d $p=b_i$ \u7684\u51fa\u73b0\u6b21\u6570\uff0c\u603b\u8d21\u732e\u5c31\u4f1a\u662f $\\prod p^{2^{c_p}-1}$\uff0c\u8fd9\u73a9\u610f\u53ef\u4ee5\u5728\u83ab\u961f\u6307\u9488\u5de6\u53f3\u79fb\u52a8\u7684\u540c\u65f6\u52a8\u6001\u7ef4\u62a4\u3002\n\n\u7136\u540e\u6709\u70b9\u7ec6\u8282\u56e0\u4e3a\u83ab\u961f\u6307\u9488\u79fb\u52a8\u5fc5\u987b\u662f $O(1)$ \u590d\u6742\u5ea6\u3002\u4f60\u8981\u9884\u5904\u7406 $p^{2^k-1}$\uff0c\u5927\u6982\u5c31\u662f\u5f04\u4e00\u4e2a\u7c7b\u4f3c `vector` \u7684\u4e1c\u897f\u3002\n\n\u672c\u6765\u8fd8\u8981\u9884\u5904\u7406\u4e00\u4e2a $\\left(p^{2^k-1}\\right)^{-1}$ \u7684\uff0c\u4f46\u662f\u5982\u679c\u4f60\u83ab\u961f\u7ef4\u62a4\u7684\u662f\u7b54\u6848\u7684\u5206\u5b50\u4ee5\u53ca\u5206\u6bcd\uff0c\u8ba1\u7b97\u7684\u65f6\u5019\u5728\u7b97\u5206\u6bcd\u7684\u9006\u5143\uff0c\u53ef\u4ee5\u7701\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e5 + 5;\nconst int SQ = 360;\nconst int mod = 998244353;\n\nint n,m,v,lim,bl,a[N],ans[N];\nint tmp[N],pre[N],inv[N];\nint pw[N],bg[N],tot;\nbool vis[SQ];\nint val,Inv,cnt[N];\nvector<int> pri;\n\nstruct Qry{\n\tint l,r,i;\n\tbool operator<(const Qry& q){\n\t\treturn (l / bl) != (q.l / bl) ? l < q.l : (l / bl) & 1 ? r < q.r : r > q.r;\n\t}\n} Q[N];\n\nvoid sieve(int V){\n\tfor(int i = 2;i <= V;++i){\n\t\tif(!vis[i]) pri.push_back(i);\n\t\tfor(int j : pri){\n\t\t\tif(i * j > V) break;\n\t\t\tvis[i * j] = true;\n\t\t\tif(i % j == 0) break;\n\t\t}\n\t}\n}\n\nint fpow(int x,int p){\n\tint R = 1;\n\twhile(p){\n\t\tif(p & 1) R = 1LL * R * x % mod;\n\t\tx = 1LL * x * x % mod;\n\t\tp >>= 1;\n\t}\n\treturn R;\n}\n\nvoid add(int x){\n\tif(x != 1) val = 1LL * val * pw[bg[x] + cnt[x]++] % mod;\n}\n\nvoid del(int x){\n\tif(x != 1) Inv = 1LL * Inv * pw[bg[x] + --cnt[x]] % mod;\n}\n\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= n;++i) scanf(\"%d\",a + i),v = max(v,a[i]);\n\tsieve(lim = sqrt(v)); bl = n / sqrt(m);\n\tfor(int i = 1;i <= m;++i) scanf(\"%d%d\",&Q[i].l,&Q[i].r),Q[i].i = i;\n\tinv[0] = inv[1] = 1;\n\tfor(int i = 2;i <= v;++i) inv[i] = 1LL * (mod - mod / i) * inv[mod % i] % mod; \n\tfor(int i = 1;i <= m;++i) ans[i] = 1;\n\tfor(int x : pri){\n\t\ttmp[0] = x;\n\t\tfor(int i = 1;i <= n;++i) tmp[i] = 1LL * tmp[i - 1] * tmp[i - 1] % mod;\n\t\tfor(int j = x;j <= v;j *= x){\n\t\t\tfor(int i = 1;i <= n;++i) pre[i] = pre[i - 1] + (a[i] % j == 0);\n\t\t\tfor(int i = 1;i <= m;++i) ans[i] = 1LL * ans[i] * tmp[pre[Q[i].r] - pre[Q[i].l - 1]] % mod * inv[x] % mod;\n\t\t}\n\t\tfor(int i = 1;i <= n;++i) while(a[i] % x == 0) a[i] /= x;\n\t}\n\tfor(int i = 1;i <= n;++i) ++cnt[a[i]];\n\tfor(int i = 2;i <= v;++i) if(cnt[i]){\n\t\tpw[bg[i] = ++tot] = i;\n\t\twhile(--cnt[i]) pw[tot + 1] = 1LL * pw[tot] * pw[tot] % mod,++tot;\n\t}\n\tsort(Q + 1,Q + m + 1); val = 1,Inv = 1;\n\tfor(int i = 1,l = 1,r = 0;i <= m;++i){\n\t\twhile(r < Q[i].r) add(a[++r]);\n\t\twhile(l > Q[i].l) add(a[--l]);\n\t\twhile(r > Q[i].r) del(a[r--]);\n\t\twhile(l < Q[i].l) del(a[l++]);\n\t\tans[Q[i].i] = 1LL * ans[Q[i].i] * val % mod * fpow(Inv,mod - 2) % mod;\n\t}\n\tfor(int i = 1;i <= m;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n\u6e05\u65b0\u6839\u53f7/qiang",
        "postTime": 1676266018,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "P9060 [Ynoi2002] Goedel Machine"
    }
]