[
    {
        "content": "### Preface\n\n~~\u597d\u4e45\u4e4b\u524d\u7684~~\u968f\u673a\u8df3\u9898\u8df3\u5230\u8fd9\u9053\u9898\u3002\u73b0\u5728\u90fd\u6ca1\u6709\u9898\u89e3\u90a3\u6211\u5c31\u6765\u6c34\u4e00\u53d1\u3002\n\n### Problem\n\n\u7ed9\u51fa\u4e00\u4e2a $N\\times N$ \u7684\uff0c\u6807\u53f7\u521d\u59cb\u4e3a\u6709\u89c4\u5f8b $1\\dots N\\times N$ \u7684\u7f51\u683c\uff0c\u6709 $K$ \u4e2a\u5173\u952e\u70b9\u4e0e\u5176\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5173\u952e\u70b9\uff0c\u4f9d\u6b21\u628a\u8be5\u884c\u5411\u53f3\u5faa\u73af\u5e73\u79fb\u77e5\u9053\u4e0e\u5bf9\u5e94\u4f4d\u7f6e\u884c\u5750\u6807\u76f8\u7b49\uff1b\u63a5\u7740\u628a\u8be5\u884c\u5411\u53f3\u5faa\u73af\u5e73\u79fb\u77e5\u9053\u4e0e\u5bf9\u5e94\u4f4d\u7f6e\u884c\u5750\u6807\u76f8\u7b49\uff0c\u6c42\u5bf9\u4e8e\u6bcf\u4e2a\u5173\u952e\u70b9\u603b\u5171\u9700\u8981\u7684\u5e73\u79fb\u6b21\u6570\uff0c\u8be2\u95ee\u4e4b\u95f4\u76f8\u4e92\u5f71\u54cd\u3002\n\n$2 \\leq N \\leq 10^4, 1 \\leq K \\leq 10^3$\u3002\n\n### Solution\n\n+ \u5957\u8def\u9898\u3002\n+ \u6211\u4eec\u5148\u8003\u8651\u66b4\u529b\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u8bf6\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u505a\u5230 $\\mathcal O(KN^2)$\uff0c\u5c0f\u5c0f\u4f18\u5316\u4e00\u4e0b\u53ef\u4ee5 $\\mathcal O(KN)$\u3002\n+ \u4f46\u662f\u74f6\u9888\u5728\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u4e4b\u540e\u627e\u5230\u4e0b\u4e00\u4e2a\u88ab\u64cd\u4f5c\u7684\u70b9\u662f $\\mathcal O(KN^2)$ \u7684\uff0c\u600e\u4e48\u4f18\u5316\u90fd\u6ca1\u7528\u3002\n+ \u90a3\u4e48\u6211\u4eec\u8003\u8651\u76f4\u63a5\u5b58\u6bcf\u4e2a\u5173\u952e\u70b9\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u4f60\u5c31\u4f1a\u53d1\u73b0\u5176\u5b83\u7684\u70b9\u90fd\u662f\u5197\u4f59\u4fe1\u606f\u4e86\uff0c\u6bcf\u6b21\u5faa\u73af\u5e73\u79fb\u53ea\u5c1d\u8bd5\u6539\u53d8\u5173\u952e\u70b9\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n+ \u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(K^2)$\u3002\n\n\u4ee3\u7801\uff08\u65e0\u7f3a\u7701\u6e90\uff09\uff1a\n\n```cpp\n#define MAXK 1001\nstruct Number {\n\tint x, y;\n\tNumber () {}\n\tNumber (int X, int Y) : x(X), y(Y) {}\n} nums[MAXK];\n\nint x[MAXK], r[MAXK], c[MAXK];\nint main() {\n\tint N = read<int>(), K = read<int>();\n\tfor (int i = 1; i <= K; ++i) {\n\t\tx[i] = read<int>(), r[i] = read<int>(), c[i] = read<int>();\n\t\tnums[i] = Number(x[i] % N != 0 ? x[i] % N : N, (x[i] - 1) / N + 1);\n\t}\n\tfor (int i = 1; i <= K; ++i) {\n// shift column \u2192\n\t\tint col = nums[i].x;\n\t\tif (c[i] >= col) col = c[i] - col;\n\t\telse col = N - (col - c[i]);\n\t\tfor (int j = 1; j <= K; ++j) if (nums[i].y == nums[j].y) {\n\t\t\tnums[j].x += col; if (nums[j].x > N) nums[j].x -= N;\n\t\t}\n// shift row \u2193\n\t\tint row = nums[i].y;\n\t\tif (r[i] >= row) row = r[i] - row;\n\t\telse row = N - (row - r[i]);\n\t\tfor (int j = 1; j <= K; ++j) if (nums[i].x == nums[j].x) {\n\t\t\tnums[j].y += row; if (nums[j].y > N) nums[j].y -= N;\n\t\t}\n\t\tprint<int>(col + row, '\\n');\n// for (int i = 1; i <= K; ++i) printf(\"(%d %d)\", nums[i].y, nums[i].x);\n// puts(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1659367241,
        "uid": 419487,
        "name": "irris",
        "ccfLevel": 7,
        "title": "P7186 Solution"
    }
]