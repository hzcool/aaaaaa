[
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21a\u7d2b\u9898\uff0c\u6765\u6574\u7bc7\u9898\u89e3\uff0c\u5982\u6709\u4e0d\u8db3\uff0c\u6597\u80c6\u8bf7\u5404\u4f4d\u7287\u7287\u65a7\u6b63\n\n\n------------\n## \u9898\u9762\u89e3\u6790\n\n\u7ed9\u51fa\u4e00\u4e32\u6570\u5217\uff0c\u6709n\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\u4e2d\u6240\u6709\u8fde\u7eed\u5b50\u533a\u95f4\u7684\u548c\u7684\u6570\u5b57\u6839\u7684\u524d\u4e94\u5927\u503c\u3002\n## \u89e3\u6cd5\u601d\u8003\n\u591a\u533a\u95f4\u8be2\u95ee\u95ee\u9898\u5f88\u5bb9\u6613\u8ba9\u6211\u4eec\u60f3\u5230\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\uff0c\u540c\u65f6\uff0c\u6211\u4eec\u6839\u636e\u6570\u5b57\u6839\u7684\u6027\u8d28\u5f88\u5bb9\u6613\u4e86\u89e3\u6570\u5b57\u6839\u7684\u53d6\u503c\u83030~9\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u6570\u5b57\u6839\u72b6\u6001\u538b\u7f29\u3002\n\n\u63a5\u4e0b\u6765\u7684\u91cd\u70b9\u662f\u5982\u4f55\u50a8\u5b58\u548c\u5408\u5e76\u8282\u70b9\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6839\u636e\u6700\u5927\u8fde\u7eed\u5b50\u533a\u95f4\u548c\u7684\u7ebf\u6bb5\u6811\u505a\u6cd5\uff0c\u6613\u77e5\uff1a\u4e00\u4e2a\u533a\u95f4\u4e2d\u7684\u6240\u6709\u8fde\u7eed\u5b50\u533a\u95f4\uff0c\u53ef\u4ee5\u7531\n\u4e24\u4e2a\u5b50\u533a\u95f4\u7684\u6240\u6709\u8fde\u7eed\u5b50\u533a\u95f4\n\u5e76\n\u5de6\u5b50\u533a\u95f4\u4e2d\u4ee5\u53f3\u7aef\u70b9\u4f5c\u4e3a\u7ec8\u70b9\u7684\u8fde\u7eed\u5b50\u533a\u95f4\u548c\u53f3\u5b50\u533a\u95f4\u4e2d\u4ee5\u5de6\u7aef\u70b9\u4f5c\u4e3a\u8d77\u70b9\u7684\u8fde\u7eed\u5b50\u533a\u95f4\u7684\u4e24\u4e24\u7ec4\u5408\u5f62\u6210\u7684\u5b50\u533a\u95f4\n\u8868\u793a\u3002\n\n\u6240\u4ee5\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u4e2d\u6240\u6709\u8fde\u7eed\u5b50\u533a\u95f4**all**\uff0c\u4ee5\u5de6\u7aef\u70b9\u4e3a\u8d77\u70b9\u7684\u6240\u6709\u8fde\u7eed\u5b50\u533a\u95f4**l**\uff0c\u4ee5\u53f3\u7aef\u70b9\u4e3a\u7ec8\u70b9\u7684\u6240\u6709\u8fde\u7eed\u5b50\u533a\u95f4**r**\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u5176\u7236\u8282\u70b9\u7684\u6240\u6709\u8fde\u7eed\u5b50\u533a\u95f4\u3002\n\n\u968f\u540e\u5bb9\u6613\u8bc1\u5f97\uff0c\u7236\u533a\u95f4\u7684**r**\u53ef\u4ee5\u7531\u53f3\u533a\u95f4\u7684**l**\u4e0e\u6574\u4e2a\u5de6\u533a\u95f4**sum**\u7ec4\u5408\u7684 \u5e76 \u53f3\u533a\u95f4\u7684**r**\u5f97\u5230\uff0c**l**\u540c\u7406\uff0c\u800c\u6574\u4e2a\u7236\u533a\u95f4\u53ea\u9700\u8981\u7531\u4e24\u4e2a\u5b50\u533a\u95f4\u5c31\u53ef\u4ee5\u7ec4\u5408\u800c\u6210\u3002\n\n\u7531\u6b64\u6211\u4eec\u6210\u529f\u5206\u89e3\u4e86\u533a\u95f4\u8282\u70b9\uff0c\u5e76\u89e3\u51b3\u4e86\u4ed6\u4eec\u7684\u5408\u5e76\u95ee\u9898\uff0c\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u5957\u5165\u7ebf\u6bb5\u6811\uff0c\u6b64\u9898\u5c31\u53ef\u4ee5\u8fce\u5203\u800c\u89e3\u4e86\n\n\u4ee5\u4e0b\u662f\u6708\u8bfb\u7684ac\u4ee3\u7801\n```cpp\n#include<cstdio>\n\n#include<cmath>\n\n#include<iostream>\n\n#include<cstring>\n\n#include<string>\n\n#include<algorithm>\n\n#include<vector>\n\n#include<queue>\n\n#include<stack>\n\n#include<cstdlib>\n\n\n\nusing namespace std;\n\ntypedef long long loli;\n\nconst int MAXW=1000000;\n\nconst int INF=0x3f3f3f3f;\n\nconst int MOD=1000000007;\n\nconst char test[]=\"test\\n\";\n\n\n\nint in();\n\n\n\nstruct Node {\n\n\tint l,r,lp,rp,all,sum;\n\n\tNode(int _l=0,int _r=0) {\n\n\t\tlp=_l;\n\n\t\trp=_r;\n\n\t}\n\n} Tr[400010];\n\n\n\nint askroot(int i){\n\n\treturn 1<<((i-1)%9+1);\n\n}\n\n\n\nint simpleHB(int al,int ar) {\n\n\tint rtn=0;\n\n\tfor(int i=0; i<10; ++i) {\n\n\t\tif((al&(1<<i))) {\n\n\t\t\tfor(int r=0; r<10-i; ++r) {\n\n\t\t\t\tif((ar&(1<<r)))\n\n\t\t\t\t\trtn|=(1<<(i+r));\n\n\t\t\t}\n\n\t\t\tfor(int r=10-i; r<10; ++r) {\n\n\t\t\t\tif((ar&(1<<r)))\n\n\t\t\t\t\trtn|=(1<<(i+r-9));\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn rtn;\n\n}\n\n\n\nNode HB(Node& NL,Node& NR) {\n\n\tNode rtn=Node(NL.lp,NR.rp);\n\n\trtn.all=simpleHB(NL.r,NR.l)|NL.all|NR.all;\n\n\trtn.l=NL.l|simpleHB(NL.sum,NR.l);\n\n\trtn.r=NR.r|simpleHB(NR.sum,NL.r);\n\n\trtn.sum=simpleHB(NL.sum,NR.sum);\n\n\treturn rtn;\n\n}\n\n\n\nNode BuildTr(int lp,int rp,int i){\n\n\t//cout<<lp<<\" \"<<rp<<endl; \n\n\tif(lp==rp){\n\n\t\tTr[i]=Node(lp,rp);\n\n\t\tTr[i].l=Tr[i].r=Tr[i].all=Tr[i].sum=askroot(in());\n\n\t\treturn Tr[i];\n\n\t}\n\n\tNode L=BuildTr(lp,(lp+rp)/2,i<<1);\n\n\tNode R=BuildTr((lp+rp)/2+1,rp,(i<<1)+1);\n\n\tTr[i]=HB(L,R);\n\n\treturn Tr[i];\n\n}\n\n\n\nNode ask(int lp,int rp,int i){\n\n\tif(lp<=Tr[i].lp&&rp>=Tr[i].rp){\n\n\t\treturn Tr[i];\n\n\t}\n\n\tif(lp<=(Tr[i].lp+Tr[i].rp)/2&&rp>(Tr[i].lp+Tr[i].rp)/2){\n\n\t\tNode L=ask(lp,rp,i<<1);\n\n\t\tNode R=ask(lp,rp,(i<<1)+1);\n\n\t\treturn HB(L,R);\n\n\t}\n\n\tif(lp<=(Tr[i].lp+Tr[i].rp)/2){\n\n\t\treturn ask(lp,rp,i<<1);\n\n\t}else{\n\n\t\treturn ask(lp,rp,(i<<1)+1);\n\n\t}\n\n}\n\n\n\nint n,q;\n\nint askL,askR;\n\n\n\nint main() {\n\n\tn=in();\n\n\tBuildTr(1,n,1);\n\n\tq=in();\n\n\tfor(int i=0;i<q;++i){\n\n\t\taskL=in();askR=in();\n\n\t\tNode askend=ask(askL,askR,1);\n\n\t\tint ptr=0,out[10];\n\n\t\tfor(int i=0;i<10;++i){\n\n\t\t\tout[i]=-1;\n\n\t\t}\n\n\t\tfor(int i=9;i>=0;--i){\n\n\t\t\tif(askend.all&1<<i){\n\n\t\t\t\tout[ptr]=i;\n\n\t\t\t\t++ptr;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor(int i=0;i<5;++i){\n\n\t\t\tprintf(\"%d \",out[i]);\n\n\t\t}\n\n\t\tprintf(\"\\n\");\n\n\t}\n\n\treturn 0;\n\n}\n\n\n\n\n\n\n\n\n\nint in() {\n\n\tint input;\n\n\tscanf(\"%d\",&input);\n\n\treturn input;\n\n} \n```\n\n\n                             ",
        "postTime": 1604587610,
        "uid": 250574,
        "name": "Tsuku_yomi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3962 \u3010[TJOI2013]\u6570\u5b57\u6839\u3011"
    },
    {
        "content": "\u6211\u7684\u601d\u8def\uff1a$dp+$\u7ebf\u6bb5\u6811\n\n\u9996\u5148\u9700\u8981\u63a8\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u4efb\u610f$x$\uff0c\n\n\u5f53$x$\u4e0d\u7b49\u4e8e$0$\u65f6\uff0c$x$\u7684\u6570\u5b57\u6839\u5373\u4e3a$x$\u9664\u4ee5$9$\u7684\u4f59\u6570\n\n\u5f53$x$\u7b49\u4e8e$0$\u65f6\uff0c$x$\u7684\u6570\u5b57\u6839\u4e3a$0$\n\n#### \u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u5f15\u7406\uff1a\u5bf9\u4e8e\u4efb\u610f$n,$ \u6709$10^n-1$ $mod$ $9$ $=$ $1$\u6210\u7acb\u3002\u5f15\u7406\u8bc1\u660e\u7565\u3002\n\n$x=0$\u65f6\uff0c\u539f\u547d\u9898\u663e\u7136\u6210\u7acb\u3002\n\n$x$\u4e0d\u7b49\u4e8e$0$\u65f6\uff0c\u8bbe$x$\u7684\u5341\u8fdb\u5236\u4f4d\u5206\u522b\u4e3a$a[n],a[n-1],...,a[1],a[0]$\uff0c\u4ece\u9ad8\u5230\u4f4e\u3002\n\n\u4e8e\u662f\u6709$x=a[n]*10^{n}+a[n-1]*10^{(n-1)}+...+a[1]*10+a[0]$\n\n\u7531\u5f15\u7406\uff0c\n\n$x\\ mod\\ 9$\n\n$=\\ (a[n]*10^{n}+a[n-1]*10^{(n-1)}+...+a[1]*10+a[0])\\ mod\\ 9$\n\n$=\\ (a[n]*1+a[n-1]*1+...+a[1]*1+a[0])\\ mod \\ 9$\n\n$=$ \u9898\u76ee\u5b9a\u4e49\u4e2d\u7684\u6570\u5b57\u6839\n\n#### \u8bc1\u6bd5\n\n\u8981\u89e3\u51b3\u9898\u76ee\u4e2d\u7684\u95ee\u9898\uff0c\u6211\u7684\u601d\u8def\u662f\uff1a\u9996\u5148\u5bf9\u4e8e\u6bcf\u7ec4$(i,j)$\uff0c\u6c42\u51fa\u6700\u5927\u7684$k$\uff0c\u4f7f\u5f97\u7b2c$i$\u9879\u81f3\u7b2c$j$\u9879\u7684\u548c\u7684\u6570\u5b57\u6839\u4e3a$j$\u3002\u6211\u4eec\u4ee4$d[i][j]=k$\uff0c\u6709$i<=n,1<=j<=9$\u3002\u53e6\u5916\u663e\u7136\u6709$d[i][j]<=i$\n\n\u5982\u679c\u6c42\u51fa\u4e86$d$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u7ec4\u8be2\u95ee$(L,R)$\uff0c\u6211\u4eec\u5b9a\u4e49$k$\uff0c\u904d\u5386$1\uff5e9$\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u8fde\u7eed\u5b50\u533a\u95f4\uff0c\u6ee1\u8db3\u533a\u95f4\u6240\u6709\u6570\u7684\u548c\u7684\u6570\u5b57\u6839\u662f$k$\u3002\u5224\u65ad\u65b9\u5f0f\u4e3a\uff1a\n\n\u8003\u8651\u5982\u679c\u6709\u4e00\u7ec4$L1\uff0cR1$\u6ee1\u8db3\u6761\u4ef6\uff0c\u4e00\u5b9a\u6709$L<=R1<=R$\u4e0e$L<=L1<=R$\u6210\u7acb\u3002\u6240\u4ee5\u5982\u679c\u6709\u4efb\u4f55\u4e00\u4e2a$d[i][k]>=L$\uff0c\u6ee1\u8db3$L<=i<=R$\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a\u5b50\u533a\u95f4\u6ee1\u8db3\u5176\u548c\u7684\u6570\u5b57\u6839\u4e3a$k$\u3002\u5373\u5bf9\u4e8e$L<=i<=R$\uff0c$d[i][k]$\u7684\u6700\u5927\u503c$>=L$\u65f6\uff0c$k$\u6210\u7acb\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u4e3a\u533a\u95f4\u6c42\u6700\u5927\u503c\u7684\u95ee\u9898\u3002\u6211\u5efa\u7acb\u4e86$9$\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u8fdb\u884c\u67e5\u8be2\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u6c42$d$\u6570\u7ec4\u3002\n\n\u6211\u4f7f\u7528\u4e86$dp$\u7684\u601d\u60f3\uff0c$d$\u53ef\u4ee5\u9012\u63a8\u6c42\u5f97\uff1a\n\n$ d[i][j]=a[i]%9==j?i:d[i-1][(j-a[j]-1+9)%9+1] $\n\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u5982\u679c\u5f53\u524d$a[i]$\u7684\u6570\u5b57\u6839\u662f$j$\uff0c\u90a3\u4e48$d[i][j]=i$\uff1b\n\n\u5982\u679c$a[i]$\u7684\u6570\u5b57\u6839\u4e0d\u662f$j$\uff0c\u90a3\u4e48\u5982\u679c$d[i][j]=k$\uff0c\u5219\uff1a\u7b2c$k$\u9879\uff5e\u7b2c$i$\u9879\u4e4b\u548c\u7684\u6570\u5b57\u6839\u662f$j$\uff0c\u53ef\u4ee5\u63a8\u5f97\u7b2c$k$\u9879\uff5e\u7b2c$i-1$\u9879\u4e4b\u548c\u7684\u6570\u5b57\u6839\u662f$j-a[j]$\u7684\u6570\u5b57\u6839\u3002\u4e8e\u662f\u53ef\u4ee5\u9012\u63a8\u6c42\u5f97$d$\u6570\u7ec4\u3002\n\n\u5728\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u8981\u7279\u5224a[i]==0\u7684\u60c5\u51b5\u3002\u4ee3\u7801\u5982\u4e0b\u3002\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\n\nconst int maxn=500005;\n\nint n,num[maxn]; //num\u5373\u9898\u89e3\u4e2d\u7684a\nint d[maxn][11];\n\nstruct Node\n{\n    int left, right;\n    int maxa;\n}a[maxn][10]; //\u7ebf\u6bb5\u6811\n\nint z[maxn];\n\n/***\u4ee5\u4e0b\u4e3a\u7ebf\u6bb5\u6811\u6a21\u7248***/\n\nvoid buildtree(int id, int l, int r)\n{\n    for(int c=1;c<=9;c++)\n    {\n        a[id][c].left=l;\n        a[id][c].right=r;\n    }\n    if(l==r)\n    {\n        for(int c=1;c<=9;c++)\n            a[id][c].maxa=d[l][c];\n        return;\n    }\n    int mid=(l+r)/2;\n    buildtree(id<<1,l,mid);\n    buildtree(id<<1|1,mid+1,r);\n    for(int c=1;c<=9;c++)\n        a[id][c].maxa=max(a[id<<1][c].maxa,a[id<<1|1][c].maxa);\n}\n\nint query(int c, int id, int l, int r)\n{\n    if(a[id][c].left==l && a[id][c].right==r)\n    {\n        return a[id][c].maxa;\n    }\n    if(a[id<<1][c].right>=r) return query(c,id<<1,l,r);\n    else if(a[id<<1|1][c].left<=l) return query(c,id<<1|1,l,r);\n    else\n    {\n        return max(query(c,id<<1,l,a[id<<1][c].right),query(c,id<<1|1,a[id<<1|1][c].left,r));\n    }\n}\n\n/****\u4ee5\u4e0a\u662f\u7ebf\u6bb5\u6811\u6a21\u7248****/\n\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++) \n    {\n        cin>>num[i];\n        if(num[i]%9==0 && num[i]!=0) num[i]=9;\n        else\n            num[i]%=9;\n        if(num[i]==0) z[i]=i; //\u7279\u5224\u7b49\u4e8e\u96f6\u7684\u60c5\u51b5\uff0c\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u51fa\u73b0\u7684\u96f6\u7684\u4f4d\u7f6e\n        else z[i]=z[i-1];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        d[i][num[i]]=i;\n        for(int j=1;j<=9;j++)\n        {\n            d[i][j]=max(d[i][j],d[i-1][(j-num[i]-1+9)%9+1]); //\u6c42d\n        }\n    }\n    buildtree(1,1,n);\n    int q; cin>>q;\n    for(int i=1;i<=q;i++)\n    {\n        int l,r; cin>>l>>r; int sum=0;\n        for(int j=9;sum<=4&&j>=1;j--)\n        {\n            if(query(j,1,l,r)>=l)\n            {\n                sum++;\n                cout<<j<<' ';\n            }\n        }\n        if(sum<=4 && z[r]>=l) //\u7279\u5224\u96f6\n        {\n            sum++;\n            cout<<0<<' ';\n        }\n        for(;sum<=4;sum++) cout<<\"-1 \";\n        cout<<endl;\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1551506567,
        "uid": 38212,
        "name": "mydiplomacy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3962 \u3010[TJOI2013]\u6570\u5b57\u6839\u3011"
    },
    {
        "content": "# \u9898\u9762\u94fe\u63a5\n### [\u6d1b\u8c37](https://www.luogu.org/problemnew/show/P3962)\n\n# sol\n\n\u6211\u4eec\u5148\u4e0d\u8003\u8651$0$\uff0c\u53d1\u73b0\u6570\u5b57\u6839$=$\u5b83$mod 9$\u3002\n\n\u6211\u4eec\u524d\u7f00\u548c\u4e00\u6ce2\uff0c\u628a\u533a\u95f4\u548c\u53d8\u6210\u4e24\u6570\u76f8\u51cf\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a$v\\in\\{0-8\\}$\uff0c\uff08\u8fd9\u91cc\u9762\u7684$mod 9=0$\u7684\u76f8\u5f53\u4e8e\u6570\u5b57\u6839\u4e3a9\uff09\uff0c\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e2a\u6570$a$\u5f80\u540e\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u548c\u5b83\u7ec4\u6210$(b-a) mod 9=v$\u7684\u4f4d\u7f6e\uff0c\u79f0\u4e3a$OJBK$\u4f4d\u7f6e\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u6bb5\u533a\u95f4\uff0c\u6c42\u51fa\u6bcf\u4e2a$v\\in\\{0-8\\}$\u7684\u6700\u5c0f$OJBK$\u4f4d\u7f6e\uff0c\u82e5\u5b83\u5728\u533a\u95f4\u91cc\u9762\uff0c\u90a3\u4e48\u8fd9\u6bb5\u533a\u95f4\u5c31\u53ef\u4ee5\u7ec4\u6210\u8fd9\u4e2a$v$\u3002\n\n\u81f3\u4e8e$0$\u6211\u4eec\u7279\u5224\u4e00\u4e0b\u533a\u95f4\u5185\u6709\u6ca1\u6709$0$\uff0c\u7136\u540e\u5ffd\u7565$0$\u3002\n\n\u603b\u590d\u6742\u5ea6$O(9nlogn+9q)$\u3002\n\n### [\u4ee3\u7801](https://www.cnblogs.com/cx233666/p/9906555.html)",
        "postTime": 1541344413,
        "uid": 70788,
        "name": "Cgod",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3962 \u3010[TJOI2013]\u6570\u5b57\u6839\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6c42\u533a\u95f4\u5185\u5b50\u6bb5\u548c\u7684\u6240\u6709\u53ef\u80fd\u6570\u5b57\u6839\n\n\u53ef\u4ee5\u53d1\u73b0\uff1a\u5982\u679c\u67d0\u4e2a\u6570\u4e0d\u662f0\uff0c\u90a3\u4e48\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u53ea\u53d6\u51b3\u4e8e\u8fd9\u4e2a\u6570\u88ab9\u9664\u7684\u4f59\u6570\n\n# \u57fa\u672c\u601d\u8def\n\n\u5bf9\u4e8e\u8fd9\u79cd\u5b50\u6bb5\u7684\u95ee\u9898\uff0c\u5e38\u89c1\u7684\u5904\u7406\u65b9\u5f0f\u5c31\u662f\uff1a\u4fdd\u5b58\u533a\u95f4\u524d\u7f00\u3001\u540e\u7f00\u3001\u5b50\u6bb5\u4ee5\u53ca\u6574\u4e2a\u533a\u95f4\u7684\u4fe1\u606f\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5408\u5e76\uff1a\n\n1. \u524d\u7f00\uff1a\u7b54\u6848\u53ef\u80fd\u6765\u81ea\u4e8e\u524d\u9762\u533a\u95f4\u7684\u524d\u7f00\uff0c\u4e5f\u53ef\u80fd\u662f\u524d\u9762\u6574\u4e2a\u533a\u95f4\u4e0e\u540e\u9762\u533a\u95f4\u7684\u524d\u7f00\u8fde\u5728\u4e00\u8d77\n\n   \u4f8b\u5982ab cd\u7684\u6240\u6709\u524d\u7f00\u5c31\u662fa ab abc abcd\uff0c\u524d\u9762\u533a\u95f4\u7684\u524d\u7f00\u662fa ab\uff0c\u540e\u9762\u533a\u95f4\u7684\u524d\u7f00\u662fc cd\n\n2. \u540e\u7f00\u540c\u7406\n\n3. \u5b50\u6bb5\uff1a\u53ef\u80fd\u662f\u4e24\u4e2a\u533a\u95f4\u5404\u81ea\u7684\u5b50\u6bb5\uff0c\u4e5f\u53ef\u80fd\u662f\u524d\u9762\u533a\u95f4\u7684\u540e\u7f00\u4e0e\u540e\u9762\u533a\u95f4\u7684\u524d\u7f00\u8fde\u5728\u4e00\u8d77\n\n4. \u533a\u95f4\u548c\u76f4\u63a5\u5408\u5e76\u5373\u53ef\n\n# \u5904\u7406\u4e0d\u5305\u62ec0\u7684\u60c5\u51b5\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u5408\u5e76\u5c31\u662f\u679a\u4e3e\u4e24\u90e8\u5206\u7684\u53ef\u80fd\u60c5\u51b5\uff0c\u5408\u5e76\u540e\u7684\u4e24\u79cd\u60c5\u51b5\u53d6\u903b\u8f91\u6216\u5373\u53ef\n\n\u4f8b\u5982\u6837\u4f8b\uff1a101 240 331 4 52\n\n\u5bf99\u53d6\u4f59\u540e\u7684\u7ed3\u679c\uff1a2 6 7|4 7\n\n\u524d\u4e09\u4e2a\u6570\uff1a\n```\npre=[2,6,8]\nsuf=[4,6,7]\nsum=6\nsub=[2,4,6,7,8]\n```\n\u540e\u4e24\u4e2a\u6570\uff1a\n```\npre=[2,4]\nsuf=[2,7]\nsum=2\nsub=[2,4,7]\n```\n\u5408\u5e76\u540e\uff08\u8fd9\u91cc\u7684\u52a0\u53f7\u8868\u793a\u6c42\u5e76\u96c6\uff0c\u4e58\u53f7\u8868\u793a\u5bf9\u7b2c\u4e00\u4e2a\u96c6\u5408\u7684\u6bcf\u4e2a\u6570\u52a0\u4e0a\u7b2c\u4e8c\u4e2a\u96c6\u5408\u7684\u67d0\u4e2a\u6570\uff0c\u6240\u6709\u60c5\u51b5\u5408\u5e76\uff0c\u5e76\u4e14\u6570\u5b57\u6839\u4e3a9\u65f6\u8bb0\u4e3a0\uff09\uff1a\n```\npre=[2,6,8]*2+[2,4]=[4,8,1]+[4,6]=[1,4,6,8]\nsuf=[2,7]+[4,6,7]*2=[2,7]+[6,8,0]=[0,2,6,7,8]\nsum=8\nsub=[2,4,6,7,8]+[2,4,7]+[4,6,7]*[2,4]=[2,4,6,7,8]+[2,4,7]+[6,8,8,1,0,2]=[0,1,2,4,6,7,8]\n```\n\u5efa\u6811\u7684\u65f6\u5019\uff0c\u53f6\u5b50\u8282\u70b9\u4fdd\u5b58\u8fd9\u4e9b\u4fe1\u606f\uff08\u5047\u8bbe\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u6a219\u4f59k\uff1a\n```\npre=[k]\nsuf=[k]\nsum=k\nsub=[k]\n```\n\n\u5176\u5b83\u8282\u70b9\u5408\u5e76\u5b50\u8282\u70b9\u7684\u4fe1\u606f\u5373\u53ef\u3002\n\n\u8fd9\u6837\uff0c\u4e0d\u5305\u542b0\u7684\u60c5\u51b5\u5c31\u53ef\u4ee5\u901a\u8fc7\u533a\u95f4\u67e5\u8be2\u6765\u89e3\u51b3\u3002 \n\n# \u5305\u62ec0\u7684\u60c5\u51b5\n\n\u8fd9\u79cd\u60c5\u51b5\u5c31\u590d\u6742\u4e00\u4e9b\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\uff0c0\u4e0d\u4f1a\u5bf9\u533a\u95f4\u7684\u975e\u96f6\u6570\u5b57\u6839\u4ea7\u751f**\u4efb\u4f55**\u5f71\u54cd\uff0c\u6240\u4ee5\u8003\u8651\u5982\u4f55\u5728\u5efa\u6811\u65f6\u6d88\u6389\u5f71\u54cd\u3002\n\n\u53ef\u4ee5\u8fd9\u6837\u6784\u9020\uff1a\n```\npre=[]\nsuf=[]\nsum=0\nsub=[]\n```\n\u8fd9\u6837\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u533a\u95f4\u5728\u5408\u5e76\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\uff08\u4e0e\u4efb\u4f55\u533a\u95f4\u5408\u5e76\uff0c\u7ed3\u679c\u4ecd\u662f\u53e6\u4e00\u4e2a\u533a\u95f4\uff09\u3002\n\n\u5efa\u6811\u7684\u65f6\u5019\uff0c\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\u786e\u5b9e\u4e3a0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u5c31\u4fdd\u5b58\u4e0a\u9762\u7684\u4fe1\u606f\u3002\n\n\u7136\u540e\u8ba8\u8bba\u533a\u95f4\u6570\u5b57\u6839\u662f\u5426\u5305\u62ec0\u3002\n\n\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1. \u533a\u95f4\u5185\u4e0d\u542b0\uff0c\u90a3\u4e48\u6b63\u5e38\u5904\u7406\u5373\u53ef\u3002\n\n2. \u533a\u95f4\u5185\u5305\u542b0\uff0c\u4e5f\u5305\u542b\u975e\u96f6\u7684\u6570\uff0c\u4e5f\u662f\u6b63\u5e38\u5904\u7406\uff0c\u6700\u540e\u628a0\u52a0\u4e0a\u3002\n\n3. \u533a\u95f4\u5185\u5168\u4e3a0\uff0c\u90a3\u4e48\u7b54\u6848\u53ea\u67090\u3002\n\n\u5224\u65ad\u7528\u524d\u7f00\u548c\u5c31\u884c\u3002\n\n# \u4ee3\u7801\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u628a\u6bcf\u4e2a\u533a\u95f4\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u91cd\u8f7d\u4e86\u52a0\u53f7\uff08\u8868\u793a\u5408\u5e76\u533a\u95f4\uff0c\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff09\u3002\n\n\u540c\u65f6\uff0c\u6bcf\u4e2a\u7ed3\u6784\u4f53\u538b\u4f4d\u6765\u8282\u7ea6\u7a7a\u95f4\uff0csum\u4e5f\u8fdb\u884c\u7c7b\u4f3c\u7684\u5904\u7406\uff08\u5bf91\u79fb\u4f4d\u540e\u4fdd\u5b58\uff0c\u8fd9\u6837\u4fbf\u4e8e\u5904\u7406\uff09\u3002\n\n```cpp\n#include<cstdio>\nint read(){\n    int n=0;char c=getchar();bool f=0;\n    while(c!='-'&&(c<'0'||c>'9'))c=getchar();\n    if(c=='-'){f=1;c=getchar();}\n    while(c>='0'&&c<='9'){n=n*10+c-'0';c=getchar();}\n    if(f)return -n;\n    return n;\n}\nint mup(int a,int b){\n    int rs=0;\n    for(int k=0;k<9;k++){\n        if(b&(1<<k)){\n            rs|=a<<k;\n        }\n    }\n    return (rs|(rs>>9))&0x1ff;\n}\nstruct data{\n    int pre,suf,sum,sub;\n    data(){sum=1;pre=suf=sub=0;}\n    data(int l){pre=suf=sum=sub=(1<<l);}\n    data(int _p,int _s,int _sum,int _sub){\n        pre=_p;\n        suf=_s;\n        sum=_sum;\n        sub=_sub;\n    }\n    data operator+(const data &x)const{\n        int _p,_s,_sum,_sub;\n        _p=pre|mup(x.pre,sum);\n        _s=x.suf|mup(suf,x.sum);\n        _sum=mup(sum,x.sum);\n        _sub=sub|x.sub|mup(suf,x.pre);\n        return data(_p,_s,_sum,_sub);\n    }\n};\nconst int N=100000;\nint cnt[N];\nint num[N];\ndata seg[N*4];\nint n;\nvoid build(int l,int r,int id){\n    if(l==r){\n        if(cnt[l]-cnt[l-1]){\n            seg[id]=data();\n        }else{\n            seg[id]=data(num[l]);\n        }\n        \n        return;\n    }\n    int mid=((l+r)>>1);\n    build(l,mid,id<<1);\n    build(mid+1,r,(id<<1)+1);\n    seg[id]=seg[id<<1]+seg[(id<<1)+1];\n    return;\n}\ndata query(int l,int r,int ll,int rr,int id){\n    if(l<=ll&&rr<=r)return seg[id];\n    if(rr<l||r<ll)return data();\n    int mid=((ll+rr)>>1);\n    return query(l,r,ll,mid,id<<1)+query(l,r,mid+1,rr,(id<<1)+1);\n}\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        int a=read();\n        if(a==0)cnt[i]=1;\n        cnt[i]+=cnt[i-1];\n        num[i]=a%9;\n    }\n    build(1,n,1);\n    int q=read();\n    while(q--){\n        int l,r;\n        l=read();r=read();\n        int x=query(l,r,1,n,1).sub;\n        bool fl[10]={};\n        if(cnt[r]!=cnt[l-1]){\n            fl[0]=1;\n        }\n        for(int i=1;i<=9;i++){\n            fl[i]=x&(1<<(i%9));\n        }\n        if(cnt[r]-cnt[l-1]==r-l+1)fl[9]=0;\n        int cnt=5;\n        for(int i=9;i>=0;i--){\n            if(fl[i]){\n                printf(\"%d \",i);\n                --cnt;\n                if(cnt==0)break;\n            }\n        }\n        while(cnt--){\n            printf(\"-1 \");\n        }\n        printf(\"\\n\");\n    }\n}\n```\n",
        "postTime": 1610876135,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3962 \u3010[TJOI2013]\u6570\u5b57\u6839\u3011"
    }
]