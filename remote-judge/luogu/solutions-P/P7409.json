[
    {
        "content": "\u545c\u545c\u4eba\u50bb\u4ee3\u7801\u5e38\u6570\u5927\u88ab\u5361\u6389\u4e86\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5728 O2 \u52a0\u6301\u53ef\u4ee5\u8fc7\u6389\u3002\u6211\u5f88\u597d\u5947 @GuidingStar \u4e3a\u4ec0\u4e48\u5e38\u6570\u8fd9\u4e48\u5c0f\u545c\u545c\u3002\n\n\u8003\u8651\u5230\u8981\u6c42\u4e00\u4e2a\u4e32\u7ed9\u5b9a\u540e\u7f00\u4e24\u4e24 $\\operatorname{lcp}$ \u4e4b\u548c\uff0c\u9700\u8981\u4e00\u4e2a\u5904\u7406\u5b57\u7b26\u4e32\u524d\u7f00\u7684\u5de5\u5177\u53bb\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u663e\u7136\u6211\u4eec\u6ca1\u6709\u597d\u7684\u89e3\u51b3\u524d\u7f00\u7684\u5de5\u5177\uff0c\u4e8e\u662f\u5c06\u4e32\u53cd\u8f6c\uff0c\u7528\u4e00\u4e2a\u5904\u7406\u540e\u7f00\u7684\u5de5\u5177\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u91cc\u7528\u7684\u662f\u540e\u7f00\u81ea\u52a8\u673a\u3002\n\n\u6709\u4e00\u4e2a\u719f\u77e5\u7684\u7ed3\u8bba\uff0c\u4e5f\u5c31\u662f\u540e\u7f00\u81ea\u52a8\u673a\u4e0a $\\operatorname{parent}$ \u6811\u4e0a\u7684\u4e24\u4e2a\u7ed3\u70b9\u7684 $\\operatorname{LCA}$ \u7ed3\u70b9\u5c31\u662f\u6839\u5206\u522b\u5230\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u7684\u8868\u793a\u7684\u5b57\u7b26\u4e32\u7684 $\\operatorname{lcp}$\u3002\u663e\u7136\u8fd9\u4e2a $\\operatorname{lcp}$ \u662f\u597d\u6c42\u7684\u3002\u4e8e\u662f\u5c06\u4e32\u53cd\u8f6c\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u6269\u5c55\uff0c\u8bb0\u5f55\u4e0b\u7b2c $i$ \u4e2a\u5b57\u7b26\u6269\u5c55\u540e\uff0c\u53ef\u4ee5\u8868\u793a $s[1 \\dots i]$ \u7684\u7ed3\u70b9\u662f\u54ea\u4e00\u4e2a\u3002\n\n\u7136\u540e\u63a5\u4e0b\u6765\u5904\u7406\u8be2\u95ee\u3002\u6ce8\u610f\u5230 $\\sum t$ \u6700\u5927\u662f $3 \\times 10^6$\uff0c\u904d\u5386\u4e00\u904d $\\operatorname{parent}$ \u6811\u663e\u7136\u4e0d\u73b0\u5b9e\u3002\u4e8e\u662f\u5bf9\u9700\u8981\u7684\u7ed3\u70b9\u6784\u5efa\u865a\u6811\u5373\u53ef\u3002\n\n\u9700\u8981\u5904\u7406\u7b54\u6848\u3002\u5c06\u4e24\u4e24\u95f4\u7684\u8d21\u732e\u5904\u7406\u5728\u4ed6\u4eec\u7684 $\\operatorname{LCA}$ \u4e4b\u95f4\u3002\u5f71\u54cd\u7b54\u6848\u7684\u663e\u7136\u662f\u4e24\u4e2a\u4e0d\u540c\u5b50\u6811\u4e0e\u6839\u7ed3\u70b9\u5bf9\u5b50\u6811\u7684\u8d21\u732e\u3002\n\n\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u70b9\u4e3a\u5173\u952e\u7ed3\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7ed3\u70b9\u662f\u8be2\u95ee\u4e2d\u9700\u8981\u52a0\u5165\u67e5\u8be2\u7684\u67d0\u4e00\u4e2a\u540e\u7f00\uff08\u5904\u7406\u7684\u65f6\u5019\u53d8\u6210\u524d\u7f00\u4e86\uff09\u8868\u793a\u7684\u90a3\u4e2a\u7ed3\u70b9\u3002\n\n\u9996\u5148\u8003\u8651\u6839\u7ed3\u70b9\u5bf9\u5b50\u6811\u7684\u8d21\u732e\uff0c\u663e\u7136\u8fd9\u4e2a\u7ed3\u70b9\u4e0e\u5176\u5b50\u6811\u5185\u7ed3\u70b9 $\\operatorname{LCA}$ \u5c31\u662f\u8fd9\u4e2a\u7ed3\u70b9\u672c\u8eab\u3002\u90a3\u4e48\u5982\u679c\u8be5\u7ed3\u70b9\u662f\u5173\u952e\u7ed3\u70b9\u5176\u8d21\u732e\u589e\u52a0\u8fd9\u4e2a\u5b50\u6811\u5185\u5173\u952e\u7ed3\u70b9\u4e2a\u6570\u3002\n\n\u518d\u8003\u8651\u4e24\u4e24\u5b50\u6811\u95f4\u7684\u8d21\u732e\uff0c\u6b21\u6570\u5c31\u662f\u8fd9\u4e24\u4e2a\u5b50\u6811\u5185\u5173\u952e\u7ed3\u70b9\u4e2a\u6570\u79ef\u3002\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u662f\u663e\u7136\u597d\u5904\u7406\u7684\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nint read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\tc=getchar();\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x;\n}\nvoid write(LL x)\n{\n\tif(x<0)\tputchar('-'),x=-x;\n\tif(x>9)\twrite(x/10);\n\tputchar(x%10+'0');\n}\nconst LL MOD=23333333333333333ll;\nconst int Sigma=26;\nchar s[500005];\nint pos[500005],n,dep[1000005],fa[1000005][21],lgs[1000005],dfn[1000005],sjc,val[1000005],sr[1000005],len,siz[1000005];\nbool tek[1000005];\nvector<int> G[1000005],vir[1000005];\nLL ans;\nbool cmp(int x,int y){return dfn[x]<dfn[y];}\nstruct SAM{\n\tint las,cnt,ch[1000005][Sigma],len[1000005],fa[1000005];\n\tSAM(){las=cnt=1;}\n\tvoid extend(int c)\n\t{\n\t\tint p=las,cur=++cnt;\n\t\tlen[cur]=len[las]+1;\n\t\tlas=cur;\n\t\twhile(p && !ch[p][c])\tch[p][c]=cur,p=fa[p];\n\t\tif(!p)\tfa[cur]=1;\n\t\telse\n\t\t{\n\t\t\tint q=ch[p][c];\n\t\t\tif(len[p]+1==len[q])\tfa[cur]=q;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint clone=++cnt;\n\t\t\t\tlen[clone]=len[p]+1;\n\t\t\t\tmemcpy(ch[clone],ch[q],sizeof ch[q]);\n\t\t\t\tfa[clone]=fa[q];\n\t\t\t\tfa[q]=fa[cur]=clone;\n\t\t\t\twhile(ch[p][c]==q)\tch[p][c]=clone,p=fa[p];\n\t\t\t}\n\t\t}\n\t}\n\tvoid build(){for(int i=2;i<=cnt;++i)\tG[fa[i]].push_back(i);}\n}sam;\nvoid dfs(int now)\n{\n\tdep[now]=dep[sam.fa[now]]+1;\n\tfa[now][0]=sam.fa[now];\n\tval[now]=sam.len[now];\n\tdfn[now]=++sjc;\n\tfor(int i=1;i<=20;++i)\tfa[now][i]=fa[fa[now][i-1]][i-1];\n\tfor(unsigned int i=0;i<G[now].size();++i)\tdfs(G[now][i]);\n}\nint LCA(int u,int v)\n{\n\tif(dep[u]>dep[v])\tu^=v^=u^=v;\n\twhile(dep[u]<dep[v])\tv=fa[v][lgs[dep[v]-dep[u]]];\n\tif(u==v)\treturn u;\n\tfor(int i=20;~i;--i)\tif(fa[u][i]!=fa[v][i])\tu=fa[u][i],v=fa[v][i];\n\treturn fa[u][0];\n}\nvoid dfs2(int now)\n{\n\tfor(unsigned int i=0;i<vir[now].size();++i)\n\t{\n\t\tint to=vir[now][i];\n\t\tdfs2(to);\n\t\tsiz[now]+=siz[to];\n\t\tans+=LL(val[now])*LL(siz[to])*LL(siz[now]-siz[to]);\n\t}\n\tif(tek[now])\tans+=LL(siz[now])*LL(val[now]),++siz[now];\n}\nint main(){\n\tint T;\n\tn=read(),T=read();\n\tscanf(\"%s\",s+1);\n\treverse(s+1,s+1+n);\n\tfor(int i=1;i<=n;++i)\tsam.extend(s[i]-'a'),pos[i]=sam.las;\n\tsam.build();\n\tfor(int i=2;i<=1000000;++i)\tlgs[i]=lgs[i>>1]+1;\n\tdfs(1);\n\twhile(T-->0)\n\t{\n\t\tlen=read();\n\t\tfor(int i=1;i<=len;++i)\ttek[sr[i]=pos[n-read()+1]]=true;\n\t\tsort(sr+1,sr+1+len,cmp);\n\t\tlen=unique(sr+1,sr+1+len)-sr-1;\n\t\tfor(int i=1;i<len;++i)\tsr[len+i]=LCA(sr[i],sr[i+1]);\n\t\tlen=2*len-1;\n\t\tsort(sr+1,sr+1+len,cmp);\n\t\tlen=unique(sr+1,sr+1+len)-sr-1;\n\t\tfor(int i=2;i<=len;++i)\tvir[LCA(sr[i-1],sr[i])].push_back(sr[i]);\n\t\tans=0;\n\t\tdfs2(sr[1]);\n\t\twrite(ans%MOD);\n\t\tputs(\"\");\n\t\tfor(int i=1;i<=len;++i)\tvir[sr[i]].clear(),siz[sr[i]]=0,tek[sr[i]]=false;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1614673133,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "P7409 SvT"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\uff1a\n\n- [\u540e\u7f00\u6570\u7ec4\u53ca height \u6570\u7ec4](https://oi-wiki.org/string/sa/)\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u6c42\u540e\u7f00\u4e24\u4e24\u4e4b\u95f4\u7684 LCP\uff08\u6700\u957f\u516c\u5171\u524d\u7f00\uff09\u7684\u957f\u5ea6\u4e4b\u548c\u3002\n\n### \u601d\u8def\uff1a\n\n\uff08\u4ee5\u4e0b\u7684 $\\text{LCP}$ \u8868\u793a\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\uff0c$\\text{suffix}(i)$ \u8868\u793a\u8d77\u59cb\u4f4d\u7f6e\u4e3a $i$ \u7684\u540e\u7f00\uff09\n\nheight \u6570\u7ec4\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\n\n$\\text{LCP}(sa[i],sa[j])=\\min\\limits_{k=i+1}^jheight[k]$\n\n\u7a0d\u52a0\u63a8\u5bfc\u53ef\u5f97\uff1a\n\n$\\text{LCP}(\\text{suffix}(i),\\text{suffix}(j))=\\min\\limits_{k=rk[i]+1}^{rk[j]}height[k]$\n\n\u518d\u770b\u770b\u539f\u9898\u7684\u8981\u6c42\uff1a\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $t$ \u7684\u6570\u7ec4 $a$\uff0c\u6c42 $\\sum\\limits_{i=1}^{t-1}\\sum\\limits_{j=i+1}^t\\text{LCP}(suffix(a[i]),suffix(a[j]))$\u3002\n\n\u628a\u63a8\u5bfc\u7684\u5f0f\u5b50\u5e26\u5165\uff0c\u53d1\u73b0\u8981\u6c42\u7684\u7b49\u4ef7\u4e8e $\\sum\\limits_{i=1}^{t-1}\\sum\\limits_{j=i+1}^t\\min\\limits_{k=rk[a[i]]+1}^{rk[a[j]]}height[k]$\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86 $\\text{RMQ}$ \u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u6808\uff0c\u5206\u6cbb+ST\u8868\u7b49\u591a\u79cd\u65b9\u5f0f\u5b8c\u6210\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$ \u7684\u5206\u6cbb+ST\u8868\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ri register int\ntypedef long long ll;\nconst int maxn=5e5+10;\ntemplate<class T>inline void clear(T *arr,int siz){memset(arr,0,sizeof(T)*(siz+1));}\nconst ll mod=23333333333333333;\nint a[maxn],cnt[maxn],mx,n,q,rk[maxn],sa[maxn],tmp[maxn];\nchar s[maxn];\ninline void base_sort(){\n\tclear(cnt,mx);\n\tfor(ri i=1;i<=n;++i)++cnt[rk[i]];\n\tfor(ri i=1;i<=mx;++i)cnt[i]+=cnt[i-1];\n\tfor(ri i=n;i;--i)sa[cnt[rk[tmp[i]]]--]=tmp[i];\n}\ninline void suffix_sort(){\n\tfor(ri i=1;i<=n;++i)mx=max(mx,rk[i]=s[i]),tmp[i]=i;\n\tbase_sort();\n\tfor(ri len=1,dif=0;dif<n;len<<=1,mx=dif){\n\t\tri p=0;\n\t\tfor(ri i=n-len+1;i<=n;++i)tmp[++p]=i;\n\t\tfor(ri i=1;i<=n;++i)\n\t\t\tif(sa[i]>len)\n\t\t\t\ttmp[++p]=sa[i]-len;\n\t\tbase_sort();\n\t\tswap(rk,tmp);\n\t\trk[sa[1]]=dif=1;\n\t\tfor(ri i=2;i<=n;++i){\n\t\t\tif(tmp[sa[i-1]]!=tmp[sa[i]]||tmp[sa[i-1]+len]!=tmp[sa[i]+len])++dif;\n\t\t\trk[sa[i]]=dif;\n\t\t}\n\t}\n}\nint ht[maxn];\ninline void calc_ht(){\n\tfor(ri i=1,h=0;i<=n;++i){\n\t\tif(h)--h;\n\t\tri j=sa[rk[i]-1];\n\t\twhile(s[i+h]==s[j+h])++h;\n\t\tht[rk[i]]=h;\n\t}\n}\nstruct node{\n\tint id,val;\n\tinline bool operator<(const node &k)const{\n\t\treturn val<k.val;\n\t}\n}b[maxn];\ntemplate<class T>\nstruct ST{\n\tint lg;\n\tT st[19][maxn];\n\tinline void build(T *arr,int siz){\n\t\tlg=log2(siz);\n\t\tfor(ri i=0;i<=lg;++i)clear(st[i],siz);\n\t\tfor(ri i=1;i<=siz;++i)st[0][i]=arr[i];\n\t\tfor(ri i=1;i<=lg;++i)\n\t\t\tfor(ri j=1;j+(1<<(i-1))<=siz;++j)\n\t\t\t\tst[i][j]=min(st[i-1][j],st[i-1][j+(1<<(i-1))]);\n\t}\n\tinline T query(int l,int r){\n\t\tri k=log2(r-l+1);\n\t\treturn min(st[k][l],st[k][r-(1<<k)+1]);\n\t}\n};\nST<int>st1;\nST<node>st2;\nll ans;\ninline ll mul(ll x,ll y){\n\tll ret=0;\n\tfor(;y;x=(x+x)%mod,y>>=1)if(y&1)ret=(ret+x)%mod;\n\treturn ret;\n}\ninline void calc(int l,int r){\n\tif(l>=r)return;\n\tnode mid=st2.query(l,r-1);\n\tans=(ans+mul(mul(mid.id-l+1,r-mid.id),mid.val))%mod;\n\tcalc(l,mid.id),calc(mid.id+1,r);\n}\nint main(){\n\tscanf(\"%d%d%s\",&n,&q,s+1);\n\tsuffix_sort();\n\tcalc_ht();\n\tst1.build(ht,n);\n\twhile(q--){\n\t\tri l;\n\t\tscanf(\"%d\",&l);\n\t\tfor(ri i=1;i<=l;++i)scanf(\"%d\",a+i),a[i]=rk[a[i]];\n\t\tsort(a+1,a+l+1);\n\t\tl=unique(a+1,a+l+1)-a-1;\n\t\tif(l>1){\n\t\t\tfor(ri i=1;i<l;++i)b[i]={i,st1.query(a[i]+1,a[i+1])};\n\t\t\tst2.build(b,l-1);\n\t\t}\n\t\tans=0;\n\t\tcalc(1,l);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1623470053,
        "uid": 67942,
        "name": "meyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P7409 \u3010SvT\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P7409)\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u865a\u6811\uff0c\u540e\u7f00\u81ea\u52a8\u673a\u3002\n\n\u9898\u76ee\u8981\u6c42\uff1a\u540e\u7f00\u4e24\u4e24\u4e4b\u95f4\u7684 $\\text{lcp}$ \u7684\u957f\u5ea6\u4e4b\u548c\n\n\u5728\u505a\u8fd9\u9053\u9898\u524d\uff0c\u53ef\u4ee5\u5148\u4e86\u89e3\u4e00\u4e2a\u5957\u8def\u3002\n\n\u5728 [NOI2015 \u54c1\u9152\u5927\u4f1a](https://www.luogu.com.cn/problem/P2178) \u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u5b57\u7b26\u4e32\u5012\u7740\u63d2\u5165\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f83\u4e3a\u65b9\u4fbf\u7684\u5904\u7406 $\\text{lcp}$\u3002\n\n\u6b64\u65f6\u7684\u4e24\u4e2a\u5b50\u4e32\u7684 $\\text{lcp}$ \u5c31\u662f\u5bf9\u5e94\u8282\u70b9\u4e0a $\\text{LCA}$ \u7684 $\\operatorname{len}$ \u7684\u957f\u5ea6\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u4e00\u4e2a\u8282\u70b9\u7684\u4e0d\u540c\u5b50\u6811\u5e26\u6765\u7684\u8d21\u732e\u3002\n\n\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u4e00\u5b83\u5728\u81ea\u52a8\u673a\u4e2d\u7684\u7f16\u53f7\uff0c\u4e5f\u5c31\u662f\u4ee3\u7801\u4e2d\u7684 $\\operatorname{pos}$ \u6570\u7ec4\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\u6211\u4eec\u4e00\u6b21 $\\text{dp}$ \u904d\u5386\u6574\u68f5\u6811\u662f\u4e0d\u79d1\u5b66\u7684\u3002\n\n\u800c\u4e14\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6240\u6709\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u68f5\u865a\u6811\u6765 $\\text{dp}$\u3002\n\n\u628a\u4e0a\u8ff0\u7684\u601d\u8def\u6574\u5408\u4e0b\u4e86\u5c31\u53ef\u6784\u6210\u5982\u4e0b\u4ee3\u7801\u3002\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 3e6 + 5;\nconst long long MOD = 23333333333333333;\n\nint nxt[N],ver[N],head[N],tot;\nvoid addEdge(int u,int v) {nxt[++ tot] = head[u];ver[tot] = v;head[u] = tot;}\n\nstruct SAM {\n\tint ch[26];\n\tint len,fa,sz;\n}sam[N];\n\nint ncnt = 1,lst = 1;\n\nvoid add(int c) {\n\tint p = lst;\n\tint u = lst = ++ ncnt;\n\tsam[u].len = sam[p].len + 1;\n\tfor (; p && !sam[p].ch[c] ; p = sam[p].fa)\n\t\tsam[p].ch[c] = u;\n\tif (!p)\n\t\tsam[u].fa = 1;\n\telse {\n\t\tint q = sam[p].ch[c];\n\t\tif (sam[q].len == sam[p].len + 1)\n\t\t\tsam[u].fa = q;\n\t\telse {\n\t\t\tint spt = ++ ncnt;\n\t\t\tsam[spt] = sam[q];\n\t\t\tsam[spt].sz = 0;\n\t\t\tsam[spt].len = sam[p].len + 1;\n\t\t\tsam[u].fa = sam[q].fa = spt;\n\t\t\tfor (; p && sam[p].ch[c] == q ; p = sam[p].fa)\n\t\t\t\tsam[p].ch[c] = spt;\n\t\t}\n\t}\n}\n\nchar str[N];\nlong long ans;\nvector<int> g[N];\nint n,q,tim,top,tag;\nint s[N],h[N],pos[N],dfn[N],dep[N],f[N][20],inc[N];\n\nvoid dfs(int u) {\n\tdfn[u] = ++ tim;\n\tfor (int i = 1 ; i < 20 ; ++ i)\n\t\tf[u][i] = f[f[u][i - 1]][i - 1];\n\tfor (unsigned i = 0 ; i < g[u].size() ; ++ i) {\n\t\tint v = g[u][i];\n\t\tf[v][0] = u;\n\t\tdep[v] = dep[u] + 1;\n\t\tdfs(v);\n\t}\n}\n\nint LCA(int x,int y) {\n\tif (dep[x] < dep[y])\n\t\tswap(x,y);\n\tfor (int i = 19 ; ~i ; -- i)\n\t\tif (dep[f[x][i]] >= dep[y])\n\t\t\tx = f[x][i];\n\tif (x == y)\n\t\treturn x;\n\tfor (int i = 19 ; ~i ; -- i)\n\t\tif (f[x][i] != f[y][i])\n\t\t\tx = f[x][i],y = f[y][i];\n\treturn f[x][0];\n}\n\nbool cmp(int x,int y) {return dfn[x] < dfn[y];}\n\nvoid build(int k) {\n\tsort(h + 1,h + 1 + k,cmp);\n\tk = unique(h + 1,h + 1 + k) - h - 1;\n\ts[top = 1] = 1;tot = 0;head[1] = 0;tag ++;\n\tfor (int i = 1 ; i <= k ; ++ i) {\n\t\tinc[h[i]] = tag;\n\t\tif (h[i] != 1) {\n\t\t\tint l = LCA(h[i],s[top]);\n\t\t\tif (dfn[l] != dfn[s[top]]) {\n\t\t\t\twhile (dfn[l] < dfn[s[top - 1]])\n\t\t\t\t\taddEdge(s[top - 1],s[top]),-- top;\n\t\t\t\tif (l == s[top - 1])\n\t\t\t\t\taddEdge(s[top - 1],s[top]),-- top;\n\t\t\t\telse\n\t\t\t\t\thead[l] = 0,addEdge(l,s[top]),s[top] = l;\n\t\t\t}\n\t\t\thead[h[i]] = 0;s[++ top] = h[i];\n\t\t}\n\t}\n\tfor (int i = 1 ; i < top ; ++ i)\n\t\taddEdge(s[i],s[i + 1]);\n}\n\nvoid redfs(int u) {\n\tsam[u].sz = inc[u] == tag;\n\tfor (int e = head[u] ; e ; e = nxt[e]) {\n\t\tint v = ver[e];\n\t\tredfs(v);\n\t\tsam[u].sz += sam[v].sz;\n\t\tans += (sam[u].sz - sam[v].sz) * sam[v].sz * sam[u].len;\n\t}\n}\n\nint main () {\n\tscanf(\"%d %d\",&n,&q);\n\tscanf(\"%s\",str + 1);\n\tfor (int i = n ; i ; -- i)\n\t\tadd(str[i] - 'a'),pos[i] = lst;\n\tfor (int i = 2 ; i <= ncnt ; ++ i)\n\t\tg[sam[i].fa].push_back(i);\n\tint x;\n\tdep[1] = 1;\n\tdfs(1);\n\twhile (q --) {\n\t\tscanf(\"%d\",&x);\n\t\tfor (int i = 1 ; i <= x ; ++ i)\n\t\t\tscanf(\"%d\",h + i);\n\t\tfor (int i = 1 ; i <= x ; ++ i)\n\t\t\th[i] = pos[h[i]];\n\t\tbuild(x);\n\t\tredfs(1);\n\t\tprintf(\"%lld\\n\",ans % MOD);\n\t\tans = 0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1615210004,
        "uid": 163516,
        "name": "Strelitzia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7409 \u3010SvT\u3011"
    },
    {
        "content": "\u540e\u7f00\u6811\u4e0a\u865a\u6811\u677f\u5b50\u9898\u3002\n\n\u8bbe\u540e\u7f00\u6811\u4e0a\u6839\u5230\u6bcf\u4e2a\u8282\u70b9 $u$ \u5f62\u6210\u7684\u5b57\u7b26\u4e32\u4e3a $s_u$\uff0c\u5219\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u5bf9\u5e94\u4e00\u4e2a\u540e\u7f00\uff0c\u90a3\u4e48\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9 $u,v$\uff0c\u540e\u7f00 $s_u,s_v$ \u7684 lcp \u5373\u4e3a $s_{\\text{lca}(u,v)}$\u3002\u90a3\u4e48\u7b54\u6848\u5373\u4e3a\u7ed9\u5b9a\u70b9\u4e24\u4e24 lca \u7684\u6df1\u5ea6\u548c\u3002\u7531\u865a\u6811\u7684\u6027\u8d28\u53ef\u77e5\u4efb\u610f\u4e24\u70b9\u7684 lca \u90fd\u5728\u865a\u6811\u4e0a\uff0c\u90a3\u4e48\u53ef\u4ee5\u5efa\u51fa\u865a\u6811\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u4f1a\u6210\u4e3a\u591a\u5c11\u6b21 lca \u5373\u53ef\u3002\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int S=5e5+2,N=1e6+2;\nint c[N][27],dep[N],f[N],t[N],zd[N],lj[N],nxt[N],fir[N],len[N],siz[N],fa[N],s[S];\nint top[N],hc[N],dfn[N],dy[N],st[N],a[N];\nint n,m,q,i,j,x,ds=1,point=1,ad,r,edge,remain,bs,fbs,cc,tp,ance;\nll ans;\ninline void read(int &x)\n{\n    cc=getchar();\n    while ((cc<48)||(cc>57)) cc=getchar();\n    x=cc^48;cc=getchar();\n    while ((cc>=48)&&(cc<=57))\n    {\n        x=x*10+(cc^48);\n        cc=getchar();\n    }\n}\ninline void xadd(int x,int y)\n{\n    lj[++bs]=y;\n    nxt[bs]=fir[x];\n    fir[x]=bs;\n}\ninline void add(int x,int y)\n{\n    lj[++fbs]=y;\n    nxt[fbs]=fir[x];\n    fir[x]=fbs;\n}\ninline void add(int x,int y,int z)\n{\n    lj[++fbs]=y;\n    len[bs]=z;\n    nxt[fbs]=fir[x];\n    fir[x]=bs;\n}\ninline void add(int a,int b,int cc,int d)\n{\n    c[a][s[cc]]=++bs;\n    f[bs]=cc;t[bs]=d;\n    zd[bs]=b;\n}\nvoid dfs1(int x)\n{\n    siz[x]=1;\n    if (!fir[x]) {dy[n-dep[x]+1]=x;return;}\n    int i;\n    for (i=fir[x];i;i=nxt[i])\n    {\n        dep[lj[i]]=dep[f[lj[i]]=x]+len[i];\n        dfs1(lj[i]);\n        siz[x]+=siz[lj[i]];\n        if (siz[lj[i]]>siz[hc[x]]) hc[x]=lj[i];\n    }\n}\nvoid dfs2(int x)\n{\n    dfn[x]=++bs;\n    if (hc[x])\n    {\n        top[hc[x]]=top[x];\n        dfs2(hc[x]);\n        int i;\n        for (i=fir[x];i;i=nxt[i]) if (lj[i]!=hc[x]) dfs2(top[lj[i]]=lj[i]);\n    }\n}\nbool cmp(int x,int y)\n{\n    return dfn[x]<dfn[y];\n}\ninline int lca(register int x,register int y)\n{\n    while (top[x]!=top[y]) if (dep[top[x]]<dep[top[y]]) y=f[top[y]]; else x=f[top[x]];\n    if (dep[x]<dep[y]) return x; return y;\n}\ninline void ins(int x)\n{\n    if (!tp) {st[tp=1]=x;return;}\n    ance=lca(st[tp],x);\n    while ((tp>1)&&(dep[st[tp-1]]>dep[ance]))\n    {\n        xadd(st[tp-1],st[tp]);\n        --tp;\n    }\n    if (dep[st[tp]]>dep[ance]) xadd(ance,st[tp--]);\n    if ((!tp)||(st[tp]!=ance)) st[++tp]=ance;\n    st[++tp]=x;\n}\nvoid dfs3(int x)\n{\n    int i;\n    for (i=fir[x];i;i=nxt[i])\n    {\n        dfs3(lj[i]);ans+=(ll)siz[x]*siz[lj[i]]*dep[x];\n        siz[x]+=siz[lj[i]];\n    }\n}\nvoid dfs4(int x)\n{\n    int i;\n    for (i=fir[x];i;i=nxt[i]) dfs4(lj[i]);\n    siz[x]=fir[x]=0;\n}\nint main()\n{\n    read(n);read(q);\n    cc=getchar();\n    while ((cc<'a')||(cc>'z')) cc=getchar();\n    s[1]=cc-97;\n    for (i=2;i<=n;i++) s[i]=getchar()-97;fa[1]=1;\n    s[++n]=26;\n    for (i=1;i<=n;i++)\n    {\n        ad=0;++remain;\n        while (remain)\n        {\n            if (r==0) edge=i;\n            if ((j=c[point][s[edge]])==0)\n            {\n                fa[ad]=point;\n                fa[++ds]=1;\n                add(ad=point,ds,edge,n);\n                add(point,s[edge]);\n            }\n            else\n            {\n                if ((t[j]!=n)&&(t[j]-f[j]+1<=r))\n                {\n                    r-=t[j]-f[j]+1;\n                    edge+=t[j]-f[j]+1;\n                    point=zd[j];\n                    continue;\n                }\n                if (s[i]==s[f[j]+r])\n                {\n                    ++r;fa[ad]=point;break;\n                }\n                fa[fa[ad]=++ds]=1;add(ad=ds,zd[j],f[j]+r,t[j]);\n                add(ds,s[f[j]+r]);zd[j]=ds;t[j]=f[j]+r-1;\n                add(ds,s[i]);fa[++ds]=1;add(ds-1,ds,i,n);\n            }\n            --remain;\n            if ((r)&&(point==1))\n            {\n                --r;\n                edge=i-remain+1;\n            } else point=fa[point];\n        }\n    }//ukk\u540e\u7f00\u6811\uff0csam\u7684\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u677f\u5b50\u6765\u5efa\n    for (i=1;i<=ds;i++) for (j=fir[i];j;j=nxt[j])\n    {\n        x=c[i][lj[j]];\n        lj[j]=zd[x];\n        len[j]=t[x]-f[x]+1;\n    }\n    memset(f+1,0,bs<<2);bs=0;\n    dfs1(1);dfs2(top[1]=1);\n    memset(siz+1,0,ds<<2);\n    memset(fir+1,0,ds<<2);bs=0;\n    while (q--)\n    {\n        read(m);ans=bs=0;\n        for (i=1;i<=m;i++)\n        {\n            read(a[i]);siz[a[i]=dy[a[i]]]=1;\n        }\n        sort(a+1,a+m+1,cmp);if (a[1]!=1) ins(1);\n        for (i=1;i<=m;i++) if ((i==1)||(a[i]!=a[i-1])) ins(a[i]);\n        while (--tp) xadd(st[tp],st[tp+1]);\n        dfs3(1);dfs4(1);printf(\"%lld\\n\",ans);\n    }\n}\n```",
        "postTime": 1614681737,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7409 \u3010SvT\u3011"
    },
    {
        "content": "## \u66b4\u529b SA+\u7b1b\u5361\u5c14\u6811+\u865a\u6811\n\n\u8fd9\u4e2a\u540e\u7f00 lcp \u53ef\u4ee5\u8f6c\u6210 height \u4e0a RMQ \u662f\u4f17\u6240\u5468\u77e5\u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u8981\u6c42\u8fd9\u4e2a\u5f0f\u5b50\n\n$$\\sum_{i=1}^q \\sum_{j=i+1}^q \\min_{k=p_i+1}^{p_j} height_k$$\n\n\u8fd9\u597d\u50cf\u4e0d\u662f\u5f88\u597d\u641e\u3002\u3002\u533a\u95f4 min \u7684\u8bdd\uff0c\u5c31\u79d2\u51fa\u4e00\u4e2a\u7b1b\u5361\u5c14\u6811\u3002\n\n\u4e5f\u5c31\u662f\u8fd9\u4e2a\uff1a\n\n$$\\sum_{i=1}^q \\sum_{j=i+1}^q val_{lca(p_i+1,p_j)}$$\n\n\u90fd lca \u4e86\uff0c\u90a3\u5c31\u53ef\u4ee5\u53cd\u5411\u6c42\u6bcf\u4e2a\u8282\u70b9\u7684\u8d21\u732e\u4e86\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u662f\u5de6\u5b50\u6811\u548c\u81ea\u5df1\u7684 $p_i+1$ \u7684\u4e2a\u6570\u4e58\u4e0a\u53f3\u5b50\u6811\u548c\u81ea\u5df1\u7684 $p_j$ \u7684\u4e2a\u6570\u3002\n\n\u5c31\u662f\u8fd9\u4e2a\n\n$$\\sum val_i\\times (lsum_{i_ltree}+lsum_i)\\times (rsum_{i_rtree}+rsum_i)$$\n\n\u4e0d\u8fc7\u4ed6\u8fd8\u591a\u6b21\u8be2\u95ee\uff0c\u90a3\u5c31\u5efa\u4e2a\u865a\u6811\u3002\n\n\u505a\u5b8c\u4e86\uff01\n\n\u7ec6\u8282\uff1a\n\n1. \u7b1b\u5361\u5c14\u6811\u4e0a lca \u600e\u4e48\u641e\uff1f\u6811\u5256\uff1f\u4e00\u4e2a RMQ \u641e\u5b9a\u3002\u3002\u6240\u4ee5\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u663e\u5f0f\u7684\u5efa\u51fa\u7b1b\u5361\u5c14\u6811\u3002\u4e8b\u5b9e\u4e0a\uff0c\u53ea\u6709\u4ed6\u7684 dfn \u5e8f\u8981\u7528\u3002\n\n2. \u865a\u6811\u4e0a\u4f60\u786e\u5b9a\u6700\u591a\u6709\u4e24\u4e2a\u513f\u5b50\uff1f\u770b\u8fd9\u91cc https://www.luogu.com.cn/blog/2-6-5-3-5/wei-shi-me-yi-ke-k-cha-shu-shang-yi-ren-yi-dian-ji-jian-li-xu-shu-xu-post\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst ll mod=23333333333333333;\nchar s[500005];\nint read_in[3000005];\nint st[6000005];\nint n;\nstruct SA\n{\n\t#define f(i,a,b) for(i=a;i<=b;i++)\n\t#define e(i,a,b) for(i=a;i>=b;i--)\n\tint sa[500005],height[500005];\n\tint cnt[500005],rk[500005];\n\tvoid S_sort(char s[],int l,int m=122)\n\t{\n\t\tint i,k,ct;\n\t\tf(i,1,l) cnt[height[i]=s[i]]++;\n\t\tf(i,2,m) cnt[i]+=cnt[i-1];\n\t\te(i,l,1) sa[cnt[height[i]]--]=i;\n\t\tfor(k=1;k<=l;k*=2)\n\t\t{\n\t\t\tct=0;\n\t\t\tf(i,l-k+1,l) rk[++ct]=i;\n\t\t\tf(i,1,l)\n\t\t\t\tif(sa[i]>k)\n\t\t\t\t\trk[++ct]=sa[i]-k;\n\t\t\tf(i,1,m) cnt[i]=0;\n\t\t\tf(i,1,l) cnt[height[i]]++;\n\t\t\tf(i,2,m) cnt[i]+=cnt[i-1];\n\t\t\te(i,l,1) sa[cnt[height[rk[i]]]--]=rk[i],rk[i]=0;\n\t\t\tswap(height,rk);\n\t\t\theight[sa[1]]=m=1;\n\t\t\tf(i,2,l)\n\t\t\t\theight[sa[i]]=m=m+!(rk[sa[i]]==rk[sa[i-1]]&&rk[sa[i]+k]==rk[sa[i-1]+k]);\n\t\t\tif(m==l) return;\t\n\t\t}\n\t}\n\tvoid build(char s[],int l)\n\t{\n\t\tS_sort(s,l);\t\n\t\tint i,j,k;\n\t\tfor(i=1;i<=l;i++)\n\t\t\trk[sa[i]]=i;\n\t\tfor(i=1,k=0;i<=l;i++)\n\t\t{\n\t\t\tif(rk[i]==1) k=0;\n\t\t\telse\n\t\t\t{\n\t\t\t\tk-=k>0;\n\t\t\t\tint j=sa[rk[i]-1];\n\t\t\t\twhile(i+k<=l&&j+k<=l&&s[i+k]==s[j+k])\n\t\t\t\t\tk++;\n\t\t\t}\n\t\t\theight[rk[i]]=k;\n\t\t}\n\t}\n}a;\nint st_min[21][500005];\nint v[500005];\nint lsum[500005];\nint rsum[500005];\nint dfn[500005];\nint hu[500005][2];\nint root,dfnn;\nbool cmp(int x,int y)\n{\n\treturn dfn[x]<dfn[y];\n}\nint f_min(int x,int y)\n{\n\tif(v[x]==v[y]) return x<y?x:y;\n\treturn v[x]<v[y]?x:y;\n}\nint asklca(int l,int r)\n{\n\tif(l>r) swap(l,r);\n\tint k=log2(r-l+1);\n\treturn f_min(st_min[k][l],st_min[k][r-(1<<k)+1]);\n}\nvoid build_Cartesian_Tree(int L,int R)\n{\n\tif(L>R) return;\n\tint mid=asklca(L,R);\n\tdfn[mid]=++dfnn;\n\tbuild_Cartesian_Tree(L,mid-1);\n\tbuild_Cartesian_Tree(mid+1,R);\n}\nvoid build(int a[],int n)\n{\n\tint i,j;\n\tv[1]=-1e9;\n\tfor(i=2;i<=n;i++)\n\t\tv[i]=a[i];\n\tfor(i=1;i<=n;i++)\n\t\tst_min[0][i]=i;\n\tfor(i=1;i<=20;i++)\n\t\tfor(j=1;j+(1<<i)-1<=n;j++)\n\t\t\tst_min[i][j]=f_min(st_min[i-1][j],st_min[i-1][j+(1<<i-1)]);\n\tbuild_Cartesian_Tree(2,n);\t\n\troot=asklca(2,n);\n}\nll dfs(int d)\n{\n\tif(!d) return 0;\n\tll s=dfs(hu[d][0])+dfs(hu[d][1]);\n\ts+=1ll*(lsum[hu[d][0]]+lsum[d])*(rsum[hu[d][1]]+rsum[d])*v[d];\n\tlsum[d]+=lsum[hu[d][0]]+lsum[hu[d][1]],\n\trsum[d]+=rsum[hu[d][0]]+rsum[hu[d][1]];\n\treturn s;\n}\nll ask(int k)\n{\n\tint i,j,cnt,lca;\n\tcnt=0;\n\tfor(i=1;i<=k;i++)\n\t{\n\t\tread_in[i]=a.rk[read_in[i]];\n\t\tif(read_in[i]+1<=n)\n\t\t\tlsum[st[++cnt]=read_in[i]+1]=1;\n\t\tif(read_in[i]>=2)\n\t\t\trsum[st[++cnt]=read_in[i]]=1;\n\t}\t\n\tk=cnt;\n\tsort(st+1,st+1+k,cmp);\n\tfor(i=2;i<=k;i++)\n\t\tst[++cnt]=asklca(st[i-1],st[i]);\n\tst[++cnt]=root;\n\tsort(st+1,st+1+cnt,cmp);\n\tcnt=unique(st+1,st+1+cnt)-st-1;\n\tfor(i=2;i<=cnt;i++)\n\t{\n\t\tlca=asklca(st[i-1],st[i]);\n\t\thu[lca][st[i]>lca]=st[i];\n\t}\n\tll ret=dfs(root)%mod;\t\n\tfor(i=1;i<=cnt;i++)\n\t\thu[st[i]][0]=hu[st[i]][1]=lsum[st[i]]=rsum[st[i]]=0;\n\treturn \tret;\n}\nint main()\n{\n\tint q,k,i;\n\tscanf(\"%d%d%s\",&n,&q,s+1);\n\ta.build(s,n);\n\tbuild(a.height,n);\n\twhile(q--)\n\t{\n\t\tscanf(\"%d\",&k);\n\t\tfor(i=1;i<=k;i++)\n\t\t\tscanf(\"%d\",&read_in[i]);\n\t\tprintf(\"%lld\\n\",ask(k));\n\t}\n}\t\n```\n",
        "postTime": 1625532759,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7409 SvT"
    },
    {
        "content": "Orz \u5de8\u4f6c\u7684 SAM \u548c\u540e\u7f00\u6811\u505a\u6cd5\n\n\u6765\u4e00\u4e2a\u6734\u7d20\u7684 SA +\u5355\u8c03\u6808\n\n\u770b\u5230\u8fd9\u9898\u4e0d\u96be\u60f3\u5230 [P4248 [AHOI2013]\u5dee\u5f02](https://www.luogu.com.cn/problem/P4248)\uff0c\u53d1\u73b0\u4e24\u9898\u7684\u533a\u522b\u5728\u4e8e\u672c\u9898\u662f\u7ed9\u5b9a\u7684\u70b9\u4e24\u4e24\u7ec4\u5408\uff0c\u800c\u5dee\u5f02\u662f\u5168\u90e8 $n$ \u4e2a\u70b9\uff0c\u4f46\u7c7b\u4f3c\u7684\u5730\u65b9\u5728\u4e8e **\u4e24\u70b9\u7684\u8d21\u732e\uff08lcp\uff09\u90fd\u662f\u533a\u95f4 $height$ \u7684\u6700\u5c0f\u503c**\u3002  \n\u8003\u8651\u5dee\u5f02\u4e2d\u5355\u8c03\u6808\u6c42\u7b54\u6848\u662f\u5229\u7528 $height$\uff08\u8868\u793a $sa$ \u4e2d\u76f8\u90bb\u4e24\u540e\u7f00\u7684 lcp\uff09\u5c06 lcp \u8f6c\u6362\u6210 RMQ\uff0c\u82e5\u80fd\u6c42\u51fa\u7c7b\u4f3c\u7684 $h'$ \u672c\u9898\u5c31\u80fd\u8f6c\u5316\u6210\u5dee\u5f02\u3002\u800c $height$ \u672c\u8d28\u4e5f\u662f\u957f\u5ea6\u4e3a $1$ \u7684\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u4e0e $h'$ \u533a\u522b\u4ec5\u662f\u533a\u95f4\u957f\u5ea6\u3002  \n\u52a0\u4e0a $\\sum t\\le3\\times 10^6$ \u8fd9\u79cd\u6570\u636e\u8303\u56f4\u4e0e\u865a\u6811\u7c7b\u4f3c\uff0c\u60f3\u5230\u8fdb\u884c\u7c7b\u4f3c\u865a\u6811\u7684\u8f6c\u5316\uff0c\u5373\u5c06\u7ed9\u5b9a\u7684\u70b9\u6309 $rk$ \u6392\u5e8f\u53bb\u91cd\u540e\u6c42\u76f8\u90bb\u4e24\u70b9\u7684 $h'[i]=lcp(s[a[i-1]:n],s[a[i]:n])$\uff08ST \u8868\uff09\uff0c\u663e\u7136 $h'$ \u4e0e\u5dee\u5f02\u4e2d\u7684 $height$ \u5177\u6709\u76f8\u540c\u7684\u6027\u8d28\uff0c\u5355\u8c03\u6808\u6c42\u6240\u6709\u5b50\u533a\u95f4\u6700\u5c0f\u503c\u4e4b\u548c\u5373\u53ef\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+\\sum t\\log t)$\u3002\n\ncode\uff08\u5904\u7406\u6bcf\u6b21\u8be2\u95ee\u7684\u90e8\u5206\uff09\n```cpp\nvoid solve() {\n\tread(na);\n\tFor(i,1,na) read(a[i]);\n\tsort(a+1,a+na+1,[](const int &x,const int &y){return rk[x]<rk[y];});\n\tna = unique(a+1,a+na+1)-a-1;\n\trFor(i,na,2) a[i] = lcp(a[i-1],a[i]); // \u6c42suf(a[i-1]),suf(a[i])\u7684lcp\n\ta[1] = 0, stk[++tp] = 1; // \u4e0b\u540c\u300a\u5dee\u5f02\u300b\n\tFor(i,2,na) {\n\t\twhile( tp && a[i] < a[stk[tp]] ) ri[stk[tp--]] = i-1;\n\t\tle[i] = stk[tp]+1, stk[++tp] = i;\n\t}\n\twhile( tp ) ri[stk[tp--]] = na;\n\tLL ans = 0;\n\tFor(i,2,na) ans = (ans + a[i]*(i-le[i]+1ll)%mod*(ri[i]-i+1)) %mod;\n\tprintf(\"%lld\\n\",ans);\n}\n```",
        "postTime": 1624585436,
        "uid": 236866,
        "name": "401rk8",
        "ccfLevel": 9,
        "title": "P7409 SvT \u9898\u89e3"
    }
]