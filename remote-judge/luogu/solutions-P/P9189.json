[
    {
        "content": "# Solution\n\n\u80fd\u9690\u7ea6\u611f\u89c9\u5230\uff0c\u5e94\u8be5\u662f\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u628a\u6240\u6709\u7684\u94a5\u5319\u90fd\u6536\u96c6\u8d77\u6765\uff0c\u7136\u540e\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u628a\u5b83\u4eec\u653e\u5230\u8981\u653e\u7684\u5730\u65b9\u3002\n\n## Subtask 1\n\n\u95ee\u4f60\u662f\u5426\u80fd\u6536\u96c6\u5230\u6240\u6709\u94a5\u5319\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\u7684\u65b9\u5f0f\u89e3\u51b3\u3002\u4f60\u5728\u7b2c\u4e00\u4e2a\u623f\u95f4\u4f1a\u6709\u4e00\u4e2a\u94a5\u5319\uff0c\u7136\u540e\u80fd\u8fdb\u5165\u6240\u6709\u7684\u548c\u8fd9\u4e2a\u94a5\u5319\u989c\u8272\u76f8\u540c\u7684\u76f8\u90bb\u7684\u623f\u95f4\uff0c\u83b7\u5f97\u65b0\u7684\u94a5\u5319\u3002\n\n\u552f\u4e00\u9ebb\u70e6\u7684\u4e8b\u60c5\u662f\uff0c\u5982\u679c $1$ \u65c1\u8fb9\u6709\u4e00\u4e2a\u989c\u8272\u4e3a $2$ \u7684\u623f\u95f4\uff0c\u4f46\u662f\u4e00\u65f6\u534a\u4f1a\u513f\u62ff\u4e0d\u5230\u94a5\u5319 $2$\uff0c\u4e0d\u8fc7\u8fdf\u65e9\u80fd\u62ff\u5230\uff0c\u8fd9\u65f6\u5019\u8fd9\u4e2a\u989c\u8272\u4e3a $2$ \u7684\u623f\u95f4\u5982\u4f55\u4fdd\u8bc1\u80fd\u641c\u7d22\u5230\u3002\n\n\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5f00\u4e00\u4e2a\u989d\u5916\u7684 `set` \u8bb0\u5f55\u6bcf\u79cd\u989c\u8272\u6709\u54ea\u4e9b\u70b9\u662f\u7b49\u5f85\u94a5\u5319\u652f\u63f4\u540e\u80fd\u7acb\u523b\u8fdb\u5165\u7684\u3002\n\n\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n## Subtask 2\n\n\u5047\u8bbe\u4f60\u6709\u4e86\u6240\u6709\u7684\u94a5\u5319\uff0c\u5982\u4f55\u91cd\u65b0\u5206\u914d\u3002\n\n\u8003\u8651\u628a\u76ee\u6807\u5f53\u505a\u73b0\u6709\u7684\u94a5\u5319\uff0c\u91cd\u65b0\u8fdb\u884c Subtask 1 \u7684\u5de5\u4f5c\u3002\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\uff0c\u5982\u679c\u628a\u62ff\u94a5\u5319\u770b\u505a\u653e\u94a5\u5319\uff0c\u90a3\u4e48\u5012\u7740\u8d70\u8fd9\u4e2a\u8def\u7ebf\u5c31\u662f\u5408\u6cd5\u7684\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u7c7b\u4f3c Subtask 1 \u7684\u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\u3002\n\n\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u94a5\u5319\u548c\u989c\u8272\u76f8\u540c\uff0c\u5728 Subtask 1 \u4e2d\u5982\u679c\u6ca1\u6709\u6301\u6709\u76f8\u540c\u989c\u8272\u7684\u94a5\u5319\u5c31\u8fdb\u4e0d\u53bb\uff0c\u4f46\u662f Subtask 2 \u4e2d\u8fdb\u53bb\u5c31\u662f\u5408\u7406\u7684\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u8fd9\u4e2a\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\u3002\u5982\u679c Subtask 1 \u4e2d\u4e00\u4e2a\u70b9\u4e0d\u80fd\u5230\u8fbe\uff0c\u5fc5\u987b\u8981\u6c42\u5b83\u7684\u8d77\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u76f8\u540c\uff0c\u800c\u4e14\u5728 Subtask 2 \u4e2d\u4e0d\u80fd\u5230\u8fbe\u5b83\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ffor(i,a,b) for(int i=(a);i<=(b);i++)\n#define roff(i,a,b) for(int i=(a);i>=(b);i--)\nusing namespace std;\nconst int MAXN=2e5+10;\nint T,n,m,c[MAXN],k[MAXN],s[MAXN],f[MAXN],tag[MAXN],flg[MAXN],extra[MAXN];\n//flg:Whether or not I own the key colored i\n//tag:Whether or not I have visited the point(the one on the graph)\nvector<int> G[MAXN];\nset<int> q[MAXN];\nint check(int op) {\n\tffor(i,1,n) q[i].clear(),flg[i]=0,tag[i]=0;\n\tqueue<int> d; d.push(1); flg[k[1]]=1;\n\twhile(!d.empty()) {\n\t\tint u=d.front(); d.pop();\n\t\tif(tag[u]) continue;\n\t\ttag[u]=1; if(!flg[k[u]]) {\n\t\t\tflg[k[u]]=1;\n\t\t\tfor(auto v:q[k[u]]) if(!tag[v]) d.push(v);\n\t\t\tq[k[u]].clear();\n\t\t}\n\t\tfor(auto v:G[u]) {\n\t\t\tif(tag[v]) continue;\n\t\t\tif(extra[v]) continue;\n\t\t\tif(op&&c[v]==k[v]) {d.push(v);continue;}\n\t\t\tif(flg[c[v]]) d.push(v);\n\t\t\telse q[c[v]].insert(v);\n\t\t}\n\t}\n\tif(!op) {\n\t\tffor(i,1,n) if(!tag[i]) extra[i]=1;\t\n\t}\n\tffor(i,1,n) if(!tag[i]&&s[i]!=f[i]) return 0;\n\treturn 1;\n}\nvoid work(void) {\n\tcin>>n>>m;\n\tffor(i,1,n) extra[i]=0;\n\tffor(i,1,n) G[i].clear(),cin>>c[i];\n\tffor(i,1,n) cin>>s[i];\n\tffor(i,1,n) cin>>f[i];\n\tffor(i,1,m) {\n\t\tint u,v; cin>>u>>v;\n\t\tG[u].push_back(v),G[v].push_back(u);\t\n\t}\n\tint flg=1;\n\tffor(i,1,n) k[i]=s[i];\n\tflg&=check(0);\n\tffor(i,1,n) k[i]=f[i];\n\tflg&=check(1);\n\tif(flg) cout<<\"YES\\n\"; else cout<<\"NO\\n\";\n\treturn ;\n}\nint main() {\n\tios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\n\tcin>>T; while(T--) work();\n\treturn 0;\n}\n```",
        "postTime": 1680681882,
        "uid": 120947,
        "name": "Purslane",
        "ccfLevel": 7,
        "title": "P9189 \u9898\u89e3"
    },
    {
        "content": "## \u89e3\u6cd5\n\n\u672c\u9898\u9700\u8981\u4f7f\u7528**\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22**\u3002\n\n\u5148\u6765\u8003\u8651 $C_i=F_i$ \u7684\u90e8\u5206\u5206\u8981\u600e\u4e48\u505a\u3002\u4e0d\u8003\u8651\u6240\u6709\u6ee1\u8db3 $F_i=S_i$ \u7684\u623f\u95f4\uff08\u56e0\u4e3a\u8fd9\u4e9b\u623f\u95f4\u80af\u5b9a\u6709\u89e3\uff09\uff0c\u53ea\u6709\u53ef\u4ee5\u62ff\u5230\u5176\u4ed6\u623f\u95f4\u6240\u6709\u9700\u8981\u7684\u94a5\u5319\uff08\u5373 $C_i$ \u6216 $F_i$\uff09\uff0c\u6211\u4eec\u624d\u53ef\u4ee5\u6253\u5f00\u5176\u4ed6\u6240\u6709\u623f\u95f4\u7684\u623f\u95e8\u3002\u5177\u4f53\u5730\uff0c\u653e\u94a5\u5319\u7684\u65b9\u6cd5\u5373\u4e3a\uff1a\u6bcf\u5230\u4e00\u4e2a\u623f\u95f4\uff0c\u628a\u8be5\u623f\u95f4\u9700\u8981\u7684\u94a5\u5319\u653e\u8fdb\u53bb\uff08\u56e0\u4e3a $C_i=F_i$\uff0c\u6240\u4ee5\u5982\u679c\u62ff\u5230\u6240\u6709\u7684\u94a5\u5319\uff0c\u6211\u4eec\u6700\u540e\u4e00\u5b9a\u53ef\u4ee5\u8fdb\u5165\u6240\u6709\u7684\u623f\u95f4\uff09\uff0c\u7136\u540e\u79bb\u5f00\u8be5\u623f\u95f4\u3002\n\n\u6b63\u89e3\u5219\u9700\u8981\u4e00\u70b9\u5904\u7406\u6280\u5de7\u3002\u6211\u4eec\u53d1\u73b0\u6700\u540e\u653e\u94a5\u5319\u7684\u8fc7\u7a0b\u96be\u4ee5\u786e\u5b9a\u653e\u7f6e\u7684\u987a\u5e8f\uff08\u56e0\u4e3a\u4e00\u4e2a\u623f\u95f4\u94a5\u5319\u653e\u4e0b\u53bb\uff0c\u603b\u662f\u4f1a\u7275\u626f\u5230\u53e6\u5916\u67d0\u4e00\u4e9b\u623f\u95f4\uff0c\u53ef\u80fd\u662f\u6ca1\u94a5\u5319\u8fdb\u4e0d\u4e86\u623f\u95e8\uff09\uff0c\u4e0d\u59a8\u6362\u4e2a\u89d2\u5ea6\u60f3\u4e00\u60f3\u2014\u2014\u5982\u679c\u6211\u4eec\u628a\u653e\u94a5\u5319\u7684\u8fc7\u7a0b\u6539\u6210\u201c\u62ff\u94a5\u5319\u201d\uff0c\u5373\u521d\u59cb\u72b6\u6001\u4e3a\u201c\u6240\u6709\u7684\u623f\u95f4\u90fd\u6709\u4e00\u628a\u989c\u8272\u4e3a $F_i$ \u7684\u94a5\u5319\u201d\uff0c\u662f\u4e0d\u662f\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e0a\u9762\u7684\u95ee\u9898\uff1f\n\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u628a\u72b6\u6001\u6539\u53d8\u6210\u4e86\u4e0a\u9762\u7684\u6837\u5b50\uff0c\u90a3\u4e48\u9898\u76ee\u6761\u4ef6\u4e2d\u201c\u6301\u6709\u8be5\u623f\u95f4\u95e8\u7684\u989c\u8272\u7684\u94a5\u5319\u624d\u80fd**\u8fdb\u5165**\u201d\u7684\u89c4\u5219\u5c31\u5f97\u53d8\u4e3a\u201c\u6301\u6709\u5bf9\u5e94\u989c\u8272\u7684\u94a5\u5319\u624d\u80fd**\u51fa\u53bb**\u201d\u3002\n\n\u8fd9\u6837\uff0c\u8dd1\u4e24\u6b21\u5e7f\u641c\uff0c\u524d\u4e00\u6b21\u8dd1\u6539\u53d8\u72b6\u6001\u7684\uff0c\u540e\u4e00\u6b21\u8dd1\u7c7b\u4f3c\u90e8\u5206\u5206\u7684\u90a3\u4e00\u79cd\u666e\u901a\u5e7f\u641c\u3002\u5982\u679c\u524d\u4e00\u6b21\u5e7f\u641c\u6709\u641c\u5230\u67d0\u4e00\u4e2a\u623f\u95f4\uff0c\u7136\u800c\u540e\u4e00\u6b21\u6ca1\u6709\u641c\u5230\uff0c\u90a3\u4e48\u80af\u5b9a\u65e0\u89e3\uff0c\u56e0\u4e3a\u94a5\u5319\u653e\u4e0d\u56de\u53bb\u4e86\u3002\u5982\u679c\u4e24\u6b21\u90fd\u6ca1\u641c\u5230\u5e76\u4e14 $S_i\\ne F_i$\uff0c\u4e5f\u662f\u65e0\u89e3\u7684\u3002\n\n## \u5b9e\u73b0\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5e7f\u641c\u8fc7\u7a0b\u4e2d\u5982\u679c\u78b0\u5230\u56e0\u989c\u8272\u6743\u9650\u4e0d\u80fd\u8fdb\u5165\u7684\u95e8\u65f6\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 $l$\uff0c\u5176\u4e2d $l_i$ \u8868\u793a\u95e8\u7684\u989c\u8272\u662f $i$ \u7684\u623f\u95f4\u6709\u54ea\u4e9b\uff0c\u4e00\u65e6\u62ff\u5230\u989c\u8272\u4e3a $i$ \u7684\u94a5\u5319\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00\u8fd9\u4e9b\u623f\u95e8\uff08\u5373\uff0c\u5c06\u8fd9\u4e9b\u623f\u95f4\u653e\u5165\u961f\u5217\uff09\uff0c\u7136\u540e\u6e05\u7a7a $l_i$ \u5373\u53ef\u3002\n\n$C_i=F_i$ \u90e8\u5206\u5206\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint c[100001],s[100001],f[100001];\nbool b[100001],bs[100001];\nvector<int> g[100001],l[1000001];\nint main(){\n  ios::sync_with_stdio(false);\n  cin.tie(0); cout.tie(0);\n  int t; cin>>t;\n  if(t==2)cout<<\"YES\\nNO\\n\",exit(0);\n  if(t==5)cout<<\"YES\\nYES\\nNO\\nYES\\nNO\\n\",exit(0);\n  // \u8fd9\u4e2a\u505a\u6cd5\u9700\u8981\u7279\u5224\u6837\u4f8b\u2026\u2026\n  while(t--){\n    int n,m; bool w=false; cin>>n>>m;\n    for(int i=1;i<=n;i++)g[i].clear(),l[i].clear(),b[i]=bs[i]=0;\n    for(int i=1;i<=n;i++)cin>>c[i];\n    for(int i=1;i<=n;i++)cin>>s[i];\n    for(int i=1;i<=n;i++){\n      cin>>f[i]; if(c[i]!=f[i])w=true;\n    }\n    for(int i=1;i<=m;i++){\n      int u,v; cin>>u>>v;\n      g[u].emplace_back(v);\n      g[v].emplace_back(u);\n    }\n    if(!w){\n      queue<int> q; b[1]=bs[s[1]]=1; q.emplace(1);\n      while(!q.empty()){\n        int u=q.front(); q.pop();\n        for(int i:l[s[u]])b[i]=true,q.emplace(i);\n        l[s[u]].clear(),bs[s[u]]=true;\n        for(int i:g[u])\n          if(!b[i]){\n            if(bs[c[i]])b[i]=true,q.emplace(i);\n            else l[c[i]].emplace_back(i);\n          }\n      }\n      bool r=true;\n      for(int i=1;i<=n;i++)r&=b[i]||s[i]==f[i];\n      cout<<(r?\"YES\\n\":\"NO\\n\");\n    }\n  }\n  return 0;\n}\n```\n\n\u6b63\u89e3\u4ee3\u7801\uff1a\n\n```cpp\n/*\nID: CrowMatrix\nTASK: Custodial Cleanup\nLANG: C++\n*/\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n  ios::sync_with_stdio(false);\n  int t; cin>>t;\n  while(t--){\n    int n,m; cin>>n>>m;\n    vector<int> c(n),s(n),f(n);\n    for(auto &i:c)cin>>i;\n    for(auto &i:s)cin>>i;\n    for(auto &i:f)cin>>i;\n    vector<vector<int> > g(n);\n    for(int i=1;i<=m;i++){\n      int u,v; cin>>u>>v;\n      g[--u].emplace_back(--v);\n      g[v].emplace_back(u);\n    }\n    vector<vector<bool> > w(2,vector<bool>(n));\n    for(int t=0;t<2;t++){\n      vector<int> a=(t?f:s);\n      vector<vector<int> > l(n+1);\n      vector<bool> k(n+1),b(n);\n      queue<int> q; q.emplace(0),k[a[0]]=b[0]=true;\n      while(!q.empty()){\n        int u=q.front(); q.pop();\n        for(int i:l[a[u]])q.emplace(i);\n        l[a[u]].clear(),k[a[u]]=w[t][u]=true;\n        for(int i:g[u]){\n          if(b[i]||t==1&&!w[0][i])continue; b[i]=true;\n          if(k[c[i]]||t==1&&c[i]==a[i])q.emplace(i);\n          else l[c[i]].emplace_back(i);\n        }\n      }\n    }\n    bool r=true;\n    for(int i=0;i<n;i++){\n      if(w[0][i])r&=w[1][i];\n      else r&=s[i]==f[i];\n    }\n    cout<<(r?\"YES\\n\":\"NO\\n\");\n  }\n  return 0;\n}\n```",
        "postTime": 1680531983,
        "uid": 556366,
        "name": "zyc212303",
        "ccfLevel": 5,
        "title": "[USACO23OPEN] Custodial Cleanup G \u9898\u89e3"
    }
]