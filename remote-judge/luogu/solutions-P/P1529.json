[
    {
        "content": "**\u672c\u4eba\u83dc\u9e21\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u4e0d\u597d\u8bf7\u89c1\u8c05**   \n**~~\u53cd\u6b63\u4e5f\u5feb\u8981\u9000\u5f79\u4e86~~**   \n\u5927\u4f6c\u7684\u9898\u89e3\u770b\u4e0d\u61c2\u5c31\u53ea\u597d\u81ea\u5df1\u5199\u4e86\u2026\u2026\n\n**\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e86\n**\n\n------------\n\u5148\u8bf4\u5b58\u56fe\u5427\uff0c~~\u5b58\u56fe\u5f53\u65f6\u6211\u4e00\u70b9\u7075\u611f\u6ca1\u6709~~\u770b\u4e86\u4e0b\u6570\u636e\uff0c\u90bb\u63a5\u77e9\u9635\u53ef\u4ee5\uff0c\u5c31\u76f4\u63a5\u90bb\u63a5\u77e9\u9635\u4e86\u3002\n\u81f3\u4e8ea~z\u548cA~Z\u7684\u5b58\u56fe\uff0c\u6211\u501f\u9274\u4e86\u4e00\u4e0b\u697c\u4e0a\u5927\u4f6corz\n\n\u201c\u8fd9\u9898\u628aZ\uff08\u8c37\u4ed3\uff09\u5f53\u8d77\u70b9\uff0c\u628a\u6709\u725b\u7684\u7267\u573a\u5f53\u7ec8\u70b9\u6c42\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\n\n\u6709\u4eba\u4f1a\u95ee\uff0c\u7267\u573a\u662f\u7528\u5b57\u6bcd\u8868\u793a\u7684\u554a\uff0c\u600e\u4e48\u8f6c\u6210\u6570\u5b57\u5462\uff1f\n\na~z -> 1~26\n\nA~Z -> 27~52\u201d\u2014\u2014\u2014\u2014\u51fa\u81ea\u5927\u4f6c ZimoCP \n\n\u5b58\u56fe\u5b8c\u4e86\u4ee5\u540e\uff0c\u5c31\u662f\u627e\u5355\u6e90\u6700\u77ed\u8def\u4e86\uff08\u8fd9\u91cc\u6211\u7528 _**Dijkstra \u7b97\u6cd5**_  \uff09\n\uff08\u5982\u679c\u8fd8\u4e0d\u77e5\u9053Dijkstra \u7b97\u6cd5\u7684\u670b\u53cb\u4eec\u53ef\u4ee5\u767e\u5ea6\u4e00\u4e0b\uff0c\u6bd4\u8f83\u7b80\u5355\uff09\n\n\u4eceZ\u70b9\u51fa\u53d1\uff0c\u5bfb\u627e\u79bbZ\u70b9\u6700\u8fd1\u7684\u5927\u5199\u5b57\u6bcd\u7684\u7f16\u53f7~~\uff08\u4e4b\u524d\u6ca1\u6ce8\u610f\u770b\u9898\u7136\u540e\u5c31\u4e00\u76f4\u2026\u2026\uff09~~\n\n\u8fd8\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u5c31\u662f\u8fd9\u9053\u9898\u8fd8\u91cd\u590d\u8f93\u5165\u4e24\u4e2a\u70b9\u4e4b\u95f4\u4e0d\u540c\u957f\u5ea6\u7684\u8fb9\uff0c\u6ce8\u610f\u8981\u7528\u8f83\u5c0f\u7684\u8fb9\u53bb\u66ff\u6362\u8f83\u5927\u7684\u8fb9\u5c31\u597d\u4e86\u3002\u3002\n~~\u4e4b\u524d\u6ca1\u6ce8\u610f\u770b\u7136\u540e\u5c45\u713689\u5206~~\n\n\u4e0b\u9762\u8d34AC\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define MAXN 99999999\nusing namespace std;\nint dis[100],tu[100][100];//\u4ecez\u51fa\u53d1\u7684dis\u503c\u548c\u90bb\u63a5\u77e9\u9635\nint p,vis[100];//\u9053\u8def\u6570\u76ee\u3001\u8282\u70b9\u6807\u8bb0\nchar r;\nvoid di(int x,int y,int w)//\u5b58\u56fe\n{\n\t\n    if(tu[x][y]==0)//\u8bfb\u5165\u8fb9\n    \n\t{\n\t\ttu[x][y]=w;\n\t\ttu[y][x]=w;\n        \n\t}\n\tif(w<tu[x][y])//\u8bfb\u5165\u7684\u7b2c\u4e8c\u6761\u8fb9\u6bd4\u7b2c\u4e00\u6761\u8fb9\u7684\u6743\u503c\u5c0f\uff0c\u5c31\u66ff\u6362\n\t{\n\t\ttu[x][y]=w; \n\t\ttu[y][x]=w;\n\t}\n} \nvoid dj()//\u8fea\u6770\u65af\u7279\u62c9\u88f8\u4ee3\u7801\uff08\u597d\u50cf\u662f\u554a\u54c8\u7b97\u6cd5\u4e0a\u9762\u7684\uff1f\uff1f\uff09\n{\n\n\tint u,min;\n    \n\tfor(int i=1;i<=51;i++)\n\t{\n\t\tmin=MAXN;\n\t\tfor(int j=1;j<=51;j++)\n\t\t{\n\t\t\tif(vis[j]==0&&dis[j]<min)\n\t\t\t{\n\t\t\t\tmin=dis[j];\n\t\t\t\tu=j;\n\t\t\t}\n\t\t}\n\t\tvis[u]=1;\n\t\tfor(int v=1;v<=51;v++)\n\t\t{\n\t\t\tif(dis[v]>dis[u]+tu[u][v]&&vis[v]==0&&tu[u][v]<MAXN)\n\t\t\tdis[v]=dis[u]+tu[u][v];\n\t\t}\n\t}\n}\nint main()\n{\n\n\tscanf(\"%d\",&p);\n    \n\tfor(int i=1;i<=52;i++)\n\t\tfor(int j=1;j<=51;j++)\n\t\t\ttu[i][j]=MAXN;\n\tvis[52]=1;//\u56e0\u4e3a'Z'\u5b58\u56fe\u7684\u65f6\u5019\u662f52\uff0c\u6240\u4ee5\u6253\u4e0a\u6807\u8bb0\n\tfor(int i=1;i<=p;i++)//\u501f\u9274\u697c\u4e0a\u7684\u8bfb\u5165\n\t{\n\t\tchar x,y;//\u4e24\u4e2a\u70b9\n\t\tint c;//\u6743\u503c\n\t\tint xx,yy;\n\t\tscanf(\"\\n%c %c %d\",&x,&y,&c);\n\t\tif(x>='a'&&x<='z') xx=x-'a'+1;\n\t\telse xx=x-'A'+27;\n\t\tif(y>='a'&&y<='z') yy=y-'a'+1;\n\t\telse yy=y-'A'+27;\n\t\tdi(xx,yy,c);\n\t}\n\tfor(int i=1;i<=51;i++)\n\tdis[i]=tu[52][i];\n\tdj();int hh=MAXN,point;\n\tfor(int i=1;i<=51;i++)//\u5224\u65ad\u5927\u5199\u5e76\u8f93\u51fa\n\t{\n\t\tif(dis[i]<hh&&i>=27)\n\t\t{\n\t\t\thh=dis[i];\n\t\t\tpoint =i;\n\t\t}\n\t}\n\tr=point-27+'A';\n\tprintf(\"%c %d\\n\",r,hh);\n} \n```\n\n   ",
        "postTime": 1535201771,
        "uid": 86284,
        "name": "Gamin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u770b\u89c1\u5927\u5bb6\u7528dijkstra,spfa\uff0c\u4e0d\u7981\u611f\u6168\uff0c\u8fd9\u5e74\u5934\u90fd\u4e0d\u770b\u6570\u636e\u8303\u56f4\u5417\uff1f\u6700\u591a52\u4e2a\u70b9\n\nflyod\u7a33\u8fc7\u5440\uff0c\u89c1\u4e11\u964b\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=1<<30;\nint dist[60][60];\nint getnum(char c){\n\tif(c>='a'&&c<='z')return c-'a'+26;\n\telse return c-'A';\n}\nint main(){\n\tfor(int i=0;i<60;i++)for(int j=0;j<60;j++)dist[i][j]=inf-1;\n\tint m;\n\tcin>>m;\n\twhile(m--){\n\t\tstring s1,s2;int d;\n\t\tcin>>s1>>s2>>d;\n\t\t//cout<<getnum(s1[0])<<\" \"<<getnum(s2[0])<<\" \"<<d<<endl;\n\t\tdist[getnum(s1[0])][getnum(s2[0])]=min(dist[getnum(s1[0])][getnum(s2[0])],d);\n\t\tdist[getnum(s2[0])][getnum(s1[0])]=min(dist[getnum(s2[0])][getnum(s1[0])],d);\n\t\t//cout<<getnum(s1[0])<<\" \"<<getnum(s2[0])<<\" \"<<d<<\" \"<<dist[getnum(s1[0])][getnum(s2[0])]<<endl;\n\t}\n\tfor(int k=0;k<60;k++)for(int i=0;i<60;i++)for(int j=0;j<60;j++)if(dist[i][k]+dist[k][j]<dist[i][j])dist[i][j]=dist[i][k]+dist[k][j];\n\tchar ansc;int ans=inf;\n\tfor(int i=0;i<25;i++)if(dist[i][25]<=ans){\n\t\tans=dist[i][25];ansc=i+'A';\n\t}\n\tcout<<ansc<<\" \"<<ans<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1534839394,
        "uid": 111091,
        "name": "lixinran",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "**\u8fd9\u662f\u672c\u4eba\u7b2c\u4e00\u6b21\u505a\u9898\u89e3\uff0c\u505a\u5f97\u4e0d\u597d\u52ff\u55b7**\n\n~~\u8bdd\u8bf4\u8fd9\u4e2a\u505a\u9898\u89e3\u7684\u7f51\u9875\u6211\u8fd8\u4e0d\u600e\u4e48\u4f1a\u7528qwq~~\n\n\u6574\u4f53\u601d\u8def\u601d\u8def:\n\n\u4e3a\u6bcf\u4e2a\u7267\u573a\u7f16\u53f7\n\n\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\n\n\u6734\u7d20\u7248 _Dijkstra_ \n\n------------\n\n####  _Dijkstra_\u7684\u539f\u7406\u548c\u6f14\u793a\uff1a\n\n\u539f\u6587\u5730\u5740:https://blog.csdn.net/qq_35644234/article/details/60870719 \n\n\u4f5c\u8005:Ouyang_Lianjun\n\n##### \u7b97\u6cd5\u4ecb\u7ecd\n\n###### \u7b97\u6cd5\u7279\u70b9\uff1a\n\n\u8fea\u79d1\u65af\u5f7b\u7b97\u6cd5\u4f7f\u7528\u4e86\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u89e3\u51b3\u8d4b\u6743\u6709\u5411\u56fe\u6216\u8005\u65e0\u5411\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff0c\u7b97\u6cd5\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u6700\u77ed\u8def\u5f84\u6811\u3002\u8be5\u7b97\u6cd5\u5e38\u7528\u4e8e\u8def\u7531\u7b97\u6cd5\u6216\u8005\u4f5c\u4e3a\u5176\u4ed6\u56fe\u7b97\u6cd5\u7684\u4e00\u4e2a\u5b50\u6a21\u5757\u3002\n\n###### \u7b97\u6cd5\u601d\u8def:\n\nDijkstra\u7b97\u6cd5\u91c7\u7528\u7684\u662f\u4e00\u79cd\u8d2a\u5fc3\u7684\u7b56\u7565\uff0c\u58f0\u660e\u4e00\u4e2a\u6570\u7ec4dis\u6765\u4fdd\u5b58\u6e90\u70b9\u5230\u5404\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u548c\u4e00\u4e2a\u4fdd\u5b58\u5df2\u7ecf\u627e\u5230\u4e86\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\u7684\u96c6\u5408\uff1aT\uff0c\u521d\u59cb\u65f6\uff0c\u539f\u70b9 s \u7684\u8def\u5f84\u6743\u91cd\u88ab\u8d4b\u4e3a 0 \uff08dis[s] = 0\uff09\u3002\u82e5\u5bf9\u4e8e\u9876\u70b9 s \u5b58\u5728\u80fd\u76f4\u63a5\u5230\u8fbe\u7684\u8fb9\uff08s,m\uff09\uff0c\u5219\u628adis[m]\u8bbe\u4e3aw\uff08s, m\uff09,\u540c\u65f6\u628a\u6240\u6709\u5176\u4ed6\uff08s\u4e0d\u80fd\u76f4\u63a5\u5230\u8fbe\u7684\uff09\u9876\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u8bbe\u4e3a\u65e0\u7a77\u5927\u3002\u521d\u59cb\u65f6\uff0c\u96c6\u5408T\u53ea\u6709\u9876\u70b9s\u3002 \n\u7136\u540e\uff0c\u4ecedis\u6570\u7ec4\u9009\u62e9\u6700\u5c0f\u503c\uff0c\u5219\u8be5\u503c\u5c31\u662f\u6e90\u70b9s\u5230\u8be5\u503c\u5bf9\u5e94\u7684\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5e76\u4e14\u628a\u8be5\u70b9\u52a0\u5165\u5230T\u4e2d\uff0cOK\uff0c\u6b64\u65f6\u5b8c\u6210\u4e00\u4e2a\u9876\u70b9\uff0c \n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u770b\u770b\u65b0\u52a0\u5165\u7684\u9876\u70b9\u662f\u5426\u53ef\u4ee5\u5230\u8fbe\u5176\u4ed6\u9876\u70b9\u5e76\u4e14\u770b\u770b\u901a\u8fc7\u8be5\u9876\u70b9\u5230\u8fbe\u5176\u4ed6\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u662f\u5426\u6bd4\u6e90\u70b9\u76f4\u63a5\u5230\u8fbe\u77ed\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u5c31\u66ff\u6362\u8fd9\u4e9b\u9876\u70b9\u5728dis\u4e2d\u7684\u503c\u3002 \n\u7136\u540e\uff0c\u53c8\u4ecedis\u4e2d\u627e\u51fa\u6700\u5c0f\u503c\uff0c\u91cd\u590d\u4e0a\u8ff0\u52a8\u4f5c\uff0c\u76f4\u5230T\u4e2d\u5305\u542b\u4e86\u56fe\u7684\u6240\u6709\u9876\u70b9\u3002\n\n##### \u7b97\u6cd5\u6f14\u793a:\n\n\u6c42\u4e0b\u56fe\uff0c\u4ece\u9876\u70b9v1\u5230\u5176\u4ed6\u5404\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\n\n![](https://img-blog.csdn.net/20170308144724663?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzU2NDQyMzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\u9996\u5148\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5148\u58f0\u660e\u4e00\u4e2adis\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u521d\u59cb\u5316\u7684\u503c\u4e3a\uff1a \n\n\n![](https://img-blog.csdn.net/20170308150247263?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzU2NDQyMzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\u6211\u4eec\u7684\u9876\u70b9\u96c6T\u7684\u521d\u59cb\u5316\u4e3a\uff1aT={v1}\n\n\u65e2\u7136\u662f\u6c42 v1\u9876\u70b9\u5230\u5176\u4f59\u5404\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8def\u7a0b\uff0c\u90a3\u5c31\u5148\u627e\u4e00\u4e2a\u79bb 1 \u53f7\u9876\u70b9\u6700\u8fd1\u7684\u9876\u70b9\u3002\u901a\u8fc7\u6570\u7ec4 dis \u53ef\u77e5\u5f53\u524d\u79bbv1\u9876\u70b9\u6700\u8fd1\u662f v3\u9876\u70b9\u3002\u5f53\u9009\u62e9\u4e86 2 \u53f7\u9876\u70b9\u540e\uff0cdis[2]\uff08\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09\u7684\u503c\u5c31\u5df2\u7ecf\u4ece\u201c\u4f30\u8ba1\u503c\u201d\u53d8\u4e3a\u4e86\u201c\u786e\u5b9a\u503c\u201d\uff0c\u5373 v1\u9876\u70b9\u5230 v3\u9876\u70b9\u7684\u6700\u77ed\u8def\u7a0b\u5c31\u662f\u5f53\u524d dis[2]\u503c\u3002\u5c06V3\u52a0\u5165\u5230T\u4e2d\u3002 \n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u76ee\u524d\u79bb v1\u9876\u70b9\u6700\u8fd1\u7684\u662f v3\u9876\u70b9\uff0c\u5e76\u4e14\u8fd9\u4e2a\u56fe\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6b63\u6570\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u53ef\u80fd\u901a\u8fc7\u7b2c\u4e09\u4e2a\u9876\u70b9\u4e2d\u8f6c\uff0c\u4f7f\u5f97 v1\u9876\u70b9\u5230 v3\u9876\u70b9\u7684\u8def\u7a0b\u8fdb\u4e00\u6b65\u7f29\u77ed\u4e86\u3002\u56e0\u4e3a v1\u9876\u70b9\u5230\u5176\u5b83\u9876\u70b9\u7684\u8def\u7a0b\u80af\u5b9a\u6ca1\u6709 v1\u5230 v3\u9876\u70b9\u77ed.\n\nOK\uff0c\u65e2\u7136\u786e\u5b9a\u4e86\u4e00\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u4e0b\u9762\u6211\u4eec\u5c31\u8981\u6839\u636e\u8fd9\u4e2a\u65b0\u5165\u7684\u9876\u70b9V3\u4f1a\u6709\u51fa\u5ea6\uff0c\u53d1\u73b0\u4ee5v3 \u4e3a\u5f27\u5c3e\u7684\u6709\uff1a < v3,v4 >,\u90a3\u4e48\u6211\u4eec\u770b\u770b\u8def\u5f84\uff1av1\u2013v3\u2013v4\u7684\u957f\u5ea6\u662f\u5426\u6bd4v1\u2013v4\u77ed\uff0c\u5176\u5b9e\u8fd9\u4e2a\u5df2\u7ecf\u662f\u5f88\u660e\u663e\u7684\u4e86\uff0c\u56e0\u4e3adis[3]\u4ee3\u8868\u7684\u5c31\u662fv1\u2013v4\u7684\u957f\u5ea6\u4e3a\u65e0\u7a77\u5927\uff0c\u800cv1\u2013v3\u2013v4\u7684\u957f\u5ea6\u4e3a\uff1a10+50=60\uff0c\u6240\u4ee5\u66f4\u65b0dis[3]\u7684\u503c,\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a\n\n![](https://img-blog.csdn.net/20170308150707766?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzU2NDQyMzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\u56e0\u6b64 dis[3]\u8981\u66f4\u65b0\u4e3a 60\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u4e2a\u4e13\u4e1a\u672f\u8bed\u53eb\u505a\u201c\u677e\u5f1b\u201d\u3002\u5373 v1\u9876\u70b9\u5230 v4\u9876\u70b9\u7684\u8def\u7a0b\u5373 dis[3]\uff0c\u901a\u8fc7 < v3,v4> \u8fd9\u6761\u8fb9\u677e\u5f1b\u6210\u529f\u3002\u8fd9\u4fbf\u662f Dijkstra \u7b97\u6cd5\u7684\u4e3b\u8981\u601d\u60f3\uff1a\u901a\u8fc7\u201c\u8fb9\u201d\u6765\u677e\u5f1bv1\u9876\u70b9\u5230\u5176\u4f59\u5404\u4e2a\u9876\u70b9\u7684\u8def\u7a0b\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u53c8\u4ece\u9664dis[2]\u548cdis[0]\u5916\u7684\u5176\u4ed6\u503c\u4e2d\u5bfb\u627e\u6700\u5c0f\u503c\uff0c\u53d1\u73b0dis[4]\u7684\u503c\u6700\u5c0f\uff0c\u901a\u8fc7\u4e4b\u524d\u662f\u89e3\u91ca\u7684\u539f\u7406\uff0c\u53ef\u4ee5\u77e5\u9053v1\u5230v5\u7684\u6700\u77ed\u8ddd\u79bb\u5c31\u662fdis[4]\u7684\u503c\uff0c\u7136\u540e\uff0c\u6211\u4eec\u628av5\u52a0\u5165\u5230\u96c6\u5408T\u4e2d\uff0c\u7136\u540e\uff0c\u8003\u8651v5\u7684\u51fa\u5ea6\u662f\u5426\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u6570\u7ec4dis\u7684\u503c\uff0cv5\u6709\u4e24\u6761\u51fa\u5ea6\uff1a< v5,v4>\u548c < v5,v6>,\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff1av1\u2013v5\u2013v4\u7684\u957f\u5ea6\u4e3a\uff1a50\uff0c\u800cdis[3]\u7684\u503c\u4e3a60\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u66f4\u65b0dis[3]\u7684\u503c.\u53e6\u5916\uff0cv1-v5-v6\u7684\u957f\u5ea6\u4e3a\uff1a90\uff0c\u800cdis[5]\u4e3a100\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66f4\u65b0dis[5]\u7684\u503c\u3002\u66f4\u65b0\u540e\u7684dis\u6570\u7ec4\u5982\u4e0b\u56fe\uff1a\n\n![](https://img-blog.csdn.net/20171205193212203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzU2NDQyMzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\u7136\u540e\uff0c\u7ee7\u7eed\u4ecedis\u4e2d\u9009\u62e9\u672a\u786e\u5b9a\u7684\u9876\u70b9\u7684\u503c\u4e2d\u9009\u62e9\u4e00\u4e2a\u6700\u5c0f\u7684\u503c\uff0c\u53d1\u73b0dis[3]\u7684\u503c\u662f\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u628av4\u52a0\u5165\u5230\u96c6\u5408T\u4e2d\uff0c\u6b64\u65f6\u96c6\u5408T={v1,v3,v5,v4},\u7136\u540e\uff0c\u8003\u8651v4\u7684\u51fa\u5ea6\u662f\u5426\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u6570\u7ec4dis\u7684\u503c\uff0cv4\u6709\u4e00\u6761\u51fa\u5ea6\uff1a< v4,v6>,\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff1av1\u2013v5\u2013v4\u2013v6\u7684\u957f\u5ea6\u4e3a\uff1a60\uff0c\u800cdis[5]\u7684\u503c\u4e3a90\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u66f4\u65b0dis[5]\u7684\u503c\uff0c\u66f4\u65b0\u540e\u7684dis\u6570\u7ec4\u5982\u4e0b\u56fe\uff1a\n\n![](https://img-blog.csdn.net/20170308151732132?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzU2NDQyMzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u540c\u6837\u539f\u7406\uff0c\u5206\u522b\u786e\u5b9a\u4e86v6\u548cv2\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6700\u540edis\u7684\u6570\u7ec4\u7684\u503c\u5982\u4e0b\uff1a \n\n![](https://img-blog.csdn.net/20170308152038851?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzU2NDQyMzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n------------\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6 \n#define INF 0x7fffffff//\u5b9a\u4e49\u6b63\u65e0\u7a77 \nusing namespace std;\n/*\u53d8\u91cf(\u6570\u7ec4)\u7684\u610f\u4e49: \n\u4ee5\u4e0b\u53d8\u91cf\u4e3a\u5904\u7406\u5b57\u7b26\u7528\nind[i]:\u5b57\u6bcdi(ASCII\u7801)\u7684\u7f16\u53f7,\u505a\u4e0b\u6807\u7528\nch[i]:\u7f16\u53f7\u4e3ai\u7267\u573a\u7684\u5b57\u6bcd,\u4e0eind[]\u76f8\u5bf9 \nused[i]:\u5b57\u6bcdi(ASCII\u7801)\u662f\u5426\u51fa\u73b0\u8fc7\nlen:\u7267\u573a\u7684\u6570\u91cf \n\u4ee5\u4e0b\u53d8\u91cf\u4e3a\u8dd1dijkstra\u65f6\u7528 \nmat[i][j]:\u5b58\u50a8\u56fe\u7528\u7684\u90bb\u63a5\u77e9\u9635,mat[i][j]\u4e3a\u70b9i\u5230\u70b9j\u7684\u6743\u503c\ndis[i]:\u8c37\u4ed3\u5230\u70b9i\u7684\u6700\u77ed\u8def\u5f84\nvis[i]:\u8bb0\u5f55\u539f\u70b9\u5230\u70b9i\u7684\u8def\u5f84\u662f\u5426\u4e3a\u6700\u77ed \n*/ \nint n,mat[64][64],ind[128],dis[64],len;\nbool used[128],vis[64];\nchar ch[64];\nint main(){\n\tfor(int i=0;i<64;++i){\n\t\tfor(int j=0;j<64;++j){\n\t\t\tmat[i][j]=INF;\n\t\t}\n\t\tdis[i]=INF;\n\t}//\u5168\u90e8\u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77 \n\tind[(int)'Z']=++len;\n\tdis[1]=0;\n\tvis[1]=true;\n\tcin>>n;\n\tfor(int i=1;i<=n;++i){\n\t\tchar from,to;\n\t\tint val;\n\t\tcin>>from>>to>>val;\n\t\tif(from==to){\n\t\t\tcontinue;\n\t\t}\n\t\tif(!used[(int)from]){//\u5982\u679c\u8be5\u5b57\u6bcd\u6ca1\u6709\u51fa\u73b0\u8fc7 \n\t\t\tused[(int)from]=true;//\u6807\u8bb0 \n\t\t\tind[(int)from]=++len;//\u4e3a\u8be5\u7267\u573a\u7f16\u53f7 \n\t\t}\n\t\tif(!used[(int)to]){//\u540c\u4e0a \n\t\t\tused[(int)to]=true;\n\t\t\tind[(int)to]=++len;\n\t\t}\n\t\tif(from=='Z'){//\u5982\u679c\u8fd9\u6761\u8def\u8fde\u63a5\u4e86\u8c37\u4ed3 \n\t\t\tdis[ind[(int)to]]=min(dis[ind[(int)to]],val);//\u8bb0\u5f55\u6743\u503c \n\t\t}\n\t\tif(to=='Z'){//\u540c\u4e0a \n\t\t\tdis[ind[(int)from]]=min(dis[ind[(int)from]],val);\n\t\t}\n\t\t//\u90bb\u63a5\u77e9\u9635\u5b58\u56fe \n\t\tmat[ind[(int)from]][ind[(int)to]]=min(mat[ind[(int)from]][ind[(int)to]],val);\n\t\tmat[ind[(int)to]][ind[(int)from]]=min(mat[ind[(int)to]][ind[(int)from]],val);\n\t\t//\u56e0\u4e3a\u672c\u9898\u4e3a\u65e0\u5411\u56fe,\u6240\u4ee5\u4ee5\u4e0a\u8bb0\u5f55\u64cd\u4f5c\u8981\u505a\u4e24\u6b21 \n\t}\n\t//\u6734\u7d20\u7248Dijkstra,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(len^2) \n\tfor(int i=1;i<=len;++i){\n\t\tint node=1,min_dis=INF;\n\t\tfor(int j=1;j<=len;++j){//node:\u627e\u5230\u4e00\u4e2a\u79bb\u8c37\u4ed3(\u70b9Z)\u6700\u8fd1\u7684\u7267\u573a \n\t\t\tif(!vis[j]&&min_dis>dis[j]){\n\t\t\t\tnode=j;\n\t\t\t\tmin_dis=dis[j];\n\t\t\t}\n\t\t}\n\t\tvis[node]=true;//\u6807\u8bb0\u4e3a\u786e\u5b9a\u503c \n\t\tfor(int j=1;j<=len;++j){\n\t\t\tif(mat[node][j]!=INF){//\u9632\u6b62\u4ee5\u4e0b\u5224\u65ad\u4e2d\u7684int\u6ea2\u51fa \n\t\t\t\tif(dis[node]+mat[node][j]<dis[j]){\n\t\t\t\t\tdis[j]=dis[node]+mat[node][j];//\u677e\u5f1b\u64cd\u4f5c \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//\u79bb\u7ebf\u5904\u7406ch\u6570\u7ec4 \n\tfor(int i=(int)'a';i<=(int)'z';++i){\n\t\tif(ind[i]){\n\t\t\tch[ind[i]]=(char)i;\n\t\t}\n\t}\n\tfor(int i=(int)'A';i<=(int)'Z';++i){\n\t\tif(ind[i]){\n\t\t\tch[ind[i]]=(char)i;\n\t\t}\n\t}\n\tint min_dis=INF;\n\tchar ans;\n\tfor(int i=2;i<=len;++i){\n\t\tif(dis[i]<min_dis&&'A'<=ch[i]&&ch[i]<'Z'){//\u627e\u5230\u4e00\u4e2a\u79bb\u8c37\u4ed3\u6700\u8fd1\u7684,\u7f16\u53f7\u4e3a\u5927\u5199\u5b57\u6bcd\u7684\u7267\u573a \n\t\t\tmin_dis=dis[i];\n\t\t\tans=ch[i];\n\t\t}\n\t}\n\tcout<<ans<<' '<<min_dis<<endl;//\u8f93\u51fa \n\treturn 0;//\u4e00\u4e2a\u597d\u4e60\u60ef \n}\n```\n\u81ea\u8ba4\u4e3a\u4ee3\u7801\u98ce\u683c\u5f88\u597d\ufe3f(\uffe3\ufe36\uffe3)\ufe3f",
        "postTime": 1544868515,
        "uid": 74934,
        "name": "KenLi",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "## \u6ca1\u4eba\u7528\u5806\u4f18\u5316\u7684dijkstra\u505a\uff0c\u90a3\u4f4d\u5076\u5c31\u6765\u4e00\u53d1\n\n### \u6709\u7bc7\u9898\u89e3\u662f\u8bf4\u7ecf\u5178Dijkstra\uff0c\u4e0d\u7528_\u90bb\u63a5\u8868\uff08\u90bb\u63a5\u77e9\u9635\uff09_\uff0c\u4e0d\u7528_\u5806\u4f18\u5316_\uff0c\u7167\u68370ms\uff1b\n\n## \u90a3\u6211\u5c31\u6765\u4e00\u4e2adijkstra+\u90bb\u63a5\u8868+\u5806\u4f18\u5316\n\n### \u9996\u5148\u4f60\u5148\u5f97\u4f1a\u8fd9\u4e9b\n\n- # dijkstra\uff08\u5fc5\u987b\u4f1a\uff09\n\n### \u5176\u6b21\u5c31\u662f\u4f18\u5316\uff0c\u6211\u5728\u6b64\u91c7\u7528\u7684\u662f\n\n- ## \u90bb\u63a5\u8868+\u4f18\u5148\u961f\u5217\n\n## \u5148\u770b\u4e00\u4e0b\u90bb\u63a5\u8868\n\n```\nvoid add(int x,int y,int u){//\u52a0\u5165\u4e00\u6761\u4ecex\u5230y\u7684\u5355\u5411\u8fb9\uff0c\u957f\u5ea6\u4e3aU\n\t++cnt;\n\tto[cnt]=y;\n\tnext[cnt]=first[x];\n\tfirst[x]=cnt;\n\tw[cnt]=u;\t\n\t}\n```\n\n## \u63a5\u4e0b\u6765\u4e0a\u4ee3\u7801\uff08\u5177\u4f53\u89e3\u91ca\u5728\u5176\u4e2d\uff09\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=10000+10;\nconst int INF=0x7ffffff;\nint cnt,first[maxn],next[maxn],m,to[maxn],w[maxn],pre[maxn],dis[maxn];\npriority_queue<pair<int,int> >q;//\u5927\u6839\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\uff0c\u7b2c\u4e00\u7ef4\u8868\u793adis\u7684\u76f8\u53cd\u6570\uff0c\u7b2c\u4e8c\u7ef4\u8868\u793a\u7ed3\u70b9\u7684\u7f16\u53f7\nvoid add(int x,int y,int u){\n\t++cnt;\n\tto[cnt]=y;\n\tnext[cnt]=first[x];\n\tfirst[x]=cnt;\n\tw[cnt]=u;\t\n\t}\nvoid dijkstra(int s){\n    for(int i=0;i<=150;i++)//\u628a\u6bcf\u4e2a\u7684\u8ddd\u79bb\u7f6e\u6210\u65e0\u7a77\u5927\n    dis[i]=INF;\n    memset(pre,0,sizeof(pre));//\u7ed3\u70b9\u6807\u8bb0\n    dis[s]=0;//\u70b9\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u4e3a0\n    q.push(make_pair(0,s));\n    while(q.size()){\n        int x=q.top().second;//\u53d6\u51fa\u5806\u9876\n        q.pop();//\u5f39\u51fa\n        if(pre[x])continue;//\u6807\u8bb0\n        else pre[x]=1;\n        for(int i=first[x];i;i=next[i]){//\u626b\u63cf\u6240\u6709\u8fb9\n        int y=to[i];\n        if(dis[y]>dis[x]+w[i]){//\u677e\u5f1b\u64cd\u4f5c\n            dis[y]=dis[x]+w[i];\n            q.push(make_pair(-dis[y],y));//\u5143\u7d20\u63d2\u5165\u5806\n                }\n            }\n        }   \n    }   \nint main(){\n\tint m,s;\n\tcin>>m;\n\tfor(int i=1;i<=m;i++){\n\tchar x,y;\n\tint z;\n\tcin>>x>>y>>z;\n\tadd((int)x,(int)y,z);//\u5f3a\u5236\u8f6c\u6362\u4e00\u4e0b\n\tadd((int)y,(int)x,z);\t\n\t}\n\tdijkstra((int)'Z');\n\tchar ans='A';\n\tfor(int i='B';i<='Y';i++)//\u5dee\u4e0d\u591a\u4e5f\u662f\u5728\u5f3a\u5236\u8f6c\u6362\n\tif(dis[(int)i]<dis[(int)ans])ans=i;\n\tcout<<ans<<\" \"<<dis[(int)ans];\n\treturn 0;//\u5b8c\u7ed3\u6563\u82b1\n\t}\n```\n\n## \u5b9e\u9645\u4e0a\u5c31\u662f\u6a21\u677f\u6539\u4e00\u70b9\u70b9\n\n## \u611f\u8c22\u7ba1\u7406\u5458\u767e\u5fd9\u4e4b\u4e2d\u62bd\u51fa\u7a7a\u6765\u5ba1\u6838\uff0c\u4e0d\u8db3\u4e4b\u5904\u6b22\u8fce\u65a7\u6b63",
        "postTime": 1544931959,
        "uid": 41302,
        "name": "Obito",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "**\u7ecf\u5178Dijkstra**\uff0c**\u4e0d\u7528**\\_\u90bb\u63a5\u8868\uff08\u90bb\u63a5\u77e9\u9635\uff09\\_\uff0c**\u4e0d\u7528**\\_\u5806\u4f18\u5316\\_\uff0c\u7167\u6837**0ms**\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint road[53][53];//\u4efb\u610f\u4e24\u4e2a\u7267\u573a\u7684\u8def\u5f84\u957f\u5ea6 \nbool visit[53];//\u6bcf\u4e2a\u7267\u573a\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7 \nconst int INF=2e9;\nint dis[53];//\u6bcf\u4e00\u4e2a\u7267\u573a\u5230\u8d77\u70b9\u7684\u8ddd\u79bb \nint P,d,k,end,minn=INF,start=26;//\u8d77\u70b9\u4e3a\u8c37\u4ed3 \nchar ch1,ch2;\nvoid calcdist(char a,char b,int dist);//\u628a\u4e24\u4e2a\u7267\u573a\u8f6c\u4e3a\u6570\u5b57\u5b58\u5165\u6570\u7ec4 \nvoid dijkstra();\nint main(){\n    //init\n    memset(visit,false,sizeof(visit));\n    for(k=0;k<53;k++){\n        for(int j=0;j<53;j++){\n            if(k==j) road[k][j]=0;\n            else road[k][j]=INF;\n        }\n        dis[k]=INF;\n    }\n    dis[start]=0;\n    visit[start]=true;\n    //input\n    scanf(\"%d\",&P);\n    for(k=1;k<=P;k++){\n        scanf(\" %c %c %d\",&ch1,&ch2,&d);\n        calcdist(ch1,ch2,d);\n    }\n    //dijkstra\n    dijkstra();\n    //output\n    printf(\"%c %d\",start-1+'A',dis[start]);\n    return 0;\n}\nvoid calcdist(char a,char b,int dist){\n    int x,y;\n    if(a>='a'&&a<='z'){//\u5c0f\u5199\u5b57\u6bcd\u5b58\u5165\u7b2c27\u4e2a\u5230\u7b2c52\u4e2a \n        x=a-'a'+27;\n    }\n    else if(a>='A'&&a<='Z'){//\u5927\u5199\u5b57\u6bcd\u5b58\u5165\u7b2c1\u4e2a\u5230\u7b2c26\u4e2a \n        x=a-'A'+1;\n    }\n    if(b>='a'&&b<='z'){\n        y=b-'a'+27;\n    }\n    else if(b>='A'&&b<='Z'){\n        y=b-'A'+1;\n    }\n    if(dist<road[x][y]){//\u7279\u5224\uff0c\u907f\u514d\u91cd\u590d\u8f93\u5165 \n        road[x][y]=dist;\n        road[y][x]=dist;\n    }\n}\nvoid dijkstra(){\n    while(start>=26){\n        //\u677e\u5f1b \n        for(k=1;k<53;k++){\n            if(!visit[k]&&road[start][k]!=INF){\n                if(dis[k]>dis[start]+road[start][k]){\n                    dis[k]=dis[start]+road[start][k];\n                }\n            }\n        }\n        minn=INF;\n        //\u627e\u6700\u5c0f\u503c \n        for(k=1;k<53;k++){\n            if(!visit[k]&&dis[k]<minn){\n                minn=dis[k];\n                start=k;\n            }\n        }\n        visit[start]=true;\n    }\n}\n\n```",
        "postTime": 1512808415,
        "uid": 51653,
        "name": "\u6c22\u6c1f\u9178er",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "# \u5806\u4f18\u5316Dijkstra\n~~\u90fd9102\u5e74\u4e86\uff0c\u4e0d\u7528\u5806\u4f18\u5316Dij\uff0c\u80fd\u8dd1\u8fdb30ms\u90fd\u662f\u5947\u8ff9\u3002~~\n\n\u53e6\u5916\u7531\u4e8eSTL\u7684\u4f18\u5148\u961f\u5217\u592a\u6162\u4e86\uff0c\u849f\u84bb\u53c8\u4e0d\u60f3\u624b\u5199\uff0c~~\uff08\u5176\u5b9e\u662f\u4e0d\u4f1a\u624b\u5199\u5806\uff09~~\u4e8e\u662f\u7528\u4e86\u5947\u5999\u7684**\u5185\u5b58\u6c60\u4f18\u5316**\uff1a\n```cpp\nstatic char space[10000000],*sp=space;\ntemplate<typename T>\nstruct myalloc:allocator<T>{\n    myalloc(){}\n    template<typename T2>\n    myalloc(const myalloc<T2> &a){}\n    template<typename T2>\n    myalloc<T>& operator=(const myalloc<T2> &a){return *this;}\n    template<typename T2>\n    struct rebind{typedef myalloc<T2> other;};\n    inline T* allocate(size_t n){\n        T *result=(T*)sp;sp+=n*sizeof(T);\n        return result;\n    }\n    inline void deallocate(T* p,size_t n){}\n};\n```\n\u5177\u4f53\u600e\u4e48\u5904\u7406STL\u7684\u5b9a\u4e49**\u89c1\u4ee3\u7801**\n\n\u6ce8\uff1a\n- \u5751\u70b91 edges\u6570\u7ec4\u8981\u5f0020001\uff0c\u5426\u5219\u4f1a\u7206RE\u3002\n- \u5751\u70b92 priority_queue\u4e00\u5b9a\u8981\u5b9a\u4e49\u5728dij\u51fd\u6570\u91cc\u9762\uff0c\u5426\u5219#7RE\uff08\u539f\u56e0\u4e0d\u660e\uff09\u3002\n\nAC\u4ee3\u7801\u5982\u4e0b\uff0829ms\uff0c\u8fd8\u662f\u592a\u6162\u4e86\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\nnamespace FastIO{\n    #define IOSIZE 10000000\n    static char out[IOSIZE],*q=out,ch[20],*t=ch;\n    inline void write(int x){\n        if(!x)*q++=48;\n        while(x)*t++=x%10+48,x/=10;\n        while(t!=ch)*q++=*--t;\n    }\n    inline void write(char s[]){for(reg char *i=s;*i!='\\0';*q++=*i++);}\n    struct Flusher{~Flusher(){fwrite(out,1,q-out,stdout);}}io_flusher;\n}using namespace FastIO;\nstatic char space[10000000],*sp=space;\ntemplate<typename T>\nstruct myalloc:allocator<T>{\n    myalloc(){}\n    template<typename T2>\n    myalloc(const myalloc<T2> &a){}\n    template<typename T2>\n    myalloc<T>& operator=(const myalloc<T2> &a){return *this;}\n    template<typename T2>\n    struct rebind{typedef myalloc<T2> other;};\n    inline T* allocate(size_t n){\n        T *result=(T*)sp;sp+=n*sizeof(T);\n        return result;\n    }\n    inline void deallocate(T* p,size_t n){}\n};\nnamespace Dijkstra{\n    static int m,head[1001],dis[1001],N;\n    struct Node{int v,nxt;double w;}edges[20001];\n    struct node{double dis;int to;};\n    struct cmp{inline bool operator()(node a,node b){return a.dis>b.dis;}};\n    inline void addedge(int u,int v,int w){\n        edges[++N]=Node{v,head[u],w},head[u]=N,\n        edges[++N]=Node{u,head[v],w},head[v]=N;\n    }\n    __inline__ __attribute__ ((always_inline)) void dij(int st){\n        priority_queue<node,vector<node,myalloc<node> >,cmp > Q;\n    \tmemset(dis,0x3f,sizeof(dis));\n        Q.push(node{0,st}),dis[st]=0;\n        while(!Q.empty()){\n            node now=Q.top();Q.pop();\n            if(now.dis!=dis[now.to])continue;\n            reg int v,tp=now.to;reg double w;\n            for(reg int i=head[tp];i;i=edges[i].nxt)\n                v=edges[i].v,w=edges[i].w,\n                dis[v]>dis[tp]+w&&(dis[v]=dis[tp]+w,Q.push(node{dis[v],v}),0);\n        }\n    }\n}using namespace Dijkstra;\nint main(){\n\tfreopen(\"1.in\",\"r\",stdin);\n    cin>>m;\n    reg char a,b;int c;\n    for(;m;--m)cin>>a>>b>>c,addedge(a,b,c);\n    dij('Z');\n    reg int ans='A';\n    for(reg int i='B';i<'Z';++i)dis[i]<dis[ans]&&(ans=i);\n    *q++=ans,*q++=' ',write(dis[ans]);\n    return 0;\n}\n```",
        "postTime": 1550582713,
        "uid": 75765,
        "name": "Starlight237",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898Floyd\u5c31\u53ef\u4ee5AC\n\n```cpp\n\n\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm>  \nusing namespace std; \nint a[200][200]={0};\nint p[200]={0};\nint n,i,j,k;\nchar A,B;\nint main()\n{\n    scanf(\"%d\\n\",&n); \n    for (i='A';i<='z';i++)\n        for (j='A';j<='z';j++)\n        if(i!=j)a[i][j]=100000000;\n    for (i=1;i<=n;i++)\n    {\n        int haha;\n        scanf(\"%c %c %d\\n\",&A,&B,&haha);\n        if (A>='A'&&A<='Z') p[A]=1;//\u6807\u8bb0\u8be5\u5730\u6709\u725b \n        if (B>='A'&&B<='Z') p[B]=1;\n        a[A][B]= min(a[A][B],haha);\n        a[B][A]=min(a[A][B],a[B][A]);\n    } \n    for (k='A';k<='z';k++)//floyd\n        for (i='A';i<='z';i++)\n            for (j='A';j<='z';j++)\n            if(a[i][j]>a[i][k]+a[k][j])\n            a[i][j]= a[i][k]+a[k][j];\n    int m=100000000;\n    char he;\n    for (i='A';i<='Y';i++)//\u627e\u6700\u5feb\u5230Z\u7684\u6bcd\u725b\n        if ((p[i]==1)&&(a[i]['Z']<m))\n        {\n            m=a[i]['Z'];\n            he=(char)i;\n        }\n    cout<<he<<\" \"<<m;\n    return 0;\n} \n\n\n```",
        "postTime": 1454512500,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u4f7f\u7528SPFA  \u4e0d\u88ab\u5361\uff0c\u4e0d\u88ab\u6740\uff01\n\n~~\u53cd\u6b63\u6570\u636e\u5982\u6b64\u84bb~~\n\n-------------------------------xcy-AK-IOI----------------------------------------\n\n### \u4e00 \u5206\u6790\n\n1. \u5efa\u56fe\n\nsome people think that \"\u5b57\u7b26\" is so difficult to \"\u5efa\u56fe\n\nHowever,we can use a thing called \"HASH\"(ASCII \u7801\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u8ba9\uff1a\n\nA\u5bf9\u5e941\uff0cB\u5bf9\u5e942\uff0c\u2026\u2026\uff0c Z\u5bf9\u5e9426\uff0ca\u5bf9\u5e9427\uff0cb\u5bf9\u5e9428 \u2026\u2026z\u5bf9\u5e9452\n\n\u4e8e\u662f\u4e4e\uff1a\n\u4eceA\u70b9\u5230d\u70b9\uff0c\u5373\u7b49\u4ef7\u4e8e\u4ece1\u53f7\u8282\u70b9\u8d70\u523030\u53f7\u8282\u70b9\n\n\u8fd9\u6837\uff0c\u5176\u5b9e\u4e5f\u5f97\u51fa\u4e86\uff1a\n\n\u56fe\u4e2d\u6700\u591a\u670952\u4e2a\u8282\u70b9\n\nso\uff0c\n\n\n------------\n\n\n 2.\u7b97\u6cd5\n \n \u8fd9\u9053\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\n \n \u4eceZ\u53cd\u5411\u56de\u5230\u539f\u6765\u5976\u725b\u5730\u70b9\uff0c\n \n \u5373\uff1a\u201c\u8fd9\u9898\u628aZ\uff08\u8c37\u4ed3\uff09\u5f53\u8d77\u70b9\uff0c\u628a\u6709\u725b\u7684\u7267\u573a\u5f53\u7ec8\u70b9\u6c42\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\u201c\uff08by Gamin)\n \n \u7531\u4e8e\u8282\u70b9\u6700\u591a\u53ea\u670952\u4e2a\n \n \u6240\u4ee5\u2014\u2014\n###  \u53ef\u4ee5\u7528\u90bb\u63a5\u77e9\u9635\uff01\n\n###  \u53ef\u4ee5\u7528SPFA(O(KE))\uff0cDJ\u7b97\u6cd5(O(N*M))\uff0cFLOYED(O(N^3))\uff01\n\n~~\uff08\u5f00\u5fc3\uff09~~\n\n\u4f46\u6211\u53ea\u4f1aSPFA(qwq)\n\nso\uff0c this code use a algorithm called \"SPFA\".\n\n\n------------\n\n\n3. \u7ec6\u8282\n\n\u8fd9\u9053\u9898\u9700\u8981\u5efa\u53cc\u5411\u8fb9\n\n\u800c\u4e14\uff0c\u4f1a\u6709\u8fd9\u6837\u7684\u6570\u636e\uff08\u7c7b\u4f3c\uff0c\u5e76\u4e0d\u4e00\u5b9a\uff09\n\n......\n\nA g 12\n\n.......\n\nA g 2\n\n\u6211\u4eec\u9700\u8981\u4f5c\u4e00\u4e9b\u5904\u7406\uff0c\u9632\u6b62\u6bd2\u7624\u6570\u636e\n\n-------------------------------xcy-AK-IOI----------------------------------------\n\n### \u4e8c \u4ee3\u7801\n\n```\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\n\nchar a,b;\nint m,x;\nint g[100][100],vis[100],d[100];\nqueue <int> q;\n\nint main() {\n\tcin>>m;\n\tmemset(g,217,sizeof(g));\n\tfor (int i=1; i<=m; i++) {\n\t\tcin>>a>>b>>x;\n\t\tint xx,yy;\n            // \u5efa\u56fe\n\t\tif (a<='z'&&a>='a') xx=a-'a'+27;\n\t\telse xx=a-'A'+1;//ASCII\u7801\u5bf9\u5e94\n\t\tif (b<='z'&&b>='a') yy=b-'a'+27;\n\t\telse yy=b-'A'+1;//ASCII\u7801\u5bf9\u5e94\n\t\tg[yy][xx]=min(g[yy][xx],x);\n\t\tg[xx][yy]=min(g[xx][yy],x);//\u9632\u6bd2\u7624\u6570\u636e\n            // \u5efa\u56fe\u5b8c\n\t}\n    //SPFA\u7075\u9b42\n\tmemset(d,217,sizeof(d));\n\tq.push(26),vis[26]=1,d[26]=0;//Z\u5bf9\u5e9426\n        while \uff081\uff09 \uff1b\n\twhile (!q.empty()) {\n\t\tint x=q.front();\n\t\tq.pop(),vis[x]=0;\n\t\tfor (int i=1; i<=60; i++) {\n\t\t\tif (!g[x][i]) continue;\n\t\t\tint v=i,w=g[x][i];\n                       //\u677e\u5f1b\n\t\t\tif (d[x]+w<d[v]) {\n\t\t\t\td[v]=d[x]+w;\n\t\t\t\tif (!vis[v]) q.push(v),vis[v]=1;//\u8fdb\u961f\n\t\t\t}\n                       //\u677e\u5f1b\u5b8c\n\t\t}\n\t}\n    //\u6bd4\u8f83\n\tint mini,minn=1e9;\n\tfor (int i=1; i<=25; i++) {\n\t\tif (d[i]<minn) minn=d[i],mini=i;\n\t}\n\tcout<<char(mini-1+'A')<<\" \"<<d[mini];\n\treturn 0;\n   //\u4ee3\u7801\u6709\u5927\u5751\uff0c3\u4e2a  please save your life by \"\u4e0d\u6284\u9898\u89e3 \"\n}\n```\n\n-------------------------------xcy-AK-IOI----------------------------------------\n\nAt last ,a sentences is for you :\n\n\u66b4\u529b\u51fa\u5947\u8ff9\uff0c\u9a97\u5206\u8fc7\u6837\u4f8b \n\n\uff08PS\uff1a\u6211\u8fd9\u8fb9\u4e2d\u6587\u4e0d\u597d\u6253\uff0c\u6709\u65f6\u5019\u53ea\u80fd\u6253\u82f1\u6587\uff08qwq\uff09\uff09",
        "postTime": 1564985947,
        "uid": 108393,
        "name": "__AFOier__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "### \u5410\u69fd\u533a\uff1a\n\n~~\u6211\u5c31\u60f3\u77e5\u9053\u80fd\u4e0d\u80fd\u4ed4\u7ec6\u770b\u770b\u6570\u636e\u8303\u56f4\u554a~~\n\n\n----\n\u8fdb\u5165\u6b63\u9898\uff1a\n\u672c\u9898\u663e\u7136\u5c31\u662f\u4e2a\u88f8\u7684\u6700\u77ed\u8def\u6a21\u677f\u9898\uff0c\u9002\u7528\u4e8e**\u6240\u6709**\u7b97\u6cd5\u3002\n\n\u548c\u5176\u4ed6\u6b64\u7c7b\u9898\u76ee\u4e0d\u540c\u7684\u662f\uff0c\u672c\u9898\u6ca1\u6709\u76f4\u63a5\u5728\u8f93\u5165\u4e2d\u7ed9\u51fa\u7267\u573a\u6570\u7684\u8303\u56f4\uff0c\u4f46\u4ed4\u7ec6\u60f3\u60f3\u5b57\u6bcd\uff0c\n\n**\u5927\u5c0f\u5199\u52a0\u8d77\u6765\u4e00\u5171\u624d56\u4e2a**\n\n\u8fd9\u5c31\u610f\u5473\u7740\u53ef\u4ee5Floyd\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8bfb\u5165\u7684\u5b57\u6bcd\u90fd\u8f6c\u6362\u62101~56\uff0c\u751a\u81f3\u61d2\u4e00\u4e9b\uff08\u6bd4\u5982\u6211\uff09\uff0c\u76f4\u63a5\u628a\u5b57\u6bcd\u7684ASCII\u7801\u642c\u8fc7\u6765\u4e5f\u80fd$O(n^3)$\n\n> code:\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint f[505][505];\nint main()\n{\n\tint m;\n\tscanf(\"%d\",&m);\n\tchar c1,c2;\n\tint z;\n\tfor(int i=1;i<=500;i++)\n\t{\n\t\tfor(int j=1;j<=500;j++)\n\t\t{\n\t\t\tf[i][j]=1000000000;\n\t\t}\n\t}\n\tint maxn=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>c1>>c2>>z;\n\t\tint tmp1=c1,tmp2=c2;\n\t\tf[tmp2][tmp1]=f[tmp1][tmp2]=min(f[tmp1][tmp2],z);\n\t\t\n\t\tmaxn=max(maxn,max(tmp1,tmp2));\n\t}\n\tfor(int k=1;k<=maxn;k++)\n\t{\n\t\tfor(int i=1;i<=maxn;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=maxn;j++)\n\t\t\t{\n\t\t\t\t//if(j!=i&&j!=k&&i!=j)\n\t\t\t\tf[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\tchar tag;\n\tint ans=2147483647;\n\tfor(char i='A';i<='Y';i++)\n\t{\n\t\tint j=i;\n\t\tif(f[j][90]<ans)\n\t\t{\n\t\t\tans=f[j][90];\n\t\t\ttag=i;\n\t\t} \n\t}\n\tprintf(\"%c %d\\n\",tag,ans);\n\treturn 0;\n}\n```\n\n\u6492\u82b1~",
        "postTime": 1562121015,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "```cpp\n//\u697c\u4e0b\u662f\u53ea\u6709\u4e00\u7bc7c++\u7684dj\u554a\n//\u4e3b\u8981\u662f\u4e00\u5f00\u59cb\u505a\u8fd9\u9898\u6ca1\u601d\u8def\uff0c\u56fe\u8bba\u7b97\u6cd5\u53ea\u4f1a\u4e24\u4e2a\n//\u6240\u4ee5\u9009\u4e86dj\uff08\u53ea\u80fd\u8bc1\u660e\u6211\u592aL\n//\u7136\u800c\u4e0d\u77e5\u9053\u5c06\u8c01\u8bbe\u4e3a\u8d77\u70b9\uff0c\u7ec8\u70b9\u3002\n//\u7ffb\u4e0b\u9762\u7684\u9898\u89e3\uff0c\u4f46\u662f\u770b\u4e0d\u61c2\u3002\u3002\uff08\u518d\u6b21\u8bc1\u660e\u6211\u592aL\n//\u6240\u4ee5\u6211\u53d1\u4e00\u7bc7\u849f\u84bb\u7684\u9898\u89e3\uff0cdalao\u8f7b\u55b7\n//\u5b58\u56fe\u4e5f\u662f\u76f4\u63a5\u5b58\uff0c\u4e5f\u6ca1\u7528\u5806\u4f18\u5316\n//\u4ec5\u4ec5\u601d\u8def\u3002\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int INF=2e9;//\u65e0\u9650 \nint a[257][257],dis[257],n,minn;//a\u7528\u6765\u5b58\u56fe\uff0cdis[i]\u662f\u5230\u8d77\u70b9\u5230i\u70b9\u7684\u8ddd\u79bb \nchar u='Z';//\u8d77\u70b9\uff0c\u8fd9\u91cc\u628a'Z'\u8bbe\u4e3a\u8d77\u70b9\u3002\u7b97\u51fa\u8d77\u70b9\u5230\u6240\u6709\u5730\u65b9\u7684\u6700\u77ed\u8ddd\u79bb \nbool vis[257];//\u662f\u5426\u786e\u5b9a\u6700\u77ed\u8ddd\u79bb \nint main()\n{\n    for(int i='A';i<='z';i++)\n        for(int j='A';j<='z';j++)\n            if(i!=j)    a[i][j]=INF;//\u81ea\u5df1\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u662f0 \n    for(int i='A';i<='z';i++)\n        dis[i]=INF;\n    dis['Z']=0;\n    vis['Z']=true;\n    //\u4e0a\u9762\u4e3a\u521d\u59cb\u5316 \n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        char x,y;int k;\n        cin>>x>>y>>k;\n        if(a[x][y]>k)    a[x][y]=a[y][x]=k;\n```\n}//\u8bfb\u5165\n```cpp\n    while(true)//\u8fd9\u91cc\u5148\u7528while(true)\uff0c\u7406\u7531\u4e0b\u9762\u8bf4 \n    {\n        for(int i=1;i<=257;i++)\n        {\n            if(!vis[i]&&dis[i]>dis[u]+a[u][i])\n                dis[i]=dis[u]+a[u][i];\n        }\n        minn=INF;\n        for(int i='A';i<='z';i++)\n        {\n            if(!vis[i]&&dis[i]<minn)\n            {\n                minn=dis[i];\n                u=i;\n            }\n        }\n        vis[u]=true;\n        //\u697c\u4e0adj\u6a21\u677f \n        if(u>='A'&&u<'Z')//\u6211\u4eec\u53ea\u8981\u786e\u5b9a\u4e86\u5230\u4e00\u4e2a\u6709\u725b\u7684\u5730\u65b9\u7684\u6700\u77ed\u8ddd\u79bb\uff08\u53ea\u8981\u662f\u5927\u5199\u5b57\u6bcd\u4e14\u4e0d\u4e3a\u8c37\u4ed3\u5c31\u6709\u725b\uff09\uff0c\u7ed3\u675f\u5faa\u73af \n            break;\n    }\n    putchar(u);\n    cout<<' '<<minn;\n    //\u8f93\u51fa \n    return 0;\n}\n```\n/\\*\n\u5e0c\u671b\u5927\u5bb6\u80fd\u770b\u61c2\uff0c\u603b\u4f53\u601d\u8def\u5c31\u662f\u8bbe\u8c37\u4ed3\u4e3a\u8d77\u70b9\uff0c\u7b97\u5230\u5230\u4efb\u610f\u4e00\u4e2a\u6709\u725b\u7684\u5730\u65b9\u7684\u6700\u77ed\u8ddd\u79bb\u5c31\u505c\uff0c\u81f3\u4e8e\u8fd9\u4e9b\u5b57\u6bcd\u8f6cASCII\u5c31\u597d\u4e86\u3002\n\n\u6c42\u8f7b\u55b7\uff0c\u8c22\u8c22\u3002\n",
        "postTime": 1512797754,
        "uid": 55537,
        "name": "Parabola",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1529)\n\n\u4e00\u770b\u9898\u76ee\uff0c\u7b2c\u4e00\u611f\u89c9\u80af\u5b9a\u8981\u4f7f\u7528spfa\u7b97\u6cd5\n\n\u672c\u9898\u4e0e\u666e\u901a\u7684\u6700\u77ed\u8def\u7b97\u6cd5\u4e0d\u540c\u7684\u662f\uff0c\u666e\u901a\u7684\u6700\u77ed\u8def\u5904\u7406\u7684\u662f\u6574\u6570\uff08\u5373\u7528\u6574\u6570\u7f16\u53f7\u7267\u573a\uff09\uff0c\u4f46\u672c\u9898\u7528\u5b57\u7b26\u7f16\u53f7\u7267\u573a\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528c++ STL\u4e2d\u7684\u6620\u5c04map\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n[\u8bc4\u6d4b\u8bb0\u5f55\uff1a](https://www.luogu.org/recordnew/show/16249573)\n\n\u72b6\u6001/\u5206\u6570\uff1aAccepted\uff0c100\u5206\n\n\u8bed\u8a00/\u957f\u5ea6\uff1aC++\uff0c1.2KB\n\n\u8017\u65f6/\u5185\u5b58\uff1a49ms\uff0c1044KB\n\n```cpp\n#include <map>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nmap<char,int> d,head;//\u6620\u5c04\nchar x,y;int cnt,n,i,ans,z;\nstruct node{\n    int next,w;char to;\n}e[20200];\nvoid add(char a,char b,int c){\n    e[++cnt]={head[a],c,b};head[a]=cnt;\n}//\u5efa\u56fe\nqueue<char> q;//\u961f\u5217\nmap<char,bool> v;//\u53c8\u662f\u6620\u5c04\nconst int inf=0x7fffffff;\n//0x7fffffff\u5373\u4e3a2147483647\nvoid spfa(char bx){\n    for(char f='a';f<='z';f++){\n        d[f]=d[f-'a'+'A']=inf;\n        v[f]=v[f-'a'+'A']=true;\n    }\n    d[bx]=0;v[bx]=0;q.push(bx);\n    //\u521d\u59cb\u5316\u6620\u5c04\n    while (q.size()){\n        char z=q.front();q.pop();v[z]=1;\n        for(int i=head[z];i;i=e[i].next){\n            //\u904d\u5386\u90bb\u63a5\u77e9\u9635\n            register char u=e[i].to;\n            if (d[u]>d[z]+e[i].w){\n                d[u]=d[z]+e[i].w;\n                if (v[u]){\n                    v[u]=0;q.push(u);\n                }\n            }\n        }\n    }\n}\nint main(){\n//\tfreopen(\"t2.in\",\"r\",stdin);\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"\\n%c %c %d\",&x,&y,&z);\n        //\u6ce8\u610fscanf\u53ef\u4ee5\u8bfb\u5165\u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\uff0c\u7a7a\u5b57\u7b26\u6216TAB\n        add(x,y,z);add(y,x,z);//\u5efa\u65e0\u5411\u56fe\n    }\n    spfa('Z');ans=inf;\n    for(x='A';x<'Z';x++)\n    if (d[x]!=inf){\n        if (d[x]<ans){\n            ans=d[x];y=x;\n        }\n    }\n    //\u5bfb\u627e\u6781\u503c\uff08\u5373\u7b54\u6848\uff09\n    printf(\"%c %d\",y,ans);\n    return 0;\n}\n```",
        "postTime": 1550062193,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u5173\u4e8e\u8fd9\u9053\u9898\uff0c\u8bb8\u591adalao\u90fd\u662f\u7528SPFA\u548cdijkstra\u505a\u7684\u3002\n\n\u71c3\u9e45\uff0c\u770b\u4e00\u4e0b\u6570\u636e\uff0c\u6700\u591a52\u79cd\u60c5\u51b5('A'~'Z', 'a'~'z')\n\n**\u90a3\u66b4\u529b\u641c\u7d22\u4e0d\u5c31\u884c\u4e86\u5417\uff1f**\n\n[$\\color{red}\\text{AC\u8bc1\u636e}$](https://www.luogu.org/record/22176525)\n\n\u66b4\u529b\u641c\u7d22\u4e5f\u8dd1\u5f97\u633a\u5feb\u7684\uff0c\u624d35ms\u3002\n\n\u4e0b\u9762\u8bb2\u4e00\u4e0b\u6211\u7684\u601d\u8def\uff1a~~\u6572\u9ed1\u677f\u5212\u91cd\u70b9~~\n\n\u9996\u5148\uff0c\u5efa\u56fe\uff0c\u76f4\u63a5\u7528ASCII\u7801+\u6570\u7ec4\u641e\u5b9a\u3002~~\u8bb0\u5f97\u662f\u65e0\u5411\u56feqwq~~\n\n\u5176\u6b21\uff0c\u66b4\u529bdfs\uff0c\u4e2d\u95f4\u53ef\u4ee5\u8fdb\u884c\u8bb0\u641c\u526a\u679d\u3002\n\n\u6700\u540e\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^3)$\uff0c\u5bf9\u4e8e52\u6765\u8bf4\u5df2\u7ecf\u662f\u7ef0\u7ef0\u6709\u4f59\u4e86\n\n---------------------------------~~\u5b8c\u7f8e\u7684\u5206\u5272\u7ebf~~---------------------------------\n\n## Code\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n, a[256][256];\nchar f, t; int d;\nchar cow, flag; int ans;\nint u[256];\nbool vis[256];\nvoid dfs(int x, int s){\n\tif(s >= u[x]) return;//\u526a\u679d \n\tu[x] = s;\n\tif(x == 90){//'Z'\u7684ASCII\u7801\u503c\u4e3a90 \n\t\tif(s < ans){//\u5b58\u50a8 \n\t\t\tans = s;\n\t\t\tcow = flag;\n\t\t}\n\t\treturn;\n\t}\n\telse{\n\t\tfor(int i = 65; i <= 90; ++i){\n\t\t\tif(a[x][i] == a[0][0]) continue;//\u6ca1\u6709\u8def \n\t\t\tdfs(i, s + a[x][i]);\n\t\t}//\u5927\u5199\u5b57\u6bcddfs \n\t\tfor(int i = 97; i <= 122; ++i){\n\t\t\tif(a[x][i] == a[0][0]) continue;//\u6ca1\u6709\u8def \n\t\t\tdfs(i, s + a[x][i]);\n\t\t}//\u5c0f\u5199\u5b57\u6bcddfs \n\t}\n}\nint main(){\n\tmemset(u, 127, sizeof(u));\n\tans = u[0];//ans\u5b58\u4e2a\u8f83\u5927\u503c \n\tmemset(a, 127, sizeof(a));//a\u4e5f\u5b58\u4e2a\u8f83\u5927\u503c\n\tcin >> n;\n\tfor(int i = 1; i <= n; ++i){\n\t\tcin >> f >> t >> d;\n\t\tif(f == t) continue;\n\t\tvis[(int)f] = 1;\n\t\tvis[(int)t] = 1;//\u8bb0\u5f55\u6709\u7267\u573a \n\t\ta[(int)f][(int)t] = min(a[(int)f][(int)t], d);\n\t\ta[(int)t][(int)f] = min(a[(int)t][(int)f], d);//\u5b58\u56fe \n\t}\n\tfor(int i = 65; i <= 89; ++i){//\u8bb0\u5f97\uff01\uff01\u662f'A'-'Y'\uff0c\u88ab\u5751\u8c03\u4e86\u534a\u4e2a\u591a\u5c0f\u65f6qwq \n\t\tif(vis[i]){\n\t\t\tflag = (char)i;\n\t\t\tdfs(i, 0);\n\t\t}\n\t}\n\tcout << cow << \" \" << ans;//\u8f93\u51fa \n\treturn 0;\n}\n```\n\n\u4ee5\u4e0a\u5c31\u662f\u672c\u849f\u84bb\u7684\u601d\u8def\uff0c\u5982\u6709\u4e0d\u61c2\u8005\uff0c\u6b22\u8fce\u7559\u8a00\n\n## End",
        "postTime": 1564985007,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "# \u601d\u8def\n\n\u5f88\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u9053**\u65e0\u5411\u56fe\u6c42\u6700\u77ed\u8def**\u7684\u9898\u76ee\uff0c\u89c2\u5bdf\u6570\u636e\u8303\u56f4$(1<= P<=10000)$\uff0c\u51b3\u5b9a\u7528\u4e0d\u4f1a\u8d85\u65f6\u4e14\u6700\u7b80\u5355\u7684$Dijkstra$\u7b97\u6cd5\u6765\u89e3\u9898\u3002\n\n\u770b\u5230\u5176\u4ed6\u9898\u89e3\u591a\u6b21\u6c42\u6700\u77ed\u8def\u6d6a\u8d39\u65f6\u95f4\u7684\u95ee\u9898\uff0c\u6211\u53ea\u80fd\u8bf4\uff1a\n\n**\u5176\u4ed6\u6240\u6709\u70b9\u5230\u70b9$Z$\u7684\u8def\u5f84\u548c\u70b9$Z$\u5230\u5176\u4ed6\u6240\u6709\u70b9\u7684\u8def\u5f84\u76f8\u540c**\uff0c\u53ea\u9700\u4ee5\u70b9$Z$\u4e3a\u8d77\u70b9\u6c42\u6700\u77ed\u8def\uff0c\u518d\u627e\u5230$A$~$Y$\u4e2d\u6700\u77ed\u8def\u5f84\u957f\u6700\u77ed\u7684\u70b9\u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n\u91c7\u7528$Dijkstra$\u7b97\u6cd5\u3001\u90bb\u63a5\u8868\u548c\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\u4f18\u5316\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<iostream>\nusing std::cin;\n#include<queue>\nusing std::priority_queue;\nusing std::vector;\nusing std::greater;\n/*\nusing std::sth;\n\u662f\u4e3a\u4e86\u9632\u6b62\u547d\u540d\u7a7a\u95f4\u7684\u6c61\u67d3\n\u4ee5\u4e0a\u662f\u5934\u6587\u4ef6\n*/\n#define INF 0X3F3F3F3F\n//\u5b8f\u5b9a\u4e49\n\nstruct Node{\n\tint len;//len\u4e3a\u8fd9\u6761\u8def\u7684\u957f\u5ea6\n\tint to;//to\u4e3a\u8fd9\u6761\u8def\u7684\u4e0b\u4e00\u4e2a\u7aef\u70b9\n\tbool operator>(Node a)const{\n\t\treturn this->len>a.len;\n\t}\n};//\u4f18\u5148\u961f\u5217\u4e2d\u7684\u5143\u7d20\n\nbool f[20001];//\u6807\u8bb0\u6570\u7ec4\uff0c\u9632\u6b62\u91cd\u590d\nint p,head[128],Next[20001],to[20001],len[20001],d[20001],l=INF,ans;//\u90bb\u63a5\u8868\u548c\u7b54\u6848\u7684\u5b9a\u4e49\nNode temp;//\u7528\u4e8e\u8f93\u5165\u548c\u63d2\u5165\u4f18\u5148\u961f\u5217\u7684\u4e34\u65f6\u53d8\u91cf\npriority_queue<Node,vector<Node>,greater<Node> > Q;//\u5c0f\u6839\u5806\n\nvoid Dijkstra(int);//\u51fd\u6570\u58f0\u660e\n\nint main(void){\n\tscanf(\"%d\",&p);\n\tfor(int i=1,w;i<=(p<<1);i+=2){\n\t\tchar f,g;\n\t\tcin>>f>>g;//\u7528cin\u8bfb\u5165\u53ef\u81ea\u52a8\u5ffd\u7565\u7a7a\u683c\u548c\u6362\u884c\u7b26\n\t\tscanf(\"%d\",&w);\n\t\tNext[i]=head[f];\n\t\thead[f]=i;\n\t\tto[i]=g;\n\t\tlen[i]=w;\n\t\tNext[i+1]=head[g];\n\t\thead[g]=i+1;\n\t\tto[i+1]=f;\n\t\tlen[i+1]=w;//\u65e0\u5411\u56fe\u8bb0\u5f97\u5b58\u4e24\u904d\n\t}\n\tDijkstra('Z');//\u4ee5\u70b9Z\u4e3a\u8d77\u70b9\u6c42\u6700\u77ed\u8def\n\tfor(int i='A';i<='Y';i++)\n\t\tif(d[i]<l)\n\t\t\tl=d[i],ans=i;//\u679a\u4e3e\u5bfb\u627e\u7b54\u6848\n\tprintf(\"%c %d\",ans,l);//\u8f93\u51fa\n\treturn 0;//\u7ed3\u675f\n}\n\nvoid Dijkstra(int start){//Dijkstra\u7b97\u6cd5\n\tmemset(d,0X3F,sizeof(d));\n\tmemset(f,0,sizeof(f));\n\td[start]=0;\n\ttemp.len=0,temp.to=start;\n\tQ.push(temp);\n    /*\u4e0a\u9762\u4e3a\u521d\u59cb\u5316*/\n\twhile(Q.size()){\n\t\ttemp=Q.top();\n\t\tchar now=temp.to;\n\t\tQ.pop();\n\t\tif(f[now])\n\t\t\tcontinue;\n\t\tf[now]=true;\n\t\tfor(int i=head[now];i;i=Next[i]){\n\t\t\tint node_next=to[i],len_this_way=len[i];\n\t\t\tif(d[node_next]>d[now]+len_this_way)\n\t\t\t\td[node_next]=d[now]+len_this_way,\n\t\t\t\ttemp.len=d[node_next],temp.to=node_next,\n\t\t\t\tQ.push(temp);\n\t\t}\n\t}\n\treturn;\n}\n```",
        "postTime": 1532180982,
        "uid": 38502,
        "name": "agicy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u83dcOJ\u9898\u53f7\uff1a1835 http://caioj.cn/problem.php?id=1835\n\n\u6d1b\u8c37\u9898\u53f7\uff1aP1529 https://www.luogu.org/problemnew/show/P1529\n\n##### \u6211\u7684\u601d\u8def\uff1a\n\n\u8fd9\u9898\u628aZ\uff08\u8c37\u4ed3\uff09\u5f53\u8d77\u70b9\uff0c\u628a\u6709\u725b\u7684\u7267\u573a\u5f53\u7ec8\u70b9\u6c42\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\n\n\u6709\u4eba\u4f1a\u95ee\uff0c\u7267\u573a\u662f\u7528\u5b57\u6bcd\u8868\u793a\u7684\u554a\uff0c\u600e\u4e48\u8f6c\u6210\u6570\u5b57\u5462\uff1f\n\na~z -> 1~26\n\nA~Z -> 27~52\n\n##### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct node\n{\n    int x,y,d,next;\n} a[22000];//\u6ce8\u610f\uff0c\u6211\u4eec\u8981\u5efa\u53cc\u5411\u8fb9\uff0c\u6240\u4ee5\u8fb9\u6570\u8981\u662f\u4e24\u500d\uff01\nint last[60],len=0;\nbool v[60];\nint ans=999999999,ansi=0;\nvoid ins(int x,int y,int d)\n{\n    len++;\n    a[len].x=x;a[len].y=y;a[len].d=d;\n    a[len].next=last[x];last[x]=len;\n}\nvoid dfs(int x,int s)\n{\n    if(s>ans) return;\n    for(int k=last[x]; k; k=a[k].next)\n    {\n        int y=a[k].y;\n        if(v[y]==false)\n        {\n            v[y]=true;\n            if(y>26)\n            {\n                if(s+a[k].d<ans) {ans=s+a[k].d;ansi=y;}\n            }\n            else dfs(y,s+a[k].d);\n            v[y]=false;\n        }\n    }\n}\nmain()\n{\n    int m;\n    scanf(\"%d\",&m);\n    for(int i=1; i<=m; i++)\n    {\n        char x,y;\n        int c;\n        scanf(\"\\n%c %c %d\",&x,&y,&c);\n        int xx,yy;\n        if(x>='a' && x<='z') xx=x-'a'+1;\n        else  xx=x-'A'+27;\n        if(y>='a' && y<='z') yy=y-'a'+1;\n        else  yy=y-'A'+27;\n        ins(xx,yy,c);\n        ins(yy,xx,c);\n    }\n    v[52]=true;\n    dfs(52,0);\n    printf(\"%c %d\\n\",ansi-27+'A',ans);\n    return 0;\n}\n```",
        "postTime": 1531186888,
        "uid": 59140,
        "name": "Zimo",
        "ccfLevel": 0,
        "title": "P1529 [USACO 2.4] \u56de\u5bb6"
    },
    {
        "content": "~~*\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff08\u5176\u5b9e\u6211\u672c\u6765\u5c31\u6ca1\u8bf4\u5e9f\u8bdd\uff09*~~  \n## \u66b4\u529b\u51fa\u5947\u8ff9\u3002\n\u76f4\u63a5\u4e8c\u7ef4\u5b58\u56fe\uff0c\u641c\u7d22\u627e\u7b54\u6848\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<map>\nusing namespace std;\nint p,ans,num=0xfffffff,c,f[111][111];\nchar x,y;\nint main()\n{\n    scanf(\"%d\",&p);\n    memset(f,63,sizeof(f));//\u521d\u59cb\u5316\u6240\u6709\u8def\u90fd\u5946\u957f \n    while(p--)\n    {\n        scanf(\" %c %c%d\",&x,&y,&c);//\u2193\u5b57\u7b26\u8981\u8f6c\u6362\u6210\u6570\u6765\u5f53\u4e0b\u6807 \n        f[x-64][y-64]=f[y-64][x-64]=min(f[x-64][y-64],c);\n    }//\u56e0\u4e3a\u53ef\u80fd\u6709\u8fde\u63a5\u540c\u4e24\u5730\u7684\u4e0d\u540c\u7684\u8def\u8981\u6700\u77ed\u7684\u2191\n    for(int k=1;k<=58;k++)//\u679a\u4e3e\u8fde\u63a5\u4e24\u70b9\u4e2d\u95f4\u7684\u7267\u573a \n    for(int i=1;i<=58;i++)//\u679a\u4e3e\u7267\u573a1 \n    if(i!=k)//\u540c\u4e00\u70b9\u6ca1\u6709\u610f\u4e49 \n    {\n        for(int j=1;j<=58;j++)//\u679a\u4e3e\u7267\u573a2 \n            if(i!=j&&k!=j)\n                f[i][j]=min(f[i][j],f[i][k]+f[j][k]);//\u53d6\u6700\u77ed \n    }//\u4e0a\u9762\u90e8\u5206\u901a\u8fc7\u4e00\u70b9\u8fde\u63a51\u30012\u7267\u573a\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb \n    for(int i=1;i<26;i++)//\u679a\u4e3e\u6240\u6709\u6709\u725b\u7684\u7267\u573a \n    {\n        if(f[i][26]<num){num=f[i][26],ans=i;}//\u5230\u8c37\u4ed3\u7684\u8ddd\u79bb\u2193\n    }\n    printf(\"%c %d\\n\",ans+64,num);//ans\u53d8\u4e3a\u5b57\u6bcdASCLL\u7801 \n    return 0;\n}\n```",
        "postTime": 1526196676,
        "uid": 60654,
        "name": "key_rA9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u7adf\u7136\u6ca1\u6709\u4eba\u7528Floyd\uff0c\u672c\u849f\u84bb\u8d76\u7d27\u6765\u6c34\u4e00\u53d1\u3002\n\n\u8fd9\u9898\u7684\u6570\u636e\u770b\u4e0a\u53bb\u5f88\u5927\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b8c\u5168\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u56e0\u4e3a\u9898\u76ee\u5df2\u7ecf\u8bf4\u4e86\uff0c\u53ea\u6709 2*26-1=51\u4e2a\u7267\u573a\u548c\u4e00\u4e2a\u8c37\u4ed3\uff0c\u603b\u5171\u5c3152\u4e2a\u70b9\uff0c\u540c\u65f6\u6709\u8981\u6c42\u627e\u6240\u6709\u70b9\u5230\u8c37\u4ed3\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5f88\u81ea\u7136\u5c31\u4f1a\u60f3\u5230Floyd\u4e86\u3002\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u4ee5\u8c37\u4ed3\u4e3a\u539f\u70b9\uff0c\u627e\u79bb\u8c37\u4ed3\u6700\u8fd1\u7684\u70b9\uff0c\u4f46Floyd\u597d\u5199\u4e0d\u662f\u5417\uff09\n\n\u4e3b\u8981\u601d\u8def\uff1a\u7528\u70b9\u7684ASCII\u7801\u6765\u4ee3\u66ff\u4ed6\u4eec\u7684\u4e0b\u6807\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u8868\u793a\u70b9\u5230\u70b9\u7684\u8ddd\u79bb\uff0c\u56e0\u4e3a'Z'\u5230'a'\u4e4b\u95f4\u6709\u4e00\u4e9b\u4e71\u5b57\u7b26\uff0c\u4f46\u5e76\u4e0d\u788d\u4e8b\uff0c\u628a\u521d\u59cb\u503c\u9644\u597d\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u6700\u591a\u4e5f\u5c31\u662f70\u4e2a\u4ee5\u4e0b\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff1a\u89c1\u4ee3\u7801\n```_ \n#include<iostream>\nusing namespace std;\nchar a,b;\nint w[101][101],m,i,j,k,x,p,minn=1e7,q,n=70;//\u6253\u60ef\u4e86\u4ece\u4e00\u5230n\uff0c\u61d2\u5f97\u6539\nint main(){\n\tcin>>p;\n\tfor (i=1; i<=100; i++)\n\t  for (j=1; j<=100; j++) w[i][j]=1e7;\n\tfor (i=1; i<=p; i++){\n\t\tcin>>a>>b>>x;\n\t\tw[b-'A'+1][a-'A'+1]=w[a-'A'+1][b-'A'+1]=min(w[a-'A'+1][b-'A'+1],x);//\u76f4\u63a5\u7528\u5b57\u7b26\u8868\u793a\u4e0b\u8868\u5c31\u597d\u4e86\uff0c\u61d2\u5f97\u518d\u5f00\u4e00\u4e2a\u53d8\u91cf\n\t}\n\tfor (k=1; k<=n; k++)//\u5f17\u6d1b\u4f0a\u5fb7\u7b97\u6cd5\u4e3b\u9898\uff0c\u80af\u5b9a\u8f6e\u4e0d\u5230\u6211\u6765\u8bb2\n\t  for (i=1; i<=n; i++)\n\t    for (j=1; j<=n; j++)\n\t      w[i][j]=min(w[i][j],w[i][k]+w[k][j]);\n\tfor (i=1; i<=25; i++)//\u6ce8\u610f\u4e00\u5b9a\u53ea\u80fd\u523025\n\t    if (w[i][26]<minn){minn=w[i][26]; q=i;}\n\tcout<<(char)(q+'A'-1)<<' '<<w[q][26];\n\treturn 0;\n}```",
        "postTime": 1526107874,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "~~\u4efb\u4f55\u7528\u7a7a\u683c\u9694\u5f00\u5b57\u7b26\u7684\u9898\u76ee\u90fd\u662f\u800d\u6d41\u6c13~~\n\n\u4ecd\u7136\u662f\u9f13\u5439\u4e00\u6ce2bellman_ford\uff0c\u5355\u6e90\u6700\u77ed\u8def\u91cc\u9762\u6700\u597d\u8bb0\u7684\u4ee3\u7801\uff0c\u5f88\u9002\u5408\u65b0\u4eba\uff0c\u800c\u4e14\u6548\u7387\u4e5f\u5e76\u4e0d\u5f88\u4f4e\u2014\u2014\u548cSPFA\u7684\u6700\u5dee\u60c5\u51b5\u540c\u9636\u5462\uff08\u9003\uff09\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n- \u5728scanf\u91cc\uff0c\u5728\u5b57\u7b26\u683c\u5f0f\u7b26\u524d\u7559\u4e00\u4e2a\u7a7a\u683c\uff0c\u5c31\u53ef\u4ee5**\u6070\u597d**\u5730\u8fc7\u6ee4\u4e0d\u5fc5\u8981\u7684\u7a7a\u683c\uff1b\u4e5f\u53ef\u4ee5\u7528\u6d41\u8f93\u5165\u6bd4\u8f83\u65b9\u4fbf\u5730\u89e3\u51b3\n\n- \u5404\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\u90fd\u8981\u91c7\u7528\u65e0\u5411\u56fe\u7684\u677e\u5f1b\uff08\u6216\u52a0\u8fb9\uff09\u529e\u6cd5\uff0c\u8fd8\u8981\u6ce8\u610f\u91cd\u8fb9\u548c\u81ea\u73af\n\n- \u5b57\u7b26\u7c7b\u7684\u5904\u7406\u8f83\u590d\u6742\uff0c\u5efa\u8bae\u5728\u4e0d\u5f71\u54cd\u6548\u7387\u7684\u60c5\u51b5\u4e0b\u4e0d\u59a8\u6cdb\u5316\u5904\u7406\uff08\u89c1\u4ee3\u7801\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm=1e4+10;\nint P;\nchar u[maxm],v[maxm]; int w[maxm];\n//\u5b58\u8fb9\u7684\u6570\u7ec4 \nint dis[200];//'z'==(int)122\nint main(){\n    cin>>P;\n    memset(dis,0x3f,sizeof(dis)); dis['Z']=0;\n    for(int i=1;i<=P;i++) scanf(\" %c %c%d\",&v[i],&u[i],&w[i]);\n    //\u9898\u610f\u544a\u8bc9\u6211\u4eec\u6709\u91cd\u8fb9\u548c\u81ea\u73af,\u4e0d\u8fc7\u7528\u6570\u7ec4\u65b9\u5f0f\u5b58\u8fb9\u662f\u4e0d\u7528\u62c5\u5fc3\u8fd9\u79cd\u60c5\u51b5\u7684 \n    int k=200;\n    //\u4e00\u822c\u60c5\u51b5\u4e0b\uff0ck\u5e94\u8be5\u662fn-1\uff0c\u8fd9\u91cc\u76f4\u63a5\u7528\u4e00\u4e2a\u4e0d\u5f71\u54cd\u6548\u7387\u7684\u8f83\u5927\u6570\u5b57\u4e5f\u662f\u6ca1\u6709\u95ee\u9898\u7684\n    while(k--){\n        bool if_los=false;\n        for(int i=1;i<=P;i++){\n            char &from=u[i],&to=v[i];\n            int &cost=w[i];\n            if(dis[to]>dis[from]+cost){\n                dis[to]=dis[from]+cost;\n                if_los=true;\n            }\n            if(dis[from]>dis[to]+cost){\n                dis[from]=dis[to]+cost;\n                if_los=true;\n            }\n            //\u65e0\u5411\u56fe\u9700\u8981\u53cc\u5411\u677e\u5f1b \n        }\n        if(!if_los) break;\n        //\u6ca1\u6709\u8fdb\u884c\u677e\u5f1b\uff0c\u5219\u6700\u77ed\u8def\u6c42\u89e3\u5b8c\u6bd5 \n    }\n    int ans_dis=INT_MAX;\n    char ans_char;\n    for(int i='A';i<'Z';i++)/*\u53ea\u6709\u5927\u5199\u5b57\u6bcd\u6807\u8bb0\u7684\u519c\u573a\u6709\u5976\u725b*/if(dis[i]<ans_dis){\n        ans_dis=dis[i];\n        ans_char=i;\n    }\n    cout<<ans_char<<\" \"<<ans_dis; \n    return 0;\n}\n```",
        "postTime": 1515827308,
        "uid": 38283,
        "name": "Dog_Two",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "### \u6700\u77ed\u8def\n\n**\u672c\u9898\u7684\u6570\u636e\u8f83\u5f31\uff08\u6700\u591a\u4e5f\u5c3152\u4e2a\u70b9\u7684\u56fe\uff09**\n\n**\u6240\u4ee5\u5404\u8def\u795e\u4ed9\u7b97\u6cd5\u90fd\u53ef\u4ee5\u8fc7\uff08~~\u5305\u62ec\u67d0\u5df2\u6b7b\u7b97\u6cd5~~\uff09**\n\n\u65e2\u7136\u5404\u8def\u7b97\u6cd5\u90fd\u53ef\u4ee5\uff0c\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u7528\u6700\u7b80\u5355\u7684floyd\u5462\n\n**\u4f46\u662f**\uff0c\u867d\u7136\u6570\u636e\u5f88\u5c0f\uff0c\u4f46\u9898\u76ee\u6709\u597d\u51e0\u4e2a\u5751\u70b9\n\n1.**\u91cd\u8fb9\u91cd\u8fb9\u91cd\u8fb9**\uff0c\u6ce8\u610f\u8bfb\u9898\uff0c\u672c\u849f\u84bb\u5c31\u662f\u56e0\u4e3a\u6ca1\u5bf9\u91cd\u8fb9\u8fdb\u884c\u6bd4\u8f83\uff0c**89\u5206---GET**\n\n2.\u6ce8\u610f\u8f93\u5165\u7684\u5f62\u5f0f\u3002\u8fd9\u53ef\u80fd\u662f\u672c\u9898\u552f\u4e00\u7684\u96be\u70b9----**\u5bf9\u5b57\u7b26\u7684\u5904\u7406**\uff0c\u672c\u849f\u84bb\u662f\u76f4\u63a5\u7528**ASK\u2161\u7801\u6765\u8fdb\u884c\u6700\u77ed\u8def\u7684\u677e\u5f1b**\uff0c\u540e\u679c\u5c31\u662f\u8c03\u4e86\u5feb20\u5206\u949f\u3002\u6240\u4ee5\u8fd9\u91cc\u662f\u5efa\u8bae\u5c3d\u91cf\u5904\u7406\u4e00\u4e0b\uff0c\u53d8\u6362\u4e3a\u5e38\u6570\n\n\u4ee3\u7801\u5c31\u8d34\u4e0b\u9762\u4e86\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint f[200][200],Q[200];\nint m,lenth=999999999;\n\nint main()\n{\n\tcin>>m;\n\tmemset(f,0x3f,sizeof(f));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tchar a,b;\n\t\tint c;\n\t\tcin>>a>>b>>c;\n\t\tf[a][b]=f[b][a]=min(f[a][b],c);\n\t\tif(a>='A'&&a<='Z')\n\t\t\tQ[a]=true;\n\t\tif(b>='A'&&b<='Z')\n\t\t\tQ[b]=true;\n\t}\n```\nQ\u662f**\u5224\u65ad\u6570\u7ec4**\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5206\u8fa8\u51fa\u6709\u5976\u725b\u7684\u7ed3\u70b9\n```\n\tQ['Z']=false;//\u7ec8\u70b9\u65e0\u5976\u725b\uff0c\u91cd\u7f6e\u4e3aFALSE\n\tfor(int k=1;k<=160;k++)\n\t\tfor(int i=1;i<=160;i++)\n\t\t\tfor(int j=1;j<=160;j++)\n\t\t\t\tif(f[i][j]>f[i][k]+f[k][j])\n\t\t\t\t\tf[i][j]=f[i][k]+f[k][j];\n\tchar ans;\n\tfor(int i=1;i<=160;i++)\n\t{\n\t\tif(!Q[i])continue;\n\t\tif(f['Z'][i]<lenth)\n\t\t{\n\t\t\tlenth=f['Z'][i];\n\t\t\tans=i;\n\t\t}\n\t}\n\tcout<<ans<<\" \"<<lenth<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1571477205,
        "uid": 224229,
        "name": "Caicz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u603b\u4f53\u6765\u8bf4\u5e76\u4e0d\u96be\uff0c\u7eaf\u6a21\u62df\u5373\u53ef\u3002**\u552f\u4e00\u7684\u96be\u70b9\u5c31\u662f\u5224\u65ad\u65e0\u89e3\u3002**\n\n\u6211\u60f3\u4e86\u633a\u4e45\u6123\u662f\u6ca1\u60f3\u5230\u4ec0\u4e48\u597d\u529e\u6cd5\u3002\u7136\u540e\u6211\u5c31\u52a8\u4e86\u70b9\u6b6a\u8111\u7b4b\u3002\n\n\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u8fd9\u4efd\u6ca1\u6709\u5224\u65ad\u65e0\u89e3\u60c5\u51b5\u7684\u4ee3\u7801(\u6211\u628a\u4ed6\u547d\u540d\u4e3a**\u4ee3\u780167**\uff09\u3002(\u601d\u8def\u4e0e\u5176\u4ed6\u9898\u89e3\u5927\u4f53\u76f8\u540c\u7684\uff0c\u6ce5\u840c\u770b\u4e0d\u61c2\u7684\u8bdd\u4e5f\u53ef\u4ee5\u53bb\u770b\u5176\u4ed6\u9898\u89e3\u7684\u6ce8\u91ca\uff0c\u7136\u540e\u4ed6\u4eec\u5224\u65ad\u65e0\u89e3\u7684\u90e8\u5206\u5148\u5ffd\u7565\u6389\u3002\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n\nconst int N = 12;\nconst int dirx[]={-1,0,1,0},\n          diry[]={0,1,0,-1}; \n\nchar g[N][N];\nint nx,ny;\nint fx,fy;\nint fdir;\nint ndir;\nint step;\n\nbool in_side(int x,int y) {\n    return (x>=1 && x<=10 && y>=1 && y<=10);\n}\n\nvoid Input() {\n    std::ios::sync_with_stdio(false);\n    for(int i=1; i<=10; i++) {\n        for(int j=1; j<=10; j++) {\n            std::cin>>g[i][j];\n            if(g[i][j] == 'F') {\n                fx=i,fy=j;\n            }\n            if(g[i][j] == 'C') {\n                nx=i,ny=j;\n            }\n        }\n    }\n}\n\nvoid Solve() {\n    while(fx != nx || fy != ny) {\n        step++;\n        if(!in_side(fx+dirx[fdir],fy+diry[fdir]) \n        || g[fx+dirx[fdir]][fy+diry[fdir]] == '*') {\n            fdir=(fdir+1)%4;\n        } else {\n            fx+=dirx[fdir],fy+=diry[fdir];\n        }\n        if(!in_side(nx+dirx[ndir],ny+diry[ndir]) \n        || g[nx+dirx[ndir]][ny+diry[ndir]] == '*') {\n            ndir=(ndir+1)%4;\n        } else {\n            nx+=dirx[ndir],ny+=diry[ndir];\n        }\n    }\t \n    std::cout<<step;\n}\n\nint main(void) {\n    Input();\n    Solve();\n    return 0;\n}\n```\n\u8fd9\u4efd\u4ee3\u7801\u4ea4\u4e0a\u53bb\u662f$67$\u5206\uff0c$TLE$\u4e86\u4e09\u4e2a\u70b9\u3002\n\n\u662f$TLE$\u800c\u4e0d\u662f$WA$\uff01\u539f\u56e0\u663e\u800c\u6613\u89c1\uff1a\u5982\u679c\u65e0\u89e3\u7684\u8bdd``while``\u5faa\u73af\u4f1a\u4e00\u76f4\u6267\u884c\u4e0b\u53bb\u76f4\u5230\u8d85\u65f6\u3002\n\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u6027\u8d28\uff1a\n1. \u5982\u679c\u6709\u89e3\u5c31\u8f93\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u5982\u679c\u65e0\u89e3\u5c31\u8f93\u51fa\u96f6\n- **\u4e0d\u80fd\u8d85\u8fc7\u65f6\u95f4\u9650\u5236**\n3. \u8fd9\u9053\u9898\u6709$1.6kAC$\n\n\u4ece\u7b2c\u4e09\u70b9\uff0c\u6211\u4eec\u5148\u80af\u5b9a\u4e86\u8fd9\u9053\u9898\u662f\u53ef\u4ee5$AC$\u7684\u3002\n\n**\u65e2\u53ef\u4ee5$AC$,\u53c8\u4e0d\u80fd\u8d85\u8fc7\u65f6\u95f4\u9650\u5236\u3002**\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa:**\u5982\u679c\u4e00\u4e2a\u6570\u636e\u5728\u65f6\u95f4\u9650\u5236\u5185\u5f97\u4e0d\u5230\u89e3\uff0c\u90a3\u8fd9\u4e2a\u6570\u636e\u4e00\u5b9a\u65e0\u89e3\uff01**\n(\u5f53\u7136\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u662f\u5728\u4fdd\u8bc1\u4e86**\u4ee3\u780167**\u7684\u65f6\u95f4\u6309\u590d\u6742\u5ea6\u8f83\u4f18\u7684\u60c5\u51b5\u4e0b\u5f97\u51fa\u7684\u3002)\n\n\u7531\u8fd9\u4e2a\u7ed3\u8bba\u6211\u4eec\u8fdb\u800c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7279\u522b\u7684\u65e0\u89e3\u5224\u65ad\u65b9\u6cd5\uff1a**\u5224\u65ad\u7a0b\u5e8f\u662f\u5426\u80fd\u5728\u65f6\u95f4\u8303\u56f4\u5185\u5f97\u51fa\u89e3**\n\n\u6211\u60f3\u5230\u4e86\u4e24\u79cd\u65b9\u6cd5\uff1a\n\n\u7b2c\u4e00\u79cd\u662f\u5206\u6790\u7a0b\u5e8f\u7684\u590d\u6742\u5ea6\uff0c\u7136\u540e\u4ece``while``\u5faa\u73af\u7684\u6267\u884c\u6b21\u6570\u5165\u624b:\n\t\n   - **\u4ee3\u780167**\u5f88\u660e\u663e\u662f$o(n)$\u7684\u3002\u6211\u4eec\u5148\u8d34\u4e00\u5f20\u56fe\u3002\n   ![](https://i.loli.net/2019/02/07/5c5baf7976dfe.png)\n   \n   \u5f88\u660e\u663e\uff0c\u5982\u679c``while``\u5faa\u73af\u7684\u6267\u884c\u6b21\u6570\u8d85\u8fc7\u4e86$10^7$\uff0c\u90a3\u5c31\u8d85\u65f6\u4e86\u3002\n   **\u4e8e\u662f\u53ea\u8981\u5728``while``\u5faa\u73af\u91cc\u9762\u52a0\u4e0a\u4e00\u53e5``if(step > 1e7) {printf(\"0\");return ;}``\u5c31\u5b8c\u4e8b\u4e86\u3002**\n\n\u7b2c\u4e8c\u79cd\u662f\u5229\u7528``<ctime>``\u8fd9\u4e2a\u5e93\u76f4\u63a5\u8ba1\u7b97\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u3002\u4f46\u662f\u6211\u592a\u83dc\u4e86\u5e76\u4e0d\u719f\u6089\u600e\u4e48\u7528\u3002\u6709\u5174\u8da3\u7684\u540c\u5b66\u81ea\u884c\u767e\u5ea6\u54af\u3002\n\n\u4e8e\u662f\u6211\u8fd9\u4e0d\u592a\u6b63\u5e38\u7684\u89e3\u6cd5\u5c31$AC$\u4e86\u3002\n\nAC\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n\nconst int N = 12;\nconst int dirx[]={-1,0,1,0},\n          diry[]={0,1,0,-1}; \n\nchar g[N][N];\nint nx,ny;\nint fx,fy;\nint fdir;\nint ndir;\nint step;\n\nbool in_side(int x,int y) {\n    return (x>=1 && x<=10 && y>=1 && y<=10);\n}\n\nvoid Input() {\n    std::ios::sync_with_stdio(false);\n    for(int i=1; i<=10; i++) {\n        for(int j=1; j<=10; j++) {\n            std::cin>>g[i][j];\n            if(g[i][j] == 'F') {\n                fx=i,fy=j;\n            }\n            if(g[i][j] == 'C') {\n                nx=i,ny=j;\n            }\n        }\n    }\n}\n\nvoid Solve() {\n    while(fx != nx || fy != ny) {\n        step++;\n        if(!in_side(fx+dirx[fdir],fy+diry[fdir]) \n        || g[fx+dirx[fdir]][fy+diry[fdir]] == '*') {\n            fdir=(fdir+1)%4;\n        } else {\n            fx+=dirx[fdir],fy+=diry[fdir];\n        }\n        if(!in_side(nx+dirx[ndir],ny+diry[ndir]) \n        || g[nx+dirx[ndir]][ny+diry[ndir]] == '*') {\n            ndir=(ndir+1)%4;\n        } else {\n            nx+=dirx[ndir],ny+=diry[ndir];\n        }\n        if(step > 1e7) {\n            printf(\"0\");\n            return ;\n        }\n    }\t \n    std::cout<<step;\n}\n\nint main(void) {\n    Input();\n    Solve();\n    return 0;\n}\n```\n\u671b\u9898\u89e3\u8fc7\u5ba1\u3002\n",
        "postTime": 1549512892,
        "uid": 77076,
        "name": "Kdlyh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u6d1b\u8c37 P1529 \u56de\u5bb6\n\n- 1 \uff08\u8f93\u5165\uff09 \u521a\u521a\u5f00\u59cb\u770b\u8fd9\u9053\u9898\u7684\u65f6\u5019\u4e0d\u592a\u4f1a\u5b57\u7b26\u4e32\u7684\u540c\u5b66\uff08\u6bd4\u5982\u8bf4\u6211\uff09\uff0c\u90fd\u4f1a\u5bf9\u9898\u76ee\u91cc\u8981\u6c42\u7684\u8f93\u5165\u6709\u4e00\u70b9\u614c\u5f20\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u60f3\u4e00\u60f3\uff0c\u6bd4\u5982\u8fd9\u4e2a\u70b9\u662fA,\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u7528A\u7684ASCLL\u7801\u6765\u8868\u793aA\u8fd9\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8f93\u5165\u65f6\u628a\u4e24\u4e2a\u5b57\u7b26\u53d8\u6210\u5b83\u4eec\u7684ASCLL\u7801\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u7684\u8f93\u5165\u5c31\u5b8c\u6210\u4e86\u3002\n- 2 \uff08work\uff09 \u9898\u76ee\u8981\u6c42\u6211\u4eec\u8f93\u51fa\u8017\u65f6\u6700\u5c0f\u7684\u725b\u6240\u5728\u7684\u7267\u573a\u548c\u5b83\u6240\u7528\u7684\u65f6\u95f4\uff0c\u800c\u4e14\u9898\u76ee\u4e2d\u8bf4\u660e\u4e86\u53ea\u6709\u662fA-Y\u4e2d\u7684\u5b57\u6bcd\u65f6\u624d\u6709\u5976\u725b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5927\u5199\u5b57\u6bcd\u7684\u7267\u573a\u505a\u4e00\u4e2a\u6807\u8bb0\uff0c\u8fd9\u6837\u4e00\u6765\u5728\u4e0b\u4e00\u6b65\u8dd1\u6700\u77ed\u8def\u65f6\u53ef\u4ee5\u5927\u5927\u8282\u7ea6\u6548\u7387\u3002\n- 3 \uff08\u6700\u77ed\u8def\uff09\u7531\u4e8e\u8fd9\u4e2a\u9898\u76ee\u7684\u6570\u636e\u4e0d\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8dd1n\u904dSPFA\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6bcf\u4e00\u6b21\u628a\u5230Z\u7267\u573a\u7684\u6700\u77ed\u8def\u6807\u8bb0\u4e0b\u6765\uff0c\u5982\u679c\u53ef\u4ee5\u66f4\u65b0\u4e4b\u524d\u7684\u7b54\u6848\u5c31\u66f4\u65b0\u4e4b\u524d\u7684\u7b54\u6848\uff0c\u8dd1\u5b8c\u540e\uff0c\u6807\u8bb0\u4e2d\u7684\u70b9\u5373\u4e3a\u7b54\u6848 \u3002\n- 4 \uff08CODE\uff09 \u4ee5\u4e0b\u662f\u6211\u7684\u4ee3\u7801\uff0c\u4e0d\u7ba1\u4f60\u770b\u4e0d\u770b\uff0c\u4f1a\u8fd9\u9053\u9898\u662f\u6700\u91cd\u8981\u7684\u3002\u3002\u3002\n```cpp\n#include <iostream>//\u6240\u6709\u8981\u7528\u5230\u7684\u5934\u6587\u4ef6\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#define N 10002\n#define M 10000007\nusing namespace std;\nqueue <int> qu;//\u961f\u5217\uff0c\u8dd1SPFA\u7684\u65f6\u5019\u8981\u7528\u5230\nstruct edge{\n\tint from;\n\tint to;\n\tint date;\n\tint next;\n}e[M];\nbool have_cow[N],inque[N];\nint n,head[N],vis[N];\nint edge_num;\nvoid add (int x,int y,int z){//\u57fa\u672c\u7684\u52a0\u8fb9\u64cd\u4f5c\n\te[++edge_num].to=y;\n\te[edge_num].date=z;\n\te[edge_num].from=x;\n\te[edge_num].next=head[x];\n\thead[x]=edge_num;\n} \ninline void spfa (int x){//\u4e3b\u4f53\uff0cSPFA\n\tmemset (vis,63,sizeof(vis));\n\tmemset (inque,0,sizeof(inque));\n\tqu.push(x);inque[x]=1;vis[x]=0;\n\twhile(!qu.empty()){\n\t\tint j=qu.front();\n\t\tinque[j]=0;\n\t\tqu.pop();\n\t\tfor (int i=head[j];i;i=e[i].next){\n\t\t\tint k=e[i].to;\n\t\t\tif (vis[k]>vis[j]+e[i].date){\n\t\t\t\tvis[k]=vis[j]+e[i].date;\n\t\t\t\tif (!inque[k]){\n\t\t\t\t\tinque[k]=1;\n\t\t\t\t\tqu.push(k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main () {\n\tscanf (\"%d\",&n);\n\tfor (int i=1;i<=n;i++){\n\t\tchar a,b;int c;\n\t\tcin>>a>>b>>c;\n\t\t//cout<<\"a= \"<<a<<\" b= \"<<b<<\" c= \"<<c<<endl;\n\t\tint x=a,y=b,z=c;\n\t\t//cout<<\"x= \"<<x<<\" y= \"<<y<<\" z= \"<<z<<endl;\n\t\tif (x>='A' && x<='Y') have_cow[x]=1;//\u524d\u8fb9\u8bf4\u7684\u8f93\u5165\u548c\u6807\u8bb0\n\t\tif (y>='A' && y<='Y') have_cow[y]=1;\n\t\tadd (x,y,z);\n\t\tadd (y,x,z);\n\t}\n\tint mins=99999999;\n\tint now_min=0;\n\tfor (int i=65;i<=127;i++){\n\t\tif (have_cow[i]) { //\u5982\u679c\u6709\u6807\u8bb0\u518d\u8dd1\uff0c\u8dd1n\u904dSPFA\n\t\t    spfa (i);\n\t\t    if (vis[90]<mins){\n\t\t\tmins=vis[90];\n\t\t\tnow_min=i;\n\t\t }\n\t  }\n\t}\n\tcout<<(char)now_min<<\" \"<<mins<<endl;//\u6700\u540e\u6807\u8bb0\u5269\u4e0b\u7684\u5c31\u662f\u7b54\u6848\n\t/*for (int i=1;i<=edge_num;i++){\n\t\tint l=e[i].from;\n\t\tint r=e[i].to;\n\t\tcout<<\"edge\"<<i<<\": from \"<<l<<\" to \"<<r<<\" date= \"<<e[i].date<<endl;\n\t}*/\n\treturn 0;\n}\n```",
        "postTime": 1518947525,
        "uid": 54047,
        "name": "\u516e\u6c34XiShui\u4e36",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u8fd9\u9053\u56fe\u8bba\uff0c\u9996\u5148\u662f\u65e0\u5411\u56fe\uff0c\u6211\u7528\u4e86\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\uff0c\u7136\u540e\u8fd8\u8981\u8003\u8651\u6743\u503c\u8986\u76d6\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u8f93\u5165\u7684\u65f6\u5019\u4e24\u4e2a\u7267\u573a\u4e4b\u95f4\u53ef\u80fd\u4f1a\u6709\u8d85\u8fc7\u4e00\u6761\u9053\u8def\u76f8\u8fde\u3002\u7136\u540e\u6211\u7528\u4e86floyed\u7b97\u6cd5\u6c42\u6700\u77ed\u8def\u5c31ok\u4e86\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,x,y,z,t,min_=2000000000,a[60][60];\nchar b,c;\nvoid floyed()\n{\n    for (int k=1;k<=52;++k)\n    for (int i=1;i<=52;++i)\n    for (int j=1;j<=52;++j)\n    if (a[i][k]+a[k][j]<a[i][j]) a[i][j]=a[i][k]+a[k][j];\n}//floyed\u7b97\u6cd5 \nint main()\n{\n    cin>>n;\n    memset(a,10,sizeof(a));//a\u6570\u7ec4\u521d\u59cb\u4e00\u4e2a\u5f88\u5927\u7684\u503c \n    for (int i=1;i<=n;++i)\n    {\n        cin>>b>>c>>z;\n        if (b>='A'&&b<='Z') x=b-64;\n        if (b>='a'&&b<='z') x=b-70;\n        if (c>='A'&&c<='Z') y=c-64;\n        if (c>='a'&&c<='z') y=c-70;//\u56e0\u4e3a\u8f93\u5165\u7684\u662f\u5927\u5c0f\u5199\u5b57\u6bcd\uff0c\u8981\u8f6c\u5316\u4e00\u4e0b \n        a[x][y]=min(a[x][y],z);\n        a[y][x]=min(a[y][x],z);//\u8fd9\u4e24\u53e5\u662f\u8981\u8003\u8651\u6743\u503c\u8986\u76d6\u7684\u95ee\u9898 \n    }\n    floyed();\n    for (int i=1;i<=25;++i)\n    {\n        if (a[26][i]<min_)\n        {\n            min_=a[26][i];\n            t=i;\n        }\n        if (a[i][26]<min_)\n        {\n            min_=a[i][26];\n            t=i;\n        }\n    }//\u627e\u6700\u5c0f\u8def\u5f84 \n    x=char(t+64);//\u56e0\u4e3a\u8f93\u51fa\u7684\u662f\u5b57\u6bcd\uff0c\u8981\u5904\u7406\u4e00\u4e0b \n    cout<<x<<\" \"<<min_;\n    return 0;\n}\n```",
        "postTime": 1506489986,
        "uid": 49254,
        "name": "\u6653\u66e6315",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "##**\u771f\u4e0d\u662f\u5f88\u61c2\u4f60\u4eec\u7528SPFA\u6216\u8005DJ\u7684**\n\n\u660e\u660e\u662f\u4e00\u4e2aFloyd\\_\u53ea\u8981\u4e0d\u4f5c\u6b7b\u5f04\u6210\u5355\u5411\u56fe\\_\u53ef\u4ee5\u641e\u5b9a\u7684\u4e8b\u60c5\n\n\u6ce8\u610f\u5224\u5b9a\u4e00\u4e0b\u6709\u65e0\u5976\u725b\u7684\u4e8b\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#define ff(i,a,b) for(i=a;i<=b;i++)//\u9884\u5b9a\u4e49\nusing namespace std;\nint n,minn=100000000,minm;\nint f[60][60];\nbool s[60];\nchar instead[10];\nint main()\n{\n    int i,j,k,z,xx,yy;\n    char x,y;\n    scanf(\"%d\",&n);gets(instead);\n    ff(i,1,52)\n     ff(j,1,52)\n     {\n         if(i!=j)f[i][j]=100000000;\n     }\n    ff(i,1,n)\n    {\n        scanf(\"%c %c %d\",&x,&y,&z);\n        if(x>='A'&&x<='Z')s[x-'A'+1]=1,xx=x-'A'+1;\n        else xx=x-'a'+27;\n        if(y>='A'&&y<='Z')s[y-'A'+1]=1,yy=y-'A'+1;\n        else yy=y-'a'+27;\n        if(z<f[xx][yy])f[xx][yy]=f[yy][xx]=z;\n        gets(instead);//\u7531\u4e8e\u6d1b\u8c37\u90a3\u4ee4\u4eba\u86cb\u75bc\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u7279\u6b64\u7528\u5b57\u7b26\u4e32\u89e3\u51b3\u95ee\u9898\n    }\n    s[26]=0;//'Z'\u65e0\u5976\u725b\n    \n    //ff(i,1,52)printf(\"%d \",s[i]);\n    ff(k,1,52)\n     ff(i,1,52)\n      ff(j,1,52)\n      {\n          f[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n      }\n    ff(i,1,51)if(f[i][26]<minn&&s[i]==1)minn=f[i][26],minm=i;\n    printf(\"%c %d\\n\",minm+'A'-1,minn);\n    return 0;\n}\n```",
        "postTime": 1494917837,
        "uid": 7020,
        "name": "teafrogsf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u88f8\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8eDijkstra\uff0c\u6211\u4eec\u77e5\u9053\u4ed6\u7684\u677e\u5f1b\u64cd\u4f5c\u65f6\u9700O(n)\u67e5\u627e\u6700\u77ed\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5806\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3aO(log2m)\uff0c\u7efc\u5408\u590d\u6742\u5ea6\u4e3aO(nlgm) -\\_-\n\n\u8003\u8651\u5230\u8fd9\u9053\u9898\u65f6\u6b6a\u679c\u4ec1\u51fa\u7684\uff0c\u4e0d\u4f1a\u5361SPFA\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u9053\u9898SPFA\u6bd4Dij+Heap\u5feb2-3ms\uff0c\u4f46\u662f\u4e0d\u7ba1\u54ea\u4e2a\u90fd\u6bd4\u6807\u51c6Dij\u548cFloyd\u9ad8\u5230\u4e0d\u77e5\u9053\u54ea\u91cc\u53bb\u4e86\uff08\u9003\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff0c\u5b58\u8fb9\u65b9\u5f0f\u662f\u4ece\u7d2b\u4e66\u4e0a\u9762\u501f\u9274\u7684\u4e00\u79cd\u90bb\u63a5\u77e9\u9635\u548c\u90bb\u63a5\u8868\u6df7\u5408\u7684\u65b9\u5f0f\uff0c\u517c\u5177\u4e86\u90bb\u63a5\u8868\u7684\u8282\u7ea6\u7a7a\u95f4\u548c\u90bb\u63a5\u77e9\u9635\u7684\u76f4\u89c2\uff0c\u4e0d\u8fc7\u7531\u4e8e\u4f7f\u7528\u4e86vector\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u5947\u5999\u7684\u5e38\u6570\u3002\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<bitset>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\nconst ll mod=1000000007;//1e9+7\nconst int inf=0x7fffffff;\nconst int maxn=100;\nint n,m;\nstruct Edge{\n    int from,to,dist;\n    Edge(int u,int v,int d):from(u),to(v),dist(d){}\n};\nstruct Dij{\n    vector<Edge> edge;\n    vector<int> G[maxn];\n    bitset<maxn> visd;\n    int d[maxn];\n    int m,n;\n    void clear(int n)\n    {\n        this->n=n;\n        for(int i=1;i<=n;i++)\n            G[i].clear();\n        edge.clear();\n    }\n    void addEdge(int f,int t,int v)\n    {\n        edge.push_back(Edge(f,t,v));\n        G[f].push_back(edge.size()-1);\n    }\n    struct Node{\n        int d,u;\n        bool operator < (const Node& b) const {\n            return d>b.d;\n        }\n    };\n    void Dijkstra(int start)\n    {\n        priority_queue<Node> Q;\n        memset(d,0x3f,sizeof(d));\n        d[start]=0;\n        Q.push((Node){0,start});\n        while(!Q.empty())\n        {\n            Node x=Q.top();\n            int u=x.u;\n            Q.pop();\n            if(visd[u])\n                continue;\n            visd[u]=1;\n            for(int i=0;i<(int)G[u].size();i++)\n            {\n                Edge& e=edge[G[u][i]];\n                if(d[e.to]>e.dist+d[u])\n                {\n                    d[e.to]=e.dist+d[u];\n                    Q.push((Node){d[e.to],e.to});\n                }\n            }\n        }\n    }\n    \n}SL;\n//\u4ee5\u4e0a\u662f\u6240\u6709\u7684Dijkstra\u64cd\u4f5c\uff0c\u5c01\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\n\nint p,v,minn=0x7fffffff,fr,to,ans;\nchar f[5],t[5];\nint main()\n{\n    scanf(\"%d\",&p);\n    SL.clear(60);\n    for(int i=1;i<=p;i++)\n    {\n        scanf(\"%s%s%d\",f,t,&v);\n        fr=f[0]-'A';\n        to=t[0]-'A';\n        SL.addEdge(fr,to,v);\n        SL.addEdge(to,fr,v);\n    }\n    SL.Dijkstra('Z'-'A');\n    for(int i=0;i<='Y'-'A';i++)\n    {\n        if(SL.d[i]<minn)\n        {\n            ans=i;\n            minn=SL.d[i];\n        }\n    }\n    printf(\"%c %d\",ans+'A',minn);\n    return 0;\n}\n//sro tyc\n```",
        "postTime": 1479368887,
        "uid": 18058,
        "name": "Silicon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u8fd9\u9053\u9898\u662f\u6c42\u4e00\u4e2a\u4ee5\u2018Z'\u4e3a\u6839\u8282\u70b9\u5355\u6e90\u6700\u77ed\u8def\u4e2d\u7684\u8def\u5f84\u6700\u77ed\u7684\u5927\u5199\u5b57\u6bcd\u8282\u70b9\n\n\u5f88\u81ea\u7136\u5730\u4f1a\u60f3\u5230\u7528dijkstra\u561b\n\n\u4e3a\u4ec0\u4e48\u90fd\u7528floyd\u5462\u3002\u5b9e\u9a8c\u8868\u660edijkstra\u6bd4floyd\u786e\u5b9e\u8981\u5feb\u90a3\u4e48\u4e00\u4e9b\n\n\u5176\u5b9e\u5bf9\u4e8e\u8fd9\u79cd\u7a20\u5bc6\u56fe\u6700\u597d\u5e94\u7528\u90bb\u63a5\u77e9\u9635\uff08\u5220\u53bb\u4e00\u4e9b\u6ca1\u7528\u7684\u8fb9\uff0c\u6bd4\u5982\u51e0\u6761\u8fde\u63a5\u4e24\u4e2a\u76f8\u540c\u8282\u70b9\u7684\u8fb9\u53ea\u53d6\u5176\u4e2d\u6700\u77ed\u7684\u4e00\u6761\uff09\n\n\u6211\u8fd9\u91cc\u53ea\u662f\u60f3\u7814\u7a76\u4e00\u4e0b\u90bb\u63a5\u8868\u7684\u4f18\u5316\u3002\n\n\u8fd8\u6709\uff0c\u5176\u5b9epascal\u5bf9\u5b57\u7b26\u7684\u8fd0\u7528\u80fd\u529b\u5f88\u5f3a\uff0c\u6ca1\u5fc5\u8981\u8f6cascall\u7801\n\n\u4e8c\u8bdd\u4e0d\u8bf4\u4e0a\u4ee3\u7801\n\n\n\n\n\n\n```cpp\ntype\n  adj=record\n    last,wei:longint;  //last\u5b58\u50a8\u8fd9\u4e2a\u8282\u70b9\u5728\u94fe\u8868\u4e2d\u7684\u4e0a\u4e00\u6761\u8fb9\u7684\u5730\u5740\uff0cwei\u5b58\u50a8\u6743\u503c\n    too:char; //too\u5b58\u50a8\u8fd9\u6761\u8fb9\u6307\u5411\u90a3\u4e2a\u8282\u70b9\n  end;\nconst caps=['A'..'Z'];\nvar\n  all:set of 'A'..'z'; \n  a:array['A'..'z','A'..'z'] of longint; //a\u5b58\u50a8\u8fd9\u6761\u8fb9\u5728\u94fe\u8868\u4e2d\u7684\u5730\u5740\uff0c\u5982\u679c\u4e0d\u5728\u94fe\u8868\u4e2d\u5219\u4e3a0\n  edge:array[1..20000] of adj; //\u90bb\u63a5\u8868\n  head,min:array['A'..'z'] of longint; //head\u5b58\u50a8\u8282\u70b9\u5728\u94fe\u8868\u4e2d\u6700\u540e\u4e00\u6761\u8fb9\u7684\u5730\u5740\n  nedge,v,e,z,k,minw:longint;\n  x,xx,y,yy,i,j,minv:char;\nprocedure add(a,b:char; w:longint); //\u5c06\u8fb9\u63d2\u5165\nbegin\n  inc(nedge);\n  edge[nedge].last:=head[a];\n  edge[nedge].too:=b;\n  edge[nedge].wei:=w;\n  head[a]:=nedge;\nend;\nprocedure find; //\u627e\u51fa\u6700\u5c0f\u503c\nbegin\n  for i:='A' to 'z' do\n  if (i in all) and (min[i]<minw) then\n    begin\n      minw:=min[i];\n      minv:=i;\n    end;\nend;\nprocedure readin;\nbegin\n  readln(e);\n  nedge:=0;\n  fillchar(head,sizeof(head),0);\n  for k:=1 to e do\n  begin\n    readln(x,xx,y,yy,z);\n    if (a[x,y]<>0) and (edge[a[x,y]].wei>z) then\n    begin\n      edge[a[x,y]].wei:=z;\n      edge[a[y,x]].wei:=z;\n      continue;\n    end; //\u5982\u679c\u8fd9\u6761\u8fb9\u5df2\u7ecf\u8bfb\u8fc7\u800c\u4e14\u65b0\u8bfb\u5165\u7684\u6743\u503c\u66f4\u5c0f\u5219\u66ff\u6362\u539f\u6765\u7684\u6743\u503c\uff0c\u76f8\u5f53\u4e8e\u7ed9\u4ed6\u5347\u7ea7\n    if a[x,y]<>0 then continue; //\u4e0d\u7136\u4e0d\u5904\u7406\n    if x=y then continue; //\u81ea\u5df1\u6307\u81ea\u5df1\u65e0\u610f\u4e49\n    all:=all+[y];\n    all:=all+[x]; //\u52a0\u5165\u9876\u70b9\u96c6\u5408all\n    add(x,y,z);\n    a[x,y]:=nedge;//\u8fd9\u6761\u8fb9\u662f\u65b0\u8bfb\u5165\u7684\u8981\u8bb0\u5f55\u5730\u5740\n    add(y,x,z);\n    a[y,x]:=nedge;\n  end;\nend;\nbegin\n  readin;\n  all:=all-['Z']; //\u9884\u5904\u7406\u7b2c\u4e00\u4e2a\u70b9'Z'\uff0c\u73b0\u5728all\u7528\u6765\u5b58\u50a8\u5f85\u5904\u7406\u7684\u8282\u70b9\n  k:=head['Z']; \n  for i:='A' to 'z' do\n  begin\n    min[i]:=maxlongint;\n  end;\n  min['Z']:=0;\n  while k>0 do\n  if min[edge[k].too]>edge[k].wei then\n  begin\n    min[edge[k].too]:=edge[k].wei;\n    k:=edge[k].last;\n  end;  \n  while all<>[] do //dijkstra\n  begin\n    minw:=maxlongint;\n    find;\n    if minv in caps then //dijkstra\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u5c31\u662f\u6700\u5c0f\u7684\n    begin\n      write(minv,' ',minw);\n      halt;\n    end;\n    k:=head[minv];\n    while (k>0) do  //\u677e\u5f1b\n    begin\n      if min[edge[k].too]>edge[k].wei+minw then\n      min[edge[k].too]:=edge[k].wei+minw;\n      k:=edge[k].last;\n    end;\n    all:=all-[minv];\n  end;\nend.\n```",
        "postTime": 1470880411,
        "uid": 9791,
        "name": "\u6c5f\u6d77\u5bc4\u4f59\u751f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u6765\u4e00\u4e2a\u4e0d\u7528\u90bb\u63a5\u77e9\u9635\uff0c\u5806\u4f18\u5316\u7684$dijkstra$\u5427\u3002\n\n\u9898\u76ee\u663e\u7136\u8981\u6c42\u7ec8\u70b9$'Z'$\u5230\u5176\u5b83\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n\u663e\u7136\u4e00\u904d$dijksstra$\u8dd1\u51fa\u6765\u3002\n\n\u8003\u8651\u9898\u76ee\u7ec6\u8282\u3002\n\n\u9996\u5148\uff0c\u6ce8\u610f\u53ea\u6709\u5927\u5199\u5b57\u6bcd\u7684\u70b9\u624d\u7b97\u8d77\u70b9\uff0c\u5176\u5b83\u7684\u90fd\u662f\u4e2d\u8f6c\u7ad9\u3002\u6240\u4ee5\uff0c\u6700\u540e\u904d\u5386\u53d6$min$\u7684\u65f6\u5019\u6ce8\u610f\u7279\u5224\u3002\n\n\u4e0d\u9700\u8981\u7279\u522b\u6ce8\u610f\u5b57\u6bcd\uff0c\u76f4\u63a5\u8f6c$ASCLL$\u7801\u8f6c\u6210$int$\u5373\u53ef\u3002\n\n\u9898\u76ee\u5f97\u89e3\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<queue>\nusing namespace std;\n#define inf 2147483647\nint m,vis[500000],tot,ans=inf,p;\nint dis[500000],head[500000];\nchar x,y;\nstruct edge{\n\tint next,to,dis;\n}e[500000];\nstruct node{\n\tint dis,pos;\n\tbool operator <(const node&x)const{\n\t\treturn x.dis<dis;\n\t}\n};\npriority_queue<node>q;\ninline void add(int u,int v,int w){\n\te[++tot].to=v;\n\te[tot].next=head[u];\n\te[tot].dis=w;\n\thead[u]=tot;\n}\nvoid dijkstra(){\n\tdis['Z']=0;\n\tq.push((node){0,'Z'});\n\twhile(!q.empty()){\n\t\tnode tmp=q.top();\n\t\tq.pop();\n\t\tint u=tmp.pos;\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>dis[u]+e[i].dis){\n\t\t\t\tdis[v]=dis[u]+e[i].dis;\n\t\t\t\tif(!vis[v])q.push((node){dis[v],v});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=200;++i)dis[i]=inf;\n\tfor(int i=1;i<=m;++i){\n\t\tcin>>x>>y;\n\t\tint w;\n\t\tscanf(\"%d\",&w);\n\t\tadd(x,y,w);add(y,x,w);\n\t}\n\tdijkstra();\n\t//printf(\"%d\\n\",dis['B']);\n\tfor(int i='A';i<='z';++i){\n\t\tif(i=='Z'||dis[i]==0||dis[i]==inf||i>'Z')continue;\n\t\tif(dis[i]<ans){\n\t\t\tans=dis[i];\n\t\t\tp=i;\n\t\t}\n\t}printf(\"%c %d\",p,ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1563255857,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\n\u88ab\u8fd9\u9898\u6076\u5fc3\u4e86\u4e00\u4e0b\u5348\u2026\u2026\u7279\u5730\u6765\u6c34\u4e00\u53d1\u9898\u89e3\n## \u5751\u70b9\uff1a\u65e0\u5411\u8fb9\n\n\u9898\u610f\u5176\u5b9e\u5f88\u6e05\u695a\uff0c\u5c31\u662f\u6c42\u6bcf\u4e2a\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u56fe\u53cd\u8fc7\u6765\u5efa\uff0c\u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\u53cd\u7740\u8dd1\n\n\u5f53\u7136\u8fd9\u662f\u5bf9\u4e8e\u6709\u5411\u56fe\u6765\u8bf4\uff0c\u6bd5\u7adf\u8fd9\u9898\u662f\u4e2a\u65e0\u5411\u56fe\n\n\u8fd9\u6837\u9898\u76ee\u5c31\u53d8\u6210\u4e86\u6c42\u7ec8\u70b9\u5230\u4efb\u610f\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u70b9\u7684\u6700\u77ed\u8def\u5f84\n\n\u53e6\u5916\uff0c\u5bf9\u4e8e\u5b57\u6bcd\u7684\u95ee\u9898\uff0c\u76f4\u63a5\u4f7f\u7528ascll\u7801\u5c31\u53ef\u4ee5~~\u6bd5\u7adf\u6211\u61d2~~\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=10005;\nint n;\nvector<int> son[maxn],v[maxn];\nint dis[maxn],tim=0;\nint vis[maxn];\nstruct node{\n\tint x;\n\tint dis;\n\tbool operator < (const node &a)const \n\t{\n\t\treturn dis > a.dis;//\u5c0f\u6839\u5806 \n\t}\n};\n\nvoid Set(char prt,char to,int d)\n{\n\tson[(int)prt].push_back((int)to);//\u89c1\u5230char\u5c31\u8f6c\u6210int \n\tv[(int)prt].push_back(d);\n}\npriority_queue<node> q;\n#define to son[rt.x][i] \nvoid Dijkstra(int S)\n{\n\tfor(int i=0;i<maxn;i++)\n\t{\n\t\tdis[i]=0x7fffffff;\n\t}\n\tdis[S]=0;//\u8d77\u70b9 \n\tint res=0;\n\ttim++;//\u65f6\u95f4\u6233 \n\tq.push((node){S,0});//\u538b\u5165\u8d77\u70b9 \n\twhile(!q.empty())\n\t{\n\t\tnode rt=q.top();\n\t\tq.pop();\n\t\tif(vis[rt.x]==tim)\n\t\t{\n\t\t\tcontinue;//\u88ab\u8bbf\u95ee\u8fc7 \n\t\t}\n\t\tvis[rt.x]=tim;\n\t\tfor(int i=0;i<son[rt.x].size();i++)//\u679a\u4e3e\u6240\u6709\u53ef\u4ee5\u5230\u8fbe\u7684\u5730\u65b9 \n\t\t{\n\t\t\tif(dis[to]>dis[rt.x]+v[rt.x][i])//\u8ddd\u79bb\u66f4\u4f18 \n\t\t\t{\n\t\t\t\tdis[to]=dis[rt.x]+v[rt.x][i];//\u66f4\u65b0 \n\t\t\t\tq.push((node){to,dis[to]});//\u5f3a\u8f6c\u7ed3\u6784\u4f53 \n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tchar x[10],y[10];\n\t\tint z;\n\t\tscanf(\"%s%s%d\",x,y,&z);\n\t\tif(x[0]==y[0])continue;\n\t\tSet(y[0],x[0],z);//vector\u5efa\u8fb9 \n\t\tSet(x[0],y[0],z);\n\t}\n\tDijkstra((int)'Z');//\u4ece\u7ec8\u70b9\u5f00\u59cb\u8dd1 \n\tchar ans='0';\n\tint anss=99999;//\u4ece\u7ec8\u70b9\u5230\u6240\u6709\u5927\u5199\u5b57\u6bcd\u7684\u6700\u77ed\u8def \n\tfor(int i=(int)'A';i<(int)'Z';i++)\n\t{\n\t\tif(dis[i]<anss)\n\t\t{\n\t\t\tanss=dis[i];\n\t\t\tans=(char)i;\n\t\t}\n\t}\n\tprintf(\"%c %d\",ans,anss);\n\treturn 0;\n}\n\n```",
        "postTime": 1534324232,
        "uid": 52577,
        "name": "404_notfound",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u867d\u7136\u6709\u4e0e\u6211\u76f8\u7c7b\u4f3c\u7684\u89e3\u6cd5\uff0c\u4f46\u5176\u5b9e\u8fd8\u6709\u4e0d\u540c\u7684\u563b\u563b\u563b\n\n\u6211\u7684\u601d\u8def\u662f\u5c06\u7267\u573a\u7684\u5b57\u7b26\u76f4\u63a5\u8f6c\u5316\u6210ascll\u7801\u7684\u5f62\u5f0f\uff0c\u7136\u540e\u8f93\u51fa\u65f6\u76f4\u63a5\u5c06\u2018A\u2019-\u2018Z\u2019\u6bd4\u8f83\uff0c\u6240\u4ee5\u5462\u5c31\u4e0d\u7528\u62c5\u5fc3\u7a7a\u7267\u573a\u7684\u95ee\u9898\u4e86\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint p,minn=0x7fffffff;\nstruct edge\n{\n\tint next,to,dist;\n} e[200000];\nqueue<int>q;//\u8fd9\u91cc\u5c31\u7528\u4e00\u4e0bc++\u9ed1\u79d1\u6280\u5427\uff0c\u624b\u5199\u961f\u5217\u771f\u7684\u96be\u5199 \nint head[200000],tot,dis[200000],vis[200000];\ninline void add(int x,int y,int z)\n{\n\te[++tot].next=head[x];\n\te[tot].to=y;\n\te[tot].dist=z;\n\thead[x]=tot;\n}//\u90bb\u63a5\u94fe\u8868 \nvoid spfa(int s)\n{\n\twhile(!q.empty())q.pop();\n\tfor(int i=65; i<=122; i++)dis[i]=0x7fffffff;\n\tdis[s]=0;\n\tq.push(s);\n\tvis[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tfor(int i=head[u],v; v=e[i].to,i; i=e[i].next)\n\t\t\tif(e[i].dist+dis[u]<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+e[i].dist;\n\t\t\t\tif(!vis[v])\n\t\t\t\t\tvis[v]=1,q.push(v);\n\t\t\t}\n\t}\n}//spfa\u7b97\u6cd5\uff0c\u8fd9\u867d\u7136\u662f\u4e2a\u677f\u5b50\uff0c\u4f46\u662f\u6bd4\u8f83\u597d\u7528 \nint main()\n{\n\tcin>>p;\n\tfor(int i=1; i<=p; i++)\n\t{\n\t\tchar a,b;\n\t\tint c;\n\t\tcin>>a>>b>>c;\n\t\tadd(int(a),int(b),c);\n\t\tadd(int(b),int(a),c);\n\t}\n\t//\u8fd9\u91cc\u6211\u7684\u601d\u8def\u662f\u76f4\u63a5\u5c06\u5b57\u7b26\u53d8\u4e3aascll\u7801\uff0c\u4e4b\u540e\u76f4\u63a5\u7528ascll\u7801\u6765\u5b58\u50a8\u56fe\n\t//\u4e0d\u8981\u5fd8\u8bb0\u5efa\u7acb\u53cc\u5411\u8fb9 \n\tint w;\n\tspfa(90);//\u4ece\u7ec8\u70b9\u5f00\u59cb\u8bad\u5bfb\u627e \n\tfor(int i=65; i<=90; i++)\n\t{\n\t\tif(minn>dis[i]&&i!=90&&dis[i]!=0x7fffffff)//\u5bfb\u627e\u6700\u5c0f\u503c \n\t\t{\n\t\t\tminn=dis[i];\n\t\t\tw=i;\n\t\t}\n\t}\n\tcout<<char(w)<<' '<<minn;//\u6309\u8981\u6c42\u8f93\u51fa \n}\n```\n\u7ba1\u7406\u5927\u5927\u6c42\u8fc7\u4e48\u4e48\u54d2",
        "postTime": 1522465374,
        "uid": 78228,
        "name": "\u6211\u6ca1\u6709\u5c0f\u767d",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1529 \u3010\u56de\u5bb6 Bessie Come Home\u3011"
    }
]