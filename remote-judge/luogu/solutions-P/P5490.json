[
    {
        "content": "# \u626b\u63cf\u7ebf\n\u626b\u63cf\u7ebf\u662f\u4e00\u79cd\u6c42\u77e9\u5f62\u9762\u79ef\u5e76/\u5468\u957f\u5e76\u7684\u597d\u65b9\u6cd5\u3002~~**\u542c\u8bf4\u4eca\u5e74\u8003\u5230\u7684\u6982\u7387\u8fd8\u6bd4\u8f83\u5927\uff08\u9003**~~\n\n\\[2020.03.23\\] **\u66f4\u65b0\uff1a** CSP-S 2019\u5e76\u6ca1\u6709\u8003\u5230\u626b\u63cf\u7ebf\uff0c\u8138\u597d\u75bc\u2026\n\n---\n\n**\u626b\u63cf\u7ebf**\uff1a\u5047\u8bbe\u6709\u4e00\u6761\u626b\u63cf\u7ebf\u4ece\u4e00\u4e2a\u56fe\u5f62\u7684\u4e0b\u65b9\u626b\u5411\u4e0a\u65b9\uff08\u6216\u8005\u5de6\u65b9\u626b\u5230\u53f3\u65b9\uff09\uff0c\u90a3\u4e48\u901a\u8fc7\u5206\u6790\u626b\u63cf\u7ebf\u88ab\u56fe\u5f62\u622a\u5f97\u7684\u7ebf\u6bb5\u5c31\u80fd\u83b7\u5f97\u6240\u8981\u7684\u7ed3\u679c\u3002\u8be5\u8fc7\u7a0b\u53ef\u4ee5\u7528**\u7ebf\u6bb5\u6811**\u8fdb\u884c\u52a0\u901f\u3002\n\n# \u9762\u79ef\u5e76\n**\u4f8b\u9898** [P5490](https://www.luogu.org/problem/P5490) / [POJ 1151](http://poj.org/problem?id=1151)\n\n\u8fd9\u4e24\u9053\u9898\u90fd\u662f\u6c42**\u9762\u79ef\u5e76**\u3002\n\n\u7531\u4e8e\u90fd\u662f\u77e9\u5f62\uff0c\u56e0\u6b64\u8fd0\u7528\u626b\u63cf\u7ebf\u4ee5\u540e\uff0c\u9762\u79ef\u7684\u6c42\u6cd5\u5176\u5b9e\u53ef\u4ee5\u7b80\u5316\u4e3a $\\sum$\u622a\u7ebf\u6bb5\u957f\u5ea6$\\times$\u626b\u8fc7\u7684\u9ad8\u5ea6\u3002\u8fd9\u4e5f\u662f\u626b\u63cf\u7ebf\u7b97\u6cd5\u6700\u57fa\u7840\u7684\u5e94\u7528\u3002\n\n\u8003\u8651\u4ee5\u4e0b\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002\n\n![image.png](https://img.ffis.me/images/2019/08/10/image.png)\n\n\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u624d\u80fd\u6a21\u62df\u626b\u63cf\u7ebf\u4ece\u4e0b\u5411\u4e0a\u626b\u8fc7\u56fe\u5f62\uff0c\u5e76\u4e14\u5feb\u901f\u8ba1\u7b97\u51fa\u5f53\u524d\u626b\u63cf\u7ebf\u88ab\u622a\u5f97\u7684\u957f\u5ea6\u3002\n\n\u73b0\u5728\u5047\u8bbe\uff0c\u626b\u63cf\u7ebf\u6bcf\u6b21\u4f1a\u5728\u78b0\u5230\u6a2a\u8fb9\u7684\u65f6\u5019\u505c\u4e0b\u6765\uff0c\u5982\u56fe\u3002\n\n![image1cba39d5beb42edc.png](https://img.ffis.me/images/2019/08/10/image1cba39d5beb42edc.png)\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u53ef\u5bf9\u56fe\u5f62\u9762\u79ef\u4ea7\u751f\u5f71\u54cd\u7684\u5143\u7d20\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e9b\u6a2a\u8fb9\u5de6\u53f3\u7aef\u70b9\u7684\u5750\u6807\u3002\n\n\u4e3a\u4e86\u5feb\u901f\u8ba1\u7b97\u51fa\u622a\u7ebf\u6bb5\u957f\u5ea6\uff0c\u53ef\u4ee5\u5c06\u6a2a\u8fb9\u8d4b\u4e0a\u4e0d\u540c\u7684\u6743\u503c\uff0c\u5177\u4f53\u4e3a\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62\uff0c\u5176\u4e0b\u8fb9\u6743\u503c\u4e3a$1$\uff0c\u4e0a\u8fb9\u6743\u503c\u4e3a$-1$\u3002\n\n![image805e198e60891448.png](https://img.ffis.me/images/2019/08/10/image805e198e60891448.png)\n\n\u7136\u540e\u628a\u6240\u6709\u7684\u6a2a\u8fb9\u6309\u7167$y$\u5750\u6807\u5347\u5e8f\u6392\u5e8f\u3002\u8fd9\u6837\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u77e9\u5f62\uff0c\u626b\u63cf\u7ebf\u603b\u662f\u4f1a**\u5148\u78b0\u5230\u4e0b\u8fb9\uff0c\u7136\u540e\u518d\u78b0\u5230\u4e0a\u8fb9**\u3002\u90a3\u4e48\u5c31\u80fd\u4fdd\u8bc1\u626b\u63cf\u7ebf\u6240\u622a\u7684\u957f\u5ea6\u6c38\u8fdc\u975e\u8d1f\u4e86\u3002\n\n\u8fd9\u6837\u64cd\u4f5c\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u548c\u7ebf\u6bb5\u6811\u626f\u4e0a\u5173\u7cfb\u3002\u5148\u628a\u6240\u6709\u7aef\u70b9\u5728$x$\u8f74\u4e0a\u79bb\u6563\u5316\uff08\u5176\u5b9e\u5c31\u662f\u628a\u6240\u6709\u70b9\u7684\u6a2a\u5750\u6807\u5b58\u5230$X[]$\u91cc\uff0c\u7136\u540e\u5347\u5e8f\u6392\u4e2a\u5e8f\uff0c\u6700\u540e\u53bb\u91cd\uff09\u3002\n\n![imagec6ca891e8480bea8.png](https://img.ffis.me/images/2019/08/10/imagec6ca891e8480bea8.png)\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c$4$\u4e2a\u7aef\u70b9\u7684\u7eb5\u6295\u5f71\u603b\u5171\u628a$x$\u8f74\u5207\u5272\u6210\u4e86$5$\u90e8\u5206\u3002\u53d6\u4e2d\u95f4\u7684$3$\u90e8\u5206\u7ebf\u6bb5\uff0c\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5176\u6bcf\u4e2a\u7aef\u70b9\u7ef4\u62a4**\u4e00\u6761\u7ebf\u6bb5**\uff08\u4e5f\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\uff09\u7684\u4fe1\u606f\uff1a\n1. \u8be5\u7ebf\u6bb5\u88ab\u8986\u76d6\u4e86\u591a\u5c11\u6b21\uff08\u88ab\u591a\u5c11\u4e2a\u77e9\u5f62\u6240\u8986\u76d6\uff09\u3002\n2. \u8be5\u7ebf\u6bb5\u5185\u88ab\u6574\u4e2a\u56fe\u5f62\u6240\u622a\u7684\u957f\u5ea6\u662f\u591a\u5c11\u3002\n\n![image0a03aa15aca4877e.png](https://img.ffis.me/images/2019/08/10/image0a03aa15aca4877e.png)\n\n\u663e\u7136\uff0c\u53ea\u8981\u4e00\u6761\u7ebf\u6bb5\u88ab\u8986\u76d6\uff0c\u90a3\u4e48\u5b83\u80af\u5b9a\u88ab\u56fe\u5f62\u6240\u622a\u3002\u6240\u4ee5\uff0c\u6574\u4e2a\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a**\u533a\u95f4\u67e5\u8be2\u95ee\u9898**\uff0c\u5373\uff1a\u6bcf\u6b21\u5c06 \u5f53\u524d\u626b\u63cf\u7ebf\u626b\u5230\u7684\u8fb9 \u5bf9\u5e94\u7684\u4fe1\u606f \u6309\u7167\u4e4b\u524d\u8d4b\u4e0a\u7684\u6743\u503c\u66f4\u65b0\uff0c\u7136\u540e\u518d\u67e5\u8be2\u7ebf\u6bb5\u6811\u6839\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u6700\u540e\u5f97\u5230\u5f53\u524d\u626b\u63cf\u7ebf\u626b\u8fc7\u7684\u9762\u79ef\u3002\u8fd9\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u5b9e\u73b0\u4e86\uff08\u6bd5\u7adf\u4eba\u5bb6\u53eb **\u201c\u7ebf\u6bb5\u201d** \u6811\u561b\uff09\u3002\n\n### \u4e0b\u9762\u662f\u6a21\u62df\u7684\u8fc7\u7a0b\uff1a\n\n![imaged818935608ff1757.png](https://img.ffis.me/images/2019/08/10/imaged818935608ff1757.png)\n\n![image65ecdba6bd78c3ce.png](https://img.ffis.me/images/2019/08/10/image65ecdba6bd78c3ce.png)\n\n\u6ce8\uff1a\u4e0a\u56fe\u7684$5$\u53f7\u8282\u70b9\u7684$sum=2$\uff0c\u7eff\u8272\u90e8\u5206\u8868\u793a\u5df2\u8ba1\u7b97\u7684\u9762\u79ef\u3002\n\n![image8f0d94e5f164aef1.png](https://img.ffis.me/images/2019/08/10/image8f0d94e5f164aef1.png)\n\n![image82b25ef8956c45ad.png](https://img.ffis.me/images/2019/08/15/image.png)\n\n\u8fd8\u5269\u4e0b\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\uff1a\u7ebf\u6bb5\u6811\u5230\u5e95\u8be5\u600e\u4e48\u5efa\uff1f\u4fdd\u5b58\u4ec0\u4e48\u4fe1\u606f\uff1f\u600e\u4e48\u5728\u8282\u70b9\u95f4\u4f20\u9012\u4fe1\u606f\uff1f\n\n\u8fd9\u91cc\u6211\u4f7f\u7528\u81ea\u5df1\u6700\u4e60\u60ef\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\uff0c\u4e2a\u4eba\u611f\u89c9\u8fd9\u6837\u7684\u903b\u8f91\u6700\u6e05\u6670\u3002\n\n\u5148\u770b\u4e0b\u9762\u7684\u5efa\u6811\u8fc7\u7a0b\uff1a\n```cpp\nvoid build_tree(int x, int l, int r) {\n//\t\u521d\u59cb\u5316\u8282\u70b9\u4fe1\u606f\n\tif(l == r)\n\t\treturn;\n\tint mid = (l + r) >> 1;\n\tbuild_tree(lson, l, mid);\n\tbuild_tree(rson, mid + 1, r);\n\treturn;\n}\n```\n\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u8fd9\u68f5\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5bf9\u5e94\u4e86\u4e00\u6761\u7ebf\u6bb5\u3002\u8003\u8651\u5c06\u7ebf\u6bb5\u6811\u4e0a\u8282\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u548c\u6a2a\u8fb9\u5efa\u7acb**\u6620\u5c04\u5173\u7cfb**\u3002\u5148\u770b\u5bf9\u4e8e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9$x$\uff0c\u5efa\u6811\u65f6\u4fdd\u8bc1\u4e86$tree[x].l=tree[x].r$\uff0c\u4f46\u5176\u4fdd\u5b58\u7684\u4fe1\u606f\u5f88\u663e\u7136\u4e0d\u53ef\u80fd\u53ea\u662f\u67d0\u6761\u7ebf\u6bb5\u7684\u4e00\u4e2a\u7aef\u70b9\uff08\u5982\u679c\u4e00\u6761\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u91cd\u5408\uff0c\u90a3\u4e48\u5b83\u5b9e\u8d28\u4e0a\u4ec5\u662f\u4e00\u4e2a\u70b9\uff09\u3002\u518d\u770b\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\uff0c\u540c\u6837\u5730\uff0c\u5efa\u6811\u7684\u65f6\u5019\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u5de6\u53f3\u513f\u5b50\u7684\u533a\u95f4\u4e0d\u4f1a\u91cd\u5408\uff08\u4ea4\u96c6\u4e3a\u7a7a\uff09\uff0c\u4f46\u662f\u770b\u8fd9\u6837\u4e24\u6761\u76f8\u90bb\u7ebf\u6bb5\uff1a$[1,2],[2,3],$\u4f60\u4f1a\u53d1\u73b0$[1,2]\\cap[2,3]=\\{2\\}$\uff0c\u4e5f\u5c31\u662f\u8bf4\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9\u548c\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\u5176\u5b9e\u662f\u91cd\u5408\u7684\u3002\u6240\u4ee5\u5982\u679c\u60f3\u5f97\u592a\u7b80\u5355\uff0c\u5c31gg\u4e86\u3002\n\n\u8003\u8651\u628a\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9$x$\u5bf9\u5e94\u7684\u533a\u95f4\uff08$tree[x].l,tree[x].r$\uff09\u4e0d\u53d8\uff0c\u6539\u53d8\u533a\u95f4\u548c\u6a2a\u8fb9\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5177\u4f53\u4e3a\uff1a\u8282\u70b9$x$\u5bf9\u5e94$[X[tree[x].l],\\,X[tree[x].r+1]]$\u8fd9\u6761\u6a2a\u8fb9\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc~~\u5f88\u673a\u667a\u5730~~\u628a\u53f3\u7aef\u70b9\u7684\u5bf9\u5e94\u5173\u7cfb\u7ed9\u6539\u4e86\u4e0b\uff0c\u4e8e\u662f\u5c31\u517c\u5bb9\u4e86\u3002\n\n\u81ea\u6211\u611f\u89c9\u4ee3\u7801\u5df2\u7ecf\u8db3\u591f\u6e05\u6670\u4e86\uff0c\u6ce8\u91ca\u8fd8\u6709\u5176\u5b83\u89e3\u91ca\u3002\n\n**\u6ce8\u610f\u4e00\u4e0b\uff1a** \u53d8\u91cf\u540d\u201c$y1$\u201d\u5728<cmath>\u5e93\u91cc\u5934\u6709\u5b9a\u4e49\uff0c\u4f1a\u51b2\u7a81\uff0c\u6240\u4ee5\u4e0d\u5f00bits\u5e93\u5c31\u597d\u3002\n\n### \u8fd9\u9053\u9898\u7684\u4ee3\u7801\uff1a\n```cpp\n//  code for P5490\n//  \u4ee3\u7801\u6ca1\u6709\u6316\u5751\n#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#define lson (x << 1)\n#define rson (x << 1 | 1)\nusing namespace std;\nconst int MAXN = 1e6 + 10;\ntypedef long long ll;\n\nint n, cnt = 0;\nll x1, y1, x2, y2, X[MAXN << 1];\n\nstruct ScanLine {\n\tll l, r, h;\n\tint mark;\n//  mark\u7528\u4e8e\u4fdd\u5b58\u6743\u503c (1 / -1)\n\tbool operator < (const ScanLine &rhs) const {\n\t\treturn h < rhs.h;\n\t}\n} line[MAXN << 1];\n\nstruct SegTree {\n\tint l, r, sum;\n\tll len;\n//  sum: \u88ab\u5b8c\u5168\u8986\u76d6\u7684\u6b21\u6570\uff1b\n//  len: \u533a\u95f4\u5185\u88ab\u622a\u7684\u957f\u5ea6\u3002\n} tree[MAXN << 2];\n\nvoid build_tree(int x, int l, int r) {\n//  \u6211\u89c9\u5f97\u6700\u4e0d\u5bb9\u6613\u5199\u9519\u7684\u4e00\u79cd\u5efa\u6811\u65b9\u6cd5\n\ttree[x].l = l, tree[x].r = r;\n\ttree[x].len = 0;\n\ttree[x].sum = 0;\n\tif(l == r)\n\t\treturn;\n\tint mid = (l + r) >> 1;\n\tbuild_tree(lson, l, mid);\n\tbuild_tree(rson, mid + 1, r);\n\treturn;\n}\n\nvoid pushup(int x) {\n\tint l = tree[x].l, r = tree[x].r;\n\tif(tree[x].sum /* \u4e5f\u5c31\u662f\u8bf4\u88ab\u8986\u76d6\u8fc7 */ )\n\t\ttree[x].len = X[r + 1] - X[l];\n//      \u66f4\u65b0\u957f\u5ea6        \n\telse\n\t\ttree[x].len = tree[lson].len + tree[rson].len;\n//      \u5408\u5e76\u513f\u5b50\u4fe1\u606f\n}\n\nvoid edit_tree(int x, ll L, ll R, int c) {\n\tint l = tree[x].l, r = tree[x].r;\n//  \u6ce8\u610f\uff0cl\u3001r\u548cL\u3001R\u7684\u610f\u4e49\u5b8c\u5168\u4e0d\u540c\n//  l\u3001r\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u7ba1\u8f96\u7684\u4e0b\u6807\u8303\u56f4\n//  \u800cL\u3001R\u5219\u8868\u793a\u9700\u8981\u4fee\u6539\u7684\u771f\u5b9e\u533a\u95f4\n\tif(X[r + 1] <= L || R <= X[l])\n\t\treturn;\n//  \u8fd9\u91cc\u52a0\u7b49\u53f7\u7684\u539f\u56e0\uff1a\n//  \u5047\u8bbe\u73b0\u5728\u8003\u8651 [2,5], [5,8] \u4e24\u6761\u7ebf\u6bb5\uff0c\u8981\u4fee\u6539 [1,5] \u533a\u95f4\u7684sum\n//  \u5f88\u660e\u663e\uff0c\u867d\u71365\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\uff0c[5,8] \u5374\u5e76\u4e0d\u662f\u6211\u4eec\u5e0c\u671b\u4fee\u6539\u7684\u7ebf\u6bb5\n//  \u6240\u4ee5\u603b\u7ed3\u4e00\u4e0b\uff0c\u5c31\u52a0\u4e0a\u4e86\u7b49\u53f7\n\tif(L <= X[l] && X[r + 1] <= R) {\n\t\ttree[x].sum += c;\n\t\tpushup(x);\n\t\treturn;\n\t}\n\tedit_tree(lson, L, R, c);\n\tedit_tree(rson, L, R, c);\n\tpushup(x);\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++) {\n\t\tscanf(\"%lli %lli %lli %lli\", &x1, &y1, &x2, &y2);\n\t\tX[2 * i - 1] = x1, X[2 * i] = x2;\n\t\tline[2 * i - 1] = (ScanLine) {x1, x2, y1, 1};\n\t\tline[2 * i] = (ScanLine) {x1, x2, y2, -1};\n//      \u4e00\u6761\u7ebf\u6bb5\u542b\u4e24\u4e2a\u7aef\u70b9\uff0c\u4e00\u4e2a\u77e9\u5f62\u7684\u4e0a\u4e0b\u8fb9\u90fd\u9700\u8981\u626b\u63cf\u7ebf\u626b\u8fc7\n\t}\n\tn <<= 1;\n//  \u76f4\u63a5\u628a n <<= 1 \u65b9\u4fbf\u64cd\u4f5c\n\tsort(line + 1, line + n + 1);\n\tsort(X + 1, X + n + 1);\n\tint tot = unique(X + 1, X + n + 1) - X - 1;\n//  \u53bb\u91cd\u6700\u7b80\u5355\u7684\u65b9\u6cd5\uff1a\u4f7f\u7528unique\uff01\uff08\u5728<algorithm>\u5e93\u4e2d\uff09\n\tbuild_tree(1, 1, tot - 1);\n//  \u4e3a\u4ec0\u4e48\u662f tot - 1 \uff1a\n//  \u56e0\u4e3a\u53f3\u7aef\u70b9\u7684\u5bf9\u5e94\u5173\u7cfb\u5df2\u7ecf\u88ab\u7be1\u6539\u4e86\u561b\u2026\n//  [1, tot - 1]\u63cf\u8ff0\u7684\u5c31\u662f[X[1], X[tot]]\n\tll ans = 0;\n\tfor(int i = 1; i < n /* \u6700\u540e\u4e00\u6761\u8fb9\u662f\u4e0d\u7528\u7ba1\u7684 */ ; i++) {\n\t\tedit_tree(1, line[i].l, line[i].r, line[i].mark);\n//      \u5148\u628a\u626b\u63cf\u7ebf\u4fe1\u606f\u5bfc\u5165\u7ebf\u6bb5\u6811\n\t\tans += tree[1].len * (line[i + 1].h - line[i].h);\n//      \u7136\u540e\u7edf\u8ba1\u9762\u79ef\n\t}\n\tprintf(\"%lli\", ans);\n\treturn 0;\n}\n```\n\n---\n\n### POJ 1151\u7684\u8bdd\u2026\n\u628aP5490\u4ee3\u7801\u6539\u4e00\u6539\u5c31\u8fc7\u4e86\uff0c\u6240\u4ee5\u5c31\u4e0d\u653e\u4e86\u3002\n\n---\n# \u5468\u957f\u5e76\n                        \n**\u4f8b\u9898** [POJ 1177](http://poj.org/problem?id=1177)\n                        \n\u5468\u957f\u5e76\u6bd4\u9762\u79ef\u5e76\u8fd8\u8981\u9ebb\u70e6\u4e9b ~~\uff08\u753b\u56fe\u4e5f\u8981\u9ebb\u70e6\u4e9b\uff0c\u6240\u4ee5\u6211\u5c31\u5077\u61d2\u4e86\uff09~~\uff0c\u6211\u76f4\u63a5\u62ffPOJ 1177\u7684\u6837\u4f8b\u6765\u4e3e\u4f8b\u5b50\uff1a\n\n![imaged3ade113f8ed97a4.png](https://img.ffis.me/images/2019/08/10/imaged3ade113f8ed97a4.png)\n\n\u89c2\u5bdf\u8fd9\u4e09\u6761\u626b\u63cf\u7ebf\u626b\u8fc7\u7684\u7eb5\u8fb9\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u6bd4\u8f83\u53d8\u5e7b\u83ab\u6d4b\uff0c\u603b\u7ed3\u4e00\u4e0b\u663e\u7136\u6709\u8fd9\u6837\u4e00\u4e2a\u6709\u8da3\u7684\u73b0\u8c61\uff1a\u7eb5\u8fb9\u603b\u957f\u5ea6$=\\sum2\\times$\u88ab\u622a\u5f97\u7684\u7ebf\u6bb5\u6761\u6570$\\times$\u626b\u8fc7\u7684\u9ad8\u5ea6\u3002\n\n\u518d\u770b\u8fd9\u4e2a\uff1a\n\n![image875b5bc59b29c404.png](https://img.ffis.me/images/2019/08/10/image875b5bc59b29c404.png)\n\n\u4e8b\u60c5\u5c31\u66f4\u52a0 ~~\u6076\u5fc3~~ \u6709\u8da3\u4e86\uff0c\u4f60\u4f1a\u53d1\u73b0\u6a2a\u8fb9\u603b\u957f\u5ea6$=\\sum|$\u4e0a\u6b21\u622a\u5f97\u7684\u603b\u957f$-$\u73b0\u5728\u622a\u5f97\u7684\u603b\u957f$|$\u3002\n\n\u6240\u4ee5\u548c\u9762\u79ef\u5e76\u6bd4\u8d77\u6765\uff0c\u5468\u957f\u5e76\u4e2d\u7684\u7ebf\u6bb5\u6811\u8fd8\u8981\u7ef4\u62a4 **\u7ebf\u6bb5\u7684\u6761\u6570**\u3002\u53e6\u5916\uff0c\u6a2a\u8fb9\u548c\u7eb5\u8fb9\u9700\u5206\u522b\u8ba1\u7b97\u3002\n\n\u5269\u4f59\u7684\u4ee3\u7801\u6ce8\u91ca\u6709\u8bb2\u3002\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <algorithm>\n#define lson (x << 1)\n#define rson (x << 1 | 1)\nusing namespace std;\nconst int MAXN = 2e4;\nint n, X[MAXN << 1];\nint x1, y1, x2, y2, pre = 0; /* \u5148\u521d\u59cb\u5316\u4e3a 0 */\n\nstruct ScanLine {\n\tint l, r, h, mark;\n\tif(h == rhs.h)\n\t\treturn mark > rhs.mark;\n    return h < rhs.h;\n//\t\t\u6ce8\u610f\uff01\u8fd9\u91cc\u662f\u540e\u6765\u88ab hack \u6389\u4ee5\u540e\u52a0\u4e0a\u53bb\u7684\n//\t\t\u5728\u6b64\u611f\u8c22 @leprechaun_kdl \u6307\u51fa\u95ee\u9898\n//\t\t\u5982\u679c\u51fa\u73b0\u4e86\u4e24\u6761\u9ad8\u5ea6\u76f8\u540c\u7684\u626b\u63cf\u7ebf\uff0c\u4e5f\u5c31\u662f\u4e24\u77e9\u5f62\u76f8\u90bb\n//\t\t\u90a3\u4e48\u9700\u8981\u5148\u626b\u5e95\u8fb9\u518d\u626b\u9876\u8fb9\uff0c\u5426\u5219\u5c31\u4f1a\u591a\u7b97\u8fd9\u6761\u8fb9\n//\t\t\u8fd9\u4e2a\u5bf9\u9762\u79ef\u5e76\u65e0\u5f71\u54cd\u4f46\u5bf9\u5468\u957f\u5e76\u6709\u5f71\u54cd\n//\t\thack \u6570\u636e\uff1a2 0 0 4 4 0 4 4 8 \u8f93\u51fa\u5e94\u4e3a\uff1a24\n} line[MAXN];\n\nstruct SegTree {\n\tint l, r, sum, len, c;\n//  c\u8868\u793a\u533a\u95f4\u7ebf\u6bb5\u6761\u6570\n    bool lc, rc;\n//  lc, rc\u5206\u522b\u8868\u793a\u5de6\u3001\u53f3\u7aef\u70b9\u662f\u5426\u88ab\u8986\u76d6\n//  \u7edf\u8ba1\u7ebf\u6bb5\u6761\u6570(tree[x].c)\u4f1a\u7528\u5230\n} tree[MAXN << 2];\n\nvoid build_tree(int x, int l, int r) {\n\ttree[x].l = l, tree[x].r = r;\n\ttree[x].lc = tree[x].rc = false;\n\ttree[x].sum = tree[x].len = 0;\n\ttree[x].c = 0;\n\tif(l == r)\n\t\treturn;\n\tint mid = (l + r) >> 1;\n\tbuild_tree(lson, l, mid);\n\tbuild_tree(rson, mid + 1, r);\n}\n\nvoid pushup(int x) {\n\tint l = tree[x].l, r = tree[x].r;\n\tif(tree[x].sum) {\n\t\ttree[x].len = X[r + 1] - X[l];\n\t\ttree[x].lc = tree[x].rc = true;\n\t\ttree[x].c = 1;\n//      \u505a\u597d\u76f8\u5e94\u7684\u6807\u8bb0\n\t}\n\telse {\n\t\ttree[x].len = tree[lson].len + tree[rson].len;\n\t\ttree[x].lc = tree[lson].lc, tree[x].rc = tree[rson].rc;\n\t\ttree[x].c = tree[lson].c + tree[rson].c;\n//      \u5982\u679c\u5de6\u513f\u5b50\u5de6\u7aef\u70b9\u88ab\u8986\u76d6\uff0c\u90a3\u4e48\u81ea\u5df1\u7684\u5de6\u7aef\u70b9\u4e5f\u80af\u5b9a\u88ab\u8986\u76d6\uff1b\u53f3\u513f\u5b50\u540c\u7406\n\t\tif(tree[lson].rc && tree[rson].lc)\n\t\t\ttree[x].c -= 1;\n//      \u5982\u679c\u505a\u513f\u5b50\u53f3\u7aef\u70b9\u548c\u53f3\u513f\u5b50\u5de6\u7aef\u70b9\u90fd\u88ab\u8986\u76d6\uff0c\n//      \u90a3\u4e48\u4e2d\u95f4\u5c31\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u6240\u4ee5\u8981 -= 1\n\t}\n}\n\nvoid edit_tree(int x, int L, int R, int c) {\n\tint l = tree[x].l, r = tree[x].r;\n\tif(X[l] >= R || X[r + 1] <= L)\n\t\treturn;\n\tif(L <= X[l] && X[r + 1] <= R) {\n\t\ttree[x].sum += c;\n\t\tpushup(x);\n\t\treturn;\n\t}\n\tedit_tree(lson, L, R, c);\n\tedit_tree(rson, L, R, c);\n\tpushup(x);\n}\n\nScanLine make_line(int l, int r, int h, int mark) {\n\tScanLine res;\n\tres.l = l, res.r = r,\n\tres.h = h, res.mark = mark;\n\treturn res;\n}\n//  POJ \u4e0d\u8fd9\u6837\u505a\u5c31\u4f1aCE\uff0c\u5f88\u96be\u53d7\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++) {\n\t\tscanf(\"%d %d %d %d\", &x1, &y1, &x2, &y2);\n\t\tline[i * 2 - 1] = make_line(x1, x2, y1, 1);\n\t\tline[i * 2] = make_line(x1, x2, y2, -1);\n\t\tX[i * 2 - 1] = x1, X[i * 2] = x2;\n\t}\n\tn <<= 1;\n\tsort(line + 1, line + n + 1);\n\tsort(X + 1, X + n + 1);\n\tint tot = unique(X + 1, X + n + 1) - X - 1;\n\tbuild_tree(1, 1, tot - 1);\n\tint res = 0;\n\tfor(int i = 1; i < n; i++) {\n\t\tedit_tree(1, line[i].l, line[i].r, line[i].mark);\n\t\tres += abs(pre - tree[1].len);\n\t\tpre = tree[1].len;\n//      \u7edf\u8ba1\u6a2a\u8fb9\n\t\tres += 2 * tree[1].c * (line[i + 1].h - line[i].h);\n//      \u7edf\u8ba1\u7eb5\u8fb9\n\t}\n\tres += line[n].r - line[n].l;\n//  \u7279\u5224\u4e00\u4e0b\u679a\u4e3e\u4e0d\u5230\u7684\u6700\u540e\u4e00\u6761\u626b\u63cf\u7ebf\n\tprintf(\"%d\", res);\n\treturn 0;\n}\n```\n\u6211\u89c9\u5f97\u81ea\u5df1\u8bb2\u5f97\u591f\u6e05\u6670\u4e86 (=$\\small\\triangledown$=)",
        "postTime": 1565424180,
        "uid": 60258,
        "name": "NCC79601",
        "ccfLevel": 7,
        "title": "\u3010\u5b66\u4e60\u7b14\u8bb0\u3011\u626b\u63cf\u7ebf"
    },
    {
        "content": "\u672c\u9898\u89e3\u4e3b\u8981\u662f\u4e3a\u4e86\u60f3\u8981\u5b66\u4e60\u626b\u63cf\u7ebf\u7b97\u6cd5\u7684\u540c\u5b66\u51c6\u5907\u7684\u3002\n\n\u5728\u5f00\u59cb\u5b66\u4e60\u672c\u7b97\u6cd5\u524d\uff0c\u4f60\u9700\u8981\u4f1a\uff1a\n\n- ## [\u7ebf\u6bb5\u6811](https://www.luogu.org/blog/pks-LOVING/senior-data-structure-qian-tan-xian-duan-shu-segment-tree)\n\n- ## [\u79bb\u6563\u5316](https://www.jianshu.com/p/9347659dcf18)\n\n\u6ca1\u4e86\u2026\u2026\n\n# \u5207\u5165\u6b63\u9898\n\n\u672c\u9898\u7ed9\u51fa\u4e86n\u4e2a\u77e9\u5f62\uff0c\u6c42\u51fa\u5b83\u4eec\u5728\u5e73\u9762\u4e0a\u8986\u76d6\u7684\u9762\u79ef\u3002\n\n\u7136\u540e\u6211\u4eec\u5f00\u59cb\u601d\u8003\u2026\u2026\n\n\u9996\u5148\uff0c$0\\le$x1,x2,y1,y2$\\le10^{9}$\uff0c\u4e00\u770b\u5c31\u77e5\u9053\u53ef\u4ee5\u901a\u8fc7\u79bb\u6563\u5316\u6765\u7f29\u5c0f\u8303\u56f4\u3002\n\n\u4e8e\u662f $0\\sim 10^{9}\\Rightarrow1\\sim 10^{5}$, \u723d\u3002\n\n\u6240\u4ee5\u7136\u540e\u548b\u529e\uff1f\uff1f\uff1f\n\n# 1. \u66b4\u529bfor\u5faa\u73af\uff1f\n\n~~\u618b\u60f3\u4e86\uff0cMLE+TLE~~\n\n# 2. \u5bb9\u65a5\u5b9a\u7406\uff1f\n\n~~\u6ca1\u5b66\u8fc7\u6ca1\u5173\u7cfb\uff0c\u53cd\u6b63\u662f\u9519\u7684~~\n\n\u628a\u6240\u6709\u7684\u77e9\u5f62\u9762\u79ef\u76f8\u52a0\uff0c\u7136\u540e\u51cf\u53bb\u91cd\u53e0\u90e8\u5206\uff1f\n\n~~\u618b\u60f3\u4e86\uff0c\u70e6\u6b7b\u4f60~~\n\n### \u90a3\u548b\u529e\n\n**\uff08\u6572\u9ed1\u677f\uff09\u6b63\u89e3\u6765\u5566\uff01\uff01\uff01**\n\n# 3. \u5206\u5272\u56fe\u5f62\uff1f\n\n\u6bd4\u5982\u2026\u2026\n\n![\u9171\u7d2b](https://cdn.luogu.com.cn/upload/pic/70275.png)\n\n\u597d\u50cf\u53ef\u884c\uff01\n\nbut\u5177\u4f53\u600e\u4e48\u64cd\u4f5c\u5462\uff1f\n\n\u770b\u5230\u6700\u540e\u4e00\u6b65\u56fe\u7247\u7684\u865a\u7ebf\u4e86\u5417\uff1f\n\n\u6240\u4ee5\u2026\u2026\n\n\u662f\u4e0d\u662f\u6709\u4e00\u70b9\u60f3\u6cd5\u4e86\u5462\uff1f\n\n\u7136\u540e\u6211\u4eec\u518d\u6765\u6a21\u62df\u4e00\u6ce2\u2026\u2026\n\n![\u9171\u7d2b](https://s2.ax1x.com/2019/08/08/eTuDjP.gif)\n\n\u7b54\u6848\u662f\u4e0d\u662f\u547c\u4e4b\u6b32\u51fa\u4e86\u5462\uff01\n\n**\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e00\u6761\u7ad6\u76f4\u65b9\u5411\u4e0a\u7684\u7ebf\u6bb5\uff08\u4e00\u4e2a\u542bx\u5750\u6807\uff0c\u4e0a\u7aefy\u5750\u6807y1\uff0c\u4e0b\u7aefy\u5750\u6807y2\uff0c\u52a0\u51cf\u7684\u6807\u8bb0k\u7684\u56db\u5143\u7ec4(x,y1,y2,k)\uff09\u7136\u540e\u79bb\u6563\u5316(\u5f97\u5230\u79bb\u6563\u5316\u540e\u7684\u503cval(y)\uff0c\u79bb\u6563\u5316\u503c\u5bf9\u5e94\u7684y\u503craw(i))\uff0c\u6309\u7167x\u5750\u6807\u8fdb\u884c\u6392\u5e8f\uff1b**\n\n\u53d8\u6210\u8fd9\u6837\u2193\n\n![\u5982\u6b64](https://cdn.luogu.com.cn/upload/pic/70291.png)\n\n\u7136\u540e\u7ef4\u62a4\u626b\u63cf\u7ebf\u4e0a\u88ab\u8986\u76d6\u7684\u957f\u5ea6\u5c31\u597d\u4e86\uff01\uff01\uff01\n\n\u6700\u540e\u2026\u2026\u5982\u4f55\u7ef4\u62a4\u8fd9\u6761\u626b\u63cf\u7ebf\u5462\uff1f\n\n### \u7ebf\u6bb5\u6811\u6a2a\u7a7a\u51fa\u4e16\uff01\n\n\u6bcf\u6b21\u4fee\u6539\u4e4b\u540e\uff0c\u66f4\u65b0\u7ebf\u6bb5\u6811\u4e2d\u8282\u70b9\u7684len(\u88ab\u8986\u76d6\u7684\u957f\u5ea6)\n\n\u76f8\u4fe1\u4f1a\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u90fd\u80fd\u72ec\u7acb\u5b8c\u6210~~\u6240\u4ee5\u5c31\u4e0d\u8d34\u4ee3\u7801\u4e86~~\n\n**\u81f3\u6b64\uff0c\u672c\u9898\u5df2\u7ecf \u57fa\u672c\u4e0a \u89e3\u51b3\u4e86\uff01**\n\n\u4e3a\u4ec0\u4e48\u8bf4\u662f\u57fa\u672c\u4e0a\u5462\uff1f\u5f53\u7136\u662f\u8fd8\u6709\u4f18\u5316\u5566~\n\n\uff08\u8fd9\u624d\u662f\u4f60\u4e0a\u9762\u4e0d\u8d34\u4ee3\u7801\u7684\u539f\u56e0\u5427\uff01\uff01\uff01\uff09\n\n\uff08\u597d\u597d\u597d\u4e0b\u9762\u6211\u7edd\u5bf9\u8d34\u2026\u2026\uff09\n\n\u533a\u95f4\u4fee\u6539\u7684\u5ef6\u65f6\u6807\u8bb0\u592a\u9ebb\u70e6\u4e86\u2026\u2026~~\u7b97\u4e86\u4e0d\u5199\u4e86~~\n\n\u4e14\u6162\uff01\u8fd9\u9898\u8fd8\u6709\u4e0d\u7528\u5ef6\u65f6\u6807\u8bb0\u7684\u4f18\u5316\uff01\n\n### \u8bdd\u8bf4\u5ef6\u65f6\u6807\u8bb0\u2026\u2026\n\n\u662f\u4e00\u79cd \u4f7f\u533a\u95f4\u4fee\u6539\u4e0d\u7528\u5168\u90e8\u4e0b\u4f20\u81f3\u53f6\u5b50\u8282\u70b9\uff0c\u5728\u67e5\u8be2**\u5b50\u8282\u70b9\u7684\u503c**\u65f6\u624d\u4e0b\u4f20\uff0c\u4ece\u800c\u4fdd\u8bc1\u5728$O\\left( \\log n\\right)$\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u64cd\u4f5c\u7684\u65b9\u6cd5\u2026\u2026\n\n\u67e5\u8be2\u5b50\u8282\u70b9\u7684\u503c\uff1f\uff1f\uff1f\n\n\u6211\u4eec\u4e0d\u662f\u53ea\u67e5\u8be2\u5168\u56fe\u6700\u4f4e\u70b9\u5230\u6700\u9ad8\u70b9\u7684\u503c\uff0c\u4e5f\u5c31\u662f\uff0c\u6839\u8282\u70b9\u7684\u503c\u5417\uff1f\n\n\u90a3\u7ba1\u513f\u5b50\u8282\u70b9\u7684\u4e8b\u5e72\u561b\uff0c~~\u8ba9\u4ed6\u4eec\u81ea\u751f\u81ea\u706d\u5f97\u4e86~~\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u60f3\u5230\uff0c\u9664\u5de6\u53f3\u7aef\u70b9`l,r`\u4e4b\u5916\uff0c\u5728\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ef4\u62a4\u4e24\u4e2a\u503c\uff1a\u8be5\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u88ab\u77e9\u5f62\u8986\u76d6\u7684\u957f\u5ea6len\uff0c\u8be5\u8282\u70b9\u81ea\u8eab\u88ab\u8986\u76d6\u7684\u6b21\u6570cnt\u3002\u6700\u521d\uff0c\u4e8c\u8005\u5747\u4e3a0.\n\n_\u5bf9\u4e8e\u6bcf\u4e00\u4e2a`(x,y1,y2,k)`\uff0c\u6211\u4eec\u518d`[val(y1),val(y2)-1]`\u4e0a\u6267\u884c\u671f\u95f4\u4fee\u6539\u3002\u8be5\u533a\u95f4\u88ab\u7ebf\u6bb5\u6811\u5212\u5206\u6210 $\\log n$\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u8282\u70b9\u7684cnt\u90fd\u52a0k\u3002_\n\n _\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e2d\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 `[l,r]` \uff0c\u82e5`cnt>0`\uff0c\u5219`len`\u7b49\u4e8e`raw(r+1)-raw(l)`,\u5426\u5219\uff0c\u8be5\u5e97`len`\u7b49\u4e8e\u4e24\u4e2a\u5b50\u8282\u70b9\u7684`len`\u4e4b\u548c\u3002\u5728\u4e00\u4e2a\u8282\u70b9\u7684`cnt`\u88ab\u4fee\u6539\uff0c\u4ee5\u53ca\u7ebf\u6bb5\u6811\u4ece\u4e0b\u5f80\u4e0a\u4f20\u9012\u4fe1\u606f\u65f6\uff0c\u6211\u4eec\u90fd\u6309\u7167\u8be5\u65b9\u6cd5\u66f4\u65b0`len`\u503c\u3002\u6839\u8282\u70b9\u7684`len`\u503c\u5c31\u662f\u6574\u4e2a\u626b\u63cf\u7ebf\u4e0a\u88ab\u8986\u76d6\u7684\u957f\u5ea6_ \n \n\u2014\u2014from \u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\n\n\u5230\u8fd9\u91cc\u8fd9\u7bc7\u9898\u89e3\u4e5f\u5c31\u5b8c\u7f8e\u7ed3\u675f\u4e86\u2026\u2026\n\n~~\u662f\u4e0d\u662f\u5fd8\u4e86\u4e9b\u4ec0\u4e48~~\n\n# code time:\n\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\n#define ls (rt << 1)//\u5de6\u513f\u5b50\n#define rs (rt << 1 | 1)//\u53f3\u513f\u5b50\n#define int long long\nint n, x_, x__, y_, y__, x, y, rk[2097152], val[2097152], cnt, maxn = 1 << 31;\n\n//\u6ce8\u610f\uff1a\u7528\u4e07\u80fd\u5e93\u7684\u540c\u5b66\u5343\u4e07\u4e0d\u8981\u4ee5x1,x2,y1,y2\u4f5c\u4e3a\u53d8\u91cf\u540d!!!!!!\n//maxn\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u4f1a\u53bb\u7406\u5de6\u53f3\u7aef\u70b9 \n\nstruct Segment_tree\n{\n\tint l, r;//\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\n\tint cnt, len;//\u5982\u4e0a\u6240\u8ff0\n}t[2097152];\n\nstruct node\n{\n\tint x, yh, yl, flag;\n}e[2097152];//\u8bb0\u5f55\u6bcf\u4e00\u6761\u7ad6\u7ebf\n\nvoid pushup(int rt)\n{\n\tif ((t[rt].l == maxn && t[rt].r == maxn)) return;\n\tif (t[rt].cnt) t[rt].len = val[t[rt].r + 1] - val[t[rt].l];\n\telse t[rt].len = t[ls].len + t[rs].len;\n}//\u5411\u4e0a\u66f4\u65b0\u8282\u70b9\n\nvoid build(int rt, int l, int r)\n{\n\tt[rt].l = l, t[rt].r = r;\n\tif (l == r) return;\n\tint mid = (t[rt].l + t[rt].r) >> 1;\n\tbuild(ls, l, mid);\n\tbuild(rs, mid + 1, r);\n}\n\nvoid add(int rt, int l, int r, int v)\n{\n\tif (l <= t[rt].l && t[rt].r <= r)\n\t{\n\t\tt[rt].cnt += v;\n\t\tpushup(rt);\n\t\treturn;\n\t}\n\tint mid = (t[rt].l + t[rt].r) >> 1;\n\tif (l <= mid) add(ls, l, r, v);\n\tif (mid < r) add(rs, l, r, v);\n\tpushup(rt);\n}//\u57fa\u672c\u64cd\u4f5c\uff0c\u4e0d\u518d\u8d58\u8ff0\n\nbool cmp(node a, node b)\n{\n\tif (a.x != b.x) return a.x < b.x;\n\treturn a.flag > b.flag;\n}\n\nsigned main()\n{\n\tcin >> n;\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%lld%lld%lld%lld\", &x_, &y_, &x__, &y__);\n\t\te[(i << 1) - 1].x = x_, e[i << 1].x = x__;\n\t\te[(i << 1) - 1].yh = e[i << 1].yh = y__;\n\t\te[(i << 1) - 1].yl = e[i << 1].yl = y_;\n\t\te[(i << 1) - 1].flag = 1, e[i << 1].flag = -1;//flag\u8868\u793a\u8be5\u8fb9\u662f\u77e9\u5f62\u7684\u5de6\u8fb9\u754c\u6216\u53f3\u8fb9\u754c\n\t\trk[++cnt] = y_; \n\t\trk[++cnt] = y__;//\u5b58\u5165\u4e00\u4e2a\u6570\u7ec4\uff0c\u51c6\u5907\u79bb\u6563\u5316\n\t}\n\tsort(rk + 1, rk + (n << 1) + 1);//\u6392\u5e8f\n\tcnt = unique(rk + 1, rk + (n << 1) + 1) - rk - 1;//\u53bb\u91cd\n\tfor (int i = 1; i <= 2 * n; i++)\n\t{\n\t\tint pos1 = lower_bound(rk + 1, rk + cnt + 1, e[i].yh) - rk;\n\t\tint pos2 = lower_bound(rk + 1, rk + cnt + 1, e[i].yl) - rk;//\u5728\u6570\u7ec4\u4e2d\u4e8c\u5206\u67e5\u627e\u4f4d\u7f6e\n\t\tval[pos1] = e[i].yh;\n\t\tval[pos2] = e[i].yl;//\u5373\u4e3a\u4e0a\u6587\u7684raw\u6570\u7ec4\n\t\te[i].yh = pos1; maxn = max(maxn, pos1);\n\t\te[i].yl = pos2;\n\t}\n\tsort(e + 1, e + 2 * n + 1, cmp);//\u6309\u7167x\u5750\u6807\n\tbuild(1, 1, n << 1);\n\tfor (int i = 1; i < n << 1; i++)\n\t{\n\t\tadd(1, e[i].yl, e[i].yh - 1, e[i].flag);//\u533a\u95f4\u52a0flag\n\t\tans += t[1].len * (e[i + 1].x - e[i].x);//\u6839\u8282\u70b9\u7684len\u503c*\u4e0e\u4e0b\u4e00\u6761\u7ebf\u6bb5\u7684\u8ddd\u79bb=\u8fd9\u4e00\u5757\u5185\u7684\u77e9\u5f62\u9762\u79ef\n\t}\n\tcout << ans << endl;//\u5f97\u5230\u6700\u7ec8\u7b54\u6848,AC!\n\treturn 0;\n}\n```\n\n[$ \\Huge\\textsf{\\textbf{\\color{white}\u597d \u5eb7 \u7684}}$ ](https://magcius.github.io/xplain/article/regions.html)",
        "postTime": 1565252488,
        "uid": 36908,
        "name": "Gu_Pigeon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u7bc7\u626b\u63cf\u7ebf\u7684\u9898\u89e3....\n\n\u672c\u6587\u5305\u62ec\uff1a\n\n1. \u79bb\u6563\u5316\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u5e94\u7528\n\n1. \u624b\u628a\u624b\u7684\u5efa\u7acb\u626b\u63cf\u7ebf\n\n1. \u4ee3\u7801\u7684\u5177\u4f53\u5206\u6790\n\n\n------------\n\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u4f60\u5fc5\u987b\u719f\u7ec3\u638c\u63e1\n\n- \u79bb\u6563\u5316\n\n- \u7ebf\u6bb5\u6811\n\n\u68c0\u6d4b\u79bb\u6563\u5316\u5b70\u4e0d\u719f\u7ec3\u7684\u65b9\u5f0f\u6709[P1955](https://www.luogu.org/problem/P1955)\n\n\u79bb\u6563\u5316\u771f\u7684\u5f88\u91cd\u8981\uff0c\u5f53\u65f6\u4f5c\u4e3a\u4e00\u4e2a\u4ec0\u4e48\u79bb\u6563\u5316\u90fd\u4e0d\u61c2\u7684\u840c\u65b0\u8bfb\u626b\u63cf\u7ebf\u7684\u4ee3\u7801\u771f\u7684\u4ec0\u4e48\u90fd\u770b\u4e0d\u61c2\n\n# 1. \u79bb\u6563\u5316\n\n\u5728\u8fdb\u884c\u626b\u63cf\u7ebf\u4e4b\u524d\u5fc5\u987b\u8981\u666e\u53ca\u79bb\u6563\u5316\u7684\u6982\u5ff5\u548c\u610f\u4e49\n\n\u9996\u5148\u4ec0\u4e48\u662f\u79bb\u6563\u5316\uff1f\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u79bb\u6563\u5316\uff1f\n\n\u79bb\u6563\u5316\u662f\u628a\u4e00\u7cfb\u5217\u6570\u5b57\uff0c\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217\u540e\uff0c\u80fd\u591f\u5feb\u901f\u627e\u5230\u8fd9\u4e2a\u6570\u7ec4\u7b2ck\u5927\u7684\u6570\u5b57\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u79bb\u6563\u5316\n\n\uff08\u5982\u679c\u4f60\u53d1\u73b0\u4e0e\u5b9a\u4e49\u4e0d\u540c\uff0c\u6ca1\u5173\u7cfb\uff0c\u6211\u53ea\u662f\u76f4\u63a5\u4ece\u4ee3\u7801\u51fa\u53d1\u800c\u5df2\uff09\n\n\u5206\u6790\u4e00\u4e0b\uff1a\u4f60\u8981\u627e\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7b2ck\u5927\u7684\u6570\u5b57\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u7684\u601d\u8def\u662f**\u76f4\u63a5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee**\uff1a\n\n\u4e3e\u4e2a\u6817\u5b50\uff0c\u5982\u679c\u8981\u8bbf\u95ee\u7b2ck\u5927\u7684\u6570\uff0c\u6700\u7b80\u5355\u7c97\u66b4\u7684\u8bbf\u95ee\u65b9\u5f0f\u5c31\u662fa[k]\uff0c\u90a3\u4e48\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n1. \u76ee\u6807\uff1a\u76f4\u63a5\u8bbf\u95ee\u4e0b\u6807\u6765\u8fbe\u5230\u8bbf\u95ee\u7b2ck\u5927\u7684\u6570\uff0c\u90a3\u4e48\u9700\u8981\u5148\u628aa\u6570\u7ec4\u6392\u4e00\u904d\u5e8f\n\n1. \u6392\u5e8f\u540e\uff0c\u6570\u7ec4\u5185\u4e0d\u80fd\u542b\u6709\u91cd\u590d\u5143\u7d20\uff0c\u56e0\u6b64\u9700\u8981\u53bb\u9664\u91cd\u590d\u5143\u7d20\u3002\n\n\u5c31\u4e24\u6b65\u64cd\u4f5c\u5c31\u80fd\u5b8c\u6210\u79bb\u6563\u5316\u3002\n\n\u5199\u51fa\u4f2a\u4ee3\u7801\uff1a\n\n```cpp\n//\u5bf9 a \u6570\u7ec4\u7684\u5143\u7d20\u8fdb\u884c\u79bb\u6563\u5316\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u80fd\u5feb\u901f\u8bbf\u95ee\u5230 a \u6570\u7ec4\u4e2d\u7b2c k \u5927\u7684\u6570 \nint a[maxn];\n\u5c06 a \u6570\u7ec4 \u8fdb\u884c\u6392\u5e8f\n\u53bb\u9664 a \u6570\u7ec4 \u7684\u91cd\u590d\u7684\u5143\u7d20\n```\n- STL\u7684\u53bb\u91cd\u51fd\u6570\u662f unique ( \u6570\u7ec4\u5934\u6307\u9488\uff0c\u6570\u7ec4\u5c3e\u6307\u9488\uff09\n\n\t\u8fd4\u56de\u503c\u662f\u88ab\u53bb\u91cd\u4e4b\u540e\u7684\u6570\u7ec4\u7684\u5c3e\u6307\u9488\n\n\t\u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\u662funique\u53ea\u5bf9\u6392\u8fc7\u5e8f\u7684\u6570\u7ec4\u751f\u6548\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//\u5bf9 a \u6570\u7ec4\u7684\u5143\u7d20\u8fdb\u884c\u79bb\u6563\u5316\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u80fd\u5feb\u901f\u8bbf\u95ee\u5230 a \u6570\u7ec4\u4e2d\u7b2c k \u5927\u7684\u6570 \n#include <algorithm>\nint a[maxn], tail;//tail\u662f a \u6570\u7ec4\u7684\u5c3e\u6307\u9488 \nsort(a + 1, a + 1 + tail);\ntail = unique(a + 1, a + 1 + tail) - (a + 1);//\u5bf9a\u6570\u7ec4\u53bb\u91cd\uff0c\u5e76\u4e14\u66f4\u65b0a\u6570\u7ec4\u7684\u5c3e\u6307\u9488 \n```\n## \u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\u7684\u8bbf\u95ee\u64cd\u4f5c\uff1a\n\n- \u8bbf\u95ee\u4e00\u4e2a\u5143\u7d20\u5728a\u6570\u7ec4\u7684\u4f4d\u7f6e\uff1a\n```cpp\n\tlower_bound(a + 1, a + 1 + tail) - a; \n```\n- \u8bbf\u95eea\u6570\u7ec4\u7b2ck\u4e2a\u5143\u7d20\u7684\u503c\uff1a\n\n```cpp\n\ta[k]\n```\n\n\n------------\n\n# 2. \u7528\u4e00\u7ef4\u7684\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e8c\u7ef4\u4fe1\u606f\n\n\u626b\u63cf\u7ebf\u771f\u7684\u4e0d\u96be\uff0c\u53ea\u8981\u7528\u70b9\u5fc3\uff0c\u662f\u7edd\u5bf9\u5b66\u7684\u4f1a\u7684\n\n\u55ef\u5982\u679c\u4f60\u9700\u8981\u770b\u6f14\u793a\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u597d\u7684[\u626b\u63cf\u7ebf\u6f14\u793a](https://www.luogu.org/blog/36908/solution-p5490)\n\n\u611f\u8c22@Gu_Pigeon \u7684\u9898\u89e3\n\n\u5728\u8fd9\u91cc\u6211\u7ed9\u4f60\u505a\u7684\u662f \u5206\u6790\u4ee3\u7801 \u548c \u4ee3\u7801\u5b9e\u73b0\uff0c\u6f14\u793a\u5c31\u770b\u4e0a\u9762\u7684\u94fe\u63a5\u5c31\u543c\u4e86\n\n- \u5206\u6790\u9898\u76ee\uff1a\u8fd9\u662f\u4e00\u4e2a\u6c42\u51fa\u77e9\u5f62\u7684\u5e76\u96c6\u7684\u9762\u79ef\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\t\t\t\u67d0\u4e00\u4e2a\u533a\u95f4\u5e76\u96c6\uff0c \u533a\u95f4\u64cd\u4f5c\u5f88\u5bb9\u6613\u60f3\u5230\u4ec0\u4e48\uff1f\u5bf9\uff0c\u7ebf\u6bb5\u6811\n\n- \u7ebf\u6bb5\u6811\u4e09\u8fde\uff1a\n\n1. \u7ebf\u6bb5\u6811\u7ef4\u62a4\u4ec0\u4e48\n\n1. \u600e\u4e48\u4fee\u6539\u533a\u95f4\u7684\u503c\n\n1. \u600e\u4e48\u7ef4\u62a4\u7236\u8282\u70b9\n\n- \u4e8b\u5b9e\u4e0a\uff0c\u4e00\u4e2a\u7ebf\u6bb5\u6811**\u80fd\u591f\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u533a\u95f4**\uff0c\u4f60\u53ef\u4ee5\u60f3\u8c61\u6210\u4e00\u6839\u6570\u8f74\u3002\u95ee\u9898\u6765\u4e86\uff1a\u600e\u4e48\u5728\u4e00\u4e2a \u53ea\u80fd\u591f\u7ef4\u62a4 **\u4e00\u6839\u7ebf\u6bb5\u4e0a\u7684\u70b9\u7684\u4fe1\u606f** \u7684\u6570\u636e\u7ed3\u6784\u4e0a \u5904\u7406\u4e00\u4e2a**\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u4fe1\u606f**\uff1f\n\n\u543c\u543c\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u8bf7\u51fa\u626b\u63cf\u7ebf\u5927\u795e\u4e86\n\n\u867d\u7136\u7ebf\u6bb5\u6811\u53ea\u80fd\u7ef4\u62a4\u4e00\u7ef4\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u7ebf\u6bb5\u6811\u652f\u6301 **\u52a0\u70b9\u5220\u70b9** \u7684 \u64cd\u4f5c\u554a\uff01\n\n\u90a3\u6211\u4eec\u6bcf\u6b21\u628a\u4e00\u7ef4\u7684\u4fe1\u606f\u52a0\u8fdb\u53bb\u4e4b\u540e\u8fdb\u884c\u7ef4\u62a4\u4e0d\u5c31\u597d\u4e86\u561b\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\n\uff08\u611f\u8c22@Gu_Pigeon\u63d0\u4f9b\u7684\u56fe\u7247\uff0c\u4fb5\u6743\u7acb\u5220\uff09\n\n\n![\u626b\u63cf](https://s2.ax1x.com/2019/08/08/eTuDjP.gif)\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u662f y \u8f74\u4e0a\u7684\u957f\u5ea6\uff0c\u7136\u540e\u6bcf\u4e00\u6b21\u201c\u52a0\u5165\u4e00\u7ef4\u7684\u4fe1\u606f\u201d\u7684\u610f\u601d\u662f\u5728 \u6bcf\u4e00\u6b21\u52a0\u5165\u8fdb\u53bb\u7684\u662f **\u5782\u76f4\u4e8e \u67d0\u4e00\u4e2ax\u8f74\u4e0a\u7684\u70b9 \u7684\u4fe1\u606f**\uff0c\u753b\u56fe\u793a\u610f\u4e00\u4e0b ~~\uff08\u6709\u70b9\u4e11\uff09~~\n\n![saomiaoxian](https://cdn.luogu.com.cn/upload/image_hosting/5dy4e91n.png)\n\n\n\n------------\n\n\u60f3\u8c61\u4e00\u6839\u7ebf\u6bb5\u5782\u76f4\u4e8ex\u8f74\uff0c\u5411x\u8f74\u6b63\u534a\u8f74\u4e00\u70b9\u4e00\u70b9\u5f80\u53f3\u79fb\u52a8\uff0c\n\n\u5f53\u9047\u5230\u4e00\u6761\u5782\u76f4x\u8f74\u7684\u77e9\u5f62\u7684\u8fb9\u7684\u65f6\u5019\uff0c\u5c31\u5c06**\u8fd9\u4e2a\u77e9\u5f62\u8fb9\u4e0a\u7684\u6240\u6709\u4fe1\u606f\u52a0\u5165\u7ebf\u6bb5\u6811**\n\n\u5199\u51fa\u4f2a\u4ee3\u7801\uff1a\n```cpp\nfor (\u904d\u5386x\u8f74\u4e0a\u6240\u6709\u7684\u70b9){\n\tif(\u5782\u76f4\u4e8e\u8fd9\u4e2ax\u8f74\u4e0a\u7684\u7ebf\u6bb5\u4e0a \u6709\u77e9\u5f62\u7684 \u70b9){\n\t\t\u5c06\u5904\u4e8e\u8fd9\u6761\u7ebf\u6bb5\u4e0a\u7684\u6240\u6709\u70b9\u7684\u4fe1\u606f\u5168\u90e8\u52a0\u5165\u7ebf\u6bb5\u6811 \n\t} \n}\n```\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u7ebf\u6bb5\u6811 **\u7ef4\u62a4 \u4e8c\u7ef4\u4fe1\u606f** \u4e86\n\n\n# 3. \u7ebf\u6bb5\u6811\n\n\u770b\u9898\uff0c\u8981\u6c42 **\u6c42\u51fa\u6240\u6709\u7684\u77e9\u5f62\u7684\u5e76\u96c6 \u7684\u8986\u76d6\u7684\u9762\u79ef**\n\n\u5bf9\u6bd4\u4e00\u4e0b\u521a\u521a\u626b\u63cf\u7ebf\u5b8c\u6210\u7684\u64cd\u4f5c\uff1a\n\n```cpp\nfor (\u904d\u5386x\u8f74\u4e0a\u6240\u6709\u7684\u70b9){\n\tif(\u5782\u76f4\u4e8e\u8fd9\u4e2ax\u8f74\u4e0a\u7684\u7ebf\u6bb5\u4e0a \u6709\u77e9\u5f62\u7684 \u70b9){\n\t\t\u5c06\u5904\u4e8e\u8fd9\u6761\u7ebf\u6bb5\u4e0a\u7684\u6240\u6709\u70b9\u7684\u4fe1\u606f\u5168\u90e8\u52a0\u5165\u7ebf\u6bb5\u6811 \n\t} \n}\n```\n\n- \u601d\u8003\u4e00\u4e0b\u7ebf\u6bb5\u6811\u91cc\u7ef4\u62a4\u7684\u662f\u4ec0\u4e48\uff1a\n\n- \u60f3\u50cf\u4e00\u4e0b.....\u4e00\u6761\u7ebf\u6bb5\u5f80\u53f3\u626b\uff0c\u4e00\u65e6\u53d1\u73b0\u4e86\u77e9\u5f62\u7ad6\u76f4\u7684\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u5c31\u628a\u8fd9\u6761\u8fb9\u7684\u4fe1\u606f\u52a0\u5165\u7ebf\u6bb5\u6811\uff0c\u518d\u7528\u4e00\u6b21\u8fd9\u5f20\u56fe\n\n![\u626b\u63cf](https://s2.ax1x.com/2019/08/08/eTuDjP.gif)\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u4e0b\u56fe\n![\u626b\u63cf\u7ebf222](https://cdn.luogu.com.cn/upload/image_hosting/9yyo51uo.png)\n\n\n\u5982\u679c\t\u626b\u5230x = k1\u7684\u65f6\u5019\uff0cx = k1 \u5904\u7684\u7ebf\u6bb5\u7684\u4fe1\u606f\u88ab\u52a0\u5165\u7ebf\u6bb5\u6811\uff0c\u5f53\u626b\u5230 x = k2 \u5904\u7684\u65f6\u5019\uff0c\u53d1\u73b0 **\u8981\u7ef4\u62a4 [ k1, k2 ] \u5904\u533a\u95f4\u7684\u9762\u79ef**\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0cS =  \uff08 x = k1 \u5904\u7684\u7ebf\u6bb5\u957f\u5ea6\uff09 * \uff08 k1 - k2 \uff09\n\n- \u90a3\u7ebf\u6bb5\u6811\u4e0a\u8be5\u7ef4\u62a4\u70b9\u5565\uff1f\n\n\u5f53\u7136\u662f\u7ef4\u62a4 x = k1\u5904\u7684\u7ebf\u6bb5\u957f\u5ea6\u55bd\n\n\u6539\u8fdb\u4e00\u4e0b\u4e4b\u524d\u7684\u4f2a\u4ee3\u7801\uff1a\n```cpp\nfor (\u904d\u5386x\u8f74\u4e0a\u6240\u6709\u7684\u70b9){ \n\tif(\u8be5\u6761\u76f4\u7ebf k1 \u4e0a \u5b58\u5728\u77e9\u5f62 \u4e00\u6761\u8fb9 ){\n\t\t//\u7ebf\u6bb5\u6811\u4e0a\u7528\u6765\u7ef4\u62a4\u8fb9\u7684\u957f\u5ea6 \n\t\t\u66f4\u65b0\u7ebf\u6bb5\u6811\u4e0a\u7684\u8fb9\u7684\u957f\u5ea6 \n\t\t\u9762\u79ef =  \uff08 k1 - \u4e0a\u4e00\u4e2a\u77e9\u5f62\u7684\u8fb9 \u6a2a\u5750\u6807\uff09 * \u7ebf\u6bb5\u6811\u4e0a\u7684\u8fb9\u7684\u957f\u5ea6 \n\t} \n}\n```\n\n# 4.\u8bfb\u5165\u626b\u63cf\u7ebf\n\n\u6211\u4eec\u9700\u8981 **\u5b58\u50a8 \u6bcf\u4e00\u6bb5\u7684\u626b\u63cf\u7ebf**\uff0c\u770b\u56fe\uff0c\u6bcf\u4e00\u6bb5\u626b\u63cf\u7ebf\u53ea\u9700\u8981\u4e09\u4e2a\u53c2\u91cf\uff1a\n\n- x \u8f74\u5750\u6807\n\n- \u77e9\u5f62 y \u5750\u6807\u7684\u4e0a\u754c\n\n- \u77e9\u5f62 y \u5750\u6807\u7684\u4e0b\u754c\n\n\u800c\u5f53\u6211\u4eec\u904d\u5386\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5c06 x \u8f74\u5750\u6807\u8fdb\u884c\u4ece\u5de6\u5230\u53f3\u7684\u4e00\u904d\u6392\u5e8f\u5373\u53ef\uff0c\u5199\u51fa\u4f2a\u4ee3\u7801\uff1a\n```cpp\nstruct Scanline{\n\tint x, y1, y2;\n}scanline[ maxn ];\n\nint main(){\n\tfor(\u8f93\u5165\u64cd\u4f5c){\n\t\t\u8bfb\u5165\u77e9\u5f62\u7684\u56db\u4e2a\u5750\u6807x1, y1, x2, y2\n\t\tscanline \u52a0\u5165(x1, y1, y2);\n\t\tscanline \u52a0\u5165(x2, y1, y2); \n\t}\n\t\n\t\u5c06\u626b\u63cf\u7ebf\u6309\u7167x\u8f74\u7684\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\t\n\tfor (\u904d\u5386\u6240\u6709\u7684\u626b\u63cf\u7ebf){ \n\t\t//\u7ebf\u6bb5\u6811\u4e0a\u7528\u6765\u7ef4\u62a4\u8fb9\u7684\u957f\u5ea6 \n\t\t\u66f4\u65b0\u7ebf\u6bb5\u6811\u4e0a\u7684\u8fb9\u7684\u957f\u5ea6 \n\t\t\u9762\u79ef =  \uff08 k1 - \u4e0a\u4e00\u4e2a\u77e9\u5f62\u7684\u8fb9 \u6a2a\u5750\u6807\uff09 * \u7ebf\u6bb5\u6811\u4e0a\u7684\u8fb9\u7684\u957f\u5ea6 \n\t\t\n\t}\n} \n```\n\u73b0\u5728\u53ea\u5269\u4e0b\u600e\u4e48\u7ef4\u62a4\u7ebf\u6bb5\u6811\u4e86\uff0c~~\u80dc\u5229\u5728\u671b~~\n\n\u5df2\u7ecf\u53ef\u4ee5\u786e\u5b9a\u7ebf\u6bb5\u6811**\u5fc5\u987b\u8981\u7ef4\u62a4\u7684\u503c\u6709\uff1a**\n\n- \u7ebf\u6bb5 y \u5750\u6807\u7684\u4e0a\u754c \u548c \u4e0b\u754c\n\n- \u8be5\u533a\u95f4\u5185\u7ebf\u6bb5\u7684\u603b\u957f\u5ea6\n\n\u5373\n```cpp\nstruct segment_tree{\n\tint l, r, len;\n\t//l:y\u5750\u6807\u7684\u4e0a\u754c\n\t//r:y\u5750\u6807\u7684\u4e0b\u754c\n    \t//len:\u5f53\u524d\u533a\u95f4\u5185\u7ebf\u6bb5\u7684\u603b\u957f\u5ea6\n}st[ maxn ];\n```\n\n\u540c\u65f6\uff0c\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u5e94\u8be5\u652f\u6301\n\n- \u5220\u9664\u64cd\u4f5c\n\t\uff08\u52a0\u5165\u7ebf\u6bb5\u4e4b\u540e\u518d\u66f4\u65b0\u5b8c\u8fd9\u5757\u9762\u79ef\u4e4b\u540e\u5f97\u5220\u53bb\u4e4b\u524d\u52a0\u8fdb\u6765\u7684\u7ebf\u6bb5\uff09\t\t\n\n- \u652f\u6301\u6c42\u51fa\u5f53\u524d\u7ebf\u6bb5\u603b\u957f\u5ea6\n\n\n# \u6c42\u51fa\u7ebf\u6bb5\u603b\u957f\u5ea6\n\n\u5176\u5b9e\u5c31\u662f\u600e\u4e48\u7528\u5b50\u533a\u95f4\u53bb**\u66f4\u65b0\u7236\u8282\u70b9**\uff0c\u6ca1\u4ec0\u4e48\u96be\u5ea6\uff0c\u5199\u51fa\u4f2a\u4ee3\u7801\uff1a\n\n```cpp\nstruct segment_tree{\n\tint l, r, len;\n\t//l:y\u5750\u6807\u7684\u4e0a\u754c\n\t//r:y\u5750\u6807\u7684\u4e0b\u754c\n    \t//len:\u5f53\u524d\u533a\u95f4\u5185\u7ebf\u6bb5\u7684\u603b\u957f\u5ea6\n}st[ maxn ];\n\nvoid pushup(int o){\n\tst[o].len = st[o << 1].len + st[o << 1| 1].len;\n\t//\u7236\u8282\u70b9\u7684\u533a\u95f4\u503c = \u5b50\u533a\u95f4\u7684\u957f\u5ea6\u4e4b\u548c \n}\n```\n\n\n\n# \u5220\u9664\u64cd\u4f5c\n\n\u73b0\u5728\u6765\u8003\u8651\u5220\u9664\u64cd\u4f5c\uff0c**\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u5220\u9664\u4e00\u6761\u8fb9\uff1f**\n\n![\u626b](https://cdn.luogu.com.cn/upload/image_hosting/tag7xfat.png)\n\n\u5f53\u626b\u63cf\u5230\u77e9\u5f62\u7684\u53f3\u4fa7\u8fb9\u7684\u65f6\u5019\uff0c\u5c31\u5f97\u5220\u9664\u4e4b\u524d\u52a0\u8fdb\u6765\u7684\u8fb9\n\n**\u601d\u8003\uff1a\u7ebf\u6bb5\u6811\u652f\u6301\u4e9b\u4ec0\u4e48\uff1f**\n\n1. **\u533a\u95f4\u4fee\u6539\u503c**\n\n1. \u533a\u95f4\u5408\u5e76\n\n\u5bf9\uff0c\u7ebf\u6bb5\u6811\u662f\u652f\u6301\u533a\u95f4\u4fee\u6539\u503c\u7684\uff0c\u90a3**\u600e\u4e48\u4fee\u6539\u8fd9\u4e2a\u533a\u95f4\u7684\u503c**\uff0c\u4ee5\u53ca\u600e\u4e48**\u5224\u65ad\u6b64\u65f6\u9700\u8981\u4fee\u6539\u5462**\uff1f\n\n- \u5f53\u524d\u8fb9\u662f\u77e9\u5f62**\u5de6\u4fa7\u8fb9**\u7684\u65f6\u5019\u52a0\u5165\u7ebf\u6bb5\u6811\n- \u5f53\u524d\u8fb9\u662f\u77e9\u5f62**\u53f3\u4fa7\u8fb9**\u7684\u65f6\u5019\u4ece\u7ebf\u6bb5\u6811\u4e2d\u5220\u9664\n\n\u6211\u4eec\u9700\u8981\u4e3a\u626b\u63cf\u7ebf\u5f15\u8fdb **\u65b0\u53d8\u91cfmark**\uff0c\u7528\u6765\u5224\u65ad\u8fd9\u662f\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\uff0c\u5de6\u534a\u8fb9\u7684\u7ebf\u6bb5\u8bb0\u4e3a1\uff0c\u53f3\u534a\u8fb9\u7684\u7ebf\u6bb5\u8bb0\u4e3a -1\n```cpp\nstruct Scanline{\n\tint x, y1, y2\uff0cmark;\n}scanline[ maxn ];\n\nint main(){\n\tfor(\u8f93\u5165\u64cd\u4f5c){\n\t\t\u8bfb\u5165\u77e9\u5f62\u7684\u56db\u4e2a\u5750\u6807x1, y1, x2, y2\n\t\t\n\t\t//\u8fd9\u662f\u77e9\u5f62\u7684\u5de6\u534a\u8fb9\n\t\tscanline \u52a0\u5165(x1, y1, y2, 1);\n\n\t\t//\u8fd9\u662f\u77e9\u5f62\u7684\u53f3\u534a\u8fb9\n\t\tscanline \u52a0\u5165(x2, y1, y2, -1); \n\t}\n}\n```\n\u540c\u65f6\u6211\u4eec\u5e94\u8be5\u4e3a\u7ebf\u6bb5\u6811\u6dfb\u52a0\u65b0\u53d8\u91cf\u6765\u5224\u65ad\u662f\u5426\u88ab\u4e00\u4e2a\u77e9\u5f62\u7684\u8fb9\u5b8c\u5168\u8986\u76d6\n\n1. \u5982\u679c\u5f53\u524d\u533a\u95f4**\u88ab\u4e00\u4e2a\u77e9\u5f62\u7684\u8fb9\u5b8c\u5168\u8986\u76d6**\u7684\u65f6\u5019, \u533a\u95f4\u7684\u957f\u5ea6 = \u4e0a\u754c - \u4e0b\u754c( r - l )\n\n2. \u5982\u679c**\u6ca1\u6709\u88ab\u77e9\u5f62\u8fb9\u5b8c\u5168\u8986\u76d6**\uff0c\u7528**\u5de6\u533a\u95f4 \u548c \u53f3\u533a\u95f4\u7684\u957f\u5ea6** \u6765\u66f4\u65b0\u5b83\u81ea\u5df1\u7684\u957f\u5ea6\n\n\u4f2a\u4ee3\u7801\uff1a\n\n```cpp\nstruct segment_tree{\n\tint l, r, len;\n\t//l:y\u5750\u6807\u7684\u4e0a\u754c\n\t//r:y\u5750\u6807\u7684\u4e0b\u754c\n  \t //len:\u5f53\u524d\u533a\u95f4\u5185\u7ebf\u6bb5\u7684\u603b\u957f\u5ea6\n    \n   \tint mark;\n    \t//mark:\u5224\u65ad\u533a\u95f4\u5185\u662f\u5426\u88ab\u77e9\u5f62\u7684\u8fb9\u5b8c\u5168\u8986\u76d6\n}st[ maxn ];\n\nvoid pushup(int o){\n\tif(mark //o \u8fd9\u4e2a\u533a\u95f4\u88ab\u77e9\u5f62\u7684\u8fb9\u5b8c\u5168\u8986\u76d6)st[o].len = st[o].r - st[o].l;\n\telse{\n\t\tst[o].len = st[o << 1].len + st[o << 1| 1].len;\n\t\t//\u7236\u8282\u70b9\u7684\u533a\u95f4\u503c = \u5b50\u533a\u95f4\u7684\u957f\u5ea6\u4e4b\u548c \n\t}\t\n}\n```\n\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff1a\n\n- \u5982\u679c\u8fd9\u6761\u626b\u63cf\u7ebf\u662f**\u77e9\u5f62\u7684\u5de6\u534a\u8fb9**, \u7ed9\u88ab\u8986\u76d6\u7684\u7ebf\u6bb5\u7684mark + 1 \n- \u5982\u679c\u8fd9\u6761\u626b\u63cf\u7ebf\u662f**\u77e9\u5f62\u7684\u53f3\u534a\u8fb9**\uff0c\u7ed9\u88ab\u8986\u76d6\u7684\u7ebf\u6bb5\u7684mark - 1\n\n\u8fd9\u6837\u5c31\u80fd\u901a\u8fc7mark\u6765\u5b8c\u6210\u533a\u95f4\u7684\u5220\u9664\u548c\u52a0\u5165\uff0c\u5199\u51fa\u52a0\u5165&\u5220\u9664\u8fb9\u7684\n\n\u4f2a\u4ee3\u7801\uff1a\n\n```cpp\nvoid change(int o, int L, int R,int mark){\n\t//o:\u5f53\u524d\u533a\u95f4\n\t//L:\u8981\u6539\u53d8\u7684\u533a\u95f4\u4e0a\u754c\n\t//R:\u8981\u6539\u53d8\u7684\u533a\u95f4\u4e0b\u754c\n\tint l = st[o].l, r = st[o].r;//\u5f53\u524d\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\n\tif(L <= l && r <= R){\n\t\tst[o].mark += mark;\n\t\tpushup(o);\n\t\treturn; \n\t} \n\tint mid = (l + r) >> 1;\n\tif(L <= mid)change(o << 1, L, mid);\n\tif(mid + 1 <= R)change(o << 1, mid + 1, R, mark);\n\tpushup(o);\n}\n```\n\u81f3\u4e8e\u5efa\u6811\u592a\u7b80\u5355\u4e86\u5c31\u4e0d\u8bb2\u4e86\uff0c\u5c31\u662f\u521d\u59cb\u5316\u4e00\u4e0b\uff0c\u6ca1\u4ec0\u4e48\u7279\u522b\u7684\n\n\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u7684\u4f2a\u4ee3\u7801\u7ed9\u51fa\u6765\u4e86\n\n```cpp\nstruct segment_tree{\n\tint l, r, len;\n\t//l:y\u5750\u6807\u7684\u4e0a\u754c\n\t//r:y\u5750\u6807\u7684\u4e0b\u754c\n    //len:\u5f53\u524d\u533a\u95f4\u5185\u7ebf\u6bb5\u7684\u603b\u957f\u5ea6\n    \n    int mark;\n    //mark:\u5224\u65ad\u533a\u95f4\u5185\u662f\u5426\u88ab\u77e9\u5f62\u7684\u8fb9\u5b8c\u5168\u8986\u76d6\uff0c\u7528\u4e8e\u5b8c\u6210\u533a\u95f4\u7684\u5220\u9664\u64cd\u4f5c \n}st[ maxn ];\n\nvoid build(int o, int l, int r){\n\tst[o].l\t= l, st[o].r = r;\n\tst[o].len = 0;\n\tst[o].mark = 0;\n\tif(l == r)return;\n\tint mid = (l + r) >> 1;\n\tbuild(o << 1, l, mid);\n\tbuild(o << 1|1, mid + 1, r);\n}\nvoid pushup(int o){\n\tif(st[o].mark)st[o].len = st[o].r - st[o].l;\n\telse{\n\t\tst[o].len = st[o << 1].len + st[o << 1| 1].len;\n\t\t//\u7236\u8282\u70b9\u7684\u533a\u95f4\u503c = \u5b50\u533a\u95f4\u7684\u957f\u5ea6\u4e4b\u548c \n\t}\t\n}\n\nvoid change(int o, int L, int R,int mark){\n\t//o:\u5f53\u524d\u533a\u95f4\n\t//L:\u8981\u6539\u53d8\u7684\u533a\u95f4\u4e0a\u754c\n\t//R:\u8981\u6539\u53d8\u7684\u533a\u95f4\u4e0b\u754c\n\tint l = st[o].l, r = st[o].r;//\u5f53\u524d\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\n\tif(L <= l && r <= R){\n\t\tst[o].mark += mark;\n\t\tpushup(o);\n\t\treturn; \n\t} \n\tint mid = (l + r) >> 1;\n\tif(L <= mid)change(o << 1, L, mid);\n\tif(mid + 1 <= R)change(o << 1, mid + 1, R, mark);\n\tpushup(o);\n}\n\nstruct Scanline{\n\tint x, y1, y2\uff0cmark;\n}scanline[ maxn ];\n\nint main(){\n\tfor(\u8f93\u5165\u64cd\u4f5c){\n\t\t\u8bfb\u5165\u77e9\u5f62\u7684\u56db\u4e2a\u5750\u6807x1, y1, x2, y2\n\t\tscanline \u52a0\u5165(x1, y1, y2, 1);\n\t\tscanline \u52a0\u5165(x2, y1, y2, -1); \n\t}\n\t\n\t\u5c06\u626b\u63cf\u7ebf\u6309\u7167x\u8f74\u7684\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\t\n\tfor (int i = 1; i <= N; i++){//\u626b\u63cf\u7ebf\u7684\u4e2a\u6570 \n\t\t//\u7ebf\u6bb5\u6811\u4e0a\u7528\u6765\u7ef4\u62a4\u8fb9\u7684\u957f\u5ea6 \n\t\tchange(1, scanline[i].l, scanline[i].r, scanline[i].mark);\n\t\t\u9762\u79ef =  \uff08 k1 - \u4e0a\u4e00\u4e2a\u77e9\u5f62\u7684\u8fb9 \u6a2a\u5750\u6807\uff09 * st[1].len;\n\t}\n} \n```\n\u628a\u601d\u8def\u7406\u4e00\u904d\uff1a\n\n1. \u7ebf\u6bb5\u6811**\u7528\u4e8e\u5904\u7406\u4e00\u7ef4\u7684\u7ebf\u6bb5\u957f\u5ea6**\n\n1. \u5224\u65ad\u662f**\u77e9\u5f62\u7684\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9**\uff0c\u662f\u5de6\u8fb9\u5c31\u52a0\uff0c\u662f\u53f3\u8fb9\u5219\u51cf\n\n\u5c31\u8fd9\u4e48\u4e24\u4e2a\u96be\u70b9\n\n# \u79bb\u6563\u5316\n\n\u4f60\u4eec\u4ee5\u4e3a\u5c31\u8fd9\u4e48\u7ed3\u675f\u4e86\u561b\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\uff0c\u5f53\u7136\u4e0d\u53ef\u80fd\uff0c\n\n\u4e0d\u7136\u6211\u524d\u9762**\u767d\u8bb2\u4e86\u90a3\u4e48\u4e45\u79bb\u6563\u5316\u4e86\uff0c**\n\n\u73b0\u5728\u6211\u4eec\u8981\u4e3a\u7ebf\u6bb5\u6811\u52a0\u4e0a\u79bb\u6563\u5316\u8fd9\u4e00\u4e2a\u4f18\u5316\n\n- \u5728\u5f00\u59cb\u4e4b\u524d\u5efa\u8bae\u6e29\u6545\u800c\u77e5\u65b0\n\n- \u8bb0\u4f4f\u7ebf\u6bb5\u6811\u5c65\u884c\u7684\u529f\u80fd\uff1a**\u6c42\u7ebf\u6bb5\u603b\u548c**\n\nso\uff0cwhat need \u79bb\u6563\u5316\uff1f\n\n\u8fd8\u8bb0\u5f97\u79bb\u6563\u5316\u7684\u529f\u80fd\uff1f\u5c06\u4e00\u4e2a\u6570\u8f74\u4e0a\u7684**\u4e00\u4e2a\u4e00\u4e2a\u70b9\u901a\u8fc7\u5927\u5c0f\u6392\u5e8f**\uff0c**\u4fdd\u7559\u70b9\u4e0e\u70b9\u7684\u5927\u5c0f\u5173\u7cfb**\n\n- \u8fd9\u9053\u9898\u76ee\u7684\u7ebf\u6bb5\u6811\u662f\u7edd\u5bf9\u4e0d\u4f1a\u5141\u8bb8\u4f60\u5f00\u56db\u500d\u4e8e\u7ebf\u6bb5\u957f\u5ea6\u7684\uff0c\u767e\u5206\u767e\u7206\u6389\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u8fdb\u884c\u79bb\u6563\u5316\uff0c\n\n- \u79bb\u6563\u5316\u7684\u539f\u56e0\u662f\uff1a **\u7ebf\u6bb5\u6811\u7684\u957f\u5ea6\u4e0d\u80fd\u5f00\u7684\u592a\u5927**\n\n\u90a3\u5f88\u660e\u663e\u6211\u4eec\u8981\u79bb\u6563\u5316\u7684\u662f\uff1a\n\n- \u626b\u63cf\u7ebf\u4e0a\u7684 y \u5750\u6807 \u4e0a\u754c\u548c y \u5750\u6807 \u4e0b\u754c\n\n\u6211\u4eec\u628a\u6240\u6709\u7684\u77e9\u5f62\u8fb9\u4e0a\u7684 y \u5750\u6807 \u5b58\u50a8\u4e0b\u6765\n\n**\u4e0d\u662f\u77e9\u5f62\u8fb9\u4e0a\u7684y\u5750\u6807** \u662f\u4e0d\u9700\u8981\u4f7f\u7528\u7684\uff0c\uff08\u56e0\u4e3a\u53ea\u9700\u8981l - r\u5c31\u80fd\u591f\u77e5\u9053\u8fb9\u4e0a\u7684\u957f\u5ea6\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u5bf9y\u8fdb\u884c\u79bb\u6563\u5316\u64cd\u4f5c\n\n\u7ed9\u51fa\u79bb\u6563\u5316\u7684\u4ee3\u7801\uff1a\n\n```cpp\n//Y:\u77e9\u5f62\u8fb9\u4e0a\u7684\u6240\u6709Y\u5750\u6807\n#include <algorithm>\nint Y[ maxn ];\nsort(Y + 1, Y + 1 + N);\ntot = unique(Y + 1, Y + 1 + N);\n```\n\u597d\uff0c\u63a5\u4e0b\u6765\u662f\u628a**\u79bb\u6563\u5316\u4e22\u8fdb\u7ebf\u6bb5\u6811**\u91cc\u53bb\n\n\u7ebf\u6bb5\u6811\u7684\u610f\u4e49\u4e5f\u53d1\u751f\u6539\u53d8\u4e86\uff0c\u73b0\u5728\u5b83\u7ef4\u62a4\u7684 l, r \u4e0d\u518d\u662f\u6570\u503c\u610f\u4e49\u4e0a\u7684l, r\uff0c\u800c\u662f**\u88ab\u79bb\u6563\u5316\u540e\u7684 l, r\u7684\u6392\u540d\u3002**\n\n\u63a5\u4e0b\u6765\u662f**\u6700\u540e\u4e00\u4e2a\u96be\u70b9\u4e86**\uff0c\u52a0\u6cb9\uff01\uff01\uff01\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u4e0d\u9519\u7684\u56fe\u6587\u89e3\u8bf4\uff0c\u63cf\u8ff0\u4e86**\u79bb\u6563\u5316\u600e\u4e48\u4f5c\u7528\u5728\u7ebf\u6bb5\u6811\u4e0a**\n\n[@sdau_blue \u7684\u4e00\u7bc7\u535a\u5ba2](https://blog.csdn.net/xianpingping/article/details/83032798)\n\n\u88ab\u79bb\u6563\u5316\u540e\u7684\u7ebf\u6bb5\u6811\u7684l, r \u5b58\u50a8\u7684\u662f\u533a\u95f4( Y[ l ], Y[ r ] \uff09\uff0c\u4f46\uff0c\u5f53l = r \u7684\u65f6\u5019\uff0c\u5373\u4e3a\uff08Y[l] , Y[l]\uff09,**\u53d8\u6210\u4e86\u4e00\u4e2a\u70b9\u3002**\n\n**\u53d8\u6210\u4e86\u4e00\u4e2a\u70b9**\u6709\u4ec0\u4e48\u95ee\u9898\u54a7\uff1f\n\n\u95ee\u9898\u5927\u7740\u5462\n\n\u611f\u8c22@MakiseVon \u63d0\u4f9b\u7684\u4f8b\u5b50\n\n\u4e3e\u4e2a\u6817\u5b50\uff0c\u5982\u679c\u603b\u533a\u95f4\u4e3a[1, 4], \n\n\u6709\u4e00\u6761\u626b\u63cf\u7ebf\uff0cy1 = Y[1] , y2 =  Y[3] ,**\u52a0\u5165\u7ebf\u6bb5\u6811**\uff0c\u6a21\u62df\u4e00\u4e0b\uff1a\n\n**\u8fdb\u5165\u5230\u7ebf\u6bb5\u6811\u4fee\u6539\u503c**\uff0c\u4fee\u6539st[1,2]\u7684\u957f\u5ea6\u4e3aY[2] - Y[1]\n\n\u4fee\u6539st[3,3]\u7684\u957f\u5ea6\u4e3a**Y[3] - Y[3] = 0**\n\n\u7b49\u7b49\u8fd9\u663e\u7136\u4e0d\u5bf9\u554a, **st[3,3]\u7684\u503c\u5e94\u8be5\u88ab\u4fee\u6539\u6210Y[3] - Y[2]\u624d\u5bf9**\n\n\u56e0\u6b64\u6211\u4eec\u60f3\u5230\u4e86\u6539\u53d8 **\u7ebf\u6bb5\u6811\u5b58\u50a8\u7684\u503c** de\u610f\u4e49\n\n\u7528 L \u8868\u793a \u5de6\u533a\u95f4 L \uff0c\u503c\u4e3aY[L]\n\n\u7528 R \u8868\u793a **\u53f3\u533a\u95f4 R + 1 **,\u503c\u4e3aY[R + 1]\n\n\u597d\uff0c\u73b0\u5728\u518d\u6765\u770b\u4e4b\u524d\u7684\u4f8b\u5b50\n\n\u6709\u4e00\u6761\u626b\u63cf\u7ebf\uff0cy1 = Y[1] , y2 =  Y[3] ,\u52a0\u5165\u7ebf\u6bb5\u6811\uff0c\u6a21\u62df\u4e00\u4e0b\uff1a\n\n\u8fdb\u5165\u5230\u7ebf\u6bb5\u6811\u4fee\u6539\u503c\uff0c\u4fee\u6539st[1,2]\u7684\u957f\u5ea6\u4e3aY[2 + 1] - Y[1]\n\n\u8fd9\u6837\u5c31\u6ca1\u95ee\u9898\u4e86\n\n\u7ed9\u51fa\u5168\u90e8\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define ll long long \nusing namespace std;\nconst int maxn = 1e6 + 10;\nint N, cnt = 0;\nll int x1, x2, y1, y2, X[maxn << 1];\nstruct scanline{\n\tll l, r, h;\n\tint mark;//\u4fdd\u5b58\u6743\u503c\n\tbool operator <(const scanline &te)const{\n\t\treturn h  < te.h;\n\t} \n}line[maxn << 1];\n\nstruct tree{\n\tint l, r, sum;\n\t//sum:\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u6b21\u6570\n\t//len:\u533a\u95f4\u88ab\u622a\u7684\u957f\u5ea6 \n\tll len;\t\n}st[maxn << 2];\n\nvoid build(int o, int l, int r){\n\tst[o].l\t= l, st[o].r = r;\n\tst[o].len = 0;\n\tst[o].sum = 0;\n\tif(l == r)return;\n\tint mid = (l + r) >> 1;\n\tbuild(o << 1, l, mid);\n\tbuild(o << 1|1, mid + 1, r);\n}\nvoid pushup(int o){\n\tint l = st[o].l, r = st[o].r;\n\tif(st[o].sum)st[o].len = X[r + 1] - X[l];//\u5df2\u7ecf\u88ab\u8986\u76d6\u4e86\uff0c\u66f4\u65b0\u957f\u5ea6 \n\telse{st[o].len = st[o << 1].len + st[o << 1 |1].len;}\n}\nvoid change(int o, ll L, ll R, int c){\n\tint l = st[o].l, r = st[o].r;\n\t//l,r\u4ee3\u8868o\u8fd9\u4e2a\u70b9\u7684\u8303\u56f4\uff0cL,R\u610f\u4e49\u662f\u5f85\u4fee\u6539\u7684\u533a\u95f4\n\tif( X[r + 1] <= L || R <= X[l] )return;\n\t//\u5f53\u53f3\u533a\u95f4 + 1\u5c0f\u4e8e\u5de6\u533a\u95f4\uff0c \n\tif(L <= X[l] && X[r + 1] <= R){\n\t\tst[o].sum += c;\n\t\tpushup(o);\n\t\treturn;\n\t}\n\tchange(o << 1, L, R, c);\n\tchange(o << 1 | 1, L, R, c);\n\tpushup(o);\n}\nint main(){\n\tscanf(\"%d\",&N);\n\tfor(int i = 1; i <= N; i++){\n\t\tcin>>x1>>y1>>x2>>y2;\n\t\tX[2 * i - 1] = x1, X[2 * i] = x2;\n\t\tline[2 * i - 1] = (scanline){ x1, x2, y1, 1};\n\t\tline[2 * i] = (scanline){ x1, x2, y2, -1};\n\t}\n\tN = N << 1;\n\tsort(line + 1, line + N +1);\n\tsort(X + 1, X + N + 1);\n\tint tot = unique(X + 1, X + N + 1) - (X + 1);\n\tbuild(1, 1 , tot - 1);\n\t//\u53f3\u7aef\u70b9\u7684\u5bf9\u5e94\u5173\u7cfb\u5df2\u7ecf\u88ab\u4fee\u6539\u4e86,\u6211\u4eec\u7528 \n\t//[1,tot - 1]\u63cf\u8ff0\u7684\u662f[x[1],x[tot]] \n\tll ans = 0;\n\tfor(int i = 1; i < N; i++){\n\t\tchange(1, line[i].l,line[i].r,line[i].mark);\n\t\tans += st[1].len *(line[i + 1].h - line[i].h);\n\t}\n\tcout<<ans;\n}\n\n```\n\u6211\u8fd8\u7279\u610f\u628aY\u6539\u6210\u4e86X\uff0c\u76ee\u7684\u5c31\u662f\u4e3a\u8ba9\u5404\u4f4d\u7ec3\u4e60\u4e00\u4e0b\u4ece\u5de6\u5230\u53f3\u7684\u626b\u63cf\u7ebf\uff0c\u55ef\uff0c\u5c31\u987a\u7740\u521a\u624d\u7684\u601d\u8def\u6253\u4e00\u904d\u770b\u770b\u6253\u4e0d\u6253\u5f97\u4e0b\u6765\uff0c\u4e0d\u8bb0\u5f97\u5c31\u7c7b\u6bd4\u4e00\u4e0b\u8fd9\u4e2a\u4ee3\u7801\n",
        "postTime": 1569504517,
        "uid": 208273,
        "name": "dzz1537568241",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "- **\u626b\u63cf\u7ebf**\n\n\u626b\u9762\u7ebf\u662f\u8ba1\u7b97\u51e0\u4f55\u4e2d\u89e3\u51b3\u56fe\u5f62\u7684\u4ea4\u5e76\u95ee\u9898\u65f6\u6240\u7528\u7684\u4e00\u79cd\u7b97\u6cd5\u3002\n\n---\n\n- **\u601d\u60f3**\n\n\u5176\u601d\u60f3\u975e\u5e38\u7b80\u5355\uff0c\u4ee5\u6c42\u77e9\u5f62\u5e76\u96c6\u8986\u76d6\u603b\u9762\u79ef\u4e3a\u4f8b\uff0c\u5982\u4e0b\u56fe  \n\n![](http://cdn.luogu.com.cn/upload/pic/70143.png)\n\n\u60f3\u8c61\u4e00\u6839\u7ebf\uff0c\u4ece\u4e0b\u5f80\u4e0a\u626b\uff0c\u4ee5\u77e9\u5f62\u7684\u4e0a\u4e0b\u8fb9\u4e3a\u5206\u754c\uff0c\u8ba1\u7b97\u591a\u4e2a\u90e8\u5206\u7684\u9762\u79ef\uff0c\u8fd9\u4e9b\u9762\u79ef\u4e4b\u548c\u5c31\u662f\u6240\u6c42\u603b\u9762\u79ef\u3002\n\n![](http://cdn.luogu.com.cn/upload/pic/70144.png)\n\n\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4ece\u4e0a\u5f80\u4e0b\u626b\uff0c\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u4ece\u53f3\u5f80\u5de6\u626b...\u533a\u522b\u4e0d\u5927 qwq ~\n\n---\n\n- **\u6d41\u7a0b**\n\n\u4ee5\u4ece\u4e0b\u5f80\u4e0a\u626b\u4e3a\u4f8b\u3002\n\n1. \u5148\u5c06\u7ed9\u51fa\u7684\u77e9\u5f62\u7684\u9876\u70b9\u7684 $x$ \u5750\u6807\u6392\u5e8f\u5e76\u79bb\u6563\u5316\uff08\u5982\u672c\u9898\uff0c\u5750\u6807\u8303\u56f4\u8f83\u5927\u7684\u60c5\u51b5\uff0c\u79bb\u6563\u5316\u662f\u5fc5\u987b\u7684\uff09\uff1b\n2. \u5c06\u77e9\u5f62\u7684\u4e0a\u4e0b\u8fb9\u6309 \u201c\u9ad8\u5ea6\u201d \u6392\u5e8f\uff1b\n3. \u4ece\u4e0b\u5f80\u4e0a\u679a\u4e3e\u4e0a\u4e0b\u8fb9\uff08\u626b\u63cf\uff09\uff0c\u8bb0\u7b2c $i$ \u6761\u8fb9 $l$ \u7684\u9ad8\u5ea6\u4e3a $h_i$ \uff0c\u5f53\u524d\u6b63\u5728\u5904\u7406\u4e2d\u7684\u8fb9\u7684\u5e76\u96c6\u4e3a $L$ \uff0c\u957f\u5ea6\u4e3a $len$ \uff1b\u9664\u7b2c\u4e00\u6761\u8fb9\u5916\uff0c\u6bcf\u9047\u5230\u4e00\u6761\u8fb9\uff0c$ans$ \u52a0\u4e0a $len*(h_i-h_{i-1})$ \uff0c\u7136\u540e\u66f4\u65b0 $L$ \u548c $len$\u3002\n\n---\n\n- **\u5b9e\u73b0**\n\n\u4f9d\u7136\u4ee5\u4ece\u4e0b\u5f80\u4e0a\u626b\u4e3a\u4f8b\n\n1. $x$ \u5750\u6807\u7684\u79bb\u6563\u5316\u6bd4\u8f83\u7b80\u5355\uff1b\n2. \u6211\u4eec\u9700\u8981\u60f3\u529e\u6cd5\u50a8\u5b58\u4e0a\u4e0b\u8fb9\u5e76\u6392\u5e8f\uff1b\u4e00\u6761\u8fb9\u6709\u5de6\u53f3\u4e24\u4e2a\u70b9\uff1a$(x_l,h)$ \u3001 $(x_r,h)$ \uff0c\u90a3\u4e48\u6211\u4eec\u4fbf\u53ef\u4ee5\u7528\u4e00\u4e2a\u56db\u5143\u7ec4 $(x_l,x_r,h,f)$ \u6765\u8868\u793a\u4e00\u6761\u4e0a\u4e0b\u8fb9\uff0c\u5176\u4e2d $f$ \u7528\u4e8e\u8868\u793a\u8be5\u8fb9\u662f\u4e0b\u8fb9 $(f=1)$ \uff0c\u8fd8\u662f\u4e0a\u8fb9 $(f=-1)$ \uff0c\u56e0\u4e3a\u6211\u4eec\u4fdd\u5b58\u8fb9\u5e0c\u671b\u80fd\u5f97\u5230\u8fb9\u957f\uff0c\u6240\u4ee5\u8fd9\u91cc\u5b58\u7684 $x$ \u662f\u79bb\u6563\u5316\u524d\u7684 $x$ \uff0c\u4ee5 $y$ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u5373\u53ef\u5f97\u5230\u4ece\u4e0b\u5230\u4e0a\u7684\u4e0a\u4e0b\u8fb9\uff1b\n3. \u6211\u4eec\u8981\u7ef4\u62a4\u8fb9\u5e76\u96c6 $L$ \u53ca\u5bf9\u5e94\u7684 $len$ \uff1b\u8fd9\u4e00\u6b65\u8ddf\u8fb9\u7684\u9ad8\u5ea6 $h$\uff0c\u65e0\u5173\u7cfb\uff0c\u53ea\u8ddf $(x_l,x_r)$ \u6709\u5173\u7cfb\u2014\u2014\u53ef\u4ee5\u60f3\u5230\u533a\u95f4\u4fee\u6539\u4e0e\u533a\u95f4\u67e5\u8be2\uff0c\u8651\u7528\u79bb\u6563\u5316\u540e\u7684 $x$ \u5750\u6807\u5efa **\u7ebf\u6bb5\u6811** \u3002\n\n\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837\uff0c\u5199\u7ebf\u6bb5\u6811\u559c\u6b22\u5c11\u5f00\u4e9b\u4e1c\u897f\uff0c\u6bd4\u5982\u8282\u70b9\u7684\u5de6\u53f3\u6307\u9488\u4e4b\u7c7b\u7684\uff0c\u90a3\u4e48\u5728\u8fd9\u9898\u91cc\u751a\u81f3\u4e0d\u7528\u5efa\u6811 233\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u8be5\u7ef4\u62a4\u4ec0\u4e48\uff1f\n\n\u9996\u5148\u662f\u4e00\u4e2a **\u6807\u8bb0** \uff0c\u9047\u5230\u4e0b\u8fb9\u65f6\uff0c\u5c31\u5728$[x_l,x_r]$ \u5bf9\u5e94\u7684 **\u79bb\u6563\u5316\u540e** $[x_l',x_r']$ \u4e0a \u6807\u8bb0 $+1$ \uff0c\u5426\u5219\u6807\u8bb0 $-1$\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u524d\u9762\u5b9a\u4e49\u7684 $f$ \u5b9e\u73b0\u5bf9\u4e0a\u4e0b\u8fb9\u7684\u4e0d\u540c\u4fee\u6539\uff1b\n\n\u5176\u6b21\u662f $len$ \uff0c\u5373\u8be5\u533a\u95f4\u4e0a **\u8fb9\u5e76\u96c6\u7684\u957f\u5ea6** \uff0c\u90a3\u4e48\u6839\u8282\u70b9\u7684 $len$ \uff0c\u5c31\u662f\u6211\u4eec\u66f4\u65b0 $ans$ \u6240\u9700\u8981\u7684\uff1b\u5982\u4f55\u7ef4\u62a4\uff1f\u5411\u4e0a\u66f4\u65b0\u65f6\uff0c\u82e5\u6807\u8bb0\u4e3a $0$ \u76f4\u63a5\u5408\u5e76\u5b50\u8282\u70b9\u7684 $len$ \uff0c\u5426\u5219\u4e0d\u53d8\u5373\u53ef\uff08\u6807\u8bb0\u4e0d\u4e3a $0$ \u8bf4\u660e\u8be5\u533a\u95f4\u88ab\u7ebf\u6bb5\u8986\u76d6\uff09\u3002\u96be\u70b9\u5728\u4e8e\u4e0b\u65b9\u7684\u7ef4\u62a4\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u79bb\u6563\u5316\u540e $x$ \u5750\u6807\u5171 $4$ \u4e2a\uff0c\u603b\u533a\u95f4\u4e3a $[1,4]$ \uff0c\u800c\u6211\u4eec\u7b2c\u4e00\u6b21\u4fee\u6539\u5c31\u662f\u5bf9 $[1,3]$ \u4fee\u6539\uff0c\u4e5f\u5c31\u662f\u5bf9\u66f4\u5f80\u4e0b\u7684 $[1,2]$ \uff0c$[3,3]$ \u4fee\u6539\u3002\u6211\u4eec\u8bb0\u7b2c $i$ \u4e2a\u5750\u6807\u5bf9\u5e94\u7684\u539f\u5750\u6807\u4e3a $X_i$ \u5982\u679c\u8bf4 $len_{[1,2]}=X_2-X_1$\uff0c\u90a3\u4e48 $len_{[3,3]}$ \u5462\uff1f\u663e\u7136\u8fd9\u6837\u7ef4\u62a4\u662f\u6709\u95ee\u9898\u7684\u3002\n\n\u533a\u95f4\u8981\u6709\u957f\u5ea6\uff0c\u533a\u95f4\u5c31\u4e0d\u80fd\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u4e0d\u59a8\u8fd9\u6837\u60f3\uff0c\u6211\u4eec\u8981\u7ef4\u62a4 $[1,3]$ \uff0c$3$ \u4e2a\u70b9\u5176\u5b9e\u662f\u5bf9\u5e94 $[1,2]$ \uff0c$[2,3]$ \u8fd9 $2$ \u6761\u7ebf\u6bb5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5305\u542b $k+1$ \u4e2a\u70b9\u7684\u533a\u95f4\uff0c\u5176\u5b9e\u662f\u5bf9\u5e94 $k$ \u6761\u7ebf\u6bb5\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6539\u53d8\u4e00\u4e0b\u601d\u8def\uff0c\u8ba9\u7ebf\u6bb5\u6811\u4e2d\u6240\u6709\u7684\u533a\u95f4 $[l,r]$ \u8868\u793a\u539f\u6765\u7684 $[l,r+1]$ \u4e0d\u5c31\u884c\u4e86\u5417\uff1f\u90a3\u4e48\u53f6\u8282\u70b9 $[x,x]$ \u5176\u5b9e\u5c31\u5bf9\u5e94 $[x,x+1]$\u3002\u540c\u6837\uff0c\u5982\u679c\u6211\u4eec\u539f\u6765\u8981\u5bf9 $[l,r]$ \u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u53ea\u9700\u5bf9 $[l,r-1]$ \u4fee\u6539\u3002\u56de\u5230\u521a\u624d\u7684\u4f8b\u5b50\uff0c\u603b\u533a\u95f4 $[1,4]$ -> $[1,3]$\uff0c\u4fee\u6539 $[1,3]$ -> $[1,2]$\uff0c$len_{[1,2]}=X_3-X_1$ ~ \u7f8e\u6ecb\u6ecb\u3002\n\n**\u6ce8\u610f** \uff0c\u8fd9\u91cc\u8bf4\u7684\u533a\u95f4\u4fee\u6539\u662f\u5bf9\u533a\u95f4\u8fd9\u4e00\u4e2a\u6574\u4f53\u800c\u8a00\u7684\uff0c\u662f **\u5bf9\u7ebf\u6bb5\u6253\u6807\u8bb0** \uff0c\u800c\u4e0d\u662f\u5bf9\u8fd9\u6761\u7ebf\u6bb5\u4e0a\u7684\u6bcf\u4e2a\u70b9\u6253\u6807\u8bb0\u3002\u53c8\u56e0\u4e3a\u7ebf\u6bb5\u6811\u4e0a\u4e00\u70b9\u5c31\u4ee3\u8868\u4e00\u4e2a\u533a\u95f4\uff0c\u4e00\u65e6\u67d0\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u533a\u95f4\u88ab\u5305\u542b\u5728\u9700\u4fee\u6539\u7684\u533a\u95f4\u4e2d\uff0c\u90a3\u4e48\u53ea\u9700\u8ba9\u8be5\u8282\u70b9  $\u00b11$ \uff0c**\u4e0d\u9700\u8981\u7ee7\u7eed\u4e0b\u653e** \u3002\n\n![](http://cdn.luogu.com.cn/upload/pic/70146.png)\n\n\u7ed3\u5408\u524d\u9762\u6240\u8bb2\u7684\uff0c\u5206\u6790\u4e0b\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5177\u4f53\u6b65\u9aa4\uff1a\n\n\u4fee\u6539 $[x_l,x_r]$\u65f6\n\n1. \u82e5\u5f53\u524d\u8282\u70b9 $[l,r]$ \u88ab\u5305\u542b\u5728 $[x_l,x_r]$ \u4e2d\uff0c\u76f4\u63a5\u5bf9\u8be5\u8282\u70b9\u4fee\u6539\u5e76\u8fd4\u56de\n   - \u82e5\u8be5\u8282\u70b9\u4fee\u6539\u540e\u6807\u8bb0\u4e0d\u4e3a $0$ \uff0c$len=X_{r+1}-X_l$\n   - \u5426\u5219\uff0c$len=len_l+len_r$\n2. \u5426\u5219\uff0c\u5f80\u4e0b\u4fee\u6539\uff0c\u4fee\u6539\u5b8c\u540e\u66f4\u65b0 $len=len_l+len_r$\n\n---\n\n- **$Code$**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,l,u,d) for(register int i=(l);i<=(u);i+=(d))\n#define mid ((l+r)>>1)\n#define ls (rt<<1)\n#define rs (rt<<1|1)\ntypedef long long ll;\ntypedef struct _line{\n    int xl,xr,h,f;\n    _line(int a=0,int b=0,int c=0,int d=0):xl(a),xr(b),h(c),f(d){}\n    bool operator <(const _line &t) const{ return h<t.h; }\n}line;\n\nconst int N=1e5+5;\nint n,xl,yl,xr,yr;\nint x[N<<1]; line l[N<<1];\nint tag[N<<3]; ll len[N<<3];\nll ans;\n\ntemplate<typename t> t &read(t &r);\nvoid modify(int rt,int l,int r,int xl,int xr,int d);\nvoid push_up(int rt,int l,int r);\n\nint main(void){\n    read(n);\n    rep(i,1,n,1){\n        read(xl),read(yl),read(xr),read(yr);\n        x[(i<<1)-1]=xl,x[i<<1]=xr;\n        l[(i<<1)-1]=line(xl,xr,yl,1),l[i<<1]=line(xl,xr,yr,-1);\n    }\n    sort(x+1,x+2*n+1),sort(l+1,l+2*n+1);\n    // \u603b\u7684\u533a\u95f4 [1,ct] -> [1,ct-1]\n    int ct=unique(x+1,x+2*n+1)-x-2;\n    rep(i,1,2*n,1){\n        int xl=lower_bound(x+1,x+ct+1,l[i].xl)-x;\n        // \u5f85\u4fee\u6539\u533a\u95f4 [xl,xr] -> [xl,xr-1]\n        int xr=lower_bound(x+1,x+ct+1,l[i].xr)-x-1;\n        // \u5148\u7b97\u9762\u79ef\uff0c\u518d\u4fee\u6539\n        ans+=len[1]*(l[i].h-l[i-1].h);\n        modify(1,1,ct,xl,xr,l[i].f);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\ntemplate<typename t> t &read(t &r){\n    char c;int f=1;\n    while(!isdigit(c=getchar()))\n        if(c=='-') f=-1;\n    r=c^'0';\n    while(isdigit(c=getchar())) r=r*10+(c^'0');\n    return r*=f;\n}\n\nvoid modify(int rt,int l,int r,int xl,int xr,int d){\n    if(xl<=l&&r<=xr){\n        len[rt]=(tag[rt]+=d)?x[r+1]-x[l]:0;\n        return push_up(rt,l,r);\n    }\n    if(xl<=mid) modify(ls,l,mid,xl,xr,d);\n    if(xr>mid) modify(rs,mid+1,r,xl,xr,d);\n    push_up(rt,l,r);\n}\n\ninline void push_up(int rt,int l,int r){\n    len[rt]=tag[rt]?len[rt]:(l==r?0:len[ls]+len[rs]);\n}\n```\n\n---\n\n\u5b8c\u7ed3\u6492\u82b1\u82b1 ~ qwq",
        "postTime": 1565251334,
        "uid": 146195,
        "name": "MakiseVon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "# \u89c2\u524d\u63d0\u793a\uff1a\u5982\u679c\u672c\u6587\u6709\u4ec0\u4e48\u758f\u6f0f\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u6307\u6b63\uff01\n\n\u6700\u8fd1\u56e0\u4e3a\u8981\u505a\u6709\u5173\u7684\u9898\uff0c\u6240\u4ee5\u5b66\u4e86\u8fd9\u4e2a\u542c\u8d77\u6765\u5c31\u5f88\u5389\u5bb3\u7684\u4e1c\u897f\u2014\u2014**\u626b\u63cf\u7ebf**\n\n\u626b\u63cf\u7ebf\u7b97\u6cd5\u662f\u4e00\u79cd\u6c42**\u77e9\u5f62**\u7684**\u9762\u79ef\u5e76**\u548c**\u5468\u957f\u5e76**\u7684\u597d\u65b9\u6cd5\u3002\u5176\u601d\u60f3\u662f\u7531\u4e00\u6761**\u5047\u60f3**\u7684\u7ebf\u4ece\u56fe\u5f62\u7684\u4e0b\u65b9\u626b\u5411\u4e0a\u65b9\uff08\u6216\u8005\u5de6\u65b9\u626b\u5230\u53f3\u65b9\uff0c\u90fd\u53ef\u4ee5\uff09\uff0c\u90a3\u4e48\u901a\u8fc7\u5206\u6790\u626b\u63cf\u7ebf\u88ab\u56fe\u5f62\u622a\u5f97\u7684\u7ebf\u6bb5\u5c31\u80fd\u83b7\u5f97\u6240\u8981\u7684\u7ed3\u679c\u3002\u8be5\u8fc7\u7a0b\u53ef\u4ee5\u7528**\u7ebf\u6bb5\u6811**\u8fdb\u884c\u52a0\u901f(\u6587\u5b57from **[@NCC79601](https://ncc79601.blog.luogu.org/scan-line)**)\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u5c06\u628a\u626b\u63cf\u7ebf\u5206\u6210\u9762\u79ef\u5e76\u548c\u5468\u957f\u5e76\u4e24\u4e2a\u90e8\u5206\uff0c\u5c3d\u91cf\u7528\u975e\u5e38\u901a\u4fd7\u7684\u8bed\u8a00\u548c\u8f83\u4e3a\u7ec6\u81f4\u7684\u6b65\u9aa4\u8fdb\u884c\u8bb2\u89e3\n\n# \u4e00\u3001\u9762\u79ef\u5e76\n\n# [P5490 \u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf](https://www.luogu.com.cn/problem/P5490)\n\n\u8fd9\u4e00\u9053\u9898\uff0c\u5c31\u662f\u9762\u79ef\u5e76\u7684\u6a21\u677f\u9898\n\n\u65e2\u7136\u662f\u8981\u6211\u4eec\u6c42\u8fd9\u51e0\u4e2a\u77e9\u5f62\u7684\u8986\u76d6\u9762\u79ef\uff0c\u6211\u4eec\u5c31\u6765\u770b\u4e00\u4e0b,\u8981\u662f\u6211\u4eec\u8981\u6c42\u4e0b\u9762\u8fd9\u4e2a\u56fe\u5f62\u7684\u8986\u76d6\u9762\u79ef\uff0c\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u505a\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nmb59xi4.png)\n\n\u6ce8\u610f\u770b\uff0c\u8fd9\u91cc\u662f\u6709\u4e00\u90e8\u5206\u7684\u9762\u79ef\u662f\u91cd\u5408\u7684\u3002\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u8981\u6c42\u7684\u9762\u79ef\u5176\u5b9e\u5c31\u662f\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/euk2bxgg.png)\n\n\u8fd9\u4e2a\u56fe\u5f62\u662f\u4e00\u4e2a\u4e0d\u89c4\u5219\u7684\u56fe\u5f62\uff0c\u7528\u4ec0\u4e48\u65b9\u6cd5\u6c42\u5462\uff1f\n\n\u5728\u521d\u4e2d\u6570\u5b66\u4e2d\uff0c\u6211\u4eec\u6c42\u4e0d\u89c4\u5219\u56fe\u5f62\u7684\u6700\u666e\u904d\u4e5f\u662f\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u662f**\u5272\u8865\u6cd5**\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u56fe\u5f62\u8fdb\u884c\u5272\u8865\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/70275.png)\n\n\u8fd9\u6837\u5b50\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e00\u5757\u5206\u5272\u540e\u7684\u56fe\u5f62\u9762\u79ef\u6765\u6c42\u51fa\u6574\u4e2a\u56fe\u5f62\u7684\u603b\u8986\u76d6\u9762\u79ef\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u56fe\u8c61\u6765\u6a21\u62df\u4e00\u4e0b\u6574\u4e2a\u626b\u63cf\u7ebf\u5927\u6982\u662f\u600e\u4e48\u64cd\u4f5c\u7684\uff0c\u8fd9\u91cc\u7ed9\u51fa\u7684\u662f\u4ece\u5de6\u5f80\u53f3\u7684\u6a21\u62df\uff1a\n\n![](https://s2.ax1x.com/2019/08/08/eTuDjP.gif)\n\n(\u4ee5\u4e0a\u56fe\u8c61\u5747from **[@Gu_Pigeon\n](https://www.luogu.com.cn/blog/happy404/solution-p5490)**)\n\n\u89c2\u5bdf\u4e0a\u9762\u8fd9\u5f20gif\u4e0d\u96be\u770b\u51fa\uff0c\u626b\u63cf\u7ebf\u5728\u626b\u7684\u65f6\u5019\uff0c\u4f3c\u4e4e\u5728\u626b\u5230\u7ebf\u6bb5\u7684\u65f6\u5019\u5c31\u4f1a\u628a\u56fe\u5f62\u5206\u5272\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u770b\u770b\uff0c\u5206\u5272\u540e\u7684\u9762\u79ef\u5e94\u8be5\u600e\u4e48\u6c42:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3nm0vv6u.png)\n\n\u9ec4\u8272\u90a3\u4e00\u5757\u56fe\u8c61\u7684\u5de6\u4e0b\u89d2\u5750\u6807\u4e3a$(x1,y1)$,\u53f3\u4e0a\u89d2\u5750\u6807\u4e3a$(x2,y2)$,\u90a3\u4e48\u5de6\u4e0a\u89d2\u5c31\u4e3a$(x1,y2)$,\u53f3\u4e0a\u89d2\u5373\u4e3a$(x2,y1)$\u3002\u8fd9\u4e00\u5757\u56fe\u8c61\u7684\u9762\u79ef\u5c31\u662f$(y2-y1) * (x2-x1)$\uff0c\u6211\u4eec\u540e\u9762\u8981\u7528\u8fd9\u4e2a\u5f0f\u5b50\u6765\u8ba1\u7b97\u9762\u79ef\n\n\u73b0\u5728\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b\u6574\u4e2a\u7b97\u6cd5\u7684\u4e00\u4e9b\u64cd\u4f5c\n\n#### \u8bbe\u7acb\u5168\u5c40\u53d8\u91cf$ans$\u8bb0\u5f55\u7b54\u6848\uff0c\u8bfb\u5165$x1,y1,x2,y2$\n\n\u9996\u5148\u8981\u5148\u628a\u6570\u636e\u8bfb\u8fdb\u6765\n\n#### \u5728\u8bfb\u5165\u4e4b\u540e\uff0c\u6211\u4eec\u5148\u5f97**\u79bb\u6563\u5316**\n\n\u53ef\u4e0d\u662f\u561b\uff0c\u770b\u4e00\u4e0b\u6837\u4f8b\uff0c$0\u2264x1<x2\u2264$ $10^9$,$0\u2264y1<y2\t\u2264$ $10^9$\uff0c \u8fd9\u4e2a\u4e00\u770b\u5c31\u4f1a\u7206\u7a7a\u95f4\u3002\u6240\u4ee5\u6211\u4eec\u8981\u7528\u829d\u9ebb\u6362\u897f\u74dc\uff0c\u727a\u7272\u5c0f\u90e8\u5206\u7a7a\u95f4\u6765\u79bb\u6563\u5316\n\n#### \u7136\u540e\u6211\u4eec\u8981\u6392\u5e8f\n\n\u65e2\u7136\u6211\u4eec\u662f\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u90a3\u4e48\u6700\u5148\u626b\u5230\u7684\u90a3\u4e00\u6761\u7ebf\u6bb5\u7684x\u5fc5\u7136\u662f\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8981\u8ba9\u6574\u4e2a\u56fe\u8c61\u7684\u7ebf\u6bb5\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u5f97x\u5c0f\u7684\u7ebf\u6bb5\u53ef\u4ee5\u5148\u88ab\u626b\u5230\n\n#### \u6211\u4eec\u8fd8\u8981\u8fd0\u7528\u7ebf\u6bb5\u6811\n\n\u5148\u95ee\u4e00\u4e2a\u95ee\u9898\uff1a**\u4e3a\u4ec0\u4e48\u8981\u4f18\u5316\u8fd9\u4e2a\u7b97\u6cd5**\uff1f\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u5728\u4ece\u5de6\u5f80\u53f3\u626b\u65f6\uff0c\u6700\u96be\u8ba1\u7b97\u7684\u5176\u5b9e\u5c31\u662f\u626b\u5230\u7684\u90a3\u4e00\u6761\u7ebf\u6bb5\u7684\u957f\u5ea6\u3002\u56e0\u4e3a\u4e00\u6761\u7ebf\u6bb5**\u4e0d\u4e00\u5b9a\u662f\u8be5\u77e9\u5f62\u7684\u8fb9**\uff0c\u6bd4\u5982\u8fd9\u4e00\u6761\u7ea2\u8272\u7ebf\u6bb5:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dlxthvjl.png)\n\n\u8fd9\u4e00\u6761\u7ebf\u6bb5\uff0c\u5176\u5b9e\u5c31\u662f\u7531\u9ed1\u8272\u6846\u8d77\u6765\u7684\u8fd9\u4e00\u90e8\u5206\u7ebf\u6bb5(\u8fd9\u6761\u7ebf\u6bb5\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u8fb9)\u52a0\u4e0a\u84dd\u8272\u6846\u8d77\u6765\u7684\u7ebf\u6bb5(\u8fd9\u6761\u7ebf\u6bb5\u4e5f\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u8fb9)\u518d\u51cf\u53bb\u91cd\u5408\u90e8\u5206\u3002\u56e0\u4e3a\u8fd9\u91cc\u53ea\u6709\u4e09\u4e2a\u56fe\u5f62\uff0c\u6240\u4ee5\u8ba1\u7b97\u91cf\u4e5f\u4e0d\u5927\u3002\u4f46\u662f\uff0c\u8981\u662f\u6709\u66f4\u591a\u7684\u77e9\u5f62\u50cf\u8fd9\u6837\u5b50\u91cd\u5408\uff0c\u8ba1\u7b97\u91cf\u5c31\u5f88\u5927\u4e86\uff0c\u5f88\u6d6a\u8d39\u65f6\u95f4\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8981\u7528\u4e00\u4e9b~~\u5947~~\u6280~~\u6deb~~\u5de7\u6765\u4f18\u5316\u6574\u4e2a\u7b97\u6cd5\n\n\u518d\u95ee\u4e00\u4e2a\u95ee\u9898\uff0c**\u4e3a\u4ec0\u4e48\u8981\u7528\u7ebf\u6bb5\u6811**\uff1f\n\n\u5176\u5b9e\u4e5f\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\u3002\u5047\u5982\u6211\u4eec\u8981\u6c42\u7684\u662f\u8fd9\u4e00\u6761\u7ea2\u8272\u7684\u7ebf\u6bb5\u7684\u957f\u5ea6\uff0c\u5e76\u4e0d\u7528\u628a\u591a\u4e2a\u91cd\u5408\u7684\u77e9\u5f62\u7684\u8fb9\u52a0\u5230\u4e00\u8d77\u518d\u51cf\u53bb\u91cd\u5408\u90e8\u5206\uff0c\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u8fd9\u6837\u5b50\u7b97:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/thizyyim.png)\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u9ed1\u8272\u6846\u8d77\u6765\u7684\u7ebf\u6bb5\u52a0\u4e0a\u7070\u8272\u6846\u8d77\u6765\u7684\u7ebf\u6bb5\u52a0\u4e0a\u84dd\u8272\u6846\u8d77\u6765\u7684\u7ebf\u6bb5\u52a0\u4e0a\u7d2b\u8272\u6846\u8d77\u6765\u7684\u7ebf\u6bb5\uff0c\u5f97\u51fa\u8fd9\u6761\u7ea2\u8272\u7ebf\u6bb5\u7684\u957f\u5ea6\u3002\u800c\u8fd9\u4e9b\u6846\u8d77\u6765\u7684\u5730\u65b9\u5c31\u662f\u4e00\u6761\u7ebf\u6bb5\u3002\u90a3\u4e48\uff0c\u7c7b\u4f3c\u7684,\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb**\u7ebf\u6bb5\u6811**\uff0c**\u7ba1\u7406\u56fe\u4e2d\u6240\u6709\u77e9\u5f62\u7684y\u5750\u6807\u4e4b\u95f4\u7684\u7ebf\u6bb5**\u3002\u8282\u70b9\u7684\u7279\u5f81\u503c\u5c31\u662f**\u5f53\u524d\u626b\u63cf\u5230\u7684\u7ebf\u6bb5\u5728\u7ba1\u7406\u8303\u56f4\u5185\u7684\u603b\u957f\u5ea6**\n\n\u6bd4\u5982\uff0c\u6211\u4eec\u5b9a\u4e49$tr[1]$\u6240\u7ba1\u7406\u7684\u8303\u56f4\u5c31\u662f**\u4ece\u56fe\u8c61\u6700\u4e0a\u9762\u7684** $y$**\u5230\u6700\u4e0b\u9762\u7684**$y$\uff0c\u4e5f\u5c31\u662f\u7ba1\u7406\u9ed1\u8272\u3001\u7070\u8272\u3001\u84dd\u8272\u548c\u7d2b\u8272\u6846\u8d77\u6765\u7684\u8fd9\u4e9b\u7ebf\u6bb5\u3002$tr[1]$\u7684\u7279\u5f81\u503c$c$\u5c31\u662f**\u4ece\u56fe\u8c61\u6700\u4e0a\u9762\u7684**$y$**\u5230\u6700\u4e0b\u9762\u7684**$y$**\u8fd9\u4e2a\u8303\u56f4\u4e2d\u5305\u542b\u88ab\u626b\u5230\u7684\u7ebf\u6bb5\u7684\u957f\u5ea6**\u3002\u5f53\u626b\u5230\u7b2c\u4e00\u6761\u7ebf\u6bb5\u7684\u65f6\u5019\uff0c\u53ea\u6709\u7070\u8272\u548c\u84dd\u8272\u90e8\u5206\u624d\u6709\u8fd9\u4e00\u6761\u88ab\u626b\u5230\u7684\u7ebf\u6bb5\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5$tr[1].c=$\u7070\u8272+\u84dd\u8272\u8fd9\u90e8\u5206\u7684\u957f\u5ea6\uff1b\u626b\u5230\u7b2c\u4e8c\u6761\u7ebf\u7684\u65f6\u5019\uff0c$tr[1].c=$\u9ed1\u8272+\u7070\u8272+\u84dd\u8272(\u56e0\u4e3a\u9ed1\u8272\u548c\u7070\u8272\u548c\u84dd\u8272\u624d\u542b\u6709\u626b\u63cf\u5230\u7684\u7ebf)\u7684\u957f\u5ea6\uff1b\u626b\u5230\u7b2c\u4e09\u6761\u7ebf\u7684\u65f6\u5019\uff0c$tr[1].c=$\u9ed1+\u7070+\u84dd+\u7d2b(\u90fd\u6709\u6709\u626b\u63cf\u5230\u7684\u7ebf\u7684\u4e00\u90e8\u5206)\u7684\u957f\u5ea6...\n\n\u90a3\u4e48\uff0c\u6c42\u8fd9\u4e00\u6761\u88ab\u626b\u5230\u7684\u7ebf\u6bb5\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u53ea\u8981\u7528\u7ebf\u6bb5\u6811\u6bd4\u8f83\u57fa\u7840\u7684**\u533a\u95f4\u6c42\u548c**\u5c31\u53ef\u4ee5\u4e86\n\n\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c**\u600e\u4e48\u5224\u65ad\u54ea\u4e9b\u533a\u95f4\u5305\u542b\u5f53\u524d\u626b\u5230\u7684\u7ebf\u6bb5**\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u533a\u95f4\u6c42\u548c\u6765\u8ba1\u7b97\u51fa\u626b\u63cf\u7ebf\u7684\u957f\u5ea6\uff0c\u4f46\u662f\u6211\u4eec\u8981\u8ba1\u7b97\u54ea\u4e00\u90e8\u5206\u7684\u7ebf\u6bb5\u5462\uff1f\u5c31\u50cf\u4e0a\u4e00\u5e45\u56fe\uff0c\u4f60\u600e\u4e48\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u52a0\u7684\u662f\u7070\u8272\u548c\u84dd\u8272\u90e8\u5206\uff0c\u4ec0\u4e48\u65f6\u5019\u52a0\u7684\u662f\u7070\u8272\u3001\u84dd\u8272\u548c\u9ed1\u8272\u90e8\u5206\uff0c\u8fd8\u6709\u4ec0\u4e48\u65f6\u5019\u52a0\u7684\u662f\u7070\u8272\u548c\u84dd\u8272\u548c\u9ed1\u8272\u548c\u7d2b\u8272\u90e8\u5206\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u8981\u5f15\u8fdb**\u5165\u8fb9**\u548c**\u51fa\u8fb9**\n\n\u6b64\u5165\u8fb9\u51fa\u8fb9\u975e\u56fe\u8bba\u7684\u5165\u8fb9\u51fa\u8fb9\u3002\u8fd9\u91cc\u7684\u5165\u8fb9\uff0c\u6307\u7684\u662f**\u4e00\u4e2a\u77e9\u5f62\u4e2d\u7b2c\u4e00\u6761\u88ab\u626b\u5230\u7684\u7ebf\u6bb5**\uff1b\u800c\u51fa\u8fb9\uff0c\u5c31\u662f**\u8fd9\u4e2a\u77e9\u5f62\u7b2c\u4e8c\u6761\uff0c\u4e5f\u5c31\u662f\u6700\u540e\u4e00\u6761\u88ab\u626b\u5230\u7684\u7ebf\u6bb5**\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b50\u53bb\u7406\u89e3\uff1a\u626b\u63cf\u5230\u4e00\u6761\u5165\u8fb9\u610f\u5473\u7740\u6709\u4e00\u4e2a\u77e9\u5f62\u8fdb\u5165\u5230\u626b\u63cf\u7ebf\u626b\u63cf\u7684\u533a\u57df\u91cc\u9762\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u8ba1\u7b97\u9762\u79ef\u7684\u65f6\u5019\u5f53\u7136\u8981\u52a0\u4e0a\u8fd9\u4e00\u90e8\u5206\uff1b\u800c\u626b\u63cf\u5230\u4e00\u6761\u51fa\u8fb9\u4e5f\u5c31\u610f\u5473\u7740\u6709\u4e00\u4e2a\u77e9\u5f62\u5df2\u7ecf\u626b\u63cf\u5b8c\u4e86\uff0c\u8fd9\u4e2a\u77e9\u5f62\u4e5f\u5c31\u4e0d\u5728\u626b\u63cf\u7ebf\u626b\u63cf\u7684\u533a\u57df\u4ee5\u5185\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u4e0d\u518d\u9700\u8981\u8fd9\u4e00\u90e8\u5206\u4e86\n\n\u6211\u4eec\u8bbe**\u5165\u8fb9\u4e3a**$1$ \uff0c**\u51fa\u8fb9\u4e3a**$-1$\u3002\u6bcf\u4e2a\u8282\u70b9\u8bbe\u7acb\u4e00\u4e2a\u53d8\u91cf$tag$\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u8282\u70b9\u7ba1\u7406\u7684\u533a\u95f4\u662f\u4e0d\u662f\u6709\u5f53\u524d\u626b\u63cf\u5230\u7684\u7ebf\u6bb5\u7684\u4e00\u90e8\u5206\uff0c\u5224\u65ad\u6709\u6ca1\u6709\u7684\u4f9d\u636e\u662f\u8282\u70b9\u7684$tag$\u662f\u5426$>0$\u3002\u5982\u679c$>0$\u5c31\u8bf4\u660e\u5305\u542b\u4e86\u7ebf\u6bb5\u7684\u4e00\u90e8\u5206\uff0c$=0$\u5c31\u662f\u6ca1\u6709\u5305\u542b\uff0c**\u4e0d\u53ef\u80fd**\u51fa\u73b0$<0$\u7684\u60c5\u51b5\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u5f53\u6211\u9047\u5230\u4e00\u6761\u51fa\u8fb9\u65f6\uff0c\u5c31\u53ef\u4ee5\u4e0e\u4e4b\u524d\u4e00\u6761\u5165\u8fb9\u52a0\u4e0a\u7684\u62b5\u6d88\u6389\u3002\u518d\u6839\u636e$tag$\u7684\u5b9a\u4e49\uff0c\u5224\u65ad\u8fd9\u4e2a\u8282\u70b9\u6240\u7ba1\u7406\u7684\u8303\u56f4\u662f\u5426\u5305\u542b\u88ab\u626b\u5230\u7684\u7ebf\u6bb5\uff0c\u6709\u7684\u8bdd\u5c31\u52a0\u4e0a\n\n\u6211\u4eec\u5176\u5b9e\u4e5f\u53ef\u4ee5\u6839\u636e\u4e2a\u4eba\u559c\u597d\uff0c\u53ef\u4ee5\u8bbe**\u5165\u8fb9\u4e3a**$2$,**\u51fa\u8fb9\u4e3a**$-2$\u6216\u8005**\u5165\u8fb9\u4e3a**$3$\uff0c**\u51fa\u8fb9\u4e3a**$-3$\u7b49\u7b49\uff0c\u53ea\u8981\u5165\u8fb9\u548c\u51fa\u8fb9**\u4e92\u4e3a\u76f8\u53cd\u6570\u4e14\u5165\u8fb9\u503c** $>0$ $>$ **\u51fa\u8fb9\u503c\u7684\u90fd\u53ef\u4ee5**(\u4e5f\u53ef\u4ee5\u5165\u51fa\u8fb9\u4e92\u4e3a\u76f8\u53cd\u6570\u4e14\u5165\u8fb9\u5c0f\u4e8e\u51fa\u8fb9\uff0c\u4f46\u540e\u9762\u7684\u64cd\u4f5c\u5c31\u8981\u4fee\u6539\u4e00\u4e0b\u4e86)\n\n\u90a3\u4e48\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u6a21\u62df\u4e00\u4e0b\u7b97\u6cd5\u6d41\u7a0b:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/eavcszry.png)\n\n\u5047\u8bbe\u9ed1\u3001\u84dd\u3001\u7070\u3001\u7c89\u3001\u7d2b\u6240\u6846\u8d77\u6765\u7684\u7ebf\u6bb5\u90fd\u4e3a$1$\uff0c\u68d5\u8272\u77e9\u5f62\u7684\u5bbd\u4e3a$2$\uff0c\u8349\u7eff\u8272\u548c\u7070\u84dd\u8272\u77e9\u5f62\u5bbd\u4e3a$1$\uff0c\u5f00\u59cb\u6a21\u62df\n\n\n\u626b\u5230**\u7b2c\u4e00\u6761\u8fb9\uff0c\u662f\u4e14\u80af\u5b9a\u662f\u5165\u8fb9**\u3002\u90a3\u4e48\u6211\u4eec\u52a0\u4e0a\u8fd9\u4e00\u90e8\u5206\u957f\u5ea6\uff0c\u521a\u597d\u5728\u84dd\u8272\u3001\u7070\u8272\u548c\u7c89\u8272\u533a\u57df\uff0c\u8fd9\u4e09\u4e2a\u533a\u57df$tag$\u90fd\u52a0$1$\n\n\u5f53\u524d\u5404\u533a\u57df$tag$:\n```\n\u9ed1=0\n\u84dd=1\n\u7070=1\n\u7c89=1\n\u7d2b=0\n```\n\n\u6211\u4eec\u53ea\u8ba1\u7b97$tag$\u5927\u4e8e$0$\u7684\u533a\u57df\u7684\u957f\u5ea6\u3002\u6240\u4ee5$ans=ans+$ $($\u84dd\u8272$+$\u7070\u8272$+$\u7c89\u8272$)$ $ * $ \u68d5\u8272\u77e9\u5f62\u7684\u5bbd $=0+(1+1+1) * 2=6$\n\n\u626b\u5230\u7b2c\u4e8c\u6761\u8fb9\uff0c\u4e5f\u662f\u5165\u8fb9\u3002\u6240\u4ee5\u9ed1\u8272\u548c\u7d2b\u8272\u7684\u533a\u57df$tag$\u52a0$1$\n\n\u5f53\u524d\u5404\u533a\u57df$tag$:\n```\n\u9ed1=1\n\u84dd=1\n\u7070=1\n\u7c89=1\n\u7d2b=1\n```\n\u540c\u6837\u8ba1\u7b97$tag$\u5927\u4e8e$0$\u7684\u533a\u57df\u7684\u957f\u5ea6\u3002$ans=ans+$ $($ \u9ed1\u8272$+$\u84dd\u8272$+$\u7070\u8272$+$\u7c89\u8272$+\u7d2b\u8272) * $\u8349\u7eff\u8272\u77e9\u5f62\u5bbd\u5ea6 $=6+(1+1+1+1+1)* 1=11$ \n\n\u626b\u63cf\u5230\u7b2c\u4e09\u6761\u8fb9\u3002\u8fd9\u662f\u4e00\u6761**\u51fa\u8fb9**\u3002\u4f46\u662f\uff0c\u8fd9\u91cc\u53ea\u6709\u7070\u8272\u533a\u57df\u624d\u542b\u6709\u8fd9\u6761\u51fa\u8fb9,\u6240\u4ee5\u53ea\u6709\u7070\u8272\u533a\u57df\u7684$tag$\u51cf$1$,\u5176\u5b83\u533a\u57df\u7684$tag$\u4e0d\u53d8\n\n\u5f53\u524d\u5404\u533a\u57df$tag$:\n```\n\u9ed1=1\n\u84dd=1\n\u7070=0\n\u7c89=1\n\u7d2b=1\n```\n\u73b0\u5728\u7070\u8272\u533a\u57df\u7684$tag$\u7b49\u4e8e$0$\u4e86\uff0c\u6211\u4eec\u5c31\u4e0d\u518d\u9700\u8981\u8ba1\u7b97\u7070\u8272\u533a\u57df\u8fd9\u4e00\u90e8\u5206\u7684\u957f\u5ea6\uff0c\u53ea\u8ba1\u7b97\u5176\u5b83\u533a\u57df\u7684\u3002$ans=ans+($\u9ed1\u8272$+$\u84dd\u8272$+$\u7c89\u8272$+$\u7d2b\u8272$)* $\u7070\u84dd\u8272\u77e9\u5f62\u5bbd$=11+(1+1+1+1)* 1=15$\n\n\u8fd9\u91cc\u56e0\u4e3a\u91cd\u53e0\u4e86\u4e24\u6761\u7ebf\u6bb5\uff0c\u6240\u4ee5\u8fd9\u4e00\u5e45\u56fe\u5b9e\u9645\u4e0a\u53ea\u6709**\u56db**\u6761\u7ebf\u6bb5\u3002\u626b\u63cf\u5230\u7b2c**\u4e09**\u6761\u7ebf\u6bb5\u65f6\u5019\u5176\u5b9e\u5df2\u7ecf\u5ba3\u544a**\u626b\u63cf\u7ed3\u675f**\u4e86\u3002\u56e0\u4e3a**\u6700\u540e\u4e00\u6761\u7ebf\u6bb5\u662f\u4e14\u80af\u5b9a\u662f\u51fa\u8fb9**\uff0c\u8fd9\u6761\u7ebf\u6bb5\u7684\u540e\u9762\u4e5f**\u4e0d\u53ef\u80fd\u518d\u6709\u9762\u79ef\u8986\u76d6**,\u800c\u4e14\u626b\u63cf\u5230\u6700\u540e\u4e00\u6761\u7ebf\u6bb5\u6240\u6709\u7684$tag$\u90fd\u4f1a\u53d8\u6210$0$\u3002\u591a\u8ba1\u7b97\u8fd9\u4e00\u6b65\u5c31\u7565\u663e\u5197\u6742\u3002\u6240\u4ee5\u5728**\u9762\u79ef\u5e76**\u4e2d\uff0c\u53ef\u4ee5\u4e0d\u7528\u8ba1\u7b97\u5230\u6700\u540e\u4e00\u6761\u7ebf\u6bb5\n\n\u4e0d\u7528\u626b\u7b2c\u56db\u6761\u8fb9\u4e86\uff0c\u8f93\u51fa$ans$\u5373\u53ef\n\n\u7ed9\u51fa\u8fd9\u4e00\u5e45\u56fe\u7684\u6570\u636e\u5427:\n\n\u8f93\u5165:\n```\n3\n0 1 3 4\n2 3 4 5\n2 0 4 2\n```\n\u8f93\u51fa:\n```\n15\n```\n\u81f3\u6b64\uff0c\u6574\u4e2a\u7b97\u6cd5\u5927\u6982\u6846\u67b6\u6211\u4eec\u5df2\u7ecf\u8bb2\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u73b0\u5728\u6765\u8bb2\u4e00\u4e9b\u5c0f\u7ec6\u8282\n\n### \u7ec6\u82821:\n\n\u6839\u636e\u4e0a\u9762\u7684\u4e00\u4e9b\u4f8b\u5b50\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8fd9\u91cc\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u662f**\u7ebf\u6bb5**\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u4e2a**\u70b9**\u3002\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u8bb0\u5f55\u7684\u662f\u4e00\u6574\u6761\u7ebf\u6bb5\uff0c\u800c\u4e0d\u5e94\u8be5\u8bb0\u5f55\u8282\u70b9\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5728\u4fee\u6539$tag$\u8fd8\u6709\u533a\u95f4\u6c42\u548c\u7684\u65f6\u5019\u8981\u600e\u4e48\u505a\uff1f\u4f8b\u5982\u8fd9\u5e45\u56fe:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/eavcszry.png)\n\n~~\u53c8\u653e\u9001~~\n\n\u79bb\u6563\u5316\u4ee5\u540e\uff0c$y$\u5750\u6807\u5171$5$\u4e2a\uff0c\u603b\u533a\u95f4\u4e3a$[1,5]$\u3002\u626b\u63cf\u5230\u7b2c\u4e00\u6761\u8fb9\u65f6\uff0c\u9700\u8981\u66f4\u6539\u7684\u533a\u95f4\u4e3a$[2,4]$\u3002\u8fd9\u91cc$mid=(2+4)>>1=3$\u3002\u8981\u662f\u76f4\u63a5\u6309\u7ebf\u6bb5\u6811\u6a21\u677f\u6765\u4fee\u6539\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u5c06\u4fee\u6539\u533a\u95f4$[2,3]$\u548c$[4,4]$\n\n\u54a6\uff0c\u600e\u4e48\u51fa\u73b0\u4e86$[4,4]$?\u8fd9\u662f\u4e00\u4e2a\u70b9\u554a\uff1f\u8fd9\u4e0d\u662f\u4e00\u6761\u7ebf\u6bb5\u554a\uff1f\u8981\u662f\u4fee\u6539\u548c\u67e5\u8be2\u533a\u95f4$[2,4]$\u65f6\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u4fee\u6539\u67e5\u8be2\u533a\u95f4$[2,3]$\u548c\u533a\u95f4$[3,4]$\u5417\uff1f\n\n\u8981\u662f\u6211\u4eec\u4e0d\u91c7\u53d6\u4e00\u4e9b\u64cd\u4f5c\uff0c\u90a3\u4e48\u6211\u4eec\u5b9e\u9645\u4fee\u6539$[2,4]$\u7684$tag$\u8fd8\u6709\u533a\u95f4\u6c42\u548c\u65f6\uff0c\u5c31\u53ea\u4f1a\u4fee\u6539\u548c\u52a0\u4e0a$[2,3]$\u8fd9\u4e2a\u90e8\u5206\uff0c\u800c\u4f1a\u6f0f\u6389$[3,4]$\u8fd9\u4e00\u90e8\u5206\u3002\u8fd9\u6837\u5b50\u5f53\u7136\u662f\u4e0d\u5bf9\u7684\n\n\u4f17\u6240\u5468\u77e5\uff0c\u533a\u95f4\u91cc\u6709$n$\u4e2a\u70b9\uff0c\u5c31\u610f\u5473\u7740\u533a\u95f4\u6709$n-1$\u6761\u7ebf\u6bb5\u3002\u6211\u4eec\u4e0d\u59a8**\u5c06\u533a\u95f4$[l,r]$\u8868\u793a\u6210$[l,r+1]$**,\u4e5f\u5c31\u662f$[l,r]$**\u5b9e\u9645\u4e0a\u662f\u533a\u95f4**$[l,r+1]$**\u7684\u7ebf\u6bb5**\n\n\u56de\u5230\u4f8b\u5b50\u3002\u8981\u662f\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u6211\u4eec\u4fee\u6539$[2,3]$,\u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u662f\u5728\u4fee\u6539$[2,4]$,\u56e0\u4e3a$[2,3]$\u8868\u793a\u7684\u5176\u5b9e\u662f$[2,4]$~~\u5e9f\u8bdd~~\u3002\u800c\u6211\u4eec\u4fee\u6539\u5230\u4e86\u4fee\u6539$[2,2]$\u548c$[3,3]$\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u4e5f\u6b63\u662f\u5728\u4fee\u6539$[2,3]$\u548c$[3,4]$\uff0c\u521a\u597d\u80fd\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u7684\n\n\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u867d\u7136\u8fd8\u4f1a\u51fa\u73b0\u4fee\u6539\u67e5\u8be2\u533a\u95f4$[i,i]$\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u8fd9\u5b9e\u9645\u662f\u533a\u95f4$[i,i+1]$\u3002\u8fd9\u6837\u5b50\u4e5f\u4e0d\u518d\u4f1a\u51fa\u73b0\u8bb0\u5f55\u8282\u70b9\u7684\u60c5\u51b5\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5728\u4fee\u6539\u548c\u67e5\u8be2\u533a\u95f4$[l,r]$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u4fee\u6539\u548c\u67e5\u8be2\u7684\u662f$[l,r-1]$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\n\n\u8fd9\u7b2c\u4e00\u4e2a\u7ec6\u8282\uff0c\u662f\u6211\u89c9\u5f97\u6bd4\u8f83\u91cd\u8981\u7684\u5730\u65b9\uff0c\u5e94\u5f53\u91cd\u89c6\n\n### \u7ec6\u82822:\n\n\u65e2\u7136\u8981\u7528\u5230\u533a\u95f4\u67e5\u8be2\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u5e94\u8be5\u8981\u6253\u61d2\u6807\u8bb0\u5462\uff1f\n\n\u5176\u5b9e\u4e0d\u7136\uff0c\u6211\u4eec\u8981\u7684\uff0c\u53ea\u662f$tr[1].c$\uff0c\u4e5f\u5c31\u662f\u6574\u4e2a\u56fe\u8c61\u5305\u542b\u7684\u88ab\u626b\u5230\u7684\u7ebf\u6bb5\u7684\u957f\u5ea6\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u6839\u672c\u6ca1\u6709\u5fc5\u8981$pushdown$\u4e0b\u653e\u5230\u5404\u4e2a\u8282\u70b9\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5e94\u8be5$pushup$\u4e0a\u653e\u5230\u6839\u8282\u70b9\uff0c\u4e0d\u65ad\u7ef4\u62a4\u8fd9\u4e2a\u6839\u8282\u70b9\n\n\n\u597d\u4e86\uff0c\u5c31\u8bb2\u8fd9\u4e48\u591a\uff0c\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801(\u9644\u5e26\u6ce8\u91ca):\n```\n#include<cstdio>\n#include<algorithm>\n#define ri register int\nusing namespace std;\ntypedef long long ll;\nll ans;\nll n;\nll x1,x2,y1,y2;\nll y[210000];//\u7528\u6765\u79bb\u6563\u5316 \nstruct smx\n{\n\tll y1,y2,x,mark;\n\t//y1,y2\u8868\u793a\u8fd9\u6761\u7ebf\u6bb5\u4e0a\u9762\u7684\u90a3\u4e2a\u70b9\u548c\u4e0b\u9762\u7684\u90a3\u4e2a\u70b9\u7684y\u5750\u6807 \n\t//\u8fd9\u91cc\u7684x\u5728\u8fd9\u91cc\u4e0d\u4f1a\u7528\u5230\uff0c\u53ea\u662f\u7528\u6765\u6392\u5e8f\u800c\u5df2\n\t//mark\u8868\u793a\u8fd9\u6761\u8fb9\u662f\u5165\u8fb9\u8fd8\u662f\u51fa\u8fb9 \n}line[210000];\nbool cmp(smx a,smx b){return a.x<b.x;}//\u4ee5x\u5750\u6807\u8fdb\u884c\u6392\u5e8f\nstruct node\n{\n\tll l,r,lc,rc,c,tag;\n\t//lc,rc\u4e3a\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7684\u7f16\u53f7\n\t//tag\u7528\u6765\u5224\u65ad\u626b\u63cf\u7ebf\u626b\u5230\u4e0b\u4e00\u6761\u7ebf\u6bb5\u65f6\u8fd8\u5305\u4e0d\u5305\u62ec\u8fd9\u4e2a\u77e9\u5f62  \n}tr[410000];ll len;\nvoid bt(ll l,ll r)//\u5efa\u6811 \n{\n\tlen++;int num=len;\n\ttr[num].l=l;tr[num].r=r;tr[num].lc=tr[num].rc=-1;tr[num].c=tr[num].tag=0;\n\tif(l==r)return ;\n\telse\n\t{\n\t\tint mid=(l+r)>>1;\n\t\ttr[num].lc=len+1;bt(l,mid);\n\t\ttr[num].rc=len+1;bt(mid+1,r);\n\t}\n}\nvoid pushup(ll num,ll l,ll r)\n{\n\tif(!tr[num].tag)//\u5982\u679ctag=0 \n\t{\n\t\tif(l==r)tr[num].c=0;//[l,r]\u8868\u793a\u7684\u662f[l,r+1],\u6240\u4ee5\u8fd9\u91cc\u7684\u610f\u601d\u662f\u5982\u679cl==r+1\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740\u5b83\u662f\u6811\u6700\u5e95\u4e0b\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u5b83\u4e0d\u4f1a\u6709\u513f\u5b50\uff0c\u53c8\u6ca1\u6709\u88ab\u7ebf\u6bb5\u8986\u76d6\uff0c\u6240\u4ee5c\u4e3a0 \n\t\telse tr[num].c=tr[tr[num].lc].c+tr[tr[num].rc].c;//\u867d\u7136\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u8986\u76d6\uff0c\u4f46\u5b83\u7684\u5b50\u8282\u70b9\u53ef\u80fd\u4f1a\u88ab\u8986\u76d6\uff0c\u6240\u4ee5\u52a0\u4e0a\u81ea\u5df1\u7684\u513f\u5b50\u8282\u70b9 \n\t}\n}\nvoid change(ll num,ll l,ll r,ll k)//num\u4e3a\u8282\u70b9\u7f16\u53f7\uff0cl\u3001r\u4e3a\u4fee\u6539\u8303\u56f4\uff0ck\u7528\u6765\u4fee\u6539 \n{\n\tif(l<=tr[num].l&&tr[num].r<=r)\n\t{\n\t\ttr[num].tag+=k; \n\t\tif(tr[num].tag)tr[num].c=y[tr[num].r+1]-y[tr[num].l];//\u5982\u679ctag>0\u8981\u52a0\u4e0a\u3002\u53c8\u56e0\u4e3a\u8fd9\u91cc\u7684r\u5176\u5b9e\u662fr-1\u7684\uff0c\u4f46\u79bb\u6563\u5316\u7684\u8fd9\u4e2ay\u6570\u7ec4\u5374\u6ca1\u6709\u8fd9\u79cd\u64cd\u4f5c\uff0c\u6240\u4ee5\u8981\u52a01 \n\t\telse tr[num].c=0;//tag=0\u5c31\u4e0d\u52a0 \n\t\tpushup(num,tr[num].l,tr[num].r);//\u7ef4\u62a4 \n\t\treturn ;\n\t}\n\tint lc=tr[num].lc,rc=tr[num].rc;\n\tint mid=(tr[num].l+tr[num].r)>>1;\n\tif(r<=mid)change(lc,l,r,k); \n\telse if(mid+1<=l)change(rc,l,r,k);\n\telse change(lc,l,mid,k),change(rc,mid+1,r,k);\n\tpushup(num,tr[num].l,tr[num].r);//\u7ef4\u62a4 \n}\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(ri i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n\t\ty[(i<<1)-1]=y1;y[i<<1]=y2;//\u79bb\u6563\u5316 \n\t\tline[(i<<1)-1]=(smx){y1,y2,x1,1};line[i<<1]=(smx){y1,y2,x2,-1};//\u8bb0\u5f55\u7ebf\u6bb5 \n\t}\n\tn<<=1;//\u4e00\u4e2a\u77e9\u5f62\u5c31\u6709\u4e24\u6761\u7ebf\u6bb5 \n\tsort(y+1,y+n+1);//\u79bb\u6563\u5316\u64cd\u4f5c \n\tsort(line+1,line+n+1,cmp);//\u6309\u7167x\u5750\u6807\u7684\u5927\u5c0f\u987a\u5e8f\u6765\u6392\u5e8f \n\tint cnt=unique(y+1,y+n+1)-(&y[1])-1;//\u53bb\u91cd\u64cd\u4f5c\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684y\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u56fe\u8c61\u6709\u51e0\u4e2ay\u3002\u56e0\u4e3a\u533a\u95f4[l,r]\u8868\u793a\u7684\u662f[l,r+1]\uff0c\u6240\u4ee5\u533a\u95f4[l,r-1]\u5b9e\u9645\u4e0a\u662f[l,r]\uff0c\u6240\u4ee5\u603b\u533a\u95f4\u957f\u5ea6cnt\u8981\u591a\u51cf\u4e00\u4e2a1 \n\tbt(1,cnt);//\u5efa\u6811 \n\tfor(ri i=1;i<n;i++)//\u5f00\u59cb\u626b\u63cf\uff0c\u9762\u79ef\u5e76\u4e2d\u626b\u63cf\u5230n-1\u6761\u7ebf\u6bb5\u5373\u53ef\n\t{\n\t\ty1=lower_bound(y+1,y+cnt+2,line[i].y1)-y;//\u5f53\u524d\u8fd9\u6761\u7ebf\u6bb5\u7684y1\u5750\u6807\u7684\u79bb\u6563\u503c \uff0c\u8868\u793a\u7ebf\u6bb5\u7684y1\u662f\u5728\u7ebf\u6bb5\u6811\u7684\u7b2c(\u79bb\u6563\u503c)\u4e2a\u8282\u70b9 \n\t\ty2=lower_bound(y+1,y+cnt+2,line[i].y2)-y-1;//\u5f53\u524d\u8fd9\u6761\u7ebf\u6bb5\u7684y2\u5750\u6807\u7684\u79bb\u6563\u503c\uff0c\u8868\u793a\u7ebf\u6bb5\u7684y2\u662f\u5728\u7ebf\u6bb5\u6811\u7684\u7b2c(\u79bb\u6563\u503c)\u4e2a\u8282\u70b9\uff0c\u540c\u65f6\u4e3a\u4e86\u5b9e\u9645\u4e0a\u662f\u6c42[l,r],\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u7684\u662f[l,r-1]\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u51cf1 \n\t\tchange(1,y1,y2,line[i].mark);//\u4fee\u6539\n\t\tans+=tr[1].c*(line[i+1].x-line[i].x);//ans\u8bb0\u5f55\u5f53\u524d\u626b\u5230\u7684\u9762\u79ef\n\t}\n\tprintf(\"%lld\\n\",ans);//\u8f93\u51faans \n\treturn 0;\n}\n```\n\u8fd9\u4e2a\u4ee3\u7801\u662f\u4ece\u5de6\u5f80\u53f3\u626b\u7684\uff0c\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u6253\u4e00\u4e0b\u4ece\u4e0b\u5f80\u4e0a\u626b\u7684\u4ee3\u7801\uff0c\u5176\u5b9e\u548c\u8fd9\u4e2a\u4ee3\u7801\u5df2\u7ecf\u6ca1\u4ec0\u4e48\u4e24\u6837\u4e86\n\n\u6211\u8fd8\u6253\u4e86\u4e00\u4e2a\u7248\u672c\uff0c\u4e24\u4e2a\u4ee3\u7801\u867d\u7136\u770b\u8d77\u6765\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u4f46\u601d\u60f3\u662f\u4e00\u81f4\u7684:\n```\n#include<cstdio>\n#include<algorithm>\n#define ri register int\nusing namespace std;\ntypedef long long ll;\nll ans;\nll n;\nll x1,x2,y1,y2;\nll y[210000];\nstruct smx\n{\n\tll y1,y2,x,mark;\n}line[210000];\nbool cmp(smx a,smx b){return a.x<b.x;}//\u6392\u5e8f \nstruct node\n{\n\tll c,tag;\n\t//tag\u7528\u6765\u5224\u65ad\u626b\u63cf\u7ebf\u626b\u5230\u4e0b\u4e00\u6761\u7ebf\u6bb5\u65f6\u8fd8\u5305\u4e0d\u5305\u62ec\u8fd9\u4e2a\u77e9\u5f62 \n}tr[810000];\nvoid pushup(ll num,ll l,ll r) \n{\n\tif(!tr[num].tag)\n\t{\n\t\tif(l==r)tr[num].c=0; \n\t\telse tr[num].c=tr[num<<1].c+tr[num<<1|1].c;\n\t}\n}\nvoid change(ll num,ll l,ll r,ll y1,ll y2,ll k)//\u8fd9\u91cc\u7684l,r\u662fnum\u7684\u7ba1\u7406\u8303\u56f4,y1\u3001y2\u662f\u4e0a\u4e00\u4e2a\u4ee3\u7801\u7684l,r \n{\n\tif(y1<=l&&r<=y2)\n\t{\n\t\ttr[num].tag+=k;\n\t\tif(tr[num].tag)tr[num].c=y[r+1]-y[l];\n\t\telse tr[num].c=0;\n\t\tpushup(num,l,r);\n\t\treturn ;\n\t}\n\tll mid=(l+r)>>1;\n\tif(y1<=mid)change(num<<1,l,mid,y1,y2,k);\n\tif(mid+1<=y2)change(num<<1|1,mid+1,r,y1,y2,k);\n\tpushup(num,l,r);\n}\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(ri i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n\t\ty[(i<<1)-1]=y1;y[i<<1]=y2;\n\t\tline[(i<<1)-1]=(smx){y1,y2,x1,3};line[i<<1]=(smx){y1,y2,x2,-3};\n\t}\t\n\tn<<=1; \n\tsort(y+1,y+n+1);\n\tsort(line+1,line+n+1,cmp);\n\tint len=unique(y+1,y+n+1)-(&y[1])-1;\n\tfor(ri i=1;i<n;i++)\n\t{\n\t\ty1=lower_bound(y+1,y+len+2,line[i].y1)-y;\n\t\ty2=lower_bound(y+1,y+len+2,line[i].y2)-y-1;\n\t\tchange(1,1,len,y1,y2,line[i].mark);\n\t\tans+=tr[1].c*(line[i+1].x-line[i].x);\n\t}\n\tprintf(\"%lld\\n\",ans); \n\treturn 0;\n}\n```\n~~\u8c8c\u4f3c\u7b2c\u4e8c\u4e2a\u4ee3\u7801\u8981\u5feb\u4e00\u70b9~~\n\n# \u4e8c\u3001\u5468\u957f\u5e76\n\n# [P1856 [USACO5.5]\u77e9\u5f62\u5468\u957fPicture](https://www.luogu.com.cn/problem/P1856)\n\n\n\u8fd9\u4e00\u4e2a\u5c31\u662f\u5468\u957f\u5e76\u4e86\n\n\u53ea\u8981\u4f60\u770b\u61c2\u4e86\u9762\u79ef\u5e76\uff0c\u5468\u957f\u5e76\u5176\u5b9e\u662f\u5f88\u597d\u7406\u89e3\u7684\n\n\u7531\u4e8e\u8fd9\u91cc\u6c42\u7684\u662f\u5468\u957f\u800c\u4e0d\u518d\u662f\u9762\u79ef\u4e86\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230**\u5c31\u7528\u9762\u79ef\u5e76\u7684\u65b9\u6cd5\u4ece\u4e0b\u5f80\u4e0a\u626b\u4e00\u904d\uff0c\u7136\u540e\u4ece\u5de6\u5f80\u53f3\u626b\u4e00\u904d\uff0c\u6bcf\u6b21\u626b\u5230\u7ebf\u6bb5\u5c31\u7528**$ans+=tr[1].c$\u5c31\u597d\u4e86\n\n\u8981\u662f\u8fd9\u6837\u60f3\u7684\u8bdd\uff0c\u4f60\u5c31**\u9519\u4e86**\uff01\n\n\u6bd4\u5982\u8fd9\u4e00\u5e45\u56fe:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/eavcszry.png)\n\n~~\u53cc\u653e\u9001~~\n\n\u8fd8\u662f\u5047\u8bbe\u9ed1\u3001\u84dd\u3001\u7070\u3001\u7c89\u3001\u7d2b\u6240\u6846\u8d77\u6765\u7684\u7ebf\u6bb5\u90fd\u4e3a$1$\uff0c\u68d5\u8272\u77e9\u5f62\u7684\u5bbd\u4e3a$2$\uff0c\u8349\u7eff\u8272\u548c\u7070\u84dd\u8272\u77e9\u5f62\u5bbd\u4e3a$1$\n\n\u6211\u4eec\u5148\u4ece\u5de6\u5f80\u53f3\u626b\u3002\u626b\u5230\u7b2c\u4e00\u6761\u7ebf\u6bb5\uff0c$ans=ans+tr[1].c=0+(1+1+1)=3$\u3002\u76ee\u524d\u8fd8\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\n\n\u626b\u5230\u7b2c\u4e8c\u6761\u7ebf\u6bb5\uff0c$ans=ans+tr[1].c=3+(1+1+1+1+1)=8$?\n\n\uff1f\uff1f\uff1f\u4e3a\u4ec0\u4e48$ans$\u4f1a\u7b49\u4e8e$8$?\u4ece\u5de6\u5f80\u53f3\u626b\u7684\u8bdd\uff0c\u5230\u7b2c\u4e8c\u6761\u7ebf\u6bb5$ans$\u4e0d\u5e94\u8be5\u662f$5$\u5417?\u600e\u4e48\u56de\u4e8b\uff1f\n\n\u53d1\u73b0\u6ca1\u6709\uff1f\u5728\u626b\u5230\u7b2c\u4e8c\u6761\u8fb9\u7684\u65f6\u5019\uff0c\u5176\u5b83\u533a\u95f4\u7684$tag$\u4e5f\u662f$>0$\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u591a\u8ba1\u7b97\u4e86\u4e00\u4e9b\u90e8\u5206\n\n\u56e0\u4e3a\u5f53\u524d\u8986\u76d6\u548c\u5148\u524d\u8986\u76d6\u7684\u4ea4\u96c6\u5df2\u7ecf\u8ba1\u7b97\u8fc7\uff0c\u6240\u4ee5\u8981\u51cf\u53bb\uff0c\u8ba1\u7b97\u51fa\u6765\u7684\u7ed3\u679c\u5c31\u662f$ans$\u8981\u52a0\u7684\u662f$abs(tr[1].c$-\u4e0a\u4e00\u6b21\u7684$tr[1].c$$)$\n\n### \u4f46\u662f\uff0c\u4f60\u8c37\u51fa\u7684\u6570\u636e\u975e\u5e38\u6bd2\u7624\uff0c\u6211\u66fe\u5728\u8ba8\u8bba\u533a\u53d1\u73b0\u8fd9\u51e0\u4e2a\u8d34\uff1a[\u6d4b\u8bd5\u6570\u636e\u662f\u5426\u6709\u9519\uff1f\uff1f](https://www.luogu.com.cn/discuss/show/27564)\u548c[\u8bba\u67d0\u8c37\u7684\u7384\u5b66\u8bc4\u6d4b\u673a](https://www.luogu.com.cn/discuss/show/172131)\uff0c\u90fd\u53cd\u6620\u51fa\u8fd9\u4e2a\u95ee\u9898\n\n\u8fd9\u9053\u9898\u4e00\u5171\u6709\u516d\u4e2a\u6d4b\u8bd5\u70b9\uff0c\u4f46\u662f\u6709\u4e24\u4e2a\u70b9\u975e\u5e38\u6bd2\u7624\n\n\u6bd4\u5982\u7b2c\u4e94\u4e2a\u6570\u636e\u70b9\uff0c\u8981\u662f\u6392\u5e8f\u7528\u7684\u4e0d\u662f\u7a33\u5b9a\u6392\u5e8fstable_sort(sort\u662f\u4e0d\u7a33\u5b9a\u6392\u5e8f)\uff0c\u867d\u7136\u5728\u672c\u5730\u8f93\u51fa\u7684\u548c\u6837\u4f8b\u7b54\u6848\u4e00\u6837\uff0c\u4f46\u5728\u6d1b\u8c37\u7384\u5b66\u8bc4\u6d4b\u673a\u8bc4\u6d4b\u65f6\u7b54\u6848\u4f1a\u51fa\u9519\n\n\u800c\u7b2c\u516d\u4e2a\u6570\u636e\u70b9\u66f4\u52a0\u9b3c\u755c\uff0c\u8fde\u8f93\u5165\u987a\u5e8f\u90fd\u5361\uff0c\u6837\u4f8b\u5728\u6b64:\n```\nInput:\n2\n0 0 4 4\n0 4 4 8\n\nOutput:\n24\n```\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gqent8fg.png)\n\n\u5982\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\u51fa\u8fb9$2$\u548c\u5165\u8fb9$3$\u8ba1\u7b97\u4e86$2$\u6b21\uff0c\u56e0\u4e3a\u5148\u626b\u5230\u51fa\u8fb9$2$\uff0c$ans+=4$\uff1b\u626b\u5230\u5165\u8fb9$3$\uff0c$ans$\u53c8\u52a0\u4e86$4$\uff0c\u8fd9\u6837\u5b50\u5f97\u51fa\u6765\u7684\u7b54\u6848\u5c31\u662f$32$\n\n\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\uff0c\u53ef\u4ee5$A$\u6389\u8fd9\u4e24\u4e2a\u6570\u636e\u70b9\u3002\u5f53\u4e24\u6761\u7ebf\u6bb5\u91cd\u5408\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8ba9\u5165\u8fb9\u5148\u88ab\u626b\u63cf\uff0c\u518d\u6765\u626b\u63cf\u51fa\u8fb9\u3002\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u4e0d\u6015\u591a\u8ba1\u7b97\u5468\u957f\u4e86\n\n\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u5468\u957f\u5e76\u8981\u904d\u5386\u6bcf\u4e00\u6761\u7ebf\u6bb5\uff0c\u4e0d\u50cf\u9762\u79ef\u5e76\u4e00\u6837\u904d\u5386$n-1$\u6761\u7ebf\u6bb5\u5c31\u53ef\u4ee5\n\n\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801:\n\n```\n\n#include<cstdio>\n#include<algorithm>\n#define ri register int\nusing namespace std;\nint ans;\nint n;\nint x1,x2,y1,y2;\nint x[11000],y[11000];\nstruct smx\n{\n\tint zb1,zb2,h,mark;\n}line1[11000],line2[11000];\nbool cmp(smx a,smx b)\n{\n\tif(a.h==b.h)return a.mark>b.mark;//\u91cd\u5408\u65f6\u8ba9\u5165\u8fb9\u5148\n\treturn a.h<b.h;\n}\nstruct node\n{\n\tint c,tag;\n}tr1[41000],tr2[41000];\n//\u4e0b\u9762\u8fd9\u4e24\u4e2a\u626b\u63cf\u7ebf(\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3)\u6846\u67b6\u57fa\u672c\u4e00\u6837\uff0c\u7565\u663e\u5197\u6742 \nvoid pushup1(int num,int l,int r)\n{\n\tif(!tr1[num].tag)\n\t{\n\t\tif(l==r)tr1[num].c=0;\n\t\telse tr1[num].c=tr1[num<<1].c+tr1[num<<1|1].c;\n\t}\t\n}\nvoid pushup2(int num,int l,int r)\n{\n\tif(!tr2[num].tag)\n\t{\n\t\tif(l==r)tr2[num].c=0;\n\t\telse tr2[num].c=tr2[num<<1].c+tr2[num<<1|1].c;\n\t}\t\n}\nvoid change1(int x1,int x2,int k,int num,int l,int r)\n{\n\tif(x1<=l&&r<=x2)\n\t{\n\t\ttr1[num].tag+=k;\n\t\tif(tr1[num].tag)tr1[num].c=x[r+1]-x[l];\n\t\telse tr1[num].c=0;\n\t\tpushup1(num,l,r);\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tif(x1<=mid)change1(x1,x2,k,2*num,l,mid);\n\tif(mid+1<=x2)change1(x1,x2,k,2*num+1,mid+1,r);\n\tpushup1(num,l,r);\n}\nvoid change2(int y1,int y2,int k,int num,int l,int r)\n{\n\tif(y1<=l&&r<=y2)\n\t{\n\t\ttr2[num].tag+=k;\n\t\tif(tr2[num].tag)tr2[num].c=y[r+1]-y[l];\n\t\telse tr2[num].c=0;\n\t\tpushup2(num,l,r);\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tif(y1<=mid)change2(y1,y2,k,2*num,l,mid);\n\tif(mid+1<=y2)change2(y1,y2,k,2*num+1,mid+1,r);\n\tpushup2(num,l,r);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(ri i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\t\tx[(i<<1)-1]=x1;x[i<<1]=x2;\n\t\ty[(i<<1)-1]=y1;y[i<<1]=y2;\n\t\tline1[(i<<1)-1]=(smx){x1,x2,y1,1};line1[i<<1]=(smx){x1,x2,y2,-1};\n\t\tline2[(i<<1)-1]=(smx){y1,y2,x1,1};line2[i<<1]=(smx){y1,y2,x2,-1};\t\n\t}\t\n\tn<<=1;\n\tsort(x+1,x+n+1);sort(y+1,y+n+1);\n\tsort(line1+1,line1+n+1,cmp);\n\tsort(line2+1,line2+n+1,cmp);\n\tint len1=unique(x+1,x+n+1)-(&x[1])-1;\n\tint len2=unique(y+1,y+n+1)-(&y[1])-1;\n\tfor(ri i=1;i<=n;i++)//\u8981\u904d\u5386\u6bcf\u4e00\u6761\u7ebf\u6bb5 \n\t{\n\t\tint t;\n\t\tt=tr1[1].c;//\u8bb0\u5f55\u4e0a\u4e00\u6b21\u8986\u76d6\u957f\u5ea6 \n\t\tx1=lower_bound(x+1,x+len1+2,line1[i].zb1)-x;\n\t\tx2=lower_bound(x+1,x+len1+2,line1[i].zb2)-x-1;\n\t\tchange1(x1,x2,line1[i].mark,1,1,len1);\n\t\tans+=abs(tr1[1].c-t); \n\t\tt=tr2[1].c;//\u540c\u4e0a \n\t\ty1=lower_bound(y+1,y+len2+2,line2[i].zb1)-y;\n\t\ty2=lower_bound(y+1,y+len2+2,line2[i].zb2)-y-1;\n\t\tchange2(y1,y2,line2[i].mark,1,1,len2);\n\t\tans+=abs(tr2[1].c-t);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1*\u2605,\u00b0*:.\u2606(\uffe3\u25bd\uffe3)/$:*.\u00b0\u2605* \u3002\n\n\u611f\u8c22dalao [@JimmyFlower](https://www.luogu.com.cn/user/124676)\u548c [@DBK_Darkside](https://www.luogu.com.cn/user/161296)\u5728\u6211\u4e0d\u7406\u89e3\u7684\u5730\u65b9\u7ed9\u4e88\u6211\u5e2e\u52a9\uff0c\u611f\u8c22\uff01\n\n2020/08/14 16:13 \u521d\u7a3f",
        "postTime": 1597197551,
        "uid": 138299,
        "name": "paperghost_ls",
        "ccfLevel": 5,
        "title": "ls\u5b66\u4e60\u7b14\u8bb0note37:\u626b\u63cf\u7ebf(Line Sweep Algorithm)"
    },
    {
        "content": "\u840c\u65b0\u7684\u7b2c\u4e00\u53d1\u9898\u89e323333\n\n## \u672c\u9898\u89e3\u4e3b\u8981\u9002\u7528\u4e8e\u4e0d\u4f1a\u6253\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\n\n\u5173\u4e8e\u626b\u63cf\u7ebf\u7684\u90e8\u5206\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u53ef\u4ee5\u53c2\u7167\u5176\u4ed6\u9898\u89e3\u3002\n\n\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff0c\u53ef\u4ee5\u7528\u4e00\u6761\u76f4\u7ebf\u4ece\u5de6\u5411\u53f3\u626b\u63cf\u6240\u6709\u7ad6\u76f4\u7ebf\u6bb5\uff0c\u6bcf\u6b21\u8ba1\u7b97\u8fd9\u4e9b\u7ebf\u6bb5\u7684\u5e76\u96c6\u7684\u957f\u5ea6\uff0c\u7136\u540e\u628a\u5404\u4e2a\u5b50\u77e9\u5f62\u7684\u9762\u79ef\u76f8\u52a0\u3002\n\n\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u8fd9\u6837\uff1a\n\n**\u7ef4\u62a4\u4e00\u4e9b\u533a\u95f4\uff0c\u652f\u6301\u589e\u52a0\u548c\u5220\u9664\u533a\u95f4\uff0c\u6bcf\u6b21\u64cd\u4f5c\u540e\u6c42\u8fd9\u4e9b\u533a\u95f4\u5e76\u96c6\u7684\u957f\u5ea6\u3002**\n\n\u5927\u4f6c\u4eec\u770b\u5230\u8fd9\u4e2a\u95ee\u9898\u90fd\u4f1a\u60f3\u5230**\u7ebf\u6bb5\u6811**\n\n\u4f46\u662f\n\n# \u7ebf\u6bb5\u6811\u592a\u96be\u5566\u5624\u5624\u5624\uff01\uff01\n\n\u840c\u65b0\u521a\u5b66OI\u5b66\u4e0d\u4f1a\uff01\uff01\n\n\u4e8e\u662f\u5c31\u6253\u4e86\u5206\u5757\n\n\u5206\u5757\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(Nsqrt(N))\u7684\uff0c\u6e10\u8fdb\u610f\u4e49\u4e0a\u6bd4\u7ebf\u6bb5\u6811\u7684O(Nlog(N))\u6162\u3002\u7136\u800c\u5b9e\u9645\u5e94\u7528\u4e2d\u5b83\u8dd1\u7684\u5e76\u6ca1\u6162\u5230\u54ea\u53bb\n\n\u9996\u5148\u79bb\u6563\u5316\uff08\u524d\u9762\u5404\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\u8bb2\u7684\u5f88\u6e05\u695a\uff0c\u4e0d\u591a\u8bb2\u4e86\uff09\uff0c\u628a1e9\u7684\u8303\u56f4\u8f6c\u5316\u62102e5\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a2e5\u7684\u8303\u56f4\u5206\u6210\u82e5\u5e72\u4e2a\u5757\u4e86\u3002\n\n\u73b0\u5728\u8003\u8651\u6dfb\u52a0\u548c\u5220\u9664\u533a\u95f4\u7684\u64cd\u4f5c\u3002\u6dfb\u52a0\u7684\u533a\u95f4\u4f1a\u5305\u62ec\u4e00\u4e9b\u5b8c\u6574\u7684\u5757\uff0c\u533a\u95f4\u4e24\u7aef\u4e5f\u4f1a\u5305\u62ec\u5757\u7684\u4e00\u90e8\u5206\uff0c\u4e0b\u9762\u5206\u5f00\u5904\u7406\n\n\u5bf9\u4e8e\u5b8c\u6574\u7684\u5757\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4bn\uff0cbn[i]\u8868\u793a\u6709\u591a\u5c11\u4e2a\u533a\u95f4**\u5b8c\u6574\u5730\u5305\u62ec**\u4e86\u7b2ci\u4e2a\u5757\u3002\n\n\u5bf9\u4e8e\u5757\u7684\u4e00\u90e8\u5206\uff0c\u7528\u6570\u7ec4a\u8bb0\u5f55\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7ecf\u8fc7\u4e86\u8be5\u70b9\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u53ea\u9700\u7edf\u8ba1**\u6ca1\u6709\u5b8c\u6574\u5305\u62ec**\u8be5\u5757\u7684\u533a\u95f4\u3002\u4fee\u6539a\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e2alen\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5757\u4e2d\u7531**\u6ca1\u6709\u5b8c\u6574\u5305\u62ec**\u8be5\u5757\u7684\u533a\u95f4\u8d21\u732e\u7684\u7ebf\u6bb5\u957f\u5ea6\u3002\n\n\n\u67e5\u8be2\u5e76\u96c6\u957f\u5ea6\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u679a\u4e3e\u6bcf\u4e2a\u5757\uff0c\u5982\u679cbn[i]\u4e0d\u4e3a0\u5c31\u52a0\u5757\u7684\u957f\u5ea6\uff0c\u5982\u679cbn[i]\u4e3a0\u5c31\u52a0len[i]\n\n\u4e0a\u4ee3\u7801\uff08\u7565\u4e11\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define N 200000\nint n, m, pt[N];\t\t//pt\u6570\u7ec4\u8bb0\u5f55\u79bb\u6563\u5316\u4e4b\u524d\u7684\u539f\u59cb\u5750\u6807\nstruct Ed {\n\tint p, d, u, in;\n} as[N];\t\t\t\t//\u7ad6\u76f4\u7ebf\u6bb5\nbool operator < (Ed a, Ed b) {\n\treturn a.p < b.p;\n}\t\t\t//\u4ece\u5de6\u5411\u53f3\u626b\u63cf\n#define BS 500\t\t\t//\u6bcf\u4e2a\u5757\u7684\u957f\u5ea6\n#define BN 400\t\t\t//\u5757\u7684\u6700\u5927\u6570\u91cf\nint a[N], len[BN], bn[BN], sum[BN];\ninline void addp(int p, int v, int b) {\n\tif (!a[p]) len[b] += pt[p+1]-pt[p];//\u5982\u679c\u4fee\u6539\u4f7fa[i]\u4e0d\u4e3a\u96f6\u5219len\u52a0\u4e0a\u8be5\u70b9\u7684\u957f\u5ea6\n\ta[p] += v;\n\tif (!a[p]) len[b] -= pt[p+1]-pt[p];//\u5982\u679c\u4fee\u6539\u4f7fa[i]\u4e3a\u96f6\u5219len\u51cf\u53bb\u8be5\u70b9\u7684\u957f\u5ea6\n}\nvoid add(int x, int y, int v) {\n\tint xb = x/BS, yb = y/BS;\n\tif (xb == yb) {\t\t//\u533a\u95f4\u4e24\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u5185\n\t\tfor (int i = x; i <= y; i++) addp(i, v, xb);\n\t\treturn;\n\t}\n\tfor (int i = x; i < (xb+1)*BS; i++) addp(i, v, xb);\t\t//\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u7684\u4e00\u90e8\u5206\n\tfor (int j = xb+1; j < yb; j++) bn[j] += v;\t\t//\u5b8c\u6574\u7684\u5757\n\tfor (int i = yb*BS; i <= y; i++) addp(i, v, yb);\t\t//\u53f3\u7aef\u70b9\u6240\u5728\u7684\u5757\u7684\u4e00\u90e8\u5206\n}\nint query() {\n\tint ans = 0;\n\tfor (int i = 0; i*BS < m; i++) {\n\t\tif (bn[i]) ans += sum[i];\n\t\telse ans += len[i];\n\t}\n\treturn ans;\n}\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d%d%d%d\", &as[i].p, pt+i, &as[i+n].p, pt+n+i);\n\t\tas[i].d = as[i+n].d = pt[i];\n\t\tas[i].u = as[i+n].u = pt[i+n];\n\t\tas[i].in = 1; as[i+n].in = -1;\t\t//in=1\u8868\u793a\u77e9\u5f62\u7684\u5de6\u8fb9\u754c\uff0c\u5373\u6dfb\u52a0\u533a\u95f4\uff0cin=-1\u8868\u793a\u5220\u9664\u533a\u95f4\n\t}\n\tstd::sort(as, as+2*n);\n\tstd::sort(pt, pt+2*n);\n\tauto rd = std::unique(pt, pt+2*n);\t\t//\u79bb\u6563\u5316\n\tm = rd - pt;\n\tfor (int i = 0; i < m/BS; i++) sum[i] = pt[(i+1)*BS]-pt[i*BS];\t\t//\u6bcf\u4e2a\u5757\u7684\u957f\u5ea6\n\tif (m % BS != 0) sum[m/BS] = pt[m-1]-pt[(m/BS-1)*BS];\t\t\t//\u6700\u540e\u4e00\u4e2a\u5757\u7684\u957f\u5ea6\u9700\u8981\u7279\u5224\n\tlong long ans = 0; int last = 0;\t\t//\u4e0d\u5f00long long\u89c1\u7956\u5b97\n\tfor (int i = 0; i < 2*n; i++) {\n\t\tint d = std::lower_bound(pt, rd, as[i].d)-pt;\n\t\tint u = std::lower_bound(pt, rd, as[i].u)-pt;\n\t\tans += 1ll * (as[i].p-last) * query();\t\t//\u5f53\u524d\u5b50\u77e9\u5f62\u7684\u5bbd\u5ea6 * \u5f53\u524d\u7684\u7ebf\u6bb5\u957f\u5ea6\n\t\tadd(d, u-1, as[i].in);\n\t\tlast = as[i].p;\n\t}\n\tprintf(\"%lld\\n\", ans);\n}\n```\n",
        "postTime": 1565334456,
        "uid": 90893,
        "name": "\u93e1\u97f3\u30ea\u30f3",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "## \u9898\u89e3\n\n\u770b\u4e86\u600e\u4e48\u591a\u9898\u89e3\uff0c\u7adf\u7136\u6ca1\u6709\u4e00\u7bc7\u662f\u4e0b\u4f20\u6807\u8bb0\u7684\u3002\n\n\u6211\u6765\u5199\u4e00\u4efd\u5e38\u89c4\u7684\u4e0b\u4f20\u6807\u8bb0\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u6700\u5c0f\u503c\u7684\u4e2a\u6570\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u5982\u679c\u533a\u95f4\u6700\u5c0f\u503c>0\uff0c\u90a3\u4e48\u8fd4\u56de\u533a\u95f4\u957f\u957f\u5ea6\uff0c\u5426\u5219\u8bf4\u660e\u533a\u95f4\u6709\u4e9b\u5730\u65b9\u662f0\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u533a\u95f4\u957f\u5ea6-\u6700\u5c0f\u503c\u4e2a\u6570\uff08\u957f\u5ea6\uff09\n\n\u7136\u540e\u5c31\u662f\u666e\u901a\u7ebf\u6bb5\u6811\u64cd\u4f5c\u4e86\uff0c\u4e0d\u9700\u8981\u6807\u8bb0\u7528\u4f18\u5316\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define next Next\n#define last Last\n#define int long long\nconst int N=1e6+5;\nint n,gs,len,b[N],mi[N*4],lazy[N*4],sum[N*4],Len[N*4];\nstruct node{\n\tint val,l,r,opt;\n}a[N];\n/*char buf[1<<21],*p1=buf,*p2=buf;\ninline int gc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}*/\n#define gc getchar\ninline int read()\n{\n\tint ret=0,f=0;char c=gc();\n\twhile(!isdigit(c)){if(c=='-')f=1;c=gc();}\n\twhile(isdigit(c)){ret=ret*10+c-48;c=gc();}\n\tif(f)return -ret;return ret;\n}\nvoid pushup(int nod)\n{\n    mi[nod]=min(mi[nod*2],mi[nod*2+1]);\n    if(mi[nod]==mi[nod*2])sum[nod]=sum[nod*2];\n    else sum[nod]=0;\n    if(mi[nod]==mi[nod*2+1])sum[nod]+=sum[nod*2+1];\n}\nvoid pushdown(int nod)\n{\n    if(lazy[nod]==0)return;\n    mi[nod*2]+=lazy[nod];\n    mi[nod*2+1]+=lazy[nod];\n    lazy[nod*2]+=lazy[nod];\n    lazy[nod*2+1]+=lazy[nod];\n    lazy[nod]=0;   \n}\nvoid build(int nod,int l,int r)\n{\n\tLen[nod]=b[r+1]-b[l];\n\tif(l==r)\n\t{\n\t\tsum[nod]=Len[nod];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(nod*2,l,mid);\n\tbuild(nod*2+1,mid+1,r);\n\tpushup(nod);\n}\nvoid change(int nod,int l,int r,int L,int R,int val)\n{\n    if(l==L&&r==R)\n    {\n        mi[nod]+=val;\n        lazy[nod]+=val;\n        return;\n    }\n    pushdown(nod);\n    int mid=(l+r)/2;\n    if(R<=mid)change(nod*2,l,mid,L,R,val);\n    else if(L>mid)change(nod*2+1,mid+1,r,L,R,val);\n    else{\n        change(nod*2,l,mid,L,mid,val);\n        change(nod*2+1,mid+1,r,mid+1,R,val);\n    }\n    pushup(nod);\n}\nint find(int nod,int l,int r,int L,int R)\n{\n    if(l==L&&r==R)\n    {\n        if(mi[nod]>0)return Len[nod];\n        return Len[nod]-sum[nod];\n    }\n    pushdown(nod);\n    int mid=(l+r)/2;\n    if(R<=mid)return find(nod*2,l,mid,L,R);\n    else if(L>mid)return find(nod*2+1,mid+1,r,L,R);\n    else return find(nod*2,l,mid,L,mid)+find(nod*2+1,mid+1,r,mid+1,R);\n    pushup(nod);\n}\nbool cmp(node a,node b)\n{\n\treturn a.val<b.val;\n}\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x1=read(),y1=read(),x2=read(),y2=read();\n\t\ta[++gs]=(node){x1,y1,y2,1};\n\t\ta[++gs]=(node){x2,y1,y2,-1};\n\t\tb[++len]=y1;\n\t\tb[++len]=y2;\n\t}\n\tsort(b+1,b+len+1);\n\tlen=unique(b+1,b+len+1)-b-1;\n\tbuild(1,1,len-1);\n\tfor(int i=1;i<=gs;i++)\n\t{\n\t\ta[i].l=lower_bound(b+1,b+len+1,a[i].l)-b;\n\t\ta[i].r=lower_bound(b+1,b+len+1,a[i].r)-b;\n\t}\n\tsort(a+1,a+gs+1,cmp);\n\tint ans=0;\n\tfor(int i=1;i<gs;i++)\n\t{\n\t\tif(a[i].l<a[i].r)change(1,1,len-1,a[i].l,a[i].r-1,a[i].opt);\n\t\tans=ans+find(1,1,len-1,1,len-1)*(a[i+1].val-a[i].val);\n\t}\n\tcout<<ans;\n}\n```",
        "postTime": 1573732774,
        "uid": 39484,
        "name": "\u7c73\u5947",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "\u4e3a\u5565\u8981\u79bb\u6563\u5316\u554a\u3002\u3002\u591a\u9ebb\u70e6\u3002\u3002\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u5077\u61d2\u7684\u505a\u6cd5\uff1a\n\n\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811+\u6807\u8bb0\u6c38\u4e45\u5316\uff0c \u5c31\u53ef\u7701\u7565\u6389\u79bb\u6563\u5316\u5566\uff01\n\n\u5927\u6982\u7684\u601d\u8def\u548c\u5176\u4ed6\u7684\u9898\u89e3\u5dee\u4e0d\u591a\uff0c \u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c \u4e0b\u9762\u63d0\u4f9b\u505a\u6cd5\u7684\u5b9e\u73b0\uff0c \u4e3b\u8981\u5728\u6ce8\u91ca\u4e2d\u8bf4\u660e\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define ge getchar()\n#define Re read()\n\ninline int read() {\n\tint x = 0, ch;\n\twhile(!isdigit(ch = ge)) ;\n\twhile(isdigit(ch)) x = x * 10 + (ch ^ 48), ch = ge;\n\treturn x;\n}\n\nconst int MAXN = 200100;\n\nstruct Node {\n\tint l, r, p;\n\n\tNode() {}\n\tNode(int l, int r, int p):l(l), r(r), p(p) {}\n\n\tfriend bool operator < (Node a, Node b) { return a.p < b.p; }\n}Ins[MAXN + 1], Del[MAXN + 1];\n\nstruct Segment_Tree { // \u4e0b\u9762\u662f\u7ebf\u6bb5\u6811\n\t#define ls T[x].r\n\t#define rs T[x].l\n\t\n\tstruct Node { int l, r, sum, tg; } T[MAXN << 6]; // \u6bcf\u4e00\u6b21\u4fee\u6539\u6700\u591a\u4fee\u6539\u7684\u70b9\u6570\u6709log\u7ea7\u522b\uff0c \u6240\u4ee5\u52a8\u6001\u5f00\u70b9\u8981\u4e58log\uff08\u6700\u597d\u518d\u4e582\uff09\n\tint ct;\n\n\tinline void pushup(int x, int l, int r) {\n\t\tif(T[x].tg) T[x].sum = r - l + 1; // \u5982\u679c\u8fd9\u4e2a\u70b9\u4e0a\u6709\u6807\u8bb0\uff0c \u90a3\u4e48\u5c31\u8bf4\u660e\u88ab\u7ebf\u6bb5\u8986\u76d6\u4e86\uff0c \u957f\u5ea6\u5c31\u662f r-l+1\n\t\telse T[x].sum = T[ls].sum + T[rs].sum; // \u6ca1\u6709\u6807\u8bb0\u5c31\u4ece\u7ebf\u6bb5\u6811\u4e0a\u7684\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u7ee7\u627f\n\t}\n// \u6ca1\u6709pushdown \u6807\u8bb0\u6c38\u4e45\u5316\u8282\u7701\u7a7a\u95f4\n\tinline void Modify(int&x, int l, int r, int L, int R, int v) {\n\t\tif(!x) x = ++ct; // \u52a8\u6001\u5f00\u70b9\n\t\tif(L <= l && r <= R) {\n\t\t\tT[x].tg += v; // \u66f4\u65b0\u6807\u8bb0\n\t\t\tpushup(x, l, r); // \u66f4\u65b0\u8282\u70b9\u503c\n\t\t\treturn ;\n\t\t} int mid = (l + r) >> 1;\n\t\tif(L <= mid) Modify(ls, l, mid, L, R, v);\n\t\tif(mid < R) Modify(rs, mid + 1, r, L, R, v);\n\t\tpushup(x, l, r); // \u522b\u5fd8\u4e86\u66f4\u65b0\n\t}\n\n\tinline int Query() { return T[1].sum; } // \u8be2\u95ee\u6cbfy\u8f74\u622a\u7ebf\u6bb5\u7684\u957f\u5ea6\u548c\uff0c \u76f8\u5f53\u4e8e\u662f\u7ebf\u6bb5\u6811\u76841\u53f7\u8282\u70b9\u5b58\u7684\u957f\u5ea6\u548c\u3002\n\n\t#undef ls\n\t#undef rs\n}seg; // \u4e0a\u9762\u662f\u7ebf\u6bb5\u6811\n\nint main() {\n\tint n = Re, mi = 1e9, mx = 0;\n\tfor(int i = 1; i <= n; i++) {\n\t\tint lx = Re, ly = Re, rx = Re, ry = Re;\n\t\tIns[i] = Node(ly, ry, lx);\n\t\tDel[i] = Node(ly, ry, rx);\n\t\tmi = min(mi, ly);\n\t\tmx = max(mx, ry);\n\t} int rt = 0; long long res = 0;\n\tsort(Ins + 1, Ins + 1 + n); Ins[n + 1] = Node(0, 0, 2e9);\n\tsort(Del + 1, Del + 1 + n); Del[n + 1] = Node(0, 0, 2e9);\n\tfor(int i = 1, a = 1, b = 1, N = n << 1, las = 0; i <= N; i++) {\n\t\tint x = min(Ins[a].p, Del[b].p);\n\t\tres += 1LL * (x - las) * seg.Query(), las = x; // \u6c42\u51fa\u4e0a\u6b21\u8be2\u95ee\u7684\u6a2a\u5750\u6807\u5dee * \u5f53\u524d\u626b\u63cf\u7ebf\u4e0a\u7684\u6cbfy\u8f74\u7684\u622a\u7ebf\u6bb5\u957f\u5ea6\u548c\u3002\n\t\tif(Ins[a].p == x) seg.Modify(rt, mi, mx, Ins[a].l, Ins[a].r - 1, 1), ++a; // \u5982\u679c\u5f53\u524d\u8fd9\u4e2ax\u5750\u6807\u9700\u8981\u63d2\u5165\u4e00\u6761\u7ebf\u6bb5\uff0c \u90a3\u4e48\u5c31+1\n\t\telse seg.Modify(rt, mi, mx, Del[b].l, Del[b].r - 1, -1), ++b; // \u5982\u679c\u5220\u9664\u5c31-1\n        //\u8fd9\u4e00\u6bb5\u4e3a\u5565\u8981\u5c06r-1\u5462\uff1f \u56e0\u4e3a\u7ebf\u6bb5\u6811\u91cc\u5934\u7684\u7ebf\u6bb5\u9ed8\u8ba4\u8ba1\u7b97\u7684\u957f\u5ea6\u4e3a r-l+1\uff0c \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u628ar-1\u4e4b\u540e\u624d\u7b26\u5408\u8ba1\u7b97\u9762\u79ef\u7684\u516c\u5f0f\uff0c \u800c\u4e14\u6240\u6709\u63d2\u5165\u7684\u7ebf\u6bb5\u7684r\u90fd\u51cf\u4e861\u4e4b\u540e\u8ba1\u7b97\u5e76\u96c6\u5e76\u4e0d\u4f1a\u5f71\u54cd\u3002\n\t} printf(\"%lld\\n\", res);\n\treturn 0; // \u5b8c\u7ed3\u6492\u82b1\n} // \u6ca1\u6709\u79bb\u6563\u5316\u771f\u6e05\u723d\u554a\uff08\u96fe\uff09\n```",
        "postTime": 1569078962,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "# P5490\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\uff08\u9898\u89e3\uff09\n\n### PS\n\u8fd9\u9053\u9898\u6570\u636e\u8303\u56f4\u5361\u4e86\u6211\u534a\u5929\uff0c\u521a\u5f00\u59cb\u6ca1\u5f00$\\texttt{long long}$\uff0c\u5927\u7ea2\u5927\u7d2b\u3002[\u5177\u4f53\u8bb0\u5f55](https://www.luogu.org/record/22357252)  \n\u7136\u540e\u5f00\u4e86$\\texttt{long long}$\uff0c\u5927\u7eff\u5927\u7d2b\u3002[\u5177\u4f53\u8bb0\u5f55](https://www.luogu.org/record/22357280)  \n\u6700\u540e\u628a\u6570\u636e\u8303\u56f4\u6269\u5927\u4e86$\\texttt{10}$\u500d\uff0c\u7ec8\u4e8e$\\texttt{A}$\u4e86\u6b64\u9898\u3002\n\n### \u9898\u89e3\n\u9996\u5148\u5b89\u5229\u51e0\u7bc7\u522b\u4eba\u7684\u626b\u63cf\u7ebf\u8be6\u89e3[\u5176\u4e00](https://blog.csdn.net/sslz_fsy/article/details/82902644)\uff0c\u626b\u63cf\u7ebf\u5c31\u662f\u628a\u77e9\u5f62\u6362\u6210\u4e00\u6761\u4e00\u6761\u7ebf\uff0c\u7136\u540e\u4ece\u5de6\u5f80\u53f3\u626b\u4e00\u904d\u3002  \n\u5176\u4ed6\u89e3\u91ca\u90fd\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\t\t//\u6211\u7231\u4e07\u80fd\u5934\u6587\u4ef6\n#define int long long\t//\u4e0d\u5f00long long\u89c1\u7956\u5b97\nusing namespace std;\nconst int N=1000005;\t//\u6570\u636e\u8303\u56f4\u5f00\u5927\u4e8610\u500d\nstruct line{int l,r,h,fla;inline bool operator<(line b) {return h==b.h?l>b.l:h<b.h;}}l[N];\t\t//\u77e9\u5f62\u8fb9\u7f18\u7ebf\u7684\u7ed3\u6784\u4f53\nstruct tree{int sum,len;tree() {sum=len=0;}}t[N<<2];\t//\u7ebf\u6bb5\u6811\u7ed3\u6784\u4f53\nint n,tot=0,ans=0,y[N];\ninline void update(int x,int l,int r)\t//\u7ebf\u6bb5\u6811\u7684\u4e0a\u63a8\u6807\u8bb0\u64cd\u4f5c\n{\n\tif(t[x].sum>0) t[x].len=y[r]-y[l];\t\t//\u5982\u679c\u662f\u53f6\u8282\u70b9\uff0c\u90a3\u4e48\u957f\u5ea6\u5c31\u662f\u5b83\u672c\u8eab\u7684\u957f\u5ea6\n\telse t[x].len=t[x<<1].len+t[x<<1|1].len;\t//\u5426\u5219\u957f\u5ea6\u5c31\u662f\u5de6\u513f\u5b50\u4e0e\u53f3\u513f\u5b50\u7684\u548c\n}\ninline void chang(int x,int l,int r,int dl,int dr,int dc)\n{\n\tif(dl>=y[r]||y[l]>=dr) return;\t\t//\u4e0d\u5b58\u5728\u8fd9\u4e00\u6bb5\u533a\u95f4\n\tif(dl<=y[l]&&y[r]<=dr) t[x].sum+=dc,update(x,l,r);\t\t//\u4fee\u6539\uff0c\u52a0\u4e0adc\n\telse chang(x<<1,l,(l+r)>>1,dl,dr,dc),chang(x<<1|1,(l+r)>>1,r,dl,dr,dc),update(x,l,r);\t\t//\u6539\u5de6\u513f\u5b50\uff0c\u6539\u53f3\u513f\u5b50\uff0c\u4e0a\u63a8\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1,x1,y1,x2,y2;i<=n;i++)\t//\u8bfb\u5165\n\t{\n\t\tscanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n\t\tl[(i<<1)-1].h=x1,l[(i<<1)-1].l=y1,l[(i<<1)-1].r=y2,l[(i<<1)-1].fla=1;\n\t\tl[i<<1].h=x2,l[i<<1].l=y1,l[i<<1].r=y2,l[i<<1].fla=-1;\n\t\ty[(i<<1)-1]=y1,y[i<<1]=y2;\n\t}\t//\u8bfb\u5165\n\tn<<=1,sort(y+1,y+n+1),sort(l+1,l+n+1);\t//\u6392\u5e8f\uff0cn<<=1\u65b9\u4fbf\u64cd\u4f5c\n\tfor(int i=1;i<=n;i++) if(y[i]!=y[i+1]) y[++tot]=y[i];\t//\u79bb\u6563\u5316\n\tfor(int i=1;i<n;i++) chang(1,1,n,l[i].l,l[i].r,l[i].fla),ans+=(l[i+1].h-l[i].h)*t[1].len;\t//\u4ece\u5de6\u5411\u53f3\u626b\u4e00\u904d\n\treturn printf(\"%lld\\n\",ans),0;\t//\u5b8c\u7f8e\u7684\u8f93\u51fa\u7b54\u6848\u7136\u540e\u7ed3\u675f\n}\n```",
        "postTime": 1565233808,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P5490\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "### \u6628\u5929\u51fa\u7684\u9898\u4eca\u5929\u521a\u597d\u5b66\uff1f\n\n\u600e\u4e48\u8bf4\u5462\uff0c\u8fd9\u9053\u9898\u6570\u636e\u5f88\u6bd2\u7624\uff0chowever\uff0c\u6211\u5f00\u7684\u662f **unsigned long long**\n\n\u677f\u5b50\u9898\uff0c\u6211\u5c31\u4e0d\u8d58\u8ff0\u8fc7\u7a0b\u4e86\uff0c\u9009\u4e86\u51e0\u7bc7\u98ce\u683c\u4e0d\u540c\u7684\u535a\u5ba2\uff0c\u53ef\u4ee5\u53c2\u8003\u53c2\u8003\n\n1. [\u6211\u53c2\u8003\u7684\u535a\u5ba2](https://blog.csdn.net/xianpingping/article/details/83032798)\n\n2. [https://blog.csdn.net/sslz_fsy/article/details/82902644](https://blog.csdn.net/sslz_fsy/article/details/82902644)\n\n3. [https://www.cnblogs.com/headchen/p/9172491.html](https://www.cnblogs.com/headchen/p/9172491.html)\n\n\u76f8\u4fe1\u4f60\u4e00\u5b9a\u770b\u61c2\u4e86 ~~\uff08\u5c31\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u7801\uff09~~\n\n\u8fd8\u5728\u6293\u866b\u5b50\uff1f\u8fd9\u91cc\u662f\u4f60\u8981\u627e\u7684\u866b\u5b50\u4eec \uff1a\n\n~~\uff08\u65b9\u6cd5\u4e0d\u4e00\u6837\u5c31\u6ca1\u529e\u6cd5\u4e86\uff0c\u4e0b\u4e00\u7bc7\u66b4\u529b\u9898\u89e3\uff1f\uff09~~ \n\n```cpp\n#include <bits/stdc++.h>\n#define N 100005~\nusing namespace std;\n~\nstruct LINE {\n\tint l, r, h, d;\n\tLINE() {}\n\tLINE(int L, int R, int H, int D):l(L), r(R), h(H), d(D) {}\n\tbool operator< (const LINE &o) const { return h < o.h; }\n} line[N << 1];\nint n, m, cnt[N << 3], a[N << 1], sum[N << 3];//\u968f\u4fbf\u5f00\u5927\u70b9\n\nvoid push_up(int l, int r, int x) {\n\t//\u8bb0\u5f97\u5c06\u6811\u8282\u70b9\u533a\u95f4\u8f6c\u6362\u6210\u79bb\u6563\u4e0b\u6807QWQ\n\tif(cnt[x]) sum[x] = a[r + 1] - a[l];\n\telse if(l == r) sum[x] = 0;~\n\telse sum[x] = sum[x << 1] + sum[x << 1 | 1];\n}\n\nvoid update(int l, int r, int x, int d, int sl, int sr) {\n\tif(sl <= l && r <= sr) {\n\t\tcnt[x] += d;\n\t\tpush_up(l, r, x);\n\t\treturn;\n\t}~\n\tint mid = l + r >> 1;//push_down\u4e0d\u662f\u5fc5\u8981\u7684(\u89c1\u535a\u5ba23)\n\tif(sl <= mid) update(l, mid, x << 1, d, sl, sr);//\u522b\u4f20\u9519\u53c2\u6570\u554a\n\tif(sr > mid) update(mid + 1, r, x << 1 | 1, d, sl, sr);\n\tpush_up(l, r, x);\n}\n\nvoid init() {\n\tscanf(\"%d\", &n);\n\tint x1, y1, x2, y2;\n\tfor(int i = 0;i < n;i++) {\n\t\tscanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n\t\ta[m] = x1; line[m++] = LINE(x1, x2, y1, 1);//\u662f\u5de6\u4e0b\u70b9\u548c\u53f3\u4e0a\u70b9\n\t\ta[m] = x2; line[m++] = LINE(x1, x2, y2, -1);//\u6240\u4ee5 y1 < y2\n\t}\n\tsort(a, a + m);\n\tsort(line, line + m);\n\tm = unique(a, a + m) - a;//STL\u7684\u53bb\u91cd\u51fd\u6570\uff0c\u524d\u63d0\u662f\u8981\u6570\u503c\u6709\u5e8f\uff01\n}\n~\nvoid work() {\n\tunsigned long long ans = 0;//\u6bd2\u7624\u6570\u636e\n\tfor(int i = 0;i < n << 1;i++) {~\n\t\tint l = lower_bound(a, a + m, line[i].l) - a;//STL\u5927\u6cd5\u597d\n\t\tint r = lower_bound(a, a + m, line[i].r) - a;\n\t\tupdate(0, m - 1, 1, line[i].d, l, r - 1);//\u770b\u597d\u4f60\u7684\u79bb\u6563\u533a\u95f4\uff0c\u6211\u7684\u662f 0 -> m-1 \u54e6\n\t\tans += (unsigned long long)sum[1] * (line[i + 1].h - line[i].h);//\u8bb0\u5f97\u8f6c\u6362\uff0c\u4e58\u79ef\u662f\u53ef\u80fd\u7206int\u7684QAQ\n\t}\n\tprintf(\"%llu\", ans);//\u8f93\u51fa\u683c\u5f0f\u662f\"%llu\"\n}\n\nint main() {\n\tinit();\n\twork();\n\treturn 0;\n}~\n```\n\n~~\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u77edQAQ~~\n\n###### \u6211\u624d\u6ca1\u6709\u5728\u4ee3\u7801\u91cc\u4e71\u585e\u4e9b\u4ec0\u4e48char\u5462",
        "postTime": 1565177414,
        "uid": 133236,
        "name": "saxiy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7ef4\u62a4\u7ebf\u6bb5\u6811\u597d\u96be\u554a\uff08\u672c\u4eba\u8fc7\u4e8e\u849f\u84bb\uff09\n\n\u597d\u4e86\u5206\u4eab\u4ee5\u4e0b\u8fd9\u9898\u5230\u5e95\u600e\u4e48\u5efa\u6811\n\n\u9996\u5148\u60f3\u660e\u767d\u51e0\u4e2a\u95ee\u9898\uff1a\n1.\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7ef4\u62a4\u7684\u4fe1\u606f\u5fc5\u987b\u5177\u6709\u4ec0\u4e48\u6027\u8d28\uff1f\n\n2.\u9898\u4e2d\u54ea\u4e9b\u4fe1\u606f\u9700\u8981\u7ef4\u62a4\uff0c\u5176\u4e2d\u54ea\u4e9b\u5177\u6709\u8fd9\u4e00\u6027\u8d28\uff0c\u54ea\u4e9b\u4e0d\u5177\u6709\u8fd9\u4e00\u6027\u8d28\uff1f\n\n3.\u5bf9\u4e8e\u4e0d\u5177\u6709\u8fd9\u4e00\u6027\u8d28\u7684\u4fe1\u606f\uff0c\u600e\u4e48\u7ef4\u62a4\uff1f\n\n\u7b54\uff1a\n\n1.\u53ef\u52a0\u6027\n\n2.\u533a\u95f4\u539a\u5ea6\uff0c\u533a\u95f4\u88ab\u8986\u76d6\u957f\u5ea6\uff0c \u524d\u8005\u4e0d\u53ef\u52a0\uff0c\u540e\u8005\u53ef\u52a0\n\n\n\u524d\u4e24\u4e2a\u95ee\u9898\u975e\u5e38\u663e\u7136\u3002\u56e0\u4e3a\u672c\u9898\u5728\u626b\u63cf\u8fc7\u7a0b\u4e2d\u9700\u8981\u968f\u65f6\u4fee\u6539\u8986\u76d6\uff0c\u5e76\u968f\u65f6\u67e5\u8be2\u88ab\u8986\u76d6\u957f\u5ea6\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4e0b\uff1a\n\n\u6709\u4e00\u4e2a\u533a\u95f4[1\uff0cmx]\uff0c \u6bcf\u6b21\u5728[l, r]\u4e0a\u8fdb\u884c\u533a\u95f4\u52a01 \u6216\u8005\u533a\u95f4\u51cf1\uff0c \u6bcf\u6b21\u67e5\u8be2\u6709\u591a\u957f\u7684\u533a\u95f4\u4e0d\u662f\u96f6\u3002\n\n\u90a3\u4e48\u663e\u7136\u6709\u4e24\u4e2a\u91cd\u8981\u4fe1\u606f\uff1a\n\n1. \u533a\u95f4[l\uff0cr]\u4e2d\uff0c \u4e0d\u662f\u662f0\u7684\u957f\u5ea6len\u3002\n\n2. \u533a\u95f4[l\uff0cr]\u4e2d\uff0c \u6bcf\u4e2a\u5b50\u533a\u95f4\u88ab\u8986\u76d6\u7684\u539a\u5ea6\n\n\n\u7b2c\u4e00\u6761\u4fe1\u606f\u662f\u7b54\u6848\uff0c\u7b2c\u4e8c\u6761\u4fe1\u606f\u7684\u610f\u4e49\u5728\u4e8e\u8fdb\u884c\u51cf\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u77e5\u9053\u672c\u533a\u95f4\u6709\u6ca1\u6709\u88ab\u51cf\u4e3a0\u3002 \u8bbe\u60f3\u4e0d\u7ef4\u62a4\u7b2c\u4e8c\u6761\u4fe1\u606f\u7684\u8bdd\uff0c\u5982\u679c\u672c\u533a\u95f4\u5b9e\u9645\u88ab\u8986\u76d6\u4e862\u6b21\uff0c\u90a3\u4e48\u51cf1\u7684\u65f6\u5019\u4f60\u5c31\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u88ab\u51cf\u4e3a0\u3002\u8fdb\u800c\u65e0\u6cd5\u4fee\u6539\u7b2c\u4e00\u6761\u4fe1\u606f\uff0c\u8fdb\u800c\u7b54\u6848\u65e0\u4ece\u5f97\u77e5\u3002\n\n\u597d\u4e86\uff0c\u5230\u8fd9\u91cc\uff0c\u663e\u7136\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86[l,mid]\u548c[mid,r]\u4e24\u4e2a\u533a\u95f4\u7684\u8986\u76d6\u957f\u5ea6len1\uff0c len2\uff0c \u90a3\u4e48\u5bf9\u4e8e\u533a\u95f4[l,r] \u7684\u533a\u95f4\u8986\u76d6\u957f\u5ea6len\u53ef\u4ee5\u76f4\u63a5\u7531 len1\uff0c len2 \u5f97\u77e5\uff0c\u5373\n\nlen = len1 + len2\n\n\u4e0d\u8fc7\u6709\u4e00\u4e2a\u6761\u4ef6\uff0c[l\uff0cr] \u5df2\u7ecf\u4e0d\u80fd\u88ab\u6574\u4f53\u8986\u76d6\n\n\u90a3\u4e48\u5982\u679c[l\uff0cr]\u88ab\u6574\u4f53\u8986\u76d6\u4e86\u5462\uff1f\n\n\u663e\u7136len = r-l\n\n\u73b0\u5728\u5bf9\u4e8e\u5f00\u5934\u7b2c\u4e09\u4e2a\u95ee\u9898\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u60f3\u6cd5\uff1f\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u6bcf\u4e00\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\uff0c\u7ef4\u62a4\u4e00\u4e2a\u4fe1\u606f\uff1a\u8be5\u533a\u95f4\u88ab\u6574\u4f53\u8986\u76d6\u7684\u6b21\u6570\uff0c\u8fd9\u6837\uff0c\u8be5\u4fe1\u606f\u5c31\u4e0d\u9700\u8981\u8fdb\u884c\u5408\u5e76\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u7684\u88ab\u8986\u76d6\u539a\u5ea6\uff0c\u4e0e\u5176\u4ed6\u8282\u70b9\u65e0\u5173\u3002\n\n\u90a3\u4e48\u7ee7\u7eed\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5982\u4f55\u4fee\u6539\uff1f\n\n\u5982\u679c\u5f53\u524d\u4fee\u6539\u4e3a[L,R] \u533a\u95f4\u52a01\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u666e\u901a\u533a\u95f4\u4fee\u6539\u7684\u601d\u8def\uff0c\u628a[L,R]\u5206\u89e3\u4e3a\u7ebf\u6bb5\u6811\u4e0a\u7684\u533a\u95f4\uff0c \u6bcf\u4e2a\u533a\u95f4\u7684\u8986\u76d6\u539a\u5ea6+1\uff0c \u5e76\u4e14\u6539\u5176len = r-l\n\n\u5982\u679c-1\uff0c \u90a3\u5c31\u5148\u7528\u533a\u95f4\u52a0\u7684\u601d\u8def-1\uff0c \u68c0\u67e5\u5f53\u524d\u533a\u95f4\u8986\u76d6\u539a\u5ea6\u662f\u5426\u4e3a0\uff0c\u5982\u679c\u4e3a0\uff0c \u90a3\u4e48\u533a\u95f4\u8986\u76d6\u957f\u5ea6len = len1 + len2 \uff08len1\uff0clen2\u4e3alen\u7684\u5b50\u533a\u95f4\u7684\u8986\u76d6\u957f\u5ea6\uff0c\u5c31\u662f\u8282\u70b9node\u7684\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u8986\u76d6\u957f\u5ea6\uff09\n\n\u597d\u4e86\uff0c\u4fee\u6539\u5b8c\u5168\u884c\u5f97\u901a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6logn\n\n\u67e5\u8be2\u5462\uff1f\n\n\u65e0\u8111\u67e5\u8be2\u6839\u8282\u70b9\u5373\u53ef\uff08\u9003\uff09\n\n\u81f3\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6nlogn\n\n\n\u6ce8\u610f\uff1a\n1.\u672c\u9898\u7ebf\u6bb5\u6811\u4f7f\u7528\u7684\u662f\u5b9e\u6570\u533a\u95f4\uff0c\u4e0d\u662f\u6574\u6570\u6570\u5217\uff01\u56e0\u6b64\u533a\u95f4\u9700\u8981\u4ed4\u7ec6\u8003\u8651\u8fb9\u754c\uff01\n\n2.\u8bf7\u4f7f\u7528unsigned long long \u8bb0\u5f55\u7b54\u6848\uff01\n\n3. \u56e0\u4e3a\u662f\u5b9e\u6570\u533a\u95f4\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u6570\u7ec4\u5f00\u56db\u500d\u4e0d\u591f\uff01\u672c\u4eba\u5f00\u4e86\u56db\u5341\u500d.\n\n\n\u5982\u679c\u9700\u8981\u4ee3\u7801\uff0c\u63d0\u4ea4\u8bb0\u5f55\u91cc\u641c\u672c\u4eba\u5373\u53ef\n\n\n",
        "postTime": 1570884688,
        "uid": 184681,
        "name": "cscy",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "\u8fd9\u5c31\u662f\u7ecf\u5178\u7684Atlantis\u95ee\u9898\u5427...  \n\u626b\u63cf\u7ebf\u7ecf\u5178\u9898.  \n\n![\u56fe1](https://cdn.luogu.com.cn/upload/pic/70020.png)  \n\u56fe1 - \u6837\u4f8b\n\n\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u6240\u6709\u7684\u7eb5\u5411\u8fb9.\n\n![\u56fe2](https://cdn.luogu.com.cn/upload/pic/70021.png)  \n\u56fe2 - \u7ea2\u8272\u8fb9\u5373\u4e3a\u4f9d\u6b21\u626b\u63cf\u5230\u7684\u8fb9.\n\n\u8fd9\u4e9b\u8fb9\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u8bb0\u5f55.\u9700\u8981\u8bb0\u5f55\u6a2a\u5750\u6807,\u4e0a\u4e0b\u8fb9\u754c(\u7eb5\u5750\u6807),\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u7ed3\u675f\u8fd8\u662f\u5f00\u59cb.  \n\u626b\u63cf\u8fd9\u4e9b\u8fb9\u65f6,\u6211\u4eec\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u7eb5\u5750\u6807\u88ab\u77e9\u5f62\u8986\u76d6\u4e86\u591a\u5c11.  \n\u5982\u6837\u4f8b,\u5f53$x=100$\u81f3$x=150$\u65f6,\u8986\u76d6\u4e86$y=100$\u81f3$y=200$\u7684\u90e8\u5206,\u5f53$x=150$\u81f3$x=200$\u65f6,\u8986\u76d6\u4e86$y=100$\u81f3$y=255$\u7684\u90e8\u5206,\u4ee5\u6b64\u7c7b\u63a8.\u6ce8\u610f\u8986\u76d6\u7684\u90e8\u5206\u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\u7684,\u56e0\u6b64\u6211\u4eec\u6570\u636e\u7ed3\u6784\u53ea\u7ef4\u62a4\u8986\u76d6\u7684\u957f\u5ea6,\u5373\u8986\u76d6\u4e86$y=100$\u81f3$y=200$,\u6211\u4eec\u53ea\u8bb0\u5f55\u8986\u76d6\u957f\u5ea6\u4e3a$100$.  \n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6bcf\u4e00\u6bb5\u5206\u522b\u6c42\u51fa\u8986\u76d6\u7684\u9762\u79ef\u5e76\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\u4e86.\n\n![\u56fe3](https://cdn.luogu.com.cn/upload/pic/70026.png)  \n\u56fe3 - \u8fd9\u4e9b\u9762\u79ef\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\n\n\u7136\u540e\u6211\u4eec\u8fd8\u9700\u8981\u89e3\u51b3\u600e\u4e48\u7ef4\u62a4\u8986\u76d6\u957f\u5ea6.  \n\u5982\u679c\u66b4\u529b\u7684\u8bdd\u590d\u6742\u5ea6\u5c31\u662f$O(n^2)$,\u5f88\u660e\u663e\u4e0d\u591f\u4f18\u79c0.  \n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4.\u5177\u4f53\u6765\u8bf4.\u5c31\u662f\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u8be5\u8282\u70b9\u6240\u5728\u533a\u95f4\u8986\u76d6\u7684\u6b21\u6570(\u8be5\u8282\u70b9\u5b50\u8282\u70b9\u5c31\u4e0d\u7528\u52a0\u4e0a\u53bb\u4e86),\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u5f00\u59cb,\u8986\u76d6\u6b21\u6570$+1$,\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u7ed3\u675f,\u8986\u76d6\u6b21\u6570$-1$.  \n\u5982\u679c\u67d0\u4e00\u4e2a\u8282\u70b9\u8986\u76d6\u6b21\u6570\u4e3a$0$,\u8be5\u8282\u70b9\u7684\u6743\u503c(\u5373\u8be5\u8282\u70b9\u6240\u4ee3\u8868\u533a\u95f4\u603b\u5171\u8986\u76d6\u7684\u957f\u5ea6)\u5c31\u662f\u8be5\u8282\u70b9\u5de6\u53f3\u513f\u5b50\u6743\u503c\u548c,\u5426\u5219\u8be5\u8282\u70b9\u7684\u6743\u503c\u5373\u4e3a\u8be5\u8282\u70b9\u6240\u5728\u533a\u95f4\u603b\u957f.  \n\u56e0\u4e3a\u77e9\u5f62\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u76f8\u7b49\u7684,\u6240\u4ee5\u8fd9\u6837\u505a\u662f\u6b63\u786e\u7684.  \n\u8fd8\u6709,\u9700\u8981\u6ce8\u610f\u4e00\u70b9,\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u662f\u6bcf\u4e00\u5c0f\u6bb5\u533a\u95f4\u8986\u76d6\u6b21\u6570,\u800c\u4e0d\u662f\u70b9\u7684\u8986\u76d6\u6b21\u6570,\u8bb0\u5f55\u70b9\u7684\u8986\u76d6\u6b21\u6570\u6ca1\u6709\u610f\u4e49.  \n\u5177\u4f53\u8bf7\u53c2\u8003\u4ee3\u7801.\n\n# \u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 100005\n#define i64 long long\n#define open(s) freopen( s\".in\", \"r\", stdin ), freopen( s\".out\", \"w\", stdout )\n#define fp( i, b, e ) for ( int i(b), I(e); i <= I; ++i )\n#define fd( i, b, e ) for ( int i(b), I(e); i >= I; --i )\n#define go( i, b ) for ( int i(b), v(to[i]); i; v = to[i = nxt[i]] )\ntemplate<typename T> inline void cmax( T &x, T y ){ x < y ? x = y : x; }\ntemplate<typename T> inline void cmin( T &x, T y ){ y < x ? x = y : x; }\n#define getchar() ( p1 == p2 && ( p1 = bf, p2 = bf + fread( bf, 1, 1 << 21, stdin ), p1 == p2 ) ? EOF : *p1++ )\nchar bf[1 << 21], *p1(bf), *p2(bf);\ntemplate<typename T>\ninline void read( T &x ){ char t(getchar()), flg(0); x = 0;\n\tfor ( ; !isdigit(t); t = getchar() ) flg = t == '-';\n\tfor ( ; isdigit(t); t = getchar() ) x = x * 10 + ( t & 15 );\n\tflg ? x = -x : x;\n}\nclock_t t_bg, t_ed;\n\nint T, N, NN, n;\nint a[MAXN << 1], b[MAXN << 1]; i64 ans;//\u6ce8\u610fans\u8981\u5f00long long\nstruct node{\n\tint x, u, d, v; // x\u8868\u793a\u4f4d\u7f6e,u\u8868\u793a\u4e0a\u533a\u95f4,d\u8868\u793a\u4e0b\u533a\u95f4\n\tbool operator < ( const node &t )const{ return x < t.x; } //\u6309\u4f4d\u7f6e\u6392\u5e8f\n}q[MAXN << 1];\n\nint tr[MAXN << 3]; int s[MAXN << 3];//\u56e0\u4e3a\u533a\u95f4\u4e2a\u6570\u5c31\u662fMAXN*2\u7ea7\u522b\u7684,\u518d*4\u5c31\u662fMAXN*8\n// tr\u8868\u793a\u8be5\u8282\u70b9\u6240\u4ee3\u8868\u533a\u95f4\u88ab\u8986\u76d6\u7684\u957f\u5ea6,s\u8868\u793a\u8986\u76d6\u6b21\u6570\n\nvoid Add( int c, int l, int r, int L, int R, int v ){\n\tif ( L > r || l > R ) return;\n\tconst int mid((l + r) >> 1), ls(c << 1), rs(ls | 1);\n\tif ( L <= l && r <= R ) return tr[c] = !(s[c] += v) ? l == r ? 0 : tr[ls] + tr[rs] : ( b[r + 1] - b[l] ), void();\n\tAdd( ls, l, mid, L, R, v ), Add( rs, mid + 1, r, L, R, v );\n\t!s[c] ? tr[c] = tr[ls] + tr[rs] : 0;\n}\n\nsigned main(){\n\tt_bg = clock();\n\tread(N); NN = N << 1;\n\tfor ( int i = 0; i < NN; i += 2 )\n\t\tread(q[i].x), read(a[i]), read(q[i + 1].x), read(a[i + 1]),\n\t\tb[i] = a[i], b[i + 1] = a[i + 1], q[i].v = 1, q[i + 1].v = -1;//+1\u8868\u793a\u8be5\u6bb5\u8986\u76d6\u6b21\u6570+1,-1\u540c\u7406\n\tsort( b, b + NN ), n = unique( b, b + NN ) - b;//\u56e0\u4e3a\u5750\u6807\u662f1e9\u7ea7\u522b\u7684,\u6240\u4ee5\u9700\u8981\u79bb\u6563\u5316\u6216\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\t\n\tfor ( int i = 0, t1, t2; i < NN; i += 2 ) \n\t\tt1 = lower_bound( b, b + n, a[i] ) - b, q[i].d = q[i+1].d = t1,\n\t\tt2 = lower_bound( b, b + n, a[i+1] ) - b, q[i].u = q[i+1].u = t2;\n\tsort( q, q + NN ), Add(1, 0, n - 2, q[0].d, q[0].u - 1, q[0].v);\n\t\n\tfp( i, 1, NN - 1 )\n\t\tans += 1ll * tr[1] * ( q[i].x - q[i - 1].x ),//\u52a0\u4e0a\u6bcf\u4e00\u6bb5\n\t\tAdd( 1, 0, n - 2, q[i].d, q[i].u - 1, q[i].v );\n\tprintf( \"%lld\\n\", ans );\n\tt_ed = clock();\n\tfprintf( stderr, \"\\n========info========\\ntime : %.3f\\n====================\\n\", (double)( t_ed - t_bg ) / CLOCKS_PER_SEC );\n\treturn 0;\n}\n\n```",
        "postTime": 1565177989,
        "uid": 70786,
        "name": "_louhc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u7b97\u6cd5\u7684\u672c\u8d28\u4e0d\u96be\u7406\u89e3  \n\u5c31\u662f\u7ebf\u6bb5\u6811\u4ece\u5de6\u5230\u53f3\u7ef4\u62a4\u533a\u95f4\u9762\u79ef\u5e76\uff0c\u6bcf\u6b21\u548cx\u95f4\u8ddd\u76f8\u52a0  \n\u4f46\u662f\u79bb\u6563\u5316\u540e\u5b9e\u73b0\u9700\u8981\u5f88\u591a\u7ec6\u8282  \n\u7ecf\u8fc7\u4e00\u901a\u79bb\u6563\u5316\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u5c06p\u5185\u6309\u7167x\u5750\u6807\u5b58\u5165\u6bcf\u6bb5\u7ebf\u6bb5\u79bb\u6563\u5316\u540e\u7684xy\u503c      \nlsx\u548clsy\u5bf9\u5e94\u79bb\u6563\u5316\u540ep[x]p[y]\u6240\u5bf9\u5e94\u7684\u6570\u503c   \n\u5728\u6b64\u53c2\u89c1\u4ee3\u7801   \n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define lc (p<<1)\n#define rc (p<<1|1)\nusing namespace std;\nstruct Point{\n\tint x1,x2,y1,y2;\n}q[200010];\nstruct Seg{\n\tint y1,y2,x,kind;\n}p[200010];\nint cnt;\nbool cmp(const Seg &xx,const Seg &yy){\n\treturn xx.x<yy.x;\n}\nint lsx[200010],lsy[200010],cntx,cnty;\nint find(int*ls,int cnt,int x){//\u4f7f\u7528\u6307\u9488\u5c31\u53ef\u4ee5\u4e0d\u7528\u5199\u4e24\u4e2afind \n\tint l=1,r=cnt+1;\n\twhile(l<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(ls[mid]<x)l=mid+1;\n\t\telse r=mid;\n\t}\n\treturn l; \n}\nstruct Node{\n\tint l,r,lazy,sum,ans;\n}T[800010];\nvoid build(int p,int l,int r){\n\tT[p].l=l;T[p].r=r;\n\tif(l==r){\n\t\tT[p].sum=lsy[l+1]-lsy[l];//\u4e24\u4e2ay\u5750\u6807\u7684\u5dee\u503c \n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n\tT[p].sum=T[lc].sum+T[rc].sum;\n} \ninline void pushup(int p){\n\tif(T[p].lazy)T[p].ans=T[p].sum;\n\telse if(T[p].l!=T[p].r)T[p].ans=T[lc].ans+T[rc].ans;\n\telse T[p].ans=0;\n}\nvoid update(int p,int ql,int qr,int v){\n\tif(ql<=T[p].l&&T[p].r<=qr){\n\t\tT[p].lazy+=v;\n\t\tpushup(p);\n\t\treturn;\n\t}\n\tint mid=(T[p].l+T[p].r)>>1;\n\tif(ql<=mid)update(lc,ql,qr,v);\n\tif(qr>mid)update(rc,ql,qr,v);\n\tpushup(p);//printf(\"%d %d\\n\",p,T[p].ans);\n}\nsigned main(){\n\tint n;\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%lld%lld%lld%lld\",&q[i].x1,&q[i].y1,&q[i].x2,&q[i].y2);\n\t\tlsx[++cntx]=q[i].x1;lsx[++cntx]=q[i].x2;\n\t\tlsy[++cnty]=q[i].y1;lsy[++cnty]=q[i].y2;\n\t}\n\tsort(lsx+1,lsx+cntx+1);\n\tcntx=unique(lsx+1,lsx+cntx+1)-lsx-1;\n\tsort(lsy+1,lsy+cnty+1);\n\tcnty=unique(lsy+1,lsy+cnty+1)-lsy-1;\n\t//unique\u9ed8\u8ba4\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u53bb\u91cd\u540e\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u540e\u65b9\u7684\u6307\u9488   \n\tfor(int i=1;i<=n;++i){\n\t\tq[i].x1=find(lsx,cntx,q[i].x1);\n\t\tq[i].x2=find(lsx,cntx,q[i].x2);\n\t\tq[i].y1=find(lsy,cnty,q[i].y1);\n\t\tq[i].y2=find(lsy,cnty,q[i].y2);\n\t\t//\u5c06q\u7684xy\u503c\u590d\u7528\u4e3a\u79bb\u6563\u5316\u540e\u7684xy\u503c  \n\t\tp[++cnt]=(Seg){q[i].y1,q[i].y2-1,q[i].x1,1};\n\t\tp[++cnt]=(Seg){q[i].y1,q[i].y2-1,q[i].x2,-1};\n\t\t//\u5982\u679cy2\u6ca1\u6709-1\u5c31\u4f1a\u51fa\u73b0\u533a\u95f4\u91cd\u590d,\u753b\u56fe\u53ef\u8bc1 \n\t}\n\tsort(p+1,p+cnt+1,cmp);\n\t//\u7ecf\u8fc7\u4e00\u901a\u79bb\u6563\u5316\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u5c06p\u5185\u6309\u7167x\u5750\u6807\u5b58\u5165\u6bcf\u6bb5\u7ebf\u6bb5\u79bb\u6563\u5316\u540e\u7684xy\u503c  \n\t//lsx\u548clsy\u5bf9\u5e94\u79bb\u6563\u5316\u540ep[x]p[y]\u6240\u5bf9\u5e94\u7684\u6570\u503c \n\tbuild(1,1,cnty);\n\tlong long ans=0;\n\tfor(int i=1;i<=cnt;++i){\n\t\tans+=T[1].ans*(lsx[p[i].x]-lsx[p[i-1].x]);\n\t\t//\u7528\u533a\u95f4\u5e76\u4e58\u4e0a\u4e24\u6bb5x\u7684\u8ddd\u79bb\u5c31\u662f\u8fd9\u4e00\u6bb5\u7684\u9762\u79ef \n\t\tupdate(1,p[i].y1,p[i].y2,p[i].kind);//\u65b0\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5 \n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1566884002,
        "uid": 138543,
        "name": "\u6597\u795e_\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "\u626b\u63cf\u7ebf\u677f"
    },
    {
        "content": "\u8fd9\u4e2a\u6587\u6863\u4e3b\u8981\u8bb2\u4e86\u4f5c\u8005\u5bf9\u4e8e\u626b\u63cf\u7ebf\u7684\u4e00\u4e9b\u7406\u89e3\uff0c\u4ee5\u53ca\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002\r\n\r\n\u626b\u63cf\u7ebf\uff0c\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u591a\u8fb9\u5f62\u7684\u9762\u79ef\u5e76\u95ee\u9898\uff0c\u4e5f\u53ef\u7528\u4e8e\u89e3\u51b3\u591a\u8fb9\u5f62\u7684\u5468\u957f\u5e76\u95ee\u9898\uff0c\u8fd9\u91cc\u53ea\u8bb2\u9762\u79ef\u5e76\u3002\r\n\r\n---\r\n\r\n\u626b\u63cf\u7ebf\u601d\u60f3\uff1a\u4f60\u5c06\u51e0\u4e2a\u957f\u65b9\u5f62\u653e\u5728\u4e00\u4e2a\u5750\u6807\u7cfb\u4e2d\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u957f\u65b9\u5f62\u7684\u6bcf\u4e00\u6761\u8fb9\u90fd\u4e0e\u5750\u6807\u8f74\u5782\u76f4\uff0c\u7136\u540e\u60f3\u8c61\u7740\u4e00\u6761\u6c34\u5e73\uff08\u7ad6\u76f4\uff09\u7684\u7ebf\u4ece\u5de6\uff08\u4e0b\uff09\u5411\u53f3\uff08\u4e0a\uff09\u6ed1\u8fc7\uff0c\u5c06\u6574\u4e2a\u56fe\u5f62\u6cbf\u7740\u6bcf\u6761\u8fb9\u6240\u5728\u7684\u76f4\u7ebf\u5207\u6210\u82e5\u5e72\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u77e9\u5f62\uff0c\u4ee5\u6b64\u6765\u8ba1\u7b97\u603b\u9762\u79ef\u3002\r\n\r\n\u5047\u8bbe\u6211\u4eec\u7684\u539f\u56fe\u662f\u8fd9\u6837\u7684\uff1a\r\n\r\n![\u539f\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/l7253rr9.png)\r\n\r\n\u90a3\u4e48\u7ecf\u8fc7\u5206\u5272\u4e4b\u540e\uff0c\u5b83\u662f\u8fd9\u6837\u7684\uff1a\r\n\r\n![a](https://cdn.luogu.com.cn/upload/image_hosting/63x23x7z.png)\r\n\r\n\u6211\u7528\u4e0d\u540c\u7684\u8272\u5757\u6807\u660e\u4e86\u4e0d\u540c\u6b21\u5206\u5272\u7684\u9762\u79ef\u3002\r\n\r\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u628a\u51e0\u4e2a\u590d\u6742\u7684\u591a\u8fb9\u5f62\u8f6c\u5316\u4e3a\u4e86\u6709\u9650\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u77e9\u5f62\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u7684\u6839\u672c\u601d\u8def\u5c31\u6765\u4e86\uff1a\r\n\r\n> \u6bcf\u5206\u5272\u51fa\u4e00\u90e8\u5206\u77e9\u5f62\uff0c\u6211\u4eec\u5c31\u5c06\u5176\u9762\u79ef\u7edf\u8ba1\u5165\u7b54\u6848\u3002\r\n>\r\n> \u5b83\u7684\u957f\u5ea6\u5c31\u662f\u8be5\u6bb5\u6240\u6709\u5272\u7ebf\u7684\u957f\u5ea6\u5e76\uff0c\u5bbd\u5ea6\u5c31\u662f\u8fd9\u6b21\u79fb\u52a8\u7684\u957f\u5ea6\uff0c\u76f8\u4e58\u5c31\u53ef\u4ee5\u5f97\u5230\u9762\u79ef\u3002\r\n>\r\n> \u7531\u4e8e\u77e9\u5f62\u4e24\u4e24\u4e0d\u76f8\u4ea4\uff0c\u6211\u4eec\u7684\u603b\u9762\u79ef\u5c31\u662f\u6bcf\u4e00\u6b65\u7684\u7b80\u5355\u52a0\u548c\u3002\r\n\r\n---\r\n\r\n\u73b0\u5728\uff0c\u6211\u4eec\u6765\u53e3\u80e1\u4e00\u4e0b\u4ee3\u7801\u601d\u8def\uff1a\r\n\r\n- \u5206\u5272\u51fa\u4e00\u90e8\u5206\u77e9\u5f62\r\n- \u6c42\u8be5\u6bb5\u5272\u7ebf\u7684\u957f\u5ea6\u5e76\r\n- \u6c42\u8fd9\u6b21\u79fb\u52a8\u7684\u5bbd\u5ea6\r\n- \u76f8\u4e58\u5f97\u5230\u9762\u79ef\uff0c\u5e76\u52a0\u5230\u603b\u9762\u79ef\u91cc\r\n- \u7ee7\u7eed\u4e0b\u4e00\u6b21\u5207\u5272\r\n\r\n\u90a3\u6211\u4eec\u5c31\u6765\u4e00\u6b65\u4e00\u6b65\u5c06\u53e3\u80e1\u53d8\u6210\u4ee3\u7801\u3002\r\n\r\n---\r\n\r\n> \u6572\u4ee3\u7801\u7684\u9b45\u529b\u4e4b\u4e00\u5c31\u5728\u4e8e\uff0c\u5b83\u80fd\u5c06\u4f60\u7684\u60f3\u6cd5\u5b8c\u5168\u4ed8\u8bf8\u5b9e\u8df5\u3002\r\n>\r\n> \u5982\u679c\u505a\u5f97\u597d\uff0c\u4f60\u7684\u4ee3\u7801\u4f1a\u5b8c\u5168\u7167\u4f60\u8bf4\u7684\u505a\uff0c\u8fd9\u662f\u4efb\u4f55\u5176\u5b83\u4e8b\u7269\u6240\u96be\u4ee5\u505a\u5230\u7684\u3002\r\n\r\n\u8fd9\u5c31\u662f\u6211\u7801\u4ee3\u7801\u7684\u6839\u672c\u539f\u56e0\uff1a\u8212\u5766\u3002\r\n\r\n\u597d\u4e86\uff0c\u95f2\u8bdd\u5c11\u8bf4\uff0c\u5f00\u59cb\u5728\u53e3\u80e1\u6d41\u7a0b\u540e\u53e3\u80e1\u7ec6\u8282\u5b9e\u73b0\u3002~~\u8fd8\u662f\u53e3\u80e1~~\r\n\r\n---\r\n\r\n\u4e3a\u4e86\u5206\u5272\u51fa\u4e00\u90e8\u5206\u77e9\u5f62\uff0c\u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u5206\u5272\u7684\u4f4d\u7f6e\u3002\r\n\r\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u6211\u4eec\u7684\u5207\u5272\u4f4d\u7f6e\u5c31\u662f\u6bcf\u6761\u4e0e\u626b\u63cf\u7ebf\u5e73\u884c\u7684\u8fb9\u7684\u4f4d\u7f6e\u3002\r\n\r\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6bcf\u6761\u9700\u8981\u5904\u7406\u7684\u8fb9\u5b58\u8d77\u6765\uff0c\u7136\u540e\u4f9d\u6b21\u5904\u7406\u5373\u53ef\u3002\r\n\r\n---\r\n\r\n\u63a5\u4e0b\u6765\u662f\u6c42\u5272\u7ebf\u7684\u957f\u5ea6\u5e76\uff0c\u8fd9\u91cc\u662f\u6700\u6838\u5fc3\u4e5f\u662f\u6700\u96be\u7684\u70b9\uff0c\u6211\u4eec\u5148\u653e\u4e00\u653e\u3002\r\n\r\n---\r\n\r\n\u6c42\u79fb\u52a8\u7684\u5bbd\u5ea6\u4e0d\u96be\uff0c\u5728\u5c06\u9700\u8981\u7684\u8fb9\u5b58\u8d77\u6765\u5e76\u6392\u5e8f\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u8981\u5c06\u8fd9\u6b21\u79fb\u52a8\u7684\u672b\u4f4d\u7f6e\uff08\u4e5f\u5c31\u662f\u8fb9\u7684\u6a2a\u5750\u6807\uff09\u51cf\u53bb\u8fd9\u6b21\u79fb\u52a8\u7684\u521d\u4f4d\u7f6e\uff08\u4e0a\u4e00\u6761\u8fb9\u7684\u6a2a\u5750\u6807\uff09\uff0c\u5c31\u80fd\u5f97\u5230\u5bbd\u5ea6\u3002\r\n\r\n---\r\n\r\n\u6c42\u9762\u79ef\u5565\u7684\u662f\u5c0f\u5b66\u77e5\u8bc6\uff0c\u5927\u5bb6\u90fd\u4f1a\u5427\u3002\r\n\r\n\u8fd9\u91cc\u63d0\u4f9b\u9762\u79ef\u516c\u5f0f\uff1a$\u9762\u79ef=\u957f\\times\u5bbd$\r\n\r\n\u7136\u540e\u628a\u6c42\u5f97\u7684\u9762\u79ef\u52a0\u5230\u603b\u9762\u79ef\u91cc\u9762\uff0c\u5c31\u5b8c\u6210\u4e86\u8fd9\u6b21\u5206\u5272\u7684\u7edf\u8ba1\u5de5\u4f5c\u3002\r\n\r\n---\r\n\r\n\u597d\u5427\uff0c\u6700\u7ec8\u8fd8\u662f\u8eb2\u4e0d\u8fc7\u6c42\u957f\u5ea6\u5e76\uff0c\u90a3\u597d\u5427\uff0c\u8bb2\u3002\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u6700\u6734\u7d20\u7684\u505a\u6cd5\uff1a\r\n\r\n\u627e\u5230\u8fd9\u6761\u8fb9\u4e4b\u540e\uff0c\u904d\u5386\u6bcf\u4e2a\u957f\u65b9\u5f62\uff0c\u5404\u81ea\u627e\u5230\u4e0e\u8fd9\u6761\u8fb9\u6240\u5728\u76f4\u7ebf\u76f8\u4ea4\u7684\u957f\u5ea6\u4e0e\u4f4d\u7f6e\uff0c\u7136\u540e\u6c42\u4e00\u4e0b\u5e76\u3002\r\n\r\n\u8fd9\u4e2a\u65b9\u6cd5\u60f3\u90fd\u4e0d\u7528\u60f3\uff0c\u56e0\u4e3a\u6734\u7d20\u505a\u6cd5\u80af\u5b9a\u662f\u9519\u7684\u3002\uff08\u72d7\u5934\uff09\r\n\r\n\u7136\u540e\u6211\u4eec\u7a0d\u5fae\u628a\u8fd9\u4e2a\u8dd1 $10^5$ \u7684\u6570\u636e\u9700\u8981\u597d\u51e0\u5e74\u7684\u7b97\u6cd5\u6539\u8fdb\u4e00\u4e0b\uff1a\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u7ebf\u6027\u7b97\u6cd5\u7684\u601d\u60f3\uff0c\u5229\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u7ef4\u62a4\u73b0\u5728\u7ebf\u6bb5\u4e0a\u6bcf\u4e2a\u70b9\u88ab\u8986\u76d6\u7684\u6b21\u6570\uff0c\u7136\u540e\u901a\u8fc7\u5dee\u5206\u6765\u8fdb\u884c\u4fee\u6539\u3002\r\n\r\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u4ee5\u7a7a\u95f4\u4e3a\u4ee3\u4ef7\uff0c\u5c06\u65f6\u95f4\u538b\u7f29\u5230\u4e86\u4e00\u5e74\u4ee5\u5185\u3002\r\n\r\n\uff08\u4f46\u662f\u7a7a\u95f4\u53ef\u80fd\u585e\u6ee1 CCF \u8bc4\u6d4b\u673a\u7684\u6240\u6709\u5185\u5b58\u6c60\u8fd8\u4e0d\u591f\uff09\r\n\r\n\u8fd9\u4e2a\u65b9\u6cd5\u8fd8\u9700\u8981\u6539\u8fdb\u3002\r\n\r\n\u6211\u4eec\u7ee7\u627f\u8fd9\u4e2a\u6838\u5fc3\u601d\u60f3\uff1a\u4e00\u76f4\u7ef4\u62a4\u7740\u6bcf\u4e2a\u70b9\u88ab\u8986\u76d6\u7684\u6b21\u6570\u3002\r\n\r\n\u4e3a\u4e86\u8fdb\u4e00\u6b65\u7684\u964d\u4f4e\u65f6\u95f4\u6d88\u8017\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u7ebf\u6bb5\u6811\u3002\r\n\r\n\u4f46\u662f\uff0c\u4f3c\u4e4e CCF \u7684\u8bc4\u6d4b\u673a\u5185\u5b58\u5360\u7528\u6bd4\u4e0a\u6b21\u8fd8\u591a\u4e00\u500d\u5462\u3002\r\n\r\n\u4e3a\u4e86\u964d\u4f4e\u7a7a\u95f4\u6d88\u8017\uff0c\u6211\u4eec\u4f20\u7edf\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\uff1f\r\n\r\n**\u79bb\u6563\u5316\uff01**\r\n\r\n\u8bf4\u5f97\u597d\uff0c\u4f46\u6211\u4e0d\u4f1a\u3002\uff08\u72d7\u5934\uff09\r\n\r\n\u6211\u9009\u62e9\u4e86\u6211\u7684\u4f20\u7edf\u827a\u80fd\uff1a\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002\r\n\r\n\u8fd9\u79cd\u7ebf\u6bb5\u6811\u80fd\u5c06\u7a7a\u95f4\u538b\u7f29\u5230\u6781\u81f4\uff0c\u5e76\u4e14\u590d\u6742\u5ea6\u4e1d\u6beb\u4e0d\u53d8\u3002\r\n\r\n\u5177\u4f53\u601d\u8def\u5c31\u662f\uff1a\u4f60\u53ea\u6709\u9700\u8981\u7528\u7684\u65f6\u5019\u518d\u521b\u5efa\u4f60\u9700\u8981\u7684\u8fd9\u4e2a\u8282\u70b9\uff0c\u7528\u4e0d\u5230\u7684\u5c31\u5148\u653e\u7740\uff0c\u6ca1\u51c6\u8fd9\u8f88\u5b50\u7528\u4e0d\u4e0a\u4e86\u3002\r\n\r\n\u597d\u561e\uff0c\u53e3\u80e1\u73af\u8282\u7ed3\u675f\uff0c\u6d3b\u52a8\u4e00\u4e0b\uff0c\u63a5\u4e0b\u6765\u5f00\u59cb\u771f\u5200\u771f\u67aa\u5730\u5199\u4ee3\u7801\u3002\r\n\r\n---\r\n\r\n\u6211\u4eec\u5148\u6765\u5199\u4e00\u4e0b\u4ee3\u7801\u6846\u67b6\uff0c\u7136\u540e\u6162\u6162\u8865\u5145\u3002\r\n\r\n```cpp\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n//\u7ebf\u6bb5\u6811\r\nint main(){\r\n    int n;\r\n    //\u8f93\u5165\r\n    //\u679a\u4e3e\u77e9\u5f62\uff0c\u5c06\u8fb9\u5b58\u8d77\u6765\r\n    //\u6309\u6a2a\u5750\u6807\u6392\u5e8f\u8fb9\uff0c\u65b9\u4fbf\u4e4b\u540e\u5904\u7406\r\n    //\u679a\u4e3e\u8fb9\uff0c\u7edf\u8ba1\u5e76\u5904\u7406\r\n    //\u8f93\u51fa\u7b54\u6848\u5e76AC\r\n}\r\n```\r\n\r\n\u600e\u4e48\u6837\uff0c\u770b\u8d77\u6765\u662f\u4e0d\u662f\u5f88\u7b80\u5355\uff1f\r\n\r\n\u90a3\u6211\u4eec\u7a0d\u5fae\u5c55\u5f00\u4e00\u4e0b\uff1a\r\n\r\n---\r\n\r\n\u9996\u5148\uff0c\u7ebf\u6bb5\u6811\u3002\r\n\r\n\u6700\u9ebb\u70e6\uff0c\u6211\u4eec\u5148\u653e\u4e00\u653e\u3002\r\n\r\n---\r\n\r\n\u8f93\u5165\u3002\r\n\r\n\u5f3a\u8c03\u4e00\u70b9\uff0c\u4e0d\u8981\u7528 `y2`\uff0c\u5426\u5219\u6b7b\u90fd\u4e0d\u77e5\u9053\u600e\u4e48\u6b7b\u7684\u3002\r\n\r\n\u5b66\u4f1a\u5584\u7528\u4e0b\u5212\u7ebf\u3002\r\n\r\n`scanline_signedint_function_main_signedint_y2`\r\n\r\n\u5f53\u7136\u53ea\u7528 `y_2` \u4e5f\u53ef\u4ee5\r\n\r\n---\r\n\r\n\u5b58\u8fb9\u3002\r\n\r\n\u8fd9\u91cc\u53ef\u4ee5\u8fd9\u4e48\u5b9e\u73b0\uff1a\r\n\r\n```cpp\r\nvector<pair<int,pair<pair<int,int>,int>>>lines;\r\nfor(/*\u8fd9\u91cc\u904d\u5386\u77e9\u5f62*/){\r\n    lines.push_back({x_1, {{y_1, y_2 - 1}, 1}});\r\n    lines.push_back({x_2, {{y_1, y_2 - 1}, -1}});\r\n}\r\n```\r\n\r\n`vector` \u91cc\u9762\u7684\u5143\u7d20\u7ec4\u6210\u5982\u4e0b\uff1a\r\n\r\n`pair<\u6a2a\u5750\u6807,pair<pair<\u7eb5\u5750\u6807\u8d77\u59cb,\u7eb5\u5750\u6807\u7ed3\u675f>,\u5904\u7406\u540e\u7684\u5c42\u6570\u53d8\u5316>>`\r\n\r\n\u81f3\u4e8e `y_2` \u4e3a\u4ec0\u4e48\u8981\u51cf\u53bb 1\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff1a\r\n\r\n\u8fd9\u4e2a\u77e9\u5f62\u7684\u53f3\u8fb9\u5bf9\u5e94\u7684\u90a3\u4e00\u5217\u65b9\u683c\u5e76\u4e0d\u5728\u77e9\u5f62\u4e2d\u3002\r\n\r\n---\r\n\r\n\u6392\u5e8f\uff0c\u7531\u4e8e\u6211\u4eec\u5584\u7528\u4e86 `std::pair`\uff0c\u6240\u4ee5\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5 `std::sort`\u3002\r\n\r\n```cpp\r\nsort(lines.begin(),lines.end());\r\n```\r\n\r\n---\r\n\r\n\u679a\u4e3e\u8fb9\u5e76\u5904\u7406\uff0c\u8fd9\u4e2a\u9700\u8981\u7b49\u8bb2\u5b8c\u7ebf\u6bb5\u6811\u624d\u80fd\u8bb2\u660e\u767d\u3002\r\n\r\n---\r\n\r\n\u8f93\u51fa\u7b54\u6848\uff0c\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u60f3\u8981 AC\uff0c\u90a3\u5c31\u662f\u7ec6\u8282\u95ee\u9898\u4e86\uff0c\u6211\u8fd8\u662f\u5148\u8bb2\u7ebf\u6bb5\u6811\u5427\u3002\r\n\r\n---\r\n\r\n\u8be5\u6765\u7684\u6765\u4e86\uff0c\u7ebf\u6bb5\u6811\u4ed6\u6765\u4e86\u3002\r\n\r\n\u5148\u4e0a\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u57fa\u672c\u6846\u67b6\uff1a\r\n\r\n```cpp\r\nstruct node {\r\n    int time;\r\n    int L;\r\n    int R;\r\n    node *lc, *rc;\r\n    int lazy;\r\n    int length;\r\n    void pushdown(void){\r\n        //\u4e0b\u4f20\u61d2\u6807\u8bb0\r\n    }\r\n    void pushup(void) {\r\n        //\u7ef4\u62a4\u5e76\u4e0a\u4f20\u4fe1\u606f\r\n    }\r\n    void change(int l, int r, int x) {\r\n        if (l <= L && r >= R) {\r\n            //\u5904\u7406\u5168\u5305\u542b\r\n            return;\r\n        }\r\n        pushdown();\r\n        if (lc == nullptr && rc == nullptr) {\r\n            lc= new node;\r\n            rc= new node;\r\n            //\u5b69\u5b50\u7684\u521d\u59cb\u503c\u8bbe\u5b9a\r\n        }\r\n        if (l <= ((L + R) >> 1)) {\r\n            lc->change(l, r, x);\r\n        }\r\n        if (r > ((L + R) >> 1)) {\r\n            rc->change(l, r, x);\r\n        }\r\n        pushup();\r\n    }\r\n};\r\n```\r\n\r\n\u8fd9\u5c31\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u4e00\u822c\u6846\u67b6\uff0c\u663e\u7136\u7ebf\u6bb5\u6811\u4e0a\u7684\u4fee\u6539\u9700\u8981\u61d2\u6807\u8bb0\uff0c\u6211\u5c31\u968f\u624b\u52a0\u4e0a\u4e86\u3002\r\n\r\n---\r\n\r\n\u63a5\u4e0b\u6765\u662f\u53e3\u80e1\u65f6\u95f4\u3002\uff08\u53e3\u80e1\u7ed3\u675f\u4e86\uff0c\u4f46\u6ca1\u5b8c\u5168\u7ed3\u675f\uff09\r\n\r\n\u6211\u4eec\u9700\u8981\u7684\u662f\u4ec0\u4e48\u4fe1\u606f\uff1f\u6ca1\u9519\uff0c\u5c31\u662f\u8be5\u8282\u70b9\u4e2d\u88ab\u8986\u76d6\u81f3\u5c11\u4e00\u6b21\u7684\u957f\u5ea6\u3002\r\n\r\n\u6240\u4ee5\u8fd9\u5c31\u662f\u6211\u4eec\u8981\u7ef4\u62a4\u7684 `length`\u3002\r\n\r\n\u540c\u65f6\uff0c\u4e3a\u4e86\u786e\u5b9a\u67d0\u6bb5\u51cf\u53bb\u4e00\u6b21\u540e\u8fd8\u6709\u6ca1\u6709\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u8be5\u6bb5\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u6b21\u6570\uff0c\u5373 `time`\u3002\r\n\r\n\u6211\u4eec\u5148\u6765\u786e\u5b9a\u4e00\u4e0b\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u70b9\u8868\u793a\u7684\u72b6\u6001\u7684\u610f\u4e49\uff0c\u5c24\u5176\u662f `lazy` \u8fd9\u4e2a\u5bb9\u6613\u5f04\u9519\u987a\u5e8f\u7684\u4e1c\u897f\u3002\r\n\r\n\u8fd9\u91cc\u6211\u8bbe\u5b9a\u542b\u4e49\u5982\u4e0b\uff1a\r\n\r\n\u8be5\u70b9\u7684 `lazy` \u8868\u793a\uff0c\u8be5\u70b9\u5df2\u7ecf\u88ab\u8986\u76d6\u8fc7\uff0c\u4f46\u8fd8\u6ca1\u5c06\u4fe1\u606f\u4e0b\u4f20\u5230\u5b69\u5b50\u7684\u6b21\u6570\u3002\r\n\r\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7684 `pushdown` \u4e0d\u4f1a\u5f71\u54cd\u8be5\u70b9\u672c\u8eab\u7684\u6570\u636e\uff0c\u800c\u53ea\u662f\u5355\u7eaf\u5730\u5c06\u61d2\u6807\u8bb0\u4e0b\u4f20\u5230\u5b50\u8282\u70b9\uff08\u5982\u679c\u6709\uff09\u3002\r\n\r\n\u5148\u5199\u4e00\u4e0b `pushup`\u3002\r\n\r\n\u5148\u6765\u786e\u5b9a\u4e00\u4e0b\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u3002\r\n\r\n\u9996\u5148\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u6709\u513f\u5b50\uff0c\u90a3\u4e48\u5b83\u7684\u8986\u76d6\u6b21\u6570\u5e94\u8be5\u662f\u513f\u5b50\u4e2d\u8f83\u5c0f\u7684\u8986\u76d6\u6b21\u6570\u52a0\u4e0a\u8fd8\u672a\u4e0b\u4f20\u5230\u513f\u5b50\u7684\u3002\uff08\u5c31\u662f\u61d2\u6807\u8bb0\uff09\r\n\r\n\u5982\u679c\u81f3\u5c11\u88ab\u8986\u76d6\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u8986\u76d6\u7684\u957f\u5ea6\u5c31\u662f\u6574\u4e2a\u533a\u95f4\u3002\r\n\r\n\u5426\u5219\uff0c\u5c31\u5e94\u8be5\u662f\u4e24\u4e2a\u513f\u5b50\u7684\u8986\u76d6\u957f\u5ea6\u548c\u3002\r\n\r\n\u6240\u4ee5\u5728\u6211\u4eec\u7684\u8bbe\u60f3\u4e2d\uff0c`pushup` \u5e94\u8be5\u662f\u8fd9\u6837\u7684\u3002\r\n\r\n```cpp\r\nvoid pushup(void){\r\n    if(lc!=nullptr&&rc!=nullptr){\r\n        time=min(lc->time,rc->time)+lazy;\r\n    }\r\n    if(time>0)\r\n        length=R-L+1;\r\n    else{\r\n        if(lc==nullptr&&rc==nullptr)\r\n            length=0;\r\n        else\r\n            length=lc->length+rc->length;\r\n    }\r\n}\r\n```\r\n\r\n\u770b\u8d77\u6765\u6ca1\u6709\u95ee\u9898\uff0c\u5c06\u6211\u4eec\u7684\u60f3\u6cd5\u5b8c\u7f8e\u5b9e\u73b0\u3002\r\n\r\n\u90a3\u6211\u4eec\u6765\u5199\u4e00\u4e0b  `pushdown`\uff1a\r\n\r\n```cpp\r\nvoid pushdown(void){\r\n    if(lc){\r\n        lc->lazy+=lazy;\r\n        lc->time+=lazy;\r\n        lc->pushup();\r\n    }\r\n    if(rc){\r\n        rc->lazy+=lazy;\r\n        rc->time+=lazy;\r\n        rc->pushup();\r\n    }\r\n    lazy=0;\r\n}\r\n```\r\n\r\nok\uff0c\u8fd9\u6837\u6211\u4eec\u7684 `pushdown` \u5c31\u5b8c\u5de5\u4e86\u3002\r\n\r\n\u4e4b\u540e\u7531\u4e8e\u6bcf\u6b21\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2\u6839\u8282\u70b9\uff08\u5373\u6574\u68f5\u6811\uff09\u7684\u8986\u76d6\u957f\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5fc5\u5355\u72ec\u5199\u4e00\u4e2a\u67e5\u8be2\u51fd\u6570\u3002\r\n\r\n\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0\u4fee\u6539\u64cd\u4f5c\u5373\u53ef\u3002\r\n\r\n\u90a3\u5c31\u5f00\u59cb\u5199\u5427\uff1a\r\n\r\n```cpp\r\nvoid change(int l,int r,int x){\r\n    if(l<=L&&r>=R){\r\n        pushdown();\r\n        time+=x;\r\n        lazy+=x;\r\n        pushup();\r\n        return;\r\n    }\r\n    pushdown();\r\n    if(lc==nullptr&&rc==nullptr){\r\n        lc=new node;\r\n        rc=new node;\r\n        lc->L=L;\r\n        lc->R=(L+R)>>1;\r\n        rc->L=lc->R+1;\r\n        rc->R=R;\r\n        lc->time=rc->time=time;\r\n        lc->lazy=rc->lazy=0;\r\n        lc->lc=lc->rc=rc->lc=rc->rc=nullptr;\r\n        lc->pushup();\r\n        rc->pushup();\r\n    }\r\n    if(l<=((L+R)>>1)){\r\n        lc->change(l,r,x);\r\n    }\r\n    if(r>((L+R)>>1)){\r\n        rc->change(l,r,x);\r\n    }\r\n    pushup();\r\n}\r\n```\r\n\r\n\u5b8c\u7f8e\u3002\r\n\r\n---\r\n\r\n\u7136\u540e\u5c31\u662f\u679a\u4e3e\u8fb9\u5e76\u5904\u7406\u4e86\uff0c\u8fd9\u4e2a\u5176\u5b9e\u5c31\u662f\u8c03\u7528\u7ebf\u6bb5\u6811\u7684\u4fee\u6539\u51fd\u6570\uff0c\u6211\u4eec\u628a\u4e3b\u51fd\u6570\u5199\u4e00\u4e0b\uff1a\r\n\r\n```cpp\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int x_1,y_1,x_2,y_2;\r\n    for(int i=0;i<n;++i){\r\n        scanf(\"%d%d%d%d\",&x_1,&y_1,&x_2,&y_2);\r\n        lines.push_back({x_1,{{y_1,y_2-1},1}});\r\n        lines.push_back({x_2,{{y_1,y_2-1},-1}});\r\n    }\r\n    node*root=new node;\r\n    root->L=0;\r\n    root->R=1000000000;\r\n    root->lazy=0;\r\n    root->time=0;\r\n    root->length=0;\r\n    root->lc=root->rc=nullptr;\r\n    sort(lines.begin(),lines.end());\r\n    long long ans=0;\r\n    for(int i=0;i<(int)lines.size();++i){//\u4ece\u8fd9\u91cc\u5f00\u59cb\r\n        if(i!=0)\r\n            ans=ans+(long long)root->length*(lines[i].first-lines[i-1].first);\r\n        root->change(lines[i].second.first.first,lines[i].second.first.second,lines[i].second.second);\r\n    }//\u5230\u8fd9\u91cc\u7ed3\u675f\r\n    printf(\"%lld\\n\",ans);\r\n    return 0;\r\n}\r\n```\r\n\r\n\u679a\u4e3e\u8fb9\u5e76\u5904\u7406\u7684\u4f4d\u7f6e\u6211\u7528\u6ce8\u91ca\u6807\u51fa\u6765\u4e86\u3002\r\n\r\n\u9996\u5148\u679a\u4e3e\u8fb9\uff0c\u6211\u4eec\u5982\u679c\u76f4\u63a5 `auto` \u679a\u4e3e\u7684\u8bdd\uff0c\u60f3\u770b\u524d\u4e00\u4e2a\u7684\u6a2a\u5750\u6807\u5c31\u5f88\u9ebb\u70e6\uff0c\u4e0d\u5982\u7528\u6700\u666e\u901a\u7684\u679a\u4e3e\u3002\r\n\r\n\u5f53\u7136\u5982\u679c\u4f60\u662f `C++14` \u7684\u72c2\u70ed\u7c89\u4e1d\uff0c\u90a3\u7528 `auto` \u4e5f\u884c\u3002\r\n\r\n\u7ed9\u4f60\u4e00\u4e2a\u53c2\u8003\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\nint lst=-1;\r\nfor(auto i:lines){\r\n    if(lst!=-1)\r\n        ans=ans+(long long)root->length*(i.first-lst);\r\n    root->change(i.second.first.first,i.second.first.second,i.second.second);\r\n    lst=i.first;\r\n}\r\n```\r\n\r\n\u8fd8\u53ef\u4ee5\u7528\u8fed\u4ee3\u5668\uff1a\r\n\r\n```cpp\r\nfor(auto i=lines.begin();i!=lines.end();++i){\r\n    if(i!=lines.begin())\r\n        ans=ans+(long long)root->length*(-(--i)->first+(++i)->first);\r\n    root->change(i->second.first.first,i->second.first.second,i->second.second);\r\n}\r\n```\r\n\r\n\u8fed\u4ee3\u5668\u7684\u5199\u6cd5\u4e0d\u8981\u6c42\u638c\u63e1\uff0c\u4f46\u662f `auto` \u7684\u548c\u679a\u4e3e\u4e0b\u6807\u7684\u6700\u597d\u90fd\u5b66\u4e00\u4e0b\u3002\r\n\r\n\u6211\u4eec\u4ee5 `auto` \u7684\u4e3a\u4f8b\u6765\u8bb2\u4e00\u4e0b\uff1a\r\n\r\n\u6211\u4eec\u9700\u8981\u4e0a\u4e00\u4e2a\u7684\u6a2a\u5750\u6807\uff0c\u800c `auto` \u679a\u4e3e\u4e0d\u80fd\u5f80\u56de\u8d70\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8bb0\u4e0b\u6211\u4eec\u9700\u8981\u7684\u4e1c\u897f\u3002\r\n\r\n\u7531\u4e8e\u6a2a\u5750\u6807\u4ece 0 \u5f00\u59cb\uff0c\u6240\u4ee5\u6211\u4eec\u7528 -1 \u505a\u521d\u59cb\u4e0d\u4f1a\u51fa\u95ee\u9898\u3002\r\n\r\n\u7136\u540e\uff0c\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u4e2a\uff0c\u90a3\u4e48\u5c31\u5c06\u9762\u79ef\u8ba1\u7b97\u5e76\u7d2f\u52a0\u3002\r\n\r\n\u65e0\u8bba\u662f\u4e0d\u662f\u7b2c\u4e00\u4e2a\uff0c\u6211\u4eec\u90fd\u5bf9\u5176\u8fdb\u884c\u5904\u7406\uff0c\u5177\u4f53\u6bcf\u4e2a\u53c2\u6570\u662f\u5e72\u5565\u7684\u53ef\u4ee5\u53c2\u8003\u4e4b\u524d\u5b58\u8fb9\u7684\u65f6\u5019\u662f\u600e\u4e48\u5b58\u7684\u3002\r\n\r\n\u597d\u4e86\uff0c\u5927\u529f\u544a\u6210\uff0c\u51c6\u5907 AC\u3002\r\n\r\n---\r\n\r\n\u8fd9\u91cc\u662f\u9898\u76ee\u94fe\u63a5\uff1a\r\n\r\n[P5490](https://www.luogu.com.cn/problem/P5490)\r\n\r\n\u5f53\u4f60\u597d\u4e0d\u5bb9\u6613\u62fc\u51d1\u51fa\u4e86\u4f60\u8ba4\u4e3a\u6b63\u786e\u7684\u4ee3\u7801\uff0c\u4ea4\u4e0a\u53bb\u5374\u5f97\u4e86 0 \u5206\uff0c\u8fd8\u6709\u5f88\u591a `MLE` \u7684\u65f6\u5019\uff0c\u5148\u522b\u6025\u7740\u627e\u4f60\u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u521a\u624d\u90a3\u79cd\u65b9\u6cd5\u672c\u8eab\u5c31\u662f\u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u95ee\u9898\u7684\u3002\r\n\r\n\u4f60\u5148\u4e0d\u7528\u7ba1 `MLE`\uff0c\u7a0d\u540e\u4f1a\u5904\u7406\u3002\r\n\r\n\u5efa\u8bae\u4f60\u81ea\u5df1\u627e\u4e00\u627e\uff0c\u7a0d\u540e\u6211\u4f1a\u544a\u8bc9\u4f60\u5728\u54ea\uff0c\u4f46\u662f\u6211\u5e0c\u671b\u4f60\u80fd\u4f9d\u9760\u81ea\u5df1\u7684\u529b\u91cf\u627e\u5230\u5b83\u3002\r\n\r\n\u5efa\u8bae\u5148\u4e0d\u8981\u770b\u4e0b\u9762\u7684\u7b54\u6848\u548c\u63d0\u793a\u3002\r\n\r\n---\r\n\r\n\u63d0\u793a 1\uff1a\u8fd9\u4e2a\u9519\u8bef\u5728\u7ebf\u6bb5\u6811\u4e0a\u3002\r\n\r\n\u5e0c\u671b\u4f60\u770b\u4e86\u4e4b\u540e\u80fd\u627e\u5230\u3002\r\n\r\n---\r\n\r\n\u63d0\u793a 2\uff1a\u5728 `pushup`\u3002\r\n\r\n\u4f60\u770b\u51fa\u54ea\u91cc\u51fa\u95ee\u9898\u4e86\u5417\uff1f\r\n\r\n---\r\n\r\n\u4ee5\u4e0b\u662f\u7b54\u6848\uff1a\r\n\r\n\u6211\u4eec\u628a `pushup` \u6284\u5728\u4e0b\u9762\uff1a\r\n\r\n```cpp\r\nvoid pushup(void){\r\n    if(lc!=nullptr&&rc!=nullptr){\r\n        time=min(lc->time,rc->time)+lazy;\r\n    }\r\n    if(time>0)\r\n        length=R-L+1;\r\n    else{\r\n        if(lc==nullptr&&rc==nullptr)\r\n            length=0;\r\n        else\r\n            length=lc->length+rc->length;\r\n    }\r\n}\r\n```\r\n\r\n\u5c31\u662f\u6700\u540e\u4e00\u6b65\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u5e76\u4e14\u6709\u513f\u5b50\u7684\u60c5\u51b5\u3002\r\n\r\n\u601d\u8def\u6ca1\u6709\u95ee\u9898\uff0c\u5c31\u662f\u4e24\u4e2a\u513f\u5b50\u7684\u8986\u76d6\u957f\u5ea6\u548c\u3002\r\n\r\n\u4f46\u662f\uff0c\u4f60\u6709\u6ca1\u6709\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\r\n\r\n\u5047\u8bbe\u4f60\u8fd9\u4e2a\u70b9\u662f\u8fd9\u6b21\u4fee\u6539\u89e6\u53ca\u7684\u6700\u6df1\u7684\u70b9\uff0c\u800c\u4e14\u662f\u51cf\u53bb\u4e86\u4e00\u6b21\uff0c\u8ba9\u8fd9\u4e2a\u533a\u95f4\u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\r\n\r\n\u5f88\u7b80\u5355\uff0c\u8fd9\u4e2a\u70b9\u7684\u513f\u5b50\u5e76\u6ca1\u6709\u5f97\u5230\u66f4\u65b0\uff0c\u5b83\u4eec\u7684 `length` \u6ca1\u6709\u53d8\u3002\r\n\r\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b80\u5355 `pushdown` \u4e00\u4e0b\uff0c\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff1a\r\n\r\n```cpp\r\nvoid pushup(void){\r\n    if(lc!=nullptr&&rc!=nullptr){\r\n        time=min(lc->time,rc->time)+lazy;\r\n    }\r\n    if(time>0)\r\n        length=R-L+1;\r\n    else{\r\n        if(lc==nullptr&&rc==nullptr)\r\n            length=0;\r\n        else{\r\n            pushdown();\r\n            length=lc->length+rc->length;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\u6211\u4eec\u518d\u6765\u63d0\u4ea4\u4e00\u904d\uff0c\u5f88\u597d\uff0c\u6211\u4eec\u62ff\u5230\u4e86 20 \u5206\uff0c\u770b\u8d77\u6765\u53ea\u8981\u89e3\u51b3\u6389\u7a7a\u95f4\u7684\u95ee\u9898\u6211\u4eec\u5c31\u53ef\u4ee5 AC \u4e86\u3002\r\n\r\n\u5982\u4f55\u89e3\u51b3\u7a7a\u95f4\u95ee\u9898\u5462\uff1f\u6211\u4eec\u4e00\u822c\u6709\u5982\u4e0b\u4e24\u79cd\u65b9\u5f0f\u3002\r\n\r\n- \u5c3d\u91cf\u538b\u7f29\u9700\u8981\u7684\u7a7a\u95f4\r\n- \u5c06\u7528\u4e0d\u5230\u7684\u7a7a\u95f4\u91ca\u653e\r\n\r\n\u7531\u4e8e\u8fd9\u91cc\u6211\u4eec\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\r\n\r\n\u53ea\u8981\u5728 `pushup` \u7684\u6700\u540e\u52a0\u4e0a\u8fd9\u4e9b\uff1a\r\n\r\n```cpp\r\nif(lc!=nullptr&&lc->lc==nullptr&&lc->rc==nullptr&&rc!=nullptr&&rc->lc==nullptr&&rc->rc==nullptr&&lc->time==rc->time){\r\n    delete lc;\r\n    delete rc;\r\n    lc=rc=nullptr;\r\n}\r\n```\r\n\r\n\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u3002\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u5982\u679c\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u90fd\u662f\u6ca1\u6709\u513f\u5b50\u7684\u8282\u70b9\uff08\u5f53\u7136\u81ea\u5df1\u8981\u5148\u6709\u5de6\u53f3\u513f\u5b50\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u662f\u53f6\u5b50\uff0c\u5e76\u4e14\u4e24\u4e2a\u513f\u5b50\u7684\u8986\u76d6\u6b21\u6570\u4e00\u6837\u3002\r\n\r\n\u8fd9\u8bf4\u660e\u4ec0\u4e48\uff1f\r\n\r\n\u8fd9\u8bf4\u660e\u513f\u5b50\u7684\u8986\u76d6\u6b21\u6570\u548c\u8fd9\u4e2a\u70b9\u5b8c\u5168\u4e00\u6837\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e24\u4e2a\u513f\u5b50\u4e8b\u5b9e\u4e0a\u6ca1\u6709\u5206\u5f00\u5b58\u50a8\u7684\u5fc5\u8981\u4e86\uff0c\u8fd9\u4e00\u4e2a\u70b9\u5c31\u80fd\u5b8c\u6210\u9700\u8981\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u6389\u4e24\u4e2a\u6ca1\u7528\u7684\u513f\u5b50\u4e86\uff08\u6e05\u7406\u95e8\u6237\uff09\u3002\r\n\r\n\u7136\u540e\u63d0\u4ea4\u4e00\u4e0b\u3002\r\n\r\n\u7ed3\u679c\u8fd8\u662f 20 \u5206\uff0c\u4e0d\u8fc7 `MLE` \u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u53ea\u5269 `TLE` \u4e86\u3002\r\n\r\n\u8fd9\u4e5f\u7b97\u662f\u4e00\u4e2a\u6210\u529f\uff0c\u56e0\u4e3a `TLE` \u81f3\u5c11\u4e0d\u50cf `MLE` \u4e00\u6837\u4ee4\u4eba\u7edd\u671b\u3002\r\n\r\n\u4f11\u606f\u4e00\u4e0b\uff0c\u63a5\u4e0b\u6765\u8981\u5f00\u6b63\u89e3\u4e86\u3002\r\n\r\n---\r\n\r\n\u6211\u4eec\u6765\u770b\u770b\u5230\u5e95\u662f\u54ea\u91cc\u62d6\u6162\u4e86\u590d\u6742\u5ea6\u3002\r\n\r\n\u5f88\u663e\u7136\uff0c\u56e0\u4e3a `pushup` \u91cc\u9762\u7684\u8fd9\u4e2a `pushdown` \u6709\u53ef\u80fd\u4e00\u76f4\u95f4\u63a5\u9012\u5f52\u4e0b\u53bb\uff0c\u9020\u6210\u66f4\u65b0\u6574\u4e2a\u5b50\u6811\u3002\r\n\r\n\u6240\u4ee5\uff0c\u4e8b\u60c5\u597d\u50cf\u4e0d\u592a\u5bf9\u52b2\u8d77\u6765\u3002\r\n\r\n\u6211\u4eec\u5982\u679c\u4e0d\u66f4\u65b0\u513f\u5b50\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u6ca1\u6cd5\u4fdd\u8bc1\u6b63\u786e\u3002\r\n\r\n\u5982\u679c\u66f4\u65b0\u4e86\u513f\u5b50\uff0c\u90a3\u4e48\u5c31 `TLE`\u3002\r\n\r\n\u6240\u4ee5\uff0c\u771f\u7684\u6ca1\u6709\u529e\u6cd5\u4e86\u5417\uff1f\r\n\r\n\u5e76\u4e0d\u662f\u3002\r\n\r\n\u65e2\u7136\u662f\u6807\u8bb0\u4e0b\u4f20\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u6211\u4eec\u5e72\u8106\u4e0d\u4e0b\u4f20\u4e86\u3002\r\n\r\n\u8fd9\u5c31\u8981\u5f15\u5165\u4e00\u4e2a\u65b9\u6cd5\uff1a\u6807\u8bb0\u6c38\u4e45\u5316\u3002\r\n\r\n\u5148\u6765\u770b\u770b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u9002\u7528\u6761\u4ef6\uff1a\r\n\r\n> \u786e\u4fdd\u6807\u8bb0\u4e0d\u4f1a\u6ea2\u51fa\uff08\u6bd4\u5982\u7206 `int`\u3001\u7206 `long long`\uff09\r\n\r\n\u6ca1\u4e86\uff0c\u5c31\u8fd9\u4e00\u6761\u3002\r\n\r\n\u6765\u770b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\uff1a\r\n\r\n\u5c06\u6807\u8bb0\u56fa\u5b9a\u5728\u6700\u5f00\u59cb\u6dfb\u52a0\u6807\u8bb0\u7684\u70b9\u4e0a\uff0c\u5411\u4e0b\u65f6\u4e00\u8def\u7d2f\u52a0\uff0c\u5411\u4e0a\u65f6\u4e00\u8def\u4fee\u6539\u3002\r\n\r\n\u5728\u6211\u4eec\u8fd9\u4e2a\u4ee3\u7801\u4e2d\uff0c\u8fd9\u4e2a\u6280\u5de7\u5e76\u4e0d\u590d\u6742\uff1a\r\n\r\n\u5c06 `time` \u4f5c\u4e3a\u201c\u80fd\u8986\u76d6\u8fd9\u4e2a\u8282\u70b9\u4f46\u4e0d\u80fd\u8986\u76d6\u7236\u4eb2\u7684\u7ebf\u7684\u4e2a\u6570\u201d\u3002\r\n\r\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5220\u6389 `pushdown` \u4e86\u3002\r\n\r\n\u7136\u540e\u5c06 `pushup` \u4fee\u6539\u5982\u4e0b\uff1a\r\n\r\n```cpp\r\nvoid pushup(void) {\r\n    if(time!=0){\r\n        length=R-L+1;\r\n    }//\u5982\u679c\u88ab\u8986\u76d6\u4e86\r\n    //\u5982\u679c\u6709\u7956\u5148\u88ab\u8986\u76d6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u6570\u636e\u5c31\u6ca1\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u4e0d\u7528\u7ef4\u62a4\u3002\r\n    //\u8fd9\u4e2alength\u8868\u793a\u5982\u679c\u4e0d\u8003\u8651\u7956\u5148\u7684\u5f71\u54cd\uff0c\u8fd9\u4e2a\u70b9\u7684\u8986\u76d6\u957f\u5ea6\u662f\u591a\u5c11\u3002\r\n    else{\r\n        if(lc!=nullptr&&rc!=nullptr){\r\n            length=lc->length+rc->length;\r\n        }//\u56e0\u4e3a\u7956\u5148\u4e0d\u5f71\u54cd\u540e\u4ee3\uff0c\u6240\u4ee5\u81ea\u5df1\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u513f\u5b50\uff0c\u76f4\u63a5\u7528\u5c31\u884c\u3002\r\n        else{\r\n            length=0;\r\n        }\r\n    }\r\n    if(lc!=nullptr&&rc!=nullptr&&lc->lc==rc->rc&&lc->time==rc->time){\r\n        delete lc;\r\n        delete rc;\r\n        lc=rc=nullptr;\r\n    }\r\n}\r\n```\r\n\r\n\u5c06\u4fee\u6539\u51fd\u6570\u4e5f\u7a0d\u5fae\u505a\u4e00\u4e9b\u8c03\u6574\uff1a\r\n\r\n```cpp\r\nvoid change(int l, int r, int x) {\r\n    if (l <= L && r >= R) {\r\n        time+= x;\r\n        pushup();\r\n        return;\r\n    }\r\n    if (lc == nullptr && rc == nullptr) {\r\n        lc= new node;\r\n        rc= new node;\r\n        lc->L= L;\r\n        lc->R= (L + R) >> 1;\r\n        rc->L= lc->R + 1;\r\n        rc->R= R;\r\n        lc->time= rc->time= 0;\r\n        lc->lc= lc->rc= rc->lc= rc->rc= nullptr;\r\n        lc->pushup();\r\n        rc->pushup();\r\n    }\r\n    if (l <= ((L + R) >> 1)) {\r\n        lc->change(l, r, x);\r\n    }\r\n    if (r > ((L + R) >> 1)) {\r\n        rc->change(l, r, x);\r\n    }\r\n    pushup();\r\n}\r\n```\r\n\r\n\u6700\u5927\u7684\u6539\u53d8\u4e5f\u5c31\u662f\u5220\u9664\u4e86 `pushdown`\uff0c\u5e76\u4e14\u5220\u9664\u4e86 `lazy`\uff0c\u5176\u4ed6\u7684\u5e76\u6ca1\u6709\u53d8\u5316\u3002\r\n\r\n---\r\n\r\n\u606d\u559c\u4f60\u770b\u5230\u4e86\u6700\u540e\uff0c\u60f3\u5fc5\u4f60\u5df2\u7ecf\u901a\u8fc7\u4e86\u8fd9\u4e2a\u9898\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff0c\u4f60\u53ef\u4ee5\u5bf9\u7167\u4e00\u4e0b\u54ea\u91cc\u6709\u7ec6\u8282\u9519\u8bef\u3002\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nstruct node {\r\n    int L;\r\n    int R;\r\n    node *lc, *rc;\r\n    int time;\r\n    int length;\r\n    void pushup(void) {\r\n        if(time!=0){\r\n            length=R-L+1;\r\n        }\r\n        else{\r\n            if(lc!=nullptr&&rc!=nullptr){\r\n                length=lc->length+rc->length;\r\n            }\r\n            else{\r\n                length=0;\r\n            }\r\n        }\r\n        if(lc!=nullptr&&rc!=nullptr&&lc->lc==rc->rc&&lc->time==rc->time){\r\n            delete lc;\r\n            delete rc;\r\n            lc=rc=nullptr;\r\n        }\r\n    }\r\n    void change(int l, int r, int x) {\r\n        if (l <= L && r >= R) {\r\n            time+= x;\r\n            pushup();\r\n            return;\r\n        }\r\n        if (lc == nullptr && rc == nullptr) {\r\n            lc= new node;\r\n            rc= new node;\r\n            lc->L= L;\r\n            lc->R= (L + R) >> 1;\r\n            rc->L= lc->R + 1;\r\n            rc->R= R;\r\n            lc->time= rc->time= 0;\r\n            lc->lc= lc->rc= rc->lc= rc->rc= nullptr;\r\n            lc->pushup();\r\n            rc->pushup();\r\n        }\r\n        if (l <= ((L + R) >> 1)) {\r\n            lc->change(l, r, x);\r\n        }\r\n        if (r > ((L + R) >> 1)) {\r\n            rc->change(l, r, x);\r\n        }\r\n        pushup();\r\n    }\r\n};\r\nvector<pair<int, pair<pair<int, int>, int>>> lines;\r\nint main() {\r\n    int n;scanf(\"%d\",&n);\r\n    int x_1, y_1, x_2, y_2;\r\n    for (int i= 0; i < n; ++i) {\r\n        scanf(\"%d%d%d%d\",&x_1,&y_1,&x_2,&y_2);\r\n        lines.push_back({x_1, {{y_1, y_2 - 1}, 1}});\r\n        lines.push_back({x_2, {{y_1, y_2 - 1}, -1}});\r\n    }\r\n    node* root= new node;\r\n    root->L= 0;\r\n    root->R= 1000000000;\r\n    root->time= 0;\r\n    root->length= 0;\r\n    root->lc= root->rc= nullptr;\r\n    sort(lines.begin(), lines.end());\r\n    long long ans= 0;\r\n    for (int i= 0; i < (int)lines.size(); ++i) {\r\n        if (i != 0) {\r\n            ans= ans + (long long)root->length * (lines[i].first - lines[i - 1].first);\r\n        }\r\n        root->change(lines[i].second.first.first, lines[i].second.first.second, lines[i].second.second);\r\n    }\r\n    printf(\"%lld\\n\", ans);\r\n    return 0;\r\n}\r\n```\r\n\r\n\u6211\u8fd9\u4e2a\u7801\u98ce\u662f\u7f16\u8f91\u5668\u7684\u81ea\u52a8\u683c\u5f0f\u5316\uff0c\u6240\u4ee5\u7565\u663e\u84ec\u677e\u3002\r\n\r\n---\r\n\r\n***The End***\r\n",
        "postTime": 1677145983,
        "uid": 478861,
        "name": "Gumbo",
        "ccfLevel": 6,
        "title": "P5490\u9898\u89e3"
    },
    {
        "content": "### \u626b\u63cf\u7ebf\n\n\t\u5927\u4f6c\u4eec\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u60f3\u8865\u5145\u4e00\u4e9b\u7ec6\u8282\n- \u4f17\u6240\u5468\u77e5\u7ebf\u6bb5\u6811\u5927\u5c0f\u8981\u5f004\u500d\uff0c\u4f46\u8fd9\u9053\u9898\u6bcf\u4e2a\u77e9\u5f62\u5b58\u7684\u662f\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u8981\u5f008\u500d\n- \u5c06\u70b9\u79bb\u6563\u5316\u540e\u4e0e\u539f\u5750\u6807\u6bd4\u8f83\u7684\u65f6\u5019\u53f3\u7aef\u70b9\u8981+1\uff0c\u53ef\u4ee5\u7406\u89e3\u6210x[i]\u8868\u793a[x[i],x[i+1]]\n- \u5f88\u591a\u4eba\u4e0d\u7406\u89e3\u4e3a\u4ec0\u4e48\u7ebf\u6bb5\u6811\u53ef\u4ee5\u4e0d\u7528\u4e0b\u4f20\u64cd\u4f5c\uff0c\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u77e9\u5f62\u90fd\u6709\u4e24\u6761\u8fb9\uff0c\u90fd\u662f\u52a0\u8fb9\u5148\u8fdb\uff0c\u51cf\u8fb9\u518d\u51fa\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fdd\u8bc1\u7ebf\u6bb5\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u503c\uff0c\u6240\u4ee5\u4e0d\u7528\u6807\u8bb0\u4e0b\u4f20\n- \u503c\u57df\u975e\u5e38\u5927\uff0c\u6ce8\u610f\u5f00long long\n\n\u5de8\u4e11\u7684\u4ee3\u7801\n```cpp\n/*\n * @Author: Dolphin_ \n * @Date: 2019-08-20 16:36:50 \n * @Last Modified by: Dolphin_\n * @Last Modified time: 2019-08-20 17:26:36\n */\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define FOR(i, a, b) for (int i = a; i <= b; ++i)\n#define _FOR(i, a, b) for (int i = a; i >= b; --i)\n#define INF 0x7fffffff\ninline void read(ll &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(s>'9'||s<'0'){if(s=='-')f=-1;s=getchar();}\n    while(s<='9'&&s>='0'){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\nll x[110000<<1],n,LineNum,cnt,ans,x_,x__,y_,y__;\nstruct node\n{\n    ll l,r,sum,len;\n}tree[110000<<3];\nstruct node1{\n\tll l,r,c,h;\n\tbool operator <(const node1& a)const\n\t{\n\t\treturn h<a.h;\n\t}\n}line[110000<<1];\nvoid pushup(ll rt)\n{\n    ll l=tree[rt].l;ll r=tree[rt].r;\n    if(tree[rt].sum)\n        tree[rt].len=x[r+1]-x[l];\n    else\n    {\n    \tif(l==r)tree[rt].len=0;\n\t\telse tree[rt].len=tree[rt<<1].len+tree[(rt<<1)|1].len;\n\t}\n}\nvoid build(ll rt,ll l,ll r)\n{\n    tree[rt].l=l;tree[rt].r=r;tree[rt].len=0;tree[rt].sum=0;\n    if(l==r) return ;\n    ll mid=(l+r)>>1;\n    build(rt<<1,l,mid);\n    build((rt<<1)|1,mid+1,r);\n    return;\n}\nvoid edit(ll rt,ll L,ll R,ll c)\n{\n    ll l=tree[rt].l;ll r=tree[rt].r;\n    if(x[r+1]<=L||x[l]>=R) return ;\n    if(L<=x[l]&&R>=x[r+1])\n    {\n        tree[rt].sum+=c;\n        pushup(rt);\n        return;\n    }\n    edit(rt<<1,L,R,c);\n    edit((rt<<1)|1,L,R,c);\n    pushup(rt);\n    return;\n}\nint main()\n{\n    //freopen(\"a.in\",\"r\",stdin);\n    read(n);\n    FOR(i,1,n)\n    {\n        read(x_);read(y_);read(x__);read(y__);\n        x[++cnt]=x_;x[++cnt]=x__;\n        line[++LineNum].l=x_;line[LineNum].r=x__;\n        line[LineNum].h=y_;line[LineNum].c=1;\n        line[++LineNum].l=x_;line[LineNum].r=x__;\n        line[LineNum].h=y__;line[LineNum].c=-1;\n        //\u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u641e\u8fd9\u4e48\u591a\u53d8\u91cf\u7684\n    }\n    sort(x+1,x+1+cnt);//\u79bb\u6563\u5316\n    sort(line+1,line+1+LineNum);//\u4ece\u4e0b\u5230\u4e0a\u626b\u8fb9\n    ll tot=unique(x+1,x+1+cnt)-x-1;//unique\u53bb\u91cd\u5927\u6cd5\u597d\u554a\n    build(1,1,tot-1);//\u5efa\u7ebf\u6bb5\u6811\uff0c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3a\u63d0\u793a2\n    \n    ans=0;\n    FOR(i,1,LineNum-1)//\u6700\u540e\u4e00\u6761\u7ebf\u4e0d\u7528\u5904\u7406\n    {\n        edit(1,line[i].l,line[i].r,line[i].c);\n        ans+=tree[1].len*(line[i+1].h-line[i].h);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}",
        "postTime": 1566296795,
        "uid": 52706,
        "name": "Dolphin_",
        "ccfLevel": 5,
        "title": "P5490  \u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf      \u626b\u63cf\u7ebf"
    },
    {
        "content": "**\u6ce8\u610f\u70b9\uff1a**\n\n- \u7ebf\u6bb5\u6811\u4e2d\u4f7f\u7528\u83b7\u53d6\u5177\u4f53\u957f\u5ea6\u65f6\u53f3\u7aef\u70b9\u5e94\u5f53+1\uff0c\u5411\u7ebf\u6bb5\u6811\u5185\u63d2\u5165\u503c\u65f6\u53f3\u7aef\u70b9\u5e94\u5f53-1.\uff08\u533a\u95f4\u8986\u76d6\u7ebf\u6bb5\u6811\uff09\n\n------------\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int MAXN=2e6;\nstruct Line{\n    ll x1,x2,y;\n    bool type;\n    bool operator <(Line another)const{\n        return y<another.y;\n    }\n}lines[MAXN];\nint lineCnt=0;\nstruct Node{\n    int l,r;\n    ll len,cnt;\n}tr[MAXN];\nvoid build(int p,int l,int r){\n    tr[p].l=l,tr[p].r=r;\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    build(p<<1,l,mid);\n    build((p<<1)|1,mid+1,r);\n}\nll a[MAXN];//\u79bb\u6563\u5316\nvoid pushup(int p){\n    if(tr[p].cnt){\n        tr[p].len=a[tr[p].r+1]-a[tr[p].l];\n    }else{\n        tr[p].len=tr[p<<1].len+tr[(p<<1)|1].len;\n    }\n}\nvoid change(int p,int l,int r,int val){\n    if(tr[p].l>=l&&tr[p].r<=r){\n        tr[p].cnt+=val;\n        pushup(p);\n        return;\n    }\n    int mid=(tr[p].l+tr[p].r)>>1;\n    if(l<=mid)change(p<<1,l,r,val);\n    if(r>mid)change((p<<1)|1,l,r,val);\n    pushup(p);\n}\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        ll x1,y1,x2,y2;\n        cin>>x1>>y1>>x2>>y2;\n        lines[++lineCnt].x1=x1,lines[lineCnt].x2=x2;\n        lines[lineCnt].y=y1,lines[lineCnt].type=0;\n        lines[++lineCnt].x1=x1,lines[lineCnt].x2=x2;\n        lines[lineCnt].y=y2,lines[lineCnt].type=1;\n        a[i]=x1,a[i+n]=x2;\n    }\n    sort(a+1,a+2*n+1);\n    int cnt=unique(a+1,a+2*n+1)-a-1;//\u79bb\u6563\u5316\n    sort(lines+1,lines+2*n+1);\n    build(1,1,cnt-1);\n    ll ans=0;\n    for(int i=1;i<=2*n;i++){\n        Line nowLine=lines[i];\n        if(i>1)ans+=tr[1].len*(lines[i].y-lines[i-1].y);\n        if(nowLine.type){//\u6d88\u5931\n            change(1,lower_bound(a+1,a+cnt+1,nowLine.x1)-a,lower_bound(a+1,a+cnt+1,nowLine.x2)-a-1,-1);\n        }else{//\u51fa\u73b0\n            change(1,lower_bound(a+1,a+cnt+1,nowLine.x1)-a,lower_bound(a+1,a+cnt+1,nowLine.x2)-a-1,1);\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1572139723,
        "uid": 115758,
        "name": "Object_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u8fd9\u9053\u9898\u6539\u4e86\u534a\u5929\uff0c\u5c31\u662f\u627e\u4e0d\u5230\u54ea\u513f\u9519\u4e86\u3002\u7ed3\u679c\u6700\u540e\u53d1\u73b0\u7ebf\u6bb5\u6811\u7684\u5199\u6cd5\u548c\u5e73\u5e38\u6709\u4e9b\u4e0d\u4e00\u6837\uff0c\u6570\u7ec4\u8d8a\u754c\u4e86\u3002\u3002\u3002\n\n# \u9898\u9762\n\n[P5490 \u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf](https://www.luogu.org/problem/P5490)\n\n# Solution\n\n\u5c06\u77e9\u5f62\u6309\u7167\u7ad6\u8fb9\u5206\u6210\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u6bcf\u6b21\u8ba1\u7b97\u4e00\u6bb5\u7684\u8d21\u732e\u3002\n\n\u6bcf\u6bb5\u7684\u8ddd\u79bb\u5f88\u597d\u7b97\uff0c\u76f4\u63a5\u51cf\u5c31\u53ef\u4ee5\u4e86\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u662f\u5728\u8fd9\u4e00\u6bb5\u91cc\u5305\u62ec\u7684\u5c0f\u77e9\u5f62\u7684\u9ad8\u7684\u548c\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u7ebf\u6bb5\u6811\u91cc\u9762\u8bb0\u5f55\u4e24\u4e2a\u503c $cnt,len$ \u3002\n\n\u5206\u522b\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u88ab\u8986\u76d6\u4e86\u51e0\u6b21\u548c\u8fd9\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u3002\n\n\u7edf\u8ba1\u8fd9\u6bb5\u533a\u95f4\u7684\u8d21\u732e\u65f6\uff0c\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u3002\n\n1. \u82e5 $cnt=0$ \uff0c\u5219\u8be5\u533a\u95f4\u7684\u8d21\u732e\u4e3a\u4e24\u4e2a\u5b50\u533a\u95f4\u7684\u8d21\u732e\u4e4b\u548c\u3002\n2. \u82e5 $cnt>0$ \uff0c\u5219\u8be5\u533a\u95f4\u7684\u8d21\u732e\u4e3a\u8be5\u533a\u95f4\u8868\u793a\u7684\u9ad8\u5ea6\u603b\u548c\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u6ca1\u6709\u5224\u65ad $l==r$ \u7684\u7ec8\u6b62\u6761\u4ef6\uff0c\u9700\u8981\u6211\u4eec\u624b\u52a8\u5224\u65ad\u4e00\u4e0b\u3002\n\n$ps:$ \u7ebf\u6bb5\u6811\u7684\u4e0b\u6807\u8868\u793a\u5c0f\u6bb5\u7684\u5de6\u7aef\u70b9\uff0c\u6240\u4ee5\u6bcf\u6b21\u53ea\u9700\u8981\u4fee\u6539 $l\\sim r-1$ \u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il print(T x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 1e5+5;\nint n,a,b,c,d,x,y,s[MAXN<<1],sz;\nll ans;\nstruct Node{\n\tint x,a,b,ty;\n\tNode(){}\n\tNode(int x,int a,int b,int ty):x(x),a(a),b(b),ty(ty){}\n\tbool operator <(const Node &t) const{\n\t\treturn x<t.x;\n\t}\n}node[MAXN<<1];\nit get_id(int x){return lower_bound(s+1,s+1+sz,x)-s;}\nstruct Seg_Tree{\n\tint cnt,len;\n}T[MAXN<<3];\n#define lc (cur<<1)\n#define rc (cur<<1|1)\nil pushup(int cur,int l,int r){\n\tif(T[cur].cnt) T[cur].len=s[r+1]-s[l];\n\telse{\n\t\tif(l==r) T[cur].len=0;\n\t\telse T[cur].len=T[lc].len+T[rc].len;\n\t}\n}\nil updata(int cur,int l,int r,int L,int R,int k){\n\tif(l>=L&&r<=R) T[cur].cnt+=k;\n\telse{\n\t\tif(mid>=L) updata(lc,l,mid,L,R,k);\n\t\tif(R>mid) updata(rc,mid+1,r,L,R,k);\n\t}\n\tpushup(cur,l,r);\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n);\n\tfor(ri i=1;i<=n;++i){\n\t\tread(a),read(b),read(c),read(d);\n\t\tnode[i*2-1]=Node(a,b,d,1);\n\t\tnode[i*2]=Node(c,b,d,-1);\n\t\ts[i*2-1]=b,s[i*2]=d;\n\t}\n\tsort(node+1,node+1+2*n),sort(s+1,s+1+2*n),sz=unique(s+1,s+1+2*n)-s-1;\n\tfor(ri i=1;i<n*2;++i){\n\t\tri x=get_id(node[i].a),y=get_id(node[i].b);\n\t\tupdata(1,1,sz-1,x,y-1,node[i].ty);\n\t\tans+=1ll*T[1].len*(node[i+1].x-node[i].x);\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u4e00\u5b9a\u8981\u6ce8\u610f\u6570\u7ec4\u662f\u5426\u8d8a\u754c\uff0c\u4e0d\u7136\u4f1a\u8bbf\u95ee\u5230\u4e00\u4e9b\u83ab\u540d\u5176\u5999\u7684\u4e1c\u897f\u3002",
        "postTime": 1567687917,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P5490 \u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf \u9898\u89e3"
    },
    {
        "content": "ORZ \u6570\u7ec4\u5f00\u5c0f\u8c03\u4e86\u4e00\u4e07\u5e74\u7684 ZJQ\n\n# Pre\n\n\u7b97\u6cd5\uff1a \u7ebf\u6bb5\u6811\uff08\u626b\u63cf\u7ebf\uff09\n\n\u601d\u60f3\uff1a \u79bb\u6563\u5316\n\n\n\u7b80\u8981\u8bf4\u660e\u4e00\u4e0b\u5c31\u662f\u5229\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5b58\u5728\u8986\u76d6\u7684\u533a\u95f4\u603b\u957f\uff0c\u7136\u540e\u79bb\u6563\u5730\u53bb $O(n)$ \u7edf\u8ba1\u6bcf\u4e00\u4e2a x \u95f4\u9694\u7684\u8d21\u732e\n\n\u5177\u4f53\u5b9e\u73b0\u8981\u7528\u79bb\u6563\uff0c\u5e76\u4e14\u8981\u8ba9\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u70b9\u8868\u793a\u8be5\u70b9\u5bf9\u5e94\u7684\u53f3\u7aef\u70b9\u5411\u5de6\u7684\u4e00\u5c0f\u6bb5\u533a\u95f4\n\n\n\n\n\n# code\n\n```cpp\n//by Judge\n#include<bits/stdc++.h>\n#define Rg register\n#define int long long\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define go(G,u) for(Rg int i=G.head[u],v=G.e[i].to;i;v=G.e[i=G.e[i].nxt].to)\n#define open(S) freopen(S\".in\",\"r\",stdin),freopen(S\".out\",\"w\",stdout)\n#define ull unsigned long long\nusing namespace std;\nconst int M=4e5+3;\ntypedef int arr[M];\ntypedef int TRR[M<<2];\n#ifdef online_judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){ int x=0,f=1; char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n    for(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} int n,m,cnt; ull ans; arr b; TRR t,len,sum;\nstruct node{ int x,op,l,r; }op[M<<1];\ninline bool cmp(node a,node b){\n\treturn a.x^b.x?a.x<b.x:a.op<b.op;\n}\n#define ls k<<1\n#define rs k<<1|1\n#define lson ls,l,mid\n#define rson rs,mid+1,r\t\nvoid build(int k,int l,int r){ if(l==r) return len[k]=b[l]-b[l-1],void();\n\tint mid=(l+r)>>1; build(lson),build(rson),len[k]=len[ls]+len[rs];\n}\nvoid update(int k,int l,int r,int L,int R,int v){ if(l>R||L>r) return ;\n\tif(L<=l&&r<=R) return t[k]+=v,sum[k]=t[k]>0?len[k]:sum[ls]+sum[rs],void();\n\tint mid=(l+r)>>1; update(lson,L,R,v),update(rson,L,R,v); if(t[k]<=0) sum[k]=sum[ls]+sum[rs];\n}\nsigned main(){\n\tn=read();\n\tfp(i,0,n-1){\n\t\tRg int x1=read(),y1=read(),x2=read(),y2=read(); b[++m]=y1,b[++m]=y2;\n\t\top[++cnt]=(node){x1,1,y1,y2},op[++cnt]=(node){x2,-1,y1,y2};\n\t}\n\tsort(b+1,b+1+m),m=unique(b+1,b+1+m)-b-1;\n\tfp(i,1,cnt){\n\t\top[i].l=lower_bound(b+1,b+1+m,op[i].l)-b;\n\t\top[i].r=lower_bound(b+1,b+1+m,op[i].r)-b;\n\t}\n\tsort(op+1,op+1+cnt,cmp),build(1,1,m);\n\tupdate(1,1,m,op[1].l+1,op[1].r,op[1].op);\n\tfp(i,2,cnt){\n\t\tans+=1ull*(op[i].x-op[i-1].x)*sum[1];\n\t\tupdate(1,1,m,op[i].l+1,op[i].r,op[i].op);\n\t} return !printf(\"%llu\\n\",ans);\n}\n```\n",
        "postTime": 1565310306,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    },
    {
        "content": "# \u4e0d\u5f97\u4e0d\u6709\u4e9b\u5e86\u5e78\uff0c\u5c45\u7136\u4f60\u8c37\u8fd8\u6709\u65e0\u9898\u89e3\u7684\u9898\uff0c\u90a3\u6211\u5c31\u6210\u4e3a\u8fd9\u7b2c\u4e00\u4eba\u5427\uff01\n## [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P5490)\n# \u5bf9\u4e8e\u8fd9\u79cd\u9898\u6211\u4eec\u7684\u6b63\u89e3\u5c31\u662f\u7ebf\u6bb5\u6811\u5957\u626b\u63cf\u7ebf\uff0c\u542c\u8d77\u6765\u662f\u4e0d\u662f\u903c\u683c\u5f88\u9ad8\u3002\n## \u4e00\u3001\u4ec0\u4e48\u662f\u626b\u63cf\u7ebf\n## \u4ec0\u4e48\u662f\u626b\u63cf\u6cd5\uff1f\u6709\u4ec0\u4e48\u7528\uff1f\u600e\u4e48\u7528\uff1f\n\u53ef\u4ee5\u60f3\u8c61\u6210\u4e00\u6839\u5047\u60f3\u7684\u7ebf\uff0c\u5c06\u56fe\u4ece\u5de6\u5f80\u53f3\u6216\u4ece\u53f3\u5f80\u5de6\u6216\u81ea\u4e0b\u800c\u4e0a\u6216\u81ea\u4e0a\u800c\u4e0b\u201c\u626b\u63cf\u201d\u4e00\u904d\uff0c\u81f3\u4e8e\u626b\u63cf\u7684\u662f\u4ec0\u4e48\u5219\u6839\u636e\u5177\u4f53\u5e94\u7528\u9009\u62e9\u3002\u626b\u63cf\u7ebf\u53ef\u4ee5\u8ba1\u7b97\u77e9\u5f62\u9762\u79ef\u3001\u5468\u957f\uff0c\u53ef\u4ee5\u8ba1\u7b97\u7ebf\u6bb5\u4ea4\u70b9\uff0c\u53ef\u4ee5\u5b9e\u73b0\u591a\u8fb9\u5f62\u626b\u63cf\u8f6c\u6362\uff0c\u5728\u56fe\u7684\u5904\u7406\u65b9\u9762\u7ecf\u5e38\u7528\u5230\u3002\n \n\u9762\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u9996\u5148\u7684\u95ee\u9898\u662f\uff0c\u8ba1\u7b97\u673a\u8981\u600e\u4e48\u4fdd\u5b58\u8fd9\u5f20\u56fe\u8fd9\u4e9b\u77e9\u5f62\uff1f\u4ece\u521a\u624d\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u5b58\u8fd9\u5f20\u56fe\u91cc\u9762\u7684\u6240\u6709\u6c34\u5e73\u7684\u8fb9\u5373\u53ef\u3002\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u5b83\u6240\u62e5\u6709\u7684\u5c5e\u6027\u662f\uff1a\u8fd9\u6761\u8fb9\u7684\u5de6\u53f3\u7aef\u70b9\uff08\u7684\u6a2a\u5750\u6807\uff09\uff0c\u8fd9\u6761\u8fb9\u7684\u9ad8\u5ea6\uff08\u7eb5\u5750\u6807\uff09\uff0c\u8fd9\u6761\u8fb9\u5c5e\u4e8e\u77e9\u5f62\u7684\u4e0a\u8fb9\u8fd8\u662f\u4e0b\u8fb9\uff08\u60f3\u60f3\u4e3a\u4ec0\u4e48\u4fdd\u5b58\u8fd9\u4e2a\u5c5e\u6027\uff09\u521a\u521a\u8ba1\u7b97\u4e2d\u6211\u4eec\u9047\u5230\u4e24\u4e2a\u84dd\u8272\u77e9\u5f62\u7684\u4e00\u90e8\u5206\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u8fd9\u4e24\u4e2a\u84dd\u8272\u77e9\u5f62\u7684\u2018\u5bbd\u2019\u662f\u591a\u5c11\uff0c\u7528\u8ba1\u7b97\u673a\u600e\u4e48\u505a\u5230\uff1f\n## \u7ebf\u6bb5\u6811\u534e\u4e3d\u767b\u573a!\n \u6211\u4eec\u4ee5\u6574\u4e2a\u56fe\u6700\u5de6\u8fb9\u7684\u7ad6\u7ebf\u4f5c\u4e3a\u533a\u95f4\u5de6\u7aef\u70b9\uff0c\u6700\u53f3\u8fb9\u7684\u7ad6\u7ebf\u4f5c\u4e3a\u533a\u95f4\u53f3\u7aef\u70b9\uff0c\u53bb\u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\u7684\u6709\u6548\u957f\u5ea6\uff08\u5373\u88ab\u8986\u76d6\u7684\u957f\u5ea6\uff09\u6bd4\u5982\u626b\u5230\u7b2c2\u6761\u8fb9\u7684\u65f6\u5019\uff0c\u6709\u6548\u957f\u5ea6\u5c31\u662f\u4e24\u4e2a\u84dd\u8272\u77e9\u5f62\u7684\u5bbd\u4e4b\u548c\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u7528\u626b\u63cf\u7ebf\u53bb\u626b\u63cf\u6bcf\u4e00\u6761\u8fb9\u7684\u65f6\u5019\uff0c\u90fd\u9700\u8981\u66f4\u65b0\u7ebf\u6bb5\u6811\u7684\u6709\u6548\u957f\u5ea6\u662f\u5982\u4f55\u66f4\u65b0\u7684\u5462\uff1f\u5982\u679c\u626b\u5230\u7684\u8fd9\u6761\u8fb9\u662f\u67d0\u77e9\u5f62\u7684\u4e0b\u8fb9\uff0c\u5219\u5f80\u533a\u95f4\u63d2\u5165\u8fd9\u6761\u7ebf\u6bb5\u5982\u679c\u626b\u5230\u7684\u8fd9\u6761\u8fb9\u662f\u67d0\u77e9\u5f62\u7684\u4e0a\u8fb9\uff0c\u5219\u5f80\u533a\u95f4\u5220\u9664\u8fd9\u6761\u7ebf\u6bb5\u4e3a\u4ec0\u4e48\uff1f\u81ea\u5df1\u8bd5\u7740\u6a21\u62df\u4e00\u4e0b\u5c31\u4e0d\u96be\u53d1\u73b0\uff1a\u56e0\u4e3a\u6211\u4eec\u662f\u81ea\u4e0b\u800c\u4e0a\u7684\u626b\u8fd9\u4e2a\u56fe\uff0c\u626b\u5230\u4e0b\u8fb9\u76f8\u5f53\u4e8e\u521a\u521a\u8fdb\u5165\u4e00\u4e2a\u77e9\u5f62\uff0c\u626b\u5230\u4e0a\u8fb9\u5219\u662f\u8981\u79bb\u5f00\u4e00\u4e2a\u77e9\u5f62\u5229\u7528\u7ebf\u6bb5\u6811\u628a\u6bcf\u6761\u8fb9\u7684\u6709\u6548\u957f\u5ea6\u627e\u5230\u4e86\uff0c\u4e5f\u5c31\u662f\u627e\u5230\u4e86\u6bcf\u90e8\u5206\u7684\u6240\u6709\u77e9\u5f62\u7684\u603b\u5bbd\uff0c\u90a3\u4e48\u9ad8\u5462\uff1f\u9ad8\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u8fb9\uff0c\u6309\u7167\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u90a3\u4e48\u77e9\u5f62\u9ad8\u5c31\u662f\u6bcf\u76f8\u90bb\u8fb9\u4e4b\u95f4\u7684\u9ad8\u5ea6\u5dee\n### \u7531\u4e8e\u849f\u84bb\u4e0d\u4f1a\u63d2\u5165\u56fe\u7247\uff0c\u6240\u4ee5\u5982\u4f55\u6839\u636e\u8bed\u8a00\u63cf\u8ff0\u53bb\u753b\u56fe\u63a8\u6f14\u5c31\u9760\u5927\u5bb6\u8fbd\uff0cAC\u5448\u4e0a\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct edge{\n    int h,lx,rx,s;\n    bool operator < (const edge &b) const\n    {\n        return h<b.h;\n    }\n}line[20005];\nstruct sd{\n    int son[2],l,r,len,s;\n}t[200005]; \nint X[20005];\nint cnt;\nvoid create(int &v,int l1,int r1)\n{\n    cnt++;\n    v=cnt;\n    t[v].l=l1;\n    t[v].r=r1;\n    if(l1==r1) \n      return;\n    int mid=(l1+r1)>>1;\n    create(t[v].son[0],l1,mid);\n    create(t[v].son[1],mid+1,r1);\n}\nint find(int l1,int r1,int key)\n{\n    while(l1<=r1)\n    {\n        int mid=(l1+r1)/2;\n        if(X[mid]==key) return mid;\n        else\n        if(X[mid]<key) l1=mid+1;\n        else r1=mid-1;\n    }\n}\nvoid pushup(int v) \n{\n    if(t[v].s)\n        t[v].len=X[t[v].r+1]-X[t[v].l]; \n    else\n    if(t[v].l==t[v].r)\n      t[v].len=0;\n    else\n      t[v].len=t[t[v].son[0]].len+t[t[v].son[1]].len;\n}\nvoid update(int v,int l1,int r1,int c) \n{\n    if(t[v].l==l1 && t[v].r==r1)\n    {\n        t[v].s+=c;\n        pushup(v);\n        return;\n    }\n    int mid=(t[v].l+t[v].r)>>1;\n    if(l1>mid) \n      update(t[v].son[1],l1,r1,c);\n    else  \n    if(r1<=mid) \n      update(t[v].son[0],l1,r1,c);\n    else\n    {\n      update(t[v].son[0],l1,mid,c);\n      update(t[v].son[1],mid+1,r1,c);\n    }\n    pushup(v);\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int tot=0;\n    for(int i=1;i<=n;i++)\n    {\n        int x1,x2,y1,y2;\n        scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n        tot++;\n        line[tot].lx=x1;\n        line[tot].rx=x2;\n        line[tot].h=y1;\n        line[tot].s=1;\n        X[tot]=x1;\n        tot++;\n        line[tot].lx=x1,line[tot].rx=x2,line[tot].h=y2,line[tot].s=-1;\n        X[tot]=x2;\n    }\n    sort(X+1,X+1+tot);\n    sort(line+1,line+1+tot);\n    int root;\n    create(root,1,tot);\n    int k=0;\n    for(int i=1;i<=tot;i++)//\u53bb\u91cd;\n      if(X[i]!=X[i+1])\n        X[++k]=X[i];\n    long long ans=0;\n    for(int i=1;i<=tot;i++)\n    {\n        int ll=find(1,k,line[i].lx);\n        int rr=find(1,k,line[i].rx)-1; \n        update(1,ll,rr,line[i].s);\n        ans+=(line[i+1].h-line[i].h)*t[1].len; \n    }\n    printf(\"%lld\",ans);\n    system(\"pause\");\n    return 0;\n}\n\n```\n[\u849f\u84bb\u7684\u85cf\u5b9d\u5323\u5b50](https://www.luogu.org/blog/sshilyzyx/)",
        "postTime": 1565253880,
        "uid": 147869,
        "name": "ss_hilyzyx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5490 \u3010\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf\u3011"
    }
]