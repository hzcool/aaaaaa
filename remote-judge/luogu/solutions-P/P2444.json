[
    {
        "content": "## \u601d\u8def\u6982\u8ff0\n\n\u6211\u4eec\u77e5\u9053\uff0cAC\u81ea\u52a8\u673a\u662f\u4e00\u79cd\u591a\u6a21\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5\u3002\u6784\u9020 Trie \u6811 \u540e\uff0c\u5728\u6a21\u5f0f\u4e32\u672b\u5c3e\u4e00\u4f4d\u7684\u7ed3\u70b9\u4f5c\u4e0a\u6807\u8bb0\u3002\u5e73\u5e38\u7684 AC\u81ea\u52a8\u673a \u662f\u5c3d\u91cf\u80fd\u591a\u63a5\u89e6\u5230\u8fd9\u4e9b\u6807\u8bb0\uff0c\u4f7f\u603b\u503c\u6700\u5927\u3002\u672c\u9898\u5012\u662f\u6709\u70b9\u5947\u8469\uff0c\u8981\u6784\u9020\u4e00\u4e2a\u53ef\u884c\u7684\u65e0\u9650\u957f\u6587\u672c\u4e32\uff0c\u4f7f\u6ca1\u6709\u4efb\u4f55\u5b50\u4e32\u4e3a\u7ed9\u51fa\u6a21\u5f0f\u4e32\u4e2d\u7684\u4e00\u4e2a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u8ba9\u5e73\u5e38 AC\u81ea\u52a8\u673a \u7684\u67e5\u8be2\u64cd\u4f5c\uff0c\u5c3d\u91cf\u907f\u514d\u6807\u8bb0\uff0c\u80fd\u7528\u5931\u914d\u6307\u9488\u8df3\u8f6c\u5c31\u8df3\u8f6c\u3002\n\n\u56e0\u4e3a\u8981\u6709\u65e0\u9650\u957f\u7684\u53ef\u884c\u4e32\uff0c\u6839\u636e AC\u81ea\u52a8\u673a \u7684\u539f\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ed3\u70b9\u8fde\u63a5\u5230\u513f\u5b50\u7684\u8fb9\u5f53\u4f5c\u4e00\u6761\u5355\u5411\u8fb9\uff0c\u540c\u65f6\u5931\u914d\u6307\u9488\u4e5f\u5f53\u4f5c\u4e00\u6761\u5355\u5411\u8fb9\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u73af\uff0c\u4e14\u73af\u4e0a\u6ca1\u6709\u4efb\u4f55\u5371\u9669\u6807\u8bb0\uff08\u5373\u75c5\u6bd2\u4ee3\u7801\u6bb5\u672b\u5c3e\u4e00\u4f4d\u7684\u7ed3\u70b9\u4e13\u95e8\u4f5c\u7684\u7f16\u53f7\uff09\uff0c\u6b64\u65f6 AC\u81ea\u52a8\u673a \u80fd\u4e00\u76f4\u5728\u73af\u4e0a\u5339\u914d\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u5f97\u5230\u4e3a\u6a21\u5f0f\u4e32\u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u5c31\u50cf\u7a0b\u5e8f\u4e2d\u7684\u6b7b\u5faa\u73af\u4e00\u6837\u3002\u8fd9\u4e2a\u627e\u73af\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 dfs \u6765\u5b9e\u73b0\u3002\n\n## \u6ce8\u610f\u4e8b\u9879\n\n- 1 . \u6211\u4eec\u9700\u8981\u5efa\u7acb\u4e24\u4e2a\u5e03\u5c14\u6570\u7ec4\uff0c\u5176\u4e2d\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u5728\u5f53\u524d dfs \u8d70\u7684\u8def\u5f84\u4e0a\u6709\u6ca1\u6709\u88ab\u9009\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u5386\u53f2\u4e0a\u6709\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u3002\u5982\u679c\u5f53\u524d\u8def\u5f84\u5f62\u6210\u56de\u8def\uff0c\u5c31\u627e\u5230\u73af\u4e86\uff0c\u5e94\u8be5\u8fd8\u662f\u6bd4\u8f83\u597d\u5b9e\u73b0\u7684\u3002\n\n- 2 . \u907f\u514d\u5371\u9669\u6807\u8bb0\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u62e5\u6709\u5371\u9669\u6807\u8bb0\uff0c\u5c31\u4e0d\u8d70\u90a3\u4e2a\u7ed3\u70b9\u3002\n\n- 3 . \u5728\u6784\u9020\u5931\u914d\u6307\u9488\u65f6\uff0c\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u4f18\u5316\u662f\uff1a\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u62e5\u6709\u4e86\u5931\u914d\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u7ed3\u70b9\u5982\u679c\u6709\u5371\u9669\u6807\u8bb0\uff0c\u81ea\u5df1\u5fc5\u7136\u4e5f\u5371\u9669\uff0c\u56e0\u4e3a\u5b83\u5230\u6839\u7ed3\u70b9\u5f62\u6210\u7684\u4e32\u662f\u81ea\u5df1\u5230\u6839\u8282\u70b9\u7684\u540e\u7f00\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u4ee3\u7801\u548c\u6ce8\u91ca\u90fd\u8ba4\u8ba4\u771f\u771f\u6253\u4e86\uff0c\u5982\u679c\u4e0a\u9762\u7684\u6982\u8ff0\u6709\u70b9\u96be\u61c2\u7684\u8bdd\u2026\u2026\u8bf7\u7ed3\u5408\u4ee3\u7801\u548c\u8be5\u884c\u7684\u6ce8\u91ca\u8fdb\u884c\u7406\u89e3\u5427\u3002\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nqueue < int > Q; // \u6807\u5931\u914d\u7ed3\u70b9\u7f16\u53f7\u6240\u9700\u7684\u961f\u5217 \n\nstruct Node{\n    int t[2] , f; // t \u6570\u7ec4\u4e3a\u4e0b\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u7ed3\u70b9\u7f16\u53f7\uff0cf \u4e3a\u5931\u914d\u7ed3\u70b9\u7f16\u53f7\n    bool c; // c \u53d8\u91cf\u4e3a\u8be5\u7ed3\u70b9\u662f\u5426\u4e3a\u5371\u9669\u4ee3\u7801\u6bb5\u7684\u6700\u540e\u4e00\u4f4d \n}; // \u5b9a\u4e49\u5b57\u5178\u6811\u7ed3\u70b9\u7ed3\u6784\u4f53\nstruct AcAutomaton{\n    Node N[30001]; // \u5b57\u5178\u6811\u7684\u7ed3\u70b9\n    int S = 0; // \u5b57\u5178\u6811\u7684\u5f53\u524d\u975e\u6839\u8282\u70b9\u603b\u6570\n    inline void Insert(char c[] , int l){ \n        int nd = 0; // \u5b9a\u4e49\u5f53\u524d\u70b9\uff0c\u5f53\u7136\u4ece\u6839\u8282\u70b9 0 \u5f00\u59cb\n        for(int i = 0 ; i < l ; i++)\n            if(N[nd].t[c[i] - 48] == 0)\n                N[nd].t[c[i] - 48] = ++S , nd = S; // \u6ca1\u6709\u76ee\u6807\u8282\u70b9\uff0c\u65b0\u5efa\u4e2a\n            else\n                nd = N[nd].t[c[i] - 48]; // \u6709\u76ee\u6807\u8282\u70b9\uff0c\u76f4\u63a5\u8f6c\u79fb\u5f53\u524d\u70b9\n        N[nd].c = true; // \u6807\u4e0a\u75c5\u6bd2\u6bb5\u672b\u5c3e\u7684\u5371\u9669\u6807\u8bb0      \n    } // \u51fd\u6570\uff1a\u5411\u5b57\u5178\u6811\u5185\u63d2\u5165\u957f\u5ea6\u4e3a l \u7684\u75c5\u6bd2\u4e32 \n    inline void PutFail(){\n        if(N[0].t[0] > 0)\n            Q.push(N[0].t[0]); // \u6839\u8282\u70b9\u6709\u6ca1\u6709 0 \u513f\u5b50\uff0c\u5982\u679c\u6709\u63a8\u5165\u961f\u5217\n        if(N[0].t[1] > 0)\n            Q.push(N[0].t[1]); // \u6839\u8282\u70b9\u6709\u6ca1\u6709 1 \u513f\u5b50\uff0c\u5982\u679c\u6709\u63a8\u5165\u961f\u5217\n        while(!Q.empty()){\n            int nd = Q.front() ; Q.pop(); // \u5f97\u5230\u961f\u5217\u9996\n            for(int i = 0 ; i <= 1 ; i++)\n                if(N[nd].t[i] > 0){\n                    Q.push(N[nd].t[i]);\n                    int td = N[nd].f;\n                    while(td > 0 && N[td].t[i] <= 0)\n                        td = N[td].f; // \u8981\u4e0d\u5230\u6839\u8282\u70b9\uff0c\u8981\u4e0d\u627e\u5230\u6700\u957f\u5339\u914d\u540e\u7f00\u6bb5\n                    if(N[td].t[i] <= 0)\n                        N[N[nd].t[i]].f = 0; // \u5931\u914d\u6307\u9488\u8f6c\u79fb\u5230\u6839\u8282\u70b9 \n                    else{\n                        N[N[nd].t[i]].f = N[td].t[i];\n                        if(N[N[td].t[i]].c)\n                            N[N[nd].t[i]].c = true;\n                        // \u65e2\u7136\u81ea\u5df1\u540e\u7f00\u90fd\u884c\u4e0d\u901a\uff0c\u81ea\u5df1\u4e5f\u5371\u9669 \n                    }\n                }else\n                    N[nd].t[i] = N[N[nd].f].t[i]; \n        } \n    } // \u51fd\u6570\uff1a\u8bbe\u7f6e\u5931\u914d\u6307\u9488 \n}; // \u5b9a\u4e49 AC \u81ea\u52a8\u673a\u7ed3\u6784\u4f53 \n\nAcAutomaton A; // \u65b0\u5efa AC \u81ea\u52a8\u673a \nbool v[30001]; // v \u4e3a\u7ed3\u70b9\u662f\u5426\u662f\u5f53\u524d\u641c\u7d22\u8def\u5f84\u4e0a\u7684\u4e00\u70b9\nbool f[30001]; // f \u4e3a\u7ed3\u70b9\u662f\u5426\u662f\u5426\u88ab\u73b0\u5728\u6216\u8fc7\u5f80\u641c\u7d22\u8fc7 \nchar c[30001];\nint n;\n\nvoid Dfs(int d){ // \u901a\u8fc7\u641c\u7d22\u5bfb\u627e\u6709\u6ca1\u6709\u73af \n    v[d] = true; // \u4f5c\u4e0b\u8def\u5f84\u6807\u8bb0 \n    for(int i = 0 ; i <= 1 ; i++) \n        if(v[A.N[d].t[i]]){ // \u6839\u636e\u8def\u5f84\u6807\u8bb0\u5224\u65ad\u662f\u5426\u62e5\u6709\u73af\n            printf(\"TAK\");\n            exit(0); // \u627e\u5230\u4e86\u73af\uff0c\u8f93\u51fa\u5e76\u9000\u51fa\u7a0b\u5e8f \n        }else if(!A.N[A.N[d].t[i]].c && !f[A.N[d].t[i]]){\n            // \u53ea\u6709\u4e0b\u4e00\u4f4d\u4e0d\u4e3a\u5371\u9669\u7ed3\u70b9\u5e76\u4e14\u6709\u53ef\u80fd\u6210\u73af\uff0c\u624d\u9012\u5f52\u641c\u7d22\n            f[A.N[d].t[i]] = true; // \u4e0b\u4e00\u4e2a\u7ed3\u70b9\u5df2\u7ecf\u88ab\u641c\u7d22\u8fc7\u4e86 \n            Dfs(A.N[d].t[i]); \n        }\n    v[d] = false; // \u62b9\u9664\u8def\u5f84\u6807\u8bb0 \n}\n\nint main(){\n    scanf(\"%d\" , &n); // \u8f93\u5165\u75c5\u6bd2\u4e32\u6570\u91cf\uff08\u8fd9\u4e2a\u4e0d\u7528\u6211\u6253\u6ce8\u91ca\u4e86\u5427\u2026\u2026\uff09 \n    for(int i = 1 ; i <= n ; i++)\n        scanf(\"%s\" , c) , A.Insert(c , strlen(c)); // \u8f93\u5165\u5e76\u63d2\u5165\u75c5\u6bd2\u4e32;\n    A.PutFail(); // \u8bbe\u7f6e\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5931\u914d\u6307\u9488\n    Dfs(0); // \u4ece\u5b57\u5178\u6811\u7684\u6839\u7ed3\u70b9\u5f00\u59cb\u627e\u73af \n    printf(\"NIE\"); // \u65e2\u7136\u7a0b\u5e8f\u6ca1\u6709\u9000\u51fa\uff0c\u5c31\u8f93\u51fa\u65e0\u89e3 \n    return 0;\n}\n```",
        "postTime": 1503410535,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "AC\u81ea\u52a8\u673a\u5165\u95e8\u2014\u2014[yyb\u5de8\u4f6c\u7684\u535a\u5ba2](http://www.cnblogs.com/cjyyb/p/7196308.html)\n\nAC\u81ea\u52a8\u673a\u5165\u624b\u7ecf\u5178\u597d\u9898~~\uff08\u867d\u7136\u5e74\u4ee3\u4e45\u8fdc\uff09~~\n\n\u6709\u4e86fail\u6307\u9488\uff0ctrie\u6811\u5c31\u4e0d\u662f\u539f\u6765\u7684\u6811\u578b\u7ed3\u6784\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u53eb\u505atrie\u56fe\uff0c\u7531\u7236\u8282\u70b9\u5411\u5b50\u8282\u70b9\u8fde\u7684\u8fb9\u548cfail\u4ee3\u8868\u7684\u8fb9\u6784\u6210\uff08\u90fd\u662f\u5355\u5411\u8fb9\uff09\u3002\n\n\u6700\u6a21\u677f\u7684AC\u81ea\u52a8\u673a\uff0c\u5c31\u662f\u76f4\u63a5\u5339\u914d\u5b57\u7b26\u4e32\u3002\u7136\u800c\u8fd9\u9898\u601d\u7ef4\u5e76\u975e\u5982\u6b64\u7b80\u5355\u3002\n\n\u6765\u4e00\u6ce2\u9006\u5411\u601d\u7ef4\u3002\u5047\u8bbe\u6211\u4eec\u6784\u9020\u51fa\u4e86\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u5b89\u5168\u4ee3\u7801\uff0c\u518d\u62ff\u5230AC\u81ea\u52a8\u673a\u4e0a\u5339\u914d\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\n\n\u6ca1\u9519\uff0c\u5f53\u6211\u4eec\u4e00\u4f4d\u4e00\u4f4d\u5730\u5339\u914d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u8df3\u5230\u67d0\u4e2a\u75c5\u6bd2\u4ee3\u7801\u6bb5\u7ed3\u5c3e\u7684\u4f4d\u7f6e\uff08\u4ee5\u540e\u628a\u8fd9\u91cc\u79f0\u4f5c**\u5371\u9669\u8282\u70b9**\uff0c\u56e0\u4e3a\u5339\u914d\u5230\u6b64\u5904\u8868\u660e\u5df2\u7ecf\u51fa\u73b0\u4e86\u67d0\u4e2a\u75c5\u6bd2\u4ee3\u7801\u6bb5\uff09\uff0c\u7136\u540e\u4f3c\u4e4e\u4f1a\u5728\u81ea\u52a8\u673a\u91cc\u6c38\u65e0\u6b62\u5883\u5730\u6253\u8f6c\u8f6c\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u65e2\u7136\u8fd9\u4e2a\u81ea\u52a8\u673a\u53c8\u50cf\u4e00\u4e2a\u56fe\uff0c\u90a3\u6211\u4eec\u7684\u95ee\u9898\u4e0d\u5c31\u53d8\u6210\u4e86\u2014\u2014\u5728AC\u81ea\u52a8\u673a(trie\u56fe)\u4e2d\u5bfb\u627e**\u4e00\u4e2a\u73af**\uff0c\u5e76\u4e14**\u73af\u4e0a\u6ca1\u6709\u4efb\u4f55\u5371\u9669\u8282\u70b9**\uff0c\u5e76\u4e14\u8fd8\u8981\u6ce8\u610f\uff0c**\u8fd9\u4e2a\u73af\u80fd\u88ab\u6839\u8282\u70b9\u8bbf\u95ee\u5230**\uff08\u4e5f\u5c31\u662f\u8bf4\u4ece\u6839\u8282\u70b9\u51fa\u53d1\u80fd\u5728\u4e0d\u7ecf\u8fc7\u5371\u9669\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\u8d70\u5230\u5230\u8fd9\u4e2a\u73af\uff0c\u4e0d\u7136\u5728\u6a21\u62dfAC\u81ea\u52a8\u673a\u5339\u914d\u7684\u65f6\u5019\u65e0\u6cd5\u5230\u8fbe\u8fd9\u4e2a\u8fd9\u4e2a\u73af\uff0c\u4e5f\u5c31\u5931\u53bb\u4e86\u610f\u4e49\uff0c\u697c\u4e0aDalao\u8fd9\u91cc\u53ef\u80fd\u8868\u8ff0\u4e0d\u5c3d\u51c6\u786e\uff09\u3002\n\n\u627e\u73af\u5c31\u5c5e\u4e8e\u56fe\u8bba\u4e86\uff0c**DFS**\u4e00\u904d\uff0c\u53ea\u4e0d\u8fc7**\u5fc5\u987b\u4ece\u6839\u8282\u70b9\u51fa\u53d1**\uff08\u4e0a\u9762\u63d0\u5230\uff09\u3002\u5f00\u4e24\u4e2a\u5e03\u5c14\u6570\u7ec4\uff0c\u4e00\u4e2a\u8bb0\u5f55\u5386\u53f2\u662f\u5426\u8bbf\u95ee\u8fc7\uff0c\u4e00\u4e2a\u8bb0\u5f55\u662f\u5426\u5728\u641c\u7d22\u7684\u6808\u4e2d\u3002\u5982\u679c\u641c\u7d22\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u5c06\u8981\u8bbf\u95ee\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e4b\u95f4\u5df2\u7ecf\u5165\u6808\u4e86\uff0c\u5c31\u627e\u5230\u89e3\u4e86\u3002\u4e0d\u8d70\u5371\u9669\u8282\u70b9\uff0c\u4e0d\u8d70\u5386\u53f2\u8bbf\u95ee\u8fc7\u800c\u5df2\u7ecf\u4e0d\u5728\u6808\u4e2d\u7684\u8282\u70b9\u3002\u8fd8\u6ce8\u610f\u4e00\u4e0b\uff0c**\u5982\u679c\u67d0\u8282\u70b9fail\u6307\u5411\u7684\u662f\u5371\u9669\u8282\u70b9\uff0c\u90a3\u4e48\u8be5\u8282\u70b9\u4e5f\u662f\u5371\u9669\u8282\u70b9**\uff0cAC\u81ea\u52a8\u673a\u7684\u6027\u8d28\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u591a\u8bf4\u51e0\u53e5\uff0c\u6570\u636e\u592a\u5c0f\uff08\u56e0\u4e3a\u5e74\u4ee3\u4e45\u8fdc\uff1f\uff09\uff0c\u6839\u672c\u4e0d\u50cfAC\u81ea\u52a8\u673a\u7684\u9898\u76ee\u3002\u3002\u3002\u3002\u3002\u3002~~\u63d0\u4ea4\u8bb0\u5f55\u90fd\u662f0ms\uff0c\u82e5\u60f3\u51b2\u699c\u8981\u538b\u7a7a\u95f4\uff0c\u5f00short\u5427\u3002\u6211\u8fd8\u662f\u627f\u8ba4yyb_test\u6bd4FlashHu\u5f3a\u591a\u5566\uff01~~\n\n\u4e0b\u9762\u662f\u6570\u7ec4\u4ee3\u7801\uff0c\u53ef\u7ed3\u5408\u6ce8\u91ca\u4e0e\u4e0a\u9762\u7684\u5206\u6790\u3002\n```\n#include<cstdio>\n#include<cstdlib>\nconst int N=33333;\nshort c[N][2],f[N],q[N];//\u6ca1\u9519short\nbool e[N],vis[N],inst[N];\nchar s[N];\nvoid dfs(short u)\n{\n\tif(inst[u])puts(\"TAK\"),exit(0);//\u627e\u5230\u5566\uff0c\u76f4\u63a5\u62dc\u62dc\n\tif(vis[u]||e[u])return;//\u8d70\u4e0d\u901a\n\tinst[u]=vis[u]=1;\n\tdfs(c[u][0]);\n\tdfs(c[u][1]);\n\tinst[u]=0;//\u4e24\u4e2a\u6807\u8bb0\u610f\u4e49\u4e0d\u540c\uff0c\u8fd9\u4e2a\u8bb0\u5f97\u641c\u5b8c\u6e050\n}\nint main()\n{\n\tfread(s,1,N,stdin);\n\tshort n,i,u,v,cnt=0,h=0,t=0;\n\tchar*p=s;\n\tn=*p&15;\n\twhile(*++p>' ')n*=10,n+=*p&15;\n    //\u5efa\u81ea\u52a8\u673a\n\twhile(n--)\n\t{\n\t\twhile(*++p<=' ');\n\t\tfor(u=0;*p>' ';++p)\n\t\t{\n\t\t\tif(!c[u][i=*p&1])c[u][i]=++cnt;\n\t\t\tu=c[u][i];\n\t\t}\n\t\te[u]=1;//\u6807\u8bb0\u5371\u9669\u8282\u70b9\uff08\u8fd9\u65f6\u8fd8\u6ca1\u628a\u6240\u6709\u7684\u5371\u9669\u8282\u70b9\u90fd\u627e\u51fa\u6765\uff09\n\t}\n    //\u5904\u7406fail\u4ee5\u53ca\u5371\u9669\u8282\u70b9\n\tif(c[0][0])q[++t]=c[0][0];\n\tif(c[0][1])q[++t]=c[0][1];\n\twhile(h<t)\n\t{\n\t\tu=q[++h];\n\t\tfor(i=0;i<=1;++i)\n\t\t\tif((v=c[u][i]))f[q[++t]=v]=c[f[u]][i],e[v]|=e[f[v]];\n            //\u8fd9\u65f6\u5019\u624d\u90fd\u627e\u51fa\u6765\u4e86\n\t\t\telse c[u][i]=c[f[u]][i];//\u76f4\u63a5\u6539\u7a7a\u513f\u5b50\uff0c\u65b9\u4fbf\u5931\u914d\u5904\u7406\n\t}\n\tdfs(0);\n\tputs(\"NIE\");//\u8fd9\u65f6\u5168\u641c\u904d\u4e86\u8fd8\u6ca1\u627e\u5230\n\treturn 0;\n}\n```",
        "postTime": 1517746457,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "QvQ\u73b0\u5728\u624d\u7406\u89e3AC\u81ea\u52a8\u673abuildfail\u7684\u65f6\u5019\u7ee7\u627f\u513f\u5b50\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\u628atrie\u6811\u8865\u6210trie\u56fe\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u53ea\u9700\u8981\u5efa\u597dtrie\u56fe\uff0c\u7136\u540e\u5728trie\u56fe\u4e0a\u627e\u4e00\u4e2a\u73af\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u5982\u679c\u62ff\u4e00\u4e2a\u5b89\u5168\u4ee3\u7801\u5728\u81ea\u52a8\u673a\u4e0a\u8dd1\n\n\u4e00\u5b9a\u4f1a\u4e0d\u505c\u7684\u8dd1\u800c\u5230\u4e0d\u4e86\u5355\u8bcd\u7684\u7ed3\u675f\u70b9\uff0c\u8fd9\u5c31\u8981\u6c42\u5fc5\u987b\u6709\u4e2a\u73af\n\n\u800c\u4e14\u8fd9\u4e2a\u73af\u8981\u6c42\u5fc5\u987b\u7ecf\u8fc7\u6839\u8282\u70b9\uff0c\u4e14\u4e0d\u7ecf\u8fc7\u4e00\u4e9b\u9650\u5236\u8282\u70b9\n\n\u9650\u5236\u8282\u70b9\u5305\u62ec\u5355\u8bcd\u7684\u7ed3\u675f\u8282\u70b9\uff0c\u8fd8\u6709\u82e5\u4e00\u4e2a\u70b9\u7684fail\u6307\u5411\u7684\u70b9\u662f\u9650\u5236\u8282\u70b9\n\n\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4e5f\u662f\u9650\u5236\u8282\u70b9\u3002\n\n\u56e0\u4e3afail\u6307\u5411\u7684\u662f\u5f53\u524d\u4e32\u7684\u6700\u957f\u540e\u7f00\uff0c\n\nfail\u6307\u5411\u7684\u540e\u7f00\u90fd\u662f\u75c5\u6bd2\u4e86\uff0c\u90a3\u5f53\u524d\u4e32\u672c\u8eab\u4e00\u5b9a\u4e5f\u662f\u75c5\u6bd2\u4e86\n\n[\u4ee3\u7801QwQ](http://www.cnblogs.com/refun/p/8685602.html)",
        "postTime": 1522710028,
        "uid": 41890,
        "name": "Refun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "  \u672c\u9898\u4e3b\u8981\u5bfb\u627e\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5faa\u73af\u5143\u4f7f\u5f97\u5176\u65e0\u9650\u6269\u5927\u3002\n  \n  \u6211\u4eec\u7684\u76ee\u7684\u5728\u4e8e\u5bfb\u627e\u8fd9\u6837\u7684\u5faa\u73af\u5143\u3002\n  \n  \u800c\u6211\u4eec\u5c31\u9700\u8981\u5148\u5c06\u6240\u6709\u7684\u6a21\u5f0f\u4e32\u653e\u8fdbtrie\u6811\u4e0a\u3002\u7136\u540e\u6211\u4eec\u9700\u8981\u660e\u786e\u4e00\u4e2a\u4e1c\u897f\n  \n  \u5c31\u662f\u6bcf\u4e2a\u5355\u8bcd\u7684\u672b\u5c3e\u5c5e\u4e8e\u975e\u6cd5\u72b6\u6001\uff0c\u82e5\u8be5\u8282\u70b9\u7684fail\u6307\u9488\u6240\u6307\u5411\u7684\u72b6\u6001\u975e\u6cd5\n  \n  \u90a3\u5b83\u4e5f\u662f\u975e\u6cd5\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5904\u7406\u51fa\u6240\u6709\u975e\u6cd5\u72b6\u6001\uff0c\u540c\u65f6\u5904\u7406fail\u6811\u3002\n  \n  \n------------\n\n```cpp\ninline void built(){\n\tfor(int i=0;i<2;i++){if(trie[0][i])q.push(trie[0][i]);}\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=0;i<2;i++){\n\t\t\tif(trie[x][i]){\n\t\t\tfail[trie[x][i]]=trie[fail[x]][i];q.push(trie[x][i]);\n\t\t\tif(en[trie[fail[x]][i]]) en[trie[x][i]]=1;}\n\t\t\telse trie[x][i]=trie[fail[x]][i];\n\t\t}\n\t}\n}\n```\n------------\n  \u4e0b\u4e00\u6b65\u5728\u4e8e\u627e\u73af\u4e0a\uff0c\u6211\u4eec\u5728dfs\u4e0a\u5904\u7406\u73af\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5982\u679c\u53d1\u73b0\u7b2c\u4e8c\u6b21\u53d1\u73b0\n  v[x]=1,\u5219\u8bc1\u660e\u51fa\u73af\u5df2\u7ecf\u53d1\u73b0\uff0c\u6211\u4eec\u8003\u8651\u4e00\u6761\u8def\u627e\u5230\u9ed1\uff0c\u5982\u679c\u8fd9\u6761\u8def\u8d70\u5230\u5e95\n  \u90fd\u6ca1\u6709\u627e\u5230\u73af\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u5e76\u4e0d\u5408\u6cd5\u3002\u6240\u4ee5\u5c06v[x]=-1;\u4e0b\u6b21\u9047\u89c1\u65f6\u76f4\u63a5return false;\n  \n \n------------\n```cpp\ninline bool dfs(int x){\n\tif(v[x]==1) return true;\n\tif(v[x]==-1) return false;\n\tv[x]=1;\n\tfor(int i=0;i<=1;i++){if(!en[trie[x][i]]){if(dfs(trie[x][i]))return 1;}}\n\tv[x]=-1;\n\treturn false;\n}\n```\n------------\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<algorithm>\n#define ll long long\n\nusing namespace std;\nqueue<int> q;\nconst int maxn=30030;\nint trie[maxn][2],fail[maxn],n,tot,v[maxn];\nchar s[maxn];\nbool en[maxn];\ninline void insert(){\n\tint len=strlen(s),p=0;\n\tfor(int i=0;i<len;i++){\n\t\tint ch=s[i]-'0';\n\t\tif(!trie[p][ch])trie[p][ch]=++tot;\n\t\tp=trie[p][ch];\n\t}\n\ten[p]=true;\n}\ninline void built(){\n\tfor(int i=0;i<2;i++){if(trie[0][i])q.push(trie[0][i]);}\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=0;i<2;i++){\n\t\t\tif(trie[x][i]){\n\t\t\tfail[trie[x][i]]=trie[fail[x]][i];q.push(trie[x][i]);\n\t\t\tif(en[trie[fail[x]][i]]) en[trie[x][i]]=1;}\n\t\t\telse trie[x][i]=trie[fail[x]][i];\n\t\t}\n\t}\n}\ninline bool dfs(int x){\n\tif(v[x]==1) return true;\n\tif(v[x]==-1) return false;\n\tv[x]=1;\n\tfor(int i=0;i<=1;i++){if(!en[trie[x][i]]){if(dfs(trie[x][i]))return 1;}}\n\tv[x]=-1;\n\treturn false;\n}\n\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){scanf(\"%s\",s);insert();}\n\tbuilt();\n\tif(dfs(0))cout<<\"TAK\"<<endl;\n\telse cout<<\"NIE\"<<endl;\n\treturn 0;\n}\n```\n\n\n\n  \n\n\n",
        "postTime": 1570689381,
        "uid": 176349,
        "name": "\u5929\u5b87\u88e8\u76ca",
        "ccfLevel": 0,
        "title": "\u75c5\u6bd2"
    },
    {
        "content": "\u5982\u679c\u76f4\u63a5\u8003\u8651\u6784\u902001\u4e32\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u65e0\u7591\u4f1a\u8d85\u51fa\u4e0a\u9650\u3002\n\n\u8003\u8651AC\u81ea\u52a8\u673a\u4e0a\u8be5\u4e32\u5339\u914d\u7684\u6027\u8d28\u3002\n\n\u5f88\u660e\u663e\u5728AC\u81ea\u52a8\u673a\u4e0a\uff0c\u8fd9\u4e2a\u65e0\u9650\u957f\u7684\u5b57\u7b26\u4e32\u6c38\u8fdc\u4e0d\u4f1a\u5230\u8fbe\u4e00\u4e2a\u6807\u8bb0\u8282\u70b9\uff0c\u53ea\u4f1a\u5728AC\u81ea\u52a8\u673a\u4e0a\u7684\u4e00\u4e2a\u73af\u4e0a\u4e0d\u65ad\u5339\u914d\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u627e\u5230\u8fd9\u4e2a\u73af\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684fail\u8282\u70b9\u5982\u679c\u662f\u6807\u8bb0\u8282\u70b9\uff0c\u90a3\u4e48\u5b83\u81ea\u8eab\u4e5f\u662f\u6807\u8bb0\u8282\u70b9\uff0c\u56e0\u4e3a\u8be5\u8282\u70b9\u7684fail\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u4e32\u662f\u8be5\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u4e32\u7684\u540e\u7f00\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<cmath>\n#include<queue>\nusing namespace std;\nconst int size=3e4+10;\nint n,tot,tr[size][2],fail[size],end[size],ins[size],vis[size];char s[size];\nqueue<int> q;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\ninline void insert(char *str){\n\tint len=strlen(str),p=0;\n\tfor(int k=0;k<len;k++){\n\t\tchar ch=str[k]-'0';\n\t\tif(!tr[p][ch]) tr[p][ch]=++tot;\n\t\tp=tr[p][ch];\n\t}\n\tend[p]=1;\n}\ninline void bfs(){\n\tfor(int i=0;i<=1;i++) if(tr[0][i]) q.push(tr[0][i]);\n\twhile(q.size()){\n\t\tint k=q.front();q.pop();\n\t\tfor(int i=0;i<=1;i++){\n\t\t\tif(tr[k][i]){\n\t\t\t\tfail[tr[k][i]]=tr[fail[k]][i];\n\t\t\t\tend[tr[k][i]]|=end[fail[tr[k][i]]];\n\t\t\t\tq.push(tr[k][i]);\n\t\t\t}\n\t\t\telse tr[k][i]=tr[fail[k]][i];\n\t\t}\n\t}\n}\ninline void dfs(int x){\n\tif(ins[x]){printf(\"TAK\\n\");exit(0);}\n\tif(vis[x]||end[x]) return;\n\tvis[x]=ins[x]=1;\n\tif(tr[x][0]) dfs(tr[x][0]);\n\tif(tr[x][1]) dfs(tr[x][1]);\n\tins[x]=0;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){scanf(\"%s\",s);insert(s);}\n\tbfs();dfs(0);\n\tprintf(\"NIE\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1544097088,
        "uid": 53032,
        "name": "\u5c0f\u5858\u7a7a\u660e",
        "ccfLevel": 0,
        "title": "P2444 [POI2000]\u75c5\u6bd2"
    },
    {
        "content": "\u524d\u8a00\uff1a\u8fd9\u9053\u9898\u6211\u4e4b\u524d\u505a\u5b8c\u4e86\u4ee5\u540e\u4fbf\u6ca1\u6709\u518d\u7ba1\uff0c\u76f4\u5230\u4eca\u5929\u6211\u53c8\u505a\u4e86\u4e00\u9053\u548c\u8fd9\u9053\u9898\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u7684$AC$\u81ea\u52a8\u673a\u9898\u76ee\u540e\uff0c\u6211\u60f3\u505a\u4e00\u4e2a\u603b\u7ed3\uff0c\u987a\u5e26\u5199\u4e00\u4e0b\u4e24\u9053\u9898\u7684\u9898\u89e3\u3002\n\n[\u4f20\u9001\u95e81](https://www.luogu.com.cn/problem/P2444)\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a$n$\u4e2a$01$\u4e32\uff0c\u4fdd\u8bc1$01$\u4e32\u957f\u5ea6\u4e4b\u548c\u4e0d\u8d85\u8fc7$30000$\uff0c\u8be2\u95ee\u662f\u5426\u5b58\u5728\u65e0\u9650\u957f\u7684$01$\u4e32\uff0c\u4f7f\u5f97\u7ed9\u5b9a\u4e32\u90fd\u4e0d\u662f\u5b83\u7684\u5b50\u4e32\u3002\n\n\u591a\u4e2a\u5b50\u4e32\u5339\u914d\u4e00\u4e2a\u6a21\u677f\u4e32\u7684\u95ee\u9898\u4e00\u822c\u80fd\u4f7f\u7528$AC$\u81ea\u52a8\u673a\u89e3\u51b3\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u8fd9\u4e9b$01$\u4e32\u5efa\u9020\u51fa\u4e00\u4e2a\u81ea\u52a8\u673a\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff1a$AC$\u81ea\u52a8\u673a\u4e00\u822c\u89e3\u51b3\u7684\u662f\u5b50\u4e32\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u201c\u4e0d\u662f\u5b50\u4e32\u95ee\u9898\u201d\uff0c\u7136\u540e\u8be5\u600e\u4e48\u505a\u5462\uff1f\n\n\u8fd9\u91cc\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651$AC$\u81ea\u52a8\u673a\u7684\u6027\u8d28\uff1a\u5b83\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u800c\u4ece\u5f53\u524d\u70b9\u51fa\u53d1\u53bb\u54ea\u4e2a\u70b9\u5b8c\u5168\u7531\u5f53\u524d\u5339\u914d\u4e32\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u51b3\u5b9a\uff0c\u800c$fail$\u6307\u9488\u8fde\u8d77\u6765\u7684\u4e00\u7cfb\u5217\u8282\u70b9\uff08\u4e5f\u5c31\u662f$fail$\u6811\u4e0a\u7ad6\u76f4\u65b9\u5411\u7684\u94fe\uff09\u5728\u5339\u914d\u4e0a\u662f\u7b49\u4ef7\u7684\uff08\u4e5f\u5c31\u662f\u5982\u679c$u.fail=v$\uff0c\u800c$v$\u6709\u67d0\u4e2a\u4e32\u7684\u7ed3\u5c3e\u6807\u8bb0\uff0c\u5219\u5339\u914d\u5230$u$\u4e5f\u8bf4\u660e\u5b58\u5728\u8be5\u5b50\u4e32\uff09\u3002\n\n\u800c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u4e0d\u5b58\u5728\u7ed9\u5b9a\u7684\u4e32\u662f\u5b50\u4e32\uff0c\u4e5f\u5c31\u662f\u8981\u6c42\u5728\u5339\u914d\u5b57\u7b26\u4e32\u65f6\u4e0d\u80fd\u7ecf\u8fc7\n\n**\u6709\u7ed3\u5c3e\u6807\u8bb0\u7684\u8282\u70b9**\n\n\u6216 \n\n**\u80fd\u901a\u8fc7$fail$\u6307\u9488\u8df3\u5230\u6709\u7ed3\u5c3e\u6807\u8bb0\u7684\u8282\u70b9\u7684\u8282\u70b9**\u3002\n\n\u800c\u201c\u65e0\u9650\u957f\u201d\u5c31\u662f\u6307**\u5220\u53bb\u4e0d\u80fd\u7ecf\u8fc7\u7684\u8282\u70b9\u4ee5\u540e\u5f62\u6210\u7684\u6709\u5411\u56fe\u5b58\u5728\u73af**\n\n\u56e0\u4e3a\u5982\u679c\u5220\u70b9\u540e\u7684$AC$\u81ea\u52a8\u673a\u6709\u73af\uff0c\u5c31\u8bf4\u660e\u5b58\u5728\u5b57\u7b26\u4e32\u80fd\u5728\u4e0d\u7ecf\u8fc7\u5220\u9664\u70b9\u7684\u524d\u63d0\u4e0b\u65e0\u9650\u5339\u914d\u4e0b\u53bb\uff0c\u4e5f\u5c31\u662f\u65e0\u9650\u957f\u3002\n\n\u4f46\u662f\u5982\u679c\u66b4\u529b\u5224\u65ad\u67d0\u4e2a\u8282\u70b9\u80fd\u5426\u8df3$fail$\u6307\u9488\u8df3\u5230\u5b58\u5728\u7ed3\u5c3e\u6807\u8bb0\u7684\u8282\u70b9\u4f1a$TLE$\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u6784\u9020$fail$\u6307\u9488\u65f6\u4e00\u8d77\u5224\u65ad\u3002\n\n\u5177\u4f53\u65b9\u6cd5\u5982\u4e0b\uff1a\n~~~cpp\nwhile(!q.empty())\n{\n\tint x=q.front();q.pop();\n\tfor(int i=0;i<2;i++)\n\t{\n\t\tint y=t[x].ch[i];\n\t\tif(y)\n\t\t{\n\t\t\tt[y].fail=t[t[x].fail].ch[i],q.push(y);\n\t\t\tif(t[t[y].fail].ed)t[y].ed=1;//\u6b64\u5904\u4e3a\u5224\u65ad\u65b9\u6cd5\n\t\t}\n\t\telse t[x].ch[i]=t[t[x].fail].ch[i];\n\t}\n}\n~~~\n\u7531\u4e8e$fail$\u6307\u9488\u7684\u6784\u5efa\u662f\u4ece\u4e0a\u800c\u4e0b\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e00\u5b9a\u4f1a\u4ece\u4e0a\u800c\u4e0b\u7684\u8bbf\u95ee\u8981\u5220\u9664\u7684\u8282\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u67e5\u770b\u8be5\u8282\u70b9\u7684$fail$\u6307\u9488\u6240\u8fde\u7684\u8282\u70b9\u662f\u5426\u88ab\u5220\u9664\uff0c\u5c31\u80fd\u77e5\u9053\u8be5\u8282\u70b9\u662f\u5426\u8981\u88ab\u5220\u9664\u3002\n\n\u8282\u70b9\u7684\u5220\u9664\u53ea\u9700\u8981\u7ed9\u8282\u70b9\u6253\u4e0a\u6807\u8bb0\uff0c\u7136\u540e\u5728\u56fe\u4e0a$dfs$\u7684\u65f6\u5019\uff0c\u4e0d\u8bbf\u95ee\u5df2\u7ecf\u6253\u8fc7\u6807\u8bb0\u7684\u8282\u70b9\u5373\u53ef\u3002\n\n\u7136\u540e\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6709\u5411\u56fe\u4e0a\u627e\u73af\u95ee\u9898\u4e86\uff0c\u8be5\u95ee\u9898\u4fbf\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n~~~cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define N 2005\n#define M 30005\nusing namespace std;\nint n,rt,tot,cnt;\nbool cir,vis[N*M/10],f[N*M/10];\nchar s[M];\nstruct AC\n{\n\tint ch[2],fail;bool ed;\n}t[N*M/10];\nvoid add()\n{\n\tif(!rt)rt=++tot;\n\tint l=strlen(s+1),p=rt;\n\tfor(int i=1;i<=l;i++)\n\t{\n\t\tp=t[p].ch[s[i]-'0']=t[p].ch[s[i]-'0']?t[p].ch[s[i]-'0']:++tot;\n\t\tif(i==l)t[p].ed=1;\n\t}\n}\nvoid build_fail()\n{\n\tqueue<int>q;\n\tfor(int i=0;i<2;i++)\n\t{\n\t\tif(t[1].ch[i])t[t[1].ch[i]].fail=1,q.push(t[1].ch[i]);\n\t\telse t[1].ch[i]=1;\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=0;i<2;i++)\n\t\t{\n\t\t\tint y=t[x].ch[i];\n\t\t\tif(y)\n\t\t\t{\n\t\t\t\tt[y].fail=t[t[x].fail].ch[i],q.push(y);\n\t\t\t\tif(t[t[y].fail].ed)t[y].ed=1;\n//\u5c06\u8fd9\u4e2a\u8282\u70b9\u8df3fail\u6307\u9488\u5f97\u5230\u7684\u6240\u6709\u8282\u70b9\u662f\u5426\u5b58\u5728\u6807\u8bb0\u96c6\u4e2d\u4f53\u73b0\u5230\u4e00\u4e2a\u8282\u70b9\u4e0a,\u6362\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u8df3fail\u6307\u9488\u80fd\u5230\u6807\u8bb0\u8282\u70b9\uff0c\u90a3\u4e48\u5b83\u4e5f\u662f\u8981\u6253\u6807\u8bb0\u7684 \n\t\t\t}\n\t\t\telse t[x].ch[i]=t[t[x].fail].ch[i];\n\t\t}\n\t}\n}\nvoid dfs(int x)//\u6a21\u4effAC\u81ea\u52a8\u673a\u7684\u5339\u914d\u8fc7\u7a0b\uff0c\u5982\u679c\u51fa\u73b0\u4e0d\u7ecf\u8fc7\u5371\u9669\u8282\u70b9\u7684\u73af\u5c31\u8bf4\u660e\u5b58\u5728\u65e0\u9650\u957f\u7684\u4ee3\u7801 \n{\n\tvis[x]=1;\n\tfor(int i=0;i<2;i++)\n\t{\n\t\tint y=t[x].ch[i];\n\t\tif(vis[y])\n\t\t{\n\t\t\tcir=1;return;\n\t\t}\n\t\tif(t[y].ed||f[y])continue;\n\t\tf[y]=1;\n\t\tdfs(y);\n\t\tif(cir)return;\n\t}\n\tvis[x]=0;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tadd();\n\t}\n\tbuild_fail();\n\tdfs(1);\n\tif(cir)puts(\"TAK\");\n\telse puts(\"NIE\");\n\treturn 0;\n}\n~~~\n\n[\u4f20\u9001\u95e82\uff08\u8c22\u7edd\u5410\u69fd\uff09](http://ybt.ssoier.cn:8088/problem_show.php?pid=1705)\n\n\u9898\u76ee\u63cf\u8ff0\uff1a\u7ed9\u5b9a$m$\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7$10$\u7684$DNA$\u5e8f\u5217\uff0c\u4e00\u4e2a$DNA$\u5e8f\u5217\u662f\u5408\u6cd5\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u4efb\u4f55\u7ed9\u5b9a\u5e8f\u5217\u90fd\u4e0d\u662f\u5b83\u7684\u5b50\u4e32\uff0c\u6c42\u5408\u6cd5\u7684\u957f\u5ea6\u4e3a$n$\u7684$DNA$\u5e8f\u5217\u4e2a\u6570\uff0c\u5bf9$100000$\u53d6\u6a21\uff0c\u4fdd\u8bc1$m\u226410,n\u22642e9$\u3002\n\n\u4e00\u5f00\u59cb\u7684\u8f6c\u5316\u548c\u4e0a\u4e00\u9053\u9898\u5b8c\u5168\u76f8\u540c\uff0c\u95ee\u9898\u5c31\u53d8\u4e3a\u4e86\u201c\u6c42\u6709\u5411\u56fe\u4e2d\u56fa\u5b9a\u8d77\u70b9\u548c\u8def\u5f84\u957f\u5ea6\u7684\u8def\u5f84\u4e2a\u6570\u201d\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8bbe\u6570\u7ec4$dp[i][j]$\u8868\u793a\u4ece\u6839\u51fa\u53d1\uff0c\u8d70\u4e86$i$\u6b65\uff0c\u6700\u7ec8\u5230\u8fbe$j$\u7684\u8def\u5f84\u6570\uff0c\u8f6c\u79fb\u663e\u7136\u3002\n\n\u4f46\u662f\u8def\u5f84\u957f\u5ea6\u6700\u5927\u662f$2e9$\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u90fd\u4e0d\u5141\u8bb8\u3002\n\n\u600e\u4e48\u6837\u624d\u80fd\u538b\u7f29\u7a7a\u95f4\uff1f\u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u500d\u589e\u3002\n\n\u6211\u4eec\u8bbe$dp[t][i][j]$\u8868\u793a\u4ece\u70b9$i$\u51fa\u53d1\uff0c\u7ecf\u8fc7$2^t$\u6761\u8fb9\uff0c\u6700\u7ec8\u8d70\u5230\u70b9$j$\u7684\u65b9\u6848\u6570\u3002\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$dp[t][i][j]=\\sum_{k=1}^{tot}dp[t-1][i][k]\\times dp[t-1][k][j]$\n\n\u5176\u4e2d$tot$\u8868\u793a$AC$\u81ea\u52a8\u673a\u7684\u603b\u8282\u70b9\u4e2a\u6570\uff0c\u4e0d\u8d85\u8fc7$m^2$\u4e2a\u3002\n\n\u8fd9\u6837\u9884\u5904\u7406\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(m^6log_2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f$O(m^4log_2n)$\uff0c\u53ef\u4ee5\u627f\u53d7\u3002\n\n\u9884\u5904\u7406\u4e4b\u540e\u5c31\u9700\u8981\u6c42\u89e3\u56fa\u5b9a\u957f\u5ea6\u7684\u8def\u5f84\u6570\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06$n$\u62c6\u6210$log_2n$\u4e2a$2$\u7684\u6b21\u5e42\u4e4b\u548c\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684\u6307\u6570\u5b58\u5165\u6570\u7ec4$a$\u4e2d\u3002\n\n\u4e0e\u6b64\u540c\u65f6\u6211\u4eec\u518d\u8bbe$dp2[i][j]$\u8868\u793a\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u7ecf\u8fc7\u4e86$\\sum_{k=1}^{i}2^{a_k}$\u6761\u8fb9\uff0c\u6700\u7ec8\u8d70\u5230$j$\u70b9\u7684\u65b9\u6848\u6570\u3002\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$dp2[t][i]=\\sum_{j=1}^{tot}dp2[t-1][j]\\times dp[a[t]][j][i]$\n\n\u663e\u7136\uff0c\u6700\u540e\u7684\u7b54\u6848\u662f$\\sum_{i=1}^{tot}dp2[a.size][i]$\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n~~~cpp\n#include<cstdio>\n#include<queue>\n#include<cmath>\n#include<cstring>\n#define N 105\n#define ll long long\nusing namespace std;\nint n,m,rt,cnt,a[N];\nll dp[35][N][N],dp2[35][N],ans;\nconst ll mod=100000;\nchar s[N];\nstruct AC\n{\n\tint fail,ch[4],ed;\n}t[N];\nint chk(char c)\n{\n\tif(c=='A')return 0;\n\telse if(c=='C')return 1;\n\telse if(c=='T')return 2;\n\telse return 3;\n}\nvoid add()\n{\n\tif(!rt)rt=++cnt;\n\tint len=strlen(s+1);\n\tfor(int i=1,nw=rt;i<=len;i++)\n\t{\n\t\tint c=chk(s[i]);\n\t\tif(!t[nw].ch[c])t[nw].ch[c]=++cnt;\n\t\tnw=t[nw].ch[c];\n\t\tif(i==len)t[nw].ed=1;\n\t}\n}\nqueue<int>q;\nvoid build()\n{\n\tfor(int i=0;i<4;i++)\n\t{\n\t\tint y=t[rt].ch[i];\n\t\tif(y)t[y].fail=rt,q.push(y);\n\t\telse t[rt].ch[i]=rt;\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<4;i++)\n\t\t{\n\t\t\tint y=t[x].ch[i];\n\t\t\tif(y)\n\t\t\t{\n\t\t\t\tt[y].fail=t[t[x].fail].ch[i],q.push(y);\n\t\t\t\tif(t[t[y].fail].ed)t[y].ed=1;\n\t\t\t}\n\t\t\telse t[x].ch[i]=t[t[x].fail].ch[i];\n\t\t}\n\t}\n}\nvoid init()\n{\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(t[i].ed)continue;\n\t\tfor(int jj=0;jj<4;jj++)\n\t\t{\n\t\t\tint j=t[i].ch[jj];\n\t\t\tif(t[j].ed)continue;\n\t\t\tdp[0][i][j]++;\n\t\t}\n\t}\n\tint K=log(n)/log(2);\n\tfor(int t=1;t<=K;t++)\n\t\tfor(int k=1;k<=cnt;k++)\n\t\t\tfor(int i=1;i<=cnt;i++)\n\t\t\t\tfor(int j=1;j<=cnt;j++)\n\t\t\t\t\tdp[t][i][j]=(dp[t][i][j]+dp[t-1][i][k]*dp[t-1][k][j]%mod)%mod;\n}\nint main()\n{\n\tscanf(\"%d %d\",&m,&n);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%s\",s+1),add();\n\tbuild(),init();\n\tint temp=n;\n\tfor(int i=0;temp;i++,temp>>=1)\n\t\tif(temp&1)a[++a[0]]=i;\n\tdp2[0][rt]=1;\n\tfor(int t=1;t<=a[0];t++)\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=cnt;j++)\n\t\t\t\tdp2[t][i]=(dp2[t][i]+dp2[t-1][j]*dp[a[t]][j][i]%mod)%mod;\n\t\t\tif(t==a[0])ans=(ans+dp2[t][i])%mod;\n\t\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n~~~\n\u66f4\u65b0\u65e5\u5fd7\uff1a\u4fee\u6539\u4e86\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff0c\u5220\u9664\u4e86\u5947\u602a\u7f51\u5740\u3002\n",
        "postTime": 1575853213,
        "uid": 110471,
        "name": "Tommy_clas",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "## [P2444 [POI2000]\u75c5\u6bd2](https://www.luogu.org/problemnew/show/P2444)\n### \u9898\u610f:\u7ed901\u6a21\u677f\u4e32,\u5224\u65ad\u662f\u5426\u5b58\u5728\u65e0\u9650\u957f01\u4e32\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u6a21\u677f\u4e32\n\n\u4e00\u773c\u770b\u8fc7\u53bb\u6ca1\u5934\u7eea,\u8fd8\u4ee5\u4e3a\u633a\u96be\n\n\u4e00\u770b\u662f\u84dd\u9898,\n\n\u90a3\u6211\u5c31\u753b\u753b\u56fe\u5427\n\n\u753b\u4e86\u53eaAC\u81ea\u52a8\u673a\n\n\u7136\u540e\u5c31\u53d1\u73b0\u53ea\u8981dfs\u4e14\u600e\u4e48\u8d70\u90fd\u4f1a\u78b0\u5230end\u65f6\u5c31\u4e0d\u5b58\u5728\u5b89\u5168\u4ee3\u7801\n\n\u90a3\u5c31\u627e\u73af\u5457\uff0c\u53ea\u8981\u8fd9\u4e2a\u73af\u4e0a\u6ca1\u6709\u75c5\u6bd2\u7684\u7ed3\u5c3e\u5c31\u53ef\u4ee5\u4e00\u76f4\u5faa\u73af\n\n\u5f00\u59cb\u60f3\u7684\u662f\u628a\u6240\u6709end\u53ca\u5176\u76f8\u5173\u8fb9\u53bb\u6389\u770b\u770b\u6709\u6ca1\u6709\u73af\n\n\u4f46\u9898\u76ee\u53ea\u6c42\u5b58\u5728\u6027\n\n\u90a3\u5c31dfs\u91cd\u590d\u5230\u8fbe\u4e00\u4e2a\u8282\u70b9\u5c31\u9000\u51fa\u6765\u561b\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N=5000000+5;\ntemplate<class T>inline void read(T &num){\n\tchar ch;\n\twhile(!isdigit(ch=getchar()));\n\tnum=ch-'0';\n\twhile(isdigit(ch=getchar()))num=num*10+ch-'0';\n}\n\nint tri[N][2],is_end[N],fail[N],vis[N],totn,n;\ninline void Insert(char s[]){\n\tint len=strlen(s),x=0;\n\tfor(int p=0;p<len;++p){\n\t\tint ch=s[p]-'0';\n\t\tif(tri[x][ch]==0)tri[x][ch]=++totn;\n\t\tx=tri[x][ch];\n\t}\n\tis_end[x]=1;\n}\n\nqueue<int> que;\ninline void Fail(){\n\tint x=0;\n\tif(tri[x][0])que.push(tri[x][0]);\n\tif(tri[x][1])que.push(tri[x][1]);\n\twhile(que.size()){\n\t\tx=que.front();que.pop();\n\t\tif(is_end[fail[x]])is_end[x]=1;\n//printf(\"fail[%d]=%d\\n\",x,fail[x]);\n\t\tif(tri[x][0])fail[tri[x][0]]=tri[fail[x]][0],que.push(tri[x][0]);\n\t\telse tri[x][0]=tri[fail[x]][0];\n\t\tif(tri[x][1])fail[tri[x][1]]=tri[fail[x]][1],que.push(tri[x][1]);\n\t\telse tri[x][1]=tri[fail[x]][1];\n\t}\n}\n\nbool dfs(int x=0){\n//printf(\"vis[%d]=%d\\n\",x,vis[x]);\n\tif(vis[x])return true;\n\tvis[x]=1;\n//printf(\"tri[x]=(%d,%d)\\n\",tri[x][0],tri[x][1]);\n//printf(\"is_end(%d,%d)\\n\",is_end[tri[x][0]],is_end[tri[x][1]]);\n\tif(!is_end[tri[x][0]])if(dfs(tri[x][0]))return true;\n\tif(!is_end[tri[x][1]])if(dfs(tri[x][1]))return true;\n\tvis[x]=0;\n\treturn false;\n}\n\nchar s[30000+5];\nint main(){\n\tread(n);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%s\",s);\n\t\tInsert(s);\n\t}\n\tFail(); \n\tprintf(\"%s\",dfs()?\"TAK\":\"NIE\");\n\treturn 0;\n}\n```",
        "postTime": 1548829254,
        "uid": 106642,
        "name": "Ajsoabk",
        "ccfLevel": 0,
        "title": "P2444 [POI2000]\u75c5\u6bd2"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\u6c42\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u4e32\uff0c\u4e0d\u5305\u542b\u7ed9\u5b9a\u7684\u6a21\u5f0f\u4e32\u3002\n### \u601d\u8def\uff1a\n\u770b\u8d77\u6765\u50cf\u662f\u5b57\u7b26\u4e32\u5339\u914d\u7684\u9898\u3002\u5f88\u5bb9\u6613\u60f3\u5230\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u4e32\u5c31\u662f\u5305\u542b\u7ed9\u5b9a\u6a21\u5f0f\u4e32\u7684\u4e32\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8981\u662f\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u4e32\u653e\u5728ac\u81ea\u52a8\u673a\u4e0a\u8dd1\u4e00\u4e0b\uff0c\u5c31\u4f1a\u641c\u5230\u662f\u5e26\u6709\u6a21\u5f0f\u4e32\u7ed3\u5c3e\u6807\u8bb0\u7684\u8282\u70b9\uff08\u66f4\u786e\u5207\u5730\u8bf4\u662f\uff1a\u5728fail\u6811\u4e0a\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u6709\u7ed3\u5c3e\u6807\u8bb0\u7684\u8282\u70b9\uff09\u3002\n\n\u90a3\u4e48\u8981\u6c42\u4e00\u4e2a\u4e0d\u5305\u542b\u6a21\u5f0f\u4e32\u7684\u65e0\u9650\u957f\u7684\u4e32\uff0c\u53ea\u8981\u5728ac\u81ea\u52a8\u673a\u4e0adfs\u4e00\u904d\uff0c\u4e0d\u8d70\u5728fail\u6811\u4e0a\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u6709\u7ed3\u5c3e\u6807\u8bb0\u7684\u8282\u70b9~~\uff08\u8fd9\u53e5\u8bdd\u6709\u70b9\u957f\uff09~~\uff0c\u5982\u679c\u4ea7\u751f\u73af\u5c31\u53ef\u4ee5\u65e0\u9650\u8d70\u4e0b\u53bb\u4e86\uff0c\u53cd\u4e4b\u5982\u679c\u6ca1\u6709\u73af\u5c31\u662fNIE\u3002\n### \u4ee3\u7801\uff1a\n\n\u51e0\u4e4e\u5c31\u662f\u4e2a\u677f\u5b50\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<queue>\n#include<cstdlib>\nusing namespace std;\nconst int N = 3e4+10;\nstruct TRIE{\n    int son[2], fail;\n    bool isend;\n}trie[N];\nint n, tot;\nstring s;\nbool vis[N];\n\nvoid Insert(string s)//TRIE\u677f\u5b50\n{\n    int len = s.size(), now = 0, val;\n    for (int i = 0; i < len; i++){\n        val = s[i]-'0';\n        if (trie[now].son[val] == 0)\n            trie[now].son[val] = ++tot;\n        now = trie[now].son[val];\n    }\n    trie[now].isend = 1;\n}\n\nvoid Build()//AC\u81ea\u52a8\u673a\u677f\u5b50\n{\n    queue<int> q;\n    for (int i = 0; i < 2; i++)\n        if (trie[0].son[i])\n            q.push(trie[0].son[i]);\n    while (!q.empty()){\n        int fa = q.front();\n        q.pop();\n        for (int i = 0; i < 2; i++){\n            int &now = trie[fa].son[i];\n            if (now){\n                trie[now].fail = trie[trie[fa].fail].son[i];\n                trie[now].isend |= trie[trie[trie[fa].fail].son[i]].isend;\n                //\u4ee5\u4e0a\u90a3\u53e5\u8bdd\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u80fd\u8d70\u67d0\u4e2a\u8282\u70b9\u7684\u6761\u4ef6\u662ffail\u6811\u4e0a\u4ed6\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6ca1\u6709\u5c3e\u6807\u8bb0\uff0c\u6240\u4ee5\u5fc5\u987b\u628afail\u7236\u4eb2\u7684\u72b6\u6001\u7ee7\u627f\u4e0b\u6765\n                q.push(now);\n            }\n            else\n                now = trie[trie[fa].fail].son[i];\n        }\n    }\n}\n\nvoid Dfs(int now)//\u666e\u901a\u7684DFS\n{\n    if (vis[now]){\n        cout << \"TAK\";\n        exit(0);\n    }\n    vis[now] = true;\n    for (int i = 0; i < 2; i++){\n        int nxt = trie[now].son[i];\n        if (trie[nxt].isend) continue;\n        Dfs(nxt);\n    }\n    vis[now] = false;\n}\n\nint main()\n{\n    cin >> n;\n    tot = 0;\n    memset(trie, 0, sizeof(trie));\n    while (n--){\n        cin >> s;\n        Insert(s);\n    }\n    Build();\n    Dfs(0);\n    cout << \"NIE\";\n    return 0;\n}\n```",
        "postTime": 1533967969,
        "uid": 27999,
        "name": "\u5c0f\u8d8a\u8d8a",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "## I $\\mathrm{AC}$\u81ea\u52a8\u673a\n\n$\\mathrm{AC}$\u81ea\u52a8\u673a\u662f\u4e00\u79cd\u591a\u6a21\u5f0f\u4e32\u5339\u914d\u7b97\u6cd5\uff0c\u672c\u840c\u65b0\u4eca\u5929\u521a\u5b66\u4e86\u5b83qwq\n\n\n\u7ea6\u5b9a\u5728\u6784\u9020$\\mathrm{AC}$\u81ea\u52a8\u673a\u7684\u8fc7\u7a0b\u4e2d\uff0c$\\mathrm{Trie}$\u6811\u4e0a\u7684\u8fb9\u548c\u7531\u4e8e$\\mathrm{AC}$\u81ea\u52a8\u673a\u4e2d\u8fd9\u4e00\u53e5\uff1a\n\n```cpp\nelse ch[x][i]=ch[fail[x]][i];\n```\n\n\u6240\u65b0\u5efa\u7684\u8fb9\u4e3a\u5b9e\u8fb9\u3002\n\n\u4e5f\u5c31\u662f$x$\u5230$ch[x][0]$\u548c$ch[x][1]$\u7684\u8fb9\u4e3a\u5b9e\u8fb9\u3002\n\n---\n\n## II \u5371\u9669\uff01\n\n\u4ec0\u4e48\u6837\u7684\u5b57\u7b26\u4e32\u662f\u6709\u75c5\u6bd2\u7684\uff1f\u5305\u542b\u4e86\u67d0\u4e2a\u6a21\u5f0f\u4e32\u7684\u6587\u672c\u4e32\u3002\n\n\u8fd9\u6837\u7684\u6587\u672c\u4e32\u4e00\u5b9a\u5728AC\u81ea\u52a8\u673a\u4e0a\u7ecf\u8fc7\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u8282\u70b9\u3002\n\n\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u8282\u70b9\u662f\u5371\u9669\u7684\u3002\n\n---\n\n## III \u89e3\u6cd5\n\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u5047\u5982\u5728AC\u81ea\u52a8\u673a\u4e0a\u6709\u4e00\u4e2a\u73af\uff0c\u6211\u5c31\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u6587\u672c\u4e32\u4e00\u76f4\u5728\u8fd9\u4e2a\u73af\u4e0a\u8dd1\uff0c\u8f6c\u554a\u8f6c\u554a\u8f6c\u3002\n\n\u5c31\u50cf\u6700\u77ed\u8def\u6709\u4e86\u8d1f\u73af\u4e00\u6837\u3002\n\n\u6240\u4ee5\uff0c\u53ea\u8981\u5728AC\u81ea\u52a8\u673a\u4e0a\uff0c\u5b58\u5728\u4e00\u4e2a\u73af\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u73af\u4e0a\u548c\u4ece\u6839\u5230\u8fd9\u4e2a\u73af\u7684\u8def\u5f84\u4e0a\uff0c\u6240\u6709\u7684\u70b9\u90fd\u4e0d\u662f\u5371\u9669\u8282\u70b9\uff0c\u5c31\u6709\u89e3\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n---\n\n## IV $\\mathrm{code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n\ntemplate <typename Tp>\nvoid read(Tp &x){\n\tx=0;char ch=1;int fh;\n\twhile(ch!='-'&&(ch<'0'||ch>'9')) ch=getchar();\n\tif(ch=='-') {\n\t\tch=getchar();fh=-1;\n\t}\n\telse fh=1;\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=fh;\n}\n\n\nint n;\nint ch[300000][2],tot;\nbool ed[300000];\nint fail[300000],root;\nstring s;\n\nint chk(char s){\n\treturn s-'0';\n}\n\nvoid insert(){\n\tint siz=s.size();int p=root;\n\tfor(int i=0;i<siz;i++){\n\t\tint d=chk(s[i]);\n\t\tif(!ch[p][d]) ch[p][d]=++tot;\n\t\tp=ch[p][d];\n\t}\n\ted[p]=1;\n}\n\nvoid pre(){\n\tqueue<int>q;\n\tfor(int i=0;i<2;i++){\n\t\tif(ch[root][i]) fail[ch[root][i]]=root,q.push(ch[root][i]);\n\t}\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=0;i<2;i++){\n\t\t\tif(ch[x][i]){\n\t\t\t\tfail[ch[x][i]]=ch[fail[x]][i],q.push(ch[x][i]);\n\t\t\t\tif(ed[ch[fail[x]][i]]) ed[ch[x][i]]=1; \n\t\t\t}\n\t\t\telse ch[x][i]=ch[fail[x]][i];\n\t\t}\n\t}\n}\n\nbitset<300000>ins;\n\nvoid dfs(int x){\n\tif(ins[x]){\n\t\tputs(\"TAK\");exit(0);\n\t}\n\tins[x]=1;\n\tfor(int i=0;i<2;i++){\n\t\tif(!ch[x][i]||ed[ch[x][i]]) continue;\n\t\tdfs(ch[x][i]);\n\t}\n\tins[x]=0;\n}\n\nint main(){\n\tread(n);\n\tfor(register int i=1;i<=n;i++){\n\t\tcin>>s;insert();\n\t}\n\tpre();dfs(root);\n\tputs(\"NIE\");\n\treturn 0;\n}\n```",
        "postTime": 1566908477,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "AC\u81ea\u52a8\u673a\n\n\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u6784\u9020\u4e00\u4e2a\u53ea\u542b0\u548c1\u7684\u5b57\u7b26\u4e32\uff0c\u4e0d\u80fd\u4e0eTrie\u5b8c\u6210\u5339\u914d\uff08\u5373\u5305\u542b\u75c5\u6bd2\u4ee3\u7801\uff09\u3002\u6211\u4eec\u91c7\u7528\u6df1\u641c\u7684\u65b9\u5f0f\uff0c\u5f80\u6784\u9020\u7684\u5b57\u7b26\u4e32\u4e2d\u6dfb0\u62161\uff0c\u5982\u679c\u53d1\u73b0\u6709\u73af\uff08\u5373\u53ef\u4ee5\u53cd\u590d\u6dfb\u52a0\u800c\u4e0d\u5339\u914d\uff09\uff0c\u5219\u5b58\u5728\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u88ab\u903c\u5230\u65e0\u6cd5\u6dfb\u52a0\uff0c\u5c31\u4e0d\u5339\u914d\u3002\n\n\n\u8fd9\u91cc\u4e3b\u8981\u8bf4\u4e00\u4e2a\u5751\u70b9\uff08\u89c1\u6ce8\u91ca\uff09\uff1a\u5982\u679cTrie\u5728\u67d0\u4f4d\u7f6eval[i]==1\uff08\u5373\u5b8c\u6210\u5339\u914d\uff09\uff0c\u90a3\u4e48\u540e\u9762\u5931\u914d\u5230i\u4f4d\u7f6e\u7684\u4f4d\u7f6eval\u5747\u4e3a1\uff0c\u5426\u5219\u4f1aWA\u4e09\u4e2a\u70b9\u3002\n\n\u5269\u4e0b\u7684\uff0c\u4ea4\u7ed9\u4ee3\u7801\u5427\u3002\u8fd9\u91ccht\u6570\u7ec4\u662f\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u907f\u514d\u91cd\u590d\u641c\u7d22\uff0cvisited\u5224\u73af\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define __ long long\nusing namespace std;\n__ n,ch[60005][3],val[60005],ht[60005],p[60005],visited[60005],len,flag;\n__ ls;\nqueue <__> q;\nchar s[30005];\nvoid pre()\n{\n    for (int i=0;i<=1;i++)\n    if (ch[0][i])q.push(ch[0][i]);\n    __ temp;\n    while (!q.empty())\n    {\n        temp=q.front();\n        q.pop();\n        for (int i=0;i<=1;i++)\n        {\n            if (ch[temp][i])\n            p[ch[temp][i]]=ch[p[temp]][i],val[ch[temp][i]]|=val[ch[p[temp]][i]],q.push(ch[temp][i]);//\u8fd9\u91cc\u5c31\u662f\u6211\u8bf4\u7684\u5751\u70b9\n            else ch[temp][i]=ch[p[temp]][i];\n        }\n    }\n}\nvoid dfs(__ x)\n{\n    if (flag)return;\n    visited[x]=1;\n    ht[x]=1;\n    for (int i=0;i<=1;i++)\n    {\n        if (ch[x][i])\n        {\n            if (visited[ch[x][i]])\n            {\n                flag=1;\n                return;\n            }\n            if (!(ht[ch[x][i]]||val[ch[x][i]]))dfs(ch[x][i]);\n        }\n        if (flag)return;\n    }\n    visited[x]=0;\n}\nint main()\n{\n    scanf(\"%lld\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",s);\n        ls=strlen(s);\n        __ u=0;\n        for (int j=0;j<ls;j++)\n        {\n            if (!ch[u][s[j]-'0'])ch[u][s[j]-'0']=++len;\n            u=ch[u][s[j]-'0'];\n        }\n        val[u]=1;\n    }\n    pre();\n    dfs(0);\n    if (flag)printf(\"TAK\\n\");\n    else printf(\"NIE\\n\");\n}\n```",
        "postTime": 1513345291,
        "uid": 33930,
        "name": "vani_prcups",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u51fa$n$\u4e2a$01$\u4e32\uff0c\u6c42\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u65e0\u9650\u957f\u7684$01$\u4e32\uff0c\u4f7f\u5f97\u8fd9$n$\u4e2a$01$\u4e32\u90fd\u4e0d\u662f\u8fd9\u4e2a\u65e0\u9650\u957f\u7684$01$\u4e32\u7684\u5b50\u4e32\u3002\n\n\u6211\u4eec\u7ed9$n$\u4e2a$01$\u4e32\u5efa\u51fa$Trie$\u56fe\uff0c\u7ed9\u6bcf\u4e2a$01$\u4e32\u7684\u7ed3\u5c3e\u8282\u70b9\u6253\u4e0a\u6807\u8bb0\uff0c\u4ee3\u8868\u8fd9\u4e2a\u70b9\u8868\u793a\u7684\u5b57\u7b26\u4e32\u4e0d\u80fd\u51fa\u73b0\u5728\u6784\u9020\u51fa\u7684\u4e32\u4e2d\u3002\u540c\u65f6\u5982\u679c\u4e00\u4e2a\u70b9\u5f97$fail$\u6307\u9488\u5e26\u6709\u6807\u8bb0\uff0c\u90a3\u4e48\u4ed6\u81ea\u5df1\u4e00\u5b9a\u4e5f\u4e0d\u80fd\u51fa\u73b0\uff0c\u6211\u4eec\u7ed9\u4ed6\u4e5f\u6253\u4e0a\u6807\u8bb0\u3002\u95ee\u9898\u5c31\u7b49\u4ef7\u4e8e\u5728$Trie$\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u73af\uff0c\u73af\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u6ca1\u6709\u6807\u8bb0\u3002\u76f4\u63a5$dfs$\u5373\u53ef\u3002\n\n\u4ee3\u7801\n```cpp\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\n#include<tr1/unordered_map>\n#define re register\n#define N 30001\n#define MAX 2001\n#define inf 1e18\n#define eps 1e-10 \nusing namespace std;\ntypedef unsigned long long ll;\ntypedef double db;\ninline void read(re ll &ret)\n{\n    ret=0;re ll pd=0;re char c=getchar();\n    while(!isdigit(c)){pd|=c=='-';c=getchar();}\n    while(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c&15);c=getchar();}\n    ret=pd?-ret:ret;\n    return;\n}\nll n,trie[N][2],tot,f[N],nxt[N];\nchar s[N];\ninline void insert()\n{\n\tre ll p=0,len=strlen(s+1);\n\tfor(re int i=1;i<=len;i++)\n\t{\n\t\tre ll c=(s[i]&15);\n\t\tif(!trie[p][c])\n\t\t\ttrie[p][c]=++tot;\n\t\tp=trie[p][c];\n\t}\n\tf[p]=true;\n\treturn;\n}\ninline void bfs()\n{\n\tqueue<ll>q;\n\tif(trie[0][0])\n\t\tq.push(trie[0][0]);\n\tif(trie[0][1])\n\t\tq.push(trie[0][1]);\n\twhile(!q.empty())\n\t{\n\t\tre ll p=q.front();\n\t\tq.pop();\n\t\tfor(re int i=0;i<2;i++)\n\t\t{\n\t\t\tif(!trie[p][i])\n\t\t\t\ttrie[p][i]=trie[nxt[p]][i];\n\t\t\telse\n\t\t\t{\n\t\t\t\tnxt[trie[p][i]]=trie[nxt[p]][i];\n\t\t\t\tf[trie[p][i]]|=f[nxt[trie[p][i]]];\n\t\t\t\tq.push(trie[p][i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\ntr1::unordered_map<ll,bool>vis,vst;\ninline void dfs(re ll deep)\n{\n\tif(f[deep])return;\n\tif(vis[deep])\n\t{\n\t\tputs(\"TAK\");\n\t\texit(0);\n\t}\n\tif(vst[deep])\n\t\treturn;\n\tvis[deep]=true;\n\tvst[deep]=true;\n\tdfs(trie[deep][0]);\n\tdfs(trie[deep][1]);\n\tvis[deep]=false;\n}\nsigned main()\n{\n\tread(n);\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tinsert();\n\t}\n\tbfs();\n\tdfs(0);\n\tputs(\"NIE\");\n\texit(0);\n}\n```\n",
        "postTime": 1583752482,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "### \u4e00\u53e5\u8bdd\u9898\u610f\n\u7ed9\u4f60\u82e5\u5e72\u6a21\u5f0f\u4e32\uff0c\u5168\u90e8\u753101\u6784\u6210\uff0c\u95ee\u662f\u5426\u80fd\u591f\u627e\u5230\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u753101\u6784\u6210\u7684\u6bcd\u4e32\uff0c\u4f7f\u5f97\u4efb\u610f\u4e00\u4e2a\u6a21\u5f0f\u4e32\u90fd\u4e0d\u662f\u8fd9\u4e2a\u6bcd\u4e32\u7684\u5b50\u4e32\u3002\n\n### Solution\n\u770b\u5230\u201c\u5b50\u4e32\u201d\u4e8c\u5b57\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u60f3\u5230\u6a21\u5f0f\u4e32\u5339\u914d\u3002\u53c8\u56e0\u4e3a\u8fd9\u91cc\u6709\u5f88\u591a\u6a21\u5f0f\u4e32\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u9053AC\u81ea\u52a8\u673a\u3002\n\nAC\u81ea\u52a8\u673a\u7684\u57fa\u672c\u64cd\u4f5c\u662f\u4ec0\u4e48\uff1f\n\n1. \u9488\u5bf9\u6240\u6709\u7684\u6a21\u5f0f\u4e32\uff0c\u5efa\u7acb\u4e00\u68f5trie\u6811\uff1b\n2. \u6c42\u51fa\u8be5trie\u6811\u6240\u6709\u8282\u70b9\u7684\u524d\u7f00\u6307\u9488\uff1b\n3. \u628a\u6bcd\u4e32\u5728trie\u6811\u4e0a\u5339\u914d\u3002\n\n\u6211\u4eec\u73b0\u5728\u8981\u8ba9\u6bcd\u4e32\u65e0\u9650\u957f\uff0c\u4f46\u662f\u4e0d\u80fd\u8ba9\u4efb\u610f\u4e00\u4e2a\u6a21\u5f0f\u4e32\u662f\u6bcd\u4e32\u7684\u5b50\u4e32\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\n\n**\u6211\u4eec\u9700\u8981\u8ba9\u6bcd\u4e32\u5728trie\u6811\u4e0a\u4e0d\u505c\u5730\u5339\u914d\u3001\u5931\u914d\uff0c\u4f46\u662f\u4e0d\u80fd\u7ecf\u8fc7\u4efb\u4f55\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u7ed3\u5c3e\u8282\u70b9\uff0c\u5982\u6b64\u5faa\u73af\u5f80\u590d\uff0c\u76f4\u5230\u6c38\u8fdc**\n\n\u56e0\u6b64\uff1a\n\n**\u6211\u4eec\u9700\u8981\u5728trie\u6811\u4e0a\u627e\u5230\u4e00\u4e2a\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u7ed3\u5c3e\u8282\u70b9\u7684\u73af**\n\n\n\u90a3\u4e48\u5982\u4f55\u627e\u8fd9\u4e2a\u73af\u5462\uff1f\n\n----\n\n\u5728\u627e\u73af\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u660e\u786e\u4e00\u4e0b\u4ec0\u4e48\u662f\u201c\u7ed3\u5c3e\u8282\u70b9\u201d\uff1a\n  \n\u5728\u5efa\u7acbtrie\u6811\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u628a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u6240\u5728\u7684\u8282\u70b9\u90fd\u6807\u8bb0\u4e00\u4e0b\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u7ed3\u5c3e\u8282\u70b9\u3002\n\n\u4f46\u8fd9\u5e76\u4e0d\u662f\u5168\u90e8\u7684\u7ed3\u5c3e\u8282\u70b9\u3002\n\n\u6839\u636e\u524d\u7f00\u6307\u9488\u7684\u5b9a\u4e49\u53ef\u77e5\uff0c\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\u5c31\u76f8\u5f53\u4e8e\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\u7684\u5931\u914d\u8282\u70b9\u3002\u6240\u4ee5\uff1a\n\n**\u4e00\u4e2a\u8282\u70b9\u662f\u7ed3\u5c3e\u8282\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u672c\u8eab\u662f\u7ed3\u5c3e\u8282\u70b9\uff0c\u6216\u8005\u5176\u5931\u914d\u8282\u70b9\u662f\u7ed3\u5c3e\u8282\u70b9\uff0c\u6216\u8005\u5931\u914d\u8282\u70b9\u7684\u5931\u914d\u8282\u70b9\u662f\u7ed3\u5c3e\u8282\u70b9\uff0c\u6216\u8005\u5931\u914d\u8282\u70b9\u7684\u5931\u914d\u8282\u70b9\u7684\u3002\u3002\u3002\u662f\u7ed3\u5c3e\u8282\u70b9\u3002**\n\n\u5728\u627e\u5b8c\u524d\u7f00\u6307\u9488\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u624b\u5199\u961f\u5217\u91cc\u9762\u7684\u6b8b\u7559\u6570\u636e\u6765\u627e\u51fa\u6240\u6709\u7ed3\u5c3e\u8282\u70b9\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n----\n\u6211\u4eec\u56de\u5230\u6b63\u9898\u3002\n\n\u5982\u4f55\u627e\u73af\uff1f\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u6bd4\u8f83\u795e\u5947\u7684\u65b9\u6cd5\uff1adfs\u7248spfa\u627e\u73af\u3002\n\n\u76f8\u6bd4\u8d77bfs\u7248spfa\uff0cdfs\u7248spfa\u5728\u627e\u73af\u65b9\u9762\u6709\u7740\u660e\u663e\u7684\u4f18\u52bf\u3002\u56e0\u4e3a\u5b83\u4e0d\u7528\u6bcf\u6b21\u90fd\u653e\u8fdb\u961f\u5217\u7684\u5c3e\u90e8\u3002\u5982\u679c\u627e\u5230\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7acb\u5373\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u5411\u5916\u62d3\u5c55\u3002\u5728\u9762\u5bf9\u968f\u673a\u6570\u636e\u65f6\uff0c\u5176\u6548\u7387\u8fdc\u80dc\u4e8ebfs\u3002~~\u5f53\u7136\u6784\u9020\u6570\u636e\u6211\u5c31\u4e0d\u6e05\u695a\u4e86~~\n\n~~(\u82e5\u4e0d\u4f1a\u5199dfs\u7248spfa\u8bf7\u81ea\u884c\u67e5\u9605\u8d44\u6599\uff09~~\n\n\u4ee3\u7801\u770b\u4e00\u4e0b\uff1a\n```cpp\nvoid spfa(int x,int h){\n    if(PC) return;//PC\u8868\u793a\u5f53\u524d\u662f\u5426\u5df2\u7ecf\u627e\u5230\u4e86\u6b63\u73af\n    vis[x]=h;//\u67d3\u8272\n    for(int i=0;i<2;i++){\n        int y=ch[x][i];//\u5b57\u5178\u6811\u4e2d\u7684\u513f\u5b50\n\tif(bo[y] || y==0) continue;\n        //bo[i]\u8868\u793ai\u662f\u5426\u662f\u7ed3\u5c3e\u8282\u70b9\n\tif(dist[y]<dist[x]+1){\n\t    dist[y]=dist[x]+1;\n\t    if(!vis[y]){\n\t        spfa(y,h);\n\t        if(PC) return;\n\t    }\n\t    else if(vis[y]==h){\n\t             PC=true;\n\t             return;\n\t         }\n        }\n   }\n   vis[x]=0;//\u56de\u6eaf\n}\n```\n\u5176\u4e2dvis\u548cdist\u7684\u521d\u59cb\u503c\u5747\u4e3a0\n\n\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48dist\u4e3a0\uff1f\u8bf7\u53c2\u9605\u300a\u4fe1\u606f\u5b66\u5965\u8d5b\u4e00\u672c\u901a \u00b7 \u63d0\u9ad8\u7bc7\u300b\u7b2c\u4e09\u7ae0\n\n----\n\n\u4ee5\u4e0b\u662f\u5168\u90e8\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define next Next//\u9632\u6b62\u4e0e\u5934\u6587\u4ef6\u91cd\u540d\nusing namespace std;\nint const maxn=3e4+5;\nint const maxz=2;\nint n,tot=1,ch[maxn][maxz],next[maxn],dist[maxn],vis[maxn],que[maxn];\nbool bo[maxn],PC;\nchar s[maxn];\ninline void insert(char *s){//\u5b57\u5178\u6811\u7684\u63d2\u5165\u64cd\u4f5c\n\tint u=1,len=strlen(s);\n\tfor(int i=0;i<len;i++){\n\t\tint c=s[i]-'0';\n\t\tif(!ch[u][c]) ch[u][c]=++tot;\n\t\tu=ch[u][c];\n\t}\n\tbo[u]=true;//\u6807\u8bb0\u8be5\u8282\u70b9\uff0c\u4e3a\u7ed3\u5c3e\u8282\u70b9\n}\ninline void bfs(){//AC\u81ea\u52a8\u673a\u57fa\u672c\u64cd\u4f5c\uff1a\u6c42\u51fa\u5b57\u5178\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u524d\u7f00\u6307\u9488\n\tnext[1]=0,que[1]=1;\n\tfor(int l=1,r=1;l<=r;l++){\n\t\tint u=que[l];\n\t\tfor(int i=0;i<2;i++){\n\t\t\tif(!ch[u][i]) ch[u][i]=ch[next[u]][i];\n\t\t\telse{\n\t\t\t\tque[++r]=ch[u][i];\n\t\t\t\tnext[ch[u][i]]=ch[next[u]][i];\n\t\t\t}\n\t\t}\n\t}\n}\nvoid spfa(int x,int h){//dfs\u7248spfa\u627e\u73af\n\tif(PC) return;\n\tvis[x]=h;\n\tfor(int i=0;i<2;i++){\n\t\tint y=ch[x][i];\n\t    if(bo[y] || y==0) continue;\n\t\tif(dist[y]<dist[x]+1){\n\t\t\tdist[y]=dist[x]+1;\n\t\t\tif(!vis[y]){\n\t\t\t    spfa(y,h);\n\t\t\t    if(PC) return;\n\t\t    }\n\t\t    else if(vis[y]==h){\n\t\t\t    PC=true;\n\t\t\t    return;\n\t\t    }\n\t\t}\n\t}\n\tvis[x]=0;\n}\nint main(){\n\tfor(int i=0;i<2;i++)\n\t  ch[0][i]=1;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s);\n\t\tinsert(s);\n\t}\n\tbfs();\n\tfor(int i=1;i<=tot;i++)\n\t  bo[que[i]]=bo[que[i]] || bo[next[que[i]]];\n    //\u5e7f\u641c\u7684\u961f\u5217\u5df2\u7ecf\u7a7a\u4e86\uff0c\u4f46\u91cc\u9762\u4ecd\u7136\u6709\u6b8b\u7559\u6570\u636e\uff0c\u8fd9\u4e2a\u6b8b\u7559\u6570\u636e\u6709\u5f88\u5927\u7528\u5904\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u68f5\u6811\u7684\u5c42\u6b21\u904d\u5386\u3002\u53ef\u4ee5\u4fdd\u8bc1\u5728\u5224\u65ad\u6211\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6211\u7684\u5931\u914d\u8282\u70b9\u5df2\u7ecf\u5224\u65ad\u8fc7\u4e86\u3002\n\tPC=false; \n\tfor(int i=1;i<=tot;i++)\n\t  if(!bo[i]){\n\t\t  spfa(i,i);\n\t\t  if(PC) break;\n\t  }//spfa\u5224\u8d1f\u73af\u7684\u57fa\u672c\u64cd\u4f5c\n\tPC?puts(\"TAK\"):puts(\"NIE\");\n\treturn 0;  \n}\n",
        "postTime": 1556584221,
        "uid": 115351,
        "name": "\u03c9\u03b1\u03b7g",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u62ff\u5230\u9898\uff0c\u53ef\u4ee5\u5f88\u6e05\u6670\u5730\u77e5\u9053\u9898\u76ee\u8981\u6c42\u6211\u4eec\u8981\u627e\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u4e32\u4f7f\u5176\u505a\u591a\u6a21\u5f0f\u4e32\u5339\u914d\u6c38\u8fdc\u4e0d\u4f1a\u5339\u914d\u6210\u529f\uff0c\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\u8981\u8ba9\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u4e32\u5728\u591a\u4e2a\u6a21\u5f0f\u4e32\u5efa\u6210\u7684AC\u81ea\u52a8\u673a\u4e0a\u6c38\u8fdc\u5230\u8fbe\u4e0d\u5230\u88ab\u6807\u8bb0\u4e3a\u6a21\u5f0f\u4e32\u672b\u5c3e\u7684\u70b9\uff0c\u7531\u4e8e\u88ab\u5339\u914d\u7684\u4e32\u662f\u65e0\u9650\u957f\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u5bb9\u6613\u60f3\u5230\u8981\u8ba9\u5339\u914d\u8fd9\u4e2a\u4e32\u65f6\u8981\u8fdb\u5165\u4e00\u4e2a\u6ca1\u6709\u4efb\u610f\u88ab\u6807\u8bb0\u70b9\u7684\u73af\u4e0a\uff0c\u5e76\u5728\u4e0a\u9762\u4e0d\u65ad\u8df3\u52a8\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u5efa\u5b8cAC\u81ea\u52a8\u673a\u540e\u8dd1\u4e2aTarjan\u4e5f\u884c\uff0cdfs\u4e5f\u884c\uff0c\u627e\u5230AC\u81ea\u52a8\u673a\u4e0a\u7684\u73af\uff0c\u82e5\u5b58\u5728\u5c31\u8bf4\u660e\u6709\u6ee1\u8db3\u8981\u6c42\u7684\u4e32\uff0c\u5426\u5219\u65e0\u3002\n\n\u4ee5\u4e0b\u4e3a\u9119\u4eba\u7684\u4ee3\u7801\uff1a\n```\n#include \"cstdio\"\n#include \"cstring\"\n#include \"algorithm\"\n#include \"queue\"\n#define MAXN 100000 + 10\n#define ll long long\n\nusing namespace std;\n\nstruct ACauto\n{\n\n\tint node[2][MAXN];\n\tint f[MAXN];\n\tbool tag1[MAXN];\n\tint tops;\n\tqueue < int > q;\n\t\n\tinline void pusht( char *s )\n\t{\n\t\tint str = strlen( s + 1 ) , k = 0 , ss;\n\t\tfor( int i = 1 ; i <= str ; i++ )\n\t\t{\n\t\t\tss = s[i] - '0';\n\t\t\tnode[ss][k] = !node[ss][k] ? ( ++tops ) : node[ss][k];\n\t\t\tk = node[ss][k];\n\t\t}\n\t\ttag1[k] = 1;\n\t\treturn ;\n\t}\n\n\tinline void getfail()\n\t{\n\t\tfor( int i = 0 ; i <= 1 ; i++ )\n\t\t\tif( node[i][0] )\n\t\t\t{\n\t\t\t\tf[ node[i][0] ] = 0;\n\t\t\t\tq.push( node[i][0] );\n\t\t\t}\n\t\twhile( !q.empty() )\n\t\t{\n\t\t\tint head = q.front(); q.pop();\n\t\t\tfor( int i = 0 ; i <= 1; i++ )\n\t\t\t\tif( node[i][head] ) { \n\t\t\t\t\tf[ node[i][head] ] = node[i][ f[head] ]; \n\t\t\t\t\tq.push( node[i][head] );\n\t\t\t\t\tif( tag1[ node[i][ f[head] ] ] ) tag1[ node[i][head] ] = 1;\n\t\t\t\t}\n\t\t\t\telse node[i][head] = node[i][ f[head] ]; \n\t\t}\n\t\treturn ;\n\t}\n\n};\n\nchar s[MAXN];\nACauto A;\nbool used1[MAXN] , used2[MAXN];\nbool flg;\n\ninline void dfs( int t )\n{\n\tused1[t] = 1;\n\tif( A.tag1[t] ) { return ; }\n\tused2[t] = 1;\n\tfor( int i = 0 ; i <= 1 ; i++ )\n\tif( !used1[ A.node[i][t] ] ) {\n\t\tdfs( A.node[i][t] ); \n\t\tif( flg ) return ;\n\t}\n\telse if( used2[ A.node[i][t] ] ) { flg = 1; return ; }\n\tused2[t] = 0;\n\treturn ;\n}\n\nint main()\n{\n\tint n;\n\tscanf( \"%d\" , &n );\n\tfor( int i = 1 ; i <= n ; i++ )\n\t{\n\t\tscanf( \"%s\" , s + 1 );\n\t\tA.pusht( s );\n\t}\n\tA.getfail();\n\tdfs( 0 );\n\tflg ? printf( \"TAK\\n\" ) : printf( \"NIE\\n\" );\n\treturn 0;\n}\n",
        "postTime": 1576913087,
        "uid": 38032,
        "name": "bluewzl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "\n\n\u9898\u610f\u5c31\u662f\u7ed9\u4f60n\u4e2a\u6a21\u5f0f\u4e32\uff0c\u95ee\u4f60\u662f\u5426\u6709\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u6587\u672c\u4e32\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u6587\u672c\u4e32\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u6a21\u5f0f\u4e32\u3002\n\n\u5e73\u5e38\u7684AC\u81ea\u52a8\u673a\u90fd\u662f\u8ba9\u4f60\u6c42\u662f\u5426\u6709\u4e00\u4e2a\u6587\u672c\u4e32\u80fd\u5339\u914d\u591a\u5c11\u6a21\u5f0f\u4e32\uff0c\u8fd9\u4e2a\u9898\u5374\u53cd\u5176\u9053\u800c\u884c\u4e4b\uff0c\u8ba9\u4f60\u6c42\u4e00\u4e2a\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u6587\u672c\u4e32\u662f\u5426\u5b58\u5728\u3002\n\n\u6211\u4eec\u7565\u52a0\u5206\u6790\u5c31\u53ef\u4ee5\u5f97\u51fa\uff0c\u53ea\u8981\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u5b57\u7b26\u4e32\u73af\uff0c\u5c31\u4e00\u5b9a\u5b58\u5728\uff0c\u53cd\u4e4b\u5c31\u4e00\u5b9a\u4e0d\u5b58\u5728\u3002\n\n\u5bf9\u4e8e\u600e\u4e48\u627e\u8fd9\u4e2a\u73af\u6211\u4eec\u5c31\u8bbe\u4e00\u4e2a\u5371\u9669\u6807\u8bb0$ e $\u3002\u8fd9\u4e2a$e$\u5c31\u662f\u5c06\u4e32\u5c3e\u4ee5\u53ca\u6240\u6709\u7206\u8df3$fail$\u503c\u6700\u7ec8\u80fd\u8df3\u5230\u4e32\u5c3e\u7684\u503c\u6253\u4e3a1.\u7136\u540e\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u505a\u65e0\u7528\u529f\u6211\u4eec\u5c31\u8bbe\u4e00\u4e2a$vis$\u8fd9\u6837\u5c31\u4e0d\u4f1a\u91cd\u590d\u627e\u4e00\u4e2a\u503c\u4e86\uff08\u76f8\u5f53\u4e8e\u4e00\u4e2a\u8bb0\u641c\uff1f\uff09\uff0c\u7136\u540e\u5982\u679c\u6211\u4eec\u627e\u5230\u4e86\u8fd9\u4e00\u6b21dfs\u8bbf\u95ee\u8fc7\u7684\u70b9\u5c31\u8bc1\u660e\u6709\u76f4\u63a5\u8f93\u51fa$ TAK $\u5c31\u884c\u4e86\u3002\u5982\u679c\u627e\u4e0d\u5230\u5c31\u8bf4\u660e\u4e00\u5b9a\u4e0d\u5b58\u5728\u5c31\u8f93\u51fa$ NIE $\u3002\n\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005;\t\t\nchar s[100005];\nint fail[maxn],trie[maxn][2];\nint n,tot;\nbool vis[maxn],inst[maxn],e[maxn];//vis \u8bb0\u641c e\u5371\u9669\u6807\u8bb0 inst \u627e\u73af\nvoid dfs(int u)\n{\n\tif(inst[u])//\u5982\u679c\u627e\u5230\u4e86\u73af\n\t{\n\t\tputs(\"TAK\");\n\t\texit(0);\n\t}\n\tif(vis[u]||e[u])//\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u4e4b\u524d\u7684\u65e0\u7528\u70b9\u6216\u5371\u9669\u8282\u70b9\u5c31\u8fd4\u56de\n\t{\n\t\treturn ;\n\t}\n\tinst[u]=vis[u]=1;\n\tdfs(trie[u][1]);\n\tdfs(trie[u][0]);\n\tinst[u]=0;//\u6ce8\u610f\u6b64\u5904\u7684\u4e0evis\u5b9a\u4e49\u4e0d\u540c\u9700\u6e050\n} \nvoid make_trie(char s[100005])\n{\n\tint now=0,len=strlen(s);\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tint next=s[i]-'0';\n\t\tif(!trie[now][next])\n\t\t{\n\t\t\ttrie[now][next]=++tot;\n\t\t}\n\t\tnow=trie[now][next];\n\t}\n\te[now]=1;//\u5c06\u4e32\u5c3e\u6253\u4e0a\u5371\u9669\u6807\u8bb0\n} \nvoid getfail()\n{\n\tqueue<int> q;\n\tfor(int i=0;i<2;i++)\n\t{\n\t\tif(trie[0][i])\n\t\t{\n\t\t\tfail[trie[0][i]]=0;\n\t\t\tq.push(trie[0][i]);\n\t\t}\n\t}\n\tint now=0;\n\twhile(!q.empty())\n\t{\n\t\tnow=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<2;i++)\n\t\t{\n\t\t\tif(trie[now][i])\n\t\t\t{\n\t\t\t\tfail[trie[now][i]]=trie[fail[now]][i];\n\t\t\t\te[trie[now][i]]|=e[fail[trie[now][i]]];\n                \t\t//\u5c06\u53ef\u80fd\u8df3\u5230\u5371\u9669\u8282\u70b9\u7684\u5730\u65b9\u6253\u4e0a\u6807\u8bb0\n\t\t\t\tq.push(trie[now][i]); \n\t\t\t\t\n\t\t\t}else\n\t\t\t{\n\t\t\t\ttrie[now][i]=trie[fail[now]][i];\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tmake_trie(s);\n\t}\n\tgetfail();\n\tdfs(0);\n\t\n\tprintf(\"NIE\");\n\treturn 0;\n}\n```",
        "postTime": 1565176716,
        "uid": 53852,
        "name": "\u5f26\u5dfb\u3053\u3053\u308d",
        "ccfLevel": 0,
        "title": "[POI2000]\u75c5\u6bd2"
    },
    {
        "content": "\u5f88\u8003\u9a8c\u5bf9$fail$\u6307\u9488\u7684\u7406\u89e3,\u5047\u8bbe\u6211\u4eec\u6784\u9020\u51fa\u4e86\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u5b89\u5168\u4ee3\u7801\uff0c\u518d\u5230$AC$\u81ea\u52a8\u673a\u4e0a\u5339\u914d\uff0c\u4ece\u539f\u70b9\u51fa\u53d1\uff0c\u5411\u4e0b\u8d70\u9047\u5230\u4e00\u4e2a\u73af\uff0c\u7136\u540e\u4e0d\u505c\u5730\u5728\u8fd9\u4e2a\u73af\u4e0a\u8df3\u8f6c(\u65e0\u6cd5\u7406\u89e3\u5c31\u624b\u73a9\u6837\u4f8b)\uff0c\u4e14\u8fd9\u4e2a\u73af\u4e0a\u6ca1\u6709\u5371\u9669\u8282\u70b9(\u5373\u75c5\u6bd2\u5355\u8bcd\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u5728$Trie$\u6811\u4e0a\u7684\u4f4d\u7f6e)\n\n\u6ce8\u610f\uff1a**\u8fd9\u4e2a\u73af\u4e0d\u5305\u62ec$fail$\u6307\u9488**,\u4f46\u662f\u5305\u62ec\u4f18\u5316\u8fb9(\u5373\u5982\u679c\u8282\u70b9$i$\u7684\u67d0\u4e2a\u5b57\u7b26\u513f\u5b50\u4e3a\u7a7a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u513f\u5b50\u5b58\u4e3a$i$\u7684$fail$\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u7684\u76f8\u540c\u5b57\u7b26\u513f\u5b50)(\u6709\u70b9\u7ed5,\u653e\u5f20\u6837\u4f8b\u6784\u6210\u7684$trie$\u56fe)\n\n![](https://i.loli.net/2019/04/06/5ca86414ee224.png)\n\n\u9ed1\u8fb9\u662f$trie$\u6811\u4e0a\u7684\u6b63\u5e38\u8fb9\uff0c\u84dd\u8fb9\u662f\u5728\u5904\u7406$AC$\u81ea\u52a8\u673a\u65f6\u8fde\u4e0a\u7684\u4f18\u5316\u8fb9\uff0c\u7ea2\u8fb9\u662f$fail$\u6307\u9488\u3002\u7070\u8272\u8282\u70b9\u5373\u5371\u9669\u8282\u70b9\n\n\u8fd9\u91cc\u7684\u73af\u53ea\u7531\u84dd\u8fb9\u548c\u9ed1\u8fb9\u6784\u6210\u7684\uff0c\u5373\u4e0d\u8003\u8651\u8d70$fail$\u6307\u9488\uff0c\n\n\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u627e\u4e00\u4e2a\u4ece\u6839\u8282\u70b9\u51fa\u53d1\u80fd\u5728\u4e0d\u7ecf\u8fc7\u5371\u9669\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\u8d70\u5230\u5230\u7684\u73af\uff0c\u4e14\u73af\u4e0a\u6ca1\u6709\u5371\u9669\u8282\u70b9\u3002\n\n\u6ce8\u610f\uff1a\u5982\u679c\u67d0\u4e2a\u70b9\u7684$fail$\u6307\u9488\u6307\u5411\u7684\u70b9\u662f\u6709\u5371\u9669\u8282\u70b9\uff0c\u90a3\u4e48\u8be5\u8282\u70b9\u4e5f\u662f\u5371\u9669\u8282\u70b9\n\n\u63a5\u4e0b\u6765$dfs$\u627e\u73af\uff0c\u627e\u5230\u5c31\u8f93\u51fa\u5c5e\u4e8e\u57fa\u7840\u56fe\u8bba\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define re register\n#define inf 0x3f3f3f3f\n#define N 1000007\nusing namespace std;\nstruct node{\n    int fail,cnt,ch[2];\n}f[N>>1];\ninline int read(){\n    int x=0,w=0;char ch=getchar();\n    while (!isdigit(ch))w|=ch=='-',ch=getchar();\n    while (isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n    return w?-x:x;\n}\nint ans,cnt,ok[N],vis[N];\nchar s[N];\nqueue<int>q;\ninline void build(char *s){\n    int len=strlen(s),now=0;\n    for (int i=0;i<len;++i){\n        int v=s[i]-'0';\n        if (!f[now].ch[v])f[now].ch[v]=++cnt;\n        now=f[now].ch[v];\n    }\n    f[now].cnt=1;\n}\ninline void build_fail(){\n    for (int i=0;i<2;++i)if (f[0].ch[i])q.push(f[0].ch[i]);\n    while (!q.empty()){\n        int u=q.front();q.pop();\n        for (int i=0;i<2;++i)\n            if (f[u].ch[i]){\n                f[f[u].ch[i]].fail=f[f[u].fail].ch[i];\n                f[f[u].ch[i]].cnt|=f[f[f[u].fail].ch[i]].cnt;\n                q.push(f[u].ch[i]);\n            }else f[u].ch[i]=f[f[u].fail].ch[i];\n    }\n}\nvoid dfs(int now){\n    if (ok[now]){puts(\"TAK\");exit(0);}\n    if (vis[now]||f[now].cnt)return;\n    vis[now]=ok[now]=1;\n    if (f[now].ch[0])dfs(f[now].ch[0]);\n    if (f[now].ch[1])dfs(f[now].ch[1]);\n    ok[now]=0;\n}\nsigned main(){\n    int n=read();\n    for (int i=1;i<=n;++i){\n        scanf(\"%s\",s);\n        build(s);\n    }\n    build_fail();\n    dfs(0);\n    puts(\"NIE\");\n    return 0;\n}\n```",
        "postTime": 1554540540,
        "uid": 54260,
        "name": "tcchyc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "###\u6d3b\u89c1\u9b3c\u4e86\u603b\n\u597d\u5427\uff0c\u8003\u5bdf\u4e86\u4e00\u4e0bAC\u81ea\u52a8\u673a\u7684\u6027\u8d28\u7279\u522b\u662f\u5bf9fail\u6307\u9488\u7684\u7406\u89e3\u3002\uff08\u82ef\u849f\u84bb\u663e\u7136\u4e0d\u7406\u89e3\uff09\n\u5148\u770b\u770b\u6837\u4f8b\u3002\n~~\uff08\u5047\u8bbe\u60a8\u73b0\u5728\u5df2\u7ecf\u4f9d\u636e\u6837\u4f8b\u753b\u597d\u4e86\u4e00\u68f5trie\u6811\uff09~~\n\u7ecf\u8fc7\u53cd\u590d\u89c2\u5bdf\n\u53d1\u73b0\u53ef\u4ee5\u8003\u8651\u641c\u4e00\u4e0b\uff08\u56e0\u4e3a\u6210\u529f\u627e\u5230\u540e\u5c31\u9000\u51fa\uff0c\u6240\u4ee5\u4e0d\u4f1a\u70b8\u00b7\u00b7\u00b7\u00b7\uff09\n\u641e\u4e00\u4e2avis\u6570\u7ec4\uff0c\u82e5\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u53c8\u9047\u5230\u4e86\u6807\u8bb0\u5904\uff0c\u5373\u53ef\u8bf4\u660e\u5faa\u73af\u4e86\uff0c\u5c31\u6210\u529f\u4e86\n\u7136\u540e\u8bb0\u5f97\u56de\u6eaf\n\u7136\u540e\u60a8\u53ef\u80fd\u4f1a\u6253\u51fa\u5982\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=300010;\nint n,c[N][2],tot=0,cnt[N];\nbool end[N];\nint fail[N];\nchar ch[30010];\ninline void insert(char *p){\n\tint now=0,len=strlen(p);\n\tfor(int i=0;i<len;++i){\n\t\tint s=p[i]-'0';\n\t\tif(!c[now][s])c[now][s]=++tot;\n\t\tnow=c[now][s];\n\t}\n\tend[now]=1;\n}\nqueue<int> q;\ninline void build(){\n\tint now=0;\n\tfor(int i=0;i<2;++i){\n\t\tif(c[now][i]) fail[c[now][i]]=now,q.push(c[now][i]);\n\t}\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=0;i<2;++i){\n\t\t\tif(c[x][i]) fail[c[x][i]]=c[fail[x]][i],q.push(c[x][i]);\n\t\t\telse c[x][i]=c[fail[x]][i];\n\t\t}\n\t}\n}\nbool vis[N];\nbool check(int now){\n\tvis[now]=1;\n\tfor(int i=0;i<2;++i){\n\t\tif(vis[c[now][i]]) return 1;\n\t\tif(!end[c[now][i]]){\n\t\t\tif(check(c[now][i])) return 1;\n\t\t} \n\t}\n\tvis[now]=0;\n\treturn 0;\n}\nint main()\n{\n//\tfreopen(\"test.in\",\"r\",stdin);\n//\tfreopen(\"test.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)scanf(\"%s\",ch),insert(ch);\n\tbuild();\n\tif(check(0)) cout<<\"TAK\";else cout<<\"NIE\"<<endl;\n}\n```\n\u7ed3\u679c\u6302\u4e8673feng\u3002\u3002\u3002\n\u7136\u800c\u53ea\u8981\u7b2c26\u884c\u52a0\u4e0a\n```cpp\nend[c[x][i]]|=end[c[fail[x]][i]]\n```\n\u5373\u53ef\u3002\u4f60\u61c2\u7684\u5440",
        "postTime": 1552475257,
        "uid": 21165,
        "name": "no_one_cm_Fe_in_hand",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "**\u89e3\u9898\u601d\u8def\uff1a**\n\n\u5f88\u663e\u7136\uff0c\u8fd9\u4e2a\u8981\u6c42\u7684\u5b89\u5168\u4ee3\u7801\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6240\u6709\u6a21\u5f0f\u4e32\u90fd\u4e0d\u662f\u5b83\u7684\u5b50\u4e32\u5c31\u884c\u4e86\u3002\n\n\u5bf9\u4e8e\u8fd9\u9898\u800c\u8a00\uff0c\u82e5\u5f53\u524d\u5b57\u7b26\u7684$fail$\u6307\u9488\u6307\u5411\u7684\u5b57\u7b26\u662f\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u7ed3\u5c3e\u5b57\u7b26\uff0c\u90a3\u4e48\u5f53\u524d\u5b57\u7b26\u6240\u5728\u7684\u4e32\u4e5f\u4e00\u5b9a\u662f\u4e00\u4e2a\u75c5\u6bd2\u4e32\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u501f\u52a9$dfs$\u53bb\u6269\u5c55\u5b89\u5168\u4e32\u4e86\u3002\n\n**Code\uff1a**\n\n```cpp\n/*Program from Luvwgyx*/\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=3e4+10;\nchar s[maxn];\nbool f[maxn],vis[maxn];\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid print(int x){\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)print(x/10);\n    putchar(x%10+'0');\n}\nvoid write(int x){print(x);puts(\"\");}\nstruct AC_automaton{\n    int tot,ed[maxn],fail[maxn],trie[maxn][2];\n    void insert(char *s){\n        int p=0,len=strlen(s);\n        for(int i=0;i<len;i++){\n            int ch=s[i]-'0';\n            if(!trie[p][ch])trie[p][ch]=++tot;\n            p=trie[p][ch];\n        }ed[p]++;\n    }\n    void make_fail(){\n        queue<int >q;\n        memset(fail,0,sizeof(fail));\n        for(int i=0;i<2;i++)if(trie[0][i])q.push(trie[0][i]);\n        while(!q.empty()){\n            int x=q.front();q.pop();\n            if(ed[fail[x]])ed[x]=1;\n            for(int i=0;i<2;i++){\n                if(trie[x][i]){\n                    fail[trie[x][i]]=trie[fail[x]][i];\n                    q.push(trie[x][i]);\n                }else trie[x][i]=trie[fail[x]][i];\n            }\n        }\n    }\n    bool query(int x){\n        f[x]=1;\n        for(int i=0;i<2;i++){\n            if(f[trie[x][i]])return 1;\n            if(vis[trie[x][i]]||ed[trie[x][i]])continue;\n            vis[trie[x][i]]=1;\n            if(query(trie[x][i]))return 1;\n        }f[x]=0;return 0;\n    }\n}AC;\nint main(){\n    int n=read();\n    for(int i=1;i<=n;i++)scanf(\"%s\",s),AC.insert(s);\n    AC.make_fail();puts(AC.query(0)?\"TAK\":\"NIE\");\n    return 0;\n}\n```",
        "postTime": 1546821690,
        "uid": 43012,
        "name": "Luvwgyx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u672c\u9898\u8981\u6c42\u6784\u9020\u4e00\u5b57\u7b26\u4e32\uff0c\u4f7f\u5f97\u5176\u65e0\u6cd5\u4e0e\u7ed9\u5b9a\u4efb\u4e00\u5b57\u7b26\u4e32\u5339\u914d\u3002\u8fd9\u6837\u6709\u5173\u591a\u5b57\u7b26\u4e32\u5339\u914d\u7684\u95ee\u9898\uff0c\u81ea\u7136\u662f\u7528 AC\u81ea\u52a8\u673a \u5904\u7406\u3002\n\n\u4f46\u8fd9\u9898\u8981\u6c42\u4e0d\u5339\u914d\uff0c\u5c31\u9700\u8981\u5728\u6240\u6709\u4e0d\u80fd\u5339\u914d\u7684\u70b9\uff08\u94fe\uff09\u4e0a\u8dd1\u3002\n\n\u2014\u2014\u54ea\u4e9b\u70b9\uff08\u94fe\uff09\u662f\u53ef\u5339\u914d\u7684\u5462\uff1f\u5c31\u9700\u8981\u770b\u5bf9AC\u81ea\u52a8\u673a\u7684\u7406\u89e3\u4e86\u3002\u849f\u84bb\uff08\u6bd4\u5982\u6211\uff09\u5c31\u60f3\u5f53\u7136\u8ba4\u4e3a\u53ea\u6709\u5efa trie \u65f6\u6807\u8bb0\u7684\u70b9\u662f\u53ef\u5339\u914d\uff08\u4e0d\u53ef\u5230\uff09\u7684\u3002\u5176\u4ed6\u51e0\u4f4d\u53d1\u9898\u89e3\u7684$dalao_{orz}^{tql}$\u90fd\u80fd\u770b\u51fa\u8fd8\u6709\u522b\u7684\u60c5\u51b5\uff1a\n\n\u7ed9\u51fa\u4e00\u7ec4\u6570\u636e\uff1a\n\n| \u8f93\u5165\u6570\u636e | \u6b63\u786e\u7b54\u6848 | \u5927\u90e8\u520673\u5206\u4ee3\u7801\u7ed9\u51fa\u7b54\u6848 |\n| :----------- | -----------: | -----------: |\n|   | NIE | TAK |\n| 4 |\n| 00 |\n| 101 |\n| 111 |\n| 10000 |\n\n\n\u8003\u8651\u5728\u6784\u5efa\u7684 trie\u56fe \u4e0a\u904d\u5386\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u76f8\u5f53\u4e8e\u589e\u52a0\u4e00\u4e2a\u5b57\u7b26\u3002\u663e\u7136\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e0d\u6b62\u4f1a\u5f71\u54cd\u5230\u5168\u4e32\uff0c\u8be5\u4e32\u7684\u6bcf\u4e2a\u540e\u7f00\u90fd\u53ef\u80fd\u662f\u5371\u9669\u7684\u3002\u6b64\u65f6\u6211\u4eec\u4e0d\u53ef\u80fd\u53bb\u68c0\u67e5\u6bcf\u4e2a\u540e\u7f00\uff0c\u4f46 fail\u94fe \u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u65b9\u4fbf\uff1a fail\u94fe \u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u90fd\u6709\u516c\u5171\u7684\u540e\u7f00\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u6807\u8bb0\u4e0d\u53ef\u5230\u8fbe\u70b9\u7684\u540e\u7ee7 fail\u94fe \u4e0a\u7684\u7ed3\u70b9\u90fd\u4e0d\u53ef\u5230\u5373\u53ef\u3002\n\n\u5269\u4e0b\u7684\u4efb\u52a1\u5c31\u662f\u627e\u73af\uff0c\u4ece\u6839\u8282\u70b9\u51fa\u53d1\u7684\u73af\u662f\u6709\u6548\u7684\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08acm\u90e8\u5206\u4e3a\u501f\u9274hzwer\uff09\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int S=1e6+6;\nconst int X=2;\n\nstruct acm{\t\t\t\t\t\t//AC\u81ea\u52a8\u673a\n\tint cnt,c[S][X],d[S],fl[S];\n\tchar s[S];\n\tint hd,tl,q[S];\n\tacm(){cnt=1;c[0][0]=c[0][1]=1;}\n\tvoid insrt(){\t\t\t\t//\u52a0\u5165\u4e32\n\t\tscanf(\"%s\",s);\n\t\tint l=strlen(s),v=1,i;\n\t\tfor(i=0;i<l;i++)\n\t\t\tif(c[v][s[i]-'0'])v=c[v][s[i]-'0'];\n\t\t\telse{++cnt;c[v][s[i]-'0']=cnt;v=cnt;}\n\t\t++d[v];\n\t}\n\tvoid bldfl(){\t\t\t\t//fail\u94fe\n\t\thd=0;tl=1;q[0]=1;\n\t\tint v,i;\n\t\twhile(hd!=tl){\n\t\t\tv=q[hd];++hd;\n\t\t\tif(d[fl[v]])d[v]=1; //fail\u94fe\u540e\u7ee7\u6807\u8bb0\n\t\t\tfor(i=0;i<X;i++)\n\t\t\t\tif(c[v][i]){fl[c[v][i]]=c[fl[v]][i];q[tl]=c[v][i];++tl;}\n\t\t\t\telse c[v][i]=c[fl[v]][i];\n\t\t}\n\t}\n\tbool dfs(int v){\t\t\t//\u627e\u73af\n\t\tif(d[v]==-1)return 1;\n\t\tif(d[v]!=0)return 0;\n\t\td[v]=-1;\t\t\t\t//\u6807\u8bb0\u5728dfs\u7cfb\u7edf\u6808\u4e2d\n\t\tif(dfs(c[v][0]))return 1;\n\t\tif(dfs(c[v][1]))return 1;\n\t\td[v]=-2;\t\t\t\t//\u627e\u8fc7\u7684\u4e14\u5df2\u77e5\u65e0\u6cd5\u627e\u5230\u7684\u70b9\u6807\u8bb0\u4e3a-2\u4ee5\u514d\u91cd\u590d\n\t\treturn 0;\n\t}\n}acm;\n\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tacm.insrt();\n\tacm.bldfl();\n\tif(acm.dfs(1))printf(\"TAK\\n\");\n\telse printf(\"NIE\\n\");\n\treturn 0;\n}\n```\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u867d\u7136\u4e0d\u662f\u5f88\u96be\uff08\u4e0e\u963f\u72f8\u76f8\u6bd4\uff09\uff0c\u4f46\u4e5f\u9700\u8981\u5bf9 AC\u81ea\u52a8\u673a \u4e00\u4e2a\u76f8\u5bf9\u900f\u5f7b\u7684\u7406\u89e3\uff0c\u5426\u5219\u96be\u4ee5\u60f3\u5230\u6216\u60f3\u7684\u4e0d\u5168\uff08\u6bd4\u5982\u6211\uff09\u3002",
        "postTime": 1546680620,
        "uid": 41425,
        "name": "wanghaoyu1008",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u9898\u76ee\uff1a[\u75c5\u6bd2](https://www.luogu.org/problemnew/solution/P2444)\n\n---\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://blog.csdn.net/rabbit_ZAR/article/details/85324664)\n\n---\n\n\u601d\u8def\uff1a\n\n\u9996\u5148\u628a\u6240\u6709\u75c5\u6bd2\u4ee3\u7801\u5efa\u6210trie\u3002\n\n\u7136\u540e\u5efa\u51fafail\u6307\u9488\uff0c\u987a\u4fbf\u5b8c\u6210AC\u81ea\u52a8\u673a\u7684\u4f18\u5316\u3002\n\n\u7136\u540e\u5206\u6790\u6837\u4f8b\u53ef\u4ee5\u83b7\u5f97\u8fd9\u6837\u4e00\u68f5trie\u56fe\u2014\u2014\n\n```cpp\n3\n01 \n11 \n00000\n```\n\n![](https://i.loli.net/2018/12/28/5c25d614ec5e8.png)\n\n\u5176\u4e2d\u9ed1\u8fb9\u662ftrie\u7684\u6b63\u5e38\u8fb9\uff0c\u7eff\u8fb9\u662f\u5728\u5904\u7406AC\u81ea\u52a8\u673a\u65f6\u8fde\u4e0a\u7684\u4f18\u5316\u8fb9\uff0c\u7ea2\u8fb9\u662ffail\u6307\u9488\u3002\n\n\u8282\u70b9\u5185\u90e8\u7684\u6570\u662f\u8282\u70b9\u6743\u503c\uff0c\u65c1\u8fb9\u7684\u662f\u8282\u70b9\u7f16\u53f7\u3002\n\n\u53ef\u4ee5\u77e5\u9053\uff0c\u4e00\u4e2a\u65e0\u9650\u7684\u6587\u672c\u4e32\uff0c\u5728AC\u81ea\u52a8\u673a\u5339\u914d\u7684\u8fc7\u7a0b\u4e2d\u4e00\u5b9a\u4f1a\u201c\u6b7b\u5faa\u73af\u201d\uff0c\u5373\u5b58\u5728\u73af\u72b6\u7684\u5339\u914d\u3002\n\n\u8fd9\u5728\u8fd9\u9897trie\u4e2d\u7684\u4f53\u73b0\u5c31\u662f\u5b58\u5728\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7684\u73af\u3002\n\n\u8981\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u73af\u662f\u7531\u7eff\u8fb9\u548c\u9ed1\u8fb9\u6784\u6210\u7684\uff0c\u5373\u4e0d\u8003\u8651\u8d70fail\u6307\u9488\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\u3002\n\n\u7531\u4e8e\u8fd9\u4e2a\u73af\u72b6\u5339\u914d\u4e0d\u5b58\u5728\u75c5\u6bd2\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u627e\u7684\u73af\u4e2d\u4e00\u5b9a\u4e0d\u5b58\u5728\u4e00\u4e2a\u75c5\u6bd2\u7684\u7ed3\u5c3e\u3002\n\n\u4e14\u8003\u8651AC\u81ea\u52a8\u673a\u6267\u884c\u7684\u8fc7\u7a0b\uff0c\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5339\u914d\u3002\n\n\n---\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define maxn 2000\n#define maxm 30000\n#define read(x) scanf(\"%d\",&x)\n\nstruct Trie {\n\tint ch[maxm+5][2];\n\tint cnt,v[maxm*2+5];\n\tint fl[maxm*2+5];\n\t\n\tvoid insert(char* x) {\n\t\tint u=0,len=strlen(x);\n\t\tfor(int i=0; i<len; i++) {\n\t\t\tint y=x[i]-'0';\n\t\t\tif(!ch[u][y]) ch[u][y]=++cnt;\n\t\t\tu=ch[u][y];\n\t\t}\n\t\tv[u]=true;\n\t}\n\n\tvoid make_fl() {\n\t\tqueue<int> que;\n\t\tif(ch[0][0]) que.push(ch[0][0]);\n\t\tif(ch[0][1]) que.push(ch[0][1]);\n\n\t\twhile(!que.empty()) {\n\t\t\tint u=que.front();\n\t\t\tque.pop();\n\t\t\tfor(int i=0; i<=1; i++)\n\t\t\t\tif(!ch[u][i]) ch[u][i]=ch[fl[u]][i];\n\t\t\t\telse {\n\t\t\t\t\tque.push(ch[u][i]);\n\t\t\t\t\tfl[ch[u][i]]=ch[fl[u]][i];\n\t\t\t\t\tif(v[fl[ch[u][i]]]) v[ch[u][i]]=true;\n\t\t\t\t}\n\t\t}\n\t}\n} ac ;\n\nint n;\n\nbool vis[maxm*2+5],use[maxm*2+5];\n\nbool dfs(int x) {\n\tvis[x]=true;\n\tfor(int i=0;i<=1;i++) {\n\t\tint y=ac.ch[x][i];\n\t\tif(!y) continue;\n\t\tif(vis[y]) return true;\n\t\tif(use[y]||ac.v[y]) continue;\n\t\tuse[y]=true;\n\t\tif(dfs(y)) return true;\n\t}\n\tvis[x]=false;\n\treturn false;\n}\n\nint main() {\n\tread(n);\n\tfor(int i=1; i<=n; i++) {\n\t\tchar x[maxn+5];\n\t\tscanf(\"%s\",x);\n\t\tac.insert(x);\n\t}\n\tac.make_fl();\n\t\n\tbool ans=dfs(0);\n\tif(ans) printf(\"TAK\");\n\telse printf(\"NIE\");\n\t\n\treturn 0;\n}\n```",
        "postTime": 1545984354,
        "uid": 13117,
        "name": "Ouaoan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    },
    {
        "content": "emmm\u2026\u2026\u6700\u8fd1\u6559\u7ec3\u8bb2\u4e86AC\u81ea\u52a8\u673a\uff0c\u5199\u7bc7\u9898\u89e3\u590d\u4e60\u4e00\u4e0b\u3002\u521a\u5b66\u4f1aAC\u81ea\u52a8\u673a\u7684\u540c\u5b66\uff0c\u5efa\u8bae\u5148\u628a\u6a21\u677f\u9898\u6253\u5b8c\u3002\n\nAC\u81ea\u52a8\u673a\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5efa\u4e00\u68f5$Trie$\u6811\uff0c\u5bf9\u4e8e\u75c5\u6bd2\u4ee3\u7801\u7684\u7ed3\u5c3e\uff0c\u628a\u5b83\u505a\u4e00\u4e2a\u6807\u8bb0\uff0c\u8fd9\u4e2a\u8282\u5c3e\u70b9\u5373\u4e3a\u5173\u952e\u70b9\u3002\u5728\u6811\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u5efa\u4e00\u4e2a\u5931\u914d\u6307\u9488$fail$\uff0c\u4ece\u6839\u8282\u70b9\u5230$fail$\u6240\u6307\u5411\u7684\u70b9\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u662f\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u67d0\u4e00\u6bb5\u540e\u7f00\u3002\n\n\u7531\u4e0a\u8ff0\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u6613\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u6cbf$fail$\u6307\u9488\u4e00\u76f4\u8ffd\u6eaf\u4e0a\u53bb\uff0c\u4f1a\u5230\u8fbe\u4e00\u4e2a\u5173\u952e\u70b9\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u4f1a\u8bbf\u95ee\u5230\u6b64\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u81f3\u5c11\u5305\u542b\u6709\u4e00\u6bb5\u7684\u75c5\u6bd2\u4ee3\u7801\u6bb5\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6211\u4eec\u8981\u5728AC\u81ea\u52a8\u673a\u4e0a\u627e\u5230\u4e00\u4e2a\u73af\uff0c\u4e14\u8fd9\u4e2a\u73af\u4e0a\u6ca1\u6709\u4e00\u4e2a\u70b9\u7684$fail$\u76f4\u63a5\u6216\u95f4\u63a5\u6307\u5411\u5173\u952e\u70b9\u3002\u90a3\u5c31\u5f88\u7b80\u5355\u5566~$DFS$\u4e00\u904d\u5c31\u597d\u5566~\n\n\u8be6\u7ec6\u5b9e\u73b0\u8fc7\u7a0b\u8bf7\u89c1\u7a0b\u5e8f\u3002\n```cpp\n#include<bits/stdc++.h>\n using namespace std;\n struct node{int fail,son[26]; bool pd;}t[30005];\n bool ans,used[30005],ins[30005];\n int n,i,cnt;\n char s[30005];\n inline int read()\n{\n\tint x=0,c; bool f=0;\n\tfor(;(c=getchar())<'0'||c>'9';f|=c=='-');\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+c-48;\n\treturn f?-x:x;\n}\n inline void build()//\u5efaTrie\u6811\n{\n\tint i,l=strlen(s),now=0;\n\tfor(i=0;i<l;i++)\n\t{\n\t\tif(!t[now].son[s[i]-'0']) t[now].son[s[i]-'0']=++cnt;\n\t\tnow=t[now].son[s[i]-'0'];\n\t}\n\tt[now].pd=true;\n}\n inline void get_fail()//\u5efa\u7acbfail\u6307\u9488\n{\n\tint i,x,u; queue<int> q;\n\tt[0].fail=0; t[0].pd=false;\n\tfor(i=0;i<2;i++) \n\t\tif(t[0].son[i]) \n\t\t{\n\t\t\tx=t[0].son[i]; t[x].fail=0; q.push(x);\n\t\t}\n\twhile(!q.empty())\n\t{\n\t\tx=q.front(); q.pop();\n\t\tfor(i=0;i<2;i++)\n\t\t\tif(t[x].son[i])\n\t\t\t{\n\t\t\t\tu=t[x].son[i]; q.push(u);\n\t\t\t\tt[u].fail=t[t[x].fail].son[i];\n\t\t\t\tt[u].pd|=t[t[u].fail].pd;\n\t\t\t}\n\t\t\telse t[x].son[i]=t[t[x].fail].son[i];\n\t}\n}\n inline void dfs(int x)//DFS\u627e\u73af\n{\n\tint i,k; ins[x]=true;\n\tfor(i=0;i<2;i++)\n\t{\n\t\tk=t[x].son[i];\n\t\tif(t[k].pd) continue;\n\t\tif(!k||ins[k]){ans=true; return;}\n\t\tif(used[k])continue;\n\t\telse {used[k]=true; dfs(k);}\n\t\tif(ans) return;\n\t}\n\tins[x]=false;\n}\n int main()\n{\n\tn=read();\n\tfor(i=1;i<=n;i++){scanf(\"%s\",s); build();}\n\tget_fail(); ans=false; dfs(0);\n\tif(ans) printf(\"TAK\");\n\telse printf(\"NIE\"); \n\treturn 0;\n}\n```",
        "postTime": 1544613490,
        "uid": 60610,
        "name": "Gavin\u00b7Olivia",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2444 \u3010[POI2000]\u75c5\u6bd2\u3011"
    }
]