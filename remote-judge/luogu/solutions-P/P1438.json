[
    {
        "content": "\u521a\u8c03\u5b8c\u8fd9\u9053\u9898\uff0c\u611f\u89c9\u5751\u8fd8\u662f\u6bd4\u8f83\u591a\u7684\uff0c\u4e8e\u662f\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n# \u6b63\u89e3\uff1a\u7ebf\u6bb5\u6811+\u5dee\u5206\n\u4e0d\u4f1a\u7684\u53ef\u4ee5\u53bb\u770b\u770b[\u7ebf\u6bb5\u6811](https://www.luogu.org/problemnew/solution/P3372)\u548c[\u5dee\u5206](https://rpdreamer.blog.luogu.org/ci-fen-and-shu-shang-ci-fen)\n\n\u533a\u95f4\u52a0\u4e0a\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u53ef\u4ee5\u7528\u5dee\u5206\u6765\u89e3\u51b3\u3002\n\n\u6bd4\u5982\uff1a\n```\n\u539f\u5e8f\u5217\uff1a0 0 0 0 0 0\n\u5dee\u5206\u5e8f\u5217\uff1a0 0 0 0 0 0\n\u7b49\u5dee\u5e8f\u5217\uff1a1 3 5 7 9\n\u52a0\u4e0a\u7b49\u5dee\u6570\u5217\u540e\u7684\u5e8f\u5217\uff1a1 3 5 7 9 0\n\u7136\u540e\u5dee\u5206\uff1a1 2 2 2 2 -9\n```\n\u6211\u4eec\u79f0\u5dee\u5206\u5e8f\u5217\u4e3a$a$\uff0c\u9996\u9879\u4e3a$s$\uff0c\u672b\u9879\u4e3a$e$\uff0c\u516c\u5dee\u4e3a$d$\uff0c\u8981\u5c06$l$~$r$\u8fd9\u6bb5\u533a\u95f4\u52a0\u4e0a\u7b49\u5dee\u5e8f\u5217\n## \u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff1a\n\n### **\u5982\u679c\u8981\u5728\u5dee\u5206\u5e8f\u5217\u4e0a\u52a0\u4e00\u4e2a\u7b49\u5dee\u5e8f\u5217\uff0c\u5219\u8981\u5728$a_{l}$\u52a0\u4e0a$s$\uff0c$a_{l+1}$~$a_r$\u52a0\u4e0a$d$\uff0c$a_{r+1}$\u526a\u53bbe\u5373\u53ef\uff01**\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u7b54\u6848\u5373\u4e3a$\\sum _{i=1}^na[i]$\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\n#define ll long long\nll data[100005];\nstruct point{\n    ll sum;\n    ll tag;\n} a[400005];\ninline int ls(int root){return root<<1;}\ninline int rs(int root){return root<<1|1;}\ninline void up(int root){a[root].sum=a[ls(root)].sum+a[rs(root)].sum;}\nvoid build(int root,int l,int r){\n    a[root].tag=0;int mid=(l+r)>>1;\n    if(l==r){a[root].sum=data[l];return;}\n    build(ls(root),l,mid);build(rs(root),mid+1,r);\n    up(root);\n}\ninline void pd(int root,int l,int r){\n    int mid=(l+r)>>1;\n    a[ls(root)].tag+=a[root].tag;\n    a[rs(root)].tag+=a[root].tag;\n    a[ls(root)].sum+=a[root].tag*(mid-l+1);\n    a[rs(root)].sum+=a[root].tag*(r-mid);\n    a[root].tag=0;\n}\nvoid add(int root,int l,int r,int ql,int qr,ll x){\n    if(ql<=l&&qr>=r){a[root].tag+=x;a[root].sum+=(r-l+1)*x;return;}\n    int mid=(l+r)>>1;\n    pd(root,l,r);\n    if(ql<=mid)add(ls(root),l,mid,ql,qr,x);\n    if(qr>mid) add(rs(root),mid+1,r,ql,qr,x);\n    up(root);\n    return;\n}\nll query(int root,int l,int r,int ql,int qr){\n    if(ql<=l&&qr>=r)\n        return a[root].sum;\n    int mid=(l+r)>>1,ret=0;\n    pd(root,l,r);\n    if(ql<=mid)ret+=query(ls(root),l,mid,ql,qr);\n    if(qr>mid)ret+=query(rs(root),mid+1,r,ql,qr);\n    return ret;\n}//\u2191\u4e0a\u9762\u5168\u662f\u7ebf\u6bb5\u6811\nint main()\n{\n    int n,m,opt,l,r,k,d,t;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        cin>>data[i];\n    for(int i=n-1;i>0;i--)\n        data[i+1]=data[i+1]-data[i];//\u5c06\u539f\u5e8f\u5217\u5dee\u5206\n    build(1,1,n);\n    for(int i=0;i<m;i++){\n        cin>>opt;\n        if(opt==1){\n            cin>>l>>r>>k>>d;\n            add(1,1,n,l,l,k);\n            add(1,1,n,l+1,r,d);\n            add(1,1,n,r+1,r+1,-(k+d*(r-l)));//\u52a0\u4e0a\u7b49\u5dee\u6570\u5217\n        }\n        else{\n            cin>>t;\n            cout<<query(1,1,n,1,t)<<endl;\n        }\n        \n    }\n    return 0;\n}\n```\n\u4ea4\u4e0a\u53bb\u4e00\u770b\uff0c$80pts$\uff0cWA\u70b91\uff0c\u70b93\n\n\u9519\u8bef\u5728\u4e8e$r+1$\u53ef\u80fd\u4f1a\u8d8a\u754c\uff0c$l+1$\u53ef\u80fd\u4f1a$>r$\n\n\u4e8e\u662f100pts\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;\n#define ll long long\nll data[100005];\nstruct point{\n    ll sum;\n    ll tag;\n} a[400005];\ninline int ls(int root){return root<<1;}\ninline int rs(int root){return root<<1|1;}\ninline void up(int root){a[root].sum=a[ls(root)].sum+a[rs(root)].sum;}\nvoid build(int root,int l,int r){\n    a[root].tag=0;int mid=(l+r)>>1;\n    if(l==r){a[root].sum=data[l];return;}\n    build(ls(root),l,mid);build(rs(root),mid+1,r);\n    up(root);\n}\ninline void pd(int root,int l,int r){\n    int mid=(l+r)>>1;\n    a[ls(root)].tag+=a[root].tag;\n    a[rs(root)].tag+=a[root].tag;\n    a[ls(root)].sum+=a[root].tag*(mid-l+1);\n    a[rs(root)].sum+=a[root].tag*(r-mid);\n    a[root].tag=0;\n}\nvoid add(int root,int l,int r,int ql,int qr,ll x){\n    if(ql<=l&&qr>=r){a[root].tag+=x;a[root].sum+=(r-l+1)*x;return;}\n    int mid=(l+r)>>1;\n    pd(root,l,r);\n    if(ql<=mid)add(ls(root),l,mid,ql,qr,x);\n    if(qr>mid) add(rs(root),mid+1,r,ql,qr,x);\n    up(root);\n    return;\n}\nll query(int root,int l,int r,int ql,int qr){\n    if(ql<=l&&qr>=r)\n        return a[root].sum;\n    int mid=(l+r)>>1,ret=0;\n    pd(root,l,r);\n    if(ql<=mid)ret+=query(ls(root),l,mid,ql,qr);\n    if(qr>mid)ret+=query(rs(root),mid+1,r,ql,qr);\n    return ret;\n}\nint main()\n{\n    int n,m,opt,l,r,k,d,t;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        cin>>data[i];\n    for(int i=n-1;i>0;i--)\n        data[i+1]=data[i+1]-data[i];\n    build(1,1,n);\n    for(int i=0;i<m;i++){\n        cin>>opt;\n        if(opt==1){\n            cin>>l>>r>>k>>d;\n            add(1,1,n,l,l,k);\n            if(l+1<=r)add(1,1,n,l+1,r,d);\n            if(r<n)add(1,1,n,r+1,r+1,-(k+d*(r-l)));//\u6ce8\u610f\u8fd9\u91cc\u52a0\u4e86\u5224\u65ad\n        }\n        else{\n            cin>>t;\n            cout<<query(1,1,n,1,t)<<endl;\n        }\n        \n    }\n    return 0;\n}\n```",
        "postTime": 1552107435,
        "uid": 55959,
        "name": "AC_Automation",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1438 \u3010\u65e0\u804a\u7684\u6570\u5217\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\u697c\u4e0b\u7684\u7ebf\u6bb5\u6811\u662f\u7ef4\u62a4\u4e86\u9996\u9879\u548c\u516c\u5dee\u4e24\u4e2a\u503c\n\n\u697c\u4e0b\u597d\u50cf\u8fdb\u884c\u4e86\u4e00\u4e9b\u590d\u6742\u7684\u8ba1\u7b97\u6765\u7ef4\u62a4\u7ebf\u6bb5\u6811\u3002\u3002\u3002\n\n\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u590d\u6742\u7684\u8ba1\u7b97\n\n\u53ea\u9700\u8981\u5199\u4e00\u4e2a\u5f88\u666e\u901a\u7684\u6ecb\u78c1\u533a\u95f4\u52a0\u6cd5\u548c\u533a\u95f4\u6c42\u548c\u7684\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u4e86\n\n1\u64cd\u4f5c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n\u5c06a[L]\u5728\u5dee\u5206\u6570\u7ec4\u4e2d\u7684\u5bf9\u5e94\u503cd[L]\u52a0\u4e0aK\n\n\u5c06a[L+1]\u81f3a[R]\u5728\u5dee\u5206\u6570\u7ec4\u4e2d\u7684\u5bf9\u5e94\u503c\u52a0\u4e0aD\n\n\u5c06a[R+1]\u5bf9\u5e94\u7684d[R+1]\u51cf\u53bbK+D\\*(R-L)\uff0c\u5373\u51cf\u53bb\u6570\u5217\u7684\u672b\u9879\n\n2\u64cd\u4f5c\u5373\u5728\u5dee\u5206\u6570\u7ec4\u4e2d\u6c42d[1]\u81f3d[P]\u7684\u548c\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <cstdlib>\nusing namespace std;\ntypedef long long ll;\nint n,m;\nstruct SGT {\n    int initval[100010];\n    ll sumv[400010];\n    ll addv[400010];\n    int left,right;\n    ll val;\n    void build(){ buildtree(1,1,n); }\n    void buildtree( int o , int L , int R ) {\n        if( L == R ) {\n            sumv[o] = addv[o] = initval[L];\n            return;\n        }\n        int M = L+(R-L)/2;\n        int lc = o<<1; int rc = lc|1;\n        buildtree(lc,L,M);\n        buildtree(rc,M+1,R);\n        addv[o] = 0; sumv[o] = sumv[lc] + sumv[rc];\n    }\n    void add( int L , int R , ll v ) {\n        left = L; right = R; val = v;\n        addtree(1,1,n);\n    }\n    void addtree( int o , int L , int R ) {\n        if( L >= left && R <= right ) {\n            addv[o] += val;\n            maintain(o,L,R);\n            return;\n        }\n        int M = L+(R-L)/2;\n        int lc = o<<1; int rc = lc|1;\n        if( left <= M ) addtree(lc,L,M);\n        if( right > M ) addtree(rc,M+1,R);\n        maintain(o,L,R);\n    }\n    void maintain( int o , int L , int R ) {\n        sumv[o] = addv[o]*(R-L+1);\n        if( L != R ) {\n            int lc = o<<1; int rc = lc|1;\n            sumv[o] += sumv[lc] + sumv[rc];\n        }\n    }\n    ll query( int L , int R ) {\n        left = L; right = R; val = 0;\n        querytree(1,1,n,0);\n        return val;\n    }\n    void querytree( int o , int L , int R , ll addval ) {\n        if( left <= L && right >= R ) {\n            val += sumv[o] + addval*(R-L+1);\n            return;\n        }\n        int M = L+(R-L)/2;\n        int lc = o<<1; int rc = lc|1;\n        if( left <= M ) querytree(lc,L,M,addval+addv[o]);\n        if( right > M ) querytree(rc,M+1,R,addval+addv[o]);\n    }\n};\nint a[100010];\nSGT sgt;\nint main() {\n    scanf( \"%d%d\" , &n , &m );\n    for( int i = 1 ; i <= n ; ++i ) {\n        scanf( \"%d\" , &a[i] );\n        sgt.initval[i] = a[i]-a[i-1];\n    }\n    sgt.build();\n    for( int i = 0 ; i < m ; ++i ) {\n        int order; scanf( \"%d\" , &order );\n        if( order == 1 ) {\n            int l,r,k,d; scanf( \"%d%d%d%d\" , &l , &r , &k , &d );\n            sgt.add(l,l,k);\n            if( l != r ) sgt.add(l+1,r,d);\n            if( r != n ) sgt.add(r+1,r+1, -k-d*(r-l) );\n        }\n        else {\n            int p; scanf( \"%d\" , &p );\n            cout << sgt.query(1,p) << endl;\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1478589164,
        "uid": 8212,
        "name": "__stdcall",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1438 \u3010\u65e0\u804a\u7684\u6570\u5217\u3011"
    },
    {
        "content": "\u5176\u4ed6\u9898\u89e3\u90fd\u662f\u7528\u5dee\u5206\u505a\u7684~~\uff08\u7136\u800c\u6211\u592a\u83dc\u4e86\u4e0d\u77e5\u9053\u600e\u4e48\u8f6c\u6210\u5dee\u5206\uff09~~\n\n\u63d0\u4f9b\u4e00\u4e2a\u6211\u81ea\u5df1\u7684\u7ef4\u62a4\u7684\u601d\u8def\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e24\u4e2a\u6807\u8bb0\uff0c\u7b2c\u4e00\u4e2a\u6807\u8bb0\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6bcf\u4e2a\u6570\u52a0\u4e0a\u6807\u8bb0\uff0c\u7b2c\u4e8c\u4e2a\u6807\u8bb0\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6bcf\u4e2a\u6570\u52a0\u4e0a**\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u91cc\u7684\u4e0b\u6807\u4e58\u4e0a\u6807\u8bb0**\n\n\u4e5f\u5c31\u662f\u8bf4\n\n**\u5f53\u6211\u4eec\u5bf9\u533a\u95f4 $[l,r]$ \u52a0\u4e0a\u4e00\u4e2a\u9996\u9879\u4e3a $k$ \u516c\u5dee\u4e3a $d$ \u7684\u7b49\u5dee\u6570\u5217\u65f6\uff0c\u6211\u4eec\u7ed9\u8fd9\u4e2a\u533a\u95f4\u52a0\u4e0a $k - d \\times l$\uff0c\u518d\u7ed9\u6bcf\u4e2a\u4f4d\u7f6e\u52a0\u4e0a \u4e0b\u6807$\\times d$**\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\u6bcf\u6b21\u533a\u95f4\u4fee\u6539\u7684\u590d\u6742\u5ea6\u662f $O(logn)$ \uff0c\u5355\u70b9\u67e5\u8be2\u590d\u6742\u5ea6\u4e5f\u662f $O(logn)$\u3002\u4e8e\u662f\u8fd9\u9898\u6211\u4eec\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u53e6\u5916\u8fd9\u9898\u53ef\u4ee5\u7528\u6807\u8bb0\u6c38\u4e45\u5316\u4f18\u5316\u4e00\u4e0b\u5e38\u6570\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define lt (o<<1)\n#define rt (o<<1|1)\n\ntypedef long long ll;\ntypedef struct node{\n    ll tag,tag2;\n}node;\n\nnode t[400010];\nll n,m,a[100010];\n\ninline ll read(){\n    ll num=0,k=1; char c=getchar();\n    while(c>'9' || c<'0') k=(c=='-')?0:k,c=getchar();\n    while(c>='0' && c<='9') num=num*10+c-'0',c=getchar();\n    return k?num:-num;\n}\n\nvoid modify(ll o,ll l,ll r,ll ql,ll qr,ll t1,ll t2){\n    if(ql<=l && qr>=r) {t[o].tag+=t1,t[o].tag2+=t2; return;}\n    ll mid=(l+r)>>1;\n    if(ql<=mid) modify(lt,l,mid,ql,qr,t1,t2);\n    if(qr>=mid+1) modify(rt,mid+1,r,ql,qr,t1,t2);\n}\n\nll query(ll o,ll l,ll r,ll q,ll t1,ll t2){\n    if(l==r) {return t1+t[o].tag+l*(t2+t[o].tag2);}\n    ll mid=(l+r)>>1;\n    if(q<=mid) return query(lt,l,mid,q,t1+t[o].tag,t2+t[o].tag2);\n    else return query(rt,mid+1,r,q,t1+t[o].tag,t2+t[o].tag2);\n}\n\nint main(){\n    n=read(); m=read();\n    for(ll i=1;i<=n;i++) a[i]=read();\n    while(m--){\n        ll opt=read();\n        if(opt==1){\n            ll l=read(),r=read(),k=read(),d=read();\n            modify(1,1,n,l,r,k-d*l,d);\n        }\n        else{\n            ll q=read();\n            printf(\"%lld\\n\",query(1,1,n,q,0,0)+a[q]);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1552103114,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1438 \u3010\u65e0\u804a\u7684\u6570\u5217\u3011"
    },
    {
        "content": "# \u524d\u8a00\n\u6628\u5929\u5237\u6389\u4e86\u8fd9\u9053\u9898\uff0c\u53d1\u73b0\u9898\u89e3\u533a\u91cc\u7684\u9898\u89e3\u90fd\u662f\u4e00\u9636\u5dee\u5206+\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff0c\u5bf9\u4e8e\u4e0d\u4f1a\u6bb5\u66f4\u65b0\u548c\u7ebf\u6bb5\u6811\u7684\u840c\u65b0\u5341\u5206\u7684\u4e0d\u53cb\u597d\uff0c\u6240\u4ee5\u6c34\u4e00\u7bc7\u57fa\u4e8e\u4e8c\u9636\u5dee\u5206\u548c\u6811\u72b6\u6570\u7ec4\u7684\u9898\u89e3\u3002\n# \u6b63\u6587\n# \u524d\u7f6e\u829d\u58eb\n\u5dee\u5206\uff1a\u5dee\u5206\u6570\u7ec4 $d_i=a_i-a_{i-1}$\n\n\u4e8c\u9636\u5dee\u5206\uff1a\u5dee\u5206\u6570\u7ec4\u4e0a\u7684\u5dee\u5206,\u4e8c\u9636\u5dee\u5206\u6570\u7ec4\u4e3a $d2$\n\n\u4e8c\u9636\u524d\u7f00\u548c\uff1a\u524d\u7f00\u548c\u6570\u7ec4\u4e0a\u7684\u524d\u7f00\u548c\n\n\u6811\u72b6\u6570\u7ec4\uff1a\u57fa\u4e8e\u524d\u7f00\u548c\u548c\u4e8c\u8fdb\u5236\u7684\u6570\u636e\u7ed3\u6784\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $a$\uff0c\u4ee5\u53ca $m$ \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u5206\u4e3a\u589e\u52a0\u64cd\u4f5c\u548c\u8be2\u95ee\u64cd\u4f5c\u3002\u589e\u52a0\u64cd\u4f5c\u8981\u6c42\u5728\u5e8f\u5217 $a$ \u4e2d\u7684\u533a\u95f4 $[l,r]$ \u4e0a\u52a0\u4e0a\u4e00\u4e2a\u9996\u9879\u4e3a $K$\uff0c\u516c\u5dee\u4e3a $D$\uff0c\u957f\u5ea6\u4e3a $r-l+1$ \u7684\u7b49\u5dee\u6570\u5217\u3002\u8be2\u95ee\u64cd\u4f5c\u6c42\u7684\u662f\u5e8f\u5217 $a$ \u7684\u7b2c $p$ \u4e2a\u5143\u7d20\u7684\u503c\u3002\n## \u4e8c\u9636\u5dee\u5206\u5206\u6790\n\u8be2\u95ee\u64cd\u4f5c\u5f88\u663e\u7136\u662f\u6c42\u4e8c\u9636\u5dee\u5206\u6570\u7ec4\u7684\u4e8c\u9636\u524d\u7f00\u548c\uff0c\u90a3\u589e\u52a0\u64cd\u4f5c\u5462\uff1f\n\n\u9996\u5148\uff0c\u589e\u52a0\u4e00\u4e2a\u9996\u9879\u4e3a $K$\uff0c\u516c\u5dee\u4e3a $D$ \u7684\u7b49\u5dee\u6570\u5217\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u589e\u52a0\u4e00\u4e2a\u9996\u9879\u4e3a $K$\uff0c\u516c\u5dee\u4e3a $0$ \u7684\u7b49\u5dee\u6570\u5217\u548c\u589e\u52a0\u4e00\u4e2a\u9996\u9879\u4e3a $0$\uff0c\u516c\u5dee\u4e3a $D$ \u7684\u7b49\u5dee\u6570\u5217\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u9996\u9879\u4e3a $K$\uff0c\u516c\u5dee\u4e3a $0$\uff08\u6574\u4f53\u589e\u52a0 $K$\uff09\n\n\u90a3\u4e48\u663e\u7136\uff0c\u53ef\u4ee5\u5f97\u5230\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b:\n\n$d_l=d_l+k$\n\n$d_{r+1}=d_{r+1}-k$\n\n\u518d\u7ee7\u7eed\u6df1\u5165\u5206\u6790\uff0c\u53ef\u4ee5\u5f97\u5230\n\n$d2_l=d2_l+k$\n\n$d2_{l+1}=d2_{l+1}-k$\n\n$d2_{r+1}=d2_{r+1}-k$\n\n$d2_{r+2}=d2_{r+2}+k$\n\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u9996\u9879\u4e3a $0$\uff0c\u516c\u5dee\u4e3a $D$\n\n\u4e00\u901a\u64cd\u4f5c\u731b\u5982\u864e\uff0c\u5f97\u5230\n\n$d_{l+1}=d_{l+1}+D$\uff0c$d_{l+2}=d_{l+2}+D$\uff0c...\uff0c$d_{l+r}=d_{l+r}+D$\n\n$d_{r+1}=d_{r+1}-(r-l) \\times D$\n\n\u7ee7\u7eed\u4e00\u901a\u64cd\u4f5c\u731b\u5982\u864e\uff0c\u6613\u5f97\uff1a\n\n$d2_{l+1}=d2_{l+1}+D$\n\n$d2_{r+1}=(r-l+1) \\times D$\n\n$d2_{r+2}=d2_{r+2}+(r-l) \\times D$\n\n\u5c06\u8fd9\u4e9b\u4e1c\u897f\u52a0\u5230\u4e00\u8d77\uff0c\u53ef\u4ee5\u5f97\u5230\uff0c\u5bf9\u4e8e\u6574\u4f53\u589e\u52a0\u4e00\u4e2a\u9996\u9879\u4e3a $K$\uff0c\u516c\u5dee\u4e3a $D$\u7684\u7b49\u5dee\u6570\u5217\n\n$d2_l=d2_l+k$\n\n$d2_{l+1}=d2_{l+1}+D-K$\n\n$d2_{r+1}=d2_{r+1}-(r-l+1) \\times D +K$\n\n$d2_{r+2}=d2_{r+2}+(r-l) \\times D +K$\n\n\u771f\u662famazing\u7684\u7ed3\u679c\u554a\uff0c\u539f\u6765\u7684\u6bb5\u66f4\u65b0\u5df2\u7ecf\u53d8\u6210\u4e86\u82e5\u5e72\u4e2a\u70b9\u66f4\u65b0\u3002\n\n\u81f3\u6b64\uff0c\u57fa\u4e8e\u4e8c\u9636\u5dee\u5206\u7684\u5206\u6790\u5df2\u7ecf\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5982\u4f55\u6c42\u4e8c\u9636\u524d\u7f00\u548c\u4e86\u3002\n## \u4e8c\u9636\u524d\u7f00\u548c\u7684\u5206\u6790\n\u6211\u4eec\u8981\u5206\u6790\u5982\u4f55\u6c42\u51fa $d2$ \u7684\u4e8c\u9636\u524d\u7f00\u548c\uff0c\u4e5f\u5c31\u662f $a$ \u6570\u7ec4\u3002\n\u6700\u66b4\u529b\u7684\u89e3\u6cd5\u662f\u5148\u6c42\u4e00\u904d\u524d\u7f00\u548c\u518d\u6c42\u4e00\u8fb9\u524d\u7f00\u548c\uff0c\u663e\u7136\u8d85\u65f6\u3002\n\n\u663e\u7136 \n\n$a_k$\n   \n$=\\sum\\limits_{j=1}^k \\sum\\limits_{i=1}^jd2_i$\n\n$=\\sum\\limits_{i=1}^k \\sum\\limits_{j=i}^kd2_i$\n\n$=\\sum\\limits_{j=1}^kd2_i \\times(k-i+1)$\n\n$=(k+1) \\times \\sum\\limits_{i=1}^kd2_i-\\sum\\limits_{i=1}^kd2_i \\times i$\n   \n\u7ecf\u8fc7\u4e00\u901a\u6570\u5b66\u53d8\u5316\u540e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u9700\u8981\u7ef4\u62a4 $d2_i$ \u7684\u524d\u7f00\u548c\u548c $d2_i\\times i$ \u7684\u524d\u7f00\u548c\u5373\u53ef\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define N 100009\nusing namespace std;\ntypedef long long ll;\nll n,m,a[N],d[N],bit1[N],bit2[N];\nll LSB(ll x){\n\treturn x&(-x);\n}\nvoid add(ll x,ll delta){\n\tll id=x;\n\twhile(x<=n){\n\t\tbit1[x]+=delta;\n\t\tbit2[x]+=delta*id;\n\t\tx+=LSB(x);\n\t}\n}\nll query(ll x){\n\tll id=x,sum=0;\n\twhile(x){\n\t\tsum+=(id+1)*bit1[x]-bit2[x];\n\t\tx-=LSB(x);\n\t}\n\treturn sum;\n}\nvoid input(){\n\tscanf(\"%lld %lld\",&n,&m);\n\tfor(ll i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t\td[i]=a[i]-a[i-1];\n\t\tadd(i,d[i]-d[i-1]);\n\t}\n}\nvoid solve(){\n\tfor(ll i=1;i<=m;i++){\n\t\tll op;\n\t\tscanf(\"%lld\",&op);\n\t\tif(op==1){\n\t\t\tll l,r,K,D;\n\t\t\tscanf(\"%lld %lld %lld %lld\",&l,&r,&K,&D);\n\t\t\tadd(l,K); add(l+1,D-K); add(r+1,-(r-l+1)*D-K); add(r+2,K+(r-l)*D);\n\t\t}else{\n\t\t\tll p;\n\t\t\tscanf(\"%lld\",&p);\n\t\t\tprintf(\"%lld\\n\",query(p));\n\t\t}\n\t}\n}\nint main(){\n\tinput();\n\tsolve();\n\treturn 0;\n}\n\n```\n## \u5173\u4e8e\u4e00\u4e9b\u522b\u7684\u4e1c\u897f\n\u770b\u8fc7\u522b\u7684\u9898\u89e3\u7684\u80af\u5b9a\u90fd\u77e5\u9053\uff0c\u7ebf\u6bb5\u6811+\u4e00\u9636\u5dee\u5206\u9700\u8981\u8fdb\u884c\u8d8a\u754c\u7279\u5224\uff0c\u5426\u5219\u4f1a WA\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6811\u72b6\u6570\u7ec4\u4e0d\u7528\u7279\u5224\u5462\uff1f\u56e0\u4e3a add \u51fd\u6570\u7684\u5faa\u73af\u6761\u4ef6\u5df2\u7ecf\u628a\u8fd9\u4e2a\u4e1c\u897f\u7ed9\u7279\u5224\u6389\u4e86\u3002\n\n# \u81f4\u8c22\n@lilong \u662f\u4ed6\u5bf9\u4e8e\u672c\u6587\u4e2d\u7684\u516c\u5f0f\u8fdb\u884c\u4e86\u65e0\u507f\u5730 $\\LaTeX$ \u6392\u7248\uff0c\u5341\u5206\u611f\u8c22\u4ed6\u7684\u5e2e\u52a9 \u3002\n# \u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1659683443,
        "uid": 288476,
        "name": "ll_dio",
        "ccfLevel": 0,
        "title": "P1438 \u65e0\u804a\u7684\u6570\u5217 \u9898\u89e3\uff08\u6539\uff09"
    },
    {
        "content": "\t\u672c\u849f\u84bb\u4e0d\u4f1a\u5dee\u5206\u6570\u7ec4\uff0c\u53ea\u597d\u6765\u4e2a\u7eaf\u7ebf\u6bb5\u6811\u3002\n\t\u5f88\u5bb9\u6613\u4fbf\u53ef\u4ee5\u60f3\u5230\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7b49\u5dee\u6570\u5217 k,k+d,k+2d... \u62c6\u5206\u6210 k,k,k... \u548c 0,d,2d... \u3002\u8fd9\u6837\u5efa\u4e24\u68f5\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u3002\n\t\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u5c31\u662fP3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1,\u76f8\u4fe1\u5927\u5bb6\u90fdAC\u4e86\u3002\n\t\u5bf9\u4e8e\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ed3\u6784\u4f53\u4e2d\u52a0\u5165\u56db\u4e2a\u53d8\u91cf\uff0c\u4ee3\u8868\u6bcf\u4e2a\u533a\u95f4\u6240\u4ee3\u8868\u7684\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879\u4e0e\u672b\u9879\u4ee5\u53ca\u5b83\u4eec\u7684\u61d2\u6807\u8bb0\u3002\n    \u533a\u95f4\u4fee\u6539\u7684\u65f6\u5019\u53ef\u4ee5\u7b97\u51fa\u589e\u52a0\u7684\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879\u4e0e\u672b\u9879\uff0c\u56e0\u4e3a\u540c\u957f\u7684\u7b49\u5dee\u6570\u5217\u52a0\u7b49\u5dee\u6570\u5217\u8fd8\u662f\u7b49\u5dee\u6570\u5217\uff0c\u6240\u4ee5\u76f4\u63a5\u52a0\u5728\u9996\u9879\u4e0e\u672b\u9879\u4ee5\u53ca\u61d2\u6807\u8bb0\u4e0a\u5373\u53ef\u3002\n    \u56de\u6eaf\u7684\u65f6\u5019\u4e00\u4e2a\u533a\u95f4\u7684\u9996\u9879\u7b49\u4e8e\u5b83\u7684\u5de6\u5b50\u533a\u95f4\u7684\u9996\u9879\uff0c\u672b\u9879\u7b49\u4e8e\u5b83\u7684\u53f3\u5b50\u533a\u95f4\u7684\u672b\u9879\u3002\n    \u4e0b\u53d1\u61d2\u6807\u8bb0\u7684\u65f6\u5019\u53ef\u4ee5\u6839\u636e\u4e00\u4e2a\u533a\u95f4\u9996\u9879\u61d2\u6807\u8bb0\uff0c\u672b\u9879\u61d2\u6807\u8bb0\u548c\u957f\u5ea6\u7b97\u51fa\u516c\u5dee\u3002\n    \u5de6\u5b50\u533a\u95f4\u7684\u9996\u9879\u53ca\u61d2\u6807\u8bb0\u8981\u52a0\u4e0a\u9996\u9879\u61d2\u6807\u8bb0\uff1b\n    \u5de6\u5b50\u533a\u95f4\u7684\u672b\u9879\u53ca\u61d2\u6807\u8bb0\u8981\u52a0\u4e0a\u9996\u9879\u61d2\u6807\u8bb0\u518d\u52a0\u4e0a\u5de6\u5b50\u533a\u95f4\u957f\u5ea6\u4e58\u516c\u5dee\uff1b\n    \u53f3\u5b50\u533a\u95f4\u7684\u9996\u9879\u53ca\u61d2\u6807\u8bb0\u8981\u52a0\u4e0a\u672b\u9879\u61d2\u6807\u8bb0\u518d\u51cf\u53bb\u53f3\u5b50\u533a\u95f4\u957f\u5ea6\u4e58\u516c\u5dee\uff1b\n    \u53f3\u5b50\u533a\u95f4\u7684\u672b\u9879\u53ca\u61d2\u6807\u8bb0\u8981\u52a0\u4e0a\u672b\u9879\u61d2\u6807\u8bb0\u3002\n    \u8be2\u95ee\u7684\u65f6\u5019\u7528\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f\u5c31\u53ef\u4ee5\u6839\u636e\u9996\u9879\u4e0e\u672b\u9879\u53ca\u957f\u5ea6\u7b97\u51fa\u7b49\u5dee\u6570\u5217\u7684\u548c\u3002\n    \n    #include<iostream>\n    #include<cstdio>\n    #define S 100005\n    #define LL long long\n    using namespace std;\n    LL n,m,a[S],t,x,y,k,d,len,dd,p,ans;\n    struct node{\n        LL l,r,mid;//\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u53ca\u4e2d\u70b9\n        LL sum,cha;//\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u7684\u548c\u4e0e\u61d2\u6807\u8bb0\n        LL lval,rval,ldet,rdet;//\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u7684\u9996\u9879\uff0c\u672b\u9879\uff0c\u9996\u9879\u61d2\u6807\u8bb0\uff0c\u672b\u9879\u61d2\u6807\u8bb0\n    }tree[4*S];\n    inline void build(LL l,LL r,LL pos){//\u5efa\u6811\n        tree[pos].l=l;\n        tree[pos].r=r;\n        tree[pos].mid=(l+r)/2;\n        if(l==r){\n            return;\n        }\n        build(l,tree[pos].mid,pos*2);\n        build(tree[pos].mid+1,r,pos*2+1); \n    }\n    inline void push(LL pos){\n        if(tree[pos].cha){\n            tree[pos*2].sum+=(tree[pos].cha*(tree[pos*2].r-tree[pos*2].l+1));\n            tree[pos*2].cha+=tree[pos].cha;\n            tree[pos*2+1].sum+=(tree[pos].cha*(tree[pos*2+1].r-tree[pos*2+1].l+1));\n            tree[pos*2+1].cha+=tree[pos].cha;\n            tree[pos].cha=0;\t\n        }\n        len=(tree[pos].r-tree[pos].l+1)/2;//\u5b50\u533a\u95f4\u957f\u5ea6\n        dd=(tree[pos].rdet-tree[pos].ldet)/(tree[pos].r-tree[pos].l);//\u516c\u5dee\n        if(tree[pos].ldet||tree[pos].rdet){\n            tree[pos*2].lval+=tree[pos].ldet;//\u5de6\u5b50\u533a\u95f4\u7684\u9996\u9879\u53ca\u61d2\u6807\u8bb0\u8981\u52a0\u4e0a\u9996\u9879\u61d2\u6807\u8bb0\uff1b\n            tree[pos*2].ldet+=tree[pos].ldet;\n            tree[pos*2].rval+=(tree[pos].ldet+(len-1+(tree[pos].r-tree[pos].l+1)%2)*dd);//\u5de6\u5b50\u533a\u95f4\u7684\u672b\u9879\u53ca\u61d2\u6807\u8bb0\u8981\u52a0\u4e0a\u9996\u9879\u61d2\u6807\u8bb0\u518d\u52a0\u4e0a\u5de6\u5b50\u533a\u95f4\u957f\u5ea6\u4e58\u516c\u5dee\n            tree[pos*2].rdet+=(tree[pos].ldet+(len-1+(tree[pos].r-tree[pos].l+1)%2)*dd);\n            tree[pos].ldet=0;\n            tree[pos*2+1].lval+=(tree[pos].rdet-(len-1)*dd);//\u53f3\u5b50\u533a\u95f4\u7684\u9996\u9879\u53ca\u61d2\u6807\u8bb0\u8981\u52a0\u4e0a\u672b\u9879\u61d2\u6807\u8bb0\u518d\u51cf\u53bb\u53f3\u5b50\u533a\u95f4\u957f\u5ea6\u4e58\u516c\u5dee\n            tree[pos*2+1].ldet+=(tree[pos].rdet-(len-1)*dd);\n            tree[pos*2+1].rval+=tree[pos].rdet;//\u53f3\u5b50\u533a\u95f4\u7684\u672b\u9879\u53ca\u61d2\u6807\u8bb0\u8981\u52a0\u4e0a\u672b\u9879\u61d2\u6807\u8bb0\u3002\n            tree[pos*2+1].rdet+=tree[pos].rdet;\t\n            tree[pos].rdet=0;\n        }\n    }\n    inline void add(LL pos){\n        if(x<=tree[pos].l&&tree[pos].r<=y){\n            tree[pos].sum+=(k*(tree[pos].r-tree[pos].l+1));\n            tree[pos].cha+=k;\n            return;\n        }\n        push(pos);\n        if(x<=tree[pos].mid){\n            add(pos*2);\n        }\n        if(tree[pos].mid+1<=y){\n            add(pos*2+1);\n        }\n        tree[pos].sum=tree[pos*2].sum+tree[pos*2+1].sum;\n    }\n    inline void addd(LL pos){\n        if(x<=tree[pos].l&&tree[pos].r<=y){\n            tree[pos].lval+=(d*(tree[pos].l-x));//\u4fee\u6539\u9996\u9879\u53ca\u61d2\u6807\u8bb0\n            tree[pos].ldet+=(d*(tree[pos].l-x));\n            tree[pos].rval+=(d*(tree[pos].r-x));//\u4fee\u6539\u672b\u9879\u53ca\u61d2\u6807\u8bb0\n            tree[pos].rdet+=(d*(tree[pos].r-x));\n            return;\n        }\n        push(pos);//\u4e0b\u53d1\u61d2\u6807\u8bb0\n        if(x<=tree[pos].mid){\n            addd(pos*2);\n        }\n        if(tree[pos].mid+1<=y){\n            addd(pos*2+1);\n        }\n        tree[pos].lval=tree[pos*2].lval;//\u9996\u9879\u7b49\u4e8e\u5b83\u7684\u5de6\u5b50\u533a\u95f4\u7684\u9996\u9879\n        tree[pos].rval=tree[pos*2+1].rval;//\u672b\u9879\u7b49\u4e8e\u5b83\u7684\u53f3\u5b50\u533a\u95f4\u7684\u672b\u9879\n    }\n    inline void ask(LL pos){\n        if(p==tree[pos].l&&tree[pos].r==p){\n            ans+=tree[pos].sum;\n            ans+=((tree[pos].lval+tree[pos].rval)*(tree[pos].r-tree[pos].l+1)/2);//\u7b49\u5dee\u6570\u5217\u6c42\u548c\n            return;\n        }\n        push(pos);//\u4e0b\u53d1\u61d2\u6807\u8bb0\n        if(p<=tree[pos].mid){\n            ask(pos*2);\n        }\n        if(tree[pos].mid+1<=p){\n            ask(pos*2+1);\n        }\n    }\n    int main(){\n        scanf(\"%lld%lld\",&n,&m);\n        for(int i=1;i<=n;i++)\n        {\n            scanf(\"%lld\",&a[i]);\n        }\n        build(1,n,1);//\u5efa\u6811\n        for(int i=1;i<=m;i++)\n        {\n            scanf(\"%lld\",&t);\n            if(t==1){\n                scanf(\"%lld%lld%lld%lld\",&x,&y,&k,&d);\n                add(1);//\u533a\u95f4\u52a0k\n                addd(1);//\u533a\u95f4\u52a0\u7b49\u5dee\u6570\u52170,d,2d...\n            }\n            else{\n                scanf(\"%lld\",&p);\n                ans=a[p];\n                ask(1);//\u8ba1\u7b97\u548c\n                printf(\"%lld\\n\",ans);\n            }\n        }\n        return 0;\n    }\n  ",
        "postTime": 1542507782,
        "uid": 54633,
        "name": "Allons\u2014y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1438 \u3010\u65e0\u804a\u7684\u6570\u5217\u3011"
    }
]