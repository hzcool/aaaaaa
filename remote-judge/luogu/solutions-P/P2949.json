[
    {
        "content": "\u8fd9\u9898\u662f\u4e00\u9053\u5e26\u53cd\u6094\u7684\u8d2a\u5fc3\uff0c\u7b2c\u4e00\u6b21\u9047\u5230\u8fd9\u79cd\u601d\u8def\u7684\u9898\u8d76\u7d27\u53d1\u4e2a\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\u9996\u5148\u601d\u8def\u5c31\u662f\u5148\u6309\u65f6\u95f4\u6392\u5e8f\uff08\u4e0d\u662f\u90a3\u4e2a1e8\u554a\uff0c\u662f\u622a\u6b62\u65e5\u671f\uff09\uff0c\u7136\u540e\u5982\u679c\u4e00\u4e2a\u5de5\u4f5c\u6709\u65f6\u95f4\u53bb\u505a\uff0c\u5c31\u5148\u505a\u4e86\u5b83\uff08\u542c\u8d77\u6765\u6709\u70b9\u602a\uff09\uff0c\u7136\u540e\u628a\u5b83\u7684\u4ef7\u503c\u538b\u5165\u4e00\u4e2a\u5c0f\u6839\u5806\u3002\u5f53\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u6ca1\u6cd5\u505a\u5374\u4ef7\u503c\u6bd4\u5f53\u524d\u5806\u9876\u9ad8\u7684\u5de5\u4f5c\u65f6\uff0c\u6211\u4eec\u5c31\u653e\u5f03\u90a3\u4e2a\u6700\u5c0f\u7684\u5de5\u4f5c\uff0c\u7528\u505a\u5b83\u7684\u65f6\u95f4\u53bb\u505a\u8fd9\u4e2a\u4ef7\u503c\u66f4\u9ad8\u7684\u5de5\u4f5c\u3002\n\n\u53e6\u5916\uff0c\u8fd9\u9898\u4f3c\u4e4e\u4e0d\u80fd\u7528\u4e00\u822c\u7684\u5355\u8c03\u961f\u5217\u505a\uff1f\uff08\u6c42\u4e0d\u6253\u8138\uff09\u56e0\u4e3a\u7ef4\u62a4\u961f\u5217\u5355\u8c03\u6027\u7684\u65f6\u5019\u8981\u5220\u53bb\u4e00\u4e9b\u5143\u7d20\uff0c\u8fd9\u6837\u5c31\u65e0\u6cd5\u652f\u6301\u9898\u76ee\u6240\u8981\u6c42\u7684\u4fee\u6539\u3002\uff08\u6216\u8005\u7528dp+\u5355\u8c03\u961f\u5217\uff1f\uff09\n\n```\n#include<queue>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node{\n\tint tim,mny;\n}w[100001];\nint n,i;\nlong long ans;\npriority_queue<int,vector<int>,greater<int> > q;\nbool cmp(node a,node b){\n\treturn a.tim<b.tim;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (i=1; i<=n; i++)\n\t\tscanf(\"%d%d\",&w[i].tim,&w[i].mny);\n\tsort(w+1,w+n+1,cmp);\n\tfor (i=1; i<=n; i++){\n\t\tif (w[i].tim<=q.size()){\n\t\t\tif (w[i].mny>q.top()){\n\t\t\t\tans-=q.top();\n\t\t\t\tq.pop(); q.push(w[i].mny);\n\t\t\t\tans+=w[i].mny;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tq.push(w[i].mny);\n\t\t\tans+=w[i].mny;\n\t\t}\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1534315070,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "\u8bfb\u5b8c\u9898\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u6bcf\u4ef6\u7269\u54c1\u4ee3\u4ef7\u76f8\u540c\uff0c\u4f46\u4ef7\u503c\u4e0d\u540c\u3002\u90a3\u4e48\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5728\u6ee1\u8db3\u9650\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u80af\u5b9a\u4f1a\u9009\u62e9\u4ef7\u503c\u5c3d\u53ef\u80fd\u5927\u7684\u7269\u54c1\u3002\n\n\u6211\u4eec\u53ef\u5426\u7528\u80cc\u5305\u6765\u5b9e\u73b0\u5462\uff0c\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u6216\u8005\u8bf4\u6211\u4e0d\u4f1aQwQ\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u6765\u770b\u770b\u8d2a\u5fc3\n\n\u7531\u4e8e\u7269\u54c1\u7684\u4ee3\u4ef7\u76f8\u540c\uff0c\u90a3\u4e48\u5f53\u7269\u54c1\u4e4b\u95f4\u51b2\u7a81\u65f6\uff0c\u6211\u4eec\u7559\u4e0b\u4ef7\u503c\u5927\u8005\uff0c\u5fc5\u5b9a\u6700\u4f18\u3002\u56e0\u4e3a\u6bcf\u4ef6\u7269\u54c1\u4ee3\u4ef7\u90fd\u662f1\uff0c\u90a3\u4e48\u4e0d\u53ef\u80fd\u51fa\u73b0\u56e0\u4e3a\u653e\u5165\u4e00\u4ef6\u7269\u54c1\uff0c\u800c\u6324\u6389\u4e86\u4e24\u4ef6\u7269\u54c1\u7684\u53ef\u80fd\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u5355\u70b9\u6bd4\u8f83\uff0c\u6ca1\u6709\u4ec0\u4e48\u6c42\u548c\u4e4b\u7c7b\u7684\n\n\u5bf9\u4e8e\u4ef7\u503c\u4e00\u4ef6\u7269\u54c1\u88ab\u653e\u5165\u7684\u8d8a\u665a\uff0c\u5f71\u54cd\u4e5f\u5c31\u8d8a\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u5c3d\u53ef\u80fd\u665a\u7684\u653e\u5165\u7269\u54c1\n\n\u6211\u4eec\u75280\u8868\u793a\u8fd9\u4e00\u79d2\u6709\u4efb\u52a1\uff0c1\u8868\u793a\u6ca1\u6709\u3002\u90a3\u4e48\u6211\u4eec\u6309\u7167\u4ef7\u503c\u6392\u5e8f\uff0c\u5bfb\u627e$1$~$d[i]$\u4e2d\u6700\u9760\u53f3\u76840\uff0c\u5c06\u4ed6\u53d8\u62101\uff0c\u7b54\u6848\u52a0\u4e0a\u5f53\u524d\u7269\u54c1\u7684\u4ef7\u503c\u5373\u53ef\n\n\u8be6\u89c1\u4ee3\u7801\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cctype>\n#define ll long long\n#define gc getchar\n#define maxn 1000005\nusing namespace std;\n\ninline ll read(){\n    ll a=0;int f=0;char p=gc();\n    while(!isdigit(p)){f|=p=='-';p=gc();}\n    while(isdigit(p)){a=(a<<3)+(a<<1)+(p^48);p=gc();}\n    return f?-a:a;\n}\n\nstruct ahaha{\n    int w,b;\n    inline bool friend operator<(const ahaha &x,const ahaha &y){\n        if(x.w!=y.w)return x.w>y.w;\n        return x.b<y.b;\n    }\n}q[maxn];\n\nint n,cnt,b[maxn];\nll ans;\nint tree[maxn];   //\u5229\u7528\u6811\u72b6\u6570\u7ec4\u4fee\u6539\u53ca\u67e5\u8be2\u524d\u7f00\u548c\n#define lowbit(x) x&-x\ninline void add(int a,int k){\n    while(k<=n){\n        tree[k]+=a;\n        k+=lowbit(k);\n    }\n}\nint query(int k){\n    int sum=0;\n    while(k){\n        sum+=tree[k];\n        k-=lowbit(k);\n    }return sum;\n}\n\ninline void solve(int i){\n    int sum=query(q[i].b);    //\u5728\u5f53\u524d\u7269\u54c1\u622a\u6b62\u65f6\u95f4\u524d\uff0c\u653e\u5165\u4e86\u591a\u5c11\u7269\u54c1\n    if(sum==b[q[i].b])return;  //\u5982\u679c\u5df2\u7ecf\u653e\u6ee1\uff0c\u5219\u8fd4\u56de\n    int l=1,r=q[i].b;\n    while(l<r){    //\u4e8c\u5206\u67e5\u627e\u6700\u9760\u53f3\u76840\n        int m=l+r>>1;\n        int ss=query(m);\n        if(sum-ss==b[r]-b[m]){\n            r=m;sum=ss;\n        }\n        else\n            l=m+1;\n    }ans+=q[i].w;add(1,l);\n}\n\nint main(){\n    n=read();\n    for(int i=1;i<=n;++i)\n        b[++cnt]=q[i].b=read(),q[i].w=read();\n    sort(b+1,b+cnt+1);cnt=unique(b+1,b+cnt+1)-b-1;\n    for(int i=1;i<=n;++i)    //\u5148\u5c06\u622a\u6b62\u65f6\u95f4\u79bb\u6563\u5316\uff0c\u6211\u4eec\u628a\u603b\u7684\u65f6\u95f4\u5206\u4e3a\u82e5\u5e72\u65f6\u95f4\u6bb5\uff0c\u6bcf\u6bb5\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u65f6\u95f4\u70b9\u4e3a\u622a\u6b62\u65f6\u95f4\n        q[i].b=lower_bound(b+1,b+cnt+1,q[i].b)-b;\n    sort(q+1,q+n+1);    //\u6309\u7167\u6743\u503c\u6392\u5e8f\n    for(int i=1;i<=n;++i)\n        solve(i);\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1540858474,
        "uid": 34530,
        "name": "\u5b50\u8c26\u3002",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\n\n\u8868\u793a\u745f\u745f\u53d1\u6296\u2026\u2026\n\n\u770b\u7740\u9898\u89e3\u592a\u51b7\u6e05\u4e86\u2026\u2026\n\n~~\u800c\u4e0a\u4e00\u7bc7\u53c8\u6709\u70b9\u70b9\u7b80\u7565~~\n\n\u4e3b\u8981\u4e5f\u662f\u4e3a\u4e86\u68b3\u7406\u68b3\u7406\u81ea\u5df1\u601d\u8def\uff0c\u5c31\u732e\u4e11\u5199\u4e00\u7bc7\u9898\u89e3\u5566~\n\n\u9996\u5148\n\n\u8fd9\u662f\u4e00\u9053\u5f88\u660e\u663e\u7684\u8d2a\u5fc3\u9898\n\n\u770b\u5230\u9898\u7684\u7b2c\u4e00\u6b65\u80af\u5b9a\u662f\u60f3\u6392\u5e8f\u622a\u6b62\u65f6\u95f4\n\n\u6b63\u5e38\u4eba\u5f53\u7136\u662f\u60f3\u4f18\u5148\u5b8c\u6210\u7d27\u6025\u7684\u5de5\u4f5c\u5566~\n\n\u5728\u7d27\u6025\u7684\u5de5\u4f5c\u91cc\u81ea\u7136\u662f\u4f18\u5148\u5b8c\u6210\u62a5\u916c\u9ad8\u7684\u5de5\u4f5c\u5566~\n\n\u5982\u679c\u4f60\u60f3\u5230\u8fd9\u6837\u8d2a\u5fc3\u7684\u8bdd\n\n\u679a\u4e3e1~n\u9879\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u5de5\u4f5c\n\n\u6bcf\u505a\u4e00\u9879\u5de5\u4f5c\u5c31day++\n\n\u7136\u540e\u7b26\u5408\u6761\u4ef6\u5c31\u505a\n\n\u5c31\u53ef\u4ee5\u62ff\u523040\u5206\n\n\u5176\u5b9e\u9519\u8bef\u7684\u539f\u56e0\u5f88\u7b80\u5355\n\n\u5230\u540e\u671f\u4e07\u4e00\u90fd\u662f\u9ad8\u62a5\u916c\u7684\u5de5\u4f5c\uff08\u4f46\u7531\u4e8e\u8d85\u65f6\u505a\u4e0d\u4e86\u4e86\uff09\n\n\u4f60\u4f1a\u4e0d\u4f1a\u540e\u6094\u524d\u671f\u505a\u4e86\u54ea\u4e9b\u4f4e\u62a5\u916c\u7684\u5de5\u4f5c\u5462\uff1f\n\n\u5c31\u50cf\u8fd9\u4e2a\u4f8b\u5b50\n\nn=4\n\n(a) 1 2\n\n(b) 1 1\n\n(c) 2 8\n\n(d) 2 5\n\n\u663e\u7136\u5982\u679c\u7b2c\u4e00\u5929\u505a\u4e86a\u6216b\u4efb\u4f55\u4e00\u4e2a\u5de5\u4f5c\n\n\u5230\u7b2c\u4e8c\u5929\u90fd\u4f1a\u540e\u6094\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u60f3\n\n\u8981\u662f\u6211\u7b2c\u4e00\u5929\u505a\u7684\u662f\u5f53\u524d\u7684\u5de5\u4f5c\u5c31\u597d\u7684\uff08\u62a5\u916c\u66f4\u9ad8\uff09\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u6539\u53d8\u8fc7\u53bb\n\n\u51cf\u53bb\u7b2c\u4e00\u5929\u7684\u5de5\u4f5c\u7684\u62a5\u916c\uff08\u4e0d\u505a\u4e86\uff09\n\n\u5728\u7b2c\u4e00\u5929\u505a\u6211\u4eec\u5f53\u524d\u7684\u5de5\u4f5c\uff08\u5f53\u524d\u8d85\u65f6\u7684\u5de5\u4f5c\uff09\n\n\u90a3\u4e48\u4f9d\u6b21\u7c7b\u63a8\n\n\u679a\u4e3e\u5230\u7b2ci\u9879\u5de5\u4f5c\u65f6\u5982\u679c\u5de5\u4f5c\u8d85\u65f6\u4e86\n\n\u90a3\u4e48\u5c31\u7a7f\u8d8a\u56de\u8fc7\u53bb\u5728\u4e4b\u524d\u505a\u8fc7\u7684\u5de5\u4f5c\u4e2d\u6311\u4e00\u4e2a\u62a5\u916c\u6700\u4f4e\u7684\n\n\u7136\u540e\u5728\u90a3\u4e00\u9879\u5de5\u4f5c\u90a3\u5929\u505a\u7b2ci\u9879\u7684\u5de5\u4f5c\uff08\u524d\u63d0\u662f\u7b2ci\u9879\u5de5\u4f5c\u62a5\u916c\u8981\u9ad8\u4e8e\u8fc7\u53bb\u6700\u4f4e\u62a5\u916c\u7684\u90a3\u5929\u7684\u5de5\u4f5c\uff0c\u4e0d\u7136\u6ca1\u6709\u6536\u76ca\uff09\n\n\u90a3\u4e48\u5982\u4f55\u5feb\u901f\u627e\u5230\u6700\u4f4e\u62a5\u916c\u7684\u90a3\u9879\u505a\u8fc7\u7684\u5de5\u4f5c\u5462\uff1f\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\u6765\u7ef4\u62a4\n\n\u4fdd\u8bc1\u961f\u9996\u4e3a\u6700\u5c0f\u7684\n\n\u7b26\u5408\u6761\u4ef6\u7684\u5c31\u5165\u961f\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<string>\n#define ll long long\n#define N 1001003\n#define inf 0x7fffffff\nusing namespace std;\nll read()\n{\n\tint flag=1;\n\tll ret=0;\n\tchar ch=getchar();\n\twhile( (ch>'9' || ch<'0') && ch!='-')\n\tch=getchar();\n\tif(ch=='-')\n\tflag=-1,ch=getchar();\n\twhile(ch>='0' && ch<='9')\n\tret=ret*10+ch-'0',ch=getchar();\n\treturn ret*flag;\n}\nstruct work\n{\n\tll d;\n\tll p;\n};\nwork a[N];\nbool cmp(work x,work y)\n{\n\tif(x.d==y.d)\n\treturn x.p>y.p;\n\treturn x.d<y.d;\n}\nll day=0;\nll d[N];\nvoid Add(ll x)\n{\n\tday++;\n\tint son=day;\n\tint father=son/2;\n\twhile(x<d[father] && father)\n\t{\n\t\td[son]=d[father];\n\t\tson=father;\n\t\tfather=son/2;\n\t}\n\td[son]=x;\n}\nll Del()//\u8f93\u51fa\u5e76\u5220\u9664\u5806\u9876\u5143\u7d20 \n{\n\tll ret=d[1];\n\tint father=1;\n\tint son=father*2;\n\tif(son+1<day && d[son+1]<d[son])\n\t{\n\t\tson++;\n\t}\n\twhile(son<day && d[son]<d[day])\n\t{\n\t\td[father]=d[son];\n\t\tfather=son;\n\t\tson=father*2;\n\t\tif(son+1<day && d[son+1]<d[son])\n\t\tson++;\n\t}\n\td[father]=d[day];\n\tday--;\n\treturn ret;\n}\nint main()\n{\n\tll n;\n\tn=read();\n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\ta[i].d=read();\n\t\ta[i].p=read();\n\t}\n\tsort(a+1,a+1+n,cmp);\n\tll money=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i].d>day)//\u7531\u4e8eday\u5b9e\u9645\u4e3a\u5f53\u524d\u961f\u5217\u957f\u5ea6\uff08\u505a\u7684\u5de5\u4f5c\u6570\uff09\uff0c\u6545\u5e94\u8be5\u5927\u4e8e \n\t\t{\n\t\t\tAdd(a[i].p);//\u4e0d\u8d85\u65f6\u76f4\u63a5\u5165\u961f \n\t\t\tmoney+=a[i].p;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(a[i].p>d[1])//\u8d85\u65f6\u5219\u4e0e\u961f\u9996\u6bd4\u8f83\u5927\u5c0f \n\t\t\t{\n\t\t\t\tAdd(a[i].p);\n\t\t\t\tmoney+=a[i].p-Del();//\u524d\u9762\u5df2\u4fdd\u8bc1\u6536\u76ca\u4e3a\u6b63 \n\t\t\t}\n\t\t}\n\t}\n\tcout<<money;\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1530450807,
        "uid": 81494,
        "name": "Ace_Heart",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "\u90fd\u662f\u5806\u4e0e\u6811\u72b6\u6570\u7ec4\uff1f\n\n\u6709\u6ca1\u6709\u8003\u8651\u8fc7\u8d2a\u5fc3\u90e8\u5206\u7ebf\u6027\u5462\uff1f\n\n\u5176\u5b9e\u4e5f\u7b97\u4e0d\u5230\u7ebf\u6027\uff0c\u56e0\u4e3a\u8fd9\u6837\u641e\u8fd8\u8981\u8003\u8651\u5929\u6570...\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(Nlog_2N + \u03b1(1e9) * N)$\n\n\u8d2a\u5fc3\u601d\u8def\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5229\u6da6\u6700\u5927\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u5c3d\u91cf\u9009\u3002\n\n\u5f88\u5feb\u80fd\u60f3\u51fa\u66b4\u529b\n\n\u8bbe$c_i$\u4ee3\u8868\u7b2c$i$\u5929\u662f\u5426\u5b89\u6392\u4e86\u5de5\u4f5c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5de5\u4f5c\uff0c\u6211\u4eec\u5c1d\u8bd5\u628a\u5b83\u653e\u5728\u5b83\u7684\u622a\u6b62\u65e5\u671f\u4e0a\uff08\u8fd9\u6837\u624d\u80fd\u8ba9\u5176\u4ed6\u7684\u5de5\u4f5c\u6709\u66f4\u591a\u7684\u7a7a\u4f4d\u5b89\u6392\uff09\u3002\n\n\u4f46\u5982\u679c\u5b83\u7684\u622a\u6b62\u65e5\u671f\u5df2\u7ecf\u653e\u7f6e\u4e86\u5462\uff1f\u90a3\u5c31\u622a\u6b62\u65e5\u671f\u524d\u4e00\u5929\uff0c\u5982\u679c\u524d\u4e00\u5929\u8fd8\u53ef\u4ee5\u5462\uff1f\u518d\u524d\u4e00\u5929...\n\n\u6240\u4ee5\u66b4\u529b\u4ee3\u7801\u5f88\u5feb\u80fd\u5199\u51fa\u6765\n\n```\n//\u6309\u7167\u83b7\u5f97\u5229\u6da6\u503c\u6392\u5e8f\n\n//\u8003\u8651\u7b2ci\u4e2a\u5de5\u4f5c\nfor(int i = 1 ; i <= n ; ++i) {\n\tint k = END(i); //\u7b2ci\u4e2a\u5de5\u4f5c\u7684\u622a\u6b62\u65e5\u671f\n    while(c[k]) --k; //\u627e\u5230\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u653e\u7f6e\u8fd9\u4e2a\u5de5\u4f5c\u7684\u5929\n\tif(k == 0) continue; //\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5929\uff0c\u90a3\u8fd9\u4e2a\u5de5\u4f5c\u5c31\u6ca1\u529e\u6cd5\u9009\u4e86\n    //\u90a3\u73b0\u5728\u5c31\u662f\u53ef\u4ee5\u9009\u4e86\n    ans += P(i) , c[k] = true;\n    //\u5f97\u5230\u8fd9\u4e2a\u70b9\u7684\u4ef7\u503c\uff0c\u5e76\u4e14\u628a\u8fd9\u4e00\u5929\u6807\u8bb0\u4e3a\u5df2\u653e\u7f6e\n}\n```\n\n\u80af\u5b9aTLE\u554a...\n\n\u770b\u5230\u90a3\u4e2a\u6700\u6162\u7684\u5faa\u73af\u4e86\u561b\n\n\n```cpp\nwhile(c[k]) --k;\n```\n\n\u62ff\u4e2a\u5e76\u67e5\u96c6\u8ba9\u8fd9\u4e2a\u5faa\u73af\u53d8\u6210\u4e00\u6b21`find`\u64cd\u4f5c\uff0c\u5404\u4f4d\u5e94\u8be5\u660e\u767d\u6211\u610f\u601d\u3002\n\n\u7136\u540e\u5c31\u53c8\u56e0\u4e3a\u5929\u6570\u6700\u5927\u5230\u4e86`1e9`\uff0c\u6240\u4ee5\u968f\u4fbf\u79bb\u6563\u5316\u4e00\u4e0b\u5c31\u8fc7\u4e86\uff0c\u4f46\u662f\u6211\u5077\u61d2\u76f4\u63a5`C++11-unordered_map`\u4e71\u641e\u4e86\uff0c\u8981\u66f4\u5feb\u53ef\u80fd\u5f97\u624b\u5199hash\u8868\u3002\n\n------------\n\n\n## Code\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<unordered_map>\n#include<unordered_set>\nusing namespace std;\nconst int MAXN=100000+5;\nstruct stu\n{\n    int e;\n    long long p;\n}a[MAXN];\nunordered_map <int , bool> c;\nunordered_map <int , int> f;\nunordered_set <int> cx;\nint n,m;\ninline bool cmp(stu a,stu b)\n{\n    return a.p>b.p;\n}\nint find(int x) {\n    if(!cx.count(x)) f[x] = x , cx.insert(x);\n    return f[x]==x ? x : f[x]=find(f[x]);\n}\nvoid merge(int x,int y)\n{\n    int t1=find(x),t2=find(y);\n    if(t1!=t2)\n        f[t1]=t2;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n;\n    for(register int i=1;i<=n;i++)\n        cin>>a[i].e>>a[i].p;\n    long long ans=0;\n    sort(a+1,a+n+1,cmp);\n    for(register int i=1;i<=n;i++)\n    {\n        int k=find(a[i].e);\n        if(k==0)    continue;\n        c[k]=true;\n        ans+=a[i].p;\n        merge(k,k-1);\n    }\n    cout<<ans;\n}\n```",
        "postTime": 1544579690,
        "uid": 55537,
        "name": "Parabola",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u601d\u60f3\uff1a\u5148\u5047\u8bbe\u6bcf\u4e00\u9879\u5de5\u4f5c\u90fd\u505a\uff0c\u5c06\u5404\u9879\u5de5\u4f5c\u6309\u622a\u6b62\u65f6\u95f4\u6392\u5e8f\u540e\u5165\u961f\uff0c\u5728\u5224\u65ad\u7b2ci\u9879\u5de5\u4f5c\u505a\u4e0e\u4e0d\u505a\u65f6\uff0c\u82e5\u5176\u622a\u81f3\u65f6\u95f4\u7b26\u5408\u6761\u4ef6\uff0c\u5219\u5c06\u5176\u4e0e\u961f\u4e2d\u62a5\u916c\u6700\u5c0f\u7684\u5143\u7d20\u6bd4\u8f83\uff0c\u82e5\u7b2ci\u9879\u5de5\u4f5c\u62a5\u916c\u8f83\u9ad8\uff0c\u5219ans+=a[i].p-q.top()\u3002\u7528\u4f18\u5148\u961f\u5217\uff08\u5c0f\u6839\u5806\uff09\u6765\u7ef4\u62a4\u961f\u9996\u5143\u7d20\u6700\u5c0f\u3002\n\n    \n    \n```cpp\n#include <queue>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nstruct yw{\nlong long d,p;\n}a[100005];\npriority_queue <yw> q;\nbool cmp(const yw&a,const yw&b)\n{\n  return a.d<b.d;\n}\nbool operator < (yw a,yw b)\n{\n     return a.p>b.p;\n}\nint main()\n{    \n    long long n,ans=0;\n    scanf(\"%lld\",&n);\n    for(int i=1;i<=n;i++) \n    scanf(\"%lld%lld\",&a[i].d,&a[i].p);\n    sort(a+1,a+1+n,cmp);  // \u6309\u7167\u622a\u6b62\u65f6\u95f4\u6392\u5e8f \n    for(int i=1;i<=n;i++)\n        if (a[i].d<=q.size())\n        {\n          if (q.top().p<a[i].p) \n            ans+=a[i].p-q.top().p,q.pop(),q.push(a[i]);//\u4fee\u6539\u961f\u4e2d\u5143\u7d20 \n        }\n        else \n        q.push(a[i]),ans+=a[i].p;\n    printf(\"%lld\",ans);\n}\n```",
        "postTime": 1500689420,
        "uid": 26951,
        "name": "witliu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "~~\u4f3c\u4e4e\u6ca1\u6709\u770b\u5230\u8ddf\u6211\u4e00\u6837\u7684\u505a\u6cd5\uff1f~~\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7269\u54c1\u6709\u4e24\u4e2a\u53c2\u6570 $(end,val)$\uff0c\u6211\u4eec\u671f\u671b\u9009\u51fa\u7684   $val$ \u548c\u5c3d\u53ef\u80fd\u5927\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u8d2a\u5fc3\u90fd\u662f\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u8003\u8651**\u53cd\u7740\u505a**\u3002\n\n### Hint\n\n\u8bbe\u6700\u5927\u7684 $end$ \u4e3a $R$ ,\u6b21\u5927\u7684\u4e3a $R'$\u3002\u6240\u6709 $end = R$ \u7684\u7269\u54c1\uff0c\u80fd\u5728\u65f6\u95f4 $(0,R]$ \u5904\u88ab\u9009\u3002\u6240\u6709 $end = R'$ \u7684\u7269\u54c1\u80fd\u5728\u65f6\u95f4 $(0.R']$ \u5904\u88ab\u9009\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n### \u7b97\u6cd5\u6d41\u7a0b\n\n\u5f97\u5230\u8fd9\u4e2a\u4e8b\u5b9e\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u521d\u59cb\u4e3a\u7a7a\uff0c\u6211\u4eec\u6309\u7167\u65f6\u95f4 $t$ **\u4ece\u5927\u5230\u5c0f\u626b\u5230** $1$\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $t$ \uff0c\u5982\u679c\u5b58\u5728 $end=t$ \u7684\u5c31\u5148\u628a\uff0c\u6240\u6709\u7684 $end = t$ \u7684 $val$ \u653e\u5165\u5806\u3002\u7136\u540e\u6bcf\u4e00\u79d2\u90fd\u53d6\u8d70\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u8fd9\u4e48\u505a\uff0c\u590d\u6742\u5ea6\u662f\u8ddf $\\max\\{end\\}$ \u6709\u5173\u7684\uff0c\u6211\u4eec\u53d1\u73b0\u4e2d\u95f4\u6709\u5927\u6bb5\u7684\u65f6\u95f4\u90fd\u662f\u4e0d\u9700\u8981\u63d2\u5165\u64cd\u4f5c\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7b80\u5316\u8fd9\u4e00\u90e8\u5206\u7684\u6d41\u7a0b\u3002\u8be6\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<algorithm>\n\n#define rg register\n#define MX (100000 + 5)\n#define ll long long\n#define int long long\n\nstd::priority_queue<int> q;\n\nint read(){//\u5feb\u901f\u8bfb\u5165}\n\nstruct WORK{\n\tint pos ,val;\n\tbool operator <(const WORK &B)const{return pos == B.pos ? val > B.val : pos > B.pos;}\n}P[MX];\n\nsigned main(){\n\tint n = read();\n\tfor(rg int i = 1 ,p ,v ; i <= n ; ++i){\n\t\tp = read(); v = read();\n\t\tP[i] = (WORK){p ,v};\n\t}\n\tstd::sort(P + 1 ,P + 1 + n);\n\tP[n + 1] = (WORK){0 ,0};\t// \u7ec8\u6b62\u6761\u4ef6\n\tll Ans = 0;\n\tfor(rg int i = 1 ; i <= n ; ){\t// \u6b64\u5904\u7684 i \u679a\u4e3e\u7684\u662f n \u4e2a\u63d2\u5165\u64cd\u4f5c\n\t\twhile(true){\t// \u540c\u4e00\u79d2\u7684\u64cd\u4f5c\u90fd\u4e00\u6b21\u6027\u5b8c\u6210\n\t\t\tq.push(P[i++].val);\n\t\t\tif(P[i].pos != P[i - 1].pos)\tbreak;\t\n            \t// \u4e0b\u4e00\u4e2a\u8981\u63d2\u5165\u7684\u4e0d\u662f\u540c\u4e00\u79d2\u7684\u5c31 break \u6389\n\t\t}\n\t\tint cnt = P[i - 1].pos - P[i].pos;\n        \t// \u627e\u5230\u4e24\u7ec4\u63d2\u5165\u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\uff0c\u8282\u7ea6\u4e86\u679a\u4e3e\u65f6\u95f4\u7684\u590d\u6742\u5ea6\n\t\twhile(!q.empty() && cnt--){\t// \u6ce8\u610f\u5806\u8981\u975e\u7a7a\n\t\t\tAns += q.top();\t// \u6bcf\u79d2\u90fd\u9009\u6700\u5927\u503c\n\t\t\tq.pop();\n\t\t}\n\t}\n\tprintf(\"%lld\\n\" ,Ans);\n\treturn 0;\n}\n```",
        "postTime": 1570463447,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u91cc\u6e05\u4e00\u8272\u7684\u5806\u7ef4\u62a4\u7684\u53cd\u6094\u8d2a\u5fc3\uff0c\u6211\u6765\u63d0\u4f9b\u4e00\u4e2a**\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u66b4\u529b**\u3002\n\n\u4ecd\u7136\u662f\u8d2a\u5fc3\uff0c\u4ee5\u4ef7\u503c\u4e3a\u5173\u952e\u5b57\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5982\u679c $1\\sim t[i]$ \u6ca1\u6709\u585e\u6ee1\uff0c\u90a3\u5c31\u5c3d\u91cf\u5495\u5230\u6700\u540e\u4e00\u4e2a\u7a7a\u4f4d\u505a\u3002\u6b63\u786e\u6027\u663e\u7136\uff0c\u76f4\u63a5\u66b4\u529b\u662f $O(n^2)$ \u7684\u3002\n\n\u53d1\u73b0\u627e\u7a7a\u4f4d\u7684\u8fc7\u7a0b\u53ef\u4ee5\u4f18\u5316\uff0c\u52a0\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u4e8c\u5206\u4f4d\u7f6e\u5224\u65ad\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlog^2n)$ \u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tchar ch=getchar();\n\tint res=0,flag=1;\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t\tflag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tres=res*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn res*flag;\n}\nint n;\nstruct work\n{\n\tint w;\n\tint t;\n\tbool operator <(work x2)\n\t{\n\t\treturn w>x2.w;\n\t}\n}x[100001];\nint c[100001];\nll ans;\ninline int lowbit(int a)\n{\n\treturn a&(-a);\n}\ninline void update(int pos,int v)\n{\n\twhile(pos<=n)\n\t{\n\t\tc[pos]+=v;\n\t\tpos+=lowbit(pos);\n\t}\t\n}\ninline int sum(int pos)\n{\n\tint res=0;\n\twhile(pos)\n\t{\n\t\tres+=c[pos];\n\t\tpos-=lowbit(pos);\n\t}\n\treturn res;\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tx[i].t=min(read(),(int)1e5);\n\t\tx[i].w=read();\n\t}\n\tsort(x+1,x+n+1);\n\tfor(int i=1;i<=n;++i)\n\t\tif(sum(x[i].t)!=x[i].t)\n\t\t{\n\t\t\tint l=1,r=x[i].t,mid,res;\n\t\t\twhile(l<=r)\n\t\t\t{\n\t\t\t\tmid=(l+r)>>1;\n\t\t\t\tif(sum(x[i].t)-sum(mid-1)!=x[i].t-mid+1)\n\t\t\t\t{\n\t\t\t\t\tres=mid;\n\t\t\t\t\tl=mid+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tr=mid-1;\n\t\t\t}\n\t\t\tupdate(res,1);\n\t\t\tans+=x[i].w;\n\t\t}\n\tprintf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1606828825,
        "uid": 68011,
        "name": "\u53e4\u660e\u5730_ypc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]Work Scheduling G\u3011"
    },
    {
        "content": "# P2949\n[\uff08\u53ef\u80fd\uff09\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/llzzxx712/solution-p2949)\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2949)\n## \u9898\u76ee\u63cf\u8ff0\n- \u7ed9\u4f60N\u4e2a\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1 $i$ \u90fd\u6709\u622a\u6b62\u65e5\u671f  $d_{i}$ \u548c\u62a5\u916c$p_{i}$\u3002\n- \u5b8c\u6210\u6bcf\u4e2a\u4efb\u52a1\u65f6\u95f4\u76f8\u540c\uff0c\u90fd\u4e3a\u4e00\u4e2a\u5355\u4f4d\u3002\n- \u4f60\u9700\u8981\u4f7f\u6240\u5f97\u62a5\u916c\u6700\u5927\u5e76\u8f93\u51fa\u3002\n- $1<=p_{i},d_{i},n<=10^9$\n## \u9898\u76ee\u5206\u6790\n\u8fd9\u662f\u4e00\u9053**\u8d2a\u5fc3**\u9898\u662f\u80af\u5b9a\u7684\uff0c\u4f46\u6211\u6ca1\u6709\u60f3\u5230\u7528\u6807\u7b7e\u4e2d\u7684\u5355\u8c03\u961f\u5217\u600e\u4e48\u505a\uff0c\u6211\u4f7f\u7528\u4e86**\u4e8c\u53c9\u5806/\u4f18\u5148\u961f\u5217**\u6765\u89e3\u51b3\u3002\n\n**\u90a3\u5177\u4f53\u600e\u4e48\u8d2a\u5fc3\u5462\uff1f**\n\n\u5148\u662f\u4e00\u4e2a**\u9519\u8bef\u7684\u8d2a\u5fc3\u601d\u8def**(\u6ce8\u610f\u662f\u9519\u7684\uff09\u2014\u2014\u5728\u6bcf\u4e2a\u65f6\u95f4\u70b9\u90fd\u9009\u62e9\u5f53\u524d\u62a5\u916c\u6700\u9ad8\u7684\u4efb\u52a1\u8fdb\u884c\u5b8c\u6210\u3002\n\n\u8fd9\u5f88\u5bb9\u6613\u4e3e\u51fa\u53cd\u4f8b\uff0c\u6bd4\u5982\u8fd9\u91cc\u6709\u4e24\u4e2a\u5de5\u4f5c\uff0c\u4e00\u4e2a\u62a5\u916c\u4e3a5\uff0c\u622a\u6b62\u65e5\u671f\u4e3a3 \u3002\u53e6\u4e00\u4e2a\u62a5\u916c\u4e3a4\uff0c\u622a\u6b62\u65e5\u671f\u4e3a1 \u3002\u6309\u7167\u6b64\u8d2a\u5fc3\u601d\u8def\u6211\u4eec\u5148\u9009\u7b2c\u4e00\u4e2a\u5de5\u4f5c\u5f97\u52305\u70b9\u62a5\u916c\u7136\u540e\u7b2c\u4e8c\u4e2a\u5de5\u4f5c\u56e0\u622a\u6b62\u800c\u653e\u5f03\u3002\u4f46\u5f88\u663e\u7136\u6211\u4eec\u5e94\u8be5\u5148\u9009\u7b2c\u4e8c\u4e2a\u5de5\u4f5c\u518d\u505a\u7b2c\u4e00\u4e2a\uff0c\u8fd9\u6837\u53ef\u4ee5\u83b7\u5f979\u70b9\u62a5\u916c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4fee\u6539\u6211\u4eec\u7684\u601d\u8def\u2014\u2014\u628a\u4efb\u52a1\u6309\u7167\u65f6\u95f4\u6392\u5e8f\uff0c\u6309\u7167\u65f6\u95f4\u9009\u62e9\u4efb\u52a1\u3002\n\n\u4f46\u4ecd\u53ef\u4ee5\u4e3e\u51fa\u53cd\u4f8b\uff0c\u8fd9\u91cc\u6709\u4e09\u4e2a\u4efb\u52a1\uff0c\u7b2c\u4e00\u4e2a\u4efb\u52a1\u622a\u6b62\u65f6\u95f4\u4e3a1\uff0c\u62a5\u916c\u4e3a1\uff0c\u540e\u4e24\u4e2a\u4efb\u52a1\u622a\u6b62\u65f6\u95f4\u90fd\u4e3a2\uff0c\u62a5\u916c\u5206\u522b\u4e3a8\u548c9\uff0c\u6309\u7167\u6b64\u601d\u8def\u6211\u4eec\u4f1a\u5148\u9009\u62e9\u4efb\u52a11\uff0c\u4f46\u5f88\u663e\u7136\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u4efb\u52a12\u30013\u800c\u4e0d\u90091.\n\n\u8fd9\u9700\u8981\u6211\u4eec\u8fdb\u4e00\u6b65\u6539\u8fdb\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u6bcf\u4e2a\u4efb\u52a1\u5b8c\u6210\u7684\u65f6\u95f4\u90fd\u4e3a1\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5728\u4e00\u4e2a\u65f6\u95f4\u53ef\u4ee5\u505a\u4efb\u610f\u4e00\u4e2a\u4efb\u52a1\u3002\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u62a5\u916c\u66f4\u5927\u7684\u4efb\u52a1\u4e14\u65f6\u95f4\u4e0d\u591f\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u653e\u5f03\u524d\u9762\u9009\u62e9\u7684\u62a5\u916c\u6700\u5c0f\uff08\u4e14\u6bd4\u5f53\u524d\u4efb\u52a1\u62a5\u916c\u5c0f\uff09\u7684\u4efb\u52a1\u8fdb\u884c\u66ff\u6362\u2014\u2014\u8fd9\u5c31\u662f\u8d2a\u5fc3\u4e2d\u7684**\u9000\u6d41\u601d\u60f3**\u3002\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u5c06\u6bcf\u6b21\u9009\u62e9\u7684\u4efb\u52a1\u62a5\u916c\u653e\u5165\u5806\u4e2d\uff0c\u6bcf\u6b21\u65f6\u95f4\u4e0d\u591f\u65f6\u53d6\u51fa\u5806\u9876\uff0c\u4e0e\u5f53\u524d\u4efb\u52a1\u8fdb\u884c\u6bd4\u8f83\u3002\n\n## \u601d\u8def\u603b\u7ed3\n1. \u8bfb\u5165\u6bcf\u4e2a\u5de5\u4f5c\u5e76\u7528\u7ed3\u6784\u4f53\u50a8\u5b58\uff0c\u6309\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n1. \u5efa\u7acb\u5c0f\u6839\u5806\u4e0e\u6bcf\u6b21\u4efb\u52a1\u6bd4\u8f83\uff0c\u4fdd\u8bc1\u7ed3\u679c\u6700\u4f18\u3002\n\n## \u6613\u9519\u70b9\n- \u7ed3\u679c\u53ef\u4ee5\u5f88\u5927\uff0c\u8bb0\u5f97\u5f00 long long\u3002\n- \u66ff\u6362\u4efb\u52a1\u65f6\u4e0d\u9700\u8981\u589e\u52a0\u65f6\u95f4\n\n## \u4ee3\u7801\uff08\u5e26\u6ce8\u91ca\uff09\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#define N 100002\n#define ll long long \nusing namespace std;\nvoid read(int &x){//\u5feb\u8bfb \n\tint f=1;x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n\tx*=f;\n}\nstruct cow{\n\tint g,d;//g\u4e3a\u5976\uff0cd\u4e3a\u622a\u6b62\u65f6\u95f4 \n}a[N];\nint cmp(cow aa,cow bb){\n\treturn aa.d<bb.d;//\u6309\u7167\u65f6\u95f4\u6392\u5e8f \n}\npriority_queue < int > q;\nint n,t;\nll ans;//\u53ea\u6709\u7ed3\u679c\u9700\u8981\u5f00long long \nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tread(a[i].d),read(a[i].g);//\u8bfb\u5165 \n\t}\n\tsort(a+1,a+1+n,cmp);//\u6392\u5e8f \n\tfor(int i=1,t=1;i<=n;i++){//i\u8868\u793a\u73b0\u5728\u626b\u63cf\u5230\u7b2c\u51e0\u4e2a\u4efb\u52a1\uff0ct\u8868\u793a\u5f53\u524d\u82b1\u8d39\u4e86\u591a\u5c11\u65f6\u95f4 \n\t\tif(a[i].d<t){//\u65f6\u95f4\u4e0d\u591f\u4e86 \n\t\t\tint x=-q.top();//\u53d6\u8d1f\u5b58\u5165\u3001\u53d6\u51fa\uff08\u4f7f\u5b83\u4e3a\u5c0f\u6839\u5806\uff09 \n\t\t\tif(x<a[i].g){//\u5982\u679c\u53d6\u51fa\u7684\u4efb\u52a1\u62a5\u916c\u6bd4\u5f53\u524d\u5c0f\uff0c\u66ff\u6362 \n\t\t\t\tq.pop();q.push(-a[i].g);\n\t\t\t\tans+=a[i].g-x; \n\t\t\t}\n\t\t}\n\t\tif(a[i].d>=t){//\u65f6\u95f4\u5145\u8db3\uff0c\u5c06\u5f53\u524d\u4efb\u52a1\u653e\u5165 \n\t\t\tq.push(-a[i].g); \n\t\t\tans+=a[i].g;t++;\n\t\t}\n\t}\n\tcout<<ans;\n}\n\n```\n\n**\u6700\u540e**\uff1a\u4ee4\u4eba\u559c\u7231\u7684\u53cc\u500d\u7ecf\u9a8c\n\n[p3093 \u53cc\u500d\u7ecf\u9a8c](https://www.luogu.com.cn/problem/P3093)\n\n**\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u7ed9\u4e2a\u8d5e\u5457**",
        "postTime": 1579567670,
        "uid": 235658,
        "name": "llzzxx712",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u73b0\u5728\u6709$n$\u4e2a\u5de5\u4f5c\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u5bf9\u5e94\u4e00\u4e2a\u5230\u671f\u7684\u65f6\u9650$D_i$\u548c\u4e00\u4e2a\u5b8c\u6210\u5de5\u4f5c\u53ef\u83b7\u5f97\u7684\u62a5\u916c$P_i$\u3002\n\n\u6bcf\u5b8c\u6210\u4e00\u4e2a\u5de5\u4f5c\u9700\u8981\u8017\u8d39$1$\u7684\u5355\u4f4d\u65f6\u95f4\u3002\n\n\u73b0\u5728\u4f60\u9700\u8981\u8003\u8651\u5982\u4f55\u5b89\u6392\u5de5\u4f5c\u624d\u53ef\u4ee5\u4f7f\u83b7\u5f97\u7684\u62a5\u916c\u6700\u5927\u3002\u5e76\u8f93\u51fa\u6700\u5927\u7684\u62a5\u916c\u3002\n\n## \u601d\u8def\n\n\u8fd9\u662f\u4e00\u9053\u5e26\u9700\u8981\u53ef\u4ee5\u53cd\u6094\u7684\u8d2a\u5fc3\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u5c3d\u91cf\u5b8c\u6210\u591a\u7684\u4efb\u52a1\u3002\u8fd9\u6837\u4ef7\u503c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u5927\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6309\u7167\u65f6\u95f4\u6765\u6392\u5e8f\u3002\n\n\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u6765\u7ef4\u62a4\u6211\u4eec\u5df2\u5b8c\u6210\u7684\u5de5\u4f5c\u4e2d\u7684\u53ef\u83b7\u5f97\u7684\u62a5\u916c\u7684\u6700\u5c0f\u503c\u3002\n\n\u5982\u679c\u6211\u4eec\u5f53\u524d\u679a\u4e3e\u5230\u7684\u5de5\u4f5c\u65f6\u9650\u5df2\u7ecf\u8fc7\u4e86\uff0c\u6211\u4eec\u8ddf\u6700\u5c0f\u503c\u6bd4\u8f83\u4e00\u4e0b\u3002\u5982\u679c\u76ee\u524d\u5de5\u4f5c\u53ef\u83b7\u5f97\u7684\u6536\u76ca\u5927\u7684\u8bdd\u8bf4\u660e\u6211\u4eec\u5b8c\u6210\u8fd9\u4e2a\u5de5\u4f5c\u53ef\u83b7\u5f97\u7684\u6548\u76ca\u66f4\u9ad8\u3002\u8fd9\u4e2a\u5c31\u662f\u53cd\u6094\u7684\u8fc7\u7a0b\u3002\n\n\u5426\u5219\u76f4\u63a5\u7d2f\u52a0\u5373\u53ef\u3002\n\n\u8bc1\u660e\u7684\u8bdd\u56e0\u4e3a\u82b1\u8d39\u7684\u65f6\u95f4\u90fd\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u4ef7\u503c\u5927\u7559\u4e0b\u6765\u80af\u5b9a\u66f4\u4f18\u3002\n\n\u8fd9\u6837\u679a\u4e3e\u5230\u5230\u6700\u540e\u4e00\u5b9a\u662f\u6700\u5927\u503c\u3002\n\n\u56e0\u4e3a\u6bcf\u5b8c\u6210\u4e00\u4e2a\u5de5\u4f5c\u9700\u8981\u7684\u65f6\u95f4\u90fd\u662f$1$\uff0c\u6240\u4ee5\u5c0f\u6839\u5806\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u5c31\u662f\u5df2\u7ecf\u82b1\u8d39\u7684\u65f6\u95f4\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int maxn = 1e5+10;\n\nint n, ans;\npair<int,int> a[maxn];\n\nsigned main(){\n\tscanf(\"%lld\", &n);\n\tfor(int i = 1; i <= n; i ++) scanf(\"%lld%lld\", &a[i].first, &a[i].second);\n\tsort(a+1, a+n+1);\n\tpriority_queue<int, vector<int>, greater<int> > q;\n\tfor(int i = 1; i <= n; i ++){\n\t\tif(a[i].first <= q.size()){\n\t\t\tif(a[i].second > q.top()){\n\t\t\t\tans -= q.top();\n\t\t\t\tans += a[i].second;\n\t\t\t\tq.pop();\n\t\t\t\tq.push(a[i].second);\n\t\t\t}\n\t\t}else q.push(a[i].second), ans += a[i].second;\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1600660291,
        "uid": 58323,
        "name": "Vanyun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]Work Scheduling G\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5 \uff1a[P2949](https://www.luogu.org/problem/P2949)\n\n\u8fd9\u9053\u9898\u76ee\u662f\u4e00\u9053\u5f88\u660e\u663e\u7684**\u8d2a\u5fc3**\u95ee\u9898\u3002\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u5de5\u4f5c\u4ee3\u4ef7\uff08\u5360\u7528\u65f6\u95f4\uff09\u5747\u4e3a\u4e00\uff0c\u800c\u76f8\u5e94\u7684\u4ef7\u503c\uff08\u5de5\u4f5c\u5229\u6da6\uff09\u4e0d\u540c\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u8d2a\u5fc3\u7b56\u7565\uff0c\u5373\n```\n1.\u5f53\u5de5\u4f5c\u7684\u5229\u6da6\u4e0d\u540c\u65f6\uff0c\u4f18\u5148\u8fdb\u884c\u5229\u6da6\u66f4\u5927\u7684\u5de5\u4f5c\n2.\u5f53\u5de5\u4f5c\u7684\u5229\u6da6\u76f8\u540c\u65f6\uff0c\u4f18\u5148\u8fdb\u884c\u622a\u6b62\u65f6\u95f4\u66f4\u665a\u7684\u5de5\u4f5c\n```\n\u6839\u636e\u4ee5\u4e0a\u8d2a\u5fc3\u7b56\u7565\uff0c\u5bf9\u4e8e\u5de5\u4f5c\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4ee5\u4e0b\u7ed3\u6784\u4f53\n```cpp\nstruct job{\n    int end_time;//\u622a\u6b62\u65f6\u95f4\n    int value;//\u5de5\u4f5c\u5229\u6da6\n\t\n    bool operator< (const job &J)const {//\u91cd\u8f7d\u5c0f\u4e8e\u53f7\n        if (value != J.value) return value > J.value;\n        return end_time > J.end_time;\n    }\n}j[100005];\n```\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5904\u7406\u5de5\u4f5c\u65f6\u95f4\u51b2\u7a81\u7684\u60c5\u51b5\u3002\u7531\u4e8e\u6392\u5e8f\u540e\uff0c\u6570\u7ec4\u524d\u9762\u7684\u5143\u7d20\u5229\u6da6\u66f4\u5927\uff0c\u663e\u7136\uff0c\u5f53\u4e3a\u4e86\u4f7f\u5229\u6da6\u66f4\u9ad8\uff0c\u5e94\u8be5\u5c06\u6392\u5e8f\u540e\u6570\u7ec4\u4e2d\u9760\u540e\u7684\u5de5\u4f5c\u5728\u622a\u6b62\u65f6\u95f4\u4e4b\u524d\u8fdb\u884c\u3002\u7531\u4e8e\u6709$10^9$\u7684\u5355\u4f4d\u65f6\u95f4\uff0c\u663e\u7136\u662f\u5f00\u4e0d\u4e0b\u4e00\u4e2a\u8fd9\u4e48\u957f\u7684\u6570\u7ec4\u7528\u6765\u5224\u65ad\u6bcf\u4e2a\u65f6\u95f4\u662f\u5426\u8fdb\u884c\u5de5\u4f5c\u3002\u8003\u8651\u5230\u5de5\u4f5c\u6570\u91cf$N\\leq10^6$,\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a$set$\u5bf9\u6bcf\u4e2a\u65f6\u95f4\u662f\u5426\u8fdb\u884c\u5de5\u4f5c\u8fdb\u884c\u5b58\u50a8\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nset<int> pr;//\u7528\u4e8e\u5224\u65ad\u6bcf\u4e2a\u65f6\u95f4\u662f\u5426\u8fdb\u884c\u4e86\u5de5\u4f5c\nint main(){\n    int n;\n    cin>>n;\n    for (int i = 1; i <= n; i++){\n        cin>>j[i].end_time>>j[i].value;\n    }\n    sort(j + 1, j + n + 1);//\u5bf9\u5de5\u4f5c\u6570\u7ec4j\u8fdb\u884c\u6392\u5e8f\n    long long ans = 0;//\u6ce8\u610f\u6b64\u5904\u5fc5\u987b\u5f00long long\uff0c\u4e0d\u7136\u4f1a\u7206\u6389\n    for (int i = 1; i <= n; i++){\n        while ( pr.count( j[i].end_time )  && j[i].end_time > 0) {\n            j[i].end_time--;\n        }//\u5224\u65ad\u5f53\u524d\u622a\u6b62\u65f6\u95f4\u662f\u5426\u8fdb\u884c\u4e86\u5de5\u4f5c\uff0c\u5982\u679c\u6709\u5de5\u4f5c\u5728\u8fdb\u884c\uff0c\u90a3\u4e48\u5c06\u622a\u6b62\u65f6\u95f4\u524d\u79fb\n        if ( j[i].end_time ){//\u5982\u679c\u5f53\u524d\u5de5\u4f5c\u57280\u65f6\u523b\u4e4b\u524d\u53ef\u4ee5\u8fdb\u884c\n            ans += j[i].value;//\u52a0\u4e0a\u8be5\u5de5\u4f5c\u7684\u5229\u6da6\n            pr.insert( j[i].end_time );//\u8bb0\u5f55\u5f53\u524d\u65f6\u95f4\n        }\n    }\n    cout<<ans<<endl;//\u8f93\u51fa\n    return 0;\n}\n```\n\u628a\u8fd9\u6bb5\u4ee3\u7801\u63d0\u4ea4\u8bc4\u6d4b\uff0c\u5c45\u7136**T**\u4e86\u56db\u4e2a\u70b9\uff1f\u8003\u8651\u5bf9\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u5c06\u5f53\u524d\u5de5\u4f5c\u65f6\u95f4\u524d\u79fb\u7684**while\u5faa\u73af**\u4e2d\u6d6a\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u3002\u5f53\u5927\u91cf\u5de5\u4f5c\u622a\u6b62\u65f6\u95f4\u76f8\u540c\u65f6\uff0c\u4f1a\u8fdb\u884c\u5927\u91cf\u91cd\u590d\u8ba1\u7b97\u3002\u56e0\u6b64\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5e76\u67e5\u96c6\u7684\u7ed3\u6784\u8fdb\u884c\u4f18\u5316\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u65f6\u95f4\u4e4b\u524d\u6700\u665a**\u53ef\u80fd**\u6ca1\u6709\u8fdb\u884c\u5de5\u4f5c\u7684\u65f6\u95f4\u3002\u4f7f\u7528**map**\u8fdb\u884c\u5b58\u50a8\u8be5\u7ed3\u6784\u4e0e\u6bcf\u4e2a\u65f6\u95f4\u662f\u5426\u8fdb\u884c\u5de5\u4f5c\u540e\uff0c\u6539\u5199\u7684**while\u5faa\u73af**\u5982\u4e0b\uff1a\n```cpp\nmap<int, int> time_table;//\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e2a\u65f6\u95f4\u4e4b\u524d\u6700\u665a\u53ef\u80fd\u6ca1\u6709\u8fdb\u884c\u5de5\u4f5c\u7684\u65f6\u95f4\n\nint now_time = j[i].end_time;\nwhile ( pr[ j[i].end_time ] && j[i].end_time > 0) {\n    if(time_table[ j[i].end_time ])//\u5982\u679c\u5f53\u524d\u65f6\u95f4\u524d\u6709\u4e00\u6bb5\u65f6\u95f4\u5df2\u7ecf\u8fdb\u884c\u4e86\u5de5\u4f5c \n        j[i].end_time = time_table[ j[i].end_time ]--;//\u5411\u524d\u8df3\u8dc3\u4e00\u6bb5\u65f6\u95f4\n    else j[i].end_time--;//\u5426\u5219\u53ea\u5411\u524d\u8fdb\u884c\u4e00\u6b65\n}\ntime_table[now_time] = j[i].end_time;//\u66f4\u65b0\n```\n\u8fd9\u6837\uff0c\u867d\u7136\u5faa\u73af\u4e2d\u4ecd\u6709\u90e8\u5206\u91cd\u590d\u8ba1\u7b97\uff0c\u4ee3\u7801\u8fd0\u884c\u6548\u7387\u5df2\u7ecf\u964d\u4f4e\u5230\u53ef\u4ee5\u63a5\u53d7\u7684\u8303\u56f4\uff0c\u5b8c\u6574\u7684\u4f18\u5316\u7559\u4f5c\u540e\u7eed\u601d\u8003~~\u5176\u5b9e\u662f\u6211\u4e0d\u60f3\u5199QAQ~~\u3002\u4e0b\u9762\u7ed9\u51fa\u57fa\u4e8e$pbds$\u7684\u5b8c\u6574\u4ee3\u7801\u5b9e\u73b0\n```cpp\n// luogu-judger-enable-o2\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/hash_policy.hpp>\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ninline int read() {\n    int x = 0;\n    char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >= '0' && c <= '9') {\n        x = (x << 3) + (x << 1) + (c ^ 48);\n        c = getchar();\n    }\n    return x;\n}\n\nstruct job {\n    int end_time;\n    int value;\n} j[100005];\n\nstruct cmp{\n    inline bool operator() (const job& J1, const job& J2){\n        if (J1.value != J2.value) return J1.value > J2.value;\n        return J1.end_time > J2.end_time;\n    }\n};\n\ngp_hash_table<int, int> pr;\ngp_hash_table<int, int> time_table;\nint main() {\n    int n = read();\n    for (register int i = 1; i <= n; ++i) {\n        j[i].end_time = read();\n        j[i].value = read();\n    }\n    sort(j + 1, j + n + 1, cmp());\n    long long ans = 0;\n    for (register int i = 1; i <= n; ++i) {\n        int now_time = j[i].end_time;\n        while ( pr[ j[i].end_time ] && j[i].end_time > 0) {\n            if(time_table[ j[i].end_time ])\n                j[i].end_time = time_table[ j[i].end_time ]--;\n            else j[i].end_time--;\n        }\n        time_table[now_time] = j[i].end_time;\n        if ( j[i].end_time ) {\n            ans += j[i].value;\n            pr[ j[i].end_time ] = 1;\n        }\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1565683564,
        "uid": 82672,
        "name": "0nullptr",
        "ccfLevel": 0,
        "title": "P2949 \u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u9898\u89e3"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u601d\u8def\u90fd\u8bf4\u7684\u975e\u5e38\u6e05\u695a\u8def\uff0c\u6211\u6765\u8d21\u732e\u4e00\u4e2a\u76f8\u540c\u601d\u8def\u4f7f\u7528 $set$ \u8fdb\u884c\u5b9e\u73b0\u7684\u6781\u7b80\u505a\u6cd5\u3002\uff08\u524d\u9762\u7684\u9898\u89e3\u4e2d\uff0c\u6709\u4e00\u4e2a\u5927\u4f6c\u63d0\u53ca\u4e86 $set$\uff0c\u4f46\u662f\u601d\u8def\u8c8c\u4f3c\u548c\u6211\u7684\u6709\u4e00\u5b9a\u5dee\u5f02\uff0c\u800c\u4e14\u4ed6\u6700\u540e $T$ \u4e86\u2026\u2026\uff09\n\n### 1. \u8d2a\u5fc3\u601d\u60f3\u603b\u7ed3\n\n\u8fd9\u9053\u9898\u76ee\u7684\u8d2a\u5fc3\u601d\u60f3\u5f88\u660e\u786e\uff1a\n\n- \u5355\u4f4d\u65f6\u95f4\u53ea\u80fd\u505a\u4e00\u4ef6\u5de5\u4f5c\uff0c\u6240\u4ee5\u5e94\u8be5\u5148\u8003\u8651\u5229\u6da6\u9ad8\u7684\uff1b\n- \u5bf9\u4e8e\u6bcf\u4ef6\u5de5\u4f5c\uff0c\u5e94\u8be5\u5c3d\u91cf\u628a\u5b83\u5f80\u540e\u62d6\uff0c\u8fd9\u6837\u5269\u4e0b\u6bd4\u8f83\u9760\u524d\u7684\u65f6\u95f4\u53ef\u4ee5\u5b89\u6392\u522b\u7684\u5de5\u4f5c\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e\u5229\u6da6\u4ece\u9ad8\u5230\u4f4e\u7ed9\u5de5\u4f5c\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4ef6\u5de5\u4f5c\uff0c\u6211\u4eec\u5c3d\u91cf\u628a\u5b83\u5f80\u540e\u5b89\u6392\uff0c\u5373\u5b89\u6392\u5230 **\u6700\u9760\u540e** \u5e76\u4e14 **\u4e0d\u665a\u4e8e\u5176\u622a\u6b62\u65f6\u95f4** \u7684\u65f6\u523b\u3002\n\n### 2. \u5b9e\u73b0\u65b9\u6cd5\n\n\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5982\u679c\u4e00\u4e2a\u5de5\u4f5c\u7684\u622a\u6b62\u65f6\u95f4\u5927\u4e8e $N$\uff0c\u90a3\u4e48\u5b83 **\u4e00\u5b9a\u53ef\u4ee5\u88ab\u5b89\u6392\u4e0a**\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u622a\u6b62\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e $N$ \u7684\u5de5\u4f5c\u5373\u53ef\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a $set$ \u5b58\u50a8\u5f53\u524d\u6240\u6709\u7684\u7a7a\u95f2\u65f6\u95f4\uff0c\u4e00\u5f00\u59cb\uff0c$1$ \u65f6\u523b\u5230 $N$ \u65f6\u523b\u90fd\u662f\u7a7a\u95f2\u7684\uff0c\u5373\u8fd9\u4e2a $set$ \u4e2d\u5b58\u50a8\u4e86 $1$ \u5230 $N$ \u4e2d\u7684\u6240\u6709\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u622a\u6b62\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e $N$ \u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u4ece\u8fd9\u4e2a $set$ \u4e2d\u627e\u5230 **\u6700\u5927\u7684** \u4e14 **\u4e0d\u665a\u4e8e\u5176\u622a\u6b62\u65f6\u95f4** \u7684\u7a7a\u95f2\u65f6\u523b\u3002\u5982\u679c\u5b58\u5728\uff0c\u5c31\u610f\u5473\u7740\u8fd9\u4e2a\u5de5\u4f5c\u53ef\u4ee5\u88ab\u5b89\u6392\u4e0a\uff0c\u6211\u4eec\u4ece $set$ \u4e2d\u5220\u9664\u8fd9\u4e2a\u65f6\u523b\uff0c\u5e76\u628a\u8fd9\u4e2a\u5de5\u4f5c\u7684\u5229\u6da6\u7d2f\u52a0\u5230\u7b54\u6848\u4e2d\u3002\n\n\u6211\u4eec\u9700\u8981\u5bf9\u6240\u6709\u5de5\u4f5c\u6392\u5e8f\u3002\u5bf9\u6bcf\u4e2a\u5de5\u4f5c\uff0c\u90fd\u53ef\u80fd\u6d89\u53ca\u4ece $set$ \u4e2d\u67e5\u627e\u5e76\u5220\u9664\u5143\u7d20\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N \\log N)$\uff0c\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\u672c\u9898\u3002\n\n### 3. \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <set>\nusing namespace std;\n#define MAXN 100005\nlong long n;\n// \u5de5\u4f5c\uff0cfirst\u4e3a\u5229\u6da6\uff0csecond\u4e3a\u622a\u6b62\u65f6\u95f4\npair<long long, long long> k[MAXN];\nlong long ans;\n// \u7528\u4e8e\u5b58\u50a8\u7a7a\u95f2\u65f6\u523b\u7684set\nset<long long> s;\nint main() {\n    scanf(\"%lld\", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\"%lld %lld\", &k[i].second, &k[i].first);\n    }\n    // \u6839\u636e\u5229\u6da6\u8fdb\u884c\u6392\u5e8f\n    sort(k, k + n);\n    // \u521d\u59cb\u5316set\uff0c\u52a0\u51651~N\uff0c\u56e0\u4e3a\u5f00\u59cb\u65f6\u8fd9\u4e9b\u65f6\u523b\u90fd\u662f\u7a7a\u95f2\u7684\n    for (long long i = 1; i <= n; i++) {\n        s.insert(i);\n    }\n    // \u6309\u7167\u4ef7\u503c\u4ece\u9ad8\u5230\u4f4e\u8003\u8651\u6bcf\u4ef6\u5de5\u4f5c\n    for (long long i = n - 1; i >= 0; i--) {\n        // \u5bf9\u4e8e\u622a\u6b62\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8en\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u624d\u9700\u8981\u8003\u8651\u5176\u662f\u5426\u80fd\u5b89\u6392\u4e0a\n        if (k[i].second <= n) {\n            // \u4eceset\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a\u3010\u665a\u4e8e\u3011\u5176\u622a\u6b62\u65f6\u95f4\u7684\u65f6\u523b\n            // \u8fd9\u4e00\u65f6\u523b\u3010\u4e4b\u524d\u3011\u7684\u90a3\u4e2a\u65f6\u523b\uff0c\u5c31\u5e94\u8be5\u662f\u6211\u4eec\u5b89\u6392\u8fd9\u4e2a\u5de5\u4f5c\u7684\u65f6\u523b\n            auto it = s.upper_bound(k[i].second); \n            // \u5982\u679c\u4e0d\u5b58\u5728\uff08\u5269\u4f59\u65f6\u523b\u4e2d\u7684\u7b2c\u4e00\u4e2a\u65f6\u523b\u90fd\u665a\u4e8e\u5176\u622a\u81f3\u65f6\u95f4\u4e86\uff09\uff0c\u5c31\u53ea\u80fd\u653e\u5f03\n            if (it == s.begin()) {\n                continue;\n            }\n            // \u5426\u5219\uff0c\u5b89\u6392\u4e0a\u8fd9\u4e2a\u5de5\u4f5c\uff0c\u5e76\u79fb\u9664\u5176\u5360\u7528\u7684\u65f6\u523b\n            s.erase(--it);\n        }\n        // \u7d2f\u52a0\u7b54\u6848\n        ans += k[i].first;\n        \n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1612014090,
        "uid": 219978,
        "name": "SBofGaySchool",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]Work Scheduling G\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u4f18\u5148\u961f\u5217 + \u8d2a\u5fc3    \n~~\u8fd9\u9053\u9898\u544a\u8bc9\u6211\u4ee5\u540e\u4e0d\u8981\u76f8\u4fe1\u6d1b\u8c37\u6807\u7b7e~~ \u2026\u2026     \n\u6807\u7b7e\u662f\u5355\u8c03\u961f\u5217\uff0c\u6211\u786c\u751f\u751f\u7528\u5355\u8c03\u961f\u5217\u5199\u4e86\u534a\u4e2a\u591a\u5c0f\u65f6    \n\u7ec8\u4e8e\u653e\u5f03\u4e86\u5355\u8c03\u961f\u5217\u9009\u62e9\u4e86\u6211\u7684\u6761\u4ef6\u53cd\u5c04     \n\u4f18\u5148\u961f\u5217    \n\u7136\u540e\u6539\u4e86\u51e0\u4e0b\u5c31A\u6389\u4e86\u2026\u2026   \n\u53ef\u80fd\u662f\u6211\u592a\u84bb\u4e86\uff0c\u4e0d\u4f1a\u600e\u4e48\u5199\u5355\u8c03\u961f\u5217\u5427     \n\n### \u3010\u4e3a\u4ec0\u4e48\u8981\u7528\u8d2a\u5fc3\u3011\n~~\u8fd8\u597d\u8d2a\u5fc3\u8fd9\u4e2a\u6807\u7b7e\u662f\u6b63\u786e\u7684~~    \n\u8fd9\u9053\u9898\u7684\u8d2a\u5fc3\u5f88\u663e\u7136      \n\u5c31\u662f\u5728\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\u90fd\u9009\u62e9\u5728\u8fd9\u4e2a\u65f6\u95f4\u70b9\u80fd\u591f\u505a\u7684\u83b7\u5f97\u5229\u6da6\u6700\u5927\u7684\u7b56\u7565    \n\u8fd9\u6837\u5c31\u53ef\u4ee5\u7531\u5c40\u90e8\u6700\u4f18\u5f97\u5230\u5168\u5c40\u6700\u4f18\u4e86    \n\n### \u3010\u6700\u7ec8\u601d\u8def\u3011  \n\u90a3\u600e\u4e48\u597d\u597d\u7684\u5229\u7528\u8d2a\u5fc3\u5462\uff1f    \n\u53ef\u4ee5\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6392\u4e00\u4e0b\u5e8f    \n\u7136\u540e\u5982\u679c\u4f18\u5148\u961f\u5217\u4e2d\u7684\u5143\u7d20\u6570\u91cf    \n\u5c0f\u4e8e\u8fd9\u4e2a\u70b9\u7684\u65f6\u95f4    \n\u90a3\u5c31\u76f4\u63a5\u653e\u5165\u4f18\u5148\u961f\u5217     \n\uff08    \n\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u7684\u65f6\u95f4\u4e4b\u524d\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5355\u4f4d    \n\u90fd\u662f\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u5de5\u4f5c\u7684   \n\u6240\u4ee5\u5982\u679c\u5143\u7d20\u6570\u91cf\u5c0f\u4e8e\u8fd9\u4e2a\u65f6\u95f4   \n\u90a3\u5c31\u662f\u65f6\u95f4\u8fd8\u7ef0\u7ef0\u6709\u4f59   \n\u4e0d\u9700\u8981\u8003\u8651\u4f18\u4e0d\u4f18\u7684    \n\u653e\u8fdb\u53bb\u5c31\u884c    \n\u53cd\u6b63\u591a\u653e\u4e00\u5b9a\u6bd4\u5c11\u653e\u66f4\u4f18    \n\uff09    \n\u53cd\u4e4b\uff0c    \n\u5219\u60f3\u4e00\u4e0b    \n\u8fd9\u4e00\u4e2a\u5229\u6da6\u5982\u679c\u6bd4\u524d\u9762\u67d0\u4e00\u4e2a\u65f6\u95f4\u5355\u4f4d\u505a\u7684\u5de5\u4f5c\u5f97\u5230\u7684\u5229\u6da6\u66f4\u5927    \n\u90a3\u5982\u679c\u5728\u90a3\u4e2a\u65f6\u95f4\u5355\u4f4d\u505a\u8fd9\u4e2a\u5de5\u4f5c\u5c31\u4f1a\u53d8\u5f97\u66f4\u4f18   \n\u6709\u70b9\u53cd\u6094\u7684\u610f\u601d      \n\u8fd9\u4e2a\u65f6\u5019\u961f\u9996\u5c31\u662f\u4e00\u4e2a\u6700\u597d\u7684\u88ab\u66ff\u6362\u7684\u5bf9\u8c61    \n\u8fd9\u5f88\u663e\u7136\u5c31\u4e0d\u8d58\u8ff0\u4e86    \n\u7136\u540e\u5904\u7406\u5b8c\u6210\u4e4b\u540e\u5c06\u4f18\u5148\u961f\u5217\u91cc\u9762\u5168\u90e8\u7684\u503c\u52a0\u8d77\u6765\u5c31\u662f\u4e86      \n### \u3010\u6ce8\u610f\u3011\n\u4f18\u5148\u961f\u5217\u662f\u5c0f\u6839\u5806\u7684\u54e6    \n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#define int long long\nusing namespace std;\nconst int Max = 1000006;\nstruct node\n{\n\tint t;\n\tint v;\n}a[Max];\n\nbool cmp(const node x,const node y)\n{\n\treturn x.t < y.t;\n}\npriority_queue<int,vector<int>,greater<int> >q;\nsigned main()\n{\n//\tfreopen(\"work.in\",\"r\",stdin);\n\tint n;\t\n\tcin >> n;\n\tfor(register int i = 1;i <= n;++ i)\n\t\tcin >> a[i].t >> a[i].v;\n\tsort(a + 1,a + 1 + n,cmp);\n\tint ans = 0;\n\tfor(register int i = 1;i <= n;++ i)\n\t{\n\t\tif(a[i].t > q.size())\n\t\t{\n\t\t\tq.push(a[i].v);\n\t\t\tans += a[i].v;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(a[i].v > q.top())\n\t\t\t{\n\t\t\t\tans -= q.top();\n\t\t\t\tq.pop();\n\t\t\t\tq.push(a[i].v);\n\t\t\t\tans += a[i].v;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1571216581,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "# Solution\n\u5f88\u5bb9\u6613\u60f3\u5230\u6309\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u56e0\u4e3a\u5b83\u7684\u622a\u6b62\u65f6\u95f4\u8d8a\u957f,\u6211\u4eec\u5c31\u53ef\u4ee5\u4e86\u628a\u524d\u9762\u7684\u65f6\u95f4\u53bb\u7559\u7ed9\u5176\u4ed6\u7269\u54c1,\u7136\u540e\u8d2a\u5fc3\u7684\u53bb\u9009,\u4f46\u662f\u8fd9\u6837\u4f1aWA,\u4e3a\u4ec0\u4e48?\n\n\u770b\u4e00\u4e0b\u8fd9\u79cd\u60c5\u51b5,\u6211\u4eec\u5728\u524d\u9762\u9009\u4e86\u4ef7\u503c\u8f83\u5c0f\u7684\u5de5\u4f5c,\u4f46\u662f\u5f53\u524d\u6709\u4e00\u4e2a\u4ef7\u503c\u6bd4\u5b83\u5927\u5f97\u591a\u7684\u5de5\u4f5c\u6211\u4eec\u5374\u6ca1\u6cd5\u9009,\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u540e\u6094,\u6240\u4ee5\u8fd9\u662f\u4e00\u9053\u53ef\u4ee5\u53cd\u6094\u7684\u8d2a\u5fc3\u9898\n\n\u90a3\u4e48\u600e\u4e48\u53cd\u6094\u5462?\u6211\u4eec\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u53bb\u7ef4\u62a4,\u6bcf\u6b21\u9009\u7684\u5de5\u4f5c,\u6211\u4eec\u628a\u5b83\u7684\u4ef7\u503c\u4e22\u8fdb\u5c0f\u6839\u5806,\u5982\u679c\u78b0\u5230\u4e00\u4e2a\u9009\u4e0d\u4e86\u7684\u5de5\u4f5c,\u6211\u4eec\u5c31\u62ff\u5b83\u548c\u5806\u9876\u6bd4\u8f83,\u5982\u679c\u6bd4\u5b83\u5927,\u90a3\u4e48\u5806\u9876\u5176\u5b9e\u6ca1\u5fc5\u8981\u9009\u7684,\u6240\u4ee5\u628a\u5b83\u5f39\u51fa\u53bb\n\n\u5177\u4f53\u60c5\u51b5\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u5462?(\u4ee5\u4e0b\u6211\u4eec\u7528$t$\u8868\u793a\u5de5\u4f5c\u7684\u622a\u6b62\u65f6\u95f4)\n\n\u56e0\u4e3a\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u53ea\u80fd\u505a\u4e00\u4e2a\u5de5\u4f5c,\u6240\u4ee5\u5806\u7684\u5143\u7d20\u4e2a\u6570\u8868\u793a\u81f3\u5c11\u5df2\u7ecf\u8fc7\u4e86$size$\u4e2a\u5355\u4f4d\u65f6\u95f4\n```\n1. \u5f53\u524d\u5de5\u4f5c\u7684t\u5c0f\u4e8e\u5806\u7684\u5143\u7d20\u4e2a\u6570,\u8bf4\u660e\u5f53\u524d\u5de5\u4f5c\u5df2\u7ecf\u622a\u6b62\u4e86,\u4e0d\u7528\u7ba1\n2. \u5f53\u524d\u5de5\u4f5c\u7684t\u5927\u4e8e\u5806\u5185\u5143\u7d20\u4e2a\u6570,\u76f4\u63a5\u63d2\u5165\n3. \u5f53\u524d\u5de5\u4f5c\u7684t\u7b49\u4e8e\u5806\u5185\u5143\u7d20\u4e2a\u6570,\u4e0e\u5806\u9876\u6bd4\u8f83,\u770b\u8c01\u66f4\u4f18\n```\n\u6b22\u8fce\u8e29\u535a\u5ba2[real_l](https://www.cnblogs.com/real-l/p/9911297.html)\n# Code\n```cpp\n#include<bits/stdc++.h>\n#define in(i) (i=read())\n#define il extern inline\n#define rg register\n#define Min(a,b) ((a)<(b)?(a):(b))\n#define Max(a,b) ((a)>(b)?(a):(b))\n#define lol long long\nusing namespace std;\n\nconst lol N=1e6+10;\n\nlol read() {\n    lol ans=0, f=1; char i=getchar();\n    while (i<'0' || i>'9') {if(i=='-') f=-1; i=getchar();}\n    while (i>='0' && i<='9') ans=(ans<<1)+(ans<<3)+(i^48), i=getchar();\n    return ans*f;\n}\n\nstruct Node {\n    lol day,v;\n    bool operator < (const Node &a) const {return day<a.day;}\n}t[N];\n\npriority_queue<lol,vector<lol>,greater<lol> >q;\n\nint main()\n{\n    lol n,ans=0; in(n);\n    for (lol i=1;i<=n;i++)\n        in(t[i].day), in(t[i].v);\n    sort(t+1,t+1+n);\n    for (lol i=1;i<=n;i++) {\n        if(t[i].day<q.size()) continue;\n        else if(t[i].day==q.size()) {\n            if(t[i].v>q.top()) {\n                ans-=q.top(); q.pop();\n                q.push(t[i].v); ans+=t[i].v;\n            }\n        }else ans+=t[i].v,q.push(t[i].v);\n    }cout<<ans<<endl;\n}\n```",
        "postTime": 1541420667,
        "uid": 45210,
        "name": "kikuss",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "$\\text{2020.10.28 UPD}$\uff1a\u4fee\u6539\u4e86$markdown$&&\u6da6\u8272\u4e86\u8bed\u8a00\uff0c\u4f7f\u80fd\u66f4\u6e05\u6670\u7684\u7406\u89e3\u601d\u8def\n\n------------------------------\n## \u611f\u8c22\u6211\u7684\u795e\u4ed9\u540c\u684c[\u661f\u68cb\u5c45](https://www.luogu.com.cn/user/237821)\n\n\u601d\u8def\uff1a\u8d2a\u5fc3\n\n\u4e0e\u9898\u89e3\u91cc\u7684\u53cd\u6094\u8d2a\u5fc3\u4e0d\u540c\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u4e0d\u540c\u7684\u8d2a\u5fc3\u3002\u6211\u4eec\u5148\u5c06$D_i$**\u4ece\u5927\u5230\u5c0f**\u6392\u5e8f\u3002\u63a5\u7740\u6211\u4eec\u6765\u60f3\u4e00\u60f3\uff0c\u663e\u7136\uff0c\u5728\u6700\u7406\u60f3\u7684\u72b6\u6001\u4e0b\uff0c**\u6211\u4eec\u6bcf\u4e2a\u5de5\u4f5c\u90fd\u53ef\u4ee5\u5b8c\u6210**\uff08$D_i\\leqslant 10^5$\uff09\u3002\u7ee7\u7eed\u5206\u6790\uff0c\u5c06\u6240\u6709$D_i$\u76f8\u540c\u7684$P_i$\u653e\u8fdb$priority$_$queue$\u91cc\u3002\u82e5$D_{i+1}\\ne D_i$\uff0c\u5728\u4e0d\u8003\u8651$D_i$\u4e0e$D_{i+1}$\u7684$P_i$\u5927\u5c0f\u7684\u524d\u63d0\u4e0b\uff0c\u505a\u76f8\u540c\u7684$D_i$\u4e2d$P_i$\u6700\u5927\u7684$D_i - D_{i+1}$\u4e2a\u5de5\u4f5c\uff08\u5269\u4f59\u7684$D_i$\u7684\u5de5\u4f5c\u4e00\u5b9a\u4f1a\u4e0e\u540e\u9762\u7684\u5de5\u4f5c\u53d1\u751f\u65f6\u95f4\u51b2\u7a81\uff09\u6240\u4ee5\u5c06\u5269\u4f59$D_i$\u5de5\u4f5c\u7684$P_i$\u5148\u4fdd\u7559\u5728\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u4e0e\u540e\u9762\u5de5\u4f5c\u7684$P_j$\u6bd4\u5927\u5c0f\uff0c\u53d6\u8f83\u5927\u503c$\\text{ans+=max(P[i],P[j])}$,\u4f9d\u6b21\u7c7b\u63a8\u3002\n\n---------------------\n$code$: \n```cpp\n#include <stdio.h>\n#include <queue>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nstruct work {int t, v;} a[100005];//\u7ed3\u6784\u4f53,t\u8868\u793a\u5355\u4f4d\u65f6\u95f4\uff1bv\u8868\u793a\u5229\u6da6\nlong long ans;//\u4e0d\u5f00long long \u89c1\u7956\u5b97\npriority_queue <int, vector<int> > q;//\u5b9a\u4e49\u4e00\u4e2a\u5c0f\u6839\u5806\u6765\u7ef4\u62a4\u6700\u5927v[i]\ninline bool cmp(work a, work b) {return a.t > b.t;}//\u5c06\u5355\u4f4d\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\nmain() {\n\tint n; scanf (\"%d\", &n);\n\tfor (register int i = 1; i <= n; i ++) scanf (\"%d %d\", &a[i].t, &a[i].v);//\u8bfb\u5165\n\tsort (a + 1, a + n + 1, cmp); a[n + 1].t = a[n + 1].v = 0;//\u8fb9\u754c\uff0c\u867d\u7136\u9ed8\u8ba4\u662f0\uff0c\u4f46\u662f\u8981\u77e5\u9053\n\tfor (register int i = 1; i <= n; i ++) {\n\t\tq.push(a[i].v);\n\t\tint c = a[i].t - a[i + 1].t;\n\t\twhile (!q.empty() && c --) {ans += q.top(); q.pop();}//\u5f53\u4f18\u5148\u961f\u5217\u4e0d\u4e3a\u7a7a\u4e14a[i].t != a[i+1].t\u65f6\uff0cans\u7d2f\u52a0\n\t}\n\tprintf (\"%lld\\n\", ans); return 0;//end\n}\n```\n\n$Q:$\n\u4e3a\u4ec0\u4e48$ans$\u7d2f\u52a0\u5230$c=0$\u65f6\u4f18\u5148\u961f\u5217\u4e0d\u9700\u8981\u6e05\u7a7a\uff1f\n\n$A:$\n\u56e0\u4e3a\u9700\u8981\u4e0e\u540e\u9762\u7684$P_j$\u6bd4\u8f83\u5927\u5c0f\uff0c\u53d6\u5229\u6da6\u5927\u7684",
        "postTime": 1603801023,
        "uid": 55740,
        "name": "\u4e27\u9ed1\u798f\u9020",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]Work Scheduling G\u3011"
    },
    {
        "content": "# $Work\\ Scheduling$\n## \u8d2a\u5fc3\u7b97\u6cd5\u4e2d\u7684\u540e\u6094\u7b97\u6cd5\n\n\u5047\u8bbe\u5b81\u662f\u8d2a\u5fc3\u7b97\u6cd5\u8ba1\u7b97\u673a\u82b1$Q$\uff0c\u540e\u6094\u7b97\u6cd5\u6d41\u7a0b\u5927\u81f4\u5982\u4e0b\n\n\u82b1$Q$\uff1a\u5c0f\u5b69\u5b50\u624d\u505a\u9009\u62e9\uff0c\u6211\u5168\u90fd\u8981\uff01\uff08\u5047\u8bbe\u5168\u505a\uff0c\u6309\u65f6\u95f4\u6392\u5e8f\uff09\n\n\u82b1$Q$\uff1a\u54a6\uff0c\u505a\u8fd9\u4e2a\u5de5\u4f5c\uff08\u667a\u8fd9\u4e2a\u969c\uff09\u6709\u65f6\u95f4\u8036\uff0c\u505a\uff01\n\n\u82b1$Q$\uff1a\u8349\uff0c\u6765\u4e0d\u53ca\u4e86\u6765\u4e0d\u53ca\u4e86\u3002\u54c7\uff01\u8fd9\u4e2a\u5de5\u4f5c\u6bd4\u4e4b\u524d\u90a3\u4e2a\u5de5\u4f5c\u8d5a\u7684\u94b1\u591a\u8036\uff01\u7838\u74e6\u9c81\u591a\uff01\uff08\u4e4b\u524d\u7684\u5de5\u4f5c\u4e0d\u505a\u4e86\uff0c\u6362\u6210\u4e86\u8fd9\u4e2a\u5de5\u4f5c\uff09\n\n\u90a3\u4e48\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u201c\u4e4b\u524d\u7684\u5de5\u4f5c\u201d\u5462\uff1f\u5927\u6839\u5806\u7ef4\u62a4\u5373\u53ef\n```cpp\n#include<bits/stdc++.h>\n#define debug(x) cerr<<#x<<' '<<x<<endl\nusing namespace std;\ntemplate<class T>void read(T &__x){\n\t__x=0;short __f=1;char __ch=getchar();\n\twhile(__ch<'0'||__ch>'9'){if(__ch=='-')__f=-1;__ch=getchar();}\n\twhile(__ch>='0'&&__ch<='9'){__x=(__x<<1)+(__x<<3)+(__ch^48);__ch=getchar();}\n\t__x*=__f;\n}\ntemplate<class T>void write(T x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>=10)write(x/10);\n\tputchar(x%10+48);\n}\n#define maxn 100010\n#define int long long\nint n;\nstruct point{\n\tint t,w;\n\tbool operator<(point x)const{\n\t\treturn t<x.t;\n\t}\n}s[maxn];\npriority_queue<int,vector<int>,greater<int> >q;\nint ans;\nsigned main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"testdata.in\",\"r\",stdin);\n#endif\n\tread(n);\n\tfor(int i=1;i<=n;i++)read(s[i].t),read(s[i].w);\n\tsort(s+1,s+n+1);\n\tfor(int i=1;i<=n;i++)\n\tif(s[i].t<=q.size()){//\u6ca1\u65f6\u95f4\u4e86\uff0c\u8981\u53cd\u6094\u4e86\n\t\tif(q.top()<s[i].w){\n\t\t\tans+=s[i].w-q.top();\n\t\t\tq.pop();\n\t\t\tq.push(s[i].w);\n\t\t}\n\t}else{\n\t\tans+=s[i].w;\n\t\tq.push(s[i].w);\n\t}\n\twrite(ans);\n}\n```\n\u540c\u6837\u601d\u8def\u7684\u9898\u76ee[OHHHHH](https://www.luogu.com.cn/problem/P4053)",
        "postTime": 1597935095,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]Work Scheduling G\u3011"
    },
    {
        "content": "\u60f3\u8981\u66f4\u4e30\u5bcc\u7684\u5c55\u793a\uff0c\u8bf7\u79fb\u6b65[\u6211\u7684Blog](https://www.cnblogs.com/nth-element/p/11785043.html)\n\n***\n\n\u82e5\u60f3\u8981\u6df1\u5165\u5b66\u4e60\u53cd\u6094\u8d2a\u5fc3\uff0c[\u4f20\u9001\u95e8]( https://www.cnblogs.com/nth-element/p/11768155.html )\u3002\n\n***\n\n**Description**:\n\n\u6709 $n$ \u9879\u5de5\u4f5c\uff0c\u6bcf $i$ \u9879\u5de5\u4f5c\u6709\u4e00\u4e2a\u622a\u6b62\u65f6\u95f4 $D_i$ \uff0c\u5b8c\u6210\u6bcf\u9879\u5de5\u4f5c\u53ef\u4ee5\u5f97\u5230\u5229\u6da6 $P_i$ \uff0c\u6c42\u6700\u5927\u53ef\u4ee5\u5f97\u5230\u591a\u5c11\u5229\u6da6\u3002\n\n**Method**:\n\n\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u60f3\u5230\u53cd\u6094\u8d2a\u5fc3\uff0c\u53ea\u662f\u60f3\u5230\u4e00\u4e2a\u9519\u8bef\u7684\u8d2a\u5fc3\u7b97\u6cd5\u3002\u6309\u7167\u622a\u6b62\u65f6\u95f4\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u5229\u6da6\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u7edf\u8ba1\u4e00\u904d\u5373\u53ef\u3002\n\n\u663e\u7136\u4e0a\u9762\u7684\u8d2a\u5fc3\u7b97\u6cd5\u523b\u5370\u88abHack\u6389\u3002\u53ef\u4ee5\u5148\u4e0d\u9009\u62e9\u5f53\u524d\u622a\u6b62\u65f6\u95f4\u7684\u5229\u6da6\uff0c\u7b49\u4e00\u4e0b\u9009\u62e9\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5229\u6da6\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u66f4\u5927\u7684\u6700\u4f18\u89e3\u3002\n\n\u4f46\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u8d2a\u5fc3\u7b56\u7565\u9519\u8bef\u7684\u539f\u56e0\u662f\u5f53\u524d\u7684\u6700\u4f18\u89e3\u53ef\u80fd\u4e0d\u662f\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u663e\u7136\u7b26\u5408\u53cd\u6094\u8d2a\u5fc3\u7684\u601d\u60f3\u3002\u4e8e\u662f\u6211\u4eec\u7528\u4e00\u4e2a\u53cd\u6094\u5806\u7ef4\u62a4\u6700\u4f18\u89e3\u3002\n\n\u5047\u5982\u6ee1\u8db3\u9898\u8bbe\u6761\u4ef6\uff08\u5373\u6ca1\u6709\u8d85\u51fa\u622a\u6b62\u65f6\u95f4\uff09\u5c31\u5206\u6210\u4e24\u79cd\u60c5\u51b5\uff1a\u82e5\u5f53\u524d\u7684\u6700\u4f18\u89e3\u6bd4\u539f\u6765\u7684\u6700\u4f18\u89e3\uff08\u5806\u9876\uff09\u66f4\u4f18\u79c0\uff0c\u6211\u4eec\u5c31\u66f4\u65b0\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u628a\u539f\u6765\u7684\u6700\u4f18\u89e3\u4e22\u51fa\u53bb\uff0c\u518d\u628a\u5f53\u524d\u7684\u6700\u4f18\u89e3\u653e\u8fdb\u53bb\uff08\u5373\u53cd\u6094\u7b56\u7565\uff09\uff1b\u53cd\u4e4b\uff0c\u5c31\u4e0d\u7ba1\u4e86\u3002\u5047\u5982\u4e0d\u6ee1\u8db3\u7279\u8bbe\u6761\u4ef6\uff0c\u5c31\u628a\u5f53\u524d\u7684\u6700\u4f18\u89e3\u4e22\u8fdb\u5806\u91cc\uff0c\u66f4\u65b0\u5168\u5c40\u6700\u4f18\u89e3\u5373\u53ef\u3002\n\n**Code**:\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long \n#define Maxn 100010\ninline void read(int &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\nusing namespace std;\nint n;\nstruct node\n{\n    int D,P;\n    bool operator <(const node &x)const\n    {\n        return D<x.D;\n    }\n}job[Maxn];\npriority_queue<int,vector<int>,greater<int> >qu;\nsigned main()\n{\n    //\tfreopen(\"Job.in\",\"r\",stdin);\n    //\tfreopen(\"Job.out\",\"w\",stdout);\n    read(n);\n    for(int i=1;i<=n;i++)\n    {\n        read(job[i].D),read(job[i].P);\n    }\n    sort(job+1,job+n+1);\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(qu.size()>=job[i].D)//\u7b26\u5408\u6761\u4ef6\n        {\n            if(qu.top()<job[i].P)//\u5f53\u524d\u7684\u6700\u4f18\u89e3\u6bd4\u539f\u6765\u7684\u6700\u4f18\u89e3\uff08\u5806\u9876\uff09\u66f4\u4f18\u79c0\n            {\n                ans-=qu.top();//\u66f4\u65b0\u5168\u5c40\u6700\u4f18\u89e3\n                qu.pop();//\u628a\u539f\u6765\u7684\u6700\u4f18\u89e3\u4e22\u51fa\u53bb\n                qu.push(job[i].P);//\u628a\u5f53\u524d\u7684\u6700\u4f18\u89e3\u653e\u8fdb\u53bb\n                ans+=job[i].P;//\u66f4\u65b0\u5168\u5c40\u6700\u4f18\u89e3\n            }\n        }else//\u4e0d\u7b26\u5408\u6761\u4ef6\n        {\n            qu.push(job[i].P);//\u628a\u5f53\u524d\u7684\u6700\u4f18\u89e3\u4e22\u8fdb\u5806\u91cc\n            ans+=job[i].P;//\u66f4\u65b0\u5168\u5c40\u6700\u4f18\u89e3\n        }\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1572719843,
        "uid": 77131,
        "name": "nth_element",
        "ccfLevel": 5,
        "title": "P2949 \u9898\u89e3"
    },
    {
        "content": "- \u524d\u8a00\uff1a\n\n\t\u4eca\u5929\u6821\u5185oj\u7684\u6bd4\u8d5b\u9898\u76ee\uff1b\n\t\n    \u8fd9\u9898\u662f\u8d2a\u5fc3+\u4f18\u5148\u961f\u5217\uff1b\n------------\n- \u601d\u8def\uff1a\n\t\n    \u5148\u7528\u622a\u6b62\u65e5\u671f\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\n\t\n    \u679a\u4e3e1\u5230n\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\u7528cnt\u8bb0\u5f55\u9009\u4e86\u51e0\u4e2a\u5de5\u4f5c\uff1b\n    ```cpp\n\t1.\u5f53cnt\u5c0f\u4e8e\u5f53\u524d\u679a\u4e3e\u5230\u7684\u6570\uff08\u7528i\u8868\u793a\uff09\u7684\u622a\u6b62\u65e5\u671f\u65f6\uff1a\n\t\t\u5c06i\u7684\u4ef7\u503c\u52a0\u5230ans\u91cc\uff0c\u5e76\u628a\u5f53\u524d\u4ef7\u503c\u5165\u961f\uff08\u8981\u8f6c\u4e3a\u5c0f\u6839\u5806\uff09\n\t\tif(cnt!=e[i].d){\n\t\t\tcnt++;\n\t\t\tq.push(-e[i].p);//\u8f6c\u4e3a\u5c0f\u6839\u5806\n\t\t\tans+=e[i].p;\n\t\t}\n   \t2.\u5f53cnt\u7b49\u4e8e\u5f53\u524d\u679a\u4e3e\u5230\u7684\u6570\uff08\u7528i\u8868\u793a\uff09\u7684\u622a\u6b62\u65e5\u671f\u65f6\uff1a\n    \t\u5982\u679ci\u7684\u4ef7\u503c\u6bd4\u961f\u9996\u5927\uff0c\u90a3\u4e48\u5c31\u66ff\u6362\u6389\u961f\u9996\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8981\u8f6c\u6210\u5c0f\u6839\u5806\u7684\u539f\u56e0\n      \telse{\n\t\t\tint k=-q.top();//\u5c0f\u6839\u5806\uff0c\u5806\u9876\n\t\t\tif(k<e[i].p){\n\t\t\t\tq.pop();\n\t\t\t\tans+=e[i].p-k;//\u66ff\u6362\n\t\t\t\tq.push(-e[i].p);//\u5165\u961f\n\t\t\t}\n\t\t}  \n\t```\n\n------------\n- \u4ee3\u7801\uff1a\n    ```cpp\n    #include<cstdio>\n    #include<queue>\n    #include<algorithm>\n    using namespace std;\n    int n;\n    long long ans,cnt;\n    priority_queue<int> q;\n    struct node{\n        int d,p;\n    }e[100010];\n    bool cmp(node a,node b){\n        return a.d<b.d;\n    }\n    int main(){\n    //\tfreopen(\"study.in\",\"r\",stdin);\n    //\tfreopen(\"study.out\",\"w\",stdout);\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++)\n            scanf(\"%d %d\",&e[i].d,&e[i].p);\n        sort(e+1,e+1+n,cmp);\n        for(int i=1;i<=n;i++){\n            if(cnt!=e[i].d){\n                cnt++;\n                q.push(-e[i].p);\n                ans+=e[i].p;\n            }\n            else{\n                int k=-q.top();\n                if(k<e[i].p){\n                    q.pop();\n                    ans+=e[i].p-k;\n                    q.push(-e[i].p);\n                }\n            }\n        }\n        printf(\"%lld\",ans);\n        return 0;\n    }\n    ```\n\n\n------------\n- \u63d0\u9192\uff1a\u6ce8\u610f\u50a8\u5b58\u65f6\u8f6c\u4e3a\u5c0f\u6839\u5806\uff08~~\u60e8\u75db\u7684\u6559\u8bad~~\uff09",
        "postTime": 1564648064,
        "uid": 114791,
        "name": "D\u611a\u8005",
        "ccfLevel": 0,
        "title": "P2949 [USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u8d2a\u5fc3\u52a0\u4e8c\u53c9\u6811\n\n\u8d2a\u5fc3\u7b56\u7565\uff1a\u5728\u4e00\u4e2a\u5de5\u4f5c\u4e0d\u8d85\u8fc7\u622a\u6b62\u65e5\u671f\u524d\uff0c\u5c3d\u91cf\u665a\u505a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u95f4t\uff0c\u4fdd\u8bc1\u4e0d\u8d85\u51fa\u622a\u81f3\u65f6\u95f4\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u91cf\u505a\u5229\u6da6\u524dt\u9ad8\u7684\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u626b\u63cf\u6bcf\u4e2a\u5de5\u4f5c\uff0c\u52a8\u6001\u7ef4\u62a4\u6ee1\u8db3\u4e0a\u6027\u8d28\u7684\u8ba1\u5212\u3002\n\n\u5177\u4f53\u601d\u8def\uff1a\n\n\u5efa\u7acb\u4e00\u4e2a\u521d\u59cb\u4e3a\u7a7a\u7684\u5c0f\u7a7a\u5806\uff08\u8282\u70b9\u6743\u503c\u4e3a\u5de5\u4f5c\u5229\u6da6\uff09\uff0c \u628a\u5de5\u4f5c\u6309\u622a\u6b62\u65f6\u95f4\u6392\u5e8f\uff0c\u5f00\u59cb\u626b\u63cf\uff1b\n\n1.\u82e5\u5f53\u524d\u5de5\u4f5c\u7684\u622a\u6b62\u65f6\u95f4t\u7b49\u4e8e\u5f53\u524d\u5806\u4e2d\u7684\u8282\u70b9\uff08\u7b2cn\u4e2a\u8282\u70b9\u4ee3\u8868\u7b2cn\u4e2a\u5355\u4f4d\u65f6\u95f4\u505a\u7684\u5de5\u4f5c\u7684\u5229\u6da6\uff09\u4e2a\u6570\uff0c\u5219\u8bf4\u660e\u6b64\u65b9\u6848\u4e0b\uff0c\u524dt\u4e2a\u5355\u4f4d\u65f6\u95f4\u5df2\u7ecf\u5b89\u6392\u4e86t\u4e2a\u5de5\u4f5c\u3002\u6b64\u65f6\uff0c\u82e5\u6b64\u5de5\u4f5c\u5229\u6da6\u5927\u4e8e\u5806\u9876\u6743\u503c\uff08\u5f53\u524d\u8ba1\u5212\u7684\u6700\u4f4e\u5229\u6da6\uff09\uff0c\u90a3\u4e48\u5c06\u5f53\u524d\u5de5\u4f5c\u66ff\u6362\u6389\u5806\u9876\u3002\n\n2.\u82e5\u5f53\u524d\u5de5\u4f5c\u7684\u622a\u6b62\u65f6\u95f4\u5927\u4e8e\u5806\u4e2d\u7684\u8ba1\u5212\u5de5\u4f5c\u4e2a\u6570\uff0c\u76f4\u63a5\u628a\u5176\u63d2\u5165\u5806\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define SIZE 1000005\n#define int long long\nusing namespace std;\ninline int read(){int k = 0, d = 1; char ch = getchar();\n\twhile(ch != '-' && (ch > '9' || ch < '0')) ch = getchar();\n\tif(ch == '-') d = -1, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') k = k * 10 + ch - '0', ch = getchar(); return k * d;}\nvoid write(int x){\n\tif (x < 0) x = -x, putchar('-');\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + '0');}\nstruct N{int di, pi;}work[SIZE];\nbool cmp(N a, N b){return a.di < b.di;}\nint n = read(), heap[SIZE], p, ans;\nvoid up(int p){\n\twhile(p > 1){\n\t\tif(heap[p] < heap[p >> 1]){\n\t\t\tswap(heap[p], heap[p >> 1]);\n\t\t\tp >>= 1;}\n\t\telse break;}}\nvoid Insert(int val){\n\theap[++ p] = val;\n\tup(p);}\nint GetTop(){return heap[1];}\nvoid down(int w){\n\tint s = w << 1;\n\twhile(s <= p){\n\t\tif(s < p && heap[s] > heap[s + 1]) s ++;\n\t\tif(heap[s] < heap[w]){\n\t\t\tswap(heap[s], heap[w]);\n\t\t\tw = s; s <<= 1;\n\t\t}\n\t\telse break;\n\t}\n}\nvoid Extract(){\n\theap[1] = heap[p --];\n\tdown(1);\n}\nint del(){\n\tint ret = heap[1], father = 1, son = father << 1;\n    if(son + 1 < p && heap[son + 1] < heap[son]) son ++;\n    while(son < p && heap[son] < heap[p])\n    {\n        heap[father] = heap[son];\n        father = son;\n        son = father << 1;\n        if(son + 1 < p && heap[son + 1] < heap[son])\n        son++;}\n    heap[father] = heap[p];\n    p --;\n    return ret;}\nsigned main(){\n\tfor(int w = 0; w < n; ++ w){work[w].di = read(), work[w].pi = read();}\n\tsort(work, work + n, cmp);\n\tfor(int w = 0; w < n; ++ w){\n\t\tif(p < work[w].di){Insert(work[w].pi); ans += work[w].pi;}\n\t\telse{\n\t\t\tif(work[w].pi > heap[1]){Insert(work[w].pi); ans += work[w].pi - del();}}}\n\twrite(ans);\n}\n\n```",
        "postTime": 1546420938,
        "uid": 127683,
        "name": "WaKing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8003\u7684\u662f**\u5e26\u53cd\u6094\u7684\u8d2a\u5fc3**\n\n\u7531\u8d2a\u5fc3\u7684\u7b56\u7565\u5f97\uff1a\n\n\u5148\u6309\u7167\u65f6\u95f4\u5148\u540e\u987a\u5e8f\u7ed9\u5de5\u4f5c\u6392\u5e8f\n\n\u63a5\u7740\u4ece\u524d\u5f80\u540e\u66f4\u65b0\u7b54\u6848\n\n\u5f53\u9047\u5230\u4e00\u4e2a\u65f6\u95f4\u5141\u8bb8\u7684\u5de5\u4f5c\u65f6\uff0c\u7b54\u6848\u52a0\u4e0a\u8fd9\u4e2a\u5de5\u4f5c\u7684\u4ef7\u503c\uff0c\u628a\u8fd9\u4e2a\u5de5\u4f5c\u52a0\u5165\u5c0f\u6839\u5806\n\n\u5f53\u9047\u5230\u4e00\u4e2a\u65f6\u95f4\u4e0d\u5141\u8bb8\u7684\u5de5\u4f5c\u65f6\uff0c\u5728\u5c0f\u6839\u5806\u4e2d\u627e\u5230\u4e00\u4e2a\u4ef7\u503c\u6700\u5c0f\u7684\u5de5\u4f5c\uff0c\u5982\u679c\u5c0f\u4e8e\u5f53\u524d\u5de5\u4f5c\u7684\u4ef7\u503c\uff0c\u5c31\u4e0d\u505a\u4e4b\u524d\u7684\u8fd9\u4e2a\u5de5\u4f5c\uff0c\u7136\u540e\u7b54\u6848\u51cf\u53bb\u8fd9\u4e2a\u5de5\u4f5c\u7684\u4ef7\u503c\uff0c\u8f6c\u800c\u505a\u73b0\u5728\u8fd9\u4e2a\u5de5\u4f5c\uff0c\u7b54\u6848\u52a0\u4e0a\u8fd9\u4e2a\u5de5\u4f5c\u7684\u4ef7\u503c\n\n\u5bf9\u4e8e\u65f6\u95f4\u7684\u6392\u5e8f\u548c\u5c0f\u6839\u5806\u7684\u6392\u5e8f\u5173\u952e\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u53cb\u5143\u51fd\u6570\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff1a\n\n\u5bf9\u4e8e $sort$\uff0c\u91cd\u8f7d $<$ \u8fd0\u7b97\u7b26\uff0c\u4f7f\u5176\u6309\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u5bf9\u4e8e $greater$\uff0c\u91cd\u8f7d $>$ \u8fd0\u7b97\u7b26\uff0c\u4f7f\u5176\u6309\u4ef7\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<algorithm>\n\n#define LL long long\n\nconst int maxn = 1e6 + 10;\n\nstruct Node {\n\tint d, p;\n\tfriend bool operator < (Node x, Node y) {\n\t\treturn x.d < y.d;\n\t}\n\tfriend bool operator > (Node x, Node y) {\n\t\treturn x.p > y.p;\n\t}\n} a[maxn];\n\nusing std::priority_queue;\nusing std::vector;\n\npriority_queue <Node, vector <Node>, std::greater<Node> > q;\n\nint n;\nLL ans;\n\nint main() {\n\tscanf(\"%d\", &n);\n\t\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d%d\", &a[i].d, &a[i].p);\n\t}\n\t\n\tstd::sort(a + 1, a + 1 + n);\n\t\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (a[i].d > (int)q.size()) {\n\t\t\tans += a[i].p;\n\t\t\tq.push(a[i]); \n\t\t}\n\t\telse {\n\t\t\tif (a[i].p > q.top().p) {\n\t\t\t\tans += a[i].p - q.top().p;\n\t\t\t\tq.pop();\n\t\t\t\tq.push(a[i]); \n\t\t\t}\n\t\t}\n\t}\n\t\n\tprintf(\"%lld\\n\", ans);\n}\n```",
        "postTime": 1538720512,
        "uid": 77911,
        "name": "lijyya",
        "ccfLevel": 0,
        "title": "P2949[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling"
    },
    {
        "content": "\u672c\u9898\u4e3a\u53ef\u53cd\u6094\u7684\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u6700\u591a\u6709 $10^5$ \u4e2a\u4efb\u52a1\uff0c\u800c\u65f6\u95f4\u4e0a\u9650\u8fbe\u5230 $10^9$\uff0c\u6211\u4eec\u53ef\u8fd1\u4f3c\u8ba4\u4e3a\u65f6\u95f4\u4e3a\u65e0\u9650\u3002\n\n\u6309\u622a\u6b62\u65f6\u95f4\u7684\u5148\u540e\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u679c\u65f6\u95f4\u8db3\u591f\u5c31\u5148\u505a\u622a\u6b62\u65f6\u95f4\u77ed\u7684\uff0c\u540e\u5c06\u5176\u4ef7\u683c\u538b\u5165\u4e00\u4e2a\u5c0f\u6839\u5806\u5185\uff0c\u5982\u679c\u65f6\u95f4\u4e0d\u591f\u770b\u770b\u5806\u9876\u7684\u4ef7\u683c\u82e5\u6bd4\u5176\u5c0f\uff0c\u5219\u653e\u5f03\u5806\u9876\u6240\u4ee3\u8868\u7684\u5de5\u4f5c\uff0c\u53bb\u505a\u4ef7\u503c\u66f4\u9ad8\u7684\u5de5\u4f5c\u3002\n\n## Code\n```\n#include<iostream>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=1e5+5;\nint n;\nint z=0,ans=0;//\u73b0\u5de5\u4f5c\u65f6\u95f4\nstruct work{\n\tint t,p;\n}a[MAXN];\nbool cmp(work u,work v){\n\treturn u.t<v.t;\n}\npriority_queue<int> Q;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i].t>>a[i].p;\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i].t>z){\n\t\t\tQ.push(-a[i].p);\n\t\t\tans+=a[i].p;\n\t\t\tz++;\n\t\t}\n\t\telse if(!Q.empty()&&-Q.top()<a[i].p){\n\t\t\tint k=-Q.top();\n\t\t\tans+=(a[i].p-k);\n\t\t\tQ.pop();\n\t\t\tQ.push(-a[i].p);\n\t\t}\n\t}\n\tcout<<ans;\n}\n```\n",
        "postTime": 1628166260,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "P2949 [USACO09OPEN]Work Scheduling G \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u5206\u6790\uff1a\n\n\u8003\u8651\u8d2a\u5fc3\uff0c\u4e0d\u4e00\u6837\u7684\u662f\u8fd9\u4e2a\u8d2a\u5fc3\u53ef\u4ee5\u53cd\u6094\u3002\n\n\u9996\u5148\u5c06\u6240\u6709\u7684\u4efb\u52a1\u6309\u7167\u65f6\u95f4\u6392\u5e8f\uff0c\u5982\u679c\u53d1\u73b0\u5728\u5f53\u524d\u4efb\u52a1\u5b8c\u6210\u65f6\u95f4\u524d\u8fd8\u6709\u7a7a\u4f59\u65f6\u95f4\uff0c\u90a3\u5c31\u5148\u628a\u8fd9\u4e2a\u4efb\u52a1\u5b8c\u6210\u4e86\u3002\n\n\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u5c31\u8003\u8651\u5c06\u524d\u9762\u7684\u67d0\u4e00\u4e2a\u4efb\u52a1\u9876\u66ff\u6389\uff0c\u5220\u9664\u90a3\u4e2a\u4efb\u52a1\u7684\u5f71\u54cd\uff0c\u7136\u540e\u5b8c\u6210\u5f53\u524d\u4efb\u52a1\uff0c\u4e5f\u5c31\u662f\u53cd\u6094\u3002\n\n\u5220\u9664\u90a3\u4e2a\u4efb\u52a1\u540e\uff0c\u7531\u4e8e\u90a3\u4e2a\u4efb\u52a1\u7684\u65f6\u6548\u5df2\u7ecf\u8fc7\u4e86\uff0c\u800c\u4e14\u4e5f\u4e0d\u53ef\u80fd\u5728\u9876\u66ff\u6389\u4efb\u4f55\u4e00\u4e2a\u4efb\u52a1\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u53ef\u80fd\u518d\u6b21\u8003\u8651\uff0c\u76f4\u63a5\u5220\u6389\u5c31\u884c\u4e86\u3002\n\n------------\n\n\u5b9e\u73b0\u4e0a\uff0c\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u4fdd\u5b58\u5df2\u7ecf\u9009\u4e86\u7684\u4efb\u52a1\uff0c\u7136\u540e\u6309\u7167\u4e0a\u8ff0\u8d2a\u5fc3\u601d\u8def\u6a21\u62df\u5373\u53ef\u3002\n\n\u6ce8\u610f STL \u7684\u4f18\u5148\u961f\u5217\u662f\u4ece\u5927\u5230\u5c0f\u7684\uff0c\u53ef\u4ee5\u53d6\u8d1f\u6570\u653e\u5165\u6216\u8005\u5c06\u5176\u6539\u4e3a\u4ece\u5c0f\u5230\u5927\u4f7f\u7528\u3002\n\n------------\n~~\u8981\u662f\u6211\u4e5f\u80fd\u53cd\u6094\u5c31\u597d\u4e86\u3002~~\n\n------------\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<queue>\nusing namespace std;\npriority_queue<long long,vector<long long>,greater<long long> > q;\nstruct node{\n\tlong long d,p;\n}num[100005];\nbool cmd(node a,node b){\n\treturn a.d<b.d;\n}\nlong long n,now,u;\nlong long ans;\nint main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%lld%lld\",&num[i].d,&num[i].p);\n\tsort(num+1,num+n+1,cmd);\n\tfor(int i=1;i<=n;i++){\n\t\tif(num[i].d>now)u+=num[i].d-now,now=num[i].d;\n\t\tif(u>0){\n\t\t\tu--;\n\t\t\tans+=num[i].p;\n\t\t\tq.push(num[i].p);\n\t\t}\n\t\telse{\n\t\t\tif(q.top()<num[i].p){\n\t\t\t\tans-=q.top();\n\t\t\t\tq.pop();\n\t\t\t\tans+=num[i].p;\n\t\t\t\tq.push(num[i].p);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1626879673,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2949 [USACO09OPEN]Work Scheduling G"
    },
    {
        "content": "**\u9898\u76ee\u4f20\u9001\u95e8\uff1a[P2949 [USACO09OPEN]Work Scheduling G](https://www.luogu.com.cn/problem/P2949)**\n### \u9898\u610f\uff1a\n\u6709 $N$ \u4e2a\u5de5\u4f5c\u3002\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u5de5\u4f5c\uff0c\u5982\u679c\u4f60\u5728\u622a\u6b62\u65f6\u95f4 $D_i$ \u524d\u505a\u5b8c\uff0c\u4f60\u53ef\u4ee5\u83b7\u5229 $P_i$ \uff0c\u95ee\u4f60\u6700\u591a\u80fd\u83b7\u5229\u591a\u5c11\u3002\n### \u601d\u8def\uff1a\n\u4ed4\u7ec6\u4e00\u770b\uff0c\u5509\uff0c\u8ddf[P1230 \u667a\u529b\u5927\u51b2\u6d6a](https://www.luogu.com.cn/problem/P1230)\uff0c[UVA1316 Supermarket](https://www.luogu.com.cn/problem/UVA1316)\u548c[P3093 [USACO13DEC]Milk Scheduling S](https://www.luogu.com.cn/problem/P3093)\u5f88\u50cf~~\u56db\u500d\u7ecf\u9a8c~~\u3002\n\n\u5176\u5b9e\u5df2\u7ecf\u6709\u5f88\u591a\u5927\u4f6c\u8bb2\u8fc7\u5c0f\u6839\u5806\u7684\u601d\u8def\u4e86\uff0c\u8fd9\u91cc\u6211\u5728\u5177\u4f53\u8bb2\u4e00\u4e0b\u3002\n\n\u5148\u5047\u8bbe\u6240\u6709\u5de5\u4f5c\u90fd\u80fd\u505a\u5373\u5229\u6da6\u90fd\u80fd\u62ff\u5230\uff0c\u7136\u540e\u5c06\u5de5\u4f5c\u6309\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f\u3002\n\n\u7136\u540e\u5f00\u59cb\u904d\u5386\u5de5\u4f5c\u3002\u5982\u679c\u8fd8\u6709\u65f6\u95f4\u505a\uff0c\u5c31\u5c06\u8be5\u5de5\u4f5c\u653e\u8fdb\u5806\uff0c\u5426\u5219\uff0c\u5c06\u8be5\u5de5\u4f5c\u4e0e\u5806\u4e2d\u6700\u5c0f\u5229\u6da6\u7684\u5de5\u4f5c\u6bd4\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8981\u7528\u5c0f\u8ddf\u5806\u7684\u539f\u56e0\uff09\u3002\n\n\u5982\u679c\u5229\u6da6\u5927\u4e00\u4e9b\uff0c\u5c06\u8be5\u5de5\u4f5c\u653e\u8fdb\u5806\uff0c\u90a3\u4e2a\u5229\u6da6\u4f4e\u7684\u62ff\u51fa\u6765\uff0c\u540c\u65f6\u5c06\u62ff\u51fa\u6765\u7684\u5de5\u4f5c\u7684\u5229\u6da6\u6263\u9664\u3002\n\n\u5426\u5219\uff0c\u5c31\u4e0d\u5165\u5806\uff0c\u518d\u5c06\u8be5\u5de5\u4f5c\u7684\u5229\u6da6\u6263\u9664\u3002\n### \u6ce8\u610f\u4e8b\u9879\uff1a\n\u5b9a\u4e49\u5806\u65f6\u6ce8\u610f\u4e0d\u8981\u5b9a\u4e49\u6210 `priority_queue<int,vector<int>,greater<int>>q;` \u8fd9\u6837\uff0c\u5426\u5219\u6700\u540e\u7684\u4e24\u4e2a\u5927\u4e8e\u53f7\u4f1a\u88ab\u8ba4\u4e3a\u662f\u4f4d\u8fd0\u7b97\u3002\n\n\u6b63\u786e\u7684\u5199\u6cd5\uff1a\n`priority_queue<int,vector<int>,greater<int> >q;` .\n\n~~\u4e0d\u5f00~~**`long long`**~~\u89c1\u7956\u5b97~~\n### \u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\npriority_queue<int,vector<int>,greater<int> >q;\nstruct thing{int s,t;}a[100005];//\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u662fs\u548ct\ninline bool cmp(thing a,thing b){\n\treturn a.t<b.t;\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tint n;\n\tlong long m=0;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i].t>>a[i].s;\n\t\tm+=a[i].s;\n\t}\n\tsort(a+1,a+1+n,cmp);\n\tfor(int i=1;i<=n;i++){\n\t    if(a[i].t>q.size())//\u8fd9\u91cc\u8bfb\u8005\u53ef\u4ee5\u597d\u597d\u60f3\u60f3\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5199\u5c31\u662f\u6709\u65f6\u95f4\u505a\n\t\t\tq.push(a[i].s);\n\t    else if(q.top()<a[i].s){\n\t\t\tm-=q.top();\n\t    \tq.pop();\n\t    \tq.push(a[i].s);\n\t\t}\n\t    else\n            m-=a[i].s;\n\t}\n\tcout<<m<<endl;\n\treturn 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(NlogN)$ \uff0c\u8db3\u4ee5\u901a\u8fc7 $10^5$ \u7684\u6570\u636e\u3002\n\n~~\u8d76\u7d27\u53bb\u62ff\u56db\u500d\u7ecf\u9a8c\u5427~~\n### \u66f4\u65b0\uff1a\n`2021-05-31`\uff1a\u66f4\u6b63\u4e86\u4e24\u5904\u9519\u522b\u5b57\u3002",
        "postTime": 1622341996,
        "uid": 478461,
        "name": "lfxxx",
        "ccfLevel": 7,
        "title": "P2949 [USACO09OPEN]Work Scheduling G"
    },
    {
        "content": "\u672c\u9898\u662f\u4e00\u9053\u7ecf\u5178\u7684\u8d2a\u5fc3\uff0c\u7528\u51b3\u7b56\u5305\u5bb9\u6027\u6c42\u89e3\uff0c\u65b9\u6cd5\u591a\u6837\u3002\n\n## \u9898\u76ee\u5927\u610f\n\u6709 $n$ \u4e2a\u5546\u54c1\uff0c\u6bcf\u4e2a\u5546\u54c1\u6709\u5229\u6da6 $p_i$ \u548c\u8fc7\u671f\u65f6\u95f4 $d_i$\uff0c\u6bcf\u5929\u53ea\u80fd\u5356\u4e00\u4e2a\u5546\u54c1\uff0c\u8fc7\u671f\u5546\u54c1\u4e0d\u80fd\u5356\uff0c \u6c42\u5982\u4f55\u5b89\u6392\u6bcf\u5929\u5356\u7684\u5546\u54c1\uff0c\u4f7f\u5f97\u5229\u6da6\u6700\u5927\u3002\n\n## \u5927\u4f53\u601d\u8def\n\u5148\u6765\u770b\u4e00\u9053\u5f31\u5316\u7248\uff1a[UVA1316](https://www.luogu.com.cn/problem/UVA1316)\u3002\u6b64\u9898\u4e2d $1\\le n,p_i,d_i\\le 10^4$\u3002\u4e00\u79cd\u663e\u800c\u6613\u89c1\u7684\u8d2a\u5fc3\u7b56\u7565\u662f\u5c06\u5229\u6da6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5546\u54c1\uff0c\u5728\u5176\u8fc7\u671f\u4e4b\u524d\u5c3d\u53ef\u80fd\u665a\u5730\u5356\u51fa\u3002\u8fd9\u6837\uff0c\u8be5\u5546\u54c1\u5bf9\u5176\u4ed6\u5546\u54c1\u5177\u6709\u201c\u51b3\u7b56\u5305\u5bb9\u6027\u201d\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e\u5229\u6da6\u4e3a $p$ \u7684\u5546\u54c1\uff0c\u5c06\u5176\u5c3d\u53ef\u80fd\u665a\u5356\u51fa\u3002\u82e5\u5176\u5728 $d$ \u65f6\u523b\u5356\u51fa\uff0c\u5219 $d$ \u65f6\u523b\u5356\u51fa\u5176\u4ed6\u5546\u54c1\u5229\u6da6\u663e\u7136\u5c0f\u4e8e $p$\uff0c\u800c\u8be5\u5546\u54c1\u5728 $d$ \u65f6\u523b\u5356\u51fa\u5bf9\u5168\u5c40\u9020\u6210\u7684\u5f71\u54cd\u6700\u5c0f\uff0c\u56e0\u6b64\u5c3d\u53ef\u80fd\u665a\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u65f6\u523b\uff0c\u8d77\u521d\u6bcf\u4e00\u5929\u6784\u6210\u4e00\u4e2a\u96c6\u5408\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5546\u54c1\uff0c\u82e5\u5176\u5728 $d_i$ \u5929\u540e\u8fc7\u671f\uff0c\u5219\u67e5\u8be2 $r=root(d_i)$\uff0c\u5982\u679c $r>0$ \u5219\u5728\u7b2c $r$ \u5929\u5356\u51fa\uff0c\u5e76\u5408\u5e76 $r$ \u4e0e $r-1$\uff0c\u5373\u4ee4 $father(r)\\leftarrow r-1$\u3002\n\n\u5176\u672c\u8d28\u662f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6570\u7ec4\u4e2d\u4f4d\u7f6e\u7684\u5360\u7528\u60c5\u51b5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+n\\alpha(n))$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(d)$\u3002\n\n__________\n\n\u7136\u800c\uff0c\u5bf9\u4e8e\u672c\u9898 $p,d\\le 10^9$\uff0c$O(d)$ \u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u663e\u7136\u4e0d\u53ef\u884c\uff0c\u56e0\u6b64\u8003\u8651\u53e6\u4e00\u79cd\u8d2a\u5fc3\u65b9\u6cd5\uff1a\u6309\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5e76\u4fdd\u8bc1\u524d $d$ \u5929\u5728\u4e0d\u5356\u51fa\u8fc7\u671f\u5546\u54c1\u7684\u524d\u63d0\u4e0b\u5356\u51fa\u4ef7\u503c\u524d $d$ \u5927\u7684\u5546\u54c1\u3002\n\n\u5177\u4f53\u5730\uff0c\u5c06\u5546\u54c1\u6309 $d$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ee5\u5546\u54c1\u4ef7\u503c\u4e3a\u6743\u503c\u5efa\u7acb\u4e00\u4e2a\u521d\u59cb\u4e3a\u7a7a\u7684\u5c0f\u6839\u5806\u3002\u5bf9\u4e8e\u6392\u5e8f\u540e\u7b2c $i$ \u4e2a\u5546\u54c1\uff0c\u82e5 $d_i$ \u6bd4\u5806\u5185\u5143\u7d20\u6570\u91cf\u5927\uff0c\u5373\u8be5\u5546\u54c1\u80fd\u591f\u5728\u524d $d_i$ \u5929\u88ab\u552e\u51fa\uff0c\u56e0\u6b64\u7b54\u6848\u7d2f\u52a0 $p_i$ \u5e76\u5c06\u5176\u5165\u5806\u3002\u5426\u5219\uff0c\u5c06 $p_i$ \u4e0e $top$ \u8fdb\u884c\u6bd4\u8f83\uff0c\u82e5 $p_i$ \u5927\u5219\u5c06 $top$ \u5f39\u51fa\uff0c\u5e76\u538b\u5165 $p_i$\uff0c\u66f4\u65b0\u7b54\u6848\u3002\n\n\u6700\u7ec8\uff0c\u5806\u5185\u5546\u54c1\u4ef7\u503c\u4e4b\u548c\u5373\u4e3a\u7b54\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n## \u4ee3\u7801\n```cpp\ntypedef pair<int, int> PII;\nPII p[maxn];\nint n; ll ans;\npriority_queue <int, vector<int>, greater<int> > q; //\u5c0f\u6839\u5806\nint main () {\n\tread(n);\n\trep(i, 1, n){\n\t\tread(p[i].first);\n\t\tread(p[i].second);\n\t}\n\tsort(p + 1, p + n + 1);//\u8f93\u5165+\u6392\u5e8f\n\trep(i, 1, n) {\n\t\tint d = p[i].first, w = p[i].second;\n\t\tif(d > q.size()) q.push(w), ans += w;\n        //\u82e5\u6709\u7a7a\u4f4d\u76f4\u63a5\u5165\u5806\n\t\telse {\n\t\t\tint v = q.top();//\u5426\u5219\u4e0e\u5806\u9876\u6bd4\u8f83\n\t\t\tif(v < w) {\n\t\t\t\tq.pop(); ans -= v;\n\t\t\t\tq.push(w); ans += w;\n\t\t\t}\n\t\t}\n\t}\n\twriteln(ans);\n\treturn 0;\n}\n```",
        "postTime": 1620640546,
        "uid": 279197,
        "name": "Mars_Dingdang",
        "ccfLevel": 6,
        "title": "P2949"
    },
    {
        "content": "## \u4e00\u9053\u53cd\u6094\u7c7b\u8d2a\u5fc3\n\n 1. \u5148\u6309\u7167\u622a\u81f3\u65f6\u95f4\u6392\u5e8f\n 2. \u6211\u4eec\u63a5\u4e0b\u6765\u9700\u8981\u601d\u8003\u7b2c $i$ \u9879\u5de5\u4f5c\u505a\u8fd8\u662f\u4e0d\u505a\uff0c\u9996\u5148\u4e00\u4e2a\u524d\u63d0\u82e5\u5176\u622a\u6b62\u65f6\u95f4\u7b26\u5408\u6761\u4ef6\uff0c\u5c31\u4e0e\u961f\u4e2d\u6700\u5c0f\u5143\u7d20\uff08\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\uff09\u6bd4\u8f83\uff0c\u82e5\u7b2c $i$ \u9879\u5de5\u4f5c\u8f83\u9ad8\uff0c\u90a3\u4e48\u5c31\u53cd\u6094\uff0c\u9009\u62e9\u53bb\u505a\u5f53\u524d\u7684\u5de5\u4f5c\u3002\n\n#### Code:\n\n```cpp\n/*Coder:DongYinuo*/\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace I_Love_{\n    typedef long long ll;\n    const int maxn=100005;\n    const int N=1005;\n    const int mod=1e9+7;\n    #define F(i,l,r) for (int i=l;i<=r;++i)\n    #define REP(i,r,l) for (int i=r;i>=l;--i)\n    #define mem(a,b) memset(a,b,sizeof(a));\n    #define MP make_pair\n    #define PB push_back\n    #define PII pair<int,int>\n    #define PLL pair<ll,ll>\n    #define all(a) a.begin(),a.end()\n    #define sz(a) a.size()\n    #define lson ind*2 \n    #define rson ind*2+1\n    int I(){char c;int x=0,f=1;while(c=getchar()){if(c=='-')f=-1;if(isdigit(c))break;}while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();return x*f;}\n    template <typename T>void Rd(T& arg){arg=I();}\n    template <typename T,typename...Types>void Rd(T& arg,Types&...args){arg=I();Rd(args...);}\n    priority_queue<ll,vector<ll>,greater<ll>> q;\n    struct Info{\n        ll dead,val;\n    };\n    Info a[maxn];\n    bool cmp(Info x,Info y){\n        return x.dead<y.dead;\n    }\n    ll n,ans;\n    void run(){\n        scanf(\"%lld\",&n);\n        F(i,1,n){\n            scanf(\"%lld%lld\",&a[i].dead,&a[i].val);\n        }\n        sort(a+1,a+1+n,cmp);\n        F(i,1,n){\n            if(a[i].dead<=q.size()){\n                if(q.top()<a[i].val){\n                    ans+=a[i].val-q.top();\n                    q.pop();\n                    q.push(a[i].val);\n                }\n            }else{\n                ans+=a[i].val;\n                q.push(a[i].val);\n            }\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    void OI(){\n        run();\n    }\n}\nint main(){\n#ifndef ONLINE_JUDGE\n    freopen(\"data.in\",\"r\",stdin);\n    freopen(\"data.out\",\"w\",stdout);\n#endif\n    I_Love_::OI();\n    return 0;\n}\n```\n\n",
        "postTime": 1614783643,
        "uid": 186794,
        "name": "ExcaliburNGod",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]Work Scheduling G\u3011"
    },
    {
        "content": "\u597d\u50cf\u6211\u8ddf\u524d\u9762\u5927\u4f6c\u7684\u201c\u540e\u6094\u6cd5\u201d\u957f\u5f97\u6709\u70b9\u50cf\u4f46\u53c8\u4e0d\u4e00\u6837\uff0c\u4e8e\u662f\u53d1\u4e00\u6ce2\u4f9b\u5927\u5bb6\u53c2\u8003\uff08//\u25bd//\uff09\n\n\u6309\u65f6\u95f4\u5012\u7740\u6392\u5e8f\uff0cDDL\u5927\u7684\u653e\u524d\u9762\uff0c\u7136\u540e\u6bcf\u4e00\u8f6e\u628aDDL\u7684\u76f8\u540c\u7684\u6254\u8fdb\u4f18\u5148\u961f\u5217\u91cc\uff08\u6743\u503c\u5927\u7684\u5728\u961f\u9996\uff09\uff0c\u4e4b\u540e\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u65f6\u95f4\u70b9\u8fdb\u884c\u8d2a\u5fc3\u3002\n\n\u8003\u8651\u5230\u6bcf\u4ece\u4f18\u5148\u961f\u5217\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\u5c31\u9700\u8981\u5c06DDL\u76f8\u540c\u7684\u5143\u7d20\u7684DDL\u51cf\u4e00\uff08\u540c\u4e00\u4e2a\u65f6\u95f4\u70b9\u53ea\u80fd\u5e72\u4e00\u9879\u5de5\u4f5c\uff09\uff0c\u8fd9\u4e2a\u53ef\u80fd\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u64cd\u4f5c...\u5427\u25d4 \u2038\u25d4\uff1f\u3002\u4f46\u662f\u53ef\u4ee5\u60f3\u4e00\u4e2a\u5077\u61d2\u7684\u65b9\u6cd5--\u8bb0\u5f55\u5f53\u524d\u8003\u8651\u5230\u7684\u65f6\u95f4cur\uff0c\u6ca1\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\u5c31cur--\uff0c\u51cf\u5230\u8ddf\u4e0b\u4e00\u8f6eDDL\u4e3a\u6b62\uff08\u56e0\u4e3a\u518d\u53d6\u51fa\u7684\u8bdd\u5c31\u8981\u8003\u8651\u4e0b\u4e00\u8f6eDDL\u7684\u5143\u7d20\uff09\u3002\n\n\u5927\u6982\u5c31\u662f\u8fd9\u6837......\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e6+4;\nint n;\nll sum;\nstruct Node {\n\tint v,t;\n\tfriend bool operator <(const Node x,const Node y) {\n\t\treturn x.v<y.v;\n\t}\n}a[N];\npriority_queue<Node> q;\nbool cmp(const Node x,const Node y) {\n\treturn x.t>y.t||(x.t==y.t&&x.v>y.v);\n}\ninline int read() {\n\tint x=0;char c=getchar();\n\twhile (c<'0'||c>'9') c=getchar();\n\twhile (c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n\treturn x; \n}\nint main() {\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tn=read();\n\tfor (register int i=1;i<=n;++i)\n\t\ta[i].t=read(),a[i].v=read();\n\tsort(a+1,a+n+1,cmp);\n\tint cur=a[1].t,i=1;\n\twhile (1) {\n\t\twhile (a[i].t==cur)\n\t\t\tq.push(a[i]),++i;\n\t\twhile (!q.empty()&&a[i].t<cur) {\n\t\t\tsum+=q.top().v;\n\t\t\tq.pop();\n\t\t\t--cur;\n\t\t}\n\t\tif (i>n) break;\n\t\tcur=min(a[i].t,cur);\n\t}\n\tprintf(\"%lld\\n\",sum);\n\treturn 0;\n}\n```\n",
        "postTime": 1581397916,
        "uid": 38134,
        "name": "KGV7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528\u9006\u5411\u601d\u7ef4\uff0c\u5047\u8bbe\u65f6\u95f4\u5012\u6d41\uff0c\u90a3\u4e48\u5de5\u4f5c\u7684\u622a\u6b62\u65e5\u671f\u5c31\u53d8\u6210\u5de5\u4f5c\u7684\u5f00\u59cb\u65e5\u671f\uff0c\u8fd9\u6837\u5c31\u53d8\u6210\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u8d2a\u5fc3\uff0c\u53ea\u8981\u6bcf\u5929\u505a\u5229\u6da6\u6700\u5927\u7684\u5de5\u4f5c\u5373\u53ef\uff08\u56e0\u4e3a\u5de5\u4f5c\u5728\u65f6\u95f4\u52300\u4e4b\u524d\u6c38\u8fdc\u4e0d\u4f1a\u6d88\u5931\uff09\u3002\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\nconst int Max_n=100005;\n\nstruct Node{\n    int d,p;\n}job[Max_n];\n\npriority_queue<int> q;\n\nbool cmp(Node a,Node b){\n    return a.d>b.d;\n}\n\nint main(){\n    int n,t,p;\n    long long ans;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&job[i].d,&job[i].p);\n    sort(job+1,job+n+1,cmp); //\u5de5\u4f5c\u622a\u6b62\u65f6\u95f4\u964d\u5e8f\uff0c\u5373\u65f6\u5149\u5012\u6d41\u7684\u60c5\u51b5\u4e0b\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\n    p=1; ans=0ll;\n    while(p<=n){ //\u5faa\u73af\u76f4\u5230\u6240\u6709\u5de5\u4f5c\u90fd\u5df2\u7ecf\u5f00\u59cb\n        if(q.empty()) t=job[p].d; //\u5982\u679c\u5f53\u524d\u6ca1\u6709\u5de5\u4f5c\uff0c\u5c06\u65f6\u95f4\u76f4\u63a5\u524d\u8fdb\u5230\u4e0b\u4e00\u4e2a\u5de5\u4f5c\u7684\u5f00\u59cb\u65f6\u95f4\n        while(p<=n&&job[p].d==t) //\u628a\u6b64\u65f6\u5f00\u59cb\u7684\u5de5\u4f5c\u52a0\u5230\u961f\u5217\u4e2d\n            q.push(job[p++].p);\n        ans+=q.top(); //\u505a\u5229\u6da6\u6700\u5927\u7684\u5de5\u4f5c\n        q.pop(); t--; //\u65f6\u95f4\u201c\u524d\u8fdb\u201d\u4e00\u5929\n    }\n    while(t&&!q.empty()){ //\u53ea\u8981\u65f6\u95f4\u6ca1\u7ed3\u675f\u4e14\u8fd8\u6709\u5de5\u4f5c\u53ef\u505a\uff0c\u5c31\u7ee7\u7eed\u505a\n        ans+=q.top();\n        q.pop(); t--;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n\n```\n\u867d\u7136\u4ee3\u7801\u957f\u5ea6\u5dee\u4e0d\u591a\uff0c\u4f46\u66f4\u597d\u7406\u89e3\u3002",
        "postTime": 1579669849,
        "uid": 14888,
        "name": "John_Nash",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u8d2a\u5fc3\u3002\n\n\u628a\u622a\u6b62\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5bf9\u6211\u4eec\u9009\u62e9\u5b8c\u6210\u7684\u5de5\u4f5c\u7684\u5229\u6da6\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\u3002\n\n\u4ece $1$ \u5230 $n$ \u626b\uff0c\u80fd\u5b8c\u6210\u5f53\u524d\u5de5\u4f5c\u5c31\u5b8c\u6210\uff0c\u5e76\u5c06\u8be5\u5de5\u4f5c\u7684\u5229\u6da6\u63d2\u5165\u5c0f\u6839\u5806\u4e2d\uff1b\n\n\u5982\u679c\u4e0d\u80fd\u5b8c\u6210\uff0c\u5224\u65ad\u8be5\u5de5\u4f5c\u7684\u5229\u6da6\u662f\u5426\u5927\u4e8e\u6211\u4eec\u9009\u62e9\u5b8c\u6210\u7684\u5de5\u4f5c\u7684\u6700\u5c0f\u5229\u6da6\uff08\u5c0f\u6839\u5806\u5806\u9876\uff09\u3002\n\n\u5982\u679c\u5927\u4e8e\u5219\u66ff\u6362\u6389\u539f\u6700\u5c0f\u5229\u6da6\u5de5\u4f5c\uff0c\u5426\u5219\u65e0\u64cd\u4f5c\uff08\u4e5f\u5c31\u662f\u4e0d\u9009\u5b83\uff09\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\u3002\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;//\u5229\u6da6\u53ef\u80fd\u4f1a\u7206int\ninline ll rd()//\u8bfb\u5165\u4f18\u5316\n{\n\tll x=0,p=1;\n\tchar a=getchar();\n\twhile((a<48||a>57)&&a!='-')a=getchar();\n\tif(a=='-')p=-p,a=getchar();\n\twhile(a>47&&a<58)\n\t{\n\t\tx=(x<<1)+(x<<3)+(a&15);\n\t\ta=getchar();\n\t}\n\treturn x*p;\n}\nstruct node//\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\u6bcf\u4e00\u9879\u5de5\u4f5c\uff0c\u5e76\u91cd\u8f7d\u5c0f\u4e8e\u53f7\u8fd0\u7b97\u7b26\uff0c\u65b9\u4fbf\u6392\u5e8f\n{\n\tll t,p;\n\tbool operator < (const node &y)const\n\t{\n\t\treturn t<y.t;//\u6309\u622a\u6b62\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\n\t}\n}a[100002];\nll n,time,ans;\npriority_queue <ll,vector<ll>,greater<ll> > q;//\u5c0f\u6839\u5806\uff0c\u4f7f\u7528\u4f18\u5148\u961f\u5217\u5b9e\u73b0\nint main()\n{\n\tn=rd();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i].t=rd();a[i].p=rd();\n\t}\n\tsort(a+1,a+n+1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(time<a[i].t)//\u5982\u679c\u53ef\u4ee5\u5b8c\u6210\uff0c\u6682\u65f6\u8ba4\u4e3a\u5b8c\u6210\u5b83\u4f1a\u5f97\u5230\u6700\u5927\u5229\u6da6\uff0c\u5e76\u5c06\u5b83\u63d2\u5165\u5806\n\t\t{\n\t\t\ttime++;\n\t\t\tans+=a[i].p;\n\t\t\tq.push(a[i].p);\n\t\t}\n\t\telse if(a[i].p>q.top())//\u82e5\u4e0d\u80fd\u5b8c\u6210\uff0c\u5219\u628a\u5b83\u4e0e\u5806\u9876\u5143\u7d20\u6bd4\u8f83\uff1b\u5982\u679c\u5b8c\u6210\u8fd9\u4e2a\u5de5\u4f5c\u7684\u5229\u6da6\u8f83\u5927\uff0c\u5c31\u5c06\u539f\u6765\u7684\u66ff\u6362\n\t\t{\n\t\t\tans-=q.top();ans+=a[i].p;\n\t\t\tq.pop();q.push(a[i].p);\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);//\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n```",
        "postTime": 1566973953,
        "uid": 44835,
        "name": "wsk_1202",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    },
    {
        "content": "[P2949 [USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling](https://www.luogu.org/problemnew/show/P2949)\n\n~~\u9898\u76ee\u6807\u7b7e\u662f\u5355\u8c03\u961f\u5217+dp\uff0c\u840c\u65b0\u592a\u5f31\u4e0d\u4f1a~~\n\n\u660e\u663e\u7684\u4e00\u9053\u8d2a\u5fc3\u9898\uff0c\u8003\u8651\u6392\u5e8f\u5148\u505a\u622a\u6b62\u65f6\u95f4\u65e9\u7684\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u540e\u9762\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ef7\u503c\u66f4\u9ad8\u5374\u6ca1\u6709\u65f6\u95f4\u505a\u7684\u60c5\u51b5\n\n**\u6211\u4eec\u9700\u8981\u53cd\u6094\u7684\u64cd\u4f5c**\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u7528\u5806\uff0c\u5982\u679c\u5f53\u524d\u653e\u4e0d\u4e0b\u4e14\u5f53\u524d\u4ef7\u503c\u9ad8\u4e8e\u5df2\u505a\u5de5\u4f5c\u4e2d\u7684\u6700\u5c0f\u4ef7\u503c\uff0c\u5219\u5220\u53bb\u5b83\u52a0\u5165\u5f53\u524d\u503c\n\n**\u7c7b\u4f3c\u7528\u5806\u5b9e\u73b0\u53cd\u6094\u7684\u8d2a\u5fc3\u7684\u7ecf\u5178\u9898\u76ee\uff1a[P1484 \u79cd\u6811](https://www.luogu.org/problemnew/show/P1484)**\n\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct thing {\n    int t,v;\n    bool operator <(const thing &b)const {\n        return v>b.v;//\u5c0f\u6839\u5806\n    }\n} a[100005];\ninline bool cmp(thing a,thing b) {\n    return a.t<b.t;\n}\nint n;\nlong long ans;\npriority_queue<thing> q;\nint main() {\n    scanf(\"%d\",&n);\n    for (int i=1; i<=n; i++) scanf(\"%d%d\",&a[i].t,&a[i].v);\n    sort(a+1,a+n+1,cmp);\n    for (int i=1; i<=n; i++)\n        if (a[i].t<=q.size()) {\n            if (q.top().v<a[i].v) ans+=a[i].v-q.top().v,q.pop(),q.push(a[i]);\n        } else q.push(a[i]),ans+=a[i].v;\n    printf(\"%lld\",ans);\n}\n```\n",
        "postTime": 1562855282,
        "uid": 68706,
        "name": "Randolph\u3001",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2949 \u3010[USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling\u3011"
    }
]