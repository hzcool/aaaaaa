[
    {
        "content": "##### [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P6077)\n\n---\n\n\u8003\u8651\u4f55\u65f6\u5fc5\u987b\u6d88\u706d\u58eb\u5175\u624d\u80fd\u901a\u8fc7\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u6700\u4f18\u65b9\u6848\u4e2d\uff0c\u8981\u6d88\u706d\u58eb\u5175\u5f53\u4e14\u4ec5\u5f53\u82e5\u5e72\u4e2a\u58eb\u5175\u7684\u89c2\u5bdf\u8303\u56f4\u5c06\u5ce1\u8c37\u7684\u4e0a\u8fb9\u754c\u548c\u4e0b\u8fb9\u754c\u8fde\u901a\uff0c\u6211\u4eec\u624d\u6d88\u706d\u5176\u4e2d\u4e00\u4e2a\u58eb\u5175\u3002\n\n\u660e\u663e\u7684\u6700\u5c0f\u5272\u6a21\u578b\u2014\u2014\u5272\u6389\u6700\u5c0f\u6570\u91cf\u7684\u58eb\u5175\uff0c\u4f7f\u5f97\u4e0a\u8fb9\u754c\u548c\u4e0b\u8fb9\u754c\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u5c31\u627e\u5230\u4e86\u4e00\u6761\u901a\u8def\u3002\n\n##### \u5b9e\u73b0\u7ec6\u8282\n\n\u5ce1\u8c37\u4e0b\u8fb9\u754c\u4e3a $s$\uff0c\u4e0a\u8fb9\u754c\u4e3a $t$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5706\u5fc3 $(x_i,y_i)$\u3002\n\n\u82e5 $y_i\\leq 100$\uff0c\u4ece $s$ \u5411 $i$ \u52a0\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u82e5 $y_i\\geq w-100$\uff0c\u4ece $i$ \u5411 $t$ \u52a0\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u70b9 $(x_j,y_j)$ \u4f7f\u5f97 $y_j\\geq y_i$ \u4e14 $dis(i,j)\\leq 200$\uff0c\u7531 $i$ \u5411 $j$ \u52a0\u4e00\u6761\u6d41\u91cf\u4e3a $\\inf$ \u7684\u8fb9\u3002\n\n\u5728\u8be5\u56fe\u4e0a\u5f97\u5230\u7684\u6700\u5927\u6d41\u5373\u4e3a\u7b54\u6848\u3002\n\n\u7b97\u8ddd\u79bb\u65f6\u6700\u597d\u4e0d\u8981\u7528 `double`\u3002\n\n### Code\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#define pow(x) ((x)*(x))\n#define mset(arr,val) memset(arr,val,sizeof(arr))\nusing namespace std;\ntypedef pair<int,int>pii;\nconst int SIZE=1010,EXTRA=5e5+10,s=SIZE-2,t=SIZE-1,inf=0x3f3f3f3f;\ninline int read()\n{\n    int x=0;char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x=(x*10)+(ch^48),ch=getchar();\n    return x;\n}\nqueue<int>q;\nint l,w,n,dpth[SIZE],head[SIZE],sizee;\nstruct edge{int u,v,w,nxt;}e[EXTRA];\ninline void add(int u,int v,int w){e[sizee]={u,v,w,head[u]},head[u]=sizee++;}\ninline void add_edge(int u,int v,int w){add(u,v,w),add(v,u,0);}\npii p[SIZE];\ninline bool bfs()\n{\n    mset(dpth,0),dpth[s]=1,q.push(s);\n    while(!q.empty())\n    {\n        int thisp=q.front();q.pop();\n        for(int i=head[thisp];~i;i=e[i].nxt)if(!dpth[e[i].v]&&e[i].w)dpth[e[i].v]=dpth[thisp]+1,q.push(e[i].v);\n    }\n    return dpth[t];\n}\nint dfs(int thisp,int rate)\n{\n    if(thisp==t)return rate;\n    int out=0;\n    for(int i=head[thisp],_rate;~i;i=e[i].nxt)if(e[i].w&&dpth[e[i].v]==dpth[thisp]+1)\n    {\n        _rate=dfs(e[i].v,min(rate,e[i].w));\n        rate-=_rate,out+=_rate,e[i].w-=_rate,e[i^1].w+=_rate;\n        if(!rate)break;\n    }\n    if(!out)dpth[thisp]=0;\n    return out;\n}\ninline int dinic(){int res=0;while(bfs())res+=dfs(s,inf);return res;}\ninline bool cmp(pii x,pii y){return x.second==y.second?x.first<y.first:x.second<y.second;}\ninline int dis(pii x,pii y){return pow(x.first-y.first)+pow(x.second-y.second);}\nint main()\n{\n    mset(head,-1);\n    l=read(),w=read(),n=read();\n    for(int i=1;i<=n;i++)p[i].first=read(),p[i].second=read();\n    sort(p+1,p+n+1,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        if(p[i].second<=100)add_edge(s,i,1);\n        if(p[i].second>=w-100)add_edge(i,t,1);\n        for(int j=i+1;j<=n;j++)\n        {\n            if(dis(p[i],p[j])<=40000)add_edge(i,j,inf);\n        }\n    }\n    printf(\"%d\",dinic());\n    return 0;\n}\n```",
        "postTime": 1666186716,
        "uid": 327355,
        "name": "FQ04gty",
        "ccfLevel": 0,
        "title": "[BalticOI2007] Escape"
    }
]