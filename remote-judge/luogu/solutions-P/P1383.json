[
    {
        "content": "\u4e0d\u61c2\u4e3b\u5e2d\u6811\u7684\u770b\u8fd9\u91cc~\u3002\n------------\n\u6240\u8c13\u4e3b\u5e2d\u6811\uff0c\u4e43**\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811**\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u53eb\u4e3b\u5e2d\u6811\uff0c\u662f\u56e0\u4e3a\u53d1\u660e\u4eba\u540d\u5b57\u7f29\u5199\u662f $hjt$ \u3002\n\n\u56e0\u4e3a\u4e3b\u5e2d\u6811\u8981\u8bb0\u5f55\u5386\u53f2\u7248\u672c\uff0c\u6240\u4ee5\u9694\u58c1\u7ebf\u6bb5\u6811\u7684 $lazy\\_tag$ \u5c31\u884c\u4e0d\u901a\u4e86\uff0c\u4e8e\u662f\u7801\u91cf\u5c31\u51cf\u5c11\u8bb8\u591a\u3002~~\u4ee5\u81f3\u4e8e\u5f88\u591a\u65f6\u5019\u6211\u6709\u79cd\u4e3b\u5e2d\u6811\u6bd4\u7ebf\u6bb5\u6811\u6c34\u7684\u9519\u89c9\u3002~~\n\n------------\n\u8bb2\u5b8c\u4e3b\u5e2d\u6811\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u518d\u6765\u4e86\u89e3\u4e3b\u5e2d\u6811\u7684\u5b9e\u73b0\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u4e00\u68f5\u666e\u901a\u7ebf\u6bb5\u6811\uff0c\u5b83\u5dee\u4e0d\u591a\u957f\u8fd9\u6837\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/igkbj37t.png)\n\n\u7136\u540e\u6211\u4eec\u6807\u8bb0\u4e00\u4e0b\u6bcf\u6b21\u4fee\u6539\u8bbf\u95ee\u7684\u8282\u70b9\uff1a\n\n\u4fee\u6539\u7b2c $3$ \u4e2a\u8282\u70b9\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/4jlgsgid.png)\n\n\u4fee\u6539\u7b2c $2$ \u4e2a\u8282\u70b9\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/t4dunbjs.png)\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u6bcf\u6b21\u4fee\u6539\u53ea\u4f1a\u4fee\u6539 $log_2n$ \u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u53ea\u8981\u65b0\u589e\u4fee\u6539\u7684\u8282\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e3b\u5e2d\u6811\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/5yqi3dmg.png)\n\n-----\n\u5173\u4e8e\u65b0\u589e\u8282\u70b9\n-----\n\u6211\u4eec\u4e0d\u59a8\u65b0\u589e\u4e00\u4e2a $size$ \u6570\u7ec4\u8868\u793a\u5f53\u524d\u5b50\u6811\u8282\u70b9\u4e2a\u6570\uff0c\u5982\u679c $size[lc]==mid-tree[p].l+1$ \uff0c\u5219\u8868\u793a\u5de6\u5b50\u6811\u6ee1\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u9012\u5f52\u53f3\u5b50\u6811\uff1b\u5426\u5219\u5de6\u5b50\u6811\u8fd8\u6ca1\u6ee1\uff0c\u5c31\u9012\u5f52\u5de6\u5b50\u6811\u3002\n\n## code\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ri register int\n#define int long long\n#define lc tree[p].l\n#define rc tree[p].r\n//\u61d2\u4eba\u7816\u7528\u8868\u793a\u6cd5\nusing namespace std;\nint m,cnt=1,node;\n//cnt\u8868\u793a\u8282\u70b9\u4e2a\u6570\uff0cnode\u8868\u793a\u6839\u8282\u70b9\u4e2a\u6570\nint root[10000001];\nstruct node{\n\tint l;\n\tint r;\n\tchar data;\n\tint size;\n}tree[10000001*4];\n//\u5982\u4e0a\nvoid change(int &p,int pre,int l,int r,char x){\n\tp=++cnt;\n\tlc=tree[pre].l;\n\trc=tree[pre].r;\n\ttree[p].size=tree[pre].size;\n\ttree[p].data=tree[pre].data;\n  //\u5148\u5f00\u70b9\uff0c\u7ee7\u627f\u4e0a\u4e00\u4e2a\u6839\u8282\u70b9\n\tif(l>r) return;\n\tif(l==r){\n\t\ttree[p].data=x;\n\t\ttree[p].size=1;\n\t\treturn;\n\t}\n\tif(tree[lc].size==((l+r)>>1)-l+1) change(rc,tree[pre].r,(l+r)>>1+1,r,x);\n\telse change(lc,tree[pre].l,l,(l+r)>>1,x);\n  //\u540c\u4e0a\n\ttree[p].size=tree[lc].size+tree[rc].size;//\u5f53\u524d\u5b50\u6811\u7684\u8282\u70b9\u603b\u6570\u4e3a\u5de6\u5b50\u6811\u52a0\u4e0a\u53f3\u5b50\u6811\n}\nchar ask(int p,int l,int r,int x){\n\tif(l>=r){\n\t\treturn tree[p].data;\n\t}\n\tif(x<=tree[lc].size){//\u5982\u679c\u8981\u8bbf\u95ee\u7684\u53f6\u5b50\u8282\u70b9\u7f16\u53f7\u5c0f\u4e8e\u5de6\u5b50\u6811\u7684\u8282\u70b9\u603b\u6570\uff0c\u90a3\u4e48ta\u80af\u5b9a\u5728\u5de6\u5b50\u6811\uff0c\u53cd\u4e4b\u5728\u53f3\u5b50\u6811\n\t\treturn ask(lc,l,(l+r)>>1,x);\n\t}else{\n\t\treturn ask(rc,(l+r)>>1+1,r,x-tree[lc].size);\n\t}\n}\nsigned main(){\n\tcin>>m;\n\tfor(ri i=1;i<=m;i++){\n\t\tchar o,c;\n\t\tint x;\n\t\tcin>>o;\n\t\tif(o=='T'){\n\t\t\tcin>>c;\n\t\t\t++node;\n\t\t\tchange(root[node],root[node-1],1,m,c);\n\t\t}\n\t\tif(o=='U'){\n\t\t\tcin>>x;\n\t\t\t++node;\n\t\t\troot[node]=root[node-x-1];\n            //\u64a4\u9500\u76f4\u63a5\u65b0\u5efa\u6839\u8282\u70b9\u5c31\u884c\u4e86\n\t\t}\n\t\tif(o=='Q'){\n\t\t\tcin>>x;\n\t\t\tcout<<ask(root[node],1,m,x)<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n###  \u70b9\u4e2a\u8d5e\u518d\u8d70\u5457~~~\u3002",
        "postTime": 1603476299,
        "uid": 244165,
        "name": "_121017_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "# \u524d\u8a00\n\u5173\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u770b\u9898\u89e3\u91cc\u5f88\u591a\u5927\u4f6c\u90fd\u662f\u7528\u7684\u4e3b\u5e2d\u6811\uff0c\u4f46\u662f\u8eab\u4e3a\u4e00\u4e2a\u849f\u84bb\u6211\u5e76\u4e0d\u4f1a\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u4e86\u6811\u4e0a\u500d\u589e\u3002\n# \u6b63\u6587\n\u6211\u4eec\u7528f[ i ][ j ]\u8868\u793aj\u7684\u7b2c2^i\u4e2a\u7956\u5148\n\nlian[ i ]\u8868\u793a\u5728\u7b2ci\u6b65\u4fee\u6539\u64cd\u4f5c\u7ed3\u675f\u540e\u4e0b\u4e00\u6b21\u589e\u6dfb\u7684\u70b9\u5f97\u7236\u4eb2\u7684\u5e8f\u53f7\n\ntree[ i ]\u8868\u793a\u5e8f\u53f7\u4e3ai\u7684\u8282\u70b9\u7684\u5b57\u7b26\u662f\u4ec0\u4e48\n\nfa\u8868\u793a\u4e0b\u4e00\u4e2a\u6dfb\u52a0\u7684\u70b9\u5f97\u7236\u4eb2\uff0c\u4e5f\u662f\u76ee\u524d\u7684\u53f6\u8282\u70b9\n\ndeep[ i ]\u8868\u793a\u6df1\u5ea6\uff0c\u5373\u7b2c\u51e0\u4e2a\u5b57\u7b26\n\n\u5bf9\u4e8e\u201cT\u201d\u64cd\u4f5c\u6765\u8bb2 \uff1a\n\n\u6bcf\u8fdb\u884c\u4e00\u6b21T\u64cd\u4f5c\uff0c\u5c31\u589e\u6dfb\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\uff0c\u6709\u6548\u64cd\u4f5c\u6570\u589e\u52a0\n\n\u5bf9\u4e8e\u201cQ\u201d\u64cd\u4f5c\u6765\u8bb2\uff1a\n\n\u6bcf\u8fdb\u884c\u4e00\u6b21Q\u64cd\u4f5c\uff0c\u5c31\u662f\u627e\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\uff08fa\uff09\u8fd9\u4e00\u6761\u94fe\u4e0a\uff0c\u6df1\u5ea6\u4e3am\u7684\u70b9\n\n\u5bf9\u4e8e\u201cU\u201d\u64cd\u4f5c\u6765\u8bb2\uff1a\n\n\u6bcf\u8fdb\u884c\u4e00\u6b21U\u64cd\u4f5c\uff0c\u5c31\u662f\u76f8\u5f53\u4e8e\u4e00\u6b21\u6362\u7239\u64cd\u4f5c\uff0c\u628afa\u6362\u6210lian[ i ] \n\n\u5927\u6982\u5185\u5bb9\u5c31\u8fd9\u4e9b\uff0c\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long f[21][1000001],lian[1000001],cnt,fa,l,m,er[21],deep[10000001],n,x;\nchar a,tree[1000001];\nint main()\n{\n\tcin>>n;\n\ter[0]=1;\n\tfor(int i=1;i<=20;i++)\ter[i]=er[i-1]*2;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a;\n\t\tif(a=='T')\n\t\t{\n\t\t\tx++;//\u6709\u6548\u64cd\u4f5c+1\n\t\t\tcnt++;//\u589e\u52a0\u65b0\u7684\u70b9 \n\t\t\tcin>>tree[cnt];//\u70b9cnt\u7684\u5b57\u7b26 \n\t\t\tlian[x]=cnt;//\u8fd9\u4e00\u6b65\u7ed3\u675f\u540e\u4e0b\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2 \n\t\t\tf[0][cnt]=fa;//\u81ea\u5df1\u7684\u7236\u4eb2 \n\t\t\tdeep[cnt]=deep[fa]+1;\n\t\t\tfor(int i=1;i<=20;i++)f[i][cnt]=f[i-1][f[i-1][cnt]];\n\t\t\tfa=cnt;//\u4e0b\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u662f\u81ea\u5df1\u5427 \n\t\t}\n\t\tif(a=='P')\n\t\t{\n\t\t\tcin>>m; \n\t\t\tint r=fa;\n\t\t\tfor(int i=20;i>=0;i--)\n\t\t\t{\n\t\t\t\tif(deep[r]-er[i]>=m)\n\t\t\t\t{\n\t\t\t\t\tr=f[i][r];\n\t\t\t\t} //\u80fd\u8df3\u5c31\u8df3 \n\t\t\t\tif(deep[r]==m)\n\t\t\t\t{\n\t\t\t\t\tcout<<tree[r]<<endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\tif(a=='U')\n\t\t{\n\t\t\tcin>>m;\n\t\t\tx++;\n\t\t\tlian[x]=lian[x-m-1]; \n\t\t\tfa=lian[x];\n\t\t} \n\t}\n} \n```\n~~\u7b2c\u4e00\u6b21\u4ea4\u9898\u89e3\u5e0c\u671b\u901a\u8fc7~~",
        "postTime": 1599206942,
        "uid": 243750,
        "name": "\u661f\u7a7a\u821e\u6db5",
        "ccfLevel": 6,
        "title": "P1383"
    },
    {
        "content": "**\u524d\u8a00**  \n\u4e4b\u524d\u6709\u4eba\u5728\u8ba8\u8bba\u533a\u91cc\u53d1\u4e3b\u5e2d\u6811\u8fc7\u4e0d\u4e86\uff0c\u7136\u800c\u5176\u5b9e\u662f\u73c2\u4ee5\u8fc7\u7684   \n  \n**\u9898\u89e3**   \n\u8fd9\u9053\u9898\u4e00\u770b\u5c31\u73c2\u4ee5\u7528\u4e3b\u5e2d\u6811\u554a  \n\u8fd9\u662f\u4e00\u9053\u795e\u5947\u7684\u9898\u76ee\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u6572\u4e00\u4e2a\u4e3b\u5e2d\u6811\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4len\uff0c\u8868\u793a\u4e0b\u4e00\u6b21\u5e94\u8be5\u5728len + 1\u63d2\u5165\uff0c   \n\u4e4b\u540e\u5bf9\u4e8eT\u64cd\u4f5c\uff0c\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u7684len + 1\u4e0a\u76f4\u63a5\u6267\u884c\u63d2\u5165  \n\u5bf9\u4e8eQ\u64cd\u4f5c\uff0c\u76f4\u63a5\u67e5\u8be2   \n\u5bf9\u4e8eU\u64cd\u4f5c\uff0c\u76f4\u63a5\u627e\u5230\u5bf9\u5e94\u7248\u672c\u590d\u5236\u5373\u53ef  \n```cpp\nrt[rt_num] = rt[((rt_num - num - 1) > 0 ? (rt_num - num - 1) : 0)];\nls[rt_num] = ls[((rt_num - num - 1) > 0 ? (rt_num - num - 1) : 0)], rs[rt_num] = rs[((rt_num - num - 1) > 0 ? (rt_num - num - 1) : 0)];\nlen[rt_num] = len[rt_num - num - 1];\n``` \n\n**\u4ee3\u7801**  \n```cpp\n#include <cstdio>\n#include <iostream>\n#define ll long long\n\nusing namespace std;\n\nll read(){\n    ll x = 0; int zf = 1; char ch = ' ';\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') zf = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); return x * zf;\n}\n\nint s[20000005];\nint ls[20000005], rs[20000005];\nint len[20000005];\nint rt[20000005], pre[20000005];\nint tot;\n\ninline void a(int pos){\n    s[pos] = s[ls[pos]] + s[rs[pos]];\n}\n\ninline int getNew(){\n    return (++tot);\n}\n\nvoid build(int pos, int l, int r){\n    if (l == r){\n        if (pos > tot)\n            tot = pos;\n        s[pos] = 0;\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    ls[pos] = pos << 1, rs[pos] = (pos << 1) + 1;\n    build(pos << 1, l, mid);\n    build((pos << 1) + 1, mid + 1, r);\n    a(pos);\n}\n\nint query(int pos, int l, int r, int k){\n    if (l == r)\n        return s[pos];\n    int mid = (l + r) >> 1;\n    if (k <= mid)\n        return query(ls[pos], l, mid, k);\n    else\n        return query(rs[pos], mid + 1, r, k);\n}\n\nvoid add(int pos, int pre, int l, int r, int k, int val){\n    if (l == r){\n        s[pos] = val;\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if (k <= mid){\n        rs[pos] = rs[pre]; ls[pos] = getNew();\n        add(ls[pos], ls[pre], l, mid, k, val);\n    }\n    else{\n        ls[pos] = ls[pre]; rs[pos] = getNew();\n        add(rs[pos], rs[pre], mid + 1, r, k, val);\n    }\n    a(pos);\n}\n\nint main(){\n    freopen(\"type.in\", \"r\", stdin);\n    freopen(\"type.out\", \"w\", stdout);\n    int q;\n    q = read();\n    rt[0] = 1, len[0] = 0;\n    build(rt[0], 1, 100000);\n    char op; int num; int rt_num = 0;\n    for (int i = 1; i <= q; ++i){\n        cin >> op;\n        if (op == 'T'){\n            char c; cin >> c;\n            rt[++rt_num] = getNew();\n            len[rt_num] = len[rt_num - 1] + 1;\n            add(rt[rt_num], rt[rt_num - 1], 1, 100000, len[rt_num], (int)(c));\n        }\n        else if (op == 'Q'){\n            num = read();\n            printf(\"%c\\n\", (char)(query(rt[rt_num], 1, 100000, num)));\n        }\n        else if (op == 'U'){\n            num = read(), ++rt_num;\n            rt[rt_num] = rt[((rt_num - num - 1) > 0 ? (rt_num - num - 1) : 0)];\n            ls[rt_num] = ls[((rt_num - num - 1) > 0 ? (rt_num - num - 1) : 0)], rs[rt_num] = rs[((rt_num - num - 1) > 0 ? (rt_num - num - 1) : 0)];\n            len[rt_num] = len[rt_num - num - 1];\n        }\n    }\n    fclose(stdin);\n    fclose(stdout);\n    return 0;\n}\n``` ",
        "postTime": 1558839554,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P1383)\n\n\u6211\u5f53\u521d\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\u8fd8\u5174\u594b\u4e86\u534a\u5929\uff0c\u4ee5\u4e3a\u64a4\u9500\u64cd\u4f5c\u53ea\u8981\u64a4\u9500\u4e00\u4e9b\u5b57\u7b26\u5c31\u53ef\u4ee5\u4e86\uff0c\u54ea\u77e5\u64a4\u9500\u64cd\u4f5c\u8fd8\u53ef\u4ee5\u64a4\u9500\u4e4b\u524d\u7684\u64a4\u9500\u64cd\u4f5c\u3002\n\n\u6240\u4ee5\u5176\u5b9e\u662f\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u3002\u6bcf\u6b21\u64a4\u9500\u64cd\u4f5c\u76f8\u5f53\u4e8e\u628a\u5f53\u524d\u7684\u6839\u7f6e\u4e3anum\u6b65\u4ee5\u524d\u7684\u6839\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n\nint root[100001],lson[4000001],rson[4000001],cnt=1,size[4000001],tem,n,o;\nchar ch,opt,val[4000001];\nvoid add(int &pos,int pre,char ch,int l,int r){\n    pos=(++o),lson[pos]=lson[pre],rson[pos]=rson[pre],size[pos]=size[pre],val[pos]=val[pre];\n    if(l==r){\n        val[pos]=ch;\n        size[pos]=1;\n        return;\n    }\n    if(size[lson[pos]]==((l+r)>>1)-l+1)add(rson[pos],rson[pre],ch,((l+r)>>1)+1,r);\n    else add(lson[pos],lson[pre],ch,l,(l+r)>>1);\n    size[pos]=size[lson[pos]]+size[rson[pos]];\n}\nchar query(int root,int l,int r,int x){\n    if(l==r)return val[root];\n    if(size[lson[root]]>=x)return query(lson[root],l,(l+r)>>1,x);\n    else return query(rson[root],((l+r)>>1)+1,r,x-size[lson[root]]);\n}\nvoid get(char &ch){\n    ch=getchar();\n    while((ch<'a'||ch>'z')&&(ch<'A'||ch>'Z'))ch=getchar();\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        get(opt);\n        if(opt=='T')get(ch),++cnt,add(root[cnt],root[cnt-1],ch,1,n);\n        else if(opt=='U')scanf(\"%d\",&tem),++cnt,root[cnt]=root[cnt-tem-1];\n        else scanf(\"%d\",&tem),printf(\"%c\\n\",query(root[cnt],1,n,tem));\n    }\n}\n```",
        "postTime": 1537705881,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP1383 \u9ad8\u7ea7\u6253\u5b57\u673a"
    },
    {
        "content": "\u4e3b\u5e2d\u6811\u8fd9\u4e1c\u897f\u4ee3\u7801\u592a\u957f\uff0c\u4e0d\u662f\u5f88\u597d\u8c03\u3002\u6240\u4ee5\u6211\u9009\u62e9\u4f7f\u7528__gnu_cxx\u4e2d\u7684**rope**\u6765\u89e3\u51b3\u3002\u9898\u89e3\u533a\u5df2\u7ecf\u6709\u4e00\u7bc7rope+\u6811\u72b6\u6570\u7ec4\u7684\u9898\u89e3\u4e86\uff0c\u6240\u4ee5\u6211\u5c06\u7ed9\u5927\u5bb6\u5e26\u6765**rope\u8be6\u7ec6\u4ecb\u7ecd+\u88f8\u7684\u6307\u9488rope\u5b9e\u73b0\u53ef\u6301\u4e45\u5316\u4ee3\u7801**\u3002\n\n\u8fd9\u662f\u4f60\u6ca1\u6709\u89c1\u8fc7\u7684~~\u8239\u65b0\u7248\u672c~~\uff0c\u5feb\u6765\u4f53\u9a8c\u5427\n### \u4ec0\u4e48\u662frope\n\nrope\u662f\u4e00\u79cd\u5e95\u5c42\u4e3a\u5e73\u8861\u6811\u7684\u53ef\u6301\u4e45\u5316\u64cd\u4f5c\u6570\u636e\u7ed3\u6784\u3002\n\n### rope\u600e\u4e48\u64cd\u4f5c\n\n**\u4f7f\u7528rope\u9700\u8981\u4f7f\u7528\u65b0\u7684\u5934\u6587\u4ef6\u4e0e\u7a7a\u95f4**\uff1a\n\n```cpp\n#include<ext/rope>\nusing namespace __gnu_cxx;\n```\n\n\u8be5namespace\u4e0d\u88abstd\u5305\u542b\uff0c\u8be5\u5934\u6587\u4ef6\u4e5f\u4e0d\u88ab\u4e07\u80fd\u5934\u5305\u542b\uff0c\u9700\u8981\u5728\u4ee3\u7801\u4e2d**\u5206\u522b\u4f7f\u7528**\u3002\n\n**rope\u5e38\u4e0e\u6307\u9488\u76f8\u4f34**\uff1a\n\u5b9a\u4e49\u65b9\u6cd5\n\n```cpp\nrope<char> *now[p];\n```\n\n**\u5982\u4f55\u7533\u8bf7\u66f4\u65b0\u4e00\u4e2a\u65b0\u7684\u53ef\u6301\u4e45\u5316\u7248\u672c**\uff1a\n\n```cpp\nnow[0]=new rope<char>();\n```\n\n**\u5982\u4f55\u7ee7\u627f\u7248\u672c**\n\n```cpp\nnow[cnt]=new rope<char>(*now[cnt-1]);\n```\n\n**\u8bbf\u95ee\u7b2cnum\u4e2a\u7248\u672c**\n\n```cpp\nans=now[cnt]->at(num);\n```\n\n**\u5728\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20str**\n\n```cpp\nnow[cnt]->push_back(str);\n```\n\n**\u5728pos\u63d2\u5165\u5143\u7d20x**\n\n```cpp\nnow[cnt]->insert(pos,x);\n```\n\n**\u4ecepos\u5f00\u59cb\u5220\u9664x\u4e2a\u5143\u7d20**\n\n```cpp\nnow[cnt]->erase(pos,x);\n```\n\n**\u5c06\u4ecepos\u5f00\u59cblen\u4e2a\u5143\u7d20\u66ff\u6362\u4e3ax**\n\n```cpp\nnow[cnt]->copy(pos,len,x);\n```\n\n**\u4ecepos\u5f00\u59cb\u6362\u6210b**\n\n```cpp\nnow[cnt]->replace(pos,b)\n```\n\n**\u4ecepos\u5f00\u59cb\u63d0\u53d6s\u4e2a**\n\n```cpp\nnow[cnt]->substr(pos,s);\n```\n\n\u590d\u6742\u5ea6$n \\sqrt n$\n\n\n\n# \u5177\u4f53\u5b9e\u73b0\n- \u5bf9\u4e8eT\u64cd\u4f5c\uff0c\u6211\u4eec\u6784\u5efa\u65b0\u7248\u672c\uff08\u4ece\u4e0a\u4e00\u4e2a\u7248\u672c\u7ee7\u627f\uff09\uff0c\u5e76\u538b\u5165\u5b57\u7b26\n\n- \u5bf9\u4e8eU\u64cd\u4f5c\uff0c\u6211\u4eec\u7ee7\u627f\u4e4b\u524d\u7b2cnum\u4e2a\u7248\u672c\u4f5c\u4e3a\u65b0\u7248\u672c\u7ee7\u627f\n\n- \u5bf9\u4e8eQ\u64cd\u4f5c\uff0c\u6211\u4eec\u67e5\u8be2\u4e4b\u524d\u7b2cnum\u4e2a\u7248\u672c\u5e76\u8f93\u51fa\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<ext/rope>\nusing namespace std;\nusing namespace __gnu_cxx;\nconst int p=5794385;\nint cnt;\nrope<char> *now[p];\nint main()\n{\n\tint n;\n\tcin>>n;\n\tchar op,str;\n\tint num;\n\tnow[0]=new rope<char>();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>op;\n\t\tif(op=='T')\n\t\t{\n\t\t\tcin>>str;\n\t\t\tcnt++;\n\t\t\tnow[cnt]=new rope<char>(*now[cnt-1]);\n\t\t\tnow[cnt]->push_back(str);\n\t\t}\n\t\tif(op=='U')\n\t\t{\n\t\t\tcin>>num;\n\t\t\tcnt++;\n\t\t\tnow[cnt]=new rope<char>(*now[cnt-num-1]);\n\t\t}\n\t\tif(op=='Q')\n\t\t{\n\t\t\tcin>>num;\n\t\t\tcout<<now[cnt]->at(num-1)<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u6700\u540e\uff0c\u795d\u5927\u5bb6AC\u6109\u5feb\u3002\n\n**\u672b\u5c3e\u5f69\u86cb**\uff1a\u8fd8\u6709\u53cc\u500d\u7ecf\u9a8c\u53ef\u4ee5\u62ff\u54df\uff08\u7565\u6709\u4e0d\u540c\uff09\uff1a[IOI2012 scrivener](https://www.luogu.com.cn/problem/P6166)",
        "postTime": 1599206831,
        "uid": 244059,
        "name": "king_xbz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "# P1383 \u9ad8\u7ea7\u6253\u5b57\u673a\n#### [_\u4f20\u9001\u95e8_](https://www.luogu.com.cn/problem/P1383)\n## \u601d\u8def\n\u770b\u5230\u4e00\u9053\u53ef\u6301\u4e45\u5316\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u9898\uff0c\u6211\u7acb\u9a6c\u6253\u4e86\u4e00\u4e2a\u53eb\u505a`rope`\u7684\u6570\u636e\u7ed3\u6784\u3002\u673a\u623fdalao\u8bf4\u8fd9\u662f\u4e00\u4e2a\u7528\u53ef\u6301\u4e45\u5316\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u5148\u6765\u5b66\u4e60\u4e00\u4e0b`rope`\u7684\u7528\u6cd5\u3002\n\n\u9996\u5148\u8981\u4f7f\u7528`rope`\uff0c\u9700\u8981\u52a0\u4e0a\u4e00\u4e0b\u4e24\u884c\uff1a\n```cpp\n#include<ext/rope>\nusing namespace __gnu_cxx;\n```\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684`rope`\uff0c\u53eb\u505a`crope`\uff0c\u8981\u8fd9\u6837\u5b9a\u4e49\uff1a\n\n```cpp\ncrope now;\ncrope s[10];\n```\n\n`crope`\u652f\u6301\u7684\u64cd\u4f5c\uff1a\n\n- `a.push_back(x)`\uff1a\u5728`crope a`\u7684\u672b\u5c3e\u589e\u52a0\u5b57\u7b26\u4e32`x`\n- `a.insert(k,x)`\uff1a\u5728`a`\u7684\u7b2c`k`\u4e2a\u5b57\u7b26\u540e\u52a0\u5165\u5b57\u7b26\u4e32`x`\n- `a.erase(k,x)`\uff1a\u5728`a`\u7684\u7b2c`k`\u4e2a\u5b57\u7b26\u540e\u5220\u9664`x`\u4e2a\u5b57\u7b26\n- `a.replace(k,x)`\uff1a\u5c06`a`\u7684\u7b2c`k`\u4e2a\u5b57\u7b26\u540e`x`\u7684\u957f\u5ea6\u4e2a\u5b57\u7b26\u5220\u9664\uff0c\u5e76\u63d2\u5165`x`\n- `a.substr(k,x)`\uff1a\u83b7\u53d6`a`\u7684\u7b2c`k`\u4e2a\u5b57\u7b26\u540e\u7684\u957f\u5ea6\u4e3a`x`\u7684\u5b57\u7b26\u4e32\n- `a.at(k)`\uff1a\u83b7\u53d6`a`\u7684\u7b2c`k`\u4e2a\u5b57\u7b26\uff08\u4ece0\u5f00\u59cb\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u62ff\u4e00\u4e2a\u6570\u7ec4\u6765\u4fdd\u5b58\u5386\u53f2\u7248\u672c\uff08\u53cd\u6b63\u4e0d\u5361\u7a7a\u95f4\uff09\uff0c\u6bcf\u6b21\u8bfb\u5165\u64cd\u4f5c\uff0c\u6267\u884c\u64cd\u4f5c\uff0c\u4fdd\u5b58\u5230\u7b2c$V$\u4e2a\u5386\u53f2\u7248\u672c\u4e2d\u3002\n\n- \u5bf9\u4e8e\u64cd\u4f5c$T$\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528`push_back`\uff08\u6216`insert`\uff09\n- \u5bf9\u4e8e\u64cd\u4f5c$U$\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u56de\u9000\u5230$V-x$\u7684\u7248\u672c\n- \u5bf9\u4e8e\u64cd\u4f5c$Q$\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528`at`\uff08\u6216`substr`\uff09\n\n`crope`\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u5462\uff1f\u673a\u623f\u7684dalao\u8bf4\u5b83\u7684\u590d\u5236\u64cd\u4f5c\u662f$O(log\\enspace n)$\u7684\uff0c\u53ef\u4ee5\u8f83\u8f7b\u677e\u5730\u5b9e\u73b0\u53ef\u6301\u4e45\u5316\u3002\n\n~~\u6240\u4ee5\u8fd9\u79cd\u7b97\u6cd5\u53ef\u4ee5\u8f7b\u677e\u6c34\u8fc7IOI\u96be\u5ea6~~\n\n\u4e0aAC\u4ee3\u7801~\n```cpp\n#include<bits/stdc++.h>\n#include<ext/rope>//\u5934\u6587\u4ef6\nusing namespace __gnu_cxx;\nusing namespace std;\nconst int N=1e5+10;\ncrope now,x[N];//\u5b9a\u4e49crope\uff0c\u4fdd\u5b58\u73b0\u5728\u7684\u4e32\u4e0e\u5386\u53f2\u7248\u672c\nint t,p,V;\ninline char read(){\n\tchar ch=getchar();\n\twhile((ch>'U'||ch<'Q')&&(ch>'z'||ch<'a')){\n\t\tch=getchar();\n\t}\n\treturn ch;\n}\ninline void solve(){//\u64cd\u4f5c\n\tchar opt=read();\n\tswitch(opt) {\n\t\tcase 'T': {//T\u64cd\u4f5c\n\t\t\tchar q=read();\n\t\t\tnow.insert(p,q);\n\t\t\tp++;\n\t\t\tx[++V]=now;\n\t\t\tbreak;\n\t\t}\n\t\tcase 'U': {//U\u64cd\u4f5c\n\t\t\tint q;\n\t\t\tscanf(\"%d\",&q);\n\t\t\tnow=x[V-q];\n\t\t\tx[++V]=now;\n\t\t\tbreak;\n\t\t}\n\t\tcase 'Q': {//Q\u64cd\u4f5c\n\t\t\tint q;\n\t\t\tscanf(\"%d\",&q);\n\t\t\tputchar(now.at(q-1));\n\t\t\tputs(\"\");\n\t\t\tbreak;\n\t\t}\n\t}\n}\nsigned main() {\n\tscanf(\"%d\",&t);\n\twhile(t--) {\n\t\tsolve();\n\t}\n\treturn 0;\n}\n```\n\u6700\u540e\u9001\u51fa[ $\\textcolor{#000000}{\u53cc\u500d\u7ecf\u9a8c}$ ](https://www.luogu.com.cn/problem/P6166)\n\n\u518d\u89c1qwq",
        "postTime": 1602309391,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "\u524d50\u5206\u6808\u6a21\u62df\u975e\u5e38\u597d\u60f3\uff0c\u5148\u7ed9\u51fa100\u5206ac\u79bb\u7ebf\u505a\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u524d\u5411\u661f\u6cd5\u5efa\u7acb\u4e00\u4e2a\u90bb\u63a5\u94fe\u8868\uff0c\u628a\u6240\u6709\u64cd\u4f5c\u4e0b\u7684\u60c5\u51b5\u5f3a\u884c\u5efa\u4e00\u4e2a\u7248\u672c\uff0c\u7136\u540e\u6bcf\u6b21\u9047\u5230undo\u64cd\u4f5c\u5c31\u628a\u90bb\u63a5\u94fe\u8868\u7684\u6307\u9488\u5411\u4e0a\u6307x\u4e2a\u7248\u672c\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u641c\u7d22\u4ece\u4e0a\u641c\u4e0b\u53bb\uff0c\u7136\u540e\u6309\u7167\u8f93\u5165\u7684query\u547d\u4ee4\u5c06\u7b54\u6848\u653e\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u6700\u540e\u8f93\u51fa\u8fd9\u4e2a\u6570\u7ec4\n\n\n\u8bf4\u8d77\u6765\u5bb9\u6613\uff0c\u5b9e\u73b0\u8fc7\u7a0b\u5f88\u91cd\u8981\uff0c\u5efa\u8bae\u81ea\u5df1\u624b\u6253\u4e00\u904d\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<stdio.h>\n#include<iostream>\n#include<vector>\n#define rep(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nconst int maxn=100010;\nint n,q,x,v,sz,tot;\nint father[maxn],head[maxn],Next[maxn],point[maxn];\nint ans[maxn];\nchar ch,a[maxn],sk[maxn];\n\nvector <int> maint[maxn];\n\nvoid Ins(int u,int v)\n{\n    Next[++sz]=head[u];head[u]=sz;point[sz]=v;\n}\nvoid Type()\n{\n    scanf(\"%s\",&ch);\n    a[tot]=ch;\n    tot++;\n    father[tot]=tot-1;\n\n}\nvoid Undo()\n{\n    scanf(\"%d\",&x);\n    tot++;\n    Ins(tot-x-1,tot);\n    father[tot]=tot-x-1;\n}\nvoid Query()\n{\n    scanf(\"%d\",&x);\n    maint[tot].push_back(q);\n    ans[q++]=x;\n}\n\nvoid init()\n{\n    tot=x=0;\n    for(x=0;;)\n    {\n        if (head[x])\n        {\n            v=point[head[x]];\n            head[x]=Next[head[x]];\n            x=v;continue;\n        }\n        if (a[x])\n        {\n            sk[++tot]=a[x];\n            a[x]=0;\n            x++;continue;\n        }\n        rep(i,maint[x].size())\n        {\n            v=maint[x][i];\n            ans[v]=sk[ans[v]];\n        }\n        if (father[x]+1==x) tot--;\n        if (!x) return;\n        x=father[x];\n    }\n}\nint main()\n{\n    //freopen(\"type.in\",\"r\",stdin);\n    //freopen(\"type.out\",\"w\",stdout);\n    scanf(\"%d\\n\",&n);\n    rep(i,n)\n    {\n        scanf(\"%s\",&ch);\n        switch (ch)\n        {\n            case 'T':Type();break;\n            case 'U':Undo();break;\n            case 'Q':Query();break;\n        }\n    }\n    init();\n    rep(i,q) printf(\"%c\\n\",ans[i]);\n    return 0;\n}\n```\nIOI\u6311\u6218\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u505a\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u2026\u2026\n",
        "postTime": 1494141503,
        "uid": 22816,
        "name": "\u82ac\u7279",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1383)\n\n----\n\n\u5176\u5b9e\u5982\u679c\u6ca1\u6709 $\\text{Undo}$ \u64a4\u9500 $\\text{Undo}$ \u64cd\u4f5c\u7684\u8bdd\uff0c\u5c31\u662f\u4e00\u4e2a\u6808\u6a21\u62df~~\u4f46\u8fd9\u91cc\u6709\u554a~~\u3002\n\n\u770b\u5230\u6709\u64a4\u9500\u64cd\u4f5c\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u60f3\u5230\u7528\u4e3b\u5e2d\u6811\uff0c\u4f46\u8fd9\u4e2a\u4e3b\u5e2d\u6811\u662f\u4e0d\u5b9a\u957f\u7684\u3002\n\n\u4e5f\u5c31\u662f\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u5b9a\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u77e5\u9053\u6587\u7ae0\u672b\u5c3e\u5728\u54ea\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a $\\text{len[i]}$ \u8868\u793a\u5728\u7b2c $\\text{i}$ \u4e2a\u5386\u53f2\u7248\u672c\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\n\n\u4f46\u957f\u5ea6\u4e0d\u5b9a\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u8fb9\u754c\u4e0d\u77e5\u9053\u554a\uff0c\u4f46\u8fd9\u4e2a $\\text{n}$ \u975e\u5e38\u5c0f\uff0c\n\n\u6240\u4ee5\u76f4\u63a5\u5c06\u533a\u95f4\u7f6e\u4e3a $\\text{[1,n]}$ \uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u521d\u59cb\u503c\uff0c\u90fd\u4e0d\u9700\u8981\u5efa\u6811\u7684\u3002\n\n\u6ce8\u610f\uff1a\u64a4\u9500\u540e\u7684\u5386\u53f2\u7248\u672c\u662f $\\text{cnt - x - 1}$\uff0c\u4e0d\u662f $\\text{cnt - x }$\uff0c\u56e0\u4e3a $\\text{cnt}$ \u5148\u662f\u81ea\u52a0\u8fc7\u7684\u3002\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\ntemplate<typename T>void read(T &x) {\n    T f = 1;x = 0;char s = getchar();\n    while(s < '0' || s > '9') {if(s == '-')f = -1;s = getchar();}\n    while(s >= '0' && s <= '9') {x = x * 10 + s - '0';s = getchar();}\n    x *= f;\n}\ntemplate<typename T>void print(T x) {\n    if(x < 0) putchar('-'),x = -x;\n    if(x > 9) print(x / 10);\n    putchar(x % 10 + '0');\n}\n\nconst int maxn = 15000005;\nint n,m,a[maxn];\nint l[maxn],r[maxn],val[maxn],root[maxn],len[maxn],tot;\n\nint newnode(int now) {\n\tl[++ tot] = l[now];\n\tr[tot] = r[now];\n\tval[tot] = val[now];\n\treturn tot;\n}\n\nint build(int b,int e,int k) {\n\tk = ++ tot;\n\tif (b == e) {\n\t\tval[k] = a[b];\n\t\treturn k;\n\t}\n\tint mid = b + e >> 1;\n\tl[k] = build(b,mid,l[k]);\n\tr[k] = build(mid + 1,e,r[k]);\n\treturn k;\n}\n\nint update(int b,int e,int k,int x,int y) {\n\tk = newnode(k);\n\tif (b == e) val[k] = y;\n\telse {\n\t\tint mid = b + e >> 1;\n\t\tif (x <= mid) l[k] = update(b,mid,l[k],x,y);\n\t\telse r[k] = update(mid + 1,e,r[k],x,y);\n\t}\n\treturn k;\n}\n\nint query(int b,int e,int k,int x) {\n\tif (b == e) return val[k];\n\telse {\n\t\tint mid = b + e >> 1;\n\t\tif (x <= mid) return query(b,mid,l[k],x);\n\t\telse return query(mid + 1,e,r[k],x);\n\t}\n}\n\nint main () {\n\tread(n);\n\tchar str[2],s[2];\n\tint x,cnt = 0;\n\tfor (int i = 1 ; i <= n ; ++ i) {\n\t\tscanf(\"%s\",str);\n\t\tif (*str == 'T') {\n\t\t\tscanf(\"%s\",s);\n\t\t\t++ cnt;\n\t\t\tlen[cnt] = len[cnt - 1] + 1;\n\t\t\troot[cnt] = update(1,n,root[cnt - 1],len[cnt],s[0]);\n\t\t}\n\t\tif (*str == 'U') {\n\t\t\tread(x);\n\t\t\t++ cnt;\n\t\t\troot[cnt] = root[cnt - x - 1];\n\t\t\tlen[cnt] = len[cnt - x - 1];\n\t\t}\n\t\tif (*str == 'Q') {\n\t\t\tread(x);\n\t\t\tprintf(\"%c\\n\",query(1,n,root[cnt],x));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597219871,
        "uid": 163516,
        "name": "Strelitzia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "## \u81ea\u4ece\u6c34\u6389\u4e86\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u5e76\u4e14\u5c01\u88c5\u4e86\u4e00\u4e0b\uff0c\u6211\u518d\u4e5f\u6ca1\u6709\u4f53\u4f1a\u5230\u8fc7\u6389\u53ef\u6301\u4e45\u5316\u7ed3\u6784\u7684\u75db\u5feb\u611f\u4e86\u3002\u3002\u3002\n\n\u5148\u7528\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u7684\u6a21\u677f\u641e\u4e00\u53d1\uff0c\u628a\u81ea\u5b9a\u4e49\u6807\u8bb0\u7248\u672c\u53f7\u7684\u64cd\u4f5c\u7528\u4e0a\uff0c\u7136\u540e\u5c31\u597d\u4e86\u3002\n\n**Undo**\u64cd\u4f5c\u5f88\u7b80\u5355\uff0c\u627e\u5230**x\u6b65\u524d\u7684\u7248\u672c**\uff0c\u518d\u628a**\u4e0b\u4e00\u4e2a\u7248\u672c\u53f7**\u7684\u6807\u8bb0\u6307\u5411\u5b83\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u505a\u4e86\uff0c\u5b8c\u7f8e\u5b9e\u73b0\u4e86\u6240\u8c13\u7684**<IOI\u6311\u6218>**\n\n//\u8fd9\u662f\u6211\u7b2c\u4e09\u6b21\u63d0\u5230**chit**\u8fd9\u4e2a\u5355\u8bcd\u7684\u95ee\u9898\u4e86\uff0c\u67e5\u8fc7\u4e4b\u540e\u4f60\u5c31\u4f1a\u77e5\u9053\u8fd9\u4e2a\u53ea\u662f\u4e00\u4e2a~~\u5fae\u5999\u7684~~\u9519\u8bef\u3002~~\u770b\u6211\u6e10\u6e10\u53d8\u5f97\u8001\u53f8\u673a\u7684\u6ed1\u7a3d\u7b11\u5bb9\u3002~~[**chit n. \u4fbf\u6761 ; \u7626\u5c0f\u7684\u5c11\u5973**](http://fanyi.baidu.com/?aldtype=85#en/zh/chit)\n\n## \u4e0d\u8bf4\u4e86\u4e0a\u4ee3\u7801\n\n\u4e00\u80a1\u719f\u6089\u7684\u64cd\u4f5c\uff0c\u5927\u7ea6\u662f\u6211\u95fb\u5230\u4e86**chit**\u7684\u5473\u9053(\u53d8\u5f97\u597d\u5947\u602a233)\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <stdio.h>\nusing namespace std;\ntypedef long long LL;\n#define dd c=getchar()\ninline LL read(){LL a=0,b=1;int dd;while(!isdigit(c)&&c!='-')dd;\n\tif(c=='-'){b=-b;dd;}while(isdigit(c)){a=a*10+c-'0';dd;}return a*b;\n}\ninline int rc(){int dd;while(!isgraph(c))dd;return c;}\n#undef dd \ntemplate <int n>\nclass vervec{\nLL tree[40*n],ls[40*n],rs[40*n],hd[n],hd1[n],tt,t,nh;LL*a;\nLL&ins(LL nod,LL l,LL r,LL x){\n    if(l==r){return tree[nod];}\n    int mid=l+r>>1;\n    if(x<=mid){tree[++tt]=tree[ls[nod]];ls[tt]=ls[ls[nod]];rs[tt]=rs[ls[nod]];\n        ls[nod]=tt;return ins(tt,l,mid,x);}\n    if(x>mid){tree[++tt]=tree[rs[nod]];ls[tt]=ls[rs[nod]];rs[tt]=rs[rs[nod]];\n        rs[nod]=tt;return ins(tt,mid+1,r,x);}\n}\nvoid chit(){LL x=hd[nh];hd[++t]=++tt;tree[tt]=tree[x];\n    ls[tt]=ls[x];rs[tt]=rs[x];nh=t;}\n\n\n//\u4f7f\u7528\"chit\".....\u8111\u8865\u4e2d..... \u8b66\u5bdf\u8700\u9ecd\u5c31\u662f\u8fd9\u4e2a\u4eba\n\n\nint build(LL l,LL r){\n    LL nod=++tt;if(l==r){tree[nod]=a[l];ls[nod]=rs[nod]=0;return nod;}\n    LL mid=l+r>>1;\n    ls[nod]=build(l,mid);\n    rs[nod]=build(mid+1,r);\n    return nod;\n}\nvoid init(){tt=0;hd[nh=0]=1;build(1,n);}\nLL query(LL nod,LL l,LL r,LL x){\n    if(l==r)return tree[nod];\n    LL mid=l+r>>1;\n    if(x<=mid)return query(ls[nod],l,mid,x);\n    else if(x>mid)return query(rs[nod],mid+1,r,x);\n}\npublic:\n    vervec(){tt=0;t=0;nh=1;}\n    void init(LL*x){a=x;init();}\n    void mark(LL x){hd1[x]=nh;}\n    LL&operator[](LL x){chit();return ins(hd[nh],1,n,x);}\n    LL val(LL x){return query(hd[nh],1,n,x);}\n    void rever(LL x){nh=hd1[x];}\n};\nvervec<100003>b;\nLL a[100003],n,m,x,y,z,cpt=0;\nchar gp;\nint main(){\n    n=read();\n\ta[1]=1;\n    b.init(a);//\u8fd9\u91cc\u7684b\u662f\u53ef\u6301\u4e45\u5316\u7684\n    for(int i=1;i<=n;i++){\n\t\tgp=rc();//cpt\u5c31\u662f\u7248\u672c\u53f7\u7684\u8ba1\u6570\u5668\n\t\tif(gp=='T'){\n\t\t\tb[++b[1]]=rc();\n//[]\u64cd\u4f5c\u4f1a\u65b0\u5efa\u8282\u70b9\u518d\u5b58\uff0c.val()\u4e0d\u4f1a\u65b0\u5efa\u8282\u70b9\uff0c\u53ea\u4f1a\u8fd4\u56de\u5185\u5bb9\n\t\t\tb.mark(++cpt);\n\t\t}else if(gp=='U'){\n\t\t\tb.rever(cpt-read());\n\t\t\tb.mark(++cpt);\n\t\t}else if(gp=='Q'){\n\t\t\tputchar(b.val(read()+1));\n\t\t\tputchar('\\n');\n\t\t}\n    }\n    return 0;\n}\n```",
        "postTime": 1523855217,
        "uid": 13925,
        "name": "yyhhenry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684IOI\u6311\u6218\u5c31\u662f\u53ef\u6301\u4e45\u5316\u7ed3\u6784\uff1b\n\n\u5728\u7ebf\u7684\u5b9e\u73b0\u7528\u4e3b\u5e2d\u6811\u5c31\u597d\u4e86\uff1b\n\nundo\u5c31\u662f\u8ffd\u6eaf\u8fc7\u53bbsz-1-x\u7684\u7248\u672c\uff08\u5176\u672c\u8eab\u4e5f\u7b97\u4f5c\u4e00\u4e2a\u7248\u672c\uff09\uff1b\n\n\u800cquery\u5c31\u662f\u4ece\u4e0a\u6b21\u7684\u7248\u672c\u627e\u5230\u7b2cx\u4e2a\uff1b\n\n\u81f3\u4e8eadd\u5c31\u662f\u65b0\u5efa\u7acb\u4e00\u4e2a\u7248\u672c\uff0c\u5e76\u4e14\u5728\u8d77\u76f8\u5e94\u4f4d\u7f6e\u63d2\u5165\u5f53\u524d\u7684\u5b57\u7b26c\uff1b\n\n\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\u3002\n\nc++\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N = 1e6 + 1;\nint n,sz,tot,root[N],ls[N],rs[N],len[N];\nchar s[N];\ninline void read(int&x)\n{\n    char c = getchar();\n    do{\n        x = x*10 + c - '0' ;c=getchar();\n    }while(c <= '9' && c >= '0');\n}\ninline void update(int x,int&y,int l,int r,int pos,char c)\n{\n    y = ++tot;\n    if(l == r){ s[y] = c; return ;}\n    int mid = l+r>>1;\n    ls[y] = ls[x];rs[y]=rs[x];\n    if(pos <= mid) update(ls[x],ls[y],l,mid,pos,c);\n    else update(rs[x],rs[y],mid+1,r,pos,c);\n}\ninline void Q(int x,int l,int r,int pos)\n{\n    if(l == r){ printf(\"%c\\n\",s[x]);return ;}\n    int mid = l+r >> 1;\n    if(pos <= mid) Q(ls[x],l,mid,pos);\n    else Q(rs[x],mid+1,r,pos);\n}\nint main()\n{\n    read(n);\n    for(int i = 1;i<=n;i++)\n    {\n        int x=0;char c;\n        for(c = getchar();c != 'Q' && c != 'T' && c!='U' ;c=getchar());\n        getchar();\n        if(c == 'Q'){ read(x);Q(root[sz],1,n,x); }\n        else if(c == 'U') {\n            read(x);\n            sz++;\n            len[sz] = len[sz-x-1];\n            root[sz] = root[sz-x-1];\n        }\n        else if(c == 'T')\n        {\n            c=getchar();\n            sz++;len[sz] = len[sz-1] + 1;\n            update(root[sz-1],root[sz],1,n,len[sz],c);\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1495692329,
        "uid": 23087,
        "name": "Tgotp",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "\u624d\u53d1\u73b0\u8fd9\u662f\u9053\u4e3b\u5e2d\u6811\u6c34\u9898...\n\n\n\n$O(n\\log n)$ \u8f7b\u677e\u6c34\u8fc7$QAQ$\n\n\u90a3\u4e48...\n\n\u5bf9\u4e8e T \u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u7248\u672c\uff0c\u7ee7\u627f\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u5927\u90e8\u5206\u4fe1\u606f\uff0c\u5e76\u5728\u7ed3\u5c3e\u5904\u4fee\u6539\u4e00\u4e2a\u5b57\u7b26\u4fe1\u606f\u5373\u53ef\n\n\u5bf9\u4e8e U \u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u7248\u672c\uff0c\u7ee7\u627f\u5411\u524d\u6570\u7b2c x \u4e2a\u7248\u672c\u7684\u4fe1\u606f\u5373\u53ef(\u8fd8\u662f\u90a3\u53e5\u8bdd\uff0c\u5f15\u8d77\u53ef\u6301\u4e45\u5316\u7684\u7f6a\u9b41\u7978\u9996\u5012\u662f\u5bb9\u6613\u89e3\u51b3)\n\n\u5bf9\u4e8e Q \u64cd\u4f5c\uff0c\u6211\u4eec\u76f4\u63a5\u67e5\u8be2\u5f53\u524d\u7248\u672c\u7684\u7b2c x \u4e2a\u5b57\u7b26\u8f93\u51fa\u5373\u53ef\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//by Judge(\u538b\u884c\u72c2\u9b54)\n#include<iostream>\n#include<cstdio>\n#define mid (l+r>>1)\nusing namespace std;\nconst int M=1e5+11;\ninline int read(){  //\u8bfb\u6570\u5b57\n\tint x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n}\ninline char cread(){  //\u8bfb\u5b57\u7b26(\u4e00\u884c\u79d2)\n\tchar c=getchar(); while(!isalpha(c)) c=getchar(); return c;\n}\nint n,siz,cnt,rt[M],L[M<<5],R[M<<5],len[M]; char s[M<<5]; //\u4e8b\u5b9e\u4e0a\u8fd9\u91cc\u4e0d\u4e00\u5b9a\u8981\u7528 32 \u500d\u7a7a\u95f4\uff0c\uff08\u56e0\u4e3a\u9898\u76ee\u4e2d\u8fd8\u6709\u64a4\u9500\u3001\u8be2\u95ee\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7684\u9650\u5236\uff09\uff0c\u4f46\u662f\u4e3b\u5e2d\u6811\u7a7a\u95f4\u5f80\u5927\u4e86\u5f00\u6ca1\u9519\nvoid update(int& now,int las,int l,int r,int pos,char c){  //\u7c7b(jiu)\u4f3c(shi)\u4e3b\u5e2d\u6811\u7684\u64cd\u4f5c\n\tnow=++cnt; if(l==r) return (void)(s[now]=c);\n\tif(pos<=mid) R[now]=R[las], update(L[now],L[las],l,mid,pos,c);\n\telse L[now]=L[las], update(R[now],R[las],mid+1,r,pos,c);\n}\nint query(int now,int l,int r,int pos){ //\u8be2\u95ee\u4f4d\u7f6e pos \u4e0a\u7684\u5b57\u7b26\n\tif(l==r) return s[now];\n\tif(pos<=mid) return query(L[now],l,mid,pos);\n\telse return query(R[now],mid+1,r,pos); \n}\nint main(){ //\u4e3b\u51fd\u6570\u975e\u5e38\u7b80\u77ed(\u538b\u884c\u7684\u526f\u4ea7\u54c1...\u597d\u5427\u6211\u8fd8\u662f\u6362\u6362\u884c\u5427)\n\tint n,x,i; char c,opt;\n\tfor(i=1,n=read();i<=n;++i)\n\tswitch(opt=cread()){\n\t\tcase 'T':\n        \tc=cread(),len[++siz]=len[siz-1]+1,\n            update(rt[siz],rt[siz-1],1,n,len[siz],c); break;\n\t\tcase 'U':\n        \tx=read(),len[++siz]=len[siz-x-1],\n            rt[siz]=rt[siz-x-1]; break;\n\t\tcase 'Q':\n\t\t\tprintf(\"%c\\n\",query(rt[siz],1,n,x=read())); break;\n\t} return 0;\n}\n```",
        "postTime": 1533794565,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "# \u9ad8\u7ea7\u6253\u5b57\u673a \u9898\u89e3\n\n---\n\u5c5e\u4e8e\u6bd4\u8f83\u88f8\u7684\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\u9898\u3002\n\n\u6211\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u4e3b\u5e2d\u6811\uff0c\u4e3b\u5e2d\u6811\u53ef\u4ee5\u89e3\u51b3\u5bf9\u4e00\u4e2a\u6570\u5217\uff08\u6216\u4ec0\u4e48\u522b\u7684\u6570\u636e\u7ed3\u6784\uff09\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\u7684\u95ee\u9898\uff1a\n\n1.\u4fee\u6539\u67d0\u4e2a\u5386\u53f2\u7248\u672c\uff0c\u5e76\u5c06\u4fee\u6539\u5b8c\u7684\u7248\u672c\u4f5c\u4e3a\u65b0\u7684\u7248\u672c\u3002\n\n2.\u8be2\u95ee\u67d0\u4e2a\u5386\u53f2\u7248\u672c\u4e0a\u7684\u503c\u3002\n\n\u9898\u76ee\u8981\u6c42\u7ef4\u62a4\u6587\u7ae0\u7684\u7b2cx\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u77e5\u9053\u5728\u4e3b\u5e2d\u6811\u4e2d\uff0c\u53f6\u5b50\u8282\u70b9\u8bb0\u5f55\u7684\u5c31\u662f\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u4e8e\u662fT\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u4e00\u6761\u94fe\u7136\u540e\u65b0\u5efa\u7248\u672c\u5b9e\u73b0\u3002\n\n\u90a3\u4e48U\u64cd\u4f5c\u5462\uff1f\u8bbe\u65b0\u5efa\u7684\u7248\u672c\u6807\u53f7\u4e3aver\uff0c\u90a3\u4e48\u64a4\u9500\u6700\u540ex\u6b21\u64cd\u4f5c\u4e5f\u5c31\u662f\u56de\u5230\u6807\u53f7\u4e3aver-x-1\u7684\u7248\u672c\uff0c\u5c06ver\u7248\u672c\u7684\u6839\u8bbe\u4e3aver-x-1\u7684\u6839\u5373\u53ef\u3002\n\n\u8fd9\u4e48\u4e00\u6765\uff0cQ\u64cd\u4f5c\u5c31\u597d\u505a\u4e86\uff0c\u4e5f\u5c31\u662f\u8be2\u95eex\u4f4d\u7f6e\u7684\u503c\u662f\u4ec0\u4e48\uff0c\u4e00\u8def\u9012\u5f52\u81f3\u53f6\u5b50\u7ed3\u70b9\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nconst int N = 100007;\n\nint q, t, cnt = 0, tot = 0;\nchar c;\n\nint len[N];\n\nstruct Tree\n{\n    int rt[N], lson[N << 5], rson[N << 5];\n    char val[N << 5];\n\n    void build(int &rt, int fa, int l, int r, int po)\n    {\n        if (!rt)\n            rt = ++tot; //\u52a8\u6001\u5f00\u70b9\n        if (l == r)\n        {\n            val[rt] = c; //\u8bbe\u7f6e\u53f6\u5b50\u7ed3\u70b9\u503c\n            return;\n        }\n        int mid = (l + r) >> 1;\n        if (po <= mid)\n            rson[rt] = rson[fa], build(lson[rt], lson[fa], l, mid, po);\n        if (mid + 1 <= po)\n            lson[rt] = lson[fa], build(rson[rt], rson[fa], mid + 1, r, po);\n    }\n\n    char qry(int rt, int l, int r, int po)\n    {\n        if (l == r)\n            return val[rt]; //\u8fd4\u56de\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\n        int mid = (l + r) >> 1;\n        if (po <= mid)\n            return qry(lson[rt], l, mid, po);\n        if (mid + 1 <= po)\n            return qry(rson[rt], mid + 1, r, po);\n    }\n} tree;\n\nint main()\n{\n    scanf(\"%d\", &q);\n    while (q--)\n    {\n        scanf(\" %c\", &c);\n        if (c == 'T')\n        {\n            scanf(\" %c\", &c);\n            len[++cnt] = len[cnt - 1] + 1; //\u65b0\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u957f\u5ea6\u589e\u52a0\n            tree.build(tree.rt[cnt], tree.rt[cnt - 1], 1, N, len[cnt]);\n        }\n        else if (c == 'U')\n        {\n            scanf(\"%d\", &t);\n            len[++cnt] = len[cnt - t - 1]; //\u957f\u5ea6\u548ccnt - t - 1\u957f\u5ea6\u76f8\u7b49\n            tree.rt[cnt] = tree.rt[cnt- t - 1];\n        }\n        else\n        {\n            scanf(\"%d\", &t);\n            printf(\"%c\\n\", tree.qry(tree.rt[cnt], 1, N, t)); //\u8be2\u95ee\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1514021407,
        "uid": 37598,
        "name": "GaryZhong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "\u5bf9\u4e8e200%\u6570\u636e\u9700\u8981\u4e00\u4e2a\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u91cc\u9009\u62e9\u4e86\u53ef\u6301\u4e45\u5316\u6808\uff08\u5f53\u7136\u4f60\u8981\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u4e5f\u884c\uff0c\u5c31\u662f\u96be\u5199\uff09\n\n\u5927\u6982\u5c31\u662f\u4e00\u68f5\u6811\uff0c\u4ece\u6839\u8282\u70b9\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u5c31\u662f\u5f53\u524d\u8282\u70b9\u4ee3\u8868\u7684\u6570\u7ec4\n\n\u5bf9\u4e8eT\u64cd\u4f5c\u5c31\u5728\u5f53\u524d\u8282\u70b9\u4e0b\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u5bf9\u4e8eU\u64cd\u4f5c\u5c31\u628a\u5f53\u524d\u8282\u70b9\u6307\u5411\u524dx\u4e2a\u64cd\u4f5c\u7684\u8282\u70b9\n\n\u5bf9\u4e8e\u79bb\u7ebfQ\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5efa\u6811\u540eDFS\uff0c\u6548\u7387O(n)\uff0c\u5bf9\u4e8e\u5728\u7ebfQ\u64cd\u4f5c\uff0c\u5c31\u662f\u5728\u6bcf\u4e2aT\u64cd\u4f5c\u5efa\u500d\u589e\u7684\u5bfb\u7956\u6570\u7ec4\uff0c\u7136\u540eQ\u64cd\u4f5c\u65f6\u500d\u589e\u627e\u7956\u5148\n\n\u5bf9\u4e8e\u6837\u4f8b\u5efa\u7684\u56fe\u5982\u4e0b\uff0c\u70b9\u7684\u6570\u5b57\u4ee3\u8868\u6bcf\u4e2a\u64cd\u4f5c\u6307\u5411\u7684\u8282\u70b9(\u5982\u679c\u88ab\u6c34\u5370\u906e\u4f4f\u7684\u8bdd\uff0c\u5de6\u4e0b\u89d2\u5b57\u662fc3)\n\n ![](https://cdn.luogu.com.cn/upload/pic/9245.png) \n\n\u79bb\u7ebf\u4ee3\u7801\n\n```cpp\n#include<cstdio>\nusing namespace std;\n#define fo(a,b,c) for(int a=b;a<=c;a++)\nint read(){\n    int a=0,f=0;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f=1;\n    for(;c>='0'&&c<='9';c=getchar())a=a*10+c-'0';\n    return f?-a:a;\n}\nconst int N=100001;\nint bel[N],son[N],bro[N],ne[N],head[N],ask[N];\nchar c[N],ans[N],arr[N];\nvoid dfs(int u,int len){\n    arr[len]=c[u];\n    for(int x=head[u];x;x=ne[x])ans[x]=arr[ask[x]];\n    for(int x=son[u];x;x=bro[x])dfs(x,len+1);\n}\nint main(){\n    int n=read(),nt=0,nu=0,nq=0;\n    fo(i,1,n){\n        scanf(\"\\n\");\n        char opt=getchar();getchar();\n        if(opt=='T'){\n            bel[++nu]=++nt;\n            bro[nt]=son[bel[nu-1]];\n            son[bel[nu-1]]=nt;\n            c[nt]=getchar(); \n        }\n        if(opt=='U')bel[++nu]=bel[nu-read()-1];\n        if(opt=='Q'){\n            ne[++nq]=head[bel[nu]];\n            head[bel[nu]]=nq;\n            ask[nq]=read();\n        }\n    }\n    dfs(0,0);\n    fo(i,1,nq)printf(\"%c\\n\",ans[i]);\n    return 0;\n}\n```\n\u5728\u7ebf\u4ee3\u7801\n\n```cpp\n#include<cstdio>\nusing namespace std;\n#define fo(a,b,c) for(int a=b;a<=c;a++)\nint read(){\n    int a=0,f=0;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f=1;\n    for(;c>='0'&&c<='9';c=getchar())a=a*10+c-'0';\n    return f?-a:a;\n}\nconst int N=100001;\nint bel[N],fa[N][20],deep[N];\nchar c[N];\nint main(){\n    int n=read(),nt=0,nu=0;\n    fo(i,1,n){\n        scanf(\"\\n\");\n        char opt=getchar();getchar();\n        if(opt=='T'){\n            bel[++nu]=++nt;\n            deep[nt]=deep[bel[nu-1]]+1;\n            fa[nt][0]=bel[nu-1];\n            for(int i=0;fa[fa[nt][i]][i];i++)\n                fa[nt][i+1]=fa[fa[nt][i]][i];\n            c[nt]=getchar(); \n        }\n        if(opt=='U')bel[++nu]=bel[nu-read()-1];\n        if(opt=='Q'){\n            int p=bel[nu];\n            for(int x=deep[p]-read(),i=0;x;x>>=1,i++)\n                if(x&1)p=fa[p][i];\n            printf(\"%c\\n\",c[p]);\n        } \n    }\n    return 0;\n}\n```",
        "postTime": 1508337071,
        "uid": 12668,
        "name": "Minclxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "\u54a6\uff1fIOI\u96be\u5ea6\u662f\u5728\u7ebf\uff1f\n\n\u6211\u7a0d\u5fae\u60f3\u4e86\u60f3\uff0c\u8c8c\u4f3c\u5728\u7ebf\u5e76\u4e0d\u9700\u8981\u4ec0\u4e48\u4e3b\u5e2d\u6811\u7684\u3002\n\n\u6211\u4eec\u500d\u589e\u5c31\u597d\u4e86~\uff01\n\n\u6211\u4eec\u5148\u628a\u9898\u76ee\u8f6c\u5316\u4e00\u4e0b\uff0c\u628a\u6574\u4e2a\u6587\u7ae0\u770b\u505a\u4e00\u6761\u94fe\uff0cUndo\u64cd\u4f5c\u4e5f\u770b\u505a\u662f\u5f80\u91cc\u9762\u63d2\u4e86\u4e00\u4e2a'U'\u7684\u5b57\u7b26\uff08\u53ea\u4e0d\u8fc7\u6700\u540e\u4e0d\u8ba1\u7b97\u7b54\u6848\u7f62\u4e86\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u2018U\u2018\u5b57\u7b26\uff0c\u6211\u4eec\u5f80\u4e0a\u627e\u7b2cx+1\u4e2a\u5b57\u7b26\uff0c\u548c\u5b83\u8fde\u8fb9\uff0c\u5c31\u548c\u9898\u76ee\u8981\u6c42\u7684\u64cd\u4f5c\u662f\u540c\u4e00\u4e2a\u9053\u7406\u4e86\u3002\n\n\u53ef\u80fd\u5927\u5bb6\u8fd8\u4e0d\u662f\u592a\u61c2\uff0c\u6211\u6254\u4e2a\u56fe\u4e0a\u6765\u7ed9\u5927\u5bb6\u770b\u770b\n\n\u2026\u2026\u6655\uff0c\u6211\u5e76\u4e0d\u4f1a\u653e\u56fe\u3002\n\n\u8fd9\u4e48\u8bb2\uff0c\u6211\u4eec\u89c4\u5b9aU\u5411\u524d\u9762\u67d0\u4e2a\u70b9\u8fde\u7684\u8fb9\u67d3\u6210\u7ea2\u8272\uff0c\u539f\u94fe\u4e0a\u7684\u8fb9\u662f\u9ed1\u8272\u3002\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u9047\u5230\u7ea2\u8272\u8fb9\u5219\u8df3\u7ea2\u8272\u8fb9\uff0c\u5426\u5219\u8df3\u9ed1\u8272\u8fb9\u3002\n\n\u800c\u8fd9\u5c31\u53ef\u4ee5\u7528\u500d\u589e\u4e86\uff0c\u6bcf\u63d2\u5165\u4e00\u4e2a\u70b9\uff0c\u5219\u5904\u7406\u4ee5\u4e0b\u51e0\u4e2a\u6570\u7ec4\n\n\u6ce8\uff1a\u5b9a\u4e49\u201c\u5408\u6cd5\u5b57\u7b26\u201d\u4e3a\u4e0d\u662f'U\u2019\u7684\u5b57\u7b26\uff0c\u201c\u5b57\u7b26\u201d\u5219\u6307\u6240\u6709\u5b57\u7b26\n\nF[i][j] \u4ecei\u5f00\u59cb\u5f80\u4e0a\uff0c\u9047\u7ea2\u5219\u8df3\u7ea2\uff0c\u5426\u5219\u8df3\u9ed1\uff0c\u9047\u5230\u7684\u7b2c(1<<j)\u4e2a\u5408\u6cd5\u5b57\u7b26\u7684\u4f4d\u7f6e\u3002\n\nG[i][j] \u4ecei\u5f00\u59cb\u5f80\u4e0a\uff0c\u53ea\u8df3\u9ed1\uff0c\u9047\u5230\u7684\u7b2c(1<<j)\u4e2a\u7684\u5b57\u7b26\u7684\u4f4d\u7f6e\u3002\n\nHead[i] \u82e5i\u4e3a'U'\uff0c\u5219\u8bb0\u5f55\u5b83\u7684\u7ea2\u8fb9\u662f\u8fde\u5411\u524d\u9762\u7684\u8c01\uff0c\u5426\u5219Head[i]=i-1\uff1b\n\nnum[i] \u4ecei\u5f00\u59cb\u5f80\u4e0a\uff0c\u9047\u7ea2\u5219\u8df3\u7ea2\uff0c\u5426\u5219\u8df3\u9ed1\uff0c\u4e00\u76f4\u5230\u6700\u9876\u4e0a\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u5408\u6cd5\u5b57\u7b26\n\nClose[i] \u4ecei\u5f00\u59cb\u5f80\u4e0a\uff0c\u9047\u7ea2\u5219\u8df3\u7ea2\uff0c\u5426\u5219\u8df3\u9ed1\uff0c\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u5408\u6cd5\u5b57\u7b26\u7684\u4f4d\u7f6e\n\n\u500d\u589e\u5904\u7406\u5373\u53ef~~\u67e5\u8be2\u5f88\u7b80\u5355\uff0c\u67e5F\u6570\u7ec4\u5373\u53ef\u3002\n\n\u611f\u89c9\u5e76\u4e0d\u662fIOI\u96be\u5ea6\u2026\u2026\u8fde\u7701\u9009\u90fd\u8d76\u4e0d\u4e0a\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define o 100101\n//\u500d\u589e\u4fdd\u5b58\nint f[o][23];\nint g[o][23];\nint close[o],head[o],num[o]; \nusing namespace std;\nint cnt,n,w;\nchar s[10],c[10],A[o];\nvoid insert(){\n    num[cnt]=num[cnt-1]+1;\n    close[cnt]= A[cnt-1]=='U'? close[cnt-1]:cnt-1;\n    f[cnt][0]= A[cnt-1]=='U'? close[cnt-1]:cnt-1;\n    head[cnt]= cnt-1;\n    for(int i=1;i<=20;i++) f[cnt][i]=f[f[cnt][i-1]][i-1];    \n    g[cnt][0]=cnt-1;\n    for(int i=1;i<=20;i++) g[cnt][i]=g[g[cnt][i-1]][i-1];\n}\nvoid Undo(int x){\n    \n    x--;int now=cnt;\n    A[++cnt]='U';\n    for(int i=20;i>=0;i--)\n    if((1<<i)<=x){\n        x-=(1<<i);\n        now=g[now][i];\n    }\n    now--;\n    head[cnt]=now;\n    num[cnt]=num[now];\n    close[cnt]= A[now]=='U'? close[now]:now;\n    f[cnt][0]= A[now]=='U'? close[now]:now;\n    for(int i=1;i<=20;i++) f[cnt][i]=f[f[cnt][i-1]][i-1];\n    g[cnt][0]=cnt-1;\n    for(int i=1;i<=20;i++) g[cnt][i]=g[g[cnt][i-1]][i-1];    \n}\nint main(){\n    scanf(\"%d\",&n);\n    A[0]='A';close[0]=0;\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",s);\n        if(s[0]=='T'){\n            scanf(\"%s\",c);\n            A[++cnt]=c[0]; \n            insert();\n            continue;\n        } \n        if(s[0]=='U'){\n            scanf(\"%d\",&w);\n            Undo(w);\n            continue;\n        }\n        if(s[0]=='Q'){\n            scanf(\"%d\",&w);\n            w=num[cnt]-w+1;\n            if(w<=0)w=1;\n            if(A[cnt]!='U')w--;\n            int now=cnt;\n            for(int i=20;i>=0;i--)\n            if((1<<i)<=w){\n                w-=(1<<i);\n                now=f[now][i];\n            }\n            printf(\"%c\\n\",A[now]);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1507880479,
        "uid": 24559,
        "name": "Treeloveswater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "@\u697c\u4e0b: \u8fd9\u624d\u662f\u8fc7\u5ea6\u4f9d\u8d56STL\u7684\u6b63\u786e\u59ff\u52bf\n\n\n\u597d\u50cf\u5927\u5bb6\u90fd\u8bf4IOI\u6311\u6218\u9700\u8981\u4e3b\u5e2d\u6811\u624d\u80fdAC...(\u867d\u7136\u6211\u4e5f\u8fd9\u4e48\u89c9\u5f97)\n\n\u4f46\u8fd9\u9898\u7528 **STL::rope** \u5b8c\u5168\u53ef\u4ee5\n\n\n```cpp\n#include <stdio.h>\n#include \"ext/rope\"\n#include \"algorithm\"\nusing namespace std;\nusing namespace __gnu_cxx;\n\nconst int N=1e+5 +4;\n\nint n;\nint d[N];\nrope<char> *mem[N];\n\ninline int lowbit(int x)\n{\n    return x&-x;\n}\n\ninline void update(int x)\n{\n    while(x<=n)\n    {\n        d[x]++;\n        x+=lowbit(x);\n    }\n}\n\ninline int get(int x)\n{\n    int res=0;\n    while(x)\n    {\n        res+=d[x];\n        x-=lowbit(x);\n    }\n    return res;\n}\n\ninline char getC()\n{\n    char ch=getchar();\n    while(!isalpha(ch))\n        ch=getchar();\n    return ch;\n}\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"type.in\",\"r\",stdin);\n    freopen(\"type.out\",\"w\",stdout);\n#endif\n    scanf(\"%d\",&n);\n    mem[0]=new rope<char>();\n    for(int i=1,x;i<=n;i++)\n    {\n        mem[i]=new rope<char>(*mem[i-1]);\n        char c=getC();\n        if(c=='T')\n        {\n            char x=getC();\n            mem[i]->push_back(x);\n            update(i);\n        }\n        else if(c=='U')\n        {\n            update(i);\n            scanf(\"%d\",&x);\n            int l=1,r=i,now=get(i);\n            while(l<r)\n            {\n                int mid=(l+r)>>1;\n                if(now-get(mid)>x)\n                    l=mid+1;\n                else\n                    r=mid;\n            }\n            mem[i]=mem[l-1];\n        }\n        else if(c=='Q')\n        {\n            scanf(\"%d\",&x);\n            putchar(mem[i]->at(x-1));\n            puts(\"\");\n        }\n    }\n    return 0;\n}\n\n```\n\n\u6ce8\u610f\u8fd9\u53e5\n\n\n```cpp\nmem[i]=new rope<char>(*mem[i-1]);\n\n```\n\n\u5c31\u662f\u8fd9\u4e00\u53e5\u53ef\u4ee5\u5b9e\u73b0O(1)\u7684\u62f7\u8d1d\u5386\u53f2\u7248\u672c\uff0c\u7531\u4e8erope\u7684\u5e95\u5c42\u662f\u5e73\u8861\u6811\uff0ccopy\u65f6copy\u6839\u8282\u70b9\u5c31\u884c\u4e86\n\n\u7528\u5b83\u5c31\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u53ef\u6301\u4e45\u5316\u6570\u7ec4\n",
        "postTime": 1507204268,
        "uid": 11771,
        "name": "\u7b71\u5f71\u5fd7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "\n\u8bf4\u8d77\u6765\u597d\u50cf\u5927\u5bb6\u597d\u50cf\u90fd\u8bf4IOI\u6311\u6218\u9700\u8981\u4e3b\u5e2d\u6811\u624d\u80fdAC...\n\n\u4f46\u5b9e\u9645\u4e0a\u6211\u7528\u4e86\u4e00\u4e2a\u4e0d\u77e5\u9053\u53eb\u4ec0\u4e48\u540d\u5b57\u7684\u6570\u636e\u7ed3\u6784\uff08\u53ef\u6301\u4e45\u5316\u6808\uff1f\uff09...\u5728\u7ebf\u8fc7\u6389\u4e86\u8fd9\u9053\u9898\n\n\u4f46\u7531\u4e8e\u672c\u4eba\u4e25\u91cd\u4f9d\u8d56STL\u800c\u4e14\u4f7f\u7528\u59ff\u52bf\u4e5f\u4e0d\u662f\u5f88\u9ad8...\n\n\u5bfc\u81f4\u4ee3\u7801\u5e38\u6570\u5de8\u5927\uff0c\u7a7a\u95f4\u5927\u5f97\u60ca\u4eba...\n\n\n\u9996\u5148\u8003\u8651\u4e0d\u4f1a\u64a4\u9500\u64a4\u9500\u64cd\u4f5c\u7684\u64a4\u9500\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u662f\u5c06\u6808\u9876\u6307\u9488\u4e0b\u79fb$x$\u4e2a\u5355\u4f4d\uff0c\u7136\u540e\u4ee5\u540e\u63d2\u5165\u7684\u65f6\u5019\u5728\u6808\u9876\u63d2\u5165\u3002\n\n\n\u518d\u8003\u8651\u4f1a\u64a4\u9500\u64a4\u9500\u64cd\u4f5c\u7684\u64a4\u9500\u64cd\u4f5c\uff0c\u8003\u8651\u64a4\u9500\u65f6\u7684\u4e2d\u95f4\u8fc7\u7a0b\uff0c\u5982\u679c\u8fd9\u6b21\u64a4\u9500\u64cd\u4f5c\u64a4\u9500\u4e86\u4e0a\u4e00\u6b21\u64a4\u9500\u64cd\u4f5c\uff0c\u90a3\u4e48\u5f53\u524d\u6808\u5c31\u4f1a\u56de\u9000\u5230\u4e0a\u4e00\u6b21\u64a4\u9500\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u4e8e\u662f\u8003\u8651\u5c06\u6bcf\u4e00\u6b21\u64a4\u9500\u64cd\u4f5c\u524d\u7684\u6808\u90fd\u4fdd\u5b58\u4e0b\u6765\uff0c\u540c\u65f6\u8bb0\u5f55\u5404\u4e2a\u6808\u7684\u65f6\u95f4\u6233\uff0c\u9047\u5230\u64a4\u9500\u64cd\u4f5c\u7684\u65f6\u5019\u4e8c\u5206\u67e5\u627e\u8fd9\u6b21\u64a4\u9500\u80fd\u591f\u56de\u9000\u5230\u7684\u72b6\u6001\uff0c\u7531\u4e8e\u8be5\u6b21\u64a4\u9500\u64cd\u4f5c\u56de\u5230\u7684\u8fc7\u53bb\u7684\u65f6\u95f4\u6233\u548c\u4e8c\u5206\u56de\u9000\u5230\u7684\u65f6\u95f4\u6233\u5b58\u5728\u4e00\u4e2a\u5dee\u503c\uff0c\u6240\u4ee5\u5728\u56de\u9000\u4ee5\u540e\u518d\u5c06\u6808\u9876\u6307\u9488\u4e0b\u79fb\u5c31\u53ef\u4ee5\u4e86\n\n\n\u8003\u8651\u7a7a\u95f4\u5f00\u9500\uff0c\u5982\u679c\u5728 $n/2$ \u6b21\u63d2\u5165\u64cd\u4f5c\u4ee5\u540e\u4e00\u76f4\u64a4\u56de\u4e0a\u4e00\u6761\u64cd\u4f5c\uff0c\u6b64\u65f6\u8fbe\u5230\u6700\u574f\u60c5\u51b5\u4e3a$n^2$\u7ea7\u522b\uff0c\u4f46\u5b9e\u9645\u4e0a\u6570\u636e\u6ca1\u6709\u5361\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f$n*log(n)$\u7684\n\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <utility>\n#include <vector>\nusing std::vector;\nusing std::pair;\nusing std::make_pair;\n\ntemplate <typename T>\ninline void get(T& a) {\n  char c = getchar();\n  while (!isdigit(c)) c = getchar();\n  a = 0;\n  while (isdigit(c)) {\n    a = a * 10 + (c & 0xf);\n    c = getchar();\n  }\n}\n\nvector<pair<int, vector<int> > > history;\nvector<int> real_time_stack;\nint real_time_stack_top_ptr;\nint time_tag;\n\nint find(int val) {\n  int l = 0;\n  int r = history.size() - 1;\n  while (l < r) {\n    int mid = (l + r) >> 1;\n    if (history[mid].first == val)\n      return mid;\n    else if (history[mid].first > val)\n      r = mid;\n    else\n      l = mid + 1;\n  }\n  return l;\n}\n\nint main() {\n  int n;\n  get(n);\n  for (int i = 1; i <= n; i++) {\n    int x = getchar();\n    while (!isalnum(x)) x = getchar();\n    if (x == 'T') {\n      time_tag++;\n      x = getchar();\n      while (!isalpha(x)) x = getchar();\n      if (real_time_stack_top_ptr < real_time_stack.size())\n        real_time_stack[real_time_stack_top_ptr++] = x;\n      else {\n        real_time_stack.push_back(x);\n        real_time_stack_top_ptr++;\n      }\n    } else if (x == 'U') {\n      time_tag++;\n      get(x);\n      history.push_back(make_pair(\n          time_tag, vector<int>(real_time_stack.begin(),\n                                real_time_stack.begin() + real_time_stack_top_ptr)));\n      int idx = find(time_tag - x);\n      if (idx != time_tag) {\n        int prefix = history[idx].first - time_tag + x;\n        real_time_stack = history[idx].second;\n        real_time_stack_top_ptr = real_time_stack.size() - prefix;\n      } else {\n        real_time_stack_top_ptr -= x;\n      }\n    } else {\n      get(x);\n      printf(\"%c\\n\", real_time_stack[x - 1]);\n    }\n  }\n  return 0;\n}\n\n```",
        "postTime": 1505567904,
        "uid": 21964,
        "name": "tonyfettes",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    },
    {
        "content": "> ## \u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u53ef\u6301\u4e45\u5316\u6570\u7ec4\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053,**\"UNDO\"**\u64cd\u4f5c,\u4e5f\u5c31\u662f\u76f4\u63a5\u8df3\u56de\u524d\u9762\u7684\u64cd\u4f5c(\u5386\u53f2\u64cd\u4f5c),\u7136\u540e\u8df3\u56de\u7684\u5730\u65b9\u5230\u73b0\u5728\u7684\u5730\u65b9\u8fd9\u4e00\u4e2a\u533a\u95f4\u7684\u64cd\u4f5c\u90fd\u4e0d\u7528\u7ba1\u3002(\u8fd9\u5c31\u662f\u9ad8\u7ea7\u6311\u6218\u7684\u601d\u8def)\n\n(\u53ef\u6301\u4e45\u5316\u662f\u6307\u4e00\u79cd\u53ef\u4ee5\u8bbf\u95ee\u5386\u53f2\u7248\u672c\u7684\u6570\u636e\u7ed3\u6784)\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053,\u8be2\u95ee\u5386\u53f2,\u53c8\u662f\u6570\u7ec4,\u4e5f\u5c31\u662f\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u3002\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u7684\u7ef4\u62a4\u5f88\u7b80\u5355,\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a$O(N^2)$\u7684\u77e9\u9635,\u7136\u540e\u8fdb\u884c\u64cd\u4f5c\u3002\u4f46\u662f\u8fd9\u6837\u5b50\u7a7a\u95f4\u4f1a\u7206\u70b8,\u600e\u4e48\u529e?\u6240\u4ee5\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u53c8\u53ef\u4ee5\u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4,\u867d\u7136\u6709\u5f88\u591a\u7a7a\u95f4\u6d6a\u8d39\u4e86,\u4e0d\u8fc7\u7a7a\u95f4\u4e5f\u8fd8\u662f$O(N\\ log\\ N)$(\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u6570\u5e26\u6765\u7684\u7a7a\u95f4\u662f$log\\ n$\u7684)\u3002\n\n\u6240\u4ee5\u5c31\u8fd9\u6837\u5b50\u54af,\u5982\u679c\u8fd8\u4e0d\u4f1a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811(\u4e3b\u5e2d\u6811)\u7684\u53ef\u4ee5\u53bb\u505a\u6d1b\u8c37\u7684\u6a21\u677f\u3002\n\n```pascal\n// luogu-judger-enable-o2\nvar\n        n,cnt,hao,tot:longint;\n        len,lson,rson,root:array[0..2000035] of longint;\n        value:array[0..2000035] of char;\n        s:string;\n        HuHa:char;\n\nprocedure build(var rt:longint; fa,l,r,po:longint); //\u63d2\u5165\u4e00\u4e2a\u6570\nvar\n        mid:longint;\nbegin\n        if (rt=0) then\n        begin\n                inc(tot);\n                rt:=tot; //\u52a8\u6001\u5f00\u70b9\n        end;\n        if l=r then //\u5230\u4e86\u53f6\u5b50\u8282\u70b9\n        begin\n                value[rt]:=HuHa; //\u8d4b\u503c\n                exit; //\u9000\u51fa\n        end;\n\n        mid:=(l+r) div 2;\n        if (po<=mid) then //po\u5c31\u662fkey\u4f4d\u7f6e,\u6211\u73b0\u5728\u5728\u6700\u540e(\u4e00\u4e2a\u6808)\u63d2\u5165\u4e00\u4e2a\u6570,po\u5c31\u662f\u6700\u540e\u7684\u4f4d\u7f6e\n        begin\n                rson[rt]:=rson[fa]; //\u5783\u573e\u56de\u6536\n                build(lson[rt],lson[fa],l,mid,po); //\u5de6\u8d70\n        end;\n        if (po>=mid+1) then //\u540c\u4e0a\n        begin\n                lson[rt]:=lson[fa];\n                build(rson[rt],rson[fa],mid+1,r,po);\n        end;\nend;\n\nfunction Query(rt,l,r,po:longint):char; //\u67e5\u8be2\nvar\n        mid:longint;\nbegin\n        if l=r then //\u5230\u4e86\u6307\u5b9a\u4f4d\u7f6e(\u4e0d\u4e00\u5b9a\u662fpo)\n                exit(value[rt]);\n        mid:=(l+r) div 2; // \u7ebf\u6bb5\u6811\u5e38\u8bc6\n        if (po<=mid) then\n                exit(Query(lson[rt],l,mid,po));\n        if (po>=mid+1) then\n                exit(Query(rson[rt],mid+1,r,po));\nend;\n\nbegin\n        readln(n);\n        while n>0 do\n        begin\n                readln(s);\n                if s[1]='T' then\n                begin\n                        HuHa:=s[3]; //\u76f4\u63a5\u622a\u53d6\n                        inc(cnt);\n                        len[cnt]:=len[cnt-1]+1; //\u65b0\u7684\u4f4d\u7f6e \n                        Build(root[cnt],root[cnt-1],1,100007,len[cnt]); //\u63d2\u5165\n                end;\n\n                if s[1]='U' then\n                begin\n                        delete(s,1,2);\n                        val(s,hao);\n                        inc(cnt);\n                        len[cnt]:=len[cnt-hao-1]; //\u4f4d\u7f6e\u5f80\u524d\u63a8\n                        root[cnt]:=root[cnt-hao-1]; //Root\u5f80\u524d\u63a8(\u6ca1\u4e00\u4e2a\u6570\u90fd\u6709\u4e00\u4e2alog\u94fe,\u5f53\u7136\u6709\u4e00\u4e2a\u6839)\n                end;\n\n                if s[1]='Q' then\n                begin\n                        delete(s,1,2);\n                        val(s,hao);\n                        writeln(Query(root[cnt],1,100007,hao)); // \u67e5\u8be2,\u6211\u4eec\u4e0d\u77e5\u9053\u6700\u957f\u7684\u957f\u5ea6\u662f\u591a\u5c11,\u6240\u4ee5\u5c31100007\u5c31\u53ef\u4ee5\u4e86,log\u4e0d\u4f1a\u8d85\u8fc720\n                end;\n                dec(n);\n        end;\nend.\n```",
        "postTime": 1532768240,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1383 \u3010\u9ad8\u7ea7\u6253\u5b57\u673a\u3011"
    }
]