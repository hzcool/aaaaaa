[
    {
        "content": "\u6807\u7b7e: \u6784\u9020\n\n#### Part 1\n\n\u8bbe `E` \u7684\u4e00\u6b21\u64cd\u4f5c\u4e3a $E$ , `A` \u7684\u4e00\u6b21\u64cd\u4f5c\u4e3a $A$ , \u90a3\u4e48\u6700\u7ec8\u7684\u64cd\u4f5c\u5e8f\u5217\u5e94\u8be5\u4e3a $E_1A_1E_2A_2E_3A_3E_4A_4\\cdots$ .\n\n\u53d1\u73b0\u4e00\u7ec4 $AE$ \u64cd\u4f5c\u5fc5\u5b9a\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u7ec4 $EA'$ , \u610f\u601d\u662f\u5b58\u5728\u4e00\u4e2a `E` \u5148\u64cd\u4f5c\u4e00\u6b65, `A` \u518d\u64cd\u4f5c\u4e00\u6b65**\u7684\u6548\u679c**\u4e0e `A` \u5148\u64cd\u4f5c\u4e00\u6b65, `E` \u518d\u64cd\u4f5c\u4e00\u6b65**\u7684\u6548\u679c**\u76f8\u540c, \u5e76\u4e14\u5bf9\u4e8e\u786e\u5b9a\u7684 $E$ , $A$ \u548c $A'$ \u662f\u4e00\u4e00\u5bf9\u5e94\u7684.\n\n\u4e8e\u662f\u6211\u4eec\u4e0d\u59a8\u628a\u6240\u6709 $A$ \u79fb\u52a8\u5230 $E$ \u7684\u540e\u9762, \u6784\u9020\u4e00\u4e2a\u8fd9\u6837\u7684\u64cd\u4f5c\u5e8f\u5217 $E_1E_2E_3E_4\\cdots A'_1A'_2A'_3A'_4\\cdots$ , \u5e76\u901a\u8fc7\u8fd9\u4e2a\u5e8f\u5217\u8fd8\u539f\u51fa\u539f\u5e8f\u5217.\n\n#### Part 2\n\n$E_1E_2E_3E_4\\cdots A'_1A'_2A'_3A'_4\\cdots$ \u5f88\u5bb9\u6613\u6784\u9020, \u6211\u4eec\u53ea\u9700\u8981\u4e8c\u5206\u7b54\u6848, \u7136\u540e\u8ba9 `E` \u5148\u628a\u64cd\u4f5c\u8d70\u5b8c, \u6c42\u4e00\u4e0b\u6b64\u65f6\u4f7f\u6392\u5217\u6709\u5e8f\u7684\u64cd\u4f5c\u6b21\u6570( $n-\\text{\u7f6e\u6362\u73af\u4e2a\u6570}$ ) \u5e76\u968f\u4fbf\u6784\u9020\u4e00\u4e0b $A'$ \u5e8f\u5217\u5373\u53ef.\n\n\u8003\u8651\u4ece $A'$ \u5982\u4f55\u8fd8\u539f\u4e3a $A$ , \u5bf9\u4e8e\u5df2\u77e5\u7684 $A, E,$ \u8003\u8651\u4f7f $AE=EA'$ \u7684 $A'$ , \u6709\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5:\n\n- $A=(a,b),E=(c,d)$ , \u5219 $A'=(a,b)$ .\n- $A=(a,b),E=(a,c)$ , \u5219 $A'=(b,c)$ .\n- $A=(a,b),E=(a,b)$ , \u5219 $A'=(a,b)$ .\n\n\u4e0d\u96be\u53d1\u73b0: $A'$ \u8fd8\u539f\u5230 $A$ , \u5982\u679c $A'$ \u4e0e $E$ \u4e2d\u6709\u76f8\u540c\u7684\u4f4d\u7f6e, \u90a3\u4e48\u5c31\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u53d8\u6210 $E$ \u4e2d\u7684\u53e6\u4e00\u4e2a\u4f4d\u7f6e. \n\n#### Part 3\n\n\u66b4\u529b\u8fd8\u539f\u539f\u64cd\u4f5c\u5e8f\u5217\u662f $\\mathcal O(n^2)$ \u7684(\u4e00\u4e2a $A'$ \u9700\u8981\u4e0e $\\mathcal O(n)$ \u4e2a $E$ \u4ea4\u6362), \u4e0d\u80fd\u627f\u53d7, \u8003\u8651\u4f18\u5316. \n\n\u53d1\u73b0 $A'$ \u4e0e $E=(a,b)$ \u4ea4\u6362\u7b49\u4ef7\u4e8e\u628a $a$ \u6620\u5c04\u5230 $b$ , $b$ \u6620\u5c04\u5230 $a$ , \u5e76\u4e14\u8fd9\u4e2a\u6620\u5c04\u662f\u53ef\u4ee5\u5408\u5e76\u7684. \u4e8e\u662f\u7684\u5230\u8fd9\u6837\u4e00\u4e2a\u7b97\u6cd5: \u4ece\u540e\u5411\u524d\u626b $E$ \u5e8f\u5217, \u8fb9\u7ef4\u62a4\u5f53\u524d $E$ \u540e\u7f00\u5bf9\u5e94\u7684\u6620\u5c04, \u8fb9\u8ba1\u7b97\u51fa\u63d2\u5728\u5f53\u524d $E$ \u524d\u9762\u7684 $A$ (\u8be6\u89c1\u4ee3\u7801). \u8fd9\u4e2a\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662f $\\mathcal O(n)$ . \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$ .\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint read();\n\nint n, flg, a[200005];\nint m, x[200005], y[200005];\n\nint b[200005];\nbool vis[200005];\nvoid get(int t) {\n    for (int i = 0; i < n; ++i) b[i] = a[i];\n    for (int i = 1; i <= t; ++i) swap(b[x[i]], b[y[i]]);\n}\nbool check(int x) {\n    get(x), memset(vis, 0, n);\n    int res = n;\n    for (int i = 0; i < n; ++i) {\n        if (!vis[i]) {\n            --res;\n            for (int j = i; !vis[j]; j = b[j]) vis[j] = 1;\n        }\n    }\n    return res <= x;\n}\n\nvector<int> res;\nvoid solve(int x) {\n    get(x), memset(vis, 0, n);\n    for (int i = 0; i < n; ++i)\n        if (!vis[i] && b[i] != i)\n            for (int j = i; !vis[b[j]]; j = b[j]) vis[j] = 1, res.push_back(j);\n\n    while (res.size() < x) res.push_back(n);\n}\nint p[200005], fp[200005], rx[200005], ry[200005];\nint main() {\n    n = read();\n    for (int i = 0; i < n; ++i)\n        a[i] = read(), flg |= (a[i] != (p[i] = fp[i] = i));\n    if (!flg) return puts(\"0\"), 0;\n    m = min(read(), n - 1);\n    for (int i = 1; i <= m; ++i)\n        x[i] = read(), y[i] = read(), x[i] > y[i] ? swap(x[i], y[i]) : void();\n    int l = 1, r = m - 1, rs = r + 1, mid;\n    while (l <= r) check(mid = l + r >> 1) ? r = (rs = mid) - 1 : l = mid + 1;\n    printf(\"%d\\n\", rs), solve(rs);\n    for (int i = 0; i < rs; ++i) {\n        res[i] < n ? rx[i] = p[res[i]], ry[i] = p[b[res[i]]] : 0;\n        swap(p[fp[x[rs - i]]], p[fp[y[rs - i]]]);\n        swap(fp[x[rs - i]], fp[y[rs - i]]);\n    }\n    for (int i = 1; i <= rs; ++i) printf(\"%d %d\\n\", rx[rs - i], ry[rs - i]);\n    return 0;\n}\n\nint read() {\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n```\n\n",
        "postTime": 1589267175,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5862 \u3010[IOI2015]sorting \u6392\u5e8f\u3011"
    }
]