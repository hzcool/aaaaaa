[
    {
        "content": "\u4ece\u9898\u76ee\u4e0d\u96be\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u7684\u88f8\u9898\uff0c\u7136\u540e\u518d\u770b\u6570\u636e\u8303\u56f4:\n\n$n <= 2300 $      \n      $m <= 400000$\n\n\u9996\u5148\u60f3\u5230Kruskal\u6216\u8005Prim\u90fd\u53ef\u4ee5\u6ee1\u8db3\u9700\u8981\uff0c\u4f46\u8003\u8651\u5230\u8fd9\u4e24\u79cd\u7b97\u6cd5\u4e2dKruskal\u5e94\u7528\u66f4\u5e7f\uff0c\u6240\u4ee5\u4eca\u5929\u6211\u4eec\u91cd\u70b9\u8bb2\u4e00\u4e0b**Kruskal\u7b97\u6cd5**\u3002\n\n\u9996\u5148\u56de\u5f52\u6700\u5c0f\u751f\u6210\u6811\u7684\u5b9a\u4e49\uff1a\u7ed9\u5b9a\u4e00\u5f20\u8fb9\u5e26\u6743\u7684\u65e0\u5411\u56fe$G = (V, E)$,$n=|V|$,\u7531$V$\u4e2d$n$\u4e2a\u8282\u70b9\u548c$E$\u4e2d$n-1$\u6761\u8fb9\u6784\u6210\u7684\u65e0\u5411\u8fde\u901a\u56fe\u79f0\u4e3a$G$\u7684\u4e00\u68f5\u751f\u6210\u6811\u3002\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\u88ab\u79f0\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u8fdb\u5165\u4eca\u5929\u7684\u6b63\u9898:**Kruskal\u7b97\u6cd5**\n\nKruskal\u7b97\u6cd5\u662f\u57fa\u4e8e\u4e00\u79cd\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u4ed6\u603b\u662f\u7ef4\u62a4\u65e0\u5411\u56fe\u7684\u6700\u5c0f\u751f\u6210\u68ee\u6797\u3002\u6700\u521d\uff0c\u751f\u6210\u68ee\u6797\u662f\u7531\u96f6\u6761\u8fb9\u6784\u6210\uff0c\u6bcf\u4e2a\u8282\u70b9\u6784\u6210\u4e00\u68f5\u4ec5\u5305\u542b\u4e00\u4e2a\u8282\u70b9\u7684\u6811\u3002\n\nKruskal\u7b97\u6cd5\u7684\u4e3b\u4f53\u6b65\u9aa4\uff0c\u5c31\u662f\u4e0d\u65ad\u4ece\u5269\u4f59\u7684\u8fb9\u4e2d\u9009\u51fa\u4e00\u6761\u6743\u503c\u6700\u5c0f\uff0c\u4e14\u4ed6\u7684\u4e24\u4e2a\u7aef\u70b9\u5728\u751f\u6210\u68ee\u6797\u4e2d\u5206\u5c5e\u4e8e\u4e24\u68f5\u4e0d\u540c\u7684\u6811\uff0c\u5c06\u8fd9\u6761\u8fb9\u52a0\u5165\u751f\u6210\u68ee\u6797\u4e2d\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u81ea\u7136\u5c31\u4f1a\u60f3\u5230\u56fe\u7684\u8fde\u901a\u6027\u5e94\u8be5\u5982\u4f55\u7ef4\u62a4\u5462\uff1f \u4e3a\u4e86\u4ee3\u7801\u6548\u7387\u548c\u7b80\u4fbf\uff0c\u6211\u4eec\u4e00\u822c\u90fd\u91c7\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u3002\uff08\u4e8b\u5b9e\u4e0a\uff0cKruskal\u7b97\u6cd5\u7684\u5de8\u5927\u4f18\u8d8a\u6027\u4e5f\u662f\u5728\u52a0\u5165\u5e76\u67e5\u96c6\u4f18\u5316\u540e\u624d\u5f97\u4ee5\u4f53\u73b0\u7684\uff0c\u800c\u6211\u4eec\u5e73\u65f6\u6240\u8bf4\u7684Kruskal\u4e00\u822c\u90fd\u662f\u5e26\u5e76\u67e5\u96c6\u4f18\u5316\u7684\u3002\uff09\n\n\u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n1.\u5efa\u7acb\u5e76\u67e5\u96c6\uff0c\u6bcf\u4e2a\u70b9\u6784\u6210\u4e00\u4e2a\u96c6\u5408\u3002\n\n2.\u5c06\u5404\u8fb9\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u626b\u63cf\u6bcf\u6761\u8fb9\u3002\n\n3.\u82e5\u4e00\u6761\u8fb9\u4e24\u7aef\u70b9\u5728\u540c\u4e00\u96c6\u5408\u4e2d\uff0c\u5219\u5ffd\u7565\u8fd9\u6761\u8fb9\u76f4\u63a5\u8df3\u8fc7\u3002\n\n4.\u5426\u5219\uff0c\u5408\u5e76\u4ed6\u4eec\u6240\u5728\u7684\u96c6\u5408\uff0c\u5c06\u6743\u503c\u4e4b\u548c\u7d2f\u52a0\u5230\u7b54\u6848\u4e2d\u3002\n\n5.\u7b2c\u56db\u6b65\u4e2d\u9009\u4e2d\u7684\u8fb9\u5c31\u6784\u6210\u4e86\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u4e00\u56fe\u80dc\u5343\u8a00\uff1a\n\n\u8fd9\u662f\u4e00\u5e45\u65e0\u5411\u56fe\uff1a![](https://cdn.luogu.com.cn/upload/pic/62024.png)\n\n\u5c06\u5404\u8fb9\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5b8c\u5e8f\u540e\u5e94\u4e3a\uff1a\n\n\tx      y       val\n    1      2        2\n    1      3        2\n    1      4        3\n    3      4        3\n    2      3        4\n\u7136\u540e\u6211\u4eec\u5f00\u59cb\u6267\u884cKruskal\u7684\u4e3b\u4f53\u6d41\u7a0b\uff1a\n\n\u679a\u4e3e\u7b2c\u4e00\u6761\u8fb9\uff081, 2, 2\uff09\uff0c\u5c06\u5176\u52a0\u5165\u751f\u6210\u68ee\u6797\u4e2d\uff0c\u751f\u6210\u68ee\u6797\u53d8\u4e3a\uff1a![](https://cdn.luogu.com.cn/upload/pic/62028.png)\n\n\u679a\u4e3e\u7b2c\u4e8c\u6761\u8fb9\uff081, 3, 2\uff09\uff0c\u5c06\u5176\u52a0\u5165\u751f\u6210\u68ee\u6797\u4e2d\uff0c\u751f\u6210\u68ee\u6797\u53d8\u4e3a\uff1a![](https://cdn.luogu.com.cn/upload/pic/62029.png)\n\n\u679a\u4e3e\u7b2c\u4e09\u6761\u8fb9\uff083\uff0c4\uff0c3\uff09\uff0c\u5c06\u5176\u52a0\u5165\u751f\u6210\u68ee\u6797\u4e2d\uff0c\u751f\u6210\u68ee\u6797\u53d8\u4e3a\uff1a![](https://cdn.luogu.com.cn/upload/pic/62030.png)\n\n\u4f60\u4f1a\u53d1\u73b0\uff0c\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u9009\u51fa$n - 1$\u6761\u8fb9\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5c06\u6743\u503c\u7d2f\u52a0\u8d77\u6765\u5373\u4e3a\u7b54\u6848\uff0cKruskal\u7b97\u6cd5\u7ed3\u675f\u3002\n\nPs\uff1a\u8fd9\u5e45\u56fe\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u662f\u91cd\u5728\u7406\u89e3Kruskal\u7684\u6d41\u7a0b\u3002\n\n\u539f\u7406\u7406\u89e3\u4e4b\u540e\uff0c\u4ee3\u7801\u5c31\u4f1a\u53d8\u5f97\u5f02\u5e38\u7b80\u5355\u4e86\uff0c\u6ce8\u610f\uff0c\u91cd\u70b9\u5728\u4e8e**\u4e00\u5b9a\u8981\u7406\u89e3**\uff0c\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define maxn 400005\n\nusing namespace std;\n\nint n, m, fa[maxn], tot, head[maxn], sum;\n\nstruct Edge{\n\tint x, y, w;\n}edge[maxn];\n\nbool cmp(Edge x,Edge y){return x.w < y.w;} //\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\n\nint find(int x){reutnr x == fa[x] ? x : fa[x] = find(fa[x]);}\n\nbool judge(int x,int y){return find(x) == find(y);}\n\nvoid merge(int x,int y){fa[find(x)]=find(y);}\n//\u4f18\u96c5\u7684\u4e09\u884c\u5e76\u67e5\u96c6\nint main()\n{\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++){\n\t\tcin >> edge[i].x >> edge[i].y >> edge[i].w;\n\t\tedge[i].x++, edge[i].y++;\n\t}\n\tsort(edge+1, edge+m+1, cmp); //\u6743\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\tfor(int i = 1; i <= n; i++) fa[i] = i;\n\tfor(int i = 1; i <= m; i++){\n\t\tint x = edge[i].x, y = edge[i].y;\n\t\tif (!judge(x,y)){\n            sum += edge[i].w;\n\t\t\tmerge(x,y);\n\t\t}\n\t}                           //\u5f53\u7136\uff0c\u8fd9\u90e8\u5206\u4e5f\u53ef\u4ee5\u5c01\u88c5\u5230\u51fd\u6570\u4e2d\uff0c\u770b\u4e2a\u4eba\u559c\u597d\n\tcout << sum << '\\n';\n\treturn 0;\n}\n```\n\n\n\u6700\u540e\uff0c\u672c\u7bc7\u9898\u89e3\u65e8\u5728\u5e2e\u52a9\u90a3\u4e9b\u521a\u521a\u63a5\u89e6\u5230\u6700\u5c0f\u751f\u6210\u6811\u7684OIer\u4eec\u66f4\u597d\u7684\u7406\u89e3\uff0c\u82e5\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u79c1\u4fe1\u672c\u4eba\u3002",
        "postTime": 1562137079,
        "uid": 168322,
        "name": "Hydrogen_Helium",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2126 \u3010Mzc\u5bb6\u4e2d\u7684\u7537\u5bb6\u4e01\u3011"
    },
    {
        "content": "\u6570\u636e\u8303\u56f4\u5e76\u4e0d\u662f\u5f88\u5927 \u8003\u8651\u514b\u9c81\u65af\u5361\u5c14\u4e0d\u7528prim\u5806\u4f18\u5316\n\u6ce8\u610f\u4e0b\u6807\u4ece0\u5f00\u59cb\u3002\n```\n#include<iostream>\n#include<cmath>\n#include<ctime>\n#include<algorithm>\n#include<cstdio>\n#include<iomanip>\n#include<map>\n#include<queue>\n#include<stack>\n#include<cstring>\n#include<string>\n#include<vector>\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n,m;\nstruct bwy\n{\n\tint next;\n\tint prev;\n\tint v;\n}s[400007];\nint f[2309];\nint getfather(int x)\n{\n\tif(f[x]==x)\n\t\treturn f[x];\n\treturn f[x]=getfather(f[x]);\n}\nint my(bwy x,bwy y)//\u5f53\u7136\u4e5f\u662f\u53ef\u4ee5\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\n{\n\treturn x.v<y.v;\n}\nvoid merge(int x,int y)\n{\n\tx=getfather(x);\n\ty=getfather(y);\n\tf[x]=y;\n}\nint num=0;\nint ans=0;\nint main()\n{\n\t//freopen(\"1.in\",\"r\",stdin);\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tx=read();y=read();z=read();\n\t\ts[i].next=x;\n\t\ts[i].prev=y;\n\t\ts[i].v=z;\n\t}\n\tsort(s+1,s+1+m,my);\n\tfor(int i=0;i<=n;i++)f[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=getfather(s[i].next);\n\t\tint p=getfather(s[i].prev);\n\t\tif(u!=p)\n\t\t{\n\t\t\tmerge(u,p);\n\t\t\tans+=s[i].v;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u8003\u5230\u7684\u5176\u5b9e\u5c31\u662f\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e86",
        "postTime": 1555163305,
        "uid": 59688,
        "name": "chdy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2126 \u3010Mzc\u5bb6\u4e2d\u7684\u7537\u5bb6\u4e01\u3011"
    },
    {
        "content": "## \u6b64\u9898\u4e00\u773c\u6700\u5c0f\u751f\u6210\u6811\u88f8\u9898\uff0c\u8ddfP2121\uff0cP1547\uff0cP2820\u6781\u5176\u76f8\u4f3c~~\u4e00\u6a21\u4e00\u6837~~\n\u6240\u4ee5\u4e0d\u77e5\u9053\u6700\u5c0f\u751f\u6210\u6811\u7684\u5de8\u4f6c\u4eec\u8bf7\u8fdb\uff1a\n[\u4f20\u9001\u95e8](https://www.luogu.org/blog/YangZiWen/xue-xi-bi-ji-1-post)\n\n$code:$\n```\n#include<bits/stdc++.h>\u88f8\u7684\u677f\u5b50\uff0c\u953b\u70bc\u80cc\u4ee3\u7801\u80fd\u529b\u3002\u3002\u3002\u3002\nusing namespace std;\nconst int N=2305;\nconst int H=400005;\nstruct node{\n\tint x,y,len;\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u76f8\u5f53\u4e8ebool cmp(node a,node b){return a.len<b.len;}\n\tbool operator < (const node &a) const {\n\t\treturn len<a.len;\n\t}\n}a[H];\nint n,m,fa[N];\n\u5e76\u67e5\u96c6\u7684getfather\nint _find(int x){\n\tif(x!=fa[x])\n\t\tfa[x]=_find(fa[x]);\n\treturn fa[x];\n}\nkruskal\uff1a\u8d2a\u5fc3+\u5e76\u67e5\u96c6\nvoid kruskal(){\n\tint cnt=0,tot=0,i=0;\n\twhile(i<=m && cnt<n){\n\t\ti++;\n\t\tint x=_find(a[i].x);\n\t\tint y=_find(a[i].y);\n\t\tif(x!=y){\n\t\t\tfa[x]=y;\n\t\t\tcnt++;\n\t\t\ttot+=a[i].len;\n\t\t}\n\t}\n\tprintf(\"%d\",tot);\n}\nint main(){\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d %d %d\",&a[i].x,&a[i].y,&a[i].len);\n\tfor(int i=1;i<=n;i++)\u521d\u59cb\u5316\n\t\tfa[i]=i;\n\tsort(a+1,a+1+m);\n\tkruskal();\n\treturn 0;\n}\n```",
        "postTime": 1569944617,
        "uid": 156001,
        "name": "TheAutumnGlory",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2126 \u3010Mzc\u5bb6\u4e2d\u7684\u7537\u5bb6\u4e01\u3011"
    },
    {
        "content": "**2020\u5e742\u670816\u65e5\u66f4\u65b0\uff1a\u4fee\u6b63\u9898\u89e3\u6392\u7248\u95ee\u9898**\n\n----------\n\n\u4e0d\u96be\u770b\u51fa\uff0c\u7537\u5bb6\u4e01\u4e0e mzc \u7684\u901a\u8baf\u7f51\u7edc\u662f\u4e00\u4e2a\u56fe\u7684\u7ed3\u6784\u3002\u518d\u6839\u636e\u901a\u8baf\u8def\u7ebf\u662f\u53cc\u5411\u7684\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u7b2c\u4e00\u4e2a\u91cd\u8981\u4fe1\u606f\uff1a**\u9898\u76ee\u7ed9\u51fa\u4e86\u4e00\u4e2a\u65e0\u5411\u56fe**\u3002\n\n\u63a5\u7740\uff0c\u6839\u636e\u9898\u76ee\u4e2d\u8981\u6c42\u628a\u6240\u6709\u7537\u5bb6\u4e01\u90fd\u53eb\u5230\u7684\u6700\u5c0f\u603b\u65f6\u95f4\uff0c\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e8c\u4e2a\u91cd\u8981\u4fe1\u606f\uff1a**\u9898\u76ee\u8981\u6c42\u4e00\u4e2a\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811**\u3002\n\n\u8981\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f\u56fe\u4e00\u5b9a\u8981\u8fde\u901a\u3002\u5bf9\u4e8e\u56fe\u7684\u8fde\u901a\u6027\uff0c\u9898\u76ee\u4e2d\u4e5f\u7ed9\u51fa\u4e86\u89e3\u91ca\u3002**\u9898\u76ee\u4fdd\u8bc1\u80fd\u628a\u6bcf\u4e2a\u4eba\u90fd\u53eb\u5230\uff0c\u5c31\u4fdd\u8bc1\u4e86\u56fe\u7684\u8fde\u901a\u6027\u3002**\n\n\u603b\u7ed3\u4e00\u4e0b\u9898\u610f\uff1a\n\n**\u7ed9\u51fa\u4e00\u5f20\u8fde\u901a\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u51fa\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002**\n\n\u4e0b\u9762\u5f00\u59cb\u6c42\u89e3\uff1a\n\n------------\n\n\u6c42\u89e3\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6709\u4e24\u79cd\u529e\u6cd5(\u4ee5\u4e0b\u7528 $n$ \u8868\u793a\u70b9\u6570\uff0c\u7528 $m$ \u8868\u793a\u8fb9\u6570)\uff1a\n\n| \u65b9\u6cd5\u540d\u79f0 |  \u65f6\u95f4\u590d\u6742\u5ea6 | \n| :----------: | :----------: |\n| Kruskal | $O(m \\log(m))$ |\n| Prim | $O(n^2)$ |\n\n\u5176\u4e2d\uff0cPrim \u8fd8\u53ef\u4ee5\u901a\u8fc7\u5806\u4f18\u5316\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230$O(m \\log(n))$\n\n\u5206\u6790\u6b64\u9898\u7684\u6570\u636e\u8303\u56f4\uff1a$n \\le 2300,m \\le 400000$\n\n\u663e\u7136\uff0c\u7528\u65e0\u5806\u4f18\u5316\u7684 Prim \u7b97\u6cd5\u53ef\u4ee5\u7a33\u8fc7\u3002\n\nPrim \u7684\u5b9e\u73b0\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n1. \u521d\u59cb\u5316 $dis$ \u6570\u7ec4\uff0c\u5c06\u5168\u90e8\u70b9\u8d4b\u503c\u4e3a\u65e0\u7a77\u5927\uff0c\u7136\u540e\u9009\u62e9\u4e00\u4e2a\u70b9\u628a\u5176 $dis$ \u503c\u8d4b\u503c\u4e3a $0$\uff1b\n2. \u9009\u62e9\u4e00\u4e2a\u6ca1\u6709\u5904\u7406\u8fc7\u7684\uff0c$dis$ \u503c\u6700\u5c0f\u7684\u70b9\uff1b\n3. \u628a\u8fd9\u4e2a\u70b9\u6807\u8bb0\u4e3a\u5904\u7406\u8fc7\uff0c\u5e76\u7528\u8fd9\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u8fb9\u66f4\u65b0\u5176\u5b83\u672a\u5904\u7406\u7684\u70b9\u7684 $dis$ \u503c\uff1b\n4. \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b $n$ \u6b21\u540e\uff0c\u6bcf\u4e2a\u70b9\u90fd\u88ab\u5904\u7406\u8fc7\u3002\u8fd9\u65f6\u628a $dis$ \u4e2d\u7684\u6bcf\u4e2a\u503c\u52a0\u8d77\u6765\uff0c\u5c31\u80fd\u5f97\u5230\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6743\u548c\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<vector>\n#define INF 2147000000   //\u65e0\u7a77\u5927\nusing namespace std;\nint main(){\n    int n,m,ans=0;\n    cin>>n>>m;\n    vector < pair<int,int> > vb[n+1];   //\u8fb9\u94fe\u8868\u5b58\u8fb9\n    for(int a,b,w,i=1;i<=m;i++){\n        cin>>a>>b>>w;\n        vb[a].push_back(make_pair(b,w));\n        vb[b].push_back(make_pair(a,w));\n  \t\t//\u65e0\u5411\u8fb9\u5b58\u4e24\u6b21\n    }\n  //\u6570\u636e\u8bfb\u5165\u4e0e\u5b58\u50a8\n  \n    int dis[n+1];\n    bool fw[n+1];   //\u6807\u8bb0\u6bcf\u4e2a\u70b9\u662f\u5426\u6709\u88ab\u8bbf\u95ee\u8fc7\n    for(int i=0;i<=n;i++)\n    \tdis[i]=INF; \n    dis[0]=0;   //dis\u6570\u7ec4\u521d\u59cb\u5316\u8d4b\u503c\n    memset(fw,0,sizeof(fw));    //\u91cd\u7f6e\u6807\u8bb0\n    for(int mn=INF,u,tg=0;tg<n;tg++,mn=INF){\n        for(int j=0;j<=n;j++){\n        \tif(!fw[j]){\n               \tif(mn>dis[j]){\n               \t\tmn=dis[j];\n\t\t\t\t\tu=j;\t \n\t\t\t\t} \n            }\n\t\t}\n  \t\t//\u4e00\u4e2a\u5faa\u73af\u627e\u5230dis\u6700\u5c0f\u7684\u672a\u5904\u7406\u7684\u70b9\n  \n        fw[u]=true;  //\u6807\u8bb0\n        for(int lb=vb[u].size(),i=0;i<lb;i++)\n            if(!fw[vb[u][i].first])    //\u66f4\u65b0\u672a\u5904\u7406\u7684\u70b9\u7684dis\u503c\n                if(vb[u][i].second<dis[vb[u][i].first])\n                    dis[vb[u][i].first]=vb[u][i].second;\n    }\n  //Prim\u8fd0\u884c\u8fc7\u7a0b\n  \n    for(int i=0;i<=n;i++)\n    \tans+=dis[i];    //\u7d2f\u52a0\u6c42\u548c\u5e76\u8f93\u51fa\n    cout<<ans; \n    return 0;\n}\n```\n",
        "postTime": 1566064553,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2126 \u3010Mzc\u5bb6\u4e2d\u7684\u7537\u5bb6\u4e01\u3011"
    },
    {
        "content": "\u88f8\u7684\u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u677f\u5b50\u9898\uff0c\u9002\u5408\u521d\u5b66\u8005\u7ec3\u4e60\u7528\uff0c\u56e0\u4e3a\u8981\u6c42\u91cd\u590d\uff0c\u53ea\u9700\u5c06\n\u677f\u5b50\u4e2d\u7684if(cnt==n-1) break; \u53bb\u6389\u5c31\u884c\uff0c\u4e0b\u9762\u662f\u514b\u9c81\u65af\u5361\u5c14\u52a0\u5e76\u67e5\u96c6\u4f18\u5316\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nchar a[2010][2010];\nint n,m,ans;\nbool b[2010][2010];\nint dir[][2]= {{1,0},{0,1},{-1,0},{0,-1}};\nint f[400010];\nint find(int x) {\n\treturn f[x]==x?x:f[x]=find(f[x]);//\u5e76\u67e5\u96c6\u67e5\u8be2\n}\nstruct node {\n\tint l,r,v;//\u5b58\u8fb9\n} bian[400010];\nbool cmp(const node x,const node y) {\n\treturn x.v<y.v;//\u91cd\u8f7d\u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\u6392\uff0c\u6709\u4e9b\u8d2a\u5fc3\u601d\u60f3\uff0c\u6bcf\u6b21\u9009\u4ee3\u4ef7\u6700\u5c0f\u7684\u8fb9\u52a0\n}\nint main() {\n\tcin>>n>>m;\n\tfor(int i=1; i<=m; i++)\n\t\tcin>>bian[i].l>>bian[i].r>>bian[i].v;\n\tfor(int i=1; i<=n; i++) f[i]=i;\n\tsort(bian+1,bian+m+1,cmp);\n\tfor(int i=1; i<=m; i++) {\n\t\tif(find(bian[i].l)!=find(bian[i].r))\n\t\t\tf[find(bian[i].l)]=find(bian[i].r),//\u5408\u5e76\u52a0\u8fb9\n\t\t\t                   ans+=bian[i].v;\n\t}\n\tcout<<ans;\n}\n```",
        "postTime": 1545913800,
        "uid": 115122,
        "name": "\u79bb\u4eba\u600e\u633d",
        "ccfLevel": 0,
        "title": "Mzc\u5bb6\u4e2d\u7684\u7537\u5bb6\u4e01"
    },
    {
        "content": "\u6b64\u9898\u4e3a\u975e\u5e38\u7b80\u5355\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u9644\u4e0aprim\u6807\u7a0b\uff1a\n\n```cpp\nvar\n  n,m,i,j,k,c,d,e:longint;\n  a,b:array [0..10000] of longint;\n  f:array [0..2300,0..2300] of longint;\n  dis:array [0..10000] of longint;\n  min,sum:longint;\n  used:array [0..10000] of boolean;\nbegin\n  assign(input,'mzcanddjn.in');\n  reset(input);\n  assign(output,'mzcanddjn.out');\n  rewrite(output);\n  readln(n);\n  readln(m);\n  fillchar(f,sizeof(f),$7f);\n  for i:=1 to m do\n    begin\n      readln(c,d,e);\n      f[c,d]:=e;\n      f[d,c]:=e;\n    end;\n  fillchar(dis,sizeof(dis),$7f);\n  dis[0]:=0;\n  sum:=0;\n  for i:=0 to n do\n    begin\n      min:=maxlongint;\n      for j:=0 to n do\n        if not used[j] and (dis[j]<min) then\n          begin\n            k:=j;\n            min:=dis[j];\n          end;\n      used[k]:=true;\n      sum:=sum+dis[k];\n      for j:=1 to n do\n        if not used[j] and (f[k,j]<dis[j]) then\n          dis[j]:=f[k,j];\n    end;\n  writeln(sum);\n  close(input);\n  close(output);\nend.\n\n```",
        "postTime": 1410688118,
        "uid": 1417,
        "name": "wzf2000",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2126 \u3010Mzc\u5bb6\u4e2d\u7684\u7537\u5bb6\u4e01\u3011"
    }
]