[
    {
        "content": "## [DMOI] \u5b98\u65b9\u9898\u89e3\n\n### $20pts$\n\n\u9996\u5148\u80fd\u591f\u53d1\u73b0\u6027\u8d28\uff0c\u7531\u4e8e $A\uff0cB\uff0cC\uff0cD$ \u5747\u4e3a\u6b63\u6570\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u53ef\u80fd\u51fa\u73b0\u67d0\u4e00\u4e2a\u65f6\u523b\u4e24\u4e2a\u4eba\u90fd\u6ca1\u6709\u4f7f\u7528\u6b66\u5668\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u5f00\u59cb\u6253\u7206\u641c\uff0c\u6bcf\u4e2a\u65f6\u523b\u6709\u4e09\u79cd\u60c5\u51b5\uff0c\u540c\u65f6\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u4eba\u8ddd\u79bb\u4e0a\u6b21\u4f7f\u7528\u6b66\u5668\u7684\u65f6\u95f4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(3^{n + m})$ \uff0c\u671f\u671b\u5f97\u5206 $20pts$\u3002\n\n### $50pts$\n\n\u6839\u636e\u4e0a\u9762\u8bf4\u7684\u6027\u8d28\u6211\u4eec\u80fd\u591f\u53d1\u73b0\uff0c\u603b\u65f6\u95f4\u4e0d\u4f1a\u8d85\u8fc7 $n + m$\u3002\u8003\u8651\u7528\u52a8\u6001\u89c4\u5212\uff1a\n\n\u8bbe $dp_{i,j,k}$ \u8868\u793a\u5728\u65f6\u523b $i$\uff0c\u5c0f $A$ \u7528\u4e86 $j$ \u628a\u6b66\u5668\uff0c\u5c0f $B$ \u7528\u4e86 $k$ \u628a\u6b66\u5668\u6240\u91ca\u653e\u7684\u6700\u5927\u80fd\u91cf\u3002\n\n\u6839\u636e\u4e0a\u9762\u8bf4\u7684\u6027\u8d28\uff0c\u4e0a\u4e00\u79d2\u4e00\u5b9a\u6709\u81f3\u5c11\u4e00\u4e2a\u4eba\u7528\u4e86\u6b66\u5668\u3002\n\n\u4e0d\u59a8\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u4e0a\u4e00\u79d2\u4e8c\u4eba\u4e00\u8d77\u7528\n2. \u4e0a\u4e00\u79d2\u53ea\u6709\u5c0f $A$ \u7528\u6b66\u5668\n3. \u4e0a\u4e00\u79d2\u53ea\u6709\u5c0f $B$ \u7528\u6b66\u5668\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u76f4\u63a5\u8f6c\u79fb\uff0c\u540e\u4e24\u79cd\u60c5\u51b5\u679a\u4e3e\u53e6\u4e00\u4e2a\u4eba\u4e0a\u4e00\u6b21\u4f7f\u7528\u6b66\u5668\u7684\u65f6\u95f4\u8fdb\u884c\u8f6c\u79fb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^4)$\u3002\n\n\u53d1\u73b0\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u6808\u8f85\u52a9\u8f6c\u79fb\uff0c\u8f6c\u79fb\u4f18\u5316\u5230 $O(1)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230 $O(n^3)$\uff0c\u671f\u671b\u5f97\u5206 $50pts$\u3002\n\n### $100pts$\n\n\u7531\u4e8e\u5438\u6536\u7684\u80fd\u91cf\u4e0e\u4f11\u606f\u65f6\u95f4\u6210\u4e00\u6b21\u51fd\u6570\u5173\u7cfb\uff0c\u65f6\u95f4\u4e00\u7ef4\u5176\u5b9e\u53ef\u4ee5\u8585\u6389\u3002\n\n\u8bbe $dp_{i,j,0/1,0/1}$ \u8868\u793a\u5c0f $A$ \u7528\u4e86 $i$ \u628a\u6b66\u5668\uff0c\u5c0f $B$ \u7528\u4e86 $j$ \u628a\u6b66\u5668\u3002\u540e\u9762\u4e24\u7ef4\u5206\u522b\u8868\u793a\u5f53\u524d\u65f6\u523b\u5c0f $A$ \u662f $/$ \u5426\u4f7f\u7528\u4e86\u6b66\u5668\uff0c\u5f53\u524d\u65f6\u523b\u5c0f $B$ \u662f $/$ \u5426\u4f7f\u7528\u4e86\u6b66\u5668\u3002\n\n\u5176\u4ed6\u7684\u8d21\u732e\u7684\u8ba1\u7b97\u90fd\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u662f\u80fd\u91cf\u5438\u6536\u91cf\u7684\u8ba1\u7b97\u3002\u4ee5\u5c0f $A$ \u4e3a\u4f8b\u3002\n\n\u5148\u8003\u8651 $B = 0$ \u7684\u60c5\u51b5\u3002\n\n\u82e5\u5c0f $A$ \u5f53\u524d\u65f6\u523b\u6ca1\u6709\u4f7f\u7528\u6b66\u5668\u3002\u5c0f $A$ \u7684\u4f11\u606f\u65f6\u95f4\u76f8\u5f53\u4e8e\u591a\u4e86 $1$ \u4e2a\u5355\u4f4d\u65f6\u95f4\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u518d\u5438\u6536 $A$ \u7684\u80fd\u91cf\u3002\n\n\u76f4\u63a5\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u51cf\u53bb $A$ \u5c31\u597d\u3002\n\n\u4f46\u662f $B \\not= 0$ \u600e\u4e48\u529e\uff1f\n\n\u53d1\u73b0\u52a0\u5438\u6536 $B$ \u7684\u80fd\u91cf\u7684\u6b21\u6570\u4e0e\u4f11\u606f\u7684\u6b21\u6570\u662f\u4e00\u81f4\u7684\uff0c\u6211\u4eec\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u53ef\u4ee5\u94a6\u5b9a\u4e00\u4e2a\u89c4\u5219\uff1a\u5f53\u4e0a\u4e00\u65f6\u523b\u4f7f\u7528\u4e86\u6b66\u5668\uff0c\u4f46\u662f\u5f53\u524d\u65f6\u523b\u6ca1\u6709\u4f7f\u7528\u6b66\u5668\uff0c\u90a3\u4e48\u5c0f $A$ \u7684\u4f11\u606f\u6b21\u6570\u5c31\u4f1a\u52a0 $1$\uff0c\u6b64\u65f6\u5c31\u51cf\u53bb $B$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53c2\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 3010\n#define INF 0x3f3f3f3f\nusing namespace std;\nint n, m, A, B, C, D;\nint a[MAXN], b[MAXN], d[MAXN][MAXN];\nint dp[MAXN][MAXN][2][2];\ninline int read(){\n   int s = 0, w = 1;\n   char ch = getchar();\n   while(ch < '0' || ch > '9'){ if(ch == '-') w = -1; ch = getchar(); }\n   while(ch >= '0' && ch <= '9') s = s * 10 + ch - '0', ch = getchar();\n   return s * w;\n}\nint main(){\n    n = read();\n    for(int i = 1; i <= n; i++) a[i] = read();\n    for(int i = 1; i <= m; i++) b[i] = read();\n    for(int i = 1; i <= n; i++){\n        for(int j = 1; j <= m; j++){\n            d[i][j] = read();\n        }\n    }\n    scanf(\"%d%d%d%d\",&A,&B,&C,&D);\n    memset(dp, -0x3f, sizeof(dp));\n    dp[1][0][1][0] = a[1] - C - D;\n    dp[0][1][0][1] = b[1] - A - B;\n    dp[1][1][1][1] = a[1] + b[1] + d[1][1];\n    for(int i = 0; i <= n; i++){\n        for(int j = 0; j <= m; j++){\n            if(i != 0){\n                // dp[i][j][1][0];\n                dp[i + 1][j][1][0] = max(dp[i + 1][j][1][0], dp[i][j][1][0] + a[i + 1] - C);\n                dp[i][j + 1][0][1] = max(dp[i][j + 1][0][1], dp[i][j][1][0] + b[j + 1] - A - B - C);\n                dp[i + 1][j + 1][1][1] = max(dp[i + 1][j + 1][1][1], dp[i][j][1][0] + a[i + 1] + b[j + 1] + d[i + 1][j + 1] - C);\n            }\n            if(j != 0){\n                // dp[i][j][0][1];\n                dp[i + 1][j][1][0] = max(dp[i + 1][j][1][0], dp[i][j][0][1] + a[i + 1] - A - C - D);\n                dp[i][j + 1][0][1] = max(dp[i][j + 1][0][1], dp[i][j][0][1] + b[j + 1] - A);\n                dp[i + 1][j + 1][1][1] = max(dp[i + 1][j + 1][1][1], dp[i][j][0][1] + a[i + 1] + b[j + 1] + d[i + 1][j + 1] - A);\n            }\n            if(i != 0 && j != 0){\n                // dp[i][j][1][1];\n                dp[i + 1][j][1][0] = max(dp[i + 1][j][1][0], dp[i][j][1][1] + a[i + 1] - C - D);\n                dp[i][j + 1][0][1] = max(dp[i][j + 1][0][1], dp[i][j][1][1] + b[j + 1] - A - B);\n                dp[i + 1][j + 1][1][1] = max(dp[i + 1][j + 1][1][1], dp[i][j][1][1] + a[i + 1] + b[j + 1] + d[i + 1][j + 1]);\n            }\n        }\n    }\n    int ans = -INF;\n    for(int i = 0; i <= n; i++){\n        for(int j = 0; j <= m; j++){\n            // printf(\"(%d %d %d), \",dp[i][j][1][0], dp[i][j][0][1], dp[i][j][1][1]);\n            ans = max(ans, dp[i][j][1][0]);\n            ans = max(ans, dp[i][j][0][1]);\n            ans = max(ans, dp[i][j][1][1]);\n        }\n        // printf(\"\\n\");\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1669467816,
        "uid": 547908,
        "name": "Hoshino_kaede",
        "ccfLevel": 7,
        "title": "[DMOI-R1] \u5b9e\u9a8c\u57fa\u5730 \u9898\u89e3"
    }
]