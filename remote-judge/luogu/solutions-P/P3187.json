[
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4ece\u6628\u5929\u665a\u4e0a5\u70b9\u505a\u5230\u4eca\u5929\u4e0b\u53483\u70b9\u534a\u2026\u2026\u5dee\u70b9\u5c31\u75af\u4e86\u3002\n\n\u771f\u662f\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u597d\u9898\u5440\uff01\uff1f\n\n\u521a\u5f00\u59cb\u6211\u4ee5\u4e3a\u77e9\u5f62\u4e0e\u5750\u6807\u8f74\u5e73\u884c\uff0c\u611f\u89c9\u7701\u9009\u9898\u7adf\u7136\u8fd9\u4e48\u6c34\u3002\u4f46\u662f\u770b\u5b8c\u6837\u4f8b\u540e\u53d1\u73b0\u6211\u9519\u4e86\u2026\u2026\n\n\u9996\u5148\u90fd\u77e5\u9053\u8981\u6c42\u51f8\u5305\u3002\u5199\u4ee3\u7801\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u975e\u5e38\u8c28\u614e\u3002\u5bf9\u4e8e\u91cd\u5408\u6216\u5171\u7ebf\u7684\u70b9\u90fd\u8981\u4ece\u6808\u4e2d\u5f39\u53bb\uff0c\u5426\u5219\u5728\u540e\u9762\u7684\u6c42\u77e9\u5f62\u9762\u79ef\u7684\u65f6\u5019\u4f1a\u9664\u4ee5$0$\uff0c\u7136\u540e\u5c31\u4f1a\u60f3\u6211\u4e00\u6837$gg$\u4e86\u5feb$2$\u4e2a\u70b9\u3002\n\n\u7136\u540e\uff0c\u51ed\u76f4\u89c9\u80fd\u77e5\u9053\u77e9\u5f62\u7684\u4e00\u4e2a\u8fb9\u4e00\u5b9a\u548c\u51f8\u5305\u7684\u4e00\u6761\u8fb9\u5e73\u884c\u3002\u90a3\u4e48\u5c31\u80fd\u60f3\u5230\u7528\u65cb\u8f6c\u5361\u58f3\u7ef4\u62a4\u77e9\u5f62\u7684\u53e6\u5916\u4e09\u4e2a\u6700\u503c\u70b9\uff08\u4e0d\u662f\u9876\u70b9\uff09\uff0c\u5373\u77e9\u5f62\u6700\u4e0a\u70b9\uff0c\u6700\u53f3\u70b9\uff0c\u6700\u5de6\u70b9\u3002\n\n\u6c42\u6700\u4e0a\u70b9\uff0c\u548c\u65cb\u8f6c\u5361\u58f3\u677f\u5b50\u4e00\u6837\uff0c\u7528\u53c9\u79ef\u6c42\u9762\u79ef\u5c31\u884c\u4e86\u3002\n\n\u6c42\u6700\u53f3\u70b9\uff0c\u7528\u70b9\u79ef\u3002\u5bf9\u4e8e\u5f53\u524d\u76f4\u7ebf$AB$\u548c\u65cb\u8f6c\u5230\u7684\u70b9$Ci$\uff0c\u5982\u679c$\\overrightarrow{AB} * \\overrightarrow{C _ i C_{i + 1}} > 0$\uff0c\u5c31\u63a5\u7740\u5f80\u4e0b\u65cb\u8f6c\u3002\n\n\u6c42\u6700\u5de6\u70b9\uff0c\u548c\u6700\u53f3\u70b9\u540c\u7406\u3002\u53ea\u4e0d\u8fc7\u5224\u65ad\u6761\u4ef6\u662f$< 0$\u3002\u800c\u4e14\u4ed6\u7684\u65cb\u8f6c\u65b9\u5411\u548c\u4e0a\u9762\u76f8\u53cd\uff0c\u6240\u4ee5\u6211\u53c8\u5012\u7740\u8dd1\u4e86\u4e00\u904d\u65cb\u8f6c\u5361\u58f3\u3002\n\n\u63a5\u4e0b\u6765\u8bf4\u600e\u4e48\u6c42\u9762\u79ef\u3002\n![](https://img2018.cnblogs.com/blog/1284378/201811/1284378-20181122165019575-2113861608.png)\n\n\u770b\u8fd9\u4e2a\u56fe\u5c31\u597d\u4e86\u3002\n\n\u9996\u5148\u77e9\u5f62\u7684\u5bbd\u5f88\u597d\u6c42\uff0c\u5c31\u662f$\\Delta ABC$\u4ee5$AB$\u4e3a\u5e95\u8fb9\u7684\u9ad8\u3002\u7528\u53c9\u79ef\u6c42\u4e00\u904d\u9762\u79ef\u7136\u540e\u9664\u4ee5\u5e95\u8fb9\u957f\u5b8c\u4e8b\u3002\n\n\u7136\u540e\u6c42\u77e9\u5f62\u7684\u5e95\u8fb9\u957f\u3002\u6211\u662f\u628a\u4ed6\u5206\u6210\u4e86\u4e09\u90e8\u5206\uff1a\u4ee4$a$\u8868\u793a$AB$\u7684\u957f\u5ea6\uff0c$b$\u8868\u793a$\\overrightarrow{BD}$\u5728$\\overrightarrow{AB}$\u4e0a\u7684\u6295\u5f71\uff0c$c$\u8868\u793a$\\overrightarrow{AE}$\u5728$\\overrightarrow{AB}$\u4e0a\u7684\u6295\u5f71\uff0c\u5219\u5e95\u8fb9\u957f$l = |a| + |b| + |c|$\u3002\n\n\u6240\u4ee5\u9762\u79ef\u6c42\u5b8c\u4e86\u5566\uff01\n\n\u6700\u540e\u662f\u600e\u4e48\u6c42\u77e9\u5f62\u7684\u56db\u4e2a\u9876\u70b9\u3002\n\n\u6cbf\u7528\u4e0a\u9762\u7684\u5b57\u6bcd\u3002\n\n\u601d\u8def\u662f\u4ece\u53f3\u4e0b\u70b9$G$\u5f00\u59cb\u9006\u65f6\u9488\u4e00\u6b21\u6c42\u3002\n\n$G = B + \\overrightarrow{AB} * \\frac{|\\overrightarrow{BG}|}{|\\overrightarrow{AB}|}$\u3002\n\n\u63a5\u4e0b\u6765\u6c42$H$\u3002\u539f\u6765\u6211\u662f\u8fd9\u4e48\u6c42\u7684\uff1a$H = G + \\overrightarrow{GD} * \\frac{|\\overrightarrow{GH}|}{|\\overrightarrow{GD}|}$\u3002\n\n\u4f46\u662f\u4f1a\u6709$G, D$\u91cd\u5408\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u5c31\u6362\u4e86\u79cd\u6c42\u6cd5\uff0c\u628a$\\overrightarrow{AB}$\u987a\u65f6\u9488\u65cb\u8f6c$90$\u5ea6\u5f97\u5230$\\overrightarrow{BA'}$\uff0c\u7136\u540e$H = G + \\overrightarrow{BA'} * (- \\frac{|\\overrightarrow{GH}|}{|\\overrightarrow{BA'}|})$\uff0c\u5176\u4e2d${|\\overrightarrow{GH}|}$\u5c31\u662f\u77e9\u5f62\u7684\u9ad8\uff0c\u4e0a\u4e00\u95ee\u5df2\u7ecf\u6c42\u8fc7\u3002\n\n\u5bf9\u4e8e$I, G$\u540c\u7406\uff0c\u90fd\u662f\u5411\u91cf\u65cb\u8f6c\u52a0\u4f38\u957f\u7f29\u77ed\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\u3002\n\n\u597d\u50cf\u5c31\u505a\u5b8c\u4e86\u2026\u2026\n\n\u611f\u89c9\u5199\u4e86\u4e00\u5929\u7684\u9898\u4e5f\u4e0d\u600e\u4e48\u96be\u3002\u8fd8\u662f\u81ea\u5df1\u83dc\u554a\u2026\u2026\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u9898\u5361\u7cbe\u5ea6\uff0c$eps$\u5f00\u5230$1e-10$\u6211\u624d\u8fc7\u3002\u7136\u540e\u5982\u679c$|a| < 1e-5$\uff0c\u76f4\u63a5\u8f93\u51fa$0.00000$\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u8f93\u51fa$-0.00000$\u2026\u2026\n```c++\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<vector>\n#include<stack>\n#include<queue>\nusing namespace std;\n#define enter puts(\"\") \n#define space putchar(' ')\n#define Mem(a, x) memset(a, x, sizeof(a))\n#define rg register\ntypedef long long ll;\ntypedef double db;\nconst int INF = 0x3f3f3f3f;\nconst db eps = 1e-10;\nconst int maxn = 5e4 + 5;\ninline ll read()\n{\n  ll ans = 0;\n  char ch = getchar(), last = ' ';\n  while(!isdigit(ch)) last = ch, ch = getchar();\n  while(isdigit(ch)) ans = (ans << 1) + (ans << 3) + ch - '0', ch = getchar();\n  if(last == '-') ans = -ans;\n  return ans;\n}\ninline void write(ll x)\n{\n  if(x < 0) x = -x, putchar('-');\n  if(x >= 10) write(x / 10);\n  putchar(x % 10 + '0');\n}\n\nint n;\nstruct Point\n{\n  db x, y; int id;     //id\u8ddf\u9898\u76ee\u65e0\u5173,\u662f\u4e3a\u4e86\u65b9\u4fbf\u8c03\u8bd5\u7528\u7684\n  Point operator - (const Point& oth)const\n  {\n    return (Point){x - oth.x, y - oth.y, 0};\n  }\n  Point operator + (const Point& oth)const\n  {\n    return (Point){x + oth.x, y + oth.y, 0};\n  }\n  db operator * (const Point& oth)const\n  {\n    return x * oth.y - oth.x * y;\n  }\n  db operator ^ (const Point& oth)const  //\u8fd9\u662f\u70b9\u79ef,\u4e0d\u662f\u4f4d\u8fd0\u7b97\u2026\u2026\n  {\n    return x * oth.x + y * oth.y;\n  }\n  Point operator * (db d)\n  {\n    return (Point){x * d, y * d, 0};\n  }\n  friend inline db dis(const Point& A)\n  {\n    return A.x * A.x + A.y * A.y;\n  }\n  friend inline Point rot(const Point& A)    //\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6\n  {\n    return (Point){A.y, -A.x};\n  }\n}p[maxn], S;\n\nbool cmp(Point& A, Point& B)\n{\n  db s = (A - S) * (B - S);\n  if(fabs(s) > eps) return s > eps;\n  return dis(A - S) < dis(B - S) - eps;\n}\nint st[maxn], top = 0;\nvoid Graham()\n{\n  int id = 1;\n  for(int i = 2; i <= n; ++i)\n    if(p[i].x < p[id].x - eps || (fabs(p[i].x - p[id].x) < eps && p[i].y < p[id].y - eps)) id = i;\n  if(id != 1) swap(p[id].x, p[1].x), swap(p[id].y, p[1].y), swap(p[id].id, p[1].id);\n  S.x = p[1].x, S.y = p[1].y;\n  sort(p + 2, p + n + 1, cmp);\n  st[++top] = 1;\n  for(int i = 2; i <= n; ++i)\n    {\n      while(top > 1 && (p[st[top]] - p[st[top - 1]]) * (p[i] - p[st[top - 1]]) < eps) top--;\n      st[++top] = i;\n    }\n}\n\nstruct Rec\n{\n  Point R, U, L;\n}r[maxn];\ndb area(Point A, Point B, Point C)\n{\n  return (B - A) * (C - A);\n}\ndb pho(Point A, Point B, Point C, Point D)\n{\n  return (B - A) ^ (D - C);\n}\ninline int nxt(int x)\n{\n  if(++x > top) x = 1;\n  return x;\n}\nvoid rota1()\n{\n  for(int i = 1, j = 3, k = 2; i <= top; ++i)\n    {\n      while(nxt(j) != i && area(p[st[i]], p[st[i + 1]], p[st[j]]) < area(p[st[i]], p[st[i + 1]], p[st[nxt(j)]]) - eps) j = nxt(j);\n      r[i].U = p[st[j]];\n      while(nxt(k) != i && pho(p[st[i]],  p[st[i + 1]], p[st[k]], p[st[nxt(k)]]) > eps) k = nxt(k);\n      r[i].R = p[st[k]];\n    }\n}\ninline int pre(int x)\n{\n  x--;\n  if(!x) x = top;\n  return x;\n}\nvoid rota2()   //\u5355\u72ec\u7ef4\u62a4\u6700\u5de6\u70b9\n{\n  for(int i = top, j = top; i; --i)\n    {\n      while(pre(j) != i + 1 && pho(p[st[i]], p[st[i + 1]], p[st[j]], p[st[pre(j)]]) < eps) j = pre(j);\n      r[i].L = p[st[j]];\n    }\n}\n\nPoint Ans[5];\n\nint main()\n{\n  n = read();\n  for(int i = 1; i <= n; ++i) scanf(\"%lf%lf\", &p[i].x, &p[i].y);\n  for(int i = 1; i <= n; ++i) p[i].id = i;\n  Graham(); st[top + 1] = st[1];\n  rota1(); rota2();\n  db ans = (db)INF * (db)INF;\n  for(int i = 1; i <= top; ++i)\n    {\n      //printf(\"Line:%d %d R:%d U:%d L:%d\\n\", p[st[i]].id, p[st[i + 1]].id, r[i].R.id, r[i].U.id, r[i].L.id);\n      Point AB = p[st[i + 1]] - p[st[i]];\n      db a = sqrt(dis(AB));\n      db b = (AB ^ (r[i].L - p[st[i]])) / a, c = (AB ^ (r[i].R - p[st[i + 1]])) / a;\n      b = fabs(b), c = fabs(c);\n      db l = a + b + c;\n      db h = AB * (r[i].U - p[st[i]]) / a;\n      h = fabs(h);\n      db s = l * h;\n      //printf(\"**%.3lf %.3lf %.3lf %.3lf %.3lf\", a, b, c, l, h);\n      //printf(\"@%.3Lf\\n\", s);\n      if(s < ans - eps)\n\t{\n\t  ans = s;\n\t  Ans[0] = p[st[i + 1]] + AB * (c / a);\n\t  Ans[1] = Ans[0] + rot(AB) * (-h / a);\n\t  Ans[2] = Ans[1] + rot(Ans[1] - Ans[0]) * (-l / h);\n\t  Ans[3] = Ans[2] + rot(Ans[2] - Ans[1]) * (-h / l);\n\t  /*Ans[1] = Ans[0] + (r[i].R - Ans[0]) * (h / dis(Ans[0] - r[i].R));  //\u8fd9\u5c31\u662f\u6211\u539f\u6765\u7684\u5199\u6cd5\uff0c\u70b9\u91cd\u5408\u4f1a$gg$\n\t  Ans[2] = Ans[1] + (r[i].U - Ans[1]) * (l / dis(r[i].U - Ans[1]));\n\t  Ans[3] = Ans[2] + (r[i].L - Ans[2]) * (h / dis(r[i].L - Ans[2]));*/\n\t}\n    }\n  printf(\"%.5lf\\n\", ans);\n  int id = 0;\n  for(int i = 1; i < 4; ++i)\n    if(Ans[i].y < Ans[id].y - eps || (fabs(Ans[i].y - Ans[id].y) < eps && Ans[i].x < Ans[id].x - eps)) id = i;\n  for(int i = 0; i < 4; ++i)\n    {\n      db x = Ans[(id + i) % 4].x, y = Ans[(id + i) % 4].y;\n      if(fabs(x) < 1e-5) x = 0;\n      if(fabs(y) < 1e-5) y = 0;\n      printf(\"%.5lf %.5lf\\n\", x, y);\n    }\n  return 0;\n}\n```",
        "postTime": 1542877799,
        "uid": 55965,
        "name": "mrclr",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3187 \u3010[HNOI2007]\u6700\u5c0f\u77e9\u5f62\u8986\u76d6\u3011"
    },
    {
        "content": "\u4e0d\u662f\u5f88\u61c2\u697c\u4e0b\u4ee3\u7801\uff0c\u4f46\u662f\u6b63\u89e3\u662f\u65cb\u8f6c\u5361\u58f3\uff0c\u9898\u76ee\u5f88\u88f8\u5c31\u662f\u4ee3\u7801\u96be\u5199\uff0c\u77e9\u5f62\u4e00\u5b9a\u6709\u4e00\u6761\u8fb9\u5728\u51f8\u5305\u4e0a\uff0c\u679a\u4e3e\u8fd9\u6761\u8fb9\uff0c\u65cb\u8f6c\u5361\u58f3\u6765\u7ef4\u62a4\u5176\u4ed6\u4e09\u4e2a\u70b9\uff0c\u5bf9\u9762\u7684\u9876\u70b9\u7528\u4e09\u89d2\u5f62\u9762\u79ef\u5927\u5c0f\u5224\u65ad\uff0c\u800c\u4e24\u8fb9\u7684\u70b9\u5219\u7528\u70b9\u79ef\u6765\u5224\u65ad\u5c31\u597d\u4e86\uff0c\u8fd8\u6709\u5c31\u662f\u6ce8\u610fC++\u8f93\u51fa-0.00000\u7684\u60c5\u51b5\n\n        \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#define maxn 50021\n#define F(a) (a<0 ? a=-a : 0)\nusing namespace std;\nint top,n;\nstruct P{\n    double x,y;\n    P(double a=0,double b=0):x(a),y(b){}\n    bool operator<(const P& b)const{return x==b.x?y<b.y:x<b.x;}\n}p[maxn],s[maxn],q[10];\ntypedef P vec;\nvec operator+(vec a,vec b){return vec(a.x+b.x,a.y+b.y);}\nvec operator-(P a,P b){return vec(a.x-b.x,a.y-b.y);}\nvec operator*(vec a,double p){return vec(a.x*p,a.y*p);}\nvec operator/(vec a,double p){return vec(a.x/p,a.y/p);}\ndouble cross(vec a,vec b){return a.x*b.y-a.y*b.x;}\ndouble area(P a,P b,P c){return fabs(cross(a-b,a-c));}\ndouble dot(vec a,vec b){return a.x*b.x+a.y*b.y;}\ndouble len(vec a){return sqrt(a.x*a.x+a.y*a.y);}\ndouble angle(vec a,vec b){return acos(dot(a,b)/len(a)/len(b));}\nbool cmp(P a,P b){return a.y==b.y ? a.x > b.x : a.y < b.y;}\nvoid make(){\n    sort(p+1,p+1+n);\n    for(int i=1;i<=n;i++){\n        while(top>1&&cross(s[top]-s[top-1],p[i]-s[top])<=0)top--;\n        s[++top]=p[i];\n    }int m=top;\n    for(int i=n-1;i>=1;i--){\n        while(top>m&&cross(s[top]-s[top-1],p[i]-s[top])<=0)top--;\n        s[++top]=p[i];\n    }\n}\nvoid solve(){\n    double tmp,ans=1e100;\n    int a,b,c;s[top+1]=s[1];\n    a=b=c=2;\n    for(int i=2;i<=top;i++){        \n        while(cross(s[a+1]-s[i],s[i-1]-s[i])>=cross(s[a]-s[i],s[i-1]-s[i]))a=a%top+1;\n        while(dot(s[b+1]-s[i],s[i-1]-s[i])<=dot(s[b]-s[i],s[i-1]-s[i]))b=b%top+1;\n        if(i==2)c=a;\n        while(dot(s[c+1]-s[i-1],s[i]-s[i-1])<=dot(s[c]-s[i-1],s[i]-s[i-1]))c=c%top+1;\n        double dis=len(s[i]-s[i-1]);\n        double L=dot(s[c]-s[i],s[i-1]-s[i])/dis;F(L);\n        double R=dot(s[b]-s[i-1],s[i]-s[i-1])/dis;F(R);\n        double H=area(s[i],s[i-1],s[a])/len(s[i]-s[i-1]);F(H);\n        tmp=(L+R-dis)*H;\n        if(tmp<ans){\n            ans=tmp;\n            q[1]=s[i]-(s[i]-s[i-1])*(L/dis);\n            q[2]=q[1]+(s[i]-s[i-1])*((R+L-dis)/dis);\n            q[3]=q[2]+(s[b]-q[2])*(H/len(s[b]-q[2]));\n            q[4]=q[3]+(s[i-1]-s[i])*((R+L-dis)/dis); \n        }\n    }\n    printf(\"%.5lf\\n\",ans);\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n    make();solve();\n    int st=0;q[0].y=1e9;\n    for(int i=1;i<=4;i++)if(q[i].y<q[st].y||(q[i].y==q[st].y&&q[i].x<q[st].x))st=i;\n    if(fabs(q[st].x)<=1e-8)q[st].x=0;\n    if(fabs(q[st].y)<=1e-8)q[st].y=0;\n    printf(\"%.5lf %.5lf\\n\",q[st].x,q[st].y);\n    for(int i=0;i<3;i++){\n        if(fabs(q[(i+st)%4+1].x)<=1e-8)q[(i+st)%4+1].x=0;\n        if(fabs(q[(i+st)%4+1].y)<=1e-8)q[(i+st)%4+1].y=0;\n        printf(\"%.5lf %.5lf\\n\",q[(i+st)%4+1].x,q[(i+st)%4+1].y);\n    }\n    return 0;\n}\n```",
        "postTime": 1486215889,
        "uid": 18431,
        "name": "intruder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3187 \u3010[HNOI2007]\u6700\u5c0f\u77e9\u5f62\u8986\u76d6\u3011"
    },
    {
        "content": "## \u51e0\u4e4e\u6ca1\u6709\u7ec6\u8282\u7684\u5199\u6cd5\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u51f8\u5305\uff0c\u65cb\u8f6c\u5361\u58f3\u7684\u601d\u60f3\uff0c\u5411\u91cf\u8fd0\u7b97\u3002\n\n\u6c42\u5b8c\u51f8\u5305\u540e\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u4e8e\u51f8\u5305\u7684\u6bcf\u6761\u8fb9\uff0c\u627e\u51fa\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6\u7684\u77e9\u5f62\u7684\u957f\u548c\u5bbd\u3002\n\n* \u4ee5\u8fd9\u6761\u8fb9\u6240\u5728\u76f4\u7ebf\u7684\u4e00\u90e8\u5206\u4e3a\u4e00\u8fb9\n* \u5305\u542b\u8fd9\u4e2a\u51f8\u5305\u7684\u6240\u6709\u70b9\n* \u9762\u79ef\u6700\u5c0f\n\n\u7b54\u6848\u5373\u4e3a\u8fd9\u4e9b\u77e9\u5f62\u4e2d\u9762\u79ef\u6700\u5c0f\u7684\u4e00\u4e2a\u3002\n\n\u5173\u4e8e\u4e0a\u9762\u90e8\u5206\u7684\u8be6\u7ec6\u89e3\u91ca\u53ef\u4ee5\u770b\u5176\u4ed6\u9898\u89e3\u3002\n\n\u4e0b\u56fe\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\u663e\u7136\u77e9\u5f62\u7684\u4e09\u8fb9\u4e0e\u51f8\u5305\u201c\u76f8\u5207\u201d\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8wd604g5.png?x-oss-process=image/resize,m_lfit,h_1700,w_2250)\n\n\u8bbe\u51f8\u5305\u4e0a\u7684\u70b9\u6309\u9006\u65f6\u9488\u6392\u5e8f\u540e\u7684\u5e8f\u5217\u4e3a $p$\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u5f53\u524d\u6b63\u5728\u8003\u8651\u7684\u8fb9\u753b\u6210\u6c34\u5e73\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4ur5g06h.png?x-oss-process=image/resize,m_lfit,h_1700,w_2250)\n\n\u6211\u4eec\u8981\u5206\u522b\u6c42\u51fa\u6700\u53f3\u3001\u6700\u4e0a\u3001\u6700\u5de6\u7684\u70b9\u3002\u8bbe\u5b83\u4eec\u5206\u522b\u4e3a $i,j,k$\u3002\u5148\u4f7f\u7528\u65cb\u8f6c\u5361\u58f3\u7684\u601d\u60f3\u7ef4\u62a4 $i$\u3002\n\n\u5982\u56fe\uff0c\u5bb9\u6613\u53d1\u73b0\u5982\u679c $\\overrightarrow{a}\\cdot\\overrightarrow{p_ip_{i+1}}>0$ \u5219 $i$ \u5e94\u79fb\u52a8\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u91cc\u53ea\u7528\u5230\u4e86 $\\overrightarrow{a}$ \u7684\u65b9\u5411\u3002**\u6211\u4eec\u4e0d\u5728\u610f\u5b83\u7684\u6a21\u6216\u8005\u8d77\u70b9**\u3002\u56e0\u6b64\uff0c\u5c06\u5b83\u9006\u65f6\u9488\u65cb\u8f6c $90\\degree$ \uff08$(x,y)\\rightarrow(-y,x)$\uff09\u540e\u6211\u4eec\u53ef\u4ee5\u7528**\u5b8c\u5168\u76f8\u540c**\u7684\u65b9\u6cd5\u7ef4\u62a4 $j$\u3002$k$ \u540c\u7406\u3002\u8fd9\u663e\u7136\u53ef\u4ee5\u5c01\u88c5\u4e3a\u4e00\u4e2a\u51fd\u6570\u3002\n\n\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u96be\u5ea6\u4e3b\u8981\u5728\u4e8e\u6c42\u51fa\u77e9\u5f62\u7684\u957f\u5bbd\u4ee5\u53ca\u56db\u4e2a\u89d2\u7684\u5750\u6807\u3002\u4ecd\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\u3002\u6211\u4eec\u9700\u8981\u6c42\u51fa $QH$ \u7684\u957f\u5ea6\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c$\\overrightarrow{QB}\\cdot\\overrightarrow{QP}=QP\\cdot QH$\u3002\u7531\u6b64\u6613\u5f97  $QH$ \u7684\u957f\u5ea6\uff0c\u4ece\u800c\u7b97\u51fa\u77e9\u5f62\u7684\u53f3\u4e0b\u89d2\u5750\u6807\u3002\u5de6\u4e0b\u89d2\u540c\u7406\u3002\u77e9\u5f62\u7684\u957f\u5c31\u6613\u4e8e\u8ba1\u7b97\u4e86\u3002\n\n\u77e9\u5f62\u7684\u5bbd\u66f4\u5bb9\u6613\u8ba1\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa $C$ \u5230\u76f4\u7ebf $QP$ \u7684\u8ddd\u79bb\u3002$\\operatorname{dis}(C,QP)=\\frac{|\\overrightarrow{CQ}\\times\\overrightarrow{CP}|}{|\\overrightarrow{a}|}$\u3002\n\n**\u91cd\u8981\u6ce8\u610f\u70b9**\uff1a$i,j,k$ \u7684\u521d\u59cb\u503c\u5747\u4e3a $1$\uff0c\u521d\u59cb\u65f6 $k$ \u9006\u65f6\u9488\u79fb\u4f1a\u53d8\u52a3\uff0c\u56e0\u6b64\u9700\u8981\u5148\u5c06 $i$ \u548c $j$ \u79fb\u597d\uff0c\u5c06 $j$ \u8d4b\u503c\u7ed9 $k$ \u518d\u79fb\u52a8 $k$\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nint n,st[50005],tp;\nbool used[50005];\nstruct vec{double x,y;}a[50005],b[50005];\ninline int nxt(int i){return i==n-1?1:i+1;}\ndouble operator*(vec a,vec b){return a.x*b.x+a.y*b.y;}//\u70b9\u79ef \ndouble operator%(vec a,vec b){return a.x*b.y-a.y*b.x;}//\u53c9\u79ef \nvec operator-(vec a,vec b){return {a.x-b.x,a.y-b.y};}\nbool operator<(const vec&a,const vec&b){return a.x<b.x||a.x==b.x&&a.y<b.y;}\nvoid rot(vec&a){swap(a.x,a.y),a.x=-a.x;}//\u5c06\u5411\u91cfa\u9006\u65f6\u9488\u65cb\u8f6c90\u00b0 \ndouble sqr(double x){return x*x;}\ndouble dis(vec a,vec b){return sqrt(sqr((a-b).x)+sqr((a-b).y));}\ndouble mo(vec a){return sqrt(sqr(a.x)+sqr(a.y));}//\u6a21\nstruct ansv{double a;vec p[4];}ans;//\u7b54\u6848\u7ed3\u6784\u4f53\nvoid mov(vec x,int&i){while((a[nxt(i)]-a[i])*x>=0)i=nxt(i);}//\u5c06i\u79fb\u52a8\u5230x\u65b9\u5411\u4e0a\u6700\u8fdc\u7684\u70b9\uff0c\u6ce8\u610f\u7ad6\u76f4\u5411\u4e0a\u4e5f\u8981\u52a8\nvoid print(double x,char c){if(abs(x)<1e-6)x=0;printf(\"%.5lf%c\",x,c);}//\u7279\u5224-0.00000\nvoid print(vec a){print(a.x,' '),print(a.y,'\\n');}\nvec mov(vec s,vec d,double di)//\u4eces\u6cbfd\u65b9\u5411\u79fb\u52a8di\u540e\u70b9\u7684\u5750\u6807 \n{\n\tdouble tmp=di/mo(d);\n\treturn {s.x+tmp*d.x,s.y+tmp*d.y};\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%lf%lf\",&b[i].x,&b[i].y);\n\tsort(b+1,b+n+1);\n\tst[tp=1]=1;\n\tfor(int i=2;i<=n;++i)\n\t{\n\t\twhile(tp>1&&(b[st[tp]]-b[st[tp-1]])%(b[i]-b[st[tp]])<=0)\n\t\t\tused[st[tp--]]=0;\n\t\tused[st[++tp]=i]=1;\n\t}\n\tint t=tp;\n\tfor(int i=n-1;i;--i)\n\t{\n\t\tif(used[i])continue;\n\t\twhile(tp>t&&(b[st[tp]]-b[st[tp-1]])%(b[i]-b[st[tp]])<=0)\n\t\t\tused[st[tp--]]=0;\n\t\tused[st[++tp]=i]=1;\n\t}\n\tn=tp;\n\tfor(int i=1;i<=n;++i)\n\t\ta[i]=b[st[i]];\n    //\u4ee5\u4e0a\u4e3a\u51f8\u5305\u677f\u5b50\n    //---------------------------------------------------------------\n    //\u4ee5\u4e0b\u4e3a\u6c42\u89e3\u77e9\u5f62\n\tint p1=1,p2=1,p3=1;\n\tans.a=1e18;\n\tvec tmp=a[2]-a[1];\n\tmov(tmp,p1),p2=p1,rot(tmp);\n\tmov(tmp,p2),p3=p2,rot(tmp);\n\tmov(tmp,p3);//\u6ce8\u610f\n\tfor(int i=1;i<n;++i)\n\t{\n\t\ttmp=a[i+1]-a[i];//tmp\u4e3aa\u5411\u91cf\n\t\tmov(tmp,p1);//\u79fb\u52a8\u53f3\u8fb9\n\t\trot(tmp);//\u5c06tmp\u9006\u65f6\u9488\u65cb\u8f6c90\u00b0\n\t\tmov(tmp,p2);//\u79fb\u52a8\u4e0a\u8fb9\n\t\trot(tmp);\n\t\tmov(tmp,p3);//\u79fb\u52a8\u5de6\u8fb9\n\t\ttmp=a[i+1]-a[i];\n\t\tdouble h,w=-mo(tmp);\n\t\th=fabs((a[p2]-a[i])%(a[p2]-a[i+1]))/dis(a[i],a[i+1]);\n\t\tw+=(a[p1]-a[i])*tmp/mo(tmp);\n\t\tw+=(a[i+1]-a[p3])*tmp/mo(tmp);\n        //\u8fd9\u91ccw\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f(QH)+(\u5de6\u8fb9\u7c7b\u4f3c\u4e8eQH\u7684\u4e1c\u897f)-(|a|)\n\t\tif(h*w<ans.a)\n\t\t{\n\t\t\tans.a=h*w;\n            //\u8fd9\u91cc\u5bf9\u4e8e\u56db\u4e2a\u9876\u70b9\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u4eceQ\u51fa\u53d1\u9006\u65f6\u9488\u79fb\u52a8\u4e00\u5708\n            //\u6ce8\u610f\u4ee3\u7801\u91cc\u5199\u4e862\u4e2a\u4e0d\u540c\u7684mov\n\t\t\tans.p[0]=mov(a[i],tmp,(a[p1]-a[i])*tmp/mo(tmp)),rot(tmp);\n\t\t\tans.p[1]=mov(ans.p[0],tmp,h),rot(tmp);\n\t\t\tans.p[2]=mov(ans.p[1],tmp,w),rot(tmp);\n\t\t\tans.p[3]=mov(ans.p[2],tmp,h);\n\t\t}\n\t}\n    //\u4ee5\u4e0b\u4e3a\u7e41\u7410\u7684\u8f93\u51fa\n\tpair<double,double>T={1e18,1e18};\n\tint mnp=0;\n\tfor(int i=0;i<4;++i)\n\t\tif(make_pair(ans.p[i].y,ans.p[i].x)<T)\n\t\t\tT=make_pair(ans.p[i].y,ans.p[i].x),mnp=i;\n\tprint(ans.a,'\\n');\n\tfor(int i=0;i<4;++i)print(ans.p[(mnp+i)%4]);\n\treturn 0;\n}\n```\n\n\u66f4\u65b0\uff1a\u5982\u679c\u6240\u6709\u70b9\u7684\u6a2a\u5750\u6807\u90fd\u76f8\u540c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u6b7b\u5faa\u73af\u3002\u8fd9\u9898\u6ca1\u6709\u8fd9\u6837\u7684\u6570\u636e\uff0c\u4f46\u662f\u8fd9\u79cd\u60c5\u51b5\u5e94\u8be5\u7279\u5224\uff08\u6216\u8005\u76f4\u63a5\u5750\u6807\u7cfb\u968f\u673a\u65cb\u8f6c\uff09\u3002\u4ee3\u7801\u5c31\u4e0d\u5199\u4e86\u3002\n\n\u66f4\u65b0\uff1a\u4e3a\u4ec0\u4e48\u7c97\u4f53\u4f1a\u70b8\u554a\uff1f",
        "postTime": 1657796471,
        "uid": 300025,
        "name": "qiliangzhe",
        "ccfLevel": 8,
        "title": "P3187 [HNOI2007]\u6700\u5c0f\u77e9\u5f62\u8986\u76d6 \u9898\u89e3"
    },
    {
        "content": "\u4e0b\u5348\u770b\u4e86\u4e00\u773c\u65cb\u8f6c\u5361\u58f3\uff0c\u7136\u540e\u8ddf\u7740zfj\u505a\u4e86\u8fd9\u9898\uff0c\u770b\u4e86\u5e7f\u5927\u9898\u89e3\u624d\u77e5\u9053\u5927\u5bb6\u6700\u5c0f\u77e9\u5f62\u8986\u76d6\u4e3a\u4e86\u4fdd\u8bc1\u6240\u6709\u70b9\u6309\u7167\u9006\u65f6\u9488\u6392\u5e8f\u90fd\u662f\u7528\u4e86\u5411\u91cf\u9010\u6e10\u4ecesi->si+1\u5de6\u8fb9\u7684\u70b9\u5f00\u59cb\u7ed5\u4e00\u5708\u3002\n\n\u8fd9\u91cc\u7684\u505a\u6cd5\u662f\u5148\u6839\u636e\u65cb\u8f6c\u5361\u58f3\u8bb0\u5f55\u4e0b\u6700\u5c0f\u77e9\u5f62\u5de6\u7aefq\u3001\u4e0a\u7aefr\u3001\u53f3\u7aefp\u4ee5\u53ca\u5e95\u90e8\u7684\u7ebf\u6bb5\uff0c\u7136\u540e\u4f7f\u7528\u4e86\u4e24\u76f4\u7ebf\u4ea4\u70b9\u8ddf\u76f4\u7ebf\u65cb\u8f6c90\u5ea6\u4f5c\u5782\u7ebf\u6c42\u51fa\u4e24\u7aef\u70b9\u6240\u5728\u5782\u7ebf\uff0c\u6700\u540e\u66b4\u529b\u6c42\u4ea4\u70b9\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u77e9\u5f62\u4e0b\u7aef\u4e24\u70b9\uff0c\u7136\u540e\u518d\u8fc7\u4e0a\u7aef\u70b9r\u4f5c\u5e95\u7ebf\u5e73\u884c\u7ebf\uff0c\u778e\u66b4\u529b\uff0c\u6700\u540e\u5957\u4e86\u4e00\u4e0b\u51f8\u5305\u7684\u6781\u89d2\u6392\u5e8f\uff0c\u7136\u540e\u627e\u5230\u5f00\u59cb\u7684\u70b9\uff0ckungbin\u5de8\u5de8\u7684\u677f\u5b50\u771f\u9999\n\n\u732e\u4e0a\u4e11\u964b\u5f88\u591a\u51fd\u6570\u6ca1\u6709\u7528\u5230\u7684\u4ee3\u7801\n```c\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <cstring>\n#include <vector>\n\nusing namespace std;\n\nconst int maxp = 50000 + 10;\nconst double eps = 1e-8;\nconst double PI = acos(-1.0);\n\nint sgn(double x) {\n    if (fabs(x) <= eps) return 0;\n    if (x > 0) return 1;\n    return -1;\n}\n\nstruct Point \n{\n    double x, y;\n    Point(){}\n    Point(double _x, double _y):x(_x), y(_y){}\n    void input()\n    {\n        scanf(\"%lf%lf\", &x, &y);\n    }\n    void output()\n    {\n        if (sgn(x) == 0)\n            printf(\"0.00000\");\n        else\n            printf(\"%.5lf\", x);\n        if (sgn(y) == 0)\n            printf(\" 0.00000\");\n        else\n            printf(\" %.5lf\", y);\n        puts(\"\");\n    }\n    Point operator = (Point tmp) {\n        this->x = tmp.x;\n        this->y = tmp.y;\n        return *this;\n    }\n    friend Point operator - (Point a, Point b)\n    {\n        Point res;\n        res.x = a.x - b.x;\n        res.y = a.y - b.y;\n        return res;\n    }\n    friend Point operator + (Point a, Point b)\n    {\n        return Point(a.x + b.x, a.y + b.y);\n    }\n    bool operator < (Point b) const {\n        return sgn(x-b.x)==0?sgn(y-b.y)<0:x<b.x;\n    }\n    Point operator * (const double k)\n    {\n        return Point(k*x, k*y);\n    }\n    double operator * (const Point a)\n    {\n        return (this->x * a.x + this->y * a.y);\n    }\n    double operator ^ (const Point a)\n    {\n        return this->x * a.y - this->y * a.x;\n    }\n    Point operator / (const double k)\n    {\n        return Point(x/k, y/k);\n    }\n    bool operator == (Point b) const {\n        return sgn(x-b.x)==0&&sgn(y-b.y)==0;\n    }\n    void init(double _x, double _y)\n    {\n        x = _x;\n        y = _y;\n    }\n    friend double dis(Point a, Point b) \n    {\n        double dx = a.x-b.x;\n        double dy = a.y-b.y;\n        return sqrt(dx*dx+dy*dy);\n    }\n    double rad(Point a, Point b)\n    {\n        Point p = *this;\n        return fabs(atan2(fabs((a-p)^(b-p)), (a-p)*(b-p)));\n    }\n    double len2()\n    {\n        return x * x + y * y;\n    }\n    Point rotleft()\n    {\n        return Point(-y, x);\n    }\n};\n\nstruct Line\n{\n    Point s, e;\n    void adjust() {\n        if (e < s) swap(s, e);\n    }\n    Line(){}\n    Line (Point _s, Point _e)\n    {\n        s = _s;\n        e = _e;\n        adjust();\n    }\n    bool operator == (Line v) {\n        return (s == v.s) && (e == v.e);\n    }\n    double length() {\n        return dis(s, e);\n    }\n    int relation(Point p) {\n        int c = sgn((p-s) ^ (e-s));\n        if (c < 0) return 1;\n        else if ( c > 0 ) return 2;\n        return 3;\n    }\n    bool pointonseg(Point p) {\n        return sgn((p - s) ^ (e - s)) == 0 && sgn((p - s) * (p - e)) <= 0;\n    }\n    bool parallel(Line v) {\n        return sgn((e - s) ^ (v.e - v.s)) == 0;\n    }\n    friend Point crosspoint(Line u, Line v)\n    {\n        double a1 = (v.e - v.s) ^ (u.s - v.s);\n        double a2 = (v.e - v.s) ^ (u.e - v.s);\n        return Point((u.s.x * a2 - u.e.x * a1) / (a2 - a1), (u.s.y * a2 - u.e.y * a1) / (a2 - a1));\n    }\n};\nint stk1[maxp * 2];\nstruct Polygon\n{\n    int n;\n    Point p[maxp];\n    Line l[maxp];\n    void input(int _n)\n    {\n        n = _n;\n        for (int i = 0; i < n; i ++ ) p[i].input();\n    }\n    void add(Point q)\n    {\n        p[n++] = q;\n    }\n    void getline()\n    {\n        for (int i = 0; i < n; i ++ )\n        {\n            l[i] = Line(p[i], p[(i+1)%n]);\n        }\n    }\n    struct cmp\n    {\n        Point p;\n        cmp(const Point &p0){p=p0;}\n        bool operator () (const Point &aa, const Point &bb)\n        {\n            Point a = aa, b = bb;\n            int d = sgn((a-p)^(b-p));\n            if (d == 0)\n            {\n                return sgn(dis(a, p) - dis(b, p)) < 0;\n            }\n            return d > 0;\n        }\n    };\n    void norm() \n    {\n        Point mi = p[0];\n        for (int i = 1; i < n; i ++ )mi = min(mi, p[i]);\n        sort(p, p + n, cmp(mi));\n    }\n    void getconvec(Polygon &convex) \n    {\n        sort(p, p + n);\n        convex.n = n;\n        for (int i = 0; i < min(2, n); i ++ )\n            convex.p[i] = p[i];\n        if (convex.n == 2 && convex.p[0] == convex.p[1]) n--;\n        if (n <= 2) return;\n        int &top = convex.n;\n        top = 1;\n        for (int i = 2; i < n; i ++ )\n        {\n            while (top - 1 >= 0 && sgn((convex.p[top] - p[i]) ^ (convex.p[top - 1] - p[i])) >= 0)\n                top--;\n            convex.p[++top] = p[i];\n        }\n        int lim = top;\n        convex.p[++top] = p[n-2];\n        for (int i = n-3; i >= 0; i -- )\n        {\n            while (top - 1 >= lim && sgn((convex.p[top] - p[i]) ^ (convex.p[top - 1] - p[i])) >= 0)\n                top--;\n            convex.p[++top] = p[i];\n        }\n        if (convex.n == 2 && convex.p[0] == convex.p[1]) n--;\n        convex.norm();\n    }\n};\ndouble cross(Point A, Point B, Point C) {\n    return (B - A) ^ (C - A);\n}\ndouble dot(Point A, Point B, Point C) {\n    return (B - A) * (C - A);\n}\n\ndouble minRectangleCover(Polygon conv, int &rr, int &pp, int &qq, int &ii) {\n    if (conv.n < 3) return 0.0;\n    int n = conv.n;\n    conv.p[n] = conv.p[0];\n    double ans = -1;\n    int r = 1, p = 1, q;\n    for (int i = 0; i < n; i ++ ) {\n        while (sgn(cross(conv.p[i], conv.p[i + 1], conv.p[r + 1]) - cross(conv.p[i], conv.p[i + 1], conv.p[r])) >= 0)\n            r = (r + 1) % n;\n        while (sgn(dot(conv.p[i], conv.p[i + 1], conv.p[p + 1]) - dot(conv.p[i], conv.p[i + 1], conv.p[p])) >= 0)\n            p = (p + 1) % n;\n        if (i == 0) q = p;\n        while (sgn(dot(conv.p[i], conv.p[i + 1], conv.p[q + 1]) - dot(conv.p[i], conv.p[i + 1], conv.p[q])) <= 0)\n            q = (q + 1) % n;\n        double d = (conv.p[i] - conv.p[i + 1]).len2();\n        double tmp = cross(conv.p[i], conv.p[i + 1], conv.p[r]) * \n        (dot(conv.p[i], conv.p[i + 1], conv.p[p]) - dot(conv.p[i], conv.p[i + 1], conv.p[q])) / d;\n        if (ans < 0 || ans > tmp) {\n            ans = tmp;\n            rr = r;\n            pp = p;\n            qq = q;\n            ii = i;\n        }\n    }\n    return ans;\n}\n\nint main ()\n{\n    int n;\n    scanf(\"%d\", &n);\n    Polygon poly;\n    poly.input(n);\n    Polygon conv;\n    poly.getconvec(conv);\n    int cnt = conv.n;\n    int r, p, q, i;\n    double res = minRectangleCover(conv, r, p, q, i);\n    printf(\"%.5lf\\n\", res);\n\n    Line line1(conv.p[i], conv.p[i + 1]);\n    Point tmp = line1.e - line1.s;\n    Line line2(conv.p[r], conv.p[r] + tmp);\n    tmp = tmp.rotleft();\n    Line line3(conv.p[p], conv.p[p] + tmp);\n    Line line4(conv.p[q], conv.p[q] + tmp);\n    Point ans[4];\n    ans[0] = crosspoint(line1, line3);\n    ans[1] = crosspoint(line1, line4);\n    ans[2] = crosspoint(line2, line3);\n    ans[3] = crosspoint(line2, line4);\n    poly.n = 4;\n    for (int i = 0; i < 4; i ++ )\n        poly.p[i] = ans[i];\n    poly.getconvec(conv);\n    int fir = 0;\n    for (int i = 0; i < 4; i ++ ){   \n        if (conv.p[fir].y > conv.p[i].y){\n            fir = i;\n        }\n        else if (conv.p[fir].y == conv.p[i].y && conv.p[fir].x > conv.p[i].x)\n            fir = i;\n    }\n    for (int i = 0; i < 4; i ++ ){\n        conv.p[(fir + i)%4].output();\n    }\n    return 0;\n}\n```\n",
        "postTime": 1605010743,
        "uid": 215942,
        "name": "CLer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3187 \u3010[HNOI2007]\u6700\u5c0f\u77e9\u5f62\u8986\u76d6\u3011"
    },
    {
        "content": "\n\u8865\u5145\u91cd\u8981\u6027\u8d28\u7684\u8bc1\u660e\uff0c\u4ee5\u53ca\u7ed9\u51fa\u76ee\u524d\u6700\u4f18\u89e3\u7b2c\u4e00\u7684\u4ee3\u7801\u5b9e\u73b0\uff08\u5b8c\u5168\u6ca1\u6709\u523b\u610f\u5361\u5e38\uff09\uff08\u5e26\u6ce8\u91ca\uff09\u3002\n\n------------\n\n\u5927\u90e8\u5206\u5185\u5bb9\u9898\u89e3\u533a\u5df2\u6709\u9898\u89e3\u5df2\u7ecf\u8bb2\u7684\u5341\u5206\u6e05\u695a\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u5bf9\u4e8e\u201c\u6700\u4f18\u60c5\u51b5\u4e0b\u81f3\u5c11\u6709\u4e00\u6761\u77e9\u5f62\u8fb9\u4e0e\u51f8\u5305\u7684\u8fb9\u91cd\u5408\u201d\u7684\u8bc1\u660e\uff0c\u6211\u5728\u5199\u8fd9\u9053\u9898\u7684\u65f6\u5019\u611f\u5230\u6bd4\u8f83\u56f0\u60d1\u4e14\u9898\u89e3\u533a\u6ca1\u6709\u7ed9\u51fa\u8bc1\u660e\uff0c\u89e3\u51b3\u8fd9\u4e2a\u56f0\u60d1\u540e\u51b3\u5b9a\u53d1\u9898\u89e3\u8865\u5145\uff1a\n\n\u9996\u5148\u77e9\u5f62\u7684\u8fb9\u5fc5\u5b9a\u4e0e\u51f8\u5305\u7684\u70b9\u76f8\u4ea4\uff0c\u5426\u5219\u53ef\u4ee5\u5c06\u8fb9\u5411\u51f8\u5305\u5e73\u79fb\u8c03\u6574\u76f4\u5230\u4e0e\u7b2c\u4e00\u4e2a\u51f8\u5305\u4e0a\u7684\u70b9\u76f8\u4ea4\uff0c\u4ecd\u7136\u6ee1\u8db3\u6240\u6709\u70b9\u90fd\u5728\u77e9\u5f62\u5185\u4e14\u7b54\u6848\u53d8\u5c0f\u3002\u5c06\u51f8\u5305\u843d\u5728\u77e9\u5f62\u5bf9\u8fb9\u7684\u70b9\u8fde\u63a5\uff08\u5982\u4e0b\u56fe\uff09\uff0c\u540e\u7eed\u89c1\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zbbhwe0d.png)\n\n\n\u53d1\u73b0\u81ea\u5df1\u7684\u4ee3\u7801\u76ee\u524d\u662f\u6700\u4f18\u89e3\u7b2c\u4e00\uff0c\u6240\u4ee5\u653e\u4e00\u4e0b\u4ee3\u7801\u5b9e\u73b0\u4ee5\u4f9b\u53c2\u8003\uff08\u6709\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010;\nconst double eps=1e-10;\nint n;\ninline bool same(double x,double y) { return fabs(x-y)<eps;}\nstruct Point {\n    double x,y;\n    inline bool operator<(const Point &t)const {\n        if(!same(x,t.x)) return x<t.x;\n        return y<t.y;\n    }\n    inline Point operator+(const Point &t)const {return {x+t.x,y+t.y};}\n    inline Point operator-(const Point &t)const {return {x-t.x,y-t.y};} \n    inline Point operator*(const double &t)const {return {x*t,y*t};}//\u6570\u4e58\n    inline double operator*(const Point &t)const {return x*t.y-y*t.x;} //\u53c9\u79ef \n    inline double operator^(const Point &t)const {return x*t.x+y*t.y;} //\u70b9\u79ef  \n}p[N],tmp[N];\nstruct Line {  Point s,v;};//\u70b9\u5411\u5f0f\u7ed3\u6784\u4f53\ninline Point inter(Line l1,Line l2) {\n    Point t1=l1.s+l1.v;\n    double s1=l2.v*(l1.s-l2.s);\n    double s2=(t1-l2.s)*l2.v;\n    double t=s1/(s1+s2);\n    return l1.s+l1.v*t;\n} //\u6c42\u76f4\u7ebf\u4ea4\u70b9\ndouble ans=1e18;\nPoint a[4]; //\u7b54\u6848\u77e9\u5f624\u4e2a\u9876\u70b9\ninline Point get(Point p) {\n    p.x=(fabs(p.x)<eps)?0:p.x;\n    p.y=(fabs(p.y)<eps)?0:p.y;\n    return p;\n} //=0\u53ef\u80fd\u4f1a\u8f93\u51fa0/-0 \u6240\u4ee5\u8981\u5224\ninline void update(Line l1,Line l2,Line l3,Line l4) {\n    Point b[4]={inter(l1,l2),inter(l2,l3),inter(l3,l4),inter(l4,l1)};\n    double now=fabs(b[0]*b[1]+b[1]*b[2]+b[2]*b[3]+b[3]*b[0])/2;\n    if(ans>now) {\n        ans=now;\n        for(int i=0;i<4;i++) a[i]=get(b[i]);\n    }\n} // \u6c424\u6761\u76f4\u7ebf\u56f4\u6210\u76844\u8fb9\u5f62\u9762\u79ef \u66f4\u65b0\u7b54\u6848 \u6ce8\u610f\u76f4\u7ebf\u987a\u5e8f\ninline Point rotate(Point p) { return {-p.y,p.x};} // \u628ap\u65cb\u8f6c90\u5ea6\ninline void getline(Line l1,Point p2,Point p3,Point p4) {\n    Point _v=rotate(l1.v);\n    Line l2={p2,_v},l3={p3,l1.v},l4={p4,_v};\n    update(l1,l2,l3,l4);\n} //\u786e\u5b9a\u4e00\u6761\u76f4\u7ebf\u548c\u53e6\u59163\u4e2a\u70b9 \u6c42\u51fa\u56f4\u6210\u77e9\u5f62\u76844\u6761\u76f4\u7ebf\u5e76\u66f4\u65b0\u7b54\u6848\nint stk[N],top;\nvoid tb() {\n    sort(p+1,p+n+1);\n    for(int i=1;i<=n;i++) {\n        while(top>1&&((p[i]-p[stk[top-1]])*(p[stk[top]]-p[stk[top-1]]))<eps) top--;\n        stk[++top]=i;\n    }\n    int limit=top;\n    for(int i=n;i>=1;i--) {\n        while(top>limit&&((p[i]-p[stk[top-1]])*(p[stk[top]]-p[stk[top-1]]))<eps) top--;\n        stk[++top]=i;\n    }\n    for(int i=1;i<=top;i++) tmp[i]=p[stk[i]];\n    for(int i=1;i<=top;i++) p[i]=tmp[i];\n    n=top-1;\n}\ninline double val(Point a,Point b,Point c) {\n    return fabs((a-b)*(a-c));\n} //\u4e09\u89d2\u5f62\u9762\u79ef\nvoid work() {\n    for(int i=1,j=2,x=2,y=2;i<=n;i++) { //i x j y\n        while(val(p[i],p[i+1],p[j])<val(p[i],p[i+1],p[j%n+1])) j=j%n+1;\n        y=max(y,j);\n        while(x!=j&&((p[i+1]-p[i])^(p[x+1]-p[x]))>-eps) x=x%n+1; //>=0 (\u9510\u89d2/\u76f4\u89d2) <=> >-eps\n        while(y!=i&&((p[i+1]-p[i])^(p[y+1]-p[y]))<eps) y=y%n+1;\n        getline(Line{p[i],p[i+1]-p[i]},p[x],p[j],p[y]);\n    }\n}\nint main() {\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n    tb();\n    work();\n    printf(\"%.5lf\\n\",ans);\n    reverse(a,a+4);// a \u672c\u8eab\u662f\u987a\u65f6\u9488\u7684\n    int pos=0;\n    for(int i=1;i<4;i++)\n        if(a[pos].y>a[i].y)\n            pos=i;\n    for(int i=pos;i<4;i++) printf(\"%.5lf %.5lf\\n\",a[i].x,a[i].y);\n    for(int i=0;i<pos;i++) printf(\"%.5lf %.5lf\\n\",a[i].x,a[i].y);\n    return 0;\n}\n```",
        "postTime": 1681097733,
        "uid": 546246,
        "name": "E_huan",
        "ccfLevel": 8,
        "title": "P3187 \u6700\u5c0f\u77e9\u5f62\u8986\u76d6 \u9898\u89e3"
    },
    {
        "content": "\u5bf9\u4e8e\u6ca1\u6709\u57fa\u7840\u77e5\u8bc6\u7684\u6211\u6765\u8bf4\uff0c\u5199\u8fd9\u9053\u9898\u5199\u4e86\u4e00\u5929(\u5148\u5b66\u51f8\u5305\uff0c\u7136\u540e\u5b66\u65cb\u8f6c\u5361\u58f3\uff0c\u7136\u540e\u505a\u8fd9\u9053\u9898)\n\n\u6211\u7684\u535a\u5ba2\u5730\u5740\uff1ahttps://blog.csdn.net/Huah_2018/article/details/100583085\n\n\u9884\u5907\u77e5\u8bc6\n\n\u51f8\u5305\uff1ahttps://blog.csdn.net/qq_30974369/article/details/76405546\n\n\u65cb\u8f6c\u5361\u58f3\uff1ahttps://www.cnblogs.com/adelalove/p/8467472.html\n\n\u56fe1\uff1a\n![\u56fe1](https://img-blog.csdnimg.cn/20190906170713460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0h1YWhfMjAxOA==,size_16,color_FFFFFF,t_70)\n\n\u56fe2\uff1a\n![\u56fe2](https://img-blog.csdnimg.cn/201909061723434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0h1YWhfMjAxOA==,size_16,color_FFFFFF,t_70)\n\n\u9996\u5148\u6c42\u51fa\u51f8\u5305\uff0c\u77e9\u5f62\u7684\u4e00\u6761\u8fb9\u4e00\u5b9a\u5728\u548c\u51f8\u5305\u7684\u4e00\u6761\u8fb9\u91cd\u5408\u3002\u7136\u540e\u65cb\u8f6c\u5361\u58f3\u7ef4\u62a4\u6700\u4e0a\u70b9\u3002\u6700\u5de6\u70b9\u548c\u6700\u53f3\u70b9\u4e5f\u53ef\u4ee5\u7528\u65cb\u8f6c\u5361\u58f3\u7ef4\u62a4\uff0c\u6216\u8005\u7528\u4e09\u5206\u7ef4\u62a4\u3002\n\n\u5728\u5361\u58f3\u65f6\u6839\u636e\u56fe1\u7247\u7528\u70b9\u79ef\u6c42l2\u7684\u957f\u5ea6\uff0c\u7531\u4e8e\u6700\u5de6\u70b9\u6700\u53f3\u70b9\u7684\u89d2\u5ea6\u572890~180\u5ea6\u4e4b\u95f4\uff0c\u5e76\u4e14\u70b9\u79ef=|a||b|cosx\uff0c\u6b64\u65f6cosx\u5c0f\u4e8e0\uff0c\u6240\u4ee5\u70b9\u79ef\u8d8a\u5c0f\uff0c\u8bf4\u660el2\u8d8a\u957f\u3002\n\n\n\u63a5\u4e0b\u6765\u6c42\u77e9\u9635\u9762\u79ef\uff0c\u77e9\u5f62\u7684\u9ad8\u5f88\u5bb9\u6613\u6c42\uff0c\u7531\u4e09\u4e2a\u70b9s[i],s[i+1],s[a]\u7684\u53c9\u79ef\u6c42\u51fa\u4e09\u89d2\u5f62\u9762\u79ef\u76842\u500d\uff0c\u9664\u4ee5\u5e95\u8fb9\u957f\u5ea6len(s[i],s[i+1])\uff0c\u5373\u4e3a\u4e09\u89d2\u5f62\u7684\u9ad8\uff0c\u77e9\u5f62\u7684\u5bbd\u3002\n\n\u7136\u540e\u6c42\u77e9\u5f62\u7684\u957f\uff0c\u5982\u56fe2\uff0c\u77e9\u5f62\u4e3aEFGH\uff0c\u77e9\u5f62\u7684\u957f\u4e3a|EF|,|EF|=|Es[i]|+|Fs[i+1]|-|s[i]s[i+1]|,\u8fd9\u91cc|s[i]s[i+1]|\u5f88\u597d\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6c42|Es[i]|\uff0c|Fs[i+1]|\u3002\n\n\u6211\u4eec\u6c42\u51fa\u5411\u91cf|s[b]s[i]|\u548c|s[i+1]s[i]|\u7684\u70b9\u79ef\uff0c|s[b]s[i]| |s[i+1]s[i]|cosx\uff0c\u6ce8\u610f|s[b]s[i]|\u5c31\u662f\u76f4\u89d2\u4e09\u89d2\u5f62s[b]Es[i]\u7684\u659c\u8fb9\uff0c\u6240\u4ee5Es[i]=|s[b]s[i]|cosx,Es[i]=|s[b]s[i]| |s[i+1]s[i]|cosx/|s[i+1]s[i]|,\u5373\u4e3a\u70b9\u79ef/|s[i+1]s[i]|\u3002\n\n\u6c42|Fs[i+1]|\u540c\u7406\n\n\u63a5\u4e0b\u6765\u6c42\u56db\u4e2a\u70b9\uff0c\u5982\u56fe2\uff0c\u6c42F\u70b9\u5373\u4e3a\u70b9s[i+1]+\u5411\u91cf|s[i+1]s[i]|\\*(len(Fs[i+1])/len(|s[i+1]s[i]|))\u5373\u53ef\u3002\u5176\u5b83\u4e09\u4e2a\u70b9\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6c42\u51fa\u6765\u7684\u70b9\u9006\u65f6\u9488\u63a8\u8fc7\u53bb\u3002\n\n\u6700\u540e\uff0c\u7531\u4e8e\u5750\u6807\u53ef\u80fd\u51fa\u73b0-0\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u628a-0\u8f6c\u62100\n\nPS:\u6211\u4e0d\u4f1a\u63d2\u516c\u5f0f\uff0c\u535a\u5ba2\u4e0d\u7f8e\u89c2\u8bf7\u89c1\u8c05\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nconst double eps=1e-8;\nint n,top;\ndouble ox,oy;\nstruct node\n{\n    double x,y;\n    node(double x=0,double y=0):x(x),y(y){}\n    bool operator<(const node&o)const\n    {\n        double a=atan2(y-oy,x-ox),b=atan2(o.y-oy,o.x-ox);\n        if(fabs(a-b)<eps) return x<o.x;\n        return a<b;\n    }\n}a[N],s[N],q[N];\nnode operator-(node a,node b){return node(a.x-b.x,a.y-b.y);}\nnode operator+(node a,node b){return node(a.x+b.x,a.y+b.y);}\nnode operator*(node a,double b){return node(a.x*b,a.y*b);}\nnode operator/(node a,double b){return node(a.x/b,a.y/b);}\ndouble len(node a){return sqrt(a.x*a.x+a.y*a.y);}\ndouble cross(node a,node b){return a.x*b.y-a.y*b.x;}\ndouble dot(node a,node b){return a.x*b.x+a.y*b.y;}\nvoid solve1()\n{\n    int pos=1;\n    for(int i=2;i<=n;i++)\n        if(a[i].y<a[pos].y||a[i].y==a[pos].y&&a[i].x<a[pos].x)\n        pos=i;\n    ox=a[pos].x;oy=a[pos].y;\n    swap(a[1],a[pos]);\n    sort(a+2,a+1+n);\n    s[++top]=a[1];s[++top]=a[2];\n    for(int i=3;i<=n;i++)\n    {\n        while(top>=2&&cross(s[top]-s[top-1],a[i]-s[top-1])<=0) top--;\n        s[++top]=a[i];\n    }\n}\nvoid solve2()\n{\n    double ans=1e100;\n    for(int i=1;i<=top;i++) s[i+top]=s[i];\n    int a,b,c;a=b=c=2;\n    for(int i=1;i<=top+1;i++)\n    {\n        while(cross(s[a]-s[i+1],s[i]-s[i+1])<=cross(s[a+1]-s[i+1],s[i]-s[i+1])) a++;\n        while(dot(s[b]-s[i+1],s[i]-s[i+1])>=dot(s[b+1]-s[i+1],s[i]-s[i+1])) b++;\n        if(i==1) c=a;\n        while(dot(s[c]-s[i],s[i+1]-s[i])>=dot(s[c+1]-s[i],s[i+1]-s[i])) c++;\n        double dis=len(s[i]-s[i+1]);\n        double l=dot(s[b]-s[i],s[i+1]-s[i])/dis;\n        double r=dot(s[c]-s[i+1],s[i]-s[i+1])/dis;\n        double h=cross(s[i]-s[a],s[i+1]-s[a])/dis;\n        l=fabs(l);r=fabs(r);h=fabs(h);\n        double t=(l+r-dis)*h;\n        if(t<ans)\n        {\n            ans=t;\n            q[1]=s[i+1]-(s[i+1]-s[i])*(r/dis);\n            q[2]=q[1]-(s[i]-s[i+1])*((l+r-dis)/dis);\n            q[3]=q[2]+(s[b]-q[2])*(h/len(q[2]-s[b]));\n            q[4]=q[3]+(s[i]-s[i+1])*((l+r-dis)/dis);\n        }\n    }\n    printf(\"%.5f\\n\",ans);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%lf%lf\",&a[i].x,&a[i].y);\n    solve1();\n    solve2();\n    for(int i=1;i<=4;i++)\n    {\n        if(fabs(q[i].x)<eps) q[i].x=0;\n        if(fabs(q[i].y)<eps) q[i].y=0;\n    }\n    int pos=1;\n    for(int i=2;i<=4;i++)\n        if(q[i].y<q[pos].y||q[i].y==q[pos].y&&q[i].x<q[pos].x) pos=i;\n    printf(\"%.5f %.5f\\n\",q[pos].x,q[pos].y);\n    for(int i=0;i<3;i++)\n        printf(\"%.5f %.5f\\n\",q[(pos+i)%4+1].x,q[(pos+i)%4+1].y);\n}\n\n```\n",
        "postTime": 1567763608,
        "uid": 202208,
        "name": "Huah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3187 \u3010[HNOI2007]\u6700\u5c0f\u77e9\u5f62\u8986\u76d6\u3011"
    },
    {
        "content": "# \u524d\u7f6e\u77e5\u8bc6\n\u5728\u9605\u8bfb\u672c\u9898\u89e3\u524d\uff0c\u8bf7\u5148\u638c\u63e1\n- \u521d\u4e2d\u51e0\u4f55\u77e5\u8bc6\n- \u4e8c\u7ef4\u51f8\u5305\n- \u65cb\u8f6c\u5361(qia)\u58f3(ke)\n\n# \u601d\u8def\n\u8fd9\u9053\u9898\u8981\u6c42\u6c42\u80fd\u591f\u8986\u76d6\u6240\u6709\u70b9\u7684\u6700\u5c0f\u9762\u79ef\u7684\u77e9\u5f62\uff0c\u5bb9\u6613\u60f3\u5230\u5148\u6c42\u51fa\u51f8\u5305\uff0c\u7136\u540e\u6700\u5c0f\u77e9\u5f62\u7684\u8fb9\u4e00\u5b9a\u4e0e\u51f8\u5305\u7684\u67d0\u4e00\u8fb9\u91cd\u5408\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u679a\u4e3e\u51e0\u7ec4\u6570\u636e\uff0c\u53d1\u73b0\u7684\u786e\u662f\u8fd9\u6837\u7684\uff08\u8981\u4e0d\u7136\u4e5f\u6ca1\u6cd5\u505a\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hamr7vr3.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/se7ek3t2.png)\n\u90a3\u4e48\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c\u5361\u58f3\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u6c42\u51fa\u79bb\u4ed6\u6700\u8fdc\u7684\u70b9\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u65cb\u8f6c\u5361\u58f3\u7684\u65b9\u6cd5\uff0c\u5bf9\u5f53\u524d\u7684\u8fb9\u4f5c\u5782\uff0c\u7136\u540e\u901a\u8fc7\u53c9\u79ef\u6c42\u51fa\u4e09\u89d2\u5f62\u7684\u9762\u79ef\uff0c\u90a3\u4e48\u9762\u79ef\u6700\u5927\u7684\u5c31\u662f\u6700\u5de6\u6216\u6700\u53f3\u7684\u7aef\u70b9\u4e86\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5bf9\u67d0\u4e00\u6761\u8fb9\u4f5c\u5782\u5462\uff0c\u6211\u4eec\u4f7f\u7528\u7c7b\u4f3c\u4e09\u5782\u76f4\u6a21\u578b\u7684\u65b9\u6cd5\uff0c\u63a8\u4e00\u63a8\u516c\u5f0f\u5c31\u53ef\u4ee5\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/gpxvwoz9.png)\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u6c42\u6700\u5de6\u7684\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u8981\u5411\u53f3\u4f5c\u5782\uff0c\u4e0e\u53f3\u8fb9\u7684\u7aef\u70b9\u5f62\u6210\u4e09\u89d2\u5f62\u7684\u5e95\uff0c\u5de6\u4fa7\u540c\u7406\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5728\u77e9\u5f62\u56db\u6761\u8fb9\u4e0a\u7684\u56db\u4e2a\u70b9\u3002\n\n\u7136\u800c\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u6c42\u51fa\u77e9\u5f62\u7684\u9876\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u7684\u65b9\u6cd5\u6765\u6c42\u51fa\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a\n1. \u901a\u8fc7\u51f8\u5305\u8fb9\u4e0a\u7684\u4e24\u4e2a\u70b9\u6c42\u51fa\u77e9\u5f62\u4e00\u6761\u76f4\u7ebf\u7684\u8868\u8fbe\u5f0f $y=kx+b$ \n2. \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u77e5\u5176\u4ed6\u8fb9\u4e0a\u7684 $k$\uff08\u5e73\u884c\u7684\u4e24\u6761\u7ebf $k$ \u76f8\u7b49\uff0c\u5782\u76f4\u7684\u4e24\u6761\u7ebf $k$ \u7684\u4e58\u79ef\u4e3a $-1$\uff09\n3. \u6211\u4eec\u518d\u5c06\u5404\u8fb9\u4e0a\u7684\u8282\u70b9\u5e26\u5165\u8868\u8fbe\u5f0f\uff0c\u56e0\u4e3a\u5df2\u7ecf\u77e5\u9053\u4e86 $k$\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u89e3\u65b9\u7a0b\u5f97\u51fa\u7ed3\u679c\n4. \u6211\u4eec\u518d\u6c42\u51fa\u4e24\u4e24\u76f8\u90bb\u7684\u76f4\u7ebf\u7684\u4ea4\u70b9\u5373\u53ef\n5. \u77e9\u5f62\u7684\u9762\u79ef\u53ef\u4ee5\u76f4\u63a5\u7528\u53c9\u79ef\u6c42\u51fa\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u4e86\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u51fd\u6570\u4e3a $x=k$ \u6216 $y=k$ \u7684\u60c5\u51b5\u65f6\u9700\u8981\u7279\u5224\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u73b0 $nan$\u3002\n\n\u8fd8\u6709\u5c31\u662f\u8fd9\u9053\u9898\u975e\u5e38\u5361\u7cbe\u5ea6\uff0c\u56e0\u6b64\u6211\u4eec\u8fd0\u7b97\u8981\u52a0\u4e0a\u8fd9\u4e48\u4e00\u53e5\n`if(fabs(x)<1e-10)x=0;` \u7528\u6765\u5361\u7cbe\u5ea6\u3002\n# \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<stack>\nusing namespace std;\nint n;\nstruct node {\n\tdouble x,y;\n\tfriend bool operator <(node nx,node ny){//\u6309\u7167\u9898\u76ee\u8981\u6c42\u6bd4\u8f83\u4e24\u4e2a\u70b9\n\t\treturn (nx.y<ny.y||(nx.y==ny.y&&nx.x<ny.x));\n\t}\n} p[50005];\ndouble c(double x) {//\u5361\u7cbe\u5ea6 \n\tif(fabs(x)<1e-10)x=0;\n\treturn x;\n}\ndouble cj(node a1,node a2,node b1,node b2) {\n\treturn c((a2.x-a1.x)*(b2.y-b1.y)-(b2.x-b1.x)*(a2.y-a1.y));\n}\ndouble dis(node p1,node p2) {\n\treturn c((p2.x-p1.x)*(p2.x-p1.x)+(p2.y-p1.y)*(p2.y-p1.y));\n}\nbool cmp(node p1,node p2) {\n\tdouble tmp=cj(p[1],p1,p[1],p2);\n\tif(tmp==0) {\n\t\treturn dis(p[1],p1)<dis(p[1],p2);\n\t}\n\treturn tmp>0;\n}\nint cnt;\nnode s[50005];\nvoid gettb() {//\u51f8\u5305\u6a21\u677f \n\tsort(p+2,p+n+1,cmp);\n\ts[cnt]=p[1];\n\tfor(int i=2; i<=n; i++) {\n\t\twhile(cnt&&cj(s[cnt-1],s[cnt],s[cnt],p[i])<=0) {\n\t\t\tcnt--;\n\t\t}\n\t\ts[++cnt]=p[i];\n\t}\n\ts[++cnt]=p[1];\n}\nstruct line {\n\tdouble k,b;\n};\nline getline(double k,node a) {//\u5df2\u77e5k\u548c\u8fb9\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u6c42\u51fa\u8868\u8fbe\u5f0f \n\tline l;\n\tl.k=c(k);\n\tl.b=c(a.y-l.k*a.x);\n\treturn l;\n}\nnode getnode(line la,line lb) {//\u5df2\u77e5\u4e24\u6761\u76f4\u7ebf\uff0c\u6c42\u51fa\u5176\u4ea4\u70b9 \n\tnode nc;\n\tnc.x=c((lb.b-la.b)/(la.k-lb.k));\n\tnc.y=c(la.k*nc.x+la.b);\n\treturn nc;\n}\nnode getnode(double nx,double ny){\n\tnode na;\n\tna.x=nx,na.y=ny;\n\treturn na;\n}\nvoid getmx() {\n\tdouble ans=0x3f3f3f3f;\n\tnode n1,n2,n3,n4;\n\tint a1,a2,a3,a4;\n\tfor(int i=0,j=2,k=0,l=2; i<cnt; i++) {\n\t\twhile(fabs(cj(s[i],s[j],s[j],s[i+1]))<fabs(cj(s[i],s[j+1],s[j+1],s[i+1]))) {//\u65cb\u8f6c\u5361\u58f3 \n\t\t\tif(j==l)l=(l+1)%cnt;\n\t\t\tj=(j+1)%cnt;\n\t\t}\n\t\tnode ni=getnode(s[i].x+(s[i+1].y-s[i].y),s[i].y-(s[i+1].x-s[i].x));//\u6c42\u5782\u7ebf(s[i],ni)\n\t\twhile(fabs(cj(s[i],s[k],s[k],ni))<fabs(cj(s[i],s[k+1],s[k+1],ni))) {//\u6c42\u51fa\u5de6\u4fa7\u7684\u70b9 \n\t\t\tk=(k+1)%cnt;\n\t\t}\n\t\tni=getnode(s[i+1].x+(s[i].y-s[i+1].y),s[i+1].y-(s[i].x-s[i+1].x));//\u6c42\u5782\u7ebf(s[i+1],ni)\n\t\twhile(fabs(cj(s[i+1],s[l],s[l],ni))<fabs(cj(s[i+1],s[l+1],s[l+1],ni))) {//\u6c42\u51fa\u53f3\u4fa7\u7684\u70b9 \n\t\t\tl=(l+1)%cnt;\n\t\t}\n\t\tnode s1,s2,s3,s4;\n\t\tif(s[i].x==s[i+1].x) {//\u7279\u5224 x=k\u6216y=k\u7684\u60c5\u51b5 \n\t\t\ts1=getnode(s[i].x,s[k].y);\n\t\t\ts2=getnode(s[j].x,s[k].y);\n\t\t\ts3=getnode(s[j].x,s[l].y);\n\t\t\ts4=getnode(s[i].x,s[l].y);\n\t\t} else if(s[i].y==s[i+1].y) {\n\t\t\ts1=getnode(s[k].x,s[i].y);\n\t\t\ts2=getnode(s[k].x,s[j].y);\n\t\t\ts3=getnode(s[l].x,s[j].y);\n\t\t\ts4=getnode(s[l].x,s[i].y);\n\t\t} else {//\u6b63\u5e38\u60c5\u51b5 \n\t\t\tline la=getline((s[i].y-s[i+1].y)/(s[i].x-s[i+1].x),s[i]);//\u5df2\u77e5\u4e24\u70b9\u6c42\u4e00\u6761\u7ebf \n\t\t\tline lb=getline(-1.0/la.k,s[k]);//\u5df2\u77e5k\u548c\u8fb9\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u6c42\u51fa\u4e00\u6761\u7ebf \n\t\t\tline lc=getline(la.k,s[j]);\n\t\t\tline ld=getline(-1.0/la.k,s[l]);\n\t\t\ts1=getnode(la,lb),s2=getnode(lb,lc),s3=getnode(lc,ld),s4=getnode(ld,la);//\u6c42\u51fa\u9876\u70b9 \n\t\t}\n\t\tif(fabs(cj(s1,s2,s2,s3))<ans) {//\u6c42\u51fa\u9762\u79ef \n\t\t\tans=fabs(cj(s1,s2,s2,s3));\n\t\t\tn1=s1,n2=s2,n3=s3,n4=s4;\n\t\t\ta1=i,a2=j,a3=k,a4=l;\n\t\t}\n//\t\tprintf(\"%.5lf %.5lf\\n\",s[i].x,s[i].y);\n//\t\tprintf(\"%.5lf %.5lf\\n\",s[j].x,s[j].y);\n//\t\tprintf(\"%.5lf %.5lf\\n\",s[k].x,s[k].y);\n//\t\tprintf(\"%.5lf %.5lf\\n\",s[l].x,s[l].y);\n//\t\tprintf(\"%.5lf %.5lf\\n\",la.k,la.b);\n//\t\tprintf(\"%.5lf %.5lf\\n\",lb.k,lb.b);\n//\t\tprintf(\"%.5lf %.5lf\\n\",lc.k,lc.b);\n//\t\tprintf(\"%.5lf %.5lf\\n\",ld.k,ld.b);\n//\t\tprintf(\"%.5lf %.5lf\\n\",s1.x,s1.y);\n//\t\tprintf(\"%.5lf %.5lf\\n\",s2.x,s2.y);\n//\t\tprintf(\"%.5lf %.5lf\\n\",s3.x,s3.y);\n//\t\tprintf(\"%.5lf %.5lf\\n\",s4.x,s4.y);\n//\t\tprintf(\"\\n\");\n\t}\n\tprintf(\"%.5lf\\n\",ans);\n\twhile(n2<n1||n3<n1||n4<n1) {//\u8f93\u51fa\u987a\u5e8f \n\t\tswap(n1,n2),swap(n2,n3),swap(n3,n4);\n\t}\n\tprintf(\"%.5lf %.5lf\\n\",n1.x,n1.y);\n\tprintf(\"%.5lf %.5lf\\n\",n2.x,n2.y);\n\tprintf(\"%.5lf %.5lf\\n\",n3.x,n3.y);\n\tprintf(\"%.5lf %.5lf\\n\",n4.x,n4.y);\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++) {//\u6392\u5e8f \n\t\tscanf(\"%lf%lf\",&p[i].x,&p[i].y);\n\t\tif(p[i]<p[1])swap(p[1],p[i]);\n\t}\n\tgettb(),getmx();\n\treturn 0;\n}\n/*\n8\n0.1 0\n0.9 0\n1 0.1\n1 0.9\n0.9 1\n0.1 1\n0 0.9\n0 0.1\n*/\n```",
        "postTime": 1614948765,
        "uid": 171700,
        "name": "gzlmr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3187 \u3010[HNOI2007]\u6700\u5c0f\u77e9\u5f62\u8986\u76d6\u3011"
    },
    {
        "content": "\u9996\u5148\u6c42\u51fa\u51f8\u58f3\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u6c42\u51fa\u4ee5\u8fd9\u6761\u8fb9\u4e3a\u57fa\u51c6\uff0c\u6700\u4e0a\uff0c\u6700\u5de6\u548c\u6700\u53f3\u7684\u70b9\n\n\u6700\u4e0a\u9762\u7684\u70b9\u662f\u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\u6027\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488 $O(n)$ \u6c42\u51fa\uff0c\u4f46\u662f\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u6307\u9488\u4f3c\u4e4e\u5e76\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u4e8e\u662f\u53ea\u80fd\u6bcf\u6b21\u90fd\u67e5\u627e\u4e00\u904d\n\n\u6309\u7406\u6765\u8bf4\u8981\u8fbe\u5230\u6b63\u786e\u7684\u590d\u6742\u5ea6 $O(nlogn)$\uff0c\u6c42\u5de6\u53f3\u7684\u70b9\u5e94\u8be5\u5f97\u7528\u4e09\u5206\uff0c\u4f46\u662f\u6211\u5077\u61d2\u8bd5\u4e86\u4e0b\u76f4\u63a5\u66b4\u529b\u6c42\u7adf\u7136\u76f4\u63a5\u5c31\u8fc7\u4e86\u3002\u3002\u3002\u800c\u4e14\u82b1\u7684\u65f6\u95f4\u4e5f\u4e0d\u957f\u3002\u3002\u3002\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u603b\u590d\u6742\u5ea6 $O(n^{2})$\uff0c\u4f46\u662f\u5728\u6ca1\u6709\u7ecf\u8fc7\u7279\u6b8a\u6784\u9020\u7684\u6570\u636e\u4e0b\u4f3c\u4e4e\u5e38\u6570\u6781\u5c0f\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\ntypedef struct vec{\n    double x,y;\n    vec() {}\n    vec(double _x,double _y):x(_x),y(_y) {}\n    vec operator + (vec a) {return vec(x+a.x,y+a.y);}\n    vec operator - (vec a) {return vec(x-a.x,y-a.y);}\n    vec operator * (double a) {return vec(x*a,y*a);}//\u4e58\u4e00\u4e2a\u5e38\u6570\n    double operator * (vec a) {return x*a.y-y*a.x;}//\u53c9\u79ef\n    double operator ^ (vec a) {return x*a.x+y*a.y;}//\u70b9\u79ef\n}vec;\n\nconst double eps=1e-8,Pi=acos(-1);\nvec p[50010],rec[5];\ndouble mina=1e20;\nint n,s[50010],siz,downtag;\n\nbool cmp(vec a,vec b) {return (fabs(a.x-b.x)<eps)?a.y<b.y:a.x<b.x;}\n\ndouble length (vec a) {return sqrt(a.x*a.x+a.y*a.y);}\n\nvec rotate(vec a,double theta) {return vec(a.x*cos(theta)-a.y*sin(theta),a.x*sin(theta)+a.y*cos(theta));}\n\nvoid print(vec a) {printf(\"%.5f %.5f\\n\",(fabs(a.x)<eps?0.00000:a.x),(fabs(a.y)<eps?0.00000:a.y));}\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n    sort(p+1,p+1+n,cmp);\n    s[++siz]=1; s[++siz]=2;\n    for(int i=3;i<=n;i++){\n        while(siz>=2 && ((p[s[siz]]-p[s[siz-1]])*(p[i]-p[s[siz]])<0 || fabs((p[s[siz]]-p[s[siz-1]])*(p[i]-p[s[siz]]))<eps)) siz--;\n        s[++siz]=i;\n    }\n    downtag=siz; s[++siz]=n-1;\n    for(int i=n-2;i>=1;i--){\n        while(siz-downtag>=1 && ((p[s[siz]]-p[s[siz-1]])*(p[i]-p[s[siz]])<0 || fabs((p[s[siz]]-p[s[siz-1]])*(p[i]-p[s[siz]]))<eps)) siz--;\n        s[++siz]=i;\n    }\n    s[0]=s[siz-1]; //\u6309\u7167\u6211\u7684\u5199\u6cd5\uff0c1~siz-1\u624d\u662f\u771f\u6b63\u51f8\u58f3\u4e0a\u7684\u70b9\uff0c0\u548csiz\u662f\u7528\u6765\u9632\u6b62\u8d8a\u754c\u7684\n    for(int i=1,k=2,l,r;i<siz;i++){\n        while(((p[s[i]]-p[s[k]])*(p[s[i+1]]-p[s[k]]))<((p[s[i]]-p[s[k+1]])*(p[s[i+1]]-p[s[k+1]]))) k=(k==siz-1)?1:k+1;\n        r=(i+1==siz)?1:i+1; l=i; //\u91cd\u7f6el,r\u6307\u9488\uff0c\u7b49\u4e0b\u66b4\u529b\u5411\u4e24\u8fb9\u67e5\u627e\n        while(((p[s[i+1]]-p[s[i]])^(p[s[r]]-p[s[i]]))<((p[s[i+1]]-p[s[i]])^(p[s[r+1]]-p[s[i]]))) r=(r==siz-1)?1:r+1;\n        while(((p[s[i]]-p[s[i+1]])^(p[s[l]]-p[s[i+1]]))<((p[s[i]]-p[s[i+1]])^(p[s[l-1]]-p[s[i+1]]))) l=(l==1)?siz-1:l-1;\n        double l1=length(p[s[i+1]]-p[s[i]]),l2=((p[s[i+1]]-p[s[i]])^(p[s[r]]-p[s[i+1]]))/l1,l3=((p[s[i]]-p[s[i+1]])^(p[s[l]]-p[s[i]]))/l1,l4=(p[s[i+1]]-p[s[i]])*(p[s[k]]-p[s[i]])/l1;\n        if((l1+l2+l3)*l4<mina){\n            mina=(l1+l2+l3)*l4;\n            rec[1]=p[s[i+1]]+(p[s[i]]-p[s[i+1]])*(l3/l1+1); rec[2]=p[s[i]]+(p[s[i+1]]-p[s[i]])*(l2/l1+1);\n            rec[3]=rec[2]+rotate(p[s[i+1]]-p[s[i]],Pi/2)*(l4/l1); rec[4]=rec[1]+rotate(p[s[i+1]]-p[s[i]],Pi/2)*(l4/l1);\n        }\n    }\n    printf(\"%.5f\\n\",mina);\n    int s=1;\n    for(int i=2;i<=4;i++) if((rec[i].y<rec[s].y) || (fabs(rec[i].y-rec[s].y)<eps && rec[i].x<rec[s].x)) s=i;\n    //\u627e\u5230\u5de6\u4e0b\u89d2\u7684\u70b9\n    for(int i=1;i<=4;i++) {print(rec[s]); s=(s==4)?1:s+1;}\n    return 0;\n}\n```",
        "postTime": 1554200787,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3187 \u3010[HNOI2007]\u6700\u5c0f\u77e9\u5f62\u8986\u76d6\u3011"
    },
    {
        "content": "### problem\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\u7684\u5750\u6807\uff0c\u6c42\u80fd\u591f\u8986\u76d6\u6240\u6709\u70b9\u7684\u6700\u5c0f\u9762\u79ef\u7684\u77e9\u5f62\uff0c\u8f93\u51fa\u6240\u6c42\u77e9\u5f62\u7684\u9762\u79ef\u548c\u56db\u4e2a\u9876\u70b9\u5750\u6807\u3002\n\n### solution\n\n\u611f\u6027\u7406\u89e3\u53ef\u77e5\u6700\u5c0f\u8986\u76d6\u77e9\u5f62\u7684\u4e00\u6761\u8fb9\u80af\u5b9a\u4e0e\u51f8\u5305\u7684\u4e00\u6761\u8fb9\u91cd\u5408\u3002\u5f88\u660e\u663e\u662f\u5148\u8dd1\u51fa\u51f8\u5305\u7136\u540e\u65cb\u8f6c\u5361\u58f3\u7ef4\u62a4\u6bcf\u4e2a\u5411\u91cf\u6700\u4e0a\u3001\u6700\u5de6\u3001\u6700\u53f3\u7684\u70b9\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4f46\u662f\u7ef4\u62a4\u7684\u8fc7\u7a0b\u5f88\u7e41\u7410\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/clom0o7v.png)\n\n\u5047\u8bbe\u6bcf\u4e2a\u70b9\u6700\u4e0a\u3001\u6700\u5de6\u3001\u6700\u53f3\u7684\u70b9\u6307\u9488\u5206\u522b\u4e3a $a,b,c$\uff0c$\\theta$ \u8868\u793a\u4e24\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u5927\u5c0f\uff0c\u7528 $\\vec{x} \\cdot \\vec{y}$ \u8868\u793a\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\uff0c\u5373 $\\vec{x} \\cdot \\vec{y} = \\left| \\vec{x} \\right| \\left| \\vec{y} \\right|  \\cos \\theta$\uff0c\u7528 $\\vec{x} \\cdot \\vec{y}$ \u8868\u793a\u4e24\u4e2a\u5411\u91cf\u7684\u53c9\u79ef\uff0c\u5373 $\\vec{x} \\times \\vec{y} = \\left| \\vec{x} \\right|  \\left| \\vec{y} \\right|  \\sin \\theta$\n\n- \u5bf9\u4e8e\u67d0\u4e2a\u5411\u91cf\u7684\u6700\u4e0a\u7684\u70b9\uff0c\u5c31\u50cf\u65cb\u8f6c\u5361\u58f3\u7684\u677f\u5b50\u90a3\u6837\u7528**\u53c9\u79ef**\u5224\u65ad\u3002\n\n\u56e0\u4e3a\u4e24\u4e2a\u5411\u91cf\u7684\u53c9\u79ef\u80fd\u591f\u7528\u6765\u8ba1\u7b97\u4ee5\u5176\u4e3a\u90bb\u8fb9\u7684\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u9762\u79ef\u3002\n\n\u5982\u6bd4\u8f83\u4e0a\u56fe\u4e2d $\\overrightarrow{DE} \\times \\overrightarrow{AE}$ \u4e0e $\\overrightarrow{DE} \\times \\overrightarrow{BE}$ \u7684\u5927\u5c0f\uff0c\u5373\u53ef\u77e5\u5bf9\u4e8e\u5411\u91cf $\\overrightarrow{DE}$\uff0c\u70b9 $B$ \u76f8\u5bf9\u4e8e\u70b9 $A$ \u66f4\u4e0a\uff0c\u6240\u4ee5\u6b64\u65f6\u6307\u9488\u66f4\u65b0\u5230 $B$\u3002\n\n- \u5bf9\u4e8e\u67d0\u4e2a\u5411\u91cf\u7684\u6700\u5de6\u548c\u6700\u53f3\u7684\u70b9\uff0c\u5219\u8981\u7528**\u70b9\u79ef**\u5224\u65ad\u3002\n\n\u56e0\u4e3a\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\u80fd\u591f\u7528\u4e8e\u8ba1\u7b97\u5411\u91cf\u7aef\u70b9\u7684 $x$ \u8f74\u4e0a\u7684\u8ddd\u79bb\u3002\n\n\u6bd4\u5982\u56fe\u4e2d\u7684 $\\overrightarrow{DE} \\cdot \\overrightarrow{AE}$\uff0c\u5176\u503c\u4e3a $\\left| \\overrightarrow{DE} \\right| \\left| \\overrightarrow{HE} \\right|$\uff0c\u800c $\\left| \\overrightarrow{HE} \\right|$ \u6b63\u597d\u662f\u5f53\u524d\u5411\u91cf\u5230\u70b9 $A$ \u7684 $x$ \u8f74\u4e0a\u7684\u8ddd\u79bb\u3002\n\n\u518d\u6bd4\u5982\u56fe\u4e2d\u7684 $\\overrightarrow{ED} \\cdot \\overrightarrow{CD}$\uff0c\u5176\u503c\u4e3a $\\left| \\overrightarrow{ED} \\right| \\left| \\overrightarrow{DG} \\right|$\uff0c\u800c $\\left| \\overrightarrow{DG} \\right|$ \u6b63\u597d\u662f\u5f53\u524d\u5411\u91cf\u5230\u70b9 $C$ \u7684 $x$ \u8f74\u4e0a\u7684\u8ddd\u79bb\u3002\n\n\u8981\u6ce8\u610f\u8fd9\u91cc\u6c42\u51fa\u6765\u7684\u70b9\u79ef\u8981\u9664\u4ee5\u5f53\u524d\u5411\u91cf\u7684\u957f\u5ea6\u3002\n\n- \u77e9\u5f62\u7684\u9762\u79ef\u53ef\u4ee5\u7528\u4e4b\u524d\u5728\u65cb\u8f6c\u5361\u58f3\u65f6\u7684\u6570\u636e\u6c42\u51fa\u3002\n\n\u4ee5\u56fe\u4e2d\u60c5\u5f62\u4e3a\u4f8b\u3002\n\n\u77e9\u5f62\u7684\u957f\u5c31\u662f $\\dfrac{\\overrightarrow{DE} \\cdot \\overrightarrow{AE} + \\overrightarrow{ED} \\cdot \\overrightarrow{CD}}{\\left| \\overrightarrow{ED} \\right| } + \\left| \\overrightarrow{ED} \\right|$\u3002\n\n\u77e9\u5f62\u7684\u9ad8\u5c31\u662f $\\dfrac{\\overrightarrow{DE} \\times \\overrightarrow{BE}}{\\left| \\overrightarrow{ED} \\right|} $\u3002\n\n- \u7136\u540e\u662f\u5982\u4f55\u6c42\u77e9\u5f62\u56db\u4e2a\u70b9\u7684\u5750\u6807\u3002\n\n\u6bd4\u5982\u6c42\u56fe\u4e2d\u7684 $G$ \u70b9\u5750\u6807\uff0c\u5176\u5b9e\u5c31\u662f\u70b9 $D$ \u7684\u5750\u6807\u52a0\u4e0a\u5411\u91cf $\\overrightarrow{DG}$\uff0c\u5177\u4f53\u5982\u4f55\u6c42 $\\overrightarrow{DG}$ \u53ef\u4ee5\u770b\u524d\u9762\u3002\n\n\u6700\u540e\u5c31\u662f\u7cbe\u5ea6\u95ee\u9898\uff0c\u6b64\u9898\u6ca1\u6709 SPJ\uff0c\u4e3a\u4e86\u9632\u6b62\u8f93\u51fa -0.00000\uff0c\u5f97\u7279\u5224\u4e00\u4e0b\u3002\n\n### code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e5;const double eps=1e-8;\nstruct d{double x,y;d(double a=0,double b=0):x(a),y(b){}}p[N],s[N],q[N];\nint n,tp,id;typedef d vec;double k1,k2;\nvec operator+(vec a,vec b){return vec(a.x+b.x,a.y+b.y);}vec operator-(d a,d b){return vec(a.x-b.x,a.y-b.y);}\nvec operator*(vec a,double p){return vec(a.x*p,a.y*p);}vec operator/(vec a,double p){return vec(a.x/p,a.y/p);}\ndouble dis(d a){return sqrt(a.x*a.x+a.y*a.y);}void kj(int a){if(fabs(s[a].x)<=eps)s[a].x=0;if(fabs(s[a].y)<=eps)s[a].y=0;}\ndouble cj(d a,d b){return a.x*b.y-a.y*b.x;}double dj(d a,d b){return a.x*b.x+a.y*b.y;}\nbool cmp(d a,d b){k1=atan2((a.y-p[1].y),(a.x-p[1].x));k2=atan2((b.y-p[1].y),(b.x-p[1].x));if(k1==k2)return a.x<b.x;return k1<k2;}\nvoid xzqq(){\n    double ans=1e114,l,r,h,e,len;int a=2,b=2,c=2;\n    for(int i=1;i<=tp;i++)s[i+tp]=s[i];\n    for(int i=2;i<=tp+1;i++){\n\twhile(cj(s[a]-s[i],s[i-1]-s[i])<=cj(s[a+1]-s[i],s[i-1]-s[i]))a++;\n\twhile(dj(s[b]-s[i],s[i-1]-s[i])>=dj(s[b+1]-s[i],s[i-1]-s[i]))b++;\n\tif(i==2) c=a;while(dj(s[c]-s[i-1],s[i]-s[i-1])>=dj(s[c+1]-s[i-1],s[i]-s[i-1]))c++;\n\tlen=dis(s[i]-s[i-1]);l=dj(s[c]-s[i],s[i-1]-s[i])/len;r=dj(s[b]-s[i-1],s[i]-s[i-1])/len;\n\th=cj(s[i]-s[i-1],s[i]-s[a])/len;l=fabs(l);r=fabs(r);h=fabs(h);e=(l+r-len)*h;\n\tif(e<ans){\n\t    ans=e;q[1]=s[i]-(s[i]-s[i-1])*(l/len);q[2]=q[1]+(s[i]-s[i-1])*((r+l-len)/len);\n            q[3]=q[2]+(s[b]-q[2])*(h/dis(s[b]-q[2]));q[4]=q[3]+(s[i-1]-s[i])*((r+l-len)/len); \n\t}\n    }printf(\"%.5lf\\n\",ans);\n}int main(){\n    cin>>n;for(int i=1;i<=n;i++){\n\tscanf(\"%lf%lf\",&p[i].x,&p[i].y);if(i==1)continue;\n\tif(p[i].y<p[1].y||(p[i].y==p[1].y&&fabs(p[i].x)<fabs(p[1].x)))swap(p[1],p[i]);\n    }sort(p+2,p+1+n,cmp);s[tp=1]=p[1];\n    for(int i=2;i<=n;i++){while(tp>1&&cj(s[tp]-s[tp-1],p[i]-s[tp])<=0)tp--;s[++tp]=p[i];}xzqq();\n    q[0].y=1e9;for(int i=1;i<=4;i++)if(q[i].y<q[id].y||(q[i].y==q[id].y&&q[i].x<q[id].x))id=i;\n    for(int i=1;i<=4;i++)kj(i);printf(\"%.5lf %.5lf\\n\",q[id].x+eps,q[id].y+eps);    \n    for(int i=0;i<3;i++)printf(\"%.5lf %.5lf\\n\",q[(i+id)%4+1].x+eps,q[(i+id)%4+1].y+eps);return 0;\n}\n```",
        "postTime": 1647513666,
        "uid": 540715,
        "name": "A_I_Skeleton",
        "ccfLevel": 0,
        "title": "P3187"
    },
    {
        "content": "\u505a\u5b8c\u8fd9\u9053\u9898\u6211\u5fc3\u60c5\u5341\u5206\u590d\u6742\uff0c\u601d\u8def\u4ec0\u4e48\u7684\u4e0d\u662f\u5f88\u60f3\u591a\u8bf4\uff0c\u51f8\u5305+\u65cb\u8f6c\u5361\u58f3\uff0c\u4f1a\u4e86\u5c31\u80fd\u505a\uff0c\u4ee3\u7801\u5b9e\u73b0\u96be\u5ea6\u5f88\u9ad8\uff0c\u975e\u5e38\u9ebb\u70e6\u7ec6\u8282\u975e\u5e38\u591a\uff0c\u4e4b\u524d\u7684\u90a3\u7bc7\u9898\u89e3\u4e5f\u5df2\u7ecf\u8bf4\u8fc7\u4e86\u3002\u81f3\u4e8e\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\uff0c\u53c9\u79ef\u6c42\u51fa\u6765\u51f8\u5305\u4e0a\u90a3\u6761\u8fb9\u7136\u540e\u70b9\u79ef\u6c42\u51fa\u5269\u4e0b\u4e24\u6761\u4e34\u8fb9\u5c31\u597d\u4e86\u3002\u7136\u540e\u8bf4\u4e00\u4e0b\u8fd9\u4e2a\u9898\u6700\u6076\u5fc3\u7684\u5730\u65b9\u3002\n\n\u8fd9\u4e2a\u9898\u5bf9\u7cbe\u5ea6\u7684\u8981\u6c42\u4e0d\u77e5\u4e3a\u4f55\u6781\u5176\u4e25\u683c\u3002\u3002\u5c24\u5176\u662f\u6700\u540e\u7684\u8f93\u51fa\u90e8\u5206\uff0c\u5728\u6211\u4eec\u8981\u8f93\u51fa0\u7684\u65f6\u5019\uff0c\u5f88\u6709\u53ef\u80fd\u7ed9\u4f60\u8f93\u51fa\u4e00\u4e2a-0.00000\u51fa\u6765\uff0c\u53ef\u4ee5\u7279\u5224\u4e00\u4e0b\uff0c\u5f53\u8981\u8f93\u51fa\u7684\u6570<1e-12\u65f6\uff0c\u624b\u52a8\u8f93\u51fa0.00000\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#define ll long long\n#define inf 50000000\n#define re register\n#define MAXN 50005\n#define eps 1e-8\nusing namespace std;\ndouble ans=1e60;\nint n,top;\nstruct P{\n    double x,y;\n    P(){}\n    P(double _x,double _y):x(_x),y(_y){}\n    friend bool operator<(P a,P b){\n        return fabs(a.y-b.y)<eps?a.x<b.x:a.y<b.y;\n    }\n    friend bool operator==(P a,P b){\n        return fabs(a.x-b.x)<eps&&fabs(a.y<b.y)<eps;\n    }\n    friend bool operator!=(P a,P b){\n        return !(a==b);\n    }\n    friend P operator+(P a,P b){\n        return P(a.x+b.x,a.y+b.y);\n    }\n    friend P operator-(P a,P b){\n        return P(a.x-b.x,a.y-b.y);\n    }\n    friend double operator *(P a,P b){\n        return a.x*b.y-a.y*b.x;\n    }\n    friend P operator *(P a,double b){\n        return P(a.x*b,a.y*b);\n    }\n    friend double operator /(P a,P b){\n        return a.x*b.x+a.y*b.y;\n    }\n    friend double dis(P a){\n        return sqrt(a.x*a.x+a.y*a.y);\n    }\n};\nP p[MAXN],q[MAXN],t[5];\ninline bool cmp(P a,P b)\n{\n    double k=(a-p[1])*(b-p[1]);\n    if(fabs(k)<eps) return dis(p[1]-a)-dis(p[1]-b)<0;\n    return k>0;\n}\ninline void Graham()\n{\n    for(re int i=2;i<=n;i++)\n        if(p[i]<p[1]) swap(p[i],p[1]);\n    sort(p+2,p+n+1,cmp);\n    q[++top]=p[1];\n    for(re int i=2;i<=n;i++){\n        while(top>1&&(q[top]-q[top-1])*(p[i]-q[top])<eps) top--;\n        q[++top]=p[i];\n    }\n    q[0]=q[top];\n}\ninline void solve()\n{\n    int l=1,r=1,p=1;\n    double L,R,D,H;\n    for(re int i=0;i<top;i++){\n        D=dis(q[i]-q[i+1]);\n        while((q[i+1]-q[i])*(q[p+1]-q[i])-(q[i+1]-q[i])*(q[p]-q[i])>-eps) p=(p+1)%top;\n        while((q[i+1]-q[i])/(q[r+1]-q[i])-(q[i+1]-q[i])/(q[r]-q[i])>-eps) r=(r+1)%top;\n        if(i==0) l=r;\n        while((q[i+1]-q[i])/(q[l+1]-q[i])-(q[i+1]-q[i])/(q[l]-q[i])<eps) \n\t\tl=(l+1)%top;\n        L=(q[i+1]-q[i])/(q[l]-q[i])/D;\n        R=(q[i+1]-q[i])/(q[r]-q[i])/D;\n        H=(q[i+1]-q[i])*(q[p]-q[i])/D;\n        if(H<0) H=-H;\n        double tmp=(R-L)*H;\n        if(tmp<ans)\n        {\n            ans=tmp;\n            t[0]=q[i]+(q[i+1]-q[i])*(R/D);\n            t[1]=t[0]+(q[r]-t[0])*(H/dis(t[0]-q[r]));\n            t[2]=t[1]-(t[0]-q[i])*((R-L)/dis(q[i]-t[0]));\n            t[3]=t[2]-(t[1]-t[0]);\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    for(re int i=1;i<=n;i++)\n        scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n    Graham();\n    solve();\n    printf(\"%.5lf\\n\" ,ans);\n    int fir=0;\n    for(re int i=1;i<=3;i++)\n        if(t[i]<t[fir])\n            fir=i;\n    for(re int i=0;i<=3;i++)\n        printf(\"%.5lf %.5lf\\n\",fabs(t[(i+fir)%4].x)>1e-12?t[(i+fir)%4].x:0.00000,fabs(t[(i+fir)%4].y)>1e-12?t[(i+fir)%4].y:0.00000);\n    return 0;\n}\n```",
        "postTime": 1524652368,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3187 \u3010[HNOI2007]\u6700\u5c0f\u77e9\u5f62\u8986\u76d6\u3011"
    }
]