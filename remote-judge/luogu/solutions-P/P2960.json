[
    {
        "content": "\u9996\u5148\u8fd9\u9053\u9898\u662f\u4e00\u9053\u7ecf\u5178\u7684BFS\u3002\u975e\u5e38\u9002\u5408\u521a\u521a\u5b66\u4e60\u6df1\u641c\u7684\u540c\u5b66\u3002\n\n\u73b0\u5728\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u3002\u9996\u5148\uff0c\u6bcf\u5468\u662f\u516b\u4e2a\u65b9\u5411\u3002\u5c31\u662f\u4e00\u5708\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5165\u4fb5\u7684\u8303\u56f4\u5173\u4e8e\u65f6\u95f4\u662f\u6210\u8f90\u5c04\u578b\u6269\u6563\u3002\u8ba9\u6c42\u6700\u5927\u65f6\u95f4\u3002\n\n\u4e5f\u5c31\u662f\u5b8c\u7f8e\u7684BFS\u3002\u7b97\u51fa\u6765\u4e4b\u540e\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u7528\u65f6\u5c31\u597d\u3002\n\n\u4e0d\u8fc7\u8bf4\u4e00\u53e5\u3002\u8fd9\u4e2a\u6570\u533a\u8303\u56f4\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u4f1astl\u7684\u4eba\u6765\u8bf4\u53ef\u4ee5\u76f4\u63a5\u624b\u5199\u961f\u5217\u3002\n\n\u597d\u4e86\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;//\u5934\u6587\u4ef6\u4e0d\u8bf4\nint dx[8]={0,1,0,-1,1,1,-1,-1};\nint dy[8]={1,0,-1,0,1,-1,1,-1};//\u5b9a\u4e49\u516b\u4e2a\u65b9\u5411\nint dis[102][102];//\u50a8\u5b58\u6240\u9700\u8981\u7684\u65f6\u95f4\nint n,m;int ans;//ans\u662f\u9700\u8981\u7ef4\u62a4\u7684\u6700\u5927\u503c\u3002\nint head=1;int tail=1;//\u5b9a\u4e49\u961f\u5217\u3002\u6ce8\u610f\u961f\u5934\u961f\u5c3e\u662f1\uff01\uff1b\nbool book[102][102];//\u56fe\nint q[10002][2];//\u624b\u5199\u961f\u5217\uff0c\u7b2c\u4e8c\u7ef4\u4e00\u4e2a\u662f\u6a2a\u5750\u6807\uff0c\u4e00\u4e2a\u662f\u7eb5\u5750\u6807\nint mx;int my;//\u521d\u59cb\u4f4d\u7f6e\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&mx,&my);//\u8f93\u5165\u5e76\u4e14\u5904\u7406\n    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            char now;\n            cin>>now;\n            if(now=='.') book[i][j]=true;\n            else book[i][j]=false;\n        }\n    }//\u6ce8\u610f\u6211\u7684\u5efa\u56fe\u987a\u5e8f\n/*    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            printf(\"%d \",book[i][j]);\n        }\n        printf(\"\\n\");\n    }\n*///\u6d4b\u8bd5\u70b9\n    q[1][0]=m-my+1;//\u628a\u8d77\u59cb\u70b9\u538b\u8fdb\u961f\u5217\n    q[1][1]=mx;\n    dis[my][m-my+1]=0;//\u521d\u59cb\u5316\n    while(head<=tail)//\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u961f\u5217\n    {\n        int now_x=q[head][0];\n        int now_y=q[head][1];\n        int tx,ty;\n        head++;//\u53d6\u51fa\u961f\u5934\u6a2a\u7eb5\u5750\u6807\n        for(int i=0;i<8;i++)//\u516b\u4e2a\u65b9\u5411\n        {\n            tx=now_x+dx[i];ty=now_y+dy[i];\n            if(book[tx][ty]==true&&!dis[tx][ty])\n            /*\n            \u8fd9\u91cc\u6709\u4e2a\u5c0f\u4f18\u5316\u3002\u5c31\u662f\u5224\u65ad\u80fd\u4e0d\u80fd\u8d70\u4e4b\u540e\u3002\u5982\u679c\u641c\u8fc7\u4e86\uff08dis[tx][ty]\uff01=0\uff09\u5c31\u53ef\u4ee5\u4e0d\u641c\u4e86\u3002\u56e0\u4e3a\u4e00\u5b9a\u4f1a\u91cd\uff0c\u76f4\u63a5\u8df3\u8fc7\u3002\n            */\n            {\n                dis[tx][ty]=dis[now_x][now_y]+1;\n                q[++tail][0]=tx;\n                q[tail][1]=ty;//\u5224\u65ad\uff0c\u66f4\u65b0\uff0c\u5165\u961f\n            }\n        }\n    }\n/*    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            printf(\"%d \",dis[i][j]);\n        }\n        printf(\"\\n\");\n    }*///\u6d4b\u8bd5\u6570\u636e\n    \n        for(int i=1;i<=m;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                ans=max(ans,dis[i][j]);\n            }\n        }//\u627e\u6700\u5927\u503c\n        printf(\"%d\",ans);//\u8f93\u51fa\n    return 0;//\u7a0b\u5e8f\u62dc\u62dc\n}\n```\n\u5b9e\u9645\u4e0a\u6211\u6700\u540e67\u884c\u5f00\u59cb\u53ef\u4ee5\u6709\u4e00\u4e2a\u4f18\u5316\u3002\u5c31\u662f\u5728\u66f4\u65b0\u7684\u65f6\u5019\u5c31\u8fdeans\u4e00\u8d77\u7ef4\u62a4\u4e86\u3002\u5c31\u50cf\u8fd9\u6837\n\n```cpp\n//54\u884c\u5f00\u59cb\n    if(book[tx][ty]==true&&!dis[tx][ty])\n            {\n                dis[tx][ty]=dis[now_x][now_y]+1;\n                ans=max(ans,dis[tx][ty]);\n                q[++tail][0]=tx;\n                q[tail][1]=ty;\n            }\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n```",
        "postTime": 1513154057,
        "uid": 57699,
        "name": "Arcturus1350",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Milkweed\u7684\u5165\u4fb5Invasion of the Milkweed\u3011"
    },
    {
        "content": "**\u9996\u5148**\n\n\u6211\u7b2c\u4e00\u773c\u770b\u8fd9\u4e2a\u9898\uff0c\u5c31\u89c9\u5f97\u7528\u5e7f\u641c\uff0c\u4f46\u662f\u5e7f\u641c\u8981\u4f7f\u7528\u961f\u5217\uff0c\u6240\u4ee5\u6211\u5148\u7b80\u5355\u6559\u5927\u5bb6\u4e00\u4e0b\u961f\u5217\u7684\u7528\u6cd5\n\n#### \u961f\u5217\n\n\u961f\u5217\uff08queue\uff09 \u662f\u4e00\u79cd\u7ebf\u6027\u7684\u6570\u636e\u7ed3\u6784\uff0c\u548c\u6808\u4e00\u6837\u662f\u4e00\u79cd\u8fd0\u7b97\u53d7\u9650\u5236\u7684\u7ebf\u6027\u8868\u3002\u5176\u9650\u5236\u53ea\u5141\u8bb8\u4ece\u8868\u7684\n\u524d\u7aef\uff08front\uff09\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u800c\u5728\u8868\u7684\u540e\u7aef\uff08rear\uff09\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\u3002\u4e00\u822c\u5141\u8bb8\u8fdb\u884c\u63d2\u5165\u7684\u4e00\u7aef\u6211\u4eec\u79f0\u4e3a\n\u961f\u5c3e\uff0c\u5141\u8bb8\u5220\u9664\u7684\u4e00\u7aef\u79f0\u4e3a\u961f\u9996\u3002\u961f\u5217\u7684\u63d2\u5165\u64cd\u4f5c\u53c8\u53eb\u5165\u961f\uff0c\u961f\u5217\u7684\u5220\u9664\u64cd\u4f5c\u53c8\u53eb\u51fa\u961f\u3002\n\n\u961f\u5217\u7684\u4e3b\u8981\u64cd\u4f5c\u5305\u62ec\uff1a\n\n\u5165\u961f\uff08push\uff09\n\n\u51fa\u961f\uff08pop\uff09\n\n\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff08empty\uff09\n\n\u7edf\u8ba1\u961f\u5217\u5143\u7d20\u7684\u4e2a\u6570\uff08size\uff09\n\n\u8bbf\u95ee\u961f\u9996\u5143\u7d20\uff08front\uff09\n\n\nC++ \u4e2d\u76f4\u63a5\u6784\u9020\u4e00\u4e2a queue \u7684\u8bed\u53e5\u4e3a\uff1a queue<T> vec \u3002\u8fd9\u6837\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a vec \u7684\u50a8\u5b58 T \u7c7b\u578b\u6570\n\u636e\u7684\u961f\u5217\u3002\u5176\u4e2d T \u662f\u6211\u4eec\u6570\u7ec4\u8981\u50a8\u5b58\u7684\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u662f int \u3001 float \u3001 double \u6216\u8005\u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u6570\n\u636e\u7c7b\u578b\u7b49\u7b49\u3002\u521d\u59cb\u7684\u65f6\u5019 vec \u662f\u7a7a\u7684\u3002 \u6bd4\u5982 queue<int> q \u5b9a\u4e49\u4e86\u4e00\u4e2a\u50a8\u5b58\u6574\u6570\u7684\u961f\u5217 q \n  \n  \n  \u63a5\u4e0b\u6765\u611f\u53d7\u4e00\u4e0b\u4ee3\u7801\n  \n  ```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934 \nusing namespace std;\nconst int dir[8][2]{{1,0},{-1,0},{1,1},{0,1},{-1,1},{1,-1},{0,-1},{-1,-1}};//\u65b9\u4f4d\u6253\u8868 \nchar G[1005][1005];//\u5b58\u56fe \nint g[1005][1005];//\u5224\u65ad\u662f\u5426\u88ab\u641c\u7d22\u8fc7 \nint ttt=0;\nstruct node{//\u6784\u9020\u51fd\u6570 \n\tint y;//y\u5750\u6807 \n\tint x;//x\u5750\u6807 \n\tint t;//\u5230\u8fbe\u8def\u5f84 \n\tnode(int yy,int xx,int tt)//\u6784\u9020 \n\t{\n\t\ty=yy;\n\t\tx=xx;\n\t\tt=tt;\n\t}\n};\nvoid bfs(int y,int x)//\u5e7f\u641c \n{\n    queue<node> sj;//\u5b9a\u4e49\u4e00\u4e2a\u961f\u5217 \n    sj.push(node(y,x,0));//\u63d2\u5165\u7b2c\u4e00\u4e2a\u4e73\u8349\u8d77\u70b9 \n    g[y][x]=true;//\u505a\u6807\u8bb0\uff0c\u641c\u7d22\u8fc7 \n    while(!sj.empty())//\u5982\u679c\u961f\u5217\u4e2d\u8fd8\u6709\u6570 \n    {\n        node now=sj.front();//\u4ece\u961f\u9996\u53d6\u51fa\u5f53\u524d\u6570 \n        sj.pop();//\u5e76\u8e22\u51fa\u4ed6 \n        ttt=now.t;//\u8bb0\u5f55\u6b65\u6570 \n        for(int j=0;j<8;j++)//\u68c0\u6d4b\u516b\u4e2a\u65b9\u4f4d\u89d2 \n        {\n            int ty=now.y+dir[j][1];//\u8bb0\u5f55\u65b9\u4f4d\u5750\u6807 \n            int tx=now.x+dir[j][0];\n            if(G[ty][tx]=='.'&&!g[ty][tx])//\u5982\u679c\u4ed6\u6ca1\u6709\u88ab\u68c0\u6d4b\u5e76\u4e14\u662f\u8349 \n            {\n            \tg[ty][tx]=true;//\u4fb5\u7565\u4ed6 \n\t\t\t    sj.push(node(ty,tx,now.t+1));//\u63d2\u5165\u4ed6 \n\t\t\t}\n        }\n    }\n    cout<<ttt;//\u5982\u679c\u7ed3\u675f\u4e86\uff08\u641c\u7d22\u5b8c\u4e86\uff09 \u8f93\u51fa\u5468\u6570 \n} \nint main()//\u4e3b\u7a0b\u5e8f \n{\n\tint x,y,mx,my;\n\tscanf(\"%d%d%d%d\",&x,&y,&mx,&my);//\u8f93\u5165 \n\tfor(int i=y;i>=1;i--)\n\t{\n\t\tfor(int j=1;j<=x;j++)\n\t\t{\n\t\t\tcin>>G[i][j];//\u5343\u4e07\u4e0d\u80fd\u7528scanf\uff0c\u83ab\u540d\u5176\u5999\u9519\u8bef \n\t\t}\n\t}\n\tbfs(my,mx);//\u8c03\u7528\u51fd\u6570 \n\treturn 0;//\u5b8c\u7f8e\u7ed3\u675f \n}\n```\n\u597d\u4e86\uff0c\u8c22\u8c22\u5927\u5bb6\uff01",
        "postTime": 1554609771,
        "uid": 173510,
        "name": "\u534e\u604b_\u97f5",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Milkweed\u7684\u5165\u4fb5Invasion of the Milkweed\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5bf9\u61d2\u5f97\u770b\u9898\u610f\u7684~~\u6211 \u6ca1\u9519\u5c31\u662f\u6211~~\u4eba\u975e\u5e38\u4e0d\u53cb\u597d\u7684\u4e00\u9053\u9898\n\n\u4ee4\u4eba\u53d1\u6307\u7684\u6a2a\u5750\u6807\u4e0e\u7eb5\u5750\u6807 \u4e0e \u8d77\u70b9\u5750\u6807 ~~\u5751\u4e86\u6211\u5f88\u4e45~~\n\n\u770b\u4e86\u8ba8\u8bba\u533a\u7684\u5e16\u5b50\u624d\u77e5\u9053\u81ea\u5df1\u7684\u95ee\u9898\n\n\u8bdd\u4e0d\u591a\u8bf4\u4e86 \u5148\u770b\u7b2c\u4e00\u79cd\u89e3\u6cd5\n\n### \u9012\u63a8 \n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f[105][105],tot=1,n,m,sx,sy,Time=1,sum;\nchar Map[105][105];\nint l[8][2]={{1,0},{0,1},{-1,0},{0,-1},{-1,-1},{1,-1},{-1,1},{1,1}};\nint main()\n{\n\tmemset(f,-1,sizeof(f));\n\tcin>>m>>n>>sy>>sx;\n\tfor(int i=n;i>0;i--)\n\t for(int j=1;j<=m;j++)\n\t   {\n\t   \t  cin>>Map[i][j];\n\t   \t  if(Map[i][j]=='.') sum++;\n\t   }\n\tf[sx][sy]=0; \n\twhile(tot!=sum)\n\t{\n\t    for(int i=1;i<=n;i++)\n\t       for(int j=1;j<=m;j++)\n\t          {\n\t             bool flag=0;\n                     if(f[i][j]>0) continue;\n\t    \t     if(Map[i][j]=='*') continue;\n\t    \t     for(int q=0;q<8;q++)\n\t             {\n\t   \t         int tx=i+l[q][0];\n\t   \t         int ty=j+l[q][1];\n\t   \t         if(tx<1||tx>n||ty<1||ty>m) continue;\n\t   \t         if(Map[tx][ty]=='*') continue;\n\t   \t         if(f[tx][ty]!=Time-1) continue;\n\t   \t         f[i][j]=Time; flag=1;\n\t             }\n\t             if(flag) tot++;\n\t\t   }\n\t    Time++;\n\t}\n\tcout<<Time<<endl;\n\treturn 0;\n}\n```\n\nsum\u8868\u793a\u8349\u7684\u6570\u91cf tot\u8868\u793a\u5df2\u7ecf\u5360\u9886\u7684\u8349\u7684\u6570\u91cf\n\nTime \u8868\u793a\u5df2\u7ecf\u5230\u7b2c\u51e0\u5929\u4e86 \n\nf \u6570\u7ec4\u5b58\u50a8\u7740\u6bcf\u4e2a\u8349\u70b9\u7b2c\u4e00\u6b21\u88ab\u5360\u9886\u7684\u65f6\u95f4\n\n\u7b2c\u4e00\u5c42\u5faa\u73af\u8868\u793a \uff1a \u5982\u679c\u8fd8\u6709\u8349\u5730\u6ca1\u88ab\u5360\u9886 \uff08tot\uff01=sum\uff09\n\n\u5c31\u7ee7\u7eed\u6269\u5c55\n\n\u7b2c\u4e8c\u4e09\u5c42\u5faa\u73af\u679a\u4e3e\u70b9 \n\n\u663e\u7136\u70b9\u672c\u8eab\u4e0d\u80fd\u662f\u77f3\u5934\u4e14\u6ca1\u88ab\u5360\u9886\u8fc7\n\n\u7b2c\u56db\u5c42\u5faa\u73af\u679a\u4e3e\u90bb\u8fd1\u7684\u70b9\n\n\u5982\u679c\u65c1\u8fb9\u6709\u88ab\u5360\u9886\u7684\u70b9\u5e76\u4e14\u5b83\u662f\u88ab\u4e0a\u4e00\u6b21\u6269\u5c55\u5360\u9886\u7684 \n\n\u90a3\u4e48\u5c31\u6807\u8bb0\u8fd9\u4e2a\u70b9 \u88ab\u5360\u9886\u7684\u70b9\uff08tot\uff09++\n\n#### \u7ed3\u679c\n\n\u4f3c\u4e4e\u4ee4\u4eba\u60b2\u6124 \n\n\u5f00\u4e86o2\u4e5f\u53ea\u670918\u5206 \n\n\u4e0d\u8fc7\u7ec6\u60f3\u5b9e\u9645\u4e0a\u662f\u60c5\u7406\u4e4b\u4e2d\n\n\u5206\u6790\u4e00\u4e0b\u7b97\u6cd5 \uff1a\n\n\u540e\u4e09\u91cd\u5faa\u73af\u90fd\u662f\u786e\u5b9a\u7684\uff08100*100*8\uff09 \n\n\u53ea\u6709\u7b2c\u4e00\u91cd\u5faa\u73af\u4e0d\u786e\u5b9a\uff08\u65f6\u95f4\uff09\n\n\u5f53\u65f6\u95f4\u591a\u8d77\u6765\u7684\u65f6\u5019 \u7a0b\u5e8f\u5c31\u8dd1\u7684\u5f88\u6162\u5f88\u6162 \n\n\u4f46\u662f\u53cd\u800c\u5728\u7b2c\u5341\u4e2a\u70b9 n m \u5927 \u4f46\u662f\u65f6\u95f4\u5c0f\u7684\u65f6\u5019 \n\n\u9012\u63a8\u8fd8\u662f\u8dd1\u7684\u53ef\u4ee5\u7684 \n\n### \u6df1\u641c\n\n\n------------\n\n\u6709\u5bbd\u641cAC\u7684\u5730\u65b9\u5c31\u4f1a\u6709\u6df1\u641c\u7684\u9a97\u5206\u8bb0\u5f55 \n\n\u672c\u849f\u84bb\u7528\u6df1\u641c\u5c1d\u8bd5\u4e86\u4e00\u4e0b \n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,sx,sy,ans[105][105];\nchar Map[105][105];\nint l[8][2]={{1,0},{0,1},{-1,0},{0,-1},{1,1},{-1,1},{1,-1},{-1,-1}};\ninline void dfs(int x,int y,int step)\n{\n    ans[x][y]=step;\n    int tx,ty;\n    for(register int i=0;i<8;i++)\n    {\n        tx=x+l[i][0]; ty=y+l[i][1];\n        if(tx<1||tx>n||ty<1||ty>m) continue;\n        if(Map[tx][ty]=='*') continue;\n        if(step+1>=ans[tx][ty]) continue;\n        dfs(tx,ty,step+1);\n    }\n}\nint main()\n{\n    memset(ans,0x3f,sizeof(ans));\n    cin>>m>>n>>sy>>sx;\n    for(register int i=n;i>0;i--)\n      for(register int j=1;j<=m;j++)\n        cin>>Map[i][j];\n    dfs(sx,sy,0); \n    int cnt=0;\n    for(register int i=1;i<=n;i++)\n      for(register int j=1;j<=m;j++)\n        if(Map[i][j]!='*') cnt=max(cnt,ans[i][j]);\n    cout<<cnt<<endl;\n    return 0;\n}\n```\n\u57fa\u672c\u4e0a\u7528\u6df1\u641c\u5199\u8ff7\u5bab\u662f\u8981\u7528\u8bb0\u5fc6\u5316\u7684\n\n\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u6700\u5c0f\u5230\u8fbe\u7684\u65f6\u95f4 \n\n\u5047\u8bbe \uff1a \u4f60\u8d70\u5230\u8fd9\u7528\u4e86x\u6b65 \u4f46\u662f\u6709\u4eba\u7528\u66f4\u5c11\u7684\u6b65\u6570\u8d70\u5230\u4e86\u8fd9\u91cc\u8fc7\n\n\u4f60\u8fd8\u8981\u7ee7\u7eed\u8d70\u5417 \uff1f \u4f60\u7ee7\u7eed\u8d70\u4f1a\u4f7f\u7b54\u6848\u53d8\u5c0f\u5417\uff1f \n\n\u663e\u7136\u4e0d\u4f1a\u7684 \u90a3\u4e48\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u522b\u641c\u4e86 \n\n\u8fd9\u5c31\u53eb\u6700\u4f18\u89e3\u526a\u679d\n\n\u6700\u540e\u4e00\u904d\u5faa\u73af\u5bfb\u627e\u6700\u5927\u503c \n\n#### \u7ed3\u679c \n\n\u4f3c\u4e4e\u4ee4\u4eba\u5fe7\u4f24\n\n\u4e0d\u5f00o2 63\u5206 \u5438\u6c27\u540e 90 \n\n\u5373\u4f7f\u6211\u518d\u52a0\u4e86\u4e00\u4e9bregister inline \u4f46\u662f\u4e5f\u6ca1\u6709\u7528\n\n\u671b\u54ea\u4f4d\u5927\u4f6c\u6765\u5e2e\u6211\u4fee\u5230AC \n\n## \u6b63\u89e3 \u2014\u2014\u2014\u2014 \u5bbd\u641c\n\n\n------------\n\n\u5b9e\u9645\u4e0a\u849f\u84bb\u4e00\u5f00\u59cb\u5c31\u60f3\u5230\u5bbd\u641c\n\n\u4f46\u662f\u4e3a\u4e86\u5c1d\u8bd5\u63d0\u4f9b\u65b0\u7684\u601d\u8def \u8fde\u7eed\u5931\u8d25\u591a\u6b21\n\n\u53d1\u73b0\u8fd9\u9898\u8fd8\u662f\u5f97\u7528\u5bbd\u641c \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar Map[105][105];\nint n,m,l[8][2]={{1,0},{0,1},{-1,0},{0,-1},{1,1},{-1,-1},{1,-1},{-1,1}};\nbool vis[105][105];\nstruct mmp\n{\n\tint x,y,step;\n}f,v;\nqueue <mmp> q; \nint bfs()\n{\n\tint tot=0;\n\tf.step=0; q.push(f);\n\twhile(!q.empty())\n\t{\n\t\tf=q.front();\n\t\tq.pop(); tot=max(tot,f.step);\n\t\tfor(int i=0;i<8;i++)\n\t\t{\n\t\t\tv.x=f.x+l[i][0];\n\t\t\tv.y=f.y+l[i][1];\n\t\t\tv.step=f.step+1;\n\t\t\tif(v.x<1||v.x>n||v.y<1||v.y>m) continue;\n\t\t\tif(vis[v.x][v.y]) continue;\n\t\t\tif(Map[v.x][v.y]=='*') continue;\n\t\t\tq.push(v); vis[v.x][v.y]=1; \n\t\t}\n\t}\n\treturn tot;\n}\nint main()\n{\n\tcin>>m>>n>>f.y>>f.x;\n\tvis[f.x][f.y]=1;\n\tfor(int i=n;i>0;i--)\n\t for(int j=1;j<=m;j++)\n\t  cin>>Map[i][j];\n\tcout<<bfs()<<endl;\n\treturn 0;\n}\n```\n~~\u6d1b\u8c37\u7f29\u8fdb\u6709\u5c0f\u5c0f\u7684\u6bdb\u75c5\u4f46\u662f\u522b\u602a\u6211\u54e6QAQ~~\n\n\u5229\u7528\u5bbd\u641c \u6211\u4eec\u53ea\u7528\u8f93\u51fa\u6700\u540e\u51fa\u961f\u5217\u7684\u70b9\u7684\u6b65\u6570\u5c31\u591f\u4e86\n\n\u4e3b\u8981\u662f\u7ec6\u8282\u4e0a\u7684\u95ee\u9898 \u4e0d\u7ec6\u5fc3\u662f\u8981\u6392\u9519\u4e00\u4f1a\u513f\u7684\n\n### \u5c0f\u5c0f\u7684\u603b\u7ed3\n\n\n\n------------\n\n\u5b9e\u9645\u4e0a\u53ea\u6253\u7b97\u53d1\u5bbd\u641c\u7684\u7a0b\u5e8f \n\n\u4f46\u662f\u6d1b\u8c37\u591a\u7bc7\u91cd\u590d \n\n\u849f\u84bb\u5c31\u53e6\u8f9f\u8e4a\u5f84 \u7528\u5176\u4ed6\u7a0d\u52a3\u7684\u65b9\u6cd5\u62ff\u90e8\u5206\u5206\n\n\u5b9e\u9645\u4e0a\u5c31\u662f\u60f3\u544a\u8bc9\u770b\u5230\u8fd9\u7bc7\u9898\u89e3\u7684\u5927\u4f6c\n\n\u4e00\u9053\u9898\u4e0d\u8981\u5c40\u9650\u81ea\u5df1\u7684\u4e00\u79cd\u601d\u7ef4\n\n\u6709\u60f3\u6cd5\u5c31\u8981\u5927\u80c6\u7684\u53bb\u5b9e\u73b0 \n\n\u8fd9\u6837\u505a\u4e00\u9898\u6bd4\u505a\u5341\u9898\u76f8\u540c\u89e3\u6cd5\u7684\u9898\u76ee\u7684\u6548\u679c\u8981\u597d\u5f97\u591a\n\n\u6700\u540e\u611f\u8c22\u8010\u5fc3\u770b\u5b8c\u849f\u84bb\u9898\u89e3\u7684\u5927\u4f6c \uff01\uff01\uff01\n\n\u8c22\u8c22\u60a8\u5c0a\u91cd\u6211\u7684\u52b3\u52a8\u6210\u679c",
        "postTime": 1561810968,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Milkweed\u7684\u5165\u4fb5Invasion of the Milkweed\u3011"
    },
    {
        "content": "**bfs\u641c\u7d22\uff0c\u4ece\u8d77\u59cb\u70b9\u5f00\u59cb\uff0c\u5f80\u516b\u4e2a\u65b9\u5411\u8fdb\u884c\u641c\u7d22\uff0c\u641c\u5230\u7b26\u5408\u8981\u6c42\u7684\u5165\u961f\u5373\u53ef**\n\n**\u8fd0\u7528\u7ed3\u6784\u4f53\u8bb0\u5f55\u5750\u6807\u4e0e\u65f6\u523b\uff0c\u6700\u540e\u4e00\u8d77\u8f93\u51fa**\n\n\n------------\n### \u7b97\u6cd5\u7684\u4e3b\u8981\u6846\u67b6\uff1a\u53c2\u8003\u300a\u4fe1\u606f\u5965\u8d5b\u4e00\u672c\u901a\u300b\n```\nint bfs()\n{\n\t\u521d\u59cb\u5316\uff0c\u521d\u59cb\u72b6\u6001\u5b58\u5165\u961f\u5217;\n\t\u961f\u5217\u9996\u6307\u9488 head=0;\u5c3e\u6307\u9488 tail=1;\n\tdo\n\t{\n\t\t\u6307\u9488 head \u540e\u79fb\u52a8\u4e00\u4f4d,\u6307\u5411\u5f85\u6269\u5c55\u7ed3\u70b9;\n\t\tfor(int i = 1; i <= max; i++)//max\u4e3a\u4ea7\u751f\u5b50\u8282\u70b9\u7684\u89c4\u5219\u6570\n\t\t{\n\t\t\tif(\u5b50\u8282\u70b9\u7b26\u5408\u6761\u4ef6)\n\t\t\t{\n\t\t\t\ttail\u6307\u9488+1,\u628a\u65b0\u7ed3\u70b9\u5b58\u5165\u961f\u5c3e;\n\t\t\t\tif(\u65b0\u7ed3\u70b9\u4e0e\u539f\u6709\u5df2\u4ea7\u751f\u7684\u7ed3\u70b9\u91cd\u590d)\u5220\u53bb\u8be5\u7ed3\u70b9(\u53d6\u6d88\u5165\u961f,tail-1);\n\t\t\t\telse if(\u65b0\u7ed3\u70b9\u662f\u76ee\u6807\u70b9)\u8f93\u51fa\u5e76\u9000\u51fa; \n\t\t\t} \n\t\t} \n\t}while(head<tail);//\u961f\u5217\u4e3a\u7a7a \n} \n\n```\n\n\n------------\n## \u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int MAX=101;\nint dx[8]={1,1,1,0,0,-1,-1,-1},dy[8]={1,0,-1,1,-1,-1,0,1};//\u516b\u4e2a\u65b9\u5411 \nchar a[MAX][MAX];int n,m,x,y,ans=0;bool b[MAX][MAX]={0};//\u6807\u8bb0\u7684\u6570\u7ec4 \nstruct node\n{\n\tint x,y,num;\n\tnode(int y1,int x1,int num1)//\u7ed3\u6784\u4f53\u5f0f\u8bb0\u5f55 \n\t{\n\t\tx=x1;y=y1;num=num1;\n\t}\n};\nint bfs(int y,int x);//\u6ce8\u610f\u5750\u6807\u987a\u5e8f \nint main()\n{\n\tcin>>n>>m>>x>>y;\n\tfor(int i=m;i>=1;i--)\n        for(int j=1;j<=n;j++)cin>>a[i][j];\n\tcout<<bfs(y,x)<<endl;//\u8f93\u51fa\u5373\u53ef\n\treturn 0;\n} \nint bfs(int y,int x)\n{\n\tqueue<node>f;\n\tf.push(node(y,x,0));//\u5165\u961f \n\tb[y][x]=1;//\u6807\u8bb0\u5df2\u5230\u8fc7 \n\twhile(!f.empty())//\u8fd8\u4e0d\u4e3a\u7a7a\n\t{\n\t\tnode newn=f.front();//\u53d6\u961f\u9996\u7684\u6570\u5e76\u50a8\u5b58\n\t\tf.pop();//\u51fa\u961f\n\t\tans=newn.num;\n\t\tfor(int i=0;i<8;i++)//\u68c0\u6d4b\u516b\u4e2a\u65b9\u4f4d\n        {\n            int y2=newn.y+dy[i];//\u8bb0\u5f55\u5750\u6807 \n            int x2=newn.x+dx[i];\n            if(a[y2][x2]=='.'&&!b[y2][x2])//\u5982\u679c\u4ed6\u6ca1\u6709\u88ab\u68c0\u6d4b\n            {\n                b[y2][x2]=1;//\u6807\u8bb0\u4e3a1 \n                f.push(node(y2,x2,newn.num+1));//\u65b0\u7684\u5165\u961f \n            }\n        } \n\t} \n\treturn ans;\n}\n```\n",
        "postTime": 1557489401,
        "uid": 183603,
        "name": "SUNCHAOYI",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Milkweed\u7684\u5165\u4fb5Invasion of the Milkweed\u3011"
    },
    {
        "content": "\u4e00\u9053\u5b8c\u5168\u6ca1\u6709\u6280\u672f\u542b\u91cf\u7684\u641c\u7d22\u9898\n\n\u5c31\u662f\u6709\u51e0\u4e2a\u5751\u70b9 1:\u9898\u76ee\u4e2d\u8bf4\u7684\uff08mx\uff0cmy\uff09 \u5199\u6210\u4e86\u5750\u6807\u5f62\u5f0f\uff0c\u4f46\u5176\u5b9emy\u662f\u6a2a\u5750\u6807\uff08\u6765\u81ea\u8ba8\u8bba\u7684\u63d0\u793a\uff09\n\n2:\u8bfb\u5165\u7684\u65f6\u5019\u6570\u7ec4\u5fae\u5fae\u5904\u7406\u4e00\u4e0b\n\n\u4ee3\u7801\u4e5f\u5f88\u7b80\u5355\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define N 110\n#define pii pair<int,int>\n#define mp make_pair\n#define F first\n#define S second\nusing namespace std;\nint map[N][N],n,m;\nint dx[9]={0,1,1,1,0,0,-1,-1,-1},dy[9]={0,-1,0,1,1,-1,0,1,-1};\nqueue<pii> que;\ninline int max(int a,int b) {return a>b?a:b;}\nint bfs()\n{\n    int i,j;\n    while(!que.empty())\n    {\n        pii p=que.front(); que.pop();\n        for(i=1;i<=8;i++)\n        {\n            int x=p.F+dx[i],y=p.S+dy[i];\n            if(map[x][y]==0)\n            {\n                map[x][y]=map[p.F][p.S]+1;\n                que.push(mp(x,y));\n            }\n        }\n    }\n    int ans=0;\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n            ans=max(map[i][j],ans);\n    return ans-1;\n}\nint main()\n{\n    int i,j; char ch;\n    scanf(\"%d %d %d %d\\n\",&m,&n,&j,&i);\n    map[i][j]=1; que.push(mp(i,j));\n    for(i=n;i>=1;i--)\n    {\n        for(j=1;j<=m;j++)\n            {ch=getchar(); if(ch=='*') map[i][j]=-1;}\n        while(ch!='\\n') ch=getchar();\n    }\n    for(i=0;i<=n+1;i++) map[i][0]=map[i][m+1]=-1;\n    for(i=0;i<=m+1;i++) map[0][i]=map[n+1][i]=-1;\n    printf(\"%d\",bfs());\n    return 0;\n}\n```",
        "postTime": 1497525855,
        "uid": 19390,
        "name": "functionendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Milkweed\u7684\u5165\u4fb5Invasion of the Milkweed\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u9053~~\u7b80\u5355\u7684~~\u6709\u70b9\u5751\u7684\u9898\n\n__\u4e3a\u4ec0\u4e48\u7528\u5e7f\u641c__:\u76f8\u4fe1\u5927\u5bb6\u90fd\u77e5\u9053\u5e7f\u641c\u53ef\u4ee5\u7528\u6765**\u6c42\u8fb9\u6743\u552f\u4e00\u7684\u6700\u77ed\u8def**\uff0c\u4e5f\u5c31\u662f\u8bf4**\u5e7f\u641c\u5b58\u5728\u6700\u77ed\u8ddd\u79bb\u7684\u6027\u8d28**\uff0c\u7531\u4e8e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230**\u4ece\u67d0\u4e00\u4e2a\u70b9\u6269\u5c55\u5230\u4e0b\u4e00\u4e2a\uff0c\u8fd9\u4e2a\u70b9\u5230\u4e0a\u4e2a\u70b9\u7684\u8ddd\u79bb\u4e00\u5b9a\u662f\u6700\u77ed\u7684**\uff0c\u5f53\u7136\uff0c\u8fd9\u662f\u524d\u4eba\u7ecf\u8fc7\u4e86\u4e25\u8c28\u7684\u8bc1\u660e\u5f97\u51fa\u7684~~\u53cd\u6b63\u6211\u662f\u4e0d\u4f1a\u7684~~\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u8fd9\u4e2a\u9898\u76ee\u62bd\u8c61\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u9898\u76ee\u8981\u6c42\u7684\u662f**\u4ece\u8d77\u70b9\u5904\u7684\u8349\u5f00\u59cb\u7b97\u8d77\uff0c\u8d77\u70b9\u7684\u8349\u5230\u6700\u540e\u4e00\u4e2a\u957f\u51fa\u6765\u7684\u8349\u7684\u8ddd\u79bb\u3002**\n\n### \u5751~~\u5bf9\u4e8e\u6211\u8fd9\u79cd\u76f4\u63a5\u5f00\u5199\u7684~~\n1. \u9898\u76ee\u7ed9\u7684\u5750\u6807\u7cfb\u662f\u4ece __\u5de6\u4e0b\u89d2__ \u5f00\u59cb\u7684\n2. \u9898\u76ee\u7684\u884c\u5217\u8f93\u5165\u662f __\u5148\u8f93\u5165\u5217\u6570\uff0c\u518d\u8f93\u5165\u884c\u6570__\n3. \u56e0\u4e3a1\u6240\u4ee5 __\u8d77\u70b9\u7684\u5750\u6807\u4e5f\u662f\u53cd\u7740\u7684__\n\n## \u6b63\u9898\n```cpp\n#include <iostream>\n#include <cstring>\nusing namespace std;\n\n// BFS\n// \u65b9\u4fbf\u4f7f\u7528\n#define x first\n#define y second\ntypedef pair<int, int > PII;\nint n, m;\nint sx, sy;\nconst int N = 110;\nchar graph[N][N];\n// \u8bb0\u5f55\u6700\u77ed\u8ddd\u79bb\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7\u8ddd\u79bb\u503c\u6765\u5224\u65ad\u662f\u5426\u8bbf\u95ee\u8fc7\u67d0\u70b9\nint dist[N][N];\n// \u6a21\u62df\u961f\u5217\uff0c\u53ef\u4ee5\u6bd4STL\u5feb\u5f88\u591a\nPII que[N * N];\n// \u516b\u5411\u641c\nint move[8][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {1, 1}, {-1, -1}, {-1, 1}, {1, -1}};\nvoid bfs(int sx, int sy) {\n\tmemset(dist, -1, sizeof dist);\n\tint qtop = 0, qback = 0;\n\tque[qtop] = PII(sx, sy);\n   // \u4e0d\u8981\u5fd8\u8bb0\u81ea\u5df1\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u5c31\u662f\u6700\u77ed\u7684\n\tdist[sx][sy] = 0;\n\twhile (qtop <= qback) {\n\t\tPII now = que[qtop++];\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tint nx = now.x + move[i][0], ny = now.y + move[i][1];\n\t\t\tif (nx > n || nx < 1 || ny > m || ny < 1) continue;\n        // \u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u77f3\u5934\u6216\u8005\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\uff0c\u8df3\u8fc7\n\t\t\tif (dist[nx][ny] != -1 || graph[nx][ny] == '*') continue;\n        // \u5f53\u524d\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u5c31\u662f\u4e0a\u4e00\u4e2a\u7684\u6700\u77ed\u8ddd\u79bb\u52a0\u4e0a\u6743\u503c\n\t\t\tdist[nx][ny] = dist[now.x][now.y] + 1;\n\t\t\tque[++qback] = PII(nx, ny);\n\t\t}\n\t}\n}\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0), cout.tie(0);  \n\t// \u5148\u8f93\u5165\u5217\uff0c\u518d\u8f93\u5165\u884c \n\tcin >> m >> n >> sx >> sy;\n\tfor (int i = n; i >= 1; i--) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tcin >> graph[i][j];\n\t\t}\n\t}\n   // \u8d77\u70b9\u5750\u6807\u4e5f\u662f\u53cd\u7740\u7684\n\tbfs(sy, sx);\n\tint res = 0;\n\tfor (int i = n; i >= 1; i--) {\n\t\tfor (int j = 1; j <= m; j++) {\n        // \u627e\u5230\u6700\u8fdc\u7684\u8349\u8ddd\u79bb\u8d77\u70b9\u7684\u8349\u7684\u8ddd\u79bb\n\t\t\tres = max(res, dist[i][j]);\n\t\t}\n\t}\n\tcout << res;\n\treturn 0;\n}\n```\n\u56e0\u4e3a\u4e0a\u9762\u7684\u5751WA\u4e86\u4e24\u6b21\uff0c\u7b2c\u4e00\u6b21\u662f\u56e0\u4e3a\u8e29\u5751\uff0c\u7b2c\u4e8c\u6b21\u662f\u56e0\u4e3a\u5fd8\u4e86\u8fd8\u539f\u8c03\u8bd5\u6ce8\u91ca\n\n~~\u8fd9\u7bc7\u9898\u89e3\u957f\u8349\u4e86\uff1awwwwwwwwwwww~~",
        "postTime": 1585837450,
        "uid": 277849,
        "name": "AveMarina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Invasion of the Milkweed G\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u7b80\u6d01\u7684\u4ee3\u7801\n\n\u9996\u5148\u9898\u76ee\u662f\u4e00\u9053\u5165\u95e8$BFS$\uff0c\u4e5f\u6ca1\u6709\u5176\u4ed6\u7b97\u6cd5\u63ba\u6742\uff0c\u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355\n\n\u6ce8\u610f\u51e0\u70b9\uff1a\n\n- \u8bfb\u5165\n\n\u9898\u76ee\u4e2d\u7684\u8d77\u59cb\u70b9\u5199\u6210\u4e86\u5750\u6807\u7684\u5f62\u5f0f\uff0c\u5373\u4ee5\u5de6\u4e0b\u89d2\u4e3a$(1,1)$\uff0c\u800c\u6211\u4eec\u5e73\u5e38\u4ee5\u5de6\u4e0a\u89d2\u4e3a$(1,1)$\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u9700\u8981\u628a\u5b83\u5411\u53f3\u65cb\u8f6c\u4e00\u4e0b\u3002\n\n\u6211\u662f\u628a\u8d77\u59cb\u70b9\u5750\u6807\u5411\u5de6\u65cb\u8f6c\uff0c\u53cd\u6b63$bfs$\u5bf9\u6b64\u6ca1\u6709\u8981\u6c42\uff0c\u53ea\u8981\u70b9\u6b63\u786e\u5c31\u597d\u3002\n\n\u5411\u5de6\u65cb\u8f6c\uff0c\u7a0d\u5fae\u63a8\u4e00\u4e0b\u5c31\u77e5\u9053\uff0c$sy$\u53d8\u6210$sx$\uff0c$sx$\u53d8\u6210$n-sy+1$\n\n\u522b\u5fd8\u4e86\u4e5f\u628a$n$\u548c$m$\u4e92\u6362\n\n- \u80fd\u5426\u7ecf\u8fc7\u53ca\u662f\u5426\u8d8a\u754c\u7684\u5224\u65ad\n\n\u6709\u4e9b\u4eba\u662f\u8fd9\u4e48\u5199\u7684\n```\nif (!f[x1+xx[i]][y1+yy[i]] && x1+xx[i] <= m && x1+xx[i] > 0 && y1+yy[i] <= n && y1+yy[i] > 0)\n```\n\u5176\u5b9e\u4e0d\u9700\u8981\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u80fd\u8d70\u7684\u70b9\u90fd\u662f$'.'$\u90a3\u6211\u4eec\u53ea\u8981\u5224\u65ad\u8fd9\u4e00\u4e2a\u6761\u4ef6\u5c31\u597d\u4e86\n\n\u5982\u679c\u8d8a\u754c\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u662f$'.'$\n\n\u7136\u540e\u53ea\u8981\u518d\u628a\u7ecf\u8fc7\u7684\u70b9\u6807\u4e3a\u5176\u4ed6\u7b26\u53f7\u5c31\u884c\u4e86\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<ctype.h>\n#include<queue>\nusing namespace std;\ninline int read(){//\u5feb\u8bfb\uff0c\u867d\u7136\u8fd9\u9053\u9898\u6ca1\u7528\n\tint x=0,f=0;char ch=getchar();\n\twhile(!isdigit(ch))f|=ch=='-',ch=getchar();\n\twhile(isdigit(ch))x=x*10+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\nint dx[]={0,1,0,-1,1,1,-1,-1};\nint dy[]={1,0,-1,0,1,-1,1,-1};//dx\u3001dy\u6570\u7ec4\u8868\u793a\u4e0b\u4e00\u6b65\u5411\u54ea\u91cc\u8d70\nint t[107][107],ans;//t\u6570\u7ec4\u5b58\u5360\u9886\u7684\u65f6\u95f4\uff0cans\u662f\u6700\u540e\u7684\u7b54\u6848\nchar c[107][107];//\u5730\u56fe\nqueue<int> qx,qy;//\u4e24\u4e2a\u961f\u5217\uff0c\u5206\u522b\u5b58x\u5750\u6807\u548cy\u5750\u6807\uff0c\u4e0d\u559c\u6b22\u7528pair\u6216\u8005\u4e8c\u7ef4\u6570\u7ec4\u6a21\u62df\uff0c\u5d4c\u5957\u4f1a\u663e\u5f97\u5f88\u6076\u5fc3\ninline void bfs(){\n\twhile(!qx.empty()){\n\t\tint x=qx.front(),y=qy.front();qx.pop(),qy.pop();\n\t\tfor(int i=0;i<8;++i){\n\t\t\tint xx=x+dx[i],yy=y+dy[i];//xx\u548cyy\u5206\u522b\u8868\u793a\u4e0b\u4e00\u6b65\u7684\u4f4d\u7f6e\n\t\t\tif(f[xx][yy]!='.')continue;//\u4e0d\u53ef\u4ee5\u5360\u9886\u6216\u8005\u5360\u9886\u4e86\u5c31\u8df3\u8fc7\n\t\t\tc[xx][yy]='*';//\u6807\u8bb0\u4e3a\u4e0d\u53ef\u4ee5\u8d70\n\t\t\tqx.push(xx),qy.push(yy);//\u538b\u5165\u961f\u5217\n\t\t\tans=max(ans,t[xx][yy]=t[x][y]+1);//\u65f6\u95f4\u6bd4\u5b83\u7684\u6765\u6e90\u591a1\uff0c\u56e0\u4e3abfs\u7684\u6027\u8d28\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5c31\u662f\u6700\u77ed\u65f6\u95f4\uff0c\u6b63\u786e\u6027\u663e\u7136\uff08\u987a\u4fbf\u7edf\u8ba1\u7b54\u6848\uff09\n\t\t}\n\t}\n}\nint main(){\n\tint m=read(),n=read(),sy=read(),sx=n-read()+1;\n    //\u8fd9\u91cc\u8f93\u5165\u505a\u4e86\u5904\u7406, \u65b9\u4fbf\u4ee5\u540e\u64cd\u4f5c\uff08\u5177\u4f53\u89c1\u4e0a\uff09\n\tqx.push(sx),qy.push(sy);//\u5c06\u4e00\u5f00\u59cb\u7684\u4e73\u8349\u538b\u5165\u961f\u5217\n\tfor(int i=1;i<=n;++i)scanf(\"%s\",c[i]+1);//\u8bfb\u5165\n\tbfs(); \n\tprintf(\"%d\",ans);//\u8f93\u51fa\n\treturn 0;//\u597d\u4e60\u60ef\n}\n```\n\u53c8\uff1a\u5176\u5b9e\u8fd8\u53ef\u4ee5\u7528\u5806\u4f18$dij$\u505a\uff0c\u6bcf\u4e2a\u70b9\u5411\u5468\u56f4\u7684\u516b\u4e2a\u70b9\u8fde\u8fb9\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\uff0c\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u4e5f\u662f\u627e\u6700\u5927\u503c\uff08\u5c31\u662f\u590d\u6742\u5ea6\u7a0d\u9ad8\uff0c\u591a\u4e00\u4e2alog\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u65e0\u8111\u76f4\u63a5\u505a\u554a\uff09",
        "postTime": 1567243083,
        "uid": 56653,
        "name": "\u73c5\u8090",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Milkweed\u7684\u5165\u4fb5Invasion of the Milkweed\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9898\u7ecf\u5178\u7684bfs\u9898\uff0c~~\u751a\u81f3\u88ab\u62ff\u6765\u5f53\u67d0\u5f31\u5e02\u590f\u4ee4\u8425\u7684\u8003\u8bd5\u9898~~  \n\u8a00\u5f52\u6b63\u4f20\uff0c\u8fd9\u9053\u9898\u6709\u51e0\u4e2a\u5751\u70b9\uff1a    \n1. \u5982\u56fe\uff0c\u4ece\u6700\u5de6\u4e0b\u89d2\u5f00\u59cb\u662f$[1,1]$,\u5982\u679c\u76f4\u63a5\u8bfb\u5165\u4f1a\u51fa\u95ee\u9898  \n![](https://cdn.luogu.com.cn/upload/pic/62529.png)  \n2. \u9898\u76ee\u4e2d\u7684$x,y$\u5206\u522b\u6307\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\uff0c\u6709\u53ef\u80fd\u4f1a\u88ab\u5751  \n3. \u4ece0\u65f6\u523b\u5f00\u59cb\uff0c\u4e0d\u8981\u4ece1\u5f00\u59cb\u8fdb\u884c\u641c\u7d22  \n\n\u8ba4\u771f\u8bfb\u9898\uff0c\u907f\u5f00\u8fd9\u4e9b\u5751\u70b9\u4e4b\u540e\u4f60\u5c31\u53ef\u4ee5\u5199\u51fa\u8fd9\u6837\u7684\u4e00\u4efdbfs\u4ee3\u7801\u4e86\uff1a\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <queue>\n#include <iostream>\n#include <algorithm>\n#define MAXN 110\nusing namespace std;\n#define mp make_pair\n\ninline int read() {\n    int a=0,f=1;char v=getchar();\n    while(!isdigit(v)) {if (v == '-') {f = -1;}v = getchar();}\n    while (isdigit(v)) {a = a * 10 + v - 48;v = getchar();}\n    return a * f;\n}\n\nint n,m,x,y,xx[8] = {0,1,0,-1,1,1,-1,-1},yy[8] = {1,0,-1,0,1,-1,1,-1},ans;\nbool f[MAXN][MAXN];\nchar ch;\n\nint main() {\n    n = read(),m = read(),x = read(),y = read();\n    for (int i = m;i > 0;--i) {\n        for (int j = 1;j <= n;++j) {\n            cin >> ch;\n            if (ch == '*') {\n                f[i][j] = 1;\n            }\n        }\n    }\n    queue <pair<pair<int,int>,int> > q;\n    q.push(mp(mp(y,x),0));\n    f[y][x] = 1;\n    while (!q.empty()) {\n        int x1 = q.front().first.first,y1 = q.front().first.second,t = q.front().second;q.pop();\n        for (int i = 0;i < 8;++i) {\n            if (!f[x1+xx[i]][y1+yy[i]] && x1+xx[i] <= m && x1+xx[i] > 0 && y1+yy[i] <= n && y1+yy[i] > 0) {\n                f[x1+xx[i]][y1+yy[i]] = 1;\n                q.push(mp(mp(x1+xx[i],y1+yy[i]),t+1));\n                ans = max(ans,t+1);\n            }\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1562494770,
        "uid": 105230,
        "name": "Retired_Doubeecat",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Milkweed\u7684\u5165\u4fb5Invasion of the Milkweed\u3011"
    },
    {
        "content": "\n\n## \u9898\u76ee\u5206\u6790\n\n\u8fd9\u9053\u9898\u5c31\u662f\u7ecf\u5178\u7684 **bfs** \u9898\uff0c\u9002\u5408\u65b0\u5b66\u641c\u7d22\u7684\u540c\u5b66\u3002\n\n\u5bf9\u4e8e\u6b64\u9898\uff0c\u6211\u4eec\u5e94\u8be5\u4ece\u539f\u70b9\u5f00\u59cb\uff0c\u6bcf\u6b21\u5411\u516b\u4e2a\u65b9\u5411\u641c\u7d22\u3002\n\n\u5224\u65ad\u641c\u7d22\u5230\u7684\u70b9\u662f\u5426\u88ab\u4e73\u8349\u5360\u9886\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\uff1a\n\n1.\u9898\u76ee\u7ed9\u7684\u5750\u6807\u7cfb\u662f\u4ece **\u5de6\u4e0b\u89d2** \u5f00\u59cb\u7684\u3002\n\n2.\u9898\u76ee\u7684\u884c\u5217\u8f93\u5165\u662f\u5148\u8f93\u5165 **\u5217\u6570** \uff0c\u518d\u8f93\u5165 **\u884c\u6570** ,\u6240\u4ee5 $x$ \u662f\u5bbd\u5ea6\uff0c$y$ \u662f\u957f\u5ea6\u3002\n\n3.\u8d77\u70b9\u7684\u5750\u6807\u4e5f\u662f\u53cd\u7740\u7684\u3002\n\n ~~\uff08\u5168\u662f\u5f53\u65f6\u88ab\u5751\u7684\u70b9\uff09~~ \n\n## Code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct node{\n\tint u,v,w;\n};\nint dx[8]={1,1,1,-1,-1,-1,0,0};\nint dy[8]={1,0,-1,1,0,-1,1,-1};\nchar a[101][101];\nint g[101][101],n,m,mx,my,ans=0;\nvoid bfs(int x,int y){\n\tqueue<node> q;\n\tq.push((node){x,y,0});\n\tg[x][y]=1;\n\twhile(!q.empty()){\n\t\tnode h=q.front();\n\t\tq.pop();\n\t\tans=h.w;\n\t\tfor(int i=0;i<8;i++){\n\t\t\tint fx=h.u+dx[i];\n\t\t\tint fy=h.v+dy[i];\n\t\t\tif(a[fx][fy]=='.'&&g[fx][fy]==0){\n\t\t\t\tg[fx][fy]=1;\n\t\t\t\tq.push((node){fx,fy,ans+1});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\t//freopen(\"1.in\",\"r\",stdin);\n\tint i,j;\n\tmemset(g,0,sizeof(g));\n\tscanf(\"%d%d%d%d\",&m,&n,&my,&mx);\n\tfor(i=n;i>=1;i--)\n\t\tfor(j=1;j<=m;j++)\n\t\t\tcin>>a[i][j];\n\tbfs(mx,my);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1597540131,
        "uid": 164696,
        "name": "qzcbw",
        "ccfLevel": 5,
        "title": "P2960 [USACO09OCT]Invasion of the Milkweed G \u9898\u89e3"
    },
    {
        "content": "\u7531\u9898\u76ee\u53ef\u77e5\uff0c**\u8349\u5730\u7684\u957f\u548c\u5bbd\u90fd\u4e0d\u4f1a\u8d85\u8fc7** $100$ \uff0c\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5c0f\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651**\u4f7f\u7528\u641c\u7d22\u7b97\u6cd5**\u3002 \n\n\u641c\u7d22\u7b97\u6cd5\u5305\u62ec\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u548c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3002\u901a\u8fc7\u9898\u76ee\u63cf\u8ff0\u548c\u6837\u4f8b\u53ef\u4ee5\u5f97\u77e5\uff0c\u9898\u76ee\u8981\u6c42\u7684\u662f\u4e73\u8349**\u6700\u5feb**\u9700\u8981\u591a\u5c11\u5929\u5360\u9886\u6574\u4e2a\u8349\u5730\u3002\u6839\u636e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec**\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22**\u89e3\u51b3\u95ee\u9898\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n1. \u8bfb\u5165\u8349\u5730\u5730\u56fe\u65f6\u7edf\u8ba1\u5730\u56fe\u4e0a\u6709\u591a\u5c11\u4e2a\u70b9\u662f\u7267\u8349\uff0c\u7ed3\u679c\u8bb0\u4e3a $s$ \uff1b\n2. \u5c06\u4e73\u8349\u8d77\u59cb\u5750\u6807\u52a0\u5165\u961f\u5217\uff0c\u5e76\u628a\u8d77\u70b9\u6807\u8bb0\uff1b\n3. \u53d6\u51fa\u961f\u9996\uff0c\u5411**\u516b\u4e2a\u65b9\u5411**\u62d3\u5c55\uff1b\n4. \u5c06\u6240\u6709\u6ca1\u6709\u88ab\u4e73\u8349\u5360\u9886\u7684\u70b9\u6807\u8bb0\u6210\u4e0d\u53ef\u4ee5\u8d70\u7684\u683c\u5b50\uff0c\u5373\u4ee3\u8868\u88ab\u4e73\u8349\u5360\u9886\uff0c\u540c\u65f6\u5728 $s$ \u4e2d\u6263\u9664\u76f8\u5e94\u7684\u6570\u91cf\uff1b\n5. \u628a\u8fd9\u4e9b\u683c\u5b50\u52a0\u5165\u961f\u5217\uff1b\n6. \u91cd\u590d3~5\u6b65\uff0c\u76f4\u5230 $s$ \u4e3a $0$ \u3002\u8fd9\u65f6\u8f93\u51fa\u961f\u5c3e\u3010 _\u56e0\u4e3a\u6700\u540e\u8981\u62d3\u5c55\u5230\u961f\u5c3e\uff0c\u6240\u4ee5\u8f93\u51fa\u961f\u5c3e\u65f6\u95f4_ \u3011\u3002\n\n\u6700\u540e\u518d\u63d0\u4e00\u4e0b\u8fd9\u9898\u7684\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff1a\n\n- \u6ce8\u610f\u7528\u6570\u7ec4\u5b58\u50a8\u65f6\uff0c\u8981\u628a\u9898\u76ee\u7ed9\u51fa\u7684 $X$ \u548c $Y$ \u5750\u6807\uff0c $n$ \u548c $m$ \u53cd\u8fc7\u6765\u3002\n- \u6ce8\u610f\u5de6\u4e0b\u89d2\u624d\u662f $(1,1)$ \uff0c\u8fd9\u8bf4\u660e\u8bfb\u5165\u540e**\u8981\u628a\u8349\u573a\u5730\u56fe\u4e0a\u4e0b\u53cd\u8f6c**\u3002\n\n\u6700\u7ec8\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define rgt register int\n#define ll long long\nusing namespace std;\n\nconst int mxn = 111;\n\nchar tmp[mxn][mxn],mp[mxn][mxn];\n\nint n,m,sx,sy,hd=0,tl=1,s=0;   //hd\u548ctl\u4e3a\u961f\u9996\u548c\u961f\u5c3e\u6307\u9488\n\nint px[8]={-1,-1,-1,0,0,1,1,1};\nint py[8]={-1,0,1,-1,1,-1,0,1};\n\nstruct mode_que{\n\tint x;\n\tint y;\n\tint time;\n}que[mxn*mxn]; \n//\u624b\u5199\u961f\u5217\uff0c\u4e2a\u4eba\u611f\u89c9STL\u592a\u6162\n\ninline int work(){\n\tque[tl].time=0;  //\u8d77\u59cb\u65f6\u95f4\u4e3a0\n\tque[tl].x=sx;\n\tque[tl].y=sy;\n\tmp[sx][sy]='*';  //\u6807\u8bb0\n\ts--;   //\u8d77\u70b9\u88ab\u4e73\u8349\u5360\u9886\uff0cs-1\n\twhile(hd!=tl){\n\t\thd++;\n\t\tfor(rgt tpx,tpy,i=0;i<8;i++){\n\t\t\ttpx=que[hd].x+px[i];\n\t\t\ttpy=que[hd].y+py[i];   //\u62d3\u5c55\u65b0\u7684\u5750\u6807\n\t\t\tif(tpx<=n&&tpy<=m&&tpx>0&&tpy>0&&mp[tpx][tpy]=='.'){\n\t\t\t\ts--;   //\u5360\u9886\u683c\u5b50\n\t\t\t\ttl++;   //\u5165\u961f\n\t\t\t\tque[tl].x=tpx;\n\t\t\t\tque[tl].y=tpy;\n\t\t\t\tque[tl].time=que[hd].time+1;  \n\t\t\t\tmp[tpx][tpy]='*';   //\u6807\u8bb0\n\t\t\t\tif(s==0){   //\u5360\u9886\u5b8c\u4e86\n\t\t\t\t\treturn que[tl].time;   //\u8fd4\u56de\u7b54\u6848\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tchar tch;\n\tscanf(\"%d%d%d%d\",&m,&n,&sy,&sx);   //x\u548cy\u53cd\u8fc7\u6765\u8bfb\u5165\uff0cn\u548cm\u53cd\u8fc7\u6765\u8bfb\u5165\n    \n\tfor(rgt i=1;i<=n;i++){\n\t\tscanf(\"%c\",&tch);   //\u5e72\u6389\u6362\u884c\u7b26\n\t\tfor(rgt j=1;j<=m;j++){\n\t\t\tscanf(\"%c\",&tmp[i][j]);  //\u8bfb\u5165\u521d\u59cb\u8349\u573a\u5730\u56fe\n\t\t\tif(tmp[i][j]=='.')\n\t\t\t\ts++;  //\u7edf\u8ba1\u7267\u8349\u7684\u683c\u5b50\n\t\t}\n\t}\n    \n\tfor(rgt i=1;i<=n;i++){\n\t\tfor(rgt j=1;j<=m;j++){\n\t\t\tmp[i][j]=tmp[n-i+1][j]; \n\t\t}\n\t}  //\u53cd\u8f6c\u5730\u56fe\n    \n\tprintf(\"%d\",work());\n    \n\treturn 0;\n}\n```\n",
        "postTime": 1580187081,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Milkweed\u7684\u5165\u4fb5Invasion of the Milkweed\u3011"
    },
    {
        "content": "\u4e00\u9053BFS\u7ecf\u5178\u9898\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4e0d\u8fc7\u9898\u76ee\u8fd8\u662f\u6bd4\u8f83\u5751\u7684\uff0c\u6709\u51e0\u4e2a\u70b9\u9700\u8981\u7ec6\u8bfb\u9898\u76ee\u624d\u80fd\u53d1\u73b0\uff08\u672c\u849f\u84bb\u88ab\u5751\u4e86N\u6b21\uff09\n\n\u6211\u7684\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1aBFS\u4ece\u8d77\u70b9\u5f00\u641c\uff0c\u8bb0\u5f55\u5230\u6bcf\u4e00\u4e2a\u70b9\u7684\u6b65\u6570\uff0c\u7531\u4e8e\u4e73\u8349\u8513\u5ef6\u7684\u65f6\u95f4\u662f\u8d8a\u5f80\u540e\u641c\u8d8a\u540e\uff0c\u6bcf\u6b21\u6c42\u4e00\u4e0b\u6700\u5927\u6b65\u6570\u5373\u53ef\n\n\u5751\u70b9\u662f\u8fd9\u6837\u7684\uff1a\n\nNo.1 y\u662f\u884c x\u662f\u5217\n\nNo.2 \u4ea4\u6362\u4e4b\u540e\uff0cx\u8fd8\u8981=\uff08n-x+1\uff09(\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff09\n\nNo.3 \u516b\u65b9\u5411\n\n\u6ce8\u610f\u4e00\u4e0b\u5373\u53ef\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int dx[]={0,-1,0,1,0,-1,-1,1,1};\nconst int dy[]={0,0,1,0,-1,-1,1,1,-1};\nint n,m,M,x,y,b[200][200],c[40000][5];\nchar ch;\nstring st;\nvoid bfs()\n{\n    int h=0,t=1,cx,cy;\n    b[x][y]=1;\n    c[1][1]=x;\n    c[1][2]=y;\n    c[1][3]=0;//\u521d\u59cb\u5316\n    while(h<t)\n    {\n        h++;\n        for(int i=1;i<=8;i++)\n        {\n            cx=c[h][1]+dx[i];\n            cy=c[h][2]+dy[i];//\u62d3\u5c55\u4f4d\u7f6e\n            if(cx<1||cy<1||cx>n||cy>m||b[cx][cy])continue;//\u8d8a\u754c\u6216\u904d\u5386\u8fc7\u6216\u6709\u77f3\u5934\n            t++;\n            c[t][1]=cx;\n            c[t][2]=cy;\n            c[t][3]=c[h][3]+1;\n            M=max(M,c[t][3]);\n            b[cx][cy]=1;//\u52a0\u5165\u961f\u5217,\u6c42\u6700\u5927\u503c\n        }\n    }\n}\nint main()\n{\n    cin>>m>>n>>x>>y;\n    swap(x,y);\n    x=n-x+1;//\u4ea4\u6362\n    getline(cin,st);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            ch=getchar();\n            if(ch=='*')b[i][j]=1;\n        }\n        getline(cin,st);\n    }//\u8bfb\u5165\u9884\u5904\u7406\n    bfs();//\u5e7f\u641c\u4ece\u8d77\u70b9\u904d\u5386\n    cout<<M;//\u8f93\u51fa\n    return 0;//\u534e\u4e3d\u7684\u7ed3\u675f \n}\n```\n",
        "postTime": 1568550917,
        "uid": 222849,
        "name": "\u6c5f\u5c71_\u8fdc\u65b9",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2960 \u3010[USACO09OCT]Milkweed\u7684\u5165\u4fb5Invasion of the Milkweed\u3011"
    }
]