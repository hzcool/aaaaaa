[
    {
        "content": "\u672c\u573a\u6bd4\u8d5b\u6700\u96be\u7684\u9898\u76ee\uff0c\u96be\u5ea6\u8fdc\u8fdc\u5927\u4e8eT4\uff0c\u5176\u5b9e\u662f\u4e00\u9053\u6a21\u62df+\u7ed3\u8bba\u9898\u3002\n\n\u9996\u5148\u8f93\u5165\u7684\u4e00\u5768\u5b57\u7b26\u4e32\u8981\u5148\u89e3\u6790\uff0c\u5229\u7528\u6808\u6765\u5efa\u8868\u8fbe\u5f0f\u6811\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u5c0f\u6a21\u62df\uff0c\u76f8\u4fe1\u6b63\u5e38\u4eba\u90fd\u4f1a\u5427\u3002\n\n\u5bf9\u4e8e\u975e\u8fd0\u7b97\uff0c\u6211\u76f4\u63a5\u7528\u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b\uff0c\u4e0b\u4f20\u6807\u8bb0\u8ba9\u5b50\u6811\u4fe1\u606f\u90fd\u53cd\u4e00\u4e0b\u3002\uff08\u5176\u5b9e\u6ca1\u5fc5\u8981\uff0c\u5f53\u521d\u8fd9\u6837\u5199\u662f\u56e0\u4e3a\u89c9\u5f97\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u4e8c\u53c9\u6bd4\u8f83\u7f8e\uff0c\u65b9\u4fbf\u540e\u7eed\u5904\u7406\uff09\n\n\u9898\u76ee\u91cc\u6709\u4e2a\u4fe1\u606f\u662f\u201c\u6bcf\u4e2a\u53d8\u91cf\u5728\u8868\u8fbe\u5f0f\u4e2d\u51fa\u73b0\u6070\u597d\u4e00\u6b21\u201d\uff0c\u800c\u6bcf\u4e2a\u8be2\u95ee\u53ea\u6539\u53d8\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u8fd9\u5bf9\u539f\u7b54\u6848\u6765\u8bf4\u5c31\u4ea7\u751f\u4e24\u4e2a\u53ef\u80fd\uff1a\u53d8\u6216\u4e0d\u53d8\u3002\u8fd9\u542c\u8d77\u6765\u662f\u4e00\u53e5\u5e9f\u8bdd\uff0c\u5176\u5b9e\u8574\u542b\u7684\u610f\u601d\u662f\uff1a\u6709\u4e9b\u53d8\u91cf\u5bf9\u6574\u4e2a\u8868\u8fbe\u5f0f\u5176\u51b3\u5b9a\u4f5c\u7528\uff0c\u5176\u6539\u53d8\u5219\u539f\u7b54\u6848\u4e5f\u6539\u53d8\uff1b\u6709\u4e9b\u53d8\u91cf\u5bf9\u6574\u4e2a\u8868\u8fbe\u5f0f\u6839\u672c\u6ca1\u7528\uff0c\u5176\u53d8\u4e0d\u53d8\u539f\u7b54\u6848\u90fd\u4e0d\u53d8\u3002\n\n\u8bf4\u660e\u767d\u4e00\u70b9\uff0c\u5c31\u662f`1 & x = x` \uff0c`0 | x= x`  \uff0c\u8fd9\u4e24\u4e2a\u516c\u5f0f\u91cc\u7684 $x$ \u5c31\u8d77\u4e86\u51b3\u5b9a\u6027\u4f5c\u7528\uff0c\u800c `0 & x = 0` \uff0c`1 | x= 1` \u7684 $x$ \u5c31\u662f\u4e00\u4e2a\u5e9f\u7269\u3002\n\n\u90a3\u6211\u4eec\u5c31\u7ed9\u6811\u4e0a\u6bcf\u4e2a\u7ed3\u70b9\u5efa\u4e00\u4e2a\u5e9f\u7269\u6807\u8bb0\uff0c\u5bf9`&` \u6765\u8bf4\uff0c\u5982\u679c\u4e00\u68f5\u5b50\u6811\u662f $0$\uff0c\u90a3\u53e6\u5916\u4e00\u68f5\u5b50\u6811\u5185\u6240\u6709\u53f6\u7ed3\u70b9\u90fd\u5e94\u8be5\u6253\u4e0a\u5e9f\u7269\u6807\u8bb0\uff0c\u5bf9`|`\u540c\u7406\u3002\n\n\u5148\u8ba1\u7b97\u51fa\u539f\u8868\u793a\u7b54\u6848`ans`\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6ca1\u88ab\u6807\u8bb0\u7684\u5c31\u8bf4\u660e\u5b83\u5f80\u4e0a\u5230\u6839\u8282\u70b9\u90fd\u4e0d\u5b58\u5728\u4e00\u79cd\u8ba9\u5b83\u53d8\u6210\u5e9f\u7269\u7684\u8fd0\u7b97\uff0c\u6240\u4ee5\u7b54\u6848\u662f`!ans`\uff0c\u5982\u679c\u6709\u6807\u8bb0\u5219\u7b54\u6848\u4f9d\u65e7\u4e3a`ans`\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+q)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\nconst LL mod = 1e9 + 7;\nconst int N = 1000005;\n\nchar s[N];\nint a[N];\nint son[N][2], ck;\nint flag[N], c[N];\nint n, q;\nint dfs(int u, int g) {\n    a[u] ^= g;\n    if (u <= n) {\n        return a[u];\n    }\n    int x = dfs(son[u][0], g ^ flag[son[u][0]]);\n    int y = dfs(son[u][1], g ^ flag[son[u][1]]);\n    if (a[u] == 2) {\n        if (x == 0) c[son[u][1]] = 1;\n        if (y == 0) c[son[u][0]] = 1;\n        return x & y;\n    } else {\n        if (x == 1) c[son[u][1]] = 1;\n        if (y == 1) c[son[u][0]] = 1;\n        return x | y;\n    }\n}\nvoid dfs2(int u) {\n    if (u <= n) return;\n    c[son[u][0]] |= c[u];\n    c[son[u][1]] |= c[u];\n    dfs2(son[u][0]);\n    dfs2(son[u][1]);\n}\nint main() {\n    // freopen(\"expr.in\", \"r\", stdin);\n    // freopen(\"expr.out\", \"w\", stdout);\n    gets(s);\n    scanf(\"%d\", &n);\n    ck = n;\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n    stack<int> b;\n    for (int i = 0; s[i]; i += 2) {\n        if (s[i] == 'x') {\n            int x = 0;\n            i++;\n            while (s[i] != ' ') {\n                x = x * 10 + s[i] - '0';\n                i++;\n            }\n            i--;\n            b.push(x);\n        } else if (s[i] == '&') {\n            int x = b.top();\n            b.pop();\n            int y = b.top();\n            b.pop();\n            b.push(++ck);\n            a[ck] = 2;\n            son[ck][0] = x;\n            son[ck][1] = y;\n        } else if (s[i] == '|') {\n            int x = b.top();\n            b.pop();\n            int y = b.top();\n            b.pop();\n            b.push(++ck);\n            a[ck] = 3;\n            son[ck][0] = x;\n            son[ck][1] = y;\n        } else if(s[i] == '!'){\n            flag[b.top()] ^= 1;\n        }\n    }\n    int ans = dfs(ck, flag[ck]);\n    dfs2(ck);\n    scanf(\"%d\", &q);\n    while (q--) {\n        int x;\n        scanf(\"%d\", &x);\n        printf(\"%d\\n\", c[x] ? ans : !ans);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1605186456,
        "uid": 54357,
        "name": "OMG_wc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7073 \u3010\u8868\u8fbe\u5f0f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u8003\u573a\u4e0a\u60f3\u51fa\u6b63\u89e3\u4f46\u662f\u6253\u9519\u4e86\u4e00\u4e2a\u5b57\u6bcd\u2026\u2026\n\n# ~~\u5371~~\n\n\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\n\n---\n## \u5e72\u8d27\u9884\u5907\uff1a\n\n[$\\color{blue}\\Large\\bold{\\texttt{sscanf}}$](https://zh.cppreference.com/w/c/io/fscanf)\n\n```cpp\nint sscanf(const char *buffer, const char *format, ...)\n```\n\u7528\u6cd5\u7c7b\u4f3c`scanf`\uff0c\u53ea\u4e0d\u8fc7\u5728\u6700\u524d\u9762\u591a\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32`buffer`\u3002\n\n\u4ece\u7a7a\u7ec8\u6b62\u5b57\u7b26\u4e32`buffer`\u8bfb\u53d6\u6570\u636e,\u6309\u7167`format`\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u6307\u5b9a\u4f4d\u7f6e\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n```cpp\nchar s[] = \"123 4.56 abc\";\nint a;\ndouble b;\nchar c[10];\nsscanf(s, \"%d%lf%s\", &a, &b, c);\n//a=123, b=4.56, c=\"abc\"\n```\n---\n## ~~\u5c0f\u5b66\u751f\u90fd\u80fd\u770b\u61c2\u7684~~\u6b63\u6587\n\n\u540e\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c\uff1a\n\n\u663e\u7136\u7528**\u6808**\u3002\n\n\u770b\u770b[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P1449)\u5c31\u5e94\u8be5\u61c2\u4e86\u5427\u2026\u2026\n\n\u5efa\u8bae\u4f7f\u7528\u624b\u5199\u6808\uff0c\u56e0\u4e3a\u5b83\u5f88\u597d\u5199\uff0c\u5e38\u6570\u8fd8\u4f4e ~~\uff08\u81f3\u5c11`CCF`\u4e0d\u4f1a\u7ed9\u4f60\u5f00`O2`\uff09~~\n\n---\n\u8fd9\u9053\u9898\u76ee\u6700\u7ec8\u8ba9\u6211\u4eec\u6c42\u7684\u662f\u67d0\u4e00\u4e2a\u53d8\u91cf\u6539\u53d8\u4f1a\u4e0d\u4f1a\u5bf9\u6700\u7ec8\u7684\u503c\u9020\u6210\u5f71\u54cd\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8bbe\u7acb$f$\u6570\u7ec4\uff0c\u7528$f_i$\u8868\u793a\u7b2c$i$\u4e2a\u6570\u6216\u8fd0\u7b97\u7684\u6539\u53d8\u4f1a**\u76f4\u63a5**\u5f71\u54cd\u5230\u54ea\u4e00\u4e2a\u8fd0\u7b97\u7684\u7ed3\u679c\u3002\u7279\u522b\u7684\uff0c\u82e5$f_i=0$\uff0c\u5219\u8868\u793a\u7b2c$i$\u4e2a\u6570\u6216\u8fd0\u7b97\u5bf9\u5176\u4ed6\u7ed3\u679c\u90fd\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u90a3\u600e\u4e48\u5224\u65ad$f_i$\u662f\u51e0\u5462\uff1f\n\n1. \u5f53\u8fd0\u7b97\u4e3a$x\\&y$\u65f6\uff1a\n\n>$x$\u4e3a$0$\u65f6\uff0c$y$\u65e0\u6cd5\u9020\u6210\u4efb\u4f55\u5f71\u54cd\uff1b\n\n>$y$\u4e3a$0$\u65f6\uff0c$x$\u65e0\u6cd5\u9020\u6210\u4efb\u4f55\u5f71\u54cd\u3002\n\n2. \u5f53\u8fd0\u7b97\u4e3a$x|y$\u65f6\uff1a\n\n>$x$\u4e3a$1$\u65f6\uff0c$y$\u65e0\u6cd5\u9020\u6210\u4efb\u4f55\u5f71\u54cd\uff1b\n\n>$y$\u4e3a$1$\u65f6\uff0c$x$\u65e0\u6cd5\u9020\u6210\u4efb\u4f55\u5f71\u54cd\u3002\n\n3. \u5f53\u8fd0\u7b97\u4e3a$!x$\u65f6\uff1a\n\n>$x$\u4e00\u5b9a\u4f1a\u9020\u6210\u5f71\u54cd\u3002\n\n\u90a3\u4e48\u4fee\u6539\u4e00\u4e2a\u53d8\u91cf\uff0c\u53ea\u8981\u4ece\u5b83\u5f80\u4e0a\u8d70\uff0c\u770b\u6700\u7ec8\u80fd\u4e0d\u80fd\u5f71\u54cd\u6700\u540e\u4e00\u4e2a\u8fd0\u7b97\u7684\u7ed3\u679c\u5373\u53ef\u3002\n\n~~\u56e0\u4e3a\u6c11\u95f4\u6570\u636e\u592a\u5f31\u6240\u4ee5\u4e0d\u52a0\u4f18\u5316\u5c31\u6ee1\u5206\u60f9~~\n\n\u66f4\u591a\u7684\u7ec6\u8282\u8fd8\u662f\u770b\u4ee3\u7801\u5427\u2026\u2026\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct st  //\u4e00\u4e2a\u8fd0\u7b97\u5bf9\u8c61\uff0c\u5305\u542b\u4e86\u503c(v)\u548c\u4f4d\u7f6e(id)\n{\n\tst() {}\n\tst(int id, int v) : id(id), v(v) {}\n\tint id, v;\n}\ttx, ty, s[1000001];  //s\u662f\u6808\nchar ss[1111];  //\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\nint n, q, res, x, y, a[1000001], e[2000001], l = 0, xe[1000001], f[2000001] = { 0 }, stop = 0;  //stop\u4e3a\u6808\u9876\n/*\ne\u8868\u793a\u6bcf\u4e2a\u8fd0\u7b97\uff1a\n\u82e5e[i]>0\u5219e[i]\u5c31\u662f\u9898\u76ee\u4e2d\u7684x[e[i]]\n\u82e5e[i]=-1\u5219\u8868\u793a&\u8fd0\u7b97\n\u82e5e[i]=-2\u5219\u8868\u793a|\u8fd0\u7b97\n\u82e5e[i]=-3\u5219\u8868\u793a!\u8fd0\u7b97\nl\u662fe\u7684\u957f\u5ea6\nxe[i]\u8868\u793ax[i]\u5728e\u4e2d\u7684\u4f4d\u7f6e\nf\u610f\u4e49\u540c\u4e0a\n*/\ninline void push(st x)  //\u5165\u6808\n{\n\ts[++stop] = x;\n}\ninline void pop()  //\u51fa\u6808\n{\n\tstop--;\n}\ninline st top()  //\u6808\u9876\n{\n\treturn s[stop];\n}\nint main()\n{\n\tfreopen(\"expr.in\", \"r\", stdin);    //\u4e07 \u6076\\\\\n\tfreopen(\"expr.out\", \"w\", stdout);  //\u4e4b \u6e90\\\\\n\twhile ( 1 )\n\t{\n\t\tscanf(\"%s\", ss);\n\t\tif ( ss[0] >= '0' && ss[0] <= '9' ) break;\n\t\tl++;\n\t\tif ( ss[0] == 'x' )\n\t\t{\n\t\t\tsscanf(ss + 1, \"%d\", e + l);  //\u89c1\u5e72\u8d27\n\t\t\txe[e[l]] = l;\n\t\t}\n\t\tif ( ss[0] == '&' ) e[l] = -1;\n\t\tif ( ss[0] == '|' ) e[l] = -2;\n\t\tif ( ss[0] == '!' ) e[l] = -3;\n\t}\n\tsscanf(ss, \"%d\", &n);  //\u89c1\u5e72\u8d27\n\tfor ( int i = 1 ; i <= n ; i++ ) scanf(\"%d\", a + i);\n\tfor ( int i = 1 ; i <= l ; i++ )  //\u6c42\u503c\u5e76\u4e14\u7ed9f\u8d4b\u503c\n\t{\n\t\tif ( e[i] > 0 ) push(st(i, a[e[i]]));\n\t\tif ( e[i] == -3 )  //!\n\t\t{\n\t\t\ttx = top();\n\t\t\tpop();\n\t\t\tpush(st(i, !tx.v));\n\t\t\tf[tx.id] = i;\n\t\t}\n\t\tif ( e[i] == -2 )  //|\n\t\t{\n\t\t\ttx = top();\n\t\t\tpop();\n\t\t\tty = top();\n\t\t\tpop();\n\t\t\tpush(st(i, tx.v || ty.v));\n\t\t\tif ( !ty.v ) f[tx.id] = i;\n\t\t\tif ( !tx.v ) f[ty.id] = i;\n\t\t}\n\t\tif ( e[i] == -1 )  //&\n\t\t{\n\t\t\ttx = top();\n\t\t\tpop();\n\t\t\tty = top();\n\t\t\tpop();\n\t\t\tpush(st(i, tx.v && ty.v));\n\t\t\tif ( ty.v ) f[tx.id] = i;\n\t\t\tif ( tx.v ) f[ty.id] = i;\n\t\t}\n\t}\n\tres = top().v;  //\u53d6\u5f97\u8fd0\u7b97\u7ed3\u679c\n\tscanf(\"%d\", &q);\n\tfor ( int i = 1 ; i <= q ; i++ )\n\t{\n\t\tscanf(\"%d\", &x);\n\t\tfor ( y = xe[x] ; f[y] ; y = f[y] );  //\u4e00\u8def\u627e\u5230\u5b83\u6700\u7ec8\u4f1a\u6539\u53d8\u54ea\u4e2a\u503c\n        //\u663e\u7136\u6700\u540e\u4e00\u4e2a\u8fd0\u7b97\u662fl\uff0c\u90a3\u4e48\u5f53\u5b83\u4f1a\u6539\u53d8l\u65f6\u5c06\u539f\u7b54\u6848\u53d6\u53cd\n\t\tprintf(\"%d\\n\", y == l ? !res : res);\n\t}\n\treturn 0;\n}\n```\n\n## \u540e\u8bb0\n\n~~\u6211\u61d2\u5f97\u5199~~$\\color{white}\\text{\u88ab\u4f60\u53d1\u73b0\u4e86qwq}$",
        "postTime": 1605091607,
        "uid": 127949,
        "name": "cmk666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7073 \u3010\u8868\u8fbe\u5f0f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "# ~~\u4e00\u9053\u5f88\u5bb9\u6613\u60f3\u5230\u4f46\u662f\u505a\u4e0d\u51fa\u7684\u9898\u2026\u2026~~\n\u540e\u7f00\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u795e\u5947\u7684\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u6808\uff0c\u8fd9\u91cc\u53ef\u4ee5\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u662f\u6808\u2014\u2014\u540e\u7f00\u8868\u8fbe\u5f0f\u7684\u6570\u5b57\u5728\u5b83\u6240\u5904\u7b26\u53f7\u524d\u9762\u6240\u4ee5\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u7b26\u53f7\u53ef\u4ee5\u4e0e\u76f8\u90bb\u7684\u7b26\u53f7\u6216\u8005\u6570\u5b57\u7ec4\u6210\u4e00\u4e2a\u8868\u8fbe\u5f0f\u96c6\u5408\u3002\u8fd9\u662f\u6211\u4eec\u5efa\u6811\u7684\u5173\u952e\u3002\n\n------------\n\n\u5efa\u6811\u662f\u5bb9\u6613\u60f3\u5230\u7684\uff0c\u6211\u4eec\u5229\u7528\u6808\u6765\u5efa\u6811\uff0c\u5f53\u4e00\u4e2a\u4e8c\u5143\u7b26\u53f7\u8fdb\u5165\u65f6\uff0c\u53d6\u51fa\u6808\u9876\u4e24\u4e2a\u5143\u7d20\uff0c\u518d\u628a\u8fd9\u4e2a\u6574\u4f53\u5165\u6808\u3002\u540c\u65f6\u53ef\u4ee5\u5728\u5efa\u6811\u7684\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u3002\u81f3\u4e8e\u53d6\u53cd\u8fd0\u7b97\uff0c\u53ea\u9700\u8981\u5c06\u6808\u9876\u7684\u7ed3\u679c\u53d6\u53cd\u5373\u53ef\u3002\n\n\n------------\n\n\u5f53x\u62160\u6216\u8005x\u548c1\u65f6\uff0cx\u53d6\u53cd\uff0c\u503c\u53d1\u751f\u6539\u53d8\n\n\n------------\n\n\u6784\u6811\u540e\uff0c\u7136\u540e\u5728\u6811\u4e0a\u8fd0\u7528\u5982\u4e0a\u89c4\u5219\u627e\u51fa\u90a3\u4e9b\u503c\u6539\u53d8\u65f6\u6574\u4e2a\u6811\u7684\u503c\u4f1a\u6539\u53d8\u3002\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u8fc7\u7a0b\u3002\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <string>\n#include <map>\nusing namespace std;\nconst int N=1000100;\nint n,m,i,t,t1,len,mp[N],z[N],res1,a[N],p,k;\nchar c[N];\nstruct Node \n{\n\tint z,y,res,fh;   \n}jd[1000100];\nvoid tree(int x)\n{\n\tif (jd[x].fh==-1)\n\t mp[jd[x].z]=1;\n    else\n     {\n     \tif (jd[jd[x].z].res^jd[x].fh) tree(jd[x].y);\n     \tif (jd[jd[x].y].res^jd[x].fh) tree(jd[x].z);\n\t }\n    return;\n} \nint sz(int x)\n{\n\tint m=0;\n\twhile (c[x]>='0'&&c[x]<='9') \n\t m=m*10+(c[x]-48),x=x+1;\n\t return m;\n}\n int main()\n {\n    gets(c);\n    len=strlen(c);\n    scanf(\"%d\",&n);\n     for (i=1;i<=n;i++)\n      scanf(\"%d\",&a[i]);\n     t=0;\n     t1=0;\n      for (i=0;i<=len-1;i++)\n       if (c[i]=='x')\n        {\n        \tk=sz(i+1);\n        \tjd[++t].res=a[k];\n        \tjd[t].fh=-1;\n        \tjd[t].z=k;\n        \tjd[t].y=k;\n        \tz[++t1]=t;\n\t\t}\n\t\telse\n\t    if (c[i]=='&')\n\t    {\n\t    \tjd[++t].fh=0;\n\t    \tjd[t].y=z[t1];\n\t    \tjd[t].z=z[--t1];\n\t    \tjd[t].res=(jd[jd[t].y].res)&&(jd[jd[t].z].res);\n\t    \tz[t1]=t;\n\t\t}\n\t\telse\n\t\tif (c[i]=='|')\n\t\t{\n\t    \tjd[++t].fh=1;\n\t    \tjd[t].y=z[t1];\n\t    \tjd[t].z=z[--t1];\n\t    \tjd[t].res=(jd[jd[t].y].res)||(jd[jd[t].z].res);\n\t    \tz[t1]=t;\n\t\t}\n\t\telse\n\t\tif (c[i]=='!')\n\t    \tjd[z[t1]].res=!(jd[z[t1]].res);\n\t\tres1=jd[t].res;\n\t\tmemset(mp,0,sizeof(mp)); \n\t\ttree(t);\n\t  scanf(\"%d\",&m);\n\t   for (i=1;i<=m;i++)\n\t    {\n\t    \tscanf(\"%d\",&p);\n\t    \tif (mp[p]==1)\n\t    \t printf(\"%d\\n\",!res1);\n\t    \t else\n\t    \t printf(\"%d\\n\",res1);\n\t\t}\n      return 0;\n  }\n```\n\u795d\u5927\u5bb6csp\u8003\u51fa\u597d\u6210\u7ee9\uff01\uff01\uff01",
        "postTime": 1605045224,
        "uid": 233394,
        "name": "\u9690\u85cf\u4eba\u7269001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7073 \u3010\u8868\u8fbe\u5f0f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "## \u9898\u89e3 P7073 \u8868\u8fbe\u5f0f\n\n\u9898\u76ee\u8981\u6c42\u8fd9\u91cc\u5c31\u4e0d\u518d\u7ec6\u8bb2\u4e86\n\n\u6211\u4eec\u76f4\u63a5\u8fdb\u5165\u6b63\u89e3\u90e8\u5206\n---\n\n\u9996\u5148\u5904\u7406\u5b57\u7b26\u4e32 $s$\u3002\n\n\u56e0\u4e3a $s$ \u662f\u4e00\u4e2a\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\u5f88\u9002\u5408\u7528\u4e00\u9897\u4e8c\u53c9\u6811\u5b58\u50a8\uff0c\u6bcf\u4e00\u4e2a\u7b26\u53f7\u548c\u53d8\u91cf\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u90a3\u4e48\uff0c\u8fd9\u9897\u4e8c\u53c9\u6811\u5e94\u8be5\u5f00\u591a\u5927\u5462\uff1f\n\n\u6211\u4eec\u6ce8\u610f\u5230\u9898\u76ee\u6570\u636e\u8303\u56f4\u5199\u5230\uff1a\n\n$1 \\le |s| \\le 1 \\times 10^6$\n\n#### \u90a3\u4e48\u8003\u8651\u6700\u574f\u60c5\u51b5\uff1a\u5373\u4f7f\u8f93\u5165\u7684 $s$ \u9664\u4e86\u5f00\u59cb\u662f $x_{1}$ \u4e4b\u540e\u5168\u90fd\u662f\u975e\u8fd0\u7b97\u7b26(!)\uff0c\u8fd9\u4e2a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7$5 \\times 10^5 $\n\n\u6240\u4ee5\u6211\u4eec\u7684\u6811\u5c31\u8981\u5f00\u8fd9\u4e48\u5927\u3002\n\n\u5b57\u7b26\u4e32\u5904\u7406\u7684\u4ee3\u7801\u90e8\u5206\uff1a\n```cpp\n//\u5982\u679c\u4e0d\u4f1a\u5904\u7406\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u5148\u53bb\u5c1d\u8bd5P1449-\u540e\u7f00\u8868\u8fbe\u5f0f\nstring s;\nint n;\nint a[500010];//\u8bb0\u5f55\u53d8\u91cf\u548c\u8282\u70b9 \nint sta[100010],p=0;//\u6808\uff0c\u5b9a\u4e49sta\u662f\u56e0\u4e3a\u4e07\u80fd\u5934\u7684\u837c\u6bd2\nint cnt;//\u6bcf\u4e2a\u8fd0\u7b97\u7b26\u7f16\u53f7\nint tree[500010][2];//\u7ef4\u62a4\u4e8c\u53c9\u6811\nint what[500010];//\u8bb0\u5f55\u8282\u70b9\u7c7b\u578b\uff0c\u53d8\u91cf\u5bf9\u5e940\uff0c&\u5bf9\u5e941\uff0c|\u5bf9\u5e942\uff0c\uff01\u5bf9\u5e943\n...\n\tcnt=n;//\u8fd0\u7b97\u7b26\u4ecen+1\u5f80\u540e\u7f16\u53f7\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]=='x'){//\u5982\u679c\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u53d8\u91cf\n\t\t\ti++;\n\t\t\tint f=0;\n\t\t\twhile(isdigit(ch)){\n\t\t\t\tf=f*10+s[i]-'0';\n\t\t\t\ti++;\n\t\t\t} //\u7528\u7c7b\u4f3c\u4e8e\u5feb\u8bfb\u7684\u65b9\u6cd5\u6c42\u51fa\u53d8\u91cf\u4e0b\u6807\n\t\t\tsta[++p]=f;//\u5165\u6808\n\t\t\twhat[f]=0;//\u8bb0\u5f55\u7c7b\u578b\n\t\t}else if(s[i]=='&'){//\u8f93\u5165'&'\n\t\t\twhat[++cnt]=1;//\u8bb0\u5f55\u65b0\u7684\u8fd0\u7b97\u7b26\n\t\t\ttree[cnt][1]=sta[p--];\n\t\t\ttree[cnt][0]=sta[p--];\n\t\t\ta[cnt]=a[tree[cnt][0]]&a[tree[cnt][1]];\n\t\t\t//\u5728\u6808\u9876\u5143\u7d20\u5f39\u51fa\u7684\u540c\u65f6\u8bb0\u5f55\u5de6\u53f3\u513f\u5b50\u5e76\u8ba1\u7b97\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\n\t\t\tsta[++p]=cnt;//\u5165\u6808\n\t\t}else if(s[i]=='|'){//\u8f93\u5165'|'\n\t\t\twhat[++cnt]=2;\n\t\t\ttree[cnt][1]=sta[p--];\n\t\t\ttree[cnt][0]=sta[p--];\n\t\t\ta[cnt]=a[tree[cnt][0]]|a[tree[cnt][1]];\n\t\t\tsta[++p]=cnt;\n\t\t\t//\u540c\u7406\n\t\t}else if(s[i]=='!'){//\u8f93\u5165'!'\n\t\t\twhat[++cnt]=3;\n\t\t\ttree[cnt][0]=sta[p--];\n\t\t\ta[cnt]=!a[tree[cnt][0]];\n\t\t\tsta[++p]=cnt;\n\t\t\t//\u540c\u7406\n\t\t}\n\t}\n```\n\n\u63a5\u7740\u5c31\u662f\u6700\u5173\u952e\u7684\u90e8\u5206\u4e86\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u5b9e\u73b0\uff1a\n\n### \u7edf\u8ba1\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u8868\u8fbe\u5f0f\uff0c\u82e5\u5b83\u7684\u503c\u6539\u53d8\uff0c\u5b83\u7684\u7236\u4eb2\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u5426\u4f1a\u6539\u53d8\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u5462\uff1f\u4e14\u542c\u6211\u6162\u6162\u9053\u6765\uff1a\n\n\u5982\u679c\u67d0\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u6539\u53d8\u4f1a\u6539\u53d8\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\n\n\u90a3\u4e48\u5b83\u7684\u6539\u53d8\u5fc5\u987b\u5148\u5f71\u54cd\u5230\u5b83\u7684\u7236\u4eb2\u6240\u5bf9\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\n\n\u7136\u540e\u5b83\u7684\u7236\u4eb2\u7684\u503c\u6539\u53d8\u53ef\u4ee5\u5f71\u54cd\u5230\u5b83\u7236\u4eb2\u7684\u7236\u4eb2\u6240\u5bf9\u8868\u8fbe\u5f0f\u7684\u503c\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u5b83\u53ef\u4ee5\u5f71\u54cd\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\n\n(\u4ee5\u4e0a\u4e0d\u7406\u89e3\u8005\u53ef\u4ee5\u901a\u8fc7\u6837\u4f8b\u6f14\u7b97\u5f97\u77e5)\n\n\u90a3\u4e48\u6211\u4eec\u4ece\u6839\u8282\u70b9\u5411\u4e0b\u904d\u5386\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4 $c$\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u503c\u7684\u6539\u53d8\u662f\u5426\u4f1a\u6539\u53d8\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\uff1b\n\n\u9996\u5148 $c_{root}=1$\u56e0\u4e3a\u5982\u679c\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u6539\u53d8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u4e00\u5b9a\u4f1a\u6539\u53d8\uff08\u5e9f\u8bdd\uff09\n\n### \u5bf9\u4e8e\u6bcf\u4e2a\u975e\u6839\u7684\u8282\u70b9\uff0c\u5982\u679c\u5b83\u7684\u503c\u6539\u53d8\u53ef\u4ee5\u4f7f\u5b83\u7236\u4eb2\u7684\u503c\u6539\u53d8\u7684\u8bdd\uff0c\n\n### \u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u5bf9\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u5f71\u54cd\u5c31\u7b49\u4ef7\u4e8e\u5176\u7236\u4eb2\u5bf9\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u5f71\u54cd\uff08\u6709\u70b9\u7ed5\uff09\n\n### \u5373$c_{i}=c_{father_{i}}$\n\n\u8fd9\u90e8\u5206\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\n```cpp\nint c[500010];//\u8bb0\u5f55\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\n\u00b7\u00b7\u00b7\n\tc[cnt]=1;//\u521d\u59cb\u5316\n\tfor(int i=cnt;i>n;i--){\n\t\tint l=tree[i][0],r=tree[i][1];//\u8bb0\u5f55\u5de6\uff0c\u53f3\u513f\u5b50\n\t\tif(what[i]==1){\n\t\t\tif(((!a[l])&a[r])!=a[i])c[l]=c[i];//\u5982\u679cl\u7684\u503c\u6539\u53d8\u4f1a\u4f7f\u5176\u7236\u4eb2\u7684\u503c\u6539\u53d8\uff0c\u90a3\u4e48\u7edf\u8ba1c[l]=c[father[l]]=c[i]\n\t\t\tif((a[l]&(!a[r]))!=a[i])c[r]=c[i];//\u540c\u7406\n\t\t}else if(what[i]==2){\n\t\t\tif(((!a[l])|a[r])!=a[i])c[l]=c[i];\n\t\t\tif((a[l]|(!a[r]))!=a[i])c[r]=c[i];//\u540c\u7406\n\t\t}else if(what[i]==3){\n\t\t\tc[l]=c[i];//\u56e0\u4e3aa[l]\u7684\u6539\u53d8\u4f1a\u4f7fa[father[l]]=!a[l]\u6539\u53d8\uff0c\u6240\u4ee5\u76f4\u63a5\u7edf\u8ba1c[l]=c[i]\n\t\t}\n\t}\n```\n\u6700\u540e\u6211\u4eec\u5c31\u53ef\u4ee5 $O(1)$ \u67e5\u8be2\u4e86\n\n\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring s;\nint n;\nint a[500010];\nint sta[100010],p=0;\nint zhi[500010],cnt;\nint tree[500010][2]; \nint what[500010];\nint c[500010];\nint main(){\n\tgetline(cin,s);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tcnt=n;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]=='x'){\n\t\t\ti++;\n\t\t\tint f=0;\n\t\t\twhile(isdigit(s[i])){\n\t\t\t\tf=f*10+s[i]-'0';\n\t\t\t\ti++;\n\t\t\t} \n\t\t\tsta[++p]=f;\n\t\t\twhat[f]=0;\n\t\t}else if(s[i]=='&'){\n\t\t\twhat[++cnt]=1;\n\t\t\ttree[cnt][1]=sta[p--];\n\t\t\ttree[cnt][0]=sta[p--];\n\t\t\ta[cnt]=a[tree[cnt][0]]&a[tree[cnt][1]];\n\t\t\tsta[++p]=cnt;\n\t\t}else if(s[i]=='|'){\n\t\t\twhat[++cnt]=2;\n\t\t\ttree[cnt][1]=sta[p--];\n\t\t\ttree[cnt][0]=sta[p--];\n\t\t\ta[cnt]=a[tree[cnt][0]]|a[tree[cnt][1]];\n\t\t\tsta[++p]=cnt;\n\t\t}else if(s[i]=='!'){\n\t\t\twhat[++cnt]=3;\n\t\t\ttree[cnt][0]=sta[p--];\n\t\t\ta[cnt]=!a[tree[cnt][0]];\n\t\t\tsta[++p]=cnt;\n\t\t}\n\t}\n\tc[cnt]=1;\n\tfor(int i=cnt;i>n;i--){\n\t\tint l=tree[i][0],r=tree[i][1];\n\t\tif(what[i]==1){\n\t\t\tif(((!a[l])&a[r])!=a[i])c[l]=c[i];\n\t\t\tif((a[l]&(!a[r]))!=a[i])c[r]=c[i]; \n\t\t}else if(what[i]==2){\n\t\t\tif(((!a[l])|a[r])!=a[i])c[l]=c[i];\n\t\t\tif((a[l]|(!a[r]))!=a[i])c[r]=c[i]; \n\t\t}else if(what[i]==3){\n\t\t\tc[l]=c[i]; \n\t\t}\n\t}\n\tint q;\n\tscanf(\"%d\",&q);\n\twhile(q--){\n\t\tint k;\n\t\tscanf(\"%d\",&k);\n\t\tprintf(\"%d\\n\",a[cnt]^c[k]);\n\t} \n\treturn 0;\n}\n```\n\n(\u8003\u573a\u4e0a\u7528\u7684\u662f\u6df1\u641c\u4e0d\u662f\u5faa\u73af\uff0c\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u7206)",
        "postTime": 1604800063,
        "uid": 147595,
        "name": "Dancing_Wave",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7073 \u8868\u8fbe\u5f0f"
    },
    {
        "content": "\u8bb2\u4e2a\u975e\u666e\u53ca\u7684\u6ca1\u8111\u5b50\u505a\u6cd5\u3002  \n\u8003\u573a\u6012\u7801 4.5KB\uff0c\u6c11\u95f4\u6570\u636e\u8c8c\u4f3c\u8fd8\u90fd\u8fc7\u4e86\uff08\n\n\u9996\u5148\u5efa\u8868\u8fbe\u5f0f\u6811\u7684\u8fc7\u7a0b\u5f88\u7b80\u5355\uff0c\u522b\u7684\u9898\u89e3\u90fd\u8bb2\u4e86\uff0c\u6211\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff08\n\n\u8003\u8651\u8bbe $f_u$ \u8868\u793a\u7ed3\u70b9 $u$ \u7684\u5b50\u6811\u5185\u8ba1\u7b97\u51fa\u7684\u5e03\u5c14\u503c\u3002  \n\u82e5 $u$ \u662f\u4e00\u4e2a\u4e0e\u8fd0\u7b97\u7b26\uff0c\u5219 $f_u = \\prod\\limits_{v \\in {\\rm son}(u)} f_v$\u3002  \n\u82e5 $u$ \u662f\u4e00\u4e2a\u6216\u8fd0\u7b97\u7b26\uff0c\u5219 $f_u = 1 - \\prod\\limits_{v \\in {\\rm son}(u)}(1-f_v)$\u3002\n\n\u8003\u573a\u4e0a\u5199\u51fa\u6765\u8fd9\u4e2a\uff0c\u6211\u5f53\u5373\u5c31\u60f3\u5230\u4e86 [P5281](/problem/P5281)\uff08  \n\u4e8e\u662f\u7531\u4e8e\u6211\u592a\u5f31\u8fd8\u6ca1\u5199\u8fc7\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u4e0d\u6562\u592a\u83bd\uff0c\u6211\u53ea\u5199\u4e86\u4e2a $O((n+q) \\log^2 n)$ \u7684\u6811\u5256 + \u7ebf\u6bb5\u6811\u7ef4\u62a4\u52a8\u6001\u94fe\u5206\u6cbb\uff08\u6216\u8005\u8bf4\u52a8\u6001 DP\uff09\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u4e5f\u53ef\u4ee5\u652f\u6301\uff1a\n - \u4fee\u6539\u975e\u4e34\u65f6\u800c\u662f\u6c38\u4e45\u751f\u6548\n - \u975e\u5e03\u5c14\u503c\u800c\u662f\u6982\u7387\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cassert>\n#include <cstring>\n#define ls (p << 1)\n#define rs (ls | 1)\nusing namespace std;\nconst int S = 2e6;\nconst int N = 2e5;\nint n,q,len,a[N + 5],tot;\nchar s[S + 5];\nint rev[N + 5],type[N + 5];\nint to[N + 5],pre[N + 5],first[N + 5];\ninline void add(int u,int v)\n{\n\tstatic int tot = 0;\n\tto[++tot] = v,pre[tot] = first[u],first[u] = tot;\n}\nint fa[N + 5],dep[N + 5],son[N + 5],sz[N + 5],top[N + 5],id[N + 5],ed[N + 5],rt;\nnamespace BUILDER\n{\n\tint st[N + 5],top;\n\tchar x;\n\tint num;\n\tvoid build()\n\t{\n\t\ttot = n;\n\t\ts[len] ^ ' ' && (s[++len] = ' ');\n\t\tfor(register int i = 1;i <= len;++i)\n\t\t\tif(s[i] == ' ')\n\t\t\t{\n\t\t\t\tif(x == '!')\n\t\t\t\t\trev[st[top]] ^= 1;\n\t\t\t\telse if(x == 'x')\n\t\t\t\t\tst[++top] = num,num = 0;\n\t\t\t\telse\n\t\t\t\t\ttype[++tot] = x == '|',\n\t\t\t\t\tfa[st[top]] = fa[st[top - 1]] = tot,\n\t\t\t\t\tadd(tot,st[top]),add(tot,st[top - 1]),\n\t\t\t\t\tst[--top] = tot;\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t\telse if(s[i] >= '0' && s[i] <= '9')\n\t\t\t\tnum = num * 10 + (s[i] ^ '0');\n\t\t\telse\n\t\t\t\tx = s[i];\n\t}\n}\nstruct Value\n{\n\tint cnt,v;\n\tinline Value(int x = 0)\n\t{\n\t\tif(x)\n\t\t\tcnt = 0,v = x;\n\t\telse\n\t\t\tcnt = v = 1;\n\t}\n\tinline Value(int a,int b)\n\t{\n\t\tcnt = a,v = b;\n\t}\n\tinline Value operator*(const Value &o) const\n\t{\n\t\treturn Value(cnt + o.cnt,v * o.v);\n\t}\n\tinline Value operator/(const Value &o) const\n\t{\n\t\treturn Value(cnt - o.cnt,v / o.v);\n\t}\n\tinline int operator()() const\n\t{\n\t\treturn cnt ? 0 : v;\n\t}\n} g[N + 5];\nint f[N + 5];\nstruct func\n{\n\tint k,b;\n\tinline func(int x = 1,int y = 0)\n\t{\n\t\tk = x,b = y;\n\t}\n\tinline func operator*(const func &o) const\n\t{\n\t\treturn func(k * o.k,k * o.b + b);\n\t}\n} seg[(N << 2) + 5],w[N + 5];\nvoid build(int p,int tl,int tr)\n{\n\tif(tl == tr)\n\t{\n\t\tseg[p] = w[tl];\n\t\treturn ;\n\t}\n\tint mid = tl + tr >> 1;\n\tbuild(ls,tl,mid),build(rs,mid + 1,tr);\n\tseg[p] = seg[ls] * seg[rs];\n}\nvoid insert(int x,func k,int p,int tl,int tr)\n{\n\tif(tl == tr)\n\t{\n\t\tseg[p] = k;\n\t\treturn ;\n\t}\n\tint mid = tl + tr >> 1;\n\tx <= mid ? insert(x,k,ls,tl,mid) : insert(x,k,rs,mid + 1,tr);\n\tseg[p] = seg[ls] * seg[rs];\n}\ninline void insert(int p)\n{\n\tif(!rev[p] && !type[p])\n\t\tinsert(id[p],func(g[p](),0),1,1,tot);\n\telse if(!rev[p] && type[p])\n\t\tinsert(id[p],func(g[p](),1 - g[p]()),1,1,tot);\n\telse if(rev[p] && !type[p])\n\t\tinsert(id[p],func(-g[p](),1),1,1,tot);\n\telse if(rev[p] && type[p])\n\t\tinsert(id[p],func(-g[p](),g[p]()),1,1,tot);\n}\nfunc query(int l,int r,int p,int tl,int tr)\n{\n\tif(l <= tl && tr <= r)\n\t\treturn seg[p];\n\tint mid = tl + tr >> 1;\n\tif(l <= mid && r > mid)\n\t\treturn query(l,r,ls,tl,mid) * query(l,r,rs,mid + 1,tr);\n\telse if(l <= mid)\n\t\treturn query(l,r,ls,tl,mid);\n\telse\n\t\treturn query(l,r,rs,mid + 1,tr);\n}\nvoid dfs1(int p)\n{\n\tsz[p] = 1,f[p] = p <= n ? a[p] : 1;\n\tfor(register int i = first[p];i;i = pre[i])\n\t{\n\t\tdep[to[i]] = dep[p] + 1,dfs1(to[i]),sz[p] += sz[to[i]],f[p] *= (type[p] ? 1 - f[to[i]] : f[to[i]]);\n\t\tif(!son[p] || sz[son[p]] < sz[to[i]])\n\t\t\tson[p] = to[i];\n\t}\n\t(type[p] ^ rev[p]) && (f[p] ^= 1);\n}\nvoid dfs2(int p)\n{\n\tstatic int tot = 0;\n\tid[p] = ++tot,g[p] = p <= n ? a[p] : 1;\n\tif(son[p])\n\t\ttop[son[p]] = top[p],dfs2(son[p]),ed[p] = ed[son[p]];\n\telse\n\t\ted[p] = p;\n\tfor(register int i = first[p];i;i = pre[i])\n\t\tif(to[i] ^ son[p])\n\t\t\ttop[to[i]] = to[i],dfs2(to[i]),g[p] = g[p] * (type[p] ? 1 - f[to[i]] : f[to[i]]);\n}\nvoid update(int p)\n{\n\tfor(;p;p = fa[p])\n\t{\n\t\tinsert(p),p = top[p];\n\t\tfunc x = query(id[p],id[ed[p]],1,1,tot);\n\t\tg[fa[p]] = g[fa[p]] / (type[fa[p]] ? 1 - f[p] : f[p]),\n\t\tf[p] = x.k * (type[ed[p]] ^ 1) + x.b,\n\t\tg[fa[p]] = g[fa[p]] * (type[fa[p]] ? 1 - f[p] : f[p]);\n\t}\n}\nint main()\n{\n\t//freopen(\"expr.in\",\"r\",stdin),freopen(\"expr.out\",\"w\",stdout);\n\tchar ch = getchar();\n\tdo\n\t\ts[++len] = ch,ch = getchar();\n\twhile(ch ^ '\\r' && ch ^ '\\n');\n\tscanf(\"%d\",&n),BUILDER::build();\n\tfor(register int i = 1;i <= tot;++i)\n\t\tif(!fa[i])\n\t\t\trt = i;\n\tfor(register int i = 1;i <= n;++i)\n\t\tscanf(\"%d\",a + i);\n\tdep[rt] = 1,top[rt] = rt,dfs1(rt),dfs2(rt);\n\tfor(register int i = 1;i <= tot;++i)\n\t\tif(!rev[i] && !type[i])\n\t\t\tw[id[i]] = func(g[i](),0);\n\t\telse if(!rev[i] && type[i])\n\t\t\tw[id[i]] = func(g[i](),1 - g[i]());\n\t\telse if(rev[i] && !type[i])\n\t\t\tw[id[i]] = func(-g[i](),1);\n\t\telse if(rev[i] && type[i])\n\t\t\tw[id[i]] = func(-g[i](),g[i]());\n\tbuild(1,1,tot);\n\tscanf(\"%d\",&q);\n\tfor(int x;q;--q)\n\t\tscanf(\"%d\",&x),\n\t\trev[x] ^= 1,update(x),\n\t\tprintf(\"%d\\n\",f[rt]),\n\t\trev[x] ^= 1,update(x);\n\tfclose(stdin),fclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1605072399,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7073 \u3010\u8868\u8fbe\u5f0f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "# \u7ed9\u51fa\u4e00\u79cdO(n)\u7684\u505a\u6cd5\n\u8fd9\u4e00\u9898\u53ef\u8c13\u662fCSP-J2020\u6700\u96be\u7684\u4e00\u9053\u9898\u4e86\n## \u778e\u626f\u90e8\u5206\n#### ~~CCF\u5708\u94b1\u7ec4\u7ec7\u8c8c\u4f3c\u628a\u9898\u76ee\u987a\u5e8f\u5f04\u9519\u4e86~~\n\u6309\u7167\u4ee5\u5f80\u7684\u89c4\u5219\uff0c\u7b2c\u4e09\u9053\u9898\u90fd\u5e94\u8be5\u662f\u52a8\u6001\u89c4\u5212\u7684\u9898\u76ee\uff0c\u7b2c\u56db\u9053\u9898\u76ee\u624d\u5e94\u8be5\u662f\u9700\u8981\u7528\u5230\u6570\u636e\u7ed3\u6784\u7684\u9898\u76ee\u3002\n\n\u56e0\u4e3a\u8fd9\u4e00\u70b9\uff0c\u6211\u662f\u5148\u505a\u5b8c\u4e86T4\u518d\u6765\u5f04T3\u7684\u3002\n\n\u672c\u4ebaT3\u4ee3\u7801\u8f83\u957f\uff0c\u4e0d\u559c\u52ff\u55b7\u3002\n## \u6b63\u9898\n\u770b\u5230\u8fd9\u79cd\u4e1c\u897f\uff0c\u80af\u5b9a\u662f\u8981\u5148\u8f6c\u5316\u4e00\u4e0b\u7684\uff0c\u8be5\u8f6c\u5316\u6210\u4ec0\u4e48\u5462\uff1f\n\n\u5443\u5443\uff0c\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u53ef\u4ee5\u8f6c\u5316\u6210\u4e00\u4e2a\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff0c\u4f46\u672c\u4eba\u66f4\u559c\u6b22\u8f6c\u5316\u6210\u4e00\u68f5\u6811\u3002~~\u5982\u679c\u4f60\u4e0d\u4f1a\u5982\u4f55\u628a\u4e00\u4e2a\u540e\u7f00\u8868\u8fbe\u5f0f\u8f6c\u5316\u6210\u4e00\u68f5\u6811\u7684\u8bdd\u53ef\u4ee5\u8d70\u4e86\uff0cHave a nice day!~~\n\n\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5148\u6c42\u51fa\u4ec0\u4e48\u90fd\u4e0d\u53d8\u65f6\u5019\u7684\u503c\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u505a\u5230$O(n)$\uff0c\u800c\u4e14\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u6807\u8bb0\u4e86\u5f53\u524d\u5b50\u6811\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u3002\n\n\u8003\u8651\u5230\u6bcf\u4e00\u6b21\u53ea\u4f1a\u4fee\u6539\u4e00\u4e2a\u70b9\uff0c\u800c\u4e14\u4fee\u6539\u4e4b\u540e\u4e0b\u4e00\u6b21\u4f1a\u53d8\u56de\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u66b4\u529b\u3002\n\n\u5c31\u662f\u66b4\u529b\u4ece\u4fee\u6539\u7684\u8282\u70b9\u5f80\u4e0a\u8df3\u3002\n### \u4e0d\u4f1a\u8d85\u65f6\u5417\uff01\uff1f\n\u90a3\u5f53\u7136\u2026\u2026\u4f1a\u5566\u3002\n\n\u4f46\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u4fee\u6539\u8fd9\u4e00\u4e2a\u70b9\uff0c\u5982\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/3dvlsbkn.png)\n\n\u4f18\u5316\uff1a\u5728\u4e00\u4e2a\u70b9\u88ab\u6539\u53d8\u540e\u5f80\u4e0a\u8df3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u8df3\u5230\u7684\u90a3\u4e2a\u70b9\u7684\u503c\u6ca1\u6709\u53d1\u751f\u6539\u53d8\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n\n\u4f46\u8fd9\u6837\u597d\u50cf\u8fd8\u662f\u4e0d\u53ef\u4ee5\u2026\u2026\n\n\u518d\u4f18\u5316\uff1a\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u6539\u53d8\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u90a3\u4e48\u76f4\u63a5\u6807\u8bb0\u4e00\u4e0b\uff0c\u4e0b\u4e00\u6b21\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\u5c31\u76f4\u63a5\u8fd4\u56de\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/9idfutno.png)\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u4e00\u4e2a\u70b9\u6700\u591a\u88ab\u8bbf\u95ee\u4e00\u6b21\u3002\n### \u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u6210\u529f\u7684\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u4e86$O(n)$\n\n\u597d\u4e86\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#define N 200010\n#define gc getchar()\nusing namespace std;\nstruct node{\n\tbool p1,p2,p3;\n\tint ls,rs,fa;\n}k[N];\nint tot;\nint add_node(bool type,int a)\n{\n\ttot++;\n\tif(type) k[tot].p1=a;\n\treturn tot;\n}\nvoid chg_node(int a)\n{\n\tk[a].p2^=1;\n}\nint first[N],cnt;\nvoid add_edge(int a,int ls,int rs)\n{\n\tk[a].ls=ls;\n\tk[a].rs=rs;\n\tk[ls].fa=a;\n\tk[rs].fa=a;\n}\nchar str[N];\nint len,top,t[N],tt[N],x;\nvoid work()\n{\n\tif(len<2)\n\t{\n\t\tif(str[0]=='&')\n\t\t{\n\t\t\tx=add_node(1,0);\n\t\t\tadd_edge(x,t[top],t[top-1]);\n\t\t\tt[--top]=x;\n\t\t}\n\t\tif(str[0]=='|')\n\t\t{\n\t\t\tx=add_node(1,1);\n\t\t\tadd_edge(x,t[top],t[top-1]);\n\t\t\tt[--top]=x;\n\t\t}\n\t\tif(str[0]=='!') chg_node(t[top]);\n\t}\n\telse\n\t{\n\t\tint s=0;\n\t\tfor(int i=1;i<len;i++)\n\t\t\ts=s*10+str[i]-'0';\n\t\tt[++top]=add_node(0,s);\n\t\ttt[s]=t[top];\n\t}\n\tlen=0;\n}\nint size[N],son[N],d[N],head,tail;\nvoid bfs(int rt)\n{\n\ttail=1;\n\td[0]=rt;\n\twhile(head<tail)\n\t{\n\t\tx=d[head++];\n\t\tif(k[x].ls)\n\t\t{\n\t\t\td[tail++]=k[x].ls;\n\t\t\td[tail++]=k[x].rs;\n\t\t}\n\t}\n\tfor(int i=tail-1;i>=0;i--)\n\t{\n\t\tx=d[i];\n\t\tif(k[x].ls)\n\t\t{\n\t\t\tif(k[x].p1) k[x].p3=k[k[x].ls].p3|k[k[x].rs].p3;\n\t\t\telse k[x].p3=k[k[x].ls].p3&k[k[x].rs].p3;\n\t\t\tif(k[x].p2) k[x].p3=!k[x].p3;\n\t\t}\n\t}\n\thead=0;\n\ttail=1;\n}\nint ppp[N],rt,xx,ls,rs;\nbool p,pp;\nbool gett(int a)\n{\n\tx=tt[a];\n\tp=(!k[x].p3);\n\twhile(x!=rt)\n\t{\n\t\txx=x;\n\t\tpp=k[xx].p3;\n\t\tk[xx].p3=p;\n\t\tx=k[x].fa;\n\t\tls=k[x].ls;\n\t\trs=k[x].rs;\n\t\tif(k[x].p1) p=k[ls].p3|k[rs].p3;\n\t\telse p=k[ls].p3&k[rs].p3;\n\t\tif(k[x].p2) p=!p;\n\t\tk[xx].p3=pp;\n\t\tif(k[x].p3==p) break;\n\t\tif(k[x].p3!=p&&ppp[x]) break;\n\t}\n\tif(k[x].p3!=p&&ppp[x]==1)\n\t{\n\t\tfor(int i=tt[a];i!=x;i=k[i].fa)\n\t\t\tppp[i]=1;\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\tfor(int i=tt[a];i!=x;i=k[i].fa)\n\t\t\tppp[i]=2;\n\t\treturn 0;\n\t}\n}\nint main()\n{\n//\tfreopen(\"expr.in\",\"r\",stdin);\n//\tfreopen(\"expr.out\",\"w\",stdout);\n\tfor(char c=gc;c!='\\n';c=gc)\n\t{\n\t\tif(c==' ') work();\n\t\telse str[len++]=c;\n\t}\n\twork();\n\trt=t[top];\n\tppp[rt]=1;\n\tint n,a,Q;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tk[tt[i]].p3=a;\n\t\tif(k[tt[i]].p2) k[tt[i]].p3^=1;\n\t}\n\tbfs(rt);\n\tscanf(\"%d\",&Q);\n\twhile(Q--)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tprintf(\"%d\\n\",k[rt].p3^gett(a));\n\t}\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1605157149,
        "uid": 99506,
        "name": "_LHF_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7073 \u3010\u8868\u8fbe\u5f0f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "## \u524d\u6392\u63d0\u793a\uff1a\u6b64\u7bc7\u9898\u89e3\u53ea\u6709\u601d\u8def\uff0c\u6ca1\u6709\u6b63\u7ecf\u4ee3\u7801\n\n\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u540e\u5e8f\u8868\u8fbe\u5f0f\uff0c\u6c42\u89e3\u5f53\u8fd9\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\u4e2d\u67d0\u4e2a\u53d8\u91cf\u7684\u503c\u53d8\u66f4\u540e\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\n\n\u9996\u5148\uff0c\u5982\u679c\u6bcf\u6b21\u8be2\u95ee\u90fd\u66b4\u529b\u6c42\u89e3\uff0c\u90a3\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u4f1a\u9ad8\u8fbe$O(qn)$\uff0c\u4e00\u6ce2\u4e0b\u53bb\u80af\u5b9a\u4f1a\u6109\u5feb\u7684$TLE$\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u6362\u4e2a\u601d\u8def\uff0c\u5229\u7528\u53cc\u76ee\u903b\u8f91\u8fd0\u7b97\u7b26$and$\u548c$or$\u7684\u6027\u8d28\uff0c\u6c42\u51fa\u54ea\u4e2a\u53d8\u91cf\u7684\u53d8\u5316\u4f1a\u5bf9\u7ed3\u679c\u6709\u5f71\u54cd\u5c31\u884c\u4e86\uff0c\u5177\u4f53\u7684\u601d\u8def$win10$\u795e\u4ed9\u7684\u9898\u89e3\u91cc\u4e5f\u6709\u8bb2\n\n\u4f46\u662f\u8fd9\u6837\u4e5f\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u4e07\u4e00\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5728\u8868\u8fbe\u5f0f\u91cc\u5957\u8868\u8fbe\u5f0f\uff0c\u59820 & (1 & 0)\uff0c\u6211\u4eec\u7684\u6734\u7d20\u7b97\u6cd5\u5c31\u8fc7\u4e0d\u4e86\u4e86\uff08\u6240\u4ee5\u7981\u6b62\u5957\u5a03\uff08bushi\n\n$win10$\u795e\u4ed9\u662f\u7528\u533a\u95f4\u8d4b\u503c\u6765\u505a\u7684\uff0c\u7528\u4e86\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\uff0c\u4f46\u662f\u7a9d\u8fd9\u4e2a\u849f\u84bb\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\uff0c\u600e\u4e48\u529e\uff1f\n\n\u8ba9\u6211\u4eec\u518d\u56de\u52300 & (1 & 0)\u8fd9\u4e2a\u67ff\u5b50\uff0c\u5b83\u7684\u95ee\u9898\u5728\u4e8e\u53d8\u91cf$x_3$\u80fd\u5426\u53d8\u5316\u4e0d\u4ec5\u7531\u5b83\u6240\u5728\u7684\u5f0f\u5b50\u51b3\u5b9a\uff0c\u8fd8\u7531\u5b83\u6240\u5728\u7684\u5f0f\u5b50\u6240\u5728\u7684\u5f0f\u5b50\u51b3\u5b9a\uff08\u53c8\u662f\u4e07\u6076\u7684\u5957\u5a03\n\n\u6240\u4ee5\u600e\u4e48\u529e\u5462\uff1f\n\n\u55ef\u2026\u2026\n\n\u8fd9\u4e0d\u5c31\u51fa\u6765\u4e86\u5417\uff1f\n\n\u65e2\u7136\u6bcf\u4e2a\u53d8\u91cf\u80fd\u5426\u53d8\u5316\u4e0d\u4ec5\u7531\u5b83\u6240\u5728\u7684\u5f0f\u5b50\u51b3\u5b9a\uff0c\u8fd8\u7531\u5b83\u6240\u5728\u7684\u5f0f\u5b50\u6240\u5728\u7684\u5f0f\u5b50\u51b3\u5b9a\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4ece\u6700\u540e\u7684\u5f0f\u5b50\u5f80\u4e0b\u63a8\uff0c\u4e0d\u5c31\u597d\u4e86\u5417\uff1f\n\n\u9996\u5148\u5c06\u8fd9\u4e2a\u540e\u7f00\u8868\u8fbe\u5f0f\u5efa\u6811\uff0c\u7136\u540e\u5728\u8ba1\u7b97\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u65f6\u987a\u5e26\u7740\u5c06\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\u90fd\u5b58\u4e00\u4e0b\uff0c\u7136\u540e\u4ece\u6839\u7ed3\u70b9\u5f00\u59cb\u6309\u7167\u6211\u4eec\u7684\u903b\u8f91\u8fdb\u884c\u5904\u7406\uff0c\u5982\u679c\u5b83\u7684\u513f\u5b50\u662f\u53ef\u4ee5\u53d8\u5316\u7684\uff0c\u5219\u4ee5\u5b83\u7684\u513f\u5b50\u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u5168\u90e8\u53ef\u4ee5\u53d8\u5316\uff0c\u5426\u5219\u7ee7\u7eed\u5904\u7406\u4ee5\u5b83\u7684\u513f\u5b50\u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\uff0c\u76f4\u5230\u5904\u7406\u5230\u53f6\u7ed3\u70b9\u4e3a\u6b62\n\n\u5904\u7406\u7684\uff08\u4f2a\uff09\u4ee3\u7801\u5982\u4e0b\uff1a\n\n~~~\n\u2026\u2026\nstruct node\n{\n\tint type,l = -1,r = -1,father = -1;\n\t//\u7ed3\u70b9\u7c7b\u578b\uff0c\u5de6\u513f\u5b50\u7f16\u53f7\uff0c\u53f3\u513f\u5b50\u7f16\u53f7\uff0c\u7236\u4eb2\u7f16\u53f7\n\t/*\n\t\ttype = 1\uff1a\u53d8\u91cf\n\t\ttype = 2\uff1aand\n\t\ttype = 3\uff1aor\n\t\ttype = 4\uff1anot\n\t*/\n\tbool f,can_change = false;\n\t//\u7ed3\u70b9\u503c\uff0c\u80fd\u5426\u53d8\u5316\n}tree[500010];\n//\u7236\u4eb2\u7f16\u53f7\u662f\u4e3a\u4e86\u65b9\u4fbf\u5efa\u6811\uff0c\u8ba1\u7b97\u65e0\u4f5c\u7528\nbool Cal(int x)//\u8ba1\u7b97\n{\n\tswitch(tree[x].type)\n\t{\n\t\tcase 1:return tree[x].f;\n\t\tcase 2:return tree[x].f = tree[tree[x].l].f && tree[tree[x].r].f;\n\t\tcase 3:return tree[x].f = tree[tree[x].l].f || tree[tree[x].r].f;\n\t\tcase 4:return tree[x].f = !tree[tree[x].l].f;\n\t}\n}\nvoid change_can_change(int x)\n{\n\ttree[x].can_change = true\n\tif(tree[x].l != -1)change_can_change(tree[x].l);\n\tif(tree[x].r != -1)change_can_change(tree[x].r);\n\treturn;\n}\n//\u5176\u5b9e\u53ef\u4ee5\u53ea\u53d8\u53f6\u7ed3\u70b9\uff08\u5373\u53d8\u91cf\uff09\uff0c\u4f46\u7a9d\u61d2\u5f97\u6539\u4e86awa\nvoid check_can_change(int x)//\u6309\u7167\u903b\u8f91\u68c0\u67e5\u80fd\u5426\u66f4\u6539\n{\n\tswitch(tree[x].type)\n\t{\n\t\tcase 1:return;\n\t\tcase 2:\n\t\t\tif(!tree[tree[x].l].f)change_can_change(tree[x].r);\n\t\t\telse check_can_change(tree[x].r);\n\t\t\tif(!tree[tree[x].r].f)change_can_change(tree[x].l);\n\t\t\telse check_can_change(tree[x].l);\n\t\t\treturn;\n\t\tcase 3:\n\t\t\tif(tree[tree[x].l].f)change_can_change(tree[x].r);\n\t\t\telse check_can_change(tree[x].r);\n\t\t\tif(tree[tree[x].r].f)change_can_change(tree[x].l);\n\t\t\telse check_can_change(tree[x].r);\n\t\t\treturn;\n\t\tcase 4:check_can_change(tree[x].l);\n\t}\n\treturn;\n}\nbool treeans;\n\u2026\u2026\nint main()\n{\n\t\u8bfb\u5165\u8868\u8fbe\u5f0f\u3001\u5efa\u6811\n\t\u8bfb\u5165\u53d8\u91cf\u503c\n\ttreeans = Cal(\u6839\u7ed3\u70b9);\n\tcheck_can_change(\u6839\u7ed3\u70b9);\n\t\u8bfb\u5165\u6bcf\u6b21\u7684\u8be2\u95ee\uff0c\u5982\u679c\u8fd9\u4e2a\u53d8\u91cf\u53ef\u66f4\u6539\uff0c\u5c31\u8f93\u51fa!treeans\uff0c\u5426\u5219\u8f93\u51fatreeans\n\treturn 0;\n}\n~~~\n\n\u8003\u573a\u4e0a\u7b97\u4e0a\u5feb\u8bfb\u5199\u4e863395\u5b57\u8282\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f\u8ba1\u7b97$O(n) + $\u5904\u7406$O(n) + q \u00d7 $\u8be2\u95ee$O(1)$\uff0c\u7701\u7565\u5e38\u6570\u5c31\u662f$O(n)$\uff0c\u662f\u5b8c\u5168\u80fd\u8fc7\u7684awa",
        "postTime": 1604804760,
        "uid": 260061,
        "name": "Karl_Aurora",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7073 \u3010\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\uff08\u545c\u545c\u545c\u545c\u545c\u2026\u2026\u6bd4\u8d5b\u65f6\u6709\u4e2a\u5730\u65b9\u6ca1\u66f4\u65b0\u5bfc\u81f4 100pts -> 0pts\uff09\n\u672c\u9898\u6709\u591a\u6b21\u8be2\u95ee\uff0c\u76f4\u63a5\u66b4\u529b\u8ba1\u7b97\u7684 $\\Theta(q \\times n)$ \u80af\u5b9a\u8fc7\u4e0d\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u6362\u4e00\u79cd\u601d\u8def\uff0c\u6211\u4eec\u53ea\u8981\u5728\u5f00\u59cb\u65f6\u8ba1\u7b97\u51fa\u6700\u521d\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u8bbe $ans[i]$ \u8868\u793a\u5f53 $i$ \u4f4d\u7f6e\u7684\u6570\u53d6\u53cd\u540e\uff0c\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u4f1a\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\u90a3\u4e48\u600e\u6837\u6c42\u51fa $ans$ \u6570\u7ec4\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a\n\n\u540e\u7f00\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u6709\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u505a\u6cd5\uff1a\u5f00\u4e00\u4e2a\u6808\uff0c\u4ece\u524d\u5f80\u540e\u626b\u63cf\u4e00\u822c\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u78b0\u5230\u6570\u5b57\u76f4\u63a5\u5165\u6808\uff1a\u78b0\u5230\u7684\u53d6\u53cd\u64cd\u4f5c\u76f4\u63a5\u4ee3\u5165 $a_i$ \u548c\u6808\u9876\u7684\u5143\u7d20\uff1b\u78b0\u5230\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0c\u53d6\u51fa\u6808\u4e0a\u8fb9\u7684\u4e24\u4e2a\u5143\u7d20\u8ba1\u7b97\uff0c\u7136\u540e\u518d\u653e\u8fdb\u6808\u4e2d\u2026\u2026\u76f4\u5230\u6808\u4e2d\u53ea\u5269\u4e00\u4e2a\u5143\u7d20\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6c42\u51fa $ans$ \u6570\u7ec4\u5462\uff1f\u6bcf\u5f53\u6211\u4eec\u78b0\u5230\u8981\u8ba1\u7b97\u4e24\u4e2a\u6ca1\u6709\u88ab\u8ba1\u7b97\u8fc7\u7684\u5143\u7d20\u7684\u4e8c\u5143\u8fd0\u7b97\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u8fde\u63a5\u7684\u4e24\u4e2a\u5143\u7d20\u8fdb\u884c\u5224\u65ad\uff1a\u5f53\u67d0\u4e2a\u5143\u7d20\u53d6\u53cd\u65f6\uff0c\u8fd9\u4e2a\u8868\u793a\u5f0f\u7684\u503c\u4f1a\u4e0d\u4f1a\u6539\u53d8\uff0c\u4ee5 $a & b$ \u4e3a\u4f8b\uff1a\n\n\u5f53 $a=0,b=0$ \u65f6\uff1a\u5bf9 $a$ \u6216 $b$ \u53d6\u53cd\u90fd\u65e0\u6cd5\u6539\u53d8\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u59cb\u7ec8\u4e3a $0$\u3002\n\n\u5f53 $a=1,b=0$ \u65f6\uff1a\u8868\u8fbe\u5f0f\u7684\u521d\u503c\u662f $0$\uff0c\u5bf9 $a$ \u53d6\u53cd\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e0d\u53d8\uff1b\u5bf9 $b$ \u53d6\u53cd\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u4f1a\u6539\u53d8\u4e3a $1$\u3002\n\n\u5f53 $a=0,b=1$ \u65f6\uff1a\u8868\u8fbe\u5f0f\u7684\u521d\u503c\u662f $0$\uff0c\u5bf9 $b$ \u53d6\u53cd\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e0d\u53d8\uff1b\u5bf9 $a$ \u53d6\u53cd\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u4f1a\u6539\u53d8\u4e3a $1$\n\n\u5f53 $a=1,b=1$ \u65f6\uff1a\u8868\u8fbe\u5f0f\u7684\u521d\u503c\u662f $1$\uff0c\u65e0\u8bba\u5bf9 $a$ \u8fd8\u662f $b$ \u53d6\u53cd\u90fd\u4f1a\u4f7f\u8868\u8fbe\u5f0f\u7684\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u8ba1\u7b97\u4e8c\u5143\u8fd0\u7b97\u7b26\u65f6\uff0c\u8bb0\u5f55 $ans[a]$ \u548c $ans[b]$ \u3002\n\n\u4e0d\u8fc7\uff0c\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u53ef\u4ee5\u4e86\u5417\uff1f\uff1f\uff1f\u867d\u7136\u4e24\u4e2a\u6837\u4f8b\u90fd\u80fd\u8fc7\uff0c\u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\u5927\u6837\u4f8b\u4f60\u6302\u6389\u4e86\uff01\n\n\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a $0 & ( 1 & 0 )$ \n\u7167\u7406\u6765\u6240\uff0c\u6211\u4eec\u53ef\u77e5\u7b2c\u4e09\u4e2a\u5143\u7d20\u53d6\u53cd\u65f6\uff0c\u5b83\u6240\u5728\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u4f1a\u4ece $0$ \u6539\u53d8\u6210 $1$\uff0c\u5982\u679c\u6309\u7167\u6211\u4eec\u4e0a\u9762\u7684\u7b97\u6cd5\uff0c\u6b64\u65f6 $ans[3]$ \u5e94\u8be5\u4e3a true\uff0c\u5373\u5f53\u5143\u7d20 $3$ \u53d6\u53cd\u65f6\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u4e5f\u4f1a\u6539\u53d8\u3002\n\n\u4f46\u662f\uff01\u5b9e\u9645\u4e0a\u5143\u7d20 $3$ \u6539\u53d8\u4e86\u4e4b\u540e\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u5e76\u4e0d\u4f1a\u6539\u53d8\u3002\u56e0\u4e3a\u5916\u9762\u8fd8\u5957\u7740\u4e00\u4e2a\u8868\u8fbe\u5f0f\u5462\uff01\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u5f53\u8fd9\u6837\u505a\uff0c\u6808\u4e2d\u7684\u5143\u7d20\u5e94\u8be5\u6709\u4e09\u4e2a\u53d8\u91cf $l,r,val$\uff0c$l$ \u548c $r$ \u8868\u793a\u901a\u8fc7\u4e00\u4e9b\u4e8c\u5143\u8fd0\u7b97\u6700\u540e\u6784\u6210\u8be5\u5143\u7d20\u7684\u521d\u59cb\u5143\u7d20\uff08\u5373\u9898\u76ee\u4e2d\u7684 $a$ \u6570\u7ec4)\u7684\u5de6\u754c\u548c\u53f3\u754c\uff0c\u521d\u59cb\u5143\u7d20 $i$ \u7684\u5de6\u754c\u548c\u53f3\u754c\u90fd\u4e3a $i$\u3002\u5f53\u5bf9\u6808\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u4e8c\u5143\u8fd0\u7b97\u65f6\uff0c\u6839\u636e\u4e0a\u9762\u7684\u5224\u65ad\u6cd5\u5219\uff0c\u5bf9\u533a\u95f4 $[l_a,r_a]$ \u548c $[l_b,r_b]$ \u7684 $ans$ \u6570\u7ec4\u8d4b\u503c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u4e86\u3002\n\n\u4f46\u8fd9\u53c8\u6d89\u53ca\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5feb\u901f\u533a\u95f4\u8d4b\u503c\uff0c\u56e0\u4e3a '&' \u548c '|' \u8fd0\u7b97\u90fd\u662f\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\uff0c\u5c06\u7ef4\u62a4\u533a\u95f4\u7684\u590d\u6742\u5ea6\u964d\u81f3 $\\Theta(\\log n)$\u3002\u5176\u5b9e\u5373\u4f7f\u8fd9\u4e9b\u8fd0\u7b97\u4e0d\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u5206\u5757\u6765\u8fdb\u884c $\\Theta(\\sqrt n)$ \u6765\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff0c\u6bd4\u5982\u8f93\u5165\u65f6\u7684\u5143\u7d20\u5e76\u4e0d\u662f\u548c\u4f4d\u7f6e\u5bf9\u5e94\u7684\uff0c\u4f46\u662f\u6211\u4eec\u7ef4\u62a4\u533a\u95f4\u65f6\u5374\u8981\u4e25\u683c\u5bf9\u5e94\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6620\u5c04\u8bb0\u5f55\u5728\u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u4f4d\u7f6e $i$ \u5bf9\u5e94\u7684\u5143\u7d20 $b$\u2026\u2026\u5176\u5b83\u7684\u4e00\u4e9b\u601d\u8def\u53ef\u4ee5\u7ed3\u5408\u6211\u7684\u4ee3\u7801\u6765\u770b\u3002\n\n\u8be5\u7b97\u6cd5\u7684\u6574\u4f53\u590d\u6742\u5ea6\u4e3a $\\Theta((n+q)\\log n)$\uff0c\u53ef\u4ee5\u8fc7\u8fd9\u9898\u7684\u6570\u636e\u3002\n```cpp\n#include<bits/stdc++.h>\n#include<stdio.h>\nusing namespace std;\n#define rg register\n#define inf 0x7f7f7f7f\ninline int read(){\n\trg int res=0,x=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') x=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tres=res*10+ch-'0';\n\t\tch=getchar();\n\t}\t\t\n\treturn res*x;\n}\nstruct node{\n\tint l,r,val;\n}s2[100005];\nmap<int,int> mp;\nstring ch;\nint s[1000005];\nint ans[100005];\nint l,q,a[100005],n,cnt1,cnt2,cnt3,k,idx=0;\ninline int lowbit(int x){ return x&(-x); }\ninline void add(int idx,int k){\n\twhile(idx<=n){\n\t\tans[idx]+=k;\n\t\tidx+=lowbit(idx);\n\t}\n}\ninline int sum(int idx){\n\trg int res=0;\n\twhile(idx){\n\t\tres+=ans[idx];\n\t\tidx-=lowbit(idx);\n\t}\n\treturn res;\n}\nint main(){\n\t//freopen(\"expr.in\",\"r\",stdin);\n\t//freopen(\"expr.out\",\"w\",stdout);\n\tgetline(cin,ch); l=ch.length();\n\tfor(rg int i=0;i<l;){\n\t\tif(ch[i]=='x'){\n\t\t\t++i; \n\t\t\twhile(ch[i]>='0'&&ch[i]<='9'){\n\t\t\t\ts[cnt1]=s[cnt1]*10+ch[i]-'0';\n\t\t\t\t++i;\n\t\t\t}\n\t\t\t++cnt1;\n\t\t}else if(ch[i]!=' '){\n\t\t\tif(ch[i]=='!')\n\t\t\t\ts[cnt1++]=100002;\n\t\t\telse if(ch[i]=='&'){\n\t\t\t\ts[cnt1++]=100003;\n\t\t\t}\n\t\t\telse if(ch[i]=='|'){\n\t\t\t\ts[cnt1++]=100004;\n\t\t\t}\n\t\t}\n\t\t++i;\n\t}\n\tn=read();\n\tfor(rg int i=1;i<=n;++i){\n\t\ta[i]=read();\n\t}\n\tfor(rg int i=0;i<cnt1;++i){\n\t\tif(s[i]>=0&&s[i]<=100001){\n\t\t\ts2[++cnt2].val=a[s[i]];\n\t\t\ts2[cnt2].l=s2[cnt2].r=++cnt3;\n\t\t\tmp[s[i]]=cnt3;\n\t\t\tcontinue;\n\t\t}\n\t\tif(s[i]==100002){\n\t\t\ts2[cnt2].val=!(s2[cnt2].val);\n\t\t\ta[s[i-1]]=!a[s[i-1]];\n\t\t\tcontinue;\n\t\t}\n\t\tnode l1,l2;\n\t\tif(s[i]==100003){\n\t\t\tl1=s2[cnt2--]; l2=s2[cnt2--];\n\t\t\tif(l1.val&&l2.val){\n\t\t\t}else if(l1.val==0&&l2.val){\n\t\t\t\tadd(l2.l,1);\n\t\t\t\tadd(l2.r+1,-1);\n\t\t\t}else if(l1.val&&l2.val==0){\n\t\t\t\tadd(l1.l,1);\n\t\t\t\tadd(l1.r+1,-1);\n\t\t\t}else if(l1.val==0&&l2.val==0){\n\t\t\t\tadd(l1.l,1);\n\t\t\t\tadd(l1.r+1,-1);\n\t\t\t\tadd(l2.l,1);\n\t\t\t\tadd(l2.r+1,-1);\n\t\t\t}\n\t\t\ts2[++cnt2].val=l1.val&&l2.val;\n\t\t\ts2[cnt2].l=min(l1.l,l2.l);\n\t\t\ts2[cnt2].r=max(l1.r,l2.r);\n\t\t}\n\t\tif(s[i]==100004){\n\t\t\tl1=s2[cnt2--]; l2=s2[cnt2--];\n\t\t\tif(l1.val&&l2.val){\n\t\t\t\tadd(l1.l,1);\n\t\t\t\tadd(l1.r+1,-1);\n\t\t\t\tadd(l2.l,1);\n\t\t\t\tadd(l2.r+1,-1);\n\t\t\t}else if(l1.val==0&&l2.val){\n\t\t\t\tadd(l1.l,1);\n\t\t\t\tadd(l1.r+1,-1);\n\t\t\t}else if(l1.val&&l2.val==0){\n\t\t\t\tadd(l2.l,1);\n\t\t\t\tadd(l2.r+1,-1);\n\t\t\t}else if(l1.val==0&&l2.val==0){\n\t\t\t}\n\t\t\ts2[++cnt2].val=l1.val||l2.val;\n\t\t\ts2[cnt2].l=min(l1.l,l2.l);\n\t\t\ts2[cnt2].r=max(l1.r,l2.r);\n\t\t}\n\t}\n\t/*for(rg int i=1;i<=n;++i){\n\t\tcout<<sum(i)<<\" \";\n\t}cout<<endl;*/\n\tq=read();\n\tfor(rg int i=1;i<=q;++i){\n\t\tk=read();\n\t\tif(sum(mp[k])){\n\t\t\tprintf(\"%d\\n\",s2[cnt2].val);\n\t\t}else printf(\"%d\\n\",!s2[cnt2].val);\n\t}\n\treturn 0;\n}\n```\n\u7136\u540e\uff0c\u6109\u5feb\u5730\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/jcz78x34.png)",
        "postTime": 1604762809,
        "uid": 241977,
        "name": "Legitimity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P7073 \u3010\u8868\u8fbe\u5f0f\uff08\u6682\u65e0\u6570\u636e\uff09\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u4f53\u9a8c\u66f4\u4f73](https://blog.csdn.net/jvruo_shabi/article/details/109625079)\n\n~~\u6628\u5929\u73b0\u5b66\u8868\u8fbe\u5f0f\u6811\u7684\u6211\u592a\u96be\u4e86~~\n\n~~\u7ec8\u4e8e\u5728\u67d0\u8c37\u4e0a\u62a2\u5230CSP\u9898\u89e3\u7684\u4f4d\u7f6e\u4e86~~\n\n\u9996\u5148\u6211\u4eec\u5efa\u7acb\u8868\u8fbe\u5f0f\u6811\uff0c\u50cf\u6211\u4e00\u6837\u4e0d\u4f1a\u7684\u849f\u84bb~~\u5e94\u8be5\u6ca1\u6709\u5427\u6211\u53ef\u662f\u5168\u8c37\u6700\u5f31~~\u7684\u81ea\u884c\u51fa\u95e8\u53f3\u8f6c\u518d\u5de6\u8f6c\u518d\u524d\u884c50m\u767e\u5ea6\u3002\n\n\u6811\u7684\u8282\u70b9\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u503c\u57df\uff1anumber\uff0c\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u5bf9\u5e94\u7684 $x_i$ \u7f16\u53f7\uff08\u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u4e00\u4e2a\u8fd0\u7b97\u7b26\u5c31number=-1\uff09\u3002\n\n\u6d59\u9053\u9898\u6709\u4e00\u4e2a\u7070\u5e38\u7279\u6b8a\u7684\u6027\u8d28\uff1a\u6bcf\u6b21\u4fee\u6539\u4e0d\u5f71\u54cd\u540e\u9762\u7684\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u7528\u4e0d\u7740\u6211\u5f00\u59cb\u60f3\u7684~~\u7ebf\u6bb5\u6811\u5565\u7684~~\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u6709\u53ef\u80fd\u4f1a\u5f71\u54cd\u6839\u8282\u70b9\u7684\u503c\uff0c\u4e5f\u6709\u53ef\u80fd\u4e0d\u4f1a\u3002\u4ec0\u4e48\u65f6\u5019\u4f1a\u5462\uff1f\u9884\u5904\u7406\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5148\u8ba1\u7b97\u51fa\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u7136\u540e\u4ece\u6839\u8282\u70b9\u5411\u4e0b\u904d\u5386\u3002\n\n$mark[i]$ \u8868\u793a\u4fee\u6539 $x_i$ \u7684\u503c\u5bf9\u7ed3\u679c\u662f\u5426\u6709\u5f71\u54cd\u3002\n\n- \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u6570\u5b57\uff0c$mark[num] = true$\n- \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u8fd0\u7b97\u7b26\uff1a\n\n\t- \u5bf9\u4e8e\u4e0e\uff08&\uff09\u8fd0\u7b97\uff0c\u5982\u679c\u5b83\u7684\u53f3\u5b50\u6811\u503c\u4e3a0\uff0c\u90a3\u4e48\u4e0d\u7ba1\u5b83\u7684\u5de6\u5b50\u6811\u7684\u503c\u600e\u4e48\u6539\u53d8\uff0c\u5f53\u524d\u8fd9\u9897\u5b50\u6811\u7684\u503c\u90fd\u4e0d\u4f1a\u6539\u53d8\uff08\u603b\u662f0\uff09\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\uff0c\u5426\u5219\u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\u3002\u53f3\u5b50\u6811\u540c\u7406\uff0c\u5982\u679c\u5de6\u5b50\u6811\u503c\u4e3a0\uff0c\u9012\u5f52\u641c\u7d22\u53f3\u5b50\u6811\uff0c\u5426\u5219\u4e0d\u9012\u5f52\u3002\n    \n   - \u5bf9\u4e8e\u6216\uff08|\uff09\u8fd0\u7b97\uff0c\u548c\u4e0e\u8fd0\u7b97\u975e\u5e38\u76f8\u4f3c\uff0c\u5982\u679c\u5b83\u7684\u53f3\u5b50\u6811\u503c\u4e3a1\uff0c\u90a3\u4e48\u4e0d\u7ba1\u5b83\u7684\u5de6\u5b50\u6811\u7684\u503c\u600e\u4e48\u6539\u53d8\uff0c\u5f53\u524d\u8fd9\u9897\u5b50\u6811\u7684\u503c\u90fd\u4e0d\u4f1a\u6539\u53d8\uff08\u603b\u662f1\uff09\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\uff0c\u5426\u5219\u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\u3002\u53f3\u5b50\u6811\u540c\u7406\uff0c\u5982\u679c\u5de6\u5b50\u6811\u503c\u4e3a1\uff0c\u9012\u5f52\u641c\u7d22\u53f3\u5b50\u6811\uff0c\u5426\u5219\u4e0d\u9012\u5f52\u3002\n   \n   - \u5bf9\u4e8e\u975e\uff08!\uff09\u8fd0\u7b97\uff0c\u57fa\u672c\u4e0d\u9700\u8981\u4ecb\u7ecd\uff0c\u76f4\u63a5\u9012\u5f52\u641c\u7d22\u5de6\u5b50\u6811\u5373\u53ef\uff08\u975e\u8fd0\u7b97\u662f\u5355\u76ee\u8fd0\u7b97\u7b26\uff0c\u53f3\u5b50\u6811\u4e0d\u5b58\u5728\uff09\n   \n\n\u4ee5\u4e0a\u5c31\u662f\u5efa\u6811\u9884\u5904\u7406\u7684\u8fc7\u7a0b\uff0c\u5199\u4e24\u4e2a\u5c31\u884c\u4e86 $dfs$ QAQ\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u5982\u679c $mark[idx] = true$\uff0c\u5c06\u6839\u8282\u70b9\u7684\u503c\u53d6\u53cd\u518d\u8f93\u51fa\uff0c\u5426\u5219\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u7136\u540e\uff0c\u5c31\u6ca1\u6709\u7136\u540e\u4e86\u3002\n\n# $Code:$\n\n```cpp\n#include <cstdio>\n#include <stack>\n#include <cstring>\n\nstruct Node {\n\tchar v;\n\tint sum, number;\n\tNode * left, * rigit;\n} root;\n\ninline Node * create_node(char _v, Node * LeftSon = NULL, Node * RigitSon = NULL, int Num = -1) {\n//\u5efa\u7acb\u65b0\u8282\u70b9\uff0c\u8fd4\u56de\u6307\u5411\u8fd9\u4e2a\u8282\u70b9\u7684\u6307\u9488\n\tNode * tp = new Node;\n\ttp -> v = _v, tp -> left = LeftSon, tp -> rigit = RigitSon, tp -> number = Num;\n\treturn tp;\n}\n\nstd::stack<Node *> s;\n\nchar str[1000005];\nint a[100005];\nbool mark[100005];\n\ninline int dfs1(Node * u) {\n\tif (u -> v == 0 || u -> v == 1) return u -> sum = u -> v;\n\tif (u -> v == '&')\n\t\treturn u -> sum = dfs1(u -> left) & dfs1(u -> rigit);\n\telse if (u -> v == '|')\n\t\treturn u -> sum = dfs1(u -> left) | dfs1(u -> rigit);\n\telse return u -> sum = !dfs1(u -> left);\n}\n\ninline void dfs2(Node * u) {\n\tif (u -> v == 0 || u -> v == 1) {\n\t\tmark[u -> number] = true;\n\t\treturn;\n\t}\n\t\n\tint lv = u -> left -> sum;\n\tint rv;\n\tif (u -> rigit != NULL) rv = u -> rigit -> sum;\n\tif (u -> v == '&') {\n\t\tif (rv == 1) dfs2(u -> left);\n\t\tif (lv == 1) dfs2(u -> rigit);\n\t}\n\telse if (u -> v == '|') {\n\t\tif (rv == 0) dfs2(u -> left);\n\t\tif (lv == 0) dfs2(u -> rigit);\n\t}\n\telse dfs2(u -> left);\n}\n\nint main() {\n\tint n, q;\n\tfgets(str + 1, 1000002, stdin);\n\tscanf(\"%d\", &n);\n\tint l = strlen(str + 1) - 2;\n\tfor (int i = 1; i <= n; ++ i) scanf(\"%d\", a + i);\n\tscanf(\"%d\", &q);\n    //\u6808\u5efa\u6811\uff0c\u4e0d\u4f1a\u7684\u540c\u5fd7\u5de6\u8f6c\u767e\u5ea6\u641c\u7d22\u201c\u540e\u7f00\u8868\u8fbe\u5f0f\u5efa\u7acb\u8868\u8fbe\u5f0f\u6811\u201d\uff08\u6211\u5c31\u662f\u8fd9\u4e48\u5b66\u4f1a\u7684qwq)\n\tfor (int i = 1; i <= l; ++ i) if (str[i] != ' ') {\n\t\tif (str[i] == 'x') {//\u5f53\u524d\u9047\u5230\u7684\u662f\u4e00\u4e2a\u53d8\u91cf\n\t\t\tint k(0);\n\t\t\t++ i;\n\t\t\twhile (str[i] <= 57 && str[i] >= 48) k = k * 10 + str[i ++] - 48;\n\t\t\ts.push(create_node(a[k], NULL, NULL, k));\n\t\t}\n\t\telse if (str[i] == '&') {\n\t\t\tNode * x = s.top(), * x2;\n\t\t\ts.pop(), x2 = s.top(), s.pop();\n\t\t\ts.push(create_node('&', x, x2));\n\t\t}\n\t\telse if (str[i] == '|') {\n\t\t\tNode * x = s.top(), * x2;\n\t\t\ts.pop(), x2 = s.top(), s.pop();\n\t\t\ts.push(create_node('|', x, x2));\n\t\t}\n\t\telse {\n\t\t\tNode * x = s.top();\n\t\t\ts.pop(), s.push(create_node('!', x));\n\t\t}\n\t}\n\t\n\tdfs1(s.top());\n\tdfs2(s.top());\n\t\n\twhile (q --) {\n\t\tint idx;\n\t\tscanf(\"%d\", &idx);\n\t\tprintf(\"%d\\n\", mark[idx] ? !s.top() -> sum : s.top() -> sum);\n\t}\n}\n```",
        "postTime": 1605081947,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7073 \u3010\u8868\u8fbe\u5f0f\uff08\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6bd4\u8d5b\u4e2d\u6211\u53ea\u62ff30\uff0c\u4f46\u662f\u79bb\u6b63\u89e3\u975e\u5e38\u63a5\u8fd1\u60f9\uff0c\u7a0d\u5fae\u4fee\u6539\u5c31AC\u3002\n\n\u7ecf\u6211\u7814\u7a76\u8fd9\u9898\u662f\u6c35\u9898\u54e6~\uff08\u96be\u5ea6\u4e0d\u5230\u9ec4\u9898\uff0c\u4f46\u6bd4\u6a59\u9898\u96be\u4e0a\u90a3\u4e48\u4e00\u70b9\u70b9\u3002\uff09\n\n\u540e\u7f00\u8868\u8fbe\u5f0f\u6539\u5982\u4f55\u5904\u7406\u5462\uff1f\n\n1.\u9047\u5230x\uff0c\u5c31\u5f80\u540e\u641c\u7d22\uff0c\u628ax\u540e\u9762\u7684\u6570\u5b57\u8bb0\u5f55\u4e0b\u6765\uff0c\u5e76\u628a\u76f8\u5e94\u7684\u503c\uff081/0\uff09\u52a0\u5165\u4e00\u4e2a\u6570\u7ec4\uff08\u5b9a\u4e49\u4e3anum\uff09\uff0c\u76f8\u5e94\u7684\u4e0b\u6807\u52a0\u5165s1\uff0c\u8be5\u6570\u5728s1\u91cc\u7684\u4f4d\u7f6e\u52a0\u5165pla\uff0c\u5e76\u4e14\u628a\u5b83\u5728s1\u91cc\u7684\u4f4d\u7f6e\u5165\u6808\uff1b\n\n2.\u9047\u5230\uff01\uff0c\u53d6\u51fa\u6808\u5934\uff0c\u628a\u5176num\u53d6\u53cd\u5f97\u5230\u7684\u503c\u52a0\u5165num\uff0c\u628a\uff01\u52a0\u5165s1\uff08\u6211\u5b9a\u4e49\u201c\uff01\u201d\u662f1000001\uff0c\u201c&\u201d\u662f1000002\uff0c\u201c|\u201d\u662f1000003\uff09\uff0c\u628a\u5176fa\u6539\u4e3a\uff01\u5728s1\n\u91cc\u7684\u4f4d\u7f6e\uff0c\u518d\u628a\uff01\u5728s1\u91cc\u4f4d\u7f6e\u5165\u6808\u3002\n\n3.\u9047\u5230\u201c&\u201d\u6216\u201c|\u201d\uff0c\u53d6\u51fa\u4e24\u4e2a\u6808\u5934\uff0c\u628a\u76f8\u5e94\u7ecf\u8fc7\u4e0e\u6216\u8005\u6216\u8fd0\u7b97\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u5165num\uff0c\u628a\u8fd0\u7b97\u7b26\u52a0\u5165s1\uff0c\u518d\u628a\u4e24\u4e2a\u6808\u5934\u4e92\u76f8\u52a0\u5165\u5230\u5bf9\u65b9\u7684br\u91cc\uff0c\u628a\u4e24\u4e2a\u6808\u5934\u7684fa\u6539\u4e3a&\u6216|\u5728s1\u91cc\u7684\u4f4d\u7f6e\uff0c\u628a\u8fd0\u7b97\u7b26\u7684\u4f4d\u7f6e\u52a0\u5165\u6808\u3002\n\n4.\u6839\u636e\u540e\u7f00\u8868\u8fbe\u5f0f\u7684\u5b9a\u4e49\uff0c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u5fc5\u5b9a\u662f\u7236\u8282\u70b9\uff0c\u5373num[s1[0]]\u5c31\u662f\u6211\u4eec\u8981\u7684\u7b54\u6848\u3002\n\n5.\u4e3a\u4ec0\u4e48\u9047\u5230\u8fd0\u7b97\u7b26\uff0c\u6808\u5934\u4e00\u5b9a\u5c31\u662f\u5b83\u7684\u513f\u5b50\u5462\uff1f\u56e0\u4e3a\u5982\u679c\u4e0d\u5148\u7528\u6392\u5728\u540e\u9762\u7684\uff0c\u800c\u9009\u4e86\u524d\u9762\u7684\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u4f1a\u6709num\u6ca1\u6709\u88ab\u8ba1\u7b97\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c\u540e\u7f00\u8868\u8fbe\u5f0f\u65e0\u8bef\uff0c\u5219\u53d6\u6808\u5934\u4e00\u5b9a\u4f1a\u88ab\u8ba1\u7b97\u5b8c\u3002\uff08\u5176\u5b9e\u4e5f\u662f\u540e\u7f00\u8868\u8fbe\u5f0f\u7684\u6027\u8d28awa\uff09\n\n\u8fd9\u662f\u5904\u7406\u7684\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i=0;i<s.length();i++)\n\t{\n\t\tif(s[i]=='x')\n\t\t{\n\t\t\ts1[0]++;\n\t\t\twhile(++i && s[i]>='0' && s[i]<='9')\ts1[s1[0]]=s1[s1[0]]*10+s[i]-'0';\n\t\t\tpla[s1[s1[0]]]=s1[0];\n\t\t\tnum[s1[0]]=a[s1[s1[0]]];\n\t\t\tfatherless.push(s1[0]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(s[i]=='!')\n\t\t\t{\n\t\t\t\tnum1=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\ts1[++s1[0]]=1000001;\n\t\t\t\tnum[s1[0]]=!num[num1];\n\t\t\t\tfatherless.push(s1[0]);\n\t\t\t\tfa[num1]=s1[0];\n\t\t\t}\n\t\t\tif(s[i]=='&')\n\t\t\t{\n\t\t\t\tnum1=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\tnum2=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\ts1[++s1[0]]=1000002;\n\t\t\t\tif(num[num1]==1 && num[num2]==1)\tnum[s1[0]]=1;\n\t\t\t\telse\tnum[s1[0]]=0;\n\t\t\t\tfatherless.push(s1[0]);\n\t\t\t\tfa[num1]=s1[0];\n\t\t\t\tfa[num2]=s1[0];\n\t\t\t\tbr[num1]=num2;\n\t\t\t\tbr[num2]=num1;\n\t\t\t}\n\t\t\tif(s[i]=='|')\n\t\t\t{\n\t\t\t\tnum1=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\tnum2=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\ts1[++s1[0]]=1000003;\n\t\t\t\tif(num[num1]==0 && num[num2]==0)\tnum[s1[0]]=0;\n\t\t\t\telse\tnum[s1[0]]=1;\n\t\t\t\tfatherless.push(s1[0]);\n\t\t\t\tfa[num1]=s1[0];\n\t\t\t\tfa[num2]=s1[0];\n\t\t\t\tbr[num1]=num2;\n\t\t\t\tbr[num2]=num1;\n\t\t\t}\n\t\t}\n\t}\n```\n\n\u63a5\u7740\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8981\u53d6\u53cd\u7684\u6570\uff0c\u627e\u5230\u5b83\u7684fa\uff08\u663e\u7136\u80af\u5b9a\u662f\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff09\uff0c**\u5982\u679c\u8be5\u6570\u7684num\u53d6\u53cd\u540e\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff0c\u5c31\u76f4\u63a5\u8f93\u51fanum[s1[0]]**\uff0c\uff08\u8003\u8bd5\u7684\u65f6\u5019\u6211\u5c31\u5fd8\u4e86\u8fd9\u4e00\u70b9\uff0c\u5bfc\u81f4TLE\uff0c\u4e0d\u8fc7\u52a0\u5165\u540e\u7a33\u7a33\u5730AC\uff09\u5426\u5219\u7ee7\u7eeddfs\u3002\n\n\u8fd9\u662fdfs\u4ee3\u7801\uff1a\n\n```cpp\nvoid f(int k)\n{\n\tif(k==s1[0])\n\t{\n\t\tprintf(\"%d\\n\",num[k]);\n\t\treturn;\n\t}\n\tif(s1[fa[k]]==1000001)\n\t{\n\t\tbool nup=num[fa[k]];\n\t\tif(nup==!num[k])\n\t\t{\n\t\t\tprintf(\"%d\\n\",num[s1[0]]);\n\t\t\treturn;\n\t\t}\n\t\tnum[fa[k]]=!num[k];\n\t\tf(fa[k]);\n\t\tnum[fa[k]]=nup;\n\t\treturn;\n\t}\n\tif(s1[fa[k]]==1000002)\n\t{\n\t\tbool nup=num[fa[k]];\n\t\tif(num[br[k]]==1 && num[k]==1)\tnum[fa[k]]=1;\n\t\telse\tnum[fa[k]]=0;\n\t\tif(nup==num[fa[k]])\n\t\t{\n\t\t\tprintf(\"%d\\n\",num[s1[0]]);\n\t\t\treturn;\n\t\t}\n\t\tf(fa[k]);\n\t\tnum[fa[k]]=nup;\n\t\treturn;\n\t}\n\tif(s1[fa[k]]==1000003)\n\t{\n\t\tbool nup=num[fa[k]];\n\t\tif(num[br[k]]==0 && num[k]==0)\tnum[fa[k]]=0;\n\t\telse\tnum[fa[k]]=1;\n\t\tif(nup==num[fa[k]])\n\t\t{\n\t\t\tprintf(\"%d\\n\",num[s1[0]]);\n\t\t\treturn;\n\t\t}\n\t\tf(fa[k]);\n\t\tnum[fa[k]]=nup;\n\t\treturn;\n\t}\n}\n```\n\n\u8fd9\u5c31\u662f\u5927\u4f53\u7684\u601d\u8def\uff0c\u9001\u4e0a\u5b8c\u6574\u4ee3\u7801\uff08\u5f53\u4e2d\u7684read\uff08\uff09\u51fd\u6570\u662f\u5feb\u8bfb\uff0c\u4e0d\u8fc7\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u6b66\u4e4b\u5730\uff0c\u56e0\u4e3a\u8be5TLE\u7684\u90fdTLE\u4e86\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring s;\nint n,q,kk,num1,num2,s1[1000005],pla[100005],fa[1000005],br[1000005];\nbool a[100005],num[1000005];\nstack<int> fatherless;\nvoid f(int k)\n{\n\tif(k==s1[0])\n\t{\n\t\tprintf(\"%d\\n\",num[k]);\n\t\treturn;\n\t}\n\tif(s1[fa[k]]==1000001)\n\t{\n\t\tbool nup=num[fa[k]];\n\t\tif(nup==!num[k])\n\t\t{\n\t\t\tprintf(\"%d\\n\",num[s1[0]]);\n\t\t\treturn;\n\t\t}\n\t\tnum[fa[k]]=!num[k];\n\t\tf(fa[k]);\n\t\tnum[fa[k]]=nup;\n\t\treturn;\n\t}\n\tif(s1[fa[k]]==1000002)\n\t{\n\t\tbool nup=num[fa[k]];\n\t\tif(num[br[k]]==1 && num[k]==1)\tnum[fa[k]]=1;\n\t\telse\tnum[fa[k]]=0;\n\t\tif(nup==num[fa[k]])\n\t\t{\n\t\t\tprintf(\"%d\\n\",num[s1[0]]);\n\t\t\treturn;\n\t\t}\n\t\tf(fa[k]);\n\t\tnum[fa[k]]=nup;\n\t\treturn;\n\t}\n\tif(s1[fa[k]]==1000003)\n\t{\n\t\tbool nup=num[fa[k]];\n\t\tif(num[br[k]]==0 && num[k]==0)\tnum[fa[k]]=0;\n\t\telse\tnum[fa[k]]=1;\n\t\tif(nup==num[fa[k]])\n\t\t{\n\t\t\tprintf(\"%d\\n\",num[s1[0]]);\n\t\t\treturn;\n\t\t}\n\t\tf(fa[k]);\n\t\tnum[fa[k]]=nup;\n\t\treturn;\n\t}\n}\nint read()\n{\n\tint res=0,f=1;\n\tchar C=getchar();\n\twhile(C<'0' || C>'9')\n\t{\n\t\tif(C=='-')\tf=-1;\n\t\tC=getchar();\n\t}\n\twhile(C>='0' && C<='9')\tres=res*10+C-'0',C=getchar();\n\treturn res*f;\n}\nint main()\n{\n\t//freopen(\"expr.in\",\"r\",stdin);\n\t//freopen(\"expr.out\",\"w\",stdout);\n\tgetline(cin,s);\n\tn=read();\n\tfor(int i=1;i<=n;i++)\ta[i]=read();\n\tfor(int i=0;i<s.length();i++)\n\t{\n\t\tif(s[i]=='x')\n\t\t{\n\t\t\ts1[0]++;\n\t\t\twhile(++i && s[i]>='0' && s[i]<='9')\ts1[s1[0]]=s1[s1[0]]*10+s[i]-'0';\n\t\t\tpla[s1[s1[0]]]=s1[0];\n\t\t\tnum[s1[0]]=a[s1[s1[0]]];\n\t\t\tfatherless.push(s1[0]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(s[i]=='!')\n\t\t\t{\n\t\t\t\tnum1=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\ts1[++s1[0]]=1000001;\n\t\t\t\tnum[s1[0]]=!num[num1];\n\t\t\t\tfatherless.push(s1[0]);\n\t\t\t\tfa[num1]=s1[0];\n\t\t\t}\n\t\t\tif(s[i]=='&')\n\t\t\t{\n\t\t\t\tnum1=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\tnum2=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\ts1[++s1[0]]=1000002;\n\t\t\t\tif(num[num1]==1 && num[num2]==1)\tnum[s1[0]]=1;\n\t\t\t\telse\tnum[s1[0]]=0;\n\t\t\t\tfatherless.push(s1[0]);\n\t\t\t\tfa[num1]=s1[0];\n\t\t\t\tfa[num2]=s1[0];\n\t\t\t\tbr[num1]=num2;\n\t\t\t\tbr[num2]=num1;\n\t\t\t}\n\t\t\tif(s[i]=='|')\n\t\t\t{\n\t\t\t\tnum1=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\tnum2=fatherless.top();\n\t\t\t\tfatherless.pop();\n\t\t\t\ts1[++s1[0]]=1000003;\n\t\t\t\tif(num[num1]==0 && num[num2]==0)\tnum[s1[0]]=0;\n\t\t\t\telse\tnum[s1[0]]=1;\n\t\t\t\tfatherless.push(s1[0]);\n\t\t\t\tfa[num1]=s1[0];\n\t\t\t\tfa[num2]=s1[0];\n\t\t\t\tbr[num1]=num2;\n\t\t\t\tbr[num2]=num1;\n\t\t\t}\n\t\t}\n\t}\n\tq=read();\n\tfor(int i=1;i<=q;i++)\tkk=pla[read()],num[kk]=!num[kk],f(kk),num[kk]=!num[kk];\n\treturn 0;\n}\n```\n\n\u8fd9\u9898\u4e3b\u8981\u770b\u7ec6\u5fc3\uff0c\u56e0\u4e3a\u6211\u592a\u7c97\u60f9\uff0c\u6240\u4ee5\u53ea\u62ff\u60f930\u5206\u3002\u5176\u5b9e\u5982\u679c\u8003\u8bd5\u4e0d\u5403\u5de7\u514b\u529b\u800c\u591a\u82b1\u70b9\u65f6\u95f4\u5728\u4ee3\u7801\u4e0a\uff0c\u7237\u5c31320\u60f9\uff0c\u53ef\u60dc\u554a\u3002\u3002\u3002",
        "postTime": 1604806868,
        "uid": 208131,
        "name": "\u5f20\u9a70666",
        "ccfLevel": 0,
        "title": "P7073\u9898\u89e3"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u79cd\u590d\u6742\u5ea6\u4fdd\u8bc1\u6b63\u786e\u7684\u7ebf\u6027\u505a\u6cd5\u3002\n\n\u9996\u5148$30$\u5206\u7684\u505a\u6cd5\u5f88\u597d\u60f3\uff0c\u6bcf\u6b21\u66b4\u529b\u8ba1\u7b97\u5c31\u53ef\u4ee5\u4e86\uff0c$O(|s|q)$\u3002\u6709\u4e00\u4e2a\u4f18\u5316\u662f\u5148\u6839\u636e\u540e\u7f00\u8868\u8fbe\u5f0f\u5efa\u6811\uff0c\u9884\u5148\u8ba1\u7b97\uff0c\u53ea\u9012\u5f52\u8ba1\u7b97\u4fee\u6539\u7684\u503c\uff0c\u4f46\u590d\u6742\u5ea6\u5f88\u7384\u5b66\uff0c\u4f1a\u9000\u5316\uff0c\u4e8e\u662f\u8981\u6362\u4e2a\u601d\u8def\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u53d6\u503c\u53ea\u6709\u4e24\u79cd\uff0c\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u53d8\u91cf\u4f1a\u88ab\u6539\u53d8\u3002\u8fd8\u662f\u5148\u5efa\u6811\uff0c\u8003\u8651\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u6539\u53d8\u4f1a\u4e0d\u4f1a\u6539\u53d8\u6839\u8282\u70b9\uff0c\u5373\u8868\u8fbe\u5f0f\u7684\u503c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u6709\uff1a\n\n\u5982\u679c\u4e3a\u53d8\u91cf\uff0c\u76f4\u63a5\u6807\u8bb0\u4f1a\u6539\u53d8\u8868\u8fbe\u5f0f\u7684\u503c\n\n\u5982\u679c\u4e3a\u975e\u8fd0\u7b97\uff0c\u9012\u5f52\u5b50\u6811\u3002\n\n\u5982\u679c\u4e3a\u6216\u8fd0\u7b97\uff1a\n\n\u5de6\u513f\u5b50\u503c\u4e3a$1$\uff0c\u53f3\u513f\u5b50\u503c\u4e3a$1$\uff0c\u6539\u53d8\u54ea\u4e2a\u90fd\u6ca1\u6709\u7528\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n\n\u5de6\u513f\u5b50\u503c\u4e3a$1$\uff0c\u53f3\u513f\u5b50\u503c\u4e3a$0$\uff0c\u9012\u5f52\u5de6\u513f\u5b50\uff08\u53ea\u6709\u5de6\u513f\u5b50\u4f1a\u6539\u53d8\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\uff09\u3002\n\n\u5de6\u513f\u5b50\u503c\u4e3a$0$\uff0c\u53f3\u513f\u5b50\u503c\u4e3a$1$\uff0c\u9012\u5f52\u53f3\u513f\u5b50\uff08\u53ea\u6709\u53f3\u513f\u5b50\u4f1a\u6539\u53d8\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\uff09\u3002\n\n\u5de6\u513f\u5b50\u503c\u4e3a$1$\uff0c\u53f3\u513f\u5b50\u503c\u4e3a$1$\uff0c\u9012\u5f52\u4e24\u4e2a\u5b50\u6811\u3002\n\n\u5982\u679c\u4e3a\u4e0e\u8fd0\u7b97\uff1a\n\n\u5728\u505a\u6cd5\u4e0a\u540c\u4e0a\uff0c\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n\n### \u6ce8\u610f\uff0c\u6bcf\u6b21\u6539\u53d8\u7684\u53ea\u6709\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u4e14\u4e0d\u4f1a\u5ef6\u7eed\uff01\n\n\u7efc\u4e0a\uff0c\u5148\u5efa\u6811\uff0c\u518d\u6c42\u503c\uff0c\u6700\u540e\u518d\u6765\u4e00\u6b21dfs\u6807\u8bb0\u5bf9\u8868\u8fbe\u5f0f\u7684\u503c\u6709\u5f71\u54cd\u7684\u53d8\u91cf\u5373\u53ef\uff0c\u8be2\u95ee$O(1)$\uff0c\u603b\u590d\u6742\u5ea6$O(|s|  +q)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[1000005],cnt,root,son[1000005][2],opt[1000005];\nint val[1000005],num[1000005],q;\nbool flag[1000005];\nstring s;\nstack<int>x;\nvoid input() {\n\twhile(cin>>s) {\n\t\tif(s==\"!\")a[++cnt]=-1;\n\t\telse if(s==\"|\")a[++cnt]=-2;\n\t\telse if(s==\"&\")a[++cnt]=-3;\n\t\telse {\n\t\t\tint sum=0;\n\t\t\tfor(int i=0; i<s.size(); i++)\n\t\t\t\tif(s[i]>='0'&&s[i]<='9')\n\t\t\t\t\tsum=sum*10+s[i]-'0';\n\t\t\tif(s[0]=='x')a[++cnt]=sum;\n\t\t\telse {\n\t\t\t\tn=sum;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid query() {\n\tfor(int i=1; i<=cnt; i++) {\n\t\topt[i]=a[i];\n\t\tif(a[i]>=1)x.push(i);\n\t\telse if(a[i]==-1) {\n\t\t\tint sum=x.top();\n\t\t\tx.pop();\n\t\t\tson[i][0]=sum;\n\t\t\tx.push(i);\n\t\t} else {\n\t\t\tint sum1=x.top();\n\t\t\tx.pop();\n\t\t\tint sum2=x.top();\n\t\t\tx.pop();\n\t\t\tson[i][0]=sum1;\n\t\t\tson[i][1]=sum2;\n\t\t\tx.push(i);\n\t\t}\n\t}\n\troot=x.top();\n\treturn;\n}\nvoid dfs1(int now) {\n\tif(opt[now]>=1) {\n\t\tnum[now]=val[opt[now]];\n\t\treturn;\n\t} else if(opt[now]==-1) {\n\t\tdfs1(son[now][0]);\n\t\tnum[now]=!num[son[now][0]];\n\t} else if(opt[now]==-2) {\n\t\tdfs1(son[now][0]);\n\t\tdfs1(son[now][1]);\n\t\tnum[now]=num[son[now][0]]|num[son[now][1]];\n\t} else {\n\t\tdfs1(son[now][0]);\n\t\tdfs1(son[now][1]);\n\t\tnum[now]=num[son[now][0]]&num[son[now][1]];\n\t}\n}\nvoid dfs2(int now) {\n\tif(opt[now]>=1)flag[opt[now]]=true;\n\telse if(opt[now]==-1)dfs2(son[now][0]);\n\telse if(opt[now]==-3) {\n\t\tif(num[son[now][0]]==1&&num[son[now][1]]==1) {\n\t\t\tdfs2(son[now][0]);\n\t\t\tdfs2(son[now][1]);\n\t\t} else if(num[son[now][0]]==1&&num[son[now][1]]==0)\n\t\t\tdfs2(son[now][1]);\n\t\telse if(num[son[now][0]]==0&&num[son[now][1]]==1)\n\t\t\tdfs2(son[now][0]);\n\t\telse return;\n\t} else {\n\t\tif(num[son[now][0]]==0&&num[son[now][1]]==0) {\n\t\t\tdfs2(son[now][0]);\n\t\t\tdfs2(son[now][1]);\n\t\t} else if(num[son[now][0]]==1&&num[son[now][1]]==0)\n\t\t\tdfs2(son[now][0]);\n\t\telse if(num[son[now][0]]==0&&num[son[now][1]]==1)\n\t\t\tdfs2(son[now][1]);\n\t\telse return;\n\t}\n}\nint main() {\n\tinput();\n\tquery();\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&val[i]);\n\tdfs1(root);\n\tdfs2(root);\n\tcin>>q;\n\twhile(q--) {\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(flag[x])printf(\"%d\\n\",!num[root]);\n\t\telse printf(\"%d\\n\",num[root]);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1604797960,
        "uid": 200044,
        "name": "JS_TZ_ZHR",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7073 \u3010\u8868\u8fbe\u5f0f\uff08\u6682\u65e0\u6570\u636e\uff09\u3011"
    }
]