[
    {
        "content": "[\u6211\u7684\u535a\u5ba2\uff0c\u6b22\u8fce\u6765\u8e29( \u2022 \u0300\u03c9\u2022\u0301 )\u2727](https://www.cnblogs.com/ymzqwq/p/bzoj4568.html)\n\n\u63d0\u4f9b\u4e00\u4e2a\u4e24\u4e2alog\u7684\u5728\u7ebf\u505a\u6cd5\uff0c\u6709\u70b9\u7c7b\u4f3c[kcz\u8bf4\u7684\u5e8f\u5217\u505a\u6cd5](https://www.luogu.org/problemnew/solution/P3292)  \nkcz\u8bf4\u7684\u90a3\u4e2a\uff0c\u53ef\u4ee5\u53bb\u505a[\u8fd9\u9898](https://www.luogu.org/problem/CF1100F)\uff0c\u88f8\u7684\n\n\u5bf9\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4ece\u6839\u5230\u5b83\u7684\u7ebf\u6027\u57fa\uff0c\u5e76\u4e14\u8d2a\u5fc3\u7684\u8ba9\u9ad8\u4f4d\u7684\u5411\u91cf\u5bf9\u5e94\u7684\u70b9\u6df1\u5ea6\u5c3d\u91cf\u5927\uff0c\u5e76\u9884\u5904\u7406\u51fa $pos[x][i]$ \u8868\u793a $x$ \u53f7\u7ed3\u70b9\u7b2c $i$ \u4f4d\u7684\u5411\u91cf\u5bf9\u5e94\u6700\u6df1\u7684\u70b9\uff0c\u53ef\u4ee5\u7528\u4ee5\u4e0b\u4ee3\u7801\u6c42\u51fa\u3002\n\n```cpp\nLL bas[N][61];\nint pos[N][61];\nvoid ins(int p,LL bas[],int pos[]){\n\tLL x=a[p];\n\tif (x==0) return;\n\trf(i,60,0)\n\t if ((x>>i)&1){\n\t \tif (!bas[i]){\n\t \t\tbas[i]=x;pos[i]=p;\n\t \t\tbreak;\n\t\t}\n\t\tif (dep[p]>dep[pos[i]]) swap(pos[i],p),swap(x,bas[i]); //\u786e\u4fdd\u7b2ci\u4f4d\u6df1\u5ea6\u5c3d\u91cf\u5927\n\t\tx^=bas[i];\n\t }\n}\n```\n\u8fd9\u6837\u5199\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\uff0c\u5f53\u7b2c $i$ \u4f4d\u78b0\u5230\u4e86\u4e00\u4e2a\u66f4\u6df1\u7684\u70b9\u7684\u65f6\u5019\uff0c\u5c31\u76f8\u5f53\u4e8e\u4ea4\u6362\u4e86\u4e00\u4e0b\u63d2\u5165\u7684\u987a\u5e8f\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u67e5\u8be2 $x,y$ \uff0c\u5047\u8bbe\u5176LCA\u6df1\u5ea6\u4e3a $d$ \uff0c\u6211\u4eec\u53ea\u53d6 $pos[x][i] \\geq d$ \u548c $pos[y][i] \\geq d$ \u7684\u90a3\u4e9b\u5411\u91cf\uff0c\u66b4\u529b\u5408\u5e76\u5c31\u884c\u4e86\u30fe(\u25cd\u00b0\u2207\u00b0\u25cd)\uff89\uff9e\n\n\u8fd9\u4e2a\u7b97\u6cd5\u8dd1\u5f97\u5f88\u5feb\uff0c\u6211\u4e5f\u6ca1\u7279\u610f\u5361\u5e38\uff0c\u5c31\u6d1b\u8c37\u7b2c\u4e8c\u9875\uff08\u5f00O2\u5c31rank2\uff09\u4e86\uff0cBZOJ\u662frank5\u3002  \n~~\u4f5c\u4e3akcz\u7684\u5c0f\u8ff7\u59b9\uff0c\u5728\u6b64\u6084\u6084%%%kcz~~\n\n\u6700\u540e\u8d34\u4e00\u4e0b\u4e11\u964b\u7684\u4ee3\u7801\uff0c\u611f\u89c9\u6bd4\u70b9\u5206\u4ec0\u4e48\u7684\u597d\u5199\u554a~\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define re register\n#define fr(i,x,y) for(int i=(x);i<=(y);i++)\n#define rf(i,x,y) for(int i=(x);i>=(y);i--)\n#define frl(i,x,y) for(int i=(x);i<(y);i++)\n#define frz(i,x,y) for(int i=x,z=y;i<=z;i++)\nusing namespace std;\nconst int N=20002;\nconst int M=N<<1;\nconst int Lg=15;\nint n,q;\nLL a[N];\nint cnt,head[N],Next[M],v[M];\n\ninline void read(int &x){\n\tchar ch=getchar();x=0;int w=0;\n\tfor(;ch<'0'||ch>'9';ch=getchar()) if (ch=='-') w=1;\n\tfor(;ch>='0'&&ch<='9';ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n\tif (w) x=-x;\n}\ninline void read(LL &x){\n\tchar ch=getchar();x=0;int w=0;\n\tfor(;ch<'0'||ch>'9';ch=getchar()) if (ch=='-') w=1;\n\tfor(;ch>='0'&&ch<='9';ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n\tif (w) x=-x;\n}\n\nvoid add(int x,int y){ Next[++cnt]=head[x];head[x]=cnt;v[cnt]=y; }\n\nint dep[N],f[N][Lg];\nLL bas[N][61];\nint pos[N][61];\nvoid ins(int p,LL bas[],int pos[]){\n\tLL x=a[p];\n\tif (x==0) return;\n\trf(i,60,0)\n\t if ((x>>i)&1){\n\t \tif (!bas[i]){\n\t \t\tbas[i]=x;pos[i]=p;\n\t \t\tbreak;\n\t\t}\n\t\tif (dep[p]>dep[pos[i]]) swap(pos[i],p),swap(x,bas[i]);\n\t\tx^=bas[i];\n\t }\n}\n\nvoid dfs(int x,int fa){\n\tdep[x]=dep[fa]+1;\n\tf[x][0]=fa;\n\tfrl(i,1,Lg) f[x][i]=f[f[x][i-1]][i-1];\n\t\n\tfr(i,0,60) pos[x][i]=pos[fa][i],bas[x][i]=bas[fa][i];\n\tins(x,bas[x],pos[x]);\n\t\n\tfor(int i=head[x];i;i=Next[i])\n\t if (v[i]!=fa) dfs(v[i],x);\n}\n\nint getLCA(int x,int y){\n\tif (dep[x]<dep[y]) swap(x,y);\n\trf(i,Lg-1,0) if (dep[f[x][i]]>=dep[y]) x=f[x][i];\n\tif (x==y) return x;\n\trf(i,Lg-1,0) if (f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\n\nLL base[61];\nint main(){\n\tread(n);read(q);\n\tfr(i,1,n) read(a[i]);\n\tint x,y;\n\tfr(i,2,n){\n\t\tread(x);read(y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tdfs(1,0);\n\twhile(q--){\n\t\tread(x);read(y);\n\t\tint lca=getLCA(x,y);\n\t\trf(i,60,0) if (dep[pos[x][i]]>=dep[lca]) base[i]=bas[x][i];else base[i]=0;\n\t\trf(i,60,0)\n\t\t if (dep[pos[y][i]]>=dep[lca]){\n\t\t \tLL x=bas[y][i];\n\t\t \tif (x==0) continue;\n\t\t \trf(j,i,0)\n\t\t \t if ((x>>j)&1){\n\t\t \t \tif (!base[j]){ base[j]=x;break; }\n\t\t\t\tx^=base[j];\n\t\t\t }\n\t\t }\n\t\tLL ans=0;\n\t\trf(i,60,0) if ((ans^base[i])>ans) ans^=base[i];\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1565259924,
        "uid": 6174,
        "name": "\u591c\u732b\u5b50\u9a71\u868a\u5668",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "\u4ea6\u6216\u6700\u5927\u503c<=>\u6c42\u51fa\u7ebf\u6027\u57fa\u3002\n\n\u7ebf\u6027\u57fa\u652f\u6301O(log)\u63d2\u5165\u3002\n\n\u7531\u4e8e\u5411\u91cf\u53ea\u6709log\u4e2a\uff0c\u5408\u5e76\u65f6O(log)\u590d\u5236\uff0c\u4e4b\u540e\u66b4\u529b\u63d2\u5165\uff0c\u5408\u5e76\u65f6\u95f4O(log^2)\u3002\n\n\u5982\u679c\u7528\u500d\u589e\uff0c\u5fc5\u7136\u5c31\u8981\u5408\u5e76\u591a\u4e2a\u7ebf\u6027\u57fa\uff0c\u65f6\u95f4\u5c31\u4f1a\u662flog^3\u3002\n\n\u8003\u8651\u7528\u70b9\u5206\u6cbb\uff0c\n\nO(nlogn)\u5f97\u5230\u6839\u5230\u6bcf\u4e2a\u70b9\u7684\u7ebf\u6027\u57fa\uff0c\n\n\u5904\u7406lca\u5728\u5f53\u524d\u6839\u7684\u8be2\u95ee\uff0c\u5c31\u53ea\u7528\u5408\u5e76\u4e24\u4e2a\u7ebf\u6027\u57fa\u3002\n\n\u65f6\u95f4O((n+q)\\*log^2)\n\n(\u5982\u679c\u662f\u5e8f\u5217\u4e0a\u7684\u8fd8\u53ef\u4ee5\u505a\u5230\u53ea\u6709\u4e00\u4e2alog\uff0c\n\n\u4ece\u5de6\u5230\u53f3\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u8d2a\u5fc3\u7684\u8ba9\u9ad8\u4f4d\u7684\u5411\u91cf\u5bf9\u5e94\u7684\u5de6\u7aef\u70b9\u5c3d\u91cf\u9760\u53f3\u8fb9\u3002\n\n\u67e5\u8be2\u65f6\u53ea\u4f7f\u7528\u5de6\u7aef\u70b9\u5728\u8be2\u95ee\u5de6\u7aef\u70b9\u53f3\u8fb9\u7684\u5411\u91cf\u3002)\n\n\u6211\u8fd8\u6709\u4e00\u4e2a\u60f3\u6cd5\u662f\u7528tarjan\u3002(\u8fd9\u79cd\u6211\u8fd8\u6ca1\u5199\u8fc7)\n\n\u5f53\u4e00\u4e2a\u8be2\u95ee\u4e24\u4e2a\u70b9\u90fd\u88ab\u8bbf\u95ee\u540e\u5728lca\u5904\u6253\u4e2a\u6807\u8bb0\uff0c\n\n\u5f53lca\u5904\u7406\u5b8c\u5b50\u6811\u540e\uff0c\u5904\u7406\u6240\u6709\u6807\u8bb0\u3002\n\nO((n+m)a\\*log^2)\n\n\u53ef\u4ee5\u5148\u5904\u7406lca\uff0c\u518d\u6765\u4e00\u904dtarjan\u5904\u7406\u8be2\u95ee\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define us unsigned short\n#define ll long long\nconst int N=20010,M=200010;\n\nint n,m,i,x,y;\nll a[N];\nint t[N];\nstruct edge\n{\n    int to,next;\n}l[N+M<<1];int e;\nint qt[N];\nll ans[M];bool have[M];\n\nbool vis[N];\nus q[N],head,tail;\nnamespace kcz\n{\nus sz[N],f[N];\nus get_g(int x)\n{\n    q[tail=1]=x;f[x]=0;\n    for(head=1;head<=tail;++head)\n    {\n        x=q[head];sz[x]=1;\n        for(i=t[x];y=l[i].to;i=l[i].next) \n        if(!vis[y]&&y!=f[x])\n        {\n            f[y]=x;\n            q[++tail]=y;\n        }\n    }\n    for(head=tail;head;--head)\n    {\n        x=q[head];\n      if(sz[x]>=(tail>>1)) return x;\n        sz[f[x]]+=sz[x];\n    }\n}\n};\nus belong[N];\nll g[61],f[N][61];\n\nvoid ins(ll *f,ll x)\n{\n    short i; \n    for(i=60;x;--i) \n    if((x>>i)&1) \n     if(!f[i]){f[i]=x;return ;}\n     else x^=f[i];\n}\nll qiu(ll *f)\n{\n    ll ans=0;\n    for(short i=60;i>=0;--i)\n    if((ans^f[i])>ans) ans^=f[i];\n    return ans;\n}\nus now;\nvoid dfs(us x,us fr)\n{\n    belong[x]=now;\n    int i;us y;\n    for(i=0;i<=60;++i) f[x][i]=f[fr][i];\n    ins(f[x],a[x]);\n    for(i=t[x];y=l[i].to;i=l[i].next)\n    if(y!=fr&&!vis[y]) dfs(y,x);\n}\nvoid merge(ll *g,ll *f1,ll *f2)\n{\n    int i;\n    for(i=0;i<=60;++i) g[i]=f1[i];\n    for(i=0;i<=60;++i) ins(g,f2[i]);\n}\nvoid solve(int x)\n{\n    vis[x]=1;\n    belong[x]=0;\n    for(i=0;i<=60;++i) f[x][i]=0;\n    ins(f[x],a[x]);\n    for(i=t[x];now=l[i].to;i=l[i].next) dfs(now,x);\n    for(head=1;head<=tail;++head) \n    {\n        x=q[head];\n        for(i=qt[x];y=l[i].to;i=l[i].next)\n        if(!have[i>>1]&&belong[x]!=belong[y])\n        {\n            have[i>>1]=1;\n            merge(g,f[x],f[y]);\n            ans[i>>1]=qiu(g);\n        }\n    } \n}\n\n#define ch_top 10000000\nchar ch[ch_top],*now_r=ch,*now_w=ch-1;\nvoid read(int &x)\n{\n    while(*now_r<'0') ++now_r;\n    for(x=*now_r-'0';*++now_r>='0';) x=(x<<1)+(x<<3)+*now_r-'0';\n}\nvoid read(ll &x)\n{\n    while(*now_r<'0') ++now_r;\n    for(x=*now_r-'0';*++now_r>='0';) x=(x<<1)+(x<<3)+*now_r-'0';\n}\nvoid write(ll &x)\n{\n    static us st[30],top;\n    if(!x) *++now_w='0';\n    else\n    {\n        for(;x;x/=10) st[++top]=x%10;\n        for(;top;--top) *++now_w='0'+st[top];\n    }\n    *++now_w='\\n';\n}\n\nint main()\n{ freopen(\"1.in\",\"r\",stdin);freopen(\"1.out\",\"w\",stdout);\n    fread(ch,1,ch_top,stdin);\n    read(n);read(m);\n    int i;\n    for(i=1;i<=n;++i) read(a[i]);\n    e=M<<1; \n    for(i=1;i<n;++i)\n    {\n        read(x);read(y);\n        l[++e]=(edge){y,t[x]};t[x]=e;\n        l[++e]=(edge){x,t[y]};t[y]=e;\n    }\n    e=1;\n    for(i=1;i<=m;++i) \n    {\n        read(x);read(y);\n        l[++e]=(edge){y,qt[x]};qt[x]=e;\n        l[++e]=(edge){x,qt[y]};qt[y]=e;\n        if(x==y) {have[i]=1;ans[i]=a[x];}\n    }\n    for(i=1;i<=n;++i) \n    while(!vis[i]) solve(kcz::get_g(i));\n    for(i=1;i<=m;++i) write(ans[i]);\n    fwrite(ch,1,now_w-ch+1,stdout);\n}\nO(n*a+m*a*log^2)\n\n```",
        "postTime": 1491133728,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "## \u4e8b\u5b9e\u4e0a\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u7528\u500d\u589e\u505a\u5230\u4e24\u4e2a$log$\u3002\n\n&emsp;&emsp;\u56e0\u4e3a\u7ebf\u5f62\u57fa\u662f**\u53ef\u4ee5\u652f\u6301**$RMQ$\u7684\uff0c\u56e0\u4e3a\u4e2d\u95f4\u91cd\u590d\u7684\u90e8\u5206\u5728\u7b2c\u4e8c\u6b21\u63d2\u5165\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u88ab\u63d2\u8fdb\u53bb\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u4f7f\u7528\u500d\u589e\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e0d\u7528\u500d\u589e\u5408\u5e76$log$\u6b21\u7ebf\u5f62\u57fa\uff0c\u800c\u7528$RMQ$\u7684\u601d\u60f3\u5408\u5e76\u5373\u53ef\u62b9\u53bb\u4e00\u4e2a$log$\u3002\n\n&emsp;&emsp;\u603b\u590d\u6742\u5ea6$O(mlog^2n+nlog^3n)$\u3002\u56e0\u4e3a$n$\u6bd4$m$\u5c0f\u5f88\u591a\u6240\u4ee5\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\nusing namespace std;\n#define ll long long\n#define gc getchar()\ninline ll read(){\n\tregister ll x(0),f(1);register char c(gc);\n\twhile(c>'9'||c<'0')f=c=='-'?-1:1,c=gc;\n\twhile(c>='0'&&c<='9')x=x*10+c-48,c=gc;\n\treturn f*x;\n}\nconst int N=21000;\nvoid ins(ll x,ll *A){\n\tregister int i;\n\tif(x) \n\tfor(i=60;i>=0;i--)\n\t\tif((1ll<<i)&x)\n\t\t\tif(!A[i]){A[i]=x;break;}\n\t\t\telse{x^=A[i];}\n\t\telse if(!x){\n\t\t\tbreak;\n\t\t}\n}\nvoid merge(ll *A,ll *C){\n\tregister int i;\n\tfor(i=60;i>=0;i--)if(A[i])ins(A[i],C);\n}\nstruct edge{\n\tint next,to;\n}e[N<<1];\nint head[N],tot;\nvoid add(int x,int y){\n\te[++tot].next=head[x];e[tot].to=y;head[x]=tot;\n}\nint fa[N][24],lg[N],deep[N],n,m;\nll d[N][24][64],val[N];\nvoid dfs(int u,int fath){\n\tdeep[u]=deep[fath]+1;\n\tfa[u][0]=fath;\n\tins(val[u],d[u][0]);\n\tfor(int i=1;i<=lg[deep[u]];i++){\n\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\t\tmerge(d[u][i-1],d[u][i]);\n\t\tmerge(d[fa[u][i-1]][i-1],d[u][i]);\n\t}\n\tfor(int i=head[u];i;i=e[i].next)\n\t\tif(e[i].to!=fath)\n\t\t\tdfs(e[i].to,u);\n}\nint get(int x,int y){\n\tif(deep[x]<deep[y])swap(x,y);\n\twhile(deep[x]>deep[y]){\n\t\tx=fa[x][lg[deep[x]-deep[y]]];\n\t}\n\tif(x==y)return x;\n\tfor(int i=20;i>=0;i--)\n\t\tif(fa[x][i]!=fa[y][i])x=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\nll ans[100];\nint kth(int x,int K){\n\tfor(int i=20;i>=0;i--){\n\t\tif(K&(1<<i))x=fa[x][i];\n\t}\n\treturn x;\n}\nll query(ll x,ll y){\n\tregister int i;\n\tmemset(ans,0,sizeof(ans));\n\tint lca=get(x,y); \n\tint len=lg[deep[x]-deep[lca]];\n\tmerge(d[lca][0],ans);\n\tmerge(d[x][len],ans);\n\tmerge(d[kth(x,deep[x]-deep[lca]-(1<<len))][len],ans);\n\tlen=lg[deep[y]-deep[lca]];\n\tmerge(d[y][len],ans);\n\tmerge(d[kth(y,deep[y]-deep[lca]-(1<<len))][len],ans);\n\tll now=0;\n\tfor(i=60;i>=0;i--)if((now^ans[i])>now)now^=ans[i];\n\treturn now;\n} \nint main(){\n\tn=read();m=read();\n\tregister int i;\n\tfor(i=1;i<=n;i++)val[i]=read();\n\tfor(i=2;i<=n;i++)lg[i]=lg[i/2]+1;\n\tfor(i=1;i<n;i++){\n\t\tint x=read(),y=read();\n\t\tadd(x,y);add(y,x);\n\t}\n\tdfs(1,0);\n\tfor(i=1;i<=m;i++){\n\t\tint x=read(),y=read();\n\t\tcout<<query(x,y)<<'\\n';\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1561019294,
        "uid": 130060,
        "name": "TopCarry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "[\u4e0d\u77e5\u9053\u500d\u589eLCA\u662f\u4ec0\u4e48\u7684\u51fa\u95e8\u5de6\u8f6c\uff01](https://www.luogu.org/problemnew/show/P3379)\n\n[\u4e0d\u77e5\u9053\u7ebf\u6027\u57fa\u662f\u4ec0\u4e48\u7684\u51fa\u95e8\u53f3\u8f6c\uff01](https://www.luogu.org/problemnew/show/P3812)\n\n### \u3010\u9898\u610f\u5206\u6790\u3011\n\u597d\u5427\u6211\u521a\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\u771f\u7684\u6ca1\u6709\u60f3\u51fa\u600e\u4e48\u505a\u3002\u3002\u3002\uff08~~\u6211\u53ea\u662f\u4e00\u53ea\u7ebf\u6027\u57fa\u849f\u84bb~~\uff09\u7136\u540e\u6211\u53ea\u80fd\u6253\u4e00\u628a\u66b4\u529b\uff0c\u6309\u7167 LCA \u6a21\u677f\u63a8\u51fa\u500d\u589e\u7ebf\u6027\u57fa\u7684\u5199\u6cd5\u3002\uff08\u2019\u3078\u2019\uff09\n\n\u7136\u540e\u3002\u3002\u5c31 A \u4e86\u3001\u3001\n\n\uff08\u539f\u6765\u8fd9\u5c31\u662f\u4e00\u9053\u6811\u4e0a\u66b4\u529b\u500d\u589e\u5408\u5e76\u7ebf\u6027\u57fa\u7684\u9898\u76ee\uff0c\u4e0d\u8fc7\u6211\u6574\u6574\u6253\u4e863\u5929\uff09\n\n\u6211\u4eec\u77e5\u9053\u7ebf\u6027\u57fa\u627e\u6700\u5927\u5f02\u6216\u548c\u7684\u505a\u6cd5\u540e\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u5982\u4f55\u5c06\u4e24\u6761\u8def\u7684\u7ebf\u6027\u57fa\u5408\u5e76\u8d77\u6765\u4e86\u3002\u6211\u4eec**\u53ea\u8981\u5c06\u67d0\u4e00\u6761\u8def\u4e0a\u7ebf\u6027\u57fa\u7684\u6240\u6709\u5143\u7d20\u518d\u7528\u539f\u6765\u7ebf\u6027\u57fa\u7684\u505a\u6cd5\u52a0\u5165\u53e6\u4e00\u6761\u8def\u7684\u7ebf\u6027\u57fa\u4e2d\u5373\u53ef**\u3002\u7136\u540e\u5728\u5904\u7406 LCA \u7684\u65f6\u5019\u987a\u4fbf\u5904\u7406\u597d\u500d\u589e\u7ebf\u6027\u57fa\uff0c\u6bcf\u6b21\u67e5\u8be2\u5c31\u7ef4\u62a4\u4e00\u4e2a ans \u6570\u7ec4\uff0c\u5728\u4e24\u4e2a\u70b9\u4e0d\u65ad\u5f80\u4e0a\u8df3\u7684\u65f6\u5019\u5c06\u7ebf\u6027\u57fa\u7167\u4e0a\u8ff0\u5904\u7406\u65b9\u6cd5\u585e\u5165 ans \u6570\u7ec4\u4e2d\u53bb\u3002\u6700\u540e\u6309\u7167\u6a21\u677f\u627e\u51fa\u6700\u5927\u5f02\u6216\u548c\u3002\n\n### \u3010\u6838\u5fc3\u4ee3\u7801\u3011\n1\u3001\u5408\u5e76\u4e24\u6761\u8def\uff1a\u904d\u5386 b \u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\uff0c\u5982\u679c\u8fd9\u4e00\u4f4d\u4e0d\u4e3a 0\uff0c\uff08\u5373\u9700\u8981\u5408\u5e76\uff09\u5c31\u585e\u5165 a \u4e2d\u53bb\n```cpp\nvoid Merge(ll *a, ll *b)\n{\n\tfor(int i = 61; i >= 0; i--)\n\t{\n\t\tif(b[i])\n\t\t\tGet_p(a, b[i]);\n\t}\n}\n```\n2\u3001\u6bcf\u6b21\u8be2\u95ee\u505a\u4e00\u904d LCA\n```cpp\nvoid Solve()\n{\n\tfor(int i = 1; i <= q; i++)\n\t{\n\t\tmemset(ans, 0, sizeof(ans));\n\t\tint u = read(), v = read();\n\t\tLca(u, v);\n\t\tsum = 0;\n\t\tfor(int j = 61; j >= 0; j--)\n\t\t\tsum = Max(sum, sum ^ (ll)ans[j]);\n\t\tprintf(\"%lld\\n\", sum);\n\t}\n}\n```\n\n### \u3010\u6b63\u89e3\u3011\n```cpp\n#include <bits/stdc++.h>\n#define N 20010\n#define ll long long\nusing namespace std;\n\nll sum;\nint n, q, tot;\nll G[N], Head[N << 1], dep[N], ans[N];\nll fa[N][21], p[N][21][62];\n\nstruct Edge{\n\tint to, nxt; \n}edge[N << 1];\n\ninline ll read()//\u4e0d\u7528\u5feb\u8bfb\u4f1aT..\n{\n    char ch = getchar();\n\tll x = 0, f = 1;\n    while(ch > '9' || ch < '0')\n\t{\n\t\tif(ch == '-')\n\t\t\tf = -1;\n\t\tch = getchar();\n\t}\n    while(ch >= '0' && ch <= '9')\n\t{\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n    return x * f;\n}\n\ninline ll Max(ll a, ll b)//\u624b\u6253max\u7701\u65f6\n{\n\treturn a > b ? a : b;\n}\n\ninline void Add_edge(int u, int v)\n{\n\tedge[++tot].nxt = Head[u], edge[tot].to = v, Head[u] = tot;\n\tedge[++tot].nxt = Head[v], edge[tot].to = u, Head[v] = tot;\n}\n\ninline void Get_p(ll *a, ll val)//\u6784\u9020\u7ebf\u6027\u57fa\n{\n\tfor(int i = 61; i >= 0; i--)\n\t{\n\t\tif((val >> i) & 1)\n\t\t{\n\t\t\tif(!a[i])\n\t\t\t{\n\t\t\t\ta[i] = val;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tval ^= a[i];\n\t\t}\n\t} \n}\n\nvoid Dfs(int u, int v)//\u4fe1\u4ef0\u5927\u6cd5\u5e08\u9884\u5904\u7406\u1566(\u00f2_\u00f3\u02c7)\u1564\n{\n\tfa[v][0] = u;\n\tdep[v] = dep[u] + 1;\n\tfor(int i = Head[v]; i; i = edge[i].nxt)\n\t{\n\t\tint w = edge[i].to;\n\t\tif(w == u)\n\t\t\tcontinue;\n\t\tDfs(v, w);\n\t}\n}\n\nvoid Merge(ll *a, ll *b)//\u5408\u5e76\n{\n\tfor(int i = 61; i >= 0; i--)\n\t{\n\t\tif(b[i])\n\t\t\tGet_p(a, b[i]);\n\t}\n}\n\nvoid Get_lca()//lca\u9884\u5904\u7406\n{\n\tfor(int j = 1; j < 20; j++)\n\t{\n\t\tfor(int i = 1; i <= n; i++)\n\t\t{\n\t\t\tfa[i][j] = fa[fa[i][j - 1]][j - 1];\n\t\t\tmemcpy(p[i][j], p[i][j - 1], sizeof(p[i][j - 1]));\n\t\t\tMerge(p[i][j], p[fa[i][j - 1]][j - 1]);\n\t\t}\n\t}\n}\n\ninline void Lca(int u, int v)//\u67e5\u8be2lca\u5e76\u585e ans\n{\n\tif(dep[u] < dep[v])\n\t\tswap(u, v);\n\tfor(int i = 20; i >= 0; i--)\n\t\tif(dep[fa[u][i]] >= dep[v])\n\t\t\tMerge(ans, p[u][i]), u = fa[u][i];\n\tif(u == v)\n\t{\n\t\tMerge(ans, p[u][0]);\n\t\treturn;\n\t}\n\tfor(int i = 20; i >= 0; i--)\n\t\tif(fa[u][i] != fa[v][i])\n\t\t{\n\t\t\tMerge(ans, p[u][i]), Merge(ans, p[v][i]);\n\t\t\tu = fa[u][i], v = fa[v][i];\n\t\t}\n\tMerge(ans, p[u][0]), Merge(ans, p[v][0]), Merge(ans, p[fa[u][0]][0]);\n}\n\nvoid Solve()\n{\n\tfor(int i = 1; i <= q; i++)\n\t{\n\t\tmemset(ans, 0, sizeof(ans));\n\t\tint u = read(), v = read();\n\t\tLca(u, v);\n\t\tsum = 0;\n\t\tfor(int j = 61; j >= 0; j--)\n\t\t\tsum = Max(sum, sum ^ (ll)ans[j]);\n\t\tprintf(\"%lld\\n\", sum);\n\t}\n}\n\nint main()\n{\n\tfreopen(\"2335.in\", \"r\", stdin);\n\tfreopen(\"2335.out\", \"w\", stdout);\n\tn = read(), q = read();\n\tfor(int i = 1; i <= n; i++)\n\t\tGet_p(p[i][0], G[i] = read());\n\tfor(int i = 1; i <= n - 1; i++)\n\t{\n\t\tint u = read(), v = read();\n\t\tAdd_edge(u, v);\n\t}\n\tDfs(0, 1);\n\tGet_lca();\n\tSolve();\n\t\n\treturn 0;\n}\n```",
        "postTime": 1534159319,
        "uid": 71084,
        "name": "\u5e05\u5230\u62a5\u8b66",
        "ccfLevel": 0,
        "title": "P3292 [SCOI2016]\u5e78\u8fd0\u6570\u5b57"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002](https://www.cnblogs.com/cjtcalc/p/13393163.html)\n\n## Description\n\n\u7ed9\u51fa\u4e00\u68f5\u5305\u542b $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u70b9\u5e26\u6743\u3002\n\n\u6709 $Q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e24\u4e2a\u70b9 $x$ \u548c $y$\uff0c\u6c42 $x$ \u5230 $y$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\uff0c\u4efb\u610f\u9009\u62e9\u82e5\u5e72\u4e2a\u70b9\uff0c\u4f7f\u5f97\u5176\u70b9\u6743\u5f02\u6216\u548c\u6700\u5927\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1 \\leq n \\leq 2 \\times 10^4$\uff0c$1 \\leq Q \\leq 2 \\times 10^5$\uff0c$0 \\leq g_i \\leq 2^{60}$\u3002  \n\u65f6\u7a7a\u9650\u5236\uff1a$4000 \\ \\mathrm{ms} / 256 \\ \\mathrm{MiB}$\u3002\n\n## Solution\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u7ebf\u6027\u57fa\u662f\u53ef\u4ee5\u66b4\u529b\u5408\u5e76\u7684\uff0c\u5373\u628a\u7ebf\u6027\u57fa $b$ \u7684\u5143\u7d20\u4e00\u4e2a\u4e2a\u5730\u63d2\u5165\u7ebf\u6027\u57fa $a$ \u4e2d\u3002\u5b9a\u4e49 $\\text{merge}$ \u8fd0\u7b97\u5408\u5e76\u4e24\u4e2a\u7ebf\u6027\u57fa\uff0c\u663e\u7136 $\\text{merge}$ \u8fd0\u7b97\u7684\u590d\u6742\u5ea6\u662f $\\mathcal{O}(\\log^2 n)$ \u7684\u3002\n\n\u8003\u8651\u6811\u4e0a\u500d\u589e\u3002\u8bbe $f(i, j)$ \u8868\u793a\u8282\u70b9 $i$ \u5411\u4e0a\u8df3 $2^j$ \u6b65\u6240\u5230\u8fbe\u7684\u8282\u70b9\u7f16\u53f7\uff0c\u8bbe $g(i, j)$ \u8868\u793a\u8282\u70b9 $i$ \u5411\u4e0a\u8df3 $2^j$ \u6b65\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u8282\u70b9\uff08\u4e0d\u5305\u62ec\u8282\u70b9 $i$\uff09\u7684\u70b9\u6743\u6240\u7ec4\u6210\u7684\u7ebf\u6027\u57fa\u3002\u5219\u6709\uff1a\n$$\nf(i, j) = f(f(i, j - 1), j - 1)\n$$\n\n$$\ng(i, j) = g(i, j - 1) \\ \\text{merge} \\ g(f(i, j - 1), j - 1)\n$$\n\n\u901a\u8fc7\u7b80\u5355\u7684 BFS \u5373\u53ef\u9884\u5904\u7406\u51fa $f$ \u4e0e $g$\u3002\u8be2\u95ee\u4e5f\u6309\u7167\u500d\u589e\u6c42 $\\text{LCA}$ \u7684\u6846\u67b6\uff0c\u4ee4 $x, y$ \u5411\u4e0a\u8df3\uff0c$x, y$ \u6bcf\u5411\u4e0a\u79fb\u52a8\u4e00\u6bb5\u8def\u5f84\uff0c\u5c31\u5408\u5e76\u8be5\u8def\u5f84\u5bf9\u5e94\u7684\u7ebf\u6027\u57fa\u3002\n\n\u81f3\u6b64\u6211\u4eec\u6709\u4e00\u4e2a $\\mathcal{O}(n \\log^3 n) - O(\\log^3 n)$ \u7684\u505a\u6cd5\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u8fd8\u4e0d\u591f\u4f18\u79c0\uff0c\u8003\u8651\u6316\u6398\u7ebf\u6027\u57fa\u5408\u5e76\u7684\u4e00\u4e9b\u6027\u8d28\u3002\n\n---\n\n\u6811\u4e0a\u500d\u589e\u7684\u4e00\u4e2a trick\uff1a\u82e5\u4e00\u4e2a\u8fd0\u7b97\u6ee1\u8db3 $a \\oplus a = a$\uff0c\u5219\u6211\u4eec\u79f0\u8fd9\u4e2a\u8fd0\u7b97\uff08\u4f8b\u5982 $\\max$\u3001$\\min$\u3001$\\gcd$ \u7b49\uff09\u6ee1\u8db3 **\" \u53ef\u91cd\u590d\u8d21\u732e \"** \u6027\u3002\u8003\u8651 $x$ \u5230 $y$ \u4e4b\u95f4\u7684\u8def\u5f84\uff0c\u8bb0 $z = \\text{LCA}(x, y)$\u3002\n\n![G.png](https://i.loli.net/2020/07/28/D8Z7Wq3VsfPzhXd.png)\n\n\u6211\u4eec\u5c06 $x$ \u5230 $y$ \u7684\u8def\u5f84\u5206\u6210\u4e86 \u7ea2\u8def\u5f84\u3001 \u6a59\u8def\u5f84\u3001\u9ec4\u8def\u5f84\u3001 \u7eff\u8def\u5f84 \u56db\u90e8\u5206\uff0c\u6bcf\u4e00\u90e8\u5206\u7684\u957f\u5ea6\u90fd\u662f\u4e0d\u8d85\u8fc7 \" \u6240\u5728\u5927\u8def\u5f84\u7684\u957f\u5ea6 \" \u7684 $2$ \u7684**\u6700\u5927\u6574\u6570\u6b21**\u5e42\uff08\u7ea2\u8def\u5f84 \u548c \u6a59\u8def\u5f84 \u5f52\u5728 $x$ \u5230 $z$ \u7684\u5927\u8def\u5f84\u91cc\uff0c\u9ec4\u8def\u5f84 \u548c \u7eff\u8def\u5f84 \u5f52\u5728 $y$ \u5230 $z$ \u7684\u5927\u8def\u5f84\u91cc\uff09\uff0c\u6bcf\u4e00\u90e8\u5206\u7684\u8d21\u732e\u90fd\u53ef\u4ee5\u901a\u8fc7\u500d\u589e\u6570\u7ec4\u6c42\u51fa\uff0c\u6545\u7b54\u6848\u4e3a \u7ea2\u8def\u5f84\u8d21\u732e $\\oplus$ \u6a59\u8def\u5f84\u8d21\u732e $\\oplus$ \u9ec4\u8def\u5f84\u8d21\u732e $\\oplus$ \u7eff\u8def\u5f84\u8d21\u732e\u3002\n\n\u8bbe $\\oplus$ \u8fd0\u7b97\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal{O(w)}$\uff0c\u82e5\u914d\u5408 \" \u957f\u94fe\u5256\u5206\u6c42\u6811\u4e0a $k$ \u7ea7\u7956\u5148 \" \u4ee5\u53ca \" tarjan \u6c42 $\\text{lca}$ \"\uff0c\u5373\u53ef $\\mathcal{O(w)}$ \u56de\u7b54\u8be2\u95ee\u3002\n\n---\n\n\u56de\u5230\u6b64\u9898\uff0c\u6ce8\u610f\u5230\u7ebf\u6027\u57fa\u5408\u5e76\u4e5f\u662f\u6ee1\u8db3 **\" \u53ef\u91cd\u590d\u8d21\u732e \"** \u6027\u7684\u3002\u5177\u4f53\u7684\u8bf4\uff1a\u82e5\u7ebf\u6027\u57fa $a$ \u4e0e\u7ebf\u6027\u57fa $b$ \u6240\u4ee3\u8868\u7684\u8def\u5f84\u4e4b\u95f4\u6709\u4ea4\u96c6\uff0c\u5219\u7ebf\u6027\u57fa $a$ \u4e0e\u7ebf\u6027\u57fa $b$ \u7ecf\u8fc7 $\\text{merge}$ \u8fd0\u7b97\u540e\u6240\u5f97\u5230\u7684\u7ebf\u6027\u57fa\u4ee3\u8868\u7684\u8def\u5f84\u4e3a\u7ebf\u6027\u57fa $a$ \u4e0e\u7ebf\u6027\u57fa $b$ \u6240\u4ee3\u8868\u7684\u8def\u5f84\u7684\u5e76\u96c6\u3002\u56e0\u4e3a\u4ea4\u96c6\u90e8\u5206\u7684\u5143\u7d20\u5728\u91cd\u590d\u63d2\u5165\u7ebf\u6027\u57fa\u7684\u65f6\u5019\u663e\u7136\u4e0d\u4f1a\u591a\u505a\u8d21\u732e\u3002\n\n![P.png](https://i.loli.net/2020/07/28/nzWkjg7UE6XdT8q.png)\n\n\u4e8e\u662f\u5957\u7528\u4e0a\u8ff0 trick \u5373\u53ef\u5c06\u590d\u6742\u5ea6\u4f18\u5316\u81f3 $\\mathcal{O}(n \\log^3 n) - O(\\log^2 n)$\u3002\n\n\u6ce8\u610f\u5230 $\\text{merge}$ \u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(\\log^2 n)$\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u7528\u6811\u4e0a\u500d\u589e\u6765\u6c42  \" \u6811\u4e0a $k$ \u7ea7\u7956\u5148 \" \u4ee5\u53ca \" $\\text{lca}$ \"\u3002\n\n```c++\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\nusing namespace std;\n\nconst int N = 20100, M = 40100;\n\nint logx[N];\n\nint n, m;\n\nlong long val[N];\n\nint tot, head[N], ver[M], Next[M];\n\nvoid add(int u, int v) {\n\tver[++ tot] = v;    Next[tot] = head[u];    head[u] = tot;\n}\n\nstruct bas {\n\tlong long p[64];\n\tbas() { \n\t\tfor (int i = 0; i <= 63; i ++)\n\t\t\tp[i] = 0;\n\t} \n};\n\nlong long calc(bas a) {\n\tlong long ans = 0;\n\tfor (int i = 63; i >= 0; i --)\n\t\tif ((ans ^ a.p[i]) > ans) ans ^= a.p[i];\n\treturn ans;\n}\n\nbas operator + (bas a, long long x) { \n\tfor (int i = 63; i >= 0; i --) {\n\t\tif (!(x >> i)) continue;\n\t\tif (!a.p[i]) { a.p[i] = x; break; }\n\t\telse x ^= a.p[i];\n\t}\n\treturn a;\n}\n\nbas operator + (bas a, bas b) {\n\tfor (int i = 63; i >= 0; i --)\n\t\tif (b.p[i]) a = a + b.p[i];\n\treturn a;\n}\n\nint d[N];\nint f[N][20];\nbas g[N][20];\n\nvoid bfs() {\n\tqueue<int> q;\n\tq.push(1), d[1] = 1;\n\twhile (q.size()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor (int i = head[u]; i; i = Next[i]) {\n\t\t\tint v = ver[i];\n\t\t\tif (d[v]) continue;\n\t\t\td[v] = d[u] + 1;\n\t\t\tf[v][0] = u;\n\t\t\tg[v][0] = g[v][0] + val[u];\n\t\t\tfor (int j = 1; j <= 19; j ++) {\n\t\t\t\tf[v][j] = f[f[v][j - 1]][j - 1];\n\t\t\t\tif (f[v][j]) g[v][j] = g[v][j - 1] + g[f[v][j - 1]][j - 1];\n\t\t\t}\n\t\t\tq.push(v);\n\t\t}\n\t}\n} \n\nint lca(int x, int y) {\n\tif (d[x] > d[y]) swap(x, y);\n\tfor (int i = 19; i >= 0; i --)\n\t\tif (d[x] <= d[f[y][i]]) y = f[y][i];\n\tif (x == y) return x;\n\tfor (int i = 19; i >= 0; i --)\n\t\tif (f[x][i] != f[y][i]) x = f[x][i], y = f[y][i];\n\treturn f[x][0];\n} \n\nint jump(int x, int lv) {\n\tfor (int i = 19; i >= 0; i --)\n\t\tif (lv >> i & 1) x = f[x][i];\n\treturn x;\n}\n\nlong long ask(int x, int y) {\n\tbas ans;\n\tans = ans + val[x];\n\tans = ans + val[y];\n\tint L = lca(x, y);\n\tif (d[x] - d[L] >= 1) {\n\t\tint lv = logx[d[x] - d[L]];\n\t\tans = ans + g[x][lv];\n\t\tans = ans + g[jump(x, d[x] - d[L] - (1 << lv))][lv];\n\t} if (d[y] - d[L] >= 1) {\n\t\tint lv = logx[d[y] - d[L]];\n\t\tans = ans + g[y][lv];\n\t\tans = ans + g[jump(y, d[y] - d[L] - (1 << lv))][lv];\n\t}\n\treturn calc(ans);\n}\n\nint main() {\n\tlogx[0] = -1;\n\tfor (int i = 1; i <= 20000; i ++)\n\t\tlogx[i] = logx[i / 2] + 1;\n\n\tscanf(\"%d%d\", &n, &m);\n\n\tfor (int i = 1; i <= n; i ++)\n\t\tscanf(\"%lld\", &val[i]);\n\n\tfor (int i = 1, u, v; i < n; i ++) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tadd(u, v), add(v, u);\n\t}\n\n\tbfs();\n\n\twhile (m --) {\n\t\tint x, y; scanf(\"%d%d\", &x, &y);\n\t\tprintf(\"%lld\\n\", ask(x, y));\n\t} \n\n\treturn 0;\n}\n```",
        "postTime": 1595935292,
        "uid": 129578,
        "name": "Calculatelove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016] \u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "### [\u535a\u5ba2](https://a-failure.github.io/2018/06/17/SCOI2016-%E5%B9%B8%E8%BF%90%E6%95%B0%E5%AD%97/)\n\n\u63d0\u4f9b\u4e00\u79cd\u6811\u94fe\u5256\u5206\u7684\u601d\u8def\n\n\u6c42\u6700\u5927XOR\uff0c\u53ef\u4ee5\u7528\u7ebf\u6027\u57fa\u641e\n\n\u4f46\u662f\u8fd9\u662f\u5728\u6811\u4e0a\u64cd\u4f5c\uff0c\u6240\u4ee5\u5f97\u53d8\u5316\u4e00\u4e0b\n\n\u8003\u8651\u6811\u94fe\u5256\u5206\uff0c\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u90fd\u50a8\u5b58\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u7ebf\u6027\u57fa\u5408\u5e76\u540e\u7684\u7ebf\u6027\u57fa\n\n\u7136\u540e\u67e5\u8be2\u65f6\u6bcf\u6b21\u63d0\u51fa\u4e00\u6761\u94fe\u7684\u7ebf\u6027\u57fa\uff0c\u8ddf\u7b54\u6848\u7ebf\u6027\u57fa\u5408\u5e76\n\n\u6700\u540e\u5728\u7b54\u6848\u7ebf\u6027\u57fa\u4e0a\u6c42\u6700\u5927\u503c\u5c31\u884c\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nlogn^4)$\uff08\u5e94\u8be5\uff09\uff0c\u4f3c\u4e4e\u70b9\u5206\u6cbb\u80fd\u641e\u5230$O(nlogn^2)$\u3002\u3002\u3002\uff1f\n\n\u4ee3\u7801\uff1a\n```\n# include<iostream>\n# include<cstring>\n# include<cstdio>\n# include<cstdlib>\n# include<algorithm>\n# define LL long long\n# define tl (k<<1)\n# define tr (k<<1|1)\n# define mid (l+r>>1)\nusing namespace std;\nconst int MAX=2e4+1;\nstruct o{\n    int x,y;\n}c[MAX<<1];\nint n,q,cnt,num;\nint h[MAX],top[MAX],id[MAX],d[MAX],son[MAX],siz[MAX],fa[MAX];\nLL a[MAX],w[MAX],ans[61],tran[61];\nLL s[MAX<<2][61];\nLL read()\n{\n    LL x=0;\n    char ch=getchar();\n    for(;!isdigit(ch);ch=getchar());\n    for(;isdigit(ch);x=x*10+ch-48,ch=getchar());\n    return x;\n}\nvoid add(int x,int y)\n{\n    c[++num]=(o){h[x],y},h[x]=num;\n    c[++num]=(o){h[y],x},h[y]=num;\n}\nvoid dfs(int x,int f)\n{\n    fa[x]=f,d[x]=d[f]+1,siz[x]=1;\n    for(int i=h[x];i;i=c[i].x)\n      {\n      \tint y=c[i].y;\n      \tif(y==f) continue;\n        dfs(y,x);\n        siz[x]+=siz[y];\n        if(siz[y]>siz[son[x]]) son[x]=y;\n      }\n}\nvoid dfs1(int x,int tp)\n{\n    top[x]=tp,id[x]=++cnt,w[cnt]=a[x];\n    if(son[x]) dfs1(son[x],tp);\n    for(int i=h[x];i;i=c[i].x)\n      {\n      \tint y=c[i].y;\n      \tif(y==fa[x]||y==son[x]) continue;\n      \tdfs1(y,y);\n      }\n}\nvoid ins(LL *a,LL x)\n{\n    for(int i=60;~i;--i)\n      if(x&(1ll<<i))\n      if(!a[i])\n      {\n      \ta[i]=x;\n      \tbreak;\n      }\n      else x^=a[i];\n}\nvoid merge(LL *a,LL *b)\n{\n    for(int i=60;~i;--i)\n      if(b[i]) ins(a,b[i]);\n}\nvoid pus(int k)\n{\n    merge(s[k],s[tl]),merge(s[k],s[tr]);\n}\nvoid build(int l,int r,int k)\n{\n    if(l==r)\n    {\n        ins(s[k],w[l]);\n        return;\n    }\n    build(l,mid,tl),build(mid+1,r,tr);\n    pus(k);\n}\nLL GET_MAX()\n{\n    LL tot=0;\n    for(int i=60;~i;--i)\n      if((tot^ans[i])>tot) tot^=ans[i];\n    return tot;\n}\nvoid ask(int l,int r,int k,int L,int R)\n{\n    if(l==L&&r==R)\n    {\n        merge(tran,s[k]);\n        return;\n    }\n    if(R<=mid) ask(l,mid,tl,L,R);\n    else if(L>mid) ask(mid+1,r,tr,L,R);\n    else ask(l,mid,tl,L,mid),ask(mid+1,r,tr,mid+1,R);\n}\nLL ASK(int x,int y)\n{\n    for(int i=0;i<=60;++i)\n      ans[i]=0;\n    while(top[x]!=top[y])\n    {\n        if(d[top[x]]<d[top[y]]) swap(x,y);\n        for(int i=0;i<=60;++i)\n          tran[i]=0;\n        ask(1,n,1,id[top[x]],id[x]);\n        merge(ans,tran);\n        x=fa[top[x]];\n    }\n    if(d[x]>d[y]) swap(x,y);\n    for(int i=0;i<=60;++i)\n      tran[i]=0;\n    ask(1,n,1,id[x],id[y]);\n    merge(ans,tran);\n    return GET_MAX();\n}\nint main()\n{\n    n=read(),q=read();\n    for(int i=1;i<=n;++i)\n      a[i]=read();\n    for(int i=1;i<n;++i)\n      add(read(),read());\n    dfs(1,0),dfs1(1,1),build(1,n,1);\n    for(int i=1;i<=q;++i)\n      {\n      \tint x=read(),y=read();\n      \tprintf(\"%lld\\n\",ASK(x,y));\n      }\n    return 0;\n}\n```",
        "postTime": 1529206501,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c\u6c42\u6811\u4e0a\u4e24\u70b9\u95f4\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u5f02\u6216\u6700\u5927\u503c\n### \u9898\u89e3\n**\u4e00\u9053\u7ebf\u6027\u57fa+\u500d\u589eLCA\u7684\u4e8c\u5408\u4e00\u677f\u5b50\u9898**\n\n\u8003\u8651\u5230\u6c42\u5f02\u6216\u7684\u6700\u5927\u503c\u80af\u5b9a\u9700\u8981**\u7ebf\u6027\u57fa**\uff0c\u800c\u7ebf\u6027\u57fa\u4f5c\u4e3a\u4e00\u79cd\u795e\u5947\u7684\u7ed3\u6784\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u6027\u8d28\n- \u8bbe\u7ebf\u6027\u57fa\u7684\u5f02\u6216\u96c6\u5408\u4e2d\u4e0d\u5b58\u57280\uff0c\u5373\u5f02\u6216\u96c6\u5408\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u5f02\u6216\u65b9\u6848\u552f\u4e00\n\n- \u7ebf\u6027\u57fa\u4e8c\u8fdb\u5236\u6700\u9ad8\u4f4d\u4e92\u4e0d\u76f8\u540c\u3002\n\n- \u7ebf\u6027\u57fa\u4e2d\u5143\u7d20\u4e92\u76f8\u5f02\u6216\uff0c\u5f02\u6216\u96c6\u5408\u4e0d\u53d8\u3002\n\n\u5229\u7528\u8fd9\u4e9b\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u7528$O(log^2n)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5408\u5e76\uff0c\u5408\u5e76\u5c31\u662f\u628a\u4e00\u4e2a\u57fa\u4e2d\u7684\u6240\u6709\u503c\u63d2\u8fdb\u53e6\u4e00\u4e2a\u57fa~~\u4f17\u6240\u5468\u77e5\uff0c$\\texttt{Oier}$\u662f\u4e0d\u9700\u8981\u8bc1\u660e\u7684~~\n\n\u518d\u6765\u8003\u8651\u500d\u589e\u6c42LCA\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684$i$\u500d\u7236\u4eb2\uff0c\u8f6c\u79fb\u65b9\u7a0b\u662f\u957f\u8fd9\u6837\u7684\uff1a\n```cpp\nf[now][i]=f[f[now][i-1]][i-1]\n```\n\u90a3\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u6c42\u51fa$x$\u5230\u5b83\u7684$i$\u500d\u7236\u4eb2\uff08\u4e0d\u5305\u62ec\uff09\u7684\u7ebf\u6027\u57fa\uff0c\u5728\u5f80\u4e0a\u8df3\u7684\u65f6\u5019\u628a\u7ebf\u6027\u57fa\u5408\u5e76\u4e00\u4e0b\u5c31ok\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>\ninline void read(T &x){\n\tx=0;char c=getchar();bool f=false;\n\tfor(;!isdigit(c);c=getchar())f!=c=='-';\n\tfor(;isdigit(c);c=getchar())x=x*10+c-'0';\n\tif(f)x=-x;\n}\ntemplate<typename T ,typename ...Arg>\ninline void read(T &x,Arg &...args){\n\tread(x);read(args...);\n}\ntemplate<typename T>\ninline void write(T x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>=10)write(x/10);\n\tputchar(x%10+'0');\n}\ntypedef long long ll;\nconst ll maxn=20000+100;\nconst ll maxm=20000+100;\nbool flag[maxn];\nll dis[maxn];\nconst ll maxn_wei=61;\nstruct XXJ{\n\t//\u7ebf\u6027\u57fa\u677f\u5b50\n\tll b[maxn_wei];\n\tvoid init(){memset(b,0,sizeof b);}\n\tvoid insert(ll x){\n\t\tfor(ll i=maxn_wei-1;i>=0;i--){\n\t\t\tif(!(x&(1ll<<i)))continue;\n\t\t\tif(!b[i]){\n\t\t\t\tb[i]=x;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tx^=b[i];\n\t\t}\n\t}\n\tXXJ operator+(const XXJ b)const{\n\t\tXXJ New=*this;\n\t\tfor(int i=0;i<maxn_wei;i++)\n\t\t\tif(b.b[i])\n\t\t\t\tNew.insert(b.b[i]);\n\t\treturn New;\n\t}\n};\nstruct Graph{\n\tstruct Edge{ll v,nxt;}e[maxm*2];\n\tll cnt,head[maxn];\n\tvoid init(){memset(head,0,sizeof head);cnt=0;}\n\tvoid add(ll u,ll v){e[++cnt]=(Edge){v,head[u]};head[u]=cnt;}\n\t#define For(G,i) for(ll eee=(G).head[(i)];eee;eee=(G).e[eee].nxt)\n\t#define v(G) (G).e[eee].v\n}G;\nll n,m,u,v,w;\nint f[maxn][15];\nXXJ b[maxn][15];\nint lg[maxn];\nint depth[maxn];\nll g[maxn];\nvoid dfs(int now,int fath){\n\tf[now][0]=fath;depth[now]=depth[fath]+1;\n\tb[now][0].init();b[now][0].insert(g[now]);\n\tfor(int i=1;i<=lg[depth[now]];++i)\n    \tf[now][i]=f[f[now][i-1]][i-1],\n\t\tb[now][i]=b[now][i-1]+b[f[now][i-1]][i-1];\n\tFor(G,now)if(v(G)!=fath)dfs(v(G),now);\n}\nXXJ lca(int x,int y){\n\tXXJ tmp;tmp.init();\n\tif(depth[x]<depth[y])//\u4ee4x\u66f4\u6df1\n\t\tswap(x,y);\n\twhile(depth[x]>depth[y])\n\t\ttmp=tmp+b[x][lg[depth[x]-depth[y]]-1],\n\t\tx=f[x][lg[depth[x]-depth[y]]-1];\n\tif(x==y){//\u5982\u679cx\u662fy\u7684\u7956\u5148\uff0c\u90a3\u4ed6\u4eec\u7684LCA\u80af\u5b9a\u5c31\u662fx\u4e86\n\t\ttmp.insert(g[x]);\n\t\treturn tmp;\n\t}\n\tfor(int k=lg[depth[x]]-1;k>=0;k--)//\u5411\u4e0a\u8df3\n\t\tif(f[x][k]!=f[y][k]) //\u56e0\u4e3a\u6211\u4eec\u8981\u8df3\u5230LCA\u7684\u4e0b\u9762\u4e00\u5c42\uff0c\u6240\u4ee5\u5b83\u4eec\u80af\u5b9a\u4e0d\u76f8\u7b49\n\t    \ttmp=tmp+b[x][k]+b[y][k],x=f[x][k],y=f[y][k];\n\ttmp.insert(g[f[x][0]]);\n\ttmp.insert(g[x]);\n\ttmp.insert(g[y]);\n\t\n\treturn tmp;\n}\nsigned main(){\n\tread(n,m);\n\tfor(int i=1;i<=n;i++)\n\t\tread(g[i]);\n\tfor(ll i=1;i<n;i++){\n\t\tread(u,v);\n\t\tG.add(u,v);\n\t\tG.add(v,u);\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tlg[i]=lg[i-1]+(1<<lg[i-1]==i);\n\tdfs(1,-1);\n\twhile(m--){\n\t\tint x,y;read(x,y);\n\t\tXXJ get=lca(x,y);\n\t\tll ans=0;\n\t\tfor(int i=maxn_wei-1;i>=0;i--)\n\t\t\tans=max(ans,ans^get.b[i]);\n\t\twrite(ans);putchar('\\n');\n\t}\n}\n```",
        "postTime": 1592456482,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\n\n- [\u7ebf\u6027\u57fa](https://www.luogu.com.cn/problem/P3812)\u3002\n- [LCA](https://www.luogu.com.cn/problem/P3379)\u3002\n\n### \u9898\u610f\u7b80\u8ff0\n- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684**\u6811**\uff0c\u6c42\u4e24\u70b9\u95f4\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u6743\u7684**\u5f02\u6216\u6700\u5927\u503c**\u3002\n\n- $n \\le 2 \\times 10^4$\uff0c$q \\le 2 \\times 10^5$\u3002\n\n### \u9898\u76ee\u5206\u6790\n\u5f02\u6216\u6700\u5927\u503c\uff0c\u60f3\u5230**\u7ebf\u6027\u57fa**\u3002\n\n\u56e0\u4e3a\u7ebf\u6027\u57fa\u6ee1\u8db3\uff1a\n\u5bf9\u4e8e\u96c6\u5408 $A, B$\uff0c\u628a $B$ \u7684\u7ebf\u6027\u57fa\u4f9d\u6b21\u63d2\u5165\u5230 $A$ \u7684\u7ebf\u6027\u57fa\u4e2d\u5373\u53ef\u5f97\u5230 $A \\cup B$ \u7684\u7ebf\u6027\u57fa\uff1b\n    \n\u6545\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u500d\u589e LCA \u7684\u601d\u60f3\uff0c\u5728\u500d\u589e\u7684\u540c\u65f6\u7ef4\u62a4\u7b54\u6848\u7684\u7ebf\u6027\u57fa\u3002\n\n\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684 $2^k$ \u7ea7\u7956\u5148\u7684\u540c\u65f6\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u5230 $2^k$ \u7ea7\u7956\u5148\u7684\u7ebf\u6027\u57fa\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n \\log^2 G_i + q \\log n \\log^2 G_i) = O(n \\log^3 G_i + q \\log^3 G_i)$\uff0c\u7ea6\u4e3a $11.1 \\times 10^9$ \u7ea7\u522b\u3002\n\n### [\u4ee3\u7801](https://www.luogu.com.cn/paste/odjuffsk)\n\n\u8fd9\u4efd\u4ee3\u7801\u52a0\u4e0a\u706b\u8f66\u5934\u518d\u52a0\u4e0a\u4e00\u4e9b\u6bd2\u7624\u4f18\u5316\u53ef\u4ee5\u7528 C++17 \u8fc7\u6389\u8fd9\u9053\u9898\uff08\u8be6\u89c1\u672c\u4eba\u8bc4\u6d4b\u8bb0\u5f55\uff09\u3002\n\n### \u4f18\u5316\n\n\u4f46\u662f\uff0c\u81ea\u5e26\u5927\u5e38\u6570\u7684\u9009\u624b\u53d1\u73b0\u53ea\u5f97\u4e86 30 \u5206\u3002\n\n\u4e0b\u9762\u662f\u4e3a\u5927\u5e38\u6570\u4f46\u5374\u5e0c\u671b\u7528 C++ \u8bed\u8a00\u4e0d\u5f00 O2 AC \u7684\u9009\u624b\u51c6\u5907\u7684\u4f18\u5316\u3002\n\n\u6211\u4eec\u8003\u8651\uff0c\u5982\u679c\u628a\u8fd9\u4e24\u4e2a\u8282\u70b9\u5230 LCA \u7684\u8def\u5f84\u7528\u7c7b\u4f3c ST \u8868\u7684\u65b9\u5f0f\u7ef4\u62a4\uff0c\u5373\u60f3\u529e\u6cd5\u53ea\u5728\u7b54\u6848\u7ebf\u6027\u57fa\u4e2d\u53ea\u63d2\u5165\u5e38\u6570\u6b21\u8282\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ece $O(\\log n \\log^2 G_i)$ \u964d\u4e3a $O(\\log n + \\log^2 G_i)$\u3002\n\nSTL \u5e93\u7684\u5e38\u6570\u4e5f\u6bd4\u8f83\u5927\uff0c\u6545\u628a\u6240\u6709 STL \u4e2d\u7684\u51fd\u6570\u4e0e\u7c7b\u624b\u5199\u4e00\u904d\uff0c\u518d\u52a0\u4e0a\u8bfb\u5199\u4f18\u5316\u3002\n\n\u505a\u5b8c\u8fd9\u4e9b\uff0c\u4f60\u5c31\u80fd\u7528 C++ \u62ff\u5230 70 \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u4f46\u662f\u8fd8\u4e0d\u591f\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u63d2\u5165\u7ebf\u6027\u57fa\u65f6\uff0c\u63d2\u5165\u7684\u6570\u5e38\u5e38\u4f1a\u5f88\u65e9\u53d8\u4e3a $0$\uff0c\u6b64\u65f6\u76f4\u63a5\u9000\u51fa\u5373\u53ef\u3002\n\n\u5728\u500d\u589e LCA \u65f6\uff0c\u4e5f\u4f1a\u6709\u7c7b\u4f3c\u7684\u60c5\u51b5\u51fa\u73b0\uff08\u63d0\u524d\u500d\u589e\u5230\u6307\u5b9a\u4f4d\u7f6e\uff09\uff0c\u540c\u6837\u76f4\u63a5\u8fdb\u884c\u4e0b\u4e00\u6b65\u3002\n\n### [\u4ee3\u7801](https://www.luogu.com.cn/paste/52injktf)",
        "postTime": 1587516416,
        "uid": 236807,
        "name": "Mitama",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 \u6d1b\u8c37 P3292"
    },
    {
        "content": "> \u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u591a\u6b21\u8be2\u95ee\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u6700\u5927\u70b9\u6743\u5f02\u6216\u548c\n\n\u9996\u5148\u6c42\u5f02\u6216\u6700\u5927\u503c\u53ef\u4ee5\u60f3\u5230\u7ebf\u6027\u57fa\uff0c\u7136\u540e\u8981\u5904\u7406\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u7ebf\u6027\u57fa\u5462\uff0c\u6211\u4eec\u8003\u8651\u7528\u500d\u589e\u7684\u601d\u60f3\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7ef4\u62a4\u5176\u7956\u5148\u548c\u5230\u7956\u5148\u4e00\u8def\u4e0a\u7684\u7ebf\u6027\u57fa\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684\u8bdd\u5728\u6c42 lca \u7684\u8fc7\u7a0b\u4e2d\u987a\u5e26\u5408\u5e76\u4e00\u8def\u4e0a\u7684\u7ebf\u6027\u57fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7b2c\u4e00\u6b21\u5199\u7ebf\u6027\u57fa\u5408\u5e76\uff0c\u679a\u4e3e\u7684\u4e00\u4e2a\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u66b4\u529b\u5f80\u53e6\u4e00\u4e2a\u4e2d\u63d2\uff0c\u53d1\u73b0\u4f1a T \u98de\uff0c\u56e0\u4e3a\u8fd9\u6837\u5b50\u7684\u8bdd $n * log^2n * 64*64$ \u5c31\u4f1a\u8dd1\u6ee1\uff0c\u518d\u591a\u4e00\u70b9\u4ec0\u4e48\u5e38\u6570\u5c31\u7206\u4e86\u3002\n\n\u53d1\u73b0\u7ebf\u6027\u57fa\u4e0d\u4f1a\u592a\u5bc6\u96c6\uff0c\u5728\u5408\u5e76\u7684\u65f6\u5019\u7a0d\u5fae\u4f18\u5316\u4e00\u70b9\u70b9\u5c31\u53ef\u4ee5\u6bd4\u8f83\u4f18\u96c5\u5730\u8fc7\u6389\u8fd9\u9053\u9898\u76ee\u4e86\u3002\n\n\u5173\u4e8e\u70b9\u5206\u6cbb\u7684\u505a\u6cd5\uff0c\u4ee5\u540e\u518d\u5199\u5427\u3002\n\n```cpp\ntypedef long long readtype;\n\n/* Header {{{ */\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long var;\n\nreadtype read() {\n  readtype a = 0, c = getchar(), s = 0;\n  while (!isdigit(c)) s |= c == '-', c = getchar();\n  while (isdigit(c)) a = a * 10 + c - 48, c = getchar();\n  return s ? -a : a;\n}\n/* }}} */\n\nconst int N = 21004;\n\nstruct Basis {\n  var val[64];\n  Basis() {\n    memset(val, 0, sizeof(val));\n  }\n  void insert(var t);\n  var getmax();\n};\n\nint n, q;\nvar g[N];\nint top, fi[N], ne[N << 1], to[N << 1];\nint fa[N][21], deep[N];\nBasis basis[N][21];\n\nBasis merge(Basis a, Basis b);\nvoid add(int u, int v);\nvoid getInfo(int t);\nvar getRes(int x, int y);\n\nint main() {\n  #ifndef ONLINE_JUDGE\n  freopen(\"4568.in\", \"r\", stdin);\n  freopen(\"4568.out\", \"w\", stdout);\n  #endif\n  n = read(), q = read();\n  for (int i = 1; i <= n; ++i) g[i] = read();\n  for (int i = 2; i <= n; ++i) add(read(), read());\n  getInfo(1);\n  for (int i = 1; i <= q; ++i) \n    printf(\"%lld\\n\", getRes(read(), read()));\n  return 0;\n}\n\nvoid Basis::insert(var t) {\n  for (int i = 63; i >= 0; --i) {\n    if (!((t >> i) & 1)) continue;\n    if (!val[i]) {\n      val[i] = t;\n      break;\n    }\n    t ^= val[i];\n  }\n}\n\nvar Basis::getmax() {\n  var res = 0;\n  for (int i = 63; i >= 0; --i) {\n    if ((res ^ val[i]) > res) res ^= val[i];\n  }\n  return res;\n}\n\nBasis merge(Basis a, Basis b) {\n  for (int i = 63; i >= 0; --i) {\n    var t = b.val[i];\n    if (!t) continue;\n    for (int j = i; j >= 0; --j) {\n      if (!((t >> j) & 1)) continue;\n      if (!a.val[j]) {\n        a.val[j] = t;\n        break;\n      }\n      t ^= a.val[j];\n    }\n  }\n  return a;\n}\n\nvoid add(int u, int v) {\n  ne[++top] = fi[u], fi[u] = top, to[top] = v;\n  ne[++top] = fi[v], fi[v] = top, to[top] = u;\n}\n\nvoid getInfo(int t) {\n  deep[t] = deep[fa[t][0]] + 1;\n  basis[t][0].insert(g[t]);\n  for (int i = 1; i <= 20; ++i) {\n    fa[t][i] = fa[fa[t][i - 1]][i -1];\n    basis[t][i] = merge(basis[t][i - 1], basis[fa[t][i - 1]][i - 1]);\n  }\n  for (int i = fi[t]; i; i = ne[i]) {\n    if (to[i] == fa[t][0]) continue;\n    fa[to[i]][0] = t;\n    basis[to[i]][0].insert(g[t]);\n    getInfo(to[i]);\n  }\n}\n\nvar getRes(int x, int y) {\n  if (deep[x] < deep[y]) swap(x, y);\n  Basis tot;\n  tot.insert(g[x]);\n  int t = deep[x] - deep[y];\n  for (int i = 20; i >= 0; --i) {\n    if (t >= (1 << i)) {\n      t -= (1 << i);\n      tot = merge(tot, basis[x][i]);\n      x = fa[x][i];\n    }\n  }\n  if (x == y) return tot.getmax();\n  for (int i = 20; i >= 0; --i) {\n    if (fa[x][i] == fa[y][i]) continue;\n    tot = merge(tot, merge(basis[x][i], basis[y][i]));\n    x = fa[x][i], y = fa[y][i];\n  }\n  tot = merge(tot, merge(basis[x][0], basis[y][0]));\n  return tot.getmax();\n}\n```",
        "postTime": 1571565474,
        "uid": 20522,
        "name": "ccviolett",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "\u5199\u4e86\u4e00\u4e2a [\u732b\u6811](https://www.luogu.com.cn/blog/EastPorridge/cat-tree) \u7684\u535a\u5ba2\uff0c\u91cc\u9762\u6709\u51e0\u9053\u9898\u3002\r\n\r\n### \u9898\u76ee\u5206\u6790\uff1a\r\n\r\n\u6211\u4eec\u6709\u4e2a\u6700\u66b4\u529b\u7684\u505a\u6cd5\uff0c\u6811\u5256\u7ebf\u6bb5\u6811\u5957\u7ebf\u6027\u57fa\uff0c\u6811\u5256\uff0c\u7ebf\u6bb5\u6811\u5404\u4e00\u4e2a $\\log$\uff0c\u7ebf\u6027\u57fa\u5408\u5e76\u4fe9 $\\log$\uff0c\u4e00\u5171\u56db\u4e2a $\\log$\u3002\r\n\r\n$\\log$ \u53e0\u5728\u4e00\u8d77\uff0c\u5f88\u96be\u53d7\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u79bb\u7ebf\u6389\u5b83\u3002\r\n\r\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u6211\u4eec\u6811\u5256\u6bcf\u6b21\u4f1a\u4ece\u6811\u4e0a\u62c6\u5206\u51fa\u4e00\u6761\u8def\u5f84\uff0c\u6211\u4eec\u6ca1\u5fc5\u8981\u7acb\u523b\u77e5\u9053\u5b83\u7684\u7b54\u6848\uff0c\u800c\u662f\u518d\u628a\u5b83\u770b\u6210\u4e00\u4e2a\u8be2\u95ee\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u600e\u4e48\u6837\u5462\uff1f\r\n\r\n\u6811\u5256\u4e00\u6b21\u6700\u591a\u4f1a\u8df3 $\\log n$ \u4e2a\u94fe\u5934\uff0c$q$ \u6b21\u8be2\u95ee\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u539f\u95ee\u9898\u62c6\u6210\u4e86**\u5e8f\u5217**\u4e0a\u7684 $q \\log n$ \u4e2a\u5b50\u95ee\u9898\uff0c\u6bcf\u4e2a\u95ee\u9898\u662f\u6c42 $l \\sim r$ \u8fd9\u4e2a\u533a\u95f4\u4efb\u9009\u503c\uff0c\u4f7f\u5b83\u7684\u5f02\u6216\u548c\u6700\u5927\u3002\r\n\r\n\u600e\u4e48\u505a\u5462\uff1f\u518d\u7528\u7ebf\u6bb5\u6811\u662f\u6ca1\u533a\u522b\u7684\uff0c\u6211\u4eec\u8003\u8651\u518d\u6b21\u79bb\u7ebf\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u4f7f\u7528\u732b\u6811\u5206\u6cbb\u89e3\u51b3\uff0c\u5177\u4f53\u7684\uff0c\u6211\u4eec\u6bcf\u6b21\u7ef4\u62a4\u4ee5 $\\text{mid}$ \u4e3a\u4e2d\u5fc3\u7684\uff0c$l \\sim \\text{mid}$ \u7684\u540e\u7f00\u7ebf\u6027\u57fa\u548c $\\text{mid+1} \\sim r$ \u7684\u524d\u7f00\u7ebf\u6027\u57fa\uff0c\u5982\u679c\u6b64\u65f6\u8be2\u95ee\u533a\u95f4 $[L,R]$ \u6a2a\u8de8 $\\text{mid}$\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5408\u5e76\u5de6\u53f3\u4e24\u4e2a\u7ebf\u6027\u57fa\u5f97\u51fa\u7b54\u6848\uff0c\u5426\u5219\uff0c\u5b83\u4e00\u5b9a\u5728 $\\text{mid}$ \u7684\u4e00\u8fb9\uff0c\u5206\u6cbb\u4e0b\u53bb\u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u74f6\u9888\u5728\u7ebf\u6027\u57fa\u5408\u5e76\uff0c\u662f\u4e24\u4e2a $\\log$ \u7684\u3002\r\n\r\n\u518d\u8fdb\u4e00\u6b65\u7684\uff0c\u6211\u4eec\u6c42\u51fa\u4e86 $q \\log n$ \u4e2a\u5b50\u95ee\u9898\u53c8\u80fd\u600e\u4e48\u6837\u5462\uff1f\u80fd\u7ebf\u6027\u57fa\u5408\u5e76\u3002\r\n\r\n\u6211\u4eec\u6c42\u5b50\u95ee\u9898\u7684\u89e3\u662f\u6ca1\u7528\u7684\uff0c\u6709\u7528\u7684\u662f\u5b50\u95ee\u9898\u7684\u7ebf\u6027\u57fa\uff0c\u6211\u4eec\u628a\u732b\u6811\u5206\u6cbb\u6c42\u51fa\u6765\u7684\u7ebf\u6027\u57fa\u518d\u6b21\u5408\u5e76\u3002\r\n\r\n\u7406\u8bba\u90e8\u5206\u7ed3\u675f\uff0c\u4ea4\u4e00\u53d1\uff0c[\u5bc4\u4e86](https://www.luogu.com.cn/record/100349808)\u3002\r\n\r\n\u5b83\u8dd1\u7684\u786e\u5b9e\u5f88\u5feb\uff0c\u8003\u8651\u4e00\u4e0b MLE \u7684\u539f\u56e0\uff0c\u539f\u56e0\u662f\u5b58\u7684 $q \\log n$ \u4e2a\u7ebf\u6027\u57fa\uff0c\u662f\u4e00\u4e2a\u5f88\u5927\u7684 $10^7$\uff0c\u867d\u7136\u6811\u5256\u4e00\u822c\u4e0d\u53ef\u80fd\u8fd9\u4e48 $\\log$\uff0c\u4f1a\u5c0f\u4e00\u70b9\u3002\r\n\r\n\u6211\u4eec\u62ff `vector` \u628a\u5b83\u5b58\u4e0b\u6765\uff0cresize \u6765\u52a8\u6001\u5f00\u7a7a\u95f4\uff0c\u628a\u6811\u5256\u51e0\u4ef6\u5957\u6362\u6210 `short`\uff0c\u7528\u5b8c\u8fb9\u76f4\u63a5\u7528 `shrink_to_fit()` \u628a\u5b83\u91ca\u653e\u6389\uff0c\u8fd8\u6709\u5c31\u662f\u8be2\u95ee\u533a\u95f4\u4e3a $l=r$ \u7684\u662f\u4e0d\u9700\u8981\u7ebf\u6027\u57fa\u7684\uff0c\u6211\u4eec\u901a\u8fc7\u6807\u53f7\u7684\u65b9\u5f0f\u628a\u5b83\u5254\u9664\uff0c\u6216\u8005\u76f4\u63a5\u500d\u589e\u6216\u8005\u6839\u53f7\u5206\u6cbb\u5904\u7406\u6389\u4e00\u70b9\u8be2\u95ee\u7b49\u7b49\u6280\u5de7\uff0c\u51f9\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u96be\u70b9\u4e0d\u5728\u8fd9\u91cc\u3002\r\n\r\n\u6574\u4e2a\u4ee3\u7801\u5199\u4e86 $3.5 \\text{KB}$\uff0c\u5e94\u8be5\u6ca1\u4eba\u60f3\u770b\u5427\uff0c\u53ea\u7ed9\u6811\u5256\u51fa\u5b50\u95ee\u9898\u548c\u732b\u6811\u5206\u6cbb\u90e8\u5206\u7684\u4ee3\u7801\u4e86\u3002\r\n\r\n### Code.\r\n\r\n```cpp\r\nvoid pre(int u,int v)\r\n{\r\n\twhile(top[u] != top[v])\r\n\t{\r\n\t\tif(dep[top[u]] < dep[top[v]]) swap(u,v);\r\n\t\tpl.emplace_back(node{id[top[u]],id[u]}); ++tot;\r\n\t\tu=fa[top[u]];\r\n\t}\r\n\tif(dep[u] < dep[v]) swap(u,v); pl.emplace_back(node{id[v],id[u]}); ++tot;\r\n}\r\nvoid sol(int l,int r,int L,int R)\r\n{\r\n\tif(L > R) return ; int mid = (l + r) >> 1;\r\n\tf[mid].init(); for(int i=mid+1;i<=r;i++) f[i]=f[i-1],f[i].insert(a[i]);\r\n\tf[mid].insert(a[mid]); for(int i=mid-1;i>=l;i--) f[i]=f[i+1],f[i].insert(a[i]);\r\n\tint tmid=L-1; tn=0;\r\n\tfor(int i=L;i<=R;i++)\r\n\t{\r\n\t\tint tmp=p[i];\r\n\t\tif(pl[tmp].r <= mid) p[++tmid]=tmp;\r\n\t\telse if(mid < pl[tmp].l) s[++tn]=tmp;\r\n\t\telse ans[tmp]=merge(f[pl[tmp].l],f[pl[tmp].r]);\r\n\t}\r\n\tfor(int i=1;i<=tn;i++) p[tmid+i]=s[i]; R=tmid+tn;\r\n\tsol(l,mid,L,tmid); sol(mid+1,r,tmid+1,R);\r\n}\r\n```\r\n",
        "postTime": 1674292327,
        "uid": 230865,
        "name": "EastPorridge",
        "ccfLevel": 0,
        "title": "P3292 [SCOI2016]\u5e78\u8fd0\u6570\u5b57 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P3292)\n\n\u4f7f\u7528\u6211\u7684\u505a\u6cd5\u9700\u8981\u77e5\u9053\u7684\u7b97\u6cd5\uff1a\n\n$LCA$ \u548c\u53ef\u6301\u4e45\u5316\u5f02\u6216\u7ebf\u6027\u57fa\u3002\n\n\u4f7f\u7528\u7ebf\u6027\u57fa\u7ef4\u62a4\u51fa\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8fd9\u4e00\u6761\u8def\u5f84\u4e0a\u9762\u7684\u5143\u7d20\u5f62\u6210\u7684\u7ebf\u6027\u57fa\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u5148\u627e\u51fa $lca$ \uff0c\u5c31\u6709\u4e86\u4e24\u6761\u8def\u5f84\uff0c\u4e24\u6761\u8def\u5f84\u7684\u7ebf\u6027\u57fa\u53ef\u4ee5\u63d0\u51fa\u6765\u540e\u66b4\u529b\u5408\u5e76\u3002\n\n\u63d0\u51fa\u6765\u7684\u65b9\u6cd5\u5c31\u662f\u627e\u6df1\u5ea6\u5927\u4e8e $lca$ \u7684\u3002\n\n\u4e8e\u662f\u6309\u7740\u7ebf\u6027\u57fa\u7684\u5957\u8def\u6c42\u4e00\u6ce2\u7b54\u6848\u8fd9\u9898\u5c31\u5b8c\u4e86\u3002\n\n\u52a0\u4e86 $O2$ \u540e\u6700\u540e\u7684\u4e00\u4e2a\u70b9\u8dd1 $521ms$ \u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982 $O(nlog_2n+360q)$ \u5427\u3002\n\n~~\u4e0d\u8981\u5728\u610f\u53d8\u91cf\u540d~~\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\n#define per(i,a,b) for(int i=(a);i>=(b);--i)\n#define ll long long\n#define mp make_pair\n#define pb push_back\n#define debug(...) fprintf(stderr, __VA_ARGS__)\nusing namespace std;\ntemplate<typename T> inline void ckmax(T&a, T b) { if (b > a) a = b; }\ntemplate<typename T> inline void ckmin(T&a, T b) { if (b < a) a = b; }\nstruct _in {\n\tconst _in operator,(int&a) const {\n\t\ta = 0; char k = getchar(); int f = 1;\n\t\tfor (; !isdigit(k); k = getchar()) if (k == '-') f = -1;\n\t\tfor (; isdigit(k); k = getchar()) a = a * 10 + k - '0';\n\t\ta *= f; return*this;\n\t}\n}in;\nstruct _inl {\n\tconst _inl operator,(ll&a) const {\n\t\ta = 0; char k = getchar(); int f = 1;\n\t\tfor (; !isdigit(k); k = getchar()) if (k == '-') f = -1;\n\t\tfor (; isdigit(k); k = getchar()) a = a * 10 + k - '0';\n\t\ta *= f; return*this;\n\t}\n}inl;\nconst int N = 20000 + 5, M = 200000 + 5;\n\nint fr[N << 1], to[N << 1], h[N], tot;\nlong long val[N];\ninline void rider (int u, int v) {\n\ttot++; fr[tot] = h[u];\n\tto[tot] = v; h[u] = tot;\n}\nint n, q, st[N][16], dep[N];\ninline int LCA (int u, int v) {\n\tif(dep[u] < dep[v]) swap (u, v);\n\tfor (int i = 15; i >= 0 && dep[u] > dep[v]; --i)\n\t\tif (dep[st[u][i]] >= dep[v]) u = st[u][i];\n\tfor (int i = 15; i >= 0 && u != v; --i)\n\t\tif (st[u][i] != st[v][i]) u = st[u][i], v = st[v][i];\n\treturn u == v ? u : st[u][0];\n}\nint num[N][64];\nlong long bs[N][64];\ninline void archer (int u, int f) {\n\tdep[u] = dep[f] + 1;\n\tst[u][0] = f; rep (i, 1, 15) st[u][i] = st[ st[u][i - 1] ][i - 1];\n\tmemcpy (bs[u], bs[f], sizeof bs[f]); memcpy (num[u], num[f], sizeof num[f]);\n\tlong long tmp = val[u]; int nowid = u;\n\tper (i, 59, 0) {\n\t\tif (!(tmp & (1LL << i))) continue;\n\t\tif (!bs[u][i]) { bs[u][i] = tmp, num[u][i] = nowid;break; }\n\t\telse {\n\t\t\tif (dep[nowid] > dep[num[u][i]]) swap (bs[u][i], tmp), swap (num[u][i], nowid);\n\t\t\ttmp ^= bs[u][i];\n\t\t}\n\t}\n\tfor (int i = h[u]; i; i = fr[i]) if (to[i] != f) {\n\t\tarcher (to[i], u);\n\t}\n}\nlong long assassin[64];\ninline void berserker (long long v) {\n\tper (i, 59, 0) {\n\t\tif (!(v & (1LL << i))) continue;\n\t\tif (!assassin[i]) { assassin[i] = v; break; }\n\t\telse v ^= assassin[i];\n\t}\n}\nint f[20], top;\ninline void lancer (int x, int y) {\n\tint lca = LCA (x, y);\n\tmemset (assassin, 0, sizeof assassin);\n\trep (i, 0, 59) if (dep[ num[x][i] ] >= dep[lca]) berserker (bs[x][i]);\n\trep (i, 0, 59) if (dep[ num[y][i] ] >= dep[lca]) berserker (bs[y][i]);\n\tlong long ans = 0;\n\tper (i, 59, 0) ans = max (ans, ans ^ assassin[i]);\n\ttop = 0;\n\twhile (ans) { f[top++] = ans % 10; ans /= 10; }\n\tper (i, top - 1, 0) putchar(f[i] + '1' - 1);\n\tputchar('\\n');\n}\nint main ()\n{\n\tin, n, q;\n\trep (i, 1, n) inl, val[i];\n\trep (i, 1, n - 1) {\n\t\tint x, y; in, x, y;\n\t\trider (x, y), rider (y, x);\n\t}\n\tarcher (1, 0);\n\twhile (q--) {\n\t\tint x, y; in, x, y;\n\t\tlancer (x, y);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1574840776,
        "uid": 122451,
        "name": "Sasiyar",
        "ccfLevel": 0,
        "title": "1"
    },
    {
        "content": "\u505a\u5b8c\u7ebf\u6027\u57fa\u2642\u7684\u6a21\u677f\u9898\uff0c\u5c31\u6765\u770b\u8fd9\u9053\u9898\uff0c\u6211\u6015\u4e0d\u662f\u75af\u4e86\u3002\n\n\u5b9e\u9645\u4e0a\u6b64\u9898\u8fd8\u662f\u76f8\u5f53\u6c34\u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u67e5\u8be2\u7684\u662f\u6811\u4e0a\u8def\u5f84\u7684\u7ebf\u6027\u57fa\u2642\uff0c\u800c\u4e14\u7ebf\u6027\u57fa\u4e0d\u80fd\u901a\u8fc7\u5220\u9664\u7b49\u64cd\u4f5c\u5b9e\u73b0\u6316\u53d6\u90e8\u5206\u5143\u7d20\u505a\u7ebf\u6027\u57fa\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u53ea\u80fd\u66b4\u529b\u5408\u5e76\u4e86\u3002\u3002\u3002\u3002\u3002\n\n\u90a3\u5f53\u7136\u4e0d\u80fd\u4e00\u4e2a\u4e00\u4e2a\u5143\u7d20\u5730\u5408\u5e76\u4e86\uff0c\u56e0\u4e3a\u5f02\u6216\u5177\u6709\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u6309\u7167\u500d\u589e\u7684\u601d\u60f3\uff0cgay[i][j]\u8868\u793ai\u5f80\u4e0a\u8df32^j\u6b65\u7684\u7ebf\u6027\u57fa\uff0c\u7136\u540edp\u7684\u65f6\u5019\u66b4\u529b\u5408\u5e76\u4e24\u4e2agay[i][j-1]\u4e0egay[fa[i][j-1]][j-1],\u590d\u6742\u5ea6N(logN)*64\u3002\n\n\u5728\u67e5\u8be2\u7684\u65f6\u5019\u7c7b\u4f3c\u500d\u589eLCA,\u5728\u5f80\u4e0a\u8df3\u7684\u8fc7\u7a0b\u4e2d\u66b4\u529b\u5408\u5e76\uff0c\u590d\u6742\u5ea6\u4e5f\u662fN(logN)*64\u7684\n\n\u5b9e\u73b0\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u7ebf\u6027\u57fa\u7684\u677f\u5b50\u5c01\u88c5\u6210\u7ed3\u6784\u4f53\uff0c\u4ee3\u7801\u4f1a\u5f88\u77ed(\u4ec597\u884c)\n\u6700\u540e\u63d0\u9192\u5927\u5bb6\u4e00\u53e5\uff1a\u5f00long long \u5f00long long \u5f00long long,\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\uff01\uff01\uff01\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=20001;\nint n;\ntypedef long long ll;\nll a[100001];\nstruct xxj{\n\tll b[64];\n\txxj(){\n\t\tmemset(b,0,sizeof(b));\t\n\t}\n\tvoid insert(ll x){\n\t\tint i;\n\t\tfor(i=63;~i;i--){\n\t\t\tif(!((x>>i)&1))continue;\n\t\t\tif(!b[i]){b[i]=x;return ;}\n\t\t\telse x^=b[i];\n\t\t}\n\t}\n\tll q_max(){\n\t\tint i;\n\t\tll ans=0;\n\t\tfor(i=63;~i;i--){\n\t\t\tans=max(ans,ans^b[i]);\n\t\t}\n\t\treturn ans;\n\t}\n};\nxxj merge(xxj u,xxj v){\n\tint i;\n\tfor(i=63;~i;i--){\n\t\tif(v.b[i])u.insert(v.b[i]);\n\t}\n\treturn u;\n}\nint cnt,nxt[2*M],h[2*M],v[2*M];\nvoid add(int x,int y){\n\tcnt++;\n\tnxt[cnt]=h[x];\n\th[x]=cnt;\n\tv[cnt]=y;\n}\nint fa[M][21],dep[M];\nxxj gay[M][21];\nvoid dfs(int u,int f){\n\tint i;\n\tfa[u][0]=f;\n\tgay[u][0].insert(a[f]);\n\tdep[u]=dep[f]+1;\n\tfor(i=h[u];i;i=nxt[i]){\n\t\tint to=v[i];\n\t\tif(to!=f)dfs(to,u);\n\t}\n}\nll query(int x,int y){\n\tint i;\n\tif(dep[x]>dep[y])swap(x,y);\n\txxj jyk;\n\tjyk.insert(a[x]),jyk.insert(a[y]);\n\tfor(i=20;i>=0;i--){\n\t\tif(dep[fa[y][i]]>=dep[x])jyk=merge(jyk,gay[y][i]),y=fa[y][i];\n\t}\n\tif(x==y)return jyk.q_max();\n\tfor(i=20;i>=0;i--){\n\t\tif(fa[x][i]!=fa[y][i]){\n\t\t\tjyk=merge(jyk,gay[x][i]);\n\t\t\tjyk=merge(jyk,gay[y][i]);\n\t\t\tx=fa[x][i],y=fa[y][i];\n\t\t}\n\t}\n\tjyk=merge(jyk,gay[x][0]);\n\treturn jyk.q_max();\n}\nint main(){\n\tint i,j;\n\tint q;\n\tcin>>n>>q;\n\tfor(i=1;i<=n;i++)scanf(\"%lld\",&a[i]);\n\tfor(i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs(1,0);\n\tfor(j=1;j<=20;j++){\n\t\tfor(i=1;i<=n;i++){\n\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1];\n\t\t\tgay[i][j]=merge(gay[fa[i][j-1]][j-1],gay[i][j-1]);\n\t\t}\n\t}\n\twhile(q--){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tprintf(\"%lld\\n\",query(x,y));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572177753,
        "uid": 127915,
        "name": "Bosun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P3292)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u9898\u76ee\u5f88\u5bb9\u6613\u60f3\u5230\u5f02\u6216\u7ebf\u6027\u57fa\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u601d\u8003\u5982\u4f55\u7ec4\u5408\u51fa\u8def\u5f84\u4e0a\u9762\u5bf9\u5e94\u7684\u7ebf\u6027\u57fa\u6765\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u5408\u5e76\u4e24\u4e2a\u7ebf\u6027\u57fa\uff0c\u76f4\u63a5\u66b4\u529b\u5408\u5e76\uff08\u4f3c\u4e4e\u53ea\u6709\u8fd9\u79cd\u65b9\u6cd5\uff09\u7684\u65f6\u95f4\u662f$O(log_2^2n)$\u3002\u5982\u679c\u6211\u4eec\u53c2\u8003\u500d\u589e\u7684\u65b9\u6cd5\uff0c\u5904\u7406\u51fa\u6811\u4e0a\u500d\u589e\u51fa\u6765\u7684\u7ebf\u6027\u57fa\u7684\u60c5\u51b5\u7684\u8bdd\uff0c\u9884\u5904\u7406\u65f6\u95f4\u5c31\u662f$O(nlog_2^3n)$\uff0c\u603b\u65f6\u95f4\u5c31\u662f$O((n+q)log_2^3n)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7531\u4e8e$n$\u5c0f\u5e76\u4e14\u65f6\u9650\u5927\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u66b4\u529b\u505a\u6cd5\u53ef\u4ee5\u8fc7\u3002~~\u641e\u534a\u5929\u8fd9\u5c31\u662f\u4e00\u9053\u66b4\u529b\u9898\u5440~~\n# \u4ee3\u7801\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n\ntypedef long long LL;\n\nconst int MAXN = 20005, MAXSIZ = 65, MAXLOG = 20;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\nstruct LB\n{\n\tLL P[MAXSIZ];\n\tLB()\n\t{ \n\t\tmemset( P, 0, sizeof( P ) );\n\t}\n\tvoid insert( LL val )\n\t{\n\t\tfor( int i = 60 ; ~ i ; i -- )\n\t\t{\n\t\t\tif( val & ( 1ll << i ) )\n\t\t\t{\n\t\t\t\tif( ! P[i] )\n\t\t\t\t{\n\t\t\t\t\tP[i] = val;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tval ^= P[i];\n\t\t\t}\n\t\t}\n\t}\n\tLL query() const\n\t{\n\t\tLL res = 0;\n\t\tfor( int i = 60 ; ~ i ; i -- )\n\t\t{\n\t\t\tres = MAX( res, res ^ P[i] ); \n\t\t}\n\t\treturn res;\n\t}\n\tLL& operator [] ( const int indx )\n\t{\n\t\treturn P[indx];\n\t}\n\tLB operator + ( const LB & other ) const\n\t{\n\t\tLB res = other;\n\t\tfor( int i = 60 ; ~ i ; i -- )\n\t\t{\n\t\t\tif( P[i] )\n\t\t\t{\n\t\t\t\tres.insert( P[i] );\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n}base[MAXN][MAXLOG];\n\nstruct edge\n{\n\tint to, nxt;\n}Graph[MAXN * 2];\n\nLL G[MAXN];\nint f[MAXN][MAXLOG];\nint dep[MAXN];\nint head[MAXN];\nint N, Q, lg2, cnt, tot, ID = 0;\n\nvoid addEdge( const int from, const int to )\n{\n\tcnt ++;\n\tGraph[cnt].to = to;\n\tGraph[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nvoid DFS1( const int u, const int fa )\n{\n\tbase[u][0].insert( G[u] );\n\tdep[u] = dep[fa] + 1;\n\tf[u][0] = fa;\n\tint v;\n\tfor( int i = head[u] ; i ; i = Graph[i].nxt )\n\t{\n\t\tv = Graph[i].to;\n\t\tif( v ^ fa )\n\t\t{\n\t\t\tDFS1( v, u );\n\t\t}\n\t}\n}\n\nvoid init()\n{\n\tfor( int j = 1 ; j <= lg2 ; j ++ )\n\t{\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t{\n\t\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n\t\t\tbase[i][j] = base[i][j - 1] + base[f[i][j - 1]][j - 1];\n\t\t}\n\t}\n}\n\nvoid balance( int &u, const int steps, LB &b )\n{\n\tfor( int i = 0 ; ( 1 << i ) <= steps ; i ++ )\n\t{\n\t\tif( steps & ( 1 << i ) )\n\t\t{\n\t\t\tb = b + base[u][i];\n\t\t\tu = f[u][i];\n\t\t}\n\t}\n}\n\nLL ask( int u, int v )\n{\n\tLB res = LB();\n\tif( dep[u] > dep[v] )\n\t{\n\t\tbalance( u, dep[u] - dep[v], res );\n\t}\n\tif( dep[v] > dep[u] )\n\t{\n\t\tbalance( v, dep[v] - dep[u], res );\n\t}\n\tif( u == v )\n\t{\n\t\tres = res + base[u][0];\n\t\treturn res.query();\n\t}\n\tfor( int i = lg2 ; ~ i ; i -- )\n\t{\n\t\tif( f[u][i] ^ f[v][i] )\n\t\t{\n\t\t\tres = res + base[u][i] + base[v][i];\n\t\t\tu = f[u][i], v = f[v][i];\n\t\t}\n\t}\n\tres = res + base[u][0] + base[v][0] + base[f[u][0]][0];\n\treturn res.query();\n}\n\nint main()\n{\n\tint fr, to;\n\tread( N ), read( Q );\n\tlg2 = log2( N );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tread( G[i] );\n\t}\n\tfor( int i = 1 ; i < N ; i ++ )\n\t{\n\t\tread( fr ), read( to );\n\t\taddEdge( fr, to );\n\t\taddEdge( to, fr );  \n\t}\n\tDFS1( 1, 0 );\n\tinit();\n\twhile( Q -- )\n\t{\n\t\tread( fr ), read( to );\n\t\twrite( ask( fr, to ) ), putchar( '\\n' );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1566033378,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[P3292][SCOI2016]\u5e78\u8fd0\u6570\u5b57"
    },
    {
        "content": "\u672c\u6587\u540c\u65f6\u53d1\u5e03\u4e8e\u8fd9\u91cc\n[\u4f20\u9001\u95e8](https://www.cnblogs.com/hjmmm/p/10433156.html)\n\n## \u9898\u610f\n\u6c42\u6811\u4e0a\u8def\u5f84\u6700\u5927\u70b9\u6743\u5f02\u6216\u548c\n\n\u81ea\u7136\u60f3\u5230\uff08\u7ef4\u62a4\u6811\u4e0a\u8def\u5f84\uff09+ \uff08\u7ef4\u62a4\u6700\u5927\u5f02\u6216\u548c\uff09\n\n\u90a3\u4e48\u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u9009\u62e9\n\n1.\u6811\u5256+\u7ebf\u6027\u57fa\n\n2.\u500d\u589e+\u7ebf\u6027\u57fa\n\n3.\u70b9\u5206\u6cbb+\u7ebf\u6027\u57fa\n\n\u81f3\u4e8e\u7ebf\u6027\u57fa\u7684\u5408\u5e76\n\n\u4e00\u5171\u5c3160\u4f4d\n\n\u66b4\u529b\u5408\u5e76\u5c31\u597d\u5566\n\n\u8fd9\u662f\u4e00\u4efd\u5728loj T\u6389\u5728\u6d1b\u8c37AC\u7684\u53ef\u601c\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <vector> \nusing namespace std;\nconst int N = 2e4 + 2;\nconst int LIM = 60;\n\ninline int read()\n{\n    int x=0;bool t=false;char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n    if(ch=='-')t=true,ch=getchar();\n    while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();\n    return t?-x:x;\n}\n\nstruct Edge{\n    int v, next;\n}edge[N << 1];\nint esize, head[N];\ninline void addedge(int x, int y){\n    edge[++esize] = (Edge){y, head[x]};\n    head[x] = esize;\n}\n\nstruct XXJ{\n    long long w[LIM + 2];\n    XXJ(){\n        memset(w, 0, sizeof(w));\n    }\n    void ins(long long x){\n        for(int i = LIM; ~i; --i){\n            if(!(x >> i)) continue;\n            else if(!w[i]){w[i] = x; break;}\n            x ^= w[i];\n        }\n    }\n    void print(){\n        long long res = 0;\n        for(int i = LIM; ~i; --i) \n            if((res ^ w[i]) > res) res ^= w[i];\n \t\tprintf(\"%lld\\n\", res);\n    }\n}px[N][18];\nlong long w[N];\nint p[N][18], dep[N];\nint n, m;\n\nXXJ merge(XXJ x, XXJ y){\n    for(int i = LIM; i >= 0; --i){\n        if(y.w[i]) x.ins(y.w[i]);\n    }\n    return x;\n}\n\nXXJ LCA(int x, int y){\n    XXJ res;\n    res.ins(w[x]); res.ins(w[y]);\n    if(dep[x] < dep[y]) swap(x, y); \n    for(int i = 15; i >= 0; --i)\n        if(dep[x] - (1 << i) >= dep[y]){\n        \tres = merge(res, px[x][i]);\n        \tx = p[x][i];\n        }\n    if(x == y) return res;\n    for(int i = 15; i >= 0; --i){\n    \tif(p[x][i] != p[y][i]){\n    \t\tres = merge(res, px[x][i]);\n    \t\tres = merge(res, px[y][i]);\n    \t\tx = p[x][i], y = p[y][i];\n    \t}\n    }\n    res = merge(res, px[x][0]);\n    return res;\n}\n\nvoid dfs(int x, int ff){\n    dep[x] = dep[ff] + 1;\n    p[x][0] = ff;\n    px[x][0].ins(w[ff]); \n    for(int i = head[x], vv; ~i; i = edge[i].next){\n        vv = edge[i].v; if(vv == ff) continue;\n        dfs(vv, x);\n    }\n}\n\nvoid calc(){\n    for(int i = 1; i <= 15; ++i){\n        for(int j = 1; j <= n; ++j){\n            p[j][i] = p[p[j][i - 1]][i - 1];\n            px[j][i] = merge(px[j][i - 1], px[p[j][i - 1]][i - 1]);\n        }\n    }\n}\n \nint main() {\n    memset(head, -1, sizeof(head));\n    \n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; ++i){\n        scanf(\"%lld\", &w[i]);\n    } \n    for(int i = 1, x, y; i < n; ++i){\n        scanf(\"%d%d\", &x, &y);\n        addedge(x, y); addedge(y, x);\n    }\n    dfs(1, 0); \n    calc();\n    for(int i = 1, x, y; i <= m; ++i){\n        x = read(), y = read();\n        XXJ res = LCA(x, y);\n        res.print();\n    }\n    return 0;\n}  \n```",
        "postTime": 1551185757,
        "uid": 46739,
        "name": "hjmmm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "\u5206\u4eab\u4e00\u4e2a\u672c\u9898\u9664\u4e86\u66b4\u529b\u4e4b\u5916\u6700\u6162\u7684\u505a\u6cd5\uff1aLCT\n\n\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u7528LCT\u7ef4\u62a4\u94fe\u4e0a\u7684\u7ebf\u6027\u57fa\uff0c`update`\u7684\u65f6\u5019\u5c31\u5408\u5e76\u5c31\u884c\u4e86\u3002\u5176\u5b83\u57fa\u672c\u4e0a\u5c31\u662fLCT\u57fa\u672c\u64cd\u4f5c\u3002\n\n\u590d\u6742\u5ea6\u5e94\u8be5\u662f$O(Q\\log n\\log G_i)$\u7684\uff0c\u4f46\u662f\u5e38\u6570\u5947\u5927\u65e0\u6bd4\uff0c\u975e\u5e38\u975e\u5e38\u975e\u5e38\u975e\u5e38\u6162\uff0c\u53cd\u6b63\u6211T\u5230\u53ea\u670920\u5206\u3002\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& x) {\n    int f = 0, c = getchar(); x = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) x = x * 10 + c - 48, c = getchar();\n    if (f) x = -x;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& x, Args&... args) {\n    read(x); read(args...); \n}\ntemplate <typename T> void write(T x) {\n    if (x < 0) x = -x, putchar('-');\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T> void writeln(T x) { write(x); puts(\"\"); }\ntemplate <typename T> inline bool chkmin(T& x, const T& y) { return y < x ? (x = y, true) : false; }\ntemplate <typename T> inline bool chkmax(T& x, const T& y) { return x < y ? (x = y, true) : false; }\n\ntypedef long long LL;\nconst int maxn = 2e4 + 207;\nLL a[maxn];\nint n, m;\n\ninline void insert(LL *base, LL val) {\n    if (val)\n        for (int i = 60; ~i; --i)\n            if (val >> i) {\n                if (base[i]) val ^= base[i];\n                else {\n                    base[i] = val;\n                    return;\n                }\n            }\n}\ninline void merge(LL *a, LL *b) {\n    for (int i = 60; ~i; --i)\n        if (b[i]) insert(a, b[i]);\n}\ninline LL query(LL *base) {\n    LL ans = 0;\n    for (int i = 60; ~i; --i)\n        if ((ans ^ base[i]) > ans) ans ^= base[i];\n    return ans;\n}\n\nstruct Link_Cut_Tree {\n    int fa[maxn], ch[maxn][2];\n    LL base[maxn][77];\n    bool rev[maxn];\n    inline int iden(int x) { return ch[fa[x]][0] == x ? 0 : (ch[fa[x]][1] == x ? 1 : -1); }\n    inline void update(int x) {\n        for (int i = 0; i <= 60; ++i) base[x][i] = 0;\n        insert(base[x], a[x]);\n        if (ch[x][0]) merge(base[x], base[ch[x][0]]);\n        if (ch[x][1]) merge(base[x], base[ch[x][1]]);\n    }\n    inline void pushdown(int x) {\n        if (rev[x]) {\n            rev[ch[x][0]] ^= 1; rev[ch[x][1]] ^= 1;\n            rev[x] = 0; std::swap(ch[x][0], ch[x][1]);\n        }\n    }\n    inline void rotate(int x) {\n        int d = iden(x), y = fa[x];\n        if (~iden(y)) ch[fa[y]][iden(y)] = x;\n        fa[x] = fa[y];\n        if ((ch[y][d] = ch[x][d ^ 1])) fa[ch[x][d ^ 1]] = y;\n        fa[ch[x][d ^ 1] = y] = x;\n        update(y); update(x);\n    }\n    int stk[maxn];\n    inline void splay(int x) {\n        int tp = 1; stk[1] = x;\n        for (int i = x; ~iden(i); i = fa[i]) stk[++tp] = fa[i];\n        while (tp) pushdown(stk[tp--]);\n        while (~iden(x)) {\n            int y = fa[x];\n            if (~iden(y)) rotate(iden(y) ^ iden(x) ? x : y);\n            rotate(x);\n        }\n    }\n    inline void access(int x) {\n        for (int y = 0; x; x = fa[y = x])\n            splay(x), ch[x][1] = y, update(x);\n    }\n    inline void makeroot(int x) {\n        access(x); splay(x); rev[x] ^= 1;\n    }\n    inline void link(int x, int y) {\n        makeroot(x); fa[x] = y;\n    }\n    inline LL query(int x, int y) {\n        makeroot(x); access(y); splay(y);\n        return ::query(base[y]);\n    }\n};\nLink_Cut_Tree lct;\n\nint main() {\n    read(n, m);\n    for (int i = 1; i <= n; ++i) read(a[i]), insert(lct.base[i], a[i]);\n    for (int i = 1, x, y; i <= n - 1; ++i) read(x, y), lct.link(x, y);\n    for (int i = 1; i <= m; ++i) {\n        int x, y; read(x, y);\n        writeln(lct.query(x, y));\n    }\n    return 0;\n}\n```\n\n\u4e3a\u4e86\u9632\u6b62\u8fd9\u7bc7\u9898\u89e3\u4e0d\u901a\u8fc7\uff0c\u8bb2\u4e00\u4e0b\u4e0d\u4f1aTLE\u7684\u505a\u6cd5\u3002\u5176\u5b9e\u53ea\u8981\u500d\u589e\u5c31\u53ef\u4ee5\u4e86\u3002\u8bbe$base[x][i][62]$\u662f\u4ece$x$\u5f00\u59cb\u5f80\u4e0a\u8d70$2^i$\u8fd9\u4e00\u6bb5\u7684\u7ebf\u6027\u57fa\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e\u500d\u589eLCA\u7684$fa[x][i]=fa[fa[x][i - 1]][i - 1]$\u8fd9\u6837\u7684\u65b9\u6cd5\u9884\u5904\u7406\u51fa\u6765\u3002\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u4ece\u4e24\u4e2a\u70b9\u5f00\u59cb\u500d\u589e\u5730\u5f80\u4e0a\u8df3\uff0c\u4e00\u8fb9\u8df3\u4e00\u8fb9\u5408\u5e76\u7ebf\u6027\u57fa\uff0c\u6700\u540e\u53ef\u4ee5\u5408\u5e76\u51fa\u4e00\u4e2a\u8868\u793a$x$\u5230$y$\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u6743\u7684\u7ebf\u6027\u57fa\uff0c\u7136\u540e\u67e5\u8be2\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u662f\u548cLCT\u4e00\u6837\u7684\uff0c\u90fd\u662f$O(Q\\log n\\log G_i)$\uff0c\u4f46\u662f\u5b83\u5c31\u662f\u80fd\u8fc7...\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& x) {\n    int f = 0, c = getchar(); x = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) x = x * 10 + c - 48, c = getchar();\n    if (f) x = -x;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& x, Args&... args) {\n    read(x); read(args...); \n}\ntemplate <typename T> void write(T x) {\n    if (x < 0) x = -x, putchar('-');\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T> void writeln(T x) { write(x); puts(\"\"); }\ntemplate <typename T> inline bool chkmin(T& x, const T& y) { return y < x ? (x = y, true) : false; }\ntemplate <typename T> inline bool chkmax(T& x, const T& y) { return x < y ? (x = y, true) : false; }\n\ntypedef long long LL;\nconst int maxn = 2e4 + 207;\nint v[maxn << 1], head[maxn], next[maxn << 1], tot;\nLL a[maxn];\nint dep[maxn], fa[maxn][20];\nLL base[maxn][20][67];\nLL curr[67];\nint n, m;\n\ninline void ae(int x, int y) {\n    v[++tot] = y; next[tot] = head[x]; head[x] = tot;\n    v[++tot] = x; next[tot] = head[y]; head[y] = tot;\n}\ninline void insert(LL *base, LL x) {\n    if (x) {\n        for (int i = 60; ~i; --i)\n            if (x >> i) {\n                if (base[i]) x ^= base[i];\n                else {\n                    base[i] = x;\n                    return;\n                }\n            }\n    }\n}\ninline void merge(LL *a, LL *b) {\n    for (int i = 60; ~i; --i)\n        if (b[i]) insert(a, b[i]);\n}\ninline LL query(LL *base) {\n    LL ans = 0;\n    for (int i = 60; ~i; --i)\n        if ((ans ^ base[i]) > ans) ans ^= base[i];\n    return ans;\n}\nvoid dfs(int x) {\n    dep[x] = dep[fa[x][0]] + 1;\n    for (int i = 1; i <= 16; ++i)\n        fa[x][i] = fa[fa[x][i - 1]][i - 1];\n    insert(base[x][0], a[x]);\n    for (int i = 1; i <= 16; ++i) {\n        for (int j = 0; j <= 60; ++j)\n            base[x][i][j] = base[x][i - 1][j];\n        merge(base[x][i], base[fa[x][i - 1]][i - 1]);\n    }\n    for (int i = head[x]; i; i = next[i])\n        if (v[i] != fa[x][0]) {\n            fa[v[i]][0] = x;\n            dfs(v[i]);\n        }\n}\ninline LL query(int x, int y) {\n    for (int i = 0; i <= 60; ++i) curr[i] = 0;\n    if (x == y) return a[x];\n    if (dep[x] < dep[y]) std::swap(x, y);\n    for (int i = 16; ~i; --i) if (dep[fa[x][i]] >= dep[y]) {\n        merge(curr, base[x][i]);\n        x = fa[x][i];\n    }\n    if (x == y) {\n        merge(curr, base[x][0]);\n        return query(curr);\n    }\n    for (int i = 16; ~i; --i) if (fa[x][i] != fa[y][i]) {\n        merge(curr, base[x][i]);\n        merge(curr, base[y][i]);\n        x = fa[x][i];\n        y = fa[y][i];\n    }\n    merge(curr, base[x][1]);\n    merge(curr, base[y][0]);\n    return query(curr);\n}\nint main() {\n    read(n, m);\n    for (int i = 1; i <= n; ++i) read(a[i]);\n    for (int i = 1, x, y; i < n; ++i) read(x, y), ae(x, y);\n    dfs(1);\n    for (int i = 1, x, y; i <= m; ++i) read(x, y), writeln(query(x, y));\n    return 0;\n}\n```\n\n\u6570\u7ec4\u4e0d\u8981\u5f00\u592a\u5927\uff0c\u4f1aMLE\u3002",
        "postTime": 1548999517,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "**\u7ebf\u6027\u57fa+\u500d\u589e$LCA$\u3002**\n\n\u8fd9\u9898\u662f\u76f4\u63a5\u7403\u6811\u4e0a\u8def\u5f84\u7684\u6700\u5927\u6743\u503c\uff0c\u4e8e\u662f\u5c31\u9009\u62e9\u4f7f\u7528\u5927\u5bb6\u90fd\u559c\u7231\u7684\u500d\u589e\u7403$LCA$\u5566\uff08\u56e0\u4e3a\u597d\u6253_(:\u0437\u300d\u2220)__)\n\n\u53ef\u662f\u4ed4\u7ec6\u4e00\u770b\u53d1\u73b0\u4e8b\u60c5\u5e76\u6ca1\u6709\u90a3\u4e48\u7b80\u5355 \u8d21\u732e\u662f\u7528\u5f02\u6216\u548c\u7b97\u7684??\n\n\u5176\u5b9e\u52a0\u4e2a\u7ebf\u6027\u57fa\u5c31\u53ef\u4ee5\u5566!\n\n\u5427\u5e73\u65f6\u500d\u589e\u7528\u7684$dis$\u6570\u7ec4\u819c\u6539\u4e00\u4e0b\u4e0b\uff0c\u53d8\u6210\u8bb0\u5f55\u7ebf\u6027\u57fa\u7684$p$\u6570\u7ec4\uff1a\u5728\u6700\u540e\u8981\u52a0\u4e00\u7ef4\uff0c\u8868\u793a\u4e8c\u8fdb\u5236\u7684\u7b2c\u51e0\u4f4d\u3002\n\n\u4e00\u5f00\u59cb\u4ee5\u4e3a\u6570\u7ec4\u4f1a\u5f00\u4e0d\u4e0b\uff0c\u7136\u540e\u53d1\u73b0$n$\u53ea\u6709$20000$ \u8ba1\u7b97\u4e00\u6ce2\u53d1\u73b0\u53ef\u4ee5! \u7136\u540e\u518d\u5f00\u4e00\u4e2a~~\u53d8\u91cf\u540d\u4e11\u964b\u7684~~$pp$\u6570\u7ec4\uff0c\u8868\u793a\u5f53\u524d\u8be2\u95ee\u4e2d\u7684\u7ebf\u6027\u57fa(\u6211\u4e00\u5f00\u59cb\u6ca1\u7528\u8fd9\u4e2a\u6570\u7ec4\uff0c\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\uff0cWA\u5230\u54ed\u6ce3)\u3002\u6bcf\u6b21\u8be2\u95ee\u8df3\u500d\u589e\uff0c\u5e76\u5427\u5f53\u524d\u4f4d\u7f6e\u7684$p$\u63d2\u5230$pp$\u91cc\u9762\u53bb~\n\n\u7136\u540e\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u66b4\u529b\u641e\u4e86~\n\n**\u4e00\u4e9b\u9700\u8981\u6ce8\u610f(\u6211\u8c03\u4e86\u5f88\u4e45)\u7684\u5730\u65b9:**\n\n**\u00b7** \u8fd9\u91cc\u7684\u8d21\u732e\u7b97\u7684\u662f\u70b9\u6743\uff0c\u4e0d\u662f\u8fb9\u6743\u3002\u4e8e\u662f\u6211\u7684$p$\u6570\u7ec4\u5c31\u6709\u70b9\u5947\u602a: \u4ed6\u8bb0\u5f55\u7684\u662f\u8282\u70b9**\u5305\u62ec\u81ea\u5df1**\u5f80\u4e0a\u8df3$2^i$\u6b65\u7684\u7ebf\u6027\u57fa($up$\u6570\u7ec4\u7684\u542b\u4e49\u4ecd\u7136\u4e0d\u53d8)\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u7b97\u7684\u662f$up$[$u$][$i$]\u4ee5\u4e0b\u7684\u6743\u503c\u3002\u6240\u4ee5\u5f53\u8df3\u5230$LCA$\u65f6\uff0c\u5f53\u524d\u70b9\u7684\u6743\u503c\u8fd8\u6ca1\u6709\u7edf\u8ba1\u8fc7\uff0c\u5c31\u8981\u624b\u52a8\u5427$g$[$u$]\u6dfb\u52a0\u5230\u7ebf\u6027\u57fa\u91cc\u9762\u53bb\u3002\n\n**\u00b7** $2^{60}$\u8981\u5f00$longlong$! \u4e0d\u8fc7\u5199\u4e2a$max$\u51fd\u6570\u6bd4\u8f83$longlong$\u8fd4\u56de$int$\u7684\u4eba\u9664\u4e86\u6211\u4e0d\u4f1a\u518d\u6709\u7b2c\u4e8c\u4e2a\u4e86\u516b..\n\n**\u00b7** $g$[$v$]\u53ef\u522b\u5199\u6210$v$\u4e86(\u7ec6\u8282\u5e9f\u54ed\u6ce3)\n\n\u4ee3\u7801: \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\ntypedef long long ll;\nusing namespace std;\n#define il inline\n#define rg register\nll read(){\n\tll x=0; int p=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') p=0; ch=getchar();}\n\twhile(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48), ch=getchar();\n\treturn p?x: -x;\n}\nil ll max(ll a, ll b){return a>b?a: b;}\n#define _ 20010\nint n, q, hd[_], cnt;\nstruct Edge{int nxt, to;}e[_<<1];\nil void add(int u, int v){\n\te[++cnt]=(Edge){hd[u], v}, hd[u]=cnt;\n}\nconst int mx=60;\nll g[_], p[_][16][mx+1], pp[mx+1];\nint up[_][16], dep[_];\nvoid insert(ll x){//\u5427x\u63d2\u5165\u7b54\u6848\u7ebf\u6027\u57fa~\n\tfor(int i=mx; ~i; --i)\n\t\tif(x>>i){\n\t\t\tif(!pp[i]){pp[i]=x; break;}\n\t\t\tx^=pp[i];\n\t\t}\n}\nvoid insert_p(int u, int d, ll x){//\u5427x\u63d2\u5165\u500d\u589e\u7ebf\u6027\u57fa~\n\tfor(int i=mx; ~i; --i)\n\t\tif(x>>i){\n\t\t\tif(!p[u][d][i]){p[u][d][i]=x; break;}\n\t\t\tx^=p[u][d][i];\n\t\t}\n}\nvoid dfs(int u, int fr){\n\tdep[u]=dep[fr]+1, up[u][0]=fr;\n\tinsert_p(u, 0, g[u]);\n\t\n\tfor(int i=1; i<=15; ++i){\n\t\tup[u][i]=up[up[u][i-1]][i-1];\n\t\tif(!up[u][i]) break;\n\n\t\tfor(int j=mx; ~j; --j){\n\t\t\tif(p[u][i-1][j]) insert_p(u, i, p[u][i-1][j]);\n\t\t\tif(p[up[u][i-1]][i-1][j]) insert_p(u, i, p[up[u][i-1]][i-1][j]);\n\t\t}\n\t}\n\n\tfor(rg int i=hd[u]; i; i=e[i].nxt)\n\t\tif(e[i].to!=fr) dfs(e[i].to, u);\n}\nll query(int u, int v){\n\tmemset(pp, 0, sizeof(pp));//pp\u5c31\u662f\u6bcf\u6b21\u8be2\u95ee\u65f6\u7684\u7ebf\u6027\u57fa~\n\n\tif(dep[u]<dep[v]) swap(u, v);\n\tfor(int i=15; ~i; --i)\n\t\tif(dep[up[u][i]]>=dep[v]){\n\t\t\tfor(int j=mx; ~j; --j)\n\t\t\t\tif(p[u][i][j]) insert(p[u][i][j]);\n\t\t\tu=up[u][i];\n\t\t}\n\n\tif(u^v){\n\t\tfor(int i=15; ~i; --i)\n\t\t\tif(up[u][i]!=up[v][i]){\n\t\t\t\tfor(int j=mx; ~j; --j){\n\t\t\t\t\tif(p[u][i][j]) insert(p[u][i][j]);\n\t\t\t\t\tif(p[v][i][j]) insert(p[v][i][j]);\n\t\t\t\t}\n\t\t\t\tu=up[u][i], v=up[v][i];\n\t\t\t}\n\t\tinsert(g[u]), insert(g[v]), insert(g[up[u][0]]);//\u52a0\u5165\u73b0\u5728\u7684\u70b9\u6743~\n\t}\n\telse insert(g[u]);\n\t\n\tll now=0;\n\tfor(int i=mx; ~i; --i)\n\t\tnow=max(now, now^pp[i]);\n\treturn now;\n}\nint main(){\n\tfreopen(\"4568.in\", \"r\", stdin);\n\tfreopen(\"4568.out\", \"w\", stdout);\n\tn=read(), q=read();\n\tfor(rg int i=1; i<=n; ++i) g[i]=read();\n\tint x, y;\n\tfor(rg int i=1; i^n; ++i)\n\t\tx=read(), y=read(), add(x, y), add(y, x);\n\n\tdfs(1, 0);//\u9884\u5904\u7406~\n\n\twhile(q--){\n\t\tx=read(), y=read();\n\t\tprintf(\"%lld\\n\", query(x, y));\n\t}\n}\n\n```",
        "postTime": 1540392657,
        "uid": 69858,
        "name": "matsuk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "\u57fa\u672c\u601d\u8def\u4e0e\u5176\u4ed6\u9898\u89e3\u76f8\u540c\n\n\u6253\u4e2a\u66b4\u529b\u70b9\u7684\uff0c\u6bcf\u6b21\u90fd\u66b4\u529b\u5408\u5e76\u6dfb\u52a060\u7684\u5e38\u6570\n\n\u7a0b\u5e8f\u5927\u90e8\u5206\u4e0e\u500d\u589eLCA\u6ca1\u6709\u533a\u522b\uff0c\u53ea\u9700\u8981\u5728\u500d\u589e\u4e2d\u52a0\u5165\u7ebf\u6027\u57fa\u5373\u53ef\n```\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(4)\n#pragma GCC optimize(\"Ofast,no-stack-protector\")\n#include <bits/stdc++.h>\n#define res register ll\n#define ll long long\n#define N 20005\nusing namespace std;\nstruct papa\n{\n  ll to,next;\n} e[N<<1];\nll dep[N],fa[N][22],lg[N],d[N],a[N];\nll tot;\ninline ll read()\n{\n  ll X=0,w=0;\n  char ch=0;\n  while(!isdigit(ch))\n  {\n    w|=ch=='-';\n    ch=getchar();\n  }\n  while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n  return w?-X:X;\n}\nstruct linear_base\n{\n  static const ll maxlog=62;\n  ll d[maxlog+1];\n  linear_base()\n  {\n    memset(d,0,sizeof(d));\n  }\n  inline void insert(res now)\n  {\n    for(res i=maxlog; ~i; i--)\n      if((now>>i)&1)\n        if(d[i]) now^=d[i];\n        else\n        {\n          d[i]=now;\n          return;\n        }\n  }\n  inline ll qmax()\n  {\n    res ans=0;\n    for(res i=maxlog; ~i; i--)\n      if((ans^d[i])>ans)\n        ans^=d[i];\n    return ans;\n  }\n  inline ll qmin()\n  {\n    for(res i=0; i<=maxlog; i++)\n      if(d[i])\n        return d[i];\n    return 0;\n  }\n  inline bool check(res now)\n  {\n    for(res i=maxlog; ~i; i--)\n      if((now>>i)&1)\n        if(d[i]) now^=d[i];\n    return now==0;\n  }\n  inline ll query(res k)\n  {\n    ll tmp[maxlog+1],tot,ans=0;\n    for(res i=0; i<=maxlog; i++)\n    {\n      for(res j=0; j<i; j++) d[i]^=d[j];\n      tmp[++tot]=d[i];\n    }\n    for(res i=0; i<tot; i++)\n      if((k>>i)&1)\n        ans^=tmp[i];\n    return ans;\n  }\n  inline void merge(linear_base a1)\n  {\n    for(res i=60; ~i; i--)\n      if(a1.d[i]) insert(a1.d[i]);\n  }\n} L[N][20];\ninline void add(ll x,ll y)\n{\n  e[++tot].to=y;\n  e[tot].next=d[x];\n  d[x]=tot;\n}\nvoid dfs(res now,res fath)\n{\n  dep[now]=dep[fath]+1;\n  fa[now][0]=fath;\n  L[now][0].insert(a[fath]);\n  for(res i=1; (1<<i)<=dep[now]; i++)\n  {\n    fa[now][i]=fa[fa[now][i-1]][i-1];\n    L[now][i].merge(L[now][i-1]),L[now][i].merge(L[fa[now][i-1]][i-1]);\n  }\n  for(res i=d[now]; i; i=e[i].next)\n    if(e[i].to!=fath)\n      dfs(e[i].to,now);\n}\ninline ll lca(res x,res y)\n{\n  linear_base ans;\n  if(x==y) return a[x];\n  if(dep[x]<dep[y])\n    swap(x,y);\n  ll cha=dep[x]-dep[y];\n  for(res i=0; i<15; i++)\n    if(cha&(1<<i))\n      ans.merge(L[x][i]),x=fa[x][i];\n  if(x==y)\n    return ans.qmax();\n  for(res i=14; i>=0; i--)\n    if(fa[x][i]!=fa[y][i])\n    {\n      ans.merge(L[x][i]),ans.merge(L[y][i]);\n      x=fa[x][i],y=fa[y][i];\n    }\n  ans.merge(L[x][0]);\n  ans.merge(L[y][0]);\n  return ans.qmax();\n}\nll n,m,s;\nint main()\n{\n  n=read(),m=read();\n  for(res i=1; i<=n; i++)\n  {\n    a[i]=read();\n    L[i][0].insert(a[i]);\n  }\n  for(res i=1; i<=n-1; i++)\n  {\n    res x=read(),y=read();\n    add(x,y),add(y,x);\n  }\n  dfs(1,0);\n  for(res i=1; i<=m; i++)\n  {\n    res x=read(),y=read();\n    printf(\"%lld\\n\",lca(x,y));\n  }\n  return 0;\n}\n```",
        "postTime": 1537101946,
        "uid": 26848,
        "name": "miaokehao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "\u9898\u610f\u5927\u6982\u662f\u6c42\u94fe\u4e0a\u9009\u51fa\u4e00\u4e9b\u6570\uff0c\u4f7f\u5f97\u5f02\u6216\u548c\u6700\u5927\uff0c\u6ca1\u6709\u4fee\u6539\n\n\u5b50\u96c6\u6700\u5927\u5f02\u6216\u548c\uff1f\u7ebf\u6027\u57fa\uff01\n\n\u4e0d\u59a8\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u4e00\u4e9b\u7684\u505a\u6cd5\n\n\u8003\u8651\u6811\u4e0a\u500d\u589e\uff0c$f_{i,j}$\u8868\u793a\u4ece\u70b9$i$\u5f80\u4e0a\u722c$2^j-1$\u6b21\uff0c\u6240\u7ecf\u8fc7\u7684\u70b9\u6784\u6210\u7684\u7ebf\u6027\u57fa\n\n\u53d1\u73b0\u8fd9\u4e2a\u53ef\u4ee5\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n \\log^3 n)$\n\n\u67e5\u8be2\u7684\u8bdd\u5c31\u662f\u6811\u4e0a\u500d\u589e\u4e86\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f$O(n \\log^3 n)$\n\n~~\u52a0\u4e0a\u5feb\u8bfb\u540e\u53ef\u4ee5\u5927\u529b\u5361\u8fdb\u53bb~~\n\n``` cpp\n%:pragma GCC optimize(2)\n%:pragma GCC optimize(3)\n \n#include <bits/stdc++.h>\n \nusing namespace std;\n \ntypedef long long ll;\n \nconst int N = 20000 + 10;\n \nll val[N];\n \nstruct BAS { ll val[62]; } bas[N][20], la;\n \nint n, q, fa[N][20], deep[N], head[N], rest[N * 2], to[N * 2];\n \ntemplate<typename T> inline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    while(!isdigit(c)) c = getchar();\n    while(isdigit(c)) x = x * 10 + c - '0', c = getchar();\n}\n \ninline void add(int u, int v) { static int tot = 0; to[++ tot] = v, rest[tot] = head[u], head[u] = tot; }\n \ninline int getlca(int u, int v) {\n    if(deep[u] < deep[v]) swap(u, v);\n    for(int i = 15 ; ~ i ; -- i) if(deep[fa[u][i]] >= deep[v]) u = fa[u][i];\n    if(u == v) return u;\n    for(int i = 15 ; ~ i ; -- i) if(fa[u][i] != fa[v][i]) u = fa[u][i], v = fa[v][i];\n    return fa[u][0];\n}\n \ninline void ins(BAS &bas, ll val) {\n    for(int i = 60 ; ~ i ; -- i) {\n        if((val >> i) & 1) {\n            if(!bas.val[i]) {\n                bas.val[i] = val;\n                break;\n            }\n            val ^= bas.val[i];\n        }\n    }\n}\n \ninline void merge(BAS &bas, BAS &src) { for(int i = 60 ; ~ i ; -- i) if(src.val[i]) ins(bas, src.val[i]); }\n \ninline ll query(BAS &bas) {\n    ll res = 0;\n    for(int i = 60 ; ~ i ; -- i)\n        if((res ^ bas.val[i]) > res) res ^= bas.val[i];\n    return res;\n}\n \nvoid dfs(int u) {\n    deep[u] = deep[fa[u][0]] + 1;\n    ins(bas[u][0], val[u]);\n    for(int i = 1 ; i <= 15 ; ++ i) {\n        fa[u][i] = fa[fa[u][i - 1]][i - 1];\n        merge(bas[u][i], bas[u][i - 1]), merge(bas[u][i], bas[fa[u][i - 1]][i - 1]);\n    }\n    for(int i = head[u] ; i ; i = rest[i]) {\n        int v = to[i];\n        if(v != fa[u][0]) fa[v][0] = u, dfs(v);\n    }\n}\n \ninline ll sol(int u, int v) {\n    memset(la.val, 0, sizeof la.val);\n    int d = getlca(u, v);\n    if(u == v) {\n        ins(la, val[u]);\n    } else if(d == u || d == v) {\n        if(deep[u] > deep[v]) swap(u, v);\n        for(int i = 15 ; ~ i ; -- i)\n            if(deep[fa[v][i]] >= deep[u]) merge(la, bas[v][i]), v = fa[v][i];\n        ins(la, val[u]);\n    } else {\n        for(int i = 15 ; ~ i ; -- i) {\n            if(deep[fa[u][i]] >= deep[d]) merge(la, bas[u][i]), u = fa[u][i];\n            if(deep[fa[v][i]] >= deep[d]) merge(la, bas[v][i]), v = fa[v][i];\n        }\n        ins(la, val[d]);\n    }\n    return query(la);\n}\n \nint main() {\n    read(n), read(q);\n    for(int i = 1 ; i <= n ; ++ i) read(val[i]);\n    for(int i = 1, u, v ; i < n ; ++ i) {\n        read(u), read(v);\n        add(u, v), add(v, u);\n    }\n    dfs(1);\n    for(int i = 1, u, v ; i <= q ; ++ i) {\n        read(u), read(v);\n        printf(\"%lld\\n\", sol(u, v));\n    }\n}\n```",
        "postTime": 1531104831,
        "uid": 47111,
        "name": "nekko",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "~~\u5728\u8fd9\u91cc\u7ed9\u4e00\u79cd\u7406\u8bba\u590d\u6742\u5ea6\u975e\u5e38\u4f18\u79c0\u7684\u7b97\u6cd5~~\n\n\u770b\u5230\u9898\u89e3\u91cc\u9762\u6ca1\u6709\u6811\u5256,\u6211\u5f53\u65f6\u60f3\u7684\u65f6\u5019\u5c31\u975e\u5e38\u8ff7\u60d1, \u6811\u5256\u4e0d\u662f\u624d $mlogn^2$\u5417,\u600e\u4e48\u53ef\u80fd\u6ca1\u6709\u4eba\u7528\u8fd9\u4e2a\u8fc7\u5462. (\u800c\u4e14\u6811\u5256\u8fd8\u53ef\u4ee5\u652f\u6301\u4fee\u6539)\n\n\u7136\u540e\u6211\u5c31\u8001\u8001\u5b9e\u5b9e\u5199\u4e86\u6811\u5256,\u4ea4\u4e861\u53d1\u53d1\u73b0t\u98de\u4e86,\u7136\u540e\u4ed4\u7ec6\u4e00\u770b\u53d1\u73b0,\u5728\u7ebf\u6bb5\u6811\u4e2d\u7528\u5230\u7684merge,\u5b83\u662f\u81ea\u5e26360\u7684\u5e38\u6570\u7684. ~~\u4e8e\u662f\u8fd9\u5c31\u662f\u4e00\u4e2a\u6709360\u5e38\u6570\u7684\u4f18\u79c0mlogn\u65b9\u505a\u6cd5~~\n\n\u7136\u540e\u6211\u5e76\u6ca1\u6709\u653e\u5f03,\u6211\u53d1\u73b0\u5f53x=0\u65f6\u5176\u5b9e\u662f\u4e0d\u7528add\u7684\u4e8e\u662f\u6211\u5c31\u52a0\u4e86if(b.p[i])\u8fd9\u6837\u4e00\u53e5\u8bdd,\u7136\u540e\u5f00O2\u5b83\u5c31A\u4e86 ????? \u7406\u8bba\u590d\u6742\u5ea6 $1e11$\u7684\u4f18\u79c0\u7b97\u6cd5\u4e5f\u80fd\u8fc7,\u592a\u8349\u4e86.\n\n\u5176\u5b9e\u590d\u6742\u5ea6\u662f\u5047\u7684,\u4f46\u662f\u5982\u679c\u9898\u76ee\u5e26\u4fee\u6539\u7684\u8bdd,\u6811\u5256\u5c31\u6bd4\u8f83\u597d\u7528\u4e86,\u56e0\u4e3a\u8fd9\u9053\u9898\u7528\u6811\u5256\u8fd8\u53ef\u4ee5\u652f\u6301\u5404\u79cd\u4fee\u6539. ~~\u6240\u4ee5\u8fd8\u662f\u6765\u4e00\u8d77\u5199\u6811\u5256\u5427.~~\n\n\u8fd9\u9053\u9898\u7684\u6811\u5256\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u5957\u8def\u7684,\u5c31\u76f4\u63a5\u6811\u5256,\u7136\u540e\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u7ebf\u6027\u57fa,\u6700\u540e\u518d\u5199\u4e2a\u5408\u5e76\u5f0f\u7684query\u5c31\u884c\u4e86.\n\n~~2k 80\u884c\u8d85\u7b80\u77ed\u4ee3\u7801~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=20205;\nint ls(int i){return i<<1;}\nint rs(int i){return i<<1|1;}\nvector<int> v[N];\nstruct tree{\n    ll p[65];\n}tr[4*N];\nint fa[N],sz[N],son[N],id[N],dfn[N],top[N];\nll tot,an[N],a[N];\nint n,m,s,t;\nvoid add(tree &f,ll x){//\u7ebf\u6027\u57fa\u6a21\u677f\n    for(int i=60;i>=0;i--){\n        if(!(x&(1ll<<i)))continue;\n        if(!f.p[i]){f.p[i]=x;break;}\n        x^=f.p[i];\n    }return;\n}\ntree merge(tree a,tree b){//\u66b4\u529b\u5408\u5e76\u7ebf\u6027\u57fa\n    for(int i=0;i<=60;i++) if(b.p[i]) add(a,b.p[i]);\n    return a;//\u8fd9\u91cc\u8981\u52a0\u7279\u5224\u4f20\u8fdb\u53bb\u7684\u6570\u4e0d\u4e3a0,\u51cf\u5c0f\u5e38\u6570\n}\nvoid build(int i,int l,int r){\n    if(l==r){\n        add(tr[i],a[l]);return ;\n    }int mid=(l+r)>>1;\n    build(ls(i),l,mid);build(rs(i),mid+1,r);\n    tr[i]=merge(tr[ls(i)],tr[rs(i)]);\n}\ntree query(int i,int l,int r){//\u5408\u5e76\u5f0f\u7684query\n    if(l>=s&&r<=t) return tr[i];\n    int mid=(l+r)>>1;\n    if(mid>=t) return query(ls(i),l,mid);\n    if((mid+1)<=s) return query(rs(i),mid+1,r);\n    return merge(query(ls(i),l,mid),query(rs(i),mid+1,r));\n}\nvoid dfs1(int x,int f){\n    dfn[x]=dfn[f]+1;fa[x]=f;sz[x]=1;\n    for(int i=0;i<v[x].size();i++){\n        int nxt=v[x][i];if(nxt==f) continue;\n        dfs1(nxt,x);sz[x]+=sz[nxt];\n        if(sz[nxt]>sz[son[x]]) son[x]=nxt;\n    }\n}\nvoid dfs2(int x,int f){\n    id[x]=++tot;a[tot]=an[x];top[x]=f;\n    if(!son[x])return;\n    dfs2(son[x],f);\n     for(int i=0;i<v[x].size();i++) {\n        int nxt=v[x][i];\n        if(nxt!=fa[x]&&nxt!=son[x]) dfs2(nxt,nxt); \n    }\n}\nvoid que(int x,int y){\n    tree num=tr[0];ll ans=0;\n    while(top[x]!=top[y]){\n        if(dfn[top[x]]<dfn[top[y]]) swap(x,y);\n        s=id[top[x]],t=id[x];\n        num=merge(num,query(1,1,n));\n        x=fa[top[x]];\n    }\n    if(id[x]>id[y])swap(x,y);\n    s=id[x],t=id[y];\n    num=merge(num,query(1,1,n));\n    for(int i=60;i>=0;i--){//\u6c42\u89e3\u7ebf\u6027\u57fa\n        if(!(ans&(1ll<<i)))ans^=num.p[i];\n    }printf(\"%lld\\n\",ans);\n}\nint main(){ \n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%lld\",&an[i]);\n    for(int i=1,x,y;i<n;i++){\n        scanf(\"%d%d\",&x,&y);\n        v[x].push_back(y),v[y].push_back(x);\n    }\n    dfs1(1,0);dfs2(1,1);build(1,1,n);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d\",&s,&t);que(s,t);\n    }\n}//\u6ca1\u4e86\n```\n\n~~\u5176\u5b9e\u590d\u6742\u5ea6\u80af\u5b9a\u662f\u4e0d\u5bf9\u7684,\u4f46\u8003\u8651\u5230\u5982\u679c\u9898\u76ee\u8981\u6c42\u4fee\u6539\u5c31\u4e0d\u80fd\u500d\u589e,\u770b\u4e0b\u6811\u5256\u89e3\u6cd5\u4e5f\u6ca1\u592a\u5927\u95ee\u9898\u5bf9\u5427~~",
        "postTime": 1592040986,
        "uid": 53852,
        "name": "\u5f26\u5dfb\u3053\u3053\u308d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    },
    {
        "content": "[\u3010bzoj\u6570\u636e\u4e0b\u8f7d\u5730\u5740\u3011](https://lydsy.download/archive/4568.zip)\u4e0d\u8981\u8c22\u6211  \n\u7a9d[\u535a\u5ba2](https://www.cnblogs.com/chhokmah/p/10748907.html)\n\n------\n\u5148\u8bb2\u4e00\u4e0b\u7a9d\u662f\u600e\u4e48\u9519\u7684\u3002\u3002\u3002  \n$MLE$\u662f\u56e0\u4e3a\u6570\u7ec4\u5f00\u5c0f\u4e86\u3002\u3002  \n\n-----\n\u770b\u5230\u5f02\u6216\u548c\u6700\u5927\uff0c\u90a3\u4e48\u5c31\u4f1a\u60f3\u5230\u7528\u7ebf\u6027\u57fa\u3002  \n\u5982\u679c\u4e0d\u4f1a\u7ebf\u6027\u57fa\u7684\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u6211\u7684\u5b66\u4e60\u7b14\u8bb0\uff1a[\u300c\u7ebf\u6027\u57fa\u300d\u5b66\u4e60\u7b14\u8bb0and\u4e71\u53e3\u80e1\u603b\u7ed3](https://www.cnblogs.com/chhokmah/p/10748282.html)\n\n------\n\u4f46\u662f\u8fd9\u4e00\u9053\u9898\u76ee\u9700\u8981\u5408\u5e76\u7ebf\u6027\u57fa\u3002  \n\u5982\u4f55\u5408\u5e76\u7ebf\u6027\u57fa\uff1f  \n\u4e0d\u9700\u8981\u4ec0\u4e48\u82b1\u91cc\u80e1\u54e8\u7684\u64cd\u4f5c\uff0c\u76f4\u63a5\u66b4\u529b\u63d2\u5165\u5c31\u53ef\u4ee5\u4e86\u3002  \n```cpp\nvoid merge(xxj &x, xxj y) {\n\tfor (int i = BIT; ~i; i --) \n\t\tif (y.p[i]) x.ins(y.p[i]);\n}\n```\n\u4ee3\u7801\u4e2d\u7684$x$\u548c$y$\u662f\u4e24\u4e2a\u7ebf\u6027\u57fa\u3002  \n\u539f\u7406\u5c31\u662f\u628a$y$\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u63d2\u5165\u5230$x$\u4e2d\u3002  \n\u7136\u540e\u518d\u5957\u4e00\u4e2a\u500d\u589e\u6c42$LCA$\u5c31\u53ef\u4ee5\u4e86\u3002  \n\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define gc getchar\nusing namespace std;\ntypedef long long ll;\nconst int BIT = 62;\nconst int LOG = 21; \nconst int N = 40005;\ntemplate <typename T> void read(T &x) {\n\tx = 0; T fl = 1; char c = 0;\n\tfor (; c < '0' || c > '9'; c = gc()) \n\t\tif (c == '-') fl = -1;\n\tfor (; c >= '0' && c <= '9'; c = gc()) \n\t\tx = (x << 1) + (x << 3) + (c ^ 48); \n\tx *= fl; \n}\nstruct xxj {\n\tll p[BIT + 2];\n\tvoid clear() { memset(p, 0, sizeof(p)); }\n\tvoid ins(ll x) {\n\t\tfor (int i = BIT; ~i; i --) {\n\t\t\tif ((x >> i) == 0) continue;\n\t\t\tif (!p[i]) { p[i] = x; break; }\n\t\t\tx ^= p[i];\n\t\t}\n\t}\n} g[N][LOG + 2], ans;\nstruct edge {\n\tint to, nt;\n} E[N];\nint fa[N][LOG + 2];\nint n, ecnt, Q;\nint dep[N], H[N];\nvoid add_edge(int u, int v) {\n\tE[++ ecnt] = (edge){v, H[u]};\n\tH[u] = ecnt;\n}\nvoid merge(xxj &x, xxj y) {\n\tfor (int i = BIT; ~i; i --) \n\t\tif (y.p[i]) x.ins(y.p[i]);\n}\nvoid dfs(int u, int ft) {\n\tfa[u][0] = ft; dep[u] = dep[ft] + 1;\n\tfor (int i = 1; i <= LOG; i ++) {\n\t\tfa[u][i] = fa[fa[u][i - 1]][i - 1];\n\t\tg[u][i] = g[u][i - 1];\n\t\tmerge(g[u][i], g[fa[u][i - 1]][i - 1]);\n\t}\n\tfor (int e = H[u]; e; e = E[e].nt) {\n\t\tint v = E[e].to;\n\t\tif (v == fa[u][0]) continue; \n\t\tdfs(v, u);\n\t}\n}\nvoid Lca(int u, int v) {\n\tif (dep[u] < dep[v]) swap(u, v);\n\tfor (int i = LOG; ~i; i --) \n\t\tif (dep[fa[u][i]] >= dep[v]) \n\t\t\tmerge(ans, g[u][i]), u = fa[u][i];\n\tif (u == v) {\n\t\tmerge(ans, g[u][0]);\n\t\treturn;\n\t}\n\tfor (int i = LOG; ~i; i --) {\n\t\tif (fa[u][i] != fa[v][i]) {\n\t\t\tmerge(ans, g[u][i]); \n\t\t\tmerge(ans, g[v][i]); \n\t\t\tu = fa[u][i]; v = fa[v][i]; \n\t\t}\n\t}\n\tmerge(ans, g[u][0]);\n\tmerge(ans, g[v][0]); \n\tmerge(ans, g[fa[u][0]][0]);\n}\nint main() {\n\tread(n); read(Q);\n\tfor (int i = 1; i <= n; i ++) {\n\t\tll x; read(x);\n\t\tg[i][0].ins(x);\n\t}\n\tfor (int i = 1, u, v; i < n; i ++) {\n\t\tread(u); read(v); \n\t\tadd_edge(u, v);\n\t\tadd_edge(v, u);\n\t}\n\tdfs(1, 0);\n\twhile (Q --) {\n\t\tint u, v; read(u); read(v); \n\t\tans.clear();\n\t\tLca(u, v); \n\t\tll res = 0ll;\n\t\tfor (int i = BIT; ~i; i --) \n\t\t\tif ((res ^ ans.p[i]) > res) res ^= ans.p[i];\n\t\tcout << res << endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1555902739,
        "uid": 35567,
        "name": "Ayers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3292 \u3010[SCOI2016]\u5e78\u8fd0\u6570\u5b57\u3011"
    }
]