[
    {
        "content": "\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u8bb0\u5e8f\u5217 $b$ \u4e0b\u6807\u4ece $1$ \u5f00\u59cb\uff0c\u5e76\u7ffb\u8f6c\uff0c\u8fd9\u6837\u53ef\u4ee5\u5316\u4e3a\u6807\u51c6\u7684\u7ebf\u6027\u9012\u63a8\u5f0f\u3002  \n\n\u8003\u8651\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6765\u89e3\u51b3\uff0c\u6b64\u5904\u6211\u4eec\u66f4\u6539\u77e9\u9635\u4e58\u6cd5\u7684\u5b9a\u4e49\uff1a\u5c06\u539f\u672c\u7684\u4e58\u6cd5\u6539\u4e3a\u6309\u4f4d\u4e0e\uff0c\u539f\u672c\u7684\u52a0\u6cd5\u6539\u4e3a\u6309\u4f4d\u6216\u3002\n\n\u90a3\u4e48\u5c31\u80fd\u5f97\u5230\uff1a\n\n$$\\begin{bmatrix} a_{n-1} & a_{n-2} &\\dots &a_{n-k}\\end{bmatrix} \\times \\begin{bmatrix} b_1 &+\\infty &0 & \\dots & 0 \\\\ b_{2} & 0 & +\\infty & \\dots & 0 \\\\b_3  & 0 & 0 & \\dots & 0 \\\\ \\dots & \\dots & \\dots & \\dots & \\dots \\\\ b_{k-1} & 0 & 0 & \\dots & +\\infty\\\\ b_k & 0 & 0 & \\dots & 0\\end{bmatrix}$$\n$$=\\begin{bmatrix} a_n & a_{n-1} &\\dots &a_{n-k+1}\\end{bmatrix}$$\n\n\u8fd9\u91cc\u7684 $+\\infty$ \u6307\u7684\u662f\u4e8c\u8fdb\u5236\u4e2d\u6bcf\u4e00\u4f4d\u90fd\u662f $1$ \u7684\u6570\u3002\n\n\u7136\u540e\u76f4\u63a5\u505a\u5c31\u884c\u4e86\u3002\n\n\uff08\u6c34\u9898\u89e3\u7684\u5c51\uff09\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<bitset>\n#define N 100003\n#define reg register\n#define ull unsigned long long\n#define inf 0xffffffffffffffffull\nusing namespace std;\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    }\n}\n\nstruct matrix{\n    ull a[101][101];\n    int siz;\n\n    inline matrix(int siz=0):siz(siz){ memset(a,0,sizeof(a)); }\n    inline matrix operator * (const matrix& b) const{\n        matrix res = matrix(siz);\n        for(reg int i=0;i!=siz;++i)\n        for(reg int j=0;j!=siz;++j)\n        for(reg int k=0;k!=siz;++k)\n            res.a[i][j] |= a[i][k]&b.a[k][j];\n        return res;    \n    }\n};\n\ninline matrix power(matrix a,int t){\n    matrix res = matrix(a.siz);\n    for(reg int i=0;i!=a.siz;++i) res.a[i][i] = inf;\n    while(t){\n        if(t&1) res = res*a;\n        a = a*a;\n        t >>= 1;\n    }\n    return res;\n}\n\nint n,k;\null a[N],f[103];\nmatrix A;\n\nint main(){\n    ull ans = 0;\n    scanf(\"%d%d\",&n,&k);\n    for(reg int i=0;i<k;++i) scanf(\"%llu\",&a[i]);\n    for(reg int i=1;i<=k;++i) scanf(\"%llu\",&f[i]);\n    if(n<=k){\n        printf(\"%llu\",a[n]);\n        return 0;\n    }\n    reverse(f+1,f+k+1);\n    for(reg int i=0;i!=k;++i) A.a[i][0] = f[i+1];\n    for(reg int i=1;i!=k;++i) A.a[i-1][i] = inf;\n    A.siz = k;\n    A = power(A,n-k+1);\n    for(reg int i=0;i<k;++i)\n        ans |= a[k-i-1]&A.a[i][0];\n    printf(\"%llu\",ans);\n    return 0;\n}\n```",
        "postTime": 1574611133,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5678 \u3010[GZOI2017]\u6cb3\u795e\u3011"
    },
    {
        "content": "**Solution**\n\n\u7ed9\u5b9a\u4e86\u9012\u63a8\u5f0f\uff0c\u8981\u5feb\u901f\u6c42\u9012\u63a8\u5f0f\u7684\u503c\uff0c\u663e\u7136\u60f3\u5230\u77e9\u9635\u5feb\u901f\u5e42\n\n\u6211\u4eec\u5c06\u77e9\u9635\u5feb\u901f\u5e42\u4e2d\u539f\u672c\u7684\u52a0\u6cd5\u5b9a\u4e49\u4e3a\"|\"\u8fd0\u7b97\uff08\u5373\u6309\u4f4d\u6216\uff09\uff0c\u5c06\u4e58\u6cd5\u5b9a\u4e49\u4e3a\"&\"\u8fd0\u7b97\uff08\u5373\u6309\u4f4d\u4e0e\uff09\uff0c\u6839\u636e\u9898\u610f\uff0c\u5199\u51fa\u8f6c\u79fb\u5f0f\uff1a\n$$\n\\left[ \\begin {matrix} A_i & A_{i-1} & A_{i-2} & \\dots & A_{k}\\end {matrix} \\right] = \n\\left[ \\begin {matrix} A_{i-1} & A_{i-2} & A_{i-3} \\dots & A_{k-1}\\end {matrix} \\right] \n\\times \n\\left[ \\begin {matrix} \nb_k \t& maxx \t& 0 \t& \\cdots \t& 0\t\t\\\\\nb_{k-1} & 0 \t& maxx \t& \\cdots \t& 0\t\t\\\\\nb_{k-2} & 0 \t& 0 \t&\\cdots \t& 0\t\t\\\\\n\\vdots \t& \\vdots&\\vdots\t&\\ddots\t\t&\\vdots\t\\\\\nb_{1} \t& 0\t\t& 0 \t&\\cdots\t\t&0\n\\end {matrix} \\right]\n$$\n\u5176\u4e2d$maxx = 2^{63}-1$\uff0c\u540c\u65f6\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c$b$\u6570\u7ec4\u4e0b\u6807\u7edf\u4e00$+1$\n\n\u8f6c\u79fb\u77e9\u9635$Mat1$\uff08\u5c31\u662f\u67ff\u5b50\u91cc\u7684\u6700\u540e\u4e00\u4e2a\u77e9\u9635\uff09\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7b2c$1$\u5217\u7b2c$j$\u884c\u4e3a$b_{k-j+1}$\uff0c\u7b2c$i$\u5217$i+1$\u884c\u4e3a$maxx$\uff0c\u5176\u4f59\u7684\u90fd\u4e3a$0$\n\n\u6839\u636e\u9898\u610f\uff0c\u521d\u59cb\u77e9\u9635\u4e3a\n$$\nMat0 = \\left[ \\begin{matrix}a_k & a_{k-1} & a_{k-2} & \\cdots & a_1 \\end{matrix}\\right]\n$$\n\u540c\u6837\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c$a$\u6570\u7ec4\u4e0b\u6807\u7edf\u4e00$+1$\n\n\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u5c31\u662f$Ans$\u77e9\u9635\u7684$Ans_{1, 1}$\uff0c\u5176\u4e2d$Ans$\u77e9\u9635\u4e3a\uff1a\n$$\nAns = Mat0 \\times Mat1^{n-k+1}\n$$\n\u6ce8\u610f\u9898\u76ee\u4e2d$A$\u6570\u7ec4\u662f\u4ece$0$\u5f00\u59cb\u7f16\u53f7\u7684\uff0c\u6240\u4ee5\u662f$Mat1^{n-k+1}$\u800c\u4e0d\u662f$Mat1^{n-k}$\n\n\u8fd8\u6709\u5c31\u662f\u5f53$n \\leq k$\u7684\u65f6\u5019\u8981\u7279\u5224\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(k^3 \\log n)$\n\n**Code**\n\n```c++\n#include <bits/stdc++.h>\n\n#define N (int) 105\n#define ll long long\n\nusing namespace std;\nll input () {\n\tll x = 0, f = 0;\n\tchar c = getchar ();\n\twhile (c < '0' || c > '9') f = c == '-', c = getchar ();\n\twhile (c >= '0' && c <= '9') x = (x << 1) + (x << 3) + (c ^ 48), c = getchar ();\n\treturn f ? - x : x;\n}\n\nconst ll maxx = (1ull<<63)-1;\n\nint n, k;\nll a[N], b[N];\n\nstruct Matrix { // \u77e9\u9635\n\tint n, m;\n\tll a[N][N];\n\tfriend Matrix operator * (const Matrix & x, const Matrix & y) { // \u5b9a\u4e49\u77e9\u9635\u4e58\u6cd5\n\t\tMatrix ret;\n\t\tret.n = x.n, ret.m = y.m;\n\t\tfor (int i = 1; i <= x.n; i ++) {\n\t\t\tfor (int j = 1; j <= y.m; j ++) {\n\t\t\t\tfor (int k = 1; k <= x.m; k ++) {\n\t\t\t\t\tret.a[i][j] |= x.a[i][k] & y.a[k][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\tMatrix () {\n\t\tn = m = 0;\n\t\tmemset (a, 0, sizeof (a));\n\t}\n} mat0, mat1;\n\nMatrix ksm (Matrix x, int y) { // \u77e9\u9635\u5feb\u901f\u5e42\n\tMatrix ret = x;\n\ty --;\n\twhile (y) {\n\t\tif (y & 1) ret = ret * x;\n\t\tx = x * x;\n\t\ty >>= 1;\n\t}\n\treturn ret;\n}\n\nint main () {\n\tn = input (), k = input ();\n\tfor (int i = 1; i <= k; i ++) a[i] = input ();\n\tfor (int i = 1; i <= k; i ++) b[i] = input ();\n\n\tif (n <= k) { // \u7279\u5224\n\t\tprintf (\"%lld\\n\", a[n]);\n\t\treturn 0;\n\t}\n\n\tmat1.n = mat1.m = k; // \u8f6c\u79fb\u77e9\u9635\n\tfor (int i = 1; i <= k; i ++)\n\t\tmat1.a[i][1] = b[k-i+1];\n\tfor (int i = 1; i < k; i ++)\n\t\tmat1.a[i][i+1] = maxx;\n\tmat0.n = 1, mat0.m = k; // \u521d\u59cb\u77e9\u9635\n\tfor (int i = 1; i <= k; i ++)\n\t\tmat0.a[1][i] = a[k-i+1];\n\t\n\tMatrix ans = mat0 * ksm (mat1, n-k+1);\n\t\n\tprintf (\"%lld\\n\", ans.a[1][1]);\n\t\n\treturn 0;\n}\n\n```\n\n**Conclusion**\n\n1 \u52a0\u901f\u9012\u63a8\u5f0f\u2014\u2014\u77e9\u9635\u5feb\u901f\u5e42\n\n2 \u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\uff08\u5982\u4e0b\u6807\u4ece$0$\u5f00\u59cb\u4e4b\u7c7b\u7684\uff09",
        "postTime": 1605536557,
        "uid": 74333,
        "name": "BDFCL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5678"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\n\n- \u77e9\u9635\u4e58\u6cd5\n\n- \u4f4d\u8fd0\u7b97\u4ee5\u53ca\u77e9\u9635\u8fd0\u7b97\u5f8b\u7684\u8f83\u6df1\u7406\u89e3\n\n### \u601d\u8def\n\n\u6839\u636e\u8fd9\u4e2a\u8fd0\u7b97\u6cd5\u5219\uff0c\u6211\u4eec\u80af\u5b9a\u77e5\u9053\u666e\u901a\u7684\u77e9\u9635\u4e58\u6cd5\u662f\u4e0d\u884c\u7684\uff0c\u6240\u4ee5\u5c31\u8981\u7a0d\u5fae\u628a\u8fd0\u7b97\u6539\u826f\u4e00\u4e0b\u3002\n\n```cpp\nMatrix operator*(const Matrix &b)const\n\t{\n\t\tMatrix res;\n\t\tfor(int i=1;i<=100;i++)\n\t\t\tfor(int j=1;j<=100;j++)\n\t\t\t\tfor(int k=1;k<=100;k++)\n\t\t\t\t\tres.a[i][j]=(res.a[i][j]|(a[i][k]&b.a[k][j]));\t\n\t\treturn res;\n\t}\n```\n\n\u8fd9\u6837\u5c31\u7b26\u5408 $A_n$ \u8ba1\u7b97\u7684\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e86\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6784\u9020\u51fa\u521d\u59cb\u77e9\u9635\uff1a\n\n$$A=\\begin{bmatrix} A_{k-1}& A_{k-1}&\\cdots&A_{2}&A_{1}&A_{0}\\end{bmatrix}$$\n\n$$B=\\begin{bmatrix} b_{k-1}&-1&0&\\cdots&\\cdots&0\\\\b_{k-2}&0&-1&\\cdots&\\cdots&0\\\\\\vdots& \\vdots & \\vdots & \\vdots & \\ddots & \\vdots\n\\\\b_0&0&0&\\cdots&\\cdots&0\\end{bmatrix}$$\n\n\u53ef\u4ee5\u53d1\u73b0\u8bbe\u7f6e\u7684 $B$ \u77e9\u9635\u548c\u539f\u6765\u7684\u6709\u6240\u4e0d\u540c\uff0c\u56e0\u4e3a $\\otimes$ \u7684\u7f18\u6545\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e00\u4e9b\u503c\u5f97\u590d\u5236\u4e5f\u4f1a\u6709\u6240\u6539\u53d8\uff0c\u53d8\u4e3a $-1$ \u4e4b\u540e\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u4f1a\u53d8\u6210 $11111_{(2)}$\uff0c\u6240\u4ee5\u53ef\u4ee5\u590d\u5236\u4efb\u4f55\u7684\u6570\u6570\u3002\n\n\u5176\u4ed6\u7684\u8fc7\u7a0b\u548c\u6b63\u5e38\u7684\u77e9\u9635\u5feb\u901f\u5e42\u57fa\u672c\u4e00\u6837\uff0c\u7136\u540e\u672c\u9898\u5c31\u5f88\u5feb\u4e50\u5730\u5b8c\u7ed3\u4e86\uff01\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<algorithm>\n#include<map>\n#define int long long \nusing namespace std; \nconst int N=1e2+9;\nstruct Matrix{\n\tint a[N][N];\n\tMatrix() {memset(a,0,sizeof(a));}\n\tMatrix operator*(const Matrix &b)const\n\t{\n\t\tMatrix res;\n\t\tfor(int i=1;i<=100;i++)\n\t\t\tfor(int j=1;j<=100;j++)\n\t\t\t\tfor(int k=1;k<=100;k++)\n\t\t\t\t\tres.a[i][j]=(res.a[i][j]|(a[i][k]&b.a[k][j]));\t\n\t\treturn res;\n\t}\n}ans,base;\nint n,k;\nint A[N];\nint B[N];\nint read()\n{\n\tint f=1,x=0;\n\tchar s=getchar();\n\twhile(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9'){x=(x<<1)+(x<<3)+(s^'0');s=getchar();}\n\treturn f*x;\n}\nvoid quick(int p)\n{\n\twhile(p)\n\t{\n\t\tif(p&1) ans=ans*base;\n\t\tbase=base*base;\n\t\tp>>=1;\n\t}\n}\nvoid Prepare()\n{\n\tfor(int i=0;i<k;i++)\n\t\tans.a[1][k-i]=A[i];\n\tfor(int i=0;i<k;i++)\n\t\tbase.a[k-i][1]=B[i];\n\tfor(int i=2;i<=k;i++)\n\t\tbase.a[i-1][i]=-1;//\u76f4\u63a5-1=1111111111\u83b7\u5f97\u539f\u6570 \n}\nvoid Work()\n{\n\tif(n<k)\n\t{\n\t\tcout<<A[n]<<endl;\n\t\treturn;\n\t}\n\telse\n\t{\n\t\tn-=(k-1);\n\t\tquick(n);\n\t\tcout<<ans.a[1][1]<<endl;\t\n\t}\n}\nsigned main()\n{\n\tn=read();\n\tk=read();\n\tfor(int i=0;i<k;i++)\n\t\tA[i]=read();\n\tfor(int i=0;i<k;i++)\n\t\tB[i]=read();\n\tPrepare();\n\tWork();\n\t//for(int i=1;i<=k;i++)\n\t//\tcout<<ans.a[1][i]<<\" \";\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1626082971,
        "uid": 230804,
        "name": "Durancer",
        "ccfLevel": 4,
        "title": "\u3010\u9898\u89e3\u3011P5678 [GZOI2017]\u6cb3\u795e"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u5355\u7eaf\u8003\u5bdf\u7684\u5bf9\u77e9\u9635\u7684\u7406\u89e3\n\n\u5728\u5e7f\u4e49\u7684\u77e9\u9635\u8fd0\u7b97\u4e2d\u53ea\u8981\u4f7f\u5176\u6ee1\u8db3\u7ed3\u5408\u5f8b\u5c31\u80fd\u50cf\u666e\u901a\u7684\u77e9\u9635\u8fd0\u7b97\u4e00\u6837\u64cd\u4f5c\n\n\uff08\u5b9e\u9645\u4e0a\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e1c\u897f\u5f88\u60f3NOIonline\u7684\u67d0\u9053\u9898\u7684\u77e9\u9635\u7684\u4e58\u6cd5\u548c\u52a0\u6cd5\u7684\u5b9a\u4e49\u4e00\u6837\n\n\u6211\u4eec\u8003\u8651\u8f6c\u79fb\u77e9\u9635\u548b\u6784\u5efa\n\n\u5b9e\u9645\u4e0a\u6211\u4eec\u8981\u4f7f\u5f97\u5728\u8f6c\u79fb\u77e9\u9635\u4e2d\u7684\u524d $k-1$ \u4e2a \u6ee1\u8db3$A_n-1 \\to  A_n$\uff0c\u6700\u540e\u4e00\u4e2a\u6ee1\u8db3\u6211\u4eec\u7684\u9012\u63a8\u5173\u7cfb\uff08\u5176\u5b9e\u5c31\u548c\u4e00\u822c\u7684\u4e00\u6837\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u53ea\u8003\u8651\u4e00\u4e2a\u4e1c\u897f\uff0c\u5c31\u662f\u8bf4\u627e\u5230\u52a0\u6cd5\u548c\u4e58\u6cd5\u7684\u5355\u4f4d\u5143\n\n\u5b9e\u9645\u4e0a\u8fd9\u91cc\u7684\u52a0\u6cd5\u7684\u5355\u4f4d\u5143\u5c31\u662f $-1$ ,\u4e58\u6cd5\u7684\u5c31\u662f $0$\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u5c06\n$$\nA=\n\\left\\{\n\\begin{matrix}\n   0 & 1 & 0 & \\cdots & 0 \\\\\n   0 & 0 & 1 & \\cdots & 0 \\\\\n   \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n   0 & 0 & 0 & \\cdots & 1 \\\\\n   a_{1} & a_{2} & a_{3} & \\cdots & a_{n}\n\\end{matrix}\n\\right\\}\n$$\n\u53d8\u4e3a\n$$\nA=\n\\left\\{\n\\begin{matrix}\n   0 & -1 & 0 & \\cdots & 0 \\\\\n   0 & 0 & -1 & \\cdots & 0 \\\\\n   \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n   0 & 0 & 0 & \\cdots & -1 \\\\\n   a_{1} & a_{2} & a_{3} & \\cdots & a_{n}\n\\end{matrix}\n\\right\\}\n$$\n\n\u590d\u6742\u5ea6\u5c31\u662f$O(k^3logn)$\n\ncode:\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nint n,k;\n\nstruct M\n{\n  long long s[110][110],r,c;\n  void clear()\n  {\n    for(int i=1;i<=100;i++) for(int j=1;j<=100;j++) s[i][j]=0;\n  }\n}ans,Ye;\n\nM operator * (const M &x,const M &y)\n{\n  M now;\n  now.clear();\n  now.r=x.r;\n  now.c=y.c;\n  for(int k=1;k<=x.c;k++)\n  {\n    for(int i=1;i<=x.r;i++)\n    {\n      for(int j=1;j<=y.c;j++)\n      {\n        now.s[i][j]|=x.s[i][k]&y.s[k][j];\n      }\n    }\n  }\n  return now;\n}\n\nM ksm(M a,int b)\n{\n  M ans=a;\n  b--;\n  while(b)\n  {\n    if(b&1) ans=ans*a;\n    a=a*a;\n    b>>=1;\n  }\n  return ans;\n}\n\nint main()\n{\n  scanf(\"%d%d\",&n,&k);\n  ans.clear();\n  ans.r=1;\n  ans.c=k;\n  for(int i=1;i<=k;i++) scanf(\"%lld\",&ans.s[1][i]);\n  Ye.clear();\n  Ye.r=k;\n  Ye.c=k;\n  for(int i=1;i<=k;i++)\n  {\n    long long now;\n    scanf(\"%lld\",&now);\n    Ye.s[i][k]=now;\n  }\n  for(int i=1;i<=k;i++)\n  {\n    for(int j=1;j<=k;j++)\n    {\n      if(i==j+1) Ye.s[i][j]=-1;\n    }\n  }\n  if(n<=k)\n  {\n    printf(\"%lld\",ans.s[1][n]);\n  }\n  else\n  {\n    M now=ans*ksm(Ye,n-k+1);\n    printf(\"%lld\",now.s[1][k]);\n  }\n}\n```",
        "postTime": 1606136585,
        "uid": 62573,
        "name": "zzqDeco",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5678 \u3010[GZOI2017]\u6cb3\u795e\u3011"
    },
    {
        "content": "### \u672c\u9898\u662f\u5bf9 \u77e9\u9635\u6982\u5ff5\u7406\u89e3 \u7684\u8003\u5bdf\n\n### _\u524d\u7f6e\u8bb2\u89e3_ \n\n\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u77e9\u9635\u7684\u5b9a\u4e49\u5f0f\n\n### $ \\sum_{k = 1}^m A_{i, k} \\times B_{k, j} $\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6839\u636e\u9898\u610f\n\u53d1\u73b0\u8fd9\u9053\u9898\u76ee\u5b9e\u8d28\u4e0a\u662f\n### \u5c06 \u6c42\u548c \u53d8\u6210 \u6216 |\n### \u5c06 \u4e58\u6cd5 \u53d8\u6210 \u4e0e &\n\n\u6545\u53ea\u8981\u5c06\u77e9\u9635\u4e58\u6cd5\u7684\u677f\u5b50\u7684\u8fd0\u7b97\u7b26\u53f7\u6539\u4e00\u4e0b\u5c31\u9614\u4ee5\u4e86\u3002\n\u5373\n\n### $ \\bigoplus_{k = 1}^m A_{i, k} \\otimes B_{k, j} $\n\n###  _\u89e3\u9898\u601d\u8def_\n\n\u5f97\u5230\u4e0a\u9762\u67ff\u5b50\u4e4b\u540e\u6211\u4eec\u5bf9\u8f6c\u79fb\u77e9\u9635\u8fdb\u884c\u6784\u9020\uff0c\u56e0\u4e3a\u6bcf\u6b21\u8f6c\u79fb\u9700\u8981\u7528\u5230 k \u4e2a\u503c\n\n\u6240\u4ee5\u72b6\u6001\u77e9\u9635\u5927\u5c0f 1 $\\times$ k, \u8f6c\u79fb\u77e9\u9635\u5927\u5c0f k $\\times$ k\n\n\u6a21\u62df\u9898\u610f\n\n\u6613\u6784\u9020\u51fa\u77e9\u9635\n\n### \u72b6\u6001\u77e9\u9635\n\n$\\begin{bmatrix}\nA_n & A_{n - 1} & \\cdots & A_{n - k + 1}\\\\\n\\end{bmatrix}$\n\n### \u8f6c\u79fb\u77e9\u9635\n\n$\\begin{bmatrix}\nb_{n - 1} & INF &\\cdots     &\\cdots & 0 \\\\\nb_{n-2} &0 & INF &\\cdots & 0   \\\\   \n\\vdots &0 &0 & INF & \\cdots \\\\\nb_{n - k + 1}  &\\cdots    & \\cdots & \\cdots&INF\\\\\nb_{n - k }  &\\cdots &\\cdots   & \\cdots & 0\n\\end{bmatrix} $\n\n\u5176\u4e2d INF & a \uff08a < $2^{63}$\uff09\u7684\u503c\u90fd\u4e3a a \n\nINF \u53d6 (1 << 63) - 1 \u5c31\u884c\u4e86\n\n\u4e0b\u9762\u5c31\u662f\u6b63\u5e38\u7684\u77e9\u9635\u5feb\u901f\u5e42\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n### _code_\n\n```cpp\n#include<bits/stdc++.h>\n#define debug(x) cerr << #x << \" = \" << x <<endl;\n#define rep(i, a, b) for(int i = (a); i <= (b); ++ i)\n#define INF ((1ull << 63) - 1) \nusing namespace std;\ntemplate<typename Tp> void Cmax(Tp &x, Tp y) { x = max(x, y); }\ntemplate<typename Tp> void Csum(Tp &x, Tp y) { x = x + y; }\ntemplate<typename Tp>\nvoid read(Tp &x){\n\tx = 0; int f = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)){ if(ch == '-') f = -1; ch = getchar(); }\n\twhile(isdigit(ch)){ x = x * 10 + ch - 48; ch = getchar(); }\n\tx = x * f;\n}\ntypedef unsigned long long ULL;\ntypedef double doub;\nconst int N = 130;\nint n, k;\nULL f[N], C[N][N];\nvoid mul(){\n\tULL ff[N];\n\tmemset(ff, 0, sizeof ff);\n\trep(i, 0, k - 1)\n\t\trep(j, 0, k - 1)\n\t\t\tff[i] |= f[j] & C[j][i]; // \u5b9e\u8d28\u4e0a\u6539\u7684 \u53ea\u6709\u8fd9\u91cc \n\tmemcpy(f, ff, sizeof f);\n}\nvoid mulself(){\n\tULL ff[N][N];\n\tmemset(ff, 0, sizeof ff);\n\trep(i, 0, k - 1)\n\t\trep(j, 0, k - 1)\n\t\t\trep(t, 0, k - 1)\n\t\t\t\tff[i][j] |= C[i][t] & C[t][j]; // \u6539\u7684\u53ea \u6709\u8fd9\u91cc \n\tmemcpy(C, ff, sizeof C);\n}\nsigned main(){\n\tread(n); read(k);\n\tfor(int i = k - 1; i >= 0; --i)\n\t\tread(f[i]);\n\tfor(int i = k - 1; i >= 0; --i)\n\t\tread(C[i][0]);\n\trep(i, 0, k - 1)\n\t\tC[i][i + 1] = INF; \n\tif(k >= n){\n\t\tprintf(\"%llu\\n\", f[k - n]);\n\t\treturn 0;\n\t}\n\tn = n - k + 1;\n\twhile(n){\n\t\tif(n & 1) \n\t\t\tmul();\n\t\tn >>= 1;\n\t\tmulself();\n\t}\n\tprintf(\"%llu\\n\", f[0]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1605520074,
        "uid": 291139,
        "name": "TinG\u96ea\u4e4b\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5678 \u3010[GZOI2017]\u6cb3\u795e\u3011"
    }
]