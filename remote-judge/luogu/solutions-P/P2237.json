[
    {
        "content": "\u5148\u628a\u5b57\u5178\u6392\u4e2a\u5e8f\uff0c\u4e4b\u540elower\\_bound \u4e0b\u524d\u7f00\u7684\u4f4d\u7f6e\uff0c\u52a0\u4e0ak\u5c31\u597d\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\npair<string ,int> a[90030];\nbool match(string x,string y){\n    if (y.length()>x.length()) return 0;\n    return x.substr(0,y.size())==y;\n}\nint main(){\n    int w,n;\n    cin>>w>>n;\n    for (int i=0;i<w;i++){\n        cin>>a[i].first;\n        a[i].second=i;\n    }\n    sort(a,a+w);\n    while (n--){\n        string pre;\n        int k;\n        cin>>k>>pre;\n        int pos=k-1+lower_bound(a,a+w,make_pair(pre,0))-a;\n        if (pos>=w || !match(a[pos].first,pre)) {\n            cout<<\"-1\\n\";\n            continue;\n        }\n        cout<<a[pos].second+1<<'\\n';\n    }\n    return 0;\n}\n```",
        "postTime": 1475040374,
        "uid": 775,
        "name": "Expecto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2237 \u3010[USACO14FEB]\u81ea\u52a8\u5b8c\u6210Auto-complete\u3011"
    },
    {
        "content": "\u672c\u9898\u601d\u8def\u5f88\u7b80\u5355\uff1a\u6392\u5e8f$O(m log m)$+\u67e5\u627e$O(nlogm)$=$O((n+m)log m)$\n\n\u6781\u9650\u6570\u636e$O((n+m)logm)=O(31000\u00d716)\u2248O(500000)$\n\n1. \u6309\u5b57\u5178\u5e8f\u5347\u5e8f\u6392\u5217\uff08\u964d\u5e8f\u5f53\u7136\u4e5f\u53ef\u4ee5\uff09\n2. \u5728$a$\u6570\u7ec4\u4e2d\u4e8c\u5206\u67e5\u627e\u8bfb\u5165\u7684\u524d\u7f00\n3. \u5411\u5de6\u548c\u5411\u53f3\u5bfb\u627e\uff0c\u786e\u5b9a\u533a\u95f4$[l,r]$\n4. \u8f93\u51fa\u7b54\u6848\n- \u82e5$r-l+1<k$\uff0c\u5373\u4ee5\u8be5\u5b57\u7b26\u4e32\u4e3a\u524d\u7f00\u7684\u5143\u7d20\u4e0d\u8db3$k$\u4e2a\uff0c\u8f93\u51fa$-1$\u65e0\u89e3\n- \u82e5$r-l+1>=k$\uff0c\u5219\u8f93\u51fa\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7b2c$k$\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u5373$a[l+k-1]$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tstring s;\n\tint num;\n}a[30010];\nint n,m,k;\nstring s;\n\nbool cmp(node x,node y)\n{\n\treturn x.s<y.s;\n}\nstring getstring(string s,int begin,int len)//\u622a\u53d6\u5b57\u7b26\u4e32\n{\n\tstring tmp;\n\tfor(int i=begin;i<begin+len;i++)\n\t\ttmp+=s[i];\n\treturn tmp;\n}\nint erfen(string t)//\u4e8c\u5206\u67e5\u627e\n{\n\tint l=1,r=n;\n\twhile(l<r)\n\t{\n\t\tint mid=l+r+1>>1;\n\t\tstring qwq=getstring(a[mid].s,0,t.length());\n\t\tif(qwq==t)return mid;\n\t\telse if(qwq<t)l=mid+1;\n\t\telse r=mid-1;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)cin>>a[i].s,a[i].num=i;\n\tsort(a+1,a+1+n,cmp);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>k>>s;\n\t\tint point=erfen(s);\n\t\tint l,r;\n\t\tl=r=point;\n\t\twhile(getstring(a[l-1].s,0,s.length())==s)l--;//\u5de6\u533a\u95f4\n\t\twhile(getstring(a[r+1].s,0,s.length())==s)r++;//\u53f3\u533a\u95f4\n\t\tif(r-l+1<k)printf(\"-1\\n\");\n\t\telse printf(\"%d\\n\",a[l+k-1].num);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571802858,
        "uid": 109898,
        "name": "Zhou_SY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2237 \u3010[USACO14FEB]\u81ea\u52a8\u5b8c\u6210Auto-complete\u3011"
    },
    {
        "content": "\u770b\u5230dalao\u4eec\u7684\u5404\u79cd\u4e8c\u5206\u3001\u5b57\u5178\u6811\u7b97\u6cd5\uff0c\u53ea\u4f1a\u66b4\u529b\u7684\u6211\u53ea\u80fd\u8eb2\u5728\u89d2\u843d\u91cc\u745f\u745f\u53d1\u6296~\n\n\u6211\u5728\u8fd9\u91cc\u5c31\u63d0\u4f9b\u4e00\u79cd\u4e0d\u9700\u8981o2\u5c31\u53ef\u4ee5AC\u7684\u66b4\u529b\u7b97\u6cd5\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8bfb\u5165\u540e\u6392\u597d\u5e8f\uff0c\u7136\u540e\u9884\u5904\u7406\u51fa\u4ee5\u2018a\u2019~\u2018z\u2019\u6bcf\u4e2a\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd\u7684\u8d77\u6b62\u5e8f\u53f7\uff08\u8fd9\u662f\u4e3b\u8981\u7684\u4f18\u5316\u624b\u6bb5\uff09\uff0c\u518d\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u4e32\u90fd\u904d\u5386\u4e00\u904d\uff0c\u904d\u5386\u5230\u7b2ck\u4e2a\u5c31\u8f93\u51fa\u7f16\u53f7\uff0c\u6ca1\u627e\u5230\u5c31\u8f93\u51fa-1\u3002\n\n\u4e0b\u9762\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h> \nusing namespace std;\nint w,n,k;\nstring s;\nstruct node\n{\n\tint id,l,r;\n\tstring st;\n}a[30004];\ninline int read()//\u5feb\u8bfb \n{\n\tint f=1;\n\tchar c;\n\twhile ((c=getchar())<'0'||c>'9')\n\t\tif (c=='-') f=-1;\n\tint x=c-'0';\n\twhile ((c=getchar())>='0'&&c<='9')\n\t\tx=x*10+c-'0';\n\treturn x*f;\n}\ninline bool cmp(node x,node y)\n{\n\treturn x.st<y.st;\n}\ninline int f()\n{\n    int l=s.size(),t=0;\n    for (int i=a[s[0]-'a'].l;i<=a[s[0]-'a'].r;i++)//\u76f4\u63a5\u4ece\u5f00\u59cb\u7f16\u53f7\u5faa\u73af\u5230\u7ed3\u675f\u7f16\u53f7 \n    {\n      \tint j1=0,j2=0;\n      \twhile (1)//\u9010\u4e2a\u5b57\u7b26\u6bd4\u8f83\uff0c\u5e94\u8be5\u6bd4substr\u5feb\uff08\u7528substr\u5728\u6d1b\u8c37\u4e0a\u53ef\u4ee5\u8fc7\uff0c\u5176\u5b83OJ\u4f1a\u8d85\u65f6\uff09\n      \t{\n      \t\tif (j2==l)//\u5982\u679c\u662f\u524d\u7f00\u5c31\u7d2f\u52a0 \n\t\t\t{\n\t\t\t\tt++;\n\t\t\t\tbreak;\t\n\t\t\t} \n      \t\tif (a[i].st[j1]!=s[j2]) break;//\u5f53\u6709\u4e00\u4e2a\u5b57\u7b26\u4e0d\u76f8\u540c\u5c31\u53ef\u4ee5\u9000\u51fa \n      \t\tj1++; j2++;\n\t\t}\n\t\tif (t>0&&j2<l) return -1;//\u867d\u7136\u627e\u5230\u4e86\u76f8\u540c\u524d\u7f00\uff0c\u4f46\u6ca1\u6709k\u4e2a \n\t\tif (t==k) return a[i].id;//\u5982\u679c\u6709\u7b2ck\u4e2a \n    }\n    return -1;\n}\nint main()\n{\n    w=read(); n=read();\n    for (int i=1;i<=w;i++)\n    {\n        cin>>a[i].st;\n        a[i].id=i;//\u8bb0\u5f55\u7f16\u53f7 \n    }\n    sort(a+1,a+1+w,cmp);//\u6392\u5e8f \n    char bj='z'+1;\n    a[w+1].st[0]='z'+1;//\u6ce8\u610f\u8981\u5230w+1\uff0c\u8fd9\u6837\u6700\u540e\u4e00\u4e2a\u5f00\u5934\u5b57\u6bcd\u7684\u7ed3\u675f\u5e8f\u53f7\u624d\u8bb0\u5f97\u4f4f\n    for (int i=1;i<=w+1;i++)//\u8bb0\u5f55\u6bcf\u79cd\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd\u7684\u8d77\u6b62\u5e8f\u53f7 \n    \tif (bj!=a[i].st[0])\n    \t{\n    \t\ta[bj-'a'].r=i-1;\n    \t\tbj=a[i].st[0];\n    \t\ta[bj-'a'].l=i;\n\t\t}\n  \tfor (int i=1;i<=n;i++) \n    {\n        k=read();\n        cin>>s;\n        printf(\"%d\\n\",f());\n        //\u67e5\u627e\u8be2\u95ee\u4e32 \n    }\n    return 0;\n}\n```\n\u6700\u540e\u5410\u69fd\u4e00\u53e5\uff0c\u8fd9\u9898\u7684\u6570\u636e\u662f\u771f\u7684\u6c34\uff0c\u4e00\u5f00\u59cb\u7528\u7684substr\u5728\u6d1b\u8c37\u4e0a\u8fc7\u4e86\uff0c\u5728\u522b\u7684OJ\u4e0aT\u4e86\u4e0d\u77e5\u9053\u591a\u5c11\u6b21\uff08\u4e5f\u8bb8\u662f\u6211\u592a\u5f31\u4e86\uff0c\u4e0d\u4f1a\u7528substr\uff09\uff0c\u6700\u540e\u624d\u60f3\u5230\u9010\u4e2a\u5b57\u7b26\u6bd4\u8f83\uff0c\u8fc7\u4e86\u6240\u6709\u70b9\u3002",
        "postTime": 1566118915,
        "uid": 32315,
        "name": "\u4e00\u53ea\u91ce\u751f\u849f\u84bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2237 \u3010[USACO14FEB]\u81ea\u52a8\u5b8c\u6210Auto-complete\u3011"
    },
    {
        "content": "## \u4e0d\u8bba\u600e\u6837\uff0c\u80fdAC\u9898\u76ee\u7684\u90fd\u662f\u597d\u65b9\u6cd5\uff01\n\n\u8fd9\u9053\u9898\u76ee\u7684\u505a\u6cd5\u53ef\u8c13\u591a\u79cd\u591a\u6837\uff0c\u6027\u80fd\u4e5f\u5404\u4e0d\u76f8\u540c\u3002\n\n\u8fd9\u91cc\u53ea\u8bb2\u4e00\u4e9b\u7b80\u5355\u7684~~\u5b57\u5178\u6811\u4ec0\u4e48\u7684\u4e0d\u4f1a\u8bb2\u7684\u770b\u4ed6\u4eba\u9898\u89e3\u5427~~\u3002\n\n _\u53e6\u5916\uff0c\u8fd9\u9053\u9898\u76ee\u8bc4\u84dd\u9898\u6015\u4e0d\u662f\u6076\u610f\u8bc4\u5206\u8bc4\u9ad8\u4e86\uff1f_ \n\n------------\n\n### 1.\u7384\u5b66\u66b4\u529b\n\n\u5c31\u662f\u6392\u5e8f\u4e4b\u540e\uff0c\u5728\u904d\u5386\u4e00\u904d\u5b57\u7b26\u4e32\uff0c\u904d\u5386\u5230\u7b2c$k$\u4e2a\u7b26\u5408\u7684\u5c31\u8f93\u51fa\uff0c\u5426\u5219\u904d\u5386\u5b8c\u6ca1\u8f93\u51fa\u5c31$-1$\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nw)$**\uff08\u8981\u52a0\u4e0asubstr()\u7684\u590d\u6742\u5ea6~~\u5927\u5bb6\u81ea\u5df1\u7b97\u5427\u6211\u4e0d\u4f1a~~\uff09\n\n\u663e\u7136\u66b4\u529b\u4f1a\u8d85\u65f6\uff0c\u4f46\u5f00\u4e86O2\u5c31\u6ca1\u6709\uff08\u7384\u5b66\uff09\u3002\n\n\nO2\u524d\uff1a![](https://cdn.luogu.com.cn/upload/pic/55379.png)\n\nO2\u540e\uff1a![](https://cdn.luogu.com.cn/upload/pic/55380.png)\n\n\u7a0b\u5e8f\u7b80\u5355\u6613\u61c2\uff0c\u6ce8\u91ca\u4e0d\u4f1a\u592a\u591a\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\nusing namespace std;\n\nconst int MAXN=100005;\nint w,n;\nstruct dictionary\n{\n\tstring st;\n\tint id;\n\tbool operator<(const dictionary& a)const\n\t{\n\t\treturn st<a.st;\n\t}//\u76f8\u5f53\u4e8esort\u7684cmp\u51fd\u6570\n}a[MAXN];\nstring s;\nint k;\n\nbool find(const string s)\n{\n\tconst int len=s.size();\n\tint t=0;\n\tfor(register int i=1;i<=w;++i)//register\u4f18\u5316\u5e38\u6570\n\t{\n\t\tif(a[i].st.substr(0,len)==s)//\u5f88\u66b4\u529b\u4e86\uff0c\u901a\u4fd7\u6613\u61c2\n\t\t t++;\n\t\tif(t==k)//\u627e\u5230\u7b2ck\u4e2a\u5c31\u8f93\u51fa\n\t\t{\n\t\t\tprintf(\"%d\\n\",a[i].id);\n\t\t\treturn true;\n\t\t} \n\t}\n\tprintf(\"-1\\n\");//\u5168\u90e8\u627e\u5b8c\u8fd8\u6ca1\u6709\u5c31\u4e0d\u5b58\u5728\n\treturn false;\n}\n\nvoid input(void)\n{\n\tcin>>w>>n;\n\tfor(int i=1;i<=w;i++)\n\t{\n\t\ta[i].id=i;\n\t\tcin>>a[i].st;\n\t}\n\tsort(a+1,a+1+w);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&k);\n\t\tcin>>s;\n\t\tfind(s);\n\t}\n}\n\nint main()\n{\n\tinput();\n\treturn 0;\n}\n```\n\n\n------------\n\n### 2.\u4e8c\u5206\u67e5\u627e\n\n\u65e2\u7136\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u65f6\u95f4\u5f88\u4e0d\u4fdd\u9669\uff0c\u90a3\u4e48\u81ea\u7136\u800c\u7136\u4f1a\u60f3\u5230\uff0c\u90fd\u6392\u5e8f\u4e86\uff0c\u5c31\u4e8c\u5206\u5427\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(m\\ logn)$**\u3002\u7edd\u5bf9\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n\u4e8c\u5206\u5f53\u7136\u53ef\u4ee5\u624b\u6253\uff0c\u6ce8\u610f\u533a\u5206\u4e0a\u754c\u4e0b\u754c\u5c31\u884c\u3002\u5f53\u7136\u4e3a\u4e86\u51cf\u5c11\u7801\u91cf\uff0c\u4f7f\u7528`lower_bound()`\u3002\n\n\u5982\u679c\u5bf9`lower_bound()`\u4e0d\u719f\u7684\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u7ed3\u6784\u4f53\uff0c\u6709\u51e0\u79cd\u65b9\u6cd5\u3002\n\n**\u7b2c\u4e00\u79cd**\uff1a\u518d\u5f00\u4e00\u4e2astring\u6570\u7ec4\uff0c\u65b9\u4fbf\u6211\u4eec\u4e8c\u5206\uff0c\u907f\u5f00\u4e86\u7ed3\u6784\u4f53\uff0c\u6ce8\u610f\u8fd9\u4e2astring\u6570\u7ec4\u4e5f\u8981\u6392\u5e8f\u3002\n\n**\u7b2c\u4e8c\u79cd**\uff1a\u4f7f\u7528`pair<>`\uff0c\u56e0\u4e3a\u5b83\u662f\u9ed8\u8ba4\u4f18\u5148\u7ea7\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u820d\u5f03\u7ed3\u6784\u4f53\uff0c\u4f7f\u7528`pair<string,int>`\u3002\n\n**\u7b2c\u4e09\u79cd**\uff1a\u786c\u8981\u7528\u7ed3\u6784\u4f53\u7684\u8bdd\uff0c\u90a3\u5c31**\u91cd\u8f7d\u8fd0\u7b97\u7b26**\u5e76\u5199\u4e00\u4e2a**\u6784\u9020\u51fd\u6570**\uff0c\u56e0\u4e3a`lower_bound(begin,end,key)`\u4e09\u4e2a\u53c2\u6570\u4e2d\u7684`key`\u662f\u8981\u8ddf\u6570\u7ec4\u4e00\u4e2a\u7c7b\u578b\u7684\uff0c\u5e76\u4e14\u8fdb\u884c\u6bd4\u8f83\u3002\u5f53\u7136C++11\u53ef\u4ee5\u53c2\u6570\u5217\u8868\u521d\u59cb\u5316\uff0c\u907f\u5f00\u6784\u9020\u51fd\u6570\u3002\uff08\u6b64\u65b9\u6cd5\u8f83\u4e3a\u9ebb\u70e6\uff09\n\n\u6ce8\u610f\u4e09\u79cd\u65b9\u6cd5\u7801\u91cf\u548c\u8fd0\u884c\u5185\u5b58\u90fd\u6709\u6bd4\u8f83\u5927\u4e0d\u540c\u3002\n\n\u8bb2\u5b8c\u4e86\u4e8c\u5206\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u627e\u7b2c$k$\u4e2a\u5462\uff1f\n\n\u56e0\u4e3a`lower_bound()`\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u503c\u7684\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u76f4\u63a5\u5f80\u540e\u79fb\u52a8$k$\u4e2a\u5e76\u9a8c\u8bc1\u662f\u5426\u7b26\u5408\u3002\u4e0d\u7b26\u5408\u76f4\u63a5\u8f93\u51fa$-1$\u3002\n\n**\u65b9\u6cd51**\u7528\u4e00\u4e2astring\u6570\u7ec4\u7684\u7a0b\u5e8f\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<string>\n#include<cstdio>\nusing namespace std;\n\nconst int MAXN=30005;\nint n,m;\nstruct dictionary\n{\n    string st;\n    int id;\n    bool operator<(const dictionary& a)const\n    {\n    \treturn st<a.st;\n    }\n}word[MAXN];\nstring tmp[MAXN];//\u5c31\u662fword\u6570\u7ec4\u7684st\n\nvoid input(void)\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++) \n    {\n        cin>>word[i].st;\n        tmp[i]=word[i].st;\n        word[i].id=i;\n    }\n}\n\nvoid binary(void)\n{\n    sort(word+1,word+1+n);\n    sort(tmp+1,tmp+1+n);//\u522b\u5fd8\u4e86\u4e24\u4e2a\u90fd\u8981\u6392\u5e8f\n    for(int i=1;i<=m;i++)\n    {\n        int find_k;\n        string find_st;\n        scanf(\"%d\",&find_k);\n        cin>>find_st;\n        const int j=lower_bound(tmp+1,tmp+1+n,find_st)-tmp;//\u4e8c\u5206\u627e\u5230\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\n        if(word[j+find_k-1].st.substr(0,find_st.size())!=find_st)//\u76f4\u63a5\u8df3\u5230\u540e\u9762\u7b2ck\u4e2a\uff0c\u5e76\u7528substr\u8fdb\u884c\u6bd4\u8f83\n         puts(\"-1\");\n        else\n         printf(\"%d\\n\",word[j+find_k-1].id);\n    }\n}\n\nint main()\n{\n    input();\n    binary();\n    return 0;\n}\n```\n\n**\u65b9\u6cd52**\u7528pair\u7a0b\u5e8f\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<string>\n#include<cstdio>\nusing namespace std;\n\nconst int MAXN=30005;\nint n,m;\npair<string,int>a[MAXN];//\u76f4\u63a5\u7701\u53bb\u7ed3\u6784\u4f53\n\nvoid input(void)\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++) \n    {\n        cin>>a[i].first;\n        a[i].second=i;\n    }\n}\n\nvoid binary(void)\n{\n    sort(a+1,a+1+n);//\u9ed8\u8ba4\u6709\u9650\u6bd4\u8f83first\n    for(int i=1;i<=m;i++)\n    {\n        int num;\n        string key;\n        cin>>num>>key;\n        const int j=lower_bound(a+1,a+1+n,make_pair(key,0))-a;//make_pair\u8ba9\u67e5\u627e\u503c\u4e0e\u6570\u7ec4\u7c7b\u578b\u76f8\u540c\n        if(a[j+num-1].first.substr(0,key.size())!=key)//\u4e5f\u662f\u76f4\u63a5\u8df3\u5230\u540e\u9762\u7b2ck\u4e2a\n         puts(\"-1\");\n        else\n         printf(\"%d\\n\",a[j+num-1].second);\n    }\n}\n\nint main()\n{\n    input();\n    binary();\n    return 0;\n}\n```\n\n\u53d7\u7bc7\u5e45\u5f71\u54cd\uff0c\u65b9\u6cd53\u7684\u7a0b\u5e8f\u4e0d\u518d\u7ed9\u51fa\uff0c\u6bd5\u7adf\u53ea\u662f\u4e00\u70b9\u70b9\u6539\u52a8\uff0c\u53ef\u4ee5\u4e0a\u7f51\u767e\u5ea6\u3002\n\n _\u6ce8\uff1a\u7801\u98ce\u4e0d\u540c\u662f\u56e0\u4e3a\u7531\u673a\u623f\u597d\u53cb\u63d0\u4f9b\u7684\u601d\u8def\u4e0e\u7a0b\u5e8f\uff0c\u6211\u53ea\u662f\u5c0f\u7ed3\u3002_ \n\n------------\n\n\u4e0b\u9762\u51e0\u79cd\u65b9\u6cd5\u7684\u6027\u80fd\u6bd4\u8f83\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/55383.png)\n\n\u7801\u91cf\u3001\u65f6\u95f4\u3001\u8fd0\u884c\u5185\u5b58\u4ec0\u4e48\u7684\u81ea\u5df1\u4ed4\u7ec6\u770b\uff0c\u9644\u4e0a[link](https://www.luogu.org/recordnew/lists?uid=80049&pid=2237&status=&sort=undefined)\u3002\n\n\u5b57\u5178\u6811\u7684\u7801\u91cf\u5c31\u4e0d\u8a00\u800c\u55bb\uff0c\u65f6\u95f4\u4e5f\u662f\u5f88\u4f18\u79c0\u7684\u3002\n\n### \u4e0d\u8bba\u600e\u6837\uff0c\u80fdAC\u9898\u76ee\u7684\u90fd\u662f\u597d\u65b9\u6cd5\uff01\n ",
        "postTime": 1553493534,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2237 \u3010[USACO14FEB]\u81ea\u52a8\u5b8c\u6210Auto-complete\u3011"
    },
    {
        "content": "## Sol ##\r\n\r\n[blog\u98df\u7528](http://www.caolaoshi.men/index.php/archives/usaco14feb-auto.html)\r\n\r\n\u8c8c\u4f3c\u6709\u5199\u8d2a\u5fc3+\u4e8c\u5206\u7684\uff0c\u6211\u5c31\u504f\u5199\u5b57\u5178\u6811\u3002\r\n\r\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5355\u8bcd\uff0c\u90fd\u628a\u5b83\u63d2\u5165\u5230\u5b57\u5178\u6811\u4e0a\uff0c\u6df1\u641c\u4e00\u904d\u7ef4\u62a4\u51fa\u6bcf\u4e2a\u7ed3\u70b9\u7684\uff08\u5305\u62ec\uff09\u7684\u5b50\u6811\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u5355\u8bcd\u7684\u7ed3\u5c3e\uff0c\u6839\u636e\u4f60\u8981\u627e\u7684\u5355\u8bcd\u7684\u5b57\u5178\u5e8f\u7684\u6392\u540d\uff0c\u5c31\u80fd\u786e\u5b9a\u51fa\u4f60\u8981\u627e\u7684\u662f\u5b57\u5178\u6811\u4e0a\u7684\u54ea\u4e00\u4e2a\u70b9\uff0c\u5728\u63d2\u5165\u7684\u65f6\u5019\u540c\u65f6\u7ef4\u62a4\u51fa\u8be5\u5355\u8bcd\u7684\u5e8f\u53f7\uff0c\u8fd9\u6837\u627e\u5230\u76f4\u63a5$O(1)$\uff0c\u8fd8\u662f\u5f88\u597d\u6253\u7684\uff0c\u5c31\u662f\u67e5\u8be2\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\uff01\r\n\r\n## Code ##\r\n\r\n```\r\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\nusing namespace std;\r\n\r\nconst int L = 1000005;\r\nshort vis[L];\r\nint n , m , tree[L][30] , tot = 0 , val[L] , size[L] , num[L];\r\n\r\nvoid build(string s , int cnt) {\r\n\tint len = s.length() , now = 0;\r\n\tfor(int i=0; i<len; i++) {\r\n\t\tint id = s[i] - 'a';\r\n\t\tif(!tree[now][id])\r\n\t\t\ttree[now][id] = ++tot;\r\n\t\tnow = tree[now][id];\r\n\t}\r\n\tval[now] = -1;\r\n\tsize[now] = 1;\r\n\tnum[now] = cnt;\r\n}\r\n\r\nvoid dfs(int x) {\r\n\tvis[x] = 1;\r\n\tfor(int i=0; i<26; i++)\r\n\t\tif(tree[x][i]) {\r\n\t\t\tdfs(tree[x][i]);\r\n\t\t\tsize[x] += size[tree[x][i]];\r\n\t\t}\r\n}\r\n\r\nint find(int x , string s) {\r\n\tint len = s.length() , now = 0 , ans = 0;\r\n\tfor(int i=0; i<len; i++) {\r\n\t\tint id = s[i] - 'a';\r\n\t\tif(!tree[now][id])\r\n\t\t\treturn -1;\r\n\t\tnow = tree[now][id];\r\n\t}\r\n\tif(size[now] < x)\r\n\t\treturn -1;\r\n\tif(val[now] == -1)\r\n\t\tx--;\r\n\tfor(int i=0; i<26; i++) {\r\n\t\tif(!x && val[now] == -1)\r\n\t\t\treturn num[now];\r\n\t\tif(size[tree[now][i]] < x)\r\n\t\t\tx -= size[tree[now][i]];\r\n\t\telse {\r\n\t\t\tif(tree[now][i]) {\r\n\t\t\t\tnow = tree[now][i];\r\n\t\t\t\ti = -1;\r\n\t\t\tif(val[now] == -1)\r\n\t\t\t\tx--;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(int i=1; i<=n; i++) {\r\n\t\tstring s;\r\n\t\tcin>>s;\r\n\t\tbuild(s , i);\r\n\t}\r\n\tfor(int i=1; i<=tot; i++)\r\n\t\tif(!vis[i])\r\n\t\t\tdfs(i);\r\n\tfor(int i=1; i<=m; i++) {\r\n\t\tint x;\r\n\t\tstring s;\r\n\t\tcin>>x>>s;\r\n\t\tprintf(\"%d\\n\",find(x , s));\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\r\n  [1]: http://usaco.org/index.php?page=viewproblem2&cpid=397\r\n  [2]: https://www.luogu.org/problemnew/show/P2237\r\n  [3]: https://www.lydsy.com/JudgeOnline/problem.php?id=3448",
        "postTime": 1534573910,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2237 \u3010[USACO14FEB]\u81ea\u52a8\u5b8c\u6210Auto-complete\u3011"
    },
    {
        "content": "## \u8fd9\u9898\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u6392\u5e8f\u8d2a\u5fc3\u505a\u6cd5\n\n\n\u8fd9\u9053\u9898\u548c[P2969 Music Notes](https://www.luogu.org/problemnew/show/P2969)\u601d\u8def\u975e\u5e38\u7c7b\u4f3c\uff0c\u53ea\u662f\u64cd\u4f5c\u7684\u5bf9\u8c61\u7531`int`\u53d8\u6210\u4e86`string`\u800c\u5df2\uff0c\u7528`std::string`\u5b8c\u6210\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684\u3002\n\n\u8d2a\u5fc3`O(n)` \u6392\u5e8f`O(nlogn)` \u603b\u65f6\u95f4\u590d\u6742\u5ea6`O(n)`\n\n\u53c2\u89c1\u697c\u4e0b\u5927\u4f6c\u601d\u8def\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u53ea\u9700\u8981\u627e\u5230\u5b57\u5178\u5e8f\u6700\u5c0f\u4e0e\u5b83\u5339\u914d\u7684\u5355\u8bcd\uff0c\u5e76\u4e14\u52a0k\u540e\u68c0\u67e5\uff0c\u5982\u679c\u5339\u914d\u5c31\u6709\u89e3\n\n\u8003\u8651**\u5bf9\u5355\u8bcd\u3001\u8be2\u95ee\u8fdb\u884c\u6392\u5e8f**\uff0c\u5e76\u4e14\u8bb0\u5f55\u539f\u6765\u7684\u987a\u5e8f`id`(\u65b9\u4fbf\u8fd8\u539f\u8be2\u95ee\u987a\u5e8f\u8f93\u51fa\u548c\u67e5\u8be2\u5355\u8bcd\u539f\u5e8f\uff09\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u5f00**\u53cc\u6307\u9488\u8d2a\u5fc3**\u4e86\uff0c\u4ee3\u7801\u57fa\u672c\u5c31**\u666e\u53ca+\u96be\u5ea6**\n\n*\u8d2a\u5fc3\u601d\u8def*\uff1a\u4e24\u4e2a\u6307\u9488\u4e00\u4e2a\u8bb0\u5f55\u5355\u8bcd\u7684\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u8bb0\u5f55\u8be2\u95ee\u7684\u4f4d\u7f6e\uff0c\u4e0a\u4efd\u4f2a\u4ee3\u7801\n\n```\nif(\u5355\u8bcd \u5339\u914d \u8be2\u95ee):\n\t\u68c0\u67e5+k\u540e\u7684\u5339\u914d:\n    \t\u7b54\u6848\u4e3a[\u5355\u8bcd+k].id -> \u5f53\u5339\u914d\u65f6\n        \u7b54\u6848\u4e3a-1         -> \u5f53\u4e0d\u5339\u914d\u65f6\nelse if(\u5355\u8bcd>\u8be2\u95ee) \u8be2\u95ee++\nelse \u5355\u8bcd++\n```\n\n\u5b8c\u6574cpp\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nbool Pre(string &s,string &pre){ //\u68c0\u67e5\u662f\u5426\u4e3a\u524d\u7f00\n\tif(pre.size()>s.size()) return false;\n\treturn pre==s.substr(0,pre.size());\n}\nstruct Word{ //\u5355\u8bcd\u548cid\n\tstring s;\n\tint id;\n}a[100005];\nstruct Query{ //\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\uff0cid\uff0c\u67e5\u5230\u7684\u7b54\u6848\u548ck\u503c\n\tstring s;\n\tint id,val,jmp;\n}q[5005];\ntemplate<class T> bool cmps(T a,T b){return a.s<b.s;} //\u6309\u5b57\u7b26\u4e32\u6392\u5e8f\ntemplate<class T> bool cmpid(T a,T b){return a.id<b.id;} //\u8fd8\u539fid\u539f\u5e8f\nint main(){\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) cin>>a[i].s,a[i].id=i;\n\tsort(a+1,a+1+n,cmps<Word>);\n\tfor(int i=1;i<=m;i++) cin>>q[i].jmp>>q[i].s,q[i].id=i;\n\tsort(q+1,q+1+m,cmps<Query>); //\u5206\u522b\u6392\u5e8f\n\tint pa=1,pq=1; //\u53cc\u6307\u9488\n\twhile(pa<=n&&pq<=m){\n\t\tif(Pre(a[pa].s,q[pq].s)){ //\u5982\u679c\u5339\u914d\u4e86\n\t\t\tif(Pre(a[pa+q[pq].jmp-1].s,q[pq].s)) q[pq].val=a[pa+q[pq].jmp-1].id; //\u68c0\u67e5+k\u540e\u7684\u5339\u914d\uff0c\u6ce8\u610fk-1\uff0c\u6210\u529f\u5c31\u8bb0\u5f55\u7b54\u6848\n\t\t\telse q[pq].val=-1; //\u5339\u914d\u4e0d\u6210\u529f\n\t\t\tpq++; //\u4e0b\u4e00\u4e2a\u5173\u952e\u5b57\n\t\t}\n\t\telse if(a[pa].s>q[pq].s) pq++; //\u5f53\u524d\u5355\u8bcd\u5df2\u7ecf\u6bd4\u8981\u67e5\u7684\u5173\u952e\u5b57\u5927\u4e86\uff0c\u5173\u952e\u5b57++\n\t\telse pa++; //\u5355\u8bcd\u6bd4\u5173\u952e\u5b57\u5c0f\uff0c\u5355\u8bcd++\n\t}\n\twhile(pq<=m) q[pq].val=-1; //\u6ca1\u627e\u5230\u7684\u5173\u952e\u5b57\u90fd\u662f\u8bef\u89e3\n\tsort(q+1,q+1+m,cmpid<Query>); //\u8fd8\u539f\u8be2\u95ee\u987a\u5e8f\n\tfor(int i=1;i<=m;i++) cout<<q[i].val<<endl;\n\treturn 0;\n} \n```",
        "postTime": 1523026310,
        "uid": 31756,
        "name": "RiverHamster",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2237 \u3010[USACO14FEB]\u81ea\u52a8\u5b8c\u6210Auto-complete\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u9053\u7ec3\u4e60 \u4e8c\u5206 \u7684\u597d\u9898\n\n\u53ef\u4ee5\u53d1\u73b0\u4ee5 \u5b57\u7b26\u4e32 t \u4e3a\u524d\u7f00\u7684 \u5b57\u7b26\u4e32 s \u5fc5\u5b9a \u5927\u4e8e\u6216**\u7b49\u4e8e** \u5b57\u7b26\u4e32 t\uff0c\u5e76\u4e14 \u5b57\u7b26\u4e32 s \u6bd4 \u5b57\u7b26\u4e32 t \u52a0\u4e0a \u5b57\u7b26 '|' \uff08\u4e00\u4e2a\u6bd4 'z' \u8981\u5927\u7684\u5b57\u7b26\uff0c\u51e1\u662f\u6bd4 'z' \u5927\u53ef\u4ee5\u4efb\u610f\u5236\u5b9a\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u8981\u7ed9 \u6240\u6709\u5355\u8bcd\u5b57\u7b26\u4e32 \u5e26\u4e0a\u7f16\u53f7 \u4ee5\u5b57\u5178\u5e8f \u8fdb\u884c\u6392\u5e8f\uff0c\u7528\u4e8c\u5206\u627e\u51fa\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\uff0c\u518d\u7528\u4e8c\u5206\u627e\u51fa\u6700\u540e\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\uff0c\u91cc\u9762\u4e00\u6bb5\u533a\u95f4\u7684\u5b57\u7b26\u4e32\u90fd\u662f\u7b26\u5408\u6761\u4ef6\u7684\u3002\u627e\u5230\u7b2c k \u4e2a\u5e76\u4e14\u8f93\u51fa\u5176\u7f16\u53f7\u6216\u8005 -1 \u4fbf\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\u4e00\u4e2a\u8be2\u95ee\u3002\n\n\u672c\u9898\u6bd4\u8f83\u96be\u7406\u89e3\u7684 \u4e8c\u5206\u5224\u65ad \u5e94\u8be5\u7528 \u5927\u4e8e \u8fd8\u662f \u5927\u4e8e\u7b49\u4e8e\u3002\u627e \u7b2c\u4e00\u6b21 \u51fa\u73b0\u7684\u5e94\u8be5\u7528 \u5927\u4e8e\uff0c\u627e \u6700\u540e\u4e00\u6b21 \u51fa\u73b0\u7684\u5e94\u8be5\u7528 \u5927\u4e8e\u7b49\u4e8e\uff0c\u5982\u679c\u52a0\u4e0a\u7b49\u53f7\u53ef\u4ee5\u6392\u9664 \u5b57\u7b26\u4e32 s \u7b49\u4e8e \u524d\u7f00\u5b57\u7b26\u4e32 t \u7684\u60c5\u51b5\uff0c\u53ef\u81ea\u884c\u601d\u8003\u3002\n\n\u697c\u4e0b\u7528\u4e86 STL \u7684 \u4e8c\u5206\u67e5\u627e\u51fd\u6570 %%%\uff0c\u90a3\u4e48\u672c\u4eba\u8fd8\u662f\u624b\u6253\u4fbf\u4e8e\u5927\u5bb6\u89c2\u770b\u5e76\u7406\u89e3\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nstruct stc{\n    string s;\n    int n;\n}s[30001]; // \u5b9a\u4e49 \u5355\u8bcd\u5b57\u7b26\u4e32 \u7ed3\u6784\u4f53\uff0cs \u4e3a\u5b57\u7b26\u4e32\uff0cn \u4e3a\u7f16\u53f7\n\nbool Cmp(stc x , stc y){\n    return x.s < y.s;    \n}\n\nstring t;\nint p , n , k , l , r , m , resl , resr;\n\nint main(){\n    cin >> p >> n;\n    for(int i = 1 ; i <= p ; i++)\n        cin >> s[i].s , s[i].n = i;\n    sort(s + 1 , s + p + 1 , Cmp); // \u7ed9 \u5355\u8bcd\u5b57\u7b26\u4e32 \u8fdb\u884c\u6392\u5e8f\n    for(int i = 1 ; i <= n ; i++){\n        cin >> k >> t;\n        resl = 0 , resr = 0;\n        l = 0 , r = p; // \u4fdd\u7559 \u524d\u7f00 t\uff0c\u4fbf\u4e8e\u627e\u51fa\u5de6\u8fb9\u754c\u3002\n        while(l <= r){\n            m = (l + r) >> 1;\n            if(t > s[m].s)\n                l = m + 1 , resl = m;\n            else\n                r = m - 1;\n        }\n        l = 0 , r = p ; t = t + '|'; // \u7ed9 t \u52a0\u4e0a\u4e00\u4e2a\u8f83\u5927\u7684\u5b57\u7b26\uff0c\u4fbf\u4e8e\u627e\u51fa\u53f3\u8fb9\u754c\u3002\n        while(l <= r){\n            m = (l + r) >> 1;\n            if(t >= s[m].s)\n                l = m + 1 , resr = m;\n            else\n                r = m - 1;\n        }\n        if(resl + k > resr)\n            cout << -1 << endl;\n        else\n            cout << s[resl + k].n << endl; // \u4e24\u6b21\u4e8c\u5206\u540e\u83b7\u5f97\u53ef\u7528\u5b57\u7b26\u4e32\u7684\u533a\u95f4\uff0c\u8f93\u51fa\u533a\u95f4\u5185 \u7b2c k \u4e2a\u7684\u7f16\u53f7\n    }\n    return 0;\n}\n```",
        "postTime": 1502519182,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2237 \u3010[USACO14FEB]\u81ea\u52a8\u5b8c\u6210Auto-complete\u3011"
    },
    {
        "content": "$100$ \u84dd\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u3002\n\n\u53d1\u73b0\u697c\u4e0b\u5747\u7528\u7684 $\\text{lower\\_bound}$ \u5565\u7684\uff0c\u8fd9\u91cc\u8003\u8651\u5b57\u5178\u6811\uff0c\u56e0\u4e3a\u53d1\u73b0\u9898\u76ee\u8981\u6c42\u7ef4\u62a4\u524d\u7f00\u7684\u4fe1\u606f\u3002\n\n\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5728 $\\text{Trie}$ \u4e2d\u7684\u7ec8\u6b62\u8282\u70b9\u6253\u4e0a\u6807\u8bb0\uff0c\u8bb0\u5f55\u662f\u539f\u4e32\u7684\u7b2c\u51e0\u4e2a\u3002\u76f8\u5e94\u7684\u6c42\u51fa\u6bcf\u4e2a\u5b50\u6811\u7684 $siz$\uff0c$siz_u$ \u8868\u793a\u5728\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5185\u6709\u591a\u5c11\u6807\u8bb0\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u5982\u679c $s$ \u4e0d\u5728\u8fd9\u68f5 $\\text{Trie}$ \u4e0a\uff0c\u76f4\u63a5\u8f93\u51fa `-1`\u3002\n\n\u5426\u5219\u5bf9\u4e8e\u5b83\u7684\u7ec8\u6b62\u8282\u70b9\uff0c\u627e\u5230\u54ea\u68f5\u5b50\u6811\u91cc\u5b58\u5728\u7b54\u6848\uff0c\u65b9\u6cd5\u662f\u4e0d\u65ad\u7528 $k$ \u51cf\u53bb $siz$ \u5373\u53ef\u3002\n\n\u5982\u6b64\u5faa\u73af\u4e0b\u53bb\u76f4\u5230 $k$ \u4e3a $0$ \u5e76\u4e14\u627e\u5230\u4e00\u4e2a\u6253\u8fc7\u6807\u8bb0\u7684\u8282\u70b9\uff0c\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002",
        "postTime": 1631578889,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P2237 [USACO14FEB]Auto-complete S\u3011"
    },
    {
        "content": "\u76f8\u4fe1\u5927\u5bb6\u770b\u5230\u8fd9\u91cc\u7684\u65f6\u5019\uff0c\u90fd\u5df2\u7ecf\u7406\u89e3\u4e86\u9898\u76ee\u610f\u601d\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u5148\u6392\u4e00\u8fb9\u5e8f\u4e4b\u540e\uff0c\u6240\u6709\u524d\u7f00\u76f8\u540c\u7684\u4e32\u90fd\u4f1a\u5728\u4e00\u8d77\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u6392\u4e00\u8fb9\u5e8f\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u4e0b\u6392\u5e8f\u4e4b\u524d\u8981\u8bb0\u5f55\u4e00\u4e0b\u7f16\u53f7\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u7528$lower-bound$\u6c42\u51fa\u7b2c\u4e00\u4e2a\u524d\u7f00\u4e3a\u7ed9\u5b9a\u4e32\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u52a0\u4e0a\u7ed9\u5b9a\u7684\u6392\u540d\uff0c\u6700\u540e\u5224\u65ad\u524d\u7f00\u662f\u5426\u7b26\u5408\u5373\u53ef\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile (!isdigit(c))\n\t\t  f|=(c=='-'),c=getchar();\n\twhile (isdigit(c))\n\t\t  x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f?-x:x;\n}\nvoid write(int x) {\n    if(x<0) {\n        putchar('-');\n        x=-x;\n    }\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\npair<string,int> a[90100];\ninline bool check(string x,string y){  //\u5224\u65ad\u662f\u5426\u4e3a\u524d\u7f00\n\tif(y.length()>x.length())\n\t\treturn false;\n\treturn x.substr(0,y.length())==y;\n}\nint w,n;\nsigned main(){\n\tw=read();\n\tn=read();\n\tfor(register int i=0;i<w;++i)\n\t\t{\n\t\t\tcin>>a[i].first;\n\t\t\ta[i].second=i;\n\t\t}\n\tsort(a,a+w);\n\twhile(n--)\n\t\t{\n\t\t\tstring x;\n\t\t\tint k;\n\t\t\tk=read();\n\t\t\tcin>>x;\n\t\t\tint sum=k-1+lower_bound(a,a+w,make_pair(x,0))-a;//\u67e5\u627e\u7b2c\u4e00\u4e2a\u524d\u7f00\u7684\u4f4d\u7f6e\n\t\t\tif(sum>=w || !check(a[sum].first,x))\t\n\t\t\t\t{\n\t\t\t\t\twrite(-1);\t\n\t\t\t\t\tputs(\"\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\twrite(a[sum].second+1);\n\t\t\tputs(\"\");\n\t\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1614064495,
        "uid": 193541,
        "name": "\u7f9a\u7f8aWANG",
        "ccfLevel": 7,
        "title": "P2237\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u5c06\u8fd9\u4e9b\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u7531\u4e8e $A$ \u4e32\u662f $B$ \u4e32\u7684\u524d\u7f00\u7684\u524d\u63d0\u662f $B$ \u7684\u5b57\u5178\u5e8f\u5927\u4e8e $A$ \u7684\u5b57\u5178\u5e8f\u3002\u6240\u4ee5\u8bf4\u6211\u4eec\u6392\u597d\u5e8f\u540e\uff0c\u7528\u795e\u5947\u7684 $STL$ \u51fd\u6570 $lower\\_bound$ \u4e8c\u5206\u67e5\u627e\u5373\u53ef\u3002\n\n**\u4e0a\u83dc\uff1a**\n\n```\n#include<bits/stdc++.h>\ninline int read()\n{\tint x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))f|=(c=='-'),c=getchar();\n\twhile(isdigit(c))x=x*10+(c&15),c=getchar();\n\treturn f?-x:x;\n}\nusing namespace std;\nstruct bb\n{\tint id;\n\tstring ss;\n}s[1000005];\nint w,n,l,r,L,R;\nstring mb;\ninline bool cmp(bb a,bb b)//\u6392\u5e8f\u51fd\u6570\n{\treturn a.ss<b.ss;\n}\ninline bool pd(int x)//\u5224\u65ad\u662f\u5426\u662f\u524d\u7f00\n{\tif(s[x].ss.size()<mb.size())return 0;\n\tfor(register int i=0;i<mb.size();++i)\n\t\tif(s[x].ss[i]!=mb[i])return 0;\n\treturn 1;\n}\nint main()\n{   w=read(),n=read();\n\tfor(register int i=1;i<=w;++i)cin>>s[i].ss,s[i].id=i;\n\tsort(s+1,s+w+1,cmp);\n\tfor(register int i=1;i<=n;++i)\n\t{\tint num=read();\n\t\tcin>>mb;\n\t\tbb tmp;\n\t\ttmp.ss=mb;\n\t\ttmp.id=0;\n\t\tl=lower_bound(s+1,s+w+1,tmp,cmp)-s;\n\t\tif(pd(l+num-1))cout<<s[l+num-1].id<<endl;\n\t\telse cout<<-1<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1614064366,
        "uid": 127036,
        "name": "woshiSB",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2237 [USACO14FEB]Auto-complete S"
    },
    {
        "content": "### \u601d\u8def\n- \u9996\u5148\u628a\u5b57\u5178\u6392\u5e8f\uff0c\u8fd9\u6837\u5982\u679c\u6709\u76f8\u540c\u7684\u524d\u7f00\u4f1a\u88ab\u6392\u5728\u4e00\u8d77\u3002\n- \u7136\u540e\u627e\u51fa\u524d\u7f00\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n- \u6700\u540e\u627e\u51fa\u5982\u679c\u5b58\u5728\u76ee\u6807\u7684\u4f4d\u7f6e\uff0c\u518d\u770b\u770b\u662f\u5426\u5b58\u5728\u3002\n---\n### $code$\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nconst int kMaxN = 1e6 + 1;\n\nstruct Q {  // \u8be2\u95ee\n  string s;\n  int k, a;\n} q[kMaxN];\nstring d[kMaxN];           // \u5b57\u5178\nint dl[kMaxN], ql[kMaxN];  // \u7f16\u53f7\u6392\u5e8f\nint w, n;\n\nint main() {\n  cin >> w >> n;\n  for (int i = 1; i <= w; i++) {\n    cin >> d[i];\n    dl[i] = i;  // \u521d\u59cb\u5316\u7f16\u53f7\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> q[i].k >> q[i].s;\n    ql[i] = i;  // \u521d\u59cb\u5316\u7f16\u53f7\n  }\n  // \u5b57\u5178\u5e8f\u6392\u5e8f\n  sort(dl + 1, dl + 1 + w, [](int i, int j) { return d[i] < d[j]; });\n  sort(ql + 1, ql + 1 + n, [](int i, int j) { return q[i].s < q[j].s; });\n  for (int i = 1, j = 1; i <= n; i++) {             // \u679a\u4e3e\u6bcf\u4e2a\u8be2\u95ee\n    for (; j <= w && d[dl[j]] < q[ql[i]].s; j++) {  // \u7ef4\u62a4\u5728\u5b57\u5178\u4e2d\u7684\u4f4d\u7f6e\n    }\n    int k = j + q[ql[i]].k - 1;  // \u7b54\u6848\u7684\u4f4d\u7f6e\n    // \u6821\u9a8c\u7b54\u6848\u5408\u6cd5\n    q[ql[i]].a = k > w || d[dl[k]].compare(0, q[ql[i]].s.length(), q[ql[i]].s) ? -1 : dl[k];\n  }\n  for (int i = 1; i <= n; i++) {\n    cout << q[i].a << endl;\n  }\n  return 0;\n}\n```\n",
        "postTime": 1613638871,
        "uid": 321290,
        "name": "un_def",
        "ccfLevel": 6,
        "title": "P2237\u9898\u89e3"
    },
    {
        "content": "\u5b57\u5178\u6811\u3002\n\ntrie\u8fd9\u4e48\u6709\u7528\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u7528\u5462\uff1f(\u96fe\n\n\u57fa\u672c\u5c31\u662f\u6a21\u677f\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(q|s|)$\uff08|s|\u4e3a\u7b54\u6848\u4e32\u957f\uff09\u3002\u7a7a\u95f4\u6709\u4fdd\u8bc1\u57281e6\u5185\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n#define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\n#define For(i, l, r) for(int i = (l), _end_ = (int)(r); i <= _end_; ++i)\n#define Forward(i, r, l) for(int i = (r), _end_ = (int)(l); i >= _end_; --i)\n#define Set(a, v) memset(a, v, sizeof(a))\nusing namespace std;\n\n#define Chkmax(a,b) a=a>b?a:b\n#define Chkmin(a,b) a=a<b?a:b\ntemplate<typename T>inline void read(T &x) {\n\tx=0;T fh=1;char ch=getchar();\n    for (; !isdigit(ch); ch = getchar() ) if (ch == '-') fh = -1;\n    for (; isdigit(ch); ch = getchar() ) x = (x<<1) + (x<<3) + (ch ^ '0');\n    x*=fh;\n}\ninline void file()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"2237.in\",\"r\",stdin);\n\tfreopen(\"2237.out\",\"w\",stdout);\n#endif\n}\nstatic int n,m;\nconst int MAXN=1e6+7;\nstatic char s[MAXN];\nstatic struct trie\n{\n\tint nxt[30],ed,cnt;\n}p[MAXN];\nstatic int e=1;\ninline void insert(char *q,int x)\n{\n\tstatic int now;now=1;\n\tRep(i,0,strlen(q)-1)\n\t{\n\t\t++p[now].cnt;\n\t\tif(!p[now].nxt[q[i]-'a'])p[now].nxt[q[i]-'a']=++e;\n\t\tnow=p[now].nxt[q[i]-'a'];\n\t}++p[now].cnt;\n\tp[now].ed=x;\n\t//cerr<<p[now].ed<<' '<<now<<endl;\n}\ninline void init()\n{\n\tread(n);read(m);\n\tRep(i,1,n)scanf(\"%s\",s),insert(s,i);\n}\ninline int query(char *q,int k)\n{\n\tstatic int now;now=1;\n\tRep(i,0,strlen(q)-1)\n\t{\n\t\tif(!p[now].nxt[q[i]-'a'])return -1;\n\t\tnow=p[now].nxt[q[i]-'a'];\n\t}\n\tstatic int tt;\n\twhile(k)\n\t{\n\t\tif(p[now].ed)--k;\n\t\tif(!k)break;\n\t\t//cerr<<k<<' '<<now<<' '<<p[now].ed<<endl;\n\t\ttt=now;\n\t\tRep(i,0,25)\n\t\t{\n\t\t\tif(p[now].nxt[i]&&k<=p[p[now].nxt[i]].cnt){now=p[now].nxt[i];break;}\n\t\t\telse k-=p[p[now].nxt[i]].cnt;\n\t\t}\n\t\tif(now==tt)break;\n\t\t//cerr<<k<<' '<<now<<' '<<p[now].ed<<endl;\n\t}\n\t//cerr<<now<<' '<<p[now].ed<<endl;\n\tif(!now||k>0)return -1;\n\telse while(!p[now].ed)\n\t{\n\t\tRep(i,0,25)if(p[now].nxt[i]){now=p[now].nxt[i];break;}\n\t}\n\treturn p[now].ed;\n}\ninline void solve()\n{\n\tstatic int k;\n\tRep(i,1,m)\n\t{\n\t\tread(k);scanf(\"%s\",s);\n\t\tprintf(\"%d\\n\",query(s,k));\n\t}\n}\nint main () {\n\tfile();\n\tinit();\n\tsolve();\n    return 0;\n}\n```",
        "postTime": 1518247140,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2237 \u3010[USACO14FEB]\u81ea\u52a8\u5b8c\u6210Auto-complete\u3011"
    }
]