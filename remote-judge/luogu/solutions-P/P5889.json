[
    {
        "content": "### [P5889 \u8df3\u6811](https://www.luogu.com.cn/problem/P5889) \n\n------------\n\u9996\u5148\u5927\u81f4\u8bfb\u4e00\u4e0b\u9898\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e2a\u70b9\u7684**\u4e8c\u8fdb\u5236\u7f16\u7801**\u5c31\u662f**\u4ece$1$\u53f7\u8282\u70b9\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u8def\u5f84**\u3002  \n\n\u6700\u9ad8\u76841\u4ee3\u8868\u6839\u8282\u70b9\uff0c\u4e4b\u540e\u76840\u4ee3\u8868\u5de6\u513f\u5b50\uff0c1\u4ee3\u8868\u53f3\u513f\u5b50\uff0c\u4e00\u76f4\u8d70\u5230\u6700\u4f4e\u4f4d\uff0c\u5c31\u662f\u8fd9\u4e2a\u6570\u5bf9\u5e94\u7684\u8282\u70b9\u3002  \n\n$example$\uff1a  \n$10$ -> $00001010$  \n\u4ece$1$\u5f00\u59cb\uff0c\u540e\u9762\u662f\u201c$010$\u201d\uff0c\u4e5f\u5c31\u662f\u201c\u5de6\u53f3\u5de6\u201d\uff0c\u753b\u51fa\u6811\u6765\uff0c\u4ece$1$\u5f00\u59cb\uff0c\u5de6\u513f\u5b50\u2014\u2014$2$\uff0c\u53f3\u513f\u5b50\u2014\u2014$5$\uff0c\u5de6\u513f\u5b50\u2014\u2014$10$\uff01  \n\n\u663e\u7136\uff0c\u7531\u4efb\u610f\u8282\u70b9\u5f00\u59cb\u5230\u5b83\u5b69\u5b50\u7684\u8def\u5f84\u90fd\u53ef\u4ee5\u6309 \u201c\u5de6$0$\u53f3$1$\u201d \u7684\u65b9\u5f0f\u8868\u793a\u3002\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6811\u4e0a\u4efb\u610f\u4e00\u4e2a\u7f16\u53f7\u4e3a$s$\u7684\u8282\u70b9\uff0c  \n\u64cd\u4f5c1\uff1a```s=s<<1```  \n\u64cd\u4f5c2\uff1a```s=(s<<1)+1```  \n\u64cd\u4f5c3\uff1a```s=s>>1```  \n\n\u62d3\u5c55\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u8868\u793a\u51fa  \ns\u7684n\u8f88\u7956\u5148\uff1a$s>>n$  \nand  \ns\u7684n\u4ee3\u5b69\u5b50\uff1a$(s<<n)+$ **$s$\u5230\u8fd9\u4e2a\u513f\u5b50 \u7684\u8def\u5f84**  \n\u56e0\u4e3as\u8868\u793a **$1$\u5230$s$ \u7684\u8def\u5f84**\uff0c\u6211\u4eec\u628a\u5b83\u5de6\u79fb$n$\u4f4d\uff08\u663e\u7136$s$\u5230\u5b83\u7684$n$\u4ee3\u5b69\u5b50\u8981\u8d70$n$\u6b65\uff09\uff0c\u518d\u52a0\u4e0a$s$\u5230\u8fd9\u4e2a\u5b69\u5b50\u8981\u8d70\u7684\u8def\u5f84\uff0c\u5f97\u5230\u7684\u4e5f\u5c31\u662f **$1$\u5230\u5b69\u5b50 \u7684\u8def\u5f84**  \n\n------------\n\n\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u505a\u8fd9\u9053\u9898\uff0c\u90a3\u4e48\u8981\u7ef4\u62a4\u7684\u5c31\u662f  \n**\u8df3\u8fc7\u8fd9\u6bb5\u533a\u95f4\u540e\uff0c$s$\u4f1a\u5982\u4f55\u6539\u53d8**  \n\n\u5bf9\u6bcf\u4e2a\u533a\u95f4\u5b9a\u4e49\u5982\u4e0b\uff1a  \n```\nstruct node(){\n    int fstl;\t//s\u6700\u9ad8\u4f1a\u8df3\u5230\u5b83\u7684\u7b2c\u51e0\u8f88\u7956\u5148\u4e0a\n    int l;      //\u8df3\u5230\u6700\u9ad8\u7956\u5148\u540e\uff0cs\u4f1a\u8df3\u5230\u8fd9\u4e2a\u7956\u5148\u7684\u7b2c\u51e0\u4ee3\u5b69\u5b50\u4e0a\uff08\u7ec8\u70b9\u4e0e\u6700\u9ad8\u7956\u5148\u7684\u6df1\u5ea6\u5dee\uff09\n    ll num;     //\u7956\u5148-\u7ec8\u70b9 \u7684\u8def\u5f84\n};\n```\n\u5373  \n\n$(max(1,s>>fstl)<<l)+num$  \n\n\u8868\u793a\u8df3\u8fc7\u8fd9\u4e2a\u533a\u95f4\u540e$s$\u7684\u4f4d\u7f6e\uff08\u53d6$max$\u7684\u610f\u4e49\u662f\u907f\u514d\u5de6\u79fb\u8fd0\u7b97\u4f7f\u4ee3\u8868\u6839\u8282\u70b9\u7684$1$\u6d88\u5931\uff09\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u64cd\u4f5c\u8868\u793a\u4e3a\uff1a  \n1\uff1a```fstl=1;```  \n2\uff1a```l=1;```  \n3\uff1a```l=1,num=1;```  \n\n\n------------\n\n\u90a3\u4e48\uff0c\u5269\u4e0b\u6700\u5927\u7684\u654c\u4eba\u5c31\u662f**\u533a\u95f4\u5408\u5e76**\u4e86\u3002  \n\u70b9$s$\u5148\u8df3\u8fc7\u533a\u95f4$a$\uff0c\u518d\u8df3\u8fc7\u533a\u95f4$b$\u7684\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff1a\n```\ns>>=a.fstl; //\u7531\u4e8e\u8fd9\u91ccs\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u70b9\uff0c\u6211\u4eec\u4e0d\u628a\u5b83\u4e0e1\u53d6max\ns<<=a.l;\ns+=a.num;\n\ns>>=b.fstl; //\u6ce8\u610f\u8fd9\u4e00\u6b65\uff0ca.num\u88abb.fstl\u201c\u53bb\u201d\u4e00\u90e8\u5206\ns<<=b.l;\ns+=b.num;\n```\n\u7531\u4e8e\u4ee3\u7801\u4e2d\u8981\u591a\u6b21\u7528\u5230**\u533a\u95f4\u5408\u5e76**\uff0c\u6211\u4eec\u4e0d\u59a8\u76f4\u63a5**\u91cd\u8f7d\u8fd0\u7b97\u7b26**  \n```\nnode operator + (const node &b) const{\n```  \n\n**$a.num$\u5728\u8fd9\u91cc\u6709\u4e00\u90e8\u5206\u88abb\u201c\u62b9\u53bb\u201d\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b83\u6765\u5206\u7c7b\u8ba8\u8bba\u3002**  \n\n\u8bbe\u533a\u95f4a\u548c\u533a\u95f4b\u5408\u5e76\u540e\u7684\u7ed3\u679c\u4e3a\u533a\u95f4$ans$\uff1a  \n```\n    node ans;\n```  \n\n\u2460 $a$\u3001$b$\u4e2d\u6709\u4e00\u4e2a\u4e3a\u7a7a\uff0c$ans$=\u53e6\u4e00\u4e2a  \n```\n    if(!b.fstl&&!b.l){\n        return *this;\n    }\n    if(!fstl&&!l){\n        return b;\n    }\n```\n\u2461 $a$\u3001$b$\u975e\u7a7a\uff0c$a.l>b.fstl$\uff0c\u5373$a.num$\u5bf9$ans$\u4ea7\u751f\u4e86\u5f71\u54cd\uff1a \n```\n    if(l>b.fstl){\n        ans.fstl=fstl;        //b.fstl\u5168\u90e8\u5c0f\u4e8ea.l\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u6bd4\u8df3a\u533a\u95f4\u65f6\u8fbe\u5230\u7684\u6700\u9ad8\u4f4d\u7f6e\u66f4\u9ad8\n        ans.l=l-b.fstl+b.l;   //\u5269\u4f59\u7684a.num\u957f\u5ea6\u52a0\u4e0ab.num\u7684\u957f\u5ea6\n        ans.num=((num>>b.fstl)<<b.l)+b.num;\n    }\n```\n   \n\u2462 $a$\u3001$b$\u975e\u7a7a\uff0c$a.l<=b.fstl$\uff0c\u5373$a.num$\u88ab$b.fstl$**\u5168\u90e8\u201c\u62b9\u53bb**\u201d\uff0c\u5bf9$ans$\u65e0\u5f71\u54cd\uff1a\n  \n```\n    else{\n        ans.fstl=fstl+b.fstl-l;//\u539f\u6709\u7684\u90e8\u5206\u52a0\u4e0ab.fstl\u7684\u5269\u4f59\u90e8\u5206\n        ans.l=b.l;\n        ans.num=b.num;\n    }\n    return ans;\n}\n``` \n\n\u7136\u540e\u5957**\u7ebf\u6bb5\u6811**\u6a21\u677f\u5373\u53ef\u3002\n\n\n------------\n# $Code$\uff1a\n```\n//\u7801\u98ce\u6e05\u5947\u89c1\u8c05\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n#define N 500007\ntypedef long long ll;\n//\u7ebf\u6bb5\u6811\u5e38\u89c4def\n#define ls (rt<<1)\n#define rs ((rt<<1)+1)\n#define mid (l+r>>1)\n#define lson rt<<1,l,l+r>>1\n#define rson rt<<1|1,(l+r>>1)+1,r\n\nll read(){\n    //put your \u5feb\u8bfb here\n}\ntemplate<typename Tp>\nvoid print(Tp a){\n    //put your \u5feb\u5199 here\n}\n\nstruct node{//\u5b9a\u4e49\u533a\u95f4\n    int fstl,l;\n    ll num;\n    node operator + (const node &b) const{//\u5408\u5e76\u8ba1\u7b97\n        if(!b.fstl&&!b.l){\n            return *this;\n        }\n        if(!fstl&&!l){\n            return b;\n        }\n        node ans;\n        if(l>b.fstl){\n            ans.fstl=fstl;\n            ans.l=l-b.fstl+b.l;\n            ans.num=((num>>b.fstl)<<b.l)+b.num;\n        }\n        else{\n            ans.fstl=fstl+b.fstl-l;\n            ans.l=b.l;\n            ans.num=b.num;\n        }\n        return ans;\n    }\n};\n\nnode tree[N*5];//\u7ebf\u6bb5\u6811\nll n,m,sz,now;\n\nvoid build(int rt,int l,int r){//\u5efa\u6811\n    if(l==r){\n        int x=read();\n        if(x==1){\n            tree[rt].l=1;\n        }\n        else if(x==2){\n            tree[rt].l=1;\n            tree[rt].num=1;\n        }\n        else{\n            tree[rt].fstl=1;\n        }\n        return;\n    }\n    build(lson);\n    build(rson);\n    tree[rt]=tree[ls]+tree[rs];\n}\nvoid upd(int rt,int l,int r,int pos,int x){//\u66ff\u6362\n    if(l==r){\n        tree[rt]=(node){0,0,0};\n        if(x==1){\n            tree[rt].l=1;\n        }\n        else if(x==2){\n            tree[rt].l=1;\n            tree[rt].num=1;\n        }\n        else{\n            tree[rt].fstl=1;\n        }\n        return;\n    }\n    if(pos>mid){\n        upd(rson,pos,x);\n    }\n    else{\n        upd(lson,pos,x);\n    }\n    tree[rt]=tree[ls]+tree[rs];\n}\nnode query(int rt,int l,int r,int s,int t){//\u67e5\u8be2\n    node ans=(node){0,0,0},lans,rans;\n    if(l>t||r<s){\n        return ans;\n    }\n    if(s<=l&&r<=t){\n        return tree[rt];\n    }\n    lans=query(lson,s,t);\n    rans=query(rson,s,t);\n    return lans+rans;\n}\n\nint main(){\n    sz=read(),n=read(),m=read();\n    build(1,1,n);\n    int opt,x,y;\n    ll s;//\u8fd9\u91cc\u7528int\u7b2c10\u4e2a\u70b9\u4f1a\u7206\n    node r;\n    while(m--){\n        opt=read();\n        if(opt&1){\n            s=read(),x=read(),y=read();\n            r=query(1,1,n,x,y);\n\n            s=(max(1ll,s>>r.fstl)<<r.l)+r.num;\n            print(s),putchar('\\n');\n        }\n        else{\n            x=read(),y=read();\n            upd(1,1,n,x,y);\n        }\n    }\n    return 0;\n}\n```\n#### \u840c\u65b0\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u6709\u95ee\u9898\u8bf7\u52a1\u5fc5\u6307\u51fa\uff0c\u8c22\u8c22\uff01",
        "postTime": 1579319977,
        "uid": 83535,
        "name": "4SunnyH",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5889 \u3010\u8df3\u6811\u3011"
    },
    {
        "content": "### P5889 \u8df3\u6811 \u9898\u89e3\n\n\u8fd9\u9898\u4e00\u5f00\u59cb\u4e0d\u4f1a\uff0c\u770b\u4e86 4SunnyH  \u5927\u4f6c\u7684\u9898\u89e3\u624d\u660e\u767d\u3002\u6211\u4f1a\u628a\u4ed6\u8bb2\u7684\u7b80\u7565\u7684\u90e8\u5206\u8bb2\u7684\u8be6\u7ec6\u4e00\u70b9\u3002\n\n### Part 1 \u7ed3\u6784\u4f53\u5b9a\u4e49\n\n\u5b9a\u4e49 l,r \u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\uff08\u4e2a\u4eba\u4e60\u60ef\uff09\u3002\n\ndf \u4e3a\u8df3\u5230\u7b2c\u51e0\u4e2a\u7956\u5148\uff0cds \u4e3a\u8df3\u5b8c\u7956\u5148\u540e\u8df3\u5230\u51e0\u4ee3\u5b69\u5b50\uff0cnum \u4e3a\u6bcf\u6b21\u8df3\u5230\u53f3\u513f\u5b50\u8282\u70b9\u7f16\u53f7\u7684 +1\uff0c\u7b2c\u51e0\u4f4d\u662f 1 \u4ee3\u8868\u7b2c\u51e0\u4f4d\u662f\u8df3\u5230\u53f3\u513f\u5b50\u3002\n\n\u6211\u5185\u7f6e\u4e86\u4e00\u4e2a\u51fd\u6570\uff0cmake \u8868\u793a\u5c06\u4e00\u4e2a\u64cd\u4f5c\u8868\u793a\u4e3a\u4e0a\u9762\u7684\u4e09\u4e2a\u503c\u3002\n```cpp\nvoid make(int i)\n{\n\tif(i==3) df=1;//\u5982\u679c\u662f\u64cd\u4f5c3\uff0c\u90a3\u4e48\u8df3\u52301\u7ea7\u7956\u5148\uff0c\u5c31\u662f\u7236\u4eb2\n\tif(i<=2) ds=1;//\u5982\u679c\u64cd\u4f5c12\uff0c\u5c31\u662f\u8df3\u5230\u513f\u5b50\n\tif(i==2) num=1;//\u5982\u679c\u64cd\u4f5c2\uff0c\u662f\u53f3\u513f\u5b50\uff0c\u9700\u8981\u8bb0\u5f55\n}\n```\n\u540c\u65f6\u91cd\u8f7d\u4e86\u8fd0\u7b97\u7b26\uff0c\u529f\u80fd\u548c\u4ed6\u7684\u4e00\u6837\uff0c\u5c31\u662f\u8d70\u8fc7\u4e24\u4e2a\u533a\u95f4\u7684\u5f71\u54cd\uff0c\u8fd9\u90e8\u5206\u4ed6\u8bb2\u7684\u8be6\u7ec6\u6211\u5c31\u4e0d\u8bf4\u4e86\u3002\n\n\u7ed3\u6784\u4f53\u90e8\u5206\u4ee3\u7801\uff1a\n```cpp\nstruct tree\n{\n\tint l,r;\n\tint df,ds,num;\n\tvoid make(int i)\n\t{\n\t\tif(i==3) df=1;\n\t\tif(i<=2) ds=1;\n\t\tif(i==2) num=1;\n\t}\n\ttree operator + (const tree &p)\n\t{\n\t\ttree ans;\n\t\tif(df==0&&ds==0)\n\t\t{\n\t\t\tans=p;\n\t\t\tans.l=min(l,p.l);\n\t\t\tans.r=max(r,p.r);\n\t\t\treturn ans;\n\t\t}\n\t\tif(p.df==0&&p.ds==0)\n\t\t{\n\t\t\tans=*this;\n\t\t\tans.l=min(l,p.l);\n\t\t\tans.r=max(r,p.r);\n\t\t\treturn ans;\n\t\t}\n\t\tif(ds>p.df)\n\t\t{\n\t\t\tans.df=df;\n\t\t\tans.ds=ds-p.df+p.ds;\n\t\t\tans.num=(num>>p.df)<<p.ds;\n\t\t\tans.num+=p.num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans.df=df+p.df-ds;\n\t\t\tans.ds=p.ds;\n\t\t\tans.num=p.num;\n\t\t}\n\t\tans.l=min(l,p.l);\n\t\tans.r=max(r,p.r);\n\t\treturn ans;\n\t}\n}t[2000005];\n```\n### Part 2 \u5efa\u6811\n\u5efa\u6811\u90e8\u5206\u6709\u4e24\u4e2a\u70b9\u3002\n\n\u7b2c\u4e00\u70b9\u662f\u5230\u53f6\u8282\u70b9\u540e\u8fdb\u884cmake\u51fd\u6570\uff0c\u628a\u539f\u64cd\u4f5c\u6539\u6210\u7ef4\u62a4\u7684\u503c\n\n\u7b2c\u4e8c\u70b9\u662fpushup\u76f4\u63a5\u7528\u4e4b\u524d\u91cd\u8f7d\u7684\u52a0\u53f7\u5c31\u884c\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\nvoid build(int l,int r,int k)\n{\n\tt[k].l=l;t[k].r=r;\n\tif(l==r)\n\t{\n\t\tt[k].make(a[l]);\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(l,mid,k*2);\n\tbuild(mid+1,r,k*2+1);\n\tt[k]=t[k*2]+t[k*2+1];\n}\n```\n### Part 3 \u4fee\u6539 \n\n\u4fee\u6539\u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u7528make\u51fd\u6570\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u6ce8\u610f**\u8981\u5148\u6e05\u96f6\uff01\uff01\uff01**\n\n\u540c\u65f6\uff0c\u4fee\u6539\u5b8c\u4e86\u8bb0\u5f97**pushup**\u3002\n\n```cpp\nvoid change(int p,int k,int v)\n{\n\tif(t[k].l==t[k].r)\n\t{\n\t\tt[k].df=t[k].ds=t[k].num=0;\n\t\tt[k].make(v);\n\t\treturn;\n\t}\n\tif(t[k*2].r>=p)\n\tchange(p,k*2,v);\n\telse\n\tchange(p,k*2+1,v);\n\tt[k]=t[k*2]+t[k*2+1];\n}\n```\n\n\n### Part 4 \u67e5\u8be2\n\u8fd9\u9898\u7684\u67e5\u8be2\u8fd4\u56de\u503c\u662f\u4e00\u4e2atree\u7ed3\u6784\u4f53\u3002\u76f4\u63a5\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\n\n\u53ea\u67098\u884c\u7684\u4ee3\u7801\uff1a\n```cpp\ntree ask(int l,int r,int k)\n{\n\ttree ans=(tree){t[k].l,t[k].r,0,0,0};\n\tif(l<=t[k].l&&t[k].r<=r) return t[k];\n\tif(t[k*2].r>=l) ans=ans+ask(l,r,k*2);\n\tif(t[k*2+1].l<=r) ans=ans+ask(l,r,k*2+1);\n\treturn ans;\n}\n```\n### Part 5 \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#define int long long\nusing namespace std;\nint inline read()\n{\n\tint ans=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch))\n\t{\n\t\tif(ch=='-')\n\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t{\n\t\tans=ans*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn ans*f;\n}\nint n,m,q;\nint a[500005];\nstruct tree\n{\n\tint l,r;\n\tint df,ds,num;\n\tvoid make(int i)\n\t{\n\t\tif(i==3) df=1;\n\t\tif(i<=2) ds=1;\n\t\tif(i==2) num=1;\n\t}\n\ttree operator + (const tree &p)\n\t{\n\t\ttree ans;\n\t\tif(df==0&&ds==0)\n\t\t{\n\t\t\tans=p;\n\t\t\tans.l=min(l,p.l);\n\t\t\tans.r=max(r,p.r);\n\t\t\treturn ans;\n\t\t}\n\t\tif(p.df==0&&p.ds==0)\n\t\t{\n\t\t\tans=*this;\n\t\t\tans.l=min(l,p.l);\n\t\t\tans.r=max(r,p.r);\n\t\t\treturn ans;\n\t\t}\n\t\tif(ds>p.df)\n\t\t{\n\t\t\tans.df=df;\n\t\t\tans.ds=ds-p.df+p.ds;\n\t\t\tans.num=(num>>p.df)<<p.ds;\n\t\t\tans.num+=p.num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans.df=df+p.df-ds;\n\t\t\tans.ds=p.ds;\n\t\t\tans.num=p.num;\n\t\t}\n\t\tans.l=min(l,p.l);\n\t\tans.r=max(r,p.r);\n\t\treturn ans;\n\t}\n}t[2000005];\nvoid build(int l,int r,int k)\n{\n\tt[k].l=l;t[k].r=r;\n\tif(l==r)\n\t{\n\t\tt[k].make(a[l]);\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(l,mid,k*2);\n\tbuild(mid+1,r,k*2+1);\n\tt[k]=t[k*2]+t[k*2+1];\n}\nvoid change(int p,int k,int v)\n{\n\tif(t[k].l==t[k].r)\n\t{\n\t\tt[k].df=t[k].ds=t[k].num=0;\n\t\tt[k].make(v);\n\t\treturn;\n\t}\n\tif(t[k*2].r>=p)\n\tchange(p,k*2,v);\n\telse\n\tchange(p,k*2+1,v);\n\tt[k]=t[k*2]+t[k*2+1];\n}\ntree ask(int l,int r,int k)\n{\n\ttree ans=(tree){t[k].l,t[k].r,0,0,0};\n\tif(l<=t[k].l&&t[k].r<=r) return t[k];\n\tif(t[k*2].r>=l) ans=ans+ask(l,r,k*2);\n\tif(t[k*2+1].l<=r) ans=ans+ask(l,r,k*2+1);\n\treturn ans;\n}\nsigned main()\n{\n\tn=read();m=read();q=read();\n\tfor(int i=1;i<=m;i++)\n\ta[i]=read();\n\tbuild(1,m,1);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint op=read(),a=read(),b=read(),c;\n\t\tif(op==1)\n\t\t{\n\t\t\tc=read();\n\t\t\ttree now=ask(b,c,1);\n\t\t\ta>>=now.df;\n\t\t\ta=max(a,1ll);\n\t\t\ta<<=now.ds;\n\t\t\ta+=now.num;\n\t\t\tcout<<a<<'\\n'; \n\t\t}\n\t\telse\n\t\tchange(a,1,b);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1586513905,
        "uid": 196899,
        "name": "lndjy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5889 \u3010\u8df3\u6811\u3011"
    },
    {
        "content": "## \u8df3\u6811\n\n\u663e\u800c\u6613\u89c1\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u7ef4\u62a4\u4e24\u4e2a\u4fe1\u606f\uff1a\n\n1. \u6700\u591a\u5411\u4e0a\u8d70\u7684\u5c42\u6570\u3002\n2. \u8d70\u5230\u6700\u4e0a\u4e4b\u540e\uff0c\u82e5\u6700\u4e0a\u9762\u7684\u70b9\u4e3a $1$ \u53f7\u70b9\uff0c\u5219\u4f1a\u8d70\u5230\u51e0\u53f7\u70b9\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u4fe1\u606f\u53ef\u4ee5 $\\mathcal O(1)$ \u5408\u5e76\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O((m + q\\log m)n)$\uff0c\u5e38\u6570\u8f83\u5c0f\u3002\n\n```cpp\nconst int N = 5e5 + 7;\nint n, m, q, x, p[37];\nstruct T {\n\tint l, r;\n\tpi x;\n} t[N<<2];\n\ninline int get(int x) {\n\tif (!x) return 0;\n\tint y;\n\twhile (x) y = x, x -= x & -x;\n\treturn p[y%37];\n}\n\ninline pi operator + (pi a, pi b) {\n\tint o = get(a.se);\n\tif (b.fi <= o) {\n\t\to = get(b.se);\n\t\treturn mp(a.fi, ((a.se >>= b.fi) ? a.se : 1) << o | (b.se ^ (1 << o)));\n\t}\n\treturn mp(a.fi + b.fi - o, b.se);\n}\n\nvoid build(int p, int l, int r) {\n\tt[p].l = l, t[p].r = r;\n\tif (l == r)\n\t\treturn rd(x), t[p].x = x == 3 ? mp(1, 1) : mp(0, x + 1), void();\n\tbuild(ls, l, md), build(rs, md + 1, r);\n\tt[p].x = t[ls].x + t[rs].x; \n}\n\npi ask(int p, int l, int r) {\n\tif (t[p].l >= l && t[p].r <= r) return t[p].x;\n\tpi o = mp(0, 1);\n\tif (l <= md) o = o + ask(ls, l, r);\n\tif (r > md) o = o + ask(rs, l, r);\n\treturn o;\n}\n\nvoid chg(int p, int x, int y) {\n\tif (t[p].l == t[p].r)\n\t\treturn t[p].x = y == 3 ? mp(1, 1) : mp(0, y + 1), void();\n\tchg(x <= md ? ls : rs, x, y);\n\tt[p].x = t[ls].x + t[rs].x;\n}\n\nint main() {\n\trd(n), rd(m), rd(q);\n\tfor (int i = 0, j = 1; i <= n; i++, j <<= 1) p[j%37] = i;\n\tbuild(1, 1, m);\n\twhile (q--) {\n\t\tint o;\n\t\trd(o);\n\t\tif (o == 1) {\n\t\t\tint s, l, r;\n\t\t\trd(s), rd(l), rd(r), print((mp(0, s) + ask(1, l, r)).se);\n\t\t} else {\n\t\t\tint x, y;\n\t\t\trd(x), rd(y), chg(1, x, y);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1577956343,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5889 \u3010\u8df3\u6811\u3011"
    },
    {
        "content": "\u5728\u770b\u4e86 @xht37 \u7684\u9898\u89e3\u4e4b\u540e\u604d\u7136\u5927\u609f\uff0c\u5176\u5b9e\u518d\u52a0\u70b9\u4f18\u5316\u5c31\u53ef\u4ee5\u628a\u590d\u6742\u5ea6\u91cc\u7684 $n$ \u7ed9\u53bb\u6389\u4e86\u3002\u3002\u3002\n\n\u4e8e\u662f\u51b3\u5b9a\u5199\u4e00\u7bc7\u66f4\u8be6\u7ec6\u7684\u9898\u89e3\uff0c\u8fd9\u9898\u7684\u601d\u8def\u5341\u5206\u5de7\u5999\n\n\u770b\u5230\u5e8f\u5217\u9898\uff0c\u9996\u5148\u60f3\u5230\u7ebf\u6bb5\u6811\n\n\u5148\u786e\u5b9a\u51e0\u4e2a\u53d8\u91cf:\n```cpp\n\tint minsum;//\u4ecel\u5f00\u59cb\u7684\u6700\u5c0f\u524d\u7f00\u548c(1,2->1,3->-1)\n\tint k;\n\tint change;//\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5148\u8d70k\u7ea7\u7956\u5148\u7136\u540e\u518d\u8d70\u7b49\u4ef70/1\u4e32(\u5de6->0,\u53f3->1) change\u8868\u793a\u7b49\u4ef701\u4e32\n\tint len;//change\u7684\u5b9e\u9645\u957f\u5ea6 \n\tint point;//\u5982\u679c\u5728\u6700\u5c0f\u524d\u7f00\u548c\u5904\u8d70\u5230\u6839\u8282\u70b9\u5219\u6700\u7ec8\u4f1a\u8d70\u5230\u54ea \n```\n$minsum$\u5f88\u597d\u5408\u5e76\uff0c\u548c\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u662f\u4e00\u6837\u7684\n\n\u5176\u4ed6\u64cd\u4f5c\u5462\n\n\u9996\u5148\uff0c\u5982\u679c\u4e0d\u8003\u8651\u8d70\u5230\u6839\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u5148\u4e0d\u8003\u8651$point$\u8be5\u600e\u4e48\u5408\u5e76,\u6211\u4eec\u53ef\u4ee5\u628a\u64cd\u4f5c\u8fdb\u884c\u7b49\u4ef7\n\n$ 1->x=(x<<1) $\n\n$ 2->x=(x<<1|1) $\n\n$ 3->x=(x>>1) $ \n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u6765\u5b9e\u73b0\u5408\u5e76\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u662f\u901a\u8fc7\u91cd\u8f7d\u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u5408\u5e76\u7684\uff09:\n```cpp\nnode operator +(const node &x)const{\n\t\tnode ret;\n\t\tret.l=l;\n\t\tret.r=x.r;\n\t\tret.sum=sum+x.sum;\n\t\tif(x.k>len){//\u5982\u679c\u8d70\u5b8c\u5de6\u53f3\u513f\u5b50\u4e4b\u540e\u53c8\u8d70\u56de\u6765\u4e86\n\t\t\tint tok=k+x.k-len;//\u76f8\u5f53\u4e8e\u5411\u4e0a\u591a\u8d70\u4e86x.k-len\u6b65\n\t\t\tret.k=tok;\n\t\t\tret.change=x.change;//\u8d70\u5b8c\u4ee5\u540e\u6309\u7167\u53f3\u8282\u70b9\u768401\u4e32\u8d70\n\t\t\tret.len=x.len;\n\t\t}\n\t\telse{\n\t\t\tint tolen=len-x.k+x.len;//\u5148\u5f80\u4e0a\u8d70k\u6b65\uff0c\u518d\u5f80\u4e0b\u8d70\n\t\t\tint tochange=(change>>x.k);//\u5f80\u4e0a\u8d70k\u6b65\n\t\t\ttochange=((tochange<<x.len)|x.change);//\u5f80\u4e0b\u8d70\n\t\t\tret.len=tolen;\n\t\t\tret.change=tochange;\n\t\t\tret.k=k;\n\t\t}\n\t\treturn ret;\n}\n```\n\u73b0\u5728\u8003\u8651\u5408\u5e76 $point$\n\n\u6211\u4eec\u5e73\u5e38\u5408\u5e76 $minsum$ \u662f\u8fd9\u4e48\u5408\u5e76\n\n```cpp\nret.minsum=min(minsum,sum+x.minsum);\n```\n\u5982\u679c\u5f53\u524d\u64cd\u4f5c\u8fc7\u7a0b\u4f1a\u8ba9\u8282\u70b9\u8d70\u5230\u6839\uff0c\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u5bf9\u5e94\u5728\u5de6\u5b50\u8282\u70b9\u64cd\u4f5c\u540e\u5df2\u7ecf\u8d70\u5230\u6839\uff0c\u800c\u4e14\u6ca1\u6709\u56de\u5230\u6839\uff0c\u548c\u5728\u8fdb\u884c\u5b8c\u5de6\u5b50\u8282\u70b9\u7684\u64cd\u4f5c\u540e\u5728\u53f3\u5b50\u8282\u70b9\u7684\u64cd\u4f5c\u4e2d\u518d\u6b21\u8d70\u5230\u6839\n\n\u5f04\u660e\u767d\u8fd9\u4e2a\uff0c\u5408\u5e76\u5c31\u5f88\u663e\u7136\u4e86\n\n```cpp\n\t\tif(sum+x.minsum<minsum){\n\t\t\tret.minsum=sum+x.minsum;\n\t\t\tret.point=x.point;//\u5728\u53f3\u5b50\u8282\u70b9\u8d70\u5230\u6839\uff0c\u76f4\u63a5\u7ee7\u627f\u53f3\u5b50\u8282\u70b9\u7684point\n\t\t}\n\t\telse{\n\t\t\tret.minsum=minsum;\n\t\t\tret.point=(((point>>x.k)<<x.len)|x.change);//\u548c\u4e4b\u524d\u5408\u5e76change\u4e00\u4e2a\u9053\u7406\n\t\t}\n```\n\n\u5355\u70b9\u4fee\u6539\u662f\u57fa\u672c\u7ebf\u6bb5\u6811\u64cd\u4f5c\n\n\u8be2\u95ee\u65f6\uff0c\u67e5\u8be2\u4e00\u4e0b $l$ \u5230 $r$ \u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u5e76\n\n\u8bbe $s$ \u7684\u6df1\u5ea6\u4e3a $deep$ (\u6839\u8282\u70b9\u4e3a0)\n\n\u5982\u679c $minsum\\leq -deep$ \u90a3\u4e48\u8bf4\u660e\u66fe\u7ecf\u8d70\u5230\u8fc7\u6839(\u5f80\u4e0a\u8d70 $deep-=1$ ),\u8f93\u51fa $point$\n\n\u5426\u5219\uff0c\u6309\u7167\u4e4b\u524d\u5408\u5e76$point$\u7684\u65b9\u6cd5\uff0c\u8f93\u51fa $((s>>k)<<len)|change$\n\n\u4ee3\u7801\u5199\u7684\u6bd4\u8f83\u957f\uff0c\u5176\u5b9e\u5f88\u591a\u4e1c\u897f\u662f\u5199\u590d\u6742\u4e86\u7684\uff0c\u5b9e\u9645\u4e0a\u5e94\u8be5100\u884c\u5de6\u53f3\u5c31\u80fd\u89e3\u51b3\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m,q;\nint a[500010];\nstruct node{\n\tint l;\n\tint r;\n\tint sum;\n\tint minsum;//\u4ecel\u5f00\u59cb\u7684\u6700\u5c0f\u524d\u7f00\u548c(1,2->1,3->-1)\n\tint k;\n\tint change;//\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5148\u8d70k\u7ea7\u7956\u5148\u7136\u540e\u518d\u8d70\u7b49\u4ef70/1\u4e32(\u5de6->0,\u53f3->1) \n\tint len;//\u603b\u64cd\u4f5c\u957f \n\tint point;//\u5982\u679c\u8d70\u5230\u6839\u8282\u70b9\u5219\u6700\u7ec8\u4f1a\u8d70\u5230\u54ea \n\tnode operator +(const node &x)const{\n\t\tnode ret;\n\t\tret.l=l;\n\t\tret.r=x.r;\n\t\tret.sum=sum+x.sum;\n\t\tif(sum+x.minsum<minsum){\n\t\t\tret.minsum=sum+x.minsum;\n\t\t\tret.point=x.point;\n\t\t}\n\t\telse{\n\t\t\tret.minsum=minsum;\n\t\t\tret.point=(((point>>x.k)<<x.len)|x.change);\n\t\t}\n\t\tif(x.k>len){\n\t\t\tint tok=k+x.k-len;\n\t\t\tret.k=tok;\n\t\t\tret.change=x.change;\n\t\t\tret.len=x.len;\n\t\t}\n\t\telse{\n\t\t\tint tolen=len-x.k;\n\t\t\tint tochange=(change>>x.k);\n\t\t\ttochange=((tochange<<x.len)|x.change);\n\t\t\ttolen+=x.len;\n\t\t\tret.len=tolen;\n\t\t\tret.change=tochange;\n\t\t\tret.k=k;\n\t\t}\n\t\treturn ret;\n\t}\n}tree[2000010];\nvoid build(int now,int l,int r){\n\ttree[now].l=l;\n\ttree[now].r=r;\n\tif(l==r){\n\t\tif(a[l]==1){\n\t\t\ttree[now].minsum=tree[now].sum=1;\n\t\t\ttree[now].len=1;\n\t\t\ttree[now].k=0;\n\t\t\ttree[now].change=0;\n\t\t\ttree[now].point=1;\n\t\t}\n\t\telse if(a[l]==2){\n\t\t\ttree[now].minsum=tree[now].sum=1;\n\t\t\ttree[now].len=1;\n\t\t\ttree[now].k=0;\n\t\t\ttree[now].change=1;\n\t\t\ttree[now].point=1;\n\t\t}\n\t\telse{\n\t\t\ttree[now].minsum=tree[now].sum=-1;\n\t\t\ttree[now].len=0;\n\t\t\ttree[now].k=1;\n\t\t\ttree[now].change=0;\n\t\t\ttree[now].point=1;\n\t\t}\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(now*2,l,mid);\n\tbuild(now*2+1,mid+1,r);\n\ttree[now]=tree[now*2]+tree[now*2+1];\n//\tcout<<\"#\"<<l<<\" \"<<r<<endl;\n//\tcout<<tree[now].point<<\" \"<<tree[now].change<<endl;\n}\nvoid change(int now,int x){\n\tint l=tree[now].l;\n\tint r=tree[now].r;\n\tif(l==r&&l==x){\n\t\tif(a[x]==1){\n\t\t\ttree[now].minsum=tree[now].sum=1;\n\t\t\ttree[now].len=1;\n\t\t\ttree[now].k=0;\n\t\t\ttree[now].change=0;\n\t\t}\n\t\telse if(a[x]==2){\n\t\t\ttree[now].minsum=tree[now].sum=1;\n\t\t\ttree[now].len=1;\n\t\t\ttree[now].k=0;\n\t\t\ttree[now].change=1;\n\t\t}\n\t\telse{\n\t\t\ttree[now].minsum=tree[now].sum=-1;\n\t\t\ttree[now].len=0;\n\t\t\ttree[now].k=1;\n\t\t\ttree[now].change=0;\n\t\t}\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(x<=mid){\n\t\tchange(now*2,x);\n\t}\n\telse{\n\t\tchange(now*2+1,x);\n\t}\n\ttree[now]=tree[now*2]+tree[now*2+1];\n}\nnode query(int now,int x,int y){\n\tint l=tree[now].l;\n\tint r=tree[now].r;\n\tif(l==x&&r==y){\n\t\treturn tree[now];\n\t}\n\tint mid=(l+r)/2;\n\tif(y<=mid){\n\t\treturn query(now*2,x,y);\n\t}\n\telse if(x>mid){\n\t\treturn query(now*2+1,x,y);\n\t}\n\telse{\n\t\treturn query(now*2,x,mid)+query(now*2+1,mid+1,y);\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tbuild(1,1,m);\n\twhile(q--){\n\t\tint opt;\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt==1){\n\t\t\tint s,l,r;\n\t\t\tscanf(\"%d%d%d\",&s,&l,&r);\n\t\t\tnode now=query(1,l,r);\n\t\t\tint deep=0;\n\t\t\tfor(int i=0;i<=30;i++){\n\t\t\t\tif((s>>i)&1)deep=i;\n\t\t\t}\n\t\t\tif(now.minsum<=-deep){\n\t\t\t\tprintf(\"%d\\n\",now.point);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"%d\\n\",((s>>now.k)<<now.len)|now.change);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\ta[x]=y;\n\t\t\tchange(1,x);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1577969927,
        "uid": 118058,
        "name": "zzy2333",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5889 \u3010\u8df3\u6811\u3011"
    },
    {
        "content": "1.3s 5e5 \u5206\u5757 \u597d \u2713\n\n\u6ca1\u52a0\u5565\u5e38\u6570\u4f18\u5316\uff0c\u6700\u5927\u70b9\u8dd1\u4e86 1.19s\uff0c\u611f\u89c9\u8fd8\u884c\uff08\uff1f\n\n---\n\n\u628a\u8fd9\u68f5\u4e8c\u53c9\u6811\u8282\u70b9\u7f16\u53f7\u5f53\u4f5c\u4e8c\u8fdb\u5236\u6765\u770b\uff0c  \n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u533a\u95f4\u7684\u64cd\u4f5c\u4ec5\u4f1a\u5f71\u54cd\u5f53\u524d\u7b54\u6848\u7684\u540e\u7f00\uff08\u6574\u4f53\u4e5f\u7b97\uff09\u3002  \n\u4e8e\u662f\u8003\u8651\u5206\u5757\u7ef4\u62a4\u4fe1\u606f\uff0c\u8bb0\u5f55\u4e00\u4e2a\u5757\u6574\u4f53\u4f1a\u5f71\u54cd\u7b54\u6848\u540e\u7f00\u7684\u4f4d\u6570\uff0c\u518d\u8bb0\u5f55\u5f71\u54cd\u7684\u7ed3\u679c\u3002\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u5047\u8bbe\u5f53\u524d\u70b9\u7f16\u53f7\u4e3a $x$\uff0c\u52a0\u5165\u4e00\u4e2a 3 \u64cd\u4f5c\u5fc5\u7136\u4f1a\u5f71\u54cd\u5176\u6700\u540e\u4e00\u4f4d\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u5176\u8bb0\u5f55\u3002  \n\u800c\u5148\u52a0\u5165 1 \u518d\u52a0\u5165 3 \u5219\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u5c31\u4e0d\u8bb0\u5f55\u3002  \n\n\u5728\u6b64\u4e4b\u540e\uff0c\u6700\u540e\u7684\u7b54\u6848\u80af\u5b9a\u662f\u5f53\u524d\u8282\u70b9\u5b50\u6811\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u4e5f\u5373\u5f53\u524d\u8282\u70b9\u7f16\u53f7\u4e00\u5b9a\u662f\u7b54\u6848\u7684\u4e00\u4e2a\u524d\u7f00\u3002  \n\u90a3\u4e48\u6211\u4eec\u66b4\u529b\u7ef4\u62a4\u7b54\u6848\u5728\u5f53\u524d\u8282\u70b9\u7f16\u53f7\u540e\u6dfb\u52a0\u7684\u6570\u5b57\uff08\u5373\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u6a21\u62df\u5f97\u5230\u7684\u7ed3\u679c\uff09\uff0c\u67e5\u8be2\u65f6\u5373\u53ef $\\mathcal O(1)$ \u67e5\u8be2\u6574\u5757\u3002\n\n\u6563\u5757\u76f4\u63a5\u66b4\u529b\u5373\u53ef\u3002\n\n\u7ec6\u8282\u4e0d\u591a\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\mathcal O(m+q(\\frac mB + B))$\uff0c$B$ \u53d6 $\\sqrt m$ \u65f6\u6700\u4f18\u3002\n\n---\n\n\u4ee3\u7801\uff1a\n\n```c\nint main() {\n    read(n), read(m), read(q); \n    for (int i = 1, rt = 1, ld = 0; i <= m; ++ i) {\n        read(op[i]), bl[i] = (i - 1) / blksz + 1; \n        if (bl[i] != bl[i - 1]) \n            lp[bl[i - 1]] = ld, tp[bl[i - 1]] = rt, ct[bl[i - 1]] = 31 - __builtin_clz(rt), ld = 0, rt = 1; \n        if (op[i] == 3) \n            rt == 1? ++ ld: rt >>= 1; \n        if (op[i] == 1) \n            rt = rt << 1; \n        if (op[i] == 2) \n            rt = rt << 1 | 1; \n        if (i == m) \n            lp[bl[m]] = ld, tp[bl[m]] = rt, ct[bl[m]] = 31 - __builtin_clz(rt); \n    }\n    bl[m + 1] = bl[m] + 1; \n    while (q --) {\n        read(ty); \n        if (ty == 1) {\n            read(ans), read(l), read(r); \n            int pl = bl[l - 1] + 1, pr = bl[r + 1] - 1; \n            if (pl > pr) {\n                for (int i = l; i <= r; ++ i) {\n                    if (op[i] == 3) \n                        ans > 1? ans >>= 1: 0; \n                    if (op[i] == 1) \n                        ans <<= 1; \n                    if (op[i] == 2) \n                        ans = ans << 1 | 1; \n                }\n                printf(\"%d\\n\", ans); \n                continue; \n            }\n            for (int i = l; bl[i] != pl; ++ i) {\n                if (op[i] == 3) \n                    ans > 1? ans >>= 1: 0; \n                if (op[i] == 1) \n                    ans <<= 1; \n                if (op[i] == 2) \n                    ans = ans << 1 | 1; \n            }\n            for (int i = pl; i <= pr; ++ i) {\n                if (lp[i] >= 30 || !(ans >> lp[i])) \n                    ans = tp[i]; \n                else \n                    ans = ans >> lp[i] << ct[i] | (tp[i] ^ (1 << ct[i])); \n            }\n            for (int i = pr * blksz + 1; i <= r; ++ i) {\n                if (op[i] == 3) \n                    ans > 1? ans >>= 1: 0; \n                if (op[i] == 1) \n                    ans <<= 1; \n                if (op[i] == 2) \n                    ans = ans << 1 | 1; \n            }\n            printf(\"%d\\n\", ans); \n        }\n        else {\n            read(l), read(r); \n            op[l] = r; \n            int ld = 0, rt = 1; \n            for (int i = bl[l] * blksz - blksz + 1; i <= bl[l] * blksz && i <= m; ++ i) {\n                if (op[i] == 3) \n                    rt == 1? ++ ld: rt >>= 1; \n                if (op[i] == 1) \n                    rt = rt << 1; \n                if (op[i] == 2) \n                    rt = rt << 1 | 1; \n            }\n            lp[bl[l]] = ld, tp[bl[l]] = rt, ct[bl[l]] = 31 - __builtin_clz(rt); \n        }\n    }\n    return 0; \n}\n```",
        "postTime": 1639993149,
        "uid": 339883,
        "name": "61satSea",
        "ccfLevel": 0,
        "title": "\u6c34\u6c34"
    },
    {
        "content": "\u82e5\u5f53\u524d\u70b9\u4e3a $x$\u3002\n\n\u64cd\u4f5c $1$ \u76f8\u5f53\u4e8e ```x << 1```\uff0c\u64cd\u4f5c $2$ \u76f8\u5f53\u4e8e ```x << 1 | 1```\uff0c\u64cd\u4f5c $3$ \u76f8\u5f53\u4e8e ```x >> 1```\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5bb9\u6613\u53d1\u73b0\u5bf9\u4e8e\u7ed9\u5b9a\u7684 $s$ \u548c\u533a\u95f4 $[l,r]$\uff0c\u6700\u7ec8\u7b54\u6848\u5f62\u5f0f\u4e00\u5b9a\u662f\u7c7b\u4f3c ```(x>>down)<<up|value``` \u7684\u5f62\u5f0f\u3002\n\n\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e00\u4e2a\u8282\u70b9\uff0c\u7ef4\u62a4\u6240\u7ba1\u7406\u533a\u95f4 $[l,r]$ \u7684 $down,up,value$\u3002\n\n```cpp\nstruct Node\n{\n\tint dw,up,val;\n}tr[M*4+5];\n```\n\n\u7136\u540e\u53d1\u73b0\u5b83\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u8054\u7cfb\u4e0a\u9762\u7684 \u7b54\u6848\u5f62\u5f0f\uff0c\u5bb9\u6613\u5199\u51fa\u5408\u5e76\u3002\n\n```cpp\nNode operator+(Node a,Node b)\n{\n\tNode c;\n\tc.val=((a.val>>b.dw)<<b.up)|b.val;\n\tc.dw=a.dw+max(b.dw-a.up,0)\uff1b\n\tc.up=max(a.up-b.dw,0)+b.up;\n\treturn c;\n}\n```\n\n\u6700\u540e\u6ce8\u610f\u5230\u9898\u76ee\u7ed9\u51fa\u7684\u6839\u662f $1$\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u7b54\u6848\u5176\u5b9e\u662f ```((max(x>>res.dw,1)<<res.up)|res.val)```\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int M(5e5);\nint n,m,q,op[M+5];\nstruct Node\n{\n\tint dw,up,val;\n}tr[M*4+5];\nNode operator+(Node a,Node b)\n{\n\tNode c;\n\tc.val=((a.val>>b.dw)<<b.up)|b.val;\n\tc.dw=a.dw+max(b.dw-a.up,0);\n\tc.up=max(a.up-b.dw,0)+b.up;\n\treturn c;\n}\nNode init(int op)\n{\n\tif(op==1) return Node{0,1,0};\n\tif(op==2) return Node{0,1,1};\n\treturn Node{1,0,0};\n}\n#define mid (L+R>>1)\n#define Ls rt<<1,L,mid\n#define Rs rt<<1|1,mid+1,R\n#define Ts int rt=1,int L=1,int R=m\nvoid build(Ts)\n{\n\tif (L==R) return tr[rt]=init(op[L]),void();\n\tbuild(Ls),build(Rs),tr[rt]=tr[rt<<1]+tr[rt<<1|1];\n}\nvoid modify(int p,int k,Ts)\n{\n\tif (L==R) return tr[rt]=init(k),void();\n\tp<=mid?modify(p,k,Ls):modify(p,k,Rs);\n\ttr[rt]=tr[rt<<1]+tr[rt<<1|1];\n}\nvoid query(int l,int r,Node &res,Ts)\n{\n\tif (l<=L&&R<=r) return res=res+tr[rt],void();\n\tif (l<=mid) query(l,r,res,Ls);\n\tif (r>mid) query(l,r,res,Rs);\n\ttr[rt]=tr[rt<<1]+tr[rt<<1|1];\n}\n#undef mid\n#undef Ls\n#undef Rs\n#undef Ts\nint main()\n{\n\tcin.tie(0)->sync_with_stdio(0);\n\tcin>>n>>m>>q;\n\tfor(int i(1);i<=m;++i)cin>>op[i];\n\tbuild();\n\tfor (long long typ,x,y,z;q--;)//\u6c42\u6559\u4e3a\u5565\u8981long long\n\t{\n\t\tcin>>typ>>x>>y;\n\t\tif (typ==1)\n\t\t{\n\t\t\tcin>>z;\n\t\t\tNode res({0,0,0});\n\t\t\tquery(y,z,res);\n\t\t\tcout<<((max(x>>res.dw,1ll)<<res.up)|res.val)<<'\\n';\n\t\t}else modify(x,y);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1670674622,
        "uid": 312306,
        "name": "LJ07",
        "ccfLevel": 0,
        "title": "[Solution]P5889 \u8df3\u6811"
    }
]