[
    {
        "content": "\u72b6\u538b\u597d\u9898\uff0c\u5e0c\u671b\u5199\u7684\u8db3\u591f\u8be6\u7ec6\u3002\n\n[\u5403\u8d27 JYY](https://www.luogu.com.cn/problem/P6085)\n\n> \u7ed9\u5b9a\u4e00\u5f20\u56fe\uff0c\u6709\u4e00\u4e9b\u5fc5\u7ecf\u8fb9\uff0c\u6c42\u4ece $1$ \u51fa\u53d1\uff0c\u7ecf\u8fc7\u6bcf\u6761\u5fc5\u7ecf\u8fb9\u81f3\u5c11\u4e00\u904d\uff0c\u6700\u540e\u56de\u5230 $1$ \u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u9996\u5148\u4ed6\u7684\u65c5\u884c\u8fc7\u7a0b\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\u662f\u4e00\u5b9a\u662f\u4e00\u6761\u6b27\u62c9\u56de\u8def\uff0c\u800c\u6b27\u62c9\u56de\u8def\u5b58\u5728\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a\n\n1. \u56fe\u8fde\u901a\u3002\n2. \u6240\u6709\u70b9\u7684\u5ea6\u6570\u90fd\u4e3a\u5076\u6570\u3002\n\n\u5fc5\u7ecf\u8fb9\u5fc5\u9009\uff0c\u76f8\u5f53\u4e8e\u9700\u8981\u5728\u5fc5\u7ecf\u8fb9\u7684\u57fa\u7840\u4e0a\u4e0d\u65ad\u52a0\u8fb9\uff0c\u4f7f\u56fe\u8fde\u901a\u4e14\u6240\u6709\u70b9\u7684\u5ea6\u6570\u5747\u4e3a\u5076\u6570\u3002\n\n\u7136\u540e\u770b\u5230\u6570\u636e\u8303\u56f4 $n\\leq 13$ \u4e0d\u96be\u60f3\u5230\u72b6\u538b\uff0c\u5173\u952e\u662f\u65e2\u6ee1\u8db3\u56fe\u8fde\u901a\u53c8\u6ee1\u8db3\u5ea6\u6570\u4e3a\u5076\u6570\u8fd9\u4e0d\u592a\u597d\u5904\u7406\u3002\n\n\u8003\u8651\u4e00\u4e2a\u7b80\u5316\u95ee\u9898\uff1a\n\n> \u7ed9\u51fa\u4e00\u5f20\u56fe\u548c\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\uff0c\u6c42\u5c06\u56fe\u6539\u9020\u4e3a\u6b27\u62c9\u56fe\u9700\u8981\u52a0\u7684\u6700\u5c0f\u8fb9\u6743\u548c\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\u5982\u679c\u4e00\u5f20\u8fde\u901a\u56fe\u4e0d\u662f\u6b27\u62c9\u56fe\uff0c\u90a3\u4e48\u5b83\u7684\u5947\u70b9\u4e2a\u6570\u4e3a\u5076\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7684\u662f\u8ba9\u6bcf\u5bf9\u5947\u70b9\u4e24\u4e24\u8fde\u63a5\u6700\u77ed\u8def\uff0c\u663e\u7136\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u5b83\u4eec\u53d8\u6210\u5076\u70b9\uff0c\u5e76\u4e14\u4e0d\u5f71\u54cd\u5176\u5b83\u70b9\u7684\u5ea6\u6570\u7684\u5947\u5076\u6027\u3002\n\n\u8fd9\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u72b6\u538b\uff0c\u8bbe $f(S)$ \u8868\u793a\u5947\u70b9\u96c6\u5408\u4e3a $S$ \u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u7136\u540e\u6bcf\u6b21\u679a\u4e3e\u4e24\u4e2a\u4e0d\u5728\u96c6\u5408\u4e2d\u7684\u5947\u70b9\u52a0\u5165\u5373\u53ef\u3002\n\n\u65f6\u95f4 $O(2^n\\times n^2)$\uff0c\u4e0d\u6392\u9664\u901a\u8fc7\u679a\u4e3e\u5b50\u96c6\u7b49\u65b9\u6cd5\u8fdb\u4e00\u6b65\u4f18\u5316\u7684\u53ef\u80fd\uff0c\u4e0d\u8fc7\u8fd9\u4e5f\u591f\u4e86\u3002\n\n\u73b0\u5728\u56de\u5230\u539f\u95ee\u9898\uff0c\u6211\u4eec\u60f3\u8981\u8fd0\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u9996\u5148\u9700\u8981\u5904\u7406\u51fa\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u9884\u5148 Floyd\u3002\n\n\u7136\u540e\u662f\u7ed9\u51fa\u4e00\u4e2a\u8fde\u901a\u56fe\u7684\u6bcf\u4e2a\u70b9\u7684\u5947\u5076\u6027\uff0c\u5f53\u7136\u4e5f\u8981\u5305\u542b\u70b9\u7684\u8fde\u901a\u6027\u3002\n\n\u8868\u73b0\u5728\u8fdb\u5236\u4e0a\uff0c\u5c31\u81f3\u5c11\u9700\u8981\u4e09\u8fdb\u5236\u8868\u793a\u4e86\uff1a\n\n1. $0$\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u4e0d\u4e0e $1$ \u53f7\u8282\u70b9\u8fde\u901a\u3002\n2. $1$\uff0c\u8868\u793a\u8fde\u901a\u5e76\u4e14\u5ea6\u6570\u4e3a\u5947\u6570\u3002\n3. $2$\uff0c\u8868\u793a\u8fde\u901a\u5e76\u4e14\u5ea6\u6570\u4e3a\u5076\u6570\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u9700\u8981\u53e6\u5916\u7684\u72b6\u6001\uff0c\u8868\u793a\u4e0d\u8fde\u901a\u7684\u70b9\u7684\u5947\u5076\u6027\uff0c\u56e0\u4e3a\u8fd9\u91cc\u8fd0\u7528\u4e86\u4e00\u4e2a\u7edf\u4e00\u8ba1\u7b97\u7684\u601d\u60f3\u3002\n\n\u5c31\u662f\u5f53\u524d\u53ea\u8003\u8651\u975e\u5fc5\u9009\u8fb9\u7684\u6784\u56fe\u60c5\u51b5\uff0c\u4e4b\u540e\u518d\u7edf\u4e00\u52a0\u4e0a\u5fc5\u7ecf\u8fb9\u7684\u5f71\u54cd\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u8fde\u901a\u7684\u70b9\u5c31\u662f\u6ca1\u6709\u8fde\u8fb9\u7684\u70b9\uff0c\u5ea6\u6570\u4e00\u5b9a\u4e3a $0$\u3002\n\n\u540c\u65f6\u8fd9\u6837\u4e5f\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u7528\u5230 $5$ \u7ef4\u72b6\u538b\u8fd9\u79cd\u6050\u6016\u7684\u4e1c\u897f\u3002\n\n\u7136\u540e\u6bcf\u6b21\u8f6c\u79fb\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u90fd\u662f\u4ece\u5df2\u8fde\u901a\u8fde\u901a\u7684\u70b9 $u$ \u51fa\u53d1\uff0c\u6269\u5c55\u5230\u672a\u8fde\u901a\u7684\u70b9 $v$\uff1a\n\n1. \u6cbf\u7740\u67d0\u6761\u5fc5\u7ecf\u8fb9\u5230\u8fbe $v$\uff0c$v$ \u8fde\u901a\u4e86\uff0c\u4f46\u662f\u5ea6\u6570\u7b97\u4f5c $0$\uff0c\u4e5f\u4e0d\u9700\u8981\u589e\u52a0\u4ee3\u4ef7\u3002\n2. \u6cbf\u7740\u67d0\u4e2a\u6700\u77ed\u8def\u5230\u8fbe $v$\uff0c$v$ \u8fde\u901a\u4e86\u4e14\u5ea6\u6570\u4e3a $1$\uff0c$u$ \u7684\u5ea6\u6570\u5947\u5076\u6027\u4e5f\u53d1\u751f\u53d8\u5316\uff0c\u4ee3\u4ef7\u52a0\u4e0a\u6700\u77ed\u8def\u7684\u8ddd\u79bb\u3002\n\n\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\uff0c\u72b6\u6001\u95f4\u7684\u8f6c\u79fb\u6ca1\u6709\u56fa\u5b9a\u7684\u65b9\u5411\uff0c\u56e0\u4e3a\u5ea6\u6570\u7531\u5076\u53d8\u5947\u65f6\uff0c\u5728\u5b8f\u89c2\u610f\u4e49\u4e0a\u76f8\u5f53\u4e8e\u6570\u53d8\u5c0f\uff0c\u800c\u7531\u5947\u53d8\u5076\u5219\u76f8\u53cd\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5229\u7528 SPFA \u7684\u601d\u60f3\u53cd\u590d\u8fed\u4ee3\uff0c\u76f4\u5230\u65e0\u6cd5\u66f4\u65b0\uff0c\u663e\u7136\u4fdd\u8bc1\u4e86\u6b63\u786e\u6027\u3002\n\n\u7136\u540e\u518d\u5229\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u7ed3\u5408\u51fa\u7b54\u6848\u4e86\uff0c\u4e0d\u8981\u5fd8\u8bb0\u52a0\u4e0a\u5fc5\u7ecf\u8fb9\u5bf9 \u70b9\u7684\u5ea6\u6570\u7684\u5947\u5076\u6027 \u548c \u603b\u4ee3\u4ef7 \u7684\u5f71\u54cd\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u4e3a $O(3^nn^2)$\uff0c\u9700\u8981\u8003\u8651\u5229\u7528 SPFA \u6536\u675f\u5e26\u6765\u7684\u5e38\u6570\u5f71\u54cd\u3002\uff08\u4e0d\u8fc7\u597d\u50cf\u53ef\u4ee5\u8bc1\u660e\u53ea\u4f1a\u6536\u675f\u4e00\u6b21\uff1f\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\nusing namespace std;\n\n#define X first\n#define Y second \n#define MP make_pair\ntypedef pair<int, int> PII;\nconst int N = 15, M = 2000010;\nconst int INF = 0x3f3f3f3f;\n\nint n, k, m, P[N], deg[N], dis[N][N], f[1 << N], g[M];\nbool vis[M];\nvector<PII> G[N];\n\nint read(){\n\tint x = 0, f = 1; char c = getchar();\n\twhile(c < '0' || c > '9') f = (c == '-') ? -1 : 1, c = getchar();\n\twhile(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n\treturn x * f;\n}\n\nvoid Pre_Work(){\n\tmemset(dis, 0x3f, sizeof(dis));\n\tfor(int i = 1; i <= n; i ++) dis[i][i] = 0;\n\tP[0] = 1;\n\tfor(int i = 1; i <= n; i ++) P[i] = P[i - 1] * 3;\n}\n\nvoid Get_Map(){\n\tmemset(g, 0x3f, sizeof(g)); g[2] = 0;\n\tqueue<int> q; q.push(2);\n\twhile(!q.empty()){\n\t\tint s = q.front(); q.pop();\n\t\tvis[s] = false;\n\t\t\n\t\tfor(int u = 0; u < n; u ++) if((s / P[u]) % 3 > 0)\n\t\tfor(int i = 0; i < (int) G[u].size(); i ++){\n\t\t\tint v = G[u][i].X;\n\t\t\tif((s / P[v]) % 3 == 0){\n\t\t\t\tint t = s + P[v] * 2;\n\t\t\t\tif(g[t] > g[s]){\n\t\t\t\t\tg[t] = g[s];\n\t\t\t\t\tif(!vis[t]) q.push(t), vis[t] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int u = 0; u < n; u ++) if((s / P[u]) % 3 > 0)\n\t\t\tfor(int v = 0; v < n; v ++) if((s / P[v]) % 3 == 0){\n\t\t\t\tint t = s + P[v];\n\t\t\t\tt += ((s / P[u]) % 3 == 1) ? P[u] : - P[u];\n\t\t\t\tif(g[t] > g[s] + dis[u][v]){\n\t\t\t\t\tg[t] = g[s] + dis[u][v];\n\t\t\t\t\tif(!vis[t]) q.push(t), vis[t] = true;\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n\nvoid Get_Dis(){\n\tmemset(f, 0x3f, sizeof(f));\n\tf[0] = 0;\n\tfor(int s = 0; s < (1 << n); s ++)\n\t\tfor(int u = 0; u < n; u ++) if(!(s >> u & 1))\n\t\t\tfor(int v = u + 1; v < n; v ++) if(!(s >> v & 1)){\n\t\t\t\tint t = s + (1 << u) + (1 << v);\n\t\t\t\tf[t] = min(f[t], f[s] + dis[u][v]);\n\t\t\t}\n}\n\nint main(){\n\tn = read(), k = read();\n\tPre_Work(); int sum = 0;\n\tfor(int i = 1; i <= k; i ++){\n\t\tint u = read() - 1, v = read() - 1, w = read();\n\t\tG[u].push_back(MP(v, w));\n\t\tG[v].push_back(MP(u, w));\n\t\tdis[u][v] = dis[v][u] = min(dis[u][v], w);\n\t\tdeg[u] ++, deg[v] ++; sum += w;\n\t}\n\tm = read();\n\tfor(int i = 1; i <= m; i ++){\n\t\tint u = read() - 1, v = read() - 1, w = read();\n\t\tdis[u][v] = dis[v][u] = min(dis[u][v], w);\n\t}\n\t\n\tfor(int k = 0; k < n; k ++)\n\t\tfor(int i = 0; i < n; i ++) if(dis[i][k] != INF)\n\t\t\tfor(int j = 0; j < n; j ++) if(dis[k][j] != INF)\n\t\t\t\tdis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);\n\t\n\tGet_Map(); Get_Dis();\n\t\n\tint ans = INF;\n\tfor(int i = 0; i < P[n]; i ++){\n\t\tint s = i;\n\t\tbool flag = false;\n\t\tfor(int u = 0; u < n; u ++)\n\t\t\tif(G[u].size() && !((s / P[u]) % 3)) {flag = true; break;}\n\t\tif(flag) continue;\n\t\tfor(int u = 0; u < n; u ++)\n\t\t\tif(deg[u] & 1) s += ((i / P[u]) % 3 == 1) ? P[u] : - P[u];\n\t\tint t = 0;\n\t\tfor(int u = 0; u < n; u ++)\n\t\t\tif((s / P[u]) % 3 == 1) t += (1 << u);\n\t\tans = min(ans, g[i] + f[t]);\n\t}\n\tprintf(\"%d\\n\", ans + sum);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1626525532,
        "uid": 117941,
        "name": "_LPF_",
        "ccfLevel": 9,
        "title": "P6085 [JSOI2013]\u5403\u8d27 JYY"
    },
    {
        "content": "## \\# \u9898\u9762\n\\> Linked [\u6d1b\u8c37 P6085](https://www.luogu.com.cn/problem/P6085)\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \uff08$2\\le n\\le13$\uff09\u4e2a\u70b9 $m+K$ \uff08$2\\le m\\le200,0\\le K\\le78$\uff09\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u6709\u8fb9\u6743\uff0c\u5176\u4e2d\u6709 $K$ \u6761\u662f\u7279\u6b8a\u8fb9\u3002\n\n\u4f60\u4ece\u8282\u70b9 $1$ \u51fa\u53d1\uff0c\u6bcf\u6b21\u53ea\u80fd\u6cbf\u7740\u4e0e\u5f53\u524d\u8282\u70b9\u76f8\u90bb\u7684\u8fb9\u524d\u5f80\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u8282\u70b9\u548c\u8fb9\u90fd\u53ef\u4ee5\u7ecf\u8fc7\u591a\u6b21\uff0c\u4e14\u6bcf\u7ecf\u8fc7\u4e00\u6b21\u8fb9\u5c31\u4f1a\u82b1\u8d39\u5176\u8fb9\u6743\u7684\u4ee3\u4ef7\u3002\n\n\u73b0\u5728\u8981\u6c42\u4f60\u5fc5\u987b\u8981\u7ecf\u8fc7\u6240\u6709\u7279\u6b8a\u8fb9\u7136\u540e\u56de\u5230\u8282\u70b9 $1$\uff0c\u6c42\u6700\u5c0f\u82b1\u8d39\u3002\n\n---\n## \\# \u89e3\u6790\n\u770b\u5230\u70b9\u6570\u597d\u5c0f\u5c31\u60f3\u8981\u72b6\u538b\uff0c\u4f46\u662f\u600e\u4e48\u538b\uff1f\n\n\u5148\u8f6c\u5316\u4e00\u4e0b\u95ee\u9898\uff0c\u7531\u4e8e\u4e00\u6761\u8fb9\u53ef\u4ee5\u7ecf\u8fc7\u4efb\u610f\u591a\u6b21\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u4e00\u6761\u975e\u7279\u6b8a\u8fb9\u62c6\u6210\u65e0\u6570\u6761\u91cd\u8fb9\uff0c\u800c**\u4e00\u6761\u7279\u6b8a\u8fb9\u62c6\u6210\u4e00\u6761\u7279\u6b8a\u8fb9\u548c\u65e0\u6570\u6761\u975e\u7279\u6b8a\u91cd\u8fb9**\uff1b\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u2014\u2014\u9009\u51fa\u4e00\u4e2a\u8fb9\u96c6 $E$ \u4f7f\u5f97 $E$ \u5305\u542b\u6240\u6709\u7279\u6b8a\u8fb9\uff0c\u5e76\u4e14 $E$ \u5b58\u5728\u4e00\u6761\u4ece $1$ \u51fa\u53d1\u7684**\u6b27\u62c9\u56de\u8def**\u3002\n\n\u518d\u6765\u56de\u987e\u4e00\u4e0b\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u5145\u8981\u6761\u4ef6\uff1a\n\n- \u8bbe $V$ \u662f $E$ \u7684\u6240\u6709\u7aef\u70b9\u7684\u70b9\u96c6\uff0c\u5219 $V$ \u901a\u8fc7 $E$ \u53ef\u4ee5\u5f62\u6210\u8fde\u901a\u5757\uff1b\n- \u6240\u6709\u70b9\u5728 $E$ \u4e2d\u7684\u5ea6\u6570\u5747\u4e3a\u5076\u6570\u3002\n\n\uff08\u4ee5\u4e0b\u81ea\u52a8\u5ffd\u7565\u6ca1\u6709\u7279\u6b8a\u8fb9\u7684\u60c5\u51b5\uff0c\u8be5\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u5728\u70b9 $1$ \u4e0d\u52a8\uff09\n\n\u7531\u4e8e\u9898\u76ee\u7684\u9650\u5236 $V$ \u5fc5\u987b\u5305\u542b\u70b9 $1$\u3002\u4e8e\u662f\u53ef\u4ee5\u60f3\u5230\u7528\u72b6\u538b\u6765\u8868\u793a\u5f53\u524d\u5305\u542b $1$ \u7684\u8fde\u901a\u5757\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u4e0d\u5728\u8fde\u901a\u5757\u4e2d\uff0c\u5219\u5176\u5ea6\u6570\u4e3a $0$\uff0c\u4e00\u5b9a\u7b26\u5408\u5ea6\u6570\u9650\u5236\uff1b\u800c\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u8fde\u901a\u5757\u4e2d\uff0c\u5219\u53ef\u80fd\u5b58\u5728\u6682\u65f6\u4e3a\u5947\u6570\u5ea6\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5728\u8fde\u901a\u5757\u5185\u7684\u70b9\uff0c\u9700\u8981\u8bb0\u5f55\u5ea6\u6570\u7684\u5947\u5076\u6027\u3002\n\n\u7531\u4e8e\u7279\u6b8a\u8fb9\u4e00\u5b9a\u5728 $E$ \u4e2d\uff0c\u7279\u6b8a\u8fb9**\u5bf9\u603b\u82b1\u8d39**\u4ee5\u53ca**\u5bf9\u70b9\u7684\u5ea6\u6570**\u7684\u8d21\u732e\u662f**\u786e\u5b9a\u7684**\u3002\u6240\u4ee5\u6211\u4eec\u5728\u72b6\u538b\u7684\u65f6\u5019\uff0c\u53ef\u4ee5**\u5ffd\u7565\u52a0\u5165\u4e00\u6761\u7279\u6b8a\u8fb9\u9020\u6210\u7684\u5bf9\u82b1\u8d39\u4ee5\u53ca\u5ea6\u6570\u7684\u5f71\u54cd**\u3002\n\n\u5177\u4f53\u800c\u8a00\uff0c\u72b6\u538b\u7684\u6bcf\u4e00\u4f4d\uff1a\n\n- $0$\uff1a\u8be5\u70b9\u4e0d\u5728\u8fde\u901a\u5757\u5185\uff08\u5176\u5b9e\u4e5f\u4e0d\u4e00\u5b9a\u771f\u7684\u4e0d\u5728\u8fde\u901a\u5757\u91cc\uff0c\u4e0b\u9762DP\u8f6c\u79fb\u90e8\u5206\u4f1a\u5177\u4f53\u8bf4\u660e\uff09\n- $1$\uff1a\u8be5\u70b9\u5728\u8fde\u901a\u5757\u5185\u4e14\u662f\u5947\u6570\u5ea6\uff08\u5ffd\u7565\u6389\u7279\u6b8a\u8fb9\uff09\uff1b\n- $2$\uff1a\u8be5\u70b9\u5728\u8fde\u901a\u5757\u5185\u4e14\u662f\u5076\u6570\u5ea6\uff08\u5ffd\u7565\u6389\u7279\u6b8a\u8fb9\uff09\u3002\n\n\u90a3\u4e48\u8fd9\u662f\u4e00\u4e2a\u4e09\u8fdb\u5236\u72b6\u538b\uff0c$S\\le 3^{13}=1594323$ \u5f88\u6ca1\u6709\u95ee\u9898\u3002\u5173\u952e\u662f\u600e\u4e48\u8f6c\u79fb awa\n\n\u8003\u8651\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u52a0\u8fb9\uff1a\n\n1. \u5c06\u4e00\u4e2a\u70b9\u8fde\u5165\u8fde\u901a\u5757\uff1b\n2. \u6539\u53d8\u4e00\u5bf9\u70b9\u7684\u5ea6\u6570\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7406\u89e3\u7684\u5173\u952e\u2014\u2014**\u6700\u591a\u53ea\u6709\u4e00\u6b21**\u52a0\u5165\u4e00\u6761\u4e0e\u67d0\u4e2a\u70b9 $u$ \u76f8\u90bb\u7684\u8fb9\u7684\u64cd\u4f5c\u7684\u76ee\u7684\u662f\u6539\u53d8\u70b9 $u$ \u5ea6\u6570\uff0c\u56e0\u4e3a\u53ea\u5173\u5fc3\u5ea6\u6570\u5947\u5076\u6027\u3002\u90a3\u4e3a\u4ec0\u4e48 $u$ \u4f1a\u88ab\u8fde\u8bb8\u591a\u6761\u8fb9\u5462\uff1f\u5176\u5b9e\u5176\u4ed6\u8fb9\u90fd\u662f\u56e0\u4e3a**\u52a0\u5165\u4e86\u4e00\u6761\u8fde\u63a5\u53e6\u5916\u4e24\u4e2a\u70b9\u7684\u8def\u5f84**\uff0c\u800c $u$ \u6070\u597d\u5728\u8def\u5f84\u4e0a\uff0c\u5c31\u4f1a\u88ab\u52a0\u4e0a\u4e24\u6761\u8fb9\uff0c\u800c\u5ea6\u6570\u5947\u5076\u6027\u4e0d\u53d8\u3002\n\n\u6211\u4eec\u4e00\u5b9a\u662f\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u7684\u6269\u5c55\u51fa\u8fd9\u4e2a\u8fde\u901a\u5757\uff0c\u5373\u6bcf\u6b21\u5c06\u4e00\u4e2a\u70b9 $u$ \u52a0\u5165\u8fde\u901a\u5757\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u8be5\u70b9\u6709\u7279\u6b8a\u8fb9\u4e0e\u5f53\u524d\u7684\u8fde\u901a\u5757\u76f8\u8fde\uff0c\u7531\u4e8e\u7279\u6b8a\u8fb9\u9ed8\u8ba4\u5728 $E$ \u4e2d\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u628a $u$ \u52a0\u8fdb\u53bb\uff1b\n2. \u52a0**\u4e00\u6761\u975e\u7279\u6b8a\u8fb9\u8def\u5f84**\u5c06 $u$ \u548c\u8fde\u901a\u5757\u5185\u70b9 $v$ \u76f8\u8fde\uff0c\u76ee\u7684\u6709\u4e24\u4e2a\uff0c\u6539\u53d8 $u$ \u7684\u8fde\u901a\u6027\uff0c\u6539\u53d8 $u$ \u7684\u5ea6\u6570\uff1b\u987a\u4fbf\u4f1a\u6539\u53d8 $v$ \u7684\u5ea6\u6570\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u8ba1\u7279\u6b8a\u8fb9\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728\u72b6\u6001\u4e2d\u52a0\u5165\u201c\u5076\u5ea6\u6570\u201d\u7684\u70b9 $u$ \u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u4e3a\u4e86\u8fbe\u5230\u76ee\u7684\u4e14\u4ea7\u751f\u6700\u5c0f\u7684\u82b1\u8d39\uff0c\u5f53\u7136\u662f\u53d6 $u,v$ \u7684**\u6700\u77ed\u8def**\uff08*Floyd* \u5148\u6c42\u51fa\u6700\u77ed\u8def\uff09\uff1b\u4ee5 $\\operatorname{dist}(u,v)$ \u7684\u4ee3\u4ef7\u5728\u72b6\u6001\u4e2d\u52a0\u5165\u201c\u5947\u6570\u5ea6\u201d $u$ \u5e76\u4e14\u6539\u53d8 $v$ \u7684\u5ea6\u6570\u3002\n\n\u6b38\uff1f\u4e0d\u662f\u8bf4\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u53ea\u4f1a\u6709\u4e00\u6b21\u52a0\u8fb9\u7684\u76ee\u7684\u662f\u6539\u53d8\u5176\u5947\u5076\u6027\uff1f\u4f46\u662f\u663e\u7136\u8fd9\u6837\u8f6c\u79fb\u5f88\u6709\u53ef\u80fd\u70b9 $v$ \u88ab\u6539\u53d8\u4e86\u591a\u6b21\u5947\u5076\u6027\u3002\u5b9e\u9645\u4e0a\uff0c\u8981\u4e48\u70b9 $v$ \u662f\u7b2c\u4e00\u6b21\u88ab\u6539\u53d8\u5947\u5076\u6027\uff0c\u8981\u4e48 $v$ \u7684\u5b9e\u9645\u4f5c\u7528\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4e2d\u8f6c\u70b9\u2014\u2014\u5728\u67d0\u4e00\u6b21\u52a0\u5165\u70b9 $w$ \u65f6\uff0c\u8fde\u63a5\u4e86\u70b9 $v$\uff0c\u90a3\u4e48\u8fd9\u4e24\u6b21\u8f6c\u79fb\u7684\u5b9e\u8d28\u662f\u52a0\u5165\u4e86\u8def\u5f84 $u,w$\uff0c\u76ee\u7684\u662f\u6539\u53d8 $u,w$ \u7684\u5ea6\u6570\u5947\u5076\u6027\u3002\n\nDP\u5b8c\u540e\u5c31\u9700\u8981\u7b97\u7b54\u6848\u4e86\uff0c\u679a\u4e3e\u51fa\u4e00\u4e2a\u8fde\u901a\u5757\u72b6\u6001 $S$\uff0c**\u81f3\u5c11\u5305\u542b\u4e86\u6240\u6709\u7279\u6b8a\u8fb9\u7aef\u70b9**\uff1b\u7136\u540e\u5c06\u6240\u6709\u7279\u6b8a\u8fb9\u7684\u5ea6\u6570\u4ee5\u53ca\u8fb9\u6743\u7684\u8d21\u732e\u52a0\u8fdb\u53bb\uff08\u4e0d\u8981\u5fd8\u4e86(\uffe3\u25bd\uffe3)\"\uff09\uff0c\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd8\u4f1a\u6709\u4e00\u4e9b\u70b9\u662f\u5947\u6570\u5ea6\u7684\u2026\u2026\u9700\u8981\u989d\u5916\u52a0\u4e0a\u4e00\u4e9b\u8def\u5f84\u6765\u6539\u53d8\u5ea6\u6570\u3002\n\n\u5047\u8bbe\u9700\u8981\u6539\u53d8\u5ea6\u6570\u7684\u70b9\u96c6\u4e3a $S$\uff0c\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u72b6\u538bDP\u6c42\u51fa\u6539\u53d8\u5ea6\u6570\u7684\u6700\u5c0f\u82b1\u8d39 $g(S)$\uff0c\u8f6c\u79fb\u5219\u9009\u62e9\u4e24\u4e2a $S$ \u4e2d\u7684\u70b9 $u,v$\uff0c\u8981\u6539\u53d8\u5176\u5ea6\u6570\u5c31\u52a0 $u,v$ \u7684\u6700\u77ed\u8def\uff0c\u5373 $g(S)=\\min\\big\\{g(S-\\{u,v\\})+\\operatorname{dist}(u,v)\\big\\}$\u3002\n\n\u6700\u540e\u590d\u6742\u5ea6\u5c31\u662f $O(3^nn^2)$\uff0c\u74f6\u9888\u5728\u4e09\u8fdb\u5236\u72b6\u538b\u8f6c\u79fb\u65f6\u679a\u4e3e\u8fde\u901a\u5757\u5916\u70b9 $u$ \u4ee5\u53ca\u8fde\u901a\u5757\u5185\u70b9 $v$\uff08\u52a0\u5165\u8def\u5f84 $u,v$\uff09\u3002\n\n---\n## \\# \u6e90\u4ee3\u7801\n\u81ea\u5e26\u5c0f\u5e38\u6570\uff0c\u73b0\u5728\u597d\u50cf\u5728\u6700\u4f18\u89e3 awa\n```cpp\n/*Lucky_Glass*/\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\n#define minc(a,b) (a=min(a,b))\nconst int N=13,M=205,SZ=1600000,INF=0x3f3f3f3f;\ninline int Read(int &r){\n    int b=1,c=getchar();r=0;\n    while(c<'0' || '9'<c) b=c=='-'? -1:b,c=getchar();\n    while('0'<=c && c<='9') r=(r<<1)+(r<<3)+(c^'0'),c=getchar();\n    return r*=b;\n}\n\nint n,m,K,ansS,ans,totmust;\nint dis[N][N],mustS[N],mustdu[N],f[SZ],g[1<<N],pow3[N];\nqueue<int> que;\n\nint GetS(int S,int *sta){\n    int ret=0;\n    for(int i=0;i<n;i++,S/=3)\n        if((sta[i]=S%3))\n            ret|=(1<<i);\n    return ret;\n}\nint main(){\n    memset(dis,0x3f,sizeof dis);\n    Read(n),Read(K);\n    for(int i=1,u,v,l;i<=K;i++){\n        Read(u),Read(v),Read(l);u--,v--;\n        minc(dis[u][v],l),minc(dis[v][u],l);\n        mustS[u]|=(1<<v),mustS[v]|=(1<<u);\n        mustdu[u]++,mustdu[v]++;\n        ansS|=(1<<u)|(1<<v);\n        totmust+=l;\n    }\n    Read(m);\n    for(int i=1,u,v,l;i<=m;i++){\n        Read(u),Read(v),Read(l),u--,v--;\n        minc(dis[u][v],l),minc(dis[v][u],l);\n    }\n    //\n    for(int i=0;i<n;i++) dis[i][i]=0;\n    for(int k=0;k<n;k++)\n        for(int i=0;i<n;i++)\n            for(int j=0;j<n;j++)\n                minc(dis[i][j],dis[i][k]+dis[k][j]);\n    //\n    memset(g,0x3f,sizeof g),g[0]=0;\n    for(int S=1;S<(1<<n);S++)\n        for(int u=0;u<n;u++)\n            for(int v=u+1;v<n;v++)\n                if((S>>u&1) && (S>>v&1))\n                    minc(g[S],g[S^(1<<u)^(1<<v)]+dis[u][v]);\n    //\n    pow3[0]=1;for(int i=1;i<n;i++) pow3[i]=pow3[i-1]*3;\n    int all=1;for(int i=0;i<n;i++) all*=3;\n    //\n    ans=INF;\n    memset(f,0x3f,sizeof f),f[2]=0;\n    que.push(2);\n    while(!que.empty()){\n        int S=que.front(),sta[N],exiS;que.pop();\n        // printf(\"? %d\\n\",S);\n        exiS=GetS(S,sta);\n        for(int v=0;v<n;v++)\n            if(!sta[v]){\n                if(exiS&mustS[v]){\n                    int T=S+2*pow3[v];\n                    // printf(\"  %d -> %d\\n\",S,T);\n                    if(f[T]==INF) que.push(T);\n                    minc(f[T],f[S]);\n                }\n                for(int u=0;u<n;u++)\n                    if(sta[u]){\n                        int T=S+pow3[v]+(sta[u]==1? pow3[u]:-pow3[u]);\n                        // printf(\"  %d -> %d (%d,%d) %d\\n\",S,T,u,sta[u],pow3[u]);\n                        if(f[T]==INF) que.push(T);\n                        minc(f[T],f[S]+dis[u][v]);\n                    }\n            }\n        // printf(\"done\\n\");\n        if((exiS&ansS)==ansS){\n            int chgS=0;\n            for(int i=0;i<n;i++)\n                if(exiS>>i&1 && ((mustdu[i]&1)^(sta[i]==1)))\n                    chgS|=(1<<i);\n            minc(ans,f[S]+g[chgS]+totmust);\n        }\n    }\n    //\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n---\n## THE END\n### Thanks for reading!",
        "postTime": 1606477768,
        "uid": 41243,
        "name": "Lucky_Glass",
        "ccfLevel": 9,
        "title": "[JSOI2013]\u5403\u8d27 JYY \u89e3\u6790"
    },
    {
        "content": "## \u9898\u89e3 JSOI2013 \u5403\u8d27jyy\n\n### \u9898\u9762\n\n[luogu6085](https://www.luogu.com.cn/problem/P6085)\n\n### \u89e3\u6790\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\u8003\u8651\u72b6\u538b dp.\n\n\u4f46\u662f\u662f\u4e09\u8fdb\u5236\u72b6\u538b...,\u800c\u4e14\u8f6c\u79fb\u5341\u5206\u8be1\u5f02...\n\n\u8003\u8651\u5efa\u4e00\u4e2a\u8054\u901a\u5b50\u56fe,\u6b27\u62c9\u56de\u8def\u5c31\u662f\u70b9\u7684\u5ea6\u6570\u4e3a\u5076\u6570.\n\n\u8bbe\u72b6\u6001\u4e3a,\u6bcf\u4e00\u4f4d\u4e0a\u7684 $0$ \u8868\u793a\u6ca1\u6709\u5728\u70b9\u96c6\u4e2d,$1$ \u8868\u793a\u5ea6\u6570\u4e3a\u5947\u6570,$2$ \u8868\u793a\u5ea6\u6570\u4e3a\u5076\u6570.\n\n\u7136\u540e\u679a\u4e3e\u4e0d\u5728\u70b9\u96c6\u4e2d\u7684\u70b9,\u6709\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5:\n\n- \u5fc5\u987b\u8981\u9009\u7684\u8fb9\u7684\u53e6\u4e00\u4e2a\u7aef\u70b9\u5728\u70b9\u96c6\u4e2d.\n\n    \u6b64\u65f6\u6211\u4eec\u5148\u4e0d\u8003\u8651\u7aef\u70b9\u7684\u5ea6\u6570,\u6240\u4ee5\u90fd\u8bbe\u4e3a $2$ ,\u7136\u540e\u6b63\u5e38\u8f6c\u79fb.\n\n- \u679a\u4e3e\u70b9\u96c6\u4e2d\u7684\u5176\u5b83\u70b9.\n\n    \u6b64\u65f6\u6b63\u5e38\u6539\u53d8\u5ea6\u6570\u8f6c\u79fb\u5373\u53ef.\n\n\u6b64\u5916,\u6211\u4eec\u8fd8\u8981\u4e8c\u8fdb\u5236\u72b6\u538b\u4e00\u4e2a $g[s]$ \u8868\u793a\u5f53\u5947\u5ea6\u70b9\u96c6\u4e3a $s$ \u65f6\u5168\u90e8\u53d8\u4e3a\u5076\u6570\u5ea6\u7684\u4ee3\u4ef7.\n\n$floyd$ \u9884\u5904\u7406\u6700\u77ed\u8def\u5373\u53ef.\n\n### code\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <cstring>\n#include <queue>\n#define ll long long\n#define filein(a) freopen(a\".cpp\",\"r\",stdin)\n#define fileout(a) freopen(a\".cpp\",\"w\",stdout);\nusing namespace std;\n\ninline int read(){\n\tint sum=0,f=1;char c=getchar();\n\twhile((c<'0'||c>'9')&&c!=EOF){if(c=='-') f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'&&c!=EOF){sum=sum*10+c-'0';c=getchar();}\n\treturn sum*f;\n}\n\nconst int N=105;\nconst int O=1600000;\nconst int P=1<<14;\nconst int INF=0x3f3f3f3f;\nstruct edge{int to,next,w;}e[N<<1];\nint n,m,dis[N][N],d[N],ans;\nint head[N],cnt;\nint f[O],g[P],p[N]={1},q[N];\nqueue<int> que;\n\ninline void add(int x,int y,int w){\n\te[++cnt]=(edge){head[x],y,w};head[x]=cnt;\n}\n\ninline void init(){\n\tmemset(f,INF,sizeof(f));\n\tmemset(g,INF,sizeof(g));\n\tmemset(dis,INF,sizeof(dis));\n\tfor(int i=1;i<=n;i++) dis[i][i]=0;\n\tfor(int i=1;i<=n;i++) p[i]=p[i-1]*3;\n}\n\ninline void floyd(){\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n}\n\ninline void pre(){\n\tint st=1<<n;g[0]=0;\n\tfor(int i=0;i<st;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(i&(1<<(j-1))) continue;\n\t\t\tfor(int k=j+1;k<=n;k++){\n\t\t\t\tif(i&(1<<(k-1))) continue;\n\t\t\t\tint l=i|(1<<(j-1))|(1<<(k-1));\n\t\t\t\tg[l]=min(g[l],g[i]+dis[j][k]);\n\t\t\t}\n\t\t}\t\t   \n\t}\n}\n\ninline void dp(){\n\tf[2]=0;que.push(2);\n\twhile(!que.empty()){\n\t\tint s=que.front();que.pop();\n\t\tint t=0;\n\t\tfor(int i=1;i<=n;i++) if(s/p[i-1]%3) q[++t]=i;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(s/p[i-1]%3) continue;\n\t\t\tint s1=s+p[i-1]*2;\n\t\t\tfor(int j=head[i];j;j=e[j].to){\n\t\t\t\tint k=e[j].next;\n\t\t\t\tif(s/p[k-1]%3==0) continue;\n\t\t\t\tif(f[s1]==INF) que.push(s1);\n\t\t\t\tf[s1]=min(f[s1],f[s]);\n\t\t\t}\n\t\t\tfor(int j=1;j<=t;j++){\n\t\t\t\tint x=q[j],ss=s+p[i-1];\n\t\t\t\tss+=(s/p[x-1]%3==1)? p[x-1]:-p[x-1];\n\t\t\t\tif(f[ss]==INF) que.push(ss);\n\t\t\t\tf[ss]=min(f[ss],f[s]+dis[i][x]);\n\t\t\t}\t\t\t\n\t\t}\n\t}\n}\n\ninline void get_ans(){\n\tans=INF;\n\tfor(int s=0;s<p[n];s++){\n\t\tint flag=0;\n\t\tfor(int i=1;i<=n;i++) if(d[i]&&!(s/p[i-1]%3)){flag=1;break;}\n\t\tif(flag) continue;\n\t\tint ss=s,s1=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(d[i]&1) ss+=(s/p[i-1]%3==1)? p[i-1]:-p[i-1];\n\t\tfor(int i=1;i<=n;i++) if(ss/p[i-1]%3==1) s1|=(1<<(i-1));\n\t\tans=min(ans,f[s]+g[s1]);\n\t}\n\tfor(int i=1;i<=cnt;i+=2) ans+=e[i].w;\n}\n\nint main(){\n\tn=read();m=read();init();\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read(),y=read(),w=read();\n\t\tdis[x][y]=dis[y][x]=min(dis[x][y],w);\n\t\tadd(x,y,w);add(y,x,w);\n\t\td[x]++;d[y]++;\n\t}\n\tm=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read(),y=read(),w=read();\n\t\tdis[x][y]=dis[y][x]=min(dis[x][y],w);\t\t\n\t}\n\tfloyd();pre();dp();get_ans();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1581561324,
        "uid": 172304,
        "name": "zsq259",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6085 \u3010[JSOI2013]\u5403\u8d27 JYY\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6085)\n\n## \u9898\u610f\n\n- \u7ed9\u4e00\u5f20\u6709\u6743\u65e0\u5411\u56fe\uff0c\u6807\u8bb0\u5176\u4e2d\u67d0\u4e9b\u8fb9\u3002\n\n- \u4ece1\u53f7\u70b9\u51fa\u53d1\u8981\u6c42\u6211\u4eec\u627e\u4e00\u6761\u56de\u8def\uff0c\u4e14\u56de\u8def\u7ecf\u8fc7\u6240\u6709\u6807\u8bb0\u8fb9\u3002\n\n- \u6700\u5c0f\u5316\u8fb9\u6743\u548c\u3002\n\n---\n\n\u6211\u4eec\u627e\u5230\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u5f97\u6784\u6210**\u6b27\u62c9\u56de\u8def**\u3002\n\n\u90a3\u4e48\u5c31\u4ea7\u751f\u4e24\u4e2a\u6761\u4ef6\u3002\n\n1. \u6240\u6709\u70b9\u5ea6\u6570\u90fd\u662f**\u5076\u6570**\u3002\n\n2. \u9009\u51fa\u6765\u7684\u8fb9\u6784\u6210\u7684\u56fe\uff0c\u5fc5\u987b\u53ea\u6709**\u4e00\u4e2a\u8054\u901a\u5206\u91cf**\u3002\n\n## Sol1\n\n\u4ee4 $f_{i,S}$ \u8868\u793a\u5f53\u524d\u6bcf\u4e2a\u70b9\u7684\u72b6\u6001\uff0c\u4ee5\u53ca\u5f53\u524d\u6700\u540e\u505c\u7559\u5728 $i$ \u7684\u4f4d\u7f6e\u3002\n\n$S$ \u72b6\u6001\u6bcf\u4e2a\u70b9\u5206\u6210\u4e09\u79cd\u60c5\u51b5\u3002\n\n0\uff1a\u4e0d\u4e0e1\u8fde\u901a\n\n1\uff1a\u548c1\u8fde\u901a\u4e14\u5ea6\u6570\u4e3a\u5947\u6570\n\n2\uff1a\u548c1\u8fde\u901a\u4e14\u5ea6\u6570\u4e3a\u5076\u6570\n\n\u7136\u800c\u8fd9\u6837\u65e0\u6cd5\u5904\u7406**\u5f3a\u5236\u9009\u8fb9**\u3002\n\n\u56e0\u6b64\u6211\u4eec\u7ee7\u7eed\u5206\u6790\u9898\u76ee\u6027\u8d28\u3002\n\n## Sol2\n\n\u89c2\u5bdf\u5230\u6240\u6709\u8fb9\u53ef\u4ee5\u5206\u6210\u4e24\u90e8\u5206\u3002\n\n\u4e00\u90e8\u5206\u662f\u5230\u8fc7\u7684\u5230\u6ca1\u5230\u8fc7\u7684\u70b9\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u8fde\u63a5\u4e24\u4e2a\u5230\u8fc7\u7684\u70b9\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a**\u5230\u8fc7\u7684\u70b9**\uff0c\u8fde\u8fb9\u5373\u53ef\u6539\u53d8\u4ed6\u4eec\u7684\u5947\u5076\u6027\u3002\n\n\u4e14\u82e5\u8d70**\u6700\u77ed\u8def\u5f84**\uff0c\u4e00\u5b9a\u4f1a\u5f97\u5230\u6700\u597d\u7684\u6548\u679c\u3002\n\n\u6211\u4eec\u731c\u60f3\uff0c\u53efdp\u51fa\u6240\u6709\u70b9\u8fde\u901a\u6027\u7684\u72b6\u6001\uff0c\u7136\u540e\u6211\u4eec\u518d\u7528\u6700\u77ed\u8def\u628a\u5947\u6570\u70b9\u4e4b\u95f4\u4e24\u4e24\u8fde\u4e0a\u3002\n\n\u4ee4 $f_S$ \u8868\u793a\u6bcf\u4e2a\u70b9\u4e0e1\u53f7\u70b9\u8fde\u901a\u72b6\u6001\u786e\u5b9a\u65f6\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u6bcf\u6b21\u6211\u4eec\u679a\u4e3e\u8fb9 $(i,j)$ \u5176\u4e2d $i$ \u5728 $S$ \u4e2d\u4e0d\u4e3a0\uff0c$j$ \u4e3a0\u3002\n\n**\u7b2c\u4e00\u6b21**\u52a0\u8fdb\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u9644\u52a0\u4e0a\u5b83\u4f7f\u7528\u5fc5\u987b\u8fb9\u7684\u8fde\u901a\u6027\uff0c\u5373\u53ef\u628a\u5fc5\u987b\u53d6\u8fb9\u6761\u4ef6\u653e\u4e0a\u3002\n\n\u4ee4 $w_i$ \u8868\u793a\u53ea\u7528 $k$ \u6761\u8fb9\uff0c$i$ \u548c\u54ea\u4e9b\u70b9\u8fde\u901a\uff0c\u4e14\u8fd9\u4e9b\u70b9\u5947\u5076\u72b6\u6001\u5982\u4f55\u3002\n\n\u6211\u4eec\u5728\u7b2c\u4e00\u6b21\u52a0\u5165\u8fde\u901a\u5757\u4e2d\u7684\u4e00\u4e2a\u70b9\u65f6\uff0c\u6211\u4eec\u5c31\u628a\u6240\u6709\u70b9\u62d6\u8fdb\u53bb\u3002\n\n\u518d\u4ee4 $g_S$ \u8868\u793a\u5f53 $S$ \u4e2d\u70b9\u4e3a**\u5947\u6570**\u65f6\uff0c\u53d8\u6210\u5076\u6570\u7684\u6700\u4f18\u89e3\u3002\n\n\u6bcf\u6b21\u679a\u4e3e\u70b9\u8f6c\u79fb\u5373\u53efqwq\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(3^n \\times m)$\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u5e38\u6570\u4f18\u5316\uff08\u00bf\uff09\u3002\n\n## \u5b50\u96c6\u679a\u4e3e\n\n\u5bf9**\u5b50\u96c6\u679a\u4e3e**\u7684\u590d\u6742\u5ea6\u8fdb\u884c\u4e00\u70b9\u5206\u6790\u3002\n\n\u8fd9\u91cc\u7684\u5b50\u96c6\u679a\u4e3e\u4e3a\uff0c\u5728\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u4e2d\uff0c\u679a\u4e3e\u6240\u6709\u4e3a1\u7684\u5b50\u96c6\u3002\n\n\u6211\u4eec\u6709\u4e00\u79cd\u901a\u7528\u5199\u6cd5\u3002\n\n\u8fd9\u4e2a\u5199\u6cd5\u770b\u4f3c\u5f88\u66b4\u529b~~\u5b9e\u9645\u4e0a\u4e5f\u5f88\u66b4\u529b~~\uff0c\u590d\u6742\u5ea6 $O(3^n)$\u3002\n\n\u5b9e\u9645\u4e0a\u5c31\u662f $\\sum^n_{i=0}C(n,i) \\times 2^i$ \u5c55\u5f00\u540e\u540c $(1+2)^n$\u3002\n\n\u5373\u4e3a $O(3^n)$\u3002",
        "postTime": 1588402705,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "\u5403\u8d27 JYY\u9898\u89e3 \u72b6\u538bdp"
    },
    {
        "content": "# \u9898\u610f\n\n\u4e00\u5f20\u56fe\uff0c\u6700\u5f00\u59cb\u6709 $K$ \u6761\u5e26\u6743\u65e0\u5411\u8fb9\uff08\u4ee5\u4e0b\u79f0\u4e3a\u201c\u5fc5\u987b\u8fb9\u201d\uff09\u3002\u518d\u7ed9\u51fa $M$ \u6761\u5e26\u6743\u65e0\u5411\u8fb9\uff08\u4ee5\u4e0b\u79f0\u4e3a\u201c\u4e0d\u5fc5\u987b\u8fb9\u201d\uff09\uff08\u8fd8\u6ca1\u6709\u8fde\u4e0a\u53bb\uff09\uff0c\u9009\u62e9\u5176\u4e2d\u82e5\u5e72\u6761\u8fb9\u8fde\u4e0a\u53bb\uff0c\u4f7f\u8fd9\u5f20\u56fe\u53d8\u6210\u4ece\u8282\u70b9 1 \u5f00\u59cb\u7684\u6b27\u62c9\u56de\u8def\u3002\u6c42\u6700\u5c0f\u8fb9\u6743\u548c\u3002\n\n# \u601d\u8def\n\n\u5173\u4e8e\u6bcf\u6b21\u60f3\u90fd\u7528 dij \u7ed3\u679c\u53d1\u73b0\u9898\u89e3\u90fd\u662f spfa \u8fd9\u4ef6\u4e8b\u3002\u6240\u4ee5\u6211\u7528 dij A \u4e86\u8fd9\u9053\u9898\u3002\n\n\u73b0\u5728\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n1. \u662f\u6b27\u62c9\u56de\u8def\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u5fc5\u987b\u662f\u5076\u6570\u3002\n\n2. \u53ea\u8981\u8fde\u4e86\u8fb9\u7684\u70b9\u5fc5\u987b\u4e0e\u8282\u70b9 1 \u8fde\u901a\u3002\u5373\u8fde\u4e86\u8fb9\u7684\u70b9 $x$ \u90fd\u6709\u81f3\u5c11\u4e00\u4e2a\u76f8\u90bb\u70b9 $y$ \u4e0e 1 \u8fde\u901a\uff08\u5305\u62ec 1 \u81ea\u5df1\uff09\uff08\u5b9e\u73b0\u65f6 $x$ \u7684\u7b2c\u4e00\u6b21\u88ab\u8fde\u4e00\u5b9a\u662f\u88ab $y$ \u8fde\uff09\u3002\n\n$N\\leq13$\uff0c\u8003\u8651\u72b6\u538b\u3002\u7528\u4e09\u8fdb\u5236\u6570 $S$ \u8868\u793a\u5f53\u524d\u56fe\u7684\u72b6\u6001\uff0c\u5f53\u524d\u56fe\u6ee1\u8db3\u53ea\u8981\u8fde\u4e86**\u4e0d\u5fc5\u987b\u8fb9**\u7684\u70b9\u5fc5\u987b\u4e0e\u8282\u70b9 1 \u8fde\u901a\u3002$S$ \u7684\u7b2c $i$ \u4f4d\uff08\u4ee5\u4e0b\u8868\u793a\u4e3a $S_i$\uff09\u53ef\u4ee5\u662f\u4ee5\u4e0b 3 \u79cd\uff1a\n\n- 0\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u4e0d\u4e0e 1 \u53f7\u8282\u70b9\u8fde\u901a\u3002\n- 1\uff0c\u8fde\u901a\u4e14\u5ea6\u6570\u4e3a\u5947\u3002\n- 2\uff0c\u8fde\u901a\u4e14\u5ea6\u6570\u4e3a\u5076\u3002\n\n\u73b0\u5728 \u5fc5\u987b\u8fb9 \u53ea\u5728\u8003\u8651\u8fde\u901a\u6027\u7684\u65f6\u5019\u8003\u8651\u3002\u73b0\u5728\u7684\u5ea6\u6570\u90fd\u6307\u7684\u662f \u4e0d\u5fc5\u987b\u8fb9 \u7684\u5ea6\u6570\u3002\n\n\u8003\u8651\u5982\u4f55\u8f6c\u79fb\u3002\u9009\u4e00\u4e2a \u4e0d\u5fc5\u987b\u8fb9 $(x,y)$\uff0c\u5176\u4e2dx\u5fc5\u987b\u662f\u4e0e 1 \u8fde\u901a\u7684\uff0c\u7136\u540e\u8fde\u4e0a\u3002\uff08\u8fd9\u91cc\u6709\u7684\u9898\u89e3\u7528\u4e86 floyd \u5148\u5904\u7406\u4e86\u6700\u77ed\u8def\uff0c\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\uff09\n\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff1a\u5982\u679cy\u4e4b\u524d\u6ca1\u6709\u4e0e1\u8fde\u901a\uff0c\u800cy\u7528 \u5fc5\u987b\u8fb9 \u8fde\u4e86\u5176\u4ed6\u6ca1\u6709\u4e0e1\u8fde\u901a\u7684\u70b9\uff0c\u8fd9\u65f6\u5019\u8fd9\u4e9b\u70b9\u7684\u8fde\u901a\u6027\u4e5f\u8981\u53d8\u3002\u6240\u4ee5\u9884\u5904\u7406\u4e00\u4e2a\u6570\u7ec4 `cpl[]`\uff0c$cpl_S$ \u8868\u793aS\u8fde\u4e0a\u5fc5\u987b\u8fb9\u540e\u7684\u8fde\u901a\u6027\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u53ea\u6709\u5fc5\u987b\u8fb9\u76f8\u8fde\u4f46\u4e0e 1 \u8fde\u901a\u5219\u4e3a 2\uff08\u5177\u4f53\u770b\u4ee3\u7801\uff09\u3002\n\n\u8f6c\u79fb\u7528 dij\u3002\u590d\u6742\u5ea6\u662f$O(3^n n^2log_{3^n})$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T>void read(T&x){\n\tx=0;char ch=getchar();bool f=0;\n\twhile(!isdigit(ch))f|=ch=='-',ch=getchar();\n\twhile(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\tx=f?-x:x;\n}\nconst int N=15,M=2e6+50,K=205,INF=0x3f3f3f3f;\nint ans,ind[N],nx[K],ny[K],nz[K],pos[M][N];\nint dis[M],to[N][N],po[N],cpl[M],bto[N][N];\ntypedef pair<int,int> PII;\n#define fi first\n#define se second\n#define mp(x,y) make_pair(x,y)\npriority_queue<PII> q;\nint add(int s,int x){\n\tif(pos[s][x]<2)return s+po[x];\n\treturn s-po[x];\n}\nint main(){\n\tint n,tq,m;read(n),read(tq);\n\t//get needed eage\n\tmemset(to,0x3f,sizeof(to));\n\tfor(int i=1;i<=tq;i++){\n\t\tread(nx[i]),read(ny[i]),read(nz[i]);\n\t\tind[nx[i]]++,ind[ny[i]]++;ans+=nz[i];\n\t\tto[nx[i]][ny[i]]=to[ny[i]][nx[i]]=min(to[nx[i]][ny[i]],nz[i]);\n\t\tbto[nx[i]][ny[i]]=bto[ny[i]][nx[i]]=1;\n\t}\n\tfor(int i=1;i<=n;i++)bto[i][i]=1;\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tbto[i][j]|=(bto[i][k]|bto[k][j]);\n\tcout<<bto[1][5]<<endl;\n\t\n\t//get no-needed eage\n\tread(m);\n\tm+=tq;\n\tfor(int i=tq+1;i<=m;i++){\n\t\tread(nx[i]),read(ny[i]),read(nz[i]);\n\t\tto[nx[i]][ny[i]]=to[ny[i]][nx[i]]=min(to[nx[i]][ny[i]],nz[i]);\n\t}\n\t\t\t\t\n\t//about 3\u8fdb\u5236 \n\tpo[0]=1;for(int i=1;i<=n;i++)po[i]=po[i-1]*3;//po[i]=pow(3,i)\n\tfor(int i=0;i<po[n];i++){\n\t\tint x=i,cc=0;\n\t\twhile(x){\n\t\t\tpos[i][cc]=x%3;//pos[i][j]=\u4e09\u8fdb\u5236\u6570i\u7684\u7b2cj\u4f4d\uff08\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\uff09\n\t\t\tx/=3;cc++;\n\t\t}\n\t}\n\t\n\t//\u9884\u5904\u7406cpl[]\uff0c\u8fde\u4e0a\u5fc5\u987b\u8fb9\u540e\u7684\u8fde\u901a\u6027\n\tfor(int s=0;s<po[n];s++){\n\t\tcpl[s]=s;\n\t\tfor(int x=1;x<=n;x++){\n\t\t\tif(pos[s][x-1])continue;\n\t\t\tfor(int y=1;y<=n;y++)\n\t\t\t\tif(pos[s][y-1]&&bto[x][y]){\n\t\t\t\t\tcpl[s]+=2*po[x-1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\tmemset(dis,0x3f,sizeof(dis));\n\tq.push(mp(dis[cpl[2]]=0,cpl[2]));\n\tint ed=0;\n\tfor(int i=1;i<=tq;i++)\n\t\ted=add(add(ed,nx[i]-1),ny[i]-1);\n\twhile(q.size()){\n\t\tint s=q.top().se,t;q.pop();\n        int fl=0;\n        for(int x=1;x<=n;x++){\n            if(!pos[ed][x-1]){if(pos[s][x-1]==1){fl=1;break;}}\n            else{if(pos[ed][x-1]!=pos[s][x-1]){fl=1;break;}}\n        }\n        if(!fl){\n        \tprintf(\"%d\",dis[s]+ans);\n        \treturn 0;\n\t\t}\n\t\tfor(int x=1;x<=n;x++){\n\t\t\tif(!pos[s][x-1])continue;\n\t\t\tfor(int y=1;y<=n;y++)\n\t\t\t\tif(to[x][y]!=INF&&x!=y){\n\t\t\t\t\tt=cpl[add(add(s,x-1),y-1)];\n\t\t\t\t\tif(dis[t]>dis[s]+to[x][y]){\n\t\t\t\t\t\tdis[t]=dis[s]+to[x][y];\n\t\t\t\t\t\tq.push(mp(-dis[t],t));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1632320148,
        "uid": 151712,
        "name": "\u4e00\u67b6\u98de\u673a",
        "ccfLevel": 0,
        "title": "[JSOI2013]\u5403\u8d27 JYY \u9898\u89e3"
    },
    {
        "content": "# P6085 [JSOI2013]\u5403\u8d27 JYY\n\n## \u9898\u9762\u89e3\u6790\n\n\u9898\u9762 link : [P6085](https://www.luogu.com.cn/problem/P6085)\n\n\u5728\u4e00\u5f20\u6709 $ N $ \u4e2a\u70b9 $ M + K $ \u6761\u8fb9\u7684\u56fe\uff0c\u4fdd\u8bc1\u5fc5\u987b\u7ecf\u8fc7\u5176\u4e2d $ K $ \u6761\u8fb9\u81f3\u5c11\u4e00\u6b21\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n## \u7b97\u6cd5\u7684\u6734\u7d20\u5206\u6790\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5728\u4e00\u5f20\u53ea\u8fde\u63a5\u4e86 $ K $ \u4e2a\u4e00\u5b9a\u8981\u7ecf\u8fc7\u7684\u8fb9\u56fe\u4e0a\u6dfb\u52a0\u82e5\u5e72\u6761\u8fb9\uff0c\u4f7f\u6700\u7ec8\u5f62\u6210\u4e00\u5f20\u6b27\u62c9\u56de\u8def\uff0c\u67e5\u8be2\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u5df2\u77e5\u6b27\u62c9\u56de\u8def\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\u6bcf\u4e00\u4e2a\u70b9\u5f97\u5ea6\u6570\u4e3a\u5076\u6570\u4e14\u4fdd\u8bc1\u8054\u901a\u3002\n\n\u540c\u65f6\u4e5f\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c$ K $ \u6761\u5fc5\u8981\u7684\u8fb9\uff08\u4e0b\u6587\u79f0\u4f5c\u5173\u952e\u8fb9\uff09\u5728\u7ecf\u8fc7\u4e00\u6b21\u540e\u5c31\u53ef\u4ee5\u770b\u505a\u901a\u5269\u4f59 $ M $ \u6761\u8fb9\uff08\u4e0b\u6587\u79f0\u4f5c\u975e\u5173\u952e\u8fb9\uff09\u7c7b\u578b\u76f8\u540c\u7684\u8fb9\u3002\n\n## \u8003\u8651\u89e3\u6cd5\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u5f88\u76f4\u63a5\u7684\u6ce8\u610f\u5230\u8fd9\u9053\u9898\u7684 $ n $ \u8303\u56f4\u5f02\u5e38\u7684\u5c0f\uff0c\u6ee1\u8db3 $ n \\leq 13 $\u3002\u6240\u4ee5\u4e0d\u59a8\u8003\u8651\u5bf9\u4e8e\u72b6\u6001\u8fdb\u884c\u538b\u7f29\u3002\n\n\u6211\u4eec\u8003\u8651\u5230\u6b27\u62c9\u56de\u8def\u7684\u5145\u8981\u6761\u4ef6\u540e\uff0c\u53ef\u4ee5\u5f97\u77e5\u6574\u5f20\u56fe\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u53ea\u548c\u70b9\u7684\u5ea6\u6570\u7684\u5947\u5076\u6027\u548c\u56fe\u662f\u5426\u8fde\u540c\u6709\u5173\u3002\n\n\u6240\u4ee5\u4e0d\u96be\u5047\u8bbe\u51fa\u5982\u4e0b\u72b6\u6001\n\n - $0$ \u8868\u793a\u5f53\u524d\u70b9\u4e0e\u4e00\u6240\u5728\u7684\u8054\u901a\u5757\u4e0d\u8fde\u901a\n- $1$ \u8868\u793a\u5f53\u524d\u70b9\u4e0e\u4e00\u6240\u5728\u7684\u8054\u901a\u5757\u8fde\u901a\u4e14\u70b9\u7684\u5ea6\u6570\u4e3a\u5947\u6570\n- $2$ \u8868\u793a\u5f53\u524d\u70b9\u4e0e\u4e00\u6240\u5728\u7684\u8054\u901a\u5757\u8fde\u901a\u4e14\u70b9\u7684\u5ea6\u6570\u4e3a\u5076\u6570\u8fd9\n\n\u8fd9\u5f88\u663e\u7136\u662f\u4e00\u4e2a $ 3^n $ \u7684\u72b6\u6001\uff0c\u540c\u65f6\u6211\u4eec\u4f1a\u53d1\u73b0\u5728\u5b9e\u73b0\u5173\u952e\u7684\u8fb9\u81f3\u5c11\u901a\u8fc7\u4e00\u6b21\u4e0a\u53ea\u901a\u8fc7\u72b6\u538b\u5b58\u5728\u56f0\u96be\n\n\u6211\u4eec\u8fd9\u65f6\u5019\u5c31\u5e94\u8be5\u8003\u8651\u5982\u4f55\u628a\u8fd9\u4e9b\u8fb9\u63d0\u524d\u52a0\u5165\uff0c\u5e76\u4f7f\u5b83\u5bf9\u7ed3\u679c\u4e0d\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u628a\u56fe\u5206\u6210\u53ea\u6709 $ K $ \u6761\u5fc5\u8981\u7684\u8fb9\u7ec4\u6210\u7684\u56fe\uff0c\u548c\u53c8\u5269\u4e0b\u7684\u82e5\u5e72\u6761\u8fb9\u7ec4\u6210\u7684\u56fe\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u6837\u4e24\u4e2a\u90e8\u5206\u7684\u56fe\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u5ea6\u6570\u5947\u5076\u6027\u662f\u76f8\u540c\u7684\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0\u51fa\u5269\u4e0b\u7684\u82e5\u5e72\u6761\u8fb9\u7ec4\u6210\u7684\u4e0e\u6709 $ K $ \u6761\u5fc5\u8981\u7684\u8fb9\u7ec4\u6210\u7684\u56fe\u7684\u5947\u5076\u6027\u76f8\u540c\u56fe\u7684\u6700\u5c0f\u6784\u9020\u957f\u5ea6\u52a0\u4e0a\u6240\u6709 $ K $ \u6761\u8fb9\u7684\u6743\u503c\u548c\u4f5c\u4e3a\u6700\u7ec8\u7684\u7b54\u6848\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5047\u8bbe\u5173\u952e\u8fb9\u4e0d\u5b58\u5728\uff0c\u5728\u6700\u540e\u7edf\u4e00\u52a0\u5173\u952e\u8fb9\uff0c\u8ba1\u7b97\u4ee3\u4ef7\u3002\n\n## \u5177\u4f53\u5b9e\u73b0\n\n\u7531\u4e8e\u5728\u7b97\u6cd5\u4e2d\u5173\u952e\u7684\u8fb9\u5df2\u7ecf\u88ab\u4fdd\u8bc1\u4e00\u5b9a\u7ecf\u8fc7\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u5173\u952e\u8fb9\u5c31\u548c\u975e\u5173\u952e\u8fb9\u76f8\u540c\u4e86\uff0c\u90fd\u53ef\u4ee5\u6dfb\u52a0\u82e5\u5e72\u6b21\u3002\u7531\u4e8e $ N $ \u6bd4\u8f83\u5c0f\uff0c\u4e14\u6211\u4eec\u9700\u8981\u7684\u5230\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u4ee5\u65b9\u4fbf\u4e4b\u540e\u7684\u52a0\u8fb9\u7684\u5904\u7406\u3002\n\n\u7136\u540e\u8dd1 SPFA \u65f6\u8003\u8651\u7528\u5173\u952e\u8fb9\u548c\u975e\u5173\u952e\u8fb9\u66f4\u65b0\u3002\n\n\u5148\u627e\u5230\u4e00\u4e2a\u4e0e\u4e00\u76f8\u8fde\u901a\u7684\u70b9\uff0c\u7136\u540e\u904d\u5386\u5b83\u6240\u6709\u7684\u5173\u952e\u8fb9\u548c\u975e\u5173\u952e\u8fb9\uff0c\u5982\u679c\u662f\u5173\u952e\u8fb9\u8f6c\u79fb\u65f6\u4e0d\u6539\u53d8\u5947\u5076\u6027\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u4ef7\u503c\uff0c\u975e\u5173\u952e\u8fb9\u4f1a\u6539\u53d8\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u5947\u5076\u6027\u4e5f\u4f1a\u4ea7\u751f\u65b0\u7684\u4ef7\u503c\u3002\n\n\u6ce8\u610f\u522b\u5f00 long long \u4ed6\u6709\u70b9\u592a\u6162\u4e86~~\uff08\u83ab\u540d\u88ab\u5361\u5e38~~\n\n## code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int SIZE = 50;\nconst int NUM = (int)3e2 + 10;\nconst int MAXN = (int)2e6 + 50;\nconst double inf = 0x3f3f3f3f3f3f3f3f;\n\ninline int read()\n{\n\tint x = 0,f = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9')\n\t{\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn f * x;\n}\n\nint n,crux,m,num_edge,ans;\nint head[SIZE],degree[SIZE],power_3[SIZE],dp[MAXN];\nint dis[SIZE][SIZE];\nbool vis[MAXN];\nstruct node\n{\n\tint to,nxt;\n\tint val;\n};\nnode edge[NUM << 1];\nqueue <int> que;\n\ninline void pre()\n{\n\tpower_3[0] = 1;\n\tfor (int i = 1; i <= 15; ++i)\n\t\tpower_3[i] = power_3[i-1] * 3;\n}\n\ninline void add(int u,int v,int val)\n{\n\tedge[++num_edge].to = v;\n\tedge[num_edge].val = val;\n\tedge[num_edge].nxt = head[u];\n\thead[u] = num_edge;\n}\n\ninline int get_bit(int state,int pos)\n{\n\treturn state / power_3[pos-1] % 3;\n}\n\ninline void calc(int &state,int i,int now)\n{\n\tstate -= get_bit(state,i) * power_3[i-1];\n\tstate += now * power_3[i-1];\n}\n\ninline void spfa()\n{\n\tmemset(dp,0x3f,sizeof(dp));\n\tint state = 0,next_state = 0; calc(state,1,2);\n\tque.push(state); dp[state] = 0; vis[state] = true;\n\twhile (!que.empty())\n\t{\n\t\tstate = que.front();\n\t\tque.pop(); vis[state] = false;\n\t\tfor (int u = 1; u <= n; ++u)\n\t\t{\n\t\t\tif (!get_bit(state,u)) continue;\n\t\t\tfor (int i = head[u]; i; i = edge[i].nxt)\n\t\t\t{\n\t\t\t\tint v = edge[i].to;\n\t\t\t\tnext_state = state;\n\t\t\t\tcalc(next_state,v,(get_bit(state,v) == 1 ? 1 : 2));\n\t\t\t\tif (dp[next_state] > dp[state])\n\t\t\t\t{\n\t\t\t\t\tdp[next_state] = dp[state];\n\t\t\t\t\tif (!vis[next_state])\n\t\t\t\t\t{\n\t\t\t\t\t\tque.push(next_state);\n\t\t\t\t\t\tvis[next_state] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int u = 1; u <= n; ++u)\n\t\t{\n\t\t\tif (!get_bit(state,u)) continue;\n\t\t\tfor (int v = 1; v <= n; ++v)\n\t\t\t{\n\t\t\t\tif (u == v) continue;\n\t\t\t\tnext_state = state;\n\t\t\t\tcalc(next_state,u,(get_bit(state,u) == 1 ? 2 : 1)); calc(next_state,v,(get_bit(state,v) == 1 ? 2 : 1));\n\t\t\t\tif (dp[next_state] > dp[state] + dis[u][v])\n\t\t\t\t{\n\t\t\t\t\tdp[next_state] = dp[state] + dis[u][v];\n\t\t\t\t\tif (!vis[next_state])\n\t\t\t\t\t{\n\t\t\t\t\t\tque.push(next_state);\n\t\t\t\t\t\tvis[next_state] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nsigned main()\n{\n\tfreopen(\"test.in\",\"r\",stdin);\n\tn = read(); crux = read(); pre();\n\tmemset(dis,0x3f,sizeof(dis));\n\tfor (int i = 1; i <= n; ++i) dis[i][i] = 0;\n\tfor (int i = 1; i <= crux; ++i)\n\t{\n\t\tint u = read(),v = read(),val = read();\n\t\tadd(u,v,val); add(v,u,val);\n\t\tdegree[u]++; degree[v]++; ans += val;\n\t\tdis[u][v] = dis[v][u] = min(dis[u][v],val);\n\t}\n\tm = read();\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tint u = read(),v = read();\n\t\tdis[u][v] = dis[v][u] = min(dis[u][v],read());\n\t}\n\tfor (int k = 1; k <= n; ++k)\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tfor (int j = 1; j <= n; ++j)\n\t\t\t\tdis[i][j] = min(dis[i][j],dis[i][k] + dis[k][j]);\n\tspfa();int state = 0;\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (degree[i] || i == 1) calc(state,i,(degree[i] & 1 ? 1 : 2));\n\tans += dp[state]; printf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1634554138,
        "uid": 415231,
        "name": "nomonick",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6085 [JSOI2013]\u5403\u8d27 JYY"
    },
    {
        "content": "## P6085 [JSOI2013]\u5403\u8d27 JYY \u9898\u89e3\n\n### \u6574\u4f53\u60c5\u51b5\n\n\u603b\u4f53\u4e0a\u8fd8\u662f Floyd+SPFA+\u72b6\u538b\uff0c\u4f46\u5728\u7b54\u6848\u5904\u7406\u4e0a\u4e0e\u73b0\u6709\u9898\u89e3\u7edf\u8ba1\u65b9\u5f0f\u4e0d\u540c\u3002\n\n### \u9898\u610f\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\n\n[P6085 [JSOI2013]\u5403\u8d27 JYY](https://www.luogu.com.cn/problem/P6085)\n\n### \u6734\u7d20\u5206\u6790\n\n\u6211\u4eec\u53d1\u73b0\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5728\u4e00\u4e2a\u56fe\u4e0a\u52a0\u5165\u4e00\u4e9b\u8fb9\uff0c\u53ef\u4ee5\u52a0\u91cd\u8fb9\uff0c\u6709\u4e9b\u5173\u952e\u8fb9\u5fc5\u987b\u52a0\uff0c\u4f7f\u6700\u540e\u7684\u56fe\u4e3a\u6b27\u62c9\u56fe\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u5df2\u77e5\u56fe\u662f\u6b27\u62c9\u56fe\u7684\u5145\u8981\u6761\u4ef6\u662f\u5404\u70b9\u5ea6\u6570\u90fd\u662f\u5076\u6570\u4e14\u662f\u8fde\u901a\u56fe\uff0c\u8003\u8651\u5982\u4f55\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n### \u6df1\u5165\u5206\u6790\n\n\u65e2\u7136\u8981\u8ba9\u6bcf\u4e2a\u70b9\u5ea6\u6570\u90fd\u662f\u5076\u6570\uff0c\u90a3\u4e48\u8bf4\u660e\u70b9\u5ea6\u6570\u5947\u5076\u6027\u5bf9\u7b54\u6848\u6c42\u89e3\u6709\u5173\uff0c\u800c\u4e14\u53d1\u73b0 $n\\leq 13$ \u610f\u8bc6\u5230\u53ef\u4ee5\u72b6\u538b\u3002\n\n\u8003\u8651\u5982\u4f55\u538b\u7f29\u72b6\u6001\uff0c\u6839\u636e\u6b27\u62c9\u56fe\u7684\u5145\u8981\u6761\u4ef6\uff0c\u5e76\u4e14\u4ece\u4e00\u5f00\u59cb\u7ed3\u675f\uff0c\u4e0d\u96be\u60f3\u5230\u72b6\u6001\u53ef\u4ee5\u8bbe\u4e3a\uff1a\n\n0. \u5f53\u524d\u70b9\u4e0d\u4e0e\u4e00\u8fde\u901a\u3001\n1. \u5f53\u524d\u70b9\u4e0e\u4e00\u8fde\u901a\u5e76\u4e14\u5ea6\u6570\u4e3a\u5947\u6570\u3002\n2. \u5f53\u524d\u70b9\u4e0e\u4e00\u8fde\u901a\u5e76\u4e14\u5ea6\u6570\u4e3a\u5076\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a $O(3^n)$ \u7684\u72b6\u6001\uff0c\u8ba1\u7b97\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002\u90a3\u5982\u4f55\u8f6c\u79fb\u5462\uff1f\u9996\u5148\u8fd9\u4e2a\u5173\u952e\u8fb9\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u8003\u8651\u600e\u6837\u8f6c\u5316\u53ef\u4ee5\u8ba9\u6211\u4eec\u6700\u540e\u518d\u8003\u8651\u5173\u952e\u8fb9\u3002\n\n\u53ef\u4ee5\u60f3\u5230\uff0c\u5728\u8fde\u901a\u6027\u7ef4\u62a4\u65b9\u9762\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5173\u952e\u8fb9\uff0c\u4f46\u662f\u5728\u4ee3\u4ef7\u8ba1\u7b97\u548c\u5ea6\u6570\u7edf\u8ba1\u7684\u65f6\u5019\u6211\u4eec\u5047\u8bbe\u5173\u952e\u8fb9\u4e0d\u5b58\u5728\u5373\u53ef\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6700\u540e\u7edf\u4e00\u52a0\u5173\u952e\u8fb9\uff0c\u8ba1\u7b97\u4ee3\u4ef7\u4e86\u3002\n\n\u90a3\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u5148\u628a\u5173\u952e\u8fb9\u548c\u975e\u5173\u952e\u8fb9\u7528 Floyd \u6c42\u51fa\u4e24\u4e24\u70b9\u6700\u77ed\u8ddd\u79bb\uff0c\u8fd9\u91cc\u5bf9\u4e8e\u8dd1\u4e86\u4e0d\u6b62\u4e00\u6b21\u7684\u5173\u952e\u8fb9\u76f4\u63a5\u770b\u6210\u975e\u5173\u952e\u8fb9\u5c31\u53ef\u4ee5\uff0c\u800c\u4e14\u6709\u4e2a\u6027\u8d28\u662f\u4e0d\u4f1a\u6539\u53d8\u9014\u7ecf\u70b9\u7684\u5947\u5076\u6027\uff0c\u5728\u5947\u5076\u6027\u7edf\u8ba1\u65b9\u9762\u76f4\u63a5\u770b\u6210\u8fde\u4e86\u4e00\u6761\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u5c31\u53ef\u4ee5\u3002\n\n\u7136\u540e\u8dd1 SPFA \u65f6\u8003\u8651\u7528\u5173\u952e\u8fb9\u548c\u975e\u5173\u952e\u8fb9\u66f4\u65b0\u3002\u5148\u627e\u5230\u4e00\u4e2a\u8fde\u901a\u7684\u70b9\uff0c\u7136\u540e\u904d\u5386\u5176\u5173\u952e\u8fb9\u548c\u975e\u5173\u952e\u8fb9\uff0c\u5982\u679c\u662f\u5173\u952e\u8fb9\u8f6c\u79fb\u65f6\u4e0d\u6539\u53d8\u4ee3\u4ef7\u4e5f\u4e0d\u6539\u53d8\u5947\u5076\u6027\uff0c\u975e\u5173\u952e\u8fb9\u8981\u589e\u52a0\u8fb9\u6743\u7684\u4ee3\u4ef7\u5e76\u6539\u53d8\u8d77\u70b9\u7ec8\u70b9\u7684\u4ee3\u4ef7\u3002\n\n### \u7b54\u6848\u8ba1\u7b97\n\n\u5f88\u591a\u9898\u89e3\u90fd\u7528\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7684\u72b6\u6001\u6765\u63cf\u8ff0\u5f53\u524d\u70b9\u96c6\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u52a0\u5165\u591a\u5c11\u4ef7\u503c\u7684\u8fb9\u53ef\u4ee5\u4f7f\u56fe\u8f6c\u5316\u4e3a\u6b27\u62c9\u56fe\uff0c\u6700\u540e\u8ba1\u7b97\u65f6\u5148\u6a21\u62df\u52a0\u5165\u6240\u6709\u5173\u952e\u8fb9\uff0c\u7136\u540e\u628a\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u585e\u8fdb\u96c6\u5408\u540e\u52a0\u4e0a\u8f6c\u5316\u4e3a\u6b27\u62c9\u56fe\u7684\u4ee3\u4ef7\u3002\n\n\u5b9e\u9645\u4e0a\u5e76\u4e0d\u7528\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u52a0\u5165\u5173\u952e\u8fb9\u4e4b\u540e\u6bcf\u4e2a\u70b9\u5ea6\u6570\u7684\u6539\u53d8\u3002\u5982\u679c\u6539\u53d8\u7684\u662f\u5947\u6570\uff0c\u90a3\u6211\u4eec\u5c31\u7528 SPFA \u6c42\u51fa\u7684\u5bf9\u5e94\u70b9\u662f\u5947\u5ea6\u7684\u7b54\u6848\uff0c\u5426\u5219\u5c31\u7528\u5076\u5ea6\u7684\u7b54\u6848\uff0c\u8fd9\u6837\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u7684\u72b6\u6001\u53ea\u6709\u4e00\u4e2a\uff0c\u4e5f\u5c31\u597d\u5199\u4e86\u5f88\u591a\u3002\n\n### \u8d34\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define lint long long\n#define rint register int\nusing namespace std;\ninline int read(){\n\tchar c;int f=1,res=0;\n\twhile(c=getchar(),!isdigit(c))if(c=='-')f*=-1;\n\twhile(isdigit(c))res=res*10+c-'0',c=getchar();\n\treturn res*f;\n}\nconst int N=15,K=80,M=605,S=2e6,inf=0x3f3f3f3f;\nint n,k,m;\nint hed[N],nxt[M],ver[M],w[M],cnt=1;\n//w\u4e3a\u8fb9\u6743 d\u4e3a\u5bf9\u4e24\u7aef\u70b9\u7684\u5ea6\u6570\u8d21\u732e \u53ea\u6709\u91cd\u8981\u8fb9 \ninline void ae(int u,int v,int _w){\n\tver[++cnt]=v;nxt[cnt]=hed[u];\n\thed[u]=cnt;w[cnt]=_w;\n}\ninline void abe(int u,int v,int _w)\n\t{ae(u,v,_w);ae(v,u,_w);}\nstruct edge{int u,v,w;}edg[K];\nint dis[N][N];//\u4ec5\u7528\u975e\u91cd\u8981\u8fb9\u66f4\u65b0\nint f[S],pw[N];//f[i]\u8868\u793a\u72b6\u6001\u4e3ai\u7684\u6700\u5c0f\u82b1\u8d39 \ninline void init(){\n\t//\u8ba1\u7b973\u7684\u6b21\u5e42\n\tpw[0]=1;\n\tfor(rint i=1;i<N;++i)\n\t\tpw[i]=pw[i-1]*3; \n}\ninline int gt(int s,int i){return s/pw[i-1]%3;}\ninline void upd(int &s,int i,int v)\n\t{s-=gt(s,i)*pw[i-1];s+=v*pw[i-1];}\nqueue<int> q;bool vis[S];\ninline void print(int s){\n\tfor(rint i=1;i<=n;++i)\n\t\tcout<<gt(s,i);\n\tcout<<endl;\n}\ninline void SPFA(){\n\tmemset(f,0x3f,sizeof f);\n\tint s=0,t=0;upd(s,1,2);//1\u70b9\u8fde\u901a\u4e140\u5ea6\u4e3a\u5076\u5ea6 \n\tq.push(s);vis[s]=true;f[s]=0;\n\twhile(!q.empty()){\n\t\ts=q.front();q.pop();\n\t\tvis[s]=false;\n\t\t//\u8003\u8651\u5173\u5efa\u8fb9\u5f71\u54cd\n\t\tfor(rint u=1;u<=n;++u){\n\t\t\tif(!gt(s,u))continue;\n\t\t\tfor(rint e=hed[u];e;e=nxt[e]){\n\t\t\t\tint v=ver[e];\n\t\t\t\tt=s;upd(t,v,gt(s,v)==1?1:2);\n\t\t\t\tif(f[t]>f[s]){\n\t\t\t\t\tf[t]=f[s];\n\t\t\t\t\tif(!vis[t])\n\t\t\t\t\t\tq.push(t),vis[t]=true; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//\u8003\u8651\u975e\u5173\u5efa\u8fb9\u5f71\u54cd \n\t\tfor(rint u=1;u<=n;++u){\n\t\t\tif(!gt(s,u))continue;\n\t\t\tfor(rint v=1;v<=n;++v){\n\t\t\t\tif(u==v)continue;t=s;\n\t\t\t\tupd(t,v,gt(t,v)==1?2:1);\n\t\t\t\tupd(t,u,gt(t,u)==1?2:1);\n\t\t\t\tif(f[t]>f[s]+dis[u][v]){\n\t\t\t\t\tf[t]=f[s]+dis[u][v];\n\t\t\t\t\tif(!vis[t])\n\t\t\t\t\t\tq.push(t),vis[t]=true; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} \nint d[N],ans;\ninline void calc(){\n\tint s=0;\n\tfor(rint i=1;i<=n;++i)\n\t\tif(d[i]||i==1)upd(s,i,(d[i]&1)?1:2);\n\tans+=f[s];\n}\nint main(){\n\tn=read();k=read();\n\tmemset(dis,0x3f,sizeof dis);\n\tfor(rint i=1;i<=k;++i){\n\t\tint u=read(),v=read();\n\t\tint _w=read();\n\t\tedg[i]=edge{u,v,_w};\n\t\tabe(u,v,_w);++d[u];++d[v];ans+=_w;\n\t\tdis[u][v]=dis[v][u]=min(dis[u][v],_w);\n\t}\n\tm=read();\n\tfor(rint i=1;i<=n;++i)dis[i][i]=0;\n\tfor(rint i=1;i<=m;++i){\n\t\tint u=read(),v=read();\n\t\tdis[u][v]=dis[v][u]=min(dis[u][v],read());\n\t}\n\tfor(rint c=1;c<=n;++c)\n\t\tfor(rint u=1;u<=n;++u)if(dis[u][c]!=inf)\n\t\t\tfor(rint v=1;v<=n;++v)if(dis[c][v]!=inf)\n\t\t\t\tdis[u][v]=min(dis[u][v],dis[u][c]+dis[c][v]);\n\tinit();SPFA();\n\tcalc();printf(\"%d\",ans);\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1634475717,
        "uid": 206258,
        "name": "SDNetFriend",
        "ccfLevel": 7,
        "title": "P6085 [JSOI2013]\u5403\u8d27 JYY \u9898\u89e3"
    }
]