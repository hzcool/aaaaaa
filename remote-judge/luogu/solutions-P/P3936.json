[
    {
        "content": "\u4eca\u5929\u7814\u7a76\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff0c\u641c\u5230\u4e86\u8fd9\u9898\u3002\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u6a21\u62df\u9000\u706b\u7684\u786e\u662f\u4e00\u4e2a\u5341\u5206\u7cbe\u5999\u7684\u7b97\u6cd5\u3002\u4e0b\u9762\u8a00\u5f52\u6b63\u4f20\uff0c\u8ba8\u8bba\u4e00\u4e0b\u672c\u9898\u7684\u89e3\u6cd5\u3002\u5404\u79cd\u9a97\u5206\u7b56\u7565\u697c\u4e0a\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u4e0d\u518d\u591a\u8bf4\uff0c\u4e3b\u8981\u8bb2\u89e3\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u3002\n\n\n\u4e00.\u5173\u4e8e\u6a21\u62df\u9000\u706b\u7b97\u6cd5\n\n\n\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff08Simulate Anneal\uff0cSA\uff09\u662f\u4e00\u79cd\u901a\u7528\u6982\u7387\u6f14\u7b97\u6cd5\uff0c\u7528\u6765\u5728\u4e00\u4e2a\u5927\u7684\u641c\u5bfb\u7a7a\u95f4\u5185\u627e\u5bfb\u547d\u9898\u7684\u6700\u4f18\u89e3\u3002\u6a21\u62df\u9000\u706b\u662f\u7531S.Kirkpatrick, C.D.Gelatt\u548cM.P.Vecchi\u57281983\u5e74\u6240\u53d1\u660e\u7684\u3002V.\u010cern&yacute;\u57281985\u5e74\u4e5f\u72ec\u7acb\u53d1\u660e\u6b64\u6f14\u7b97\u6cd5\u3002\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u662f\u89e3\u51b3TSP\u95ee\u9898\u7684\u6709\u6548\u65b9\u6cd5\u4e4b\u4e00\u3002\uff08\u6765\u81ea\u767e\u5ea6\u767e\u79d1\uff09\n\n\n[\u8fd9\u91cc](https://mp.weixin.qq.com/s?\\_\\_biz=MjM5MDE3OTk2Ng==&mid=2657432747&idx=1&sn=55d2b2594a3ec0ed92538f47847746c0&chksm=bdd923ba8aaeaaac6022bef8216b60256d0c236d402434732b78b70e47ba93900582883f4a0b&mpshare=1&scene=24&srcid=0123348572YE57z0s058aGgc&pass\\_ticket=LHNTbEViOtTrgaa6knsa6HqqoYVzurL1A2ZuQRgI7Olxb6BBlmVIuheVtruXLyb6#rd)\u6709\u4e00\u7bc7\u4e0d\u9519\u7684\u8bb2\u89e3\u6b64\u7b97\u6cd5\u7684\u6587\u7ae0\uff0c\u5176\u4e2d\u8fd8\u6709\u672c\u4eba\u770b\u4e0d\u61c2\u7684\u8bc1\u660e\u3002\n\n\n\u4e8c.\u672c\u9898\u7684\u5177\u4f53\u5b9e\u73b0\n\n\n\u9996\u5148\u6309\u987a\u5e8f\u586b\u5145\u989c\u8272\uff0c\u5f97\u5230\u521d\u59cb\u89e3\uff0c\u4e4b\u540e\u6309\u4e00\u5b9a\u89c4\u5219\u968f\u673a\u4ea4\u6362\u4e24\u4e2a\u8272\u5757,\u5e76\u5728\u6bcf\u6b21\u6267\u884c\u4ea4\u6362\u6d41\u7a0b\u540e\u964d\u4f4e\u6e29\u5ea6\uff0c\u76f4\u5230\u6e29\u5ea6\u4f4e\u4e8e\u8bbe\u5b9a\u7684\u6e29\u5ea6\u4e0b\u754c\u3002\u4ee5\u4e0a\u8fc7\u7a0b\u603b\u5171\u8fdb\u884cm\u6b21\uff0c\u4ee5\u786e\u4fdd\u603b\u80fd\u5f97\u5230\u8db3\u591f\u4f18\u79c0\u7684\u89e3\uff08\u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u5982\u679c\u521d\u59cb\u6e29\u5ea6T\u6781\u9ad8\uff0c\u9000\u706b\u901f\u5ea6a\u6781\u6162\uff0c\u6e29\u5ea6\u4e0b\u754cT\\_end\u8db3\u591f\u63a5\u8fd10\uff0c\u5219\u5fc5\u5b9a\u80fd\u4e00\u6b21\u5f97\u5230\u6700\u4f18\u89e3\uff0c\u4f46\u8ba1\u7b97\u91cf\u65e0\u6cd5\u627f\u53d7\uff09\u3002\n\n\n\u4ea4\u6362\u89c4\u5219\uff1a\n\n\n\u968f\u673a\u83b7\u5f97\u4e24\u4e2a\u4e0b\u6807\u5e76\u4ea4\u6362\u5176\u989c\u8272\uff0c\u539f\u89e3q\u503c\u8bb0\u4f5cq,\u6240\u5f97\u65b0\u89e3q\u503c\u8bb0\u4f5cq'\u3002\u4ee4t=q'-q\uff0c\u82e5t<0,\u5219\u63a5\u53d7\u65b0\u89e3\uff0c\u5426\u5219\u4ee5exp(-t/T)\u7684\u6982\u7387\u968f\u673a\u63a5\u53d7\u65b0\u89e3\uff0c\u5176\u4e2dT\u4ee3\u8868\u5f53\u524d\u6e29\u5ea6\u3002\u53ef\u89c1\uff0cexp(-t/T)\u968f\u7740T\u503c\u964d\u4f4e\u800c\u964d\u4f4e\uff0c\u6240\u5f97\u89e3\u4e5f\u5c06\u8d8b\u4e8e\u7a33\u5b9a\u3002\u5176\u4e2dexp\uff08i\uff09\u4ee3\u8868e\u7684i\u6b21\u65b9\u3002\n\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n\n1.\u4e0b\u6807\u4e00\u5b9a\u8981\u968f\u673a\u83b7\u53d6\uff0c\u4e0d\u8981\u81ea\u4f5c\u806a\u660e\uff0c\u5426\u5219\u4f1a\u9677\u5165\u6b21\u4f18\u89e3\u65e0\u6cd5\u81ea\u62d4\u3002\n\n\n2.\u5177\u4f53\u53c2\u6570\u901a\u8fc7\u5b9e\u9a8c\u786e\u5b9a\u3002\u6211\u5c06T\u8bbe\u4e3a1\uff0ca\u8bbe\u4e3a0.99999\uff0cT\\_end\u8bbe\u4e3a1e-15\uff0cm\u8bbe\u4e3a3\uff0c\u6267\u884c\u4e00\u904d\u8017\u65f6\u7ea62.8\u79d2\uff0c\u4e00\u822c\u6765\u8bf4\u53ef\u4ee5\u5bf9\u4ed8\u672c\u9898\u7684\u8f93\u5165\u89c4\u6a21\u3002\n\n\n3.\u8ba1\u7b97q\u503c\u53ea\u9700\u904d\u5386\u77e9\u9635\u4e00\u904d\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u65b9\u683c\u7684\u4e34\u8fb9\uff0c\u6700\u540e\u9664\u4e8c\u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002\u6ce8\u610f\uff0c\u6bcf\u6b21\u4ea4\u6362\u65e0\u9700\u518d\u6b21\u904d\u5386\uff0c\u8ba1\u7b97\u4ea4\u6362\u7684\u4e24\u4e0b\u6807\u7684\u4e34\u8fb9\u5373\u53ef\u3002\u5426\u5219\u4f1a\u6d6a\u8d39\u65f6\u95f4\uff0c\u5bfc\u81f4\u7cbe\u786e\u5ea6\u4e0b\u964d\uff0c\u90a3\u6837\u7684\u8bdd\u5c31\u53ea\u80fd\u78b0\u8fd0\u6c14\u4e86\u3002\n\n\n4.\u4e3a\u4e86\u65b9\u4fbf\u505a\u5b9e\u9a8c\u3001\u8282\u7ea6\u65f6\u95f4\u548c\u633d\u6551AC\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528time.h\u4e2d\u7684clock()\u51fd\u6570\u6765\u8bb0\u5f55\u65f6\u95f4\uff0c\u5f88\u65b9\u4fbf\u3002\n\n\n\u53e6\u5916\uff0c\u751f\u6210\u65b0\u89e3\u7684\u5176\u5b83\u65b9\u6cd5\u4e5f\u53ef\u5c1d\u8bd5\uff0c\u6bd4\u5982\u7ffb\u8f6c\u533a\u95f4\u4e4b\u7c7b\uff0c\u4e5f\u53ef\u591a\u79cd\u65b9\u6cd5\u7ec4\u5408\uff0c\u6216\u8bb8\u80fd\u63d0\u901f\u4e0d\u5c11\uff0c\u5c31\u662f\u4e0d\u77e5\u6548\u679c\u5982\u4f55\uff0c\u6709\u8d56\u4e8e\u8bfb\u8005\u81ea\u884c\u9a8c\u8bc1\u4e86\u3002\n\n\n\u5927\u6982\u5c31\u662f\u8fd9\u4e9b\u4e86\uff0c\u6700\u540e\u63d0\u4f9b\u4ee3\u7801\uff0c\u4e0d\u4fdd\u8bc1\u4e00\u6b21AC\u3002\u91cd\u8981\u5904\u505a\u4e86\u6ce8\u91ca\u3002\n\n```cpp\n#include <cstdlib>\n#include <iostream>\n#include <cstdio>\n#include <math.h>\n#include <cstring>\n#include <time.h>\n\n#define INF 2000000000//2 * 10^9\ninline int max(int a, int b)\n{\n    return a>b ? a : b;\n}\ninline int min(int a, int b)\n{\n    return a<b ? a : b;\n}\n\nint n, m;\nint c, p[55];\n\nstruct map {\nprivate:\n    int a[25][25];\n    int q;    \npublic:\n    map()\n    {\n        q = -1;\n    }\n    int c(int i, int j)\n    {\n        return a[i][j];\n    }\n    void swap(int i, int j, int x, int y)\n    {\n        if (i > n || x > n || j > m || y > m)\n            return;\n        if (i < 1 || j < 1 || x < 1 || y < 1)\n            return;\n       //\u2193\u4e4b\u6240\u4ee5\u8d77\u8fd9\u4e2a\u540d\u5b57\uff0c\u662f\u56e0\u4e3aoriginal\u662f\u201c\u539f\u59cb\u201d\u7684\u610f\u601d\n        int o_q = 0, q2 = 0;\n        if (a[i][j] != a[i + 1][j])\n            o_q++;\n        if (a[i][j] != a[i - 1][j])\n            o_q++;\n        if (a[i][j] != a[i][j + 1])\n            o_q++;\n        if (a[i][j] != a[i][j - 1])\n            o_q++;\n        if (a[x][y] != a[x + 1][y])\n            o_q++;\n        if (a[x][y] != a[x - 1][y])\n            o_q++;\n        if (a[x][y] != a[x][y + 1])\n            o_q++;\n        if (a[x][y] != a[x][y - 1])\n            o_q++;\n\n        int t = a[i][j];\n        a[i][j] = a[x][y];\n        a[x][y] = t;\n\n        if (a[i][j] != a[i + 1][j])\n            q2++;\n        if (a[i][j] != a[i - 1][j])\n            q2++;\n        if (a[i][j] != a[i][j + 1])\n            q2++;\n        if (a[i][j] != a[i][j - 1])\n            q2++;\n        if (a[x][y] != a[x + 1][y])\n            q2++;\n        if (a[x][y] != a[x - 1][y])\n            q2++;\n        if (a[x][y] != a[x][y + 1])\n            q2++;\n        if (a[x][y] != a[x][y - 1])\n            q2++;\n\n        q = q + q2 - o_q;\n    }\n    int getq()\n    {\n        if (q > -1)\n            return q;\n\n        int cnt = 0;\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++)\n            {\n                if (i > 1 && a[i - 1][j] != a[i][j])\n                    cnt++;\n                if (i < n && a[i + 1][j] != a[i][j])\n                    cnt++;\n                if (j > 1 && a[i][j - 1] != a[i][j])\n                    cnt++;\n                if (j < m && a[i][j + 1] != a[i][j])\n                    cnt++;\n            }\n        return cnt / 2;\n    }\n    void put()\n    {\n        for (int i = 1; i <= n; i++)\n        {\n            for (int j = 1; j <= m; j++)\n                printf(\"%d \", a[i][j]);\n            printf(\"\\n\");\n        }\n    }\n    void setmap()\n    {\n        int cnt = 0;\n        int col = 1;\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++)\n            {\n                if (cnt < p[col])\n                    a[i][j] = col;\n                else\n                {\n                    cnt = 0;\n                    col++;\n                    a[i][j] = col;\n                }\n                cnt++;\n            }\n        q = getq();\n    }\n};\n\nmap ans;\nint ans_q;\ndouble T;\nconst double a = 0.99999;\nconst double end = 1e-15;\n\nvoid renew(map &M,int &M_q)//\u66f4\u65b0\u89e3\n{\n    map t = M;\n    int q;\n    int x = abs(rand()) % n + 1, y = abs(rand()) % m + 1;\n    int x1 = abs(rand()) % n + 1, y1 = abs(rand()) % m + 1;\n\n    t.swap(x, y, x1, y1);\n    q = t.getq();\n    if (q <= M_q)\n    {\n        M = t;\n        M_q = q;\n    }\n    else if (exp((M_q - q) / T) > fabs((double)(rand() % 1000) / 1000))\n    {\n        M = t;\n        M_q = q;\n    }\n    if (M_q < ans_q)\n    {\n        ans = M;//\u8bb0\u5f55\uff0c\u9632\u6b62\u6700\u4f18\u89e3\u9057\u5931\n        ans_q = M_q;\n    }\n}\n\nvoid search()//\u6a21\u62df\u9000\u706b\n{\n    map tans = ans;\n    int q = ans_q;\n    T = 1;//\u521d\u59cb\u6e29\u5ea6\n\n    while (T > end)\n    {\n        renew(tans, q);//\u66f4\u65b0\u89e3\n        T *= a;//\u9000\u706b\n    }\n}\n\nint main()\n{\n    srand(time(NULL));\n\n    scanf(\"%d %d %d\", &n, &m, &c);\n    for (int i = 1; i <= c; i++)\n        scanf(\"%d\", &p[i]);\n    long long start = clock();\n\n    ans.setmap();\n    ans_q = ans.getq();\n\n    for (int i = 0; i < 3; i++)\n        search();//\u6a21\u62df\u9000\u706b\u4e09\u6b21\n    ans.put();//\u8f93\u51fa\n\n    printf(\"%d\\n\", ans_q);//\u8fd9\u51e0\u884c\u90fd\u662f\u8981\u53bb\u6389\u7684\n    printf(\"%lf\\n\", (double)(clock() - start) / CLOCKS_PER_SEC);\n\n    system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1516732567,
        "uid": 64366,
        "name": "ddwqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "# \u7eaf\u7cb9\u6a21\u62df\u9000\u706b\uff01\uff01\n****\n\u611f\u8c22\uff1a[\u6211\u7684\u597d\u76c6\u53cb\uff1a\u8d85\u7d1a\u00b7\u8003\u5834WA\u602a](https://www.luogu.org/space/show?uid=73574)\u5e2e\u6211\u7ea0\u6b63\u4e86\u67d0\u4e9b\u9519\u8bef\n****\n\u9898\u5916\u8bdd:\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u6bd4\u8f83\u597d\u505a\u7684\uff0c~~\u4f46\u662f\u6211\u7528\u5c0f\u53f7\u4ea4\u4e8690\u904d\u624d\u8fc7~~\n\n\u4e0d\u4fe1\u53ef\u4ee5\u53bb\u770b\uff0c\u5c0f\u53f7\uff1a[\u6a21\u62df\u9000\u706b](https://www.luogu.org/space/show?uid=147609)\n****\n[P3936\u9898\u9762](https://www.luogu.org/problemnew/show/P3936)\n\n\u5f00\u59cb~~\u4e71\u641e~~\u8bb2\u601d\u8def\uff1a\n\n1.\u6309\u7167\u9898\u76ee\u8981\u6c42\u5148\u5efa\u4e00\u4e2a\u6709\u987a\u5e8f\u7684\u56fe\uff0c\u6c42\u51faq\n\n\u90a3\u6837\u4f8b\u6253\u6bd4\u65b9\uff1a\n\n\u8f93\u5165\uff1a\n\n2 3 3\n\n1 2 2\n\n\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u987a\u5e8f\u5efa\u56fe~~\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u968f\u673a\u5efa\u56fe~~\n\n\u6309\u987a\u5e8f\u5efa\u56fe\u540e\u4e3a\uff1a\n\n| 1 | 2 | 2 |\n| :----------: | :----------: | :----------: |\n| 3 | 3 | 3 |\n\n\u4ee3\u7801\uff1a\n\n~~~cpp\nvoid getmap()\n{\n    int x=1,y=1;\n    for(int i=1;i<=c;i++)\n    {\n        while(color[i]--)\n        {\n            g[x][y]=i;\n            nowg[x][y]=i;\t\n            if(y==m)\n            {\n                x++;\n                y=1;\n            }\n            else\n                y++;\n        }\n    }\n}\n~~~\n\n2.\u5c31\u53ef\u4ee5\u5f00\u59cb~~\u968f\u610f\u4e71\u641e~~\u7384\u5b66\u6a21\u62df\u9000\u706b\u4e86\n\n\u5982\u679c\u5bf9\u6a21\u62df\u9000\u706b\u4e0d\u7406\u89e3\u7684\u8bdd~~\u4e0d\u7406\u89e3\u4f60\u4e5f\u4e0d\u4f1a\u6765\u8fd9\u91cc\u5427~~\uff0c\u6211\u63a8\u8350\u53bb\u770b\u770b[2018\u5e74\u6d1b\u8c37\u65e5\u62a5\u7d22\u5f15](https://www.luogu.org/discuss/show/48491)\n\u91cc\u9762\u7684\u6a21\u62df\u9000\u706b\u7b97\u6cd5\n\n\u5982\u679c\u6ca1$AC$\u7684\u8bdd\uff0c\u5c31\u8bd5\u8bd5\u6362\u6362\u53c2\u6570\u5427\uff0c\u6211\u5c31\u662f\u8fd9\u6837\u8bd5\u8fc7\u6765\u7684$qwq$\n\n\u4e0b\u9762\u8d34\u6ca1\u6709\u526a\u679d\u4f46\u662f\u5f00$O3$\u624d$AC$\u4e86\u7684\u4ee3\u7801\n\n~~~cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<ctime>\n#pragma GCC optimize(3)\nusing namespace std;\nint g[25][25],color[55],nowg[25][25];\nint n,m,c,ansq,older;\nint getq()\n{\n    int sum=0;\n    for(int i=1;i<n;i++)\n        for(int j=1;j<m;j++)\n        {\n            if(nowg[i][j]!=nowg[i][j+1])\n                sum++;\n            if(nowg[i][j]!=nowg[i+1][j])\n                sum++;\n        }\n    for(int i=1;i<m;i++)\n        if(nowg[n][i]!=nowg[n][i+1])\n            sum++;\n    for(int i=1;i<n;i++)\n        if(nowg[i][m]!=nowg[i+1][m])\n            sum++;\n    return sum;\n}\nvoid getmap()\n{\n    int x=1,y=1;\n    for(int i=1;i<=c;i++)\n    {\n        while(color[i]--)\n        {\n            g[x][y]=i;\n            nowg[x][y]=i;\t\n            if(y==m)\n            {\n                x++;\n                y=1;\n            }\n            else\n                y++;\n        }\n    }\n}\nvoid cpy()\n{\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n        //\tprintf(\"%d \",nowg[i][j]);\n            g[i][j]=nowg[i][j];\n        }\n        //printf(\"\\n\");\n    }\n}\nvoid cpy1()\n{\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n        //\tprintf(\"%d \",nowg[i][j]);\n            nowg[i][j]=g[i][j];\n        }\n        //printf(\"\\n\");\n    }\n}\nvoid monituihuo()\n{\n    double T=1,deita=0.99999,T_min=1e-5;\n    older=ansq;\n    while(T>T_min)\n    {\n        int x1=(rand()%(n))+1;\n        int y1=(rand()%(m))+1;\n        int x2=(rand()%(n))+1;\n        int y2=(rand()%(m))+1;\n        int huan=nowg[x1][y1];\n        nowg[x1][y1]=nowg[x2][y2];\n        nowg[x2][y2]=huan;\n        int ans_now=getq();\n        double de=ans_now-older;\n        if((de<0)||(exp(-de/T)*RAND_MAX>((rand()%1000000)/1000000.0)))\n            older=ans_now;\n        else\n            cpy1();\n        if(older<=ansq)\n        {\n        \tansq=older;\n        \tcpy();\n        }\n        T*=deita;\n    }\t\n}\nint main()\n{\n    srand(107.77777777);\n    srand(rand());\n    scanf(\"%d%d%d\",&n,&m,&c);\n    for(int i=1;i<=c;i++)\n        scanf(\"%d\",&color[i]);\n    getmap();\n    ansq=getq();\n    older=ansq;\n/*\tfor(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n            printf(\"%d \",nowg[i][j]);\n        printf(\"\\n\");\n    }*/\n    for(int i=1;i<=3;i++)\n        monituihuo();\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n            printf(\"%d \",g[i][j]);\n        cout<<endl;\n    }\n    //cout<<ansq<<endl;\n    return 0;\n}\n~~~\n\n\u5982\u679c\u89c9\u5f97\u6709\u7528\u7684\u8bdd\uff0c\u8ba9\u6211\u770b\u5230\u4f60\u4eec\u7684\u8d5e$qwq$",
        "postTime": 1540602366,
        "uid": 96968,
        "name": "3493441984zz",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "## \u6211\uff1a\u770b\u5ba2\u8001\u7237\u4eec\u70b9\u4e2a\u8d5e\u518d\u8d70\u5427\u3002\n## \u8001\u7237\uff1a\u4e0b\u6b21\u4e00\u5b9a\n\n## \u4ec0\u4e48\u662f\u6a21\u62df\u9000\u706b\n\u6211\u770b\u4e0d\u61c2\u7684\u7b80\u7ecd(\u2686_\u2686)\n  \n\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff08Simulate Anneal\uff0cSA\uff09\u662f\u4e00\u79cd\u901a\u7528\u6982\u7387\u6f14\u7b97\u6cd5\uff0c\u7528\u6765\u5728\u4e00\u4e2a\u5927\u7684\u641c\u5bfb\u7a7a\u95f4\u5185\u627e\u5bfb\u547d\u9898\u7684\u6700\u4f18\u89e3\u3002\u6a21\u62df\u9000\u706b\u662f\u7531S.Kirkpatrick, C.D.Gelatt\u548cM.P.Vecchi\u57281983\u5e74\u6240\u53d1\u660e\u7684\u3002V.\u010cern\u00fd\u57281985\u5e74\u4e5f\u72ec\u7acb\u53d1\u660e\u6b64\u6f14\u7b97\u6cd5\u3002\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u662f\u89e3\u51b3TSP\u95ee\u9898\u7684\u6709\u6548\u65b9\u6cd5\u4e4b\u4e00\u3002\n\u6a21\u62df\u9000\u706b\u7684\u51fa\u53d1\u70b9\u662f\u57fa\u4e8e\u7269\u7406\u4e2d\u56fa\u4f53\u7269\u8d28\u7684\u9000\u706b\u8fc7\u7a0b\u4e0e\u4e00\u822c\u7ec4\u5408\u4f18\u5316\u95ee\u9898\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u662f\u4e00\u79cd\u901a\u7528\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u5176\u7269\u7406\u9000\u706b\u8fc7\u7a0b\u7531\u52a0\u6e29\u8fc7\u7a0b\u3001\u7b49\u6e29\u8fc7\u7a0b\u3001\u51b7\u5374\u8fc7\u7a0b\u8fd9\u4e09\u90e8\u5206\u7ec4\u6210\u3002\n\n\u2014\u2014\u767e\u5ea6\u767e\u79d1\n\n\u5176\u5b9e\u5c31\u662f\u849f\u84bb\u9a97\u5206\u5fc5\u5907\u7b97\u6cd5\n\n## \u6a21\u62df\u9000\u706b\u4e3b\u8981\u601d\u60f3\n\u4e2a\u4eba\u505a\u7684\u9000\u706b\u9898\u4e0d\u591a\uff0c\u4f46\u5c31\u505a\u7684\u51e0\u9053\u9898\u800c\u8a00\uff0c\u9000\u706b\u4e00\u822c\u662f\u5148\u968f\u673a\u751f\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u7528\u8fd9\u4e2a\u5e8f\u5217\u7b97\u51fa\u4e00\u4e2a\u7b54\u6848\uff0c\u5728\u4ea4\u6362\u5e8f\u5217\u91cc\u7684\u4e24\u4e2a\u6570\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u89e3\uff0c\u82e5\u65b0\u89e3\u66f4\u4f18\uff0c\u76f4\u63a5\u66f4\u65b0ans\uff0c\u5426\u8005\u4ee5\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\uff0c\u591a\u8bd5\u51e0\u6b21\u540e\u8f93\u51fa\u7b54\u6848\u3002\n## \t\u6a21\u62df\u9000\u706b\u524d\u7f6e\n \u6a21\u62df\u9000\u706b\u9700\u8981\u7528\u5230\u51e0\u4e2a\u5e38\u91cf\uff0cT_begin,T_end,V,\u5206\u522b\u5bf9\u5e94\u9000\u706b\u521d\u6e29\uff0c\u672b\u6e29\u548c\u9000\u706b\u901f\u5ea6\uff08\u5176\u5b9e\u5c31\u662f\u51b3\u5b9aSA\u51fd\u6570**\u8fd0\u884c\u6b21\u6570**\u7684\uff0c\u80fd\u4e0d\u80fd\u8fc7\u9898\u5927\u90e8\u5206\u5c31\u9760\u8fd9\u4e2a\u4e86\uff09\u3002\n   C++\u81ea\u5e26\u7684**CLOCKS_PER_SEC\uff0cclock()\u7ecf\u5e38\u88ab\u7528\u6765\u5361\u5e38**\uff0cCLOCKS_PER_SEC\u6307\u4e00\u79d2,clock\uff08\uff09\u6307\u5f53\u524d\u65f6\u95f4\u3002\n    \u5e38\u5728\u4ee3\u7801\u6700\u4e0a\u65b9\u5199double be=clock();\n    \u8fd0\u884cSA\u65f6while(clock()-be<0.9*CLOCKS_PER_SEC)SA();\n## \u6a21\u62df\u9000\u706b\u5927\u81f4\u6a21\u677f\n\t```\n```\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\n#include<ctime>\n...\nconst double be=clock()//\u5361\u65f6,\u8bb0\u5f55\u5f53\u524d\u65f6\u95f4\nconst double T_begin=..;//\u9000\u706b\u521d\u6e29\nconst double T_end=..;//\u672b\u6e29\nconst double V=..;//\u901f\u7387\nvoid fz()\n{\n\t... //\u82e5\u9898\u76ee\u6709\u5173\u5e8f\u5217\u64cd\u4f5c\u6a21\u62df\u9000\u706b\u5e38\u9700\u8981\u968f\u673a\u751f\u6210\u4e00\u4e2a\u5e8f\u5217(random_shuffle)\n}\nvoid js()//\u6a21\u62df\u9000\u706b\u6700\u8017\u65f6\u7684\u51fd\u6570\uff0c\u5199\u7684\u597d\u9898\u5c31A\u4e86\n{\n\t...//\u6709\u4e00\u4e2a\u89e3\uff0c\u9700\u7b97\u51fa\u7b54\u6848\uff0c\u540e\u4e0e\u5df2\u77e5\u6700\u4f18\u89e3\u6bd4\u8f83\n}\nvoid SA()//\u6a21\u62df\u9000\u706b\u4e3b\u8981\u51fd\u6570\n{\n \tfz()\n  \t...//\u6539\u53d8\u5f53\u524d\u89e3\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7b54\u6848,\u5e38\u7528rand()\uff1b\n  \tint de=tmp-ans;//tmp\uff1a\u5f53\u524d\u63a5\uff0cans\uff1a\u5df2\u77e5\u6700\u4f18\u89e3\n  \tif (de>0)//\u5f53\u524d\u89e3\u66f4\u4f18\n\telse if (exp(de/T)>(double)rand()/RAND_MAX)\u4ee5\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\u52a3\u89e3\n\telse // \u8ba8\u8bba\u60c5\u51b5\n}\nint mian()\n{\n  \tsrand((int)time(0))\uff1b//\u7384\u5b66\u968f\u673a\u79cd\u5b50\n\t...\n  \twhile(clock()-be<0.9*CLOCKS_PER_SEC)SA();\n   ...//\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}                                             \n```\n\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0bsrand((int)time(0))\n\u56e0\u4e3aC++\u51fd\u6570\u4e2d\u7684rand()\u51fd\u6570\u662f\u4f2a\u968f\u673a\u7684\uff0c\u662f\u5173\u4e8e\u968f\u673a\u79cd\u5b50\u7684\u4e00\u4e2a\u51fd\u6570\uff0csrand\uff08\uff09\u5c31\u662f\u8f93\u5165\u968f\u673a\u79cd\u5b50\uff0ctime(0)\u662f\u5f53\u524d\u65f6\u95f4\uff08\u6211\u4e60\u60ef\u7528\u4e3a\u968f\u673a\u79cd\u5b50\uff09\uff0c~~\u5f53\u7136\u4f60\u53ef\u4ee5\u6076\u81ed\u7684\u7528\u516b\u4f4d\u8d28\u6570~~\n## \u5982\u4f55\u751f\u6210\u65b0\u89e3\uff08\u5373\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u7b54\u6848\uff09\n####  --\u5f15\u7528M_sea\u5927\u4f6c\u7684\u8bdd\n\u5750\u6807\u7cfb\u5185\uff1a\u968f\u673a\u751f\u6210\u4e00\u4e2a\u70b9\uff0c\u6216\u8005\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u3002\n\n\u5e8f\u5217\u95ee\u9898\uff1a random\\_shufflerandom_shuffle \u6216\u8005\u968f\u673a\u4ea4\u6362\u4e24\u4e2a\u6570\u3002\n\n\u7f51\u683c\u95ee\u9898\uff1a\u53ef\u4ee5\u770b\u505a\u4e8c\u7ef4\u5e8f\u5217\uff0c\u6bcf\u6b21\u4ea4\u6362\u4e24\u4e2a\u683c\u5b50\u5373\u53ef\u3002\n\n## \u4f8b\u9898\n### P3936 Coloring\n\u7eaa\u5ff5\u81ea\u5df1\u5199\u7684\u7b2c\u4e00\u9053[\u9ed1\u9898](https://www.luogu.com.cn/problem/P3936)\n\n## \u5173\u4e8e\u672c\u9898\n\u77e5\u9053\u4e86\u6a21\u62df\u9000\u706b\u8fd9\u9053\u9898\u5c31\u597d\u505a\u4e86\n\u9996\u5148\u53ef\u4ee5\u968f\u673a\u67d3\u8272\uff0c\u8bb0\u5f55\u7b54\u6848\uff0c\u968f\u540e\u5728\u4e0d\u65ad\u7684\u66f4\u65b0\u7b54\u6848\u5c31\u884c\u4e86\uff0c\u8ba1\u7b97\u7b54\u6848\u66b4\u529b\u5c31\u884c\u4e86\u3002\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u770b\u7801\n```\n#include<cstdio>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<ctime>\nusing namespace std;\nconst double T0=1e5;\nconst double T_end=1e-3;\nconst double V=0.998;\nint n,m,k,a[100],map[25][25],an[25][25],ans=1e9;\nint dx[2]={1,0},dy[2]={0,1};\nint dx1[4]={1,-1,0,0},dy1[4]={0,0,1,-1};\ndouble be=clock();\nvoid fz()\n{\n\tint xx=1,yy=0;\n\tfor (int i=1;i<=k;++i)\n\t{\n\t\tfor (int j=1;j<=a[i];++j)\n\t\t{\n\t\t\tyy++;\n\t\t\tif (yy>m)\n\t\t\t{\n\t\t\t\tyy=1;\n\t\t\t\txx++;\n\t\t\t}\n\t\t\tmap[xx][yy]=i;\n\t\t}\n\t}\n\t\n}\nint js()\n{\n\tint cnt=0;\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tfor (int j=1;j<=m;++j)\n\t\t{\n\t\t\tfor (int k=0;k<=1;++k)\n\t\t\t{\n\t\t\t\tint ddx=i+dx[k];\n\t\t\t\tint ddy=j+dy[k];\n\t\t\t\tif (ddx>n||ddy>m)continue;\n\t\t\t\tif (map[ddx][ddy]!=map[i][j])cnt++;\n\t\t\t}\n\t\t}\n\t}\n\treturn cnt;\n}\nvoid swap(int a,int b,int c,int d)\n{\n\tint tmp=map[a][b];\n\tmap[a][b]=map[c][d];\n\tmap[c][d]=tmp;\n}\nint calc(int x,int y){\n    int S=0;\n    S+=(map[x][y]!=map[x-1][y])+(map[x][y]!=map[x+1][y])+(map[x][y]!=map[x][y-1])+(map[x][y]!=map[x][y+1]);\n    return S;\n}\nvoid SA()\n{\n\tfz();\n\tdouble T=T0;\n\tint res=js();\n\twhile (T>T_end)\n\t{\n\t\tfor (int i=1;i<=100;i++)\n\t\t{\n\t\t\tint x1=(rand()%n)+1;\n\t\t\tint y1=(rand()%m)+1;\n\t\t\tint x2=(rand()%n)+1;\n\t\t\tint y2=(rand()%m)+1;\n\t\t\tif (map[x1][y1]==map[x2][y2])continue;\n\t\t\tint tmp=res-calc(x1,y1)-calc(x2,y2);\n\t\t\tswap(x1,y1,x2,y2);\n\t\t\ttmp+=calc(x1,y1)+calc(x2,y2);\n\t\t\tint de=res-tmp;\n\t\t\tif (de>0)\n\t\t\t{\n\t\t\t\tres=tmp;\n\t\t\t\tif (res<ans)\n\t\t\t\t{\n\t\t\t\t\tfor (int i=1;i<=n;++i)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (int j=1;j<=m;++j)\n\t\t\t\t\t\t\tan[i][j]=map[i][j];\n\t\t\t\t\t}\n\t\t\t\t\tans=res;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (exp(de/T)>(double)rand()/RAND_MAX)\n\t\t\t\tres=tmp;\n\t\t\telse\n\t\t\t\tswap(x1,y1,x2,y2);\n\t\t}\n\t\tT*=V;\n\t}\n\t\t\n}\nint main()\n{\n\tsrand(9);\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor (int i=1;i<=k;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfz();\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\t\tan[i][j]=map[i][j];\n\tans=js();\n\twhile(clock()-be<0.9*CLOCKS_PER_SEC)SA();\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tprintf(\"%d \",an[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\u6211\u4e5f\u5c31\u4ea4\u4e86\u51e0\u9875\uff08= =\uff09\n## \u6700\u540e\n\u6700\u540e\u795d\u5927\u5bb6~~\u9a97\u5206\u6109\u5feb~~Oier\u7684\u4e8b\u600e\u4e48\u80fd\u53eb\u9a97\u5206\u5462\uff1f\n\u795d\u5927\u5bb6Coding\u6109\u5feb\n\n\n\n\n\t\n\n\n ",
        "postTime": 1595461632,
        "uid": 227436,
        "name": "\u5e74\u534e\u5929\u5730",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "\u8003\u8651\u641c\u7d22\uff0c\u53d1\u73b0\u590d\u6742\u5ea6\u7206\u70b8  \n-------\u8d2a\u5fc3\uff0c\u6b63\u786e\u6027\u8fc7\u4f4e(~~\u5b9e\u6d4b\u7206\u70b8~~)\n\n\u4e8e\u662f\uff0c~~\u53d1\u73b0~~\u8fd9\u9898\u662f\u6a21\u62df\u9000\u706b\n\n\u8fd9\u91cc\u4e0d\u8bb2\u89e3\u9000\u706b\u7684\u5b9a\u4e49\u4e86\uff0c\u521d\u5b66\u9000\u706b\u53ef\u4ee5\u53bb\u5e73\u8861\u70b9\n\n\u9000\u706b\u672c\u8eab\u7ef4\u62a4\u4e00\u4e2a\u7b54\u6848\u56fe\u50cf\uff0c\u7b54\u6848\u7684q\uff0c\u5f53\u524d\u56fe\u50cf\uff0c\u5f53\u524d\u7684q  \n\u66b4\u529b\u6839\u636e\u8ba1\u7b97\u56fe\u50cf\u8ba1\u7b97q\u5373\u53ef\n\n\u5173\u4e8e\u8fd9\u9898\u6211\u4eec\u53d1\u73b0\u5982\u679c\u4efb\u7531\u5176\u968f\u673a\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u504f\u5dee\u592a\u5927  \n\u4f46\u5982\u679c\u8fc7\u591a\u4fee\u6b63\u504f\u5dee\uff0c\u53ef\u80fd\u5bfc\u81f4\u5176\u8dc3\u51fa\u5c40\u90e8\u6700\u4f18\u89e3\u7684\u80fd\u529b\u964d\u4f4e  \n\u4e8e\u662f\u6211\u52a0\u4e86\u8fd9\u4e48\u4e00\u53e5\u8bdd\n\n```cpp\nif (curq - ansq >= (temp * 90)){\n\tfor (ri i = 1; i <= n; ++i)\n\t\tfor (ri j = 1; j <= m; ++j)\n\t\t\tcur_map[i][j] = ans_map[i][j];\n\tcurq = ansq;\n}\n```\n\u5373\u6839\u636e\u5f53\u524d\u6e29\u5ea6\u53ca\u65f6\u4fee\u6b63\u504f\u5dee\uff0c\u6e29\u5ea6\u8d8a\u9ad8\uff0c\u504f\u5dee\u5bb9\u5fcd\u5ea6\u8d8a\u9ad8\n\n\n\u6700\u540e\u653e\u4e2a\u4ee3\u7801(\u4e0d\u4fdd\u8bc1\u4e00\u76f4AC)\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#define ll long long\n#define ri register int\n\nconst double DEL = 0.00001;\nconst double DELTA = 0.99999;\n\ninline ll read(){\n    ll x = 0; int zf = 1; char ch = ' ';\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') zf = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); return x * zf;\n}\n\nint n, m, c;\nint ansq;\nint ans_map[25][25];\nint curq;\nint cur_map[25][25];\nint p[25];\n\ninline void swp(int x1, int y1, int x2, int y2){\n    int t = cur_map[x1][y1];\n    cur_map[x1][y1] = cur_map[x2][y2];\n    cur_map[x2][y2] = t;\n}\n\ninline int getQ(int x1, int y1, int x2, int y2){\n    int res = 0;\n    swp(x1, y1, x2, y2);\n    for (ri i = 1; i <= n; ++i)\n        for (ri j = 1; j <= m; ++j){\n            if (i < n)\n                if (cur_map[i][j] != cur_map[i+1][j])\n                    ++res;\n            if (j < m)\n                if (cur_map[i][j] != cur_map[i][j+1])\n                    ++res;\n        }\n    swp(x1, y1, x2, y2);\n    return res;\n}\n\nvoid SA(){\n    register double temp = 10000.0;\n    int x1, y1, x2, y2;\n    int excq;\n    while (temp >= DEL){\n        x1 = (rand() % n) + 1, y1 = (rand() % m) + 1, x2 = (rand() % n) + 1, y2 = (rand() % m) + 1;\n        srand(rand());\n        excq = getQ(x1, y1, x2, y2);\n        if (excq < ansq){\n            curq = ansq = excq;\n            swp(x1, y1, x2, y2);\n            for (ri i = 1; i <= n; ++i)\n                for (ri j = 1; j <= m; ++j)\n                    ans_map[i][j] = cur_map[i][j];\n        }\n        else if (exp(-(excq - ansq) / temp) * RAND_MAX > ((rand() % 1000000) / 1000000.0)){\n            curq = excq;\n            swp(x1, y1, x2, y2);\n        }\n        else{\n        \tif (curq - ansq >= (temp * 90)){\n            \tfor (ri i = 1; i <= n; ++i)\n                    for (ri j = 1; j <= m; ++j)\n                        cur_map[i][j] = ans_map[i][j];\n                curq = ansq;\n            }\n        }\n        temp *= DELTA;\n    }\n}\n\nint main(){\n    srand(19260817);\n    srand(rand()); srand(rand()); srand(rand());\n    n = read(), m = read(), c = read();\n    for (ri i = 1; i <= c; ++i)\n        p[i] = read();\n    int k1 = 1, k2 = 1;\n    for (ri i = 1; i <= n; ++i)\n        for (ri j = 1; j <= m; ++j){\n            ans_map[i][j] = cur_map[i][j] = k1;\n            ++k2;\n            if (k2 > p[k1]){\n                ++k1;\n                k2 = 1;\n            }\n        }\n    ansq = 0;\n    for (ri i = 1; i <= n; ++i)\t\n        for (ri j = 1; j <= m; ++j){\n            if (i < n)\n                if (cur_map[i][j] != cur_map[i+1][j])\n                    ++ansq;\n            if (j < m)\n                if (cur_map[i][j] != cur_map[i][j+1])\n                    ++ansq;\n        }\n    //for (int k = 1; k <= 3; ++k)\n    SA();//, curq = ansq;\n    for (ri i = 1; i <= n; ++i)\n        for (ri j = 1; j <= m; ++j){\n            printf(\"%d\", ans_map[i][j]);\n            if (j < m)\n                printf(\" \");\n            else\n                printf(\"\\n\");\n        }\n        \n    //\u8c03\u8bd5 \n    //printf(\"%d\", ansq);\n    return 0;\n}\n\n```",
        "postTime": 1556437509,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "\n#### \u7b97\u6cd5\u4e00\n\n\n\u6211\u4f1a\u968f\u673a\uff01\n\n\n\u6ca1\u8bd5\u8fc7\uff0c\u671f\u671b\u5f97\u5206$40$\u4ee5\u4e0b\u3002\n\n\n#### \u7b97\u6cd5\u4e8c\n\n\n\u6211\u4f1a\u9a97\u5206\uff01\n\n\n\u6309\u4ece\u5de6\u5f80\u53f3\uff0c\u4ece\u4e0a\u5f80\u4e0b\u7684\u987a\u5e8f\u4f9d\u6b21\u586b\u989c\u8272\uff0c\u671f\u671b\u5f97\u5206$60$\u3002\n\n\n#### \u7b97\u6cd5\u4e09\n\n\n\u6211\u4f1a\u8d2a\u5fc3\uff01\n\n\n\u624b\u73a9\u51e0\u4e2a\u4f8b\u5b50\u4e0d\u96be\u53d1\u73b0\u628a\u76f8\u540c\u989c\u8272\u7684\u653e\u5728\u4e00\u8d77\u66f4\u4f18\u3002\u6bcf\u6b21\u586b\u989c\u8272\uff0c\u8d2a\u5fc3\u627e\u4e00\u5757\u5728\u8fb9\u754c\u4e14\u5c3d\u53ef\u80fd\u5927\u7684\u4f4d\u7f6e\uff0c\u653e\u4e0b\u8be5\u989c\u8272\u7684\u6240\u6709\u683c\u5b50\u3002\u671f\u671b\u5f97\u5206$70$\u81f3$90$\u3002\n\n\n#### \u7b97\u6cd5\u56db\n\n\n\u6211\u4f1a\u641c\u7d22\uff01\n\n\n\u641c\u7d22\u65f6\u95f4\u590d\u6742\u5ea6$O(c^{nm})$\uff0c\u8d85\u65f6\u65e0\u7591\u3002\n\n\n\u563f\u563f\u563f\u3002\n\n\n#### \u7b97\u6cd5\u4e94\n\n\n\u6211\u4f1a\u7269\u7406\uff01\n\n\n\u54e6\u8c41\uff1f\u641c\u7d22\u5176\u5b9e\u5f88\u9760\u8fd1\u6b63\u89e3\uff0c\u4f46\u662f\u65f6\u95f4\u592a\u6162\u3002\u6211\u4eec\u8003\u8651\u6a21\u62df\u9000\u706b\u3002\n\n\n\u6bcf\u6b21\u64cd\u4f5c\u4ea4\u6362\u4e24\u4e2a\u5728\u8054\u901a\u5757\u8fb9\u754c\u7684\u683c\u5b50\uff0c\u8ba1\u7b97\u7b54\u6848\u662f\u5426\u66f4\u4f18\uff0c\u6309\u6982\u7387\u66f4\u65b0\u3002\n\n\n\n#### \u7b97\u6cd5\u516d\n\n\n\u7b49\u7b49\u2026\u2026\u4e3a\u5565\u4f1a\u662f$90$\uff1f\n\n\n\u56e0\u4e3a\u4f60\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\u3002\n\n\n\u591a\u968f\u673a\u51e0\u6b21\u5c31\u597d\u4e86\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O($\u8dd1\u5f97\u8fc7$)$\uff0c\u671f\u671b\u5f97\u5206$100$\u3002\n",
        "postTime": 1509210608,
        "uid": 1422,
        "name": "Snakes",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u5f88\u6c34\uff0c\u5c31\u662f\u666e\u901a\u7684\u6c42\u6700\u4f18\u89e3\u6700\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u5957\u7528**Metropolis**\u63a5\u53d7\u51c6\u5219\u3002\u4f46\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5bf9\u5f53\u524d\u6700\u4f18\u89e3\u5fae\u8c03\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6bcf\u6b21\u968f\u673a\u4ea4\u6362\u4e24\u4e2a\u70b9\u6765\u8fdb\u884c\u5fae\u8c03\u3002\n\n\u53e6\u5916\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5982\u4f55\u5feb\u901f\u8ba1\u6570\u4e0d\u540c\u8054\u901a\u5757\u4e4b\u95f4\u7684\u65b9\u683c\u8fb9\u7684\u6761\u6570\uff0c\u53ef\u4ee5\u5f88\u8f7b\u6613\u7684\u53d1\u73b0,\u4e00\u4e2a\u70b9$(x,y)$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5c31\u662f\u770b\u5b83\u7684\u4e0a\u4e0b\u5de6\u53f3\u4e0e\u5b83\u7684\u989c\u8272\u662f\u5426\u4e0d\u540c\uff0c\u4e0d\u540c\u5373\u4e3a1\u3002\u4f46\u5982\u679c\u6bcf\u6b21\u5bf9\u4e00\u4e2a\u70b9\u90fd\u4e0a\u4e0b\u5de6\u53f3\u7b97\u8d21\u732e\u7684\u8bdd\uff0c\u53ef\u4ee5\u53d1\u73b0\u4f1a\u88ab\u7b97\u4e24\u904d\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u70b9\u7684\u5de6,\u4e0a\u7edf\u8ba1\u8d21\u732e\u5373\u53ef\u5f97\u5230**\u4e0d\u540c\u8054\u901a\u5757\u4e4b\u95f4\u7684\u65b9\u683c\u8fb9\u7684\u6761\u6570**$q$\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u53d1\u73b0\uff0c\u4fee\u6539\u70b9$(x,y)$\u7684\u989c\u8272\uff0c\u53ea\u4f1a\u5bf9$(x+1,y)$,$(x,y+1)$,$(x,y)$\u4e09\u4e2a\u70b9\u7684\u8d21\u732e\u4ea7\u751f\u5f71\u54cd\uff0c\u56e0\u6b64\u6211\u4eec\u80fd\u591f\u5728$O(1)$\u7684\u65f6\u95f4\u4e0b\u5f97\u5230\u4ea4\u6362\u4efb\u610f\u4e24\u4e2a\u70b9\u7684\u989c\u8272\u5bf9\u7b54\u6848\u9020\u6210\u7684\u5f71\u54cd\u3002\n\n\u6700\u91cd\u8981\u7684\uff0c\u5728\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u63a5\u53d7\u4e00\u4e2a\u6b21\u4f18\u89e3\u65f6\u4e0d\u80fd\u76f4\u63a5\u66ff\u6362\u6700\u4f18\u89e3\u7ee7\u7eed\u8f6c\u79fb\uff0c\u5fc5\u987b\u6bcf\u6b21\u90fd\u8bb0\u5f55\u4e0b\u6700\u4f18\u89e3\uff0c\u907f\u514d\u4ee3\u7801\u8f93\u51fa\u65f6\u4e0d\u662f\u5f53\u524d\u6700\u4f18\u89e3\u7684\u60c5\u51b5\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u7ec6\u8282\u6709\u70b9\u591a\uff0c\u8be6\u89c1\u4ee3\u7801\n```cpp\n#include<ctime>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#define f(i,j) (((a[i][j]!=a[i-1][j])&&(i!=0))+((a[i][j]!=a[i][j-1])&&(j!=0)))\n#define fx(i,j) ((a[i][j]!=a[i-1][j])&&(i!=0))\n#define fy(i,j) ((a[i][j]!=a[i][j-1])&&(j!=0))\n#define double long double\nconst double d=0.999995;\nint n,m,c,res,minn=40000;\nint p[55],cnt[55];\nint a[25][25],tmp[25][25];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(f=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline int calc(int x1,int y1,int x2,int y2) {\n\tint res=0;\n\tres-=fx(x1+1,y1)+fy(x1,y1+1)+fx(x2+1,y2)+fy(x2,y2+1)+f(x1,y1)+f(x2,y2);\n\tstd::swap(a[x1][y1],a[x2][y2]);\n\tres+=fx(x1+1,y1)+fy(x1,y1+1)+fx(x2+1,y2)+fy(x2,y2+1)+f(x1,y1)+f(x2,y2);\n\treturn res; \n}\ninline void SA() {\n\tdouble t=500;\n\twhile(t>1e-15) {\n\t\tint x1=rand()%n,y1=rand()%m,x2=rand()%n,y2=rand()%m,tot=0;\n \t\tint del=calc(x1,y1,x2,y2);\n \t\t//if(del<0||exp(-del*1.00/t)*RAND_MAX>rand()) ans+=del;\n \t\t//else std::swap(a[x1][y1],a[x2][y2]);\n \t\tif(res+del<minn) {\n \t\t\tfor(register int i=0;i<n;++i) {\n \t\t\t\tfor(register int j=0;j<m;++j) {\n \t\t\t\t\ttmp[i][j]=a[i][j];\n \t\t\t\t}\n \t\t\t}\n \t\t\tres+=del;minn=res;\n \t\t}\n \t\telse if(exp(-del*1.00/t)*RAND_MAX>rand()) res+=del;\n \t\telse std::swap(a[x1][y1],a[x2][y2]);\n \t\tt*=d;\n\t} \n}\nint main() {\n\tint x=1;\n\tsrand(20050103);\n\tn=read(),m=read(),c=read();\n\tfor(register int i=1;i<=c;++i) p[i]=read();\n\tfor(register int i=0;i<n;++i) {\n\t\tfor(register int j=0;j<m;++j) {\n\t\t\tif(p[x]<=cnt[x]) ++x;\n\t\t\ta[i][j]=x;res+=f(i,j);++cnt[x];\n\t\t\t//printf(\"%d \",a[i][j]);\n\t\t}\n\t\t//printf(\"\\n\");\n\t}\n\twhile((double)clock()/CLOCKS_PER_SEC<0.98) SA();\n\tfor(register int i=0;i<n;++i) {\n\t\tfor(register int j=0;j<m;++j) {\n\t\t\tprintf(\"%d \",tmp[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1581083818,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "[P3936 Coloring](https://www.luogu.com.cn/problem/P3936)\r\n\r\n\u5f02\u4e8e\u6a21\u62df\u9000\u706b\u7684\u4e00\u822c\u968f\u673a\u95ee\u9898\u89e3\u6cd5\u3002\r\n\r\n## \u3010\u9898\u610f\u3011\r\n\r\n\u5c06\u7f51\u683c\u56fe\u67d3\u8272\uff0c\u89c4\u5b9a\u6bcf\u79cd\u989c\u8272\u7684\u683c\u5b50\u7684\u6570\u91cf\uff0c\u6c42\u4e00\u4e2a\u65b9\u6848\uff0c\u8ba9\u76f8\u90bb\u683c\u5b50\u4e0d\u540c\u989c\u8272\u7684\u8fb9\u7684\u6570\u91cf\u5c3d\u91cf\u5c0f\u3002\r\n\r\n## \u3010\u5206\u6790\u3011\r\n\r\n\u628a\u76f8\u540c\u989c\u8272\u7684\u6446\u4e00\u8d77\uff0c\u80fd\u5f97\u5230\u4e00\u4e2a\u521d\u59cb\u7684\u8f83\u4f18\u89e3\u3002\r\n\r\n\u7136\u540e\u679a\u4e3e\u683c\u5b50\u5bf9\uff0c\u82e5\u4ea4\u6362\u989c\u8272\u80fd\u8ba9\u5f53\u524d\u66f4\u4f18\u5c31\u4ea4\u6362\u3002\r\n\r\n\u63a5\u7740\u8fdb\u884c\u5fae\u8c03\uff0c\u968f\u673a\u9009\u62e9 $20$ \u5bf9\u683c\u5b50\u4ea4\u6362\u989c\u8272\uff0c\u4ee5\u907f\u514d\u9677\u5165\u50f5\u5c40\u3002\r\n\r\n\u5361\u4e2a\u65f6\u591a\u505a\u51e0\u904d\u5c31\u884c\uff0c\u4e0d\u80fd\u8fc7\u7684\u6362\u51e0\u4e2a\u79cd\u5b50\u5c31\u884c~~\u6211\u7528npy\u7684\u751f\u65e5\u5c31\u8fc7\u4e86~~\u3002\r\n\r\n\u6211\u5c06\u7f51\u683c\u56fe\u6620\u5c04\u6210\u5e8f\u5217\uff0c\u611f\u89c9\u4f1a\u597d\u5199\u70b9\u3002\r\n\r\n\u8fd9\u4e2a\u505a\u6cd5\u6bd4\u6a21\u62df\u9000\u706b\u66b4\u529b\u591a\u4e86\uff0c\u7701\u53bb\u4e86\u8c03\u53c2\u7684\u65f6\u95f4\uff0c\u4e14\u6b63\u786e\u6027\u4e5f\u6709\u4e00\u5b9a\u4fdd\u8bc1\u3002\r\n\r\n## \u3010\u7b97\u6cd5\u3011\r\n\r\n\u968f\u673a\u5316\u8d2a\u5fc3\r\n\r\n## \u3010\u4ee3\u7801\u3011\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define DB double\r\nusing namespace std;\r\nconst int maxn=25,maxt=maxn*maxn,maxc=55;\r\nint n,m,c,t;\r\nint p[maxc];\r\nint mp[maxn][maxn],a[maxt],id[maxt],ma[maxt];\r\n#define id(x,y) ((x-1)*m+y)\r\n#define x(id) ((id+m-1)/m)\r\n#define y(id) ((id+m-1)%m+1)\r\nint ans,now;\r\nint calc(){\r\n\tint ret=0;\r\n\tfor(int i=1;i<t;i++){\r\n\t\tret+=(x(i)<n&&a[i]!=a[i+m])+(y(i)<m&&a[i]!=a[i+1]);\r\n\t}\r\n\treturn ret;\r\n}\r\nint del(int id){\r\n\treturn (x(id)<n&&a[id]!=a[id+m])+(y(id)<m&&a[id]!=a[id+1])+(x(id)>1&&a[id]!=a[id-m])+(y(id)>1&&a[id]!=a[id-1]);\r\n}\r\nint main(){\r\n\t#ifndef ONLINE_JUDGE\r\n\tfreopen(\"P3936.in\",\"r\",stdin);\r\n\tfreopen(\"P3936.out\",\"w\",stdout);\r\n\t#endif\r\n\tsrand(20050205);\r\n\tscanf(\"%d%d%d\",&n,&m,&c);\r\n\tt=n*m;\r\n\tfor(int i=1;i<=c;i++) scanf(\"%d\",&p[i]);\r\n\tfor(int i=1,j=1,x=p[j];i<=t;i++){\r\n\t\tif(!x) x=p[++j];\r\n\t\tma[i]=a[i]=j;\r\n\t\tid[i]=i;\r\n\t\tx--;\r\n\t}\r\n\tans=calc();\r\n\twhile((DB)clock()/CLOCKS_PER_SEC<0.95){\r\n\t\tfor(int i=1;i<=t;i++) a[i]=ma[i];\r\n\t\tfor(int i=1;i<=20;i++) swap(a[rand()%t+1],a[rand()%t+1]);\r\n\t\tnow=calc();\r\n\t\trandom_shuffle(id+1,id+1+t);\r\n\t\tbool flg=1;\r\n\t\twhile(flg){\r\n\t\t\tflg=0;\r\n\t\t\tfor(int i=1;i<t;i++)\r\n\t\t\tfor(int j=i+1;j<=t;j++){\r\n\t\t\t\tint x=id[i],y=id[j];\r\n\t\t\t\tint nxt=now-del(x)-del(y);\r\n\t\t\t\tswap(a[x],a[y]);\r\n\t\t\t\tnxt+=del(x)+del(y);\r\n\t\t\t\tif(nxt<ans){\r\n\t\t\t\t\tans=now=nxt;\r\n\t\t\t\t\tflg=1;\r\n\t\t\t\t\tfor(int k=1;k<=t;k++) ma[k]=a[k];\r\n\t\t\t\t}else\r\n\t\t\t\tif(nxt<now){\r\n\t\t\t\t\tnow=nxt;\r\n\t\t\t\t\tflg=1;\r\n\t\t\t\t}else swap(a[x],a[y]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n//\tprintf(\"%d\\n\",ans);\r\n\tfor(int i=1;i<=t;i++){\r\n\t\tprintf(\"%d\",ma[i]);\r\n\t\tif(i%m==0){\r\n\t\t\tif(i^t) putchar(10);\r\n\t\t}\r\n\t\telse putchar(' ');\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1636687452,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "### \u6a21\u62df\u9000\u706b\n\n#### \u8fd9\u91cc\u6709\u4e00\u4e2a\u641c\u7d22\u4e13\u8bb2\u7684[\u8bfe\u4ef6](http://www.cnblogs.com/xzyxzy/p/8546384.html)?(\u9884\u8ba12018\u6691\u5047\u4e4b\u524d\u5b8c\u6210\u5427\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u4e00\u770b\uff0c\u4e5f\u8bb8\u4e0d\u662f\u4ee5\u8bfe\u4ef6\u7684\u5f62\u5f0f\u5448\u73b0)\n\n\u601d\u8def\u5c31\u662frand\u4e00\u4e2a\u7b54\u6848\uff0c\u7136\u540e\u9000\u706b\u5730\u4ea4\u6362\uff0c\u76f4\u5230\u6700\u4f18\n\n\u8ba1\u7b97\u8d21\u732e\u7528\u53e6\u5916\u4e00\u79cd\u65b9\u4fbf\u70b9\u7684\u65b9\u5f0f\uff1a\u6bcf\u4e2a\u70b9\u5f80\u56db\u5468\u7b97\uff0c\u90a3\u4e48\u65b9\u683c\u5185\u7684\u8d21\u732e\u88ab\u7b97\u4e24\u6b21\uff0c\u8fb9\u754c\u4e0a\u88ab\u7b97\u4e00\u6b21\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd\n\n## Code\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<ctime>\nusing namespace std;\nint N,M,C,p[51];\nint A[25][25],E[51],out[25][25];\nint sum,ans=1000000;\nint Get(int x,int y)\n{\n    int Ans=0;\n    if(A[x][y]!=A[x-1][y]) Ans++;\n    if(A[x][y]!=A[x+1][y]) Ans++;\n    if(A[x][y]!=A[x][y-1]) Ans++;\n    if(A[x][y]!=A[x][y+1]) Ans++;\n    return Ans;\n}\nvoid Update(int k)\n{\n    if(ans<=k) return;\n    ans=k;\n    for(int i=1;i<=N;i++)\n        for(int j=1;j<=M;j++)\n            out[i][j]=A[i][j];\n}\ndouble Rand(){return 1.0*(rand()%100000000)/100000000;}\nint Rand(int x){return rand()%x+1;}\nvoid SA(double T)\n{\n    while(T>1e-15)\n    {\n        T*=0.99999;\n        int x1=Rand(N),x2=Rand(N);\n        int y1=Rand(M),y2=Rand(M);\n        int p=sum;\n        p-=Get(x1,y1)+Get(x2,y2);\n        swap(A[x1][y1],A[x2][y2]);\n        p+=Get(x1,y1)+Get(x2,y2);\n        if(p<sum||exp((sum-p)/T)>Rand()) {Update(sum=p);continue;}\n        swap(A[x1][y1],A[x2][y2]);\n    }\n}\nint main()\n{\n    srand(19260817233);\n    cin>>N>>M>>C;\n    for(int i=1;i<=C;i++) cin>>p[i];\n    int T=5;\n    while(T--)\n    {\n        for(int i=1;i<=C;i++) E[i]=p[i];\n        for(int i=1;i<=N;i++)\n            for(int j=1,x=1;j<=M;j++)\n            {\n                x=rand()%C+1;\n                while(!E[x]) x=rand()%C+1;\n                A[i][j]=x; E[x]--;\n            }\n        sum=0;\n        for(int i=1;i<=N;i++) \n            for(int j=1;j<=M;j++)\n                sum+=Get(i,j);\n        Update(sum);SA(100000000);\n    }\n    for(int i=1;i<=N;i++,puts(\"\"))\n        for(int j=1;j<=M;j++)\n            printf(\"%d \",out[i][j]);\n    return 0;\n}\n//\u4e4b\u524d\u8fd9\u91cc\u4e00\u4e2a\u9519\u8bef\u627e\u4e86\u4e00\u5468\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2aB\u5b58\u8be5\u70b9\u8d21\u732e\uff0c\u4f46\u662f\u4ea4\u6362\u7684\u8bdd\u5e94\u8be5\u6539\u52a810\u4e2aB\n//\u800c\u6211\u53ea\u6539\u4e862\u4e2a\uff0c\u628a\u8d21\u732e\u7b97\u6210\u8d1f\u6570\uff0c\u4f46\u662fsomehowAC\u4e86\n\n```\n## \u4e0d\u4fdd\u8bc1\u7a0b\u5e8f\u80fd\u4e00\u904dAC(\u4f60\u4e5f\u770b\u5230\u4e86\u662f\u5b8c\u5168\u968f\u673a\u7684\u968f\u673a\u79cd\u5b50)\n\n\n~~\u53e6\u5916\u6211\u5f88\u8ff7\u7684\u5730\u65b9\u662f\u8fd9\u4e2anow\uff08\u8d21\u732e\uff09\u7b97\u5230\u6700\u540e\u662f\u8d1f\u6570\u3002\u3002~~\n\n~~\u6709\u6ca1\u6709\u5927\u4f6c\u80fd\u6559\u6559\u6211QAQ~~\n\n\u597d\u7684\u627e\u5230\u539f\u56e0\u4e86Upd:7.18",
        "postTime": 1526013898,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "# \u5173\u4e8e\u9000\u706b\n#### \u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff08Simulate Anneal\uff0cSA\uff09\u662f\u4e00\u79cd\u901a\u7528\u6982\u7387\u6f14\u7b97\u6cd5\uff0c\u7528\u6765\u5728\u4e00\u4e2a\u5927\u7684\u641c\u5bfb\u7a7a\u95f4\u5185\u627e\u5bfb\u547d\u9898\u7684\u6700\u4f18\u89e3\u3002\u6a21\u62df\u9000\u706b\u662f\u7531S.Kirkpatrick, C.D.Gelatt\u548cM.P.Vecchi\u57281983\u5e74\u6240\u53d1\u660e\u7684\u3002V.\u010cern&yacute;\u57281985\u5e74\u4e5f\u72ec\u7acb\u53d1\u660e\u6b64\u6f14\u7b97\u6cd5\u3002\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u662f\u89e3\u51b3TSP\u95ee\u9898\u7684\u6709\u6548\u65b9\u6cd5\u4e4b\u4e00\u3002\n#### \u6a21\u62df\u9000\u706b\u7684\u51fa\u53d1\u70b9\u662f\u57fa\u4e8e\u7269\u7406\u4e2d\u56fa\u4f53\u7269\u8d28\u7684\u9000\u706b\u8fc7\u7a0b\u4e0e\u4e00\u822c\u7ec4\u5408\u4f18\u5316\u95ee\u9898\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u662f\u4e00\u79cd\u901a\u7528\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u5176\u7269\u7406\u9000\u706b\u8fc7\u7a0b\u7531\u52a0\u6e29\u8fc7\u7a0b\u3001\u7b49\u6e29\u8fc7\u7a0b\u3001\u51b7\u5374\u8fc7\u7a0b\u8fd9\u4e09\u90e8\u5206\u7ec4\u6210\u3002\n\n# \u8fdb\u5165\u6b63\u9898\n#### 1.how to get \u521d\u59cb\u89e3\n### \tC1.\u968f\u673a\n    \u53ef\u53d8\u6027\u8f83\u5f3a\uff0c\u4f46\u5bb9\u6613\u4f7f\u5f97\u7ed3\u679c\u4e0d\u4ee5\u5f97\u5230\u6700\u4f18\u89e3\u3002\n###    C2.\u8d2a\u5fc3\n    \u628a\u540c\u989c\u8272\u5c45\u4e8e\u4e00\u5904\uff0c\u4f46\u6613\u9677\u5165\u5c40\u4f18\u3002\n## \u6b64\u5904\u9009\u62e9C2\n\n------------\n#### 2.how to change\n### \t\u968f\u673a\u4ea4\u6362\uff0c\u6ca1\u6709\u591a\u4e86\uff08\u6216\u8bb8\u662f\u6211tcl\uff09\n------------\n------------\n#### 3.how to choose\n### \u5206\u7c7b\u8ba8\u8bba\nPs(to:\u4e0b\u4e2a\u72b6\u6001 n:\u5f53\u524d\u72b6\u6001 T(x):\u6b64\u72b6\u6001\u7684\u7ed3\u679c Fi:\u5f53\u524d\u6e29\u5ea6)\n1. T(to)<T(n)----\u76f4\u63a5\u8f6c\u79fb\n1. T(to)>T(n)----\u4ee5exp((T(n)-T(to))/Fi)\u6982\u7387\u63a5\u53d7\n\n------------\n#### End.\u4e0a\u4ee3\u7801\n```cpp\n#include<ctime>\n#include<cmath>\n#include<cstdio> \n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing std::swap;\n# define read read1<int>()\n# define Type template<typename T>\n# define Rand ((double)rand()/RAND_MAX)\nType inline const T read1()\n{\n    T m=0;\n    char k=getchar();\n    while(('0'>k||k>'9')&&(k!='-'))k=getchar();\n    const bool f=(k=='-'?1:0);\n    if(f)k=getchar();\n    while('0'<=k&&k<='9')m=(m<<3)+(m<<1)+(k^48),k=getchar();\n    return f?-m:m;\n}\nint a[22][22],n,m,c,*w[51][2],p[51],x[4]={1,-1,0,0},y[4]={0,0,1,-1},ta[22][22];\nint Get()\n{\n\tint t=0;\n\tfor(int i=0;i++^n;)\n\t\tfor(int j=0;j++^m;)\n\t\t\tfor(int k=0;k^4;++k)\n\t\t\t\tt+=a[i+x[k]][j+y[k]]&&a[i][j]!=a[i+x[k]][j+y[k]];\n\treturn t;\n}\nint main()\n{\n\tsrand(time(NULL));\n\tn=read,m=read,c=read;\n\tif(c==1)\n\t{\n\t\tfor(int i=0;i++^n;putchar('\\n'))\n\t\t\tfor(int j=0;j++^m;printf(\"1 \"));\n\t\treturn 0;\n\t}\n\tint nx=1,ny=1;\n\tfor(int i=0;i++^c;)\n\t{\n\t\tp[i]=read;\n\t\tw[i][0]=new int[p[i]],w[i][1]=new int[p[i]];\n\t\tfor(int j=0;j^p[i];++j)\n\t\t{\n\t\t\tif(ny==m+1)++nx,ny=1;\n\t\t\ta[w[i][0][j]=nx][w[i][1][j]=ny]=i;\n\t\t\tta[nx][ny]=i;\n\t\t\t++ny;\n\t\t}\n\t}\n\tint ans=Get(),dans,tans=ans;\n\tfor(int T=10;T--;)\n\t{\n\t\tdouble fi=100000,ne=0.9999;\n\t\twhile(fi>1e-10)\n\t\t{\n\t\t\tint o[2],p1[2];\n\t\t\to[0]=rand()%c+1;\n\t\t\to[1]=rand()%p[o[0]];\n\t\t\tdo p1[0]=rand()%c+1;while(o[0]==p1[0]);\n\t\t\tp1[1]=rand()%p[p1[0]];\n\t\t\tswap(w[o[0]][0][o[1]],w[p1[0]][0][p1[1]]);\n\t\t\tswap(w[o[0]][1][o[1]],w[p1[0]][1][p1[1]]);\n\t\t\tswap(a[w[o[0]][0][o[1]]][w[o[0]][1][o[1]]],a[w[p1[0]][0][p1[1]]][w[p1[0]][1][p1[1]]]);\n\t\t\tint dans=Get();\n\t\t\tif(dans<ans)\n\t\t\t{\n\t\t\t\tans=dans;\n\t\t\t\tif(tans>dans)\n\t\t\t\t\tfor(int i=0;i++^n;)\n\t\t\t\t\t\tfor(int j=0;j++^m;)\n\t\t\t\t\t\t\tta[i][j]=a[i][j];\n\t\t\t}\n\t\t\telse if(Rand<exp((ans-dans)/fi))ans=dans;\n\t\t\t\telse swap(w[o[0]][0][o[1]],w[p1[0]][0][p1[1]]),\n\t\t\t\t\tswap(w[o[0]][1][o[1]],w[p1[0]][1][p1[1]]),\n\t\t\t\t\tswap(a[w[o[0]][0][o[1]]][w[o[0]][1][o[1]]],a[w[p1[0]][0][p1[1]]][w[p1[0]][1][p1[1]]]);\n\t\t\tfi*=ne;\n\t\t}\n\t}\n\t\t\n\tfor(int i=0;i++^n;putchar('\\n'))\n\t\tfor(int j=0;j++^m;printf(\"%d \",ta[i][j]));\n\treturn 0;\n}\n\n```\n#### \u5f53\u7136\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u53ea\u80fd\u5f9790~95,\u56e0\u4e3a\u8fd9\u6837\u7684\u5355\u6b21\u8f6c\u79fb\u7528\u65f6\u592a\u957f\uff0c\u6240\u4ee5\u9700\u8981\u4f18\u5316\u3002\n```cpp\nint Get()\n{\n\tint t=0;\n\tfor(int i=0;i++^n;)\n\t\tfor(int j=0;j++^m;)\n\t\t\tt+=Di(i,j);\n\treturn t;\n}\n```\n### \u8fd9\u4e2a\u51fd\u6570,\u6709\u6728\u6709\u53d1\u73b0\u53ef\u4ee5\u6539\u8fdb\uff0c\u56e0\u4e3a\u53ea\u53d8\u5316\u4e86\u4e24\u4e2a\u4f4d\u7f6e\u3002\n\n## \u6539\u8fdb\u540e\uff1a\n```cpp\n#include<ctime>\n#include<cmath>\n#include<cstdio> \n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing std::swap;\n# define read read1<int>()\n# define Type template<typename T>\n# define Rand ((double)rand()/RAND_MAX)\nType inline const T read1()\n{\n    T m=0;\n    char k=getchar();\n    while(('0'>k||k>'9')&&(k!='-'))k=getchar();\n    const bool f=(k=='-'?1:0);\n    if(f)k=getchar();\n    while('0'<=k&&k<='9')m=(m<<3)+(m<<1)+(k^48),k=getchar();\n    return f?-m:m;\n}\nint a[22][22],n,m,c,*w[51][2],p[51],x[4]={1,-1,0,0},y[4]={0,0,1,-1},ta[22][22];\nint Di(int i,int j)\n{\n\tint t=0;\n\tfor(int k=0;k^4;++k)\n\t\tt+=a[i+x[k]][j+y[k]]&&a[i][j]!=a[i+x[k]][j+y[k]];\n\treturn t;\n}\nint Get()\n{\n\tint t=0;\n\tfor(int i=0;i++^n;)\n\t\tfor(int j=0;j++^m;)\n\t\t\tt+=Di(i,j);\n\treturn t;\n}\nint main()\n{\n\tlong long start=clock();\n\tsrand(time(NULL));\n\tn=read,m=read,c=read;\n\tif(c==1)\n\t{\n\t\tfor(int i=0;i++^n;putchar('\\n'))\n\t\t\tfor(int j=0;j++^m;printf(\"1 \"));\n\t\treturn 0;\n\t}\n\tint nx=1,ny=1;\n\tif(n<m)\n\t\tfor(int i=0;i++^c;)\n\t\t{\n\t\t\tp[i]=read;\n\t\t\tw[i][0]=new int[p[i]],w[i][1]=new int[p[i]];\n\t\t\tfor(int j=0;j^p[i];++j)\n\t\t\t{\n\t\t\t\tif(nx==n+1)++ny,nx=1;\n\t\t\t\ta[w[i][0][j]=nx][w[i][1][j]=ny]=i;\n\t\t\t\tta[nx][ny]=i;\n\t\t\t\t++nx; \n\t\t\t}\n\t\t}\n\telse\n\t\tfor(int i=0;i++^c;)\n\t\t{\n\t\t\tp[i]=read;\n\t\t\tw[i][0]=new int[p[i]],w[i][1]=new int[p[i]];\n\t\t\tfor(int j=0;j^p[i];++j)\n\t\t\t{\n\t\t\t\tif(ny==m+1)++nx,ny=1;\n\t\t\t\ta[w[i][0][j]=nx][w[i][1][j]=ny]=i;\n\t\t\t\tta[nx][ny]=i;\n\t\t\t\t++ny;\n\t\t\t}\n\t\t}\n\tint ans=Get(),dans,tans=ans;\n\twhile((double)(clock()-start)/CLOCKS_PER_SEC<4.6)\n\t{\n\t\tdouble fi=90000,ne=0.99999;\n\t\twhile(fi>1e-10)\n\t\t{\n\t\t\tint o[2],p1[2];\n\t\t\to[0]=rand()%c+1;\n\t\t\to[1]=rand()%p[o[0]];\n\t\t\tdo p1[0]=rand()%c+1;while(o[0]==p1[0]);\n\t\t\tp1[1]=rand()%p[p1[0]];\n\t\t\tint oi=a[w[o[0]][0][o[1]]][w[o[0]][1][o[1]]],pi=a[w[p1[0]][0][p1[1]]][w[p1[0]][1][p1[1]]];\n\t\t\tdans=ans;\n\t\t\tdans-=Di(w[o[0]][0][o[1]],w[o[0]][1][o[1]])<<1;\n\t\t\ta[w[o[0]][0][o[1]]][w[o[0]][1][o[1]]]=pi;\n\t\t\tdans+=Di(w[o[0]][0][o[1]],w[o[0]][1][o[1]])<<1;\n\t\t\tdans-=Di(w[p1[0]][0][p1[1]],w[p1[0]][1][p1[1]])<<1;\n\t\t\ta[w[p1[0]][0][p1[1]]][w[p1[0]][1][p1[1]]]=oi;\n\t\t\tdans+=Di(w[p1[0]][0][p1[1]],w[p1[0]][1][p1[1]])<<1;\n\t\t\tif(dans<ans)\n\t\t\t{\n\t\t\t\tans=dans;\n\t\t\t\tif(tans>dans)\n\t\t\t\t\tfor(int i=0;i++^n;)\n\t\t\t\t\t\tfor(int j=0;j++^m;)\n\t\t\t\t\t\t\tta[i][j]=a[i][j];\n\t\t\t}\n\t\t\telse if(Rand<exp((ans-dans)/fi))ans=dans;\n\t\t\t\telse swap(w[o[0]][0][o[1]],w[p1[0]][0][p1[1]]),\n\t\t\t\t\tswap(w[o[0]][1][o[1]],w[p1[0]][1][p1[1]]),\n\t\t\t\t\tswap(a[w[o[0]][0][o[1]]][w[o[0]][1][o[1]]],a[w[p1[0]][0][p1[1]]][w[p1[0]][1][p1[1]]]);\n\t\t\tfi*=ne;\n\t\t}\n\t}\n\t\t\n\tfor(int i=0;i++^n;putchar('\\n'))\n\t\tfor(int j=0;j++^m;printf(\"%d \",ta[i][j]));\n\treturn 0;\n}\n\n```\n\n\n------------\n\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u572898\u5206\u4ee5\u4e0a\u4e86\uff01\uff01\n",
        "postTime": 1571146949,
        "uid": 108067,
        "name": "\u4e1b\u96e8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "\u601d\u8def\u5176\u5b9e\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u53ea\u662f\u8c03\u53c2\u6709\u90a3\u4e48\"\u4e00\u70b9\u70b9\"\u6076\u5fc3\n\n\u9996\u5148\u6309\u987a\u5e8f\u628a$1-c$\u8fd9$c$\u79cd\u6570\u5168\u90e8\u586b\u8fdb\u8868\u683c\u91cc\n\n\u7136\u540e\u6bcf\u6b21\u968f\u673a\u9009\u4e24\u4e2a\u989c\u8272\u4e0d\u540c\u7684\u5757\u4ea4\u6362\uff0c\u7136\u540e\u8ba1\u7b97\u539f\u65b9\u6848\u4e0e\u73b0\u65b9\u6848\u7684\u5dee\u8ddd\uff0c\u5e76\u6309\u51e0\u7387\u66f4\u65b0\uff08\u5176\u5b9e\u5c31\u662f\u6a21\u62df\u9000\u706b\u7684\u5957\u8def\u5566\uff09\n\n\u4ee3\u7801\u4e94\u5206\u949f\uff0c\u8c03\u53c2\u4e24\u767e\u5e74:C\n \n```cpp\n#include <bits/stdc++.h>\n#pragma GCC optimize(3)\nusing namespace std;\nconst int MaxN = 30;\nconst int dx[] = {1, 0, -1, 0}, dy[] = {0, 1, 0, -1};\nint n, m, c;\nint p[51];\nint a[MaxN][MaxN], tmp[MaxN][MaxN];\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n        ch = getchar();\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return x;\n}\ninline int calc(int A[30][30])\n{\n    int ret = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            for (int k = 0; k <= 3; k++)\n            {\n                int nx = i + dx[k], ny = j + dy[k];\n                if (A[nx][ny] && (A[nx][ny] != A[i][j]))\n                    ++ret;\n            }\n        }\n    }\n    return ret / 2;\n}\ninline void init()\n{\n    int now = 1, cnt = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            a[i][j] = now;\n            ++cnt;\n            if (cnt == p[now])\n                cnt = 0, now++;\n        }\n    }\n}\ninline void sa()\n{\n    double t = 1.0, delta;\n    if (n * m <= 400)\n        delta = 0.9999900001;\n    memcpy(tmp, a, sizeof(a));\n    while (t > 1e-5)\n    {\n        std::pair<int, int> pos1, pos2;\n        pos1.first = rand() % n + 1;\n        pos2.first = rand() % n + 1;\n        pos1.second = rand() % m + 1;\n        pos2.second = rand() % m + 1;\n        while (tmp[pos1.first][pos1.second] == tmp[pos2.first][pos2.second])\n        {\n            pos1.first = rand() % n + 1;\n            pos2.first = rand() % n + 1;\n            pos1.second = rand() % m + 1;\n            pos2.second = rand() % m + 1;\n        }\n        std::swap(tmp[pos1.first][pos1.second], tmp[pos2.first][pos2.second]);\n        int num = calc(tmp) - calc(a);\n        if (num < 0)\n            std::swap(a[pos1.first][pos1.second], a[pos2.first][pos2.second]);\n        else if (exp(-num / t) * RAND_MAX > rand())\n            std::swap(a[pos1.first][pos1.second], a[pos2.first][pos2.second]);\n        else\n            std::swap(tmp[pos1.first][pos1.second], tmp[pos2.first][pos2.second]);\n        t *= delta;\n    }\n}\nint main()\n{\n    srand(107);\n    n = read(), m = read(), c = read();\n    for (int i = 1; i <= c; i++)\n        p[i] = read();\n    init();\n    for (int i = 1; i <= 2; i++)\n        sa();\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n            printf(\"%d \", a[i][j]);\n        puts(\"\");\n    }\n    return 0;\n}\n\n```\n\n",
        "postTime": 1549723447,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    },
    {
        "content": "\u5927\u81f4\u9898\u610f\uff1a\u6709 $c$ \u79cd\u989c\u8272\uff0c\u6bcf\u79cd\u989c\u8272\u5fc5\u987b\u67d3 $p_i$ \u4e2a\u683c\u5b50\uff0c\u8981\u4f60\u627e\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u4e0d\u540c\u989c\u8272\u683c\u5b50\u4e4b\u95f4\u7684\u8fb9\u7684\u6570\u76ee $q$ \u5c3d\u91cf\u5c0f\u3002\n\n\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u518d\u52a0\u4e0a\u5947\u7279\u7684\u8ba1\u5206\u65b9\u5f0f\uff0c\u6211\u4eec\u7406\u6240\u5f53\u7136\u60f3\u5230\u6a21\u62df\u9000\u706b\u3002\n\n\u7c7b\u4f3c\u4e8e\u5e8f\u5217\u4e0a\u505a\u6a21\u62df\u9000\u706b\uff0c\u6bcf\u6b21\u968f\u673a\u4e24\u4e2a\u70b9\uff0c\u8fdb\u884c\u4ea4\u6362\uff0c\u7136\u540e\u6839\u636e\u4ea4\u6362\u5b8c\u7684\u7b54\u6848\u548c\u4ea4\u6362\u524d\u7684\u7b54\u6848\u8fdb\u884c\u66f4\u65b0\u5373\u53ef\u3002\n\n\u521d\u59cb\u5316\u5e8f\u5217\u8981\u7528\u5230\u8d2a\u5fc3\uff0c\u5373\u4ece\u5de6\u5f80\u53f3\uff0c\u4ece\u4e0a\u5f80\u4e0b\u5c06\u4e00\u79cd\u989c\u8272\u67d3\u5b8c\u518d\u8fdb\u884c\u4e0b\u4e00\u4e2a\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\uff0c\u8981\u4f7f\u5f97 $q$ \u5c3d\u91cf\u5c0f\uff0c\u5c31\u8981\u4f7f\u5f97\u6bcf\u4e00\u79cd\u989c\u8272\u5c3d\u53ef\u80fd\u5206\u5e03\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u6211\u4eec\u4e00\u5f00\u59cb\u5f97\u5230\u7684\u7b54\u6848\u5c31\u4e0d\u4f1a\u5f88\u5927\u3002\n\n\u6ce8\uff1a\u4ea4\u6362\u989c\u8272\u66f4\u65b0\u7b54\u6848\u4e0d\u80fd\u5c06\u6574\u4e2a\u767d\u7eb8\u7684\u6bcf\u4e00\u5757\u90fd\u679a\u4e3e\u4e00\u904d\uff0c\u590d\u6742\u5ea6\u592a\u5927\uff0c\u9700\u8981 $O(1)$\uff08\u53ef\u4ee5\u5e26\u70b9\u5927\u5e38\u6570\uff09\u66f4\u65b0\u7b54\u6848\u3002\u8fd9\u662f\u7531\u4e8e\u8fd9\u9898\u5f88\u6bd2\uff0c$O(1)$ \u66f4\u65b0\u7b54\u6848\u7684\u6a21\u62df\u9000\u706b\u90fd\u9700\u8981\u6bcf\u4e2a\u70b9\u8dd1\u5230 $3-4s$ \u624d\u80fd\u4fdd\u8bc1AC\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u6bd2\u7624\uff0c\u6e29\u5ea6\u53d8\u52a8\u91cf $\\Delta$ \u8981\u6bd4\u6b63\u5e38\u6a21\u62df\u9000\u706b\u9898\u66f4\u63a5\u8fd11\uff0c\u5efa\u8bae\u4e0d\u5927\u4e8e0.99999\uff0c\u56e0\u4e3a\u5982\u679c\u518d\u63a5\u8fd1\u5c31\u5bb9\u6613\u51fa\u7cbe\u5ea6\u95ee\u9898\uff0c\u5bfc\u81f4TLE\u3002\n\n\u7b2c\u4e00\u904d\u7edf\u8ba1\u7b54\u6848\u65f6\u4e0d\u80fd\u7b97\u4e0a\u683c\u5b50\u548c\u8fb9\u754c\u7684\u4e0d\u540c\uff0c\u800c\u4e14\u56e0\u4e3a\u6bcf\u4e2a\u4e0d\u540c\u8fb9\u90fd\u88ab\u7b97\u4e86\u4e24\u904d\uff0c\u6240\u4ee5\u7b97\u5b8c\u9700\u8981\u9664\u4ee52\u3002\n\n\u5361\u65f6\u795e\u5668\uff1a\n```cpp\nwhile(clock() / CLOCKS_PER_SEC < 3)SA();\n```\n\n\u6700\u540e\u5982\u679c\u8fd8\u662f\u8138\u9ed1\u8fc7\u4e0d\u4e86\uff0c\u53ef\u4ee5\u4f7f\u7528~~\u67d0\u6076\u81ed\u6570\u5b57~~\u4e00\u4e9b\u522b\u7684\u6570\u5b57\u505a\u968f\u673a\u6570~~\u83b7\u5f97\u6076\u81ed\u52a0\u6301~~\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define rint register int\nconst int maxn = 5e3;\nconst int INF = 2e9;\nint read(){\n    int x = 0,f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9'){\n        if(ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9'){\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return x * f;\n}\nusing namespace std;\nint n, m, c, p[maxn], ansnx[maxn][maxn], cnt = 1, cntt;\nint ans = 0;\ndouble delta = 0.99999, te = 1e-30; \nvoid init(){\n\tcin >> n >> m >> c;\n\tfor(int i = 1; i <= c; i ++){\n\t\tp[i] = read();\n\t}\n\tfor(int i = 1; i <= n; i++){\n\t\tfor(int j = 1; j <= m; j++){\n\t\t\tif(cntt >= p[cnt]){\n\t\t\t\tcnt++, cntt = 0;\n\t\t\t}\n\t\t\t++cntt;\n\t\t\tansnx[i][j] = cnt;\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++){\n\t\tfor(int j = 1; j <= m; j++){\n\t\t\tif(i > 1 && ansnx[i][j] != ansnx[i - 1][j])++ans;\n\t\t\tif(i < n && ansnx[i][j] != ansnx[i + 1][j])++ans;\n\t\t\tif(j > 1 && ansnx[i][j] != ansnx[i][j - 1])++ans;\n\t\t\tif(j < m && ansnx[i][j] != ansnx[i][j + 1])++ans;//\u4e0d\u7b97\u8fb9\u754c\u60c5\u51b5 \n\t\t}\n\t}\n\tans /= 2;//\u53bb\u6389\u91cd\u590d\u7684 \n}\nvoid SA(){\n\tdouble ts = 114514 * 19;//ts\u8c03\u5927\u70b9 \n\tint ans1 = ans;\n\twhile(ts > te){\n\t\tint x1 = rand() % n + 1, y1 = rand() % m + 1, x2 = rand() % n + 1, y2 = rand() % m + 1;\n\t\tint a = 0, b = 0;\n\t\tif(ansnx[x2][y2] != ansnx[x2 - 1][y2])b++;\n\t\tif(ansnx[x2][y2] != ansnx[x2 + 1][y2])b++;\n\t\tif(ansnx[x2][y2] != ansnx[x2][y2 - 1])b++;\n\t\tif(ansnx[x2][y2] != ansnx[x2][y2 + 1])b++;\n\t\tif(ansnx[x1][y1] != ansnx[x1 - 1][y1])b++;\n\t\tif(ansnx[x1][y1] != ansnx[x1 + 1][y1])b++;\n\t\tif(ansnx[x1][y1] != ansnx[x1][y1 - 1])b++;\n\t\tif(ansnx[x1][y1] != ansnx[x1][y1 + 1])b++;\n\t\tswap(ansnx[x1][y1], ansnx[x2][y2]);\n\t\tint ansnow = ans1;\n\t\t\n\t\tif(ansnx[x2][y2] != ansnx[x2 - 1][y2])a++;\n\t\tif(ansnx[x2][y2] != ansnx[x2 + 1][y2])a++;\n\t\tif(ansnx[x2][y2] != ansnx[x2][y2 - 1])a++;\n\t\tif(ansnx[x2][y2] != ansnx[x2][y2 + 1])a++;\n\t\tif(ansnx[x1][y1] != ansnx[x1 - 1][y1])a++;\n\t\tif(ansnx[x1][y1] != ansnx[x1 + 1][y1])a++;\n\t\tif(ansnx[x1][y1] != ansnx[x1][y1 - 1])a++;\n\t\tif(ansnx[x1][y1] != ansnx[x1][y1 + 1])a++;//O(1)\u66f4\u65b0\u7b54\u6848 \n\t\tansnow = ansnow + a - b;\n\t\tint del = ansnow - ans1;\n\t\tif(del < 0){\n\t    \tans1 = ansnow;\n\t\t\tif(ans > ansnow){\n\t\t\t\tans = ansnow;\n\t\t\t}\n\t    }\n\t\telse if(exp(-del / ts) * RAND_MAX > rand())ans1 = ansnow;\n\t\telse swap(ansnx[x1][y1], ansnx[x2][y2]);\n\t    ts = ts * delta;\n    }\n}\nvoid solve(){\n    srand(19198101);\n\tinit();\n\twhile(clock() / CLOCKS_PER_SEC < 3)SA();//\u5361\u65f6\uff0c\u52303\u5c31\u884c\uff0c\u6362\u62104\u6781\u6613TLE \n\tfor(int i = 1; i <= n; i++){\n\t\tfor(int j = 1; j <= m; j++){\n\t\t\tcout << ansnx[i][j] << \" \";\n\t\t}\n\t\tcout << \"\\n\";\n\t}\n\treturn;\n}\nsigned main(){\n\tsolve();\n}\n```",
        "postTime": 1595380269,
        "uid": 209547,
        "name": "infinities",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3936 \u3010Coloring\u3011"
    }
]