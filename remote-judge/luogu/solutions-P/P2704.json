[
    {
        "content": "[\u4f7f\u7528csdn\u4f53\u9a8c\u66f4\u4f73\uff08\u9003](https://blog.csdn.net/SSH_oj/article/details/81951794)\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u72b6\u538b dp \u7684~~\u7279\u522b\u6bd2\u7624\u7684~~\u57fa\u7840\u9898(\u867d\u7136\u6211\u6253\u4e86\u6574\u6574\u4e00\u4e2a\u65e9\u4e0a)\uff0c\u4f46\u662f\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u70ae\u5175\u90fd\u4f1a\u5f71\u54cd\u5230\u4e4b\u540e\u7684\u4e24\u884c\u7684\u653e\u7f6e\uff0c\u6240\u4ee5\u7528\u72b6\u538b\u53bb\u538b\u4e24\u884c\uff0c\u6309\u884c\u5904\u7406\u6bcf\u4e00\u884c\u7684\u60c5\u51b5\u5373\u53ef\u3002\u6bcf\u4e00\u884c\u653e\u7f6e\u7684\u65f6\u5019\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8003\u8651\u8fd9\u4e2a\u4f4d\u7f6e\u524d\u4e24\u884c\u6709\u6ca1\u6709\u653e\u7f6e\u70ae\u5175\u4ee5\u53ca\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u662f\u5c71\u4e18\u5373\u53ef\u3002\n\n\u90a3\u4e48\u9996\u5148\uff0cdp \u65b9\u7a0b\u53ef\u4ee5\u5f88\u5feb\u63a8\u51fa\u6765\uff0cdp[L][S][i]\u8868\u793a\u5f53\u524d\u72b6\u6001\u662f S\uff0c\u4e0a\u4e00\u884c\u7684\u72b6\u6001\u662f L\uff0c\u5f53\u524d\u8003\u8651\u5230\u4e86\u7b2c i \u884c\uff1a\n\ndp[L][S][i]=max(dp[L][S][i],dp[FL][L][i-1]+Sum[S]); \u8fd9\u91cc FL \u8868\u793a\u4e0a\u4e0a\u884c\u7684\u72b6\u6001\uff0cSum[S] \u8868\u793a\u5f53\u524d\u72b6\u6001 S \u91cc\u9762\u5305\u542b\u51e0\u4e2a 1\u3002\n\n\u90a3\u4e48\u6709\u4e86\u8fd9\u4e2a dp \u65b9\u7a0b\u540e\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u9012\u63a8\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u9053\u9898\u6709\u51e0\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\uff1a\n\n---\n\n1.\u5224\u65ad\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u662f\u5c71\u4e18\n\n\u8fd9\u4e2a\u5f88\u597d\u89e3\u51b3\uff0c\u53ea\u8981\u628a\u6bcf\u4e00\u884c\u7684\u8f93\u5165\u90fd\u8f6c\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570(\u5e73\u539f\u662f 0\uff0c\u5c71\u4e18\u662f1)\uff0c\u7136\u540e\u76f4\u63a5\u8ddf\u5f85\u5224\u65ad\u7684\u72b6\u6001\u505a\u4e00\u6b21\u4f4d\u8fd0\u7b97\u5373\u53ef\uff0c\u5c31\u662f S&a[i]\uff0c\u5982\u679c\u4f4d\u8fd0\u7b97\u7ed3\u679c\u4e0d\u662f\u96f6\uff0c\u8bf4\u660e\u6709\u4e9b\u4f4d\u7f6e\u653e\u5728\u4e86\u5c71\u4e18\u4e0a\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u72b6\u6001\u4e0d\u5408\u6cd5\u3002\n\n---\n\n2.\u5224\u65ad\u6bcf\u4e2a\u72b6\u6001\u6709\u6ca1\u6709\u4e24\u4e2a\u70ae\u5175\u5de6\u53f3\u8ddd\u79bb\u5728\u4e24\u683c\u4e4b\u5185\n\n\u8fd9\u4e2a\u9700\u8981\u52a8\u8111\u60f3\u4e00\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u795e\u5947\u7684\u7ed3\u8bba\uff0c\u5982\u679c\u628a\u8868\u793a\u5f53\u524d\u72b6\u6001\u7684\u4e8c\u8fdb\u5236\u6570\u4f4d\u8fd0\u7b97\u5de6\u79fb\u4e00\u4f4d\uff0c\u90a3\u4e48\u7528\u8fd9\u4e2a\u7ed3\u679c\u4e0e\u539f\u72b6\u6001\u505a\u4e00\u6b21\u4f4d\u8fd0\u7b97\u4e0e\u64cd\u4f5c\uff0c\u5982\u679c\u7ed3\u679c\u4e0d\u662f 0\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u70ae\u5175\u5de6\u53f3\u8ddd\u79bb\u5728\u4e00\u683c\u4e4b\u5185\u3002\u540c\u7406\uff0c\u5de6\u79fb\u4e24\u4f4d\u5c31\u53ef\u4ee5\u5224\u65ad\u5de6\u53f3\u8ddd\u79bb\u5728\u4e24\u683c\u4e4b\u5185\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u5c31\u662f S&(S<<1)\uff0cS&(S<<2)\u3002\n\n---\n\n3.\u5224\u65ad\u6bcf\u4e00\u5217\u4e4b\u524d\u4e24\u884c\u6709\u6ca1\u6709\u70ae\u5175\n\n\u8fd9\u4e2a\u5c31\u76f4\u63a5\u7528\u5f53\u524d\u72b6\u6001\u5206\u522b\u4e0e\u4e4b\u524d\u7684\u4e24\u884c\u5373\u53ef\uff0c\u5c31\u662f S&L\uff0cS&FL\uff0c\u5982\u679c\u4e0e\u64cd\u4f5c\u7ed3\u679c\u4e0d\u4e3a\u96f6\uff0c\u8bf4\u660e\u6709\u82e5\u5e72\u5217\u524d\u4e24\u884c\u6709\u70ae\u5175\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u72b6\u6001\u4e0d\u5408\u6cd5\u3002\n\n---\n\n\u6700\u540e\u8bf4\u4e00\u53e5\uff0c\u4e00\u5b9a\u8981\u7528\u6eda\u52a8\u6570\u7ec4(\u56e0\u4e3a\u53ea\u7528\u5230\u6bcf\u4e00\u884c\u548c\u524d\u4e24\u884c\uff0c\u6240\u4ee5\u53ea\u7528\u6eda\u52a8\u4e09\u884c)\uff0c\u5426\u5219\u4f1a MLE 0 (\u6211\u5f53\u521d\u5c31\u662f\u8fd9\u4e48\u60e8)\u3002\u3002\u3002\n\n\u597d\u4e86\u7ec6\u8282\u90fd\u8bf4\u5b8c\u4e86\uff0c\u4e0b\u9762\u5c31\u662f\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,m,ans,dp[(1<<10)][(1<<10)][3]/*\u6eda\u52a8\u6570\u7ec4*/,a[105],Sum[(1<<10)];\nchar x;\nint getsum(int S)\t//\u5f53\u524d\u72b6\u6001 S \u91cc\u9762\u5305\u542b\u51e0\u4e2a 1\n{\n\tint tot=0;\n\twhile(S) {if(S&1) tot++; S>>=1;}\n\treturn tot;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<m;j++)\n\t\t\tcin>>x,a[i]<<=1,a[i]+=(x=='H'?1:0);\t//\u8f6c\u6210\u4e8c\u8fdb\u5236\u6570\n\tfor(int i=0;i<(1<<m);i++)\n\t\tSum[i]=getsum(i);\t//\u521d\u59cb\u5316 Sum \u6570\u7ec4\n\tfor(int S=0;S<(1<<m);S++)\n\t\tif(!(S&a[0] || (S&(S<<1)) || (S&(S<<2))))\n\t\t\tdp[0][S][0]=Sum[S];\t//\u521d\u59cb\u5316\n\tfor(int L=0;L<(1<<m);L++)\n\t\tfor(int S=0;S<(1<<m);S++)\n\t\t\tif(!(L&S || L&a[0] || S&a[1] || (L&(L<<1)) || (L&(L<<2)) || (S&(S<<1)) || (S&(S<<2))))\t//\u8c1c\u4e4b\u4e00\u957f\u4e32\u7279\u5224\n\t\t\t\tdp[L][S][1]=Sum[S]+Sum[L];\n\tfor(int i=2;i<n;i++)\n\t\tfor(int L=0;L<(1<<m);L++)\n\t\t{\n\t\t\tif(L&a[i-1] || (L&(L<<1)) || (L&(L<<2))) continue;\t//\u7279\u5224\n\t\t\tfor(int S=0;S<(1<<m);S++)\n\t\t\t{\n\t\t\t\tif(S&a[i] || L&S || (S&(S<<1)) || (S&(S<<2))) continue;\n\t\t\t\tfor(int FL=0;FL<(1<<m);FL++)\n\t\t\t\t{\n\t\t\t\t\tif(FL&L || FL&S || FL&a[i-2] || (FL&(FL<<1)) || (FL&(FL<<2)))\tcontinue;\n\t\t\t\t\tdp[L][S][i%3]=max(dp[L][S][i%3],dp[FL][L][(i-1)%3]+Sum[S]);\t\t//\u6eda\u52a8\u6570\u7ec4\u7684\u5b9e\u73b0\u65b9\u6cd5\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tfor(int L=0;L<(1<<m);L++)\n\t\tfor(int S=0;S<(1<<m);S++)\n\t\t\tans=max(ans,dp[L][S][(n-1)%3]);\t//\u7ed3\u675f\u72b6\u6001\u53ef\u4ee5\u662f\u6700\u540e\u4e00\u884c\u7684\u4efb\u4f55\u72b6\u6001\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1519729346,
        "uid": 41262,
        "name": "SSHhh",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "# \u8fd9\u662f\u4e00\u9053\u5f88\u4e0d\u9519\u7684\u72b6\u538b\u9898\n## \u9898\u76ee\uff0c\u6570\u636e\uff0c\u5b9e\u73b0\u90fd\u4e0d\u9519\n\u9664\u4e86for\u5faa\u73af\u6253\u7684\u5934\u75db\u3002\u3002\u3002\n\n\u6211\u4eec\u6765\u5eb7\u5eb7\u8fd9\u9053\u9898\n\n\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u72b6\u538bDP\uff0c\u56e0\u4e3a\u6570\u636e\u91cf\u6bd4\u8f83\u72b6\u538b\u3002\u3002\u3002\n\n\u5206\u522b\u6709N*M\u7684\u5730\u56fe\uff0c\u6709\u7f3a\u9677\u7684\u5730\u5f62\u4ee5\u53ca\u5341\u5b57\u5f62\u7684\u8986\u76d6\u8303\u56f4\u3002\n\n\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u72b6\u6001\uff1a\n\n### \uff26\uff3b\uff49\uff3d\uff3b\uff4a\uff3d\uff3b\uff4b\uff3d\n\u7528\u3000\uff49\u3000\u8868\u793a\u5f53\u524d\u679a\u4e3e\u5230\u7b2c\u51e0\u884c\uff0c\uff4a\u8868\u793a\u5f53\u524d\u884c\u7684\u72b6\u6001\uff0c\uff4b\u8868\u793a\u4e0a\u4e00\u884c\u7684\u72b6\u6001\n\n\u56e0\u4e3a\u6bcf\u4e00\u884c\u7684\u503c\u4f1a\u53d7\u524d\u4e24\u884c\u7684\u5f71\u54cd\uff0c\u4e0a\u9762\u7b2c\u4e00\u884c\u65b9\u4fbf\u679a\u4e3e\uff0c\u4f46\u662f\u518d\u679a\u4e3e\u4e0a\u9762\u7b2c\u4e00\u884c\u5c31\u6709\u70b9\u5403\u529b\uff0c\u56e0\u4e3a\u8fd9\u6837\u6211\u4eec\u7684\u503c\u6ca1\u529e\u6cd5\u4fdd\u8bc1\u4e92\u8865\u5e72\u6d89\uff0c\u5bfc\u81f4\u54c7\uff08\uff37\uff21\uff09\u6389\uff0c\u4e8e\u662f\u6211\u4eec\u7528\u672c\u884c\u548c\u4e0a\u4e00\u884c\u7684\u6392\u5217\u72b6\u6001\u8868\u793a\u4e00\u4e2a\u72b6\u6001\u3002\n\n\u7136\u540e\u6211\u6765\u8bf4\u8bf4\u72b6\u538b\uff08\u6bd5\u7adf\u6211\u6ca1\u770b\u592a\u61c2\uff0c\u77e5\u9053\u8499\u853d\u7684\u75db\u82e6\uff08\u795e\u7287\u4eec\u53ef\u4ee5\u8df3\u8fc7\u76f4\u63a5\u770b\u7801\uff09\uff09\n\n\u6211\u4eec\u662f\u7528\u4e00\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u5c55\u5f00\u6765\u8868\u793a\u72b6\u6001\u7684\n\n\u6bd4\u5982\u8bf4\uff18\u8868\u793a\u3000\uff11\uff10\uff10\uff10\u5c31\u662f\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u9009\uff0c\u5176\u4f59\u4e0d\u9009\uff0c\u800c\u6bcf\u79cd\u4e8c\u8fdb\u5236\u6570\u4ee3\u8868\u4e0d\u540c\u7684\u9009\u62e9\u5e8f\u5217\uff0c\u7528\u72b6\u6001\u538b\u7f29\u7684\u65b9\u5f0f\u8fdb\u884c\u538b\u7f29\u5904\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u7ef4\u6765\u4ee3\u66ff\u597d\u591a\u7ef4\uff0c\u4f7f\u7528\u65f6\u4e00\u822c\u9884\u5904\u7406\u4e00\u4e2a\u201c\u4e0d\u80fd\u9009\u7684\u201d\u6570\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u538b\u7f29\u8fc7\u7684\u6811\uff0c\u7528\u5b83\u7684\u503c\u6765\u8868\u793a\u90a3\u4e2a\u4f4d\u7f6e\u4e0d\u53ef\u4ee5\u9009\uff0c\u800c\u6211\u4eec\u679a\u4e3e\u7684\u662f\u4e00\u6574\u4e2a\u9009\u62e9\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u53ea\u8981\uff08\uff06\uff09\u540e\u64cd\u4f5c\u51fa\u73b0\u4e0d\u662f\u671f\u671b\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u5224\u5b9a\u5b83\u4e0d\u7b26\u5408\u9898\u610f\n\n\uff11\u3000\uff10\u3000\uff10\u3000\uff11\u3000\uff10\u3000\uff10\u3000\uff11\u3000\u3000\uff33\uff11\n\n\uff11\u3000\uff11\u3000\uff11\u3000\uff10\u3000\uff11\u3000\uff11\u3000\uff10\u3000\u3000\uff33\uff12\n\n\u82e5\uff33\uff12\u4e2d\uff10\u8868\u793a\u4e0d\u80fd\u9009\uff0c\u5c31\u6709\uff08\uff53\uff11\uff06\uff53\uff12\uff01\uff1d\uff53\uff11\uff09\uff08\uff53\uff11\u8868\u793a\uff11\u7684\u4f4d\u7f6e\u9009\u62e9\uff0c\u4e0e\u4e0d\u80fd\u9009\u7684\u51b2\u7a81\uff09\u3002\n\n\u540c\u7406\uff0c\u5f53\u5224\u65ad\u662f\u5426\u4e0e\u4e0a\u4e00\u884c\u51b2\u7a81\u65f6\uff0c\u5c31\u6709\uff08\uff53\uff11\uff06\uff53\uff12\uff1d\uff1d\uff10\uff09\u8868\u793a\u4e0d\u51b2\u7a81\uff08\u5373\u6ca1\u6709\u4e24\u5217\u4f4d\u7f6e\u91cd\u5408\u7684\uff09\uff0c\u8fd9\u6837\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u64cd\u4f5c\u4e86\u3002\u3002\u3002\n\n\n\n\u5eb7\u5eb7\u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,F[105],f[105][66][66],start[70],cnt=0,gs[200];//\u7279\u6b8a\u8bb0\u5f55\uff0c\u4e0d\u7206\u7a7a\u95f4\nbool mp[105][30];\n\nint main(){\n\tcin>>n>>m;\n\tchar a;\t\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tcin>>a; \n\t\t\tif(a=='H')mp[i][j]=1;//\u53e6\u4e0d\u80fd\u9009\u7684\u4e3a1\n\t\t}\n\t}\n\t\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tF[i]=(F[i]<<1)+mp[i][j];\n            //\u628a\u6bcf\u884c\u201c\u4e0d\u53ef\u9009\u201d\u72b6\u6001\u538b\u7f29\u8d77\u6765\u65b9\u4fbf\u5b9e\u7528\n\t\t}\n\t}\n\t\n\tstart[++cnt]=0;\n    /*\u8fd9\u4e2a\u5c24\u4e3a\u91cd\u8981\uff0c\u5982\u679c\u4f60\u8981\u7a7a\u95f4\u65f6\u95f4\uff0c\u5c31\u5f97\u50cf\u4e0b\u9762\u4e00\u6837\u5b58\n    \u5982\u679c\u76f4\u63a5\u5b58\u7684\u8bdd\uff0c\u5c31\u6ca1\u4e86\uff08\u6bd5\u7adf\u90a3\u4e2a\u4e00\u6574\u6392H\u7684\u6570\u636e\u8fd8\u662f\u6709\u7684\uff09\n    \u4e0d\u8fc7\u5982\u679c\u4ece0\u5f00\u59cb\u5faa\u73af\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u653e\u5728\u8fd9\u91cc\u8d77\u8b66\u793a\u4f5c\u7528233*/\n\t\n\tfor(int i=1;i<(1<<m);i++){\n\t\tif(i&(i<<1))continue;\t//\u56e0\u4e3a\u5de6\u4e8c\u53f3\u4e8c\u4e0d\u80fd\u9009\n\t\tif(i&(i<<2))continue;\n\t\tif(i&(i>>1))continue;\n\t\tif(i&(i>>2))continue;\n\t\tstart[++cnt]=i;//\u76f4\u63a5\u5b58\u6709\u7528\u7684\u5c31\u884c\n\t\tint x=i;\n\t\twhile(x){\t\t//\u6c42\u53d6\u6bcf\u4e2a\u72b6\u6001\u7684\u8d21\u732e\n\t\t\tgs[cnt]++;\n\t\t\tx-=(x&(-x));\n\t\t}\n\t}\n\t\n\tfor(int i=1;i<=cnt;i++){\t//\u5904\u7406\u7b2c\u4e00\u6392\n\t\tif((start[i]&F[1])==0){\t//\u4e0d\u80fd\u4e0e\u5730\u5f62\u51b2\u7a81\n\t\t\tf[1][i][0]=gs[i];\n\t\t}\t\n\t}\n\t\n\tfor(int i=1;i<=cnt;i++){\t//\u7b2c\u4e8c\u6392\n\t\tif((start[i]&F[2])==0)\n\t\tfor(int j=1;j<=cnt;j++){\n\t\t\tif((start[i]&start[j])==0&&(start[j]&F[1])==0){\n            \t\t//\u5224\u65ad\u662f\u5426\u51b2\u7a81\n\t\t\t\tf[2][i][j]=gs[j]+gs[i];\n\t\t\t} \n\t\t}\n\t}\n\t//\u8ba9for\u6765\u7684\u66f4\u731b\u70c8\u4e9b\u5427\uff08\u679a\u4e3e\u72b6\u6001\uff09\n\tfor(int i=3;i<=n;i++){\t\t\n\t\tfor(int j=1;j<=cnt;j++){\t//\u5f53\u524d\u4e00\u6392\u72b6\u6001\t\t\n\t\t\tif((start[j]&F[i])==0){\t\n\t\t\t\tfor(int k1=1;k1<=cnt;k1++){\t\t//\u4e0a\u9762\u7b2c\u4e00\u6392\t\t\t\n\t\t\t\t\tif((start[j]&start[k1])==0&&(start[k1]&F[i-1])==0){\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int k2=1;k2<=cnt;k2++){\t//\u4e0a\u9762\u7b2c\u4e8c\u6392\t\t\t\t\n\t\t\t\t\t\t\tif((start[j]&start[k2])==0&&(start[k1]&start[k2])==0&&(start[k2]&F[i-2])==0){\t\n                            \t\t\t\t//\u5224\u65ad\u6240\u6709\u51b2\u7a81\u60c5\u51b5\n\t\t\t\t\t\t\t\tf[i][j][k1]=max(f[i][j][k1],f[i-1][k1][k2]+gs[j]);//\u4ece\u4e4b\u524d\u8f6c\u79fb\u8fc7\u6765\u5c31\u884c\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \t\n\t\t}\n\t}\n\t\n\tint ans=0;\n    //\u6240\u6709\u7684\u503c\u90fd\u5728\u6700\u540e1\u6392\u5b58\uff0c\u7528\u8fd9\u4e00\u6392\u7684\u6240\u6709\u60c5\u51b5\u7684\u6700\u5927\u503c\u5f53\u6700\u5927\u503c\n\tfor(int i=1;i<=cnt;i++){\n\t\tfor(int j=1;j<=cnt;j++){\n\t\t\tans=max(ans,f[n][i][j]);\n\t\t}\n\t}\n\tcout<<ans;\n}\n```\n\u4e8e\u662f\uff0c\u8fd9\u4e2a\u5c31\u5b8c\u4e86\n\n\u91cc\u9762\u7684\u72b6\u6001\u8f6c\u79fb\u8fd8\u597d\u8bf4\uff0c\u8fd9\u4e2a\u5224\u65ad\u51b2\u7a81\u641e\u5f97\u6211\u6389\u5934\u53d1\u3002\u3002\n\n\u5c31\u8fd9\u6837\u5427\uff0c\n\n\u9a6c\u8702\u4e00\u822c\uff0c\u5e0c\u671b\u80fd\u5e2e\u5230\u60a8",
        "postTime": 1563886511,
        "uid": 197283,
        "name": "you_xiao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u9996\u5148\u6b64\u9898\u662f\u4e00\u4e2a\u72b6\u538bdp\uff0c\u601d\u8def\u975e\u5e38\u7b80\u5355\uff0c\u8fc7\u7a0b\u4e5f\u6e05\u6670\u660e\u4e86\uff1a\n\n1.\u8f93\u5165\n\n2.**\u9884\u5904\u7406** + \u521d\u59cb\u5316\n\n3.dp\n\n4.\u627e\u6700\u5927\u5e76\u8f93\u51fa\n\n\u5f88\u591a\u5de8\u4f6c\u8fd9\u9898\u90fd\u4f7f\u7528\u4e86\u6eda\u52a8\u6570\u7ec4\uff0c\u8fd8\u6709\u4eba\u5728\u4e89\u8bba\u67d0\u4e9b\u9898\u89e3\u4f1a\u7206\u7a7a\u95f4\u3002\n\n\u4f46\u662f\u6211\u592a\u83dc\u4e86\u5e76\u4e0d\u4f1a\u6eda\u52a8\u6570\u7ec4\u600e\u4e48\u529e\u5462\uff1f\uff1f\uff1f\n\n\u9996\u5148\u4e0a\u4ee3\u7801\n\n```cpp\nint n, m, mapp[105], cnt = 0, f[105][105][105];\n\nstruct point \n{\n    int s, num;\n}a[105];\n```\n\n\u4ec0\u4e48??\n\n\u5f00105\u5c31\u591f\u4e86\uff1f\uff1f\uff1f\n\n\u8fd9\u5c31\u6d89\u53ca\u5230\u4e86\u6211\u4eec\u7684\u7b2c\u4e8c\u6b65\uff1a\u9884\u5904\u7406\n\n\u672c\u7bc7\u9898\u89e3\u5c31\u6765\u89e3\u6790\u4e00\u4e0b\u4e4b\u524d\u7684\u9898\u89e3\u90fd\u6ca1\u6709\u63d0\u5230\u7684\u9884\u5904\u7406\u3002\n\n\u8fd8\u662f\u5148\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\ncin >> n >> m;\n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= m; j++)\n        {\n            char c;\n            cin >> c;\n            mapp[i] = (mapp[i] << 1) + (c == 'P');\n        }\n    for(int i = 0; i < (1 << m); i++)\n    {\n        if((i & (i << 1)) || (i & (i << 2)) || (i & (i >> 1)) || (i & (i >> 2))) continue;\n        cnt++;\n        a[cnt].s = i;\n        for(int j = 0; (1 << j) <= i; j++) a[cnt].num += !!(i & (1 << j));\n        if((i & mapp[1]) == i) f[1][0][cnt] = a[cnt].num;\n    }\n```\n\n\u679a\u4e3e\u6bcf\u6b21\u72b6\u6001\uff08i\uff09\n\n\u7136\u540e\u901a\u8fc7\u5de6\u79fb\u4e0e\u53f3\u79fb\u5224\u65ad\u51fa\u662f\u5426\u6709\u4e0d\u7b26\u5408\u9898\u76ee\u6761\u4ef6\u7684\u72b6\u6001\u5e76\u8bb0\u5f55\u4e0b\u6765\n\n\u8fd9\u4e2a\u8bb0\u5f55\u72b6\u6001\u7684\u8fc7\u7a0b\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u79bb\u6563\u5316\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c0f\u6570\u636e\u6570\u91cf\n\n\u901a\u8fc7\u8f93\u51fam = 10\u65f6\u7684cnt\u503c\uff0c\u6211\u4eec\u53d1\u73b0\u72b6\u6001\u6700\u591a\u53ea\u4f1a\u670960\u4e2a\n\n\u4e8e\u662f\u53ea\u9700\u8981\u5f00\u523065\u5c31\u53ef\u4ee5\u4e86\uff08\u4e3a\u4e86\u4fdd\u9669\u6211\u5f00\u4e86105\uff09\n\n\u6240\u4ee5\u662f\u4e0d\u662f\u4e0d\u7528\u6eda\u52a8\u6570\u7ec4\u4e86\uff01\uff01\uff01\n\n#### \u9884\u5904\u7406\u5728\u6240\u6709\u72b6\u538bdp\u4e2d\u7684\u8fd0\u7528\uff1a\n\n\u5728\u65e5\u5e38\u5237\u9898\u4e2d\uff0c\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u6bcf\u4e2a\u72b6\u538bdp\u9898\u90fd\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u7406\u89e3\u8fd9\u4e2a\u9884\u5904\u7406\u7684\u8fc7\u7a0b\uff0c\u7136\u540e\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u72b6\u538bMLE\u5566\uff01\uff01\uff01\n\n\n\u6700\u540e\u9644\u4e0aac\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n, m, mapp[105], cnt = 0, f[105][105][105];\n\nstruct point \n{\n    int s, num;\n}a[105];\n\nint main()\n{\n    cin >> n >> m;\n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= m; j++)\n        {\n            char c;\n            cin >> c;\n            mapp[i] = (mapp[i] << 1) + (c == 'P');\n        }\n    for(int i = 0; i < (1 << m); i++)\n    {\n        if((i & (i << 1)) || (i & (i << 2)) || (i & (i >> 1)) || (i & (i >> 2))) continue;\n        cnt++;\n        a[cnt].s = i;\n        for(int j = 0; (1 << j) <= i; j++) a[cnt].num += !!(i & (1 << j));\n        if((i & mapp[1]) == i) f[1][0][cnt] = a[cnt].num;\n    }\n    cout << cnt << endl; //\u8fd9\u4e2a\u662f\u9884\u5904\u7406\u540e\u7684\u4e2a\u6570\n    for(int i = 1; i <= cnt; i++)\n        for(int j = 1; j <= cnt; j++)\n            if(!(a[i].s & a[j].s) && (mapp[2] & a[j].s) == a[j].s) f[2][i][j] = f[1][0][i] + a[j].num;\n    for(int i = 3; i <= n; i++)\n        for(int j = 1; j <= cnt; j++)\n            if((mapp[i] & a[j].s) == a[j].s) \n                for(int k = 1; k <= cnt; k++)\n                    if(!(a[j].s & a[k].s))\n                        for(int l = 1; l <= cnt; l++)\n                        {\n                            if(!(a[k].s & a[l].s) && !(a[j].s & a[l].s)) f[i][k][j] = max(f[i][k][j], f[i - 1][l][k] + a[j].num);\n                        }\n    int ans = 0;\n    for(int i = 1; i <= cnt; i++)\n        for(int j = 1; j <= cnt; j++) ans = max(ans, f[n][i][j]);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1556002289,
        "uid": 54544,
        "name": "LJB00131",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4ee3\u7801\u5f88\u8be6\u7ec6\u4e86\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,m,k;\nint s[1005],g[1005];\nint f[102][1005][1005],ans;\nchar ma[103];\nint map[103];\nint get(int x)//\u8ba1\u7b97\u67d0\u4e00\u72b6\u6001\u542b\u6709\u591a\u5c11\u4e2a1(\u5373\u6709\u591a\u5c11\u4e2a\u70ae\u5175) \n{\n\tint e=0;\n\twhile(x>0)\n\t{\n\t\t++e;\n\t\tx-=x&(-x);\n\t}\n\treturn e;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i)//\u8bfb\u5165\u5730\u56fe\uff0c\u5c06\u5c71\u5730\uff08\u4e0d\u80fd\u653e\u5175\uff09\u7684\u5730\u65b9\u8bbe\u4e3a1 \n\t{\n\t\tscanf(\"%s\",ma);\n\t\tfor(int j=0;j<m;++j)\n\t\t  if(ma[j]=='H') map[i]+=1<<j;\n\t}\n\tfor(int i=0;i<=(1<<m)-1;++i)//\u679a\u4e3e\u6240\u6709\u7684\u72b6\u6001 \n\t  if(((i&(i<<1))==0)&&((i&(i<<2))==0)&&((i&(i>>1))==0)&&((i&(i>>2))==0))//\u5224\u65ad\u6bcf\u4e2a1\u5de6\u53f3\u5404\u4e24\u4e2a\u662f\u5426\u67091\uff0c\u5373\u5224\u65ad\u8fd9\u79cd\u72b6\u6001\u662f\u5426\u5b58\u5728 \n\t\t{\n\t\t\t++k;\n\t\t\ts[k]=i;\n\t\t\tg[k]=get(i);\n\t\t\tif((i&map[1])==0) f[1][0][k]=g[k];//\u521d\u59cb\u5316\u7b2c\u4e00\u884c  \n\t\t} \n\t//\u521d\u59cb\u5316\u7b2c\u4e8c\u884c \n\tfor(int i=1;i<=k;++i)//\u679a\u4e3e\u7b2c\u4e00\u884c\u72b6\u6001 \n\t\tfor(int j=1;j<=k;++j)//\u679a\u4e3e\u7b2c\u4e8c\u884c\u72b6\u6001 \n\t\t\tif(((s[i]&s[j])==0)&&((s[j]&map[2])==0))  f[2][i][j]=max(f[2][i][j],f[1][0][i]+g[j]);//\u5224\u65ad\u662f\u5426\u4e0e\u5730\u5f62\u548c\u7b2c\u4e00\u884c\u51b2\u7a81 \n\t//dp\u8fc7\u7a0b \n\tfor(int i=3;i<=n;++i)//\u679a\u4e3e\u5f53\u524d\u884c\u6570 \n\t\tfor(int j=1;j<=k;++j)//\u679a\u4e3e\u5f53\u524d\u884c\u6570\u72b6\u6001 \n\t\t\tif((map[i]&s[j])==0)//\u4e0d\u4e0e\u5730\u5f62\u51b2\u7a81 \n\t\t\t\tfor(int p=1;p<=k;++p)//\u679a\u4e3e\u524d\u4e00\u884c\u72b6\u6001 \n\t\t\t\t\tif((s[p]&s[j])==0)//\u5f53\u524d\u884c\u72b6\u6001\u4e0d\u4e0e\u524d\u4e00\u884c\u51b2\u7a81 \n\t\t\t\t\t\tfor(int q=1;q<=k;++q)//\u679a\u4e3e\u524d\u4e24\u884c\n\t\t\t\t\t\t//\u4e0d\u4e0e\u524d\u4e24\u884c\u51b2\u7a81\uff0c\u4e14\u524d\u4e24\u884c\u81ea\u8eab\u4e0d\u51b2\u7a81 \n\t\t\t\t\t\t\tif(((s[q]&s[p])==0)&&((s[q]&s[j])==0)) f[i][p][j]=max(f[i][p][j],f[i-1][q][p]+g[j]);\n\tfor(int i=1;i<=k;++i)//\u679a\u4e3e\u6700\u540e\u4e24\u884c\u4e3a\u7ed3\u5c3e\u7684\u60c5\u51b5\uff0c\u7edf\u8ba1\u7b54\u6848 \n\t\tfor(int j=1;j<=k;++j)\n\t\t\tans=max(f[n][i][j],ans);\n\tcout<<ans;\t\t//\u8f93\u51fa\t\t\n    return 0;\n}\n```",
        "postTime": 1530705806,
        "uid": 29245,
        "name": "Henry_he",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u6211\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u9053\u9898\u5c31\u89c9\u5f97\u662f\u8f6e\u5ed3\u7ebfdp\uff08\u6216\u8005\u53eb\u63d2\u5934dp\uff09\uff0c\u7ed3\u679cAC\u540e\u53d1\u73b043\u7bc7\u9898\u89e3\u6ca1\u6709\u4e00\u7bc7\u662f\u8f6e\u5ed3\u7ebfdp\u3002\u3002\u3002\r\n\r\n~~\u50cf\u8fd9\u79cd\u5f80\u4e00\u4e2a\u5927\u65b9\u6846\u91cc\u9762\u586b\u5947\u5947\u602a\u602a\u7684\u5f62\u72b6\uff0c\u7136\u540e\u8fd9\u4e2a\u5927\u65b9\u6846\u6709\u4e00\u8fb9\u7279\u522b\u7a84\u7684\u96be\u9053\u4e0d\u5c31\u662f\u8f6e\u5ed3\u7ebfdp\u4e48~~\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u8f6c\u6362\u4e00\u4e0b\u95ee\u9898\r\n\r\n```\r\n1     X\r\n2     X\r\n3 X X X O O\r\n4     O\r\n5     O\r\n```\r\n\r\n\u5bf9\u4e8e\u5341\u5b57\uff0c\u6211\u4eec\u660e\u663e\u4e0d\u9700\u8981\u53bb\u8003\u8651 `O` \u7684\u90e8\u5206\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3 `X` \u7684\u90e8\u5206\u4f1a\u4e0d\u4f1a\u78b0\u5230\u5176\u4ed6\u5341\u5b57\u7684\u4e2d\u5fc3\uff0c\r\n\r\n\u5f53\u7136\uff0c\u8fd9\u662f\u6309\u7167\u4ece\u5de6\u5f80\u53f3\u4ece\u4e0a\u5f80\u4e0b\u7684\u987a\u5e8f\u679a\u4e3e\u586b\u5145\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u9996\u5148\u60f3\u5230\u628a\u4e0a\u9762\u7684 1 2 3 \u884c\u6bcf\u4e2a\u683c\u5b50\u6709\u6ca1\u6709\u5341\u5b57\u4e2d\u5fc3\u72b6\u538b\u6389\uff0c\u7136\u540e\u679a\u4e3e\u5f53\u524d\u4f4d\u7f6e\u8981\u4e0d\u8981\u653e\u5341\u5b57\uff0c\u7136\u540e\u8f6c\u79fb\r\n\r\n\u8981\u5b58\u5341\u5b57\u4e2d\u5fc3\u8fd9\u4e00\u884c\u662f\u56e0\u4e3a\u5341\u5b57\u4e2d\u5fc3\u5de6\u8fb9\u90e8\u5206\u4e5f\u4f1a\u88ab\u5f71\u54cd\u5230\r\n\r\n\u90a3\u4e48\u8fd9\u4e2a dp \u6570\u7ec4\u5c31\u53ef\u4ee5\u8fd9\u6837\u5f00\r\n\r\n$f_{i,j,mask1,mask2,mask3}$ \u8868\u793a $(i,j)$ \u4f4d\u7f6e\u5f53\u524d\u884c\u72b6\u6001\u662f $mask1$ \uff0c\u4e0a\u4e00\u884c\u72b6\u6001\u662f $mask2$ \uff0c\u4e0a\u4e0a\u884c\u72b6\u6001\u662f $mask3$\r\n\r\n$2^{30}$ \u663e\u7136\u7206\u4e86\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/k5qh2z51.png)\r\n\r\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u679a\u4e3e\u5230\u7eff\u8272\u65b9\u683c\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u679a\u4e3e\u7684 3 \u884c\u72b6\u6001\u4e2d\uff0c\u5176\u5b9e\u68d5\u8272\u90e8\u5206\u662f\u6ca1\u6709\u7528\u7684\r\n\r\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u7ea2\u8272\u90e8\u5206\u770b\u6210 1 \u884c\uff0c\u7c89\u8272\u90e8\u5206\u770b\u6210 1 \u884c\uff0c\u7136\u540e\u8fd9\u6837\u5c31\u628a 3 \u884c\u7684\u72b6\u6001\u53d8\u6210\u4e86 2 \u884c\r\n\r\n\u7136\u540e\u5c31\u662f\u679a\u4e3e\u7eff\u8272\u90e8\u5206\u586b\u4e0d\u586b\u5341\u5b57\uff0c\r\n\r\n\u5206\u7c7b\u8ba8\u8bba\u8f6c\u79fb\uff1a\r\n\r\n```\r\n    1\r\n    2\r\n3 4 5\r\n```\r\n\r\n5 \u662f\u5f53\u524d\u7684\u4f4d\u7f6e\uff1a\r\n\r\n\u5982\u679c 1 2 3 4 \u90fd\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728 5 \u4e0a\u586b\u5341\u5b57\u6216\u8005\u4e0d\u586b\r\n\r\n\u5982\u679c\u53ea\u6709 1 3 \u662f\u6709\u5341\u5b57\u4e2d\u5fc3\u6216\u8005\u53ea\u6709 2 4 \u662f\u6709\u5341\u5b57\u4e2d\u5fc3 \uff0c\u90a3\u4e48\u53ea\u80fd\u4e0d\u5728 5 \u4e0a\u586b\uff0c\u56e0\u4e3a\u7528 2 \u4e2a\u6362 1 \u4e2a\u5f97\u4e0d\u507f\u5931\r\n\r\n\u5982\u679c\u53ea\u6709 1 \u6216\u53ea\u6709 2 \u6216\u53ea\u6709 3 \u6216\u53ea\u6709 4 \u662f\u6709\u5341\u5b57\u4e2d\u5fc3\uff0c\u90a3\u4e48\u53ef\u4ee5\u9009\u62e9\u5728 5 \u4e0a\u586b\u5341\u5b57\u6216\u8005\u4e0d\u586b\r\n\r\n\u5f53\u7136\u5982\u679c\u5730\u5f62\u662f `H` \u90a3\u5c31\u4e0d\u80fd\u586b\r\n\r\n\u4e0a\u9762\u90a3\u5f20\u56fe\u8f6c\u79fb\u5b8c\u7eff\u8272\u7684\u65b9\u683c\u540e\u8f6e\u5ed3\u7ebf\u5c31\u4f1a\u53d8\u6210\u8fd9\u6837\u5b50\uff1a\uff08\u5373\u8f6c\u79fb\u5230\u7684\u65b0\u72b6\u6001\uff09\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/g5sgdl19.png)\r\n\r\n\u90a3\u4e48 $f_{i,j,mask1,mask2}$ \u7684\u524d\u4e24\u4f4d\u53ef\u4ee5\u6eda\u5b58\u6389\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\times m\\times 2^{2m})$\r\n\r\n\u8c8c\u4f3c\u4e0d\u592a\u884c\u7684\u4e9a\u5b50\u5462\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u5bb9\u6613\u5730\u60f3\u5230\uff0c\u8fd9\u4e24\u884c\u8f6e\u5ed3\u7ebf\u7684\u5408\u6cd5\u72b6\u6001\u5176\u5b9e\u5e76\u4e0d\u591a\r\n\r\n\u5408\u6cd5\u72b6\u6001\u5c31\u662f\u6307\u8fd9\u4e24\u884c\u8f6e\u5ed3\u7ebf\u72b6\u6001\u4e2d\u4e0d\u5b58\u5728\u51b2\u7a81\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7dfs\u9884\u5904\u7406\u641c\u51fa\u6240\u6709\u7684\u5408\u6cd5\u72b6\u6001\uff0c\u4e0d\u523030000\u4e2a\r\n\r\n\u6240\u4ee5\u6700\u540e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f $O(n\\times m\\times 30000)$\uff0c\u4e0d\u5f00 O2 \u7528 C++\uff0c\u6700\u5927\u70b9\u8dd1\u4e86 160ms\uff0c\u6d77\u661f\r\n\r\n```cpp\r\n// This code wrote by chtholly_micromaker(MicroMaker)\r\n#include <bits/stdc++.h>\r\n#define reg register\r\nusing namespace std;\r\ntemplate <class t> inline void read(t &s)\r\n{\r\n\ts=0;\r\n\treg int f=1;\r\n\treg char c=getchar();\r\n\twhile(!isdigit(c))\r\n\t{\r\n\t\tif(c=='-')\r\n\t\t\tf=-1;\r\n\t\tc=getchar();\r\n\t}\r\n\twhile(isdigit(c))\r\n\t\ts=(s<<3)+(s<<1)+(c^48),c=getchar();\r\n\ts*=f;\r\n\treturn;\r\n}\r\nchar G[105][15];\r\nint f[2][(1<<10)+5][(1<<10)+5];\r\nint vis[3][10];\r\nvector<pair<int,int> > Masks[11]; \r\nint n,m;\r\ninline void checkmax(int &x,int y)\r\n{\r\n\tif(x<y)\r\n\t\tx=y;\r\n\treturn;\r\n}\r\ninline bool check(int pos)\r\n{\r\n\tif(pos<m-1)\r\n\t{\r\n\t\tfor(int i=0;i<3;++i)\r\n\t\t\tif(vis[i][pos]&&vis[i][pos+1])\r\n\t\t\t\treturn false;\r\n\t}\r\n\tif(pos<m-2)\r\n\t{\r\n\t\tfor(int i=0;i<3;++i)\r\n\t\t\tif(vis[i][pos]&&vis[i][pos+2])\r\n\t\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\ninline void dfs(int dep,int j,int mask1,int mask2)\r\n{\r\n\tif(dep<0)\r\n\t{\r\n\t\tMasks[j].push_back(make_pair(mask1,mask2));\r\n\t\treturn;\r\n\t}\r\n\tdfs(dep-1,j,mask1<<1,mask2<<1);\r\n\tif(dep<j)\r\n\t\tvis[1][dep]=true;\r\n\telse\r\n\t\tvis[0][dep]=true;\r\n\tif(check(dep))\r\n\t\tdfs(dep-1,j,mask1<<1|1,mask2<<1);\r\n\tif(dep<j)\r\n\t\tvis[1][dep]=false;\r\n\telse\r\n\t\tvis[0][dep]=false;\r\n\tif(dep<j)\r\n\t\tvis[2][dep]=true;\r\n\telse\r\n\t\tvis[1][dep]=true;\r\n\tif(check(dep))\r\n\tdfs(dep-1,j,mask1<<1,mask2<<1|1);\r\n\tif(dep<j)\r\n\t\tvis[2][dep]=false;\r\n\telse\r\n\t\tvis[1][dep]=false;\r\n\treturn;\r\n}\r\nsigned main(void)\r\n{\r\n\tios::sync_with_stdio(false);cin.tie(0);\r\n\tcin>>n>>m;\r\n\tfor(int i=1;i<=n;++i)\r\n\t\tcin>>G[i];\r\n\treg int full=(1<<m)-1;\r\n\treg int fpos=0;\r\n\treg int ans=0;\r\n\tfor(int i=0;i<m;++i)\r\n\t\tdfs(m-1,i,0,0);\r\n\tfor(int i=1;i<=n;++i)\r\n\t\tfor(int j=0;j<m;++j)\r\n\t\t{\r\n\t\t\tfor(int maskid=0;maskid<(int)Masks[j].size();++maskid)\r\n\t\t\t{\r\n\t\t\t\treg int mask1=Masks[j][maskid].first,mask2=Masks[j][maskid].second;\r\n\t\t\t\treg bool flg=false;\r\n\t\t\t\treg bool l0=(j>0&&(mask2&(1<<(j-1)))),l1=(j>1&&(mask2&(1<<(j-2))));\r\n\t\t\t\treg bool u0=mask1&(1<<j),u1=mask2&(1<<j);\r\n\t\t\t\tif(u0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!l0&&!l1&&G[i][j]=='P')\r\n\t\t\t\t\t\tcheckmax(f[fpos^1][mask1^(1<<j)][mask2|(1<<j)],f[fpos][mask1][mask2]);\r\n\t\t\t\t\tflg=true;\r\n\t\t\t\t}\r\n\t\t\t\tif(u1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!l0&&!l1&&G[i][j]=='P')\r\n\t\t\t\t\t\tcheckmax(f[fpos^1][mask1^(1<<j)][mask2],f[fpos][mask1][mask2]);\r\n\t\t\t\t\tflg=true;\r\n\t\t\t\t}\r\n\t\t\t\tif(l0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!u0&&!u1&&G[i][j]=='P')\r\n\t\t\t\t\t\tcheckmax(f[fpos^1][mask1][(mask2^(1<<(j-1)))|(1<<j)],f[fpos][mask1][mask2]);\r\n\t\t\t\t\tflg=true;\r\n\t\t\t\t}\r\n\t\t\t\tif(l1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!u0&&!u1&&G[i][j]=='P')\r\n\t\t\t\t\t\tcheckmax(f[fpos^1][mask1][(mask2^(1<<(j-2)))|(1<<j)],f[fpos][mask1][mask2]);\r\n\t\t\t\t\tflg=true;\r\n\t\t\t\t}\r\n\t\t\t\tcheckmax(f[fpos^1][(mask1&(~(1<<j)))|(mask2&(1<<j))][mask2&(~(1<<j))],f[fpos][mask1][mask2]);\r\n\t\t\t\tif(flg||G[i][j]=='H')\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tcheckmax(f[fpos^1][(mask1&(~(1<<j)))|(mask2&(1<<j))][mask2|(1<<j)],f[fpos][mask1][mask2]+1);\r\n\t\t\t}\r\n\t\t\tfor(int maskid=0;maskid<(int)Masks[j].size();++maskid)\r\n\t\t\t\tf[fpos][Masks[j][maskid].first][Masks[j][maskid].second]=0;\r\n\t\t\tfpos^=1;\r\n\t\t}\r\n\tfor(int i=0;i<=full;++i)\r\n\t\tfor(int j=0;j<=full;++j)\r\n\t\t\tcheckmax(ans,f[fpos][i][j]);\r\n\tcout<<ans<<endl;\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1588402212,
        "uid": 51376,
        "name": "MyukiyoMekya",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2704 [NOI2001]\u70ae\u5175\u9635\u5730"
    },
    {
        "content": "\u56e0\u4e3am<=10\uff0c\u5f88\u5c0f\uff0c\u6240\u4ee5\u5c06\u6bcf\u4e00\u884c\u7684\u60c5\u51b5\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u6765\u8868\u793a\u3002\n- \u5730\u5f62\uff1a\u75280\u8868\u793a\u5c71\u5730\uff0c1\u8868\u793a\u5e73\u539f\u3002\n- \u70ae\u5175\uff1a\u75280\u8868\u793a\u6ca1\u6709\uff0c1\u8868\u793a\u6446\u653e\u70ae\u5175\n\n\u4e8e\u662f\u5728\u8f93\u5165\u7684\u65f6\u5019\u76f4\u63a5\u8bb0\u5f55\u6bcf\u4e00\u884c\u7684\u5730\u5f62\n- zifuchuan\u4e3a\u8f93\u5165\u7684\u5b57\u7b26\u4e32,pic[i]\u8868\u793a\u7b2ci\u884c\u7684\u5730\u5f62 \n```\nif(zifuchuan[k-1]=='P')pic[i]=(pic[i]<<1)+1;//zifuchuan\u8f93\u5165\u7684\u5b57\u7b26\u4e32,pic[i]\u7b2ci\u884c\u7684\u5730\u5f62 \n\telse pic[i]=(pic[i]<<1);\n```\n\n\u5728\u8fdb\u884cDP\u524d\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e00\u884c\u53ef\u80fd\u7684\u70ae\u5175\u6446\u653e\u65b9\u5f0f\n- m[i]\u8868\u793a\u7b2ci\u79cd\u60c5\u51b5\uff0cnum[i]\u8be5\u60c5\u51b5\u7684\u70ae\u5175\u6570\uff0ccnt\u8ba1\u6570\n```\nbool check(int k)\n{\n    int a=(k<<1),b=(k>>1);\n    if((a&k)!=0||(b&k)!=0)return 0;\n    a=(k<<2),b=(k>>2);\n    if((a&k)!=0||(b&k)!=0)return 0;\n    return 1;\n}\nint number(int a) \n{\n    int num=0;\n    while(a)\n    {\n        if(a&1==1)num++;\n        a>>=1;\n    }\n    return num;\n}\nfor(int i=0;i<=inf;i++)\n{\n     if(check(i)==1)\n     {\n        cnt++;\n        m[cnt]=i;\n        num[cnt]=number(i);\n     }\n}\n```\n\n\u56e0\u4e3a\u6bcf\u4e00\u884c\u7684\u72b6\u6001\u4f1a\u8ddf\u524d\u4e24\u884c\u6709\u5173\uff0c\u6240\u4ee5\u5f00\u7684\u6570\u7ec4\u8981\u5305\u542b\u4e24\u884c\u7684\u4fe1\u606f\uff0c\u5219\u7528p[i][x][y]\u8868\u793a\u7b2ci\u884c\u7684\u70ae\u5175\u6446\u653e\u4e3ax\uff0c\u7b2ci-1\u884c\u70ae\u5175\u6446\u653e\u4e3ay\u65f6\u7684\u65b9\u6cd5\u6570\u91cf\uff0c\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n- p[i][x][y]=max(num[x],p[i-1][y][z])\n\n\u4e8e\u662f\u52a8\u6001\u89c4\u5212\u7684\u5faa\u574f\u5e94\u8fd0\u800c\u51fa\uff1a\n\u7b2ci\u884c\uff0c\u8be5\u884c\u7684\u7b2ck\u79cd\u60c5\u51b5\uff0c\u7b2ci-1\u884c\u7684\u7b2cy\u79cd\u60c5\u51b5\uff0c\u7b2ci-2\u884c\u7684\u7b2cz\u79cd\u60c5\u51b5\u3002\u5e76\u5728\u679a\u4e3e\u60c5\u51b5\u65f6\u5224\u65ad\u8be5\u60c5\u51b5\u662f\u5426\u6ee1\u8db3\uff0c\u82e5\u6ee1\u8db3\u5c31\u53ef\u4ee5\u5bf9\u8be5\u72b6\u6001\u8d4b\u503c\u3002\u6700\u540e\u53cc\u5c42\u5faa\u73af\u627e\u51fa\u7b54\u6848\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff08\u6211\u7684\u80fd\u529b\u4e0d\u8db3\uff0c\u6709\u9519\u548c\u5197\u957f\u4ee3\u7801\u7684\u8bf7\u6307\u51fa\uff09\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,mc,pic[150],inf;//n*mc\u7684\u5730\u56fe\uff0cpic[i]\u7b2ci\u884c\u7684\u5730\u5f62 \nlong long p[3][1<<10][1<<10],ans;//p[i][z][y]=\u7b2ci\u884c\u653ez,\u7b2ci-1\u884c\u653ey\u7684\u603b\u7684\u6570\u91cf \nchar zifuchuan[150];//\u8f93\u5165\u7684\u5b57\u7b26\u4e32 \nint m[1<<12],num[1<<12],cnt;   //m\u6bcf\u4e00\u884c\u53ef\u80fd\u7684\u60c5\u51b5\uff0cnum\u8be5\u60c5\u51b5\u7684\u70ae\u5175\u6570\uff0ccnt\u8ba1\u6570 \nbool check(int k)//\u60c5\u51b5k\u662f\u5426\u6ee1\u8db3\u70ae\u5175\u4e92\u4e0d\u76f8\u90bb \uff0c0\u76f8\u90bb\uff0c1\u4e0d\u76f8\u90bb \n{\n    int a=(k<<1),b=(k>>1);\n    if((a&k)!=0||(b&k)!=0)return 0;\n    a=(k<<2),b=(k>>2);\n    if((a&k)!=0||(b&k)!=0)return 0;\n    return 1;\n}\nbool check2(int i,int a)//\u60c5\u51b5a\u4e0e\u5730\u5f62i\u662f\u5426\u51b2\u7a81\uff0c0\u51b2\u7a81\uff0c1\u4e0d\u51b2\u7a81 \n{\n    if((i&a)!=a)return 0;\n    return 1;\n}\nint number(int a)//\u8ba1\u7b97\u60c5\u51b5a\u7684\u70ae\u5175\u6570\u91cf \n{\n    int num=0;\n    while(a)\n    {\n        if(a&1==1)num++;\n        a>>=1;\n    }\n    return num;\n}\nbool comp(int a,int b)//\u60c5\u51b5a,b\u70ae\u5175\u662f\u5426\u76f8\u90bb\uff0c0\u76f8\u90bb\uff0c1\u4e0d\u76f8\u90bb  \n{\n    if((a&b)!=0)return 0;\n    return 1;\n}\nint main() {\n    cin>>n>>mc;\n    inf=(1<<mc)-1;//\u6bcf\u4e00\u884c\u7684\u6700\u5927\u60c5\u51b5\u503c \n    n+=1;  //\u4ecepic[2]\u5f00\u59cbDP \n    for(int i=2;i<=n;i++)\n    {\n        scanf(\"%s\",zifuchuan);\n        for(int k=1;k<=mc;k++)\n        {\n            if(zifuchuan[k-1]=='P')pic[i]=(pic[i]<<1)+1;//\u4ee41\u4e3a\u5e73\u539f\uff0c0\u4e3a\u5c71\u5730 \n            else pic[i]=(pic[i]<<1);\n        }\n    }\n    pic[0]=pic[1]=inf;//pic[0],pic[1]\u5730\u5f62\u521d\u59cb\u5316\u4e3a\u5168\u4e3a\u5e73\u539f \n    for(int i=0;i<=inf;i++)   //\u5c06\u53ef\u80fd\u7684\u70ae\u5175\u60c5\u51b5\u63d0\u524d\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc \n    {\n        if(check(i)==1)\n        {\n            cnt++;\n            m[cnt]=i;\n            num[cnt]=number(i);\n        }\n    }\n    for(int i=2;i<=n;i++)//\u4ece\u7b2ci\u884c\u5f00\u59cb \n    {\n        for(int k=1;k<=cnt;k++)//\u7b2ci\u884c\u7684\u7b2ck\u79cd\u60c5\u51b5 \n        {\n            if(check2(pic[i],m[k])==0)continue;//\u8be5\u60c5\u51b5\u4e0e\u5730\u5f62\u51b2\u7a81 \n            for(int y=1;y<=cnt;y++)//\u7b2ci-1\u884c\u7684\u7b2cy\u79cd\u60c5\u51b5 \n            {\t\t\n                if(check2(pic[i-1],m[y])==0)continue;//\u8be5\u60c5\u51b5\u4e0e\u5730\u5f62\u51b2\u7a81 \n                if(comp(m[k],m[y])==0)continue;//\u8be5\u60c5\u51b5\u7684\u70ae\u5175\u4f1a\u88ab\u653b\u51fb\u5230 \n             //   p[i%3][m[k]][m[y]]=num[k];\n                for(int z=1;z<=cnt;z++)//\u7b2ci-2\u884c\u7684\u7b2cz\u79cd\u60c5\u51b5 \n                {\n                    if(check2(pic[i-2],m[z])==0)continue;//\u8be5\u60c5\u51b5\u4e0e\u5730\u5f62\u51b2\u7a81 \n                    if(comp(m[k],m[z])==0||comp(m[y],m[z])==0)continue;//\u8be5\u60c5\u51b5\u7684\u70ae\u5175\u4f1a\u88ab\u653b\u51fb\u5230 \n                    p[i%3][m[k]][m[y]]=max(p[i%3][m[k]][m[y]],num[k]+p[(i-1)%3][m[y]][m[z]]);\n                }\n            //\tcout<<i-1<<\" \"<<m[k]<<\" \"<<m[y]<<\" \"<<p[i%3][m[k]][m[y]]<<endl;\n            }\n        }\n    }\n    for(int k=1;k<=cnt;k++)\n    {\n        for(int y=1;y<=cnt;y++)\n        {\t\t\n            ans=max(ans,p[n%3][m[k]][m[y]]);\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1538135922,
        "uid": 112518,
        "name": "www233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u534a\u5929\u9898\u89e3\u4e5f\u6ca1\u6709\u770b\u5230\u72b6\u538b\u4e09\u8fdb\u5236\u7684\uff0c\u6240\u4ee5\u6211\u6765\u53d1\u4e00\u53d1\n\nx\u4e3a\u6a2a\u5750\u6807\uff0cy\u4e3a\u7eb5\u5750\u6807\n\n### \u8ba8\u8bba\u72b6\u6001\n\u5bf9\u4e8e$(x,y)$\u6bcf\u4e00\u4e2a\u4e09\u8fdb\u5236\u4e3a\n\n$0:(x,y),(x,y-1)$\u90fd\u6ca1\u6709\u88ab\u5360\u7528\n\n$1:(x,y)$\u6ca1\u6709\u5360\u7528\uff0c$(x,y-1)$\u88ab\u5360\u7528\n\n$2:(x,y)$\u88ab\u5360\u7528\uff0c$(x,y-1)$\u53ef\u4ee5\u4e0d\u8003\u8651\n\n\u5360\u7528\u6307\u7684\u662f\uff1a\u6709\u5df2\u7ecf\u88ab\u5176\u4ed6\u70ae\u5175\u653b\u51fb\u8303\u56f4\u8986\u76d6\u4e86\uff08\u4e0d\u8981\u628a\u5c71\u5730\u4f5c\u4e3a\u5360\u7528\uff0c\u5e94\u4e3a\u5c71\u5730\u4e0d\u7528\u8f6c\u79fb\uff0c\u5176\u4ed6\u70ae\u5175\u7684\u653b\u51fb\u8303\u56f4\u91cc\u53ef\u4ee5\u6709\u5c71\u5730\uff09\n\n\u901a\u8fc7\u8ba8\u8bba$(x,y)$\u6765\u5224\u65ad$(x,y+1)$\u662f\u5426\u53ef\u80fd\u653e\u7f6e\u4e00\u4e2a\u70ae\u5175\n\n\u72b6\u6001\u521d\u59cb\u5316\u5168\u90e8\u4e3a-1\uff0c\u4ee3\u8868\u4e0d\u53ef\u5230\u8fbe\n\n### \u8bbe\u7f6e\u8f6c\u79fb\n$dp[i][j]$\u8868\u793a\u7b2c$i$\u884c\u72b6\u6001$j$\u65f6\uff0c$1\u2026i-1$\u884c\u6240\u80fd\u653e\u70ae\u5175\u7684\u6700\u5927\u6570\u76ee\n\n1\u3001\u8fd9\u4e00\u884c\u7684**\u521d\u59cb**\u72b6\u6001\u53ef\u4ee5\u7531\u4e0b\u4e00\u884c\u8f6c\u79fb\u5f97\u6765\n\n\u4e0b\u9762\u5199\u7684$(x,y-1),(x,y),(x,y+1)$\u90fd\u8868\u793a\u8fd9\u4e2a\u5750\u6807\u5bf9\u5e94\u7684**\u72b6\u6001**\n\n\u5f53$(x,y-1)$\u4e3a0\uff0c$(x,y)$\u4e3a0\n\n\u5f53$(x,y-1)$\u4e3a1\uff0c$(x,y)$\u4e3a0\n\n\u5f53$(x,y-1)$\u4e3a2\uff0c$(x,y)$\u4e3a1\n\n\u7279\u522b\u7684\u5f53$(x,y)$\u4e3a\u574f\u70b9\uff0c\u8bb0\u5f55$no[x]=true$\n\n2\u3001\u5f00\u59cbdfs\u8fc7\u7a0b\n\n\u53c2\u6570$x$\u8868\u793a\u5217\uff0c$i$\u4ee3\u8868\u5f53\u524d\u7684\u884c\n$(i,x)$\u653e\\\u4e0d\u653e\u70ae\u5175\n\n$p[],q[]$\u5206\u522b\u4ee3\u8868\u4e0b\u4e00\u884c\u548c\u5f53\u524ddfs\u7684\u4e00\u884c\u7684\u6bcf\u4e2a\u72b6\u6001\n 1. $(i,x)$\u4e0d\u653e\u70ae\u5175\uff0cdfs\u76f4\u63a5\u8df3\u8f6c\u5230$(i,x+1)$\uff08\u4ee3\u7801\u4e2d\u7528for\u5faa\u73af\u4ee3\u66ff\uff09\n 2. $(i,x)$\u653e\u7f6e\u70ae\u5175\uff0c\u524d\u63d0$p[x]=0,q[x]=0$\uff0c\u5f53\u524d\u5df2\u7ecf\u679a\u4e3e\u7684\u653e\u7f6e\u4e2a\u6570+1\u66f4\u65b0$dp[i+1][q']$\uff0c$q'$\u8868\u793a$q$\u653e\u7f6e\u70ae\u5175\u540e\u7684\u72b6\u6001$q[x]=2$\uff0cdfs\u8df3\u8f6c\u5230$(i,x+3)$\uff08\u56e0\u4e3ax+1,x+2\u90fd\u662f\u5f53\u524d\u653e\u7684\u70ae\u5175\u7684\u653b\u51fb\u8303\u56f4\uff09\n \n \u4e0d\u77e5\u9053\u8bb2\u61c2\u4e86\u6ca1\u6709qwq\n \n ```cpp\n #include <bits/stdc++.h>\nusing namespace std;\ninline void read(int &x){\n    x = 0; int f = 1; char ch = getchar();\n    while (!(ch >= '0' && ch <= '9')){if (ch == '-') f = -1; ch = getchar();}\n    while (ch >= '0' && ch <= '9'){x = x * 10 + ch - '0'; ch = getchar();}\n    x *= f;\n}\ninline void Max(int &x, int y){if (y > x) x = y;}\nconst int N = 100 + 10;\nconst int M = 10 + 5;\nint n, m, f[2][59049], p[M], q[M], thr[M], ans;\nbool hit[N][M], fg, no[M];\nchar s[15];\ninline int make(int *a){//\u5341\u8fdb\u5236\u8f6c\u4e09\u8fdb\u5236\n    int ret = 0;\n    for (int i = 1; i <= m && a; i++) ret += thr[i - 1] * a[i];\n    return ret;\n}\ninline void res(int x, int *a){//\u4e09\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\n    for (int i = 1; i <= m; i++) a[i] = x % 3, x /= 3;\n}\n//dfs(\u5217\uff0c\u5df2\u7ecf\u5f97\u51fa\u7684\u653e\u7f6e\u4e2a\u6570)\ninline void dfs(int x, int cnt){\n    Max(f[fg][make(q)], cnt);\n    Max(ans, cnt);\n    for (; x <= m; x++){\n        if (!p[x] && !q[x] && !no[x]){\n            q[x] = 2; dfs(x + 3, cnt + 1); q[x] = 0;\n        }\n    }\n}\nint main(){\n    thr[0] = 1;//\u4e09\u8fdb\u5236\u9884\u5904\u7406\n    for (int i = 1; i <= 10; i++) thr[i] = thr[i - 1] * 3;\n    read(n), read(m);\n    for (int i = 1; i <= n; i++){\n        scanf(\"%s\", s + 1);//\u4e0d\u80fd\u653e\u70ae\u5854\u7684\u4f4d\u7f6e\u6253\u4e0a\u6807\u8bb0\n        for (int j = 1; j <= m; j++) if (s[j] == 'H') hit[i][j] = true;\n    }\n    memset(f, -1, sizeof(f));//\u521d\u59cb\u5316\u4e3a-1\u8868\u793a\u6ca1\u6709\u5230\u8fbe\n    f[1][0] = 0;//\u7528\u4e8e\u521d\u59cb\u5316\u7b2c\u4e00\u884c\n    for (int i = 1; i <= n; i++){\n        memset(f[fg], -1, sizeof(f[fg]));//\u8bb0\u5f97\u521d\u59cb\u5316\n        for (int j = 0; j < thr[m]; j++) if (f[fg ^ 1][j] != -1){\n            res(j, p);\n            for (int k = 1; k <= m; k++){\n                no[k] = hit[i][k];//no\u8bb0\u5f55\u5f53\u524d\u884c\u7684\u5c71\u5730\uff0c\u5c31\u662f\u4e0d\u80fd\u653e\u70ae\u5854\n                q[k] = max(0, p[k] - 1);//q\u53ef\u7531\u4e0a\u4e00\u884c\u8f6c\u79fb\u6765\n            }\n            dfs(1, f[fg ^ 1][j]);\n        }\n        fg ^= 1;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n/*\n\u5c1d\u8bd5\u4f7f\u7528\u4e09\u8fdb\u5236\n3^10=59049\n0:\u8868\u793a\u5f53(x,y),(x,y-1)\u4e3a\u7a7a\n1:\u8868\u793a(x,y)\u4e3a\u7a7a,(x,y-1)\u4e0d\u4e3a\u7a7a\n2:\u8868\u793a(x,y)\u4e0d\u4e3a\u7a7a\n\u6ce8\u610f\"H\"\u5c71\u5730\u4e0d\u8981\u8868\u793a\u52302\u72b6\u6001\u4e2d\uff0c\u56e0\u4e3a\u5c71\u5730\u4e0d\u7528\u88ab\u8f6c\u79fb(\u5176\u4ed6\u70ae\u7684\u8303\u56f4\u4e2d\u53ef\u4ee5\u662f\u5c71\u5730)\n\u53ea\u7528\u4e8e\u5224\u65ad\u5f53\u524d\u884c\u662f\u5426\u53ef\u4ee5\u653e\u70ae\u5854\n\u8f6c\u79fb\u6761\u4ef6,p,q\u4ee3\u8868\u5f53\u524d\u884c\u6240\u5bf9\u5e94\u4e09\u8fdb\u5236\u4e0b\u7684\u6bcf\u4e2a\u70b9\u7684\u72b6\u6001\uff0c\u7528res\u51fd\u6570\u4e09\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\n(x-1,y)=0,(x,y)=0\u5c31\u662fp[x-1]=0,q[x]=0\nf[x][j']=++cnt\n\u53ea\u7528\u4fee\u6539\u5f53\u524d\u884c(x,y)=2\u5c31\u662fq[x]=2\n(x,y)\u4e0a\u653e\u70ae\u5854\u540e\u8df3\u8f6c\u5230(x+3,y)\n*/\n\n\n ```",
        "postTime": 1552434598,
        "uid": 76226,
        "name": "yy1695651",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "#### \u4e00\u9053\u7ecf\u5178\u7684\u72b6\u538bDP\n##### \u4e3b\u8981\u601d\u8def\uff1a\u7528f\u6570\u7ec4\u8868\u793a\u72b6\u6001\uff0c\u9996\u5148f\u6570\u7ec4\u5fc5\u6709\u4e00\u7ef4\u8868\u793a\u5f53\u524d\u884c\uff0c\u8fd8\u6709\u4e00\u7ef4\u8868\u793a\u5f53\u524d\u884c\u7684\u72b6\u6001\uff0c\u7531\u4e8e\u70ae\u5175\u53ef\u4ee5\u8f70\u70b8\u5230\u524d\u4e24\u884c\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u4e00\u7ef4\u8868\u793a\u4e0a\u4e00\u884c\u7684\u72b6\u6001\uff0c\u4e0d\u59a8\u8bbef[i][j][k]\u8868\u793a\u7b2ck\u884c\u7684\u72b6\u6001\u4e3aj\uff0c\u7b2ck-1\u884c\u7684\u72b6\u6001i\u65f6\u80fd\u653e\u7684\u6700\u5927\u70ae\u5175\u6570\n##### \u4e0d\u8fc7\u4e3a\u4ec0\u4e48\u7b2ck-2\u884c\u4e0d\u7528\u8bb0\u5f55\u5462\uff1f\u5176\u5b9e\u5c06\u7b2ck-2\u884c\u7684\u72b6\u6001\u8bb0\u5f55\u8fdbf\u6570\u7ec4\u4e2d\u672a\u5c1d\u4e0d\u53ef\uff0c\u4f46\u4e0d\u4ec5\u4f1a\u8fdc\u8fdc\u8d85\u51fa\u7a7a\u95f4\u8303\u56f4(O(2^10*2^10*2^10*100))\uff0c\u800c\u4e14\u5728\u540e\u9762\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e2d\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e0d\u9700\u8981\u8003\u8651\u7b2ck-2\u884c\uff0c\u5728\u8fdb\u884c\u7b2ck-1\u7684\u8f6c\u79fb\u65f6\u5df2\u7ecf\u8003\u8651\u8fc7\u4e86\n##### \u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u5e94\u8be5\u5f88\u597d\u63a8 f[i][j][k] = max{ f[l][i][k-1] | l,i,j\u2208{0,1,...,(1<<m)-1}, k\u2208{x|x\u2208N*,x\u22601}\uff0ccheck(i,j,l)}\n##### \u4e0a\u5f0f\u8868\u660e\u4e86\u72b6\u6001\u8f6c\u79fb\u7684\u89c4\u5f8b\uff0c\u4ee5\u53ca\u5f0f\u5b50\u6210\u7acb\u7684\u6761\u4ef6\uff0c\u89c2\u5bdf\u4e0a\u8ff0\u5f0f\u5b50\uff0c\u53ef\u4ee5\u518d\u6b21\u8bc1\u660e\u4e0d\u9700\u8981\u8003\u8651\u7b2ck-2\u884c\uff0c\u56e0\u4e3a\u5728\u8fdb\u884c\u7b2ck-1\u7684\u8f6c\u79fb\u65f6\u5df2\u7ecf\u8003\u8651\u8fc7\u4e86\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u5224\u65ad\u7b2ck-2\u884c\u7684\u72b6\u6001\u662f\u5426\u4e0d\u4e0e\u7b2ck-1\u884c\u548c\u7b2ck\u884c\u51b2\u7a81\n##### \u90a3\u4e48check(i,j,k)\u8981\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u5462\uff1f\u4e0d\u96be\u53d1\u73b0\uff0c\u9664\u4e86\u6bcf\u4e00\u884c\u81ea\u8eab\u72b6\u6001\u4e0d\u80fd\u51b2\u7a81\u5916\uff0c\u6bcf\u4e00\u884c\u4e4b\u95f4\u4e5f\u4e0d\u80fd\u51b2\u7a81\uff0c\u8fd9\u4e00\u70b9\u5728\u4ee3\u7801\u4e2d\u6709\u4f53\u73b0\n##### \u4e0d\u8fc7\u6309\u7167\u8fd9\u6837\u7684\u601d\u8def\uff0c\u8fd8\u4e0d\u7b97\u4f18\u79c0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u8f83\u9ad8\n##### \u9488\u5bf9\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u7531\u4e8e\u72b6\u6001\u7684\u8f6c\u79fb\u53ea\u6d89\u53ca\u524d\u4e00\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u6eda\u52a8\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u5c06\u7b2c\u4e09\u7ef4\u53d8\u4e3a[2],\u697c\u4e0a\u7684\u5927\u4f6c\u4eec\u6709\u8be6\u7ec6\u7684\u8bb2\u89e3\n##### \u9488\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7531\u4e8e\u5728\u4e00\u884c\u4e2d\u53ef\u80fd\u6709\u8bb8\u591a\u4e0d\u80fd\u653e\u7f6e\u70ae\u5175\u7684\u70b9\uff0c\u4e0d\u59a8\u9884\u5904\u7406\u51fa\uff0c\u6bcf\u4e00\u884c\u6ee1\u8db3\u5730\u5f62\u6761\u4ef6\u7684\u72b6\u6001\uff0c\u4ee3\u7801\u4e2d\u6709\u8f83\u8be6\u7ec6\u8bf4\u660e\n##### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct state{\n\tint st[1100];\n\tint num=0;\n}b[110];\nint f[1100][1100][2];\nint a[110][20];\nint s[110],sum[1100];\nint n,m,ans,t=1;\nint main(){\n    scanf(\"%d%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    \tfor(int j=1;j<=m;j++){\n    \t    char c;cin>>c;\n    \t    s[i]=s[i]*2+(c=='P');//\u8bb0\u5f55\u6bcf\u4e00\u884c\u72b6\u6001 \n        }\n    for(int i=0;i<(1<<m);i++)\n        for(int j=0;j<m;j++)\n\t\t    if(i&(1<<j)) sum[i]++;//\u8bb0\u5f55\u6bcf\u4e00\u79cd\u72b6\u6001\u6709\u51e0\u4e2a\u70ae\u5175 \n    for(int i=1;i<=n;i++)//\u679a\u4e3e\u6bcf\u4e00\u884c \n    \tfor(int j=0;j<(1<<m);j++)//\u679a\u4e3e\u5f53\u524d\u884c\u7684\u72b6\u6001 \n    \t    if((j|s[i])==s[i]&&!(j&(j<<1))&&!(j&(j<<2)))//\u4e0d\u51b2\u7a81 \n    \t    \tb[i].st[++b[i].num]=j;//\u8bb0\u5f55\u5f53\u524d\u884c\u53ef\u884c\u72b6\u6001 \n    for(int i=1;i<=b[1].num;i++) f[0][b[1].st[i]][0]=sum[b[1].st[i]];//\u521d\u59cb\u5316\u7b2c\u4e00\u884c\n    for(int i=1;i<=b[2].num;i++)//\u521d\u59cb\u5316\u7b2c\u4e8c\u884c\n        for(int j=1;j<=b[1].num;j++){\n        \tint k=b[2].st[i],l=b[1].st[j];\n        \tif(k&l) continue;\n        \tf[l][k][1]=max(f[l][k][1],f[0][l][0]+sum[k]);\n\t\t}\n    for(int i=3;i<=n;i++){//\u679a\u4e3e\u884c \n    \tt^=1;//\u6eda\u52a8\u6570\u7ec4\n    \tfor(int j=1;j<=b[i].num;j++)//\u7b2ci\u884c\u72b6\u6001 \n    \t\tfor(int k=1;k<=b[i-1].num;k++)//\u7b2ci-1\u884c\u72b6\u6001 \n    \t\t    if(!(b[i].st[j]&b[i-1].st[k]))//\u7b2ci\u884c\u4e0e\u7b2ci-1\u884c\u4e0d\u51b2\u7a81 \n    \t\t        for(int l=1;l<=b[i-2].num;l++)//\u7b2ci-2\u884c\u72b6\u6001 \n    \t\t        \tif(!(b[i].st[j]&b[i-2].st[l])&&!(b[i-1].st[k]&b[i-2].st[l]))//\u7b2ci\u884c\u4e0e\u7b2ci-2\u884c\u4ee5\u53ca\u7b2ci-1\u884c\u4e0e\u7b2ci-2\u884c\u4e0d\u51b2\u7a81 \n    \t\t        \t\tf[b[i-1].st[k]][b[i].st[j]][t]=max(f[b[i-2].st[l]][b[i-1].st[k]][t^1]+sum[b[i].st[j]],f[b[i-1].st[k]][b[i].st[j]][t]);//\u66f4\u65b0\u7b54\u6848 \n\t}\n    for(int i=1;i<=b[n].num;i++)\n \t    for(int j=1;j<=b[n-1].num;j++)\n \t        ans=max(ans,f[b[n-1].st[j]][b[n].st[i]][t]);//\u66f4\u65b0\u6700\u4f18\u89e3 \n\tcout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1573660765,
        "uid": 62320,
        "name": "Agemt",
        "ccfLevel": 0,
        "title": "\u70ae\u5175\u9635\u5730"
    },
    {
        "content": "##     \u4e0d\u9519\u7684\u4e00\u9053\u72b6\u538b\u9898\n### [\u849f\u84bb\u7684BLOG](https://1390282815.github.io/)\n    \u770b\u5230\u8fd9\u9053\u9898\u5f88\u5bb9\u6613\u5c31\u4f1a\u60f3\u5230\u72b6\u538b\n    \u4e0e\u6a21\u677f\u7a0d\u6709\u4e0d\u540c\u6bcf\u4e00\u884c\u4e0e\u4e0a\u4fe9\u884c\u6709\u5173\u8054\n    \u90fd\u9700\u8981\u8bb0\u4e0b\u4ed6\u4eec\u7684\u72b6\u6001\n    \u8bbe\u8ba1\u51fa\u72b6\u6001f[i//\u5f53\u524ddp\u6240\u5728\u884c][j//\u672c\u884c\u7684\u72b6\u6001][k//\u4e0a\u4e00\u884c\u7684\u72b6\u6001]\n\t\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n```\nf[i][j][k] = max(f[i][j][k] ,f[i - 1][k][l] + pv[a[i][j]])\n//j\u679a\u4e3e\u5f53\u524d\u884c\u72b6\u6001\uff0ck\u679a\u4e3ei - 1\u884c\u72b6\u6001\uff0cl\u679a\u4e3ei - 2\u884c\u72b6\u6001\n//pv\u8bb0\u4e0b\u4e0d\u540c\u72b6\u6001\u7684\u70ae\u5175\u6570\u7684\n```\n    \u6ce8\u610f\u51e0\u4e2a\u7ec6\u8282\u5185\u5b58\u4f1a\u70b8\uff0c\u8981\u6eda\u6389\u4e00\u7ef4\n    pv\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6c42\n    \u82e5\u770b\u5b8c\u8fd8\u662f\u4e0d\u4f1a\u7684\uff0c\u53ef\u4ee5\u5148\u5b66\u4e60\u4e0b\u72b6\u538b\u5728\u6765\u505a\u9898\n    \u78e8\u5200\u4e0d\u8bef\u780d\u67f4\u529f\n    \u4e0a\u4ee3\u7801\uff1a\n    \n\n------------\n```cpp\n#include<bits/stdc++.h>\n#define FOR(a , b , c) for (int a = b; a <= c; a++)\nusing namespace std;\nint n , m;\nint a[107][1027] , num[107] , v[107][1027] , pv[1027];\nint f[2][1027][1027];\nchar ch[17];\ninline void pval() {//\u9884\u5904\u7406pv\n\tFOR(i , 1 , (1 << m) + 1) {\n\t\tint cp = 1;\n\t\twhile(cp <= i) {\n\t\t\tif(cp & i) pv[i]++;\n\t\t\tcp = cp << 1;\n\t\t}\n\t}\n}\ninline void pre(int k , int w) {//\u67e5\u8be2\u5408\u6cd5\u7684\u72b6\u6001\n\tint cnt = 0;\n\tFOR(i , 0 , (1 << m) - 1) {\n\t\tif(((i << 1) & i) || ((i << 2) & i) || ((i >> 1) & i) || ((i >> 2) & i) || (i & w)) continue;\n\t\ta[k][++cnt] = i;\n\t}\n\tnum[k] = cnt;\n}//\u8bb0\u4e0b\u72b6\u6001\u4e0e\u603b\u72b6\u6001\u6570\nint main () {\n\tscanf(\"%d %d\" , &n , &m);\n\tpval();\n\tFOR(i , 1 , n) {\n\t\tint s = 0 , x;\n\t\tscanf(\"%s\" , &ch);\n\t\tFOR(j , 0 , m - 1) {\n\t\t\tif(ch[j] == 'H') x = 0;\n\t\t\tif(ch[j] == 'P') x = 1;\n\t\t\ts = (s << 1) + 1 - x;//\u4ee5\u4e8c\u8fdb\u5236\u5b58\n\t\t}\n\t\tpre(i , s);//\u5904\u7406\u5408\u6cd5\u72b6\u6001\n\t}\n\tFOR(i , 1 , num[1]) FOR(j , 1 , num[2]) {\n\t\tif(a[1][i] & a[2][j]) continue;\n\t\tf[0][j][i] = pv[a[1][i]] + pv[a[2][j]];\n\t}//\u521d\u59cb\u5316\n\tint cn = 0;\n\tFOR(i , 3 , n) {\n\t\tcn = cn ^ 1;//\u6eda\u6389\u4e00\u7ef4\n\t\tFOR(j , 1 , num[i]) FOR(k , 1 , num[i - 1]) FOR(l , 1 , num[i - 2]) {\n\t\t\tif((a[i][j] & a[i - 1][k]) || (a[i][j] & a[i - 2][l]) || (a[i - 1][k] & a[i - 2][l])) continue;//\u68c0\u67e5\u662f\u5426\u5408\u6cd5\n\t\t\tf[cn][j][k] = max(f[cn][j][k] , f[cn ^ 1][k][l] + pv[a[i][j]]);//\u72b6\u6001\u8f6c\u79fb\uff0c\u4ece\u524d\u4e00\u884c\uff0c\u7ee7\u627f\u4e0b\u6765\u5e76\u52a0\u4e0a\u5f53\u524d\u884c\u7684\u70ae\u5175\u6570\n\t\t}\n\t}\n\tint ans = 0;\n\tFOR(i , 1 , num[n]) FOR(j , 1 , num[n - 1]) ans = max(ans , f[cn][i][j]);//\u7edf\u8ba1\u7b54\u6848\n\tprintf(\"%d\" , ans);\n```\n\n\n",
        "postTime": 1556517251,
        "uid": 100439,
        "name": "\u771f\u59ec\u516b\u5f69",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u72b6\u538bDP\n\ndp[i][j][k],i\u8868\u793a\u884c\u6570\uff0cj\u8868\u793a\u8fd9\u4e00\u884c\u72b6\u6001\uff0ck\u8868\u793a\u4e0a\u4e00\u884c\u72b6\u6001\uff08\u56e0\u4e3a\u4e00\u884c\u8981\u53d7\u4e0a\u4e24\u884c\u7684\u5f71\u54cd\uff0c\u538b\u6389\u4e00\u4e2a\u540e\u8fd8\u8981\u8868\u793a\u4e0a\u4e00\u884c\u7684\u72b6\u6001\uff09\n\n\u5177\u4f53\u7684\u7ec6\u8282\u770b\u6ce8\u91ca\n\n### \u6df7\u5408\u8fd0\u7b97\u52a0\u62ec\u53f7\uff01\n\n### \u6df7\u5408\u8fd0\u7b97\u52a0\u62ec\u53f7\uff01\uff01\n\n### \u6df7\u5408\u8fd0\u7b97\u52a0\u62ec\u53f7\uff01\uff01\uff01\n\n\u88ab\u5361\u4e86\u4e00\u665a\u4e0a\n\n~~\u5f88\u559c\u6b22\u6211\u5199\u7684\u4ee3\u7801~~\uff08\u9003\uff09\n\n\u4e0a\u4ee3\u7801\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring> \nusing namespace std;\nint n,m,dp[110][1<<10][1<<10],tot,zy[1<<10],a[110],num[1<<10],ans;\nchar ch;\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            cin>>ch;\n            if(ch=='H')a[i]+=1<<(j-1);//\u628a\u6bcf\u4e00\u884c\u8f6c\u6210\u4e8c\u8fdb\u5236\u72b6\u6001 \n        }\n    }\n    int nn=(1<<m)-1;//\u72b6\u6001\u7684\u6700\u5927\u503c\uff0c\u52a0\u62ec\u53f7\uff01\uff01\uff01\u518d\u8fd9\u5361\u4e86\u4e00\u665a\u4e0a \n    for(int i=0;i<=nn;i++)\n    {\n        if(!(i&(i<<1))&&!(i&i<<2))//\u72b6\u6001\u5de6\u53f3\u4e24\u683c\u4e92\u4e0d\u5f71\u54cd \n        {\n            tot++;\n            zy[tot]=i;//\u5b58\u72b6\u6001 \n            int pg=i;\n            while(pg>0)\n            {\n                if(pg&1)num[tot]++;//\u5b58\u72b6\u6001\u4e2d\u70ae\u5175\u7684\u6570\u91cf \n                pg>>=1;\n            }\n        }\n    }\n    //\u9884\u5904\u7406\u7b2c\u4e8c\u884c \n    for(int i=1;i<=tot;i++)\n    {\n        for(int j=1;j<=tot;j++)\n        {\n            if(!(zy[i]&zy[j])&&!(zy[i]&a[2])&&!(zy[j]&a[1]))//\u4e92\u4e0d\u5f71\u54cd\u4e14\u4e0d\u5728\u5c71\u4e0a \n            {\n                dp[2][i][j]=num[j]+num[i];\n            }\n        }\n    }\n    for(int i=3;i<=n;i++)//\u679a\u4e3e\u884c \n    {\n        for(int j=1;j<=tot;j++)//\u672c\u884c \u72b6\u6001 \n        {\n            if(!(zy[j]&a[i]))//\u4e0d\u5728\u5c71\u4e0a \n            {\n                for(int k=1;k<=tot;k++)//\u4e0a\u4e00\u884c\u72b6\u6001 \n                {\n                    if(!(zy[k]&a[i-1])&&!(zy[k]&zy[j]))//\u4e0d\u5728\u5c71\u4e0a\uff0c\u4e0d\u4e0e\u672c\u884c\u51b2\u7a81 \n                    {\n                        for(int p=1;p<=tot;p++)//\u4e0a\u4e24\u884c\u72b6\u6001 \n                        {\n                            if(!(zy[p]&a[i-2])&&!(zy[p]&zy[k])&&!(zy[p]&zy[j]))//\u4e0d\u5728\u5c71\u4e0a\uff0c\u4e0d\u51b2\u7a81 \n                            {\n                                dp[i][j][k]=max(dp[i][j][k],dp[i-1][k][p]+num[j]);//\u8f6c\u79fb\u65b9\u7a0b \n                                ans=max(ans,dp[i][j][k]);//\u8f6c\u79fb\u7b54\u6848 \n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1549199454,
        "uid": 86830,
        "name": "\u4e2d\u4e8c\u75c5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7684\u72b6\u538b$dp$\u3002\u57fa\u672c\u4e0a\u662f\u6a21\u677f\u9898\u3002\n\n\u8003\u8651\u5230\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4ed6\u7684\u5de6\u53f3\u4e24\u683c\u4e4b\u5185\u65e0\u6cd5\u653e\u68cb\u5b50\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u7528\u4e00\u904d$dfs$\u9884\u5904\u7406\u51fa\u6765\u521d\u59cb\u72b6\u6001\u3002\n\n\u7136\u540e\u6211\u4eec\u6765\u8bbe\u8ba1\u65b9\u7a0b\uff0c\u8003\u8651\u5230\u5f53\u524d\u72b6\u6001\u7684\u4e0a\u4e0a\u5c42\u4f1a\u5f71\u54cd\u5230\u5f53\u524d\u72b6\u6001\u7684\u6446\u653e\u65b9\u5f0f\uff0c\u6211\u4eec\u4e0d\u59a8\u8fd9\u6837\u8bbe\u8ba1\u8f6c\u79fb:\n\n`f[i][j][k]`\u4ee3\u8868\u5f53\u524d\u662f\u7b2c$i$\u884c\uff0c\u72b6\u6001\u4e3a$j$\uff0c\u72b6\u6001$j$\u7531\u72b6\u6001$k$\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u8be5\u65b9\u7a0b\u53ef\u4ee5\u8f6c\u79fb\u7684\u6761\u4ef6\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e09\u884c\u7684\u72b6\u6001\u4e92\u4e0d\u51b2\u7a81\u3002\n\n\u6211\u4eec\u8bbe\u5f53\u524d\u72b6\u6001\u662f`cnt`\uff0c\u90a3\u4e48\u5224\u65ad\u6761\u4ef6\u5c31\u662f:\n\n\u5f53\u4e14\u4ec5\u5f53`!(cnt & j) && !(cnt & k) && !(j & k)`\u65f6\u53ef\u4ee5\u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u5c31\u5f88\u7b80\u5355\u4e86:\n\n`f[i][cnt][j] = max{f[i - 1][j][k] + sum[cnt]}`\n\n\u6ce8\u610f\u5361\u4e00\u4e0b\u7a7a\u95f4\uff0c\u6211\u628a`M = 15` $MLE$\u4e24\u4e2a\u70b9 , `M = 10`\u5c31$AC$\u4e86\u3002\n\n$Code:$\n```cpp\n//f[i][j][k] \u524di\u884c,\u5f53\u524d\u884c\u72b6\u6001\u4e3aj,\u4ece\u4e0a\u4e00\u884c\u7684\u72b6\u6001k\u8f6c\u79fb\u6765\u7684\u7684\u6700\u5927\u58eb\u5175\u6570\u91cf\u3002 \n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 101;\nconst int M = 10;\n\n\nint line[M];\nint f[N][(1 << M) + 1][(1 << M) + 1];\nint sr[(1 << M) + 1] , cnt , sum[(1 << M) + 1];\nint n , m;\nchar qwq[N];\n\n\nvoid dfs(int last , int tot , int num) {\n\tif(tot >= m) {\n\t\tsum[++ cnt] = num;\n\t\tsr[cnt] = last;\n\t\treturn;\n\t}\n\tdfs(last , tot + 1 , num);\n\tdfs(last | (1 << tot), tot + 3 , num + 1);\n}\n\n\nint main () {\n\tscanf(\"%d %d\" , &n , &m);\n\tdfs(0 , 0 , 0);\n\tfor(int i = 1 ; i <= n ; ++ i){\n\t\tscanf(\"%s\" , qwq);\n\t\tfor(int k = 0 ; k < strlen(qwq) ; ++ k)\n\t\t\tif(qwq[k] == 'H') line[i] |= (1 << k);\n\t}\n\n\n\tfor(int i = 1 ; i <= cnt ; ++ i) {\n\t\tif(sr[i] & line[1]) continue;\n\t\tfor(int j = 1 ; j <= cnt ; ++ j) \n\t\t\tf[1][sr[i]][sr[j]] = sum[i];\n\t}\n\t\n\tfor(int i = 2 ; i <= n ; ++ i) {\n\t\tfor(int j = 1 ; j <= cnt ; ++ j) {\n\t\t\tfor(int k = 1 ; k <= cnt ; ++ k) {\n\t\t\t\tfor(int l = 1 ; l <= cnt ; ++l ) {\n\t\t\t\t\tif((sr[j] & sr[k]) || (sr[j] & sr[l]) || (sr[k] & sr[l])) continue;\n\t\t\t\t\tif((sr[j] & line[i]) || (sr[k] & line[i - 1]) || (sr[l] & line[i - 2])) continue;\n\t\t\t\t\tf[i][sr[j]][sr[k]] = max(f[i][sr[j]][sr[k]] , f[i - 1][sr[k]][sr[l]] + sum[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0;\n\tfor(int i = 1 ; i <= cnt ; ++ i) \n\t\tfor(int j = 1 ; j <= cnt ; ++ j)\n\t\tans = max(ans , f[n][sr[i]][sr[j]]);\n\tprintf(\"%d\\n\" , ans);\n\treturn 0;\n} \n```",
        "postTime": 1572258989,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "**~~\u4e8c\u8425\u957f\uff0c\u4f60\u4ed6\u5a18\u7684\u610f\u5927\u5229\u70ae\u5462~~**\n\n\u9996\u5148\uff0c\u770bM\u7684\u8303\u56f4\uff0c0<M<=10\n\n\u5373\u4f7f\u662f\u8fd9\u4e48\u5c0f\u7684\u8303\u56f4\uff0cdfs\u66b4\u529b\u4e5f\u4f1a\u8d85\u65f6\n\n\u6240\u4ee5\u6765\u5f15\u5165\u4e00\u4e2a\u65b0\u73a9\u610f\uff0c\u72b6\u538bdp\n\n\u6240\u8c13\u72b6\u538b\uff0c\u5c31\u662f\u628a\u72b6\u6001\u538b\u7f29\u6210\u4e00\u4e2a\u6570\uff08\u4e00\u822c\u4e3a\u4e8c\u8fdb\u5236\u6570\uff0c\u65b9\u4fbf\u4f4d\u8fd0\u7b97\uff09\u8fdb\u884c\u5904\u7406\uff0c\u907f\u514d\u6570\u7ec4\u5f00\u591a\u7ef4\u8d85\u5185\u5b58\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u6211\u4eec\u5b9a\u4e49\uff0c0\u4e3a\u6ca1\u653e\u70ae\u5175\uff0c1\u4e3a\u653e\u4e86\u70ae\u5175\n\n\u5982\u4e0b\u6240\u793a\uff0c\n\n**PPHHPHP**\n\n\u5982\u679c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u653e\uff0c\u7b2c\u4e94\u4e2a\u653e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u72b6\u6001\u5c31\u662f1000100\uff08\u5341\u8fdb\u5236\u4e3a68\uff09\n\n\u8fd9\u6837\u6bcf\u4e2a\u72b6\u6001\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u5341\u8fdb\u5236\u6570\u4e0e\u4e4b\u5bf9\u5e94\n\n\u5148\u628a\u6bcf\u884c\u7684\u5408\u6cd5\u72b6\u6001\u6c42\u51fa\u5e76\u5b58\u8d77\u6765\uff08\u4e0d\u8003\u8651\u5730\u5f62\u548c\u7eb5\u5217\uff09\uff0c\u7136\u540e\u6bcf\u884c\u679a\u4e3e\u72b6\u6001\n\n\u5b9a\u4e49dp[i][j][k]\u4e3a\u7b2ci\u884c\u672c\u884c\u72b6\u6001\u4e3aj\uff0c\u4e0a\u4e00\u884c\u72b6\u6001\u4e3ak\u5408\u6cd5\u65f6\u7684\u603b\u70ae\u5175\u6570\n\n\u679a\u4e3ej\uff0ck\u4ee5\u53cai-2\u884c\u7684\u72b6\u6001x\uff08\u56e0\u4e3ai\u884c\u72b6\u6001\u4f1a\u5f71\u54cdi-1\u548ci-2\uff09\n\n\u5982\u679c\u5408\u6cd5\uff0c\u65b9\u7a0b\u4e3a\uff1a\n\n**dp[i][j][k]=max(dp[i][j][k],dp[i-1][k][x]+num[j]);**\n\n\uff08num[i]\u4e3a\u72b6\u6001i\u7684\u603b\u70ae\u5175\u6570\uff09\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>//\u8fd9\u91cc\u7684\u4f4d\u8fd0\u7b97\u5f88\u5de7\u5999\uff0c\u5e94\u719f\u7ec3\u638c\u63e1\n#include<cstdio>\nusing namespace std;\nchar s[110][110];\nint n,m,dp[110][65][65],st[2010],cnt,num[2010];\nint map[110];\nbool judge1(int x)//\u5224\u65ad\u6bcf\u884c\u72b6\u6001\u662f\u5426\u5408\u6cd5\uff0c\u662f\u8fd4\u56de0\n{\n\treturn (x&(x>>1))||(x&(x>>2));\n}\nbool judge2(int i,int x)//\u5224\u65adx\u53f7\u72b6\u6001\u662f\u5426\u7b26\u5408\u5730\u5f62\u6761\u4ef6\uff0c\u662f\u8fd4\u56de0\n{\n\treturn map[i]&st[x];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"\\n\");//\u907f\u514d\u628a\u7a7a\u884c\u8bfb\u5165s\u6570\u7ec4\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\ts[i][j]=getchar();\n\t\t\tif(s[i][j]=='H')\n\t\t\tmap[i]|=1<<(j-1);//\u5b58\u50a8\u5730\u56fe\u72b6\u6001\uff0c1\u8868\u793a\u4e0d\u80fd\u653e\n\t\t}\n\t}\n\tfor(int i=0;i<(1<<m);i++)\n\tif(!judge1(i))\n\tst[++cnt]=i;//\u5b58\u50a8\u5408\u6cd5\u72b6\u6001\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tint p=st[i];\n\t\twhile(p>0)\n\t\t{\n\t\t\tif(p&1)\n\t\t\tnum[i]++;\n\t\t\tp>>=1;\n\t\t}\n\t}//\u8ba1\u7b97num[i]\n\tfor(int i=1;i<=cnt;i++)\n\tif(!judge2(1,i))\n\tdp[1][i][0]=num[i];\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tfor(int j=1;j<=cnt;j++)\n\t\tif(!judge2(2,i)&&!(st[j]&st[i]))\n\t\tdp[2][i][j]=max(dp[2][i][j],dp[1][j][0]+num[i]);\n\t}\n\tfor(int i=3;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=cnt;j++)//i\u884c\u72b6\u6001\n\t\tif(!judge2(i,j))\n\t\t{\n\t\t\tfor(int k=1;k<=cnt;k++)//i-1\u884c\u72b6\u6001\n\t\t\tif(!judge2(i-1,k)&&!(st[j]&st[k]))//\u6ce8\u610f\uff0cj\uff0ck\u4e24\u72b6\u6001\u4e0d\u80fd\u51b2\u7a81\uff0c\u4e0b\u540c\n\t\t\t{\n\t\t\t\tfor(int l=1;l<=cnt;l++)//i-2\u884c\u72b6\u6001\n\t\t\t\tif(!judge2(i-2,l)&&!(st[j]&st[l])&&!(st[l]&st[k]))\n\t\t\t\tdp[i][j][k]=max(dp[i][j][k],dp[i-1][k][l]+num[j]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=cnt;i++)\n\tif(!judge2(n,i))\n\t{\n\t\tfor(int j=1;j<=cnt;j++)\n\t\tif(!judge2(n-1,j)&&!(st[i]&st[j]))\n\t\tans=max(ans,dp[n][i][j]);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1561279470,
        "uid": 103029,
        "name": "James_Brady",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u5199\u4e2a\u5947\u8469\u7684**\u8bb0\u5fc6\u5316\u641c\u7d22**\u505a\u6cd5\n\n\u4f17\u6240\u5468\u77e5 \u8be5\u9898\u5982\u679c\u5c06\u8fde\u7eed\u4e24\u884c\u538b\u5165\u53d8\u91cf\u4f1a\u7206\u6389\u5185\u5b58\u2026\u2026\u5148\u667e\u51fa$\\red{20}$\u5206\u7684\u8bb0\u641c\u2026\u2026\n\n```c++\n// int dp[100][10][1024][1024];\n// bool v[100][10][1024][1024];\n\nint solve(int x, int y, int a, int b) {\n    if (x == n) return 0;\n    if (y >= m) return solve(x + 1, 0, a, b);\n    if (b & (1 << y)) return solve(x, y + 1, a | (1 << y), b & ~(1 << y));\n    if (a & (1 << y)) return solve(x, y + 1, a & ~(1 << y), b);\n    if (g[x][y] == 'H') return solve(x, y + 1, a, b);\n    return max(solve(x, y + 1, a, b), solve(x, y + 2, a, b | (1 << y)) + 1);\n}\n```\n\n\u4f46\u662f\u6211\u53c8\u60f3\u6b7b\u5b88\u8bb0\u641c\n\n\u8fd9\u53ef\u600e\u4e48\u529e\u5462 ~~\u627ecz\u6539\u6570\u636e~~\n\n\u7814\u7a76\u53d1\u73b0 \u6bcf\u4e00\u884c\u6240\u538b\u7684\u72b6\u6001\u548c\u4e0a\u4e00\u884c\u538b\u7684\u72b6\u6001\u5728\u540c\u4e00\u5217\u80af\u5b9a\u6ca1\u6709\u91cd\u590d\u7684 \u6bd4\u5982\u6211\u7528`a`\u538b\u4e0a\u4e00\u884c\u7684\u72b6\u6001 `b`\u538b\u8fd9\u4e00\u884c\u7684\u72b6\u6001 \u90a3\u4e48\u80af\u5b9a\u53ef\u4ee5\u5f97\u51fa`(a & b) == 0`\n\n\u6240\u4ee5\u8bf4 \u5176\u5b9e\u5c06\u8fde\u7eed\u4e24\u884c\u538b\u5165\u53d8\u91cf\u662f\u975e\u5e38\u6d6a\u8d39\u7684 \u56e0\u4e3a\u6709\u5f88\u591a\u7a7a\u7684\u4f4d\n\n\u7a76\u7adf\u6709\u591a\u5c11\u7a7a\u4f4d\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u4e2a\u4f8b\u5b50\n\n```\n1001001001\n0100100100\n```\n\n\u4ece\u8fd9\u4e2a\u4f8b\u5b50\u5df2\u7ecf\u5c06\u4e24\u884c\u5168\u90e8\u586b\u6ee1 \u4e0d\u53ef\u80fd\u653e\u66f4\u591a\u68cb\u5b50\u4e86 \u4f46\u662f\u2026\u2026\u6211\u4eec\u53d1\u73b0\u603b\u5171\u53ea\u67097\u4e2a\u68cb\u5b50\u2026\u2026\n\n\u65e2\u7136\u4e24\u884c\u662f\u6709\u5f88\u591a\u7a7a\u4f4d\u5e76\u4e14\u662f\u4e92\u65a5\u7684 \u90a3\u4e48\u80fd\u4e0d\u80fd\u538b\u5230\u540c\u4e00\u884c\u5462\u2026\u2026\n\n```\n1101101101\n```\n\n\u4f46\u662f\u8fd9\u6837\u597d\u50cf\u4e0d\u80fd\u77e5\u9053\u4e0b\u4e00\u884c\u679a\u4e3e\u5b8c\u4e86\u7a76\u7adf\u8981\u5220\u54ea\u51e0\u4e2a\u4f4d\u2026\u2026\n\n\u4ed4\u7ec6\u60f3\u60f3\u2026\u2026\u65e2\u7136\u8fd9\u91cc\u53ea\u67097\u4f4d`1` \u90a3\u4e48\u80fd\u4e0d\u80fd\u5c06\u8fd97\u4e2a`1`\u5728\u54ea\u4e00\u884c\u4e8c\u8fdb\u5236\u6807\u8bb0\u51fa\u6765\u7136\u540e\u7528\u7684\u65f6\u5019\u5c55\u5f00\u5462\u2026\u2026\uff1f\n\n```c++\nint decode(int a, int b) {\n    int ans = 0;\n    for (int i = 0, j = 0; i < m; i++) {\n        if (a & (1 << i)) {\n            if (b & (1 << j)) ans |= 1 << i;\n            j++;\n        }\n    }\n    return ans;\n}\n\nint encode(int a, int b) {\n    int ans = 0;\n    for (int i = 0, j = 0; i < m; i++) {\n        if (a & (1 << i)) {\n            if (b & (1 << i)) ans |= 1 << j;\n            j++;\n        }\n    }\n    return ans;\n}\n```\n\n\u597d\u50cf\u662f\u53ef\u4ee5 \u800c\u4e14\u72b6\u6001\u6570\u6210\u529f\u6bd4\u4ee5\u524d\u5c11\u4e86 \u4ece$\\mathcal{O}(2^{m^2}n)$\u964d\u4f4e\u5230\u4e86$\\mathcal{O}(2^{7m}n)$\u2026\u2026\u8c8c\u4f3c\u5c31\u53ef\u4ee5$\\green{AC}$\u4e86\uff1f\n\n\u6652\u51fa\u4ee3\u7801\uff1a\n\n```c++\nint dp[100][1024][256];\nbool v[100][1024][256];\n\nint solve(int x, int a, int b) {\n    if (x == n) return 0;\n    if (v[x][a][b]) return dp[x][a][b];\n    v[x][a][b] = true;\n    int ra = decode(a, b), rb = a ^ ra;\n    int ans = 0;\n    for (int y = 0; y < (1 << m); y++) {\n        if ((y & a) | (y & (y << 1)) | (y & (y << 2)) | (y & g[x])) continue;\n        checkmax(ans, solve(x + 1, rb | y, encode(rb | y, rb)) + count(y));\n    }\n    return dp[x][a][b] = ans;\n}\n```\n\n> \u5173\u4e8e\u7ec6\u8282\n>\n> 1. \u8fd9\u91cc\u662f\u6574\u884c\u679a\u4e3e\u6240\u4ee5\u7528\u4e8c\u8fdb\u5236\u5b58\u56fe\u76f4\u63a5\u6216\u8d77\u6765\u6bd4\u8f83\u7701\u4e8b\u513f\n> 2. `count`\u51fd\u6570\u7528\u6765\u6570\u4e8c\u8fdb\u5236\u4f4d\u91cc\u9762`1`\u7684\u6570\u91cf\n> 3. \u4e00\u5b9a\u8981\u628a`y`\u4ece$0$\u5230$2^m$\u679a\u4e3e \u4e0d\u8981\u8ba4\u4e3a\u679a\u4e3e\u7a7a\u4f4d\u4f1a\u66f4\u5feb \u672c\u4eba\u6700\u5f00\u59cb\u5c31\u662f\u8fd9\u4e48\u5199\u7684 \u4f1aTLE\u4e00\u4e2a\u70b9 \u5e73\u5747\u4f1a\u6162\u4e00\u500d\n\n> \u5176\u4ed6\uff1a\n>\n> - \u63a8\u5e7f\u4e0b\u672c\u4ebaGayhub\uff1a[GoldIMax](https://github.com/goldimax)\n> - \u672c\u4eba[\u535a\u5ba2](https://goldimax.github.io)\n\n\n",
        "postTime": 1535268563,
        "uid": 29759,
        "name": "goldimax",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n**\u72b6\u6001\u538b\u7f29**\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u72b6\u6001\u538b\u7f29DP\uff0c\u5177\u4f53\u4e3a\u4ec0\u4e48\u662f\u72b6\u538bDP\uff0c\u8bf7\u770b$M \\le 10$\u3002\n\n\u5bf9\u4e8e\u9898\u76ee\u4e2d\u7684\u5c71\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u505a\u5f53\u524d\u70b9\u4e0d\u80fd\u8d70\uff0c\u5728\u8bfb\u5165\u7684\u65f6\u5019\u8bb0\u5f55\u5373\u53ef\u3002\n\n\u4e4b\u540e\u6211\u4eec\u8981\u660e\u786e\u7684\u4e00\u4e2a\u95ee\u9898\uff0cDP\u72b6\u6001\uff1a\n\n> \u6211\u4eec\u7528$f[i][j][k]$\u6765\u8868\u793a\u5f53\u524d\u679a\u4e3e\u5230\u7b2c$i$\u884c\uff0c\u5f53\u524d\u884c\u72b6\u6001\u4e3a$j$\uff0c\u4e0a\u4e00\u884c\u72b6\u6001\u4e3a$k$\u65f6\u5019\u7684\u7b54\u6848\u3002\n\n\u90a3\u4e48\u7531\u4e8e\u4e00\u4e2a\u70ae\u5175\u53ef\u4ee5\u5f71\u54cd\u5230\u4ee5\u81ea\u5df1\u4e3a\u4e2d\u5fc3\u7684\u8ddd\u79bb\u4e3a2\u7684\u5341\u5b57\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u8f6c\u79fb\u65b9\u7a0b\u5c31\u4f1a\u53d7\u5230\u524d\u4e24\u884c\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u7528\u524d\u4e24\u884c\u7684\u72b6\u6001\u6765\u8868\u793a\u5f53\u524d\u884c\uff0c\u90a3\u4e48\u5728\u6700\u5f00\u59cb\u5c31\u8981\u5355\u72ec\u5904\u7406\u51fa\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c\u3002\n\n\u5bf9\u4e8e\u5224\u65ad\u4e24\u884c\u662f\u5426\u51b2\u7a81\uff0c\u6211\u4eec\u9009\u62e9\u4e8c\u8fdb\u5236$\\&$\u8fd0\u7b97\uff0c\u5982\u679c\u5bf9\u4e8e\u4e24\u884c\u7684\u72b6\u6001$K_1,K_2$\u6765\u8bf4\uff0c\u5982\u679c$(K_1 \\& K_2) == 0$\u90a3\u4e48\u5c31\u53ef\u4ee5\u8bf4\u660e\u8fd9\u4e24\u884c\u6ca1\u6709\u51b2\u7a81\uff08\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\u6ca1\u6709\u91cd\u5408\u7684\uff09\uff0c\u53ef\u4ee5\u64cd\u4f5c\u3002\n\n\n\n## AC\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 110;\n\nconst int M = 22;\n\nconst int NM = N * M / 2;\n\nint n, m, mp[N][M], f[NM], cnt, num[NM];\n\nint dp[N][NM][NM], now[NM];\nint getnum(int x)\n{\n    //\u7edf\u8ba1\u5f53\u524d\u72b6\u6001\u4e3ax\u7684\u65f6\u5019\u6709\u591a\u5c11\u4e2a\u70ae\u5175\uff08\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff09\n    int res = 0;\n    while (x)\n    {\n        res ++ ;\n        x -= x & -x;\n    }\n    return res;\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tchar ch[20];\n\tfor (int i = 1; i <= n; i ++ )\n\t{\n        //\u6309\u7167\u5b57\u7b26\u4e32\u8bfb\u5165\n        scanf(\"%s\", ch + 1);\n\t\tfor (int j = 1; j <= m; j ++ )\n\t\t{\n\t\t\t//scanf(\"%c\", &ch);\n\t\t\tif (ch[j] == 'H')\n                mp[i][j] = 1;\n\t\t\t//printf(\"%c\", ch);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i ++ )\n\t\tfor (int j = 1; j <= m; j ++ )\n\t\t\tf[i] = (f[i] << 1) + mp[i][j];\n    //\u76f4\u63a5\u5904\u7406\u6bcf\u4e00\u4f4d\uff0c\u6709\u5c71\u5730\u7684\u4f4d\u7f6e\u4e3a1\n\tnow[ ++ cnt] = 0;\n    //\u51cf\u5c11\u6574\u4f53\u7684\u65f6\u95f4\u7a7a\u95f4\uff0c\u6211\u4eec\u53ea\u5b58\u6709\u7528\u7684\u4f4d\u7f6e\n    for (int i = 1; i < (1 << m); i ++ )\n    {\n        if (i & (i << 1)) continue ;\n        if (i & (i << 2)) continue ;\n        if (i & (i >> 1)) continue ;\n        if (i & (i >> 2)) continue ;\n        //\u7531\u4e8e\u6700\u4e24\u8fb9\u7684\u56db\u4e2a\u662f\u4e0d\u53ef\u4ee5\u9009\u7684\uff0c\u76f4\u63a5\u8df3\u8fc7\n        now[ ++ cnt] = i;\n        num[cnt] = getnum(i);\n    }\n    for (int i = 1; i <= cnt; i ++ )\n    {\n        //\u5bf9\u4e8e\u7b2c\u4e00\u884c\u8fdb\u884c\u5355\u72ec\u5904\u7406\n        if ((now[i] & f[1]) == 0)\n        {\n            dp[1][i][0] = num[i];\n        }\n    }\n    for (int i = 1; i <= cnt; i ++ )\n    {\n        //\u5bf9\u4e8e\u7b2c\u4e8c\u884c\u8fdb\u884c\u5355\u72ec\u5904\u7406\n        if ((now[i] & f[2]) == 0)\n        {\n            for (int j = 1; j <= cnt; j ++ )\n            {\n                if ((now[i] & now[j]) == 0 && (now[j] & f[1]) == 0)\n                {\n                    dp[2][i][j] = num[i] + num[j];\n                }\n            }\n        }\n    }\n    for (int i = 3; i <= n; i ++ )\n    {\n        //\u4e00\u4e2a\u4ee4\u4eba\u5934\u75bc\u7684\u5faa\u73af+\u5224\u65ad\u5d4c\u5957\n        for (int j = 1; j <= cnt; j ++ )\n        {\n            if ((now[j] & f[i]) == 0)\n            {\n                for (int k1 = 1; k1 <= cnt; k1 ++ )\n                {\n                    if ((now[j] & now[k1]) == 0 && (now[k1] & f[i - 1]) == 0)\n                    {\n                        for (int k2 = 1; k2 <= cnt; k2 ++ )\n                        {\n                            if ((now[j] & now[k2]) == 0 && (now[k2] & f[i - 2]) == 0 && (now[k2] & now[k1]) == 0)\n                            {\n                                dp[i][j][k1] = max(dp[i][j][k1], dp[i - 1][k1][k2] + num[j]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 1; i <= cnt; i ++ )\n    {\n        for (int j = 1; j <= cnt; j ++ )\n        {\n            ans = max(ans, dp[n][i][j]);\n            //\u6700\u7ec8\u7edf\u8ba1ans\u7684\u6700\u5927\u503c\u5373\u53ef\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n\n}\n```",
        "postTime": 1567385669,
        "uid": 144702,
        "name": "littleseven",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nint cnt,m,n;\nint dp[100][64][64],num[64],state[64],bitmap[100];\nvoid solve(){\n    int ans=0,i,j,k,p;\n    memset(dp,0,sizeof(dp));\n    for(i=0;i<n;i++){\n        for(j=0;j<cnt;j++){\n            if(bitmap[i]&state[j])continue;//\u5c71\u5730\u65e0\u70ae\u5175 \n            if(i==0) dp[i][j][0]=num[j]; \n            else if(i==1)\n            {\n                for(k=0;k<cnt;k++)\n                {\n                    if(bitmap[i-1]&state[k]) continue;//\u5224\u65ad\u7b2ci-1\u884c\u7684k\u72b6\u6001\u662f\u5426\u548c\u5c71\u5730\u51b2\u7a81\n                    if(state[j]&state[k]) continue;//i-1\u884cj,k\u72b6\u6001\u662f\u5426\u517c\u5bb9\n                    if(dp[i][j][k]<dp[i-1][k][0]+num[j])\n                        dp[i][j][k]=dp[i-1][k][0]+num[j];\n                }\n            }\n            else{\n                for(k=0;k<cnt;k++){//i-1\u884c\u72b6\u6001\u679a\u4e3e                         \n                    if(bitmap[i-1]&state[k]) continue;\n                    if(state[j]&state[k]) continue;//\u540c\u4e0a\n                    for(p=0;p<cnt;p++)//i-2\u884c\u72b6\u6001\u679a\u4e3e \n                    {\n                        if(bitmap[i-2]&state[p]) continue; //i-2\u884c\u548c\u72b6\u6001p \n                        if(state[k]&state[p] || state[j]&state[p]) continue;//\u4e09\u884c\u72b6\u6001\u662f\u5426\u517c\u5bb9 \n                        if(dp[i][j][k]<dp[i-1][k][p]+num[j])\n                            dp[i][j][k]=dp[i-1][k][p]+num[j];\n                    }\n                }\n            }\n        }\n    } \n    for(j=0;j<cnt;j++)\n        for(k=0;k<cnt;k++)\n            if(dp[n-1][j][k]>ans)\n                ans=dp[n-1][j][k];//\u53d6\u6700\u5927\u503c \n    printf(\"%d\\n\",ans);\n}\nint main(){\n    char s[12];\n    int i,j;\n    scanf(\"%d%d\",&n,&m);\n    memset(bitmap,0,sizeof(bitmap));\n    for(i=0;i<n;i++){\n        scanf(\"%s\",s);\n        for(j=0;j<m;j++)\n            if(s[j]=='H')bitmap[i]+=(1<<(m-1-j));\n    }\n    int tmp;\n    cnt=0;\n    for(int i=0;i<(1<<m);i++){//2^m-1 \n        tmp=i;\n        if( ((tmp<<1)&i) | ((tmp<<2)&i) )continue;//\u70ae\u5175\u4e0d\u80fd\u653b\u51fb\u5f7c\u6b64 \n        state[cnt]=i;//\u8bb0\u5f55\u72b6\u6001(\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\uff09 \n        num[cnt]=tmp&1;\n        while(tmp=(tmp>>1))\n            num[cnt]+=tmp&1;\n        cnt++;//num[]\u8bb0\u5f55\u6b64\u5408\u6cd5\u72b6\u6001'1'\u7684\u6570\u91cf \n    }\n    solve();\n     return 0;\n}\n```",
        "postTime": 1515656436,
        "uid": 55549,
        "name": "Cris",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u672c\u9898\u4e5f\u7b97\u72b6\u538bDP\u7684\u57fa\u7840\u9898\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u8003\u8651\u5f53\u524d\u884c\u548c\u524d\u4e24\u884c\u7684\u5173\u7cfb\n\n\u5148\u5bf9\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c\u8fdb\u884c\u9884\u5904\u7406\uff0c\u8fd9\u91cc\u679a\u4e3e\u5c31\u53ef\u4ee5\u3002\n\n\u7136\u540e\u6211\u4eec\u770b\u56de\u6570\u636e\u8303\u56f4\uff0cm<=10\uff0c\u5176\u5b9e\u521a\u770b\u5230\u8fd9\u91cc\u65f6\u6211\u6709\u70b9\u8499\u4e86\uff0c\u56e0\u4e3a\u8981\u679a\u4e3e\u5f53\u524d\u884c\u548c\u4e0a\u4e00\u884c\u8fd8\u6709\u4e0a\u4e0a\u884c\u7684\u6240\u6709\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u5df2\u7ecf1024\u7684\u4e09\u6b21\u65b9\u4e86\uff0c\u80af\u5b9a\u8d85\u65f6\u3002\u4f46\u6211\u4eec\u5982\u679c\u5728\u9884\u5904\u7406\u65f6\u6c42\u51fa\u4e00\u884c\u91cc\u80fd\u5b58\u5728\u7684\u6240\u6709\u60c5\u51b5\uff0c\u5c31\u4f1a\u53d1\u73b0\u5373\u4f7f\u662fm=10\u7684\u65f6\u5019\uff0c\u4e5f\u53ea\u670960\u79cd\u60c5\u51b5\uff0c60\u7684\u4e09\u6b21\u65b9\u5c31\u6ca1\u95ee\u9898\u4e86\u3002\n\nDP\u65b9\u7a0b\u4e5f\u5f88\u7b80\u5355\u3002\u6211\u4eec\u7528f[i][j][k]\u8868\u793a\u7b2ci\u884c\u60c5\u51b5\u4e3ak\uff0c\u4e0a\u4e00\u884c\u60c5\u51b5\u4e3aj\u7684\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u5c31\u5f88\u76f4\u767d\u4e86f[i][j][k]=max(f[i][j][k],f[i-1][l][j]+get\\_num(k))(l\u4e3a\u4e0a\u4e0a\u884c\u7684\u60c5\u51b5)\n\n\u5c0f\u7ec6\u8282\uff1a\u5728\u8bfb\u53d6\u65f6\u7528bann\u6570\u7ec4\u5b58\u5c71\u5730\u7684\u60c5\u51b5\uff0c\u5224\u65ad\u67d0\u60c5\u51b5\u662f\u5426\u5408\u6cd5\u53ea\u9700\u770b(\u60c5\u51b5&bann[\u5f53\u524d\u884c])\u662f\u5426\u4e3a0.\n\nPS\uff1a\u5173\u4e8ebann\u7684\u7528\u6cd5\u53ef\u4ee5\u53c2\u8003P1879 \u7389\u7c73\u7530\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n    #include<cstdio>\n    #include<algorithm>\n    #include<cstring>\n    using namespace std;\n    int n,m,casee,lcase;  //casee\u4e3a\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5 lcase\u4e3a\u7b5b\u9009\u540e\u7684\u60c5\u51b5\n    int bann[101],f[101][1101][1101],cann[101];\n    int get_num(int);\n    void workk();\n    int main()\n    {\n        int i,j,k,l,summ,maxx=0;\n        char a;\n        scanf(\"%d%d\",&n,&m);\n        casee=1<<m;\n        for(i=1;i<=n;i++)\n        {\n            summ=0;\n            for(j=m-1;j>=0;j--)  //\u987a\u4fbf\u5c06bann\u6570\u7ec4\u5904\u7406\u6389\n            {\n                scanf(\"\\n%c\",&a);\n                if(a=='H') summ+=(1<<j); \n            }\n            bann[i]=summ;\n        }\n        workk();  //\u9884\u5904\u7406\n        for(i=3;i<=n;i++)  //\u5f00\u59cbDP \u4e2d\u95f4\u7684if\u6761\u4ef6\u6bd4\u8f83\u591a\uff0c\u6709\u4e00\u4e9b\u662f\u53ef\u4ee5\u4e0d\u52a0\u7684\uff0c\u4f46\u662f\u52a0\u4e0a\u80fd\u7f29\u77ed\u65f6\u95f4\n            for(j=1;j<=lcase;j++)\n                if((cann[j]&bann[i])==0)\n                    for(k=1;k<=lcase;k++)\n                        if((cann[k]&bann[i-1])==0 && (cann[j]&cann[k])==0)\n                            for(l=1;l<=lcase;l++)\n                                if((cann[l]&bann[i-2])==0 && (cann[k]&cann[l])==0 && (cann[j]&cann[l])==0)\n                                    f[i][cann[k]][cann[j]]=max(f[i][cann[k]][cann[j]],f[i-1][cann[l]][cann[k]]+get_num(cann[j]));\n        for(i=1;i<=lcase;i++)  //\u7edf\u8ba1\u6700\u5927\u503c\n            for(j=1;j<=lcase;j++)\n                if(f[n][cann[i]][cann[j]]>maxx) maxx=f[n][cann[i]][cann[j]];\n        printf(\"%d\\n\",maxx);\n        return 0;\n    }\n    int get_num(int x)  //\u7edf\u8ba1\u60c5\u51b5\u4e2d1\u7684\u4e2a\u6570\n    {\n        int anss=0;\n        while(x!=0)\n        {\n            if((x&1)!=0) anss++;\n            x>>=1;\n        }\n        return anss;\n    }\n    void workk()  //\u9884\u5904\u7406\n    {\n        int i,j,k,pd;\n        for(i=0;i<casee;i++)  //\u9884\u5904\u7406\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8981\u4ed4\u7ec6\u8003\u8651\u6240\u6709\u60c5(\u6211\u5c31\u5fd8\u4e86\u4ec0\u4e48\u90fd\u4e0d\u653e\u7684\u60c5\u51b5\u4e86)\n            if((i&(i<<2))==0 && (i&(i<<1))==0)\n            {\n                cann[++lcase]=i;  //\u5bf9\u4e8ecann\u7684\u5904\u7406\u53ef\u4ee5\u52a0\u5728\u5355\u884c\u5904\u7406\u4e2d\n                if((i&bann[1])==0) f[1][0][i]=get_num(i);\n                if((i&bann[2])==0) f[2][0][i]=get_num(i);\n            }\n        for(i=1;i<=lcase;i++)\n            for(j=1;j<=lcase;j++)\n                if((cann[i]&bann[1])==0 && (cann[j]&bann[2])==0 && (cann[i]&cann[j])==0)\n                    f[2][cann[i]][cann[j]]=get_num(cann[i])+get_num(cann[j]);        \n}\n```",
        "postTime": 1514459686,
        "uid": 52088,
        "name": "TOM_\u95eb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://minagami.github.io/2019/09/05/Luogu-P2704-NOI2001-%E7%82%AE%E5%85%B5%E9%98%B5%E5%9C%B0-%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/)\n\n\u5b66\u4e0d\u6765 `getchar()`\n\n## \u9898\u76ee\u94fe\u63a5\n\n[P2704 [NOI2001]\u70ae\u5175\u9635\u5730](https://www.luogu.org/problem/P2704)\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u4f60\u4e00\u4e2a\u68cb\u76d8\uff0c\u8ba9\u4f60\u653e\u7f6e\u4e00\u4e9b\u68cb\u5b50\uff0c\u653b\u51fb\u8303\u56f4\u662f\u4e0a\u4e0b\u5de6\u53f3 $2$ \u683c\u3002\u6709\u4e00\u4e9b\u683c\u4e0d\u5141\u8bb8\u653e\u7f6e\u68cb\u5b50\u3002\u6c42\u6700\u591a\u80fd\u653e\u7f6e\u591a\u5c11\u68cb\u5b50\u4e92\u4e0d\u653b\u51fb\u3002\n\n\n## \u89e3\u9898\u601d\u60f3\n\n\u653b\u51fb\u8303\u56f4\u662f $2$ \u683c\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u72b6\u538b\u4e24\u884c\u3002\n\n\u7136\u540e\u4ee5\u884c\u4e3a\u9636\u6bb5\uff0c\u72b6\u6001\u4e3a\u4e24\u884c\uff0c\u8f6c\u79fb\u4e00\u884c\uff0c\u66f4\u65b0\u6700\u5927\u503c\u5c31\u884c\u4e86\u3002\n\n\u5f88\u591a\u4eba\u7684\u72b6\u6001\u68cb\u5b50\u6570\u7edf\u8ba1\u662f $O(2^m\\log m)$ \u7684\uff0c\u5176\u5b9e\u53ef\u4ee5 $\\mathrm{dfs}$ \u505a\u5230 $O(2 ^ m)$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u70e6\u8bf7\u770b\u4e00\u4e0b\u4ee3\u7801\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <cctype>\n\ninline int read() {\n\tchar ch = getchar(); int r = 0, w = 1;\n\twhile(!isdigit(ch)) {if(ch == '-') w = -1; ch = getchar();}\n\twhile(isdigit(ch)) {r = r * 10 + ch - '0', ch = getchar();}\n\treturn r * w;\n}\n\nvoid print2(int x, int len) {\n\tif(len) {\n\t\tprint2(x >> 1, len - 1);\n\t\tprintf(\"%d\", x & 1);\n\t}\n}\n\nconst int N = 11;\n\nchar ch;\nint n, m, ans = 0;\nint cant[101], dp[1 << N][1 << N][3], s[1 << N];\n\nvoid dfs(int sit, int sum, int now) {\n\tif(now >= m) {\n\t\ts[sit] = sum;\n\t\treturn;\n\t}\n\tdfs(sit + (1 << now), sum + 1, now + 1);\n\tdfs(sit, sum, now + 1);\n}\n\ninline int max(int a, int b) {return a > b ? a : b;}\n\nint main() {\n\tn = read(), m = read();\n\tdfs(0, 0, 0);\n\tfor(register int i = 0; i < n; i++) {\n\t    for(register int j = 0; j < m; j++) {\n\t\t\tstd::cin >> ch;\n\t        cant[i] = (cant[i] << 1) + (ch == 'H');\n\t    }\n\t}\n\tfor(register int i = 0; i < (1 << m); i++) \n\t\tif(!((i & cant[0]) || (i & (i << 1)) || (i & (i << 2))))\n\t\t\tdp[0][i][0] = s[i];\n\tfor(register int i = 0; i < (1 << m); i++) {\n\t\tfor(register int j = 0; j < (1 << m); j++) {\n\t\t\tif(!((i & j) || (i & cant[0]) || (i & (i << 1)) || (i & (i << 2)) || (j & cant[1]) || (j & (j << 1)) || (j & (j << 2)))) {\n\t\t\t\tdp[i][j][1] = s[i] + s[j];\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i = 2; i < n; i++) {\n\t\tfor(register int j = 0; j < (1 << m); j++) {\n\t\t\tif((j & (cant[i - 1])) || (j & (j << 1)) || (j & (j << 2))) continue;\n\t\t\tfor(register int k = 0; k < (1 << m); k++) {\n\t\t\t\tif((k & cant[i]) || (j & k) || (k & (k << 1)) || (k & (k << 2))) continue;\n\t\t\t\tfor(register int S = 0; S < (1 << m); S++) {\n\t\t\t\t\tif((S & j) || (S & k) || (S & cant[i - 2]) || (S & (S << 1)) || (S & (S << 2))) continue;\n\t\t\t\t\tdp[j][k][i % 3] = max(dp[j][k][i % 3], dp[S][j][(i - 1) % 3] + s[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i = 0; i < (1 << m); i++) {\n\t\tfor(register int j = 0; j < (1 << m); j++) {\n\t\t\tans = max(ans, dp[i][j][(n - 1) % 3]);\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1567683987,
        "uid": 104841,
        "name": "Minakami_Yuki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 [NOI2001]\u70ae\u5175\u9635\u5730"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u79cd\u4e0d\u7528\u5904\u7406\u524d\u4e09\u884c\u7684\u72b6\u538bDP\u3002\n\n\u56e0\u4e3am<=10\uff0c\u6240\u4ee5\u628a\u6bcf\u4e00\u884c\u90e8\u7f72\u70ae\u5175\u90e8\u961f\u7684\u72b6\u6001\u4f5c\u4e3a\u201c\u72b6\u6001\u201d\uff0c\u4e8c\u8fdb\u5236\u7684\u6bcf\u4e00\u4f4d1\u8868\u793a\u90e8\u7f72\uff0c0\u8868\u793a\u6ca1\u6709\u3002\u540c\u65f6\u628a\u5c71\u5730\u8868\u793a\u4e3a1\uff0c\u5e73\u539f\u8868\u793a\u4e3a0\uff0c\u7b2ci\u884c\u7684\u5730\u5f62\u4e3adx[i]\u3002\n\n\u56e0\u4e3a\u4ece\u4e0a\u5230\u4e0b\u8003\u8651\uff0c\u8003\u8651\u7b2ci\u884c\u65f6\u8981\u8003\u8651\u7b2ci-1\uff0ci-2\u884c\uff0c\u800c\u8003\u8651i-1\u884c\u65f6\u53c8\u8981\u8003\u8651\u7b2ci-2\uff0ci-3\u884c\u2026\u2026\u6240\u4ee5\u4ee4f[i][j][k]\u8868\u793a\u524di\u884c\uff0c\u7b2ci\u884c\u72b6\u6001\u4e3aj\uff0c\u7b2ci-1\u884c\u72b6\u6001\u4e3ak\u65f6\u53ef\u4ee5\u90e8\u7f72\u70ae\u5175\u90e8\u961f\u7684\u6700\u5927\u503c\u3002\n\n\u53ef\u5f97\u4ee5\u4e0b\u65b9\u7a0b\uff1a\n\n$f[i][j][k]=\\max(f[i-1][k][l]+cnt[j])(j,k,l\\in S )$\n\n\u540c\u65f6j&k==0,j&l==0,j&dx[i]==0\u3002\n\n\u521d\u59cb\u5316\uff1a$f[0][0][0]=0$\uff0c\u5176\u5b83\u4e3a$-\\infty$\u3002\n\n\u5176\u4e2dS\u4e3a\u4e00\u4e2a\u884c\u72b6\u6001\u7684\u5408\u6cd5\u96c6\u5408\uff0c\u5373\u72b6\u6001\u4e2d\u201c1\u201d\u4e24\u4e24\u4e4b\u95f4\u95f4\u9694\u8d85\u8fc72\u3002\u82e5\u4e00\u4e2a\u72b6\u6001i\u6ee1\u8db3\n```cpp\n!(i&(i<<1))&&!(i&(i<<2))\n```\n\n\u90a3\u4e48i\u662f\u5408\u6cd5\u72b6\u6001\u3002\n\n\u7b54\u6848\uff1a$\\max(f[n][i][j]) (i,j\\in S)$\n\n\u56e0\u4e3a\u5df2\u521d\u59cb\u5316\uff0c\u6240\u4ee5\u627e\u7b54\u6848\u65f6\u53ef\u4e0d\u7528\u5224\u65adi&j\u662f\u5426\u4e3a0\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0cm=10\u65f6|S|=60\uff0c\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u53ef\u4ee5\u628aj,k\u5b9a\u4e49\u4e3a\u96c6\u5408\u4e2d\u76f8\u5e94\u72b6\u6001\u7684\u7f16\u53f7\uff08\u4e0b\u6807\uff09\u3002\u6846\u67b6\u4e2d\u53ea\u8981\u6539\u521d\u59cb\u5316\uff1a\n\n$f[0][1][1]=0$\uff08\u4e3a\u4ec0\u4e48\uff0c\u89c1\u4ee3\u7801\u2193\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n,m,s[102],cnt[102],tot;//s\u662f\u53ef\u7528\u96c6\u5408\uff0ccnt\u662f1\u7684\u6570\u76ee \nint f[102][72][72];//f\u76842\u30013\u7ef4\u90fd\u662f\u53ef\u7528\u72b6\u6001\u7684\u7f16\u53f7\n//\u7ecf\u8bd5\u9a8cm=10\u65f6|s|=60\uff0c\u6240\u4ee5\u53ef\u4ee5\u653e\u5fc3\u5c11\u5f00 \nint dixing[102];//0\u5e73\u539f\uff0c1\u5c71\u5730\uff0c\u72b6\u6001&\u5730\u5f62!=0\u5373\u70ae\u5175\u5728\u5c71\u5730\u4e0a \nchar str[13];\nvoid input()//\u8f93\u5165O(nm) \n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%s\",str);\n\t\tfor(int j=0;j<m;++j)\n\t\t{\n\t\t\tdixing[i]<<=1;\n\t\t\tif (str[j]=='H')\n\t\t\t\tdixing[i]|=1;\n\t\t}\n\t}\n}\nint count1(int x)//\u8ba1\u7b971\u7684\u4e2a\u6570 \n{\n\tint sum=0;\n\twhile(x) x-=x&-x,++sum;\n\treturn sum;\n}\nvoid prework()//\u9884\u5904\u7406\u5408\u6cd5\u96c6\u5408O(2^m) \n{\n\tfor(int i=0;i<1<<m;++i)\n\t\tif (!(i&(i<<1))&&!(i&(i<<2)))\n\t\t{\n\t\t\ts[++tot]=i;\n\t\t\tcnt[tot]=count1(i);//\u8ba1\u7b971\u7684\u4e2a\u6570 \n\t\t}\n}\nint main()\n{\n\tinput();\n\tprework();\n\tmemset(f,0xcf,sizeof(f));//f\u6570\u7ec4\u521d\u59cb\u5316 \n\tf[0][1][1]=0;\n\tfor(int i=1;i<=n;++i)//DP O(n|s|^3) \n\tfor(int j=1;j<=tot;++j)\n\tfor(int k=1;k<=tot;++k)\n\tfor(int l=1;l<=tot;++l)\n\tif ((s[j]&s[k])==0&&(s[j]&s[l])==0&&(s[j]&dixing[i])==0)\n\t\tf[i][j][k]=max(f[i-1][k][l]+cnt[j],f[i][j][k]);\n\tint ans=0;//\u5bfb\u627e\u7b54\u6848 \n\tfor(int i=1;i<=tot;++i)\n\t\tfor(int j=1;j<=tot;++j)\n\t\t\tans=max(f[n][i][j],ans);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1559887844,
        "uid": 83001,
        "name": "\u6d77\u6ee8WA\u58f0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u72b6\u538bDP\u57fa\u7840\u9898\uff0c\u4e0d\u8fc7\u76f8\u5bf9\u5176\u4ed6\u7684\u7b80\u5355\u72b6\u538bDP\uff0c\u8fd9\u4e2a\u9898\u76f8\u5bf9\u6709\u4e9b\u590d\u6742\uff0c\u6709\u5f88\u591a\u6ce8\u610f\u70b9\u3002\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u7528\u5230\u7684\u4e00\u4e2a\u5957\u8def\u662f\uff0c\u5f53\u72b6\u6001\u679a\u4e3e\u8fc7\u591a\u65f6\uff0c\u5982\u672c\u9898\u679a\u4e3e\u524d\u4e24\u884c\u9700\u8981$1024^3$\uff0c\u592a\u5927\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e\u6bcf\u884c\u90fd\u7528\u901a\u7528\u7684\u5224\u65ad\u72b6\u6001\u662f\u5426\u5408\u6cd5\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5904\u7406\u51fa\u6765\u90a3\u4e9b\u5bf9\u4e8e\u6bcf\u884c\u7684\u53ef\u884c\u65b9\u6848\u4fdd\u5b58\u4e0b\u6765\uff0c\u6bcf\u6b21\u7528\u8fd9\u4e2a\u5faa\u73af\uff0c\u590d\u6742\u5ea6\u5927\u5927\u964d\u4f4e\u3002\u672c\u9898\u6765\u8bf4\u5c31\u5269\u4e0b\u4e0d\u5230100\u4e86\u3002\u5c31\u7b97$100^3$\u90fd\u7ef0\u7ef0\u6709\u4f59\u3002\n\n\u7136\u540e\u6309\u7167\u5f80\u5e38\u7684\u5957\u8def\uff0c\u8bbe$dp$\u65b9\u7a0b$f[n][sta][sta]$\u56e0\u4e3a\u8981\u8003\u8651\u4e0a\u4e00\u884c\u548c\u4e0a\u4e0a\u884c\uff0c\u6240\u4ee5\u8981\u4e24\u4e2a01\u4e32\u7684$sta$\u72b6\u6001\u3002\n\n\u7136\u540e\u521d\u59cb\u5316\u7684\u65f6\u5019\u521d\u59cb\u5316\u51fa\u524d\u4e24\u884c\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e\u524d\u4e24\u884c\u53ef\u884c\u72b6\u6001\u8ba1\u7b97\u70ae\u5175\u6570\u91cf\u53d6\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\u7b54\u6848\u5373\u662f\u7b2c$n$\u884c\u7684\u4e24\u4e2a$sta$\u679a\u4e3e\u4e0b\u7684\u6700\u5927\u503c\u3002\n\n#### PS:\u6309\u7406\u6765\u8bf4\uff0c\u662f\u7206\u7a7a\u95f4\u7684\uff0c\u9700\u8981\u6eda\u52a8\u4e00\u4e0b\uff0c\u4f46\u662fluogu\u4e0a\u9762\u7684\u7a7a\u95f4\u662f\u6309\u7167\u7528\u4e86\u591a\u5c11\u8ba1\u7b97\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fc7\u3002\uff08\u770b\u8138\u9ed1\u4e0d\u9ed1\u3002\u3002\u3002\uff09\n\n$code:$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=101,maxm=11;\nint n,m;\nint line[maxn];\nint sta[1<<maxm];\nint f[maxn][1<<maxm][1<<maxm];\nint num=0;\nint get(int x){\n    int anss=0;\n    while(x!=0)\n    {\n        if((x&1)!=0) anss++;\n     \tx>>=1;\n    }\n    return anss;\n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        int sum=0;\n        for(int j=m-1;j>=0;j--){\n            char c;\n            scanf(\" %c\",&c);\n            if(c=='H') sum+=(1<<j);\n        }\n        line[i]=sum;\n    }\n    for(int i=0;i<=(1<<m)-1;i++){\n        if((i&(i<<2))==0 && (i&(i<<1))==0) sta[++num]=i;\n    }\n\tfor(int i=1;i<=num;i++){\n   \t\tfor(int j=1;j<=num;j++){\n   \t\t\tif((sta[i]&line[2])==0 && (sta[j]&line[1])==0 && (sta[i]&sta[j])==0){\n               f[2][sta[i]][sta[j]]=get(sta[i])+get(sta[j]);\n            }   \n       }\n   }\n    for(int i=3;i<=n;i++){\n        for(int j1=1;j1<=num;j1++){ //\u4e0a\u4e0a\u884c \n            for(int j2=1;j2<=num;j2++){//\u4e0a\u884c \n                for(int j=1;j<=num;j++){//\u5f53\u524d \n                    if(line[i]&sta[j]) continue;\n                    if(line[i-1]&sta[j2]) continue;\n                    if(line[i-2]&sta[j1]) continue;\n                    if(sta[j]&sta[j1] || sta[j]&sta[j2] || sta[j1]&sta[j2]) continue;\n                    f[i][sta[j]][sta[j2]]=max(f[i][sta[j]][sta[j2]],f[i-1][sta[j2]][sta[j1]]+get(sta[j]));\n                }\n            }\n        } \n    }\n    int ans=0;\n    for(int i=1;i<=num;i++){\n        for(int j=1;j<=num;j++){\n            ans=max(ans,f[n][sta[i]][sta[j]]);\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1549026987,
        "uid": 64611,
        "name": "\u4eba\u6b87\u7269\u5df2\u975e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5f3a\u8c03\u4e00\u4e0bmain\u8bfb\u5165\u5730\u56fe\u7684\u65f6\u5019m\u5fc5\u987b\u4ece0\u5f00\u59cb.\n\u9996\u5148\u6211\u4eec\u8003\u8651\u72b6\u6001\u3002\u6211\u4eec\u4e0d\u96be\u60f3\u5230~~\u72b6\u538bdp\u5957\u8def~~\u4ee5\u7b2c$i$\u884c\uff0c\u5f53\u524d\u884c\u7684\u72b6\u6001\u538b\u7f29\u8fc7\u540e\u5728\u96c6\u5408`S*`\u4e3a$j$\u7684\u7f16\u53f7\u7684\u72b6\u6001\uff0c\u4e0a\u4e00\u884c\u4e3a\u7f16\u53f7\u4e3a$k$\u7684\u72b6\u6001\u4f5c\u4e3a\u6574\u4e2a\u9898\u7684\u72b6\u6001\u3002\u53ef\u4ee5\u5199\u51fa\u5982\u4e0b\u9012\u63a8\u5f0f\uff08\u524d\u63d0\u662f\u8fd9\u4e2a\u72b6\u6001\u53ef\u4ee5\u8f6c\u79fb\uff0c\u540e\u6587\u6709\u5982\u4f55\u8f6c\u79fb\uff09:(count(x)\u8868\u793ax\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u6709\u591a\u5c11\u4e2a1)\n$$dp[i][j][k] = max(dp[i-1][k][l]+count(j))$$ \n\n\n\u90a3\u4e48\u4ec0\u4e48\u72b6\u6001\u662f\u53ef\u884c\u7684\u5462\uff1f\u9996\u5148\u6211\u4eec\u8981\u8003\u8651$i-2$\u884c\uff0c\u5f53\u884c\u524d\u72b6\u6001$j$\u4e0e$i-1$\u884c\u72b6\u6001$k$\u4e0e$i-2$\u884c\u7684\u72b6\u6001$l$\u8981\u6ee1\u8db3$$j\\&k=0\\ \\ j\\&l=0  \\ \\ \\ k\\&l = 0$$\n**\u5f53\u7136\u4e86\uff0c\u8fd8\u6709\u6700\u91cd\u8981\u7684\u4e00\u70b9**\u90a3\u5c31\u662f\u6574\u4e2a\u5730\u56fe\uff0c\u6211\u4eec\u540c\u6837\u538b\u4f4d\u538b\u5230\u4e8c\u8fdb\u5236\u6570\u91cc\u9762\uff0c\u53ea\u9700\u8981\u5728\u72b6\u6001\u8f6c\u79fb\u4ee5\u524d\u5224\u65ad\u8fd9\u4e2a\u72b6\u6001\u53ef\u4e0d\u53ef\u884c\u5c31\u884c\u3002  \n\u524d\u6587\u6240\u8bf4\u7684\u96c6\u5408`S`\uff0c\u5176\u5b9e\u8868\u793a\u7684\u662f\u53ef\u884c\u7684\u72b6\u6001\u7684\u96c6\u5408\u3002\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u5730\u65b9\u653e\u70ae\u5175\uff0c\u90a3\u4e48\u5de6\u53f3\u4e24\u683c\u4e4b\u5185\u90fd\u4e0d\u80fd\u653e\u70ae\u5175\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e8c\u8fdb\u5236\u72b6\u6001\u538b\u7f29\u4ee5\u540e\uff0c\u4e00\u4f4d\u4e3a1\uff0c\u90a3\u4e48\u5b83\u5de6\u53f3\u4e24\u4f4d\u90fd\u5fc5\u987b\u4e3a0\u3002\u6211\u4eec\u5c31\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u96c6\u5408\u63d0\u524d\u7b97\u51fa\u6765\uff0c\u6781\u5927\u7b80\u5316\u4e86\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u96c6\u5408\u5e76\u4e0d\u5927\uff01  \n\u90a3\u4e48\uff0c\u8fd9\u9053\u9898\u5c31\u7b97\u5b8c\u4e86\uff0c\u603b\u590d\u6742\u5ea6$O(n|S|^3)$,\u7531\u4e8e$|S|$\u5f88\u5c0f\uff0c\u6240\u4ee5\u6574\u4e2a\u7b97\u6cd5\u8868\u73b0\u975e\u5e38\u4f18\u79c0\n```cpp\n//\n// Created by dhy on 18-12-16.\n//\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint dp[110][77][77];\nint S[100];\nint map[101];\nint cnt[101];\nint top;\nint n,m;\nint getBit(int x){\n    int c = 0\uff1b\n    while(x)c++,x-=x&-x;\n    return c;\n}\nbool ok(lnt x){\n    if(x&(x<<1))return false;\n    if(x&(x<<2))return false;\n    return true;\n}\nvoid init(){\n    int end = 1<<m;\n    for(int i = 0;i<end;i++)if(ok(i))S[top] = i,cnt[top++] = getBit(i);\n}\nbool valid(int I,int x){\n    if(map[l]&x)return false;\n    return true;\n}\ninline int max(int a,int b){return a  >  b  ?  a  \uff1ab;}\nint work(){\n    memset(dp,-1, sizeof(dp));\n    dp[0][0][0] = 0;\n    int ans = 0;\n    for(int i = 0;i<top;i++){\n        if(valid(1,S[i])){\n            dp[1][i][0] = cnt[i];\n            ans = max(ans,dp[1][i][0]);\n        }\n    }\n    for(int i = 2;i<=n;i++){\n        for(int j = 0;j<top;j++){\n            if(valid(i,S[j]))\n                for(int k = 0;k<top;k++){//i-1\n                    if(valid(i-1,S[k])&&(S[j]&S[k])==0){\n                        int last = 0;\n                        for(int l = 0;l<top;l++){//i-2\n                            if(dp[i-1][k][l]!=-1&&(S[l]&S[j])==0&&valid(i-2,S[l])){\n                                last = max(last,dp[i-1][k][l])\n                            }\n                        }\n                        dp[i][j][k] = max(dp[i][j][k],last+cnt[j]);\n                        if(i==n)ans = max(ans,dp[i][j][k]);\n                    }\n            }\n        }\n    }\n    return ans;\n\n}\nint mian() {\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++){\n        for (int j = 0; j < m; j++) {\n            char t;\n            cin >> t;\n            if (t == 'H')map[i] |= (1 << (m - 1 - j));\n        }\n    }\n    init();\n    cout<<work()<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1545123227,
        "uid": 61493,
        "name": "BeyondStars",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nint n,m,num[60];//n:\u884c\u6570 m:\u5217\u6570 num:\u6bcf\u4e00\u79cd\u72b6\u6001\u53ef\u653e\u7f6e\u7684\u70ae\u5175\u6570 \nchar s[110][15];//\u5730\u56fe\u8bfb\u5165 \nint rec[110];//\u6bcf\u4e00\u884c\u7684\u521d\u59cb\u72b6\u6001\uff0c\u5373\u8be5\u4f4d\u7f6e\u662f\u5426\u6709\u5c71 \nint state[70],top;//top:\u5408\u6cd5\u72b6\u6001\u6570 state[i]:\u5b58\u50a8\u7b2ci\u4e2a\u5408\u6cd5\u72b6\u6001 \nint dp[110][70][70];//dp[i][j][k]\u4ee3\u8868\u7b2ci\u884c\u72b6\u6001\u4e3ak\uff0ci-1\u884c\u72b6\u6001\u4e3aj\u65f6\u6700\u591a\u53ef\u653e\u7684\u70ae\u5175\u6570 \nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=0;i<(1<<m);i++)\n\t{\n\t\tif((i&(i<<1)||(i&(i<<2))))continue;//\u5224\u65ad\u540c\u4e00\u884c\u4e2d\u76f8\u90bb\u4e24\u884c\u4e2d\u7684\u51b2\u7a81\u60c5\u51b5 \n\t\tint k=i;\n\t\twhile(k)//\u7edf\u8ba1\u8be5\u5408\u6cd5\u72b6\u6001\u53ef\u4ee5\u9632\u653e\u7f6e\u70ae\u5175\u6570\n\t\t{\n\t\t\tnum[top]++;\n\t\t\tk&=(k-1);\n\t\t} \n\t\tstate[top++]=i;//\u5b58\u50a8\u8be5\u5408\u6cd5\u72b6\u6001 \n\t}\n\tfor(int i=0;i<n;i++)//\u8bfb\u5165 \n\t{\n\t\tcin>>s[i];\n\t\tfor(int j=0;j<m;j++)\n\t\t\tif(s[i][j]=='H')\n\t\t \trec[i]|=(1<<j);//\u5982\u679c\u8be5\u4f4d\u7f6e\u4e3a\u5c71\u5730\uff0c\u5219\u7f6e\u4e3a1 \n\t}\n\tfor(int i=0;i<top;i++)//\u521d\u59cb\u5316\u7b2c\u4e00\u884c\u7684\u72b6\u6001 \n\t{\n\t\tif(state[i]&rec[0])continue;\n\t\tdp[0][0][i]=num[i];\n\t}\n\t\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tfor(int j=0;j<top;j++)//\u5f53\u524d\u884c\u72b6\u6001 \n\t\t{\n\t\t\tif(state[j]&rec[i])continue;//\u5f53\u524d\u884c\u4e0e\u521d\u59cb\u72b6\u6001\u51b2\u7a81 \n\t\t\tfor(int k=0;k<top;k++)//i-1\u884c\u72b6\u6001 \n\t\t\t{\n\t\t\t\tif(state[j]&state[k])continue;//\u5f53\u524d\u884c\u4e0ei-1\u51b2\u7a81 \n\t\t\t\tfor(int t=0;t<top;t++)//i-2\u884c\u72b6\u6001 \n\t\t\t\t{\n\t\t\t\t\tif(state[j]&state[t])continue;//\u5f53\u524d\u884c\u4e0ei-2\u884c\u51b2\u7a81 \n\t\t\t\t\tif(state[k]&state[t])continue;//i-1\u884c\u4e0ei-2\u884c\u51b2\u7a81\n\t\t\t\t\tdp[i][k][j]=max(dp[i][k][j],dp[i-1][t][k]+num[j]); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<top;j++)\n\t\t\tfor(int k=0;k<top;k++)\n\t\t\t\tans=max(ans,dp[i][j][k]);\n\tcout<<ans;\n\treturn 0;\n}\n\n```",
        "postTime": 1541641719,
        "uid": 47090,
        "name": "LeeChain",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\n```\n/*\n\u8c03\u8bd5\u6ce8\u610f\uff1a\n1.==\u8fd0\u7b97\u7b26\u8fd0\u7b97\u5148\u4e8e\u4e0e\u8fd0\u7b97\u7b26 \uff0c\u6545\u5e94\u52a0\u4e0a\u62ec\u53f7 \n2.\u672c\u9898\u6240\u6c42\u7684\u662f\u6700\u591a\u70ae\u5175\u4e2a\u6570\u800c\u4e0d\u662f\u70ae\u5175\u6446\u653e\u65b9\u6848\u603b\u6570,\u6545DP\u65b9\u7a0b\u5e94\u4e3adp[i][j][k](dp[\u7b2ci\u884c][\u7b2ci\u884c\u9009\u53d6\u7b2cj\u79cd\u6446\u653e\u4e00\u884c\u70ae\u5175\u7684\u65b9\u6848][\u7b2ci-1\u884c\u9009\u53d6\u7b2ck\u79cd\u6446\u653e\u4e00\u884c\u70ae\u5175\u7684\u65b9\u6848])=max(num[j]+dp[i-1][k][l])\u800c\u4e0d\u662f=num[j]+Sigma dp[i-2][k][l];\n3.\u4f4d\u8fd0\u7b97\u5168\u90e8\u52a0\u62ec\u53f7\n*/ \n#include<iostream> \n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define rep(i,a,b) for(long long i=a;i<=b;i++)\n#define del(a) memset(a,0,sizeof(a));\n#define cl(a) memset(a,-1,sizeof(a));\nusing namespace std;\ntypedef long long ll;\nll n,m;\nll a[105],d[2000],num[2000],sum,dp[105][1025][1025];\nll read()\n{\n\tll x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile('0'<=ch && ch<='9'){x=x*10+ch-'0'; ch=getchar();}\n\treturn x*f;\n}\nvoid pre()\n{\n\trep(i,0,(1<<n)-1)\n\t{\n\t\tif(i&(i<<1) || (i>>1)&(i<<1)) continue;\n\t    d[++sum]=i;\n\t    rep(j,0,n) if(i&(1<<j)) num[sum]++;\n\t}\n}\nbool check(ll i,ll j)\n{\n\trep(g,0,n)\n\t{\n\t\tif(d[j]&(1<<g) && !(a[i]&(1<<g))) \n\t\t{\n\t\t\tprintf(\"%lld\\n\",g);\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nvoid DP()\n{\n\trep(i,1,m)\n\t{\n\t\trep(j,1,sum)\n\t\t{\n\t\t\tif(i==1)\n\t\t\t{\n\t\t\t\tif((d[j]&a[i])==d[j])dp[i][j][0]=num[j];\n\t\t\t\tcontinue;\n\t\t\t} \n\t\t\tif(i==2)\n\t\t\t{\n\t\t\t\trep(k,1,sum)\n\t\t\t\t{\n\t\t\t\t\tif(!(d[k]&d[j]) && (a[i]&d[j])==d[j]) dp[i][j][k]=num[j]+dp[i-1][k][0];\n\t\t\t\t\t//printf(\"dp[%lld][%lld][%lld]=%lld,%lld,%lld,%lld,%lld,%lld\\n\",i,j,k,dp[i][j][k],d[j],d[k],d[j]&d[k],a[i]&d[j],a[i]);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\trep(k,1,sum){\n\t\t\t\trep(l,1,sum)\n\t\t\t\t\tif(!(d[j]&d[k]) && !(d[j]&d[l]) && !(d[k]&d[l]) && (d[j]&a[i])==d[j]) dp[i][j][k]=max(dp[i][j][k],dp[i-1][k][l]+num[j]);\n\t\t\t\t//printf(\"dp[%lld][%lld][%lld]=%lld,%lld,%lld,%lld\\n\",i,j,k,dp[i][j][k],d[j],d[k],d[j]&d[k]);\n\t\t\t\t}\n\t\t}\n\t}\n\tll maxn=-1;\n\tif(m!=1)\n\t\trep(i,1,sum)\n\t    \trep(j,1,sum) maxn=max(dp[m][i][j],maxn);\n\telse rep(i,1,sum) maxn=max(maxn,dp[m][i][0]);\n\tcout<<maxn;\n}\nint main()\n{\n\tm=read();n=read();\n\trep(i,1,m)\n\t{\n\t\trep(j,1,n)\n\t\t{\n\t\t\tchar ch=getchar();\n\t\t\twhile(ch!='H' && ch!='P') ch=getchar();\n\t\t\tif(ch=='H') a[i]*=2;\n\t\t\telse a[i]=a[i]*2+1;\n\t\t}\n\t}\n\tpre();\n\tDP();\n\treturn 0;\n}\n/*\n8 4\nHPPH\nPPPP\nHPPH\nPHHP\nPHHP\nHPPH\nPPPP\nHPPH\n*/\n```",
        "postTime": 1535004925,
        "uid": 67840,
        "name": "niolle",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u521a\u5b66\u72b6\u538bDP\uff0c\u968f\u4fbf\u5207\u4e86\u5207\u9898\u5c45\u7136\u4e24\u9053\u4e00\u904dAC\uff0c\u9ad8\u5174\u4e4b\u4f59\u5f3a\u53d1\u4e00\u6ce2\uff01\n\n\u9996\u5148\u8fd9\u9898\u7c7b\u4f3c\u4e8en\u56fd\u738b\u95ee\u9898\uff0c\u5bf9\u6bcf\u4e00\u884c\uff0c\u8003\u8651\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u653e\u4e0d\u653e\u7528\u4e8c\u8fdb\u5236\u6765\u8868\u793a\uff0c\u7c7b\u4f3c\u7684\uff0c\u6709\u65b9\u7a0b\nf[i][a][b]=max(f[i][a][b],f[i-1][b][v]+sum[a]);\n\n\u5176\u4e2d\u7531\u4e8e\u6bcf\u884c\u4e0e\u4e0a\u4e24\u884c\u6709\u5173\uff0c\u9700\u4ece\u524d\u4e24\u884c\u7684\u72b6\u6001\u8f6c\u79fb\u800c\u6765\uff0c\u5373\u4e0a\u5f0f\u7684a\u548cb\n\u9884\u5904\u7406\u548cn\u56fd\u738b\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n\n\u82e5\u611f\u89c9\u56f0\u96be\uff0c\u5efa\u8bae\u5148\u505aP1896 P1879\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<stack>\nusing namespace std;\n#define il inline\n#define rg register\nconst int N=100005;\nconst int M=1000000;\nint m,n,r,t,g[1<<12],c[1<<12],sum[1<<12];\nint f[102][69][69];\nil bool check(int x,int y){//\u5373\u4e0e\u6807\u51c6\u4e32c\u8fdb\u884c\u6bd4\u5bf9\uff0c\n\t//c\u8868\u793a\u5730\u5f62\u662f\u5426\u5141\u8bb8\uff0c\u8fd9\u91cccheck\u526a\u6389\u4e0d\u5408\u6cd5\u7684\u653e\u6cd5\n    int A,B;\n    for(int i=1;i<=10;i++){\n        A=x&(1<<(i-1)),B=y&(1<<(i-1));\n        if(!A&&B) return 0;\n    }\n    return 1;\n}\nil int get_sum(int x){//\u8be5\u884c\u7684\u4e8c\u8fdb\u5236\u76841\u7684\u4e2a\u6570\uff0c\u5373\u653e\u4e86\u51e0\u4e2a\u70ae\u5175\n    int k;\n    for(int i=1;i<=10;i++){\n        if(x&(1<<(i-1))) k++;\n    }\n    return k;\n}\nint main(){ \n    cin>>m>>n;\n    char q;\n    for(int i=1;i<=m;i++){\n        for(int j=1;j<=n;j++){\n            cin>>q;\n            if(q=='P') c[i]=(c[i]|(1<<j-1));\n        }\n    }\n   \n    int full=(1<<10)-1;\n    for(int i=0;i<=full;i++){\n        if(!(i&(i<<2))&&!(i&(i>>2))&&!(i&(i>>1))&&!(i&(i<<1))) g[++t]=i;\n        int u=g[t];\n        sum[t]=get_sum(u);\n    }\n    for(int i=1;i<=t;i++){//\u5bf9\u7b2c\u4e00\u884c\u5355\u72ec\u8003\u8651\n        int A=c[1],B=g[i];\n        if(!check(A,B)) continue;\n        f[1][i][0]=sum[i];\n    }\n    //\u5bf9\u7b2c\u4e8c\u884c\u5355\u72ec\u8003\u8651\n    for(int i=1;i<=t;i++){//2\n        int A=c[2],B=g[i];\n        if(!check(A,B)) continue;\n        for(int j=1;j<=t;j++){//1\n            int C=g[j];\n            if(B&C) continue;\n            f[2][i][j]=max(f[2][i][j],f[1][j][0]+sum[i]);\n        }\n    }\n    for(int i=3;i<=m;i++){\n        for(int a=1;a<=t;a++){//\u5f53\u524d\u884c\n            int A=c[i],B=g[a];\n            if(!check(A,B)) continue;\n            for(int b=1;b<=t;b++){//\u4e0a1\n                int C=g[b];\n                if(C&B) continue;\n                for(int v=1;v<=t;v++){//\u4e0a2\n                    int D=g[v]; \n                    if(D&B) continue;\n                    f[i][a][b]=max(f[i][a][b],f[i-1][b][v]+sum[a]);\n                }\n            }\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=t;i++){\n        for(int j=1;j<=t;j++){\n            ans=max(ans,f[m][i][j]);\n        }\n    }\n    cout<<ans<<endl;\n    return 0;//\u7531\u4e8e\u4e0d\u77e5\u540d\u7684\u539f\u56e0\uff0c\u63d0\u4ea4\u9700\u4f7f\u7528c++ 11\uff0cc++\u4f1aWA\n    //\u539f\u56e0\u8fd8\u671b\u795e\u7287\u544a\u77e5\n}\n\n```",
        "postTime": 1522505639,
        "uid": 49699,
        "name": "xfydemx",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u6628\u5929\u8003\u8bd5\u53d1\u73b0\u81ea\u5df1\u52a8\u5f52\u5b8c\u5168\u5c31\u662f\u4e00\u4e2a\u667a\u969c\u3002\u3002\u3002\u7136\u540e\u8dd1\u53bb\u505a\u4e86\u4e00\u4e24\u9053\u52a8\u5f52\u7684\u9898\u3002\u3002\u70ae\u5175\u9635\u5730\u7b97\u6bd4\u8f83\u7ecf\u5178\u7684\u5427\u3002\n\n\u4e3b\u8981\u4ee3\u7801\u6765\u81ea\u67d0\u5927\u4f6c\u7684\u5fae\u535a\u3002\u3002<http://blog.sina.com.cn/s/blog\\_6635898a0100qe3w.html>\n\n\u7136\u540e\u56e0\u4e3a\u5b9e\u5728\u4e0d\u4e60\u60ef\u4ece0\u5f00\u59cb\u5b9a\u4e49\u6570\u7ec4\u5c31\u9b54\u6539\u4e86\u4e00\u70b9\u70b9\u3002\u3002\n\n\u611f\u89c9\u6ce8\u91ca\u4ec0\u4e48\u7684\u7279\u522b\u8be6\u7ec6\u3002\u3002\u4e8e\u662f\u5c31\u7167\u642c\u8fc7\u6765\u4e86\n\n\u5176\u4ed6\u5927\u4f6c\u795e\u7287\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u5f88\u591a\u505a\u6cd5\u3002\u3002\u6c42\u4e0d\u55b7orz\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\nusing namespace std;\n\ninline int read()\n{\n    int w=1,x=0;char ch=0;\n    while(ch< '0'||ch >'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return w*x;\n}\n\nint map[105];// map[i]\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u6bcf\u4e00\u884c\u7684H\u5206\u5e03\u72b6\u6001\u3002\nint cnt=0,stk[65],sum[65];// cnt\u8868\u793a\u72b6\u6001\u603b\u6570\uff0cstk[i]\u8868\u793a\u7b2ci\u79cd\u72b6\u6001\uff0csum[i]\u8868\u793a\u7b2ci\u79cd\u72b6\u6001\u5b89\u88c5\u7684\u5927\u70ae\u6570\u91cf\u3002\nint f[105][65][65];//dp[r][i][k]\u8868\u793a\u7b2cr\u884c\u7684\u72b6\u6001\u4e3ak\uff0c\u7b2cr-1\u884c\u7684\u72b6\u6001\u4e3ai\u65f6\u5019\uff0c\u524dr\u884c\u6700\u591a\u80fd\u591f\u5b89\u88c5\u7684\u5927\u70ae\u6570\u91cf\u3002\n \nbool ok(int x)//  \u5224\u65ad\u72b6\u6001x\u662f\u5426\u7b26\u5408\uff0c\u5373\u662f\u5426\u4f1a\u51fa\u73b0\u4e24\u4e2a\u5927\u70ae\u95f4\u9694\u5c0f\u4e8e2\u3002\n{        \n    if(x & (x<<1)) return false;\n    if(x & (x<<2)) return false;\n    return true;\n}\n \nint getSum(int x)//  \u6c42\u51fa\u72b6\u6001x\u4e2d\u5b89\u88c5\u4e86\u591a\u5c11\u95e8\u5927\u70ae\uff0cx\u7684\u4e8c\u8fdb\u5236\u6709\u51e0\u4e2a1\u3002\n{     \n    int num = 0;\n    while(x>0)\n    {\n        if(x&1) num++;\n        x=x>>1;\n    }\n    return num;\n}\n \nvoid findStk(int n)\n{   //  \u9884\u5904\u7406\u6c42\u51fa\u591a\u6709\u53ef\u80fd\u7684\u72b6\u6001\u3002\n    for(int i=0;i<(1<<n);i++)\n        if(ok(i))\n        {\n            stk[++cnt] = i;\n            sum[cnt] = getSum(i);\n        }\n}\nint n,m;\nint main()\n{\n    \n    cin>>n>>m;\n    memset(f,-1,sizeof(f));\n    for(int r=1;r<=n;r++)\n        for(int c=1;c<=m;c++)\n        {\n            char tmp;\n            cin >> tmp;\n            if(tmp == 'H') map[r] |= (1<<c-1);\n        }\n    \n    findStk(m);\n    \n    for(int i=1;i<=cnt;i++)    //  \u7b2c\u4e00\u884c\u7684\u72b6\u6001\u7279\u6b8a\u8003\u8651\u3002\n        if(!(stk[i]&map[1]))\n            f[1][1][i] = sum[i];\n            \n    for(int r=2;r<=n;r++)\n        for(int i=1;i<=cnt;i++)//  \u679a\u4e3e\u7b2cr\u884c\u7684\u72b6\u6001\u3002\n        {     \n            if(stk[i]&map[r]) continue;\n            for(int j=1;j<=cnt;j++)//  \u679a\u4e3e\u7b2cr-1\u884c\u7684\u72b6\u6001\u3002\n            {     \n                if(stk[i]&stk[j]) continue;\n                for(int k=1;k<=cnt;k++)//  \u679a\u4e3e\u7b2cr-2\u884c\u7684\u72b6\u6001\u3002\n                {     \n                    if(stk[i]&stk[k]) continue;\n                    if(f[r-1][k][j]==-1) continue;\n                    f[r][j][i] = max(f[r][j][i], f[r-1][k][j] + sum[i]);\n                }\n            }\n        }\n        \n    int ans=0;\n    for(int i=1;i<=cnt;i++)\n        for(int j=1;j<=cnt;j++)\n            ans = max(ans,f[n][i][j]);\n            \n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1508891721,
        "uid": 66924,
        "name": "AVALON_7",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u548c**P1879 [USACO06NOV]\u7389\u7c73\u7530Corn Fields**\u6709\u7c7b\u4f3c\u7684\u5730\u65b9\uff0c\u4f46\u8fd9\u9053\u9898\u53ef\u4ee5\u770b\u4e3a\u90a3\u9053\u9898\u7684\u5347\u7ea7\u7248\uff0c\u6240\u4ee5\u6211\u5efa\u8bae\u6ca1\u505a\u8fc7**\u7389\u7c73\u7530**\u7684\u53ef\u4ee5\u5148\u505a\u4e00\u4e0b**\u7389\u7c73\u7530**\u548c**P1896 [SCOI2005]\u4e92\u4e0d\u4fb5\u72afKing**\u3002\n\n#1.\n\u89e3\u6b64\u9898\u7684\u5173\u952e\u5728\u4e8e\u8981\u77e5\u9053\u7b2ci\u884c\u7684\u72b6\u6001\u662f\u7531\u524d\u4e24\u884c\u7684\u72b6\u6001\u51b3\u5b9a\u7684\uff0c\u6240\u4ee5\u8981\u9884\u5904\u7406\u51fa\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c\u7684\u6240\u6709\u72b6\u6001\uff0c\u7136\u540e\u4ece\u7b2c\u4e09\u884c\uff08\u56e0\u4e3a\u7b2c\u4e00\u4e8c\u884c\u5df2\u5904\u7406\uff09\u5f00\u59cb\u679a\u4e3e\uff0c\u540c\u65f6\u679a\u4e3e\u7b2c\u5f53\u524d\u884c\u7684\u524d\u4e00\u884c\u548c\u4e0a\u4e0a\u884c\u3002\n\n#2.\n##\u540c\u65f6\u8fd8\u9700\u6ce8\u610f\u9884\u5904\u7406\u65f6\u5e94\u628a\u6bcf\u79cd\u60c5\u51b5\u6240\u80fd\u653e\u7f6e\u70ae\u5175\u6570\u6c42\u51fa\u6765\uff1a\n\n```cpp\nfor(int i=0;i<(1<<m);i++)\n    if(!(i&(i<<2))&&!(i&(i<<1)))\n    {\n        sit[++k]=i;\n        int t=i;\n        while(t)\n        {\n            sum[k]+=t%2;\n            t/=2;\n        }\n    }\n```\n#3.\n##\uff081\uff09dp\u65b9\u7a0b\u662f\u4ec0\u4e48\u5462\uff1f\n\n##f[i][l][j]=max(f[i][l][j],f[i-1][p][l]+sum[j]);\uff08\u8fd9\u91cc\u5927\u5bb6\u8981\u6df1\u523b\u7406\u89e3f[i][l][j]\u7684\u542b\u4e49\uff0c\u5343\u4e07\u4e0d\u8981\u628a\u987a\u5e8f\u5f04\u53cd\uff09\n\nf[i][l][j]\u7684\u610f\u601d\u662f\u7b2c**i**\u884c\u7684**j**\u72b6\u6001\u662f\u7531\u4e0a\u4e00\u884c\u7684**l**\u72b6\u6001\u5f97\u51fa\u6765\u7684\u3002\n\n##\uff082\uff09\u4e3a\u4ec0\u4e48\u8981\u6c42max\u5462\uff1f\n\n\u9996\u5148\u5148\u4e0d\u8bba\u6b63\u786e\u6027\uff0c\u4ea4\u4e0a\u53bb\u4f1awa5\u4e2a\u70b9\uff0c\u5b9e\u9645\u503c\u90fd\u6bd4\u7b54\u6848\u5c0f\uff1b\u5176\u6b21\u8fd9\u9053\u9898\u548c**\u7389\u7c73\u7530**\u4e0d\u540c\u7684\u662f\u6b64\u9898\u6c42\u7684\u662f\u6700\u591a\u70ae\u5175\u6570\uff08\u662f\u6700\u4f18\u6027\u95ee\u9898\u6c42\u89e3\uff09\uff0c\u800c**\u7389\u7c73\u7530**\u95ee\u7684\u662f\u603b\u65b9\u6848\u6570\uff0c\u8fd9\u662f\u6709\u5f88\u5927\u533a\u522b\u7684\uff1b\u7136\u540e\u65e2\u7136\u662f\u662f\u6700\u4f18\u6027\u95ee\u9898\u6c42\u89e3\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u4ece\u524d\u4e24\u884c\u7684\u6240\u6709\u72b6\u6001\u4e2d\u6c42\u51fa\u4f7f\u5f53\u524d\u884c\u72b6\u6001\u6700\u4f18\u7684\u72b6\u6001\uff0c\u6ee1\u8db3\u9636\u6bb5\u6700\u4f18\u548c\u65e0\u540e\u6548\u6027\u539f\u5219\u3002\n\n#4.\n\u6700\u540e\u4ece\u6700\u540e\u4e00\u884c\uff08\u5373\u6700\u7ec8\u72b6\u6001\uff09\u4e2d\u627e\u51fa\u6700\u4f18\u72b6\u6001\uff0c\u8fd9\u5c31\u662f\u89e3\u3002\n\n#5.\u4ee3\u7801\uff1a\n\n    \n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nlong long f[105][500][500],sit[5000],n,k=0,ans=-1,m,map[5000],sum[5000];\nint main()\n{\n    scanf(\"%lld %lld\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"\\n\");\n        for(int j=1;j<=m;j++)\n        {\n            char s;\n            map[i]=map[i]<<1;\n            scanf(\"%c\",&s);\n            if(s=='H')map[i]=map[i]|1;//\u8fd9\u91cc\u8981\u8ba9H\u4e3a1\uff0cP\u4e3a0\uff0c\u8fd9\u6837\u65b9\u4fbf\u50a8\u5b58\u72b6\u6001\uff1b \n        }\n    }\n    for(int i=0;i<(1<<m);i++)//\u5904\u7406\u70ae\u5175\u653e\u7f6e\u65b9\u6848\uff08\u60c5\u51b5\uff09 \n    if(!(i&(i<<2))&&!(i&(i<<1)))\n    {\n        sit[++k]=i; //\u653e\u7f6e\u65b9\u6848 \n        int t=i;\n        while(t)\n        {\n            sum[k]+=t%2;//\u5f53\u524d\u72b6\u6001\u653e\u7f6e\u70ae\u5175\u6570\u91cf \n            t/=2;\n        }\n    }\n    for(int i=1;i<=k;i++)if(!(sit[i]&map[1]))f[1][1][i]=sum[i];//\u5904\u7406\u7b2c\u4e00\u884c\u7684\u72b6\u6001 \n    //\u4e0b\u9762\u4e00\u4e2afor\u662f\u5904\u7406\u7b2c\u4e8c\u884c\u7684\u72b6\u6001  \n    for(int i=1;i<=k;i++)//\u679a\u4e3e\u7b2c\u4e8c\u884c\u6240\u6709\u70ae\u5175\u653e\u7f6e\u60c5\u51b5 \n    if(!(sit[i]&map[2]))\n        for(int j=1;j<=k;j++)//\u679a\u4e3e\u7b2c\u4e00\u884c\u2026\u2026 \n        {\n            if(!(map[1]&sit[j])&&!(sit[i]&sit[j]))f[2][j][i]=sum[i]+sum[j];\n        }\n    for(int i=3;i<=n;i++)\n        for(int j=1;j<=k;j++)//\u679a\u4e3e\u5f53\u524d\u884c\u2026\u2026 \n        if(!(map[i]&sit[j]))\n            for(int l=1;l<=k;l++)//\u679a\u4e3e\u4e0a\u4e00\u884c\u2026\u2026 \n            if(!(sit[j]&sit[l])&&!(map[i-1]&sit[l]))\n                for(int p=1;p<=k;p++)//\u679a\u4e3e\u4e0a\u4e0a\u884c\u2026\u2026 \n                if(!(sit[p]&sit[l])&&!(map[i-2]&sit[p])&&!(sit[p]&sit[j]))\n    f[i][l][j]=max(f[i][l][j],f[i-1][p][l]+sum[j]);\n    for(int i=1;i<=k;i++)for(int j=1;j<=k;j++)ans=max(f[n][j][i],ans);//\u5904\u7406\u7b54\u6848 \n    printf(\"%lld\",ans);\n}\n\n```",
        "postTime": 1504870227,
        "uid": 25709,
        "name": "SNiFe",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u72b6\u6001\u538b\u7f29\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,m,ans;\nint field[1024];//\u5730\u56fe\nint d[2][1024][1024];//\u7ed3\u679c \u6eda\u52a8\u6570\u7ec4\nint valid[1024]; //\u662f\u5426\u6709\u6548\nint js(int x)\n{\nint s=0;\nwhile(x>0)\n{\ns+=x%2;\nx=x>>1;\n}\nreturn s;\n```\n}//\u6c42\u5404\u4f4d\u6570\u4e4b\u548c\n```cpp\nbool isvalid(int x)\n{\nwhile(x>0)\n{\nif(x%2==1){if(((x>>1)&1==1)||((x>>2)&1==1))return false;}\nx=x>>1;\n}\nreturn true;\n```\n}//\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n```cpp\nint main()\n{\ncin>>n>>m;\nfor(int i=1;i<=n;i++)\n{\nstring s;\ncin>>s;\nint d=0;\nfor(int j=0;j<m;j++)if(s[j]=='P')d=d|(1<<j);\nfield[i]=d;\n```\n}//\u8f93\u5165\u5730\u56fe\u5e76\u5b58\u8d77\u6765:m<n \u7528\u884c\u5b58\n```cpp\nfor(int i=0;i<(1<<m);i++)if(isvalid(i))valid[i]=true;\nfor(int i=1;i<=n;i++)\nfor(int j=0;j<(1<<m);j++)\n{\nint sum=js(j);\nif(valid[j]&&(~field[i]&j)==0)\nfor(int r1=0;r1<(1<<m);r1++)if(valid[r1]&&(j&r1)==0)for(int r2=0;r2<(1<<m);r2++)if(valid[r2]&&(j&r2)==0)\n{\nd[i%2][j][r1]=max(d[i%2][j][r1],d[(i-1)%2][r1][r2]+sum);//\u6eda\u52a8\u6570\u7ec4+\u52a8\u6001\u89c4\u5212\uff0c\u4e0d\u7528\u6eda\u52a8\u6570\u7ec4\u4f1a\u8d85\u65f6\nif(i==n)ans=max(ans,d[i%2][j][r1]);//\u7ed3\u679c\n}\n}\ncout<<ans;\nreturn 0;\n}\n```",
        "postTime": 1499779853,
        "uid": 26905,
        "name": "\u9648\u6636\u65ed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u5f88\u7ecf\u5178\u7684\u72b6\u538bDP\u53ef\u4ee5\u8bf4\u662f\u5165\u95e8\u9898\uff0c\u8fd8\u6709POJ\u7684CORN FIELD\uff0c\u90fd\u662f\u5341\u5206\u7ecf\u5178\uff0c\u4eca\u5929\u597d\u597d\u7814\u7a76\u4e86\u4e00\u4e0b\u72b6\u538bDP\uff0c\u65e0\u975e\u5c31\u662f\u5c06\u6240\u6709\u72b6\u6001\u7b5b\u4e00\u904d\uff0c\u9009\u51fa\u53ef\u7528\u72b6\u6001\u7136\u540e\u8fd0\u7528\u4f4d\u8fd0\u7b97\u5224\u65ad\u8be5\u72b6\u6001\u5f53\u524d\u662f\u5426\u53ef\u884c,\u63a8\u8350\u4e00\u7bc7\u535a\u5ba2  <http://blog.csdn.net/accry/article/details/6607703>\u3002\u8fd9\u9053\u9898\u6211\u4eec\u7528dp[i][j][k]\u8868\u793a\u7b2ci\u884c\u72b6\u6001\u4e3ak\uff0ci-1\u884c\u72b6\u6001\u4e3aj\uff0c\u7531\u4e8e\u5f53\u524d\u884c\u7684\u72b6\u6001\u662f\u5426\u53ef\u884c\u9700\u8981\u4e4b\u524d\u7684\u4e24\u884c\u6765\u51b3\u5b9a\uff0c\u6240\u4ee5\u672c\u6765\u8981\u5f004\u7ef4\u7684\u4f46\u662f\u7a7a\u95f4\u4f1a\u70b8\uff0c\u4f46\u662f\u65f6\u95f4\u4e0a\u662f\u53ef\u4ee5\u627f\u53d7\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u964d\u7ef4\uff0c\u591a\u4e00\u5c42\u679a\u4e3e\u3002\u600e\u4e48\u7b5b\u51fa\u6240\u6709\u53ef\u884c\u72b6\u6001\u5462\uff1f\u6211\u4eec\u77e5\u9053\uff0c\u5728\u540c\u4e00\u884c\uff0c\u8be5\u72b6\u6001\u53ef\u884c\u5f53\u4e14\u4ec5\u5f53\u76f8\u90bb\u5de6\u53f3\u4e24\u4e2a\u4e0d\u80fd\u653e\u6240\u4ee5\u6211\u4eec\u5224\u65adx & (x<<1) || x & (x << 2)\u662f\u5426\u8fd4\u56de\u771f\uff0c\u8fd9\u6837\u628a\u540c\u4e00\u5c42\u7684\u72b6\u6001\u5168\u90e8\u679a\u4e3e\u51fa\u6765\uff0c\u9009\u51fa\u53ef\u884c\u7684\u3002\u7136\u540e\u6211\u4eec\u9884\u5904\u7406\u51fa\u7b2c\u4e00\u884c\u7684\u7b54\u6848\uff0c\u63a5\u4e0b\u6765\u5c31\u662fDP\u4e86\uff0c\u6211\u4eec\u679a\u4e3e\u4e09\u884c\u7684\u72b6\u6001\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5224\u65ad\u5c31\u597d\u4e86\uff0c\u65b9\u7a0b\u4e3adp[i][k][t] = max(dp[i][k][t],dp[i-1][j][k] + num[t]);num\u4ee3\u8868\u5f53\u524d\u72b6\u6001\u6709\u591a\u5c11\u4e2a1\uff0c\u5373\u591a\u5c11\u4e2a1\n/*************************************************************************\n\n    > Author: Drinkwater-cnyali\n    > Created Time: 2017/5/25 16:47:42\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mem(a, b) memset((a), b, sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nconst int maxn = 100000;\nconst int inf = 0x3f3f3f3f;\nint n,m;\nint dp[110][70][70];\nint st[maxn];\nint s[maxn],cnt,sum;\nbool pd(int x)\n{\n    if(x & (x << 1))return 0;\n    if(x & (x << 2))return 0;\n    return 1;\n}\nbool check(int x,int i)\n{\n    if(x & st[i])return 0;\n    return 1;\n}\nint num[maxn];\nchar M[110][20];\nint main()\n{\n    //freopen(\"l.in\",\"r\",stdin);\n    //freopen(\"l.out\",\"w\",stdout);\n    while(scanf(\"%d%d\",&n,&m)!=EOF)\n    {\n        memset(dp,-1,sizeof(dp));\n        memset(st,0,sizeof(st));\n        memset(num,0,sizeof(num));\n        cnt = 0;\n        sum = 1<<m; \n        REP(i,0,sum-1)if(pd(i))s[++cnt] = i;\n        REP(i,1,n)\n            scanf(\"%s\",M[i]+1);\n        for(int i = 1; i <= n; ++i)\n            for(int j = 1; j <= m; ++j)\n            {\n                st[i] = 0;\n                for(j = 1;j<=m;++j)\n                    if(M[i][j] == 'H')st[i] += (1<<(j-1));\n            }\n        REP(i,1,cnt)\n        {\n            num[i] = __builtin_popcount(s[i]);\n            if(check(s[i],1))\n                dp[1][1][i] = num[i];        \n        }\n        REP(i,2,n)\n        {\n            REP(t,1,cnt)\n            {\n                if(!check(s[t],i))continue;\n                REP(j,1,cnt)\n                {\n                    if(s[t] & s[j])continue;\n                    REP(k,1,cnt)\n                    {\n                        if(s[t] & s[k])continue;\n                        if(dp[i-1][j][k] == -1)continue;\n                        dp[i][k][t] = max(dp[i][k][t],dp[i-1][j][k] + num[t]);\n                    }\n                }\n            }\n        }\n        int ans = 0;\n        REP(i,1,n)REP(j,1,cnt)REP(k,1,cnt)ans = max(ans,dp[i][j][k]);\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1495719147,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u7531\u4e8e\u662f\u6c42\u7684\u6700\u591a\u80fd\u653e\u7f6e\u7684\u70ae\u5175\u4e2a\u6570\uff0c\u5c31\u662f\u6c42\u67d0\u4e00\u4e2a\u72b6\u6001\u4e0b\uff0c\u5b83\u5bf9\u5e94\u7684\u70ae\u5175\u4e2a\u6570\u6700\u591a\uff0c\u6240\u4ee5\u5c31\u60f3\u5230dp\u65b9\u7a0b\u80af\u5b9a\u662f\u90a3\u79cddp[i+1]=max{dp[i-1]..}\u7684\u5f62\u5f0f\uff0c\u53c8\u8003\u8651\u5230\u6bcf\u4e00\u884c\n\n\n\u7684\u72b6\u6001\u53ea\u548c\u524d\u4e24\u884c\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u8003\u8651\u7528dp\u6765\u505a\uff0c\u4e0b\u9762\u8003\u8651\u5982\u4f55\u7528\u4e8c\u8fdb\u5236\u4f4d\u6765\u8868\u793a\u4e00\u4e2a\u72b6\u6001\u53ca\u8f6c\u79fb\u65b9\u7a0b\u3002\n\n\n\u5bf9\u4e8e\u539f\u59cb\u7684\u77e9\u9635\uff0c\u6211\u4eec\u75281\u6765\u8868\u793a\u53ef\u4ee5\u653e\u7f6e\u70ae\u5175\uff0c\u5373\u5bf9\u5e94\u56fe\u4e2d\u7684P\uff0c\u8fd9\u6837\u6bcf\u4e00\u884c\u90fd\u6709\u4e00\u4e2a\u53ef\u4ee5\u653e\u7f6e\u70ae\u5175\u7684\u72b6\u6001\uff0c\u5b58\u5230rstate[N]\u4e2d\uff0c\u7528\u6765check\u8be5\u884c\u7684\u72b6\u6001\u662f\u5426\u5408\u6cd5\u3002\n\n\n\u7531\u4e8e\u5f53\u524d\u884c\u548c\u524d\u4e24\u884c\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u5f97\u75283\u7ef4\u77e9\u9635\u6765\u4fdd\u5b58\u4e00\u4e2a\u72b6\u6001\u4e0b\u6700\u591a\u7684\u70ae\u5175\u4e2a\u6570\uff0c\u7528dp[i][curst][prest]\u8868\u793a\u5f53\u524d\u7b2ci\u884c\u72b6\u6001\u5bf9curst\uff0c\u524d\u4e00\u884c\u72b6\u6001\u4e3aprest\u7684\u6700\u5927\u70ae\u5175\u6570\u3002\n\n\n\u8f6c\u79fb\u65b9\u7a0b\u4e3adp[i][curst][prest]=max{dp[i-1][prest][preprest]}\uff0c\u8fd9\u6837\u6c42\u5230\u6700\u540e\u4e00\u884c\u4e4b\u540e\uff0c\u7b54\u6848\u5c31\u662f\u6700\u540e\u4e00\u884c\u6240\u6709\u72b6\u6001\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u3002\u7a0b\u5e8f\u521d\u59cb\u5316\u7684\u65f6\u5019\u9700\u8981\u5bf9\u7b2c\u4e00\u884c\n\n\n\u8fdb\u884c\u9884\u5904\u7406\uff0c\u8bbe\u7f6edp[0][st][0]=st\u5408\u6cd5&st\u4e2d1\u7684\u4e2a\u6570\u3002\u8fd9\u6837\u8fdb\u884c\u4e0b\u9762\u7684\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u7531\u4e8e0\u72b6\u6001\u80af\u5b9a\u662f\u548c\u6240\u6709\u72b6\u6001\u517c\u5bb9\u7684\uff0c\u6240\u4ee5\u5c31\u4e0d\u4f1a\u5f71\u54cd\u8ba1\u7b97\u7ed3\u679c\u3002\n\n\n```delphi\n\nvar \n    n,m,i,j,k,p,s,t    :longint;\n    a                :array[0..100,0..100] of longint;\n    map                :array[0..101] of longint;\n    list,num        :array[0..1050] of longint;\n    x                :string;\n    f                :array[0..100,0..100,0..100] of longint;\n    \nfunction get_num(x:longint):longint;\nvar sum                :longint;\nbegin\n    sum:=0;\n    while x>0 do\n    begin\n        if ((x and 1)<>0) then inc(sum);\n        x:=x>>1;\n    end;\n    exit(sum);\nend;\n\nfunction max(x,y:longint):longint;\nbegin\n    if x>y then exit(x) else exit(y);\nend;\n\nbegin\n    readln(n,m);\n    for i:=1 to n do\n    begin    \n        readln(x);\n        for j:=1 to m do \n            if x[j]='P' then map[i]:=(map[i]<<1) or 1\n            else if x[j]='H' then map[i]:=map[i]<<1;\n    end;\n    for i:=0 to (1<<m-1) do\n    begin\n        if (i and (i<<1)=0) and (i and (i<<2)=0) then\n        begin\n            list[t]:=i;\n            num[t]:=get_num(i);\n            inc(t);\n        end;\n    end;\n    for i:=0 to (t-1) do\n        if ((map[1] or list[i])=map[1]) then f[1,i,0]:=num[i];\n    for i:=2 to n do\n    for j:=0 to (t-1) do\n    begin\n        if (list[j] or map[i]=map[i]) then\n        begin\n            for k:=0 to (t-1) do\n            begin\n                if (list[j] and list[k]=0) then\n                begin\n                    for p:=0 to (t-1) do\n                    begin\n                        if (list[p] and list[k]=0) and (list[p] and list[j]=0) then\n                            f[i,j,k]:=max(f[i,j,k],f[i-1,k,p]+num[j]);\n                    end;\n                end;\n            end;\n        end;\n    end;\n    s:=0;\n    for j:=0 to (t-1) do\n    for k:=0 to (t-1) do\n        s:=max(s,f[n,j,k]);\n    writeln(s);\nend.\n\n```",
        "postTime": 1457686624,
        "uid": 13243,
        "name": "carl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u672c\u9898\u672c\u8d28\u4e0a\u5c31\u662fP1879\u7389\u7c73\u7530\u7684\u5347\u7ea7\u7248   \n\u601d\u60f3\u4e5f\u662f\u6b63\u89c4\u7684\u72b6\u538bdp  \n\u4f46\u662f\u56e0\u4e3a\u589e\u52a0\u5f71\u54cd\u8303\u56f4\uff0c\u4ee3\u7801\u53d8\u5f97\u66f4\u52a0\u590d\u6742  \n\u6211\u4eec\u7528f[x][i][j]\u8868\u793a\u7b2cx\u884c\u72b6\u6001\u4e3ai\uff0c\u7b2cx-1\u884c\u72b6\u6001\u4e3aj  \n\u663e\u7136\u9700\u8981`100*1024*1024`\u7a7a\u95f4\uff0cMLE   \n\u8003\u8651\u5230\u8be5\u5c42\u72b6\u6001\u4ec5\u4ec5\u7531\u4e0a\u4e00\u5c42\u72b6\u6001\u8f6c\u79fb  \n\u6240\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u538b\u6389\u534a\u7ef4  \n\u4e00\u5b9a\u6ce8\u610f\u5904\u7406\u597d\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u4e0d\u8981\u541d\u556c\u62ec\u53f7  \n\u672c\u4ee3\u7801\u56e0\u4e3a\u4f18\u5148\u7ea7\u95ee\u9898\u5f00O2\u4f1a30 ~~\u61d2\u5f97\u6539~~   \n\u8be6\u60c5\u89c1\u4ee3\u7801  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f[2][1<<10][1<<10],siz[1<<10],num[1<<10],a[110][1<<10];\ninline int get_num(int x){//\u8ba1\u7b97\u4e00\u4e2a\u72b6\u6001\u4e2d1\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u70ae\u5175\u7684\u6570\u91cf \n\tint cnt=0;\n\twhile(x)cnt+=x&1,x>>=1;\n\treturn cnt;\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint maxx=1<<m;\n\tfor(int i=1;i<=n;++i){\n\t\tchar ch=getchar();\n\t\twhile(ch!='P'&&ch!='H')ch=getchar();//\u8bfb\u53d6\u5947\u5947\u602a\u602a\u7684\u5b57\u7b26 \n\t\tint all=0;\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tall=(all<<1)|(ch=='P');//\u5c06\u672c\u884c\u72b6\u6001\u538b\u4e3a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u53ef\u653e\u7f6e\u4e3a1 \n\t\t\tch=getchar();\n\t\t}\n\t\tint cnt=0;\n\t\tfor(int j=0;j<maxx;++j)\n\t\t\tif(!(j&(j<<1))&&!(j&(j<<2))&&!(j&(j>>1))&&!(j&(j>>2))&&((j&all)==j))\n\t\t\t\t//\u548c\u5de6\u53f3\u4e24\u4f4d\u7684\u72b6\u6001\u90fd\u4e0d\u51b2\u7a81\uff0c\u5e76\u4e14\u5408\u89c4\u653e\u7f6e \n\t\t\t\ta[i][++cnt]=j;//\u538b\u5165\u672c\u884c\u53ef\u7528\u72b6\u6001 \n\t\tsiz[i]=cnt;//\u7edf\u8ba1\u53ef\u7528\u72b6\u6001\u6570\u76ee \n\t}\n\tfor(int i=0;i<=maxx+1;++i)\n\t\tnum[i]=get_num(i);//\u89c1\u4e0a \n\tfor(int i=1;i<=siz[1];++i)\n\t\tfor(int j=1;j<=siz[2];++j){//\u9884\u5904\u7406\u524d\u4e24\u884c\u7684\u5408\u6cd5\u72b6\u6001 \n\t\t\tint x=a[1][i],y=a[2][j];\n\t\t\tif(!(x&y))//\u4e24\u79cd\u72b6\u6001\u6ca1\u6709\u5217\u7684\u91cd\u590d \n\t\t\t\tf[0][j][i]=num[x]+num[y];//\u70ae\u5175\u6570\u76ee\u76f8\u52a0 \n\t\t}\n\tint cnt=0;\n\tfor(int i=3;i<=n;++i){\n\t\tcnt^=1;//\u538b\u7f29\u4e00\u7ef4 \n\t\tfor(int j=1;j<=siz[i];++j)\n\t\t\tfor(int k=1;k<=siz[i-1];++k)\n\t\t\t\tfor(int l=1;l<=siz[i-2];++l)\n\t\t\t\t\tif((!(a[i][j]&a[i-1][k]))&&(!(a[i][j]&a[i-2][l]))&&(!(a[i-1][k]&a[i-2][l])))//\u4e09\u884c\u72b6\u6001\u90fd\u6ca1\u6709\u5217\u7684\u91cd\u590d \n\t\t\t\t\t\tf[cnt][j][k]=max(f[cnt][j][k],f[cnt^1][k][l]+num[a[i][j]]);//\u548c\u4e0a\u4e00\u884c\u7684\u72b6\u6001\u52a0\u653e\u7f6e\u70ae\u5175\u6570\u76ee\u53d6max \n\t}\n\tint ans=0;\n\tfor(int i=1;i<=siz[n];++i)\n\t\tfor(int j=1;j<=siz[n-1];++j)\n\t\t\t\tans=max(ans,f[cnt][i][j]);//\u7edf\u8ba1\u7b54\u6848 \n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1566198917,
        "uid": 138543,
        "name": "\u6597\u795e_\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "\u72b6\u538bdp-2"
    },
    {
        "content": "# \u70ae\u5175\u9635\u5730\u9898\u89e3 \n\n\u72b6\u538bDP\u7684\u6076(mu)\u5fc3(ban)\u9898,\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u9898\u76ee\u4e2d\uff1am<=10\n\n\u65e0\u7591\uff0c\u80af\u5b9a\u662f\u8fd9\u4e00\u7ef4\u8868\u72b6\u6001\uff0c\n\n\u9898\u76ee\u4e2d\uff0c\u82e5\u5728\u4e00\u70b9\u5e03\u7f6e\u70ae\u5175\uff0c\u5219\u5de6\u53f3\u56db\u70b9\u4e0d\u80fd\u5e03\u7f6e\uff08\u53ef\u4ee5\u9884\u5904\u7406\u7c97\u6765\uff09\n\n\u4f46\u95ee\u9898\u662f\u4e0a\u4e0b\u56db\u70b9\u4e5f\u4e0d\u80fd\u5e03\u7f6e\uff0c\n\n\u6240\u4ee5\u5728DP\u65f6\u6211\u4eec\u9700\u8981\u679a\u4e3e\u4e0a\u4e0a\u884c\uff0c\u4e0a\u4e00\u884c\uff0c\u8fd9\u4e00\u884c\u7684\u72b6\u6001\uff0c\n\ndp\u6570\u7ec4\u4e5f\u8981\u7528\u4e24\u7ef4\u8868\u793a\u8fd9\u4e00\u884c\u548c\u4e0a\u4e00\u884c\u7684\u72b6\u6001\uff0c\n\n\u4f46\u5982\u679c\u7528\u4e09\u7ef4\u6570\u7ec4\u5219\u4f1a\u7206\u7a7a\u95f4\uff0c\u7528\u5faa\u73af\u6570\u7ec4\u7701\u4e00\u7701\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=106,M=1026; \nint n,m,o1=2,o2=0,o3=1,ans=-1,t,p,q,w,g[N],h[M],num[N],flag[N][M],dp[4][M][M];\nchar c[14];\ninline int read(){\n   int T=0,F=1; char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-') F=-1; ch=getchar();}\n   while(ch>='0'&&ch<='9') T=(T<<3)+(T<<1)+(ch-48),ch=getchar();\n   return F*T;\n}\nint main(){\n    n=read(),m=read();\n    for(int i=0;i<(1<<m);++i){\n        p=i,q=0;\n        while(p) q+=(p&1),p>>=1;\n        h[i]=q;\n    }//\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u79cd\u72b6\u6001\u6709\u51e0\u4e2a\u70ae\u5175\n    for(int i=1;i<=n;++i){\n        scanf(\"%s\",c);\n        for(int j=0;j<m;++j) g[i]+=((c[m-j-1]=='P')<<j);\n        //g[],\u6c42\u51fa\u5e73\u539f\u4e0a\u7684\u6240\u6709\u53ef\u80fd\u72b6\u6001\n        for(int j=0;j<=g[i];++j)\n            if(((j&g[i])==j)&&(!((j<<1)&j))&&(!((j<<2)&j))) flag[i][++num[i]]=j;\n        //flag[i][]:\u7b2ci\u884c,\u6ee1\u8db3\u4e0d\u4e92\u76f8\u6253\u5230\u7684\u6240\u6709\u72b6\u6001\n    } \n    memset(dp,-1,sizeof(dp));\n    //dp[i][j][k]:\u7b2ci\u884c,\u8fd9\u4e00\u884c\u72b6\u6001\u4e3aj,\u4e0a\u4e00\u884c\u72b6\u6001\u4e3ak,\u7b2c\u4e00\u4f4d\u7528\u5faa\u73af\u6570\u7ec4\u7701\u7a7a\u95f4\n    for(int i=1;i<=num[1];++i) dp[0][flag[1][i]][0]=h[flag[1][i]];\n    for(int i=1;i<=num[1];++i){\n        p=flag[1][i];\n        for(int j=1;j<=num[2];++j){\n            q=flag[2][j];\n            if(p&q) continue;\n            dp[1][q][p]=max(dp[1][q][p],dp[0][p][0]+h[q]);\n        }\n    }  \n    //\u5904\u7406\u7b2c\u4e00\u4e8c\u884c\u7684dp\u521d\u503c\uff08p&q\u4ee3\u8868\u540c\u4e00\u5217\u6709\u70ae\u5175\uff09\n    for(int i=3;i<=n;++i){\n        t=o1,o1=o2,o2=o3,o3=t;\n        for(int j=1;j<=num[i-2];++j){\n            p=flag[i-2][j];\n            for(int k=1;k<=num[i-1];++k){\n                q=flag[i-1][k];\n                for(int ww=1;ww<=num[i];++ww){\n                    w=flag[i][ww];\n                    if((p&q)||(p&w)||(q&w)) continue;//\u540c\u4e00\u5217\u6709\u70ae\u5175\u5c31\u8df3\u8fc7\n                    dp[o3][w][q]=max(dp[o3][w][q],dp[o2][q][p]+h[w]);               \n                }\n            }\n        }\n    }\n    for(int i=1;i<=num[n-1];++i){\n        p=flag[n-1][i];\n        for(int j=1;j<=num[n];++j){\n            q=flag[n][j];\n            if(p&q) continue;\n            ans=max(ans,dp[o3][q][p]);\n        }\n    }  \n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1565228648,
        "uid": 44180,
        "name": "ljk123",
        "ccfLevel": 0,
        "title": "\u70ae\u5175\u9635\u5730\u9898\u89e3"
    },
    {
        "content": "## \u4e00\u9053\u597d\u9898\n\n\u5148\u819c\u4e00\u53d1$HZY \\space JULAO$\u3002$STO \\space  HZY \\space ORZ$  %%%%%%\n\n\u9898\u76ee\u5f88\u7b80\u5355\uff1a\u4e00\u4e2a$N*M$\u7684\u533a\u57df\uff0c\u5206\u5c71\u5730\u548c\u5e73\u5730\u3002\u70ae\u5175\u9635\u5730\u53ea\u80fd\u5efa\u5728\u5e73\u5730\uff0c\u4e14\u653b\u51fb\u8303\u56f4\u4e3a\u4e0a\u4e0b\u524d\u540e$2$\u683c\u3002\u95ee\u6700\u591a\u80fd\u5efa\u591a\u5c11\u4e2a\u70ae\u5175\u9635\u5730\u3002\n\n\n\u5f88\u660e\u663e~~\u4e2a\u9b3c~~\uff0c\u7b2c$i$\u884c\u7684\u72b6\u6001\u603b\u6570\u53ea\u4e0e\u524d\u4e24\u884c\u7684\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u4ee4$sit_i$\u4e3a\u5355\u72ec\u8003\u8651\u4e00\u884c\u65f6\u5408\u6cd5\u72b6\u6001\uff0c\u538b\u7f29\u6210\u4e8c\u8fdb\u5236\u540e\u7684\u6570\uff0c\u5b9a\u4e49$f_{i,j,k}$\u4e3a\uff1a**\u5728\u7b2ci\u884c\uff0c\u7b2ci-1\u884c\u72b6\u6001\u4e3a$sit_j$\uff0c\u7b2ci-2\u884c\u72b6\u6001\u4e3a$sit_k$\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u591a\u53ef\u4ee5\u653e\u7f6e\u7684\u70ae\u5175\u8425\u5730\u4e2a\u6570**\n\n~~\u5f88\u96be~~\u5f97\u51fa\uff0c $ f_{i,j,k} = max\\{f_{i-1,k,l}+sum_j\\} $,\u5176\u4e2d$sit[j],sit[k],sit[l]$\u90fd\u5408\u6cd5\u4e14\u5171\u5b58\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u548c\u4ee3\u7801\u6ce8\u91ca\n\n\u611f\u8c22$hzy \\space julao$\u7684\u601d\u8def\u548c\u63d0\u4f9b\u7684\u5e2e\u52a9 @a999999\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint m, n;\nint map[101], sum[1000001], cnt, sit[10000001];\nlong long f[1024][150][150], ans;\n//f[i][j][k]\uff1a\u5728\u7b2ci\u884c\uff0c\u7b2ci-1\u884c\u72b6\u6001\u4e3asit[j]\uff0c\u7b2ci-2\u884c\u72b6\u6001\u4e3asit[k]\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u591a\u53ef\u4ee5\u653e\u7f6e\u7684\u70ae\u5175\u4e2a\u6570\nchar tmp;\n\nvoid init(const int& now, const int& b, const int& tot)//\u521d\u59cb\u5316(\u6c42sit\u6570\u7ec4)\n\t\t\t\t\t\t\t\t\t\t\t\t\t   // now \u672c\u884c\u7684\u7b2cnow\u4e2a\uff1bb \u4e8c\u8fdb\u5236\u4e0b\u7684\u72b6\u6001\uff1btot \u8bb0\u5f55\u70ae\u5175\u4e2a\u6570\n{\n\tif (now >= m)//\u521d\u59cb\u5316\u5b8c\u672c\u884c\n\t{\n\t\tsit[++cnt] = b;//\u8bb0\u5f55\u72b6\u6001\n\t\tsum[cnt] = tot;//\u4fdd\u5b58\u8be5\u72b6\u6001\u4e2d\u7684\u70ae\u5175\u7684\u4e2a\u6570\n\t\treturn;\n\t}\n\tinit(now + 1, b, tot);\n\tinit(now + 3, b | (1 << now), tot + 1);\n}\n\nlong long dp()\n{\n\t//\u521d\u59cb\u5316f\u6570\u7ec4\u7684\u7b2c\u4e00\u884c\n\tfor (int i = 1; i <= cnt; i++)\n\t\tif (!(map[1] & sit[i]))\n\t\t\tf[1][i][1] = sum[i];\n\tfor (int i = 2; i <= n; i++)\n\t\tfor (int j = 1; j <= cnt; j++)//\u679a\u4e3e\u7b2ci\u5c42\u72b6\u6001\n\t\t\tif (!(map[i] & sit[j]))//\u6b64\u72b6\u6001\u5408\u6cd5\n\t\t\t\tfor (int k = 1; k <= cnt; k++)//\u679a\u4e3e\u4e0a\u4e00\u5c42\u72b6\u6001\n\t\t\t\t\tif (!((map[i - 1] & sit[k]) | (sit[j] & sit[k])))//\u4e0a\u4e00\u5c42\u72b6\u6001\u5408\u6cd5 \u4e14 \u4e0d\u4e0e\u8be5\u5c42\u72b6\u6001\u51b2\u7a81\n\t\t\t\t\t\tfor (int l = 1; l <= cnt; l++)\n\t\t\t\t\t\t\tif (!((map[i - 2] & sit[l] | (sit[j] & sit[l]) | (sit[k] & sit[l]))))//\u4e0a\u4e0a\u5c42\u72b6\u6001\u5408\u6cd5 \u4e14 \u4e0d\u4e0e\u8be5\u5c42\u4e0e\u4e0a\u5c42\u51b2\u7a81\n\t\t\t\t\t\t\t\tf[i][j][k] = max(f[i][j][k], f[i - 1][k][l] + sum[j]);\n\tfor (int j = 1; j <= cnt; j++)//\u679a\u4e3e\u7b2ci\u5c42\u72b6\u6001\n\t\tif (!(map[n] & sit[j]))//\u6b64\u72b6\u6001\u5408\u6cd5\n\t\t\tfor (int k = 1; k <= cnt; k++)//\u679a\u4e3e\u4e0a\u4e00\u5c42\u72b6\u6001\n\t\t\t\tif (!((map[n - 1] & sit[k]) | (sit[j] & sit[k])))//\u4e0a\u4e00\u5c42\u72b6\u6001\u5408\u6cd5 \u4e14 \u4e0d\u4e0e\u8be5\u5c42\u72b6\u6001\u51b2\u7a81\n\t\t\t\t\tans = max(ans, f[n][j][k]);\n\treturn ans;\n}\n\nint main()\n{\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\tcin >> tmp, map[i] = tmp == 'H' ? (map[i] << 1) + 1 : map[i] << 1;\n\t\t\t//\u5982\u679c\u8be5\u70b9\u4e3a\u5c71\u4e18\uff0c\u5219\u5176\u4e8c\u8fdb\u5236\u72b6\u6001\u8bbe\u4e3a1\uff0c\u5426\u5219\u8bbe\u4e3a0\n\tinit(0, 0, 0);\n\tcout << dp();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1564041708,
        "uid": 84788,
        "name": "Jeblqr",
        "ccfLevel": 5,
        "title": "[NOI2001]\u70ae\u5175\u9635\u5730\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "P2704 \u70ae\u5175\u9635\u5730\uff1a\n\n\u9884\u5904\u7406\u72b6\u6001+\u533a\u95f4DP\n\u663e\u7136\u672c\u884c\u7684\u72b6\u6001\u4e0e\u4e0a\u9762\u4e24\u884c\u76f8\u5173\u8fde\uff0c\n\n- \u8bbe\u8ba1\u72b6\u6001f[i][j][k]\u8868\u793a\u5f53\u524d\u7b2ci\u884c\uff0c\u72b6\u6001\u662fj\uff0c\u518d\u4e0a\u4e00\u884c\u72b6\u6001\u662fk\uff0c\u6700\u591a\u603b\u5171\u653e\u7684\u6570\u76ee\n\n- \u663e\u7136\u662f\u4ecef[i-1][k][w]\u8f6c\u79fb\u800c\u6765 \uff0c\u5e76\u4e14\u663e\u7136 k,w,j\u5fc5\u987b\u6709\u4e00\u5b9a\u7684\u7ea6\u675f\u6761\u4ef6\n\n\n - j,k,w\u6ee1\u8db3\u5728\u8be5\u884c\u5185\u6bcf\u4e24\u4e2a1\u4e4b\u95f4\u76f8\u5dee\u81f3\u5c112\u683c\u5b50\u4e14\u662fH\u51fa\u6ca1\u67091\n \n-  j,k,w\u5728\u7b2cj|1<=j<=m\u5217\u4e0d\u80fd\u6709\u70ae\u5175\u91cd\u590d\u6392\u653e(\u6700\u591a\u4e09\u4e2a\u683c\u5b50\u6709\u4e00\u4e2a)\n \n\n- \u8f6c\u79fb\u5c31\u662ff[i][j][k]=max{f[i-1][k][w]+count(j)}\n\n\u8bbe\u51fd\u6570check0()//\u5224\u65ad\u70ae\u5175\u662f\u5426\u53ef\u4ee5\u5728\u8be5\u884c\u6b63\u786e\u5b89\u653e(\u5730\u5f62\u7684\u9650\u5236) \n\n```\n\nbool check0(int line,int Base) //\u5224\u65ad\u70ae\u5175\u662f\u5426\u53ef\u4ee5\u5728\u8be5\u884c\u6b63\u786e\u5b89\u653e(\u5730\u5f62\u7684\u9650\u5236) \n{\n\tif (line<1) return true;\n\tif ((Base&mp[line])!=0) return false;\n\treturn true;\n}\n```\n\u8bbe\u51fd\u6570check1()//\u5224\u65ad\u540c\u884c\u662f\u5426\u6ee1\u8db3\u4e24\u4e2a1\u4e4b\u95f4\u81f3\u5c11\u67092\u4e2a0 \n```\n\u5c31\u662f\u8fd9\u6837\uff1a\nbool check1(int x) //\u5224\u65ad\u540c\u884c\u662f\u5426\u6ee1\u8db3\u4e24\u4e2a1\u4e4b\u95f4\u81f3\u5c11\u67092\u4e2a0 \n{\n\tif ((x&(x<<1))||(x&(x<<2))) return false;\n\telse return true;\n}\n```\ncheck2()//\u5224\u65ad\u4e09\u4e2a\u6709\u6ca1\u6709\u5176\u4e2d\u4e24\u4e2a\uff08\u542b\uff09\u4ee5\u4e0a\u662f1\u7684 \n```\nbool check2(int a,int b,int c) //\u5224\u65ad\u4e09\u4e2a\u6709\u6ca1\u6709\u5176\u4e2d\u4e24\u4e2a\uff08\u542b\uff09\u4ee5\u4e0a\u662f1\u7684 \n{\n\tif ((a&b)!=0) return false;\n\tif ((a&c)!=0) return false;\n\tif ((b&c)!=0) return false;\n\treturn true; \n}\n```\n\n\n\u6734\u7d20\u7b97\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\n\n```\n# include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=105,MAXM=10;\nint mp[MAXN],f[2][1<<MAXM][1<<MAXM];\nint n,m,Bits[1<<MAXM];\nchar s[MAXM];\nint count_(int x)\n{\n    int ret=0;\n    while (x){ x=x&(x-1); ret++;}\n    return ret;\n}\nint count(int x)\n{\n    return Bits[x];\n}\nbool check1(int x) //\u5224\u65ad\u540c\u884c\u662f\u5426\u6ee1\u8db3\u4e24\u4e2a1\u4e4b\u95f4\u81f3\u5c11\u67092\u4e2a0 \n{\n    if ((x&(x<<1))||(x&(x<<2))) return false;\n    else return true;\n}\nbool check2(int a,int b,int c) //\u5224\u65ad\u4e09\u4e2a\u6709\u6ca1\u6709\u5176\u4e2d\u4e24\u4e2a\uff08\u542b\uff09\u4ee5\u4e0a\u662f1\u7684 \n{\n    if ((a&b)!=0) return false;\n    if ((a&c)!=0) return false;\n    if ((b&c)!=0) return false;\n    return true; \n}\nbool check0(int line,int Base) //\u5224\u65ad\u70ae\u5175\u662f\u5426\u53ef\u4ee5\u5728\u8be5\u884c\u6b63\u786e\u5b89\u653e(\u5730\u5f62\u7684\u9650\u5236) \n{\n    if (line<1) return true;\n    if ((Base&mp[line])!=0) return false;\n    return true;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;i++) {\n        scanf(\"%s\",s); int len=strlen(s);\n        int tmp=0;\n        for (int j=0;j<len;j++)\n        tmp=(tmp<<1)+(s[j]=='H'?1:0);\n        mp[i]=tmp; \n    }\n    for (int i=0;i<(1<<m);i++) Bits[i]=count_(i);\n    int p=1;\n    for (int i=1;i<=n;i++,p^=1)  {\n        for (int j=0;j<(1<<m);j++) {\n            if (check1(j)==false||check0(i,j)==false) continue;\n            for (int k=0;k<(1<<m);k++) {\n                if (check1(j)==false||check0(i-1,k)==false) continue;\n                for (int w=0;w<(1<<m);w++) {\n                    if (check1(w)==false||check0(i-2,w)==false) continue;\n                    if (check2(j,k,w)==false) continue;\n                    f[p][j][k]=max(f[p^1][k][w]+count(j),f[p][j][k]);\n                }\n            }\n        }\n    }\n    int ans=0;\n    for (int i=0;i<(1<<m);i++)\n     for (int j=0;j<(1<<m);j++)\n      ans=max(ans,f[n&1][i][j]);\n    printf(\"%d\\n\",ans);\n    return 0;\n } \n```\n\u800c\u663e\u7136\u8fd9\u6837\u505a\u4f1aTle,\u590d\u6742\u5ea6\u662fO(n*8^m)\n\n\u8003\u8651\u4f18\u5316\u5c31\u662f\u53d1\u73b0\u6bcf\u4e00\u884c\u6709\u4e00\u4e9b\u72b6\u6001\u662f\u53ea\u8981\u679a\u4e3e\u4e00\u6b21\u5c31\u884c\u4e86\u5c31\u662f\n\n\u53ea\u548c\u672c\u884c\u7684\u7279\u5f81\u3001\u5730\u5f62\u6709\u5173\u7cfb\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u4f18\u5316\u5230AC\u7684\u5730\u6b65\u4e86\n\n\n\u6ce8\u610f\u7384\u5b66\u6eda\u52a8\u6570\u7ec4\n\n```\n# include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=105,MAXM=10;\nint mp[MAXN],f[2][1<<MAXM][1<<MAXM];\nint n,m,Bits[1<<MAXM];\nchar s[MAXM];\nint run[MAXN][1<<MAXM+1];\nint num[MAXN];\nint count_(int x)\n{\n\tint ret=0;\n\twhile (x){ x=x&(x-1); ret++;}\n\treturn ret;\n}\nint count(int x)\n{\n\treturn Bits[x];\n}\nbool check1(int x) //\u5224\u65ad\u540c\u884c\u662f\u5426\u6ee1\u8db3\u4e24\u4e2a1\u4e4b\u95f4\u81f3\u5c11\u67092\u4e2a0 \n{\n\tif ((x&(x<<1))||(x&(x<<2))) return false;\n\telse return true;\n}\nbool check2(int a,int b,int c) //\u5224\u65ad\u4e09\u4e2a\u6709\u6ca1\u6709\u5176\u4e2d\u4e24\u4e2a\uff08\u542b\uff09\u4ee5\u4e0a\u662f1\u7684 \n{\n\tif ((a&b)!=0) return false;\n\tif ((a&c)!=0) return false;\n\tif ((b&c)!=0) return false;\n\treturn true; \n}\nbool check0(int line,int Base) //\u5224\u65ad\u70ae\u5175\u662f\u5426\u53ef\u4ee5\u5728\u8be5\u884c\u6b63\u786e\u5b89\u653e(\u5730\u5f62\u7684\u9650\u5236) \n{\n\tif (line<1) return true;\n\tif ((Base&mp[line])!=0) return false;\n\treturn true;\n}\nvoid init()\n{\n\tmemset(run,0,sizeof(run));\n\tmemset(num,0,sizeof(num));\n\tfor (int i=1;i<=n;i++)\n\t for (int B=0;B<(1<<m);B++)\n\t  if (check0(i,B)&&check1(B)) run[i][++num[i]]=B;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++) {\n\t\tscanf(\"%s\",s); int len=strlen(s);\n\t\tint tmp=0;\n\t\tfor (int j=0;j<len;j++)\n\t\ttmp=(tmp<<1)+(s[j]=='H'?1:0);\n\t\tmp[i]=tmp; \n\t}\n\tfor (int i=0;i<(1<<m);i++) Bits[i]=count_(i);\n\tinit();\n\tint p=1;\n\tfor (int i=1;i<=n;i++,p^=1)  {\n\t\tfor (int _j=1;_j<=num[i];_j++) {\n\t\t\tint j=run[i][_j];\n\t\t\tfor (int _k=1;_k<=num[i-1];_k++) {\n\t\t\t\tint k=run[i-1][_k];\n\t\t\t\tfor (int _w=1;_w<=num[i-2];_w++) {\n\t\t\t\t\tint w=run[i-2][_w];\n\t\t\t\t\tif (check2(j,k,w)==false) continue;\n\t\t\t\t\tf[p][j][k]=max(f[p^1][k][w]+count(j),f[p][j][k]);\n\t\t\t\t}\n\t\t\t\tint w;\n\t\t\t\tif (i-2<=0) w=0;\n\t\t\t\tif (check2(j,k,w)==false) continue;\n\t\t\t\tf[p][j][k]=max(f[p^1][k][w]+count(j),f[p][j][k]);\n\t\t\t}\n\t\t\tint k;\n\t\t\tif (i-1<=0) k=0;\n\t\t\tfor (int _w=1;_w<=num[i-2];_w++) {\n\t\t\t\tint w=run[i-2][_w];\n\t\t\t\tif (check2(j,k,w)==false) continue;\n\t\t\t\tf[p][j][k]=max(f[p^1][k][w]+count(j),f[p][j][k]);\n\t\t\t}\n\t\t\tint w;\n\t\t\tif (i-2<=0) w=0;\n\t\t\tif (check2(j,k,w)==false) continue;\n\t\t\tf[p][j][k]=max(f[p^1][k][w]+count(j),f[p][j][k]);\n\t\t}\n\t}\n\tint ans=0;\n\tfor (int i=0;i<(1<<m);i++)\n\t for (int j=0;j<(1<<m);j++)\n\t  ans=max(ans,f[n&1][i][j]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n } \n ```",
        "postTime": 1540726001,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "#### \u662f\u4e2a\u72b6\u6001\u538b\u7f29\u7684\u5165\u95e8\u9898\uff1f\n\n#### \u8fd9\u91cc\u4e00\u4e2a\u65b0\u624b\uff0c\u521a\u521a\u63a5\u89e6\u72b6\u538b\u5982\u679c\u6709\u8bf4\u9519\u7684\u4e5f\u8bf7\u6307\u51fa\u3002\n\n#### \u5927\u6982\u7684\u505a\u6cd5\u5c31\u662f\u5148\u5904\u7406\u6bcf\u4e00\u884c\u53ef\u80fd\u7684\u6446\u653e\u65b9\u5f0f\uff1a\u5148\u4e0d\u7528\u7ba1\u5730\u5f62\uff0c\u76f4\u63a5\u4ece0\u52302^m-1\u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001\u4e4b\u540e\u7528\u4f4d\u8fd0\u7b97\u53bb\u6389\u90a3\u4e9b\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\u3002\n\n#### \u53ef\u4ee5\u770b\u51fa\u8fd9\u91cc\u9762\u6bcf\u4e00\u884c\u65b0\u7684\u653e\u6cd5\u90fd\u53ea\u548c\u4e0a\u4e24\u884c\u6709\u5173\u3002\u4e4b\u540e\u5f00\u59cbdp\uff1af[i][j][k]\u8868\u793a\u8fd9\u4e09\u884c\u7684\u4e00\u7ec4\u4e2d\u6700\u4e0b\u9762\u7684\u4e00\u884c\u662f\u7b2ci\u884c\uff0c\u540c\u65f6\u5012\u6570\u7b2c\u4e8c\u884c\u7684\u72b6\u6001\u662fj\u3001\u5012\u6570\u7b2c\u4e00\u884c\u7684\u72b6\u6001\u662fk\uff08\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff09\u3002\n\n#### \u53ef\u4ee5\u770b\u51fadp\u65b9\u7a0b\u662ff[i][j][k]=max(f[i][j][k],f[i-1][l][j]+cnt[k]) //\u5176\u4e2dl\u662f\u53ef\u4ee5\u6210\u7acb\u7684\u6446\u653e\u65b9\u5f0f\uff08\u7528\u4e00\u5806for\u5faa\u73af\u6765\u679a\u4e3e\u5c31\u53ef\u4ee5\uff0c\u590d\u6742\u5ea6\u5e76\u4e0d\u4f1a\u7206\u70b8\uff09\n\n#### \u4e4b\u540e\u8f93\u51fa\u7ed3\u679c\u5373\u53ef\n",
        "postTime": 1516785832,
        "uid": 83442,
        "name": "xxxxxxx__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u60f3\u4e0d\u5230\u81ea\u5df1\u4e5f\u53ef\u4ee5\u67d3\u6307noi\u7684\u9898\u76ee\n\n\u53c8\u662f\u8c03\u4e86\u5f88\u4e45\n\n\u8003\u8651\u72b6\u538b\n\n\u56e0\u4e3a\u6bcf\u4e00\u884c\u7684\u72b6\u6001\u4e4b\u540e\u524d\u4e24\u884c\u6709\u5173 \u6240\u4ee5\u53ea\u9700\u8981\u8bb0\u5f55\u524d\u4e24\u884c\u7684\u5c31\u597d\u4e86\n\n\u6bcf\u4e2a\u72b6\u6001\u7528\u4e8c\u8fdb\u5236\u6765\u5b58 \u90a3\u8fd9\u6837\u5c31\u9700\u89811024\\*1024\\*n\u7684\u7a7a\u95f4\n\n\u6240\u4ee5\u6eda\u52a8\u4e00\u4e0b\n\nf[i][j][k]\u8868\u793a\u7b2ci\u884c\u72b6\u6001\u4e3aj\uff0c\u7b2ci-1\u884c\u72b6\u6001\u4e3ak\u7684\u7b54\u6848\n\n\u90a3\u4e48\u8f6c\u79fb\u663e\u7136\n\nf[i+1][l][j]=max(f[i][j][k]+get[l]) \n\nl\u662f\u679a\u4e3e\u7684\u4e00\u4e2a\u72b6\u6001\n\nget\u6570\u7ec4\u9884\u5904\u7406 get[i]\u8868\u793a\u4e8c\u8fdb\u5236\u4e0bi\u76841\u7684\u4e2a\u6570\n\n\u518d\u9884\u5904\u7406\u4e00\u4e2apd\u6570\u7ec4\n\npd[i]\u8868\u793a\u67d0\u4e2ai\u72b6\u6001\u662f\u5426\u53ef\u884c\n\n\u5177\u4f53\u53ef\u4ee5\u770b\u6d45\u663e\u6613\u61c2\u7684\u4ee3\u7801\n\n\n```cpp\n-- #include<cstdio>\n- #include<algorithm>\n- #include<cstring>\n- using namespace std;\n- char c;\n- int n,m,i,j,k,t,l,w,q,s;\n- int p[104],pd[1026],get[1026];\n- int f[2][1024][1024];\n- bool check(int s) {\n- if (s&(s>>1)||s&(s<<1)||s&(s>>2)||s&(s<<2)) return false;\n- return true;\n- }\n- int gett(int x){\n- int sum=0;\n- int j=1;\n- while (x) {\n- if ((x&j)!=0) {\n- x-=j;\n- sum++;}\n- j*=2;\n- }\n- return sum;\n- }\n- int main(){\n- //freopen(\"1.in\",\"r\",stdin);\n- //freopen(\"1.out\",\"w\",stdout);\n- scanf(\"%d%d\\n\",&n,&m);\n- for (i=1;i<=n;i++) {\n- for (j=1;j<=m;j++) {\n- scanf(\"%c\",&c);\n- if (c=='H') p[i]+=1<<(j-1);\n- }\n- scanf(\"\\n\");\n- }\n- s=(1<<m)-1;\n- for (i=0;i<=s;i++) get[i]=gett(i);\n- for (i=0;i<=s;i++)\n- if (check(i)) pd[i]=1;\n- for (j=0;j<=s;j++)\n- for (k=0;k<=s;k++)\n- if (pd[j]&&pd[k]&&!(j&p[2])&&!(k&p[1])) f[0][j][k]=get[j]+get[k];\n- w=0; q=1;\n- for(int i=2;i<=n-1;i++){\n- w=q;\n- q=w^1;\n- for(int j=0;j<=s;j++)\n- if (!(j&p[i])&&pd[j])\n- for(int k=0;k<=s;k++)\n- if (!(k&p[i-1])&&pd[k]&&!(j&k))\n- for(int l=0;l<=s;l++)\n- if (!(l&p[i+1])&&pd[l]&&!(l&j)&&!(l&k)){\n- f[w][l][j]=max(f[w][l][j],f[q][j][k]+get[l]);\n- }\n- memset(f[q],0,sizeof(f[q]));\n- }\n- int ans=0;\n- for (i=0;i<=s;i++)\n- for (j=0;j<=s;j++)\n- ans=max(ans,f[w][i][j]);\n- printf(\"%d\\n\",ans);\n- }\n```",
        "postTime": 1511581477,
        "uid": 30372,
        "name": "chicken",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u4efb\u52a1\uff1a\u5728\u4e00\u4e2a\u6709\u4e9b\u4f4d\u7f6e\u4e0d\u80fd\u653e\u7684\u68cb\u76d8\u4e0a\u653e\u4f1a\u5236\u9020\u969c\u788d\u7684\u68cb\u5b50\uff0c\u95ee\u6700\u591a\u591a\u5c11\u4e2a\n\n\u601d\u8def\uff1a\u6309\u4e00\u884c\u4e00\u884c\u5904\u7406\u65b9\u6cd5\uff0c\u5c06\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\u679a\u4e3e\u51fa\u6765\uff0c\n\n\u518d\u6839\u636e\u60c5\u51b5\u5728\u6240\u6709\u5408\u6cd5\u60c5\u51b5\u4e0b\u627e\u5230\u6700\u4f18\u89e3\uff08\u56e0\u4e3a\u60c5\u51b5\u5341\u8fdb\u5236\u5b58\u4e0d\u4e0b\u6240\u4ee5\u7528\u4e8c\u8fdb\u5236\u6765\u4fdd\u5b58bin\u6570\u7ec4\uff09\n\n\n\u6570\u7ec4bin\u6536\u96c62\u7684\u4e00\u6b21\u65b9\u52302\u7684\u5341\u6b21\u65b9\uff0c\u4f8b\u5982bin[2]\u8868\u793a2\u76842\u6b21\u65b9\n\n\n\u7528try1\u51fd\u6570\u505a\u5230\n\n\ntry1(i,x,s):    (try1(i+1,x,s)\u8868\u793a\u4e0d\u653e\u70ae\u5175\n\n                   try1(i+3,x+bin[i-1],s+1)\u8868\u793a\u653e\u70ae\u5175\n\n\u5148\u505a\u524d\u4e24\u884c\u7684\u6240\u6709\u5408\u6cd5\u60c5\u51b5\uff08\u4fdd\u8bc1\u4e24\u884c\u4e0d\u4e92\u76f8\u653b\u51fb\u4e14\u4e0e\u5730\u56fe\u4e0d\u51b2\u7a81\uff09\n\n\n\u53ef\u4ee5\u5148\u7279\u5224\u4e00\u4e0b\u4e00\u884c\u7684\u60c5\u51b5\uff0c\u5f53\u7136\u6ca1\u6709\u79cd\u65cf\u6570\u636e\u6240\u4ee5\u4e0d\u8bf4\u4e86\u3002\n\n\n\u518d\u4ece\u7b2c\u4e09\u884c\u5230\u7b2cn\u884c\u5c06\u6240\u6709\u5f53\u524d\u7b2ci\u884c\u6700\u4f18\u89e3\u4e14\u5408\u6cd5\u5b58\u5230f\u6570\u7ec4\u4e2d\uff08\u4e09\u7ef4\uff09\uff0c\u4f8b\u5982\uff1a\n\n\nd3 i-2\u884c\n\nd2 i-1\u884c\n\nd1 i\u884c\n\n\n\nf[i][d1][d2]=max(f[i][d1][d2]\u2502f[i-1][d2][d3]+a[d1].s)\n\n\u6700\u540e\u5728f[n][][]\u4e2d\u627e\u6700\u5927\u503c\u5373\u4e3a\u6240\u6c42\n\n\n\u4e0b\u9762\u4e3a\u4ee3\u7801\n\n\n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n```cpp\n#include <cstdio>\n#include <cstring>\nint bin[20],ch[3][110][66],f[110][66][66],map[110];\nchar str1;\nint n,m,count;\nstruct node{\n    int x,s;\n};\nnode a[66];\nvoid try1(int k,int x,int s){\n    if(k>m){\n        ++count;\n        a[count].x=x;\n        a[count].s=s;\n        return;\n    }\n    try1(k+1,x,s);\n    try1(k+3,x+bin[k-1],s+1);\n    return;    \n}\nint main(){\n//    freopen(\"xxx.in\",\"r\",stdin);\n//    freopen(\"cannon.out\",\"w\",stdout);\n    bin[0]=1;\n    for(int i=1;i<=10;i++)bin[i]=bin[i-1]*2;\n    scanf(\"%d%d\",&n,&m);\n    scanf(\"\\n\");\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            scanf(\"%c\",&str1);\n            if(str1=='H')map[i]+=bin[j-1];\n        }\n        scanf(\"\\n\");\n    }\n    try1(1,0,0);\n    if(n==1){\n        int max=-1;\n        for(int i=1;i<=count;i++)if(a[i].s>max&&(map[1]&a[i].x)==0)max=a[i].s;\n        printf(\"%d\",max);\n        return 0;\n    }\n    memset(f,-1,sizeof f);\n    for(int d1=1;d1<=count;d1++){\n        for(int d2=1;d2<=count;d2++){\n            if((map[2]&a[d1].x)==0&&(map[1]&a[d2].x)==0&&(a[d1].x&a[d2].x)==0){\n                f[2][d1][d2]=a[d1].s+a[d2].s;\n            }\n        }\n    }\n    for(int i=3;i<=n;i++){\n        for(int d1=1;d1<=count;d1++){\n            if((map[i]&a[d1].x)!=0)continue;\n            for(int d2=1;d2<=count;d2++){\n                if((map[i-1]&a[d2].x)!=0||(a[d1].x&a[d2].x)!=0)continue;\n                int max1=0;\n                for(int d3=1;d3<=count;d3++){\n                    if((map[i-2]&a[d3].x)==0&&(a[d1].x&a[d3].x)==0&&(a[d2].x&a[d3].x)==0&&f[i-1][d2][d3]+a[d1].s>max1)max1=f[i-1][d2][d3]+a[d1].s;\n                }\n                f[i][d1][d2]=max1;\n            }\n        }\n    }\n    int max=-1;\n    for(int i=1;i<=count;i++)for(int j=1;j<=count;j++)if(f[n][i][j]>max)max=f[n][i][j];\n    printf(\"%d\",max);\n    return 0;\n}\n\n```",
        "postTime": 1505620931,
        "uid": 53333,
        "name": "liuqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u88ab\u8fd9\u9898\u5751\u4e86\u4e00\u5929\uff0c\u6700\u540e\u53d1\u73b0\u628aj\u6253\u6210i\u4e86\uff08\u6211\u4e00\u70b9\u90fd\u4e0d\u751f\u6c14\uff09\uff0c\u6700\u540e\u60f3\u8bf4\u7684\u5c31\u662f\u5f88\u57fa\u7840\u7684\u4e00\u9053\u72b6\u538b\uff0c\u4e09\u7ef4\u8f6c\u79fb\uff0cf[i][j][k]\u8868\u793a\u7b2ci\u884c\uff0c\u7b2ci\u884c\u7684\u72b6\u6001\u4e3aj ,\u7b2ci-1\u884c\u7684\u72b6\u6001\u4e3ak\uff0c\u9884\u5904\u7406\u5de6\u53f3\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\uff0c\u518d\u9884\u5904\u7406\u524d\u4e24\u884c\uff0c\u4ece\u7b2c\u4e09\u884c\u5f00\u59cbDP\uff0c\u6ce8\u610f\u4f4d\u8fd0\u7b97\u6700\u597d\u5168\u90e8\u6253\u4e0a\u62ec\u53f7\uff0c\u56e0\u4e3a\u4f4d\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u662f\u4e2a\u7384\u5b66\u95ee\u9898\uff0c\u975e\u5e38\u7384\u5b66\uff0c\u8fd8\u6709\u5c31\u662fmaxm\u5f00\u62101<<10,\u5426\u5219\u4f1aRE\uff0c\u6211\u5c31\u88ab\u5751\u4e86\u597d\u51e0\u6b21\uff0c\u6700\u540e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[i][j][k]=max(f[i][j][k],f[i-1][k][w])w\u662f\u4e0a\u4e24\u884c\u7684\u72b6\u6001\uff0c\u6700\u540e\u8f93\u51fa\u6700\u540e\u4e00\u884c\u6700\u5927\u7684\u90a3\u4e2a\u72b6\u6001\n\n    \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=102;\nconst int maxm=1<<10;\nint dp[maxn][maxm][maxm],st[maxm],cnt[maxm],mapp[maxn],n,m,k;\nint pd(int x){\n    return ((x&(x<<1))+(x&(x<<2)));    \n}\nint pd2(int x,int y){\n    return (mapp[x]&st[y]);    \n}\nint main(){\n    //freopen(\"test.in\",\"r\",stdin);\n    //freopen(\"test.out\",\"w\",stdout);\n    cin>>n>>m;\n    getchar();\n    for(int i=1;i<=n;++i,getchar()){\n        for(int j=1;j<=m;++j){\n            char c;\n            scanf(\"%c\",&c);\n            if(c=='H')mapp[i]+=1<<(m-j);\n        }\n        //cout<<mapp[i]<<endl;\n    }\n    for(int i=0;i<(1<<m);++i)    \n        if(!pd(i)){\n            st[k]=i;\n            cnt[k]=__builtin_popcount(i);\n            //cout<<st[k]<<\" \"<<cnt[k]<<endl;\n            k++;\n        }\n    for(int i=0;i<k;++i)\n        if(!pd2(1,i)){\n            dp[1][i][0]=cnt[i];\n            //cout<<dp[1][i][0]<<endl;    \n        }\n    for(int i=0;i<k;++i){\n        if(pd2(2,i))continue;\n        for(int f=0;f<k;++f){\n            if(pd2(1,f))continue;\n        //    cout<<st[i]<<\" \"<<st[f]<<endl;\n            if((st[i]&st[f])==0){\n                dp[2][i][f]=cnt[i]+cnt[f];\n                //cout<<dp[2][i][f]<<endl;    \n            }\n        }\n    }\n    for(int i=3;i<=n;++i)\n        for(int j=0;j<k;++j){\n            if(pd2(i,j))continue;    \n            for(int f=0;f<k;++f){\n                if(pd2(i-1,f))continue;\n                for(int w=0;w<k;++w){\n                    if(pd2(i-2,w))continue;\n                    if((st[j]&st[f])==0 && (st[j]&st[w])==0 && (st[f]&st[w])==0){\n                        dp[i][j][f]=max(dp[i][j][f],dp[i-1][f][w]+cnt[j]);  \n                        //cout<<dp[i][j][f]<<endl;\n                    }\n                }\n            }\n        }\n    //cout<<k<<endl;\n    int ans=0;\n    for(int i=0;i<k;++i)\n        for(int j=0;j<k;++j)\n            ans=max(ans,dp[n][i][j]);\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1504416996,
        "uid": 47202,
        "name": "cheeseYang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u70ae\u5175\u5728\u5730\u56fe\u4e0a\u7684\u6446\u653e\u4f4d\u5b50\u53ea\u80fd\u5728\u5e73\u5730('P')\n\n\u70ae\u5175\u53ef\u4ee5\u653b\u51fb\u4e0a\u4e0b\u5de6\u53f3\u5404\u4e24\u683c\u7684\u683c\u5b50\uff1b\n\n\u800c\u9ad8\u539f('H')\u4e0a\u70ae\u5175\u80fd\u591f\u653b\u51fb\u5230\u4f46\u662f\u4e0d\u80fd\u6446\u653e\n\n\u6c42\u6700\u591a\u80fd\u6446\u653e\u7684\u70ae\u5175\u7684\u6570\u91cf\n\n\u5c31\u662f\u8fd9\u4e2a\u610f\u601d\u3002\n\n\u96be\u5ea6\u63d0\u9ad8\uff0c\u5f31\u7701\u7701\u9009\n\n\u4e00\u5f00\u59cb\u662f\u60f3\u5199dfs\uff08\u8ff7\u4e4b\u516b\u7687\u540e\uff09\u7684\uff0c\n\n\u4f46\u662f\u770b\u5230\u6570\u636e\u91cf100\u5c31\u60f3dp\u4e86\uff1b\n\n\u56e0\u4e3a\u9898\u76een\u7684\u8303\u56f4\u7ed9\u7684\u5f88\u5c11n<=10\uff0c\u60f3\u5230\u72b6\u538b\n\n\u975e\u5e38\u660e\u663e\u662f\u4e00\u4e2a\u72b6\u6001\u538b\u7f29\u7684dp\uff08\u72b6\u538bdp\uff09\n\n\u5176\u5b9e\u53ef\u4ee5\u5f53\u505a\u72b6\u538b\u7684\u5165\u95e8\u9898\u76ee\u6765\u505a\u3002\n\n\u7531\u4e8e\u672c\u884c\u7684\u72b6\u6001\u662f\u7531\u524d\u82e5\u5e72\u884c\u63a8\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u4ece\u4e0a\u63a8\u5230\u4e0b\uff08\u800c\u4e0d\u662f\u4ece\u5de6\u63a8\u5230\u53f3\uff09\n\n\u8fd8\u6709\uff0c\u672c\u884c\u7684\u72b6\u6001\u4e0e\u524d1\u884c\uff0c\u524d2\u884c\u7684\u72b6\u6001\u5bc6\u5207\u76f8\u5173\u7684\uff08\u70ae\u5175\u4e0d\u4e92\u76f8\u653b\u51fb\uff09\n\n\u5199\u51fa\u6211\u4eecdp\u7684\u72b6\u6001\uff1af[i,r1j]\u8868\u793a\u5f53\u524d\u7b2ci\u884c\u72b6\u6001\u4e3aj\uff0ci-1\u884c\u72b6\u6001\u4e3ar1\u7684\u70ae\u5175\u6570\n\n\u8f6c\u79fb\u5176\u5b9e\u5c31\u662f\u975e\u5e38\u7b80\u5355\u4e86\uff1a\uff08r2\u5c31\u662f\u524d\u7b2c2\u884c\u7684\u72b6\u6001\uff09\n\n f[i,r1,j]:=max(f[i,r1,j],f[i-1,r2,r1]+sum[j]);\n\n\u8f6c\u79fb\u7684\u6761\u4ef6\uff1ar1\u548cr2\u4e0d\u4e0eH\u6709\u4e00\u4e2a\u91cd\u5408\uff1br1\u548cr2\u4e0d\u80fd\u88ab\u4e92\u76f8\u6253\u5230\u6216\u8fbej\n\n\u672c\u9898\u4e3b\u8981\u96be\u5728\u5904\u7406dp\u521d\u59cb\u5316\u7684\u65b9\u9762\uff1b\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u6bcf\u4e00\u79cd\u62d3\u5c55\u51fa\u6765\u7684\u70ae\u5175\u6392\u5217\u7684\u65b9\u5f0f\u9700\u8981\u5728\u8be5\u884c\u4e2d\u6a2a\u5411\u4e0d\u4e92\u76f8\u653b\u51fb\uff1b\n\n\u8fd9\u79cd\u6bcf\u884c\u4e0d\u653b\u51fb\u7684\u5e8f\u5217\u603b\u6570\u5c0f\u4e8e\u7b49\u4e8e60\uff1b\n\npd\u51fd\u6570\u975e\u5e38\u597d\u5199\uff1a\n\nfunction pd(x:longint):boolean;//\u5224\u65ad\u6b64\u65f6\u653e\u7684\u662f\u5426\u5408\u6cd5\uff08\u9644\u8fd1\u4e24\u4f4d\u4e0d\u80fd\u67091\uff09\n\n \n\n \n\n```cpp\nbegin\nif (x and (x<<1))<>0 then exit(false);\n if (x and (x<<2))<>0 then exit(false);\nexit(true);\nend;\n```\n\u5f15\u5165col[i]\u7684\u4e8c\u8fdb\u5236\u6570\u7ec4\uff0c\u8868\u793a\u7b2ci\u884c\u2018H\u2019\u7684\u5206\u5e03\nif s[j]='H' then col[i]:=col[i] or (1<<(j-1));\n\n\u6ce8\u610f\u8fd9\u91cc\u9700\u8981j-1\uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u662f\u4ece2^0\u5f00\u59cb\u7684\u3002\n\n\u6ce8\u610f\u521d\u59cb\u5316\u7b2c0\u884c\u6240\u6709\u5730\u70b9\u90fd\u662f\u9ad8\u5c71\uff0c\u7531\u4e8e\u7b2c0\u884c\u53ef\u80fd\u4f1a\u5f71\u54cd\u7b2c2\u884c\uff1b\n\n\u7279\u6b8a\u5904\u7406\u7b2c\u4e00\u884c\uff1a(st\u6570\u7ec4\u4fdd\u5b58\u6240\u6709\u5408\u6cd5\u7684\u5e8f\u5217\uff0ccnt\u4e3a\u5408\u6cd5\u5e8f\u5217\u7684\u4e2a\u6570\uff0cst\u6807\u53f71~cnt)\n\n  \n \n for i:=1 to cnt do begin\n\n  if (col[1] and st[i])=0 then f[1,1,i]:=sum[i];\n\n end;\n\u6240\u4ee5\uff0c\u672c\u9898\u7684\u4ee3\u7801\u7b80\u5355\uff0c\u4e3b\u8981\u6ce8\u610f\u7684\u662f\u521d\u59cb\u503c\u548cdp\u5f0f\u4e0d\u8981\u5199\u9519\uff084\u7ef4\u7684\u8f6c\u79fb\uff0c\u66b4\u529b\uff09\n\n\n\n\n```cpp\nuses math;\nvar n,m,i,j,r1,r2,ans,cnt:longint;\n    f:array[0..100,0..100,0..100]of longint;\n    //f[i,j,k]\u8868\u793a\u5f53\u524d\u7b2ci\u884c\u72b6\u6001\u4e3aj\uff0ci-1\u884c\u72b6\u6001\u4e3ak\u7684\u70ae\u5175\u6570\n    s:string;\n    st,sum,col:array[0..100]of longint;\nfunction pd(x:longint):boolean;//\u5224\u65ad\u6b64\u65f6\u653e\u7684\u662f\u5426\u5408\u6cd5\uff08\u9644\u8fd1\u4e24\u4f4d\u4e0d\u80fd\u67091\uff09\nbegin\n if (x and (x<<1))<>0 then exit(false);\n if (x and (x<<2))<>0 then exit(false);\n exit(true);\nend;\nfunction getbit(x:longint):longint;//\u6c42\u51fa\u4e8c\u8fdb\u5236\u6570x\u4e2d\u6709\u51e0\u4e2a1\nvar sum:longint;\nbegin\n sum:=0;\n while x>0 do begin\n  if (x and 1)=1 then inc(sum);\n  x:=x>>1;\n end;\n exit(sum);\nend;\nprocedure getdp(m:longint);\nvar e,i:longint;\nbegin\n e:=1<<m;\n cnt:=0;\n for i:=0 to e-1 do\n  if pd(i) then begin\n   inc(cnt);\n   st[cnt]:=i; //\u4fdd\u5b58\u6b64\u65f6\u7684\u72b6\u6001\n   sum[cnt]:=getbit(i); //\u70ae\u5175\u7684\u4e2a\u6570\n  end;\nend;\nbegin\n readln(n,m);\n getdp(m);\n fillchar(col,sizeof(col),0);\n for i:=1 to m do col[0]:=col[0] or (1<<i);\n for i:=1 to n do begin\n  readln(s);\n  for j:=1 to m do\n   if s[j]='H' then col[i]:=col[i] or (1<<(j-1));\n end;\n //col[i]\u8868\u793a\u7b2ci\u884c\u9ad8\u5730\u7684\u5206\u5e03\n fillchar(f,sizeof(f),255);//clear!\n for i:=1 to cnt do begin\n  if (col[1] and st[i])=0 then f[1,1,i]:=sum[i];\n end;\n for i:=2 to n do\n for j:=1 to cnt do  //\u73b0\u5728\u8fd9\u884c\u7684\u72b6\u6001\u662fj\n  if (col[i] and st[j])=0 then\n   for r1:=1 to cnt do //\u4e0a\u4e00\u884c\u72b6\u6001\u662fr1\n   if (st[j] and st[r1])=0 then\n    for r2:=1 to cnt do //\u4e0a\u4e0a\u884c\u7684\u72b6\u6001\u662fr2\n    if (st[j] and st[r2])=0 then\n     if f[i-1,r2,r1]<>-1 then\n      f[i,r1,j]:=max(f[i,r1,j],f[i-1,r2,r1]+sum[j]);\n ans:=0;\n for i:=1 to cnt do\n  for j:=1 to cnt do\n   ans:=max(ans,f[n,i,j]);\n writeln(ans);\nend.\n\n```",
        "postTime": 1502371043,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u72b6\u6001\u538b\u7f29+\u6eda\u52a8\u6570\u7ec4\u3002\u3002\u3002\u3002\u3002\u3002F[I,J]\u8868\u793a\u5f53\u524d\u884c\u72b6\u6001\u4e3aI\uff0c\u4e0a\u4e00\u884c\u72b6\u6001\u4e3aJ\u7684\u6700\u5927\u503c\uff0cG[I,J]\u8868\u793a\u4e0a\u4e00\u884c\u7684F\u6570\u7ec4\n\n\n\n\n\n\n\n```cpp\nvar\n  map:array[0..105]of longint;\n  b,q:array[0..1 shl 11]of longint;\n  f,g:array[0..1 shl 10,0..1 shl 10]of longint;\n  tot,n,i,j,m,k,ans,x,s,kk:longint;\n  ch:char;\nfunction max(a,b:longint):longint;\nbegin\n  if a>b then exit(a) else exit(b);\nend;\nbegin\n  readln(n,m);\n  for i:=1 to n do\n  begin\n    s:=0;\n    for j:=1 to m do\n    begin read(ch); if ch='P' then x:=0 else x:=1; s:=(s shl 1)+x; end;\n    map[i]:=s;\n    readln;\n  end;\n//  for i:=1 to n do writeln(map[i]);\n  for i:=0 to (1 shl m)-1 do\n  if (i and(i shl 1)=0)and(i and(i shl 2)=0) then\n  if (i and (i shr 1)=0)and(i and (i shr 2)=0) then\n  begin inc(tot); b[tot]:=i; j:=i;\n        while j>0 do begin if j and 1=1 then inc(q[tot]); j:=j shr 1; end;\n  end;\n // for i:=1 to tot do writeln(b[i],' ',q[i]);\n  for i:=1 to tot do if (b[i] and map[1]=0) then g[b[i],0]:=q[i];\n  for i:=1 to tot do\n    for j:=1 to tot do\n    if (b[i] and b[j]=0)and(b[i] and map[2]=0) then\n    f[b[i],b[j]]:=max(f[b[i],b[j]],g[b[j],0]+q[i]);\n  g:=f; fillchar(f,sizeof(f),0); \n  for i:=3 to n do\n  begin\n    for j:=1 to tot do\n    if ( b[j] and map[i]=0) then\n      for k:=1 to  tot do\n        for kk:=1 to tot do\n        if (b[j] and b[k]=0)and(b[j] and b[kk]=0) then\n        f[b[j],b[k]]:=max(f[b[j],b[k]],g[b[k],b[kk]]+q[j]);\n    g:=f; fillchar(f,sizeof(f),0);\n  end;\n  for i:=1 to tot do\n    for j:=1 to tot do\n    if g[b[i],b[j]]>ans then ans:=g[b[i],b[j]];\n  writeln(ans);\nend.\n\n```",
        "postTime": 1497169258,
        "uid": 34910,
        "name": "\u91cd\u56de\u5dc5\u5cf0\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u5148\u4ecb\u7ecd\u4e00\u70b9C++\u7684\u77e5\u8bc6\uff1a\n\n\u53bb\u6389\u6700\u540e\u4e00\u4f4d              | (101101->10110)             x >> 1\n\n\u5728\u6700\u540e\u52a0\u4e00\u4e2a0           | (101101->1011010)          x << 1\n\n\u5728\u6700\u540e\u52a0\u4e00\u4e2a1           | (101101->1011011)          x << 1+1\n\n\u628a\u6700\u540e\u4e00\u4f4d\u53d8\u62101       | (101100->101101)            x | 1\n\u628a\u6700\u540e\u4e00\u4f4d\u53d8\u62100       | (101101->101100)            x | 1-1\n\u6700\u540e\u4e00\u4f4d\u53d6\u53cd              | (101101->101100)            x^1\n\n\u628a\u53f3\u6570\u7b2ck\u4f4d\u53d8\u62101    | (101001->101101,k=3)      x | (1 << (k-1))\n\u628a\u53f3\u6570\u7b2ck\u4f4d\u53d8\u62100    | (101101->101001,k=3)       x & ~ (1 << (k-1))\n\n\u53f3\u6570\u7b2ck\u4f4d\u53d6\u53cd           | (101001->101101,k=3)       x ^(1 << (k-1))\n\n\u53d6\u672b\u4e09\u4f4d                     | (1101101->101)              x & 7\n\n\u53d6\u672bk\u4f4d                     | (1101101->1101,k=5)        x & (1 << k-1)\n\n\u53d6\u53f3\u6570\u7b2ck\u4f4d               | (1101101->1,k=4)              x >> (k-1) & 1\n\n\u628a\u672bk\u4f4d\u53d8\u62101             | (101001->101111,k=4)        x | (1 << k-1)\n\u672bk\u4f4d\u53d6\u53cd                  | (101001->100110,k=4)        x ^(1 << k-1)\n\n\u628a\u53f3\u8fb9\u8fde\u7eed\u76841\u53d8\u62100    | (100101111->100100000    x & (x+1)\n\n\u628a\u53f3\u8d77\u7b2c\u4e00\u4e2a0\u53d8\u62101    | (100101111->100111111)   x | (x+1)\n\u628a\u53f3\u8fb9\u8fde\u7eed\u76840\u53d8\u62101    | (11011000->11011111)        x | (x-1)\n\u53d6\u53f3\u8fb9\u8fde\u7eed\u76841             | (100101111->1111)           (x^(x+1)) >> 1\n\n\u53bb\u6389\u53f3\u8d77\u7b2c\u4e00\u4e2a1\u7684\u5de6\u8fb9 | (100101000->1000)          x & (x^ (x-1))\n\n\u53d6\u53f3\u8fb9\u7b2c\u4e00\u4e2a1         |(101010->10)            x&-x\n\n\u3010\u89e3\u6790\u3011\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\u653e\u5927\u70ae\u7684\u72b6\u6001\uff0c\u53ea\u4e0e\u5b83\u4e0a\u9762\u4e00\u884c\u548c\u4e0a\u4e0a\u4e00\u884c\u7684\u72b6\u6001\u6709\u5173\uff0c\u6bcf\u4e00\u884c\u7528\u72b6\u6001\u538b\u7f29\u7684\u8868\u793a\u65b9\u6cd5\uff0c0\u8868\u793a\u4e0d\u653e\u5927\u70ae\uff0c1\u8868\u793a\u653e\u5927\u70ae\uff0c\u540c\u6837\u7684\uff0c\u5148\u8981\u6ee1\u8db3\u786c\u4ef6\u6761\u4ef6\uff0c\u5373\u6709\u7684\u5730\u65b9\u4e0d\u80fd\u653e\u5927\u70ae\uff0c\u7136\u540e\u5c31\u662f\u6bcf\u4e00\u884c\u4e2d\u4e0d\u80fd\u6709\u4e24\u4e2a1\u7684\u8ddd\u79bb\u5c0f\u4e8e2\uff08\u4fdd\u8bc1\u6a2a\u7740\u4e0d\u4e92\u76f8\u653b\u51fb\uff09\uff0c\u8fd9\u4e9b\u8981\u9884\u5148\u5904\u7406\u4e00\u4e0b\u3002\u7136\u540e\u5c31\u662f\u72b6\u6001\u8868\u793a\u548c\u8f6c\u79fb\u7684\u95ee\u9898\u4e86\uff0c\u56e0\u4e3a\u662f\u548c\u524d\u4e24\u884c\u7684\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5\u8981\u5f00\u4e2a\u4e09\u7ef4\u7684\u6570\u7ec4\u6765\u8868\u793a\u72b6\u6001\uff0c\u5f53\u524d\u884c\u7684\u72b6\u6001\u53ef\u7531\u524d\u4e24\u884c\u7684\u72b6\u6001\u8f6c\u79fb\u800c\u6765\u3002\u5373\u5982\u679c\u5f53\u524d\u884c\u7684\u72b6\u6001\u7b26\u5408\u524d\u4e24\u884c\u7684\u7ea6\u675f\u6761\u4ef6\uff08\u4e0d\u548c\u524d\u4e24\u884c\u7684\u5927\u70ae\u4e92\u76f8\u653b\u51fb\uff09\uff0c\u5219\u5f53\u524d\u884c\u7684\u6700\u5927\u503c\u5c31\u662f\u4e0a\u4e00\u4e2a\u72b6\u6001\u7684\u503c\u52a0\u4e0a\u5f53\u524d\u72b6\u6001\u4e2d1\u7684\u4e2a\u6570\uff08\u5f53\u524d\u884c\u653e\u5927\u70ae\u7684\u4e2a\u6570\uff09\n\n\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <iostream>\nusing namespace std;\nint n,m,ans;\nchar map[120][80];\nint num[200];\nint top; // fang1 an4 number\nint stk[100]; //zhuang tai\nint b[180]; //zhuang ya hou de map\nint dp[180][80][80]; //dp[i][j][k] \u8868\u793a\u7b2ci\u884c\u72b6\u6001\u4e3ak\uff0c\u7b2ci-1\u72b6\u6001\u4e3aj\u65f6\u7684\u6700\u5927\u70ae\u5175\u4e2a\u6570\u3002\n//\u3010\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3011dp[i][k][t] =max(dp[i][k][t],dp[i-1][j][k]+num[t]); num[t]\u4e3at\u72b6\u6001\u4e2d1\u7684\u4e2a\u6570 \nint max(int a,int b)\n{\n    if (a>b)\n        return a;\n      else\n        return b;  \n}\n// cmp big or small\nint cnt(int x)  //count\n{\n    int t=0;\n    while (x)\n    {\n        t++;\n        x&=(x-1);\n    }\n    return t;\n}\nbool cmp(int x) //compare\n{\n    if (x&(x<<1)) return 0;\n    if (x&(x<<2)) return 0;\n    return 1;  //\u5224\u65ad\u8be5\u72b6\u6001\u662f\u5426\u5408\u6cd5\uff0c\u5373\u4e0d\u5b58\u5728\u76f8\u90bb\u76841\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c0f\u4e8e3\u7684  \n}\nbool fit(int x, int y)\n{\n    if (b[y]&x) return 0;\n       return 1;\n}\nvoid init()\n{\n    top=0;\n    int i;\n    int t=1<<m;\n    for (i=0; i<t; ++i)\n    {\n        if (cmp(i))\n            stk[++top]=i;\n        //cout<<stk[top]<<\"init\"<<endl;    \n    }\n} // \u627e\u5230\u6240\u6709\u53ef\u80fd\u7684\u5408\u6cd5\u72b6\u6001\uff0c\u6700\u591a60\u79cd \nvoid read()\n{\n    int i,j,v;\n    cin>>n>>m;\n    init();\n    /*for (i=1; i<=n; ++i)\n    {\n        scanf(\"%s\",map[i]+1);\n    }\n    for (i=1; i<=n; ++i)\n    {\n        for (j=1; j<=m; ++j)\n        {\n            b[i]=0;\n            if (map[i][j]=='H')\n            {\n                b[i]+=(1<<(j-1));\n            }\n        }\n    }*/\n    for(int i = 1; i <= n; ++i)scanf(\"%s\",map[i]+1);  \n           for(int i = 1; i <= n; ++i)  \n           for(int j = 1; j <= m; ++j){  \n               b[i]=0;  \n               for(j=1;j<=m;j++){  \n                    if(map[i][j]=='H')b[i]+=(1<<(j-1));  \n               }  \n           }  \n    memset(dp,-1,sizeof(dp));\n}\nvoid fl()\n{\n    int i;\n    for (i=1; i<=top; ++i)\n    {\n        num[i]=cnt(stk[i]); // every gunpowder 's number\n        if (fit(stk[i],1)) //OK? or not?\n        {\n            dp[1][1][i]=num[i];\n            //cout<<stk[i]<<num[i]<<\"l\"<<endl;\n        }\n    }\n}\nvoid dynamic()\n{\n    int i,j,k,t;\n    fl(); //chu shu hua first line\n    //cout<<dp[1][1][3];\n    for (i=2; i<=n; ++i)  //second line begin\n    {\n        for (t=1; t<=top; ++t) //programs\n        {\n            if (!fit(stk[t],i))\n                continue; //i\u884c\u72b6\u6001\u662f\u5426\u6ee1\u8db3\u5730\u56fe if no ,then cut off\n            for (j=1; j<=top; ++j)   //j is last zhuang tai\n            {\n                if (stk[t]&stk[j])\n                {\n                    continue;\n                    //i-2\u884c\u72b6\u6001\u548ci\u884c\u6709\u65e0\u76f8\u540c\u5217 cut off too\n                }\n                for (k=1; k<=top; ++k)\n                {\n                    if (stk[t]&stk[k]) continue;\n                    if (dp[i-1][j][k]<0) continue;\n                    dp[i][k][t]=max(dp[i-1][j][k]+num[t],dp[i][k][t]);\n                    ans=max(ans,dp[i][k][t]);\n                    //cout<<dp[i][k][t];\n                    //cout<<stk[k]<<endl;\n                }\n            } \n        }\n    }\n    cout<<ans<<endl;\n}\nvoid print()\n{\n    int i,j,k;\n    for (i=1; i<=n; ++i)\n      for (j=1; j<=top; ++j)\n        for (k=1; k<=top; ++k)\n          ans=max(ans,dp[i][j][k]);\n    cout<<ans<<endl;      \n}\nint main()\n{\n    read();\n    dynamic();\n}\n```",
        "postTime": 1489204981,
        "uid": 22841,
        "name": "Right",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "\u7ecf\u5178\u7684\u52a8\u6001\u538b\u7f29dp\n\ndp\u65b9\u7a0b  \uff1a  f[i][j][k] = max(f[i][j][k],f[i-1][k][p]+num[j])\n\n\ni \u8868\u793a\u5f53\u524d\u884c j \u8868\u793a\u5f53\u524d\u884c\u72b6\u6001 k \u8868\u793a\u4e0a\u4e00\u884c\u72b6\u6001 p \u8868\u793a\u4e0a\u4e24\u884c\u72b6\u6001\n\nnum \u4e3a\u9884\u5904\u7406\u8be5\u60c5\u51b5\u70ae\u5175\u6570\u91cf\n\n\n```cpp\n\n#include <cstdio>\n#include <algorithm>\n\nint n,m;\nint tot = 1;\nint info[150];\nint pre [150] , val[150];\nint dp[110][60][60];\nchar c;\n\nvoid get_val(int x){\n    for (;x>0;){\n        if ((x & 1) == 1) val[tot]++;\n        x = x >> 1;\n    }\n}\nvoid pre_search(void){\n    for (int i=0;i<(1 << m);i++){\n        if (((i & (i >> 1)) == 0) && ((i & (i >> 2)) == 0)){\n            pre[tot] = i;\n            get_val(i);\n            tot++;\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;i++){\n        scanf(\"\\n\");\n        for (int j=1;j<=m;j++){\n            scanf(\"%c\",&c);\n            if (c == 'P') {\n                info[i] = (info[i] << 1) | 1 ;\n            } else {\n                info[i] = (info[i] << 1);\n            }\n        }    \n    }                                            // input\n    pre_search();                                 // pre_search and get_number\n    tot--;\n    for (int i=1;i<=tot;i++){\n        if ((pre[i] | info[1]) == info[1]){\n            dp[1][i][1] = val[i];\n        }\n    }                                            // for line 1\n    for (int i=2;i<=n;i++){\n        for (int j=1;j<=tot;j++){\n            if ((pre[j] | info[i]) == info[i]){\n                for (int jl=1;jl<=tot;jl++){\n                    if ((pre[j] & pre[jl]) == 0){\n                        for (int jll=1;jll<=tot;jll++){\n                            if ((pre[j] & pre[jll]) == 0 && (pre[jl] & pre[jll]) == 0){\n                                dp[i][j][jl] =std :: max(dp[i][j][jl],dp[i-1][jl][jll] + val[j]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    int ans = -1000;\n    for (int i=1;i<=tot;i++){\n        for (int j=1;j<=tot;j++){\n            ans = std :: max(ans,dp[n][i][j]);\n        }\n    }\n/*\n    for (int i=1;i<=60;i++){\n        printf(\"%d\\n\",pre[i]);\n    }\n*/\n/*\n    for (int i=1;i<=n;i++){\n        for (int j=1;j<=tot;j++){\n            for (int k=1;k<=tot;k++){\n                printf(\"%d \",dp[i][j][k]);\n            }\n        }\n        printf(\"\\n\");\n    }\n    for (int i=1;i<=tot;i++){\n        printf(\"%d \",val[i]);\n    }\n*/\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1457686218,
        "uid": 11829,
        "name": "Leowner",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010\u70ae\u5175\u9635\u5730\u3011"
    },
    {
        "content": "**\u72b6\u538bDP**\n\n**\u4f4d\u8fd0\u7b97\u5f88\u91cd\u8981\uff01**\n\n\u9996\u5148\u4ece\u9898\u76ee\u4e2d\u53ef\u4ee5\u770b\u51fa\u6709\u5f88\u591a\u70b9\u662f\u591a\u4f59\u7684\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4e00\u6b21\u904d\u5386\u7684\u65f6\u5019\u53bb\u6389\u5b83\u4eec\n\n\u4e00\u6b21\u904d\u5386\u4ece0\u52302^m-1 \u6c42\u51fa\u5408\u6cd5\u7684\u6570\u636e\u4fdd\u5b58\u5728a\u4e2d\n\n\u540c\u65f6\u8bb0\u5f55\u4e0b\u5728\u5408\u6cd5\u7684\u6570\u636e\u4e2d 1\u7684\u51fa\u73b0\u6b21\u6570 \u4fdd\u5b58\u5728b\u4e2d\n\n**\u68c0\u67e5\u662f\u5426\u5408\u6cd5\u7684\u65b9\u6cd5\uff1a**\n\n\u901a\u8fc7\u6bd4\u8f83\u4e24\u4e2a1\u4e4b\u95f4\u7684\u8ddd\u79bb \u5373\u53ef\u5224\u65ad\u662f\u5426\u5408\u6cd5\n\n\u82e5\u4e24\u4e2a1\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e2 \u5219\u975e\u6cd5\n\n\u6240\u4ee5 top\u53d8\u91cf\u521d\u59cb\u503c\u4e3a-2\n\n\u8fd8\u8981\u7528\u4e34\u65f6\u53d8\u91cfp\u6765\u8bb0\u4e00\u4e0b\u662f\u5426\u5e94\u8be5\u628a\u8fd9\u4e2a\u6570\u653e\u5230a\u6570\u7ec4\u4e2d\n\n\u628a\u5408\u6cd5\u7684\u6570\u636e\u653e\u5230a\u6570\u7ec4\u4e2d \u907f\u514d\u4e86\u5f88\u591a\u65e0\u7528\u7684\u8fd0\u7b97 \u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u5c0f\u5f88\u5c0f\n\n**\u9884\u5904\u7406\u56fe**\n\n\u9898\u76ee\u4e2d\u7684\u5730\u56fe\u662f\u6839\u636eP H\u6765\u5224\u65ad\u5730\u5f62\u7684\n\n\u56e0\u6b64\u8981\u628a\u5730\u5f62\u5904\u7406\u51fa\u6765 \u521d\u59cb\u503c\u4e3a0 P\u7684\u65f6\u5019\u4e3a1\n\n\u8fd9\u6837\u4ee5\u540e\u5c31\u76f4\u63a5\u53ef\u4ee5\u73b0\u7528\u6bcf\u4e00\u884c\u7684\u5730\u56fe \u51cf\u5c11\u65f6\u95f4\n\n\u5355\u72ec\u5904\u7406\u7b2c1/2\u884c\n\n\u56e0\u4e3a\u8981\u786e\u4fdd\u5904\u7406\u7684\u884c\u7684\u524d\u4e24\u884c\u662f\u5408\u6cd5\u7684\n\n\u56e0\u6b64 \u8981\u7279\u6b8a\u5904\u7406\u4e00\u4e0b1/2\u4e24\u884c\n\n\u7b2c\u4e00\u884c\u5c31\u76f4\u63a5\u5224\u65ad\u662f\u5426\u548c\u5730\u5f62\u76f8\u7b26\u5408 \u518d\u52a0\u4e0a1\u7684\u4e2a\u6570\u5373\u53ef\n\n\u7b2c\u4e8c\u884c\u4e24\u91cd\u5faa\u73af \u5148\u5224\u65ad\u7b2c\u4e8c\u884c\u662f\u5426\u6ee1\u8db3\u5730\u5f62 \u518d\u5faa\u73af\u7b2c\u4e00\u884c \u5224\u65ad\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u884c\u7684\u5730\u5f62 \u548c\u7b2c\u4e8c\u884c\u662f\u5426\u5408\u6cd5\n\n\u5224\u65ad\u8fc7\u540e \u628a\u5408\u6cd5\u7684\u653e\u5165f2[j]\n\n**\u5927\u4e8e\u7b49\u4e8e3\u884c\u5904\u7406\u65b9\u6cd5**\n\n\u4e09\u91cd\u5faa\u73af\n\n\u8fd9\u4e00\u884c \u4e0a\u4e00\u884c \u4e0a\u4e0a\u884c\n\n\u6bcf\u4e00\u4e2a\u90fd\u8981\u4fdd\u8bc1\u6ee1\u8db3\u6bcf\u4e00\u4e2a\u7684\u5730\u5f62\n\n\u8fd8\u8981\u4fdd\u8bc1\u6ee1\u8db3\u4e0a\u4e0b\u884c\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint f[101][1025][1025],n,m,a[1025],tot=0,b[1025],ans=0,mmap[105];\nchar map[101][11];\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            cin>>map[i][j];\n    for(int i=0;i<(1<<m);i++)//\u9884\u5904\u74060~2^m \n    {\n        int top=-2,p=0,q=0;\n        for(int j=1;j<=m;j++)\n        {\n            if((i>>(j-1))&1>0)\n                if(j-top<=2)\n                {\n                    p=1;\n                    break;\n                }\n            else\n            {\n                top=j;\n                q++;\n            }\n        }\n        if(p==0)\n        {\n            a[tot]=i;\n            b[tot]=q;\n            tot++;\n        }\n    }\n    for(int i=1;i<=n;i++)//\u9884\u5904\u7406\u5730\u56fe \n        for(int j=1;j<=m;j++)\n            if(map[i][j]=='P')\n                mmap[i]=mmap[i]|(1<<j-1);\n    //i=1:\n    for(int i=1;i<tot;i++)\n    {\n        if((a[i]&mmap[1])!=a[i])\n            continue;\n        f[1][i][0]=max(f[1][i][0],b[i]);\n        ans=max(ans,f[1][i][0]);\n    }\n    //i=2:\n    for(int i=0;i<tot;i++)\n    {\n        if((a[i]&mmap[2])!=a[i])\n            continue;\n        for(int j=0;j<tot;j++)\n        {\n            if((a[j]&a[i])!=0||(a[j]&mmap[1])!=a[j])\n                continue;\n            else\n                f[2][i][j]=max(f[2][i][j],f[1][j][0]+b[i]);\n        ans=max(ans,f[2][i][j]);\n        }\n    }\n    //i>=3:\n    for(int i=3;i<=n;i++)\n        for(int j=0;j<tot;j++)\n        {\n            if((a[j]&mmap[i])!=a[j])\n                continue;\n            for(int k=0;k<tot;k++)\n            {\n                if((a[k]&mmap[i-1])!=a[k]||(a[k]&a[j])!=0)\n                    continue;\n                for(int r=0;r<tot;r++)\n                {\n                    if((a[r]&a[k])!=0||(a[r]&mmap[i-2])!=a[r]||(a[r]&a[j])!=0)\n                        continue;\n                    f[i][j][k]=max(f[i][j][k],f[i-1][k][r]+b[j]);\n                }\n            ans=max(ans,f[i][j][k]);\n            }\n        }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1525595440,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2704 \u3010[NOI2001]\u70ae\u5175\u9635\u5730\u3011"
    }
]