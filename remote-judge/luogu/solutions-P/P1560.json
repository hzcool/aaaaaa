[
    {
        "content": "\n\u660e\u663e\u8fd9\u662f\u4e00\u9053\u641c\u7d22\u9898\uff0c\u5176\u4ed6\u9898\u89e3\u5199\u7684\u6709\u70b9\u590d\u6742\uff0c\u6211\u6709\u66f4\u7b80\u4fbf\u7684\u5199\u6cd5\n\n\u65e2\u7136\u9898\u76ee\u8bf4\u8d70\u5230\u4e0d\u80fd\u518d\u8d70\uff0c\u90a3\u6211\u4eec\u5c31\u5e72\u8106\u4e00\u70b9\uff0c\u4e00\u6761\u8def\u8d70\u5230\u9ed1\uff0c\u4e0d\u5230\u5357\u5899\u4e0d\u56de\u5934\uff0c\u4e00\u4e0b\u628a\u8981\u8d70\u7684\u8def\u90fd\u8d70\u5b8c\uff0c\u4e0d\u4f46\u6548\u7387\u9ad8\uff0c\u4e5f\u597d\u5199\uff0c\u5173\u952e\u662f\u5927\u5927\u8282\u7701\u4e86\u7cfb\u7edf\u6808\n\n\u4e00\u53e3\u6c14\u8d70\u5f88\u591a\u70b9\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55\u8bb0\u5f55\u4e00\u4e2a\u70b9\u662f\u5426\u4fbf\u5229\u8fc7\u5462\uff1f\u9000\u51fa\u540e\u53c8\u5982\u4f55\u5220\u9664\u6807\u8bb0\u5462\uff1f\n\n\u6216\u8bb8\u6b63\u662f\u8fd9\u4e24\u4e2a\u95ee\u9898\u4f7f\u4e00\u4e9b\u60f3\u5230\u8fd9\u79cd\u89e3\u6cd5\u7684\u4eba\u9000\u7f29\u4e86\uff0c\u4f46\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\u5e76\u4e0d\u96be\u3002\u6211\u4eec\u7167\u5e38\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e2a\u70b9\u662f\u5426\u8d70\u8fc7\uff0c\u518d\u7528\u4e00\u4e2a\u6808\u6765\u8bb0\u5f55\u8d70\u8fc7\u7684\u70b9\uff0c\u9000\u51fa\u65f6\uff0c\u5c06\u6808\u9876\u4f9d\u6b21\u5f39\u51fa\u5c31\u597d\n\n\u4e5f\u8bb8\u6709\u4eba\u4f1a\u8bf4don't talk,show me your code.\n\n\u5f53\u7136\u662f\u5e26\u7740\u4ee3\u7801\u6765\u7684\u4e86\uff0c\u53e3\u80e1\u53ef\u4e0d\u662f\u6211\u7684\u98ce\u683c\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cctype>\n#define ll long long\n#define gc getchar\n#define maxn 125\n#define maxm 15000\nusing namespace std;\n\ninline ll read(){\n\tll a=0;int f=0;char p=gc();\n\twhile(!isdigit(p)){f|=p=='-';p=gc();}\n\twhile(isdigit(p)){a=(a<<3)+(a<<1)+(p^48);p=gc();}\n\treturn f?-a:a;\n}\n\nstruct ahaha{\n\tint x,y;\n}s[maxm];   //\u7528\u4e00\u4e2a\u6808\u6765\u8bb0\u5f55\u5df2\u4fbf\u5229\u7684\u70b9\u7684\u5750\u6807  \u6b64\u5904\u5efa\u8bae\u4f7f\u7528\u624b\u5199\u6808\uff0c\u800c\u4e0d\u662fSTL\u7684\u6808\nint n,m,ans,a[maxn][maxn];    //ans\u8bb0\u5f55\u6700\u591a\u80fd\u8d70\u591a\u5c11\u70b9\uff0ca\u6570\u7ec4\u8868\u793a\u5f53\u524d\u70b9\u7684\u72b6\u6001\uff0c1\u4e3a\u969c\u788d\u6216\u8fb9\u754c\uff0c0\u4e3a\u672a\u8bbf\u95ee\u7684\u70b9\uff0c1\u662f\u5df2\u8bbf\u95ee\u7684\u70b9\nconst int xx[4]={1,0,-1,0},yy[4]={0,1,0,-1};\nvoid dfs(int x,int y,int sum){    //x,y\u8868\u793a\u62d0\u70b9\u5750\u6807\uff0csum\u8868\u793a\u8d70\u5230\u5f53\u524d\u70b9\u5df2\u8d70\u8fc7\u7684\u70b9\u6570\uff08\u5305\u62ec\u5f53\u524d\u70b9\uff09\n\tint s1=sum;  //s1\u8bb0\u5f55\u6808\u5927\u5c0f\n\tfor(int i=0;i<4;++i){\n\t\tint xy=x+xx[i],yx=y+yy[i];\n\t\twhile(!a[xy][yx]){  //\u82e5\u8282\u70b9\u53ef\u8bbf\u95ee\uff0c\u5219\u4e0d\u65ad\u8bbf\u95ee\u76f4\u5230\u4e0d\u80fd\u8bbf\u95ee\n\t\t\ts[++s1]=(ahaha){xy,yx};a[xy][yx]=2;\n\t\t\txy+=xx[i],yx+=yy[i];\n\t\t}xy-=xx[i],yx-=yy[i];  //\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e0d\u53ef\u8bbf\u95ee\u8981\u5f80\u56de\u8d70\u4e00\u4e2a\n\t\tif(xy==x&&yx==y)continue;   //\u5982\u679c\u5728\u539f\u5730\u6ca1\u52a8\u8981\u8fd4\u56de\uff0c\u907f\u514d\u6b7b\u5faa\u73af\n\t\tans=max(ans,s1);  //ans\u5229\u7528\u6808\u5927\u5c0f\u8d4b\u503c\n\t\tif(a[xy+xx[i]][yx+yy[i]]!=2)dfs(xy,yx,s1);   //\u5982\u679c\u4e0b\u4e00\u4e2a\u70b9\u4e0d\u662f\u5df2\u8bbf\u95ee\u7684\u70b9\u5219\u7ee7\u7eed\u524d\u8fdb\n\t\twhile(s1>sum){    //\u64a4\u9500\u6807\u8bb0\uff0c\u5f39\u51fa\u6808\u9876\n\t\t\ta[s[s1].x][s[s1].y]=0;\n\t\t\t--s1;\n\t\t}\n\t}\n}\n\nchar c[5];\nint main(){\n\tn=read();m=read();\n\twhile(m--){\n\t\tscanf(\"%s\",c+1);int l=strlen(c+1),sum=0;\n\t\tfor(int i=2;i<=l;++i)\n\t\t\tsum=(sum<<3)+(sum<<1)+(c[i]-48);\n\t\ta[c[1]-'A'+1][sum]=1;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\ta[0][i]=a[n+1][i]=a[i][0]=a[i][n+1]=1;\n\ta[1][1]=2;s[1]=(ahaha){1,1};   //\u8bb0\u5f97\u628a(1,1)\u653e\u5165\u6808\u4e2d\uff0c\u5982\u679c\u4e0d\u653e\uff0c\u7b54\u6848\u8bb0\u5f97+1\n\tdfs(1,1,1);    //(1,1)\u5982\u679c\u4e0d\u653e\u5c31\u662fdfs(1,1,0)\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u600e\u4e48\u6837\u662f\u4e0d\u662f\u7b80\u6d01\u53c8\u7f8e\u89c2\u5462\uff1f\u559c\u6b22\u7684\u8bdd\uff0c\u70b9\u4e2a\u8d5e\u5427\n\n\u8c22\u8c22\u60a8\u7684\u89c2\u770b",
        "postTime": 1541053348,
        "uid": 34530,
        "name": "\u5b50\u8c26\u3002",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "###\uff08\u5982\u679c\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u8fc7\u7684\u8bdd\uff0c\u6216\u8bb8\u662f\u8fd8\u4f1a\u6bd4\u697c\u4e0b\u518d\u77ed6\u884c\u7684\u89e3\u6cd5\uff0c\u63a5\u66ff\u6700\u7f8e(\uffe3\u25bd\uffe3)~\\*\uff09\n\n\n\u4ee5\u4e3adfs\u4f1a\u8d85\u65f6\uff0c\u4f46\u662f\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u53ef\u7231\n\n\n##\u8d28\u6734dfs+cin is alright\n\n\n**\u5904\u7406\u8fb9\u754c\u6761\u4ef6**\u628a\u80fd\u8d70\u7684\u5750\u6807\u8bbe\u4e3a1\uff0c\u6709\u969c\u788d\u7684\u8bbe\u4e3a0\uff0c\u8d70\u8fc7\u7684\u8bbe\u4e3a2\uff0c\u9632\u6b62\u51fa\u73b0\u8d85\u51fa\u8fb9\u754c\u7684\u60c5\u51b5\u3002\n\n\n\u53ea\u80fd\u8f6c90\u5ea6\u5904\u7406\n\n```cpp\nint f[4]={0,1,0,-1},g[4]={1,0,-1,0};\n```\n**\u641c\u7d22\u65b9\u5411**\uff0c0-4\u5206\u522b\u4ee3\u8868\u53f3\u4e0b\u5de6\u4e0a \u6240\u4ee5\u53ea\u8981\u65cb\u8f6c\u524d\u540e\u7684**\u65b9\u5411\u4e4b\u548c**\u4e3a\u5947\u6570\uff0c\u65cb\u8f6c\u5ea6\u6570\u5c31\u662f90\u5ea6\n\n\n\u5177\u4f53\u770b\u7a0b\u5e8f\u6ce8\u91ca\u2193\u2193\u2193\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint v,i,m,n,j,k,a[125][125];\nint f[4]={0,1,0,-1},g[4]={1,0,-1,0};//\u641c\u7d22\u65b9\u5411\nchar c;\nvoid search(int x,int y,int t,int bs){//t\u5b58\u65b9\u5411 \n    if(bs>k) k=bs;//bs\u8868\u793a\u5f53\u524d\u8d70\u8fc7\u7684\u683c\u5b50\u6570\uff0ck\u5b58\u653e\u6700\u5927\u683c\u5b50\u6570 \n    if(a[x+f[t]][y+g[t]]==1) {//\u5982\u679c\u53ef\u4ee5\u7ee7\u7eed\u5411\u524d\u8d70 \n        a[x][y]=2;//\u5f53\u524d\u5750\u6807\u8bbe\u4e3a\u8d70\u8fc7 \n        search(x+f[t],y+g[t],t,bs+1);//\u65b9\u5411\u4e0d\u53d8\uff0c\u683c\u6570\u52a0\u4e00 \n        a[x][y]=1;//\u56de\u6eaf \n    }\n    else if(a[x+f[t]][y+g[t]]==0)//\u524d\u65b9\u4e3a\u969c\u788d\u65f6 \n        for(int i=0;i<4;i++)\n            if((a[x+f[i]][y+g[i]]==1)&&((i+t)%2!=0)){ \n                a[x][y]=2;  \n                search(x+f[i],y+g[i],i,bs+1);\n                a[x][y]=1;\n            } \n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++){\n        cin>>c>>v;\n        a[c-'A'+1][v]=1;//\u5148\u628a\u969c\u788d\u5b58\u4e3a1 \n    }\n    for(i=1;i<=n;i++)\n        for(j=1;j<=n;j++){\n            if(a[i][j]==1) a[i][j]=0;\n            else a[i][j]=1;//1\u548c0\u66ff\u6362\uff0c\u969c\u788d\u548c\u8fb9\u754c\u8bbe\u4e3a0 \uff0c\u53ef\u8d70\u683c\u8bbe\u4e3a1 \n        }\n    search(1,1,0,1);//\u641c\u7d22\u65b9\u5411\uff1a\u5411\u53f3 \n    search(1,1,1,1);//\u641c\u7d22\u65b9\u5411\uff1a\u5411\u4e0b \n    printf(\"%d\",k);\n}\n```\n\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u5450\uff0c\u5e0c\u671b\u80fd\u8fc7\u03c6(>\u03c9<\\*)\n",
        "postTime": 1506435926,
        "uid": 50562,
        "name": "ZUTTER_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "dfs\u9898\n\n\u8981\u5206\u51e0\u79cd\u60c5\u51b5\u8003\u8651\uff1a\n\n1.\u524d\u65b9\u7684\u683c\u5b50\u672a\u8d70\u4e14\u65e0\u969c\u788d\uff0c\u5f80\u524d\u8d701\u6b65\n\n2.\u524d\u65b9\u7684\u683c\u5b50\u6709\u969c\u788d\uff0c\u82e5\u5de6\u4fa7\u6216\u53f3\u4fa7\u672a\u8d70\u4e14\u65e0\u969c\u788d\uff0c\u8d70\u5de6\u4fa7\u6216\u53f3\u4fa7\n\n3.\u524d\u65b9\u7684\u683c\u5b50\u5df2\u8d70\uff0c\u5219\u9000\u51fa\u641c\u7d22\n\n\u8be6\u7ec6\u6ce8\u91ca\u4ee3\u7801\uff08\u4ec521\u884c\uff0c\u76ee\u524d\u6700\u77ed\u4ee3\u7801\uff0c30msAC\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t[129][129],n,b,d,m,p[4]={1,0,-1,0},q[4]={0,1,0,-1};//t\u6570\u7ec4\u5b58\u50a8\u683c\u5b50\u7684\u72b6\u6001\uff0c0\u4e3a\u53ef\u8d70\uff0c1\u4e3a\u6709\u969c\u788d\uff0c2\u4e3a\u5df2\u8d70\uff1bp\u6570\u7ec4\u5b58\u50a8x\u5750\u6807\u65b9\u5411\uff0cq\u6570\u7ec4\u5b58\u50a8y\u5750\u6807\u65b9\u5411\nchar c;\nvoid dfs(int x,int y,int s,int f){//s\u4e3a\u5f53\u524d\u5df2\u8d70\u683c\u5b50\u6570\uff0cf\u4e3a\u65b9\u5411\n\tt[x][y]=2,m=max(m,s++);//\u6807\u8bb0\u5f53\u524d\u683c\u5b50\u4e3a\u5df2\u8d70\uff0c\u66f4\u65b0\u7b54\u6848\n\tint u=x+p[f],v=y+q[f];//u\u4e3a\u4e0b\u4e00\u6b65x\u5750\u6807\uff0cv\u4e3a\u4e0b\u4e00\u6b65y\u5750\u6807\n\tif(t[u][v]==0)dfs(u,v,s,f),t[u][v]=0;//\u524d\u65b9\u53ef\u8d70\u5219\u7ee7\u7eed\u641c\u7d22\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06t\u6570\u7ec4\u7f6e\u4e3a0\n\tif(t[u][v]==1){//\u6709\u969c\u788d\n\t\tf=(f+1)%4,u=x+p[f],v=y+q[f];//\u5206\u522b\u641c\u7d22\u4e24\u4fa7\n\t\tif(t[u][v]==0)dfs(u,v,s,f),t[u][v]=0;\n\t\tf=(f+2)%4,u=x+p[f],v=y+q[f];\n\t\tif(t[u][v]==0)dfs(u,v,s,f),t[u][v]=0;\n\t}\n}\nint main(){\n\tcin>>n>>b;\n\tfor(int i=n+1;i>=0;i--)t[i][0]=t[0][i]=t[n+1][i]=t[i][n+1]=1;//\u5148\u6807\u8bb0\u8fb9\u754c\u4e3a\u6709\u969c\u788d\uff0c\u641c\u7d22\u8fc7\u7a0b\u4e2d\u5373\u65e0\u9700\u5224\u65ad\u8fb9\u754c\n\tfor(int i=0;i<b;i++)cin>>c>>d,t[c-64][d]=1;//\u6807\u8bb0\u969c\u788d\n\tdfs(1,1,1,0),dfs(1,1,1,1),cout<<m;//\u641c\u7d22\u5411\u4e0b\u548c\u5411\u53f3\u4e24\u4e2a\u65b9\u5411\uff0c\u8f93\u51fa\n}\n```\n",
        "postTime": 1564204947,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "\n**\u4ee3\u7801\u957f\u5ea6\u76ee\u6d4b\u6bd4\u697c\u4e0b\u90fd\u77ed \u76ee\u524d\u6700\u7f8e\u3002\u3002\u3002**\n\n\n\u7edd\u5bf9\u8981\u6ce8\u610f\uff1a\u8bfb\u5165\u53ef\u4ee5\u4e0d\u7528cin\uff0c\u6211scanf\u4e00\u904d\u8fc7\n\n\n\u6bd4196453250cn\u66f4\u77ed\uff0c\u66f4\u5feb\uff0c\u66f4\u5f3a\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cstdlib>\n#define For(i,a,b) for(register int i=(a);i<=(b);++i)\nusing namespace std;\nbool map[123][123];\nint n,m,ans=0,d[4][2]={{1,0},{-1,0},{0,1},{0,-1}},tx,ty; // \u8f6c\u5411\u7684\u6570\u7ec4\nchar s[10],vis[123][123];                        // d[i][p] i=0 \u5de6\uff0c =1 \u53f3\uff0c =2 \u4e0b\uff0c =3 \u4e0a\nvoid dfs(int x,int y,int dir,int num){    //x,y\u8868\u793a\u5f53\u524d\u5750\u6807\uff0cdir\u4e3a\u5f53\u524d\u65b9\u5411\uff0cnum\u8868\u793a\u7ecf\u8fc7\u70b9\u6570\n    if(vis[x][y]) {                // \u662f\u5426\u7ecf\u8fc7\n        ans=max(ans,num-1);      //num-1\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u7b97\u4e86\u4e24\u6b21\n        return ;\n    }\n    vis[x][y]=1;\n    tx=x+d[dir][0]; ty=y+d[dir][1];\n    if(map[tx][ty])\n        For(i,0,3){                //\u8003\u8651\u8f6c\u5411\n            if(i==dir) continue;        \n            tx=x+d[i][0];\n            ty=y+d[i][1];\n            if(!map[tx][ty])\n                   dfs(tx,ty,i,num+1);\n            }\n    else dfs(tx,ty,dir,num+1);    //\u4e0d\u7528\u8f6c\u5411\n    vis[x][y]=0;                //\u8bb0\u5f97\u56de\u6eaf\n}\nint main(){\n    int l,k;\n    scanf(\"%d%d\",&n,&m);\n    For(i,1,m){\n        scanf(\"%s\",s);\n        l=strlen(s); k=0;\n        For(i,1,l-1) k=(k<<3)+(k<<1)+(s[i]^48);        //\u5b58\u56fe\n        map[s[0]-64][k]=1;\n    }\n    For(i,1,n) map[i][0]=map[0][i]=map[n+1][i]=map[i][n+1]=1;    //\u5904\u7406\u8fb9\u754c\n    dfs(1,1,0,1);  dfs(1,1,2,1);    //\u51fa\u53d1\u8981\u4e0d\u5411\u5de6\uff0c\u8981\u4e0d\u5411\u4e0b\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1505657756,
        "uid": 19622,
        "name": "\u7f57\u65c5\u6d32",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "### ~~\u4e00\u53d1\u8fc7\u6837\u4f8b\u3001\u9898\u76ee\uff0c\u771f\u5f00\u68ee!~~\n\u54b3\u54b3\uff0c\u8fdb\u5165\u6b63\u9898  \n\u5176\u5b9e\u8fd9\u9898\u5e76\u6ca1\u6709\u60f3\u8c61\u4e2d\u7684\u590d\u6742\uff0c\u5c31\u662f\u4e00\u4e2a\u667a\u969c\u7684\u5927\u7206\u641c\uff0c\u6211\u611f\u89c9\u6211\u90fd\u6ca1\u6709\u52a0\u4e0a\u4ec0\u4e48\u4f18\u5316\uff0c\u7136\u540e\u5c31 $AC$ \u4e86\u3002  \n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1564149298100&di=01f7f0cd039525f80a3b84201caf6b16&imgtype=0&src=http%3A%2F%2Fimg.wxcha.com%2Ffile%2F201703%2F17%2Fe8b8bcb139.jpeg)  \n\u6211\u7528\u7684\u6709\u70b9\u50cf\u662f\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u7136\u800c\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u4e0d\u8fd9\u4e48\u7528\u3002  \n\u6bcf\u6b21\u641c\u7d22\u8def\u5f84\u65f6\uff0c\u6211\u4eec\u5c31\u4e00\u6761\u9053\u8d70\u5230\u9ed1\uff0c\u4e0d\u649e\u5357\u5899\u4e0d\u56de\u5934\uff0c\u7136\u540e\u5728\u9047\u5230\u969c\u788d\u6216\u8fb9\u754c\u65f6\uff0c\u679a\u4e3e\u5176\u4f59\u7684\u65b9\u5411\uff0c\u518d\u78b0\u5230\u81ea\u5df1\u8d70\u8fc7\u7684\u8def\u5f84\u4fbf\u505c\u4e0b\u6765\uff0c\u5f00\u59cb\u56de\u6eaf   \n$Code:$\n```\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nbool book[121][121];\nint n,b,ans=0;\nint a[121][121],f[121][121][5][2]; \nint t1[5]={0,0,1,0,-1};\nint t2[5]={0,1,0,-1,0};\nint dfs(int x,int y,int move); \nbool check(int x,int y);\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\t \n\tscanf(\"%d %d\",&n,&b);\n\tfor(int i=1;i<=b;++i)\n\t{\n\t\tchar ch;int num;\n\t\tcin>>ch>>num;\n\t\ta[num][ch-'A'+1]=1; //\u5728\u5730\u56fe\u4e0a\u6807\u8bb0\u51fa\u969c\u788d\n\t} \n\tprintf(\"%d\",max(dfs(1,1,1),dfs(1,1,2))); //\u6ce8\u610f\uff0c\u4ece\u8d77\u70b9\u51fa\u53d1\u7684\u65f6\u5019\uff0c\u6709\u4e24\u6761\u8def\u53ef\u4ee5\u8d70\uff0c\u53f3\u8fb9\u548c\u4e0b\u8fb9\n\treturn 0;\n} \nbool check(int x,int y)  //\u5224\u65ad\u51fd\u6570\uff0c\u5224\u65ad\u73b0\u5728\u662f\u5426\u9047\u5230\u4e86\u969c\u788d\u3001\u8fb9\u754c\u6216\u8005\u81ea\u5df1\u8d70\u8fc7\u7684\u8def\n{\n\tif(x>n || x<1 || y>n || y<1 || a[x][y] || book[x][y]) return true;\n\treturn false; \n}\nint dfs(int x,int y,int move) //x\u662f\u6a2a\u5750\u6807,y\u662f\u7eb5\u5750\u6807,move\u662f\u79fb\u52a8\u7684\u65b9\u5411:1\u8868\u793a\u53f3,2\u8868\u793a\u4e0b,3\u8868\u793a\u5de6,4\u8868\u793a\u4e0a\n{\n\tint d=1;  //\u8bb0\u5f55\u6bcf\u4e2a\u65b9\u5411\u7684\u6700\u5927\u503c\n\tbook[x][y]=true; //\u6807\u8bb0\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u6765\u8fc7\n\tint tx=x+t1[move],ty=y+t2[move]; //\u5224\u65ad\u76ee\u524d\u79fb\u52a8\u7684\u65b9\u5411\n\tif(!book[tx][ty]) //\u5982\u679c\u6ca1\u6765\u8fc7\u8fd9\u4e2a\u70b9\uff0c\u624d\u80fd\u8fdb\u884c\u4e0b\u9762\u7684\u5224\u65ad\n\t{\n\t\tif(check(tx,ty))  //\u68c0\u6d4b\u662f\u5426\u5408\u6cd5\n\t\t{\n\t\t\tfor(int i=1;i<=4;++i)//\u5982\u679c\u4e0d\u5408\u6cd5\uff0c\u90a3\u4e48\u9009\u62e9\u4e00\u6761\u53ef\u4ee5\u8d70\u7684\u8def\n\t\t\t{\n\t\t\t\ttx=x+t1[i]; ty=y+t2[i];\n\t\t\t\tif(!check(tx,ty)) //\u4e0b\u4e00\u4e2a\u70b9\u4e5f\u5fc5\u987b\u5408\u6cd5\n\t\t\t\t\td=max(d,dfs(tx,ty,i)+1); \n\t\t\t}\n\t\t}\n\t\telse //\u5982\u679c\u5408\u6cd5\uff0c\u90a3\u4e48\u5c31\u7ee7\u7eed\u5f80\u4e0b\u8d70\n\t\t\td=dfs(tx,ty,move)+1; //\u7edf\u8ba1\u8d70\u8fc7\u7684\u4e2a\u6570\u65f6\u6ce8\u610f\u52a0\u4e0a\u81ea\u5df1\u672c\u8eab\u8fd9\u4e2a\u8282\u70b9\n\t}\n\tbook[x][y]=false; //\u65e0\u8def\u53ef\u8d70\u540e\uff0c\u628a\u8fd9\u4e2a\u70b9\u7684\u6807\u8bb0\u5220\u6389\n\treturn d; //\u8fd4\u56de\u5728x,y\u80fd\u8d70\u7684\u6700\u5927\u8282\u70b9\u6570\n}\n```",
        "postTime": 1564139969,
        "uid": 101042,
        "name": "zhz\u5c0f\u849f\u84bb",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u5178\u578b\u7684\u641c\u7d22\u9898\uff0c\u6211\u4eec\u7528$dfs(x,y,step,s)$\u8868\u793a\u8717\u725b\u5728$(x,y)$\u8fd9\u4e2a\u70b9\uff0c\u8d70\u4e86$step$\u6b65\uff0c\u5f53\u524d\u7684\u65b9\u5411\uff08\u8d77\u70b9\u7684$s=0$\uff0c\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\uff09\u3002\n\n\u5f53\u8717\u725b\u786e\u5b9a\u4e00\u4e2a\u65b9\u5411\u540e\uff0c\u6211\u4eec\u5c31\u4e0d\u65ad\u8ba9\u5b83\u524d\u8fdb\uff0c\u540c\u65f6\u8bb0\u5f55\u5b83\u8d70\u8fc7\u7684\u683c\u5b50\uff0c\u76f4\u5230\u5b83\u9047\u5230\u969c\u788d\uff0c\u51fa\u754c\u6216\u8005\u5230\u8fbe\u5df2\u8d70\u8fc7\u7684\u70b9\u505c\u6b62\u3002\n\n\u5982\u679c\u8717\u725b\u9047\u5230\u969c\u788d\uff0c\u6211\u4eec\u5c31\u679a\u4e3e\u6bcf\u4e2a\u65b9\u5411\uff0c\u56e0\u4e3a\u524d\u65b9\u6709\u969c\u788d\uff0c\u540e\u65b9\u5df2\u7ecf\u8d70\u8fc7\uff0c\u6240\u4ee5\u8717\u725b\u53ea\u4f1a\u5411\u5de6\u6216\u5411\u53f3\u8f6c\uff0c\u4e0d\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002\n\n\u4ee3\u7801\u4e2d$goto$\u7684\u4f5c\u7528\u662f\u627e\u5230\u540e\u9762\u7684\u5355\u8bcd\uff0c\u4f7f\u4e4b\u8df3\u8fc7\u4e00\u4e9b\u8bed\u53e5\uff0c\u611f\u89c9\u4f5c\u7528\u6bd4$break$,$continue$\u5f3a\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u5224\u65ad\u3002\n\n\u6700\u540e\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nconst int MAXN = 120;\nchar x;\nint n,m,y,Ans;\nchar Map[ MAXN + 5 ][ MAXN + 5 ];\nbool vis[ MAXN + 5 ][ MAXN + 5 ];\n\nint tx[ 5 ] = { 0 , 1 , -1 , 0 , 0 };\nint ty[ 5 ] = { 0 , 0 , 0 , 1 , -1 };\nvoid dfs( int x , int y , int step , int s ) {\n\tAns = max( Ans , step );\n\tif( s ) {\n\t\tint fx = x + tx[ s ] , fy = y + ty[ s ];\n\t\tif( fx == 0 || fy == 0 || fx == n + 1 || fy == n + 1 || Map[ fx ][ fy ] == '#' )\n\t\t\tgoto there;\n\t\tif( vis[ fx ][ fy ] )\n\t\t\treturn;\n\t\tvis[ fx ][ fy ] = 1;\n\t\tdfs( fx , fy , step + 1 , s );\n\t\tvis[ fx ][ fy ] = 0;\n\t\treturn;\n\t}\n\tthere:;\n\tfor( int i = 1 ; i <= 4 ; i ++ ) {\n\t\tint fx = x + tx[ i ] , fy = y + ty[ i ];\n\t\tif( fx == 0 || fy == 0 || fx == n + 1 || fy == n + 1 || Map[ fx ][ fy ] == '#' || vis[ fx ][ fy ] )\n\t\t\tcontinue;\n\t\tvis[ fx ][ fy ] = 1;\n\t\tdfs( fx , fy , step + 1 , i );\n\t\tvis[ fx ][ fy ] = 0;\n\t}\n}\n\nint main( ) {\n\tscanf(\"%d %d\",&n,&m);\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t\tfor( int j = 1 ; j <= n ; j ++ )\n\t\t\tMap[ i ][ j ] = '.';\n\tfor( int i = 1 ; i <= m ; i ++ ) {\n\t\tcin >> x;\n\t\tscanf(\"%d\",&y);\n\t\tMap[ y ][ x - 'A' + 1 ] = '#';\n\t}\n\t/*for( int i = 1 ; i <= n ; i ++ ) {\n\t\tfor( int j = 1 ; j <= n ; j ++ )\n\t\t\tprintf(\"%c\",Map[ i ][ j ]);\n\t\tprintf(\"\\n\");\n\t}*/\n\tvis[ 1 ][ 1 ] = 1;\n\tdfs( 1 , 1 , 1 , 0 );\n\tprintf(\"%d\",Ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1564121439,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "P1560 [USACO5.2]\u8717\u725b\u7684\u65c5\u884c"
    },
    {
        "content": "\u4e00\u53e3\u6c14\u7b2c\u4e8c\u53d1\u9898\u89e3\uff0c\u6bd4\u8f83\u751f\u786c\u7684\u5957\u7528\u4e86\u8ba1\u7b97\u51e0\u4f55\u7684\u77e5\u8bc6\uff0c\u8c03\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff0c\u603b\u7b97\u662f\u8fc7\u4e86\u3002\n\n\u8fd9\u79cdline\u7ed3\u6784\u4f53\u6807\u8bb0\u4e4b\u524d\u7684\u8def\u5f84\u7136\u540e\u9012\u5f52\u7684\u5199\u6cd5\uff0c\u662f\u4eca\u5929\u81ea\u5df1\u505a\u9898\u7684\u65f6\u5019\u60f3\u51fa\u6765\u7684\uff0c\u611f\u89c9\u8fd8\u4e0d\u9519\uff0c\u6211\u7684p1153\u9898\u89e3\u6709\u540c\u6b3e\u5199\u6cd5\n\n\u5177\u4f53\u7ec6\u8282\u6ce8\u91ca\u91cc\u90fd\u6709\uff0c\u6211\u7528\u7684\u662f\u4e24\u4e2avector\uff08c,r\uff09\u5b58\u7684\u884c\u548c\u5217\u7684\u969c\u788d\u7269\u5750\u6807\uff0c\u8fd9\u6837\u5199\u7684\u5199\u6cd5\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\u5982\u679cn\u7279\u522b\u59271e5\u52301e6\u5de6\u53f3\uff0c\u8fd9\u79cd\u5199\u6cd5\u4e0d\u9700\u8981\u4e00\u683c\u4e00\u683c\u53bb\u8df3\uff0c\u800c\u662f\u4e00\u4e0b\u5230\u4f4d\uff0c\u56e0\u4e3a\u4ed6\u7684\u969c\u788d\u7269\u6bd4\u8f83\u5c11\uff0c\u53ef\u4ee5\u91c7\u7528\u8fd9\u79cd\u79bb\u6563\u5316\u7684\u601d\u60f3\u3002\n\n\uff08\u4ee3\u7801\u91cf\u4ec5\u505a\u7ec3\u4e60\uff0c\u4e0d\u5efa\u8bae\u8003\u8bd5\u65f6\u5019\u5199\uff09\n\n        \n```cpp\n#include<cstdio>\n#include<vector>\n##include<algorithm>\nusing namespace std;\nconst int maxn=125;\nconst int maxnode=1e3;\nint mx=0,n,m,cnt=-1,tmp1;//cnt\u8bb0\u5f55\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u8d70\u4e86\u591a\u5c11\u7ebf\u6bb5\nchar ch;\nvector<int> c[maxn],r[maxn];\nstruct point\n{\n    int x,y;\n    point(int x=0,int y=0):x(x),y(y){}\n}a[maxnode];\ntypedef point vec;\nstruct line//\u5355\u5f00\u4e00\u4e2a\u8868\u793a\u8d70\u8fc7\u7684\u7ebf\u6bb5\u7684\u7ed3\u6784\u4f53 \n{\n    point p1,p2;\n    line(point p1=point(0,0),point p2=point(0,0)):p1(p1),p2(p2){}\n}tmp[maxnode];\nvec operator-(point a,point b){return vec(a.x-b.x,a.y-b.y);}\nbool operator==(vec a,vec b){return a.x==b.x&&a.y==b.y;}\nint cross(vec a,vec b){return a.x*b.y-a.y*b.x;}//\u53c9\u79ef\nint dot(vec a,vec b){return a.x*b.x+a.y*b.y;}//\u70b9\u79ef\nbool onseg(point p,point a1,point a2){return cross(a1-p,a2-p)==0&&dot(a1-p,a2-p)<0;}//\u5224\u65adp\u70b9\u5728a1a2\u7ebf\u6bb5\u4e0a\nbool segproperintersection(point a1,point a2,point b1,point b2)\n{\n    int c1=cross(a2-a1,b1-a1),c2=cross(a2-a1,b2-a1),c3=cross(b2-b1,a1-b1),c4=cross(b2-b1,a2-b1);\n    return c1*c2<0&&c3*c4<0;\n}\n//\u8ba1\u7b97\u51e0\u4f55\u5e38\u7528\u5de5\u5177 \nbool judge(point a1,point a2,point b1,point b2)//\u4e0e\u4e4b\u524d\u76f8\u4ea4\u5904\u7406 \n{\n    if(segproperintersection(a1,a2,b1,b2)||onseg(a2,b1,b2)||onseg(b1,a1,a2)||onseg(b2,a1,a2)||a2==b1||a2==b2)//\u8fd9\u91cc\u4e0d\u592a\u597d\u60f3\u3002\u3002\u603b\u4e4b\u90fd\u5199\u4e0a\uff0c\u4e5f\u662f\u56e0\u4e3a\u8fd9\u91cc\u8c03\u4e86\u597d\u957f\u65f6\u95f4\u3002\u3002\n        return 1;\n    else return 0;\n}\nvoid dfs(int tc,int tr ,int dir,int dis)//\u5206\u522b\u662f\u884c\uff0c\u5217\uff0c\u65b9\u5411\uff0c1234\u4ee3\u8868\u53f3\u4e0b\u5de6\u4e0a\uff0c\u8d70\u7684\u65b9\u683c\u6570 \n{\n    mx=max(mx,dis);//\u6839\u636e\u8fd9\u4e2a\u5199\u6cd5\uff0c\u9700\u8981\u76f4\u63a5\u66f4\u65b0 \n    if(dir==1)//\u540c\u7406 \n    {\n        int k=0,tmp1=1e9;//\u4ecec\u3010tc\u3011\u7684vector\u91cc\u9762\u53bb\u627e\u7b2c\u4e00\u4e2a\u9047\u5230\u7684\u969c\u788d \n        while(c[tc][k]<tr)\n            k++;\n        if(c[tc][k]-tr<=1)\n            return ;\n        int d=c[tc][k]-tr-1;\n        tmp[++cnt]=line(point(tc,tr),point(tc,tr+d));\n        bool flag=0;//flag\u548c\u4e0b\u9762\u7684judge\u5224\u65ad\u662f\u5426\u548c\u4e4b\u524d\u7684\u7ebf\u6bb5\u6709\u4e00\u6761\u91cd\u590d \n        for(int i=0;i<cnt;i++)\n        { \n            if(judge(tmp[cnt].p1,tmp[cnt].p2,tmp[i].p1,tmp[i].p2))\n                flag=1,tmp1=min(tmp1,tmp[i].p1.y);\n        }\n        if(!flag)//\u4e0d\u91cd\u590d\u5c31\u5f80\u4e0b\u641c \n        {\n            dfs(tc,tr+d,4,dis+d);\n            dfs(tc,tr+d,2,dis+d);\n        }\n        cnt--;\n        if(flag)//\u4e00\u65e6\u91cd\u590d\u5c31\u53ea\u80fd\u56de\u6eaf \n        {\n            d=tmp1-tr-1;\n            mx=max(mx,d+dis);//\u540c\u65f6\u5728\u8fd9\u91cc\u66f4\u65b0mx \n            return ;\n        }\n    }\n    else if(dir==2)//\u540c\u7406 \n    {\n        int k=0,tmp1=1e9;\n        while(r[tr][k]<tc)\n            k++;\n        if(r[tr][k]-tc<=1)\n            return ;\n        int d=r[tr][k]-tc-1;\n        tmp[++cnt]=line(point(tc,tr),point(tc+d,tr));\n        bool flag=0;\n        for(int i=0;i<cnt;i++)\n        {\n            if(judge(tmp[cnt].p1,tmp[cnt].p2,tmp[i].p1,tmp[i].p2))\n                flag=1,tmp1=min(tmp1,tmp[i].p1.x);\n        }\n        if(!flag)\n        {\n            dfs(tc+d,tr,1,dis+d);\n            dfs(tc+d,tr,3,dis+d);\n        }\n        cnt--;\n        if(flag)\n        {\n            d=tmp1-tc-1;\n            mx=max(mx,dis+d);\n            return;\n        }\n    }\n    else if(dir==3)//\u540c\u7406 \n    {\n        int k=c[tc].size()-1,tmp1=0;//\u8fd9\u91cc\u627e\u7b2c\u4e00\u4e2a\u969c\u788d\u7684\u65f6\u5019\uff0c\u8981\u6ce8\u610f\u4ece\u53cd\u65b9\u5411\u627e\uff0c\u4e0b\u9762\u540c\u7406 \n        while(c[tc][k]>tr)\n            k--;\n        if(tr-c[tc][k]<=1)\n            return ;\n        int d=tr-c[tc][k]-1;\n        tmp[++cnt]=line(point(tc,tr),point(tc,tr-d));\n        bool flag=0;\n        for(int i=0;i<cnt;i++)\n        {\n            if(judge(tmp[cnt].p1,tmp[cnt].p2,tmp[i].p1,tmp[i].p2))\n            {\n                flag=1,tmp1=max(tmp1,tmp[i].p1.y);\n            } \n        }\n        if(!flag)\n        {\n            dfs(tc,tr-d,4,dis+d);\n            dfs(tc,tr-d,2,dis+d);\n        }\n        cnt--;\n        if(flag)\n        {\n            d=tr-tmp1-1;\n            mx=max(mx,dis+d);\n            return ;\n        }\n    }\n    if(dir==4)//\u540c\u7406 \n    {\n        int k=r[tr].size()-1,tmp1=0;\n        while(r[tr][k]>tc)\n            k--;\n        if(tc-r[tr][k]<=1)\n            return ;\n        int d=tc-r[tr][k]-1;\n        tmp[++cnt]=line(point(tc,tr),point(tc-d,tr));\n        bool flag=0,ok=0;\n        for(int i=0;i<cnt;i++)\n        {\n            if(judge(tmp[cnt].p1,tmp[cnt].p2,tmp[i].p1,tmp[i].p2))\n            {\n                flag=1,tmp1=max(tmp1,tmp[i].p1.x);    \n            }\n        }\n        if(!flag)\n        {\n            dfs(tc-d,tr,1,dis+d);\n            dfs(tc-d,tr,3,dis+d);\n        }\n        cnt--;\n        if(flag)\n        {\n            d=tc-tmp1-1;\n            mx=max(mx,d+dis);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        c[i].push_back(0),r[i].push_back(0); //\u5904\u7406\u8fb9\u754c\u7684\u969c\u788d \n    for(int i=1,t;i<=m;i++)\n    {\n        scanf(\" %c%d\",&ch,&t);//\u6ce8\u610f\u5192\u53f7\u91cc\u7684\u7a7a\u683c\uff0cscanf\u5927\u6cd5\u597d \n        ch-='A'-1;\n        c[t].push_back(ch);\n        r[ch].push_back(t);\n    }\n    for(int i=1;i<=n;i++)\n        c[i].push_back(n+1),r[i].push_back(n+1);//\u5904\u7406\u8fb9\u754c\u7684\u969c\u788d \n    tmp[++cnt]=line(point(1,1),point(1,1));//\u521d\u59cb\u4f4d\u7f6e\u6765\u4e00\u6761\u957f\u5ea6\u7ebf\u6bb5\n    dfs(1,1,1,1);\n    dfs(1,1,2,1);//\u4e24\u4e2a\u65b9\u5411\u53bb\u641c\u7d22 \n    printf(\"%d\\n\",mx);\n}\n```",
        "postTime": 1514896700,
        "uid": 52574,
        "name": "steven\u5f20",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u9898\u610f\u7ffb\u8bd1\u7684\u5f88\u51c6\u786e\uff0c\u4e0d\u518d\u8d58\u8ff0\uff0c\u76f4\u63a5\u5f00\u59cb\u8bf4\u660e\n\n\u6bcf\u6b21\u9047\u5230\u969c\u788d\u65f6\u5b83\u53ef\u4ee5\u8f6c\uff0c\u5426\u5219\u4e0d\u53ef\u4ee5\u8f6c\uff0c\u6240\u4ee5\u6b64\u65f6\u5c31\u53ef\u4ee5\u5f97\u5230\u5728\u524d\u65b9\u53ef\u4ee5\u8d70\u65f6\uff0c\u76f4\u63a5\u5f80\u524d\u8d70\n\n\u5982\u679c\u9047\u5230\u969c\u788d\u5c31\u53ef\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u5c06\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u5224\u65ad\u53ef\u4e0d\u53ef\u884c\uff0c\u7136\u540e\u8fdb\u884cdfs\n\n\u8f93\u5165\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u8981\u628a\u8fb9\u754c\u770b\u4f5c\u969c\u788d\u5373\u53ef\n\nps\uff1a\u6807\u8bb0\u5df2\u8d70\u8fc7\u7684\u65f6\u5019\u5343\u4e07\u8981\u548c\u969c\u788d\u533a\u5206\u5f00\uff01\u4e0d\u80fd\u76f4\u63a5\u5f53\u505a\u969c\u788d\uff01\u8fd9\u6837\u9047\u5230\u81ea\u5df1\u8def\u7ebf\u5c31\u80fd\u8f6c\u5f2f\u7136\u540e\u4f7f\u7ed3\u679c\u9519\u8bef\uff08\u6211\u8c03\u4e86\u591a\u4e45\u6765\u7740\uff1f\uff09\n\ndfs\u51fd\u6570\uff1a\n\n$dfs(x, y, d, step)$\u4e3a\u5728$(x,y)$\uff0c\u65b9\u5411\u4e3a$d$\uff0c\u5df2\u8d70$step$\u6b65\u7684\u60c5\u51b5\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n, b, a, m[125][125], flag[125][125], ans, dx[5] = {0, 0, 1, 0, -1}, dy[5] = {0, 1, 0, -1, 0};\nchar c;\nvoid dfs(int x, int y, int d, int step){\n\tif(!m[x][y] || flag[x][y])\n\t\treturn;\n\tans = max(ans, step);\n    if(m[x + dx[d]][y + dy[d]] != 0){\n        flag[x][y] = 1;\n        dfs(x + dx[d], y + dy[d], d, step + 1);\n        flag[x][y] = 0;\n    } else {\n        for(int i = 1;i <= 4;i++){\n        \tif(m[x + dx[i]][y + dy[i]] == 1 && (i + d) % 2){ \n               flag[x][y] = 1;  \n               dfs(x + dx[i], y + dy[i], i, step + 1);\n               flag[x][y] = 0;\n            } \n        }\n    }\n}\nint main(){\n\tcin>>n>>b;\n\tfor(int i = 1;i <= b;i++){\n\t\tcin>>c>>a;\n\t\tm[c - 'A' + 1][a] = 1;\n\t}\n    for(int i = 1;i <= n;i++)\n        for(int j = 1;j <= n;j++)\n            m[i][j] = 1 - m[i][j];\n\tdfs(1, 1, 1, 1);\n\tdfs(1, 1, 2, 1);\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1619109467,
        "uid": 241542,
        "name": "_OJF_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1560\u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "## \u9898\u610f\n- ### \u7ed9\u4f60\u4e00\u4e2a $n*n$ \u7684\u68cb\u76d8\uff0c\u68cb\u76d8\u4e0a\u6709\u4e00\u4e9b\u969c\u788d\u3002\n- ### \u4e00\u76f4\u5f88\u7b28\u7684\u8717\u725b\u4f1a\u6cbf\u7740\u67d0\u4e2a\u65b9\u5411\u4e00\u76f4\u8d70\uff0c\u649e\u5230\u5899\u5b83\u53ef\u4ee5\u5de6\u62d0\u6216\u8005\u53f3\u62d0\uff0c\u9047\u5230\u81ea\u5df1\u5df2\u7ecf\u8d70\u8fc7\u7684\u683c\u5b50\u5b83\u5c31\u505c\u4e0b\u6765\u4e0d\u8d70\u4e86\u3002\n- ### \u73b0\u5728\u8fd9\u53ea\u8717\u725b\u4ece (1,1) \u7684\u4f4d\u7f6e\u51fa\u53d1\uff0c\u8bf7\u95ee\u5b83\u6700\u591a\u80fd\u8d70\u591a\u5c11\u683c\u3002\n\n## \u505a\u6cd5\n\u8fd9\u9053\u9898\u5176\u5b9e\u76f8\u5f53\u4e8e\u4e00\u4e2a dfs \u7684\u6a21\u677f\u3002\n\n\u53ef\u662f\uff0c\u4e3a\u4ec0\u4e48 dfs **\u4e0d\u4f1a\u8d85\u65f6**\uff1f\n\n\u969c\u788d\u6570\u53ef\u662f\u8fbe\u5230\u4e86 200 \u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u662f\u4f1a\u8fbe\u5230 $O(2^{200})$ \u5417\uff1f\n\n\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u683c\u5b50**\u53ea\u80fd\u8d70\u4e00\u904d**\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u6ca1\u6709\u90a3\u4e48\u9ad8\uff0c\u53ea\u6709 $O(n^2)$\u3002\n\n## AC \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\nint n,m,mp[125][125],dx[]{0,0,1,-1},dy[]{1,-1,0,0};\nbool vis[125][125];\n\ninline bool can(int x,int y)\n{\n\treturn x>=1&&x<=n&&y>=1&&y<=n&&mp[x][y]==0&&!vis[x][y];\n}\n\nint count(int x,int y,int f)\n{\n\tint nx=x+dx[f],ny=y+dy[f]; // \u4e0b\u4e00\u6b65\u7684\u4f4d\u7f6e \n\tif(vis[nx][ny]) // \u8d70\u8fc7\u4e86\uff0c\u4e0d\u7528\u8d70\u4e86 \n\t{\n\t\treturn 1;\n\t}\n\tint ans=0;\n\tif(!can(nx,ny)) // \u649e\u5899\u4e86 \n\t{\n\t\tfor(int i=0;i<4;i++) // \u679a\u4e3e\u8f6c\u5f2f\u65b9\u5411 \n\t\t{\n\t\t\tint nnx=x+dx[i],nny=y+dy[i]; // \u8f6c\u5f2f\u540e\u7684\u4f4d\u7f6e \n\t\t\tif(can(nnx,nny)) // \u80fd\u8d70\u5c31\u4e00\u5b9a\u662f\u5f80\u5de6\u6216\u8005\u5f80\u53f3 \n\t\t\t{\n\t\t\t\tvis[nnx][nny]=true; // \u6807\u8bb0 \n\t\t\t\tans=max(ans,count(nnx,nny,i)); // \u5f80\u65b0\u65b9\u5411\u8d70 \n\t\t\t\tvis[nnx][nny]=false; // \u53d6\u6d88\u6807\u8bb0 \n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tvis[nx][ny]=true; // \u6807\u8bb0 \n\t\tans=count(nx,ny,f); // \u4e00\u76f4\u5f80\u8fd9\u4e2a\u65b9\u5411\u8d70\u4e0b\u53bb \n\t\tvis[nx][ny]=false; // \u53d6\u6d88\u6807\u8bb0 \n\t}\n\treturn ans+1; // \u8bb0\u5f97\u52a0\u4e0a\u5f53\u524d\u683c \n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tchar x;\n\t\tint y;\n\t\tscanf(\" %c%d\",&x,&y); // \u6ce8\u610f\u4e00\u4e0b\u8f93\u5165\u683c\u5f0f\n\t\tmp[x-'A'+1][y]=1;\n\t}\n\tvis[1][1]=true; // \u8d77\u70b9\u8d70\u8fc7\u4e86 \n\tprintf(\"%d\\n\",max(count(1,1,0),count(1,1,2))); // \u5f80\u5de6\u548c\u5f80\u4e0b \n\treturn 0;\n}\n```\n",
        "postTime": 1619084069,
        "uid": 251130,
        "name": "lovely_ckj",
        "ccfLevel": 0,
        "title": "P1560 [USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u66b4\u529b\u5373\u53ef\uff0c\u5927\u7ea6\u51e0\u4e07\u6b21\u7684\u6837\u5b50\uff0c\u4e0d\u7528\u6015\u8d85\u65f6\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[210][210];\nint ans;\nconst int dx[4]={0,1,0,-1};\nconst int dy[4]={1,0,-1,0};//\u641c\u7d22\u65b9\u5411\nvoid dfs(int x,int y,int t,int k)\n{\n    if(k>ans) ans=k;//\u53d6\u6700\u5927\u503c \n    if(a[x+dx[t]][y+dy[t]]==1) //\u5982\u679c\u6b63\u65b9\u5411\u53ef\u4ee5\u8d70 \n\t{\n        a[x][y]=2;\n        dfs(x+dx[t],y+dy[t],t,k+1); //\u5f80\u4e0b\u8d70 \n        a[x][y]=1;\n    }\n    else if(a[x+dx[t]][y+dy[t]]==0)//\u5982\u679c\u524d\u9762\u4e0d\u53ef\u4ee5\u8d70 \n    {\n        for(int i=0;i<4;i++)//\u6362\u4e00\u4e2a\u65b9\u5411\u8d70 \n    \t{\n            if(a[x+dx[i]][y+dy[i]]==1 && (i+t)%2!=0)\n\t\t\t{\n                a[x][y]=2;  \n                dfs(x+dx[i],y+dy[i],i,k+1);\n                a[x][y]=1;\n            } \n        }\n    }\n}\nint main()\n{\n\tint i,j,v;\n\tchar c;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++)\n\t{\n        cin>>c>>v;//\u8f93\u5165 \n        a[c-'A'+1][v]=1;//\u5148\u628a\u969c\u788d\u5b58\u4e3a1 \n    }\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n\t\t{\n            if(a[i][j]==1) a[i][j]=0;\n            else a[i][j]=1;//1\u548c0\u66ff\u6362\uff0c\u969c\u788d\u548c\u8fb9\u754c\u8bbe\u4e3a0 \uff0c\u53ef\u8d70\u683c\u8bbe\u4e3a1 \n        }\n    }\n    dfs(1,1,0,1);//\u641c\u7d22\u65b9\u5411\uff1a\u5411\u53f3 \n    dfs(1,1,1,1);//\u641c\u7d22\u65b9\u5411\uff1a\u5411\u4e0b \n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1527255316,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u7528\u4e86\u4e00\u4e2a\u5f88\u795e\u5947\uff08\u5947\u8469\uff09\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u5728\u67d0\u4e2a\u4f4d\u7f6e\u82e5\u65b9\u5411\u6ee1\u8db3\u6761\u4ef6(\u4f1a\u649e\u4e0a)\u5c31\u6807\u8bb0\u4e3a1\uff08\u65b9\u4fbf\u5728\u6df1\u641c\u65f6\u8f6c\u5f2f\uff09\uff1b\n\n\u6211\u4eec\u7528\u4e00\u4e2amap[x][y][dire]\u7684\u4e09\u7ef4\u6570\u7ec4\u50a8\u5b58\uff1a\u5728\u5750\u6807\u4e3a\uff08x,y\uff09\u7684\u5730\u65b9\u82e5\u6b64\u65f6\u65b9\u5411\u4e3adire\u4e14map[x][y][dire]=1\u5c31\u9700\u8981\u8f6c\u5f2f\uff1b\n\n\u5f53\u7136\u9996\u5148\u8981\u5c06\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5b57\uff1b\n\n\u65b9\u5411\u7528\u6570\u5b57\u8868\u793a\uff1a1->\u5411\u4e0b\uff0c2->\u5411\u53f3\uff0c3->\u5411\u4e0a\uff0c4->\u5411\u5de6\uff1b\n\n\u4f8b\u5982\uff1a\u6709\u8def\u969c\uff08E,2\uff09;\n\n\u6240\u4ee5\u6211\u4eec\u8ba9\uff1a\n\n```cpp\nmap[E-\u2018A\u2019+1][2+1][3]=1;\nmap[E-'A'+1][2-1][1]=1;\nmap[E-'A'+1-1][2][2]=1;\nmap[E-'A'+1+1][2][4]=1;\n```\n\u8fb9\u754c\u540c\u7406\uff1b\n\n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nconst int maxn=1500;\nusing namespace std;\nbool vis[maxn][maxn];\nint n,ans,k,dire;\nint a[maxn][maxn];\nint dir[5][2]={{0,0},{0,1},{1,0},{0,-1},{-1,0}};// 1->\u5411\u4e0b\uff0c2->\u5411\u53f3\uff0c3->\u5411\u4e0a\uff0c4->\u5411\u5de6\uff1b \nint map[maxn][maxn][5];//\u5728\u54ea\u4e2a\u4f4d\u7f6e\u671d\u54ea\u4e2a\u65b9\u5411\uff1b \nbool flag;\nvoid dfs(int x,int y,int step)\n{\n    if(x>n || y>n || x<=0 || y<=0){return;}//\u8d85\u51fa\u8fb9\u754c\u56de\u6eaf \n    if(a[x][y]){return;}//\u9047\u5230\u969c\u788d\u56de\u6eaf \n    if(vis[x][y] && step>ans){ans=step;return;}//\u9047\u5230\u8d70\u8fc7\u7684\u8def\uff0c\u66f4\u65b0\u7b54\u6848\uff1b \n    if(vis[x][y])return;\n//    cout<<x<<\" \"<<y<<endl;\n    vis[x][y]=1;\n//    system(\"pause\");\n    if(dire==1)dfs(x,y+1,step+1);\n    else if(dire==2)dfs(x+1,y,step+1);\n    else if(dire==3)dfs(x,y-1,step+1);\n    else if(dire==4)dfs(x-1,y,step+1);\n    if(map[x][y][dire])\n    {\n        int l=dire;//l \u7528\u4e8e\u8bb0\u5f55dire\u539f\u6765\u7684\u503c\u65b9\u4fbf\u56de\u6eaf\uff1b \n        for(int i=1;i<=4;i++)\n        {\n            dire=i;\n            dfs(x+dir[i][0],y+dir[i][1],step+1);\n            dire=0;\n        }\n        dire=l;//\u56de\u6eaf\uff0c\u9632\u6b62\u5bf9\u4e4b\u524d\u7684\u72b6\u6001\u6709\u5f71\u54cd\uff1b \n    }\n    vis[x][y]=0;\n}\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=k;i++)\n    {\n        char s;\n        int x;\n        cin>>s;\n        scanf(\"%d\",&x);\n        a[s-'A'+1][x]=1;//\u8def\u969c\u7684\u4f4d\u7f6e\uff1b\n        map[s-'A'+1][x+1][3]=1;//\u8def\u969c\u65c1\u8fb9\u7684\u56db\u4e2a\u683c\u5b50\u5206\u522b\u505a\u4e0a\u6807\u8bb0\u8868\u793a\u5728\u6b64\u4f4d\u7f6e\u5728\u6b64\u65b9\u5411\u9700\u8981\u8f6c\u5f2f\uff1b \n        map[s-'A'+1][x-1][1]=1;\n        map[s-'A'][x][2]=1;\n        map[s-'A'+2][x][4]=1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        map[i][1][3]=1;//\u66f4\u65b0\u8fb9\u754c\uff1b \n        map[i][n][1]=1;\n        map[1][i][4]=1;\n        map[n][i][2]=1;\n    }\n    dire=1;//\u5148\u5411\u4e0b\u641c \uff1b \n    dfs(1,1,0);\n    dire=2;//\u518d\u5411\u53f3\u641c\uff1b \n    dfs(1,1,0);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1502870075,
        "uid": 44806,
        "name": "Checkmate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6ca1\u4ec0\u4e48\u7279\u522b\u96be\u7684\u5730\u65b9\uff0c\u4e3b\u8981\u662f\u4e00\u4e9b\u7ec6\u8282\uff0c\u5904\u7406\u597d\u7ec6\u8282\u7279\u522b\u91cd\u8981\uff0c\u6211\u4eec\u6bcf\u6b21\u8d70\u5230\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5c31\u679a\u4e3e4\u4e2a\u65b9\u5411\u770b\u80fd\u4e0d\u80fd\u8d70\uff0c\u80fd\u8d70\u5c31\u4e00\u76f4\u8d70\u5230\u5e95\uff0c\u7136\u540e\u641c\u7d22\u52a0\u4e0a\u56de\u6eaf\u5c31\u53ef\u4ee5\u4e86\uff0c\u6700\u4e3b\u8981\u7684\u4e00\u70b9\uff0c\u8bb0\u5f97\u8f93\u5165\u8981\u7528cin\uff0c\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u88ab\u5361\u4e86\u4e00\u4e0b\u5348\u3002\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,a,b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++i)\ninline int read()\n{\n    char c = getchar();register int fg = 1, sum = 0;\n    while(c < '0' || c > '9')\n    {\n        if(c == '-')fg = -1;\n        c = getchar();\n    }\n    while(c >= '0' && c <= '9')\n    {\n        sum = sum * 10 + c - '0';\n        c = getchar();\n    }\n    return fg * sum;\n}\nint n,m;\nchar s[20];\nint vis[150][150],ans;\nvoid print()\n{\n    REP(i,1,n)\n    {\n        REP(j,1,n)\n            cout<<vis[i][j]<<\" \";\n        cout<<endl;\n    }\n}\nvoid dfs(int x,int y,int sum)\n{\n    ans = max(ans,sum);\n    if(x - 1 > 0 && !vis[x-1][y])//\u4e0a\n    {\n        int flag = 0,cnt = 0;\n        int tmp = x - 1;\n        while(tmp > 0)//\u80fd\u8d70\u5c31\u8d70\u5230\u5e95\n        {\n            if(vis[tmp][y] == 1){flag = 1;break;}//\u9047\u5230\u4ee5\u524d\u9000\u51fa\n            if(vis[tmp][y] == 2)break;//\u9047\u5230\u969c\u788d\u9000\u51fa\n            vis[tmp][y] = 1,tmp--,cnt++;\n        }tmp++;\n        ans = max(ans,sum+cnt);\n        if(!flag)dfs(tmp,y,sum+cnt);\n        while(tmp < x)vis[tmp][y] = 0,tmp++;//\u56de\u6eaf\n    }\n    if(x + 1 <= n && !vis[x+1][y])//\u4e0b\n    {\n        int flag = 0,cnt = 0;\n        int tmp = x+1;\n        while(tmp <= n)\n        {\n            if(vis[tmp][y] == 1){flag = 1;break;}\n            if(vis[tmp][y] == 2)break;\n            vis[tmp][y] = 1,tmp++,cnt++;\n        }tmp--;\n        ans = max(ans,sum + cnt);\n        if(!flag)dfs(tmp,y,sum+cnt);\n        while(x < tmp)vis[tmp][y] = 0,tmp--;\n    }\n    if(y - 1 > 0 && !vis[x][y-1])//\u5de6\n    {\n        int flag = 0,cnt = 0;\n        int tmp = y - 1;\n        while(tmp > 0)\n        {\n            if(vis[x][tmp] == 1){flag = 1;break;}\n            if(vis[x][tmp] == 2)break;\n            vis[x][tmp] = 1,tmp--,cnt++;\n        }tmp++;\n        ans = max(ans,sum + cnt);\n        if(!flag)dfs(x,tmp,sum+cnt);\n        while(tmp < y)vis[x][tmp] = 0,tmp++;\n    }\n    if(y + 1 <= n && !vis[x][y+1])//\u53f3\n    {\n        int flag = 0,cnt = 0;\n        int tmp = y + 1;\n        while(tmp <= n)\n        {\n            if(vis[x][tmp] == 1){flag = 1;break;}\n            if(vis[x][tmp] == 2)break;\n            vis[x][tmp] = 1,tmp++,cnt++;\n        }tmp--;\n        ans = max(ans,sum + cnt);\n        if(!flag)dfs(x,tmp,sum+cnt);\n        while(y < tmp)vis[x][tmp] = 0,tmp--;\n    }\n}\nint main()\n{\n//    freopen(\"input.in\",\"r\",stdin);\n//    freopen(\"output.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);    \n    char c;\n    int x;\n    REP(i,1,m)\n    {\n        cin>>c>>x;\n        vis[c-'A'+1][x] = 2;\n    }\n    vis[1][1] = 1;\n    dfs(1,1,1);//\u641c\u7d22\uff0c\u4ece1,1\u5f00\u59cb\uff0c\u6b65\u6570\u4e3a1\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1492085696,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u4ee5\u4e3adfs\u4f1a\u7206\uff0c\u6700\u540e\u53d1\u73b0\u6570\u636e\u5f88\u5c0f\uff0c\u7136\u540e\u7206\u641c\u5c31\u53ef\u4ee5\u8fc7\u3002\n\n\u4e0d\u8fc7\u88ab\u8f93\u5165\u5751\u4e86\uff0c\u597d\u50cf\u8981\u7528cin\u8bfb\u5165\uff0c\u8bfb\u5165\u4f18\u5316\u548cscanf\u90fd\u4f1a\u9519\n\n\u6240\u4ee5\u5927\u5bb6\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u7684\u7528cin\u8bfb\u5165\u5427\n\n\n\u4e0d\u9700\u8981\u526a\u679d\uff0c\u6a21\u62df\u6bcf\u4e00\u79cd\u8d70\u6cd5\n\n**\u8d70\u5230\u81ea\u5df1\u4ee5\u524d\u8d70\u8fc7\u7684\u5730\u65b9\u5c31\u6574\u4e2a\u6563\u6b65\u5c31\u505c\u6b62\u4e86**\n\n\u91cd\u8981\u4ee3\u7801\u5904\u6709\u8bf4\u660e\uff01\n\nC++\u4ee3\u7801\uff1a\n\n/*************************************************************************\n\n    > Author: wzw-cnyali\n    > Created Time: 2017/4/13 19:53:51\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\ntypedef unsigned long long uLL;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define EREP(i, a) for(register int i = (be[a]); i != -1; i = nxt[i])\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mem(a, b) memset((a), b, sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\ntemplate <class T>\nT read(T sum = 0, T fg = 0)\n{\n    char c = getchar();\n    while(c < '0' || c > '9') { fg |= c == '-'; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return fg ? -sum : sum;\n}\nconst int inf = 0x3f3f3f3f;\nconst int Size = 200;\nconst int maxn = 100000;\nconst int maxm = 100000;\nint n;\nint ans;\nbool map[Size][Size];\nbool vis[Size][Size];\nbool judge(int x, int y)//\u5224\u65ad\u662f\u5426\u51fa\u754c\n{\n    if(x < 1 || y < 1 || x > n || y > n) return 0;\n    return 1;\n}\n//0\u662fup\uff0c 1\u662fdown\uff0c 2\u662fright\uff0c 3\u662fleft\nvoid dfs(int x, int y, int sum, int direct)\n{\n    chkmax(ans, sum);\n    if(direct == 0)\n    {\n        if(vis[x - 1][y]) return;\n        if(judge(x - 1, y) && !map[x - 1][y])//\u7b14\u76f4\u8d70\n        {\n            vis[x - 1][y] = 1;\n            dfs(x - 1, y, sum + 1, 0);\n            vis[x - 1][y] = 0;\n            return;\n        }\n        else//\u8f6c\u5411\n        {\n            if(judge(x, y + 1) && !map[x][y + 1] && !vis[x][y + 1])\n            {\n                vis[x][y + 1] = 1;\n                dfs(x, y + 1, sum + 1, 2);\n                vis[x][y + 1] = 0;\n            }\n            if(judge(x, y - 1) && !map[x][y - 1] && !vis[x][y - 1])\n            {\n                vis[x][y - 1] = 1;\n                dfs(x, y - 1, sum + 1, 3);\n                vis[x][y - 1] = 0;\n            }\n        }\n    }\n    else if(direct == 1)\n    {\n        if(vis[x + 1][y]) return;\n        if(judge(x + 1, y) && !map[x + 1][y])//\u7b14\u76f4\u8d70\n        {\n            vis[x + 1][y] = 1;\n            dfs(x + 1, y, sum + 1, 1);\n            vis[x + 1][y] = 0;\n            return;\n        }\n        else//\u8f6c\u5411\n        {\n            if(judge(x, y + 1) && !map[x][y + 1] && !vis[x][y + 1])\n            {\n                vis[x][y + 1] = 1;\n                dfs(x, y + 1, sum + 1, 2);\n                vis[x][y + 1] = 0;\n            }\n            if(judge(x, y - 1) && !map[x][y - 1] && !vis[x][y - 1])\n            {\n                vis[x][y - 1] = 1;\n                dfs(x, y - 1, sum + 1, 3);\n                vis[x][y - 1] = 0;\n            }\n        }\n    }\n    else if(direct == 2)\n    {\n        if(vis[x][y + 1]) return;\n        if(judge(x, y + 1) && !map[x][y + 1])//\u7b14\u76f4\u8d70\n        {\n            vis[x][y + 1] = 1;\n            dfs(x, y + 1, sum + 1, 2);\n            vis[x][y + 1] = 0;\n            return;\n        }\n        else//\u8f6c\u5411\n        {\n            if(judge(x + 1, y) && !map[x + 1][y] && !vis[x + 1][y])\n            {\n                vis[x + 1][y] = 1;\n                dfs(x + 1, y, sum + 1, 1);\n                vis[x + 1][y] = 0;\n            }\n            if(judge(x - 1, y) && !map[x - 1][y] && !vis[x - 1][y])\n            {\n                vis[x - 1][y] = 1;\n                dfs(x - 1, y, sum + 1, 0);\n                vis[x - 1][y] = 0;\n            }\n        }\n    }\n    else if(direct == 3)\n    {\n        if(vis[x][y - 1]) return;\n        if(judge(x, y - 1) && !map[x][y - 1])//\u7b14\u76f4\u8d70\n        {\n            vis[x][y - 1] = 1;\n            dfs(x, y - 1, sum + 1, 3);\n            vis[x][y - 1] = 0;\n            return;\n        }\n        else//\u8f6c\u5411\n        {\n            if(judge(x + 1, y) && !map[x + 1][y] && !vis[x + 1][y])\n            {\n                vis[x + 1][y] = 1;\n                dfs(x + 1, y, sum + 1, 1);\n                vis[x + 1][y] = 0;\n            }\n            if(judge(x - 1, y) && !map[x - 1][y] && !vis[x - 1][y])\n            {\n                vis[x - 1][y] = 1;\n                dfs(x - 1, y, sum + 1, 0);\n                vis[x - 1][y] = 0;\n            }\n        }\n    }\n}\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.in\", \"r\", stdin);\n    freopen(\"output.out\", \"w\", stdout);\n#endif\n    int m;\n    scanf(\"%d%d\", &n, &m);\n    REP(i, 1, m)\n    {\n        char c; int x;\n        cin>>c>>x;\n        map[x][c - 'A' + 1] = 1;\n    }\n    vis[1][1] = 1;\n    REP(i, 1, 2)\n    {    \n        dfs(1, 1, 1, i);//\u8d77\u70b9\u6709\u4e24\u79cd\u8d70\u6cd5\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1492085695,
        "uid": 19623,
        "name": "Jason_Yvan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "###\u4ee3\u7801\u957f\u5ea6\u76ee\u6d4b\u6bd4\u697c\u4e0b\u77ed \u76ee\u524d\u6700\u7f8e\u3002\u3002\u3002\n\n\u7edd\u5bf9\u8981\u6ce8\u610f\uff1a\u8bfb\u5165\u7528cin  \u8bfb\u5165\u7528cin   \u8bfb\u5165\u7528cin(\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\uff09 \uff0c \u6211\u56e0\u4e3a\u8fd9\u4e2aWA\u4e86\u597d\u51e0\u904d\n\n\u5176\u5b9e\u903b\u8f91\u548c\u697c\u4e0b\u7684\u5dee\u4e0d\u591a\uff0c \u770b\u6ce8\u91ca\u5427\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\nusing namespace std;\nint n, b, ans;\nint d[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};//\u56db\u4e2a\u65b9\u5411\nbool map[150][150], walk[150][150];//map\u8bb0\u969c\u788d\uff0c walk\u8bb0\u662f\u5426\u8d70\u8fc7\nchar c;\nvoid dfs(int x, int y, int step, int D){\n    walk[x][y] = 1;                     //\u6807\u8bb0\u8d70\u8fc7\n    int i, x1 = x + d[D][0], y1 = y + d[D][1];       //\u5411\u524d\u8d70\u5230\uff08x1, y1\uff09\n    if(!map[x1][y1] && x1 && y1 && x1 <= n && y1 <= n && !walk[x1][y1]){\n        dfs(x1, y1, step + 1, D);              //\u80fd\u76f4\u8d70\u5c31\u8d70\n    }else{\n        if(walk[x1][y1]){\n            if(step > ans) ans = step;        //\u8d70\u8fc7\u5c31\u505c\n        }else{\n            bool flag = 0;\n            for(i = 0; i < 4; ++i){\n                if(i == D) continue;\n                int X = x + d[i][0], Y = y + d[i][1];\n                if(!map[X][Y] && X && Y && X <= n && Y <= n && !walk[X][Y]){\n                    flag = 1;\n                    dfs(X, Y, step + 1, i);             //\u80fd\u8f6c\u5c31\u8f6c\n                }\n            }\n            if(!flag && step > ans) ans = step;              //\u4e0d\u80fd\u8f6c\u5c31\u505c\n        }\n    }\n    walk[x][y] = 0;                       //\u56de\u6eaf\n}\nint main(){\n#ifndef ONLINE_JUDGE\n    freopen(\"Usa.in\", \"r\", stdin);\n    freopen(\"Usa.out\",\"w\",stdout);\n#endif\n    int i;\n    scanf(\"%d%d\", &n, &b);\n    for(i = 1; i <= b; ++i){\n        int a, b;\n        cin>>c>>b;                      //\u8bfb\u5165\u7528cin\n        a = c - 'A' + 1;\n        map[a][b] = 1;\n    }\n    dfs(1, 1, 1, 0);         //\u5f53\u524d\u5728\uff081\uff0c 1\uff09\uff0c \u8d70\u4e861\u6b65\uff0c \u65b9\u5411\u5411\u4e0a\uff080\uff09 -\u300b \u8fd9\u6837\u5c31\u80fd\u4e00\u5f00\u59cb\u81ea\u52a8\u679a\u4e3e\u6240\u6709\u65b9\u5411\uff0c \u4e0d\u9700\u6253\u4e24\u904ddfs\n    printf(\"%d\", ans);                    //\u55ef\uff0c AC\n    return 0;\n}\n```",
        "postTime": 1492084840,
        "uid": 19683,
        "name": "Till_Gloam",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "**###\u4ee3\u7801\u957f\u5ea6\u662f\u697c\u4e0b\u7684\u4e00\u534a \u76ee\u524d\u6700\u77ed\u3002**\n\n**\u601d\u8def\u5f88\u7b80\u5355\uff0c**\n\n\u4e00\u4e2a\u65b9\u5411\u53ef\u4ee5\u8d70\u7684\u8bdd\u5c31\u4e00\u76f4\u8d70\uff0c\n\n\u9047\u5230\u6709\u969c\u788d\u7684\u5730\u65b9\u5c31\u5f00\u59cb\u9009\u65b9\u5411(\u4e0d\u7528\u8003\u8651\u662f\u5426\u80fd\u62d0\u5f2f\uff0c\u56e0\u4e3a\u76f4\u8d70\u65b9\u5411\u4e0d\u884c\uff0c\u5012\u9000\u7684\u65b9\u5411\u5df2\u7ecf\u6807\u8bb0\u8fc7)\uff0c\n\n\u9047\u5230\u8d70\u8fc7\u7684\u5730\u65b9\u5c31\u8fd4\u56de\u4e0a\u4e00\u7ea7\uff0c\n\n\u5dee\u4e0d\u5bf9\u5c31\u8fd9\u6837\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint map[201][201];int tot=1;int n,b,y;char x;\nint mx[]={1,0,-1,0};int my[]={0,-1,0,1};bool bo[201][201];int MAX=0;//map\u8868\u793a\u5730\u56fe\u4e0a\u7684\u969c\u788d\uff0cbo\u8868\u793a\u662f\u5426\u8d70\u8fc7\nbool check(int x,int y){return (x>=1&&x<=n&&y>=1&&y<=n&&!map[x][y]&&!bo[x][y]);}//\u5224\u65ad\u76ee\u524d\u5230\u7684\u8fd9\u4e00\u70b9\u662f\u5426\u53ef\u884c\nvoid dfs(int x,int y,int dir)//dir\u4e3a\u4e0a\u4e00\u6b21\u65b9\u5411\n{\n    int xx=x+mx[dir];\n    int yy=y+my[dir];\n    if(bo[xx][yy])//\u5982\u679c\u78b0\u5230\u4e86\u8d70\u8fc7\u7684\u5730\u65b9\n    {\n        if(MAX<tot)\n            MAX=tot;\n        return ;\n    }\n    if(map[xx][yy]||xx<1||yy<1||xx>n||yy>n)//\u5982\u679c\u78b0\u5230\u4e86\u969c\u788d\n    {\n        for(int i=0;i<=3;i++)\n        {\n            xx=x+mx[i];\n            yy=y+my[i];\n            if(check(xx,yy))\n            {\n                tot++;\n                bo[xx][yy]=1;\n                dfs(xx,yy,i);\n                bo[xx][yy]=0;\n                tot--;\n            }\n        }\n        if(tot>MAX)MAX=tot;//\u65f6\u523b\u4e3aMAX\u66f4\u65b0\n        return ;\n    }\n    tot++;//\u76f4\u8d70\n    bo[xx][yy]=1;\n    if(tot>MAX)MAX = tot;\n    dfs(xx,yy,dir);\n    bo[xx][yy]=0;\n    tot--;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&b);\n    for(int i=1;i<=b;i++)\n    {\n        cin>>x>>y;//scanf\u4f3c\u4e4e\u6709\u6bd2\n        map[y][x-'A'+1]=1;\n    }\n    bo[1][1]=1;\n    dfs(1,1,0);//\u5f00\u59cb\u7684\u7b2c\u4e00\u6b21\u65b9\u5411\u6709\u4e24\u79cd\n    dfs(1,1,3);\n    printf(\"%d\",MAX);\n    return 0;\n}\n```",
        "postTime": 1475759822,
        "uid": 20116,
        "name": "never_see",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "\u4e4d\u4e00\u770b\uff0cN\u2264120\uff0c\u80af\u5b9a\u4e0d\u80fd\u7528\u641c\u7d22\u3002\u5176\u5b9e\uff0c\u7531\u4e8e\u5fc5\u987b\u8d70\u5230\u5934\u624d\u80fd\u8f6c\u5f2f\uff0c\u6240\u4ee5\u771f\u6b63\u6709\u6548\u7684\u72b6\u6001\u6570\u5e76\u4e0d\u591a\u3002\n\n\u76f4\u63a5\u641c\u7d22\u5373\u53ef\uff0c\u4e0d\u8fc7\u7ec6\u8282\u5904\u7406\u6709\u70b9\u9ebb\u70e6\u3002\n",
        "postTime": 1380641961,
        "uid": 203,
        "name": "JOHNKRAM",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "```cpp\n/* \nLGOJ P1560 [USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\n\u65f6\u7a7a\u9650\u5236\uff1a1s 128MB \n\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u53ea\u6709120\uff0c\u53ef\u4ee5\u7528dfs\u7684\u66b4\u529b\u7b97\u6cd5\u3002\n\u4f46\u662f\uff0c\u8fd9\u9053\u9898\u6709\u4e00\u4e9b\u6ce8\u610f\u70b9\uff1a\n1\u3001\u9996\u5148\u662f\u8f93\u5165\uff0c\u8f93\u5165\u65f6\u7528scanf\u65f6\u8981\u8fd9\u6837\u5199\uff1a scanf(\"\\n%c%d\",&temp1,&temp2); \u5426\u5219\u8bfb\u5165\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e3a\u6362\u884c\u7b26\u3002 \n2\u3001\u5176\u6b21\uff0c\u8fd9\u9053\u9898\u7684\u6a2a\u7eb5\u5750\u6807\u4e0e\u6211\u4eec\u4e60\u60ef\u6027\u6240\u4f7f\u7528\u7684\u4e0d\u540c\uff0c\u8981\u6ce8\u610f\u3002\n3\u3001\u641c\u7d22\u65f6\u9047\u5230\u969c\u788d\u7269\u8f6c\u5411\u6216\u505c\u6b62\uff0c\u8fd9\u65f6\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u56de\u6eaf\u5230\u4e0a\u4e00\u4e2a\u8f6c\u5411\u70b9\u3002\n4\u3001\u6570\u7ec4\u4e0d\u8981\u6ee1\u6253\u6ee1\u7b97\uff0c\u5f00\u5927\u4e00\u70b9\u3002\n*/\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=120+10;\nchar m[MAXN][MAXN];// '#'\u4e3a\u8fb9\u754c\u6216\u969c\u788d 'X'\u4e3a\u5df2\u8d70\u8fc7\u7684\u70b9 '.'\u4e3a\u53ef\u4ee5\u8d70\u7684\u70b9 \nint tempm,n,step=1,ans=1;\nint dx[4]={1,0,0,-1};//\u65b9\u5411 \nint dy[4]={0,-1,1,0};\nvoid dfs(int x,int y,int dire)\n{\n\t//\u8fd9\u4e2adfs\u51fd\u6570\u7684\u4e3b\u8981\u601d\u60f3\uff1a\u5148\u6309\u7167\u65b9\u5411\u5f80\u524d\u8d70\uff0c\u6bcf\u4e00\u6b65\u5224\u65ad\u4e0b\u4e00\u6b65\u662f\u5426\u53ef\u4ee5\u8d70\u3002\u82e5\u4e0d\u53ef\u4ee5\uff0c\u5c31\u8f6c\u5411\u3002 \n\tint X0=x,Y0=y;\n\tif(m[X0+dx[dire]][Y0+dy[dire]]!='.')\n\t{ ans=max(step,ans); return; }//\u5982\u679c\u8f6c\u5411\u540e\u5f80\u524d\u8d70\u8fd8\u662f\u969c\u788d\uff0c\u8bf4\u660e\u8d70\u8fdb\u4e86\u6b7b\u80e1\u540c\uff0c\u505c\u6b62\u641c\u7d22\u3002 \n\tdo\n\t{\n\t\tX0+=dx[dire]; Y0+=dy[dire]; \n\t\tm[X0][Y0]='X'; \n\t\tstep++;\n\t}while(m[X0+dx[dire]][Y0+dy[dire]]=='.');//\u6ca1\u6709\u969c\u788d\u7269\uff0c\u59cb\u7ec8\u5f80\u56fa\u5b9a\u65b9\u5411\u8d70\u3002 \n\tans=max(step,ans);\n\tif(m[X0+dx[dire]][Y0+dy[dire]]!='X')//\u78b0\u5230\u969c\u788d\u7269\uff0c\u8f6c\u5411\u641c\u7d22\u3002 \n\t{\n\t\tdfs(X0,Y0,0);\n\t\tdfs(X0,Y0,1);\n\t\tdfs(X0,Y0,2);\n\t\tdfs(X0,Y0,3);\n\t}\n\twhile(!(X0==x&&Y0==y))//\u56de\u6eaf\u5230\u4e0a\u4e00\u8f6c\u5411\u70b9\u3002 \n\t{\n\t\tstep--;\n\t\tm[X0][Y0]='.'; \n\t\tX0-=dx[dire]; Y0-=dy[dire];\n\t}\n\treturn;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&tempm);\n\tfor(int i=0;i<=101;i++)\n\t\tfor(int j=0;j<=101;j++)\n\t\t\tm[i][j]='#';\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tm[i][j]='.';\n\tfor(int i=1;i<=tempm;i++)\n\t{\n\t\tchar temp1;\n\t\tint temp2;\n\t\tscanf(\"\\n%c%d\",&temp1,&temp2);//\u8bfb\u5165\u8fd9\u91cc\u6ce8\u610f\u4e00\u4e0b\n\t\tm[temp2][temp1-'A'+1]='#';\n\t}\n\tm[1][1]='X';\n\tdfs(1,1,0);//\u5411\u53f3\u3001\u4e0b\u641c\u7d22 \n\tdfs(1,1,2);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1544774025,
        "uid": 44355,
        "name": "funky_monkey",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u6df1\u641cdfs\u8fa3\u3002\u3002\u3002\n\n~~\u611f\u89c9\u5927\u6982\u662f\u4e00\u9053\u5047\u84dd\u9898~~\n\n\u4f46\u662f\u672c\u4eba\u8c03\u4e86\u4e00\u4e2a\u4e0b\u5348\uff01\uff01\uff08\u5f53\u7136\u5176\u4e2d\u662f\u5305\u62ec\u4e86\u6211\u6253\u6e38\u620f\u770bQQ\u773a\u671b\u8fdc\u65b9\u601d\u8003\u4eba\u751f\u7684\u65f6\u95f4\u7684\u2026\u2026\n\n\u539f\u56e0\u5c31\u662f\u4e00\u4e2a\u6211\u81f3\u4eca\u90fd\u4e0d\u77e5\u9053\u600e\u4e48\u56de\u4e8b\u7684\u7384\u5b66\u9519\u8bef\n\n\u8f93\u5165\uff01\uff01\uff01\u8f93\u5165\uff01\uff01\uff01\n\n\u7a9d\u4e00\u5f00\u59cb\u662f\u8fd9\u4e48\u5199\u7684\n```cpp\nscanf(\"%d%d\",&n,&b);\nfor (int i=0; i<b; i++) {\n    string s;\n    cin>>s;\n    int x=s[1]-'1',y=s[0]-'A';\n    g[x][y]=true;\n}\n```\n\u7136\u540e\u5f88\u5feb\u5199\u5b8c \u6d4b\u5b8c\u6837\u4f8b \u60f3\u7740\u8fd9\u9053\u9898\u80af\u5b9a\u80fd\u4e00\u904dA\u6389 \u7136\u540e\u5c31\u53ef\u4ee5\u5077\u5077van\u4e00\u4f1a\u513f\u8fa3\u3002\u3002\u4fe1\u5fc3\u6ee1\u6ee1\u7684\u4ea4\u4e86\u7ed3\u679c41\u5206\uff01\uff0141\u5206\uff01\uff01\u6211\u5199\u7684\u65f6\u5019\u660e\u660e\u601d\u8def\u5f88\u6e05\u6670\u554a\u3002\u3002\u4e0d\u4f1a\u6709\u95ee\u9898\u7684\u554a\u3002\u3002\u3002\n\n\u7136\u540e\u82e6\u903c\u7684\u6211\u5bf9\u7740\u9898\u89e3\u91cc\u9762\u7684\u7a0b\u5e8f\u67e5\u4e86\u5feb\u4e00\u4e2a\u4e0b\u5348\u603b\u662f\u6709\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u95ee\u9898\u3002\u3002\u3002\u7136\u540e\u5728\u4e00\u6b21\u957f\u65f6\u95f4\u7684\u601d\u8003\u4eba\u751f\u540e\uff0c\u6211\u5f00\u59cb\u6000\u7591\u8f93\u5165\u3002\u6211\u628a\u8f93\u5165\u6539\u6210\u4e86AC\u7a0b\u5e8f\u7684\u8f93\u5165 \u7136\u540e\u5c31\u8fc7\u4e86 \u8fc7\u4e86\uff01\uff01\n\n\u7a9d\u771f\u7684\u4e0d\u77e5\u9053\u539f\u6765\u7684\u5199\u6cd5\u6709\u5565\u95ee\u9898 \u6c42\u5927\u4f6c\u89e3\u7b54\u3002\u3002\uff08update\uff1a\u90a3\u5565\u6211\u597d\u60f3\u77e5\u9053\u600e\u4e48\u56de\u4e8b\u4e86 \u5982\u679cn\u226510\u7684\u8bdd\u90a3\u6837\u8bfb\u5165\u6570\u5b57\u5c31\u6709\u95ee\u9898\u4e86233 \u770b\u6765\u4e0d\u662f\u7384\u5b66\u9519\u8bef\u53ea\u662f\u592a\u83dc\u4e86qwq\n\n\u7136\u540e\u8d34\u4e0a\u6211\u7684\u7a0b\u5e8f\u8fa3 \u4ee3\u7801\u867d\u7136\u5f88\u4e11\u4f46\u4e0d\u7b97\u5f88\u957f\u554aOvO\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nconst int dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};\n//\u806a\u660e\u7684\u4f60\u4eec\u4e00\u5b9a\u4f1a\u53d1\u73b0\uff0c\u8fd9\u91cc\u662f\u6309\u987a\u65f6\u9488\u6392\u5217\u7684\u3002\n//\u4e8e\u662f+1\u6216-1\u5219\u662f\u65cb\u8f6c90\u00b0\u540e\u7684\u65b9\u5411\n\nint n,b;\nbool g[130][130];//\u8bb0\u5f55\u969c\u788d\nint ans=0;//\u8bb0\u5f55\u7b54\u6848\nbool vis[130][130];//dfs\u65f6\u8bb0\u5f55\u683c\u5b50\u662f\u5426\u5df2\u88ab\u5f53\u524d\u8def\u5f84\u7ecf\u8fc7\n\nbool inrange(int x,int y) {//\u5224\u65ad\u6709\u6ca1\u6709\u5230\u56fe\u5916\u9762\u53bb\n    return x>=0&&x<n&&y>=0&&y<n;\n}\n\nvoid dfs(int i,int j,int dir,int cur,bool can){\n//can\u6807\u8bb0\u662f\u5426\u5df2\u7ecf\u6539\u53d8\u8fc7\u65b9\u5411\u3002\n//\u56e0\u4e3a\u65b9\u5411\u53ea\u80fd\u6539\u53d8\u4e00\u6b21\u3002\u8981\u4e0d\u7136\u5c31\u6b7b\u5faa\u73af\u8fa3\n    if (vis[i+dx[dir]][j+dy[dir]]) {//\u4e0d\u80fd\u8d70\u5566\uff01\n        ans=max(ans,cur);\n        return;\n    }\n    if (g[i+dx[dir]][j+dy[dir]]==true||!inrange(i+dx[dir],j+dy[dir])) {\n        if (can==false){//\u65b9\u5411\u5df2\u88ab\u6539\u53d8\u5c31\u4e0d\u80fd\u518d\u6539\u5566\n            ans=max(ans,cur);\n            return;\n        }\n        dfs(i,j,(dir+3)%4,cur,false);\n        //can=false \u4e0d\u53ef\u4ee5\u518d\u6b21\u6539\u53d8\u65b9\u5411 \n        //\u8be5\u6b65\u53ea\u6267\u884c\u65b9\u5411\u6539\u53d8\u7684\u64cd\u4f5c \u56e0\u6b64\u5750\u6807\u548c\u8ba1\u6570\u5668\u5747\u4e0d\u53d8\n        dfs(i,j,(dir+1)%4,cur,false);\n    }\n    else {\n        vis[i][j]=true;\n        dfs(i+dx[dir],j+dy[dir],dir,cur+1,true);\n        vis[i][j]=false;//\u52ff\u5fd8\u56de\u6eaf\uff01\uff01\n    }\n}\n\nint main() {\n    scanf(\"%d%d\",&n,&b);\n    char c;\n    int v;\n    for (int i=0; i<b; i++) {//\u5751\u6b7b\u4eba\u7684\u8f93\u5165\u3002\u3002\n        cin>>c>>v;\n        g[c-'A'][v-1]=1;\n    }\n    dfs(0,0,1,1,true);//\u4ece\u8d77\u70b9\u51fa\u53d1\u53ef\u4ee5\u5411\u4e0b\u548c\u5411\u53f3\u8d70\n    dfs(0,0,0,1,true);\n    cout<<ans<<endl;\n}\n```",
        "postTime": 1530959286,
        "uid": 65566,
        "name": "Myrcella",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1560 \u3010[USACO5.2]\u8717\u725b\u7684\u65c5\u884cSnail Trails\u3011"
    }
]