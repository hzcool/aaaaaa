[
    {
        "content": "[\u53ef\u4ee5\u5230\u6211\u7684\u535a\u5ba2\u98df\u7528(\u4e0d\u4e00\u5b9a\u66f4\u4f73\u54e6)](https://hehezhou.github.io/2019/06/15/solve-P3728/#more)  \n[\u9898\u9762](https://www.luogu.org/problemnew/show/P3728)  \n\u5982\u679c\u8981\u6c42\u7684\u662f\u7b2ck\u5c0f\u5b57\u4e32(\u5373\u8fde\u7eed\u5b50\u5e8f\u5217)\uff0c\u662f\u53ef\u4ee5\u7528\u540e\u7f00\u81ea\u52a8\u673a\u505a\u7684  \n\u7136\u800c\u8fd9\u9053\u9898\u8981\u6c42\u7b2ck\u5c0f\u5b50\u5e8f\u5217  \n\u5176\u5b9e\u5e8f\u5217\u81ea\u52a8\u673a\u4e5f\u662f\u6709\u7684\uff0c\u800c\u4e14\u6784\u5efa\u53ca\u5176\u7b80\u5355  \n\u72b6\u6001\u6709$n+1$\u4e2a\uff0c\u7b2c\u4e00\u4e2a\u4e3a\u6839\uff0c\u540e\u9762\u7684\u548c\u5b57\u7b26\u4e32\u6bcf\u4e00\u4f4d\u4e00\u4e00\u5bf9\u5e94  \n\u5bf9\u4e8e\u7b2c$i$\u4f4d\u5bf9\u5e94\u7684\u72b6\u6001\uff0c\u63a5\u6536\u5b57\u7b26$c$\u540e\u8f6c\u79fb\u5230$j$ \u6ee1\u8db3  \n$$j=\\min_{x\\in (i,n]~and~s_j=c}x$$  \n\u8bf4\u4eba\u8bdd\u5c31\u662f\u6700\u8fd1\u7684\u4e00\u4e2a$c$  \n\u611f\u6027\u7684\u7406\u89e3:\u6211\u4ece\u6700\u524d\u9762\u4e00\u4e2a\u8d70\u5c31\u80fd\u6db5\u76d6\u4ece\u540e\u9762\u8d70\u7684\u6240\u6709\u60c5\u51b5  \n\u7136\u540e\u8fd9\u4e2a\u81ea\u52a8\u673a\u4e0a\u6bcf\u4e00\u6761\u4ece\u6839\u51fa\u53d1\u7684\u8def\u5f84\u552f\u4e00\u5bf9\u5e94\u4e00\u4e2a\u5b50\u5e8f\u5217(\u4e0d\u91cd\u590d)  \n\u4e8e\u662f\u6c42\u51fa\u6bcf\u4e2a\u72b6\u6001\u80fd\u5230\u8fbe\u7684\u5b50\u5e8f\u5217\u6570(\u4e5f\u5c31\u662f\u4ece\u8be5\u70b9\u51fa\u53d1\u7684\u8def\u5f84\u6570)\uff0c\u7136\u540e\u626b\u4e00\u904d\u5373\u53ef(\u4e0d\u4f1a\u7684\u8bdd\u53ef\u4ee5\u53c2\u8003\u540e\u7f00\u81ea\u52a8\u673a\u7684\u505a\u6cd5)  \n\u6ce8\u610f\u4e00\u4e0b\u8def\u5f84\u6570\u53ef\u80fd\u4f1a\u5f88\u5927\u5f88\u5927\uff0c\u4e0d\u9700\u8981\u9ad8\u7cbe\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u8def\u5f84\u6570\u8d85\u8fc7$k$\uff0c\u90a3\u4e48\u8d85\u8fc7\u90e8\u5206\u663e\u7136\u6ca1\u6709\u610f\u4e49\uff0c\u76f4\u63a5\u8d4b\u4e3a$k$\u5373\u53ef\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint son[1000010][26], n, k;\nint tot[1000010];\nchar s[1000010];\nint main() {\n    scanf(\"%d%d\", &n, &k);\n    scanf(\"%s\", s + 1);\n    for(int i = n - 1; i >= 0; i--) {//\u6784\u5efa\u5e8f\u5217\u81ea\u52a8\u673a\n        memcpy(son[i], son[i + 1], sizeof(int[26]));\n        son[i][s[i + 1] - 'a'] = i + 1;\n    }\n    for(int i = n; i >= 0; i--) {//0\u5230n\u4e3a\u5929\u7136\u7684\u62d3\u6251\u5e8f\n        long long ans = 1;\n        for(int j = 0; j < 26; j++) ans += tot[son[i][j]];//\u8ba1\u7b97\u8def\u5f84\u6570\n        tot[i] = min(ans, (long long)k);//\u5982\u679c\u8fc7\u5927\u5c31\u94a6\u5b9a\u4e3ak\n    }\n    k++;//\u8fd9\u79cd\u505a\u6cd5\u4f1a\u7b97\u4e0a\u7a7a\u5e8f\u5217\n    for(int now = 0; ;) {\n        k -= 1;//\u53bb\u6389\u7a7a\u5e8f\u5217(\u6700\u5c0f)\n        if(k == 0) return 0;\n        for(int j = 0; j < 26; j++) {\n            if(son[now][j] == 0) continue;\n            if(k > tot[son[now][j]]) k -= tot[son[now][j]];\n            else {\n                putchar(j + 'a');\n                now = son[now][j];\n                break;//\u8f6c\u6362\u4e3a\u5b50\u95ee\u9898\n            }\n        }\n    }\n}\n```",
        "postTime": 1560593645,
        "uid": 67371,
        "name": "hehezhou",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3728 \u3010\u66fc\u54c8\u987f\u5e8f\u5217\u3011"
    }
]