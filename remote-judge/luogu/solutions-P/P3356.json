[
    {
        "content": "**\u7f51\u7edc\u6d4124\u9898\u7684\u9898\u89e3\u6211\u4e4b\u524d\u4e5f\u6709\u5199\u8fc7\u4e00\u4e9b\uff0c\u91cc\u9762\u4e5f\u6709\u7f51\u7edc\u6d41\u77e5\u8bc6\u7684\u6559\u5b66\uff0c\u8bb2\u5f97\u597d\u4e0d\u597d\u770b\u770b\u4e5f\u65e0\u59a8**\n[**\u4f20\u9001\u95e8**](https://www.luogu.com.cn/blog/CN-jingying-Xu/wang-lao-liu-suan-fa-yi-ji-24-ti-wei-wan-jie-post)\n\n### 12ms\uff0c\u53d1\u73b0\u8dd1\u5f97\u86ee\u5feb\u7684\uff0c\u5206\u4eab\u4e00\u4e0b\u505a\u6cd5(2021.3.28)\n\n\u9996\u5148\u8fd9\u9898\u8981\u7528\u5230\u7f51\u7edc\u6d41\u5c31\u4e0d\u7528\u6211\u591a\u8bf4\u4e86\uff0c\u9898\u76ee\u9650\u5236\u4e86\u4e24\u4e2a\u91cf\uff1a\u8f66\u7684\u6570\u91cf \u548c \u6700\u5927\u7684\u603b\u4ef7\u503c\u3002\n\n1. \u6211\u4eec\u628a\u8f66\u7684\u6570\u91cf\u5f53\u4f5c\u6d41\u91cf\uff0c\u6700\u5927\u603b\u4ef7\u503c\u5f53\u4f5c\u82b1\u8d39\uff0c\u5c31\u53d8\u6210\u4e86\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff0c\u63a5\u7740\u6211\u4eec\u5728\u52a0\u8fb9\u65f6\u628a\u82b1\u8d39\u53d6\u8d1f\uff0c\u52a0\u8fdb\u53bb\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u6b64\u65f6\u7684\u6700\u5c0f\u8d39\u7528\u518d\u53d6\u8d1f\u5c31\u662f\u6700\u5927\u82b1\u8d39\u3002\u5f53\u7136\uff0c\u6700\u5927\u82b1\u8d39\u662f\u591a\u5c11\u5e76\u4e0d\u91cd\u8981\n\n2. \u5bf9\u4e8e\u5ca9\u77f3\u6807\u672c\u6765\u8bb2\uff0c\u70b9\u6743\u4e3a1\u7684\u4ef7\u503c\uff0c\u4f46\u53ea\u80fd\u62ff\u4e00\u6b21\uff0c\u4e8e\u662f\u6211\u628a\u70b9\u62c6\u5f00\u8ba1\u7b97\uff0c\u4ece\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a 1 \uff0c\u82b1\u8d39\u4e3a -1\u3002\u5bf9\u4e8e\u6ca1\u6709\u969c\u788d\u7684\u70b9\uff0c\u4e5f\u4ece\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u65e0\u7a77\u5927\uff0c\u4f46\u56e0\u4e3a\u6ca1\u6709\u6807\u672c\u53ef\u4ee5\u91c7\u96c6\u6240\u4ee5\u82b1\u8d39\u4e3a0\n\n3. \u63a2\u6d4b\u8f66\u884c\u8d70\u7684\u8bdd\uff0c\u5c31\u662f\u4ece\u5de6\u4fa7/\u4e0a\u4fa7\u7684\u51fa\u70b9\u5411\u53f3\u4fa7/\u4e0b\u4fa7\u7684\u5165\u70b9\u8fde\u8fb9\uff0c\u8fd9\u4e2a\u8fb9\u5bf9\u8f66\u6ca1\u6709\u9650\u5236\uff0c\u6240\u4ee5\u5bb9\u91cf\u65e0\u7a77\u5927\uff0c\u82b1\u8d39\u4e3a0\n\n4. \u4ece\u865a\u62df\u6e90\u70b9\u5411\uff08 1\uff0c1 \uff09\u7684\u5165\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a \u63a2\u6d4b\u8f66 \u7684\u6570\u91cf\uff0c\u518d\u4ece\uff08 m , n \uff09\u7684\u51fa\u70b9\u5411\u865a\u62df\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e5f\u662f \u63a2\u6d4b\u8f66 \u7684\u6570\u91cf\uff0c\u82b1\u8d39\u90fd\u662f0\n\n5. \u7136\u540e\u6109\u5feb\u5730\u8dd1\u5b8cMCMF\u540e\uff0c\u53d1\u73b0**\u5e76\u4e0d\u8981\u6c42\u8f93\u51fa\u82b1\u8d39\u800c\u662f\u8f93\u51fa\u8def\u5f84**\uff0c~~\u884c\u5427\uff0c\u4e0b\u4e00\u9898~~\n\n6. \u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u4fee\u6539\u8fb9\u7684\u5bb9\u91cf\uff0c\u4fee\u6539\u8fc7\u5c31\u8868\u793a\u6211\u4eec\u8d70\u8fc7\u53bb\u4e86\uff0c\u6240\u4ee5\u6211\u5c31\u628a\u8fb9\u679a\u4e3e\u4e86\u51fa\u6765\uff0c\u5efa\u4e86\u4e2a\u65b0\u56fe\uff0c\u8dd1\u4e86\u4e00\u904ddfs\n\n7. \u4f46\u662f\u4e5f\u4e0d\u7528\u679a\u4e3e\u6240\u6709\u8fb9\uff0c\u6307\u679a\u4e3e\u70b9\u548c\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff0c\u679a\u4e3e\u51fa\u70b9\uff0c\u627e\u51fa\u5165\u70b9\uff0c\u7531\u4e8e\u8fd9\u4e9b\u8fb9\u4e00\u5f00\u59cb\u5bb9\u91cf\u90fd\u662f inf ,\u540e\u6765\u4fee\u6539\u8fc7\u7a0b\u4e2d inf - va\uff08\u73b0\u5728\u7684\u5bb9\u91cf\uff09\u5c31\u4ee3\u8868\u8fd9\u6761\u8def\u5f84\u6240\u7ecf\u8fc7\u7684\u63a2\u6d4b\u8f66\u6709\u51e0\u4e2a\uff0c\u90a3\u5c31\u5728\u65b0\u56fe\u4e0a\u8fde\u8fb9\uff0c\u8fb9\u6743\u662f inf - va\n\n8. \u4e4b\u540e\u5c31\u8dd1\u4e00\u8fb9dfs\u5c31\u53ef\u4ee5\u4e86,\u5982\u679c\u8fd8\u662f\u4e0d\u6e05\u695a\u53ef\u4ee5\u770b\u4ee3\u7801\u6ce8\u91ca\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 10021;\nconst int maxm = 10021;\nconst int inf = 2147483647;\nint n,m,cnt,str,end,tot = -1,maxcost,p;\nint head[maxn],pre[maxn],last[maxn],flow[maxn],d[maxn],pos[50][50];\nbool vis[maxn],v[maxn];\nstruct node\n{\n\tint net,va,cost,to;\n}data[maxm<<3];\n\nint read() \n{\n\tint res=0;\n\tchar c=getchar();\n\twhile (c<'0'||c>'9')\n\t\tc=getchar();\n\twhile (c>='0'&&c<='9')\n\t{\n\t\tres=res*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn res;\n}\n\nvoid add(int a,int b,int va,int cost)\n{\n\tdata[++tot].cost = cost;\n\tdata[tot].net = head[a];\n\tdata[tot].to = b;\n\tdata[tot].va = va;\n\thead[a] = tot;\n\tdata[++tot].cost = -cost;\n\tdata[tot].net = head[b];\n\tdata[tot].to = a;\n\tdata[tot].va = 0;\n\thead[b] = tot;\n}\n\nbool SPFA()\n{\n\tmemset(d,0x3f,sizeof(d));\n\tmemset(flow,0x3f,sizeof(flow));\n\tmemset(vis,0,sizeof(vis));\n\tqueue<int> q;\n\tq.push(str);\n\tvis[str] = 1;\n\td[str] = 0;\n\tpre[end] = -1;\n\twhile(!q.empty())\n\t{\n\t\tint from = q.front();q.pop();\n\t\tvis[from] = 0;\n\t\tfor(int i=head[from];i!=-1;i=data[i].net)\n\t\t{\n\t\t\tint to = data[i].to ;\n\t\t\tint va = data[i].va ;\n\t\t\tint cost = data[i].cost ;\n\t\t\tif(va&&d[to]>d[from]+cost)\n\t\t\t{\n\t\t\t\td[to] = d[from]+cost;\n\t\t\t\tpre[to] = from; \n\t\t\t\tlast[to] = i;\n\t\t\t\tflow[to] = min(flow[from],va); \n\t\t\t\tif(!vis[to])\n\t\t\t\t{\n\t\t\t\t\tvis[to] = 1;\n\t\t\t\t\tq.push(to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn pre[end] != -1;\n}\n\nvoid MCMF()\n{\n\twhile(SPFA())\n\t{\n\t\tint now = end;\n\t\tmaxcost += flow[end]*d[end];\n\t\twhile(now!=str)\n\t\t{\n\t\t\tdata[last[now]].va -= flow[end];\n\t\t\tdata[last[now]^1].va += flow[end];\n\t\t\tnow = pre[now];\n\t\t}\n\t}\n}\n\nvoid print(int id,int x)\n{\n\tint temp = x - 2 * n * m;//\u771f\u5b9e\u7684\u5750\u6807\u70b9\n\tfor(int i=head[x];i!=-1;i=data[i].net)\n\t{\n\t\tint to = data[i].to ;\n\t\tint va = data[i].va ;\n\t\tif(!va)\tcontinue;//\u8868\u793a\u8fd9\u6761\u8fb9\u5df2\u7ecf\u4e0d\u80fd\u6709\u8f66\u901a\u8fc7\u4e86 \n\t\tint tt = to - 2 * n * m;\n\t\tif(temp+1==tt)\tprintf(\"%d 1\\n\",id);//\u5411\u53f3 \n\t\telse\t\t\tprintf(\"%d 0\\n\",id);//\u5411\u4e0b \n\t\tdata[i].va--;\n\t\tprint(id,to);\n\t\tbreak;\n\t}\n}\n\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tcnt = read();m = read();n = read();\n\tstr = 3 * n * m + 1;end = 3 * n * m + 2;\n\t//\u533a\u95f4[1,n*m]\u5185\u662f\u5165\u70b9\uff0c(n*m,2*n*m]\u662f\u51fa\u70b9\uff0c(2*n*m,3*n*m]\u662f\u65b0\u56fe\u4e0a\u7684\u70b9 \n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tpos[i][j] = ++p;//\u5148\u7ed9\u6bcf\u4e2a\u70b9\u4e00\u4e2a\u7f16\u53f7 \n\tadd(str,1,cnt,0);\n\tadd(2*n*m,end,cnt,0);//\u5bf9\u5e94\u5206\u67904 \n\tfor(int i=1;i<=n;i++)//\u5bf9\u5e94\u5206\u67902 \n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint x = read();\n\t\t\tif(x==2)\tadd(pos[i][j],pos[i][j]+n*m,1,-1);\n\t\t\tif(x!=1)\tadd(pos[i][j],pos[i][j]+n*m,inf,0);\n\t\t\telse\tv[pos[i][j]] = 1;//\u6807\u8bb0\u4e00\u4e0b\u4e0d\u80fd\u8d70\u7684\u8fb9 \n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)//\u5bf9\u5e94\u5206\u67903 \n\t\tfor(int j=2;j<=m;j++)\n\t\t\tadd(pos[i][j-1]+n*m,pos[i][j],inf,0);\n\tfor(int i=2;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tadd(pos[i-1][j]+n*m,pos[i][j],inf,0);\n\tMCMF();//\u6109\u5feb\u5730\u8dd1\u4e00\u8fb9MCMF\uff0c\u5176\u4e2d\u8fc7\u7a0b\u5f88\u5e38\u89c4 \n\tfor(int x=1+n*m;x<2*n*m;x++)\n\t{//\u679a\u4e3e\u51fa\u70b9 \n\t\tif(v[x-n*m])\tcontinue;//\u8df3\u8fc7\u969c\u788d \n\t\tfor(int i=head[x];i!=-1;i=data[i].net)\n\t\t{\n\t\t\tint va = data[i].va ;\n\t\t\tint to = data[i].to ;\n\t\t\tif(to+n*m==x)\tcontinue;//\u53bb\u6389\u8fde\u5411\u81ea\u8eab\u7684\u5165\u70b9 \n\t\t\tif(va==inf)\tcontinue;//\u53bb\u6389\u4e0d\u4f1a\u6709\u8f66\u7ecf\u8fc7\u7684\u8fb9 \n\t\t\tif(to!=end)\n\t\t\t\tadd(x+m*n,to+2*n*m,inf-va,0);\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt;i++)//dfs\u6c42\u89e3\u5373\u53ef \n\t\tprint(i,1+2*n*m);\n\treturn 0;\n}\n```\n\u6709\u4f55\u4e0d\u5f53\u4e4b\u5904\u8fd8\u8bf7\u5927\u4f6c\u6307\u51fa\uff0c\u4e0d\u59a8\u7559\u4e2a\u8d5e\uff0c\u611f\u8c22\u652f\u6301\uff01",
        "postTime": 1616932546,
        "uid": 250174,
        "name": "Akoasm_X",
        "ccfLevel": 7,
        "title": "P3356 \u706b\u661f\u63a2\u9669\u95ee\u9898 \u9898\u89e3"
    },
    {
        "content": "# Sol\n- \u5efa\u56fe\uff1a\n\n1. \u62c6\u70b9\uff0ci,i\n\n```cpp\n    2. if(a[i][j]==1) continue;\n    add_edge(i,i',inf,0);\n    if(a[i][j]==2) add_edge(i,i',1,1);\n    3. if(a[i][j]==1) continue;\n    if(a[i][j+1]!=1&&\u5b58\u5728(i,j+1)) add_edge(p[i][j]+num,p[i][j+1],inf,0);\n    if(a[i+1][j]!=1&&\u5b58\u5728(i+1,j)) add_edge(p[i][j]+num,p[i+1][j],inf,0);\n    4. if(a[1][1]!=1) add_edge(S,1,car,0);\n    if(a[n][m]!=1) add_edge(p[n][m]+num,T,car,0);\n```\n- \u5206\u6790\n\u6bcf\u4e2a\u70b9\u4e0d\u9650\u5236\u8d70\u8fc7\u6b21\u6570\n\n\u6240\u4ee5\u81ea\u5df1\u5230\u81ea\u5df1\u7684\u6d41\u91cf\u4e3ainf\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u77f3\u5757\uff0c**\u53e6\u5916\u8fde\u8fb9**\uff1aadd\\_edge(i,i',1,1);\uff08\u8d39\u7528\u6d41\u4e0d\u53ef\u53e0\u52a0\uff09\n\n\n\n------------\n\n\n# Notice\n\n\u53cd\u5411\u5f27\u7684\u6d41\u91cf\u5c31\u662f\u5f53\u524d\u5f27\u6d41\u8fc7\u7684\u6d41\u91cf\n\n`if(!e[i^1].fl) continue;\n\n        e[i^1].fl--;`\n\n\u8fd9\u53e5\u8bdd\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8d70\n\n\u5982\u679c\u53ef\u4ee5\uff0c\u5c31\u5c06\u6d41\u91cf\u51cf1\uff0c\u4ee3\u8868\u5df2\u7ecf\u8d70\u8fc7\u4e00\u6b21\n\n\u8f93\u51fa\u65f6\u8981\u6ce8\u610f\u7279\u5224\n\n\u4eceA\u5230B\uff0c\u5e94\u8be5\u76f4\u63a5dfs(B')\u800c\u4e0d\u662fdfs(B)\n\n\u5426\u5219\u53ef\u80fd\u8fd4\u56de\u4e0a\u4e00\u4e2a\u70b9\n\n\n# Code\n    \n    \n    \n    \n    \n    \n    \n```cpp\n    // by spli\n    #include<cstring>\n    #include<cstdio>\n    #include<algorithm>\n    #include<iostream>\n    #include<queue>\n    using namespace std;\n    typedef pair<int,int> Pair;\n    const int N=100;\n    const int inf=0x3f3f3f3f;\n    int car,m,n;\n    int a[N][N],p[N][N];\n    struct node{\n        int to,nxt,fl,c;\n    }e[N*N*N];int head[N*N],cnt;\n    queue<int>q;\n    int dis[N*N*2];\n    bool vis[N*N*2];\n    int pe[N*N*2],pv[N*N*2];\n    void add(int f,int t,int fl,int c){\n        e[cnt]=(node){t,head[f],fl,c};\n        head[f]=cnt++;\n    }\n    void add_edge(int f,int t,int fl,int c){\n        add(f,t,fl,c);\n        add(t,f,0,-c);\n    }\n    bool spfa(int S,int T){\n        for(int i=S;i<=T;++i) dis[i]=-inf;\n        dis[S]=0;\n        vis[S]=1;\n        q.push(S);\n        while(!q.empty()){\n            int u=q.front();\n            q.pop();\n            vis[u]=0;\n            for(int i=head[u];~i;i=e[i].nxt){\n                int v=e[i].to;\n                if(e[i].fl>0&&dis[v]<dis[u]+e[i].c){\n                    dis[v]=dis[u]+e[i].c;\n                    pe[v]=i;\n                    pv[v]=u;\n                    if(!vis[v]){\n                        vis[v]=1;\n                        q.push(v);\n                    }\n                }\n            }\n        }\n        return dis[T]>(-inf);\n    }\n    Pair mcf(int S,int T){\n        int C=0,F=0;\n        int flow=0;\n        while(spfa(S,T)){\n            flow=inf;\n            for(int i=T;i!=S;i=pv[i])\n                flow=min(flow,e[pe[i]].fl);\n            C+=flow*dis[T];\n            F+=flow;\n            for(int i=T;i!=S;i=pv[i])\n                e[pe[i]].fl-=flow,e[pe[i]^1].fl+=flow;\n        }\n        return Pair(F,C);\n    }\n    void DFS(int x,int y,int pos,int k,int T){\n        int kx,ky,mov;\n        for(int i=head[pos];~i;i=e[i].nxt){\n            int v=e[i].to;\n            if(v==0) continue;\n            if(v==T) continue;\n            if(v==pos-n*m) continue;\n            if(!e[i^1].fl) continue;\n            e[i^1].fl--;\n            if(v>n*m){\n                DFS(x,y,v,k,T);\n                return;\n            }\n            if(v==p[x][y]+1) kx=x,ky=y+1,mov=1;\n            else kx=x+1,ky=y,mov=0;\n            printf(\"%d %d\\n\",k,mov);\n            DFS(kx,ky,v+n*m,k,T);//\u4e0d\u80fd\u5199DFS(V) \n            return;\n        }\n    }\n    int main(){\n        memset(head,-1,sizeof(head));\n        scanf(\"%d%d%d\",&car,&m,&n);\n        int num=n*m,now=0;\n        int S=0,T=num*2+1;\n        for(int i=1;i<=n;++i)\n            for(int j=1;j<=m;++j){\n                scanf(\"%d\",&a[i][j]);\n                p[i][j]=++now;\n                if(a[i][j]==1) continue;\n                if(a[i][j]==2) add_edge(p[i][j],p[i][j]+num,1,1),add_edge(p[i][j],p[i][j]+num,inf,0);\n                if(a[i][j]==0) add_edge(p[i][j],p[i][j]+num,inf,0);\n            }\n        if(a[1][1]!=1) add_edge(S,1,car,0);\n        for(int i=1;i<=n;++i)\n            for(int j=1;j<=m;++j){\n                if(a[i][j]==1) continue;\n                if(a[i][j+1]!=1&&p[i][j+1]) add_edge(p[i][j]+num,p[i][j+1],inf,0);\n                if(a[i+1][j]!=1&&p[i+1][j]) add_edge(p[i][j]+num,p[i+1][j],inf,0);\n            }\n        if(a[n][m]!=1) add_edge(p[n][m]+num,T,car,0);\n        Pair ans=mcf(S,T);\n        int f=ans.first;\n        for(int i=1;i<=f;++i)\n            DFS(1,1,1,i,T);\n        return 0;\n    }\n\n```",
        "postTime": 1513261188,
        "uid": 35763,
        "name": "spli",
        "ccfLevel": 0,
        "title": "P3356 \u706b\u661f\u63a2\u9669\u95ee\u9898"
    },
    {
        "content": "# P3356\u9898\u89e3-by zsy\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3356)\n\n\u7f51\u7edc\u6d41\u9898\u76ee\u5957\u8def\uff1a\n\n1. \u5206\u6790\u5982\u4f55\u901a\u8fc7\u6700\u5927\u6d41/\u6700\u5c0f\uff08\u5927\uff09\u8d39\u7528\u6765\u8868\u793a\u9898\u76ee\u4e2d\u53d8\u91cf\u3002\n1. \u6839\u636e1\u7684\u5206\u6790\u5efa\u56fe\uff0c\u4fdd\u8bc1\u8fd9\u4e2a\u8868\u793a\u662f\u6b63\u786e\u7684\u3002\n1. \u8dd1HLPP/Dinic/ISAP\uff08\u6700\u5927\u6d41\uff09\u6216\u8005mcmf\u3002\n\n\u4e00\u822c\u7684\u7f51\u7edc\u6d41\u9898\u76ee\uff0c\u96be\u70b9\u5728\u7b2c2\u6b65\u4e0a\u3002\u4e5f\u4e0d\u6392\u9664\u6709\u4e9b\u9898\u76ee\u7b2c\u4e00\u6b65\u7684\u8868\u793a\u975e\u5e38\u5999\u3002\n\n\u8fd9\u9053\u9898\u662f\u5178\u578b\u7684\u5efa\u56fe\u9898\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u9898\u76ee\u4e2d\u4e24\u4e2a\u53d8\u91cf\uff1a\u91c7\u96c6\u6807\u672c\u7684\u6570\u91cf\u548c\u63a2\u6d4b\u8f66\u7684\u6570\u91cf\u3002\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u6700\u5927\u6d41\u63a7\u5236\u63a2\u6d4b\u8f66\uff0c\u7528\u6700\u5927\u8d39\u7528\u6c42\u51fa\u6700\u5927\u6807\u672c\u6570\u91cf\u3002\n\n\u8003\u8651\u5efa\u56fe\uff1a\n\n1. $S$ ~ $X_{1,1}$ \u6d41\u91cf\u63a2\u6d4b\u8f66\u6570\u91cf$n$\uff0c\u8d39\u75280\uff0c\u8868\u793a\u521d\u59cb\u72b6\u6001\u3002\n1. \u62c6\u70b9\uff0c$X_{i,j}$\u548c$Y_{i,j}$\uff0c\u5206\u522b\u8868\u793a\u8d70\u5230\u6b64\u70b9\u548c\u8d70\u8fc7\u6b64\u70b9\u3002\u82e5\u6b64\u70b9\u6709\u77f3\u5934\uff0c\u5219$X_{i,j}$ ~ $Y_{i,j}$\uff0c\u6d41\u91cf1\uff0c\u8d39\u75281\uff0c\u8868\u793a\u53d6\u4e86\u8fd9\u5757\u77f3\u5934\u3002\u53e6\u5916\uff0c\u53ea\u8981\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u8d70\uff0c\u5c31\u8fde\u4e00\u6761\u8fb9$X_{i,j}$ ~ $Y_{i,j}$\uff0c\u6d41\u91cfINF\uff0c\u8d39\u75280\uff0c\u8868\u793a\u8d70\u8fc7\u8fd9\u4e2a\u70b9\u3002\n1. \u70b9\u4e4b\u95f4\u7684\u8fde\u7ebf\uff0c$Y_{i,j}$\u5230$X_{i+1,j}\u548cX_{i,j+1}$\u5206\u522b\u8868\u793a\u5411\u5357\u8d70\u548c\u5411\u4e1c\u8d70\u3002\n1. $Y_{p,q}$ ~ $T$\uff0c\u6d41\u91cfINF\uff0c\u8d39\u75280\uff0c\u8868\u793a\u5b8c\u6210\u4efb\u52a1\u3002\n\n\u8fd9\u6837\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u901a\u8fc7\u5efa\u56fe\u4e2d\u7684(1)\u63a7\u5236\u4e86\u63a2\u6d4b\u8f66\u6570\u91cf\uff0c\u7136\u540e\u901a\u8fc7(2)(3)\u5b8c\u6210\u4e86\u53d6\u77f3\u5934\u7684\u6784\u56fe\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u7686\u5927\u6b22\u559c\u7684\u8dd1mcmf\u5566\uff01\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define nm (n*m)\nusing namespace std;\nconst int N=35*35*2+5,M=35+5,INF=0x3f3f3f3f;//\u6ce8\u610f\u4e24\u70b9\uff1amaxn\u4e00\u5b9a\u8981\u5f00\u591f\uff1bINF\u8981\u5c0f\u4e8eINTmax/2\uff0c\u4e0d\u7136\u52a0\u8d77\u6765\u53ef\u80fd\u4f1a\u7206\nstruct Edge{int u,v,f,w,nxt;}e[N*2];\nint h[N],pre[N],flow[N],dist[N],last[N];\nbool vis[N];\nint a[M][M],p[M][M];\nint W,n,m,mc,mf,s,t,tot=1;\ninline void add(int u,int v,int f,int w){//\u53cc\u5411\u8fb9\n\te[++tot]=(Edge){u,v,f,w,h[u]};h[u]=tot;\n\te[++tot]=(Edge){v,u,0,-w,h[v]};h[v]=tot;\n}\nbool spfa(){\n\tfor(int i=1;i<=nm*2+2;++i) dist[i]=-INF;\n\tmemset(flow,0x3f,sizeof(flow));\n\tmemset(vis,0,sizeof(vis));\n\tqueue<int>q;\n\tq.push(s);\n\tdist[s]=0;\n\tvis[s]=1;\n\tpre[t]=-1;//\u5224\u65ad\u80fd\u5426\u5230\u8fbe\u6c47\u70b9\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tfor(int i=h[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v,f=e[i].f,w=e[i].w;\n\t\t\tif(f&&dist[v]<dist[u]+w){//\u6539\u7b26\u53f7\u6210\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\n\t\t\t\tdist[v]=dist[u]+w;\n\t\t\t\tflow[v]=min(flow[u],f);\n\t\t\t\tlast[v]=i;\n\t\t\t\tpre[v]=u;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn pre[t]!=-1;//\u8fd9\u91cc\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684\u5224\u65ad\n}\nvoid mcmf(){\n\twhile(spfa()){\n\t\tmf+=flow[t];\n\t\tmc+=flow[t]*dist[t];\n\t\tint now=t;\n\t\twhile(now!=s){//\u589e\u5e7f\u4e4b\u540e\u7684\u6d41\u91cf\u5904\u7406\n\t\t\te[last[now]].f-=flow[t];\n\t\t\te[last[now]^1].f+=flow[t];//\u4e0d\u8981\u5fd8\u4e86\u53cd\u5411\u8fb9\u52a0\u6d41\u91cf\n\t\t\tnow=pre[now];\n\t\t}\n\t}\n}\nvoid dfs(int x,int cnt){//\u8f93\u51fa\u8def\u5f84\u51fd\u6570\uff0c\u987a\u7740\u65b9\u5411dfs\u5373\u53ef\uff0c\u6ce8\u610f\u662f\u5224\u65ad\u53cd\u5411\u8fb9\u6d41\u91cf\u6765\u5224\u5b9a\u8fd9\u6761\u8fb9\u6709\u6ca1\u6709\u8d70\u8fc7\uff0c\u8d70\u4e86\u51e0\u6b21\u3002\n\tif(x==nm) return; \n\tint u,v;\n\tu=x+nm;\n\tif(x%m){\n\t\tv=x+1;\n\t\tint i=h[u];\n\t\twhile(i&&e[i].v!=v) i=e[i].nxt;\n\t\tif(e[i^1].f){\n\t\t\te[i^1].f--;\n\t\t\tprintf(\"%d 1\\n\",cnt);\n\t\t\tdfs(v,cnt);\n\t\t\treturn;\n\t\t}\n\t}\n\tif(x<=nm-m){\n\t\tv=x+m;\n\t\tint i=h[u];\n\t\twhile(i&&e[i].v!=v) i=e[i].nxt;\n\t\tif(e[i^1].f){\n\t\t\te[i^1].f--;//\u8d70\u5230\u4e00\u6b21\u5c31\u51cf\u4e00\uff0c\u63a7\u5236\u4f4f\u4e86\u8fd9\u4e2a\u70b9\u8d70\u8fc7\u63a2\u6d4b\u8f66\u7684\u6570\u91cf\u3002\n\t\t\tprintf(\"%d 0\\n\",cnt);\n\t\t\tdfs(v,cnt);\n\t\t\treturn;\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&W,&m,&n);s=nm*2+1,t=nm*2+2;\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\tp[i][j]=(i-1)*m+j;\n\t\t}\n\t}\n    //\u4e0b\u9762\u5c31\u662f\u5efa\u8fb9\u4e86\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tif(a[i][j]==1) continue;\n\t\t\tadd(p[i][j],p[i][j]+nm,INF,0);\n\t\t\tif(a[i][j]==2) add(p[i][j],p[i][j]+nm,1,1);//\u6709\u77f3\u5934\uff0c\u52a0\u4e00\u6761\u53d6\u77f3\u5934\u8fb9\n\t\t}\n\t}\n\tadd(s,1,W,0);\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tif(a[i][j]==1) continue;\n\t\t\tif(j+1<=m&&a[i][j+1]!=1) add(p[i][j]+nm,p[i][j+1],INF,0);\n\t\t\tif(i+1<=n&&a[i+1][j]!=1) add(p[i][j]+nm,p[i+1][j],INF,0);\n\t\t}\n\t}\n\tadd(nm*2,t,INF,0);\n\tmcmf();\n\tfor(int i=1;i<=mf;++i) dfs(1,i);\n\treturn 0;\n} \n```\n# \u8c22\u8c22\u5927\u5bb6\uff01",
        "postTime": 1583235152,
        "uid": 160484,
        "name": "cunzai_zsy0531",
        "ccfLevel": 7,
        "title": "P3356\u9898\u89e3"
    },
    {
        "content": "### \u3010\u9898\u76ee\u3011\n![\u9898\u76ee](https://cdn.luogu.com.cn/upload/pic/25964.png)\n### \u3010\u89e3\u9898\u601d\u8def\u3011\n1. \u6c42\u51fa\u7b54\u6848\n\t- \u628a\u6bcf\u4e00\u4e2a\u683c\u70b9\u62c6\u5206\u6210\u4e24\u4e2a\u70b9\uff08\u8868\u793a\uff1a\u70b91\u8868\u793a\u8fdb\u5165\u8be5\u683c\u5b50\uff0c\u70b92\u8868\u793a\u51fa\u6765\u8be5\u683c\u5b50\uff09\uff0c\u5e76\u4e14\u628a\u70b91\u548c\u70b92\u8fde\u63a5\u4e00\u6761\u6709\u5411\u8fb9\uff1a\n    \n    \t- \u5f53\u8fd9\u4e2a\u70b9\u6709\u5ca9\u77f3\u65f6\uff0c\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a1\uff1b\n        - \u5f53\u8fd9\u4e2a\u70b9\u4e0d\u662f\u5ca9\u77f3\u65f6\uff0c\u5bb9\u91cf\u4e3a\u65e0\u7a77\u5927\uff0c\u8d39\u7528\u4e3a0\u3002\n    - \u628a\u6bcf\u4e00\u4e2a\u683c\u70b9\u7684\u70b92\u4e0e\u5176\u76f8\u90bb\u7684\u70b9\u7684\u70b91\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u65e0\u7a77\u5927\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\n    - \u7136\u540e\u53ea\u8981\u628a\u8d39\u7528\u53d6\u76f8\u53cd\u6570\uff0c\u7136\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n2. \u8f93\u51fa\u65b9\u6848\n\t- \u679a\u4e3e\u6bcf\u4e00\u8f86\u8f66\uff0c\u7136\u540e\u4ece\u6e90\u70b9\u5f00\u59cb\u4e0d\u65ad\u5730\u5728\u6b8b\u4f59\u7f51\u7edc\u4e2d\u8dd1dfs\uff0c\u7136\u540e\u8f93\u51fa\u8f66\u8f86\u548c\u65b9\u5411\u3002\n\t- \u8f93\u51fa\u65b9\u6848\u65f6\u8981\u6ce8\u610f\u4e0d\u8981\u8f93\u51fa\u62c6\u70b9\u5f97\u51fa\u7684\u70b91\u6216\u70b92\u3001\u6e90\u70b9\u548c\u6c47\u70b9.\n    \n### \u3010\u89e3\u9898\u53cd\u601d\u3011\n- \u8f93\u51fa\u65b9\u6848\u65f6\u8981\u6ce8\u610f\u4e00\u4e9b\u865a\u6784\u7684\u70b9\u4e0d\u8981\u8f93\u51fa\u3002\u5982\uff1a\u62c6\u70b9\u5f97\u51fa\u7684\u70b91\u6216\u70b92\u3001\u6e90\u70b9\u548c\u6c47\u70b9\u3002\n\n### \u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n```cpp\n#include<cstdio>\n#include<queue>\n#include<iostream>\n#include<cstring>\nusing namespace std;\n\n#define nxt(x) (x+m*n)\n#define INF 0x3f3f3f3f\nint cur=1,n,m,s,t,mcost,mflow,car,ID;\nint head[5005],dis[5005],flow[5005],pre[5005];\nint Map[105][105],p[105][105];\nstruct EDGE{\n    int t,next,w,f;\n}e[100005];\nvoid add(int a,int b,int w,int f)\n{\n    cur++;e[cur].t=b;e[cur].next=head[a];e[cur].w=w;e[cur].f=f;head[a]=cur;\n    cur++;e[cur].t=a;e[cur].next=head[b];e[cur].w=0;e[cur].f=-f;head[b]=cur;\n}\n\nqueue < int > q;\nbool vis[5005];\nbool SPFA(int s,int t)\n{\n    memset(dis,0x3f,sizeof dis);\n    memset(vis,0,sizeof vis);\n    dis[s]=0;\n    vis[s]=1;\n    flow[s]=INF;\n    q.push(s);\n    while (!q.empty())\n    {\n        int u=q.front();q.pop();\n        vis[u]=false;\n        for (int h=head[u];h!=-1;h=e[h].next)\n        {\n            int v=e[h].t,f=e[h].f;\n            if (e[h].w&&dis[u]+f<dis[v])//\u5982\u679c\u8fb9\u8fd8\u6709\u6d41\u91cf\u5c31\u5c1d\u8bd5\u66f4\u65b0\n            {\n                dis[v]=dis[u]+f;//\u66f4\u65b0\u6700\u77ed\u8def\u5f84\n                flow[v]=min(flow[u],e[h].w);//\u5c3d\u53ef\u80fd\u5730\u6d41\u6c34\n                pre[v]=h;//\u8bb0\u5f55\u8def\u5f84\n                if (!vis[v])\n                {\n                    vis[v]=true;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return dis[t]!=INF;\n}\n\nvoid Update(int s,int t)\n{\n    int x=t;\n    while (x!=s)\n    {\n        int i=pre[x];\n        e[i].w-=flow[t];\n        e[i^1].w+=flow[t];\n        x=e[i^1].t;\n    }//\u6cbf\u7740\u8bb0\u5f55\u4e0b\u7684\u8def\u5f84\u5e76\u8fdb\u884c\u589e\u5e7f\u8def\n    mflow+=flow[t];\n    mcost+=flow[t]*dis[t];//\u7d2f\u8ba1\u8d39\u7528\n}\nvoid E_K(int s,int t)\n{\n    while (SPFA(s,t))//\u5f53\u8fd8\u6709\u591a\u4f59\u6d41\u91cf\u65f6\n        Update(s,t);\n}\n\nvoid dfs(int x,int y,int u,int k)\n{\n\tint kx,ky,mov;\n\tfor (int h=head[u];h!=-1;h=e[h].next)\n\t{\n\t\tint v=e[h].t;\n\t\tif (v==s) continue;\n\t\tif (v==t) continue;\n\t\tif (v==u-n*m) continue;\n\t\tif (!e[h^1].w) continue;\n\t\te[h^1].w--;\n\t\tif (v>n*m)\n\t\t{\n\t\t\tdfs(x,y,v,k);\n\t\t\treturn;\n\t\t}\n\t\tif (v==p[x][y]+1)\n\t\t{\n\t\t\tkx=x;\n\t\t\tky=y+1;\n\t\t\tmov=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tkx=x+1;\n\t\t\tky=y;\n\t\t\tmov=0;\n\t\t}\n\t\tprintf(\"%d %d\\n\",k,mov);\n\t\tdfs(kx,ky,v+n*m,k);\n\t\treturn;\n\t}\n}\nint main()\n{\n    scanf(\"%d%d%d\",&car,&m,&n);\n    s=0;t=n*m*2+1;\n    memset(head,-1,sizeof head);\n    for (int i=1;i<=n;i++)\n    \tfor (int j=1;j<=m;j++)\n    \t{\n    \t\tscanf(\"%d\",&Map[i][j]);\n    \t\tp[i][j]=++ID;\n    \t}\n\tif (Map[1][1]!=1) add(s,1,car,0);\n\tif (Map[n][m]!=1) add(nxt(p[n][m]),t,car,0);\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tif (Map[i][j]==1) continue;\n\t\t\tadd(p[i][j],nxt(p[i][j]),INF,0);\n\t\t\tif (Map[i][j]==2)\n\t\t\t\tadd(p[i][j],nxt(p[i][j]),1,-1);\n\t\t\t\n\t\t\tif (Map[i+1][j]!=1&&p[i+1][j])\n\t\t\t{\n\t\t\t\tadd(nxt(p[i][j]),p[i+1][j],INF,0);\n\t\t\t}\n\t\t\tif (Map[i][j+1]!=1&&p[i][j+1])\n\t\t\t{\n\t\t\t\tadd(nxt(p[i][j]),p[i][j+1],INF,0);\n\t\t\t}\n\t\t}\n    E_K(s,t);\n    for (int i=1;i<=mflow;i++)\n    \tdfs(1,1,1,i);\n    return 0;\n} \n```",
        "postTime": 1532967987,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3356 \u3010\u706b\u661f\u63a2\u9669\u95ee\u9898 \u3011"
    },
    {
        "content": "\u4e00\u4e2a\u70b9\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u8f86\u8f66\uff0c\u8fd9\u4e2a\u6761\u4ef6\u5e76\u6ca1\u6709\u7528\n\n\u56e0\u4e3a\u4f60\u53ef\u4ee5\u4e00\u8f86\u8f66\u4e00\u8f86\u8f66\u8d70\n\n\u4e8e\u662f\u8fd9\u4e2a\u9898\u5c31\u548c[\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898](https://www.luogu.org/problemnew/show/4012)\u4e00\u6837\u4e86\uff0c\u53ea\u9700\u8981\u628a\u4e00\u4e2a\u4f4d\u7f6e\u62c6\u6210\u4e24\u4e2a\u70b9\u5c31\u597d\u4e86\n\n\u8f93\u51fa\u65b9\u6848\u5c31DFS\u4e00\u4e0b\uff0c\u8bb0\u4e00\u4e2a\u6570\u7ec4\uff0c\u6bcf\u6b21\u641c\u8fc7\u5b83\u5c31++\uff0c\u5982\u679c\u7b49\u4e8e\u8fd9\u6761\u8fb9\u6d41\u8fc7\u7684\u6d41\u91cf\u5c31\u4e0d\u80fd\u8d70\n\n\u7136\u540e\u5c31\u6ca1\u4e86~~\u8bb0\u5f97\u68c0\u67e5\u6570\u7ec4\u5927\u5c0f\uff0c\u4e0d\u7136WA\u4e24\u904d\u8fd8\u4e0d\u77e5\u9053\u6570\u7ec4\u5f00\u5c0f\u4e86~~\n\n\n---\n\n```cpp\n# include <bits/stdc++.h>\n# define RG register\n# define IL inline\n# define Fill(a, b) memset(a, b, sizeof(a))\nusing namespace std;\ntypedef long long ll;\nconst int _(5010), __(1e6 + 10), INF(2e9);\n\nIL ll Read(){\n    char c = '%'; ll x = 0, z = 1;\n    for(; c > '9' || c < '0'; c = getchar()) if(c == '-') z = -1;\n    for(; c >= '0' && c <= '9'; c = getchar()) x = x * 10 + c - '0';\n    return x * z;\n}\n\nint n, p, q, id[50][50], tmp[__], mp[50][50], num, ans[__], len;\nint cnt, fst[_], w[__], to[__], nxt[__], dis[_], vis[_], S, T, cost[__], pe[_], pv[_], max_flow;\nqueue <int> Q;\n\nIL void Add(RG int u, RG int v, RG int f, RG int co){\n    cost[cnt] = co; w[cnt] = f; to[cnt] = v; nxt[cnt] = fst[u]; fst[u] = cnt++;\n    cost[cnt] = -co; w[cnt] = 0; to[cnt] = u; nxt[cnt] = fst[v]; fst[v] = cnt++;\n}\n\nIL bool Bfs(){\n    Q.push(S); Fill(dis, 127); dis[S] = 0; vis[S] = 1;\n    while(!Q.empty()){\n        RG int u = Q.front(); Q.pop();\n        for(RG int e = fst[u]; e != -1; e = nxt[e]){\n            if(!w[e] || dis[to[e]] <= dis[u] + cost[e]) continue;\n            dis[to[e]] = dis[u] + cost[e];\n            pe[to[e]] = e; pv[to[e]] = u;\n            if(!vis[to[e]]) vis[to[e]] = 1, Q.push(to[e]);\n        }\n        vis[u] = 0;\n    }\n    if(dis[T] >= dis[T + 1]) return 0;\n    RG int ret = INF;\n    for(RG int u = T; u != S; u = pv[u]) ret = min(ret, w[pe[u]]);\n    for(RG int u = T; u != S; u = pv[u]) w[pe[u]] -= ret, w[pe[u] ^ 1] += ret;\n    max_flow += ret;\n    return 1;\n}\n\nIL void Dfs(RG int x, RG int y){\n    RG int Id = id[x][y], d0 = id[x + 1][y], d1 = id[x][y + 1];\n    for(RG int e = fst[Id + num]; e != -1; e = nxt[e]){\n        if(tmp[e] >= w[e ^ 1]) continue;\n        if(to[e] == d0){\n            ++tmp[e]; ans[++len] = 0;\n            Dfs(x + 1, y);\n            return;\n        }\n        if(to[e] == d1){\n            ++tmp[e]; ans[++len] = 1;\n            Dfs(x, y + 1);\n            return;\n        }\n    }\n        \n}\n\nint main(RG int argc, RG char *argv[]){\n    Fill(fst, -1);\n    n = Read(); q = Read(); p = Read();\n    for(RG int i = 1; i <= p; ++i)\n        for(RG int j = 1; j <= q; ++j)\n            id[i][j] = ++num;\n    T = num + num + 1;\n    for(RG int i = 1; i <= p; ++i)\n        for(RG int j = 1; j <= q; ++j)\n            mp[i][j] = Read();\n    Add(S, id[1][1], n, 0); Add(id[p][q] + num, T, n, 0);\n    for(RG int i = 1; i <= p; ++i)\n        for(RG int j = 1; j <= q; ++j){\n            if(mp[i][j] == 1) continue;\n            if(!mp[i][j]) Add(id[i][j], id[i][j] + num, INF, 0);\n            else Add(id[i][j], id[i][j] + num, INF, 0), Add(id[i][j], id[i][j] + num, 1, -1);\n        }\n    for(RG int i = 1; i <= p; ++i)\n        for(RG int j = 1; j <= q; ++j){\n            if(mp[i][j] == 1) continue;\n            if(i < p && mp[i + 1][j] != 1) Add(id[i][j] + num, id[i + 1][j], INF, 0);\n            if(j < q && mp[i][j + 1] != 1) Add(id[i][j] + num, id[i][j + 1], INF, 0);\n        }\n    while(Bfs());\n    for(RG int i = 1; i <= max_flow; ++i){\n        len = 0; Dfs(1, 1);\n        for(RG int j = 1; j <= len; ++j) printf(\"%d %d\\n\", i, ans[j]);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1515028118,
        "uid": 47640,
        "name": "Cyhlnj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3356 \u3010\u706b\u661f\u63a2\u9669\u95ee\u9898 \u3011"
    },
    {
        "content": "## P3356 \u706b\u661f\u63a2\u9669\u95ee\u9898\n\n### \u5efa\u56fe\uff1a\n\n\u56e0\u4e3a\uff08\u6709\u4e9b\u70b9\uff09\u6709\u70b9\u6743\uff0c\u6240\u4ee5\u62c6\u70b9\u4e3a\u8fb9\uff0c\u51fa\u70b9\u5411\u5165\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf $\\inf$ \u8d39\u7528 $0$\uff0c\u5982\u679c\u6709\u5ca9\u77f3\uff0c**\u518d**\u8fde\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf $1$ \u8d39\u7528 $1$\uff08\u56e0\u4e3a\u53ea\u80fd\u7531\u4e00\u8f86\u8f66\u8fdb\u884c\u91c7\u96c6\uff09\u3002\n\n\u4ece\u6e90\u70b9\u5411\u70b9 $(1,1)$ \u8fde\u8fb9\uff0c\u5bb9\u91cf $n$ \u8d39\u7528 $0$\uff0c$(p,q)$ \u5411\u6e90\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf $\\inf$ \u8d39\u7528 $0$\u3002\n\n\u6bcf\u4e2a\u70b9\uff08\u51fa\u70b9\uff09\u5411\u4e0b\u65b9\u548c\u53f3\u65b9\uff08\u5165\uff09\u70b9\u8fde\u5bb9\u91cf $n$ \u8d39\u7528 $0$ \u7684\u8fb9\uff0c\u4f46\u9700\u4fdd\u8bc1\u8fb9\u7684\u4e24\u7aef\u90fd\u4e0d\u662f\u969c\u788d\u3002\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zhg5j4qb.png)\n\n### \u6253\u5370\u8def\u5f84\n\n\u5982\u679c\u4e00\u6761\u8fb9\u7684\u5bb9\u91cf\u4e3a $f$\uff0c\u6d41\u91cf\u4e3a $r$ $(r\\leq f)$\uff0c\u6839\u636e EK \u548c dinic \u7b97\u6cd5\u7684\u7279\u70b9\uff0c\u6700\u7ec8\u7684\u5bb9\u91cf\u4e3a $f - r$ \uff0c\u800c\u53cd\u5411\u8fb9\u5bb9\u91cf\u4e3a $r$\u3002\n\n\u6240\u4ee5\uff0c\u53ef\u4ee5\u4ece\u6e90\u70b9\u8fdb\u884c\u6253\u5370\uff0c\u5982\u679c\u53f3\u8fb9\u7684 $r > 0$ \u5219\u8d70\u53f3\u8fb9\uff0c\u5426\u5219\u8d70\u4e0b\u8fb9\u3002\u6bcf\u6b21\u786e\u5b9a\u65b9\u5411\u540e\uff0c\u5c06\u8be5\u8fb9\u5bb9\u91cf\u52a0\u4e00\uff08\u5373 $r$ \u51cf\u4e00\uff09\uff0c\u4ee5\u4fbf\u786e\u5b9a\u4e0b\u4e00\u6761\u8def\u5f84\u3002\n\n### \u6ce8\u610f\u4e8b\u9879\n\n- \u4e0d\u80fd\u628a $(1,1),(p,q)$ \u4f5c\u4e3a\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u70b9\u4e5f\u53ef\u80fd\u6709\u5ca9\u77f3\u3002\n\n- \u8f93\u5165\u7684 $p,q$ \u662f\u53cd\u7684\u3002\n\n### Code\uff1a\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\n#define N 3500\n#define M 1000010\n#define inf 0x3f3f3f3f\n\nint min(int x,int y){return x < y ? x : y;}\nint n,m,s,S,T,cnt,ans1,ans2;\nint a[N][N],b[N][N];\nint h[N],cur[N],e[M << 1],f[M << 1],c[M << 1],ne[M << 1],idx = -1;\nvoid add_edge(int x,int y,int z,int zz)\n{\n    ne[++idx] = h[x];\n    h[x] = idx;\n    e[idx] = y;\n    f[idx] = z;\n    c[idx] = zz;\n}\n\nvoid add(int x,int y,int z,int zz)\n{\n    add_edge(x,y,z,zz);\n    add_edge(y,x,0,-zz);\n}\nint dis[N];\nbool vis[N];\nbool spfa()\n{\n    memset(dis,-0x3f,sizeof(dis));\n    memcpy(cur,h,sizeof(h));\n    std::queue <int> q;\n    q.push(S);\n    vis[S] = 1;\n    int ds = dis[S];\n    dis[S] = 0;\n    while(!q.empty())\n    {\n        int t = q.front();\n        q.pop();\n        vis[t] = 0;\n        for(int i = h[t];~i;i = ne[i])\n        {\n            int nx = e[i];\n            if(f[i] && dis[nx] < dis[t] + c[i])\n            {\n                dis[nx] = dis[t] + c[i];\n                if(!vis[nx])\n                {\n                    q.push(nx);\n                    vis[nx] = 1;\n                }\n            }\n        }\n    }\n    return dis[T] != ds;\n}\n\nint dfs(int k,int flow)\n{\n    if(k == T)\n        return flow;\n    vis[k] = 1;\n    int res = 0;\n    for(int &i = cur[k];~i && res < flow;i = ne[i])\n    {\n        int nx = e[i];\n        if(f[i] && !vis[nx] && dis[nx] == dis[k] + c[i])\n        {\n            int t = dfs(nx,min(f[i],flow - res));\n            if(t)\n            {\n                ans2 += t * c[i];\n                f[i] -= t;\n                f[i ^ 1] += t;\n                res += t;\n            }\n        }\n    }\n    vis[k] = 0;\n    return res;\n}\n\nint MCMF()\n{\n    int res = 0,x;\n    while(spfa())\n        while((x = dfs(S,inf)))\n            res += x;\n    return res;\n}\n\nvoid write(int x,int y,int id)\n{\n    if(x == n && y == m)\n        return;\n    int right = 0,righti,down = 0,downi;\n    for(int i = h[b[x][y] + cnt];~i;i = ne[i])\n    {\n        int nx = e[i];\n        if(nx == b[x + 1][y] && x != n)\n        {\n            down += inf - f[i];\n            if(inf - f[i])\n                downi = i;\n        }\n        if(nx == b[x][y + 1] && y != m)\n        {\n            right += inf - f[i];\n            if(inf - f[i])\n                righti = i;\n        }\n    }\n    if(down)\n    {\n        f[downi]++;\n        printf(\"%d 0\\n\",id);\n        write(x + 1,y,id);\n    }\n    else if(right)\n    {\n        f[righti]++;\n        printf(\"%d 1\\n\",id);\n        write(x,y + 1,id);\n    }\n}\n\nint main()\n{\n    #ifdef CHECK\n    freopen(\"maker.txt\",\"r\",stdin);\n    freopen(\"std.txt\",\"w\",stdout);\n    #endif\n    memset(h,-1,sizeof(h));\n    scanf(\"%d%d%d\",&s,&m,&n);\n    S = 0,T = n * m * 2 + 1;\n    for(int i = 1;i <= n;i++)\n    {\n        for(int j = 1;j <= m;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n            b[i][j] = ++cnt;\n        }\n    }\n    for(int i = 1;i <= n;i++)\n    {\n        for(int j = 1;j <= m;j++)\n        {\n            if(i == 1 && j == 1)\n                add(S,b[i][j],s,0);\n            if(i == n && j == m)\n                add(b[i][j] + cnt,T,inf,0);\n            if(a[i][j] != 1)\n            {\n                add(b[i][j],b[i][j] + cnt,inf,0);\n                if(i != n && a[i + 1][j] != 1)\n                    add(b[i][j] + cnt,b[i + 1][j],inf,0);\n                if(j != m && a[i][j + 1] != 1)\n                    add(b[i][j] + cnt,b[i][j + 1],inf,0);\n                if(a[i][j] == 2)\n                    add(b[i][j],b[i][j] + cnt,1,1);\n            }\n        }\n    }\n    ans1 = MCMF();\n    for(int i = 1;i <= s;i++)\n        write(1,1,i);\n    return 0;\n}\n```",
        "postTime": 1647869705,
        "uid": 371968,
        "name": "ningago",
        "ccfLevel": 4,
        "title": "\u3010\u7f51\u7edc\u6d4124\u9898\u3011\u706b\u661f\u63a2\u9669\u95ee\u9898"
    },
    {
        "content": "## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a $p\\times q$ \u7684\u7f51\u683c\uff0c\u6bcf\u4e2a\u683c\u5b50\u53ef\u80fd\u662f\u5e73\u5730\u3001\u969c\u788d\u6216\u8005\u77f3\u5b50\uff1b\n\n- \u53ef\u4ee5\u9009\u62e9 $n$ \u6761\u4ece $(1,1)$ \u5230 $(p,q)$ \u7684\u8def\u7ebf\uff08\u53ea\u80fd\u5f80\u53f3\u6216\u8005\u5f80\u4e0b\u8d70\uff09\uff0c\u7ecf\u8fc7\u6709\u77f3\u5b50\u7684\u683c\u5b50\u4f1a\u628a\u77f3\u5b50\u53d6\u8d70\uff0c\u53d6\u8d70\u540e\u8be5\u683c\u5b50\u53d8\u4e3a\u5e73\u5730\uff1b\n\n- \u8bf7\u8f93\u51fa\u4f60\u9009\u62e9\u7684 $n$ \u6761\u8def\u5f84\u4f7f\u5f97\u53d6\u5230\u7684\u77f3\u5b50\u6570\u91cf\u6700\u591a\u3002\n\n## \u505a\u6cd5\n\n\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u9996\u5148\u56e0\u4e3a\u77f3\u5b50\u5728\u70b9\u4e0a\uff0c\u6240\u4ee5\u9700\u8981\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u5165\u70b9 $(x,y)$ \u548c\u51fa\u70b9 $(x,y)\\prime$\u3002\n\n\u5148\u4ece $(x,y)\\prime$ \u5206\u522b\u5411 $(x+1,y)$ \u548c $(x,y+1)$ \u8fde\u6d41\u91cf\u4e3a $inf$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u6765\u8003\u8651 $(x,y)$ \u548c $(x,y)\\prime$ \u4e4b\u95f4\u7684\u8fde\u8fb9\uff1a\n- \u5bf9\u4e8e\u7a7a\u5730\uff0c\u76f4\u63a5\u5728 $(x,y)$ \u548c $(x,y)\\prime$ \u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $inf$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n- \u5bf9\u4e8e\u6709\u77f3\u5b50\u7684\u70b9\uff0c\u56e0\u4e3a\u53ea\u80fd\u53d6\u4e00\u6b21\u8be5\u70b9\u4e0a\u7684\u77f3\u5b50\uff0c\u4f46\u662f\u8be5\u70b9\u80fd\u7ecf\u8fc7\u591a\u6b21\uff0c\u6240\u4ee5 $(x,y)$ \u548c $(x,y)\\prime$ \u4e4b\u95f4\u9700\u8981**\u8fde\u4e24\u6761\u8fb9**\uff1a\u4e00\u6761\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $-1$\uff0c\u8868\u793a\u53d6\u8d70\u8be5\u70b9\u7684\u77f3\u5b50\uff1b\u53e6\u4e00\u6761\u6d41\u91cf\u4e3a $inf$\uff0c\u8d39\u7528\u4e3a $0$ \u8868\u793a\u4e0d\u53d6\u8be5\u70b9\u7684\u77f3\u5b50\u3002\n\n- \u800c\u5bf9\u4e8e\u969c\u788d\uff0c$(x,y)$ \u548c $(x,y)\\prime$ \u4e4b\u95f4**\u4e0d\u9700\u8981\u8fde\u4efb\u4f55\u8fb9**\uff0c\u8868\u793a\u8be5\u70b9\u65e0\u6cd5\u901a\u884c\u3002\n\n\u63a5\u4e0b\u6765\u4ece\u6e90\u70b9\u5411 $(1,1)$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $n$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u4ece$(1,1)\\prime$ \u5411\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $n$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u4ee3\u8868\u6709 $n$ \u6761\u8def\u5f84\u3002\n\n\u6700\u540e\u8dd1\u4e00\u6b21\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u518d\u8f93\u51fa\u4e00\u4e0b\u8def\u5f84\u5373\u53ef\u3002\n\n\u8f93\u51fa\u8def\u5f84\u53ef\u4ee5\u8dd1 $n$ \u904d `dfs`\uff0c\u6bcf\u6b21\u53ea\u7ecf\u8fc7\u53cd\u5411\u8fb9\u6d41\u91cf $>0$ \u7684\u8fb9\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c**\u9700\u8981\u5148\u8bfb\u5165 $q$\uff0c\u518d\u8bfb\u5165 $p$**\u3002\n\n## AC \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\n#define S 5000005\n#define MS 100005\n\nint q,n,m,s,t;\nint esum,to[S],nxt[S],c[S],cost[S],h[MS];\nint dis[MS],cur[MS];\nbool vis[MS];\nint maxflow,mincost;\n\ninline int id(int x,int y)\n{\n\treturn (x-1)*m+y;\n}\n\ninline int getx(int x)\n{\n\treturn (x-1)/m+1;\n}\n\ninline int gety(int x)\n{\n\treturn (x-1)%m+1;\n}\n\ninline void init()\n{\n\tesum=1;\n\tmemset(h,0,sizeof(h));\n\ts=0;\n\tt=n*m*2+1;\n}\n\ninline void add(int x,int y,int w,int v)\n{\n\tto[++esum]=y;\n\tc[esum]=w;\n\tcost[esum]=v;\n\tnxt[esum]=h[x];\n\th[x]=esum;\n}\n\ninline bool spfa()\n{\n\tmemset(dis,127,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tint inf=dis[0];\n\tqueue<int> q;\n\tq.push(s);\n\tdis[s]=0;\n\tvis[s]=true;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=false;\n\t\tfor(int i=h[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(c[i]>0&&dis[u]+cost[i]<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+cost[i];\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tvis[v]=true;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t]<inf;\n}\n\nint dfs(int u,int w)\n{\n\tif(u==t)\n\t{\n\t\treturn w;\n\t}\n\tvis[u]=true;\n\tint sum=0;\n\tfor(int &i=cur[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(c[i]>0&&dis[v]==dis[u]+cost[i]&&!vis[v])\n\t\t{\n\t\t\tint re=dfs(v,min(w,c[i]));\n\t\t\tmincost+=re*cost[i];\n\t\t\tc[i]-=re;\n\t\t\tc[i^1]+=re;\n\t\t\tw-=re;\n\t\t\tsum+=re;\n\t\t\tif(w==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\n\ninline void mcmf()\n{\n\tmaxflow=0;\n\tmincost=0;\n\twhile(spfa())\n\t{\n\t\tfor(int i=s;i<=t;i++)\n\t\t{\n\t\t\tcur[i]=h[i];\n\t\t}\n\t\tmaxflow+=dfs(s,1e8); \n\t}\n}\n\nvoid out(int num,int x,int y) // \u8f93\u51fa\u8def\u5f84 \n{\n\tif(x==n&&y==m) // \u8d70\u5230\u4e86 \n\t{\n\t\treturn;\n\t}\n\tint u=n*m+id(x,y); // \u83b7\u5f97 (x,y)' \u7684\u7f16\u53f7 \n\tfor(int i=h[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(v>n*m) // \u5224\u65ad\u8d70\u5230\u7684\u662f\u4e0d\u662f\u5165\u70b9 \n\t\t{\n\t\t\tcontinue; \n\t\t}\n\t\tint nx=getx(v),ny=gety(v); // \u83b7\u5f97\u8d70\u5230\u7684 x \u548c y \n\t\tif(c[i^1]>0&&(nx>x||ny>y)) // \u5982\u679c\u662f\u5f80\u53f3\u6216\u8005\u5f80\u4e0b\uff0c\u5e76\u4e14\u53cd\u5411\u8fb9\u6709\u6d41\u91cf \n\t\t{\n\t\t\tc[i^1]--; // \u53cd\u5411\u8fb9\u8d70\u8fc7\u4e00\u6b21\u4e86\uff0c\u6d41\u91cf -- \n\t\t\tprintf(\"%d %d\\n\",num,(int)(nx==x)); // \u8f93\u51fa \n\t\t\tout(num,nx,ny);\n\t\t\treturn; // \u627e\u5230\u8def\u4e86\uff0c\u76f4\u63a5 return \n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&q,&m,&n); // \u6ce8\u610f\u8bfb\u5165\u987a\u5e8f \n\tinit(); \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{ \n\t\t\tif(i<n)\n\t\t\t{\n\t\t\t\tadd(n*m+id(i,j),id(i+1,j),1e8,0);\n\t\t\t\tadd(id(i+1,j),n*m+id(i,j),0,0);\n\t\t\t}\n\t\t\tif(j<m)\n\t\t\t{\n\t\t\t\tadd(n*m+id(i,j),id(i,j+1),1e8,0);\n\t\t\t\tadd(id(i,j+1),n*m+id(i,j),0,0);\n\t\t\t}\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x==1) // \u969c\u788d\uff0c\u4e0d\u9700\u8981\u5efa\u8fb9 \n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tadd(id(i,j),n*m+id(i,j),1e8,0);\n\t\t\tadd(n*m+id(i,j),id(i,j),0,0);\n\t\t\tif(x==2) // \u77f3\u5b50\uff0c\u53ef\u4ee5\u53d6\u4e00\u6b21 \n\t\t\t{\n\t\t\t\tadd(id(i,j),n*m+id(i,j),1,-1);\n\t\t\t\tadd(n*m+id(i,j),id(i,j),0,1);\n\t\t\t}\n\t\t}\n\t} \n\tadd(s,id(1,1),q,0);\n\tadd(id(1,1),s,0,0);\n\tadd(n*m+id(n,m),t,q,0);\n\tadd(t,n*m+id(n,m),0,0);\n\tmcmf();\n\tfor(int i=1;i<=q;i++) // \u8bb0\u5f97\u8981\u8f93\u51fa\u591a\u6761\u8def\u5f84 \n\t{\n\t\tout(i,1,1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1639810360,
        "uid": 251130,
        "name": "lovely_ckj",
        "ccfLevel": 0,
        "title": "P3356 \u706b\u661f\u63a2\u9669\u95ee\u9898 \u9898\u89e3"
    },
    {
        "content": "# \u8d39\u7528\u6d41\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u5f20 $P \\times Q$ \u7684\u5730\u56fe\uff0c\u5176\u4e0a\u5171\u6709\u4e09\u79cd\u5730\u5f62\uff1a\n\n- $mp[i][j]=0$\uff0c\u8868\u793a\u5730\u56fe\u7684\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u662f\u5e73\u5766\u5730\u5f62\uff0c\u53ef\u4ee5\u968f\u610f\u901a\u8fc7\u3002\n\n- $mp[i][j]=1$\uff0c\u8868\u793a\u5730\u56fe\u7684\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u662f\u969c\u788d\u5730\u5f62\uff0c\u4e0d\u53ef\u901a\u8fc7\u3002\n\n- $mp[i][j]=2$\uff0c\u8868\u793a\u5730\u56fe\u7684\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u662f\u5ca9\u77f3\u6807\u672c\uff0c\u53ef\u4ee5\u968f\u610f\u901a\u8fc7\uff0c\u4f46\u53ea\u80fd\u8bb0\u5f55\u4e00\u6b21\u901a\u8fc7\u8868\u793a\u91c7\u96c6\u3002\n\n\u73b0\u5728\uff0c\u6709 $n$ \u8f86\u63a2\u6d4b\u8f66\uff0c\u5b83\u4eec**\u53ea\u80fd\u5411\u4e1c\u6216\u5411\u5357\u8d70**\uff0c\u4f60\u9700\u8981\u5728\u4fdd\u8bc1\u4ed6\u4eec**\u80fd\u591f\u5230\u8fbe\u7ec8\u70b9**\u7684\u60c5\u51b5\u4e0b\uff0c**\u5c3d\u53ef\u80fd\u83b7\u5f97\u591a\u7684\u5ca9\u77f3\u6807\u672c**\uff08\u6ce8\u610f\uff1a\u82e5\u63a2\u6d4b\u8f66\u6ca1\u6709\u5230\u8fbe\u7ec8\u70b9\uff0c\u5219\u5176\u91c7\u96c6\u5230\u7684\u5ca9\u77f3\u6807\u672c**\u4f5c\u5e9f**\uff09\n\n## \u9898\u76ee\u5206\u6790\n\n\u663e\u7136\uff0c\u6b64\u9898\u53ef\u4ee5\u7528**\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41**\u89e3\u51b3\u3002\n\n### \u8003\u8651\u5982\u4f55\u5efa\u56fe\uff1a\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e3a $2$ \u7684\u8282\u70b9\uff0c\u53ea\u80fd\u88ab\u91c7\u96c6\u4e00\u6b21\uff0c\u6211\u4eec\u5f88\u81ea\u7136\u7684\u60f3\u5230\u4e86\u901a\u8fc7\u62c6\u70b9\u6765\u89e3\u51b3\u3002\u628a\u8282\u70b9 $i$ \u62c6\u6210\u8282\u70b9 $i_1$ \u548c $i_2$ \uff0c\u5b9e\u73b0\u5ca9\u77f3\u6807\u672c\u91c7\u96c6\u4e00\u6b21\u7684\u64cd\u4f5c\u5176\u5b9e\u5c31\u662f\u5728 $i_1$ \u4e0e $i_2$ \u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e5f\u4e3a $1$ \u7684\u8fb9\u3002\u4f46\u5728\u88ab\u91c7\u96c6\u8fc7\u540e\uff0c $2$ \u8282\u70b9\u8fd8\u53ef\u4ee5\u88ab\u7ecf\u8fc7\u65e0\u6570\u6b21\uff0c\u5bf9\u5e94\u7684\u5efa\u8fb9\u662f\u518d\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a\u6b63\u65e0\u7a77\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e3a $1$ \u7684\u8282\u70b9\uff0c\u663e\u7136\u4efb\u4f55\u70b9\u90fd\u4e0d\u4f1a\u5411\u5b83\u8fde\u8fb9\uff0c\u4ed6\u4e5f\u4e0d\u4f1a\u5411\u4efb\u4f55\u70b9\u8fde\u8fb9\u3002\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e3a $0$ \u7684\u8282\u70b9\uff0c\u5176\u5b9e\u7406\u8bba\u4e0a\u6765\u8bf4\u6211\u4eec\u5e94\u8be5\u53ef\u4ee5\u4e0d\u7528\u62c6\u70b9\uff0c\u56e0\u4e3a\u9664 $1$ \u5916\u6bcf\u4e2a\u8282\u70b9\u7684\u70b9\u6743\u90fd\u662f\u6b63\u65e0\u7a77\uff0c\u6ca1\u6709\u5fc5\u8981\u5c06\u70b9\u6743\u8f6c\u5316\u4e3a\u8fb9\u6743\u6765\u9650\u5236\u6d41\u91cf\uff0c\u4f46\u662f\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u8fd8\u662f\u628a\u5176\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u4e2d\u95f4\u7528\u4e00\u6761\u6d41\u91cf\u4e3a\u6b63\u65e0\u7a77\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u5c06\u4ed6\u4eec\u8fde\u63a5\u8d77\u6765\u3002\n\n\u5177\u4f53\u53ef\u53c2\u8003\u4e0b\u9762\u7684\u5efa\u56fe\u4ee3\u7801\uff1a\n\n```cpp\n//\u5efa\u56fe(\u603b\u7ed3\u70b9\u6570\u4f4d2*p*q\uff0c\u6e90\u70b9\u4f4d0,\u6c47\u70b9\u4e3a2*p*q+1)\n//\u5c06\u6240\u6709\u70b9\u5168\u90e8\u62c6\u5f00\n//\u62c6\u5f00\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\uff1a0->0\uff0c\u6d41\u91cfINF\uff0c\u8d39\u75280,1->1\u6d41\u91cf1\uff0c\u8d39\u75281 \nfor(register int i=1;i<=p;i++){\n\tfor(register int j=1;j<=q;j++){\n\t\tif(mp[i][j]==1) continue; //\u4efb\u4f55\u70b9\u90fd\u4e0d\u4e0e\u969c\u788d\u7269\u8fde\u8fb9\n\t\tint u=Get_id(i,j),v; //u\u8868\u793a\u73b0\u5728\u7684\u8282\u70b9\u7f16\u53f7\uff0cv\u8868\u793a\u76ee\u6807\u8282\u70b9\u7f16\u53f7 \n\t\t//\u8bbe\u8282\u70b9i\u7684\u62c6\u70b9\u4e3ai' \n\t\t//\u5411\u5916\u8fde\u8fb9:u'->v\n\t\tfor(register int k=0;k<=1;k++){\n\t\t\tint nx=i+dx[k],ny=j+dy[k];\n\t\t\tif(nx>p||ny>q) continue; //\u4e0d\u8d85\u51fa\u8fb9\u754c\n\t\t\tif(mp[nx][ny]==1) continue; //\u969c\u788d\u7269 \n\t\t\tv=Get_id(nx,ny);\n\t\t\tAdd(u+p*q,v,INF,0),Add(v,u+p*q,0,0);\n\t\t}\n\t\t//\u81ea\u5df1\u8fde\u63a5\u81ea\u5df1:u->u' \n\t\t//\u5bf9\u4e8e\u5ca9\u77f3\u6807\u672c\uff0c\u5efa\u7acb\u4e24\u7ec4\u8fb9\uff0c\u7b2c\u4e00\u7ec4\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u7684\u9650\u6d411\uff0c\u8868\u793a\u4ed6\u53ea\u80fd\u88ab\u91c7\u96c6\u4e00\u6b21\n\t\t//\u7b2c\u4e8c\u7ec4\u8868\u793a\u5ca9\u77f3\u6807\u672c\u53ef\u4ee5\u548c\u666e\u901a\u5730\u9762\u4e00\u6837\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u62b5\u8fbe \n\t\tif(mp[i][j]==2) Add(u,u+p*q,1,1),Add(u+p*q,u,0,-1); //\u5f53\u524d\u8282\u70b9\u4e3a\u5ca9\u77f3\u6807\u672c \n\t\t\t//\u521d\u5f00\u969c\u788d\u7269\u5916\u4efb\u4f55\u70b9\u53ef\u4ee5\u4efb\u610f\u5230\u8fbe \n\t\tAdd(u,u+p*q,INF,0),Add(u+p*q,u,0,0);\n\t}\n}\n```\n### \u5982\u4f55\u6253\u5370\u8def\u5f84\n\n\u5bf9\u4e8e\u8def\u5f84\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece $(1,1)$ \u5904\u5728\u6b8b\u6b21\u56fe\u4e0a\u8dd1\u4e00\u8fb9 $DFS$ \uff0c\u627e\u5230\u90a3\u4e9b**\u88ab\u6d41\u7ecf\u7684\u8fb9**\uff0c\u5c06\u5176\u6253\u5370\u4e0b\u6765\u5373\u53ef\n\n\u53c2\u8003\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\ninline void DFS(int x,int y,int u,int k)\n{\n\tint kx,ky,mov;\n\tfor(register int i=first[u];i!=-1;i=nex[i]){\n\t\tint to=v[i];\n\t\tif(to==s||to==t||to==u-p*q||!w[i^1]) continue;\n\t\tw[i^1]--; //\u7ecf\u8fc7\u7684\u6b21\u6570--\uff0c\u77e5\u9053\u4e3a0\uff0c\u8bf4\u660e\u8be5\u8fb9\u4e0a\u7ecf\u8fc7\u7684\u63a2\u6d4b\u8f66\u90fd\u5df2\u7ecf\u88ab\u8003\u8651\u5b8c\u4e86\n\t\tif(to>p*q) { DFS(x,y,to,k); return; } //\u5982\u679c\u5230\u8fbei'\u5373\u8fde\u63a5\u5176\u4ed6\u70b9\u7684\u62c6\u70b9 \n\t\tif(to==Get_id(x,y)+1) kx=x,ky=y+1,mov=1; //\u5224\u65ad\u8d70\u5411\u4e86\u54ea\u4e00\u4e2a\u70b9 \n\t\telse kx=x+1,ky=y,mov=0;\n\t\tprintf(\"%d %d\\n\",k,mov);\n\t\tDFS(kx,ky,to+p*q,k); //\u9012\u5f52 \n\t\treturn;\n\t}\n}\n```\n### \u6ce8\u610f\n\n\u672c\u9898\u7684 $p$ \u548c $q$ \u7684**\u8f93\u5165\u987a\u5e8f**\uff0c\u5148\u8f93\u5165\u7684\u5217\uff0c\u518d\u8f93\u5165\u7684\u884c\uff0c~~\u6211\u8c03\u4e86\u4e00\u5e74\u624d\u53d1\u73b0\uff0c\u7b80\u76f4\u670d\u4e86\u3002~~\n\n## CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e2,INF=0x3f3f3f3f;\nconst int dx[2]={0,1},dy[2]={1,0};\nint n,p,q;\nint s,t,ans,maxf;\nint mp[N][N];\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*w;\n}\nint tot=-1,v[N*N*N],w[N*N*N],pay[N*N*N],nex[N*N*N],first[2*N*N];\ninline void Add(int x,int y,int z,int c)\n{\n\tnex[++tot]=first[x];\n\tfirst[x]=tot;\n\tv[tot]=y,w[tot]=z,pay[tot]=c;\n}\ninline int Get_id(int x,int y) { return (x-1)*q+y; }\nbool vis[2*N*N];\n//Min[i]\u8868\u793a\u5230\u8fbe\u70b9i\u7ecf\u8fc7\u7684\u8fb9\u6d41\u91cf\u6700\u5c0f\u7684\u4e00\u4e2a \nint dis[2*N*N],pre[2*N*N],Min[2*N*N];\ninline bool SPFA()\n{\n\tfor(register int i=s;i<=t;i++) vis[i]=false;\n\tfor(register int i=s;i<=t;i++) dis[i]=-INF;\n\tqueue<int> q; q.push(s);\n\tvis[s]=true,dis[s]=0,Min[s]=INF;\n\twhile(!q.empty()){\n\t\tint now=q.front(); q.pop();\n\t\tvis[now]=false;\n\t\tfor(register int i=first[now];i!=-1;i=nex[i]){\n\t\t\tint to=v[i];\n\t\t\tif(!w[i]) continue; //\u6ca1\u6709\u6d41\u91cf \n\t\t\tif(dis[to]<dis[now]+pay[i]){ //\u6700\u957f\u8def\u66f4\u65b0 \n\t\t\t\tdis[to]=dis[now]+pay[i];\n\t\t\t\tMin[to]=min(Min[now],w[i]);\n\t\t\t\tpre[to]=i;\n\t\t\t\tif(!vis[to]) q.push(to),vis[to]=true;\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t]!=-INF;\n}\ninline void EK()\n{\n\twhile(SPFA()){\n\t\tmaxf+=Min[t];\n\t\tint temp=t,i;\n\t\twhile(temp!=s){\n\t\t\ti=pre[temp];\n\t\t\tw[i]-=Min[t]; \n\t\t\tw[i^1]+=Min[t];\n\t\t\ttemp=v[i^1];\n\t\t}\n\t}\n}\ninline void DFS(int x,int y,int u,int k)\n{\n\tint kx,ky,mov;\n\tfor(register int i=first[u];i!=-1;i=nex[i]){\n\t\tint to=v[i];\n\t\tif(to==s||to==t||to==u-p*q||!w[i^1]) continue;\n\t\tw[i^1]--;\n\t\tif(to>p*q) { DFS(x,y,to,k); return; } //\u5982\u679c\u5230\u8fbei'\u5373\u8fde\u63a5\u5176\u4ed6\u70b9\u7684\u62c6\u70b9 \n\t\tif(to==Get_id(x,y)+1) kx=x,ky=y+1,mov=1; //\u5224\u65ad\u8d70\u5411\u4e86\u54ea\u4e00\u4e2a\u70b9 \n\t\telse kx=x+1,ky=y,mov=0;\n\t\tprintf(\"%d %d\\n\",k,mov);\n\t\tDFS(kx,ky,to+p*q,k); //\u9012\u5f52 \n\t\treturn;\n\t}\n}\nint main()\n{\n\tmemset(first,-1,sizeof(first));\n\tn=read(),q=read(),p=read();\n\tfor(register int i=1;i<=p;i++)\n\t\tfor(register int j=1;j<=q;j++)  mp[i][j]=read();\n\ts=0,t=2*p*q+1;\n\t//\u5efa\u56fe(\u603b\u7ed3\u70b9\u6570\u4f4d2*p*q\uff0c\u6e90\u70b9\u4f4d0,\u6c47\u70b9\u4e3a2*p*q+1)\n\t//\u5c06\u6240\u6709\u70b9\u5168\u90e8\u62c6\u5f00\n\t//\u62c6\u5f00\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\uff1a0->0\uff0c\u6d41\u91cfINF\uff0c\u8d39\u75280,1->1\u6d41\u91cf1\uff0c\u8d39\u75281 \n\tfor(register int i=1;i<=p;i++){\n\t\tfor(register int j=1;j<=q;j++){\n\t\t\tif(mp[i][j]==1) continue; //\u4efb\u4f55\u70b9\u90fd\u4e0d\u4e0e\u969c\u788d\u7269\u8fde\u8fb9\n\t\t\tint u=Get_id(i,j),v; //u\u8868\u793a\u73b0\u5728\u7684\u8282\u70b9\u7f16\u53f7\uff0cv\u8868\u793a\u76ee\u6807\u8282\u70b9\u7f16\u53f7 \n\t\t\t//\u8bbe\u8282\u70b9i\u7684\u62c6\u70b9\u4e3ai' \n\t\t\t//\u5411\u5916\u8fde\u8fb9:u'->v\n\t\t\tfor(register int k=0;k<=1;k++){\n\t\t\t\tint nx=i+dx[k],ny=j+dy[k];\n\t\t\t\tif(nx>p||ny>q) continue; //\u4e0d\u8d85\u51fa\u8fb9\u754c\n\t\t\t\tif(mp[nx][ny]==1) continue; //\u969c\u788d\u7269 \n\t\t\t\tv=Get_id(nx,ny);\n\t\t\t\tAdd(u+p*q,v,INF,0),Add(v,u+p*q,0,0);\n\t\t\t}\n\t\t\t//\u81ea\u5df1\u8fde\u63a5\u81ea\u5df1:u->u' \n\t\t\t//\u5bf9\u4e8e\u5ca9\u77f3\u6807\u672c\uff0c\u5efa\u7acb\u4e24\u7ec4\u8fb9\uff0c\u7b2c\u4e00\u7ec4\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u7684\u9650\u6d411\uff0c\u8868\u793a\u4ed6\u53ea\u80fd\u88ab\u91c7\u96c6\u4e00\u6b21\n\t\t\t//\u7b2c\u4e8c\u7ec4\u8868\u793a\u5ca9\u77f3\u6807\u672c\u53ef\u4ee5\u548c\u666e\u901a\u5730\u9762\u4e00\u6837\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u62b5\u8fbe \n\t\t\tif(mp[i][j]==2) Add(u,u+p*q,1,1),Add(u+p*q,u,0,-1); //\u5f53\u524d\u8282\u70b9\u4e3a\u5ca9\u77f3\u6807\u672c \n\t\t\t//\u521d\u5f00\u969c\u788d\u7269\u5916\u4efb\u4f55\u70b9\u53ef\u4ee5\u4efb\u610f\u5230\u8fbe \n\t\t\tAdd(u,u+p*q,INF,0),Add(u+p*q,u,0,0);\n\t\t}\n\t}\n\tif(mp[1][1]!=1) Add(s,1,n,0),Add(1,s,0,0);\n\tif(mp[p][q]!=1) Add(Get_id(p,q)+p*q,t,n,0),Add(t,Get_id(p,q)+p*q,0,0);\n\tEK();\n\tfor(register int i=1;i<=maxf;i++) DFS(1,1,1,i);\n\treturn 0;\n}\n```\n",
        "postTime": 1612926574,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3356 \u3010\u706b\u661f\u63a2\u9669\u95ee\u9898 \u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u3010\u7f51\u7edc\u6d4124\u9898\u3011\u4e2d\u7684\u4e00\u9053\uff1b\n\n\u7136\u800c\u6211\u4e00\u770b\u8fd9\u4e2a\u9898\u5c31\u53bb\u60f3 DP \u4e86\uff1b\n\n\u6240\u4ee5\u5462\uff0c\u6211\u5199\u4e00\u4e2a DP \u7684\u9898\u89e3\uff1b\n\n\u9996\u5148\uff0c\u7531\u4e8e\u6bcf\u4e2a\u8f66\u53ef\u4ee5\u8d70\u4e0b\u548c\u53f3\u4e24\u4e2a\u65b9\u5411\uff1b\n\n\u800c\u4e14\u6bcf\u4e2a\u683c\u5b50\u53ef\u4ee5\u88ab\u4efb\u610f\u591a\u7684\u8f66\u8d70\uff1b\n\n\u552f\u4e00\u7684\u9650\u5236\u662f\u6709\u969c\u788d\u7684\u7684\u5730\u65b9\u4e0d\u80fd\u8d70\uff1b\n\n\u8fd9\u662f\u8def\u5f84\u7684\u9650\u5236\uff1b\n\n\u8fd8\u6709\u77f3\u5934\u53ea\u80fd\u53d6\u4e00\u6b21\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u505a\u4e00\u4e2aDP\uff1b\n\n\u6765\u6c42\u4e00\u6761\u7531 (1,1) \u5230 (n,m) \u7684\u8def\u5f84\uff1b\n\n\u4f7f\u5f97\u8fd9\u4e2a\u8def\u5f84\u4e0a\u7684\u77f3\u5934\u6700\u591a\uff1b\n\n\u8fd9\u5c31\u662f\u4e2a\u88f8\u7684 DP \u4e86\uff1b\n\n\u53ea\u9700\u8981\u8bb0\u5f55\u5f53\u524d\u70b9\u662f\u4ece\u54ea\u4e2a\u70b9\u8f6c\u79fb\u8fc7\u6765\u7684\uff1b\n\n\u6700\u540e dfs \u8f93\u51fa\u5c31\u597d\u4e86\uff1b\n\n~~DP \u7ed3\u675f\uff0c\u7136\u800c\u4e0d\u4f1a\u8fd9\u9053\u9898\u7684\u7f51\u7edc\u6d41\u3002\u3002\u3002\u3002~~\n\n\n-------------------------------\n\n\n```cpp\n#include \"iostream\"\n#include \"stdio.h\"\n#include \"algorithm\"\n#include \"queue\"\n#define II int\n#define R register\n#define IL inline\n#define I 50\nusing namespace std;\n\n\nII inq[I][I], dis[I][I], from[I][I], nu[I][I];\n\nII bx[2]={1,0}, by[2]={0,1};\n\nII who,n,m,all;\n\nqueue <II> Qx,Qy;\n\n\nIL void bfs()\n{\n    for(R II i=1;i<=n;i++)\n    {\n        for(R II j=1;j<=m;j++)\n        {\n            dis[i][j]=-1e9;\n            from[i][j]=-1;\n        }\n    }\n\n    dis[n][m]=nu[n][m];\n    for(R II x=n;x;x--)\n    {\n        for(R II y=m;y;y--)\n        {\n            if(nu[x][y]==-1) continue ;\n            for(R II i=1;i>=0;i--)\n            {\n                R II xx=x+bx[i], yy=y+by[i];\n                if(xx && yy && xx<=n && yy<=m && dis[x][y]<=dis[xx][yy]+nu[x][y] && nu[xx][yy]!=-1) {\n                    dis[x][y]=dis[xx][yy]+nu[x][y];\n                    from[x][y]=i;\n                }\n            }\n        }\n    }\n}\n\n\nIL void dfs(R II x,R II y)\n{\n//    cout<<x<<\" \"<<y<<endl;\n    nu[x][y]=0;\n    R II o=from[x][y];\n    if(x==n && y==m) return ;\n    printf(\"%d %d\\n\",who,o);\n    dfs(x+bx[o],y+by[o]);\n}\n\n\nint main()\n{\n    scanf(\"%d\",&all);\n    scanf(\"%d%d\",&n,&m);  swap(n,m);\n    for(R II i=1;i<=n;i++)\n    {\n        for(R II j=1;j<=m;j++)\n        {\n            R II x;\n            scanf(\"%d\",&x);\n            if(x==1) x=-1;\n            nu[i][j]=x;\n        }\n    }\n    \n    for(who=1;who<=all;who++) \n    {\n        bfs();\n        dfs(1,1);\n    }\n    \n    exit(0);\n}\n```",
        "postTime": 1516183612,
        "uid": 36716,
        "name": "wuzhoupei",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3356 \u3010\u706b\u661f\u63a2\u9669\u95ee\u9898 \u3011"
    },
    {
        "content": "### \u4e00\u3001\u9898\u610f\u7b80\u8ff0\n\n\u6709\u4e00\u4e2a $p\\times q$ \u7684\u5730\u56fe\uff0c\u6709 $n$ \u4e2a\u673a\u5668\u4eba\uff0c\u6bcf\u4e2a\u673a\u5668\u4eba\u8981\u4ece\u5de6\u4e0a\u89d2\u7684 $(1,1)$ \u5230\u8fbe\u53f3\u4e0b\u89d2\u7684 $(p,q)$\u3002\n\n#### 1. \u5bf9\u4e8e\u673a\u5668\u4eba\u7684\u9650\u5236\uff1a\n\n1. \u4e00\u5171 $n$ \u4e2a\u673a\u5668\u4eba\u3002\n\n2. \u673a\u5668\u4eba\u53ea\u80fd\u5f80\u4e0b\u8d70\u6216\u8005\u5f80\u53f3\u8d70\u3002\n\n#### 2. \u5bf9\u4e8e\u683c\u5b50\u7684\u9650\u5236\uff1a\n\n1. \u6bcf\u4e2a\u6807\u7740 $1$ \u7684\u683c\u5b50\u4e0d\u80fd\u8d70\u3002\n\n2. \u6bcf\u4e2a\u6807\u7740 $2$ \u7684\u683c\u5b50\u53ea\u80fd\u5bf9\u7b54\u6848\u9020\u6210 $1$ \u7684\u8d21\u732e\u3002\n\n3. \u6bcf\u4e2a\u683c\u5b50\u53ef\u4ee5\u88ab\u591a\u4e2a\u673a\u5668\u4eba\u8d70\u8fc7\u3002\n\n\u6c42\u7b54\u6848\u6700\u5927\u65f6\uff0c$n$ \u4e2a\u673a\u5668\u4eba\u7684\u53ef\u80fd\u8def\u7ebf\u3002\n\n### \u4e8c\u3001\u5206\u6790\n\n#### 1. \u5efa\u6a21\n\n\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u7f51\u7edc\u6d41\u7684\u9898\u76ee\u3002\u8003\u8651\u4f7f\u7528\u8d39\u7528\u6d41\u6c42\u89e3\u3002\u7531\u4e8e\u7b54\u6848\u8981\u6700\u5927\uff0c\u6240\u4ee5\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002\u7531\u4e8e\u9898\u76ee\u7684\u9650\u5236\u8ddf\u673a\u5668\u4eba\u8d70\u7684\u6b21\u6570\u6709\u5173\uff0c\u6240\u4ee5\u5c06\u673a\u5668\u4eba\u7ecf\u8fc7\u7684\u6b21\u6570\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u673a\u5668\u4eba\u8d70\u4e0d\u4e86\u56de\u5934\u8def\uff0c\u6240\u4ee5\u4e5f\u5c31\u662f\u7ecf\u8fc7\u7684\u673a\u5668\u4eba\u7684\u4e2a\u6570\uff0c\u4f5c\u4e3a\u6d41\u91cf\u3002\n\n\u7136\u540e\u4f9d\u636e\u9898\u76ee\u9650\u5236\u5efa\u56fe\u3002\u9996\u5148\uff0c\u5bf9\u4e8e\u683c\u5b50\u7684\u9650\u5236\uff0c\u6bcf\u4e2a\u6807\u7740 $2$ \u7684\u683c\u5b50\uff0c\u65e0\u8bba\u88ab\u7ecf\u8fc7\u591a\u5c11\u6b21\uff0c\u90fd\u53ea\u80fd\u5bf9\u7b54\u6848\u9020\u6210 $1$ \u7684\u8d21\u732e\uff0c\u4f46\u662f\u6240\u6709\u4e0d\u662f\u969c\u788d\u7684\u683c\u5b50\u90fd\u53ef\u4ee5\u88ab\u673a\u5668\u4eba\u8d70\u8fc7\u591a\u6b21\u3002\n\n\u9898\u76ee\u5bf9\u4e8e\u6bcf\u4e2a\u683c\u5b50\u9020\u6210\u8d21\u732e\u7684\u6b21\u6570\u6709\u9650\u5236\uff0c\u4f46\u662f\u7f51\u7edc\u6d41\u4e2d\u6ca1\u6709\u201c\u70b9\u6743\u201d\u7684\u6982\u5ff5\u3002\u4e8e\u662f\u8003\u8651\u62c6\u70b9\uff0c\u5c06\u6bcf\u4e2a\u70b9\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\u3002\n\n\u9996\u5148\u6bcf\u4e2a\u4e0d\u662f\u969c\u788d\u7684\u683c\u5b50\u90fd\u53ef\u4ee5\u8d70\u65e0\u9650\u6b21\uff0c\u4f46\u662f\u8d70\u7684\u65f6\u5019\u4e0d\u4f1a\u9020\u6210\u8d21\u732e\u3002\u4e8e\u662f\u5c06\u5bf9\u5e94\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $\\infty$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\u7531\u4e8e\u6807\u4e86 $2$ \u7684\u683c\u5b50\u4e5f\u53ef\u4ee5\u8d70\u65e0\u9650\u6b21\uff0c\u6240\u4ee5\u4e5f\u8981\u8fde\u3002\n\n\u7136\u540e\u6211\u4eec\u770b\u5230\u6807\u4e86 $2$ \u7684\u683c\u5b50\u53ef\u4ee5\u9020\u6210 $1$ \u6b21 $1$ \u7684\u8d21\u732e\uff0c\u6240\u4ee5\u518d\u4ece\u5bf9\u5e94\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u969c\u788d\u683c\u5b50\u7531\u4e8e\u4e0d\u80fd\u8d70\uff0c\u5bf9\u5e94\u7684\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u4e0d\u8fde\u8fb9\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5bf9\u4e8e\u673a\u5668\u4eba\u7684\u79fb\u52a8\u6765\u8fde\u8fb9\u4e86\u3002\u56e0\u4e3a\u673a\u5668\u4eba\u53ef\u4ee5\u5411\u4e0b\u548c\u5411\u53f3\u79fb\u52a8\uff0c\u4e0d\u9020\u6210\u8d21\u732e\uff0c\u6240\u4ee5\u6bcf\u4e2a\u683c\u5b50\u7684\u51fa\u70b9\u5411\u53f3\u8fb9\u548c\u4e0b\u9762\u683c\u5b50\u7684\u5165\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $\\infty$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u6700\u540e\u5c31\u662f\u5bf9\u4e8e\u673a\u5668\u4eba\u6570\u91cf\u7684\u9650\u5236\u3002\u7531\u4e8e\u53ea\u6709 $n$ \u4e2a\u673a\u5668\u4eba\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u624b\u52a8\u5c06\u6700\u5927\u6d41\u9650\u5236\u6210 $n$\u3002\u4e8e\u662f\u5efa\u7acb\u4e00\u4e2a\u8d77\u70b9\uff0c\u8ba9\u5b83\u5411 $(1,1)$ \u7684\u5165\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $n$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\u7136\u540e\u6240\u6709\u6d41\u7684\u7ec8\u70b9\u5c31\u662f $(p,q)$ \u7684\u51fa\u70b9\u3002\n\n#### 2. \u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\n\n##### SSP\n\n\u7528 spfa \u8dd1\u82e5\u5e72\u6b21\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff0c\u76f4\u5230\u6ca1\u6709\u6b8b\u4f59\u6d41\u91cf\u3002\u7531\u4e8e\u6700\u5927\u6d41\u4e3a $n$\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\times p^2\\times q^2)$\u3002\n\n##### Primal Dual\n\n\u4f7f\u7528 Primal Dual \u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(p^2\\times q^2+n\\times p\\times q\\log(p\\times q))$\uff0c\u6bd4\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\times p^2\\times q^2)$ \u7684 SSP \u7b97\u6cd5\u5feb\u3002\n\n\u7531\u4e8e\u6709\u53cd\u5411\u8fb9\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u8dd1 dijkatra\u3002\u4f46\u662f\u6ce8\u610f\u5230\u8981\u8dd1\u5f88\u591a\u904d\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u7c7b\u4f3c Jhonson \u5168\u6e90\u6700\u77ed\u8def\u7684\u65b9\u6cd5\u4f18\u5316\uff0c\u6c42\u51fa\u52bf\u540e\u6743\u975e\u8d1f\u4e14\u6700\u77ed\u8def\u4e0d\u53d8\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u662f\u5148\u8dd1\u4e00\u904d spfa\uff0c\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u7684\u52bf\uff0c\u7136\u540e\u518d\u8dd1\u591a\u6b21 dijkstra \u6c42\u51fa\u6700\u957f\u8def\u3002\u6bcf\u8dd1\u4e00\u6b21\u66f4\u65b0\u6bcf\u6761\u8fb9\u7684\u6b8b\u4f59\u6d41\u91cf\u3002\n\n#### 3. \u8f93\u51fa\n\n\u6211\u4eec\u53d1\u73b0\u673a\u5668\u4eba\u9009\u62e9\u4e86\u4e00\u6761\u8def\u7684\u8868\u73b0\u5c31\u662f\u5b83\u7684\u6d41\u91cf\u51cf\u5c11\uff0c\u5b83\u7684\u53cd\u5411\u8fb9\u6d41\u91cf\u589e\u52a0\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c dfs\uff0c\u6bcf\u4e00\u6b21\u904d\u5386\u5230\u4e00\u6761\u8fb9\u5c31\u5224\u65ad\u5b83\u7684\u6d41\u91cf\u662f\u4e0d\u662f\u5c11\u4e86\uff0c\u5982\u679c\u5c11\u4e86\u5c31\u5c06\u5176\u52a0\u4e00\uff0c\u7136\u540e\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u3002\n\n\u6ce8\u610f\u4e00\u6761\u8fb9\u53ef\u80fd\u672a\u5fc5\u5728\u539f\u56fe\u91cc\uff0c\u6240\u4ee5\u8981\u5c06\u65b0\u52a0\u7684\u6240\u6709\u8fb9\u7684\u65b9\u5411\u6807\u4e3a $2$\uff0c\u539f\u6709\u7684\u8fb9\u6309\u7167\u65b9\u5411\u6807\u4e3a $0$ \u548c $1$\uff0c\u5728 dfs \u65f6\u8f93\u51fa\u5373\u53ef\u3002\n\n### \u4e09\u3001\u4ee3\u7801\n\n#### 1.SSP\n\n\u6700\u6162\u7684\u70b9 4ms\uff0c\u4e00\u5171 20ms\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int _=20010,inf=1e5;\nint C=1,nxt[_],h[_],t[_],v[_],d[_],c[_],st,ed,id=0,Q;\nint in[_],p[_],V[_],di[_],n,P,f[_];\ninline void add(int x,int y,int z,int w,int D){\n\tnxt[++C]=h[x];h[x]=C;t[C]=y;v[C]=V[C]=z;c[C]=w;di[C]=D;\n\tnxt[++C]=h[y];h[y]=C;t[C]=x;v[C]=V[C]=0;c[C]=-w;\n}\ninline bool spfa(){\n\tfor(int i=0;i<=ed;i++)d[i]=-inf,f[i]=inf,in[i]=0;\n\tqueue<int>q;q.push(st);d[st]=0;in[st]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();in[x]=0;\n\t\tfor(int i=h[x];i;i=nxt[i])\n\t\t\tif(v[i]&&d[t[i]]<d[x]+c[i]){\n\t\t\t\td[t[i]]=d[x]+c[i];p[t[i]]=i;f[t[i]]=min(f[x],v[i]);\n\t\t\t\tif(!in[t[i]])in[t[i]]=1,q.push(t[i]);\n\t\t\t}\n\t}\n\treturn d[ed]!=-inf;\n}\nvoid dfs(int k,int x){\n\tif(x==ed)return;\n\tfor(int i=h[x];i;i=nxt[i])\n\t\tif(v[i]<V[i]){\n\t\t\tv[i]++;\n\t\t\tif(di[i]<2)printf(\"%d %d\\n\",k,di[i]);\n\t\t\tdfs(k,t[i]);\n\t\t\treturn;\n\t\t}\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>Q>>P;st=0;ed=P*Q*2;\n\tadd(0,1,n,0,2);\n\tfor(int i=1,x;i<=P;i++)\n\t\tfor(int j=1;j<=Q;j++){\n\t\t\tcin>>x;id++;\n\t\t\tif(x!=1)add(id,id+P*Q,inf,0,2);\n\t\t\tif(x==2)add(id,id+P*Q,1,1,2);\n\t\t\tif(i<P)add(id+P*Q,id+Q,inf,0,0);\n\t\t\tif(j<Q)add(id+P*Q,id+1,inf,0,1);\n\t\t}\n\twhile(spfa())\n\t\tfor(int x=ed;x!=st;x=t[p[x]^1])v[p[x]]-=f[ed],v[p[x]^1]+=f[ed];\n\tfor(int i=1;i<=n;i++)dfs(i,1);\n\treturn 0;\n}\n```\n\n#### 2.Primal Dual\n\n\u6700\u6162\u7684\u70b9 4ms\uff0c\u4e00\u5171 19ms\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int _=10010,inf=1e5;\nint C=1,nxt[_],h[_],t[_],v[_],d[_],c[_],st,ed,id=0,Q;\nint e[_],in[_],p[_],V[_],di[_],n,P;\ninline void add(int x,int y,int z,int w,int D){\n\tnxt[++C]=h[x];h[x]=C;t[C]=y;v[C]=V[C]=z;c[C]=w;di[C]=D;\n\tnxt[++C]=h[y];h[y]=C;t[C]=x;v[C]=V[C]=0;c[C]=-w;\n}\ninline bool dij(){\n\tpriority_queue<pair<int,int> >q;\n\tfor(int i=0;i<=ed;i++)d[i]=-inf,in[i]=0;\n\tq.push({d[st]=0,st});\n\twhile(!q.empty()){\n\t\tint x=q.top().second;q.pop();\n\t\tif(in[x])continue;in[x]=1;\n\t\tfor(int i=h[x],j;i;i=nxt[i])\n\t\t\tif(v[i]&&d[t[i]]<d[x]+(j=c[i]+e[x]-e[t[i]])){\n\t\t\t\tp[t[i]]=i;\n\t\t\t\tq.push({d[t[i]]=d[x]+j,t[i]});\n\t\t\t} \n\t}\n\treturn d[ed]!=-inf;\n}\nvoid dfs(int k,int x){\n\tif(x==ed)return;\n\tfor(int i=h[x];i;i=nxt[i])\n\t\tif(v[i]<V[i]){\n\t\t\tv[i]++;\n\t\t\tif(di[i]<2)printf(\"%d %d\\n\",k,di[i]);\n\t\t\tdfs(k,t[i]);\n\t\t\treturn;\n\t\t}\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>Q>>P;st=0;ed=P*Q*2;\n\tadd(0,1,n,0,2);\n\tfor(int i=1,x;i<=P;i++)\n\t\tfor(int j=1;j<=Q;j++){\n\t\t\tcin>>x;id++;\n\t\t\tif(x!=1)add(id,id+P*Q,inf,0,2);\n\t\t\tif(x==2)add(id,id+P*Q,1,1,2);\n\t\t\tif(i<P)add(id+P*Q,id+Q,inf,0,0);\n\t\t\tif(j<Q)add(id+P*Q,id+1,inf,0,1);\n\t\t}\n\tfor(int i=0;i<=ed;i++)e[i]=-inf;\n\tqueue<int>q;q.push(st);e[st]=0;in[st]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();in[x]=0;\n\t\tfor(int i=h[x];i;i=nxt[i])\n\t\t\tif(v[i]&&e[t[i]]<e[x]+c[i]){\n\t\t\t\te[t[i]]=e[x]+c[i];\n\t\t\t\tif(!in[t[i]])in[t[i]]=1,q.push(t[i]);\n\t\t\t}\n\t}\n\twhile(dij()){\n\t\tint fl=inf;\n\t\tfor(int i=0;i<=ed;i++)e[i]+=d[i];\n\t\tfor(int x=ed;x!=st;x=t[p[x]^1])fl=min(fl,v[p[x]]);\n\t\tfor(int x=ed;x!=st;x=t[p[x]^1])v[p[x]]-=fl,v[p[x]^1]+=fl;\n\t}\n\tfor(int i=1;i<=n;i++)dfs(i,1);\n\treturn 0;\n}\n```\n\n### \u56db\u3001\u82b1\u7d6e\n\n\u6211\u4eb2\u6d4b\u8fd9\u9898\u6709\u65f6\u4e0d\u7528\u8fde\u53cd\u5411\u8fb9\u4e5f\u53ef\u4ee5\u8fc7\u2026\u2026\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\n\n[AC \u8bb0\u5f55](https://www.luogu.com.cn/record/109788202)",
        "postTime": 1683444476,
        "uid": 891963,
        "name": "0xyz",
        "ccfLevel": 0,
        "title": "P3356 \u706b\u661f\u63a2\u9669\u95ee\u9898 \u9898\u89e3"
    },
    {
        "content": "###  \u6211\u7684\u8def\u5f84\u8f93\u51fa\u600e\u4e48\u8ddf\u6837\u4f8b\u8f93\u51fa\u4e0d\u4e00\u6837\uff1f\uff1f\uff1f\uff1f    \n## \u6ca1\u5173\u7cfb\uff0c\u8def\u5f84\u4e0d\u6b62\u4e00\u6761    \n\u5e38\u89c1\u7684\u7f51\u7edc\u6d41\u8f93\u51fa\u65b9\u6848\u6a21\u677f\uff1a    \n\n\n\n```cpp\nfor(int i=1;i<=n;i++){\n    for(int j=head[i];j;j=edge[j].next){\n        if(!c)      \n            //\u8f93\u51fa\u65b9\u6848\n    }\n}\n```\n\u62c6\u70b9\u5efa\u8fb9\u540e\uff0c\u5bf9\u4e8e\u4e00\u8fb9\u7684\u8fb9\u6d41\u91cf\u4e3ainf\uff0c\u800c\u6211\u4eec\u8981\u7684\u662f\u53ef\u4ee5\u8d70\u5230\u77f3\u5934\u7684\u8fb9\uff0c\u6ca1\u5173\u7cfb\uff0c\u8fd9\u6837\u505a\u5c31\u884c\u4e86   \n```cpp\nfor(int i=1;i<=n;i++){\n    for(int j=head[i];j;j=edge[j].next){\n        if(edge[i^1].c)\n            //\u8f93\u51fa\u65b9\u6848\n    }\n}\n```    \n\u53cd\u5411\u8fb9\u6709\u6d41\u91cf\uff0c\u56fe\u4e2d\u4e00\u5b9a\u8d70\u8fc7\u8be5\u6761\u8def   \n\u7136\u540edfs\u8f93\u51fa\u5373\u53ef   \n\u5bf9\u4e8e\u5176\u4ed6\u7684\u5b9e\u73b0\u6280\u5de7\uff0c\u89c1\u5176\u4ed6\u9898\u89e3\u5373\u53ef   \n\u672c\u9898\u89e3\u4e3b\u8981\u8bb2\u8bb2\u8def\u5f84\u7684\u5b9e\u73b0\u65b9\u6cd5   \n\u4e0a\u4ee3\u7801   \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define N 40\n#define inf 0x3f3f3f3f\nusing namespace std;\nint head[N*N*2],tot=1,d[N*N*2],pre[N*N*2],flow[N*N*2],ans,k,s,t,n,m,a[N][N];\nbool vis[N*N*2]; \nstruct Edge{\n\tint v,next,val,c;\n}edge[N*N*2*4];\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();\n\t}while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();\n\t}return  x*f;\n}\ninline int num(int x,int y,int z){return ((x-1)*m+y)*2+z;}\ninline void add(int x,int y,int z,int k){\n\tedge[++tot].v=y;edge[tot].val=k;edge[tot].c=z;edge[tot].next=head[x];head[x]=tot;\n\tedge[++tot].v=x;edge[tot].val=-k;edge[tot].c=0;edge[tot].next=head[y];head[y]=tot;\n}\nbool spfa(){\n\tqueue<int>q;q.push(s);memset(vis,0,sizeof(vis));memset(d,0xcf,sizeof(d));d[s]=0;flow[s]=inf;\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].v,c=edge[i].c,z=edge[i].val;\n\t\t\tif(!c)continue;\n\t\t\tif(d[v]<d[u]+z){\n\t\t\t\td[v]=d[u]+z;\n\t\t\t\tpre[v]=i;\n\t\t\t\tflow[v]=min(flow[u],c);\n\t\t\t\tif(!vis[v])vis[v]=1,q.push(v);\n\t\t\t}\n\t\t}\n\t}return d[t]!=0xcfcfcfcf;\n}\nvoid update(){\n\tint x=t;\n\twhile(x!=s){\n\t\tint i=pre[x];\n\t\tedge[i].c-=flow[t];edge[i^1].c+=flow[t];x=edge[i^1].v;\n\t}\n\tans+=d[t]*flow[t];\n}\nvoid dfs(int val,int x){\n\tif(x==num(n,m,2))return ;\n\tfor(int i=head[x];i;i=edge[i].next){\n\t\tint v=edge[i].v,c=edge[i].c;\n\t\tif(edge[i^1].c&&v>x){   //\u8d70\u8fc7\u8be5\u6761\u8fb9 \n\t\t\tedge[i^1].c++;\n\t\t\tprintf(\"%d %d\\n\",val,v-x==1);\n\t\t\treturn dfs(val,v+1); \n\t\t}\n\t}\n}\nint main(){\n\tk=read();\n\tm=read();n=read();s=0;t=n*m*2+5;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\ta[i][j]=read();\n\t\t\tif(a[i][j]==1)continue;\n\t\t\tif(a[i][j]==2)add(num(i,j,1),num(i,j,2),1,1),a[i][j]=0;\n\t\t\tadd(num(i,j,1),num(i,j,2),inf,0);\n\t\t\tif(i>1)add(num(i-1,j,2),num(i,j,1),inf,0);\n\t\t\tif(j>1)add(num(i,j-1,2),num(i,j,1),inf,0); \n\t\t}\n\tadd(s,num(1,1,1),k,0);add(num(n,m,2),t,k,0);\n\twhile(spfa())update();\n\tfor(int i=1;i<=k;i++){\n\t\tdfs(i,num(1,1,2));\n\t}\n}\n```\n\n\n",
        "postTime": 1558762459,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3356 \u3010\u706b\u661f\u63a2\u9669\u95ee\u9898 \u3011"
    }
]