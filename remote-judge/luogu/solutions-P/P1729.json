[
    {
        "content": "\u524d\u8bb0\uff1a\u8fd9\u9053\u9898\u53ef\u80fd\u662f\u5168Luogu\u552f\u4e00\u7684\u4e00\u9053\u53c8\u6709\u9ad8\u7cbe\u5ea6\u53c8\u6709$\\mathrm{e}$\u7684\u9898\u76ee\uff0c\u6211\u5c31\u7528\u8fd9\u9053\u9898\u6765\u7ec3\u624b\u4e86(\n\n\u8fd9\u9053\u9898\u7684\u666e\u904d\u505a\u6cd5\uff08\u4e5f\u662f\u8f83\u4e3a\u5e38\u89c1\u7684\u6b63\u89e3\uff09\u662f\u901a\u8fc7\u63d0\u524d\u6253\u8868\u5b58\u5165\u7a0b\u5e8f\u91cc\uff0c\u518d\u6839\u636e\u8f93\u5165\u7684\u53c2\u6570\u505a\u683c\u5f0f\u5316\u8f93\u51fa\u3002\u8fd9\u9898\u4e5f\u4e0d\u662f\u4ec0\u4e48\u8003\u573a\u4e0a\u7684\u9898\uff0c\u56e0\u6b64\u8fd9\u4e48\u505a\u5176\u5b9e\u76f8\u5f53\u7684\u9760\u8c31\u3002\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u5f0f\u5c31\u662f\u5728Wolfram Mathematica\u91cc\u9762\u8f93\u5165N[$\\mathrm{e}$,10001]\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u7acb\u5373\u5f97\u5230\u4e00\u4efd\u5c0f\u6570\u4f4d10000\u4f4d\u7684$\\mathrm{e}$\uff0c\u4ee3\u5165\u7a0b\u5e8f\u5373\u53ef\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u8fd9\u91cc\u8bb2\u8ff0\u4e24\u79cd\u975e\u6253\u8868\u7684\u9ad8\u7cbe\u5ea6\u89e3\u6cd5\u3002\n\n\u7531\u9898\u76ee\u7528\u610f\uff0c\u81ea\u7136\u5bf9\u6570\u7684\u5e95\u6570$\\mathrm{e}$\u7684\u5176\u4e2d\u4e00\u79cd\u5b9a\u4e49\u4e3a:\n$$\\mathrm{e}=\\sum\\limits_{n=0}^{\\infty}\\frac{1}{n!}$$\n\u90a3\u4e48\u6211\u4eec\u7684\u4e24\u79cd\u505a\u6cd5\u5c31\u56f4\u7ed5\u7740\u8fd9\u4e2a\u5f0f\u5b50\u5c55\u5f00\u3002\n\n### \u505a\u6cd5\u4e00\n#### \u901a\u5206+\u9ad8\u7cbe\u5ea6\u9664\u6cd5\n\u524d\u7f6e\u6280\u80fd\uff1a\u7b80\u5355\u7684\u5fae\u79ef\u5206\uff08\u6cf0\u52d2\u5c55\u5f00\u6216\u5404\u79cd\u4e2d\u503c\u5b9a\u7406\uff09\u6216\u521d\u9ad8\u4e2d\u9636\u6bb5\u7b80\u5355\u7684\u4e0d\u7b49\u5f0f\u77e5\u8bc6\uff1b[P5432 \u9ad8\u7cbe\u5ea6\u9664\u6cd5](https://www.luogu.com.cn/problem/P5432)\u3002\n\n\u89c2\u5bdf\u5b9a\u4e49\u7ed9\u51fa\u7684\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u5bb9\u6613\u53d1\u73b0$n$\u4e0d\u4e00\u5b9a\u975e\u5f97\u7b97\u5230\u65e0\u7a77\u5927\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u524d\u9762\u7684\u82e5\u5e72\u4f4d\u5c31\u53ef\u4ee5\u5f97\u5230$\\mathrm{e}$\u7684\u8fd1\u4f3c\u503c\u3002\u90a3\u4e48\u6211\u4eec\u8981\u53d6\u591a\u5c11\u4f4d\u5462\uff1f\u9ad8\u6570/\u6570\u5206\u91cc\u9762\uff0c\u5173\u4e8eTaylor\u5c55\u5f00\u7684\u524d\u82e5\u5e72\u9879\u7684\u8bef\u5dee\uff0c\u6709\u4e00\u4e2aLagrange\u4f59\u9879\u7684\u4f30\u8ba1\uff1a\n$$ \\mathrm{e}_ {N}= \\sum\\limits_{k=0}^{N}\\frac{1}{k!}\\qquad R_N=\\mathrm{e}-\\mathrm e_N=\\frac{e^\\theta}{(N+1)!}$$\n\u5176\u4e2d$\\theta\\in(0,1)$\u3002\u5373\u4fbf\u4f60\u5e76\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u62c9\u683c\u6717\u65e5\u4f59\u9879\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0d\u7b49\u5f0f\u7684\u65b9\u5f0f\u5206\u6790\u8bef\u5dee\uff1a\u8003\u8651\u4f59\u9879\u4e2d\u7684\u6bcf\u4e00\u9879$\\frac{1}{(k+1)!}$\u7684\u5206\u6bcd\uff0c\u6211\u4eec\u53ea\u53d6\u524dN\u4e2a\u6570\u548c\u6700\u540e\u7684\u4e24\u4e2a\u6570\uff0c\u90a3\u4e48\u5206\u5f0f\u5c06\u5c0f\u4e8e$\\frac{1}{N!k(k+1)}=\\frac{1}{N!}(\\frac{1}{k}-\\frac{1}{k+1})$\uff0c\u56e0\u6b64\u4f59\u9879\u6709\uff1a\n$$R_N=\\sum\\limits_{k=N+1}^{\\infty}\\frac{1}{k!}<\\frac{1}{N!}(\\frac{1}{N+1}+\\sum\\limits_{k=N+1}^{\\infty}(\\frac{1}{k}-\\frac{1}{k+1}))<\\frac{1}{N!}$$\n\n\u5047\u5b9a\u672c\u9898\u8981\u6c42\u8f93\u51fa\u7684**\u76f8\u5bf9\u8bef\u5dee**$\\delta<10^{-k}$\uff08\u672c\u9898\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c\uff0c\u5f88\u5bb9\u6613\u628a\u7edd\u5bf9\u8bef\u5dee\u53d8\u6210\u76f8\u5bf9\u8bef\u5dee\uff09\uff0c\u90a3\u4e48\u6709\n$$\\boxed{\\delta_N=\\frac{R_N}{\\mathrm{e}}<\\frac{1}{N!}<10^{-k}=\\delta}$$\n\u5728\u672c\u9898\u4e2d\u6709$k\\leq10000$\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f97\u5230$N\\leq3249$\u3002\u8003\u8651\u5230\u4e00\u4e9b\u8bef\u5dee\u56e0\u7d20\uff0c\u53ef\u4ee5\u9002\u5f53\u7684\u5c06$N$\u653e\u5927\u4e00\u4e0b\u4ee5\u5f97\u5230\u7cbe\u5ea6\u66f4\u9ad8\u7684\u7ed3\u679c\u3002\n\n\u90a3\u4e48\uff0c\u5c31\u6309\u7167\u8fd9\u4e00\u7ed3\u679c\u8ba1\u7b97\u5c31\u5b8c\u4e8b\u4e86\u5417\uff1f\u9274\u4e8e\u9ad8\u7cbe\u5ea6\u5c0f\u6570\u7684\u5e38\u6570\uff0c\u53ef\u80fd\u5bf9\u6bd4\u8f83\u5927\u7684\u6570\u636e\u4f1a\u6709\u4e9b\u56f0\u96be\u3002\u8003\u8651\u5230\u672c\u9898\u4e2d\u9700\u8981\u7cbe\u5ea6\u4f4d\u6570\u4e3a$k$\uff0c\u7167\u516c\u5f0f\u8ba1\u7b97\u4e2d\u7684\u6bcf\u4e00\u4f4d\u90fd\u5e94\u8be5\u81f3\u5c11\u4e5f\u8981\u6709$k$\u4f4d\u3002\u7531Stirling\u516c\u5f0f\u6211\u4eec\u53ef\u4ee5\u5927\u6982\u7684\u4f30\u8ba1$N$\u4e0e$k$\u6709\u5173\u7cfb$k\\sim N\\log N$\uff0c\u800c\u9010\u9879\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u5b9a\u70b9\u6570\u4e0e\u5355\u7cbe\u5ea6\u6574\u6570\u7684\u9664\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\mathcal{O}(k)$\uff08\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u5e38\u6570\u53ea\u4f1a\u66f4\u5927\uff09\uff0c\u5219\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\mathcal{O}(kN)=\\mathcal{O}(\\frac{k^2}{\\log N})$\uff0c\u5bf9\u4e8e$k\\sim 10000$\u90e8\u5206\u800c\u8a00\u53ef\u80fd\u4f1a\u6bd4\u8f83\u5371\u9669\uff0c\u6709TLE\u7684\u53ef\u80fd\u3002\n\n\u600e\u4e48\u6837\u4f18\u5316\u6389\u8fd9\u4e2a$\\mathcal{O}(nk)$\u7684\u7d2f\u52a0\u548c\uff1f\u5176\u5b9e\u524d\u9762\u7684Qingyu\u5927\u4f6c\u6709\u8bb2\u8fc7\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684\u8fd9\u4e9b\u5206\u5f0f\u901a\u5206\uff0c\u53d8\u6210\uff1a\n$$\\mathrm{e}_ {N}= \\sum\\limits_{k=0}^{N}\\frac{1}{k!}=\\frac{1}{N!}\\sum\\limits_{k=0}^{N}A_N^k=\\frac{1}{N!}\\sum\\limits_{k=0}^{N}\\prod\\limits_{t=N-k+1}^{N}t$$\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u522b\u8ba1\u7b97\u5206\u5b50\u548c\u5206\u6bcd\uff0c\u518d\u901a\u8fc7\u9ad8\u7cbe\u5ea6\u9664\u6cd5\u5f97\u5230\u6700\u540e\u7684\u7ed3\u679c\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u4ec5\u6709\u6700\u540e\u7684\u9ad8\u7cbe\u5ea6\u9664\u6cd5\u662f\u7a0d\u6709\u8bef\u5dee\u7684\u3002\u524d\u9762\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u6574\u6570\u52a0\u6cd5\u548c\u4e0e\u5355\u7cbe\u5ea6\u7684\u4e58\u6cd5\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u81f4\u4e0e\u524d\u9762\u7684\u4ee5\u4e00\u81f4\uff0c\u4e3a\u8f83\u5c0f\u5e38\u6570\u7684$\\mathcal{O}(\\frac{k^2}{\\log N})$\uff1b\u540e\u9762\u5982\u679c\u91c7\u53d6\u9ad8\u7cbe\u5ea6\u9664\u6cd5\u800c\u975e\u6a21\u62df\u8bd5\u9664\u6cd5\uff0c\u5219\u53ef\u4ee5\u4f18\u5316\u5230$\\mathcal{O}(k\\log k)$\u3002\u7ecf\u5b9e\u9a8c\u8be5\u65b9\u6cd5\u672c\u9898\u53ef\u8fc7\u3002\n\n\u672c\u65b9\u6cd5\u90e8\u5206\u4ee3\u7801\uff1a\n```cpp\nint main()\t{\n\tint k;\n\tcin>>k;\n\ttbb::_LFloat_prec= (k/4)+2; //\u4e07\u8fdb\u4f4d\u9ad8\u7cbe\n\tLInt S= 1, P= 1, T= 1;\n\tint N;\n\tfor(N=1; T.digit()<=tbb::_LFloat_prec*4; )\tT*= (++N); //\u5148\u4f30\u8ba1\u5206\u6bcd\u9636\u4e58\u7684\u4f4d\u6570\n\tfor(int i=N; i>0; i--)\t{\n\t\tP*= i;\tS+= P;\n\t}\n\tLFloat F=S;\tF/=T; //\u505a\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u9664\u6cd5\n\tstring ans= F.print_str();\n\tconst char* out= ans.c_str();\n\tputchar('2');\tputchar('.');\tputchar('\\n');\n\tfor(int T=1; T<=k; ++T)\t{\n\t\tputchar(out[1+T]);\n\t\tif(T%50==0)\tputchar('\\n');\n\t\telse\tif(T%10==0)\tputchar(' ');\n\t}\n\treturn 0;\n}\n```\n\n### \u505a\u6cd5\u4e8c\n#### \u5b9e\u73b0\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684exp\u51fd\u6570\n\u524d\u7f6e\u6280\u80fd\uff1a\u6bd4\u8f83\u719f\u7ec3\u7684\u5fae\u79ef\u5206\uff1b\u300a\u7406\u6027\u6109\u60a6\uff1a\u9ad8\u7cbe\u5ea6\u6570\u503c\u8ba1\u7b97\u300b\uff1b\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u52a0\u51cf\u4e58\u6cd5\uff0c[\u9ad8\u7cbe\u5ea6\u5c0f\u6570\u7684\u6b63\u6574\u6570\u5e42](https://www.luogu.com.cn/problem/P1517)\u3002\uff08\u4e0d\u9700\u8981\u77e5\u9053\u9ad8\u7cbe\u5ea6\u9664\u6cd5\u771f\u9ad8\u5174\uff09\n\n\u65e2\u7136\u672c\u9898\u662fLuogu\u7f55\u89c1\u7684\u9ad8\u7cbe\u5ea6\u53c8\u5e26$\\mathrm{e}$\uff0c\u90a3\u81ea\u7136\u5c31\u4e0d\u4f1a\u653e\u8fc7\u8fd9\u4e2a\u673a\u4f1a\u6d4b\u8bd5\u51fd\u6570$\\exp$\u5566\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5b9e\u73b0$\\exp(x)=\\mathrm{e}^x$\uff0c\u518d\u8fdb\u884c\u8ba1\u7b97$\\exp(1)$\u5373\u53ef\u3002\u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u5c06\u7740\u624b\u5206\u6790\u5e76\u5b9e\u73b0$\\exp$\u3002\n\n\u6839\u636e\u6cf0\u52d2\u5c55\u5f00\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u51fd\u6570$\\mathrm{e}^x$\u5c55\u5f00\u6210\u5e42\u7ea7\u6570\u5f62\u5f0f\uff0c\u5e76\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u4f59\u9879\uff0c\u6211\u4eec\u6709\uff1a\n$$ \\mathrm{e}^x=\\sum\\limits_{k=0}^{\\infty}\\frac{x^k}{k!}= \\sum\\limits_{k=0}^{N}\\frac{x^k}{k!}+R_N(x)\\quad |R_N(x)|=\\frac{\\mathrm{e}^{\\theta x}x^{N+1}}{(N+1)!}\\leq\\frac{\\mathrm{e}^x}{(N+1)!}$$\n\u5176\u4e2d$\\theta\\in(0,1)$\u3002\u7531\u6b64\u5f97\u77e5\u5982\u6b64\u5c55\u5f00\u4ee5\u540e\u7684\u76f8\u5bf9\u8bef\u5dee\u4e5f\u4e0d\u4f1a\u8d85\u8fc7$\\frac{1}{N!}$\u3002\n\n\u540c\u4e0a\u9762\u4e00\u6837\uff0c\u867d\u7136\u770b\u8d77\u6765\u672c\u9898\u53ef\u4ee5\u8ba1\u7b97\u4e86\uff0c\u7136\u800c\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\uff0c\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u4e58\u6cd5\u6b21\u6570\u81f3\u5c11\u662f$\\mathcal{O}(N)$\u7684\uff0c\u800c\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\mathcal{O}(k\\log k)$\u7684\uff0c\u653e\u4e00\u8d77\u4f30\u8ba1\u4e00\u4e0b\u4e5f\u6709$\\mathcal{O}(k^2\\log k)$\uff0c\u90a3\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002\u867d\u7136\u9488\u5bf9\u672c\u9898\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\u5982\u4f55\u4f18\u5316\u6389\u8fd9\u90e8\u5206\u4e58\u6cd5\uff0c\u4f46\u603b\u7684\u6765\u8bf4\u8fd8\u662f\u8981\u5c3d\u53ef\u80fd\u7684\u964d\u4f4e\u8fd9\u90e8\u5206\u4e58\u6cd5\u7684\u6b21\u6570\u3002\n\n\u867d\u7136\u4e0e\u672c\u9898\u65e0\u5173\uff0c\u4f46\u662f\u8fd9\u91cc\u8fd8\u662f\u7b80\u5355\u7684\u63d0\u4e00\u53e5\uff1a\u5bf9\u4e8e\u6574\u4e2a\u5b9e\u6570\u8303\u56f4\u5185\u7684$\\exp$\u6c42\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u89c4\u7ea6\u5230$[0,1]$\u7684\u8303\u56f4\u5185\u3002\u5bf9\u4e8e$x<0$\u7684\uff0c\u6709$\\mathrm{e}^{x}=1/\\mathrm{e}^{-x}$\u53ef\u4ee5\u5316\u4e3a$x>0$\u7684\u6c42\u503c\uff1b\u5bf9\u4e8e$x>1$\u7684\uff0c\u7531\u5e38\u89c1\u7684\u6d6e\u70b9\u6570\u5b58\u50a8\u683c\u5f0f\uff0c\u53ef\u4ee5\u8ba4\u4e3a$x=x_0\\times 10^E$\uff08\u5176\u4e2d$x_0\\in (0,1)$\u5e76\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u6574\u6570\u6765\u5b58\u50a8\uff09(P.S. \u8fd9\u5f88\u50cf\u4f46\u5e76\u4e0d\u662f\u79d1\u5b66\u8bb0\u6570\u6cd5\uff0c\u79d1\u5b66\u8ba1\u6570\u6cd5\u53ef\u4ee5\u89c4\u7ea6\u5230\u8fd9\u79cd\u5f62\u5f0f)\uff0c\u90a3\u4e48\u6709$\\exp(x)=\\exp(x_0)^{10^E}$\uff0c\u53ef\u4ee5\u5316\u4e3a$(0,1)$\u8303\u56f4\u5185\u7684\u6c42\u503c\u518d\u505a\u4e2a\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u6b63\u6574\u6570\u6b21\u5e42\u5f97\u5230\u3002\n\n\u53c2\u7167PPT\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7684\u5c06$x$\u7684\u8303\u56f4\u4ece$(0,1]$\u653e\u7f29\u5230$(0,10^{\\lfloor-\\sqrt{k}\\rfloor})$\uff0c\u7136\u540e\u4eff\u7167\u4e0a\u9762\u8ba8\u8bba$x>1$\u7684\u90e8\u5206\u90a3\u6837\u63d0\u51fa$10^{\\sqrt{x}}$\u653e\u5230$\\exp$\u7684\u5916\u9762\u518d\u505a\u5feb\u901f\u5e42\u3002\u5bf9\u4e8e$x\\in(0,10^{\\lfloor-\\sqrt{k}\\rfloor})$\uff0c\u6709\uff1a\n$$\\boxed{|R_n(x)|=\\frac{\\mathrm{e}^{\\theta x}x^{n+1}}{(n+1)!}\\leq\n\\mathrm{e}^x10^{-(n+1)\\lfloor\\sqrt{k}\\rfloor}\\quad\\delta=\\frac{R_n(x)}{\\mathrm{e}^x}<10^{-(n+1)\\lfloor\\sqrt{k}\\rfloor}}$$\n\u5219\u53ea\u9700\u8981\u53d6$n=\\mathcal{O}(\\sqrt{k})$\uff0c\u65e0\u8bba\u662f$\\exp$\u7684\u91cc\u9762\u8fd8\u662f\u5916\u9762\u90fd\u53ea\u9700\u8981$\\mathcal{O}(\\sqrt{k})$\u6b21\u957f\u5ea6\u4e3a$k$\u7684\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\uff0c\u56e0\u6b64\u672c\u65b9\u6cd5\u7684\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\mathcal{O}(k^{1.5}\\log k)$\u3002\n\n\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u7406\u8bba\u4e0a\u6ee1\u8db3\u4e86\uff0c\u7136\u800c\u5b9e\u8df5\u64cd\u4f5c\u4e2d\uff0c\u5982\u679c\u662f\u4e07\u8fdb\u538b\u4f4d\u7684\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u5bf9\u4e8e$k=10000$\u7684\u70b9\uff0c\u9700\u8981\u505a\u5927\u6982500\u6b21\u7684\u957f\u5ea6\u4e3a4096~8192\u4f4d\u7684\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\uff0c\u8fd9\u90e8\u5206\u5bf9\u5e38\u6570\u7684\u8981\u6c42\u5f88\u5927\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u4e00\u4e9b\u6bd4\u8f83\u901a\u7528\u7684\u529e\u6cd5\u6765\u8fdb\u884c\u4f18\u5316\u3002\u6bd4\u5982\u6bd4\u8f83\u7684\u7ecf\u5178\u7684\u5305\u62ec\u9884\u5904\u7406\u5faa\u73af\u5377\u79ef\u7684\u5355\u4f4d\u6839\uff1b\u53c8\u6216\u8005\u662f\u5bf9\u4e3a\u5faa\u73af\u5377\u79ef\u5f04\u4e2a\u7f13\u5b58\u5e76\u9002\u5f53\u8c03\u6574\u4e58\u6cd5\u7684\u4f4d\u7f6e\uff0c\u4ee5\u4fdd\u8bc1\u4e0d\u603b\u662f\u91cd\u590d\u5bf9\u540c\u4e00\u4e2a\u6570\u7ec4\u505aDFT\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u8c03\u6574$n=\\alpha\\sqrt{k}$\u4e2d\u7684\u5e38\u6570$\\alpha$\uff0c\u5e73\u8861\u653e\u7f29\u524d\u4e0e\u653e\u7f29\u540e\u7684\u4e58\u6cd5\u6b21\u6570\u3002\u7ecf\u8fc7\u8fd9\u4e9b\u4f18\u5316\u4ee5\u540e\uff0c\u6211\u9488\u5bf9\u672c\u9898\u53ef\u4ee5\u505a\u5230\u5e73\u57471.2s\u4e00\u4e2a\u70b9\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u6709\u66f4\u5feb\u7684\u5e38\u6570\u3002\n\n\u7136\u800c\uff0c\u9488\u5bf9\u672c\u9898\uff0c\u6709\u4e00\u79cd\u66f4\u597d\u7684\u4f18\u5316\u65b9\u6cd5\u3002\u5982\u679c\u4f60\u91c7\u7528\u7684\u662f\u5f62\u5982$x=x_0\\times 10^E$\u8fd9\u6837\u7684\u6807\u51c6\u7684\u5b58\u50a8\u6cd5\uff0c\u4f60\u4f1a\u53d1\u73b0\u65e0\u8bba\u662f\u653e\u7f29\u524d\u8fd8\u662f\u653e\u7f29\u540e\uff0c$x$\u4e2d\u7684\u6709\u6548\u6570\u4f4d\u5176\u5b9e\u90fd\u53ea\u6709\u4e00\u4f4d\u3002\u539f\u56e0\u662f\u4e0d\u8a00\u81ea\u660e\u7684\u3002\u56e0\u6b64\u5728\u7d2f\u52a0\u7d2f\u4e58\u7684\u65f6\u5019\uff0c\u53ea\u8981\u5728\u8fdb\u884c\u4e58\u6cd5\u65f6\u5148\u5224\u65ad\u4e24\u8fb9\u7684\u6709\u6548\u6570\u4f4d\uff0c\u5176\u4e2d\u7684\u4e00\u8fb9\u5927\u6982\u5c0f\u4e8e\u53e6\u4e00\u8fb9\u7684\u5bf9\u6570\u7684\u7ea7\u522b\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u6734\u7d20\u7684\u6309\u4f4d\u6570\u4e58\u6cd5\u7d2f\u4e58\u800c\u4e0d\u7528\u7ecf\u8fc7\u5faa\u73af\u5377\u79ef\u3002\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u81f3\u5c11\u4e00\u534a\u7684\u5faa\u73af\u5377\u79ef\u6b21\u6570\uff0c\u5927\u5927\u7684\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002\n\n\u90e8\u5206\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nLFloat pow_pow10(const LFloat & x, int m)   {\n    LFloat S= x, S_2, S_3;\n    for(int i=0; i<m; ++i)  {\n        S= S.pow2();\n        S_2= S*S;   S_3= S_2* S; S= S_2* S_3;\n    }\n    return S;\n}// return x^(10^m)\nLFloat exp(const LFloat& x)   {\n    if(x.isNaN())   return x;\n    if(x.isinf() && x.positive())   return x;\n    if(x.isinf() && x.negative())   return 0;\n    if(x==0)    return 1;\n    if(x<0)     return 1/exp(-x);\n    if(x > (double(_LFloat_prec)+INT_MAX)*std::log(10000))   return LInt(\"inf\");\n    if(x < (double(INT_MIN))*std::log(10000))    return 0;\n\n    int precision= _LFloat_prec * 4;\n    if(x>1) {\n        _LFloat_prec= (precision + 4 * (x.pow+x.base.d) )/4 + 1;\n         LFloat res= pow_pow10( exp(LFloat(x.base, -x.base.d)), 4 * (x.pow+x.base.d) );\n         _LFloat_prec= precision / 4;\n         return res;\n     }\n     int bound= int(std::sqrt(precision)/2.3);\n     LFloat B= pow10<LFloat>(-bound);\n     if(x>B) {\n          int delta_pow= 4*x.pow + x.base.digit() + bound;\n          _LFloat_prec= (precision + delta_pow)/4 + 1;\n          LFloat x_= mul_pow10(x, -delta_pow);\n          LFloat res= pow_pow10(exp(x_), delta_pow);\n          _LFloat_prec= precision / 4;\n          return res;\n      }\n\n      _LFloat_prec= (precision + Log_2(precision))/4 + 1;\n      int N= precision / bound +1;\n      LFloat S= 1;\n      for(int i=N; i>0; --i)  S= S/i*x + 1;\n      _LFloat_prec= precision/4;\n      S.sho();\n      return S;\n}\n              \nint main()\t{\n\tint k;\n\tcin>>k;\n\ttbb::_LFloat_prec= (k/4)+2;\n\tLFloat F= exp(LFloat(1));\n\tstring ans= F.print_str();\n\tconst char* out= ans.c_str();\n\tputchar('2');\tputchar('.');\tputchar('\\n');\n\tfor(int T=1; T<=k; ++T)\t{\n\t\tputchar(out[1+T]);\n\t\tif(T%50==0)\tputchar('\\n');\n\t\telse\tif(T%10==0)\tputchar(' ');\n\t}\n\treturn 0;\n}\n```\n\n#### \u5176\u5b83\u4ee3\u7801\u6ce8\u91ca\nLInt\u8868\u793a\u9ad8\u7cbe\u5ea6\u6574\u6570\uff1bLFloat\u8868\u793a\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u7531\u4e00\u4e2aLInt\u7684base\u548c\u4e00\u4e2aint\u7684pow\u7ec4\u6210\uff0c\u5176\u8868\u793a\u7684\u6570\u4e3a$\\mathrm{base}\\times10000^{\\mathrm{pow}}$\u3002",
        "postTime": 1592071094,
        "uid": 29077,
        "name": "TBB_Nozomi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1729 \u3010\u8ba1\u7b97e\u3011"
    },
    {
        "content": "\u5728\u505a\u5b8c [P1727 \u8ba1\u7b97\u03c0](https://www.luogu.com.cn/problem/P1727)\u540e\uff0c\u70b9\u5f00\u63a8\u8350\u680f\uff0c\u7b2c\u4e00\u4e2a\u6620\u5165\u773c\u5e18\u7684\u81ea\u7136\u662f\u8fd9\u9053\u8ba1\u7b97e\u4e86\uff1b\u65e2\u7136\u662f\u7ec3\u4e60Python\uff0c\u4e0d\u5982\u4e5f\u505a\u4e00\u505a\uff0c\u953b\u70bc\u4e00\u4e0b\u7801\u529b(\u96fe)\n\n\u6070\u5de7\u9898\u9762\u53c8\u7ed9\u51fa$e=\\sum_{n=0}^{\\infty} \\frac{1}{n!}$\uff0c\u5f53\u7136\u662f\u76f4\u63a5\u66b4\u529b\u6d41\u8d70\u8d77\uff0c\u5199\u4e86\u4ee5\u4e0b\u8fd9\u4e2a\u7a0b\u5e8f\n\n```python\nimport math\n\nn=int(input())\n\nans=10**(n+10)\n\nfor i in range (1,2500): #\u8fd9\u4e2a2500\u5c31\u662f\u968f\u4fbf\u9009\u7684\u800c\u5df2hhh\n    ans+=((10**(n+10))//math.factorial(i))\n\nans//=(10**10)\n\ns=\"2.\\n\"\n\ncnt=0\n\nfor i in range (n-1,-1,-1):\n    cnt+=1\n    s+=str((ans//(10**i))%10) ##\u8fd9\u4e2a\u64cd\u4f5c\u5bf910^10000\u7684\u6570\u505a\u4e0a10000\u6b21\uff0cPython\u8dd1\u4e0d\u52a8\u554a\u2026\u2026\n    if(cnt%10==0):\n        s+=\" \"\n    if(cnt%50==0):\n        s+=\"\\n\"\n        cnt=0\n\nprint (s)\n```\n\n\u663e\u7136\uff0cPython\u81ea\u5e26\u7684\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\u5e76\u6ca1\u6709\u5085\u91cc\u53f6\u4f18\u5316(\u5927\u5618)\uff0c\u6240\u4ee510000\u7684\u70b9\u5728\u4e00\u79d2\u5185\u662f\u8dd1\u4e0d\u51fa\u6765\u7684\uff0c\u5149\u8363[70 TLE](https://www.luogu.com.cn/record/33468516)\n\n\u53c8\u6539\u4e86\u51e0\u4e2a\u53d8\u91cf\u4e00\u7c7b\u7684\uff0c\u53cd\u800c\u8d8a\u6539\u8d8a\u4f4e\u5206\uff0c\u672c\u4eba\u53c8\u662f\u6570\u5b66\u5b66\u6e23\uff0c\u5c31\u53ea\u80fd\u65e0\u5948\u6253\u8868\u4e86(\u644a\u624b)\n\n\u4e0a\u9762\u6240\u5199\u7684\u7a0b\u5e8f\uff0c\u53ea\u9700\u5c06\u7b2c\u4e00\u4e2a\u5faa\u73af\u91cc\u76842500\u6539\u621010000\uff0c\u4e0d\u52a0\u683c\u5f0f\u7684\u8f93\u51fa\uff0c\u5c31\u53ef\u4ee5\u6253\u51fa$n=10000$\u7684\u8868\u6765\uff0c~~\u5c31\u662f\u6162\u5f97\u53ef\u4ee5\u53bb\u559d\u4e00\u676f\u8336(\u5f25\u5929\u5927\u96fe)~~\uff1b\u5c06\u6253\u8868\u7684\u503c\u8d4b\u7ed9ans\uff0c\u5c31\u5199\u51fa\u4e86\u4ee5\u4e0b\u7a0b\u5e8f\uff1a\n\n```python\nn=int(input())\n\ncnt=0\n\nansn\ns=\"2.\\n\"\n\nfor i in range (10000-1,10000-n-1,-1):\n    cnt+=1\n    s+=str((ans//(10**i))%10) #\u53d6\u4f4d\u64cd\u4f5c\n    if (cnt % 10 == 0):\n        s += \" \"\n    if (cnt % 50 == 0):\n        s += \"\\n\"\n        cnt = 0\n\nprint (s)\n```\n\u7136\u800c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5bf9\u6700\u5927\u53ef\u8fbe$10^{10000}$\u7684\u6570\u5b57\u8fdb\u884c\u5927\u91cf\u53d6\u4f4d\u64cd\u4f5c\u662f\u4e0d\u660e\u667a\u7684\uff0c\u8fd9\u4e00\u756a\u64cd\u4f5c\u540e\uff0c\u4e0d\u4ec5\u4ecd\u7136TLE\uff0c\u8fd8\u53ea\u62ff\u5230\u4e8650\u5206\u2026\u2026\n\n\u75db\u5b9a\u601d\u75db\uff0c\u77e5\u9053\u5bf9\u5927\u6574\u6570\u505a\u5927\u91cf\u8fd0\u7b97\u5b9e\u5728\u4e0d\u53ef\u53d6\uff0c\u4e8e\u662f\u5c06\u6253\u8868\u51fa\u6765\u7684\u7b54\u6848\u5b58\u5230\u5b57\u7b26\u4e32\u91cc\uff0c\u76f4\u63a5\u8f93\u51fa\uff0c\u4e0d\u4ec5\u65b9\u4fbf\uff0c\u8fd8\u5341\u5206\u7684\u5feb\uff0c\u7ec8\u4e8e\u80fd\u62b1\u56deAC\u5566\uff01\n\n\u4ee5\u4e0b\u653e\u4ee3\u7801\uff1a\n\n```python\nn=int(input())\n\ncnt=0\n\nans=\"7182818284590452353602874713526624977572470936999595749669676277240766303535475945713821785251664274274663919320030599218174135966290435729003342952605956307381323286279434907632338298807531952510190115738341879307021540891499348841675092447614606680822648001684774118537423454424371075390777449920695517027618386062613313845830007520449338265602976067371132007093287091274437470472306969772093101416928368190255151086574637721112523897844250569536967707854499699679468644549059879316368892300987931277361782154249992295763514822082698951936680331825288693984964651058209392398294887933203625094431173012381970684161403970198376793206832823764648042953118023287825098194558153017567173613320698112509961818815930416903515988885193458072738667385894228792284998920868058257492796104841984443634632449684875602336248270419786232090021609902353043699418491463140934317381436405462531520961836908887070167683964243781405927145635490613031072085103837505101157477041718986106873969655212671546889570350354021234078498193343210681701210056278802351930332247450158539047304199577770935036604169973297250886876966403555707162268447162560798826517871341951246652010305921236677194325278675398558944896970964097545918569563802363701621120477427228364896134225164450781824423529486363721417402388934412479635743702637552944483379980161254922785092577825620926226483262779333865664816277251640191059004916449982893150566047258027786318641551956532442586982946959308019152987211725563475463964479101459040905862984967912874068705048958586717479854667757573205681288459205413340539220001137863009455606881667400169842055804033637953764520304024322566135278369511778838638744396625322498506549958862342818997077332761717839280349465014345588970719425863987727547109629537415211151368350627526023264847287039207643100595841166120545297030236472549296669381151373227536450988890313602057248176585118063036442812314965507047510254465011727211555194866850800368532281831521960037356252794495158284188294787610852639813955990067376482922443752871846245780361929819713991475644882626039033814418232625150974827987779964373089970388867782271383605772978824125611907176639465070633045279546618550966661856647097113444740160704626215680717481877844371436988218559670959102596862002353718588748569652200050311734392073211390803293634479727355955277349071783793421637012050054513263835440001863239914907054797780566978533580489669062951194324730995876552368128590413832411607226029983305353708761389396391779574540161372236187893652605381558415871869255386061647798340254351284396129460352913325942794904337299085731580290958631382683291477116396337092400316894586360606458459251269946557248391865642097526850823075442545993769170419777800853627309417101634349076964237222943523661255725088147792231519747780605696725380171807763603462459278778465850656050780844211529697521890874019660906651803516501792504619501366585436632712549639908549144200014574760819302212066024330096412704894390397177195180699086998606636583232278709376502260149291011517177635944602023249300280401867723910288097866605651183260043688508817157238669842242201024950551881694803221002515426494639812873677658927688163598312477886520141174110913601164995076629077943646005851941998560162647907615321038727557126992518275687989302761761146162549356495903798045838182323368612016243736569846703785853305275833337939907521660692380533698879565137285593883499894707416181550125397064648171946708348197214488898790676503795903669672494992545279033729636162658976039498576741397359441023744329709355477982629614591442936451428617158587339746791897571211956187385783644758448423555581050025611492391518893099463428413936080383091662818811503715284967059741625628236092168075150177725387402564253470879089137291722828611515915683725241630772254406337875931059826760944203261924285317018781772960235413060672136046000389661093647095141417185777014180606443636815464440053316087783143174440811949422975599314011888683314832802706553833004693290115744147563139997221703804617092894579096271662260740718749975359212756084414737823303270330168237193648002173285734935947564334129943024850235732214597843282641421684878721673367010615094243456984401873312810107945127223737886126058165668053714396127888732527373890392890506865324138062796025930387727697783792868409325365880733988457218746021005311483351323850047827169376218004904795597959290591655470505777514308175112698985188408718564026035305583737832422924185625644255022672155980274012617971928047139600689163828665277009752767069777036439260224372841840883251848770472638440379530166905465937461619323840363893131364327137688841026811219891275223056256756254701725086349765367288605966752740868627407912856576996313789753034660616669804218267724560530660773899624218340859882071864682623215080288286359746839654358856685503773131296587975810501214916207656769950659715344763470320853215603674828608378656803073062657633469774295634643716709397193060876963495328846833613038829431040800296873869117066666146800015121143442256023874474325250769387077775193299942137277211258843608715834835626961661980572526612206797540621062080649882918454395301529982092503005498257043390553570168653120526495614857249257386206917403695213533732531666345466588597286659451136441370331393672118569553952108458407244323835586063106806964924851232632699514603596037297253198368423363904632136710116192821711150282801604488058802382031981493096369596735832742024988245684941273860566491352526706046234450549227581151709314921879592718001940968866986837037302200475314338181092708030017205935530520700706072233999463990571311587099635777359027196285061146514837526209565346713290025994397663114545902685898979115837093419370441155121920117164880566945938131183843765620627846310490346293950029458341164824114969758326011800731699437393506966295712410273239138741754923071862454543222039552735295240245903805744502892246886285336542213815722131163288112052146489805180092024719391710555390113943316681515828843687606961102505171007392762385553386272553538830960671644662370922646809671254061869502143176211668140097595281493907222601112681153108387317617323235263605838173151034595736538223534992935822836851007810884634349983518404451704270189381994243410090575376257767571118090088164183319201962623416288166521374717325477727783488774366518828752156685719506371936565390389449366421764003121527870222366463635755503565576948886549500270853923617105502131147413744106134445544192101336172996285694899193369184729478580729156088510396781959429833186480756083679551496636448965592948187851784038773326247051945050419847742014183947731202815886845707290544057510601285258056594703046836344592652552137008068752009593453607316226118728173928074623094685367823106097921599360019946237993434210687813497346959246469752506246958616909178573976595199392993995567542714654910456860702099012606818704984178079173924071945996323060254707901774527513186809982284730860766536866855516467702911336827563107223346726113705490795365834538637196235856312618387156774118738527722922594743373785695538456246801013905727871016512966636764451872465653730402443684140814488732957847348490003019477888020460324660842875351848364959195082888323206522128104190448047247949291342284951970022601310430062410717971502793433263407995960531446053230488528972917659876016667811937932372453857209607582277178483361613582612896226118129455927462767137794487586753657544861407611931125958512655759734573015333642630767985443385761715333462325270572005303988289499034259566232975782488735029259166825894456894655992658454762694528780516501720674785417887982276806536650641910973434528878338621726156269582654478205672987756426325321594294418039943217000090542650763095588465895171709147607437136893319469090981904501290307099566226620303182649365733698419555776963787624918852865686607600566025605445711337286840205574416030837052312242587223438854123179481388550075689381124935386318635287083799845692619981794523364087429591180747453419551420351726184200845509170845682368200897739455842679214273477560879644279202708312150156406341341617166448069815483764491573900121217041547872591998943825364950514771379399147205219529079396137621107238494290616357604596231253506068537651423115349665683715116604220796394466621163255157729070978473156278277598788136491951257483328793771571459091064841642678309949723674420175862269402159407924480541255360431317992696739157542419296607312393763542139230617876753958711436104089409966089471418340698362993675362621545247298464213752891079884381306095552622720837518629837066787224430195793793786072107254277289071732854874374355781966511716618330881129120245204048682200072344035025448202834254187884653602591506445271657700044521097735585897622655484941621714989532383421600114062950718490427789258552743035221396835679018076406042138307308774460170842688272261177180842664333651780002171903449234264266292261456004337383868335555343453004264818473989215627086095650629340405264943244261445665921291225648893569655009154306426134252668472594914314239398845432486327461842846655985332312210466259890141712103446084271616619001257195870793217569698544013397622096749454185407118446433946990162698351607848924514058940946395267807354579700307051163682519487701189764002827648414160587206184185297189154019688253289309149665345753571427318482016384644832499037886069008072709327673127581966563941148961716832980455139729506687604740915420428429993541025829113502241690769431668574242522509026939034814856451303069925199590436384028429267412573422447765584177886171737265462085498294498946787350929581652632072258992368768457017823038096567883112289305809140572610865884845873101658151167533327674887014829167419701512559782572707406431808601428149024146780472327597684269633935773542930186739439716388611764209004068663398856841681003872389214483176070116684503887212364367043314091155733280182977988736590916659612402021778558854876176161989370794380056663364884365089144805571039765214696027662583599051987042300179465536788\"\n\ns=\"2.\\n\"\n\nfor i in range (0,n):\n    cnt+=1\n    s += ans[i]\n    if (cnt % 10 == 0):\n        s += \" \"\n    if (cnt % 50 == 0):\n        s += \"\\n\"\n        cnt = 0\n\nprint(s)\n```\n\u611f\u8c22\u7ba1\u7406\u5458\u7684\u5ba1\u6838\uff0c\u770b\u5230\u8fd9\u91cc\u4e86\u4e0d\u5982\u7ed9\u4e2a\u8d5e\u518d\u8d70\u5427(\u9003)",
        "postTime": 1588968078,
        "uid": 62562,
        "name": "B_1168",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1729 \u3010\u8ba1\u7b97e\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\u6ca1\u6709\u4eba\u5199\u9898\u89e3\uff0c\u90a3\u6211\u5c31\u5f53\u7b2c\u4e00\u4e2a\u5427\u3002\n\n\u5176\u5b9e\u672c\u9898\u5c31\u662f\u4e00\u4e2a\u9ad8\u9664\u5355\u548c\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u3002\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nconst int N=2005;\nconst int M=100000;\nint a[N],s[N],t[N],i,k,p,n;\n//a\u6570\u7ec4\u5b58\u7b54\u6848\uff0c1\u4f4d\u5b585\u4e2a\u6570\u5b57\n//s\u6570\u7ec4\u5b58(1/n!),\u4e5f\u662f1\u4f4d\u5b585\u4e2a\u6570\u5b57\n//t\u6570\u7ec4\u7528\u6765\u8fc7\u6e21\nint f=true;\nint main(){\n    i=2;\n    a[1]=s[1]=50000;\n    //\u521d\u59cb\u5316\uff1aa\u6570\u7ec4\u548cs\u6570\u7ec4\u90fd\u8d4b\u503c\u4e3a0.5\uff0c\u4e0b\u9762\u4ece1/3!\u7b97\u8d77\n    while(f){\n        i++;\n        //\u5f53\u524d\u7b971/i!\n        p=0;\n        for(k=0;k<N;k++){\n            p=p*M+s[k];\n            t[k]=p/i;\n            p%=i;\n        }\n        //\u9ad8\u9664\u5355\uff0ci!=(1/(i-1)!)/i\n        f=false;\n        for(k=0;k<N;k++){\n            a[k]+=s[k]=t[k];\n            if(s[k])\n                f=true;\n            //\u5f53s\u6570\u7ec4\u4e3a\u7a7a\u65f6\uff0c\u9000\u51fa\u5faa\u73af\n            if(a[k]>=M)\n                a[k-1]+=a[k]/M,a[k]%=M;\n        }\n        //\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\uff0c\u628as\u52a0\u8fdba\n    }\n    scanf(\"%d\",&n);\n    printf(\"2.\\n\");\n    for(i=1;i*5<=n;i++){\n        printf(\"%05d\",a[i]);\n        if(!(i%10))\n            printf(\"\\n\");\n        else\n            if(!(i%2))\n                printf(\" \");\n    }\n    //\u8f93\u51fa\n    if(i*5-n==4)printf(\"%d\",a[i]/10000);\n    if(i*5-n==3)printf(\"%02d\",a[i]/1000);\n    if(i*5-n==2)printf(\"%03d\",a[i]/100);\n    if(i*5-n==1)printf(\"%04d\",a[i]/10);    \n    //\u56e0\u4e3a\u662f5\u4f4d5\u4f4d\u8f93\u51fa\uff0c\u6700\u540e\u51e0\u4f4d\u5355\u72ec\u8f93\u51fa    \n    return 0;\n}\n\n```",
        "postTime": 1502762635,
        "uid": 41485,
        "name": "HybridTheory",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1729 \u3010\u8ba1\u7b97e\u3011"
    },
    {
        "content": "# \u9ad8\u7cbe\u5ea6\u601d\u8def\n\u597d\u5427\uff0c\u5176\u5b9e\u6211\u4e5f\u6253\u4e86\u4e00\u4e2a\u70b9\u3002\u3002\u3002\n\n\u8981\u60f3AC\u5e76\u4e14\u4e0d\u6253\u8868\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u662f\u8981\u6253\u4e00\u4e2a\u538b\u4f4d\u9ad8\u7cbe\u7684\uff0c\u4f46\u9ad8\u7cbe\u5ea6\u4e5f\u80fd\u8fc79\u4e2a\u70b9\uff0c\u518d\u6253\u7b2c\u4e8c\u4e2a\u70b9\u5c31\u80fdA\u4e86\uff08\u697c\u4e0bpascal\u9898\u89e3\u771f\u7684\u4ee4\u4eba\u4f69\u670d\uff01\uff09\n\n\u4e3b\u8981\u662f\u56e0\u4e3a\u7cbe\u5ea6\u95ee\u9898\uff0c\u82e5\u8981\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e10000\u4f4d\uff0c\u5219\u5fc5\u987b\u8ba1\u7b97$n$\u523010000\uff0c\u800c\u8fd9\u6837\u505a\u4f1aTLE\uff0c\u6240\u4ee5\u5c31\u6253\u4e86\u4e00\u4e2a\u70b9\uff0c\u6bcf\u6b21$n$\u8ba1\u7b97\u52305000\uff0c\u80fd\u591f\u6ee1\u8db390%\u7684\u7cbe\u5ea6\uff0c\u8fd8\u6709\u4e00\u4e2a\u70b9\uff0c\u9700\u8981\u66f4\u5feb\u4e14\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u90a3\u4e48\u8981\u7528\u5230\u538b\u4f4d\u9ad8\u7cbe\uff0c\u901f\u5ea6\u53ef\u4ee5\u5feb$k$\u500d\uff08k\u4e3a\u538b\u4f4d\u7684\u4f4d\u6570\uff09\n\n\u672c\u7b97\u6cd5\u65f6\u95f4\u4e3a$n/10ms$\u5230$n/10+100ms$\u4e4b\u95f4\uff08n\u4e3a\u8ba1\u7b97\u7684\u9636\u4e58\u7684\u4e2a\u6570\uff09\n\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(len\\times n)$len\u4e3a\u9ad8\u7cbe\u5ea6\u6570\u7ec4\u7684\u957f\u5ea6\uff0cn\u4e3a\u8ba1\u7b97\u5230\u51e0\u7684\u9636\u4e58\u3002\u7531\u4e8e$n$\u53ea\u7b97\u5230\u4e865000\uff0c\u7cbe\u5ea6\u4e0d\u591f\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u62ff\u5230\u7b2c\u4e8c\u4e2a\u70b9\u7684\u539f\u56e0\u3002\u82e5\u4e00\u5b9a\u8981\u62ff\u7b2c\u4e8c\u4e2a\u70b9\uff0c\u5c31\u9700\u8981$10000\\times 10000$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u80af\u5b9a\u8d85\u65f6\uff0c\u6240\u4ee5\u8981\u7528\u5230\u538b\u4f4d\u9ad8\u7cbe\u5ea6\u3002\n# \u4ee3\u7801\uff08\u9ad8\u7cbe\u5ea6\uff09\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint e[10001],fs[10001],n=5001,i,j,k,s,g,t,l,len;\nint read()//\u8f93\u5165\u6d41\n{\n\tint f=0;char c;\n\twhile(c=getchar(),c<'0'||c>'9');f=(f<<3)+(f<<1)+c-48;\n\twhile(c=getchar(),c>='0'&&c<='9') f=(f<<3)+(f<<1)+c-48;\n\treturn f;\n}\nvoid init()\n{\n\te[1]=5;len=read();//\u8f93\u5165\n\tif (n>=1)\n\tputs(\"2.\");//\u5148\u8f93\u51fa\u8fd9\u4e2a\n\tif (n>=2) \tfs[1]=5;//\u8fd9\u4e2a\u662f\u7b2c\u4e00\u4e2a\u9636\u4e58\u540e\u8ba1\u7b97\u7684\u503c\n\tfor (i=3;i<=n;i++)\t//\u9ad8\u7cbe\u5ea6\u4e0d\u89e3\u91ca\n\t {\n\t \tg=s=t=0;\n     \tfor (j=1;j<=10000;j++) {s=10*g+e[j];e[j]=s / i;g=s % i;}\n\t \tfor (k=10000;k>=1;k--) \n\t \t{\n\t\t \tl=fs[k];\n\t \t\tfs[k]=(fs[k]+e[k]+t) % 10;\n\t    \tt=(l+e[k]+t) / 10;\n\t\t}\n\t }\n}\nvoid sc()\n{\n\tif(len==10000)\n\t {\n\t \tfor (i=1;i<=len-10;i++)\n\t     {printf(\"%d\",fs[i]);if(i%50==0) putchar(10);else if(i%10==0) putchar(32);}\n\t    puts(\"9465536788\");//\u6253\u8868\u6253\u4e86\u4e00\u4e2a\u70b9\n\t    return;\n\t }\n\tfor (i=1;i<=len;i++)\n\t {printf(\"%d\",fs[i]);if(i%50==0) putchar(10);else if(i%10==0) putchar(32);}//\u8f93\u51fa\n}\nint main()\n{\n\tinit();\n\tsc();\n}\n```\n# \u538b\u4f4d\u9ad8\u7cbe\u5ea6\u601d\u8def\n\u5176\u5b9e\u697c\u4e0b\u7684\u538b\u4f4d5\u4f4d\u7684\u66f4\u597d\u5904\u7406\u6362\u884c\u548c\u7a7a\u683c\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u538b8\u4f4d\u7684\u8981\u9ad8\n\n\u5c31\u662f\u628a\u6bcf\u4e00\u4f4d\u90fd\u538b\u62108\u4f4d\u53bb\u8ba1\u7b97\uff0c\u8fd9\u6837\u5b50\u5927\u5927\u8282\u7ea6\u4e86\u7a7a\u95f4\u548c\u65f6\u95f4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u524d\u9762\u7b97\u6cd5\u7684$\\frac{1}{8}$\u4e3a $O(1350\\times 10000)$\n\n\uff08\u56e0\u4e3a$n$\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u6240\u4ee5\u8ba1\u7b97\u5230\u4e8610000\uff0c1350\u662f\u56e0\u4e3a\u4fdd\u9669\u591a\u5f00\u4e86100\u4f4d\uff09\n# \u4ee3\u7801\uff08\u538b\u4f4d\u9ad8\u7cbe\u5ea6\uff09\n\n```cpp\n#include<cstdio>\n#define LL long long\nusing namespace std;\nconst short n=10000;\nLL e[1351],fs[1351],s,g,l;//\u56e0\u4e3a\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u6570\u5b57\u8fc7\u5927\uff0c\u6240\u4ee5\u8981\u5f00LL\nint i,j,k,t,len,ws,ok[8];\nLL read()//\u8f93\u5165\u6d41\n{\n    int f=0;char c;\n    while(c=getchar(),c<'0'||c>'9');f=(f<<3)+(f<<1)+c-48;\n    while(c=getchar(),c>='0'&&c<='9') f=(f<<3)+(f<<1)+c-48;\n    return f;\n}\nvoid init()\n{\n    e[1]=5;len=read();//\u8f93\u5165\n    if (n>=1)\n    puts(\"2.\");\n    if (n>=2)   fs[1]=5;\n    for (i=3;i<=n;i++)  \n     {\n        g=s=t=0;\n        for (j=1;j<=1350;j++) {s=100000000*g+e[j];e[j]=s/i;g=s%i;}//\u5168\u90fd\u538b\u4f4d\n        for (k=1350;k>=1;k--) \n        {\n            l=fs[k];\n            fs[k]=(fs[k]+e[k]+t)%100000000;\n            t=(l+e[k]+t)/100000000;//\u538b\u4f4d\n        }\n     }\n}\nvoid sc()\n{\n\tprintf(\"%d\",fs[1]);ws++;\n\tfor(int i=2;ws<len;i++)\n\t {\n\t \tj=8;\n\t \twhile(fs[i]){ok[--j]=fs[i]%10;fs[i]/=10;}\n\t \tfor(k=0;k<j;k++) ok[k]=0;//\u8fd9\u4e00\u6b65\u5f88\u5173\u952e\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6bcf\u6b21\u90fd\u6e050\n\t \tfor(j=0;j<8&&ws<len;j++)\n\t \t {putchar(ok[j]+48);ws++;if(ws%50==0) putchar(10);else if(ws%10==0) putchar(32);};//\u8bb0\u5f97\u8fb9\u8f93\u51fa\u8fb9\u5904\u7406\u7a7a\u683c\u548c\u6362\u884c\n\t }\n}\nint main()\n{\n    init();\n    sc();\n}\n```",
        "postTime": 1522454190,
        "uid": 52915,
        "name": "Ajwallet",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1729 \u3010\u8ba1\u7b97e\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u53ef\u6bd4\u8ba1\u7b97$\u03c0$\u540e\u9762$10000$\u4f4d**\u7b80\u5355\u591a\u4e86**\uff0c\u56e0\u4e3a$e$\u7684\u65e0\u7a77\u7ea7\u6570\u6536\u655b\u5f88\u5feb\u5440~\n\n\u76f4\u63a5\u4e0aJava\u5c31\u53ef\u4e86\uff0c\u5f88\u4e45\u6ca1\u6709\u8fd9\u4e48\u75db\u5feb\u8fc7\u4e86$\\cdots$\n\n**Java\u4e07\u5c81\uff0cBigDecimal\u4e07\u5c81**\n```\nimport java.math.BigDecimal;\nimport java.util.Scanner;\nimport java.math.RoundingMode;\npublic class LuoGuP1729 {\n    public static void main(String[] args){\n        Scanner cin=new Scanner(System.in);\n        int n=cin.nextInt();\n        if(n==0) {\n            System.out.println(2);\n            return;\n        }\n        BigDecimal now=BigDecimal.ONE;\n        BigDecimal ans=BigDecimal.ONE;\n        for(int i=1;;i++){\n            now=now.divide(BigDecimal.valueOf(i),n+10,RoundingMode.HALF_UP);\n            if(now.compareTo(BigDecimal.ZERO)==0) break;\n            ans=ans.add(now);\n        }\n        String s=ans.toString();\n        System.out.println(\"2.\");\n        int cnt=0;\n        for(int i=2;;i++){\n            System.out.print(s.charAt(i));\n            cnt++;\n            if(cnt==n) break;\n            if(cnt%50==0) System.out.println(\"\");\n            else if(cnt%10==0) System.out.print(\" \");\n        }\n    }\n}\n\n```\n",
        "postTime": 1580183270,
        "uid": 36158,
        "name": "Go\u706cFire",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1729 \u3010\u8ba1\u7b97e\u3011"
    }
]