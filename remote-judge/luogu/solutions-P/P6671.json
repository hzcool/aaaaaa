[
    {
        "content": "\u53d1\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u6211\u4e00\u5929\u7684 debug\n\n\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u770b\u6210\u4e24\u4e2a\u534a\u5f84\u4e3a $0$ \u7684\u5706\uff0c\u6700\u77ed\u8def\u53ea\u4f1a\u7ecf\u8fc7\u5706\u5f27\u548c\u5706\u4e4b\u95f4\u7684\u516c\u5207\u7ebf\n\n\u5bf9\u4e8e\u4e24\u4e2a\u5706\u4e00\u5171\u6709\u4e24\u7ec4\u56db\u6761\u516c\u5207\u7ebf\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u5207\u70b9\u5750\u6807\n\n\u5bf9\u4e8e\u4ea4\u53c9\u7684\u4e24\u6761\u516c\u5207\u7ebf\uff0c\u6211\u4eec\u5c06\u5782\u76f4\u4e8e\u5207\u7ebf\u7684\u534a\u5f84\u753b\u51fa\u6765\uff0c\u8fde\u63a5\u5706\u5fc3\uff0c\u53d1\u73b0\u6709\u4e24\u5bf9\u76f8\u4f3c\u4e09\u89d2\u5f62\uff0c\u53ef\u76f4\u63a5\u6c42\u51fa\u5706\u5fc3\u8fde\u7ebf\u548c\u534a\u5f84\u7684\u5939\u89d2\uff0c\u5957\u7528\u5411\u91cf\u65cb\u8f6c\u516c\u5f0f\u5373\u53ef\n\n\u5bf9\u4e8e\u4e0d\u4ea4\u53c9\u7684\u4e24\u6761\u516c\u5207\u7ebf\uff0c\u6211\u4eec\u4ece\u4e00\u4e2a\u5706\u5fc3\u5411\u53e6\u4e00\u4e2a\u5706\u7684\u534a\u5f84\u4f5c\u5782\u7ebf\uff0c\u51fa\u73b0\u4e86\u4e00\u4e2a\u76f4\u89d2\u4e09\u89d2\u5f62\uff0c\u5b83\u4e24\u8fb9\u5df2\u77e5\uff0c\u5219\u53ef\u6c42\u51fa\u5706\u5fc3\u8fde\u7ebf\u548c\u534a\u5f84\u7684\u5939\u89d2\uff0c\u8fdb\u800c\u6c42\u51fa\u5207\u70b9\u5750\u6807\n\n\u6211\u4eec\u9700\u8981\u5224\u65ad\u516c\u5207\u7ebf\u662f\u5426\u7ecf\u8fc7\u4e86\u5176\u4ed6\u7684\u5706\uff0c\u7531\u4e8e\u7ebf\u6bb5\u7684\u7aef\u70b9\u4e0d\u4f1a\u5728\u5706\u7684\u5185\u90e8\uff0c\u6240\u4ee5\u4e00\u6761\u7ebf\u6bb5\u4e0e\u5706\u76f8\u4ea4\u5f53\u4e14\u4ec5\u5f53\u5706\u5fc3\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\u4e0d\u5927\u4e8e\u534a\u5f84\uff0c\u5e76\u4e14\u5706\u5fc3\u4e0e\u7ebf\u6bb5\u7aef\u70b9\u7684\u8fde\u7ebf\u4e0e\u7ebf\u6bb5\u7684\u5939\u89d2\u4e3a\u9510\u89d2\n\n\u5bf9\u4e8e\u5706\u5f27\uff0c\u6211\u4eec\u5c06\u540c\u4e00\u4e2a\u5706\u4e0a\u7684\u70b9\u6781\u89d2\u6392\u5e8f\uff0c\u76f4\u63a5 $l=\\theta r$ \u5c31\u597d\u5566\n\n\u6700\u540e\u6211\u4eec\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\u7b97\u6cd5\n\n---\n\n\u4e00\u4e0b\u662f\u6211\u72af\u8fc7\u7684\u90e8\u5206\u4e0d\u90a3\u4e48\u667a\u969c\u7684\u9519\u8bef\n\n\u516c\u5207\u7ebf\u4e00\u5171\u6709 $n^2$ \u6761\uff0c\u6bcf\u6b21 `check` \u662f $O(n)$ \u7684\uff0c\u5bf9\u4e8e\u6700\u77ed\u8def\uff0c\u6211\u4eec\u6709 $n^2$ \u4e2a\u70b9\uff0c$n^2$ \u6761\u8fb9\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3+\\text{\u6700\u77ed\u8def\u590d\u6742\u5ea6})$\n\n\u8fd9\u770b\u8d77\u6765\u5c31\u5f88\u4e0d\u53cb\u597d\uff0c\u8ba1\u7b97\u51e0\u4f55\u5e38\u6570\u8fd8\u662f\u633a\u5927\u7684\uff0c\u867d\u7136\u5728\u8fd9\u79cd\u56fe `SPFA` ~~\u5e94\u8be5~~\u4e0d\u4f1a\u88ab\u5361\uff0c\u4f46\u662f\u5b83\u8fd8\u662f\u6bd4 `Dijkstra` \u6162\u4e86\u5f88\u591a\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u8981\u4f7f\u7528 `SPFA`\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4e00\u70b9\u9ad8\u8d85\u7684\u5361\u5e38\u6280\u5de7\n\n\u6ce8\u610f\uff0c\u5982\u679c\u4f60\u7684\u5706\u4f7f\u7528\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\uff0c\u5e76\u4e14\u4f60\u5c06\u5706\u4e0a\u7684\u70b9\u90fd\u538b\u5165\u4e86\u7ed3\u6784\u4f53\u7684 `vector` \u4e2d\uff0c\u5207\u8bb0\u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f20\u5165\u5730\u5740\u5373 `const circle &c` \u800c\u4e0d\u662f\u53ea\u662f\u4e00\u4e2a `circle c`\uff0c\u5426\u5219\u590d\u6742\u5ea6\u662f $O(n^4)$ \u7684\n\n\u5c06\u4e0d\u5408\u6cd5\u7684\u516c\u5207\u7ebf\u7aef\u70b9\u4ece\u5706\u7684 `vector` \u4e2d\u5220\u53bb\uff0c\u5426\u5219\u4f1a\u5f15\u53d1\u5404\u7c7b\u7384\u5b66\u95ee\u9898\n\n\u4e3a\u4e86\u901a\u8fc7 UOJ \u7684\u5b58\u5728\u534a\u5f84\u4e3a $0$ \u7684\u5706\u7684 hack \u6570\u636e\uff0c\u8bf7\u5c06\u76f8\u5207\u4e0d\u89c6\u4e3a\u76f8\u4ea4\n\n\u6c42\u5706\u5f27\u957f\u5ea6\u7684\u65f6\u5019\uff0c\u534a\u5f84\u4e3a $0$ \u7279\u5224\u6389\uff0c\u5426\u5219 $0/0$ \u4f1a\u51fa\u73b0 $nan$\n\n\u5bf9\u4e8e\u534a\u5f84\u4e3a $0$ \u7684\u5706\uff0c\u5b83\u548c\u5176\u5b83\u5706\u7684\u516c\u5207\u7ebf\u53ea\u8ba1\u7b97\u201c\u4e0d\u76f8\u4ea4\u201d\u7684\u4e24\u6761\uff0c\u5982\u679c\u8ba1\u7b97\u4e86\u56db\u6761\u4f1a\u51fa\u73b0 $nan$\n\n\u6700\u540e\u4e00\u4e2a\u5c0f\u4f19\u4f34\u72af\u7684\u9519\u8bef\uff1a\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u89e3\u6790\u51e0\u4f55\uff0c\u5e76\u8bf7\u89c4\u8303\u5199\u6cd5\uff0c\u5426\u5219\u4f1a\u70b8\u7cbe\u5ea6\n\n---\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cctype>\n#include<queue>\nusing namespace std;\n#define C const\n#define eps 0.0000000001\n#define fi first\n#define se second\nint read()\n{\n\tint x = 0;int f = 1;char ch = getchar();\n\tfor(;!isdigit(ch);ch = getchar()) if(ch == '-') f = -1;\n\tfor(;isdigit(ch);ch = getchar()) x = x * 10 + (ch ^ 48);\n\treturn x * f;\n}\n#define Point Vector\nC int N = 510;\nstruct Vector\n{\n\tdouble x,y;\n \tinline friend Vector operator + (C Vector &a,C Vector &b) { return {a.x + b.x,a.y + b.y}; }\n\tinline friend Vector operator - (C Vector &a,C Vector &b) { return {a.x - b.x,a.y - b.y}; }\n\tinline friend double operator * (C Vector &a,C Vector &b) { return a.x * b.x + a.y * b.y; }\n\tinline friend double operator ^ (C Vector &a,C Vector &b) { return a.x * b.y - b.x * a.y; }\n\tinline double len() C{ return sqrt((*this) * (*this)); }\n\tinline double dis(C Point &a,C Point &b) C{ return fabs((*this - a) ^ (*this - b)) / (b - a).len(); }\n}p[N * N * 4];int tot,n;\nstruct edge { int to,nxt;double w; }e[N * N * 12];int head[N * N * 4],cnt;\ninline void add(int u,int v,double w) { e[++cnt] = {v,head[u],w},head[u] = cnt; }\ninline void add_edge(int u,int v,double w) { add(u,v,w),add(v,u,w); }\ninline double angle(C Vector &a,C Vector &b) { return acos(a * b / a.len() / b.len()); }\ninline Vector rotate(C Vector &a,double b)\n{\n\tdouble c = cos(b),s = sin(b);\n\treturn {a.x * c - a.y * s,a.x * s + a.y * c};\n}\n\nstruct circle\n{\n\tPoint c;double r;vector<int> id;\n\tinline void Pop(int q)\n\t{\n\t\tint now = id.back();id.pop_back();\n\t\tif(now == q) return;\n\t\tid.pop_back(),id.push_back(now);\n\t}\n}c[N];\ninline bool cross(C circle &x,C Point &a,C Point &b)\n{\n\tif(x.r <= x.c.dis(a,b)) return 0;\n\treturn (x.c - a) * (b - a) > 0 && (x.c - b) * (a - b) > 0;\n}\ninline void solve1(circle &a,circle &b)\n{\n\tVector v = b.c - a.c;\n\tdouble k = acos((a.r - b.r) / v.len());\n\tVector p1 = rotate(v,k),p2 = rotate(v,-k);\n\tdouble l = p1.len();\n\tp1 = a.c + (Vector){p1.x / l * a.r,p1.y / l * a.r};\n\tp2 = a.c + (Vector){p2.x / l * a.r,p2.y / l * a.r};\n\tp[++tot] = p1,a.id.push_back(tot);\n\tp[++tot] = p2,a.id.push_back(tot);\n}\ninline void solve2(circle &a,circle &b)\n{\n\tVector v = b.c - a.c;\n\tdouble k = acos((a.r + b.r) / v.len());\n\tVector p1 = rotate(v,k),p2 = rotate(v,-k);\n\tdouble l = p1.len();\n\tp1 = a.c + (Vector){p1.x / l * a.r,p1.y / l * a.r};\n\tp2 = a.c + (Vector){p2.x / l * a.r,p2.y / l * a.r};\n\tp[++tot] = p1,a.id.push_back(tot);\n\tp[++tot] = p2,a.id.push_back(tot);\n}\ninline bool check(C Point &a,C Point &b,int x,int y)\n{\n\tfor(int i = 1;i <= n;i++) if(i != x && i != y)\n\t\tif(cross(c[i],a,b)) return 0;\n\treturn 1;\n}\ninline void add(int i,int j)\n{\n\tsolve1(c[i],c[j]),solve1(c[j],c[i]);\n\tif(check(p[tot],p[tot - 3],i,j))\n\t\tadd_edge(tot - 3,tot,(p[tot] - p[tot - 3]).len());\n\telse c[i].Pop(tot - 3),c[j].Pop(tot);\n\tif(check(p[tot - 2],p[tot - 1],i,j))\n\t\tadd_edge(tot - 2,tot - 1,(p[tot - 2] - p[tot - 1]).len());\n\telse c[i].Pop(tot - 2),c[j].Pop(tot - 1);\n\tif(fabs(c[i].r) < eps || fabs(c[j].r) < eps) return;\n\tsolve2(c[i],c[j]),solve2(c[j],c[i]);\n\tif(check(p[tot - 3],p[tot - 1],i,j))\n\t\tadd_edge(tot - 3,tot - 1,(p[tot - 3] - p[tot - 1]).len());\n\telse c[i].Pop(tot - 3),c[j].Pop(tot - 1);\n\tif(check(p[tot - 2],p[tot],i,j))\n\t\tadd_edge(tot - 2,tot,(p[tot - 2] - p[tot]).len());\n\telse c[i].Pop(tot - 2),c[j].Pop(tot);\n}\ninline double get_len(C circle &c,C Point &a,C Point &b)\n{\n\tif(fabs(c.r) < eps) return 0;\n\treturn angle(a - c.c,b - c.c) * c.r;\n}\ndouble dis[N * N * 4];priority_queue<pair<double,int> > q;bool vis[N * N * 4];\ndouble Dijkstra(int S,int T)\n{\n\tfor(int i = 1;i <= tot;i++) dis[i] = 1e100;\n\tq.push({0,S}),dis[S] = 0;\n\twhile(!q.empty())\n\t{\n\t\tint u = q.top().se;q.pop();\n\t\tif(vis[u]) continue;vis[u] = 1;\n\t\tfor(int i = head[u],v;i;i = e[i].nxt)\n\t\t\tif(dis[v = e[i].to] > dis[u] + e[i].w)\n\t\t\t\tdis[v] = dis[u] + e[i].w,q.push({-dis[v],v});\n\t}return dis[T];\n}\nint main()\n{\n\tscanf(\"%lf %lf %lf %lf\",&c[0].c.x,&c[0].c.y,&c[N - 1].c.x,&c[N - 1].c.y);\n\tn = read();c[n + 1] = c[N - 1];\n\tfor(int i = 1;i <= n;i++) scanf(\"%lf %lf %lf\",&c[i].c.x,&c[i].c.y,&c[i].r);\n\tfor(int i = 0;i <= n;i++)\n\t\tfor(int j = i + 1;j <= n + 1;j++)\n\t\t\tadd(i,j);\n\tfor(int i = 0;i <= n + 1;i++)\n\t{\n\t\t#define v c[i].id\n\t\tsort(v.begin(),v.end(),[&](int a,int b)\n\t\t{\n\t\t\tVector x = p[a] - c[i].c,y = p[b] - c[i].c;\n\t\t\treturn atan2(x.y,x.x) < atan2(y.y,y.x);\n\t\t});int s = v.size();\n\t\tfor(int j = 0;j < s;j++)\n\t\t{\n\t\t\tint now = v[j],nxt = v[(j + 1) % s];\n\t\t\tadd_edge(now,nxt,get_len(c[i],p[now],p[nxt]));\n\t\t}\n\t\t#undef v\n\t}\n\tprintf(\"%.1lf\",Dijkstra(c[0].id[0],c[n + 1].id[0]));\n\treturn 0;\n}\n```",
        "postTime": 1596545637,
        "uid": 53994,
        "name": "81179332_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6671 \u3010[\u6e05\u534e\u96c6\u8bad2016] \u5b9a\u5411\u8d8a\u91ce\u3011"
    },
    {
        "content": "\u7ec8\u4e8e\u505a\u51fa\u4e86\u7b2c\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u9898\u2026\u2026\u53d1\u9898\u89e3\u7eaa\u5ff5\u4e0b\u3002\n\n\u8fd9\u9053\u9898\u662f\u975e\u5e38\u5178\u578b\u7684\u5e73\u9762\u5706\u969c\u788d\u6700\u77ed\u8def\u95ee\u9898\u3002\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u53ea\u4f1a\u8d70**\u4e24\u5706\u4e4b\u95f4\u7684\u516c\u5207\u7ebf**\u548c**\u8fc7\u8d77\u70b9\u3001\u7ec8\u70b9\u7684\u5706\u5207\u7ebf**\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u8fd9\u6837\u8d70\uff0c\u6839\u636e\u4e24\u70b9\u4e4b\u95f4\u7ebf\u6bb5\u6700\u77ed\uff0c\u4e00\u5b9a\u4e0d\u4f18\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u628a\u6bcf\u4e2a\u5207\u70b9\u62c6\u51fa\u6765\u8dd1\u6700\u77ed\u8def\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8d77\u70b9\u7ec8\u70b9\u770b\u6210\u4e24\u4e2a\u534a\u5f84\u662f $0$ \u7684\u5706\uff0c\u7136\u540e\u6211\u4eec\u679a\u4e3e\u4efb\u610f\u4e24\u4e2a\u5706\uff0c\u5904\u7406\u56db\u6761\u516c\u5207\u7ebf\u5171\u516b\u4e2a\u70b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6c42\u51fa\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hk5ejcel.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sxd3nxzd.png)\n\n\u7136\u540e\u65cb\u8f6c\u5411\u91cf\u53ef\u4ee5\u5f97\u5230\u5207\u70b9\uff0c\u4e09\u89d2\u51fd\u6570\u76f4\u63a5\u6c42\u5207\u7ebf\u957f\uff0c\u518d\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5706 check \u4e00\u4e0b\u662f\u5426\u6709\u5706\u6321\u4f4f\u4e86\u8fd9\u6761\u8def\u5f84\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u76f4\u63a5\u52a0\u8fb9\u3002\n\n\u6ce8\u610f\u5230\u540c\u4e00\u4e2a\u5706\u4e0a\u7684\u8fb9\u6211\u4eec\u8fd8\u6ca1\u6709\u52a0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5706\uff0c\u628a\u6240\u6709\u5207\u70b9\u4e22\u8fdb\u6570\u7ec4\uff0c\u7136\u540e\u6309\u7167\u6781\u89d2\u6392\u5e8f\uff0c\u7ed5\u4e00\u5708\u4f9d\u6b21\u52a0\u8fb9\u5373\u53ef\u3002\n\n\u7136\u540e\u8dd1\u6700\u77ed\u8def\u3002\n\n\u4f46\u662f\u8fd9\u4e00\u9898\u6709\u5f88\u591a\u7ec6\u8282\uff0c\u5728\u8fd9\u91cc\u8bf4\u4e00\u4e0b debug \u9047\u5230\u7684\u9519\u8bef\uff0c\u4ee5\u9632\u5927\u5bb6\u8e29\u96f7\u3002\n\n- \u5728 check \u7684\u65f6\u5019\u8981\u6ce8\u610f**\u8def\u5f84\u662f\u7ebf\u6bb5**\u800c\u4e0d\u662f\u76f4\u7ebf\uff0c\u6211\u4eec\u8981\u628a\u5706\u5fc3\u7684\u6295\u5f71\u5728\u7ebf\u6bb5\u5916\u9762\u7684\u5706\u7279\u5224\u6389\uff1b\n\n- check \u7684\u65f6\u5019\u53ef\u80fd\u4f1a check \u5230\u548c\u7ebf\u6bb5\u7aef\u70b9\u91cd\u5408\u7684\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u4e24\u70b9\u8ddd\u79bb\u51fa\u73b0\u5728\u5206\u6bcd\u4e0a\u4f1a RE\uff0c\u4e5f\u8981\u7279\u5224\uff1b\n\n- \u6570\u636e\u4e2d\u4f1a\u51fa\u73b0**\u4e24\u5706\u521a\u597d\u76f8\u5207\u7684\u60c5\u51b5**\uff0c\u5728\u679a\u4e3e\u5706\u65f6\u6211\u4eec\u7684\u4ee3\u7801\u53ea\u4f1a\u628a\u5207\u70b9\u52a0\u5165\u4e00\u4e2a\u5706\u7684\u6570\u7ec4\u4e2d\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u53e6\u4e00\u8fb9\u7684\u5706\u65e0\u6cd5\u5728\u8fd9\u91cc\u4e2d\u8f6c\u800c WA\uff0c\u6240\u4ee5\u76f8\u5207\u7684\u60c5\u51b5\u4e5f\u8981\u7279\u5224\uff1b\n\n- \u6ce8\u610f $\\epsilon$ \u7684\u9009\u53d6\u548c $\\epsilon$ \u5e94\u653e\u5728\u4e0d\u7b49\u5f0f\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\u7684\u95ee\u9898\uff0c\u867d\u7136\u6211\u5e76\u6ca1\u6709\u6302\u5728\u8fd9\u91cc\u4f46\u4f3c\u4e4e\u8fd9\u4e2a\u8fd8\u662f\u633a\u5e38\u89c1\u7684\u9519\u8bef\u3002\n\n- \u6700\u540e\uff0c\u4f18\u5316\u5e38\u6570\uff0c\u9632\u6b62\u6bcf\u4e2a\u5706\u4e0a\u7684\u5207\u70b9\u6570\u7ec4\u4e2d\u63d2\u5165\u91cd\u590d\u7684\u6570\u800c\u6d6a\u8d39\u65f6\u95f4\u3002\n\n\u8d85\u957f\u4ee3\u7801\u9884\u8b66\uff089KB\uff09\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<vector>\n#include<map>\n#include<queue>\nusing namespace std;\nconst double pi=acos(-1),eps=1e-7;\nint n,s,t,cnt,tot,h[501*501*9];\nbool vis[501*501*9];\nstruct edge\n{\n    int nxt,to;\n    double weight;\n}e[501*501*17];\nstruct point\n{\n    double x,y;\n    point(double x_,double y_):\n        x(x_),y(y_){}\n    bool operator <(const point &other) const\n    {\n        return x*998244353.0+y<other.x*998244353.0+other.y;\n    }\n    point operator +(const point &other) const\n    {\n        return point(x+other.x,y+other.y);\n    }\n    point operator -(const point &other) const\n    {\n        return point(x-other.x,y-other.y);\n    }\n    point operator *(const double k) const\n    {\n        return point(x*k,y*k);\n    }\n};\nstruct circle\n{\n    double x,y,r;\n    int id;\n}c[505];\nstruct node\n{\n    double x,y;\n    int id;\n    node(double x_,double y_,int id_):\n        x(x_),y(y_),id(id_){}\n    bool operator ==(const node &other) const\n    {\n        return id==other.id;\n    }\n    bool operator <(const node &other) const\n    {\n        return atan2(y,x)<atan2(other.y,other.x);\n    }\n};\nvector<node> v[505];\nmap<point,int> mp;\nmap<int,bool> inq[505];\ninline double rad(double deg)\n{\n    return deg*pi/180.0;\n}\ninline double deg(double rad)\n{\n    return rad*180.0/pi;\n}\ninline double Sin(double deg)\n{\n    return sin(rad(deg));\n}\ninline double Asin(double num)\n{\n    return deg(asin(num));\n}\ninline double Cos(double deg)\n{\n    return cos(rad(deg));\n}\ninline double Acos(double num)\n{\n    return deg(acos(num));\n}\ninline double dis(point a,point b)\n{\n    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\ninline double dot(point A,point B,point O)\n{\n    point a=point(A.x-O.x,A.y-O.y),b=point(B.x-O.x,B.y-O.y);\n    return a.x*b.x+a.y*b.y;\n}\ninline double cross(point A,point B,point O)\n{\n    point a=point(A.x-O.x,A.y-O.y),b=point(B.x-O.x,B.y-O.y);\n    return a.x*b.y-a.y*b.x;\n}\ninline point rotate(point A,point O,double deg,double k)\n{\n    point a=point(A.x-O.x,A.y-O.y);\n    point b=point(a.x*Cos(deg)-a.y*Sin(deg),a.x*Sin(deg)+a.y*Cos(deg));\n    return O+(b*k);\n}\ninline void add(int x,int y,double w)\n{\n    e[++tot].nxt=h[x];\n    h[x]=tot;\n    e[tot].to=y;\n    e[tot].weight=w;\n}\ninline bool check(point a,point b)\n{\n    for(register int i=1;i<=n;++i)\n    {\n        point p=point(c[i].x,c[i].y);\n        if(!dis(a,b))\n        {\n            if(fabs(c[i].r)>eps)\n                return 0;\n            continue;\n        }\n        if(dis(a,p)>dis(b,p))\n        {\n            if(dis(a,p)*dis(a,p)+eps>dis(b,p)*dis(b,p)+dis(a,b)*dis(a,b))\n                if(dis(b,p)+eps<c[i].r)\n                    return 0;\n                else\n                    continue;\n        }\n        else\n            if(dis(b,p)*dis(b,p)+eps>dis(a,p)*dis(a,p)+dis(a,b)*dis(a,b))\n                if(dis(a,p)+eps<c[i].r)\n                    return 0;\n                else\n                    continue;\n        double d=dot(b,p,a)/dis(a,b);\n        d=sqrt(dis(a,p)*dis(a,p)-d*d);\n        if(d+eps<c[i].r)\n            return 0;\n    }\n    return 1;\n}\ninline void calc(circle a,circle b)\n{\n    if(a.r>b.r)\n        swap(a,b);\n    double d=dis(point(a.x,a.y),point(b.x,b.y));\n    if(fabs(d-a.r-b.r)<eps)\n    {\n        if(fabs(a.r)<eps)\n        {\n            point p=point(a.x,a.y);\n            if(!mp[p])\n            {\n                mp[p]=++cnt;\n                //printf(\"(%lf,%lf)\\n\",a.x,a.y);\n            }\n            if(!inq[b.id][mp[p]])\n            {\n                v[b.id].push_back(node(a.x-b.x,a.y-b.y,mp[p]));\n                inq[b.id][mp[p]]=1;\n            }\n            return;\n        }\n        if(fabs(b.r)<eps)\n        {\n            point p=point(b.x,b.y);\n            if(!mp[p])\n            {\n                mp[p]=++cnt;\n                //printf(\"(%lf,%lf)\\n\",b.x,b.y);\n            }\n            if(!inq[a.id][mp[p]])\n            {\n                v[a.id].push_back(node(b.x-a.x,b.y-a.y,mp[p]));\n                inq[a.id][mp[p]]=1;\n            }\n            return;\n        }\n        point p=point((b.x-a.x)/d*a.r+a.x,(b.y-a.y)/d*a.r+a.y);\n        if(!mp[p])\n        {\n            mp[p]=++cnt;\n            //printf(\"(%lf,%lf)\\n\",p.x,p.y);\n        }\n        if(!inq[a.id][mp[p]])\n        {\n            v[a.id].push_back(node(p.x-a.x,p.y-a.y,mp[p]));\n            inq[a.id][mp[p]]=1;\n        }\n        if(!inq[b.id][mp[p]])\n        {\n            v[b.id].push_back(node(p.x-b.x,p.y-b.y,mp[p]));\n            inq[b.id][mp[p]]=1;\n        }\n    }\n    double deg=Acos((b.r-a.r)/d);\n    double len=d*Sin(deg);\n    point p1=rotate(point(a.x,a.y),point(b.x,b.y),deg,b.r/d);\n    point p2=rotate(point(b.x,b.y),point(a.x,a.y),deg-180.0,a.r/d);\n    int l=0,r=0;\n    if(check(p1,p2))\n    {\n        if(!mp[p1])\n        {\n            mp[p1]=++cnt;\n            //printf(\"(%lf,%lf)\\n\",p1.x,p1.y);\n            v[b.id].push_back(node(p1.x-b.x,p1.y-b.y,cnt));\n        }\n        l=mp[p1];\n        if(!mp[p2])\n        {\n            mp[p2]=++cnt;\n            //printf(\"(%lf,%lf)\\n\",p2.x,p2.y);\n            v[a.id].push_back(node(p2.x-a.x,p2.y-a.y,cnt));\n        }\n        r=mp[p2];\n        //printf(\"%d %d %lf\\n\",l,r,len);\n        add(l,r,len);\n        add(r,l,len);\n    }\n    p1=rotate(point(a.x,a.y),point(b.x,b.y),-deg,b.r/d);\n    p2=rotate(point(b.x,b.y),point(a.x,a.y),180.0-deg,a.r/d);\n    if(a.r==0&&b.r==0)\n        return;\n    if(check(p1,p2))\n    {\n        if(!mp[p1])\n        {\n            mp[p1]=++cnt;\n            //printf(\"(%lf,%lf)\\n\",p1.x,p1.y);\n            v[b.id].push_back(node(p1.x-b.x,p1.y-b.y,cnt));\n        }\n        l=mp[p1];\n        if(!mp[p2])\n        {\n            mp[p2]=++cnt;\n            //printf(\"(%lf,%lf)\\n\",p2.x,p2.y);\n            v[a.id].push_back(node(p2.x-a.x,p2.y-a.y,cnt));\n        }\n        r=mp[p2];\n        //printf(\"%d %d %lf\\n\",l,r,len);\n        add(l,r,len);\n        add(r,l,len);\n    }\n    if(!a.r||!b.r||fabs(d-a.r-b.r)<eps)\n        return;\n    deg=Acos((a.r+b.r)/d);\n    len=d*Sin(deg);\n    if(!len)\n        return;\n    p1=rotate(point(a.x,a.y),point(b.x,b.y),deg,b.r/d);\n    p2=rotate(point(b.x,b.y),point(a.x,a.y),deg,a.r/d);\n    if(check(p1,p2))\n    {\n        if(!mp[p1])\n        {\n            mp[p1]=++cnt;\n            //printf(\"(%lf,%lf)\\n\",p1.x,p1.y);\n            v[b.id].push_back(node(p1.x-b.x,p1.y-b.y,cnt));\n        }\n        l=mp[p1];\n        if(!mp[p2])\n        {\n            mp[p2]=++cnt;\n            //printf(\"(%lf,%lf)\\n\",p2.x,p2.y);\n            v[a.id].push_back(node(p2.x-a.x,p2.y-a.y,cnt));\n        }\n        r=mp[p2];\n        //printf(\"%d %d %lf\\n\",l,r,len);\n        add(l,r,len);\n        add(r,l,len);\n    }\n    p1=rotate(point(a.x,a.y),point(b.x,b.y),-deg,b.r/d);\n    p2=rotate(point(b.x,b.y),point(a.x,a.y),-deg,a.r/d);\n    if(check(p1,p2))\n    {\n        if(!mp[p1])\n        {\n            mp[p1]=++cnt;\n            //printf(\"(%lf,%lf)\\n\",p1.x,p1.y);\n            v[b.id].push_back(node(p1.x-b.x,p1.y-b.y,cnt));\n        }\n        l=mp[p1];\n        if(!mp[p2])\n        {\n            mp[p2]=++cnt;\n            //printf(\"(%lf,%lf)\\n\",p2.x,p2.y);\n            v[a.id].push_back(node(p2.x-a.x,p2.y-a.y,cnt));\n        }\n        r=mp[p2];\n        //printf(\"%d %d %lf\\n\",l,r,len);\n        add(l,r,len);\n        add(r,l,len);\n    }\n}\ninline double dijkstra()\n{\n    priority_queue<pair<double,int>,vector<pair<double,int> >,greater<pair<double,int> > > q;\n    q.push(make_pair(0.0,s));\n    while(!q.empty())\n    {\n        pair<double,int> k=q.top();\n        q.pop();\n        if(vis[k.second])\n            continue;\n        vis[k.second]=1;\n        //cout<<k.second<<\" \"<<k.first<<endl;\n        if(k.second==t)\n            return k.first;\n        for(register int i=h[k.second];i;i=e[i].nxt)\n            if(!vis[e[i].to])\n                q.push(make_pair(k.first+e[i].weight,e[i].to));\n    }\n    return 0.0;\n}\nint main()\n{\n    scanf(\"%lf%lf%lf%lf\",&c[1].x,&c[1].y,&c[2].x,&c[2].y);\n    c[1].id=1;\n    c[2].id=2;\n    scanf(\"%d\",&n);\n    n+=2;\n    for(register int i=3;i<=n;++i)\n    {\n        scanf(\"%lf%lf%lf\",&c[i].x,&c[i].y,&c[i].r);\n        c[i].id=i;\n    }\n    for(register int i=1;i<n;++i)\n        for(register int j=i+1;j<=n;++j)\n            calc(c[i],c[j]);\n    s=mp[point(c[1].x,c[1].y)];\n    t=mp[point(c[2].x,c[2].y)];\n    for(register int i=1;i<=n;++i)\n    {\n        sort(v[i].begin(),v[i].end());\n        //puts(\"\");\n        if(v[i].size()>1&&!(v[i].front()==v[i].back()))\n        {\n            double d=dis(point(v[i].front().x,v[i].front().y),point(v[i].back().x,v[i].back().y));\n            double deg=2.0*Asin(d/2.0/c[i].r);\n            double L=c[i].r*pi*deg/180.0;\n            //printf(\"%d %d %lf\\n\",v[i].front().id,v[i].back().id,L);\n            add(v[i].front().id,v[i].back().id,L);\n            add(v[i].back().id,v[i].front().id,L);\n        }\n        for(register int j=1;j<(int)v[i].size();++j)\n        {\n            if(v[i][j]==v[i][j-1])\n                continue;\n            double d=dis(point(v[i][j-1].x,v[i][j-1].y),point(v[i][j].x,v[i][j].y));\n            double deg=2.0*Asin(d/2.0/c[i].r);\n            double L=c[i].r*pi*deg/180.0;\n            //printf(\"%d %d %lf\\n\",v[i][j-1].id,v[i][j].id,L);\n            add(v[i][j-1].id,v[i][j].id,L);\n            add(v[i][j].id,v[i][j-1].id,L);\n        }\n    }\n    printf(\"%.1lf\\n\",dijkstra());\n    return 0;\n}\n```\n",
        "postTime": 1625500742,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6671 \u3010[\u6e05\u534e\u96c6\u8bad2016] \u5b9a\u5411\u8d8a\u91ce\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n$n$ \u4e2a **\u4e92\u4e0d\u76f8\u4ea4** \u7684\u5706\uff0c\u6c42\u4ece $S$ \u5230 $T$ \u4e0d\u7ecf\u8fc7\u5706\u5185\u7684\u6700\u77ed\u8def\u3002\n\n$n\\le 500$\u3002\n\n## \u9898\u89e3\n\n~~\u4e3a\u4ec0\u4e48\u8fd9\u80fd\u6709\u9ed1\u554a~~\n\n\u9996\u5148\u4e00\u4e2a\u76f4\u89c9\u5c31\u662f\u6700\u77ed\u8def\u53ea\u5305\u542b\u5706\u5f27\u548c\u5207\u7ebf\uff08\u8d77\u70b9/\u7ec8\u70b9\u5230\u5706\u7684\u5207\u7ebf\uff0c\u4e24\u5706\u7684\u516c\u5207\u7ebf\uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u626c\u6389\u534a\u5f84\u4e3a $0$ \u7684\u5706\u9632\u6b62\u51fa\u73b0\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u95ee\u9898\u3002\n\n\u7136\u540e\u5207\u7ebf\u53ea\u6709 $\\mathcal O(n^2)$ \u6761\uff0c\u6709\u6548\u7684\u70b9\u6570\u53ea\u6709 $\\mathcal O(n^2)$ \u4e2a\uff0c\u6bcf\u4e2a\u5706\u4e0a\u7684\u70b9\u8fde\u4e00\u5708\u8fb9\u8868\u793a\u5706\u5f27\u4e0a\u7684\u8f6c\u79fb\uff0c\u8fb9\u6570\u4ecd\u7136\u662f $\\mathcal O(n^2)$ \u7684\uff0c\u7136\u540e\u8dd1\u6700\u77ed\u8def\u5c31\u505a\u5b8c\u4e86\uff1f\uff1f\n\n\u597d\u5427\u4e0a\u9762\u7684\u90e8\u5206\u5e76\u4e0d\u662f\u672c\u9898\u7684\u96be\u70b9\uff0c\u672c\u9898\u7684\u96be\u70b9\u5728\u4e8e\u6c42\u4e24\u4e2a\u5706\u7684\u516c\u5207\u7ebf\u4ee5\u53ca\u4e00\u6761\u7ebf\u6bb5\u6709\u6ca1\u6709\u7ecf\u8fc7\u4e00\u4e2a\u5706\u5185\u90e8\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u540e\u9762\u8fd8\u8981\u5bf9\u5706\u4e0a\u7684\u70b9\u8fde\u5706\u5f27\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u91c7\u7528\u89d2\u5ea6\u8868\u793a\u5728\u5706\u4e0a\u7684\u4f4d\u7f6e\u662f\u975e\u5e38\u65b9\u4fbf\u7684\u3002\u6bd4\u5982\u6211\u4eec\u6c42 $C_1$ \u548c $C_2$ \u4e24\u4e2a\u70b9\u7684\u516c\u5207\u7ebf\uff0c\u5c31\u662f $\\theta\\pm\\Delta$ \u7684\u4e24\u4e2a\u70b9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wuf990bh.png)\n\n\u5176\u4e2d $\\theta$ \u53ef\u4ee5\u7528 $\\vec{C_1C_2}$ \u7684 `atan2` \u8ba1\u7b97\uff0c$\\Delta$ \u53ef\u4ee5\u7528 $\\arccos((r_1-r_2)/dis)$ \u8ba1\u7b97\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u91cc\u9762\u7684\u516c\u5207\u7ebf\u4e5f\u662f\u7c7b\u4f3c\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5umkiuni.png)\n\n\u7136\u540e\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u8ba1\u7b97\u51fa\u6240\u6709\u516c\u5207\u7ebf\u4e86\uff0c\u7136\u540e\u5c31\u662f\u8981\u8003\u8651\u4e00\u6761\u7ebf\u6bb5\u4f1a\u4e0d\u4f1a\u7ecf\u8fc7\u4e00\u4e2a\u5706\u7684\u5185\u90e8\u3002\u8003\u8651\u73b0\u5728\u6709 $p_1,p_2$ \u548c\u5706 $C$\uff0c\u90a3\u4e48\u5728\u7ebf\u6bb5\u7ecf\u8fc7\u5706\u5185\u9700\u8981\u6ee1\u8db3\u4ec0\u4e48\u5462\uff1f\n\n\u9996\u5148\u81f3\u5c11\u8981\u5706\u5fc3 $O$ \u5230\u76f4\u7ebf\u7684\u8ddd\u79bb $<r$\uff0c\u7136\u540e\u5706\u5fc3\u7684\u4f4d\u7f6e\u5728\u4e0b\u9762\u7684\u533a\u57df\u5185\u5c31\u4f1a\u6709\u4ea4\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/38w4ha7d.png)\n\n\u4e24\u4e2a\u7ea2\u8272\u7684\u533a\u57df\u76f4\u63a5\u7528\u8ddd\u79bb\u5224\u65ad\u5373\u53ef\u3002\u7eff\u8272\u7684\u957f\u65b9\u5f62\u533a\u57df\u5c31\u662f\u8981 $O$ \u5728 $p_1p_2$ \u4e0a\u7684\u6295\u5f71\u5728 $p_1,p_2$ \u4e4b\u95f4\u4e5f\u5c31\u662f $0<\\vec{p_1O}\\cdot\\vec{p_1p_2}<\\vec{p_1p_2}^2$\u3002\n\n\u5bf9\u7cbe\u5ea6\u8981\u6c42\u4e0d\u9ad8\u76f4\u63a5\u5199\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\u590d\u6742\u5ea6 $\\mathcal O(n^3)$\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define mp make_pair\n#define mt make_tuple\n#define eb emplace_back\n#define pb push_back\n#define pc putchar\n#define chkmx(a,b) (a)=max((a),(b))\n#define chkmn(a,b) (a)=min((a),(b))\n#define fi first\n#define se second\nusing namespace std;\nconst int N=510;\ntypedef double db;\nconst db eps=1e-5;\nconst db pi=acos(-1);\ndb ad(db x){while(x>2*pi)x-=2*pi;while(x<0)x+=2*pi;return x;}\nstruct point{\n\tdb x,y;\n\tpoint(db x=0,db y=0):x(x),y(y){}\n\tpoint operator+(point rhs){return point(x+rhs.x,y+rhs.y);}\n\tpoint operator-(point rhs){return point(x-rhs.x,y-rhs.y);}\n\tpoint operator*(db rhs){return point(x*rhs,y*rhs);}\n\tdb operator*(point rhs){return x*rhs.y-y*rhs.x;}\n\tdb operator%(point rhs){return x*rhs.x+y*rhs.y;}\n\tdb dis(){return sqrt(x*x+y*y);}\n\tdb ang(){return ad(atan2(y,x));}\n};\nint n;point s,t;\nstruct circle{\n\tpoint o;int r;\n\tvector<pair<db,int>>ps;\n}c[N];\nbool ok(point p1,point p2){\n\t//\u6ca1\u6709\u4ece\u91cc\u9762\u7a7f\u8fc7\u4efb\u4f55\u4e00\u4e2a\u5706\n\tdb A=p2.y-p1.y;\n\tdb B=p1.x-p2.x;\n\tdb C=-(p1*p2);\n\tfor(int i=1;i<=n;i++)\n\t\tif(abs(A*c[i].o.x+B*c[i].o.y+C)/sqrt(A*A+B*B)<c[i].r-eps){\n\t\t\tif((c[i].o-p1).dis()<c[i].r-eps)return 0;\n\t\t\tif((c[i].o-p2).dis()<c[i].r-eps)return 0;\n\t\t\tif((c[i].o-p1)%(p2-p1)>0&&(c[i].o-p1)%(p2-p1)<=(p2-p1)%(p2-p1))return 0;\n\t\t}\n\treturn 1;\n}\nvector<pair<int,db>>e[N*N*4];\ndb dis[N*N*4];bool vis[N*N*4];\npriority_queue<pair<db,int>,vector<pair<db,int>>,greater<pair<db,int>>>q;\nsigned main(){\n\tcin>>s.x>>s.y>>t.x>>t.y>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>c[i].o.x>>c[i].o.y>>c[i].r;\n\t\tif(c[i].r==0)i--,n--;\n\t}\n\tif(ok(s,t))return printf(\"%.1f\",(s-t).dis()),0;\n\tint cnt=2;\n\tfor(int i=1;i<=n;i++)for(int j=i+1;j<=n;j++){\n\t\tdb d=(c[i].o-c[j].o).dis();\n\t\tdb ang=(c[j].o-c[i].o).ang();\n\t\t{\n\t\tdb delta=acos((c[i].r-c[j].r)/d);\n\t\tdb A=ad(ang-delta),B=ad(ang+delta);\n\t\tpoint p1,p2;\n\t\tp1=c[i].o+point(cos(A),sin(A))*c[i].r,p2=c[j].o+point(cos(A),sin(A))*c[j].r;\n\t\tif(ok(p1,p2))\n\t\t\tc[i].ps.eb(A,++cnt),c[j].ps.eb(A,++cnt),\n\t\t\te[cnt].eb(cnt-1,(p1-p2).dis()),e[cnt-1].eb(cnt,(p1-p2).dis());\n\t\tp1=c[i].o+point(cos(B),sin(B))*c[i].r,p2=c[j].o+point(cos(B),sin(B))*c[j].r;\n\t\tif(ok(p1,p2))\n\t\t\tc[i].ps.eb(B,++cnt),c[j].ps.eb(B,++cnt),\n\t\t\te[cnt].eb(cnt-1,(p1-p2).dis()),e[cnt-1].eb(cnt,(p1-p2).dis());\n\t\t}{\n\t\tdb delta=acos((c[i].r+c[j].r)/d);\n\t\tdb A=ad(ang-delta),B=ad(ang+delta);\n\t\tpoint p1,p2;\n\t\tp1=c[i].o+point(cos(A),sin(A))*c[i].r,p2=c[j].o+point(cos(A+pi),sin(A+pi))*c[j].r;\n\t\tif(ok(p1,p2))\n\t\t\tc[i].ps.eb(A,++cnt),c[j].ps.eb(ad(A+pi),++cnt),\n\t\t\te[cnt].eb(cnt-1,(p1-p2).dis()),e[cnt-1].eb(cnt,(p1-p2).dis());\n\t\tp1=c[i].o+point(cos(B),sin(B))*c[i].r,p2=c[j].o+point(cos(B+pi),sin(B+pi))*c[j].r;\n\t\tif(ok(p1,p2))\n\t\t\tc[i].ps.eb(B,++cnt),c[j].ps.eb(ad(B+pi),++cnt),\n\t\t\te[cnt].eb(cnt-1,(p1-p2).dis()),e[cnt-1].eb(cnt,(p1-p2).dis());\n\t\t}\n\t}\n\tfor(int j=1;j<=n;j++){\n\t\tdb d=(s-c[j].o).dis();\n\t\tdb ang=(c[j].o-s).ang();\n\t\tdb delta=acos(-c[j].r/d);\n\t\tdb A=ad(ang-delta),B=ad(ang+delta);\n\t\tpoint p1,p2;\n\t\tp1=s,p2=c[j].o+point(cos(A),sin(A))*c[j].r;\n\t\tif(ok(p1,p2))c[j].ps.eb(A,++cnt),e[cnt].eb(1,(p1-p2).dis()),e[1].eb(cnt,(p1-p2).dis());\n\t\tp1=s,p2=c[j].o+point(cos(B),sin(B))*c[j].r;\n\t\tif(ok(p1,p2))c[j].ps.eb(B,++cnt),e[cnt].eb(1,(p1-p2).dis()),e[1].eb(cnt,(p1-p2).dis());\n\t}\n\tfor(int j=1;j<=n;j++){\n\t\tdb d=(t-c[j].o).dis();\n\t\tdb ang=(c[j].o-t).ang();\n\t\tdb delta=acos(-c[j].r/d);\n\t\tdb A=ad(ang-delta),B=ad(ang+delta);\n\t\tpoint p1,p2;\n\t\tp1=t,p2=c[j].o+point(cos(A),sin(A))*c[j].r;\n\t\tif(ok(p1,p2))c[j].ps.eb(A,++cnt),e[cnt].eb(2,(p1-p2).dis()),e[2].eb(cnt,(p1-p2).dis());\n\t\tp1=t,p2=c[j].o+point(cos(B),sin(B))*c[j].r;\n\t\tif(ok(p1,p2))c[j].ps.eb(B,++cnt),e[cnt].eb(2,(p1-p2).dis()),e[2].eb(cnt,(p1-p2).dis());\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tsort(c[i].ps.begin(),c[i].ps.end());\n\t\tfor(int j=0;j<c[i].ps.size();j++){\n\t\t\tauto now=c[i].ps[j],nxt=c[i].ps[(j+1)%c[i].ps.size()];\n\t\t\tdb dis=ad(nxt.fi-now.fi)*c[i].r;\n\t\t\te[now.se].eb(nxt.se,dis);\n\t\t\te[nxt.se].eb(now.se,dis);\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt;i++)dis[i]=1e9;\n\tq.push(mp(dis[1]=0,1));\n\twhile(q.size()){\n\t\tint u=q.top().se;q.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(auto [v,w]:e[u])if(dis[v]>dis[u]+w)\n\t\t\tq.push(mp(dis[v]=dis[u]+w,v));\n\t}\n\tprintf(\"%.1f\",dis[2]);\n}\n```",
        "postTime": 1655090538,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "P6671 \u3010[\u6e05\u534e\u96c6\u8bad2016] \u5b9a\u5411\u8d8a\u91ce\u3011"
    },
    {
        "content": "\u663e\u7136\u6700\u4f18\u7684\u8def\u5f84\u53ea\u4f1a\u7ecf\u8fc7\u82e5\u5e72\u6761\u4e24\u4e2a\u5706\u7684\u516c\u5207\u7ebf\u548c\u82e5\u5e72\u6bb5\u5706\u5f27\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u628a\u8d77\u70b9\u7ec8\u70b9\u770b\u6210\u4e24\u4e2a\u534a\u5f84\u4e3a0\u7684\u5706\u4e5f\u884c\u3002\n\n\u6700\u70e6\u7684\u5c31\u662f\u7b97\u4e24\u4e2a\u5706\u7684\u516c\u5207\u7ebf\u4e86\uff0c\u4e00\u5171\u6709\u56db\u6761\n\n\u5bf9\u4e8e\u9760\u5916\u9762\u7684\u4e24\u6761\uff0c\u6211\u4eec\u628a\u5207\u7ebf\u3001\u534a\u5f84\u548c\u4e24\u5706\u5fc3\u4e4b\u95f4\u7684\u7ebf\u6bb5\u8fde\u8d77\u6765\uff0c\u4f1a\u6784\u6210\u4e00\u4e2a\u76f4\u89d2\u68af\u5f62\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u4e24\u5706\u5fc3\u8fde\u7ebf\u7684\u503e\u659c\u89d2\uff0c\u8fdb\u800c\u6c42\u51fa\u8fd9\u4e24\u6761\u5207\u7ebf\u7684\u503e\u659c\u89d2\uff0c\u7136\u540e\u5207\u7ebf\u7684\u76f4\u7ebf\u65b9\u7a0b\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u4e86\u3002\n\n\u5bf9\u4e8e\u9760\u91cc\u9762\u7684\u4e24\u6761\uff0c\u540c\u6837\u628a\u5207\u7ebf\u3001\u534a\u5f84\u548c\u4e24\u5706\u5fc3\u4e4b\u95f4\u7684\u7ebf\u6bb5\u8fde\u8d77\u6765\uff0c\u4f1a\u51fa\u73b0\u4e24\u4e2a\u76f8\u4f3c\u4e09\u89d2\u5f62\uff0c\u540c\u6837\u53ef\u4ee5\u628a\u503e\u659c\u89d2\u6c42\u51fa\u6765\u3002\n\n\u63a5\u7740\uff0c\u5224\u65ad\u8fd9\u4e2a\u5207\u7ebf\u6bb5\u6709\u6ca1\u6709\u88ab\u5176\u5b83\u7684\u5706\u6321\u4f4f\u3002\n\n\u6211\u7684\u6bd4\u8f83\u849f\u84bb\u7684\u505a\u6cd5\uff1a\u5148\u7528\u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\u516c\u5f0f\u5224\u662f\u5426\u4e0e\u76f4\u7ebf\u76f8\u4ea4\uff0c\u5982\u679c\u76f8\u4ea4\uff0c\u5c31\u8981\u770b\u4ea4\u70b9\u662f\u5426\u843d\u5728\u7ebf\u6bb5\u4e0a\u3002\u628a\u4e24\u4e2a\u5207\u70b9\u4e0e\u5207\u7ebf\u7684\u5782\u7ebf\u7684\u622a\u8ddd\u641e\u51fa\u6765\uff0c\u5224\u65ad\u5f53\u524d\u5706\u7684\u5706\u5fc3\u7684\u5782\u7ebf\u7684\u622a\u8ddd\u662f\u5426\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u3002\n\nYL\u5de8\u4f6c\u8bf4\u53ef\u4ee5\u901a\u8fc7\u5411\u91cf\u6765\u641e\uff0c\u7b97\u51fa\u5207\u70b9\u5230\u5706\u5fc3\u8fd9\u4e2a\u5411\u91cf\u5728\u5207\u7ebf\u4e0a\u7684\u6295\u5f71\u957f\u5ea6\uff0c\u5982\u679c\u5c0f\u4e8e\u5207\u7ebf\u6bb5\u957f\u5ea6\u5c31\u8bf4\u660e\u76f8\u4ea4\u4e86\u3002\n\n\u63a5\u7740\uff0c\u5bf9\u540c\u4e00\u4e2a\u5706\u4e0a\u7684\u6240\u6709\u5207\u70b9\u987a\u6b21\u8fde\u8fb9\u6743\u4e3a\u5f27\u957f\u7684\u8fb9\u3002\n\n\u6700\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u3002\n\n~~~~\u7ec6\u8282\u5f88\u591a\uff0c\u5199\u6cd5\u4e0d\u5c3d\u76f8\u540c\uff0c\u5bfc\u81f4\u4ee3\u7801\u592a\u4e11\u4e86\u3002~~~~\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define DB double\n#define RG register\n#define R RG int\nusing namespace std;\nconst DB EPS=1e-9,PI=acos(-1);\nconst int N=503,M=8*N*N;\nint n,p,he[M],ne[2*M],to[2*M];\nDB x[N],y[N],r[N],w[2*M],dis[M];bool vis[M];\nstruct Dat{DB w;int x;inline bool operator<(Dat a)const{return w<a.w;}};\nstruct Nod{DB w;int x;inline bool operator<(Nod a)const{return w>a.w;}}q[M];\nvector<Dat>v[N];\ninline bool Eq(DB x,DB y){\n    return fabs(x-y)<EPS;\n}\ninline DB sqr(DB x){\n    return x*x;\n}\ninline DB Dis(R i,R j){\n    return sqrt(sqr(x[i]-x[j])+sqr(y[i]-y[j]));\n}\ninline DB Ang(DB a){\n    while(a>PI)a-=2*PI;while(a<-PI)a+=2*PI;\n    return a;\n}\ninline bool Cross(DB a,DB b,DB c,DB le,DB ri){\n    if(le>ri)swap(le,ri);\n    DB t=sqr(a)+sqr(b);\n    for(R i=1;i<=n;++i)\n        if(sqr(r[i])*t-sqr(a*x[i]+b*y[i]+c)>EPS){\n            DB tmp=b*x[i]-a*y[i];\n            if(le<=tmp&&tmp<=ri)return 1;\n        }\n    return 0;\n}\ninline void Add(R x,R y,DB z){\n    ne[++p]=he[x];to[he[x]=p]=y;w[p]=z;\n    ne[++p]=he[y];to[he[y]=p]=x;w[p]=z;\n}\nint main(){\n    DB sx,sy,tx,ty,a,b,c,A,B,C,tmp;\n    int id1,id2,p;\n    cin>>sx>>sy>>tx>>ty>>n;\n    for(R i=1;i<=n;++i)cin>>x[i]>>y[i]>>r[i];\n    n+=2;x[n-1]=sx;y[n-1]=sy;x[n]=tx;y[n]=ty;\n    for(R i=1;i<=n;++i)\n        for(R j=1;j<i;++j){\n            bool fl=0;\n            if(r[i]>r[j])swap(i,j),fl=1;\n            A=atan2(y[j]-y[i],x[j]-x[i]);\n            B=asin((r[j]-r[i])/Dis(i,j));\n            for(R tp=0;tp<=1;++tp){\n                C=Ang(A+B*(tp?-1:1));\n                if(Eq(fabs(C),PI/2))a=1,b=0;\n                else a=tan(C),b=-1;\n                tmp=Ang(C+PI/2*(tp?-1:1));\n                c=-a*(x[i]+r[i]*cos(tmp))-b*(y[i]+r[i]*sin(tmp));\n                if(!Cross(a,b,c,b*x[i]-a*y[i],b*x[j]-a*y[j])){\n                    id1=4*(n*(i-1)+j-1)+tp,id2=4*(n*(j-1)+i-1)+tp;\n                    v[i].push_back((Dat){tmp,id1});\n                    v[j].push_back((Dat){tmp,id2});\n                    Add(id1,id2,sqrt(sqr(x[i]-x[j])+sqr(y[i]-y[j])-sqr(r[j]-r[i])));\n                }\n            }\n            B=asin((r[j]+r[i])/Dis(i,j));\n            for(R tp=0;tp<=1;++tp){\n                C=Ang(A+B*(tp?-1:1)); \n                if(Eq(fabs(C),PI/2))a=1,b=0;\n                else a=tan(C),b=-1;\n                tmp=sqrt(sqr(r[i])*(sqr(a)+sqr(b)));\n                c=tmp-a*x[i]-b*y[i];\n                if(!Eq(sqr(r[j])*(sqr(a)+sqr(b)),sqr(a*x[j]+b*y[j]+c)))\n                    c=-tmp-a*x[i]-b*y[i];\n                if(!Cross(a,b,c,b*x[i]-a*y[i],b*x[j]-a*y[j])){\n                    id1=4*(n*(i-1)+j-1)+tp+2,id2=4*(n*(j-1)+i-1)+tp+2;tmp=Ang(C+PI/2*(tp?-1:1));\n                    v[i].push_back((Dat){Ang(tmp+PI),id1});\n                    v[j].push_back((Dat){tmp,id2});\n                    Add(id1,id2,sqrt(sqr(x[i]-x[j])+sqr(y[i]-y[j])-sqr(r[j]+r[i])));\n                }\n            }\n            if(fl)swap(i,j);\n        }\n    for(R i=1;i<=n;++i){\n        if(!v[i].size())continue;\n        sort(v[i].begin(),v[i].end());\n        Add(v[i][v[i].size()-1].x,v[i][0].x,(v[i][0].w-v[i][v[i].size()-1].w+2*PI)*r[i]);\n        for(R unsigned j=1;j<v[i].size();++j)\n            Add(v[i][j-1].x,v[i][j].x,(v[i][j].w-v[i][j-1].w)*r[i]);\n    }\n    memset(dis,127,sizeof(dis));\n    q[p=1]=(Nod){dis[v[n-1][0].x]=0,v[n-1][0].x};\n    while(p){\n        R x=q[1].x;pop_heap(q+1,q+p--+1);\n        if(vis[x])continue;vis[x]=1;\n        for(R y,i=he[x];i;i=ne[i])\n            if(dis[y=to[i]]>dis[x]+w[i])\n                q[++p]=(Nod){dis[y]=dis[x]+w[i],y},push_heap(q+1,q+p+1);\n    }\n    printf(\"%.1lf\\n\",dis[v[n][0].x]);\n    return 0;\n}\n```\n",
        "postTime": 1609997551,
        "uid": 448566,
        "name": "\u6930\u6893\u8f7b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6671 \u3010[\u6e05\u534e\u96c6\u8bad2016] \u5b9a\u5411\u8d8a\u91ce\u3011"
    }
]