[
    {
        "content": "\u6bd4\u8d5b\u65f6 T2 \u5fd8\u5f00 long long \u81ea\u95ed\u4e86\u597d\u957f\u65f6\u95f4\uff0c\u8fd9\u662f\u8d5b\u540e\u5199\u7684\u3002\n\n\u597d\u50cf\u8fd9\u9898\u8fd8\u86ee\u5957\u8def\u7684\uff1f\n\n\u9996\u5148\u6211\u4eec\u5148\u5206\u7c7b\u8ba8\u8bba\uff08\u52a0\u5165\u96c6\u5408 $S$ \u65f6\u5df2\u53d6\u6a21\uff09\uff1a\n\n1. $C\\le i+j<2\\times C$\uff0c\u56e0\u4e3a $0\\le i,j< C$\uff0c\u6240\u4ee5\u53d6\u4e2a\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u5c31\u884c\u4e86\u3002\n\n2. $0\\le i+j<C$\uff0c\u8fd9\u6837\u7684\u8bdd\u6bcf\u4e2a\u6570 $i$ \u4f1a\u6709\u4e00\u4e2a\u6700\u4f73\u5339\u914d $j$\uff0c\u4f7f\u5f97 $i+j$ \u6700\u63a5\u8fd1 $C-1$\u3002\u663e\u7136\u8fd9\u4e2a\u5339\u914d\u662f\u5355\u5411\u7684\u3002\n\n\u82e5\u6b64\u9898\u79bb\u7ebf\uff0c\u90a3\u4e48\u8003\u8651\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u6bcf\u6b21\u52a0\u8fdb\u53bb\u7684\u65f6\u5019\u628a\u8fd9\u4e2a\u6570\u7684\u6700\u4f73\u5339\u914d\u627e\u51fa\u6765\uff0c\u5bf9\u7b54\u6848\u53d6\u4e2a $\\max$\u3002\u65f6\u95f4 $O(n\\log^2 n)$\u3002\n\n\u73b0\u5728\u8003\u8651\u5728\u7ebf\u3002\u82e5\u5220\u9664\u7684\u8bdd\uff0c\u6709\u53ef\u80fd\u8fd9\u4e2a\u6570\u662f\u591a\u4e2a\u6570\u7684\u6700\u4f73\u5339\u914d\uff0c\u90a3\u4e48\u4e00\u6b21\u5220\u9664\u6d89\u53ca\u6700\u591a $O(|S|)$ \u6b21\u91cd\u65b0\u5339\u914d\uff0c\u663e\u7136\u4e0d\u53ef\u53d6\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6362\u4e2a\u89d2\u5ea6\u8003\u8651\uff0c\u53ea\u7ef4\u62a4\u53cc\u5411\u5339\u914d\u7684\u5bf9\u6570\uff0c\u8fd9\u6837\u6bcf\u6b21\u4fee\u6539\u53ea\u6d89\u53ca $O(1)$ \u5bf9\uff0c\u65f6\u95f4\u5c31\u5bf9\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u4e00\u822c\u8fd9\u79cd\u6700\u4f18\u5316\u6570\u5bf9\u7684\u9898\uff0c\u90fd\u662f\u5148\u5f04\u51fa\u4e2a $O(n^2)$ \u7684\u89e3\u6cd5\uff0c\u518d\u770b\u770b\u8fd9\u4e9b\u5bf9\u6570\u662f\u5426\u6ee1\u8db3\u4ec0\u4e48\u9650\u5236\uff0c\u4f7f\u5f97\u67d0\u4e2a\u6570\u5bf9 $(i,j)$ \u4e00\u5b9a\u6bd4 $(j,k)$ \u4f18\uff0c\u8fd9\u4e9b\u6570\u5bf9\u4e00\u5b9a\u5f88\u5c11\u4e14\u4e00\u6b21\u4fee\u6539\u6d89\u53ca\u7684\u5bf9\u6570\u4e0d\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u8fd9\u4e9b\u6570\u5bf9\u3002\n\n\u5047\u8bbe $i$ \u7684\u6700\u4f18\u5339\u914d\u662f $j$\uff0c$j$ \u7684\u6700\u4f18\u5339\u914d\u662f $k$\u3002\u82e5 $i<k$\uff0c\u90a3\u4e48\u53ea\u9700\u8003\u8651 $(j,k)$ \u8fd9\u4e00\u6570\u5bf9\u3002\n\n\u8fd9\u6837\u7684\u6570\u5bf9\u663e\u7136\u6700\u591a $O(n)$ \u4e2a\uff0c\u7528 $\\text{multiset}$ \u7ef4\u62a4\u6700\u4f18\u5339\u914d\uff0c\u65f6\u95f4 $O(n\\log n)$\u3002\n\n\u4e0d\u8fc7\u4f60\u4e00\u6b21\u4fee\u6539\u9700\u8981\u627e\u51fa\u8fd9\u4e2a\u6570\u7684\u6700\u4f18\u5339\u914d\uff0c\u6700\u4f18\u5339\u914d\u7684\u6700\u4f18\u5339\u914d\uff0c\u6700\u4f18\u5339\u914d\u7684\u6700\u4f18\u5339\u914d\u7684\u6700\u4f18\u5339\u914d\uff0c\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u7ec6\u8282\u6709\u4e00\u70b9\u3002\u5efa\u8bae\u753b\u4e2a\u56fe\u628a\u7ec6\u8282\u7406\u6e05\u695a\u518d\u5199\u3002\u8fd8\u6709\uff0c$\\text{stl}$ \u7684\u8fb9\u754c\u8981\u683c\u5916\u5c0f\u5fc3\u3002\n\n\u6700\u77ed\u4ee3\u7801 $\\text{1.13k}$\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,c,sz;\nmultiset<int> a,b;\nmultiset<int>::iterator it;\ninline int best(int x,int op)\n{\n\tif(x==-1) return -1;\n\tit=a.upper_bound(c-1-x);\n\tif(it==a.begin()) return -1;\n\tit--;\n\tif(op==1 && *it==x && a.count(x)==1)\n\t\treturn (it==a.begin())?-1:*--it;\n\telse\n\t\treturn *it;\n}\ninline void insert(int x)\n{\n\tsz++;\n\tif(sz==1) { a.insert(x); return; }\n\tint y=best(x,0),z=best(y,1),w=best(z,1);\n\tif(y!=-1 && z<x)\n\t{\n\t\tif(z!=-1 && y==w) b.erase(b.find(y+z));\n\t\tb.insert(x+y);\n\t}\n\ta.insert(x);\n}\ninline void erase(int x)\n{\n\ta.erase(a.find(x)),sz--;\n\tif(!sz) return;\n\tint y=best(x,0),z=best(y,1),w=best(z,1);\n\tif(y!=-1 && z<x)\n\t{\n\t\tif(z!=-1 && y==w) b.insert(y+z);\n\t\tb.erase(b.find(x+y));\n\t}\n}\ninline int query()\n{\n\tit=--a.end();\n\tif(a.count(*it)>=2) return *it*2%c;\n\telse return (*it+*--it)%c;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&c);\n\tint op,x,lastans=0;\n\twhile(n--)\n\t{\n\t\tscanf(\"%d%d\",&op,&x); x^=lastans;\n\t\tif(op==1) insert(x%c);\n        else erase(x%c);\n\t\tif(sz<2) puts(\"EE\"),lastans=0;\n\t\telse printf(\"%d\\n\",lastans=max(query(),b.empty()?0:*--b.end()));\n\t}\n\treturn 0;\n}\n```\n\n\uff08\u4f30\u8ba1\u6211\u5927\u62ec\u53f7\u4e0d\u6362\u884c\u4f1a\u66f4\u77ed\uff09\n\n\u9898\u51fa\u5f97\u597d\uff01\u96be\u5ea6\u9002\u4e2d\uff0c\u8986\u76d6\u77e5\u8bc6\u70b9\u5e7f\uff0c\u7801\u91cf\u4e0d\u5927\uff0c\u89e3\u6cd5\u6bd4\u8f83\u81ea\u7136\uff0c\u7ed9\u51fa\u9898\u4eba\u70b9\u8d5e\uff01\n\n~~\u5c31\u662f\u6ca1\u5565 gal \u7684\u80cc\u666f\uff0c\u5dee\u8bc4~~\n\nupd: \u597d\u50cf\u4e0d\u80fd\u6bcf\u6b21\u90fd\u8fc7\uff1f",
        "postTime": 1581852401,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6105 \u3010[Ynoi2010]iepsmCmq\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u548cljc\u4e89\u8bba\u4e86\u5feb\u4e00\u4e2a\u5c0f\u65f6\uff0c\u7136\u540e\u6211\u6765\u5199\u4e86\uff08\n\n\u8003\u573a\u4e0a\u6211\u88abT1\u641e\u7761\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff0c\u88abT2\u5361\u5e38\u5361\u4e86\u5feb\u4e00\u4e2a\u5c0f\u65f6\uff0c\u5c31\u6ca1\u65f6\u95f4\u5199\u8fd9\u9898\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\u4e86\u3002\n\n------------\n\n\n\u6211\u4eec\u628a\u52a0\u5165\u7684\u6570\u5168\u90e8$\\bmod \\ C$\n\n\u9996\u5148\u7b54\u6848\u5206\u6210\u4e24\u7c7b\uff0c\u4e00\u7c7b$-C$\uff0c\u4e00\u7c7b\u4e0d$-C$\uff0c\u524d\u8005\u76f4\u63a5\u6c42\u6700\u5927\u503c+\u6b21\u5927\u503c\u5c31\u597d\u4e86\uff0c\u6211\u4eec\u8003\u8651\u540e\u8005\u3002\n\n\u9996\u5148\u5e73\u8861\u6811\u53ef\u4ee5\u8f7b\u677e\u6c42\u51fa\u4e00\u4e2a\u6570$x_1$\u5bf9\u5e94\u7684\u5728\u8fd9\u4e2a\u96c6\u5408\u91cc\u7684$x_2$\uff0c\u6ee1\u8db3$x_1+x_2$\u6700\u63a5\u8fd1$C$\u3002\n\n\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u6bcf\u4e00\u4e2a\u6570\u53ea\u7ef4\u62a4\u4e00\u4e2a\u548c\u6700\u5927\u7684\u5339\u914d\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5220\u9664\u600e\u4e48\u66f4\u65b0\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u5339\u914d\uff0c\u4e00\u4e2a\u6570\u5728\u5e73\u8861\u6811\u91cc\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\n\n\u8003\u8651\u63d2\u5165\u4e00\u4e2a$x_1$\uff0c\u627e\u5230\u90a3\u4e2a$x_2$\uff0c\u5982\u679c$x_2$\u539f\u5148\u5df2\u7ecf\u5339\u914d\u4e0a\u4e86$x_3$\uff0c\u5c31\u770b\u770b$x_1,x_3$\u54ea\u4e2a\u5927\u3002\u5982\u679c$x_3$\u5c0f\u5c31\u6362\u5339\u914d\u3002\n\n\u8003\u8651\u5220\u9664\u4e00\u4e2a$x_1$\uff0c\u5c31\u628a\u539f\u5148\u5339\u914d\u4e0a\u7684$x_4$\u5220\u53bb\uff0c\u518d\u548c\u63d2\u5165\u4e00\u6837\u53bb\u66f4\u65b0\u539f\u5148\u5339\u914d\u4e0a\u7684$x_4$\u3002\n\n\u6211\u4eec\u628a\u5339\u914d\u7684\u503c\u5b58\u5728$\\texttt{multiset}$\u91cc\uff0c\u628a\u5339\u914d\u7684\u4fe1\u606f\u5b58\u5728$\\texttt{unordered\\_map}$\uff0c\u6bcf\u6b21\u5220\u9664\u5c31\u597d\u4e86\u3002\n\n\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u4e0d\u4f1a\u8fde\u9501\u53cd\u5e94\u5417\uff1f\n\n\u5176\u5b9e\u662f\u4e0d\u4f1a\u7684\u3002\u6b64\u65f6\u5982\u679c\u5220\u53bb\u4e86$x_3$\uff0c\u5230\u65f6\u5019$x_1$\u6216$x_2$\u5220\u53bb\u7684\u65f6\u5019\u53c8\u4f1a\u66f4\u65b0\u56de\u6765\u3002\n\n\n\n------------\n\n\u4f60\u4ee5\u4e3a\u8fd9\u4e48\u7b80\u5355\u5417\uff1f\n\n\u6700\u6076\u5fc3\u7684\u5c31\u662f$x\\bmod C$\u53ef\u80fd\u51fa\u73b0\u597d\u51e0\u6b21\uff01RE\uff0cWA\uff0cTLE...\n\n\u8fd9\u6837\u4f60\u5c31\u5728\u63d2\u5165\u66f4\u65b0\u7684\u65f6\u5019\u5c31\u9700\u8981\u75af\u72c2\u8ba8\u8bba\uff0c\u75af\u72c2\u8ba8\u8bba\u3002\u3002\u3002\n\nljc\uff1a\u8981\u4e0d\u8981\u4f60\u5199\u4e00\u4e0b\u8bd5\u8bd5\uff1f\n\n------------\n\n\u8fd9\u662fSTL\u7684\u66f4\u65b0\u90e8\u5206\n\n```cpp\ninline void update(int x){\n\twht=get(x);\n\tif (wht==-1) return;\n\tif (pr.count(x)&&pr.count(wht)){//\u672c\u6765\u4e0d\u9700\u8981\u8fd9\u4e48\u8ba8\u8bba\u7684\uff0c\u4f46\u662f\u8fd9\u9898\u3002\u3002\u3002\n\t\topx=pr[x],opw=pr[wht];\n\t\tif (wht>opx&&x>opw){\n\t\t\tpr.erase(opw),pr.erase(opx);\n\t\t\tpr[wht]=x;pr[x]=wht; \n\t\t\tregister int caca=x+opx,cacb=wht+opw;\n\t\t\tS.erase(S.find(caca));\n\t\t\tif (caca!=cacb) S.erase(S.find(cacb));\n\t\t\tS.insert(x+wht);\n\t\t}\n\t}else if (pr.count(x)){\n\t\topx=pr[x];\n\t\tif (opx<wht){\n\t\t\tpr.erase(opx),pr[wht]=x,pr[x]=wht;\n\t\t\tS.erase(S.find(x+opx)),S.insert(x+wht);\n\t\t}\n\t}else if (pr.count(wht)){\n\t\topw=pr[wht];\n\t\tif (opw<x){\n\t\t\tpr.erase(opw),pr[wht]=x,pr[x]=wht;\n\t\t\tS.erase(S.find(wht+opw)),S.insert(x+wht);\n\t\t}\n\t}else{\n\t\tpr[wht]=x,pr[x]=wht;\n\t\tS.insert(wht+x);\n\t}\n}\n```\nljc\u8bf4\uff0c\u53ef\u4ee5\u4e0d\u7528\u8fd9\u4e48\u5206\u7c7b\u8ba8\u8bba\uff0c\u76f8\u540c\u6570\u7684\u8d21\u732e\u5355\u72ec\u7b97\u5c31\u597d\u4e86\n\n\u8fd9\u6837\u4ee3\u7801\u5c31\u53d8\u5f97\u975e\u5e38\u5c0f\u6e05\u65b0\uff0c\u51e0\u4e4e\u6ca1\u7ec6\u8282\u4e86\u3002\n\n~~\u771f\u5c31\u8fd9\u4e48\u7b80\u5355~~\n\n```cpp\n#include<bits/stdc++.h>\n#define mit map<int,int>::iterator\nusing namespace std;\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\ninline int read(){\n    register int x=0,f=1;char ch=gc();\n    while (!isdigit(ch)){if(ch=='-') f=-1;ch=gc();}\n    while (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=gc();}\n    return (f==1)?x:-x;\n}\nmap<int,int> mp;\nunordered_map<int,int> pr;\nmultiset<int> S;\nset<int> two; \nint wht,opx,opw,n,C,ans,las,opt,x,cnt;\ninline int get(int x){\n\tmit it=mp.lower_bound(C-x);\n\tif (it==mp.begin()) return -1;\n\telse{\n\t\tif ((*--it).first==x){\n\t\t\tif (it==mp.begin()) return -1;\n\t\t\tit--;\n\t\t}\n\t\treturn (*it).first;\n\t}\n}\ninline void update(int x){\n\twht=get(x);\n\tif (wht==-1) return;\n\tif (pr.count(wht)){\n\t\topw=pr[wht];\n\t\tif (opw<x){\n\t\t\tpr.erase(opw),pr[wht]=x,pr[x]=wht;\n\t\t\tS.erase(S.find(wht+opw)),S.insert(x+wht);\n\t\t}\n\t}else{\n\t\tpr[wht]=x,pr[x]=wht;\n\t\tS.insert(x+wht);\n\t}\n}\ninline void add(int x){\n\tmp[x]++;\n\tif (mp[x]==1) update(x);\n\telse if (mp[x]==2){\n\t\tif (2*x<C) two.insert(2*x);\n\t}\n}\ninline void del(int x){\n\tmp[x]--;\n\tif (mp[x]==0){\n\t\tmp.erase(x);\n\t\tif (pr.count(x)){\n\t\t\topx=pr[x];\n\t\t\tpr.erase(opx),pr.erase(x);\n\t\t\tS.erase(S.find(opx+x));\n\t\t\tupdate(opx);\n\t\t}\n\t}else if (mp[x]==1){\n\t\tif (2*x<C) two.erase(2*x);\n\t}\n}\ninline int query(){\n\tans=0;\n\tmit it=(--mp.end());\n\tif ((*it).second>1) ans=(*it).first*2;\n\telse ans=(*it).first+(*--it).first;\n\tans=max(ans%C,(!two.empty()?(*--two.end()):0));\n\tans=max(ans,(!S.empty()?(*--S.end()):0));\n\treturn ans;\n}\nsigned main(){\n\tn=read(),C=read();\n\twhile (n--){\n        opt=read(),x=read();\n\t\tx^=las;\n\t\tif (opt==1) add(x%C),cnt++;\n\t\telse del(x%C),cnt--; \n\t\tif (cnt>1) las=query(),printf(\"%d\\n\",las);\n\t\telse puts(\"EE\"),las=0;\n\t}\n    return 0;\n}\n```\n\n\n\u597d\u4e45\u6ca1\u5199Ynoi\u4e86\u3002\n\n\u4e8b\u5b9e\u8bc1\u660e\u6211STL\u6c34\u5e73\u6781\u5176\u5783\u573e\u3002\n\n\u5c45\u7136\u56e0\u4e3asubtask\u53d6min\u7684\u673a\u5236\u6700\u4f18\u89e3\u4e86\uff1f\uff1f\n\n\u542c\u8bf4\u6709\u4e00\u4e2a\u66f4\u597d\u5199\u66f4\u5feb\u7684\u5199\u6cd5\u3002",
        "postTime": 1581863803,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3  P6105 \u3010[Ynoi2010]iepsmCmq\u3011"
    },
    {
        "content": "[$\\texttt{link}$](https://www.luogu.com.cn/problem/P6105)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u5e38\u6570 $C$\uff0c\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408 $S$\uff0c$n$ \u6b21\u64cd\u4f5c\uff0c\u652f\u6301\u63d2\u5165\u3001\u5220\u9664\uff0c\u6bcf\u6b21\u64cd\u4f5c\u540e\u8be2\u95ee $\\max\\limits_{i,j\\in S\\land i\\ne j}\\{(i+j)\\bmod C\\}$\uff0c\u5f3a\u5236\u5728\u7ebf\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le 5\\times 10^5,1\\le C\\le 1073741823$\n\n## \u9898\u89e3\n\n\u4ee5\u4e0b\u9ed8\u8ba4 $|S|,n$ \u540c\u7ea7\u3002\n\n\u9996\u5148\u53d1\u73b0\u52a0\u5165\u4e00\u4e2a\u6570\u7684\u65f6\u5148\u5bf9\u5b83\u53d6\u6a21\u4e0d\u5f71\u54cd\u6b63\u786e\u6027\uff0c\u4e5f\u4fbf\u4e8e\u5904\u7406\u3002\n\n\u7136\u540e\u601d\u8003\u4e0b\u8fd9\u4e2a\u6a21 $C$ \u610f\u4e49\u4e0b\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u53d1\u73b0\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\uff1a\n- \u5f53 $C\\le i+j\\le 2\\times C$ \u65f6\uff0c\u4ece\u96c6\u5408\u4e2d\u53d6\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u51fa\u6765\u5373\u53ef\u3002\n- \u5f53 $0\\le i+j < C$ \u65f6\uff0c\u53ef\u4ee5\u60f3\u5230\u4e2a\u66b4\u529b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $x\\in S$\uff0c\u627e\u5230 $\\max\\limits_{y\\in S\\land x\\ne y}((x+y)\\bmod C)$\uff0c\u5728\u8fd9\u4e9b\u503c\u4e2d\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u7b2c\u4e00\u7c7b\u60c5\u51b5 simple\uff0c\u6211\u4eec\u53ea\u770b\u7b2c\u4e8c\u7c7b\u3002\n\n$y$ \u5176\u5b9e\u5c31\u662f $C-1-x$ \u7684\u524d\u9a71\uff0c\u53ef\u4ee5 $O(\\log n)$ \u6c42\u5f97\uff0c\u800c\u8fd9\u4e2a\u5339\u914d\u662f\u5355\u5411\u7684\uff0c\u590d\u6742\u5ea6 $O(n^2\\log n)$\u3002\n\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6709\u8bb8\u591a\u7684\u5339\u914d\u662f\u4e0d\u4f18\u7684\uff0c\u4f46\u6211\u4eec\u90fd\u8003\u8651\u4e86\u8fdb\u53bb\uff0c\u6bcf\u6b21\u63d2\u5165\u5220\u9664\u8981\u66f4\u65b0\u7684\u4e2a\u6570\u7ea7\u522b\u662f $O(n)$ \u7684\uff0c\u8003\u8651\u7ef4\u62a4\u66f4\u5c11\u7684\u5339\u914d\u3002\n\n\u6709\u4e2a\u7ed3\u8bba\uff0c\u82e5 $x$ \u7684\u6700\u4f18\u5339\u914d\u662f $y$\uff0c$y$ \u7684\u6700\u4f18\u5339\u914d\u662f $z$\uff0c\u90a3\u4e48 $(x+y)\\bmod C$ \u4e0d\u5982 $(y+z)\\bmod C$\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u8bc1\u660e\u4e5f\u5f88\u663e\u7136\uff0c\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u8bf4\u660e $y$ \u6709\u66f4\u597d\u7684\u9009\u62e9\u3002\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u63a8\u51fa\u53ea\u7528\u7ef4\u62a4\u6240\u6709\u53cc\u5411\u7684\u5339\u914d\u5373\u53ef\uff0c\u6bcf\u6b21\u63d2\u5165\u5220\u9664\u8981\u66f4\u65b0\u7684\u6570\u5c31\u53d8\u6210 $O(1)$ \u7684\u4e86\u3002\n\n\u4e8e\u662f\u6bcf\u6b21\u63d2\u5165 $x$ \u8003\u8651\u5176\u6700\u4f18\u5339\u914d $y$\uff0c\u770b $x$ \u662f\u5426\u80fd\u5bf9 $y$ \u7684\u5339\u914d\u4ea7\u751f\u5f71\u54cd\uff0c\u5220\u9664\u76f8\u5f53\u4e8e\u91cd\u65b0\u63d2\u5165 $y$\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log n)$ \u7684\u3002\n\n\u56e0\u4e3a\u63d2\u5165\u96c6\u5408\u540e\u5bf9 $C$ \u53d6\u6a21\u4e86\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u6709\u91cd\u590d\uff0c\u7528 STL \u7684 `multiset` \u5c31\u597d\uff0c\u6ce8\u610f\u627e\u5339\u914d\u65f6\u53ef\u80fd\u4f1a\u627e\u56de\u81ea\u5df1\uff0c\u8981\u5224\u6389\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define IT multiset<int>::iterator\nusing namespace std;\nmultiset<int> s, pr;\nint n, c;\nint mat(int x, bool t) {\n\tif(!~x) return -1;\n\tIT it = s.upper_bound(c - 1 - x);\n\tif(it == s.begin()) return -1;\n\t--it;\n\tif(t && *it == x && s.count(x) == 1)\n\t\treturn it == s.begin() ? -1 : *--it;\n\treturn *it;\n}\nvoid ins(int x) {\n\tif(s.empty()) { s.insert(x); return; }\n\tint y = mat(x, 0), z = mat(y, 1), w = mat(z, 1);\n\tif(~y && x > z) {\n\t\tif(~z && y == w) pr.erase(pr.find(y + z));\n\t\tpr.insert(x + y);\n\t}\n\ts.insert(x);\n}\nvoid del(int x) {\n\ts.erase(s.find(x));\n\tif(s.empty()) return;\n\tint y = mat(x, 0), z = mat(y, 1), w = mat(z, 1);\n\tif(~y && x > z) {\n\t\tif(~z && y == w) pr.insert(y + z);\n\t\tpr.erase(pr.find(x + y));\n\t}\n}\nint qry() {\n\tint res;\n\tIT it = --s.end();\n\tif(s.count(*it) >= 2) res = *it * 2 % c;\n\telse res = (*it + *--it) % c;\n\tif(!pr.empty()) res = max(*--pr.end(), res);\n\treturn res;\n}\nint main() {\n\tscanf(\"%d%d\", &n, &c);\n\tint opt, x, last = 0;\n\twhile(n--) {\n\t\tscanf(\"%d%d\", &opt, &x);\n\t\tx = (x ^ last) % c;\n\t\tif(opt == 1) ins(x);\n\t\telse del(x);\n\t\tif(s.size() < 2) puts(\"EE\"), last = 0;\n\t\telse printf(\"%d\\n\", last = qry());\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1637302103,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6105 [Ynoi2010] y-fast trie"
    },
    {
        "content": "\u597d\u50cf\u662f\u4e00\u4e2a\u65b0\u601d\u8def\uff0c\u6240\u4ee5\u6765\u5199\u9898\u89e3\u3002\n\n___\n\n\u4e0d\u96be\u60f3\u5230\u5bf9\u4e8e $i+j<c$ \u4e0e $i+j\\ge c$ \u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u5f88\u660e\u663e\u7b2c\u4e8c\u7c7b\u7684\u6700\u5927\u503c\u662f\u5e73\u51e1\u7684\u2014\u2014\u6211\u4eec\u53ea\u9700\u8981\u5c06\u96c6\u5408\u4e2d\u6700\u5927\u7684\u4e24\u4e2a\u6570\u53d6\u51fa\u6765\u5373\u53ef\u3002\n\n\u8003\u8651\u7b2c\u4e00\u7c7b\u8d21\u732e\uff0c\u5176\u4ed6\u9898\u89e3\u7684\u60f3\u6cd5\u662f\u7ef4\u62a4\u53cc\u5411\u7684\u6700\u4f18\u5339\u914d\uff0c\u4f46\u662f\u4ed4\u7ec6\u60f3\u60f3\u4f1a\u53d1\u73b0\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u7ed3\u8bba\u2014\u2014\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u5fc5\u7136\u5728\u503c\u57df\u4e0a\u5b58\u5728**\u4e00\u6bb5\u533a\u95f4**\uff0c\u4f7f\u5f97\u5728\u8fd9\u6bb5\u533a\u95f4\u5185\u7684\u6570\u90fd\u4e0e\u8fd9\u4e2a\u6570\u5339\u914d\u6700\u4f18\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7684\u60f3\u6cd5\u5c31\u53d8\u6210\u4e86\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u7ef4\u62a4\u5728\u5b83\u8fd9\u6bb5\u6700\u4f18\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\uff08\u5982\u679c\u8fd9\u6bb5\u533a\u95f4\u5185\u6ca1\u6709\u6570\u5c31\u662f $-\\text{inf}$\uff09\u3002\u7136\u540e\u5c06\u6bcf\u4e00\u4e2a\u6570\u7684\u7b54\u6848\u653e\u8fdb\u53ef\u5220\u5806\u91cc\u5373\u53ef\u3002\n\n\u73b0\u5728\u8003\u8651\u5982\u4f55\u4fee\u6539\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8fd9\u6837\u60f3\u7684\u8bdd\uff0c\u4fee\u6539\u4e5f\u662f\u975e\u5e38\u7b80\u5355\u7684\u2014\u2014\n\n- \u5bf9\u4e8e\u63d2\u5165\uff0c\u76f8\u5f53\u4e8e\u5206\u88c2\u4e00\u4e2a\u5df2\u6709\u7684\u533a\u95f4\uff0c\u5e76\u4e14\u66f4\u65b0\u8fd9\u4e00\u4e2a\u6570\u6240\u5728\u7684\u53e6\u4e00\u4e2a\u6570\u7684\u6700\u4f18\u533a\u95f4\u7684\u7b54\u6848\u3002\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u90fd\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u5e73\u8861\u6811\uff08set / map\uff09 \u6765\u7ef4\u62a4\u3002\n\n- \u5bf9\u4e8e\u5220\u9664\uff0c\u57fa\u672c\u540c\u7406\uff0c\u53ea\u4e0d\u8fc7\u53d8\u6210\u4e86\u5408\u5e76\u533a\u95f4\u3002\n\n\u56e0\u4e3a\u6bcf\u4e00\u6b21\u4fee\u6539\u53ea\u4f1a\u6267\u884c $O(1)$ \u6b21\u5e73\u8861\u6811\u64cd\u4f5c\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $O(n\\log n)$\u3002\n\n___\n\n\u4f46\u662f\u8fd9\u5c31\u5b8c\u4e86\u5417\uff1f\u8fdc\u8fdc\u6ca1\u6709\u3002\n\n\u9996\u5148\uff0c\u4e0d\u8981\u5929\u771f\u7684\u4ee5\u4e3a\u63d2\u5165\u7684\u6570\u90fd\u4e92\u4e0d\u76f8\u540c\uff0c $\\text{mod }C$ \u4e4b\u540e\u5c31\u53ef\u80fd\u76f8\u540c\u4e86\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u8ba8\u8bba\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7528 map \u8bb0\u5f55\u4f1a\u597d\u4e00\u4e9b\u3002\n\n\u7136\u540e\uff0c\u56e0\u4e3a\u4e00\u4e2a\u6570\u4e0d\u80fd\u4e0e\u81ea\u5df1\u5339\u914d\uff0c\u6240\u4ee5\u6c42\u5b83\u6700\u4f18\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u65f6\u8981\u5c06\u81ea\u5df1\u6392\u9664\u6389\u3002\n\n\u6700\u540e\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u505a\u6cd5\u5e38\u6570\u662f\u771f\u7684\u5f88\u5927\u3002\u6240\u4ee5\u4f60\u9700\u8981\uff1a\n\n- \u5c3d\u91cf\u901a\u8fc7\u7279\u5224\u51cf\u5c11\u4f60\u7684\u5e73\u8861\u6811\u64cd\u4f5c\u3002\n\n- \u901a\u8fc7 set \u5305\u542b\u7684\u7ed3\u6784\u4f53\u5185\u90e8\u53d8\u91cf\u7684 mutable \u4fee\u9970\u7b26\u5c06\u533a\u95f4\u7684\u5220\u9664\u518d\u63d2\u5165\u53d8\u6210\u76f4\u63a5\u4fee\u6539\u3002\uff08\u91cd\u8981\uff01\uff09 \n\n\u6700\u540e\u4e00\u6b21\u5927\u6539\u524d\u7684\u4ee3\u7801\uff0867pts\uff09\uff1a\n\n```cpp\n#include <map>\n#include <set>\n#include <queue>\n#include <cstdio>\nconst int Mxdt = (1<<16);\ninline char pc(char ch,bool bj) {\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf+Mxdt;\n\treturn ((bj)||(*p1++=ch)&&p1==p2)&&fwrite(p1=buf,1,p1-buf,stdout),0;\n}\nvoid print(int x) {\n\tif(x>9)print(x/10);\n\tpc(x%10^48,false);\n}\ninline void printnum(int x,int ch) {\n\tif(x < 0)pc('-',false),x=-x;\n\tprint(x),pc(ch,false);\n}\nchar gc() {\n\tstatic char buf[1<<16],*S,*T;\n\tif(T==S) {\n\t\tT=(S=buf)+fread(buf,1,1<<16,stdin);\n\t\tif(T==S) return EOF;\n\t}\n\treturn *S++;\n}\n#define getchar gc\ninline int re() {\n\tchar C;\n\twhile((C=getchar())>'9'||C<'0');\n\tint res = C-'0';\n\twhile((C=getchar())>='0'&&C<='9')res = res*10+C-'0';\n\treturn res;\n}\nconst int inf = 1073741824;\ninline int max(int a,int b){return a>b?a:b;}\nint n,C,ty,v,lstans,tv,Cnt;\nstruct Heap {\n\tstd :: priority_queue <int> q1,q2;\n\tvoid ins(int x) {q1.push(x);}\n\tvoid del(int x) {q2.push(x);}\n\tint top() {while(q1.top() == q2.top())q1.pop(),q2.pop();return q1.top();}\n} H;//\u53ef\u5220\u5806\nstruct Int{\n\tint l,r;\n\tmutable int mx;\n\tInt(int L=0,int R=0,int Mx=0):l(L),r(R),mx(Mx){};\n\tbool operator <(const Int &b)const{return r<b.r;}\n};\nstd :: set<Int> s1;\nstd :: map<int,int> s2;\nstd :: set<Int> :: iterator it;\nstd :: map<int,int> :: iterator tp;\n//\u503c\u57df [l,r] \u5185\u6700\u5927\u7684\u4e0d\u7b49\u4e8e v \u7684\u6570\u3002\nint Maxlr(const int &l,const int &r,const int &v){\n\tif(r == C)return -inf;\n\ttp = s2.upper_bound(r);\n\tif(tp == s2.begin())return -inf;\n\t--tp;\n\tif(tp->first < l)return -inf;\n\tif(tp->first == v && tp -> second == 1){\n\t\tif(tp == s2.begin())return -inf;\n\t\t--tp;\n\t}\n\treturn (tp->first<l?-inf:tp->first);\n}\nint mapMax(){\n\ttp = --s2.end();\n\tif(tp->second >= 2)return 2*tp->first;\n\tint v = tp->first;\n\t--tp;return v+tp->first;\n}//\u6700\u5927\u503c+\u6b21\u5927\u503c\u3002\nint main() {\n\tn = re(),C = re(),s1.insert(Int(0,C,-inf)),H.ins(-inf);\n\tstatic const int mod = C;\n\twhile(n--){\n\t\tty = re(),v = (re()^lstans)%mod;\n\t\tif(ty == 1){\n        //\u5982\u679c\u51fa\u73b0\u4e86\u4e24\u6b21\u4ee5\u4e0a\uff0c\u6539\u52a8\u5c31\u4e0d\u6709\u5f71\u54cd\u3002\u5220\u9664\u540c\u7406\u3002\n\t\t\tint V = ++s2[v];++Cnt;\n\t\t\tif(V == 2){\n\t\t\t\tit = s1.lower_bound(Int(0,v,0));\n\t\t\t\tif(it -> r != C)\n\t\t\t\t\tif(it->mx-(C-it->r-1) < v)\n\t\t\t\t\t\tH.del(it -> mx),H.ins(it->mx=C-it->r-1+v);\n\t\t\t}\n\t\t\tif(V == 1){\n\t\t\t\tit = s1.lower_bound(Int(0,v,0));\n\t\t\t\tif(it -> r != C)\n\t\t\t\t\tif(it->mx-(C-it->r-1) < v)H.del(it -> mx),H.ins(it->mx=C-it->r-1+v);\n                    \t\t//\u53ea\u6709\u7b2c\u4e00\u6b21\u63d2\u5165\u9700\u8981\u5206\u88c2\n\t\t\t\tit = s1.lower_bound(Int(0,C-v-1,0));\n\t\t\t\tInt tmp = *it;H.del(tmp.mx),s1.erase(it);\n\t\t\t\ts1.insert(Int(tmp.l,C-v-1,tv=Maxlr(tmp.l,C-v-1,v)+v)),H.ins(tv);\n\t\t\t\tif(tmp.mx-(C-tmp.r-1) < C-v)s1.insert(Int(C-v,tmp.r,tv=-inf)),H.ins(tv);\n\t\t\t\telse s1.insert(Int(C-v,tmp.r,tv=tmp.mx)),H.ins(tv);\n\t\t\t}\n\t\t}\n\t\tif(ty == 2){\n\t\t\tint V = --s2[v];--Cnt;\n\t\t\tif(V == 1){\n\t\t\t\tit = s1.lower_bound(Int(0,v,0));\n\t\t\t\tif(it -> r != C)H.del(it -> mx),H.ins(it->mx=C-it->r-1+Maxlr(it->l,it->r,C-it->r-1));\n\t\t\t}\n\t\t\tif(V == 0){\n\t\t\t\ts2.erase(s2.find(v));\n\t\t\t\tit = s1.lower_bound(Int(0,v,0));\n\t\t\t\tif(it -> r != C)H.del(it -> mx),H.ins(it->mx=C-it->r-1+Maxlr(it->l,it->r,C-it->r-1));\n\t\t\t\tit = s1.lower_bound(Int(0,C-v-1,0));\n\t\t\t\tInt tmp = *it,tmp1;\n\t\t\t\tH.del(tmp.mx),++it,s1.erase(tmp);\n\t\t\t\ttmp1 = *it,s1.erase(it),H.del(tmp1.mx);\n\t\t\t\tif(tmp1.mx > 0)s1.insert(Int(tmp.l,tmp1.r,tv=tmp1.mx)),H.ins(tv);\n\t\t\t\telse s1.insert(Int(tmp.l,tmp1.r,tv=C-tmp1.r-1+Maxlr(tmp.l,tmp1.r,C-tmp1.r-1))),H.ins(tv);\n\t\t\t}\n\t\t}\n\t\tif(Cnt < 2)pc('E',0),pc('E',0),pc('\\n',0),lstans = 0;\n\t\telse printnum(lstans=(max(H.top(),mapMax()%mod)),'\\n');\n\t}\n\treturn pc('L',1);\n}\n```",
        "postTime": 1626873234,
        "uid": 114153,
        "name": "Sali\u0435ri",
        "ccfLevel": 7,
        "title": "y-fast trie \u9898\u89e3"
    },
    {
        "content": "**\u9898\u610f\uff1a**\n\n\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u652f\u6301\u96c6\u5408\u4e2d\u4e00\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- 1. \u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff08\u96c6\u5408\u4e2d\u4ee5\u524d\u6ca1\u6709\u8fd9\u4e2a\u5143\u7d20\u7684\u60c5\u51b5\u4e0b\uff09\n\n- 2. \u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff08\u96c6\u5408\u4e2d\u6709\u8fd9\u4e2a\u5143\u7d20\u7684\u60c5\u51b5\u4e0b\uff09\n\n\u64cd\u4f5c\u5b8c\u6bd5\u540e\uff0c\u8f93\u51fa\u968f\u610f\u4e24\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u4e4b\u548c\u7684\u6700\u5927\u503c\uff0c\u6a21 $C$\u3002\u82e5\u96c6\u5408\u957f\u5ea6 $< 1$\uff0c\u5373\uff0c\u4e0d\u8db3\u4e24\u4e2a\u6570\u5b57\uff0c\u5219\u8f93\u51fa `EE`\u3002\u6bcf\u6b21\u8f93\u5165\u9700\u8981\u5f02\u6216\u4e0a\u6b21\u7684\u7b54\u6848\u3002\n\n**\u601d\u8def\uff1a**\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002$O(nlog^2n)$\n\n\u53ef\u60dc\u9898\u76ee\u8981\u6c42\u5f3a\u5236\u5728\u7ebf\u3002\u6240\u4ee5\u6211\u4eec\u6362\u4e2a\u65b9\u6cd5\uff0c\u7528 $multiset$\uff0c\u6c42\u89e3\u65f6\u5206\u4e24\u7c7b\uff1a\n\n- $i+j$\uff08\u96c6\u5408\u4e2d\u968f\u610f\u4e24\u4e2a\u5143\u7d20\uff09\u5fc5\u987b $\\ge C$\uff0c\u5e76\u4e14 $< 2C$\uff0c\u6c42\u51fa\u6700\u5927\u503c\u548c\u7b2c\u4e8c\u5927\u503c\u4e4b\u548c\u5373\u53ef\u3002\u56e0 $0 \\le i,j < C$\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u89e3\u6210\u7acb\u3002\n\n- $i+j$ \u5927\u4e8e\u7b49\u4e8e0\uff0c\u5c0f\u4e8e $C$\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u7ef4\u62a4\u6240\u8c13\u7684 $i$ \u6700\u4f73\u5339\u914d\u7684 $j$\uff08\u8ba9\u8fd9\u4e24\u4e2a\u5143\u7d20\u7684\u548c\u63a5\u8fd1$C$\uff09\u3002\n\n$i$ \u7684\u6700\u4f73\u5339\u914d\u53ef\u4ee5\u7528 $multiset$ \u7ef4\u62a4\uff0c\u5220\u9664\u64cd\u4f5c\u590d\u6742\u5ea6 $O(length(set))$\uff0c\u5982\u679c\u6240\u6709\u60c5\u51b5\u90fd\u8003\u8651\u7684\u8bdd\u592a\u5e9f\u65f6\u95f4\u4e86\uff0c\u6240\u4ee5\u9700\u8981\u505a\u4f18\u5316\u3002\n\n\n\u7ef4\u62a4 $i$ \u7684\u6700\u4f18\u5339\u914d $j$ \u65f6\uff0c\u6709\u4e00\u4e2a\u60c5\u51b5\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e9b\u914d\u5bf9\u5ffd\u7565\u3002\n\n\u6211\u4eec\u60f3\u4e00\u4e0b\uff0c\u4e00\u4e2a\u6570 $a$\uff0c\u6700\u4f73\u5339\u914d\u4e3a $b$\uff0c\u800c $b$ \u6700\u4f73\u5339\u914d\u4e3a $c$\uff0c\u4e14 $c$ \u5927\u4e8e $a$\uff0c\u663e\u7136\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c3d\u53ef\u80fd\u5927\uff0c\u53ef\u4ee5\u7701\u53bb\u6389\u524d\u9762\u7684\u90a3\u4e24\u4e2a\u6570\uff0c\u4f7f\u7528 $b,c$ \u8fd9\u4e24\u4e2a\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u4ece $O(length(set))$ \u4f18\u5316\u5230\u4e86 $O(nlogn)$\u3002\n\n**\u6ce8\u610f\u4e8b\u9879\uff1a**\n\n- \u8fd9\u9898\u4e2d\u53d6 $a$ \u7684\u6700\u4f18\u5339\u914d\u7684\u6700\u4f18\u5339\u914d\u7684\u65f6\u5019\uff0c\u5bb9\u6613\u628a\u53d8\u91cf\u641e\u6df7\uff0c\u52a0\u500d\u6ce8\u610f\u3002\n\n- \u8bb0\u4f4f\uff0c\u5982\u679c\u8f93\u51fa\u4e86 `EE`\uff0c\u4e00\u5b9a\u8981\u628a\u4e0a\u6b21\u7b54\u6848\u53d8\u91cf\u8bbe\u4e3a $0$\uff0c\u5176\u4ed6\u60c5\u51b5\u4e5f\u8981\u5f02\u6216\u4e0a\u6b21\u7b54\u6848+\u8bbe\u4e0a\u6b21\u7b54\u6848\u53d8\u91cf\u4e3a\u8fd9\u6b21\u7b54\u6848\u3002\n\n- `\u672c\u9898\u8bfb\u5165\u91cf\u7ea6 6 MB\uff0c\u8f93\u51fa\u91cf\u7ea6 5 MB\uff0c\u8bf7\u9009\u62e9\u9002\u5408\u7684\u8f93\u5165\u8f93\u51fa\u65b9\u6cd5` lxl\u7684\u51c9\u5fc3\u63d0\u9192\uff0c\u6211\u9009\u62e9cin\u52a0\u901f\uff0c\u4f60 \u81ea \u5df1 \u770b \u7740 \u529e\u3002\n\n- \u6709\u53ef\u80fd\u4f1a\u4e00\u7247RE\uff0c\u67e5\u4e00\u4e0b\u4f60\u7684\u51fd\u6570\u6709\u6ca1\u6709\u8fd4\u56de\u503c\uff0c$multiset$ \u987a\u5e8f\u662f\u5426\u6b63\u786e\n\n**\u4ee3\u7801\uff1a**\n\n```\n/* by JS */\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXN = 10005;\n\nint len, n, c, lans;\n\nmultiset<int> mst1, mst2;\n\nstruct kafuu_chino {\n\n    static inline int ask1(register int d) {\n        if (d == -1) return -1;\n        if (mst1.begin() == mst1.upper_bound(c - d - 1)) return -1;\n        multiset<int>::iterator mst3;\n        mst3 = mst1.upper_bound(c - d - 1);\n        --mst3;\n        if (*mst3 == d && mst1.count(d) == 1) {\n            if (mst3 == mst1.begin()) return -1;\n            else return *--mst3;\n        } else return *mst3;\n    }\n\n    static inline int ask2(register int d) {\n        if (d == -1) return -1;\n        if (mst1.begin() == mst1.upper_bound(c - d - 1)) return -1;\n        multiset<int>::iterator mst3;\n        mst3 = mst1.upper_bound(c - d - 1);\n        --mst3;\n        return *mst3;\n    }\n\n    inline void add(register int d) {\n        ++len;\n        if (len == 1) {\n            mst1.insert(d);\n            return;\n        }\n        register int tmp1 = ask2(d), tmp2 = ask1(tmp1), tmp3 = ask1(tmp2);\n        mst1.insert(d);\n        if (tmp2 < d && tmp1 != -1) {\n            if (tmp2 != -1 && tmp1 == tmp3) {\n                mst2.erase(mst2.find(tmp1 + tmp2));\n            }\n            mst2.insert(tmp1 + d);\n        }\n    }\n\n    inline void del(register int d) {\n        --len;\n        _Rb_tree_const_iterator<int> pos = mst1.find(d);\n        mst1.erase(pos);\n        if (len == 0) return;\n        register int tmp1 = ask2(d), tmp2 = ask1(tmp1), tmp3 = ask1(tmp2);\n        if (tmp2 < d && tmp1 != -1) {\n            if (tmp2 != -1 && tmp1 == tmp3) {\n                mst2.insert(tmp1 + tmp2);\n            }\n            mst2.erase(mst2.find(tmp1 + d));\n        }\n    }\n} qwq;\n\ninline void solve() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    cin >> n >> c;\n    for (register int i = 1; i <= n; ++i) {\n        register int op, x;\n        cin >> op >> x;\n        x ^= lans;\n        if (op == 1) {\n            x %= c;\n            qwq.add(x);\n        }\n        if (op == 2) {\n            x %= c;\n            qwq.del(x);\n        }\n        if (len <= 1) {\n            cout << \"EE\\n\";\n            lans = 0;\n        } else {\n            if (mst2.empty()) {\n                auto mst3 = --mst1.end();\n                register int res;\n                if (mst1.count(*mst3) > 1) {\n                    res = *mst3 * 2 % c;\n                } else {\n                    res = (*mst3 + *--mst3) % c;\n                }\n                cout << max(res, 0) << '\\n';\n                lans = max(res, 0);\n            } else {\n                register int query;\n                auto mst3 = --mst1.end();\n                if (mst1.count(*mst3) > 1) {\n                    query = *mst3 * 2 % c;\n                } else {\n                    query = (*mst3 + *--mst3) % c;\n                }\n                cout << max(query, *--mst2.end()) << '\\n';\n                lans = max(query, *--mst2.end());\n            }\n        }\n    }\n}\n\nint main() {\n    solve();\n    return 0;\n}\n\n```\n\n\n\n**\u6700\u540e\uff1a** ~~\u8c14\u8c14\u6211~~\n",
        "postTime": 1608120252,
        "uid": 298325,
        "name": "Marshadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6105 \u3010[Ynoi2010]y-fast trie\u3011"
    },
    {
        "content": "\n\n\u6309\u7167\u4f20\u7edf\u5148\u53d6\u6a21\uff0c\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n$1.$ $C  \\leq(i + j) \\leq 2 \\times C$\uff0c\u53d6\u6700\u5927\u503c + \u6b21\u5927\u503c\u5c31\u597d\u4e86\u3002\n\n$2.$ $0 \\leq (i + j) \\leq C - 1$\uff0c\u90a3\u4e48\u7b54\u6848\u5728\u6bcf\u4e2a $i$ \u6700\u4f18\u7684 $j$ \u53d6\u5230\u3002\n\n\u8003\u8651\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\n\n\u4e00\u4e2a\u6bd4\u8f83 simple \u7684\u60f3\u6cd5\u662f\u7ef4\u62a4\u6bcf\u4e2a $i$ \u7684\u6700\u4f18\u5339\u914d $j$\uff08\u6ce8\u610f\u5230\u8fd9\u662f\u5355\u5411\u7684\uff09\uff0c\u7528 $\\text{multiset}$ \u7ef4\u62a4\uff0c\u4f46\u8fd9\u6837\u5220\u9664\u4f1a\u88ab\u5361\u5230 $O(|S|)$\u3002\n\n\u5bf9\u4e0a\u8ff0\u505a\u6cd5\u8fdb\u884c\u4f18\u5316\uff0c\u51cf\u5c0f\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u96c6\u5408\u3002\n\n\u672c\u9898\u5173\u952e\u5728\u4e8e\uff0c\u5982\u679c\u4f60\u8981\u52a0\u5165/\u5220\u9664\u4e00\u4e2a\u6570 $x1$\uff0c\u5176\u6700\u4f18\u5339\u914d\u4e3a $x2$ \uff0c\u9700\u8981\u7528\u8fd9\u4e24\u4e2a\u6570\u6392\u9664\u6389\u4e0d\u4f18\u7684\u51b3\u7b56\u3002\n\n\u8fd9\u4e9b\u51b3\u7b56\u4e00\u5b9a\u81f3\u4e8e $x1,x2$ \u76f8\u5173\uff0c\u8bbe $x2$ \u7684\u6700\u4f18\u5339\u914d\u4e3a $x3$\uff0c\u82e5 $x1 > x3$\uff0c\u5219 $(x2 , x3)$ \u662f\u65e0\u7528\u7684\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u4fdd\u7559\u7684\u5339\u914d\u4e2a\u6570\u662f $O(n)$ \u7ea7\u7684\u3002\n\n\u4e5f\u8bb8\u4f1a\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5220\u9664\u4ea7\u751f\u4e86\u8fde\u9501\u53cd\u5e94\u600e\u4e48\u529e\uff1f\n\n\u6ce8\u610f\u5230\u53ef\u80fd\u7684\u51b3\u7b56\u96c6\u5408\u53d8\u5316\u5927\u5c0f\u59cb\u7ec8\u4e0d\u8d85\u8fc7 $1$ \uff0c\u800c\u6570\u96c6\u662f\u4e0d\u53ef\u91cd\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u51b3\u7b56\u96c6\u5408\u7684\u5143\u7d20\u7528\u5230\u7684\u65f6\u5019\u4e00\u5b9a\u5bf9\u5e94\u7740\u6570\u96c6\u7684\u53d8\u5316\u3002\n\n\u7528\u4e24\u4e2a $\\text{multiset}$ \u5206\u522b\u7ef4\u62a4\u6570\u96c6\u4e0e\u51b3\u7b56\u96c6\u5408\uff0c\u5b9e\u73b0\u6709\u4e00\u4e9b\u7ec6\u8282\uff08\u6ce8\u610f $\\text{multiset}$ \u7684 count\u51fd\u6570\u590d\u6742\u5ea6\u662f\u9519\u7684\uff09\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\u5b9e\u73b0\uff0c\u53c2\u8003\u4e86 Owen_codeisking \u7684\u4ee3\u7801\u3002\n\n```cpp\n#include <set>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\ninline int read() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile(c < '0' || c > '9') {\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\nusing namespace std;\n\nint n , C;\n\nmultiset <int> s1 , s2;\n\n// s1 : num , s2 : pair\n\nmultiset <int> ::iterator it;\n\ninline int get_pair(int x , int o) {\n\tif(x == -1)\n\t\treturn -1;\n\tit = s1.upper_bound(C - x - 1);\n\tif(it == s1.begin())\n\t\treturn -1;\n\t--it;\n\tif(o == 1 && *it == x && s1.count(x) == 1) {\n\t\tif(it == s1.begin())\n\t\t\treturn -1;\n\t\treturn *--it;\n\t} else\n\t\treturn *it;\n}\n\nint cnt = 0;\n\ninline void insert(int x1) {\n\tcnt++;\n\tif(cnt == 1) {\n\t\ts1.insert(x1);\n\t\treturn;\n\t}\n\tint x2 = get_pair(x1 , 0);\n\tint x3 = get_pair(x2 , 1);\n\tint x4 = get_pair(x3 , 1);\n\tif(x2 != -1 && x1 > x3) {\n\t\tif(x3 != -1 && x2 == x4)\n\t\t\ts2.erase(s2.find(x2 + x3));\n\t\ts2.insert(x1 + x2);\n\t}\n\ts1.insert(x1);\n}\n\ninline void erase(int x1) {\n\tcnt--;\n\ts1.erase(s1.find(x1));\n\tif(!cnt)\n\t\treturn;int x2 = get_pair(x1 , 0);\n\tint x3 = get_pair(x2 , 1);\n\tint x4 = get_pair(x3 , 1);\n\tif(x2 != -1 && x1 > x3) {\n\t\tif(x3 != -1 && x2 == x4)\n\t\t\ts2.insert(x2 + x3);\n\t\ts2.erase(s2.find(x1 + x2));\n\t}\n}\n\ninline int query(){\n\tit = --s1.end();\n\tint num = *it;\n\ts1.erase(it);\n\tif(s1.find(num) != s1.end()){\n\t\ts1.insert(num);\n\t\treturn num * 2 % C;\n\t}\n//\tif(s1.count(*it) >= 2)\n//\t\treturn *it * 2 % C;\n\telse{\n\t\ts1.insert(num);\n\t\tit = --s1.end();\n\t\treturn (*it + *--it) % C;\n\t}\n}\n\nint main() {\n\tn = read() , C = read();\n\tint lstans = 0;\n\twhile(n--) {\n\t\tint opt = read() , x = (read() ^ lstans) % C;\n\t\tif(opt == 1)\n\t\t\tinsert(x);\n\t\telse\n\t\t\terase(x);\n\t\tif(cnt < 2){\n\t\t\tputs(\"EE\");\n\t\t\tlstans = 0;\n\t\t}\n\t\telse{\n\t\t\tlstans = max(query() , s2.empty() ? 0 : *--s2.end());\n\t\t\tprintf(\"%d\\n\" , lstans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1607866221,
        "uid": 145078,
        "name": "RainSong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6105 \u3010[Ynoi2010]y-fast trie\u3011"
    },
    {
        "content": "# [Ynoi2010] y-fast trie\n\n## \u601d\u8def\n\n\u8003\u8651\u5728\u63d2\u5165\u6240\u6709\u5143\u7d20\u7684\u65f6\u5019\u5bf9 $C$ \u53d6\u6a21\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\u4e86\uff1a\n\n- $0\\leq x+y<C$\n- $x+y\\geq C$\n\n\u8003\u8651\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7b49\u4ef7\u4e8e\u53d6\u96c6\u5408\u4e2d\u524d\u4e24\u5927\u7684\u6570\uff0c\u53ef\u4ee5\u7b80\u5355\u7ef4\u62a4\u3002\n\n\u8003\u8651\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570 $x$ \u4ee4 $f(x)$ \u4e3a\u5c0f\u4e8e $C-1-x$ \u7684\u6700\u5927\u7684\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5957\u8def\u7ef4\u62a4 $n$ \u4e2a\u5143\u7d20\u5bf9 $(x,f(x))$\u3002\u90a3\u4e48\u5728\u63d2\u5165 $x$ \u7684\u65f6\u5019\u53ef\u4ee5\u5e73\u8861\u6811\u627e\u5230 $f(x)$\uff0c\u95ee\u9898\u53d8\u4e3a\u5c0f\u4e8e\u67d0\u503c\u7684\u6700\u5927\u503c\u3002\n\n\u800c\u6709\u4e9b\u6570\u7684 $f(y)=x$\uff0c\u800c\u8fd9\u6837\u7684 $y$ \u6700\u52a3\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u662f $\\mathcal O(n)$ \u7684\uff0c\u8fd9\u65f6\u5019\u5982\u679c\u5bf9\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u6570\u66b4\u529b\u91cd\u6784 $f$\u200b \u65f6\u95f4\u5c31\u9519\u4e86\u3002\n\n\u6211\u4eec\u8bbe $nxt_x$ \u4e3a $x$ \u7684\u540e\u7ee7\uff0c\u8003\u8651\u4ec0\u4e48\u6570\u53ef\u4ee5\u8ba9 $x$ \u4f5c\u4e3a\u81ea\u5df1\u7684 $f$\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6570\u5fc5\u5b9a\u5c0f\u4e8e\u7b49\u4e8e $C-1-x$\uff0c\u800c\u5982\u679c\u8fd9\u4e2a\u6570\u5c0f\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8ba9 $nxt_x$ \u4f5c\u4e3a\u81ea\u5df1\u7684 $f$ \u4e86\uff0c\u6240\u4ee5\u4ee5 $x$ \u4e3a $f$ \u7684\u6570\u5728\u6570\u8f74\u4e0a\u5e94\u8be5\u5728\u533a\u95f4 $(C-1-nxt_x, C-1,x]$ \u4e4b\u95f4\uff0c\u90a3\u4e48\u8fd9\u4e2a\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5e73\u8861\u6811\u4e0a\u7684\u533a\u95f4\u8986\u76d6\uff0c\u53ef\u4ee5\u5355 $log$ \u7ef4\u62a4\u3002\n\n\u8003\u8651\u5220\u9664\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5957\u8def\u7ebf\u6bb5\u6811\u5206\u6cbb\u628a\u5220\u9664\u64cd\u4f5c\u53d8\u4e3a\u64a4\u9500\u64cd\u4f5c\uff0c\u79bb\u7ebf $\\mathcal O(n\\log^2 n)$\uff0c~~\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86~~\u3002\n\n\u8003\u8651\u5f3a\u5236\u5728\u7ebf\uff0c\u6211\u4eec\u89c2\u5bdf\u5220\u9664\u4e00\u4e2a\u6570 $x$ \u7684\u65f6\u5019\uff0c\u54ea\u4e9b\u6570 $f(y)=x$\u3002\u8bbe $pre_x$ \u4e3a $x$ \u7684\u524d\u9a71\uff0c\u90a3\u4e48\u672c\u6765\u4ee5 $x$ \u4f5c\u4e3a $f$ \u7684\u6570\u5728\u533a\u95f4 $(C-1-nxt_x, C-1,x]$ \u4e2d\uff0c\u4f46\u73b0\u5728\u9700\u8981\u5220\u9664 $x$ \uff0c\u800c\u8fd9\u4e9b\u6570\u53c8\u4e0d\u80fd\u8ba9 $nxt_x$ \u4f5c\u4e3a\u81ea\u5df1\u7684 $f$ \uff0c\u6240\u4ee5\u9700\u8981\u8ba9 $pre_x$  \u5bf9\u533a\u95f4 $(C-1-nxt_x,C-1-pre_x]$ \u4f5c\u4e00\u6b21\u533a\u95f4\u8986\u76d6\u3002\n\n#### \u7ec6\u8282\uff1a\n\n- $x$ \u4e92\u4e0d\u76f8\u540c\uff0c\u4f46\u662f $x\\bmod C$ \u53ef\u80fd\u6709\u91cd\u590d\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5f00 `multiset`\u3002\n- $x$ \u4e0d\u80fd\u4f5c\u4e3a\u81ea\u5df1\u7684 $f(x)$\uff0c\u4f46\u662f\u5982\u679c $x$ \u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u5219\u53ef\u4ee5\u3002\u8fd9\u90e8\u5206\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u63d2\u5165\u7684\u65f6\u5019\u5148\u66f4\u65b0 $f$ \u518d\u63d2\u5165 $x$\uff0c\u5220\u9664\u7684\u65f6\u5019\u4ee4 $pre_x,nxt_x=x$ \u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u662f $\\mathcal O(n\\log n)$ \u7684\uff0c\u80fd\u4e0d\u80fd 1s \u8fc7\u770b\u4f7f\u7528\u7684\u5e73\u8861\u6811\u7684\u5e38\u6570\uff0c\u6bd5\u7adf\u7b14\u8005\u7531\u4e8e $5e5$ \u7684\u6570\u636e\u8303\u56f4\u548c~~\u672c\u4eba\u4f18\u79c0\u7684\u5199\u6cd5~~ $fhq\\_treap$ \u7684\u5de8\u5927\u5e38\u6570\uff0c\u56e0\u6b64\u4e0d\u5f97\u4e0d\u8ba9 lxl \u628a\u6d1b\u8c37\u4e0a\u7684\u65f6\u9650\u5f00\u5230\u4e86 2s ~~\u8fd8\u597d\u6709\u540e\u53f0\u80fd\u6539\u65f6\u9650~~\u3002\n\n## code\n\n```c++\n#include <bits/stdc++.h>\n#define mk make_pair\n#define pb push_back\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\nusing namespace std;\nconst int N = 5e5 + 10;\nconst int INF = 0x3f3f3f3f;\ntypedef pair <int, int> pii;\nchar buf[1 << 23],*p1 = buf, *p2 = buf, obuf[1 << 23], *O = obuf;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\ninline int read()\n{\n\tint x = 0; char ch = getchar ();\n\twhile (ch < '0' || ch > '9') { ch = getchar (); }\n\twhile (ch >= '0' && ch <= '9') x = x * 10 + (ch ^ 48), ch = getchar ();\n\treturn x;\n}\n\nvoid print(int x) {\n    if(x > 9) print(x / 10);\n    *O++ =x % 10 +'0';\n}\n\nint n, C, seed = 114514;\nint root;\nmultiset <int> s;\nset <int> :: iterator it, mx1;\ninline int Rand() { return (seed = (seed << 21) + (seed >> 3)); }\ninline int Max(int x, int y) { return (x > y) ? x : y; }\nint node;\nint x, y, z, Pre, Nxt;\nstruct node {\n\tint ls, rs;\n\tint key, siz, val;\n\tint cov, tag, mv, mx;\n} t[N];\ninline void pushup (int x)\n{\n\tt[x].siz = t[t[x].ls].siz + t[t[x].rs].siz + 1;\n\tt[x].mv = Max (Max (t[t[x].ls].mv, t[t[x].rs].mv), t[x].val); // mv \u662f\u533a\u95f4\u6700\u5927\u503c\n\tt[x].mx = Max (Max (t[t[x].ls].mx, t[t[x].rs].mx), t[x].val + t[x].cov); // mx \u662f\u533a\u95f4\u6700\u5927\u7684 pair \u503c\n}\n#define Cov(now,v) \tt[now].tag = t[now].cov = (v), t[now].mx = (v) + t[now].mv;\ninline void pushdown (int x)\n{\n\tif (~t[x].tag)\n\t{\n\t\tif (t[x].ls) Cov (t[x].ls, t[x].tag);\n\t\tif (t[x].rs) Cov (t[x].rs, t[x].tag);\n\t\tt[x].tag = -1;\n\t}\n}\ninline int merge (int x, int y)\n{\n\tif (!x || !y) return x + y;\n\tpushdown(x), pushdown(y);\n\tif (t[x].key < t[y].key) { t[x].rs = merge (t[x].rs, y); pushup (x); return x; }\n\telse { t[y].ls = merge (x, t[y].ls); pushup (y); return y; }\n}\ninline void split (int now, int k, int &x, int &y)\n{\n\tif (!now) { x = y = 0; return ; }\n\tpushdown (now);\n\tif (t[now].val <= k) x = now, split (t[now].rs, k, t[x].rs, y);\n\telse y = now, split (t[now].ls, k, x, t[y].ls);\n\tpushup (now);\n}\ninline int new_node (register int v, register int v1)\n{\n\tt[++node].siz = 1;\n\tt[node].key = Rand ();\n\tt[node].val = t[node].mv = v;\n\tt[node].tag = -1; t[node].cov = v1;\n\tt[node].mx = v + v1;\n\treturn node;\n}\ninline void cover (register int l, register int r, register int c)\n{\n\tsplit (root, l - 1, x, y);\n\tsplit (y, r, y, z);\n\tif(y) Cov(y, c);\n\troot = merge (merge (x, y), z);\n}\ninline void update (register int v)\n{\n\tit = s.upb (C - 1 - v); it--;\n\tif (*it == v) it--;\n\tcover (v, v, *it);\n}\ninline void insert (int v, int v1)\n{\n\tNxt = *s.upb (v);\n\tif (Nxt != INF) cover (C - Nxt, C - 1 - v, v);\n\telse cover (0, C - 1 - v, v);  // \u66f4\u65b0\u5bf9\u5e94\u7684 f\n\tsplit (root, v, x, y);\n\troot = merge (merge (x, new_node (v, v1)), y); // \u63d2\u5165 pair(x,f(x))\n}\nvoid del (register int v)\n{\n\tsplit (root, v, x, z);\n\tsplit (x, v - 1, x, y);\n\ty = merge (t[y].ls, t[y].rs);\n\troot = merge (merge (x, y), z);\n\tit = s.lob (v); it--;\n\tPre = *it, Nxt = *s.upb (Pre);\n\tif (~Pre) // \u6709\u524d\u9a71\n\t{\n\t\tif (Nxt != INF) cover (C - Nxt, C - 1 - Pre, Pre);\n\t\telse cover (0, C - 1 - Pre, Pre);\n\t\tupdate (Pre);  // \u5220\u9664 x \u6709\u53ef\u80fd\u5f71\u54cd f(pre)\n\t}\n\telse if (Nxt != INF) cover (C - Nxt, C - 1, -INF); // \u6ca1\u6709\u524d\u9a71\uff0c\u90a3\u4e48\u8fd9\u90e8\u5206\u7684\u6570\u5c06\u6ca1\u6709 f\n\tif (Nxt != INF) update (Nxt); // \u5220\u9664 x \u6709\u53ef\u80fd\u5f71\u54cd f(nxt)\n}\nsigned main ()\n{\n\tn = read (), C = read (); s.insert(-INF); s.insert (INF);\n\tint lst = 0, op, x, tmp;\n\troot = new_node (-1, 0);\n\twhile (n--)\n\t{ \n\t\top = read (), x = read () ^ lst;\n\t\tx -= x / C * C;\n\t\tif (op == 1)\n\t\t{\n\t\t\tit = s.upb (C - 1 - x); it--;\n\t\t\ts.insert (x);\n\t\t\tinsert (x, *it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts.erase (s.find(x));\n\t\t\tdel (x);\n\t\t}\n\t\tif (s.size () <= 3) *O++='E',*O++='E',*O++='\\n', lst = 0;\n\t\telse \n\t\t{\n\t\t\tmx1 = s.end(); --mx1;\n\t\t\ttmp = *--mx1; tmp += *--mx1;\n\t\t\tif (tmp >= C) tmp -= C;\n\t\t\tprint(lst = Max (t[root].mx, tmp));\n\t\t\t*O++='\\n';\n\t\t}\n\t}\n\tfwrite(obuf,O-obuf,1,stdout); // \u5361\u5e38\u5feb\u5199\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u63a0\u8fc7\n\treturn 0;\n}\n```",
        "postTime": 1668245051,
        "uid": 177837,
        "name": "violin_wyl",
        "ccfLevel": 6,
        "title": "P6105 [Ynoi2010] y-fast trie"
    },
    {
        "content": "\u81ea\u5df1\u505a\u7684\u65f6\u5019\u6f0f\u4e86\u6761\u91cd\u8981\u6027\u8d28\u2026\u2026                   \n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u628a $x$ \u90fd\u6a21\u4e0a $C$ \u540e\u5f97\u5230\u7684\u7b54\u6848\u6ca1\u6709\u53d8\u5316\uff0c\u7531\u4e8e\u53ea\u6709\u4e24\u4e2a\u6570\uff0c\u6240\u4ee5\u4e24\u6570\u4e4b\u548c\u80af\u5b9a\u90fd\u5728 $0 \\sim 2 \\times C - 2$ \u4e4b\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff1a        \n\n1. \u4e24\u6570\u4e4b\u548c\u5927\u4e8e\u7b49\u4e8e $C$ \u3002\u663e\u7136\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53d6\u96c6\u5408\u91cc\u6700\u5927\u7684\u4e24\u4e2a\u6570\uff0c\u968f\u4fbf\u7ef4\u62a4\uff1b              \n\n2. \u4e24\u6570\u4e4b\u548c\u5c0f\u4e8e $C$ \u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e2a\u6570\u5728\u5f53\u524d\u96c6\u5408\u5185\u7684\u4e00\u4e2a\u6700\u4f18\u5339\u914d\uff0c\u5728\u8fd9\u91cc\u5b9a\u4e49\u4e00\u4e2a\u6570 $x$ \u7684\u6700\u4f18\u5339\u914d\u662f\u96c6\u5408\u4e2d\u5728 $[0 , C - x - 1]$ \u4e2d\u6700\u5927\u7684\u6570\uff0c\u6700\u540e\u6211\u4eec\u7684\u7b54\u6848\u80af\u5b9a\u662f\u6240\u6709\u7684\u6570\u7684\u6700\u4f18\u5339\u914d\u5f97\u5230\u7684\u7ed3\u679c\u53d6\u6700\u5927\u503c\u3002                 \n\n\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0a\u9762\uff0c\u663e\u7136\u76f4\u63a5\u7ef4\u62a4\u6240\u6709\u6570\u7684\u6700\u4f18\u5339\u914d\u662f\u5f88\u4e0d\u73b0\u5b9e\u7684\uff0c\u8003\u8651\u7f29\u5c0f\u7b54\u6848\u8303\u56f4\u3002                   \n\n\u6211\u4eec\u5c1d\u8bd5\u8fd0\u7528\u4e00\u4e9b\u9898\u76ee\u7279\u6709\u7684\u6027\u8d28\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a            \n\n1. \u7b54\u6848\u4e00\u5b9a\u662f\u4e00\u4e2a\u8fd9\u6837\u5f62\u5f0f\u7684\u5339\u914d\u8d21\u732e\u7684\u503c\uff1a$(a,b)$ \u5e76\u4e14 $a$ \u7684\u6700\u4f18\u5339\u914d\u662f $b$ \uff0c\u4e14 $b$ \u7684\u6700\u4f18\u5339\u914d\u662f $a$ \u3002                 \n\n\u8fd9\u91cc\u5f88\u597d\u8bc1\u660e\uff0c\u6211\u4eec\u8fd0\u7528\u53cd\u8bc1\u6cd5\u3002\u5982\u679c\u7b54\u6848\u4e0d\u662f\u4e00\u4e2a\u8fd9\u6837\u7684\u5339\u914d\u8d21\u732e\u51fa\u6765\u7684\u503c\uff0c\u90a3\u4e48 $(a , b)$ \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u7684\u6700\u4f18\u5339\u914d\u4e0d\u662f\u53e6\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u627e\u5230\u8fd9\u4e2a\u6570\u51d1\u6210\u7684\u5339\u914d\u5f97\u5230\u7684\u503c\u4e00\u5b9a\u6bd4\u5f53\u524d\u60c5\u51b5\u4e0b\u7684\u503c\u66f4\u4f18\uff0c\u77db\u76fe\uff0c\u7ed3\u8bba\u5f97\u8bc1\u3002               \n\n\u5f88\u591a\u9898\u89e3\u4e5f\u6ca1\u5199\u5230\u8fd9\u6b65\uff0c\u4e5f\u662f\u6211\u5ffd\u7565\u7684\u4e00\u6761\u91cd\u8981\u6027\u8d28\u3002\uff08                        \n\n\u6709\u4e86\u8fd9\u6761\u6027\u8d28\u540e\u540e\u9762\u7684\u4e1c\u897f\u5c31\u7b80\u7b80\u5355\u5355\u4e86\u3002                   \n\n2. \u5982\u679c\u4e00\u4e2a\u6570 $x$ \u7684\u6700\u4f18\u5339\u914d\u662f $y$ \uff0c$y$ \u7684\u6700\u4f18\u5339\u914d\u662f $z$ \uff0c\u5e76\u4e14 $x < z$ \u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8003\u8651\u7b54\u6848\u65f6\u53ea $(y , z)$ \u8fd9\u4e2a\u5339\u914d\u3002                      \n\n\u8fd9\u4e2a\u6bd4\u8f83\u663e\u7136\uff0c\u6bd5\u7adf\u73b0\u5728\u7684\u4e24\u6570\u4e4b\u548c\u90fd\u5c0f\u4e8e $C$ \uff0c$x + y < y + z$ \u6240\u4ee5\u80af\u5b9a\u53ea\u8003\u8651 $(y , z)$ \u8fd9\u4e2a\u5339\u914d\u5c31\u597d\u4e86\u3002                \n\n\u7531\u4e8e\u8fd9\u4e2a\u6027\u8d28\u5bf9\u6240\u6709\u5728\u6ee1\u8db3\u4e24\u6570\u4e4b\u548c\u5c0f\u4e8e $C$ \u7684\u5339\u914d\u90fd\u9002\u7528\uff0c\u90a3\u4e48\u80af\u5b9a\u4e5f\u5bf9\u6027\u8d28 $1$ \u7684\u7279\u6b8a\u5339\u914d\u4e5f\u9002\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u6240\u6709\u7684\u6027\u8d28 $1$ \u4e2d\u63d0\u5230\u7684\u7279\u6b8a\u5339\u914d\uff0c\u5f88\u663e\u7136\u8fd9\u4e9b\u5339\u914d\u7684\u6570\u91cf\u7ea7\u59cb\u7ec8\u63a7\u5236\u5728 $O(\\frac{n}{2})$ \u5de6\u53f3\uff0c\u6bd4\u8d77\u6700\u5f00\u59cb\u7684 $O(n ^ 2)$ \u4e0d\u77e5 NB \u4e86\u591a\u5c11\u3002\n\n\u800c\u4e14\u6211\u4eec\u53d1\u73b0\u8fd9\u4e48\u4e00\u6316\u6398\uff0c\u6211\u4eec\u5728\u63d2\u5165\u548c\u5220\u9664\u65f6\u53ea\u7528\u8003\u8651\u518d\u589e\u52a0\u51cf\u5c11\u5404\u4e00\u4e2a\u5339\u914d\u5c31\u597d\u4e86\uff0c\u6240\u6709\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5f97\u5230\u4fdd\u8bc1\uff0c\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002                  \n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$ \uff0c\u4f46\u662f\u7531\u4e8e\u5bfb\u627e\u6bcf\u4e2a\u70b9\u7684\u6700\u4f18\u5339\u914d\u5e38\u6570\u6bd4\u8f83\u5927\u5c31\u6709\u70b9\u5361\u4e86\u3002\n\n\n\u672c\u6765\u554a\u8fd9\u4e1c\u897f\u5199\u4e2a\u5e73\u8861\u6811\u5565\u7684\u90fd\u597d\u2026\u2026\u867d\u7136\u6709\u70b9\u96be\u7801\u4f46\u662f\u6bd5\u7adf\u7ec6\u8282\u5c11\uff0c\u53ef\u662f Ynoi \u8fd8\u662f\u5f97\u5361\u5e38\uff0c\u4e8e\u662f\u7528 multiset \u5c31\u7ec6\u8282\u591a\u7684\u4e00\u6279\u8fd8\u96be\u8c03\u2026\u2026\u5efa\u8bae\u5b9e\u5728\u8c03\u4e0d\u52a8\u7684\u670b\u53cb\u4eec\u770b\u4e00\u4e0b\u7b2c\u4e00\u7bc7\u9898\u89e3\u7684\u5b9e\u73b0\u3002                \n",
        "postTime": 1625993160,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 [Ynoi2010] y-fast trie"
    },
    {
        "content": "\u8fd9\u9898\u601d\u8def\u633a\u7b80\u5355\u7684\uff0c\u5c31\u662f\u4ee3\u7801\u5199\u7740\u6709\u70b9\u9ebb\u70e6 ~~\u4e5f\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86~~\n\n### \u9898\u89e3\n\n\u9996\u5148\u5f88\u660e\u663e\u7684\uff0c\u8bfb\u8fdb\u6765\u7684\u6570\u5b57\u5148$mod C$\u518d\u64cd\u4f5c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u8fd9\u65f6\u5019\u4e24\u4e2a\u6570\u76f8\u52a0\u662f$<2C$\u7684\n\n\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\uff0c\u4e00\u7c7b\u662f\u76f8\u52a0$\u2265C$\u7684\uff0c\u8fd9\u7c7b\u5c31\u662f\u76f4\u63a5\u53d6\u96c6\u5408\u5185\u6700\u5927\u7684\u4e24\u4e2a\u6570\u76f8\u52a0\u5373\u53ef\uff08\u5373\u4f7f\u548c\u6bd4$C$\u5c0f\u4e5f\u65e0\u6240\u8c13\uff09\n\n\u5bf9\u4e8e\u548c$<C$\u7684\uff0c\u5148\u628a\u96c6\u5408$S$\u5185\u6570\u5b57\u6392\u6210\u6709\u5e8f\u7684\uff08\u53ef\u4ee5\u7528$set$\uff09\uff0c\u7136\u540e\u6bcf\u4e00\u4e2a\u6570\u5b57$x$\u7ef4\u62a4\u4e0e\u5176\u76f8\u52a0\u6700\u63a5\u8fd1$C$\u7684\u6570\u5b57$y$\uff0c\u79f0\u4e3a$y$\u662f$x$\u7684\u6700\u4f73\u5339\u914d\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5b57$y$\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408$S_{y}$\uff0c\u96c6\u5408\u5185\u5b58\u653e\u6700\u4f73\u5339\u914d\u662f$y$\u7684\u6240\u6709$x$\uff0c\u5e76\u8bbe$S$\u4e2d\u6bd4$x$\u5c0f\u7684\u6700\u5927\u6570\u5b57\u4e3a$z$\u3002\u5728\u52a0\u5165\u4e00\u4e2a\u65b0\u7684$x$\u65f6\uff0c\u5c06$x$\u653e\u5165$S_{y}$\u4e2d\uff0c\u5e76\u5c06$S_{z}$\u4e2d\u4e0e$x$\u7684\u548c\u5c0f\u4e8e$C$\u7684\u90e8\u5206\u4ece$S_{z}$\u4e2d\u53d6\u51fa\u653e\u5165$S_{x}$\u4e2d\u3002\u5220\u9664\u4e00\u4e2a$x$\u65f6\u628a$x$\u4ece$S_{y}$\u4e2d\u5220\u53bb\uff0c\u5e76\u5c06$S_{x}$\u5e76\u5165$S_{z}$\u4e2d\u3002\u7531\u4e8e$S_{x}$\u4e2d\u6700\u5927\u503c\u5fc5\u5b9a\u6bd4$S_{z}$\u4e2d\u6700\u5c0f\u503c\u8981\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5feb\u901f\u8fdb\u884c\u8fd9\u4e9b\u64cd\u4f5c\u3002\u518d\u4f7f\u7528\u4e00\u4e2a$set$\u50a8\u5b58\u6bcf\u4e00\u4e2a$y$\u4e0e$S_{y}$\u4e2d\u6700\u5927\u503c\u7684\u548c\uff0c\u5728\u6bcf\u4e2a$S_{y}$\u8fdb\u884c\u64cd\u4f5c\u65f6\u52a8\u6001\u7ef4\u62a4\u8fd9\u4e2a$set$\uff0c\u8fd9\u4e2a$set$\u4e2d\u7684\u6700\u5927\u503c\u5373\u4e3a\u548c$<C$\u60c5\u51b5\u4e0b\u7684\u7b54\u6848\n\n\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\u5c31\u662f\u6570\u5b57\u4e0d\u80fd\u91cd\u590d\u53d6\u7528\uff0c\u6240\u4ee5\u5f53$x$\u53ea\u52a0\u5165\u4e86\u4e00\u6b21\u4e14\u5176\u6700\u4f73\u5339\u914d\u662f\u5176\u81ea\u8eab\u65f6\uff0c\u9700\u8981\u628a$x$\u52a0\u5165$S_{z}$\u4e2d\u800c\u4e0d\u662f$S_{x}$\uff0c\u5f53\u518d\u6b21\u52a0\u5165$x$\u65f6\u518d\u628a\u5176\u53d6\u56de\u6765\uff0c\u5176\u4ed6\u76f8\u5173\u7684\u64cd\u4f5c\u4e5f\u8981\u7279\u5224\u8fd9\u79cd\u60c5\u51b5\n\n\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u64cd\u4f5c\u4e86\u5e38\u6570\u6b21\u7684$set$\u548c\u5e73\u8861\u6811\uff0c\u603b\u7684\u590d\u6742\u5ea6\u662f$O(nlogn)$\u7684\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u3002\n\n~~\u6211\u7528\u4e86\u4e24\u4e2aset\u8fd8\u7528\u4e86\u4e00\u4e2asplay\u4e3a\u4ec0\u4e48\u6211\u7684\u4ee3\u7801\u8dd1\u7684\u8fd9\u4e48\u5feb\uff0c\u5b8c\u5168\u6ca1\u9047\u5230\u8fc7\u5361\u5e38~~\n\n### \u4ee3\u7801\n\n\u5f88\u591a\u5730\u65b9\u53ef\u4ee5\u5199\u6210\u51fd\u6570\u6765\u51cf\u5c11\u7801\u91cf\u7684\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u6539\u4e86\uff08\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4e2a\u53c8\u81ed\u53c8\u957f\u7684\u4ee3\u7801\n\n~~\u7406\u89e3\u601d\u8def\u5c31\u597d\u4ee3\u7801\u4e0d\u91cd\u8981\uff08\u96fe~~\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<cmath>\n#include<set>\nusing namespace std;\nconst int N=5e5+5,M=1e5,INF=1073741824;\ninline int read()\n{\n\tint sum=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tsum=sum*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn sum;\n}\ninline void write(int x)\n{\n\tif(x>9)write(x/10);\n\tputchar(x%10+'0');\n}\n\nint n,m,c;\nstruct meow\n{\n\tint sz;\n\tmutable int cs,root;\n\tinline bool operator < (const meow& qwe) const\n\t{\n\t\treturn sz>qwe.sz;\n\t}\n\tmeow(int sz=-INF,int cs=0,int root=0):sz(sz),cs(cs),root(root){}\n};\nset<meow> a;\n#define smi set<meow>::iterator\nset<meow> ans;\n\nstruct miaow\n{\n\tint son[2],fa,sz;\n\tmiaow(int ls=0,int rs=0,int fa=0,int sz=0):fa(fa),sz(sz)\n\t{\n\t\tson[0]=ls,son[1]=rs;\n\t}\n}t[N];\nint cou=1;\n#define ls(x) t[x].son[0]\n#define rs(x) t[x].son[1]\n#define son(x,k) t[x].son[k]\n#define fa(x) t[x].fa\n#define sz(x) t[x].sz\ninline int fx(int x)\n{\n\tif(!fa(x))return -1;\n\treturn rs(fa(x))==x;\n}\ninline void rt(int x)\n{\n\tif(!fa(x))return;\n\tint y=fa(x),k=fx(x);\n\tif(fa(y))\n\t{\n\t\tson(fa(y),fx(y))=x;\n\t}\n\tfa(x)=fa(y);\n\tfa(y)=x;\n\tif(son(x,k^1))\n\t{\n\t\tfa(son(x,k^1))=y;\n\t}\n\tson(y,k)=son(x,k^1);\n\tson(x,k^1)=y;\n}\ninline void splay(int x,int md=0)\n{\n\tint y=fa(x);\n\twhile(y&&y!=md)\n\t{\n\t\tint z=fa(y);\n\t\tif(!z||z==md)\n\t\t{\n\t\t\trt(x);\n\t\t\treturn;\n\t\t}\n\t\tif(fx(y)==fx(x))rt(y);\n\t\telse rt(x);\n\t\trt(x);\n\t\ty=fa(x);\n\t}\n}\n\ninline int findl(int x,int y)\n{\n\tint o=x,fo=0;\n\tif(!o)return fo;\n\twhile(1)\n\t{\n\t\tif(y==sz(o))\n\t\t{\n\t\t\tfo=o;\n\t\t\tbreak;\n\t\t}\n\t\tif(y>sz(o))\n\t\t{\n\t\t\tfo=o;\n\t\t\tif(!rs(o))break;\n\t\t\to=rs(o);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!ls(o))break;\n\t\t\to=ls(o);\n\t\t}\n\t}\n\treturn fo;\n}\ninline int find(int x,int y)\n{\n\tint o=x;\n\tif(!o)return o;\n\twhile(1)\n\t{\n\t\tif(y==sz(o))break;\n\t\telse if(y>sz(o))\n\t\t{\n\t\t\tif(!rs(o))break;\n\t\t\to=rs(o);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!ls(o))break;\n\t\t\to=ls(o);\n\t\t}\n\t}\n\treturn o;\n}\n\ninline void ansadd(int x)\n{\n\tmeow qwe=meow(x,1,0);\n\tsmi o=ans.find(qwe);\n\tif(o==ans.end())\n\t{\n\t\tans.insert(qwe);\n\t}\n\telse\n\t{\n\t\to->cs+=1;\n\t}\n}\ninline void ansdel(int x)\n{\n\tmeow qwe=meow(x,1,0);\n\tsmi o=ans.find(qwe);\n\to->cs-=1;\n\tif(!o->cs)\n\t{\n\t\tans.erase(o);\n\t}\n}\n\ninline void ins(smi o,int x)\n{\n\tint zxc=find(o->root,x);\n\tif(!zxc)\n\t{\n\t\tt[cou]=miaow(0,0,0,x);\n\t\to->root=cou;\n\t\tansadd(o->sz+sz(cou));\n\t\t++cou;\n\t}\n\telse\n\t{\n\t\tt[cou]=miaow(0,0,zxc,x);\n\t\tif(sz(zxc)<x)rs(zxc)=cou;\n\t\telse ls(zxc)=cou;\n\t\tsplay(cou);\n\t\tif(!rs(cou))\n\t\t{\n\t\t\twhile(rs(zxc))zxc=rs(zxc);\n\t\t\tansdel(o->sz+sz(zxc));\n\t\t\tansadd(o->sz+sz(cou));\n\t\t}\n\t\to->root=cou;\n\t\t++cou;\n\t}\n}\ninline void era(smi o,int x)\n{\n\tint zxc=find(o->root,x);\n\tsplay(zxc);\n\tif(!ls(zxc))\n\t{\n\t\tif(!rs(zxc))\n\t\t{\n\t\t\to->root=0;\n\t\t\tansdel(o->sz+sz(zxc));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint qwe=rs(zxc);\n\t\t\twhile(ls(qwe))qwe=ls(qwe);\n\t\t\tsplay(qwe);\n\t\t\tsplay(zxc,qwe);\n\t\t\tfa(zxc)=0;\n\t\t\tls(qwe)=0;\n\t\t\to->root=qwe;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(!rs(zxc))\n\t\t{\n\t\t\tint qwe=ls(zxc);\n\t\t\twhile(rs(qwe))qwe=rs(qwe);\n\t\t\tsplay(qwe);\n\t\t\tsplay(zxc,qwe);\n\t\t\tfa(zxc)=0;\n\t\t\trs(qwe)=0;\n\t\t\to->root=qwe;\n\t\t\tansdel(o->sz+sz(zxc));\n\t\t\tansadd(o->sz+sz(qwe));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint qwe=ls(zxc),asd=rs(zxc);\n\t\t\twhile(rs(qwe))qwe=rs(qwe);\n\t\t\twhile(ls(asd))asd=ls(asd);\n\t\t\tsplay(qwe);\n\t\t\tsplay(asd,qwe);\n\t\t\tfa(zxc)=0;\n\t\t\tls(asd)=0;\n\t\t\to->root=qwe;\n\t\t}\n\t}\n}\n\ninline void add(int x)\n{\n\tmeow qwe=meow(x,0,0);\n\tsmi o=a.find(qwe),o2;\n\tif(o==a.end())\n\t{\n\t\tqwe.cs=1;\n\t\to=a.insert(qwe).first;\n\t\to2=o++;\n\t\tint asd=findl(o->root,c-x-1);\n\t\tif(asd)\n\t\t{\n\t\t\tsplay(asd);\n\t\t\tif(!rs(asd))\n\t\t\t{\n\t\t\t\to->root=0;\n\t\t\t\tansdel(o->sz+sz(asd));\n\t\t\t\to2->root=asd;\n\t\t\t\tansadd(o2->sz+sz(asd));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint zxc=rs(asd);\n\t\t\t\twhile(ls(zxc))zxc=ls(zxc);\n\t\t\t\tsplay(zxc);\n\t\t\t\tsplay(asd,zxc);\n\t\t\t\tfa(asd)=0,ls(zxc)=0;\n\t\t\t\to->root=zxc;\n\t\t\t\to2->root=asd;\n\t\t\t\tansadd(o2->sz+sz(asd));\n\t\t\t}\n\t\t}\n\t\tif(o->cs==1)\n\t\t{\n\t\t\tsmi o3=a.lower_bound(meow(c-o->sz-1,0,0));\n\t\t\tif(o3==o2)\n\t\t\t{\n\t\t\t\tsmi o4=o;\n\t\t\t\t++o4;\n\t\t\t\tera(o4,o->sz);\n\t\t\t\tins(o3,o->sz);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tsmi o3=a.lower_bound(meow(c-x-1,0,0));\n\t\tif(o3==o2)++o3;\n\t\tins(o3,x);\n\t}\n\telse if(o->cs==1)\n\t{\n\t\to->cs+=1;\n\t\tsmi o3=a.lower_bound(meow(c-x-1,0,0));\n\t\tif(o3==o)\n\t\t{\n\t\t\t++o3;\n\t\t\tera(o3,x);\n\t\t\tins(o,x);\n\t\t}\n\t}\n\telse\n\t{\n\t\to->cs+=1;\n\t}\n}\ninline void del(int x)\n{\n\tmeow qwe=meow(x,0,0);\n\tsmi o=a.find(qwe),o2;\n\tif(o->cs>=3)\n\t{\n\t\to->cs-=1;\n\t}\n\telse if(o->cs==2)\n\t{\n\t\to->cs-=1;\n\t\tsmi o3=a.lower_bound(meow(c-x-1,0,0));\n\t\tif(o3==o)\n\t\t{\n\t\t\t++o3;\n\t\t\tera(o,x);\n\t\t\tins(o3,x);\n\t\t}\n\t}\n\telse\n\t{\n\t\to2=o++;\n\t\tif(o2->root)\n\t\t{\n\t\t\tif(o->root)\n\t\t\t{\n\t\t\t\tint asd=o->root,zxc=o2->root;\n\t\t\t\twhile(ls(asd))asd=ls(asd);\n\t\t\t\twhile(rs(zxc))zxc=rs(zxc);\n\t\t\t\tsplay(asd);\n\t\t\t\tsplay(zxc);\n\t\t\t\tls(asd)=zxc;\n\t\t\t\tfa(zxc)=asd;\n\t\t\t\to2->root=0;\n\t\t\t\to->root=asd;\n\t\t\t\tansdel(o2->sz+sz(zxc));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint asd=o2->root;\n\t\t\t\twhile(rs(asd))asd=rs(asd);\n\t\t\t\tsplay(asd);\n\t\t\t\to->root=asd;\n\t\t\t\to2->root=0;\n\t\t\t\tansdel(o2->sz+sz(asd));\n\t\t\t\tansadd(o->sz+sz(asd));\n\t\t\t}\n\t\t\tsmi o3=a.lower_bound(meow(c-o->sz-1,0,0));\n\t\t\tif(o3==o2&&o->cs==1)\n\t\t\t{\n\t\t\t\tint ss=o->sz;\n\t\t\t\tera(o,ss);\n\t\t\t\t++o;\n\t\t\t\tins(o,ss);\n\t\t\t}\n\t\t}\n\t\tsmi o3=a.lower_bound(meow(c-x-1,0,0));\n\t\tif(o3==o2)++o3;\n\t\tera(o3,x);\n\t\ta.erase(o2);\n\t}\n}\ninline void solve()\n{\n\tn=read(),c=read();\n\tint lastans=0,cou=0;\n\ta.insert(meow());\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint x=read(),y=(read()^lastans)%c;\n\t\tif(x==1)\n\t\t{\n\t\t\tadd(y);\n\t\t\tcou+=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdel(y);\n\t\t\tcou-=1;\n\t\t}\n\t\tif(cou<2)\n\t\t{\n\t\t\tputs(\"EE\");\n\t\t\tlastans=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint imax,imax2;\n\t\t\tsmi qwe=ans.begin();\n\t\t\timax=qwe->sz;\n\t\t\tqwe=a.begin();\n\t\t\tif(qwe->cs>=2)imax2=qwe->sz*2;\n\t\t\telse\n\t\t\t{\n\t\t\t\timax2=qwe->sz;\n\t\t\t\t++qwe;\n\t\t\t\timax2+=qwe->sz;\n\t\t\t}\n\t\t\tlastans=max(imax,imax2%c);\n\t\t\twrite(lastans),putchar('\\n');\n\t\t}\n\t}\n}\nint main()\n{\n\tsolve();\n}\n```\n",
        "postTime": 1602954300,
        "uid": 13105,
        "name": "miaow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6105 \u3010[Ynoi2010]y-fast trie\u3011"
    }
]