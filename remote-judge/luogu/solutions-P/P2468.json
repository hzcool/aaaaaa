[
    {
        "content": "\u5e94\u8be5\u7b97\u662f\u4e00\u9053\u4e8c\u5408\u4e00\u7684\u9898\u5427\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\n\n\u524d50%\u7684R,C\u5747\u5c0f\u4e8e\u7b49\u4e8e200,\u6c42\u7ed9\u5b9a\u77e9\u9635\u4e2d\u81f3\u5c11\u8981\u53d6\u51e0\u4e2a\u6570\u52a0\u8d77\u6765\u53ef\u4ee5\u5927\u4e8e\u7ed9\u5b9a\u7684\u503c\n\n\u53ef\u4ee5\u641e\u4e00\u641e\u524d\u7f00\u548c,\u4e8c\u5206\u6700\u5c0f\u503c,\u53d8\u6210\u4e00\u4e2a\u5224\u5b9a\u6027\u95ee\u9898\n\nvalue[i][j][k] \u4ece(1,1)\u5230(i,j)\u7684\u77e9\u9635\u4e2d\u6570\u503c>=k\u7684\u6570\u7684\u603b\u548c\n\nnum[i][j][k] \u4ece(1,1)\u5230(i,j)\u7684\u77e9\u9635\u4e2d\u6570\u503c>=k\u7684\u6570\u7684\u4e2a\u6570\n\n\u540e50%\u7684R=1,C<=5\\*10^5,\u6c42\u7ed9\u5b9a\u5e8f\u5217\u4e2d\u81f3\u5c11\u8981\u53d6\u51e0\u4e2a\u6570\u52a0\u8d77\u6765\u53ef\u4ee5\u5927\u4e8e\u7ed9\u5b9a\u7684\u503c\n\n\u4f9d\u65e7\u662f\u4e8c\u5206\u6700\u5c0f\u503c,\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\n\nAC\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\n#define re register\n#define no printf(\"Poor QLW\\n\")\nint n,m,t; // n hang m lie t tian\nint a1,b1,a2,b2,h;\nint page[202][202];\nint value[202][202][1002];\nint num[202][202][1002];\ninline int get_value(int a1,int b1,int a2,int b2,int k){\n    return value[a2][b2][k]-value[a1-1][b2][k]+value[a1-1][b1-1][k]-value[a2][b1-1][k];\n}\ninline int get_num(int a1,int b1,int a2,int b2,int k){\n    return num[a2][b2][k]-num[a1-1][b2][k]+num[a1-1][b1-1][k]-num[a2][b1-1][k];\n}\ninline void work1(){\n    re int maxn=0;\n    for(re int i=1;i<=n;++i)\n        for(re int j=1;j<=m;++j){\n            scanf(\"%d\",&page[i][j]);\n            if(page[i][j]>maxn) maxn=page[i][j];\n        }\n    for(re int k=0;k<=maxn;++k) // \u524d\u7f00\u548c,\u5bb9\u65a5\u539f\u7406\n        for(re int i=1;i<=n;++i)\n            for(re int j=1;j<=m;++j){\n                value[i][j][k]=value[i-1][j][k]+value[i][j-1][k]-value[i-1][j-1][k]+(page[i][j]>=k?page[i][j]:0);\n                num[i][j][k]=num[i-1][j][k]+num[i][j-1][k]-num[i-1][j-1][k]+(page[i][j]>=k?1:0);\n                // value[i][j][k] \u4ece(1,1)\u5230(i,j)\u7684\u77e9\u9635\u4e2d\u6570\u503c>=k\u7684\u6570\u7684\u603b\u548c\n                // num[i][j][k] \u4ece(1,1)\u5230(i,j)\u7684\u77e9\u9635\u4e2d\u6570\u503c>=k\u7684\u6570\u7684\u4e2a\u6570\n        }\n    while(t--){\n        scanf(\"%d%d%d%d%d\",&a1,&b1,&a2,&b2,&h);\n        if(get_value(a1,b1,a2,b2,0)<h) {no;continue;}\n        re int l=0,r=maxn+1,ans=-1;\n        while(l+1<r){\n            re int mid=l+r>>1;\n            if(get_value(a1,b1,a2,b2,mid)>=h) l=mid,ans=mid;\n            else r=mid;\n        }\n        if(ans==-1) no;\n        else printf(\"%d\\n\",get_num(a1,b1,a2,b2,ans)-(get_value(a1,b1,a2,b2,ans)-h)/ans);\n    }    \n}\n#define N 5500002\nint L[N],R[N],size[N],sum[N],root[N],cnt;\ninline void update(int A,int &B,int l,int r,int x){\n    B=++cnt;\n    size[B]=size[A]+1;\n    sum[B]=sum[A]+x;\n    re int mid=l+r>>1;\n    if(l==r) return;\n    if(x<=mid) update(L[A],L[B],l,mid,x),R[B]=R[A];\n    else update(R[A],R[B],mid+1,r,x),L[B]=L[A];        \n}\ninline int query(int A,int B,int l,int r,int k){\n    re int ans=0;\n    while(l<r){\n        re int mid=l+r>>1;\n        re int lch=sum[R[B]]-sum[R[A]];\n        if(lch<k) ans+=size[R[B]]-size[R[A]],k-=lch,r=mid,B=L[B],A=L[A];\n        else l=mid+1,B=R[B],A=R[A];\n    }\n    ans+=(k+l-1)/l;\n    return ans;\n}\ninline void work2(){\n    for(re int i=1;i<=m;++i){\n        re int a; scanf(\"%d\",&a);\n        update(root[i-1],root[i],1,1000,a);\n    }\n    while(t--){\n        scanf(\"%d%d%d%d%d\",&a1,&b1,&a2,&b2,&h);\n        if(sum[root[b2]]-sum[root[b1-1]]<h) {no;continue;}\n        printf(\"%d\\n\",query(root[b1-1],root[b2],1,1000,h));\n    }    \n}\ninline int dy(){\n    scanf(\"%d%d%d\",&n,&m,&t);\n    if(n==1) work2();\n    else work1();\n    return 0;\n}\nint QAQ = dy();\nint main(){;}\n```",
        "postTime": 1511145334,
        "uid": 36080,
        "name": "\u51cc\u5e7d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2468 \u3010[SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6\u3011"
    },
    {
        "content": "\u6628\u5929\u4ea4\u4e86\u961f\u53cb\u4e3b\u5e2d\u6811\uff0c\u4ed6\u5f00\u59cb\u5199\u8fd9\u9053\u9898\uff0c\u7136\u540e\u4eca\u5929\u95ee\u6211\uff08\u56e0\u4e3a\u6211\u5199\u8fc7\u8fd9\u9053\u9898\uff09\uff0c\u4f46\u662f\u6211\u5df2\u7ecf\u5fd8\u8bb0\u8fd9\u9053\u9898\u7684\u5199\u6cd5\u4e86\uff01 \u7136\u540e\u6211\u5f00\u59cb\u60f3\uff0c\u548c\u524d\u9762\u7684\u9898\u89e3\u4e0d\u540c\u7684\u662f\uff0c\u6211\u8ba4\u4e3a\u8fd9\u9053\u9898\u524d\u540e\u4e24\u90e8\u5206\u53ef\u4ee5\u4e00\u8d77\u5199\uff0c\u5bf9\u4e8e\u540e\u4e00\u534aR = 1\u7684\u60c5\u51b5\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u88f8\u4e3b\u5e2d\u6811\u9898\uff0c\u5148\u5224\u53f3\u8fb9\u7684sum\u591f\u4e0d\u591fk\uff0c\u591f\u5c31\u8fdb\u5165\u53f3\u5b50\u6811\uff0c\u4e0d\u591f\u5c31\u8fdb\u5165\u5de6\u5b50\u6811\u3002 \u800c\u5bf9\u4e8e\u524d\u4e00\u534a\uff0c\u6211\u6ce8\u610f\u5230\u4e86\u6bcf\u672c\u4e66\u7684\u9875\u6570\u53ea\u67091000\uff0c\u90a3\u5c31\u76f4\u63a5\u5f00200\u9897\u4e3b\u5e2d\u6811\u554a\uff01 \u7136\u540e\u6211\u770b\u4e86\u4e0b\u9898\u89e3\uff0c\u597d\u50cf\u6ca1\u6709\u8fd9\u79cd\u5199\u6cd5\uff0c\u6211\u5c31\u4e00\u8fb9\u62c5\u5fc3\u4e00\u8fb9\u5199\u3002 \u6211\u7b97\u51fa\u6765\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fM R log10\uff0c \u5927\u6982\u57284\u4e2a\u4ebf\u5de6\u53f3\uff0c\u4e3b\u5e2d\u6811\u5e38\u6570\u4e5f\u5f88\u5927\uff0c\u4f46\u662f\u6700\u540e\u8fd8\u662f\u8fc7\u4e86\uff0c\u4ee4\u4eba\u60ca\u8bb6\n\n\n\n```c\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 1010;\nstruct T\n{\n    int l, r;\n    int siz;\n    int sum;\n} tree[maxn * 40 * 200];\nint r, c, m, cnt;\nint lx, ly, rx, ry, k;\nint rt[500010];\nint ls[210], rs[210];\nvoid build(int l, int r, int &tr)\n{\n    tr = ++ cnt;\n    if(l == r)\n        return;\n    int mid = (l + r) >> 1;\n    build(l, mid, tree[tr].l);\n    build(mid + 1, r, tree[tr].r);\n}\nvoid update(int l, int r, int last, int &now, int key)\n{\n    now = ++ cnt;\n    tree[now] = tree[last];\n    tree[now].siz ++, tree[now].sum += key;\n    if(l == r)\n        return;\n    int mid = (l + r) >> 1;\n    if(key <= mid)\n        update(l, mid, tree[last].l, tree[now].l, key);\n    else\n        update(mid + 1, r, tree[last].r, tree[now].r, key);\n}\nint query(int l, int r, int key, int he)\n{\n    if(l == r)\n    {\n        if(key <= 0)\n            return he;\n        int temp;\n        if(key % l == 0)\n            temp = key / l;\n        else\n            temp = key / l + 1;\n        he += temp;\n        return he;\n    }\n    int sum = 0, ssiz = 0;\n    for(int i = lx; i <= rx; i ++)\n    {\n        sum += tree[tree[rs[i]].r].sum - tree[tree[ls[i]].r].sum;\n        ssiz += tree[tree[rs[i]].r].siz - tree[tree[ls[i]].r].siz;\n    }\n    int mid = (l + r) >> 1;\n    if(sum >= key)\n    {\n        for(int i = lx; i <= rx; i ++)\n        {\n            rs[i] = tree[rs[i]].r;\n            ls[i] = tree[ls[i]].r;\n        }\n        return query(mid + 1, r, key, he);\n    }\n    else\n    {\n        for(int i = lx; i <= rx; i ++)\n        {\n            rs[i] = tree[rs[i]].l;\n            ls[i] = tree[ls[i]].l;\n        }\n        return query(l, mid, key - sum, he + ssiz);\n    }\n}\nint main()\n{\n    scanf(\"%d %d %d\", &r, &c, &m);\n    build(1, 1000, rt[0]);\n    int temp;\n    for(int i = 1; i <= r; i ++)\n    {\n        for(int j = 1; j <= c; j ++)\n        {\n            scanf(\"%d\", &temp);\n            if(j == 1)\n                update(1, 1000, rt[0], rt[(i - 1) * c + j], temp);\n            else\n                update(1, 1000, rt[(i - 1) * c + j - 1], rt[(i - 1) * c + j], temp);\n        }\n    }\n    while(m --)\n    {\n        scanf(\"%d %d %d %d %d\", &lx, &ly, &rx, &ry, &k);\n        int sum = 0;\n        for(int i = lx; i <= rx; i ++)\n        {\n            if(ly == 1)\n                sum += tree[rt[(i - 1) * c + ry]].sum;\n            else\n                sum += tree[rt[(i - 1) * c + ry]].sum - tree[rt[(i - 1) * c + ly - 1]].sum;\n        }\n        if(sum < k)\n        {\n            //cout << \"!!!\" << \" \" << sum << endl;\n            printf(\"Poor QLW\\n\");\n        }\n        else\n        {\n            for(int i = lx; i <= rx; i ++)\n            {\n                if(ly == 1)\n                {\n                    rs[i] = rt[(i - 1) * c + ry];\n                    ls[i] = rt[0];\n                }\n                else\n                {\n                    rs[i] = rt[(i - 1) * c + ry];\n                    ls[i] = rt[(i - 1) * c + ly - 1];\n                }\n\n            }\n            printf(\"%d\\n\", query(1, 1000, k, 0));\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1547305602,
        "uid": 75617,
        "name": "anterior",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2468 \u3010[SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6\u3011"
    },
    {
        "content": "\u867d\u7136\u662f\u4e3b\u5e2d\u6811\u7684\u4e13\u9898\uff0c\u4f46\u662f\u60f3\u60f3\u597d\u50cf\u7528\u524d\u7f00\u548c\u90fd\u53ef\u4ee5\u641e\u8fc7\u53bb\u3002\n\u5bf9\u4e8eR,C<=200\u7684\u60c5\u51b5\uff0cS[i][j][k]\u8868\u793a\u4ee5(i,j)\u4e3a\u53f3\u4e0b\u89d2\u7684\u77e9\u9635\u4e2d\u503c\u4e3ak\u7684\u6709\u51e0\u4e2a\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u4ece\u6700\u5927\u7684\u6570\u5f00\u59cb\u5c1d\u8bd5\uff0c\u77e5\u9053\u9ad8\u5ea6\u5927\u4e8e\u7b49\u4e8e\u3002\n\u5f53R==1\u65f6\uff0c\u6bcf\u9694\u5341\u4e2a\u6570\u5904\u7406\u4e00\u6b21\u3002sum[1][i]\u8868\u793a\u524d\u5341\u4e2a\u6570\u4e2d\u503c\u4e3ai\u7684\u6709\u51e0\u4e2a\uff0csum[2][i]\u8868\u793a\u524d\u4e8c\u5341\u4e2a\u6570\u4e2d\u503c\u4e3ai\u7684\u6709\u51e0\u4e2a\uff0c\u4e00\u6b21\u7c7b\u63a8\u3002\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u4e0e\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e00\u6837\u8d2a\u5fc3\u5904\u7406\uff0c\u7136\u540e\u5904\u7406\u8fb9\u754c\u5373\u53ef\u3002\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6O(1000*(C/10)),\u6bcf\u6b21\u8be2\u95eeO(1000*10),\u603b\u590d\u6742\u5ea6O(1000*(C/10)+10000*M)\n\n```\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nint S[202][202][1005],t[202][202],a[202][1005];\nint sum[50005][1002],c[500005];\nint main()\n{\n    int n,m,Q;\n    scanf(\"%d%d%d\",&n,&m,&Q);\n    if(n==1)\n    {\n        for(int i=1;i<=m;i++)\n        {\n            scanf(\"%d\",&c[i]);\n            if(i%10==0)\n            {\n                int len=i/10;\n                for(int j=1;j<=1000;j++) sum[len][j]=sum[len-1][j];\n                for(int j=i;j>10*(len-1);j--) sum[len][c[j]]++;\n            }\n        }\n        while(Q--)\n        {\n            int x1,y1,x2,y2,h;\n            scanf(\"%d%d%d%d%d\",&x1,&y1,&x2,&y2,&h);\n            int ans=0;\n            for(int i=1000;i>0;i--)\n            {\n                int s=sum[y2/10][i]-sum[y1/10][i];\n                for(int j=y2/10*10+1;j<=y2;j++) if(c[j]==i) s++;\n                for(int j=y1/10*10+1;j<y1;j++) if(c[j]==i) s--;\n                if(y1%10==0&&i==c[y1]) s++;\n                if(i*s<=h)\n                {\n                    h-=i*s;\n                    ans+=s;\n                }\n                else\n                {\n                    ans+=(h+i-1)/i;\n                    h=0;\n                }\n                if(h==0) break;\n            }\n            if(h>0) printf(\"Poor QLW\\n\");\n            else printf(\"%d\\n\",ans);\n        }\n    }\n    else\n    {\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=m;j++)\n            scanf(\"%d\",&t[i][j]);\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=m;j++)\n            {\n                for(int k=1;k<=1000;k++)\n                {\n                    if(t[i][j]==k) a[j][k]=a[j-1][k]+1;\n                    else a[j][k]=a[j-1][k];\n                    S[i][j][k]=S[i-1][j][k]+a[j][k];\n                }\n            }\n        }\n        while(Q--)\n        {\n            int x1,y1,x2,y2,h;\n            scanf(\"%d%d%d%d%d\",&x1,&y1,&x2,&y2,&h);\n            int ans=0;\n            for(int i=1000;i>0;i--)\n            {\n                int s=S[x2][y2][i]-S[x2][y1-1][i]-S[x1-1][y2][i]+S[x1-1][y1-1][i];\n                if(i*s<=h)\n                {\n                    h-=i*s;\n                    ans+=s;\n                }\n                else\n                {\n                    ans+=(h+i-1)/i;\n                    h=0;\n                }\n                if(h==0) break;\n            }\n            if(h>0) printf(\"Poor QLW\\n\");\n            else printf(\"%d\\n\",ans);\n        }\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1547285400,
        "uid": 105044,
        "name": "Cherry0525",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2468 \u3010[SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6\u3011"
    },
    {
        "content": "### \u4e3a\u4e86\u66f4\u597d\u7684\u67e5\u770b\u4f53\u9a8c\uff0c\u53ef\u4ee5\u8fdb\u5165https://www.cnblogs.com/wenci/p/10158661.html\u6211\u7684\u535a\u5ba2\u8fdb\u884c\u67e5\u770b\n#### \u9898\u9762\u89c1https://www.luogu.org/problemnew/show/P2468\n\n#### \u7136\u540e\u8fd9\u9053\u9898\u5c5e\u4e8e\u5408\u4e8c\u4e3a\u4e00\u9898\uff0c\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4\u5c31\u80fd\u53d1\u73b0\n\n#### \u9996\u5148\u6211\u4eec\u5148\u8003\u865150\u5206\uff0c\u4e8c\u7ef4\u524d\u7f00\u548c\u7ef4\u62a4\u4e00\u4e0b\uff08\u53cd\u6b63\u6211\u4e0d\u8bb0\u5f97\u516c\u5f0f\uff0c\u624b\u63a8\u4e86\u534a\u5929\uff09\n\n#### tot[i][j][k]\u8868\u793a\u77e9\u9635\uff081,1\uff09\u5230\uff08i\uff0cj\uff09\u4e2d\u6570\u503c\u5927\u7b49\u4e8ek\u7684\u603b\u548c\n\n#### num[i][j][k]\u8868\u793a\u77e9\u9635\uff081,1\uff09\u5230\uff08i\uff0cj\uff09\u4e2d\u6570\u503c\u5927\u7b49\u4e8ek\u7684\u4e2a\u6570\n\n#### \u90a3\u4e48\u505a\u6cd5\u4e5f\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff0c\u4e8c\u5206k\u7684\u503c\u8fdb\u884ccheck\n\n#### \u6700\u540e\u6ce8\u610f\u4e00\u4e2a\u5c0f\u95ee\u9898\uff0c\u5c31\u662f\u6709\u53ef\u80fd\u4e00\u4e2ak\u503c\u6709\u591a\u4e2a\u70b9\uff0c\u800c\u6211\u4e0d\u9700\u8981\u5168\u9009\u5c31\u80fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u81ea\u884c\u7406\u89e3\u4e00\u4e0b\n\n#### \u540e\u767e\u5206\u4e4b\u4e94\u5341\uff0c\u4e00\u5f00\u59cb\u53e3\u80e1\u4e86\u4e00\u4e2a\u4e00\u7ef4\u524d\u7f00\u548c\u7684\u505a\u6cd5\uff0c\u8c8c\u4f3c\u662f\u4e24\u4e2alog\uff0c\u7136\u800c\u6211\u5728\u5b66\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\uff0c\u4e0d\u80fd\u5077\u61d2\n\n#### \u601d\u8003\u4e86\u4e00\u4e0b\uff0c\u5f00\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u628a\u5b83\u53d8\u6210\u4e3b\u5e2d\u6811\uff0c\u6839x\u4ee3\u8868\u63d2\u5165\u4e86\u7b2cx\u4e2a\u6570\u540e\u7684\u60c5\u51b5\n\n#### \u7136\u540e\u5efa\u6811\uff0c\u66f4\u65b0\u90fd\u662f\u88f8\u7684\u64cd\u4f5c\n\n#### \u5173\u4e8e\u67e5\u8be2\u6211\u7684\u60f3\u6cd5\u6211\u5199\u5728\u4e86\u4ee3\u7801\u91cc\uff0c\u60f3\u4e0d\u901a\u7684\u53ef\u4ee5\u770b\u4e00\u4e0b\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int w=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        w=(w<<3)+(w<<1)+ch-48;\n        ch=getchar();\n    }\n    return w*f;\n}\nint n,m,q,a[210][210],tot[210][210][1010],num[210][210][1010],ans,cnt,root[5000010],b[5000010];\nint get_sum(int x1,int y1,int x2,int y2,int k,int f)\n{\n    if(f==1)return tot[x2][y2][k]-tot[x2][y1-1][k]-tot[x1-1][y2][k]+tot[x1-1][y1-1][k];\n    else return num[x2][y2][k]-num[x2][y1-1][k]-num[x1-1][y2][k]+num[x1-1][y1-1][k];\n}\ninline void work2(){//\u4e8c\u7ef4\u524d\u7f00\u548c\u5927\u529b\u7ef4\u62a4\uff0c\u53e3\u80e1\u4e86\u4e00\u4e0b\u5199\u5728\u4e0a\u9762\u4e86\uff0c\u5c31\u4e0d\u591a\u89e3\u91ca\u4e86\uff0c\u7740\u91cd\u770b\u4e3b\u5e2d\u6811 \n    int i,j,k,maxx=0;\n    for(i=1;i<=n;i++){\n        for(j=1;j<=m;j++){\n            a[i][j]=read();maxx=max(maxx,a[i][j]);\n        }\n    }\n    for(k=0;k<=maxx;k++){\n        for(i=1;i<=n;i++){\n            for(j=1;j<=m;j++){\n                tot[i][j][k]=tot[i-1][j][k]+tot[i][j-1][k]-tot[i-1][j-1][k]+(a[i][j]>=k)*a[i][j];\n                num[i][j][k]=num[i-1][j][k]+num[i][j-1][k]-num[i-1][j-1][k]+(a[i][j]>=k);\n            }\n        }\n    }\n    while(q--){\n        int x1,y1,x2,y2,h;\n        x1=read();y1=read();x2=read();y2=read();h=read();\n        if(get_sum(x1,y1,x2,y2,0,1)<h) puts(\"Poor QLW\");\n        else{\n            int l=0,r=maxx+1;ans=-1;\n            while(l<=r){\n                int mid=(l+r)>>1;\n                if(get_sum(x1,y1,x2,y2,mid,1)>=h){\n                    ans=mid;l=mid+1;\n                }\n                else r=mid-1;\n            }\n            printf(\"%d\\n\",get_sum(x1,y1,x2,y2,ans,2)-(get_sum(x1,y1,x2,y2,ans,1)-h)/ans);\n        }\n    }\n}\nstruct Node{\n    int ls,rs,sum,size;\n}st[50000010];\ninline int build(int l,int r){\n    int pos=cnt++;\n    if(l==r) return pos;\n    int mid=(l+r)>>1;\n    st[pos].ls=build(l,mid);\n    st[pos].rs=build(mid+1,r);\n    return pos;\n}//\u5e38\u89c4\u5efa\u6811 \ninline int update(int tim,int l,int r,int x){//tim\u8868\u793a\u5386\u53f2\u7248\u672c\uff0cl,r\u4e3a\u8303\u56f4\uff0cx\u4e3a\u6211\u5f53\u524d\u63d2\u5165\u7684\u6570 \n    int pos=cnt++;\n    st[pos]=st[tim];st[pos].size++;st[pos].sum+=x;//\u8fd9\u4e2a\u8282\u70b9\u7684size+1,sum+=x \n    if(l==r) return pos;//\u5230\u53f6\u5b50\u4e86\uff0c\u5927\u529b\u8fd4\u56de\u5c31\u597d \n    int mid=(l+r)>>1;\n    if(x<=mid) st[pos].ls=update(st[tim].ls,l,mid,x);\n    else st[pos].rs=update(st[tim].rs,mid+1,r,x);\n    return pos;\n}\ninline int query(int l,int r,int fir,int sec,int w){//\u5177\u4f53\u89e3\u91ca\u89c1\u4e0b\u65b9 \n    if(l==r) return (w-1)/l+1;//\u53ef\u80fd\u4e0d\u4f1a\u6574\u9664\uff0c\u5c31\u8fd9\u4e48\u5904\u7406\u4e00\u4e0b\u5c31\u597d\u4e86 \n    int mid=(l+r)>>1;int x=st[st[sec].rs].sum-st[st[fir].rs].sum;\n    if(w<=x) return query(mid+1,r,st[fir].rs,st[sec].rs,w);\n    else return st[st[sec].rs].size-st[st[fir].rs].size+query(l,mid,st[fir].ls,st[sec].ls,w-x);\n}\n/*\n\u8fd9\u68f5\u4e3b\u5e2d\u6811\u662f\u57fa\u4e8e\u6743\u503c\u7ebf\u6bb5\u6811\u7684\uff0c\u6743\u503c\u7684\u8303\u56f4\u53ea\u67091k \n\u4e3b\u5e2d\u6811\u7ef4\u62a4\u4e86\u5386\u53f2\u7248\u672c\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u7684size\u548csum \n\u7136\u540e\u5173\u4e8e\u5efa\u6811\u548c\u66f4\u65b0\u90fd\u6ca1\u4ec0\u4e48\u65b0\u610f\n\u67e5\u8be2\u8fd9\u4e2a\u6211\u4e00\u5f00\u59cb\u4e0d\u80fd\u5f88\u597d\u7684\u7406\u89e3\uff0c\u90a3\u4e48\u6211\u73b0\u5728\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\u6211\u7684\u601d\u8def\n\u9996\u5148l,r,fir,sec,w\u5206\u522b\u8868\u793a\u533a\u95f4\uff0c\u7248\u672c\u53f7\uff0c\u8fd8\u9700\u8981\u591a\u5c11\u503c\n\u7136\u540e\u5927\u591a\u6570\u9898\u67e5\u8be2\u7684\u65f6\u5019\u90fd\u662f\u5411\u5de6\u5b50\u6811\u67e5\u4e00\u4e0b\uff0c\u6bd4\u4e00\u4e0b\u5927\u5c0f\n\u8fd9\u91cc\u67e5\u53f3\u5b50\u6811\u662f\u56e0\u4e3a\u8fd9\u662f\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u5e0c\u671b\u5c3d\u91cf\u5c11\u5730\u9009\u70b9\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u9009\u7684\u6570\u8981\u5c3d\u53ef\u80fd\u5927\n\u90a3\u4e48\u80fd\u9009\u53f3\u5b50\u6811\uff08\u4e5f\u5c31\u662f\u503c\u66f4\u5927\u7684\u70b9\uff09\uff0c\u5f53\u7136\u9009\u5927\u7684\u554a\n\u5982\u679c\u53f3\u5b50\u6811\u603b\u548c\u591f\uff0c\u5c31\u5f80\u53f3\u5b50\u6811\u8d70\uff0c\u4e0d\u591f\u7684\u8bdd\uff0c\u7b97\u4e0a\u53f3\u5b50\u6811\uff0c\u5f80\u5de6\u5b50\u6811\u8d70 \n*/\ninline void work1()\n{\n    int maxw=-1e9-7;\n    for(int i=1;i<=m;i++) b[i]=read(),maxw=max(b[i],maxw);\n    root[0]=build(1,maxw+10);\n    for(int i=1;i<=m;i++) root[i]=update(root[i-1],1,maxw,b[i]);\n    for(int i=1;i<=q;i++)\n    {\n        int y1,y2,h;y1=read(),y1=root[read()-1],y2=read(),y2=root[read()],h=read();\n        if(st[y2].sum-st[y1].sum<h){puts(\"Poor QLW\");continue;}\n        printf(\"%d\\n\",query(1,maxw,y1,y2,h));\n    }\n}\nint main(){\n    n=read();m=read();q=read();\n    if(n!=1){//\u5408\u4e8c\u4e3a\u4e00\u8fa3\u9e21\u9898 \n        work2();\n    }\n    else work1();\n    return 0;\n}\n```",
        "postTime": 1545393593,
        "uid": 106035,
        "name": "\u6e29\u8bcd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2468 \u3010[SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6\u3011"
    },
    {
        "content": "\u849f\u84bb\u7528\u4e86\u4e00\u5929\u7684\u65f6\u95f4\u521a\u521a\u641e\u660e\u767d\u4e3b\u5e2d\u6811\n\n\u9996\u5148orz\u697c\u4e0bdalao\n\n## \u4e3b\u5e2d\u6811\u6570\u7ec4\u4e00\u5b9a\u8981\u5f00\u52301e7\u4ee5\u4e0a\uff01\uff01\uff01\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u8981\u5206\u6210\u4e24\u90e8\u5206\u505a\n\n\u5bf9\u4e8e$R,C\\leq200$\u7684\u90e8\u5206\u4f7f\u7528\u4e8c\u5206+\u524d\u7f00\u548c\n\n\u5177\u4f53\u65b9\u6cd5\u662f\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4$f1[i][j][k]$\u548c$f2[i][j][k]$\u5206\u522b\u8868\u793a$(1,1)$\u5230$(i,j)$\u7684\u5927\u4e8e\u7b49\u4e8e$k$\u7684\u6570\u7684\u548c\u4e0e\u4e2a\u6570\n\n\u9012\u63a8\u548c\u67e5\u8be2\u76f4\u63a5\u6309\u7167\u4e8c\u7ef4\u524d\u7f00\u548c\u505a\u5c31\u597d\u4e86\n\n\u67e5\u8be2\u7684\u65f6\u5019\u4e8c\u5206\u4e00\u4e2a$k$\uff0c\u770b\u77e9\u5f62\u5185\u5927\u4e8e\u7b49\u4e8e$k$\u7684\u6570\u7684\u548c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e$h$\uff0c\u6c42\u51fa\u6765\u6700\u5927\u7684$k$\u5373\u53ef\n\n\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\uff0c\u53ef\u80fd\u4e8c\u5206\u51fa\u6765\u7684\u8fd9\u4e2a$k$\u5b58\u5728\u591a\u4e2a\uff0c\u90a3\u4e48\u9700\u8981\u51cf\u53bb\u591a\u51fa\u6765\u5f97$k$\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\u518d\u67e5\u4e00\u904d\u5927\u4e8e\u7b49\u4e8e$k$\u7684\u6570\u7684\u548c\uff0c\u51cf\u53bb$h$\uff0c\u518d\u9664\u4ee5$k$\u5c31\u662f\u591a\u51fa\u6765\u7684$k$\u7684\u4e2a\u6570\u4e86\n\n\u5269\u4e0b\u7684$50\\%$\u5176\u5b9e\u5b8c\u5168\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u662f\u628a\u67e5\u8be2\u6362\u6210\u4e86\u4e3b\u5e2d\u6811\n\n\u60f3\u4e00\u60f3\u533a\u95f4$k$\u5c0f\u7684\u67e5\u8be2\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u51fa\u8fd9\u91cc\u7684\u67e5\u8be2\n\n\u8ba1\u7b97\u51fa\u53f3\u5b50\u6811\u7684\u548c(\u5f53\u7136\u662f\u5dee\u5206\u4e4b\u540e\u7684)\uff0c\u5982\u679c\u548c\u5927\u4e8e\u7b49\u4e8e$h$\u8bf4\u660e\u7b54\u6848\u5728\u53f3\u5b50\u6811\uff0c\u53cd\u4e4b\u5728\u5de6\u5b50\u6811\uff0c\u6b64\u65f6\u7b54\u6848\u8981\u52a0\u4e0a\u53f3\u5b50\u6811\u7684$size$(\u4e5f\u662f\u5dee\u5206\u4e4b\u540e\u7684),h\u8981\u51cf\u53bb\u53f3\u5b50\u6811\u7684\u548c\n\n\u6700\u540e\u67e5\u8be2\u5230\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019\u8fd4\u56de$h$\u9664\u4ee5\u5f53\u524d\u6743\u503c\u7684\u4e0a\u53d6\u6574\n\n\u590d\u6742\u5ea6$O(n\\log n)$\n\n\u5f53\u7136\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u6309\u7167\u524d$50\\%$\u7684\u601d\u8def\u505a\uff0c\u7528\u4e3b\u5e2d\u6811\u7b97\u51fa\u5927\u4e8e\u7b49\u4e8e$h$\u7684\u6570\u7684\u548c\u4e0e\u4e2a\u6570\uff0c\u590d\u6742\u5ea6$O(n\\log^2n)$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct ZXS\n{\n    int lc,rc,sum,size;\n}a[10000000];\nint nodecnt,root[10000000],n,m,w[233][233],q,ww[600000],f1[233][233][1050],f2[233][233][1050];\nint getin()\n{\n    int x=0;char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n    return x;\n}\nint wt[30];\nvoid putout(int x)\n{\n    if(!x){putchar('0');return;}\n    int l=0;\n    while(x)wt[++l]=x%10,x/=10;\n    while(l)putchar(wt[l--]+48);\n}\nvoid build(int &rot,int lt,int rt)\n{\n    rot=++nodecnt;\n    if(lt==rt)return;\n    int mid=(lt+rt)>>1;\n    build(a[rot].lc,lt,mid),build(a[rot].rc,mid+1,rt);\n}\nint update(int rot,int lt,int rt,int w)\n{\n    int o=++nodecnt;\n    a[o]=a[rot],a[o].size=a[rot].size+1,a[o].sum=a[rot].sum+w;\n    if(lt==rt)return o;\n    int mid=(lt+rt)>>1;\n    if(w<=mid)a[o].lc=update(a[o].lc,lt,mid,w);\n    else a[o].rc=update(a[o].rc,mid+1,rt,w);\n    return o;\n}\nint query(int lt,int rt,int lq,int rq,int w)\n{\n    if(lt==rt)return (w+lt-1)/lt;\n    int mid=(lt+rt)>>1,t=a[a[rq].rc].sum-a[a[lq].rc].sum;\n    if(w<=t)return query(mid+1,rt,a[lq].rc,a[rq].rc,w);\n    else return a[a[rq].rc].size-a[a[lq].rc].size+query(lt,mid,a[lq].lc,a[rq].lc,w-t);\n}\nvoid work1()\n{\n    int maxw=-1e9-7;\n    for(int i=1;i<=m;i++)ww[i]=getin(),maxw=max(ww[i],maxw);\n    build(root[0],1,m);\n    for(int i=1;i<=m;i++)root[i]=update(root[i-1],1,maxw,ww[i]);\n    for(int i=1;i<=q;i++)\n    {\n        int y1,y2,h;y1=getin(),y1=root[getin()-1],y2=getin(),y2=root[getin()],h=getin();\n        if(a[y2].sum-a[y1].sum<h){puts(\"Poor QLW\");continue;}\n        putout(query(1,maxw,y1,y2,h)),putchar(10);\n    }\n}\nint getsum(int x1,int y1,int x2,int y2,int k,int f)\n{\n    if(f==1)return f1[x2][y2][k]-f1[x2][y1-1][k]-f1[x1-1][y2][k]+f1[x1-1][y1-1][k];\n    else return f2[x2][y2][k]-f2[x2][y1-1][k]-f2[x1-1][y2][k]+f2[x1-1][y1-1][k];\n}\nvoid work2()\n{\n    int maxw=-1e9-7;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            w[i][j]=getin(),maxw=max(maxw,w[i][j]);\n    for(int k=1;k<=maxw;k++)\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=m;j++)\n            {\n                f1[i][j][k]=f1[i-1][j][k]+f1[i][j-1][k]-f1[i-1][j-1][k]+(w[i][j]>=k)*w[i][j];\n                f2[i][j][k]=f2[i-1][j][k]+f2[i][j-1][k]-f2[i-1][j-1][k]+(w[i][j]>=k);\n            }\n    for(int i=1;i<=q;i++)\n    {\n        int x1=getin(),y1=getin(),x2=getin(),y2=getin(),h=getin();\n        if(getsum(x1,y1,x2,y2,1,1)<h){puts(\"Poor QLW\");continue;}\n        int l=1,r=maxw,mid;\n        while(l<r)\n        {\n            mid=(l+r+1)>>1;\n            if(getsum(x1,y1,x2,y2,mid,1)>=h)l=mid;\n            else r=mid-1;\n        }\n        putout(getsum(x1,y1,x2,y2,l,2)-(getsum(x1,y1,x2,y2,l,1)-h)/l),putchar(10);\n    }\t\t\n}\nint main()\n{\n    n=getin(),m=getin(),q=getin();\n    if(n==1)work1();\n    else work2();\n}\n```",
        "postTime": 1534945244,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2468 \u3010[SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6\u3011"
    },
    {
        "content": "~~~\u6765\u81ea\u7528\u4e86\u534a\u4e2a\u51ac\u7720\u8425\u72c2\u6253\u6811\u5957\u6811\u7684\u67d0\u849f\u84bb\u6df1\u6df1\u7684\u6028\u5ff5~~~\n\n\u76f8\u4fe1\u5927\u5bb6\u5bf9\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u7ebf\u6bb5\u6811\u5957\u4e3b\u5e2d\u6811\uff0c\u4f46\u662f\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u7684\u4e00\u4e2a\u6761\u4ef6\uff1a\u4efb\u610fP(I,j)\u5c0f\u4e8e\u7b49\u4e8e1000\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec\u53e6\u4e00\u4e2a\u60f3\u6cd5\u3002\n\n\u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u662f\u5c06\u8be2\u95ee\u7684\u77e9\u5f62\u5185\u6240\u6709\u5143\u7d20\u585e\u8fdb\u4e00\u4e2a\u6570\u7ec4\u91cc\u5feb\u6392\uff0c\u4f46\u662f\u7531\u4e8e\u5143\u7d20\u503c\u8f83\u5c0f\uff0c\u5b8c\u5168\u53ef\u4ee5\u5c06\u77e9\u5f62\u5185\u6240\u6709\u5143\u7d20\u585e\u8fdb\u6876\u5185\u6876\u6392\u3002\u5f53\u7136\u8fd9\u6837\u4f1aT\u5230\u98de\u8d77\uff0c\u4f46\u662f\u6ce8\u610f\u5230\u6876\u5185\u4fe1\u606f\u662f\u53ef\u51cf\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u60f3\u5230\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0cs[i][j][k]\u8868\u793a\u4ee5(1,1),(I,j)\u56f4\u6210\u7684\u77e9\u5f62\u5185k\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u7136\u540e\u50cf\u666e\u901a\u7684\u4e8c\u7ef4\u524d\u7f00\u548c\u4e00\u6837O(p)\u5f97\u51fa\u8be2\u95ee\u77e9\u5f62\u5185\u7684\u6876\u6392\u7ed3\u679c\u3002\n\n\u9884\u5904\u7406\u590d\u6742\u5ea6O(nmp),\u8be2\u95ee\u590d\u6742\u5ea6\u662fO(p),\u603b\u590d\u6742\u5ea6O((nm+q)p),\u7a7a\u95f4\u590d\u6742\u5ea6O(nmp)\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc750%\u7684\u6570\u636e,\u5373n,m<=200\u3002\n\n\u5bf9\u4e8e\u53e6\u591650%\u7684\u6570\u636e\uff0c\u4f9d\u65e7\u8003\u8651\u6876\u6392\u7684\u601d\u60f3\uff0c\u4f46\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u548c\u9884\u5904\u7406\u590d\u6742\u5ea6\u5b8c\u5168\u65e0\u6cd5\u63a5\u53d7\u3002\u672c\u7740\u7edd\u5bf9\u4e0d\u6253\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\uff0c\u8003\u8651\u5206\u5757\u7684\u505a\u6cd5\u3002\n\n\u8fdb\u884c\u5206\u5757\u524d\u7f00\u548c\uff0c\u7136\u540e\u8fb9\u89d2\u585e\u6876\u7edf\u8ba1\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u7a7a\u95f4\u538b\u5230O(sqrt(m)p)\u3002\u540c\u65f6\uff0c\u4e00\u6b21\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u4e5f\u662fO(sqrt(m)p)\uff0c\u52a0\u4e0a\u9884\u5904\u7406\u7684O(sqrt(m)p)\uff0c\u603b\u590d\u6742\u5ea6\u662fO(sqrt(m)pq)\u3002\n\n\u6211\u4e0d\u77e5\u9053\u5361\u5e38\u5927\u795e\u4eec\u600e\u4e48\u6837\uff0c\u53cd\u6b63\u6211\u8fd9\u4e2a\u590d\u6742\u5ea6\u6ca1\u5361\u8fc7\u53bb\uff0c\u4f46\u662f\u540c\u6837\u57fa\u4e8e\u5206\u5757\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u60f3\u5230\u4e00\u79cd\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\uff1a\u83ab\u961f\u3002\n\n\u4e00\u6b21\u8be2\u95ee\u5230\u53e6\u4e00\u6b21\u8be2\u95ee\u95f4\u5c31\u4e0d\u65ad\u4fee\u6539\u6876\u5185\u4fe1\u606f\u5373\u53ef\uff0c\u518d\u5947\u5076\u5206\u5757\u4ec0\u4e48\u5361\u5361\u5e38\u5c31\u8fc7\u4e86\uff0c\u590d\u6742\u5ea6\u662fO(sqrt(m)m+qp),\u56e0\u4e3a\u8be2\u95ee\u53ea\u670920000\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u6b63\u89e3\u5c31\u662f\u5c06\u8fd9\u4e24\u4e2a50\u5206\u62fc\u8d77\u6765\u3002\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nchar _buf[100010],*_op(_buf),*_ed(_buf);\n#define re register \n#define FOR(i,a,b) for(re int i=a;i<=b;i++)\n#define ROF(i,a,b) for(re int i=a;i>=b;i--)\n#define gc _op==_ed&&(_op=_buf,_ed=fread(_buf,1,100000,stdin)+_buf,_op==_ed)?EOF:*_op++\nint read(){\n\tint _s=0,_f=1;\n\tchar _ch=gc;\n\twhile(_ch<'0'||_ch>'9')_f=(_ch=='-')?-1:1,_ch=gc;\n\twhile(_ch>='0'&&_ch<='9')_s=_s*10+_ch-48,_ch=gc;\n\treturn _s*_f;\n}\nconst int N=201,M=5e5+1,INF=1000,Q=2e4+1;\nint n,m,q;\nnamespace Mo{//\u83ab\u961f\u7b97\u6cd5\n\tint a[M],S,t[INF+1],ans[Q];\n\tstruct query{\n\t\tint l,r,sum,pos,id;\n\t\tvoid input(){read(),l=read(),read(),r=read(),sum=read();}\n\t\tvoid init(int p){pos=l/S,id=p;}\n\t}c[Q];\n\tbool cmp(query x,query y){\n\t\treturn x.pos!=y.pos?x.pos<y.pos:x.r<y.r^(x.pos&1);//\u5947\u5076\u5361\u5e38\u6570\n\t}\n\tvoid input(){\n\t\tFOR(i,1,m)a[i]=read();\n\t\tFOR(i,1,q)c[i].input();\n\t}\n\tvoid init(){\n\t\tS=pow(m,0.54);\n\t\tFOR(i,1,q)c[i].init(i);\n\t\tsort(c+1,c+1+q,cmp);\n\t}\n\tvoid work(){\n\t\tint l=1,r=0;\n\t\tFOR(i,1,q){\n\t\t\twhile(l>c[i].l)t[a[--l]]++;\n\t\t\twhile(r<c[i].r)t[a[++r]]++;\n\t\t\twhile(l<c[i].l)t[a[l++]]--;\n\t\t\twhile(r>c[i].r)t[a[r--]]--;\n\t\t\tint out=0,sum=c[i].sum;\n\t\t\tfor(int j=INF;j&&sum;j--)//\u8d2a\u5fc3\u9009\u70b9\n\t\t\t\tif(sum>t[j]*j)out+=t[j],sum-=t[j]*j;\n\t\t\t\telse out+=sum/j+(sum%j!=0),sum=0;\n\t\t\tif(sum>0)ans[c[i].id]=-1;\n\t\t\telse ans[c[i].id]=out;\n\t\t}\n\t}\n\tvoid output(){\n\t\tFOR(i,1,q)\n\t\t\tif(ans[i]>0)cout<<ans[i]<<'\\n';\n\t\t\telse puts(\"Poor QLW\");\n\t}\n\tvoid Main(){\n\t\tinput();\n\t\tinit();\n\t\twork();\n\t\toutput();\n\t}\n}\nnamespace pre{\n\tint s[N][N][INF+1];\n\tint a[INF+1],x;\n\tvoid input(){\n\t\tFOR(i,1,n)FOR(j,1,m)x=read(),s[i][j][x]=1;\n\t}\n\tvoid init(){\n\t\tFOR(i,1,n)FOR(j,1,m)FOR(k,1,INF)//\u524d\u7f00\u548c\n\t\t\ts[i][j][k]+=s[i-1][j][k]+s[i][j-1][k]-s[i-1][j-1][k];\n\t}\n\tvoid work(){\n\t\tint lx,ly,rx,ry,sum,out=0;\n\t\twhile(q--){\n\t\t\tlx=read()-1,ly=read()-1;\n\t\t\trx=read(),ry=read();\n\t\t\tsum=read(),out=0;\n\t\t\tfor(int i=INF;i&&sum;i--){//\u540c\u4e0a\u8d2a\u5fc3\n\t\t\t\tx=s[rx][ry][i]-s[lx][ry][i]-s[rx][ly][i]+s[lx][ly][i];\n\t\t\t\tif(sum>x*i)out+=x,sum-=x*i;\n\t\t\t\telse out+=sum/i+(sum%i!=0),sum=0;\n\t\t\t}\n\t\t\tif(sum>0)puts(\"Poor QLW\");\n\t\t\telse cout<<out<<'\\n';\n\t\t}\n\t}\n\tvoid Main(){\n\t\tinput();\n\t\tinit();\n\t\twork();\n\t}\n}\nint main(){\n\tn=read(),m=read(),q=read();\n\tif(n==1)Mo::Main();\n\telse pre::Main();\n\treturn 0;\n}\n```\n\u4ee3\u7801\u770b\u7740\u6bd4\u8f83\u957f\uff0c\u4f46\u662f\u5404\u4e2a\u90e8\u5206\u975e\u5e38\u7b80\u5355\uff0c\u7406\u89e3\u4e86\u6876\u6392\u8d2a\u5fc3\u7684\u8fc7\u7a0b\u5c31\u975e\u5e38\u5bb9\u6613\u4e86\u3002\n",
        "postTime": 1548648346,
        "uid": 109236,
        "name": "Fuyuki",
        "ccfLevel": 10,
        "title": "P2468\u9898\u89e3"
    },
    {
        "content": "~~\u6a21\u62df\u8d5b\uff0c\u672c\u6765\u5954\u7740\u6700\u591a70\u5199\u7684\uff0c\u7ed3\u679cA\u4e86~~\n\n## \u89e3\u9898\u601d\u8def\n\n- \u770b\u5230\u9b3c\u755c\u7684\u6570\u636e\u70b9\u5206\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u731c\u5230\u8fd9\u9053\u9898\u662f\u4e24\u9053\u9898\u634f\u5230\u4e00\u8d77\u7684(\n\n- \u5bf9\u4e8e\u540e$50\\%$\uff0c\u662f\u4e00\u7ef4\u6570\u636e\u3002~~\u8003\u8651\u628a$1e3$\u7684\u503c\u57df\u770b\u505a\u5e38\u6570~~\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u83ab\u961f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u8303\u56f4\u662f$1000$\u7684\u6876\uff0c\u6bcf\u6b21\u7edf\u8ba1\u7b54\u6848\u65f6\u66b4\u529b\u4ece$1000$\u5f80\u56de\u626b\uff0c\u590d\u6742\u5ea6$m \\sqrt n + m \\times \\text{\u6700\u59271000\u7684\u201c\u5e38\u6570\u201d}$\n\n- \u5bf9\u4e8e\u524d$50\\%$\uff0c\u8003\u8651\u5230\u8303\u56f4\u662f$200 \\times 200$\uff0c~~\u7ee7\u7eed\u628a$1e3$\u7684\u503c\u57df\u770b\u505a\u5e38\u6570~~\uff0c\u5f00$1000$\u7684\u6876\u5b58\u6570\uff0c\u66b4\u529b\u626b\u4e00\u904d\u7ed9\u5b9a\u957f\u65b9\u5f62\uff0c\u7136\u540e\u4ece$1000$\u5f80\u56de\u626b\u6876\uff0c\u590d\u6742\u5ea6$m n^2 + m \\times \\text{\u6700\u59271000\u7684\u201c\u5e38\u6570\u201d}$\n\n## \u4ee3\u7801\n\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\nusing std::sort;\nusing std::min;\nusing std::max;\ntypedef long long LL;\n\nint n, m;\n\nvoid Init() {\n    std::cin >> n >> m;\n}\n\nnamespace Solution1{\n    const int MAXN = 5e5 + 5;\n    const int MAXNUM = 1e3 + 5;\n    const int MAXQ = 2e4 + 5;\n\n    int cnt[MAXNUM], a[MAXN], len;\n    LL ans[MAXQ];\n    int q;\n    LL sum;\n\n    struct Query{\n        int l, r, id;\n        LL h;\n    }qs[MAXQ];\n\n    int Comp(const Query &a, const Query &b) {\n        if (a.l / len != b.l / len) return a.l < b.l;\n        if (a.l / len % 2 == 1) return a.r < b.r;\n        else return a.r > b.r;\n    }\n\n    void Add(int x) {\n        cnt[x]++;\n        sum += x;\n    }\n\n    void Del(int x) {\n        cnt[x]--;\n        sum -= x;\n    }\n\n    void Work() {\n        std::cin >> q;\n        for (int i = 1; i <= m; i++) std::cin >> a[i];\n        int tmp;\n        for (int i = 1; i <= q; i++) {\n            std::cin >> tmp >> qs[i].l >> tmp >> qs[i].r >> qs[i].h;\n            qs[i].id = i;\n        }\n        len = sqrt(m);\n        sort(qs + 1, qs + q + 1, Comp);\n        int nl = 1, nr = 0;\n        for (int i = 1; i <= q; i++) {\n            int l = qs[i].l, r = qs[i].r, id = qs[i].id;\n            // std::cerr << l << \" \" << r << \" \" << id << \"\\n\";\n            LL h = qs[i].h;\n            while (nl < l) {\n                Del(a[nl]);\n                nl++;\n            }\n            while (nl > l) {\n                nl--;\n                Add(a[nl]);\n            }\n            while (nr < r) {\n                nr++;\n                Add(a[nr]);\n            }\n            while (nr > r) {\n                Del(a[nr]);\n                nr--;\n            }\n            // std::cerr << \"###\" << \"\\n\";\n            // std::cerr << l << \" \" << r << \" \" << \"\\n\";\n            // for (int i = 1; i <= 1000; i++) std::cerr << cnt[i] << \" \";\n            // std::cerr << \"###\" << \"\\n\";\n            if (sum < h) {\n                ans[id] = -1;\n                continue;\n            }\n            for (int j = 1000; j; j--) {\n                if (cnt[j] == 0) continue;\n                if (1LL * j * cnt[j] < h) {\n                    h -= 1LL * j * cnt[j];\n                    ans[id] += cnt[j];\n                } else {\n                    // std::cerr << \"*\";\n                    LL tmp;\n                    if (h % j == 0) tmp = h / j;\n                    else tmp = h / j + 1;\n                    // std::cerr << tmp;\n                    ans[id] += tmp;\n                    // std::cerr << ans[id];\n                    break;\n                }\n            }\n        }\n        for (int i = 1; i <= q; i++) {\n            if (ans[i] == -1) std::cout << \"Poor QLW\" << \"\\n\";\n            else std::cout << ans[i] << \"\\n\";\n        }\n    }\n}\n\nnamespace Solution2{\n    const int MAXN = 205;\n    const int MAXNUM = 1e3 + 5;\n\n    int q;\n    int cnt[MAXNUM];\n    int a[MAXN][MAXN];\n\n    void Work() {\n        std::cin >> q;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                std::cin >> a[i][j];\n            }\n        }\n        int xl, xr, yl, yr;\n        LL h;\n        for (int i = 1; i <= q; i++) {\n            std::cin >> xl >> yl >> xr >> yr >> h;\n            LL ans = 0, sum = 0;\n            memset(cnt, 0, sizeof(cnt));\n            for (int j = xl; j <= xr; j++) {\n                for (int k = yl; k <= yr; k++) {\n                    cnt[a[j][k]]++;\n                    sum += a[j][k];\n                }\n            }\n            if (sum < h) {\n                std::cout << \"Poor QLW\" << \"\\n\";\n                continue;\n            }\n            for (int j = 1000; j; j--) {\n                if (cnt[j] == 0) continue;\n                if (1LL * j * cnt[j] < h) {\n                    h -= 1LL * j * cnt[j];\n                    ans += cnt[j];\n                } else {\n                    LL tmp;\n                    if (h % j == 0) tmp = h / j;\n                    else tmp = h / j + 1;\n                    ans += tmp;\n                    break;\n                }\n            }\n            std::cout << ans << \"\\n\";\n        }\n    }\n}\n\nint main() {\n    Init();\n    if (n == 1) Solution1::Work();\n    else Solution2::Work();\n    return 0;\n}\n```",
        "postTime": 1565577913,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2468 \u3010[SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6\u3011"
    },
    {
        "content": "\u770b\u4e86\u8fd9\u9053\u9898\u7684\u5176\u4ed6\u9898\u89e3\uff0c\u672c\u849f\u84bb\u53d1\u73b0\u5927\u90e8\u5206\u90fd\u662f\u5c06\u5176\u5206\u6210\u4e24\u9053\u9898\u4e8c\u5206\u52a0\u4e3b\u5e2d\u6811\u505a\u7684\uff0c\u672c\u849f\u84bb\u4fbf\u6765\u5206\u4eab\u4e00\u6ce2\u81ea\u5df1\u7684\u849f\u84bb\u505a\u6cd5--**\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u4e8c\u7ef4\u77e9\u9635\u7684\u4fe1\u606f**\u3002\n\n\u8fd9\u9053\u9898\u5168\u7a0b\u7528\u4e3b\u5e2d\u6811\uff0c\u4e0d\u8fc7\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\uff0c\u5bf9\u4e8er=1\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u4e0a\u88f8\u7684\u4e3b\u5e2d\u6811\uff0c\u5bf9\u4e8er=200\uff0cc=200\u7684\u60c5\u51b5\u6211\u4eec\u7528\u4e3b\u5e2d\u6811\u6765\u7ef4\u62a4\u77e9\u9635(0,0)\u5230(x,y)\u7684\u4fe1\u606f\uff0c\u5b83\u7531(x-1,y)\u5230(0,0)\u7684\u4fe1\u606f\u52a0\u4e0a(x,0)\u5230(x,y)\u7684\u4fe1\u606f\u5f97\u5230\u3002\u4ee3\u7801\u5982\u4e0b\n```cpp\nfor(register int i=1;i<=r;i++)\nfor(register int j=1;j<=c;j++)\n{\n\tbuild(1,tot,root[i-1][j],root[i][j],m[i][j],tmp[m[i][j]]);\n\tint tt=root[i][j];\n\tfor(register int t=1;t<j;t++) \n\tbuild(1,tot,tt,root[i][j],m[i][t],tmp[m[i][t]]),qu[++cnt]=tt,tt=root[i][j];\n}\n```\n\u800c\u5bf9\u4e8e\u67e5\u8be2\uff0c\u5219\u50cf\u4e8c\u7ef4\u524d\u7f00\u548c\u4e00\u6837\uff1b\n```cpp\ninline int ask(int l,int r,int a,int b,int c,int d,int v)\n{\n\tif(l==r) \n\t{\n\t\tint t=tr[a].size+tr[b].size-tr[c].size-tr[d].size;\n\t\twhile((int)(t-1)*tmp[l]>=v) t--;\n\t\treturn t;\n\t}\n\tint mid=(l+r)>>1,siz=tr[tr[a].ls].size+tr[tr[b].ls].size-tr[tr[c].ls].size-tr[tr[d].ls].size;\n\tint k=tr[tr[a].ls].sum+tr[tr[b].ls].sum-tr[tr[c].ls].sum-tr[tr[d].ls].sum;\n\tif(k>=v)    return ask(l,mid,tr[a].ls,tr[b].ls,tr[c].ls,tr[d].ls,v);\n\telse return ask(mid+1,r,tr[a].rs,tr[b].rs,tr[c].rs,tr[d].rs,v-k)+siz;\n}\n```\n**\u7136\u800c\uff01**\u8fd9\u6837\u5199\u662f\u8fc7\u4e0d\u4e86\u8fd9\u9053\u9898\u7684\uff1b\n\n\u5bf9\u4e8e\u6784\u5efa\u4e3b\u5e2d\u6811\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e0d\u505c\u7684\u66f4\u65b0root[x][y],\u5bfc\u81f4\u5927\u91cf\u8282\u70b9\u53ea\u662f\u4e00\u4e2a\u8fc7\u7a0b\u91cf\uff0c\u7a7a\u95f4\u88ab\u5927\u91cf\u6d6a\u8d39\uff0c\u6240\u9700\u7a7a\u95f4\u5728\u8fd9\u9053\u9898\u7684\u6781\u9650\u60c5\u51b5\u4e0b\u9ad8\u8fbe600+MB;\n\n\u63a5\u4e0b\u6765\uff0c\u849f\u84bb\u5c06\u5c55\u793a\u4ee3\u7801(\u5e26\u6ce8\u91ca)\uff0c\u8be5\u95ee\u9898\u7684\u89e3\u51b3\u529e\u6cd5\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nconst int N = 3e7;\n\ntemplate<typename T>\ninline void read(T &a)\n{\n\tT f=1;a=0;char s=getchar();\n\twhile(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n\twhile(s<='9'&&s>='0'){a=a*10+s-'0';s=getchar();}\n\ta*=f;\n}\n\nstruct node\n{\n\tint ls,size,rs,sum;\n}tr[N];\n\nint root[201][201],tcnt,rt[500001],tot;//\u56e0\u6570\u636e\u8303\u56f4\u4e0d\u540c\uff0c\u5206\u522b\u7528root[x][y],rt[x]\u6765\u8bb0\u5f55\u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u6811\u6839 \nint m[201][201],mt[500001],tmp[500001];//m,mt\u540c\u4e0a\u8bb0\u5f55\u6570\u636e\uff0ctmp\u79bb\u6563\u5316\u6570\u7ec4 \nint qu; \n\ninline void build(int l,int r,int x,int &y,int k,int v)//k,\u4e3a\u79bb\u6563\u5316\u540e\u7684\u503c\uff0cv\u4e3a\u79bb\u6563\u5316\u4e4b\u524d\u7684\u503c \n{\n\tif(qu)\ty=qu,qu=0;//qu\u8bb0\u5f55\u65e0\u7528\u8282\u70b9\uff0c\u5faa\u73af\u5229\u7528 \n\telse \ty=++tcnt;\n\ttr[y]=tr[x];tr[y].sum+=v,tr[y].size+=1;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tif(k<=mid) build(l,mid,tr[x].ls,tr[y].ls,k,v);\n\telse     build(mid+1,r,tr[x].rs,tr[y].rs,k,v);\n}\n\ninline int ask(int l,int r,int a,int b,int c,int d,int v)\n{\n\tif(l==r) \n\t{\n\t\tint t=tr[a].size+tr[b].size-tr[c].size-tr[d].size;//\u4e00\u4e2a\u503c\u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u5168\u90e8\u90fd\u9700\u8981 \n\t\twhile((int)(t-1)*tmp[l]>=v) t--;\n\t\treturn t;\n\t}\n\tint mid=(l+r)>>1,ss=tr[tr[a].ls].size+tr[tr[b].ls].size-tr[tr[c].ls].size-tr[tr[d].ls].size;\n\tint k=tr[tr[a].ls].sum+tr[tr[b].ls].sum-tr[tr[c].ls].sum-tr[tr[d].ls].sum;\n\tif(k>=v)    return ask(l,mid,tr[a].ls,tr[b].ls,tr[c].ls,tr[d].ls,v);\n\telse return ask(mid+1,r,tr[a].rs,tr[b].rs,tr[c].rs,tr[d].rs,v-k)+ss;\n}\n\nint r,c,q;\nint a,b,x,y;\nint v;\n\nint main()\n{\n\tread(r),read(c),read(q);\n\tfor(register int i=1;i<=r;i++)for(register int j=1;j<=c;j++)\n\tif(r==1) read(mt[j]),tmp[++tot]=mt[j];\n\telse     read(m[i][j]),tmp[++tot]=m[i][j];\n\tsort(tmp+1,tmp+1+tot,greater<int>());//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n\ttot=unique(tmp+1,tmp+1+tot)-tmp-1;\n\tif(r==1)//\u5206\u7c7b\u8ba8\u8bba \n\t{\n\t\tfor(register int i=1;i<=c;i++) mt[i]=lower_bound(tmp+1,tmp+1+tot,mt[i],greater<int>())-tmp;\n\t\tfor(register int i=1;i<=c;i++) build(1,tot,rt[i-1],rt[i],mt[i],tmp[mt[i]]);\n\t\tfor(register int i=1;i<=q;i++)\n\t\t{\n\t\t\tread(y),read(x),read(b),read(a),read(v);\n\t\t\tif(v>(tr[rt[a]].sum-tr[rt[x-1]].sum)) printf(\"Poor QLW\\n\");\n\t\t\telse printf(\"%d\\n\",ask(1,tot,rt[a],0,rt[x-1],0,v));\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor(register int i=1;i<=r;i++)for(register int j=1;j<=c;j++) m[i][j]=lower_bound(tmp+1,tmp+1+tot,m[i][j],greater<int>())-tmp;\n\t\tfor(register int i=1;i<=r;i++)for(register int j=1;j<=c;j++)\n\t\t{ \n\t\t\tif(j>=i)//root[i][j]\u65e0\u8bba\u4eceroot[i-1][j]\u66f4\u65b0\u51fa\u6765\uff0c\u8fd8\u662f\u4eceroot[i][j-1]\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4e00\u4e2a\u9700\u91cd\u5efai\u4e2a\u8282\u70b9\uff0c\u53e6\u4e00\u4e2a\u9700\u8981\u91cd\u5efaj\u4e2a\u8282\u70b9\u3002\u6211\u4eec\u6839\u636e\u60c5\u51b5\u6765\u5224\u65ad\u90a3\u79cd\u60c5\u51b5\u66f4\u7701\u7a7a\u95f4 \n\t\t\t{\n\t\t\t\tbuild(1,tot,root[i][j-1],root[i][j],m[i][j],tmp[m[i][j]]);\n\t\t\t\tint tt=root[i][j]; \n\t\t\t\tfor(register int t=1;t<i;t++) \n\t\t\t\tbuild(1,tot,tt,root[i][j],m[t][j],tmp[m[t][j]]),qu=tt,tt=root[i][j];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbuild(1,tot,root[i-1][j],root[i][j],m[i][j],tmp[m[i][j]]);\n\t\t\t\tint tt=root[i][j];\n\t\t\t\tfor(register int t=1;t<j;t++) \n\t\t\t\tbuild(1,tot,tt,root[i][j],m[i][t],tmp[m[i][t]]),qu=tt,tt=root[i][j];\n\t\t\t}\n\t\t}\n\t\tfor(register int i=1;i<=q;i++)\n\t\t{\n\t\t\tread(x),read(y),read(a),read(b),read(v);\n\t\t\tif(v>(tr[root[a][b]].sum+tr[root[x-1][y-1]].sum-tr[root[a][y-1]].sum-tr[root[x-1][b]].sum)) printf(\"Poor QLW\\n\");\n\t\t\telse printf(\"%d\\n\",ask(1,tot,root[x-1][y-1],root[a][b],root[a][y-1],root[x-1][b],v));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u597d\u4e86\uff0c\u9898\u89e3\u5230\u6b64\u7ed3\u675f\u3002\u7ed3\u675f\u6492\u82b1\uff01\uff01",
        "postTime": 1550320828,
        "uid": 59008,
        "name": "steven7",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2468 \u3010[SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6\u3011"
    },
    {
        "content": "\u5148\u770b\u6570\u636e\u8303\u56f4\uff1a\n\n\u5bf9\u4e8e50%\u7684\u6570\u636e\uff0c\u6ee1\u8db3$R,C \\leq 200,M \\leq 200000$\n\n\u53e6\u670950%\u7684\u6570\u636e\uff0c\u6ee1\u8db3$R=1,C \\leq 500000,M \\leq 20000$\n\n\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c\u6ee1\u8db3$1 \\leq P_{i,j} \\leq 1000,1 \\leq H_i \\leq 2000000000$\n\n\u8fd9\u5176\u5b9e\u662f\u4e00\u9053\u4e8c\u5408\u4e00\u7684\u9898\n\n# Q1:\n\n\u6570\u636e\u8303\u56f4\uff1a$R,C \\leq 200,M \\leq 200000,1 \\leq P_{i,j} \\leq 1000,1 \\leq H_i \\leq 2000000000$\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u5f88\u5947\u602a\u7684\u5730\u65b9\uff1a$1 \\leq P_{i,j} \\leq 1000$\n\n\u7528$sum_{i,j,k}$\u8868\u793a\u4ece$(1,1)$\u5230$(i,j)$\u7684\u77e9\u9635\u4e2d\u6570\u503c$=k$\u7684\u6570\u7684\u4e2a\u6570\n\n\u8f6c\u79fb\u65f6\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\uff0c\u7528\u524d\u7f00\u548c\u7b97\u51fa\u6bcf\u4e2a\u6570\u7684\u4e2a\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(1000nm)$\uff0c\u5361\u5e38\u53ef\u8fc7\n\n# Q2\uff1a\n\n\u6570\u636e\u8303\u56f4\uff1a$R=1,C \\leq 500000,M \\leq 20000,1 \\leq P_{i,j} \\leq 1000,1 \\leq H_i \\leq 2000000000$\n\n\u8003\u8651\u4e8c\u5206\u6700\u5c0f\u503c,\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u533a\u95f4\u3002\u5177\u4f53\u65b9\u5f0f\uff1a\u6211\u4eec\u5148\u8ba1\u7b97\u53f3\u5b50\u6811\u7684\u548c\uff0c\u5982\u679c\u53f3\u5b50\u6811\u4e0a\u7684\u70b9$ \\geq h$\uff0c\u6211\u4eec\u5c31\u8fdb\u5165\u53f3\u5b50\u6811\uff0c\u5426\u5219$h-=\\sum rson$\u5e76\u4e14\u8fdb\u5165\u5de6\u5b50\u6811\u3002\u5f53$l=r$\u65f6\uff0c$ans+=[\\frac{h+l-1}{l}]$\u5e76\u7ed3\u675f\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(10m log_2 m)$\uff0c\u90a3\u4e2a10\u662f\u4e8c\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7a33\u7a33\u7684\u8fc7\n\n\u4ee3\u7801\uff08std1\u89e3Q1\uff0cstd2\u89e3Q2\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nll n,m,T;\n\ninline ll read(){\n    ll x=0,tmp=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-') tmp=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        x=(x<<3)+(x<<1)+(ch^48);\n        ch=getchar();\n    }\n    return tmp*x;\n}\n\ninline void write(ll x){\n    if(x<0){\n        putchar('-');\n        x=-x;\n    }\n    ll y=10,len=1;\n    while(y<=x){\n        y=(y<<3)+(y<<1);\n        len++;\n    }\n    while(len--){\n        y/=10;\n        putchar(x/y+48);\n        x%=y;\n    }\n}\n\nnamespace std1{\n    const ll N=210,V=1010;\n    ll sum[N][N][V],f[V];\n    int main(){\n        for(ll i=1; i<=n; i++){\n            for(ll j=1; j<=m; j++){\n                ll x=read();\n                for(ll k=1; k<=1000; k++) sum[i][j][k]=sum[i-1][j][k]+sum[i][j-1][k]-sum[i-1][j-1][k];\n                sum[i][j][x]++;\n            }\n        }\n        while(T--){\n            ll x1=read(),Y1=read(),x2=read(),y2=read(),val=read(),tot=0,ans=0;\n            for(ll i=1; i<=1000; i++) f[i]=sum[x2][y2][i]-sum[x1-1][y2][i]-sum[x2][Y1-1][i]+sum[x1-1][Y1-1][i];\n            for(ll i=1000; i>=1&&tot<val; i--){\n                ll x=min(f[i],(val-tot)/i);\n                f[i]-=x; ans+=x; tot+=i*x;\n                if(f[i]>0&&tot<val){\n                    f[i]--;\n                    ans++;\n                    tot+=i;\n                }\n            }\n            if(tot>=val) write(ans);\n            else printf(\"Poor QLW\");\n            putchar('\\n');\n        }\n        return 0;\n    }\n}\n\nnamespace std2{\n    const ll N=500010;\n    ll cnt,root[N];\n    struct SegmentTree{\n        ll lson,rson,sum,size;\n    }tree[N<<5];\n    ll update(ll pre,ll l,ll r,ll val){\n        ll p=++cnt;\n        tree[p]=tree[pre];\n        tree[p].sum+=val; tree[p].size++;\n        if(l==r) return p;\n        ll mid=(l+r)>>1;\n        if(val<=mid) tree[p].lson=update(tree[pre].lson,l,mid,val);\n        if(val>mid) tree[p].rson=update(tree[pre].rson,mid+1,r,val);\n        return p;\n    }\n    ll query(ll x,ll y,ll l,ll r,ll rank){\n        ll ans=0;\n        while(l<r){\n            ll mid=(l+r)>>1,k=tree[tree[y].rson].sum-tree[tree[x].rson].sum;\n            if(k<rank){\n                ans+=tree[tree[y].rson].size-tree[tree[x].rson].size;\n                rank-=k; r=mid;\n                y=tree[y].lson;\n                x=tree[x].lson;\n            }\n            else{\n                l=mid+1;\n                x=tree[x].rson;\n                y=tree[y].rson;\n            }\n        }\n        ans+=(rank+l-1)/l;\n        return ans;\n    }\n    int main(){\n        for(ll i=1; i<=m; i++) root[i]=update(root[i-1],1,1000,read());\n        while(T--){\n            ll a=read(),b=read(),c=read(),d=read(),val=read();\n            if(tree[root[d]].sum-tree[root[b-1]].sum<val) printf(\"Poor QLW\");\n            else write(query(root[b-1],root[d],1,1000,val));\n            putchar('\\n');\n        }\n        return 0;\n    }   \n}\n\nint main(){\n    n=read(); m=read(); T=read();\n    if(n!=1) std1::main();\n    else std2::main();\n    return 0;\n}\n```",
        "postTime": 1569642046,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2468 \u3010[SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u95ee\u7684\u505a\u6cd5\u597d\u50cf\u4e0d\u592a\u4e00\u6837\n\n\u9996\u5148\u7b2c\u4e8c\u95ee\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u5728\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\u5c31\u597d\u4e86\uff0c\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6$O(logn)$\n\n\u7b2c\u4e00\u95ee\u5e76\u6ca1\u6709\u60f3\u5230\u6709\u4e8c\u5206\u8fd9\u79cd\u795e\u4ed9\u64cd\u4f5c\uff0c\u4f9d\u65e7\u7528\u7684\u662f\u4e3b\u5e2d\u6811\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u77e9\u9635\u5efa\u51fa\u4e3b\u5e2d\u6811\uff0c\u4e5f\u5c31\u662f\u50cf\u4e8c\u7ef4\u524d\u7f00\u548c\u90a3\u6837\u7684\u4e3b\u5e2d\u6811\n\n\u4f46\u662f\u4f17\u6240\u5468\u77e5\u6211\u4eec\u5199\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u65f6\u5019\u662f\u8fd9\u4e48\u5199\u7684\n\n```cpp\n\tpre[x][y]+=pre[x-1][y]+pre[x][y-1]-pre[x-1][y-1]\n\n```\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u6837\u5b50\u6211\u4eec\u6839\u672c\u6ca1\u6709\u529e\u6cd5\u4f18\u79c0\u7684\u5efa\u51fa\u4e3b\u5e2d\u6811\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6837\u5b50\u8fd8\u9700\u8981\u5bb9\u65a5\n\n\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u9ad8\u7ef4\u524d\u7f00\u548c\u7684\u601d\u8def\u6765\u5904\u7406\n\n```cpp\nfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=1;j<=m;j++) c[i][j]+=c[i][j-1];  \nfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=1;j<=m;j++) c[i][j]+=c[i-1][j];\n```\n\n\u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6309\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\u6765\u5904\u7406\uff0c\u6240\u4e00\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u7684\u53ea\u6709\u50cf\u4e00\u4e2a\u4e3b\u5e2d\u6811\u91cc\u6dfb\u52a0\u4e00\u4e2a\u70b9\u548c\u628a\u4e24\u4e2a\u4e3b\u5e2d\u6811\u5408\u5e76\u7684\u64cd\u4f5c\u4e86\n\n\u6dfb\u52a0\u4e00\u4e2a\u70b9\u662f\u5e38\u89c4\u64cd\u4f5c\uff0c\u5408\u5e76\u4e24\u4e2a\u4e3b\u5e2d\u6811\u81ea\u7136\u662f\u9700\u8981\u7ebf\u6bb5\u6811\u5408\u5e76\u4e86\n\n~~\u4e0d\u8fc7\u8fd9\u91cc\u542f\u53d1\u5f0f\u5408\u5e76\u597d\u50cf\u66f4\u80fd\u4fdd\u8bc1\u590d\u6742\u5ea6\u7684\u6837\u5b50~~\n\n\u5355\u6b21\u67e5\u8be2\u50cf\u7b2c\u4e8c\u95ee\u4e00\u6837\u5c31\u53ef\u4ee5\u4e86\uff0c\u5c31\u662f\u62ce\u51fa\u56db\u68f5\u4e3b\u5e2d\u6811\u6765\u5dee\u5206\u5c31\u597d\u4e86\n\n\u5c3d\u7ba1\u73b0\u5728\u9884\u5904\u7406\u53d8\u5f97\u6709\u4e9b\u6162\uff0c\u4f46\u662f\u73b0\u5728\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u8fd8\u662f\u975e\u5e38\u4f18\u79c0\u7684$O(log(nm))=O(logn+logm)$\n\n\u8fd9\u4e2a\u9898\u503c\u57df\u8303\u56f4\u975e\u5e38\u5c0f\uff0c\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u8fdb\u884c\u4e8c\u5206\uff0c\u597d\u50cf\u4e5f\u662f\u975e\u5e38\u4f18\u79c0\u7684$O(log(\\text{\u503c\u57df\u8303\u56f4}))$\n\n\u4e8e\u662f\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u540a\u6253\u4e86\n\n\u8fd8\u662f\u653e\u4e0a\u4ee3\u7801\u5427\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#define re register\n#define maxn 500005\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\ninline int read()\n{\n\tchar c=getchar();\n\tint x=0;\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();\n\treturn x;\n}\nint n,m,Q;\nnamespace solve1\n{\n\tint rt[201][201];\n\tint a[201][201],b[201*201],c[201][201];\n\tint l[201*201*801],r[201*201*801],d[201*201*801],sum[201*201*801];\n\tint sz,cnt;\n\tinline int find(int x)\n\t{\n\t\tint l=1,r=sz;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=l+r>>1;\n\t\t\tif(b[mid]==x) return mid;\n\t\t\tif(b[mid]<x) l=mid+1;\n\t\t\t\telse r=mid-1;\n\t\t}\n\t\treturn 0;\n\t}\n\tint change(int pre,int pos,int val,int x,int y)\n\t{\n\t\tint root=++cnt;\n\t\td[root]=d[pre]+1,sum[root]=sum[pre]+val;\n\t\tif(x==y) return root;\n\t\tl[root]=l[pre],r[root]=r[pre];\n\t\tint mid=x+y>>1;\n\t\tif(pos<=mid) l[root]=change(l[pre],pos,val,x,mid);\n\t\t\telse r[root]=change(r[pre],pos,val,mid+1,y);\n\t\treturn root;\n\t}\n\tint merge(int a,int b,int x,int y)\n\t{\n\t\tif(!a) return b;if(!b) return a;\n\t\tint root=++cnt;\n\t\tif(x==y) \n\t\t{\n\t\t\tsum[root]=sum[a]+sum[b];\n\t\t\td[root]=d[a]+d[b];\n\t\t\treturn root;\n\t\t}\n\t\tint mid=x+y>>1;\n\t\tl[root]=merge(l[a],l[b],x,mid),r[root]=merge(r[a],r[b],mid+1,y);\n\t\td[root]=d[l[root]]+d[r[root]],sum[root]=sum[l[root]]+sum[r[root]];\n\t\treturn root;\n\t}\n\tint query(int p1,int p2,int p3,int p4,int x,int y,int k)\n\t{\n\t\tif(x==y) \n\t\t{\n\t\t\tint t=-b[x];\n\t\t\tif(k%t==0) return k/t;\n\t\t\treturn k/t+1;\n\t\t}\n\t\tint now=sum[l[p1]]+sum[l[p2]]-sum[l[p3]]-sum[l[p4]];\n\t\tint mid=x+y>>1;\n\t\tif(now<k) return query(r[p1],r[p2],r[p3],r[p4],mid+1,y,k-now)+d[l[p1]]+d[l[p2]]-d[l[p3]]-d[l[p4]];\n\t\treturn query(l[p1],l[p2],l[p3],l[p4],x,mid,k);\n\t}\n\tinline void solve()\n\t{\n\t\tfor(re int i=1;i<=n;i++)\n\t\t\tfor(re int j=1;j<=m;j++) a[i][j]=c[i][j]=read(),a[i][j]=-1*a[i][j],b[++sz]=a[i][j];\n\t\tstd::sort(b+1,b+sz+1);\n\t\tsz=std::unique(b+1,b+sz+1)-b-1;\n\t\tfor(re int i=1;i<=n;i++)\n\t\t\tfor(re int j=1;j<=m;j++) a[i][j]=find(a[i][j]);\n\t\tfor(re int i=1;i<=n;i++)\n\t\t\tfor(re int j=1;j<=m;j++) rt[i][j]=change(rt[i][j-1],a[i][j],c[i][j],1,sz);\n\t\tfor(re int i=1;i<=n;i++)\n\t\t\tfor(re int j=1;j<=m;j++) rt[i][j]=merge(rt[i-1][j],rt[i][j],1,sz);\n\t\tfor(re int i=1;i<=n;i++)\n\t\t\tfor(re int j=1;j<=m;j++) c[i][j]+=c[i][j-1];  \n\t\tfor(re int i=1;i<=n;i++)\n\t\t\tfor(re int j=1;j<=m;j++) c[i][j]+=c[i-1][j];\n\t\tint sx,sy,dx,dy,K;\n\t\twhile(Q--)\n\t\t{\n\t\t\tsx=read(),sy=read(),dx=read(),dy=read(),K=read();\n\t\t\tif(c[dx][dy]+c[sx-1][sy-1]-c[dx][sy-1]-c[sx-1][dy]<K) puts(\"Poor QLW\");\n\t\t\telse printf(\"%d\\n\",query(rt[dx][dy],rt[sx-1][sy-1],rt[dx][sy-1],rt[sx-1][dy],1,sz,K));\n\t\t}\n\t}\n}\nnamespace solve2\n{\n\tint rt[maxn];\n\tint l[maxn*40],r[maxn*40],d[maxn*40],sum[maxn*40];\n\tint a[maxn],b[maxn],c[maxn];\n\tint sz,cnt;\n\tinline int find(int x)\n\t{\n\t\tint l=1,r=sz;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=l+r>>1;\n\t\t\tif(b[mid]==x) return mid;\n\t\t\tif(b[mid]<x) l=mid+1;\n\t\t\t\telse r=mid-1;\n\t\t}\n\t\treturn 0;\n\t}\n\tint change(int pre,int pos,int val,int x,int y)\n\t{\n\t\tint root=++cnt;\n\t\td[root]=d[pre]+1,sum[root]=sum[pre]+val;\n\t\tif(x==y) return root;\n\t\tl[root]=l[pre],r[root]=r[pre];\n\t\tint mid=x+y>>1;\n\t\tif(pos<=mid) l[root]=change(l[pre],pos,val,x,mid);\n\t\t\telse r[root]=change(r[pre],pos,val,mid+1,y);\n\t\treturn root;\n\t}\n\tint query(int p1,int p2,int x,int y,int k)\n\t{\n\t\tif(x==y) \n\t\t{\n\t\t\tint t=-b[x];\n\t\t\tif(k%t==0) return k/t;\n\t\t\treturn k/t+1;\n\t\t}\n\t\tint now=sum[l[p1]]-sum[l[p2]];\n\t\tint mid=x+y>>1;\n\t\tif(now<k) return query(r[p1],r[p2],mid+1,y,k-now)+d[l[p1]]-d[l[p2]];\n\t\treturn query(l[p1],l[p2],x,mid,k);\n\t}\n\tinline void solve()\n\t{\n\t\tstd::swap(n,m);\n\t\tfor(re int i=1;i<=n;i++) a[i]=-1*read(),b[++sz]=a[i],c[i]=-1*a[i];\n\t\tstd::sort(b+1,b+sz+1);\n\t\tsz=std::unique(b+1,b+sz+1)-b-1;\n\t\tfor(re int i=1;i<=n;i++) a[i]=find(a[i]);\n\t\tfor(re int i=1;i<=n;i++) rt[i]=change(rt[i-1],a[i],c[i],1,sz);\n\t\tfor(re int i=1;i<=n;i++) c[i]+=c[i-1];\n\t\tint o,x,y,K;\n\t\twhile(Q--)\n\t\t{\n\t\t\to=read(),x=read(),o=read(),y=read(),K=read();\n\t\t\tif(c[y]-c[x-1]<K) puts(\"Poor QLW\");\n\t\t\telse printf(\"%d\\n\",query(rt[y],rt[x-1],1,sz,K));\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read(),Q=read();\n\tif(n<=200&m<=200) solve1::solve();\n\t\telse solve2::solve();\n\treturn 0;\n}\n```",
        "postTime": 1544319712,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2468 \u3010[SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6\u3011"
    },
    {
        "content": "## Solution\n\n### \u6982\u8ff0\n\n\u8fd9\u9898\u662f\u4e2a\u4e8c\u5408\u4e00\u7684\u9898\uff0c\u552f\u4e00\u7684\u5171\u540c\u70b9\u5c31\u662f\u90fd\u8981\u4e8c\u5206\uff0c\u4e00\u4e2a\u662f\u4e3b\u5e2d\u6811\uff0c\u53e6\u4e00\u4e2a\u662f\u4e8c\u7ef4\u524d\u7f00\u548c\u3002\n\n\u5206\u6790\u4e00\u6ce2\u6570\u636e\uff0c50% R=1\u5c31\u662f\u5e8f\u5217\u95ee\u9898\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\uff0c\u81f3\u4e8e\u53e6\u591650%\uff0c\u5c31\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u3002\n\n### Part 1 \u4e3b\u5e2d\u6811\n\n\u8fd9\u4e2a\u5f88\u597d\u60f3\uff0c\u5c5e\u4e8e\u4e3b\u5e2d\u6811\u5927\u5957\u8def\uff0c\u4f9d\u65e7\u6bcf\u6b21\u4ece\u524d\u5411\u540e\u5efa\uff0c\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u6570\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u8981\u7ef4\u62a4\u4e24\u4e2a\u91cf\uff0c\u4e00\u4e2a\u662f\u4e2a\u6570\uff0c\u4e00\u4e2a\u662f\u548c\uff0c\u4f46\u5c5e\u4e8e\u57fa\u672c\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff0c\u63d0\u9ad8\u7ec4\u5fc5\u4f1a\u3002\n\n\u63a5\u4e0b\u6765\u4e8c\u5206\u7b54\u6848\uff0c\u5229\u7528\u4e3b\u5e2d\u6811\u6765\u9a8c\u8bc1\u3002\u65b9\u6cd5\u5c31\u662f\u7528\u524d\u9762\u7684\u51cf\u53bb\u540e\u9762\u7684\uff0c\u6c42\u533a\u95f4\u524dk\u5927\u7684\u548c\uff0c\u4e3b\u5e2d\u6811\u6a21\u7248\u7a0d\u5fae\u52a0\u5f3a\u70b9\u3002\n\n#### \u6ce8\u610f\n\n\u56e0\u4e3a\u4e00\u4e2a\u6570\u7684\u4f4d\u7f6e\u53ef\u80fd\u6709\u591a\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u6c42\u524dk\u5927\u7684\u548c\u65f6\u5207\u8bb0\u4e0d\u8981\u76f4\u63a5return sum\uff0c\u800creturn k\u4e58v\u624d\u5bf9\u3002\n\n#### \u590d\u6742\u5ea6\n\n$$\nMlog(R)log(1000)\n$$\n\n\n\n### Part 2 \u4e8c\u7ef4\u524d\u7f00\u548c\n\n\u8fd9\u4e2a\u7a0d\u5fae\u6709\u4e9b\u4e0d\u597d\u60f3\u3002\n\n#### \u53d8\u91cf\n\n\n\n$$\nf[i][j][k]\u4e3a(1,1)\u5230(i,j)\u4e2d\u5927\u4e8ek\u7684\u6570\u7684\u4e2a\u6570\n$$\n\n\n\n$$\ng[i][j][k]\u4e3a(1,1)\u5230(i,j)\u4e2d\u5927\u4e8ek\u7684\u6570\u7684\u548c\n$$\n\n\n\n\u63a5\u4e0b\u6765\u5c31\u4e8c\u5206\u5c31\u884c\u4e86\uff0c\u4e8c\u5206\u6700\u5c0f\u7684\u6570ans\n\n#### \u6ce8\u610f\n\n\u540c\u6837\u7684\u95ee\u9898\uff0c\u591a\u7684sum\u600e\u4e48\u529e\uff0c\u5c31\u505a\u5dee\u7136\u540e\u9664\u6cd5\u51cf\u6389\n\n#### \u590d\u6742\u5ea6\n\n$$\nMlog(1000)\n$$\n\n\n\n## Code\n\n```c++\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <cstdio>\n#define MAXN 500005\nusing namespace std;\n\nstruct tree{\n    int l,r;\n    tree *lson,*rson;\n    int cnt,sum;\n}pool[MAXN*20],*rt[MAXN];\n\nint tot=0;\n\ntree *build(int l,int r)\n{\n    tree* now=&pool[tot++];\n    now->l=l;now->r=r;\n    if(l==r)\n        return now;\n    int mid=(l+r)>>1;\n    now->lson=build(l,mid);\n    now->rson=build(mid+1,r);\n    return now;\n}\n\ntree *update(tree *node,int v)\n{\n    tree *now=&pool[tot++];\n    now->l=node->l;now->r=node->r;\n    if(node->l==node->r)\n    {\n        now->sum=node->sum+v;\n        now->cnt=node->cnt+1;\n        return now;\n    }\n    if(v<=node->lson->r)\n    {\n        now->rson=node->rson;\n        now->lson=update(node->lson,v);\n    }\n    else\n    {\n        now->lson=node->lson;\n        now->rson=update(node->rson,v);\n    }\n    now->sum=now->lson->sum+now->rson->sum;\n    now->cnt=now->lson->cnt+now->rson->cnt;\n    return now;\n}\n\nint query(tree *node1,tree *node2,int k)\n{\n    if(node1->l==node1->r)\n        return k*node1->l;\n    if(node2->rson->cnt-node1->rson->cnt>=k)\n        return query(node1->rson,node2->rson,k);\n    else\n        return node2->rson->sum-node1->rson->sum+query(node1->lson,node2->lson,k-(node2->rson->cnt-node1->rson->cnt));\n}\n\nint R,C,M;\nint f[205][205][1005],g[205][205][1005];//f for count g for sum\n\nint main()\n{\n    scanf(\"%d%d%d\",&R,&C,&M);\n    if(R==1)\n    {\n        int a[MAXN];\n        for(int i=1;i<=C;i++)\n            scanf(\"%d\",&a[i]);\n        rt[0]=build(1,1000);\n        for(int i=1;i<=C;i++)\n            rt[i]=update(rt[i-1],a[i]);\n        for(int i=1;i<=M;i++)\n        {\n            int x,a,y,b,h;\n            scanf(\"%d%d%d%d%d\",&x,&a,&y,&b,&h);\n            int l=1,r=b-a+1;\n            int ans=0x3f3f3f3f;\n            while(l<=r)\n            {\n                int mid=(l+r)>>1;\n                if(query(rt[a-1],rt[b],mid)>=h)\n                {\n                    ans=mid;\n                    //printf(\"%d \",ans);\n                    r=mid-1;\n                }\n                else\n                {\n                    l=mid+1;\n                }\n            }\n            if(ans!=0x3f3f3f3f)\n            printf(\"%d\\n\",ans);\n            else printf(\"Poor QLW\\n\");\n        }\n        exit(0);\n    }\n    else\n    {\n        int a[205][205];\n        for(int i=1;i<=R;i++)\n            for(int j=1;j<=C;j++)\n                scanf(\"%d\",&a[i][j]);\n        \n        memset(f,0,sizeof(f));\n        memset(g,0,sizeof(g));\n        for(int k=0;k<=1000;k++)\n        {\n            for(int i=1;i<=R;i++)\n            {\n                for(int j=1;j<=C;j++)\n                {\n                    f[i][j][k]=f[i-1][j][k]+f[i][j-1][k]-f[i-1][j-1][k];\n                    g[i][j][k]=g[i-1][j][k]+g[i][j-1][k]-g[i-1][j-1][k];\n                    if(a[i][j]>=k)\n                        f[i][j][k]+=1,g[i][j][k]+=a[i][j];\n                }\n            }\n        }\n\n        \n\n        for(int i=1;i<=M;i++)\n        {\n            int x1,y1,x2,y2,h;\n            scanf(\"%d%d%d%d%d\",&x1,&y1,&x2,&y2,&h);\n            int l=0,r=1000,ans=-1;\n            while(l<=r)\n            {\n                int mid=(l+r)>>1;\n                if(g[x2][y2][mid]-g[x2][y1-1][mid]-g[x1-1][y2][mid]+g[x1-1][y1-1][mid]>=h)ans=mid,l=mid+1;\n                else r=mid-1;\n            }\n            if(ans==-1)printf(\"Poor QLW\\n\");\n            else\n                printf(\"%d\\n\",f[x2][y2][ans]-f[x1-1][y2][ans]-f[x2][y1-1][ans]+f[x1-1][y1-1][ans]-(g[x2][y2][ans]-g[x2][y1-1][ans]-g[x1-1][y2][ans]+g[x1-1][y1-1][ans]-h)/ans);\n            \n        }\n        exit(0);\n    }\n    \n    return 0;\n}\n```\n\n",
        "postTime": 1550509002,
        "uid": 63925,
        "name": "joe19025",
        "ccfLevel": 0,
        "title": "\u4e8c\u5206+\u4e3b\u5e2d\u6811+\u4e8c\u7ef4\u524d\u7f00\u548c\u2014\u2014P2468 [SDOI2010]\u7c9f\u7c9f\u7684\u4e66\u67b6"
    }
]