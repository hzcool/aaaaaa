[
    {
        "content": "## \u849f\u84bb\u8bed\n\u6709\u795e\u4ed9\u8ba9\u849f\u84bb\u8bb2\u601d\u8def, \u849f\u84bb\u5c31\u5199\u4e86\u7bc7\u9898\u89e3 qwq\n## \u849f\u84bb\u89e3\n\u5148\u5c06\u6240\u6709\u5750\u6807\u7684 $y$ \u5750\u6807\u79bb\u6563\u5316\u3002\n\n\u7136\u540e\u628a\u6240\u6709\u5750\u6807\u6309\u7167 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57, $y$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n\u4ece\u524d\u5f80\u540e\u904d\u5386, \u7528 $dp_i$ \u8868\u793a\u4ece $(0, 0)$ \u5230 $x_i, y_i$ \u7684\u7b54\u6848\u3002\n\n\u600e\u4e48\u66f4\u65b0\u4fe1\u606f?\n\n\u8003\u8651\u7528 $k$ \u8282\u70b9\u66f4\u65b0 $i$ \u8282\u70b9\u3002\n\n\u5982\u679c $k$ \u8282\u70b9\u53ef\u4ee5\u76f4\u63a5\u7528\u8df3\u677f\u76f4\u63a5\u8df3\u5230 $i$ \u8282\u70b9, \u90a3\u4e48 $dp$ \u503c\u76f8\u540c\u3002\n\n\u5426\u5219\u8981\u4e00\u6b65\u4e00\u6b65\u8d70\u8fc7\u53bb\u3002\u5982\u679c\u80fd\u66f4\u65b0, \u90a3\u4e48 $dp_i = dp_k + x_i - x_k + y_i - y_k$\n\n\u90a3\u4e48 $dp_i - x_i - y_i = dp_k - x_k - y_k$\n\n\u5982\u679c\u8bbe $f_i = dp_i - x_i - y_i$\uff0c\u90a3\u4e48 $f_i = f_k$ !\n\n\u90a3\u4e48\u73b0\u5728\u4e22\u6389 $dp$ \u6570\u7ec4\u7136\u540e\u4f7f\u7528 $f$ \u6570\u7ec4\u3002\n\n\u73b0\u5728\u5982\u679c$k$ \u8282\u70b9\u53ef\u4ee5\u76f4\u63a5\u7528\u8df3\u677f\u76f4\u63a5\u8df3\u5230 $i$ \u8282\u70b9\n\n$f_i = dp_i - x_i - x_j = dp_k - x_i - y_i = f_k + x_k + y_k - x_i - y_i$\n\n\u90a3\u4e48\u8003\u8651\u8c01\u80fd\u591f\u66f4\u65b0\u4ed6\u5462\uff1f\n\n\u53ea\u6709 $x$ \u5750\u6807\u5c0f\u4e8e\u7b49\u4e8e\u4ed6\u800c\u4e14 $y$ \u5750\u6807\u5c0f\u4e8e\u7b49\u4e8e\u4ed6\u7684\u8282\u70b9\u53ef\u4ee5\u66f4\u65b0\u3002\n\n\u8fd9\u65f6\u663e\u7136  $x$ \u5750\u6807\u5c0f\u4e8e\u7b49\u4e8e $i$ \u8282\u70b9\u5df2\u7ecf\u6ee1\u8db3, \u800c $y$ \u5750\u6807\u6ca1\u6709\u6ee1\u8db3\u3002 \u73b0\u5728\u8981\u6c42 $y$ \u5750\u6807\u5904\u4e8e $0 ... y_i$ \u7684\u8282\u70b9\u3002\n\n$f_i$ \u662f $min(f_{1,2...i-1})$ , \u663e\u7136\u6bcf\u6b21\u628a $f$ \u503c\u4e22\u8fdb\u6811\u72b6\u6570\u7ec4\u91cc\u9762\u5c31\u53ef\u4ee5\u5355\u6b21 $O(\\log n)$ \u7ef4\u62a4\u4e86\n\n\u5982\u679c $i$ \u662f\u4e00\u4e2a\u8df3\u677f\u7684\u672b\u7aef, \u76f4\u63a5\u66f4\u65b0\u4e00\u4e0b\u5c31\u597d\u4e86qwq\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f $min(f_i + n + n)$ (\u5982\u679c\u628a\u4ed6\u5f53\u4f5c\u4e00\u4e2a\u8282\u70b9, \u90a3\u4e48 $f$ \u503c\u5c31\u662f $min(f_i)$, \u6240\u4ee5\u7b54\u6848\u662f $min(f_i + n + n)$)\n\n\u7ec6\u8282\u770b\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801\u5427 qwq\n\n```cpp\n#include<bits/stdc++.h>\n#define N 200010\nusing namespace std;\nint n, m, a[N], fr[N], to[N], Ans;\nstruct node {\n\tint x, y, yy, id;\n} p[N];\nbool cmp(node aa, node bb) {\n\treturn aa.x == bb.x ? aa.y < bb.y : aa.x < bb.x;\n}\nbool ycmp(node aa, node bb) {\n\treturn aa.y < bb.y;\n}\nint ans[N];\nvoid add(int x, int val) {\n\tfor(; x <= m * 2; x += (x & -x)) ans[x] = min(ans[x], val);\n} \nint qzh(int x) {\n\tint Ans = 0; \n\tfor(; x; x -= (x & -x)) Ans = min(Ans, ans[x]);\n\treturn Ans;\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= m; i++) {\n\t\tscanf(\"%d%d\", &p[i].x, &p[i].y), p[i].id = i;\n\t\tscanf(\"%d%d\", &p[i + m].x, &p[i + m].y), p[i + m].id = i;\n\t}\n\tsort(p + 1, p + m * 2 + 1, ycmp);\n\tp[0].y = -1;\n\tfor(int i = 1; i <= 2 * m; i++) p[i].yy = p[i - 1].yy + (p[i - 1].y != p[i].y);\n\tsort(p + 1, p + m * 2 + 1, cmp);\n\tfor(int i = 1; i <= m * 2; i++) {\n\t\tif(fr[p[i].id]) to[p[i].id] = i;\n\t\telse fr[p[i].id] = i;\n\t}\n\tfor(int i = 1; i <= m * 2; i++) {\n\t\ta[i] = min(a[i], qzh(p[i].yy));\n\t\tif(fr[p[i].id] == i) a[to[p[i].id]] = min(a[to[p[i].id]], \n\t\t\ta[i] + p[i].x + p[i].y - p[to[p[i].id]].x - p[to[p[i].id]].y);\n\t\tadd(p[i].yy, a[i]);\n\t\tAns = min(Ans, a[i]);\n\t}\n\tprintf(\"%d\\n\", Ans + n * 2);\n\treturn 0;\n}\n```",
        "postTime": 1598678501,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6007 \u3010[USACO20JAN]Springboards G\u3011"
    },
    {
        "content": "\u63d0\u524d\u58f0\u660e\uff1a\u8fd9\u662f\u4e00\u7bc7 CDQ \u7684\u9898\u89e3\uff0c\u7801\u91cf\u8d85\u7ea7\u5c0f\u7684\u5462\u3002\n\n> N*N \u7684\u77e9\u9635\uff0c\u4ece (0,0) \u8d70\u5230 (N,N)\uff0c\u6bcf\u6b21\u53ea\u80fd\u5f80\u53f3\u548c\u5f80\u4e0a\u8d70\uff08\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\uff09\uff0c\u6709 P \u4e2a\u8df3\u677f\u53ef\u4ee5\u4ece $(x_1,y_1)$ \u65e0\u4ee3\u4ef7\u8f6c\u79fb\u5230 $(x_2,y_2)$\uff0c\u6c42\u9700\u8981\u884c\u8d70\u7684\u6700\u5c11\u8ddd\u79bb\n>\n> $N\\le10^9,P\\le 10^5$\n\n\n\u840c\u65b0\u521d\u5b66 CDQ\uff0c\u53ef\u80fd\u8bb2\u7684\u6bd4\u8f83\u5570\u55e6\uff0c\u6c42\u8c05\u89e3qwq\u3002\n\n\n\n## \u601d\u8def\n\n### \u95ee\u9898\u8f6c\u5316\n\n$O(N^2)$ \u548c $O(P^2)$ \u7684\u6700\u77ed\u8def\u90fd\u663e\u7136\u4e0d\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u4e00\u4e9b\u6027\u8d28\u5e76\u8003\u8651 dp\u3002\n\n\u6bcf\u6b21\u7b54\u6848\u8ddd\u79bb\u53ea\u80fd\u4ece\u5de6\u4e0b\u65b9\u8f6c\u79fb\u800c\u6765\uff0c\u5373 $f(x_1,y_1)\\rightarrow f(x_2,y_2)$ \u6ee1\u8db3 $x1\\le x_2,y1\\le y_2$\u3002\n\n\u76f4\u63a5 dp \u9700\u8981\u8003\u8651\u4e0d\u4ece\u8df3\u677f\u8d70\u7684\u8ddd\u79bb\uff0c\u6b63\u96be\u5219\u53cd\uff0c\u6211\u4eec\u8bbe $f(x,y)$ \u8868\u793a\u8d70\u5230 $(x,y)$ \u80fd\u591f\u7701\u4e0b\u7684\u6700\u5927\u8ddd\u79bb\u3002\n\n\u6211\u4eec\u9700\u8981\u7ef4\u62a4 $x1\\le x_2,y1\\le y_2$ \u7684\u6700\u5927 $f(x_1,y_1)$\uff0c\u81f3\u6b64\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u4e8c\u7ef4\u504f\u5e8f\u3002\n\n### CDQ\n\n\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u6bcf\u4e2a\u8df3\u677f\u6709\u4e24\u4e2a\u7aef\u70b9\uff1a\u8d77\u70b9 $(x_1,y_1)$ \u548c\u7ec8\u70b9 $(x_2,y_2)$\uff0c\u5e76\u4e14\u53ea\u80fd\u4ece\u524d\u4e00\u4e2a\u7ec8\u70b9\u8f6c\u79fb\u5230\u5176\u53f3\u4e0a\u65b9\u7684\u4e00\u4e2a\u8d77\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u8df3\u677f\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u8d77\u70b9\u4f5c\u4e3a\u67e5\u8be2\uff0c\u7ec8\u70b9\u4f5c\u4e3a\u4fee\u6539\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f CDQ \u7684\u5957\u8def\uff1a\u5904\u7406\u5de6\u533a\u95f4\uff0c\u66f4\u65b0\u5de6\u533a\u95f4\u5bf9\u53f3\u533a\u95f4\u7684\u8d21\u732e\uff0c\u5904\u7406\u53f3\u533a\u95f4\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u5206\u6cbb\u7684\u5148\u540e\u987a\u5e8f\u6b63\u786e\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlog^2n)$\u3002\n\n### \u7ec6\u8282\n\n\u5199\u5b8c\u4ea4\u4e0a\u53bb\u4e00\u76f4 WA \u4e00\u4e2a\u70b9\uff0c\u8fd8\u4e0b\u4e0d\u4e86\u6570\u636e\u6025\u8e81\u534a\u5929\u3002\n\n\u540e\u6765\u60f3\u5230\uff0c\u53ef\u80fd\u4f1a\u6709\u67d0\u4e2a\u8df3\u677f\u7684\u7ec8\u70b9\u7684\u53e6\u4e00\u4e2a\u8df3\u677f\u7684\u8d77\u70b9\u91cd\u5408\uff0c\u6392\u5e8f\u4e0d\u5f53\u4f1a\u5904\u7406\u4e0d\u4e86\u3002\n\n\u53ef\u4ee5\u8f93\u5165\u65f6\u63d0\u524d\u5904\u7406\u6389\uff0c\u6216\u8005\u6392\u5e8f\u65f6\u4fdd\u8bc1\u4f4d\u7f6e\u91cd\u5408\u7684\u4fee\u6539\u5728\u8be2\u95ee\u4e4b\u524d\u5c31\u884c\uff08\u5177\u4f53\u89c1\u4ee3\u7801\u7684 cmp \u51fd\u6570\uff09\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\ntemplate<typename TT> inline void read(TT &x) {}\n\nconst int N = 2e5 + 9;\n\nstruct Node {\n\tint x1, y1, x2, y2;\n};\nstruct Point {\n\tint x, y, opt, id;\n};\n\nint n, m, cnt;\nint f[N], ans[N], len[N];\nNode a[N];\nPoint p[N];\n\ninline int calc_dis(int x1, int y1, int x2, int y2) {\n\treturn x2 - x1 + y2 - y1;\n}\n\ninline bool cmp_x(const Point &i, const Point &j) {\n\tif (i.x == j.x) {\n\t\tif (i.y == j.y) return i.opt > j.opt;// \u4f4d\u7f6e\u91cd\u5408\uff0c\u8ba9\u4fee\u6539\u5728\u524d\n\t\treturn i.y < j.y;\n\t}\n\treturn i.x < j.x;\n}\ninline bool cmp_y(const Point &i, const Point &j) {\n\tif (i.y == j.y) {\n\t\tif (i.x == j.x) return i.opt > j.opt;\n\t\treturn i.x < j.x;\n\t}\n\treturn i.y < j.y;\n}\n\nvoid CDQ(int l, int r) {\n\tif (l == r) return;\n\tint mid = (l + r) >> 1;\n\tCDQ(l, mid), sort(p+mid+1, p+r+1, cmp_y);\n\tint maxn = 0;\n\tfor (int i = mid+1, j = l, k = -1; i <= r; ++i) {\n\t\tif (p[i].opt) continue;\n\t\tint id = p[i].id;\n\t\twhile (j <= mid && p[j].y <= p[i].y) {\n\t\t\tif (p[j].opt)\n\t\t\t\tmaxn = max(maxn, ans[p[j].id]);\n\t\t\tj++;\n\t\t}\n\t\tans[p[i].id] = max(ans[p[i].id], maxn + len[p[i].id]);\n\t}\n\tsort(p+mid+1, p+r+1, cmp_x);\n\tCDQ(mid+1, r);\n\tsort(p+l, p+r+1, cmp_y);\n}\n\nint main() {\n\tread(n), read(m);\n\tfor (int i = 1; i <= m; ++i)\n\t\tread(a[i].x1), read(a[i].y1), read(a[i].x2), read(a[i].y2);\n\tfor (int i = 1; i <= m; ++i)\n\t\tp[++cnt] = (Point){a[i].x1, a[i].y1, 0, i}, p[++cnt] = (Point){a[i].x2, a[i].y2, 1, i};\n\tp[++cnt] = (Point){0, 0, 1, 0}, p[++cnt] = (Point){n, n, 0, m+1};\n\tsort(p+1, p+cnt+1, cmp_x);\n\tfor (int i = 1; i <= m; ++i)\n\t\tlen[i] = calc_dis(a[i].x1, a[i].y1, a[i].x2, a[i].y2);\n\tCDQ(1, cnt);\n\tprintf(\"%d\\n\", n + n - ans[m+1]);\n    return 0;\n}\n```\n\n\u53ef\u60dc\u8dd1\u7684\u4e0d\u5feb\u6b38\u3002",
        "postTime": 1596972323,
        "uid": 52243,
        "name": "RenaMoe",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6007 \u3010[USACO20JAN]Springboards G\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u6ca1\u6709 1log + \u7eaf BIT \u7684\u9898\u89e3\u5462~\n\n\u90a3\u6211\u6765\u6c34\u4e00\u7bc7~\n\n\u9996\u5148\u8003\u8651 dp\u3002\n\n\u8bbe $dp_i$ \u4e3a\u53ea\u4f7f\u7528\u524d $i$ \u4e2a\u8df3\u677f\uff0c\u4e14\u5fc5\u987b\u4f7f\u7528\u7b2c $i$ \u4e2a\uff0c\u80fd\u591f**\u7701\u4e0b**\u7684**\u6700\u5927\u8ddd\u79bb**\u3002\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$$dp_{i}=\\max\\limits_{x_2(j)\\leq x_1(i),y_2(j) \\leq y_1(i)}dp_{j}+x_2(i)-x_1(i)+y_2(i)-y_1(i)$$\n\n\u663e\u7136\u66b4\u529b\u8f6c\u79fb\u662f $O(p^2)$ \u7684\u3002\u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\n\n\u53d1\u73b0\u5b9e\u9645\u4e0a\u5982\u679c\u628a $dp_i$ \u7684\u503c\u8d4b\u503c\u5230 $(x_2(i),y_2(i))$ \u8fd9\u4e2a\u70b9\u4e0a\u9762\uff0c\u90a3\u4e48\u73b0\u5728\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7edf\u8ba1\u95ee\u9898\u3002\n\n~~\u4e8e\u662f\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u6811\u5957\u6811/CDQ\u4e86~~\n\n\u8bf4\u597d\u7684\u7eaf BIT \u5462\uff1f\n\n\u65e2\u7136\u8981\u7eaf BIT\uff0c\u663e\u7136\u9700\u8981\u964d\u7ef4\u3002\uff08\u56e0\u4e3a\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7a7a\u95f4\u98de\u4e86 QwQ\uff09\u3002\u53d1\u73b0\u672c\u8d28\u4e0a\u662f\u4e2a\u53ef\u4ee5\u79bb\u7ebf\u7684\u52a0\u70b9/\u77e9\u5f62\u67e5\u8be2\uff0c\u6240\u4ee5\u8003\u8651\u6392\u5e8f\u3002\n\n\u5c06\u6240\u6709\u7684\u70b9\u7684 $y$ \u5750\u6807\u79bb\u6563\u5316\uff0c\u628a $(x_1,y_1)$ \u548c $(x_2,y_2)$ \u5206\u5f00\u79bb\u6563\u5316\uff1b\n\n\u7136\u540e\u6211\u4eec\u5c31\u6709\u4e86 $2p$ \u4e2a\u5355\u70b9\uff0c\u7136\u540e\u6309\u7167 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$y$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u4e8c\u7ef4\u6570\u70b9\u5957\u8def\u4e86\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $(x_1,y_1)$\uff0c\u53ef\u4ee5\u67e5\u8be2\u533a\u95f4 $(1,y_1)$ \u7684\u6700\u5927\u503c\uff0c\u5e76\u8bb0\u5f55 $dp$ \u503c\uff1b\u5426\u5219\u5c31\u628a $dp$ \u503c\u6253\u5230 $y_2$ \u4e0a\u9762\u3002\n\n\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5355\u70b9\u4fee\u6539\u3001\u524d\u7f00\u67e5\u8be2\u6700\u5927\u503c\u3002\u663e\u7136\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\u3002\n\n\u6700\u540e\u6c42\u51fa $dp$ \u4e4b\u540e\uff0c\u7b54\u6848\u5c31\u662f $2n - \\max dp$\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86~\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(p \\log p)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(p)$\u3002\n\n\u9644\u4e2a\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\n#define int long long\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\n//\u8fd9\u4e2a\u7ed3\u6784\u4f53\u539f\u6765\u662f\u6211\u7528\u6765\u4fdd\u5b58\u8df3\u677f\u7684\uff0c\u4f46\u662f\u8c8c\u4f3c\u73b0\u5728\u4e0d\u7528\u4e5f\u53ef\u4ee5\uff08\nstruct Node {\n\tint x1, y1, x2, y2, xx1, yy1, xx2, yy2;\n\tinline bool operator < (const Node& nd) const {\n\t\treturn (x2 ^ nd.x2 ? x2 < nd.x2 : y2 < nd.y2);\n\t}\n};\n//\u8fd9\u662f\u5fc5\u8981\u7684\u4e86\u3002\u4fdd\u5b58\u8df3\u677f\u62c6\u5b8c\u540e\u7684\u5355\u70b9\u3002\nstruct _Node {\n\tint x, y, xx, yy, idx;//\u5206\u522b\u4ee3\u8868\u539f\u5750\u6807\u3001\u79bb\u6563\u5316\u540e\u5750\u6807\u3001\u5bf9\u5e94\u7684\u539f\u8df3\u677f\u7684\u4e0b\u6807\n\tbool type;//\u8868\u793a\u662f\u8d77\u70b9\u8fd8\u662f\u7ec8\u70b9\n\tinline bool operator < (const _Node& nd) const {\n\t\treturn (x ^ nd.x ? x < nd.x : y < nd.y);\n\t}\n};\nNode nd[100005];\n_Node _nd[200005];\nint n, p, dp[100005], c[200005];\n\n//\u6811\u72b6\u6570\u7ec4\ninline int Lowbit(int x) {\n\treturn x & -x;\n}\n\ninline void Update(int i, int x) {\n\tfor (register int j = i;j <= 200000;j += Lowbit(j)) c[j] = Max(c[j], x);\n}\n\ninline int Query(int i) {\n\tregister int ans = 0;\n\tfor (register int j = i;j >= 1;j -= Lowbit(j)) ans = Max(ans, c[j]);\n\treturn ans;\n}\n//\u8bfb\u5165\u6ca1\u5565\u597d\u8bf4\u7684\ninline void Read() {\n\tn = qread(); p = qread();\n\tfor (register int i = 1;i <= p;i++) {\n\t\tnd[i].x1 = qread();\n\t\tnd[i].y1 = qread();\n\t\tnd[i].x2 = qread();\n\t\tnd[i].y2 = qread();\n\t}\n}\n//\u79bb\u6563\u5316\u5750\u6807\uff0c\u6ce8\u610fx1\u548cx2\u8981\u653e\u5728\u4e00\u8d77\u79bb\u6563\u5316\uff0cy1\u548cy2\u540c\u7406\u3002\ninline void Prefix() {\n\tvector <int> vc;\n\tfor (register int i = 1;i <= p;i++) vc.push_back(nd[i].x1);\n\tfor (register int i = 1;i <= p;i++) vc.push_back(nd[i].x2);\n\tsort(vc.begin(), vc.end());\n\tfor (register int i = 1;i <= p;i++) nd[i].xx1 = lower_bound(vc.begin(), vc.end(), nd[i].x1) - vc.begin() + 1;\n\tfor (register int i = 1;i <= p;i++) nd[i].xx2 = lower_bound(vc.begin(), vc.end(), nd[i].x2) - vc.begin() + 1;\n\tvc.clear();\n\tfor (register int i = 1;i <= p;i++) vc.push_back(nd[i].y1);\n\tfor (register int i = 1;i <= p;i++) vc.push_back(nd[i].y2);\n\tsort(vc.begin(), vc.end());\n\tfor (register int i = 1;i <= p;i++) nd[i].yy1 = lower_bound(vc.begin(), vc.end(), nd[i].y1) - vc.begin() + 1;\n\tfor (register int i = 1;i <= p;i++) nd[i].yy2 = lower_bound(vc.begin(), vc.end(), nd[i].y2) - vc.begin() + 1;\n}\n\ninline void Solve() {\n\t//\u62c6\u70b9\n\tfor (register int i = 1;i <= p;i++) {\n\t\t_nd[i - 1 << 1 | 1].x = nd[i].x1;\n\t\t_nd[i - 1 << 1 | 1].y = nd[i].y1;\n\t\t_nd[i - 1 << 1 | 1].xx = nd[i].xx1;\n\t\t_nd[i - 1 << 1 | 1].yy = nd[i].yy1;\n\t\t_nd[i - 1 << 1 | 1].idx = i;\n\t\t_nd[i - 1 << 1 | 1].type = 0;\n\t\t_nd[i << 1].x = nd[i].x2;\n\t\t_nd[i << 1].y = nd[i].y2;\n\t\t_nd[i << 1].xx = nd[i].xx2;\n\t\t_nd[i << 1].yy = nd[i].yy2;\n\t\t_nd[i << 1].idx = i;\n\t\t_nd[i << 1].type = 1;\n\t}\n\t//\u6392\u5e8f\n\tsort(_nd + 1, _nd + (p << 1) + 1);\n\tfor (register int i = 1;i <= (p << 1);i++) {\n\t\tif (_nd[i].type == 0) {//\u8d77\u70b9\uff0c\u53d1\u751f\u8f6c\u79fb\n\t\t\tdp[_nd[i].idx] = Query(_nd[i].yy);\n\t\t} else {//\u7ec8\u70b9\uff0c\u52a0\u5165dp\u503c\n\t\t\tdp[_nd[i].idx] += nd[_nd[i].idx].x2 - nd[_nd[i].idx].x1 + nd[_nd[i].idx].y2 - nd[_nd[i].idx].y1;\n\t\t\tUpdate(_nd[i].yy, dp[_nd[i].idx]);\n\t\t}\n\t}\n\t//\u7edf\u8ba1\u7b54\u6848\n\tregister int ans = 0;\n\tfor (register int i = 1;i <= p;i++) {\n\t\tif (nd[i].x2 <= n && nd[i].y2 <= n) ans = Max(ans, dp[i]);\n\t}\n\tprintf(\"%lld\", (n << 1) - ans);\n}\n\nsigned main() {\n\tRead();\n\tPrefix();\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1585557971,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6007 \u3010[USACO20JAN]Springboards G\u3011"
    },
    {
        "content": "\u8003\u573a\u8003\u5230\u8fd9\u4e2a\u9898\uff0c\u770b\u4e86\u4e00\u773c\u611f\u89c9\u662f\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\uff0c\u4ed4\u7ec6\u4e00\u60f3......\n\n\n\u5c31\u5f00\u59cb\u5efa\u56fe\u8dd1\u6700\u77ed\u8def $($\n\n\n\u9996\u5148\u770b\u5230\u8fd9\u4e2a\u9898\u7b2c\u4e00\u60f3\u6cd5\u5e94\u8be5\u5c06\u6bcf\u4e2a\u8df3\u677f\u548c\u5bf9\u5e94\u843d\u70b9\u4ee5\u53ca\u8d77\u70b9\u7ec8\u70b9\u5411\u7740 $x$ \u5750\u6807\u4e0e $y$ \u5750\u6807\u90fd\u5927\u4e8e\u5b83\u7684\u5bf9\u5e94\u70b9\u8fde\u8fb9\u6743\u4e3a $|x_u-x_v|+|y_u-y_v|$ \u7684\u8fb9\uff0c\u4f46\u662f\u8fd9\u6837\u8fb9\u6570\u662f $O(n^2)$ \u7684\u80af\u5b9a\u8dd1\u4e0d\u51fa\u6765\uff0c\u8ba9\u6211\u4eec\u6765\u8003\u8651\u4e00\u4e0b\u4f18\u5316\u5efa\u56fe\u3002\n\n\u600e\u4e48\u4f18\u5316\u5462\uff1f\u9996\u5148\u6ce8\u610f\u5230\u56e0\u4e3a\u8ddd\u79bb\u662f\u66fc\u86e4\u987f\u8ddd\u79bb\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8d77\u70b9\u548c\u6bcf\u4e2a\u843d\u70b9\u5411\u7740\u8df3\u677f\u548c\u7ec8\u70b9\u8fde\u8fb9\u5373\u53ef\uff0c\u51cf\u5c0f\u5e38\u6570\u3002\u8fd9\u6837\u6211\u4eec\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u52a0\u8fdb\u70b9\u7684\u96c6\u5408\u5f53\u4e2d\uff0c\u628a\u8df3\u677f\u548c\u7ec8\u70b9\u67d3\u6210\u9ed1\u8272\uff0c\u8d77\u70b9\u548c\u843d\u70b9\u67d3\u6210\u767d\u8272\u3002\n\n\u7136\u540e\u6211\u4eec\u60ca\u559c\u5730\u770b\u5230\u8fd9\u4e2a\u8fde\u8fb9\u7684\u9650\u5236\u50cf\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\uff0c\u8003\u8651CDQ\u5206\u6cbb\u3002\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u6309 $x$ \u5750\u6807\u6392\u5e8f\uff0c\u8003\u8651\u4e00\u4e2a\u5206\u6cbb\u533a\u95f4\uff0c\u8bbe\u5176\u957f\u5ea6\u4e3a $len$ \uff0c\u6bcf\u6b21\u53ea\u8981\u5c06\u5de6\u534a\u533a\u95f4\u7684\u767d\u70b9\u5411\u53f3\u8fb9\u533a\u95f4\u7684\u9ed1\u70b9\u8fde\u8fb9\u3002\u6211\u4eec\u5c06\u5de6\u53f3\u533a\u95f4\u90fd\u6309 $y$ \u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u53d1\u73b0\u6bcf\u6b21\u8fde\u8fb9\u90fd\u662f\u5de6\u8fb9\u533a\u95f4\u7684\u4e00\u4e2a\u70b9\u5411\u53f3\u8fb9\u533a\u95f4\u7684\u4e00\u4e2a\u524d\u7f00\u8fde\u8fb9\u3002\u6211\u4eec\u65b0\u5efa $O(len)$ \u865a\u70b9\u4ee3\u8868\u6bcf\u4e2a\u524d\u7f00\u533a\u95f4\uff0c\u6bcf\u4e2a\u524d\u7f00\u865a\u70b9\u53ea\u9700\u8981\u5411\u4e0a\u4e00\u4e2a\u524d\u7f00\u865a\u70b9\u8fde\u4e00\u6761\u7684\u8fb9\uff0c\u518d\u5411\u8fd9\u4e00\u6b21\u65b0\u52a0\u5165\u7684\u8282\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u6bcf\u4e00\u4e2a\u524d\u7f00\u865a\u70b9\u90fd\u53ef\u4ee5\u5230\u8fbe\u5bf9\u5e94\u524d\u7f00\u7684\u6240\u6709\u70b9\u3002\u6700\u540e\u6211\u4eec\u53ea\u8981\u5c06\u5de6\u8fb9\u7684\u70b9\u8fde\u5411\u53f3\u8fb9\u5bf9\u5e94\u7684\u524d\u7f00\u533a\u95f4\u7684\u865a\u70b9\uff0c\u5c31\u53ef\u4ee5\u6bcf\u6b21\u65b0\u589e $O(len)$ \u4e2a\u70b9\u548c\u8fb9\u5c06\u56fe\u5efa\u597d\u4e86\u3002\n\n\u8fb9\u6743\u600e\u4e48\u529e\uff1f\u9996\u5148\u5982\u679c\u8981\u8fde\u8fb9 $x_v$ \u548c $y_v$ \u5fc5\u7136\u5927\u4e8e $x_u$ \u548c $y_u$ \uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u628a\u7edd\u5bf9\u503c\u6d88\u53bb\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u628a $u$ \u548c $v$ \u5bf9\u8fb9\u6743\u7684\u5f71\u54cd\u5206\u5f00\u8003\u8651\u3002\u6211\u4eec\u4ece\u5de6\u533a\u95f4\u7684\u4e00\u4e2a\u70b9 $u$ \u5411\u53f3\u533a\u95f4\u5bf9\u5e94\u7684\u4e00\u4e2a\u524d\u7f00\u70b9 $p_v$ \u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $-x_u-y_u$ \u7684\u8fb9\uff0c\u4ece\u524d\u7f00\u70b9 $p_v$ \u5411\u8981\u65b0\u52a0\u5165\u7684\u8282\u70b9 $v$ \u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $x_v+y_v$ \u7684\u8fb9\uff0c\u524d\u7f00\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u8fb9\u6743\u90fd\u662f $0$ \u3002\u8fd9\u6837\u6211\u4eec\u4ece\u4e00\u4e2a\u70b9 $u$ \u8d70\u5230\u70b9 $v$ \uff0c\u7ecf\u8fc7\u7684\u8fb9\u6743\u548c\u6b63\u597d\u662f $x_v+y_v-x_u-y_u$ \uff0c\u8fd9\u6837\u8fb9\u6743\u95ee\u9898\u5c31\u5341\u5206\u7f8e\u597d\u5730\u89e3\u51b3\u4e86\u3002\n\n\u6d4b\u4e86\u4e00\u4e0b\u4e00\u6761\u94fe\u7684\u6781\u9650\u6570\u636e\u53d1\u73b0\u53ea\u6709\u5927\u7ea6 $1\\times 10^6$ \u4e2a\u70b9 $2\\times 10^6$ \u6761\u8fb9\uff0c\u5174\u9ad8\u91c7\u70c8\u5730\u8dd1SPFA\uff0c\u7136\u540eT\u98de\u4e86\u3002\n\n\u4e0d\u662f\uff0c\u8fd9\u4e2a\u56fe\u662f\u4e2adag\uff0c\u90a3\u6211\u51ed\u4ec0\u4e48\u8981\u8dd1\u6700\u77ed\u8def\u561b\u3002\n\n\u62d3\u6251\u4e00\u4e0b\uff0c\u51b2\u5b8c\u4e86\u3002\n\n\u62cd\u4e86\u4e24\u7ec4\u6302\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u7684\u9ed1\u70b9\u4f1a\u548c\u767d\u70b9\u91cd\u5408\uff0c\u4e3a\u4e86\u9632\u6b62\u9ed1\u70b9\u5728\u767d\u70b9\u5de6\u8fb9\u8fde\u4e0d\u4e0a\u8fb9\uff0c\u6211\u4eec\u628acmp\u51fd\u6570\u6539\u6210\u5982\u679c $x$ \u5750\u6807\u76f8\u7b49\u5219\u6309\u767d\u70b9\u5728\u524d\u9ed1\u70b9\u5728\u540e\u6392\u5e8f\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e5f\u6109\u5feb\u5730\u89e3\u51b3\u4e86\u3002\n\n\u6211\u5728\u5206\u6cbb\u91cc\u76f4\u63a5\u5199\u7684sort\u6392\u5e8f\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log^2n)$ \uff0c\u6539\u6210\u5f52\u5e76\u6392\u5e8f\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\uff0c\u975e\u5e38\u8212\u9002\u3002\n\n\u8003\u573a\u4ee3\u7801\uff0c\u7565\u4e11\u52ff\u55b7\u3002\n\n```cpp\n#include<bits/stdc++.h>\n//lrz dhty tie tie\nusing namespace std;\nint read(){\n\tint x=0;char ch=getchar();\n\twhile(!isdigit(ch))ch=getchar();\n\twhile(isdigit(ch))x=(x<<1)+(x<<3)+(ch^'0'),ch=getchar();\n\treturn x;\n}\nconst int N=1e5+5;\ntypedef long long ll;\nstruct EDGE{\n\tint to,next;ll val;\n}edge[N*40];\nint head[N*20],deg[N*20],num_edge;\nvoid add_edge(int from,int to,ll val){\n\tedge[++num_edge].next=head[from];\n\thead[from]=num_edge;\n\tedge[num_edge].to=to;\n\tedge[num_edge].val=val;\n\tdeg[to]++;\n}\nstruct ND{\n\tll x,y;int id;bool md;\n\tND(ll _x=0,ll _y=0,int _id=0,ll _md=0){x=_x,y=_y,id=_id,md=_md;}\n}nd[N<<2],us[N<<2],uu[N<<2];\nbool cmp1(ND p,ND q){return p.x==q.x?(p.y==q.y?p.md<q.md:p.y<q.y):p.x<q.x;}\nbool cmp2(ND p,ND q){return p.y>q.y;}\nint cc,id[N<<2],m,n,cnt;\nvoid solve(int l,int r){\n\tif(l==r)return ;\n\tint mid=l+r>>1,uc=0,ct=0;\n\tsolve(l,mid),solve(mid+1,r);\n\tfor(int i=mid+1;i<=r;i++)if(nd[i].md)us[++uc]=nd[i];\n\tif(!uc)return ;\n\tsort(us+1,us+1+uc,cmp2);\n\tfor(int i=l;i<=mid;i++)if(!nd[i].md)uu[++ct]=nd[i];\n\tif(!ct)return ;\n\tsort(uu+1,uu+1+ct,cmp2);\n\tid[1]=++cnt,add_edge(id[1],us[1].id,us[1].x+us[1].y);\n\tfor(int i=2;i<=uc;i++)\n\t\tid[i]=++cnt,add_edge(id[i],id[i-1],0),add_edge(id[i],us[i].id,us[i].x+us[i].y);\n\tfor(int i=1,j=0;i<=ct;i++){\n\t\twhile(j<uc&&us[j+1].y>=uu[i].y)j++;\n\t\tif(j!=0)add_edge(uu[i].id,id[j],-uu[i].x-uu[i].y);\n\t}\n}\nll dis[N*20];bool vis[N*20];int tj[N*20];\nqueue<ll>q;\nvoid topo(int S){\n\tfor(int i=1;i<=cnt;i++){\n\t\tif(!deg[i])q.push(i);\n\t\tdis[i]=1e10;\n\t}\n\tdis[S]=0;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].to;\n\t\t\tdis[v]=min(dis[v],dis[u]+edge[i].val),deg[v]--;\n\t\t\tif(!deg[v])q.push(v);\n\t\t}\n\t}\n}\nvoid flie(){\n\tfreopen(\"A.in\",\"r\",stdin);\n\tfreopen(\"A.out\",\"w\",stdout);\n}\nint main(){\n\tm=read(),n=read();\n\tfor(int i=1;i<=n;i++){\n\t\tll sx=read(),sy=read(),tx=read(),ty=read();\n\t\tcnt++,nd[cnt]=ND(sx,sy,cnt,1),cnt++,nd[cnt]=ND(tx,ty,cnt,0);\n\t\tadd_edge(cnt-1,cnt,0);\n\t}\n\tint s,t;\n\tcnt++,s=cnt,nd[cnt]=ND(0,0,cnt,0);\n\tfor(int i=1;i<cnt;i++)if(nd[i].x==0&&nd[i].y==0)add_edge(cnt,i,0);\n\tcnt++,t=cnt,nd[cnt]=ND(m,m,cnt,1);\n\tfor(int i=1;i<cnt;i++)if(nd[i].x==m&&nd[i].y==m)add_edge(i,cnt,0);\n\tsort(nd+1,nd+1+cnt,cmp1);\n\tsolve(1,cnt);\n\ttopo(s);\n\tprintf(\"%lld\\n\",dis[t]);\n\treturn 0;\n}\n```\n",
        "postTime": 1617002611,
        "uid": 224478,
        "name": "dozenX",
        "ccfLevel": 0,
        "title": "P6007 Springboards G"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u60f3\u9519\u4e86\uff0c\u8fd8\u4ee5\u4e3a\u662f\u4ec0\u4e48\u795e\u4ed9\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\u2026\u2026\n\n\u540e\u6765\u53d1\u73b0\u5176\u5b9e\u5c31\u662f\u4e2a\u975e\u5e38\u5957\u8def\u7684\u6570\u636e\u7ed3\u6784\u4f18\u5316DP\u3002\n\n\u6734\u7d20\u7684DP\u5e94\u8be5\u4e0d\u7528\u591a\u8bf4\uff0c\u4ece\u5de6\u4e0b\u65b9\u8f6c\u79fb\u8fc7\u6765\uff0c\u8df3\u677f\u5355\u72ec\u8f6c\u79fb\u5373\u53ef\u3002\u8fd9\u6837\u662f$O(P^2)$\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f18\u5316\u964d\u4f4e\u590d\u6742\u5ea6\u3002\n\n\u5148\u4e0d\u8003\u8651\u8df3\u677f\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8c\u7ef4\u6570\u70b9\u7684\u95ee\u9898\u3002\u6211\u4eec\u5c06\u6240\u6709\u7684\u70b9\u5148\u6309\u7167x\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4y\u5750\u6807\u3002\u5b9e\u9645\u4e0a\u6211\u4eec\u8981\u67e5\u8be2\u7684\u5c31\u662f\u4e00\u4e2ay\u8f74\u4e0a\u7684\u524d\u7f00\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5b9e\u73b0\u4e0a\u7684\u7ec6\u8282\u3002\u6211\u4eec\u6734\u7d20\u7684\u8f6c\u79fb\u65b9\u7a0b\u662f$f[i]=min\\{f[j]+dis(i,j)\\}$\uff0c\u8fd9\u91cc$dis$\u6307\u7684\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\u8fd9\u600e\u4e48\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8f6c\u79fb\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u628a$dis(i,j)$\u62c6\u5f00\uff0c\u7531\u4e8e\u4ece\u5de6\u4e0b\u65b9\u8f6c\u79fb\uff0c\u90a3\u4e48\u76f4\u63a5\u53bb\u6389\u7edd\u5bf9\u503c\uff0c$f[i]=min\\{f[j]+x_i+y_i-x_j-y_j\\}$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e2d\u5e76\u4e0d\u76f4\u63a5\u63d2\u5165$f[j]$\uff0c\u800c\u662f\u63d2\u5165$f[j]-x_j-y_j$\uff0c\u8fd9\u6837\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\u5c31\u76f4\u63a5$f[i]=min\\{f[j]-x_j-y_j\\}+x_i+y_i$\u5373\u53ef\u3002\n\n\u63a5\u7740\u8003\u8651\u8df3\u677f\uff0c\u5176\u5b9e\u76f4\u63a5\u5f00\u4e00\u4e2amap\u5c31\u884c\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8df3\u677f\uff0c\u6211\u4eec\u8f6c\u79fb\u5b8c\u4e4b\u540e\u628a\u5b83\u7684$f$\u503c\u6302\u5230\u76ee\u6807\u70b9\u7684map\u4e0a\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u70b9\u8f6c\u79fb\u7684\u65f6\u5019\u770b\u770bmap\u4e2d\u662f\u5426\u6709\u5bf9\u5e94\u7684\u8df3\u677f\u80fd\u591f\u8f6c\u79fb\u5230\u5b83\uff0c\u5982\u679c\u6709\uff0c\u5c31\u76f4\u63a5\u4ecemap\u91cc\u62ff\u51fa\u6765\u8f6c\u79fb\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u56e0\u4e3a\u8df3\u677f\u6700\u591a\u53ea\u6709$P$\u4e2a\uff0c\u6240\u4ee5\u8fd9\u4e00\u90e8\u5206\u590d\u6742\u5ea6\u6700\u591a\u53ea\u6709$P\\log P$\u3002\n\n\u7ed3\u5408\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff0c\u603b\u590d\u6742\u5ea6$O(P\\log P)$\u3002\n\n## \u4ee3\u7801\n\n\u6ce8\u610fy\u5750\u6807\u9700\u8981\u79bb\u6563\u5316\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define MAX 200015\n#define INF (ll)1e16\n#define lc(x) (x<<1)\n#define rc(x) (x<<1|1)\n#define mid ((l+r)>>1)\n#define mk(x, y) (make_pair(x, y))\n#define ll long long\nusing namespace std;\n\nstruct node{\n    int x, y, tx, ty;\n    friend bool operator <(node a, node b){\n        if(a.x != b.x) return a.x < b.x;\n        else if(a.y != b.y) return a.y < b.y;\n        else if(a.tx != b.tx) return a.tx < b.tx;\n        return a.ty < b.ty;\n    }\n}a[MAX];\n\nint n, m, cnt, tot;\nint b[MAX], id[MAX];\nll s[MAX*4], f[MAX];\nmap<pair<int, int>, ll> mp, vis;\n\nvoid build(int p, int l, int r){\n    if(l == r){\n        s[p] = INF;\n        return;\n    }\n    build(lc(p), l, mid), build(rc(p), mid+1, r);\n    s[p] = min(s[lc(p)], s[rc(p)]);\n}\nvoid update(int p, int l, int r, int u, ll k){\n    if(l == r){\n        s[p] = min(s[p], k);\n        return;\n    }\n    if(mid >= u) update(lc(p), l, mid, u, k);\n    else update(rc(p), mid+1, r, u, k);\n    s[p] = min(s[lc(p)], s[rc(p)]);\n}\nll query(int p, int l, int r, int ul, int ur){\n    if(l >= ul && r <= ur) return s[p];\n    ll res = INF;\n    if(mid >= ul) res = min(res, query(lc(p), l, mid, ul, ur));\n    if(mid < ur) res = min(res, query(rc(p), mid+1, r, ul, ur));\n    return res;\n}\n\nint main()\n{\n    cin >> m >> n;\n    a[++cnt] = (node){0, 0, 0, 0}, b[++tot] = 0;\n    int x1, x2, y1, y2;\n    for(int i = 1; i <= n; ++i){\n        scanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n        b[++tot] = y1, b[++tot] = y2;\n        a[++cnt] = (node){x1, y1, x2, y2}, a[++cnt] = (node){x2, y2, 0, 0};\n    }\n    a[++cnt] = (node){m, m, 0, 0}, b[++tot] = m;\n    sort(b+1, b+tot+1);\n    tot = unique(b+1, b+tot+1)-b-1;\n    for(int i = 1; i <= cnt; ++i){\n        a[i].y = lower_bound(b+1, b+tot+1, a[i].y)-b;\n        if(a[i].ty) a[i].ty = lower_bound(b+1, b+tot+1, a[i].ty)-b;\n    }\n    sort(a+1, a+cnt+1);\n    memset(f, 0x3f, sizeof(f));\n    build(1, 1, tot);\n    f[1] = 0;\n    update(1, 1, tot, a[1].y, -a[1].x-b[a[1].y]);\n    for(int i = 2; i <= cnt; ++i){\n        ll mn = query(1, 1, tot, 1, a[i].y);\n        f[i] = min(f[i], mn+a[i].x+b[a[i].y]);\n        if(vis.count(mk(a[i].x, b[a[i].y]))) f[i] = min(f[i], mp[mk(a[i].x, b[a[i].y])]);\n        if(a[i].ty){\n            pair<int, int> p = mk(a[i].tx, b[a[i].ty]);\n            if(!vis[p]){\n                mp[p] = f[i];\n                vis[p] = 1;\n            }\n            else mp[p] = min(mp[p], f[i]);\n        }\n        update(1, 1, tot, a[i].y, f[i]-a[i].x-b[a[i].y]);\n    }\n    cout << f[cnt] << endl;\n\n    return 0;\n}\n```\n\n",
        "postTime": 1580350679,
        "uid": 22991,
        "name": "fighter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6007 \u3010[USACO20JAN]Springboards G\u3011"
    },
    {
        "content": "## \u542c\u8bf4\u6ca1\u6709\u4eba\u5199\u5206\u5757\u9898\u89e3,\u90a3\u4e48\u6211\u6765\u4e00\u53d1\n\n\u524d\u51e0\u5929\u5b66\u6821\u6a21\u62df\u8d5b\u7684\u65f6\u5019\u9047\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u5413\u5f97\u6211\u76f4\u63a5\u9a97\u4e8630\u5206(\n\n\u7136\u800c\u673a\u623f\u7684\u5927\u4f6c\u4eec\u90fd\u7eb7\u7eb7\u62ff\u51fa CDQ\uff0c\u6811\u72b6\u6570\u7ec4\uff0c\u5e73\u8861\u6811\u5404\u663e\u795e\u901a\uff0c~~\u849f\u84bb\u81ea\u95ed~~\u3002\n\n\u6211\u5c31\u60f3\u53cd\u6b63\u6811\u72b6\u6570\u7ec4\u6211\u4e5f\u4f1a\u5199\uff0c\u601d\u8def\u542c\u660e\u767d\u4e86\u5199\u4e00\u904d\u4e5f\u662f\u6d6a\u8d39\u65f6\u95f4(\n\n\u4f46\u662f\u4f5c\u4e3a\u65b0\u65f6\u4ee3\u597d\u9752\u5e74\uff0c\u9898\u8fd8\u662f\u8981\u8865\u7684\u3002\n\n\u4e3a\u4e86\u6700\u5927\u5316\u5229\u7528\u8865\u9898\u65f6\u95f4\u6548\u7387\uff0c\u6211\u5c31\u7528\u5168\u65b0\u7684\u5206\u5757A\u4e86\u8fd9\u9053\u9898\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\n------------\n\u5148\u8bf430\u5206\u7684\u5199\u6cd5\uff0c\u663e\u800c\u6613\u89c1\uff0c $p<1000$  \uff0c\u6b64\u65f6\u53ea\u8981\u7ed9\u6bcf\u4e00\u4e2a\u8e0f\u677f\u7684\u8d77\u70b9\u8fdb\u884c\u53cc\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8fdb\u884c dp\uff0c\u7ef4\u62a4\u5728\u6bcf\u4e2a\u8df3\u677f**\u5f3a\u5236\u8df3\u8dc3** \u540e\u5230\u8fbe\u7ec8\u70b9\u53ef\u4ee5\u8282\u7701\u7684\u6700\u5927\u6b65\u6570\uff0c\u6700\u540e\u7528 $n* 2$ \u51cf\u53bb\u5373\u53ef\u3002\n\n\u7136\u540e\u8003\u8651 $p<10^5$ \uff0c\u6b64\u65f6\u663e\u7136\u4e0d\u80fd\u66b4\u529b dp \u4e86\uff0c\u5148\u5bf9 $x$ \u548c $y$ \u5206\u522b\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u7136\u540e\u4ee5 $\\sqrt p$ \u4e3a\u957f\u5bbd\uff0c\u5bf9\u77e9\u9635\u8fdb\u884c\u5206\u5757\uff0c\u6309\u7167\u8df3\u677f\u8d77\u70b9\u4f4d\u7f6e\u4f9d\u6b21\u628a\u6240\u6709\u7684\u8df3\u677f\u88c5\u8fdb\u5757\u91cc\uff0c\u6ce8\u610f\u666e\u901a\u6570\u7ec4\u5bb9\u6613\u70b8\u7a7a\u95f4\uff0c\u7528 vector \u5b58\u3002\n\n\u5f88\u660e\u663e\u6211\u4eec\u8981\u51cf\u5c11\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8df3\u677f\u7684\u72b6\u6001\u8f6c\u79fb\u6b21\u6570\uff0c\u65f6\u6211\u4eec\u9009\u62e9\u6539\u53d8\u7ef4\u62a4\u7684\u4fe1\u606f\uff0c\u9009\u62e9\u7ef4\u62a4\u6bcf\u4e2a\u8df3\u677f\u7684\u4f4d\u7f6e\u5230\u7ec8\u70b9\u53ef\u4ee5\u8282\u7701\u7684\u6700\u5927\u6b65\u6570\uff0c\u6ce8\u610f\u8fd9\u91cc\u6211\u4eec**\u4e0d\u5f3a\u5236\u8df3\u8dc3**\u3002\n\n\u8fd9\u6837\u505a\u7684\u597d\u5904\u5c31\u662f\u4e00\u4e2a\u8df3\u677f\u53ef\u4ee5\u76f4\u63a5\u8868\u793a\u4ed6\u53f3\u4e0a\u6240\u6709\u8def\u5f84\u7684\u6700\u4f18\u89e3\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/26necbmi.png)\n\n\u5982\u56fe\uff0c\u7ea2\u8272\u70b9\u4e3a\u8df3\u677f\u8d77\u70b9\uff0c\u84dd\u8272\u70b9\u4e3a\u7ec8\u70b9\uff0c\u9ed1\u8272\u4e3a\u5176\u4ed6\u8df3\u677f\u7684\u8d77\u70b9\u3002\u53d1\u73b0\u4e24\u79cd\u8f6c\u79fb\u65b9\u6cd5\uff0c\u5206\u522b\u662f\u4ece\u7c89\u8272\u7ebf\u4e0a\u7684\u70b9\u76f4\u63a5\u8f6c\u79fb\u5230\u7ea2\u8272\u70b9\uff0c\u8868\u793a\u4e0d\u9009\u62e9\u8df3\u8dc3\uff0c\u76f4\u63a5\u8d70\u5230\u5176\u4ed6\u70b9\uff0c\u548c\u4ece\u7eff\u8272\u7ebf\u4e0a\u7684\u9ed1\u70b9\u8f6c\u79fb\u5230\u84dd\u8272\u70b9\uff0c\u518d\u52a0\u4e0a\u4ece\u7ea2\u5230\u84dd\u8282\u7701\u7684\u6b65\u6570\uff0c\u8868\u793a\u9009\u62e9\u8df3\u8dc3\uff0c\u518d\u8d70\u5230\u5176\u4ed6\u70b9\u3002\u5269\u4e0b\u7684\u9ed1\u70b9\u5c31\u4e0d\u7528\u7ba1\u4e86\u3002\n\n\u6b64\u65f6\u806a\u660e\u7684\u6211\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\u8bb0\u5f55\u5757\u5185\u7684\u5de6\u4e0b\u65b9\u6ca1\u6709\u70b9\u7684\u70b9\uff0c\u5757\u95f4\u8f6c\u79fb\u65f6\u4e4b\u8003\u8651\u8fd9\u4e9b\u70b9\uff0c\u4e4b\u540e\u5982\u679c\u53d1\u73b0\u4e00\u4e2a\u5757\u7684\u5757\u5185\u6709\u70b9\uff0c\u53f3\u4e0a\u65b9\u7684\u5757\u5c31\u4e0d\u53bb\u67e5\u8be2\u4e86\u3002\u81f3\u4e8e\u5757\u5185\uff0c\u66b4\u529b\u5c31\u884c\u3002\n\n\u4f46\u6b64\u65f6\u806a\u660e\u7684\u4f60\u9a6c\u4e0a\u62ff\u51fa\u6765\u4e00\u7ec4\u6570\u636e\u6765 hack \u6211\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ym3o448i.png)\n\n\u5982\u56fe\uff0c\u6bcf\u4e00\u4e2a\u9ed1\u70b9\u90fd\u4f1a\u8f6c\u79fb\u5230\u6240\u6709\u7ea2\u70b9\uff0c\u6b64\u65f6\u65f6\u95f4\u77ac\u95f4\u88ab\u5361\u5230\u4e86 $p^2$ \u3002\n\n\u7136\u540e\u5206\u6790\uff0c\u4e3a\u4ec0\u4e48\u65f6\u95f4\u4f1a\u88ab\u5361\u7206\u5462\uff1f\u663e\u7136\u53d1\u73b0\uff0c\u5728\u4e4b\u524d\u7684\u56fe\u4e2d\uff0c\u5982\u679c\u4f60\u9009\u4e2d\u4e86\u4e00\u4e2a\u70b9\n\u4f5c\u4e3a\u8f6c\u79fb\u5bf9\u8c61\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u53f3\u4e0a\u65b9\u5c31\u6ca1\u5fc5\u8981\u67e5\u8be2\u4e86\u3002\u7136\u800c\u7ea2\u70b9\u7684\u4fe1\u606f\u4e92\u4e0d\u5305\u542b\uff0c\u9ed1\u70b9\u53ea\u80fd\u66b4\u529b\u8f6c\u79fb\u4e86\u3002\u800c\u4e14\u9ed1\u70b9\u548c\u9ed1\u70b9\u4e5f\u4e92\u4e0d\u6784\u6210\u5305\u542b\u5173\u7cfb\u3002\n\n\u65e2\u7136\u6ca1\u6709\u70b9\u80fd\u5305\u542b\u7ea2\u70b9\uff0c\u90a3\u5c31\u65b0\u5efa\u4e00\u4e9b\u8282\u70b9\u5305\u542b\u4e0d\u5c31\u884c\u4e86\uff1f\u5982\u679c\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a\u5757\u7684\u5de6\u4e0b\u89d2\u52a0\u4e0a\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u5c31\u4f1a\u5305\u542b\u5757\u5185\u7684\u6240\u6709\u4fe1\u606f\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hri9xlm5.png)\n\n\u5982\u56fe\uff0c\u9ec4\u7ebf\u8868\u793a\u5757\u8fb9\u754c\uff0c\u7eff\u70b9\u8868\u793a\u65b0\u5efa\u7684\u8282\u70b9\uff0c\u6b64\u65f6\u6bcf\u4e00\u4e2a\u9ed1\u8282\u70b9\u53ea\u4f1a\u4ece\u6070\u597d\u4e00\u4e2a\u7eff\u8282\u70b9\u8fdb\u884c\u8f6c\u79fb\uff0c\u800c\u6bcf\u4e00\u4e2a\u7ea2\u8282\u70b9\u53c8\u6070\u597d\u88ab\u81f3\u5c11\u4e00\u4e2a\u7eff\u8282\u70b9\u8fdb\u884c\u5305\u542b\uff0c\u7eff\u70b9\u6570\u91cf\u4e5f\u4e3a $O(p)$ \u3002\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86 $O(p)$ \u4e86\n\n\u7136\u540e\u806a\u660e\u7684\u4f60\u53c8\u62ff\u51fa\u4e86\u4e00\u7ec4\u6570\u636e hack \u6211\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/m6uthoz2.png)\n\n\u770b\u6837\u5b50\u7eff\u70b9\u4e5f\u4e27\u5931\u4f5c\u7528\u4e86\u3002\n\n\u4f46\u4e8b\u5b9e\u771f\u7684\u5982\u6b64\u5417\uff1f\u522b\u5fd8\u4e86\u6211\u4eec\u662f\u5bf9 $x$ \u548c $y$ \u5206\u522b\u8fdb\u884c\u79bb\u6563\u5316\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5757\u7684\u957f\u5bbd\u6700\u5927\u4e3a $\\sqrt p$ \uff0c\u540c\u65f6\u5757\u5185\u4e5f\u6700\u591a\u5b58 $\\sqrt p$ \u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u574f\u60c5\u51b5\u5757\u95f4\u8f6c\u79fb\u7684\u590d\u6742\u5ea6\u4e5f\u662f  $O(p)$ \u7684\u3002\u800c\u4e14\u8fd9\u6837\u7684\u8f6c\u79fb\u662f\u6709\u9650\u7684\uff0c\u5e73\u5747\u4e0b\u6765\uff0c\u590d\u6742\u5ea6\u5e94\u8be5\u662f \n$O(p\\sqrt p)$\u3002\n\n\u5f53\u7136\u4e86\uff0c\u6709\u65f6\u5019\u60c5\u51b5\u4f1a\u6781\u7aef\u4e00\u70b9\uff0c\u4f8b\u5982 $x$ \u7684\u53d6\u503c\u4e3a\u5206\u6563\uff0c\u4f46 $y$ \u53ea\u4f1a\u53d6 $1$ \u6216 $2$\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b \u4e00\u4e2a\u5757\u5185\u4e5f\u53ef\u80fd\u51fa\u73b0 $p$ \u7ea7\u522b\u7684\u70b9\u6570\u3002\u4f46\u6b64\u65f6\u53d1\u73b0\u70b9\u5927\u591a\u7684\u5750\u6807\u90fd\u662f\u91cd\u5408\u7684\u3002\u6240\u4ee5\u5199\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u8bb0\u5f55 $x$ \u4e3a\u67d0\u4e2a\u503c\u65f6\u7684\u6700\u5927\u8f6c\u79fb\u65b9\u6848\u6570\uff0c\u548c $y$ \u4e3a\u67d0\u4e2a\u503c\u65f6\u7684\u6700\u5927\u8f6c\u79fb\u65b9\u6848\u6570\u3002\n\n\u73b0\u5728\uff0c\u6700\u7ec8\u65b9\u6848\u5df2\u7ecf\u8fd1\u5728\u54ab\u5c3a\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u6b63\u4e0a\u65b9\u5757\u7684\u8f6c\u79fb\uff0c\u6b63\u53f3\u65b9\u5757\u7684\u8f6c\u79fb\uff0c\u4ee5\u53ca\u53f3\u4e0a\u65b9\u7b2c\u4e00\u4e2a\u7eff\u70b9\u7684\u8f6c\u79fb\u5373\u53ef\u3002\u522b\u5fd8\u4e86\u5bf9\u5757\u5185\u8fdb\u884c\u66b4\u529b\u8f6c\u79fb\u3002\n\n### AC\u4ee3\u7801\n\n\n------------\n\u5438\u6c27\u4f18\u5316\u60c5\u51b5\u4e0b $2s$ \u4e0d\u5f00\u662f $5s$ \u5de6\u53f3\uff0c\u5361\u5361\u5e38\u6570\u5e94\u8be5\u53ef\u4ee5\u66f4\u5feb\n\n\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u4f18\u5316\u53ef\u4ee5\u52a0\u901f\uff0c\u4e0d\u8fc7\u6211\u662f\u61d2\u72d7\uff0c\u5c31\u4e0d\u52a0\u4e86\n\n\u849f\u84bb\u7801\u98ce\u96be\u770b\uff0c\u8bf7\u89c1\u8c05\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define intl long long\nusing namespace std;\nint n,m,eont,eont2,k,k2,mp[400005],mp2[400005],ll[5005],rr[5005],ll2[5005],rr2[5005],bl[400005],bl2[400005],sq,sq2,fnk[2000][2000],fmk[2000][2000],zont,ans;\nvector<vector<int> > fzz;\nvector<int> fx;\nvector<vector<vector<int> > > fk;\nvector<vector<vector<int> > > fnmdp;\nint xmm[400005],ymm[400005];\nstruct lsh {\n\tint val,id,w;\n} e[800005],e2[800005];\nstruct node {\n\tint x,y,a,b,v,k;\n} a[400005];\nbool cmp(lsh a,lsh b) {\n\treturn a.val<b.val;\n}\nbool ccp(node a,node b) {\n\tif(a.x==b.x)return a.y>b.y;\n\treturn a.x>b.x;\n}\ninline void fbl(int bx,int by,int z,int zx,int zy,bool adSelf) {\n\tfor(int i=1; i<=fmk[bx][by]; ++i) {\n\t\tint ii=fk[bx][by][i];\n\t\tif(a[ii].x>=zx&&a[ii].y>=zy&&ii!=z) {\n\t\t\tif(adSelf)a[z].k=max(a[z].k,a[z].v+a[ii].k);\n\t\t\telse a[z].k=max(a[z].k,a[ii].k);\n\t\t}\n\t}\n}\ninline void fd(int z,int t,bool adSelf) {\n\tif(adSelf)a[z].k=max(a[z].k,a[z].v+a[t].k);\n\telse a[z].k=max(a[z].k,a[t].k);\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=m; ++i) {\n\t\tscanf(\"%d\",&e[++eont].val);\n\t\te[eont].id=i;\n\t\te[eont].w=1;\n\t\tscanf(\"%d\",&e2[++eont2].val);\n\t\te2[eont2].id=i;\n\t\te2[eont2].w=2;\n\t\tscanf(\"%d\",&e[++eont].val);\n\t\te[eont].id=i;\n\t\te[eont].w=3;\n\t\tscanf(\"%d\",&e2[++eont2].val);\n\t\te2[eont2].id=i;\n\t\te2[eont2].w=4;\n\t\ta[i].k=a[i].v=e[eont].val-e[eont-1].val+e2[eont2].val-e2[eont2-1].val;\n\t}\n\tsort(e+1,e+1+eont,cmp);\n\tsort(e2+1,e2+1+eont2,cmp);\n\te[0].val=e[1].val-1;\n\te2[0].val=e2[1].val-1;\n\tfor(int i=1; i<=eont; ++i) {\n\t\te[i].val!=e[i-1].val?k++:0;\n\t\tmp[i]=e[i].val;\n\t\tif(e[i].w==1) {\n\t\t\ta[e[i].id].x=k;\n\t\t} else if(e[i].w==3) {\n\t\t\ta[e[i].id].a=k;\n\t\t}\n\t}\n\tfor(int i=1; i<=eont2; ++i) {\n\t\te2[i].val!=e2[i-1].val?k2++:0;\n\t\tmp2[i]=e2[i].val;\n\t\tif(e2[i].w==2) {\n\t\t\ta[e2[i].id].y=k2;\n\t\t} else if(e2[i].w==4) {\n\t\t\ta[e2[i].id].b=k2;\n\t\t}\n\t}\n\tfor(int i=1; i<=m; ++i) {\n\t}\n\tsq=sqrt(k);\n\tsq2=sqrt(k2);\n\tfx.push_back(0);\n\tfor(int i=1; i<=sq2+5; ++i)fzz.push_back(fx);\n\tfor(int i=1; i<=sq+5; ++i)fk.push_back(fzz);\n\tfor(int i=1; i<=sq+5; ++i)fnmdp.push_back(fzz);\n\tfor(int i=1; i<=sq; ++i) {\n\t\tll[i]=k/sq*(i-1)+1;\n\t\trr[i]=k/sq*i;\n\t}\n\tfor(int i=1; i<=sq2; ++i) {\n\t\tll2[i]=k2/sq2*(i-1)+1;\n\t\trr2[i]=k2/sq2*i;\n\t}\n\trr[sq]=k,rr2[sq2]=k2;\n\tfor(int i=1; i<=sq; ++i)\n\t\tfor(int j=ll[i]; j<=rr[i]; ++j)\n\t\t\tbl[j]=i;\n\tfor(int i=1; i<=sq2; ++i)\n\t\tfor(int j=ll2[i]; j<=rr2[i]; ++j)\n\t\t\tbl2[j]=i;\n\tfor(int i=1; i<=sq; ++i) {\n\t\tfor(int j=1; j<=sq2; ++j) {\n\t\t\tif(fmk[i][j]==0) {\n\t\t\t\t++zont;\n\t\t\t\t++fmk[i][j];\n\t\t\t\tfk[i][j].push_back(m+zont);\n\t\t\t\ta[m+zont].x=a[m+zont].a=ll[i];\n\t\t\t\ta[m+zont].y=a[m+zont].b=ll2[j];\n\t\t\t\ta[m+zont].v=0;\n\t\t\t\ta[m+zont].k=0;\n\t\t\t}\n\t\t}\n\t}\n\tsort(a+1,a+m+1,ccp);\n\tfor(int i=1; i<=m; ++i) {\n\t\t++fmk[bl[a[i].x]][bl2[a[i].y]];\n\t\tfk[bl[a[i].x]][bl2[a[i].y]].push_back(i);\n\t\t++fnk[bl[a[i].a]][bl2[a[i].b]];\n\t\tfnmdp[bl[a[i].a]][bl2[a[i].b]].push_back(i);\n\t}\n\tfor(int xx=sq; xx>=1; --xx)\n\t\tfor(int yy=sq2; yy>=1; --yy) {\n\t\t\tif(xx!=sq&&yy!=sq2) {\n\t\t\t\txmm[rr[xx]]=max(xmm[rr[xx]],a[fk[xx+1][yy+1][1]].k);\n\t\t\t\tymm[rr2[yy]]=max(ymm[rr2[yy]],a[fk[xx+1][yy+1][1]].k);\n\t\t\t}\n\t\t\tfor(int ii=1; ii<=fnk[xx][yy]; ++ii) {\n\t\t\t\tint i=fnmdp[xx][yy][ii];\n\t\t\t\tfor(int q=a[i].a; q<=rr[xx]; ++q) {\n\t\t\t\t\tif(!xmm[q])continue;\n\t\t\t\t\ta[i].k=max(a[i].k,a[i].v+xmm[q]);\n\t\t\t\t}\n\t\t\t\tfor(int q=a[i].b; q<=rr2[yy]; ++q) {\n\t\t\t\t\tif(!ymm[q])continue;\n\t\t\t\t\ta[i].k=max(a[i].k,a[i].v+ymm[q]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int ii=2,z=1; z||ii==1; ++ii) {\n\t\t\t\tif(ii>fmk[xx][yy])z=0,ii=1;\n\t\t\t\tint i=fk[xx][yy][ii];\n\t\t\t\tint xxx=bl[a[i].a],yyy=bl2[a[i].b];\n\t\t\t\t//\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\n\t\t\t\tfbl(xx,yy,i,a[i].x,a[i].y,0);\n\t\t\t\tif(xx!=sq)fbl(xx+1,yy,i,a[i].x,a[i].y,0);\n\t\t\t\tif(yy!=sq2)fbl(xx,yy+1,i,a[i].x,a[i].y,0);\n\t\t\t\tif(xx!=sq&&yy!=sq2)fd(i,fk[xx+1][yy+1][1],0);\n\t\t\t\t//\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\t--\n\t\t\t\tfbl(xxx,yyy,i,a[i].a,a[i].b,1);\n\t\t\t\tif(xxx!=sq&&yyy!=sq2)fd(i,fk[xxx+1][yyy+1][1],1);\n\t\t\t\tans=max(ans,a[i].k);\n\t\t\t\txmm[a[i].x]=max(xmm[a[i].x],a[i].k);\n\t\t\t\tymm[a[i].y]=max(ymm[a[i].y],a[i].k);\n\t\t\t}\n\t\t}\n\n\tprintf(\"%d\",n*2-ans);\n}\n```\n\n\n\n\n",
        "postTime": 1627056939,
        "uid": 279095,
        "name": "gargantuar",
        "ccfLevel": 0,
        "title": "\u5206\u5757\u5927\u6cd5\u597d"
    },
    {
        "content": "~~\u5f00\u73ed\u4f1a\u6c34\u9898\u89e3\u7f8e\u6ecb\u6ecb~~\n\n\u5177\u4f53\u7684\u6811\u72b6\u6570\u7ec4\u7684\u505a\u6cd5\u697c\u4e0aClCN\u5927\u4f6c\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86%%%\uff01\n\n\u8fd9\u91cc\u4e3b\u8981\u505a\u4e00\u70b9\u70b9\u8865\u5145\u548c\u4ee3\u7801\u4e0a\u7684\u4f18\u5316qwq\n\n\u524d\u9762\u90fd\u8fd8\u662f\u4e00\u6837\uff0c\u6211\u4eec\u8003\u8651\u8d70\u7684\u8ddd\u79bb\u6700\u77ed\u4e0d\u597d\u6c42\u53ef\u4ee5\u8f6c\u5316\u6210\u6211\u4eec\u8df3\u7684\u8ddd\u79bb\u6700\u957f\n\n\u6240\u4ee5\u53ef\u4ee5\u63a8\u51fa\u4e00\u4e2a\u8f6c\u79fb\u65b9\u7a0b\n\n$$f_i=\\max\\{f_j+dis(i)\\}(x_i\\geq x_j,y_i\\geq y_j)$$\n\n\u5176\u4e2d$dis(i)$\u8868\u793a\u8fd9\u4e2a\u8df3\u677f\u8df3\u7684\u8ddd\u79bb\n\n\u7136\u540e\u6211\u4eec\u5c06\u6bcf\u4e2a\u8df3\u677f\u62c6\u6210\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u7136\u540e\u5148\u6309$x$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57$y$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u628a\u8be2\u95ee\u8f6c\u5316\u6210\u5728$y$\u8f74\u4e0a\u7684\u4e00\u7ef4\u8be2\u95ee\uff0c\u79bb\u6563\u5316\u4e00\u4e0b\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00max\u5c31\u53ef\u4ee5\u4e86\n\n\u4f46\u662f\u5b9e\u9645\u4e0a\u4e0d\u7528\u62c6\u70b9\u62c6\u7684\u90a3\u4e48\u9ebb\u70e6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u5bf9\u4e8e$dis$\u7684\u6c42\u89e3\uff0c\u76f4\u63a5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u8fdb\u884c\u9884\u5904\u7406\u5c31\u53ef\u4ee5\u4e86\n\n\u6ce8\u610f\u6700\u540e\u7b54\u6848\u53ea\u80fd\u662f$x,y$\u90fd$\\leq n$\u7684\u91cc\u9762\u7684max\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=2e5+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n,p,nsz;\nint b[N],sz;\nint f[N],dis[N];\nint bit[N];\nint ans;\n\nstruct node{\n    int x,y,opt,bel;\n    bool operator < (const node &cmp)const{\n        if(x!=cmp.x)return x<cmp.x;\n        if(y!=cmp.y)return y<cmp.y;\n        return opt<cmp.opt;\n    }\n}a[N];\n\nint lowbit(int o){\n    return o&-o;\n}\n\nint add(int o,int x){\n    for(;o<=nsz;o+=lowbit(o))bit[o]=max(bit[o],x);\n}\n\nint ask(int o){\n    int res=0;\n    for(;o;o-=lowbit(o))res=max(res,bit[o]);\n    return res;\n}\n\nint main()\n{\n    read(n),read(p);\n    Rep(i,1,p){\n        int x,y;\n        read(x),read(y);\n        a[++sz]=(node){x,y,0,i};\n        b[sz]=y;\n        dis[i]-=x+y;\n        read(x),read(y);\n        a[++sz]=(node){x,y,1,i};\n        b[sz]=y;\n        dis[i]+=x+y;\n    }\n    a[++sz]=(node){n,n,2,0};\n    sort(b+1,b+sz+1);\n    nsz=unique(b+1,b+sz+1)-b-1;\n    Rep(i,1,sz)a[i].y=lower_bound(b+1,b+nsz+1,a[i].y)-b;\n    sort(a+1,a+sz+1);\n    Rep(i,1,sz){\n        if(a[i].opt==2){\n            Rep(j,1,p)if(a[i].x>=a[j].x&&a[i].y>=a[j].y)ans=max(ans,f[j]);\n            printf(\"%d\\n\",2*n-ans);\n            return 0;\n        }\n        if(!a[i].opt)f[a[i].bel]=ask(a[i].y)+dis[a[i].bel];\n        else add(a[i].y,f[a[i].bel]);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1585739636,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6007 \u3010[USACO20JAN]Springboards G\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u849f\u84bb\u592a\u83dc\u4e86 \u6839\u672c\u4e0d\u4f1a\u79bb\u6563\u5316 \n\n\u4e4b\u540e\u53ea\u80fd\u83dc\u83dc\u7684\u7528\u5e73\u8861\u6811 \n\n\u53ea\u6709$Ins$\u6ca1\u6709$Del$ \u4ee3\u7801\u7b80\u77ed\u597d\u8bc4 \n\n\u8fd8\u662f\u7a0d\u5fae\u8bb2\u4e00\u4e0b\u601d\u8def \n\n$O(n^2)$\u601d\u8def\u5f88\u597d\u60f3 \n\n$f_{i}$\u8868\u793a\u4ece\u8d77\u70b9\u5230\u70b9$i$\u7684\u6700\u5c0f\u6b65\u6570\n\n$f_{i}=min( f_{i} , f_{j} + dis(i,j) )  $  \n\n\u5176\u4e2d$dis(i,j)$\u662f\u4e24\u70b9\u8ddd\u79bb \u4fdd\u8bc1$a_{j}$ \u7684\u5750\u6807 \u4e0d\u5927\u4e8e $a_{i}$ \u7684 \u5750\u6807\n\n\u4ee5 \u6bcf\u4e2a\u70b9 $x$ \u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57 , $y$ \u5750\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57 \u6392\u5e8f\n\n\u6211\u4eec\u80fd\u4fdd\u8bc1 $a_{1,x}$\u5230$a_{i-1,x}$ \u6bd4$a_{i,x}$\u5c0f \n\n\u4e4b\u540e\u663e\u7136\u9700\u8981\u4f18\u5316 \u5e73\u8861\u6811\u778e\u641e\u641e \n\n$Ins$\u7684\u503c\u662f $f_{i}-a_{i,x}-a_{i,y}$ \n\n\u628a$y$\u5750\u6807\u6bd4$a_{i,y}$\u5c0f\u7684$split$\u51fa\u6765\n\n\u66f4\u65b0\u5c31\u6210\u4e86\u8fd9\u4e2a\u6837\u5b50 $f_{i}=query(a_{i,y})+a_{i,x}+a_{i,y}$ \n\n\u8fd8\u6709\u4e00\u4e2a\u8df3\u677f \u5355\u72ec\u8f6c\u79fb \n\n\u5904\u7406\u597d\u50cf\u6bd4\u8f83\u9ebb\u70e6 \u4f46\u662f\u591a\u5f00\u51e0\u4e2a\u6570 \uff0c \u6620\u5c04\u641e\u4e00\u641e\u5c31\u597d\u4e86 \n\n\u5177\u4f53\u89c1\u4ee3\u7801 \uff1a \n\n```cpp\n#include <bits/stdc++.h> \n#define Inf 0x7f7f7f7f   \n#define rg register \n#define i60 long long \n#define il inline \n#define fp( i , x , y ) for(rg int i=(x); i<=(y); ++i) \n#define fq( i , x , y ) for(rg int i=(y); i>=(x); --i) \nusing namespace std ; \nconst int N = 3e5+50 ; \ni60 n , p , f[N] , tot ; map <pair<int,int>,int> Map ;  pair<int,int> tep ; \nstruct node { int sx , sy , ex , ey ; } a[N] ;  \ninline bool cmp( rg node A , rg node B ) { return A.ex!=B.ex ? A.ex<B.ex : A.ey<B.ey; } \ninline int min( rg int A , rg int B ) { return A < B ? A : B ; } ;  \ninline int dis( rg int i ) { return a[i].ex-a[i].sx+a[i].ey-a[i].sy ; } \nstruct hgs_treap { \n    int ch[N][2] , rnd[N] , siz[N] , val[N] , val2[N] , Min[N] , cnt , sed ;  \n    il void start( ) { Min[0] = 0 ; siz[0] = 0 ; cnt = 0 ; sed = 233 ; }   \n\til int rrand( ) { return sed = int(sed * 482711ll % 2147483647); }  \n\tint New_node ( int Val , int Val2 ) { \n\t    rnd[++cnt] =  rrand( ) ; ch[cnt][0] = ch[cnt][1] = 0 ; \n\t    val[cnt] = Val ; val2[cnt] = Min[cnt] = Val2 ; \n\t    siz[cnt] = 1 ; return cnt ; }  \n    il void updata( rg int rt ) { \n\t    siz[rt] = siz[ch[rt][0]] + siz[ch[rt][1]] + 1 ; \n\t\tMin[rt] = min( Min[ch[rt][0]] , Min[ch[rt][1]] ) ; \n\t\tMin[rt] = min( Min[rt] , val2[rt] ) ; } \n\til void split( rg int rt , rg int &x , rg int &y , rg int k ) { \n\t    if( !rt ) { x = y = 0 ; return ; }  \n\t    if( val[rt] <= k ) x = rt , split( ch[rt][1] , ch[x][1] , y , k ) ; \n\t\t  else y = rt , split( ch[rt][0] , x , ch[y][0] , k ) ; \n\t\tupdata( rt ) ; } \n\til void merge( rg int &rt , rg int x , rg int y ) { \n\t    if( !x || !y ) { rt = x+y ; return ; } \n\t    if( rnd[x] < rnd[y] ) rt = x , merge( ch[rt][1] , ch[x][1] , y ) ;\n\t      else rt = y , merge( ch[rt][0] , x , ch[y][0] ) ; \n\t    updata( rt ) ; } \n\tvoid Ins( int &rt , int Val , int Val2 ) { \n\t    int z = New_node( Val , Val2 ) , x = 0 , y = 0 ; \n\t\tsplit( rt , x , y , val[z] ) ; \n\t\tmerge( x , x , z ) ; merge( rt , x , y ) ; } \n\tint query( int rt , int Val ) { \n\t    int x = 0 , y = 0 ; split( rt , x , y , Val ) ;  \n\t\tint ans = Min[x] ; merge( rt , x , y ) ;  \n\t\treturn ans ; } \n} hgs ;  \nsigned main( ) { \n    ios::sync_with_stdio(false) ; cin.tie(0) ; cout.tie(0) ;  \n    rg int tx , ty , etx , ety , rot = 0 ; cin >> n >> p ; \n\tfp( i , 1 , p ) cin >> tx >> ty >> etx >> ety , \n\t  a[++tot] = (node) { -1 , -1 , tx , ty } , \n\t  a[++tot] = (node) { tx , ty , etx , ety } ; \n\ta[++tot] = (node) { -1 , -1 , 0 , 0 } ; \n\ta[++tot] = (node) { -1 , -1 , n , n } ; \n\tsort( a+1 , a+1+tot , cmp ) ; \n\tfp( i , 1 , tot ) Map[make_pair(a[i].ex , a[i].ey)] = i ; \n\thgs.start( ) ; hgs.Ins( rot , 0 , 0 ) ; f[1] = 0 ;  \n\tfp( i , 2 , tot ) { \n\t    f[i] = a[i].ex + a[i].ey + hgs.query( rot , a[i].ey ) ; \n\t    tep = make_pair( a[i].sx , a[i].sy ) ; \n\t\tif( a[i].sx != -1 ) f[i] = min( f[i] , f[Map[tep]]  ) ; \n\t\thgs.Ins( rot , a[i].ey , f[i]-a[i].ex-a[i].ey ) ;   \n\t} cout << f[tot] << endl ; return 0 ; \n} \n```\n\n\u5438\u53e3\u6c27\u8dd1\u7684\u6ca1\u538b\u529b \n\n~~\u4e00\u5f00\u59cbseed\u6ca1\u8d4b\u521d\u503c \u8fd8\u4ee5\u4e3a\u5e73\u8861\u6811\u4e0d\u80fd\u641e~~ \n\n~~\u624b\u52a8\u72d7\u5934~~",
        "postTime": 1583649486,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6007 \u3010[USACO20JAN]Springboards G\u3011"
    },
    {
        "content": "\u9898\u5916\u8bdd\uff1a\u505a\u8fd9\u79cd\u6bd2\u7624\u9898\u76ee\u7684\u65f6\u5019\u53ef\u4ee5\u8bd5\u7740\u628a\u4e00\u4e9b\u4e0d\u540c\u4e8e\u5f80\u5e38\u3001\u9700\u8981\u6539\u53d8\u7684\u91cf\u8bb0\u5f55\u5728\u8349\u7a3f\u7eb8\u4e0a\uff0c~~\u8fd9\u662f\u6211\u628ap*2\u5199\u6210n\u7136\u540e\u4e09\u5929\u624d\u8c03\u51fa\u6765\u7684\u7ecf\u9a8c~~\n\n> \u5b9a\u4e49 $sx_i,sy_i,ex_i,ey_i$ \u5206\u522b\u8868\u793a\u5f53\u524d\u7f16\u53f7\u4e3a $i$ \u7684\u70b9\u7684\u8d77\u70b9 $x,y$ \u5750\u6807\uff0c\u7ec8\u70b9 $x,y$ \u5750\u6807\u3002\n\n\u9996\u5148\uff0c\u7531\u4e8e\u9898\u76ee\u4e2d\u7684 $N$ \u5728 $10^9$ \u7684\u8303\u56f4\u5185\uff0c\u800c $p$ \u5374\u53ea\u6709 $10^5$ \uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5c06\u6bcf\u4e00\u4e2a\u8df3\u677f\u4f5c\u4e3a\u72b6\u6001\uff0c\u8fdb\u884cDP\u3002\u7136\u540e\u53ef\u4ee5\u60f3\u5230\u5982\u4e0b\u7684\u505a\u6cd5\uff1a\n\n$\\color{blue}\\text{\u65b9\u6cd5\u4e00\uff1a}$\n\n\u5c06\u6240\u6709\u8df3\u677f\u6309\u7167 $sx$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c $sy$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\uff0c\u5b9a\u4e49 $f[i]$ \u8868\u793a\u5f53\u524d\u8d70\u5230\u7b2c $i$ \u53f7\u8df3\u677f\u7684\u6700\u5c0f\u6b65\u6570\u3002\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$$f[i]=\\min\\limits_{ex_j\\leq sx_i,ey_j\\leq ey_i}(f[j])+sx_i+sy_i-ex_j-ey_j$$\n\n\u590d\u6742\u5ea6 $O(P^2)$ \uff0c\u53ef\u4ee5\u62ff\u5230 $33pts$ \u7684\u597d\u6210\u7ee9\u3002\n\n\u8003\u8651\u8fdb\u884c\u4f18\u5316\u3002\u53ef\u4ee5\u4f7f\u7528\u67d0\u79cd\u6570\u636e\u7ed3\u6784\u50a8\u5b58\u4e0b\u6bcf\u4e00\u6b21\u8f6c\u79fb\u540e\u7684 $f[i]$ \u503c\uff0c\u7136\u540e\u4f7f\u7528 $O(\\log P)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u67e5\u627e\u6700\u5c0f\u7684\u503c\u3002\u4f46\u7531\u4e8e\u8f6c\u79fb\u65b9\u7a0b\u6d89\u53ca\u5230 $ex_j,ey_j$ \u7b49\u53d8\u91cf\u4f1a\u5f71\u54cd\u8f6c\u79fb\u540e\u7684\u89e3\u7684\u6700\u4f18\u6027\u3002\u56e0\u6b64\u8bde\u751f\u4e86\u7b2c\u4e8c\u4e2adp\u65b9\u5f0f\u3002\n\n$\\color{blue}\\text{\u65b9\u6cd5\u4e8c\uff1a}$\n\n\u5b9a\u4e49 $f[i]$ \u8868\u793a\u884c\u8d70\u5230\u70b9$i$\u65f6\u6240\u80fd\u8282\u7701\u4e0b\u6765\u7684\u6700\u5927\u8ddd\u79bb\uff08\u76f8\u5bf9\u4e8e\u5b8c\u5168\u4e0d\u8d70\u8df3\u677f\u7684 $2n$ \u6b65\u8d70\u6cd5\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u51fa\u5982\u4e0b\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f[i]=\\max\\limits_{ex_j\\leq sx_i,ey_j\\leq ey_i}(f[j])+ex_i+ey_i-sx_i-ex_j$$\n\n\u6b64\u65f6 $i$ \u4e0d\u4f1a\u53d7\u5230 $j$ \u53f7\u8df3\u677f\u7684\u5750\u6807\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u3002\u4f18\u5316\u7684\u5927\u81f4\u65b9\u6cd5\u4e3a\u4ee5 $x$ \u7684\u5927\u5c0f\u987a\u5e8f\u904d\u5386\uff0c\u4ee5 $y$ \u4e3a\u4e0b\u6807\u5efa\u7acb\u6811\u72b6\u6570\u7ec4\uff0c\u7ef4\u62a4\u5bf9\u5e94\u7684 $f[i]$ \u503c\u3002\n\n\u5177\u4f53\u505a\u6cd5\u5982\u4e0b\uff1a\n\n> \u5b9a\u4e49\u70b9 $i$ \u79bb\u6563\u5316\u524d\u7684 $x,y$ \u5750\u6807\u4e3a $x_i,y_i$ \uff0c\u79bb\u6563\u5316\u540e\u7684\u5750\u6807\u4e3a $px_i,py_i$.\n\n\u5c06\u6240\u6709\u7684\u8d77\u70b9\uff0c\u7ec8\u70b9\u653e\u5728\u4e00\u4e2a\u6570\u7ec4\u5185\uff0c\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u4e0b\u5f53\u524d\u539f\u59cb\u5750\u6807 $idx_i$ \uff0c $i$ \u53f7\u8df3\u677f\u7684\u8d77\u70b9\u5750\u6807\u4e3a $i$ \uff0c\u7ec8\u70b9\u5750\u6807\u4e3a $i+p$.\n\n\u7136\u540e\u5c06 $x$ \u548c $y$ \u5206\u5f00\u79bb\u6563\u5316\uff0c\u5b9a\u4e49 $pos_i$ \u8868\u793a\u539f\u59cb\u5750\u6807\u4e3a $i$ \u7684\u70b9\u5728\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\u5185\u7684\u4e0b\u6807\u3002\n\n\u63a5\u7740\u8fdb\u884cDP\uff0c\u4fbf\u5229\u4e00\u904d\u6240\u6709\u7684\u70b9\uff0c\u6709\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\n\n1. \u5982\u679c\u5f53\u524d\u70b9 $i$ \u662f\u8d77\u70b9\uff08 $idx_i\\leq p$ \uff09\uff0c\u90a3\u4e48\u5b9a\u4e49\uff1a\n\n$$now[i]=\\max\\limits_{py_j\\leq py_{i}}(f[j])$$\n\n\u5e76\u4e14\u4e0d\u9700\u8981\u8f6c\u79fb\uff1b\n\n2. \u5982\u679c\u5f53\u524d\u70b9 $i$ \u662f\u7ec8\u70b9\uff0c\u5219\u5957\u7528\u516c\u5f0f\uff0c\u5176\u4e2d\u53d6max\u7684\u90e8\u5206\u5e94\u5f53\u6539\u4e3a $i$ \u5bf9\u5e94\u7684\u8d77\u70b9\u7684 $now$ \u503c\uff09\u3002\n\nQ: \u4e3a\u4ec0\u4e48\u4e0d\u5728\u641c\u7d22\u5230\u6240\u6709\u7ec8\u70b9\u7684\u65f6\u5019\u518d\u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u6700\u4f18$f[j]$\uff0c\u800c\u662f\u8981\u5728\u8d77\u70b9\u7684\u65f6\u5019\u67e5\u627e\uff1f\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7qyow7h6.png)\n\n~~\uff08\u4e3a\u4e86\u65b9\u4fbf\u6211\u76f4\u63a5\u4f7f\u7528\u539f\u59cb\u5750\u6807\u4ee3\u66ff\u79bb\u6563\u5316\u540e\u7684\u5750\u6807\uff09~~\n\n\u5982\u679c\u5728\u904d\u5386\u5230\u6700\u540e\u4e00\u4e2a\u70b9 $i+p$ \u7684\u65f6\u5019\u624d\u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u6700\u4f18$f[j]$ \uff0c\u90a3\u4e48\u5c31\u4f1a\u67e5\u627e\u5230\u50cf $j+p$ \u8fd9\u79cd $py_{j+p}\\leq py_{i}$ \u4f46\u662f $px_{j+p}>px_{i}$ \u7684\u975e\u6cd5\u70b9\u3002\u5728\u70b9 $i$ \u76f4\u63a5\u67e5\u627e\u53ef\u4ee5\u907f\u514d\u3002\n\n\u6700\u540e\u7684\u7b54\u6848\u5373\u4e3a\uff1a\n\n$$ans=2n-\\max\\limits_{1\\leq i\\leq 2p}(f[i])$$\n\nCode:\n\n```cpp\n#include<cstdio>\n#include<iomanip>\n#include<algorithm>\n#define lowbit(i) i&(-i)\n#define p1 (p<<1)//p*2\nusing namespace std;\nconst int N=2e5+50;\nstruct point{\n\tint x,y,px,py,idx;\n}a[N];\nint f[N],c[N],pos[N],now[N];\nint n,p;\ninline int Max(int a,int b){return a>b?a:b;}\nbool cmp1(point p,point q)//\u79bb\u6563\u5316y\u7684\u6392\u5e8f \n{\n\tif(p.x!=q.x) return p.x<q.x;\n\telse return p.y<q.y;\n}\nbool cmp2(point p,point q)//\u79bb\u6563\u5316x\u7684\u6392\u5e8f \n{\n\tif(p.y!=q.y) return p.y<q.y;\n\telse return p.x<q.x;\n}\n\n//\u6811\u72b6\u6570\u7ec4 \ninline void Insert(int x,int y){for(;x<=p1;x+=lowbit(x)) c[x]=Max(c[x],y);}\ninline int Query(int x)\n{\n\tint ans=0;\n\tfor(;x>0;x-=lowbit(x)) ans=Max(ans,c[x]);\n\treturn ans;\n}\n\n//\u79bb\u6563\u5316 \nvoid Work() \n{\n\tsort(a+1,a+1+p1,cmp2);//y\u7684\u79bb\u6563\u5316 \n\ta[0].py=1;\n\tfor(int i=1;i<=p1;i++){\n\t\tif(a[i].y==a[i-1].y) a[i].py=a[i-1].py;\n\t\telse a[i].py=a[i-1].py+1;\n\t}\n\tsort(a+1,a+1+p1,cmp1);//\u8fd9\u91cc\u9ed8\u8ba4DP\u65f6\u6309x\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u56e0\u6b64x\u7684\u79bb\u6563\u5316\u653e\u540e\u9762 \n\ta[0].px=1;\n\tfor(int i=1;i<=p1;i++){\n\t\tif(a[i].x==a[i-1].x) a[i].px=a[i-1].px;\n\t\telse a[i].px=a[i-1].px+1;\n\t\tpos[a[i].idx]=i;//\u50a8\u5b58\u4e0b\u539f\u59cb\u5750\u6807\u5bf9\u5e94\u7684\u79bb\u6563\u5316\u540e\u7684\u5750\u6807 \n\t}\t\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&p);\n\tfor(int i=1;i<=p;i++){\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\t\tscanf(\"%d%d\",&a[i+p].x,&a[i+p].y);\n\t\ta[i].idx=i,a[i+p].idx=i+p;\n\t}\n\tWork();\n\n\t//DP\n\tfor(int i=1;i<=p1;i++){\n\t\tif(a[i].idx>p){\n\t\t\tf[i]=now[pos[a[i].idx-p]]+a[i].x+a[i].y-a[pos[a[i].idx-p]].x-a[pos[a[i].idx-p]].y;\n\t\t\t//pos[a[i].idx-p]]\u5373\u4e3a\u7ec8\u70b9i\u5bf9\u5e94\u7684\u8d77\u70b9 \n\t\t\tInsert(a[i].py,f[i]);\n\t\t}\n\t\telse now[i]=Query(a[i].py);\n\t}\n\tint maxn=0;\n\tfor(int i=1;i<=p1;i++) maxn=Max(maxn,f[i]);\n\tprintf(\"%d\\n\",(n<<1)-maxn);\n\treturn 0;\n}\n```",
        "postTime": 1617945496,
        "uid": 67493,
        "name": "Higanbana_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P6007 [USACO20JAN]Springboards G"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P6007)\n# \u96f6.\u524d\u8bb0\n\u6392\u5e8f\u6ce8\u610f\u4ee5\u4ec0\u4e48\u4e3a\u5173\u952e\u8bcd\u6392\u5e8f\n\n\u8fd9\u771f\u7684\u5f88\u91cd\u8981$!$\uff08\u7b14\u8005\u56e0\u4e3a\u8fd9\u4e2a\u5361\u4e86\u4e00\u4e2a\u4e0b\u5348\uff09\n\n$and$\u8fd9\u7bc7\u535a\u5ba2\u4e2d\u9ed8\u8ba4\u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3\u662f\u6b63\u65b9\u5411\n\n# \u4e00.\u601d\u8def\n\n\u8fd9\u9053\u9898\u4e5f\u8bb8\u4f1a\u60f3\u5230\u56fe\u8bba\uff08\u867d\u7136\u6211\u5e76\u6ca1\u6709\u60f3\u5230\uff09\n\n\u4f46\u662f\u5efa\u56fe\u65f6$O(n^2)$\u7684\u590d\u6742\u5ea6\u5df2\u7ecf\u53ef\u4ee5\u529d\u9000\u4e86\n\n\u6211\u4eec\u53c8\u53d1\u73b0\u843d\u5730\u4e4b\u540e\u524d\u9762\u600e\u4e48\u8df3\u90fd\u4e0d\u4f1a\u5bf9\u540e\u9762\u6709\u4efb\u4f55\u5f71\u54cd\n\n\u800c\u4e14\u6211\u4eec\u6700\u4f18\u7684\u8d70\u6cd5\u5206\u6210\u82e5\u5e72\u6bb5\u5fc5\u7136\u4e5f\u662f\u6700\u4f18\u7684\n\n\u5373\u6ee1\u8db3\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u548c\u65e0\u540e\u6548\u6027\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f80$dp$\u65b9\u5411\u8003\u8651\u4e86\n\n# \u4e8c.\u8be6\u7ec6\u505a\u6cd5\n\n\u56e0\u4e3a\u8d70\u7684\u6700\u5c11\u6b65\u6570$=2\\times n-$\u53ef\u4ee5\u7701\u7684\u6700\u5927\u6b65\u6570\n\n\u800c\u8df3\u4e00\u6b21\u8df3\u677f\u53ef\u4ee5\u7701\u7684\u6b65\u6570\u5c31\u662f$x_2+y_2-x_1-y_1$\n\n\u4e8e\u662f\u6211\u4eec\u8bbe$sv_i$\u8868\u793a\u8df3\u5b8c\u7b2c$i$\u4e2a\u8df3\u677f\u4e4b\u540e\u53ef\u4ee5\u7701\u4e0b\u7684\u6700\u5927\u6b65\u6570\n\n[![cJR8Tf.png](https://z3.ax1x.com/2021/04/08/cJR8Tf.png)](https://imgtu.com/i/cJR8Tf)\n\n\u5982\u56fe\u6211\u4eec\u5047\u8bbe\u67d0\u4e2a\u8df3\u677f$i$\u7684\u8d77\u70b9\u662f$A$\u7ec8\u70b9\u662f$B$\n\n\u90a3\u4e48\u5982\u679c\u8981\u8df3$i$\u53f7\u8df3\u677f\n\n\u4e0a\u4e00\u6b21\u8df3\u7684\u843d\u70b9\u5fc5\u987b\u5728\u8fd9\u4e9b\u7ea2\u8272\u683c\u5b50\u5f53\u4e2d\uff08\u5982\u679c\u6ca1\u8df3\u5c31\u5f53\u4f5c\u843d\u70b9\u4e3a$1,1$\uff09\n\n\u5373\u53ef\u4ee5\u5199\u51fa\u8fd9\u6837\u7684\u4e00\u6761\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b$:$\n\n$$sv_i=max\\{ sv_j\\}+x_b+y_b-x_a-y_a(j \\in red)$$\n\n\u73b0\u5728\u7684\u95ee\u9898\u53d8\u6210\u4e86\u600e\u4e48\u6837\u7ef4\u62a4\u7ea2\u8272\u533a\u57df\u7684\u6700\u503c\n\n\u4e0d\u96be\u60f3\u5230\u5148\u7ef4\u62a4\u6bcf\u4e00\u5217\u7684\u6700\u503c\u518d\u6c42\u533a\u95f4\u6700\u503c\u6765\u5b9e\u73b0\n\n\u6211\u4eec\u5148\u628a\u6240\u6709\u683c\u5b50\u4ee5$y1$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57$x1$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u6392\u51fa\u6765\u7684\u987a\u5e8f\u5c31\u548c\u8bfb\u73b0\u4ee3\u4e66\u7c4d\u7684\u987a\u5e8f\u662f\u4e00\u6837\u7684\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5728\u8df3$i$\u7684\u65f6\u5019\u843d\u70b9\u5728\u7ea2\u8272\u533a\u57df\u7684\u70b9\uff08\u5373\u6240\u6709\u7684\u70b9$j$\uff09\u5df2\u7ecf\u88ab\u904d\u5386\u8fc7\u4e86\n\n\u4f46\u662f\u5728\u8fd9\u4e9b\u70b9\u4e4b\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u8d77\u8df3\u70b9\u5728$A$\u524d\u4f46\u662f\u843d\u70b9\u5728$A$\u540e\u7684\u70b9\n\n\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u518d\u5f00\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u5b58\u50a8\u6240\u6709\u7684$sv_i$\n\n\u6bcf\u6b21\u4fbf\u5229\u5230\u65b0\u7684\u8d77\u70b9$A$\u65f6\u5224\u65ad\u662f\u5426\u6709\u4e00\u4e9b\u843d\u70b9\u53ef\u4ee5\u52a0\u5165\u8003\u8651\n\n\u5230\u8fd9\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u53ef\u4ee5\u968f\u65f6\u66f4\u65b0\u7684\u533a\u95f4\u6700\u503c\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u79bb\u6563\u5316\u4e4b\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e00\u5217\u7684\u6700\u5927\u503c\n\n**code**\n```cpp\nfor(register int i=1;i<=p;i++){\n\thh h;\n\thh u={a[i].xx1,a[i].y1,0};//\u8d77\u70b9\u7684\u503c \n\twhile(!q.empty() && check(q.top(),u)){//\u5c06\u6240\u6709\u843d\u70b9\u5728\u8d77\u70b9\u524d\u7684\u70b9\u52a0\u5165\u7ebf\u6bb5\u6811 \n\t\th=q.top();q.pop();\n\t\tquery(1,1,m,h.x,h.sv);//\u5355\u70b9\u4fee\u6539 \n\t}\n\tint sv=search(1,1,m,1,a[i].xx1);//\u6c42\u7b2c1\u5217\u5230a[i].xx1\u5217\u7684\u6700\u503c \n\th.x=a[i].xx2;h.y=a[i].y2;h.sv=sv+a[i].y2+a[i].x2-a[i].x1-a[i].y1;\n\tq.push(h);//\u65b0\u6c42\u51fa\u7684\u843d\u70b9\u52a0\u5165\u4f18\u5148\u961f\u5217 \n}\n```\n\n### \u6ce8\u610f\n#### $i.$\u7531\u4e8e$n$\u7684\u8303\u56f4\u592a\u5927\u8981\u5bf9$x$\u8fdb\u884c\u79bb\u6563\u5316 \u800c$y$\u53ef\u4ee5\u4e0d\u7528\n\n#### $ii.$\u7ebf\u6bb5\u6811\u7684\u5927\u5c0f\u4e3a\u79bb\u6563\u5316\u4e4b\u540e\u6700\u5927\u7684$x$\n\n#### $iii.$\u5355\u70b9\u4fee\u6539\u662f\u4e0e\u539f\u6765\u7684\u70b9\u6bd4\u5927\u5c0f\u800c\u4e0d\u662f\u5b8c\u5168\u4fee\u6539\n\n#### $iv.$\u6700\u540e\u53ef\u80fd\u8fd8\u5269\u4e0b\u4e00\u4e9b\u843d\u70b9 \u5728\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u8981\u7edf\u8ba1\u4e0a\u53bb\n\n# \u4e09.\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<set>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ninline int R(){\n\tint r=0;char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) r=(r<<1)+(r<<3)+(c^48),c=getchar();\n\treturn r;\n}\nint n,ans;\nint p,m;\nstruct node{\n\tint x1,y1,x2,y2;\n\tint xx1,xx2;//xx1xx2\u4e3a\u79bb\u6563\u5316\u4e4b\u540e\u7684x1x2 \n}a[100005];\nvector <int> c;\ninline bool comp(node a,node b){//\u5f00\u59cb\u65f6\u7684\u6392\u5e8f \u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3 \n\tif(a.y1!=b.y1) return a.y1<b.y1;\n\treturn a.x1<b.x1;\n}\nint tree[800005];\ninline int search(int now,int l,int r,int ql,int qr){//\u7ebf\u6bb5\u6811\u6c42\u533a\u95f4\u6700\u503c \n\tif(ql<=l && r<=qr){\n\t\treturn tree[now];\n\t}\n\tint mid=(l+r)>>1;\n\tint sum=0;\n\tif(ql<=mid) sum=search(now<<1,l,mid,ql,qr);\n\tif(qr>mid) sum=max(sum,search(now<<1|1,mid+1,r,ql,qr));\n\treturn sum;\n}\ninline void query(int now,int l,int r,int k,int sv){//\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539 \n\tif(l==r){\n\t\ttree[now]=max(tree[now],sv);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(k<=mid) query(now<<1,l,mid,k,sv);\n\tif(k>mid) query(now<<1|1,mid+1,r,k,sv);\n\ttree[now]=max(tree[now<<1],tree[now<<1|1]);\n\treturn ;\n}\nstruct hh{//\u843d\u70b9\u7684\u7ed3\u6784\u4f53 \n\tint x,y,sv;\n\tfriend bool operator < (hh a,hh b){\n\t\tif(a.y!=b.y) return a.y>b.y;\n\t\treturn a.x>b.x;\n\t}\n};\ninline bool check(hh x,hh y){//\u5224\u65ad\u54ea\u4e2a\u70b9\u5728\u524d\u9762 \n\tif(x.y<y.y) return 1;\n\tif(x.y==y.y && x.x<=y.x) return 1;\n\treturn 0;\n}\npriority_queue <hh> q;//\u843d\u70b9\u7684\u4f18\u5148\u961f\u5217 \nint main(){\n\tn=R();p=R();\n\tfor(register int i=1;i<=p;i++){\n\t\ta[i].x1=R();a[i].y1=R();\n\t\ta[i].x2=R();a[i].y2=R();\n\t\tc.push_back(a[i].x1);c.push_back(a[i].x2);\n\t}\n\tsort(c.begin(),c.end());//\u79bb\u6563\u5316 \n\tfor(register int i=1;i<=p;i++){//\u79bb\u6563\u5316 \n\t\ta[i].xx1=lower_bound(c.begin(),c.end(),a[i].x1)-c.begin()+1;\n\t\ta[i].xx2=lower_bound(c.begin(),c.end(),a[i].x2)-c.begin()+1;\n\t\tm=max(a[i].xx1,m);m=max(a[i].xx2,m);\n\t}\n\tsort(a+1,a+p+1,comp);//\u6309\u7167\u5148y\u518dx\u7684\u987a\u5e8f\u6392\u5e8f \n\tfor(register int i=1;i<=p;i++){\n\t\thh h;\n\t\thh u={a[i].xx1,a[i].y1,0};//\u8d77\u70b9\u7684\u503c \n\t\twhile(!q.empty() && check(q.top(),u)){//\u5c06\u6240\u6709\u843d\u70b9\u5728\u8d77\u70b9\u524d\u7684\u70b9\u52a0\u5165\u7ebf\u6bb5\u6811 \n\t\t\th=q.top();q.pop();\n\t\t\tquery(1,1,m,h.x,h.sv);//\u5355\u70b9\u4fee\u6539 \n\t\t}\n\t\tint sv=search(1,1,m,1,a[i].xx1);//\u6c42\u7b2c1\u5217\u5230a[i].xx1\u5217\u7684\u6700\u503c \n\t\th.x=a[i].xx2;h.y=a[i].y2;h.sv=sv+a[i].y2+a[i].x2-a[i].x1-a[i].y1;\n\t\tq.push(h);//\u65b0\u6c42\u51fa\u7684\u843d\u70b9\u52a0\u5165\u4f18\u5148\u961f\u5217 \n\t}\n\twhile(!q.empty()){//\u6700\u540e\u53ef\u80fd\u8fd8\u6709\u4e00\u4e9b\u843d\u70b9\u8981\u8003\u8651 \n\t\thh h=q.top();q.pop();\n\t\tquery(1,1,m,h.x,h.sv);\n\t}\n\tans=n+n-search(1,1,m,1,m);//\u7b54\u6848\u4e3a2n-\u6700\u5927\u7701\u53bb\u7684\u6b65\u6570 \n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n# \u56db.\u540e\u8bb0\n\u672c\u9898\u8003\u5bdf\u4e86\u5982\u4f55\u7075\u6d3b\u5730\u8fd0\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u52a8\u6001\u89c4\u5212\n\n\u8981\u60f3\u60f3\u4e00\u4e2a\u8df3\u677f\u7684\u4e24\u4e2a\u70b9$x1,y1$\u548c$x2,y2$\u5e26\u6765\u7684\u9650\u5236\n\n\u800c\u4e14\u8981\u6ce8\u610f\u79bb\u6563\u5316\n\nFinally\uff0c\u8c22\u8c22\u5927\u5bb6\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/HongseFox/solution-p6007)",
        "postTime": 1617781290,
        "uid": 93838,
        "name": "Hongse_Fox",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6007 \u3010[USACO20JAN]Springboards G\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u849f\u84bb\u592a\u83dc\u4e86\uff0c\u53ea\u4f1a$O(Plog^{2}P)$\u7684\u89e3\u6cd5\uff0c**\u6211\u4eec\u8003\u8651\u4ece\u539f\u8def\u8fd4\u56de**\uff0c\u5176\u5b9e\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\uff0c\u4ee4\n\n$dp[i]$ \u4e3a$(N,N)$\u5230$\uff08x1,y1)$ \u8fd9\u4e2a\u70b9\u6700\u591a**\u8282\u7701**\u591a\u5c11\u8def\u5f84\uff0c**\u540c\u65f6\u5fc5\u987b\u8981\u7528**$i$\u8fd9\u4e2a\u8df3\u677f\n\n\u8f6c\u79fb\u5c31\u662f\u4ece\u6240\u6709\u6ee1\u8db3$x1_{j}>=x2_{i}$&&$y1_{j}>=y2_{i}$\u7684$j$\u4e2d\u627e\u6700\u5927\u7684\u90a3\u4e2a\u7136\u540e\u76f4\u63a5\u8f6c\u79fb\u8fc7\u6765\uff0c\u76f4\u89c2\u5730\u5199\u51fa\u6765\u5c31\u662f\n\n$dp[i]=x2_{i}-x1_{i}+y2_{i}-y1_{i}+max(dp_{j}) ($ $x1_{j}>=x2_{i}$\u4e14$y1_{j}>=y2_{i}$ $)$\n\n\u5199\u7684\u8bdd\u5c31\u662f\u5148\u628a\u4e00\u7ef4\u5b9a\u5e8f\u7136\u540e\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u66b4\u529b\u5373\u53ef\uff0c\u8fd8\u8981\u52a0\u4e0a\u79bb\u6563\u5316\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u5728\u4ee3\u7801\u4e2d\u628aN\u4e0eP\u6362\u4e86\u4e00\u4e0b\uff0c\u800c\u4e14\u7531\u4e8e\u5de8\u5927\u7684\u5e38\u6570\u8fd9\u4efd\u4ee3\u7801\u5728\u6d1b\u8c37\u4e0a\u4e0d\u5438\u6c27\u4f1aT\u4e00\u4e2a\u70b9\uff0c\u4f46\u662f\u5f53\u65f6\u5728USACO\u4e0a\u8dd1\u8fc7\u4e86\n\n\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nusing namespace std;\nconst int maxn=1e5+5;\ntypedef long long ll;\nstruct tre{\n\tint lc,rc;\n\tint val;\n};\ntre t1[maxn*200];\nint top;\nint lenx;\nint leny;\ninline int newn(){\n\treturn ++top;\n}\nvoid co(int u){\n\tt1[u].val=max(t1[t1[u].lc].val,t1[t1[u].rc].val);\n}\ninline int insert(int u,int l,int r,int id,int x){\n\tif (u==0) u=newn();\n\tif (l==r){\n\t\tt1[u].val=max(t1[u].val,x);\n\t\treturn u;\n\t}\n\tint mid=(l+r)/2;\n\tif (id<=mid) t1[u].lc=insert(t1[u].lc,l,mid,id,x);\n\telse t1[u].rc=insert(t1[u].rc,mid+1,r,id,x);\n\tco(u);\n\treturn u;\n}\ninline int qmax(int u,int l,int r,int ql,int qr){\n\tif (u==0) return 0;\n\tif (ql<=l&&r<=qr){\n\t\treturn t1[u].val;\n\t}\n\tint mid=(l+r)/2;\n\tint res=0;\n\tif (ql<=mid) res=max(res,qmax(t1[u].lc,l,mid,ql,qr));\n\tif (mid+1<=qr) res=max(res,qmax(t1[u].rc,mid+1,r,ql,qr));\n\treturn res;\n}\n////\ninline int lc(int u){\n\treturn u<<1;\n}\ninline int rc(int u){\n\treturn u<<1|1;\n}\nint rt[maxn*6];\nvoid inserty(int u,int l,int r,int x,int y,int val){\n\trt[u]=insert(rt[u],1,lenx,x,val);\n\tif (l==r) return;\n\tint mid=(l+r)/2;\n\tif (y<=mid) inserty(lc(u),l,mid,x,y,val);\n\telse inserty(rc(u),mid+1,r,x,y,val);\n}\ninline int qmaxy(int u,int l,int r,int qlx,int qrx,int qly,int qry){\n\tif (qly<=l&&r<=qry){\n\t\treturn qmax(rt[u],1,lenx,qlx,qrx);\n\t}\n\tint res=0;\n\tint mid=(l+r)/2;\n\tif (qly<=mid) res=max(res,qmaxy(lc(u),l,mid,qlx,qrx,qly,qry));\n\tif (mid+1<=qry) res=max(res,qmaxy(rc(u),mid+1,r,qlx,qrx,qly,qry));\n\treturn res;\n}\nstruct node{\n\tint x1,y1,y2,x2;\n};\nbool cmp(node a1,node b1){\n\tif (a1.x1==b1.x1) return a1.y1>b1.y1;\n\treturn a1.x1>b1.x1;\n}\nnode a[maxn];\nint n,m;\nint dp[maxn];\nint numx[maxn*2],numy[maxn*2];\nint main(){\n\t//freopen(\"boards.in\",\"r\",stdin);\n\t//freopen(\"boards.out\",\"w\",stdout);\n\tcin>>m>>n;\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d%d%d%d\",&a[i].x1,&a[i].y1,&a[i].x2,&a[i].y2);\n\t\tnumx[++lenx]=a[i].x1;\n\t\tnumx[++lenx]=a[i].x2;\n\t\tnumy[++leny]=a[i].y1;\n\t\tnumy[++leny]=a[i].y2;\n\t}\n\tsort(numx+1,numx+lenx+1);\n\tsort(numy+1,numy+leny+1);\n\tlenx=unique(numx+1,numx+lenx+1)-numx-1;\n\tleny=unique(numy+1,numy+leny+1)-numy-1;\n\tsort(a+1,a+n+1,cmp);\n\tfor (int i=1;i<=n;i++){\n\t\tint tpx=lower_bound(numx+1,numx+lenx+1,a[i].x2)-numx;\n\t\tint tpy=lower_bound(numy+1,numy+leny+1,a[i].y2)-numy;\n\t\tdp[i]=qmaxy(1,1,leny,tpx,lenx,tpy,leny)+a[i].x2+a[i].y2-a[i].x1-a[i].y1;\n\t\tint curx=lower_bound(numx+1,numx+lenx+1,a[i].x1)-numx;\n\t\tint cury=lower_bound(numy+1,numy+leny+1,a[i].y1)-numy;\n\t\tinserty(1,1,leny,curx,cury,dp[i]);\n\t}\n\tint ans=m*2;\n\tfor (int i=1;i<=n;i++){\n\t\tans=min(ans,m*2-dp[i]);\n\t}\n\tcout<<ans<<endl;\n}\n```\n",
        "postTime": 1580098044,
        "uid": 122077,
        "name": "momo5440",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6007 \u3010[USACO20JAN]Springboards G\u3011"
    },
    {
        "content": "## P6007 [USACO20JAN]Springboards G\n\n\u6ce8\u610f\u5230 $n\\leq 10^9$\uff0c\u800c $p\\leq 10^5$\uff0c\u6545\u8003\u8651\u5c06\u6bcf\u4e00\u4e2a\u8df3\u677f\u5f53\u505a\u72b6\u6001\u8fdb\u884c dp\u3002\n\n\u5c06\u6240\u6709\u8df3\u677f\u6309 $(sx,sy)$ \u6392\u5e8f\uff0c\u8bbe $f_i$ \u8868\u793a\u4ee5\u7b2c $i$ \u4e2a\u8df3\u677f\u4e3a\u7ed3\u5c3e\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u90a3\u4e48 $f_i=\\min\\limits_{ex_j\\leq sx_i,ey_j\\leq sy_i}f_j+sx_i+sy_i-ex_j-ey_j$\u3002\u6734\u7d20\u8f6c\u79fb $\\mathcal O(p^2)$\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c$-ex_j-ey_j$ \u4e0d\u597d\u5904\u7406\uff0c\u4e8e\u662f\u8bbe $f_i$ \u8868\u793a\u4ee5\u7b2c $i$ \u4e2a\u8df3\u677f\u4e3a\u7ed3\u5c3e\uff0c**\u6700\u591a\u80fd\u5c11\u8d70\u591a\u5c11\u6b65**\u3002\u90a3\u4e48 $f_i=\\max\\limits_{ex_j\\leq sx_i,ey_j\\leq sy_i}f_j+ex_i+ey_i-sx_i-sy_i$\uff0c\u8fd9\u6837\u8df3\u677f $i$ \u7684\u8f6c\u79fb\u4e0d\u4f1a\u53d7\u5230 $ex_j,ey_j$ \u7684\u5f71\u54cd\uff0c\u53ea\u9700\u8981\u6c42\u51fa $\\max\\limits_{ex_j\\leq sx_i,ey_j\\leq sy_i}f_j$ \u5373\u53ef\u3002\u628a $(ex,ey)$ \u770b\u4f5c\u4fee\u6539\uff0c$(sx,sy)$ \u770b\u4f5c\u67e5\u8be2\uff0cCDQ \u5206\u6cbb\u5373\u53ef\u3002\u6ce8\u610f\u5982\u679c\u6709\u67d0\u4e2a $(sx,sy)$ \u4e0e\u67d0\u4e2a $(ex,ey)$ \u91cd\u5408\uff0c\u628a $(ex,ey)$ \u653e\u524d\u9762\u3002\n\n\u6700\u540e\u7b54\u6848\u4e3a $2n-\\max\\limits_{1\\leq i\\leq p} f_i$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint n,m,sx,sy,ex,ey,val[N],t,f[N],ans;\nstruct node{\n\tint x,y,id,op;\n}a[N*2];\nbool cmp(node x,node y){return x.x==y.x?(x.y==y.y?x.op<y.op:x.y<y.y):x.x<y.x;}\nvoid cdq(int l,int r){\n\tif(l==r){f[a[l].id]=max(f[a[l].id],val[a[l].id]);return ;}\n\tint mid=(l+r)/2,j=l,mx=0;\n\tcdq(l,mid);\n\tsort(a+l,a+1+mid,[](node x,node y){return x.y<y.y;});\n\tsort(a+mid+1,a+1+r,[](node x,node y){return x.y<y.y;});\n\tfor(int i=mid+1;i<=r;i++) if(a[i].op){\n\t\twhile(j<=mid&&a[j].y<=a[i].y){if(!a[j].op) mx=max(mx,f[a[j].id]); j++;} \n\t\tf[a[i].id]=max(f[a[i].id],mx+val[a[i].id]);\n\t}\n\tsort(a+mid+1,a+1+r,cmp);\n\tcdq(mid+1,r);\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d%d\",&sx,&sy,&ex,&ey);\n\t\tval[i]=abs(sx-ex)+abs(sy-ey),a[++t]={sx,sy,i,1},a[++t]={ex,ey,i,0};\n\t}\n\tsort(a+1,a+1+t,cmp),cdq(1,t);\n\tfor(int i=1;i<=m;i++) ans=max(ans,f[i]);\n\tprintf(\"%d\\n\",n*2-ans);\n\treturn 0;\n} \n```",
        "postTime": 1640172500,
        "uid": 381985,
        "name": "lkytxdy",
        "ccfLevel": 0,
        "title": "P6007 [USACO20JAN]Springboards G"
    },
    {
        "content": "\u6734\u7d20 dp\uff0c\u8003\u8651\u4ece $i$ \u8f6c\u79fb\u5230 $j$\uff0c\u5219\u6709 $f_i+x_j-x_i+y_j-y_i=f_j$ \u5373 $f_i-x_i-y_i=f_j-x_j-y_j$\n\n\u90a3\u4e48\u4e0d\u59a8\u8bbe $g_i=f_i-x_i-y_i$\uff0c\u5219\u5bf9\u4e8e\u6ca1\u6709\u8df3\u677f\u7684\u60c5\u51b5\u6709 $g_i=g_j$\n\n\u6709\u8df3\u677f\u7684\u60c5\u51b5\u4e3a $f_i=f_j$ \u5373 $g_i+x_i+y_i-x_j-y_j=g_j$\uff0c\u6b64\u65f6\u53ef\u4ee5 $O(P^2)$ \u505a\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06 $x$ \u6392\u5e8f\uff0c\u5bf9\u4e8e\u4e00\u4e2a $g_i$ \u53ef\u4ee5\u4ece\u4e24\u79cd\u5730\u65b9\u8f6c\u79fb\uff0c\u4e00\u662f\u4ece\u8df3\u677f\u8df3\u5230\u5b83\uff0c\u4e8c\u662f\u627e\u51fa $y$ \u6bd4\u5b83\u5c0f\u7684 $g$ \u7684\u6700\u5c0f\u503c\uff0c\u5c06\u5176\u8d4b\u503c\u4e3a\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\n\n\u6700\u540e\u7b54\u6848\u662f $f_{(n,n)}=g_{(n,n)}-n-n$\n\n\u8f6c\u79fb\u987a\u5e8f\u662f\u4e00\u4ef6\u9700\u8981\u8003\u8651\u7684\u4e8b\u3002\n\n\u5982\u679c\u4f60\u9009\u62e9\u8ba9**\u8df3\u677f\u7ec8\u70b9\u88ab\u8df3\u677f\u8d77\u70b9\u66f4\u65b0**\uff0c\u90a3\u4e48\u4f60\u5c31\u8981\u5f3a\u5236\u8ba9\u8df3\u677f\u8d77\u70b9\u88ab\u66f4\u65b0\u8fc7\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u8df3\u677f\u8d77\u70b9\u662f\u524d\u9762\u67d0\u4e2a\u8df3\u677f\u7ec8\u70b9\u65f6\u8981\u5148\u66f4\u65b0\u5b83\u4f5c\u4e3a\u7ec8\u70b9\u65f6\u7684\u7b54\u6848\u3002\n\n\u5982\u679c\u9009\u62e9\u8ba9**\u8df3\u677f\u8d77\u70b9\u66f4\u65b0\u8df3\u677f\u7ec8\u70b9**\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8d77\u70b9\u5373\u4f7f\u4f5c\u4e3a\u524d\u9762\u8df3\u677f\u7684\u7ec8\u70b9\uff0c\u4e5f\u88ab\u524d\u9762\u8df3\u677f\u7684\u8d77\u70b9\u66f4\u65b0\u8fc7\u4e86\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u94a6\u5b9a\u987a\u5e8f\u3002\n\n\u5f88\u4e0d\u5e78\u6211\u5199\u7684\u662f\u524d\u9762\u4e00\u79cd\u3002\n\ncode\uff1a\n\n```cpp\n#define ll long long\n#define ri register int\ninline ll rd(){\n\tll x=0,flag=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') flag=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+(ch^48);ch=getchar();}\n\treturn x*flag;\n}\n#define N 100010\nint n,m,bg[N],ed[N],g[N<<1],c[N<<1],x,y;\nstruct springboard{\n    int x,y,yp,idx,op;\n}s[N<<1];\ninline bool cmpy(springboard a,springboard b){return a.y<b.y;}\ninline bool cmpx(springboard a,springboard b){if(a.x==b.x&&a.y==b.y) return a.op<b.op;if(a.x==b.x) return a.y<b.y;return a.x<b.x;}\ninline int lowbit(int x){return x & ( - x ) ;}\ninline int query(int x){int tmp=0;for(ri i=x;i>0;i-=lowbit(i)) tmp=min(tmp,c[i]);return tmp;}\ninline void change(int x,int v){for(ri i=x;i<=2*m;i+=lowbit(i)) c[i]=min(c[i],v);}\nint main()\n{\n\tn=rd(),m=rd();\n\tfor(ri i=1;i<=m;++i){\n        x=rd(),y=rd();\n        s[i].x=x,s[i].y=y,s[i].idx=i,s[i].op=1;\n        x=rd(),y=rd();\n        s[i+m].x=x,s[i+m].y=y,s[i+m].idx=i,s[i+m].op=0;\n    }\n    sort(s+1,s+1+2*m,cmpy);\n    s[0].y=-1;\n    for(ri i=1;i<=2*m;++i) s[i].yp=s[i-1].yp+(s[i-1].y!=s[i].y);\n    sort(s+1,s+1+2*m,cmpx);\n    for(ri i=1;i<=2*m;++i){\n        if(bg[s[i].idx]) ed[s[i].idx]=i;\n        else bg[s[i].idx]=i;\n    }\n    int ans=0;\n    for(ri i=1;i<=2*m;++i){\n        g[i]=query(s[i].yp);\n        if(i==ed[s[i].idx]) g[i]=min(g[i],g[bg[s[i].idx]]+s[bg[s[i].idx]].x+s[bg[s[i].idx]].y-s[i].x-s[i].y);\n        ans=min(ans,g[i]);\n        change(s[i].yp,g[i]);\n    }\n    cout<<ans+2*n;\n    return 0;\n}\n```\n",
        "postTime": 1615212852,
        "uid": 135839,
        "name": "Fairicle",
        "ccfLevel": 6,
        "title": "P6007"
    },
    {
        "content": "## \u524d\u8a00\n\u4e0d\u592a\u6e05\u9192\u3002\n\n\u592a\u4e0d\u6e05\u9192\u3002\n\n## \u5206\u6790\n\u9996\u5148\u60f3\u5230\u5efa\u56fe\u3002\n\n\u4e8e\u662f\u5f00\u59cb\u60f3\u7684\u662f\u795e\u4ed9\u4f18\u5316\u5efa\u56fe\u6700\u77ed\u8def\u3002\n\n\u672a\u679c\u3002\n\n\u540e\u6765\u5199\u51fa\u5f0f\u5b50\u731b\u7136\u9192\u609f\u3002\n\n\u5c06\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u70b9\u8bb0\u5f55\u4e0b\u6765\uff0c\u8bbe $f_i$ \u8868\u793a\u8d70\u5230\u70b9 $i$ \u7684\u6700\u5c0f\u6b65\u6570\uff0c\u6709\uff1a\n\n$$\nf_i=\\min_{x_j\\le x_i,y_j\\le y_i}f_j+w_{j,i}\n$$\n\n\u5176\u4e2d $w_{j,i}$ \u8868\u793a\u70b9 $j$ \u4e0e\u70b9 $i$ \u7684\u8ddd\u79bb\uff0c\u8bbe\u9898\u76ee\u6240\u7ed9 $0$ \u6743\u8fb9\u96c6\u4e3a $E$\uff0c\u6709\uff1a\n\n$$\nw_{j,i}=\n\\begin{cases}\n0,(j,i)\\in E\\\\\nx_i-x_j+y_i-y_j,(j,i)\\notin E\n\\end{cases}\n$$\n\n\u5bb9\u6613\u770b\u51fa\u662f\u7ecf\u5178\u6570\u636e\u7ed3\u6784\u4f18\u5316\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f0f\u3002\u524d\u4e00\u79cd\u60c5\u51b5\u5355\u72ec\u8f6c\u79fb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\operatorname{O}(n)$\uff1b\u540e\u4e00\u79cd\u60c5\u51b5\u5c06\u5f0f\u5b50\u53c2\u53d8\u5206\u79bb\uff0c\u53d8\u5f62\u4e3a $f_i=(\\min_{x_j\\le x_i,y_j\\le y_i}(f_j-x_j-y_j))+(x_i+y_i)$\uff0c\u53d1\u73b0\u79bb\u6563\u5316\u540e\u5c06 $f_j-w_j-y_j$ \u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u6700\u5c0f\u503c\u5373\u53ef\u6bcf\u6b21 $\\operatorname{O}(\\log n)$ \u8f6c\u79fb\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\operatorname{O}(n\\log n)$\u3002\n\n## \u4ee3\u7801\n\u201c`i+=lowbit(x);`\u201d\u3002\n\n\u4e0d\u6127\u662f\u6211\uff0c\u8003\u573a\u5947\u8ff9\u3002\n\n\u53e6\u5916\u6ce8\u610f\u70b9\u53ef\u80fd\u91cd\u590d\u3002\u7531\u4e8e\u6392\u5e8f\u4e0d\u7a33\u5b9a\uff0c$f_{tot}$ \u53ef\u80fd\u4e0d\u662f\u6700\u540e\u7684\u7b54\u6848\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u5bf9\u5e94\u7684\u624d\u662f\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define int long long\nconst int maxn=1e5;\nint n,p,tot,x1,y1,x2,y2,newtot,copies[(maxn<<1)+10],f[(maxn<<1)+10],BIT[(maxn<<1)+10],from[(maxn<<1)+10];\nstruct node\n{\n\tint x,y,no;\n\tnode(int t1=0,int t2=0,int t3=0):x(t1),y(t2),no(t3){}\n}a[(maxn<<1)+10];\ninline bool cmp(const node &t1,const node &t2)\n{\n\treturn t1.x==t2.x?t1.y<t2.y:t1.x<t2.x;\n}\ninline int lowbit(int x)\n{\n\treturn x&(-x);\n}\nvoid change(int x,int value)\n{\n\tfor(int i=x;i<=newtot;i+=lowbit(i))\n\t\tBIT[i]=min(BIT[i],value);\n\treturn;\n}\nint query(int x)\n{\n\tint res=0x3f3f3f3f3f3f3f3fll;\n\tfor(int i=x;i;i-=lowbit(i))\n\t\tres=min(res,BIT[i]);\n\treturn res;\n}\nsigned main()\n{\n\tscanf(\"%d%d\",&n,&p);\n\tfor(int i=1;i<=p;++i)\n\t{\n\t\tscanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n\t\tif(x1<=n&&y1<=n&&x2<=n&&y2<=n)\n\t\t{\n\t\t\t++tot;\n\t\t\ta[tot]=node(x1,y1,tot);\n\t\t\t++tot;\n\t\t\ta[tot]=node(x2,y2,tot);\n\t\t\tfrom[tot]=tot-1;\n\t\t} \n\t}\n\t++tot;\n\ta[tot]=node(0,0,tot);\n\t++tot;\n\ta[tot]=node(n,n,tot);\n\tfor(int i=1;i<=tot;++i)\n\t\tcopies[i]=a[i].y;\n\tsort(a+1,a+tot+1,cmp);\n\tsort(copies+1,copies+tot+1);\n\tnewtot=unique(copies+1,copies+tot+1)-copies-1;\n\tmemset(f,0x3f,sizeof f);\n\tchange(1,0);\n\tf[a[1].no]=0;\n\tfor(int i=2;i<=tot;++i)\n\t{\n\t\tint pos=lower_bound(copies+1,copies+newtot+1,a[i].y)-copies;\n\t\tf[a[i].no]=min(f[from[a[i].no]],query(pos)+a[i].x+a[i].y);\n\t\tchange(pos,f[a[i].no]-a[i].x-a[i].y);\n\t}\n\tprintf(\"%lld\",f[a[tot].no]);\n\treturn 0;\n}\n```",
        "postTime": 1614341378,
        "uid": 67952,
        "name": "\u767d\u9c9f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6007 [USACO20JAN]Springboards G"
    },
    {
        "content": "### \u521d\u6b65\u601d\u8003\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u8bf4\u660e\u4e00\u70b9\uff1a\u4ece\u70b9 $(x_a,y_a)$ \u8d70\u5230\u70b9 $(x_b,y_b)$\uff0c\u6240\u6709\u7684\u8def\u5f84\u90fd\u662f\u552f\u4e00\u7684\u3002\n\n\u4e14\u6709\uff1a\u4e00\u4e2a\u8df3\u677f\uff0c\u5b83\u5bf9\u51cf\u5c0f\u8d70\u8def\u8ddd\u79bb\u7684\u8d21\u732e\u4e3a $\\left|x_2-x_1\\right|+\\left|y_2-y_1\\right|$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6c42\u51fa\u4e00\u6761\u53ef\u80fd\u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u8def\u5f84\u4e0a\u6240\u6709\u8df3\u677f\u7684\u51cf\u5c0f\u8d70\u8def\u8ddd\u79bb\u7684\u8d21\u732e\u6700\u5927\u3002\n\n\u4ed4\u7ec6\u601d\u8003\uff0c\u5176\u5b9e\u5f88\u50cf\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u601d\u8003\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8df3\u677f $i$\uff0c\u5982\u679c\u4f7f\u7528\u5b8c\u8df3\u677f $j$ \u8fd8\u53ef\u4ee5\u4f7f\u7528\u8df3\u677f $i$ \u7684\u8bdd\uff0c\u90a3\u4e48\u80af\u5b9a\u9700\u8981\u6ee1\u8db3 $x_{2,j} \\leqslant x_{1,i} $\u4e14$ y_{2,j} \\leqslant y_{1,i}$\u3002\n\n\u4f46\u662f\u5149\u8fd9\u4e48\u505a\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u4e8c\u7ef4\u504f\u5e8f\u662f\u7528\u4e8e\u5904\u7406\u70b9\u7684\uff0c\u800c\u4e0d\u662f\u7528\u4e8e\u5904\u7406\u7ebf\u6bb5\u7684\u3002\u6240\u4ee5\u8fd9\u9053\u9898\u4f60\u5728\u7b2c\u4e00\u7ef4\u6392\u5e8f\u7684\u65f6\u5019\u5e76\u4e0d\u77e5\u9053\u662f\u4ee5 $x_1$ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u8fd8\u662f\u4ee5 $x_2$ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n\u4f46\u662f\u53ef\u4ee5\u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\n\n### \u601d\u8def\u5206\u4eab\n\n\u7531\u4e8e\u6211\u4eec\u7684\u6811\u72b6\u6570\u7ec4\u5df2\u7ecf\u53ef\u4ee5\u7ef4\u62a4 $y$ \u5750\u6807\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5982\u4f55\u7ef4\u62a4 $x$ \u5750\u6807\u3002\n\n\u7136\u540e\u601d\u8003\uff0c\u5047\u5982\u6211\u4eec\u5148\u4ee5 $x_1$ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u5806\u7ef4\u62a4 $x_2$\uff0c\u4f7f\u5f97\u73b0\u5728\u5c06\u6240\u6709 $x_{2,j}\\leqslant x_{1,i}$ \u7684 $j$ \u52a0\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u5373\u53ef\u4e86\u3002\n\n\u53c8\u7531\u4e8e\u6211\u4eec\u524d\u6587\u6309\u7167 $x_1$ \u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u4e14\u5806\u6ee1\u8db3\u4e86 $x_2$ \u7684\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u6bcf\u4e2a\u8df3\u677f\u4ec5\u4f1a\u88ab\u52a0\u5165\u6811\u72b6\u6570\u7ec4 $1$ \u6b21\uff0c\u4e14\u4e0d\u4f1a\u88ab\u5220\u9664\uff0c\u6240\u4ee5\u52a0\u5165\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3a $\\Theta(1)$\uff0c\u7efc\u5408\u7684\u590d\u6742\u5ea6\u4e3a $\\Theta(p^2)$\uff0c\u53ef\u4ee5\u8fc7\u8fd9\u9053\u9898\u3002\n\n### \u4ee3\u7801\u5c55\u793a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=200100;\n//\u8fd9\u91cc\u9700\u8981\u5f002e5\uff0c\u5f001e5\u4f1a\u8ff7\u4e4bWA\nint n,m,nx,ny,fx[maxn],fy[maxn],tx[maxn],ty[maxn];\nint c[maxn],Max,numa[maxn],la;\n//fx:x1\u3001fy:y1\u3001tx:x2\u3001ty:y2\nint numx[maxn*2],numy[maxn*2];\npriority_queue<pair<int,int> >q; \n//\u7ef4\u62a4\u52a0\u8df3\u677f\u7684\u987a\u5e8f\nstruct node{\n\tint len,fx,fy,tx,ty;\n\tbool operator <(node u)const{\n\t\treturn fx==u.fx?tx<u.tx:fx<u.fx;\n\t}\n}jump[maxn];\n//\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e8c\u7ef4\u504f\u5e8f\nint lowbit(int x){\n\treturn x&(-x);\n}\nint query(int x){\n\tint sum=0;\n\twhile(x>0){\n\t\tsum=max(c[x],sum);\n\t\tx-=lowbit(x);\n\t}\n\treturn sum;\n}\nint change(int x,int i){\n\twhile(x<=ny){\n\t\tc[x]=max(c[x],i);\n\t\tx+=lowbit(x);\n\t}\n}\nmap<int,int>mapx,mapy;\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d%d\",&fx[i],&fy[i],&tx[i],&ty[i]);\n\t\tjump[i].len=tx[i]-fx[i]+ty[i]-fy[i];\n\t\tnumx[i*2-1]=fx[i],numx[i*2]=tx[i];\n\t\tnumy[i*2-1]=fy[i],numy[i*2]=ty[i];\n\t}//\u8fd9\u91cc\u9700\u8981\u79bb\u6563\u5316\n\tsort(numx+1,numx+1+m+m);\n\tsort(numy+1,numy+1+m+m);\n\tnumx[0]=numy[0]=-1;\n\tnx=ny=0;\n\tfor(int i=1;i<=m*2;i++){\n\t\tif(numx[i]!=numx[i-1]){\n\t\t\tnx++;\n\t\t\tmapx[numx[i]]=nx;\n\t\t}\n\t\tif(numy[i]!=numy[i-1]){\n\t\t\tny++;\n\t\t\tmapy[numy[i]]=ny;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tjump[i].fx=mapx[fx[i]];\n\t\tjump[i].tx=mapx[tx[i]];\n\t\tjump[i].fy=mapy[fy[i]];\n\t\tjump[i].ty=mapy[ty[i]];\n\t}\n\tsort(jump+1,jump+1+m);\n\tfor(int i=1;i<=m;i++){\n\t\twhile(!q.empty()&&-(q.top().first)<=jump[i].fx){//\u52a0\u5165\u8df3\u677f\n\t\t\tchange(jump[q.top().second].ty,numa[q.top().second]);\n\t\t\tq.pop();\n\t\t}\n\t\tnuma[i]=query(jump[i].fy);\n\t\tnuma[i]+=jump[i].len;\n\t\tMax=max(Max,numa[i]);\n\t\tq.push(make_pair(-(jump[i].tx),i)); \n\t}\n\tprintf(\"%d\\n\",(n*2)-Max);//Max\u5373\u4e3a\u5bf9\u51cf\u5c11\u8d70\u8def\u6b65\u6570\u7684\u8d21\u732e\n    //\u6ca1\u6709\u8df3\u677f\u65f6\u8d70\u7684\u8def\u4e3a(n*2)\n\treturn 0;\n}\n\n```",
        "postTime": 1602927587,
        "uid": 90176,
        "name": "xixiup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6007 \u3010[USACO20JAN]Springboards G\u3011"
    }
]