[
    {
        "content": "### \u300cCEOI2010\u300d MP3Player\n\n#### \u9898\u610f\n\n>  $~~~~$ \u7ed9\u51fa $n$ \u6b21\u5bf9\u97f3\u91cf\u7684\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4e3a\u4f7f\u97f3\u91cf $+1$ \u6216 $-1$ \uff0c\u540c\u65f6\u82e5\u97f3\u91cf\u64cd\u4f5c\u540e\u8d85\u51fa $[0,V_{\\max}]$ \u6216\u8be5\u64cd\u4f5c\u4e0e\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u7684\u65f6\u95f4\u95f4\u9694 $>t$ \u5219\u8be5\u64cd\u4f5c\u65e0\u6548\uff08\u4e0d\u8bba\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u662f\u5426\u6709\u6548\uff09\u3002\u5df2\u77e5\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u7684\u6700\u7ec8\u97f3\u91cf\uff0c\u6c42 $t$ \u53ef\u80fd\u7684\u6700\u5927\u503c\u4ee5\u53ca\u8be5\u6700\u5927\u503c\u4e0b\u53ef\u80fd\u7684\u6700\u5927\u7684\u521d\u59cb\u97f3\u91cf\u3002\n>\n> $~~~~$ $1\\leq n\\leq 2\\times 10^5,2\\leq V_{\\max}\\leq 5000$\n\n#### \u9898\u89e3\n\n$~~~~$ ~~\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7ef4\u62a4\u7684\u4e1c\u897f\u589e\u52a0\u4e86\uff0c\u7ebf\u6bb5\u6811yyds~~\n\n$~~~~$ \u5148\u7ed9\u51fa\u4e00\u4e2a\u66b4\u529b\u901a\u7528\u601d\u8def\uff1a\u679a\u4e3e\u6240\u6709\u5728\u64cd\u4f5c\u4e2d\u51fa\u73b0\u7684 $t$ \uff0c\u5219\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u521d\u59cb\u97f3\u91cf $V_1$\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5 $\\mathcal{O(n)}$\u6c42\u51fa\u5176\u5bf9\u5e94\u7684\u7ed3\u675f\u97f3\u91cf $V_2$ \u3002\u5e76\u4e14\u8f93\u51fa\u51fa\u6765\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u82e5\u5c06 $V_2$ \u89c6\u4f5c $V_1$ \u7684\u51fd\u6570\uff0c\u5219\u8be5\u51fd\u6570\u4e0d\u964d,\u6545\u53ef\u4ee5\u4e8c\u5206\u6c42\u51fa\u662f\u5426\u5b58\u5728 $V_1$ \u5728\u8be5 $t$ \u4e0b\u4f7f\u5f97\u7ed3\u675f\u97f3\u91cf\u4e3a $V_2$ \u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal{O(n^2\\log n)}$  ~~\u4f3c\u4e4e\u4e00\u4e2asubtask\u90fd\u8fc7\u4e0d\u4e86\uff08~~\n\n$~~~~$ \u8003\u8651\u7ee7\u7eed\u53d1\u6398\u4e00\u4e0b\u8be5\u51fd\u6570\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u53d1\u73b0\u8be5\u51fd\u6570\u5b58\u5728 $A,B$ \uff0c\u4f7f\u5f97 $[0,A)$ \u5185\u6240\u6709 $V_1$ \u7684 $V_2$ \u76f8\u540c\uff0c$[A,B)$ \u5185\u6240\u6709 $V_1$ \u7684 $V_2$ \u6bcf\u4e2a\u76f8\u5bf9\u524d\u4e00\u4e2a\u591a $1$ \uff0c$[B,V_{\\max}]$ \u5185\u6240\u6709 $V_1$ \u7684 $V_2$ \u4e5f\u76f8\u540c\u3002\u7b80\u5355\u6765\u8bf4\u8be5\u51fd\u6570\u4f9d\u6b21\u662f\uff1a\u5e38\u51fd\u6570\u3001\u4e00\u6b21\u51fd\u6570\u3001\u5e38\u51fd\u6570\u3002\u7406\u6027\u7406\u89e3\u4e00\u4e0b\uff0c $V_1$ \u5728\u4ece $0$ \u5f00\u59cb\u589e\u957f\u65f6\u4e2d\u9014\u4e00\u5b9a\u4f1a\u6709\u4e00\u6bb5\u65f6\u95f4\u5361\u5728\u4e0b\u754c\u3001\u589e\u957f\u5230 $V_{max}$ \u524d\u6709\u4e00\u6bb5\u65f6\u95f4\u5361\u5728\u4e0a\u754c\uff0c\u5f53\u7136\u8fd9\u6bb5\u65f6\u95f4\u53ef\u4ee5\u4e3a\u7a7a\u3002\u90a3\u4e48\u663e\u7136\uff0c\u8be5\u51fd\u6570\u7684\u503c\u57df\u4e5f\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u6574\u6570\u533a\u95f4\u3002\n\n$~~~~$ \u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e24\u4e2a\u5e38\u51fd\u6570\u7684\u503c $a,b$ \u548c\u4e00\u6b21\u51fd\u6570\u7684 $y=x+c$ \u7684 $c$ \u3002\u5219\u5f53\u6211\u4eec\u77e5\u9053\u4e24\u6bb5\u76f8\u8fde\u533a\u95f4\u7684 $a,b,c$ \u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u590d\u5408\u4e24\u4e2a\u51fd\u6570\u5f97\u5230\u8fd9\u4e2a\u5927\u533a\u95f4\u7684 $a,b,c$ \u3002\u7a0d\u5fae\u624b\u73a9\u4e00\u4e0b\u5c31\u53ef\u4ee5\u63a8\u51fa $\\mathcal{O(1)}$ \u8f6c\u79fb\uff0c\u8fd9\u70b9\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\u81ea\u7136\u800c\u7136\u5730\uff0c\u6211\u4eec\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u7684\u51fd\u6570\u503c\u3002\n\n$~~~~$ \u56e0\u6b64\uff0c\u6211\u4eec\u4ecd\u7136\u4fdd\u7559\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684 $t$ \uff0c\u7136\u540e\u6bcf\u6b21\u5728\u7ebf\u6bb5\u6811\u4e0a\u5220\u9664\u67d0\u4e2a\u70b9\u5bf9\u5e94\u7684\u8d21\u732e\uff0c\u5e76\u68c0\u67e5\u8be5\u51fd\u6570\u503c\u57df\u4e2d\u662f\u5426\u6709 $V_2$ \u3002\u8be5\u8fc7\u7a0b\u4e2d\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u5220\u53bb\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O(n\\log n)}$ \u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint n,Vmax,V2;\nint val[200005],Time[200005];\nstruct node{\n\tint val,Time,id;\n\tnode(){}\n\tnode(int V,int T,int I){val=V,Time=T,id=I;}\n}P[200005];\nstruct Seg{\n\t#define ls p<<1\n\t#define rs p<<1|1\n\t#define lson p<<1,l,mid\n\t#define rson p<<1|1,mid+1,r\n\tstruct Func{\n\t\tint a,b,c;\n\t\tFunc(){}\n\t\tFunc(int A,int B,int C){a=A,b=B,c=C;}\n\t\tint F(int x){return min(b,max(a,x+c));}\n\t}tr[800005];\n\t//a\u4e00\u5e73\u7684\u503c b\u4e8c\u5e73\u7684\u503c c\u4e00\u6b21\u51fd\u6570 y=x+c \n\tvoid pushUp(int p)\n\t{\n\t\ttr[p].a=min(tr[rs].b,max(tr[rs].a,tr[ls].a+tr[rs].c));\n\t\ttr[p].b=max(tr[rs].a,min(tr[rs].b,tr[ls].b+tr[rs].c));\n\t\ttr[p].c=tr[ls].c+tr[rs].c;\n\t}\n\tvoid Build(int p,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\ttr[p]=Func(0,Vmax,val[l]);\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tBuild(lson);Build(rson);\n\t\tpushUp(p);\n\t}\n\tvoid Modify(int p,int l,int r,int aim)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\ttr[p]=Func(0,Vmax,0);\n\t\t\treturn;\n\t\t} \n\t\tint mid=(l+r)>>1;\n\t\tif(aim<=mid) Modify(lson,aim);\n\t\tif(mid<aim)  Modify(rson,aim);\n\t\tpushUp(p);\n\t} \n}Seg;\nint Calc()\n{\n\tint l=0,r=Vmax,mid,Ans=0;\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(Seg.tr[1].F(mid)<=V2) l=mid+1,Ans=mid;\n\t\telse r=mid-1;\n\t}\n\treturn Ans;\n}\nbool cmp(node x,node y){return x.Time>y.Time;}\nint main() {\n\tscanf(\"%d %d %d\",&n,&Vmax,&V2);\n\tchar S[10];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s %d\",S+1,&Time[i]);\n\t\tval[i]=(S[1]=='+')?1:-1;\n\t}n--;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tval[i]=val[i+1];\n\t\tTime[i]=Time[i+1]-Time[i];\n\t\tP[i]=node(val[i],Time[i],i);\n\t}\n\tSeg.Build(1,1,n);\n\tsort(P+1,P+1+n,cmp);\n\tif(Seg.tr[1].F(0)<=V2&&V2<=Seg.tr[1].F(Vmax)) return puts(\"infinity\")&0;\n\tint j;\n\tfor(int i=1;i<=n;i=j)\n\t{\n\t\tint Tmp=P[i].Time;\n\t\tfor(j=i;P[j].Time==P[i].Time;j++) Seg.Modify(1,1,n,P[j].id);\n\t\tif(Seg.tr[1].F(0)<=V2&&V2<=Seg.tr[1].F(Vmax)) return printf(\"%d %d\\n\",P[i].Time-1,Calc())&0;\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1626011277,
        "uid": 160701,
        "name": "Azaz\u0435l",
        "ccfLevel": 0,
        "title": "\u300cCEOI2010\u300d MP3Player\u9898\u89e3"
    },
    {
        "content": "[\u539f\u9898](https://www.luogu.com.cn/problem/P6520)\u7684\u7ffb\u8bd1\u5df2\u7ecf\u5f88\u597d\u4e86.\n\n***\n\u9700\u8981\u5206\u6790\u9898\u610f\u7684\u597d\u9898.\n\n\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662f\u4e00\u4e2a\u6700\u5927\u89e3\uff1a\u6700\u5927\u7b26\u5408\u64cd\u4f5c\u7ed3\u679c\u7684\u9501\u952e\u65f6\u95f4\u95f4\u9694 $T$ \u548c\u521d\u59cb\u97f3\u91cf $V_s$\uff1b\u5df2\u77e5\u7684\u6761\u4ef6\u53ea\u6709\u64cd\u4f5c\u5e8f\u5217\u548c\u64cd\u4f5c\u7ed3\u679c $V_e$\uff08\u6211\u4eec\u79f0\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\u548c\u64cd\u4f5c\u7ed3\u679c\u6784\u6210\u4e00\u4e2a**\u64cd\u4f5c\u5c40**\uff09. \u6bd4\u8f83\u73b0\u5b9e\u7684\u5206\u6790\u65b9\u5f0f\u5927\u6982\u53ea\u6709\u4ece $V_e$ \u6cbf\u64cd\u4f5c\u5e8f\u5217\u5012\u63a8\u56de\u53bb\u4e86. \u7136\u800c\u7531\u4e8e\u9501\u952e\u65f6\u95f4\u7684\u5b58\u5728\uff0c\u67d0\u4e9b\u64cd\u4f5c\u662f\u65e0\u6548\u7684\uff0c\u8fd9\u7ed9\u5012\u63a8\u9020\u6210\u9ebb\u70e6. \n\n\u56e0\u6b64\u672c\u9898\u7684 puzzle \u4e3b\u8981\u5728\u4e24\u4e2a\u65b9\u9762\uff0c\u4e00\u4e2a\u662f\u97f3\u91cf\u52a0\u51cf\u64cd\u4f5c\u53ca\u5176\u7d2f\u52a0\u6548\u679c\uff0c\u4e00\u4e2a\u662f\u9501\u952e\u65f6\u95f4\u5bf9\u64cd\u4f5c\u7684\u5f71\u54cd.\n\n\u5148\u770b\u540e\u8005. \u9898\u76ee\u63d0\u793a\u6211\u4eec $T = 0$ \u65f6\u603b\u662f\u6709\u89e3\uff0c\u56e0\u4e3a\u8fd9\u76f8\u5f53\u4e8e\u5168\u90e8\u64cd\u4f5c\u65e0\u6548\uff1b\u800c\u5728\u6781\u7aef\u60c5\u5f62\u4e0b\uff0c$T$ \u53ef\u80fd\u4e3a\u4efb\u610f\u5927\u7684\u6b63\u6570\uff0c\u8fd9\u76f8\u5f53\u4e8e\u6240\u6709\u64cd\u4f5c\u90fd\u6709\u6548\u65f6\u672c\u5c40\u4ecd\u7136\u6709\u89e3\uff0c\u6837\u4f8b 2 \u5c31\u662f\u4e00\u4f8b.\n\n$T$ \u4ece $0$ \u5230\u65e0\u7a77\u5927\uff0c\u64cd\u4f5c\u4ece\u5168\u90e8\u65e0\u6548\u8d8b\u4e8e\u5168\u90e8\u6709\u6548\uff0c\u6545\u5e94\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $T$. \u6ce8\u610f\uff0c\u672c\u9898\u7684 $T$ \u53ef\u8fbe $2\u00d710^9$\uff0c\u56e0\u6b64\u5fc5\u987b\u79bb\u6563\u5316\u679a\u4e3e\uff0c\u800c\u4e0d\u662f\u9010\u4e00\u679a\u4e3e\uff1a\u6211\u4eec\u5efa\u4e00\u4e2a\u6240\u6709\u64cd\u4f5c\u7684\u5c0f\u6839\u5806\uff0c\u6bd4\u8f83\u952e\u503c\u662f\u65f6\u95f4\u5dee $\\Delta t$\uff0c\u7136\u540e\u5faa\u73af\u53d6\u51fa\u6700\u5c0f\u5143\u7d20\uff08\u540c\u65f6\u53d6\u51fa\u6240\u6709\u952e\u503c\u76f8\u540c\u7684\u5143\u7d20\uff0c\u8bbe\u6b64\u952e\u503c\u4e3a $T_0$\uff09\uff0c\u4f7f\u5bf9\u5e94\u7684\u64cd\u4f5c\u7531\u65e0\u6548\u53d8\u4e3a\u6709\u6548\uff0c\u7136\u540e\u8be2\u95ee\u6b64\u65f6\u64cd\u4f5c\u5c40\u662f\u5426\u6709\u89e3\uff08\u5e76\u627e\u5230\u5176\u4e2d $V_s$ \u6700\u5927\u7684\u89e3\uff09\uff0c\u76f4\u5230\u5c0f\u6839\u5806\u53ea\u5269\u4e0b\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff08\u5176\u4e00\u5b9a\u65e0\u6548\uff09.\n\n\u8fd9\u6837\u6bcf\u5f53\u64cd\u4f5c\u5c40\u6709\u89e3\uff0c\u5c31\u610f\u5473\u7740\u4e0d\u4ec5\u5f53\u524d $T_0$ \u662f\u64cd\u4f5c\u5c40\u7684\u89e3\uff0c\u800c\u4e14\u8bbe\u4e0b\u4e00\u4e2a\u53d6\u51fa\u7684\u952e\u503c\u4e3a $T_0'$\uff0c\u5219 $[T_0,T_0')$ \u91cc\u7684\u6574\u6570\u90fd\u662f\u89e3. \u90a3\u4e48\u53ea\u9700\u5728\u6bcf\u6b21\u6709\u89e3\u65f6\u66f4\u65b0  $V_s$\uff1b\u5e76\u5728\u6bcf\u6b21\u65e0\u89e3\u4e14\u524d\u4e00\u6b21\u6709\u89e3\u65f6\uff0c\u628a  $T$ \u66f4\u65b0\u4e3a\u6b64\u65f6\u7684 $T_0-1$. \u5047\u5982\u6700\u540e\u4e00\u8f6e\u5faa\u73af\u5373 $T_0$ \u6700\u5927\u65f6\u6709\u89e3\uff0c\u5219 $T_0'=\u221e$\uff0c\u8f93\u51fa ``infinity``.\n\n***\n\u4e0b\u9762\u9700\u8981\u5b9e\u73b0\u300c\u8be2\u95ee\u6b64\u65f6\u64cd\u4f5c\u5c40\u662f\u5426\u6709\u89e3\u300d\u7684\u7b97\u6cd5\uff1a\n> \u5047\u5982\u7ed9\u51fa\u4e86 $V_e$ \u548c\u4e00\u4e2a\u5168\u90e8\u6709\u6548\u7684\u64cd\u4f5c\u5e8f\u5217 $A$\uff08\u503c\u5747\u4e3a$ +1$ \u6216 $-1$\uff09\uff0c\u600e\u4e48\u5feb\u901f\u786e\u5b9a\u6709\u65e0\u89e3\u4ee5\u53ca\u6700\u5927\u7684 $V_s$\uff1f\n\n\u8fd9\u4e2a\u95ee\u9898\u6709\u610f\u4e49\u5c31\u662f\u56e0\u4e3a\u97f3\u91cf\u4e0a\u9650 $V_{max}$ \u548c\u4e0b\u9650 $0$ \u7684\u5b58\u5728\uff0c\u5b83\u4eec\u4f1a**\u5438\u6536**\u591a\u4f59\u7684 $+1/-1$ \u64cd\u4f5c\uff0c\u4ee4\u60c5\u51b5\u590d\u6742. \u4ece\u53f3\u5411\u5de6\u770b\uff0c\u5728\u97f3\u91cf\u6ca1\u6709**\u78b0\u9876 / \u78b0\u5e95**\u65f6\uff0c\u8be5\u4f4d\u7f6e\u7684\u97f3\u91cf\u503c\u663e\u7136\u80fd\u4e25\u683c\u9760\u5012\u63a8\u64cd\u4f5c\u5e8f\u5217\u786e\u5b9a\uff1b\u4e00\u65e6\u78b0\u4e86\u9876 / \u5e95\uff0c\u97f3\u91cf\u53d8\u5316\u5c31\u8fd8\u4f9d\u8d56\u4e8e\u8d77\u59cb\u4f4d\u7684\u9009\u62e9\u4e86.\n\n\u79f0\u201c\u78b0\u9876\u201d\u7684\u4f4d\u7f6e\u4e3a $roof$ \u4f4d\u3001\u201c\u78b0\u5e95\u201d\u7684\u4f4d\u7f6e\u4e3a $floor$ \u4f4d\uff1b\u79f0\u4ece\u53f3\u5411\u5de6\u7b2c\u4e00\u4e2a $roof$ \u4f4d\uff08\u5982\u679c\u6709\uff09\u4e3a $roof_0$\uff0c\u4ece\u53f3\u5411\u5de6\u7b2c\u4e00\u4e2a $floor$ \u4f4d\uff08\u5982\u679c\u6709\uff09\u4e3a $floor_0$. \u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u78b0\u9876 / \u78b0\u5e95\u53ef\u80fd\u4e0d\u53d1\u751f. \u6613\u89c1\uff0c\u6b64\u65f6 $V_s$ \u603b\u662f\u7b49\u4e8e $V_e-\\Sigma A_i$\uff0c\u4e14 $A$ \u7684\u540e\u7f00\u548c\u603b\u5728 $(V_e-V_{max},V_e)$ \u8303\u56f4\u5185. \u8bb0 $lower=V_e-V_{max}$\u3001$upper=V_e$\uff0c$A$ \u7684\u540e\u7f00\u548c\u5e8f\u5217\u4e3a $S$.\n\n**\u5982\u679c\u5e8f\u5217\u4ece\u53f3\u5411\u5de6\u5012\u63a8\u64cd\u4f5c\u5e8f\u5217\u5148\u78b0\u5230\u7684\u662f\u9876**\uff0c\u79f0\u8fd9\u662f\u4e00\u4e2a**\u5148\u9876\u5e8f\u5217**\uff1b**\u5982\u679c\u5148\u78b0\u5230\u7684\u662f\u5e95**\uff0c\u79f0\u8fd9\u662f\u4e00\u4e2a**\u5148\u5e95\u5e8f\u5217**. \u6613\u77e5\uff08\u4ece\u53f3\u5411\u5de6\uff09\u5148\u9876\u5e8f\u5217\u7b2c\u4e00\u4e2a\u4f7f\u5f97 $S_i=lower$ \u7684\u4e0b\u6807 $i$ \u5c31\u662f $roof_0$\uff1b\u5148\u5e95\u5e8f\u5217\u7b2c\u4e00\u4e2a\u4f7f\u5f97 $S_i=upper$ \u7684\u4e0b\u6807 $i$ \u5c31\u662f $floor_0$.\n\n\u6211\u4eec\u60f3\u4e00\u4e0b\u4ec0\u4e48\u64cd\u4f5c\u5e8f\u5217\u4f1a\u9020\u6210\u65e0\u89e3. \u6839\u636e\u6837\u4f8b 1 \u89e3\u91ca\uff0c\u4e0d\u5408\u6cd5\u7684\u6839\u6e90\u662f\uff1ai) $roof$ \u4f4d\u5de6\u8fb9\u7d27\u63a5\u7740\u4e00\u4e2a $-1$ \u64cd\u4f5c\uff0c\u6216 ii) $floor$ \u4f4d\u5de6\u8fb9\u7d27\u63a5\u4e00\u4e2a $+1$ \u64cd\u4f5c\uff0c\u4e24\u79cd\u60c5\u51b5. \u4ece\u540e\u7f00\u548c\u7684\u89d2\u5ea6\u6765\u770b\u5462\uff1f\u4e0d\u96be\u8bc1\u660e\uff0c\u60c5\u51b5 i) \u4f1a\u4f7f\u540e\u7f00\u548c $S$ **\u8d85\u8fc7\u201c\u4e0b\u754c\u201d** $lower$\uff0c\u5373 $S_{roof-1}<lower$\uff1b\u60c5\u51b5 ii) \u4f1a\u5bfc\u81f4\u540e\u7f00\u548c**\u8d85\u8fc7\u201c\u4e0a\u754c\u201d**\uff0c$S_{floor-1}>upper$.\n\n\u8fd9\u6837\u770b\u6765\uff0c\u662f\u4e0d\u662f\u6211\u4eec\u6bcf\u6b21\u53ea\u7528\u770b\u540e\u7f00\u548c $S$ \u662f\u5426\u66fe\u8d8a\u8fc7\u4e0a\u4e0b\u754c\uff0c\u4ea6\u5373\u68c0\u9a8c**\u540e\u7f00\u548c\u7684\u6700\u5927\u53ca\u6700\u5c0f\u9879**\u6709\u6ca1\u6709\u8d85\u8fc7 $lower$ \u548c $upper$\uff0c\u5c31\u53ef\u4ee5\u5224\u5b9a\u6709\u65e0\u89e3\u4e86\uff1f\u4e0d\u5168\u5bf9\uff0c\u4f46\u57fa\u672c\u5bf9\u4e86\uff01\u7a0d\u540e\u4f1a\u627e\u51fa\u4f59\u4e0b\u7684\u7ec6\u8282\u95ee\u9898\uff0c\u73b0\u5728\u5148\u770b\u600e\u4e48\u7ef4\u62a4\u4e0a\u8ff0\u4fe1\u606f.\n\n\u9700\u8981\u5199\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5176\uff1a\n\ni) \u7ef4\u62a4\u4e00\u4e2a $0/+1/-1$ \u6784\u6210\u7684\u5e8f\u5217\uff08\u9700\u8981\u7ef4\u62a4\u65e0\u6548\u64cd\u4f5c\uff0c\u5176\u4e0d\u80fd\u6539\u53d8\u97f3\u91cf\uff0c\u6570\u503c\u4e3a $0$\uff09\uff1b\n\nii) \u652f\u6301\u5355\u70b9\u6570\u503c\u66f4\u6539\uff08\u968f\u7740\u679a\u4e3e $T$\uff0c\u64cd\u4f5c\u4ece\u65e0\u6548\u53d8\u4e3a\u6709\u6548\uff0c\u8981\u5c06\u76f8\u5e94\u7684\u9879\u4ece $0$ \u6539\u6210\u8f93\u5165\u7684 $+1/-1$\uff09\uff1b\n\niii) \u652f\u6301\u67e5\u8be2\u6700\u5927/\u6700\u5c0f\u540e\u7f00\u548c.\n\n\u7531\u4e8e\u8be2\u95ee\u7684\u662f\u540e\u7f00\u548c\uff0c\u6211\u4eec\u5e72\u8106\u7ef4\u62a4\u540e\u7f00\u548c\u800c\u975e\u539f\u5e8f\u5217. \u6b64\u65f6 ii) \u7684\u5355\u70b9\u4fee\u6539\u5c31\u53d8\u6210\u4e86\u533a\u95f4\u7684\u6570\u503c\u4fee\u6539\uff0c\u56e0\u6b64\u4f7f\u7528\u7ebf\u6bb5\u6811\u662f\u5f88\u81ea\u7136\u7684\u4e86.\n\n\u6211\u4eec\u8fd8\u8981\u505a\u4e00\u4ef6\u4e8b\uff1a\u6c42\u51fa\u89e3\u4e2d\u7684\u6700\u5927\u521d\u59cb\u97f3\u91cf $V_s$. \u6ce8\u610f\uff0c\u628a\u521d\u59cb\u97f3\u91cf\u8bbe\u5f97\u5c3d\u91cf\u9ad8\uff0c\u76f8\u5f53\u4e8e\u5c3d\u53ef\u80fd\u591a\u5438\u6536 $+1$ \u64cd\u4f5c\u3001\u800c\u5c3d\u91cf\u4e0d\u5438\u6536 $-1$ \u64cd\u4f5c. \u56e0\u6b64\uff1a\n1. \u5982\u679c\u4e00\u4e2a\u5408\u6cd5\u64cd\u4f5c\u5e8f\u5217 $A$ \u7684\u6700\u5c0f\u540e\u7f00\u548c\u5927\u4e8e $lower$\uff0c\u5373\u6ca1\u6709\u78b0\u8fc7\u9876. \u6b64\u65f6\u79c9\u6301\u5c3d\u91cf\u4e0d\u5438\u6536 $-1$ \u64cd\u4f5c\u7684\u6700\u4f18\u539f\u5219\uff0c\u4f1a\u53d1\u73b0\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u80fd\u88ab\u5438\u6536\uff0c$\\max V_s$ \u5c31\u662f\u4ece $V_e$ \u5012\u63a8\u5f97\u5230\u7684\u503c. $\\max V_s = V_e-\\Sigma A_i$.\n2. \u5982\u679c\u4e00\u4e2a\u5408\u6cd5\u64cd\u4f5c\u5e8f\u5217 $A$ \u7684\u6700\u5c0f\u540e\u7f00\u548c\u4e0d\u5927\u4e8e $lower$\uff0c\u5373\u78b0\u8fc7\u9876. \u89c2\u5bdf\u6837\u4f8b 1 \u53d1\u73b0\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06 $V_s$ \u8bbe\u4e3a $V_{max}$\uff0c\u4e14\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e00\u5b9a\u4fdd\u6301\u5408\u6cd5\u6027. $\\max V_s = V_{max}$.\n\n\u8bf7\u6ce8\u610f\u6211\u4eec\u8fd8\u8981\u5728\u540e\u7f00\u548c\u5e8f\u5217 $S$ \u6700\u540e\u8865\u4e00\u4e2a $0$\uff0c\u8fd9\u4e2a\u503c\u59cb\u7ec8\u4e0d\u4fee\u6539\uff0c\u5bf9\u5e94\u7740\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c. \u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\uff1f\u8003\u8651\u4e00\u4e0b $V_e=V_{max}$ \u7684\u8fb9\u754c\u60c5\u51b5\u5373\u53ef.\n\n***\n\u4f46\u6211\u4eec\u5e76\u6ca1\u6709\u505a\u5b8c. \u5982\u679c\u8ba4\u4e3a\u6709\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f\u64cd\u4f5c\u5e8f\u5217\u7684\u6700\u5927\u540e\u7f00\u548c $\\leq upper$ \u4e14\u6700\u5c0f\u540e\u7f00\u548c $\\geq lower$\uff0c\u4f1a\u5728\u4e00\u4e9b\u6570\u636e\u70b9\u4e0a ``WA``.\n\n\u8fd9\u662f\u56e0\u4e3a\u6761\u4ef6\u7ed9\u7d27\u4e86\uff0c\u5b9e\u9645\u4e0a\u540e\u7f00\u548c\u53ef\u4ee5\u7a81\u7834\u8fd9\u4e24\u4e2a\u754c. \u8003\u8651 $V_{max}=5$\uff0c$V_e=3$\uff0c\u4e14\u64cd\u4f5c\u5e8f\u5217\u7684\u4e00\u4e2a\u540e\u7f00\u5982\u4e0b\uff1a\n\n| $A$ | ... | $-$ | $-$ | $-$ | $-$ | $-$ | $-$ | $-$ | $-$ | $-$ | $-$ | $+$ | $+$ | $+$ | $+$ | $+$ | $+$ | $+$ | $-$ | $-$ |  |\n| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n| $S$ | ... | $-5$ | $-4$ | $-3$ | $-2$ | $-1$ | $0$ | $1$ | $2$ | $3$ | $4$ | $5$ | $4$ | $3$ | $2$ | $1$ | $0$ | $-1$ | $-2$ | $-1$ | $0$ |\n| \u4f4d\u7f6e | ... | $19$ | $18$ | $17$ | $16$ | $15$ | $14$ | $13$ | $12$ | $11$ | $10$ | $9$ | $8$ | $7$ | $6$ | $5$ | $4$ | $3$ | $2$ | $1$ | $0$ |\n\n\u5e8f\u5217\u5408\u6cd5\uff0c\u4f46\u540e\u7f00\u548c\u65e2\u7a81\u7834\u8fc7 $lower$ \u4e5f\u7a81\u7834\u8fc7 $upper$. \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u4e2a\u5e8f\u5217\u663e\u7136\u78b0\u8fc7\u9876\uff0c\u6545\u5728 $roof$ \u4f4d\uff08\u4e0a\u9762\u7684 $2$ \u53f7\u4f4d\uff09\u4ee5\u5de6\u80fd**\u65e0\u9650\u5438\u6536** $+1$ \u64cd\u4f5c\uff1b\u4e5f\u663e\u7136\u78b0\u8fc7\u5e95\uff0c\u5728 $floor$ \u4f4d\uff08\u4e0a\u9762\u7684 $9$ \u53f7\u4f4d\uff09\u4ee5\u5de6\u80fd\u65e0\u9650\u5438\u6536 $-1$ \u64cd\u4f5c.\n\n\u518d\u7ed3\u5408\u524d\u6587\u300ci) $roof$ \u4f4d\u5de6\u8fb9\u7d27\u63a5\u7740\u4e00\u4e2a $-1$ \u64cd\u4f5c\uff0c\u6216 ii) $floor$ \u4f4d\u5de6\u8fb9\u7d27\u63a5\u4e00\u4e2a $+1$ \u64cd\u4f5c\uff0c\u5747\u4e0d\u5408\u6cd5\u300d\u548c\u300ci) \u4f1a\u4f7f\u540e\u7f00\u548c $S$ \u8d85\u8fc7\u201c\u4e0b\u754c\u201d $lower$\uff0c\u5373 $S_{roof-1}<lower$\uff1bii) \u4f1a\u5bfc\u81f4\u540e\u7f00\u548c\u8d85\u8fc7\u201c\u4e0a\u754c\u201d\uff0c$S_{floor-1}>upper$\u300d\uff0c\u53ef\u4ee5\u5f97\u51fa\u4ee5\u4e0b\u6027\u8d28\uff1a\n1. \u5408\u6cd5\u5e8f\u5217\u7684 $roof$ \u4f4d\u4ee5\u5de6\u80fd\u6709\u4efb\u610f\u591a\u4e2a $+1$\uff0c$floor$ \u4f4d\u4ee5\u5de6\u80fd\u6709\u4efb\u610f\u591a\u4e2a $-1$.\n2. \u5408\u6cd5\u5e8f\u5217\u7684 $roof$ \u4f4d\u4ee5\u5de6\u4e0d\u80fd\u51fa\u73b0 $S_i<lower$ \u7684\u4f4d\u7f6e\uff0c**\u4f46\u524d\u63d0\u662f\u6b64 $roof$ \u4f4d\u4ee5\u53f3\u6ca1\u6709 $floor$ \u4f4d**\uff0c\u5426\u5219\u8fdd\u53cd\u4e0a\u4e00\u6761\u6027\u8d28\uff1b\u540c\u7406\uff0c$floor$ \u4f4d\u4ee5\u5de6\u4e0d\u80fd\u51fa\u73b0 $S_i>upper$ \u7684\u4f4d\u7f6e\uff0c**\u4f46\u524d\u63d0\u662f\u6b64 $floor$ \u4f4d\u4ee5\u53f3\u6ca1\u6709 $roof$ \u4f4d**.\n\n> \u7ed3\u8bba\uff1a**\u5f53\u5e8f\u5217\u7684\u524d\u7f00\u548c\u7a81\u7834\u4e86 $lower$ \u6216 $upper$ \u65f6**\uff0c\u6027\u8d28 1 \u5bfc\u81f4\u89e3\u4ecd\u53ef\u80fd\u5b58\u5728\uff1b\u6839\u636e\u6027\u8d28 2\uff0c\u53ea\u9700\u591a\u505a\u4e00\u6b65\u68c0\u9a8c\uff1a\u5bf9\u4e8e**\u5148\u9876\u5e8f\u5217**\uff0c\u6709 $roof_0>floor_0$\uff0c**\u68c0\u67e5 $[floor_0,roof_0]$ \u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u65e0\u540e\u7f00\u548c $S_i$ \u5c0f\u4e8e $lower$**\uff08\u6ce8\u610f\u6b64\u65f6 $floor_0$ \u4e0d\u786e\u5b9a\uff0c\u4f46\u5176\u6700\u5927\u4e3a\u4ece\u53f3\u5411\u5de6\u7b2c\u4e00\u4e2a\u4f7f\u5f97 $S_{i_0}=upper$ \u7684\u4e0b\u6807 $i_0$\uff0c\u56e0\u6b64\u53ea\u9700\u68c0\u67e5\u533a\u95f4 $[i_0,roof_0]$ \u7684\u6700\u5927\u503c\uff09\uff0c\u662f\u5219\u65e0\u89e3\uff1b\u540c\u7406\u5bf9\u4e8e**\u5148\u5e95\u5e8f\u5217**\uff0c**\u68c0\u67e5 $[roof_0,floor_0]$ \u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u65e0\u540e\u7f00\u548c $S_i$ \u5927\u4e8e $upper$**\uff0c\u662f\u5219\u65e0\u89e3.\n\n\u4e3a\u6b64\uff0c\u7ebf\u6bb5\u6811\u8fd8\u9700\u8981\u7ef4\u62a4**\u4ece\u53f3\u5411\u5de6\u7b2c\u4e00\u4e2a**\u6743\u503c $\\leq lower$ \u6216 $\\geq upper$ \u7684\u53f6\u8282\u70b9\u4f4d\u7f6e\uff0c\u4e14\u8fd9\u4e24\u4e2a\u4e0d\u7b49\u53f7\u53ef\u4ee5\u6539\u4e3a\u7b49\u53f7. \u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u53ef\u4ee5\u5728 $O(\\log n)$ \u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u53ef\u53c2\u89c1\u4e0b\u9762\u7684\u4ee3\u7801.\n\n***\n```\n#include <bits/stdc++.h>\n\n#define IOS_SPEED std::ios::sync_with_stdio(false)\n\nusing std::cin, std::cout;\nusing std::pair;\nusing std::priority_queue;\nusing std::max, std::min;\n\nconstexpr int INF = 1e9;\n\nstruct stroke{ // \u4e00\u6b21\u64cd\u4f5c\n\tint num, val, gap; // \u64cd\u4f5c\u7f16\u53f7, \u64cd\u4f5c\u6548\u679c, \u64cd\u4f5c\u65f6\u95f4\u5dee\n};\nbool operator <(const stroke &A, const stroke &B){return A.gap>B.gap;}\n\nclass segtree{ // \u7ef4\u62a4\u64cd\u4f5c\u5e8f\u5217\u540e\u7f00\u548c\u7684\u7ebf\u6bb5\u6811\n\tpublic:\n\t\tint left, right;\n\t\tint vmin, vmax, lazy;\n\t\tsegtree *L, *R;\n\t\tstatic int first_roof, first_floor;\n\t\tinline void push_down();\n\t\tvoid create(int lower, int upper, int init);\n\t\tvoid update(int start, int end, int delta);\n\t\tpair<int, int> query(int start, int end);\n\t\tvoid update_roof(int lower);\n\t\tvoid update_floor(int upper);\n\t\tvoid wipe();\n};\n\nint segtree::first_roof = 0; int segtree::first_floor = 0; // \u521d\u59cb\u5316\u4e3a 0, \u8868\u793a\u4e24\u4e2a\u4f4d\u7f6e\u4e0d\u5b58\u5728\n\nvoid segtree::create(int lower, int upper, int init){ // \u6b64 lower, upper \u662f\u533a\u95f4\u8303\u56f4, \u4e0d\u662f\u4e0a\u8ff0\u4e0a\u4e0b\u754c\n\tleft = lower; right = upper;\n\tL = R = nullptr; lazy = 0;\n\tif(left==right){\n\t\tvmin = vmax = init; return;\n\t}\n\tint mid = (left+right)>>1;\n\tauto LT = new segtree; LT->create(lower, mid, init); L = LT;\n\tauto RT = new segtree; RT->create(mid+1, upper, init); R = RT;\n\tvmax = max(L->vmax, R->vmax); vmin = min(L->vmin, R->vmin);\n}\n\ninline void segtree::push_down(){\n\tif(left!=right&&lazy!=0){\n\t\tL->vmax += lazy; R->vmax += lazy;\n\t\tL->vmin += lazy; R->vmin += lazy;\n\t\tL->lazy += lazy; R->lazy += lazy;\n\t\tlazy = 0;\n\t}\n}\n\nvoid segtree::update(int start, int end, int delta){\n\tif(start<=left&&end>=right){\n\t\tvmax += delta; vmin += delta; lazy += delta;\n\t\treturn;\n\t}\n\tif(start>right||end<left) return;\n\tpush_down();\n\tL->update(start, end, delta); R->update(start, end, delta);\n\tvmax = max(L->vmax, R->vmax); vmin = min(L->vmin, R->vmin);\n}\n\npair<int, int> segtree::query(int start, int end){\n\tif(start<=left&&end>=right) return {vmin, vmax};\n\tif(start>right||end<left) return {INF, -INF};\n\tpush_down();\n\tauto [L_min, L_max] = L->query(start, end);\n\tauto [R_min, R_max] = R->query(start, end);\n\treturn {min(L_min, R_min), max(L_max, R_max)};\n}\n\nvoid segtree::update_roof(int lower){\n    if(left==right){\n        if(vmin==lower) first_roof = max(first_roof, left);\n        return;\n    }\n    push_down();\n    if(R->vmin<=lower) R->update_roof(lower);\n    else L->update_roof(lower); // \u5982\u679c\u53f3\u5b50\u6811\u7684\u503c\u4ece\u672a\u8fbe\u5230 lower, first_roof \u53ea\u80fd\u5728\u5de6\u5b50\u6811\n}\n\nvoid segtree::update_floor(int upper){\n    if(left==right){\n        if(vmax==upper) first_floor = max(first_floor, left);\n        return;\n    }\n    push_down();\n    if(R->vmax>=upper) R->update_floor(upper);\n    else L->update_floor(upper); // \u5982\u679c\u53f3\u5b50\u6811\u7684\u503c\u4ece\u672a\u8fbe\u5230 upper, first_floor \u53ea\u80fd\u5728\u5de6\u5b50\u6811\n}\n\nvoid segtree::wipe(){\n\tif(L!=nullptr) L->wipe(); if(R!=nullptr) R->wipe(); delete this;\n}\n\nint strokes, v_max, v_end;\npriority_queue<stroke> ops;\n\npair<int, int> optimal_result(){\n\tint lower = v_end-v_max, upper = v_end;\n\tauto RT = new segtree; RT->create(1, strokes, 0);\n\tint lock_gap = 0, v_start = v_end; // \u5bf9\u5e94\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u89e3\n\tbool cur_valid = false, prev_valid = true;\n\twhile(ops.size()>1){ // \u5faa\u73af\u5230\u53ea\u5269\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u4e3a\u6b62\n\t\tint cur_gap = ops.top().gap;\n\t\twhile(ops.top().gap==cur_gap){ // \u53d6\u51fa\u6240\u6709\u65f6\u95f4\u5dee\u76f8\u540c\u7684\u64cd\u4f5c\n\t\t\tauto [num, val, gap] = ops.top(); ops.pop();\n\t\t\tRT->update(1, num, val); // \u66f4\u65b0\u53f6\u8282\u70b9\u4fe1\u606f\n\t\t}\n\t\tauto [smin, smax] = RT->query(1, strokes); // \u67e5\u8be2\u540e\u7f00\u548c\u6700\u503c\n\t\tif(smin>=lower&&smax<=upper) cur_valid = true; // \u5982\u679c\u540e\u7f00\u548c\u6ca1\u6709\u8d85\u8fc7 lower \u548c upper, \u4e00\u5b9a\u6709\u89e3\n\t\telse{\n\t\t\tRT->first_roof = RT->first_floor = 0;\n\t\t\tRT->update_roof(lower); RT->update_floor(upper);\n\t\t\tif(RT->first_roof==0||RT->first_floor==0) cur_valid = false; // \u5982\u679c\u540e\u7f00\u548c\u8d85\u8fc7\u4e86 lower \u6216 upper, \u9876\u548c\u5e95\u5fc5\u987b\u90fd\u78b0\u8fc7\u624d\u6709\u89e3\n\t\t\telse if(RT->first_roof>RT->first_floor) // \u5148\u9876\u5e8f\u5217\n\t\t\t\tcur_valid = (RT->query(RT->first_floor, RT->first_roof).first>=lower);\n\t\t\telse // \u5148\u5e95\u5e8f\u5217\n\t\t\t\tcur_valid = (RT->query(RT->first_roof, RT->first_floor).second<=upper);\n\t\t}\n\t\tif(!cur_valid){\n\t\t\tif(prev_valid) lock_gap = cur_gap-1;\n\t\t\tprev_valid = cur_valid;\n\t\t}\n\t\telse{\n\t\t\tv_start = (smin<=lower)? v_max: (v_end-RT->query(1, 1).first);\n\t\t\tprev_valid = cur_valid;\n\t\t\tif(ops.size()==1) lock_gap = INF;\n\t\t}\n\t}\n\tRT->wipe();\n\treturn {lock_gap, v_start};\n}\n\nvoid interface(){\n\tcin >> strokes >> v_max >> v_end;\n\tchar sign; int cur_time = 0, prev_time = -1;\n\tfor(int i=0; i<strokes; ++i){\n\t\tcin >> sign >> cur_time;\n\t\tint num = i, val = (sign=='+')? 1: (-1), gap = (prev_time==-1)? INF: (cur_time-prev_time);\n\t\tops.push({num, val, gap});\n\t\tprev_time = cur_time;\n\t}\n\tauto [lock_gap, v_start] = optimal_result();\n\tif(lock_gap==INF) cout << \"infinity\\n\";\n\telse cout << lock_gap << \" \" << v_start << \"\\n\";\n\twhile(!ops.empty()) ops.pop();\n}\n\nint main()\n{\n\tIOS_SPEED;\n\tinterface();\n\treturn 0; \n}\n```\n\n\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$.",
        "postTime": 1657901532,
        "uid": 726246,
        "name": "Blithe_C",
        "ccfLevel": 0,
        "title": "P6520 [CEOI 2010] The MP3 Player \u89e3"
    }
]