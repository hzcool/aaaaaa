[
    {
        "content": "\u66b4\u529b\u505a\u6cd5\u5c31\u662fn\u904dspfa\uff0c\u7136\u540e\u6309\u7167rank\u603c\u4e00\u904d\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u4e0d\u8fc7\u80fd\u5f97\u591a\u5c11\u5206\u6211\u5c31\u4e0d\u77e5\u9053\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u8bd5\u4e00\u4e0borz\uff0c\u6211\u5c31\u4e0d\u4f5c\u4e86\u3002\n\n\n\u6b63\u89e3\u5f53\u7136\u8981\u5bf9\u8fd9\u4e2a\u6c42\u89e3\u65b9\u6848\u8fdb\u884c\u4f18\u5316\u4e86\u554a\u3002\n\n\u600e\u4e48\u4f18\u5316\u5462\uff1forz\n\n\u6ce8\u610f\u5230rank\u4f3c\u4e4e\u975e\u5e38\u5c0f\uff0c\u90a3\u5c31\u5bf9rank\u641e\u70b9\u4e8b\u60c5\u3002\n\n\u4e00\u822c\u90fd\u80fd\u60f3\u5230\u8bb0\u5f55\u70b9x\u5230rank\u4e3ai\u7684\u70b9\u96c6\u7684\u6700\u77ed\u8def\u5f84\uff0c\u4f46\u6211\u4eec\u4e3a\u4e86\u4ee5\u540e\u65b9\u4fbf\u53ef\u4ee5\u6269\u5c55\u4e00\u4e0b\u4e3a x\u5230rank\u5927\u4e8e\u7b49\u4e8ei\u7684\u70b9\u96c6\u7684\u6700\u77ed\u8def\u5f84 \uff0c\u8bbe\u4e3aF[i][x]\u3002\n\n\u8fd9\u6837\u6bcf\u6b21\u6bd4\u8f83u\uff0cv\u5c31\u53ea\u8981\u770b\u4e00\u770bdis(u,v)<F[rank[v]+1][u]\u3002\n\n\u6211\u4eec\u5bf9\u4ed6\u4f18\u5316\u4e00\u4e0borz\u3002\n\n\u4ee5\u8d77\u70b9s\u5f00\u59cb\u627e\u5230\u4e00\u4e2a\u70b9v\uff0c\u8bbev\u4e0d\u5173\u5fc3s\uff0c\u5219dis(s,v)>=F[rank[s]+1][v]\uff1b\n\n\u82e5\u6211\u4eec\u5c1d\u8bd5\u628av\u6254\u8fdb\u961f\u5217\uff0c\u5047\u8bbe\u677e\u5f1b\u5230u\uff0c\n\n\u5219dis(s,u)=dis(s,v)+dis(v,u);\n\nBut dis(s,v)>=F[rank[s]+1][v];\n\nSo dis(s,u)=dis(s,v)+dis(v,u)>=F[rank[s]+1][v]+dis(u,v)>=F[rank[s]+1][u];\n\n\u6240\u4ee5\u6b64\u65f6u\u4e5f\u662f\u4e0d\u5bf9w\u611f\u5174\u8da3\u7684\u70b9\uff0c\u6211\u4eec\u8fd8\u7ed9\u4ed6\u6254\u8fdb\u53bb\u5e72\u561b\u3002\u3002\n\n\u7b54\u6848\u4e0d\u8d85\u8fc730n\uff0c\u590d\u6742\u5ea6\u4e0d\u7b97\u9ad8\u3002\n\n\n\u8fd9\u9053\u9898\u544a\u8bc9\u6211\u4eec\uff1aspfa\u5230\u4e00\u4e2a\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5c31\u4e0d\u8981\u628a\u5b83\u6254\u5230\u961f\u5217\u91cc\u9762\u53bb\u4e86\u561b\u3002\n\n\uff08\u771f\u7406\uff1a\u66b4\u529b\u51fa\u5947\u8ff9\uff09\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\nusing namespace std;\nstruct node{\n    int to;\n    int v;\n};\nvector<node> edge;\nvector<int> G[30010];\nvector<int> o_edge[20];\nint n,m;\nint r[30010];\nint u,v,t;\nint far[20][30010];\nint dis[30010];\nbool vis[30010];\nbool ok[30010];\nint ans;\n\nvoid add_edge(int from,int to,int v){\n    edge.push_back((node){to,v});\n    edge.push_back((node){from,v});\n    int m=edge.size();\n    G[from].push_back(m-2);\n    G[to].push_back(m-1);\n}\n\nvoid o_spfa(int x){\n    memset(vis,false,sizeof(vis));\n    memset(far[x],0x3f,sizeof(far[x]));\n    queue<int> q;\n    for (int i=0;i<o_edge[x].size();++i){\n        far[x][o_edge[x][i]]=0;\n        q.push(o_edge[x][i]);\n    }\n    while (!q.empty()){\n        int now=q.front();\n        q.pop();\n        vis[now]=false;\n        for (int i=0;i<G[now].size();++i){\n            node nxt=edge[G[now][i]];\n            if (far[x][now]+nxt.v<far[x][nxt.to]){\n                far[x][nxt.to]=far[x][now]+nxt.v;\n                if (!vis[nxt.to]){\n                    vis[nxt.to]=true;\n                    q.push(nxt.to);\n                }\n            }\n        }\n    }\n}\n\nvoid wk(int x){\n    for (int i=1;i<=n;++i){\n        if (far[x][i]>far[x+1][i])\n          far[x][i]=far[x+1][i];\n    }\n}\n\nvoid spfa(int x){\n    memset(vis,false,sizeof(vis));\n    memset(dis,0x3f,sizeof(dis));\n    memset(ok,false,sizeof(ok));\n    dis[x]=0;\n    vis[x]=1;\n    queue<int> q; q.push(x);\n    while (!q.empty()){\n        int now=q.front();\n        q.pop();\n        vis[now]=false;\n        if (!ok[now]){\n            ans++;\n            ok[now]=true;\n        }\n        for (int i=0;i<G[now].size();++i){\n            node nxt=edge[G[now][i]];\n            if (dis[nxt.to]>dis[now]+nxt.v){\n                dis[nxt.to]=dis[now]+nxt.v;\n                if (!vis[nxt.to]&&dis[nxt.to]<far[r[x]+1][nxt.to]){\n                    q.push(nxt.to);\n                    vis[nxt.to]=true;\n                }\n            }\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;++i){\n        scanf(\"%d\",&r[i]);\n        o_edge[r[i]].push_back(i);\n    }\n    for (int i=1;i<=m;++i){\n        scanf(\"%d%d%d\",&u,&v,&t);\n        add_edge(u,v,t);\n    }\n    for (int i=1;i<=10;++i) o_spfa(i);    \n    for (int i=9;i>=1;--i) wk(i); \n    for (int i=1;i<=n;++i) spfa(i);\n    cout<<ans;\n    return 0;\n}\n```\n\u4ece\u6b64\u4f60\u53ef\u4ee5\u5411\u522b\u4eba\u70ab\u8000\u8bf4\u6211\u7528n\u904dspfa\u8fd9\u79cd\u5927\u66b4\u529b\u8fd8\u80fda\u9898233\n",
        "postTime": 1504624048,
        "uid": 14192,
        "name": "lonlyn",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1261 \u3010\u670d\u52a1\u5668\u50a8\u5b58\u4fe1\u606f\u95ee\u9898\u3011"
    },
    {
        "content": "## \u95f2\u8bdd\n\u770b\u5230\u8fd9\u79cd\u7d2b\u8272\u56fe\u8bba\u9898\uff0c\u5148\u522b\u7740\u6025\u601d\u8003\uff0c~~\u76f4\u63a5\u66b4\u529b\u3002~~\n\n\u5148\u8d34\u4e0a\u6211\u7684 $n$ \u904d Dijkstra \u7684\u66b4\u529b\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e4+100,M=3e5+100;\nint n,m,r[N],head[N],dis[N],ans,c;\nbool vis[N];\nvector<int>G[21];\nstruct xzh{\n    int next,to,w;\n}edge[M];\nstruct hh{\n    int id,val;\n    bool operator <(const hh&a)const {\n        return a.val<val;\n    }\n};\nvoid add(int u,int v,int w){\n    c++;\n    edge[c].next=head[u];\n    edge[c].to=v;\n    edge[c].w=w;\n    head[u]=c;\n}\nvoid spfa(int s){\n    for(int i=1;i<=n;i++)dis[i]=1e9,vis[i]=false;\n    priority_queue<hh>q;\n    q.push({s,0});\n    dis[s]=0;\n    while(!q.empty()){\n        int now=q.top().id;\n        q.pop();\n        if(vis[now])continue;\n        vis[now]=true;\n        for(int i=head[now];i;i=edge[i].next){\n            int v=edge[i].to;\n            if(dis[now]+edge[i].w<dis[v]){\n                dis[v]=dis[now]+edge[i].w;\n                q.push({v,dis[v]});\n            }\n        }\n    }\n    int min_=1e9;\n    for(int i=10;i>=1;i--){\n        for(int j=0;j<G[i].size();j++){\n            int now=G[i][j];\n            if(min_>dis[now])ans++;\n        }\n        for(int j=0;j<G[i].size();j++){\n            int now=G[i][j];\n            min_=min(min_,dis[now]);\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&r[i]);\n        G[r[i]].push_back(i);\n    }\n    for(int i=1;i<=m;i++){\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w);\n        add(u,v,w);add(v,u,w);\n    }\n    for(int i=1;i<=n;i++)spfa(i);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u7adf\u7136\u6709 $50pts$\uff0c~~\u4ee5\u540e\u5c31\u6253\u66b4\u529b\u7b97\u4e86\u3002~~\n## Solution\n\u53c2\u8003\u4e86\u4e00\u4e0b\u5176\u4ed6 dalao \u7684\u9898\u89e3\uff0c\u8bbe $f_{rank,s}$ \u8868\u793a $s$ \u5230 \u91cd\u8981\u7a0b\u5ea6\u5927\u4e8e\u7b49\u4e8e $rank$ \u7684\u70b9\u96c6\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5982\u679c $dis_{s,u}\\geq f_{rank_s+1,u}$ \u5c31\u4e0d\u5408\u6cd5\uff0c \u518d\u5f80\u540e\u9762\u63a8\uff0c\u5047\u8bbe $u$ \u8981\u5bf9 $v$ \u8fdb\u884c\u677e\u5f1b\uff0c\u90a3\u4e48 $dis_{s,v}=dis_{s,u}+dis_{u,v}\\geq f_{rank_s+1,u}+dis_{u,v}\\geq f_{rank_s+1,v}$ \u88ab\u63a8\u4e86\u51fa\u6765\uff0c\u6240\u4ee5 $u$ \u4e0d\u5408\u6cd5\uff0c\u90a3\u4e48\u5b83\u8981\u677e\u5f1b\u7684\u70b9\u4e5f\u4e0d\u5408\u6cd5\uff0c\u90a3\u5c31\u6ca1\u6709\u5fc5\u8981\u5c06 $u$ \u653e\u5165\u961f\u5217\u91cc\u4e86\u3002\n\n\u53ef\u4ee5\u5148\u628a $f$ \u6570\u7ec4\u9884\u5904\u7406\u51fa\u6765\uff0c\u53cd\u6b63 $rank$ \u6700\u591a\u4e3a $10$\uff0c\u518d\u8dd1\u4e00\u904d Dijkstra \u7edf\u8ba1\u7b54\u6848\u3002\n\n\u6700\u540e\u8d34\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e4+100,M=3e5+100,R=21;\nint n,m,r[N],head[N],dis[N],ans,c,f[N][R];\nbool vis[N];\nvector<int>G[R];\nstruct xzh{\n    int next,to,w;\n}edge[M];\nstruct hh{\n    int id,val;\n    bool operator <(const hh&a)const {\n        return a.val<val;\n    }\n};\nvoid add(int u,int v,int w){\n    c++;\n    edge[c].next=head[u];\n    edge[c].to=v;\n    edge[c].w=w;\n    head[u]=c;\n}\nvoid predij(int r){\n    for(int i=1;i<=n;i++)vis[i]=false;\n    priority_queue<hh>q;\n    for(int i=0;i<G[r].size();i++){\n        int now=G[r][i];\n        f[now][r]=0;\n        q.push({now,0});\n    }\n    while(!q.empty()){\n        int now=q.top().id;\n        q.pop();\n        if(vis[now])continue;\n        vis[now]=true;\n        for(int i=head[now];i;i=edge[i].next){\n            int v=edge[i].to;\n            if(f[now][r]+edge[i].w<f[v][r]){\n                f[v][r]=f[now][r]+edge[i].w;\n                q.push({v,f[v][r]});\n            }\n        }\n    }\n}\nvoid dij(int s){\n    for(int i=1;i<=n;i++)dis[i]=1e9,vis[i]=false;\n    priority_queue<hh>q;\n    q.push({s,0});\n    dis[s]=0;\n    while(!q.empty()){\n        int now=q.top().id;\n        q.pop();\n        if(vis[now])continue;\n        ans++;\n        vis[now]=true;\n        for(int i=head[now];i;i=edge[i].next){\n            int v=edge[i].to;\n            if(dis[now]+edge[i].w<dis[v]){\n                dis[v]=dis[now]+edge[i].w;\n                if(dis[now]+edge[i].w<f[v][r[s]+1]&&dis[now]+edge[i].w<f[v][r[s]+1]){\n                    dis[v]=dis[now]+edge[i].w;\n                    f[v][r[s]]=min(f[v][r[s]],dis[now]+edge[i].w);\n                    q.push({v,dis[v]});\n                }\n                \n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&r[i]);\n        G[r[i]].push_back(i);\n    }\n    for(int i=11;i>=1;i--)\n        for(int j=1;j<=n;j++)\n            f[j][i]=1e9;  \n    for(int i=1;i<=m;i++){\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w);\n        add(u,v,w);add(v,u,w);\n    }\n    for(int i=10;i>=1;i--){\n        predij(i);\n        if(i!=10)for(int j=1;j<=n;j++)f[j][i]=min(f[j][i],f[j][i+1]);\n    }\n    for(int i=1;i<=n;i++)dij(i);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1668089423,
        "uid": 327295,
        "name": "GalwayGirl",
        "ccfLevel": 6,
        "title": "P1261\u53c8\u662fDijkstra\u795e\u5947\u4f18\u5316"
    },
    {
        "content": "# \u670d\u52a1\u5668\u50a8\u5b58\u4fe1\u606f\u95ee\u9898\n\n### \u5148\u60f3\u66b4\u529b\n\n\u8bbe**d[i, x]**\u8868\u793a**rank>=i**\u7684\u6240\u6709\u70b9\u5230**x**\u7684\u8ddd\u79bb\u6700\u5c0f\u503c\n\n\u6309\u7167**rank**\u4ece\u5927\u5230\u5c0f\u5bf9\u6bcf\u4e2a\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u5982\u679c**dis[y]<d[r[s]+1,y]**\u5219\u53ef\u4ee5\u7edf\u8ba1\u8fdb\u7b54\u6848\uff0c\u7528**dis[y]**\u66f4\u65b0**d[r[s],y]**\n\n### \u4f18\u5316\n\n\u6700\u5bb9\u6613\u60f3\u5230\u7684\u4f18\u5316\u5c31\u662f\u53bb\u9664\u4e0d\u5fc5\u8981\u7684\u66f4\u65b0\n\n\u8bbe\u5b58\u5728\u4e00\u6761\u8fb9**x y v**\uff0c\u6b63\u5728\u7528**x**\u8282\u70b9\u66f4\u65b0\u5176\u5b83\u8282\u70b9\u4e14**dis[x]>=d[r[s]+1,x]**\uff0c\u90a3\u4e48**dis[x]+v>=d[r[s]+1,y]**\u4e00\u5b9a\u6210\u7acb\uff0c\u56e0\u4e3a\u5728**rank>r[s]**\u7684\u67d0\u6b21\u66f4\u65b0\u4e2d**dis[y]**\u53ef\u4ee5\u4ece**dis[x]+v**\u66f4\u65b0**d[r[s]+1,y]+v<=d[r[s]+1,x]**\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u66f4\u65b0**dis[x]>=d[r[s]+1,x]**\u7684\u8282\u70b9\uff0c\u6700\u540e\u7b54\u6848\u5c31\u662f\u6bcf\u6b21\u66f4\u65b0\u7684\u8282\u70b9\u6570\u4e4b\u548c\n\n### \u4ee3\u7801\uff08\u6ca1\u6709\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\uff0c\u8dd1\u5f97\u6bd4\u8f83\u6162\uff0c\u7a7a\u95f4\u6bd4\u8f83\u5927\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int gi() {\n    register int x=0,op=1,c;\n    while(c=getchar(),c<'0'||c>'9')if(c=='-')op=-op;\n    x=c^48;\n    while(c=getchar(),c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48);\n    return x*op;\n}\nint head[30001], nxt[300001], ver[300001], val[300001], tot = 1;\nvoid add(int x, int y, int z) {\n\tver[++ tot] = y, val[tot] = z, nxt[tot] = head[x], head[x] = tot;\n\tver[++ tot] = x, val[tot] = z, nxt[tot] = head[y], head[y] = tot;\n}\nint n, m;\nint r[30001];\nint d[12][30001];\npriority_queue<pair<int, int> >q;\nint dis[30001];\nbool v[30001];\nint ans = 0;\nvoid dij(int s) {\n\tmemset(dis, 0x7f, sizeof(dis));\n\tmemset(v, 0, sizeof(v));\n\tdis[s] = 0;\n\tq.push(make_pair(0, s));\n\tint x;\n\twhile(! q.empty()) {\n\t\tx = q.top().second;\n\t\tq.pop();\n\t\tif(v[x])continue;\n\t\tans ++ ;\n\t\tv[x] = 1;\n\t\tfor(int i = head[x], y; i; i = nxt[i])\n\t\t\tif(! v[ver[i]] && dis[y = ver[i]] > dis[x] + val[i] && dis[x] + val[i] < d[r[s] + 1][ver[i]]) {\n\t\t\t\tdis[y] = dis[x] + val[i];\n\t\t\t\td[r[s]][y] = min(dis[y], d[r[s]][y]);\n\t\t\t\tq.push(make_pair(- dis[y], y));\n\t\t\t}\n\t}\n}\nint main() {\n\tn = gi(), m = gi();\n\tfor(int i = 1; i <= n; i ++)\n\t\tr[i] = gi();\n\tfor(int i = 1, x, y; i <= m; i ++)\n\t\tx = gi(), y = gi(), add(x, y, gi());\n\tmemset(d, 0x7f, sizeof(d));\n\tfor(int i = 10; i; i --) {\n\t\tfor(int j = 1; j <= n; j ++)\n\t\t\tif(i == r[j])d[i][j] = 0;\n\t\tfor(int j = 1; j <= n; j ++)\n\t\t\tif(r[j] == i)dij(j);\n\t\tmemcpy(d[i-1], d[i], sizeof(d[i]));\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1540459099,
        "uid": 70310,
        "name": "wuzhaoxin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1261 \u3010\u670d\u52a1\u5668\u50a8\u5b58\u4fe1\u606f\u95ee\u9898\u3011"
    },
    {
        "content": "\u9898\u610f\u7b80\u8ff0\uff1a\u4e00\u4e2a\u8ba1\u7b97\u673a $s$ \u662f\u5426\u5173\u6ce8\u53e6\u4e00\u4e2a\u8ba1\u7b97\u673a $t$ \u89c4\u5219\u5982\u4e0b\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e0d\u5b58\u5728\u8ba1\u7b97\u673a $x$ \u7684\u7b49\u7ea7 $rank[x] > rand[t]$ \u4e14 $s$ \u5230 $t$ \u7684\u8ddd\u79bb\u5c0f\u4e8e $s$ \u5230 $x$ \u7684\u8ddd\u79bb\uff0c\u5373 $dis_{s,t} < dis_{s,x}$,\u5176\u4e2d $d$ \u8868\u793a\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u3002\u5982\u679c\u4e00\u4e2a\u8ba1\u7b97\u673a\u5173\u6ce8\u53e6\u4e00\u4e2a\u8ba1\u7b97\u673a\uff0c\u5219\u8fd9\u4e2a\u8ba1\u7b97\u673a\u7684\u50a8\u5b58\u91cf\u5c31\u4f1a $+1$\uff0c\u8bbe\u7b2c $i$ \u4e2a\u8ba1\u7b97\u673a\u50a8\u5b58\u91cf\u4e3a $num[i]$ \uff0c\u95ee\u6240\u6709\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u91cf\u603b\u548c\uff0c\u5373 $\\sum_{i=1}^{n}num[i]$ \u662f\u591a\u5c11\u3002\n\n\u601d\u8def\u89e3\u6790\uff1a\u8fd9\u9053\u9898\u66b4\u529b\u80af\u5b9a\u8c01\u90fd\u80fd\u60f3\u51fa\u6765\uff0c\u5c31\u662f $n$ \u904d $spfa$ \u786c\u6765\u5373\u53ef\u3002\u867d\u7136\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\u80af\u5b9a\u4f1a\u51c9\u51c9\u7684\uff0c\u4f46\u662f\u6b63\u89e3\u6c38\u8fdc\u662f\u5c06\u4f18\u5316\u540e\u7684\u66b4\u529b\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u628a\u66b4\u529b\u7684\u601d\u8def\u89e3\u91ca\u4e00\u4e0b\u3002\n\n\u66b4\u529b\u89e3\u6cd5\uff1a\u53ef\u4ee5 $n$ \u904d $spfa$ \u66b4\u529b\u521d\u59cb\u5316\u51fa\u6765\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb $dis_{x,y}$\uff0c\u7136\u540e\u679a\u4e3e\u4e24\u4e2a\u8ba1\u7b97\u673a $A,B$\uff0c\u770b\u770b\u662f\u5426\u6709\u5173\u6ce8\u5173\u7cfb\uff0c\u5982\u679c\u6709\uff0c\u5c31\u5c06\u7edf\u8ba1\u7684\u7b54\u6848\u52a0\u4e0a $1$\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u7edf\u8ba1\u7684\u7b54\u6848\u3002\n\n\u4f18\u5316\u66b4\u529b(\u6b63\u89e3)\uff1a\u89c2\u5bdf\u8fd9\u9053\u9898\uff0c\u552f\u4e00\u4e0d\u5bf9\u52b2\u7684\u5730\u65b9\u5c31\u662f\u7b49\u7ea7\u6570\uff0c\u5373 $rank[x]$ \u662f\u975e\u5e38\u5c0f\u7684\u3002\u6240\u4ee5\u6b63\u89e3\u80af\u5b9a\u8981\u5bf9 $rank$ \u8fdb\u884c\u5904\u7406\u3002\u6240\u4ee5\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u6570\u7ec4 $d$,$d[rank][x]$ \u8868\u793a\u79bb\u70b9 $x$ \u6700\u8fd1\u5e76\u4e14\u7684\u5176\u7b49\u7ea7\u5927\u4e8e\u7b49\u4e8e $rank$ \u7684\u70b9\u8ddd\u79bb $x$ \u7684\u8ddd\u79bb\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u6bcf\u6b21\u5224\u65ad\u4e24\u4e2a\u70b9 $x,y$ \u662f\u5426\u6709\u5173\u6ce8\u7684\u5173\u7cfb\u5c31\u53ea\u8981\u5224\u65ad\u662f\u5426\u6ee1\u8db3 $dis[x][y] < d[rand[y]+1][x]$ \u5c31\u884c\u4e86\u3002\u7136\u800c\u600e\u4e48\u4f18\u5316\u5462\uff1f\u4e4b\u524d\u7684 $spfa$ \u53ef\u4ee5\u7ed9\u6211\u4eec\u4e00\u4e9b\u542f\u793a\uff0c\u4e4b\u524d\u7684 $spfa$ \u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5c31\u4e0d\u4f1a\u5165\u961f\uff0c\u8fd9\u9053\u9898\u6211\u4eec\u80fd\u5426\u4e5f\u8bd5\u4e00\u8bd5\u8ba9\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u5c31\u4e0d\u5165\u961f\u4e86\u5462\uff1f\u6211\u4eec\u8bbe\u76ee\u524d\u7684\u8d77\u70b9\u662f $s$ ,\u73b0\u5728\u5df2\u7ecf\u904d\u5386\u5230\u4e86\u70b9 $x$,\u4e14\u70b9 $x$ \u5e76\u4e0d\u5173\u6ce8 $s$\uff0c\u800c\u6211\u4eec\u6b63\u8981\u677e\u5f1b $y$\uff0c\u5219\u6211\u4eec\u80fd\u591f\u5f97\u5230\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u73b0\u5728\u770b\u4e00\u770b\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u80fd\u63a8\u51fa\u4ec0\u4e48\uff1a\n\n$$\\begin{cases}\ndis[s][y]=dis[s][x]+dis[x][y] \\\\\ndis[s][x] \\geq d[rank[s]+1][x]\n\\end{cases}$$\n\n$$\\because dis[s][y]=dis[s][x]+dis[x][y] $$\n$$\\because dis[s][x] \\geq d[rank[s]+1][x]$$\n$$\\therefore dis[s][y] \\geq d[rank[s]+1][x]+dis[x][y]$$\n$$\\therefore dis[s][y] \\geq d[rank[s]+1][y]$$\n\n\u6240\u4ee5\u53ef\u4ee5\u5f97\u51fa\u5f53\u4e00\u4e2a\u8ba1\u7b97\u673a $x$ \u4e0d\u5173\u6ce8 $s$ \u65f6\uff0c\u5c31\u4e0d\u7528\u4ece $x$ \u518d\u6269\u5c55\u4e86\uff0c\u56e0\u4e3a\u6269\u5c55\u5b8c\u4e86\u4e5f\u4e0d\u4f1a\u5173\u6ce8\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u4f18\u5316\uff0c\u90a3\u5c31\u662f\u5982\u679c\u4e00\u4e2a\u70b9 $x$ \u4e0d\u5173\u6ce8\u8d77\u70b9 $s$ \u90a3\u4e48\u5b83\u5c31\u4e0d\u7528\u8fdb\u961f\u5217\u4e86\u3002\n\n\u6240\u4ee5\u6b63\u89e3\u5c31\u6709\u4e86\u4ee5\u4e0b\u6b65\u9aa4\uff1a\n\n$1.$\u8bfb\u5165\u5efa\u56fe\n\n$2.$\u5148\u8fdb\u884c $10$ \u904d $spfa$ \u521d\u59cb\u5316\u51fa\u6765 $d$ \u6570\u7ec4\u3002\n\n$3.$\u518d\u8dd1\u4e00\u904d\u7528 $10\\times n$ \u8dd1\u4e00\u904d\u5c06 $d$ \u6570\u7ec4\u987a\u5ef6\u4e0b\u6765\u3002\n\n$4.$\u7136\u540e\u518d\u8dd1 $n$ \u904d\u4f18\u5316\u540e\u7684 $spfa$ ,\u7ea6\u7528\u65f6 $10\\times n$\u3002\n\n$5.$\u6700\u540e\u8f93\u51fa\u7b54\u6848\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=3e4+10;\nconst int MR=NR*5;\nint n,m;\nint a[NR];\nint ans;\nint to[MR<<1],nxt[MR<<1],val[MR<<1];\nint head[NR];\nint tot=1;\nvoid add(int x,int y,int z)\n{\n\tto[tot]=y;\n\tval[tot]=z;\n\tnxt[tot]=head[x];\n\thead[x]=tot++;\t\n}\nint d[15][MR];\nbool vis[NR];\nvoid spfa1(int x)\n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(d[x],0x3f,sizeof(d[x]));\n\tqueue<int> q;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i]==x)\n\t\t{\n\t\t\td[x][i]=0;\n\t\t\tq.push(i);\n\t\t}\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();\n\t\tq.pop();vis[now]=0;\n\t\tfor(int i=head[now];i;i=nxt[i])\n\t\t{\n\t\t\tint y=to[i];\n\t\t\tif(d[x][now]+val[i]<d[x][y])\n\t\t\t{\n\t\t\t\td[x][y]=d[x][now]+val[i];\n\t\t\t\tif(!vis[y])\n\t\t\t\t{\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t\tq.push(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nbool suc[NR];\nint dis[NR];\nvoid spfa2(int s)\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(suc,0,sizeof(suc));\n\tqueue<int> q;vis[s]=1;\n\tdis[s]=0;q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();vis[x]=0;\n\t\tif(!suc[x])\n\t\t{\n\t\t\tsuc[x]=1;\n\t\t\tans++;\n\t\t}\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t{\n\t\t\tint y=to[i];\n\t\t\tif(dis[y]>dis[x]+val[i])\n\t\t\t{\n\t\t\t\t\n\t\t\t\tdis[y]=dis[x]+val[i];\n\t\t\t\tif(!vis[y]&&dis[y]<d[a[s]+1][y])\n\t\t\t\t{\n\t\t\t\t\tq.push(y);\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint main()\n{\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=1;i<=m;i++)//\u6b65\u9aa41 \n\t{\n\t\tint x=read(),y=read(),z=read();\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tfor(int i=1;i<=10;i++) spfa1(i);//\u6b65\u9aa42 \n\tfor(int i=9;i>=1;i--)//\u6b65\u9aa43 \n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\td[i][j]=min(d[i][j],d[i+1][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) spfa2(i);//\u6b65\u9aa44 \n\tprintf(\"%d\",ans);//\u6b65\u9aa45\n\treturn 0;\n}\n\n```\n",
        "postTime": 1586701601,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "P1261 \u670d\u52a1\u5668\u50a8\u5b58\u4fe1\u606f\u95ee\u9898"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\uff1a\n\u9898\u76ee\u94fe\u63a5\uff1a[https://www.luogu.org/problemnew/show/P1261](https://www.luogu.org/problemnew/show/P1261)\n\n`Byteland`\u738b\u56fd\u51c6\u5907\u5728\u5404\u670d\u52a1\u5668\u95f4\u5efa\u7acb\u5927\u578b\u7f51\u7edc\u5e76\u63d0\u4f9b\u591a\u79cd\u670d\u52a1\u3002\n\n\u7f51\u7edc\u7531$n$\u53f0\u670d\u52a1\u5668\u7ec4\u6210\uff0c\u7528\u53cc\u5411\u7684\u7ebf\u8fde\u63a5\u3002\u4e24\u53f0\u670d\u52a1\u5668\u4e4b\u95f4\u6700\u591a\u53ea\u80fd\u6709\u4e00\u6761\u7ebf\u76f4\u63a5\u8fde\u63a5\uff0c\u540c\u65f6\uff0c\u6bcf\u53f0\u670d\u52a1\u5668\u6700\u591a\u53ea\u80fd\u548c10\u53f0\u670d\u52a1\u5668\u76f4\u63a5\u8fde\u63a5\uff0c\u4f46\u662f\u4efb\u610f\u4e24\u53f0\u670d\u52a1\u5668\u95f4\u5fc5\u7136\u5b58\u5728\u4e00\u6761\u8def\u5f84\u5c06\u5b83\u4eec\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u6bcf\u6761\u4f20\u8f93\u7ebf\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u4f20\u8f93\u7684\u901f\u5ea6\u3002\u03b4(V, W)\u8868\u793a\u670d\u52a1\u5668$V$\u548c$W$\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u4e14\u5bf9\u4efb\u610f\u7684$V$\u6709:$\u03b4$ $(V, V)$ $\uff1d$ $0$\u3002\n\n\u6709\u4e9b\u670d\u52a1\u5668\u6bd4\u522b\u7684\u670d\u52a1\u5668\u63d0\u4f9b\u66f4\u591a\u7684\u670d\u52a1\uff0c\u5b83\u4eec\u7684\u91cd\u8981\u7a0b\u5ea6\u8981\u9ad8\u4e00\u4e9b\u3002\u6211\u4eec\u7528$r(V)$\u8868\u793a\u670d\u52a1\u5668V\u7684\u91cd\u8981\u7a0b\u5ea6$(rank)$\u3002$rank$\u8d8a\u9ad8\u7684\u670d\u52a1\u5668\u8d8a\u91cd\u8981\u3002\n\n\u6bcf\u53f0\u670d\u52a1\u5668\u90fd\u4f1a\u5b58\u50a8\u5b83\u9644\u8fd1\u7684\u670d\u52a1\u5668\u7684\u4fe1\u606f\u3002\u5f53\u7136\uff0c\u4e0d\u662f\u6240\u6709\u670d\u52a1\u5668\u7684\u4fe1\u606f\u90fd\u5b58\uff0c\u53ea\u6709\u611f\u5174\u8da3\u7684\u670d\u52a1\u5668\u4fe1\u606f\u624d\u4f1a\u88ab\u5b58\u50a8\u3002\u670d\u52a1\u5668$V$\u5bf9\u670d\u52a1\u5668$W$\u611f\u5174\u8da3\u662f\u6307\uff0c\u4e0d\u5b58\u5728\u670d\u52a1\u5668$U$\u6ee1\u8db3:\n$r(U)>r(W)$\u4e14$\u03b4(V, U)<=\u03b4(V, W)$\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\u6765\u8bf4\uff0c\u6240\u6709\u5177\u6709\u6700\u9ad8$rank$\u7684\u670d\u52a1\u5668\u90fd\u4f1a\u88ab\u522b\u7684\u670d\u52a1\u5668\u611f\u5174\u8da3\u3002\u5982\u679cV\u662f\u4e00\u53f0\u5177\u6709\u6700\u9ad8$rank$\u7684\u670d\u52a1\u5668\uff0c\u7531\u4e8e$\u03b4$ $(V, V)$ $\uff1d$ $0$\uff0c\u6240\u4ee5V\u53ea\u5bf9\u5177\u6709\u6700\u9ad8$rank$\u7684\u670d\u52a1\u5668\u611f\u5174\u8da3\u3002\u6211\u4eec\u5b9a\u4e49$B(V)$\u4e3a$V$\u611f\u5174\u8da3\u7684\u670d\u52a1\u5668\u7684\u96c6\u5408\u3002\n\n\u6211\u4eec\u5e0c\u671b\u8ba1\u7b97\u6240\u6709\u670d\u52a1\u5668\u50a8\u5b58\u7684\u4fe1\u606f\u91cf\uff0c\u5373\u6240\u6709\u670d\u52a1\u5668\u7684$|B(V)|$\u4e4b\u548c\u3002Byteland\u738b\u56fd\u5e76\u4e0d\u5e0c\u671b\u5b58\u50a8\u5927\u91cf\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6240\u6709\u670d\u52a1\u5668\u5b58\u50a8\u7684\u6570\u636e\u91cf$(|B(V)|$\u4e4b\u548c$)$\u4e0d\u4f1a\u8d85\u8fc7$30n$\u3002\n\u4f60\u7684\u4efb\u52a1\u662f\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8bfb\u5165`Byteland`\u738b\u56fd\u7684\u7f51\u7edc\u5206\u5e03\uff0c\u8ba1\u7b97\u6240\u6709\u670d\u52a1\u5668\u5b58\u50a8\u7684\u6570\u636e\u91cf\u3002\n\n### \u601d\u8def\uff1a\n\u663e\u7136\u66b4\u529b\u505a\u6cd5\u5c31\u662f\u8dd1$n $\u904d\u5355\u5143\u6700\u77ed\u8def\u3002\n\n\u8003\u8651\u5230\u7b54\u6848\u4e0d\u4f1a\u592a\u5927\uff08\u6240\u6709\u670d\u52a1\u5668\u5b58\u50a8\u7684\u6570\u636e\u91cf$(\u2223 B ( V ) \u2223 |B(V)|\u2223B(V)\u2223$\u4e4b\u548c$)$\u4e0d\u4f1a\u8d85\u8fc7$30 n$ )\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5bf9\u66b4\u529b\u7b97\u6cd5\u4f18\u5316\u3002\n\n\u8bbe$f [ x ] [ i ]$ $f[x][i]f[x][i]$\u8868\u793a\u8ddd\u79bb\u70b9$x$\u6700\u8fd1\u7684$r a n k \u2265 i$ \u7684\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u5728\u8dd1\u70b9$S$\u7684\u6700\u77ed\u8def\u65f6\uff0c\u6700\u77ed\u8def\u8dd1\u5230\u70b9$u$\uff0c\u63a5\u4e0b\u6765\u8981\u8f6c\u79fb\u5230\u70b9$v$ \uff0c\u4f46\u662f\u6709$d i s $ $[ S ]$ $[ v ]$ &lt;$ f [ v ]$ $[ r a n k [ S ] + 1 ]$ $dis$ $[S]$ $[v]$ &lt;$f[v]$ $[rank[S]+1]$ $dis[S][v]$ $<$ $f[v][rank[S]+1]$\uff0c\u90a3\u4e48\u5c31\u6709:\n\n$d i s [ S , v ]$ = $d i s [ S , u ]$ $+$ $d i s [ v , u ] $ $\u2265$ $ f [ r a n k [ S ] + 1 ]$ $[ v ]$ $+$ $d i s [ u , v ] $ $\u2265$ $ f [ r a n k [ S ] + 1 ]$ $ [ u ] $\n\n\u6240\u4ee5\u8fd9\u6837\u663e\u7136\u4e0d\u4f1a\u66f4\u65b0\u7b54\u6848\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6839\u672c\u4e0d\u5fc5\u628a$v$\u6254\u8fdb\uff08\u4f18\u5148\uff09\u961f\u5217\u91cc\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n### \u4ee3\u7801\uff1a\n```\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#define mp make_pair\nusing namespace std;\n\nconst int N=30010;\nint n,m,tot,ans,rank[N],f[N][15],dis[N],head[N];\nbool vis[N],flag[N];\nqueue<int> r[15];\n\nstruct edge\n{\n    int next,to,dis;\n}e[N*10];\n\nvoid add(int from,int to,int dis)\n{\n    e[++tot].to=to;\n    e[tot].dis=dis;\n    e[tot].next=head[from];\n    head[from]=tot;\n}\n\nvoid dij_rank(int rk)\n{\n    memset(vis,0,sizeof(vis));\n    priority_queue<pair<int,int> > q;\n    while (r[rk].size())\n    {\n        int x=r[rk].front();\n        f[x][rk]=0;\n        q.push(mp(0,x));\n        r[rk].pop();\n    }\n    while (q.size())\n    {\n        int u=q.top().second,v;\n        q.pop();\n        if (vis[u]) continue;\n        vis[u]=1;\n        for (int i=head[u];~i;i=e[i].next)\n        {\n            v=e[i].to;\n            if (f[v][rk]>f[u][rk]+e[i].dis)\n            {\n                f[v][rk]=f[u][rk]+e[i].dis;\n                q.push(mp(-f[v][rk],v));\n            }\n        }\n    }\n}\n\nvoid dij(int S)\n{\n    memset(vis,0,sizeof(vis));\n    memset(dis,0x3f3f3f3f,sizeof(dis));\n    memset(flag,0,sizeof(flag));\n    priority_queue<pair<int,int> > q;\n    q.push(mp(0,S));\n    dis[S]=0;\n    while (q.size())\n    {\n        int u=q.top().second,v;\n        if (!flag[u])\n        {\n            flag[u]=1;\n            ans++;\n        }\n        q.pop();\n        if (vis[u]) continue;\n        vis[u]=1;\n        for (int i=head[u];~i;i=e[i].next)\n        {\n            v=e[i].to;\n            if (dis[v]>dis[u]+e[i].dis)\n            {\n                dis[v]=dis[u]+e[i].dis;\n                if (dis[v]<f[v][rank[S]+1])\n                    q.push(mp(-dis[v],v));\n            }\n        }\n    }\n}\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n    memset(f,0x3f3f3f3f,sizeof(f));\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&rank[i]);\n        r[rank[i]].push(i);\n    } \n    for (int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z);\n        add(y,x,z);\n    }\n    for (int i=10;i>=1;i--)\n    {\n        dij_rank(i);\n        if (i<10)\t\n            for (int j=1;j<=n;j++)\n                if (f[j][i]>f[j][i+1]) f[j][i]=f[j][i+1];\n    }\n    for (int i=1;i<=n;++i)\n    \tdij(i);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1608284146,
        "uid": 227049,
        "name": "\u9f9a\u7956\u8c6a\u66fe\u7528\u53f7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1261 \u3010\u670d\u52a1\u5668\u50a8\u5b58\u4fe1\u606f\u95ee\u9898\u3011"
    }
]