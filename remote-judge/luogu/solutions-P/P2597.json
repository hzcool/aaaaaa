[
    {
        "content": "#  P2597[\u707e\u96be]\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/llzzxx712/solution-p2597)\n\n**2020.9.18 Update:\u4fee\u6539\u4e86\u4ee3\u7801\u91cc\u7684\u5165\u961f\u4e00\u4e2a\u5c0f bug**\n\n## \u9898\u76ee\u7b80\u8ff0\n- \u8f93\u5165\u4e00\u4e2a\u6709\u5411\u68ee\u6797\n- \u707e\u96be\u503c\uff1a\u5728\u4e00\u4e2a\u8282\u70b9\u88ab\u5220\u53bb\u540e\u4ee5\u5b83\u4e3a\u6839\u4ece\u4e0a\u5230\u4e0b\u9010\u6b65\u5220\u53bb\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u6700\u7ec8\u88ab\u5220\u53bb\u7684\u70b9\u7684\u6570\u91cf\u5373\u5176\u707e\u96be\u503c\n- \u4f60\u9700\u8981\u8f93\u51fa\u6bcf\u4e2a\u70b9\u7684\u707e\u96be\u503c\n\n\u6bd4\u5982\u770b\u6837\u4f8b\uff08\u4e00\u4e2a\u98df\u7269\u7f51\u5e94\u8be5\u662f\u7531\u98df\u7269\u6307\u5411\u6355\u98df\u8005\uff0c\u5728\u5b58\u8fb9\u65f6\u8981\u53cd\u5411\u5b58\uff09![](https://cdn.luogu.com.cn/upload/image_hosting/gysi7omu.png)\n\n1\u8282\u70b9\u88ab\u5220\u53bb\u540e2\u30013\u8282\u70b9\u5165\u5ea6\u53d8\u4e3a0\u88ab\u5220\u53bb\uff0c\u63a5\u77404\u30015\u8282\u70b9\u5165\u5ea6\u53d8\u4e3a0\u88ab\u5220\u53bb\uff0c\u4e00\u51714\u4e2a\u70b9\u88ab\u5220\u53bb\uff0c\u6240\u4ee5\u5b83\u7684\u707e\u96be\u503c\u662f4.\n\n2\u88ab\u5220\u53bb\u4f1a\u4f7f5\u8282\u70b9\u5165\u5ea6\u4e3a0\u88ab\u5220\u53bb\uff0c\u6240\u4ee5\u5b83\u7684\u707e\u96be\u503c\u4e3a1\u3002\u5269\u4e0b\u51e0\u4e2a\u70b9\u88ab\u5220\u53bb\u90fd\u4e0d\u4f1a\u4ea7\u751f\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u4ed6\u4eec\u707e\u96be\u503c\u4e3a0\n\n## \u9898\u76ee\u5206\u6790\n### **\u4e0b\u9762\u5185\u5bb9\u6765\u81ea\u300a\u4e2d\u5b66\u751f\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u63d0\u9ad8\u7bc7\u300b**\uff08\u6709\u5220\u51cf\uff09\n\n\u5bf9\u4e8e\u751f\u4ea7\u8005\uff0c\u4e0d\u59a8\u7ed9\u5b83\u6dfb\u52a0\u4e00\u4e2a\u5047\u60f3\u7684\u98df\u7269\u2014\u2014\u592a\u9633\u3002\u90a3\u4e48\u8fd9\u4e2a\u68ee\u6797\u5c31\u53d8\u6210\u4e86\u4e00\u9897\u201c\u706d\u7edd\u6811\u201d\u3002\n\n\u9996\u5148\uff0c\u6309\u7167\u98df\u7269\u7f51\u4ece\u730e\u7269\u5230\u6355\u98df\u8005\u7684\u987a\u5e8f\u62d3\u6251\u6392\u5e8f\uff0c\u6709\u4e14\u4ec5\u6709\u592a\u9633\u6ca1\u6709\u4efb\u4f55\u5165\u5ea6\uff0c\u6240\u4ee5\u5148\u5c06\u592a\u9633\u52a0\u5165\u706d\u7edd\u6811\uff0c\u4e4b\u540e\uff0c\u4f9d\u6b21\u8003\u8651\u6bcf\u4e2a\u751f\u7269 $i$ ,\u4f9d\u6b21\u8003\u8651\u6784\u5efa\u597d\u6392\u5e8f\u5728 $i$ \u4e4b\u524d\u7684\u751f\u7269\u7ec4\u6210\u7684\u706d\u7edd\u6811\uff0c\u5047\u8bbe$i$ \u7684\u98df\u7269\u6709 $p_1,p_2,p_3,\\cdots,p_k$(\u8fd9\u4e9b\u8282\u70b9\u5728\u62d3\u6251\u5e8f\u4e2d\u6bd4 $i$\u9760\u524d\uff0c$i$ \u4f1a\u706d\u7edd\uff0c\u5f53\u4e14\u4ec5\u5f53$p_1,p_2,p_3,\\cdots,p_k$\u5168\u90e8\u706d\u7edd\uff0c\u5f53\u4e14\u4ec5\u5f53LCA\uff08$p_1,p_2,p_3,\\cdots,p_k$\uff09\u706d\u7edd\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5728\u6811\u4e0a\u52a0\u4e0aLCA\u5230$i$ \u7684\u8fb9\uff0c\u628a$i$ \u7684\u8fb9\u52a0\u5230\u6811\u4e2d\u3002\u5904\u7406\u5b8c\u540e\u5c31\u5f97\u5230\u4e86\u706d\u7edd\u6811\uff0c\u6bcf\u4e2a\u751f\u7269\u7684\u707e\u96be\u503c\u5c31\u662f\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u51cf\u4e00\n\n\n------------\n### \u4e0b\u9762\u662f\u81ea\u5df1\u7684\u8be6\u7ec6\u7406\u89e3\u548c\u5bf9\u4e0a\u9762\u7684\u8865\u5145\n\u611f\u89c9\u4e66\u4e2d\u8bf4\u7684\u5e76\u4e0d\u662f\u975e\u5e38\u6e05\u695a\uff0c\u81f3\u5c11\u6211\u5728\u8bbe\u8ba1\u601d\u8def\u548c\u5b8c\u6210\u4ee3\u7801\u65f6\u9047\u5230\u4e86\u5f88\u591a\u95ee\u9898\uff08WA\u4e8610\u6b21\u7684\u75db\uff09\n\n\u672c\u9898\u4e2d\u7684LCA\u548c\u666e\u901aLCA\u6709\u4e00\u4e9b\u5dee\u522b\uff0c1\u662f\u5b83\u662f\u591a\u8282\u70b9\u7684LCA\uff0c\u518d\u8005\u5b83\u662f\u8981\u4e00\u8fb9\u5efa\u6811\u4e00\u8fb9LCA\u3002\u800c\u4e14\u672c\u9898\u4e2d\u6d89\u53ca\u539f\u6811\uff08\u98df\u7269\u7f51\uff09\u548c\u65b0\u6811\uff08\u706d\u7edd\u6811\uff09\uff0c\u4e66\u4e2d\u6ca1\u6709\u8bf4\u5728\u54ea\u91cc\u6c42LCA\uff0c\u5982\u4f55\u500d\u589e\u3002\n\n\u6211\u60f3\u5230\u7684\u4e00\u79cd\u6c42LCA\u7684\u65b9\u6cd5\u662f\uff1a**\u66f4\u65b0\u8fed\u4ee3LCA**\n\n\u5176\u601d\u8def\u662f\uff1a\u7ed9\u6bcf\u4e2a\u6570\u591a\u7ef4\u62a4\u4e00\u4e2a\u503c$dad$,\u7528\u6765\u8868\u793a\u5982\u679c\u6b64\u65f6\u5b83\u8981\u88ab\u8fde\u5165\u706d\u7edd\u6811\u4e2d\uff0c\u5b83\u5e94\u8be5\u662f\u54ea\u4e2a\u70b9\u7684\u513f\u5b50\u3002\u4e00\u5f00\u59cb**\u5c06$dad$\u6e05\u4e3a-1**\uff0c\u5c06\u5f00\u59cb**\u5165\u5ea6\u4e3a0\u7684\u70b9 $p_i$ \u7684$dad$\u8bbe\u4e3a0**\uff08\u592a\u9633\uff09\u3002\u5728\u62d3\u6251\u6392\u5e8f\u53d6\u51fa\u4e00\u4e2a\u70b9$i$\u7684\u65f6\u5019\u8fde\u63a5\u8fb9 $dad[i]->i$ (\u6b64\u65f6$i$\u7684\u7236\u4eb2\uff08\u6839\u8282\u70b9\u7684\u7236\u4eb2\u524d\u9762\u5df2\u7ecf\u786e\u5b9a\uff09\u90fd\u5df2\u7ecf\u88ab\u5904\u7406\u8fc7\u4e86\uff0c\u6240\u4ee5$dad[i]$\u5df2\u7ecf\u786e\u5b9a\uff08\u600e\u4e48\u786e\u5b9a\u7684\u9a6c\u4e0a\u4f1a\u8bf4\uff09\uff09\u3002\u7136\u540e\u66f4\u65b0\u70b9$i$\u76f8\u5bf9\u5e94\u7684**\u6df1\u5ea6\u548c\u500d\u589e\u6570\u7ec4**\uff08\u56e0\u4e3a$i$\u7684\u7956\u5148\u4eec\u5df2\u7ecf\u5728$i$\u4e4b\u524d\u88ab\u786e\u5b9a\uff0c\u6240\u4ee5\u6b64\u65f6\u7684\u6df1\u5ea6\u548c\u5176\u500d\u589e\u6570\u7ec4\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\uff09\uff0c\u63a5\u7740\u904d\u5386$i$\u7684\u513f\u5b50\u4eec\uff0c\u5982\u679c\u5b83\u7684\u513f\u5b50$p$\u7684\u7236\u4eb2$dad[p]$\u4e3a0\uff0c\u8bf4\u660e\u5b83\u7684\u7236\u4eb2\u8fd8\u6ca1\u6709\u88ab\u66f4\u65b0\u8fc7\uff0c\u6b64\u65f6\u628a$dad[p]$\u66f4\u65b0\u4e3a$i$\u3002\u5426\u5219\u5c31\u5c06$dad[p]$\u66f4\u65b0\u4e3aLCA\uff08$dad[p],i$\uff09\u3002\u8fd9\u6837\uff0c\u5728\u904d\u5386\u5230$p$\u7684\u65f6\u5019\u5b83\u7684\u7236\u8282\u70b9\u5c31\u88ab\u786e\u5b9a\u4e0b\u6765\u4e86\u3002\n\n**\u4e3a\u4ec0\u4e48\u80fd\u8fd9\u6837\u505a\u5462\uff1f**\n\n\u6211\u4eec\u9700\u8981\u5728\u6c42\u51fa\u5728\u539f\u6811\u4e0a$i$\u7684\u6240\u6709\u7236\u4eb2\u7684LCA\uff0c\u5c31\u76f8\u5f53\u4e8e\u628a\u4e24\u4e2a\u7236\u4eb2\u5f53\u6210\u4e00\u7ec4\uff0c\u4e00\u7ec4\u4e00\u7ec4\u5730\u6c42LCA\uff0c\u5e76\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u8f6c\u79fb\u5230\u4e00\u4e2a\u70b9\u904d\u5386\u5176\u513f\u5b50\u7684\u65f6\u5019\u3002\n\n## \u601d\u8def\u603b\u7ed3\n1. \u521d\u59cb\u5316$dad$\u6570\u7ec4\u4e3a-1\u3002\n1. \u8bfb\u5165\u539f\u6811\uff0c\u53cd\u5411\u5efa\u7acb\u68ee\u6797\u5e76\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u3002\n1. \u626b\u63cf\u6240\u6709\u70b9\uff0c\u5c06\u5165\u5ea6\u4e3a0\u7684\u70b9\u52a0\u5165\u961f\u5217\u4e2d\uff0c\u5e76\u5c06\u5176$dad$\u66f4\u65b0\u4e3a0\u3002\n1. \u62d3\u6251\u6392\u5e8f\uff0c\u53d6\u51fa\u961f\u9996$x$\uff0c\u8fde\u63a5$dad[x],x$,\u5e76\u66f4\u65b0\u500d\u589e\u6570\u7ec4\u548c\u8be5\u70b9\u6df1\u5ea6\u3002\u904d\u5386$x$\u7684\u513f\u5b50\uff0c\u66f4\u65b0\u513f\u5b50\u7684$dad$\u5e76\u5c06\u513f\u5b50\u7684\u5165\u5ea6\u51cf\u4e00\uff0c\u82e5\u5165\u5ea6\u4e3a0\u5219\u5165\u961f\u3002\n1. \u91cd\u590d\u64cd\u4f5c4\uff0c\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\u3002\n1. $dfs$\u4e00\u6b21\u65b0\u6811\uff0c\u5e76\u9012\u5f52\u6c42\u5b50\u6811\u5927\u5c0f\u3002\n1. \u8f93\u51fa\u6bcf\u4e2a\u70b9\u5b50\u6811\u51cf\u4e00\n\n## \u6613\u9519\u70b9\n- \u539f\u6811\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u68ee\u6797\uff0c\u4eb2\u6d4b\u5b58\u8fb9\u6570\u7ec4\u5927\u5c0f20w\u80fd\u8fc7\n- \u500d\u589e\u6570\u7ec4\u5728\u6839\u8282\u70b9\u518d\u5f80\u4e0a\u662f0\uff08\u5982\u679c\u628a\u592a\u9633\u8bbe\u4e3a-1\u8282\u70b9\u5c31\u4f1aWA\u7b2c\u4e94\u4e2a\u70b9\uff09\n- \u5b58\u539f\u6811\u65f6\u8981\u53cd\u5411\u5b58\n- \u500d\u589e\u6df1\u5ea616\n- \u539f\u6811\u548c\u65b0\u6811\u7684\u67e5\u8be2\u5c0f\u5fc3\u5f04\u6df7\n- \u8f93\u51fa\u65f6\u5b50\u6811\u5927\u5c0f\u8981\u51cf\u4e00\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\n#define N 65536\nusing namespace std;\nint n,tot,ans,tot1;\nint to[N*4],ne[N*4],head[N];//\u539f\u6811\u90bb\u63a5\u8868 \nint edge[N],anc[N][21],dad[N],size[N],de[N];// \u5165\u5ea6\u3001\u500d\u589e\u3001\u7236\u4eb2\u3001\u5b50\u6811\u5927\u5c0f\u3001\u6df1\u5ea6 \nint to1[N*4],ne1[N*4],head1[N];//\u65b0\u6811\u90bb\u63a5\u8868 \nvoid add(int x,int y) { to[++tot]=y,ne[tot]=head[x],head[x]=tot,edge[y]++; }//\u5b58\u539f\u6811 \nvoid add1(int x,int y) { to1[++tot1]=y,ne1[tot1]=head1[x],head1[x]=tot1;}//\u5b58\u65b0\u6811 \nqueue < int > q;//STL\u961f\u5217 \nvoid dfs(int x){//\u6df1\u641c\u6c42\u5b50\u6811\u5927\u5c0f \n    size[x]=1;\n    for(int i=head1[x];i;i=ne1[i]){\n        int y=to1[i];\n        dfs(y);\n        size[x]+=size[y];\n    } \n}\nint lca(int x,int y){//\u6c42LCA \n    if(x==y) return x;\n    if(de[x]<de[y]) swap(x,y);\n    for(int i=18;i>=0;i--) if(de[anc[x][i]]>=de[y]) x=anc[x][i];\n    if(x==y) return x;\n    for(int i=18;i>=0;i--) if(anc[x][i]!=anc[y][i]) x=anc[x][i],y=anc[y][i];\n    return anc[x][0];\n}\nvoid read(int &x) {//\u5feb\u8bfb \n    int f = 1; x = 0;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')   {if (ch == '-') f = -1; ch = getchar();}\n    while (ch >= '0' && ch <= '9') {x = x * 10 + ch - '0'; ch = getchar();}\n    x *= f;\n}\nint main()\n{\n    read(n);\n    for(int i=1;i<N;i++) dad[i]=-1;//\u521d\u59cb\u5316 \n    for(int i=1;i<=n;i++){\n        int x;\n        read(x);\n        while(x){\n            add(x,i);//\u53cd\u5411\u5b58\u6811 \n            read(x);\n        }\n    }\n    for(int i=1;i<=n;i++) \n        if(!edge[i]){\n            q.push(i);\n            dad[i]=0;//\u627e\u5230\u5165\u5ea6\u4e3a0\u7684\u8fb9 \n        }\n    while(!q.empty()){\n        int x;\n        x=q.front();q.pop();//\u53d6\u51fa\u961f\u9996  \n        add1(dad[x],x);\n        anc[x][0]=dad[x],de[x]=de[dad[x]]+1;        \n        for(int i=1;i<=18;i++) anc[x][i]=anc[anc[x][i-1]][i-1];//\u66f4\u65b0\u500d\u589e\u6570\u7ec4 \n        for(int i=head[x];i;i=ne[i]){\n            int y=to[i];\n            if(dad[y]==-1) dad[y]=x;//\u7236\u4eb2\u4e4b\u524d\u6ca1\u6709\u88ab\u66f4\u65b0 \n            else dad[y]=lca(dad[y],x);//\u7236\u4eb2\u4e4b\u524d\u5df2\u7ecf\u88ab\u66f4\u65b0\u8fc7 \n            if(--edge[y]==0) q.push(y);//\u5165\u5ea6\u4e3a0\u5219\u5165\u961f \n        }\n    }\n    dfs(0);//\u6c42\u5b50\u6811\u5927\u5c0f \n    for(int i=1;i<=n;i++)\n        printf(\"%d\\n\",size[i]-1);//\u8f93\u51fa \n    return 0;\n}\n\t\n```\n\n**\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u7ed9\u4e2a\u8d5e\u5457**\n\n",
        "postTime": 1576223881,
        "uid": 235658,
        "name": "llzzxx712",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "$QAQ$\uff0c\u4eba\u751f\u7b2c\u4e00\u9053\u7d2b\u9898\n\n\u6211\u89c9\u5f97\u8fd8\u662f\u53ea\u8bb2\u8bb2\u601d\u8def\u5427\u3002\u6bd5\u7adf\u6211\u7684\u4ee3\u7801\u592a\u4e11\u4e86\u3002\n\n\u5148\u6765\u770b\u6837\u4f8b\n![1](http://images.cnblogs.com/cnblogs_com/Lance1ot/1199055/o_1.jpg)\n\n\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u53cd\u5411\u5b58\u56fe\u5462\uff1f\u56e0\u4e3a\u9ad8\u7ea7\u6355\u98df\u8005\u8981\u6355\u98df\u4f4e\u7ea7\u6355\u98df\u8005\uff08\u751f\u4ea7\u8005\uff09\u3002\u5982\u679c\u6240\u6709\u6307\u5411\u4ed6\u7684\u70b9\uff08\u4f4e\u7ea7\u6355\u98df\u8005\uff09\u90fd\u6ca1\u4e86\u3002\u4ed6\u4e5f\u80af\u5b9a\u4f1a\u6b7b\u3002\n\n\u7136\u540e\u63a5\u7740\u4e0b\u770b\u3002\n\n\u5982\u679c\u6211\u4eec\u53ea\u7528\u8d64\u679c\u679c\u7684topsort+\u9012\u63a8\u3002\u8282\u70b94\uff08\u4e0b\u540c\uff09\u5c31\u4f1a\u5361\u6389\u4f60\u3002\n\n\u6211\u4eec\u600e\u4e48\u6539\u8fdb\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8282\u70b94\u590d\u5236\u4e00\u4efd~~\u5f71\u5206\u8eab\uff01~~ \u518d\u5229\u7528\u8fb9\u7684\u6709\u5411\u6027\u3002\u5efa\u4e00\u9897\u6811\u3002\n\n\u5982\u56fe\n\n![2](http://images.cnblogs.com/cnblogs_com/Lance1ot/1199055/o_3.jpg)\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u5c06\u95ee\u9898\u8f6c\u6362\u4e3a\u6c42\u4ee5 \u8282\u70b9x \u4e3a\u6839\u7684\u5b50\u6811\u7684\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u518d\u53bb\u4e00\u4e2a\u91cd\u3002\n\n\u53ef\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6700\u96be\u7684\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u53bb\u91cd\u3002\n\n\u6211\u4eec\u5148\u7b49\u4e00\u7b49\u3002\u518d\u60f3\u4e00\u60f34\u548c4* \u7684\u6027\u8d28\u53ea\u6709\u8282\u70b91\u6b7b\u4e86\u30024\u624d\u4f1a\u6b7b\u5c3d\u3002\n\n\u800c\u8282\u70b91\u662f\u4ec0\u4e48\u5462\uff1f\u662f4\u548c4* \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n![3](http://images.cnblogs.com/cnblogs_com/Lance1ot/1199055/o_4.jpg)\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u7c7b\u4f3c\u5e76\u67e5\u96c6\u7684\u601d\u60f3\uff0c\u820d\u5f03\u4e00\u4e9b\u4fe1\u606f\u3002\u4f7f\u7ef4\u62a4\u8d77\u6765\u66f4\u52a0\u65b9\u4fbf\u3002\n\n\u800c\u8fd9\u4e9b\u4fe1\u606f\u3002\u5bf9\u4e8e\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u4e86\u3002\u6211\u4eec\u53ea\u5173\u5fc3i\u6ca1\u4e86\u4ee5\u540ej\u662f\u5426\u4f1a\u6ca1\u3002\n\n\u5c31\u50cf\u8fd9\u4e2a\u6837\u5b50\n\n[![4](http://images.cnblogs.com/cnblogs_com/Lance1ot/1199055/o_5.jpg)](http://www.cnblogs.com/Lance1ot/)\n\n\u6211\u4eec\u518d\u56de\u770b\u6837\u4f8b\n\n![1](http://images.cnblogs.com/cnblogs_com/Lance1ot/1199055/o_1.jpg)\n\n\u6211\u4eec\u5728topsort\u5efa\u6811\u4e2d\uff0c\u626b\u63cf\u5230\u4e864\u3002\n\u6839\u636e\u6211\u4eec\u4e4b\u524d\u627e\u7684\u9053\u7406\u3002\u6211\u4eec\u9700\u8981\u627e**\u4ed6\u4eec**\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u5e76\u4e14\u94fe\u4e0a\u53bb\u3002\n\n\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u6027\u8d28\u3002\u5bf9\u4e8e\u6837\u4f8b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u51fa2,3\uff08\u5c31\u662f\u5728\u6211\u4eec\u7b2c2\u4e2a\u56fe\u6ca1\u6709\u7f29\u70b9\u4e4b\u524d\u4e2d4\u548c4* \u7684\u7236\u4eb2\uff0c\u56fe2\u662f\u6211\u4eec\u4e3a\u4e86\u7406\u89e3\u7684\u4e00\u4e2a\u8fc7\u7a0b\u7684\u6811\uff09\uff0c\u5c31\u662f\u6240\u6709\u6307\u5411\u4ed6\u7684\u8282\u70b9\u5728\u6211\u4eec\u4ee5\u53ca\u5efa\u597d\u4e86\u7684\u6811\u4e2d\uff08\u65e0\u5f71\u5206\u8eab\u7248\uff09\u7684lca\u3002\n\n\u6700\u7ec8\uff0c\u6700\u540e\u4e00\u4e2a\u5728coding\u4e2d\u7684\u95ee\u9898\u4e5f\u89e3\u51b3\u4e86\u3002\n\n\u4ee3\u7801\u8fd8\u662f\u770b\u697c\u4e0b\u5927\u4f6c\u5427",
        "postTime": 1523706305,
        "uid": 28007,
        "name": "Lance1ot",
        "ccfLevel": 6,
        "title": "2597"
    },
    {
        "content": "\u611f\u8c22zhhe0101\u5b66\u957forz\u7684\u8010\u5fc3\u8bb2\u89e3\n\n\u6211\u592a\u83dc\u4e86\u542c\u4e86\u597d\u4e45\u624d\u61c2\n\n\u4e0d\u8fc7\u8fd9\u4e2a\u9898\u7684\u505a\u6cd5\u7684\u786e\u662f\u5341\u5206\u7cbe\u5999\u7684\n\n\u5927\u4f53\u5206\u4e09\u6b65\uff1a1\u3001\u62d3\u6251\u6392\u5e8f2\u3001\u5efa\u68113\u3001\u6c42\u6811\u7684\u524d\u7f00\u548c \n\n1\u3001\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a\u751f\u7269\u6b7b\u4ea1\u7684\u6761\u4ef6\u662f\u4ed6\u7684\u6240\u6709\u98df\u7269\u5168\u90e8\u6b7b\u4ea1\n\n   \u800c\u4e14\u65e2\u7136\u8fd9\u4e2a\u9898\u8bf4\u4e86\u6ca1\u6709\u73af\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u98df\u7269\u94fe\u7b49\u7ea7\u9c9c\u660e \n   \n   \u90a3\u4e48\u6c42\u8fd9\u79cd\u56fe\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u5230\u62d3\u6251\u6392\u5e8f\u4e86\n   \n2\u3001\u6211\u4eec\u5efa\u4e00\u68f5\u6811\uff0c\u8ba9father[x]\u4e3ax\u7684\u7236\u4eb2\uff0c\u610f\u5473\u7740\u82e5father[x]\u6b7b\u4e86\uff0c\u90a3\u4e48x\u5219\u706d\u7edd\n\n   \u95ee\u9898\u6765\u4e86\uff0cx\u5e94\u8be5\u6302\u5728\u54ea\u4e2a\u70b9\u4e0a\uff1f\n   \n   \u5f53\u7136\u662f\u4ed6\u6240\u6709\u98df\u7269\u7684LCA\u4e0a\u554a\uff01\n   \n   \u82e5LCA\u6b7b\u4e86\uff0cx\u7684\u98df\u7269\u4e5f\u4f1a\u90fd\u6b7b\u4ea1\uff0c\u90a3\u4e48x\u4e5f\u5fc5\u7136\u6b7b\u4ea1\n   \n\t \u5efa\u6811\u8fd9\u91cc\u53ef\u4ee5\u5c06\u51fa\u5ea6\u4e3a0\u7684\u70b9\u8fde\u5728\u4e00\u4e2a\u865a\u62df\u70b9n+1\u4e0a\u65b9\u4fbf\u5904\u7406 \n     \n3\u3001\u6700\u540eDFS\u6c42\u4e00\u4e0b\u6811\u7684\u524d\u7f00\u548c\n\n\t \u56e0\u4e3a\u82e5x\u6b7b\u4e86\uff0c\u90a3\u4e48\u4ed6\u7684\u5b50\u6811\u4f1a\u5168\u90e8\u6b7b\u4ea1\uff0c\u90a3\u4e48\u4ed6\u7684\u91cd\u8981\u5ea6\u5c31\u662f\u5b50\u6811\u5927\u5c0f-1\uff08\u53bb\u9664\u672c\u8eab\uff09 \n     \n     \n\u6700\u540e\u9644\u6837\u4f8b\u8f6c\u6811\u7684\u56fe\uff08\u5b66\u957f\u7ed9\u6211\u753b\u7684\uff09\n\n5 \u21922 \u21921 \n\n\t\u2197  \u2197 \n    \n4 \u21923 \n\n\n------------\n\n\n\t\t6 \n \t\t\u2193 \n\t\t1 \n\t  \u2199\u2193\u2198 \n\t 2  3  4 \n \u2199\n \n5 \n\n[\u4ee3\u7801](http://www.cnblogs.com/refun/p/8678431.html)\u7684\u9898\u89e3\u53ef\u80fd\u6392\u7248\u66f4\u597d\u4e00\u70b9",
        "postTime": 1522677547,
        "uid": 41890,
        "name": "Refun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "# [P2597 [ZJOI2012]\u707e\u96be]\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2597)\n\n###  \u524d\u8a00\n\n\u611f\u8c22 [lzx](https://www.luogu.com.cn/blog/llzzxx712/solution-p2597#) \u5de8\u4f6c\u3002\n\n\u8fd9\u9053\u9898\u5728\u6211AC\u4e4b\u524d\uff0c\u8fd9\u4f4d\u5de8\u4f6c\u548c\u6211\u5df2\u7ecf\u8ba8\u8bba\u4e86\u4e00\u4e2a\u793c\u62dc\u3002\n\n~~\u591a\u4e8f\u4ed6\u7684\u65e0\u6570\u6b21WA\u4e0eTLE~~ \u6211\u4eec\u6700\u7ec8\u60f3\u51fa\u4e86\u6b63\u89e3\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u5148\u8981\u5efa\u4e00\u4e2a\u6709\u5411\u68ee\u6797\u3002\n\n\u6211\u4eec\u518d\u60f3\uff0c\u5982\u679c\u8fd9\u6761\u98df\u7269\u94fe\u662f\u4e00\u68f5\u6811\u3002\n\n\u4f46\u6837\u4f8b\u7684\u56fe\u7247\u4e00\u770b\u5c31\u77e5\u9053\u9898\u76ee\u5e76\u6ca1\u6709\u90a3\u4e48\u7b80\u5355~~\u6bd5\u7adf\u662f\u4e00\u9053\u7d2b\u9898~~\u3002\n\n\u5982\u679c\u4f60\u60f3\u7531\u4e00\u4e2a\u70b9\u706d\u7edd\u6765\u63a8\u5bfc\uff0c\u90a3\u4e48\u606d\u559c\uff0c\u4f60\u8d70\u5165\u4e86\u4e00\u6761\u6b7b\u8def\u3002\n\n\u53cd\u8fc7\u6765\u60f3\uff0c\u4e00\u4e2a\u70b9\u706d\u7edd\u539f\u56e0\u3002\n\n\u53d1\u73b0\uff0c\u4e00\u4e2a\u70b9\u706d\u7edd\u7684\u524d\u63d0\u662f\uff0c\u6240\u6709\u524d\u9a71\u90fd\u706d\u7edd\u3002\n\n\u4e00\u6b21\u53ea\u80fd\u706d\u7edd\u4e00\u4e2a\u3002\n\n\u5982\u679c\u524d\u9a71\u591a\u4e2a\u7684\u8bdd\uff0c\u663e\u7136\u706d\u7edd\u4e00\u4e2a\u8be5\u70b9\u4e0d\u4f1a\u706d\u7edd\u3002\n\n\u6240\u4ee5\uff0c\u7ee7\u7eed\u627e\u524d\u9a71\u7684\u524d\u9a71\u3002\n\n\u76f4\u5230\u524d\u9a71\u53d8\u6210\u4e00\u4e2a\u70b9$P$\u3002\u90a3\u4e48\uff0c\u5c31\u76f8\u5f53\u4e8e\uff0c\u8fd9\u4e2a\u70b9\u706d\u7edd\u4e86\uff0c\u5f00\u59cb\u8bf4\u7684\u70b9$X$\u624d\u4f1a\u706d\u7edd\u3002\n\n\u5982\u679c\u6211\u4eec\u6784\u9020\u51fa\u6765\u4e00\u4e2a\u6811\uff0c\u90a3\u4e48\u8fd9\u4e2a$P$\u5c31\u662f$X$\u7684\u6240\u6709\u524d\u9a71\u7684$LCA$\n\n\u627e\u5230\u6240\u6709\u524d\u9a71\u7684$LCA$\uff0c\u76f4\u63a5\u628a$X$\u4f5c\u4e3a$LCA$\u7684\u513f\u5b50\u8fde\u4e0a\u53bb\u3002\u5c31\u6784\u9020\u51fa\u6765\u4e86\u8fd9\u4e2a\u6811\u3002\n\n\u5176\u5b9e\uff0c\u5c31\u662f\u6700\u8fd1\u7684\u53ef\u4ee5\u706d\u7edd\u540e\u706d\u7edd$X$\u7684\u70b9\u3002\n\n\u90a3\u5b83\u6bcf\u4e2a\u8282\u70b9\u7684\u707e\u96be\u503c\u5c31\u662f\u5b83\u7684\u5b50\u6811\u5927\u5c0f$-1$\u3002\n\n**\u4f46\u662f** \u4e5f\u4f1a\u51fa\u73b0\u4e00\u4e2a\u751f\u7269\u5403\u4e24\u4e2a\u751f\u4ea7\u8005\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6$LCA$\u4fbf\u4f1a\u51fa\u73b0$BUG$\uff0c\u5c31\u9700\u8981\u5efa\u4e00\u4e2a\u8d85\u7ea7\u539f\u70b9$ROOT$\uff0c\u628a\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\uff08\u6839\uff09\u90fd\u63a5\u4e0a\u53bb\uff0c\u5c31\u53ef\u4ee5\u7528$LCA$\u4e86\u3002\n\nroot\u4e0d\u53c2\u4e0e\u7b54\u6848\u7edf\u8ba1\u3002\u5982\u679c\u8fde\u5411root\u7684\u70b9\uff0c\u65e0\u8bba\u5982\u4f55\u4e0d\u4f1a\u56e0\u4e3a\u67d0\u4e2a\u7269\u79cd\u706d\u7edd\u800c\u706d\u7edd\u3002\uff08\u56e0\u4e3a\u591a\u4e8e\u4e00\u4e2a\u524d\u9a71\u5fc5\u987b\u81ea\u5df1\u6b7b\uff09\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define res register int\n#define maxn 500010\nusing namespace std;\nvoid read(int &x) {\n    int f = 1; x = 0;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')   {if (ch == '-') f = -1; ch = getchar();}\n    while (ch >= '0' && ch <= '9') {x = x * 10 + ch - '0'; ch = getchar();}\n    x *= f;\n}\nstruct node{int to,nxt;};\nnode edge[maxn<<1],edge2[maxn<<1];int indegree[maxn],dad[maxn];\nint head[maxn],head2[maxn],m,n,root,dep[maxn],fa[maxn][30],num,sum,siz[maxn],topo[maxn];\nvoid add1(int a,int b){edge[++num].to=b;edge[num].nxt=head[a];head[a]=num;indegree[b]++;}\nvoid add2(int a,int b){edge2[++num].to=b;edge2[num].nxt=head2[a];head2[a]=num;}\nint lca(int u,int v){\n\tif(dep[u]<dep[v]) swap(u,v);\n\tfor(res i=20;i>=0;--i)if(dep[fa[u][i]]>=dep[v]) u=fa[u][i];\n\tif(u==v) return u;\n\tfor(res i=20;i>=0;--i)if(fa[u][i]!=fa[v][i]) u=fa[u][i],v=fa[v][i];\n\treturn fa[u][0];\n}\nvoid get_siz(int x){//\u6c42\u5b50\u6811\u5927\u5c0f \n\tfor(res i=head2[x];i!=-1;i=edge2[i].nxt){\n\t\tint y=edge2[i].to;get_siz(y);siz[x]+=siz[y];\n\t}\n}\nvoid topsort()\n{\n\tmemset(dad,-1,sizeof(dad));\n\tqueue< int > q;\n    for(int i=1;i<=n;i++) if(!indegree[i])q.push(i),dad[i]=0;\n    while(!q.empty())\n    {\n        int temp=q.front();q.pop();\n        add2(dad[temp],temp);dep[temp]=dep[dad[temp]]+1;\n        fa[temp][0]=dad[temp];\n        for(int i=1;i<=16;i++)fa[temp][i]=fa[fa[temp][i-1]][i-1];\n        for(int p=head[temp];p!=-1;p=edge[p].nxt)\n        {\n            int v=edge[p].to;\n            if(dad[v]==-1) dad[v]=temp;\n            else dad[v]=lca(dad[v],temp);\n            indegree[v]--;\n\t\t\tif(!indegree[v])q.push(v);\n\t\t\t\n        }\n    }\n}\nint main(){\n\tread(n);\n\tmemset(head,-1,sizeof(head));\n\tmemset(indegree,0,sizeof(indegree));\n    for(int i=1,x;i<=n;i++){//\u8282\u70b9\u6570 \n\t\twhile(1){\n        \tread(x);\n        \tif(!x) break;\n        \tadd1(x,i);\n\t\t}\n    }\n    siz[0]=dep[0]=0;memset(head2,-1,sizeof(head2));\n    topsort();get_siz(0);\n    for(int i=1;i<=n;i++)printf(\"%d\\n\",siz[i]-1);\n\treturn 0;\n}\n```\n## \u603b\u7ed3\n\n\u7a81\u7834\u53e3\u5c31\u662f\u60f3\u5230\u8f6c\u5316\u6210\u6811\u6bd4\u8f83\u597d\u5904\u7406\u3002\u7136\u540e\u8003\u8651\u4e00\u4e2a\u7269\u79cd\u662f\u600e\u4e48\u706d\u7edd\u7684\u3002\n\n\u53d1\u73b0\uff0c\u4e00\u4e2a\u7269\u79cd\u706d\u7edd\uff0c\u53ea\u8981\u627e\u5230\u6700\u8fd1\u7684\u53ef\u4ee5\u8ba9\u5b83\u706d\u7edd\u7684\u7269\u79cdY\u5373\u53ef\u3002\u6240\u6709\u80fd\u8ba9Y\u706d\u7edd\u7684\u7269\u79cd\u4e5f\u80fd\u8ba9X\u706d\u7edd\u3002\n\n\u800c\u4e00\u4e2a\u7269\u79cd\u706d\u7edd\u540e\uff0c\u53ef\u80fd\u5f71\u54cd\u5230\u591a\u4e2a\u7269\u79cd\u4e5f\u706d\u7edd\u3002\n\n\u4e00\u4e2a\u70b9\uff0c\u4e00\u4e2a\u524d\u9a71\uff0c\u591a\u4e2a\u540e\u7ee7\u3002\n\n\u8fd9\u5c31\u662f\u6811\u5f62\u7ed3\u6784\uff01\uff01\n\n\u6839\u636e\u5176\u4ed6\u5de8\u4f6c\u7684\u9898\u89e3\uff0c\u539f\u6765\u8fd9\u8fd8\u662fDAG\u7684\u652f\u914d\u6811\n\n\u6240\u4ee5\u5176\u5b9e\u662f\u6a21\u677f\u9898\u3002\uff08\u60ca\u4e86\uff01\uff09\n\n~~\u6c42\u70b9\u8d5e~~\n",
        "postTime": 1576221024,
        "uid": 225703,
        "name": "jyz666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u5176\u5b9e\u7b2c\u4e00\u904d\u5df2\u7ecfA\u4e86\u3002\u3002\u3002\u3002\u4f46\u662f\uff01\u4f46\u662f\uff01\u624b\u6ed1\u7684\u9519\u8bef\u4e0d\u8981\u72af\u4e86\u597d\u561b\u3002\u3002\u3002\u3002\n\n\u4f9d\u6b21\u8003\u8651\u6bcf\u4e2a\u751f\u7269i\uff1a\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6784\u5efa\u597d\u4e86\u6392\u5e8f\u5728i\u4e4b\u524d\u7684\u751f\u7269\u7ec4\u6210\u7684\u201c\u706d\u7edd\u6811\u201d\u4e86\u3002\n\n\u5047\u8bbei\u7684\u98df\u7269\u6709x[0]~x[k]\uff08x[0]~x[k]\u5728\u62d3\u6251\u6392\u5e8f\u4e2d\u6bd4i\u9760\u524d\uff09\uff0c\n\n\u5f88\u663e\u7136\uff0c\u53ea\u6709x[0]~x[k]\u5728\u6811\u4e0a\u7684\u516c\u5171\u7956\u5148\u7684\u706d\u7edd\u4f1a\u5bfc\u81f4i\u706d\u7edd\uff0c\u5426\u5219i\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u80fd\u8ba9\u5b83\u6d3b\u4e0b\u6765\u7684\u98df\u7269\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u628ai\u6302\u5728x[0]~x[k]\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e0b\u9762\u3002\n\n\u5904\u7406\u5b8c\u6240\u6709\u7684\u751f\u7269\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6811\u5c31\u662f\u6574\u4e2a\u56fe\u7684\u706d\u7edd\u6811\u4e86\u3002\u4e4b\u540edfs\u8ba1\u7b97\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5b50\u6811\u5927\u5c0f-1\u5373\u5371\u9669\u7a0b\u5ea6\n\n\u4e00\u4e2a\u53ef\u7231\u7684\u5730\u65b9<http://blog.csdn.net/blue\\_cuso4/article/details/77968467>\n\n```cpp\n#include <cstdio>  \n#include <queue>  \n#include <cstring>  \n#include <iostream>  \n#define sz 31  \n#define N 65540  \nusing namespace std;  \nint tot,nxt[N*4],point[N*4],v[N*4],tot1,nxt1[N*4],point1[N*4],v1[N*4],tot2,nxt2[N*4],point2[N*4],v2[N*4],n,in[N],ran[N],h[N];  \nint f[N][sz],ans[N];  \nvoid addline(int x,int y){++tot; nxt[tot]=point[x]; point[x]=tot; v[tot]=y;}  \nvoid addline1(int x,int y){++tot1; nxt1[tot1]=point1[x]; point1[x]=tot1; v1[tot1]=y;}  \nvoid addline2(int x,int y){++tot2; nxt2[tot2]=point2[x]; point2[x]=tot2; v2[tot2]=y;}  \nvoid topsort()  \n{  \n    queue<int>q;  \n    for (int i=1;i<=n;i++)  \n      if (!in[i]) q.push(i);  \n    int num=0;  \n    while (!q.empty())  \n    {  \n        int now=q.front(); q.pop();  \n        ran[++num]=now;  \n        for (int i=point[now];i;i=nxt[i])  \n        {  \n            in[v[i]]--;  \n            if (!in[v[i]]) q.push(v[i]);  \n        }  \n    }   \n}  \nint lca(int x,int y)  \n{  \n    if (h[x]<h[y]) swap(x,y);  \n    int k=h[x]-h[y];  \n    for (int i=0;i<sz;i++)  \n      if ((k>>i)&1) x=f[x][i];  \n    if (x==y) return x;  \n    for (int i=sz-1;i>=0;i--)  \n      if (f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];  \n    return f[x][0];  \n}  \nvoid dfs(int now)  \n{  \n    for (int i=point2[now];i;i=nxt2[i])  \n      {  \n          dfs(v2[i]);  \n          ans[now]+=ans[v2[i]];  \n      }  \n    ans[now]++;  \n}  \nint main()  \n{  \n    int i,j;  \n    scanf(\"%d\",&n);  \n    for (i=1;i<=n;i++)  \n    {  \n        int x;  \n        scanf(\"%d\",&x);  \n        while (x) {in[i]++;addline1(i,x);addline(x,i);scanf(\"%d\",&x);}  \n    }  \n    topsort();  \n    for (i=1;i<=n;i++)  \n    {  \n        int x=v1[point1[ran[i]]];  \n        for (j=point1[ran[i]];j;j=nxt1[j])  \n          x=lca(x,v1[j]);  \n        addline2(x,ran[i]);  \n        h[ran[i]]=h[x]+1;  \n        f[ran[i]][0]=x;  \n        for (j=1;j<sz;j++) f[ran[i]][j]=f[f[ran[i]][j-1]][j-1];  \n    }  \n    dfs(0);  \n    for (i=1;i<=n;i++) printf(\"%d\\n\",ans[i]-1);  \n}\n```",
        "postTime": 1505306233,
        "uid": 17774,
        "name": "wwyx2001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u706d\u7edd\u6811\u3002\u8fd9\u9053\u9898\u5e94\u8be5\u53ef\u4ee5\u7b97\u662f\u706d\u7edd\u6811\u7684\u6a21\u677f\u9898\uff0c\u6211\u4eec\u5728\u6c42\u51fa\u706d\u7edd\u6811\u540e\u4ece $0$ \u505a\u4e00\u904d $\\text{DFS}$ \u6c42\u51fa\u5230\u6bcf\u4e2a\u7ed3\u70b9\u7684\u524d\u7f00\u548c\uff0c\u8f93\u51fa\u65f6 $-1$ \uff08\u5373\u53bb\u9664\u5b83\u672c\u8eab\uff09\u5373\u53ef\u3002\n\n\u90a3\u4e48\u600e\u6837\u6784\u9020\u4e00\u68f5\u706d\u7edd\u6811\u5462\uff1f\u9996\u5148\u53ef\u4ee5\u660e\u786e\uff0c\u8fd9\u9053\u9898\u6784\u6210\u7684\u56fe\u662f\u4e00\u4e2a $\\text{DAG}$\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 \u62d3\u6251\u6392\u5e8f+$\\text{LCA}$ \u7684\u65b9\u6cd5\u6784\u9020\uff0c\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n 1. \u5148\u5bf9\u56fe\u62d3\u6251\u6392\u5e8f\uff0c\u6c42\u51fa\u62d3\u6251\u5e8f\n 2. \u6309\u62d3\u6251\u5e8f\u5904\u7406\uff0c\u6c42\u51fa\u5f53\u524d\u8282\u70b9\u5728 $\\text{DAG}$ \u4e0a**\u6240\u6709\u51fa\u70b9**\u5728\u5f53\u524d\u706d\u7edd\u6811\u4e0a\u7684 $\\text{LCA}$\uff0c\u4f5c\u4e3a\u5f53\u524d\u70b9\u5728\u706d\u7edd\u6811\u4e0a\u7684**\u7236\u4eb2**\u3002\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7\u5efa**\u53cd\u56fe**\u6765\u6c42\u51fa\u3002\n \n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u4ece $0$ \u5f00\u59cb $\\text{DFS}$\uff0c\u56e0\u4e3a\u6784\u9020\u706d\u7edd\u6811\u5230\u7b2c\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u706d\u7edd\u6811\u4e0a\u6ca1\u6709\u7ed3\u70b9\uff0c\u5b83\u6240\u6709\u51fa\u70b9\u7684 $\\text{LCA}$ \u5fc5\u7136\u662f $0$\uff0c\u6240\u4ee5\u5b83\u7684\u7236\u4eb2\u5c31\u662f $0$\uff0c\u4ece $0$ \u5f00\u59cb $\\text{DFS}$\u3002\n\n\u5177\u4f53\u539f\u56e0\u6211\u5c31\u4e0d\u5206\u6790\u4e86\uff0c\u4e00\u65f6\u534a\u4f1a\u513f\u8bf4\u4e0d\u6e05\u695a\uff0c\u8bb2\u7a3f\u8fd8\u662f\u633a\u591a\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 100005\nusing namespace std;\nqueue <int> q;\nint cnt[3],fst[3][MAXN<<1],nxt[3][MAXN<<1],to[3][MAXN<<1];\nint n,top[MAXN],ind[MAXN],f[MAXN][25],dep[MAXN],ans[MAXN];\nvoid AddEdge(int u,int v,int id)\n{\n\tto[id][++cnt[id]]=v;\n\tnxt[id][cnt[id]]=fst[id][u];\n\tfst[id][u]=cnt[id];\n}\nvoid TopoSort()//\u62d3\u6251\u6392\u5e8f\n{\n\tfor(int i=1;i<=n;i++) if(!ind[i]) q.push(i);\n\tint tot=0;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\ttop[++tot]=u;\n\t\tfor(int i=fst[0][u];i;i=nxt[0][i])\n\t\t{\n\t\t\tint v=to[0][i];\n\t\t\tind[v]--;\n\t\t\tif(!ind[v]) q.push(v);\n\t\t}\n\t}\n}\nint LCA(int x,int y)//\u6c42LCA\n{\n\tif(dep[x]>dep[y]) swap(x,y);\n\tfor(int i=20;i>=0;i--) if(dep[f[y][i]]>=dep[x]) y=f[y][i];\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;i--)\n\t{\n\t\tif(f[x][i]!=f[y][i])\n\t\t{\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\t}\n\treturn f[x][0];\n}\nvoid Dfs(int u)//\u6c42\u524d\u7f00\u548c\n{\n\tfor(int i=fst[2][u];i;i=nxt[2][i])\n\t{\n\t\tint v=to[2][i];\n\t\tDfs(v);\n\t\tans[u]+=ans[v];\n\t}\n\tans[u]++;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\twhile(1)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(!x) break;\n\t\t\tind[i]++;\n\t\t\tAddEdge(x,i,0);//\u6b63\u56fe\n\t\t\tAddEdge(i,x,1);//\u53cd\u56fe\n\t\t}\n\t}\n\tTopoSort();\n\tfor(int i=1;i<=n;i++)//\u5efa\u706d\u7edd\u6811\n\t{\n\t\tint lca=to[1][fst[1][top[i]]];\n\t\tfor(int j=fst[1][top[i]];j;j=nxt[1][j])\n\t\t{\n\t\t\tint v=to[1][j];\n\t\t\tlca=LCA(lca,v);\n\t\t}\n\t\tAddEdge(lca,top[i],2);\n\t\tdep[top[i]]=dep[lca]+1;\n\t\tf[top[i]][0]=lca;\n\t\tfor(int j=1;j<=20;j++) f[top[i]][j]=f[f[top[i]][j-1]][j-1];\n\t}\n\tDfs(0);\n\tfor(int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]-1);\n\treturn 0;\n}\n```",
        "postTime": 1546924262,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4f5c\u4e3a\u4e00\u9053\u7701\u9009\u9898\uff0c\u521d\u770b\u65e0\u4ece\u4e0b\u624b\uff0c\u4f46\u662f\u8981\u662f\u80fd\u627e\u5230\u4e00\u68f5\u6811\uff0c\u4f7f\u5f97\u4e00\u65e6\u67d0\u4e2a\u8282\u70b9\u88ab\u6bc1\u706d\u5219\u5b83\u7684\u5b50\u6811\u5168\u90fd\u88ab\u6bc1\u706d\u95ee\u9898\u5c31\u7b80\u5355\u4e86\u8bb8\u591a\u3002\n\n\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u8282\u70b9\u6c42\u4e00\u4e2a\u6811\u4e0a\u524d\u7f00\u548c\u5c31\u884c\u4e86\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\u5982\u4f55\u5efa\u6811\u5462\u3002\u4e00\u4e2a\u7ed3\u70b9\u88ab\u6bc1\u706d\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u6240\u6709\u98df\u7269\u90fd\u6bc1\u706d\u4e86\uff0c\u800c\u6240\u6709\u98df\u7269\u90fd\u88ab\u6bc1\u706d\u5f53\u4e14\u4ec5\u5f53\u4ed6\u4eec\u7684LCA\u88ab\u6bc1\u706d\uff0c\u56e0\u6b64\u6211\u4eec\u628a\u6bcf\u4e2a\u8282\u70b9\u90fd\u8fde\u63a5\u5728\u5b83\u7684\u6240\u6709\u98df\u7269\u7684LCA\u4e0a\uff0c\u5373\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f\u5b83\u7684\u6240\u6709\u98df\u7269\u7684LCA\u3002\n\n\u5f53\u7136\u4e86\u8fd9\u6837\u9010\u6b65\u5efa\u6811\u7684\u524d\u63d0\u6761\u4ef6\u662f\u628a\u67d0\u4e2a\u8282\u70b9\u52a0\u5165\u6811\u4e2d\u65f6\u5b83\u7684\u6240\u6709\u98df\u7269\u5df2\u7ecf\u90fd\u5728\u6811\u4e2d\u4e86\uff0c\u90a3\u4e48\u5982\u4f55\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u5462\uff1f\n\n\u5176\u5b9e\u5f88\u660e\u663e\uff0c\u6309\u5403\u4e0e\u88ab\u5403\u7684\u5173\u7cfb\u5efa\u7acb\u4e00\u5f20\u6709\u5411\u56fe\uff08\u98df\u7269\u5411\u6d88\u8d39\u8005\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff09\u6309\u7167\u62d3\u6251\u6392\u5e8f\u987a\u5e8f\u52a0\u70b9\u5c31\u884c\u4e86\u3002\n\n\u81f3\u6b64\u95ee\u9898\u5df2\u7ecf\u5b8c\u7f8e\u89e3\u51b3\u3002\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nvector<int> a[100001],shi[100001],son[100001];\nqueue<int> ling;\nint ru[100001],fa[100001][20],deep[100001],ans[100001];\nint LCA(int aa,int bb)//\u7528\u500d\u589e\u6cd5\u6c42LCA\n{\n    if(deep[aa]>deep[bb]) swap(aa,bb);\n    int ff=deep[bb]-deep[aa];\n    for(int i=0;(1<<i)<=ff;i++)\n        if((1<<i)&ff)\n            bb=fa[bb][i];\n    if(aa!=bb)\n    {\n        for(int i=18;i>=0;i--)\n            if(fa[aa][i]!=fa[bb][i])\n            {\n                aa=fa[aa][i];\n                bb=fa[bb][i];\n            }\n        aa=fa[aa][0];\n    }\n    return aa;\n}\nvoid dfs(int o)//\u6811\u4e0a\u524d\u7f00\u548c\n{\n    if(son[o].empty()) {ans[o]=1;return;}\n    for(int i=0;i<son[o].size();i++)\n    {\n        if(ans[son[o][i]]==0) dfs(son[o][i]);\n        ans[o]+=ans[son[o][i]];\n    }\n    ans[o]++;\n}\nint main()\n{\n    int n;\n    cin>>n;\n    memset(ru,0,sizeof(ru));\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        while(x!=0)\n        {\n            a[x].push_back(i);\n            ru[i]++;\n            shi[i].push_back(x);\n            scanf(\"%d\",&x);\n        }\n    }\n    memset(fa,0,sizeof(fa));\n    memset(deep,0,sizeof(deep));\n    deep[70000]=1;\n    for(int i=1;i<=n;i++)\n        if(ru[i]==0) \n        {\n            ling.push(i);\n            shi[i].push_back(70000);\n        }\n    while(!ling.empty())//\u62d3\u6251\u6392\u5e8f\uff08\u540c\u65f6\u52a0\u70b9\uff09\n    {\n        int yu=ling.front();\n        ling.pop();\n        int lca=shi[yu][0];\n        if(shi[yu].size()!=1)\n            for(int i=1;i<shi[yu].size();i++)\n                lca=LCA(lca,shi[yu][i]);//\u628a\u6bcf\u4e2a\u8282\u70b9\u90fd\u8fde\u63a5\u5728\u5b83\u7684\u6240\u6709\u98df\u7269\u7684LCA\u4e0a\n        deep[yu]=deep[lca]+1;//\u65b0\u52a0\u5165\u8282\u70b9\u7684\u6df1\u5ea6\n        fa[yu][0]=lca;\n        son[lca].push_back(yu);\n        for(int i=1;i<=18;i++)//\u66f4\u65b0\u65b0\u52a0\u5165\u8282\u70b9\u7684\u500d\u589e\u6570\u7ec4\n            if(fa[yu][i-1])\n                fa[yu][i]=fa[fa[yu][i-1]][i-1];\n        for(int i=0;i<a[yu].size();i++)\n        {\n            ru[a[yu][i]]--;\n            if(ru[a[yu][i]]==0) ling.push(a[yu][i]);\n        }\n    }\n    memset(ans,0,sizeof(ans));\n    dfs(70000);//\u6c42\u6811\u4e0a\u524d\u7f00\u548c\n    for(int i=1;i<=n;i++) cout<<(ans[i]-1)<<endl;\n    return 0;\n}\n```",
        "postTime": 1514536454,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "# P2597 [ZJOI2012]\u707e\u96be\n\n### \u5f00\u5934\u8bed\n\n\u8fd9\u6b21\u4fee\u6539\u4e86\u51e0\u4e2a\u5c0f $BUG$ \u548c\u6ca1\u6709\u89e3\u91ca\u6e05\u695a\u7684\u5730\u65b9\u3002\n\n\u597d\u4e0d\u5bb9\u6613\u5199\u9053\u7d2b\u9898\uff0c\u5177\u4f53\u89e3\u6cd5\u662f\u542c\u4e86 $dalao$ \u7684\u601d\u8def\uff0c\u7422\u78e8\u4e86\u534a\u5929\uff0c\u4e5f $WA$ \u4e86\u5f88\u591a\u6b21\u4e4b\u540e\u624d\u6478\u7d22\u51fa\u6765\u7684\u3002\n\n------------\n\n### \u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u77e5\u9053\uff0c\u4e00\u4e2a\u751f\u7269\u706d\u7edd\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\uff1f\u662f\u8fd9\u4e2a\u751f\u7269\u6240\u6709\u7684\u98df\u7269\u90fd\u706d\u7edd\u3002\n\n\u5047\u8bbe\u4e00\u4e2a\u751f\u7269 $A$\uff0c$A$ \u706d\u7edd\u7684\u662f\u56e0\u4e3a\u5176\u98df\u7269\u5168\u90e8\u706d\u7edd\u3002\u90a3\u4e48\uff0c\u5982\u679c\u8fd9\u662f\u4e00\u79cd\u751f\u7269 $B$ \u7684\u706d\u7edd\u9020\u6210\u7684\uff08\u56e0\u4e3a\u9898\u76ee\u662f\u8bf4\u67d0\u4e00\u79cd\u751f\u7269\u706d\u7edd\u9020\u6210\u7684\u5f71\u54cd\uff09\uff0c\u90a3\u4e48 $B$ \u5fc5\u7136\u662f $A$ \u7684\u6240\u6709\u98df\u7269\u7684\u5171\u540c\u98df\u7269\uff0c\u5426\u5219 $B$ \u7684\u706d\u7edd\u4e0d\u53ef\u80fd\u5bfc\u81f4 $A$ \u7684\u706d\u7edd\uff08\u56e0\u4e3a $A$ \u8fd8\u53ef\u4ee5\u4ee5\u5176\u4ed6\u6ca1\u6709\u706d\u7edd\u7684\u98df\u7269\u4e3a\u98df\uff09\u3002\n\n\u4e5f\u5c31\u662f\u628a\u6240\u6709\u7684\u751f\u4ea7\u8005\u7528\u201c\u592a\u9633\u201d\u8fde\u5728\u4e00\u8d77\uff08\u628a\u68ee\u6797\u8fde\u6210\u4e00\u68f5\u6811\uff09\uff0c\u4ece\u201c\u592a\u9633\u201d\u8d70\u5230\u67d0\u70b9 $A$ \u7684\u8def\u5f84\u4e2d\u5fc5\u987b\u7ecf\u8fc7\u7684\u70b9\uff08\u7b80\u79f0\u4e3a\u5fc5\u7ecf\u70b9\uff09\u4e2d\u79bb $A$ \u6700\u8fd1\u7684\u70b9 $B$\uff08\u6700\u8fd1\u5fc5\u7ecf\u70b9\uff09\uff0c\u5982\u679c $B$ \u706d\u7edd\u4e86\uff0c$A$ \u4e5f\u4e00\u5b9a\u4f1a\u706d\u7edd\u3002\u5fc5\u7ecf\u70b9\u5fc5\u7136\u662f $A$ \u7684\u7236\u4eb2\u8282\u70b9\uff08\u5176\u98df\u7269\uff09\u7684\u516c\u5171\u7956\u5148\uff0c\u800c\u6700\u8fd1\u5fc5\u7ecf\u70b9\u5c31\u662f\u5176\u7236\u4eb2\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n\u7136\u540e\u6211\u4eec\u627e\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u8fd1\u5fc5\u7ecf\u70b9\uff0c\u8fde\u4e0a\u4e00\u6761\u8fb9\uff0c\u7ec4\u6210\u4e00\u9897\u65b0\u6811\uff08\u6839\u4e3a\u201c\u592a\u9633\u201d\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u5c31\u662f\u8fd9\u4e2a\u751f\u7269\u7684\u707e\u96be\u503c\u3002\n\n\u6700\u540e\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4f46\u5f88\u91cd\u8981\u7684\u70b9\uff0c\u5c31\u662f\u8981\u4e00\u8fb9\u6c42 $LCA$ \u4e00\u8fb9\u4fee\u6539\u8fd9\u68f5\u8001\u6811\u3002\n\n\u55ef\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u5c31\u662f\u56e0\u4e3a\u8fd9\u662f\u4e00\u5f20\u98df\u7269\u7f51\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hmr56v1e.png)\n\n\u4e5f\u5c31\u662f $C$ \u5403 $B$ \u548c $A$,\u4f46\u662f $B$ \u53c8\u5403 $A$ \uff0c\u8fd9\u6837\u505a $LCA$ \u65f6\u4f1a\u51fa\u73b0 $BUG$ \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6c42\u5f97 $C$ \u7684\u6700\u8fd1\u5fc5\u7ecf\u70b9\uff0c\u5c06 $C$ \u7684\u6240\u6709\u98df\u7269\u6574\u5408\u4e3a\u4e00\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u6700\u8fd1\u5fc5\u7ecf\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u5f97\u6700\u8fd1\u5fc5\u7ecf\u70b9\u540e\u518d\u66f4\u65b0\u3002 \n\n------------\n\n### \u5b9e\u73b0\n\n\u77e5\u9053\u601d\u8def\u4e4b\u540e\uff0c\u8003\u8651\u600e\u4e48\u5b9e\u73b0\u3002\u9996\u5148\uff0c\u6211\u4eec\u8981\u505a\u4e00\u904d $TopSort$\uff0c\u5f97\u5230\u8fd9\u4e9b\u751f\u7269\u7684\u62d3\u6251\u987a\u5e8f\uff0c\u4ee5\u4fbf\u5728\u627e\u6700\u8fd1\u5fc5\u7ecf\u70b9\u65f6\u6700\u8fd1\u5fc5\u7ecf\u70b9\u5df2\u7ecf\u8fde\u5728\u65b0\u6811\u4e0a\u4e86\u3002\u7136\u540e\u6211\u4eec\u518d\u7528 $LCA$ \u6c42\u5f97\u6700\u8fd1\u5fc5\u7ecf\u70b9\uff0c\u7136\u540e\u5efa\u6811\u3002\u6700\u540e\u7528 $DFS$ \u6c42\u5f97\u5b50\u6811\u5927\u5c0f\u3002\n\n------------\n\n### \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 65544\nint n,cnt1=0,cnt2=0,cnt3=0,h1[N],h2[N],h3[N],sum[N],total[N],size[N],fa[N][30],d[N];\nqueue<int>q;\nstruct edge{\n\tint v,nxt;\n}e1[500010],e2[500010],e3[500010];\nvoid add1(int u,int v){\n\te1[++cnt1]=(edge){v,h1[u]};\n\th1[u]=cnt1;\n}\nvoid add2(int u,int v){\n\te2[++cnt2]=(edge){v,h2[u]};\n\th2[u]=cnt2;\n}\nvoid add3(int u,int v){\n\te3[++cnt3]=(edge){v,h3[u]};\n\th3[u]=cnt3;\n}\nvoid get_date(int x){\n\twhile(1){\n\t\tint y;\n\t\tscanf(\"%d\",&y);\n\t\tif(y==0)break;\n\t\tadd1(y,x);\n\t\tadd2(x,y);\n\t\tsum[x]++;\n\t}\n\tif(sum[x]==0){\n\t\tq.push(x);\n\t\tadd2(x,0);\n\t}\n}\nvoid top_sort(){\n\tfor(int i=1;i<=n;i++){\n\t\tint k=q.front();\n\t\tq.pop();\n\t\ttotal[i]=k;\n\t\tfor(int j=h1[k];j;j=e1[j].nxt){\n\t\t\tsum[e1[j].v]--;\n\t\t\tif(sum[e1[j].v]==0)q.push(e1[j].v);\n\t\t}\n\t}\n}\nint LCA(int u,int v){\n\tif(d[u]<d[v])swap(u,v);\n\tfor(int i=20;i>=0;i--){\n\t\tif(d[fa[u][i]]>=d[v])u=fa[u][i];\n\t}\n\tif(u==v)return u;\n\tfor(int i=20;i>=0;i--){\n\t\tif(fa[u][i]!=fa[v][i])u=fa[u][i],v=fa[v][i];\n\t}\n\treturn fa[u][0];\n}\nvoid update(int x,int fx){\n\tfa[x][0]=fx;\n\td[x]=d[fx]+1;\n\tfor(int i=1;(1<<i)<=d[x];i++){\n\t\tfa[x][i]=fa[fa[x][i-1]][i-1];\n\t}\n}\nvoid get_size(int x){\n\tsize[x]=1;\n\tfor(int i=h3[x];i;i=e3[i].nxt){\n\t\tget_size(e3[i].v);\n\t\tsize[x]+=size[e3[i].v];\n\t}\n\treturn;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tget_date(i);\n\t}\n\ttop_sort();\n\td[0]=1;\n\tfor(int i=1;i<=n;i++){\n\t\tint k=total[i];\n\t\tint fp=e2[h2[k]].v;\n\t\tfor(int j=e2[h2[k]].nxt;j;j=e2[j].nxt){\n\t\t\tfp=LCA(fp,e2[j].v);\n\t\t}\n\t\tupdate(k,fp);\n\t\tadd3(fp,k);\n\t}\n\tget_size(0);\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%d\\n\",size[i]-1);\n\t}\n} \n```\n------------\n\n### \u7ed3\u675f\u8bed\n\n### \u795d\u5927\u5bb6\u5207\u7d2b\u9898\u5feb\u4e50\uff01\n\n------------\n\n# \u9ed1\u5ba2\u51fa\u54c1",
        "postTime": 1583505724,
        "uid": 189394,
        "name": "\u9ed1\u5ba2",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u8fd9\u4e48\u591a\u5e74\u4e86\uff0c\u7b2c\u4e00\u6b21\u6ca1\u6284\u9898\u89e3\uff08\u4f46\u8fd8\u662f\u770b\u4e86\u81ea\u5df1\u7684\u677f\u5b50\uff09\u7136\u540e 1 A \u4e86\n\n\u7559\u4e0b\u4e86\u5e78\u798f\u7684\u6cea\u6c34...\n\n-----\n\n\u6c5f\u4e00\u4e0b\u5927\u81f4\u601d\u8def\uff1a\n\n1. \u9996\u5148\u770b\u51fa\u8fd9\u9053\u9898\u662f\u652f\u914d\u6811\n\n\u600e\u4e48\u770b\u51fa\u6765\u7684?~~\uff08\u663e\u7136\u554a\uff09~~ \u3010\u96fe\n\n>\u6211\u4eec\u770b\u5230\u5220\u9664\u67d0\u4e2a\u70b9\u540e\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a**\u539f\u5148\u6709\u5165\u5ea6**\u7684\u70b9\u8bf4\uff0c\u5982\u679c\u56e0\u6b64\u6ca1\u6709\u5165\u5ea6\uff0c\u90a3\u4e48\u5b83\u5c31**\u6b7b**\u4e86\uff0c\u5e76\u4e14**\u5220\u9664\u4e0e\u5b83\u76f8\u8fde\u7684\u8fb9**\uff0c\u7136\u540e**\u91cd\u590d\u8fed\u4ee3**\u4ee5\u4e0a\u6b65\u9aa4\u76f4\u5230\u6ca1\u6709\u70b9**\u6b7b**\u53bb\n\n>\u7136\u540e\u6211\u4eec\u6c5f\u8fb9\u53cd\u5411\u7136\u540e\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff1a\u5982\u679c\u8bf4\u5220\u9664\u4e86\u4e00\u4e2a\u70b9\u540e\u67d0\u4e2a\u70b9\u65e0\u6cd5\u8fde\u5411\u539f\u56fe\u4e2d\u65e0\u5165\u5ea6\u7684\u70b9\uff08\u6ce8\u610f\u662f\u539f\u56fe\u4e2d\u7684\u5165\u5ea6\uff0c\u53cd\u56fe\u4e2d\u5c31\u662f\u51fa\u5ea6\uff09\uff0c\u90a3\u4e48\u5b83\u5c31**\u6b7b**\u4e86\n\n\u5176\u5b9e\u5bf9\u4e8e**\u6b7b**\u7684\u5b9a\u4e49\u5c31\u662f\u652f\u914d\u6811\u4e2d\u7684 **\u88ab\u652f\u914d** \u4e86\n\n\u90a3\u4e48\u6211\u4eec\u8981\u7b97\u7684\u5c31\u662f**\u4e00\u4e2a\u70b9\u80fd\u591f\u652f\u914d\u7684\u70b9\u6570**\uff0c\u7136\u540e\u6b64\u9898\u4e2d\u81ea\u5df1\u4e0d\u7b97\u652f\u914d\u81ea\u5df1\uff0c\u7b54\u6848\u8981-1\n\n\u5173\u4e8e\u652f\u914d\u6811\u7684\u5b66\u4e60\u70b9[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P5180)\n\uff0c\u9898\u89e3\u91cc\u9762\u6c5f\u5f97\u5f88\u8be6\u7ec6\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u975e\u5e38 **\u660e\u4e86** \u4e86\n\n2. \u5269\u4e0b\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5904\u7406\uff1a\u539f\u56fe\u4e2d\u6709**\u591a\u4e2a\u70b9\u6ca1\u5165\u5ea6**\u7684\u60c5\u51b5\n\n>\u56e0\u4e3a\u67d0\u4e2a\u70b9\u4f1a\u6b7b\u7684\u524d\u63d0\u662f\u5b83\u65e0\u6cd5\u5230\u8fbe**\u539f\u56fe\u4e2d\u4efb\u610f\u4e00\u4e2a\u65e0\u5165\u5ea6\u7684\u70b9**\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5efa\u4e00\u4e2a\u70b9\uff0c\u5411 **\u539f\u56fe\u4e2d\u6240\u6709\u65e0\u5165\u5ea6\u7684\u70b9** \u8fde\u4e00\u6761\u8fb9,\u8fd9\u6837\u4e00\u6765\u95ee\u9898\u5c31\u80fd\u89e3\u51b3\u4e86\n\n\u8fd9\u4e0d\u662f\u7f51\u7edc\u6d41\u7684\u601d\u8def\u4e48\uff08\u5c0f\u58f0\u8bf4\uff09\n\n3. \u9ed8\u9ed8\u6572\u4ee3\u7801\n\n```\n//by Judge\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int M=7e4+7;\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ninline void print(int x,char chr='\\n'){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]=chr;\n} int n,pat,tim,head[M],pre[M],las[M],cdy[M];\nint dfn[M],id[M],du[M],fa[M],bel[M];\nint val[M],sdom[M],idom[M],siz[M];\nstruct Edge{ int to,nxt; }e[M<<3];\ninline void add(int* h,int x,int y){\n\te[++pat]=(Edge){y,h[x]},h[x]=pat;\n}\n#define v e[i].to\nvoid dfs(int u){ dfn[u]=++tim,id[tim]=u;\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t\tif(!dfn[v]) fa[v]=u,dfs(v);\n}\ninline int Min(int a,int b){\n\treturn dfn[sdom[a]]<dfn[sdom[b]]?a:b;\n}\ninline int find(int x){\n\tif(x==bel[x]) return x; int rt=find(bel[x]);\n\treturn val[x]=Min(val[bel[x]],val[x]),bel[x]=rt;\n}\ninline void tarjan(){\n\tfor(int j=tim,u;j>1;--j){ u=id[j];\n\t\tfor(int i=pre[u];i;i=e[i].nxt)\n\t\t\tfind(v),sdom[u]=sdom[Min(u,val[v])];\n\t\tadd(las,sdom[u],u),bel[u]=fa[u],u=fa[u];\n\t\tfor(int i=las[u];i;i=e[i].nxt)\n\t\t\tfind(v),idom[v]=sdom[val[v]]^u?val[v]:u;\n\t}\n\tfor(int i=2,u;i<=tim;++i) u=id[i],\n\t\tidom[u]=idom[idom[u]^sdom[u]?idom[u]:u];\n}\ninline void calc(int u){ siz[u]=1;\n\tfor(int i=cdy[u];i;i=e[i].nxt)\n\t\tcalc(v),siz[u]+=siz[v];\n}\nint main(){\n#ifdef Judge\n\tfreopen(\"1.in\",\"r\",stdin);\n#endif\n\tn=read();\n\tfor(int i=1,k;i<=n;++i)\n\t\tfor(k=read();k;k=read(),++du[i])\n\t\t\tadd(head,k,i),add(pre,i,k);\n\tfor(int i=1;i<=n+1;++i)\n\t\tval[i]=bel[i]=sdom[i]=i;\n\tfor(int i=1;i<=n;++i) if(!du[i])\n\t\tadd(head,n+1,i),add(pre,i,n+1);\n\tdfs(n+1),tarjan(),pat=0;\n\tfor(int i=1;i<=n;++i) if(idom[i])\n\t\tadd(cdy,idom[i],i); calc(n+1);\n\tfor(int i=1;i<=n;++i) print(siz[i]-1);\n\treturn Ot(),0;\n}\n```\n\n",
        "postTime": 1551588247,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "ps:\u8be5\u9898\u89e3\u6709\u501f\u9274 @Mrnobody \u7684\u9898\u89e3.\n\n---- \n- \u82e5\u628a\u751f\u4ea7\u8005\u770b\u505atopo\u8d77\u70b9,\u904d\u5386\u6574\u5f20\u56fe,\u4f1a\u53d1\u73b0\u8ba1\u7b97\u4e00\u4e2a\u70b9\u80fd\u5f71\u54cd\u5230\u7684\u70b9\u6bd4\u8f83\u9ebb\u70e6,\u4e0d\u5982\u8ba1\u7b97\u88ab\u5f71\u54cd\u5230\u7684\u70b9\u5bf9\u5b83\u4e0a\u7ea7\u7684\u8d21\u732e;      \n\u7531\u9898\u610f,\u706d\u7edd\u662f\u6709\u9aa8\u724c\u6548\u5e94\u7684,\u8003\u8651\u6309\u62d3\u6251\u5e8f\u5efa\u6811,\u8ba1\u7b97\u5bf9\u4e0a\u7ea7\u7684\u8d21\u732e\u7684\u65b9\u6cd5\u53ef\u4ee5dfs\u4e0a\u7ea7\u518d\u6c42\u5b50\u6811\u7684\u540e\u7f00\u548c(\u8bf4\u767d\u4e86\u5c31\u662f\u6c42\u5b50\u6811\u5927\u5c0f).   \n   \n- \u53c8\u7531\u9898\u610f\u5f97:\u4e00\u4e2a\u751f\u7269\u706d\u7edd\u662f\u56e0\u4e3a\u4ed6\u7684\u98df\u7269\u5168\u90e8\u706d\u7edd,\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u7236\u4eb2\u4e00\u5b9a\u662f\u5b83\u6240\u6709\u98df\u7269\u7684\u98df\u7269(\u6216\u8005\u672c\u8eab),\u5c31\u50cf\u6811\u4e0a\u7684lca.\u6240\u4ee5\u5efa\u6811\u5c31\u662f\u8fde\u4e00\u6761$(Upreys.lca)->(u)$\u7684\u8fb9  \n\n- \u6ce8\u610f,\u5fc5\u987b\u7b49\u5230u\u7684\u5165\u5ea6\u4e3a0\u65b9\u53ef\u67e5\u8be2lca,\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u6240\u6709lca\u7684\u7956\u5148\u5df2\u7ecf\u88ab\u5904\u7406.\n\n----\n\n\u4ee3\u7801:\n\n```\n#include<bits/stdc++.h>\n#define _ 565535\nusing namespace std;\nint n,rd[_],A[_],dep[_],st[_][21];\nvector<int>prey[_],Top[_],tr[_];\nint get_lca(int a,int b){\n\tif(dep[a]<dep[b])swap(a,b);\n\tfor(int i=20;~i;--i)if(dep[st[a][i]]>=dep[b])a=st[a][i];\n\tif(a==b)return a;\n\tfor(int i=20;~i;--i)if(st[a][i]!=st[b][i])a=st[a][i],b=st[b][i];\n\treturn st[a][0];\n}\nvoid solve(int x){\n\tint lca=prey[x][0];\n\tfor(int i=1,l=prey[x].size();i<l;i++)\n\t\tlca=get_lca(lca,prey[x][i]);\n\ttr[lca].push_back(x);\n\tdep[x]=dep[lca]+1;\n\tst[x][0]=lca;\t\n\tfor(int i=1;st[st[x][i-1]][i-1];i++)\n\t\tst[x][i]=st[st[x][i-1]][i-1];\n}\nvoid topo(){\n\tqueue<int>q;\n\tfor(int i=1;i<=n;i++)\n\t\tif(!rd[i])\n\t\t\tTop[0].push_back(i),prey[i].push_back(0),rd[i]++;\n\tq.push(0);\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=0,l=Top[u].size();i<l;i++){\n\t\t\tint v=Top[u][i];\n\t\t\trd[v]--;\n\t\t\tif(rd[v]==0)q.push(v),solve(v);\n\t\t}\n\t}\n}\nvoid calc(int u){\n\tA[u]=1;\n\tfor(int i=0,l=tr[u].size();i<l;i++){\n\t\tint v=tr[u][i];\n\t\tcalc(v);\n\t\tA[u]+=A[v];\n\t}\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1,x;i<=n;i++)\n\t\twhile(1){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x)Top[x].push_back(i),rd[i]++,prey[i].push_back(x);\n\t\t\telse break;\n\t\t}\n\ttopo();\n\tcalc(0);\n\tfor(int i=1;i<=n;i++)printf(\"%d\\n\",A[i]-1);\n\treturn 0;\n}\n\n```",
        "postTime": 1540903058,
        "uid": 69935,
        "name": "GUO\u5927\u4fa0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "1\uff1an <= 3k \u53ef\u4ee5\u9006\u62d3\u6251\u5e8f\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u6c42\u4e00\u904d\n\n2\uff1an <= 2 \\*short \uff0c \u663e\u7136\u8fd9\u6837\u4e0d\u884c\uff0c\u4f46\u662f\u8fd9\u9898\u548c\u62d3\u6251\u6392\u5e8f\u7684\u5173\u7cfb\u5f88\u7d27\u5bc6\uff0c\u8003\u8651\u5229\u7528\u62d3\u6251\u5e8f\u6765\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\n\n3\uff1a\uff08\u8fd9\u91cc\u8981\u6784\u9020\u4e00\u4e0b\uff09\uff0c\u4e00\u79cd\u751f\u7269\u7684\u706d\u7edd\u7684\u539f\u56e0\u662f\u5b83\u7684\u6240\u6709\u98df\u7269\u7684\u706d\u7edd\uff0c\u8fd9\u6837\u9012\u5f52\u4e0b\u53bb\u6240\u6709\u751f\u7269\u4f1a\u805a\u5230\u4e00\u4e2a\u70b9\u4e0a\uff0c\u5f88\u50cfLCA\n\n4\uff1a\u90a3\u4e48\u600e\u4e48\u627e\u5230\u8fd9\u4e2aLCA\u5462\uff0c\u5f97\u81ea\u5df1\u5efa\u4e00\u9897\u6811\n\n5\uff1a\u6211\u4eec\u5c06\u4e00\u4e2a\u70b9\u76f4\u63a5\u6027\u706d\u7edd\u540e\u4f1a\u5f15\u53d1\u706d\u7edd\u7684\u751f\u7269\u4f5c\u4e3a\u5b83\u7684\u5b50\u6811\uff0c\u90a3\u4e48lca\u53ef\u4ee5\u76f4\u63a5\u500d\u589e\u6c42\u51fa\uff0c\u52a8\u6001\u7ef4\u62a4\u4e0b\u7a00\u758f\u8868\u5373\u53ef\n\n\n\n\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint n , root , rd[N];\nint dep[N] , fa[N][20] , siz[N];\nvector<int> top[N] , food[N] , newe[N];\nint lca(int a , int b)\n{\n    if(dep[a] < dep[b]) swap(a , b);\n    for(int i = 18; i >= 0; i--)\n        if(dep[a] - (1 << i) >= dep[b])\n            a = fa[a][i];\n    if(a == b) return a;\n    for(int i = 18; i >= 0; i--)\n        if(fa[a][i] != fa[b][i])\n            a = fa[a][i] , b = fa[b][i];\n    return fa[a][0];\n}\nvoid solve(int x)    /*\u5bf9x\u70b9\u5efa\u8fb9*/\n{\n    int t = food[x][0];\n    for(int i = 1; i < (int) food[x].size(); i++) {\n        t = lca(t , food[x][i]);\n    }\n    newe[t].push_back(x);\n    dep[x] = dep[t] + 1;\n    fa[x][0] = t;\n    for(int j = 1; j <= 18; j++)\n        if(fa[x][j - 1]) fa[x][j] = fa[fa[x][j-1]][j-1];\n}\nvoid top_sort()\n{\n    for(int i = 1; i <= n; i++) \n        if(!rd[i]) \n        {\n            top[0].push_back(i); \n            food[i].push_back(0);     \n        }\n    queue<int> q;\n    q.push(0); \n    while(!q.empty())\n    {\n        int x = q.front();\n        q.pop();\n        for(int i = 0; i < (int) top[x].size(); i++) {\n            int y = top[x][i];\n            if(--rd[y] <= 0) {\n                q.push(y);\n                solve(y); \n            }\n        }\n    }\n}\nvoid dfs(int x)\n{\n    siz[x] = 1;\n    for(int i = 0; i < (int) newe[x].size(); i++) {\n        dfs(newe[x][i]);\n        siz[x] += siz[newe[x][i]];\n    }\n}\nint main()\n{\n    scanf(\"%d\", &n);\n    for(int i = 1, x; i <= n; i++) {\n        while(scanf(\"%d\", &x) && x) {\n            top[x].push_back(i);\n            rd[i]++; \n            food[i].push_back(x);\n        }\n    }\n    top_sort();\n    dfs(root);\n    for(int i = 1; i <= n; i++) printf(\"%d\\n\", siz[i] - 1);\n    return 0;\n}\n\n```",
        "postTime": 1510186387,
        "uid": 51236,
        "name": "Mrnobody",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u5f00\u95e8\u89c1\u5c71\u3002\n\n**\u5b9a\u7406\uff1a** \u751f\u7269\u4e4b\u95f4\u7684\u706d\u7edd\u7ed3\u6784\u5f62\u6210\u4e86\u4e00\u4e2a\u68ee\u6797\uff0c\u68ee\u6797\u4e0a\u7684\u8282\u70b9\u7684\u706d\u7edd\u4f1a\u4e14\u4ec5\u4f1a\u5bfc\u81f4\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u7684\u706d\u7edd\u3002~~\u597d\u60e8~~\n\n**\u5206\u6790\uff1a** \u5bf9\u4e8e\u751f\u4ea7\u8005\uff0c\u4e0d\u59a8\u7ed9\u5b83\u6dfb\u52a0\u4e00\u4e2a\u5047\u8c61\u7684\u98df\u7269\u2014\u2014\u592a\u9633\u3002\u90a3\u4e48\u5b9a\u7406\u4e2d\u7684\u68ee\u6797\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u6811\uff0c\u53ef\u4ee5\u79f0\u5b83\u4e3a\u201c\u706d\u7edd\u6811\u3002\u201d\n\n\u4e0b\u9762\u8bf4\u660e\u5982\u4f55\u901a\u8fc7\u589e\u91cf\u6cd5\u628a\u706d\u7edd\u6811\u5efa\u51fa\u6765\uff0c\u540c\u65f6\u4e5f\u662f\u5bf9\u706d\u7edd\u6811\u7684\u5b58\u5728\u7684\u8bc1\u660e\u3002\n\n\u9996\u5148\uff0c\u628a\u98df\u7269\u7f51\u6309\u7167\u4ece\u730e\u7269\u5230\u6355\u98df\u8005\u7684\u987a\u5e8f\u62d3\u6251\u6392\u5e8f\uff0c\u6709\u4e14\u4ec5\u6709\u592a\u9633\u6ca1\u6709\u4efb\u4f55\u7684\u5165\u8fb9\uff0c\u6240\u4ee5\u62d3\u6251\u6392\u5e8f\u7684\u7b2c\u4e00\u4e2a\u5c31\u662f\u592a\u9633\u3002\u628a\u592a\u9633\u52a0\u5165\u706d\u7edd\u6811\uff0c\u6b64\u65f6\uff0c\u706d\u7edd\u6811\u53ea\u6709\u592a\u9633\u4e00\u4e2a\u70b9\u3002\n\n\u4e4b\u540e\uff0c\u4e00\u6b21\u8003\u8651\u6bcf\u4e2a\u751f\u7269$i$\u3002\u5df2\u7ecf\u6784\u5efa\u597d\u6392\u5e8f\u5728$i$\u4e4b\u524d\u7684\u751f\u7269\u7ec4\u6210\u7684\u706d\u7edd\u6811\uff0c\u5047\u8bbe$i$\u751f\u7269\u7684\u98df\u7269\u6709$p_1,p_2,\\cdots,p_k$,\uff08\u8fd9\u4e9b\u8282\u70b9\u5728\u62d3\u6251\u5e8f\u4e2d\u6bd4$i$\u9760\u524d\uff09\uff0c$i$\u4f1a\u706d\u7edd\uff0c\u5f53\u4e14\u4ec5\u5f53$p_1,p_2,\\cdots,p_k$\u5168\u90e8\u706d\u7edd\uff0c\u5f53\u4e14\u4ec5\u5f53$LCA(p_1,p_2,\\cdots,p_k)$\u706d\u7edd\u3002\n\n\u4e8e\u662f\uff0c\u53ef\u4ee5\u5728\u6811\u4e0a\u52a0\u4e0a$LCA$\u5230$i$\u7684\u8fb9\uff0c\u628a$i$\u52a0\u5230\u6811\u4e2d\u3002\n\n\u5904\u7406\u5b8c\u6240\u6709\u7684\u751f\u7269\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u706d\u7edd\u6811\u3002\n\n\u4e00\u65e6\u5f97\u5230\u706d\u7edd\u6811\uff0c\u6bcf\u4e2a\u751f\u7269\u7684\u707e\u96be\u503c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f$-1$\u6765\u8ba1\u7b97\u3002\n\n\u8fd9\u4fbf\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21$DFS$\u6765\u89e3\u51b3\u3002\n\n**\u590d\u6742\u5ea6\u5206\u6790\uff08$LCA$\u4f7f\u7528\u500d\u589e\u7b97\u6cd5\uff09:** \u62d3\u6251\u6392\u5e8f$O(n+m)$,\u6c42$LCA$\u5171$m$\u6b21\uff0c\u6bcf\u6b21$O(log_2n)$\uff0c\u52a0\u70b9\u5171$n$\u6b21\uff0c\u6bcf\u6b21$O(log_2n)$,$DFS$\u4e3a$O(n)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a$O(nlog_2n+mlog_2m)$",
        "postTime": 1587458855,
        "uid": 174303,
        "name": "_NaCly_Fish",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u8003\u8651\u5230\u98df\u7269\u7f51\u7684\u7ed3\u6784\u6ca1\u6cd5\u76f4\u63a5\u7edf\u8ba1\u7b54\u6848\uff0c\u6211\u4eec\u8bd5\u7740\u8f6c\u5316\u4e00\u4e0b\u3002\n\n\u8003\u8651\u4e00\u4e2a\u70b9\u5982\u679c\u8981\u6b7b\u7684\u5f7b\u5e95\uff0c\u90a3\u4e48\u4ed6\u5c31\u4e0d\u80fd\u6709\u4efb\u4f55\u7684\u98df\u7269\uff0c\u4e5f\u5c31\u662f\u4ed6\u7684\u6240\u6709\u7236\u4eb2\u8282\u70b9\u5fc5\u987b\u5168\u90e8\u6b7b\u6389\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8981\u8ba9\u4e00\u4e2a\u70b9\u96c6\u5168\u90e8\u6b7b\u6389\uff0c\u53ea\u8981\u6ee1\u8db3\u6b7b\u6389\u7684\u70b9\u5728\u8fd9\u4e2a\u70b9\u96c6\u7684$lca$\u5230\u6839\u7684\u8def\u5f84\u4e0a\u5373\u53ef\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8be5\u70b9\u76f4\u63a5\u8fde\u5230$lca$\u4e0a\u3002\n\n\u8fd9\u6837\u6211\u4eec\u6309\u7167\u62d3\u6251\u5e8f\u5efa\u56fe\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u5c31\u662f\u5b50\u6811\u5927\u5c0f\u3002\n\n[$code$](https://pastebin.com/B8LS5Xcc)",
        "postTime": 1585029295,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a~~\u8f83\u4e3a\u8be6\u7ec6\u7684~~\u89e3\u91ca\n\n\n------------\n\n### \u89e3\u9898\u601d\u8def\n\n#### 1.\n\u9996\u5148\u8bfb\u5b8c\u9898\u540e\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u3002\n\n\u53c8\u770b\u5230\u751f\u4ea7\u8005\u7684\u5b58\u5728\u2026\u2026\u80af\u5b9a\u4f1a\u60f3\u5230\u62d3\u6251\u6392\u5e8f\u554aqwq\n\n\u4f46\u662f\u611f\u89c9\u62d3\u6251\u4e86\u4e4b\u540e\u6ca1\u4ec0\u4e48\u7528\u6b38\uff0c\u6362\u601d\u8def\uff01\n\n#### 2.\n\n\u6211\u4eec\u518d\u9006\u63a8\u4e00\u4e0b\uff0c\u9898\u76ee\u8981\u6c42\u4f60\u6c42\u6bcf\u79cd\u751f\u7269\u706d\u7edd\u540e\u4f1a\u5e26\u52a8\u706d\u7edd\u5176\u4ed6\u751f\u7269\u591a\u5c11\u4e2a\u3002\n\n\u7136\u540e\u4f60\u5c31\u4f1a\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u706d\u7edd\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u5c1d\u8bd5\u7528\u6811\u6765\u8868\u793a\u8fd9\u4e2a\u706d\u7edd\u5173\u7cfb\uff1a\u5982\u679c\u751f\u7269i\u706d\u7edd\uff0c\u90a3\u4e48i\u5728\u706d\u7edd\u6811\u4e0a\u7684\u513f\u5b50\u5c31\u4f1a\u706d\u7edd\uff0c\u6700\u7ec8\u7ed3\u679c\u5c31\u662fi\u8282\u70b9\u5f80\u4e0b\u6c42\u6811\u4e0a\u524d\u7f00\u548c\u5373\u53ef\u3002\uff08\u5c31\u662f\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf\uff09\n\n#### 3.\n\n\u90a3\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u53bb\u5efa\u7acb\u8fd9\u68f5\u706d\u7edd\u6811\u5462\uff1f\n\n\u628a\u95ee\u9898\u805a\u7126\u5230\u67d0\u4e00\u4e2a\u70b9i\u4e0a\uff0c\u5982\u679ci\u8981\u706d\u7edd\uff0c\u524d\u63d0\u6761\u4ef6\u662fi\u7684\u98df\u7269\u90fd\u706d\u7edd\u4e86\uff0c\u800c\u98df\u7269\u90fd\u706d\u7edd\u7684\u524d\u63d0\u5219\u662f\u5b83\u4eec\u706d\u7edd\u6811\u4e0a\u7684\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u706d\u7edd\u4e86\u3002\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u98df\u7269\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u5c31\u80fd\u5efa\u7acb\u706d\u7edd\u6811\u4e0a\u7684\u4e00\u4e2a\u706d\u7edd\u5173\u7cfb\u3002\n\n#### 4.\n\n\u53ef\u80fd\u4f1a\u6709\u4eba\u4e0d\u7406\u89e3\u4e3a\u4ec0\u4e48\u5728\u706d\u7edd\u6811\u5efa\u6811\u7684\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u706d\u7edd\u6811\u4e0a\u6c42LCA\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u77e5\u9053i\u7684\u98df\u7269\u4e00\u5b9a\u662f\u6bd4i\u7b49\u7ea7\u4f4e\u7684\uff08\u59d1\u4e14\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u7b49\u7ea7\u5173\u7cfb\uff09\uff0c\u90a3\u4e48i\u7684\u98df\u7269\u7684LCA\u7b49\u7ea7\u4e00\u5b9a\u6bd4i\u4f4e\uff08\u56e0\u4e3aLCA\u5bfc\u81f4\u4e86i\u7684\u98df\u7269\u7684\u706d\u7edd\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u98df\u7269\u94fe\u4e2d\u7b49\u7ea7\u7531\u4f4e\u5230\u9ad8\u7684\u987a\u5e8f\u5efa\u7acb\u706d\u7edd\u6811\n\n\u56de\u5934\u4e00\u770b\u4e4b\u524d\u7684\u62d3\u6251\u6392\u5e8f\uff0c\u6070\u597d\u53ef\u4ee5\u5728\u8fd9\u91cc\u6784\u9020\u4e00\u4e2a\u7b49\u7ea7\u7531\u4f4e\u5230\u9ad8\u7684\u5173\u7cfb\n\n\n------------\n\n### \u7ec6\u8282\u5b9e\u73b0\n\n#### 1.\n\n\u641e\u6e05\u695a\u6570\u636e\u7ed3\u6784\u7684\u5173\u7cfb\uff1a\u4e00\u68f5\u706d\u7edd\u6811\u3001\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u5373\u53ef\n\u3002fa\u6570\u7ec4\u5b58\u7684\u662f\u706d\u7edd\u6811\u7684\u5173\u7cfb\uff01\n\n#### 2.\n\n\u5904\u7406\u591a\u4e2a\u751f\u4ea7\u8005\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a0\u53f7\u8282\u70b9\uff0c\u5c06\u6240\u6709\u751f\u4ea7\u8005\u6302\u57280\u53f7\u8282\u70b9\u4e0b\u9762\uff08\u5728\u706d\u7edd\u6811\u4e0b\uff09\n\n```cpp\n#include <queue>\n#include <stdio.h>\n#include <iostream>\nusing namespace std;\n\n#define N 70000\n#define M 500010\n\n#define Abs(x) ((x) > 0 ? (x) : -(x)) \n#define Min(x, y) ((x) < (y) ? (x) : (y))\n#define Max(x, y) ((x) > (y) ? (x) : (y))\n#define Swap(x, y) do{x ^= y; y ^= x; x ^= y;}while(0)\n\nstruct Edge{\n    int t, next;\n}edge[M], tree[M]; //\u5206\u522b\u5b58\u6709\u5411\u65e0\u73af\u56fe\u548c\u706d\u7edd\u6811 \nint head[N], head2[N], cnt = 1;\nint n, indegree[N], depth[N], fa[N][20], ans[N];\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9'){if(ch == '-') f = -1; ch = getchar();}\n    while('0' <= ch && ch <= '9'){x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n    return x * f;\n}\n\ninline void add(int u, int v)\n{\n    edge[cnt].t = v;\n    edge[cnt].next = head[u];\n    head[u] = cnt++;\n}\n\ninline void add2(int u, int v)\n{\n    tree[cnt].t = v;\n    tree[cnt].next = head2[u];\n    head2[u] = cnt++;\n}\n\ninline int LCA(int x, int y) //\u500d\u589eLCA \n{\n    int K = 0;\n    if(depth[x] < depth[y]) Swap(x, y);\n    while((1 << (K + 1)) <= depth[x]) K++;\n    for(register int i = K;i >= 0;i--)\n    {\n        if(depth[fa[x][i]] < depth[y]) continue;\n        x = fa[x][i];\n    }\n    if(x == y) return x;\n    for(register int i = K;i >= 0;i--)\n    {\n        if(fa[x][i] != fa[y][i])\n        {\n            x = fa[x][i];\n            y = fa[y][i];\n        }\n    }\n    return fa[x][0];\n}\n\ninline void TopSort()\n{\n    queue<int> q;\n    for(register int i = 1;i <= n;i++) fa[i][0] = -1;//\u521d\u59cb\u5316\u6807\u8bb0\u4e3a-1\uff0c\u8868\u793a\u8fd8\u672a\u786e\u5b9a\u7236\u4eb2 \n    for(register int i = 1;i <= n;i++)\n    {\n        if(!indegree[i])\n        {\n            fa[i][0] = 0; //\u5982\u679c\u5165\u5ea6\u4e3a\u96f6\u8bf4\u660e\u5b83\u662f\u751f\u4ea7\u8005\uff0c\u6302\u52300\u53f7\u8282\u70b9\u4e0b\u9762 \n            q.push(i);\n        }\n    }\n    while(!q.empty())\n    {\n        int u = q.front(); q.pop();\n        add2(fa[u][0], u);\n        depth[u] = depth[fa[u][0]] + 1;\n        for(register int i = 1;(1 << i) <= depth[u];i++) fa[u][i] = fa[fa[u][i-1]][i-1];\n        for(register int i = head[u];i != 0;i = edge[i].next)\n        {\n            int v = edge[i].t;\n            if(fa[v][0] == -1) fa[v][0] = u; \n            else fa[v][0] = LCA(fa[v][0], u); //\u591a\u4e2a\u8282\u70b9\u7684LCA \n            indegree[v]--;\n            if(!indegree[v]) //\u5165\u5ea6\u4e3a0\u5165\u961f \n            {\n                q.push(v);\n            }\n        }\n    }\n}\n\ninline void DFS(int u)\n{\n    ans[u] = 1; //\u81ea\u5df1 \n    for(register int i = head2[u];i != 0;i = tree[i].next)\n    {\n        DFS(tree[i].t);\n        ans[u] += ans[tree[i].t];\n    }\n}\n\nint main()\n{\n    n = read();\n    for(register int i = 1;i <= n;i++)\n    {\n        while(1)\n        {\n            int q = read();\n            if(q == 0) break;\n            add(q, i); indegree[i]++; //\u521d\u59cb\u5316\u8282\u70b9\u5165\u8bfb \n        }\n    }\n    cnt = 1, depth[0] = 0; //cnt\u5e9f\u7269\u5229\u7528 \n    TopSort();\n    DFS(0);\n    for(register int i = 1;i <= n;i++)\n    {\n        printf(\"%d\\n\", ans[i] - 1); //\u9700\u8981\u6c42\u8be5\u7269\u79cd\u706d\u7edd\u4f1a\u5f71\u54cd\u591a\u5c11\u5176\u4ed6\u7269\u79cd\u706d\u7edd\uff0c\u6240\u4ee5\u8981\u53bb\u6389\u4e00\u4e2a \n    }\n    return 0;\n}\n```\n\u603b\u7ed3\uff1a\u89e3\u51b3\u6709\u4e00\u5b9a\u601d\u7ef4\u96be\u5ea6\u7684\u9898\u76ee\u65f6\u53ef\u4ee5\u4ece\u6b63\u5411\u548c\u53cd\u5411\u63a8\uff0c\u6293\u4f4f\u5173\u952e\u4fe1\u606f\u5219\u662f\u89e3\u9898\u7684\u91cd\u4e2d\u4e4b\u91cd",
        "postTime": 1584667061,
        "uid": 140515,
        "name": "\u95f2\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u5982\u679c\u4ee5\u751f\u4ea7\u8005\u5f00\u59cb\u4e3a\u6839\u5efa\u6811\u7684\u8bdd\n\n\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5411\u8be5\u70b9\u6240\u6709\u98df\u7269\u7684$lca$\u4ee5\u53ca\u8fd9\u4e2a$lca$\u7684\u6240\u6709\u7956\u5148\u8d21\u732e1\u707e\u96be\u503c\n\n\u6839\u636e\u4e0a\u9762\u4e24\u53e5\u8bdd\uff0c\u5c31\u53ef\u4ee5\u628a\u8fd9\u9053\u9898\u7ed9\u505a\u6389\u4e86\n\n\u4e0d\u8fc7\u8fd8\u662f\u8bb2\u4e00\u8bb2\u5177\u4f53\u5199\u6cd5\n\n\u5148\u62d3\u6251\u6392\u5e8f\u8c03\u6574\u987a\u5e8f\uff08\u4ece\u9ad8\u7ea7\u6d88\u8d39\u8005\u5230\u4f4e\u7ea7\u751f\u4ea7\u8005\uff09\uff0c\u7136\u540e\u4ece\u751f\u4ea7\u8005\u5f00\u59cb\u5efa\u6811\uff0c\u4e00\u8fb9\u5efa\u4e00\u8fb9\u521d\u59cb\u5316\u500d\u589e\u6570\u7ec4\n\n\u6700\u7ec8\u4ece\u6700\u9ad8\u7ea7\u7684\u6d88\u8d39\u8005\u5f00\u59cb\u5411\u4e0b\u9762\u7684\u4e1c\u897f\u8d21\u732e\u707e\u96be\u503c\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 1000010\nusing namespace std;\nstruct Edge{\n\tint to, next;\n}edge[maxn << 1];\nint num, head[maxn], in[maxn], d[maxn], que[maxn], cnt, fa[maxn][25], size[maxn], n;\nqueue <int> q;\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n} \n\nvoid addedge(int x, int y){ edge[++num] = (Edge){y, head[x]}, head[x] = num; }\n\nvoid topsort(){\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (!in[i]) q.push(i);\n\twhile (!q.empty()){\n\t\tint u = q.front(); q.pop();\n\t\tque[++cnt] = u;\n\t\tfor (int i = head[u]; i; i = edge[i].next){\n\t\t\tint v = edge[i].to;\n\t\t\tif (!(--in[v])) q.push(v);\n\t\t}\n\t}\n}\n\nint get(int u, int v){\n\tif (d[u] > d[v]) swap(u, v);\n\tfor (int i = 20; i >= 0; --i) if (d[u] <= d[fa[v][i]]) v = fa[v][i];\n\tif (u == v) return u;\n\tfor (int i = 20; i >= 0; --i) if (fa[u][i] != fa[v][i]) u = fa[u][i], v = fa[v][i];\n\treturn fa[u][0];\n}\n\nint main(){\n\tn = read();\n\tfor (int i = 1; i <= n; ++i){\n\t\tint x = read();\n\t\twhile (x) ++in[x], addedge(i, x), x = read();\n\t}\n\ttopsort();\n\tfor (int i = n; i; --i){\n\t\tint u = que[i], x = edge[head[u]].to;\n\t\tfor (int j = edge[head[u]].next; j; j = edge[j].next) x = get(x, edge[j].to);\n\t\tfa[u][0] = x, d[u] = d[x] + 1;\n\t\tfor (int j = 0; fa[u][j]; ++j) fa[u][j + 1] = fa[fa[u][j]][j];\n\t}\n\tfor (int i = 1; i <= n; ++i) ++size[que[i]], size[fa[que[i]][0]] += size[que[i]];\n\tfor (int i = 1; i <= n; ++i) printf(\"%d\\n\", size[i] - 1);\n\treturn 0;\n}\n```\n",
        "postTime": 1570012913,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P2597)\n\n\u53d1\u73b0\u751f\u7269\u4e4b\u95f4\u7684\u706d\u7edd\u5173\u7cfb\uff08x\u5411y\u8fde\u8fb9\u8868\u793ax\u6b7b\u4e86y\u4e5f\u6d3b\u4e0d\u6210\uff09\u4f1a\u5f62\u6210\u4e00\u7247\u68ee\u6797\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6839\u8282\u70b9\u5c06\u6240\u6709\u6811\u5408\u5e76\u6210\u4e00\u68f5\u6811,\u4e5f\u53ef\u4ee5\u60f3\u8c61\u4e3a\u65b0\u589e\u4e00\u79cd\u751f\u7269,\u6240\u6709\u751f\u4ea7\u8005\u4f1a\u56e0\u4e3a\u5b83\u7684\u706d\u7edd\u800c\u706d\u7edd. \n\n\u9996\u5148\u5bf9\u6240\u6709\u751f\u7269\u8fdb\u884c\u62d3\u6251\u6392\u5e8f,\u7136\u540e\u8003\u8651\u6309\u62d3\u6251\u5e8f\u4e00\u4e2a\u4e00\u4e2a\u8282\u70b9\u52a0\u5165\n\n\u5728\u52a0\u5165\u7b2ci\u4e2a\u8282\u70b9\u65f6,\u6709\u4e14\u4ec5\u6709\u5b83\u7684\u6240\u6709\u98df\u7269\u7684lca\u5230\u6839\u7684\u8fd9\u6761\u94fe\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u706d\u7edd\u90fd\u4f1a\u4f7f\u5b83\u706d\u7edd,\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u7684\u7236\u8282\u70b9\u5b9a\u4e3a\u8fd9\u4e2alca. \n\n\u8fd9\u6837\u5904\u7406\u5b8c\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5927\u5c0f(\u4e0d\u7b97\u5b83\u81ea\u5df1)\u5c31\u662f\u5b83\u7684\u707e\u96be\u5ea6.\n\n\u7528\u500d\u589e\u5c31\u80fd\u52a8\u6001\u7ef4\u62a4lca\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep(i,j,k) for(int i=j;i<=k;++i)\ntypedef long long ll;\nchar cch;\ninline int rd(){\n\tint x=0,fl=1;\n\tcch=getchar();\n\twhile(cch>'9'||cch<'0'){\n\t\tif(cch=='-') fl=-1;\n\t\tcch=getchar();\n\t}\n\twhile(cch>='0'&&cch<='9') x=(x<<3)+(x<<1)+cch-'0',cch=getchar();\n\treturn x*fl;\n}\nconst int N=7e4;\nint dep[N],head[N],head2[N],cnt,to[N*350],a[N],nxt[N*350],sz[N],fa[N][19],ru[N];//\u8fb9\u5fc5\u987b\u4e58350\uff0c\u56e0\u4e3a\u8fd9\u4e0d\u662f\u4e00\u68f5\u6811\uff01\u662f\u4e00\u4e2aDAG\uff0c \nqueue<int> q;\nvoid top(){\n\tint u,tot=0;\n\twhile(q.size()){\n\t\ta[++tot]=u=q.front(),q.pop();\n\t\tfor(int i=head[u];i;i=nxt[i]){\n\t\t\t--ru[to[i]];\n\t\t\tif(ru[to[i]]==0) q.push(to[i]);\n\t\t}\n\t}\n}\ninline void adde(int u,int v){\n\tto[++cnt]=v,nxt[cnt]=head[u],head[u]=cnt;\n}\ninline int lca(int u,int v){\n\tif(dep[u]<dep[v]) swap(u,v);\n\tfor(int i=18;i>=0;--i) if(dep[fa[u][i]]>=dep[v]) u=fa[u][i];\n\tfor(int i=18;i>=0;--i) if(fa[u][i]^fa[v][i]) u=fa[u][i],v=fa[v][i];\n\tif(u==v) return u;\n\treturn fa[u][0];\n}\ninline void add(int son,int f){\n\tfa[son][0]=f,dep[son]=dep[f]+1;\n\trep(i,1,18) fa[son][i]=fa[fa[son][i-1]][i-1];\n}\nint main(){\n\tint n=rd(),lc,t;\n\trep(i,1,n){\n\t\tt=rd();\n\t\twhile(t){\n\t\t\tadde(t,i);\n\t\t\t++ru[i];\n\t\t\tto[++cnt]=t,nxt[cnt]=head2[i],head2[i]=cnt;\n\t\t\tt=rd();\n\t\t}\n\t\tif(ru[i]==0) q.push(i);sz[i]=1;\n\t}\n\ttop();\n\trep(u,1,n){\n\t\tlc=to[head2[a[u]]];\n\t\tfor(int i=head2[a[u]];i;i=nxt[i]) lc=lca(lc,to[i]);\n\t\tadd(a[u],lc);\n\t}\n\tfor(int i=n;i;--i){\n\t\tsz[fa[a[i]][0]]+=sz[a[i]];\n\t}\n\trep(i,1,n) printf(\"%d\\n\",sz[i]-1);\n}\n```\n\n\u867d\u7136\u8fb9\u4e584\u5c31\u53ef\u4ee5\u8fc7\u6240\u6709\u6570\u636e\u4e86",
        "postTime": 1540535103,
        "uid": 75883,
        "name": "Doingdong",
        "ccfLevel": 0,
        "title": "[ZJOI2012]\u707e\u96be\uff08\u652f\u914d\u6811\uff09"
    },
    {
        "content": "\u697c\u4e0b\u7684\u9898\u89e3\u90fd\u597d\u5e73\u6613\u8fd1\u4eba\u554a\uff0c\u6211\u6765\u4e00\u4e2a\u652f\u914d\u6811\u7684\u505a\u6cd5\n\n\u8003\u8651\u52a0\u5165\u975e\u751f\u7269\u56e0\u7d20\uff08\u96fe\uff09\u4f5c\u4e3a\u6839\u8fde\u63a5\u751f\u4ea7\u8005\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5efa\u51fa\u539f\u56fe\u7684\u652f\u914d\u6811\u5373\u53ef\u6c42\u51fax\u6302\u4e86\u540e\u591a\u5c11\u4e2a\u8282\u70b9\u4f1a\u53d7\u5230\u5f71\u54cd\n\u7b54\u6848\u5373\u4e3a\u652f\u914d\u6811\u4e0a\u7684\u5b50\u6811size-1\n# Code\n\n---\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <vector>\n#define rep(i,st,ed) for (int i=st;i<=ed;++i)\n#define drp(i,st,ed) for (int i=st;i>=ed;--i)\n\nconst int N=500005;\n\nnamespace Tree {\n\tstruct edge {int y,next;} e[N];\n\n\tint size[N];\n\tint ls[N],edCnt;\n\n\tvoid add_edge(int x,int y) {\n\t\te[++edCnt]=(edge) {y,ls[x]}; ls[x]=edCnt;\n\t}\n\n\tvoid dfs(int now) {\n\t\tsize[now]=1;\n\t\tfor (int i=ls[now];i;i=e[i].next) {\n\t\t\tdfs(e[i].y); size[now]+=size[e[i].y];\n\t\t}\n\t}\n} ;\n\nstruct edge {int y,next;} e[N];\n\nstd:: vector <int> pre[N],dom[N];\n\nint dfn[N],id[N],fa[N],acs[N],mn[N];\nint idom[N],sdom[N];\nint ls[N],edCnt;\n\nint read() {\n\tint x=0,v=1; char ch=getchar();\n\tfor (;ch<'0'||ch>'9';v=(ch=='-')?(-1):(v),ch=getchar());\n\tfor (;ch<='9'&&ch>='0';x=x*10+ch-'0',ch=getchar());\n\treturn x*v;\n}\n\nvoid add_edge(int x,int y) {\n\te[++edCnt]=(edge) {y,ls[x]}; ls[x]=edCnt;\n}\n\nvoid dfs(int now) {\n\tdfn[now]=++dfn[0];\n\tid[dfn[0]]=now;\n\tfor (int i=ls[now];i;i=e[i].next) {\n\t\tpre[e[i].y].push_back(now);\n\t\tif (!dfn[e[i].y]) {\n\t\t\tfa[e[i].y]=now;\n\t\t\tdfs(e[i].y);\n\t\t}\n\t}\n}\n\nint find(int x) {\n\tif (acs[x]==x) return x;\n\tint tmp=find(acs[x]);\n\tif (dfn[sdom[mn[acs[x]]]]<dfn[sdom[mn[x]]]) mn[x]=mn[acs[x]];\n\treturn acs[x]=tmp;\n}\n\nint smin(int x,int y) {\n\treturn (dfn[x]<dfn[y])?x:y;\n}\n\nvoid build(int n) {\n\tdrp(i,dfn[0],1) {\n\t\tint x=id[i];\n\t\tif (!pre[x].empty()) {\n\t\t\tfor (int j=0;j<pre[x].size();j++) {\n\t\t\t\tint y=pre[x][j];\n\t\t\t\tif (dfn[y]<dfn[x]) sdom[x]=smin(sdom[x],y);\n\t\t\t\telse {\n\t\t\t\t\tfind(y);\n\t\t\t\t\tsdom[x]=smin(sdom[x],sdom[mn[y]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpre[x].clear();\n\t\t}\n\t\tacs[x]=fa[x];\n\t\tdom[sdom[x]].push_back(x);\n\t\tif (!dom[fa[x]].empty()) {\n\t\t\tfor (int j=0;j<dom[fa[x]].size();j++) {\n\t\t\t\tint y=dom[fa[x]][j];\n\t\t\t\tfind(y); int d=mn[y];\n\t\t\t\tif (dfn[sdom[d]]>=dfn[sdom[y]]) idom[y]=sdom[y];\n\t\t\t\telse idom[y]=d;\n\t\t\t}\n\t\t\tdom[fa[x]].clear();\n\t\t}\n\t}\n\trep(i,1,dfn[0]) {\n\t\tint x=id[i];\n\t\tif (idom[x]!=sdom[x]) idom[x]=idom[idom[x]];\n\t\tTree:: add_edge(idom[x],x);\n\t}\n\tTree:: dfs(n);\n\trep(i,1,n-1) printf(\"%d\\n\", Tree:: size[i]-1);\n}\n\nint main(void) {\n\tint n=read();\n\trep(i,1,n) {\n\t\tint x=read();\n\t\tif (!x) add_edge(n+1,i);\n\t\telse for (;x;x=read()) add_edge(x,i);\n\t}\n\trep(i,1,n+1) sdom[i]=acs[i]=mn[i]=i;\n\tdfs(n+1);\n\tbuild(n+1);\n\treturn 0;\n}\n```",
        "postTime": 1534773657,
        "uid": 18867,
        "name": "jpwang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u6784\u5efa\u98df\u7269\u94fe\n\n\u6bd4\u8fd9\u4e2a\u70b9\u62d3\u6251\u5e8f\u5217\u5c0f\u7684\u70b9\u4eec\u7684lca\u5fc5\u7136\u53ef\u4ee5gank\u6389\u8fd9\u4e2a\u70b9\n\n\u7136\u540e\u6c42\u4e00\u6c42 \u628a\u8fd9\u4e2a\u70b9\u5f52\u5230\u8fd9\u7236\u4eb2\u5e95\u4e0b\n\n\u6069 \u770b\u6ce8\u91ca\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nconst int mx=65535;\nint q[mx],top,tail,n,v[mx],head[mx],head1[mx],cnt1,cnt,p[mx][22],d[mx],die[mx];\nstruct nd{\n    int to,ne;\n}e[mx*2],e1[mx*2];\nstd::vector<int> qq[mx*5];\nstruct nod{\n    int num,rk;\n}rr[mx];\nvoid link(int x,int y){\n    e[++cnt].to=y,e[cnt].ne=head[x],head[x]=cnt;\n```\n}//\u8fde\u56fe\nvoid link1(int x,int y){\n\n    e1[++cnt1].to=y,e1[cnt1].ne=head1[x],head1[x]=cnt1;\n\n}//\u8fde\u6811\n\n\n```cpp\nbool cmp(nod a,nod b){\n    return a.rk<b.rk;//\u62d3\u6251\u5e8f\u5217\u5c0f\u7684\u5728\u524d \n}\nvoid dfs1(int u){\n    for(int v=head1[u];v;v=e1[v].ne){\n        int to=e1[v].to;    //\u641c\u4e00\u904d \u770b\u770b\u4ed6\u662f\u591a\u5c11\u4e2a\u70b9\u7684\u7236\u4eb2\uff08\u8bf4\u767d\u4e86\u5c31\u662f\u6c42\u6df1\u5ea6\uff1f\uff1f\uff1f \n        dfs1(to);\n        die[u]+=die[to]+1;\n    }\n}\nint lca(int a,int b){\n    if(a==b) return a;\n    if(d[a]<d[b]){int t=a; a=b,b=t;    }\n    int f=d[a]-d[b];\n    for(int i=0;(1<<i)<=f;i++)\n        if(f&(1<<i)) a=p[a][i];\n    if(a!=b){\n        for(int i=20;i>=0;i--)\n            if(p[a][i]!=p[b][i])\n                a=p[a][i],b=p[b][i]; \n        a=p[a][0];\n    }\n    return a;//\u500d\u589elca\u677f\u5b50 \n}\nint main(){\n    scanf(\"%d\",&n); d[0]=1; int xx;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&xx);//\u8bfb\u5165\u8282\u70b9 \n        while(xx){\n            v[i]++;//\u8bfb\u8be5\u8282\u70b9\u7684\u513f\u5b50 \u5e76\u8bb0\u5f55\u5165\u5ea6 \n            link(xx,i);    \n            qq[i].push_back(xx);\n            scanf(\"%d\",&xx);\n        }\n    }\n    for(int i=1;i<=n;i++)   if(!v[i]) v[i]++,link(0,i),qq[i].push_back(0); //\u5982\u679c\u662f\u4e00\u4e2a\u7236\u8282\u70b9 \u90a3\u5c31\u548c\u6211\u4eec\u7684\u865a\u6839\u201c0\u201d\u8fde\u8d77\u6765 \u6784\u6210\u4e00\u4e2a\u751f\u547d\u6811 \n    q[++tail]=0;\n    while(top<tail){\n        int x=q[++top];\n        for(int i=head[x];i;i=e[i].ne){ //\u904d\u5386\u4e00\u4e0b \u6c42\u62d3\u6251\u5e8f\u5217 \n            int to=e[i].to;\n            v[to]--;\n            if(!v[to]) q[++tail]=to,rr[to].num=to,rr[to].rk=tail;\n        }\n    }\n    std::sort(rr+1,rr+1+n,cmp);//\u8fdb\u884c\u6392\u5e8f \n    for(int i=1;i<=n;i++){\n        int xx=rr[i].num,t=0; \n        for(int j=0;j<qq[xx].size();j++){\n            int tt=qq[xx][j];\n            if(!j) t=tt;    //\u627e\u4e00\u4e0b\u62d3\u6251\u5e8f\u5217\u6bd4\u8fd9\u4e2a\u70b9\u5927\u7684\u70b9\u7684lca    \uff08\u53ef\u4ee5\u706d\u4ea1\u8fd9\u4e2a\u7236\u4eb2\u7684\u70b9 \n            else t=lca(t,tt);\n        } \n        link1(t,xx);//\u627e\u5230\u4e86\u8fd9\u4e2a\u70b9 \u8ba9\u8fd9\u4e2a\u7236\u4eb2\u4ece\u5c5e\u4e8e\u4e8e\u8fd9\u4e2a\u70b9\u7684\u751f\u5b58\u6811\u4e0b \n         p[xx][0]=t; d[xx]=d[t]+1;\n        for(int j=1;j<=20;j++) p[xx][j]=p[p[xx][j-1]][j-1];//\u66f4\u65b0\u6811 \n    }\n    dfs1(0);   //\u641c\u4e00\u4e0b\u5371\u9669\u503c\uff08\u5c42\u6570 \n    for(int i=1;i<=n;i++) printf(\"%d\\n\",die[i]);\n    return 0;\n}\n```",
        "postTime": 1508145943,
        "uid": 25390,
        "name": "shuri001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u7565\u52a0\u5c01\u88c5\uff0c\u53ef\u8bfb\u6027++\n\n\u5206\u6790\u5f97\uff1a\u4e00\u4e2a\u7269\u79cd\u706d\u7edd\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n\u8fd9\u4e2a\u7269\u79cd\u7684\u6240\u6709\u98df\u7269\u7684lca\u706d\u7edd\n\n'''cpp\n```cpp\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<cstring>\n#define memset(x,y) memset(x,y,sizeof x)\nusing namespace std;\nint n;\n#define maxn 70000\nclass Graph {\n    vector<int>map[maxn];\n    int inDegree[maxn];\n```\npublic:\n```cpp\n    vector<int>topoOrder;\n    Graph() {\n        memset(inDegree, 0);\n    }\n    vector<int> &operator [](int pos) {\n        return map[pos];\n    }\n    void connect(int from, int to) {\n        map[from].push_back(to);\n        inDegree[to]++;\n    }\n    void topoSort() {\n        queue<int>joblist;\n        for (int i = 1; i <= n; i++)\n            if (!inDegree[i])joblist.push(i);\n        while (!joblist.empty()) {\n            int current = joblist.front(); joblist.pop();\n            topoOrder.push_back(current);\n            for (int i = 0; i < map[current].size(); i++) {\n                inDegree[map[current][i]]--;\n                if (!inDegree[map[current][i]])\n                    joblist.push(map[current][i]);\n            }\n        }\n    }\n}G;\nclass DistinctTree {\n    int depth[maxn], father[maxn][17];\n    vector<int>map[maxn];\n    int lca(int x, int y) {\n        if (x == -1)return y;\n        if (depth[x] < depth[y])swap(x, y);\n        int delta = depth[x] - depth[y];\n        for (int i = 0; i < 17 && delta; i++) {\n            if (delta&(1 << i)) {\n                x = father[x][i];\n                delta ^= 1 << i;\n            }\n        }\n        for (int i = 16; i >= 0; i--) {\n            if (father[x][i] != father[y][i])\n                x = father[x][i], y = father[y][i];\n        }\n        return (x == y ? x : father[x][0]);\n    }\n```\npublic:\n```cpp\n    DistinctTree() {\n        memset(depth, 0); memset(father, 0);\n    }\n    vector<int> &operator[](int pos) {\n        return map[pos];\n    }\n    void build(vector<int>&topo) {\n        depth[0] = 1;//super node\n        for (int i = topo.size() - 1; i >= 0; i--) {\n            int current = topo[i];\n            int current_father = -1;\n            for (int i = 0; i < G[current].size(); i++)\n                current_father = lca(current_father, G[current][i]);\n            if (current_father == -1)current_father = 0;\n            map[current_father].push_back(current);\n            depth[current] = depth[current_father] + 1;\n            father[current][0] = current_father;\n            for (int i = 0; i < 16 && father[current][i]; i++)\n                father[current][i + 1] = father[father[current][i]][i];\n        }\n```\n#undef current\n```cpp\n    }\n}DT;\nint FINAL[maxn];\nint FINAL_DFS(int current) {\n    int cnt = 1;\n    for (int i = 0; i < DT[current].size(); i++)\n        cnt += FINAL_DFS(DT[current][i]);\n    return FINAL[current] = cnt;\n}\nint main() {\n    cin >> n; int other;\n    for (int i = 1; i <= n; i++) {\n        cin >> other;\n        while (other) {\n            G.connect(i, other);\n            cin >> other;\n        }\n    }\n    G.topoSort();\n    DT.build(G.topoOrder);\n    FINAL_DFS(0);\n    for (int i = 1; i <= n; i++)\n        cout << FINAL[i] - 1 << endl;\n}\n```\n'''",
        "postTime": 1491473073,
        "uid": 15514,
        "name": "FrankLi0324",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u751f\u7269\u4e4b\u95f4\u7684\u706d\u7edd\u7684\u7ed3\u6784\u5f62\u6210\u4e86\u4e00\u4e2a\u6811\uff0c\u6811\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\u7684\u706d\u7edd\u4f1a\u4e14\u4ec5\u4f1a\u5bfc\u81f4\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u7684\u706d\u7edd\u3002\u6211\u4eec\u7ba1\u8fd9\u4e2a\u6811\u53eb\u201c\u706d\u7edd\u6811\u201d\u3002\n\n\u5bf9\u4e8e\u751f\u4ea7\u8005\uff0c\u6211\u4eec\u7ed9\u5b83\u6dfb\u52a0\u4e00\u4e2a\u5047\u60f3\u7684\u98df\u7269\uff1a\u592a\u9633\u3002\n\n\u8fd9\u6837\uff0c\u201c\u706d\u7edd\u6811\u201d\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u4ee5\u592a\u9633\u4e3a\u6839\u7684\u6811\u3002\n\n\n\u4e0b\u9762\u8bf4\u660e\u5982\u4f55\u901a\u8fc7\u589e\u91cf\u6cd5\u628a\u706d\u7edd\u6811\u5efa\u51fa\u6765\uff0c\u540c\u65f6\u4e5f\u662f\u5bf9\u706d\u7edd\u6811\u7684\u5b58\u5728\u6027\u7684\u8bc1\u660e\u3002\n\n\n\u9996\u5148\uff0c\u628a\u98df\u7269\u7f51\u6309\u4ece\u730e\u7269\u5230\u6355\u98df\u8005\u7684\u987a\u5e8f\u62d3\u6251\u6392\u5e8f\u3002\n\n\u4e4b\u540e\uff0c\u4f9d\u6b21\u8003\u8651\u6bcf\u4e2a\u751f\u7269i.\u6211\u4eec\u5df2\u7ecf\u6784\u5efa\u597d\u4e86\u6392\u5e8f\u5728i\u4e4b\u524d\u7684\u751f\u7269\u7ec4\u6210\u7684\u201c\u706d\u7edd\u6811\u201d\u4e86\u3002\n\n\u5047\u8bbei\u7684\u98df\u7269\u6709x[0]~x[k]\uff08x[0]~x[k]\u5728\u62d3\u6251\u6392\u5e8f\u4e2d\u6bd4i\u9760\u524d\uff09\u3002\n\n\u5f88\u663e\u7136\uff0c\u53ea\u6709x[0]~x[k]\u5728\u6811\u4e0a\u7684\u516c\u5171\u7956\u5148\u7684\u706d\u7edd\u4f1a\u5bfc\u81f4i\u706d\u7edd\uff0c\u5426\u5219i\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u80fd\u8ba9\u5b83\u6d3b\u4e0b\u6765\u7684\u98df\u7269\u3002\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n\uff0e\uff0e\uff0e\n\n\uff0f\n\uff0f\n\uff2c\uff23\uff21\n\n\uff0f\uff5c\uff3c\n\n\uff3f\uff0f\uff5c\uff5c\n\n\uff0f\uff5c\uff3c\n\n\uff2f\uff5c\uff3c\n\n\uff0f\uff3c\uff3c\\\n\n\uff58\uff58\uff58\uff58\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n\uff49\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u628ai\u6302\u5728x[0]~x[k]\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e0b\u9762\u3002\n\n\n\u5904\u7406\u5b8c\u6240\u6709\u7684\u751f\u7269\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6811\u5c31\u662f\u6574\u4e2a\u56fe\u7684\u706d\u7edd\u6811\u4e86\u3002\n\n\u4e00\u65e6\u5f97\u5230\u706d\u7edd\u6811\uff0c\u6bcf\u4e2a\u751f\u7269\u7684\u707e\u96be\u503c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\u51cf1\u6765\u8ba1\u7b97.\n\n\n\u3010\u590d\u6742\u5ea6\u5206\u6790\u3011\n\n\n\u62d3\u6251\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO\uff08|E|\uff09\u7684\u3002\n\u4e00\u5171\u6709|E|\u6b21LCA\u7684\u67e5\u8be2\uff0c\u548c|V|\u6b21\u6dfb\u52a0\u8fb9\u7684\u64cd\u4f5c\u3002\n\u6211\u4eec\u4f7f\u7528\u67d0\u79cd\u652f\u6301\u5feb\u901f\u67e5\u8be2LCA\u3001\u6dfb\u52a0\u70b9\u7684\u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982\u52a8\u6001\u6811\uff09\u3002\n\n\u8fd9\u6837\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(|E|log|V|)\u3002\n\n \n \n \n \n \n \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#define pb push_back\nusing namespace std;\nconst int maxn=100000;\nvector<int> linkto[maxn],dd[maxn];\nint dep[maxn],fa[maxn][20],ans[maxn],ini[maxn],s[maxn];\nint l,r,n,q,cur,csize,lca;\nint getlca(int x,int y){\n    int p,step=0;\n    if (dep[x]<dep[y])  swap(x,y);\n    p=dep[x]-dep[y];\n    while   (p){\n        if  (p&1)    x=fa[x][step];\n        p/=2;step++;\n    }\n    step=0;\n    while   (x!=y){\n        if (fa[x][step]!=fa[y][step] || (fa[x][step]==fa[y][step] && !step)){\n            x=fa[x][step];\n            y=fa[y][step];\n            step++;\n        }\n        else step--;\n    }\n    return x;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++){\n        scanf(\"%d\",&cur);\n        while   (cur){\n            linkto[i].pb(cur);\n            dd[cur].pb(i);\n            ini[i]++;\n            scanf(\"%d\",&cur);\n        }\n    }\n    l=1;r=0;\n    for (int i=1;i<=n;i++)\n        if (!ini[i])    s[++r]=i;\n    while   (l<=r){\n        for (int j=0;j<dd[s[l]].size();j++){\n            ini[dd[s[l]][j]]--;\n            if (!ini[dd[s[l]][j]])\n                s[++r]=dd[s[l]][j];\n        }\n        l++;\n    }\n    memset(ini,0,sizeof ini);\n    dep[0]=1;\n    for (int i=1;i<=n;i++){\n        if  (!linkto[s[i]].size()){\n            fa[s[i]][0]=0;\n            dep[s[i]]=2;\n            continue;\n        }\n        lca=linkto[s[i]][0];\n        for (int j=1;j<linkto[s[i]].size();j++)\n            lca=getlca(lca,linkto[s[i]][j]);\n        dep[s[i]]=dep[lca]+1;\n        cur=0;fa[s[i]][cur]=lca;\n        ini[lca]++;\n        while (fa[s[i]][cur]){\n            fa[s[i]][cur+1]=fa[fa[s[i]][cur]][cur];\n            cur++;\n        }\n    }\n    l=1;r=0;\n    for (int i=1;i<=n;i++){\n        ans[i]=1;\n        if  (ini[i]==0) s[++r]=i;\n    }\n    while (l<=r){\n        ini[fa[s[l]][0]]--;\n        ans[fa[s[l]][0]]+=ans[s[l]];\n        if (ini[fa[s[l]][0]]==0)\n            s[++r]=fa[s[l]][0];\n        l++;\n    }\n    for (int i=1;i<=n;i++)\n        printf(\"%d\\n\",ans[i]-1);\n    return 0;\n}\n```",
        "postTime": 1474557309,
        "uid": 22733,
        "name": "eternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "# $\\mathcal{Description}$\n&emsp;&emsp;[link](https://www.luogu.com.cn/problem/P2597).  \n&emsp;&emsp;\u7ed9\u5b9a\u4e00\u4e2a\u6355\u98df\u7f51\u7edc\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7269\u79cd\uff0c\u6c42\u5176\u706d\u7edd\u540e\u6709\u591a\u5c11\u6d88\u8d39\u8005\u5931\u53bb\u6240\u6709\u98df\u7269\u6765\u6e90\u3002\uff08\u4e00\u4e9b\u540d\u8bcd\u4e0e\u751f\u7269\u5b66\u7684\u5b9a\u4e49\u76f8\u540c w\u3002\uff09  \n&emsp;&emsp;\u539f\u56fe\u7ed3\u70b9\u6570 $n\\le65534$\uff0c\u8fb9\u6570 $m\\le10^6$\uff0c\u56fe\u4fdd\u8bc1\u65e0\u6709\u5411\u73af\u3002\n# $\\mathcal{Solution}$\n&emsp;&emsp;\u652f\u914d\u6811\u677f\u9898\u3002\u5c06\u539f\u56fe\u53cd\u5411\u5efa\u8fb9\uff0c\u4ee4\u4e00\u4e2a\u201c\u8d85\u7ea7\u751f\u4ea7\u8005\u201d\u7ed3\u70b9\uff0c\u6307\u5411\u6240\u6709\u751f\u4ea7\u8005\uff0c\u7136\u540e\u6c42\u51fa\u8be5\u56fe\u7684\u652f\u914d\u6811\u3002\u6bcf\u4e2a\u7269\u79cd\u7684\u7b54\u6848\u5c31\u662f\u5176\u5b50\u6811\u5927\u5c0f $-1$\u3002  \n&emsp;&emsp;\u4ee5\u4e0b\u4f1a\u8bb2\u89e3\u5bf9\u4e8e\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\uff0c\u5982\u4f55\u5efa\u51fa\u652f\u914d\u6811\u3002\n## \u5728 DAG \u4e0a\u5efa\u652f\u914d\u6811\n&emsp;&emsp;\u58f0\u660e\u5bf9\u201c\u652f\u914d\u201d\u7684\u5b9a\u4e49\uff1a\u5bf9\u4e8e $u$ \u7684\u652f\u914d\u70b9 $v$\uff0c\u6ee1\u8db3\u5220\u53bb $v$ \u540e\uff0c\u4ece\u6e90\u70b9\u4e0d\u53ef\u5230\u8fbe $u$\u3002  \n&emsp;&emsp;\u6700\u8fd1\u652f\u914d\u70b9\uff1a\u6240\u6709\u652f\u914d $u$ \u7684 $v$ \u4e2d\u8ddd\u79bb $u$ \u6700\u8fd1\u7684\u4e00\u4e2a\u70b9\u3002\u53ef\u4ee5\u8bc1\u660e\u67d0\u4e2a\u70b9\u7684\u6700\u8fd1\u652f\u914d\u70b9\u552f\u4e00\u3002  \n&emsp;&emsp;\u6309\u7167\u62d3\u6251\u5e8f\uff0c\u4ece\u6e90\u70b9\u5f00\u59cb\u5904\u7406\u3002\u53ef\u4ee5\u76f4\u89c2\u5730\u53d1\u73b0\uff0c\u70b9 $u$ \u7684\u6700\u8fd1\u652f\u914d\u70b9\u5c31\u662f\u5176\u6240\u6709\u524d\u9a71\u7ed3\u70b9\u5728\u652f\u914d\u6811\u4e0a\u7684 LCA\u3002\u6240\u4ee5\u53ea\u9700\u8981\u6bcf\u6b21\u5411\u652f\u914d\u6811\u52a0\u5165\u5f53\u524d\u7ed3\u70b9\uff0c\u5e76\u5904\u7406\u5904\u5f53\u524d\u7ed3\u70b9\u7684\u500d\u589e\u4fe1\u606f\u5373\u53ef\u3002\n## $\\mathcal{Code}$\n```cpp\n#include <queue>\n#include <cstdio>\n#include <vector>\n\n#define adj( g, u, v ) \\\n\tfor ( int _eid = g.head[u], v; v = g.to[_eid], _eid; _eid = g.nxt[_eid] )\n\nconst int MAXN = 65534, MAXM = 1e6, MAXLG = 15;\nint n, dep[MAXN + 5], ans[MAXN + 5], rnk[MAXN + 5], fa[MAXN + 5][MAXLG + 5];\nstd::queue<int> que;\nstd::vector<int> pre[MAXN + 5];\n\ninline int rint () {\n\tint x = 0; char s = getchar ();\n\tfor ( ; s < '0' || '9' < s; s = getchar () );\n\tfor ( ; '0' <= s && s <= '9'; s = getchar () ) x = x * 10 + ( s ^ '0' );\n\treturn x;\n}\n\nstruct Graph {\n\tint ecnt, head[MAXN + 5], to[MAXM + 5], nxt[MAXM + 5], ind[MAXN + 5];\n\tinline void link ( const int s, const int t ) {\n\t\t++ ind[to[++ ecnt] = t], nxt[ecnt] = head[s], head[s] = ecnt;\n\t\tpre[t].push_back ( s );\n\t}\n} sour, domt;\n\ninline int LCA ( int u, int v ) {\n\tif ( dep[u] < dep[v] ) u ^= v ^= u ^= v;\n\tfor ( int i = 15; ~ i; -- i ) if ( dep[fa[u][i]] >= dep[v] ) u = fa[u][i];\n\tif ( u == v ) return u;\n\tfor ( int i = 15; ~ i; -- i ) if ( fa[u][i] ^ fa[v][i] ) u = fa[u][i], v = fa[v][i];\n\treturn fa[u][0];\n}\n\ninline void calc ( const int u ) {\n\tans[u] = 1;\n\tadj ( domt, u, v ) calc ( v ), ans[u] += ans[v];\n}\n\nint main () {\n\tn = rint ();\n\tfor ( int i = 1, t; i <= n; ++ i ) while ( t = rint () ) sour.link ( t, i );\n\tfor ( int i = 1; i <= n; ++ i ) if ( ! sour.ind[i] ) sour.link ( n + 1, i );\n\tint cnt = 0;\n\tque.push ( n + 1 );\n\tfor ( int u; ! que.empty (); que.pop () ) {\n\t\trnk[++ cnt] = u = que.front ();\n\t\tadj ( sour, u, v ) if ( ! -- sour.ind[v] ) que.push ( v );\n\t}\n\tfor ( int i = 1; i <= cnt; ++ i ) {\n\t\tint u = rnk[i], f = 0;\n\t\tif ( ! pre[u].empty () ) f = pre[u][0];\n\t\tfor ( int j = 1; j < ( int ) pre[u].size (); ++ j ) f = LCA ( f, pre[u][j] );\n\t\tdep[u] = dep[fa[u][0] = f] + 1, domt.link ( f, u );\n\t\tfor ( int j = 1; j <= 15; ++ j ) fa[u][j] = fa[fa[u][j - 1]][j - 1];\n\t}\n\tcalc ( n + 1 );\n\tfor ( int i = 1; i <= n; ++ i ) printf ( \"%d\\n\", ans[i] - 1 );\n\treturn 0;\n}\n```",
        "postTime": 1594184988,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u6709\u751f\u4e4b\u5e74\u7b2c\u4e00\u6b21\u5199\u652f\u914d\u6811......\u53d1\u4e2a\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\n\n\u4e00\u4e2a\u7269\u79cd\u8981\u706d\u7edd\u7684\u6761\u4ef6\u662f\uff1a\u4ed6\u6240\u6709\u7684\u98df\u7269\u90fd\u51c9\u6389\u4e86\u3002\n\n\u6240\u4ee5\uff0c\u4f60\u60f3\u5230\u4e86\u5efa\u53cd\u56fe+top\u5e8f\uff1f\n\n\u55ef\u4f60\u5bf9\u4e86\u4e00\u534a\u4e86\u3002\n\n\u6211\u4eec\u8fd8\u8981\u6ee1\u8db3\u6240\u6709\u98df\u7269\u90fd\u6b7b\u7edd......\n\n\u5f97\u51fa\u7ed3\u8bba\uff1a\u5f53\u4ed6\u6240\u6709\u98df\u7269\u5728\u521a\u521a\u6784\u9020\u51fa\u7684\u6811\u4e0a\u7684LCA\u6b7b\u7edd\u65f6\uff0c\u4ed6\u624d\u4f1a\u6b7b\u7edd\n\n...\u5c31\u6ca1\u4e86\u6b38\n\n\u6700\u540e\u641e\u4e00\u6ce2\u6811\u4e0a\u7edf\u8ba1\u5c31\u597d\u4e86\n\n\u4e0a\u4ee3\u7801\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005;\nint N,in[maxn],top[maxn],fa[maxn][20],lg2[maxn]={-1},dep[maxn],size[maxn];\nvector<int>G1[maxn],G2[maxn],G3[maxn];\nvoid topsort(){\n\tint cnt=0;\n\tqueue<int>q;\n\tfor(int i=1;i<=N;i++)\n\t\tif(!in[i])\n\t\t\tq.push(i);\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\ttop[++cnt]=u;\n\t\tfor(int i=0;i<G2[u].size();i++){\n\t\t\tint v=G2[u][i];\n\t\t\tin[v]--;\n\t\t\tif(!in[v])\n\t\t\t\tq.push(v);\n\t\t}\n\t}\n}\nint LCA(int u,int v){\n\tif(dep[u]<dep[v])swap(u,v);\n\twhile(dep[u]>dep[v])\n\t\tu=fa[u][lg2[dep[u]-dep[v]]];\n\tif(u==v)return u;\n\tfor(int k=lg2[dep[u]];k>=0;k--)\n\t\tif(fa[u][k]!=fa[v][k])\n\t\t\tu=fa[u][k],v=fa[v][k];\n\treturn fa[u][0];\n}\nvoid dfs(int u){\n\tsize[u]=1;\n\tfor(int i=0;i<G3[u].size();i++){\n\t\tint v=G3[u][i];\n\t\tdfs(v);\n\t\tsize[u]+=size[v];\n\t}\n}\nint main(){\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tios::sync_with_stdio(false);\n\tcin>>N;\n\tfor(int i=1;i<=N;i++)\n\t\tlg2[i]=lg2[i>>1]+1;\n\tfor(int i=1,x;i<=N;i++)\n\t\twhile(cin>>x&&x){\n\t\t\tG1[i].push_back(x);\n\t\t\tG2[x].push_back(i);\n\t\t\tin[i]++;\n\t\t}\n\ttopsort();\n\tfor(int i=1;i<=N;i++){\n\t\tif(!G1[top[i]].size())\n\t\t\tG1[top[i]].push_back(N+1);\n\t\tint x=G1[top[i]][0];\n\t\tfor(int j=1;j<G1[top[i]].size();j++)\n\t\t\tx=LCA(x,G1[top[i]][j]);\n\t\tG3[x].push_back(top[i]);\n\t\tfa[top[i]][0]=x;\n\t\tdep[top[i]]=dep[x]+1;\n\t\tfor(int k=1;k<=lg2[dep[top[i]]];k++)\n\t\t\tfa[top[i]][k]=fa[fa[top[i]][k-1]][k-1];\n\t}\n\tdfs(N+1);\n\tfor(int i=1;i<=N;i++)\n\t\tcout<<size[i]-1<<endl;\n\treturn 0;\n} \n```\n",
        "postTime": 1566909269,
        "uid": 109396,
        "name": "Uniecho1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    },
    {
        "content": "\u9996\u5148,\u6211\u4eec\u9700\u8981\u628a\u56fe\u4e0a\u7684\u8fb9\u50cf\u6837\u4f8b\u7684\u56fe\u7247\u4e00\u6837\u53cd\u7740\u5efa\u3002\n\n\u7136\u540e\u6211\u4eec\u8dd1\u4e00\u904d\u62d3\u6251\u6392\u5e8f(\u6ce8\u610f\u8fd9\u65f6\u5019\u53ef\u80fd\u6709\u591a\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9),\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5c42\u6570(\u5373\u5b83\u7684\u6240\u6709\u7236\u4eb2\u7684\u5c42\u6570\u6700\u5927\u503c+1)\u3002\n\n\u7136\u540e\u6211\u4eec\u5c06\u6240\u6709\u70b9\u6309\u5c42\u6570\u5347\u5e8f\u6392\u5e8f,\u4f9d\u6b21\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9,\u80fd\u591f\u4f7f\u5b83\u706d\u7edd\u7684,\u6df1\u5ea6\u6700\u5927\u7684\u70b9\u662f\u5b83\u6240\u6709\u7236\u4eb2\u7684$LCA$,\u8bb0\u4e3a$f_{i,0}$\u3002\n\n\u5f53\u7136\u5fc5\u7136\u4f1a\u6709\u67d0\u4e00\u4e9b\u70b9\u7684\u6240\u6709\u7236\u4eb2\u6ca1\u6709$LCA$,\u6216\u8005\u5b83\u5e72\u8106\u6ca1\u6709\u7236\u4eb2(\u2460)\u3002\n\n\u8fd9\u91cc\u5c31\u662f\u8981\u6309\u5c42\u6570\u5904\u7406\u8282\u70b9\u7684\u539f\u56e0,\u53ef\u4ee5\u786e\u4fdd\u5904\u7406\u4e00\u4e2a\u70b9\u65f6,\u5b83\u6240\u6709\u7684\u7236\u4eb2\u90fd\u88ab\u5904\u7406\u8fc7\u4e86\u3002\n\n\u663e\u7136$f_{f_{i,0},0},f_{f_{f_{i,0},0},0},...$\u4e5f\u80fd\u4f7f$i$\u706d\u7edd\u3002\n\n\u7531\u4e8e$f_{i,0}$\u662f\u552f\u4e00\u7684,\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5efa\u4e00\u4e2a\u65b0\u7684\u56fe,\u5176\u4e2d\u6240\u6709$f_{i,0}$\u5411$i$\u8fde\u8fb9,\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u68ee\u6797\u3002\n\n\u68ee\u6797\u4e2d\u6240\u6709\u6811\u7684\u6839\u90fd\u6ee1\u8db3\u2460,\u800c\u4e14\u6240\u6709\u6ee1\u8db3\u2460\u7684\u70b9\u5fc5\u7136\u662f\u6811\u6839\u3002\n\n\u800c\u4e00\u4e2a\u70b9\u7684\u707e\u96be\u503c\u5c31\u662f\u5b83\u7684\u5b50\u6811\u4e2d\u70b9\u7684\u6570\u91cf\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,t,in[65551],sq[65551],sz,f[65551][20],ans[65551],dep[65551],tg;\nvector<int>e[65551];\nvector<int>fs[65551];\nvector<int>ze[65551];\nqueue<int>q;\nvoid Tpst(){\n\tfor(int i=1;i<=n;i++)if(!in[i])q.push(i);\n\twhile(!q.empty()){\n\t\tsq[++sz]=t=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<e[t].size();i++)if(!(--in[e[t][i]]))q.push(e[t][i]);\n\t}\n}\nint LCA(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(int i=16;i>=0;i--)if(dep[x]-(1<<i)>=dep[y])x=f[x][i];\n\tfor(int i=16;i>=0;i--)if(f[x][i]!=f[y][i])x=f[x][i],y=f[y][i];\n\tif(x==y)return x;\n\treturn f[x][0];\n}\nvoid dfs(int x){\n\tans[x]=1;\n\tfor(int i=0;i<ze[x].size();i++)dfs(ze[x][i]),ans[x]+=ans[ze[x][i]];\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\twhile(scanf(\"%d\",&t)){\n\t\t\tif(!t)break;\n\t\t\te[t].push_back(i);\n\t\t\tfs[i].push_back(t);\n\t\t\tin[i]++;\n\t\t}\n\tTpst();\n\tfor(int i=1;i<=sz;i++){\n\t\tt=-1;\n\t\tfor(int j=0;j<fs[sq[i]].size();j++){\n\t\t\tt=(t==-1?fs[sq[i]][j]:LCA(t,fs[sq[i]][j]));\n\t\t}\n\t\tif(t!=-1&&t!=0)f[sq[i]][0]=t;\n\t\tif(t!=-1)dep[sq[i]]=dep[t]+1;\n\t\tfor(int j=1;j<=16&&f[sq[i]][j-1];j++)f[sq[i]][j]=f[f[sq[i]][j-1]][j-1];\n\t\tif(f[sq[i]][0])ze[f[sq[i]][0]].push_back(sq[i]);\n\t\telse q.push(sq[i]);\n\t}\n\twhile(!q.empty())tg=(q.front()==1),dfs(q.front()),q.pop();\n\tfor(int i=1;i<=n;i++)printf(\"%d\\n\",ans[i]-1);\n\treturn 0;\n}\n```",
        "postTime": 1545993459,
        "uid": 26294,
        "name": "xryjr233",
        "ccfLevel": 9,
        "title": "[2018.12.28]LuoguP2597/BZOJ2815 [ZJOI2012]\u707e\u96be(\u62d3\u6251\u6392\u5e8f/\u6700\u8fd1\u516c\u5171\u7956\u5148LCA)"
    },
    {
        "content": "\u8bf4\u660e\u4e00\u53e5 \u4e0d\u7528\u53cd\u5411\u5efa\u8fb9\n\u8fd9\u662f\u4e00\u79cd\u8f83\u77ed\u7684\u6c42\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u65b9\u6cd5\n```c\nvoid RMQ(int x)\n{\n\tf[x][0]=fa[x];\n\tfor (int i=1;i<=16;++i)\n\t\tf[x][i]=f[f[x][i-1]][i-1];\n}\nint LCA(int x,int y)\n{\n\tif (d[x]<d[y])swap(x,y);\n\tfor (int i=16;i>=0;--i)\n\t\tif (f[x][i]!=0&&d[f[x][i]]>=d[y])\n\t\t\tx=f[x][i];\n\tif (x==y)\treturn y;\n\telse return LCA(fa[x],y);\n}\n```\n\u5982\u679c\u4f60\u53cd\u5411\u5efa\u8fb9\n```c\nll find(ll x)\n{\n    if(!u[x])\n    {\n        g[++cng]=x;\n        f[x]=x;\n        return x;\n    }\n    if(f[x])return f[x];\n    if(u[x]==1)\n    {\n        ll tmp=x;\n        if(u[fd[h[tmp]].s]==1)\n        {\n            acs[tmp]=fd[h[tmp]].s;\n            f[tmp]=f[fd[h[tmp]].s];\n        }\n        else while(!(u[tmp]-1))\n        {\n            done[tmp]=true;\n            acs[tmp]=fd[h[tmp]].s;\n            tmp=fd[h[tmp]].s;\n        }\n        f[x]=tmp;\n        return tmp;\n    }\n    if(u[x]>1)\n    {\n        f[x]=fd[h[x]].s;\n        done[x]=true;\n        for(ll i=h[x];i;i=fd[i].n)\n        {\n            f[x]=getf(f[x],fd[i].s);\n            done[fd[i].s]=true;\n        }\n        acs[x]=f[x];\n        return f[x];\n    }\n}\nll getf(ll x,ll y)\n{\n    if(x==y)return x;\n    else\n    {\n        if(find(x)==y)return y;\n        if(find(y)==x)return x;\n        if(f[x]==f[y])return f[x];\n        return getf(f[x],f[y]);\n    }\n}\n```\n\u8981\u591a\u52a0\u51e0\u4e2a\u6570\u7ec4\n\u4f18\u5316\u65b9\u6cd5\u662f\u5904\u7406\u65f6\u9664father\u6570\u7ec4\u5916\u518d\u52a0\u4e00\u4e2a\n**k\u6570\u7ec4** \u7ef4\u62a4\u5728\u539f\u56fe\u4e2d\u6574\u4e00\u6761\u5165\u5ea6\u4e3a1\u7684\u94fe\n\uff08\u4e0a\u65b9\u4ee3\u7801\u4e2d\u7684f\u6570\u7ec4\u662fk\u6570\u7ec4\uff0cacs\u624d\u662ffather\u6570\u7ec4\uff09\uff0c\u4f46\u8fd9\u6837\u7684\u8bdd\u5c31\u4e0d\u80fd\u500d\u589e\u4e86\uff0c\u641e\u4e0d\u597d\u7684\u8bdd\u597d\u50cf\u4f1awa\u51e0\u4e2a\u70b9\uff0c\u5c24\u5176\u662f\u8fb9\u591a\u7684\u56fe\uff0co\uff08nm\uff09\uff08\u70b9\u6570\u4e58\u8fb9\u6570\uff09\n[\u4ee3\u7801](https://www.luogu.org/blog/ylz4944749/p2597-chun-dai-ma)",
        "postTime": 1541311717,
        "uid": 49447,
        "name": "\u6c38\u4e0d\u590d\u884c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2597 \u3010[ZJOI2012]\u707e\u96be\u3011"
    }
]