[
    {
        "content": "\u8003\u8651\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u91cd\u5fc3\u7684\u6b21\u6570\u3002\n\n\u9996\u5148\u62ff\u51fa\u4e00\u4e2a\u91cd\u5fc3\u6765\u5f53\u4f5c\u6839 $rt$\u3002\n\n\u5bf9\u4e8e\u70b9 $x \\ne rt$\uff0c\u5982\u679c $x$ \u4e3a\u5272\u6389\u67d0\u6761\u8fb9\u540e\u7684\u91cd\u5fc3\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u4e00\u5b9a\u4e0d\u5728 $x$ \u7684\u5b50\u6811\u5185\u3002\n\n\u8bbe\u5272\u6389\u4e00\u6761\u8fb9\u540e\uff0c\u53e6\u5916\u4e00\u68f5\u6811\u7684\u5927\u5c0f\u4e3a $S$\u3002\n\n\u8bbe $g_x = \\max_{y \\in \\text{son}(x)} \\{s_y\\}$\u3002\n\n\u7531\u4e8e $x$ \u4e3a\u91cd\u5fc3\uff0c\u6240\u4ee5\u8981\u6ee1\u8db3\uff1a\n$$\n2 \\times (n - S - s_x) \\le n - S\n$$\n\n$$\n2 \\times g_x \\le n - S\n$$\n\n\u5373\uff1a\n$$\nn - 2s_x \\le S \\le n - 2g_x\n$$\n\u5373\u6211\u4eec\u8981\u627e\u5230\u5bf9\u4e8e\u4e00\u4e2a $x$\uff0c\u6709\u591a\u5c11\u6761\u53ef\u4ee5\u5272\u6389\u7684\u8fb9\u6ee1\u8db3\uff1a\n\n1. $n - 2s_x \\le S \\le n - 2g_x$\u3002\n2. \u8fb9\u4e0d\u5728 $x$ \u7684\u5b50\u6811\u5185\u3002\n\n\u5982\u679c\u53ea\u6709\u7b2c\u4e00\u4e2a\u6761\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21 dfs\uff0c\u540c\u65f6\u62ff\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u52a8\u6001\u7ef4\u62a4\u5272\u6389\u5f53\u524d\u70b9\u548c\u5176\u7236\u4eb2\u4e4b\u95f4\u7684\u8fb9\u540e\u6bcf\u4e00\u4e2a $S$ \u7684\u503c\u6709\u591a\u5c11\u4e2a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u8be2\u95ee\u5b9e\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u6c42\u548c\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u53bb\u6389\u4e0d\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff0c\u5373\u5728 $x$ \u7684\u5b50\u6811\u5185\u7684\u8fb9\uff0c\u53ef\u4ee5\u518d\u62ff\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u6309\u7167 dfs \u5e8f\u52a8\u6001\u7ef4\u62a4\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\u7684\u6bcf\u4e00\u4e2a $s$ \u7684\u503c\u6709\u591a\u5c11\u4e2a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5728\u5176\u5b50\u6811\u5185\u53ef\u4ee5\u5272\u6389\u7684\u8fb9\u5c31\u662f\u56de\u6eaf\u4e0e\u8fdb\u5165\u65f6\u533a\u95f4\u6c42\u548c\u540e\u7684\u5dee\u3002\n\n\u6700\u540e\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5f53 $x = rt$\uff0c\u6211\u4eec\u5982\u4f55\u7edf\u8ba1 $x$ \u4e3a\u91cd\u5fc3\u7684\u6b21\u6570\uff1f\n\n\u8bbe $x$ \u7684\u513f\u5b50\u4e2d\u5b50\u6811\u6700\u5927\u7684\u8282\u70b9\u4e3a $u$\uff0c\u6b21\u5927\u7684\u8282\u70b9\u4e3a $v$\u3002\n\n\u82e5\u5272\u6389\u7684\u8fb9\u5728 $u$ \u7684\u5b50\u6811\u4e2d\uff0c\u5219\u9700\u8981\u6ee1\u8db3\uff1a\n$$\n2 \\times s_v \\le n - S\n$$\n\u5373\uff1a\n$$\nS \\le n - 2s_v\n$$\n\u5426\u5219\uff0c\u9700\u8981\u6ee1\u8db3\uff1a\n$$\n2 \\times s_u \\le n - S\n$$\n\u5373\uff1a\n$$\nS \\le n - 2s_u\n$$\n\n\u53ef\u4ee5\u5728 dfs \u7684\u65f6\u5019\u76f4\u63a5\u7ef4\u62a4\u3002\n\n\u90a3\u4e48\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\log n)$\u3002\n\n```cpp\nconst int N = 3e5 + 7;\nint n, rt, s[N], g[N], u, v, z[N];\nvi e[N];\nll ans, c1[N], c2[N];\n\ninline void add(ll *c, int x, int k) {\n\t++x;\n\twhile (x <= n + 1) c[x] += k, x += x & -x;\n}\n\ninline ll ask(ll *c, int x) {\n\t++x;\n\tll k = 0;\n\twhile (x) k += c[x], x -= x & -x;\n\treturn k;\n}\n\nvoid dfs1(int x, int f) {\n\ts[x] = 1, g[x] = 0;\n\tbool fg = 1;\n\tfor (ui i = 0; i < e[x].size(); i++) {\n\t\tint y = e[x][i];\n\t\tif (y == f) continue;\n\t\tdfs1(y, x);\n\t\ts[x] += s[y];\n\t\tg[x] = max(g[x], s[y]);\n\t\tif (s[y] > (n >> 1)) fg = 0;\n\t}\n\tif (n - s[x] > (n >> 1)) fg = 0;\n\tif (fg) rt = x;\n}\n\nvoid dfs2(int x, int f) {\n\tadd(c1, s[f], -1);\n\tadd(c1, n - s[x], 1);\n\tif (x ^ rt) {\n\t\tans += x * ask(c1, n - 2 * g[x]);\n\t\tans -= x * ask(c1, n - 2 * s[x] - 1);\n\t\tans += x * ask(c2, n - 2 * g[x]);\n\t\tans -= x * ask(c2, n - 2 * s[x] - 1);\n\t\tif (!z[x] && z[f]) z[x] = 1;\n\t\tans += rt * (s[x] <= n - 2 * s[z[x]?v:u]);\n\t}\n\tadd(c2, s[x], 1);\n\tfor (ui i = 0; i < e[x].size(); i++) {\n\t\tint y = e[x][i];\n\t\tif (y == f) continue;\n\t\tdfs2(y, x);\n\t}\n\tadd(c1, s[f], 1);\n\tadd(c1, n - s[x], -1);\n\tif (x ^ rt) {\n\t\tans -= x * ask(c2, n - 2 * g[x]);\n\t\tans += x * ask(c2, n - 2 * s[x] - 1);\n\t}\n}\n\ninline void solve() {\n\trd(n);\n\tfor (int i = 1; i <= n; i++) e[i].clear();\n\tfor (int i = 1, x, y; i < n; i++) rd(x), rd(y), e[x].pb(y), e[y].pb(x);\n\tans = 0;\n\tdfs1(1, 0);\n\tdfs1(rt, 0);\n\tu = v = 0;\n\tfor (ui i = 0; i < e[rt].size(); i++) {\n\t\tint x = e[rt][i];\n\t\tif (s[x] > s[v]) v = x;\n\t\tif (s[v] > s[u]) swap(u, v);\n\t}\n\tfor (int i = 1; i <= n + 1; i++) c1[i] = c2[i] = 0;\n\tfor (int i = 0; i <= n; i++) add(c1, s[i], 1), z[i] = 0;\n\tz[u] = 1;\n\tdfs2(rt, 0);\n\tprint(ans);\n}\n\nint main() {\n\tint T;\n\trd(T);\n\twhile (T--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1575126515,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u8fdc\u77ed\u4e8e\u5176\u4ed6\u9898\u89e3,\u53ea\u9700\u8981\u4e24\u6b21dfs\u548c\u4e00\u6b21\u500d\u589e\n\n\u4e8c\u53c9\u6811:\n\n\u6df1\u5ea6\u8f83\u6d45,\u66b4\u529b\u6362\u91cd\u513f\u5b50\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9,\u82e5x\u4e0d\u662f\u91cd\u5fc3,\u91cd\u5fc3\u8981\u4e48\u5728\u91cd\u513f\u5b50\u5b50\u6811\u91cc,\u8981\u4e48\u5728\u7236\u4eb2\u8282\u70b9\u4e0a\n\n\u7b2c\u4e00\u6b21dfs\u6c42\u51fason[x],s[x]\n\np[x][i]\u8868\u793ax\u6cbf\u7740\u91cd\u513f\u5b50\u8d70$2^i$\u6b65\n\n\u7b2c\u4e8c\u6b21dfs\u6362\u6839,\u628a\u4e0a\u9762\u6570\u7ec4\u7684\u5b9a\u4e49\u4ece\u4ee51\u4e3a\u6839\u6539\u4e3a\u4ee5x\u4e3a\u6839\n\n\u5bf9\u4e8e\u4e00\u6761\u8fb9,\u4ee5\u4e0b\u65b9\u7684\u91cd\u5fc3,\u53ef\u4ee5\u76f4\u63a5\u500d\u589e,\u53ef\u4ee5\u8df3\u7684\u6761\u4ef6\u4e3a\u4e0a\u65b9\n\n\u7684size<=sum/2\n\n\u5bf9\u4e8e\u4e0a\u65b9\u7684\u91cd\u5fc3,\u6362\u6839\u65f6\u8bb0\u5f55\u4fe1\u606f,\u500d\u589e\u65b9\u6cd5\u4e00\u6837\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u7528\u7eafCSP\u7b97\u6cd5\u89e3\u51b3\u4e86CSP2019 Day2 T3\n\n\u7ed9\u51fa\u7b80\u77ed\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define o 300005\n#define g0(a) memset(a,0,sizeof(a))\n#define gc(a,b) memcpy(a,b,sizeof(a))\nusing namespace std;\ninline int read()\n{\n\tregister int data=0,w=1;\n\tchar ch=0;\n\twhile(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n\tif(ch=='-')w=-1,ch=getchar();\n\twhile(ch>='0'&&ch<='9')data=(data<<1)+(data<<3)+(ch^48),ch=getchar();\n\treturn data*w;\n}\nstruct node\n{\n\tint to,next;\n}w[o*2];\nint n,T,son[o],s[o],pr[o],son2[o],p[o][18],son3[o],f[o],h[o],cnt,s2[o];\nvoid add(int x,int y){++cnt;w[cnt].to=y;w[cnt].next=h[x];h[x]=cnt;}\nvoid dfs(int x,int fa)\n{\n\ts[x]=1;pr[x]=fa;\n\tfor(int i=h[x];i;i=w[i].next)\n\t{\n\t\tint y=w[i].to;\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);s[x]+=s[y];\n\t\tif(s[y]>s[son[x]])son2[x]=son[x],son[x]=y;\n\t\telse if(s[y]>s[son2[x]])son2[x]=y;\n\t}\n\tp[x][0]=son[x];\n\tfor(int i=1;i<=17;i++)p[x][i]=p[p[x][i-1]][i-1];\n}\nlong long ans;\nint judge(int x,int sum)\n{\n\treturn x*(max(s2[son3[x]],sum-s2[x])<=sum/2);\n}\nvoid dfs2(int x,int fa)\n{\n\tfor(int i=h[x];i;i=w[i].next)\n\t{\n\t\tint y=w[i].to;\n\t\tif(y==fa)continue;\n\t\ts2[x]=s[1]-s[y];f[y]=0;f[x]=0;\n\t\tif(son[x]==y)son3[x]=son2[x];\n\t\telse son3[x]=son[x];\n\t\tif(s2[fa]>s2[son3[x]])son3[x]=fa;\n\t\tp[x][0]=son3[x];\n\t\tfor(int j=1;j<=17;j++)p[x][j]=p[p[x][j-1]][j-1];\n\t\tint b=x;\n\t\tfor(int j=17;j>=0;j--)if(s2[x]-s2[p[b][j]]<=s2[x]/2)b=p[b][j];\n\t\tans+=judge(son3[b],s2[x])+judge(b,s2[x])+judge(f[b],s2[x]);\n\t\tb=y;\n\t\tfor(int j=17;j>=0;j--)if(s2[y]-s2[p[b][j]]<=s2[y]/2)b=p[b][j];\n\t\tans+=judge(son3[b],s2[y])+judge(b,s2[y])+judge(f[b],s2[y]);\n\t\tf[x]=y;\n\t\tdfs2(y,x);\n\t}\n\tson3[x]=p[x][0]=son[x];f[x]=pr[x];\n\tfor(int j=1;j<=17;j++)p[x][j]=p[p[x][j-1]][j-1];\n\ts2[x]=s[x];\n}\nint main()\n{\n\tT=read();\n\twhile(T--)\n\t{\n\t\tg0(h);g0(son);g0(f);g0(pr);cnt=0;ans=0;\n\t\tn=read();\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tint x=read(),y=read();\n\t\t\tadd(x,y);add(y,x);\n\t\t}\n\t\tdfs(1,0);\n\t\tgc(s2,s);gc(son3,son);gc(f,pr);\n\t\tdfs2(1,0);\n\t\tcout<<ans<<'\\n';\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1574066816,
        "uid": 110520,
        "name": "soar_ing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3010\u6c11\u95f4\u6570\u636e\u3011\u3011"
    },
    {
        "content": "\u8003\u573a\u4e0a\u6254\u4e86T2\u6765\u6253\u8fd9\u9898\u7684\u90e8\u5206\u5206\uff0c\u7136\u540e\u6ca1\u770b\u5230\u6570\u636e\u8303\u56f4\u662f\u7b49\u53f7\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u5224\u5b8c\u5168\u4e8c\u53c9\u6811\u7136\u540e40\u5206\u6eda\u7c97\u2026\u2026\n\n\u672c\u6587\u540c\u6b65\u53d1\u8868\u5728[\u6211\u7684blog](https://www.cnblogs.com/TEoS/p/11938664.html)\n\n----\n\n**\u601d\u8def\u5206\u6790**\n\n\u5f88\u5bb9\u6613\u60f3\u5230$O(n^2)$\u6bcf\u6b21\u66b4\u529b\u627e\u91cd\u5fc3\uff0c\u8fd9\u4e2a\u66b4\u529b\u53ef\u4ee5\u7528\u5404\u79cd\u795e\u4ed9\u65b9\u6cd5\u4f18\u5316\u3002\n\n\u901a\u8fc7\u5206\u679035\u5206\u7684\u7279\u6b8a\u6784\u9020\u5206\uff0c\u53ef\u4ee5\u6709\u4e00\u4e2a\u60f3\u6cd5\uff0c\u65e2\u7136\u7279\u6b8a\u6784\u9020\u53ef\u4ee5\u6709\u7ed3\u8bba\uff0c\u90a3\u4e48\u662f\u5426\u4e5f\u53ef\u4ee5\u6709\u4e00\u4e9b\u7ed3\u8bba\u6765\u89e3\u51b3\u6216\u8005\u4f18\u5316\u6574\u4e2a\u95ee\u9898\u7684\u89e3\u6cd5\u3002\u5b9e\u9645\u4e0a\uff0c\u901a\u8fc7\u5206\u6790\u6837\u4f8b\u53ef\u4ee5\u5f97\u5230\u4e00\u4e9b\u6027\u8d28\uff0c\u8fd9\u4e9b\u6027\u8d28\u53ef\u80fd\u6709\u5229\u4e8e\u95ee\u9898\u7684\u6c42\u89e3\uff1a\n\n1. \u4e00\u68f5\u6811\u5982\u679c\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u8fd9\u4e24\u4e2a\u91cd\u5fc3\u4e00\u5b9a\u662f\u76f8\u90bb\u7684\n2. \u4e00\u68f5\u6811\u7684\u91cd\u5fc3\u4e00\u5b9a\u5728\u6839\u8282\u70b9\u6240\u5728\u7684\u91cd\u94fe\u4e0a\n3. \u4e00\u68f5\u6811\u7684\u91cd\u5fc3\u4e00\u5b9a\u662f\u4ee5\u8be5\u6811\u6839\u8282\u70b9\u91cd\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u7684\u91cd\u5fc3\u7684\u7956\u5148\n\n\u8fd9\u4e9b\u6027\u8d28\u53ef\u4ee5\u8282\u7701\u4e0b\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u65f6\u95f4\u3002\u6839\u636e\u6027\u8d281\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u5230\u6df1\u5ea6\u8f83\u5927\u7684\u91cd\u5fc3\uff0c\u7136\u540e\u5bf9\u4e8e\u5df2\u6c42\u51fa\u7684\u91cd\u5fc3\u518d\u5224\u65ad\u5176\u7236\u4eb2\u662f\u5426\u4e5f\u662f\u91cd\u5fc3\uff08\u56e0\u6b64\u63a5\u4e0b\u6765\u8bf4\u7684\u91cd\u5fc3\u90fd\u662f\u6df1\u5ea6\u8f83\u5927\u7684\u91cd\u5fc3\uff09\uff1b\u6839\u636e\u6027\u8d282\uff0c\u6211\u4eec\u5728\u627e\u91cd\u5fc3\u7684\u65f6\u5019\u53ef\u4ee5\u53ea\u5f80\u6839\u8282\u70b9\u6240\u5728\u7684\u91cd\u94fe\u4e0a\u627e\uff1b\u6839\u636e\u6027\u8d283\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u5f80\u4e0a\u627e\u91cd\u5fc3\uff0c\u4e0d\u7528\u6bcf\u6b21\u91cd\u65b0\u627e\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u6027\u8d28\uff0c\u63a5\u4e0b\u6765\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u5177\u4f53\u5206\u6790\u3002\n\n\u5220\u6389\u4e00\u6761\u8fb9\u540e\u4e00\u68f5\u6811\u4f1a\u53d8\u6210\u4e24\u90e8\u5206\uff0c\u8bbe\u8be5\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e3a$x,y$\uff0c\u5176\u4e2d\u6df1\u5ea6\u8f83\u5927\u7684\u4e00\u70b9\u4e3a$y$\uff0c\u5219\u8fd9\u4e24\u90e8\u5206\u5206\u522b\u4e3a\u4ee5$y$\u4e3a\u6839\u7684\u5b50\u6811\u548c\u6574\u68f5\u6811\u51cf\u6389\u4ee5$y$\u4e3a\u6839\u7684\u5b50\u6811\u3002\u6211\u4eec\u5148\u5206\u6790\u4ee5$y$\u4e3a\u6839\u7684\u5b50\u6811\u3002\n\n##### \u4ee5$y$\u4e3a\u6839\u7684\u5b50\u6811\n\n\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u6027\u8d283\u9884\u5904\u7406\u51fa\u4ee5\u6240\u6709\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u91cd\u5fc3\uff0c\u53ea\u8981\u4e0d\u65ad\u5411\u4e0a\u8d70\u5c31\u53ef\u4ee5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n##### \u6574\u68f5\u6811\u51cf\u6389\u4ee5$y$\u4e3a\u6839\u7684\u5b50\u6811\n\n\u6839\u636e\u6027\u8d282\uff0c\u8fd9\u68f5\u6811\u7684\u91cd\u5fc3\u4e00\u5b9a\u5728\u6839\u8282\u70b9\u6240\u5728\u7684\u91cd\u94fe\u4e0a\u3002\u8bd5\u60f3\uff0c\u53ea\u8981\u5220\u6389\u7684\u4ee5$y$\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u4e00\u6837\uff0c\u4f4d\u7f6e\u5b9e\u9645\u4e0a\u662f\u5bf9\u91cd\u5fc3\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u552f\u4e00\u6709\u53ef\u80fd\u5f71\u54cd\u7684\u60c5\u51b5\u5c31\u662f\u5220\u6389\u7684\u8fd9\u4e2a\u5b50\u6811\u5728\u4ee5\u6839\u8282\u70b9\u91cd\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u60c5\u51b5\u518d\u5177\u4f53\u5206\u6790\u3002\n\n###### $y$\u4e0d\u5728\u4ee5\u6839\u8282\u70b9\u91cd\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\n\n\u8fd9\u662f\u6700\u5e73\u5e38\u7684\u60c5\u51b5\u3002\u65e2\u7136\u53ea\u6709\u5220\u6389\u5b50\u6811\u7684\u5927\u5c0f\u5bf9\u91cd\u5fc3\u6709\u5f71\u54cd\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u5220\u53bb\u6240\u6709\u5927\u5c0f\u7684\u5b50\u6811\u4e4b\u540e\u7684\u91cd\u5fc3\uff0c\u7136\u540e\u76f4\u63a5\u8be2\u95ee\u3002\u8fd9\u4e2a\u9884\u5904\u7406\u53ea\u9700\u8981\u4ece\u6839\u8282\u70b9\u6240\u5728\u7684\u91cd\u94fe\u4ece\u4e0b\u5230\u4e0a\u8d70\u4e00\u904d\u5c31\u53ef\u4ee5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n###### $y$\u5728\u4ee5\u6839\u8282\u70b9\u91cd\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\n\n\u8bd5\u60f3\uff0c\u5982\u679c\u5220\u6389\u4ee5$y$\u4e3a\u6839\u7684\u5b50\u6811\u540e\uff0c\u8fd9\u4e2a\u91cd\u513f\u5b50\u4ecd\u7136\u662f\u91cd\u513f\u5b50\uff0c\u90a3\u4e48\u91cd\u5fc3\u8fd8\u662f\u4f1a\u5728\u539f\u6765\u8fd9\u6761\u91cd\u94fe\u4e0a\uff0c\u800c\u91cd\u5fc3\u663e\u7136\u53ea\u53ef\u80fd\u5f80\u91cd\u94fe\u4e0a\u8fdc\u79bb$y$\u7684\u4e00\u7aef\u79fb\u52a8\uff0c\u800c\u5982\u679c\u6839\u8282\u70b9\u5c31\u662f\u91cd\u5fc3\uff0c\u5220\u6389\u5b50\u6811\u4e4b\u540e\u6839\u8282\u70b9\u4ecd\u7136\u4f1a\u662f\u91cd\u5fc3\u3002\u56e0\u6b64\uff0c\u6700\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u8ba9\u6574\u68f5\u6811\u7684\u91cd\u5fc3\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u5c31\u53d8\u5f97\u5f88\u65b9\u4fbf\u3002\n\n\u5982\u679c\u5220\u6389\u5b50\u6811\u540e\u8fd9\u4e2a\u91cd\u513f\u5b50\u4e0d\u518d\u662f\u91cd\u513f\u5b50\u4e86\u600e\u4e48\u529e\uff1f\u663e\u7136\uff0c\u73b0\u5728\u8fd9\u4e2a\u91cd\u513f\u5b50\u53ea\u4f1a\u662f\u539f\u6765\u7684\u6b21\u91cd\u513f\u5b50\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6b21\u91cd\u513f\u5b50\u6240\u5728\u7684\u91cd\u94fe\u4e0a\u5220\u53bb\u6240\u6709\u5927\u5c0f\u7684\u5b50\u6811\u4e4b\u540e\u7684\u91cd\u5fc3\uff0c\u7136\u540e\u6309\u7167$y$\u4e0d\u5728\u4ee5\u6839\u8282\u70b9\u91cd\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u60c5\u51b5\u5904\u7406\u3002\n\n\u6240\u6709\u9884\u5904\u7406\u90fd\u662f$O(n)$\uff0c\u6bcf\u6b21\u8be2\u95ee$O(1)$\uff0c\u603b\u7684\u590d\u6742\u5ea6$O(n)$\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u5177\u4f53\u5b9e\u73b0\u3002\uff08~~\u7531\u4e8e\u672c\u4eba\u592a\u83dc\uff0c\u5b9e\u73b0\u8fc7\u7a0b\u53ef\u80fd\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u8bf7\u52ff\u6a21\u4eff~~\uff09\n\n**\u5177\u4f53\u5b9e\u73b0**\n\n**1.\u627e\u91cd\u5fc3**\n\ndfs\u4e00\u904d\u968f\u4fbf\u627e\u5230\u4e00\u4e2a\u91cd\u5fc3\u5373\u53ef\u3002\u628a\u6574\u68f5\u6811\u7684\u91cd\u5fc3\u4f5c\u4e3a\u4e4b\u540e\u7684\u6839\u8282\u70b9\u3002\n\n```c++\nvoid findroot(int x,int f)\n{\n\tsiz[x]=1;\n\tfor(int i=head[x],y=ver[i];i;i=Next[i],y=ver[i])\n\t\tif(y!=f)\n\t\t{\n\t\t\tfindroot(y,x);\n\t\t\tsiz[x]+=siz[y];\n\t\t\tif(siz[y]>siz[son[x]])\n\t\t\t\tson[x]=y;\n\t\t}\n\tif(siz[son[x]]*2<=n && (n-siz[x])*2<=n)\n\t\troot=x;\n}\n\nfindroot(1,0);\n```\n\n**2.\u9884\u5904\u7406\u8282\u70b9\u4fe1\u606f**\n\n\u9884\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u3001\u91cd\u513f\u5b50\u3001\u6df1\u5ea6\u3001\u7236\u4eb2\u4ee5\u53ca\u5c5e\u4e8e\u6839\u8282\u70b9\u54ea\u4e2a\u513f\u5b50\u7684\u5b50\u6811\uff0c\u540c\u65f6\u627e\u5230\u6839\u8282\u70b9\u7684\u6b21\u91cd\u513f\u5b50\u3002dfs\u4e00\u904d\u5373\u53ef\u3002\n\n```c++\nvoid pre(int x,int f)\n{\n\tsiz[x]=1,d[x]=d[f]+1,fa[x]=f;//\u5206\u522b\u8868\u793a\u5b50\u6811\u5927\u5c0f\u3001\u6df1\u5ea6\u4ee5\u53ca\u7236\u4eb2\n\tif(f==root)\n\t\tffa[x]=x;\n\telse\n\t\tffa[x]=ffa[f];//\u5c5e\u4e8e\u6839\u8282\u70b9\u7684\u54ea\u4e2a\u5b50\u6811\n\tfor(int i=head[x],y=ver[i];i;i=Next[i],y=ver[i])\n\t\tif(y!=f)\n\t\t{\n\t\t\tpre(y,x);\n\t\t\tsiz[x]+=siz[y];\n\t\t\tif(siz[y]>siz[son[x]])\n\t\t\t{\n\t\t\t\tif(x==root)\n\t\t\t\t\tson2=son[x];\n\t\t\t\tson[x]=y;//\u627e\u91cd\u513f\u5b50\n\t\t\t}\n\t\t\telse\n\t\t\t\tif(x==root && siz[y]>siz[son2])\n\t\t\t\t\tson2=y;//\u627e\u6839\u8282\u70b9\u7684\u6b21\u91cd\u513f\u5b50\n\t\t}\n}\n\nmemset(son,0,sizeof(son));\npre(root,0);\n```\n\n**3.\u9884\u5904\u7406\u7b54\u6848**\n\n\u5206\u522b\u9884\u5904\u7406\u51fa\u6839\u8282\u70b9\u91cd\u513f\u5b50\u6240\u5728\u7684\u91cd\u94fe\u7684\u7b54\u6848\u3001\u6839\u8282\u70b9\u6b21\u91cd\u513f\u5b50\u6240\u5728\u7684\u91cd\u94fe\u7684\u7b54\u6848\u4ee5\u53ca\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u91cd\u5fc3\u3002\u6bcf\u79cd\u60c5\u51b5\u4ece\u4e0b\u5230\u4e0a\u8d70\u4e00\u904d\u5373\u53ef\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5220\u6389\u5b50\u6811\u5927\u5c0f$y$\uff0c\u5e94\u8be5\u5728\u6839\u8282\u70b9\u91cd\u513f\u5b50\u6240\u5728\u7684\u91cd\u94fe\u4e0a\u627e\u5230\u6df1\u5ea6\u6700\u5927\u7684$x$\u6ee1\u8db3$2siz_x\\geq n-y$\u3002\u7b2c\u4e8c\u79cd\u60c5\u51b5\u540c\u7406\u3002\n\n\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9$y$\uff0c\u5e94\u8be5\u5176\u5b50\u6811\u5185\u6df1\u5ea6\u6700\u5927\u7684$x$\u6ee1\u8db3$siz[x]\\geq siz[y]$\u3002\n\n```c++\nvoid get1(int x,int f)\n{\n\tif(son[x])\n\t\tget1(son[x],x);//\u6709\u91cd\u513f\u5b50\u8d70\u91cd\u513f\u5b50\n\twhile(n-2*siz[x]<=nowans && nowans)\n\t{\n\t\tans1[nowans]=x;\n\t\tnowans--;\n\t}\n}//\u6839\u8282\u70b9\u91cd\u513f\u5b50\u6240\u5728\u7684\u91cd\u94fe\u7684\u7b54\u6848\n\nvoid get2(int x,int f)\n{\n\tif(x==root)\n\t\tnowans=n,get2(son2,x);//\u8d70\u6839\u8282\u70b9\u6b21\u91cd\u513f\u5b50\n\telse\n\t\tif(son[x])\n\t\t\tget2(son[x],x);//\u5176\u4f59\u8282\u70b9\u6709\u91cd\u513f\u5b50\u8d70\u91cd\u513f\u5b50\n\twhile(n-2*siz[x]<=nowans && nowans)\n\t{\n\t\tans2[nowans]=x;\n\t\tnowans--;\n\t}\n}//\u6839\u8282\u70b9\u6b21\u91cd\u513f\u5b50\u6240\u5728\u7684\u91cd\u94fe\u7684\u7b54\u6848\n\n\nvoid get3(int r)\n{\n\tif(son[r])\n\t\tget3(son[r]);//\u5148\u8d70\u91cd\u513f\u5b50\n\tfor(int i=head[r],y=ver[i];i;i=Next[i],y=ver[i])\n\t\tif(y!=son[r] && d[y]>d[r])\n\t\t\tget3(y);\n\tint now=son[r]?ans3[son[r]]:r;//\u4ece\u91cd\u513f\u5b50\u7684\u91cd\u5fc3\u5f80\u4e0a\u627e\n\twhile(siz[now]*2<siz[r])\n\t\tnow=fa[now];\n\tans3[r]=now;\n}//\u4ee5r\u4e3a\u6839\u7684\u5b50\u6811\u7684\u91cd\u5fc3\n\nget1(root,0),get2(root,0),get3(root);\n```\n\n**4.\u679a\u4e3e\u5220\u8fb9\u6c42\u7b54\u6848**\n\n\u5b9e\u9645\u4e0a\u679a\u4e3e\u5220\u6389\u5b50\u6811\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u91cc\u8fd8\u662f\u7528\u5220\u8fb9\u6765\u5199\u3002\n\n\u6309\u7167\u524d\u9762\u8bf4\u5230\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\uff0c\u5148\u627e\u5230\u4e00\u4e2a\u91cd\u5fc3\uff0c\u7136\u540e\u518d\u5224\u65ad\u5176\u7236\u4eb2\u662f\u5426\u4e5f\u662f\u91cd\u5fc3\u3002\u5224\u65ad\u7684\u65f6\u5019\u53ea\u8981\u6309\u7167\u91cd\u5fc3\u7684\u5b9a\u4e49\u6765\u5224\u65ad\u5373\u53ef\uff0c\u6ce8\u610f\u6709\u4e9b\u7279\u6b8a\u7684\u8282\u70b9\u8981\u8fdb\u884c\u7279\u5224\u3002\n\n```c++\nfor(int i=1;i<=tot;i+=2)\n{\n\tint x=ver[i],y=ver[ano];\n\tif(d[x]>d[y])\n\t\tswap(x,y);//\u4ee4y\u4e3a\u6df1\u5ea6\u8f83\u5927\u7684\u8282\u70b9\n\tint h1=ans3[y];\n\tans+=h1;//h1\u5c31\u662f\u4ee5y\u4e3a\u6839\u7684\u5b50\u6811\u7684\u91cd\u5fc3\n\tif(d[fa[h1]]>=d[y] && check1(fa[h1],y))\n\t\tans+=fa[h1];//\u5224\u65adh1\u7684\u7236\u4eb2\u662f\u5426\u4e5f\u662f\u4ee5y\u4e3a\u6839\u7684\u5b50\u6811\u7684\u91cd\u5fc3\n\tif(ffa[y]==son[root])//y\u5728\u4ee5\u6839\u8282\u70b9\u91cd\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\n\t\tif(siz[son[root]]-siz[y]>=siz[son2])\n\t\t\tans+=root;//\u4e0d\u5f71\u54cd\u91cd\u94fe\uff0c\u91cd\u5fc3\u4e3a\u6839\u8282\u70b9\n\t\telse\n\t\t{\n\t\t\tans+=ans2[siz[y]];\n\t\t\tif(check2(fa[ans2[siz[y]]],y))\n\t\t\t\tans+=fa[ans2[siz[y]]];\n\t\t}//\u5f71\u54cd\u91cd\u94fe\n\telse//y\u4e0d\u5728\u4ee5\u6839\u8282\u70b9\u91cd\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\n\t{\n\t\tans+=ans1[siz[y]];\n\t\tif(check3(fa[ans1[siz[y]]],y))\n\t\t\tans+=fa[ans1[siz[y]]];\n\t}\n}\n```\n\n\uff08\u611f\u89c9\u597d\u591a\u5730\u65b9\u53ef\u4ee5\u6574\u5408\u5728\u4e00\u8d77\u5199\u2026\u2026\u51d1\u5408\u7740\u770b\u5427qwq\uff09\n\n\u4e0b\u9762\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```c++\n//40\u5206\u66b4\u529b\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define ll long long\n#define ano ((i-1)^1)+1\nusing namespace std;\nconst int N=3e5+100;\nint T,n,cnt,tot;\nll ans;\nint head[N],ver[2*N],Next[2*N];\nint maxson[N],siz[N],d[N],nowh[N],nowsiz[N];\nbool sp[N],v[N];\nvoid add(int x,int y)\n{\n\tver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,Next[tot]=head[y],head[y]=tot;\n}\nvoid dfs(int x,int root)\n{\n\tif(x!=root)\n\t\tnowsiz[x]=1;\n\tv[x]=1;\n\tfor(int i=head[x];i;i=Next[i])\n\t\tif(!sp[ver[i]] && !v[ver[i]])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tdfs(y,root);\n\t\t\tmaxson[x]=max(maxson[x],nowsiz[y]);\n\t\t\tif(x!=root)\n\t\t\t\tnowsiz[x]+=nowsiz[y];\n\t\t}\n\tif(maxson[x]*2<=nowsiz[root] && (nowsiz[root]-nowsiz[x])*2<=nowsiz[root])\n\t\tnowh[++cnt]=x;\n}//\u627e\u91cd\u5fc3\nvoid pre(int x,int f,int root)\n{\n\tsiz[x]=1,d[x]=d[f]+1;\n\tfor(int i=head[x];i;i=Next[i])\n\t\tif(!d[ver[i]] && ver[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(x==root)\n\t\t\t\tffa[y]=y;\n\t\t\telse\n\t\t\t\tffa[y]=ffa[f];\n\t\t\tpre(y,x,root);\n\t\t\tsiz[x]+=siz[y];\n\t\t}\n}//\u9884\u5904\u7406\u5b50\u6811\u5927\u5c0f\u548c\u6df1\u5ea6\nvoid clearly()\n{\n\tmemset(maxson,0,sizeof(maxson));\n\tmemset(nowsiz,0,sizeof(nowsiz));\n\tmemset(v,0,sizeof(v));\n\tcnt=0;\n}\nvoid solve()\n{\n\tpre(1,0,1);\n\tfor(int i=1;i<=tot;i+=2)\n\t{\n\t\tclearly();\n\t\tint x=ver[i],y=ver[ano];\n\t\tsp[x]=sp[y]=1;//dfs\u65f6\u4e0d\u8d70x,y\n\t\tif(d[x]>d[y])\n\t\t\tswap(x,y);//\u4ee4y\u4e3a\u6df1\u5ea6\u8f83\u5927\u7684\u8282\u70b9\n\t\tnowsiz[x]=n-siz[y],nowsiz[y]=siz[y];\n\t\tdfs(x,x),dfs(y,y);\n\t\tsp[x]=sp[y]=0;//\u8fd8\u539f\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t\tans+=nowh[j];\n\t}\n}\nvoid clear()\n{\n\tmemset(head,0,sizeof(head));\n\tmemset(Next,0,sizeof(Next));\n\tmemset(siz,0,sizeof(siz));\n\tmemset(d,0,sizeof(d));\n\ttot=ans=0;\n}\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tclear();\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1,x,y;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tadd(x,y);\n\t\t}\n\t\tsolve();\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\n```c++\n//100\u5206\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define ano ((i-1)^1)+1\nusing namespace std;\nconst int N=3e5+100;\nint T,n,tot,root,son2,nowans;\nll ans;\nint head[N],ver[2*N],Next[2*N];\nint siz[N],son[N],ans1[N],ans2[N],ans3[N],ffa[N],d[N],od[N],fa[N];\nvoid add(int x,int y)\n{\n\tver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,Next[tot]=head[y],head[y]=tot;\n}\nvoid findroot(int x,int f)\n{\n\tsiz[x]=1;\n\tfor(int i=head[x],y=ver[i];i;i=Next[i],y=ver[i])\n\t\tif(y!=f)\n\t\t{\n\t\t\tfindroot(y,x);\n\t\t\tsiz[x]+=siz[y];\n\t\t\tif(siz[y]>siz[son[x]])\n\t\t\t\tson[x]=y;\n\t\t}\n\tif(siz[son[x]]*2<=n && (n-siz[x])*2<=n)\n\t\troot=x;\n}//\u627e\u91cd\u5fc3\nvoid pre(int x,int f)\n{\n\tsiz[x]=1,d[x]=d[f]+1,fa[x]=f;\n\tif(f==root)\n\t\tffa[x]=x;\n\telse\n\t\tffa[x]=ffa[f];\n\tfor(int i=head[x],y=ver[i];i;i=Next[i],y=ver[i])\n\t\tif(y!=f)\n\t\t{\n\t\t\tpre(y,x);\n\t\t\tsiz[x]+=siz[y];\n\t\t\tif(siz[y]>siz[son[x]])\n\t\t\t{\n\t\t\t\tif(x==root)\n\t\t\t\t\tson2=son[x];\n\t\t\t\tson[x]=y;\n\t\t\t}\n\t\t\telse\n\t\t\t\tif(x==root && siz[y]>siz[son2])\n\t\t\t\t\tson2=y;\n\t\t}\n}//\u9884\u5904\u7406\u8282\u70b9\u4fe1\u606f\nvoid get1(int x,int f)\n{\n\tif(son[x])\n\t\tget1(son[x],x);\n\twhile(n-2*siz[x]<=nowans && nowans)\n\t{\n\t\tans1[nowans]=x;\n\t\tnowans--;\n\t}\n}\nvoid get2(int x,int f)\n{\n\tif(x==root)\n\t\tnowans=n,get2(son2,x);\n\telse\n\t\tif(son[x])\n\t\t\tget2(son[x],x);\n\twhile(n-2*siz[x]<=nowans && nowans)\n\t{\n\t\tans2[nowans]=x;\n\t\tnowans--;\n\t}\n}\nvoid get3(int r)\n{\n\tif(son[r])\n\t\tget3(son[r]);\n\tfor(int i=head[r],y=ver[i];i;i=Next[i],y=ver[i])\n\t\tif(y!=son[r] && d[y]>d[r])\n\t\t\tget3(y);\n\tint now=son[r]?ans3[son[r]]:r;\n\twhile(siz[now]*2<siz[r])\n\t\tnow=fa[now];\n\tans3[r]=now;\n}//\u9884\u5904\u7406\u7b54\u6848\nvoid clear()\n{\n\tmemset(head,0,sizeof(head));\n\tmemset(Next,0,sizeof(Next));\n\tmemset(ver,0,sizeof(ver));\n\tmemset(son,0,sizeof(son));\n\tnowans=n,son2=tot=ans=0;\n}\nbool check1(int x,int y)\n{\n\treturn x && siz[son[x]]*2<=siz[y] && (siz[y]-siz[x])*2<=siz[y];\n}\nbool check2(int x,int y)\n{\n\tif(x==root)\n\t\treturn siz[son2]*2<=n-siz[y];\n\treturn x && siz[son[x]]*2<=n-siz[y] && (n-siz[y]-siz[x])*2<=n-siz[y];\n}\nbool check3(int x,int y)\n{\n\tif(x==root)\n\t\treturn siz[son[x]]*2<=n-siz[y];\n\treturn x && siz[son[x]]*2<=n-siz[y] && (n-siz[y]-siz[x])*2<=n-siz[y];\n}\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tclear();\n\t\tfor(int i=1,x,y;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tadd(x,y);\n\t\t}\n\t\tfindroot(1,0);\n\t\tmemset(son,0,sizeof(son));\n\t\tpre(root,0),get1(root,0),get2(root,0),get3(root);\n\t\tfor(int i=1;i<=tot;i+=2)\n\t\t{\n\t\t\tint x=ver[i],y=ver[ano];\n\t\t\tif(d[x]>d[y])\n\t\t\t\tswap(x,y);\n\t\t\tint h1=ans3[y];\n\t\t\tans+=h1;\n\t\t\tif(d[fa[h1]]>=d[y] && check1(fa[h1],y))\n\t\t\t\tans+=fa[h1];\n\t\t\tif(ffa[y]==son[root])\n\t\t\t\tif(siz[son[root]]-siz[y]>=siz[son2])\n\t\t\t\t\tans+=root;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans+=ans2[siz[y]];\n\t\t\t\t\tif(check2(fa[ans2[siz[y]]],y))\n\t\t\t\t\t\tans+=fa[ans2[siz[y]]];\n\t\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans+=ans1[siz[y]];\n\t\t\t\tif(check3(fa[ans1[siz[y]]],y))\n\t\t\t\t\tans+=fa[ans1[siz[y]]];\n\t\t\t}\n\t\t}//\u679a\u4e3e\u5220\u8fb9\u6c42\u7b54\u6848\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1574775992,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "P5666 \u6811\u7684\u91cd\u5fc3"
    },
    {
        "content": "\u672c\u505a\u6cd5\u6d1b\u8c37\u4e0a\u53ef\u4ee5\u901a\u8fc7, \u53d1\u7bc7\u9898\u89e3\u6512\u6512\u4eba\u54c1.\n\n\u6807\u7b7e:\u4e3b\u5e2d\u6811, dfs\u5e8f, \u6811\u72b6\u6570\u7ec4.\n\n\u5bb9\u6613\u60f3\u5230\u5bf9\u6bcf\u4e2a\u70b9\u5206\u522b\u6c42\u8d21\u732e(\u5373\u6c42\u6bcf\u4e2a\u70b9\u5272\u53bb\u90a3\u4e9b\u8fb9\u4f1a\u6210\u4e3a\u91cd\u5fc3), \u6211\u4eec\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u70b9(\u5c31\u662f $1$\u53f7\u8282\u70b9\u8fa3!)\u5c06\u5176\u4f5c\u4e3a\u6839\u8282\u70b9.\n\n\u6a21\u4eff\u9898\u76ee\u4e2d\u7684\u63cf\u8ff0, \u5b9a\u4e49 $u$ \u7684 **\u5206\u88c2\u5b50\u6811** \u8868\u793a\u5728\u6811\u4e2d\u5220\u53bb $u$ \u53ca\u4e0e\u5b83\u5173\u8054\u7684\u8fb9\u540e, \u5206\u88c2\u51fa\u7684\u5b50\u6811, \u90a3\u4e48\u4e00\u6761\u8fb9 $e$ \u5bf9\u4e00\u4e2a\u70b9 $u$ \u6709\u8d21\u732e, \u5f53\u4e14\u4ec5\u5f53\u5272\u53bb $e$ \u540e, \u8003\u8651 $u$ \u6240\u5728\u7684\u4e00\u90e8\u5206(\u8bb0\u8fd9\u90e8\u5206\u7684\u5927\u5c0f\u4e3a $tmp$, \u8bb0\u53e6\u4e00\u90e8\u5206\u4e3a**\u5272\u53bb\u7684\u90e8\u5206**), $u$ \u6700\u5927\u7684**\u5206\u88c2\u5b50\u6811** \u7684\u5927\u5c0f\u4e0d\u5927\u4e8e $\\lfloor\n\\frac{tmp}2\\rfloor$. \n\n#### Part 1\n\n\u9996\u5148\u6211\u4eec\u5148\u8003\u8651**\u6839\u7ed3\u70b9**\u7684\u8d21\u732e, \u6211\u4eec\u5148\u6c42\u51fa**\u6839\u8282\u70b9**\u7684\u6bcf\u4e00\u68f5\u513f\u5b50\u7684\u5b50\u6811\u7684\u5927\u5c0f $size$, \u53d6 $size$ \u6700\u5927\u7684\u513f\u5b50\u8bb0\u4e3a $mx$.\n\n\u663e\u7136\u5982\u679c\u6211\u4eec\u5272\u6389\u7684\u8fb9\u4e0d\u5728 $mx$ \u7684\u5b50\u6811\u5185, $u$ \u6700\u5927\u7684**\u5206\u88c2\u5b50\u6811** \u7684\u5927\u5c0f\u4e0d\u4f1a\u6539\u53d8, \u90a3\u4e48\u8fd9\u6761\u8fb9\u6709\u8d21\u732e\u9700\u8981\u6ee1\u8db3$size_{mx}\\leqslant \\lfloor\\frac{n-t}{2}\\rfloor$, \u5176\u4e2d $t$ \u8868\u793a**\u5272\u53bb\u7684\u90e8\u5206** \u7684\u5927\u5c0f, \u7a0d\u52a0\u53d8\u5f62\u540e\u5f97\u5230 $t\\leqslant n-2\\times size_{mx}$.\n\n\u8003\u8651\u5272\u6389\u7684\u8fb9\u5728 $mx$ \u7684\u5b50\u6811\u5185, $u$ \u7684\u6700\u5927 **\u5206\u88c2\u5b50\u6811** \u53ef\u80fd\u4f1a\u53d8\u6210\u539f\u6765\u6b21\u5927\u7684(\u8bb0\u4e3a $mx'$ ), \u90a3\u4e48\u6211\u4eec\u9700\u8981\u6ee1\u8db3 $size_{mx}-t\\leqslant \\lfloor\\frac{n-t}{2}\\rfloor, size_{mx'}\\leqslant \\lfloor\\frac{n-t}{2}\\rfloor$, \u7a0d\u52a0\u53d8\u5f62\u540e\u5f97\u5230 $2\\times size_{mx}-n\\leqslant t\\leqslant n-2\\times size_{mx'}$.\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u77e5\u9053 $t$ \u53d6\u6bcf\u4e2a\u503c\u7684\u65b9\u6848\u6570, \u663e\u7136 $t$ \u7684\u4e00\u4e2a\u53d6\u503c\u5bf9\u5e94\u4e86\u4e00\u4e2a\u8282\u70b9\u5b50\u6811\u7684\u5927\u5c0f, \u6211\u4eec\u5bf9\u6bcf\u4e2a**\u6839**\u7684\u513f\u5b50\u6c42\u51fa\u5176\u5b50\u6811\u5185 $t$ \u7684\u53d6\u503c\u60c5\u51b5, \u5728\u5206\u522b\u6c42\u51fa\u5408\u6cd5\u7684 $t$ \u7684\u65b9\u6848\u5c31\u597d\u4e86.\n\n\u590d\u6742\u5ea6 $\\mathcal O(n)$, \u4e8b\u5b9e\u4e0a\u679a\u4e3e\u6bcf\u4e2a\u70b9\u505a\u6839\u6c42\u4e00\u904d\u7b54\u6848\u53ef\u4ee5\u505a\u5230 $\\mathcal O(n^2)$.\n\n#### Part 2\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5176\u4ed6\u70b9\u7684\u8d21\u732e, \u53d1\u73b0\u5176\u4ed6\u70b9\u4e0e\u6839\u8282\u70b9\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\u5177\u6709 **\u5916\u5b50\u6811** (\u6307\u65ad\u6389\u4e0e\u7236\u4eb2\u8282\u70b9\u7684\u8fde\u8fb9\u7684\u90a3\u68f5\u5b50\u6811), \u90a3\u4e48\u8be5\u5982\u4f55\u7ef4\u62a4\u5916\u5b50\u6811\u7684 $t$ \u7684\u53d6\u503c\u5462?\n\n\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5728 $\\mathcal O(n\\log n)$ \u7684\u65f6\u95f4\u5185\u901a\u8fc7 \u7ebf\u6bb5\u6811\u5408\u5e76, \u4e3b\u5e2d\u6811+dfs\u5e8f \u7b49\u65b9\u6cd5\u6765\u7ef4\u62a4 **\u5185\u5b50\u6811** (\u4e0e**\u5916\u5b50\u6811**\u76f8\u5bf9)\u7684 $t$ \u7684\u53d6\u503c, \u8fd9\u91cc\u4e0d\u8d58\u8ff0, \u90a3\u4e48\u662f\u5426\u53ef\u4ee5\u7ef4\u62a4**\u6574\u68f5\u6811**\u5bf9\u4e8e\u67d0\u4e2a\u70b9\u7684 $t$ \u7684\u53d6\u503c\u5462? \u8fd9\u6837\u51cf\u53bb**\u5185\u5b50\u6811**\u7684\u90e8\u5206, \u5c31\u53ef\u4ee5\u5f97\u5230**\u5916\u5b50\u6811**\u7684 $t$ \u7684\u53d6\u503c\u4e86.\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u662f\u53ef\u4ee5\u7ef4\u62a4\u7684, \u9996\u5148\u6574\u68f5\u6811\u5bf9\u4e8e**\u6839**\u7ed3\u70b9\u7684 $t$ \u53d6\u503c\u5c31\u662f\u5904\u6839\u8282\u70b9\u5916\u6240\u6709\u70b9\u7684\u5b50\u6811\u5927\u5c0f. \u8003\u8651\u6211\u4eec\u5df2\u77e5\u6574\u68f5\u6811\u5bf9\u70b9 $u$ \u7684\u60c5\u51b5,  \u5982\u4f55\u6c42 $u$ \u7684\u4e00\u4e2a\u513f\u5b50 $v$ \u7684\u60c5\u51b5\u5462? \u53d1\u73b0 $u, v$ \u65ad\u53bb\u67d0\u6761\u8fb9\u7684 $t$ \u4e0d\u540c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u6761\u8fb9\u662f $(u,v)$, \u6240\u4ee5 $v$ \u7684 $t$ \u7684\u53d6\u503c\u6bd4 $u$ \u591a\u4e86\u4e00\u4e2a $n-sz_v$, \u5c11\u4e86\u4e00\u4e2a $sz_v$. \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8fb9dfs\u8fb9\u7ef4\u62a4\u6574\u68f5\u6811\u5bf9\u4e8e\u67d0\u4e2a\u70b9\u7684 $t$ \u7684\u53d6\u503c\u4e86, \u8fd9\u91cc\u8981\u7528\u5230\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811, \u590d\u6742\u5ea6\u662f $\\mathcal O(n\\log n)$ \u7684.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$ , \u7a7a\u95f4\u590d\u6742\u5ea6  $\\mathcal O(n\\log n)$ .\n\n~~\u4ee3\u7801\u4e0d\u6562\u8d34, \u6015\u88abhack~~\n\nupd, \u628a\u4ee3\u7801\u8865\u4e0a, \u4e0d\u7136\u53ef\u80fd\u770b\u4e0d\u592a\u61c2\u54c8.\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint read();\n\nint n;\n\nint hd[300005], nx[600005], to[600005], cnt;\nvoid add(int f, int t) { nx[++cnt] = hd[f], hd[f] = cnt, to[cnt] = t; }\n\nstruct Bit {\n\tint ts[300005];\n\tvoid add(int p, int v) {\n\t\tfor (; p <= n; p += p & (-p)) ts[p] += v;\n\t}\n\tint qry(int l, int r) {\n\t\tif (l > r) return 0;\n\t\tl--;\n\t\tint rt = 0;\n\t\twhile (l != r) {\n\t\t\tif (l > r) rt -= ts[l], l -= l & (-l);\n\t\t\tif (r > l) rt += ts[r], r -= r & (-r);\n\t\t}\n\t\treturn rt;\n\t}\n} bit;\n\nint sz[300005], mx[300005][2];\n\nstruct P {\n\tint u, l, r;\n} w[600005];\n\nint root[300005];\nstruct Pseg {\n\tint idcnt;\n\tint ls[10000007], rs[10000007], ts[10000007];\n\tvoid add(int &x, int k, int l, int r, int p) {\n\t\tts[x = ++idcnt] = ts[k] + 1, ls[x] = ls[k], rs[x] = rs[k];\n\t\tif (l == r) return;\n\t\tint mid = l + r >> 1;\n\t\t(p <= mid) ? add(ls[x], ls[k], l, mid, p)\n\t\t\t: add(rs[x], rs[k], mid + 1, r, p);\n\t}\n\tint qry(int k1, int k2, int l, int r, int st, int en) {\n\t\tif (st > r || en < l) return 0;\n\t\tif (st <= l && en >= r) return ts[k2] - ts[k1];\n\t\tint mid = l + r >> 1;\n\t\treturn qry(ls[k1], ls[k2], l, mid, st, en) + qry(rs[k1], rs[k2], mid + 1, r, st, en);\n\t}\n} seg;\n\nlong long res;\n\nint l[300005], r[300005], L[300005], R[300005];\nint pre[300005], pst[300005], frt[300005], dfn;\nint fa[300005];\nvoid dfs1(int u) {\n\tsz[u] = 1, root[pre[u] = ++dfn] = 0, frt[dfn] = u, mx[u][0] = mx[u][1] = 0;\n\tint tmx = 0, tci = 0;\n\tfor (int i = hd[u], v; i; i = nx[i]) {\n\t\tif ((v = to[i]) == fa[u]) continue;\n\t\tfa[v] = u, dfs1(v), sz[u] += sz[v];\n\t\tif (sz[mx[u][1]] < sz[v]) mx[u][1] = v;\n\t\tif (sz[mx[u][0]] < sz[mx[u][1]]) swap(mx[u][0], mx[u][1]);\n\t}\n\tif (fa[u]) bit.add(sz[u], 1);\n\ttmx = sz[mx[u][0]], tci = sz[mx[u][1]];\n\tif (sz[mx[u][1]] < n - sz[u]) {\n\t\tmx[u][1] = fa[u], tci = n - sz[u];\n\t\tif (sz[mx[u][0]] < n - sz[u]) \n\t\t\tswap(mx[u][0], mx[u][1]), swap(tmx, tci);\n\t}\n\tL[u] = 1, R[u] = n - tmx * 2; \n\tl[u] = max(1, 2 * tmx - n),\tr[u] = n - 2 * tci;\n\tpst[u] = dfn;\n}\n\nvoid dfs2(int u) {\n\tres += 1ll * u * ((mx[u][0] == fa[u]) ? \n\t\t\t\t\t  bit.qry(l[u], r[u]) : bit.qry(L[u], R[u]));\n\tfor (int i = hd[u]; i; i = nx[i])\n\t\tif (to[i] != fa[u]) {\n\t\t\tbit.add(sz[to[i]], -1), bit.add(n - sz[to[i]], 1);\n\t\t\tdfs2(to[i]);\n\t\t\tbit.add(sz[to[i]], 1), bit.add(n - sz[to[i]], -1);\n\t\t}\n}\n\nint main() {\n\tint T = read();\n\twhile (T--) {\n\t\tn = read(), cnt = 0, res = 0, dfn = 0, seg.idcnt = 0;\n\t\tfor (int i = 1; i <= n; ++i) hd[i] = 0;\n\t\tfor (int i = 1, u, v; i < n; ++i)\n\t\t\tu = read(), v = read(), add(u, v), add(v, u);\n\t\tfor (int i = 1; i <= n; ++i) bit.ts[i] = 0;\n\t\tdfs1(1), dfs2(1);\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tseg.add(root[i], root[i - 1], 1, n, sz[frt[i]]);\n\t\tfor (int u = 1; u <= n; ++u) {\n\t\t\tif (mx[u][0] != fa[u]) {\n\t\t\t\tfor (int i = hd[u], v; i; i = nx[i]) {\n\t\t\t\t\tif ((v = to[i]) == mx[u][0]) {\n\t\t\t\t\t\tres -= 1ll * u * \n\t\t\t\t\t\t\tseg.qry(root[pre[v] - 1], root[pst[v]], 1, n, L[u], R[u]);\n\t\t\t\t\t\tres += 1ll * u * \n\t\t\t\t\t\t\tseg.qry(root[pre[v] - 1], root[pst[v]], 1, n, l[u], r[u]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tres -= 1ll * u * \n\t\t\t\t\tseg.qry(root[pre[u]], root[pst[u]], 1, n, l[u], r[u]);\n\t\t\t\tres += 1ll * u * \n\t\t\t\t\tseg.qry(root[pre[u]], root[pst[u]], 1, n, L[u], R[u]);\n\t\t\t}\t\t\t\n\t\t}\n\t\tprintf(\"%lld\\n\", res);\n\t}\n\treturn 0;\n}\n\nint read() {\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (!isdigit(c)) f = (c == '-') ? -1 : f, c = getchar();\n\twhile (isdigit(c)) x = x * 10 + c - '0', c = getchar();\n\treturn x * f;\n}\n```\n",
        "postTime": 1574001253,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3010\u6c11\u95f4\u6570\u636e\u3011\u3011"
    },
    {
        "content": "\u6839\u636e\u91cd\u5fc3\u7684\u6027\u8d28\uff0c\u8fd9\u4e2a\u9898\u660e\u663e\u6709$O(n)$\u89e3\u6cd5\u3002\n\n\u4ee5\u91cd\u5fc3$root$\u4e3a\u6839\u3002\n\n\u8bb0$g_x$\u8868\u793a\u5b50\u6811$x$\u7684\u91cd\u5fc3\uff0c$size(x)$\u8868\u793a\u5b50\u6811$x$\u7684\u5927\u5c0f\uff0c$mx_x$\u8868\u793a$x$\u7684\u5b50\u6811\u5927\u5c0f\u6700\u5927\u7684\u513f\u5b50\u3002\n\n\u90a3\u4e48$g_x$\u80af\u5b9a\u5728$path(x,g_{mx_x})$\u4e0a\u3002\u76f4\u63a5\u4ece$g_{mx_x}$\u5411\u4e0a\u8d70\u5373\u53ef\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n\u7136\u540e\u8003\u8651\u53bb\u6389\u5b50\u6811$x$\u7684\u91cd\u5fc3\u3002\u53bb\u6389\u5b50\u6811$x$\u540e\uff0c\u91cd\u5fc3$root$\u53ea\u53ef\u80fd\u5411\u6700\u5927\u7684\u513f\u5b50\u79fb\u52a8\u3002\n\n\u8bb0$root$\u7684\u6b21\u5927\u513f\u5b50\u662f$mx'$\uff0c\u7b2c\u4e00\u6b65\u79fb\u52a8\u53ea\u53ef\u80fd\u5411$mx_{root}$\u6216$mx'$\u3002\n\n\u82e5$x$\u5728\u5b50\u6811$mx_{root}$\u5185\uff0c\u4e14\u5220\u53bb\u5b50\u6811$x$\u540e$2size(mx')>n$\uff08\u6b64\u65f6$2size(mx_{root})<n$\u5fc5\u7136\u6210\u7acb\uff09\uff0c\u5219\u91cd\u5fc3\u5411$mx'$\u79fb\u52a8\u3002\n\n\uff08\u663e\u7136\uff0c\u82e5$root$\u6709\u591a\u4e2a\u6b21\u5927\u513f\u5b50\uff0c\u5219\u91cd\u5fc3\u4e0d\u53ef\u80fd\u5411\u4efb\u4e00\u6b21\u5927\u513f\u5b50\u79fb\u52a8\u3002\uff09\n\n\u8bb0$g$\u4e3a\u5f53\u524d\u91cd\u5fc3\uff0c\u4e4b\u540e\u53ea\u53ef\u80fd\u5411$g_{mx}$\u79fb\u52a8\u3002\n\n\u5220\u9664\u7684\u5b50\u6811\u8d8a\u5927\u91cd\u5fc3\u79fb\u52a8\u5f97\u8d8a\u8fdc\u3002\u5404\u79cd\u7ebf\u6027\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u90fd\u884c\u3002\n\n\u6ce8\u610f\u5904\u7406\u4e24\u4e2a\u91cd\u5fc3\u7684\u60c5\u51b5\u3002\n\n\u603b\u590d\u6742\u5ea6$O(n)$\u3002\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define rep(i,x,y) for (int i=x; i<=(y); ++i)\n#define repe(i,x) for (edge *i=x; i; i=i->nxt)\n\nint get()\n{\n    char c;\n    while (!isdigit(c=getchar()));\n    int k=c-'0';\n    for (; isdigit(c=getchar()); k=k*10+c-'0');\n    return k;\n}\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N=3e5;\n\nint n,root,idx,id[N],s[N],mx[N],fa[N];\nll ans;\n\nstruct edge\n{\n    int v;\n    edge *nxt;\n} pool[N*2],*tp,*fst[N];\n\nint dfs0(int x,int fa=0)\n{\n    s[x]=1;\n    int v,mx=0;\n    repe(i,fst[x])\n        if ((v=i->v)!=fa)\n        {\n            int t=dfs0(v,x);\n            if (t)\n                return t;\n            s[x]+=s[v],mx=max(mx,s[v]);\n        }\n    mx=max(mx,n-s[x]);\n    return mx<<1<=n? x:0;\n}\n\nint dfs1(int x)\n{\n    id[x]=++idx,s[x]=1,mx[x]=0;\n    int v,g=x;\n    repe(i,fst[x])\n        if ((v=i->v)!=fa[x])\n        {\n            fa[v]=x;\n            int t=dfs1(v);\n            s[x]+=s[v];\n            if (s[v]>s[mx[x]])\n                mx[x]=v,g=t;\n        }\n    if (x==root)\n        return x;\n    while (s[g]<<1<s[x])\n        g=fa[g];\n    ans+=s[g]<<1>s[x]? g:g+fa[g];\n    return g;\n}\n\nint a[N],*pa;\nint b[N],*pb;\n\nint find(int &g,int n)\n{\n    while (s[mx[g]]<<1>=n)\n        g=mx[g];\n    return s[g]<<1>n? g:g+fa[g];\n}\n\nint gx[N],gy[N];\n\nvoid work()\n{\n    tp=pool,memset(fst,0,sizeof(fst)),ans=0;\n    n=get();\n    rep(i,2,n)\n    {\n        int u=get(),v=get();\n        *tp=(edge){v,fst[u]},fst[u]=tp++;\n        *tp=(edge){u,fst[v]},fst[v]=tp++;\n    }\n    root=dfs0(1);\n    idx=fa[root]=0,dfs1(root);\n    \n    int x=root,y=0;\n    repe(i,fst[root])\n        if (i->v!=mx[x] && s[i->v]>s[y])\n            y=i->v;\n    int mn=n-s[y]*2,l=id[mx[x]],r=l+s[mx[x]];\n    rep(k,1,n-1)\n        gx[k]=find(x,n-k);\n    gx[n]=0;\n    fill(gy+1,gy+mn,root);\n    rep(k,mn,n-1)\n        gy[k]=find(y,n-k);\n    rep(i,1,n)\n        ans+=l<=id[i] && id[i]<r? gy[s[i]]:gx[s[i]];\n    printf(\"%lld\\n\",ans);\n}\n\nint main()\n{\n    for (int tc=get(); tc--; work());\n    return 0;\n}\n```",
        "postTime": 1574316086,
        "uid": 2508,
        "name": "1gnat2",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3010\u6c11\u95f4\u6570\u636e\u3011\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P5666)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n### $40pts\\sim75pts$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u90fd\u662f\u90e8\u5206\u5206\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$40pts$\u5199\u4e00\u4e2a$O(n^2)$\u7684\u66b4\u529b\uff0c\u94fe\u7684$15pts$\u76f4\u63a5\u505a\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6ee1\u4e8c\u53c9\u6811\u627e\u89c4\u5f8b\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u5984\u56fe\u63a9\u76d6\u81ea\u5df1\u5e76\u4e0d\u4f1a\u5199\u6ee1\u4e8c\u53c9\u6811\u7684\u4e8b\u5b9e\u3002~~  \n### $100pts$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u9053\u9898\u6a2a\u770b\u7ad6\u770b~~\u659c\u770b~~\u90fd\u6ca1\u6709\u4ec0\u4e48\u6bd4\u8f83\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c\u53ea\u80fd\u5bf9\u66b4\u529b\u8fdb\u884c\u4f18\u5316\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6709\u8da3\u7684\u662f\uff0c\u771f\u6709\u4e00\u79cd\u5bf9\u4e8e\u6811\u7684\u91cd\u5fc3\u67e5\u8be2\u7684\u4f18\u5316\u65b9\u6cd5\u2014\u2014\u500d\u589e\u3002    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u4e0d\u77e5\u9053\u7684\u540c\u5b66\uff0c\u4ee5\u4e0b\u662f\u8865\u4e60\u5185\u5bb9\u3002~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u4e86\u91cd\u5fc3\uff0c~~\u6211\u5e76\u6ca1\u6709~~\u6211\u4eec\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u53e6\u4e00\u4e2a\u6982\u5ff5\u2014\u2014\u91cd\u513f\u5b50\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5e76\u4e14\uff0c\u4e0d\u96be\u60f3\u5230\uff0c\u5bf9\u4e8e\u4ee5$u$\u4e3a\u6839\u7684\u4e00\u9897\u5b50\u6811\uff0c\u5982\u679c$u$\u4e0d\u662f\u5b50\u6811\u7684\u91cd\u5fc3\uff0c\u90a3\u4e48\u91cd\u5fc3\u4e00\u5b9a\u5728$u$\u7684\u91cd\u513f\u5b50\u7684\u5b50\u6811\u91cc\u9762\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c$u$\u4e0d\u662f\u81ea\u5df1\u7684\u5b50\u6811\u7684\u91cd\u5fc3\uff0c\u90a3\u4e48**\u91cd\u5fc3\u7684\u65b9\u5411\uff0c\u6211\u4eec\u662f\u5b8c\u5168\u53ef\u4ee5\u786e\u5b9a\u7684\u3002**  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7c7b\u4f3c\u4e8e\u6811\u4e0a\u7684$LCA$\uff0c\u5f53\u6211\u4eec\u628a\u65b9\u5411\u786e\u5b9a\u4e86\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u505a\u500d\u589e\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u901a\u8fc7\u500d\u589e\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u4e00\u9897\u5b50\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u5728$O(log_2n)$\u7684\u65f6\u95f4\u91cc\u9762\u6c42\u51fa\u8fd9\u4e2a\u5b50\u6811\u7684\u91cd\u5fc3\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\uff0c\u5b9a\u4e49$s(u)$\u4e3a\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\u3002\u500d\u589e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5bfb\u627e\u6700\u6df1\u7684\u90a3\u4e2a\u91cd\u513f\u5b50$v$\uff0c\u4f7f\u5f97$s(u)-s(v)\\le \\frac{s(u)} 2$\uff0c\u5b83\u5c31\u6210\u4e3a\u4e86\u91cd\u5fc3\u7684\u5019\u9009\u70b9\uff1b\u540c\u65f6\u5b83\u7684\u7236\u4eb2\u4e5f\u6709\u53ef\u80fd\u662f\u91cd\u5fc3\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u70b9\u5206\u522b\u5224\u65ad\u53ef\u884c\u6027\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7b54\u6848\u3002    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0b\u9762\u6269\u5c55\u5230\u539f\u9898\u4e0a\u9762\u6765\u3002\u8003\u8651\u4e00\u6b21\u5220\u8fb9\u64cd\u4f5c\uff0c\u5220\u9664\u6389\u4e86\u8fb9$(u,v)$\uff0c\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e24\u9897\u6811\uff0c\u4e00\u4e2a\u4ee5$u$\u4e3a\u6839\uff0c\u4e00\u4e2a\u4ee5$v$\u4e3a\u6839\u3002\u4e24\u68f5\u6811\u6211\u4eec\u90fd\u8981\u7528\u500d\u589e\u7684\u65b9\u6cd5\u5404\u81ea\u6c42\u91cd\u5fc3\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u59a8\u8bbe$u$\u6bd4$v$\u6d45\uff0c\u90a3\u4e48\u5bf9\u4e8e$v$\u7684\u6c42\u89e3\u662f\u975e\u5e38\u7b80\u5355\u7684\uff08\u7528\u5df2\u6709\u7684\u4fe1\u606f\u548c\u65b9\u6cd5\u5c31\u53ef\u4ee5\u63a8\u51fa\u6765\uff09\u3002\u5bf9\u4e8e$u$\u7684\u6c42\u89e3\u5176\u5b9e\u4e5f\u4e0d\u96be\u3002\u7528\u4e00\u4e2a$DFS$\uff0c\u5728\u904d\u5386\u8fd9\u68f5\u6811\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u7236\u4eb2\u5408\u5e76\u5230\u513f\u5b50\u4e0a\uff0c\u8ba9\u513f\u5b50\u6210\u4e3a\u7236\u4eb2\uff0c\u7236\u4eb2\u6210\u4e3a\u539f\u6765\u513f\u5b50\u7684\u513f\u5b50\uff0c~~\u603b\u6709\u513f\u5b50\u60f3\u5f53\u7238\u7238~~\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5bf9\u4fe1\u606f\u7684\u4fee\u6539\u6765\u5b9e\u73b0\u3002\u7136\u540e\uff0c\u5f53\u6211\u4eec\u904d\u5386\u5230$u$\u65f6\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u77e5\u9053\u4e86\u8fd9\u68f5\u5b50\u6811\u91cc\u9762\u7684\u4fe1\u606f\u4e86\uff0c\u4e8e\u662f\u6c42\u89e3\u8d77\u6765\u4e5f\u5341\u5206\u7b80\u5355\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u88ab$O(nlog_2n)$\u5730\u89e3\u51b3\u4e86\u3002\n# \u4ee3\u7801\n```cpp\n#include <cmath>\n#include <cstdio>\n\ntypedef long long LL;\n\nconst int MAXN = 3e5 + 5, MAXLOG = 22;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0; char s = getchar();int f = 1;\n\twhile( s < '0' || '9' < s ) { f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ) { x = ( x << 3 ) + ( x << 1 ) + s - '0', s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ) { putchar( '-' ), x = -x; }\n\tif( 9 < x ) { write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\nstruct edge\n{\n\tint to, nxt;\n}Graph[MAXN << 1];\n\nint hv[MAXN][MAXLOG];\nint shv[MAXN], thv[MAXN], tsiz[MAXN], siz[MAXN], f[MAXN];\nint head[MAXN];\nLL ans;\nint N, lg2, cnt, allsiz;\n\nvoid addEdge( const int from, const int to )\n{\n\tcnt ++;\n\tGraph[cnt].to = to, Graph[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nvoid clear()\n{\n\tans = cnt = 0;\n\tfor( int i = 1 ; i <= N ; i ++ ) \n\t\thead[i] = 0, shv[i] = thv[i] = tsiz[i] = siz[i] = f[i] = hv[i][0] = 0;\n}\n\nvoid DFS1( const int u, const int fa )\n{\n\tint v;\n\ttsiz[u] = 1, f[u] = fa, hv[u][0] = shv[u] = 0;\n\tfor( int i = head[u] ; i ; i = Graph[i].nxt )\n\t{\n\t\tv = Graph[i].to;\n\t\tif( v ^ fa )\n\t\t{\n\t\t\tDFS1( v, u );\n\t\t\ttsiz[u] += tsiz[v];\n\t\t\tif( tsiz[hv[u][0]] < tsiz[v] ) shv[u] = hv[u][0], hv[u][0] = v;\n\t\t\telse if( tsiz[shv[u]] < tsiz[v] ) shv[u] = v;\n\t\t}\n\t}\n\tsiz[u] = tsiz[u];\n}\n\nvoid recalc( const int u )\n{\n\tfor( int j = 1 ; j <= lg2 ; j ++ )\n\t\thv[u][j] = hv[hv[u][j - 1]][j - 1];\n}\n\nvoid init()\n{\n\tfor( int j = 1 ; j <= lg2 ; j ++ )\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t\thv[i][j] = hv[hv[i][j - 1]][j - 1];\n}\n\nbool chk( const int u, const int all )\n{\n\treturn MAX( siz[hv[u][0]], all - siz[u] ) <= all >> 1;\n}\n\nvoid DFS2( const int u, const int fa )\n{\n\tint v, now;\n\tthv[u] = hv[u][0];\n\tfor( int i = head[u] ; i ; i = Graph[i].nxt )\n\t{\n\t\tv = Graph[i].to;\n\t\tif( v == fa ) continue;\n\t\tif( v == thv[u] ) hv[u][0] = shv[u];\n\t\telse hv[u][0] = thv[u];\n\t\t//\u513f\u5b50\u65b9\u5411\u4e0a\u7684\u91cd\u513f\u5b50 \n\t\tif( siz[fa] > siz[hv[u][0]] ) hv[u][0] = fa;\n\t\t//\u7956\u5148\u65b9\u5411\u4e0a\u7684\u91cd\u513f\u5b50\u4e5f\u8981\u5408\u5e76\u5230u\u4e0a\u9762 \n\t\trecalc( u );\n\t\tnow = u;\n\t\tsiz[u] = allsiz - tsiz[v], siz[v] = tsiz[v], f[u] = f[v] = 0;\n\t\tfor( int i = lg2 ; ~ i ; i -- )\n\t\t\tif( hv[now][i] && siz[u] - siz[hv[now][i]] <= siz[u] >> 1 ) now = hv[now][i];\n\t\tans += chk( now, siz[u] ) * now + chk( f[now], siz[u] ) * f[now];\n\t\tnow = v;\n\t\tfor( int i = lg2 ; ~ i ; i -- )\n\t\t\tif( hv[now][i] && siz[v] - siz[hv[now][i]] <= siz[v] >> 1 ) now = hv[now][i];\n\t\tans += chk( now, siz[v] ) * now + chk( f[now], siz[v] ) * f[now];\n\t\t//\u8ba1\u7b97\u7b54\u6848 \n\t\tf[u] = v;\n\t\t//\u8fdb\u5165\u5230v\u7684\u5b50\u6811\u4e4b\u540e\uff0c\u65e0\u8bba\u600e\u4e48\u5220\u8fb9\uff0cu\u90fd\u662fv\u7684\u513f\u5b50\uff0c\u6240\u4ee5\u8981\u66f4\u65b0\u7236\u4eb2\u4fe1\u606f \n\t\tDFS2( v, u );\n\t}\n\thv[u][0] = thv[u], siz[u] = tsiz[u], f[u] = fa;\n\trecalc( u );\n\t//\u56de\u6eaf \n}\n\nint main()\n{\n\tint T, fr, to;\n\tread( T );\n\twhile( T -- )\n\t{\n\t\tclear();\n\t\tread( N );\n\t\tlg2 = log2( N );\n\t\tfor( int i = 1 ; i < N ; i ++ )\n\t\t\tread( fr ), read( to ), addEdge( fr, to ), addEdge( to, fr );\n\t\tDFS1( 1, 0 );\n\t\tinit();\n\t\tallsiz = siz[1];\n\t\tDFS2( 1, 0 );\n\t\twrite( ans ), putchar( '\\n' );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1574477868,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[CSP-S2019]\u6811\u7684\u91cd\u5fc3"
    },
    {
        "content": "\u8003\u573a\u8fd9\u9053\u9898\u7684\u601d\u8003\u65f6\u95f4\u6bd4\u524d\u4e24\u9053\u9898\u90fd\u77ed\u2026\u2026\n\n\u679c\u7136\u662f\u5b66\u7684\u592a\u591a\u601d\u7ef4\u50f5\u5316\u4e86\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u4e2d\u7ed9\u7684\u5f0f\u5b50\u53ef\u4ee5\u7b49\u4ef7\u4e3a\u679a\u4e3e\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u67e5\u770b\u8fd9\u4e2a\u70b9\u4f1a\u4f5c\u4e3a\u591a\u5c11\u68f5\u5b50\u6811\u7684\u91cd\u5fc3\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u7684\u95ee\u9898\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a\u70b9 $x$ \uff0c\u6c42\u51fa\u8fd9\u4e2a\u70b9\u4f1a\u88ab\u7edf\u8ba1\u591a\u5c11\u6b21\uff0c\u4e5f\u5c31\u662f\u6c42\u51fa\u6709\u591a\u5c11\u5272\u6389\u4e00\u68f5\u5b50\u6811\u7684\u65b9\u6848\uff0c\u4f7f\u5f97 $x$ \u6210\u4e3a\u91cd\u5fc3\u3002\n\n\u9996\u5148\u62ce\u51fa\u6765\u4e00\u4e2a\u91cd\u5fc3\u5f53\u505a\u6811\u6839\uff0c\u7136\u540e dfs \u4e00\u904d\u3002\n\n\u5982\u679c $x$ \u4e0d\u662f\u91cd\u5fc3\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5728\u5b83\u7236\u4eb2\u7684\u90a3\u9897\u5b50\u6811\u4e2d\u5207\u6389\u4e00\u68f5\u5b50\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ygohn2wr.png)\n\n\u6211\u4eec\u8bbe $x$ \u8fd9\u68f5\u5b50\u6811\u5927\u5c0f\u4e3a $s$ \uff0c $x$ \u7684\u5b50\u8282\u70b9\u4e2d\u6700\u5927\u7684\u5b50\u6811\u5927\u5c0f\u4e3a $m$ \uff0c\u90a3\u4e48\u5207\u6389\u7684\u70b9 $del$ \u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u5f0f\u5b50\uff1a\n\n$$\\begin{cases}n-s-size[del]\\le \\dfrac{n-size[del]}{2}\\\\m\\le \\dfrac{n-size[del]}{2}\\end{cases}$$\n\n\u5316\u7b80\u53ef\u4ee5\u5f97\u5230\n\n$$n-2s\\le size[del]\\le n-2m$$\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u7236\u8282\u70b9\u7684\u90a3\u9897\u5b50\u6811\u4e2d $size=i$ \u7684\u5b50\u6811\u6570\u91cf\u3002\u5728 dfs \u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf dfs \u5230\u4e00\u4e2a\u70b9 $x$ \u5c31\u8ba9 $c[size[x]]-1,c[n-size[x]]+1$ \uff0c\u4e5f\u5c31\u662f\u5f53\u6211\u4eec\u5272\u6389 $f$ \u4e0e $x$ \u7684\u8fb9\u7684\u65f6\u5019\u5207\u6389\u7684\u5b50\u6811\u5927\u5c0f\u4ece $size[x]$ \u53d8\u6210\u4e86 $n-size[x]$ \u3002\u7edf\u8ba1\u7b54\u6848\u5c31\u662f\u533a\u95f4\u6c42\u548c\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u7edf\u8ba1\u7684\u7b54\u6848\u6709\u53ef\u80fd\u4f1a\u5305\u542b\u5728 $x$ \u7684\u5b50\u6811\u4e2d\u5220\u6389\u4e00\u68f5\u5b50\u6811\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u662f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u3002\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u518d dfs \u4e00\u904d\uff0c\u8fd9\u4e00\u6b21\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6c42\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d $size=i$ \u7684\u5b50\u6811\u6570\u91cf\u3002\u8fd9\u91cc\u7edf\u8ba1\u7684\u662f\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u4ece\u7b54\u6848\u91cc\u9762\u51cf\u53bb\u5c31\u884c\u4e86\u3002\n\n\u6700\u540e\u8fd8\u5269\u4e0b $x$ \u662f\u91cd\u5fc3\u7684\u60c5\u51b5\u3002\u7531\u4e8e\u91cd\u5fc3\u53ea\u6709\u6700\u591a\u4e24\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u4ee5\u91cd\u5fc3\u4e3a\u6839\u5bf9\u6574\u68f5\u6811\u8fdb\u884cdfs\uff0c\u7edf\u8ba1\u51fa $x$ \u8fd9\u4e2a\u70b9\u6700\u5927\u7684\u5b50\u6811 $m_1$ \u548c\u6b21\u5927\u7684\u5b50\u6811 $m_2$ \u3002\n\n\u63a5\u4e0b\u6765\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\u5982\u679c\u6211\u4eec\u662f\u5728\u6700\u5927\u7684\u5b50\u6811\u91cc\u9762\u5207\u5272\uff0c\u5c31\u9700\u8981\u6ee1\u8db3\n\n$$m_2\\le \\dfrac{n-size[del]}{2}$$\n\n\u5373\n\n$$size[del]\\le n-2m_2$$\n\n\u5426\u5219\u6211\u4eec\u9700\u8981\u6ee1\u8db3\n\n$$m_1\\le \\dfrac{n-size[del]}{2}$$\n\n\u5373\n\n$$size[del]\\le n-2m_1$$\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\u987a\u4fbf\u6c42\u51fa\u8fd9\u4e2a\u7b54\u6848\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \uff0c\u5728\u8003\u573a\u7535\u8111\u4e0a\u4e0d\u5199\u8bfb\u5165\u4f18\u5316 $3$s \u5de6\u53f3\uff0c\u5199\u8bfb\u5165\u4f18\u5316 $2.5$s \u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define ll long long\n#define lson tree[x].child[0]\n#define rson tree[x].child[1]\n#define mid (l+r)/2\nusing namespace std;\nstruct Edge\n{\n\tint to;\n\tint nxt;\n}e[600005];\nstruct Tree\n{\n\tint child[2];\n\tint sum;\n}tree[10000005];\nint n,m,edgenum,tot,head[300005],pa[300005],size[300005],s[300005],root[300005];\nll ans;\nbool isroot[300005];\nint read()\n{\n\tchar c=(char)getchar();\n\twhile(c>'9'||c<'0')c=(char)getchar();\n\tint t=0;\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tt=t*10+c-'0';\n\t\tc=(char)getchar();\n\t}\n\treturn t;\n}\nvoid add(int u,int v)\n{\n\te[++edgenum].to=v;\n\te[edgenum].nxt=head[u];\n\thead[u]=edgenum;\n}\nvoid dfs_pre(int node)//\u9884\u5904\u7406\uff0c\u627e\u51fa\u91cd\u5fc3\n{\n\tsize[node]=1;\n\tfor(int hd=head[node];hd;hd=e[hd].nxt)\n\t{\n\t\tint to=e[hd].to;\n\t\tif(to==pa[node])continue;\n\t\tpa[to]=node;\n\t\tdfs_pre(to);\n\t\tsize[node]+=size[to];\n\t\tif(size[to]>n/2)isroot[node]=0;\n\t}\n\tif(n-size[node]>n/2)isroot[node]=0;\n}\nvoid dfs1(int node)//\u6c42\u51fa\u6240\u6709\u7684size\n{\n\tsize[node]=1;\n\tfor(int hd=head[node];hd;hd=e[hd].nxt)\n\t{\n\t\tint to=e[hd].to;\n\t\tif(to==pa[node])continue;\n\t\tpa[to]=node;\n\t\tdfs1(to);\n\t\tsize[node]+=size[to];\n\t}\n}\nvoid add(int p)\n{\n\twhile(p<=n)\n\t{\n\t\ts[p]++;\n\t\tp+=p^(p&(p-1));\n\t}\n}\nvoid dec(int p)\n{\n\twhile(p<=n)\n\t{\n\t\ts[p]--;\n\t\tp+=p^(p&(p-1));\n\t}\n}\nint sum(int p)\n{\n\tint ans=0;\n\twhile(p)\n\t{\n\t\tans+=s[p];\n\t\tp&=p-1;\n\t}\n\treturn ans;\n}\nint sum(int l,int r)\n{\n\tif(l>r)return 0;\n\treturn sum(r)-sum(l-1);\n}//\u4ee5\u4e0a\u662f\u6811\u72b6\u6570\u7ec4\nint merge(int x,int y)\n{\n\tif(!x||!y)return x+y;\n\ttree[x].sum+=tree[y].sum;\n\tlson=merge(lson,tree[y].child[0]);\n\trson=merge(rson,tree[y].child[1]);\n\treturn x;\n}\nvoid add(int x,int l,int r,int p)\n{\n\ttree[x].sum++;\n\tif(l==r)return;\n\tif(p<=mid)\n\t{\n\t\tif(!lson)lson=++tot;\n\t\tadd(lson,l,mid,p);\n\t}\n\telse\n\t{\n\t\tif(!rson)rson=++tot;\n\t\tadd(rson,mid+1,r,p);\n\t}\n}\n//void debug(int x,int l,int r)\n//{\n//\tif(l==r)\n//\t{\n//\t\tprintf(\"%lld \",tree[x].sum);\n//\t\treturn;\n//\t}\n//\tdebug(lson,l,mid);\n//\tdebug(rson,mid+1,r);\n//}\nll sum(int x,int l,int r,int from,int to)\n{\n\tif(from>to)return 0;\n\tif(!x)return 0;\n\tif(l>=from&&r<=to)return tree[x].sum;\n\tll ans=0;\n\tif(from<=mid)ans+=sum(lson,l,mid,from,to);\n\tif(to>mid)ans+=sum(rson,mid+1,r,from,to);\n\treturn ans;\n}//\u4ee5\u4e0a\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\nvoid dfs2(int node)\n{\n//\tprintf(\"%d:\\n\",node);\n\tint max1=0,max2=0;\n\tfor(int hd=head[node];hd;hd=e[hd].nxt)\n\t{\n\t\tint to=e[hd].to;\n\t\tif(to==pa[node])continue;\n\t\tif(size[to]>max1)max2=max1,max1=size[to];\n\t\telse if(size[to]>max2)max2=size[to];\n\t}\n//\tprintf(\"max1=%d,max2=%d\\n\",max1,max2);\n\tif(isroot[node]&&pa[node])\n\t{\n\t\tif(n-size[node]>max1)max2=max1,max1=n-size[node];\n\t\telse if(n-size[node]>max2)max2=n-size[node];\n\t\tif(n-size[node]==max1)ans+=1ll*node*sum(1,n-2*max2);\n\t\telse ans+=1ll*node*sum(1,n-2*max1);\n\t}\n\tfor(int hd=head[node];hd;hd=e[hd].nxt)\n\t{\n\t\tint to=e[hd].to;\n\t\tif(to==pa[node])continue;\n\t\tpa[to]=node;\n\t\tdec(size[to]);\n\t\tadd(n-size[to]);\n\t\tdfs2(to);\n//\t\tprintf(\"to=%d,root=%d,\",to,root[to]);\n//\t\tdebug(root[to],1,n);\n//\t\tprintf(\"\\n\");\n\t\tif(isroot[node])\n\t\t{\n//\t\t\tprintf(\"%d->%d,range=\",node,to);\n//\t\t\tif(size[to]==max1)printf(\"%d %d,res=%lld\\n\",1,n-2*max2,sum(root[to],1,n,1,n-2*max2));\n//\t\t\telse printf(\"%d %d,res=%lld\\n\",1,n-2*max1,sum(root[to],1,n,1,n-2*max1));\n\t\t\tif(size[to]==max1)ans+=1ll*node*sum(root[to],1,n,1,n-2*max2);\n\t\t\telse ans+=1ll*node*sum(root[to],1,n,1,n-2*max1);\n\t\t}\n\t\troot[node]=merge(root[node],root[to]);\n\t\tadd(size[to]);\n\t\tdec(n-size[to]);\n\t}\n\tif(!isroot[node])\n\t{\n//\t\tprintf(\"node=%d:tot=%lld-%lld\\n\",node,sum(max(1,n-2*size[node]),min(n,n-2*max1)),sum(root[node],1,n,max(1,n-2*size[node]),min(n,n-2*max1)));\n\t\tans+=1ll*node*sum(max(1,n-2*size[node]),min(n,n-2*max1));\n\t\tans-=1ll*node*sum(root[node],1,n,max(1,n-2*size[node]),min(n,n-2*max1));\n\t}\n\tif(isroot[node]&&pa[node])\n\t{\n\t\tif(n-size[node]==max1)ans-=1ll*node*sum(root[node],1,n,1,n-2*max2);\n\t\telse ans-=1ll*node*sum(root[node],1,n,1,n-2*max1);\n\t}\n\tadd(root[node]?root[node]:root[node]=++tot,1,n,size[node]);\n//\tprintf(\"node=%d:\\n\",node);\n//\tprintf(\"tree:\");\n//\tdebug(root[node],1,n);\n//\tprintf(\"\\n\");\n//\tprintf(\"array:\");\n//\tfor(int i=1;i<=n;i++)printf(\"%lld \",sum(i)-sum(i-1));\n//\tprintf(\"\\n\");\n}\nint t;\nint main()\n{\n//\tfreopen(\"centroid.in\",\"r\",stdin);\n//\tfreopen(\"centroid.out\",\"w\",stdout);\n\tt=read();\n\twhile(t--)\n\t{\n\t\tn=read();\n\t\tans=edgenum=0;\n\t\tfor(int i=1;i<=tot;i++)tree[i].sum=tree[i].child[0]=tree[i].child[1]=0;\n\t\tfor(int i=1;i<=n;i++)s[i]=head[i]=pa[i]=size[i]=root[i]=0,isroot[i]=1;\n\t\ttot=0;\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tint u=read(),v=read();\n\t\t\tadd(u,v);\n\t\t\tadd(v,u);\n\t\t}\n\t\tdfs_pre(1);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(isroot[i])\n\t\t\t{\n\t\t\t\tpa[i]=0;\n\t\t\t\tdfs1(i);\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t  if(j!=i)add(size[j]);\n\t\t\t\tdfs2(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1574038443,
        "uid": 54214,
        "name": "wucstdio",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3010\u6c11\u95f4\u6570\u636e\u3011\u3011"
    },
    {
        "content": "\u8bf4\u4e00\u79cd\u6bd4\u8f83\u65e0\u8111\u7684\u4e3b\u5e2d\u6811\u601d\u8def\u3002\n\n\u9996\u5148\u8003\u8651\u90e8\u5206\u5206\u505a\u6cd5\uff1f$40pts$ \u5c31\u662f\u66b4\u529b\u679a\u4e3e\u5207\u54ea\u4e00\u6761\u8fb9\u3002$55pts$ \u7684\u94fe\u5728\u778e\u6620\u5c04\u4e00\u901a\u53ef\u4ee5 $O(1)$ \u6c42\u51fa\u5272\u5b8c\u4e4b\u540e\u4e24\u68f5\u6811\u7684\u91cd\u5fc3\u5206\u522b\u662f\u8c01\u3002$75pts$ \u7684\u6ee1\u4e8c\u53c9\u6811\u5927\u6982\u662f\u8981\u5148\u627e\u51fa $\\deg_x=2$ \u7684 $x$ \uff0c\u4e0d\u96be\u77e5\u9053\u8fd9\u4e2a\u4e00\u5b9a\u662f\u6839\uff0c\u627e\u4e00\u6ce2\u89c4\u5f8b\u53ef\u4ee5\u53d1\u73b0\u5272\u6389\u6bcf\u4e00\u6761\u8fb9\u4e4b\u540e\uff0c\u8f83\u5c0f\u7684\u90a3\u4e00\u534a\u7684\u91cd\u5fc3\u5fc5\u7136\u662f\u8fd9\u4e2a\u5c0f\u8fde\u901a\u5757\u7684\u6839\uff0c\u8f83\u5927\u7684\u90a3\u90e8\u5206\u7684\u91cd\u5fc3\u662f\u5bf9\u9762\u7684\u53e6\u4e00\u4e2a\u513f\u5b50\uff0c\u4e5f\u53ef\u80fd\u662f\u539f\u6811\u7684\u6839\u3002\u7b97\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u6ee1\u5206\u600e\u4e48\u505a\u3002\u4ee5\u4e0b\u8bbe $x$ \u4e3a\u5f53\u524d\u70b9\uff0c$y_k$ \u4e3a $x$ \u7684\u7b2c $k$ \u4e2a\u5b69\u5b50(\u987a\u5e8f\u968f\u4fbf\u5b9a\u7684)\uff0c$z$ \u4e3a $x$ \u7684\u91cd\u513f\u5b50\uff0c\u8bbe $s$ \u4e3a\u5272\u4e0b\u6765\u7684\u8fde\u901a\u5757\u5927\u5c0f\u3002 \n\n\u8fd9\u4e2a\u6ee1\u5206\u505a\u6cd5\uff0c\u6211\u81ea\u5df1\u63a8\u7684\u6bd4\u8f83\u70e6\uff0c\u4e0d\u5982\u5176\u4ed6\u4eba\u7b80\u6d01\u3002\u5927\u6982\u5c31\u662f\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5f53\u91cd\u5fc3\u7684\u6b21\u6570\u3002\u7136\u540e\u6211\u5206\u6210\u4e86\u4e09\u90e8\u5206\u7b97\u3002\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $x$ \uff0c\u4ed6\u53ef\u80fd\u6210\u4e3a\u91cd\u5fc3\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n### Case 1 \u5b83\u5b50\u6811\u5185\u7684\u67d0\u4e2a\u5b50\u6811\u88ab\u5272\u4e86\uff0c\u5b83\u6210\u4e3a\u4e86\u91cd\u5fc3\n\n\u8003\u8651\u6b64\u65f6\u8fd9\u4e2a\u5c0f\u5b50\u6811\u7684\u5b50\u6811\u5927\u5c0f\u9700\u8981\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u3002\u9996\u5148\u7531\u4e8e\u8981\u5206\u5b50\u6811\u8ba8\u8bba\uff0c\u4e0d\u59a8\u8bbe\u4ece $y_k$ \u4e2d\u5272\u6389\u4e86\u4e00\u68f5\u5c0f\u5b50\u6811\u3002\u90a3\u4e48\u8003\u8651\u8981\u6ee1\u8db3\u8fd9\u4e48\u51e0\u4e2a\u9650\u5236\uff1a\n\n$$\n\\begin{aligned}\nsize_{y_k}-s&\\leq \\lfloor \\frac{n-s}{2}\\rfloor\\\\\nn-size_x&\\leq \\lfloor \\frac{n-s}{2}\\rfloor\\\\\ng_y&\\leq  \\lfloor \\frac{n-s}{2}\\rfloor\n\\end{aligned}\n$$\n\n\u5176\u4e2d $g_y$ \u4e3a\u9664\u53bb\u5b50\u6811 $y$ \u540e\u5269\u4e0b\u7684\u5b50\u6811\u6700\u5927\u503c\u3002\u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\u672c\u8d28\u4e0a\u5e76\u4e0d\u5173\u5fc3\u90a3\u4e9b\u8f83\u5c0f\u7684\u5b50\u6811\u3002\n\n\u4e8e\u662f\u8fd9\u90e8\u5206\u5c31\u53ef\u4ee5\u5206\u5b50\u6811\u67e5\u3002\u53d1\u73b0\u672c\u8d28\u4e0a\u8f6c\u5316\u6210\u4e86\u5728 $dfs$ \u5e8f\u4e0a\u6c42\u300c\u533a\u95f4 $[l,r]$ \u5185\u503c\u57df\u5728 $[a,b]$ \u5185\u7684\u6570\u6709\u591a\u5c11\u300d\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e0a\u4e3b\u5e2d\u6811\u3002\u7136\u540e\u8fd9\u90e8\u5206\u5c31\u505a\u5b8c\u4e86\u3002\n\n### Case 2 \u5b83\u5b50\u6811\u5916\u7684\u67d0\u4e2a\u5b50\u6811\u88ab\u5272\u4e86\uff0c\u5b83\u6210\u4e3a\u4e86\u91cd\u5fc3\n\n\u6b64\u65f6\u8fd8\u662f\u4e0d\u53d8\uff0c\u4f46\u662f\u7ea6\u675f\u53d8\u4e3a\u4e86\n\n$$\n\\begin{aligned}\nn-s-size_x&\\leq \\lfloor \\frac{n-s}{2}\\rfloor\\\\\nz&\\leq \\lfloor \\frac{n-s}{2}\\rfloor\\\\\n\\end{aligned}\n$$\n\n\u8fd9\u90e8\u5206\u4e5f\u662f\u53ef\u4ee5\u76f4\u63a5\u4e3b\u5e2d\u6811\u6765\u6c42\u3002\u4f46\u662f\u6ce8\u610f\u89e3\u51fa\u6765\u7684 $[l,r]$ \u5185\u53ef\u80fd\u4f1a\u5305\u542b\u4ece $x$ \u5230\u6839\u8def\u5f84\u4e0a\u70b9(\u7956\u5148)\u7684\u5b50\u6811\u4fe1\u606f\uff0c\u53ef\u4ee5\u5bf9\u8fdb\u9000\u6808\u987a\u5e8f\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\u6765\u5bb9\u65a5\u6389\u8fd9\u4e00\u90e8\u5206\u3002\n\n### Case 3 \u5b83\u5b50\u6811\u5916\u67d0\u4e2a\u4e0d\u662f\u5b50\u6811\u7684\u8fde\u901a\u5757\u88ab\u5272\u4e86\uff0c\u5b83\u6210\u4e3a\u4e86\u91cd\u5fc3\n\n\u8003\u8651\u6b64\u65f6\u5272\u6389\u7684\u4e00\u5b9a\u662f $x$ \u5230\u6839\u8def\u5f84\u4e0a\u7684\u4e00\u6761\u8fb9\u3002\u53d1\u73b0\u672c\u8d28\u4e0a\u4f9d\u65e7\u662f\n\n$$\n\\begin{aligned}\nn-s-size_x&\\leq \\lfloor \\frac{n-s}{2}\\rfloor\\\\\nz&\\leq \\lfloor \\frac{n-s}{2}\\rfloor\\\\\n\\end{aligned}\n$$\n\n\u4e8e\u662f\u8fd8\u662f\u7ef4\u62a4\u4e00\u68f5\u9000\u6808\u987a\u5e8f\u7684\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u3002\n\n\u7136\u540e\u4ee5\u4e0a\u7684\u7ebf\u6bb5\u6811\u53ef\u4ee5\u6362\u6210\u6811\u72b6\u6570\u7ec4\u3002\u4e8e\u662f\u4ee3\u7801\uff1a\n\n```cpp\nint _bit[N] ;\n\n#define low(x) (x & -x)\n\nil void mdf(int p, int x){\n    for (  ; p <= n ; p += low(p)) _bit[p] += x ;\n}\nil int ask(int p){\n    int ret = 0 ;\n    for ( ; p ; p -= low(p)) ret += _bit[p] ;\n    return ret ;\n}\nil int qry(int l, int r){ return ask(r) - ask(l - 1) ; }\nvoid dfs5(int x, int fa){\n    int l = max(1, n - 2 * sz[x]), s ;\n    int r = n - 2 * sz[mson[x]], k, y, g ;\n    if (r >= l){//Case 2\n        res[x] += query(_rt[0], _rt[dfn[x] - 1], 1, n, l, r) ;\n        res[x] += query(_rt[dfn[x] + sz[x] - 1], _rt[n], 1, n, l, r) ;\n        res[x] -= qry(l, r) ;\n    }\n    pre[0] = 0 ; s = edg[x].size() ; suf[s] = 0 ;\n    for (k = 0 ; k < s ; ++ k){\n        y = edg[x][k] ;\n        if (y == fa){ pre[k] = pre[max(0, k - 1)] ; continue ; }\n        pre[k] = max(pre[max(k - 1, 0)], sz[y]) ;\n    }\n    for (k = s - 1 ; ~k ; -- k){\n        y = edg[x][k] ;\n        if (y == fa){ suf[k] = suf[k + 1] ; continue ; }\n        suf[k] = max(suf[k + 1], sz[y]) ;\n    }\n    for (k = 0 ; k < s ; ++ k){ //Case 1\n        y = edg[x][k] ;\n        if (y == fa) continue ;\n        g = max(n - sz[x], suf[k + 1]) ;\n        if (k > 0) g = max(pre[k - 1], g) ;\n        l = max(1, 2 * sz[y] - n), r = n - 2 * g ;\n        if (r >= l)\n            res[x] += query(_rt[dfn[y] - 1], _rt[dfn[y] + sz[y] - 1], 1, n, l, r) ;\n    }\n    mdf(sz[x], 1) ;\n    for (auto k : edg[x])\n        if (k != fa) dfs5(k, x) ;\n    mdf(sz[x], -1) ;\n}\nvoid dfs6(int x, int fa, int qwq){//Case 3\n    int t = sz[x] + qwq ;\n    int r = n - 2 * sz[mson[x]] ;\n    int l = max(1, n - 2 * sz[x]) ;\n    if (r >= l)\n        res[x] += qry(l, r) ;\n    for (auto k : edg[x]){\n        if (k == fa) continue ;\n        mdf(t - sz[k], 1) ;\n        dfs6(k, x, t - sz[k]) ;\n        mdf(t - sz[k], -1) ;\n    }\n}\nint main(){\n//\tfreopen(\"centroid.in\", \"r\", stdin) ;\n// \tfreopen(\"centroid.out\", \"w\", stdout) ;\n \tqr(T) ; int i, j, k ;\n\twhile (T --){\n\t\tqr(n), ans = tot = 0 ;\n        for (i = 1 ; i <= n ; ++ i)\n            edg[i].clear(), mson[i] = res[i] = _bit[i] = 0 ;\n        for (i = 1 ; i < n ; ++ i)\n            qr(j), qr(k), edg[j].p_b(k), edg[k].p_b(j) ;\n        dfs4(1, Id = 0) ; build(_rt[0], 1, n) ;\n        for (i = 1 ; i <= n ; ++ i)\n            upd(_rt[i], _rt[i - 1], 1, n, sz[rev[i]]) ;\n        dfs5(1, 0) ; fill(_bit + 1, _bit + n + 1, 0) ; dfs6(1, 0, 0) ;\n        for (int i = 1 ; i <= n ; ++ i) ans += 1ll * res[i] * i ; qw(ans, '\\n') ;\n    }\n}\n```\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\u590d\u6742\u5ea6\u662f $O(n\\log n)$\uff0c\u4f46\u5c31\u662f\u5e38\u6570\u5de8\u5927\u2026\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u2026\u611f\u89c9\u5e94\u8be5\u633a\u5feb\u624d\u5bf9\u554a\uff08\n\n",
        "postTime": 1589426982,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u7b80\u5355\u9898\u9009\u505a \u300c[CSP2019]\u6811\u7684\u91cd\u5fc3\u300d"
    },
    {
        "content": "\u672c\u9898\u89e3\u662f[\u9898\u89e3\u680f][0]\u5185\u4e00\u4e9b\u5e38\u89c1\u601d\u8def\u7684\u96c6\u5408\u3002\n\n\u4e3a\u4e86\u7bc7\u5e45\u7d27\u51d1\uff0c\u5728\u4e00\u4e9b\u5730\u65b9\u6211\u53ef\u80fd\u8df3\u8fc7\u4e86\u8bc1\u660e/\u9610\u8ff0\u7684\u4e0d\u662f\u600e\u4e48\u8be6\u7ec6\uff0c\u5982\u679c\u5e0c\u671b\u770b\u5230\u67d0\u4e00\u4e2a\u601d\u8def\u7684\u8be6\u7ec6\u9610\u8ff0/\u4ee3\u7801\uff0c\u53ef\u4ee5\u70b9\u51fb\u76f8\u5173\u7684\u8d85\u94fe\u63a5\u3002\n\n## \u601d\u8def\n\n\u672c\u9898\u7684\u90e8\u5206\u5206\u542f\u53d1\u6211\u4eec\u53bb\u627e\u6027\u8d28\uff1a\n\n1. \u94fe\u7684\u90e8\u5206\u5206\u542f\u53d1\u6211\u4eec\u53bb\u8003\u8651**\u6811\u94fe\u5256\u5206**\u3002\n2. \u4e8c\u53c9\u6811\u7684\u90e8\u5206\u5206\u542f\u53d1\u6211\u4eec\u53bb\u8003\u8651**\u4ee5\u91cd\u5fc3\u4e3a\u6839**\u7684\u60c5\u51b5\u3002\n3. \u7531\u4e8e\u8981\u540c\u65f6\u8003\u8651\u5b50\u6811\u4e0e\u5916\u5b50\u6811\u7684\u60c5\u51b5\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u60f3\u5230**\u6362\u6839\u6cd5**\u3002\n\n\u6027\u8d28\uff1a\n\n1. \u719f\u7ec3\u5256\u5206\u4e4b\u540e\uff0c\u8003\u8651\u6839\u8282\u70b9\u6240\u5728\u7684\u91cd\u94fe\uff0c\u53ef\u8bc1\u660e\u91cd\u5fc3$u$\u5728\u8fd9\u6761\u91cd\u94fe\u4e0a\u3002\n2. \u5bf9\u6839$rt$\u7684\u4efb\u610f\u4e00\u4e2a\u513f\u5b50$u$\uff0c\u8003\u8651\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u82e5\u5b83\u7684\u91cd\u5fc3\u4e3a$v$\uff0c\u5219\u53ef\u8bc1\u660e\u5728\u539f\u6811\u4e2d\uff0c\u539f\u6811\u7684\u91cd\u5fc3\u4e3a$v$\u7684\u7956\u5148\u3002\n3. \u82e5\u4e0d\u6b62\u6709\u4e00\u4e2a\u91cd\u5fc3\uff0c\u4e14\u5df2\u77e5$u$\u4e3a\u91cd\u5fc3\uff0c\u90a3\u4e48\u53ea\u6709$u$\u7684\u91cd\u513f\u5b50\uff08\u6216\u7236\u4eb2\uff09\u6709\u53ef\u80fd\u662f\u91cd\u5fc3\u3002\u2014\u2014\u8fd9\u4e2a\u6027\u8d28\u5728\u68c0\u67e5\u5176\u4ed6\u91cd\u5fc3\u65f6\u6709\u7528\u3002\n\n\u8ba1\u6570\u65b9\u6cd5\uff1a\n\n1. \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u8ba1\u7b97\u5b83\u4f5c\u4e3a\u91cd\u5fc3\u7684\u6b21\u6570\uff1a\u8fd9\u4f1a\u5bfc\u81f4\u5b9e\u73b0\u504f\u5411\u6570\u636e\u7ed3\u6784\uff08BIT\u3001\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u3001\u6811\u72b6\u6570\u7ec4\u7b49\uff09\u3002\n2. \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u5272\uff0c\u6211\u4eec\u53bb\u627e\u4e24\u8bfe\u6811\u7684\u91cd\u5fc3\uff1a\u8fd9\u56de\u5bfc\u81f4\u5b9e\u73b0\u504f\u5411\u56fe\u8bba\u7c7b\u65b9\u6cd5\uff08\u6811\u94fe\u5256\u5206\u3001\u627e\u91cd\u513f\u5b50\u3001\u500d\u589e\u7b49\uff09\u3002\n\n## \u65b9\u6cd50\uff1a\u8003\u8651\u70b9\uff0c\u53ea\u8003\u8651\u5b9a\u4e49\n\n [\u4ee3\u7801](https://loj.ac/submission/775715)  [\u7c7b\u4f3c\u601d\u8def\u7684\u9898\u89e3][3] \n\n\u8003\u8651\u4e00\u4e2a\u70b9$u$\uff0c\u6211\u4eec\u60f3\u8981\u77e5\u9053\uff0c\u5b83\u4f1a\u6210\u4e3a\u51e0\u6b21\u91cd\u5fc3\u3002\n\n\u5c06\u6811\u5728$u$\u5904\u5b9a\u6839\uff0c\u8bbe\u5176\u6700\u5927\u7684\u5b50\u6811\u5927\u5c0f\u4e3a$S=siz_w$\uff0c\u5219\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u5220\u53bb\u7684\u8fb9\u4e0d\u5728$tree_w$\u4e2d\uff0c$tree_v\\not\\subseteq tree_w$\uff1a\u5219$siz_v\\le n-2S$\u65f6\uff0c$u$\u6210\u4e3a\u91cd\u5fc3\u3002\n2. \u5220\u53bb\u7684\u8fb9\u5728$tree_w$\u4e2d\uff1a\u8bbe\u9664\u4e86$tree_w$\u6700\u5927\u7684\u5b50\u6811\u5927\u5c0f\u4e3a$T$\uff0c\u5219$2S-n\\le siz_v\\le n-2T$\u65f6$u$\u6210\u4e3a\u91cd\u5fc3\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u8003\u8651\u5904\u7406\u51fa\u4ee5$u$\u4e3a\u6839\uff0c\u5404\u4e2a\u513f\u5b50\u7684$\\{siz\\}$\u7684\u53ef\u91cd\u96c6\u5408\u7684\u60c5\u51b5\uff0c\u518d\u67e5\u8be2\u4e00\u6bb5\u533a\u95f4\u5185\u7684$siz$\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n### \u7ef4\u62a4\u65b9\u6cd5\n\n\u53ef\u4ee5\u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff08\u53ef\u80fd\u53ef\u4ee5\u7ebf\u6bb5\u6811\u5408\u5e76/\u5c06\u6240\u6709\u67e5\u8be2\u79bb\u7ebf\u5316\uff09\u7ef4\u62a4\u3002\n\n\u7279\u522b\u5730\uff0c$fa_u$\u7684\u60c5\u51b5\uff0c\u76f8\u5f53\u4e8e$tree-anc_u-tree_u$\u4e0e$\\{u\\}+anc_u-\\{rt\\}$\u53d6\u53cd\u3002\uff08\u5176\u4e2d\uff0c$anc_u$\u8868\u793a$u$\u7684\u6240\u6709\u7956\u5148\u8282\u70b9\uff09\n\n## \u65b9\u6cd51\uff1a\u8003\u8651\u70b9\uff0c\u4ee5\u91cd\u5fc3\u4e3a\u6839\n\n\u6211\u4eec\u5148\u627e\u5230\u91cd\u5fc3$rt$\uff0c\u5e76\u4ee5\u5b83\u4f5c\u4e3a\u6839\u3002\u8fd9\u6837\u548c\u968f\u610f\u9009\u6839\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\n\n**\u6027\u8d28**\uff1a\u82e5$x\\ne rt$\u4e3a\u91cd\u5fc3\uff0c\u5219\u5220\u53bb\u7684\u8fb9$(u,v)$\u4e00\u5b9a\u4e0d\u5728$tree_x$\u5185\u3002\n\n\u56e0\u6b64\uff0c\u5bf9\u4e00\u4e2a\u70b9$u\\ne rt$\uff0c\u4ed6\u4f5c\u4e3a\u91cd\u5fc3\u4ec5\u5f53\u5220\u53bb\u4e86\u4e00\u6761\u8fb9$(x,y)$\uff0c\u4e14\uff1a$(x,y)$\u4e0d\u5728$tree_u$\u5185\uff0c$n-2s_x\\le S\\le n-2g_x$\u3002\uff08\u8bbe\u6811\u51cf\u5c11\u7684\u5927\u5c0f\u4e3a$S$\uff09\n\n\u5bf9\u4e8e\u6839\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u53e6\u5916\uff08\u5206\u6210\u5272\u53bb\u7684\u8fb9\u5728\u91cd\u513f\u5b50\u5b50\u6811\u5185\u4e0e\u4e0d\u5728\u91cd\u513f\u5b50\u5b50\u6811\u5185\uff09\u5224\u65ad\u3002\n\n\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u5177\u4f53\u89c1[\u8fd9\u7bc7\u9898\u89e3][4]\u3002\n\n## \u65b9\u6cd52\uff1a\u8003\u8651\u8fb9\n\n\u8003\u8651\u4e00\u79cd\u5220\u8fb9\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5feb\u901f\u6c42\u51fa\uff0c\u5212\u5206\u540e\u7684\u6240\u6709\u91cd\u5fc3\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u4e00\u68f5\u6811\u7684\u91cd\u5fc3\uff1a\u56e0\u4e3a\u91cd\u5fc3\u4e00\u5b9a\u5728\u6839\u8282\u70b9\u6240\u5728\u91cd\u94fe\u4e0a\uff0c\u4ece\u6839\u4e00\u76f4\u8df3\u91cd\u513f\u5b50\uff0c\u76f4\u5230\u627e\u5230\u6700\u6df1\u7684$v$\u4f7f\u5f97\uff0c$2s_v > s_u$\uff0c\u5219$v$\uff08\u53ef\u80fd\u8fd8\u6709\u5b83\u7684\u91cd\u513f\u5b50\uff09\u4e3a\u91cd\u5fc3\u3002\u6b64\u8fc7\u7a0b\u53ef\u4ee5\u7528\u500d\u589e\u52a0\u901f\u3002\n\n\u7531\u8fd9\u79cd\u505a\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6811\u94fe\u5256\u5206\uff0c\u5e76\u9884\u5904\u7406\u500d\u589e\u6570\u7ec4\u4e4b\u540e$O(\\log n)$\u5730\u6c42\u51fa\u4efb\u4f55\u5b50\u6811\u7684\u91cd\u5fc3\u3002\n\n### \u67d0[\u9ad8\u8d5e\u9898\u89e3][5]\u7684\u53d8\u4f53\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5212\u5206$(u,v)$\uff0c\u4e0d\u59a8\u8bbe$dep_u>dep_v$\uff1a\n\n\u8003\u8651\u5982\u4f55\u6c42$tree_u$\u7684\u91cd\u5fc3\uff1a**\u6211\u4eec\u4ece$u$\u51fa\u53d1**\uff0c\u4e00\u76f4\u5411\u91cd\u513f\u5b50\u8df3\uff0c\u8df3\u5230\u627e\u5230\u91cd\u5fc3\uff08\u5373\uff0c\u91cd\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7\u539f\u6811\u7684\u4e00\u534a\uff09\u4e3a\u6b62\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u51fa$tree-tree_u$\u7684\u91cd\u5fc3\uff1a\u6211\u4eec\u5148\u5c06\u6839\u6362\u5230$v$\u5904\uff08\u6b64\u65f6\u53ea\u6539\u53d8\u4e86\u4e24\u4e2a\u8282\u70b9\u7684\u5173\u7cfb\uff09\uff0c\u8fd9\u6837\u5b9e\u9645\u4e0a\u5c31\u76f8\u5f53\u4e8e\u6c42$tree_u$\u7684\u91cd\u5fc3\uff01\n\n\u5177\u4f53\u5b9e\u73b0\u5728[\u6b64][6]\u3002\n\n## \u65b9\u6cd53\uff1a\u8003\u8651\u8fb9\uff0c[\u67d0\u795e\u5947\u7684$O(n)$\u505a\u6cd5][9]\n\n\u5c31\u5982\u4e4b\u524d\u6240\u8bf4\u7684\uff0c\u53ef\u4ee5\u5728$O(n)$\u8ba1\u7b97\u51fa\u6240\u6709\u5b50\u6811\u7684\u91cd\u5fc3\uff0c\u4f46\u662f\u5f88\u96be\u5bf9\u53bb\u6389\u5b50\u6811\u7684\u90e8\u5206\u627e\u5230\u4e00\u4e2a\u91cd\u5fc3\u5355\u8c03\u79fb\u52a8\u7684\u8ba1\u7b97\u5e8f\u5217\u2026\u2026\n\n\u4ee5\u91cd\u5fc3\u4e3a\u6839\uff0c\u8003\u8651\u5220\u53bb\u7684\u8fb9\u5728\u54ea\u68f5\u5b50\u6811\u5185\uff1a\n\n1. \u4e0d\u5728\u91cd\u513f\u5b50\u7684\u5b50\u6811\u5185\uff1a\u5219\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5728\u6839\u6240\u5728\u7684\u91cd\u94fe\u4e0a\u9762\u8d70\u5c31\u597d\u4e86\u3002\n2. \u5728\u91cd\u513f\u5b50\u7684\u5b50\u6811\u5185\uff1a\n   1. \u91cd\u513f\u5b50\u4ecd\u7136\u4e3a\u91cd\u513f\u5b50\uff1a\u6b64\u65f6\uff0c\u6839\u4ecd\u7136\u4e3a\u91cd\u5fc3\u3002\n   2. \u6b21\u91cd\u513f\u5b50\u53d8\u4e3a\u4e86\u91cd\u513f\u5b50\uff1a\u5728\u6b21\u91cd\u513f\u5b50\u7684\u91cd\u94fe\u4e0a\u8d70\u5373\u53ef\u3002\n\n\u8fd9\u6837\u5c31\u7528\u7eaf\u56fe\u8bba\u65b9\u6cd5\u5b8c\u6210\u4e86\u8fd9\u9898\u3002\n\n## \u53c2\u8003\u8d44\u6599\n\n[0]: https://www.luogu.com.cn/problemnew/solution/P5666\n[3]: https://dra.blog.luogu.org/solution-p5666\n[4]: https://www.luogu.com.cn/blog/xht37/solution-p5666\n[5]: https://www.luogu.com.cn/blog/soaring/solution-p5666\n[6]: https://loj.ac/submission/717065\n[9]: https://www.luogu.com.cn/blog/qzh/p5666-shu-di-zhong-xin\n\n- https://www.luogu.com.cn/problemnew/solution/P5666\n- https://dra.blog.luogu.org/solution-p5666\n- https://www.luogu.com.cn/blog/xht37/solution-p5666\n- https://www.luogu.com.cn/blog/soaring/solution-p5666\n- https://loj.ac/submission/717065\n- https://www.luogu.com.cn/blog/qzh/p5666-shu-di-zhong-xin\n\n\n",
        "postTime": 1585645197,
        "uid": 73915,
        "name": "frank3215",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "\u5148\u5c06\u6811\u53d8\u6210\u4ee5 $1$ \u4e3a\u6839\u7684\u6709\u6839\u6811\uff0c\u5e76\u7ea6\u5b9a $T(u)$ \u4e3a $u$ \u7684\u5b50\u6811\uff0c$T$ \u4e3a\u6574\u68f5\u6811\uff0c$p(u,T)$ \u8868\u793a $u$ \u662f $T$ \u7684\u91cd\u5fc3\n\n----\n\n\u8003\u8651\u4e00\u4e9b\u7b80\u5355\u7684\u624b\u6cd5\uff1a\n\n$$ \\begin{aligned} & \\sum_{(fa_u,u)\\in E} \\big(\\sum_{p(x,T(u))} x + \\sum_{p(y,T-T(u))} \\big) \\\\ & = \\sum_x x\\sum_{u\\not= 1} [p(x,T(u))]+\\sum_x x\\sum_{u\\not= 1} [p(x,T-T(u))] \\end{aligned} $$\n\n----\n\n\u8003\u8651\u7814\u7a76\u82e5 $p(x,T(u))$\uff0c\u5219 $x,u$ \u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28\u3002\n\n\u8bbe $wson$ \u4e3a $x$ \u7684 $siz$ \u6700\u5927\u7684\u513f\u5b50\u3002\n\n\u4e8b\u5b9e\u4e0a $p(x,T(u))$ \u5f53\u4e14\u4ec5\u5f53\uff1a\n\n$$ \\left\\{ \\begin{aligned} & x\\in T(u) \\\\ & siz_{wson}\\le \\lfloor \\frac{siz_u}{2}\\rfloor \\\\ & siz_u-siz_x\\le \\lfloor \\frac{siz_u}{2}\\rfloor \\end{aligned} \\right. $$\n\n\u8003\u8651\u5230 $\\forall x\\in Z$\uff0c$x\\le \\lfloor a\\rfloor \\Leftrightarrow x\\le a$\uff0c\u56e0\u6b64\u540e\u4e24\u4e2a\u5f0f\u5b50\u76f4\u63a5\u5316\u4e3a\n\n$$ 2siz_{wson}\\le siz_u\\le 2siz_x$$\n\n----\n\n\u8003\u8651\u7814\u7a76\u82e5 $p(x,T-T(u))$\uff0c\u5219 $x,u$ \u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28\u3002\n\n### Situation 1 \n\n\u9996\u5148\u8003\u8651 $u\\in T(x)-\\{x\\}$\uff0c\u8bbe $v$ \u4e3a $x$ \u7684\u513f\u5b50\uff0c\u4e14 $u\\in T(v)$ \uff08\u663e\u7136 $v$ \u5b58\u5728\u4e14\u552f\u4e00\uff09\uff0c\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q4deau01.png)\n\n\u8bbe $wson$ \u4e3a\u9664\u53bb $v$\uff0c$x$ \u7684 $siz$ \u6700\u5927\u7684\u513f\u5b50\u3002\uff08\u82e5\u6ca1\u6709\uff0c\u5219\u8ba4\u4e3a $siz_{wson}=0$\uff09\n\n$$ \\left\\{ \\begin{aligned} & siz_{wson}\\le \\lfloor \\frac{n-siz_u}{2}\\rfloor \\\\ & siz_v-siz_u\\le \\lfloor \\frac{n-siz_u}{2}\\rfloor \\\\ & n-siz_x\\le \\lfloor \\frac{n-siz_u}{2}\\rfloor \\\\ \\end{aligned} \\right. $$\n\n\u5373\n\n$$ 2siz_v-n\\le siz_u\\le \\min\\{n-2siz_{wson},2siz_x-n\\} $$\n\n### Situation 2\n\n\u7136\u540e\u8003\u8651 $u\\in T-T(x)-\\{fa|p(x,T(fa))\\}$ \uff08\u5373 $u$ \u4e0d\u5728 $x$ \u5b50\u6811\u91cc\u4e5f\u4e0d\u662f $x$ \u7956\u5148\uff09\uff0c\u8bbe $wson$ \u4e3a $x$ \u7684 $siz$ \u6700\u5927\u7684\u513f\u5b50\u3002\n\n$$ \\left\\{ \\begin{aligned} & siz_{wson}\\le \\lfloor \\frac{n-siz_u}{2}\\rfloor \\\\ & n-siz_u-siz_x\\le \\lfloor \\frac{n-siz_u}{2}\\rfloor \\\\ \\end{aligned} \\right. $$\n\n\u4e5f\u5373\n\n$$n-2siz_x \\le siz_u \\le n-2siz_{wson}$$\n\n----\n\n\u6b64\u65f6\u4f60\u5df2\u7ecf\u6709 40pts \u4e86\u3002\n\n\u679a\u4e3e $x$\uff0c\u4ee5\u8ba1\u7b97 **Situation 1** \u4e3a\u4f8b\uff0c\u4f60\u53ef\u4ee5\u5c06\u8fd9\u5212\u5206\u4e3a\u4e24\u4e2a\u8fd9\u6837\u7684\u8be2\u95ee\uff1a\u95ee $dfn_u\\in [dfn_x,dfn_x+siz_x-1]$ \u4e14 $siz_u\\in [1,R](R \\in [1,n])$ \u7684 $u$ \u6709\u591a\u5c11\u4e2a\u3002\n\n\u8fd9\u5df2\u7ecf\u5341\u5206\u663e\u7136\u4e86\uff0c\u5c06\u8fd9 $2n$ \u4e2a\u8be2\u95ee\u76f4\u63a5\u79bb\u7ebf\uff0c\u5efa\u4e00\u68f5\u503c\u57df\u6811\u72b6\u6570\u7ec4\uff0c\u5e76\u6309\u7167 $siz_x$ \u5347\u5e8f\u4f9d\u6b21\u52a0\u5165\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u67e5\u8be2\u533a\u95f4\u548c\u3002\n\n\u5bf9\u4e8e\u5176\u5b83\u7684\u7ed9\u8bfb\u8005\u7559\u4f5c\u7ec3\u4e60\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n----\n\n### \u4ee3\u7801\n\n~~\u5f00 O2 \u624d\u80fd\u8fc7~~\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\ntypedef long long ll;\nll read()\n{\n    ll ret = 0; char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >= '0' && c <= '9') ret = ret * 10 + c - '0', c = getchar();\n    return ret;\n}\ninline int min(int a, int b) { return a < b ? a : b; }\ninline int max(int a, int b) { return a > b ? a : b; }\ninline int abs(int x) { return x > 0 ? x : -x; }\n\nconst int MAXN = 700005;\nint T, N; ll ans;\n\nstruct node { int v, next; } E[MAXN << 1]; int head[MAXN], Elen;\nvoid add(int u, int v) { ++Elen, E[Elen].v = v, E[Elen].next = head[u], head[u] = Elen; }\n\nint fa[MAXN], siz[MAXN], wson[MAXN], dfn[MAXN], dfncnt;\nvoid dfs(int u, int ff)\n{\n    fa[u] = ff, siz[u] = 1, dfn[u] = ++dfncnt; int i;\n    for (i = head[u]; i; i = E[i].next)\n    {\n        if (E[i].v == ff) continue; dfs(E[i].v, u), siz[u] += siz[E[i].v];\n        if (siz[E[i].v] > siz[wson[u]]) wson[u] = E[i].v;\n    }\n}\n\nstruct fenwick\n{\n    int tree[MAXN];\n    inline int lowbit(int x) { return x & -x; }\n    inline void insert(int pos, int k) { for (; pos <= N; pos += lowbit(pos)) tree[pos] += k; }\n    inline int query(int pos) { int ret = 0; for ( ; pos; pos -= lowbit(pos)) ret += tree[pos]; return ret; }\n    void clear() { for (int i = 1; i <= N; ++i) tree[i] = 0; }\n} T1, T2;\n\nstruct query\n{\n    int typ, val, x, k;\n    query() {}\n    query(int typ, int val, int x, int k) : typ(typ), val(val), x(x), k(k) {}\n} Q[MAXN << 4]; int Qlen;\nbool cmp(query q1, query q2) { return q1.k < q2.k; }\n\nint mxl[MAXN], mxr[MAXN];\nvoid qaq(int pre, int id, int ff)\n{\n    int sz = E[id].v == ff ? 0 : siz[E[id].v];\n    mxl[id] = max(mxl[pre], sz);\n    if (E[id].next) qaq(id, E[id].next, ff);\n    mxr[id] = max(mxr[E[id].next], sz);\n}\n\nstruct data { int x, id; } D[MAXN];\nbool cmpd(data d1, data d2) { return d1.x < d2.x; }\n\nint S[MAXN];\n\n//int answer[MAXN];\nint main()\n{\n    #ifndef ONLINE_JUDGE\n    freopen(\"test.in\", \"r\", stdin), freopen(\"test.out\", \"w\", stdout);\n    #endif\n    scanf(\"%d\", &T); int i, j, prej, u, v;\n    while (T--)\n    {\n        scanf(\"%d\", &N);\n        for (i = 1; i < N; ++i) scanf(\"%d%d\", &u, &v), add(u, v), add(v, u);\n        dfs(1, 0);\n\n        for (i = 1; i <= N; ++i)\n        {\n            Q[++Qlen] = query(2, i, i, 2 * siz[i]), Q[++Qlen] = query(2, -i, i, 2 * siz[wson[i]] - 1);\n            qaq(0, head[i], fa[i]);\n            for (j = head[i], prej = 0; j; prej = j, j = E[j].next)\n            {\n                if (E[j].v == fa[i]) continue;\n                int maxson = max(mxl[prej], mxr[E[j].next]), v = E[j].v;\n                //printf(\"i = %d, v = %d, maxson = %d, l = %d, r = %d\\n\", i, v, maxson, mxl[prej], mxr[E[j].next]);\n                if (min(N - 2 * maxson, 2 * siz[i] - N) >= 2 * siz[v] - N)\n                {\n                    Q[++Qlen] = query(1, i, E[j].v, min(N - 2 * maxson, 2 * siz[i] - N));\n                    Q[++Qlen] = query(1, -i, E[j].v, 2 * siz[v] - N - 1);\n                }\n            }\n            Q[++Qlen] = query(3, i, N - 2 * siz[i], N - 2 * siz[wson[i]]);\n            Q[++Qlen] = query(2, -i, fa[i], N - 2 * siz[wson[i]]), Q[++Qlen] = query(2, i, fa[i], N - 2 * siz[i] - 1);\n            Q[++Qlen] = query(1, -i, i, N - 2 * siz[wson[i]]), Q[++Qlen] = query(1, i, i, N - 2 * siz[i] - 1);\n        }\n\n        //for (i = 1; i <= Qlen; ++i) printf(\"query(%d, %d, %d, %d)\\n\", Q[i].typ, Q[i].val, Q[i].x, Q[i].k);\n\n        for (i = 2; i <= N; ++i) ++S[siz[i]];\n        for (i = 1; i <= N; ++i) S[i] += S[i - 1];\n        for (i = 1; i <= N; ++i) D[i].x = siz[i], D[i].id = i;\n        std::sort(D + 1, D + N + 1, cmpd);\n        std::sort(Q + 1, Q + Qlen + 1, cmp);\n        j = 1;\n        for (i = 1; i <= Qlen; ++i)\n        {\n            while (j <= N && D[j].x <= Q[i].k)\n            {\n                if (D[j].id != 1) T1.insert(dfn[D[j].id], 1), T2.insert(dfn[D[j].id], 1), T2.insert(dfn[D[j].id] + siz[D[j].id], -1);\n                ++j;\n            }\n            //printf(\"query(%d, %d, %d, %d)\\n\", Q[i].typ, Q[i].val, Q[i].x, Q[i].k);\n\n            int qaq;\n            if (Q[i].typ == 3)\n            {\n                if (Q[i].x < 1) Q[i].x = 1;\n                if (Q[i].k < 0) Q[i].k = 0;\n                qaq = S[Q[i].k] - S[Q[i].x - 1];\n            }\n            else if (Q[i].typ == 2) qaq = T2.query(dfn[Q[i].x]);\n            else qaq = T1.query(dfn[Q[i].x] + siz[Q[i].x] - 1) - T1.query(dfn[Q[i].x] - 1); \n            //printf(\"qaq = %d\\n\", qaq);\n            ans += (ll)Q[i].val * qaq;\n            //answer[abs(Q[i].val)] += Q[i].val * qaq;\n        }\n        //for (i = 1; i <= N; ++i) printf(\"answer[%d] = %d\\n\", i, answer[i] / i);\n\n        printf(\"%lld\\n\", ans);\n        T1.clear(), T2.clear();\n        for (i = 1; i <= N; ++i) head[i] = S[i] = wson[i] = dfn[i] = mxl[i] = mxr[i] = 0; Elen = dfncnt = Qlen = 0;\n        ans = 0;\n    }\n    return 0;\n}\n```",
        "postTime": 1573986367,
        "uid": 62308,
        "name": "Mr_Wu",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3010\u6c11\u95f4\u6570\u636e\u3011\u3011"
    },
    {
        "content": "# [Noip2019]\u6811\u7684\u91cd\u5fc3\n\n## \u4e00.\u524d\u8a00\n\n\u200b\t\u771f\u5c31\u4e00\u884c\u4ee3\u7801\u8c03\u4e00\u5929\u5457\u2026\u2026[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P5666)\n\n## \u4e8c.\u601d\u8def\n\n\u200b\t\u9996\u5148\u9898\u76ee\u6697\u793a\u7684\u5f88\u660e\u663e\u4e86\uff0c\u8981\u4f60\u4e00\u6761\u8fb9\u4e00\u6761\u8fb9\u7684\u62c6\u5f00\u7136\u540e\u5206\u5f00\u7b97\u3002\u90a3\u4e48\u9884\u4f30\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u8fd8\u6709 t \u7ec4\u6570\u636e\uff0c\u829c\u6e56\u76f4\u63a5\u8d77\u98de\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u9a9a\u4e00\u70b9\uff0c\u5728\u6bcf\u6b21\u627e\u91cd\u5fc3\u7684\u65b9\u5f0f\u4e0a\u505a\u4e00\u505a\u6587\u7ae0\uff0c\u5c31\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230 $O(nlogn)$,\u800c\u8fd9\u79cd\u9a9a\u529e\u6cd5\uff0c\u5c31\u662f\u500d\u589e\u3002\n\n\u200b\t\u9996\u5148\u6211\u4eec\u8981\u660e\u786e\u51e0\u4e2a\u7ed3\u8bba\u3002\n\n\u200b\t1.\u5bf9\u4e8e\u4e00\u4e2a\u4ee5 u \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u8fd9\u9897\u5b50\u6811\u7684\u91cd\u5fc3\u4e00\u5b9a\u4f1a\u5728 u \u7684\u91cd\u94fe\u4e0a\uff08\u5b9a\u4e49\u4e0e\u6811\u94fe\u5256\u5206\u7684\u76f8\u540c\uff0c\u5c31\u662f\u4ee5\u5b83\u7684\u67d0\u4e2a\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u6700\u5927\u65f6\uff0c\u90a3\u4e2a\u513f\u5b50\u6240\u5728\u7684\u65b9\u5411\uff09\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u8f7b\u6613\u7684\u5f97\u51fa\n\n\uff08\u8bbe\u8fd9\u4e2a\u91cd\u5fc3\u4e3a v\uff0c\u5219\u6709 $size[u]-size[v]<=\\lfloor\\dfrac{size[u]}{2}\\rfloor$,$\\therefore size[v]>=\\lfloor\\frac{u}{2}\\rfloor$,\u6240\u4ee5\u5fc5\u7136\u4e3a\u91cd\u513f\u5b50\uff09\uff0c\n\n\u90a3\u4e48\u5bfb\u627e\u91cd\u5fc3\u7684\u65b9\u5411\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\u3002\n\n\u200b\t2.\u4e00\u4e2a\u70b9\u662f\u91cd\u5fc3\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u91cd\u513f\u5b50\u6216\u8005\u7236\u4eb2\u4e5f\u6709\u53ef\u80fd\u662f\u91cd\u5fc3\uff08\u9898\u76ee\u660e\u793a\uff09\n\n\u200b\t\u6709\u4e86\u8fd9\u4e24\u4e2a\u7ed3\u8bba\u540e\uff0c\u6211\u4eec\u8bd5\u56fe\u505a\u51fa\u66b4\u529b\u7684\u65b9\u6cd5\u3002\n\n\u200b\t\u66b4\u529b\u5c31\u662f\uff08\u5bf9\u4e8e\u4e00\u9897\u6811\uff09\uff0c\u6211\u4eec\u4ece\u5b83\u7684\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u4e0d\u65ad\u5730\u6cbf\u7740\u91cd\u513f\u5b50\u7684\u65b9\u5411\u53bb\u627e\uff0c\u76f4\u5230\u627e\u5230\u91cd\u5fc3\u4e3a\u6b62\uff0c\u5f88\u66b4\u529b\uff0c\u5f88\u7b80\u5355\u3002\u800c\u91cd\u5fc3\u7684\u5224\u65ad\u6761\u4ef6\u9898\u76ee\u5df2\u7ecf\u7ed9\u51fa$O(n^2)$ok\u7684\u3002\n\n\u200b\t\u4f46\u662f\u6211\u4eec\u8981\u500d\u589e\u5965\uff0c\u6211\u4eec\u500d\u589e\u53bb\u5bfb\u627e\u4e00\u4e2a\u6df1\u5ea6\u6700\u5927\u7684\u70b9v\u4f7f\u5f97  $size[u]-size[v]<=\\dfrac{size[u]}{2}$,\n\n\u6b64\u65f6\u7684v\u4e3a\u8fd9\u9897\u6811\u7684\u91cd\u5fc3.\u6700\u6df1\u7684\u4fdd\u8bc1\u4e86\u5b83\u662f\u91cd\u5fc3\u7684\u6b63\u786e\u6027\uff08\u66f4\u6d45\u7684\u6709\u53ef\u80fd\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\u8d85\u8fc7\u9650\u5236\uff09\uff0c\u518d\u7ed3\u5408\u7ed3\u8bba 2 \uff0c\u9a8c\u4e00\u4e0b\u4ed6\u7684\u7236\u4eb2\u5c31ok\u4e86\u3002\u7136\u540e\u500d\u589e\u7684\u65b9\u6cd5\u5728\u4e8e\uff0c\u4e4b\u524d\u6211\u4eec\u662f\u4e0d\u65ad\u6cbf\u7740\u91cd\u513f\u5b50\u7684\u65b9\u5411\u627e\uff0c\u73b0\u5728\u6211\u4eec\u4e00\u6b65\u8de8\u5927\u70b9\uff0c\u8bbe $g[x][i]$ \u4e3a x \u5411\u7740\u91cd\u513f\u5b50\u65b9\u5411\u8d70 $2^i$ \u6b65\uff0c\u8fd9\u6837\u5c31\u80fd $O(logn)$ \u627e\u5230v\u3002\u5c31\u57fa\u672c\u89e3\u51b3\u4e86\u3002\u7b2c\u4e00\u6b21\u7528\u4e00\u4e2a dfs \u5904\u7406\u51fa\u91cd\u513f\u5b50\u548c g \u5c31\u597d\u3002\n\n\u200b\t\u7136\u540e\u6b64\u9898\u53e6\u5916\u4e00\u4e2a\u5f88\u590d\u6742\u7684\u5730\u65b9\u5728\u4e8e\u65ad\u5f00\u4e00\u6761\u8fb9\u4e4b\u540e\uff0c\u53e6\u4e00\u8fb9\u7684\u6811\u6362\u6839\u4e86\u3002\u5047\u8bbe\u65ad\u6389\u7684\u8fb9\u662f $(u,v)$,\u4e14\u6df1\u5ea6\u8f83\u6d45\u7684\u662f u \uff0c\u6240\u4ee5 u \u6210\u4e86\u53e6\u5916\u4e00\u4e2a\u6839\u3002\u5bf9\u4e8e v \u6765\u8bf4\uff0c\u5b83\u53ef\u4ee5\u6cbf\u7528\u4e4b\u524d\u7684 dfs \u51fa\u7684\u6570\u636e\uff0c\u5f88\u65b9\u4fbf\u3002\u4f46\u662f u \u5c31\u6bd4\u8f83\u79bb\u8c31\u3002\n\n\u200b\t\u6211\u613f\u79f0\u4ee5 u \u4e3a\u6839\u7684\u90a3\u4e2a\u6811\uff0c\u53eb\u53cd\u56fe\uff08\u5728\u4ee3\u7801\u4e2d\u6240\u6709\u53cd\u56fe\u7684\u6570\u7ec4\u90fd\u6709\u524d\u7f00 ba_),\u5f88\u663e\u7136\u7684\uff0c\u53cd\u56fe\u6709\u7740\u4e0e\u539f\u56fe\u5341\u5206\u91cd\u5408\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u56fe\u611f\u53d7\u4e00\u4e0b\uff0c\u53ea\u8981\u91cd\u513f\u5b50\u4e0d\u53d8\uff0cg\u4e5f\u662f\u4e0d\u4f1a\u53d8\u7684\u3002\u7531\u4e8e\u6784\u9020\u53cd\u56fe\u4e0e\u679a\u4e3e\u8fb9\u540c\u65f6\u8fdb\u884c\uff0c\u6211\u4eec\u4f7f\u7528dfs\u3002\n\n\u200b\t\u5728\u8fd9\u6b21dfs\u4e2d\uff0c\u9ed8\u8ba4 u \u4ee5\u4e0a\u7684\u53cd\u56fe\u5168\u90e8\u5b8c\u6bd5\u3002\u4e8e\u662f\u5c06 u \u63a5\u5230\u53cd\u56fe\u4e0a\u9762\u53bb\uff0c\u5c31\u4f1a\u51fa\u73b0\u7238\u7238\u5f53\u513f\u5b50\uff0c\u513f\u5b50\u5f53\u7238\u7238\u7684\u5c40\u9762~~\uff08\u5c31\u50cf\u7537\u751f\u5bdd\u5ba4\u7684\u6df7\u4e71\u5173\u7cfb\uff09~~\uff0c\u5f53\u7136 dfs \u5b8c\u4e86\u4e4b\u540e\uff0c\u7238\u7238\u8fd8\u662f\u7238\u7238\uff0c\u513f\u5b50\u8fd8\u662f\u513f\u5b50\u2026\u2026\uff0c\u8fd9\u91cc\u770b\u4ee3\u7801\u4f1a\u6e05\u6670\u5f88\u591a\u3002\u7136\u540e\u5bf9\u4e8e u \u5728\u53cd\u56fe\u4e0a\u9762\u500d\u589e\u5c31\u597d\uff0c\u7ef4\u62a4\u53cd\u91cd\u513f\u5b50\u548c\u53cdg\u3002\n\n## \u4e09.CODE\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<fstream>\n#include<cmath>\n#include<cstring>\nusing namespace std;\n#define m_for(i,x,y) for(int i=x;i<=y;++i)\nint read(){\n\tchar ch=getchar();\n\tint res=0,f=1;\n\tfor(;ch<'0'||ch>'9';ch=getchar())if(ch=='-')f=-1;\n\tfor(;ch>='0'&&ch<='9';ch=getchar())res=res*10+(ch-'0');\n\treturn res*f;\n}\nconst int MAXN=299999;\nint t,n;\nint head[MAXN],to[2*MAXN],ne[2*MAXN],tot;\nvoid add(int x,int y){\n\tto[++tot]=y;\n\tne[tot]=head[x];\n\thead[x]=tot;\n}\nvoid build(){\n\tint x,y;\n\tm_for(i,1,n-1){\n\t\tx=read();y=read();\n\t\tadd(x,y);add(y,x);\n\t}\n}\nint f[MAXN],size[MAXN],heavy[MAXN],sc_heavy[MAXN],g[MAXN][18];\nvoid dfs1(int x,int fa){\n\tf[x]=fa;size[x]=1;\n\tfor(int i=head[x],v;i;i=ne[i]){\n\t\tv=to[i];\n\t\tif(v==fa)continue;\n\t\tdfs1(v,x);\n\t\tsize[x]+=size[v];\n\t\tif(size[v]>size[heavy[x]])sc_heavy[x]=heavy[x],heavy[x]=v;\n\t\telse if(size[v]>size[sc_heavy[x]])sc_heavy[x]=v;\n        //\u8fd9\u91cc\u9700\u8981\u8bb0\u5f55\u91cd\u513f\u5b50(heavy)\u548c\u6b21\u91cd\u513f\u5b50(sc_heavy)\u5728dfs2\u4f1a\u7528\u5230\u6b21\u91cd\u513f\u5b50\n\t}\n\tg[x][0]=heavy[x];\n\tfor(int i=1;i<=17;++i)g[x][i]=g[g[x][i-1]][i-1];//dp\u9884\u5904\u7406\n}\nint ba_heavy[MAXN],ba_size[MAXN],ba_f[MAXN],ba_g[MAXN][18];\nlong long ans;\nlong long check(int x,int sum){\n\treturn 1LL*x*(max(sum-ba_size[x],ba_size[ba_heavy[x]])<=(sum/2));//\u8ba1\u7b97\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\n}\nvoid dfs2(int x,int fa){\n\tfor(int i=head[x],v;i;i=ne[i]){\n\t\tv=to[i];\n\t\tif(v==fa)continue;\n\t\tba_size[x]=size[1]-size[v];//\u53cd\u56fe\u7684\u5927\u5c0f\u7528\u539f\u56fe\u76f8\u51cf\n\t\tba_f[x]=0;ba_f[v]=0;//\u5404\u81ea\u4e3a\u6839\n\t\tif(v==heavy[x])ba_heavy[x]=sc_heavy[x];\n        //\u5982\u679c\u5bf9\u9762\u5c31\u662f\u91cd\u513f\u5b50\uff0c\u90a3\u4e48\u5728\u53cd\u56fe\u7684\u91cd\u513f\u5b50\u5c31\u662f\u539f\u56fe\u7684\u6b21\u91cd\u513f\u5b50\n\t\telse ba_heavy[x]=heavy[x];\n\t\tif(ba_size[fa]>ba_size[ba_heavy[x]])ba_heavy[x]=fa;\n        //\u539f\u6765\u7684\u7238\u7238\u8981\u53d8\u513f\u5b50\uff0c\u6240\u4ee5\u91cd\u513f\u5b50\u641e\u4e00\u641e\n\t\tba_g[x][0]=ba_heavy[x];\n\t\tfor(int i=1;i<=17;++i)ba_g[x][i]=ba_g[ba_g[x][i-1]][i-1];\n        //dp\u7b97\u53cd\u56feg\n\t\tint now=x;\n        //\u500d\u589e\u8dd1\u6b63\u53cd\u56fe\n\t\tfor(int i=17;i>=0;--i)if(ba_size[x]-ba_size[ba_g[now][i]]<=(ba_size[x]/2))now=ba_g[now][i];\n\t\tans+=check(now,ba_size[x])+check(ba_f[now],ba_size[x]);//\u68c0\u9a8c\u5b83\u548c\u5b83\u7236\u4eb2\n\t\tnow=v;\n\t\tfor(int i=17;i>=0;--i)if(size[v]-size[g[now][i]]<=(size[v]/2))now=g[now][i];\n\t\tans+=check(now,size[v])+check(f[now],size[v]);\n\t\tba_f[x]=v;//\u7238\u7238\u53d8\u513f\u5b50\n\t\tdfs2(v,x);\n\t}\n    //\u5b83\u7684\u5b50\u6811\u904d\u5386\u5b8c\u4e4b\u540e\u8fd8\u539f\u6210\u539f\u56fe\n\tba_f[x]=f[x];\n\tba_g[x][0]=ba_heavy[x]=heavy[x];\n\tfor(int i=1;i<=17;++i)ba_g[x][i]=ba_g[ba_g[x][i-1]][i-1];\n\tba_size[x]=size[x];\n}\nvoid clean(){\n\tans=0;tot=0;\n\tmemset(head,0,sizeof(head));\n\tmemset(heavy,0,sizeof(heavy));\n\tmemset(g,0,sizeof(g));\n\tmemset(ba_g,0,sizeof(ba_g));\n}\nint main(){\n\tt=read();\n\twhile(t--){\n\t\tn=read();\n\t\tclean();//\u521d\u59cb\u5316\n\t\tbuild();//\u5efa\u56fe\n\t\tdfs1(1,0);//\u5904\u7406\u539f\u56fe\n\t\tmemcpy(ba_heavy,heavy,sizeof(ba_heavy));//\u56e0\u4e3a\u53cd\u56fe\u548c\u539f\u56fe\u76f8\u4f3c\u6240\u4ee5copy\u8fc7\u6765\n\t\tmemcpy(ba_size,size,sizeof(ba_size));\n\t\tmemcpy(ba_f,f,sizeof(ba_f));\n\t\tmemcpy(ba_g,g,sizeof(g));\n\t\tdfs2(1,0);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1596507303,
        "uid": 68561,
        "name": "clockwhite",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "\u8003\u573a\u4e0a\u53ea\u62ff\u5230\u4e8655pts\uff0c\u73b0\u5728\u6765\u603b\u7ed3\u4e00\u4e0b\u539f\u56e0\n\n\u540c\u65f6\u5206\u4eab\u4e00\u4e0b\u81ea\u5df1\u4e00\u4e9b\u72ec\u7279\u7684\u89c1\u89e3\uff0c\u7528 **\u65cb\u8f6c** \u7684\u89d2\u5ea6\u6765\u770b\u8fd9\u9053\u9898\u76ee\uff0c\u4f1a\u53d1\u73b0\u975e\u5e38\u7684\u5de7\u5999\n\n----\n\n$n \\le 1999$\uff0c\u66b4\u529b $O(Tn^2 )$\n\n\u7279\u6b8a\u6027\u8d28$A$\uff08\u94fe\uff09\uff0c\u91cd\u5fc3\u5373\u4e3a\u4e2d\u70b9\uff0c$O(Tn)$\n\n\u7279\u6b8a\u6027\u8d28$B$\uff08\u5b8c\u7f8e\u4e8c\u53c9\u6811\uff09\uff0c\u6811\u7684\u5f62\u6001\u5df2\u7ecf\u7ed9\u5b9a\uff0c\u53ef\u4ee5\u627e\u89c4\u5f8b\uff0c\u751a\u81f3\u624b\u73a9\n\n----\n\n\u90a3\u4e48\u6b63\u89e3\u5462\uff1f\n\n\u8003\u8651\u5220\u53bb\u8fb9 $<u \\to v>$ \uff0c\u5c31\u662f\u6c42\u4ee5 $u$ \u4e3a\u6839\u7684 **\u65b0\u5b50\u6811** \u548c\u4ee5 $v$ \u4e3a\u6839\u7684\u539f\u5b50\u6811\u7684\u91cd\u5fc3\uff0c\u4e5f\u5c31\u662f\u8fd9\u6837\uff1a\n\n![pic1.png](https://i.loli.net/2019/12/01/HGkoIVbp17lzna9.png)\n\n\u56fe\u4e2d\u4ee5 $v$ \u4e3a\u6839\u7684\u539f\u5b50\u6811\u7528\u9ec4\u6846\u6807\u51fa\uff0c**\u5269\u4e0b** \u7684\u662f\u4ee5 $u$ \u4e3a\u6839\u7684\u65b0\u5b50\u6811\n\n\u4ee5 $v$ \u4e3a\u6839\u7684\u5b50\u6811\u5f88\u597d\u5904\u7406\uff0c\u5c31\u662f\u539f\u6765\u7684\u5b50\u6811\uff0c\u800c\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4f3c\u4e4e\u6362\u6839\u4e86\uff0c\u600e\u4e48\u5904\u7406\u5462\uff1f\n\n\u4f7f\u7528 `Rotate` \u5927\u6cd5\u2026\u2026\n\n\u9996\u5148\u6211\u4eec\u5904\u4e8e $u$ \u8fd9\u4e2a\u70b9\uff0c\u9a6c\u4e0a\u8981\u5f80 $v$ \u8d70\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5904\u7406\u4e00\u4e0b\u5220\u53bb $<u \\to v>$ \u7684\u7b54\u6848\n\n\u5148\u5bf9\u5b50\u6811 $v$ `GetCentroid`\n\n$u$ \u8fd9\u8fb9 $u$ \u81ea\u5df1\u53d8\u4e3a\u4e86\u6839\uff0c\u90a3\u4e48\u5b83\u7684\u513f\u5b50\u5c31\u53d8\u6210\u4e86 $\\text{OriginalSons}_u -v+fa_u$\n\n\u4e3a\u4e86\u8ba9 $fa_u$ \u6210\u4e3a $u$ \u7684\u513f\u5b50\uff0c\u6211\u4eec\u5c06 $fa_u$ `RotateDown`\n\n![pic2.png](https://i.loli.net/2019/12/01/bBocX6gDKsqn9P2.png)\n\n\u73b0\u5728\u662f\u4e0d\u662f\u5c31\u6210\u4e86\n\n\u800c\u4e14\u5728\u8bbf\u95ee $v$ \u540e\uff0c$dep_v$ \u4e5f\u53ea\u662f $2$ \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u518d `RotateDown` $u$ \uff0c\u4f7f\u5f97 $v$ \u6210\u4e3a\u4e0a\u9762\u7684\u6839\n\n\u8bbf\u95ee $u$ \u7ed3\u675f\u540e\uff0c\u4e3a\u4e86\u4e0d\u5f71\u54cd\u5176\u5b83\u5144\u5f1f\uff0c\u8981\u628a $u$ `RotateUp` \u56de\u53bb\n\n![pic3.png](https://i.loli.net/2019/12/01/ahiUw2KjLuqAc73.png)\n\n----\n\n\u59d1\u4e14\u4e0d\u8bf4 `Rotate`\uff0c\u6765\u770b\u770b `GetCentroid` \u600e\u4e48\u5199\n\n\u66b4\u529b\u6c42\u91cd\u5fc3\u662f $O(n)$ \u7684\u6811\u5f62 DP\uff0c\u80fd\u4e0d\u80fd\u9884\u5904\u7406\u4e00\u4e0b\u6765\u9002\u5e94\u591a\u6b21\u8be2\u95ee\u5462\uff1f\n\n\u5b9a\u7406\uff1a\n> \u5bf9\u4e8e $u$ \uff0c\u5982\u679c $n - size_u > size_v (v \\in \\text{Sons}_u) $  \uff0c\u90a3\u4e48 $centroid_T$ **\u4e0d\u5728**  $u$ \u7684\u513f\u5b50\u4eec\u7684\u5b50\u6811\u91cc\uff0c\u5426\u5219\uff0c\u5982\u679c $u \\neq centroid_T$\uff0c\u90a3\u4e48 $centroid_T$  \u5728 $u$ \u7684 **\u91cd\u513f\u5b50** \u7684\u5b50\u6811\u91cc\n\n![pic4.png](https://i.loli.net/2019/12/01/MwPx6kCDl4aOfy1.png)\n\n\u8003\u8651\u5728\u91cd\u94fe\u4e0a **\u500d\u589e** \uff0c\u7528 $f_{k, u}$ \u8868\u793a\u4ece $u$ \u5f00\u59cb\uff0c\u6cbf\u7740\u4ee5 $u$ \u4e3a\u6839\u7684 **\u91cd\u94fe** \u7684\u65b9\u5411\u8d70 $2^k$ \u6240\u5230\u7684\u70b9\uff0c\u8df3\u5230\u6700\u6df1\u7684\u90a3\u4e2a\u6ee1\u8db3 $size_u - size_{f_{k,u}}  \\le \\left\\lfloor \\frac{size_u}{2}\\right\\rfloor $ \u7684\uff0c\u90a3\u4e48 **\u5b83** \u548c **\u5b83\u7684\u7236\u4eb2** \u5c31\u6210\u4e3a\u4e86\u91cd\u5fc3\u7684 **\u5019\u9009\u70b9**\uff0c$O(1)$ `check` \u4e00\u4e0b\uff0c\u8ba1\u7b97\u8d21\u732e\n\n\u8fd9\u4e2a\u90e8\u5206\u662f $O(\\log n)$ \u7684\n\n----\n\n`RotateDown` \u7684\u65f6\u5019\u8981\u66f4\u65b0\u4ec0\u4e48\u5462\uff1f\n\n* $NewSize_u \\gets n - size_v$\n* $NewSize_v \\gets size_v$\n* $NewFather_u \\gets 0, NewFather_v \\gets 0$\n* $NewFather_{fa_u}\\gets u$\n* $NewMaxSon_u \\gets \\begin{cases} TheFirstBiggestSon_u & (v \\neq TheFirstBiggestSon_u)\\\\ TheSecondBiggestSon_u & (v = TheFirstBiggestSon_u) \\\\ fa_u &(NewSize_{fa_u} > NewSize_{ ^{(Now)} NewMaxSon_u)} \\end{cases}$\n* $O(\\log n)$ \u66f4\u65b0 $f_{k,u }$\n\n`RotateUp` \u7684\u65f6\u5019\u53c8\u8981\u66f4\u65b0\u4ec0\u4e48\u5462\uff1f\n* \u8fd8\u597d\uff0c\u8fd9\u6b21 **\u6062\u590d\u539f\u72b6** \u5c31\u53ef\u4ee5\u4e86\u2026\u2026\n\n---\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\n\n\u4ee3\u7801\u5c31\u4e0d\u7ed9\u51fa\u4e86\uff0c\u53ef\u4ee5\u53c2\u8003\u5176\u5b83\u5de8\u4f6c\u4eec\u7684\u9898\u89e3\uff0c\u8bf7\u6ce8\u610f\u5e38\u6570\u4f18\u5316",
        "postTime": 1575172834,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "\u8003\u573a\u4e0a\u4e00\u773c\u5c31\u60f3\u5230\u4e86\u505a\u6cd5\u7684\u6838\u5fc3\u90e8\u5206OvO,\u4f46\u662f\u8bb0\u9519\u7ed3\u8bba\u88ab\u5e26\u504f\u4e86\u2026\u2026\n\n\u8fd9\u662f\u4e00\u4e2a\u8fde\u500d\u589e\u90fd\u4e0d\u7528\u5199\u7684\u505a\u6cd5,\u53ea\u9700\u8981\u4e24\u6b21`dfs`\u548c\u66b4\u529b\u8df3\u91cd\u5fc3\u3002\u590d\u6742\u5ea6\u5206\u6790\u9700\u8981\u94fe\u5206\u6cbb\u601d\u60f3\u3002\n\n**\u9898\u610f** : \u7ed9\u51fa\u4e00\u68f5\u6811,\u6c42\u51fa\u5207\u65ad\u6bcf\u6761\u8fb9\u4e4b\u540e,\u6240\u5f97\u5230\u7684\u4e24\u68f5\u6811\u7684\u91cd\u5fc3\u7f16\u53f7\u548c\u3002\n\n$n\\leq 3\\times 10^5$, \u591a($5$)\u7ec4\u6570\u636e,\u65f6\u9650$\\texttt{4s}$.\n\n------------\n\n\u9996\u5148\u8fd9\u4e2a\u5207\u8fb9\u7684\u679a\u4e3e\u987a\u5e8f\u663e\u7136\u662f\u53ef\u4ee5\u968f\u610f\u7684,\u6211\u4eec\u8003\u8651\u7c7b\u4f3c**\u6362\u6839DP**\u7684\u5957\u8def\u3002\n\n\u6211\u4eec\u628a\u5207\u65ad\u7684\u4f4d\u7f6e\u505a\u6839,\u5728\u5207\u6362\u4e00\u6761\u8fb9\u4e4b\u540e,\u8003\u8651\u5982\u4e0b\u7684\u60c5\u51b5:\n\n```cpp\nu,v\u4e3a\u5f53\u524d\u91cd\u5fc3\n\n    *- | -*-----*\n   /     /_\\     \\\n  /               \\\n u                 v\n/_\\               /_\\\n\n\u53d8\u4f5c\u2193\n\n    *----*- | -*\n   /    /_\\     \\\n  /              \\\n u                v\n/_\\              /_\\\n```\n\n\u5bb9\u6613\u770b\u51fa $u$ \u5230\u6839\u7684\u8054\u901a\u5757\u5927\u5c0f\u589e\u52a0\u4e86, $v$ \u5230\u6839\u7684\u8054\u901a\u5757\u5927\u5c0f\u51cf\u5c11\u4e86\u3002\n\n\u5bb9\u6613\u6362\u6839\u7ef4\u62a4\u5b50\u6811\u5927\u5c0f\u3002\u5230\u6839\u7684\u8054\u901a\u5757\u5927\u5c0f$=$\u603b\u5927\u5c0f$-$\u5b50\u6811\u5927\u5c0f\u3002\n\n\u67d0\u6b21\u66f4\u65b0\u4e4b\u540e, $u,v$ \u70b9\u53ef\u80fd\u4f1a\u8fdb\u884c\u76f8\u5e94\u7684\u79fb\u52a8\u3002\n\n$v$ \u70b9\u5230\u6839\u7684\u8054\u901a\u5757\u5927\u5c0f\u51cf\u5c0f\u4e86,\u53ef\u80fd\u4f1a\u6362\u6210\u67d0\u4e2a\u513f\u5b50,\u5bf9\u513f\u5b50 $siz$ \u53d6 $\\max$ \u6bd4\u8f83\u5373\u53ef\u3002\n\n\u7136\u800c,\u4e0d\u80fd\u6bcf\u6b21\u66b4\u529b\u53d6 $\\max$ ,\u5426\u5219\u4f1a\u88ab\u83ca\u82b1\u5361\u7206,\u7531\u4e8e\u513f\u5b50\u7684 $\\max$ \u4e0d\u53d7\u6362\u6839\u5f71\u54cd,\u53ef\u4ee5\u9884\u5148\u5b58\u7740\u3002\n\n\u5bf9\u4e8e $u$ ,\u7531\u4e8e\u5230\u6839\u7684\u8054\u901a\u5757\u5927\u5c0f\u589e\u5927\u4e86,\u53ef\u80fd\u5411\u4e0a\u8d70,\u540c\u6837\u4e5f\u662f\u5224\u4e00\u4e0b\u5c31\u597d\u4e86\u3002 $u$ \u662f\u6709\u53ef\u80fd\u5148\u5411\u4e0a\u540e\u5411\u4e0b\u7684\u3002\n\n\u6ce8\u610f\u4ee5\u4e0a\u64cd\u4f5c\u90fd\u6709\u53ef\u80fd\u91cd\u590d\u82e5\u5e72\u6b21,\u8fd8\u6709\u53cc\u91cd\u5fc3\u7684\u60c5\u51b5\u3002\n\n\u4e00\u6b21\u8c03\u6574\u7684\u4ee3\u7801\u662f\u8fd9\u6837\u7684 : \n\n- \u5b9a\u7406 : \u91cd\u5fc3\u6ee1\u8db3\u6240\u6709\u7684\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\lfloor p/2\\rfloor$\n\n```cpp\np[u] : \u91cd\u513f\u5b50\nf[u] : \u7236\u4eb2\nsiz[u] : \u5b50\u6811\u5927\u5c0f\nvoid upd(int &u,int c)\n{\n  while (siz[u]*2<c)u=f[u];\n  while (siz[p[u]]*2>c)u=p[u];\n  if (siz[p[u]]*2==c)ans+=p[u];\n  if (siz[u]*2==c)ans+=f[u];\n  ans+=u;\n}\n```\n\n\u6211\u4eec\u8981\u5728\u6362\u6839\u4e2d\u7ef4\u62a4\u91cd\u513f\u5b50,\u770b\u4f3c\u53d6 $\\max$ \u96be\u4ee5\u64a4\u9500\u8d21\u732e,\u4f46\u8fd9\u662f\u6709\u4e00\u4e2a\u6280\u5de7\u7684,\u8bb0\u5f55\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u5373\u53ef\u3002(\u5177\u4f53\u89c1\u4ee3\u7801)\n\n\u6b64\u5916\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282,\u5982\u679c\u539f\u6765\u7684\u91cd\u5fc3\u5982\u4e0b\u56fe:\n\n```cpp\nu,v\u4e3a\u5f53\u524d\u91cd\u5fc3\n\n    *- | -*-----*\n   /      |    /_\\\n  /       v       \n u       /_\\       \n/_\\               \n\n\u53d8\u4f5c\u2193\n\n    *-----*- | -*\n   /      |    /_\\\n  /       v       \n u       /_\\       \n/_\\   \n```\n\n\u8fd9\u6837, $u,v$ \u5c31\u5728\u5206\u5272\u7ebf\u540c\u4fa7\u4e86,\u663e\u7136\u4e0d\u5408\u6cd5\u3002\n\n\u5bb9\u6613\u60f3\u5230\u4ee4 $v$ \u5f3a\u5236\u8df3\u5230\u5206\u5272\u7ebf\u53e6\u4e00\u7aef,\u4f46\u662f\u4f1a\u53d1\u73b0 `TLE:75`\u3002\n\n\u8003\u8651\u7c7b\u4f3c\u9759\u6001\u94fe\u5206\u6cbb\u7684\u5957\u8def,\u5bf9 $t$ \u7684\u513f\u5b50\u5206\u5272\u7684\u65f6\u5019:\n\n\u5bf9\u4e8e\u8f7b\u513f\u5b50,\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u8df3 $v$\u3002\n\n\u5bf9\u4e8e\u91cd\u513f\u5b50,\u6709\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5:\n\n- $v$ \u672c\u8eab\u5c31\u5728\u5176\u5b50\u6811\u4e2d : \u65e0\u9700\u64cd\u4f5c\u3002\n\n- $v$ \u6070\u597d\u5728 $t$ \u5904 : \u66b4\u529b\u8df3,\u53ea\u4f1a\u79fb\u52a8\u4e00\u4f4d\u3002\n\n- $v$ \u5728 $t$ \u7684\u7956\u5148\u5904 : \u6839\u636e\u5206\u5272\u7ebf\u7684\u5b9a\u4e49\u8fd9\u79cd\u60c5\u51b5\u4e0d\u5b58\u5728\u3002\n\n- $v$ \u5728\u5176\u4ed6\u5b50\u6811\u4e2d : \u6839\u636e\u91cd\u5fc3\u7684\u5b9a\u4e49,\u4e0d\u5b58\u5728\u3002\n\n\u6211\u4eec\u6765\u8ba1\u7b97\u590d\u6742\u5ea6\u3002\n\n\u5bf9\u4e8e\u5206\u5272\u7ebf\u4e0a\u65b9 $u$ \u7684\u79fb\u52a8,\u5bb9\u6613\u611f\u77e5\u662f $O(n)$ \u6b21\u7684,\u56e0\u4e3a\u5206\u5272\u7ebf\u79fb\u52a8\u65f6\u5e26\u6765\u7684 $siz$ \u53d8\u5316\u603b\u91cf\u662f $O(n)$ \u7684\u3002\n\n\u5bf9\u4e8e\u8f7b\u513f\u5b50,\u66b4\u529b\u8df3 $v$ \u6700\u5dee\u53ea\u4f1a\u662f $O(siz)$ \u7684\u3002\n\n\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u5c31\u662f\u6240\u6709\u8f7b\u94fe\u5934 $siz$ \u7684\u548c,\u5373\u4e3a $O(n\\log n)$\u3002\n\n\u5bf9\u4e8e\u91cd\u513f\u5b50,\u7531\u4e8e\u7ee7\u627f\u4e86(\u91cd\u94fe)\u7956\u5148\u7684\u65b9\u6848,\u800c\u4e14\u53ea\u4f1a\u5355\u8c03\u4e0b\u79fb,\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n\u5982\u679c\u628a\u7ec6\u8282\u8003\u8651\u6e05\u695a\u4e86,\u5199\u8d77\u6765\u5c31\u662f\u4e2a\u6362\u6839,\u6ca1\u522b\u7684\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<vector>\n#define ll long long\n#define MaxN 300500\nusing namespace std;\nint read(){\n  int X=0;char ch=0;\n  while(ch<48||ch>57)ch=getchar();\n  while(ch>=48&&ch<=57)X=X*10+(ch^48),ch=getchar();\n  return X;\n}\nvector<int> g[MaxN];\nint siz[MaxN],p[MaxN],f[MaxN];\nvoid pfs(int u)\n{\n  siz[u]=1;\n  for (int i=0,v;i<g[u].size();i++)\n    if (!siz[v=g[u][i]]){\n      f[v]=u;pfs(v);\n      siz[u]+=siz[v];\n    }\n  p[u]=0;\n  for (int i=0,v;i<g[u].size();i++)\n    if ((v=g[u][i])!=f[u]&&siz[v]>=siz[p[u]])\n      p[u]=v;\n}\nll ans;\nvoid upd(int &u,int c)\n{\n  while (siz[u]*2<c)u=f[u];\n  while (siz[p[u]]*2>c)u=p[u];\n  if (siz[p[u]]*2==c)ans+=p[u];\n  if (siz[u]*2==c)ans+=f[u];\n  ans+=u;\n}\nint n,u1,u2,c1,c2;\nvoid dfs(int u,int fa)\n{\n  upd(u1,c1);upd(u2,c2);\n  if (!p[u])return ;\n\n  f[f[fa]=u]=0;\n  siz[u]+=siz[fa];\n  int p1=0,p2=0,v,sp=p[u];\n  \n    for (int i=0;i<g[u].size();i++){\n      v=g[u][i];\n      if (siz[v]>=siz[p1]){p2=p1;p1=v;}\n      else if (siz[v]>siz[p2])p2=v;\n    }\n    siz[u]-=siz[v=sp];\n      if (p1==v)p[u]=p2;else p[u]=p1;\n      c1=siz[u];c2=siz[v];\n      if (u2==u)u2=v;\n      dfs(v,u);\n    siz[u]+=siz[v];\n    \n    int s1=u1,s2=u2;\n    for (int i=0;i<g[u].size();i++)\n      if ((v=g[u][i])!=fa&&v!=sp){\n        siz[u]-=siz[v];\n          if (p1==v)p[u]=p2;else p[u]=p1;\n          c1=siz[u];c2=siz[v];\n          dfs(u2=v,u);\n        siz[u]+=siz[v];\n      }\n  siz[u]-=siz[fa];\n  f[f[u]=fa]=0;\n  p[u]=sp;\n}\nvoid solve()\n{\n  n=read();ans=0;\n  for (int i=1;i<=n;i++)\n    {g[i].clear();siz[i]=0;}\n  for (int i=1,f,t;i<n;i++){\n    f=read();t=read();\n    g[f].push_back(t);\n    g[t].push_back(f);\n  }for (int i=1;i<=n;i++)\n    if (g[i].size()==1)u1=i;\n  c1=1;c2=n-1;\n  f[u2=g[u1][0]]=0;pfs(u2);\n  siz[u2]--;if (p[u2]==u1)p[u2]=0;\n  upd(u2,c2);ans=0;\n  dfs(g[u1][0],u1);\n  printf(\"%lld\\n\",ans);\n}\nint main()\n{\n  freopen(\"centroid.in\",\"r\",stdin);\n  freopen(\"centroid.out\",\"w\",stdout);\n  int T=read();\n  while(T--)solve();\n  return 0;\n}\n```",
        "postTime": 1583590988,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "[[CSP2019] \u6811\u7684\u91cd\u5fc3](https://www.luogu.org/problem/P5666)\n\n## \u9898\u610f\n$T$ \u7ec4\u6570\u636e $(1 \\le T \\le 5)$, \u6bcf\u6b21\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811 $(1 \\le n \\le 299995)$.\n\u8bbe $E$ \u4e3a\u6811\u7684\u8fb9\u96c6, $V'_x,\\ V'_y$ \u5206\u522b\u4e3a\u5220\u53bb\u8fb9 $(x,y)$ \u540e \u70b9 $x$ \u6240\u5728\u7684\u70b9\u96c6\u548c\u70b9 $y$ \u6240\u5728\u7684\u70b9\u96c6.\n\u6c42 $$ \\sum_{(x,y) \\in E} \\left( \\sum_{x \\in V'_x} [x \u662f V'_x \u7684\u91cd\u5fc3] * x + \\sum_{y \\in V'_y} [y \u662f V'_y \u7684\u91cd\u5fc3] * y \\right) $$\n\n## \u601d\u8def\n### 40 pts\n\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9, \u6c42\u91cd\u5fc3\u5373\u53ef.\n### 100 pts\n#### \u505a\u6cd5 1\n\u603b\u7684\u601d\u8def\u662f\u4ece\u679a\u4e3e\u8fb9\u53d8\u4e3a\u679a\u4e3e\u70b9,\n\u5177\u4f53\u64cd\u4f5c :\n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9 $u$, \u5bf9\u8be5\u70b9\u7684\u6bcf\u4e00\u68f5\u5b50\u6811\u90fd\u5904\u7406\u51fa $w_i$ \u8868\u793a, \u8be5\u5b50\u6811\u5185\u6743\u503c\u4e3a $i$ \u7684\u8fb9\u7684\u4e2a\u6570,\n\u8fd9\u91cc\u8fb9\u7684\u6743\u503c\u5b9a\u4e49\u4e3a : \u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u65f6, \u5220\u53bb\u8fd9\u6761\u8fb9\u540e, \u5220\u6389\u7684\u8282\u70b9\u4e2a\u6570.\n\n\u518d\u5206\u7c7b\u8ba8\u8bba\u5f53\u524d\u679a\u4e3e\u5230\u7684\u5b50\u6811\u662f\u4e0d\u662f\u6743\u503c\u6700\u5927\u7684\u5b50\u6811, \u627e\u5230\u4e00\u4e2a\u533a\u95f4 $[l,r]$, \u4f7f\u5220\u53bb\u7684\u8fb9\u7684\u6743\u503c $e_i \\in [l,r]$ \u65f6, \u70b9 $u$ \u4e3a\u65b0\u6811\u7684\u91cd\u5fc3, \u7528\u6811\u72b6\u6570\u7ec4\u533a\u95f4\u6c42\u548c\u5373\u53ef.\n\n\u95ee\u9898\u5728\u4e8e, \u6211\u4eec\u6bcf\u6b21\u8981\u72ec\u7acb\u5730\u83b7\u5f97\u6bcf\u4e2a\u5b50\u6811\u7684\u8fb9\u7684\u6570\u91cf, \u6240\u4ee5\u5c31\u8981\u7528\u5230\u7ebf\u6bb5\u6811\u5408\u5e76\u6216\u8005\u4e3b\u5e2d\u6811, \u4e0d\u7136\u7684\u8bdd\u6bcf\u6b21\u91cd\u65b0\u83b7\u53d6\u5b50\u6811\u7684\u8fb9\u7684\u590d\u6742\u5ea6\u4f1a\u8fbe\u5230 $O(n^2)$, \u7136\u540e\u672c\u4eba\u7ebf\u6bb5\u6811\u5408\u5e76\u4e0e\u4e3b\u5e2d\u6811\u90fd\u4e0d\u4f1a, \u6240\u4ee5....\n\n#### \u505a\u6cd5 2\n**\u603b\u601d\u8def**: \u5229\u7528\u500d\u589e\u4f18\u5316\u627e\u91cd\u5fc3\u7684\u8fc7\u7a0b.\n**\u7a81\u7834\u53e3**: \u6811\u7684\u91cd\u5fc3\u4e00\u5b9a\u5728\u6839\u8282\u70b9\u7684\u91cd\u8def\u5f84\u4e0a.\n\n**\u8bc1\u660e**: \n\u5b9a\u4e49 $son[u]$ \u4e3a\u8282\u70b9 $u$ \u7684\u91cd\u513f\u5b50.\n\n\u8bbe\u8be5\u6811\u7684\u6839\u8282\u70b9\u4e3a $t$, $v,\\ u$ \u4e3a\u8be5\u6811\u4e0a\u7684\u4e24\u4e2a\u8282\u70b9, \u4e14 $fa[v]=u$, $v \\not = son[u]$.\n**\u53cd\u8bc1\u6cd5**: \u5047\u8bbe $v$ \u4e3a\u4ee5 $t$ \u4e3a\u6839\u8282\u70b9\u7684\u6811\u91cd\u5fc3,\n\u5219 $ sz[t]-sz[v] \\le \\frac{sz[t]}{2} $,\n\u6240\u4ee5 $ sz[v] \\ge \\frac{sz[t]}{2} $.\n\u8bbe $p$, \u6ee1\u8db3 $fa[p]=u$, \u4e14 $p \\not = v$,\n\u5219 $sz[p] \\le sz[u]-1-sz[v] \\le sz[u]-1-\\frac{sz[t]}{2} \\le sz[t]-1-\\frac{sz[t]}{2} \\le sz[v]$\n\u6240\u4ee5 $v$ \u4e3a $u$ \u7684\u91cd\u513f\u5b50, \u4ea7\u751f\u77db\u76fe, \u5047\u8bbe\u4e0d\u6210\u7acb,\n\u5f97\u8bc1.\n\n\u5177\u4f53\u505a\u6cd5:\n\u8bbe $s[u][i]$ \u4e3a\u4ece\u8282\u70b9 $u$ \u6cbf\u7740\u91cd\u8def\u5f84\u5f80\u4e0b\u8df3 $2^i$ \u6b65\u540e\u5230\u8fbe\u7684\u70b9.\n\u8bbe $t$ \u4e3a\u5f53\u524d\u6811\u7684\u6839\u8282\u70b9.\n\u5f53 $sz[s[u][i]] > \\frac{sz[t]}{2}$ \u65f6, $u=s[u][i]$,\n\u4e0d\u65ad\u5f80\u4e0b\u8df3, \u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u6709\u53ef\u80fd\u6210\u4e3a\u91cd\u5fc3\u7684\u70b9, \u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u70b9\u4ee5\u53ca\u5b83\u7684\u91cd\u513f\u5b50\u662f\u4e0d\u662f\u91cd\u5fc3 (\u56e0\u4e3a\u4e00\u68f5\u6811\u6700\u591a\u53ea\u80fd\u7531\u4e24\u4e2a\u91cd\u5fc3, \u6240\u4ee5\u53ea\u9700\u5224\u65ad\u8fd9\u4e24\u4e2a\u70b9), \u82e5\u662f, \u5219\u52a0\u5165\u7b54\u6848\u4e2d.\n\n\u9996\u5148, \u6211\u4eec\u968f\u4fbf\u627e\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9, \u90a3\u4e48\u8fd9\u91cc\u6211\u4eec\u9ed8\u8ba4\u9009\u62e9 $1$ \u53f7\u70b9.\n\u7136\u540e, \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9, \u6211\u4eec\u679a\u4e3e\u5b83\u8fde\u5411\u5b50\u8282\u70b9\u7684\u6bcf\u4e00\u6761\u8fb9, \u7136\u540e\u5206\u7c7b\u8ba8\u8bba, \u91cd\u65b0\u9009\u62e9 $u$ \u7684\u91cd\u513f\u5b50 (\u8be6\u89c1\u4ee3\u7801).\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=299995+7;\nconst int L=20;\nint T,n,sz[N],son[N][2],s[N][L+7];\nll ans;\nint lst[N],nxt[2*N],to[2*N],tot;\nvoid add(int x,int y){ nxt[++tot]=lst[x]; to[tot]=y; lst[x]=tot; }\nvoid rfs(int u){\n  s[u][0]=son[u][0];\n  for(int i=1;i<=L;i++)\n    s[u][i]=s[s[u][i-1]][i-1];\n}\nvoid pre(int u,int fa){\n  for(int i=lst[u];i;i=nxt[i]){\n    int v=to[i];\n    if(v==fa) continue;\n    pre(v,u);\n    sz[u]+=sz[v];\n    if(sz[v]>sz[son[u][0]]){ son[u][1]=son[u][0]; son[u][0]=v; }\n    else if(sz[v]>sz[son[u][1]]) son[u][1]=v;\n  }\n  sz[u]++;\n  rfs(u);\n}\nvoid find(int u){\n  int t=u;\n  for(int i=L;i>=0;i--)\n    if(sz[s[u][i]]>sz[t]/2)\n      u=s[u][i];\n  if(sz[t]-sz[u]<=sz[t]/2) ans+=(ll)u;\n  u=s[u][0];\n  if(sz[t]-sz[u]<=sz[t]/2) ans+=(ll)u;\n}\nvoid run(int u,int fa){\n  int t1=son[u][0],t2=sz[u];        // \u5148\u5907\u4efd\n  for(int i=lst[u];i;i=nxt[i]){\n    int v=to[i];\n    if(v==fa) continue;\n    if(v==t1) son[u][0]= sz[son[u][1]]>n-t2 ?son[u][1] :fa;        // \u91cd\u65b0\u9009\u53d6 u \u7684\u91cd\u513f\u5b50.\n    else son[u][0]= sz[t1]>n-t2 ?t1 :fa;\n    sz[u]=n-sz[v];\n    rfs(u);    // \u8bb0\u5f97\u628a son[u][i] \u4e5f\u66f4\u65b0\u4e00\u904d\n    find(u); find(v);\n    run(v,u);\n  }\n  son[u][0]=t1;    // \u8fd8\u539f\n  sz[u]=t2;\n  rfs(u);    //\u66f4\u65b0\n}\nint main(){\n  //  freopen(\"gc.in\",\"r\",stdin);\n  cin>>T;\n  while(T--){\n    scanf(\"%d\",&n);\n    memset(lst,0,sizeof(lst));\n    memset(son,0,sizeof(son));\n    memset(sz,0,sizeof(sz));\n    tot=ans=0;\n    int x,y;\n    for(int i=1;i<n;i++){\n      scanf(\"%d%d\",&x,&y);\n      add(x,y); add(y,x);\n    }\n    pre(1,0);\n    run(1,0);\n    printf(\"%lld\\n\",ans);\n  }\n  return 0;\n}\n``` ",
        "postTime": 1576885840,
        "uid": 113693,
        "name": "BruceW_07",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "\u672c\u7bc7\u9898\u89e3\u4e0e [TEoS \u7684\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/qzh/p5666-shu-di-zhong-xin) \u601d\u8def\u5927\u81f4\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u672c\u7bc7\u9898\u89e3\u63d0\u4f9b\u7cbe\u88c5\u4ee3\u7801\u3002\u9488\u5bf9\u4e00\u4e9b\u601d\u8def\u67b6\u6784\u548c\u6613\u9519\u70b9\uff0c\u4ee3\u7801\u7531\u539f\u6765\u6211\u5199\u7684 148 \u884c\u4ee3\u7801\uff0c\u7ecf\u52a0\u5165 51 \u884c\u6ce8\u91ca\u800c\u6765\uff0c\u5e76\u5c06\u53d8\u91cf\u540d\u6539\u7684\u66f4\u6613\u61c2\uff08\u4e5f\u66f4\u957f\u4e86\uff09\n\n\u6ce8\u91ca\u5305\u62ec\u7ea6 $50\\%$ \u7684\u601d\u8def\u63d0\u793a\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\n\n## Code\n```cpp\n// \u2193\u2193\u2193 \u5934\u6587\u4ef6\n#include <bits/stdc++.h>\nusing namespace std;\n\n// \u2193\u2193\u2193 \u5feb\u901f\u8bfb\u5165\ntemplate <typename ret_type> inline ret_type read() {\n    register ret_type ret = 0; register char ch = getchar();\n    while (!isdigit(ch)) ch = getchar(); \n    while (isdigit(ch)) { ret = (((ret << 2) + ret) << 1) + (ch & 15); ch = getchar(); } \n    return ret;\n}\n\n// \u2193\u2193\u2193 \u53d8\u91cf\u5b9a\u4e49 (\u56fe\u4e0a\u52a0\u8fb9\u6ca1\u5199\u51fd\u6570\uff0c\u76f4\u63a5\u5728\u4e3b\u7a0b\u5e8f\u4e2d\u52a0\u8fb9)\nint n;                                                         // \u8282\u70b9\u4e2a\u6570\nint to[600003], nxt[600003], head[300003], edges_cnt = 0;      // \u5b58\u56fe\u7528[\u94fe\u5f0f\u524d\u5411\u661f]\nint fa[600003], size[600003], depth[600003], heavySon[600003]; // \u6811\u4e0a\u8282\u70b9\u4fe1\u606f\nbool belong_rootsHeavySon[600003];                             // \u662f\u5426\u5c5e\u4e8e\u6839\u8282\u70b9\u91cd\u513f\u5b50\u7684\u5b50\u6811\nint weightHeart[600003];                                       // \u8be5\u8282\u70b9\u7684\u5b50\u6811\u7684\u91cd\u5fc3\nint ans_HeavySon[600003], ans_SecondHeavySon[600003];          // \u5b58\u50a8\u7b54\u6848\u7528\nint root, roots_SecondHeavySon;\n\n// \u2193\u2193\u2193 \u53d6\u51fa x \u8282\u70b9\u7684\u67d0\u4e00\u5b50\u6811 (\"\u67d0\u4e00\"\u5e94\u8be5\u4e0d\u96be\u7406\u89e3)\n#define gson(x) (((x) == root ? roots_SecondHeavySon : heavySon[x])) \n\n// \u2193\u2193\u2193 \u627e\u5230\u6811\u4e2d\u4efb\u610f\u4e00\u4e2a\u91cd\u5fc3 (\u4f5c\u4e3a\u65b0\u6811\u7684\u6839\u8282\u70b9 \"root\")\nint find_a_WeightHeart(int u, int father)\n{\n    int ret = 0, maxSize = 0;\n    size[u] = 1;\n    for (int i = head[u]; ~i; i = nxt[i]) {\n        if (father != to[i]) {\n            ret = find_a_WeightHeart(to[i], u);\n            if (ret) return ret;\n            size[u] += size[to[i]];\n            if (size[to[i]] > maxSize) {\n                maxSize = size[to[i]];\n                heavySon[u] = to[i];\n            }\n        }\n    }\n    if (max(n - size[u], size[heavySon[u]]) <= n / 2) return u; // \u5982\u679c\u81ea\u5df1\u5c31\u662f\u91cd\u5fc3\n    return 0;\n}\n\nint minus_r = 0;\n// \u2193\u2193\u2193 \u9884\u5904\u7406\u7b54\u6848 1\n/**\n *     \u5bf9\u4e8e\u88ab\u5272\u7684\u8fb9\u7684\u6df1\u5ea6\u66f4\u5c0f\u7684\u70b9 (\u4e0a\u9762\u7684\u70b9) \u6240\u5728\u7684\u88ab\u5206\u5272\u7684\u5b50\u6811, \u5f53\u88ab\u5272\u7684\u8fb9\u7684\u6df1\u5ea6\u66f4\u5927\u7684\u70b9      \n * (\u4e0b\u9762\u7684\u70b9) (\u4e0b\u7b80\u79f0 v) \u4e0d\u5728\u6839\u8282\u70b9\u91cd\u513f\u5b50\u7684\u5b50\u6811\u5185\u65f6, v \u7684\u5177\u4f53\u4f4d\u7f6e\u5bf9\u7b54\u6848\u4e0d\u6784\u6210\u5f71\u54cd, \u5bf9\u7b54\u6848\n * \u6784\u6210\u5f71\u54cd\u7684\u4ec5\u4ec5\u662f v \u7684\u5b50\u6811\u5927\u5c0f.\n *     minus_r : v \u7684\u5b50\u6811\u5927\u5c0f\n *     ans_HeavySon[x] : \u5f53 v \u7684\u5b50\u6811\u5927\u5c0f\u4e3a x \u65f6\u7684\u7b54\u6848.\n *     \u672c\u51fd\u6570\u529f\u80fd(\u663e\u800c\u6613\u89c1) : \u6c42\u51fa ans_HeavySon\n */\nvoid preDeal_notRootsHeavySonSubtree(int u)\n{\n    if (u == root) minus_r = n - size[heavySon[root]];\n    if (heavySon[u]) preDeal_notRootsHeavySonSubtree(heavySon[u]);\n    while (size[root] - minus_r - size[u] <= (size[root] - minus_r) / 2) \n        ans_HeavySon[minus_r--] = u;\n}\n\n// \u2193\u2193\u2193 \u9884\u5904\u7406\u7b54\u6848 2\n/** \n *     \u5bf9\u4e8e\u88ab\u5272\u7684\u8fb9\u7684\u6df1\u5ea6\u66f4\u5c0f\u7684\u70b9 (\u4e0a\u9762\u7684\u70b9) (\u4e0b\u7b80\u79f0 u) \u6240\u5728\u7684\u88ab\u5206\u5272\u7684\u5b50\u6811, \u5f53\u88ab\u5272\u7684\u8fb9\u7684\n * \u6df1\u5ea6\u66f4\u5927\u7684\u70b9 (\u4e0b\u9762\u7684\u70b9) (\u4e0b\u7b80\u79f0 v) \u5728\u6839\u8282\u70b9\u91cd\u513f\u5b50\u7684\u5b50\u6811\u5185\u65f6, \u6811\u7684\u91cd\u5fc3\u53ef\u80fd\u4f1a\u5230\u6839\u8282\u70b9\u6b21\n * \u91cd\u513f\u5b50\u7684\u5b50\u6811\u4e0a (\u5982\u4f55\u5224\u65ad\u8fd9\u79cd\u60c5\u51b5 : \u5f53\u6839\u8282\u70b9\u91cd\u513f\u5b50\u7684 size \u51cf\u53bb\u5b50\u6811 v \u7684 size \u5c0f\u4e8e\u6839\u8282\n * \u70b9\u6b21\u91cd\u513f\u5b50\u7684 size \u65f6, \u5373 u \u6240\u5728\u7684\u88ab\u5206\u88c2\u51fa\u7684\u5b50\u6811\u7684\u91cd\u513f\u5b50\u5df2\u4e0d\u518d\u662f\u539f\u6811\u7684\u91cd\u513f\u5b50\uff0c\u800c\u662f\u539f\u6811\n * \u7684\u6b21\u91cd\u513f\u5b50\u65f6), v \u7684\u5177\u4f53\u4f4d\u7f6e\u4f9d\u65e7\u5bf9\u7b54\u6848\u4e0d\u6784\u6210\u5f71\u54cd, \u5bf9\u7b54\u6848\u6784\u6210\u5f71\u54cd\u7684\u4ec5\u4ec5\u662f v \u7684\u5b50\u6811\u5927\u5c0f.\n *     gson : \u8fd9\u91cc\u7528\u5230\u4e86 gson\n *     minus_r : v \u7684\u5b50\u6811\u5927\u5c0f (\u672c\u51fd\u6570\u4e5f\u7528\u5230\u4e86)\n *     ans_SecondHeavySon[x] : \u5f53 v \u7684\u5b50\u6811\u5927\u5c0f\u4e3a x \u65f6\u7684\u7b54\u6848.\n *     \u672c\u51fd\u6570\u529f\u80fd(\u663e\u800c\u6613\u89c1) : \u6c42\u51fa ans_SecondHeavySon\n */\nvoid preDeal_RootsHeavySonSubtree(int u)\n{\n    if (u == root) minus_r = n - size[roots_SecondHeavySon];\n    if (gson(u)) preDeal_RootsHeavySonSubtree(gson(u));\n    while (size[root] - minus_r - size[u] <= (size[root] - minus_r) / 2) \n        ans_SecondHeavySon[minus_r--] = u;\n}\n\n// \u2193\u2193\u2193 \u65b0\u6811\u9884\u5904\u7406\n/**\n * \u5bf9\u4e8e\u4ee5\u6811\u7684\u4e00\u4e2a\u91cd\u5fc3\u4e3a root \u7684\u65b0\u6811(\u7ed3\u6784), \u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2 fa, \u6df1\u5ea6 \n * depth, \u5b50\u6811\u5927\u5c0f size, \u91cd\u513f\u5b50 heavySon \u548c \u5b50\u6811\u7684\u91cd\u5fc3 weightHeart\n */\nvoid preDfs(int u, int father)\n{\n    fa[u] = father;\n    depth[u] = depth[father] + 1;\n    size[u] = 1;\n    int maxSize = 0;\n    for (int i = head[u]; ~i; i = nxt[i]) {\n        if (to[i] != father) {\n            preDfs(to[i], u);\n            size[u] += size[to[i]];\n            if (size[to[i]] > maxSize) {\n                maxSize = size[to[i]];\n                heavySon[u] = to[i];\n            }\n        }\n    }\n    if (heavySon[u]) {\n        weightHeart[u] = weightHeart[heavySon[u]];\n        while (size[u] - size[weightHeart[u]] > size[u] / 2) \n            weightHeart[u] = fa[weightHeart[u]];\n    } else weightHeart[u] = u;\n}\n\n// \u2193\u2193\u2193 \u9884\u5904\u7406 belong_rootsHeavySon\nvoid set_tree(int u)\n{\n    belong_rootsHeavySon[u] = 1;\n    for (int i = head[u]; ~i; i = nxt[i]) {\n        if (fa[u] != to[i]) set_tree(to[i]);\n    }\n}\n\n// \u603b\u9884\u5904\u7406\u51fd\u6570\nvoid preDeal()\n{\n    root = find_a_WeightHeart(1, 0);        // \u627e\u91cd\u5fc3\n    memset(heavySon, 0, sizeof(heavySon));  // \u6e05\u9664\"\u627e\u91cd\u5fc3\"\u65f6\u9057\u7559\u7684\u65e0\u7528\u5e72\u6270\u6570\u636e\n    preDfs(root, 0);                        // \u65b0\u6811\u9884\u5904\u7406\n    roots_SecondHeavySon = 0;\n    for (int i = head[root]; ~i; i = nxt[i])\n        if (to[i] != heavySon[root] && size[to[i]] > size[roots_SecondHeavySon]) \n            roots_SecondHeavySon = to[i];   // \u9884\u5904\u7406\u6839\u8282\u70b9\u7684\u6b21\u91cd\u513f\u5b50 roots_SecondHeavySon\n    set_tree(heavySon[root]);               // \u9884\u5904\u7406 belong_rootsHeavySon\n    preDeal_RootsHeavySonSubtree(root);     // \u7b54\u6848\u9884\u5904\u7406 1\n    preDeal_notRootsHeavySonSubtree(root);  // \u7b54\u6848\u9884\u5904\u7406 2\n}\n\nint main()\n{\n    int T = read<int>();\n    while (T--) {\n        // \u2193\u2193\u2193 \u6e05\u9664\u6570\u636e\n        edges_cnt = 0;\n        memset(head, -1, sizeof(head));\n        memset(heavySon, 0, sizeof(heavySon));\n        memset(belong_rootsHeavySon, 0, sizeof(belong_rootsHeavySon));\n        n = read<int>();\n        for (int u, v, i = 1; i < n; i++) {\n            // \u2193\u2193\u2193 \u8bfb\u8fb9\n            u = read<int>();\n            v = read<int>();\n            // \u2193\u2193\u2193 \u52a0\u8fb9 (2 \u6761)\n            to[edges_cnt] = v;\n            nxt[edges_cnt] = head[u];\n            head[u] = edges_cnt;\n            edges_cnt++;\n            to[edges_cnt] = u;\n            nxt[edges_cnt] = head[v];\n            head[v] = edges_cnt;\n            edges_cnt++; \n        }\n        // \u2193\u2193\u2193 \u603b\u9884\u5904\u7406\n        preDeal();\n        // \u2193\u2193\u2193 \u5b9a\u4e49\u7b54\u6848\n        register long long ans = 0;\n        for (register int cuted = 0, u, v, t; cuted < n - 1; cuted++) {\n            // cuted : \u679a\u4e3e\u88ab\u5220\u7684\u8fb9\n            // u, v : \u88ab\u5220\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\n            // t : \u4e34\u65f6\u8bb0\u5f55\u7b54\u6848\n            // \u2193\u2193\u2193 \u83b7\u5f97 u, v, \u5e76\u4f7f u \u4e3a v \u7684\u7236\u4eb2\n            u = to[cuted << 1]; v = to[cuted << 1 | 1];\n            if (depth[u] > depth[v]) swap(u, v); \n            // \u2193\u2193\u2193 \u5904\u7406 v \u6240\u5728\u7684\u88ab\u5206\u88c2\u7684\u5b50\u6811\n            ans += weightHeart[v];\n            if (fa[weightHeart[v]] && size[heavySon[fa[weightHeart[v]]]] <= size[v] / 2) \n                ans += fa[weightHeart[v]];\n            // \u2193\u2193\u2193 \u5904\u7406 u \u6240\u5728\u7684\u88ab\u5206\u88c2\u7684\u5b50\u6811\n            if (belong_rootsHeavySon[v]) {\n                // \u2193\u2193\u2193 v \u5728\u6839\u8282\u70b9\u91cd\u513f\u5b50\u7684\u5b50\u6811\u4e0a\n                if (size[heavySon[root]] - size[v] < size[roots_SecondHeavySon]) {\n                    // \u2193\u2193\u2193 u \u6240\u5728\u7684\u88ab\u5206\u88c2\u7684\u5b50\u6811\u7684\u91cd\u513f\u5b50\u4e3a\u539f\u6811\u6839\u8282\u70b9\u7684\u6b21\u91cd\u513f\u5b50\n                    t = ans_SecondHeavySon[size[v]];\n                    ans += t;\n                    if (fa[t] && size[gson(fa[t])] <= (size[root] - size[v]) / 2) ans += fa[t];\n                    // \u8fd9\u91cc\u4e5f\u7528\u4e86 gson\n                } else {\n                    // \u2193\u2193\u2193 u \u6240\u5728\u7684\u88ab\u5206\u88c2\u7684\u5b50\u6811\u7684\u91cd\u513f\u5b50\u4e3a\u539f\u6811\u6839\u8282\u70b9\u91cd\u513f\u5b50\n                    ans += root;\n                }\n            } else {\n                // \u2193\u2193\u2193 v \u4e0d\u5728\u6839\u8282\u70b9\u91cd\u513f\u5b50\u7684\u5b50\u6811\u4e0a (\u6700\u666e\u904d\u7684\u60c5\u51b5)\n                t = ans_HeavySon[size[v]];\n                ans += t;\n                if (fa[t] && size[heavySon[fa[t]]] <= (size[root] - size[v]) / 2) ans += fa[t];\n                // \u4e0e\u7b2c 181 \u884c\u7684\u4e0d\u540c : \u8fd9\u91cc\u7528\u7684\u4e0d\u662f gson, \u800c\u662f heavySon\n            }\n        }\n        printf(\"%lld\\n\", ans); // \u8f93\u51fa ans\n    }\n    return 0;\n}\n```",
        "postTime": 1576313952,
        "uid": 63720,
        "name": "brealid",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "[\u66f4\u4f73\u9605\u8bfb\u4f53\u9a8c](http://endsah.tk/blog/CSP2019-S-Solution/)\n\n\u4e0b\u9762\u7528 $son(x)$ \u8868\u793a $x$ \u7684\u91cd\u513f\u5b50\uff0c$s _x$ \u8868\u793a $x$ \u5b50\u6811\u5927\u5c0f\u3002\u7279\u522b\u7684\uff0c\u5bf9\u53f6\u5b50\u5b9a\u4e49\u5176 $son(x) = 0$\uff0c\u4e14 $s _0 = 0$\uff0c\u51cf\u5c11\u7279\u5224\u3002\n\n\u8003\u8651\u5230\u4e09\u4e2a\u91cd\u8981\u7ed3\u8bba\uff1a\n\n1. \u4e00\u68f5\u6811\u4efb\u610f\u5b9a\u6839\uff0c\u91cd\u5fc3\u4e00\u5b9a\u5728\u6839\u8282\u70b9\u6240\u5728\u7684\u91cd\u94fe\u4e0a\u3002\n2. \u4e24\u4e2a\u91cd\u5fc3\u4e00\u5b9a\u76f8\u90bb\u3002\n3. \u70b9 $u$ \u6ee1\u8db3 $s _u \\ge \\lceil \\frac n 2 \\rceil, s _{son(u)} \\le \\lfloor \\frac n 2 \\rfloor$\uff0c\u662f\u5176\u4e3a\u91cd\u5fc3\u7684\u5145\u8981\u6761\u4ef6\u3002\n\n\u7b2c\u4e00\u4e2a\u7ed3\u8bba\u8981\u60f3\u5230\u4e5f\u4e0d\u96be\uff0c\u968f\u624b\u753b\u4e00\u4e0b\u91cd\u5256\u7684\u56fe\u4f1a\u53d1\u73b0\u8fd9\u770b\u4e0a\u53bb\u5c31\u5f88\u5bf9\u3002\u7b2c\u4e8c\u4e2a\u662f\u5e38\u8bc6\u3002\u7b2c\u4e09\u4e2a\u5b9e\u9645\u4e0a\u5c31\u662f\u300c\u5176\u5206\u88c2\u51fa\u6765\u7684\u6811\u5747\u4e0d\u8d85\u8fc7 $\\lfloor \\frac n 2 \\rfloor$\u300d\u7684\u53e6\u4e00\u8bf4\u6cd5\u3002\n\n\u7531\u4e8e\u7b2c\u4e8c\u4e2a\u7684\u5b58\u5728\uff0c\u53ea\u9700\u8981\u6c42\u51fa\u6df1\u5ea6\u8f83\u6df1\u7684\u91cd\u5fc3\uff0c$O(1)$ \u5730\u68c0\u67e5\u4e00\u4e0b\u4ed6\u7684\u7236\u4eb2\u5373\u53ef\u7edf\u8ba1\u597d\u7b54\u6848\u3002\n\n\u628a\u95ee\u9898\u7684\u6c42\u89e3\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u3002\u540c\u65f6\u4e3a\u4e86\u7b80\u5316\u8ba8\u8bba\uff0c\u9ed8\u8ba4\u4ee5\u539f\u6811\u7684\u67d0\u4e2a\u91cd\u5fc3\u4e3a\u6839\u3002\n\n### \u5b50\u6811\u5185\n\n\u628a\u6811\u91cd\u5256\u4e00\u4e0b\u3002\n\n\u9996\u5148\uff0c\u53f6\u5b50\u7684\u91cd\u5fc3\u80af\u5b9a\u662f\u4ed6\u81ea\u5df1\uff1b\u4ece\u91cd\u94fe\u5f80\u4e0a\u722c\uff0c\u5bb9\u6613\u77e5\u9053\u5176\u91cd\u5fc3\u4e5f\u4f1a\u968f\u7740\u8282\u70b9\u7684\u4e0a\u79fb\u800c\u4e0a\u79fb\u3002\u66b4\u529b\u7684\u628a\u91cd\u513f\u5b50\u7684\u91cd\u5fc3\u5411\u4e0a\u8c03\u6574\u5373\u53ef\uff0c\u603b\u590d\u6742\u5ea6 $O(n)$\uff08\u56e0\u4e3a\u6bcf\u4e2a\u91cd\u5fc3\u90fd\u662f\u5728\u5bf9\u5e94\u7684\u91cd\u94fe\u4e0a\u722c\uff0c\u8def\u5f84\u4e0d\u4ea4\uff09\u3002\n\n### \u5b50\u6811\u5916\n\n\u771f\u6b63\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e00\u90e8\u5206\u3002\n\n\u4ecd\u7136\u8003\u8651\u5230\u300c\u91cd\u5fc3\u5728\u6839\u8282\u70b9\u7684\u91cd\u94fe\u4e0a\u300d\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u663e\u7136\u5220\u9664\u8f7b\u513f\u5b50\u5b50\u6811\u5185\u7684\u90e8\u5206\u70b9\u4e0d\u4f1a\u4f7f\u6839\u8282\u70b9\u7684\u91cd\u94fe\u53d8\u5316\u3002\u90a3\u4e48\u9884\u5904\u7406\u51fa $g(x)$ \u8868\u793a\u82e5\u6574\u4e2a\u6811\u5220\u6389\u4e86 $x$ \u5927\u5c0f\u7684\u5b50\u6811\u4e4b\u540e\uff0c\u91cd\u5fc3\u4f1a\u5728\u8fd9\u4e2a\u91cd\u94fe\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff1b\u5bb9\u6613\u77e5\u9053\u968f\u7740 $x$ \u7684\u51cf\u5c0f\uff0c\u91cd\u5fc3\u7684\u4f4d\u7f6e\u4f1a\u9010\u6e10\u4e0a\u79fb\uff0c\u76f4\u63a5 $O(n)$ \u5730\u5904\u7406\u51fa $g$ \u540e\u904d\u5386\u6240\u6709\u8f7b\u513f\u5b50\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u518d\u8003\u8651\u5220\u53bb\u91cd\u513f\u5b50\u5b50\u6811\u5185\u67d0\u4e00\u90e8\u5206\u3002\u7531\u4e8e**\u4ee5\u539f\u6811\u91cd\u5fc3\u4e3a\u6839**\uff0c\u6240\u4ee5\u5982\u679c\u5220\u6389 $x$ \u5927\u5c0f\u7684\u5b50\u6811\u4e4b\u540e\u91cd\u513f\u5b50\u4ecd\u7136\u662f\u91cd\u513f\u5b50\uff0c\u90a3\u4e48\u91cd\u5fc3\u80af\u5b9a\u662f\u6839\uff08\u4e0d\u53ef\u80fd\u5220\u6389\u4e00\u90e8\u5206\u4e4b\u540e\u91cd\u5fc3\u8fd8\u5411\u8be5\u6811\u5185\u90e8\u79fb\u52a8\uff09\u3002\u82e5\u5220\u6389\u4e4b\u540e\u539f\u672c\u7684\u6b21\u91cd\u513f\u5b50\u53d6\u800c\u4ee3\u4e4b\uff0c\u90a3\u4e48\u4f1a\u53d8\u6210\u548c\u4e0a\u9762\u4e00\u6837\u7684\u95ee\u9898\uff0c\u540c\u6837\u5bf9\u6b21\u91cd\u513f\u5b50\u9884\u5904\u7406\u51fa $g$ \u6c42\u7b54\u6848\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n)$\uff0c\u6ce8\u610f\u8981\u65f6\u523b\u5224\u65ad\u53e6\u4e00\u4e2a\u91cd\u5fc3\u7684\u5b58\u5728\u3002\n\n### \u53e6\u4e00\u79cd\u601d\u8def\n\n\u4ee5\u4e0a\u601d\u8def\u90fd\u662f\u57fa\u4e8e\u300c\u8003\u8651\u5220\u6389\u4e00\u4e2a\u5b50\u6811\uff0c\u91cd\u5fc3\u4f1a\u5982\u4f55\u53d8\u5316\u300d\u7684\uff1b\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u8003\u8651\u300c\u6709\u591a\u5c11\u4e2a\u5b50\u6811\u6ee1\u8db3\u5220\u6389\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u6811\u4ee5\u6211\u4e3a\u6839\u300d\u3002\n\n\u540c\u6837\u4ee5\u91cd\u5fc3\u4e3a\u6839\u3002\u8bbe\u5220\u53bb\u7684\u5b50\u6811\u5927\u5c0f\u4e3a $S$\uff0c\u8003\u8651\u4e00\u4e2a\u975e\u6839\u8282\u70b9 $u$ \u4f5c\u4e3a\u91cd\u5fc3\u65f6\u662f\u4ec0\u4e48\u60c5\u51b5\uff1a\n\n$$\n\\begin{aligned}\ns _u \\ge \\lceil \\frac {n - S} 2 \\rceil, s _{son(u)} \\le \\lfloor \\frac {n - S} 2 \\rfloor \\\\\n\\Rightarrow n - 2 s _u \\le S \\le n - 2 s _{son(u)}\n\\end{aligned}\n$$\n\n\u5b9e\u9645\u4e0a\u6f0f\u4e86\u4e00\u4e2a\u989d\u5916\u6761\u4ef6\uff1a\u5220\u9664\u7684\u70b9\u4e0d\u80fd\u4f4d\u4e8e\u5176\u5b50\u6811\u5185\u3002\u6240\u4ee5\u5148\u505a\u4e00\u904d\u5168\u5c40\u7684\uff0c\u7edf\u8ba1\u51fa\u6709\u591a\u5c11\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684 $S$\uff1b\u518d DFS \u4e00\u904d\uff0c\u8bbf\u95ee\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\u8bb0\u5f55\u4e00\u4e2a\u503c\uff0c\u904d\u5386\u5b8c\u5b50\u6811\u4e4b\u540e\u518d\u7528\u73b0\u5728\u503c\u51cf\u53bb\u4e4b\u524d\u7684\u503c\uff0c\u5373\u53ef\u5f97\u5230\u5b50\u6811\u5185\u7684\u5f71\u54cd\uff0c\u7528\u5168\u5c40\u503c\u51cf\u53bb\u5373\u53ef\u3002\n\n\u518d\u8003\u8651\u6839\u3002\u8fd9\u91cc\u7684\u4e0d\u540c\u662f\u5220\u53bb\u91cd\u513f\u5b50\u7684\u90e8\u5206\u5b50\u6811\u65f6\u91cd\u513f\u5b50\u53ef\u80fd\u53d8\u5316\uff0c\u6240\u4ee5\u5206\u91cd\u513f\u5b50\u548c\u8f7b\u513f\u5b50\u6c42\u89e3\u5373\u53ef\u3002\n\n\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u590d\u6742\u5ea6 $O(n \\log n)$\u3002",
        "postTime": 1591706586,
        "uid": 91252,
        "name": "EndSaH",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "\u534a\u5e74\u540e \uff0c \u6211\u7ec8\u4e8eAC\u4e86Day2 T3 \u3002\uff08~~\u6211\u592a\u5f31\u4e86~~\uff09\n\n\u4e3a\u4e86\u7eaa\u5ff5\u4e00\u4e0b\u800c\u5199\u4e86\u8fd9\u7bc7\u9898\u89e3 \uff08\u8bf4\u4e0d\u5b9a\u662f\u6ca1\u770b\u61c2\u522b\u4eba\u7684\u9898\u89e3\uff08~~\u4e22\u4eba~~\uff09\uff09\u3002 \n\n\u8bf7\u622a\u53d6\u81ea\u5df1\u672a\u8003\u8651\u5230\u7684\u70b9\u8fdb\u884c\u9605\u8bfb \u4ee5\u51cf\u5c11\u65f6\u95f4 \u3002\n\n\u4e5f\u53ef\u4ee5\u76f4\u63a5\u9605\u8bfb\u7ec8\u6781\u4ee3\u7801\u6ce8\u91ca\u518d\u56de\u5934\u770b\u5206\u6790 \u3002\n\n~~\u82e5\u6709\u9519 \uff0c\u8bf7dalao\u7ea0\u6b63 \u3002~~\n\n# \u9898\u610f\n\n\u597d\u5427\u6211\u4eec\u5f00\u59cb \u3002 \n\n\u7b80\u8ff0\u4e00\u4e0b[\u9898\u610f](https://www.luogu.com.cn/problem/P5666) \u3002 \u4f9d\u6b21\u5220\u53bb\u6bcf\u4e00\u6761\u8fb9 \uff0c \u5206\u522b\u6c42\u51fa\u4e24\u68f5\u7684\u91cd\u5fc3 \u3002 \u7b97\u51fa\u6240\u6709\u91cd\u5fc3\u7684\u70b9\u503c\u4e4b\u548c \u3002\uff08\u5c45\u7136\u90fd\u770b\u9898\u89e3\u4e86\u5e94\u8be5\u9898\u76ee\u90fd\u4e86\u89e3\u5dee\u4e0d\u591a\u4e86 \uff0c\u5728\u6b64\u4e0d\u591a\u8bf4\uff09\n\n# \u5206\u6790\n\n\u5728\u770b\u4e66\u65f6 \uff0c \u770b\u5230\u4ee5\u91cd\u5fc3\u4e3a\u6839\u7ed3\u70b9\u7a81\u7136\u5c31\u60f3\u8d77\u4e86\u8fd9\u9898\uff08\u6bd5\u7adf\u53eb\u6811\u7684\u91cd\u5fc3\uff09 \uff0c \u7136\u540e\u5c31\u60f3\u51fa\u6765\u89e3\u6cd5 \u3002~~(\u6bd4\u8d5b\u65f6\u500d\u589e\u90fd\u4e0d\u4f1a \uff0c \u8fd9\u9898\u771f\u662f\u4e3a\u96be\u6211 \uff0c \u76f4\u63a5\u72060)~~\n\n\u5982\u679c\u6211\u7ed9\u6807\u7b7e \uff0c \u90a3\u6211\u4f1a\u7ed9**\u6811\u5f62$dp$ $+$ \u500d\u589e $+$ \u6811\u578b\u7ed3\u6784** \u3002 \n\n\u601d\u8def\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u53bb\u627e**\u6811\u7684\u91cd\u5fc3** \uff08\u8fd9\u4e00\u6b65\u662f\u4e3a\u4e86\u7b80\u5316\u601d\u8def\uff09 \uff0c \u6700\u65e9\u6211\u5c1d\u8bd5\u8fc7\u4e0d\u53bb \u3002 \n\u6c42 \uff0c \u7136\u540e\u4ee3\u7801\u6253\u4e2a\u534a\u6b7b\u53d1\u4e0b\u662f\u9519\u7684 \u3002 \n\u6765\u5207\u7d2b\u9898\u8fd9\u70b9\u4e1c\u897f\u771f\u7684\u662f\u592a\u597d\u6253\u4e86 \uff0c\u9644\u4e0a\u4ee3\u7801\uff1a\n```\nvoid findzx(int a,int fa){//\u627e\u91cd\u5fc3 \n\tdes[l][a]=1;//\u81ea\u8eab\u7ed3\u70b9\u8bb0\u5f55 \n\tint b=0;\n\tfor(int i=ves[l][a];i;i=st[i].next){\n\t\tif(st[i].v!=fa){\n\t\tfindzx(st[i].v,a);//\u9012\u5f52\u904d\u5386 \n\t\tdes[l][a]+=des[l][st[i].v];//\u7edf\u8ba1\u7ed3\u70b9 \n\t\tif(b==0&&des[l][st[i].v]*2>n)b=1;//\u8be5\u70b9\u5b50\u6811\u7684\u7ed3\u70b9\u8fc7\u534a \uff0c\u7b5b\u53bb\u3002 \n\t\t}\n\t}\n\tif(b==0&&des[l][a]*2>=n){\n    \tif(c==0||c==a)c=a;//\u5176\u4e2d\u4e00\u4e2a\u91cd\u5fc3\uff1b \n\t\telse d=a;//\u82e5\u6709\u4e24\u4e2a\u5219\u5728\u8bb0\u5f55\u4e00\u4e0b \n\t}\n\treturn;\n}\n```\n\u7b2c\u4e8c\u6b65\u5bf9\u8be5\u6811\u8fdb\u884c**\u521d\u59cb\u5316** \uff0c\u65e2\u7136\u6362\u6839\u4e86\u5f53\u7136\u8981\u91cd\u65b0\u904d\u5386 \u3002 \uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09\n```\nvoid init(int u,int fa){\n\tdes[l][u]=1;\n\tfor(int i=ves[l][u];i;i=st[i].next){\n\t\tif(st[i].v!=fa){\n\t\tinit(st[i].v,u);\n\t\tdes[l][u]+=des[l][st[i].v];}//\u6c42\u91cd\u5fc3\u5f53\u7136\u662f\u6c42\u7ed3\u70b9\u4e86\n\t}\n\treturn;\n}\n```\n\u7ed3\u675f\u524d\u4e24\u6b65 \uff0c \u6211\u4eec\u5f00\u59cb\u8fdb\u5165\u7b54\u6848\u7edf\u8ba1\u9636\u6bb5 \u3002 \n\n**\u7b2c\u4e00\u6b21**\u6211\u4eec\u4f9d\u6b21\u904d\u5386\u5404\u70b9 \uff0c \u8ba1\u7b97\u65ad\u5f00\u5e26\u70b9\u4e0e\u7236\u5b50\u7ed3\u70b9\u6240\u8fde\u8fb9 \uff0c\u8be5\u70b9\u6240\u5728\u6811\u7684\u91cd\u5fc3 \u3002\n\n\u600e\u4e48\u6c42\u5462\uff1f\uff1f\uff1f\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u91cd\u5fc3\u4e00\u5b9a\u4f1a\u5728 **\u7ed3\u70b9\u6570$>$\u603b\u6570\u4e00\u534a\u7684\u5b50\u5b50\u6811\u4e2d** \u3002 \n\u8fd9\u4e2a\u53ef\u4ee5\u9006\u63a8\u5982\u679c\u5b50\u5b50\u6811\u7ed3\u70b9\u4e2d\u6ca1\u6709\u8fbe\u5230\u5b50\u6811\u7684\u4e00\u822c \uff0c\u90a3\u4e48\u91cd\u5fc3\u4e0d\u53ef\u80fd\u5728\u8be5\u5b50\u5b50\u6811\u4e2d \u3002 \n\n\u7b2c\u4e8c \uff0c\u6211\u4eec\u53d1\u73b0**\u8be5\u5b50\u6811\u7684\u91cd\u5fc3\u4e00\u5b9a\u662f\uff08\u8be5\u70b9\u7684\uff08\u513f\u5b50\u7ed3\u70b9\uff08\u6240\u5728\u5b50\u6811\u7684\u91cd\u5fc3\uff09\uff09\uff09\u7684\u7956\u5148** \u3002\uff08\u8bf7\u8bfb\u8005\u8ba4\u771f\u9605\u8bfb\u8fd9\u7ed5\u53e3\u7684\u8bdd---\u62ec\u53f7\u8f85\u52a9\u9605\u8bfb\uff09\u8fd9\u4f9d\u7136\u53ef\u4ee5\u9006\u63a8 \u3002 \n\u56e0\u6b64\u5c31\u6709\u4e86\u4e0b\u9762\u8fd9\u4e2a\u4ee3\u7801\uff1a\n```\nint check(int a,int b){ //check\u5224\u65ad\u662f\u5426\u4e3a\u91cd\u5fc3\u51fd\u6570 \n\tif(des[l][a]*2>b)return 1;//\u4e00\u4e2a\u91cd\u5fc3\u8fd4\u56de1\uff1b \n\tif(des[l][a]*2==b)return 2;//\u4e24\u4e2a\u91cd\u5fc3\u8fd4\u56de\u800c \n\t/*\u5176\u7ed3\u70b9\u6570\u4e3a\u5b50\u6811\u7684\u4e00\u534a\uff0c\u5176\u7236\u4eb2\u7684\u6700\u5927\u5b50\u6811\u7684\u7ed3\u70b9\u6570\u4e00\u5b9a\u4e3a\u8be5\u5b50\u6811\u7684\u4e00\u534a*/\n\t//\u6545\u7236\u7ed3\u70b9\u4e3a\u91cd\u5fc3 \n\treturn 0;\n}\nvoid dfs(int a,int fa){\n\tfor(int i=ves[l][a];i;i=st[i].next){//\u904d\u5386\u5b50\u8282\u70b9 \n\t\tif(st[i].v!=fa){\n\t\t  \tdfs(st[i].v,a);//\u9012\u5f52\u904d\u5386\u5168\u56fe \n\t\t\tif(des[l][st[i].v]*2>=des[l][a]){//\u53ef\u80fd\u542b\u6709\u91cd\u5fc3\u7684\u5b50\u6811\n\t\t\t\tzx[l][a]=zx[l][st[i].v];\n\t\t\t   while(1){\n\t\t\t        if(check(zx[l][a],des[l][a])==1){//\u4e00\u4e2a\u7ed3\u70b9\u7684\u7edf\u8ba1 \n\t\t\t           ans+=zx[l][a];\n\t\t\t\t\t   break;\n\t\t\t\t\t}\n\t\t\t\t\tif(check(zx[l][a],des[l][a])==2){//\u4e24\u4e2a\u7ed3\u70b9\u7edf\u8ba1 \n\t\t\t\t\t\tans+=zx[l][a];\n\t\t\t\t\t}\n\t\t\t   \t    zx[l][a]=f[l][zx[l][a]];//\u627e\u5176\u7236\u7ed3\u70b9\u662f\u5426\u4e3a\u91cd\u5fc3 \n\t\t\t   }\t\n\t\t\t}\n\t\t}\n\t}\n\tif(zx[l][a]==0){\n\t   ans+=a;\n\t   zx[l][a]=a;}//\u8be5\u6811\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7279\u6b8a\u8f6c\u79fb \n\treturn; \n}\n```\n**\u6b64\u6b65\u4f1a\u591a\u8ba1\u7b97\u4e00\u4e2a\u6839\u7ed3\u70b9\u8981\u5220\u53bb**\n\n\n\u5230\u6b64\u6211\u4eec\u5df2\u7ecf\u7edf\u8ba1\u4e86\u4e00\u534a \uff0c \u63a5\u4e0b\u6765\u4ee5\u540c\u6837\u7684\u601d\u8def\u7edf\u8ba1\u53e6\u4e00\u4fa7\u7684\u5b50\u6811 \u3002\n\n\u7531\u4e8e\u4e4b\u524d\u6211\u4eec\u4ee5\u91cd\u5fc3\u4e3a\u6839\u7ed3\u70b9 \uff0c \u56e0\u6b64\u8fd9\u4e2a\u91cd\u5fc3\u5bf9\u4e8e\u904d\u5386\u5230\u7684\u8be5\u70b9\u6765\u8bf4 \uff0c\u4e00\u5b9a\u5728\u6839\u7ed3\u70b9\u7684\u53e6\u4e00\u68f5\u5b50\u6811\u4e0a \uff0c\u6700\u591a\u4e0a\u5347\u5230\u6839\u7ed3\u70b9\u4e0d\u4f1a\u518d\u5f80\u4e0b\u8d70\uff08\u9009\u53d6\u91cd\u5fc3\u7684\u4f18\u52bf\u4f53\u73b0\u4e86\uff09\u3002\n\n\u8be6\u7ec6\u5206\u6790\u89c1\u4ee3\u7801\uff1a\n```\nint check2(int a){\n\tif(zx2[l][a]==c)return 3;//\u6839\u8282\u70b9\u7279\u6b8a\u8f6c\u79fb \n\tif(des[l][zx2[l][a]]*2>n-des[l][a])return 1;\n\t//\u4f9d\u7167\u7b2c\u4e00\u6b21\uff0c\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u8f6c\u79fb \n\tif(des[l][zx2[l][a]]*2==n-des[l][a])return 2;\n\t//\u4e24\u4e2a\u7ed3\u70b9\u8f6c\u79fb \n\treturn 0;//\u4e0d\u662f\u91cd\u5fc3\u8fd4\u56de0 \n}\nvoid dfs2(int a,int fa){\n\tzx2[l][a]=zx2[l][fa];//\u521d\u59cb\u5316\u91cd\u5fc3\u7ed3\u70b9 \n\t//\u56e0\u4e3a\u518d\u53e6\u4e00\u68f5\u5b50\u6811\u7279\u6b8a\u8f6c\u79fb \n\twhile(1){\n\t\tif(check2(a)==1){\n\t\t    ans+=zx2[l][a];//\u4e00\u4e2a\u7ed3\u70b9\u76f4\u63a5\u8f6c\u79fb \n\t        break;\n\t\t}\n\t\tif(check2(a)==2){\n\t\t   \tans+=zx2[l][a]+f[l][zx2[l][a]];\n\t       \tbreak;//\u4e0e\u7b2c\u4e00\u6b21\u4e0d\u540c\uff0c\u4e24\u4e2a\u7ed3\u70b9\u76f4\u63a5\u7edf\u8ba1 \n\t\t}\n\t\tif(check2(a)==3){\n\t\t\tans+=c+d;//\u4e3a\u9632\u6709\u4e24\u4e2a\u91cd\u5fc3\u7684\u7279\u6b8a\u8f6c\u79fb \n\t\t\tbreak; \n\t\t}\n\t\tzx2[l][a]=f[l][zx2[l][a]];//\u5f80\u4e0a\u7ee7\u7eed\u5bfb\u627e\u91cd\u5fc3 \n\t}\n\tfor(int i=ves[l][a];i;i=st[i].next){\n\t\tif(st[i].v!=fa)dfs2(st[i].v,a);//\u9012\u5f52\u5f80\u4e0b \n\t} \n\t//\u56e0\u4e3a\u7b2c\u4e8c\u6b21\u662f\u5728\u53e6\u4e00\u68f5\u5b50\u6811\uff0c\u6240\u4ee5\u4ece\u4e0a\u5f80\u4e0b\u627e \n}\n```\n\u5bf9\u4e8e\u91cd\u5fc3\u7684\u5f00\u59cb\u7ed3\u70b9 \uff0c\u5404\u5b50\u6811\u6709\u4e0d\u540c\u4e4b\u5904 \u3002\n\n\u5bf9\u4e8e\u7ed3\u70b9\u6700\u591a\u7684\u5b50\u6811 \uff0c\u5176\u53e6\u4e00\u4fa7\u7684\u91cd\u5fc3\u5728\u7b2c\u4e8c\u591a\u7ed3\u70b9\u7684\u5b50\u6811\u4e0a \u3002\u5176\u4f59\u7684\u5b50\u6811\u53e6\u4e00\u4fa7\u7684\u91cd\u5fc3\u5728\u6700\u591a\u7ed3\u70b9\u7684\u5b50\u6811\u4e0a \u3002 \n\u56e0\u6b64\u6709\u4e86\u5982\u4e0b\u7684\u9884\u5904\u7406\uff1a\n\n```\nint fir=-1,sec=-1,fir1=0,sec1=0;//fir\u6700\u5927\u7684\u5b50\u6811\uff0csec\u6b21\u5927\u5b50\u6811 \n\t\tfor(int i=ves[l][c];i;i=st[i].next){\n\t\t\tif(des[l][st[i].v]>fir){\n\t\t\t\tsec=fir;sec1=fir1;\n\t\t\t\tfir=des[l][st[i].v];\n\t\t\t\tfir1=st[i].v;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(des[l][st[i].v]>sec){\n\t\t\t\tsec=des[l][st[i].v];\n\t\t\t\tsec1=st[i].v;}\n\t\t\t}//\u5e38\u89c4\u6bd4\u8f83 \n\t\t}\n\t\tfor(int i=ves[l][c];i;i=st[i].next){\n\t\t\tif(st[i].v!=fir1) zx2[l][c]=zx[l][fir1];//\u4e0d\u4e3a\u6700\u5927\u5b50\u6811\u8f6c\u79fb \n\t\t\telse zx2[l][c]=zx[l][sec1];//\u6700\u5927\u5b50\u6811\u8f6c\u79fb \n\t\t\tdfs2(st[i].v,c);//\u8fdb\u5165\u7edf\u8ba1 \n\t\t} \n```\n\u5230\u6b64\u4f9d\u7167\u601d\u8def\u4f60\u5c31\u53ef\u4ee5\u5199\u51fa**\u90e8\u5206**\u5206\u7684\u4ee3\u7801\u4e86 \u3002\n\n\u4ec0\u4e48\uff1f\u6211\u8bd5\u4e86$75$\u5206 \uff01\uff01\uff01 $T$ \u98de\u4e86$\uff01\uff01\uff01 $\n\n\u4f60\u6ca1\u53d1\u73b0\u6211\u6bd4\u4e4b\u524d\u5c11\u4e86\u500d\u589e\u5417\uff01\uff01\uff01\n\n\u597d \uff0c \u6211\u4eec\u6765\u8bb2\u4e00\u8bb2\u3002\n```\nzx[l][a]=f[l][zx[l][a]];//\u627e\u5176\u7236\u7ed3\u70b9\u662f\u5426\u4e3a\u91cd\u5fc3 \n```\n\u5bf9\u4e8e\u8fd9\u4e00\u6b65\u4f60\u4e0d\u89c9\u5f97\u5f88\u50bb\u5417\uff1f\u4e3a\u4ec0\u4e48\u8981\u4e00\u6b65\u4e00\u6b65\u627e\uff01\u6162\u7684\u4e0d\u884c \uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u6811\u4e0a\u500d\u589e\u4f18\u5316 \u3002\n\n\u4f55\u4e3a\u500d\u589e\u5c31\u662f\u6210\u500d\u589e\u52a0\u5566\uff01\uff01\n\n\u5982\u679c\u4f60\u6ca1\u5199\u8fc7\u500d\u589e\uff08\u53ea\u662f\u542c\u8fc7\uff08\u6ca1\u542c\u8fc7\u73b0\u5728\u4e5f\u542c\u8fc7\u4e86\uff09\uff09 \uff0c \u53bb\u5199\u4e0b[\u500d\u589eLCA](https://www.luogu.com.cn/problem/P3379)\uff08\u6211\u5c31\u53ea\u5199\u8fc7\u8fd9\u4e2a\u500d\u589e\u4e86\uff09 \u3002\n\n\u6216\u8005\u770b\u770b\u5982\u4e0b\u4ee3\u7801\uff1a\n```\nvoid init(int u,int fa){\n\tf[l][u][0]=fa;//\u521d\u59cb\u503c \n\tdes[l][u]=1;\n\tfor(int i=1;i<=20;i++){\n\t\tf[l][u][i]=f[l][f[l][u][i-1]][i-1];//\u5e38\u89c1\u500d\u589e\u7edf\u8ba1\u7956\u5148 \n\t}\n\tfor(int i=ves[l][u];i;i=st[i].next){\n\t\tif(st[i].v!=fa){\n\t\tinit(st[i].v,u);\n\t\tdes[l][u]+=des[l][st[i].v];}//\u91cd\u65b0\u7edf\u8ba1\u7ed3\u70b9 \n\t}\n\treturn;\n}\n```\n\u7edf\u8ba1\u7b54\u6848\u4ee5\u7b2c\u4e00\u6b21\u4e3a\u4f8b\uff08\u7b2c\u4e8c\u6b21\u89c1\u7ec8\u6781\u4ee3\u7801\uff09\n```\nvoid dfs(int a,int fa){\n\tfor(int i=ves[l][a];i;i=st[i].next){//\u904d\u5386\u5b50\u8282\u70b9 \n\t\tif(st[i].v!=fa){\n\t\t  \tdfs(st[i].v,a);//\u9012\u5f52\u904d\u5386\u5168\u56fe \n\t\t\tif(des[l][st[i].v]*2>=des[l][a]){//\u53ef\u80fd\u542b\u6709\u91cd\u5fc3\u7684\u5b50\u6811 \n\t\t\t\tzx[l][a]=zx[l][st[i].v];\n\t\t\t\tif(check(zx[l][a],des[l][a])==0){\t\t\t\t    \n\t\t\t\t\tfor(int j=20;j>=0;j--){\n\t\t\t\t    \tif(check(f[l][zx[l][a]][j],des[l][a])||f[l][zx[l][a]][j]==0)continue;\n\t\t\t\t    \tzx[l][a]=f[l][zx[l][a]][j];//\u5e38\u89c1\u500d\u589e\u5f80\u4e0a\u8df3 \n\t\t\t\t    \t//\u4e00\u76f4\u5230\u5176\u7236\u7ed3\u70b9\u4e3a\u91cd\u5fc3 \n\t\t\t\t\t}\n\t\t\t\t\tzx[l][a]=f[l][zx[l][a]][0];//\u627e\u5230\u91cd\u5fc3 \n\t\t\t\t}\n\t\t\t\tans+=zx[l][a];//\u53ea\u53ef\u80fd\u8fd4\u56de1\u62162\uff0c\u56e0\u4e3a\u8be5\u70b9\u4e3a\u91cd\u5fc3 \n\t\t\t\tif(check(zx[l][a],des[l][a])==2){\n\t\t\t\t\tzx[l][a]=f[l][zx[l][a]][0];//\u4e24\u4e2a\u91cd\u5fc3\u8f6c\u79fb \n\t\t\t    \tans+=zx[l][a];\n\t\t\t\t}   \t\n\t\t\t}\n\t\t}\n\t}\n\tif(zx[l][a]==0){\n\t   ans+=a;\n\t   zx[l][a]=a;}\n\treturn; \n}\n```\n## \u7ec8\u6781\u4ee3\u7801\n\u672c\u4eba\u6ca1\u6c34\u5e73 \uff0c\u6240\u4ee5\u6bd4\u8f83\u66b4\u529b \uff0c\u4ee3\u7801\u8f83\u957f \u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801\uff08\u4e0a\u4e0b\u6ce8\u91ca\u53ef\u80fd\u4e0d\u7edf\u4e00\uff09 \uff0c\u8bfb\u8005\u4ed4\u7ec6\u98df\u7528\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint k,ves[6][300005],des[6][300005],zx[6][300005],zx2[6][300003],f[6][300005][25],typ=0;\nlong long n,q,l=0,ans=0,c=0,d=0;\nstruct ss{\n\tint u,v,next;\n}st[300003*2*5];//\u5b58\u8fb9\u7ed3\u6784\u4f53 \nvoid cc(int a,int b,int c){//\u94fe\u5f0f\u524d\u5411\u5fc3--\u5efa\u8fb9\u51fd\u6570 \n\tk++;\n\tst[k].u=a;\n\tst[k].v=b;\n\tst[k].next=ves[c][a];\n\tves[c][a]=k;\n}\nvoid findzx(int a,int fa){//\u627e\u91cd\u5fc3 \n\tdes[l][a]=1;//\u81ea\u8eab\u7ed3\u70b9\u8bb0\u5f55 \n\tint b=0;\n\tfor(int i=ves[l][a];i;i=st[i].next){\n\t\tif(st[i].v!=fa){\n\t\tfindzx(st[i].v,a);//\u9012\u5f52\u904d\u5386 \n\t\tdes[l][a]+=des[l][st[i].v];//\u7edf\u8ba1\u7ed3\u70b9 \n\t\tif(b==0&&des[l][st[i].v]*2>n)b=1;//\u8be5\u70b9\u5b50\u6811\u7684\u7ed3\u70b9\u8fc7\u534a \uff0c\u7b5b\u53bb\u3002 \n\t\t}\n\t}\n\tif(b==0&&des[l][a]*2>=n){\n    \tif(c==0||c==a)c=a;//\u5176\u4e2d\u4e00\u4e2a\u91cd\u5fc3\uff1b \n\t\telse d=a;//\u82e5\u6709\u4e24\u4e2a\u5219\u5728\u8bb0\u5f55\u4e00\u4e0b \n\t}\n\treturn;\n}\nvoid init(int u,int fa){\n\tf[l][u][0]=fa;//\u521d\u59cb\u503c \n\tdes[l][u]=1;\n\tfor(int i=1;i<=20;i++){\n\t\tf[l][u][i]=f[l][f[l][u][i-1]][i-1];//\u5e38\u89c1\u500d\u589e\u7edf\u8ba1\u7956\u5148 \n\t}\n\tfor(int i=ves[l][u];i;i=st[i].next){\n\t\tif(st[i].v!=fa){\n\t\tinit(st[i].v,u);\n\t\tdes[l][u]+=des[l][st[i].v];}//\u91cd\u65b0\u7edf\u8ba1\u7ed3\u70b9 \n\t}\n\treturn;\n}\nint check(int a,int b){ //check\u5224\u65ad\u662f\u5426\u4e3a\u91cd\u5fc3\u51fd\u6570 \n\tif(des[l][a]*2>b)return 1;//\u4e00\u4e2a\u91cd\u5fc3\u8fd4\u56de1\uff1b \n\tif(des[l][a]*2==b)return 2;//\u4e24\u4e2a\u91cd\u5fc3\u8fd4\u56de\u800c \n\t/*\u5176\u7ed3\u70b9\u6570\u4e3a\u5b50\u6811\u7684\u4e00\u534a\uff0c\u5176\u7236\u4eb2\u7684\u6700\u5927\u5b50\u6811\u7684\u7ed3\u70b9\u6570\u4e00\u5b9a\u4e3a\u8be5\u5b50\u6811\u7684\u4e00\u534a*/\n\t//\u6545\u7236\u7ed3\u70b9\u4e3a\u91cd\u5fc3 \n\t//\u56e0\u4e3a\u4e00\u5b9a\u6709\u91cd\u5fc3\u6240\u4ee5\u9010\u6b65\u5f80\u4e0a\u627e\u5230\u521a\u597d\u8d85\u8fc7\u7684\u4e00\u5b9a\u4e3a\u91cd\u5fc3 \n\treturn 0;\n}\nvoid dfs(int a,int fa){\n\tfor(int i=ves[l][a];i;i=st[i].next){//\u904d\u5386\u5b50\u8282\u70b9 \n\t\tif(st[i].v!=fa){\n\t\t  \tdfs(st[i].v,a);//\u9012\u5f52\u904d\u5386\u5168\u56fe \n\t\t\tif(des[l][st[i].v]*2>=des[l][a]){//\u53ef\u80fd\u542b\u6709\u91cd\u5fc3\u7684\u5b50\u6811 \n\t\t\t\tzx[l][a]=zx[l][st[i].v];\n\t\t\t\tif(check(zx[l][a],des[l][a])==0){\t\t\t\t    \n\t\t\t\t\tfor(int j=20;j>=0;j--){\n\t\t\t\t    \tif(check(f[l][zx[l][a]][j],des[l][a])||f[l][zx[l][a]][j]==0)continue;\n\t\t\t\t    \tzx[l][a]=f[l][zx[l][a]][j];//\u5e38\u89c1\u500d\u589e\u5f80\u4e0a\u8df3 \n\t\t\t\t    \t//\u4e00\u76f4\u5230\u5176\u7236\u7ed3\u70b9\u4e3a\u91cd\u5fc3 \n\t\t\t\t\t}\n\t\t\t\t\tzx[l][a]=f[l][zx[l][a]][0];//\u627e\u5230\u91cd\u5fc3 \n\t\t\t\t}\n\t\t\t\tans+=zx[l][a];//\u53ea\u53ef\u80fd\u8fd4\u56de1\u62162\uff0c\u56e0\u4e3a\u8be5\u70b9\u4e3a\u91cd\u5fc3 \n\t\t\t\tif(check(zx[l][a],des[l][a])==2){\n\t\t\t\t\tzx[l][a]=f[l][zx[l][a]][0];//\u4e24\u4e2a\u91cd\u5fc3\u8f6c\u79fb \n\t\t\t    \tans+=zx[l][a];\n\t\t\t\t}   \t\n\t\t\t}\n\t\t}\n\t}\n\tif(zx[l][a]==0){\n\t   ans+=a;\n\t   zx[l][a]=a;}//\u8be5\u6811\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7279\u6b8a\u8f6c\u79fb\n\treturn; \n}\nint check2(int a,int b){\n\tif(a==c)return 3;//\u6839\u8282\u70b9\u7279\u6b8a\u8f6c\u79fb\n\tif(des[l][a]*2>n-b)return 1;\n\t//\u4f9d\u7167\u7b2c\u4e00\u6b21\uff0c\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u8f6c\u79fb \n\tif(des[l][a]*2==n-b)return 2;\n\t//\u4e24\u4e2a\u7ed3\u70b9\u8f6c\u79fb \n\treturn 0;//\u4e0d\u662f\u91cd\u5fc3\u8fd4\u56de0\n}\nvoid dfs2(int a,int fa){\n\tzx2[l][a]=zx2[l][fa];//\u521d\u59cb\u5316\u91cd\u5fc3\u7ed3\u70b9 \n\t//\u56e0\u4e3a\u518d\u53e6\u4e00\u68f5\u5b50\u6811\u7279\u6b8a\u8f6c\u79fb \n\tint w=check2(zx2[l][a],des[l][a]);\n\tif(w==0){\t\t\t\t    \n\t\tfor(int i=20;i>=0;i--){\n\t\t  \tif(check2(f[l][zx2[l][a]][i],des[l][a])||f[l][zx2[l][a]][i]==0)continue;\n\t\t\t   \tzx2[l][a]=f[l][zx2[l][a]][i];//\u540c\u7b2c\u4e00\u6b21\u5f80\u4e0a\u8df3 \n\t\t}\n\t\tzx2[l][a]=f[l][zx2[l][a]][0];//\u91cd\u5fc3 \n\t}\n\tw=check2(zx2[l][a],des[l][a]);\n\t//\u540c\u7b2c\u4e00\u6b21 \n\tif(w==1)ans+=zx2[l][a]; \n\tif(w==2)ans+=zx2[l][a]+f[l][zx2[l][a]][0]; \n\tif(w==3)ans+=c+d;\n\tfor(int i=ves[l][a];i;i=st[i].next){\n\t\tif(st[i].v!=fa)dfs2(st[i].v,a);//\u9012\u5f52\u5f80\u4e0b\n\t} \n\t//\u56e0\u4e3a\u7b2c\u4e8c\u6b21\u662f\u5728\u53e6\u4e00\u68f5\u5b50\u6811\uff0c\u6240\u4ee5\u4ece\u4e0a\u5f80\u4e0b\u627e\n}\nint main(){\n//\tfreopen(\"centroid3.in\",\"r\",stdin);\n//\tfreopen(\"centroid.in\",\"w\",stdout);\n\tint t;//\u7ec4\u6570 \n\tscanf(\"%d\",&t);\n\tfor(l=1;l<=t;l++){//l\u4e3a\u5f53\u524d\u4e3a\u7b2c\u51e0\u7ec4 \n\t\tscanf(\"%lld\",&n);//\u7ed3\u70b9\u6570 \n\t\tans=0;c=0;d=0;\n\t\tfor(int i=1;i<=n-1;i++){\n\t\t    int a,b;\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tcc(a,b,l);\n\t\t\tcc(b,a,l);\t//\u5efa\u8fb9 \n\t\t}\n\t\tfindzx(1,0);//\u627e\u91cd\u5fc3 \n\t\tinit(c,0);//\u521d\u59cb\u5316 \n\t\tdfs(c,0);//\u7b2c\u4e00\u6b21\u5bfb\u6c42\u8be5\u7ed3\u70b9\u4e00\u4e0b\u7684\u91cd\u5fc3 \n\t\tans-=c; //\u51cf\u53bb\u591a\u4f59\u7684\u6839\u8282\u70b9 \n\t\tint fir=-1,sec=-1,fir1=0,sec1=0;//fir\u6700\u5927\u7684\u5b50\u6811\uff0csec\u6b21\u5927\u5b50\u6811 \n\t\tfor(int i=ves[l][c];i;i=st[i].next){\n\t\t\tif(des[l][st[i].v]>fir){\n\t\t\t\tsec=fir;sec1=fir1;\n\t\t\t\tfir=des[l][st[i].v];\n\t\t\t\tfir1=st[i].v;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(des[l][st[i].v]>sec){\n\t\t\t\tsec=des[l][st[i].v];\n\t\t\t\tsec1=st[i].v;}\n\t\t\t}//\u5e38\u89c4\u6bd4\u8f83 \n\t\t}\n\t\tfor(int i=ves[l][c];i;i=st[i].next){\n\t\t\tif(st[i].v!=fir1) zx2[l][c]=zx[l][fir1];//\u4e0d\u4e3a\u6700\u5927\u5b50\u6811\u8f6c\u79fb \n\t\t\telse zx2[l][c]=zx[l][sec1];//\u6700\u5927\u5b50\u6811\u8f6c\u79fb \n\t\t\tdfs2(st[i].v,c);//\u8fdb\u5165\u7edf\u8ba1 \n\t\t} \n\t\tprintf(\"%lld\\n\",ans);//\u8f93\u51fa\u7b54\u6848 \n\t}\n\treturn 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6$O(Tn\\log n)$ $($\u500d\u589e$O(\\log n)$ \uff0c \u904d\u5386$O(n)$$)$\n\n\n\u5199\u7684\u8fd9\u4e48\u7d2f \uff0c\u770b\u7684\u4e5f\u633a\u8f9b\u82e6\u7684 \u3002 \u4e0d\u51e1**\u70b9\u8d5e\u8bc4\u8bba**\u4e0b\u518d\u8d70 \u3002\n\n\u6709\u7591\u60d1\u6216\u9519\u8bef\uff08\u6bd4\u5982\u65e5\u5e38\u624b\u6b8b\uff09\u8bf7\u5728\u8bc4\u8bba\u533a\u53cd\u9988 ,\u5e0c\u671b\u80fd\u5e2e\u5230\u4f60\u3002\n\n",
        "postTime": 1583908626,
        "uid": 220140,
        "name": "hekaiyu",
        "ccfLevel": 4,
        "title": "CSP-S Day2T3 \u6811\u7684\u91cd\u5fc3"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4e00\u68f5\u6811\uff0c\u6c42\u5220\u9664\u6bcf\u6761\u8fb9\u540e\uff0c\u5206\u79bb\u51fa\u4e24\u4e2a\u5b50\u6811\u6240\u6709\u91cd\u5fc3\u7684\u7f16\u53f7\u603b\u548c\u3002\n\n$n$$\\leq3*10^5$\n\n ## \u90e8\u5206\u5206\u505a\u6cd5\n\n\u5bf9\u4e8e$n\\leq1999$\u7684\u6570\u636e\uff0c\u66b4\u529b\u679a\u4e3e\u65ad\u54ea\u6761\u8fb9\uff0c\u5bf9\u4e8e\u5206\u79bb\u51fa\u7684\u4e24\u4e2a\u5b50\u6811\u5206\u522b\u6c42\u91cd\u5fc3\uff0c\u7136\u540e\u628a\u6c42\u51fa\u6765\u7684\u91cd\u5fc3\u7f16\u53f7\u76f4\u63a5\u52a0\u8d77\u6765\u3002\n\n\u5bf9\u4e8e\u94fe\u7684\u6570\u636e\uff0c\u5148\u628a\u94fe\u8f6c\u6210\u5e8f\u5217\uff0c\u7136\u540e\u5728\u5e8f\u5217\u4e0a\u679a\u4e3e\u65ad\u54ea\u6761\u8fb9\uff0c\u4e24\u8fb9\u7684\u91cd\u5fc3\u5c31\u662f\u6700\u4e2d\u95f4$1$~$2$\u4e2a\u70b9\uff0c\u5206\u5947\u5076\u8ba8\u8bba\u3002\n\n\u5bf9\u4e8e\u4e8c\u53c9\u6811\u7684\u6570\u636e\uff0c\u624b\u753b\u51e0\u7ec4\u4f1a\u53d1\u73b0\uff1a\n\n1.\u5220\u9664\u53f6\u5b50\u8282\u70b9\u8fde\u8fb9\uff0c\u6839\u4f1a\u6210\u4e3a\u91cd\u5fc3\u4e4b\u4e00\u3002\n\n2.\u5220\u9664\u67d0\u4e2a\u9664\u6839\u8282\u70b9\u5916\u7684\u8282\u70b9\u8fde\u8fb9\u65f6\uff0c\u8fd9\u4e2a\u70b9\u4f1a\u6210\u4e3a\u91cd\u5fc3\u4e4b\u4e00\u3002\n\n3.\u5220\u9664\u6839\u7684\u5de6\u5b50\u6811\u67d0\u6761\u8fb9\u65f6\uff0c\u6839\u7684\u53f3\u513f\u5b50\u4f1a\u6210\u4e3a\u91cd\u5fc3\u4e4b\u4e00\uff0c\u5bf9\u79f0\u540c\u7406\u3002\n\n\u5e76\u4e14\uff0c\u8fd9\u8986\u76d6\u4e86\u6240\u6709\u91cd\u5fc3\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u6c42\u548c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6240\u4ee5\u5728\u8003\u573a\u4e0a\uff0c\u53ef\u4ee5\u5feb\u901f\u5f97\u5230$75$\u5206\u3002\n\n~~\u6211\u5c31\u662f75\u5206\u8dd1\u8def\u7684\u83dc\u9e21~~\n\n## \u6b63\u89e3\n\n\u6b63\u89e3\u601d\u8def\u4e0e\u6240\u6709\u90e8\u5206\u5206\u505a\u6cd5\u90fd\u65e0\u5173\u3002\n\n\u6211\u4eec\u8003\u8651\u679a\u4e3e\u67d0\u4e2a\u8282\u70b9\uff0c\u7b97\u51fa\u5220\u9664\u54ea\u4e9b\u8fb9\u4e4b\u540e\uff0c\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u6210\u4e3a\u91cd\u5fc3\u3002\n\n\u8bbe$1$\u53f7\u8282\u70b9\u4e3a\u6839\u3002\n\n\u5047\u8bbe\u5f53\u524d\u679a\u4e3e\u7684\u8282\u70b9\u4e3a$a$\uff0c$a$\u6700\u5927\u7684\u5b50\u6811\u4e3a$x$\uff0c\u6211\u4eec\u8003\u8651\u5220\u6389$y$\u4e0e$fa_y$\u7684\u8fde\u8fb9\uff0c$a$\u6b21\u5927\u7684\u5b50\u6811\u4e3a$z$\u3002\n\n\u6211\u4eec\u5927\u6982\u53d1\u73b0\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u67d0\u6bb5$dfs$\u5e8f\u4e2d\u5173\u4e8e$size$\u7684\u533a\u95f4\u67e5\u8be2\u95ee\u9898\u3002\n\n\n\n\u53ef\u4ee5\u5206\u4e3a\u4e94\u7c7b\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1.$y$\u5728$x$\u4e2d\u3002\n\n2.$y$\u5728$a$\u4e2d\u4f46\u4e0d\u5728$x$\u4e2d\u3002\n\n3.$y$\u662f$a$\u5230\u6839\u8282\u70b9\u8fd9\u6761\u94fe\u4e0a\u7684\u70b9\u3002\n\n4.$y$\u4e0d\u662f$a$\u5230\u6839\u8282\u70b9\u8fd9\u6761\u94fe\u4e0a\u7684\u70b9\uff0c\u4e5f\u4e0d\u662f$a$\u4e2d\u7684\u70b9\uff0c\u4e14$y$\u7684$dfs$\u5e8f\u5c0f\u4e8e$a$\u7684$dfs$\u5e8f\u3002\n\n5.$y$\u4e0d\u662f$a$\u5230\u6839\u8282\u70b9\u8fd9\u6761\u94fe\u4e0a\u7684\u70b9\uff0c\u4e5f\u4e0d\u662f$a$\u4e2d\u7684\u70b9\uff0c\u4e14$y$\u7684$dfs$\u5e8f\u5927\u4e8e$a$\u7684$dfs$\u5e8f\u3002\n\n\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u91cd\u5fc3\u7684\u6027\u8d28\u6765\u786e\u5b9a\u9700\u8981\u67e5\u8be2\u7684\u533a\u95f4\u8303\u56f4\u3002\n\n\u89c4\u5b9a\u9664\u6cd5\u5747\u4e3a\u5411\u4e0b\u53d6\u6574\u3002\n\n\u5bf9\u4e8e1\uff1a\n\n\u5bf9\u4e8e\u6240\u6709\u7684$x$\uff08\u53ef\u80fd\u6709\u591a\u4e2a\uff09\uff1a\n\n$dfn_y\\in [in[x],out[x]]$\n\n$sz_x-sz_y\\leq \\frac{n-sz_y}{2}$\n\n$sz_z\\leq\\frac{n-sz_y}{2}$\n\n$n-sz_a\\leq\\frac{n-sz_y}{2}$\n\n $\\therefore 2sz_x-n\\leq sz_y\\leq min(n-2sz_z,2sz_a-n)$\n\n\n\n\u5bf9\u4e8e2\uff1a\n\n\u8bbe$k$\u4e3a$a$\u7684\u67d0\u4e2a\u5b50\u6811\u5927\u5c0f\u4e0d\u662f\u6700\u5927\u503c\u7684\u513f\u5b50\u3002\n\n\u5bf9\u4e8e\u6240\u6709\u7684$k$\uff08\u53ef\u80fd\u6709\u591a\u4e2a\uff09\uff1a\n\n$dfn_y\\in[in[k],out[k]]$\n\n$sz_x\\le \\frac{n-sz_y}{2}$\n\n$n-sz_a\\leq \\frac{n-sz_y}{2}$\n\n$\\therefore1\\leq sz_y \\leq min(n-2sz_x,2sz_a-n)$\n\n\n\n\u5bf9\u4e8e3\uff1a\n\n$sz_y-sz_a\\leq \\frac{sz_y}{2}$\n\n$sz_x\\leq \\frac{sz_y}{2}$\n\n$\\therefore 2sz_x\\leq sz_y \\leq 2sz_a$\n\n\u9700\u8981\u67e5\u8be2$a$\u5230\u6839\u7684\u94fe\u4e0a\u7684\u4fe1\u606f\u3002\n\n\n\n\u5bf9\u4e8e4\uff1a\n\n$dfn_y\\in[1,in[a]]$\n\n$sz_x\\leq \\frac{n-sz_y}{2}$\n\n$n-sz_a-sz_y\\leq \\frac{n-sz_y}{2} $\n\n$\\therefore n-2sz_a\\leq sz_y\\leq n-2sz_x$\n\n\u5728\u67e5\u8be2\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u51cf\u53bb$a$\u5230\u6839\u7684\u94fe\u4e0a\u7684\u4fe1\u606f\u3002\n\n\n\n\u5bf9\u4e8e5\uff1a\n\n$dfn_y\\in[out[a]+1,n]$\n\n$sz_x\\leq \\frac{n-sz_y}{2}$\n\n$n-sz_a-sz_y\\leq \\frac{n-sz_y}{2} $\n\n$\\therefore n-2sz_a\\leq sz_y\\leq n-2sz_x$\n\n\n\n\u5176\u4e2d\uff0c$in[x]$\u8868\u793a$x$\u7684$dfs$\u5e8f\uff0c$out[x]$\u8868\u793a$x$\u5b50\u6811\u4e2d\u6700\u5927\u7684$dfs$\u5e8f\u3002\n\n\u4ec5\u4f7f\u7528\u4e24\u68f5\u4e3b\u5e2d\u6811\uff0c\u4e00\u68f5\u4ee5$dfs$\u5e8f\u4e3a\u5173\u952e\u5b57\uff0c\u53e6\u4e00\u68f5\u76f4\u63a5\u7ee7\u627f\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\uff0c\u4fbf\u53ef\u5b8c\u6210\u6240\u6709\u7684\u67e5\u8be2\u8fc7\u7a0b\u3002\n\n\u5e38\u6570\u5de8\u5927\uff0c~~\u5f00O2\u200b\u624d\u80fd\u8fc7~~\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO\n{\n    const int _S=(1<<20)+5;char _buf[_S],*_H,*_T;\n    inline char getc()\n    {\n        if(_H==_T) _T=(_H=_buf)+fread(_buf,1,_S,stdin);\n        if(_H==_T) return -1;return *_H++;\n    }\n    template <class I>inline void read(I &x)\n    {\n        x=0;int fg=1;char c=getc();\n        while(!isdigit(c)&&c!='-') c=getc();\n        if(c=='-') fg=-1,c=getc();\n        while(isdigit(c)) x=x*10+c-'0',c=getc();\n        x*=fg;\n    }\n    char _obuf[_S],*_oS=_obuf,*_oT=_oS+_S-1,_qu[55];int _qr;\n    inline void flush(){fwrite(_obuf,1,_oS-_obuf,stdout);_oS=_obuf;}\n    inline void putc(char x){*_oS++ =x;if(_oS==_oT) flush();}\n    template <class I>inline void print(I x)\n    {\n        if(!x) putc('0');\n        if(x<0) putc('-'),x=-x;\n        while(x) _qu[++_qr]=x%10+'0',x/=10;\n        while(_qr) putc(_qu[_qr--]);\n    }\n    inline void el(){putc('\\n');}inline void sp(){putc(' ');}\n}using namespace IO;\n#define N 300005\n#define ll long long\nint T,n,x,y,I,cnt,tot,he[N],ne[N*2],to[N*2],sz[N],mf[N],ms[N],mi[N],in[N],ou[N],rt[N*2],s[N*60],ls[N*60],rs[N*60];ll g;\nvoid add(int x,int y){to[cnt]=y;ne[cnt]=he[x];he[x]=cnt++;}\nvoid ins(int &x,int y,int l,int r,int p)\n{\n    x=++tot;s[x]=s[y]+1;if(l==r) return;int mid=(l+r)>>1;\n    if(p<=mid) rs[x]=rs[y],ins(ls[x],ls[y],l,mid,p);else ls[x]=ls[y],ins(rs[x],rs[y],mid+1,r,p);\n}\nint que(int x,int y,int z,int l,int r,int b,int e,int o)\n{\n    if(b>e) return 0;if(b<=l&&r<=e) return o?s[y]-s[x]-s[z]:s[z]-s[x];int mid=(l+r)>>1;\n    return (b<=mid?que(ls[x],ls[y],ls[z],l,mid,b,e,o):0)+(e>mid?que(rs[x],rs[y],rs[z],mid+1,r,b,e,o):0);\n}\nvoid dfs1(int x,int fa)\n{\n    in[x]=++I;sz[x]=1;mf[x]=ms[x]=0;\n    for(int i=he[x],y;~i;i=ne[i]) if((y=to[i])!=fa)\n    {\n        dfs1(y,x);sz[x]+=sz[y];ms[x]=max(ms[x],sz[y]);\n        if(ms[x]>mf[x]) swap(ms[x],mf[x]);\n    }\n    ou[x]=I;\n}\nvoid dfs2(int x,int fa)\n{\n    ins(rt[in[x]],rt[in[x]-1],1,n,sz[x]);ins(rt[x+n],rt[fa+n],1,n,sz[x]);\n    for(int i=he[x],y;~i;i=ne[i]) if((y=to[i])!=fa) dfs2(y,x);\n}\nint main()\n{\n    for(read(T);T--;)\n    {\n        cnt=0;I=0;tot=0;g=0;memset(he,-1,sizeof(he));memset(rt,0,sizeof(rt));\n        read(n);for(int i=1;i<n;i++) read(x),read(y),add(x,y),add(y,x);\n        dfs1(1,0);dfs2(1,0);\n        for(int i=1;i<=n;i++) for(int j=he[i],k;~j;j=ne[j]) if(sz[k=to[j]]<sz[i])\n        {\n            if(sz[k]<mf[i]) g+=1ll*i*que(rt[in[k]-1],rt[ou[k]],0,1,n,1,min(n,min(n-2*mf[i],2*sz[i]-n)),1);\n            else g+=1ll*i*que(rt[in[k]-1],rt[ou[k]],0,1,n,max(1,2*mf[i]-n),min(n,min(2*sz[i]-n,n-2*ms[i])),1);\n        }\n        for(int i=1;i<=n;i++) g+=1ll*i*que(rt[1-1],rt[in[i]],rt[i+n],1,n,max(1,n-2*sz[i]),min(n,n-2*mf[i]),1);\n        for(int i=1;i<=n;i++) g+=1ll*i*que(rt[ou[i]+1-1],rt[n],0,1,n,max(1,n-2*sz[i]),min(n,n-2*mf[i]),1);\n        for(int i=1;i<=n;i++) g+=1ll*i*que(rt[n+1],0,rt[i+n],1,n,max(1,2*mf[i]),min(n,2*sz[i]),0);\n        printf(\"%lld\\n\",g);\n    }\n}\n```\n",
        "postTime": 1575509762,
        "uid": 70545,
        "name": "Awar3ness",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "# \u5199\u5728\u524d\u9762\n\n\u91cd\u513f\u5b50:\u8fd9\u4e0e\u6811\u94fe\u5256\u5206\u4e2d\u7684\u91cd\u513f\u5b50\u610f\u4e49\u76f8\u540c.\u5bf9\u4e8e\u6709\u6839\u6811\u7684\u8282\u70b9 $x$,\u5176\u6700\u5927\u7684\u5b50\u6811(\u5373\u8282\u70b9\u6570\u6700\u591a)\u7684\u6839\u8282\u70b9.\n\n\u5148\u6ce8\u610f\u4e00\u4e0b,\u8fd9\u91cc $\\frac n2$ \u5e76\u4e0d\u8868\u793a\u6574\u9664,\u5c31\u662f\u666e\u901a\u7684\u9664\u6cd5,\u4f46\u662f\u6709\u4e00\u4e9b(\u4e0d\u5982\u8bf4\u5f88\u5927\u90e8\u5206)\u4e0e\u6574\u9664\u662f\u7b49\u4ef7\u7684.\u8bf7\u8bfb\u8005\u81ea\u884c\u5224\u65ad.\n\n* \u5982\u679c $x$ \u8282\u70b9\u662f\u4e00\u68f5\u6811\u7684\u91cd\u5fc3,\u90a3\u4e48\u5220\u53bb $x$ \u4ee5\u53ca\u4e0e\u5176\u76f8\u8fde\u7684\u8fb9,\u5269\u4e0b\u6700\u5927\u7684\u8fde\u901a\u5757\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\frac n2$.\n* \u4e0a\u9762\u90a3\u4e2a\u547d\u9898\u7684\u53cd\u547d\u9898\u4ecd\u7136\u6210\u7acb.\u4e5f\u5c31\u662f\u8bf4\u5982\u679c $x$ \u662f\u4e00\u68f5\u6811\u7684\u4e00\u4e2a\u8282\u70b9,\u5220\u53bb $x$ \u4ee5\u53ca\u4e0e\u5176\u76f8\u8fde\u7684\u8fb9,\u5269\u4e0b\u8fde\u901a\u5757\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\frac n2$,\u90a3\u4e48 $x$ \u5c31\u662f\u8fd9\u68f5\u6811\u7684\u91cd\u5fc3.**\u8fd9\u662f\u672c\u9898\u7b97\u6cd5\u4e2d\u5224\u65ad\u4e00\u4e2a\u8282\u70b9\u662f\u5426\u4e3a\u91cd\u5fc3\u7684\u65b9\u5f0f.**\n* \u5982\u679c $x$ \u662f\u4e00\u68f5\u6709\u6839\u6811\u7684\u6839,\u5e76\u4e14\u6709\u4e00\u68f5\u5b50\u6811\u5927\u5c0f\u4e0d\u5c0f\u4e8e $\\frac n2$,\u90a3\u4e48\u6811\u7684\u91cd\u5fc3\u4e00\u5b9a\u5728\u8fd9\u68f5\u5b50\u6811\u5185.\n* \u6839\u636e\u4e0a\u9762\u8fd9\u6761\u547d\u9898,\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u627e\u91cd\u5fc3\u7684\u4e00\u79cd\u65b9\u5f0f:\u4ece\u6839\u5f00\u59cb,\u6cbf\u7740\u91cd\u513f\u5b50\u4e0d\u65ad\u5f80\u4e0b\u627e,\u91cd\u5fc3\u80af\u5b9a\u80fd\u88ab\u8bbf\u95ee\u5230.\u5e76\u4e14\u5982\u679c\u6709\u4e24\u4e2a\u91cd\u5fc3,\u80af\u5b9a\u662f\u8fde\u7eed\u7684\u4e24\u4e2a.\n\n\u56e0\u4e3a\u4e0a\u9762\u8fd9\u4e9b\u547d\u9898\u8981\u4e48\u662f\u57fa\u672c\u7684\u56fe\u8bba\u829d\u58eb,\u8981\u4e48\u53ea\u9700\u8981\u7a0d\u5fae\u63a8\u5bfc\u4e00\u4e0b,\u8fd9\u91cc\u5c31\u4e0d\u52a0\u4ee5\u8bc1\u660e\u4e86.\n\n# \u601d\u8def\n\n\u8003\u8651\u65ad\u5f00\u4e00\u6761\u8fb9 $(u,v)$.\n\n\u5206\u522b\u4ee5 $u,v$ \u4e3a\u6839\u6267\u884c*\u5199\u5728\u524d\u9762*\u4e2d\u7684\u627e\u91cd\u5fc3\u65b9\u6cd5.\n\n\u5982\u679c\u66b4\u529b\u505a\u7684\u8bdd\u590d\u6742\u5ea6\u8fd8\u662f\u8d85\u7ea7\u9ad8.~~\u4e0d\u5982\u666e\u901a\u7684\u66b4\u529b.~~\n\n\u6bcf\u6b21\u53ea\u8d70\u4e00\u6b65\u592a\u6162\u4e86,\u6211\u4eec\u7528\u500d\u589e\u4f18\u5316.\n\n$f[u][i]$ \u8868\u793a\u4ece $u$ \u5f00\u59cb\u6cbf\u7740\u91cd\u513f\u5b50\u8d70 $2^i$ \u6b65.\u8d70\u5230\u7b2c\u4e00\u4e2a\u53ef\u80fd\u662f\u91cd\u5fc3\u7684\u70b9 $x$(\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u6ee1\u8db3 $x$ \u91cd\u513f\u5b50\u6240\u5728\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\frac n2$ \u7684).\u5f88\u5bb9\u6613\u53d1\u73b0, $x$ \u4ee5\u53ca $x$ \u7684\u91cd\u513f\u5b50\u662f\u552f\u4e8c\u80fd\u6210\u4e3a\u91cd\u5fc3\u7684\u8282\u70b9.\u5224\u65ad\u4e00\u4e0b\u5c31 OK.\n\n$f$ \u6570\u7ec4\u53ef\u4ee5\u6700\u5f00\u59cb\u9884\u5904\u7406\u4ee5 $1$ \u4e3a\u6839\u7684\u60c5\u51b5,\u7136\u540e\u6362\u6839\u5c31\u53ef\u4ee5\u4e86.\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define i64 long long\n#define rgt register\n#define fp( i, b, e ) for ( int i(b), I(e); i <= I; ++i )\n#define fd( i, b, e ) for ( int i(b), I(e); i >= I; --i )\n#define go( i, b ) for ( int i(b), v(to[i]); i; v = to[i = nxt[i]] )\ntemplate<typename T> inline bool cmax( T &x, T y ){ return x < y ? x = y, 1 : 0; }\ntemplate<typename T> inline bool cmin( T &x, T y ){ return y < x ? x = y, 1 : 0; }\n#define getchar() ( p1 == p2 && ( p1 = bf, p2 = bf + fread( bf, 1, 1 << 21, stdin ), p1 == p2 ) ? EOF : *p1++ )\nchar bf[1 << 21], *p1(bf), *p2(bf);\ntemplate<typename T>\ninline void read( T &x ){ char t(getchar()), flg(0); x = 0;\n\tfor ( ; !isdigit(t); t = getchar() ) flg = t == '-';\n\tfor ( ; isdigit(t); t = getchar() ) x = x * 10 + ( t & 15 );\n\tflg ? x = -x : x;\n}\n\nconst int _ = 300055;\nint T, N;\nint hd[_], nxt[_<<1], to[_<<1], tot;\nint sz[_], f[_][20], sn1[_], sn2[_];\nint _sz[_];//\u6362\u6839\u540e\u5b50\u6811\u7684\u5927\u5c0f\n\ninline void addedge( int x, int y ){\n\tnxt[++tot] = hd[x], hd[x] = tot, to[tot] = y,\n\tnxt[++tot] = hd[y], hd[y] = tot, to[tot] = x;\n}\n\nvoid DFS1( int u, int fa ){\n\tsz[u] = 1, sn1[u] = sn2[u] = 0;\n\tgo( i, hd[u] ) if ( fa ^ v ){\n\t\tDFS1(v, u), sz[u] += sz[v];\n\t\tif ( sz[v] > sz[sn1[u]] ) sn2[u] = sn1[u], sn1[u] = v;\n\t\telse if ( sz[v] > sz[sn2[u]] ) sn2[u] = v;\n\t} f[u][0] = sn1[u]; fp( i, 1, 18 ) f[u][i] = f[f[u][i - 1]][i - 1];\n}\n\ni64 ans;\ninline int get( int x, int n ){ return max(_sz[f[x][0]], n - _sz[x]) <= (n >> 1) ? x : 0; }\n\nvoid DFS2( int u, int fa ){\n\tgo( j, hd[u] ) if ( v != fa ){\n\t\t_sz[u] = N - _sz[v];\n\t\tif ( _sz[fa] > _sz[sn1[u]] || (sn1[u] == v && _sz[fa] > _sz[sn2[u]]) ) f[u][0] = fa;\n\t\telse if ( sn1[u] == v ) f[u][0] = sn2[u]; else f[u][0] = sn1[u];\n\t\tfp( i, 1, 18 ) f[u][i] = f[f[u][i - 1]][i - 1];\n\t\tint n, t;\n\t\tn = _sz[v] >> 1, t = v;\n\t\tfd( i, 18, 0 ) if ( _sz[f[f[t][i]][0]] > n ) t = f[t][i];\n\t\tif ( _sz[f[t][0]] > n ) t = f[t][0];\n\t\tans += get(t, _sz[v]) + get(f[t][0], _sz[v]);\n\t\tn = _sz[u] >> 1, t = u;\n\t\tfd( i, 18, 0 ) if ( _sz[f[f[t][i]][0]] > n ) t = f[t][i];\n\t\tif ( _sz[f[t][0]] > n ) t = f[t][0];\n\t\tans += get(t, _sz[u]) + get(f[t][0], _sz[u]);\n\t\tDFS2(v, u);\n\t}\n\t_sz[u] = sz[u], f[u][0] = sn1[u]; // \u6539\u56de\u53bb \n\tfp( i, 1, 18 ) f[u][i] = f[f[u][i - 1]][i - 1];\n}\n\nsigned main(){\n\tread(T); int x, y;\n\twhile( T-- ){\n\t\tans = 0, memset( hd, 0, sizeof hd ), tot = 1;\n\t\tread(N); fp( i, 2, N ) read(x), read(y), addedge(x, y);\n\t\tDFS1(1, 0), memcpy( _sz, sz, sizeof sz ), DFS2(1, 0);\n\t\tprintf( \"%lld\\n\", ans );\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1576559112,
        "uid": 70786,
        "name": "_louhc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    },
    {
        "content": "### $\\text{D2T3}$  \u6811\u7684\u91cd\u5fc3\n\n#####  $\\text{Descripton}$\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6c42\u51fa\u5220\u9664\u6bcf\u4e00\u6761\u8fb9\u540e\u5206\u88c2\u51fa\u7684\u4e24\u4e2a\u5b50\u6811\u7684\u91cd\u5fc3\u7f16\u53f7\u548c\u3002\n\n##### $\\text{Solution}$\n\n\u8003\u8651\u4e00\u4e2a\u6700\u663e\u7136\u7684\u66b4\u529b\uff0c\u679a\u4e3e\u5220\u9664\u7684\u8fb9\uff0c\u66b4\u529b\u6c42\u4e24\u4e2a\u5b50\u6811\u7684\u91cd\u5fc3\uff0c\u8fd9\u6837\u662f $O(n^2)$ \u7684\u3002\n\n\u4e0a\u9762\u7684\u505a\u6cd5\u53ef\u4ee5\u901a\u8fc7\u500d\u589e\u4f18\u5316\u81f3 $O(n\\log n)$\uff0c\u4f46\u6211\u592a\u83dc\u4e86\u4e0d\u4f1a\u3002\n\n\u8003\u8651\u6c42\u6bcf\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u6211\u4eec\u5148\u4ee5\u539f\u6811\u7684\u4e00\u4e2a\u91cd\u5fc3\u4e3a\u6839\uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6bd4\u8f83\u597d\u7684\u6027\u8d28\u3002\n\n\u8bb0 $x$ \u4e3a\u6211\u4eec\u5f53\u524d\u8003\u8651\u8d21\u732e\u7684\u8282\u70b9\uff0c$s_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff0c$S$ \u4e3a\u5220\u8fb9\u540e\u4e0d\u5305\u542b $x$ \u7684\u65b0\u6811\uff0c$g_i$ \u8868\u793a\u4ee5 $i$ \u7684\u91cd\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u3002\n\n\u5148\u8003\u8651 $x$ \u4e0d\u662f\u6839\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u82e5\u8981\u4f7f $x$ \u6210\u4e3a\u91cd\u5fc3\uff0c\u5220\u7684\u8fb9\u4e0d\u53ef\u80fd\u5728 $x$ \u7684\u5b50\u6811\u91cc\u3002\u4e3a\u4ec0\u4e48\uff1f\u8003\u8651\u5220\u9664\u6839\uff08\u6ce8\u610f\u662f\u91cd\u5fc3\uff09\u540e $x$ \u6240\u5728\u7684\u5b50\u6811\u5927\u5c0f\u4e0d\u8d85\u8fc7 $\\lfloor\\dfrac{n}{2}\\rfloor$\uff0c\u6545\u5176\u5b83\u5b50\u6811\u5927\u5c0f\u7684\u548c\u81f3\u5c11\u662f $\\lfloor\\dfrac{n}{2}\\rfloor$\uff0c\u53d1\u73b0\u5176\u5b83\u5b50\u6811\u4f1a\u548c\u6839\u4e00\u8d77\u4f5c\u4e3a $x$ \u6240\u5728\u7684\u65b0\u6811\u4e2d $x$ \u7684\u4e00\u68f5\u5b50\u6811\uff0c\u663e\u7136\u5b83\u7684\u5927\u5c0f\u8d85\u8fc7\u4e86\u65b0\u6811\u5927\u5c0f\u7684\u4e00\u534a\uff0c\u4e0d\u7b26\u5408\u5b9a\u4e49\u3002\n\n\u6839\u636e\u91cd\u5fc3\u7684\u5b9a\u4e49\uff0c\u8fd8\u53ef\u4ee5\u6709\uff1a\n\n$$g_x\\le \\lfloor\\dfrac{n-S}{2}\\rfloor$$\n\n$$n-s_x-S\\le \\lfloor\\dfrac{n-S}{2}\\rfloor$$\n\n\u4e8b\u5b9e\u4e0a\u7531\u4e8e\u6574\u9664\u7684\u6027\u8d28\uff0c\u6211\u4eec\u6574\u7406\u5f97\u5230\uff1a\n\n$$n-2s_x\\le S \\le n-2g_x$$\n\n\u4ece\u800c\u5c06\u95ee\u9898\u8f6c\u6362\u4e3a\u4e86\uff0c\u627e\u5230\u8fd9\u4e2a\u8303\u56f4\u5185 $S$ \u7684\u4e2a\u6570\uff0c\u540c\u65f6\u6ee1\u8db3\u5220\u8fb9\u4e0d\u5728 $x$ \u7684\u5b50\u6811\u5185\u3002\u8003\u8651\u6c42\u51fa\u6ee1\u8db3\u524d\u8005\u7684\u4e2a\u6570\uff0c\u7136\u540e\u51cf\u53bb\u6ee1\u8db3\u524d\u8005\u4f46\u4e0d\u6ee1\u8db3\u540e\u8005\u7684\u4e2a\u6570\u3002\u6ee1\u8db3\u524d\u8005\u7684\u4e2a\u6570\uff0c\u5b9e\u9645\u4e0a\u53ea\u9700\u5f00\u4e00\u4e2a\u6743\u503c\u6811\u72b6\u6570\u7ec4\uff0c\u52a8\u6001\u7ef4\u62a4**\u5bf9\u4e8e** $x$ **\u6765\u8bf4** \u7684 $S$ \u503c\u3002\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bf4\u5462\uff1f\u56e0\u4e3a\u540c\u6837\u662f\u5220\u9664\u4e00\u6761\u8fb9\uff0c\u5bf9\u4e8e\u8fd9\u6761\u8fb9\u4ee5\u4e0b\u7684\u70b9\uff0c\u5b83\u4eec\u7684 $S$ \u5b9e\u9645\u4e0a\u662f\u5305\u542b\u6839\u8282\u70b9\u7684\u65b0\u6811\uff0c\u5bf9\u4e8e\u5176\u5b83\u7684\u70b9\uff0c\u4ed6\u4eec\u7684 $S$ \u5b9e\u9645\u4e0a\u662f\u4e0d\u5305\u542b\u6839\u8282\u70b9\u7684\u65b0\u6811\u3002\u5728\u6df1\u641c\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9\u5904\u7406\u5b8c\u9a6c\u4e0a\u5c31\u662f\u5b83\u7684\u5b50\u6811\u5185\u7684\u70b9\uff0c\u5229\u7528\u8fd9\u4e2a\u53bb\u52a8\u6001\u7ef4\u62a4\u5c31\u597d\u3002\n\n\u7136\u540e\u8003\u8651\u6ee1\u8db3\u524d\u8005\u4f46\u4e0d\u6ee1\u8db3\u540e\u8005\u7684\u4e2a\u6570\u3002\u7ebf\u6bb5\u6811\u5408\u5e76\u56fa\u7136\u53ef\u505a\uff0c\u4f46\u662f\u5f15\u7528\u67d0\u961f\u7237\u7684\u8bdd\uff1a\n\n> \u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u5c0f\u9898\u5927\u4f5c\u4e86\u5427\u3002\n\n\u55ef\uff0c\u8003\u8651\u5230\u521a\u8fdb\u5165\u4e00\u4e2a\u8282\u70b9\u548c\u51c6\u5907\u79bb\u5f00\u8fd9\u4e2a\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u591a\u5904\u7406\u4e86\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u4fe1\u606f\uff0c\u5229\u7528\u8fd9\u4e2a\u4f5c\u5dee\u5373\u53ef\uff0c\u8003\u8651\u5230\u6211\u4eec\u53ea\u8981\u5220\u7684\u8fb9\u5728 $x$ \u7684\u5b50\u6811\u5185\uff0c\u6545 $S$ \u5b9e\u9645\u4e0a\u53ea\u80fd\u662f\u4e0d\u5305\u542b\u6839\u8282\u70b9\u7684\u65b0\u6811\uff0c\u8fd9\u5c31\u5341\u5206\u7b80\u5355\u4e86\u3002\n\n\u8fd8\u6709 $x$ \u4e3a\u6839\u7684\u60c5\u51b5\u6ca1\u6709\u89e3\u51b3\u5462\u3002\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u6ce8\u610f\u6839\u7684\u91cd\u513f\u5b50 $u$ \u548c\u6b21\u91cd\u513f\u5b50 $v$\uff0c\u8003\u8651\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u82e5\u5220\u9664\u7684\u8fb9\u4e0d\u5728\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u90a3\u4e48\u53ea\u9700\u6ee1\u8db3\uff08\u6b64\u5904\u501f\u7531\u4e0a\u6587\u6574\u9664\u7684\u6027\u8d28\u5e76\u4e14\u6574\u7406\u8fc7\u5f0f\u5b50\uff09\uff1a\n\n$$S\\le n-2s_u$$\n\n\u82e5\u5220\u9664\u7684\u8fb9\u5728\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u8003\u8651\u4e24\u6761\u9650\u5236\uff1a\n\n $$2s_u-n\\le S\\le n-2s_v$$\n\n\u6ce8\u610f\u5230\u524d\u9762\u662f\u4e2a\u8d1f\u6570\uff0c\u65e0\u610f\u4e49\uff0c\u90a3\u4e48\u5176\u5b9e\u5c31\u662f\uff1a\n\n$$S\\le n-2s_v$$\n\n\u8fd9\u4e9b\u53ef\u4ee5\u628a\u6bcf\u4e2a\u70b9\u679a\u4e3e\u8fc7\u53bb\u89e3\u51b3\u3002\n\n##### $\\text{Code}$\n\n```cpp\n#include<bits/stdc++.h>\n#define REG register\n#define MAXN 300005\n#define LL long long\n#define FORE(i,now) for(REG int i=head[now];i;i=ed[i].nxt)\nusing namespace std;\ninline int read(){\n    REG int x(0);\n    REG char c=getchar();\n    while(!isdigit(c)) c=getchar();\n    while(isdigit(c)) x=(x*10)+(c^48),c=getchar();\n    return x;\n} \ninline void Swap(int& a,int& b){int t=a;a=b,b=t;}\n\nint T,n;\nstruct Edge{\n    int v,nxt;\n}ed[MAXN<<1];\nint head[MAXN],cnt;\ninline void adde(int u,int v){\n    ed[++cnt]=(Edge){v,head[u]};\n    head[u]=cnt;\n}\ninline void add(int u,int v){\n    adde(u,v),adde(v,u);\n}\n\nint s[MAXN],g[MAXN],Dir[MAXN],rt,Fir,Sec;\nLL ans;\n\nstruct t{\n    int c[MAXN];\n    inline void Clear(){memset(c,0,sizeof c);}\n    inline void Upd(int pos,int k){++pos;for(;pos<=n+1;pos+=pos&-pos)c[pos]+=k;}\n    inline int Ask(int pos){++pos;int ans=0;for(;pos;pos-=pos&-pos)ans+=c[pos];return ans;}\n}c1,c2;\n\nvoid Find_rt(int now,int fa){\n    s[now]=1,g[now]=0;\n    FORE(i,now){\n        int v=ed[i].v;\n        if(v==fa) continue;\n        Find_rt(v,now);\n        s[now]+=s[v];\n        if(s[v]>g[now]) g[now]=s[v];\n    }\n    if(g[now]<=(n>>1)&&n-s[now]<=(n>>1)) rt=now;\n}\n\nvoid ReBuild(int now,int fa){\n    s[now]=1,g[now]=0;\n    FORE(i,now){\n        int v=ed[i].v;\n        if(v==fa) continue;\n        ReBuild(v,now);\n        s[now]+=s[v];\n        if(s[v]>g[now]) g[now]=s[v];\n    }\n}\n\nvoid Solve(int now,int fa){\n    c1.Upd(s[now],-1),c1.Upd(n-s[now],1),c2.Upd(s[now],1);\n    Dir[now]|=Dir[fa];\n    if(now^rt){\n        ans+=(LL)now*(c1.Ask(n-2*g[now])-c1.Ask(n-2*s[now]-1));\n        ans+=(LL)now*(c2.Ask(n-2*g[now])-c2.Ask(n-2*s[now]-1));\n        ans+=(LL)rt*(s[now]<=n-2*s[Dir[now]?Sec:Fir]);\n    }\n    FORE(i,now){\n        int v=ed[i].v;\n        if(v==fa) continue;\n        Solve(v,now);\n    }\n    if(now^rt)\n        ans-=(LL)now*(c2.Ask(n-2*g[now])-c2.Ask(n-2*s[now]-1));\n    c1.Upd(s[now],1),c1.Upd(n-s[now],-1);\n    \n}\n\nvoid Init(){\n    memset(head,0,sizeof head);\n    memset(Dir,0,sizeof Dir);\n    cnt=0;\n    c1.Clear(),c2.Clear();\n    Fir=Sec=ans=0;\n    n=read();\n    for(REG int i=1;i<n;++i) add(read(),read());\n    Find_rt(1,0);\n    ReBuild(rt,0);\n    FORE(i,rt){\n        int v=ed[i].v;\n        if(s[v]>s[Sec]) Sec=v;\n        if(s[Sec]>s[Fir]) Swap(Fir,Sec);\n    }\n    for(REG int i=1;i<=n;++i) c1.Upd(s[i],1);\n    Dir[Fir]=1;\n    Solve(rt,0);\n}\n\nint main(){\n    T=read();\n    while(T--){\n        Init();\n        printf(\"%lld\\n\",ans);\n    }\n}\n```",
        "postTime": 1578321146,
        "uid": 83547,
        "name": "LCuter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5666 \u3010\u6811\u7684\u91cd\u5fc3\u3011"
    }
]