[
    {
        "content": "\uff08\u672c\u6587\u5df2\u88ab\u9609\u5272\uff0c\u539f\u6587 [\u5e7f\u4e49 $\\text{SAM}$ \u8be6\u89e3](https://www.luogu.com.cn/blog/ChenXingLing/solution-p6139) \u8fdb\u884c\u589e\u4fee\u540e\u8f6c\u5230\u4e86[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P6139)\u5904\uff09\n\n\n\u4f20\u9001\u95e8\uff1a[\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61 $\\text{[ZJOI2015] [P3346]}$](https://www.luogu.com.cn/problem/P3346) [$\\text{[Bzoj3926]}$](https://www.lydsy.com/JudgeOnline/problem.php?id=3926)\n\n### **\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u7ed9\u51fa\u4e00\u9897\u53f6\u5b50\u7ed3\u70b9\u4e0d\u8d85\u8fc7 $20$ \u4e2a\u7684\u65e0\u6839\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2a\u4e0d\u8d85\u8fc7 $10$ \u7684\u6570\u5b57\uff0c\u6c42\u6811\u4e0a\u672c\u8d28\u4e0d\u540c\u7684\u8def\u5f84\u4e2a\u6570\uff08\u4e24\u6761\u8def\u5f84\u76f8\u540c\u5b9a\u4e49\u4e3a\uff1a\u5176\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u4e0a\u7684\u6570\u5b57\u4f9d\u6b21\u76f8\u8fde\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u76f8\u540c\uff09\u3002\n\n### **\u3010\u5206\u6790\u3011**\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5f88\u9ebb\u70e6\u7684\u5730\u65b9\u662f\u8def\u5f84\u53ef\u4ee5\u62d0\u5f2f\uff08\u5373\u4e24\u7aef\u70b9\u5206\u522b\u5728\u5176 $lca$ \u4e24\u4e2a\u4e0d\u540c\u513f\u5b50\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff09\uff0c\u800c $\\text{Trie}$ \u6811\u548c\u5404\u79cd\u81ea\u52a8\u673a\u5728\u201c\u63a5\u53d7\u201d\u5b57\u7b26\u4e32\u65f6\u90fd\u662f\u4ee5\u6839\u4e3a\u8d77\u70b9\u4ece\u4e0a\u5f80\u4e0b\u5f84\u76f4\u8d70\u5230\u5e95\uff08\u4ec0\u4e48\uff1f\u8df3 $parent$ \u6811\uff1f\u4f60\u8df3\u4efb\u4f60\u8df3\uff0c\u8df3\u5b8c\u8fd8\u662f\u76f4\u7684\uff09\n\n\u6240\u4ee5\u8981\u60f3\u529e\u6cd5\u628a\u8def\u5f84\u634b\u76f4\uff0c\u778e $yy$ \u53ef\u80fd\u4e0d\u592a\u5bb9\u6613\u60f3\u51fa\u6765\uff0c\u8fd9\u91cc\u76f4\u63a5\u629b\u7ed3\u8bba\uff1a\n\n> \u4e00\u9897\u65e0\u6839\u6811\u4e0a\u4efb\u610f\u4e00\u6761\u8def\u5f84\u5fc5\u5b9a\u53ef\u4ee5\u5728\u4ee5\u67d0\u4e2a\u53f6\u8282\u70b9\u4e3a\u6839\u65f6\uff0c\u53d8\u6210**\u4e00\u6761\u4ece\u4e0a\u5230\u4e0b\u7684\u8def\u5f84**\uff08\u5229\u4e8e\u5e7f\u4e49     $\\text{SAM}$ \u7684\u4f7f\u7528\uff09\u3002\n\n\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u8bf4\u53f6\u8282\u70b9\u4e0d\u8d85\u8fc7 $20$ \u4e2a\uff0c\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\uff1f\n\n\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53f6\u8282\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\u904d\u5386\u6574\u68f5\u6811\u554a\uff01\n\n**\u5c06\u4e00\u5171 $cnt_{leaf}$ \u9897\u6811\u4e2d\u7684\u6240\u6709\u524d\u7f00\u4e32\u90fd\u62bd\u51fa\u6765\u5efa\u7acb\u5e7f\u4e49 $\\text{SAM}$\uff0c\u7136\u540e\u76f4\u63a5\u6c42\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u3002** \u5176\u4e2d\u524d\u7f00\u4e32\u5b9a\u4e49\u4e3a\u4ece\u6839\u8282\u70b9\uff08\u65e0\u6839\u6811\u7684\u67d0\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff09\u5230\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u6240\u6784\u6210\u7684\u5b57\u7b26\u4e32\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06 $cnt_{leaf}$ \u9897 $\\text{Trie}$ \u6811\u5408\u5728\u4e86\u4e00\u8d77\u8dd1\u5e7f\u4e49 $\\text{SAM}$\uff09\u3002\n\n**\u6ce8\u610f\u6570\u7ec4\u5927\u5c0f\u548c\u7a7a\u95f4\u9650\u5236\u3002**\n\n### **\u3010Code (\u79bb\u7ebf)\u3011**\n\n\uff08\u672c\u9898 $\\text{Trie}$ \u6811\u7684\u6784\u9020\u65b9\u6cd5\u4e0e\u5176\u4ed6\u76f8\u6bd4\u8f83\u4e3a\u7279\u522b\uff09\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define Re register int\n#define LL long long\nusing namespace std;\nconst int N=4e6+5,N20=2e6+3,Nn=1e5+3;\nint n,m,o,x,y,t,C,du[Nn],co[Nn],head[Nn];LL ans;\nstruct QAQ{int to,next;}a[Nn<<1];\ninline void add(Re x,Re y){a[++o].to=y,a[o].next=head[x],head[x]=o;}\ninline void in(Re &x){\n    int fu=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')fu|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=fu?-x:x;\n}\nstruct Trie{\n    int O,c[N20],fa[N20],tr[N20][10];\n    Trie(){O=1;}\n    inline int insert(Re p,Re ch){//\u5728p\u540e\u9762\u63d2\u5165\u4e00\u4e2ach\n        if(!tr[p][ch])tr[p][ch]=++O,c[O]=ch,fa[O]=p;\n        return tr[p][ch];\n    }\n}T1;\nstruct Suffix_Automaton{    \n    int O,pos[N],link[N],trans[N][10],maxlen[N];queue<int>Q;\n    Suffix_Automaton(){O=1;}\n    inline int insert(Re ch,Re last){\n        Re x,y,z=++O,p=last;maxlen[z]=maxlen[last]+1;\n        while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n        if(!p)link[z]=1;\n        else{\n            x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])link[z]=x;\n            else{\n                y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<C;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[z]=link[x]=y;\n            }\n        }\n        return z;\n    }\n    inline void build(){ \n        for(Re i=0;i<C;++i)if(T1.tr[1][i])Q.push(T1.tr[1][i]);\n        pos[1]=1;\n        while(!Q.empty()){\n            Re x=Q.front();Q.pop();\n            pos[x]=insert(T1.c[x],pos[T1.fa[x]]);\n            for(Re i=0;i<C;++i)if(T1.tr[x][i])Q.push(T1.tr[x][i]);\n        }\n    }\n    inline void sakura(){\n        for(Re i=2;i<=O;++i)ans+=maxlen[i]-maxlen[link[i]];\n        printf(\"%lld\\n\",ans); \n    }\n}SAM;\ninline void dfs(Re x,Re fa,Re fap){//\u904d\u5386\u6784\u9020Trie\u6811 \n    Re xp=T1.insert(fap,co[x]);//\u8bb0\u5f55\u5728Trie\u6811\u4e0a\u7684\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u4e0b\u6b21\u76f4\u63a5\u4f7f\u7528\n    for(Re i=head[x],to;i;i=a[i].next)\n        if((to=a[i].to)!=fa)dfs(to,x,xp);\n}\nint main(){\n//  freopen(\"123.txt\",\"r\",stdin);\n    in(n),in(C),m=n-1;\n    for(Re i=1;i<=n;++i)in(co[i]);\n    while(m--)in(x),in(y),add(x,y),add(y,x),++du[x],++du[y];\n    for(Re i=1;i<=n;++i)if(du[i]==1)dfs(i,0,1);//\u4f9d\u6b21\u628a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u4f5c\u4e3a\u6839\u63d2\u5165Trie\u6811\n    SAM.build(),SAM.sakura();\n}\n```\n\n### **\u3010Code (\u5728\u7ebf)\u3011**\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define Re register int\n#define LL long long\nusing namespace std;\nconst int N=4e6+5,N20=2e6+3,Nn=1e5+3;\nint n,m,o,x,y,t,C,du[Nn],co[Nn],head[Nn];LL ans;\nstruct QAQ{int to,next;}a[Nn<<1];\ninline void add(Re x,Re y){a[++o].to=y,a[o].next=head[x],head[x]=o;}\ninline void in(Re &x){\n    int fu=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')fu|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=fu?-x:x;\n}\nstruct Suffix_Automaton{\n    int O,link[N],trans[N][10],maxlen[N];\n    Suffix_Automaton(){O=1;}\n    inline int insert(Re ch,Re last){\n        if(trans[last][ch]){\n            Re p=last,x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])return x;\n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<10;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[x]=y;\n                return y;\n            }\n        }\n        Re z=++O,p=last;maxlen[z]=maxlen[last]+1;\n        while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n        if(!p)link[z]=1;\n        else{\n            Re x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])link[z]=x;\n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<10;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[z]=link[x]=y;\n            }\n        }\n        return z;\n    }\n    inline void sakura(){\n        for(Re i=2;i<=O;++i)ans+=maxlen[i]-maxlen[link[i]];\n        printf(\"%lld\\n\",ans); \n    }\n}SAM;\ninline void dfs(Re x,Re fa,Re fap){//\u904d\u5386\u5728\u7ebf\u6784\u9020SAM\n    Re xp=SAM.insert(co[x],fap);//\u8bb0\u5f55x\u5728SAM\u4e0a\u7684\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u4e0b\u6b21\u76f4\u63a5\u4f7f\u7528\n    for(Re i=head[x],to;i;i=a[i].next)\n        if((to=a[i].to)!=fa)dfs(to,x,xp);\n}\nint main(){\n//  freopen(\"123.txt\",\"r\",stdin);\n    in(n),in(C),m=n-1;\n    for(Re i=1;i<=n;++i)in(co[i]);\n    while(m--)in(x),in(y),add(x,y),add(y,x),++du[x],++du[y];\n    for(Re i=1;i<=n;++i)if(du[i]==1)dfs(i,0,1);//\u4f9d\u6b21\u628a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u4f5c\u4e3a\u6839\u63d2\u5165Trie\u6811\n    SAM.sakura();\n}\n```",
        "postTime": 1576291367,
        "uid": 110985,
        "name": "\u8fb0\u661f\u51cc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3346 \u3010[ZJOI2015]\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u8ba4\u4e3als\u7684\u9898\u89e3\u5b58\u5728\u95ee\u9898\u3002\u4e0d\u77e5\u9053\u697c\u4e0a\u795e\u7287\u53ef\u5426\u6709\u7a7a\u8ddf\u672c\u849f\u84bb\u804a\u804a\u6b64\u9898\u6b63\u89e3\uff1f\n\n\u8fd9\u662f2015\u5e74NOI\u96c6\u8bad\u961f15\u4eba\u8bba\u6587\u9898\uff0c\u505a\u6cd5\u5c31\u662f\u5728Trie\u4e0a\u505a\u540e\u7f00\u81ea\u52a8\u673a\u3002\u8fd9\u6837\u7684\u8bdd\u5efa\u7acb\u7684\u5c31\u662f\u4e00\u4e2a\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u3002\n\n\u6211\u6765\u7b80\u5355\u8bf4\u4e0b\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u7684\u6ce8\u610f\u70b9\u5427\uff1a\n\n\u7b80\u5355\u7684\u5b9e\u73b0\u53ef\u4ee5\u6bcf\u6b21ins\u5b8c\u4e86\u4e4b\u540e\uff0c\u5c06\u5f53\u524d\u6307\u9488\u6307\u56deSAM\u7684\u6839\u8282\u70b9\u3002\n\n**\u4f46\u662f\u8fd9\u5fc5\u987b\u5728\u4fdd\u8bc1\u6bcf\u6b21\u52a0\u5165\u7684\u4e32\u4e0d\u4f1a\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u624d\u53ef\u4ee5\u5b9e\u73b0\u3002\u5426\u5219\u4f1a\u5bfc\u81f4\u91cd\u590d\u52a0\u70b9\u7684\u5f88\u591a\u95ee\u9898\u3002**\n\n\u6240\u4ee5\u6b63\u786e\u7684\u505a\u6cd5\u662f\u6bcf\u6b21\u52a0\u5165\u524d\u5224\u65ad\u5f53\u524d\u8282\u70b9\u5728SAM\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\uff0c\u518d\u505a\u51fa\u5224\u65ad\u5373\u53ef\u3002\n\n\u8be6\u7ec6\u8fd8\u8bf7\u89c1\u6e90\u4ee3\u7801\u3002\n\n```cpp\n//                                                     /*[*/#include<stdio.h>//\n//                         #include<stdlib.h>//]++++[->++[->+>++++<<]<][(c)2013]\n//                        #ifndef                                           e//[o\n//                       #include<string.h>//]![misaka.c,size=3808,crc=d0ec3b36][\n//                      #define e                                           0x1//\n//                     typedef struct{int d,b,o,P;char*q,*p;}f;int p,q,d,b,_=0//|\n//                  #include __FILE__//]>>>[->+>++<<]<[-<<+>>>++<]>>+MISAKA*IMOUTO\n//                #undef e//[->[-<<+<+<+>>>>]<<<<<++[->>+>>>+<<<<<]>+>+++>+++[>]]b\n//             #define e(c)/**/if((_!=__LINE__?(_=__LINE__):0)){c;}//[20002,+[-.+]\n//            ,O,i=0,Q=sizeof(f);static f*P;static FILE*t;static const char*o[]={//\n//          \"\\n\\40\\\"8oCan\\40not\\40open %s\\n\\0aaFbfeccdeaEbgecbbcda6bcedd#e(bbed$bbd\",\n//        \"a6bgcdbbccd#ead$c%bcdea7bccde*b$eebbdda9bsdbeccdbbecdcbbcceed#eaa&bae$cbe\",\n//       \"e&cbdd$eldbdeedbbdede)bdcdea&bbde1bedbbcc&b#ccdee&bdcdea'bbcd)e'bad(bae&bccd\",\n//      \"e&bbda1bdcdee$bbce#b$c&bdedcd%ecdca4bhcdeebbcd#e$b#ecdcc$bccda7bbcc#e#d%c*bbda\",\n//     \">bad/bbda\"};static int S(){return(o[p][q]);}static/**/int/**/Z=0  ;void/**/z(int//\n//    l){if(/**/Z-l){Z=l;q++;if(p<b*5&&!S()){p+=b;q=0;}}}int main(int I,    /**/char**l){//\n//   d=sizeof(f*);if(1<(O=_)){b=((sizeof(o)/sizeof(char*))-1)/4;q=22; p=     0;while(p<b*5){\n//  /*<*/if(Z-1){d=S()>96;i=S()-(d?96:32) ;q++;if(p<b*5&&!S()){p+=b;  q=      0;}Z=1;}/*[[*/\n//  while(i){_=o[0][S()-97];I=_-10?b:1;   for( ;I--;)putchar(_ );if   (!      --i||d)z(~i );}\n// if(p==b*5&&O){p-=b;O--;}}return 0U;   }if(! (P=( f*)calloc /*]*/  (Q        ,I)))return 1;\n// {;}for(_=p=1;p<I;p++){e(q=1);while    (q<   p&&  strcmp(  l[p     ]         ,l[(q)]))++  q;\n// t=stdin;if(q<p){(void)memcpy/* \"      */    (&P  [p],&P   [q     ]          ,Q);continue ;}\n//if(strcmp(l[p],\"-\")){t=fopen(l         [     p]   ,\"rb\"   )                  ;if(!t ){{;}  ;\n//printf(05+*o,l[p ]);return+1;                      {;}                       }}_=b= 1<<16   ;\n//*&O=5;do{if(!(P[p].q=realloc   (P[p].q,(P[p].P     +=       b)+1))){return   01;}O   &=72   /\n//6/*][*/;P[p].o+=d=fread(P[p]      .q       +P[     p           ].       o,  1,b,t)   ;}//\n// while(d==b)      ;P [p].q[       P[       p]                  .o       ]=  012;d    =0;\n// e(fclose(t        )  );P         [p]      .p                  =P[      p]  .q;if    (O)\n// {for(;d<P[            p]          .o     ;d=                   q+     1)    {q=     d;\n//  while(q<P[                        p].o&&P[                    p].q[q]-     10     ){\n//  q++;}b=q-d;                         _=P                         [p].        d     ;\n//  if(b>_){/*]b                                                                */\n//   P[p].d=b;}{;                                                                }\n//   #undef/*pqdz'.*/  e//                                                      ;\n//   #define/*s8qdb]*/e/**/0                                                   //\n//   //<<.<<.----.>.<<.>++.++<                                              .[>]\n//   /*P[*/P[p].b++;continue;}}}t=                                       stdout;\n//  for (p=1;p<I;p++){/**/if(P[p].b>i                               ){i=P[p].b;}}\n// if  (O){for(p=0;p<i;p++){q=0;/*[*/while(I               >++q){_=P[q].p-P[q ].q;\n//b=   0;if(_<P[q ].o){while(012-*P[q].p)     {putchar(*(P[q].p++));b++;}P[q]. p++;\n//}   ;while (P[  q].d>b++)putchar(040);}             putchar(10);}return 0;}p   =1;\n//   for(;   p<I   ;p++)fwrite(P[p] .q,P[              p].o,1,t);return 0 ;}//\n//  #/*]     ]<.    [-]<[-]<[- ]<[    -]<               [-  ]<;*/elif  e    //b\n// |(1        <<     ( __LINE__        /*               >>   `*//45))  |     01U\n//             #                       /*               */     endif            //\n#include<bits/stdc++.h>\ntypedef long long ll;\n#define N 4000005\nusing namespace std;\nll ans=0;\nint n,m,d[N],head[N],tot=0;\nstruct Edge{\n    int u,v,next;\n}G[N];\nvoid addedge(int u,int v){\n    G[++tot].u=u;G[tot].v=v;G[tot].next=head[u];head[u]=tot;\n    G[++tot].u=v;G[tot].v=u;G[tot].next=head[v];head[v]=tot;\n}\nstruct SuffixAutoMaton{\n    int ch[N][10],fa[N],l[N];\n    int rt,last,cnt;\n    void init(){rt=last=++cnt;}\n    int newnode(int x){l[++cnt]=x;return cnt;}\n    int ins(int p,int c){\n        if(ch[p][c]){\n            int q=ch[p][c];\n            if(l[q]==l[p]+1)last=q;\n            else{\n                int nq=newnode(l[p]+1);last=nq;\n                memcpy(ch[nq],ch[q],sizeof(ch[q]));\n                fa[nq]=fa[q];fa[q]=nq;\n                for(;ch[p][c]==q;p=fa[p])ch[p][c]=nq;\n            }\n        }\n        else{\n            int np=newnode(l[p]+1);last=np;\n            for(;p&&(!ch[p][c]);p=fa[p])ch[p][c]=np;\n            if(!p)fa[np]=rt;\n            else{\n                int q=ch[p][c];\n                if(l[q]==l[p]+1)fa[np]=q;\n                else{\n                    int nq=newnode(l[p]+1);\n                    memcpy(ch[nq],ch[q],sizeof(ch[q]));\n                    fa[nq]=fa[q];fa[q]=fa[np]=nq;\n                    for(;ch[p][c]==q;p=fa[p])ch[p][c]=nq;\n                }\n            }\n        }\n        return last;\n    }\n    void calc(){\n        ans=0;\n        for(int i=1;i<=cnt;i++)ans+=l[i]-l[fa[i]];\n    }\n}sam;\nint val[N];\nvoid dfs(int u,int f,int p){\n    int t=sam.ins(p,val[u]);\n    for(int i=head[u];i;i=G[i].next){\n        int v=G[i].v;if(v==f)continue;\n        dfs(v,u,t);\n    }\n}\ninline int read(){\n    int f=1,x=0;char ch;\n    do{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');\n    do{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n    return f*x;\n}\nint main(){\n    n=read();m=read();sam.init();\n    for(int i=1;i<=n;i++)val[i]=read();\n    for(int i=1;i<n;i++){\n        int u=read(),v=read();\n        addedge(u,v);d[u]++;d[v]++;\n    }\n    for(int i=1;i<=n;i++)if(d[i]==1)dfs(i,0,sam.rt);\n    sam.calc();\n    cout<<ans<<endl;\n}\n```\n\u554a\uff1f\u4f60\u95ee\u6211\u54ea\u6765\u7684\u5fa1\u5742\u59b9\u59b9\uff1f\u77e5\u4e4e\u4e0a\u6284\u6765\u7684\u3002\n\nhttp://www.ioccc.org/2013/misaka/misaka.c\n",
        "postTime": 1492183381,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3346 \u3010[ZJOI2015]\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u9898\u610f:\u6811\u4e0a\u4efb\u9009\u4e00\u6761\u8def\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u989c\u8272\u5e8f\u5217\u4e0d\u540c\u7684\u9009\u62e9\u3002\n\n\u7531\u4e8e\u53ea\u670920\u4e2a\u53f6\u5b50\uff0c\u800c\u4e00\u6761\u8def\u4e00\u5b9a\u662f\u4ee5\u8d77\u70b9\u7684\u5b50\u6811\u91cc\u67d0\u4e2a\u53f6\u5b50\u4e3a\u6839\u7684\u6811\u4e0a\u7684\u4e00\u6761\uff0c\n\n\u628a\u6bcf\u4e2a\u53f6\u5b50\u4e3a\u6839\u7684\u6811\u63d2\u5230trie\u91cc\uff0c\u4e4b\u540e\u5c31\u662f\u95eetrie\u91cc\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u5b50\u4e32\u3002\n\n\u5728trie\u4e0a\u8dd1\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u4e4b\u540esam\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684max-min+1\u5c31\u662f\u4ed6\u6240\u4ee3\u8868\u7684\u5b50\u4e32\u7684\u4e2a\u6570\uff0c\n\n\u800c\u4e14\u5df2\u7ecf\u6240\u6709\u5b50\u4e32\u90fd\u5305\u62ec\u8fdb\u53bb\u4e86\u3002\n\n\u800cmax\u5c31\u662f\u4ed6\u7684len\uff1bmin\u5c31\u662fparent\u7684len+1\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4e0d\u7528\u771f\u7684\u5efatrie\uff0c\u76f4\u63a5\u63d2\u5230sam\u91cc\u5c31\u884c\u4e86\uff0c\u53cd\u6b63\u6709\u76f8\u540c\u7684\u4e5f\u4f1a\u88ab\u5f53\u4f5c\u53e6\u4e00\u4e2a\u7684parent\u3002\n\n```cpp\n#include<cstdio>\nusing namespace std;\n\n#define ll long long\n#define N 100010\n#define TOT 2000000\nint col[N];\nint n,C,x,y,i;\nint du[N],t[N];\nstruct edge\n{\n    int to,next;\n}l[N<<1];\nvoid add_e(int x,int y)\n{\n    static int num=0;\n    l[++num]=(edge){y,t[x]};t[x]=num;\n    ++du[y];\n}\n\nstruct SAM\n{\n    int pa[TOT],len[TOT],ch[TOT][10],tot;\n    void init()\n    {\n        tot=1;\n        len[0]=-1;for (i=0;i<C;++i) ch[0][i]=1;\n    }\n    \n    int ins(int c,int p)\n    {\n        int np=++tot;len[np]=len[p]+1;\n        for (;!ch[p][c];p=pa[p]) ch[p][c]=np;\n        int q=ch[p][c];\n        if (len[q]==len[p]+1) pa[np]=q;\n        else\n        {\n           int nq=++tot;\n           len[nq]=len[p]+1;\n           pa[nq]=pa[q];for (int i=0;i<C;++i) ch[nq][i]=ch[q][i];\n           pa[q]=pa[np]=nq;\n           for (;ch[p][c]==q;p=pa[p]) ch[p][c]=nq;\n        }\n        return np;\n    }\n    \n    void calc_ans()\n    {\n        ll ans=0;\n        for (i=2;i<=tot;++i) ans+=len[i]-len[pa[i]];\n        printf(\"%lld\",ans);\n    }\n}sam;\n\n  void travel(int x,int from,int p)\n  {\n        p=sam.ins(col[x],p);\n      for (int i=t[x];i;i=l[i].next)\n      if ((y=l[i].to)!=from)\n            travel(y,x,p);\n  } \n\nint main()\n{\n    //freopen(\"1.in\",\"r\",stdin);freopen(\"1.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&C);\n    int i;\n    for (i=1;i<=n;++i) scanf(\"%d\",col+i);\n    for (i=1;i<n;++i)\n    {\n        scanf(\"%d%d\",&x,&y);\n        add_e(x,y);add_e(y,x);\n    }\n    sam.init();\n    for (i=1;i<=n;++i)\n    if (du[i]==1) travel(i,0,1);\n    sam.calc_ans();\n}\n```",
        "postTime": 1485594009,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3346 \u3010[ZJOI2015]\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u6765\u4e00\u4e2a\u540e\u7f00\u6570\u7ec4\u7684\u89e3\u6cd5\u3002\n\n\u9996\u5148\u53d1\u73b0\u4e00\u4e2a\u6bd4\u8f83\u5947\u5999\u7684\u4e8b\u60c5\uff0c\u5c31\u662f\u53f6\u5b50\u7ed3\u70b9\u6570 $k\\le 20$\u3002\u6240\u4ee5\u6211\u4eec\u628a\u4e24\u4e24\u53f6\u5b50\u7ed3\u70b9\u5f62\u6210\u7684\u94fe\u63d0\u53d6\u51fa\u6765\uff0c\u80fd\u5f97\u5230 $k^2$ \u4e2a\u5b57\u7b26\u4e32 $S_{1\\dots k^2}$\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u7ed9\u5b9a $t$ \u4e2a\u4e32\uff0c\u95ee\u6709\u591a\u5c11\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\uff0c$t\\le 400$\u3002\n\n\u9996\u5148\u8003\u8651 $t=1$ \u7684\u60c5\u51b5\u3002\u540e\u7f00\u6570\u7ec4\u89e3\u51b3\u65b9\u5f0f\u662f\u5b50\u4e32\u603b\u6570\u51cf\u53bb\u6240\u6709 $height$\u3002\n\n\u53d1\u73b0\u5b50\u4e32\u603b\u6570\u7b49\u4ef7\u4e8e\u6211\u4eec\u9009\u53d6\u7684\u603b\u65b9\u6848\u6570\uff0c\u6240\u6709 $height$ \u7b49\u4ef7\u4e8e\u91cd\u590d\u9009\u53d6\u7684\u65b9\u6848\u6570\u3002\n\n\u6269\u5c55\u5230 $t$ \u4e2a\u4e32\u7684\u60c5\u51b5\uff0c\u9009\u53d6\u7684\u603b\u65b9\u6848\u6570\u4e3a $\\sum\\limits_{i=1}^t \\frac 1 2 |S_i|\\times\\left(|S_i|+1\\right)$\u3002\u8fd9\u4e00\u90e8\u5206\u6211\u4eec\u53ef\u4ee5 $O(t)$ \u89e3\u51b3\u3002\n\n\u5bf9\u4e8e\u91cd\u590d\u9009\u53d6\uff0c\u5c06\u6240\u6709\u4e32\u63a5\u5728\u4e00\u8d77\u5e76\u6dfb\u52a0\u5206\u9694\u7b26\uff0c\u4f9d\u7136\u8fd8\u662f\u6240\u6709 $height$ \u7684\u548c\u3002\n\n\u6700\u540e\u8fd9\u4e24\u90e8\u5206\u76f8\u51cf\u5373\u53ef\u3002\n\n\u8003\u8651\u63d0\u53d6\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\uff0c\u9884\u5904\u7406\u51fa lca\uff0c\u7136\u540e\u66b4\u529b\u63d0\u53d6\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(\\sum |S|)$\u3002\u8003\u8651\u5982\u4f55\u6784\u9020\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u3001$k$ \u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u6811\uff0c\u80fd\u8ba9\u8fd9\u4e2a\u8fbe\u5230\u6700\u5927\u3002\n\n\u7b54\u6848\u662f $\\sum|S|\\le 2nk$\u3002\u8003\u8651 $n=k+1$\uff0c\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u83ca\u82b1\u56fe\u5373\u53ef\u3002\u9010\u6b65\u6dfb\u52a0\u70b9\uff0c\u53d1\u73b0\u4e00\u76f4\u586b\u94fe\u662f\u6700\u4f18\u7684\uff0c\u5e76\u4e14 $k$ \u6761\u94fe\u5404\u81ea\u7684\u957f\u5ea6\u5bf9\u603b\u957f\u6ca1\u6709\u5f71\u54cd\u3002\u6240\u4ee5\u6700\u540e\u7b49\u4ef7\u4e8e\u6839\u8282\u70b9\u63a5\u51fa $k$ \u6761\u957f\u5ea6\u4e3a $\\frac n k$ \u7684\u94fe\u3002\u6bcf\u4e24\u4e2a\u53f6\u5b50\u7ed3\u70b9\u4e4b\u95f4\u7684\u94fe\u957f $\\frac {2n}k$\uff0c$k^2$ \u6761\u94fe\u603b\u957f $2nk$\u3002\n\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6 $O(2nk+n\\log n)$\uff0c\u4e0a\u754c\u5f88\u677e\uff0c\u4f7f\u7528\u500d\u589e\u6784\u9020 SA \u7684\u8bdd\u4f1a\u591a\u4e00\u4e2a $\\log$\uff0c\u4e0d\u8fc7\u4e5f\u80fd\u8fc7\u3002\u7531\u4e8e\u6211\u4e0d\u4f1a DC3\uff0c\u6240\u4ee5\u4ee3\u7801\u91cc\u653e\u7684\u662f\u500d\u589e\u6784\u9020\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\nint a[100001],rp[4000501],ex=10,n,m;\nint sa[4000501],rk[4000501],height[4000501];\nint tsa[4000501],trk[8000501],cnt[4000501];\nint hed[100001],net[200001],ver[200001],d[100001],tot;\nint lv[100001],k;\nvoid add(int x,int y){\n\tver[++tot]=y;\n\tnet[tot]=hed[x];\n\td[x]++;\n\thed[x]=tot;\n}\nint fa[20][100001],lg[100001],dep[100001];\nvoid dfs(int x){\n\tint i;\n\tdep[x]=dep[fa[0][x]]+1;\n\tif(d[x]==1)lv[++k]=x;\n\tfor(i=hed[x];i;i=net[i]){\n\t\tint y=ver[i];\n\t\tif(y==fa[0][x])continue;\n\t\tfa[0][y]=x;\n\t\tdfs(y);\n\t}\n}\nvoid ycl(){\n\tint i,j;\n\tfor(i=2;i<=n;i++)lg[i]=lg[i/2]+1;\n\tfor(i=1;i<=lg[n];i++)for(j=1;j<=n;j++)fa[i][j]=fa[i-1][fa[i-1][j]];\n}\nint lca(int x,int y){\n\tif(dep[x]<dep[y])x^=y^=x^=y;\n\tint i;\n\tfor(i=lg[n];i>=0;i--){\n\t\tint p=fa[i][x];\n\t\tif(dep[p]<dep[y])continue;\n\t\tx=p;\n\t}\n\tif(x==y)return x;\n\tfor(i=lg[n];i>=0;i--){\n\t\tint p=fa[i][x],q=fa[i][y];\n\t\tif(p==q)continue;\n\t\tx=p;\n\t\ty=q;\n\t}\n\treturn fa[0][x];\n}\nint tmp[100001];\nint tq(int x,int y){\n\tint r=lca(x,y),w=0,i,len;\n\tlen=dep[x]+dep[y]-dep[r]*2+1;\n\twhile(x!=r){\n\t\trp[++m]=a[x];\n\t\tx=fa[0][x];\n\t}\n\twhile(y!=fa[0][r])tmp[++w]=a[y],y=fa[0][y];\n\tfor(i=w;i;i--)rp[++m]=tmp[i];\n\trp[++m]=++ex;\n\treturn len;\n}\nint main(){\n\tint i,j;\n\tscanf(\"%d%d\",&n,&i);\n\tfor(i=1;i<=n;i++)scanf(\"%d\",&a[i]),a[i]++;\n\tfor(i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdfs(1);\n\tycl();\n\tlong long ans=0;\n\tfor(i=1;i<=k;i++){\n\t\tfor(j=1;j<=k;j++){\n\t\t\tif(i==j)continue;\n\t\t\tint res=tq(lv[i],lv[j]);\n\t\t\tans+=1ll*res*(res+1)/2;\n\t\t}\n\t}\n\tfor(i=1;i<=m;i++)rk[i]=rp[i],cnt[rk[i]]++;\n\tfor(i=1;i<=ex;i++)cnt[i]+=cnt[i-1];\n\tfor(i=m;i;i--)sa[cnt[rk[i]]--]=i;\n\tfor(i=1;i<=m;i++){\n\t\tif(rp[sa[i]]==rp[sa[i-1]])rk[sa[i]]=rk[sa[i-1]];\n\t\telse rk[sa[i]]=rk[sa[i-1]]+1;\n\t}\n\tfor(j=1;j<m;j*=2){\n\t\tmemcpy(tsa,sa,m*4+4);\n\t\tmemcpy(trk,rk,m*4+4);\n\t\tint tot=0;\n\t\tfor(i=m;i>m-j;i--)sa[++tot]=i;\n\t\tfor(i=1;i<=m;i++)if(tsa[i]>j)sa[++tot]=tsa[i]-j;;\n\t\tfor(i=1;i<=m;i++)rk[i]=trk[sa[i]];\n\t\tmemset(cnt,0,m*4+4);\n\t\tfor(i=1;i<=m;i++)cnt[rk[i]]++;\n\t\tfor(i=1;i<=m;i++)cnt[i]+=cnt[i-1];\n\t\tfor(i=m;i;i--)tsa[cnt[rk[i]]--]=sa[i];\n\t\tmemcpy(sa,tsa,m*4+4);\n\t\tfor(i=1;i<=m;i++){\n\t\t\tif(trk[sa[i]]==trk[sa[i-1]]&&trk[sa[i]+j]==trk[sa[i-1]+j])rk[sa[i]]=rk[sa[i-1]];;\n\t\t\telse rk[sa[i]]=rk[sa[i-1]]+1;\n\t\t}\n\t\tif(rk[sa[m]]==m){\n\t\t\tfor(i=1;i<=m;i++)sa[rk[i]]=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tint len=0;\n\tfor(i=1;i<=m;i++){\n\t\tif(len)len--;\n\t\twhile(rp[i+len]==rp[sa[rk[i]-1]+len])len++;\n\t\theight[rk[i]]=len;\n\t}\n\tfor(i=1;i<=m;i++)ans-=height[i];\n\tprintf(\"%lld\",ans);\n}\n```",
        "postTime": 1655448185,
        "uid": 128606,
        "name": "2018ljw",
        "ccfLevel": 7,
        "title": "P3346 \u9898\u89e3"
    },
    {
        "content": "### [[ZJOI2015]\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61](https://www.luogu.com.cn/problem/P3346)\n\n\u5bb9\u6613\u53d1\u73b0\u5bf9\u4e8e\u786e\u5b9a\u6839\u7684\u60c5\u51b5\uff0c\u5982\u679c\u76f4\u63a5\u63d2\u5165 $\\text{SAM}$\uff0c\u65e0\u6cd5\u51fa\u73b0\u5728 $\\text{lca}$ \u62d0\u5f2f\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd dfs \u63d2\u5165 $\\text{SAM}$\u4e4b\u4e2d\uff0c\u9898\u76ee\u6027\u8d28\u4fdd\u8bc1\u53f6\u5b50\u4e0d\u8d85\u8fc7 $20$ \u4e2a\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u6b63\u786e\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u8282\u70b9\u4e2a\u6570\u8981\u5f00\u5230 $2\\times 10^6$ \u624d\u884c\uff0c\u5426\u5219\u4f1a\u5728 $70\\sim 75$ \u5206\u6253\u8f6c\u3002\n\n\u4e24\u79cd\u5199\u6cd5\uff0c\u4e00\u79cd\u662f\u5efa\u7acb $\\text{Trie}$\uff0c\u53e6\u4e00\u79cd\u662f\u76f4\u63a5\u5728\u6811\u4e0a\u63d2\u5165\uff0c\u4e24\u79cd\u5199\u6cd5\u7686\u53ef\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7b2c\u4e8c\u79cd\u8981\u52a0\u7279\u5224\u3002\n\n\u63d2\u5165\u5b8c\u540e\uff0c\u76f4\u63a5\u5728 $\\text{SAM}$ \u4e0a\u627e\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u5373\u53ef\uff0c\u62d3\u6251\u6392\u5e8f\u6216\u8005\u76f4\u63a5\u7edf\u8ba1\u7686\u53ef\uff0c\u8fd9\u91cc\u7528\u4e86\u7b80\u5355\u7684 $\\sum mx_{now}-mx_{fa}$\u3002\n\n### $\\text{CODE}$\n\n```cpp\n#include<bits/stdc++.h>\n#define N 2000006\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n,m,s,a[N],du[N],id[N];\nstruct fig\n{\n\tint next,to;\n}k[N*2];int head[N],tot;\nvoid add(int from,int to)\n{\n\tk[++tot].to=to;\n\tk[tot].next=head[from];\n\thead[from]=tot;\n}\nint mx[N*4],ch[N*4][20],awa=1,g[N];\nint Push(int c,int last)\n{\n\tif(ch[last][c])\n\t{\n\t\tint q=ch[last][c],p=last;\n\t\tif(mx[p]+1==mx[q])return q;\n\t\tint nq=++awa;\n\t\tg[nq]=g[q];g[q]=nq;mx[nq]=mx[p]+1;\n\t\tfor(int i=0;i<m;i++)ch[nq][i]=ch[q][i];\n\t\tfor(;p&&ch[p][c]==q;p=g[p])ch[p][c]=nq;\n\t\treturn nq;\n\t}\n\tint np=++awa,p=last;mx[np]=mx[p]+1;\n\tfor(;p&&ch[p][c]==0;p=g[p])ch[p][c]=np;\n\tif(!p)g[np]=1;\n\telse\n\t{\n\t\tint q=ch[p][c];\n\t\tif(mx[p]+1==mx[q])g[np]=q;\n\t\telse\n\t\t{\n\t\t\tint nq=++awa;mx[nq]=mx[p]+1;\n\t\t\tg[nq]=g[q];g[q]=g[np]=nq;\n\t\t\tfor(int i=0;i<m;i++)ch[nq][i]=ch[q][i];\n\t\t\tfor(;p&&ch[p][c]==q;p=g[p])ch[p][c]=nq;\n\t\t}\n\t}\n\treturn np;\n}\nvoid dfs(int now,int f)\n{\n\tid[now]=Push(a[now],id[f]); \n\tfor(int i=head[now];i;i=k[i].next)\n\t{\n\t\tif(k[i].to==f)continue;\n\t\tdfs(k[i].to,now);\n\t}\n}\nsigned main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1,u,v;i<n;i++)\n\t{\n\t\tu=read();v=read();\n\t\tadd(u,v);add(v,u);\n\t\tdu[u]++;du[v]++;\n\t}\n\tid[0]=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(du[i]>1)continue;\n\t\tdfs(i,0);\n\t}\n\tlong long sk=0;\n\tfor(int i=2;i<=awa;i++)sk+=mx[i]-mx[g[i]];\n\tcout<<sk<<\"\\n\";\n\treturn 0;\n}\n```",
        "postTime": 1679659013,
        "uid": 331947,
        "name": "hegm",
        "ccfLevel": 0,
        "title": "P3346 [ZJOI2015]\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61 \u9898\u89e3"
    },
    {
        "content": "## $\\text{Solution}$\n\n\n\n\u8bdd\u8bf4\u8fd9\u79cd\u901a\u8fc7\u5bf9\u6811\u7684\u5f62\u6001\u7279\u6b8a\u9650\u5236\u6700\u8fd1\u505a\u4e86\u8fd8\u6709[\u4e00\u9053](https://www.luogu.com.cn/problem/P3241)\uff0c\u4ee5\u4fdd\u8bc1\u66b4\u529b\u505a\u6cd5\u590d\u6742\u5ea6\u3002\n\n\u94fe\u600e\u4e48\u505a\uff1f\u662f\u4e0d\u662f\u4ece\u4e0a\u81f3\u4e0b\u4ee5\u53ca\u4ece\u4e0b\u5230\u4e0a\u7c7b\u4f3c\u4e8e trie \u7684\u5f62\u5f0f\u5efa\u5e7f\u4e49 SAM \u6c42\u4e0d\u540c\u5b50\u4e32\u3002\u6216\u8005\u4f60\u601d\u8003\u73b0\u5728\u53ea\u6709\u4e00\u6bb5\u5e8f\u5217\uff0c\u4e0d\u540c\u5b50\u4e32\u7684\u6c42\u6cd5\uff0c\u7528 SAM \u5c31\u597d\uff0c\u90a3\u4e48\u6b63\u53cd\u90fd\u8981\uff0c\u662f\u4e0d\u662f\u6211\u6b63\u5411\u8dd1\u4e00\u6b21\uff0c\u53cd\u5411\u8dd1\u4e00\u6b21\uff0c\u4f46\u8fd9\u65f6\u5019\u5c31\u8981\u7528\u5230\u5e7f\u4e49 SAM \u4e86\uff0c\u7136\u540e\u8fd9\u79cd\u6b63\u5411\u4f9d\u8d56\u524d\u4e00\u4e2a\u5b57\u7b26\u7684\u5e8f\u5217\u505a\u6cd5\u5b9e\u9645\u4e0a\u5c31\u662f\u94fe\u4e0a\u4f9d\u8d56 trie \u6811\u7684\u4e0a\u4e00\u4e2a\u5b57\u7b26\u3002\uff1f\n\n\u62bd\u8c61\u7684\uff0c\u6211\u4eec\u53ea\u662f\u628a\u6bcf\u4e00\u4e2a\u524d\u7f00\u63d2\u5165\u5230 SAM \u91cc\u9762\u4e86\uff0c\u90a3\u4e48\u83b7\u53d6\u8fd9\u4e9b\u524d\u7f00\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7c7b\u4f3c\u4e8e trie \uff0c\u4f46\u5b9e\u9645\u4e0a dfs \u4fdd\u8bc1\u4f9d\u8d56\u5173\u7cfb\u5c31\u597d\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bhqik8x4.png)\n\u7c7b\u6bd4\u5230\u6811\u4e0a\uff1a\u770b\u56fe\u4e0b\uff0c\u6478\u4e86\u51e0\u904d\u53d1\u73b0\uff0c\u5047\u5982\u6211\u4eec\u8981\u4fdd\u8bc1\u6b63\u5e8f\u548c\u5012\u5e8f\u7684\u5b57\u7b26\u4e32\u90fd\u80fd\u88ab\u627e\u5230\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u8981\u4ece\u53f6\u5b50\u8282\u70b9\u51fa\u53d1\uff0c\u4eff\u7167\u94fe\u7684\u505a\u6cd5\u5373\u53ef\u3002\n\n\u6ce8\u610f\u4e0b\u5e7f\u4e49 SAM \u7684 $pre$ \u4ee5\u53ca\u7a7a\u95f4\u95ee\u9898\u3002\n\n## $\\text{Code}$\n\n```cpp\n#include <bits/stdc++.h>\n\n#define N (int)(2e6+5)\n#define ll long long\n\nusing namespace std;\n\nstruct edge {\n\tint nex,to;\n}e[N];\n\nint head[N],cnt;\nint du[N],col[N],fa[N],son[10][N],len[N];\nint n,m,tot=1;\n\nint rd() {\n\tint f=1,sum=0; char ch=getchar();\n\twhile(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)) {sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\n\treturn sum*f;\n}\n\nvoid add_edge(int x,int y) {\n\te[++cnt].nex=head[x]; e[cnt].to=y;\n\thead[x]=cnt;\n}\n\nint ins(int c,int las) {\n\tif(son[c][las]) {\n\t\tint pre=las,y=son[c][las];\n\t\tif(len[pre]+1==len[y]) return y;\n\t\tint x=++tot; len[x]=len[pre]+1;\n\t\tfa[x]=fa[y]; fa[y]=x;\n\t\tfor(int i=0;i<10;i++) son[i][x]=son[i][y];\n\t\tfor(;pre&&son[c][pre]==y;pre=fa[pre]) son[c][pre]=x;\n\t\treturn x;\n\t}\n\tint pre=las,x=++tot; len[x]=len[pre]+1;\n\tfor(;pre&&!son[c][pre];pre=fa[pre]) son[c][pre]=x;\n\tint y=son[c][pre];\n\tif(!pre) fa[x]=1;\n\telse if(len[pre]+1==len[y]) fa[x]=y;\n\telse {\n\t\tint p=++tot; len[p]=len[pre]+1;\n\t\tfa[p]=fa[y]; fa[x]=fa[y]=p;\n\t\tfor(int i=0;i<10;i++) son[i][p]=son[i][y];\n\t\tfor(;pre&&son[c][pre]==y;pre=fa[pre]) son[c][pre]=p;\n\t}\n\treturn x;\n}\n\nvoid dfs(int x,int fa,int las) {\n\tlas=ins(col[x],las);\n\tfor(int i=head[x];i;i=e[i].nex) {\n\t\tint y=e[i].to;\n\t\tif(y==fa) continue;\n\t\tdfs(y,x,las);\n\t}\n}\n\nint main() {\n\tint x,y;\n\tn=rd(); m=rd();\n\tfor(int i=1;i<=n;i++) col[i]=rd();\n\tfor(int i=1;i<n;i++) {\n\t\tx=rd(); y=rd();\n\t\tadd_edge(x,y); add_edge(y,x);\n\t\t++du[x]; ++du[y];\n\t}\t\n\tfor(int i=1;i<=n;i++) if(du[i]==1) dfs(i,0,1);\n\tll ans=0;\n\tfor(int i=2;i<=tot;i++) ans+=len[i]-len[fa[i]];\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1625830507,
        "uid": 125901,
        "name": "FxorG",
        "ccfLevel": 7,
        "title": "P3346 [ZJOI2015]\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61"
    },
    {
        "content": "\u5e7d\u9999\u662f\u5168\u5e7b\u60f3\u4e61\u91cc\u6700\u53d7\u4eba\u6b22\u8fce\u7684\u840c\u59b9\u5b50\uff0c\u8fd9\u5929\uff0c\u662f\u5e7d\u9999\u76842600\u5c81\u751f\u65e5\uff0c\u65e0\u6570\u5e7d\u9999\u7684\u7c89\u4e1d\u5230\u4e86\u5e7d\u9999\u5bb6\u95e8\u524d\u7684\u592a\u9633\u82b1\u7530\u4e0a\u6765\u4e3a\u5e7d\u9999\u5e86\u795d\u751f\u65e5\u3002 \u7c89\u4e1d\u4eec\u975e\u5e38\u70ed\u60c5\uff0c\u81ea\u53d1\u7ec4\u7ec7\u8868\u6f14\u4e86\u4e00\u7cfb\u5217\u8282\u76ee\u7ed9\u5e7d\u9999\u770b\u3002\u5e7d\u9999\u5f53\u7136\u4e5f\u975e\u5e38\u9ad8\u5174\u5566\u3002 \u8fd9\u65f6\u5e7d\u9999\u53d1\u73b0\u4e86\u4e00\u4ef6\u975e\u5e38\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u592a\u9633\u82b1\u7530\u6709n\u5757\u7a7a\u5730\u3002\u5728\u8fc7\u53bb\uff0c\u5e7d\u9999\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5728\u8fd9n\u5757\u7a7a\u5730\u4e4b\u95f4\u4fee\u5efa\u4e86n-1\u6761\u8fb9\u5c06\u5b83\u4eec\u8fde\u901a\u8d77\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9n\u5757\u7a7a\u5730\u5f62\u6210\u4e86\u4e00\u4e2a\u6811\u7684\u7ed3\u6784\u3002\n\n\n\u6709n\u4e2a\u7c89\u4e1d\u4eec\u6765\u5230\u4e86\u592a\u9633\u82b1\u7530\u4e0a\u3002\u4e3a\u4e86\u8868\u8fbe\u5bf9\u5e7d\u9999\u751f\u65e5\u7684\u795d\u8d3a\uff0c\u4ed6\u4eec\u9009\u62e9\u4e86c\u4e2d\u989c\u8272\u7684\u8863\u670d\uff0c\u6bcf\u79cd\u989c\u8272\u6070\u597d\u53ef\u4ee5\u7528\u4e00\u4e2a0\u5230c-1\u4e4b\u95f4\u7684\u6574\u6570\u6765\u8868\u793a\u3002\u5e76\u4e14\u6bcf\u4e2a\u4eba\u90fd\u7ad9\u5728\u4e00\u4e2a\u7a7a\u5730\u4e0a\uff0c\u6bcf\u4e2a\u7a7a\u5730\u4e0a\u4e5f\u53ea\u6709\u4e00\u4e2a\u4eba\u3002\u8fd9\u6837\u6574\u4e2a\u592a\u9633\u82b1\u7530\u5c31\u82b1\u82b1\u7eff\u7eff\u4e86\u3002\u5e7d\u9999\u770b\u5230\u4e86\uff0c\u611f\u89c9\u4e5f\u975e\u5e38\u5f00\u5fc3\u3002\n\n\n\u7c89\u4e1d\u4eec\u7b56\u5212\u7684\u4e00\u4e2a\u8282\u76ee\u662f\u8fd9\u6837\u7684\uff0c\u9009\u4e2d\u4e24\u4e2a\u7c89\u4e1dA\u548cB\uff08A\u548cB\u53ef\u4ee5\u76f8\u540c\uff09\uff0c\u7136\u540eA\u6240\u5728\u7684\u7a7a\u5730\u5230B\u6240\u5728\u7684\u7a7a\u5730\u7684\u8def\u5f84\u4e0a\u7684\u7c89\u4e1d\u4f9d\u6b21\u8df3\u8d77\u6765\uff08\u5305\u62ec\u7aef\u70b9\uff09\uff0c\u5e7d\u9999\u5c31\u80fd\u770b\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3aA\u5230B\u4e4b\u95f4\u8def\u5f84\u4e0a\u7684\u6240\u6709\u7c89\u4e1d\u7684\u6570\u76ee\uff08\u5305\u62ecA\u548cB\uff09\u7684\u989c\u8272\u5e8f\u5217\u3002\u4e00\u5f00\u59cb\u5927\u5bb6\u6253\u7b97\u8ba9\u4eba\u4e00\u4e24\u4e2a\u7c89\u4e1d\uff08\u6ce8\u610f\uff1aA,B\u548cB,A\u662f\u4e0d\u540c\u7684\uff0c\u4ed6\u4eec\u5f62\u6210\u7684\u5e8f\u5217\u521a\u597d\u76f8\u53cd\uff0c\u6bd4\u5982\u7ea2\u7eff\u84dd\u548c\u84dd\u7eff\u7ea2\uff09\u90fd\u6765\u4e00\u6b21\uff0c\u4f46\u662f\u6709\u4eba\u6307\u51fa\u8fd9\u6837\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u4e00\u6a21\u4e00\u6837\u7684\u989c\u8272\u5e8f\u5217\uff0c\u4f1a\u5bfc\u81f4\u5ba1\u7f8e\u75b2\u52b3\u3002\n\n\n\u4e8e\u662f\u4ed6\u4eec\u60f3\u8981\u95ee\u9898\uff0c\u5728\u8fd9\u4e2a\u6811\u4e0a\uff0c\u4e00\u5171\u6709\u591a\u5c11\u53ef\u80fd\u7684\u4e0d\u540c\u7684\u989c\u8272\u5e8f\u5217\uff08\u5b50\u4e32\uff09\u5e7d\u9999\u53ef\u4ee5\u770b\u5230\u5462\uff1f \u592a\u9633\u82b1\u7530\u7684\u7ed3\u6784\u6bd4\u8f83\u7279\u6b8a\uff0c\u53ea\u4e0e\u4e00\u4e2a\u7a7a\u5730\u76f8\u90bb\u7684\u7a7a\u5730\u6570\u91cf\u4e0d\u8d85\u8fc720\u4e2a\u3002\n\n\nSOL\uff1a\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u53f6\u5b50\u8282\u70b9\u5f02\u5e38\u7684\u5c11\uff0c\uff08\u819c\u62dc\u4e3d\u59d0\u7684\u8bed\u6587\u6c34\u5e73\uff0c\u7b2c\u4e00\u6b21\u8bfb\u6210\u4e86\u6bcf\u4e2a\u70b9\u7684\u5ea6\u5c11\u4e8e\u7b49\u4e8e20\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5efa\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u5728Trie\u5efa\u81ea\u52a8\u673a\u53ea\u8981\u7ef4\u62a4\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u5728SAM\u4e0a\u7684\u70b9\u5373\u53ef\u3002\n\n\n\u4e0d\u4f1aSAM\uff08\u540e\u7f00\u81ea\u52a8\u673a\uff09\u7684\u8bf7\u70b9\u8fd9\u91cc\uff1ahttp://blog.csdn.net/qq\\_35649707/article/details/66473069\n\n\n\u4e0d\u4f1a\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u7684\u8bf7\u70b9\u8fd9\u91cc\uff1ahttp://blog.csdn.net/wangzhen\\_yu/article/details/45481269\n\n\n\u590d\u5236\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define sight(x) ('0'<=x&&x<='9')\n#define N 4000007\nusing namespace std;\ninline void read(int & x){\n    static char c;\n    for (c=getchar();!sight(c);c=getchar());\n    for (x=0;sight(c);c=getchar()) x=x*10+c-48; \n}\nstruct S{\n    int c[10],fa,val;\n}T[N];\nint fall[N],net[N],head[N],toT,col[N],n,C,a,b,dre[N];\ninline void add(int x,int y) { fall[++toT]=y; net[toT]=head[x]; head[x]=toT;}\nint tot=1;\ninline int Sam(int x,int last){\n    int np=++tot;\n    T[np].val=T[last].val+1;\n    for(;last&&(!T[last].c[x]);last=T[last].fa) T[last].c[x]=np;\n    if (!last) T[np].fa=1;\n    else {\n        int q=T[last].c[x];\n        if (T[last].val+1==T[q].val) T[np].fa=q;\n        else {\n            int nq=++tot;  T[nq]=T[q];\n            T[nq].val=T[last].val+1;\n            T[q].fa=T[np].fa=nq;\n            for (;last&&T[last].c[x]==q;last=T[last].fa) T[last].c[x]=nq;\n        }\n    }\n    return np;\n}\nvoid dfs(int x,int f,int to){\n    int g=Sam(col[x],to);\n    for (int i=head[x];i;i=net[i])\n     if (fall[i]^f) dfs(fall[i],x,g);\n}\nlong long ans;\nint main () {\n//    freopen(\"a.in\",\"r\",stdin);\n    read(n); read(C);\n    for (int i=1;i<=n;i++) read(col[i]);\n    for (int i=1;i<n;i++){\n     read(a); read(b); dre[a]++; dre[b]++; add(a,b); add(b,a);}\n    for (int i=1;i<=n;i++)\n     if (dre[i]==1) dfs(i,0,1);\n    for (int i=1;i<=tot;i++) ans+=T[i].val-T[T[i].fa].val;\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1513492003,
        "uid": 53193,
        "name": "\u6b87\u96ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3346 \u3010[ZJOI2015]\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u672c\u9898\u6700\u6076\u5fc3\u7684\u4e00\u70b9\u5728\u4e8e\uff0c\u5982\u679c\u4e24\u70b9\u4e0d\u662f\u5728\u540c\u4e00\u6761\u94fe\uff0c\u90a3\u4e48\u8def\u5f84\u662f $u\\to lca\\to v$\u3002\n\n\u76f4\u63a5\u5efa SAM \u663e\u7136\u4e0d\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u62d0\u5f2f\u6839\u672c\u4e0d\u662f Trie \u80fd\u5904\u7406\u7684\u4e86\u7684\u4e1c\u897f\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u6811\u7684\u6839\u662f\u4ee5 $u$ \u6216\u8005 $v$ \u5f00\u59cb\u7684\u5462\uff1f\n\n\u8def\u5f84\u662f\u4e0d\u662f\u53c8\u53d8\u6210 $u\\to v$ \u4e86\u3002\n\n\u6ce8\u610f\u5230\u9898\u9762\u6700\u4e0b\u9762\u4e00\u53e5\u8bdd\uff0c\u53f6\u5b50\u8282\u70b9\u4e0d\u8d85\u8fc7 $20$\uff0c\u800c\u4efb\u4f55\u4e00\u6761\u8def\u5f84\u90fd\u53ef\u4ee5\u5728\u4ee5\u53f6\u5b50\u7ed3\u70b9\u4e3a\u6839\u7684\u6811\u4e2d\u53d8\u6210\u5f62\u5982 $u\\to v$ \u7684\u5f62\u5f0f\u3002\n\n\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\uff01\n\n\u4e8e\u662f\uff0c\u89e3\u6cd5\u5c31\u51fa\u6765\u4e86\uff1a\n\n\u66b4\u529b\u679a\u4e3e\u6bcf\u68f5\u4ee5\u53f6\u5b50\u7ed3\u70b9\u4f5c\u4e3a\u6839\u7684\u6811\uff0c\u4e3a\u6bcf\u68f5\u8fd9\u6837\u7684\u6811\u5efa\u5e7f\u4e49 SAM\u3002\n\n\u7136\u540e\u76f4\u63a5\u8f93\u51fa\u4e0d\u540c\u5b50\u4e32\u4e2a\u6570\u5373\u53ef\u3002\n\n\u6ce8\u610f\u4e24\u70b9\uff1a\n\n- \u56e0\u4e3a\u6709 dfs\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u5b58 $last$\u3002**\u6bcf\u4e2a\u70b9\u7684 $last$ \u5e94\u8be5\u662f\u5b83\u7236\u4eb2\u7684 $cur$\uff0c\u800c\u4e0d\u662f\u6574\u4e2a SAM \u7684 $last$**\u3002\u6574\u4e2a SAM \u7684 $last$ \u5b9e\u9645\u4e0a\u5e94\u8be5\u5bf9\u5e94\u7684\u662f\u5b83\u65c1\u8fb9\u90a3\u68f5\u5b50\u6811\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684 $cur$\u3002\n\n- **\u6700\u591a\u4f1a\u6709 $20$ \u68f5\u6811**\u3002\u6240\u4ee5\u7a7a\u95f4\u5e94\u8be5\u5f00 $n\\times20\\times2$\u3002~~\u4e0d\u8fc7\u6211\u5c31\u5f00\u4e86 $20$ \u500d\u4e5f\u8fc7\u4e86\uff08\u9003~~\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 2e6 + 5;\nint n, m, a[N], head[N], to[N], nxt[N], etot;\nint in[N];\ninline void link(int u, int v)\n{\n    to[etot] = v;\n    nxt[etot] = head[u];\n    head[u] = etot++;\n    in[v]++;\n}\nll ans;\nstruct SAM\n{\n    int tot, fa[N], len[N], t[N][11];\n    inline SAM()\n    {\n        tot = 0;\n        fa[0] = -1;\n    }\n    inline int insert(int c, int last)\n    {\n        int cur = ++tot;\n        len[cur] = len[last] + 1;\n        int p = last;\n        while (~p && !t[p][c])\n            t[p][c] = cur, p = fa[p];\n        if (!~p)\n        {\n            fa[cur] = 0;\n            ans += len[cur] - len[0];\n            return cur;\n        }\n        int x = t[p][c];\n        if (len[p] + 1 == len[x])\n            fa[cur] = x;\n        else\n        {\n            len[++tot] = len[p] + 1;\n            fa[tot] = fa[x];\n            memcpy(t[tot], t[x], sizeof(t[x]));\n            while (~p && t[p][c] == x)\n                t[p][c] = tot, p = fa[p];\n            fa[x] = fa[cur] = tot;\n        }\n        ans += len[cur] - len[fa[cur]];\n        return cur;\n    }\n} sam;\ninline void dfs(int x, int fa, int last)\n{\n    int pos = sam.insert(a[x], last);\n    for (int i = head[x]; ~i; i = nxt[i])\n        if (to[i] != fa)\n            dfs(to[i], x, pos);\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    memset(head, -1, sizeof(head));\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i], a[i]++;\n    for (int i = 1, u, v; i < n; i++)\n    {\n        cin >> u >> v;\n        link(u, v);\n        link(v, u);\n    }\n    for (int i = 1; i <= n; i++)\n        if (in[i] == 1)\n            dfs(i, 0, 0);\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1672302376,
        "uid": 576378,
        "name": "creation_hy",
        "ccfLevel": 5,
        "title": "P3346 \u9898\u89e3"
    },
    {
        "content": "\u5e7f\u4e49 SAM \u6bd4\u8f83\u7b80\u5355\u7684\u9898/fad\n\n\u9898\u610f\uff1a\u6811\u4e0a\u6240\u6709\u8def\u5f84\u4e00\u5171\u80fd\u591f\u7ec4\u6210\u591a\u5c11\u4e2a\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\uff1f\n\n\u5e76\u4e14\u6570\u636e\u4fdd\u8bc1\u6700\u591a\u53ea\u670920\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\n\n\u6211\u4eec\u5148\u6765\u8003\u8651\u4e00\u4e0b\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a\n\n\u5bf9\u4e8e\u8def\u5f84 $ [u,v] $\uff0c$ u $ \u662f $ v $ \u7684\u7236\u4eb2\u6216 $ v $ \u662f $ u $ \u7684\u7236\u4eb2\u3002\n\n\u6b64\u65f6\u505a\u6cd5\u5f88\u660e\u663e\uff1a\u5c06\u6574\u68f5\u6811\u5f53\u505a\u4e00\u9897 Trie \u6811\uff0c\u5efa\u7acb\u5176\u5e7f\u4e49 SAM\uff0c\u7136\u540e\u6839\u636e\u5957\u8def\u6c42\u503c\u3002\n\n\u4f46\u662f\u5f88\u660e\u663e\u8fd9\u6837\u5e76\u4e0d\u884c\uff0c\u56e0\u4e3a\u6811\u5e76\u4e0d\u662f\u4e00\u6761\u94fe\u3002\n\n\u8fd9\u9898\u6700\u591a\u53ea\u6709 20 \u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u6697\u793a\u6211\u4eec\u5c06\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u5f53\u505a\u6839\u8282\u70b9\u4e00\u904d\uff0c\u8fd9\u6837\u5c31\u4e00\u5b9a\u6ca1\u6709\u8003\u8651\u6f0f\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u5c31\u53d8\u6210\u5e7f\u4e49 SAM \u677f\u5b50\u9898\u4e86\u3002\u3002\u3002\n\ncode:\n```cpp\n#include<cstdio>\n#include<queue>\nconst int M=1e5+5;\nint n,m,tot,siz[M],col[M],lst[M*20];\nlong long ans;\nstruct Trie{\n    int chi[11];\n}t[M*20];\nstruct Node{\n    int chi[11];\n    int f,len;\n}SAM[M*40];\nstruct Edge{\n    int to;Edge*nx;\n}e[M<<1],*h[M],*cnt=e;\ninline void Add(const int&u,const int&v){\n    *cnt=(Edge){v,h[u]};h[u]=cnt++;\n    *cnt=(Edge){u,h[v]};h[v]=cnt++;\n}\nvoid qwq(int u,int q,int f){\n    for(Edge*E=h[u];E;E=E->nx){\n        int v=E->to;\n        if(v==f)continue;\n        if(!t[q].chi[col[v]])t[q].chi[col[v]]=++tot;\n        qwq(v,t[q].chi[col[v]],u);\n    }\n}\nvoid DFS(int u,int f){\n    if(siz[u]==1){\n    \tif(!t[0].chi[col[u]])t[0].chi[col[u]]=++tot;\n    \tqwq(u,t[0].chi[col[u]],0);\n\t}\n    for(Edge*E=h[u];E;E=E->nx){\n        int v=E->to;\n        if(v==f)continue;\n        DFS(v,u);\n    }\n}\ninline int Insert(int lst,int s){\n    int q,p,nq,np;\n    p=lst;np=++tot;\n    SAM[np].len=SAM[p].len+1;\n    for(;p&&!SAM[p].chi[s];p=SAM[p].f)SAM[p].chi[s]=np;\n    if(!p)SAM[np].f=1;\n    else{\n        q=SAM[p].chi[s];\n        if(SAM[q].len==SAM[p].len+1)SAM[np].f=q;\n        else{\n            nq=++tot;\n            SAM[nq]=SAM[q];\n            SAM[np].f=SAM[q].f=nq;\n            SAM[nq].len=SAM[p].len+1;\n            for(;p&&SAM[p].chi[s]==q;p=SAM[p].f)SAM[p].chi[s]=nq;\n        }\n    }\n    ans+=SAM[np].len-SAM[SAM[np].f].len;\n    return np;\n}\ninline void MakeSAM(){\n    std::queue<int>q;\n    int u,s;\n    tot=lst[0]=1;q.push(0);\n    while(!q.empty()){\n        u=q.front();q.pop();\n        for(s=0;s<m;++s){\n            if(t[u].chi[s]){\n                lst[t[u].chi[s]]=Insert(lst[u],s);\n                q.push(t[u].chi[s]);\n            }\n        }\n    }\n}\nsigned main(){\n    register int i,u,v;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;++i)scanf(\"%d\",col+i);\n    for(i=1;i<n;++i){\n        scanf(\"%d%d\",&u,&v);\n        Add(u,v);++siz[u];++siz[v];\n    }\n    DFS(1,0);MakeSAM();\n    printf(\"%lld\",ans);\n}\n```",
        "postTime": 1606575386,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u5b57\u7b26\u4e32 \u540e\u7f00\u81ea\u52a8\u673a P3346\u9898\u89e3"
    }
]