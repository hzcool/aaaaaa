[
    {
        "content": "~~\u975e\u6b63\u5f0f\u5ba3\u5e03\uff0c\u6211\u548cUSACO\u7684DP\u6760\u4e0a\u4e86~~\n\n\u8fd9\u9898\u7684\u9884\u5904\u7406\u662f\u52a8\u89c4\u4e3b\u4f53\u768410\u500d\u4e0d\u6b62\u5462\u2026\u2026~~\u4e25\u91cd\u6000\u7591\u5b83\u88ab\u8bc4\u4e3a\u84dd\u9898\u4e0d\u662f\u56e0\u4e3a\u52a8\u89c4\u96be\u800c\u662f\u56e0\u4e3a\u9884\u5904\u7406\u70e6\u3002~~\n\n### \u9884\u5904\u7406\u7b2c\u4e00\u6b65\uff1a\n\u628a\u6574\u5f20\u56fe$BFS$\u8dd1\u4e00\u904d\uff0c\u627e\u51fa\u6240\u6709\u5c9b\u5c7f\u5e76\u6253\u4e0a\u6807\u8bb0\uff0c$num[i][j]$\u8868\u793a\u9646\u5730$(i,j)$\u5c5e\u4e8e\u7b2c\u51e0\u4e2a\u5c9b\u5c7f\u3002\n\n### \u9884\u5904\u7406\u7b2c\u4e8c\u6b65\uff1a\n$BFS$\u5904\u7406\u5c9b\u5c7f\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c$d[i][j]$\u8868\u793a\u4ece\u5c9b\u5c7f$i$\u5230\u5c9b\u5c7f$j$\u6700\u5c11\u7ecf\u8fc7\u51e0\u7247\u6d45\u6c34\u533a\u3002\u5bf9\u4e8e\u5c9b\u5c7f$i$\uff0c\u73b0\u5c06\u5c5e\u4e8e\u5b83\u7684\u9646\u5730\u90fd\u5165\u961f\uff0c\u7136\u540e$BFS$\u6269\u5c55\u5168\u56fe\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u5bf9\u4e8e\u4e0b\u4e00\u4e2a\u672a\u8bbf\u95ee\u8fc7\u7684\u70b9\uff0c\u5982\u679c\u5b83\u662f\u9646\u5730\uff0c\u5c31\u628a\u5b83\u653e\u5230\u961f\u5934\uff1b\u5982\u679c\u662f\u6d45\u6c34\u533a\uff0c\u5c31\u628a\u5b83\u653e\u5230\u961f\u5c3e\u3002\u5982\u679c\u4e0d\u7528\u53cc\u7aef\u961f\u5217\uff0c\u5c31\u53ea\u80fd\u5165\u961f\u6d45\u6c34\u533a\uff0c\u5e76\u4e14\u4e4b\u540e\u8fd8\u8981\u518d$SPFA$\u5904\u7406\u4e00\u6b21\u3002\n\n#### \u53cc\u7aef\u961f\u5217\u8bc1\u660e\uff1a\n\u5bf9\u4e8e\u961f\u5934\u70b9$(i,j)$\uff0c\u5b83\u7684\u503c\u4e3a$len$\uff0c\u5219\u5728\u961f\u5217\u4e2d\u7684\u70b9\u7684\u503c\u8981\u4e48\u662f$len$\uff0c\u8981\u4e48\u662f$len+1$\u3002\u5982\u679c\u4e0b\u4e00\u4e2a\u70b9\u662f\u9646\u5730\uff0c\u5219\u5b83\u7684\u503c\u662f$len$\uff0c\u5426\u5219\u662f$len+1$\u3002\u663e\u7136\u524d\u8005\u6269\u5c55\u51fa\u7684\u72b6\u6001\u4f1a\u6bd4\u540e\u8005\u66f4\u4f18\uff0c\u56e0\u6b64\u5c06\u524d\u8005\u653e\u4e8e\u961f\u5934\uff0c\u4f18\u5148\u6269\u5c55\u3002\n\n### \u9884\u5904\u7406\u7b2c\u4e09\u6b65\uff1a\n\u5982\u679c\u4e4b\u524d\u6709\u7528\u8fc7\u53cc\u7aef\u961f\u5217\uff0c\u5c31\u53ef\u4ee5\u7701\u7565\u8fd9\u4e00\u6b65\uff0c\u4e0d\u7136\u8fd8\u8981\u518d\u8dd1$n$\u904d\u7684$SPFA$\u6c42\u5c9b\u5c7f\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u3002\u6211\u662f\u61d2\u5f97\u6253\u4e86\u5566\u2026\u2026\u5982\u679c\u6709\u5927\u4f6c\u6253\u51fa\u6765\u4e86\uff0c\u8fd8\u8bf7\u79c1\u4fe1\u53d1\u7ed9\u6211\uff0c\u8ba9\u849f\u84bb%%%\u3002\n\n### $DP$\n\uff08\u76f8\u5bf9\u4e8e\u9884\u5904\u7406\u6765\u8bf4\uff09\u72b6\u538b\u5c31\u53d8\u5f97\u7279\u522b\u597d\u5199~~\uff0c\u7b80\u76f4\u662f\u5728\u9001\u5206~~\u3002$f[i][j]$\u8868\u793a\u7ecf\u8fc7\u5c9b\u5c7f\u72b6\u6001\u4e3a$i$\u3001\u6700\u540e\u5230\u8fbe\u7684\u5c9b\u5c7f\u7f16\u53f7\u4e3a$j$\u65f6\u7ecf\u8fc7\u6d45\u6c34\u533a\u7684\u6700\u5c11\u6570\u91cf\u3002\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n$f[i|(1<<(k-1))][k]=min(f[i][j]+d[j][k])$\n\n\u4ee5\u4e0a\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b\u8be6\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\n using namespace std;\n int fx[4]={-1,1,0,0};\n int fy[4]={0,0,-1,1};\n int n,m,i,j,k,cnt,l,r,lim,ans,maxn;\n int c[20],f[33000][17];\n int num[55][55],d[20][20];\n int x[5005],y[5005],dis[5005];\n bool used[55][55];\n char s[55][55];\n inline int read()\n{\n\tint x=0,c; bool f=0;\n\tfor(;(c=getchar())<'0'||c>'9';f|=c=='-');\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+c-48;\n\treturn f?-x:x;\n}\n void land_f()//\u9884\u5904\u7406\u7b2c\u4e00\u6b65\n{\n\tint a,b,xx,yy,i;\n\twhile(l<=r)\n\t{\n\t\ta=x[l]; b=y[l++];\n\t\tfor(i=0;i<4;i++)\n\t\t{\n\t\t\txx=a+fx[i]; yy=b+fy[i];\n\t\t\tif(xx<=0||yy<=0||xx>n||yy>m||used[xx][yy]||s[xx][yy]!='X') continue;\n\t\t\tused[xx][yy]=true; num[xx][yy]=cnt;\n\t\t\tx[++r]=xx; y[r]=yy;\n\t\t}\n\t}\n}\n void land_c(int now)//\u9884\u5904\u7406\u7b2c\u4e8c\u6b65\n{\n\tint a,b,c,xx,yy,i;\n\twhile(l<=r)\n\t{\n\t\ta=x[l]; b=y[l]; c=dis[l++];\n\t\tfor(i=0;i<4;i++)\n\t\t{\n\t\t\txx=a+fx[i]; yy=b+fy[i];\n\t\t\tif(xx<=0||yy<=0||xx>n||yy>m||used[xx][yy]||s[xx][yy]=='.') continue;\n\t\t\tused[xx][yy]=true; \n\t\t\tif(s[xx][yy]=='X')\n\t\t\t{\n\t\t\t\tif(d[now][num[xx][yy]]<0)\n\t\t\t\t d[now][num[xx][yy]]=c;\n\t\t\t\tx[--l]=xx; y[l]=yy; dis[l]=c;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tx[++r]=xx; y[r]=yy; dis[r]=c+1;\n\t\t}\n\t}\n}\n int main()\n{\n\tn=read(); m=read();\n\tfor(i=1;i<=n;i++) scanf(\"%s\",s[i]+1);\n\tfor(i=1;i<=n;i++)\n\t for(j=1;j<=m;j++)\n\t  if(s[i][j]=='X'&&(!used[i][j]))\n\t  {\n\t\t++cnt; l=r=1; x[1]=i; y[1]=j;\n\t\tused[i][j]=true; num[i][j]=cnt;\n\t\tland_f();\n\t  }\n\tmaxn=n*m; memset(d,-1,sizeof(d));\n\tfor(k=1;k<=cnt;k++)\n\t{\n\t\tl=maxn+1; r=maxn; d[k][k]=0;\n\t\tfor(i=1;i<=n;i++) for(j=1;j<=m;j++)\n\t\t{\n\t\t\tused[i][j]=false;\n\t\t\tif(num[i][j]==k)x[++r]=i,y[r]=j,dis[r]=0,used[i][j]=true;\n\t\t}\n\t\tland_c(k);\n\t}\n\tlim=(1<<cnt)-1; memset(f,63,sizeof(f)); \n\tfor(i=1;i<=cnt;i++) c[i]=1<<i-1,f[c[i]][i]=0;\n\tfor(i=1;i<lim;i++)\n\t{\n\t\tfor(j=1;j<=cnt;j++)\n\t\t if((i&c[j])&&f[i][j]<maxn)\n\t\t  for(k=1;k<=cnt;k++)\n\t\t   if(!(i&c[k])&&d[j][k]>0)//\u5982\u679cd[j][k]=-1,\u8bf4\u660e\u5c9b\u5c7fj\u548c\u5c9b\u5c7fk\u4e0d\u8fde\u901a\n\t\t\tf[i|c[k]][k]=min(f[i|c[k]][k],f[i][j]+d[j][k]);\n\t}\n\tans=1e9;\n\tfor(i=1;i<=cnt;i++) ans=min(ans,f[lim][i]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1540987783,
        "uid": 60610,
        "name": "Gavin\u00b7Olivia",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3070 \u3010[USACO13JAN]\u5c9b\u6e38\u8bb0Island Travels\u3011"
    },
    {
        "content": "### \u672c\u849f\u84bb\u6709\u53f2\u4ee5\u6765\u5199\u8fc7\u7684\u6700\u957f\u7684\u4ee3\u7801...quq...\n##### \u8fd9\u9053\u9898\u8003\u5bdf\u4e86\u6211\u4eec\u5f88\u591a\u77e5\u8bc6\u70b9\uff0c\u5982BFS\uff0cSPFA\u53ca\u72b6\u538bDP\uff0c\u662f\u5f88 ~~\uff08\u6bd2\u7624\uff09~~ \u6709\u4ef7\u503c\u6ef4\u4e00\u9053\u9898\n##### \u9996\u5148\u770b\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u5c9b\u7684\u6570\u91cf\u5f88\u5c11\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f80\u72b6\u538b\u4e0a\u9762\u60f3 ~~\u53ef\u6211\u548b\u90fd\u60f3\u4e0d\u5230~~\n##### \u5148BFS\u548cSPFA\u9884\u5904\u7406\u51fa\u4e24\u4e2a\u5c9b\u5c7f\u4e4b\u95f4\u6700\u5c11\u7ecf\u8fc7\u7684\u6d45\u6c34\u533a\u6570\u91cf\n##### \u7528dp[S][i]\u8868\u793a\u5df2\u7ecf\u7ecf\u8fc7S\u96c6\u5408\u5185\u7684\u6240\u6709\u5c9b\u5c7f\uff0c\u73b0\u5728\u5728\u7b2ci\u4e2a\u5c9b\u5c7f\uff0c\u6700\u5c11\u9700\u8981\u7ecf\u8fc7\u7684\u6d45\u6c34\u533a\u6570\u91cf\n##### emmmmm\u5dee\u4e0d\u591a\u5c31\u8fd9\u6837\u5427\uff0c\u8be6\u89c1\u4ee3\u7801~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Mn=16;\nconst int mn=55;\nint r,c;\nchar s[55][55];\nint flag[mn][mn],num[mn],cnt,f[mn][mn],dis[mn][mn],dp[1<<Mn][Mn],ans=1<<30;\nint d[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\nbool vis[mn][mn];\nstruct Node{\n\tint x,y;\n}block[Mn][Mn];\nqueue<Node>q;//\u53e4\u602a\u7684\u961f\u5217\u5f0f\u5b58\u50a8 \nvoid bfs(int bx,int by){//\u8fde\u901a\u5757 get\u221a\n\tNode tmp;\n\ttmp.x=bx;tmp.y=by;\n\tq.push(tmp);//\u5165\u961f,\u672c\u6765\u51c6\u5907\u7528q.push(Node{bx,by})\u7684(\u8fd9\u6837\u53ef\u4ee5\u7701\u70b9\u4ee3\u7801\u554aQwQ),\u5374\u51fa\u73b0\u7f16\u8bd1\u8b66\u544a\u3002\u3002\u3002QwQ \n\tvis[bx][by]=1;//\u8868\u793a\u5df2\u6765\u8fc7 \n\tflag[bx][by]=cnt;//\u6253\u4e0a\u6807\u8bb0,\u6b64\u5730\u5c5e\u4e8e\u672c\u8fde\u901a\u5757 \n\tnum[cnt]++;//\u672c\u8fde\u901a\u5757\u7684\u5927\u5c0f(\u6210\u5458\u4e2a\u6570)++ \n\tblock[cnt][num[cnt]].x=bx;block[cnt][num[cnt]].y=by;//\u8bb0\u5f55\u6bcf\u4e2a\u6210\u5458\u4f4d\u7f6e \n\twhile (!q.empty()){\n\t\tNode now=q.front();q.pop();//\u51fa\u961f \n\t\tfor (int i=0;i<4;i++){\n\t\t\tint xx=now.x+d[i][0],yy=now.y+d[i][1];\n\t\t\tif (xx>=1&&xx<=r&&yy>=1&&yy<=c&&s[xx][yy]=='X'&&!vis[xx][yy]){\n\t\t\t\tNode tmp;\n\t\t\t\ttmp.x=xx;tmp.y=yy;\n\t\t\t\tq.push(tmp);\n\t\t\t\tvis[xx][yy]=1;\n\t\t\t\tflag[xx][yy]=cnt;\n\t\t\t\tnum[cnt]++;\n\t\t\t\tblock[cnt][num[cnt]].x=xx;block[cnt][num[cnt]].y=yy;\n\t\t\t\t//\u6ce8\u91ca\u76f8\u4f3c\u89c1\u4e0a(\u61d2\u5f97\u6253\u5b57\u4e86)\n\t\t\t}\n\t\t}\n\t}\n}\nvoid spfa(int w){//\u8d85\u957f\u7684SPFA\u3002\u3002\u3002\u4fee\u6539\u65e0\u6570\u6b21qwq \n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,127/3,sizeof(dis));//dis[][]\u7528\u4e8e\u8bb0\u4e0b\u6700\u5c11\u9700\u8981\u7ecf\u8fc7\u7684\u6d45\u6c34\u533a \n\tfor (int i=1;i<=num[w];i++){\n\t\tint xx=block[w][i].x,yy=block[w][i].y;\n\t\tvis[xx][yy]=1;//\u628a\u6240\u6709\u8fde\u901a\u5757\u6210\u5458\u6807\u4e3a\"\u5df2\u6765\u8fc7\" \n\t\tdis[xx][yy]=0;//\u5185\u90e8\u4e0d\u7528\u7ecf\u8fc7\u6d45\u6c34\u533a \n\t\tq.push(block[w][i]);//\u5165\u961f(\u53cd\u6b63\u4e0a\u4e00\u8f6e\u6e05\u7a7a\u8fc7\u4e86) \n\t}\n\twhile (!q.empty()){\n\t\tNode now=q.front();q.pop();\n\t\tvis[now.x][now.y]=0;\n\t\tfor (int i=0;i<4;i++){\n\t\t\tint xx=now.x+d[i][0],yy=now.y+d[i][1];\n\t\t\tif (xx<=0||xx>r||yy<=0||yy>c||s[xx][yy]=='.') continue;\n\t\t\tif (s[xx][yy]=='X'){//\u9646\u5730 \n\t\t\t\tif (dis[now.x][now.y]<dis[xx][yy]){\n\t\t\t\t\tdis[xx][yy]=dis[now.x][now.y];//\u66f4\u65b0 \n\t\t\t\t\tif (!vis[xx][yy]){\n\t\t\t\t\t\tvis[xx][yy]=1;\n\t\t\t\t\t\tNode tmp;\n\t\t\t\t\t\ttmp.x=xx;tmp.y=yy;\n\t\t\t\t\t\tq.push(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf[flag[xx][yy]][w]=f[w][flag[xx][yy]]=min(f[flag[xx][yy]][w],dis[xx][yy]);\n\t\t\t\t//\u66f4\u65b0(xx,yy)\u6240\u5c5e\u8fde\u901a\u5757 \u5230 \u73b0\u5728\u6240\u5728\u7684\u8fde\u901a\u5757 \u4e4b\u95f4\u6700\u5c11\u9700\u8981\u7ecf\u8fc7\u7684\u6d45\u6c34\u533a \n\t\t\t}\n\t\t\telse{//\u6d45\u6c34\u533a \n\t\t\t\tif (dis[now.x][now.y]+1<dis[xx][yy]){\n\t\t\t\t\tdis[xx][yy]=dis[now.x][now.y]+1;\n\t\t\t\t\tif (!vis[xx][yy]){\n\t\t\t\t\t\tvis[xx][yy]=1;\n\t\t\t\t\t\tNode tmp;\n\t\t\t\t\t\ttmp.x=xx;tmp.y=yy;\n\t\t\t\t\t\tq.push(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid DP(){//\u72b6\u538bDP(\u7eaf\u5957\u6a21\u677f\u5566~)\n\tmemset(dp,127/3,sizeof(dp));\n\tint tmpn=(1<<cnt)-1;\n\tfor (int i=1;i<=cnt;i++) dp[1<<(i-1)][i]=0;\n\tfor (int S=1;S<=tmpn;S++)\n\t\tfor (int i=1;i<=cnt;i++)\n\t\t\tif (S&(1<<(i-1))){\n\t\t\t\tfor (int j=1;j<=cnt;j++){\n\t\t\t\t\tif (i==j) continue; \n\t\t\t\t\tdp[S][i]=min(dp[S][i],dp[S^(1<<(i-1))][j]+f[j][i]);\n\t\t\t\t}\n\t\t\t}\n}\nint main(){\n\tscanf(\"%d%d\",&r,&c);\n\tfor (int i=1;i<=r;i++)\n\t\tscanf (\"%s\",s[i]+1);\n\tfor (int i=1;i<=r;i++)\n\t\tfor (int j=1;j<=c;j++)\n\t\t\tif (!vis[i][j]&&s[i][j]=='X'){\n\t\t\t\tcnt++;\n\t\t\t\tbfs(i,j);\n\t\t\t}\n\tmemset(f,127/3,sizeof(f));\n\tfor (int i=1;i<=cnt;i++) f[i][i]=0,spfa(i);\n\tDP();\n\tint S=(1<<cnt)-1;\n\tfor (int i=1;i<=cnt;i++)\n\t\tans=min(ans,dp[S][i]);\n\tprintf (\"%d\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1532272021,
        "uid": 49841,
        "name": "\u5807\u58a8\u6d6e\u534e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3070 \u3010[USACO13JAN]\u5c9b\u6e38\u8bb0Island Travels\u3011"
    },
    {
        "content": "\u9898\u9762\u6709\u70b9\u5751\uff0c\u7ffb\u8bd1\u5185\u5bb9\u4e2d\u6ca1\u6709\u6307\u660en\u7684\u8303\u56f4\uff0c\u901a\u8fc7\u89c2\u5bdf\u539f\u9898\u9762\u5f97\u5230$n \\leq 15$\u5e76\u5927\u81f4\u731c\u6d4b\u8fd9\u662f\u4e00\u4e2a\u72b6\u6001\u538b\u7f29dp\n\n\u6700\u5c0f\u751f\u6210\u6811\u663e\u7136\u4e0d\u53ef\u884c\uff0c\u53ef\u4ee5\u4e3e\u4f8b\u8bf4\u660e\u5b58\u5728\u67d0\u79cd\u60c5\u51b5\u67d0\u8fb9\u8981\u7ecf\u8fc7\u4e24\u6b21\u6216\u66f4\u591a\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5c9b\u5c7f$i$\u5230\u4efb\u610f\u4e00\u4e2a\u5c9b\u5c7f$j$\u7684\u6700\u77ed\u8ddd\u79bb\u663e\u7136\u662f\u56fa\u5b9a\u7684\uff0c\u6bcf\u4e2a\u5c9b\u57df\u4e4b\u95f4\u7684\u8ddd\u79bb(\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u5c9b\u5c7f)\u53ef\u4ee5\u7528bfs\u9884\u5904\u7406\u51fa\u6765\uff0c\u521d\u59cb\u72b6\u6001\u53ea\u8981\u5c06\u8fd9\u4e2a\u5c9b\u5c7f\u5168\u90e8\u5750\u6807\u4f4d\u7f6e\u5168\u90e8\u5165\u961f\u5373\u53ef\n\n\u5f97\u5230\u4e86\u4efb\u610f\u4e24\u4e2a\u5c9b\u5c7f\u4e4b\u95f4\u7684\u76f4\u63a5\u8ddd\u79bb\u540e(\u5f53\u7136\u5b58\u5728\u90e8\u5206\u5c9b\u5c7f\u4e0d\u53ef\u4e92\u8fbe)\uff0c\u5728$ n \\leq 15$\u65f6\u53ef\u4ee5\u76f4\u63a5\u7528$floyd$\u6c42\u89e3\n\n\u73b0\u5728\u5f97\u5230\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u663e\u7136\u76f4\u63a5dfs\u590d\u6742\u5ea6\u4efb\u7136\u7206\u70b8\uff0cdfs\u6c42\u89e3\u7684\u590d\u6742\u5ea6\u662f$O(n!)$\n\n\u8003\u8651\u72b6\u6001\u538b\u7f29dp\uff0c\u8bbe$S$\u4e3a\u5f53\u524d\u8282\u70b9\u662f\u5426\u7ecf\u8fc7\u7684\u72b6\u6001\u96c6\u5408\uff0c$v$\u4e3a\u5f53\u524d\u505c\u7559\u7684\u8282\u70b9\uff0c\u663e\u7136\u6709$f(S,v)=min\\{ f(S',u)+dis(u,v)\\}$\u5176\u4e2d$S'$\u4e2d$v$\u4e3a\u672a\u8fbe\uff0c\u5f88\u660e\u663e\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u72b6\u6001\u4ed6\u6700\u591a\u8f6c\u79fb$n$\u4e2a\u72b6\u6001\n\n\u5f97\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(2^nn)$\u7684\u72b6\u538b\n\n```\n//2019/7/24->Riko->AtNCU->luoguP3070\n#include<bits/stdc++.h>\ntemplate <typename T> inline void smin (T& x, T y) { if (x > y) x = y;}\n//Believing heart is your power\nusing namespace std;\nint getch () {\n\tint ch = getchar();\n\treturn (ch == '.' or ch == 'S' or ch == 'X') ? ch : getch();\n}\n\nconst int N = 55;\nstruct Point { \n\tint x, y;\n\tPoint (int x, int y) : x(x), y(y) {}\n};\nstruct Len { \n\tint x, y, l;\n\tLen (int x, int y, int l) : x(x), y(y), l(l) {}\n};\nint r, c, n, ind;\nint type[N][N], idx[N][N], len[N][N], vis[N][N], hasgone[N];\nint f[(1<<15)+64][16], Mx[4] = {0, 0, 1, -1}, My[4] = {1, -1, 0, 0};\nqueue <Point> Find, Save[N];\nqueue <Len> Que;\n\nvoid Getpoints (int x, int y) {\n\tFind.push(Point(x, y)); Save[ind].push(Point(x, y));\n\twhile (!Find.empty()) {\n\t\tPoint tem = Find.front(); Find.pop();\n\t\tfor (int i = 0; i < 4; ++i) {\n\t\t\tint Nx = tem.x+Mx[i];\n\t\t\tint Ny = tem.y+My[i];\n\t\t\tif (idx[Nx][Ny]) continue;\n\t\t\tif (type[Nx][Ny] != 1) continue;\n\t\t\tidx[Nx][Ny] = ind;\n\t\t\tFind.push(Point(Nx, Ny));\n\t\t\tSave[ind].push(Point(Nx, Ny));\n\t\t}\n\t}\n}\nvoid Getlen (int id) {\n\twhile (!Save[id].empty()) {\n\t\tPoint tem = Save[id].front(); Save[id].pop();\n\t\tQue.push(Len(tem.x, tem.y, 0)); vis[tem.x][tem.y] = true;\n\t}\n\twhile (!Que.empty()) {\n\t\tLen tem = Que.front(); Que.pop();\n\t\tfor (int i = 0; i < 4; ++i) {\n\t\t\tint Nx = tem.x+Mx[i];\n\t\t\tint Ny = tem.y+My[i];\n\t\t\tif (!type[Nx][Ny] or vis[Nx][Ny]) continue;\n\t\t\tif (idx[Nx][Ny]) { smin(len[id][idx[Nx][Ny]], tem.l); continue;}\n\t\t\tvis[Nx][Ny] = true;\n\t\t\tQue.push(Len(Nx, Ny, tem.l+1));\n\t\t}\n\t}\n}\nvoid work () {\n\tmemset(f, 0x3f, sizeof(f));\n\tfor (int i = 1; i <= ind; ++i) {f[(1<<(i-1))][i] = 0;}\n\tfor (int x = 1; x < (1<<ind); ++x) {\n\t\tfor (int u = 1; u <= ind; ++u) {\n\t\t\tif (!x&(1<<(u-1))) continue;\n\t\t\tfor (int v = 1; v <= ind; ++v) {\n\t\t\t\tif (x&(1<<(v-1))) continue;\n\t\t\t\tsmin(f[x|(1<<(v-1))][v], f[x][u]+len[u][v]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans = INT_MAX;\n\tfor (int i = 1; i <= ind; ++i) { smin(ans, f[(1<<ind)-1][i]);}\n\tprintf(\"%d\", ans);\n}\nvoid prepare () {\n\tscanf(\"%d %d\", &r, &c);\n\tfor (int i = 1; i <= r; ++i) {\n\t\tfor (int j = 1; j <= c; ++j) {\n\t\t\tint ch = getch();\n\t\t\tif (ch == 'X') type[i][j] = 1;\n\t\t\tif (ch == 'S') type[i][j] = 2;\n\t\t}\n\t}\n\tfor (int i = 1; i <= r; ++i) {\n\t\tfor (int j = 1; j <= c; ++j) {\n\t\t\tif (!idx[i][j] and type[i][j] == 1) {\n\t\t\t\tidx[i][j] = ++ind;\n\t\t\t\tGetpoints(i, j);\n\t\t\t}\n\t\t}\n\t}\t\t//prepare for the distance\n\tmemset(len, 0x3f, sizeof(len));\n\tfor (int i = 1; i <= r; ++i) {\n\t\tfor (int j = 1; j <= c; ++j) {\n\t\t\tif (idx[i][j] and !hasgone[idx[i][j]]) {\n\t\t\t\tmemset(vis, 0, sizeof(vis));\n\t\t\t\thasgone[idx[i][j]] = true;\n\t\t\t\tGetlen(idx[i][j]);\n\t\t\t}\n\t\t}\n\t}\t\t//Get the cloest distance\n\tfor (int i = 1; i <= ind; ++i) {\n\t\tfor (int j = i+1; j <= ind; ++j) {\n\t\t\tfor (int k = i+1; k < j; ++k) {\n\t\t\t\tsmin(len[i][j], len[i][k]+len[k][j]);\n\t\t\t\tlen[j][i] = len[i][j];\n\t\t\t}\n\t\t}\n\t}  \t\t//floyd Part\n\twork();\n} int main () { prepare();}\n```\n",
        "postTime": 1564026424,
        "uid": 114643,
        "name": "RikoHere",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 P3070 [USACO13JAN]\u5c9b\u6e38\u8bb0Island Travels"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5f88 **\u957f** \u7684\u72b6\u538bDP\uff0c \n\n\u5c24\u5176\u662f\u5197\u957f\u7684\u9884\u5904\u7406\uff0c\n\n\u4ece13\u884c\u905354\u884c\u5168\u662f\u9884\u5904\u7406\u3002\n\n\u9884\u5904\u74061\uff1a\u7528\u6df1\u641c\u5224\u65ad\u5c9b\u5c7f\uff08\u8054\u901a\u5757\uff09\n\n\u9884\u5904\u74062\uff1a\u7528 `SPFA` \u9884\u5904\u7406\u51fa\u4e24\u4e2a\u5c9b\u5c7f\u4e4b\u95f4\u6700\u5c11\u7ecf\u8fc7\u7684\u6d45\u6c34\u533a\u6570\u91cf\n\n\u7136\u540e\u662f\u72b6\u6001\u8bbe\u8ba1\n\n$dp[i][j]$ \u8868\u793a\u5df2\u7ecf\u8bbf\u95ee\u4e86 $i$ \u4e2a\u5c9b\u5c7f\uff0c$j$ \u8868\u793a $n$ \u4e2a\u5c9b\u5c7f\u8054\u901a\u5757\u7684\u8bbf\u95ee\u72b6\u6001\n\n\u7136\u540e\u53ef\u4ee5\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a \u7528 $e(k)$ \u8868\u793a $2^{k-1}$\n\n$dp_{k,i|e(k)}=min(dp_{k,i|e(k)},dp_{j,i}+p_{j,k})$\n\n$p_{j,k}$ \u4e3a $j$ \u5230 $k$ \u7684\u6700\u77ed\u8def\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#define N 55\n#define e(n) (1<<(n-1))\n#define E(n) ((1<<n)-1)\nusing namespace std;\nint dx[4]={1,-1,0,0},dy[4]={0,0,1,-1},num[N][N],p[N][N];\nchar str[N][N];\nint vis[N][N];\nint n,m,cnt,ans=12122106,dp[20][1<<15+5];\nvoid dfs(int x,int y){\n    for(int i=0;i<4;++i){\n        int a=x+dx[i];\n        int b=y+dy[i];\n        if(a<1||a>n||b<1||b>m||str[a][b]!='X'||num[a][b])continue;\n        num[a][b]=cnt;\n        dfs(a,b);\n    }\n}\nvoid spfa(int u,int v){\n\tqueue<int>q;\n\tmemset(vis,0x3f,sizeof(vis));\n\tvis[u][v]=1;\n\tq.push(u);\n\tq.push(v);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tint y=q.front();q.pop();\n\t\tfor(int i=0;i<4;i++){\n\t\t\tint a=x+dx[i],b=y+dy[i];\n\t\t\tif(a<1||a>n||b<1||b>m||str[a][b]=='.')continue;\n\t\t\tint now=vis[x][y];\n\t\t\tif(now>vis[a][b])continue;\n\t\t\tif(str[a][b]=='X'){\n\t\t\t\tif(now<vis[a][b]){\n\t\t\t\t\tvis[a][b]=now;\n\t\t\t\t\tint aa=num[a][b],bb=num[u][v];\n\t\t\t\t\tp[aa][bb]=min(p[aa][bb],vis[a][b]-1);\n\t\t\t\t\tp[bb][aa]=p[aa][bb];\n\t\t\t\t\tq.push(a),q.push(b);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnow++;\n\t\t\t\tif(now<vis[a][b]){\n\t\t\t\t\tvis[a][b]=now;\n\t\t\t\t\tq.push(a),q.push(b);\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(p,0x3f,sizeof(p));\n    for(int i=1;i<=n;++i)scanf(\"%s\",str[i]+1);\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=m;++j){\n        \tif(str[i][j]=='X'&&!num[i][j]){\n                num[i][j]=++cnt;\n                dfs(i,j);\n            }\n\t\t}     \n    }\n    for(int i=1;i<=n;i++){\n    \tfor(int j=1;j<=m;j++){\n    \t\tif(num[i][j]){\n    \t\t\tspfa(i,j);\n\t\t\t}\n\t\t}\n\t}\n\tmemset(dp,0x3f,sizeof(dp));\n\tfor(int i=1;i<=cnt;i++)dp[i][e(i)]=0;\n\tfor(int i=1;i<1<<cnt;i++){\n\t\tfor(int j=1;j<=cnt;j++){\n\t\t\tif(!(i&e(j)))continue;\n\t\t\tfor(int k=1;k<=cnt;k++){\n\t\t\t\tif((i&e(k)))continue;\n\t\t\t\tdp[k][i|e(k)]=min(dp[k][i|e(k)],dp[j][i]+p[j][k]);//DP\u65b9\u7a0b \n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt;i++)ans=min(ans,dp[i][E(cnt)]);//\u6ce8\u610f\u662fE\uff08cnt\uff09\u4e0d\u662fe\uff08cnt\uff09\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n\n```\n``\n\n\u6c42\u7ba1\u7406\u540c\u5fd7\u901a\u8fc7",
        "postTime": 1627537838,
        "uid": 285617,
        "name": "\u9ed1\u5f71\u6d1e\u4eba",
        "ccfLevel": 5,
        "title": "P3070 [USACO13JAN]Island Travels G \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6076\u5fc3\u7684\u9898\u3002\u9996\u5148\u4e0d\u96be\u60f3\u5230\u8981\u9884\u5904\u7406\u8fde\u901a\u5757\u548c\u4ed6\u4eec\u4e24\u4e24\u95f4\u7684\u8ddd\u79bb\uff0c\u5269\u4e0b\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u72b6\u538b\u3002\u5f00\u4e24\u7ef4\uff0c\u4e00\u7ef4\u72b6\u6001\uff0c\u4e00\u7ef4\u51b3\u7b56\u70b9\u5373\u53ef\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f\nusing namespace std;\nint dx[]={0,0,-1,1},dy[]={-1,1,0,0};\nint dis[15+5][15+5],d[50+5][50+5],f[1<<16][16],vis[50+5][50+5],tot[15+5],inq[50+5][50+5];\nchar mapn[50+5][50+5];\nint cnt;\nint ans=inf;\nstruct point{\n\tint x,y;\n}p[15+5][2500+5];\nstruct node{\n\tint x,y;\n\tnode(int a,int b):x(a),y(b){} \n};\nint n;\nint r,c;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f; \n}\nvoid wzyn(node s){\n\tqueue<node>q;\n\tq.push(s);\n\t++cnt;\n\tvis[s.x][s.y]=cnt;\n\twhile(!q.empty()){\n\t\tnode u=q.front();\n\t\tq.pop();\n\t\t++tot[cnt];\n\t\tp[cnt][tot[cnt]].x=u.x;\n\t\tp[cnt][tot[cnt]].y=u.y;\n\t\tfor(int i=0;i<4;i++){\n\t\t\tint nx=u.x+dx[i],ny=u.y+dy[i];\n\t\t\tif(nx<1||nx>r||ny<1||ny>c)continue;\n\t\t\tif(vis[nx][ny])continue;\n\t\t\tif(mapn[nx][ny]=='X')q.push(node(nx,ny));\n\t\t\tvis[nx][ny]=cnt;\n\t\t}\n\t}\n}\nvoid lxl(int s){\n\tqueue<node>q;\n\tmemset(d,inf,sizeof(d)); \n\tfor(int i=1;i<=tot[s];i++){\n\t\tint x=p[s][i].x,y=p[s][i].y;\n\t\td[x][y]=0;q.push(node(x,y));\n\t\tinq[x][y]=1;\n    }\n\twhile(!q.empty()){\n\t\tnode u=q.front();\n\t\tq.pop();\n\t\tinq[u.x][u.y]=0;\n\t\tfor(int i=0;i<4;i++){\n\t\t\tint nx=u.x+dx[i],ny=u.y+dy[i];\n\t\t\tif(nx<1||nx>r||ny<1||ny>c)continue;\n\t\t\tif(mapn[nx][ny]=='.')continue;\n\t\t\tif(mapn[nx][ny]=='X'){\n\t\t\t\tif(d[nx][ny]>d[u.x][u.y]){\n\t\t\t\t\td[nx][ny]=d[u.x][u.y];\n\t\t\t\t\tif(!inq[nx][ny])q.push(node(nx,ny));\n\t\t\t\t}\n\t\t\t\tdis[s][vis[nx][ny]]=min(dis[s][vis[nx][ny]],d[nx][ny]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(d[nx][ny]>d[u.x][u.y]+1){\n\t\t\t\t\td[nx][ny]=d[u.x][u.y]+1;\n\t\t\t\t\tif(!inq[nx][ny])q.push(node(nx,ny));\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t}\n\t\n}\nint main(){\n\tr=read();c=read();\n\tfor(int i=1;i<=r;i++)\n\tscanf(\"%s\",mapn[i]+1);\n\tfor(int i=1;i<=r;i++)\n\t  for(int j=1;j<=c;j++)\n\t  if(!vis[i][j]&&mapn[i][j]=='X')wzyn(node(i,j));\n\tmemset(dis,inf,sizeof(dis));\n\tfor(int i=1;i<=cnt;i++)\n\tlxl(i);\n\t/*\n\tfor(int i=1;i<=cnt;i++,putchar(' '))\n\tcout<<tot[i];\n\tcout<<endl;\n\tfor(int i=1;i<=cnt;i++,putchar('\\n'))\n\t  for(int j=1;j<=cnt;j++,putchar(' '))\n\t  cout<<dis[i][j];\n\t*/\n\tmemset(f,inf,sizeof(f));\n\tfor(int i=1;i<=cnt;++i)\n\tf[1<<(i-1)][i]=0;\n\tfor(int i=0;i<(1<<cnt);i++){\n\t\tfor(int j=1;j<=cnt;j++){\n\t\t\tif(!(i&(1<<(j-1))))continue;\n\t\t\tfor(int k=1;k<=cnt;k++){\n\t\t\t\tif(k==j)continue;\n\t\t\t\tint s=(i^(1<<(j-1)));\n\t\t\t\tf[i][j]=min(f[i][j],f[s][k]+dis[j][k]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int i=1;i<=cnt;i++)\n\tans=min(ans,f[(1<<cnt)-1][i]);\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1566897737,
        "uid": 58707,
        "name": "Edward_Elric",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3070 \u3010[USACO13JAN]\u5c9b\u6e38\u8bb0Island Travels\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u81f3\u4e8e\u9898\u89e3\uff0c\u4e0b\u9762\u5df2\u7ecf\u5f88\u8be6\u7ec6\u4e86\n\n\u4f46\u6211\u8fd8\u662f\u5728\u6765\u53e3\u80e1\u4e00\u4e0b\u5427f[i][j]\u8868\u793a\u7b2ci\u4e2a\u70b9\uff0c\u5176\u4ed6\u51e0\u4e2a\u70b9\u7684\u72b6\u6001\u4e3aj\u65f6\uff0c\u904d\u5386\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\n\n\u7136\u540e\u679a\u4e3e\u6ca1\u6709\u5230\u8fbe\u8fc7\u7684\u70b9\u8f6c\u79fb\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\n#define inf 0x3f3f3f3f\nint n,m,cnt;\nchar str[1003][1003];\nint vis[1003][1003],num[1003][1003],pic[60][60],d[60];\nint dir[13][2]={{1,0},{-1,0},{0,1},{0,-1}};\nqueue<int> q;\ninline void bfs(int i,int j){\n    memset(vis,inf,sizeof(vis));\n    vis[i][j]=1;\n    q.push(i);\n    q.push(j);\n    while(!q.empty()){\n        int x=q.front();  q.pop();\n        int y=q.front();  q.pop();\n        for(int k=0;k<4;++k){\n            int xx=x+dir[k][0],yy=y+dir[k][1];\n            if(!(xx<1||xx>n||yy<1||yy>m||str[xx][yy]=='.')){\n                int temp=vis[x][y];\n                if(!(temp>vis[xx][yy])){\n                    if(str[xx][yy]=='X'){\n                            if(temp<vis[xx][yy]){\n                            vis[xx][yy]=temp;\n                            pic[num[xx][yy]][num[i][j]]=min(pic[num[xx][yy]][num[i][j]],vis[xx][yy]-1);\n                               pic[num[i][j]][num[xx][yy]]=pic[num[xx][yy]][num[i][j]];\n                            q.push(xx);\n                            q.push(yy);\n                        }\n                    }else{\n                        if((++temp)<vis[xx][yy]){\n                            vis[xx][yy]=temp;\n                            q.push(xx);\n                            q.push(yy);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\ninline void dfs(int x,int y){\n    for(int i=0;i<4;i++){\n        int xx=x+dir[i][0],yy=y+dir[i][1];\n        if(!(xx<1||xx>n||yy<1||yy>m||str[xx][yy]!='X'||num[xx][yy])){\n            num[xx][yy]=cnt;\n            dfs(xx,yy);\n        }\n    }\n}\nint jiyi[20][1<<16];\nint dp(int now,int h){\n    int & fanhui=jiyi[now][h];\n    if(fanhui!=-1){\n        return fanhui;\n    }\n    bool yes=true;\n    for(int i=1;i<=cnt;i++){\n        if(!(h&(1<<i))){\n            yes=false;\n            break;\n        }\n    }\n    if(yes==true){\n        return fanhui=0;\n    }\n    fanhui=999999999;\n    for(int i=1;i<=cnt;i++){\n        if(!(h&(1<<i))&&now!=i){\n            fanhui=min(fanhui,dp(i,h|(1<<i))+pic[now][i]);\n        }\n    }\n    return fanhui;\n}\nint main(){\n    int i,j;\n    memset(pic,inf,sizeof(pic));\n    memset(jiyi,-1,sizeof(jiyi));\n    cin>>n>>m;\n    for(i=1;i<=n;++i){\n        scanf(\"%s\",str[i]+1);\n    }\n    for(i=1;i<=n;++i){\n        for(j=1;j<=m;++j){\n            if(str[i][j]=='X'&&!num[i][j]){\n                num[i][j]=++cnt;\n                dfs(i,j);\n            }\n        }\n    }\n    for(i=1;i<=n;++i){\n        for(j=1;j<=m;++j){\n            if(num[i][j]){\n                bfs(i,j);\n            }\n        }\n    }\n    int ans=999999999;\n    for(int i=1;i<=cnt;i++){\n        ans=min(ans,dp(i,(1<<i)));\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n/\\*\n\nin:\n5 4\nXX.S\n.S..\nSXSS\nS.SX\n..SX\n\nout:\n3\n\n\\*/",
        "postTime": 1498189902,
        "uid": 33738,
        "name": "mengdai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3070 \u3010[USACO13JAN]\u5c9b\u6e38\u8bb0Island Travels\u3011"
    },
    {
        "content": "bfs+\u72b6\u6001\u538b\u7f29\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <stack>\n#include <cctype>\n #include <queue>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include <climits>\n#define lson rt<<1,l,mid\n#define rson rt<<1|1,mid+1,r\n#define fi first\n#define se second\n#define ping(x,y) ((x-y)*(x-y))\n#define mst(x,y) memset(x,y,sizeof(x))\n#define mcp(x,y) memcpy(x,y,sizeof(y))\nusing namespace std;\n#define gamma 0.5772156649015328606065120\n#define MOD 1000000007\n#define inf 0x3f3f3f3f\n#define N 2000005\n#define maxn 100005\ntypedef pair<int,int> PII;\ntypedef long long LL;\nint n,m,cnt;\nchar str[60][60];\nint vis[60][60];\nint num[60][60];\nint pic[60][60];\nint dp[20][1<<16];\nint d[60];\nint dir[][2]={{1,0},{-1,0},{0,1},{0,-1}};\nqueue<int>q;\nvoid bfs(int i,int j){\n    mst(vis,inf);vis[i][j]=1;\n    q.push(i);q.push(j);\n    while(!q.empty()){\n        int x=q.front();q.pop();\n        int y=q.front();q.pop();\n        for(int k=0;k<4;++k){\n            int xx=x+dir[k][0];\n            int yy=y+dir[k][1];\n            if(xx<1||xx>n||yy<1||yy>m||str[xx][yy]=='.')continue;\n            int temp=vis[x][y];\n            if(temp>vis[xx][yy])continue;\n            if(str[xx][yy]=='X'){\n                if(temp<vis[xx][yy]){\n                    vis[xx][yy]=temp;\n                    pic[num[xx][yy]][num[i][j]]=min(pic[num[xx][yy]][num[i][j]],vis[xx][yy]-1);\n                    pic[num[i][j]][num[xx][yy]]=pic[num[xx][yy]][num[i][j]];\n                    q.push(xx);q.push(yy);\n                }\n            }\n            else{\n                ++temp;\n                if(temp<vis[xx][yy]){\n                    vis[xx][yy]=temp;\n                    q.push(xx);q.push(yy);\n                }\n            }\n        }\n    }\n}\nint solve(){\n    mst(dp,inf);\n    int all=1<<cnt;\n    for(int j=1;j<=cnt;++j) dp[j][1<<j-1]=0;\n    for(int i=1;i<all;++i){\n        for(int j=1;j<=cnt;++j){\n            if(!(i&(1<<j-1)))continue;\n            for(int k=1;k<=cnt;++k){\n                if(i&(1<<k-1))continue;\n                dp[k][i|(1<<k-1)]=min(dp[k][i|(1<<k-1)],dp[j][i]+pic[j][k]);\n            }\n        }\n    }\n    int res=inf;\n    for(int i=1;i<=cnt;++i)res=min(res,dp[i][all-1]);\n    return res;\n}\nvoid dfs(int x,int y){\n    for(int i=0;i<4;++i){\n        int xx=x+dir[i][0];\n        int yy=y+dir[i][1];\n        if(xx<1||xx>n||yy<1||yy>m||str[xx][yy]!='X'||num[xx][yy])continue;\n        num[xx][yy]=cnt;\n        dfs(xx,yy);\n    }\n}\nint main(){\n    //freopen(\"in.txt\",\"r\",stdin);\n    int i,j;\n    mst(pic,inf);\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;++i)scanf(\"%s\",str[i]+1);\n    for(i=1;i<=n;++i){\n        for(j=1;j<=m;++j)\n            if(str[i][j]=='X'&&!num[i][j]){\n                num[i][j]=++cnt;\n                dfs(i,j);\n            }\n    }\n    for(i=1;i<=n;++i)for(j=1;j<=m;++j)\n        if(num[i][j])bfs(i,j);\n//    for(i=1;i<=n;++i){\n//        for(j=1;j<=m;++j)printf(\"%c\",num[i][j]==0?'*':num[i][j]+'a');\n//    printf(\"\\n\");\n//    }\n    printf(\"%d\\n\",solve());\n    return 0;\n}\n```",
        "postTime": 1473830963,
        "uid": 21590,
        "name": "kurokey",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3070 \u3010[USACO13JAN]\u5c9b\u6e38\u8bb0Island Travels\u3011"
    },
    {
        "content": "\u628a\u6bcf\u4e2a\u5c9b\u7f29\u6210\u4e00\u4e2a\u70b9\uff0cbfs\u627e\u6700\u77ed\u8def\u5f84\uff0c\u4e4b\u540e\u72b6\u538bDP\u5373\u53ef\u3002\n\nBFS\u90e8\u5206\u7528set\u6a21\u62df\u53cc\u5411\u961f\u5217WA\u4e86\u4e00\u5927\u5708\uff0c\u6700\u540e\u53d1\u73b0\u662f\u7ed3\u6784\u4f53\u7b26\u53f7\u5b9a\u4e49\u9519\u4e86qaq\n\n\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <set>\n#include <queue>\n\nusing namespace std;\n\ninline void quick_io() {\n    ios::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n}\n\nnamespace fin {\n    int dis[20][20], n, f[60009][20];\n    bool vis[60009];\n    inline bool getseq(int x,int k) {\n    \tx>>=(k-1);\n    \treturn x&1;\n    }\n    void main(int fix) {\n    \tmemset(f,0x3f,sizeof(f));\n        n=fix;\n        //for(int i=1;i<=n;i++) {\n        //\tfor(int j=1;j<=n;j++)\n        //\t\tcout<<dis[i][j]<<' ';\n        //\tcout<<endl;\n        //}\n        queue<int> q;\n        for(int i=1;i<=n;i++) \n        \tf[1<<(i-1)][i]=0, q.push(1<<(i-1));\n        int cur, des;\n        while(!q.empty()) {\n        \tcur=q.front();\n        \tq.pop();\n        \tfor(int pos=1;pos<=n;pos++) {\n        \t\tif(!getseq(cur,pos)) {\n        \t\t\tdes=cur+(1<<(pos-1));\n        \t\t\tfor(int st=1;st<=n;st++)\n        \t\t\t\tif(getseq(cur,st)) {\n        \t\t\t\t\tf[des][pos]=min(f[cur][st]+dis[st][pos],f[des][pos]);\n        \t\t\t\t\tif(vis[des]==0)\n        \t\t\t\t\t\tvis[des]=1, q.push(des);\n        \t\t\t\t}\n        \t\t}\n        \t}\n    \t}\n        int fin=(1<<n)-1, ans=2147483647;\n        \tfor(int i=1;i<=n;i++) \n        \t\tans=min(ans,f[fin][i]);\n        cout<<ans<<endl;\n    }\n}\n\nconst int MAXN=3080;\n\nint father[MAXN];\nint getfather(int u) {\n    return father[u]==u?u:father[u]=getfather(father[u]);\n}\ninline void merge(int u,int v) {\n    u=getfather(u), v=getfather(v);\n    father[u]=v;\n}\n\nstruct node {\n    int v; node *next;\n}edge[MAXN<<1], *first[MAXN];\nint cnte;\nset<int> exm[MAXN];\ninline void _addedge(int u,int v) {\n    node *p=&edge[++cnte]; p->v=v;\n    p->next=first[u]; first[u]=p;\n    exm[u].insert(v);\n}\ninline void addedge(int u,int v) {\n    _addedge(u,v), _addedge(v,u);\n}\nint n,m;\ninline int id(int x,int y) {\n    return x*m+y;\n}\nint map[MAXN][MAXN];\nint bid[MAXN][MAXN];\n\nset<int> st;\nint dis[20][MAXN], cnts, start[MAXN];\nint inq[20][MAXN];\n\nstruct stnode {\n    int val, fix;\n    bool operator < (const stnode &u) const {\n        return fix<u.fix;\n    }\n    stnode() {}\n    stnode(int vv,int ff) {\n        val=vv, fix=ff;\n    }\n};\n\nvoid bfs(int origin,int x) {\n    set<stnode> q; \n    set<stnode>::iterator it;\n    int fixl=1,fixr=1;\n    q.insert(stnode(x,1));\n    int u;\n    //cout<<\"bfs : \"<<origin<<endl;\n    while(q.size()) {\n        it=q.begin();\n        u=(*it).val;\n        //cout<<\"id = \"<<u<<' '<<(*it).fix<<endl;\n        q.erase(it);\n        for(node *p=first[u];p;p=p->next)\n    \t\tif(dis[origin][p->v]>dis[origin][u]+(st.find(p->v)==st.end()?0:1)) {\n    \t\t\tif(st.find(p->v)!=st.end()) {\n                    dis[origin][p->v]=dis[origin][u];\n                    if(!inq[origin][p->v])\n                        q.insert(stnode(p->v,--fixl)), inq[origin][p->v]=true;\n                }\n                else {\n                    dis[origin][p->v]=dis[origin][u]+1;\n                    if(!inq[origin][p->v])\n                        q.insert(stnode(p->v,++fixr)), inq[origin][p->v]=true;\n                }\n            }\n    }\n}\n\nsigned main() {\n    //init\n    for(int i=1;i<MAXN;i++)\n        father[i]=i;\n    memset(dis,0x3f,sizeof(dis));\n    //code\n    quick_io();\n    cin>>n>>m;\n    char ch;\n    for(int i=1;i<=n;i++) \n        for(int j=1;j<=m;j++) {\n            cin>>ch;\n            if(ch=='.')\n                map[i][j]=0;\n            else if(ch=='X')\n                map[i][j]=2;\n            else map[i][j]=1;\n        }\n    for(int i=1;i<=n;i++) \n        for(int j=1;j<=m;j++) {\n            if(map[i][j]==2 && map[i][j-1]==2)\n                merge(id(i,j),id(i,j-1)); \n            if(map[i][j]==2 && map[i-1][j]==2)\n                merge(id(i,j),id(i-1,j));\n        }\n    for(int i=1;i<=n;i++) \n        for(int j=1;j<=m;j++) {\n            bid[i][j]=getfather(id(i,j));\n            if(map[i][j]==2)\n                st.insert(bid[i][j]);\n        }\n    for(int i=1;i<=n;i++) {\n        for(int j=1;j<=m;j++) {\n            if(i>=1 && map[i][j]*map[i-1][j]) \n                addedge(bid[i][j],bid[i-1][j]);\n            if(j>=1 && map[i][j]*map[i][j-1])\n                addedge(bid[i][j],bid[i][j-1]);\n            \n            //cout<<bid[i][j]<<' ';\n        }\n        //cout<<endl;\n    }\n    //cout<<endl;\n    \n    for(set<int>::iterator it=st.begin();it!=st.end();it++) {\n        start[++cnts]=*it;\n        //cout<<(*it)<<endl;\n        dis[cnts][start[cnts]]=0;\n        bfs(cnts,start[cnts]);\n        for(int i=1;i<cnts;i++)\n        \tfin::dis[cnts][i]=fin::dis[i][cnts]=dis[cnts][start[i]];\n    }\n    fin::main(cnts);\n}\n```",
        "postTime": 1541154639,
        "uid": 3371,
        "name": "queuDU",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3070 \u3010[USACO13JAN]\u5c9b\u6e38\u8bb0Island Travels\u3011"
    }
]