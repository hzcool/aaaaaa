[
    {
        "content": "\u8fd9\u662f\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u5982\u679c\u5199\u7684\u4e0d\u597d\u8bf7\u89c1\u8c05owo\n\n\n------------\n\u601d\u8def\uff1aMirko\u6bcf\u79d2\u4f1a\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\uff0c\u540c\u65f6\u55b7\u6c14\u80cc\u5305\u72b6\u6001\u53ea\u6709\u4e24\u79cd\uff1a\u5f00\u542f\u6216\u5173\u95ed\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u4e00\u79d2\u7684\u80cc\u5305\u72b6\u6001\u8fdb\u884c\u679a\u4e3e\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u3002\n\n\n------------\n\u4e24\u4e2a\u5927\u5751\uff1a\n\n1.\u7b2c\u4e00\u79d2\u7684\u65f6\u5019Mirko\u5df2\u7ecf\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\uff1b\n\n2.\u5047\u8bbe\u5728\u7b2cx\u5217\u5f00\u542f\u55b7\u6c14\u80cc\u5305\uff0c\u90a3\u4e48Mirko\u5c06\u5728\u7b2cx+2\u5217\u4e0a\u5347\uff0c\n\n------------\n\u5b9e\u73b0\uff1a\u53ef\u4ee5\u7528dfs\u6216bfs\u6216dp\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u4f7f\u7528dfs\u3002\n   \n\n\u5f88\u660e\u663e\u5982\u679c\u4f7f\u7528dfs\u800c\u4e0d\u52a0\u526a\u679d\u4f1aT\u98de\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5bf9\u5176\u8fdb\u884c\u526a\u679d\u3002\n\n\u526a\u679d\uff1a\n\n1.\u5728\u8fd9\u9053\u9898\u4e2d\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u663e\u7136\u662f\u6ca1\u6709\u5fc5\u8981\u8bbf\u95ee\u7b2c\u4e8c\u6b21\u7684\uff0c\u56e0\u4e3a\u9898\u76ee\u53ea\u9700\u627e\u51fa\u4e00\u6761\u53ef\u884c\u8def\u5f84\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5df2\u8bbf\u95ee\u7684\u8282\u70b9\u6807\u8bb0\u4e3a\u2018X'\u6765\u9632\u6b62\u91cd\u590d\u8bbf\u95ee\uff1b\n\n2.\u5047\u5982\u5230\u8fbe\u7b2cn\u5217\u76f4\u63a5\u9000\u51fa\u9012\u5f52\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u4f7f\u7528assert\u6765\u5b9e\u73b0\n \n------------\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1 << 17;\nint n,ans[10000001],b[100001][2];\nchar polje[11][MAXN];\nbool dfs (int x, int y) \n{\n  if (polje[x][y] == 'X') return 0;//\u5047\u5982\u8be5\u8282\u70b9\u662f\u969c\u788d\u7269\u6216\u8005\u5df2\u8bbf\u95ee\u8fc7\uff0c\u5c31\u4e0d\u518d\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee\uff0c\u8fd4\u56de0\n  if (y == n-1) return 1;//\u5047\u5982\u5230\u8fbe\u76ee\u7684\u5730\u5219\u8fd4\u56de1\n  polje[x][y] = 'X';//\u5bf9\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u8fdb\u884c\u6807\u8bb0\n  if (dfs(min(10, x+1), y+1)) //min\uff0810\uff0cx+1\uff09\u662f\u5bf9\u662f\u5426\u8d85\u51fa\u4e0b\u8fb9\u754c\u7684\u5224\u65ad\n  {\n  \treturn 1;\n  }\n  if (dfs(max(1, x-1), y+1))//\u540c\u7406\u8fd9\u662f\u5bf9\u662f\u5426\u8d85\u51fa\u4e0a\u8fb9\u754c\u7684\u5224\u65ad \n  {\n  \tans[y]=1;//\u5047\u5982ans[i]=1\u8bf4\u660e\u8fd9\u4e00\u79d2\u91cc\u5f00\u542f\u4e86\u55b7\u6c14\u80cc\u5305\n  \treturn 1;\n  }\n  return 0;\n}\nint main()\n{\n  scanf(\"%d\", &n); memset(ans,0,sizeof(ans)); memset(b,0,sizeof(b)); \n  for (int i = 1; i <= 10; ++i) scanf(\"%s\", &polje[i]);\n  int num=0;\n  assert(dfs(10, 0) == 1);//\u5047\u5982\u8fd4\u56de\u503c\u662f1\u5c31\u505c\u6b62\u6267\u884c\n  if(ans[0]==1) num++,b[num][0]=1;\n  for(int i=1;i<n;i++)\n  {\n      if(ans[i-1]==0&&ans[i]==1) num++,b[num][0]=i,b[num][1]=1;\n      else if(ans[i]==1)b[num][1]++;\n  }//\u7edf\u8ba1\u6240\u6709\u5f00\u542f\u55b7\u6c14\u80cc\u5305\u7684\u65f6\u95f4\n  printf(\"%d\\n\",num);\n  for(int i=1;i<=num;i++) printf(\"%d %d\\n\",b[i][0],b[i][1]);\n}\n```\n",
        "postTime": 1586520376,
        "uid": 145585,
        "name": "Devil_may_cry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6285 \u3010[COCI2016-2017#1] Jetpack\u3011"
    },
    {
        "content": "# \u601d\u8def\r\n\u65e0\u804a\u7684\u6a21\u62df\u9898\uff08COCI\u7684\u539f\u9898\uff09\uff0c\u6253\u8d77\u6765\u6709\u70b9\u70e6\u3002\r\n\r\n\u5728\u8fd9\u91cc\u4f7f\u7528dp\u7684\u65b9\u6cd5\u5b9e\u73b0\u6bd4\u8f83\u65b9\u4fbf\u3002\r\n\r\n\u8bbedpi,jdp_{i,j}dpi,j\u200b\u4e3aMirko\u5f53\u524d\u662f\u5426\u53ef\u4ee5\u5230\u8fbe\u6240\u5b9a\u4e49\u4f4d\u7f6e(i,j)(i,j)(i,j)\u3002\r\n\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff08\u4f2a\u4ee3\u7801\uff09\r\n```cpp\r\ndpi,j=dpi,j\u22121\u2223dpi+1,j\u22121(i=1)dp_{i,j}=dp_{i,j-1}|dp_{i+1,j-1}(i=1)dpi,j\u200b=dpi,j\u22121\u200b\u2223dpi+1,j\u22121\u200b(i=1)\r\ndpi,j=dpi+1,j\u22121\u2223dpi\u22121,j\u22121(2\u2264i\u22649)dp_{i,j}=dp_{i+1,j-1}|dp_{i-1,j-1}(2\u2264i\u22649)dpi,j\u200b=dpi+1,j\u22121\u200b\u2223dpi\u22121,j\u22121\u200b(2\u2264i\u22649)\r\ndpi,j=dpi,j\u22121\u2223dpi\u22121,j\u22121(i=10)dp_{i,j}=dp_{i,j-1}|dp_{i-1,j-1}(i=10)dpi,j\u200b=dpi,j\u22121\u200b\u2223dpi\u22121,j\u22121\u200b(i=10)\r\n```\r\n\u8f93\u51fa\u65b9\u6848\u6309\u7167\u9898\u610f\u6a21\u62df\u5373\u53ef\uff0c\u8fd9\u91cc\u4e0d\u7ec6\u804a\u3002\r\n\r\n\u590d\u6742\u5ea6:O(n2)O(n^2)O(n2)\r\n# \u4e0aAC\u4ee3\u7801\r\n```cpp\r\n#include<iostream>\r\n#include<cstdio>\r\n#include<algorithm>\r\nusing namespace std;\r\n#define MAXN 100000//\u5b8f\u5b9a\u4e49\r\nint n,cnt;\r\nchar mp[11][MAXN+5];\r\nint dp[11][MAXN+5];\r\nint vis[MAXN+5];\r\nvoid print(int x,int y)\r\n{\r\n\tif(x==10&&dp[x][y-1])print(x,y-1);\r\n\telse if(x==10&&dp[x-1][y-1])print(x-1,y-1);\r\n\telse if(x==1&&dp[x][y-1]){vis[y-1]=1;print(x,y-1);}\r\n\telse if(x==1&&dp[x+1][y-1]){vis[y-1]=1;print(x+1,y-1);}\r\n\telse if(dp[x-1][y-1])print(x-1,y-1);\r\n\telse if(dp[x+1][y-1]){vis[y-1]=1;print(x+1,y-1);}\r\n\telse return ;\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=10;i++)\r\n\t\tscanf(\"%s\",mp[i]+1);\r\n\tfor(int i=1;i<=10;i++)\r\n\t\tfor(int j=1;j<=n;j++)\r\n\t\tdp[i][j]=0;\r\n\tif(mp[10][1]!='X')dp[10][1]=1;\r\n\tfor(int j=2;j<=n;j++)\r\n\t\tfor(int i=1;i<=10;i++)\r\n\t\tif(mp[i][j]!='X')\r\n\t\t{\r\n\t\t\tif(i==1)dp[i][j]|=dp[i][j-1],dp[i][j]|=dp[i+1][j-1];\r\n\t\t\telse if(i==10)\r\n\t\t\tdp[i][j]|=dp[i][j-1],dp[i][j]|=dp[i-1][j-1];\r\n\t\t\telse dp[i][j]|=dp[i-1][j-1],dp[i][j]|=dp[i+1][j-1];\r\n\t\t}\r\n\tfor(int i=1;i<=10;i++)\r\n\tif(dp[i][n]){print(i,n);break;}\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tint p=i;\r\n\t\twhile(vis[p])p++;if(vis[i])cnt++;i=p;}\r\n\tprintf(\"%d\\n\",cnt);\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tint p=i;\r\n\t\twhile(vis[p])p++;\r\n\t\tif(vis[i])printf(\"%d %d\\n\",i-1,p-i);\r\n\t\ti=p;\r\n\t}\r\n}\r\n```\r\n# \u6ce8\u610f\u70b9\r\n\u5728\u8fd9\u91cc\u6211\u6ca1\u6709\u6253\u6ce8\u91ca\uff0c\u662f\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u901a\u8fc7\u6211\u7684\u601d\u8def\u6765\u81ea\u5df1\u7406\u89e3\uff0c\u800c\u4e0d\u662f\u5bf9\u7740\u6ce8\u91ca\u50bb\u50bb\u7684\u770b\u4e00\u904d\uff0c\u6216\u8005\u662f\u76f4\u63a5\u590d\u5236\u7c98\u8d34\uff0c\u4e3a\u4e86\u7ef4\u62a4\u6d1b\u8c37\u793e\u533a\u79e9\u5e8f\uff0c\u52ff\u6284\u9898\u89e3\uff01",
        "postTime": 1616931970,
        "uid": 137173,
        "name": "CoronaQL",
        "ccfLevel": 0,
        "title": "P6285\u9898\u89e3\uff0c\u6765\u4e86\uff01"
    },
    {
        "content": "## \u5206\u6790\n\n\u5176\u5b9e\u5f88\u7b80\u5355\u3002\n\n\u76f4\u63a5\u8bb0\u5fc6\u5316\u641c\u7d22\u5373\u53ef\uff0c\u5efa\u8bae\u8bc4\u9ec4\u3002\n\n## \u505a\u6cd5\n\n\u5148\u8f93\u5165\u3002\n\n```cpp\nvoid init()//\u8f93\u5165\u51fd\u6570\n{\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tcin>>n;\n\tfor(int i = 1;i<=10;i++)\n\t\tfor(int j = 1;j<=n;j++)\n\t\t\tcin>>a[i][j];\n}\n```\n\n\u518d\u8fdb\u884c\u641c\u7d22\uff0c\u53c2\u6570 $x$ \u8868\u793a\u884c\uff0c\u53c2\u6570 $y$ \u8868\u793a\u5217\u3002\u7528 $vis$ \u8bb0\u5f55\u5f53\u524d\u662f\u5426\u6709\u53ef\u884c\u65b9\u6848\uff0c$v$ \u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u662f\u5426\u6309\u4e86\u3002\u5982\u679c\u5f53\u524d\u70b9\u662f\u969c\u788d\uff0c\u90a3\u5c31\u9000\u51fa\u3002\u5426\u5219\u5c31\u628a\u8fd9\u4e2a\u70b9\u6807\u8bb0\u4e3a\u969c\u788d\uff0c\u9632\u6b62\u6b64\u70b9\u518d\u6b21\u88ab\u641c\u7d22\u3002\u5206\u5f00\u770b\u4e4b\u4e00\u79d2\u6309\u548c\u4e0d\u6309\u7684\u60c5\u51b5\u3002\n\n```cpp\nbool dfs(int x,int y)//dfs\u51fd\u6570\n{\n\tif(vis) return 1;//\u6709\u53ef\u884c\u65b9\u6848\uff0c\u9000\u51fa\n\tif(y==n)//\u5230\u8fbe\u6700\u53f3\u8fb9\uff0c\u53ef\u884c\n\t\treturn vis = 1;\n\tif(a[x][y]=='X') return 0;//\u662f\u969c\u788d\uff0c\u9000\u51fa\n\ta[x][y] = 'X';//\u8bb0\u5fc6\u5316\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u518d\u626b\u4e00\u904d\n\tif(dfs(max(1,x-1),y+1))//\u8fd9\u4e00\u79d2\u8981\u6309\n\t\treturn v[y] = 1;\n\tif(vis) return 1;//\u53ef\u884c\uff0c\u9000\u51fa\n\tif(dfs(min(x+1,10),y+1))//\u4e0d\u6309\n\t\treturn 1;\n\treturn vis;\n}\n```\n\n\u6700\u540e\u8f93\u51fa\uff0c\u628a $v$ \u4e2d\u8fde\u7eed\u4e00\u6bb5 $1$ \u6807\u8bb0\u6210\u7b54\u6848\u7684\u4e00\u6bb5\u3002\n\n```cpp\nvoid print()//\u8f93\u51fa\u51fd\u6570\n{\n\tfor(int i = 1;i<=n;i++)\n\t\tif(v[i-1]==0&&v[i])//\u524d\u4e00\u79d2\u6ca1\u6253\u5361\uff0c\u8fd9\u4e00\u79d2\u6253\u5f00\n        out[++cnt][0] = i-1,out[cnt][1] = 1;//\u5f00\u65b0\u7684\u4e00\u6bb5\n\t\telse if(v[i]) out[cnt][1]++;//\u5426\u5219\u8fd8\u662f\u5f53\u524d\u7684\u4e00\u6bb5\n\tcout<<cnt<<'\\n';\n\tfor(int i = 1;i<=cnt;i++)\n\t\tcout<<out[i][0]<<' '<<out[i][1]<<'\\n';\n}\n```\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+5;\nint n,out[N][2],cnt;\n//out[i][0]\u8868\u793a\u7b2c i \u6bb5\u7684\u5f00\u59cb\u65f6\u95f4\uff0cout[i][1]\u8868\u793a\u7b2c i \u6bb5\u6301\u7eed\u65f6\u95f4\nchar a[11][N];\nbool v[N],vis;\nvoid init()//\u8f93\u5165\u51fd\u6570\n{\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tcin>>n;\n\tfor(int i = 1;i<=10;i++)\n\t\tfor(int j = 1;j<=n;j++)\n\t\t\tcin>>a[i][j];\n}\nvoid print()//\u8f93\u51fa\u51fd\u6570\n{\n\tfor(int i = 1;i<=n;i++)\n\t\tif(v[i-1]==0&&v[i])//\u524d\u4e00\u79d2\u6ca1\u6253\u5361\uff0c\u8fd9\u4e00\u79d2\u6253\u5f00\n        out[++cnt][0] = i-1,out[cnt][1] = 1;//\u5f00\u65b0\u7684\u4e00\u6bb5\n\t\telse if(v[i]) out[cnt][1]++;//\u5426\u5219\u8fd8\u662f\u5f53\u524d\u7684\u4e00\u6bb5\n\tcout<<cnt<<'\\n';\n\tfor(int i = 1;i<=cnt;i++)\n\t\tcout<<out[i][0]<<' '<<out[i][1]<<'\\n';\n}\nbool dfs(int x,int y)//dfs\u51fd\u6570\n{\n\tif(vis) return 1;//\u6709\u53ef\u884c\u65b9\u6848\uff0c\u9000\u51fa\n\tif(y==n)//\u5230\u8fbe\u6700\u53f3\u8fb9\uff0c\u53ef\u884c\n\t\treturn vis = 1;\n\tif(a[x][y]=='X') return 0;//\u662f\u969c\u788d\uff0c\u9000\u51fa\n\ta[x][y] = 'X';//\u8bb0\u5fc6\u5316\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u518d\u626b\u4e00\u904d\n\tif(dfs(max(1,x-1),y+1))//\u8fd9\u4e00\u79d2\u8981\u6309\n\t\treturn v[y] = 1;\n\tif(vis) return 1;//\u53ef\u884c\uff0c\u9000\u51fa\n\tif(dfs(min(x+1,10),y+1))//\u4e0d\u6309\n\t\treturn 1;\n\treturn vis;\n}\nint main()\n{\n\tinit();\n\tdfs(10,1);//\u8d77\u70b9\u662f\u7b2c\u5341\u884c\u7b2c\u4e00\u5217\n\tprint();\n\treturn 0;\n}\n```",
        "postTime": 1684565066,
        "uid": 581316,
        "name": "pyy1",
        "ccfLevel": 0,
        "title": "P6285 [COCI2016-2017#1] Jetpack \u9898\u89e3"
    }
]