[
    {
        "content": "### \u8fd9\u91cc\u6709\u4e00\u4e2a$O(n)$\u7684\u505a\u6cd5\n\u9996\u5148\u5148\u6765\u8003\u8651\u4e0b\u9762\u4e00\u79cd\u60c5\u51b5\uff0c\u5047\u8bbe\u7b2c$k$\u6b21\u5207\u5272\u65f6\uff0c\u5929\u6570\u4e3a$d_k$\uff0c\u9ad8\u5ea6\u4e3a$b_k$\uff0c\u7b2c$k+1$\u6b21\u5207\u5272\u65f6\uff0c\u5929\u6570\u4e3a$d_{k+1}$\uff0c\u9ad8\u5ea6\u4e3a$b_{k+1}$\uff0c\u90a3\u4e48\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5207\u5272\u901f\u5ea6\uff0c\u4ee4$v=\\frac{b_{k+1}-b_k}{d_{k+1}-d_k}$\uff0c\u8fd9\u4e2a\u5207\u5272\u901f\u5ea6\u6709\u4ec0\u4e48\u542b\u4e49\u5462\uff0c\u5982\u679c\u5728$d_k$\u5929\u65f6\u6240\u6709\u7684\u8349**\u90fd\u662f**$b_k$\u9ad8\uff0c\u90a3\u4e48\u751f\u957f\u901f\u5ea6$>v$\u7684\u8349\u90fd\u8981\u5272\u6389,\u6ce8\u610f\u8fd9\u91cc\u7684$v$\u6781\u6709\u53ef\u80fd\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u800c\u5728\u5199\u4ee3\u7801\u7684\u65f6\u5019\u6700\u597d\u8fd8\u662f\u907f\u514d\u6d6e\u70b9\u6570\u7684\u51fa\u73b0\uff0c\u6240\u4ee5\u8981\u600e\u4e48\u8f6c\u5316\uff1f\u8fd9\u4e2a\u5e94\u8be5\u5f88\u663e\u7136\uff0c\u4ee4$v=\\lfloor \\frac{b_{k+1}-b_k}{d_{k+1}-d_k} \\rfloor$\u5373\u53ef\uff0c\u56e0\u4e3a\u5224\u65ad\u7684\u65f6\u5019\u90fd\u662f\u627e\u7684\u5927\u4e8e\u8fd9\u4e2a$v$\u7684\uff0c\u800c\u7ed9\u51fa\u7684\u751f\u957f\u901f\u5ea6\u90fd\u662f\u6574\u6570\uff0c\u6240\u4ee5\u628a\u8fd9\u4e2a$v$\u4e0b\u53d6\u6574\u540e\u518d\u5224\u65ad\u5927\u5c0f\u4e5f\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002\u600e\u4e48\u6c42\u51fa\u7b54\u6848\u5462\uff1f\u5f88\u663e\u7136\uff0c\u5c31\u662f$(d_{k+1}-d_k)*$\u9700\u8981\u5272\u6389\u7684\u8349\u7684\u603b\u751f\u957f\u901f\u5ea6$+t$\uff0c$t$\u662f\u4ec0\u4e48\uff1f\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u5982\u679c$b_k>b_{k+1}$\uff0c\u90a3\u4e48\u9664\u4e86\u957f\u51fa\u6765\u7684\u8349\uff0c\u8fd8\u9700\u8981\u5272\u6389$b_k$\u6bd4$b_{k+1}$\u9ad8\u7684\u90a3\u4e00\u6bb5\uff0c\u4e5f\u5c31\u662f$(b_k-b_{k+1})*$\u9700\u8981\u5272\u6389\u7684\u8349\u7684\u603b\u6570\u91cf\uff0c\u5982\u679c$b_k==b_{k+1}$\uff0c$t=0$\uff0c\u5982\u679c\u5982\u679c$b_k<b_{k+1}$\uff0c\u5c31\u4e0d\u80fd\u957f\u51fa\u6765\u7684\u5168\u90fd\u5272\u6389\uff0c\u56e0\u4e3a\u53ea\u5272\u5230$b_{k+1}$\uff0c\u6240\u4ee5\u9700\u8981\u628a\u4e4b\u524d\u591a\u7b97\u7684\u90a3\u4e9b\u51cf\u53bb\uff0c\u5373$-(b_{k+1}-b_k)*$\u9700\u8981\u5272\u6389\u7684\u8349\u7684\u603b\u6570\u91cf\uff0c\u7efc\u4e0a\u6240\u8ff0\uff0c$t=(b_k-b_{k+1})*$\u9700\u8981\u5272\u6389\u7684\u8349\u7684\u603b\u6570\u91cf\uff0c\u4e8e\u662f\u9700\u8981\u6c42\u7684\u5c31\u662f\u9700\u8981\u5272\u6389\u7684\u8349\u7684\u603b\u751f\u957f\u901f\u5ea6\u548c\u9700\u8981\u5272\u6389\u7684\u8349\u7684\u603b\u6570\u91cf\uff0c\u6ce8\u610f\u5230$m$\u6700\u5927\u4e5f\u5c31$10^6$\uff0c\u6240\u4ee5\u5f00$10^6$\u4e2a\u6876\uff0c\u7b2c$i$\u4e2a\u6876\u91cc\u8fb9\u5b58\u751f\u957f\u901f\u5ea6\u4e3a$i$\u7684\u8349\u7684\u6570\u91cf\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fd0\u7528\u4e00\u4e0b\u524d\u7f00\u548c\u7684\u601d\u60f3\u6c42\u51fa\u4e0a\u8fb9\u7684\u4e24\u4e2a\u503c\u3002\n\n\u597d\u4e86\u57fa\u672c\u601d\u60f3\u6709\u4e86\uff0c\u4f46\u662f\u6ce8\u610f\u4e00\u4e2a\u95ee\u9898\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u9700\u8981\u5207\u5272\u7684\u8349\u5728\u4e0a\u4e00\u6b21\u5207\u5272\u65f6\u90fd\u6070\u597d\u4e3a$b$\uff0c\u5373\u4e0a\u4e00\u6b21\u6ca1\u6709\u88ab\u5207\u5272\u4f46\u662f\u4e0b\u4e00\u6b21\u5b83\u957f\u5230\u4e86\u53ef\u4ee5\u88ab\u5207\u5272\u7684\u9ad8\u5ea6\u7684\u8349\uff0c\u628a\u8fd9\u4e9b\u8349\u3002~~\u6240\u4ee5\u4e0a\u8fb9\u8ba8\u8bba\u4e86\u4e94\u767e\u591a\u5b57\u5c31\u767d\u626f\u4e86\u5417~~\uff0c\u663e\u7136\u4e0d\u662f\uff0c\u8fd8\u662f\u6709\u4e00\u90e8\u5206\u8349\u662f\u6ee1\u8db3\u4e0a\u8ff0\u7684\u5207\u5272\u529e\u6cd5\u7684\uff0c\u4e5f\u5c31\u662f\u4e24\u6b21\u90fd\u88ab\u5207\u5272\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u7279\u6b8a\u8003\u8651\u4e0a\u4e00\u6b21\u6ca1\u6709\u88ab\u5207\u5272\u4f46\u662f\u4e0b\u4e00\u6b21\u5b83\u957f\u5230\u4e86\u53ef\u4ee5\u88ab\u5207\u5272\u7684\u9ad8\u5ea6\u7684\u8349\uff0c\u628a\u8fd9\u4e9b\u8349\u5904\u7406\u4e86\u5c31\u884c\u3002\u901a\u8fc7\u4e0a\u4e00\u6b21\u7684\u5207\u5272\u5904\u7406\u8fd9\u4e2a\u5f88\u4e0d\u597d\u5904\u7406\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u7b2c0\u5929\u65f6\u5272\u6389\u4e86\u6240\u6709\u9ad8\u5ea6\u5927\u4e8e0\u7684\u8349\uff08\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u56e0\u4e3a\u521d\u59cb\u65f6\u90fd\u662f0\uff09\uff0c\u90a3\u4e48\u5047\u8bbe\u5f53\u524d\u65f6\u523b\u4e3a$d_k$\uff0c\u8fd9\u4e9b\u8349\u5728\u4e4b\u524d\u7684\u67d0\u4e2a\u65f6\u523b$d_t(d_t \\in[0,d_k)\\ \\ )$\u4e00\u5b9a\u4f1a\u88ab\u5272\u6389\uff0c\u4e8e\u662f$d_t$\u5230$d_k$\u5957\u7528\u4e0a\u8ff0\u5f0f\u5b50\u5c31\u884c\uff0c\u806a\u660e\u7684\u4f60\u4e00\u5b9a\u4f1a\u53d1\u73b0\u8fd9\u6837\u4f1a\u91cd\u590d\u5272\u8349\uff0c\u6ca1\u9519\uff0c\u7684\u786e\u4f1a\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u5047\u8bbe\u4e0a\u6b21\u5272\u6389\u4e86\u751f\u957f\u901f\u5ea6\u8d85\u8fc7$last$\u7684\u8349\uff0c\u90a3\u4e48\u8fd9\u6b21\u53ea\u9700\u8981\u5272\u6389\u751f\u957f\u901f\u5ea6\u8d85\u8fc7\u5207\u5272\u901f\u5ea6\u4e14\u5c0f\u4e8e\u7b49\u4e8e$last$\u7684\u8349\u5373\u53ef,\u4f46\u662f\u8fd9\u6837\u8fd8\u662f\u4f1a\u51fa\u73b0\u91cd\u590d\u5272\u8349\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u53ef\u80fd\u524d\u8fb9\u5df2\u7ecf\u5272\u8fc7\u7684\u53c8\u88ab\u5272\u4e86\u4e00\u6b21\uff0c\u6240\u4ee5\u9700\u8981\u8bb0\u5f55\u524d\u8fb9\u6bcf\u4e00\u6b21\u5272\u8349\u5272\u8fc7\u7684\u6700\u5c0f\u5207\u5272\u901f\u5ea6\uff0c\u4e3e\u4e2a\u4f8b\u5b50\u5427\uff0c\u5047\u8bbe\u8bb0\u5f55\u7684\u8fd9\u4e2a\u4e3a$to_i$\uff0c\u8868\u793a\u7684\u610f\u601d\u5c31\u662f\u5728\u7b2c$i$\u6b21\u5272\u8349\u7684\u65f6\u5019\u751f\u957f\u901f\u5ea6\u5927\u4e8e$to_i$\u7684\u5df2\u7ecf\u90fd\u88ab\u5272\u6389\u4e86,\u6240\u4ee5\u5982\u679c\u6b64\u65f6$k-i$\u7684\u5207\u5272\u901f\u5ea6\u5927\u4e8e$to_i$\u5c31\u9700\u8981\u76f4\u63a5$break$\u6389\uff0c\u907f\u514d\u4e86\u91cd\u590d\u5272\u8349\u3002\n\u4f46\u662f\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f$O(m^2)$\u7684\uff0c\u9700\u8981\u4f18\u5316\u4e00\u4e0b\u3002\n\n\u6ce8\u610f\u5230\u8349\u7684\u751f\u957f\u901f\u5ea6\u662f\u6709\u5355\u8c03\u6027\u7684\uff0c\u5728\u4e0d\u53bb\u5272\u8349\u7684\u60c5\u51b5\u4e0b\u751f\u957f\u901f\u5ea6\u8d8a\u5927\u7684\u9ad8\u5ea6\u4e00\u5b9a\u8d8a\u5927~~\u5e9f\u8bdd~~\uff0c\u4e8e\u662f\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a$to$\u503c\u5355\u8c03\u4e0a\u5347\u7684\u5355\u8c03\u6808\u3002\u82e5\u6808\u9876\u90a3\u4e00\u6b21\u5207\u5272\u80fd\u5207\u5230\u7684\u6700\u5c0f\u901f\u5ea6$\\leq$\u5f53\u524d\u80fd\u5207\u5230\u7684\u6700\u5c0f\u901f\u5ea6\uff0c\u5219\u524d\u9762\u5207\u4e0d\u5230\u7684\u4f9d\u65e7\u5207\u4e0d\u5230\uff0c\u82e5\u6808\u9876\u90a3\u4e00\u6b21\u5207\u5272\u80fd\u5207\u5230\u7684\u6700\u5c0f\u901f\u5ea6$>$\u5f53\u524d\u80fd\u5207\u5230\u7684\u6700\u5c0f\u901f\u5ea6\uff0c\u5219\u5148\u8ba1\u7b97\u6bd4\u6808\u9876\u90a3\u4e00\u6b21\u5207\u5272\u80fd\u5207\u5230\u7684\u6700\u5c0f\u901f\u5ea6\u5927\u7684,\u5e76\u5c06\u6808\u9876$pop$\u6389\uff0c\u91cd\u590d\u6b64\u8fc7\u7a0b\u81f3\u6808\u9876\u901f\u5ea6$\\leq$\u5f53\u524d\u80fd\u5207\u5230\u7684\u6700\u5c0f\u901f\u5ea6\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u4e0d\u4f1a\u6f0f\u6389\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\u7b54\u6848\u662f\u4e0d\u4f1a\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u7684\u5272\u8349\u90fd\u662f\u5272\u7684\u8fde\u7eed\u7684\u901f\u5ea6\uff0c\u53ea\u53ef\u80fd\u51fa\u73b0\u91cd\u590d\u60c5\u51b5\uff0c\u800c\u91cd\u590d\u60c5\u51b5\u4e0a\u8fb9\u5df2\u7ecf\u6392\u9664\uff0c\u6240\u4ee5\u8fd9\u79cd\u505a\u6cd5\u662f\u53ef\u4ee5\u7684\u3002\n\n\u7531\u4e8e\u672c\u4eba\u849f\u84bb\uff0c\u53ef\u80fd\u6709\u4e9b\u5730\u65b9\u5199\u7684\u4e0d\u4e25\u8c28\u6216\u8005\u4e0d\u6e05\u695a\uff0c\u53c8\u6216\u8005\u6709\u7684\u5730\u65b9\u5199\u9519\u4e86\u3002\u3002\u3002\u53cd\u6b63\u611f\u89c9\u4e0d\u5bf9\u7684\u5730\u65b9\u6b22\u8fce\u6307\u51fa\u6765\u3002\n\n\u501f\u9274\u4e8e<https://www.cnblogs.com/wangyurzee7/p/5224273.html>\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int lqs=5e5+10,m=1e6;\nint day,a[lqs<<1],n,stk[lqs],top;\nll s[lqs<<1],d[lqs],b[lqs],to[lqs];\nint main(){\n\tscanf(\"%d%d\",&n,&day);\n\tfor(int w,i=1;i<=n;i++)\n\t\tscanf(\"%d\",&w),a[w]++;\n\tfor(int i=1;i<=day;i++)\n\t\tscanf(\"%lld%lld\",&d[i],&b[i]);\n\tfor(int i=1;i<=m;i++)\n\t\ts[i]=s[i-1]+1ll*a[i]*i;\n\tfor(int i=1;i<=m;i++)\n\t\ta[i]+=a[i-1];\n\ttop=1;\n\tfor(int i=1;i<=day;i++){\n\t\tll res=0;\n\t\tint last=m,x=max(to[stk[top]],min((b[i]-b[stk[top]])/(d[i]-d[stk[top]]),1ll*m));\n\t\twhile(x<last){\n\t\t\tres+=(d[i]-d[stk[top]])*(s[last]-s[x])+(b[stk[top]]-b[i])*(a[last]-a[x]);\n\t\t\tlast=x;\n\t\t\tif(last>to[stk[top]])break;\n\t\t\tif(top==0)break;top--;\n\t\t\tx=max(to[stk[top]],min((b[i]-b[stk[top]])/(d[i]-d[stk[top]]),1ll*m));\n\t\t}\n\t\tto[i]=last;\n\t\tif(to[i]<m)stk[++top]=i;\n\t\tprintf(\"%lld\\n\",res);\n\t}\n}\n```",
        "postTime": 1593738508,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5579 \u3010[PA2015]Siano\u3011"
    },
    {
        "content": "### [HH_Halo](https://www.cnblogs.com/hhhhalo/p/13736793.html)\n## \u601d\u8def\u5206\u6790\n* \u9996\u5148\u8fd9\u9898\u6709\u4e00\u4e2a\u5f88\u795e\u5947\u7684\u6027\u8d28\uff0c\u5c31\u662f\u957f\u5f97\u5feb\u5f97\u4e00\u5b9a\u957f\u5f97\u9ad8\uff0c\u4e0d\u8bba\u6709\u6ca1\u6709\u88ab\u5272\u6389\uff0c\u90a3\u4e48\u5728\u5c06\u751f\u957f\u901f\u5ea6\u6392\u5e8f\u4ee5\u540e\uff0c**\u6bcf\u4e00\u6b21\u5272\u6389\u7684\u4e00\u5b9a\u662f\u4e00\u4e2a\u533a\u95f4**\uff0c\u800c\u4e14\u8fd8\u662f\u4e00\u4e2a\u540e\u7f00\u533a\u95f4\n* \u6240\u4ee5\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u4f7f\u7528\u7ebf\u6bb5\u6811\u5904\u7406\u4e86\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u90fd\u53ef\u80fd\u6709\u88ab\u5272\u7684\uff0c\u4e5f\u4f1a\u6709\u6ca1\u88ab\u5272\u7684\uff0c\u6240\u4ee5\u5c06\u5176\u5206\u5f00\u5904\u7406\u3002\n* \u8fd9\u65f6\u5019\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u627e\u5230\u751f\u957f\u901f\u5ea6\u6700\u5c0f\u7684\u4f1a\u88ab\u5272\u6389\u7684\u70b9\uff0c\u8fd9\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e5f\u5f88\u65b9\u4fbf\u5904\u7406\u3002\u5728\u7ebf\u6bb5\u6811\u4e2d\u8bb0\u5f55\u4e00\u4e9b\u5176\u5305\u542b\u533a\u95f4\u7684\u6700\u9ad8\u503c\uff0c\u5bfb\u627e\u65f6\u53ea**\u9700\u5224\u65ad\u4e00\u4e0b\u5de6\u53f3\u5b50\u6811\u7684\u6700\u5927\u503c\u7136\u540e\u51b3\u5b9a\u662f\u7ee7\u7eed\u5411\u5de6\u8fd8\u662f\u5411\u53f3**\u3002\n\u53e6\u5916\u4e5f\u6709\u53ef\u80fd\u627e\u4e0d\u5230\uff0c\u8fd4\u56de\u7684\u65f6\u5019\u5904\u7406\u4e00\u4e0b\u5c31\u597d\u4e86\n\n## $Code$\n```c++\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define R register\n#define N 500010\n#define ll long long\nusing namespace std;\ninline ll read(){\n\tll x = 0,f = 1;\n\tchar ch = getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint n,m,a[N];\nll sum[N];\nstruct Segment_Tree{\n\tll het,clock,sum,est;//\u5206\u522b\u5bf9\u5e94\u9ad8\u5ea6\u7684tag\uff0c\u751f\u957f\u5929\u6570\u7684tag\uff0c\u533a\u95f4\u548c\uff0c\u548c\u6700\u9ad8\u503c\n}tr[N<<2];\n#define ls rt<<1\n#define rs rt<<1|1\nvoid build(int rt,int l,int r){\n\ttr[rt].het = -1;//\u521d\u59cb\u5316\u4e3a-1\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u9ad8\u5ea6\u4e3a0\u7684\u65f6\u5019\uff0c\u4ee3\u8868\u6ca1\u6709\u88ab\u5272\n\tif(l==r)return;\n\tint mid = (l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n}\nvoid cut(int rt,int l,int r,ll val){\n\ttr[rt].het = tr[rt].est = val;//\u88ab\u5272\u4ee5\u540e\u9ad8\u5ea6\u76f8\u540c\n\ttr[rt].sum = 1ll*(r-l+1)*val;\n\ttr[rt].clock = 0;//\u6ce8\u610f\u6e05\u7a7a\u751f\u957f\u5929\u6570\uff0c\u56e0\u4e3a\u8fd9\u65f6\u662f\u4e00\u4e2a\u65b0\u8d77\u70b9\n}\nvoid grow(int rt,int l,int r,ll days){\n\ttr[rt].clock += days;//\u8fd9\u4e2a\u76f4\u63a5\u533a\u95f4\u52a0\u5c31\u597d\u4e86\n\ttr[rt].sum += 1ll*(sum[r]-sum[l-1])*days;\n\ttr[rt].est += 1ll*a[r]*days;\n}\nvoid pushdown(int rt,int l,int r){\n\tint mid = (l+r)>>1;\n\tif(tr[rt].het!=-1){//\u8bf4\u660e\u9700\u8981\u5272\n\t\tcut(ls,l,mid,tr[rt].het);\n\t\tcut(rs,mid+1,r,tr[rt].het);\n\t\ttr[rt].het = -1;\n\t}\n\tif(tr[rt].clock){//\u8bf4\u660e\u6ca1\u88ab\u5272\n\t\tgrow(ls,l,mid,tr[rt].clock);\n\t\tgrow(rs,mid+1,r,tr[rt].clock);\n\t\ttr[rt].clock = 0;\n\t}\n}\nll modify(int rt,int l,int r,int s,int t,ll val){//\u53ef\u4ee5\u5728\u4fee\u6539\u7684\u65f6\u5019\u5c31\u5f97\u51fa\u7b54\u6848\n\tif(s<=l&&t>=r){\n\t\tll tmp = tr[rt].sum;\n\t\tcut(rt,l,r,val);\n\t\treturn tmp - tr[rt].sum;//\u5272\u524d\u7684\u9ad8\u5ea6-\u5272\u5b8c\u4ee5\u540e\u7684\u9ad8\u5ea6\n\t}\n\tll res = 0;\n\tint mid = (l+r)>>1;\n\tpushdown(rt,l,r);\n\tif(s<=mid)res += modify(ls,l,mid,s,t,val);\n\tif(t>mid)res += modify(rs,mid+1,r,s,t,val);\n\ttr[rt].sum = tr[ls].sum + tr[rs].sum;\n\ttr[rt].est = tr[rs].est;\n\treturn res;\n}\nint find(int rt,int l,int r,ll val){//\u5bfb\u627e\u4f1a\u88ab\u5272\u7684\u6700\u5c0f\u5de6\u7aef\u70b9\n\tif(l==r)return tr[rt].sum < val ? n+1 : l;\n\tint mid = (l+r)>>1;\n\tpushdown(rt,l,r);\n\tif(tr[ls].est>=val)return find(ls,l,mid,val);\n\telse return find(rs,mid+1,r,val);\n}\nint main(){\n\tn = read(),m = read();\n\tfor(R int i = 1;i <= n;i++)a[i] = read();\n\tsort(a+1,a+1+n);\n\tfor(R int i = 1;i <= n;i++)sum[i] = sum[i-1]+a[i];\n\tbuild(1,1,n);\n\tll pre = 0;\n\tfor(R int i = 1;i <= m;i++){\n\t\tll d = read(),b = read();\n\t\tgrow(1,1,n,d-pre);\n\t\tpre = d;\n\t\tprintf(\"%lld\\n\",modify(1,1,n,find(1,1,n,b),n,b));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1601126270,
        "uid": 322491,
        "name": "HH_Halo",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5579 \u3010[PA2015]Siano\u3011"
    },
    {
        "content": "### \u7ebf\u6bb5\u6811\u7efc\u5408\n\n\u5bf9\u4e8e\u751f\u957f\uff0c\u8bb0\u5f55 lazytag \u5c31\u53ef\u4ee5\u4e86\uff0c\u5173\u952e\u662f\u5982\u4f55\u5c06\u5927\u4e8e $b_i$ \u7684\u6570\u53d8\u6210 $b_i$ \u3002\n\n\u5982\u679c\u6211\u4eec\u76f4\u63a5\u505a\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u8fd9\u4e9b\u5927\u4e8e $b_i$ \u7684\u6570\u96f6\u6563\u5730\u5206\u5e03\u5728 $[1,n]$ \u4e2d\uff0c\u76f4\u63a5\u9000\u5316\u6210\u5355\u70b9\u4fee\u6539\uff0c\u679a\u4e3e\u8d85\u65f6\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u8bd5\u7740\u5c06\u5176\u8f6c\u5316\u4e3a\u533a\u95f4\u4fee\u6539\u3002\n\n\u600e\u6837\u8f6c\u5316\u4e3a\u533a\u95f4\u4fee\u6539\uff1f\n\n\u5c1d\u8bd5\u5c06\u5927\u4e8e $b_i$ \u7684\u6570\u653e\u5728\u4e00\u5806\uff0c\u53ef\u4ee5\u8ba9\u8fd9\u4e9b\u6570\u5355\u8c03\u9012\u589e\uff0c\u8fd9\u6837\uff0c\u5927\u4e8e $b_i$ \u7684\u6570\u5c31\u96c6\u4e2d\u5206\u5e03\u5728 $[1,n]$ \u7684\u53f3\u8fb9\u4e86\u3002\n\n\u5c06 $a_i$ \u6570\u7ec4\u5355\u8c03\u9012\u589e\u6392\u5217\uff0c\u8fd9\u4e9b\u6570\u7684\u589e\u957f\u901f\u5ea6\u5c31\u5355\u8c03\u9012\u589e\uff0c\u5373\u4f7f\u5c06\u5927\u4e8e $d_i$ \u7684\u6570\u53d8\u6210 $d_i$ \uff0c\u7ebf\u6bb5\u6811\u4e2d\u7684\u6570\u4e5f\u4e00\u5b9a\u662f\u5355\u8c03\u4e0d\u964d\u7684\u3002\n\n\u6211\u628a\u6240\u6709\u7684\u4fee\u6539\u90fd\u5199\u5728\u4e86\u4e00\u4e2a\u51fd\u6570\u4e2d\uff1a\n```\nmodify(i,k1,k2,k3)\n```\n\u8868\u793a $x=k1\\times x+k2\\times a[i]+k3$\u3002\n \n\u5bf9\u5e94\u7684\uff0c\u7528\u4e86\u4e09\u4e2a ``` lazytag ``` \u8bb0\u5f55\u3002\n\n\u8fd9\u6837\u4ee3\u7801\u5c31\u53ef\u4ee5\u6bd4\u8f83\u7b80\u6d01\u5566\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ls (i<<1)\n#define rs (i<<1|1)\n#define mid (a[i].l+a[i].r>>1)\n#define len(p) (a[p].r-a[p].l+1)\n#define laz1 a[i].lazy1\n#define laz2 a[i].lazy2\n#define laz3 a[i].lazy3\n\nusing namespace std;\n\nconst int amou=6e5+90;\n\nint n,m;\nstruct Seg{\n\tint l,r,Max,lazy1,lazy2,lazy3;\n\tint sum;\n}a[amou<<2];\nint g[amou],s[amou];\n\nvoid build(int i,int l,int r){\n\ta[i].l=l,a[i].r=r,laz1=1,laz2=laz3=0;\n\tif(l==r) return;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n}\n\nvoid modify(int i,int k1,int k2,int k3){\n\tlaz1*=k1,laz2=laz2*k1+k2,laz3=laz3*k1+k3;\n\ta[i].Max=a[i].Max*k1+k2*g[a[i].r]+k3;\n\ta[i].sum=a[i].sum*k1+(s[a[i].r]-s[a[i].l-1])*k2+k3*len(i);\n}\n\nvoid pushdown(int i){\n\tmodify(ls,laz1,laz2,laz3);\n\tmodify(rs,laz1,laz2,laz3);\n\tlaz1=1,laz2=laz3=0;\n}\n\nvoid pushup(int i){\n\ta[i].Max=a[rs].Max;\n\ta[i].sum=a[ls].sum+a[rs].sum;\n}\n\nint modify_B(int i,int B){\n\tif(a[i].l==a[i].r)\n\t{\n\t\tint as=a[i].sum-B;\n\t\tmodify(i,0,0,B);\n\t\treturn as;\n\t}\n\tpushdown(i);\n\tint as=0;\n\tif(a[ls].Max>B)\n\t{\n\t\tas=modify_B(ls,B)+a[rs].sum-B*len(rs);\n\t\tmodify(rs,0,0,B);\n\t}\n\telse as=modify_B(rs,B);\n\tpushup(i);\n\treturn as;\n}\n\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&g[i]);\n\tsort(g+1,g+n+1);\n\tfor(int i=1;i<=n;i++) s[i]=s[i-1]+g[i];\n\tbuild(1,1,n);\n\tint las=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint d,b;\n\t\tscanf(\"%lld%lld\",&d,&b);\n\t\tmodify(1,1,d-las,0);\n\t\tint ans=0;\n\t\tif(a[1].Max>b) ans=modify_B(1,b);\n\t\tlas=d;\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1629710961,
        "uid": 280519,
        "name": "Yaha",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5579\u3010[PA2015]Siano\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u6a21\u677f\u9898\n\n\u8fd9\u9053\u9898\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u8349\u7684\u957f\u5ea6\u662f\u968f\u751f\u957f\u901f\u5ea6**\u5355\u8c03\u9012\u589e**\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u751f\u957f\u901f\u5ea6 $a_i$ \u4ece\u5c0f\u5230\u5927\u6392\u4e2a\u5e8f\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u8349\u7684\u957f\u5ea6\u7684\u5173\u7cfb $l_i<=l_j,(i\\le j)$ \uff0c\u8fd9\u4e2a\u67ff\u5b50\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u6210\u7acb\u3002\u6240\u4ee5\u8bf4\u6211\u4eec\u53ea\u8981\u7ed9\u8349\u6392\u5e8f\uff0c\u7136\u540e\u627e\u5230\u88ab\u5272\u7684\u8349\u7684\u5de6\u7aef\u70b9\uff0c\u8fdb\u884c**\u533a\u95f4\u4fee\u6539**\uff0c\u7528\u7ebf\u6bb5\u6811**\u7ef4\u62a4\u533a\u95f4\u548c\u518d\u51cf\u53bb\u4fee\u6539\u540e\u7684\u533a\u95f4\u548c**\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ls(k) k<<1\n#define rs(k) k<<1|1\n#define ll long long\nusing namespace std;\nconst int N=500010;\nll read(){\n\tll x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<3)+(x<<1)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nll n,m,a[N],d,b,last,sum[N];\nstruct SegmentTree{\n\tll l,r,sum,maxn,day,tag;//day \u662f\u751f\u957f\u7684\u6807\u8bb0\uff0c tag \u662f\u5272\u7684\u6807\u8bb0\n}tree[N<<2];\nvoid pushup(int k){\n\ttree[k].sum=tree[ls(k)].sum+tree[rs(k)].sum;\n\ttree[k].maxn=tree[rs(k)].maxn;\n}\nvoid build(int k,int l,int r){\n\ttree[k].tag=-1,tree[k].l=l,tree[k].r=r;\n\tif(l==r)return;\n\tint mid=(l+r)/2;\n\tbuild(ls(k),l,mid),build(rs(k),mid+1,r);\n}\nvoid grow(int k,int l,int r,ll day){//\u751f\u957f\n\ttree[k].day+=day;\n\ttree[k].sum+=1ll*(sum[r]-sum[l-1])*day;\n\ttree[k].maxn+=1ll*a[r]*day;\n}\nvoid cut(int k,int l,int r,ll val){//\u5272\n\ttree[k].tag=tree[k].maxn=val;\n\ttree[k].sum=1ll*(r-l+1)*val;\n\ttree[k].day=0;\n}\nvoid pushdown(int k){\n\tint mid=(tree[k].l+tree[k].r)/2,l=tree[k].l,r=tree[k].r;\n\tif(tree[k].tag!=-1){//\u9700\u8981\u5272\uff0c\u6ce8\u610f\u5272\u7684\u4f18\u5148\u7ea7\u6bd4\u751f\u957f\u9ad8\n\t\tcut(ls(k),l,mid,tree[k].tag),cut(rs(k),mid+1,r,tree[k].tag);\n\t\ttree[k].tag=-1;\n\t}\n\tif(tree[k].day){//\u9700\u8981\u751f\u957f\n\t\tgrow(ls(k),l,mid,tree[k].day),grow(rs(k),mid+1,r,tree[k].day);\n\t\ttree[k].day=0;\n\t}\n}\nint query1(int k,ll v){//\u67e5\u8be2\u5de6\u7aef\u70b9\n\tif(tree[k].l==tree[k].r)return tree[k].sum>=v?tree[k].l:n+1;\n\tpushdown(k);\n\tif(tree[ls(k)].maxn>=v)return query1(ls(k),v);\n\telse return query1(rs(k),v);\n}\nll query2(int k,int ql,int qr,ll v){//\u67e5\u8be2\u7b54\u6848\n\tll res=0;\n\tif(ql>qr)return 0;\n\tif(ql<=tree[k].l&&tree[k].r<=qr){\n\t\tll tmp=tree[k].sum;\n\t\tcut(k,tree[k].l,tree[k].r,v);\n\t\treturn tmp-tree[k].sum;//\u539f\u6765\u7684\u533a\u95f4\u548c\u51cf\u53bb\u540e\u6765\u7684\u533a\u95f4\u548c\n\t}\n\tint mid=(tree[k].l+tree[k].r)/2;\n\tif(ql<=mid)res+=query2(ls(k),ql,qr,v);\n\tif(mid<qr)res+=query2(rs(k),ql,qr,v);\n\tpushup(k);\n\treturn res;\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tsort(a+1,a+n+1);\n\tfor(int i=1;i<=n;i++)sum[i]=sum[i-1]+a[i];\n\tbuild(1,1,n);\n\twhile(m--){\n\t\td=read(),b=read();\n\t\tgrow(1,1,n,d-last);\n\t\tlast=d;\n\t\tprintf(\"%lld\\n\",query2(1,query1(1,b),n,b));\n\t}\n\treturn 0;\n}\n```\n\u7ebf\u6bb5\u6811\u7684\u9898\u53ea\u8981\u60f3\u5230\u65b9\u6cd5\uff0c\u4ee3\u7801\u867d\u957f\uff0c\u4f46\u5199\u8d77\u6765\u4e5f\u4e0d\u662f\u96be\u4e8b\u3002\u611f\u8c22\u89c2\u770b\uff01",
        "postTime": 1615628771,
        "uid": 178556,
        "name": "Skyjoy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5579 \u3010[PA2015]Siano\u3011"
    },
    {
        "content": "\u6b64\u9898\u663e\u7136\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u5c06\u6240\u6709\u8349\u6309 $a_i$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f,\u5de6\u8fb9\u7684\u8349\u7684\u9ad8\u5ea6\u65e0\u8bba\u4f55\u65f6\u4e00\u5b9a\u90fd\u5927\u4e8e\u53f3\u8fb9\u7684\u8349\u7684\u9ad8\u5ea6\u3002\u8fd9\u4e00\u6027\u8d28\u53ef\u4ee5\u8bc1\u660e\uff1a\u4e0d\u5b58\u5728\u5272\u8349\u65f6\uff0c\u521d\u59cb\u9ad8\u5ea6\u76f8\u540c\uff0c$a_i$ \u5927\u7684\u9ad8\u5ea6\u66f4\u9ad8\uff1b\u5b58\u5728\u5272\u8349\u65f6\uff0c\u82e5\u8349\u7684\u9ad8\u5ea6\u8d85\u51fa\u4e86 $b_i$\uff0c\u5219\u4f1a\u88ab\u5272\u5230 $b_i$\uff0c\u4f4e\u4e8e $b_i$ \u7684\u8349\u9ad8\u5ea6\u4e0d\u53d8\u3002\u56e0\u6b64\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u6392\u5e8f\u540e\u5de6\u8fb9\u7684\u8349\u7684\u9ad8\u5ea6\u90fd\u9ad8\u4e8e\u53f3\u8fb9\u7684\u8349\u7684\u9ad8\u5ea6\u3002\n\n\u5219\u5bf9\u4e8e\u6bcf\u6b21\u5272\u8349\uff0c\u5b58\u5728\u4e00\u4e2a\u5206\u754c\u70b9 $pos$\uff0c\u5206\u754c\u70b9\u524d\uff08\u5305\u62ec\u5206\u754c\u70b9\uff09\u7684\u8349\u4f1a\u88ab\u5272\u5230 $b_i$\uff0c\u5206\u754c\u70b9\u540e\u7684\u8349\u4e0d\u8fdb\u884c\u64cd\u4f5c\u3002\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u53ea\u7531\u5206\u754c\u70b9\u524d\uff08\u5305\u62ec\u5206\u754c\u70b9\uff09\u7684\u8349\u51b3\u5b9a\uff0c\u8fd9\u6837\u7684\u4e00\u4e2a\u5206\u754c\u70b9\u663e\u7136\u662f\u7b2c\u4e00\u4e2a $\\geq b_i$ \u7684\u70b9\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u65f6\uff0c\u5148\u533a\u95f4\u589e\u91cf\u4e00\u4e2a\u6570\u5217 $a_i$\uff08\u5373\u8349\u751f\u957f\u7684\u8fc7\u7a0b\uff09\uff0c\u518d\u627e\u5230\u8fd9\u6837\u7684\u4e00\u4e2a\u5206\u754c\u70b9\uff0c\u67e5\u8be2\u5206\u754c\u70b9\u524d\uff08\u5305\u62ec\u5206\u754c\u70b9\uff09\u7684\u8349\u9ad8\u5ea6\u4e0e $b_i$ \u4e4b\u5dee\u7684\u548c\u3002\u5e76\u4e14\u5bf9\u5206\u754c\u70b9\u524d\uff08\u5305\u62ec\u5206\u754c\u70b9\uff09\u7684\u8349\u7684\u9ad8\u5ea6\u8fdb\u884c\u533a\u95f4\u8d4b\u503c\u3002\n\n\u4f7f\u7528\u7ebf\u6bb5\u6811\u652f\u6301\u4e0a\u8ff0\u64cd\u4f5c\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\u666e\u901a\u7ebf\u6bb5\u6811\u5e38\u6570\u8f83\u5927\uff0c\u5c06\u67e5\u8be2\u533a\u95f4\u548c\u548c\u533a\u95f4\u8d4b\u503c\u7684\u64cd\u4f5c\u5408\u5e76\u6210\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u6709\u6548\u51cf\u5c0f\u5e38\u6570\uff1b**\u7ebf\u6bb5\u6811\u4e0a\u540c\u65f6\u652f\u6301\u533a\u95f4\u8986\u76d6\u548c\u533a\u95f4\u589e\u91cf\u65f6\uff0c\u89c4\u5b9a\u533a\u95f4\u8986\u76d6\u8fd9\u4e00\u64cd\u4f5c\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8**\u3002\n\n**Show the Code**\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define ls p<<1\n#define rs p<<1|1 \ntypedef long long ll;\nint a[500005];\nll sum[500005],day[500005];\nstruct segtree {\n\tint l,r;\n\tll tag,cov,sum,maxn;\n}t[2000005];\ninline ll read() {\n\tregister ll x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline bool cmp(int x,int y) {return x>y;}\ninline ll max(ll x,ll y) {return x>y? x:y;}\ninline void work_cov(int p,ll val) {\n\tt[p].maxn=val;\n\tt[p].sum=val*(t[p].r-t[p].l+1);\n\tt[p].cov=val;\n\tt[p].tag=0;\n}\ninline void work_tag(int p,ll val) {\n\tt[p].maxn+=val*a[t[p].l];\n\tt[p].sum+=val*(sum[t[p].r]-sum[t[p].l-1]);\n\tt[p].tag+=val;\t\n}\ninline void spread(int p) {\n\tif(t[p].cov!=-1) {\n\t\twork_cov(ls,t[p].cov);\n\t\twork_cov(rs,t[p].cov);\n\t\tt[p].cov=-1;\n\t}\n\tif(t[p].tag!=0) {\n\t\twork_tag(ls,t[p].tag);\n\t\twork_tag(rs,t[p].tag);\n\t\tt[p].tag=0;\n\t}\n}\ninline void build(int p,int l,int r) {\n\tt[p].l=l;t[p].r=r;t[p].cov=-1;\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);build(rs,mid+1,r);\n}\ninline int ask_p(int p,ll lim) {\n\tint L=t[p].l,R=t[p].r,mid=L+R>>1;\n\tif(L==R) return t[p].maxn<lim? -1:L;\n\tspread(p);\n\tif(t[rs].maxn>=lim) return ask_p(rs,lim);\n\treturn ask_p(ls,lim);\n}\ninline ll modify_cov(int p,int l,int r,ll val) {\n\tif(l>r) return 0;\n\tint L=t[p].l,R=t[p].r,mid=L+R>>1;\n\tif(l<=L&&r>=R) {ll tmp=t[p].sum-val*(t[p].r-t[p].l+1);work_cov(p,val);return tmp;}\n\tspread(p); ll res=0;\n\tif(l<=mid) res+=modify_cov(ls,l,r,val);\n\tif(r>mid) res+=modify_cov(rs,l,r,val);\n\tt[p].sum=t[ls].sum+t[rs].sum;\n\tt[p].maxn=t[ls].maxn;\n\treturn res;\n}\nint main() {\n\tint n=read(),m=read();\n\tfor(register int i=1;i<=n;++i) a[i]=read();\n\tstd::sort(a+1,a+1+n,cmp);\n\tfor(register int i=1;i<=n;++i) sum[i]=sum[i-1]+a[i];\n\tbuild(1,1,n);\n\tfor(register int i=1;i<=m;++i) {\n\t\tday[i]=read();ll lim=read();\n\t\twork_tag(1,day[i]-day[i-1]);\n\t\tint pos=ask_p(1,lim);\n\t\tif(pos==-1) printf(\"0\\n\");\n\t\telse printf(\"%lld\\n\",modify_cov(1,1,pos,lim)); \n\t}\n \treturn 0;\n}\n```",
        "postTime": 1598864651,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5579 \u3010[PA2015]Siano\u3011"
    },
    {
        "content": "# **\u3010\u9898\u89e3\u3011Siano [PA2015] [Bzoj4293] / Chika \u7684\u70e6\u607c**\n\n[$\\mathcal{My}\\ \\mathcal{Blog}$](https://www.cnblogs.com/Xing-Ling/p/12574070.html)\n\n\u4f20\u9001\u95e8\uff1a[$\\text{Siano [PA2015]}$](https://www.luogu.com.cn/problem/P5579) [$\\text{[Bzoj4293]}$](https://oi-archive.memset0.cn/problem/bzoj/4293) [$\\text{ / Chika \u7684\u70e6\u607c}$](https://www.luogu.com.cn/problem/P5579)\n\n## **\u3010\u5206\u6790\u3011**\n\n\u770b\u5b8c\u9898\u76ee\u7b2c\u4e00\u611f\u89c9\u662f\u8d85\u54e5\u7ebf\u6bb5\u6811\uff0c\u4f46\u4ed4\u7ec6\u4e00\u60f3\u53d1\u73b0\u4e86\u4e2a\u5947\u5999\u7684\u6027\u8d28\uff1a\u7531\u4e8e\u6bcf\u6b21\u5272\u8349\u53ea\u4f1a\u780d\u6389\u6700\u9ad8\u7684\u90a3\u90e8\u5206\uff0c\u6240\u4ee5\u751f\u957f\u901f\u5ea6\u5feb\u7684\u8349\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u6bd4\u901f\u5ea6\u6162\u7684\u77ee\uff08\u9876\u591a\u4e00\u6837\u9ad8\uff09\u3002\n\n\u53ef\u4ee5\u5bf9\u901f\u5ea6\u6392\u4e2a\u5e8f\uff0c\u90a3\u4e48\u6bcf\u6b21\u64cd\u4f5c\u7684\u90e8\u5206\u4e00\u5b9a\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u4e0a\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u9ad8\u5ea6\u548c $S$\u3001\u9ad8\u5ea6\u8986\u76d6\u6807\u8bb0 $tag$\u3001\u65f6\u95f4\u589e\u91cf\u6807\u8bb0 $add$ \u3001\u533a\u95f4\u6700\u5927\u9ad8\u5ea6 $AR$\uff08\u5373\u6700\u53f3\u8fb9\u7684\u8349\u7684\u9ad8\u5ea6\uff09\uff0c\u5bf9\u4e8e\u4e00\u6b21\u64cd\u4f5c $x_i,y_i$ \u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $x_i$ \u7684\u4f4d\u7f6e $pos$\uff0c\u7136\u540e\u5c06 $[pos,n]$ \u5168\u90e8\u8986\u76d6\u4e3a $y_i$\uff0c\u987a\u4fbf\u5728\u8986\u76d6\u7684\u540c\u65f6\u8ba1\u7b97\u6539\u53d8\u91cf\u5373\u4e3a\u7b54\u6848\u3002\n\n\u6ce8\u610f\u4e00\u4e9b\u5b9e\u73b0\u4e0a\u7684\u7ec6\u8282\uff1a\n\n$pushdown$ \u65f6\u4f18\u5148\u4e0b\u653e\u8986\u76d6\u6807\u8bb0\u3002\n\n\u533a\u95f4\u88ab\u8986\u76d6\u540e\u8981\u6e05\u7a7a $add$ \u3002\n\n\u6709\u53ef\u80fd\u627e\u4e0d\u5230\u5927\u4e8e\u7b49\u4e8e $x_i$ \u7684\u4f4d\u7f6e\uff08\u5168\u90e8\u90fd\u5c0f\u4e8e $x_i$\uff09\uff0c\u8fd9\u65f6\u8981\u7279\u5224\u3002\n\n\u5f00 $\\text{long long}$ \u3002\n\n## **\u3010Code\u3011**\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#define LL long long\n#define Re register int\nusing namespace std;\nconst int N=5e5+3;\nint n,T,V[N];LL x,y,SV[N];\ntemplate<typename T>inline void in(T &x){\n    int f=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')f|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=f?-x:x;\n}\nstruct Sakura2{\n    struct Segment_Tree{\n        #define pl (p<<1)\n        #define pr (p<<1|1)\n        #define mid ((L+R)>>1)\n        struct QAQ{LL S,AR,add,tag;}tr[N<<2];\n        inline void build(Re p,Re L,Re R){\n            tr[p].tag=-1;\n            if(L==R)return;\n            build(pl,L,mid),build(pr,mid+1,R);\n        }\n        inline void pushup(Re p){\n            tr[p].S=tr[pl].S+tr[pr].S,tr[p].AR=tr[pr].AR;\n        }\n        inline void updata1(Re p,Re L,Re R,LL v){\n            tr[p].tag=v,tr[p].S=(LL)(R-L+1)*v,tr[p].AR=v,tr[p].add=0;\n        }\n        inline void updata2(Re p,Re L,Re R,LL v){\n            tr[p].add+=v,tr[p].S+=(LL)(SV[R]-SV[L-1])*v,tr[p].AR+=(LL)V[R]*v;\n        }\n        inline void pushdown(Re p,Re L,Re R){\n            if(tr[p].tag!=-1)updata1(pl,L,mid,tr[p].tag),updata1(pr,mid+1,R,tr[p].tag),tr[p].tag=-1;\n            if(tr[p].add)updata2(pl,L,mid,tr[p].add),updata2(pr,mid+1,R,tr[p].add),tr[p].add=0;\n        }\n        inline int find(Re p,Re L,Re R,LL v){\n            if(L==R)return tr[p].S<v?n+1:L;\n            pushdown(p,L,R);\n            if(tr[pl].AR>=v)return find(pl,L,mid,v);\n            else return find(pr,mid+1,R,v);\n        }\n        inline LL change(Re p,Re L,Re R,Re l,Re r,LL v){\n            if(l>r)return 0;\n            if(l<=L&&R<=r){LL tmp=tr[p].S;updata1(p,L,R,v);return tmp-tr[p].S;}\n            LL ans=0;pushdown(p,L,R);\n            if(l<=mid)ans+=change(pl,L,mid,l,r,v);\n            if(r>mid)ans+=change(pr,mid+1,R,l,r,v);\n            pushup(p);return ans;\n        }\n    }TR;\n    inline void sakura(){\n        sort(V+1,V+n+1);\n        for(Re i=1;i<=n;++i)SV[i]=SV[i-1]+V[i];\n        LL nowT=0;TR.build(1,1,n);\n        while(T--){\n            in(x),in(y),TR.updata2(1,1,n,x-nowT),nowT=x;\n            printf(\"%lld\\n\",TR.change(1,1,n,TR.find(1,1,n,y),n,y));\n        }\n    }\n}T2;\nint main(){\n//    freopen(\"grass.in\",\"r\",stdin);\n//    freopen(\"grass.out\",\"w\",stdout);\n    in(n),in(T);\n    for(Re i=1;i<=n;++i)in(V[i]);\n    T2.sakura();\n}\n```\n",
        "postTime": 1585202643,
        "uid": 110985,
        "name": "\u8fb0\u661f\u51cc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5579 \u3010[PA2015]Siano\u3011"
    },
    {
        "content": "* \u6bd4\u8f83\u590d\u6742\u7684\u7ebf\u6bb5\u6811\uff0c\u9700\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\u6bd4\u8f83\u591a\uff0c\u9996\u5148 $\\text{val}$ \u662f\u751f\u957f\u901f\u5ea6\uff0c $\\text{sum}$ \u4e3a\u73b0\u5728\u8349\u7684\u957f\u5ea6\uff0c $\\text{lazd}$ \u662f\u4e0a\u4e00\u6b21\u6253\u6807\u8bb0\u65f6\u95f4\uff0c $\\text{ld}$ \u662f\u4e0a\u4e00\u6b21\u5272\u8349\u7684\u65f6\u95f4,  $\\text{maxx}$ \u8bb0\u5f55\u6700\u5927\u503c\uff0c $\\text{minn}$ \u8bb0\u5f55\u6700\u5c0f\u503c\u3002\n* \u5982\u679c\u533a\u95f4\u6700\u5927\u503c\u90fd\u5c0f\u4e8e\u5272\u8349\u7684\u957f\u5ea6$\\text{b}$\uff0c\u90a3\u4e48\u76f4\u63a5 `return 0`\uff0c\u5982\u679c\u6700\u5c0f\u503c\u90fd\u5927\u4e8e\u5272\u8349\u7684\u957f\u5ea6 $\\text{b}$ \uff0c\u90a3\u4e48\u76f4\u63a5\u5272\u6389\u8fd9\u4e2a\u533a\u95f4\u5c31\u884c\u4e86\uff0c  \u5982\u679c\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u4e24\u79cd\u60c5\u51b5\uff0c\u5c31\u7ee7\u7eed\u9012\u5f52\u3002\n* \u5176\u4e2d $\\text{ld != lazd}$ \u662f\u56e0\u4e3a\u53ef\u80fd\u7531\u4e8e\u6700\u5927\u503c\u5c0f\u4e8e\u5272\u8349\u7684\u957f\u5ea6 $\\text{b}$ \u65f6\uff0c\u662f\u4e0d\u7528\u5272\u7684\uff0c\u6b64\u65f6 $\\text{lazd}$ \u4e0d\u4f1a\u66f4\u65b0\uff0c\u4f46\u662f $\\text{ld}$ \u9700\u8981\u66f4\u65b0\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define print(x) cerr << #x << \" : \" << x << endl;\n#define int long long\ninline int read() {\n\t\tint k = 0, f = 1; char ch = getchar();\n\t\tfor (; !isdigit(ch); ch = getchar()) if(ch == '-') f = -1;\n\t\tfor (; isdigit(ch); ch = getchar()) k = k * 10 + ch - '0';\n\t\treturn k * f;\n}\nconst int maxn = 2e6 + 100;\nint a[maxn], w[maxn];\nstruct tree { int l, r, val, sum, laz, siz, lazd, ld, maxx, minn; } t[maxn];\n// ld \u4e0a\u4e00\u6b21\u5272\u8349\u65f6\u95f4\uff0c lazd \u4e0a\u4e00\u6b21\u6253\u6807\u8bb0\u65f6\u95f4;\n// ld != lazd \u662f\u56e0\u4e3a\u5982\u679c t[rt].maxx <= b \u6b64\u65f6\uff0c ld\u66f4\u65b0\uff0c lazd\u4e0d\u4f1a\u66f4\u65b0\u3002\n#define ls (rt << 1)\n#define rs (rt << 1 | 1)\n#define tl t[rt].l\n#define tr t[rt].r\nvoid pushup(int rt) {\n\t\tt[rt].sum = t[ls].sum + t[rs].sum;\n\t\tt[rt].minn = min(t[ls].minn, t[rs].minn);\n\t\tt[rt].maxx = max(t[rs].maxx, t[ls].maxx);   \n}\nvoid build(int rt, int l, int r) {\n\t\tt[rt].l = l, t[rt].r = r, t[rt].siz = r - l + 1, t[rt].laz = -1;\n\t\tif (l == r) return t[rt].val = a[l], void();\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(ls, l, mid);\n\t\tbuild(rs, mid + 1, r);\n\t\tt[rt].val = t[ls].val + t[rs].val;\n}\nvoid Print(int rt, int l, int r) {\n\t\tcout << rt << \" \" << t[rt].lazd << \" \" << t[rt].ld << endl;;\n\t\tif (l == r) return;\n\t\tint mid = (l + r) >> 1;\n\t\tPrint(ls, l, mid);\n\t\tPrint(rs, mid + 1, r);\n}\nvoid pushdown(int rt) {\n\t\tint k = t[rt].laz;\n\t\tif (k != -1) {\n\t\t\t\tt[ls].sum = k * t[ls].siz;\n\t\t\t\tt[rs].sum = k * t[rs].siz;\n\t\t\t\tt[ls].minn = t[ls].maxx = t[rs].minn = t[rs].maxx = k;\n\t\t\t\tt[ls].lazd = t[rs].lazd = t[rt].lazd;\n\t\t\t\tt[ls].ld = t[rs].ld = t[rt].lazd;\n\t\t\t\tt[ls].laz = t[rs].laz = t[rt].laz;\n\t\t}\n\t\tt[rt].laz = -1; \n}\nint ask(int rt, int d, int b) {\n\t\tint ans = 0;\n\t\tt[rt].sum += (d - t[rt].ld) * t[rt].val;\n\t\t//  print(tl)\n\t\tt[rt].minn += a[tl] * (d - t[rt].ld);\n\t\tt[rt].maxx += a[tr] * (d - t[rt].ld);\n\t\tt[rt].ld = d;\n\t\t//  cout << rt << \" \" << t[rt].sum << \" \" << t[rt].maxx << \" \" <<t[rt].laz << \" \"  << t[rt].lazd << \" \" << t[rt].siz << endl;   \n\t\tif(t[rt].maxx <= b) return 0;\n\t\tif(t[rt].minn > b) {\n\t\t\t\tt[rt].laz = b;\n\t\t\t\tt[rt].lazd = t[rt].ld = d;\n\t\t\t\tans = t[rt].sum - b * (tr - tl + 1);\n\t\t\t\tt[rt].sum = b * (tr - tl + 1);\n\t\t\t\tt[rt].maxx = t[rt].minn = b;\t\t\n\t\t\t\treturn ans;\n\t\t}\n\t\tpushdown(rt);\n\t\tint mid = (tl + tr) >> 1;\n\t\tans = ask(ls, d, b) + ask(rs, d, b);\n\t\tpushup(rt);\n\t\treturn ans;\n}\nsigned main() {\n\t\tint n = read(), m = read();\n\t\tfor (int i = 1; i <= n; i++) a[i] = read();\n\t\tsort(a + 1, a + n + 1);\n\t\tbuild(1, 1, n);\n\t\tint ans = 0;\n\t\tfor(int i = 1;i <= m;++i){\n\t\t\t\tint d = read(), b = read();\n\t\t\t\tans = ask(1, d, b);\n\t\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t\treturn 0;\n}\n```",
        "postTime": 1601200379,
        "uid": 327168,
        "name": "hellohhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5579 \u3010[PA2015]Siano\u3011"
    },
    {
        "content": "\u628a\u8349\u6309 $a_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53ef\u4ee5\u53d1\u73b0\u4efb\u4f55\u65f6\u5019\u9ad8\u5ea6\u90fd\u662f\u4ece\u5de6\u5230\u53f3\u5355\u8c03\u4e0d\u4e0b\u964d\u7684\u3002\u56e0\u6b64\u6bcf\u6b21\u5272\u8349\u7684\u8303\u56f4\u5c31\u662f\u4e00\u4e2a\u540e\u7f00\u3002\u90a3\u4e48\u5927\u81f4\u601d\u8def\u5c31\u662f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5173\u4e8e\u8349\u7684\u9ad8\u5ea6\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u6bcf\u6b21\u5272\u8349\u65f6\u5229\u7528\u7ef4\u62a4\u7684\u4fe1\u606f\u4e8c\u5206\u51fa\u88ab\u5272\u7684\u540e\u7f00\u3001\u6c42\u51fa\u5272\u8349\u7684\u603b\u91cf\u3001\u6a21\u62df\u51fa\u5272\u8349\u7684\u5f71\u54cd\u3002\n\n\u6211\u592a\u61d2\u4e86\u5c31\u5199\u4e86\u4e00\u4e2a\u4e8c\u5206 + \u6c42\u548c + \u4fee\u6539\u4e09\u5408\u4e00\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u7ef4\u62a4 4 \u4e2a\u4fe1\u606f\uff1a$asum$ \u8868\u793a\u533a\u95f4\u4e2d $a$ \u7684\u548c\u3001$lst$ \u8868\u793a\u533a\u95f4\u53f3\u7aef\u70b9\u6700\u540e\u4e00\u6b21\u88ab\u5272\u5230\u7684\u65f6\u523b\u3001$lstsum$ \u8868\u793a\u533a\u95f4\u4e2d\u6240\u6709\u8349\u5728 $lst$ \u65f6\u523b\u7684\u9ad8\u5ea6\u4e4b\u548c\u3001$tag$ \u8868\u793a\u533a\u95f4\u6574\u4f53\u4fee\u6539\u7684\u6807\u8bb0\u3002\n\n\u5728\u4e8c\u5206\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5148\u6c42\u51fa\u5de6\u5b50\u6811\u7684\u53f3\u7aef\u70b9\u5728 $d_i$ \u65f6\u523b\u7684\u9ad8\u5ea6\uff0c\u82e5 $\\leq b_i$ \u8bf4\u660e\u5272\u8349\u7684\u540e\u7f00\u90fd\u5728\u53f3\u5b50\u6811\u4e2d\uff0c\u9012\u5f52\u8fdb\u5165\u53f3\u5b50\u6811\u5373\u53ef\uff1b\u5426\u5219\u53f3\u5b50\u6811\u90fd\u8981\u5272\uff0c\u5229\u7528\u7ef4\u62a4\u7684\u4fe1\u606f\u6c42\u51fa\u8d21\u732e\u5e76\u6253\u4e0a\u4fee\u6539\u6807\u8bb0\uff0c\u7136\u540e\u9012\u5f52\u8fdb\u5165\u5de6\u5b50\u6811\u3002\u6700\u540e\u8fd8\u8981\u4e0a\u63a8\u7ef4\u62a4\u4fe1\u606f\u3002\u5177\u4f53\u770b\u4ee3\u7801\u5427\u3002\n```cpp\n#include <bits/stdc++.h>\n#define mset(a, b) memset(a, b, sizeof(a))\n#define mcpy(a, b) memcpy(a, b, sizeof(a))\n#define lc (rt<<1)\n#define rc (rt<<1)|1\nusing namespace std;\ntypedef long long LL;\nconst int MAXN = 500005;\n\ntemplate <typename T> inline void read(T &AKNOI) {\n\tT x = 0, flag = 1;\n\tchar ch = getchar();\n\twhile (!isdigit(ch)) {\n\t\tif (ch == '-') flag = -1;\n\t\tch = getchar();\n\t}\n\twhile (isdigit(ch)) {\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\tAKNOI = flag * x;\n}\n\nint n, m, a[MAXN];\nLL b[MAXN], d[MAXN];\nint len[MAXN << 2], tag[MAXN << 2], lst[MAXN << 2];\nLL asum[MAXN << 2], lstsum[MAXN << 2];\n\ninline void puttag(int rt, int tg) {\n\ttag[rt] = lst[rt] = tg;\n\tlstsum[rt] = b[tg] * len[rt];\n}\n\ninline void pushdown(int rt) {\n\tif (tag[rt]) {\n\t\tputtag(lc, tag[rt]);\n\t\tputtag(rc, tag[rt]);\n\t\ttag[rt] = 0;\n\t}\n}\n\ninline void pushup(int rt) {\n\tlst[rt] = lst[rc];\n\tlstsum[rt] = lstsum[lc] + lstsum[rc] + \n\t\t(d[lst[rt]] - d[lst[lc]]) * asum[lc];\n}\n\nvoid Build(int rt, int l, int r) {\n\tlen[rt] = r - l + 1;\n\tif (l == r) {\n\t\tasum[rt] = a[l];\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tBuild(lc, l, mid);\n\tBuild(rc, mid + 1, r);\n\tasum[rt] = asum[lc] + asum[rc];\n}\n\nLL Query(int rt, int l, int r, int i) {\n\tif (l == r) {\n\t\tLL val = lstsum[rt] + (d[i] - d[lst[rt]]) * a[l];\n\t\tif (val <= b[i]) return 0;\n\t\tputtag(rt, i);\n\t\treturn val - b[i];\n\t}\n\tint mid = (l + r) >> 1;\n\tpushdown(rt);\n\tLL val = b[lst[lc]] + (d[i] - d[lst[lc]]) * a[mid], ret = 0;\n\tif (val <= b[i]) {\n\t\tret = Query(rc, mid + 1, r, i);\n\t} else {\n\t\tret = lstsum[rc] + (d[i] - d[lst[rc]]) * asum[rc] - b[i] * len[rc];\n\t\tputtag(rc, i);\n\t\tret += Query(lc, l, mid, i);\n\t}\n\tpushup(rt);\n\treturn ret;\n}\n\nvoid init() {\n\tread(n); read(m);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tread(a[i]); \n\t}\n\tsort(a + 1, a + n + 1);\n\tBuild(1, 1, n);\n}\n\nvoid solve() {\n\tfor (int i = 1; i <= m; ++i) {\n\t\tread(d[i]); read(b[i]); \n\t\tprintf(\"%lld\\n\", Query(1, 1, n, i));\n\t}\n}\n\nint main() {\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```\n",
        "postTime": 1586347599,
        "uid": 62088,
        "name": "tyler178",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5579 \u3010[PA2015]Siano\u3011"
    }
]