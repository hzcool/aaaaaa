[
    {
        "content": "## \u5206\u6790 ##\n\n\u8fd9\u9053\u9898\u76ee\u6c42\u7684\u662f\u4ece1\u53f7\u70b9\u5230n\u53f7\u70b9\u6700\u5c11\u8981\u51e0\u79d2\u5230\u8fbe\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u8dd1\u8def\u5668\uff0c\u6bcf\u79d2\u8dd12^k\u6761\u8fb9\uff08\u6bcf\u6761\u8fb91km\uff09\uff0c\u6240\u4ee5\u5462\uff0c\u8fd9\u9053\u9898\u76ee\u660e\u663e\u5c31\u548c\u201c\u500d\u589e\u201d\u626f\u4e0a\u4e86\u5173\u7cfb\u3002\u56de\u5fc6\u500d\u589e\uff0c\u6211\u4eec\u603b\u662f\u7528\u4e00\u4e2a\u53c2\u6570k\u8868\u793a2^k\uff0c\u8fd9\u9053\u9898\u76ee\u4e5f\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u7528\u4e00\u4e2abool\u7c7b\u578bG\u6570\u7ec4\uff0cG[i][j][k]\u4ee3\u8868\u4ecei\u5230j\u662f\u5426\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u4e3a2^k\u7684\u8def\u5f84\u3002\u518d\u7528dis\u6570\u7ec4\u6765\u8bb0\u5f55\u4e24\u70b9\u4e4b\u95f4\u9700\u8981\u7528\u591a\u4e45\u5230\u8fbe\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u7528G\u6765\u4fdd\u5b58\u6240\u6709\u7684\u8fb9\uff0c\u5e76\u4e14\u8fdb\u884c\u9884\u5904\u7406\uff0c\u628a\u6240\u6709\u4e00\u79d2\u80fd\u5230\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u8fde\u4e0a\u8fb9\uff0c\u5e76\u628a\u8ddd\u79bb\u76f8\u5e94\u8c03\u6574\u4e3a1\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6240\u6709\u4e00\u79d2\u80fd\u5230\u7684\u70b9\u4e4b\u95f4\u90fd\u94fa\u4e0a\u4e86\u8fb9\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8981\u6c42\u51fa\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5566\uff0c\u90a3\u4e48\uff0c\u5927\u5bb6\u90fd\u660e\u767d\u4e86\uff0c\u5bf9\u4e8e50\u7684\u6570\u636e\uff0cFloyd\u7edd\u5bf9\u662f\u6700\u7b80\u5355\u53ef\u884c\u7684\u529e\u6cd5\u4e86\u3002\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\u3002\n\n## \u4ee3\u7801 ##\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dis[60][60],n,m;\nbool G[60][60][65];\n/*\u4ee5\u4e0a\u662f\u53d8\u91cf\u8bf4\u660e\u90e8\u5206\uff0cdis[i][j]\u8868\u793ai\u5230j\u7684\u8def\u5f84/\u8fb9\u7684\u957f\u5ea6\nG[i][j][k]\u8868\u793a\uff0ci\u5230j\u662f\u5426\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u4e3a2^k\u7684\u8def\u5f84\n\u5982\u679c\u6709\uff0c\u4e3atrue\uff0c\u6ca1\u6709\u5c31\u662ffalse*/ \nvoid init()\n{\n    memset(G,false,sizeof(G));\n    memset(dis,10,sizeof(dis));\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        dis[x][y]=1;\n        G[x][y][0]=true;\n        /*\u521d\u59cb\u5316\uff0cx\u5230y\u7684\u8def\u5f84\uff08\u8fb9\uff09\u6700\u77ed\u662f1\uff0c\u4e5f\u5c31\u662fx\u5230y\u5b58\u5728\n        \u4e00\u6761\u957f\u5ea6\u4e3a2^0\u7684\u8def\u5f84\uff08\u8fb9\uff09*/ \n    }\n}\nvoid work()//\u6b64\u51fd\u6570\u5bf9G\u548cdis\u505a\u9884\u5904\u7406 \n{\n    for(int k=1;k<=64;k++)\n    //\u5bf9\u4e8e\u672c\u9898\u7684\u6570\u636e\uff0c2^64\u5df2\u7ecf\u8db3\u591f\u3002 \n    for(int i=1;i<=n;i++)\n    for(int t=1;t<=n;t++)\n    for(int j=1;j<=n;j++)\n    //\u679a\u4e3e\u4e09\u4e2a\u70b9\n    if(G[i][t][k-1]&&G[t][j][k-1])\n    /*\u5982\u679ci\u5230t\u5b58\u5728\u4e00\u67612^k-1\u957f\u5ea6\u7684\u8def\u5f84\n    \u5e76\u4e14t\u5230j\u5b58\u5728\u4e00\u67612^k-1\u957f\u5ea6\u7684\u8def\u5f84\n    \u5c31\u8bf4\u660ei\u5230t\uff0ct\u5230j\u90fd\u53ef\u4ee5\u4e00\u79d2\u5230\u8fbe\uff0c\n    \u8def\u7a0b*2\u521a\u597d\u662f2\u7684\u5e42\uff0c\u4e5f\u53ef\u4ee5\u4e00\u79d2\u5230\u8fbe*/ \n    {\n        G[i][j][k]=true;\n        //\u6807\u8bb0\u4ecei\u5230j\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u4e3a2^k\u7684\u8def\u5f84 \n        dis[i][j]=1;\n        //i\u5230j\u8ddd\u79bb\u53ef\u4ee5\u4e00\u79d2\u5230\u8fbe \n    }\n}\nvoid floyd()\n{\n    for(int k=1;k<=n;k++)\n    //\u8fd9\u91cc\u7684\u6ce8\u610f\u70b9\uff1a\u679a\u4e3e\u4e2d\u95f4\u70b9\u7684\u5faa\u73af\u653e\u5728\u6700\u524d\u9762 \n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n    dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n    //\u677e\u5f1b\u64cd\u4f5c\u3002 \n}//Floyd\u56fe\u8bba\u6c42\u6700\u77ed\u8def\u3002 \nint main()\n{\n    init();\n    work();\n    floyd();\n    printf(\"%d\",dis[1][n]);\n    return 0;\n}\n```",
        "postTime": 1506083719,
        "uid": 24081,
        "name": "Hydra_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u6700\u77ed\u8def\u5f84\u548c\u500d\u589e\u601d\u60f3\u7684\u7ed3\u5408\u9898\u3002\n\n\u9996\u5148\u8bf4\u4e00\u4e0b\u4e00\u4e2a\u660e\u663e\u7684\u9519\u8bef\uff1a **\u7edd\u5bf9\u4e0d\u80fd\u76f4\u63a5\u6c42\u6700\u77ed\u8def**\n\n\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u9898\u76ee\u4e2d\u6709\u8bf4\uff0c\u6709\u8dd1\u8def\u5668\u3002\n\n\n\u90a3\u4e48\u8fdb\u4e00\u6b65\u601d\u8003\uff0c\u53d1\u73b0\uff0c\u4efb\u610f $$2^k$$ \u7684\u8def\u5f84\u957f\u5ea6\u90fd\u53ef\u4ee5\u57281\u79d2\u5185\u8d70\u5b8c\uff0c\u56e0\u6b64\u5982\u679c\u6709 u v \u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u4e3a $$2^k$$ \u5373\u53ef\u8ba4\u4e3a\u8fd9\u4e24\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\uff08\u672c\u9898\u4e2d\u8fb9\u6743\u5168\u90e8\u4e3a1\uff09\u3002\n\n\n\u63a5\u4e0b\u6765\uff0c\u601d\u8def\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u4ee4 $$f_{i,j,k}$$ \u7684\u610f\u4e49\u4e3a\u80fd\u5426\u5728 $$2^i$$ \u65f6\u95f4\u5185\u4ece\u70b9 j \u8d70\u5230\u70b9 k \uff0c\u53ef\u4ee5\u4e3a1\uff0c\u4e0d\u53ef\u4ee5\u4e3a0\u3002\u8fdb\u4e00\u6b65\uff0c\u7531**\u500d\u589e**\u7684\u601d\u60f3\u53ef\u4ee5\u5f97\u5230\uff1a\u82e5 $$f_{i-1, v, k}$$ \u548c $$f_{i-1, k, u}$$ \u540c\u65f6\u4e3a1\uff0c\u5219 $$f_{i, v, u}$$ \u4e3a1\u3002\n\n\n\u5728\u8fd9\u4e9b\u90fd\u9884\u5904\u7406\u5b8c\u6210\u4e4b\u540e\uff0c\u5728\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\uff0c\u5c31\u6b63\u786e\u4e86\u3002\n",
        "postTime": 1501062711,
        "uid": 3398,
        "name": "DaCong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "\u849f\u84bb\u535a\u5ba2\u4f20\u9001\u95e8\uff1a[QAQ](https://www.cnblogs.com/GoldenPotato/p/9177144.html)\n\n\n\n------------\n\n### Solution\n\u633a\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\u3002\n\n .\n\n\u9898\u9762\u5df2\u7ecf\u633a\u660e\u663e\u7684\u63cf\u8ff0\u51fa\u4e86\u8fd9\u9898\u7684\u4e3b\u8981\u601d\u60f3\uff1a**\u500d\u589e**\u3002\n\n\u5148\u8fd9\u6837\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u9898\u8fd9\u6837\u5efa\u6a21\uff1a**\u6709\u4e00\u5806\u70b9\uff0c\u82e5\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\u53ef\u4ee5\u8fbe\u52302\u7684n\u6b21\u65b9\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u53ef\u4ee5\u75281\u7684\u65f6\u95f4\u76f8\u4e92\u5230\u8fbe**\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec**\u628a\u8ddd\u79bb\u80fd\u4e3a2\u7684n\u6b21\u65b9\u7684\u70b9\u5bf9\u7528\u8fb9\u6743\u4e3a1\u7684\u8fb9\u8fde\u4e0a\uff0c\u518d\u505a\u4e00\u6b21\u6700\u77ed\u8def\u5f84**\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u4e86\u3002\n\n.\n\n \n\n\u63a5\u4e0b\u6765\u95ee\u9898\u5c31\u662f\u5982\u4f55\u6c42\u51fa\u6bcf\u4e24\u4e2a\u70b9\u662f\u5426\u80fd\u4ee52\u7684n\u6b21\u65b9\u7684\u65f6\u95f4\u76f8\u4e92\u5230\u8fbe\u3002\n\n\u8003\u8651\u4f7f\u7528DP\u3002\n\n\u6211\u4eec**\u8bbef[i][j][k] \u8868\u793a i\u5230j\u662f\u5426\u80fd\u4ee52\u7684k\u6b21\u65b9\u7684\u8ddd\u79bb\u76f8\u4e92\u5230\u8fbe**\u3002\n\n\u8f6c\u79fb\u7684\u65f6\u5019\u5f97\u8fd0\u7528\u500d\u589e\u7684\u601d\u60f3\uff1a**\u82e5\u4e24\u4e2a\u70b9\u80fd\u4ee5\u4e24\u6bb52\u7684k-1\u6b21\u65b9\u7684\u8ddd\u79bb\u76f8\u4e92\u5230\u8fbe\uff0c\u90a3\u4e48\u4e24\u4e2a\u70b9\u5c31\u80fd\u4ee52\u7684k\u6b21\u65b9\u7684\u8ddd\u79bb\u76f8\u4e92\u5230\u8fbe**\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd0\u7528\u7c7b\u4f3cFloyd\u7684\u529e\u6cd5\u6765\u5904\u7406\u8fd9\u4e2aDP\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6700\u5916\u5c42\u679a\u4e3e\u8fd9\u4e2ak\uff0c\u91cc\u9762\u4e09\u5c42\u548cFloyd\u7684\u610f\u4e49\u4e00\u6a21\u4e00\u6837\uff0c\u5c31\u662f\u679a\u4e3e\u4e2d\u8f6c\u70b9\u4e0e\u8d77\u59cb\u70b9\u3002\n\n\u521d\u59cb\u5316\u5c31\u662f\u9898\u76ee\u4e2d\u76f4\u63a5\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\uff0c\u5b83\u4eec\u7684f[a][b][0]=1 \uff08\u5b83\u4eec\u8ddd\u79bb\u4e3a1,\u662f2\u76840\u6b21\u65b9\uff09\n\n .\n\n**\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(n^3*64)\n**\n\n\n------------\n### Code\n```cpp\n//Luogu P1613 \u8dd1\u8def\n//June,13th,2018\n//\u500d\u589e+DP+\u6700\u77ed\u8def\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nlong long read()\n{\n    long long x=0,f=1; char c=getchar();\n    while(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n    while(isdigit(c)){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\nconst int N=50+10;\nconst int K=65+10;\nint f[N][N][K],dis[N][N],n,m;\nint main()\n{\n    n=read(),m=read();\n    memset(dis,0x3f,sizeof dis);\n    for(int i=1;i<=m;i++)\n    {\n        int s=read(),t=read();\n        f[s][t][0]=1;\n        dis[s][t]=1;\n    }\n    \n    for(int o=1;o<=64;o++)\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                for(int k=1;k<=n;k++)\n                    if(f[j][i][o-1]==true and f[i][k][o-1]==true)\n                    {\n                        f[j][k][o]=true;\n                        dis[j][k]=1;\n                    }\n                \n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            for(int k=1;k<=n;k++)\n                dis[j][k]=min(dis[j][k],dis[j][i]+dis[i][k]);\n    \n    printf(\"%d\",dis[1][n]);\n    return 0;\n}\n\n```\n",
        "postTime": 1528864001,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u770b\u5f88\u591a\u4eba\u90fd\u5728\u7528Floyd\u548c\u500d\u589e\u7684\u65b9\u6cd5\u6765\u505a\u7684\u3002\n\n\u90a3\u6211\u5c31\u7528spfa\u6765\u8dd1\u6700\u77ed\u8def\u5427\n\na[i][j][k]:\u8868\u793a\u4ecei\u5230j\u662f\u5426\u5b58\u5728\u957f2^k\u7684\u8fb9\u3002\n\n\u9884\u5904\u7406\u7684\u65f6\u5019\u5c31\u5c06\u8fd9\u4e9b\u8fb9\u8d4b\u503c\u62101\n\uff08\u957f2^k\u7684\u8fb9\uff09\uff08\u518d\u8865\u5145\u4e00\u4e0b\uff1a\u8fd9\u4e9b\u8fb9\u75281s\u5c31\u80fd\u8d70\u5b8c\uff09\n\n**\u6ce8\u610f\u4e00\u4e0b\uff1a**\n\n\u9884\u5904\u7406\u7684\u65f6\u5019k\u5faa\u73af\u5728\u6700\u5916\u5c42\uff0c\u56e0\u4e3a\u8981\u6240\u6709\u7684\u4eceu\u5230v\u957f\u5ea6\u4e3a2^k\u7684\u8fb9\uff0c\u7136\u540e\u8d4b\u503c\u62101.\n\n\u800c\u6253\u6807\u8bb0\u7684\u65f6\u5019k\u653e\u5728\u4e86\u6700\u540e\u4e00\u5c42\u5faa\u73af\u4e0a\uff0c\u56e0\u4e3a\u8981\u628au\u5230v\u8fb9\u4e0a\u7684\u60c5\u51b5\u5168\u90e8\u8bd5\u4e00\u904d\u3002\u3002\u597d\u50cf\u4e0d\u592a\u6e05\u695a\u3002\u3002\n\n\u5c31\u662fu\u5230v\u7684\u8fb9\u7684\u503c\u6211\u4eec\u4e0d\u786e\u5b9a\uff0c\u6240\u4ee5\u90fd\u679a\u4e3e\u8bd5\u4e00\u904d\u3002\n\uff08\u4ece0\u5f00\u59cb\uff0c\u88ab\u8fd9\u4e2a\u5361\u4e86\u597d\u51e0\u6b21\uff09\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nconst int maxn = 55;\n\nlong long n,m,u,v,a[maxn][maxn][65]; \nlong long f[maxn][maxn];\nlong long dis[maxn];\nbool vis[maxn];\n\nvoid spfa(int s){\n\tqueue<int > q;\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i] = 1e9;\n\t}\n\tq.push(s);\n\tdis[s] = 0;\n\tvis[s] = 1;\n\twhile(!q.empty()){\n\t\tint cur = q.front();\n\t\tq.pop();\n\t\tvis[cur] = 0;\n\t\tfor(int v=1;v<=n;v++)\n          if(f[cur][v] && dis[v] > dis[cur] + f[cur][v]){\n            dis[v] = dis[cur] + f[cur][v];\n            if(vis[v] == 0){\n              vis[v]=1;\n              q.push(v);\n\t        }\n        }\n\t}\n}\n\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld\",&u,&v);\n\t\ta[u][v][0] = 1;\n\t}\n\tfor(int k=1;k<=64;k++)\n      for(int j=1;j<=n;j++)\n        for(int u=1;u<=n;u++)\n          for(int v=1;v<=n;v++)\n            if(a[u][j][k-1] && a[j][v][k-1])\n              a[u][v][k]=1;\n    \n    for(int u=1;u<=n;u++)\n      for(int v=1;v<=n;v++)\n\t    for(int k=0;k<=64;k++)\n          if(a[u][v][k]){\n             f[u][v]=1;\n             break;\n          }\n    spfa(1);\n    printf(\"%lld\",dis[n]);\n    return 0;\n}\n```",
        "postTime": 1535195327,
        "uid": 54635,
        "name": "Kevin_F",
        "ccfLevel": 0,
        "title": "\u8dd1\u8def"
    },
    {
        "content": "### P1613 \u8dd1\u8def\n\n\u8fd9\u9053\u9898\u770b\u5230\u5927\u5bb6\u90fd\u5199\u500d\u589e\u548c$Floyd$\u6216\u8005$DP$\uff0c\u7136\u800c\u6211\u53ea\u60f3\u5230\u4e86\u66b4\u529b\u3002\n\n\u6211\u7684\u601d\u8def\u662f\u7528$bfs$\u628a\u6240\u6709\u7684\u5230$n$\u7684\u8def\u5f84\u957f\u5ea6\u5904\u7406\u51fa\u6765\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u957f\u5ea6\u66b4\u529b\u5224\u65ad\u4e00\u904d\uff0c\u627e\u6700\u5c0f\u503c\uff0c**\u987a\u4fbf\u52a0\u4e2a\u5361\u65f6**\u3002\n\n\u8fd9\u6837\u80af\u5b9a\u4f1a\u6709\u5927\u91cf\u91cd\u590d\u60c5\u51b5\uff0c\u4e0d\u8fc7\u6709\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u4f18\u5316\uff0c\u5c31\u662f\u4f60\u5f00\u4e00\u4e2a\u6876\u628a\u5230\u8fbe\u6bcf\u4e2a\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u90fd\u8bb0\u5f55\u4e00\u4e0b\uff0c\u518d\u6b21\u641c\u5230\u76f8\u540c\u7684\u60c5\u51b5\u5c31\u4e0d\u7528\u5165\u961f\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<iostream>\n#include<climits>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<ctime>\n#define pii pair<int,int>\n#define one first\n#define two second\n#define mp make_pair\nusing namespace std;\nconst int N=55,M=1e5+100;\nint ed[N][N];\nbool mark[N][M];\nint n,m,minn=INT_MAX;\nqueue<pii>q;\nvector<int>v;\ninline int work(int x)\n{\n\tint ans=0;\n\twhile (x)\n\t{\n\t\tif (x&1)\n\t\t{\n\t\t\tans++;\n\t\t\tif (ans>=minn) return ans;\n\t\t}\n\t\tx>>=1;\n\t}\n\treturn ans;\n}\ninline void bfs(int x)\n{\n\tq.push(mp(x,0));\n\twhile (!q.empty()&&(double)clock()/CLOCKS_PER_SEC<=0.85)\n\t{\n\t\tpii k=q.front();\n\t\tif (k.one==n)\n\t\tv.push_back(k.second);\n\t\tq.pop();\n\t\tfor (int i=1;i<=n;i++)\n\t\t{\n\t\t\tif (ed[k.one][i]&&!mark[i][k.two+1])\n\t\t\t{\n\t\t\t\tq.push(mp(i,k.two+1));\n\t\t\t\tmark[i][k.two+1]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint s,e;\n\t\tscanf(\"%d%d\",&s,&e);\n\t\ted[s][e]=1;\n\t}\n\tbfs(1);\n\tfor (int i=0;i<(int)v.size();i++)\n\t{\n\t\tminn=min(minn,work(v[i]));\n\t\tif (minn==1) break;\n \t}\n\tprintf(\"%d\\n\",minn);\n\treturn 0;\n}\n```\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u523050\u5206\u7684\u597d\u6210\u7ee9,\u7136\u540e\u4f60\u5c31\u4f1a\u53d1\u73b0\u5269\u4e0b\u7684\u70b9\u5168\u90e8$RE$,\u8003\u8651\u7528$set$\u4ee3\u66ff\u6807\u8bb0\u6570\u7ec4\uff0c\u5e76\u518d\u7528\u4e00\u4e2a$set$\u5b58\u6240\u6709\u8def\u5f84\u957f\u5ea6\u3002\n\n```cpp\n#include<iostream>\n#include<climits>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<ctime>\n#include<set>\n#define pii pair<int,int>\n#define one first\n#define two second\n#define mp make_pair\nusing namespace std;\nconst int N=55,M=1e6+100;\nint ed[N][N];\nset<int>s[N],v;\nint n,m,minn=INT_MAX;\nqueue<pii>q;\ninline int work(int x)\n{\n\tint ans=0;\n\twhile (x)\n\t{\n\t\tif (x&1)\n\t\t{\n\t\t\tans++;\n\t\t\tif (ans>=minn) return ans;\n\t\t}\n\t\tx>>=1;\n\t}\n\treturn ans;\n}\ninline void bfs(int x)\n{\n\tq.push(mp(x,0));\n\twhile (!q.empty()&&(double)clock()/CLOCKS_PER_SEC<=0.8)\n\t{\n\t\tpii k=q.front();\n\t\tif (k.one==n)\n\t\tv.insert(k.second);\n\t\tq.pop();\n\t\tfor (int i=1;i<=n;i++)\n\t\t{\n\t\t\tif (ed[k.one][i]&&s[i].find(k.two+1)==s[i].end())\n\t\t\t{\n\t\t\t\tq.push(mp(i,k.two+1));\n\t\t\t\ts[i].insert(k.two+1);\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint s,e;\n\t\tscanf(\"%d%d\",&s,&e);\n\t\ted[s][e]=1;\n\t}\n\tbfs(1);\n\tfor (set<int>::iterator it=v.begin();it!=v.end();it++)\n\t{\n\t\tminn=min(minn,work(*it));\n\t\tif (minn==1) break;\n \t}\n\tprintf(\"%d\\n\",minn);\n\treturn 0;\n}\n```\n\u5982\u679c\u641c\u7d22\u52a0\u5230\u6700\u5927$0.8s$\u8fd9\u6837\u4f60\u5c31\u4f1a\u53d1\u73b0\u5f97\u5206\u4ece60~100\u5206\u4e0d\u7b49\u3002~~\u5f97\u591a\u5c11\u5206\u53d6\u51b3\u4e8e\u6d4b\u8bc4\u673a\u7684\u5fc3\u60c5\u3002~~\n\n\u4f46\u662f\u6211\u4eec\u7531\u6b64\u77e5\u9053\u8fd9\u6837\u66b4\u529b\u80af\u5b9a\u80fd\u5f97\u51fa\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u5982\u679c\u76f4\u63a5$O(ans*log(ans))$\u8dd1\u80af\u5b9a\u4e0d\u4f1a\u8d85\u65f6\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u7136\u540e\u6211\u4eec\u60f3\u5230\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u7b97\u6cd5\u5806\u4f18\u5316\u7684$Dijkstra$\uff0c\u6211\u4eec\u901a\u8fc7\u63a2\u5bfb\u672c\u8d28\u53d1\u73b0\u5728\u6b64\u9898\u4e2d\u5982\u679c\u7528\u8fd9\u79cd\u65b9\u6cd5\u4f18\u5316\u5c31\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u5982\u679c\u6269\u5c55\u7684\u70b9\u7684\u8ddd\u79bb\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u70b9\u6269\u5c55\u7684\u53ef\u88ab\u6269\u5c55\u7684\u6700\u5927\u503c\uff0c\n\u90a3\u4e48\u8fd9\u4e2a\u503c\u5c31\u4e00\u5b9a\u88ab\u5165\u961f\u8fc7\uff0c\u53ef\u4ee5\u8003\u8651$bfs$\u7684\u672c\u8d28\u6765\u7406\u89e3\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u90fd\u8bb0\u5f55\u4e00\u4e2a\u53ef\u88ab\u6269\u5c55\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u5f53\u524d\u6269\u5c55\u503c\u5c0f\u4e8e\u7b49\u4e8e\u6700\u5927\u503c\uff0c\u5219\u8df3\u8fc7\uff0c\u5982\u679c\u5927\u4e8e\uff0c\u5219\u52a0\u5165\u961f\u5217\uff0c\u540c\u65f6\u66f4\u65b0\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u8c8c\u4f3c\u6bcf\u6b21\u5224\u65ad\u7b54\u6848\u5c31\u662f$log(x)$\u7684\uff0c$x$\u662f\u5408\u6cd5\u8def\u5f84\u957f\u5ea6\uff0c\u8c8c\u4f3c\u6bd4$set$\u53bb\u91cd\u8981\u4f18\u5f88\u591a\uff0c\u540c\u65f6\u8fd9\u6837\u5361\u65f6\u53ef\u4ee5\u5230$0.9s$\u3002\n\n~~\u7136\u540e\u8fd9\u9898\u5c31\u7a33\u8fc7\u4e86~~\n\n\u5176\u5b9e\u8fd9\u9898\u5982\u679c\u5438\u6c27\u5361\u65f6\u5361\u5230$0.5s$\u4e5f\u53ef\u4ee5\u8fc7\u3002\n\n```cpp\n#include<iostream>\n#include<climits>\n#include<cstdio>\n#include<queue>\n#include<ctime>\n#define pii pair<int,int>\n#define mp make_pair\n#define one first\n#define two second\nusing namespace std;\nconst int N=55;\npriority_queue<pii,vector<pii>,greater<pii> >q;\nbool ed[N][N];\nint n,m,minn=INT_MAX;\nint maxx[N];\ninline int work(int x)\n{\n\tint ans=0;\n\twhile (x)\n\t{\n\t\tif (x&1)\n\t\t{\n\t\t\tans++;\n\t\t\tif (ans>=minn) return ans;\n\t\t}\n\t\tx=x>>1;\n\t}\n\treturn ans;\n}\ninline void bfs(int x)\n{\n\tq.push(mp(0,x));\n\twhile (!q.empty()&&(double)clock()/CLOCKS_PER_SEC<=0.9)\n\t{\n\t\tpii k=q.top();\n\t\tif (k.two==n)\n\t\t{\n\t\t\tminn=min(minn,work(k.one));\n\t\t\tif (minn==1) return ;\n\t\t}\n\t\tq.pop();\n\t\tfor (int i=1;i<=n;i++)\n\t\tif (ed[k.two][i]&&maxx[i]<k.one+1)\n\t\t{\n\t\t\tmaxx[i]=k.one+1;\n\t\t\tq.push(mp(k.one+1,i));\n\t\t}\n\t}\n\treturn ;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint s,e;\n\t\tscanf(\"%d%d\",&s,&e);\n\t\ted[s][e]=1;\n\t}\n\tbfs(1);\n\tprintf(\"%d\\n\",minn);\n\treturn 0;\n}\n```",
        "postTime": 1566976520,
        "uid": 54502,
        "name": "\u51c6\u70b9\u7684\u661f\u8fb0",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "**\u770b\u89c1\u697c\u5e95\u4e0b\u90fd\u7528\u500d\u589e+Floyd\uff0c\u849f\u84bb\u6309\u8010\u4e0d\u4f4f\u4e86**\n\n\u4e00\u5f00\u59cb\u770b\u8fd9\u9053\u9898\u65f6\uff0c\u53d1\u73b0\u662f\u6700\u77ed\u8def\uff0c\u53ef\u662f\u641c\u7684\u53c8\u662f\u500d\u589e\u7684\u9898\u65e0\u53ef\u5206\u8bf4\u8fd9\u662f**\u500d\u589e+\u6700\u77ed\u8def**\n\n\u4f46\u662fDijkstra\uff0cSPFA\u6211\u53c8\u4e0d\u719f\uff0c\u53ef\u662f\u770b\u4e86\u6570\u636e\u8303\u56f4\u5fc3\u4e2d\u840c\u751f\u4e00\u79cd\u7528Floyd\u505a\u7684\u65b9\u6cd5\n\n------------\n\u4e0d\u626f\u4e86\n\n\u5148\u8bbe\u4e00\u4e2a\u4e09\u7ef4bool\u6570\u7ec4\u662f\u7528\u6765\u8868\u793a\u662f\u5426i\u5230j\u4e4b\u95f4\u6709\u4e00\u6761\u957f\u5ea62^k\u7684\u8fb9\n\n\u518d\u8bbe\u4e00\u4e2a\u4e8c\u7ef4int\u6570\u7ec4\u662f\u7528\u6765\u5b58\u65f6\u95f4\u7684\uff0c\u518d\u628an\uff0cm\u5b9a\u4e0a\uff08\u5b9a\u4e49\u5b8c\u6210\uff09\n\n\u5982\u679c\u8bf4\uff0cbool\u6570\u7ec4f[i][j][k]\u4e2d\u4efb\u610f\u4e00\u7ec4\u53d8\u4e3atrue\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9a[i][j]=1\uff0c\u8868\u793ai\u5230j\u4e4b\u95f4\u8fd9\u4e00\u79d2\u53ef\u4ee5\u5230\u8fbe\n\n\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u5728Floyd\u4e2d\u5224\u65adijk\u76f8\u7b49\u5462\uff1f\u56e0\u4e3a\u9898\u76ee\u4e2d\u5b58\u5728\u7740\u73af\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4e0d\u884c\n\n\u9884\u5904\u7406\u7684\u65f6\u5019\u6700\u5916\u5c42\u679a\u4e3e\u7684K\uff0c\u5e94\u8be5\u5224\u65adf[i][k][K-1]\u548cf[k][j][K-1]\uff0c\u8ba9f[i][j][K]=1\n\u5426\u5219\u4f1a\u51fa\u73b0\u6ca1\u6709\u90a3\u4e48\u591a\u8fb9\u4f46\u662fa\u53d8\u62101\u7684\u60c5\u51b5 \n\n~~\u672c\u849f\u84bb\u4ee3\u7801\uff0c\u52ff\u55b7~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 110;\nint n,m;\nint u,v;\nint a[N][N];\nbool f[N][N][N];\nint main()\n{\n\tmemset(a,0x3f3f3f,sizeof(a));\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\ta[i][i]=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>u>>v;\n\t\tf[u][v][0]=1;\n\t\tif(u==v)\n\t\t\ta[u][v]=0;\n\t\telse a[u][v]=1;\n\t}\n\tfor(int s=1;s<=20;s++)\n\tfor(int k=1;k<=n;k++)\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\tif(f[i][k][s-1] && f[k][j][s-1])\n\t{\n\t\tf[i][j][s]=1;\n\t\tif(i==j)\n\t\t\ta[i][j]=0;\n\t\telse a[i][j]=1;\n\t}\n\tfor(int k=1;k<=n;k++)\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\t\ta[i][j]=min(a[i][j],a[i][k]+a[k][j]);\n\tcout<<a[1][n];\n\treturn 0;\n}\n```",
        "postTime": 1545548764,
        "uid": 48821,
        "name": "\u4e09\u597d\u4ee3\u8868",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "\u4e3a\u5565\u90fd\u662f\u7528\u6700\u77ed\u8def\u7684\u9898\u89e3\uff0c\u611f\u89c9\u662f\u5f88\u660e\u663e\u7684\u72b6\u538b\u5427\u3002  \n\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u8d70 $2^i$ \u8ddd\u79bb\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u96c6\u72b6\u6001\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u500d\u589e\u505a\u5230\u3002  \n\u7136\u540e\u5c06\u6240\u6709\u7684\u8fd9\u6837\u7684\u72b6\u6001\u7ed9\u201c\u6216\u201d\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e2a\u70b9\u8d70\u4e00\u6b65\u80fd\u5230\u8fbe\u7684\u70b9\u96c6\u72b6\u6001\u3002  \n\n\u6709\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\u662f\u6700\u591a\u8d70 n \u6b65\u5c31\u80fd\u5230\u8fbe\u76ee\u7684\u5730\uff08\u4e0d\u9700\u8981\u91cd\u590d\u7ecf\u8fc7\u4efb\u610f\u70b9\uff09\uff0c\u6240\u4ee5\u76f4\u63a5 while(1) \u66f4\u65b0\u72b6\u6001\uff0c\u76f4\u5230 n \u70b9\u88ab\u7eb3\u5165\u5176\u4e2d\u5373\u53ef\u3002\n\n\n```cpp\n#include <cstdio>\ntypedef long long LL ; \nLL reach[60][60] ;\nLL reacher[60] ;\nint main(){\n    int n, m; scanf(\"%d %d\", &n, &m) ;\n    for(int i=1; i<=m; i++){\n        int a, b; scanf(\"%d %d\", &a, &b);\n        reach[a][0] |= (1ll << b) ; \n        reacher[a] |= (1ll << b) ;\n    }\n    \n    for(int j=1; j<60; j++){\n        for(int i=1; i<=n; i++){\n            // \u6c42\u89e3 reach[i][j]\n            LL staus = reach[i][j-1], res = 0 ;\n            for(int k=1; k<=n; k++)\n                if((1ll<<k) & staus)\n                    res |= reach[k][j-1] ;\n            reach[i][j] = res ; \n            reacher[i] |= reach[i][j] ;\n        }\n    }\n    \n    int ans = 0 ;\n    LL temp = 2 ;\n    while((temp & (1ll<<n)) == 0){\n        ans ++ ;\n        LL newres = temp ; \n        for(int i=1; i<=n; i++)\n            if((1ll<<i) & temp)\n                newres |= reacher[i] ;\n        temp = newres ;\n    }\n    printf(\"%d\\n\", ans) ;\n\n\n    return 0;\n}\n```\n",
        "postTime": 1569473249,
        "uid": 162823,
        "name": "asasas5d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "### 1.\u5148\u770b\u9898\n\u9898\u76ee\u610f\u601d:\u4ece1\u8d70\u5230n,m\u6761\u5355\u5411\u8fb9,\u957f\u5ea6\u90fd\u4e3a1,\u6bcf\u79d2\u80fd\u4e14\u53ea\u80fd\u79fb\u52a8$2^k$  \n\u5bf9\u4e8e\u8fd9\u79cd\u5947\u602a\u7684\u89c4\u5b9a\uff0c\u5e94\u8be5\u80fd\u60f3\u5230\u662f\u500d\u589e  \n\u500d\u589e\u65b9\u6cd5:  \n\u5982\u679ci\u5230k,k\u5230j\u90fd\u5b58\u5728\u957f\u5ea6\u4e3a$2^{k-1}$\u7684\u8def\u5f84,\u90a3\u4e48i\u5230j\u5c31\u5b58\u5728\u957f\u5ea6\u4e3a$2^k$\u7684\u8def\u5f84  \n\u5c06k\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5373\u53ef\n\n### 2.\u6570\u636e\u8303\u56f4  \n$n<=50$,\u7acb\u65b9\u7ea7\u6ca1\u95ee\u9898,\u6700\u4e3a\u4e00\u9053\u56fe\u8bba\u9898,Floyd  \n(Floyd\u7684\u672c\u8d28\u662f**DP**)  \n\n### 3.\u8bbe\u8ba1\u7b97\u6cd5  \n\u5b58\u4e24\u4e2a\u6570\u7ec4,\u4e00\u4e2a\u6570\u7ec4$p[k][i][j]$\u4ee3\u8868i\u5230j\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3a$2^k$\u7684\u8def\u5f84  \n\u53e6\u4e00\u4e2a\u6570\u7ec4$dis[i][j]$\u4ee3\u8868i\u5230j\u7684\u6700\u77ed\u8ddd\u79bb,\u521d\u59cb\u503c\u8bbe\u4e3a$INF$  \n\u5982\u679c\u4ecei\u5230j\u5b58\u5728\u957f\u5ea6\u4e3a$2^k$(\u6b64\u5904k\u4efb\u610f)\u7684\u8def\u5f84\u5219$dis[i][j]=1$  \n\u521d\u59cb\u52a0\u8fb9\u5c31\u662f$k=0$ $(2^0=1)$  \n\u6700\u540e\u8dd1\u4e00\u904dFloyd,1\u5230n\u6700\u77ed\u8def  \n\n### PS:  \n\u867d\u7136\u53ea\u670910000\u6761\u8fb9,\u4f46\u662f\u53ef\u80fd\u8981\u7ed5\u73af\u8d70\u4e2a\u597d\u51e0\u5708\u624d\u80fd\u8fbe\u5230\u6700\u4f18\u89e3,\u6240\u4ee5k\u8fd8\u662f1\u523064\u5427(maxlongint)  \n\n\u601d\u8def\u4e3b\u8981\u5728\u524d\u9762\u8bb2\u4e86,\u4ee3\u7801\u5199\u7684\u6bd4\u8f83\u77ed,\u91cc\u9762\u4e5f\u6ce8\u91ca\u6bd4\u8f83\u5c11\u4e86\u3002\n## code:  \n```cpp\n#include <map>\n#include <list>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define LL long long\nusing namespace std;\n\nLL p[65][55][55] = {0}; // \u662f\u5426\u5b58\u5728\u8def\u5f84\nLL dis[55][55] = {0};   // \u6700\u77ed\u8def\nLL n,m,u,v;\n\nint main(){\n\tmemset(dis,0x3f,sizeof(dis)); // \u521d\u59cb\u5316\n\tios::sync_with_stdio(false);\n\tcin >> n >> m;\n\tfor(register int i = 1;i <= m;i ++){\n\t\tcin >> u >> v;\n\t\tp[0][u][v] = 1; dis[u][v] = 1; // u\u5230v\u6709\u4e00\u6761\u957f\u5ea6\u4e3a1(1=2^0)\u7684\u8fb9\n\t}\n\tfor(register int t = 1;t <= 64;t ++)\n\t\tfor(register int k = 1;k <= n;k ++)\n\t\t\tfor(register int i = 1;i <= n;i ++)\n\t\t\t\tfor(register int j = 1;j <= n;j ++)\n\t\t\t\t\tif(p[t - 1][i][k] && p[t - 1][k][j])\n\t\t\t\t\t\tp[t][i][j] = 1,dis[i][j] = 1;\n\t\t\t\t\t\t//\u4e0a\u9762\u6240\u8bf4\u65b9\u5f0f\u66f4\u65b0dis\u548cp\n    for(register int k = 1;k <= n;k ++)\n\t\tfor(register int i = 1;i <= n;i ++)\n\t\t\tfor(register int j = 1;j <= n;j ++)\n\t\t\t\tdis[i][j] = min(dis[i][j],dis[i][k] + dis[k][j]);\n                //Floyd kij\n\tcout << dis[1][n] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1551878134,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "\u500d\u589e\u9884\u5904\u7406$+$\u6700\u77ed\u8def\n\n\u6211\u4eec\u9996\u5148\u9884\u5904\u7406\u51fa\u6765\u4ece\u4e00\u53f7\u8282\u70b9\u8d70$2^k$\u6b65\u53ef\u4ee5\u5230\u8fbe\u7684\u6240\u6709\u7ed3\u70b9\uff0c\u7136\u540e\u7528$\\text{floyd}$\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u5173\u952e\u90e8\u5206\u5728\u9884\u5904\u7406\uff0c\u6211\u4eec\u8981\u6ce8\u610f\u679a\u4e3e\u987a\u5e8f\uff0c\u5916\u5c42\u679a\u4e3e$k$\uff0c\u7136\u540e\u5185\u5c42\u518d$n^3$\u679a\u4e3e\u8f6c\u79fb\u3002\n\n\u5148\u679a\u4e3e$k$\u662f\u4e3a\u4e86\u5728\u8f6c\u79fb\u5f53\u524d\u72b6\u6001\u65f6\uff0c\u4fdd\u8bc1\u4ed6\u524d\u9762\u6240\u6709\u7684$2^{1...k-1}$\u6b65\u5df2\u7ecf\u5168\u90e8\u5904\u7406\u5b8c\u6210\u4e86\u3002\n\n\u4e8e\u662f\u4ee3\u7801\u5c31\u5f88\u597d\u5199\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 500;\nint n , m;\nint g[N][N];\nint f[N][N][70];\n\nvoid Pre () {\t\nfor(int p = 1 ; p <= 32 ; p ++)\n\tfor(int k = 1 ; k <= n ; k ++)\n\t\tfor(int i = 1 ; i <=n ; i ++)\n\t\t\tfor(int j = 1; j  <= n ; j ++) {\t\t \n\t\t\t\t\tif(f[i][k][p - 1] && f[k][j][p - 1]) {\n\t\t\t\t\t\tf[i][j][p] = 1 , g[i][j] = 1;\n\t\t\t}\n\t\t}\n\tfor(int i = 1 ; i <= n ;i ++) g[i][i] = 0;\n}\n\nvoid Floyd() {\n\tfor(int k =1 ; k <= n ;k ++)\n\t\tfor(int i = 1 ; i <= n; i ++)\n\t\t\tfor(int j = 1 ; j <= n ; j ++)\n\t\t\t\tif(i != j && j != k && i != k)\n\t\t\t\t\tg[i][j] = min(g[i][j] , g[i][k] + g[k][j]);\n\tcout <<g[1][n] << endl;\n}\n\nint main () {\n\tmemset(g , 0x3f , sizeof(g));\n\tcin >> n >> m;\n\tfor(int i = 1;  i <= m; i ++) {\n\t\tint u , v;\n\t\tcin >> u >> v;\n\t    g[u][v] = 1;\n\t    f[u][v][0] = 1;\n\t}\n\tPre(); Floyd();\n\treturn 0;\n} \n```",
        "postTime": 1573005061,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "\u4e00\u770b\u52302^k\uff0c\u5c31\u80fd\u731c\u51fa\u662f\u500d\u589e\u4e86\u5427\u3002\u5148\u6c42\u51fa\u5c0fA\u4e00\u79d2\u5185\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u5177\u4f53\u516c\u5f0f\u662ff[i][j][l]=\u2211(f[i-1][j][k]&&f[i-1][k][l])\uff0c\u82e5f[i][j][k]>0\uff0c\u5219j\u4e0ek\u4e4b\u95f4\u6709\u4e00\u6761(2^i)km\u7684\u8def\u3002\u53cd\u4e4b\u4ea6\u65e0\u3002\u63a5\u7740\u662f\u6784\u56fe\uff0c\u82e5\u5b58\u5728\u4e00\u4e2a\u53d8\u91cfi\uff0c\u4f7f\u5f97f[i][j][k]>0\uff0c\u5219graph[j][k]=1\uff0c\u8868\u793a\u5c0fA\u53ef\u4ee5\u57281\u79d2\u4e4b\u5185\u4ecej\u5230k\u3002\u6700\u540e\u5bf9graph\u6c42\u4e00\u8fb9\u6700\u77ed\u8def\u5373\u53ef\u3002\u6c42\u51fa\u5c0fA\u4e00\u79d2\u5185\u80fd\u5230\u8fbe\u7684\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log maxlongint\u25aan^3)\uff0c\u6784\u56fe\u6700\u5febO(log maxlongint\u25aan^2)\uff0c\u6700\u77ed\u8def\u6700\u5febO(n^2)\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log maxlongint\u25aan^3)\u3002\n\n\u9644\u4ee3\u7801\uff08\u6784\u56fe\u548c\u6700\u77ed\u8def\u90fd\u6ca1\u6709\u7528\u8f83\u5feb\u7684\u7b97\u6cd5\uff0c\u4f46\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u81f4\uff09\uff1a\n\n```cpp\n\n#include<iostream> \nusing namespace std;\nint n,m,i,j,graph[51][51]={},u,v,k,l;\nbool map[65][51][51]={}; \nint main ()\n{\n    cin>>n>>m;\n    for (i=1;i<=n;i++)\n    for (j=1;j<=n;j++)\n    graph[i][j]=65;\n    for (i=1;i<=m;i++)\n    {\n        cin>>u>>v;\n        map[0][u][v]=1;\n        graph[u][v]=1;\n    }\n    for (i=1;i<=64;i++)\n    for (j=1;j<=n;j++)\n    for (k=1;k<=n;k++)\n    for (l=1;l<=n;l++)\n    if (map[i-1][j][k]&&map[i-1][k][l])\n    {\n                                       map[i][j][l]=1;\n                                       graph[j][l]=1;\n    }\n    for (i=1;i<=n;i++)\n    for (j=1;j<=n;j++)\n    for (k=1;k<=n;k++)\n    graph[j][k]=min(graph[j][k],graph[j][i]+graph[i][k]);\n    cout<<graph[1][n];\n    return 0;\n}\n\n```",
        "postTime": 1438864535,
        "uid": 4865,
        "name": "Mr_Li",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "emmm\uff0cemmmm\uff0cemmmmm\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u662f\u4e00\u9053\u88f8\u7684A* \u561b\uff08huaji\uff09\n\n\u597d\u5427\uff0c\u5176\u5b9e\u662f\u6211\u4e0d\u4f1a\u6253\u6b63\u89e3\uff0c\u53ea\u80fd\u7528A* \u6765\u6c34\u4e86\u3002\n\n\u56de\u5f52\u6b63\u9898\uff1a\n\n\u4ece\u9898\u76ee\u4e2d\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u4ed6\u9700\u8981\u6c42\u51fa\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u8def\u5f84\u7684\u957f\u5ea6\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u540e\u76841\u5c3d\u91cf\u7684\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528a* \u6c42\u51fa\u524d\u4e0d\u77e5\u9053\u591a\u5c11\u6761\u6700\u77ed\u8def\uff0c\u53d6\u91cc\u9762\u4e8c\u8fdb\u5236\u4e0b\u6700\u5c0f\u7684\u4e00\u6761\u8def\u5f84\u5c31\u53ef\u4ee5\u4e86\u3002\n\ncode\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct node\n{\n\tint to,next;\n\tint w ;\n}edge[100010],edge2[100010];//\u4e24\u4e2a\u56fe\u4e5f\uff0c\u4e00\u4e2a\u6b63\u7684\uff0c\u4e00\u4e2a\u53cd\u7684  \nint k;\nint k2;\nint head[200];\nint head2[200];\nint u,v;\nint dist[200];\nbool book[100010];\nint ans=0x7f7f7f7f;\nint cnt[10010];//\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5165\u961f\u6b21\u6570 \nint n,m;\nbool re[51][51];//\u53bb\u91cd\u8fb9 \nstruct point2//dijkstra\u7684\u7ed3\u6784\u4f53 \n{\n\tint id;\n\tint num;\n\tpoint2(int x,int y)\n\t{\n\t\tid=x;\n\t\tnum=y;\n\t}\n\tbool friend operator < (point2 x,point2 y)\n\t{\n\t\treturn x.num>y.num;\n\t}\n};\nstruct point//a*\u7684\u7ed3\u6784\u4f53 \n{\n\tint id;\n\tint f;\n\tint g;\n\tbool friend operator < (point x,point y)\n\t{\n\t\treturn x.g>y.g;\n\t}\n};\nvoid adde(int u,int v,int w)\n{\n\tedge[++k].to=v;\n\tedge[k].w=w;\n\tedge[k].next=head[u];\n\thead[u]=k;\n}\nvoid adde2(int u,int v,int w)\n{\n\tedge2[++k2].to=v;\n\tedge2[k2].w=w;\n\tedge2[k2].next=head2[u];\n\thead2[u]=k2;\n}\nvoid dijkstra(int s)//\u8fd9\u4e2a\u5c31\u4e0d\u9700\u8981\u8bf4\u4e86\u5427QWQ \n{\n\tmemset(dist,0x7f7f7f7f,sizeof(dist));\n\tpriority_queue<point2> q;\n\tdist[s]=0;\n\tq.push(point2(s,dist[s]));\n\twhile(!q.empty())\n\t{\n\t\tpoint2 rp=q.top();\n\t\tq.pop();\n\t\tif(book[rp.id])continue;\n\t\tbook[rp.id]=true;\n\t\tfor(int i=head2[rp.id];i;i=edge2[i].next)\n\t\t{\n\t\t\tint mp=edge2[i].to;\n\t\t\tif(dist[mp]>dist[rp.id]+edge2[i].w)\n\t\t\tdist[mp]=dist[rp.id]+edge2[i].w,q.push(point2(mp,dist[mp]));\n\t\t}\n\t}\n}\nint check(int num)//\u8fd9\u662f\u5224\u65ad\u5f53\u524d\u7684\u8ddd\u79bb\u9700\u8981\u8dd1\u7684\u6b65\u6570 \n{\n\tint sum=0;\n\twhile(num>0)\n\t{\n\t\tsum+=num&1;\n\t\tnum>>=1;\n\t}\n\treturn sum;\n}\nvoid astar()//a*~\\(\u2267\u25bd\u2266)/~\u5566\u5566\u5566 \n{\n\tpriority_queue<point> q;\n\tpoint rp;\n\trp.id=1;\n\trp.f=0;\n\trp.g=dist[rp.id]+rp.f;\n\tq.push(rp);//\u628a\u8d77\u70b9\u4e22\u8fdb\u53bb \n\twhile(!q.empty())\n\t{\n\t\tpoint mp=q.top();\n\t\tq.pop();\t\t\n\t\tans=min(ans,check(mp.g));\n\t\tif(ans==1)return ;//\u5982\u679c\u53d1\u73b0\u7b54\u6848\u5df2\u7ecf\u4e3a1\u4e86\uff0c\u90a3\u5c31\u4e0d\u8dd1\u4e86 \n\t\tif(cnt[mp.id]>=30100)return ;//\u5982\u679c\u4e00\u4e2a\u70b9\u90fd\u7ecf\u8fc730000\u6b21\u4e86\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e2a\u73af\u554a\uff0c\u4e0d\u7ba1\u4ed6\u4e86\uff0c\u53cd\u6b63\u7ee7\u7eed\u8dd1\u7ed3\u679c\u4e5f\u4e0d\u4f1a\u53d8\uff0c\u8fd4\u56de \n\t\tfor(int i=head[mp.id];i;i=edge[i].next)\n\t\t{\n\t\t\tpoint sx;\n\t\t\tsx.id=edge[i].to;\n\t\t\tsx.f=mp.f+edge[i].w;\n\t\t\tsx.g=sx.f+dist[sx.id];\n\t\t\tq.push(sx);\t\n\t\t\tcnt[sx.id]++;\n\t\t\t//\u6807\u51c6\u7684a*~\\(\u2267\u25bd\u2266)/~\u5566\u5566\u5566 \n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tif(u==v)\n\t\t{\n\t\t\tprintf(\"1\");\n\t\t\treturn 0;\n\t\t}\t\n\t\tif(!re[u][v])\n\t\tadde(u,v,1),adde2(v,u,1),re[u][v]=true;//\u5efa\u53cd\u8fb9\u8dd1\u53cd\u5411\u7684\u6700\u77ed\u8def\uff0c\u8fd9\u662fa*\u6c42k\u77ed\u8def\u7684\u5173\u952e \n\t}\t\n\tdijkstra(n);//\u5c3d\u91cf\u7528dijkstra\u54e6\uff0c\u5173\u4e8espfa\uff0c\u4ed6\u6b7b\u4e86 \n\tastar();//astar \n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n//dalao\u4eec\u4e0d\u8981hack\u6211\u7684\u4ee3\u7801\u4e2bQWQ \n```",
        "postTime": 1537597781,
        "uid": 61644,
        "name": "\u5922\u00b7\u58f9\u751f\u6240\u611b",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "### [Luogu](https://www.luogu.org/problem/P1613)\n\n\u4e00\u9053\u601d\u7ef4\u9898~~\u53ef\u80fd\u4ec5\u662f\u5bf9\u6211\u6765\u8bf4\uff0c\u5bf9\u4e8e\u5927\u4f6c\u4eec\u90fd\u662f\u663e\u7136\u7684~~\n\n[\u6216\u8bb8\u4f1a\u6709\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/fallen-down/p/11589151.html)\n\n-----------------\n\n### **\u7b80\u5316\u9898\u610f**\n\n\u7ed9\u4f60\u4e00\u4e2a\u56fe\uff0c\u627e\u5230\u4e00\u4e2a\u8def\u5f84\uff0c\u4f7f\u5176\u8def\u5f84\u7684\u4e8c\u8fdb\u5236\u4f4d\u4e2d$1$\u7684\u4e2a\u6570\u6700\u5c11\n\n### **\u5206\u6790**\n\n\u8fd9\u9898\u7684\u9898\u76ee\u5c31\u6709\u4e24\u4e2a\u5751\u70b9~~\u6216\u8bb8\u4ec5\u662f\u5bf9\u6211\u800c\u8a00~~\n1. \u6bcf\u6b21\u8d70\u7684\u65f6\u5019\uff0c\u53ea\u6709\u5728\u7aef\u70b9\u624d\u53ef\u4ee5\u505c\u4e0b\uff0c\u5373\u5982\u679c\u6709\u4e00\u6761\u8def\u4ece$i$\u5230$j$\uff0c\u5982\u679c\u5176\u8def\u5f84\u957f\u4e3a7\uff0c\u5219\u4e0d\u53ef\u4ee5\u4ece$i$\u76f4\u63a5\u8d70\u5230$j$\uff0c\u4f60\u8981\u8d70$3$\u6b21\u3002\n\n2. \u7531\u4e8e$1.$\u6240\u4ee5\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u3002\n\n\u7136\u540e\u60f3\u89e3\u6cd5\n\n\u9996\u5148\uff0c\u7531\u4e8e~~\u6807\u7b7e/\u8def\u5f84\u592a\u957f\u4e86/\u725b*\u7684~~\u673a\u5668\u7279\u6b8a\u7684\u8dd1\u8def\u65b9\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u4e86\u7528\u500d\u589e\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u7136\u540e\u8003\u8651\u8fd9\u9898\u6700\u540e\u8fd8\u662f\u8981\u6c42\u6700\u77ed\u8def\u3002\u6211\u4eec\u53c8\u770b\u5230\u4e86\u6570\u636e\u8303\u56f4$n<=50$\uff0c\u6240\u4ee5\u5c31\u60f3\u5230\u5f17\u6d1b\u4f0a\u5fb7\uff0c\u6c42\u6700\u77ed\u8def\u3002\u4f46\u7531\u4e8e\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\uff0c\u6545\u800c\u6211\u4eec\u9700\u8981\u5bf9\u8fd9\u4e2a\u56fe\u7684\u505a\u4e00\u4e2a\u8f6c\u5316\u3002\u8fd9\u9053\u9898\u5f88\u96be\u5bf9\u56fe\u7684\u70b9\u505a\u51fa\u8f6c\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u5bf9\u8fb9/\u8def\u5f84\u505a\u51fa\u8f6c\u5316\u3002\n\n\u7136\u540e\u5c31\u8003\u8651\u5bf9\u8def\u5f84\u7684\u8f6c\u5316\u3002\u8003\u8651\u4e4b\u524d\u4e0d\u80fd\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u7684\u539f\u56e0\uff1a\u6211\u4eec\u65e0\u6cd5\u5728\u8f83\u77ed\u7684\u65f6\u95f4\u91cc\u76f4\u63a5\u786e\u5b9a\u600e\u6837\u7684\u8def\u5f84\u4e2d\u4e8c\u8fdb\u5236\u4f4d\u7684$1$\u7684\u4e2a\u6570\u66f4\u5c11\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u628a\u8def\u5f84\u7684\u8d21\u732e\u8f6c\u5316\u4e3a\u5b83\u5728\u4e8c\u8fdb\u5236\u4e2d$1$\u7684\u4e2a\u6570\u4f60\u5c31\u53ef\u4ee5\u7b97\u7684\u6700\u77ed\u8def\u3002\n\n\u6240\u4ee5\u5148\u9884\u5904\u7406\u51fa\u4ece$i$\u5230$j$\u7684\u6700\u77ed\u8def\u5f84\u4e2d$1$\u7684\u4e2a\u6570\uff0c\u7136\u540e\u518d\u6c42\u4e00\u8fb9\u6700\u77ed\u8def\u5c31\u597d\u7684\u3002\n\n\u5bf9\u4e8e\u6c42$i$\u5230$j$\u7684\u6700\u77ed\u8def\u5f84\u4e2d$1$\u7684\u4e2a\u6570\uff0c\u7531\u4e8e$i$\u5230$j$\u7684\u8def\u5f84\u6709\u4e00\u79cd\u6027\u8d28~~\u6211\u54e6\u4e0d\u77e5\u9053\u5177\u4f53\u7684\u540d\u5b57~~\uff1a$i$\u5230$t$\u4e2d\u4e2a\u6570\u4e3a$k$,$t$\u5230$j$\u4e2d\u4e2a\u6570\u4e3a$k$,\u90a3\u4e48$i$\u5230$j$\u4e2d\u7684$1$\u7684\u4e2a\u6570\u5c31\u662f$k+1$\u3002\n\n\u6545\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e\u4f20\u9012\u95ed\u5305\u7684\u65b9\u5f0f\u6765\u6c42\u7684\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u4e2d\u7684\u4e8c\u8fdb\u5236\u4f4d\u7684$1$\u7684\u4e2a\u6570\n\n---------------\n\n### **code**\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint n,m,x,y,dis[55][55];\nbool map[55][55][65];\ninline void pre(){\n    for(register int t=0;t<=64;t++)\n        for(register int k=1;k<=n;k++)\n            for(register int i=1;i<=n;i++)\n                for(register int j=1;j<=n;j++)\n                    if(map[i][k][t-1]&&map[k][j][t-1])\n                        map[i][j][t]=1,dis[i][j]=1;\n}\ninline void floyed(){\n    for(register int k=1;k<=n;k++)\n        for(register int i=1;i<=n;i++)\n            for(register int j=1;j<=n;j++)\n                dis[i][j]=min(dis[i][k]+dis[k][j],dis[i][j]);\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    memset(dis,0x3f,sizeof(dis));\n    for(register int i=1;i<=m;i++)\n        scanf(\"%d%d\",&x,&y),\n        dis[x][y]=1,map[x][y][0]=1;\n    pre();floyed();printf(\"%d\",dis[1][n]);\n}\n```\n-----------\n\n\u6700\u540e\u56fd\u9645\u60ef\u4f8b\uff0cthankyou for your attention",
        "postTime": 1569463670,
        "uid": 145411,
        "name": "the_Death",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u5176\u5b9e\u611f\u89c9\u597d\u6c34\u554a\u2026\u2026\n\n\u4f46\u662f\u5f88\u597d\u7406\u89e3\u500d\u589e\u601d\u60f3\n\n\u9996\u5148\u7406\u89e3\u9898\u610f\uff0c\u5c31\u662f\u8bf4\u6bcf\u6b21\u53ef\u4ee5\u8dd12^k\u6b65\uff08k>=0\uff09,\u90a3\u4e48\u5148\u628a\u56fe\u8bfb\u8fdb\u6765\uff0c\u5982\u679c\u6709\u4e24\u6761\u6743\u503c\u4e00\u6837\u7684\u8fb9\uff0c\u5c31\u5408\u4e00\u8d77\uff0c\u6210\u4e00\u6761\u65b0\u8fb9\uff0c\u7136\u540e\u5c31\u4e00\u76f4\u5408\uff0c\u90a3\u4e48\u5408\u8d77\u6765\u7684\u8fb9\u53ea\u9700\u8981\n\u82b1\u8d391\uff0c\u5b58\u5728\u56fe\u4e2d\uff0c\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\uff08\u770b\u8d77\u6765\u597d\u50cf\u6709\u70b9\u5570\u55e6\uff09\n```\n    for(int i=1;i<=36;i++){\n        for(int u=1;u<=n;u++){\n            for(int v=1;v<=n;v++){\n                for(int k=1;k<=n;k++){\n                    if((f[i-1][u][k]==1)&&(f[i-1][k][v]==1)){//\u5982\u679cu\u5230v\u53ef\u4ee5\u901a\u8fc7\u8d70\u4e24\u6761\u957f\u5ea6\u4e00\u6837\uff082^(i-1)\uff09\u7684\u8def\u5230\uff0c\u5c31\u5408\u5728\u4e00\u8d77\n                        f[i][u][v]=1;\n                        g[u][v]=1;\n                    }\n                }\n            }\n        }\n    }\n```\n\n\u7136\u540e\u9898\u76ee\u53c8\u662f\u6c42\u6700\u77ed\u8def\uff0c\u7531\u4e8en<=50,\u4e0afloyd\u5c31\u5b8c\u4e8b\u4e86\n\n\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;\n}\nint n,m,g[55][55],f[40][55][55];\nint main(){\n    memset(g,127,sizeof(g));\n    n=read();m=read();\n    for(int i=1;i<=m;i++){\n        int u=read(),v=read();\n        g[u][v]=1;\n        f[0][u][v]=1;\n    }\n    for(int i=1;i<=36;i++){\n        for(int u=1;u<=n;u++){\n            for(int v=1;v<=n;v++){\n                for(int k=1;k<=n;k++){\n                    if((f[i-1][u][k]==1)&&(f[i-1][k][v]==1)){\n                        f[i][u][v]=1;\n                        g[u][v]=1;\n                    }\n                }\n            }\n        }\n    }\n    \n    for(int k=1;k<=n;k++){\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=n;j++){\n                if(g[i][k]<=999999 && g[k][j]<=999999){\n                    g[i][j]=min(g[i][j],g[i][k]+g[k][j]);\n                }\n            }\n        }\n    }\n    \n    \n    cout<<g[1][n];\n    return 0;\n}\n```",
        "postTime": 1542693965,
        "uid": 20370,
        "name": "Pleasun",
        "ccfLevel": 6,
        "title": "P1613 \u8dd1\u8def"
    },
    {
        "content": "\u8fd9\u662f\u9053\u8001\u9898\u4e86,\u5176\u5b83\u9898\u89e3\u4e2d\u4f3c\u4e4e\u5e76\u672a\u8bf4\u660e\u8fd9\u5c31\u662f\u500d\u589efloyd,\u6240\u4ee5\u6211\u5199\u7bc7\u9898\u89e3\u4ecb\u7ecd\u4e00\u4e0b,\u6c42\u8fc7\u4e86~\n------------\n\n\u9898\u610f\uff1a\n\nhttps://www.luogu.org/problemnew/show/P1613\n\n\u89e3\u6790\uff1a\n\n\u9996\u5148\u4e0a\u6765\u8dd1floyd\u80af\u5b9a\u662f\u9519\u7684,\u56e0\u4e3a\u6709\u63a8\u8fdb\u5668\u7684\u4f5c\u7528,\u5b83\u4f1a\u7f29\u77ed\u4e00\u4e9b\u70b9\n\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n\n\u6211\u4eec\u53d1\u73b0\u63a8\u8fdb\u5668\u7684\u4f5c\u7528\u662f\u4f7f\u8def\u5f84\u957f\u4e3a(1<<K)\u7684\u8def\u5f84\u957f\u5ea6\u53d8\u4e3a1,\u56e0\u6b64\u6211\u4eec\u5728\u8dd1floyd\u524d\u5c31\u5e94\u8be5\u5148\u5904\u7406\u51fa\u65b0\u7684\u56fe,\u5728\u56fe\u4e2d\u5982\u679c\u539f\u56fe\u4e2dx,y\u4e24\u70b9\u957f\u5ea6\u4e3a(1<<K),\u90a3\u4e48x,y\u5728\u65b0\u56fe\u4e2d\u5c31\u6709\u4e00\u6761\u957f\u5ea6\u4e3a1\u7684\u8fb9\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u5982\u4f55\u9884\u5904\u7406\u3002\n\n\u90a3\u4e48\u5f15\u5165\u500d\u589efloyd,\u6211\u4eec\u90fd\u77e5\u9053floyd\u7684\u672c\u8d28\u662fDP,\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u5c06\u5176**\u6269\u5c55\u4e00\u4e0b**:f[i][j]\u8868\u793ai,j\u662f\u5426\u8054\u901a->f[i][j][k]\u8868\u793ai,j\u4e2d\u662f\u5426\u5b58\u5728\u957f\u4e3a(1<<K)\u7684\u4e00\u6761\u8def\u5f84\u3002(\u7ed3\u5408\u500d\u589e)\n\n\u8f6c\u79fb\u65b9\u7a0b:f[i][j][k]|=f[i][u][k-1]&&f[u][j][k-1]\n\nif(f[i][j][k]) ->dis[i][j]=1\n\n\u5728\u6784\u5efa\u65b0\u56fe\u540e,\u6211\u4eec\u5c31\u53ef\u4ee5\u6b63\u5e38floyd\u6765\u6c42\u51fa1->n\u7684\u6700\u77ed\u8def\u3002\n\nps1:\u500d\u589efloyd:\n\n\u7528\u5b83\u7684\u9898\u76ee\u5f62\u5f0f\u4e00\u822c\u662f:\u6c42\u7ecf\u8fc7k\u6761\u8fb9/\u70b9\u7684\u6700\u5927/\u5c0f\u8def\u5f84\u957f\u5ea6\n\n\u65b9\u7a0b:f[i][j][k]\u8868\u793a\u4ecei\u5230j,\u7ecf\u8fc7(1<<k)\u6761\u8fb9\u7684\u6700\u5927/\u5c0f\u957f\u5ea6,f[i][j][k]=min/max(f[i][u][k-1]+f[u][j][k-1])\n\n\u4f18\u5316\uff1a\u53d1\u73b0\u8fd9\u5c31\u662f\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f,\u53ea\u4e0d\u8fc7\u6539\u6210\u4e86\u53d6min/max\u7684\u5f62\u5f0f,\u5373f[i][j][k]->\u77e9\u9635f[k]=f[k-1]* f[k-1]\n\n\u7531\u4e8e\u540c\u77e9\u9635\u4e00\u6837\u5177\u6709\u4f20\u9012\u6027,\u6709\u65f6\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316,\u5982:BZOJ [usaco2007 Nov]relays \u5976\u725b\u63a5\u529b\u8dd1\n\nps2:\u679c\u8fd8\u60f3\u505a\u6b64\u7c7b\u7684\u9898,\u53ef\u4ee5\u770b\u6211\u7684\u535a\u5ba2:https://www.luogu.org/blog/ddy/kai-keng-bei-zeng-floyd#\n\ncode:\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=60;\nint n,m,t;\nint dis[maxn][maxn];\nbool f[maxn][maxn][70];\nvoid init()\n{\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tdis[i][j]=100;\n\tfor(int i=1;i<=n;i++) dis[i][i]=0;\n}\nvoid pre()\n{\n\tfor(int cnt=1;cnt<=64;cnt++)\n\t\tfor(int k=1;k<=n;k++)\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\tif(f[i][k][cnt-1]&&f[k][j][cnt-1])f[i][j][cnt]=1,dis[i][j]=1;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tinit();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;scanf(\"%d%d\",&u,&v);\n\t\tf[u][v][0]=1,dis[u][v]=1;\n\t}\n\tpre();\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n\tprintf(\"%d\",dis[1][n]);\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1559570091,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P1613 \u8dd1\u8def"
    },
    {
        "content": "floyd\u4f20\u9012\u95ed\u5305\u6253\u9519\u4e864\u6b21= =\n\n\u5728\u8ba8\u8bba\u91cc\u6211\u89e3\u91ca\u4e86\u4e00\u4e0b\u9898\u610f\uff0c\u90a3\u4e48\u9898\u76ee\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u8d702^K\u80fd\u521a\u597d\u5230\u54ea\u4e9b\u70b9\uff0c\u5728\u4ed6\u4eec\u4e4b\u95f4\u6dfb\u52a0\u4e00\u6761\u957f\u5ea6\u4e3a1\u7684\u8fb9\uff0c\u9898\u76ee\u539f\u672c\u7ed9\u7684\u8fb9\u5176\u5b9e\u957f\u5ea6\u4e5f\u90fd\u4e3a1\uff0c\u56e0\u4e3a\u5f53k=0\u65f6\u8d702^0=1\u53ef\u4ee5\u521a\u597d\u8d70\u5b8c\u4e00\u6761\u8fb9\u3002\n\n\u5148\u5f04\u4e2a\u4f20\u9012\u95ed\u5305\uff0c\u518dfloyd\u4e00\u4e0b\uff08n\u53ea\u670950\uff09\uff0c\u4f46\u5176\u5b9e\u7528spfa\u4ec0\u4e48\u7684\u662f\u6ca1\u6709\u529e\u6cd5\u4f18\u5316\u590d\u6742\u5ea6\u7684\uff0c\u56e0\u4e3a\u6709\u4e00\u4e2a\u4f20\u9012\u95ed\u5305O(n^3)\uff0c\u867d\u7136\u597d\u50cf\u6709\u4ec0\u4e48\u9b3c\u7b97\u6cd5\u53ef\u4ee5O(n^2logn)\u641e\u95ed\u5305\uff0c\u4e0d\u8fc7\u5f88\u9ebb\u70e6\u6ca1\u5fc5\u8981\u3002\n\n\u6700\u697c\u4e0b\u7684\u90a3\u4f4d\u8bf4\u7684\u5f88\u6e05\u695a\uff0c\u4f46\u4e0d\u5f97\u4e0d\u8bf4\u4ed6\u7684floyd\u95ed\u5305\u7684\u5faa\u73af\u987a\u5e8f\u4e0d\u592a\u5bf9\uff0c\u4f46\u7531\u4e8e\u6bd4\u8f83\u6c34\u7684\u6570\u636e\uff0c\u4e5f\u5c31\u8fc7\u4e86\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=101;\nint a[N][N];\nint b[N][N][N];\nint n,m;\nint main(){\n    memset(a,0x3f,sizeof(a));\n    memset(b,0,sizeof(b));\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=m;i++){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        a[u][v]=1;\n        b[0][u][v]=1;\n    }\n    for (int l=1;l<=64;l++)\n        for (int k=1;k<=n;k++)\n            for (int i=1;i<=n;i++)\n                for (int j=1;j<=n;j++){\n                    b[l][i][j]|=b[l-1][i][k] && b[l-1][k][j];\n                    if (b[l][i][j])a[i][j]=1;\n                }\n    for (int k=1;k<=n;k++)\n        for (int i=1;i<=n;i++)\n            for (int j=1;j<=n;j++)\n                a[i][j]=min(a[i][k]+a[k][j],a[i][j]);\n    printf(\"%d\",a[1][n]);\n    return 0;\n}\n```",
        "postTime": 1502978820,
        "uid": 48966,
        "name": "707001933K",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u500d\u589e + \u5f17\u6d1b\u4f0a\u5fb7\uff08\u6216\u5176\u4ed6\u6700\u77ed\u8def\u7684\u7b97\u6cd5\uff09    \n\u5148\u7528\u500d\u589e\u9884\u5904\u7406\u51fa\u6765\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8df32^k\u80fd\u4e0d\u80fd\u5230\u8fbe      \n\u5904\u7406\u7684\u65f6\u5019\u4e0d\u50cf\u662f\u8dd1\u500d\u589e      \n\u6709\u4ec0\u4e48dfs\u4ec0\u4e48\u7684     \n\u53ef\u4ee5\u7c7b\u4f3c\u5f17\u6d1b\u4f0a\u5fb7       \n\u4ece\u5c0f\u5230\u5927\u679a\u4e3ek\uff0c\u4e2d\u95f4\u70b9\u548c\u4e24\u4e2a\u70b9      \n\u7136\u540e\u5982\u679c\u4e24\u4e2a\u70b9\u5230\u4e2d\u95f4\u70b9\u90fd\u662f\u9700\u8981 $2^{k-1}$ \u6b65\u5c31\u53ef\u4ee5\u8dd1\u8fc7\u53bb     \n\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5c31\u53ef\u4ee5\u901a\u8fc7 $2^k$ \u8df3\u8fc7\u53bb     \n\u7136\u540e\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u53ef\u4ee5\u8df3\u8d77\u6765          \n\u90a3\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u5f17\u6d1b\u4f0a\u5fb7\u5e38\u7528\u7684\u4e8c\u7ef4\u6570\u7ec4\u50a8\u5b58\u4e00\u4e0b     \n\u8ddd\u79bb\u4e3a1    \n\n\u6700\u540e\u5c31\u53ef\u4ee5\u8dd1\u5f17\u6d1b\u4f0a\u5fb7\u4e86     \n\u679a\u4e3e\u4e2d\u95f4\u70b9\u548c\u4e24\u4e2a\u70b9      \n\u5982\u679c\u4e24\u4e2a\u70b9\u5230\u4e2d\u95f4\u70b9\u7684\u8ddd\u79bb\u548c\u52a0\u8d77\u6765\u5c0f\u4e8e\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u76f4\u63a5\u8ddd\u79bb    \n\u90a3\u5c31\u66ff\u6362\u6389     \n\n\u8f93\u51faf[1][n]\u5c31\u53ef\u4ee5\u4e86      \n\u6ce8\u610f\uff1a     \n\u8fd9\u662f\u6709\u5411\u8fb9\uff01\u4e0d\u8981\u60f3\u5f53\u7136\u7684\u60f3\u6210\u65e0\u5411\u8fb9\uff01      \n\n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\nconst int Max = 55;\nbool fa[Max][Max][34];\nint n,m;\nbool use[Max];\nint f[Max][Max];\n\nint main()\n{\n\tmemset(f,9999,sizeof(f));\n\tcin >> n >> m;\n\tint u,v;\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tcin >> u >> v;\n\t\tf[u][v] = 1;\n\t\tfa[u][v][0] = true;\n\t}\n\tfor(register int l = 1;l <= 32;++ l)\n\t\tfor(register int k = 1;k <= n;++ k)\n\t\t\tfor(register int i = 1;i <= n;++ i)\n\t\t\t\tfor(register int j = 1;j <= n;++ j)\n\t\t\t\t\tif(fa[i][k][l - 1] == true && fa[k][j][l - 1] == true)\n\t\t\t\t\t\tfa[i][j][l] = true,f[i][j] = 1;\n\tfor(register int k = 1;k <= n;++ k)\n\t\tfor(register int i = 1;i <= n;++ i)\n\t\t\tfor(register int j = 1;j <= n;++ j)\n\t\t\t\tif(i != k && j != k)\n\t\t\t\t\tf[i][j] = min(f[i][j],f[i][k] + f[k][j]);\n\tcout << f[1][n] << endl;\n\treturn 0;\n} \n```",
        "postTime": 1570695459,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u4e00\u5e74\u524d\u521a\u5b66\u500d\u589e\u7684\u65f6\u5019\u8001\u5e08\u7ed9\u7684\u8bad\u7ec3\u9898\uff0c\u4e00\u76f4\u6ca1\u505a\uff0c\u8fc7\u6765\u586b\u5751\u4e86\u3002\n\n# \u9898\u9762\n\n[P1613 \u8dd1\u8def](https://www.luogu.org/problem/P1613)\n\n# Solution\n\n\u56e0\u4e3a\u6bcf\u79d2\u80fd\u8dd1\u7684\u957f\u5ea6\u4e3a $2^k$ \uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u5bf9 $u,v$ \uff0c\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u80fd\u7528 $2^k$ \u8868\u793a\u51fa\u6765\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece $u$ \u5411 $v$ \u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u800c\u8fd9\u4e2a\u95ee\u9898\u7684\u5f62\u5f0f\u6070\u597d\u662f\u500d\u589e\u80fd\u591f\u89e3\u51b3\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528 $mp_{i,j,k}$ \u8868\u793a\u4ece $i$ \u5411 $j$ \u7684\u8def\u5f84\u957f\u5ea6\u80fd\u5426\u7528 $2^k$ \u8868\u793a\uff0c\u7136\u540e\u7ed3\u5408\u4e00\u4e0b $Floyd$ \u7684\u5199\u6cd5\uff0c\u5f97\u5230\u6240\u6709\u7684 $mp_{i,j,k}$ \uff0c\u5982\u679c $mp_{i,j,k}=1$ \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4ece $i$ \u5411 $j$ \u8fde\u4e00\u6761\u6743\u503c\u4e3a $1$ \u7684\u8fb9\uff0c\u7136\u540e $Floyd$ \u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il _print(T x){\n\tif(x/10) _print(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class T>il print(T x){\n\tif(x<0) putchar('-'),x=-x;\n\t_print(x);\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 55; \nint mp[MAXN][MAXN][MAXN],dis[MAXN][MAXN],n,m,u,v;\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(m),del(dis,0x3f);\n\tfor(ri i=1;i<=m;++i){\n\t\tread(u),read(v);\n\t\tmp[u][v][0]=1,dis[u][v]=1;\n\t}\n\tfor(ri t=1;t<32;++t)\n\t\tfor(ri i=1;i<=n;++i)\n\t\t\tfor(ri k=1;k<=n;++k)\n\t\t\t\tfor(ri j=1;j<=n;++j)\n\t\t\t\t\tif(mp[i][k][t-1]&&mp[k][j][t-1])\n\t\t\t\t\t\tmp[i][j][t]=1,dis[i][j]=1;\n\tfor(ri k=1;k<=n;++k)\n\t\tfor(ri i=1;i<=n;++i)\n\t\t\tfor(ri j=1;j<=n;++j)\n\t\t\t\tif(dis[i][k]+dis[k][j]<dis[i][j])\n\t\t\t\t\tdis[i][j]=dis[i][k]+dis[k][j];\n\tprint(dis[1][n]);\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u8fd9\u9053\u9898\u6709 $2^k$ \u8fd9\u79cd\u5f88\u597d\u7684\u5f62\u5f0f\uff0c\u8003\u8651\u5230\u500d\u589e\u5c31\u662f\u4ee5\u5176\u4e3a\u57fa\u7840\u7684\uff0c\u5de7\u5999\u7684\u8fd0\u7528\u500d\u589e\u6765\u89e3\u9898\u3002",
        "postTime": 1570586348,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P1613 \u8dd1\u8def \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u7528\u500d\u589e\u8fdb\u884c\u786e\u5b9a\u8def\u5f84\uff0c Floyd\u6765\u627e\u5230\u7b54\u6848\u3002\n\n\u7528\u4e00\u4e2a\u4e09\u5143\u6570\u7ec4f[i][j[k], i \u4e0e j \u8868\u793a\u4ece\u70b9i\u5230\u70b9j\uff0ck\u8868\u793a\u8fd9\u6761\u8def\u7684\u957f\u5ea6\u4e3a2 ^ k\uff0c\u5f53f[i][j][k] = 1\u65f6\u8868\u793a\u5b58\u5728\u8fd9\u6837\u4e00\u6761\u8def\uff0c\u53cd\u6b63\u5219\u65e0\u3002 \u8fd9\u6837\u9884\u5904\u7406\u540e\uff0c\u8dd1\u4e00\u6b21Floyd\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u3002\n\n\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u9898\u76ee\u4e2dm <= 10000, \u800c2\u768414\u6b21\u65b9\u5df2\u7ecf\u5927\u4e8e10000\uff0c\u4f46\u5728\u500d\u589e\u65f6\u5916\u5faa\u73af\u7684\u503ck\u5374\u8981\u5927\u4e8e14\u624d\u80fdAC\u6b64\u9898\u7684\u539f\u56e0\u662f\u5982\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0jz9ztbg.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u628a\u90a3\u4e2a\u73af\u8dd1\u4e24\u6b21\u5c31\u53ef\u4ee5\u5f97\u523016\u7684\u8def\u7a0b\u5f97\u5230\u7b54\u68481\uff0c\u8fd9\u65f62 ^ 4\u5927\u4e8e\u8fb9\u657010.\u6240\u4ee5\u7531\u6b64\u53ef\u4ee5\u63a8\u7406\u5f53\u628a\u73af\u7684\u957f\u5ea6\u53d8\u5927\u65f6\u53ef\u80fd\u53ef\u4ee5\u51d1\u51fa\u4e00\u4e2ak\uff0c\u8fd9\u65f62  ^ k \u8fdc\u5927\u4e8e10000.\n\n```c++\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nconst int inf = 777777;\n\nint n, m;\nint f[51][51][50], ans[51][51];\n\ntemplate<typename T>\ninline void read(T &x){\n\tx = 0;\n\tT op = 1;\n\tchar c = getchar();\n\tfor(; c < '0' || c > '9'; c = getchar())\n\t\tif(c == '-')\top = -1;\n\tfor(; c <= '9' && c >= '0'; c = getchar())\n\t\tx = (x << 3) + (x << 1) + c - '0';\n\tx *= op; \n} \n\nint main(){\n\tread(n), read(m);\n\tfor(int i = 1; i <= n; ++i)\n\t\tfor(int j = 1; j <= n; ++j){\n\t\t\tif(i != j)\tans[i][j] = inf;\n\t\t\telse ans[i][j] = 0;\n\t\t}\n\tfor(int i = 1; i <= m; ++i){\n\t\tint x, y;\n\t\tread(x), read(y);\n\t\tf[x][y][0] = 1;\n\t\tif(x != y) ans[x][y] = 1;\t\n\t}\n\tfor(int k = 1; k < 50; ++k)\n\t\tfor(int v = 1; v <= n; ++v)\n\t\t\tfor(int i = 1; i <= n; ++i)\n\t\t\t\tfor(int j = 1; j <= n; ++j)\n\t\t\t\t\tif(f[i][v][k - 1] && f[v][j][k - 1]){\n\t\t\t\t\t\tf[i][j][k] = 1;\n\t\t\t\t\t\tif(i != j) ans[i][j] = 1;\n\t\t\t\t\t}\n\tfor(int k = 1; k <= n; ++k)\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t\tfor(int j = 1; j <= n; ++j)\n\t\t\t\tans[i][j] = min(ans[i][j], ans[i][k] + ans[k][j]);\n\tprintf(\"%d\\n\", ans[1][n]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1568898018,
        "uid": 122966,
        "name": "Harece",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "## $Description$\n\n\u6709$n$\u4e2a\u70b9\uff0c$m$\u6761\u8fb9\uff0c\u8fb9\u6743\u4e3a\u4e00\uff0c\u6bcf\u6b21\u90fd\u53ef\u4ee5\u8d70$2^k$\u6761\u8fb9\uff0c\u95ee\u6700\u591a\u8981\u8d70\u51e0\u6b21\n\n## $Solution$\n\n\u8003\u8651\u500d\u589e\uff0c\u8bbe$f_{i,j,k}$\u8868\u793a$i$\u5230$j$\u662f\u5426\u80fd\u4ee5\u8d70$2^k$\u6761\u8fb9\u76f8\u4e92\u5230\u8fbe\u3002\n\n\u53ef\u4ee5\u7528$Floyd$\u7684\u65b9\u6cd5\u6c42\u51fa$f$\u6570\u7ec4\u3002\n\n\u65b9\u7a0b$:f_{i,j,p}=f_{i,k,p-1}|f_{k,j,p-1}(1\\leqslant k\\leqslant n)$\n\n\u6c42\u5b8c\u540e\uff0c\u82e5$f_{i,j,k}=1(0\\leqslant k\\leqslant 64)$,\u5219\u8fde\u4e00\u6761$i$\u5230$j$\u7684\u8fb9\u6743\u4e3a$1$\u7684\u8fb9,\u8868\u793a\u4ece$i$\u5230$j$\u82b1\u8d39$1$\u8d70$2^k$\u6b65\n\n\u6700\u540e\u518d\u7528$Floyd$\u6c42\u51fa$1$~$n$\u7684\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6$O(n^3\\times 64)$\n\n## $Code$\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define re register\n#define inf 0x3f3f3f3f\n#define N 100\nusing namespace std;\ninline int read(){\n    int x=0,w=0;char ch=getchar();\n    while (!isdigit(ch))w|=ch=='-',ch=getchar();\n    while (isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n    return w?-x:x;\n}\nint d[N][N],f[N][N][N];\nsigned main(){\n    int n=read(),m=read();\n    memset(d,0x3f,sizeof(d));\n    for (int i=1;i<=m;++i){\n        int u=read(),v=read();\n        f[u][v][0]=1;d[u][v]=1;\n    }\n    for (int p=1;p<=64;++p)\n        for (int k=1;k<=n;++k)\n            for (int i=1;i<=n;++i)\n                for (int j=1;j<=n;++j)\n                    if (f[i][k][p-1]&f[k][j][p-1])\n                        f[i][j][p]=1,d[i][j]=1;\n    for (int k=1;k<=n;++k)\n        for (int i=1;i<=n;++i)\n            for (int j=1;j<=n;++j)\n                d[i][j]=min(d[i][j],d[i][k]+d[k][j]);\n    cout<<d[1][n]<<endl;\n    return 0;\n}\n```",
        "postTime": 1558865003,
        "uid": 54260,
        "name": "tcchyc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "\u770b\u52302 ^ k \u5c31\u60f3\u5230\u4e86\u500d\u589e\uff0c \u7528\u4e00\u4e2a\u6570\u7ec4to[x][j][y], \u8868\u793ax + 2 ^ j\u80fd\u4e0d\u80fd\u8d70\u5230y\uff0c \u80fd\u5c31\u6807\u8bb01\uff0c \u6700\u540eFloyed\n\n\u4e2d\u95f4\u4e00\u4e2a\u500d\u589e\u6570\u7ec4\uff0c i + 2^(o - 1) = j, j + 2^(o - 1) = k      i -> k   i + 2^o = k;\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#define F(i, l, r) for(int i = l; i <= r; ++i)\nusing namespace std;\nconst int MAX = 51;\nconst int POW = 32;\nconst int INF = 1000000;\nint N, M,dis[MAX][MAX];\nbool to[MAX][POW + 1][MAX];\nint read() {\n    int x = 0, f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9') {\n        if(ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\n\nvoid Input() {\n    N = read(); M = read();\n    F(i, 1, N)\n        F(j, 1, N)\n            dis[i][j] = INF;\n    F(i, 1, M) {\n        int x, y;\n        x = read(); y = read();\n        dis[x][y] = 1;\n        to[x][0][y] = 1;\n    }\n    return;\n}\n\nvoid pre() {\n    for(int o = 1; o <= POW; ++o)\n      for(int i = 1; i <= N; i++)\n          for(int j = 1; j <= N; j++)\n            if(to[i][o - 1][j])\n            for(int k = 1; k <= N; k++)\n              if(to[j][o - 1][k])\n                to[i][o][k] = 1, dis[i][k] = 1;\n    return;\n}\n\nvoid Floyed() {\n    F(k, 1, N)\n        F(i, 1, N)\n            F(j, 1, N)\n                dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);\n    return;\n}\n\nint main() {\n    Input();\n    pre();\n    Floyed();\n    printf(\"%d\", dis[1][N]);\n    return 0;\n}\n```",
        "postTime": 1530497715,
        "uid": 50733,
        "name": "ttt_TTT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "```\n//Pro:P1613 \u8dd1\u8def\n\n//Floyd \n\n//\u8dd1\u8def\u673a\u6bcf\u6b21\u80fd\u8dd1\u7684\u8ddd\u79bb\u662f2^k\uff0c\u4e5f\u5c31\u662f\u4e0d\u80fd\u5728\u4e2d\u95f4\u505c\u4e0b\u6765\u3002\n//\u7528map[i][j][k]\u8868\u793ai\u548cj\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u4e3a2^k\u7684\u8fb9\u3002\n//dis[i][j]\u5b58\u65f6\u95f4\n//\u5982\u679cmap[i][j][k]\u4e2d\u6709\u4efb\u4e00\u4e3atrue\uff0c\u90a3\u4e48\u5c31\u8ba9dis[i][j]=1\uff0c\u8868\u793ai\u5230j\u4e00\u79d2\u53ef\u8fbe \n//\u5269\u4e0b\u7684floyd\u53bb\u66f4\u65b0\u5c31\u597d\u3002 \n\n//\u56e0\u4e3a\u4f1a\u6709\u81ea\u73af\uff0c\u6240\u4ee5\u4e0d\u80fd\u5728floyd\u91cc\u5224ijk\u76f8\u7b49continue \n\n//\u53d1\u73b0\u4e86\u81ea\u5df1zz\u7684\u9519\u8bef\n//\u9884\u5904\u7406\u7684\u65f6\u5019\u6700\u5916\u5c42\u679a\u4e3e\u7684K\uff0c\u5e94\u8be5\u5224\u65admap[i][k][K-1]&&map[k][j][K-1]\uff0c\u8ba9map[i][j][K]=1\n//\u5426\u5219\u4f1a\u51fa\u73b0\u6ca1\u6709\u90a3\u4e48\u591a\u8fb9\u4f46\u662fdis\u53d8\u62101\u7684\u60c5\u51b5 \n\n//\u4ee4\u6211\u5f88\u4e0d\u89e3\u7684\u662f\uff0cm<=1000\uff0c\u6309\u7406\u8bf42^14=16383\uff0c\n//\u90a3\u4e48\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u6700\u591a\u4e5f\u5c311000km\uff0c\u4e3a\u4ec0\u4e48\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u662f<=maxlongint\u5462\uff1f\n//\u800c\u4e14\u5faa\u73af\u523017\u4e5f\u8fc7\u4e0d\u4e86\u3002 \n\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\nconst int N=55;\n\nint n,m;\nint dis[N][N];\nbool map[N][N][N];\n\nint read()\n{\n\tchar c=getchar();int num=0;\n\tfor(;!isdigit(c);c=getchar());\n\tfor(;isdigit(c);c=getchar())\n\t\tnum=num*10+c-'0';\n\treturn num;\n}\n\nint main()\n{\n\tfreopen(\"testdata.in\",\"r\",stdin);\n\tmemset(dis,0x3f,sizeof(dis));\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;++i)\n\t\tdis[i][i]=0;\n\tfor(int i=1,u,v;i<=m;++i)\n\t{\n\t\tu=read(),v=read();\n\t\tmap[u][v][0]=1;\n\t\tdis[u][v]=u==v?0:1;\n\t}\n\tfor(int K=1;K<=17;++K)\t//\u9884\u5904\u7406\u53ef\u4ee51s\u5230\u8fbe\u7684 \n\t{\n\t\tfor(int k=1;k<=n;++k)\n\t\t{\n\t\t\tfor(int i=1;i<=n;++i)\n\t\t\t{\n\t\t\t\tfor(int j=1;j<=n;++j)\n\t\t\t\t{\n\t\t\t\t\tif(map[i][k][K-1]&&map[k][j][K-1])\n\t\t\t\t\t{\n\t\t\t\t\t\tmap[i][j][K]=1;\n\t\t\t\t\t\tdis[i][j]=i==j?0:1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int k=1;k<=n;++k)\n\t{\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\tfor(int j=1;j<=n;++j)\n\t\t\t{\n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",dis[1][n]);\n\treturn 0;\n}\n```",
        "postTime": 1526110502,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    },
    {
        "content": "\u4ec0\u4e48\u662f\u500d\u589e\uff1f\u4e0d\u77e5\u9053\n\n\n\u6734\u7d20floyd\u6700\u77ed\u8def+\u795e\u5947dp\n\n\n\ndp[v]=dp[u]+1 (u,v|2^k=dis[u][v])\n\n\u7279\u5224\u81ea\u73af\n\n\n\u590d\u6742\u5ea6O(n^3+n^2)\n\n\n4ms AC\n\n\n ![](https://cdn.luogu.com.cn/upload/pic/5572.png) \n\n\u65e0\u6b63\u786e\u6027\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint n,m;\nconst int maxn=64;\nconst int inf=0x3f3f3f3f;\nint g[maxn][maxn];\nint f[maxn];\nstatic void floyd(){\n    for(int k=1;k<=n;++k)\n        for(int i=1;i<=n;++i)\n            for(int j=1;j<=n;++j)\n                if(g[i][j]>g[i][k]+g[k][j])\n                    g[i][j]=g[i][k]+g[k][j];\n}\nstatic int dp(const int p){\n    int &ans=f[p];\n    if(ans!=-1)\n        return ans;\n    if(p==1)\n        return ans=0;\n    ans=inf;\n    for(int i=1;i<=n;++i)\n        if(g[i][p]!=inf){\n            int dis=g[i][p];\n            const int ids=g[i][i];\n            int awd=1;\n            for(;awd<dis&&awd>0;awd<<=1);\n            if(awd>dis){\n                while(awd>0){\n                    const int ddd=awd-dis;\n                    if(ddd%ids==0){\n                        dis=awd;\n                        break;\n                    }\n                    awd<<=1;\n                }\n            }\n            if(awd==dis){\n                ans=min(ans,dp(i)+1);\n            }\n        }\n    return ans;\n}\nstatic void awd(){\n    memset(g,0x3f,sizeof(g));\n    scanf(\"%d%d\",&n,&m);\n    while(m--){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        g[u][v]=1;\n    }\n    floyd();\n    memset(f,-1,sizeof(f));\n    printf(\"%d\\n\",dp(n));\n}\nint main(){\n    return awd(),0;\n}\n```",
        "postTime": 1495358997,
        "uid": 35091,
        "name": "tttnns",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1613 \u3010\u8dd1\u8def\u3011"
    }
]