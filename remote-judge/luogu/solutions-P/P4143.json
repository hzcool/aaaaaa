[
    {
        "content": "1. **\u4e00\u53e5\u8bdd\u9898\u610f:\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u5176\u6bcf\u4e2a\u4f4d\u7f6e\u76f8\u5e94\u7684\u6743\u503c\uff0c\u6c42\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u5b50\u4e32\u4e2a\u6570:**\n\n\n1. \u5b50\u4e32\u6240\u5bf9\u5e94\u7684\u6743\u503c\u548c\u7b49\u4e8e\u5176\u5728\u6240\u6709\u5b57\u4e32\u4e2d\u7684\u6392\u540d(\u4ece\u5927\u5230\u5c0f)\n\n\n(\u4e5f\u5c31\u662f\u7b2cK\u5927\u7684\u5b50\u4e32\u6743\u503c\u548c\u4e3aK)\n\n\n2. \u6ce8\u610f:\u76f8\u540c\u7684\u5b50\u4e32\u6392\u540d\u65f6\u7b97\u4e00\u4e2a\uff0c\u4f46\u7edf\u8ba1\u7b54\u6848\u662f\u5206\u5f00\u7b97\u3002\n\n\n2. **30pts\u505a\u6cd5**\n\n\n~~(\u66b4\u529b\u6a21\u62df)~~\n\n\n3. **\u6b63\u89e3**\n\n\n\u9996\u5148\u770b\u5230\u662f\u5b57\u7b26\u4e32\u7684\u9898\uff0c\u53c8\u6ca1\u6709\u5339\u914d\u95ee\u9898\uff0c\u90a3\u4e48\u80af\u5b9a\u5c31\u548c\u540e\u7f00\u6709\u5173\u4e86\u3002~~(\u56e0\u4e3a\u6211\u53ea\u4f1a\u8fd9\u4e48\u591a)~~\n\n\n\u8003\u8651\u540e\u7f00\u6570\u7ec4\u3002\n\n    \n\u6211\u4eec\u8003\u8651\u5982\u4f55\u7528\u540e\u7f00\u6570\u7ec4\u6c42\u4e00\u4e2a\u4e32\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u3002\n\n    \n\u4e00\u4e2a\u4e32\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u5e94\u4e3a\n\n    \n$ \\sum_{i=1}^{n} n-sa[i]-height[i]+1 $\n\n    \n\u89c2\u5bdf\u9898\u76ee\u4e2d\u7684\u6761\u4ef6\uff0c\u53ef\u4ee5\u53d1\u73b0\u82e5\u56fa\u5b9a\u4e00\u4e2a\u8d77\u59cb\u70b9\uff0c\u90a3\u4e48\u4ece\u5b83\u7684\u5f00\u59cb\u7684\u540e\u7f00\u7684\u6392\u540d\u65f6\u5355\u8c03\u4e0b\u964d\u7684\uff0c\u800c\u56e0\u4e3a\u6743\u503c\u4e3a\u975e\u8d1f\u7684\uff0c\u6240\u4ee5\u5b50\u4e32\u7684\u6743\u503c\u548c\u662f\u5355\u8c03\u4e0d\u964d\u7684\uff0c\u5927\u6982\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n    \n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u8fd9\u4e2a\u4ea4\u70b9\uff0c\u5982\u679c\u6709\u4ea4\u70b9\uff0c\u90a3\u4e48 $ ans++ $ \uff0c\u5e76\u8bb0\u5f55\u5f53\u524d\u65b9\u6848\uff0c\u5426\u5219\u679a\u4e3e\u4e0b\u4e00\u4e2a\u7aef\u70b9\u3002\n\n    \n\u5e76\u4e14\u5982\u679c\u6309\u7167Rank\u7684\u987a\u5e8f\u6765\u679a\u4e3e\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u540e\u7f00\u4e4b\u524d\u7684\u5b50\u4e32\u4e2a\u6570\u662f\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u8fdb\u884c\u4f18\u5316\u7684\u3002\n\n    \n\u7ecf\u8fc7 ~~\u4e25\u8c28\u7684~~ \u63a8\u5bfc\uff0c\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u5b50\u4e32 $ (lpos,r) $ \u7684\u6392\u540d\u4e3a $ sum[n]-(sum[Rank[lpos]-1]+pos-lpos-height[Rank[lpos]]) $ \u3002\n\n    \n**\u6ce8\u610f\uff1a\u8fd9\u4e2a\u5f0f\u5b50\u4ec5\u9002\u7528\u4e8e\u8be5\u5b50\u4e32\u4e0d\u662f\u4e0e\u5f53\u524d\u4e32\u7684\u524d\u4e00\u4e2a\u6392\u540d\u7684\u4e32\u7684LCP\u7684\u5b50\u4e32\u65f6\u6210\u7acb\u3002**\n\n    \n\u5373\u8be5\u5f0f\u5f53\u4e14\u4ec5\u5f53 $ pos-lpos+1>height[Rank[lpos]] $ \u65f6\u6210\u7acb\u3002\n\n    \n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5904\u7406 $ LCP $ \u90e8\u5206\u3002\n\n    \n\u7b2c\u4e00\u4e2a\u601d\u8def\uff1a\n\n    \n\u5f00\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\uff0c\u8bb0\u4e00\u4e0b\u524d\u9762 $ LCP $ \u90e8\u5206\u7684 $ Rank $ \u7136\u540e\u5728\u679a\u4e3e\u65f6\u6bcf\u6b21\u770b\u4e00\u4e0b\u5f53\u524d\u4e34\u65f6\u6570\u7ec4\u7684\u5927\u5c0f\u7684 $ Height[i+1] $ \u7684\u5927\u5c0f\uff0c\u6765\u5224\u65ad\u662f\u5426\u9700\u8981\u66f4\u65b0\u4e34\u65f6\u6570\u7ec4\u3002\u5982\u679c $ size<height[i+1] $ \u90a3\u4e48\u66b4\u529b\u66f4\u65b0\u4e34\u65f6\u6570\u7ec4\uff0c\u76f4\u81f3 $ size=height[i+1] $\u3002\n\n    \n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u79cd\u66b4\u529b\u5904\u7406\u7684\u590d\u6742\u5ea6\u6709\u53ef\u80fd\u88ab\u5361\u6210 $ O(n^2) $\u3002\n\n    \n**\u8fd9\u4e2a\u601d\u8def\u7684\u5f97\u5206\u4e3a76\u5206**\n\n    \n\u7b2c\u4e8c\u4e2a\u601d\u8def\uff1a\n\n    \n\u4f9d\u7167\u7b2c\u4e00\u7684\u601d\u8def\uff0c\u53ef\u4ee5\u53d1\u73b0\u4f60\u8981\u66f4\u65b0\u7684\u8fd9\u4e00\u6bb5\u5176\u5b9e\u662f\u4e00\u6bb5\u8fde\u7eed\u4e0b\u964d\u7684\u5e8f\u5217\uff0c\u4e14\u516c\u5dee\u662f $ 1 $\u3002\n\n    \n\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u8be5\u7ebf\u6bb5\u6811\u652f\u6301\u533a\u95f4\u8d4b\u503c\u548c\u533a\u95f4\u52a0\u7b49\u5dee\u6570\u5217\u3002\n\n    \n\u4e5f\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u8fd9\u4e2a\u4f4d\u7f6e\u6240\u5728 **\u589e\u52a0** \u7684 $ LCP $ \u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u53ea\u5728\u4e34\u65f6\u6570\u7ec4\u4e2d\u8bb0\u4e00\u4e0b\u6bcf\u6b21\u589e\u52a0\u7684\u7b2c\u4e00\u4f4d\u7f6e\u7684 $ Rank $ \uff0c\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7\u4f4d\u7f6e\u8ba1\u7b97\u51fa\u5f53\u524d\u4f4d\u7f6e\u7684 $ Rank $ \u3002\n\n    \n\u73b0\u5728\u5df2\u7ecf\u5904\u7406\u5b8c\u4e86 $ LCP $ \u90e8\u5206\u7684 $ Rank $ \u4e86\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5176\u5b9e $ LCP $ \u90e8\u5206\u7684 $ Rank $ \u4e5f\u662f\u5355\u8c03\u4e0b\u964d\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5728\u5904\u7406\u975e $ LCP $ \u90e8\u5206\u65f6\u4e00\u8d77\u4e8c\u5206\u3002\n\n    \n\u603b\u590d\u6742\u5ea6 : $ O(nlogn) $\n\n    \n\u81f3\u6b64\uff0c\u8be5\u95ee\u9898\u5df2\u88ab\u5b8c\u5168\u89e3\u51b3\u3002\n\n    \nSTD:\n    \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<map>\n#include<set>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<ctime>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define get_val(l,r) sumv[r]-sumv[l-1]\nconst int MAXN=100010;\nstruct O{\n    int l,r;\n    bool operator < (O a)\n    {\n        return l<a.l;\n    }\n}ot[MAXN];\nint t[MAXN<<2];\ninline void pushup(int x)\n{\n    t[x]=t[x<<1]*(t[x<<1]==t[x<<1|1]);\n}\ninline void pushdown(int x,int l,int r)\n{\n    if(!t[x])\n        return;\n    t[x<<1]=t[x<<1|1]=t[x];\n}\ninline void change(int x,int l,int r,int ql,int qr,int val)\n{\n    if(ql>r||qr<l)\n        return;\n    if(ql<=l&&r<=qr){\n        t[x]=val+1;\n        return;\n    }\n    pushdown(x,l,r);\n    int mid=(l+r)>>1;\n    if(ql<=mid)\n        change(x<<1,l,mid,ql,qr,val);\n    if(qr>=mid+1)\n        change(x<<1|1,mid+1,r,ql,qr,val);\n    pushup(x);\n}\ninline int query(int x,int l,int r,int pos)\n{\n    if(t[x])\n        return t[x]-1;\n    pushdown(x,l,r);\n    int mid=(l+r)>>1;\n    if(pos<=mid)\n        return query(x<<1,l,mid,pos);\n    else\n        return query(x<<1|1,mid+1,r,pos);\n}\nchar str[MAXN];\nint Rank[MAXN],sa[MAXN];\nint sum[MAXN],tp[MAXN];\nint height[MAXN],h[MAXN];\nint val[MAXN],sumv[MAXN];\nint tmprank[MAXN],tot;\nint n;\nll ans=0;\nvoid get_sa(int n)\n{\n    int m=127;\n    for(int i=1;i<=n;i++) Rank[i]=str[i],tp[i]=i;\n    for(int i=0;i<=m;i++) sum[i]=0;\n    for(int i=1;i<=n;i++) sum[Rank[tp[i]]]++;\n    for(int i=1;i<=m;i++) sum[i]+=sum[i-1];\n    for(int i=n;i>=1;i--) sa[sum[Rank[tp[i]]]--]=tp[i];\n    int p=1;\n    for(int len=1;p<n;len<<=1,m=p)\n    {\n        p=0;\n        for(int i=n-len+1;i<=n;i++) tp[++p]=i;\n        for(int i=1;i<=n;i++) if(sa[i]>len) tp[++p]=sa[i]-len;\n        for(int i=0;i<=m;i++) sum[i]=0;\n        for(int i=1;i<=n;i++) sum[Rank[tp[i]]]++;\n        for(int i=1;i<=m;i++) sum[i]+=sum[i-1];\n        for(int i=n;i>=1;i--) sa[sum[Rank[tp[i]]]--]=tp[i];\n        swap(Rank,tp);Rank[sa[1]]=1;p=1;\n        for(int i=2;i<=n;i++)\n            Rank[sa[i]]=(tp[sa[i]]==tp[sa[i-1]]&&tp[sa[i]+len]==tp[sa[i-1]+len])?p:++p;\n    }\n    int lst=0,j;\n    for(int i=1;i<=n;h[i]=lst,height[Rank[i++]]=lst)\n        for(lst=lst?lst-1:lst,j=sa[Rank[i]-1];str[j+lst]==str[i+lst];++lst);\n}\nint get_rank(int lpos,int pos)\n{\n    if(pos-lpos+1>height[Rank[lpos]]) return sum[n]-(sum[Rank[lpos]-1]+pos-lpos-height[Rank[lpos]]);\n    else\n    {\n        int pre=query(1,1,n,pos-lpos+1);\n        return tmprank[pre]+pre-(pos-lpos+1);\n    }\n}\nint tttt;\nint main()\n{\n    scanf(\"%s\",str+1);\n    n=strlen(str+1);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&val[i]),sumv[i]=sumv[i-1]+val[i];\n    get_sa(n);\n    for(int i=1;i<=n;i++)\n        sum[i]=n-sa[i]-height[i]+1+sum[i-1];\n    for(int i=1;i<=n;i++) //\u679a\u4e3eRank\n    {\n        int L=sa[i],R=n,lpos=sa[i];\n        while(L<R)\n        {\n            int mid=(L+R)>>1;\n            if(get_val(lpos,mid)<get_rank(lpos,mid))\n                L=mid+1;\n            else R=mid;\n        }\n\n        if(get_val(lpos,L)==get_rank(lpos,L))\n            ot[++ans]={lpos,L};\n        if(i!=n&&height[i]<height[i+1])\n            tmprank[height[i]+1]=get_rank(sa[i],sa[i]+height[i]),\n            change(1,1,n,height[i]+1,height[i+1],height[i]+1);\n    }\n    sort(ot+1,ot+1+ans);\n    printf(\"%lld\\n\",ans);\n    for(int i=1;i<=ans;i++)\n        printf(\"%d %d\\n\",ot[i].l,ot[i].r);\n}\n```",
        "postTime": 1516693532,
        "uid": 31565,
        "name": "Zhang_RQ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4143 \u3010\u91c7\u96c6\u77ff\u77f3\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u5411\u53f3\u79fb\u52a8\u65f6\uff0c\u5176\u5b50\u4e32\u6743\u503c\u548c\u4e0d\u65ad\u589e\u5927\uff0c\u5b57\u5178\u5e8f\u964d\u5e8f\u6392\u540d\u4e0d\u65ad\u51cf\u5c0f\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u5de6\u7aef\u70b9\uff0c\u6700\u591a\u5b58\u5728\u4e00\u4e2a\u53f3\u7aef\u70b9\u4f7f\u5176\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u7136\u540e\u4e8c\u5206\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\uff0c\u6743\u503c\u548c\u901a\u8fc7\u524d\u7f00\u548c\u6765\u67e5\u8be2\uff0c\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5feb\u901f\u67e5\u8be2\u4e00\u4e2a\u5b50\u4e32\u7684\u6392\u540d\u3002\n\n\u8003\u8651\u7528\u540e\u7f00\u6570\u7ec4\u6765\u89e3\u51b3\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u4e32$[l,r]$\uff0c\u5bf9\u4e8e\u5728\u4f4d\u7f6e$l$\u5bf9\u5e94\u7684\u540e\u7f00\u6392\u540d\u4e4b\u524d\u7684\u540e\u7f00\u4e2d\u7684\u5b50\u4e32\u662f\u80fd\u5bf9\u8be5\u5b50\u4e32\u7684\u6392\u540d\u4ea7\u751f\u8d21\u732e\u7684\u3002\n\n\u82e5\u8be5\u5b50\u4e32\u7684\u957f\u5ea6\u6bd4$l$\u5bf9\u5e94\u7684\u540e\u7f00\u548c\u524d\u4e00\u4e2a\u540e\u7f00\u7684$LCP$\u5927\uff0c\u5373$len>ht_{rk_l}$\uff0c\u4e5f\u5c31\u662f\u8be5\u5b50\u4e32\u6ca1\u6709\u88ab$LCP$\u6240\u5305\u62ec\uff0c\u5219\u5176\u6392\u540d\u4e3a$sum_l-(n-l+1-len)$\uff0c\u5176\u4e2d$sum_l$\u8868\u793a$l$\u6240\u5bf9\u5e94\u7684\u540e\u7f00\u4e4b\u524d\u6240\u6709\u7684\u540e\u7f00\u4e2d\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\uff0c\u7136\u540e\u518d\u51cf\u53bb\u53f3\u7aef\u70b9$r$\u53f3\u8fb9\u591a\u7b97\u7684\u90e8\u5206\uff0c\u5373\u4e3a\u8be5\u5b50\u4e32\u7684\u6392\u540d\u3002\u7136\u540e\u6c42\u964d\u5e8f\u6392\u540d\u65f6\uff0c\u7528\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u4e2a\u6570\u51cf\u53bb\u6b63\u5e8f\u6392\u540d\u5373\u53ef\u3002\n\n\u82e5\u8be5\u5b50\u4e32\u88ab$LCP$\u6240\u5305\u62ec\uff0c\u90a3\u4e48\u76f4\u63a5\u50cf\u4e0a\u9762\u90a3\u6837\u8ba1\u7b97\u662f\u4e0d\u5bf9\u7684\uff0c\u5219\u9700\u5411\u524d\u4e8c\u5206\u5230\u7b2c\u4e00\u4e2a\u548c$l$\u6240\u5bf9\u5e94\u7684\u540e\u7f00\u7684$LCP$\u6070\u597d\u7b49\u4e8e$len$\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u548c\u4e0a\u9762\u4e00\u6837\u7528\u8be5\u4f4d\u7f6e\u8ba1\u7b97\u6392\u540d\u3002\n\n\u6700\u7ec8\u7684\u590d\u6742\u5ea6\u4e3a$O(n\\ log^2\\ n)$\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 400010\n#define mk make_pair\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nll n,m,ans,tot;\nint v[maxn],b[maxn],rk[maxn],sa[maxn],tp[maxn],ht[maxn];\nint lg[maxn],f[maxn][25];\nll sum[maxn];\nchar s[maxn];\nvector<pair<int,int> > ve;\nvoid rsort()\n{\n    for(int i=0;i<=m;++i) b[i]=0;\n    for(int i=1;i<=n;++i) b[rk[i]]++;\n    for(int i=1;i<=m;++i) b[i]+=b[i-1];\n    for(int i=n;i;--i) sa[b[rk[tp[i]]]--]=tp[i];\n}\nvoid SA()\n{\n    for(int i=1;i<=n;++i) rk[i]=s[i],tp[i]=i;\n    rsort();\n    for(int k=1;k<=n;k<<=1)\n    {\n        int num=0;\n        for(int i=n-k+1;i<=n;++i) tp[++num]=i;\n        for(int i=1;i<=n;++i) \n            if(sa[i]>k)\n                tp[++num]=sa[i]-k;\n        rsort(),memcpy(tp,rk,sizeof(rk)),rk[sa[1]]=num=1;\n        for(int i=2;i<=n;++i)\n            rk[sa[i]]=(tp[sa[i]]==tp[sa[i-1]]&&tp[sa[i]+k]==tp[sa[i-1]+k])?num:++num;\n        if(num==n) break;\n        m=num;\n    }\n    int k=0;\n    for(int i=1;i<=n;++i) rk[sa[i]]=i;\n    for(int i=1;i<=n;++i)\n    {\n        if(rk[i]==1) continue;\n        if(k) k--;\n        int j=sa[rk[i]-1];\n        while(s[i+k]==s[j+k]) k++;\n        ht[rk[i]]=k;\n    }\n    tot=n*(n+1)/2;\n    for(int i=1;i<=n;++i) tot-=ht[i];\n    sum[sa[1]]=n-sa[1]+1;\n    for(int i=2;i<=n;++i)\n        sum[sa[i]]=sum[sa[i-1]]+n-sa[i]+1-ht[i];\n}\nvoid init()\n{\n    lg[0]=-1;\n    for(int i=1;i<=n;++i) lg[i]=lg[i>>1]+1;\n    for(int i=1;i<=n;++i) f[i][0]=ht[i];\n    for(int j=1;j<=20;++j)\n        for(int i=1;i+(1<<j)-1<=n;++i)\n            f[i][j]=min(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n}\nint lcp(int l,int r)\n{\n    if(l>r) swap(l,r);\n    l++;\n    int len=lg[r-l+1];\n    return min(f[l][len],f[r-(1<<len)+1][len]);\n}\nll get(int L,int R)\n{\n    int len=R-L+1;\n    if(len>ht[rk[L]]) return tot-(sum[L]-(n-L+1-len))+1;\n    else\n    {\n        int l=1,r=rk[L]-1,p;\n        while(l<=r)\n        {\n            int mid=(l+r)>>1;\n            if(lcp(rk[L],mid)>=len) p=mid,r=mid-1;\n            else l=mid+1;\n        }\n        return tot-(sum[sa[p]]-(n-sa[p]+1-len))+1;\n    }\n    \n}\nvoid work()\n{\n    for(int i=1;i<=n;++i)\n    {\n        int l=i,r=n;\n        while(l<=r)\n        {\n            int mid=(l+r)>>1;\n            ll rank=get(i,mid),val=v[mid]-v[i-1];\n            if(rank==val)\n            {\n                ans++,ve.push_back(mk(i,mid));\n                break;\n            }\n            else if(rank>val) l=mid+1;\n            else r=mid-1;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%s\",s+1),n=strlen(s+1),m=150;\n    for(int i=1;i<=n;++i) read(v[i]),v[i]+=v[i-1];\n    SA(),init(),work();\n    printf(\"%d\\n\",ans),sort(ve.begin(),ve.end());\n    for(int i=0;i<ve.size();++i)\n        printf(\"%d %d\\n\",ve[i].first,ve[i].second);\n    return 0;\n}\n```",
        "postTime": 1591113484,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4143 \u3010\u91c7\u96c6\u77ff\u77f3\u3011"
    },
    {
        "content": "> [P4143 \u91c7\u96c6\u77ff\u77f3](https://www.luogu.com.cn/problem/P4143)\n\n\u5b57\u5178\u5e8f\u6392\u540d\u4ece\u5927\u5230\u5c0f\u4f7f\u5f97\u5bf9\u4e8e\u56fa\u5b9a\u7684 $l$\uff0c\u968f\u7740 $r$ \u589e\u5927\uff0c$[l, r]$ \u7684\u6392\u540d **\u4e25\u683c\u9012\u51cf**\uff0c\u91cd\u8981\u5ea6\u4e4b\u548c **\u975e\u4e25\u683c\u9012\u589e**\u3002\u56e0\u6b64\u8003\u8651\u4e8c\u5206\u51fa $[l, r]$ \u7684\u6392\u540d\u4e0e\u91cd\u8981\u5ea6\u4e4b\u548c\u7684\u4ea4\u70b9\uff0c\u518d\u68c0\u67e5\u662f\u5426\u7b26\u5408\u8981\u6c42\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u67d0\u4e2a\u5b50\u4e32 $[l, r]$ \u5728\u6240\u6709\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u4e2d\u7684\u6392\u540d\u3002\u5bf9\u4e8e\u5b50\u4e32 $[l', r']$\uff0c\u5176\u5b57\u5178\u5e8f **\u975e\u4e25\u683c\u5927\u4e8e** $[l, r]$ \u5f53\u4e14\u4ec5\u5f53\u540e\u8005\u662f\u524d\u8005\u7684\u524d\u7f00\uff0c\u6216\u8005\u53bb\u6389 LCP \u540e\u524d\u8005\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5927\u4e8e\u540e\u8005\u3002\n\n\u6ee1\u8db3\u7b2c\u4e00\u79cd\u6761\u4ef6\u7684\u5b50\u4e32\u5bf9\u5e94\u540e\u7f00 $[l', n]$ \u7684\u6392\u540d\u662f\u5305\u542b $[l, n]$ \u7684\u4e00\u6bb5\u6392\u540d\u533a\u95f4 $[L, R]\\ (L \\leq \\mathrm{rank}(l) \\leq R)$\uff0c\u6ee1\u8db3\u7b2c\u4e8c\u79cd\u6761\u4ef6\u7684\u5b50\u4e32\u5bf9\u5e94\u540e\u7f00\u7684\u6392\u540d\u662f\u6392\u540d\u540e\u7f00 $[R + 1, n]$\u3002\n\n\u56e0\u6b64\uff0c\u6c42\u51fa\u6392\u540d\u4e3a $[L, n]$ \u7684\u540e\u7f00\u7684\u672c\u8d28\u4e0d\u540c\u524d\u7f00\u6570\u91cf\uff0c\u51cf\u53bb $r - l$\uff08$[l, r]$ \u771f\u524d\u7f00\u88ab\u591a\u7b97\u4e86\uff09\u5373\u4e3a\u6240\u6c42\u3002\u524d\u8005\u6839\u636e\u540e\u7f00\u6570\u7ec4\u7ecf\u5178\u7ed3\u8bba\uff0c\u4e3a $\\left(\\sum\\limits_{i = L} ^ n n - sa_i +1 \\right) - \\left(\\sum\\limits_{i = L + 1} ^ n ht_i\\right)$\u3002\n\n\u6c42\u51fa $L$ \u53ea\u9700\u4e8c\u5206\u627e\u5230\u4e0d\u5927\u4e8e $rk_l$ \u7684\u6700\u5c0f\u6392\u540d\uff0c\u4f7f\u5f97\u6392\u540d\u4e3a $L\\sim rk_l$ \u4e4b\u95f4\u6240\u6709\u540e\u7f00\u7684 LCP \u4e0d\u5c0f\u4e8e $r - l + 1$\u3002\u5bf9 $ht$ \u9884\u5904\u7406 ST \u8868\u6c42 RMQ + \u4e8c\u5206\u5373\u53ef\u3002\n\n\u7efc\u4e0a\uff0c\u603b\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log ^ 2 n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nbool Mbe;\nconstexpr int K = 17;\nconstexpr int N = 1e5 + 5;\nint sa[N], rk[N], ork[N], buc[N], id[N];\nint lg[N], ht[N], mi[K][N];\nbool cmp(int a, int b, int w) {return ork[a] == ork[b] && ork[a + w] == ork[b + w];}\nvoid build(int n, char *s) {\n  int m = 1 << 7, p = 0;\n  for(int i = 1; i <= n; i++) buc[rk[i] = s[i]]++;\n  for(int i = 1; i <= m; i++) buc[i] += buc[i - 1];\n  for(int i = n; i; i--) sa[buc[rk[i]]--] = i;\n  for(int w = 1; ; w <<= 1, m = p, p = 0) {\n    for(int i = n - w + 1; i <= n; i++) id[++p] = i;\n    for(int i = 1; i <= n; i++) if(sa[i] > w) id[++p] = sa[i] - w;\n    memset(buc, 0, sizeof(buc));\n    memcpy(ork, rk, sizeof(rk));\n    p = 0;\n    for(int i = 1; i <= n; i++) buc[rk[i]]++;\n    for(int i = 1; i <= m; i++) buc[i] += buc[i - 1];\n    for(int i = n; i; i--) sa[buc[rk[id[i]]]--] = id[i];\n    for(int i = 1; i <= n; i++) rk[sa[i]] = cmp(sa[i - 1], sa[i], w) ? p : ++p;\n    if(p == n) break;\n  }\n  for(int i = 1, k = 0; i <= n; i++) {\n    if(k) k--;\n    while(s[i + k] == s[sa[rk[i] - 1] + k]) k++;\n    ht[rk[i]] = mi[0][rk[i]] = k;\n  }\n  for(int i = 2; i <= n; i++) lg[i] = lg[i >> 1] + 1;\n  for(int i = 1; i <= lg[n]; i++)\n    for(int j = 1; j + (1 << i) - 1 <= n; j++)\n      mi[i][j] = min(mi[i - 1][j], mi[i - 1][j + (1 << i - 1)]);\n}\nint lcp(int i, int j) { // i, j are ranks\n  int d = lg[j - i++];\n  return min(mi[d][i], mi[d][j - (1 << d) + 1]);\n}\nint n, v[N];\nchar s[N];\nlong long sh[N], sp[N];\nlong long calc(int p, int L) {\n  int l = 1, r = p = rk[p];\n  while(l < r) {\n    int m = l + r >> 1;\n    if(lcp(m, p) >= L) r = m;\n    else l = m + 1;\n  }\n  return sp[l] - sh[l + 1] - L + 1;\n}\nbool Med;\nint main() {\n  fprintf(stderr, \"%.4lf\\n\", (&Mbe - &Med) / 1048576.0);\n#ifdef ALEX_WEI\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"1.out\", \"w\", stdout);\n#endif\n  cin >> s + 1, n = strlen(s + 1);\n  build(n, s);\n  for(int i = n; i; i--) sh[i] = sh[i + 1] + ht[i], sp[i] = sp[i + 1] + n - sa[i] + 1;\n  for(int i = 1; i <= n; i++) cin >> v[i], v[i] += v[i - 1];\n  vector<pair<int, int>> ans;\n  for(int i = 1; i <= n; i++) {\n    int l = 1, r = n - i + 1;\n    while(l < r) {\n      int m = l + r + 2 >> 1;\n      if(calc(i, m) >= v[i + m - 1] - v[i - 1]) l = m;\n      else r = m - 1;\n    }\n    if(calc(i, l) == v[i + l - 1] - v[i - 1]) ans.push_back({i, i + l - 1});\n  }\n  cout << ans.size() << \"\\n\";\n  for(auto it : ans) cout << it.first << \" \" << it.second << \"\\n\";\n  return cerr << \"Time: \" << clock() << \"\\n\", 0;\n}\n/*\n2022/7/6\nstart coding at 7:41\nfinish debugging at 8:07\n*/\n\n```",
        "postTime": 1645284761,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P4143 \u91c7\u96c6\u77ff\u77f3"
    },
    {
        "content": "### \u6765\u7bc7\u975e\u7ebf\u6bb5\u6811\u7684\u5355 $\\log$ \u505a\u6cd5\u3002\n\n### \u53ea\u9700\u540e\u7f00\u6570\u7ec4\u5c31\u53ef\u7b80\u5355\u5b9e\u73b0\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u540e\u7f00\u5355\u72ec\u8003\u8651\uff0c\u8bbe\u8fd9\u4e2a\u540e\u7f00\u7684\u5f00\u59cb\u4f4d\u7f6e\u4e3a $i$\u3002\n\n\u7528\u540e\u7f00\u6570\u7ec4\u8868\u793a\u6240\u6709\u5b50\u4e32\u5c31\u8003\u8651\u4e00\u4e2a\u540e\u7f00\u7684\u6240\u6709\u524d\u7f00\uff0c\u5047\u5982\u5f53\u524d\u7684\u524d\u7f00\u7ec8\u6b62\u4f4d\u7f6e\u4e3a $i$\u3002\n\n\u90a3\u4e48\u73b0\u5728\u7684\u5b50\u4e32\u662f $s[i \\sim j]$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u518d\u5728\u540e\u9762\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u5b57\u5178\u5e8f\u6392\u540d\u5355\u8c03\u4e0b\u964d\uff0c\u6743\u503c\u5355\u8c03\u9012\u589e\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u4ea4\u70b9\uff0c\u8fd9\u4e2a\u4ea4\u70b9\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e8c\u5206\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u6743\u503c\u4e0d\u96be\u7528\u524d\u7f00\u548c\u6c42\u51fa\uff0c\u4f46\u662f\u5b57\u5178\u5e8f\u4e0d\u597d\u641e\uff0c\u7136\u540e\u5957\u8def\u7684\u5c31\u662f\u7528 $ht$ \u6570\u7ec4\u5efa\u51fa\u7b1b\u5361\u5c14\u6811\uff0c\u6216\u8005\u53eb\u540e\u7f00\u6811\uff0c\u7136\u540e\u6c42\u51fa\u8fd9\u68f5\u540e\u7f00\u6811\u7684 $\\text{dfs}$ \u5e8f\uff0c\u5c31\u6c42\u51fa\u4e86\u5b57\u5178\u5e8f\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5728\u5e8f\u5217\u4e0a\u4e8c\u5206\u5c31\u5bf9\u5e94\u7740\u5728\u540e\u7f00\u6811\u5bf9\u5e94\u7684\u7ec8\u6b62\u8282\u70b9\u4e0a\u500d\u589e\u4e8c\u5206\uff0c\u8fd9\u6837\u5b57\u5178\u5e8f\u4e5f\u5c31\u6c42\u51fa\u6765\u4e86\u3002\n\n\u8981\u6ce8\u610f\u597d\u5b9e\u73b0\u7ec6\u8282\uff0c\u56e0\u4e3a\u540e\u7f00\u6811\u662f\u4e00\u68f5\u538b\u7f29\u7684 $\\text{trie}$ \u6811\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6c42\u51fa\u8282\u70b9\u540e\u8981\u7ee7\u7eed\u5411\u4e0a\u4e8c\u5206\u3002\n\n\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\uff0c\u5199\u7684\u8fd8\u662f\u86ee\u7b80\u6d01\u7684\u3002\n\n[code](https://www.luogu.com.cn/paste/hl4jh0jm)\n",
        "postTime": 1681304651,
        "uid": 363980,
        "name": "yszs",
        "ccfLevel": 6,
        "title": "P4143 \u91c7\u96c6\u77ff\u77f3"
    },
    {
        "content": "## \u5206\u6790\n[\u524d\u7f6e\u77e5\u8bc6\uff1a\u540e\u7f00\u6570\u7ec4](https://www.cnblogs.com/liuchanglc/p/14190528.html)\n\n\u8981\u6c42\u51fa\u6240\u6709\u6392\u540d\u7b49\u4e8e\u91cd\u8981\u5ea6\u7684\u5b50\u4e32\u5e76\u8f93\u51fa\u65b9\u6848\n\n\u9996\u5148\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u5b50\u4e32\u4e0d\u4f1a\u8d85\u8fc7 $n$ \u4e2a\n\n\u56e0\u4e3a\u5047\u5982\u6211\u4eec\u56fa\u5b9a\u4e86\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u968f\u7740\u53f3\u7aef\u70b9\u7684\u589e\u5927\uff0c\u91cd\u8981\u5ea6\u4e0d\u4f1a\u53d8\u5c0f\uff0c\u4f46\u662f\u6392\u540d\u4f1a\u53d8\u5c0f\n\n\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5b9a\u7684\u5de6\u7aef\u70b9\uff0c\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u53f3\u7aef\u70b9\u6ee1\u8db3\u6761\u4ef6\n\n\u53c8\u56e0\u4e3a\u91cd\u8981\u5ea6\u548c\u6392\u540d\u90fd\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u56fa\u5b9a\u5de6\u7aef\u70b9\uff0c\u4e8c\u5206\u5408\u6cd5\u7684\u53f3\u7aef\u70b9\u5c31\u53ef\u4ee5\u4e86\n\n\u8003\u8651\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u4e00\u4e2a\u5b50\u4e32\u7684\u91cd\u8981\u5ea6\u548c\u6392\u540d\n\n\u91cd\u8981\u5ea6\u53ef\u4ee5\u7528\u524d\u7f00\u548c $O(1)$ \u67e5\u8be2\n\n\u6392\u540d\u53ef\u4ee5\u7528\u540e\u7f00\u6570\u7ec4\u6c42\u51fa\n\n\u5728\u8ba1\u7b97\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u65f6\uff0c\u6211\u4eec\u4f1a\u7528\u5230\u4e00\u4e2a\u5f0f\u5b50\n\n $\\sum_{i=1}^nn-sa[i]+1-height[i]$\n\n \u4e00\u4e2a\u5f88\u6709\u7528\u7684\u6027\u8d28\u5c31\u662f\u8fd9\u6837\u6c42\u51fa\u7684\u672c\u8d28\u4e0d\u540c\u5b57\u4e32\u662f\u6309\u987a\u5e8f\u7684\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u4e32\uff0c\u53ea\u9700\u8981\u7b97\u51fa\u5b83\u7684\u524d\u9762\u6709\u591a\u5c11\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u5373\u53ef\n\n\u5148\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u5f0f\u5b50\u7684\u524d\u7f00\u548c\uff0c\u7136\u540e\u5206\u60c5\u51b5\u8ba8\u8bba\n\n\u8bbe $fir[i]$ \u4e3a $i$ \u53f7\u540e\u7f00\u7684\u6392\u540d\n\n\u5982\u679c $len \\geq height[fir[l]]$\uff0c\u90a3\u4e48\u6392\u540d\u4e3a $sum_{fir[l]}-(n-r)$\n\n\u5426\u5219\u5411\u524d\u4e8c\u5206\u627e\u5230\u4e00\u4e2a\u4f4d\u7f6e $pos$\uff0c\u4f7f\u5f97\u5b83\u6070\u597d\u6ee1\u8db3 $len \\geq height[pos]$\uff0c\u90a3\u4e48\u6392\u540d\u4e3a $(sum_{pos}-(n-sa[pos]-len+1))$\n\n\u540e\u9762\u51cf\u53bb\u7684\u90a3\u4e00\u90e8\u5206\u662f\u5de6\u7aef\u70b9\u76f8\u540c\u4f46\u662f\u957f\u5ea6\u6bd4\u5f53\u524d\u5b50\u4e32\u957f\u7684\n\n\u56e0\u4e3a\u6392\u540d\u662f\u6309\u7167\u5b57\u5178\u5e8f\u4ece\u5927\u5230\u5c0f\u6765\u7684\uff0c\u6240\u4ee5\u8fd8\u8981\u62ff\u603b\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u51cf\u53bb\u6c42\u51fa\u7684\u7ed3\u679c\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlog^2n)$\n\n## \u4ee3\u7801\n\n```c++\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#define rg register\ninline int read(){\n\trg int x=0,fh=1;\n\trg char ch=getchar();\n\twhile(ch<'0' || ch>'9'){\n\t\tif(ch=='-') fh=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*fh;\n}\t\nconst int maxn=1e5+5;\nint sa[maxn],fir[maxn],sec[maxn],tax[maxn],n,heig[maxn],lg[maxn],mmin[maxn][20],m;\nint a[maxn],sum1[maxn],sta1[maxn],sta2[maxn],tp;\nchar s[maxn];\nlong long tot,sum2[maxn];\nvoid Qsort(){\n\tfor(rg int i=0;i<=m;i++) tax[i]=0;\n\tfor(rg int i=1;i<=n;i++) tax[fir[i]]++;\n\tfor(rg int i=1;i<=m;i++) tax[i]+=tax[i-1];\n\tfor(rg int i=n;i>=1;i--) sa[tax[fir[sec[i]]]--]=sec[i];\n}\nvoid getsa(){\n\tm=1e5;\n\tfor(rg int i=1;i<=n;i++) fir[i]=s[i],sec[i]=i;\n\tQsort();\n\tfor(rg int len=1,p=0;p<n;len<<=1,m=p){\n\t\tp=0;\n\t\tfor(rg int i=n-len+1;i<=n;i++) sec[++p]=i;\n\t\tfor(rg int i=1;i<=n;i++) if(sa[i]>len) sec[++p]=sa[i]-len;\n\t\tQsort();\n\t\tmemcpy(sec,fir,sizeof(sec));\n\t\tfir[sa[1]]=p=1;\n\t\tfor(rg int i=2;i<=n;i++) fir[sa[i]]=(sec[sa[i]]==sec[sa[i-1]] && sec[sa[i]+len]==sec[sa[i-1]+len])?p:++p;\n\t}\n}\nvoid getheight(){\n\trg int j,k=0;\n\tfor(rg int i=1;i<=n;i++){\n\t\tif(k) k--;\n\t\tj=sa[fir[i]-1];\n\t\twhile(s[i+k]==s[j+k]) k++;\n\t\theig[fir[i]]=k;\n\t}\n\ttot=1LL*n*(n+1)/2LL;\n\tfor(rg int i=2;i<=n;i++) tot-=heig[i];\n\tfor(rg int i=1;i<=n;i++) sum2[i]=sum2[i-1]+n-sa[i]+1-heig[i];\n}\nvoid pre(){\n\tfor(rg int i=1;i<=n;i++) mmin[i][0]=heig[i];\n\tfor(rg int i=2;i<=n;i++) lg[i]=lg[i>>1]+1;\n\tfor(rg int j=1;j<=18;j++){\n\t\tfor(rg int i=1;i+(1<<j)-1<=n;i++){\n\t\t\tmmin[i][j]=std::min(mmin[i][j-1],mmin[i+(1<<(j-1))][j-1]);\n\t\t}\n\t}\n}\nint getans(rg int l,rg int r){\n\tl++;\n\trg int k=lg[r-l+1];\n\treturn std::min(mmin[l][k],mmin[r-(1<<k)+1][k]);\n}\nint getval(rg int l,rg int r){\n\treturn sum1[r]-sum1[l-1];\n}\nlong long getrk(rg int l,rg int r){\n\trg int len=r-l+1;\n\tif(heig[fir[l]]<=len) return tot-(sum2[fir[l]]-(n-r))+1;\n\trg int nl=1,nr=fir[l]-1,mids;\n\twhile(nl<=nr){\n\t\tmids=(nl+nr)>>1;\n\t\tif(getans(mids,fir[l])<=len) nl=mids+1;\n\t\telse nr=mids-1;\n\t}\n\treturn tot-(sum2[nr]-(n-sa[nr]-len+1))+1;\n}\nvoid solve(rg int id){\n\trg int l=id,r=n,mids;\n\twhile(l<=r){\n\t\tmids=(l+r)>>1;\n\t\tif(getrk(id,mids)==getval(id,mids)){\n\t\t\tsta1[++tp]=id,sta2[tp]=mids;\n\t\t\treturn;\n\t\t} else if(getrk(id,mids)>getval(id,mids)){\n\t\t\tl=mids+1;\n\t\t} else {\n\t\t\tr=mids-1;\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tfor(rg int i=1;i<=n;i++) a[i]=read();\n\tgetsa(),getheight(),pre();\n\tfor(rg int i=1;i<=n;i++) sum1[i]=sum1[i-1]+a[i];\n\tfor(rg int i=1;i<=n;i++) solve(i);\n\tprintf(\"%d\\n\",tp);\n\tfor(rg int i=1;i<=tp;i++) printf(\"%d %d\\n\",sta1[i],sta2[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1612926496,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4143 \u3010\u91c7\u96c6\u77ff\u77f3\u3011"
    },
    {
        "content": "\u65e2\u7136SA\u80fd\u505a\uff0c\u90a3\u4e48SAM\u80fd\u4e0d\u80fd\u505a\u5462\uff1f\n\n\u5f53\u7136\u662f\u80fd\u7684\u3002\u8003\u8651\u5de6\u7aef\u70b9\u76f8\u540c\u7684\u5b50\u4e32\uff0c\u53f3\u7aef\u70b9\u589e\u5927\uff0c\u6743\u503c\u548c\u4e0d\u51cf\uff0c\u964d\u5e8f\u6392\u540d\u5355\u589e\uff08\u524d\u9762\u7684\u4e32\u662f\u540e\u9762\u7684\u524d\u7f00\uff09\u3002\u90a3\u4e482-1\u4ecd\u7136\u5355\u589e\uff0c\u4e8c\u5206\u627e\u5230\u5dee\u503c$\\leq 0$\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u5224\u65ad\u662f\u5426\u7b49\u4e8e0\uff08\u76f8\u7b49\uff09\u5373\u53ef\u3002\n\n\u5feb\u901f\u627e\u5b50\u4e32\u6392\u540d\u6211\u7528\u7684\u662f\u53cd\u4e32\u7684SAM\u7684parent\u6811\u4e0a\u500d\u589e+\u9884\u5904\u7406\u51fa\u8fd9\u4e2a\u8282\u70b9\u53d6\u5230len\u6700\u5927\u7684\u6392\u540d\u3002\u5177\u4f53\u52a0\u8fb9\u65b9\u6cd5\u753b\u4e2aSAM\u5c31\u77e5\u9053\u4e86\u3002\u603b\u590d\u6742\u5ea6$n\\log^2n$\uff0c\u52c9\u5f3a\u5361\u8fc7\u3002\n\n\u7136\u540e\u540e\u534a\u90e8\u5206SA\u80fd\u505a\u5230$\\log n$\uff0cSAM\u5c31\u66b4\u529b\u8bb8\u591a\uff08\u6211\u4e8b\u65e0\u8111\u9009\u624b\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define FOR(i,a,b) for(int i=a;i<=b;++i)\n#define ROF(i,a,b) for(int i=a;i>=b;--i)\n#define ll long long\nusing namespace std;\nconst int N = 4e5+200;\nint read(){\n\tint x=0,pos=1;char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') pos=0;\n\tfor(;isdigit(ch);ch=getchar()) x=(x<<1)+(x<<3)+ch-'0';\n\treturn pos?x:-x; \n} \nchar s[N];int n,w[N],pos[N],f[N][20];\nll val[N],vs[N],rk[N];\nint las=1,tot=1;\nstruct typ{\n\tint ch[26],fa,len,pos;\n\ttyp(){\n\t\tmemset(ch,0,sizeof(ch));fa=len=0;\n\t}\n}t[N];\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\nvector<pii> edge[N];\nvoid insert(int c,int id){\n\tint p=las,np=las=++tot;pos[id]=np;w[np]=1;t[np].pos=id;\n\tt[np].len=t[p].len+1;\n\tfor(;p&&!t[p].ch[c];p=t[p].fa) t[p].ch[c]=np;\n\tif(!p){\n\t\tt[np].fa=1;\n\t}else{\n\t\tint q=t[p].ch[c];\n\t\tif(t[p].len+1==t[q].len) t[np].fa=q;\n\t\telse{\n\t\t\tint nq=++tot;\n\t\t\tt[nq]=t[q];\n\t\t\tt[nq].len=t[p].len+1,t[q].fa=t[np].fa=nq;\n\t\t\tfor(;t[p].ch[c]==q;p=t[p].fa) t[p].ch[c]=nq;\n\t\t}\n\t}\n}\nint ti[N],lnk[N];\nll rn=0;\nvoid dfs1(int now){\n\tfor(int i=0;i<edge[now].size();i++){\n\t\tint v=edge[now][i].se;\n\t\tdfs1(v),w[now]+=w[v];if(!t[i].pos) t[i].pos=t[v].pos;\n\t}\n}\nint cmp(pii a,pii b){\n\treturn a.fi>b.fi;\n}\nvoid dfs(int now){\n\tsort(edge[now].begin(),edge[now].end(),cmp);\n\tfor(int i=0;i<edge[now].size();i++){\n\t\tint v=edge[now][i].se;\n\t\tdfs(v);\n\t}\n\trk[now]=rn;\n\trn+=1ll*(t[now].len-t[t[now].fa].len);//*w[now];\n}\nll calcrk(int l,int r){\n\tint len=r-l+1,x=pos[l];\n\tROF(i,19,0){\n\t\tif(t[f[x][i]].len>=len) x=f[x][i];\n\t}\n\treturn 1ll+rk[x]+1ll*(t[x].len-len);//*w[x];\n}\nll calcv(int l,int r){\n\treturn vs[r]-vs[l-1];\n}\nll calc(int l,int r){\n\treturn calcv(l,r)-calcrk(l,r);\n}\nvector<pii> ans;\nint main(){\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tFOR(i,1,n){\n\t\tval[i]=read();vs[i]=vs[i-1]+val[i];\n\t}\n\tROF(i,n,1){\n\t\tinsert(s[i]-'a',i);\n\t}\n\tFOR(i,2,tot){\n\t\tf[i][0]=t[i].fa;\n\t\tedge[t[i].fa].push_back({0,i});\n\t}\n\tdfs1(1);\n\tFOR(i,1,tot) edge[i].clear();\n\tFOR(i,2,tot){\n\t\tedge[t[i].fa].push_back({s[t[i].pos+t[t[i].fa].len]-'a',i});\n\t}\n\tdfs(1);\n\tFOR(i,1,19){\n\t\tFOR(j,1,tot){\n\t\t\tf[j][i]=f[f[j][i-1]][i-1];\n\t\t}\n\t}\n\tFOR(i,1,n){\n\t\tint l=i,r=n+1;\n\t\twhile(l<r-1){\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(calc(i,mid)<=0) l=mid;\n\t\t\telse r=mid;\n\t\t}\n\t\tif(calc(i,l)==0){\n\t\t\tans.push_back({i,l}); \n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans.size());\n\tif(!ans.size()) return 0;\n\tFOR(i,0,ans.size()-1){\n\t\tprintf(\"%d %d\\n\",ans[i].fi,ans[i].se); \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1590984426,
        "uid": 48744,
        "name": "TLE\u81ea\u52a8\u673a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4143 \u3010\u91c7\u96c6\u77ff\u77f3\u3011"
    }
]