[
    {
        "content": "## [LG8024 [ONTAK2015] Stumilowy sad](https://www.luogu.com.cn/problem/P8024) \u9898\u89e3\n\n\u56e0\u4e3a\u4e0d\u4f1a\u52bf\u80fd\u5206\u6790\uff0c\u4e0d\u77e5\u9053\u5927\u90e8\u5206\u9898\u89e3\u7684\u65b9\u6cd5\u7684\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff0c\u4e8e\u662f\u5199\u4e86\u4e00\u4e2a\u4e25\u683c $O(n\\log n)$ \u7684\u505a\u6cd5\u3002\n\n\u6b64\u5916\uff0c\u8fd9\u9898\u4e0d\u533a\u95f4\u52a0\u548c\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u7684\u8bdd\u5c31\u662f[\u8fd9\u9898](https://www.luogu.com.cn/problem/P4560)\u3002\n\n### \u9898\u610f\n\n> \u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\u3002\u8fdb\u884c $4$ \u79cd\u64cd\u4f5c\n>\n> - \u64cd\u4f5c $1$ \uff1a\u5c06 $[l,r]$ \u7684\u6240\u6709\u6570 $+c$\n> - \u64cd\u4f5c $2$ \uff1a\u5c06 $[l,r]$ \u7684\u6240\u6709\u6570\u5bf9 $h$ \u53d6 $\\min$\n> - \u64cd\u4f5c $3$ \uff1a\u5c06 $[l,r]$ \u7684\u6240\u6709\u6570\u5bf9 $h$ \u53d6 $\\max$\n> - \u64cd\u4f5c $4$ \uff1a\u67e5\u8be2 $[l,r]$ \u5185\u6570\u7684\u6700\u5927\u503c\n>\n> $1\\leq n\\leq 5\\times 10^5,1\\leq a_i\\leq 10^9,0\\leq |c|\\leq 500,1\\leq h\\leq 10^9$\n\n### \u9898\u89e3\n\n\u5bf9\u4e8e\u8fd9\u79cd\u9898\u76ee\u4e00\u822c\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u7ef4\u62a4\u4ee5\u4e0b\u56db\u4e2a\u4fe1\u606f\uff1a\n\n- $maxv$\uff1a\u5373\u7ebf\u6bb5\u6811\u4e0a\u8be5\u7ebf\u6bb5\u8986\u76d6\u7684\u6240\u6709\u6570\u7684\u6700\u5927\u503c\u3002\n- $tag$\uff1a\u7ef4\u62a4\u533a\u95f4\u52a0\u7684\u61d2\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5185\u7684\u6bcf\u4e2a\u6570 $+c$\uff0c\u4f46\u5b50\u6811\u5e76\u6ca1\u6709\u66f4\u65b0\u8fd9\u4e00\u4fe1\u606f\u3002\n- $ctag$\uff1a\u7ef4\u62a4\u533a\u95f4\u53d6 $\\min$ \u7684\u61d2\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5185\u7684\u6bcf\u4e2a\u6570\u5bf9 $h$ \u53d6 $\\min$\uff0c\u4f46\u5b50\u6811\u6682\u65e0\u66f4\u65b0\u6b64\u4fe1\u606f\u3002\n- $btag$\uff1a\u7ef4\u62a4\u533a\u95f4\u53d6 $\\max$ \u7684\u61d2\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5185\u7684\u6bcf\u4e2a\u6570\u5bf9 $h$ \u53d6 $\\max$\uff0c\u4f46\u5b50\u6811\u6682\u65e0\u66f4\u65b0\u6b64\u4fe1\u606f\u3002\n\n#### 1.\u5efa\u6811\n\n\u521d\u59cb\u65f6\u6240\u6709\u8282\u70b9\u7684 $ctag=+\\infty,btag=-\\infty$\uff0c\u6bd4\u8f83\u597d\u7406\u89e3\u3002\n\n```cpp\nvoid buildtree(int p,int l,int r){\n\tt[p].left=l,t[p].right=r;//\u6211\u7684\u4e60\u60ef\u5199\u6cd5\uff0c\u7ef4\u62a4\u7ebf\u6bb5\u4e24\u7aef\u7684\u4f4d\u7f6e\uff0c\u6bd4\u8f83\u5e38\u89c4\n\tt[p].ctag=INF,t[p].btag=-INF;\n\tif(l==r){t[p].maxv=a[l];return;}\n\tint mid=(l+r)>>1;\n\tbuildtree(ls,l,mid);buildtree(rs,mid+1,r);\n\tpushup(p);\n}\n```\n\n#### 2.\u533a\u95f4\u52a0\n\n\u56e0\u4e3a\u6bcf\u4e2a\u6570\u90fd\u52a0 $c$\uff0c\u6240\u4ee5\u5373\u4f7f\u4e4b\u524d\u6240\u6709\u7684\u6570\u90fd\u5bf9 $h$ \u53d6\u4e86\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\uff0c\u73b0\u5728\u8fd9\u4e2a\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u4e5f\u53d8\u6210\u4e86 $h+c$\u3002\u5bf9\u4e8e\u4e0b\u4f20\u6807\u8bb0\uff0c\u5c31\u76f8\u5f53\u4e8e\u90fd $+c$\u3002\n\n```cpp\ninline void pushtag(int p,ll x){\n    t[p].maxv+=x;t[p].tag+=x;\n    if(t[p].ctag<INF)t[p].ctag+=x;\n    if(t[p].btag>-INF)t[p].btag+=x;\n}\nvoid update_plus(int p,int l,int r,ll c){\n    if(l<=t[p].left&&t[p].right<=r)\n        return pushtag(p,c),void();\n    pushdown(p);\n    if(l<=t[ls].right)update_plus(ls,l,r,c);\n    if(r>=t[rs].left)update_plus(rs,l,r,c);\n    pushup(p);\n}\n```\n\n#### 3.\u533a\u95f4\u53d6 $\\min$\n\n$maxv\\gets \\min(maxv,h)$ \u548c $ctag\\gets \\min(ctag,h)$ \u6bd4\u8f83\u597d\u7406\u89e3\u3002\n\n\u5bf9\u4e8e $btag$ \u800c\u8a00\uff0c\u5982\u679c $btag>h$\uff0c\u90a3\u4e48\u53d6 $\\max$ \u53d8\u5927\u7684\u503c\u4e5f\u4f1a\u5bf9 $h$ \u53d6 $\\min$\u3002\u5982\u679c $btag<h$ \u90a3\u4e48\u53d6 $\\max$ \u53d8\u5927\u7684\u503c\u4e5f\u4e0d\u4f1a\u56e0\u4e3a\u5bf9 $h$ \u53d6 $\\min$ \u6536\u5230\u5f71\u54cd\u3002\uff08\u611f\u89c9\u5728\u8bf4\u5e9f\u8bdd\uff0c\u5176\u5b9e\u4e5f\u5f88\u597d\u7406\u89e3\uff09\n\n```cpp\ninline void pushctag(int p,ll x){\n    t[p].maxv=min(t[p].maxv,x);\n    t[p].btag=min(t[p].btag,x);\n    t[p].ctag=min(t[p].ctag,x);\n}\nvoid update_cut(int p,int l,int r,ll h){\n    if(l<=t[p].left&&t[p].right<=r)\n        return pushctag(p,h);\n    pushdown(p);\n    if(l<=t[ls].right)update_cut(ls,l,r,h);\n    if(r>=t[rs].left)update_cut(rs,l,r,h);\n    pushup(p);\n}\n```\n\n#### 4.\u533a\u95f4\u53d6 $\\max$\n\n\u539f\u7406\u548c\u533a\u95f4\u53d6 $\\min$ \u7c7b\u4f3c\u3002\n\n```cpp\ninline void pushbtag(int p,ll x){\n    t[p].maxv=max(t[p].maxv,x);\n    t[p].btag=max(t[p].btag,x);\n    t[p].ctag=max(t[p].ctag,x);\n}\nvoid update_build(int p,int l,int r,ll h){\n    if(l<=t[p].left&&t[p].right<=r)\n        return pushbtag(p,h);\n    pushdown(p);\n    if(l<=t[ls].right)update_build(ls,l,r,h);\n    if(r>=t[rs].left)update_build(rs,l,r,h);\n    pushup(p);\n}\n```\n\n#### 5.\u4e0a\u4f20\u4fe1\u606f\n\n```cpp\ninline void pushup(int p){\n\tt[p].maxv=max(t[ls].maxv,t[rs].maxv);\n}\n```\n\n#### 6.\u4e0b\u4f20\u6807\u8bb0\n\n\u539f\u7406\u5c31\u662f\u7528\u7236\u4eb2\u8282\u70b9\u7684\u6807\u8bb0\u5bf9\u5b50\u8282\u70b9\u7684\u6bcf\u79cd\u4fe1\u606f\u5206\u522b\u8fdb\u884c\u4fee\u6539\uff0c\u548c\u4fee\u6539\u64cd\u4f5c\u76f8\u540c\uff0c\u6240\u4ee5\u5b50\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u7528\u4e09\u4e2a\u4fee\u6539\u51fd\u6570\uff08\u5206\u522b\u5bf9\u5e94\u66f4\u65b0 $tag,ctag,btag$\uff09\u6765\u5199\uff0c\u8fd9\u6837\u5b50\u4ee3\u7801\u91cf\u4f1a\u5927\u5927\u51cf\u5c11\uff0c\u4e5f\u4f1a\u6e05\u6670\u5f88\u591a\u3002\n\n```cpp\ninline void pushdown(int p){\n    pushtag(ls,t[p].tag);pushtag(rs,t[p].tag);\n    pushbtag(ls,t[p].btag);pushbtag(rs,t[p].btag);\n    pushctag(ls,t[p].ctag);pushctag(rs,t[p].ctag);\n    t[p].tag=0,t[p].btag=-INF,t[p].ctag=INF;\n}\n```\n\n#### 7.\u67e5\u8be2\u6700\u5927\u503c\n\n```cpp\nll query_max(int p,int l,int r){\n\tif(l<=t[p].left&&t[p].right<=r)\n\t\treturn t[p].maxv;\n\tpushdown(p);ll tmp=-INF;\n\tif(l<=t[ls].right)tmp=max(tmp,query_max(ls,l,r));\n\tif(r>=t[rs].left)tmp=max(tmp,query_max(rs,l,r));\n\treturn tmp;\n}\n```\n\n------\n\n\u5b8c\u6574\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\u3002\n\n### \u540e\u8bb0\n\n\u4e4b\u524d\u9898\u89e3\u6709\u4e9b\u5730\u65b9\u683c\u5f0f\u548c\u5185\u5bb9\u5199\u9519\u4e86\uff0c\u73b0\u5df2\u4fee\u6539\u3002\n\n\u540c\u65f6\u628a\u4ee3\u7801\u6539\u6210\u4e86\u4f7f\u7528\u51fd\u6570\u5b8c\u6210\u5bf9\u4fe1\u606f\u7684\u4fee\u6539\uff0c\u8fd9\u6837\u66f4\u52a0\u7b80\u6d01\u3002",
        "postTime": 1657775811,
        "uid": 360491,
        "name": "BigSmall_En",
        "ccfLevel": 6,
        "title": "LG8024 \u9898\u89e3"
    },
    {
        "content": "\u5927\u6982 Seg Beats \u662f\u53ef\u4ee5\u505a\u7684\u3002\u673a\u623f\u540c\u5b66\u597d\u50cf\u8fd8\u80e1\u4e86\u4e00\u4e2a $O(n\\sqrt n\\log n)$ \u7684\u5e8f\u5217\u5206\u5757 + \u52a8\u6001\u5f00\u70b9\u503c\u57df\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5 ~~\uff08\u4f60\u4e3a\u4ec0\u4e48\u6bd4\u522b\u4eba\u591a\u53ea\u6839\u53f7\uff09~~\u3002\n\n\u8fd9\u91cc\u8bb2\u7ebf\u6bb5\u6811\u7ef4\u62a4\u64cd\u4f5c\u6807\u8bb0\u7684 $O(n\\log n)$ \u505a\u6cd5\u3002\n\n\u81f3\u5199\u8fd9\u7bc7\u9898\u89e3\u65f6\uff0c\u9898\u89e3\u533a\u5171\u6709\u4e09\u7bc7\u9898\u89e3\uff0c\u5176\u4e2d\u4e24\u7bc7\u90fd\u662f\u8fd9\u79cd\u505a\u6cd5\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u66f4\u8be6\u7ec6\u5730\u8bf4\u660e\u5176\u539f\u7406\u3002\n\n&nbsp;\n\n\u6211\u4eec\u7ef4\u62a4\u52a0\u6cd5\u3001\u53d6 $\\min$\u3001\u53d6 $\\max$ \u4e09\u79cd\u6807\u8bb0\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\uff1a\n\n- \u52a0\u6cd5\u5bf9\u53d6 $\\min$ \u53d6 $\\max$ \u6709\u5206\u914d\u5f8b\u3002\n\n- \u82e5\u5e72\u8fde\u7eed\u53d6 $\\min$ \u64cd\u4f5c\u53ef\u4ee5\u53d6 $\\min$ \u5408\u5e76\uff0c\u82e5\u5e72\u8fde\u7eed\u53d6 $\\max$ \u64cd\u4f5c\u53ef\u4ee5\u53d6 $\\max$ \u5408\u5e76\u3002\n\n- \u53d6 $\\min$ \u548c\u53d6 $\\max$ \u987a\u5e8f\u5148\u540e\u6709\u5f71\u54cd\uff1a\n\n  - \u5bf9 $a$ \u53d6 $\\min$\uff0c\u518d\u5bf9 $b$ \u53d6 $\\max$\uff0c\u518d\u5bf9 $c$ \u53d6 $\\min$\uff0c\u7b49\u6548\u4e8e\u5bf9 $\\min(a, c)$ \u53d6 $\\min$\uff0c\u518d\u5bf9 $\\min(b, c)$ \u53d6 $\\max$\u3002\n  \n  - \u5bf9\u79f0\u5730\u6709\uff0c\u5bf9 $a$ \u53d6 $\\max$\uff0c\u518d\u5bf9 $b$ \u53d6 $\\min$\uff0c\u518d\u5bf9 $c$ \u53d6 $\\max$\uff0c\u7b49\u6548\u4e8e\u5bf9 $\\max(a, c)$ \u53d6 $\\max$\uff0c\u518d\u5bf9 $\\max(b, c)$ \u53d6 $\\min$\u3002\n\n- \u4e00\u6bb5\u64cd\u4f5c\u5e8f\u5217\uff0c\u5c06\u5176\u4e00\u6bb5\u5b50\u6bb5\u4f5c\u7b49\u6548\u8f6c\u5316\uff0c\u8fd9\u6bb5\u64cd\u4f5c\u5e8f\u5217\u7684\u6548\u679c\u662f\u4e0d\u53d8\u7684\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u6709\uff1a\n\n- \u5e94\u7528\u4e0a\u9762\u7b2c 1 \u6761\uff0c\u53ef\u4ee5\u5c06\u64cd\u4f5c\u5e8f\u5217\u7b49\u6548\u8f6c\u5316\u4e3a\u53ea\u6709\u53d6 $\\min$ \u548c\u53d6 $\\max$ \u64cd\u4f5c\u7684\u5e8f\u5217\u3002\n\n- \u5e94\u7528\u4e0a\u9762\u7b2c 2 \u6761\uff0c\u53ef\u4ee5\u5c06\u53ea\u6709\u53d6 $\\min$ \u548c\u53d6 $\\max$ \u7684\u64cd\u4f5c\u5e8f\u5217\u7b49\u6548\u8f6c\u5316\u6210\u53d6 $\\min$ \u4e0e\u53d6 $\\max$ \u4ea4\u66ff\u7684\u5e8f\u5217\u3002\n\n- \u518d\u53cd\u590d\u5e94\u7528\u4e0a\u9762\u7b2c 3.1 \u6761\u548c\u7b2c 2 \u6761\uff0c\u53ef\u4ee5\u59cb\u7ec8\u5c06\u64cd\u4f5c\u5e8f\u5217\u7ef4\u62a4\u6210\u53d6\u4e00\u6b21 $\\min$ \u518d\u53d6\u4e00\u6b21 $\\max$\uff08\u6216\u5e94\u7528\u7b2c 3.2 \u6761\u548c\u7b2c 2 \u6761\uff0c\u7ef4\u62a4\u6210\u53d6\u4e00\u6b21 $\\max$ \u518d\u53d6\u4e00\u6b21 $\\min$\uff0c\u4ea6\u53ef\uff09\u3002\n\n\u5173\u4e8e\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u8fd8\u77e5\u9053\uff1a\u4e00\u4e2a\u88ab\u4e0b\u653e\u7684\u6807\u8bb0\uff0c\u5176\u64cd\u4f5c\u987a\u5e8f\u4e00\u5b9a\u5728\u4e0b\u653e\u5230\u7684\u7ebf\u6bb5\u6811\u7ed3\u70b9\u7684\u539f\u6709\u6807\u8bb0\u4e4b\u540e\u3002\n\n\u4ee5\u4e0a\u8fd9\u4e9b\uff0c\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u7ef4\u62a4\u64cd\u4f5c\u6807\u8bb0\u65b9\u6cd5\u7684\u7406\u8bba\u4f9d\u636e\u3002\n\n&nbsp;\n\n\u4e0d\u59a8\u8bb0\u533a\u95f4\u6700\u5927\u503c\u4e3a $\\mathrm{mxv}$\uff0c\u5e76\u5c06\u52a0\u6cd5\u3001\u53d6 $\\min$\u3001\u53d6 $\\max$ \u7684\u6807\u8bb0\u5206\u522b\u8bb0\u4e3a $\\mathrm{atg}, \\mathrm{ntg}, \\mathrm{xtg}$\u3002\n\n\u8fd9\u91cc\u5bf9\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u7684\u6807\u8bb0\u8868\u793a\u5148\u4e0e $\\mathrm{ntg}$ \u53d6\u4e00\u6b21 $\\min$\uff0c\u518d\u4e0e $\\mathrm{xtg}$ \u53d6\u4e00\u6b21 $\\max$\u3002\u53cd\u8fc7\u6765\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\n#### \u533a\u95f4\u52a0 $x$\n\n$\\mathrm{mxv}$ \u548c $\\mathrm{atg}$ \u5e94\u5f53\u52a0\u4e0a $x$\uff0c\u540c\u65f6 $\\mathrm{ntg}$ \u548c $\\mathrm{xtg}$ \u5e94\u88ab\u5206\u914d\u4e0a\u52a0 $x$\uff1a\n\n$$\\begin{aligned}\n\\mathrm{mxv} &\\gets \\mathrm{mxv} + x \\\\\n\\mathrm{ntg} &\\gets \\mathrm{ntg} + x \\\\\n\\mathrm{xtg} &\\gets \\mathrm{xtg} + x\n\\end{aligned}$$\n\n#### \u533a\u95f4\u5bf9 $x$ \u53d6 $\\min$\n\n$\\mathrm{mxv}$ \u5e94\u5f53\u5bf9 $x$ \u53d6 $\\min$\uff0c$\\mathrm{ntg}$ \u548c $\\mathrm{xtg}$ \u5e94\u5f53\u6309\u7167\u4e0a\u9762\u7b2c 3.1 \u6761\u6240\u8ff0\u4e0e $x$ \u201c\u52a0\u6210\u201d\uff1a\n\n$$\\begin{aligned}\n\\mathrm{mxv} &\\gets \\min(\\mathrm{mxv}, x) \\\\\n\\mathrm{ntg} &\\gets \\min(\\mathrm{ntg}, x) \\\\\n\\mathrm{xtg} &\\gets \\min(\\mathrm{xtg}, x)\n\\end{aligned}$$\n\n#### \u533a\u95f4\u5bf9 $x$ \u53d6 $\\max$\n\n$\\mathrm{mxv}$ \u5e94\u5f53\u5bf9 $x$ \u53d6 $\\max$\uff0c$\\mathrm{xtg}$ \u5e94\u5f53\u4e0e $x$ \u53d6 $\\max$ \u5408\u5e76\uff1a\n\n$$\\begin{aligned}\n\\mathrm{mxv} &\\gets \\max(\\mathrm{mxv}, x) \\\\\n\\mathrm{xtg} &\\gets \\max(\\mathrm{xtg}, x)\n\\end{aligned}$$\n\n\u53e6\u4e24\u7bc7\u91c7\u7528\u7ef4\u62a4\u64cd\u4f5c\u6807\u8bb0\u65b9\u6cd5\u7684\u9898\u89e3\uff0c\u5728\u8fd9\u91cc\u90fd\u8fd8\u6709\u5982\u4e0b\u4e00\u6b65\u66f4\u65b0\uff1a\n\n$$\\mathrm{ntg} \\gets \\max(\\mathrm{ntg}, x)$$\n\n\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e00\u6b65\u662f\u6b63\u786e\u4f46\u4e0d\u5fc5\u8981\u7684\u3002\n\n\u5982\u679c\u80fd\u8ba4\u8bc6\u5230\u8fd9\u70b9\uff0c\u7b97\u662f\u771f\u6b63\u7406\u89e3\u4e86\u4ee5\u4e0a\u8fd9\u4e9b\u64cd\u4f5c\u6b63\u786e\u6027\u7684\u6765\u6e90\uff1a\u5173\u952e\u5728\u4e8e\u5c06\u6709\u5e8f\u7684\u64cd\u4f5c\u5e8f\u5217\u7b49\u6548\u8f6c\u5316\u4e3a\u524d\u540e\u4e24\u6b65\u64cd\u4f5c\uff0c\u6240\u4ee5\u52a0\u5165\u4e00\u4e2a\u4e0d\u80fd\u4e0e\u524d\u4e00\u6b65\u64cd\u4f5c\u76f4\u63a5\u5408\u5e76\u7684\u64cd\u4f5c\u65f6\uff0c\u5176\u8981\u5bf9\u524d\u9762\u4e24\u6b65\u64cd\u4f5c\u4ea7\u751f\u4f5c\u7528\uff0c\u4f7f\u5f97\u8fd9\u6b65\u64cd\u4f5c\u7684\u6548\u679c\u88ab\u6b63\u786e\u201c\u5408\u5e76\u201d\u8fdb\u53bb\u3002\n\n#### \u64cd\u4f5c\u6807\u8bb0\u4e0b\u653e\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u5e94\u5f53\u5148\u4e0b\u653e $\\mathrm{atg}$\uff0c\u518d\u4e0b\u653e $\\mathrm{ntg}$ \u548c $\\mathrm{xtg}$\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u8fd9\u6b65\u52a0\u6cd5\u5df2\u7ecf\u5206\u914d\u7ed9\u4e86\u8fd9\u4e2a\u7ed3\u70b9\u7684 $\\mathrm{ntg}$ \u548c $\\mathrm{xtg}$\uff0c\u9700\u8981\u5206\u914d\u5230\u4e0b\u653e\u5230\u7684\u7ed3\u70b9\u7684 $\\mathrm{ntg}$ \u548c $\\mathrm{xtg}$ \u4e0a\u3002\n\n\u4e0b\u653e $\\mathrm{ntg}$ \u548c $\\mathrm{xtg}$ \u7684\u987a\u5e8f\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u5c31\u662f\u81ea\u884c\u9009\u62e9\u4e86\u4e24\u79cd\u987a\u5e8f\u4e4b\u4e00\uff0c\u5e76\u6309\u8fd9\u79cd\u987a\u5e8f\u7ef4\u62a4\u7684\u64cd\u4f5c\u6807\u8bb0\uff0c\u4e0b\u653e\u65f6\u5c31\u5e94\u5f53\u6309\u7167\u6211\u4eec\u9009\u62e9\u7684\u8fd9\u79cd\u987a\u5e8f\u4e0b\u653e\u3002\n\n#### \u67e5\u8be2\u533a\u95f4 $\\max$\n\n\u5404\u7ebf\u6bb5\u6811\u7ed3\u70b9\u5bf9\u5e94\u7684\u533a\u95f4 $\\max$ \u5df2\u7ecf\u7ef4\u62a4\u597d\uff0c\u5408\u5e76\u8fd9\u4e9b\u7b54\u6848\u56de\u7b54\u533a\u95f4 $\\max$ \u662f\u5e73\u51e1\u7684\u3002\n\n&nbsp;\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u53c2\u8003\u5b9e\u73b0\uff1a[\u4e91\u526a\u8d34\u677f](/paste/0gyvtjc9)",
        "postTime": 1668777387,
        "uid": 118109,
        "name": "whhsteven",
        "ccfLevel": 7,
        "title": "P8024 [ONTAK2015] Stumilowy sad"
    },
    {
        "content": "### [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P8024)\n\n------------\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\u548c $m$ \u6b21\u64cd\u4f5c\uff0c\u4f60\u9700\u8981\u5199\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u64cd\u4f5c\uff1a\n\n1. \u533a\u95f4\u52a0 $k$\uff1b\n2. \u533a\u95f4\u5bf9 $k$ \u53d6 $\\min$\uff1b\n3. \u533a\u95f4\u5bf9 $k$ \u53d6 $\\max$\uff1b\n4. \u8be2\u95ee\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u5bf9\u4e8e $\\text{100\\%}$ \u7684\u6570\u636e\uff0c$1\\le n,m\\le 5\\times 10^5$\u3002\n\n\u770b\u5230\u8fd9\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u662f [[P4560] Wall \u7816\u5899](https://www.luogu.com.cn/problem/P4560)\uff0c\u4f46\u662f\u591a\u4e86\u4e00\u4e2a\u533a\u95f4\u52a0\u7684\u64cd\u4f5c\u3002\n\n\u611f\u89c9\u6807\u8bb0\u4f20\u9012\u548c\u4e00\u4e9b\u5177\u4f53\u7ec6\u8282\u8fd8\u662f\u633a\u9700\u8981\u6ce8\u610f\u7684\uff0c\u5199\u7bc7\u9898\u89e3\u8bb0\u5f55\u4e00\u4e0b\u505a\u6cd5\uff0c\u65b9\u4fbf\u4e4b\u540e\u56de\u6765\u770b\u3002\n\n------------\n## \u601d\u8def\n\n\u533a\u95f4\u64cd\u4f5c\uff0c\u8003\u8651\u7ebf\u6bb5\u6811\u3002\n\n------------\n### \u53d8\u91cf\u8bbe\u8ba1\n\n\u9664\u533a\u95f4\u6700\u5927\u503c\u4ee5\u5916\uff0c\u6bcf\u4e2a\u8282\u70b9\u8fd8\u8981\u7ef4\u62a4\u533a\u95f4\u52a0\u6807\u8bb0\u3001\u533a\u95f4 $\\min$ \u6807\u8bb0\u548c\u533a\u95f4 $\\max$ \u6807\u8bb0\u3002\n\n```cpp\nstruct tree\n{\n\tll max,sum_tag,min_tag,max_tag;\n}t[N<<2];\n```\n\n------------\n### \u5efa\u6811\n\n\u9012\u5f52\u5230\u53f6\u5b50\u8282\u70b9\u5c31\u76f4\u63a5\u8d4b\u503c\uff0c\u4e0d\u7528\u591a\u8bf4\u3002\n\u4f46\u6ce8\u610f\uff0c\u7531\u4e8e\u6709\u8d1f\u6570\uff0c\u8fd8\u8981\u628a\u6bcf\u4e2a\u8282\u70b9\u7684 $\\min$ \u6807\u8bb0\u548c $\\max$ \u6807\u8bb0\u5206\u522b\u8bbe\u4e3a\u6b63\u65e0\u7a77\u5927\u548c\u8d1f\u65e0\u7a77\u5927\uff0c\u540c\u65f6\u4e5f\u4ee3\u8868\u8be5\u8282\u70b9\u4e0d\u5b58\u5728 $\\min$ \u6807\u8bb0\u6216\u4e0d\u5b58\u5728 $\\max$ \u6807\u8bb0\u3002\n\n```cpp\nvoid build(int p,int l,int r)\n{\n\tt[p].min_tag=inf;\n\tt[p].max_tag=-inf;\n\tif(l==r)\n\t{\n\t\tt[p].max=a[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tpush_up(p);\n}\n```\n\n------------\n### \u4fe1\u606f\u5408\u5e76\n\n\u7531\u4e8e\u67e5\u8be2\u53ea\u6c42\u6700\u5927\u503c\uff0c\u6240\u4ee5\u628a\u8be5\u8282\u70b9\u7684\u6700\u5927\u503c\u7528\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u7684\u6700\u5927\u503c\u66f4\u65b0\u4e00\u4e0b\u5373\u53ef\u3002\n\n```cpp\nvoid push_up(int p)\n{\n\tt[p].max=max(t[ls].max,t[rs].max);\n}\n```\n\n------------\n### \u533a\u95f4\u52a0\n\n\u5728\u666e\u901a\u533a\u95f4\u52a0\u7684\u57fa\u7840\u4e0a\u5bf9 $\\min$ \u548c $\\max$ \u6807\u8bb0\u8fdb\u884c\u4fee\u6539\uff0c\u82e5\u5b58\u5728\u8d4b\u503c\u6807\u8bb0\uff08\u5373\u4e0d\u4e3a\u65e0\u7a77\u5927\uff09\uff0c\u52a0\u4e0a $k$ \u5373\u53ef\u3002\n\n```cpp\nvoid update_add(int nl,int nr,int p,int l,int r,ll k)\n{\n\tif(nl<=l&&r<=nr)\n\t{\n\t\tt[p].max+=k;\n\t\tt[p].sum_tag+=k;\n\t\tif(t[p].min_tag<inf)t[p].min_tag+=k;\n\t\tif(t[p].max_tag>-inf)t[p].max_tag+=k;\n\t\treturn;\n\t}\n\tpush_down(p,l,r);\n\tint mid=l+r>>1;\n\tif(nl<=mid)update_add(nl,nr,ls,l,mid,k);\n\tif(mid<nr)update_add(nl,nr,rs,mid+1,r,k);\n\tpush_up(p);\n}\n```\n\n------------\n### \u533a\u95f4\u53d6 $\\min$\n\n\u663e\u7136\u533a\u95f4\u6700\u5927\u503c\u8981\u5bf9 $k$ \u53d6 $\\min$\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u8981\u5bf9\u4e24\u4e2a\u8d4b\u503c\u6807\u8bb0\u53d6 $\\min$\uff0c\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\u6216\u8005\u624b\u63a8\u4e00\u4e0b\u662f\u600e\u4e48\u66f4\u65b0\u7684\u3002\n\n```cpp\nvoid update_min(int nl,int nr,int p,int l,int r,ll k)\n{\n\tif(nl<=l&&r<=nr)\n\t{\n\t\tt[p].max=min(t[p].max,k);\n\t\tt[p].min_tag=min(t[p].min_tag,k);\n\t\tt[p].max_tag=min(t[p].max_tag,k);\n\t\treturn;\n\t}\n\tpush_down(p,l,r);\n\tint mid=l+r>>1;\n\tif(nl<=mid)update_min(nl,nr,ls,l,mid,k);\n\tif(mid<nr)update_min(nl,nr,rs,mid+1,r,k);\n\tpush_up(p);\n}\n```\n\n------------\n### \u533a\u95f4\u53d6 $\\max$\n\n\u4e0e\u53d6 $\\min$ \u540c\u7406\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n```cpp\nvoid update_max(int nl,int nr,int p,int l,int r,ll k)\n{\n\tif(nl<=l&&r<=nr)\n\t{\n\t\tt[p].max=max(t[p].max,k);\n\t\tt[p].min_tag=max(t[p].min_tag,k);\n\t\tt[p].max_tag=max(t[p].max_tag,k);\n\t\treturn;\n\t}\n\tpush_down(p,l,r);\n\tint mid=l+r>>1;\n\tif(nl<=mid)update_max(nl,nr,ls,l,mid,k);\n\tif(mid<nr)update_max(nl,nr,rs,mid+1,r,k);\n\tpush_up(p);\n}\n```\n\n------------\n### \u6807\u8bb0\u4e0b\u4f20\n\n\u5bf9\u4e8e\u5de6\u53f3\u513f\u5b50\uff0c\u9996\u5148\u8981\u5904\u7406\u4e00\u4e0b\u533a\u95f4\u52a0\u6807\u8bb0\u548c\u533a\u95f4\u6700\u5927\u503c\uff0c\u540c\u65f6\u52a0\u4e0a\u8be5\u8282\u70b9\u7684\u533a\u95f4\u52a0\u6807\u8bb0\u3002\u53e6\u5916\uff0c\u7c7b\u4f3c\u4fee\u6539\u51fd\u6570\uff0c\u8981\u5bf9\u53e6\u5916\u4e24\u4e2a\u6807\u8bb0\u4e5f\u8fdb\u884c\u4fee\u6539\u3002\n\n\u7136\u540e\u662f\u8d4b\u503c\u6807\u8bb0\uff0c\u53c2\u8003\u4fee\u6539\u51fd\u6570\u5373\u53ef\uff0c\u5148\u540e\u65e0\u6240\u8c13\u3002\n\n\u6700\u540e\uff0c\u52a1\u5fc5\u8981\u628a\u8be5\u8282\u70b9\u7684\u6807\u8bb0\u521d\u59cb\u5316\u3002\n\n`push_down` \u51fd\u6570\u5199\u5f97\u6709\u4e9b\u957f\uff0c\u4f46\u90fd\u662f\u91cd\u590d\u5185\u5bb9\uff0c\u5e76\u4e0d\u96be\u7406\u89e3\u3002\n\n```cpp\nvoid push_down(int p,int l,int r)\n{\n\tt[ls].max+=t[p].sum_tag;\n\tt[rs].max+=t[p].sum_tag;\n\tt[ls].sum_tag+=t[p].sum_tag;\n\tt[rs].sum_tag+=t[p].sum_tag;\n\tif(t[ls].min_tag<inf)t[ls].min_tag+=t[p].sum_tag;\n\tif(t[rs].min_tag<inf)t[rs].min_tag+=t[p].sum_tag;\n\tif(t[ls].max_tag>-inf)t[ls].max_tag+=t[p].sum_tag;\n\tif(t[rs].max_tag>-inf)t[rs].max_tag+=t[p].sum_tag;\n\tt[p].sum_tag=0;\n\t\n\tt[ls].max=min(t[ls].max,t[p].min_tag);\n\tt[rs].max=min(t[rs].max,t[p].min_tag);\n\tt[ls].min_tag=min(t[ls].min_tag,t[p].min_tag);\n\tt[rs].min_tag=min(t[rs].min_tag,t[p].min_tag);\n\tt[ls].max_tag=min(t[ls].max_tag,t[p].min_tag);\n\tt[rs].max_tag=min(t[rs].max_tag,t[p].min_tag);\n\tt[p].min_tag=inf;\n\t\n\tt[ls].max=max(t[ls].max,t[p].max_tag);\n\tt[rs].max=max(t[rs].max,t[p].max_tag);\n\tt[ls].min_tag=max(t[ls].min_tag,t[p].max_tag);\n\tt[rs].min_tag=max(t[rs].min_tag,t[p].max_tag);\n\tt[ls].max_tag=max(t[ls].max_tag,t[p].max_tag);\n\tt[rs].max_tag=max(t[rs].max_tag,t[p].max_tag);\n\tt[p].max_tag=-inf;\n}\n```\n\n------------\n\n### \u8be2\u95ee\u533a\u95f4\u6700\u5927\u503c\n\n\u6bd4\u8f83\u7b80\u5355\uff0c\u8bf4\u660e\u7565\u3002\n\n```cpp\nll query(int ql,int qr,int p,int l,int r)\n{\n\tif(ql<=l&&r<=qr)return t[p].max;\n\tpush_down(p,l,r);\n\tint mid=l+r>>1;\n\tll ans=-inf;\n\tif(ql<=mid)ans=max(ans,query(ql,qr,ls,l,mid));\n\tif(mid<qr)ans=max(ans,query(ql,qr,rs,mid+1,r));\n\treturn ans;\n}\n```\n\n------------\n### \u5b8c\u6574\u4ee3\u7801\n\n\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\uff0c\u5171 $m$ \u6b21\u64cd\u4f5c\uff0c\u6545\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\log n)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define ls p<<1\n#define rs p<<1|1\n#define ll long long\nusing namespace std;\nconst int N=5e5+5;\nconst ll inf=9e18;\nint n,m;\nll a[N];\nstruct tree\n{\n\tll max,sum_tag,min_tag,max_tag;\n}t[N<<2];\nvoid push_up(int p)\n{\n\tt[p].max=max(t[ls].max,t[rs].max);\n}\nvoid push_down(int p,int l,int r)\n{\n\tt[ls].max+=t[p].sum_tag;\n\tt[rs].max+=t[p].sum_tag;\n\tt[ls].sum_tag+=t[p].sum_tag;\n\tt[rs].sum_tag+=t[p].sum_tag;\n\tif(t[ls].min_tag<inf)t[ls].min_tag+=t[p].sum_tag;\n\tif(t[rs].min_tag<inf)t[rs].min_tag+=t[p].sum_tag;\n\tif(t[ls].max_tag>-inf)t[ls].max_tag+=t[p].sum_tag;\n\tif(t[rs].max_tag>-inf)t[rs].max_tag+=t[p].sum_tag;\n\tt[p].sum_tag=0;\n\t\n\tt[ls].max=min(t[ls].max,t[p].min_tag);\n\tt[rs].max=min(t[rs].max,t[p].min_tag);\n\tt[ls].min_tag=min(t[ls].min_tag,t[p].min_tag);\n\tt[rs].min_tag=min(t[rs].min_tag,t[p].min_tag);\n\tt[ls].max_tag=min(t[ls].max_tag,t[p].min_tag);\n\tt[rs].max_tag=min(t[rs].max_tag,t[p].min_tag);\n\tt[p].min_tag=inf;\n\t\n\tt[ls].max=max(t[ls].max,t[p].max_tag);\n\tt[rs].max=max(t[rs].max,t[p].max_tag);\n\tt[ls].min_tag=max(t[ls].min_tag,t[p].max_tag);\n\tt[rs].min_tag=max(t[rs].min_tag,t[p].max_tag);\n\tt[ls].max_tag=max(t[ls].max_tag,t[p].max_tag);\n\tt[rs].max_tag=max(t[rs].max_tag,t[p].max_tag);\n\tt[p].max_tag=-inf;\n}\nvoid build(int p,int l,int r)\n{\n\tt[p].min_tag=inf;\n\tt[p].max_tag=-inf;\n\tif(l==r)\n\t{\n\t\tt[p].max=a[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tpush_up(p);\n}\nvoid update_add(int nl,int nr,int p,int l,int r,ll k)\n{\n\tif(nl<=l&&r<=nr)\n\t{\n\t\tt[p].max+=k;\n\t\tt[p].sum_tag+=k;\n\t\tif(t[p].min_tag<inf)t[p].min_tag+=k;\n\t\tif(t[p].max_tag>-inf)t[p].max_tag+=k;\n\t\treturn;\n\t}\n\tpush_down(p,l,r);\n\tint mid=l+r>>1;\n\tif(nl<=mid)update_add(nl,nr,ls,l,mid,k);\n\tif(mid<nr)update_add(nl,nr,rs,mid+1,r,k);\n\tpush_up(p);\n}\nvoid update_min(int nl,int nr,int p,int l,int r,ll k)\n{\n\tif(nl<=l&&r<=nr)\n\t{\n\t\tt[p].max=min(t[p].max,k);\n\t\tt[p].min_tag=min(t[p].min_tag,k);\n\t\tt[p].max_tag=min(t[p].max_tag,k);\n\t\treturn;\n\t}\n\tpush_down(p,l,r);\n\tint mid=l+r>>1;\n\tif(nl<=mid)update_min(nl,nr,ls,l,mid,k);\n\tif(mid<nr)update_min(nl,nr,rs,mid+1,r,k);\n\tpush_up(p);\n}\nvoid update_max(int nl,int nr,int p,int l,int r,ll k)\n{\n\tif(nl<=l&&r<=nr)\n\t{\n\t\tt[p].max=max(t[p].max,k);\n\t\tt[p].min_tag=max(t[p].min_tag,k);\n\t\tt[p].max_tag=max(t[p].max_tag,k);\n\t\treturn;\n\t}\n\tpush_down(p,l,r);\n\tint mid=l+r>>1;\n\tif(nl<=mid)update_max(nl,nr,ls,l,mid,k);\n\tif(mid<nr)update_max(nl,nr,rs,mid+1,r,k);\n\tpush_up(p);\n}\nll query(int ql,int qr,int p,int l,int r)\n{\n\tif(ql<=l&&r<=qr)return t[p].max;\n\tpush_down(p,l,r);\n\tint mid=l+r>>1;\n\tll ans=-inf;\n\tif(ql<=mid)ans=max(ans,query(ql,qr,ls,l,mid));\n\tif(mid<qr)ans=max(ans,query(ql,qr,rs,mid+1,r));\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\tbuild(1,1,n);\n\twhile(m--)\n\t{\n\t\tint q,l,r,k;\n\t\tscanf(\"%d%d%d\",&q,&l,&r);\n\t\tif(q!=4)scanf(\"%lld\",&k);\n\t\tif(q==1)update_add(l,r,1,1,n,k);\n\t\tif(q==2)update_min(l,r,1,1,n,k);\n\t\tif(q==3)update_max(l,r,1,1,n,k);\n\t\tif(q==4)printf(\"%lld\\n\",query(l,r,1,1,n));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1663581762,
        "uid": 304837,
        "name": "Zwb0106",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P8024 Stumilowy sad"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P8024)\n\n\u4ee3\u7801 $50$ \u884c\u3002\u5c0f\u4e8e $2kb$\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(q\\log n)$\u3002\n\n# \u7b80\u8ff0\u9898\u610f\n\n>\u7ef4\u62a4\u4e00\u4e2a\u6570\u5217\uff0c\u6709\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n>- `1 l r k`\uff1a$\\forall i\\in[l,r],a_i\u2190a_i+k$\n\n>- `2 l r k`\uff1a$\\forall i\\in[l,r],a_i\u2190\\min\\{a_i,k\\}$\n\n>- `3 l r k`\uff1a$\\forall i\\in[l,r],a_i\u2190\\max\\{a_i,k\\}$\n\n>- `4 l r k`\uff1a$\\forall i\\in[l,r]$\uff0c\u8f93\u51fa $\\max\\{a_i\\}$\n\n> $1\\leq n,q\\leq 5\\times 10^5$\uff0c\u6570\u636e\u4e0d\u8d85\u8fc7 $2^{32}-1$\u3002\n\n\u5f88\u660e\u663e\u7528\u7ebf\u6bb5\u6811\u3002\n\n# \u9898\u89e3\u7b80\u8ff0\n\n### \u53d8\u91cf\u8bbe\u8ba1\n\n$v$ \u8868\u793a\u5f53\u524d\u503c\uff1b$ag$ \u5373 $addtag$\uff0c\u64cd\u4f5c\u4e00\u7684\u6807\u8bb0\uff1b$ng$ \u5373 $minchangetag$\uff0c\u64cd\u4f5c\u4e8c\u7684\u6807\u8bb0\uff1b$xg$ \u5373 $maxchangetag$\uff0c\u64cd\u4f5c\u4e09\u7684\u6807\u8bb0\u3002\n\n\u521d\u59cb\u5316\u90e8\u5206\u540e\u6587\u4f1a\u8bb2\u3002\n\n```\nstruct e{int v,ag,ng=2e9,xg=-2e9;}tr[2000005];\n```\n\n### \u5efa\u6811\n\n\u9996\u5148\u6211\u4eec\u5148\u5199 `pushup`\u3002\u6211\u4eec\u5173\u6ce8\u5230\u8f93\u51fa\u53ea\u9700\u8ba9\u6211\u4eec\u8f93\u51fa\u6700\u5927\u503c\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8be5\u8282\u70b9\u53ea\u9700\u8981\u5bf9\u5de6\u53f3\u513f\u5b50\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n```cpp\nvoid PU(int rt){tr[rt].v=tr[ls].v>tr[rs].v?tr[ls].v:tr[rs].v;}\n```\n\n\u7136\u540e\u518d\u8003\u8651\u5efa\u6811\u3002\u9996\u5148\u5173\u6ce8\u5230\u9898\u76ee\u4e2d\u8bf4\u660e\u4e86\u6570\u636e\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u90a3\u4e48 $xg$ \u521d\u59cb\u503c\u9700\u8981\u5b9a\u4e49\u5728\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u7684\u503c\u4e4b\u5916\uff0c\u64cd\u4f5c\u4e2d\u6700\u5927\u589e\u52a0\u7684\u503c\u53ea\u6709 $500$\uff0c\u64cd\u4f5c\u53ea\u6709 $5\\times 10^5$ \u6b21 \uff0c\u6240\u4ee5 $-2\\times 10^9$ \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u53d6\u503c\u3002\u6700\u5c0f\u503c\u540c\u7406\uff0c\u53d6\u4e86 $2\\times 10^9$\u3002\u8fd9\u4e2a\u521d\u59cb\u5316\u6211\u653e\u5728\u4e86\u5f00\u5934\u5b9a\u4e49\u91cc\u9762\u3002\n\n\u5176\u5b83\u5efa\u6811\u7684\u8fc7\u7a0b\u90fd\u6bd4\u8f83\u6a21\u677f\u3002\n\n```cpp\nvoid B(int rt,int l,int r){\n\tif(l==r){tr[rt].v=a[l];return ;}\n\tint mid=l+r>>1;B(ls,l,mid),B(rs,mid+1,r),PU(rt);\n}\n```\n\n### \u6807\u8bb0\u4e0b\u4f20\n\n$v$ \u7684\u66f4\u65b0\u76f4\u63a5\u5bf9\u4e24\u4e2a\u6807\u8bb0\u5206\u522b\u66f4\u65b0\u5373\u53ef\u3002\u7531\u9898\u610f\u5f97\uff0c$xg$ \u66f4\u65b0 $\\max$\uff0c$mg$ \u66f4\u65b0 $\\min$\uff0c$ag$ \u76f4\u63a5\u52a0\u5c31\u884c\u4e86\u3002\n\n$xg$ \u66f4\u65b0\u53ef\u4ee5\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\n\n- \u5982\u679c\u8fdb\u884c\u4e86\u64cd\u4f5c $2$\uff0c\u90a3\u4e48\u524d\u9762\u8f93\u5165\u7684 $k$ \u4f1a\u88ab\u8986\u76d6\uff0c\u6240\u4ee5\u5bf9\u4e8e\u524d\u9762\u7684 $xg$ \u8981\u66f4\u65b0\u3002\u66f4\u65b0\u6b65\u9aa4\u5373\u53d6 $\\min$\u3002\n\n- \u5982\u679c\u8fdb\u884c\u4e86\u64cd\u4f5c $3$\uff0c\u90a3\u4e48\u524d\u9762\u8f93\u5165\u7684 $k$ \u4e5f\u4f1a\u88ab\u8986\u76d6\uff0c\u6240\u4ee5\u5bf9\u4e8e\u524d\u9762\u7684 $xg$ \u8981\u66f4\u65b0\u3002\u66f4\u65b0\u6b65\u9aa4\u5373\u53d6 $\\max$\u3002\n\n- \u5982\u679c\u8fdb\u884c\u4e86\u64cd\u4f5c $4$\uff0c\u90a3\u4e48\u524d\u9762\u8f93\u5165\u7684 $k$ \u4e5f\u4f1a\u88ab\u589e\u52a0\uff0c\u6240\u4ee5\u5bf9\u4e8e $ag$ \u9700\u8981\u66f4\u65b0\u3002\u66f4\u65b0\u8fc7\u7a0b\u5373\u76f4\u63a5\u52a0\u3002\n\n\n\u5bf9\u4e8e $mg$ \u8ddf\u4e0a\u9762\u540c\u7406\u3002\n\n$ag$ \u7684\u589e\u52a0\u8ddf\u53d6 $\\max$ \u548c\u53d6 $\\min$ \u5c31\u6ca1\u6709\u5173\u7cfb\u4e86\u3002\u56e0\u4e3a\u4e0d\u7ba1\u540e\u9762\u8981\u4e0d\u8981\u66f4\u65b0\uff0c\u524d\u9762\u8fd8\u662f\u8981\u52a0\u7684\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u8fbe\u6210\u8986\u76d6\u7684\u6548\u679c\u3002\u4f46\u662f\u540e\u9762\u7684 $ag$ \u7684\u589e\u52a0\u53ef\u4ee5\u8ddf\u524d\u9762\u7684\u5408\u5e76\uff0c\u6240\u4ee5\u6807\u8bb0\u66f4\u65b0\u53ea\u9700\u8981\u7ba1 $ag$ \u5373\u53ef\u3002\n\n\u4e0b\u9762\u4ee3\u7801\u4e2d\uff0c`mn` \u51fd\u6570\u5373\u5bf9\u4e24\u8005\u53d6 $\\min$\uff0c\u53d6 $\\min$ \u7684\u7ed3\u679c\u66f4\u65b0\u5230\u524d\u9762\u7684\u90a3\u4e2a\u6570\u3002`mx` \u51fd\u6570\u5373\u5bf9\u4e24\u8005\u53d6 $\\max$\uff0c\u53d6 $\\max$ \u7684\u7ed3\u679c\u66f4\u65b0\u5230\u524d\u9762\u7684\u90a3\u4e2a\u6570\u3002\n\n```cpp\nvoid PD(int rt){\n\ttr[ls].v+=tr[rt].ag,tr[rs].v+=tr[rt].ag;tr[ls].ag+=tr[rt].ag,tr[rs].ag+=tr[rt].ag;\n\ttr[ls].ng+=(tr[ls].ng==2e9?0:tr[rt].ag),tr[rs].ng+=(tr[rs].ng==2e9?0:tr[rt].ag);\n\ttr[ls].xg+=(tr[ls].xg==2e9?0:tr[rt].ag),tr[rs].xg+=(tr[rs].xg==2e9?0:tr[rt].ag);\n\tmn(tr[ls].v,tr[rt].ng),mx(tr[ls].v,tr[rt].xg);mn(tr[rs].v,tr[rt].ng),mx(tr[rs].v,tr[rt].xg);\n\tmn(tr[ls].ng,tr[rt].ng),mx(tr[ls].ng,tr[rt].xg);mn(tr[rs].ng,tr[rt].ng),mx(tr[rs].ng,tr[rt].xg);\n\tmn(tr[ls].xg,tr[rt].ng),mx(tr[ls].xg,tr[rt].xg);mn(tr[rs].xg,tr[rt].ng),mx(tr[rs].xg,tr[rt].xg);\n\ttr[rt].ag=0;tr[rt].ng=2e9,tr[rt].xg=-2e9;\n}\n```\n### \u4fee\u6539\u51fd\u6570\n\n\u5176\u5b9e\u6ca1\u5fc5\u8981\u628a\u4e09\u4e2a\u4fee\u6539\u5206\u5f00\u5199\u3002\u4e3b\u8981\u8fc7\u7a0b\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5199\u5230\u4e00\u4e2a\u51fd\u6570\u4e2d\u5373\u53ef\u3002\n\n$v$\u3001$xg$\u3001$ng$\u3001$ag$ \u7684\u4fee\u6539\u539f\u7406\u8ddf `pushdown` \u51fd\u6570\u7684\u903b\u8f91\u662f\u4e00\u6837\u7684\u3002`change` \u51fd\u6570\u5176\u5b9e\u4e5f\u6bd4\u8f83\u6a21\u677f\u3002\n\n$op$ \u662f\u64cd\u4f5c\u7f16\u53f7\u3002\n\n```cpp\nvoid C(int op,int rt,int l,int r,int ql,int qr,int v){\n\tif(ql<=l&&r<=qr){\n\t\tif(op==1)tr[rt].v+=v,tr[rt].ag+=v,tr[rt].ng+=(tr[rt].ng==2e9?0:v),tr[rt].xg+=(tr[rt].xg==-2e9?0:v);\n\t\tif(op==2)mn(tr[rt].v,v),mn(tr[rt].xg,v),mn(tr[rt].ng,v);\n\t\tif(op==3)mx(tr[rt].v,v),mx(tr[rt].xg,v),mx(tr[rt].ng,v);\n\t\treturn ;\n\t}\n\tPD(rt);int mid=l+r>>1;\n\tif(ql<=mid)C(op,ls,l,mid,ql,qr,v);\n\tif(qr>mid)C(op,rs,mid+1,r,ql,qr,v);\n\tPU(rt);\n}\n```\n\n### \u8be2\u95ee\u51fd\u6570\n\n\u633a\u7b80\u5355\u7684\uff0c\u5c31\u4e0d\u8fc7\u591a\u8bb2\u8ff0\u4e86\u3002\n\n```cpp\nint Q(int rt,int l,int r,int ql,int qr){\n\tif(ql<=l&&r<=qr)return tr[rt].v;\n\tPD(rt);int mid=l+r>>1,ans=-2e9;\n\tif(ql<=mid)ans=Q(ls,l,mid,ql,qr);\n\tif(qr>mid)mx(ans,Q(ls|1,mid+1,r,ql,qr));\n\treturn ans;\n}\n```\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ls rt<<1\n#define rs rt<<1|1\nint n,m,a[500005];\nstruct e{int v,ag,ng=2e9,xg=-2e9;}tr[2000005];\nvoid mx(int &x,int y){x=x>y?x:y;}\nvoid mn(int &x,int y){x=x<y?x:y;}\nvoid PU(int rt){tr[rt].v=tr[ls].v>tr[rs].v?tr[ls].v:tr[rs].v;}\nvoid PD(int rt){\n\ttr[ls].v+=tr[rt].ag,tr[rs].v+=tr[rt].ag;tr[ls].ag+=tr[rt].ag,tr[rs].ag+=tr[rt].ag;\n\ttr[ls].ng+=(tr[ls].ng==2e9?0:tr[rt].ag),tr[rs].ng+=(tr[rs].ng==2e9?0:tr[rt].ag);\n\ttr[ls].xg+=(tr[ls].xg==2e9?0:tr[rt].ag),tr[rs].xg+=(tr[rs].xg==2e9?0:tr[rt].ag);\n\tmn(tr[ls].v,tr[rt].ng),mx(tr[ls].v,tr[rt].xg);mn(tr[rs].v,tr[rt].ng),mx(tr[rs].v,tr[rt].xg);\n\tmn(tr[ls].ng,tr[rt].ng),mx(tr[ls].ng,tr[rt].xg);mn(tr[rs].ng,tr[rt].ng),mx(tr[rs].ng,tr[rt].xg);\n\tmn(tr[ls].xg,tr[rt].ng),mx(tr[ls].xg,tr[rt].xg);mn(tr[rs].xg,tr[rt].ng),mx(tr[rs].xg,tr[rt].xg);\n\ttr[rt].ag=0;tr[rt].ng=2e9,tr[rt].xg=-2e9;\n}\nvoid B(int rt,int l,int r){\n\tif(l==r){tr[rt].v=a[l];return ;}\n\tint mid=l+r>>1;B(ls,l,mid),B(rs,mid+1,r),PU(rt);\n}\nvoid C(int op,int rt,int l,int r,int ql,int qr,int v){\n\tif(ql<=l&&r<=qr){\n\t\tif(op==1)tr[rt].v+=v,tr[rt].ag+=v,tr[rt].ng+=(tr[rt].ng==2e9?0:v),tr[rt].xg+=(tr[rt].xg==-2e9?0:v);\n\t\tif(op==2)mn(tr[rt].v,v),mn(tr[rt].xg,v),mn(tr[rt].ng,v);\n\t\tif(op==3)mx(tr[rt].v,v),mx(tr[rt].xg,v),mx(tr[rt].ng,v);\n\t\treturn ;\n\t}\n\tPD(rt);int mid=l+r>>1;\n\tif(ql<=mid)C(op,ls,l,mid,ql,qr,v);\n\tif(qr>mid)C(op,rs,mid+1,r,ql,qr,v);\n\tPU(rt);\n}\nint Q(int rt,int l,int r,int ql,int qr){\n\tif(ql<=l&&r<=qr)return tr[rt].v;\n\tPD(rt);int mid=l+r>>1,ans=-2e9;\n\tif(ql<=mid)ans=Q(ls,l,mid,ql,qr);\n\tif(qr>mid)mx(ans,Q(ls|1,mid+1,r,ql,qr));\n\treturn ans;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);B(1,1,n);\n\tfor(int o,x,y,z,i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&o,&x,&y);\n\t\tif(o!=4)scanf(\"%d\",&z),C(o,1,1,n,x,y,z);\n\t\telse printf(\"%d\\n\",Q(1,1,n,x,y));\n\t}\n\treturn 0;\n}\n\n```\n\n\n## \u5de9\u56fa\uff1a\n\n[P2572 \u5e8f\u5217\u64cd\u4f5c](https://www.luogu.com.cn/problem/P2572)\n\n[P4560 [IOI2014] Wall \u7816\u5899](https://www.luogu.com.cn/problem/P4560)\n",
        "postTime": 1673159088,
        "uid": 401088,
        "name": "xs_siqi",
        "ccfLevel": 6,
        "title": "P8024\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u7ffb\u8bd1\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u9898\u9762\u3002\n\n- \u64cd\u4f5c $1$\uff1a\u5bf9 $[l,r]$ \u533a\u95f4\u52a0\u4e0a $c$\u3002\n\n- \u64cd\u4f5c $2$\uff1a\u5bf9 $[l,r]$ \u533a\u95f4\u548c $h$ \u6bd4\u8f83\u53d6 $\\min$ \u503c\u3002\n\n- \u64cd\u4f5c $3$\uff1a\u5bf9 $[l,r]$ \u533a\u95f4\u548c $h$ \u6bd4\u8f83\u53d6 $\\max$ \u503c\u3002\n\n- \u64cd\u4f5c $4$\uff1a\u8be2\u95ee $[l,r]$ \u533a\u95f4\u7684\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u5f88\u660e\u663e\u662f\u4e00\u9053\u5f88\u677f\u5b50\u7684\u9898\u4e86\uff0c\u5c31\u662f\u7ebf\u6bb5\u6811\u840c\u65b0\u53ef\u505a\u9898\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u70b9\u8fdb\u884c\u8bb2\u8ff0\u3002\n\n### \u6811\u7684\u8282\u70b9\n\n\u6211\u4eec\u7ed9\u6bcf\u4e2a\u8282\u70b9\u8d4b\u4e0a\u533a\u95f4 $[l,r]$\uff0c\u6700\u5927\u503c $maxx$\uff0c\u6700\u5927\u503c\u61d2\u6807\u8bb0 $maxTar$\uff0c\u6700\u5c0f\u503c\u61d2\u6807\u8bb0 $minTar$\uff0c\u548c\u533a\u95f4\u52a0\u548c\u61d2\u6807\u8bb0 $Tar$ \u7684\u503c\u3002\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\u95ee\u9898\uff0c\u61d2\u6807\u8bb0\u662f\u4e07\u4e07\u4e0d\u80fd\u7f3a\u5c11\u7684\u3002\u8fd9\u91cc\u7684\u53d8\u91cf\u540d\u4e0d\u8981\u7ea0\u7ed3\uff0c\u8fd9\u53ea\u662f\u5bf9\u4e8e\u6211\u6765\u8bf4\u597d\u770b\u800c\u5df2\u3002\n\n### \u5efa\u6811\n\n\u5efa\u6811\u662f\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u901a\u8fc7\u5206\u6cbb\u6cd5\u9010\u4e2a\u7ed9\u6bcf\u4e2a\u8282\u70b9\u9644\u4e0a\u76f8\u5e94\u7684\u503c\uff0c\u5c31\u662f\u533a\u95f4\u548c\u6700\u5927\u503c\u7684\u8bbe\u7f6e\u3002\u5f53\u8282\u70b9\u533a\u95f4\u957f\u5ea6\u4e3a $1$ \u65f6\uff0c\u6700\u5927\u503c\u76f4\u63a5\u8d4b\u4e3a $a_l$\u3002\n\n```cpp\nvoid build_tree(int now,int l,int r)\n{\n\ttree[now].l=l,tree[now].r=r,tree[now].maxTar=-1e18,tree[now].minTar=1e18;\n\tif(l==r)\n\t{\n\t\ttree[now].maxx=a[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild_tree(now<<1,l,mid);\n\tbuild_tree(now<<1|1,mid+1,r);\n\ttree[now].maxx=max(tree[now<<1].maxx,tree[now<<1|1].maxx);\n}\n```\n\n### \u533a\u95f4\u52a0\u6cd5\n\n\u8fd9\u662f\u7ebf\u6bb5\u6811\u7684\u61d2\u6807\u8bb0\u6a21\u677f\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u88ab\u9700\u8981\u52a0\u548c\u7684\u533a\u95f4\u5b8c\u5168\u8986\u76d6\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7ed9\u8fd9\u4e2a\u533a\u95f4\u8282\u70b9\u52a0\u4e00\u4e2a\u61d2\u6807\u8bb0\uff0c\u6bcf\u6b21\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u533a\u95f4\u7684\u5177\u4f53\u6570\u636e\u65f6\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u5c06\u8fd9\u4e2a\u61d2\u6807\u8bb0\u5411\u4e0b\u4f20\u64ad\u3002\u540c\u65f6\uff0c\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u4e5f\u4f1a\u52a0\u4e0a\u8fd9\u4e2a\u503c\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u524d\u9762\u5df2\u7ecf\u6709\u4e86\u6700\u5c0f\u503c\u61d2\u6807\u8bb0\u548c\u6700\u5927\u503c\u61d2\u6807\u8bb0\uff0c\u5bb9\u6613\u77e5\u9053\u5b83\u4eec\u662f\u5728\u52a0\u548c\u4e4b\u524d\u52a0\u4e0a\u53bb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ed9\u8fd9\u4e24\u4e2a\u61d2\u6807\u8bb0\u4e5f\u52a0\u4e0a\u533a\u95f4\u52a0\u6cd5\u7684\u61d2\u6807\u8bb0\uff08\u901a\u4fd7\u7684\u8bf4\uff0c\u5c31\u662f\u8fd9\u4e2a\u503c\u968f\u7740\u6574\u4f53\u6539\u53d8\u800c\u4ea7\u751f\u6539\u53d8\uff09\u3002\n\n```cpp\nvoid change_sum_tree(int now,int l,int r,int v)\n{\n\tif(l<=tree[now].l&&tree[now].r<=r)\n\t{\n\t\ttree[now].maxx+=v,tree[now].Tar+=v;\n\t\tif(tree[now].maxTar!=-1e18)\ttree[now].maxTar+=v;\n\t\tif(tree[now].minTar!=1e18)\ttree[now].minTar+=v;\n\t\treturn;\n\t}\n\tfixed_tree(now);\n\tint mid=(tree[now].l+tree[now].r)/2;\n\tif(l<=mid)\tchange_sum_tree(now<<1,l,r,v);\n\tif(r>mid)\tchange_sum_tree(now<<1|1,l,r,v);\n\ttree[now].maxx=max(tree[now<<1].maxx,tree[now<<1|1].maxx);\n}\n```\n\n### \u533a\u95f4\u53d6\u6700\u5927\u503c\n\n\u61d2\u6807\u8bb0\u601d\u8def\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e2a\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\uff0c\u7136\u540e\u5c31\u662f\u4e0a\u6587\u63d0\u5230\u7684\u6574\u4f53\u601d\u60f3\uff0c\u4e00\u4e2a\u533a\u95f4\u88ab\u6539\u53d8\u4e86\uff0c\u5185\u90e8\u7684\u5176\u5b83\u4e3a\u4f7f\u7528\u53d8\u91cf\u4e5f\u5e94\u8be5\u968f\u4e4b\u8fdb\u884c\u76f8\u5e94\u7684\u6539\u53d8\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7528\u6539\u53d8\u533a\u95f4\u52a0\u548c\u61d2\u6807\u8bb0\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u4f1a\u8be2\u95ee\u6700\u5927\u503c\uff0c\u8fd9\u4e2a\u52a0\u548c\u73b0\u5728\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5b9e\u9645\u7684\u6700\u5927\u503c\u3002\u800c\u53d6 $\\min$ \u548c $\\max$ \u7684\u61d2\u6807\u8bb0\u662f\u9700\u8981\u6539\u53d8\u7684\u3002\n\n```cpp\nvoid change_max_tree(int now,int l,int r,int v)\n{\n\tif(l<=tree[now].l&&tree[now].r<=r)\n\t{\n\t\ttree[now].maxx=max(tree[now].maxx,v*1ll);\n\t\ttree[now].maxTar=max(tree[now].maxTar,v*1ll);\n\t\ttree[now].minTar=max(tree[now].minTar,v*1ll);\n\t\treturn;\n\t}\n\tfixed_tree(now);\n\tint mid=(tree[now].l+tree[now].r)/2;\n\tif(l<=mid)\tchange_max_tree(now<<1,l,r,v);\n\tif(r>mid)\tchange_max_tree(now<<1|1,l,r,v);\n\ttree[now].maxx=max(tree[now<<1].maxx,tree[now<<1|1].maxx); \n}\n```\n\n### \u533a\u95f4\u53d6\u6700\u5c0f\u503c\n\n\u548c\u4e0a\u8ff0\u601d\u8def\u4e00\u81f4\uff0c\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\uff0c\u539f\u7406\u90fd\u662f\u4e00\u81f4\u7684\u3002\n\n```cpp\nvoid change_min_tree(int now,int l,int r,int v)\n{\n\tif(l<=tree[now].l&&tree[now].r<=r)\n\t{\n\t\ttree[now].maxx=min(tree[now].maxx,v*1ll);\n\t\ttree[now].minTar=min(tree[now].minTar,v*1ll);\n\t\ttree[now].maxTar=min(tree[now].maxTar,v*1ll);\n\t\treturn;\n\t}\n\tfixed_tree(now);\n\tint mid=(tree[now].l+tree[now].r)/2;\n\tif(l<=mid)\tchange_min_tree(now<<1,l,r,v);\n\tif(r>mid)\tchange_min_tree(now<<1|1,l,r,v);\n\ttree[now].maxx=max(tree[now<<1].maxx,tree[now<<1|1].maxx); \n}\n```\n\n### \u61d2\u6807\u8bb0\u4e0b\u4f20\n\n\u6700\u5927\u5de5\u7a0b\u73af\u8282\uff0c\u6211\u4eec\u7684\u61d2\u6807\u8bb0\u53ea\u9700\u8981\u5411\u81ea\u5df1\u7684\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u8fdb\u884c\u4f20\u64ad\uff0c\u8003\u8651\u5230\u6574\u4f53\u5f71\u54cd\u7684\u56e0\u7d20\uff0c\u6211\u4eec\u4f9d\u7136\u8981\u6309\u7167\u4e0a\u6587\u7684\u601d\u8def\u5bf9\u4e24\u4e2a\u513f\u5b50\u7684\u61d2\u6807\u8bb0\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\uff0c\u800c\u4e14\u4e0b\u4f20\u5b8c\u4e4b\u540e\uff0c\u8fd9\u4e2a\u61d2\u6807\u8bb0\u662f\u5fc5\u987b\u8981\u6e05\u9664\u7684\uff0c\u4e0d\u6e05\u9664\u7684\u8bdd\u4f1a\u5bf9\u540e\u9762\u65b0\u7684\u61d2\u6807\u8bb0\u4ea7\u751f\u5f71\u54cd\u3002\u5177\u4f53\u7684\u53ef\u4ee5\u770b\u4ee3\u7801\uff0c\u6216\u8005\u6a21\u677f\u3002\n\n```cpp\nvoid fixed_tree(int now)\n{\n\tif(tree[now].Tar)\n\t{\n\t\ttree[now<<1].Tar+=tree[now].Tar,tree[now<<1|1].Tar+=tree[now].Tar;\n\t\ttree[now<<1].maxx+=tree[now].Tar,tree[now<<1|1].maxx+=tree[now].Tar;\n\t\tif(tree[now<<1].maxTar!=-1e18)\ttree[now<<1].maxTar+=tree[now].Tar;\n\t\tif(tree[now<<1|1].maxTar!=-1e18)\ttree[now<<1|1].maxTar+=tree[now].Tar;\n\t\tif(tree[now<<1].minTar!=1e18)\ttree[now<<1].minTar+=tree[now].Tar;\n\t\tif(tree[now<<1|1].minTar!=1e18)\ttree[now<<1|1].minTar+=tree[now].Tar;\n\t\ttree[now].Tar=0;\n\t}\n\tif(tree[now].maxTar!=-1e18)\n\t{\n\t\ttree[now<<1].maxTar=max(tree[now<<1].maxTar,tree[now].maxTar);\n\t\ttree[now<<1|1].maxTar=max(tree[now<<1|1].maxTar,tree[now].maxTar);\n\t\ttree[now<<1].maxx=max(tree[now<<1].maxx,tree[now].maxTar);\n\t\ttree[now<<1|1].maxx=max(tree[now<<1|1].maxx,tree[now].maxTar);\n\t\ttree[now<<1].minTar=max(tree[now<<1].minTar,tree[now].maxTar);\n\t\ttree[now<<1|1].minTar=max(tree[now<<1|1].minTar,tree[now].maxTar);\n\t\ttree[now].maxTar=-1e18;\n\t}\n\tif(tree[now].minTar!=1e18)\n\t{\n\t\ttree[now<<1].maxTar=min(tree[now<<1].maxTar,tree[now].minTar);\n\t\ttree[now<<1|1].maxTar=min(tree[now<<1|1].maxTar,tree[now].minTar);\n\t\ttree[now<<1].minTar=min(tree[now<<1].minTar,tree[now].minTar);\n\t\ttree[now<<1|1].minTar=min(tree[now<<1|1].minTar,tree[now].minTar);\n\t\ttree[now<<1].maxx=min(tree[now<<1].maxx,tree[now].minTar);\n\t\ttree[now<<1|1].maxx=min(tree[now<<1|1].maxx,tree[now].minTar);\n\t\ttree[now].minTar=1e18;\n\t}\n}\n```\n\n### \u533a\u95f4\u8be2\u95ee\u6700\u5927\u503c\n\n\u8fd9\u4e2a\u7531\u4e8e\u6211\u4eec\u4ee5\u524d\u5df2\u7ecf\u7edf\u8ba1\u4e86\u6700\u5927\u503c\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8fdb\u884c\u5206\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u6240\u6709\u7684\u518d\u53d6\u4e00\u4e2a\u6574\u4f53\u6700\u5927\u503c\u3002\u8003\u8651\u5230\u8fd9\u91cc\u662f\u53ef\u80fd\u9700\u8981\u5c06\u533a\u95f4\u8fdb\u884c\u62c6\u5206\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e0b\u4f20\u61d2\u6807\u8bb0\u3002\n\n```cpp\nlong long query(int now,int l,int r)\n{\n\tif(l<=tree[now].l&&tree[now].r<=r)\treturn tree[now].maxx;\n\tfixed_tree(now);\n\tlong long res=-1e18;\n\tint mid=(tree[now].l+tree[now].r)/2;\n\tif(l<=mid)\tres=max(res,query(now<<1,l,r));\n\tif(r>mid)\tres=max(res,query(now<<1|1,l,r));\n\treturn res;\n}\n```\n\n### \u5c0f\u5c0f\u5361\u5e38\n\n\u8fd9\u6837\u5199\u8c8c\u4f3c\u53ef\u80fd\u4f1a\u5f88\u6162\uff0c\u53c8\u8003\u8651\u5230\u8f93\u5165\u7684\u6570\u636e\u7c7b\u578b\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u4e24\u4e2a\u5feb\u8bfb\u3002\n\n### \u5168\u90e8\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=5e5+5;\nint n,m;\nlong long a[MAXN];\nstruct node\n{\n\tint l,r;\n\tlong long maxx,Tar,maxTar,minTar;\n}tree[MAXN<<2];\nvoid build_tree(int now,int l,int r)\n{\n\ttree[now].l=l,tree[now].r=r,tree[now].maxTar=-1e18,tree[now].minTar=1e18;\n\tif(l==r)\n\t{\n\t\ttree[now].maxx=a[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild_tree(now<<1,l,mid);\n\tbuild_tree(now<<1|1,mid+1,r);\n\ttree[now].maxx=max(tree[now<<1].maxx,tree[now<<1|1].maxx);\n}\nvoid fixed_tree(int now)\n{\n\tif(tree[now].Tar)\n\t{\n\t\ttree[now<<1].Tar+=tree[now].Tar,tree[now<<1|1].Tar+=tree[now].Tar;\n\t\ttree[now<<1].maxx+=tree[now].Tar,tree[now<<1|1].maxx+=tree[now].Tar;\n\t\tif(tree[now<<1].maxTar!=-1e18)\ttree[now<<1].maxTar+=tree[now].Tar;\n\t\tif(tree[now<<1|1].maxTar!=-1e18)\ttree[now<<1|1].maxTar+=tree[now].Tar;\n\t\tif(tree[now<<1].minTar!=1e18)\ttree[now<<1].minTar+=tree[now].Tar;\n\t\tif(tree[now<<1|1].minTar!=1e18)\ttree[now<<1|1].minTar+=tree[now].Tar;\n\t\ttree[now].Tar=0;\n\t}\n\tif(tree[now].maxTar!=-1e18)\n\t{\n\t\ttree[now<<1].maxTar=max(tree[now<<1].maxTar,tree[now].maxTar);\n\t\ttree[now<<1|1].maxTar=max(tree[now<<1|1].maxTar,tree[now].maxTar);\n\t\ttree[now<<1].maxx=max(tree[now<<1].maxx,tree[now].maxTar);\n\t\ttree[now<<1|1].maxx=max(tree[now<<1|1].maxx,tree[now].maxTar);\n\t\ttree[now<<1].minTar=max(tree[now<<1].minTar,tree[now].maxTar);\n\t\ttree[now<<1|1].minTar=max(tree[now<<1|1].minTar,tree[now].maxTar);\n\t\ttree[now].maxTar=-1e18;\n\t}\n\tif(tree[now].minTar!=1e18)\n\t{\n\t\ttree[now<<1].maxTar=min(tree[now<<1].maxTar,tree[now].minTar);\n\t\ttree[now<<1|1].maxTar=min(tree[now<<1|1].maxTar,tree[now].minTar);\n\t\ttree[now<<1].minTar=min(tree[now<<1].minTar,tree[now].minTar);\n\t\ttree[now<<1|1].minTar=min(tree[now<<1|1].minTar,tree[now].minTar);\n\t\ttree[now<<1].maxx=min(tree[now<<1].maxx,tree[now].minTar);\n\t\ttree[now<<1|1].maxx=min(tree[now<<1|1].maxx,tree[now].minTar);\n\t\ttree[now].minTar=1e18;\n\t}\n}\nvoid change_sum_tree(int now,int l,int r,int v)\n{\n\tif(l<=tree[now].l&&tree[now].r<=r)\n\t{\n\t\ttree[now].maxx+=v,tree[now].Tar+=v;\n\t\tif(tree[now].maxTar!=-1e18)\ttree[now].maxTar+=v;\n\t\tif(tree[now].minTar!=1e18)\ttree[now].minTar+=v;\n\t\treturn;\n\t}\n\tfixed_tree(now);\n\tint mid=(tree[now].l+tree[now].r)/2;\n\tif(l<=mid)\tchange_sum_tree(now<<1,l,r,v);\n\tif(r>mid)\tchange_sum_tree(now<<1|1,l,r,v);\n\ttree[now].maxx=max(tree[now<<1].maxx,tree[now<<1|1].maxx);\n}\nvoid change_max_tree(int now,int l,int r,int v)\n{\n\tif(l<=tree[now].l&&tree[now].r<=r)\n\t{\n\t\ttree[now].maxx=max(tree[now].maxx,v*1ll);\n\t\ttree[now].maxTar=max(tree[now].maxTar,v*1ll);\n\t\ttree[now].minTar=max(tree[now].minTar,v*1ll);\n\t\treturn;\n\t}\n\tfixed_tree(now);\n\tint mid=(tree[now].l+tree[now].r)/2;\n\tif(l<=mid)\tchange_max_tree(now<<1,l,r,v);\n\tif(r>mid)\tchange_max_tree(now<<1|1,l,r,v);\n\ttree[now].maxx=max(tree[now<<1].maxx,tree[now<<1|1].maxx); \n}\nvoid change_min_tree(int now,int l,int r,int v)\n{\n\tif(l<=tree[now].l&&tree[now].r<=r)\n\t{\n\t\ttree[now].maxx=min(tree[now].maxx,v*1ll);\n\t\ttree[now].minTar=min(tree[now].minTar,v*1ll);\n\t\ttree[now].maxTar=min(tree[now].maxTar,v*1ll);\n\t\treturn;\n\t}\n\tfixed_tree(now);\n\tint mid=(tree[now].l+tree[now].r)/2;\n\tif(l<=mid)\tchange_min_tree(now<<1,l,r,v);\n\tif(r>mid)\tchange_min_tree(now<<1|1,l,r,v);\n\ttree[now].maxx=max(tree[now<<1].maxx,tree[now<<1|1].maxx); \n}\nlong long query(int now,int l,int r)\n{\n\tif(l<=tree[now].l&&tree[now].r<=r)\treturn tree[now].maxx;\n\tfixed_tree(now);\n\tlong long res=-1e18;\n\tint mid=(tree[now].l+tree[now].r)/2;\n\tif(l<=mid)\tres=max(res,query(now<<1,l,r));\n\tif(r>mid)\tres=max(res,query(now<<1|1,l,r));\n\treturn res;\n}\nvoid read(int &x)\n{\n\tx=0;\n\tshort flag=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\tflag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\tx*=flag;\n}\nvoid rd(long long &x)\n{\n\tx=0;\n\tshort flag=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\tflag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\tx*=flag;\n}\nint main()\n{\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++)\trd(a[i]);\n\tbuild_tree(1,1,n);\n\twhile(m--)\n\t{\n\t\tint opt;\n\t\tint x,y,z;\n\t\tread(opt),read(x),read(y);\n\t\tif(opt==1)\n\t\t{\n\t\t\tread(z);\n\t\t\tchange_sum_tree(1,x,y,z);\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tread(z);\n\t\t\tchange_min_tree(1,x,y,z);\n\t\t}\n\t\tif(opt==3)\n\t\t{\n\t\t\tread(z);\n\t\t\tchange_max_tree(1,x,y,z);\n\t\t}\n\t\tif(opt==4)\tprintf(\"%lld\\n\",query(1,x,y));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1673316763,
        "uid": 439177,
        "name": "Super_Sheep",
        "ccfLevel": 0,
        "title": "P8024\u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8024)\r\n\r\n## \u9898\u5916\u8bdd\r\n\r\n\u521a\u5199\u5b8c\u5c31\u7531\u84dd\u53d8\u7d2b\u4e86\r\n\r\n\u8fd9\u9898\u4e0e[\u8fd9\u4e2a](https://www.luogu.com.cn/problem/P4560)\u8c8c\u4f3c\u5dee\u4e0d\u591a\uff1f~~\u53cc\u500d\u7d2b\u8272\u7ecf\u9a8c~~\r\n\r\n## \u6b63\u6587\r\n\r\n### \u9898\u610f\u7b80\u5316\r\n\r\n\u5bf9\u4e00\u4e2a\u5e8f\u5217\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\r\n\r\n* \u64cd\u4f5c 1\uff1a$ l $ \u5230 $ r $ \u4e4b\u95f4\u7684\u6570\u52a0\u4e0a $ c $\u3002\r\n\r\n* \u64cd\u4f5c 2\uff1a$ l $ \u5230 $ r $ \u4e4b\u95f4\u7684\u6570\u4e0e $ h $ \u53d6 $ \\min $\u3002\r\n\r\n* \u64cd\u4f5c 3\uff1a$ l $ \u5230 $ r $ \u4e4b\u95f4\u7684\u6570\u4e0e $ h $ \u53d6 $ \\max $\u3002\r\n\r\n* \u64cd\u4f5c 4\uff1a\u8be2\u95ee $ l $ \u5230 $ r $ \u4e4b\u95f4\u7684\u6700\u5927\u503c\u3002\r\n\r\n### \u601d\u8def\r\n\r\n\u663e\u7136\u7684\uff0c\u672c\u9898\u5e94\u4f7f\u7528**\u7ebf\u6bb5\u6811**\u3002\r\n\r\n1. \u5bf9\u4e8e\u64cd\u4f5c\u4e00\uff0c\u662f\u57fa\u7840\u7684\u533a\u95f4\u52a0\u64cd\u4f5c\uff0c\u7ef4\u62a4\u4e00\u4e2a $ addtag $ \u5373\u53ef\u3002\r\n\r\n1. \u5bf9\u4e8e\u64cd\u4f5c\u4e8c\u548c\u4e09\uff0c\u4e0e\u5176\u4ed6\u64cd\u4f5c\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u8bf7\u770b\u4e0b\u9762\u5206\u6790\u3002\r\n\r\n1. \u5bf9\u4e8e\u64cd\u4f5c\u56db\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u503c\uff0c\u5f88\u57fa\u7840\uff0c\u7ef4\u62a4 $ maxtree $ \u5373\u53ef\u3002\r\n\r\n### \u5206\u6790\r\n\r\n\u5bf9\u4e8e\u533a\u95f4\u52a0\u7684 $ addtag $ \u8fd9\u91cc\u4e0d\u8bb2\u3002\r\n\r\n\u53ea\u8be6\u7ec6\u8bb2\u89e3 $ mintag $ \u2014\u2014\u533a\u95f4\u53d6 $ \\min $ \u4e0e $ maxtag $ \u2014\u2014\u533a\u95f4\u53d6 $ \\max $\u3002\r\n\r\neg1: \uff08\u8fd9\u91cc\u5bf9\u6574\u4f53\u64cd\u4f5c\u65b9\u4fbf\u7406\u89e3\uff09\r\n\r\n```\r\n\u5e8f\u5217\uff1a\r\n3 7 5 4 3 2 \u6700\u5927\u503c\uff1a7\r\n\u4e0e 3 \u53d6 max \u540e\uff1a\r\n3 7 5 4 3 3 \u6700\u5927\u503c\uff1a7\r\n\u4e0e 5 \u53d6 max \u540e:\r\n5 7 5 5 5 5 \u6700\u5927\u503c\uff1a7\r\n```\r\n\r\n\u7531\u4e0a\u9762\u7684\u6817\u5b50\u53ef\u4ee5\u770b\u51fa\uff1a\u591a\u4e2a\u8fde\u7eed $ max $ \u64cd\u4f5c\u53ea\u9700\u8981\u53d6\u6700\u5927\u7684\u5373\u53ef\u3002\r\n\r\n\u5373 : $ maxtag \\gets \\max(maxtag,h) $\uff0c\r\n\t $ maxtree \\gets \\max(maxtree,h) $\u3002\r\n\r\n\u540c\u7406 \uff1a $ mintag \\gets \\min(mitag,h) $\uff0c\r\n\t\t$ maxtree \\gets \\min(maxtree,h) $\u3002\r\n\r\n\u4f46\u8fd9\u91cc\u6700\u9ebb\u70e6\u7684\u662f\u53d6 $ \\min $ \u548c\u53d6 $ \\max $ \u4e4b\u95f4\u7684\u4e92\u76f8\u5f71\u54cd\u3002\r\n\r\neg2:(\u540c\u4e0a\u8fd9\u91cc\u64cd\u4f5c\u5bf9\u6574\u4f53)\r\n\r\n```\r\n\u5e8f\u5217\uff1a\r\n2 3 7 6 5 1 9 \r\n\u4e0e 6 \u53d6 max \u540e\uff1a\r\n6 6 7 6 6 6 9\r\n\u4e0e 4 \u53d6 min \u540e\uff1a\r\n4 4 4 4 4 4 4\r\n\u4e0e 5 \u53d6 max \u540e\uff1a\r\n5 5 5 5 5 5 5\r\n```\r\n\u5982\u4e0a\u9762\u7684\u6817\u5b50\uff0c\u53ef\u53d1\u73b0\u53d6 $ \\max $ \u7684\u64cd\u4f5c\u5e76**\u4e0d\u5f71\u54cd**\u53d6 $ \\min $\u3002\r\n\r\n\u4ee5\u4e0a\u7684\u64cd\u4f5c\u5176\u5b9e\u7b49\u540c\u4e8e\uff1a\u5148\u4e0e $ 4 $ \u53d6 $ \\min $ \u518d\u4e0e $ 5 $ \u53d6 $ \\max $\u3002\r\n\r\neg3:\uff08\u2026\uff09\r\n\r\n```\r\n\u5e8f\u5217\uff1a\r\n2 3 7 6 5 1 9\r\n\u4e0e 4 \u53d6 min \u540e\uff1a\r\n2 3 4 4 4 1 4\r\n\u4e0e 6 \u53d6 max \u540e\uff1a\r\n6 6 6 6 6 6 6\r\n\u4e0e 5 \u53d6 min \u540e\uff1a\r\n5 5 5 5 5 5 5  \r\n```\r\n\u5982\u4e0a\u9762\u7684\u6817\u5b50\uff0c\u53ef\u53d1\u73b0\u53d6 $ \\min $ \u7684\u64cd\u4f5c**\u5f71\u54cd**\u53d6 $ \\max $\u3002\r\n\r\n\u4ee5\u4e0a\u64cd\u4f5c\u5176\u5b9e\u7b49\u540c\u4e8e\uff1a\u540c\u65f6\u4e0e $ 5 $ \u53d6 $ \\max $ \u4e0e $ \\min $\u3002 \r\n\r\n\u6240\u4ee5\uff0c$ maxtag $ \u662f\u5728\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u65f6\u4e0e $ h $ \u5373 $ 5 $ \u53d6 $ \\min $ \u4e86\u3002\r\n\r\n#### \u7ed3\u8bba\r\n\r\n\u7efc\u4e0a\u6240\u8ff0\uff1a\r\n\r\n* \u533a\u95f4\u52a0\u4e0d\u53d9\u8ff0\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\r\n\r\n* \u53d6 $ max $ \u65f6\u53ea\u9700\u4e24\u4e2a\u64cd\u4f5c\uff1a\r\n\r\n1. $ maxtree \\gets \\max(maxtree,h) $\r\n\r\n1. $ maxtag \\gets \\max(maxtag,h) $\r\n\r\n* \u53d6 $ min $ \u65f6\u9700\u4e09\u4e2a\u64cd\u4f5c\uff1a\r\n\r\n1. $ mintree \\gets \\min(maxtree,h) $\r\n\r\n1. $ mintag \\gets \\min(mintag,h) $\r\n\r\n1. $ maxtag \\gets \\min(maxtag,h) $\r\n\r\n## Code\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n\t\r\nusing namespace std;\r\n\t\r\nconst int N=5*1e5+10;\r\nconst int INF=2e9;\r\nstruct Yan\r\n{\t\r\n\tint l,r;\r\n\tint maxt;\r\n\tint atg,ntg,xtg;\r\n}tr[N*4];\r\nint w[N];\r\nint n,m;\r\n\r\nvoid moveadd(Yan &u,int s)//\u7b80\u5316\u4ee3\u7801\r\n{\r\n\tu.maxt+=s;\r\n\tu.atg+=s;\r\n\tu.xtg+=s;\r\n\tu.ntg+=s;\r\n}\r\nvoid moven(Yan &u,int s)\r\n{\r\n\tu.maxt=min(u.maxt,s);\r\n\tu.xtg=min(u.xtg,s);\r\n\tu.ntg=min(u.ntg,s);\r\n}\r\nvoid movex(Yan &u,int s)\r\n{\r\n\tu.maxt=max(u.maxt,s);\r\n\tu.xtg=max(u.xtg,s);\r\n}\r\nvoid pushup(Yan &u,Yan &l,Yan &r)\r\n{\t\r\n\tu.maxt=max(l.maxt,r.maxt);\r\n}\t\r\nvoid pushdown(Yan &u,Yan &l,Yan &r)\r\n{\r\n\tmoveadd(l,u.atg);moveadd(r,u.atg);\r\n\tu.atg=0;\r\n\tmoven(l,u.ntg);moven(r,u.ntg);\r\n\tu.ntg=INF;\r\n\tmovex(l,u.xtg);movex(r,u.xtg);\r\n\tu.xtg=-INF;\r\n} \r\nvoid pushdown(int u)\r\n{\t\r\n\tpushdown(tr[u],tr[u<<1],tr[u<<1|1]);\r\n}\t\r\nvoid pushup(int u)\r\n{\t\r\n\tpushup(tr[u],tr[u<<1],tr[u<<1|1]);\r\n}\t\r\nvoid build(int u,int l,int r)\r\n{\t\r\n\ttr[u].l=l,tr[u].r=r;\r\n\ttr[u].ntg=INF,tr[u].xtg=-INF;\r\n\tif(l==r) tr[u].maxt=w[r];\r\n\telse \r\n\t{\r\n\t\tint mid=(l+r)>>1;\r\n\t\tbuild(u<<1,l,mid),build(u<<1|1,mid+1,r);\r\n\t\tpushup(u);\r\n\t}\r\n}\t\r\nvoid modify_atg(int u,int l,int r,int v)\r\n{\r\n\tif(tr[u].l>=l&&tr[u].r<=r) moveadd(tr[u],v);\r\n\telse \r\n\t{\r\n\t\tpushdown(u);\r\n\t\tint mid=(tr[u].l+tr[u].r)>>1;\r\n\t\tif(mid>=l) modify_atg(u<<1,l,r,v);\r\n\t\tif(mid<r) modify_atg(u<<1|1,l,r,v);\r\n\t\tpushup(u);\r\n\t}\r\n}\r\nvoid modify_ntg(int u,int l,int r,int v)\r\n{\r\n\tif(tr[u].l>=l&&tr[u].r<=r) moven(tr[u],v);\r\n\telse \r\n\t{\r\n\t\tpushdown(u);\r\n\t\tint mid=(tr[u].l+tr[u].r)>>1;\r\n\t\tif(mid>=l) modify_ntg(u<<1,l,r,v);\r\n\t\tif(mid<r) modify_ntg(u<<1|1,l,r,v);\r\n\t\tpushup(u);\r\n\t}\r\n}\r\nvoid modify_xtg(int u,int l,int r,int v)\r\n{\r\n\tif(tr[u].l>=l&&tr[u].r<=r) movex(tr[u],v);\r\n\telse \r\n\t{\r\n\t\tpushdown(u);\r\n\t\tint mid=(tr[u].l+tr[u].r)>>1;\r\n\t\tif(mid>=l) modify_xtg(u<<1,l,r,v);\r\n\t\tif(mid<r) modify_xtg(u<<1|1,l,r,v);\r\n\t\tpushup(u);\r\n\t}\r\n}\r\nYan query(int u,int l,int r)\r\n{\r\n\tif(tr[u].l>=l&&tr[u].r<=r) return tr[u];\r\n\telse\r\n\t{\r\n\t\tpushdown(u);\r\n\t\tint mid=(tr[u].l+tr[u].r)>>1;\r\n\t\tif(mid>=r) return query(u<<1,l,r);\r\n\t\telse if(mid<l) return query(u<<1|1,l,r);\r\n\t\telse \r\n\t\t{\r\n\t\t\tYan res,res1,res2;\r\n\t\t\tres1=query(u<<1,l,r);\r\n\t\t\tres2=query(u<<1|1,l,r);\r\n\t\t\tpushup(res,res1,res2);\r\n\t\t\treturn res;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main()\r\n{\t\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&w[i]);\r\n\tbuild(1,1,n);\r\n\twhile(m--)\r\n\t{\r\n\t\tint op,l,r,v;\r\n\t\tscanf(\"%d\",&op);\r\n\t\tif(op==1)\r\n\t\t{\r\n\t\t\tscanf(\"%d%d%d\",&l,&r,&v);\r\n\t\t\tmodify_atg(1,l,r,v); \r\n\t\t}\r\n\t\telse if(op==2)\r\n\t\t{\r\n\t\t\tscanf(\"%d%d%d\",&l,&r,&v);\r\n\t\t\tmodify_ntg(1,l,r,v);\r\n\t\t}\r\n\t\telse if(op==3)\r\n\t\t{\r\n\t\t\tscanf(\"%d%d%d\",&l,&r,&v);\r\n\t\t\tmodify_xtg(1,l,r,v);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tscanf(\"%d%d\",&l,&r);\r\n\t\t\tprintf(\"%d\\n\",query(1,l,r).maxt);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\t\r\n```\r\n\u5b8c\u7ed3\u6492\u82b1\u30fe(\u2267\u25bd\u2266*)o",
        "postTime": 1669211175,
        "uid": 476325,
        "name": "Jusc",
        "ccfLevel": 4,
        "title": "Stumilowy sad\u9898\u89e3"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n$1$ \u64cd\u4f5c\u662f\u533a\u4fee\u548c\uff0c$2$ \u64cd\u4f5c\u662f\u533a\u4fee $\\min$\uff0c$3$ \u64cd\u4f5c\u662f\u533a\u4fee $\\max$\uff0c$4$ \u64cd\u4f5c\u662f\u533a\u95f4\u67e5\u8be2 $\\max$\u3002\n\n\u7406\u89e3\u5b8c\u64cd\u4f5c\u540e\uff0c\u601d\u8def\u5c31\u51fa\u6765\u4e86\u3002\u7ef4\u62a4\u56db\u4e2a\u53d8\u91cf\uff1a\u5f53\u524d\u503c $val$\uff0c\u548c\u61d2\u6807\u8bb0 $sumtag$\uff0c\u6700\u5c0f\u503c\u61d2\u6807\u8bb0 $mintag$\uff0c\u6700\u5927\u503c\u61d2\u6807\u8bb0 $maxtag$ \u3002\n\n\u5efa\u6811\u64cd\u4f5c\uff1a\u5bf9\u4e8e $mintag$ \u8d4b\u503c\u4e3a $+\\infty$\uff0c$maxtag$ \u8d4b\u503c\u4e3a $-\\infty$\uff0c\u540c\u65f6\u8bb0\u5f55\u533a\u95f4\u5de6\u7aef\u70b9 $l$ \u548c\u53f3\u7aef\u70b9 $r$\u3002\n\n``pushdown`` \u64cd\u4f5c\uff1a\u5c06\u5f53\u524d\u7ed3\u70b9 $now$ \u7684\u5de6\u513f\u5b50\u4e0e\u53f3\u513f\u5b50\u7684\u61d2\u6807\u8bb0\u548c\u503c\u5206\u522b\u66f4\u65b0\uff0c\u66f4\u65b0\u65f6\u662f\u4e0e $now$ \u7684\u4e09\u4e2a\u61d2\u6807\u8bb0\u6c42\u503c\u3002\n\n\u533a\u4fee\u548c\u64cd\u4f5c\uff1a\u5c06\u4e09\u4e2a\u61d2\u6807\u8bb0\u548c\u5f53\u524d\u503c $val$ \u90fd\u52a0\u4e0a $c$\u3002\n\n\u533a\u4fee $\\min$ \u64cd\u4f5c\uff1a\u5c06\u4e09\u4e2a\u61d2\u6807\u8bb0\u548c\u5f53\u524d\u503c $val$ \u90fd\u5bf9 $h$ \u53d6 $\\min$\u3002\n\n\u533a\u4fee $\\max$ \u64cd\u4f5c\uff1a\u5c06\u4e09\u4e2a\u61d2\u6807\u8bb0\u548c\u5f53\u524d\u503c $val$ \u90fd\u5bf9 $h$ \u53d6 $\\max$\u3002\n\n\u67e5\u8be2\u64cd\u4f5c\uff1a\u5728 $[l,r]$ \u7684\u533a\u95f4\u5185\u53d6\u6700\u5927\u503c\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\nnamespace IO{\n\t#define LL long long\n\tinline LL read(){\n\t\tLL x=0,f=1;char c=getchar();\n\t\tfor (;!isdigit(c);c=getchar())if (c=='-')f=-1;\n\t\tfor (;isdigit(c);c=getchar())x=(x<<3)+(x<<1)+(c^48);\n\t\treturn x*f;\n\t}\n\tinline void write(LL x,char c='\\n'){\n\t\tif (x){\n\t\t\tif (x<0)x=-x,putchar('-');\n\t\t\tchar a[30];short l;\n\t\t\tfor (l=0;x;x/=10)a[l++]=x%10^48;\n\t\t\tfor (l--;l>=0;l--)putchar(a[l]);\n\t\t}else putchar('0');putchar(c);\n\t}\n}using namespace IO;\nusing namespace std;\n\n#define int long long\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\nconst int N = 2e6+10;\nconst int INF = 2e18;\nstruct Sgt{int l,r,val,sumtag,mintag,maxtag;}tree[N<<2];\nint a[N],n,q;\nvoid pushup(int now)//\u66f4\u65b0\u5f53\u524d\u7ed3\u70b9\u4fe1\u606f \n{tree[now].val=max(tree[ls(now)].val,tree[rs(now)].val);}\nvoid build(int now,int l,int r){//\u5efa\u6811 \n\ttree[now].l=l,tree[now].r=r;\n\ttree[now].mintag=INF,tree[now].maxtag=-INF;\n\tif (l==r)return tree[now].val=a[l],void();\n\tint mid=(l+r)>>1;\n\tbuild(ls(now),l,mid);\n\tbuild(rs(now),mid+1,r);\n\tpushup(now);\n}\nvoid push_add(int now,int val){//\u66f4\u65b0sum\u61d2\u6807\u8bb0 \n\ttree[now].val+=val;\n\ttree[now].sumtag+=val;\n\tif (tree[now].mintag<INF) tree[now].mintag+=val;\n\tif (tree[now].maxtag>-INF)tree[now].maxtag+=val;\n}\nvoid push_min(int now,int val){//\u66f4\u65b0min\u61d2\u6807\u8bb0 \n\ttree[now].val=min(tree[now].val,val);\n\ttree[now].mintag=min(tree[now].mintag,val);\n\ttree[now].maxtag=min(tree[now].maxtag,val);\n}\nvoid push_max(int now,int val){//\u66f4\u65b0max\u61d2\u6807\u8bb0 \n\ttree[now].val=max(tree[now].val,val);\n\ttree[now].mintag=max(tree[now].mintag,val);\n\ttree[now].maxtag=max(tree[now].maxtag,val);\n}\nvoid pushdown(int now){//pushdown\u4e0b\u4f20\u6807\u8bb0 \n\tpush_add(ls(now),tree[now].sumtag);\n\tpush_add(rs(now),tree[now].sumtag);\n\tpush_min(ls(now),tree[now].mintag);\n\tpush_min(rs(now),tree[now].mintag);\n\tpush_max(ls(now),tree[now].maxtag);\n\tpush_max(rs(now),tree[now].maxtag);\n\ttree[now].sumtag=0;\n\ttree[now].mintag=INF;\n\ttree[now].maxtag=-INF;\n}\nvoid update_add(int now,int x,int y,int val){//\u533a\u4fee\u52a0 \n\tint l=tree[now].l,r=tree[now].r;\n\tif (x<=l&&r<=y)return push_add(now,val),void();\n\tpushdown(now);int mid=(l+r)>>1;\n\tif (x<=mid)update_add(ls(now),x,y,val);\n\tif (mid<y) update_add(rs(now),x,y,val);\n\tpushup(now);\n}\nvoid update_min(int now,int x,int y,int val){//\u533a\u4feemin \n\tint l=tree[now].l,r=tree[now].r;\n\tif (x<=l&&r<=y)return push_min(now,val),void();\n\tpushdown(now);int mid=(l+r)>>1;\n\tif (x<=mid)update_min(ls(now),x,y,val);\n\tif (mid<y) update_min(rs(now),x,y,val);\n\tpushup(now);\n}\nvoid update_max(int now,int x,int y,int val){//\u533a\u4feemax \n\tint l=tree[now].l,r=tree[now].r;\n\tif (x<=l&&r<=y)return push_max(now,val),void();\n\tpushdown(now);int mid=(l+r)>>1;\n\tif (x<=mid)update_max(ls(now),x,y,val);\n\tif (mid<y) update_max(rs(now),x,y,val);\n\tpushup(now);\n}\nint query(int now,int x,int y){//\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c \n\tint l=tree[now].l,r=tree[now].r;\n\tif (x<=l&&r<=y)return tree[now].val;\n\tpushdown(now);int mid=(l+r)>>1,ans=-INF;\n\tif (x<=mid)ans=max(ans,query(ls(now),x,y));\n\tif (mid<y) ans=max(ans,query(rs(now),x,y));\n\treturn ans;\n}\nsigned main(){\n\tn=read(),q=read();\n\tfor (int i=1;i<=n;i++)a[i]=read();\n\tbuild(1,1,n);\n\tfor (int i=1;i<=q;i++){\n\t\tint op=read(),l=read(),r=read(),val;\n\t\tif (op==1)val=read(),update_add(1,l,r,val);\n\t\tif (op==2)val=read(),update_min(1,l,r,val);\n\t\tif (op==3)val=read(),update_max(1,l,r,val);\n\t\tif (op==4)write(query(1,l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1668854489,
        "uid": 518232,
        "name": "dage666",
        "ccfLevel": 0,
        "title": "P8024 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u7b80\u5316\u9898\u610f\uff0c\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u5bf9\u5176\u8fdb\u884c\u4ee5\u4e0b\u51e0\u79cd\u64cd\u4f5c\uff1a\n\n1.\u7ed9 $l$ \u5230 $r$ \u533a\u95f4\u5185\u7684\u6570\u636e\u5168\u90e8\u52a0\u4e0a $k$\u3002\n\n2.\u5bf9\u4e8e $l$ \u5230 $r$ \u533a\u95f4\u5185\u7684\u6570\u636e\uff0c\u5927\u4e8e $k$ \u7684\u53d8\u6210 $k$\u3002\n\n3.\u5bf9\u4e8e $l$ \u5230 $r$ \u533a\u95f4\u5185\u7684\u6570\u636e\uff0c\u5c0f\u4e8e $k$ \u7684\u53d8\u6210 $k$\u3002\n\n4.\u8f93\u51fa $l$ \u5230 $r$ \u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u3002\n\n\u4e00\u6b65\u6b65\u6765\u770b\uff0c\u8981\u5b9e\u73b0 $1$ \u64cd\u4f5c\u5f88\u7b80\u5355\uff0c\u7ebf\u6bb5\u6811\u677f\u5b50\uff0c\u4e3b\u8981\u770b $2$ \u64cd\u4f5c\u548c $3$ \u64cd\u4f5c\u3002\u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u5047\u5982\u4e00\u4e2a\u5e8f\u5217\u4e2d\u6700\u5c0f\u503c\u5927\u4e8e $k$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5e8f\u5217\u7684\u6240\u6709\u6570\u4e5f\u4e00\u5b9a\u5927\u4e8e $k$\uff0c\u76f4\u63a5\u5bf9\u5176\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u5373\u53ef\uff0c\u5047\u5982\u5e76\u4e0d\u5982\u6b64\uff0c\u90a3\u5c31\u7ee7\u7eed\u5f80\u4e0b\u4e8c\u5206\uff0c\u76f4\u5230\u6ee1\u8db3\u6761\u4ef6\u4e3a\u6b62\uff0c\u5f53\u7136\u76f4\u63a5\u8fd9\u6837\u627e\u6709\u70b9\u6d6a\u8d39\u65f6\u95f4\uff0c\u9700\u8981\u4e00\u70b9\u4f18\u5316\uff1a\u5047\u5982\u4e00\u4e2a\u5e8f\u5217\u7684\u6700\u5927\u503c\u5c0f\u4e8e $k$\uff0c\u91cc\u9762\u7684\u6240\u6709\u6570\u4e5f\u5fc5\u7136\u5c0f\u4e8e $k$\uff0c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u76f4\u63a5 ```return``` \u5c31\u597d\u4e86\uff0c\u907f\u514d\u591a\u4f59\u64cd\u4f5c\u3002\u64cd\u4f5c $3$ \u4e5f\u662f\u5982\u6b64\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u7ebf\u6bb5\u6811\u7684\u7ed3\u6784\u4f53\u4e2d\u51fa\u4e86\u9700\u8981\u5b58\u50a8\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u548c\u6700\u5927\u503c\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u5b58\u50a8\u6700\u5c0f\u503c\u3001\u52a0\u6cd5\u61d2\u6807\u8bb0\u548c\u8d4b\u503c\u61d2\u6807\u8bb0\uff0c\u7531\u4e8e\u6211\u6570\u636e\u8303\u56f4\u6ca1\u4ed4\u7ec6\u770b\uff0c\u6240\u4ee5\u6211\u8fd8\u53e6\u5916\u5f00\u4e86\u4e00\u4e2a\u5224\u65ad\u662f\u5426\u8d4b\u503c\u7684\u61d2\u6807\u8bb0\uff08\u9632\u6b62\u51fa\u73b0\u8d4b\u503c\u61d2\u6807\u8bb0\u4e3a $0$ \u5374\u4f9d\u7136\u9700\u8981\u8d4b\u503c\u7684\u60c5\u51b5\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u8fd9\u79cd\u60c5\u51b5\uff09\u3002\n```cpp\nstruct tree{\n\tint l,r;\n\tint maxn,minx,lazy1,lazy2,lazy3;//lazy1\u662f\u52a0\u6cd5\u6807\u8bb0\uff0clazy2\u662f\u8d4b\u503c\u6807\u8bb0\uff0clazy3\u5224\u65ad\u662f\u5426\u8d4b\u503c\n}t[3000005];\n```\n$2$ \u64cd\u4f5c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid change1(int p,int x,int y,int z){\n\tif(x<=t[p].l && y>=t[p].r){\n\t\tif(t[p].minx>=z){\n\t\t\tt[p].maxn=z;\n\t\t\tt[p].minx=z;\n\t\t\tt[p].lazy2=z;\n\t\t\tt[p].lazy3=1;\n\t\t\tt[p].lazy1=0;//\u8d4b\u8fc7\u503c\u4e86\uff0c\u52a0\u6cd5\u6807\u8bb0\u5c31\u6ca1\u610f\u4e49\u4e86\n\t\t\treturn;\n\t\t}\n\t\tif(t[p].maxn<=z){\n\t\t\treturn;\n\t\t}\n\t\tpushdown(p);\n\t\tchange1(p*2,x,y,z);\n\t\tchange1(p*2+1,x,y,z);\n\t\tpushup(p);\n\t}\n\tpushdown(p);\n\tint mid=t[p].l+t[p].r>>1;\n\tif(x<=mid){\n\t\tchange1(p*2,x,y,z);\n\t}\n\tif(y>mid){\n\t\tchange1(p*2+1,x,y,z);\n\t}\n\tpushup(p);\n}\n```\n\u7406\u89e3\u4e86\u8fd9\u4e9b\u4ee5\u540e\uff0c```pushdown``` \u51fd\u6570\u5c31\u6bd4\u8f83\u597d\u5199\u4e86\uff0c\u6ce8\u610f\u8981\u5148\u8d4b\u503c\uff0c\u518d\u589e\u52a0\uff1a\n```cpp\nvoid pushdown(int p){\n\tif(t[p].lazy3){\n\t\tt[p*2].maxn=t[p].lazy2;\n\t\tt[p*2+1].maxn=t[p].lazy2;\n\t\tt[p*2].minx=t[p].lazy2;\n\t\tt[p*2+1].minx=t[p].lazy2;\n\t\tt[p*2].lazy2=t[p].lazy2;\n\t\tt[p*2+1].lazy2=t[p].lazy2;\n\t\tt[p*2].lazy1=0;\n\t\tt[p*2+1].lazy1=0;\n\t\tt[p*2].lazy3=1;\n\t\tt[p*2+1].lazy3=1;\n\t\tt[p].lazy2=0;\n\t\tt[p].lazy3=0;//\u4e0d\u8981\u628a\u5f53\u524d\u7ed3\u70b9\u7684lazy1\u53d8\u62100\uff0c\u56e0\u4e3a\u4f1a\u51fa\u73b0\u8d4b\u5b8c\u503c\u540e\u7ee7\u7eed\u589e\u52a0\u7684\u60c5\u51b5\n\t}\n\tif(t[p].lazy1){\n\t\tt[p*2].maxn+=t[p].lazy1;\n\t\tt[p*2].minx+=t[p].lazy1;\n\t\tt[p*2+1].maxn+=t[p].lazy1;\n\t\tt[p*2+1].minx+=t[p].lazy1;\n\t\tt[p*2].lazy1+=t[p].lazy1;\n\t\tt[p*2+1].lazy1+=t[p].lazy1;\n\t\tt[p].lazy1=0;\n\t}\n}\n```\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,q;\nint a[1000001];\nstruct tree{\n\tint l,r;\n\tint maxn,minx,lazy1,lazy2,lazy3;\n}t[3000005];\nvoid pushup(int p){\n\tt[p].minx=min(t[p*2].minx,t[p*2+1].minx);\n\tt[p].maxn=max(t[p*2].maxn,t[p*2+1].maxn);\n}\nvoid build(int p,int x,int y){\n\tt[p].l=x;\n\tt[p].r=y;\n\tif(x==y){\n\t\tt[p].maxn=a[x];\n\t\tt[p].minx=a[x];\n\t\treturn;\n\t}\n\tint mid=x+y>>1;\n\tbuild(p*2,x,mid);\n\tbuild(p*2+1,mid+1,y);\n\tpushup(p);\n}\nvoid pushdown(int p){\n\tif(t[p].lazy3){\n\t\tt[p*2].maxn=t[p].lazy2;\n\t\tt[p*2+1].maxn=t[p].lazy2;\n\t\tt[p*2].minx=t[p].lazy2;\n\t\tt[p*2+1].minx=t[p].lazy2;\n\t\tt[p*2].lazy2=t[p].lazy2;\n\t\tt[p*2+1].lazy2=t[p].lazy2;\n\t\tt[p*2].lazy1=0;\n\t\tt[p*2+1].lazy1=0;\n\t\tt[p*2].lazy3=1;\n\t\tt[p*2+1].lazy3=1;\n\t\tt[p].lazy2=0;\n\t\tt[p].lazy3=0;\n\t}\n\tif(t[p].lazy1){\n\t\tt[p*2].maxn+=t[p].lazy1;\n\t\tt[p*2].minx+=t[p].lazy1;\n\t\tt[p*2+1].maxn+=t[p].lazy1;\n\t\tt[p*2+1].minx+=t[p].lazy1;\n\t\tt[p*2].lazy1+=t[p].lazy1;\n\t\tt[p*2+1].lazy1+=t[p].lazy1;\n\t\tt[p].lazy1=0;\n\t}\n}\nvoid change1(int p,int x,int y,int z){\n\tif(x<=t[p].l && y>=t[p].r){\n\t\tif(t[p].minx>=z){\n\t\t\tt[p].maxn=z;\n\t\t\tt[p].minx=z;\n\t\t\tt[p].lazy2=z;\n\t\t\tt[p].lazy3=1;\n\t\t\tt[p].lazy1=0;\n\t\t\treturn;\n\t\t}\n\t\tif(t[p].maxn<=z){\n\t\t\treturn;\n\t\t}\n\t\tpushdown(p);\n\t\tchange1(p*2,x,y,z);\n\t\tchange1(p*2+1,x,y,z);\n\t\tpushup(p);\n\t}\n\tpushdown(p);\n\tint mid=t[p].l+t[p].r>>1;\n\tif(x<=mid){\n\t\tchange1(p*2,x,y,z);\n\t}\n\tif(y>mid){\n\t\tchange1(p*2+1,x,y,z);\n\t}\n\tpushup(p);\n}\nvoid change2(int p,int x,int y,int z){\n\tif(x<=t[p].l && y>=t[p].r){\n\t\tif(t[p].maxn<=z){\n\t\t\tt[p].maxn=z;\n\t\t\tt[p].minx=z;\n\t\t\tt[p].lazy2=z;\n\t\t\tt[p].lazy3=1;\n\t\t\tt[p].lazy1=0;\n\t\t\treturn;\n\t\t}\n\t\tif(t[p].minx>=z){\n\t\t\treturn;\n\t\t}\n\t\tpushdown(p);\n\t\tchange2(p*2,x,y,z);\n\t\tchange2(p*2+1,x,y,z);\n\t\tpushup(p);\n\t}\n\tpushdown(p);\n\tint mid=t[p].l+t[p].r>>1;\n\tif(x<=mid){\n\t\tchange2(p*2,x,y,z);\n\t}\n\tif(y>mid){\n\t\tchange2(p*2+1,x,y,z);\n\t}\n\tpushup(p);\n}\nvoid change3(int p,int x,int y,int z){\n\tif(x<=t[p].l && y>=t[p].r){\n\t\tt[p].maxn+=z;\n\t\tt[p].minx+=z;\n\t\tt[p].lazy1+=z;\n\t\treturn;\n\t}\n\tpushdown(p);\n\tint mid=t[p].l+t[p].r>>1;\n\tif(x<=mid){\n\t\tchange3(p*2,x,y,z);\n\t}\n\tif(y>mid){\n\t\tchange3(p*2+1,x,y,z);\n\t}\n\tpushup(p);\n}\nint ask(int p,int x,int y){\n\tif(x<=t[p].l && y>=t[p].r){\n\t\treturn t[p].maxn;\n\t}\n\tint mid=t[p].l+t[p].r>>1;\n\tint ans=-1e9;\n\tpushdown(p);\n\tif(x<=mid){\n\t\tans=max(ans,ask(p*2,x,y));\n\t}\n\tif(y>mid){\n\t\tans=max(ans,ask(p*2+1,x,y));\n\t}\n\treturn ans;\n}\nint main(){\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tbuild(1,1,n);\n\twhile(q--){\n\t\tint s,x,y,z;\n\t\tscanf(\"%d%d%d\",&s,&x,&y);\n\t\tif(s==1){\n\t\t\tscanf(\"%d\",&z);\n\t\t\tchange3(1,x,y,z);\n\t\t}\n\t\telse if(s==2){\n\t\t\tscanf(\"%d\",&z);\n\t\t\tchange1(1,x,y,z);\n\t\t}\n\t\telse if(s==3){\n\t\t\tscanf(\"%d\",&z);\n\t\t\tchange2(1,x,y,z);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%d\\n\",ask(1,x,y));\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1661684476,
        "uid": 227977,
        "name": "newbeeglass",
        "ccfLevel": 6,
        "title": "P8024\u9898\u89e3"
    }
]