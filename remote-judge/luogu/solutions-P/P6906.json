[
    {
        "content": "> XIX. [P6906 [ICPC2015 WF] Catering](https://www.luogu.com.cn/problem/P6906)\n\n\u6bd4\u8f83\u7b80\u5355\u7684\u7f51\u7edc\u6d41\u3002\n\n\u62c6\u70b9\u9650\u5236\u6bcf\u4e2a\u70b9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\u3002$in_i \\to out_i$ \u8fde\u5bb9\u91cf $1$\uff0c\u5bb9\u91cf\u4e0b\u754c $1$\uff0c\u6743\u503c $0$ \u7684\u8fb9\uff1b$out_i\\to in_j(i < j)$ \u8fde\u5bb9\u91cf $1$\uff0c\u6743\u503c $w(i, j)$ \u7684\u8fb9\uff1b$in_1\\to out_1$ \u8fde\u5bb9\u91cf $k$\uff0c\u6743\u503c $0$ \u7684\u8fb9\u3002$out_i\\to T$ \u8fde\u5bb9\u91cf $1$\uff0c\u6743\u503c $0$ \u7684\u8fb9\u3002\n\n\u6211\u4eec\u53d1\u73b0\u76f4\u63a5\u6d41 $in_1\\to T$ \u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u6ee1\u6d41\u3002\u56e0\u6b64\uff0c\u8003\u8651\u4ece $1$ \u5230 $k$ \u679a\u4e3e\u6700\u4f18\u6d41\u91cf\uff0c\u6bcf\u6b21\u6dfb\u52a0 $in_1\\to out_1$ \u5bb9\u91cf $1$\uff0c\u6743\u503c $0$ \u7684\u8fb9\uff0c\u5c06\u4efb\u610f\u65f6\u523b\u6700\u5c0f\u8d39\u7528\u53d6 $\\min$ \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f $n$ \u6b21\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u8d39\u7528\u6d41\u3002\n\n\u907f\u514d\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u7684\u65b9\u6cd5\uff1a\u6211\u4eec\u77e5\u9053 $in_i\\to out_i$ \u7684\u6d41\u91cf\u6070\u4e3a $1$ \u4e14\u65e0\u6743\uff0c\u4e0d\u59a8\u5c06\u5176\u6743\u503c\u8bbe\u4e3a\u4e00\u4e2a\u7edd\u5bf9\u503c\u5c0f\u4e8e\u4e24\u500d\u8fb9\u6743\u7684\u8d1f\u6570\uff0c\u5982 $-10 ^ 7$\uff0c\u90a3\u4e48\u6700\u5c0f\u8d39\u7528\u65b9\u6848\u4e2d\u6bcf\u6761 $in_i\\to out_i$ \u6d41\u91cf\u5fc5\u4e3a $1$\uff0c\u5c06\u6c42\u5f97\u6700\u5c0f\u503c\u52a0\u4e0a $10 ^ 7 n$ \u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nusing ll = long long;\nusing uint = unsigned int;\nusing lll = __int128;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing ull = unsigned long long;\ninline ll read() {\n  ll x = 0, sgn = 0;\n  char s = getchar();\n  while(!isdigit(s)) sgn |= s == '-', s = getchar();\n  while(isdigit(s)) x = x * 10 + s - '0', s = getchar();\n  return sgn ? -x : x;\n}\ninline void print(int x) {\n  if(x < 0) return putchar('-'), print(-x);\n  if(x >= 10) print(x / 10);\n  putchar(x % 10 + '0');\n}\nbool Mbe;\nconstexpr int N = 200 + 5;\nconstexpr int M = 1e4 + 5;\nconstexpr int inf = 1e7;\nstruct flow {\n  int cnt = 1, hd[N], nxt[M << 1], to[M << 1], limit[M << 1], cst[M << 1];\n  void add(int u, int v, int w, int c) {\n    nxt[++cnt] = hd[u], hd[u] = cnt, to[cnt] = v, limit[cnt] = w, cst[cnt] = c;\n    nxt[++cnt] = hd[v], hd[v] = cnt, to[cnt] = u, limit[cnt] = 0, cst[cnt] = -c;\n  }\n  int in[N], dis[N], fr[N];\n  int mincost(int S, int T) {\n    int cost = 0;\n    while(1) {\n      queue<int> q;\n      memset(dis, 0x3f, sizeof(dis));\n      dis[S] = 0, q.push(S);\n      while(!q.empty()) {\n        int t = q.front();\n        q.pop(), in[t] = 0;\n        for(int i = hd[t]; i; i = nxt[i]) {\n          int it = to[i], d = dis[t] + cst[i];\n          if(limit[i] && d < dis[it]) {\n            dis[it] = d, fr[it] = i;\n            if(!in[it]) q.push(it), in[it] = 1;\n          }\n        }\n      }\n      if(dis[T] > 1e9) return cost;\n      int fl = 1064;\n      for(int i = T; i != S; i = to[fr[i] ^ 1]) fl = min(fl, limit[fr[i]]);\n      for(int i = T; i != S; i = to[fr[i] ^ 1]) limit[fr[i]] -= fl, limit[fr[i] ^ 1] += fl;\n      cost += fl * dis[T];\n    }\n  }\n} g;\nint n, k;\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin);\n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n  cin >> n >> k;\n  int T = n * 2 + 2;\n  for(int i = 0; i < n; i++)\n    for(int j = i + 1; j <= n; j++)\n      g.add(i * 2 + 1, j * 2, 1, read());\n  for(int i = 1; i <= n; i++) g.add(i * 2, i * 2 + 1, 1, -inf), g.add(i * 2 + 1, T, 1, 0);\n  int ans = 1e9, cur = 0;\n  for(int i = 1; i <= k; i++) {\n    g.add(0, 1, 1, 0);\n    ans = min(ans, cur += g.mincost(0, T));\n  }\n  cout << ans + inf * n << endl;\n  cerr << TIME << \" ms\\n\";\n  return 0;\n}\n/*\n2022/9/25\nauthor: Alex_Wei\nstart coding at 7:52\nfinish debugging at 8:15\n*/\n```",
        "postTime": 1664066134,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P6906 [ICPC2015 WF] Catering"
    },
    {
        "content": "\u4e00\u9053 nice easy problem  \n\u524d\u7f6e\u77e5\u8bc6\uff1a\u7f51\u7edc\u6d41  \n\n\u9898\u610f\uff1a  \n\u7ed9\u4f60 $n + 1$ \u4e2a\u70b9\u7684\u56fe\uff0c\u7136\u540e\u5bf9\u4e8e\u4efb\u610f\u4e24\u70b9\u90fd\u6709\u4e00\u6761\u8fb9\uff0c\u73b0\u5728\u6709 $k$ \u4e2a\u4eba\u4ece $0$ \u70b9\u51fa\u53d1\uff0c\u6bcf\u4e2a\u4eba\u90fd\u80fd\u6cbf\u7740\u4efb\u610f\u8fb9\u8d70\u5230\u67d0\u4e2a\u70b9\uff08\u53ef\u4ee5\u662f $0$ \u70b9\uff0c\u4e5f\u5c31\u662f\u4e0d\u52a8)\u505c\u4e0b\u6765\u8981\u6c42\u5bf9\u4e8e\u4efb\u610f\u70b9 $i$ \u6070\u597d\u5b58\u5728\u4e00\u4e2a\u4eba\u7ecf\u8fc7\uff0c\u95ee\u6240\u6709\u4eba\u7ecf\u8fc7\u7684\u8fb9\u6743\u548c\u6700\u5927\u4e3a\u591a\u5c11\u3002  \n\n\u9898\u89e3\uff1a  \n\u5148\u89c2\u5bdf\u4e00\u4e0b\u6837\u4f8b\u4e00\u7684\u56fe\uff1a  \n![](https://img-blog.csdnimg.cn/eddccbb826ee43a3969bff36b5d62bab.png#pic_center)  \n\u5206\u6790\u4e00\u4e0b\uff0c\u5047\u8bbe\u6bcf\u4e2a\u4eba\u8d70\u52a8\u5f62\u6210\u7684\u8f68\u8ff9\u662f\u4e00\u4e2a\u65b0\u56fe\uff0c\u90a3\u4e48\u5728\u8fd9\u5f20\u56fe\u4e2d\uff0c\u539f\u70b9\u7684\u51fa\u5ea6\u5c0f\u4e8e\u7b49\u4e8e $k$\u3002\u5176\u4ed6\u70b9\u5206\u4e24\u7c7b\u8ba8\u8bba\uff0c\u5bf9\u4e8e\u4e0d\u662f\u7ec8\u70b9\u7684\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u90fd\u4e3a $1$ \uff0c\u5426\u5219\u5165\u5ea6\u4e3a $1$ \uff0c\u51fa\u5ea6\u4e3a $0$\u3002\u56e0\u6b64\u53ef\u4ee5\u6784\u5efa\u51fa\u8fd9\u6837\u7684\u7f51\u7edc\u6d41\u6a21\u578b\u3002  \n\n![](https://img-blog.csdnimg.cn/cfea1979e9f44842abc15a69d1507b8c.png#pic_center)  \n\u7136\u540e\u6765\u8bc1\u660e\u4e00\u4e0b\u6b63\u786e\u6027\uff1a  \n\u9996\u5148\u662f $0$ \u70b9\u7684\u51fa\u5ea6\u4e00\u5b9a\u662f\u5c0f\u4e8e\u7b49\u4e8e $k$ \u7684\uff0c\u56e0\u4e3a\u4ece $st$ \u70b9\u51fa\u53d1\u7684\u6d41\u91cf\u6700\u5927\u53ea\u6709 $k$\uff0c\u6b64\u5916\u70b9 $n+1$ \u7684\u552f\u4e00\u6d41\u91cf\u53ea\u80fd\u6765\u6e90\u4e8e $0$ \u70b9\uff0c\u8fd9\u6761\u8fb9\u4e00\u5b9a\u4f1a\u88ab\u7b97\u5230\u6700\u5927\u6d41\u4e2d\uff0c\u6545 $0$ \u70b9\u51fa\u5ea6\u81f3\u5c11\u662f $1$\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u5408\u7406\u7684\u3002  \n\u7136\u540e\u518d\u8003\u8651\u9664 $0$ \u70b9\u5916\u5728\u539f\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\uff0c\u7531\u4e8e\u4ece $st$ \u70b9\u51fa\u53d1\u7684\u6d41\u91cf\u662f\u4e0d\u5c0f\u4e8e\u6d41\u5165 $en$ \u70b9\u7684\u6700\u5927\u6d41\u91cf\uff0c\u6545 $n+1 \\rightarrow n+n$ \u7684\u8282\u70b9\u90fd\u4f1a\u5411 $en$ \u70b9\u8d21\u732e\u6d41\u91cf\uff0c\u7531\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6d41\u91cf\u4e3a $1$ \u7684\u9650\u5236\uff0c\u5e76\u4e14 $n+1 \\rightarrow n+n$ \u7684\u8282\u70b9\u7684\u6d41\u91cf\u90fd\u5fc5\u5b9a\u6765\u81ea $0 \\rightarrow n-1$\uff0c\u76f8\u5f53\u4e8e\u539f\u56fe\u4e2d $1 - n$ \u7684\u8282\u70b9\u5165\u5ea6\u90fd\u4e3a $1$\u3002\u800c\u539f\u56fe\u4e2d\u6bcf\u4e2a\u8282\u70b9\uff08$1 - n$\uff09\u7684\u51fa\u5ea6\u53ef\u4e3a $0$ \u53ef\u4e3a $1$ \uff0c\u5bf9\u5e94\u7740\u7f51\u7edc\u6d41\u4e2d\u7684 $1 - n$ \u53f7\u8282\u70b9\u5411 $n+1 - n+n$ \u53f7\u8282\u70b9\u7684\u8fde\u8fb9\u5173\u7cfb\uff08\u5982\u679c\u4e0d\u8fde\u8fb9\u4e3a $0$ \u5426\u5219\u4e3a $1$\uff0c\u7531\u4e8e $1 - n$ \u53f7\u8282\u70b9\u6d41\u91cf\u6700\u5927\u4e3a $1$\uff0c\u6240\u4ee5\u51fa\u5ea6\u6700\u5927\u4e3a $1$\uff09\u3002   \n\u4f1a\u5efa\u56fe\u4e4b\u540e\u5176\u5b9e\u4ee3\u7801\u5c31\u5f88\u597d\u5199\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a  \n```\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<iostream>\n#include<vector>\n#include<set>\n#include<string>\n#include<map>\n#include<queue>\n#include<stack>\n#include<cmath>\n#include<functional>\n#define ll long long\nusing namespace std;\nconst int mod=1e9+7;\nconst int INF=0x3f3f3f3f;\n\ninline int read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0',c=getchar();}\n\treturn x*f;\n}\nconst int N=510,M=1e5;\nstruct MSqwq{\n\tint to,next,z,c;\n}e[M];\nint elast[N],k=1;\nvoid add(int x,int y,int z,int c)\n{\n\t//cout<<x<<\" \"<<y<<\" \"<<z<<endl;\n\te[++k]={y,elast[x],z,c},elast[x]=k;\n\te[++k]={x,elast[y],0,-c},elast[y]=k;\n}\nint n,m,st,en;\nint in[N],out[N],dis[N],cnt[N],flo[N],fe[N];\nint ans;\n\nbool bfs(int st,int en)\n{\n\tqueue<int>q;q.push(st);\n\tfor(int i=0;i<=N-10;i++)dis[i]=INF,cnt[i]=0,flo[i]=0;\n\tdis[st]=0,cnt[st]=1,flo[st]=INF;\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();q.pop();\t\n\t\t//cout<<now<<endl;\n\t\tfor(int i=elast[now];i;i=e[i].next)\n\t\t{\n\t\t\tint to=e[i].to;\n\t\t\tif(e[i].z!=0&&dis[to]>dis[now]+e[i].c)\n\t\t\t{\n\t\t\t\tdis[to]=dis[now]+e[i].c;\n\t\t\t\tflo[to]=min(flo[now],e[i].z);\n\t\t\t\tfe[to]=i;\n\t\t\t\tif(!cnt[to])cnt[to]=1,q.push(to);\n\t\t\t}\n\t\t}\n\t\tcnt[now]=0;\n\t}\n\tif(flo[en]>0)return true;\n\treturn false;\n}\n\nvoid dfs(int st,int en)\n{\n\twhile(bfs(st,en))\n\t{\n\t\tans+=flo[en]*dis[en];\n\t\tint now=fe[en];\n\t\te[now].z-=flo[en],e[now^1].z+=flo[en];\n\t\tint to=e[now^1].to;\n\t\twhile(to!=st)\n\t\t{\n\t\t\tto=e[now^1].to;\n\t\t\tnow=fe[to];\n\t\t\te[now].z-=flo[en],e[now^1].z+=flo[en];\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint n=read(),m=read();\n\tint st=2*n+1,en=2*n+2;\n\tadd(st,0,m,0);\n\tfor(int i=1;i<n;i++)add(st,i,1,0);\n\tfor(int i=0;i<n;i++)add(n+i+1,en,1,0);\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=i+1;j<=n;j++)add(i,n+j,1,read());\n\tdfs(st,en);\n\tprintf(\"%d\\n\",ans);\n}\n\n```\n",
        "postTime": 1667736351,
        "uid": 247269,
        "name": "MSqwq",
        "ccfLevel": 0,
        "title": "P6906 [ICPC2015 WF]Catering"
    }
]