[
    {
        "content": "\u9996\u5148\u6c42\u51fa\u76f4\u5f84\u8fd9\u4e2a\u7b80\u5355\uff0c\u53ea\u8981dfs\u4e00\u904d\u5c31\u884c\u4e86\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u7b2c\u4e8c\u95ee\u3002\u8981\u6c42\u7684\u662f\u6240\u6709\u76f4\u5f84\u90fd\u7ecf\u8fc7\u7684\u8fb9\u6570\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5148\u4efb\u610f\u6c42\u51fa\u4e00\u6761\u76f4\u5f84\uff0c\u8bb0\u5f55\u8fd9\u6761\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\n\n\u518d\u5bf9\u6bcf\u4e2a\u76f4\u5f84\u4e0a\u7684\u70b9\u90fddfs\uff0c\u6c42\u51fa\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u8d77\u70b9\u7684\u6700\u957f\u94fe\uff08\u5f53\u7136\u4e0d\u80fd\u5305\u62ec\u76f4\u5f84\u4e0a\u7684\u5176\u5b83\u70b9\uff09\uff0c\u957f\u5ea6\u7528dis[i]\u8868\u793a\u3002\n\nls[i]\u8868\u793a\u8fd9\u4e2a\u70b9\u5230\u76f4\u5f84\u5de6\u7aef\u70b9\u7684\u8ddd\u79bb\u3002\n\nrs[i]\u8868\u793a\u8fd9\u4e2a\u70b9\u5230\u76f4\u5f84\u53f3\u7aef\u70b9\u7684\u8ddd\u79bb\u3002\uff08\u5de6\u53f3\u968f\u610f\u5b9a\uff09\n\n\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u5411\u53f3\u904d\u5386\u76f4\u5f84\uff0c\u82e5\u5230\u4e86j\u53f7\u70b9\u53d1\u73b0\uff0cdis[j]=rs[j]\u5c31\u53ef\u4ee5\u8df3\u51fa\u5faa\u73af\uff0c\u56e0\u4e3aj\u7684\u53f3\u8fb9\u7684\u6240\u6709\u8fb9\u90fd\u4e0d\u53ef\u80fd\u662f\u5fc5\u7ecf\u8fb9\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u627e\u5230\u4e86\u4e00\u6761\u4e0d\u7ecf\u8fc7\u5b83\u4eec\u7684\u76f4\u5f84\u3002\n\n\u90a3\u4e48\u662f\u4e0d\u662f\u5de6\u7aef\u70b9\u5230j\u5c31\u662f\u5fc5\u7ecf\u8fb9\u4e86\u5462\uff1f\u663e\u7136\u4e0d\u662f\u7684\u3002\n\n\u56e0\u4e3a\u8fd8\u6709\u53ef\u80fd\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u5373dis[k]=ls[k],\u8fd9\u6837\u5c31\u53d8\u6210\u4e86k\u7684\u5de6\u8fb9\u7684\u6240\u6709\u8fb9\u90fd\u4e0d\u53ef\u80fd\u662f\u5fc5\u7ecf\u8fb9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u7c7b\u4f3c\u7684\u4ece\u521a\u624d\u8df3\u51fa\u5faa\u73af\u7684\u70b9\u5f00\u59cb\u5411\u5de6\u5bfb\u627e\u8fd9\u4e2ak\u70b9\u3002\n\n\u90a3\u4e48j\u5230k\u7684\u6240\u6709\u8fb9\u5c31\u662f\u5fc5\u7ecf\u8fb9\u4e86\u3002\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstring>\nusing namespace std;\nvector<int> a[200001],b[200001];\nint last[200001],u,v,next[200001];\nlong long dis[200001],mmm[200001],op;\nbool vv[200001];\nvoid dfs1(int o,long long p,int q)\n{\n    if(p>op){op=p;u=o;}\n    for(int i=0;i<a[o].size();i++)\n        if((!vv[a[o][i]])&&(a[o][i]!=q))\n        {\n            vv[a[o][i]]=true;\n            dfs1(a[o][i],p+b[o][i],o);\n        }\n}\nvoid dfs2(int o,long long p,int q)\n{\n    last[o]=q;\n    dis[o]=p;\n    if(p>op){op=p;v=o;}\n    for(int i=0;i<a[o].size();i++)\n        if((!vv[a[o][i]])&&(a[o][i]!=q))\n        {\n            vv[a[o][i]]=true;\n            dfs2(a[o][i],p+b[o][i],o);\n        }\n}\nint main()\n{\n    int n;\n    cin>>n;\n    for(int i=1;i<n;i++)\n    {\n        int x,y,z;\n        cin>>x>>y>>z;\n        a[x].push_back(y);\n        b[x].push_back(z);\n        a[y].push_back(x);\n        b[y].push_back(z);\n    }\n    memset(vv,0,sizeof(vv));op=0;\n    dfs1(1,0,0);\n    memset(vv,0,sizeof(vv));op=0;\n    dfs2(u,0,0);\n    int distance=dis[v];\n    cout<<dis[v]<<endl;\n    memset(vv,0,sizeof(vv));\n    for(int i=v;i!=0;i=last[i]) vv[i]=true;\n    for(int i=v;i!=0;i=last[i])\n    {\n        op=0;\n        dfs1(i,0,0);\n        mmm[i]=op;\n    }\n    int j=v;\n    for(int i=last[v];i!=0;i=last[i]) next[i]=j,j=i;\n    int ans=0;\n    int i;\n    for(i=j;i!=0;i=next[i])\n        if(dis[v]-dis[i]==mmm[i]) break;\n    for(;i!=0;i=last[i])\n    {\n        if(dis[i]==mmm[i]) break;\n        ans++;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1515066591,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "\u53d1\u73b0\u81ea\u5df1\u7684\u505a\u6cd5\u548c\u5176\u4ed6\u9898\u89e3\u7684\u90fd\u4e0d\u4e00\u6837\uff0c\u611f\u89c9\u81ea\u5df1\u7684\u505a\u6cd5\u66f4\u7b80\u5355\uff0c\u7ec6\u8282\u66f4\u5c11\u4e00\u70b9\uff0c\u4e0d\u7528\u8003\u8651\u5404\u79cd\u60c5\u51b5\u3002\n\n\u56de\u60f3\u6700\u77ed\u8def\u7684\u5fc5\u7ecf\u8fb9\u5982\u4f55\u6c42\uff1f\u6211\u4eec\u7edf\u8ba1S\u5230T\u7684\u6700\u77ed\u8def\u6761\u6570\uff0c\u5982\u679c\u4e00\u6761\u8fb9$cnt[S][u]\\times cnt[v][T]=cnt[S][T]$\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u662f\u5fc5\u7ecf\u8fb9\u3002\n\n\u8fd9\u9053\u9898\u540c\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u4e24\u6b21dfs\u65f6\u6811\u5f62DP\uff0c\u6c42\u51fadp\u503c\u548c\u6700\u4f18\u89e3\u7684\u65b9\u6848\u6570\uff0c\u5982\u679c\u7531\u8fd9\u6761\u8fb9\u6784\u6210\u7684\u76f4\u5f84\u7684\u65b9\u6848\u6570\u7b49\u4e8e\u5168\u5c40\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u5fc5\u9009\u3002\n\n```cpp\n#define N 200005\nint n;\nint head[N],cnte=1,v[N*2],nx[N*2],w[N*2];\nil void adde(int uu,int vv,int ww)\n{\n\tv[++cnte]=vv,nx[cnte]=head[uu],head[uu]=cnte,w[cnte]=ww;\n}\nstruct Data\n{\n\tLL w,cnt;\n\tData() {}\n\tData(const LL &_w,const LL &_cnt) {w=_w,cnt=_cnt;}\n\til void comb(const Data &v)\n\t{\n\t\tif(v.w>w) w=v.w,cnt=v.cnt;\n\t\telse if(v.w==w) cnt+=v.cnt;\n\t}\n};\nData f[N],D,g[N];\nint fe[N];\nvoid dfs(int x,int _fa)\n{\n\tf[x].w=0,f[x].cnt=1;\n\tfor(ri i=head[x]; i; i=nx[i])\n\t{\n\t\tif(v[i]==_fa) continue;\n\t\tfe[v[i]]=w[i];\n\t\tdfs(v[i],x);\n\t\tD.comb(Data(f[x].w+f[v[i]].w+w[i],f[x].cnt*f[v[i]].cnt));\n\t\tf[x].comb(Data(f[v[i]].w+w[i],f[v[i]].cnt));\n\t}\n}\nint ans;\nData qz[N],hz[N];\nil void check(const Data &v)\n{\n\tif(D.w==v.w&&D.cnt==v.cnt) ++ans;\n}\nvoid efs(int x,int _fa)\n{\n\tif(!_fa) g[x].cnt=1;\n\telse\n\t{\n\t\tg[x]=Data(g[_fa].w+fe[x],g[_fa].cnt);\n\t\tg[x].comb(Data(qz[x].w+fe[x],qz[x].cnt)),g[x].comb(Data(hz[x].w+fe[x],hz[x].cnt));\n\t\tcheck(Data(g[x].w+f[x].w,g[x].cnt*f[x].cnt));\n\t}\n\tstatic int st[N]; int tp=0;\n\tData t; t.w=t.cnt=0;\n\tfor(ri i=head[x]; i; i=nx[i])\n\t{\n\t\tif(v[i]==_fa) continue;\n\t\tst[++tp]=v[i];\n\t\tqz[v[i]]=t;\n\t\tt.comb(Data(f[v[i]].w+w[i],f[v[i]].cnt));\n\t}\n\tt.w=t.cnt=0;\n\tfor(ri i=tp; i>=1; --i)\n\t{\n\t\thz[st[i]]=t;\n\t\tt.comb(Data(f[st[i]].w+fe[st[i]],f[st[i]].cnt));\n\t}\n\tfor(ri i=head[x]; i; i=nx[i])\n\t{\n\t\tif(v[i]==_fa) continue;\n\t\tefs(v[i],x);\n\t}\n}\nsigned main()\n{\n#ifdef M207\n\tfreopen(\"in.in\",\"r\",stdin);\n\t// freopen(\"ot.out\",\"w\",stdout);\n#endif\n\tin(n);\n\tfor(ri i=1,a,b,c; i<n; ++i)\n\t{\n\t\tin(a,b,c);\n\t\tadde(a,b,c),adde(b,a,c);\n\t}\n\tdfs(1,0);\n\tefs(1,0);\n\tout(D.w);\n\tout(ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1555058166,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "[SDOI2013]\u76f4\u5f84-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7528\u5230\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5f15\u7406\uff0c\u6811\u7684\u6240\u6709\u76f4\u5f84\u62e5\u6709\u76f8\u540c\u7684\u4e2d\u70b9\uff01NOI2013\u6709\u4e2a\u53eb\u5feb\u9910\u5e97\u7684\u9898\u4e5f\u53ef\u4ee5\u7528\u8fd9\u4e2a\u5f15\u7406\u3002\n\n\u8fd9\u91cc\u4e2d\u70b9\u53ef\u80fd\u5728\u4e00\u6761\u8fb9\u7684\u5185\u90e8\u3002\u8bc1\u660e\u7684\u8bdd\u7528\u53cd\u8bc1\u6cd5\uff0c\u5927\u5bb6\u81ea\u5df1\u4e00\u753b\u5c31\u660e\u767d\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u968f\u4fbf\u627e\u4e00\u6761\u76f4\u5f84\uff0c\u5982\u679c\u4e2d\u70b9\u5728\u67d0\u6761\u8fb9\u5185\u90e8\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u6beb\u65e0\u7591\u95ee\u662f\u5728\u6240\u6709\u76f4\u5f84\u4e0a\u7684\uff0c\u7136\u540e\u6211\u4eec\u53bb\u6389\u8fd9\u6761\u8fb9\uff0c\u5728\u5269\u4e0b\u7684\u4e24\u68f5\u6709\u6839\u6811\u91cc\u5206\u522b\u627e\u4ece\u6839\u5230\u53f6\u5b50\u7684\u6700\u957f\u8def\u4e0a\u54ea\u4e9b\u8fb9\u662f\u5fc5\u987b\u7684\uff0c\u9012\u5f52\u89e3\u51b3\u5373\u53ef\u3002\u8fd9\u4e2a\u5b50\u95ee\u9898\u975e\u5e38\u6709\u7528\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u53eb\u4ed6RootLeafPath\u3002\n\n\u53e6\u4e00\u79cd\u60c5\u51b5\u662f\u4e2d\u70b9\u662f\u67d0\u4e2a\u9876\u70b9\uff0c\u8fd9\u65f6\u6211\u4eec\u4ee5\u4e2d\u70b9\u4e3a\u6839dfs,\u90a3\u4e48\u6240\u6709\u76f4\u5f84\u90fd\u7ecf\u8fc7\u6839\uff0c\u600e\u4e48\u770b\u54ea\u4e9b\u8fb9\u662f\u5fc5\u987b\u7684\u5462\uff1f\u663e\u7136\u8981\u6311\u4e24\u4e2a\u6839\u7684\u513f\u5b50\u5f80\u4e0b\u8d70\uff0c\u6211\u4eec\u8bbef[x]\u8868\u793a\u4ece\u4e00\u4e2a\u8282\u70b9\u5411\u4e0b\u8d70\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u5e76\u6311\u51fa\u6839\u7684\u513f\u5b50\u4e2df[x]+(\u6839\u5230x\u7684\u8fb9\u6743)\u4e2d\u524d\u4e09\u5927\u7684\uff0c\u4e0d\u59a8\u8bbe\u4ed6\u4eec\u662fa,b,c\u3002\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5|\uff1a(1)\u5982\u679cb>c,\u90a3\u4e48\u5728a,b\u5bf9\u5e94\u7684\u5b50\u6811\u91cc\u505aRootLeafPath\u5373\u53ef\u3002\n(2)\u5982\u679ca>b=c,\u90a3\u4e48\u53ea\u5728a\u5bf9\u5e94\u5b50\u6811\u91cc\u505aRootLeafPath\u5373\u53ef\u3002\n(3)\u5982\u679ca=b=c\uff0c\u8fd9\u65f6\u6ca1\u6709\u4efb\u4f55\u4e00\u6761\u8fb9\u662f\u5fc5\u987b\u7684\uff0c\u8f93\u51fa0\u3002\n```cpp\n#include <stdio.h>\n#include <queue>\nusing namespace std;\nint const N=4e5+1;\nstruct node{\n\tint x;\n\tlong long val;\n\tfriend bool operator <(node a, node b){\n\t\treturn a.val<b.val;\n\t}\n};\nint n,tot,to[N],pre[N],last[N],fa[N],ans=0;\nlong long v[N],d[N],f[N];\npriority_queue<node> h;\nvoid add(int a, int b, int c){\n\tto[++tot]=b;\n\tpre[tot]=last[a];\n\tlast[a]=tot;\n\tv[tot]=c;\n}\nvoid dfs(int x, int father, long long deep){\n\td[x]=deep;\n\tfa[x]=father;\n\tf[x]=0;\n\tfor (int i=last[x];i;i=pre[i])\n\t\tif (to[i]!=father) {\n\t\t\tdfs(to[i],x,d[x]+v[i]);\n\t\t\tf[x]=max(f[x],f[to[i]]+v[i]);\n\t\t}\n}\nvoid work(int x, int father, int deep){\n\tdfs(x,father,deep);\n\twhile (true){\n\t\tint y=0,cnt=0;\n\t\tfor (int i=last[x];i;i=pre[i])\n\t\t\tif (to[i]!=father && f[x]==f[to[i]]+v[i]) y=to[i],cnt++;\n\t\tif (cnt==0 || cnt>=2) break;\n\t\tfather=x;\n\t\tx=y;\n\t\tans++;\n\t}\n}\nint main(){\n\tfreopen(\"p3304.in\",\"r\",stdin);\n\tscanf(\"%d\",&n);\n\tif (n==2){\n\t\tprintf(\"1\");\n\t\treturn 0;\n\t}\n\tfor (int i=1;i<=n-1;i++){\n\t\tint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c); \n\t\tadd(a,b,c);\n\t\tadd(b,a,c);\n\t}\n\tdfs(1,0,0);\n\tint now=0;\n\tfor (int i=1;i<=n;i++)\n\t\tif (d[i]>d[now]) now=i;\n\tdfs(now,0,0);\n\tnow=0;\n\tfor (int i=1;i<=n;i++)\n\t\tif (d[i]>d[now]) now=i;\n\tlong long L=d[now];\n\twhile (d[fa[now]]*2>=L) now=fa[now];\n\tif (d[now]*2==L){\n\t\tdfs(now,0,0);\n\t\tfor (int i=last[now];i;i=pre[i])\n\t\t\th.push((node){to[i],v[i]+f[to[i]]});\n\t\tnode a=h.top();\n\t\th.pop();\n\t\tnode b=h.top();\n\t\th.pop();\n\t\tif (h.empty()){\n\t\t\tans+=2;\n\t\t\twork(a.x,now,0);\n\t\t\twork(b.x,now,0);\n\t\t} else{\n\t\t\tnode c=h.top();\n\t\t\tif (b.val>c.val){\n\t\t\t\tans+=2;\n\t\t\t\twork(a.x,now,0);\n\t\t\t\twork(b.x,now,0);\n\t\t\t} else{\n\t\t\t\tif (a.val>b.val){\n\t\t\t\t\tans++;\n\t\t\t\t\twork(a.x,now,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tans++;\n\t\twork(now,fa[now],0);\n\t\twork(fa[now],now,0); \n\t}\n\tprintf(\"%lld\\n\",L);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n} \n```",
        "postTime": 1540532445,
        "uid": 95804,
        "name": "wu3412790",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "update 2020.8.6  \u9898\u89e3\u8865\u5145\u4e86\u539f\u5148\u6ca1\u6709\u7684\u7279\u5224\u3002\n\nupdate 2020.9.27 \u539f\u9898\u89e3\u6709\u7279\u6b8a\u60c5\u51b5\u6ca1\u6709\u8003\u8651\u3002\n\n\u6211\u9610\u91ca\u53e6\u4e00\u79cd\u66f4\u52a0\u7b80\u6d01\u3001\u7b80\u5355\u7684\u65b9\u6cd5\u3002\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u68f5\u65e0\u5411\u5e26\u6743\u65e0\u6839\u6811\uff0c\u6709 $n$ \u4e2a\u8282\u70b9\uff08$1\\leq n \\leq 2\\times10^5$\uff09\u3002\n\n\u6c42\u51fa\u5176\u76f4\u5f84\u957f\uff0c\u6240\u6709\u76f4\u5f84\u90fd\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf\u3002\n\n## \u9898\u89e3\n\n\u5173\u4e8e\u76f4\u5f84\u7684\u8be2\u95ee\uff0c\u53ef\u4ee5\u4ece\u76f4\u5f84\u7684\u6027\u8d28\u5165\u624b\u3002\n\n\u7b2c\u4e00\u95ee\u53ef\u4ee5\u76f4\u63a5\u7528 BFS \u6c42\u51fa\u76f4\u5f84\u3002\n\n\u7b2c\u4e8c\u95ee\uff1a\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u76f4\u5f84\u7684\u516c\u5171\u90e8\u5206\uff0c\u4e00\u5b9a\u662f\u8fde\u5728\u4e00\u8d77\u7684\u3002\n\n\u5176\u4ed6\u9898\u89e3\u90fd\u662f\u4ece\u4e24\u7aef\u5224\u7684\u3002\n\n\u6211\u7684\u65b9\u6cd5\u662f\uff0c\u7b2c\u4e00\u95ee\u6c42\u51fa\u7684\u76f4\u5f84\u7684\u957f $len$ \uff0c\u53ca\u5176\u76f4\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u7684\u6743\u503c\u51cf\u4e00\uff0c\u518d\u6c42\u4e00\u6b21\u76f4\u5f84\u7684\u957f $clen$\uff0c\u4e24\u6b21\u76f4\u5f84\u957f\u7684\u5dee $len-clen$ \u5c31\u662f\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\u3002\n\n\u8bc1\u660e\uff1a\n\n\u5047\u8bbe\u7b54\u6848\u4e3a $x$\uff0c\u5373\u6240\u6709\u76f4\u5f84\u90fd\u4f1a\u7ecf\u8fc7\u5171\u540c\u7684 $x$ \u6761\u8fb9\u3002\n\n\u5982\u679c\u5bf9\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u4e0a\u7684\u8fb9\u6743\u5168\u90e8\u51cf\u53bb $1$\uff0c\u90a3\u4e48\u610f\u5473\u6240\u6709\u76f4\u5f84\u5171\u540c\u7684 $x$ \u6761\u8fb9\u90fd\u4f1a\u51cf\u53bb $1$\u3002\n\n\u5373\u518d\u6c42\u4e00\u6b21\u76f4\u5f84\u540e\uff0c\u65b0\u76f4\u5f84\u4e00\u5b9a\u662f\u539f\u76f4\u5f84\u7684\u503c\u51cf\u53bb $x$\uff08\u56e0\u4e3a\u51cf\u53bb\u4e86\u6240\u6709\u516c\u5171\u8fb9\u7684\u957f\u5ea6\uff09\u3002\n\n\u81f3\u6b64\uff0c\u8be5\u89e3\u6cd5\u7684\u6838\u5fc3\u601d\u8def\u5df2\u7ecf\u9610\u8ff0\u5b8c\u6bd5\u3002\u9664\u4e86\u5b9e\u73b0\uff0c\u6709\u4e24\u4e2a\u7279\u6b8a\u60c5\u51b5\u9700\u8981\u8003\u8651\u8fdb\u53bb\uff0c\u8bfb\u8005\u53ef\u4ee5\u5c1d\u8bd5\u81ea\u884c\u601d\u8003\u3002\n\n### \u7ec6\u8282\u6ce8\u610f\n\n\u8bb0\u5f55\u76f4\u5f84\u7684\u8def\u5f84\u53ef\u4ee5\u7528 BFS\uff0c\u5f00\u4e00\u4e2a $pre$ \u6570\u7ec4\u3002\n\n\u6bcf\u6b21\u66f4\u65b0 $dis$ \u65f6\uff0c$pre$ \u8bb0\u5f55\u5f53\u524d\u5728\u90bb\u63a5\u8868\u6570\u7ec4\u7684\u4e0b\u6807\u3002\n\n\u904d\u5386\u76f4\u5f84\u8def\u5f84\u76f4\u63a5 for \u56de\u6eaf\u3002\n\n\u904d\u5386\u7528\u5230\u4e86\u6210\u5bf9\u53d8\u6362\u7684\u6280\u5de7\u3002\u5728\u84dd\u4e66\u4e0a\u7684 $\\text{P9}$ \u9875\u6709\u8bb2\u3002\u6ce8\u610f $tot$ \u521d\u59cb\u503c\u8981\u8d4b\u503c\u6210 $1$\u3002\n\n\u66f4\u5177\u4f53\u7684\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n\n---\n\n\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\u3002\n\n```plain\n5\n1 2 2\n1 3 2\n1 4 1\n4 5 1\n```\n\n\u8fd9\u7ec4\u6570\u636e\u7684\u8f93\u51fa\u5e94\u8be5\u662f $4$ \u548c $0$\u3002\n\n\u56e0\u4e3a\u8fd9\u68f5\u6811\u4e2d\uff0c\u6709 $3$ \u4e2a\u4e0d\u540c\u7684\u76f4\u5f84\uff0c\u800c\u8fd9\u4e9b\u76f4\u5f84\u4e24\u4e24\u4e4b\u95f4\u662f\u6ca1\u6709\u516c\u5171\u8fb9\u7684\u3002\n\n\u5f53\u5b58\u5728 $3$ \u6761\u94fe $a,b,c$\uff0c\u4efb\u610f\u4e24\u8005\u7684\u548c\u4e3a\u76f4\u5f84\u65f6\uff0c\u8be5\u60c5\u51b5\u6210\u7acb\u3002\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u904d\u5386\u76f4\u5f84\u65f6\uff0c\u627e\u51fa\u4e00\u4e2a\u5f53\u524d\u6743\u503c\u548c\u4e3a\u76f4\u5f84\u957f\u4e00\u534a\u7684\u70b9\uff0c\u7136\u540e\u6743\u503c\u51cf\u5b8c\u540e\uff0c\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\uff0c\u904d\u5386\u4e00\u904d\u6811\uff0c\u8ba1\u7b97\u4ee5\u6839\u4e3a\u8d77\u70b9\u7684\u94fe\u6700\u5927\u957f\u5ea6\u3002\u5982\u679c\u548c\u76f4\u5f84\u957f\u4e00\u534a\u76f8\u7b49\uff0c\u90a3\u4e48\u5c31\u5c31\u5b58\u5728\u8be5\u7279\u6b8a\u60c5\u51b5\u3002\n\n---\n\n\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u3002\n\n```plain\n8\n1 2 2\n2 3 1\n3 4 1\n2 5 1\n5 6 1\n6 7 1\n4 8 1\n```\n\n\u611f\u8c22 @zhangjianjunab \u63d0\u4f9b\u7684 Hack \u6570\u636e\u3002\n\n\u624b\u73a9\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u68f5\u6811\u53ea\u6709\u4e00\u4e2a\u76f4\u5f84\uff0c\u4e14\u76f4\u5f84\u4e0a\u7684\u8fb9\u6743\u90fd\u662f $1$\uff0c\u66f4\u65b0\u76f4\u5f84\u65f6\uff0c\u8fb9\u53d8\u6210 $0$\uff0c\u518d\u6b21\u6c42\u76f4\u5f84\u65f6\u5c31\u6c42\u539f\u672c\u4e0d\u662f\u76f4\u5f84\u7684\u94fe\u3002\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u628a\u6240\u6709\u8fb9\u6743\u90fd\u6269\u5927\u76f8\u540c\u500d\u3002\u8fd9\u6837\u5c31\u907f\u514d\u4e86 $1$ \u7684\u60c5\u51b5\u3002\n\n\u7136\u800c\u6d1b\u8c37\u548c Acwing \u4e0a\u6ca1\u8fd9\u4e24\u4e2a\u60c5\u51b5\u7684\u6570\u636e\u3002\n\n## \u4ee3\u7801\n\n\u7279\u6b8a\u60c5\u51b5\u7684\u5904\u7406\u7a0d\u5fae\u6709\u4e00\u70b9\u70b9\u4e71\uff0c\u89c1\u8c05\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\n#define ll long long\n\nusing namespace std;\n\nconst int MAXN = 400010;\nconst int MAXM = 100010;\nconst int MAXINT = 2147483647;\nconst int INF = 0x3f3f3f3f;\nconst int mod = 1e9 + 7;\n\nint n, m, k;\nint ans, tot = 1, cnt;\nll clen, mlen;\n\nint a[MAXN];\nint head[MAXN], pre[MAXN];\nll dis[MAXN];\n\nstring s;\n\ninline int read() {\n    int s = 0, f = 1;\n    char ch = getchar();\n    while ('0' > ch || ch > '9') {if (ch == '-') f = -1; ch = getchar();}\n    while ('0' <= ch && ch <= '9') {s = (s << 3) + (s << 1) + ch - 48; ch = getchar();}\n    return s * f;\n}\n\nstruct edge {\n    int to, next;\n    ll w;\n}e[MAXN * 2];\n\nvoid add_edge(int x, int y, ll w) {\n    e[++tot].to = y;\n    e[tot].w = w;\n    e[tot].next = head[x];\n    head[x] = tot;\n    return;\n}\n\nvoid Init() {\n    for (int i = 1; i <= n; i++) {\n        dis[i] = 1ll << 60;\n        pre[i] = 0;\n    }\n    return;\n}\n\nint bfs(int s) {//\u6c42\u76f4\u5f84\uff0c\u5e76\u7528 pre \u8bb0\u5f55\u76f4\u5f84\u4fe1\u606f\u3002\n    Init();\n    dis[s] = 0;\n    pre[s] = 0;\n    queue<int> q;\n    q.push(s);\n    int res = 1;\n    while (q.size()) {\n        int x = q.front();\n        q.pop();\n        for (int i = head[x]; i; i = e[i].next) {\n            int y = e[i].to;\n            ll w = e[i].w;\n            if (dis[y] != 1ll << 60) continue;\n            dis[y] = dis[x] + w;\n            pre[y] = i;\n            if (dis[y] > dis[res]) res = y;\n            q.push(y);\n        }\n    }\n    return res;\n}\n\nvoid dfs(int x, int fa) { //dp\u6c42\u76f4\u5f84\uff0c\u6765\u6c42\u4fee\u6539\u540e\u7684\u6811\u7684\u76f4\u5f84\u3002\n    for (int i = head[x]; i; i = e[i].next) {\n        int y = e[i].to;\n        ll w = e[i].w;\n        if (y == fa) continue;\n        dfs(y, x);\n        clen = max(clen, dis[x] + dis[y] + w);\n        dis[x] = max(dis[x], dis[y] + w);\n    }\n    return;\n}\n\nvoid dfs1(int x, int fa) {//\u5224\u65ad\u7279\u6b8a\u60c5\u51b5\u6700\u957f\u94fe\u7684\u957f\u5ea6\u3002\n    for (int i = head[x]; i; i = e[i].next) {\n        int y = e[i].to, w = e[i].w;\n        if (y == fa) continue;\n        dfs1(y, x);\n        dis[x] = max(dis[x], dis[y] + w);\n        mlen = max(dis[x], mlen);\n    }\n    return;\n}\n\nint main(){\n    int T;\n    scanf(\"%d\", &n);\n    for (int i = 1, x, y; i < n; i++) {\n        ll w;\n        scanf(\"%d%d%lld\", &x, &y, &w);\n        w *= 1000;\n        if (!w) exit(0);\n        add_edge(x, y, w);\n        add_edge(y, x, w);\n    }\n\n    int p = bfs(1);\n    int q = bfs(p);\n    ll len = dis[q];\n    printf(\"%lld\\n\", len / 1000);\n    int mid, sum = 0;\n    for (; pre[q]; q = e[pre[q] ^ 1].to) {//\u4fee\u6539\u76f4\u63a5\uff0c\u5e76\u8bb0\u5f55\u76f4\u5f84\u4e2d\u70b9\u3002\n        --e[pre[q]].w;\n        --e[pre[q] ^ 1].w;\n        sum += e[pre[q]].w;\n        if (sum == len / 2) mid = e[pre[q]].to; \n    }\n    int ok = 0;\n    memset(dis, 0, sizeof(dis));\n    dfs1(mid, 0);\n    if (mlen == len / 2) ok = 1;\n    memset(dis, 0, sizeof(dis));\n    dfs(1, 0);\n    if (len / 1000 % 2 == 0 && ok) {//\u7279\u5224\u3002\n        printf(\"0\\n\");\n    }\n    else {\n        printf(\"%lld\\n\", len - clen);\n    }\n    return 0;\n}\n/*\n8\n1 2 2\n2 3 1\n3 4 1\n2 5 1\n5 6 1\n6 7 2\n4 8 2\n\n7\n1 2 2\n1 3 2\n1 4 1\n4 5 1\n1 6 2\n1 7 2\n*/ \n```\n\n> \u65e5\u4f9b\u4e00\u5352\uff0c\u529f\u4e0d\u5510\u6350\u3002\n",
        "postTime": 1590069273,
        "uid": 18673,
        "name": "ctq1999",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3304 [SDOI2013]\u76f4\u5f84"
    },
    {
        "content": "~~[\u6084\u54aa\u54aa\u7684\u7ed9\u9898\u89e3\u52a0\u6807\u7b7e:\u6811\u578b\u7ed3\u6784\uff0cbfs\uff0cdfs\uff0c\u94fe\u8868]~~\n\nT.T\u60f3\u4e86\u5feb\u4e00\u5929\u4e86\uff0c~~\u6700\u540e\u7784\u4e86\u4e00\u773c\u9898\u89e3~~\uff0c\u91cd\u6784\u4e4b\u540e\u5199\u51fa\u6765\u4e86QwQ\n\n[\u697c\u4e0b\u6709\u4e00\u4f4d\u5927\u4f6c\u9898\u89e3\u8be6\u5c3d\u800c\u4e14\u5f88\u901a\u4fd7\u6613\u61c2\uff0c\u4e0d\u8fc7\u4ed6\u5927\u6982\u662f\u5fd8\u4e86\u7ed9\u4ee3\u7801\u52a0\u6ce8\u91ca\u4e86\u2026\u2026**\u6211\u4e3b\u8981\u5206\u4eab\u4e00\u4e0b\u5177\u4f53\u5b9e\u73b0**]\n\n\u9898\u610f\u662f\u7ed9\u5b9a\u4e00\u68f5\u6709\u6743\u7684\u6811\uff0c\u6c42\u6811\u7684\u76f4\u5f84\u5927\u5c0f\u53ca\u6709\u591a\u5c11\u8fb9\u5728\u6240\u6709\u76f4\u5f84\u4e2d\u90fd\u51fa\u73b0\u4e86\u3002\n\n\u9996\u5148\u5148**\u968f\u4fbf\u627e\u4e00\u6761\u76f4\u5f84**\u3002\u7a0d\u5fae\u5177\u4f53\u7684\u8bf4\u5c31\u662f\u5148\u4efb\u610f\u9009\u53d6\u4e00\u4e2a\u70b9\uff0cbfs/dfs\u51fa\u6811\u4e0a\u79bb\u8fd9\u4e2a\u70b9\u6700\u8fdc\u7684\u4e00\u4e2a\u70b9right\uff08\u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u4f46\u4e00\u4e2a\u5c31\u597d\uff09\uff0c\u7136\u540e\u5728\u4ee5right\u4e3a\u8d77\u70b9\u91cd\u590dbfs/dfs\u4e00\u6b21\uff0c\u5f97\u5230left\u3002\u90a3\u4e48left\n\n\u4e0eright\u5c31\u662f\u6811\u4e0a\u67d0\u4e00\u6761\u76f4\u5f84\u7684\u4e24\u7aef\u4e86\u3002\uff08\u8bc1\u660e\u7565\u2190w\u2190\uff09\n\n\u597d\u4e86\uff0c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u6761\u76f4\u5f84\u3002\u6211\u4eec\u4e0d\u59a8\u628a\u5b83**\u770b\u505a\u662f\u76f4\u7684**\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/24329.png)\n\n\u5bf9\uff0c\u5c31\u4e2d\u95f4\u6700\u7c97\u7684\u90a3\u4e2a\u6761\uff0c\u5c31\u662f\u6211\u4eec\u627e\u5230\u7684\u76f4\u5f84\u3002\n\n\u770b\u4e0b\u9762\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u5904\u5f88**\u4e0d\u548c\u8c10**\u7684\u5730\u65b9\uff1a\uff08\u7ea2\u8272\u5708\u5185\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/24332.png)\n\n\u54ea\u91cc\u4e0d\u548c\u8c10\u5462\uff1f\u8fd9\u4e24\u6761\u8fb9\u770b(ji)\u4e0a(suan)\u53bb(chu)\u662f\u76f8\u7b49\u7684\uff01\n\n\u8fd9\u610f\u5473\u8fd9\u4ec0\u4e48\u5462\uff0c\u8fd9\u8bf4\u660e\u8fd9\u91cc\u8fd8\u6709\u4e00\u6761\u9690\u85cf\u7684\u6811\u7684\u76f4\u5f84\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/24330.png)\n\n\u800c\u5f88\u663e\u7136\u7684\u662f\uff1a\u8fd9\u4e24\u6761\u76f4\u5f84\u6709\u5206\u53c9\uff0c\u6216\u8005\u8bf4\u4e0d\u76f8\u4ea4\u7684\u5730\u65b9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/24332.png)\n\n\u90a3\u4e48\u8fd9\u4e2a\u5206\u53c9\u70b9\u4e4b\u4e0b\u5c31\u90fd\u6ca1\u673a\u4f1a\u4e86\uff0c**\u56e0\u4e3a\u5df2\u7ecf\u6709\u4e24\u6761\u76f4\u5f84\u4e0d\u5728\u8fd9\u8fb9\u76f8\u4ea4\u4e86**\uff0c\u53ef\u4ee5\u4e22\u4e86\u3002\n\n\u5982\u679c\u6211\u4eec\u5bf9left\u4e0eright(\u4e0a\u6587\u4e2d\u6211\u4eec\u627e\u5230\u7684\u6811\u7684\u76f4\u5f84\u7684\u4e24\u7aef)\u95f4\u4efb\u610f\u4e00\u70b9\u90fd\u5224\u65ad\u4e86\u5b83\u662f\u5426\u5206\u53c9\uff0c\u6700\u540e\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u4e0d\u5206\u53c9\u7684\u533a\u95f4\uff0c\u533a\u95f4\u5185\u6240\u6709\u7684\u8fb9\u5c31\u662f\u6211\u4eec\u8981\u7684\u7b54\u6848\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6240\u6709\u76f4\u5f84\u95f4\u5fc5\u7136\u4e92\u76f8\u6709\u4ea4\u70b9\uff08\u5426\u5219\uff0c\u4ea4\u53c9\u7684\u201c\u76f4\u5f84\u201d\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9\u201c**\u53d6\u957f\u8865\u77ed**\u201d\u4ece\u800c\u5ef6\u957f\uff09\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u6cbf\u7740\u5f53\u524d\u76f4\u5f84\u95f4\u7684\u70b9\u8d70\uff0c\u5411\u4e24\u4fa7\u5ef6\u4f38\u67e5\u627e\u6700\u957f\u8ddd\u79bb\uff0c\u5224\u65ad\u662f\u5426\u5206\u53c9\u5373\u53ef\u4fdd\u8bc1\u6211\u4eec\u8003\u8651\u4e86\u6240\u6709\u7684\u76f4\u5f84\u4e0e\u6240\u6709\u53ef\u80fd\u88ab\u6240\u6709\u76f4\u5f84\u7ecf\u8fc7\u7684\u8fb9\u3002\n\n###  _[\u7cfb\u7edf\u63d0\u793a:]\u606d\u559c\u4f60\uff0c\u601d\u8def\u5230\u6b64\u7ed3\u675f\u3002\u5982\u679c\u4f60\u5bf9\u5982\u4f55\u5b9e\u73b0\u6709\u56f0\u60d1\uff0c\u4e0d\u59a8\u7ee7\u7eed\u5f80\u4e0b\u9605\u8bfb\u3002_ \n\n\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u5b9e\u73b0\u3002\n\n\u5efa\u56fe\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u8bb0\u5f97\u52a0\u53cc\u5411\u8fb9\u548c\u5f00\u4e24\u500d\u6570\u7ec4\uff08\u90bb\u63a5\u8868\uff09\u3002\n\n\u9996\u5148\u7528\u5e7f\u641cbfs(int start, int& faraway)\u627e\u5230\u8ddd\u79bbstart\u6700\u8fdc\u7684\u70b9faraway\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f**\u7528bVis[]\u8868\u793a\u8fd9\u4e2a\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7**\uff08\u6811\u4e0a\u5e7f\u641c\u65f6\u4e0d\u53ef\u80fd\u8fd4\u56de\uff0c\u53c8\u4e0d\u662f\u6709\u73af\u56fe\u7684\u6700\u77ed\u8def233\uff09\uff0c**\u7528dis[]\u8868\u793a\u4ecestart\u641c\u5230\u5f53\u524d\u70b9\u7684\u8ddd\u79bb**\u3002\u5982\u679cdix[x]>dis[faraway]\uff0c\u5219\u66f4\u65b0faraway\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2abfs,\u66f4\u52a0\u5177\u4f53\u7684\u7ec6\u8282\u662f:faraway\u5148\u521d\u59cb\u5316\u4e3a0\uff0c\u56e0\u4e3a\u6ca1\u67090\u53f7\u70b9\uff0cdis[0]\u4e00\u76f4\u662f0\uff0c\u5f88\u201c\u5bb9\u6613\u201d\u88ab\u66f4\u8fdc\u7684\u70b9\u8986\u76d6\u3002\n\n\u66f4\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c**\u8fd9\u4e2a\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\u51fa\u6765\u7684bVis[]\u5c45\u7136\u4e0d\u662fbool\uff0c\u800c\u662f\u4e2aint\uff0c\u800c\u4e14\u8fd8\u8981\u7528\u4e00\u4e2aNextVis\u4e0e\u5b83\u6bd4\u8f83**\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u591a\u6b21\u4f7f\u7528bVis[]\u6570\u7ec4\uff08\u8fd8\u6709\u4e0b\u9762\u7684dfs\u5462\uff09\uff0c\u6bcf\u6b21\u4f7f\u7528\u5f53\u7136\u90fd\u8981\u521d\u59cb\u5316\u5b83\uff0c\u8fd9\u5c31\u6d6a\u8d39\u4e86\u5927\u628a\u7684\u65f6\u95f4\u3002\u6211\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cfNextVis\u6765\u4ee3\u8868\u771f\u503c\u2014\u2014\u5982\u679cbVis[x]==NextVis\uff0c\u5219\u4e3a\u771f\uff1a\u5426\u5219\u4e3a\u5047\u3002\u8fd9\u6837\u5b50\u6bcf\u6b21\u521d\u59cb\u5316\u53ea\u8981++NextVis\u5c31\u597d\u4e86\u3002\uff08\u8fd9\u6837\u5b50\u8dd1\u51fa\u6765670ms,\u6bcf\u6b21\u90fdmemset\u8dd1\u51fa\u6765\u662f3576ms\uff09\u5f53\u7136\uff0c\u8bfb\u8005\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u64cd\u4f5c\u6765\u907f\u514d\u53cd\u590d\u521d\u59cb\u5316\uff0c\u6216\u8005\u6709\u6839\u672c\u4e0d\u9700\u8981\u8fd9\u4e2a\u6570\u7ec4\u7684\u505a\u6cd5233\u3002\n\n\u8fd8\u6709\u5c31\u662f**\u4e3a\u4e86\u77e5\u9053\u8fd9\u4e2a\u70b9\u662f\u5426\u5206\u53c9\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u5b83\u5230\u76f4\u5f84\u5de6\u3001\u53f3\u7aef\u70b9\u7684\u8ddd\u79bb**\u3002\u5982\u679c\u8fd9\u4e2a\u8ddd\u79bb\u7b49\u4e8e\u5b83\u5411\u4fa7\u9762\u5ef6\u4f38\u51fa\u53bb\u7684\u6700\u957f\u957f\u5ea6\uff0c\u90a3\u4e48\u5c31\u5206\u53c9\u4e86\u3002\uff08\u5982\u679c\u8fd9\u4e2a\u8ddd\u79bb\u5c0f\u4e8e\u5b83\u5ef6\u4f38\u7684\u6700\u957f\u957f\u5ea6\uff0c\u606d\u559c\u4f60\uff0c\u76f4\u5f84\u627e\u9519\u4e86\uff09\u800c\u4e14\u540c\u65f6\u6211\u4eec\u6700\u597d\u5148\u628aleft\u4e0eright\u95f4\u7684\u70b9\u5206\u51fa\u6765\uff0c\u8fd9\u6837\u5904\u7406\u8d77\u6765\u65b9\u4fbf\u3002\n\n\u6211\u7684\u505a\u6cd5\u662f\u5728bfs\u65f6\u4f7f\u7528\u94fe\u8868forward[x]\u8bb0\u5f55x\u8fd9\u4e2a\u70b9\u662f\u4ece\u54ea\u91cc\u8d70\u8fc7\u6765\u7684\uff0c\u5e76\u7528disforward[x]\u8bb0\u5f55\u8d70\u8fc7\u6765\u7684\u8fb9\u957f\uff08\u6216\u8005\u76f4\u63a5\u67e5\u627e\u4e5f\u884c\uff0c\u6bd5\u7adf\u8fd9\u662f\u4e00\u68f5\u6811\uff09\u3002\u5728\u89e3\u6790\u65f6\u6cbf\u7740forward[x]\u8d70\u5e76\u5199\u5165mid[]\uff0c**\u7d2f\u52a0/\u7d2f\u51cf\u5f97\u5230\u5b83\u5230\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb**\u5e76\u7528end\u5b58mid\u91cc\u6709\u591a\u5c11\u4e2a\u5143\u7d20\uff0c\u540c\u65f6\u6807\u8bb0bInList\u8868\u793a\u5b83\u5728\u76f4\u5f84\u91cc\u3002\n\n\n\u70e6\u4eba\u7684bfs\u548c\u89e3\u6790\u7ec8\u4e8e\u8fc7\u53bb\u4e86\uff0c\u73b0\u5728\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u8ba9\u4e00\u4e2a\u70b9\u627e\u5230\u5411\u4fa7\u9762\u5ef6\u4f38\u7684\u6700\u957f\u957f\u5ea6length[]\u3002**\u8fd9\u4e2a**~~\u7b80\u76f4~~**\u5c31\u662f\u641c\u7d22**\u3002\u5728\u70b9x\u5904\u679a\u4e3e\u5b83\u76f8\u90bb\u7684\u70b9\uff0c\u5e76\u6392\u9664\u76f8\u90bb\u70b9\u5728\u76f4\u5f84\u5185\u7684\u60c5\u51b5\uff0cdfs\u9012\u5f52\u5e76\u4ece\u8fd9\u4e9b\u70b9\u4e2d\u53d6\u51fa\u4e00\u4e2a\u6700\u5927\u503c\u3002\n\n\u6700\u540e\uff0c\u7528for\u5faa\u73af\u679a\u4e3emid\u91cc\u6240\u6709\u70b9\uff0c\u4f9d\u6b21\u8c03\u7528dfs\uff0c\u6bd4\u8f83\u957f\u5ea6\u5f97\u77e5\u662f\u5426\u5206\u53c9\uff1b\u83b7\u53d6\u5de6\u53f3\u6781\u9650\u70b9\u540e\u5c31\u53ef\u4ee5\u8f93\u51fa\u7b54\u6848\u4e86\uff08**\u770b\u7740\u6d1b\u8c37AC\u7684\u82b1\u8e66\u51fa\u6765\u771f\u662f\u4e00\u4ef6\u5feb\u4e50\u7684\u4e8b\u60c523333**\uff09\n\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8bb0\u5f97long long\u2026\u2026\uff08\u5e76\u4e0d\u77e5\u9053\u4e0d\u5199\u4f1a\u4e0d\u4f1a\u8fc7\uff0c\u4f46\u662f**200000\u4e2a\u70b9\uff0c\u8fb9\u6743\u57281e9\u5185\u6015\u8fd8\u662f\u5f88\u7384**\uff09\n\n\u5982\u679c\u8fd8\u6709\u7591\u60d1\uff0c\u4e0b\u9762\u8fd8\u6709\u5b8c\u6574\u7684\u3001\u52a0\u4e86\u6ce8\u91ca\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n\n#include <queue>\n\n#define FOR_EDGE(i, pt) for (int i(iHead[pt]); i; i = all[i].next)//\u8fd9\u4e2a\u5b8f\u7528\u6765\u679a\u4e3e\u8fd9\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u6240\u6709\u8fb9\n\nclass edge\n{\npublic:\n\tint fr, to, next;\n\tlong long len;\n}all[412345];\nint iHead[212345];//\u90bb\u63a5\u8868\n\nint iEnd(2);\n\nvoid add(int fr, int to, long long len)//\u52a0\u8fb9\n{\n\tall[iEnd].fr = fr;\n\tall[iEnd].to = to;\n\tall[iEnd].len = len;\n\tall[iEnd].next = iHead[fr];\n\tiHead[fr] = iEnd++;\n}\n\nint n;\n\nint left, right;//\u7b2c\u4e00\u6761\u76f4\u5f84\u7684\u5de6\u53f3\u7aef\uff08\u7406\u89e3\u4e0a\u53ef\u4ee5\u662f\u5de6\u53f3\uff0c\u5b9e\u9645\u4e0a\u9b3c\u77e5\u9053\u54622333\uff09\nint NextVis;\nint bVis[212345], forward[212345];\nlong long disforward[212345];\nlong long dis[212345];\n\nvoid bfs(int start, int& faraway)//\u5bfb\u627e\u8ddd\u79bbstart\u6700\u8fdc\u7684\u70b9faraway\n{\n\tfaraway = 0;\n\tdis[start] = 0;\n\tbVis[start] = ++NextVis;\n\tstd::queue<int> que;\n\tque.push(start);\n\twhile (!que.empty())\n\t{\n\t\tint now(que.front());\n\t\tque.pop();\n\t\tFOR_EDGE(i, now)\n\t\t{\n\t\t\tif (bVis[all[i].to] ^ NextVis)//\u4e0d\u8981\u591a\u8651\uff0c\u5c31\u662f\"!=\"\u7684\u610f\u601d\n\t\t\t{\n\t\t\t\tbVis[all[i].to] = NextVis;\n\t\t\t\tdis[all[i].to] = dis[now] + all[i].len;\n\t\t\t\tforward[all[i].to] = now;//\u94fe\u8868\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u6765\u5904\n\t\t\t\tdisforward[all[i].to] = all[i].len;\n\t\t\t\tque.push(all[i].to);\n\t\t\t\tif (dis[all[i].to] > dis[faraway]) faraway = all[i].to;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint mid[212345], end;//\u76f4\u5f84\u7aef\u70b9\u95f4\u7684\u70b9\nbool bInList[212345];\nlong long leftlen[212345], rightlen[212345];//\u8fd9\u4e2a\u70b9\u5230\u76f4\u5f84\u5de6/\u53f3\u7aef\u7684\u8ddd\u79bb\uff0c\u7528\u5b83\u5728mid\u4e2d\u7684\u4e0b\u6807\u8bbf\u95ee\nlong long length[212345];//\u8fd9\u4e2a\u70b9\u5411\u4e24\u4fa7\u5ef6\u4f38\u7684\u6700\u5927\u957f\u5ea6\uff0c\u7528\u70b9\u7684\u6807\u53f7\u8bbf\u95ee\uff08\u6bd4\u8f83\u4eba\u5bb6dfs\u8fd8\u8981\u7528\uff09\n\nint dfs(int now)\n{\n\tFOR_EDGE(i, now)\n\t{\n\t\tif (!bInList[all[i].to] && bVis[all[i].to] ^ NextVis)//\u8fd9\u4e2a\u70b9\u4e0d\u5728\u76f4\u5f84\u5185 \u4e14 \u8fd9\u4e2a\u70b9\u672a\u88ab\u8bbf\u95ee\n\t\t{\n\t\t\tbVis[all[i].to] = NextVis;\n\t\t\tlong long val(all[i].len + dfs(all[i].to));//\n\t\t\tif (val > length[now]) length[now] = val;\n\t\t}\n\t}\n\treturn length[now];\n}\n\n\ninline int max(int a, int b) { return a > b ? a : b; }\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i(1); i != n; ++i)\n\t{\n\t\tint fr, to;\n\t\tlong long len;\n\t\tscanf(\"%d%d%lld\", &fr, &to, &len);\n\t\tadd(fr, to, len);\n\t\tadd(to, fr, len);\n\t}\n\tleft = 1;\n\tbfs(left, right);//\u4e24\u6b21bfs\u5f97\u5230\u76f4\u5f84\n\tbfs(right, left);\n\tlong long ans(dis[left]);\n\tint pos(left), disleft(0), disright(dis[left]);//\u7531\u4e8epos\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\uff0c\u5b83\u6700\u521d\u5230\u53f3\u7aef\u8ddd\u79bb\u5373\u5de6\u7aef\u70b9\u5230\u53f3\u7aef\u70b9\u7684\u8ddd\u79bbdis[left]\n\tbInList[left] = true;\n\tbInList[right] = true;//\u5de6\u53f3\u7aef\u70b9\u5f53\u7136\u5728\u76f4\u5f84\u91cc\u5566\n\twhile (pos != right)//\u8fd9\u91ccpos\u5f00\u59cb\u4eceleft\u5411right\uff08\u4ece\"\u5de6\"\u5230\"\u53f3\"\uff09\n\t{\n\t\tleftlen[end] = disleft += disforward[pos];//\u7d2f\u52a0\u5b83\u5230\u5de6\u7aef\u7684\u8ddd\u79bb\n\t\trightlen[end] = disright -= disforward[pos];\n\t\tpos = forward[pos];\n\t\tmid[end] = pos;\n\t\tbInList[pos] = true;\n\t\t++end;\n\t}\n\tint leftend(0), rightend(end - 1);\n\tfor (int i(0); i != end; ++i)\n\t{\n\t\t++NextVis; dfs(mid[i]);\n\t\tif (length[mid[i]] == leftlen[i]) leftend = i;\n\t\tif (length[mid[i]] == rightlen[i])\n\t\t{\n\t\t\trightend = i;//\u5982\u679c\u53f3\u8fb9\u5206\u53c9\u6389\u4e86\uff0c\u5728\u5411\u53f3\u679a\u4e3ei\u5c31\u6ca1\u6709\u5fc5\u8981\u4e86\uff1a\u56e0\u4e3a\u53f3\u8fb9\u90fd\u53ef\u4ee5\u6254\u4e86\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%lld\\n%d\\n\", ans, max(0, rightend - leftend));\n\treturn 0;\n}\n//The newline at the end of file :)\n```\n\n\u5ffd\u7136\u60f3\u8d77\u6765\uff0cdfs\u4e4b\u524d\u662f\u53ef\u4ee5\u4e0d\u7528memset\u7684\uff0c\u56e0\u4e3a\u5b83\u80fd\u641c\u5230\u7684\u4f4d\u7f6e\u88ab\u76f4\u5f84\u9650\u5236\u4e86\u2026\u2026\u6240\u4ee5\u5373\u4f7fmemset\uff0c\u7528\u7684\u597d\u4e5f\u4e0d\u75283700ms\u3002\n]\n\n\n",
        "postTime": 1532001415,
        "uid": 33173,
        "name": "_J_C_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "# \u3010luogu-3304\u3011\u3010SDOI2013\u3011\u76f4\u5f84\n## \u524d\u63d0\n\u6211\u4eec\u9700\u8981\u660e\u786e\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6\uff1a\n - \u6811\u7684\u76f4\u5f84\u4f1a\u6709\u5f88\u591a\u6761\n - \u4e00\u822c\u5730\uff0c\u6811\u7684\u8fd9\u4e9b\u76f4\u5f84\u6709\u4e14\u53ea\u6709\u4e00\u6bb5\u91cd\u5408\u3002\u7279\u6b8a\u5730\uff0c\u8fd9\u4e00\u6bb5\u53ef\u80fd\u662f\u4e00\u4e2a\u70b9\u3002\n ![\u4f8b\u5b50](https://cdn.luogu.com.cn/upload/pic/61338.png)\n ![2](https://cdn.luogu.com.cn/upload/pic/61339.png)\n \u5982\u56fe\u8def\u5f84$3-1-4$\u662f\u91cd\u5408\u7684\u3002\n## \u601d\u8def\n\u6c42\u51fa\u91cd\u5408\u7684\u8fd9\u4e00\u6bb5\u7684\u957f\u5ea6\uff0c\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\n## \u6c42\u6cd5\n\u8981\u6c42\u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u7531\u4e8e\u662f\u5728\u6811\u4e0a\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6c42\u51fa\u8def\u5f84\u4e24\u7aef\u7684\u7aef\u70b9\u5373\u53ef\n\n\u8fd9\u7aef\u70b9\u662f\u4ec0\u4e48\u5462\t\n\n\u5c31\u662f\u5404\u76f4\u5f84\u5728\u8fd9\u6761\u91cd\u5408\u8def\u5f84\u540c\u4fa7\u7684\u7aef\u70b9\u7684`LCA`\n\n\u4f8b\u5b50\u5c31\u662f\u4e0a\u56fe\u4e2d\uff0c\u7b2c\u4e00\u6761\u8def\u5f84\u662f$3-2$,\u7b2c\u4e8c\u6761\u8def\u5f84\u662f$3 - 6$,\u91cd\u5408\u8def\u5f84\u662f$3-4$\u3002\n\u4e24\u6761\u76f4\u5f84\u7684\u7aef\u70b9$6$\u548c$2$\u5728\u91cd\u5408\u8def\u5f84$3-4$\u7684\u540c\u4fa7\u3002\u6211\u4eec\u53ea\u9700\u8981\u6c42\u7aef\u70b9$6$\u548c$2$\u7684`LCA`\u5373\u70b9$4$\u5c31\u662f\u91cd\u5408\u8def\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\u3002\n\n\u540c\u7406\uff0c\u6c42\u51fa\u53e6\u4e00\u4e2a\u7aef\u70b9\u5373\u53ef\u3002\n\n\u7279\u6b8a\u5730\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u7684`LCA`\u5c31\u662f\u5b83\u672c\u8eab\u3002\n\n\u4f46\u662f\u591a\u4e2a\u70b9\u7684`LCA`\u6211\u4e0d\u4f1a\u7528\u500d\u589e\u6c42\u2026\u2026\u545c\u545c\u545c\u545c\u545c\u3002\n\n\u7136\u540e\u7528\u6b27\u62c9\u5e8f\u6c42\u51fa`LCA`\u5373\u53ef\uff0c\u7136\u540e\u6c42\u4e24\u4e2a`LCA`\u7684\u8ddd\u79bb\u3002\n## \u4ee3\u7801\n```cpp\n/*!\n * FileName: luogu-3304.cpp\n * This Problem is on luogu. The ID of the problem is 3304. \n * Copyright(c) 2019 Shu_Yu_Mo\n * MIT Licensed\n * Luogu: https://www.luogu.org/space/show?uid=44615\n * Github: https://github.com/oldsuold/\n * Gitee: https://gitee.com/Shu_Yu_Mo/\n * These words were created by an amazing tool written by Shu_Yu_Mo.\n */\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#define inf 0x7fffffff\n#define int long long\nusing namespace std;\nconst int _N = 200100;\nconst int _M = _N;\ninline int read()\n{\n    char c = getchar(); int sign = 1; int x = 0;\n    while(c > '9' || c < '0') { if(c=='-')sign = -1; c = getchar(); } \n    while(c <= '9' && c >= '0') { x *= 10; x += c - '0'; c = getchar(); }\n    return x * sign;\n}\nvoid swap(int & x, int & y)\n{\n\tint t = x;\n\tx = y;\n\ty = t;\n}\nint n, m; \nstruct edges{\n    int node;\n    int w;\n    int nxt;\n}edge[_M << 1];\nint tot = 0;\nint head[_N];\nvoid add(int u, int v, int w)\n{\n    edge[++tot].nxt = head[u];\n    edge[tot].node = v;\n    edge[tot].w = w;\n    head[u] = tot;\n}\nbool vis[_N];\nint dist[_N];\nvoid dfs(int nowNode)\n{\n//\tif(vis[edge[i].node]) continue;\n\tvis[nowNode] = true;\n\tfor(register int i = head[nowNode];i;i = edge[i].nxt)\n\t{\n\t\tif(vis[edge[i].node]) continue;\n\t\tdist[edge[i].node] = dist[nowNode] +  edge[i].w;\n\t\tdfs(edge[i].node);\n\t}\n}\nbool B[_N];\nint Er[_N << 1], tot_Er = 0;\nint first[_N], tot_F = 0;\nint MinId = inf;\nint MaxId = -inf;\nvoid dfsForLCA(int k)\n{\n\tvis[k] = true;\n\tfirst[k] = ++tot_F;\n\tEr[++tot_Er] = k;\n\tfor(register int i = head[k];i;i = edge[i].nxt)\n\t{\n\t\tint SonNode = edge[i].node;\n\t\tif(vis[SonNode]) continue;\n\t\tdfsForLCA(SonNode);\n\t\tEr[++tot_Er] = k;\n\t}\n}\nint To;//, ansB;\nint ans = 0;\nint RunningAns = 0;\nvoid dfsLast(int k)\n{\n\tif(k == To)\n\t{\n\t\tans = RunningAns;\n\t\treturn;\n\t}\n\tvis[k] = true;\n\tfor(register int i = head[k];i;i = edge[i].nxt)\n\t{\n\t\tint SonNode = edge[i].node;\n\t\tif(vis[SonNode]) continue;\n\t\tRunningAns++;\n\t\tdfsLast(SonNode);\n\t\tRunningAns--;\n\t}\n}\nsigned main()\n{\t\n//\tfreopen(\"test.in.txt\", \"r\", stdin);\n\tint k = 1;\n\tmemset(vis, false, sizeof(vis));\n\tn = read(), m = n - 1;\n\tfor(register int i = 1;i <= m;i++)\n\t{\n\t\tint tmpx = read(), tmpy = read(), tmpz = read();\n\t\tadd(tmpx, tmpy, tmpz);\n\t\tadd(tmpy, tmpx, tmpz);\n\t\tk = tmpx;\n\t}\n\tint MaxDis = 0, MaxId;\n\tmemset(dist, 0, sizeof(dist));\n//\tprintf(\"Start at %d\\n\", k);\n\tdfs(k);\n\tfor(register int i = 1;i <= n;i++)\n\t{\n//\t\tprintf(\"%d \", dist[i]);\n\t\tif(dist[i] > MaxDis)\n\t\t{\n\t\t\tMaxDis = dist[i];\n\t\t\tMaxId = i;\n\t\t}\n\t}\n//\tprintf(\"%d\\n\", MaxId);\n\t\n\tmemset(dist, 0, sizeof(dist));\n\tmemset(vis, false, sizeof(vis));\n\tdfs(MaxId);\n\tint MaxDis_ = 0;\n\tint MaxAns = -inf;\n\tfor(register int i = 1;i <= n;i++)\n\t\tMaxDis_ = max(MaxDis_, dist[i]);\n\tMaxAns = MaxDis_;\n\tfor(register int i = 1;i <= n;i++)\n\t\tB[i] = (dist[i] == MaxDis_);\n\t\n\tmemset(first, -1, sizeof(first));\n\tmemset(vis, false, sizeof(vis));\n\tdfsForLCA(MaxId);\n\t\n\tfor(register int i = 1;i <= tot_Er;i++) \n\t{\n//\t\tprintf(\"%d \", Er[i]);\n\t\tif(B[Er[i]])\n\t\t{\n\t\t\tMinId = min(MinId, i);\n\t\t\tMaxId = max(MaxId, i);\n\t\t}\n\t}//cout<<endl;\n//\tfor(register int i = 1;i <= tot_Er;i++) \n//\t\tprintf(\"%d \", first[Er[i]]);\n\t//printf(\"\\n%d %d\\n\", MinId, MaxId);\n\tint F_Min = inf;\n\tint LCA_Id; \n\tfor(register int i = MinId;i <= MaxId;i ++)\n\t{\n\t\t//printf(\"at %d , Er[%d] = %d, First[%d] = %d\\n\", i, i, Er[i], Er[i], first[Er[i]]);\n\t\tif(F_Min > first[Er[i]])\n\t\t{\n\t\t\tF_Min = first[Er[i]];\n\t\t\tLCA_Id = Er[i];\n\t\t}\n\t}\n\t//printf(\"LCA = %d\\n\", LCA_Id);\n//\tprintf(\"MaxDist = %d, node = %d ,%d\\n\", MaxDis2, MaxId2, MaxId);\n\t\n\tmemset(dist, 0, sizeof(dist));\n\tmemset(vis, false, sizeof(vis));\n\tint S = Er[MinId];\n\tdfs(S);//printf(\"%d\", S);\n\tmemset(first, -1, sizeof(first));\n\ttot_Er = 0;\n\ttot_F = 0;\n\tfor(register int i = 1;i <= n;i++)\n\t\tB[i] = (dist[i] == MaxDis_);\n\tmemset(vis, false, sizeof(vis));\n\tdfsForLCA(S);\n\tMinId = inf; MaxId = -inf;//cout<<endl<<endl<<\"&\"<<endl;\n\tfor(register int i = 1;i <= tot_Er;i++) \n\t{\n//\t\tprintf(\"%d \", Er[i]);\n\t\tif(B[Er[i]])\n\t\t{\n\t\t\tMinId = min(MinId, i);\n\t\t\tMaxId = max(MaxId, i);\n\t\t}\n\t}\n//\tprintf(\"MaxId = %d, MinId = %d\\n\", MaxId, MinId);\n\tF_Min = inf;\n\tint LCA_Id2; \n\tfor(register int i = MinId;i <= MaxId;i ++)\n\t{\n//\t\tprintf(\"at %d , Er[%d] = %d, First[%d] = %d\\n\", i, i, Er[i], Er[i], first[Er[i]]);\n\t\tif(F_Min > first[Er[i]])\n\t\t{\n\t\t\tF_Min = first[Er[i]];\n\t\t\tLCA_Id2 = Er[i];\n\t\t}\n\t}\n//\tprintf(\"\\n###%d %d\\n\", LCA_Id2, LCA_Id);\n\tTo = LCA_Id;\n\tmemset(vis, false, sizeof(vis));\n\tdfsLast(LCA_Id2);\n\tprintf(\"%lld\\n%lld\", MaxAns, ans);\n\t\n    return 0;\n}\n\n```\n",
        "postTime": 1561348451,
        "uid": 44615,
        "name": "ShuYuMo",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "\u6765\u5199\u4e00\u4efd\u9898\u89e3\u5427 \u8fd9\u597d\u50cf\u662f\u8fd1\u671f\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3 \n\n\u9996\u5148\u8fd9\u9053\u9898\u76ee\u9700\u8981\u4e86\u89e3\u6811\u7684\u76f4\u5f84\u7684\u4e00\u4e2a\u6027\u8d28 \n\n\u6570\u7684\u76f4\u5f84\u5fc5\u987b\u7ecf\u8fc7\u4e00\u4e2a\u70b9 \u4e14\u8fd9\u4e2a\u70b9\u4e3a\u8fd9\u4e2a\u76f4\u5f84\u7684\u4e2d\u70b9 \n\n\u53cd\u8bc1\u6cd5:\n\t\t\n    \u5047\u8bbe\u6709\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u76f4\u5f84\n\t\n    \u56e0\u4e3a\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u90fd\u6709\u4e00\u6761\u552f\u4e00\u7684\u8def\u5f84\n   \t\n    \u90a3\u4e48\u5047\u8bbe\u8fde\u63a5\u4e24\u4e2a\u4e2d\u70b9\u7684\u957f\u5ea6\u4e3alen, \u76f4\u5f84\u957f\u5ea6\u4e3amax_d\n    \n    \u90a3\u4e48\u4e24\u6761\u76f4\u5f84\u7684\u4e24\u7aef\u8ddd\u79bb\u4e3amax_d + len > max_d\n    \n   \t\u90a3\u4e48\u76f4\u5f84\u957f\u5ea6\u4e0d\u662flen\n     \n    \u77db\u76fe\n    \n    \u6240\u4ee5\u4e24\u6761\u76f4\u5f84\u5fc5\u987b\u7ecf\u8fc7\u4e00\u4e2a\u70b9\n\n\u540c\u7406\u8bc1\u660e\u8fd9\u4e2a\u70b9\u662f\u4e2d\u70b9 \u4e5f\u53ef\u4ee5\u7528\u76f8\u540c\u65b9\u6cd5 ~~\u6613\u8bc1~~\n\n\u90a3\u4e48\u6709\u4e86\u8fd9\u4e2a\u7684\u8bdd \u505a\u8fd9\u9053\u9898\u5e94\u8be5\u597d\u505a\u591a\u4e86 \u5148\u4e24\u904d$dfs$\u8dd1\u51fa$l$$\u548cr$ \n\n\u7136\u540e\u5bf9\u4e8e\u4e24\u4e2a\u7aef\u70b9\u6240\u7ecf\u8fc7\u7684\u8def\u5f84\u4e0a \u8dd1\u4e00\u904d$dfs$ \u5982\u679c$maxd == dis$\u90a3\u4e48\u5c31\u8bf4\u660e\u90a3\u4e2a\u70b9\u4e0d\u662f\u5fc5\u987b\u70b9 \u53ef\u4ee5$pass$ \u7136\u540e\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n#include <set>\n#include <map>\n#include <queue>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int INF = 2139062143;\n\n#define DEBUG(x) std::cerr << #x << \" = \" << x << std::endl\n\ninline ll read() {\n    ll f = 1, x = 0;char ch;\n    do {ch = getchar();if (ch == '-')f = -1;} while (ch > '9' || ch < '0');\n    do {x = x * 10 + ch - '0';ch = getchar();} while (ch >= '0' && ch <= '9');\n    return f * x;\n}\n\nconst int MAX_N = 2e5 + 7;\n\nstruct EDGE {\n\tint to, next, w;\n} edge[MAX_N << 1];\n\nint head[MAX_N], E;\n\nvoid addedge (int u, int v, int w) {\n\tedge[++E].to = v;\n\tedge[E].next = head[u];\n\tedge[E].w = w;\n\thead[u] = E;\n}\n\nint n, ans, f[MAX_N], vis[MAX_N], p, l, r;\n\nll dep[MAX_N], max_d;\n\ninline void dfs (int u, int fa) {\n\tf[u] = fa;\n\tfor (int i = head[u]; i; i = edge[i].next ) {\n\t\tint v = edge[i].to, w = edge[i].w;\n\t\tif (v == fa) continue;\n\t\tdep[v] = dep[u] + w;\n\t\tif (dep[v] > max_d) {\n\t\t\tmax_d = dep[v];\n\t\t\tp = v;\n\t\t}\n\t\tdfs (v, u);\n\t}\n}\n\ninline void dfs2 (int u, int fa) {\n\tfor (int i = head[u]; i; i = edge[i].next ) {\n\t\tint v = edge[i].to, w = edge[i].w;\n\t\tif (vis[v] || fa == v) continue;\n\t\tdep[v] = dep[u] + w;\n\t\tif (dep[v] > max_d) max_d = dep[v];\n\t\tdfs2 (v, u);\n\t}\n}\n\nint main() {\n\tn = read ();\n\tfor (int i = 1; i < n; i ++ ) {\n\t\tint u = read (), v = read (), w = read ();\n\t\taddedge (u, v, w);\n\t\taddedge (v, u, w);\n\t}\n\tdfs (1, 0);\n\tl = p;\n\tmax_d = 0;\n\tdep[p] = 0;\n\tdfs (l, 0);\n\tr = p;\n\tprintf (\"%lld\\n\", max_d);//\u5f00longlong\n\tbool flag = 0;\n\tfor (int i = r; i; i = f[i]) vis[i] = 1;\n\tint ll = l, rr = r;\n\tfor (int i = f[rr]; i != ll; i = f[i]) {\n\t\tint l_dis = dep[i], r_dis = dep[rr] - dep[i];\n\t\tdep[i] = max_d = 0;\n\t\tdfs2 (i, 0);\n     //l\u627e\u6700\u53f3 r\u627e\u6700\u5de6 \u6240\u4ee5l\u53ea\u9700\u8981\u627e\u4e00\u6b21\u5c31\u884c\u4e86\n\t\tif (max_d == r_dis)\n\t\t\tr = i;\n\t\tif (max_d == l_dis && !flag) {\n\t\t\tflag = 1;\n\t\t\tl = i;\n\t\t}\n\t}\n\tint ans = 1;//\u4e3a\u4ec0\u4e48\u521d\u59cb\u5316ans = 1 \u56e0\u4e3a\u540e\u9762 (i != l) \u6ca1\u6709\u628al\u7b97\u8fdb\u53bb\n\tfor (int i = f[r]; i != l; i = f[i]) ans ++ ;\n\tcout << ans << endl;\n\treturn 0;\n}\n\n\n\n```",
        "postTime": 1572259264,
        "uid": 107377,
        "name": "Cryin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "\u5148\u5c06\u6811\u7684\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u627e\u51fa\u6765\uff0c\u8003\u8651\u6811\u7684\u76f4\u5f84\u4e00\u5b9a\u662f\u4ea4\u4e8e\u4e00\u6761\u7ebf\u6bb5\u4e0a\u7684\u3002\n\u90a3\u4e48\u4ece\u76f4\u5f84\u4e24\u6bb5\u5f80\u4e2d\u95f4\u641c\u4e00\u5b9a\u662f\u4e2d\u95f4\u8fd9\u4e00\u6bb5\u8def\u5f84\u662f\u552f\u4e00\u7684\u3002\n\n\u8bbe\u76f4\u5f84\u662f$[s,t]$\uff0c\u628a\u8fd9\u4e2a\u76f4\u5f84\u62c9\u51fa\u6765\uff0c\u5de6\u4fa7\u662f$s$\uff0c\u53f3\u4fa7\u662f$t$;\n\n- \u5148\u4ee5$s$\u4e3a\u6839\uff0c\u7136\u540e\u8dd1\u6574\u4e00\u68f5\u6811\uff0c\u6c42\u51fa\u5b50\u6811\u6700\u957f\u94fe\u548c\u5b83\u7684\u6761\u6570.\n- \u4ece$t$\u5f00\u59cb\u5411\u5de6\u904d\u5386\u6574\u4e2a\u76f4\u5f84\uff0c\u627e\u5230\u6700\u5de6\u4fa7\u7684\u4e00\u4e2a\u70b9$v$\u4f7f\u5f97\u5176\u53f3\u4fa7\u76f8\u90bb\u7684\u4e00\u6761\u8fb9\u4e0d\u662f\u5fc5\u7ecf\u8fb9(\u5373\u4f7f\u5f97\u5f53\u524d\u70b9\u7684\u53f3\u4fa7\u6700\u957f\u94fe\u6761\u6570\u4e0d\u53d1\u751f\u53d8\u5316)\n- \u7136\u540e\u4ee5$t$\u4e3a\u6839\uff0c\u7136\u540e\u8dd1\u6574\u4e00\u68f5\u6811\uff0c\u6c42\u51fa\u5b50\u6811\u6700\u957f\u94fe\u548c\u5b83\u7684\u6761\u6570.\n- \u4ece$s$\u5f00\u59cb\u5411\u53f3\u904d\u5386\u6574\u4e2a\u76f4\u5f84\uff0c\u627e\u5230\u6700\u53f3\u4fa7\u7684\u4e00\u4e2a\u70b9$u$\u4f7f\u5f97\u5176\u5de6\u4fa7\u76f8\u90bb\u7684\u4e00\u6761\u8fb9\u4e0d\u662f\u5fc5\u7ecf\u8fb9(\u5373\u4f7f\u5f97\u5f53\u524d\u70b9\u7684\u5de6\u4fa7\u6700\u957f\u94fe\u6761\u6570\u4e0d\u53d1\u751f\u53d8\u5316)\n- \u94fe$[u,v]$\u4e2d\u6240\u6709\u7684\u8fb9\u90fd\u662f\u5fc5\u7ecf\u8fb9\u3002\n\n\u4e0a\u8ff0\u8fc7\u7a0b\u663e\u7136\u662f\u4e00\u4e2a\u7ebf\u6027\u8fc7\u7a0b\uff0c\u590d\u6742\u5ea6\u662f$O(n)$\n\n```cpp\n# include <cstdio>\n# include <iostream>\n# include <cstring>\n# define int long long\nusing namespace std;\nconst int N=2e5+10;\nstruct rec{ int pre,to,w;}a[N<<1];\nint n,tot;\nint d[N],head[N],tim[N],f[N],path[N],pre[N];\nvoid adde(int u,int v,int w)\n{\n\ta[++tot].pre=head[u];\n\ta[tot].to=v;\n\ta[tot].w=w;\n\thead[u]=tot;\n}\nvoid dfs1(int u,int fa,int L)\n{\n\td[u]=L;\n\tfor (int i=head[u];i;i=a[i].pre) {\n\t\tint v=a[i].to; if (v==fa) continue;\n\t\tdfs1(v,u,L+a[i].w);\n\t}\n}\nvoid dfs2(int u,int fa,int L)\n{\n\td[u]=L;\n\tfor (int i=head[u];i;i=a[i].pre) {\n\t\tint v=a[i].to; if (v==fa) continue;\n\t\tpre[v]=u; dfs2(v,u,L+a[i].w);\n\t}\n}\nvoid dfs3(int u,int fa)\n{\n\tint cnt=0,mx=0; bool leaf=1;\n\tfor (int i=head[u];i;i=a[i].pre) {\n\t\tint v=a[i].to; if (v==fa) continue; leaf=0;\n\t\tdfs3(v,u);\n\t\tif (f[v]+a[i].w>mx) mx=f[v]+a[i].w,cnt=tim[v];\n\t\telse if (f[v]+a[i].w==mx) cnt+=tim[v];\n\t}\n\tif (leaf) f[u]=0,tim[u]=1;\n\telse f[u]=mx,tim[u]=cnt;\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor (int i=1;i<n;i++) {\n\t\tint u,v,w; scanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tadde(u,v,w); adde(v,u,w);\n\t}\n\tmemset(d,0,sizeof(d));\n\tdfs1(1,0,0); int s=0;\n\tfor (int i=1;i<=n;i++) if (d[i]>d[s]) s=i;\n\tmemset(d,0,sizeof(d));\n\tdfs2(s,0,0); int t=0; pre[s]=-1;\n\tfor (int i=1;i<=n;i++) if (d[i]>d[t]) t=i;\n\tprintf(\"%lld\\n\",d[t]);\n\tint u=t,v; while (pre[u]!=-1) path[++path[0]]=u,u=pre[u]; path[++path[0]]=u;\n\tfor (int i=1;i<=path[0]/2;i++) swap(path[i],path[path[0]-i+1]);\n\tmemset(f,0,sizeof(f)); memset(tim,0,sizeof(tim)); dfs3(s,0);\n\tv=path[0];\n\tfor (int i=path[0]-1;i>=1;i--)\n\t if (tim[path[i]]-tim[path[i+1]]>0) v=i;\n\tmemset(f,0,sizeof(f)); memset(tim,0,sizeof(tim)); dfs3(t,0);\n\tu=1;\n\tfor (int i=2;i<=path[0];i++)\n\t if (tim[path[i]]-tim[path[i-1]]>0) u=i;\n\tprintf(\"%lld\\n\",v-u);\n \treturn 0;\n}\n```",
        "postTime": 1563948881,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "#\u6d1b\u8c37\u9996\u9898\u89e3\uff01\n\n##\u7b2c\u4e00\u95ee\uff1a\u88f8\u6c42\u6811\u7684\u76f4\u5f84\uff0c\u8dd1\u4e24\u904dDFS/DFS/\u6811\u5f62DP\uff0c\u539f\u7406\u8bf7\u767e\u5ea6\u3002\n\n##\u7b2c\u4e8c\u95ee\uff1a\u6613\u77e5\u7b54\u6848\u8fb9\u4e00\u5b9a\u5728\u5f00\u59cb\u6c42\u7684\u76f4\u5f84\u4e0a\uff0c\u6613\u77e5\u5c06\u6240\u6709\u7684\u76f4\u5f84\u8986\u76d6\u5728\u4e00\u8d77\u5f62\u4f3c\u4e00\u4e2a\u4e24\u8fb9\u6709\u5206\u53c9\u7684\u6811\u5e72\uff0c\u6240\u4ee5\u8981\u7f29\u5c0f\u5de6\u53f3\u7aef\u70b9\u7684\u8303\u56f4\u3002\u5177\u4f53\u8981\u904d\u5386\u76f4\u5f84\uff0c\u5e76\u5224\u65ad\u6bcf\u4e2a\u70b9\u662f\u5426\u4e3a\u4e24\u76f4\u5f84\u4ea4\u70b9\uff0c\u82e5\u662f\u5219\u5c06\u5206\u53c9\u7684\u70b9\u820d\u5f03\u6389\u3002\n\n\u00b7\u00b7\u00b7\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 200010;\nint n, tot, far;\nlong long maxd;\nint st[maxn], fa[maxn];\nlong long dis[maxn];\nbool isol[maxn];\nstruct node{\n    int v, w, nxt;\n} edge[2*maxn];\ninline void in(int x, int y, int z){\n    edge[++tot].v = y;\n    edge[tot].w = z;\n    edge[tot].nxt = st[x];\n    st[x] = tot; \n}\nvoid DFS(int now, int f){\n    fa[now] = f;\n    if(maxd < dis[now]){\n        far = now;\n        maxd = dis[now];\n    }\n    for(int i = st[now]; i; i = edge[i].nxt){\n        int to = edge[i].v;\n        if(to != f){\n            dis[to] = dis[now] + edge[i].w;\n            DFS(to, now);\n        }\n    }\n}\nvoid Liuhaoyu(int now, int f){\n    if(maxd < dis[now])    maxd = dis[now];\n    for(int i = st[now]; i; i = edge[i].nxt){\n        int to = edge[i].v;\n        if(to != f && !isol[to]){\n            dis[to] = dis[now] + edge[i].w;\n            Liuhaoyu(to, now);\n        }\n    }\n}\nint main(){\n    scanf(\"%d\", &n);\n    for(int i = 1, x, y, z; i < n; i++){\n        scanf(\"%d%d%d\", &x, &y, &z);\n        in(x, y, z);\n        in(y, x, z);\n    }\n    DFS(1, 0);\n    //printf(\"%d\\n\", far);\n    int op = far;\n    maxd = dis[op] = 0;\n    //memset(fa, 0, sizeof(fa));\n    DFS(op, 0);\n    //printf(\"%d\\n\", far);\n    /*for(int i = 1; i <= n; i++)\n        printf(\"%d \", dis[i]);*/\n    printf(\"%lld\\n\", maxd);\n    for(int i = far; i; i = fa[i])\n        isol[i] = 1;\n    int l = op, r = far;\n    bool flag = 0;\n    for(int i = fa[far]; i != op; i = fa[i]){\n        int ld = dis[i];\n        int rd = dis[far] - dis[i];\n        maxd = dis[i] = 0;\n        Liuhaoyu(i, 0);\n        if(maxd == ld && !flag){\n            l = i;\n            flag = 1;\n```\n}//\u5de6\u7aef\u70b9\u53ea\u80fd\u7f29\u4e00\u6b21\uff0c\u56e0\u4e3a\u70b9\u4ece\u53f3\u7aef\u904d\u5386\u8fc7\u6765\uff0c\u82e5\u518d\u6539\u53d8\u5de6\u7aef\u70b9\u8303\u56f4\u4f1a\u6269\u5927\u3002\n```cpp\n        if(maxd == rd)    r = i;\n    }\n    long long ans = 0;\n    for(int i = r; i != l; i = fa[i])//\u6ce8\u610f\u662f\u8fb9\uff0c\u6240\u4ee5\u5c11\u4e00\u4e2a \n        ans++;\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1503929744,
        "uid": 34174,
        "name": "Toheart",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "\u5e94\u8be5\u662f\u7b2c\u4e00\u7bc7\u968f\u673a\u5316...\n\n\u56e0\u4e3a\u770b\u5230\u9898\u89e3\u6709\u4eba\u7edf\u8ba1\u6bcf\u6761\u8fb9\u4f5c\u4e3a\u65b9\u6848\u7684\u6b21\u6570\uff0c\u90a3\u6761\u8fb9\u4f7f\u7528\u7684\u6b21\u6570=\u76f4\u5f84\u6570\u91cf\u5c31\u662f\u7b54\u6848\n\n\u4e8e\u662f\u6211\u840c\u751f\u4e86\u8fd9\u4e2a\u968f\u673a\u5316\u7684\u60f3\u6cd5\n\n\u6c42\u76f4\u5f84dfs\u5927\u5bb6\u90fd\u4f1a\n\n\u968f\u673a\u6293\u51fa\u6765\u4e00\u6761\u76f4\u5f84\uff0c\u7136\u540e\u628a\u76f4\u5f84\u4e0a\u7684\u8fb9\u6253\u4e2atag\n\n\u7136\u540e\u968f\u673a\u6293\u51e0\u6b21\uff0c\u5982\u679c\u67d0\u6761\u8fb9\u6bcf\u6b21\u90fd\u88ab\u6293\u5230\u5c31\u5047\u88c5\u4ed6\u662f\u5fc5\u7ecf\u8fb9\n\n~~\u6240\u4ee5\u8fd9\u9053\u9898\u662f\u6811\u7684\u76f4\u5f84\u677f\u5b50\u9898\uff01~~\n\n\u6b63\u786e\u6027\u6ca1\u6cd5\u4fdd\u8bc1\n\n\u611f\u89c9\u633a\u5bb9\u6613\u5361\uff0c\u5361\u6cd5\u662f\u6784\u9020\u4e00\u6761\u8fb9\u4f7f\u5f97**\u5927\u90e8\u5206\u76f4\u5f84**\uff08\u800c\u4e0d\u662f\u5168\u90e8\u76f4\u5f84\uff09\u7ecf\u8fc7\u3002\n\n\u6bd4\u5982\u4ee5\u4e0b\u8fd9\u4e2a\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/e51tkayh.png)\n\n\u7136\u540e\u8ba96\u53f7\u8fde\u4e00\u5927\u5806\u8282\u70b9\uff0c\u7136\u540e\u7948\u7977\u4e0a\u5929\u968f\u673a\u6293\u51fa\u6765\u7684\u76f4\u5f84\u90fd\u7ecf\u8fc7\u8fb9$(4,6)$\u5c31\u884c\u4e86\u3002\n\n~~\u5199\u4e86\u9898\u89e3\u7136\u540e\u628a\u81ea\u5df1\u7ed9\u53c9\u4e86\uff08x\uff09~~\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u5361\u6cd5\u4e5f\u6709\u9488\u5bf9\u7684\u65b9\u6848\uff0cdfs\u7b97\u76f4\u5f84\u7684\u65f6\u5019\u4f18\u5148\u8d70\u88ab\u6253tag\u6b21\u6570\u5c11\u7684\u8fb9\n\n\u8fd9\u6837\u4f1a\u53d8\u5f97\u66f4\u96be\u53c9\n\n\u90a3\u4e48\uff0c\u6211\u8fd9\u4e2a\u505a\u6cd5\u653e\u5728\u8fd9\u91cc\u770b\u770b\u6709\u6ca1\u6709\u4eba\u80fd\u53c9\u6389\u6211\u4e86\uff08\n\n\u7136\u800c\u6211\u8fd9\u91cc\u53ea**\u7eaf\u968f\u673a**\u62ce\u51fa\u6765\u5341\u6761\u76f4\u5f84\u5c31\u8fc7\u4e86...\n\n\u6ca1\u5f00longlong\u8c03\u4e86\u597d\u4e45TAT..\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n\nconst int maxn=400010;\nint n;\nstruct node{\n\tint to,nxt,w,id;\n}tr[maxn];int head[maxn],tot=0;\nstruct edge{\n\tint U,V,W,id;\n}s[maxn];\nint rt1,rt2;\ninline void addedge(int u,int v,int w,int id){\n\ttr[++tot].to=v;\n\ttr[tot].id=id;\n\ttr[tot].w=w;\n\ttr[tot].nxt=head[u];\n\thead[u]=tot;\n}\n\nint dep[maxn],mxdep=0,mxid;\nvoid dfs(int u,int fa){\n\tif(dep[u]>mxdep) {\n\t\tmxid=u;\n\t\tmxdep=dep[u];\n\t}\n\tfor(int i=head[u];i;i=tr[i].nxt){\n\t\tint to=tr[i].to;\n\t\tif(to==fa) continue;\n\t\tdep[to]=dep[u]+tr[i].w;\n\t\tdfs(to,u);\n\t}\n}//\u627e\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\n\nint isans[maxn];\n\nbool getans(int now,int V,int fa){\n\tif(now==V) return 1;\n\tfor(int i=head[now];i;i=tr[i].nxt){\n\t\tint to=tr[i].to;\n\t\tif(to==fa) continue;\n\t\tif(getans(to,V,now)){\n\t\t\tisans[tr[i].id]++;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}//\u7ed9\u76f4\u5f84\u6253tag\n\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%lld%lld%lld\",&s[i].U,&s[i].V,&s[i].W);\n\t\ts[i].id=i;\n\t}//\u8fd9\u91cc\u901a\u8fc7\u6539\u53d8\u52a0\u8fb9\u987a\u5e8f\u6765\u83b7\u5f97\u4e0d\u540c\u7684\u76f4\u5f84\n    //\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u5176\u4ed6\u66f4\u597d\u7684\u65b9\u6cd5\uff0c\u6211\u6bd4\u8f83\u83dc\u5c31\u8fd9\u4e48\u5199\u4e86/kel\n\tint Tim=10;\n\tfor(int limit=1;limit<=Tim;limit++){\n\t\trandom_shuffle(s+1,s+n);\n\t\tmemset(head,0,sizeof head);tot=0;memset(dep,0,sizeof dep);memset(tr,0,sizeof tr);\n\t\tfor(int i=1;i<n;i++) addedge(s[i].U,s[i].V,s[i].W,s[i].id),addedge(s[i].V,s[i].U,s[i].W,s[i].id);\n\t\tdfs(1,0);rt1=mxid;\n\t\tmxdep=0;memset(dep,0,sizeof dep);\n\t\tdfs(rt1,0);\n\t\trt2=mxid;\n\t\tgetans(rt1,rt2,0);\n\t}\n\tint Ans=0;\n\tfor(int i=1;i<n;i++) if(isans[i]==Tim) Ans++;\n\tprintf(\"%lld\\n%lld\\n\",mxdep,Ans);\n}\n```",
        "postTime": 1603778500,
        "uid": 45443,
        "name": "codesonic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "\u6811\u7684\u904d\u5386\u3001\u6811\u7684\u76f4\u5f84\u3001LCA\u3002\n\n> \u6c42\u4e00\u65e0\u6839\u6811\u6240\u6709\u76f4\u5f84\u7684\u5fc5\u7ecf\u8fb9\u6761\u6570\u3002\n\n\u53d1\u73b0\u6240\u6709\u76f4\u5f84\u5448\u8fd9\u6837\u7684\u7279\u6027\uff1a\n\n![\u56fe\u7247.png](https://i.loli.net/2021/02/26/v7BMToC8y2qf4mE.png)\n\n\u5fc5\u7ecf\u8fb9\u6307**\u6240\u6709**\u76f4\u5f84\u7684\u516c\u5171\u8fb9\uff0c\u76f8\u9f50\u6307\u4ece\u5fc5\u7ecf\u8fb9\u5c3e\u7aef\u5230\u6bcf\u4e2a\u201c\u7ec6\u679d\u672b\u8282\u201d\u7684\u957f\u5ea6\u76f8\u7b49\u3002\u4e4b\u6240\u4ee5\u8fd9\u6837\uff08\u76f8\u9f50\uff09\uff0c\u662f\u56e0\u4e3a\uff1a\u5047\u5982\u4e0d\u76f8\u9f50\uff0c\u76f4\u5f84\u5c31\u201c\u4f1a\u53d8\u957f\u201d\uff0c\u4e0e\u5f53\u524d\u201c\u6709\u8fd9\u4e48\u591a\u6761\u76f4\u5f84\u6210\u8fd9\u6837\u7684\u72b6\u6001\u201d\u77db\u76fe\uff01\n\n\u4e8e\u662f\u73b0\u5728\u6211\u4eec\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u5bfb\u627e\u5fc5\u7ecf\u8fb9\u7684\u4fe9\u7aef\u70b9\u3002\n\n\u53d1\u73b0\u5fc5\u7ecf\u8fb9\u4e24\u5934\u90a3\u4e24\u5757\u513f\u5f62\u6210\u4fe9\u5b50\u6811\u7ed3\u6784\uff0c\u4e8e\u662f\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u5bf9\u6bcf\u4e00\u8fb9\u7684\u7ec6\u679d\u672b\u8282\u6c42\u516c\u5171\u7684 LCA\uff0c\u4e0a\u5934\u7684\u7b54\u6848\u5c31\u5f97\u5230\u5fc5\u7ecf\u8fb9\u7684\u4e0a\u7aef\u70b9\uff0c\u4e0b\u5934\u5f97\u5230\u53e6\u4e00\u4e2a\u7aef\u70b9\uff0c\u4ece\u6811\u7684\u76f4\u5f84\u7684\u8282\u70b9\u5e8f\u5217\u4e2d\u627e\u5230\u8fd9\u4e00\u6bb5\uff0c\u5c06\u5b83\u5305\u542b\u7684\u8282\u70b9\u4e2a\u6570\u51cf\u4e00\u5f97\u5230\u8fb9\u6570\u7136\u540e\u8f93\u51fa\u7b54\u6848\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fd9\u4fe9\u5b50\u6811\u6839\u548b\u627e\uff0c\u4e5f\u5c31\u662f LCA \u7684\u6df1\u5ea6\u662f\u57fa\u4e8e\u54ea\u4e2a\u70b9\u4f5c\u4e3a\u6839\u7684\u3002\n\n\u5047\u5982\u6b64\u76f4\u5f84\uff08\u6211\u4eec\u4efb\u627e\u7684\u4e00\u6761\uff09\u7684\u4e00\u7aef\u5c5e\u4e8e\u4e0a\u5934\u90a3\u5757\u513f\uff0c\u5c31\u4ee5\u6b64\u76f4\u5f84\u53e6\u4e00\u7aef\u4e3a\u6839\u6c42\u4e0a\u5934\u5b50\u6811\u7684 LCA\uff1b\u53cd\u4e4b\u540c\u7406\u3002\u4f60\u4f1a\u53d1\u73b0\u6307\u5b9a\u5176\u4ed6\u8282\u70b9\u4e3a\u6839\u6c42 LCA \u5e76\u4e0d\u80fd\u6b63\u786e\u5730\u627e\u5230\u5fc5\u7ecf\u8fb9\u7aef\u70b9\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=2e5+5;\nint dep[N],fa[N][20];\nmap<int,int> e[N];\nvector<pair<int,int> > G[N];\nvector<int> route,s;\ninline void dfs(int x,int p){//\u666e\u901adfs\uff0c\u5904\u7406\u51fa\u6df1\u5ea6\u30012^k\u8f88\u7236\u8282\u70b9\n    dep[x]=dep[p]+1; fa[x][0]=p;\n    for(int i=1;i<=19;i++) fa[x][i]=fa[fa[x][i-1]][i-1];\n    for(int i=0;i<G[x].size();i++){\n        int y=G[x][i].first;\n        if(y^p) dfs(y,x);\n    }\n}\ninline void findfur(int x,int fa,int sum,int &v,int &len){ //\u627e\u8ddd\u4e00\u70b9\u6700\u8fdc\u7684\u70b9\u4e3av\uff0c\u8be5\u8ddd\u79bb\u4e3alen\n    if(len<sum) len=sum,v=x;\n    for(int i=0;i<G[x].size();i++){\n        int y=G[x][i].first;\n        if(y^fa) findfur(y,x,sum+G[x][i].second,v,len);\n    }\n}\nbool notice;\ninline void ggdfs(int x,int fa,int target){ //x\u5230target\u7684\u8def\u5f84\u4e3aroute\n    route.push_back(x);\n    if(target==x) {notice=1;return;}\n    for(int i=0;i<G[x].size();i++){\n        int y=G[x][i].first;\n        if(y^fa) ggdfs(y,x,target);\n        if(notice) return;\n    }\n    route.pop_back();\n}\ninline int getdia(){ //\u8fd4\u56de\u76f4\u5f84\uff0c\u540c\u65f6\u5185\u90e8\u6c42\u51fa\u76f4\u5f84\u8282\u70b9\u5e8f\u5217route\n    int u1,l1=0; findfur(1,0,0,u1,l1);\n    int u2,l2=0; findfur(u1,0,0,u2,l2);\n    ggdfs(u1,0,u2); //\u4eceu1\u5230u2\u7684\u8282\u70b9\u8def\u5f84\u50a8\u5b58\u5230route\u4e2d\n    return l2;\n}\ninline void stcdfs(int x,int fa,int sum,int tl){ //\u4ece\u4e00\u70b9\u51fa\u53d1\u627e\u6240\u6709\u957f\u4e3atl\u7684\u8def\u5f84\u7684\u53e6\u4e00\u7aef\n    if(tl==sum) s.push_back(x);\n    for(int i=0;i<G[x].size();i++){\n        int y=G[x][i].first;\n        if(y^fa) stcdfs(y,x,sum+G[x][i].second,tl);\n    }\n}\ninline int lca(int u,int v){ \n    if(dep[u]>dep[v]) swap(u,v);\n    for(int i=19;i>=0;i--) if(dep[fa[v][i]]>=dep[u]) v=fa[v][i];\n    if(u==v) return u;\n    for(int i=19;i>=0;i--) if(fa[u][i]!=fa[v][i]) u=fa[u][i],v=fa[v][i];\n    return fa[u][0];\n}\ninline int findall(int st,int d){ //\u627e\u4e00\u5934\u7684\u7ec6\u679d\u672b\u8282\u7684\u516c\u5171LCA\n    s.clear();\n    stcdfs(st,0,0,d);\n    int l=s[0];\n    for(int i=1;i<s.size();i++) l=lca(l,s[i]);\n    return l;\n}\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    int n;\n    cin>>n;\n    for(int i=1;i<=n-1;i++){\n        int u,v,w;\n        cin>>u>>v>>w;\n        G[u].push_back(make_pair(v,w));\n        G[v].push_back(make_pair(u,w));\n        e[u][v]=e[v][u]=1;\n    }\n    int d=getdia();\n    dfs(route[0],0);int beg=findall(route[0],d);\n    dfs(route.back(),0);int end=findall(route.back(),d);\n    int flag=0,ans=0;\n    for(int i=0;i<route.size();i++){\n        if(end==route[i]) flag=1;\n        ans+=flag;\n        if(route[i]==beg) flag=0;\n    }\n    cout<<d<<endl<<ans-1<<endl;\n    return 0;\n}\n```",
        "postTime": 1614320424,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3004\u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "**\u57fa\u672c\u601d\u8def\uff1a**\n\n- \u9898\u76ee\u8981\u6c42\u6811\u76f4\u5f84\u7684\u5fc5\u7ecf\u8fb9\uff0c\u90a3\u4e48\u9996\u5148\u5e94\u5f53\u83b7\u53d6\u4e00\u6761\u76f4\u5f84.\n- \u83b7\u53d6\u76f4\u5f84\u540e\u4ece\u76f4\u5f84\u4e0a\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u904d\u5386\u4e00\u6b21\u76f4\u5f84\uff0c\u6bcf\u6b21\u904d\u5386\u76f4\u5f84\u65f6\u4ece\u76f4\u5f84\u4e0a\u7684\u6bcf\u4e2a\u70b9\u5206\u522bdfs\u4e00\u6b21\u5e76\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u5982\u679c\u6df1\u5ea6\u53ef\u4ee5\u88ab\u66ff\u6362\u5219\u8bf4\u660e\u975e\u5fc5\u7ecf\u8fb9.\n\n\n\n------------\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<queue>\n#include<cstring>\n#define ll long long\nusing namespace std;\nconst int MAXN=2e5+10,MAXM=MAXN*2;\nstruct Edge{\n    ll from,to,w,nxt;\n}e[MAXM];\nint head[MAXN],edgeCnt=1;\nvoid addEdge(ll u,ll v,ll w){\n    e[++edgeCnt].from=u;\n    e[edgeCnt].to=v;\n    e[edgeCnt].w=w;\n    e[edgeCnt].nxt=head[u];\n    head[u]=edgeCnt;\n}\nll dep[MAXN];\nbool vis[MAXN];\nint n;\nint from[MAXN];\nbool inDiameter[MAXN];//\u662f\u5426\u5728\u76f4\u5f84\u4e0a\nll st,ed;//\u76f4\u5f84\u7aef\u70b9\nvoid markDiameter(){//\u6807\u8bb0\u76f4\u5f84\n    int tmp=ed;\n    while(tmp){\n        inDiameter[tmp]=1;\n        tmp=from[tmp];\n    }\n}\nll bfs(int s){//\u6c42\u76f4\u5f84\n    memset(dep,0,sizeof(dep));\n    memset(vis,0,sizeof(vis));\n    memset(from,0,sizeof(from));\n    queue<int> q;\n    q.push(s);\n    vis[s]=1;\n    while(!q.empty()){\n        int nowU=q.front();\n        q.pop();\n        for(int i=head[nowU];i;i=e[i].nxt){\n            int nowV=e[i].to;\n            if(!vis[nowV]){\n                dep[nowV]=dep[nowU]+e[i].w;\n                vis[nowV]=1;\n                from[nowV]=nowU;\n                q.push(nowV);\n            }\n        }\n    }\n    ll ans=0,ansDep=0;\n    for(int i=1;i<=n;i++){\n        if(dep[i]>ansDep){\n            ans=i,ansDep=dep[i];\n        }\n    }\n    return ans;\n}\nll dis_fromST[MAXN];//\u6bcf\u4e2a\u70b9\u5230\u76f4\u5f84st\u7aef\u70b9\u7684\u8ddd\u79bb\nbool vis_getDisFromST[MAXN];\nvoid bfs_getDisFromST(){\n    queue<int> q;\n    q.push(st);\n    vis_getDisFromST[st]=1;\n    while(!q.empty()){\n        int nowU=q.front();\n        q.pop();\n        for(int i=head[nowU];i;i=e[i].nxt){\n            int nowV=e[i].to;\n            if(!vis_getDisFromST[nowV]){\n                vis_getDisFromST[nowV]=1;\n                dis_fromST[nowV]=dis_fromST[nowU]+e[i].w;\n                q.push(nowV);\n            }\n        }\n    }\n}\nll dis_fromED[MAXN];//\u6bcf\u4e2a\u70b9\u5230\u76f4\u5f84ed\u7aef\u70b9\u7684\u8ddd\u79bb\nbool vis_getDisFromED[MAXN];\nvoid bfs_getDisFromED(){\n    queue<int> q;\n    q.push(ed);\n    vis_getDisFromED[ed]=1;\n    while(!q.empty()){\n        int nowU=q.front();\n        q.pop();\n        for(int i=head[nowU];i;i=e[i].nxt){\n            int nowV=e[i].to;\n            if(!vis_getDisFromED[nowV]){\n                vis_getDisFromED[nowV]=1;\n                dis_fromED[nowV]=dis_fromED[nowU]+e[i].w;\n                q.push(nowV);\n            }\n        }\n    }\n}\nll dep_noDiameter[MAXN];//\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u7684\u6700\u5927\u6df1\u5ea6\nll dfs_noDiameter(int x,int fa){\n    ll maxDep=dep_noDiameter[x];\n    for(int i=head[x];i;i=e[i].nxt){\n        int nowV=e[i].to;\n        if(nowV==fa||inDiameter[nowV])continue;\n        dep_noDiameter[nowV]=dep_noDiameter[x]+e[i].w;\n        ll tmp=dfs_noDiameter(nowV,x);\n        maxDep=max(maxDep,tmp);\n    }\n    return maxDep;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n-1;i++){\n        ll a,b,c;\n        cin>>a>>b>>c;\n        addEdge(a,b,c);\n        addEdge(b,a,c);\n    }\n    st=bfs(1);\n    ed=bfs(st);//\u76f4\u5f84\n    cout<<dep[ed]<<endl;\n    markDiameter();//\u6807\u8bb0\u76f4\u5f84\u4e0a\u70b9\n    bfs_getDisFromST();\n    bfs_getDisFromED();//\u83b7\u53d6\u6bcf\u4e2a\u70b9\u5230\u4e24\u4e2a\u7aef\u70b9\u7684\u8ddd\u79bb\n    int l=st,r=ed;//\u5fc5\u7ecf\u8fb9\u7aef\u70b9\n    int tmp=from[ed];\n    while(tmp){//r\n        if(tmp==st)break;\n        dep_noDiameter[tmp]=0;\n        ll nowMaxDep=dfs_noDiameter(tmp,0);\n        if(nowMaxDep==dis_fromED[tmp]){\n            r=tmp;\n        }\n        tmp=from[tmp];\n    }\n    bfs(ed);//\u91cd\u65b0\u83b7\u53d6from\u6570\u7ec4\n    tmp=from[st];\n    while(tmp){//l\n        if(tmp==ed||tmp==r)break;\n        ll nowMaxDep=dfs_noDiameter(tmp,0);\n        if(nowMaxDep==dis_fromST[tmp])l=tmp;\n        tmp=from[tmp];\n    }\n    int cnt=0;\n    tmp=l;\n    while(tmp){\n        if(tmp==r)break;\n        cnt++;\n        tmp=from[tmp];\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}\n```\n",
        "postTime": 1572138152,
        "uid": 115758,
        "name": "Object_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "# \u6811\u7684\u76f4\u5f84\n\u672c\u9898\u601d\u8def\u4e0d\u96be\u60f3\u3002\u7b2c\u4e00\u95ee\u5c31\u662f\u6811\u7684\u76f4\u5f84\u7684\u6a21\u677f\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002\u91cd\u70b9\u770b\u7b2c\u4e8c\u95ee\u3002\n\n\u7b2c\u4e8c\u95ee\u8981\u6c42\u7684\u662f\u88ab\u6240\u6709\u76f4\u5f84\u8986\u76d6\u7684\u8fb9\u7684\u6761\u6570\u3002\u9996\u5148\u81ea\u7136\u8981\u6c42\u51fa\u4efb\u610f\u4e00\u6761\u76f4\u5f84\uff0c\u5e76\u628a\u8be5\u76f4\u5f84\u4e0a\u7684\u70b9\u7528vector\u5b58\u50a8\u4e0b\u6765(\u4ee3\u7801\u4e2d\u7528\u7684\u662fp)\uff0c\u7136\u540e\u4ece\u6bcf\u4e2a\u76f4\u5f84\u4e0a\u7684\u70b9\u5f00\u59cbdfs\uff0c\u6c42\u51fa\u5728\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u4e0a\u5176\u4ed6\u70b9\u7684\u6761\u4ef6\u4e0b\uff0c\u8be5\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u6811\u4e0a\u6700\u8fdc\u8ddd\u79bb\uff0c\u8bb0\u5f55\u5728dis\u6570\u7ec4\u4e2d\u3002\n\n\u63a5\u4e0b\u53bb\u8003\u8651\u4e00\u4e2aL\u6570\u7ec4\u548cR\u6570\u7ec4\uff0c\u5206\u522b\u8868\u793a\u5230st\u70b9\u548ced\u70b9\u7684\u8ddd\u79bb\u3002\u5982\u679c\u67d0\u4e2a\u70b9\u7684dis\u503c\u548cL\u503c\u76f8\u7b49\uff0c\u8bf4\u660e\u8be5\u70b9\u5230\u76f4\u5f84\u8d77\u70b9\u7684\u8ddd\u79bb\u548c\u8be5\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u6811\u4e0a\u6700\u8fdc\u8ddd\u79bb\u76f8\u7b49\uff0c\u8bf4\u660e\u8be5\u70b9\u5de6\u4fa7\u4e0d\u53ef\u80fd\u518d\u5b58\u5728\u201c\u76f4\u5f84\u8fb9\u201d\u3002\u628a\u8fd9\u4e2a\u70b9\u8bb0\u4e3aj\u3002\n\n\u540c\u7406\uff0c\u82e5\u67d0\u4e2a\u70b9\u7684dis\u503c\u548cR\u503c\u76f8\u7b49\uff0c\u8bf4\u660e\u8be5\u70b9\u5230\u76f4\u5f84\u7ec8\u70b9\u7684\u8ddd\u79bb\u548c\u8be5\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u6811\u4e0a\u6700\u8fdc\u8ddd\u79bb\u76f8\u7b49\uff0c\u8bf4\u660e\u8be5\u70b9\u53f3\u4fa7\u4e0d\u53ef\u80fd\u518d\u5b58\u5728\u201c\u76f4\u5f84\u8fb9\u201d\u3002\u628a\u8fd9\u4e2a\u70b9\u8bb0\u4e3ak\n\n\u90a3\u4e48j\u548ck\u4e4b\u95f4\u7684\u8fb9\u7684\u6761\u6570\u5373\u4e3a\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7528LCA\u4e2d\u7684dep\u6570\u7ec4\u5f97\u5230\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC opitimize(2)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll,ll> PLL;\nconst int N=2e5+5,M=2e5+5,t=18; \nnamespace Read\n{\n\tinline ll read()\n\t{\n\t\tll s=0,f=1; char ch=getchar();\n\t\twhile(!isdigit(ch)){if(ch=='-') f=-1; ch=getchar();}\n\t\twhile(isdigit(ch)) s=s*10+(ch^48),ch=getchar();\n\t\treturn s*f;\n\t}\n\tinline void write(ll x)\n\t{\n\t\tif(x<0) putchar('-'),x=-x;\n\t\tif(x>9) write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}using namespace Read;\nnamespace Gragh\n{\n\tll n,m,tot=0;\n\tll head[N],Next[M<<1],des[M<<1],len[M<<1];\n\tinline void add(ll a,ll b,ll c)\n\t{\n\t\tNext[++tot]=head[a]; des[tot]=b; len[tot]=c;\n\t\thead[a]=tot;\n\t}\n}using namespace Gragh;\nnamespace Diameter\n{\n\tll st,ed;\n\tll v[N],dist[N],pre[N];\n\tvector<ll> p;\n\tvoid bfs(ll x)\n\t{\t\n    \tmemset(v,0,sizeof v);\n    \tmemset(dist,0,sizeof dist);\n    \tmemset(pre,0,sizeof pre);\n    \tqueue<ll> q;\n    \tq.push(x);  v[x]=1;\n   \t \twhile(!q.empty())\n    \t{\n    \t\tll x=q.front(); q.pop();\n    \t\tfor(ll i=head[x]; i; i=Next[i])\n    \t\t{\n    \t\t\tll y=des[i],z=len[i];\n    \t\t\tif(v[y]) continue;\n    \t\t\tq.push(y); v[y]=1;\n    \t\t\tdist[y]=dist[x]+z;\n    \t\t\tpre[y]=x;\n\t\t\t}\n\t\t}\n\t}\n\tinline void diameter()\n\t{\n\t\tbfs(1);\n\t\tst=1;\n\t\tfor(ll i=2; i<=n; i++)\n\t\t    if(dist[i]>dist[st]) st=i;\n\t\tbfs(st);\n\t\ted=st;\n\t\tfor(ll i=1; i<=n; i++)\n\t\t    if(dist[i]>dist[ed]) ed=i;\n\t}\n\tinline void get_path()\n\t{\n\t\tmemset(v,0,sizeof v);\n\t\tll t=ed;\n\t\twhile(t){v[t]=1; p.push_back(t); t=pre[t];}\n\t}\n}using namespace Diameter;\nnamespace LCA\n{\n    ll dep[N],f[N][20],Dist[N];\n\tinline void Bfs(ll s)\n\t{\n\t\tmemset(dep,0,sizeof dep);\n\t\tmemset(f,0,sizeof f);\n\t\tmemset(Dist,0,sizeof Dist);\n\t\tqueue<ll> q;\n\t\tq.push(s); dep[s]=1;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tll x=q.front(); q.pop();\n\t\t\tfor(ll i=head[x]; i; i=Next[i])\n\t\t\t{\n\t\t\t\tll y=des[i],z=len[i];\n\t\t\t\tif(dep[y]) continue;\n\t\t\t\tdep[y]=dep[x]+1;\n\t\t\t\tf[y][0]=x;\n\t\t\t\tDist[y]=Dist[x]+z;//dist\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u6811\u4e0a\u4e24\u70b9\u95f4\u8ddd\u79bb \n\t\t\t\tfor(ll j=1; j<=t; j++)\n\t\t\t\t    f[y][j]=f[f[y][j-1]][j-1];\n\t\t\t\tq.push(y); \n\t\t\t} \n\t\t}\n\t} \n\tinline ll lca(ll x,ll y)\n\t{\n\t\tif(dep[x]>dep[y]) swap(x,y);\n\t\tfor(ll i=t; i>=0; i--) if(dep[f[y][i]]>=dep[x]) y=f[y][i];\n\t\tif(x==y) return x;\n\t\tfor(ll i=t; i>=0; i--) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\t\treturn f[x][0]; \n\t}\n}using namespace LCA;\nnamespace Ans\n{\n\tll j,k;\n\tll dis[N],L[N],R[N];\n\tvoid dfs(ll x,ll pre)\n\t{\n\t\tfor(ll i=head[x]; i; i=Next[i])\n\t\t{\n\t\t\tll y=des[i],z=len[i];\n\t\t\tif(y==pre || v[y]) continue;\n\t\t\tdfs(y,x);\n\t\t\tdis[x]=max(dis[x],dis[y]+z);\n\t\t}\n\t}\t\n\tinline void get_LR()\n\t{\n\t\tBfs(st);\n\t\tfor(ll i=1; i<=n; i++)\n\t\t    if(i!=st) L[i]=Dist[i];\n\t\tBfs(ed); \n\t\tfor(ll i=1; i<=n; i++)\n\t\t    if(i!=ed) R[i]=Dist[i];\n\t}\n\tinline void get_jk()\n\t{\n\t\tvector<PLL> t1,t2;\n\t\tfor(ll i=1; i<=n; i++)\n\t\t    if(R[i]==dis[i]) t1.push_back({dis[i],i});\n\t\tsort(t1.begin(),t1.end());\n\t\tj=t1.back().second;\n\t\t\n\t\tfor(ll i=1; i<=n; i++)\n\t\t    if(L[i]==dis[i]) t2.push_back({dis[i],i});\n\t\tsort(t2.begin(),t2.end());\n\t \tk=t2.back().second;\n\t} \n}using namespace Ans;\nint main()\n{\n\tn=read();\n\tfor(ll i=1; i<n; i++)\n\t{\n\t\tll a=read(),b=read(),c=read();\n\t\tadd(a,b,c); add(b,a,c);\n\t}\n\tdiameter();\n\twrite(dist[ed]),puts(\"\");\n\tget_path();\n\tfor(ll i=0; i<p.size(); i++) dfs(p[i],0);\n\tget_LR();//\u8ba1\u7b97L\u6570\u7ec4\u548cR\u6570\u7ec4 \n\tget_jk();//\u5f97\u5230j\u548ck\u4e24\u4e2a\u70b9 \n\tll ans=dep[k]+dep[j]-2*dep[lca(k,j)];//j\u548ck\u4e4b\u95f4\u8fb9\u7684\u6761\u6570 \n\twrite(ans);   \n\treturn 0;\n}\n```\n",
        "postTime": 1595552858,
        "uid": 91375,
        "name": "crh1272336175",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "```cpp\n/*\n\u76f4\u5f84\uff1a \u6b63\u6743\u6c42\u6cd5\u4e24\u6b21dfs\uff1a\n1. \u4efb\u610f\u9009\u4e00\u4e2a\u70b9\u505a\u4e3a\u6839\uff0c\u627e\u6700\u957f\u7684\u4e00\u4e2a\u70b9p1\n2. \u7528p1\u505a\u6839\uff0c\u627e\u6700\u957f\u4e00\u4e2a\u70b9q,  p1->q\u5c31\u662f\u4e00\u6761\u76f4\u5f84\n\n2.1 p1\u505a\u6839\uff0c\u627e\u51fa\u6240\u6709\u6700\u957f\u7684\u70b9qi\uff0c\n2.2 p1 -> qi\u90fd\u662f\u76f4\u5f84\uff0c\u627e\u51fap1->qi\u7684\u516c\u5171LCA,  lcaq\n2.3 \u4efb\u610f\u9009\u4e00\u4e2aq1\uff0c\u627e\u51fa\u6240\u6709\u6700\u957f\u7684\u70b9pi\n            lcap    lcaq\n    p1 ---- Y-----X-----> q1\n    p2  ----|     |____> q2\n                 |-- q3\n\n3. dep[lcaq] - dep[lcap] -> \u8fb9\u7684\u6570\u76ee\n*/    \n```\n# \u6734\u7d20\u7b97\u6cd5\n```cpp\n#include <iostream>\n#include <vector>\n\n#define N 200005\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct Edge {\n    int y, w;\n};\n\nvector<Edge> g[N];\nint n, fa[N], dep[N];\nll len[N], mx = 0;\nint p[N], last;\n\nvoid getMaxs() {\n    last = 0;\n    mx = 0;\n    for (int i = 1; i <= n; i++)\n        mx = max(mx, len[i]);\n\n    for (int i = 1; i <= n; i++)\n        if (len[i] == mx)\n            p[++last] = i;\n}\n\nvoid dfs(int x, int _fa, int _dep, ll _len) {\n    fa[x] = _fa;\n    dep[x] = _dep;\n    len[x] = _len;\n    for (int i = 0; i < g[x].size(); i++) {\n        int y = g[x][i].y, w = g[x][i].w;\n        if (y == _fa) continue;\n        dfs(y, x, _dep + 1, _len + w);\n    }\n}\n\nint lca(int x, int y) {\n    if (dep[x] < dep[y]) swap(x, y);\n    while (dep[x] > dep[y])\n        x = fa[x];\n    while (x != y) {\n        x = fa[x];\n        y = fa[y];\n    }\n    return x;\n}\n\nint getCommonLca() {\n    int x = p[1];\n    for (int i = 2; i <= last; i++)\n        x = lca(x, p[i]);\n    return x;\n}\n\nint main() {\n    cin >> n;\n    for (int i = 1; i <= n - 1; i++) {\n        int x, y, w;\n        cin >> x >> y >> w;\n        Edge e1 = {y, w};\n        g[x].push_back(e1);\n        Edge e2 = {x, w};\n        g[y].push_back(e2);\n    }\n    dfs(1, 0, 1, 0);\n    getMaxs();\n    dfs(p[1], 0, 1, 0);\n    getMaxs();\n    int lca_u = getCommonLca();\n    dfs(p[1], 0, 1, 0);\n    getMaxs();\n    int lca_v = getCommonLca();\n    cout << mx << endl;\n    cout << (dep[lca_v] - dep[lca_u]) << endl;\n    return 0;\n}\n\n```\n![](https://cdn.luogu.com.cn/upload/pic/66165.png)\n# \u6b63\u89e3\n```cpp\n#include <iostream>\n#include <vector>\n#include <cmath>\nusing namespace std;\ntypedef long long ll;\nstruct Edge {\n  int y, w;\n};\nconst int N=200005;\nint n,dep[N],fa[N], lgn, st[N][18];\nll dis[N], mx;\nint p[N], last;\nvector<Edge> g[N];\n\nvoid calcMaxs() {\n  last = 0, mx=0;\n  for(int i=1; i<=n; i++)\n    mx = max(mx, dis[i]);\n  for(int i=1; i<=n; i++)\n    if(dis[i]==mx)\n      p[++last] = i;\n}\n\nvoid dfs(int x, int _fa, int _dep, ll _dis) {\n  fa[x] = _fa;\n  dep[x] = _dep;\n  dis[x] = _dis;\n  st[x][0] = _fa;\n  for(int i=0; i<g[x].size(); i++) {\n    int y = g[x][i].y, w=g[x][i].w;\n    if(y == _fa) continue;\n    dfs(y, x, _dep+1, _dis+w);\n  }\n}\n\nvoid initSt() {\n  for(int j=1; j<=lgn; j++)\n    for(int i=1; i<=n; i++)\n      st[i][j] = st[st[i][j-1]][j-1];\n}\n\nint lca(int x, int y) {\n  if(dep[x]<dep[y]) swap(x, y);\n  /*while(dep[x]>dep[y])\n    x = fa[x];\n  while(x!=y) {\n    x = fa[x];\n    y = fa[y];\n  }*/\n  int d = dep[x] - dep[y];\n\tfor(int i=0; i<=lgn; i++)\n\t  if((d>>i)&1)\n\t\t  x = st[x][i];\n\n  if(x==y) return x;\n\n  for(int i=lgn; i>=0; i--) {\n    if(st[x][i]==st[y][i]) continue;\n    x = st[x][i];\n    y = st[y][i];\n  }\n  return st[x][0];\n}\n\nint commonLca() {\n  int cl = p[1];\n  for(int i=2; i<=last; i++)\n    cl = lca(cl, p[i]);\n  return cl;\n}\n\nint main() {\n  cin>>n;\n  lgn = log2(n);\n  for(int i=1; i<=n-1; i++) {\n    int x, y, w;\n    cin>>x>>y>>w;\n    g[x].push_back((Edge){y, w});\n    g[y].push_back((Edge){x, w});\n  }\n  //\u7b2c\u4e00\u4e2a\u7aef\u70b9u\n  dfs(1, 0, 1, 0);\n  calcMaxs();\n  int u = p[1];\n  \n  //\u7b2c\u4e8c\u4e2a\u7aef\u70b9v\n  dfs(u, 0, 1, 0);\n  calcMaxs();\n  int v = p[1];\n  //u\u4e3a\u6839\u7684\u65f6\u5019\uff0cp[i]\u7684\u516c\u5171lca\n  initSt();\n  int lca_u = commonLca();\n\n  //v\u4e3a\u6839\u7684\u65f6\u5019\uff0cp[i]\u7684\u516c\u5171lca\n  dfs(v, 0, 1, 0);\n  calcMaxs();\n  initSt();\n  int lca_v = commonLca();\n  \n  //\u6c42\u516c\u5171\u8fb9\u7684\u6570\u76ee, dep[lca_v]-dep[lca_u]\n  cout<<mx<<endl;\n  cout<<dep[lca_v]-dep[lca_u]<<endl;\n  \n  return 0;\n}\n\n\n```\n",
        "postTime": 1564226189,
        "uid": 179983,
        "name": "59percent",
        "ccfLevel": 0,
        "title": "\u76f4\u5f84"
    },
    {
        "content": "\u76f4\u5f84\u5fc5\u7ecf\u8fb9  \n\n\u8bf4\u8bf4\u4e3b\u8981\u601d\u8def\uff1a   \n\u9996\u5148\u5fc5\u7ecf\u8fb9\u4e00\u5b9a\u5728\u4e00\u6761\u76f4\u5f84\u4e0a\uff0c\u679a\u4e3e\u6bcf\u4e00\u6761\u70b9\uff08\u8bb0\u5f55\u524d\u9a71\uff09\uff0cdfs\u6c42\u51fa\u8be5\u70b9\u5230\u975e\u76f4\u5f84\u4e0a\u7684\u6700\u957f\u8def\uff08\u6811\u7684\u6700\u957f\u8def\u4e00\u904ddfs\u5373\u53ef\uff0c\u4e0d\u7528\u591a\u6b64\u4e00\u4e3edijk\uff09\uff0c\u5982\u679c\u6700\u957f\u8def\u5230\u76f4\u5f84\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\u76f8\u540c\uff0c\u6211\u4eec\u610f\u8bc6\u5230\uff0c\u8fd9\u6761\u6700\u957f\u8def\u4e5f\u662f\u76f4\u5f84\u7684\u4e00\u4e2a\u9009\u62e9\uff0c\u5bf9\u4e8e\u76f4\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u5982\u679c\u90fd\u6709\u8fd9\u6837\u4e00\u4e2a\u65ad\u70b9\uff0c\u4e24\u4e2a\u65ad\u70b9\u5728\u76f4\u5f84\u4e0a\u7684\u8ddd\u79bb\u5c31\u4e3a\u5fc5\u7ecf\u8fb9\u957f\u5ea6    \n\n\u6ce8\u610f\uff1a  \n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9dfs\u6c42\u6700\u957f\u8def\u65f6\uff0c\u5728dfs\u8fc7\u7a0b\u4e2d\u6c42\u51fa\u6700\u957f\u8def\u7684\u503c\uff0c\u907f\u514dd\u6570\u7ec4\u7684\u91cd\u65b0\u8d4b\u503c\u548c\u5faa\u73af\u6c42\u51fa\u6700\u957f\u8def\uff0c\u5426\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u4e0a\u5347\u5230O\uff08n^2\uff09~~\uff0c\u7b2c\u4e00\u6b21\u6ca1\u6ce8\u610f\u5c31\u8fd9\u6837T\u4e86~~   \n\u4e0a\u4ee3\u7801  \uff1a  \n```cpp\n#include<iostream>\n#include<cstdio>\n#define N 200010\n#include<queue>\n#include<cmath>\n#include<cstring> \nusing namespace std;\nint n,pos[N][2],head[N],route[N],num,tot,ans,s,e;\nlong long ls[N],re[N],d[N],dis[N] ,len,sum;\nbool vis[N],v[N];\nstruct Edge{\n\tint v,next,val;\n}edge[N*2]; \ninline int read(){int x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();};while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();return x*f;}\ninline void add(int x,int y,int z){edge[++tot].v=y;edge[tot].next=head[x];edge[tot].val=z;head[x]=tot;}\nint bfs(int s){\n\tqueue<int>q;q.push(s);memset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=n;i++)d[i]=0;memset(pos,0,sizeof(pos));long long maxn=0;\n\tint maxi;\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].v,z=edge[i].val;\n\t\t\tif(vis[v])continue;\n\t\t\td[v]=d[u]+z;\n\t\t\tq.push(v);\n\t\t\tpos[v][0]=u,pos[v][1]=z;\n\t\t\tif(d[v]>maxn)maxn=d[v],maxi=v; \n\t\t}\n\t}\n\tlen=maxn;\n\treturn maxi;   //\u88ab\u673a\u623f\u79f0\u4e3a\u6bd2\u7624bfs\u5199\u6cd5\u6c42\u76f4\u5f84\uff08\u4ed6\u4eec\u90fddfs6\u884corz\uff09\n}\nvoid dfs(int s,int fa,int x){\n\tif(!head[s])return ;\n\tfor(int i=head[s];i;i=edge[i].next){\n\t\tint to=edge[i].v,z=edge[i].val;\n\t\tif(to==fa||v[to])continue;\n\t\td[to]=d[s]+z;\n\t\tdis[x]=max(dis[x],d[to]);  //dfs\u8fc7\u7a0b\u4e2d\u6c42\u51fadis\n\t\tdfs(to,s,x);\n\t}\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n-1;i++){int x=read(),y=read(),z=read();add(x,y,z);add(y,x,z);}\n\ts=bfs(1);\n\te=bfs(s);\n\tint t=e;\n\troute[++num]=e;\n\tv[e]=1;\n\twhile(t!=s){//\u6807\u8bb0\u8def\u5f84\n\t\tre[pos[t][0]]=re[t]+pos[t][1];    //\u5728\u6807\u8bb0\u8def\u5f84\u65f6\u6c42\u51fa\u76f4\u5f84\u4e0a\u70b9\u5230\u7ec8\u70b9e\u8ddd\u79bb\uff0c\u5230\u8d77\u70b9s\u8ddd\u79bb\u4e3a\u76f4\u5f84\u957flen-re[x]\n\t\tt=pos[t][0];\n\t\troute[++num]=t;\n\t\tv[t]=1;\n\t}\n\tfor(int i=1;i<=num;i++){\n\t\tint x=route[i];\n\t\td[x]=0;\n\t\tdfs(x,0,x);    //\u6c42\u51fadis\u6700\u957f\u8def\n\t}\n\tint tr=1;\n\tfor(tr=1;tr<=num;tr++){\n\t\tint x=route[tr];\n\t\tif(dis[x]==len-re[x])break;  //\u5982\u679c\u5230s\u8ddd\u79bb\u4e3a\u6700\u957f\u8def,\u65ad\u70b91set\n\t}\n\tint tl=num;\n\tfor(tl=num;tl>=1;tl--){\n\t\tint x=route[tl];\n\t\tif(dis[x]==re[x])break;//\u540c\u7406\u65ad\u70b92\n\t} \n\tans=abs(tr-tl);//\u8fd9\u5c31\u662f\u5fc5\u7ecf\u8fb9\u6570\n\tprintf(\"%lld\\n\",len);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1557560224,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "\u8fd9\u662f\u7531\u4e00\u6b21\u9898\u89e3\u90fd\u6ca1\u6709\u8fc7\u5ba1\u6838\u7684\u83dc\u9e21\u4e3a\u60a8\u5e26\u6765\u7684\u9898\u89e3qwq\n\u8fd9\u4e2a\u9898\u6211\u505a\u7684\u65f6\u5019\u6ca1\u6709\u770b\u9898\u89e3\uff0c\u4e5f\u6ca1\u6709\u60f3\u5230\u6240\u6709\u76f4\u5f84\u4ea4\u4e8e\u4e00\u4e9b\u8fde\u7eed\u7684\u8fb9\u8fd9\u79cd\u4e8b\u60c5\uff0c\u5176\u5b9e\u4e5f\u5f88\u597d\u60f3\uff0c\u4f46\u6211\u7684\u601d\u8def\u5e76\u4e0d\u5728\u8fd9\u4e0a\u9762\u3002\n\u9996\u5148\u7b2c\u4e00\u95ee\u53ef\u4ee5dfs/bfs/dp\uff0c\u8fd9\u4e2a\u65e0\u6240\u8c13\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u8bb0\u5f97\u6c42\u51fa\u4e00\u79cd\u76f4\u5f84\u65b9\u6848\uff0c\u4fbf\u4e8e\u6211\u4eec\u5904\u7406\u7b2c\u4e8c\u95ee\n\u6211\u4eec\u9996\u5148\u5206\u6790\uff0c\u5982\u679c\u4e00\u4e2a\u8fb9\u4e00\u5b9a\u5728\u76f4\u5f84\u4e0a\u7684\u8bdd\uff0c\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u6211\u53bb\u6389\u8fd9\u4e2a\u8fb9\u4e4b\u540e\uff0c\u6240\u5206\u6210\u7684\u4e24\u68f5\u5b50\u6811\uff0c\u5b83\u4eec\u7684\u76f4\u5f84\u4e00\u5b9a\u5c0f\u4e8e\u539f\u6811\u7684\u76f4\u5f84\uff0c\u4e0d\u7136\u8fd9\u4e2a\u8fb9\u5c31\u4e0d\u4e00\u5b9a\u5728\u76f4\u5f84\u4e0a\u4e86\uff0c\u6709\u53ef\u80fd\u4f1a\u5b58\u5728\u522b\u7684\u76f4\u5f84\u65b9\u6848\u4e0d\u8986\u76d6\u8fd9\u6761\u8fb9\u3002\n\u90a3\u4e48\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u6c42\u53bb\u6389\u67d0\u79cd\u76f4\u5f84\u7684\u67d0\u4e00\u6761\u8fb9\u540e\uff0c\u65b0\u5f62\u6210\u7684\u4e24\u68f5\u5b50\u6811\u7684\u76f4\u5f84\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5982\u679c\u66b4\u529b\u679a\u4e3e\u53bb\u6389\u54ea\u6761\u8fb9\u7684\u8bdd\uff0c\u5f88\u663e\u7136\u5760\u574f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fn^2\u7684\u3002\u7136\u540e\u6211\u4eec\u60f3\u8fd9\u4e2a\u5730\u65b9\u6709\u6ca1\u6709\u91cd\u590d\u7684\uff0c\u53ef\u4ee5\u4f18\u5316\u7684\u90e8\u5206\u3002\u56de\u60f3\u4e00\u4e0b\u6811\u5f62dp\u6c42\u6811\u7684\u76f4\u5f84\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u6c42\u4e00\u68f5\u6811\u7684\u76f4\u5f84\u7684\u65f6\u5019\uff0c\u5b83\u7684\u6240\u6709\u5b50\u6811\u4e00\u5b9a\u90fd\u662f\u5904\u7406\u597d\u7684\u3002\u90a3\u4e48\u5f88\u663e\u7136\u6211\u4eec\u5982\u679c\u65ad\u5f00\u4e00\u6761\u8fb9\u7684\u65f6\u5019\uff0c\u6709\u76f4\u5f84\u8d77\u70b9\u7684\u90a3\u4e00\u90e8\u5206\u5b50\u6811\uff0c\u5f88\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u4ee5\u76f4\u5f84\u7ec8\u70b9\u4e3a\u6839\u8dd1\u6811\u5f62dp\u6765\u5904\u7406\u770b\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\u8fd9\u6837\u6211\u4eec\u5c31\u8f7b\u677e\u53bb\u6389\u4e86\u4e00\u4e2an\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a\u4e86O(n)\u3002\u5f53\u7136\u4e24\u8fb9bfs+\u4e24\u8fb9dfs\u4f1a\u4f7f\u5f97\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u4f46\u662f\u603b\u7684\u6765\u8bf4\u8fd8\u662f\u5f88\u8f7b\u677e\u7684\u5c31\u80fd\u8fc7\u7684\u3002\n\u5982\u679c\u6709\u5199\u7684\u4e0d\u597d\u7684\u5730\u65b9\u8bf7\u591a\u6307\u6559qwq\u3002\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#define ri register int\n\nusing namespace std;\n\ninline char gch()\n{\n    static char buf[100010], *h = buf, *t = buf;\n    return h == t && (t = (h = buf) + fread(buf, 1, 100000, stdin), h == t) ? EOF : *h ++;\n}\n\ntypedef long long lo;\n\ninline void re(int &x)\n{\n    x = 0;\n    char a; bool b = 0;\n    while(!isdigit(a = gch()))\n        b = a == '-';\n    while(isdigit(a))\n        x = (x << 1) + (x << 3) + a - '0', a = gch();\n    if(b == 1)\n        x *= -1;\n}\n\nint n, s, t, he, ta, tot = -1, pos, q[200020], head[200020], pre[200020], lx, ly, lz; \n\nstruct in\n{\n    int to, ne; lo co;\n}ter[400040];\n\ninline void build(int f, int l, lo c)\n{\n    ter[++ tot] = (in){l, head[f], c}, head[f] = tot;\n    ter[++ tot] = (in){f, head[l], c}, head[l] = tot;\n}\n\nlo ans, sx[200020], tx[200020], sy[200020], ty[200020], de[200020];//x \u8054\u901a\u5757\u76f4\u5f84 y\u6700\u6df1\u6df1\u5ea6 \n\ninline void bfs(int x)\n{\n    memset(de, 0, sizeof(de)), memset(pre, 0, sizeof(pre));\n    de[q[he = ta = 0] = x] = 1, pos = 0;\n    while(he <= ta)\n    {\n        int qaq = q[he ++]; pos = (de[pos] < de[qaq]) ? qaq : pos;//\u66f4\u65b0\u6700\u6df1\u7684\u70b9 \n        for(ri i = head[qaq]; i >= 0; i = ter[i].ne)\n        {\n            int to = ter[i].to;\n            if(de[to] == 0)\n                pre[to] = qaq, de[q[++ ta] = to] = de[qaq] + ter[i].co;\n        }\n    }\n}\n\nvoid dfs(lo *a, lo *b, int no, int fa)\n{\n    lo lx = 0, ly = 0;\n    for(ri i = head[no]; i >= 0; i = ter[i].ne)\n    {\n        int to = ter[i].to;\n        if(to == fa)\n            continue;\n        dfs(a, b, to, no);\n        b[no] = (b[no] < b[to] + ter[i].co) ? b[to] + ter[i].co : b[no];\n        if(lx < b[to] + ter[i].co)\n            ly = lx, lx = b[to] + ter[i].co;\n        else if(ly < b[to] + ter[i].co)\n            ly = b[to] + ter[i].co; \n        a[no] = (a[no] < a[to]) ? a[to] : a[no];//\u7ef4\u62a4\u5b50\u6811\u5185\u90e8\u7684\u76f4\u5f84 \n    } \n    a[no] = (lx + ly < a[no]) ? a[no] : lx + ly;\n}\n\nint main()\n{\n    re(n); memset(head, -1, sizeof(head)); s = t = 0;\n    memset(sx, 0, sizeof(sx)), memset(sy, 0, sizeof(sy));\n    memset(tx, 0, sizeof(tx)), memset(ty, 0, sizeof(ty));\n    for(ri i = 1; i < n; i ++)\n        re(lx), re(ly), re(lz), build(lx, ly, lz);\n    bfs(1), s = pos, bfs(s), t = pos;//\u4e24\u8fb9bfs\u786e\u5b9a\u4efb\u610f\u4e00\u6761\u76f4\u5f84 \n    dfs(sx, sy, s, 0), dfs(tx, ty, t, 0);//\u5206\u522b\u4ee5\u8d77\u70b9\u548c\u7ec8\u70b9\u4e3a\u6839\u518d\u53bb\u5904\u7406\u5b50\u6811\u7684\u4fe1\u606f \n    for(ri i = t; i != s; i = pre[i])\n    \tif(tx[pre[i]] < sx[s] && sx[i] < sx[s])//\u5982\u679c\u5220\u9664\u8fd9\u6761\u8fb9\u4e4b\u540e\uff0c\u4e24\u4e2a\u5b50\u6811\u5185\u7684\u76f4\u5f84\u90fd\u5c0f\u4e8e\u539f\u6811\u76f4\u5f84 \n           ans ++;//\u8bf4\u660e\u8fd9\u4e2a\u8fb9\u4e00\u5b9a\u88ab\u6240\u6709\u76f4\u5f84\u7ecf\u8fc7 \n    printf(\"%lld\\n%lld\", sx[s], ans);\n}\n```",
        "postTime": 1532006483,
        "uid": 25064,
        "name": "dfkdsmbd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3304 \u3010[SDOI2013]\u76f4\u5f84\u3011"
    },
    {
        "content": "# \u795e\u9898\uff01\uff01\uff01\n\n\u8003\u573a\u4ee3\u78010\u5206\uff1b\n\n~~\u52a0\u8f93\u51fa\u76f4\u5f840\u5206\uff1b~~\n\n\u52a0$long$ $long$0\u5206\uff1b\n\n~~\u53bb$freopen$100\u5206~~\n\n\n------------\n### \u4e00\u9053~~\u7b80\u5355\u7684~~\u6811\u4e0a\u76f4\u5f84\u95ee\u9898\u3002\n\n\u4e0d\u7981\u8ba9\u6211\u60f3\u5230\u4e86[\t P2726 [SHOI2005]\u6811\u7684\u53cc\u4e2d\u5fc3](https://www.luogu.com.cn/problem/P2726)\n\u7684\u9b3c\u755c\u601d\u60f3\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u4e00\u809d\uff1b\n\n\n## \u9898\u610f\u7b80\u5316\n\u5728\u4e00\u4e2a\u6811\u4e2d\u6c42\u6240\u6709\u7684\u76f4\u5f84\u90fd\u7ecf\u8fc7\u7684\u8fb9\u7684\u8fb9\u6570\uff08~~\u8a00\u7b80\u610f\u8d45~~\uff09\n\n------------\n\n\u9996\u5148\uff0c\u8981\u660e\u767d\uff0c\u9898\u76ee\u8981\u6c42\u7684\u8fb9\uff08\u4eec\uff09\u662f\u8fde\u5728\u4e00\u8d77\u7684\uff08\u753b\u56fe\u6613\u8bc1\uff09\uff1b\u5176\u6b21\uff0c\u90fd\u5728\u5df2\u77e5\u7684\u4e00\u6761\u76f4\u5f84\u4e0a\uff1b\n\n### \u4e8e\u662f\u6709\u4e86\u4e00\u4e2a\u5947\u5999\u7684\u601d\u60f3\uff1a\u53bb\u6389\u67d0\u6761\u8fb9\u540e\uff0c\u8981\u662f\u5206\u88c2\u7684\u4e24\u9897\u6811\u4e2d\u8f83\u957f\u7684\u76f4\u5f84\u5c0f\u4e8e\u539f\u76f4\u5f84\uff0c\u8bf4\u660e\u8fd9\u6761\u8fb9\u662f\u6240\u6c42\u4e4b\u8fb9\u3002\u5728\u76f4\u5f84\u4e0a\u904d\u5386\u4e0a\u4e0b\u4e24\u6b21\u627e\u5230\u7b2c\u4e00\u4e2a\uff08\u76f4\u5f84\u7b49\u4e8e\u539f\u76f4\u5f84\u7684\u6240\u65ad\u88c2\u7684\u6811\uff09\u5373\u4e3a\u9898\u76ee\u6240\u8981\u6c42\u7684\u8fb9\uff08\u4eec\uff09\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u8bb0\u5f55\u7b54\u6848\u5373\u53ef\u3002QWQ\n\n\u53c8\u5230\u4e86$CODING$...\u65f6\u523b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll long long\nusing namespace std;\nconst int maxn=221880;\nint head[maxn<<1],tmp=0,n;\nint ph[maxn],pre[maxn],vis[maxn],maid;\nll ma,maxzhi[maxn],dis[maxn],kkk;\nstruct cjc{\n\tint to,next;\n\tll val;\n}e[maxn<<1];\nvoid adda(int u,int v,ll y){\n\te[++tmp]=(cjc){v,head[u],y};head[u]=tmp;\n}\nvoid dfs(int u,int fa){\n\tif(dis[u]>ma)ma=dis[u],maid=u;\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(v==fa)continue; \n\t\tpre[v]=u;\n\t\tdis[v]=dis[u]+e[i].val;\n\t\tdfs(v,u);\n\t\tmaxzhi[u]=max(maxzhi[u],maxzhi[v]+e[i].val);\n\t}\n}\nll dfs1(int u){\n\twhile(u){\n\t\tll maj=0;\n\t\tma=0;\n\t\tfor(ll i=head[u];i;i=e[i].next){\n\t\t\tll v=e[i].to;\n\t\t\tif(v==pre[u])continue;\n\t\t\tif(maxzhi[e[i].to]+e[i].val>maj)maj=maxzhi[e[i].to]+e[i].val;\n\t\t\tif(maj>ma)swap(ma,maj);\n\t\t}\n\t\tif(kkk==ma+maj)return u;\n\t\tu=pre[u];\n\t}\n\treturn 0;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,a,b;i<n;i++){\n\t\tll c;\n\t\tscanf(\"%d%d%lld\",&a,&b,&c);\n\t\tadda(a,b,c);adda(b,a,c);\n\t}\n\tdfs(1,0);\n\tint l=maid;\n\tdis[l]=ma=0;\n\tpre[l]=0;\n\tmemset(maxzhi,0,sizeof(maxzhi));\n\tdfs(l,0);\n\tint r=maid;\n\tkkk=ma;\n\tint p=r;\n\twhile(p)vis[p]=1,p=pre[p];\n\tint you=dfs1(r);\n\tpre[r]=0;\n\tmemset(maxzhi,0,sizeof(maxzhi));\n\tdfs(r,0);\n\tint zuo=dfs1(l);\n\tint ans=0;\n\twhile(you!=zuo){\n\t\tyou=pre[you];\n\t\tans++;\n\t}\n\tcout<<kkk<<endl<<ans;\n\treturn 0;\n}\n```\n\n### \u7ed3\u5c3e\u6563\u82b1\u3002\u3002\u3002\u3002\u3002\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1600934361,
        "uid": 234675,
        "name": "\u4e00\u5ff5\u4f5b_\u4e07\u5ff5\u9b54",
        "ccfLevel": 0,
        "title": "P3304 [SDOI2013]\u76f4\u5f84"
    }
]