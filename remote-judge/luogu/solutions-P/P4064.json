[
    {
        "content": "\u5176\u5b9e\u4e0d\u9700\u8981\u6811\u72b6\u6570\u7ec4\u7684\u2026\u2026\n\n\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u4e8c\u5206\u9898\n\n\u719f\u7ec3\u7684\u8bf8\u4f4d\u60f3\u5fc5\u9a6c\u4e0a\u53cd\u5e94\u51fa\u4e8c\u5206\u7b54\u6848\u4e86\u5427\u2026\u2026\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u662f\u8981\u6c42\u6700\u5927\u5316\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u8fd9\u4e2a\u6700\u5c0f\u503c\n\n\u663e\u7136\u8fd9\u4e2a\u6700\u5c0f\u503c\u7684\u53d6\u503c\u8303\u56f4\u662f\u5728$[min(A_{i}),min(A_{i})+ma]$\u4e4b\u95f4\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4e8c\u5206\u4e86~\n\n\u73b0\u5728\u6211\u4eec\u4e8c\u5206\u4e86\u4e00\u4e2a\u7b54\u6848mid\u51fa\u6765\uff0c\u6211\u4eec\u5462\u8981\u5224\u65ad\u8fd9\u4e2amid\u5408\u4e0d\u5408\u6cd5\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a\u70b9\u9700\u8981\u88ab\u8986\u76d6\u7684\u6b21\u6570\u4e0d\u4e00\u6837\uff0c\u6709\u4e9b\u70b9\u751a\u81f3\u5b8c\u5168\u4e0d\u9700\u8981\u88ab\u8986\u76d6\uff0c\u6211\u4eec\u9700\u8981\u51b3\u7b56\u51fa\u4e00\u4e2a\u6700\u5c0f\u7684\u65b9\u6848\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u51b3\u7b56\u5462\uff1f\u5f53\u7136\u662f\u8d2a\u5fc3\u4e86\n\n\u5927\u6982\u7684\u601d\u8def\u662f\uff0c**\u6211\u4eec\u53ea\u6709\u5728\u4e0d\u5f97\u4e0d\u4f7f\u7528\u4e00\u6b21\u52a0\u6cd5\u7684\u65f6\u5019\u624d\u53bb\u4f7f\u7528\u52a0\u6cd5\uff0c\u5426\u5219\u4e0d\u4f7f\u7528**\n\n\u53e6\u5916\uff0c\u6211\u4eec\u5e0c\u671b**\u540e\u8fb9\u7684\u51b3\u7b56\u4e0d\u4f1a\u5f71\u54cd\u524d\u8fb9\u7684\u51b3\u7b56**\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u624d\u53ef\u4ee5\u653e\u5fc3\u7684\u4f7f\u7528\u8d2a\u5fc3\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u628a\u4e00\u4e2a\u7ebf\u6bb5\u62c6\u6210\u4e00\u4e2a\u5de6\u7aef\u70b9\u548c\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c\u548c\u6211\u4eec\u7684\u5e8f\u5217\u70b9\u4e00\u8d77\u6392\u5e8f\uff0c\u6700\u540e\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a$n+2m$\u7684\u51b3\u7b56\u5e8f\u5217\n\n\u73b0\u5728\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u7684\u626b\u8fd9\u4e2a\u51b3\u7b56\u5e8f\u5217\uff0c\u4fdd\u8bc1\u540c\u4e00\u4f4d\u7f6e\u7684\u5de6\u7aef\u70b9\u5728\u5e8f\u5217\u70b9\u524d\uff0c\u53f3\u7aef\u70b9\u5728\u5e8f\u5217\u70b9\u540e\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u4e00\u4e2a\u5de6\u7aef\u70b9\uff0c\u6211\u4eec\u63d2\u5165\u4e00\u4e2a\u7ebf\u6bb5\u5230\u67d0\u4e2a\u6570\u636e\u7ed3\u6784\u4e2d\u5b58\u50a8\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u4e00\u4e2a\u51b3\u7b56\u70b9\uff0c\u6211\u4eec\u8ba1\u7b97\u5b83\u7684\u503c\u8fd8\u9700\u8981\u52a0\u51e0\u6b21\u5230\u8fbemid\uff0c\u7136\u540e\u67e5\u627e\u6211\u4eec\u7684\u6570\u636e\u7ed3\u6784\u91cc\u6709\u591a\u5c11\u5408\u6cd5\u7684\u7ebf\u6bb5\n\n\u663e\u7136\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\u662f\uff0c\u56e0\u4e3a\u73b0\u5728\u6392\u597d\u5e8f\u4e86\uff0c\u6240\u4ee5\u626b\u5230\u8fd9\u4e2a\u5e8f\u5217\u70b9\u65f6\uff0c**\u524d\u8fb9\u7684\u5e8f\u5217\u5df2\u7ecf\u5168\u90e8\u5408\u6cd5**\uff0c\u56e0\u6b64\u6570\u636e\u7ed3\u6784\u4e2d\u73b0\u5b58\u7ebf\u6bb5\u7684\u5de6\u7aef\u70b9\u5728\u54ea\u91cc\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f18\u5148\u9009\u62e9\u53f3\u7aef\u70b9\u6700\u8fdc\u7684\u70b9\u8fdb\u884c\u52a0\u6cd5\u5c31\u53ef\u4ee5\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u4f18\u5148\u9009\u62e9\u6570\u636e\u7ed3\u6784\u4e2d\u6700\u8fdc\u7684\u53f3\u7aef\u70b9\uff0c\u8fdb\u884c\u82e5\u5e72\u6b21\u533a\u95f4\u52a0\u64cd\u4f5c\u5373\u53ef\n\n\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u53f3\u7aef\u70b9\uff0c\u5982\u679c\u76f4\u767d\u7684\u60f3\u4e00\u4e0b\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u89c9\u5f97\u8fd9\u4e2a\u70b9\u7684\u4f5c\u7528\u662f\u5220\u9664\u4e00\u4e2a\u7ebf\u6bb5\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u524d\u9762\u6307\u7684\u67d0\u79cd\u6570\u636e\u7ed3\u6784**\u660e\u663e\u662f\u4e00\u4e2a\u5806**\uff0c\u800c\u4e14\u6211\u4eec\u5462\u4e5f\u4e0d\u9700\u8981\u771f\u7684\u63d2\u5165\u4e00\u4e2a\u7ebf\u6bb5\uff0c\u63d2\u5165\u4e00\u4e2a\u53f3\u7aef\u70b9\u8db3\u77e3\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4f1a\u53d1\u73b0\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528\u60f0\u6027\u5220\u9664\u6cd5\uff0c\u5c31\u662f\u8bf4\u5728\u68c0\u67e5\u8fd9\u4e2a\u5806\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5462\u53ef\u4ee5\u68c0\u6d4b\u8fd9\u4e2a\u53f3\u7aef\u70b9\u662f\u5426\u5728\u8fd9\u4e2a\u51b3\u7b56\u70b9\u7684\u5de6\u8fb9\uff0c\u5982\u679c\u5728\u5de6\u8fb9\u6211\u4eec\u8ba4\u4e3a\u5806\u4e3a\u7a7a\uff0c\u53ef\u4ee5return false\u4e86\n\n\u53d1\u73b0\u597d\u50cf\u6ca1\u6709\u53f3\u7aef\u70b9\u4ec0\u4e48\u4e8b\uff1f\n\n\u4f46\u662f\u53f3\u7aef\u70b9\u672c\u6765\u5c31\u4e0d\u662f\u7528\u6765\u5220\u9664\u7684\u554a\u2026\u2026\uff0c\u8fd8\u8bb0\u5f97\u6211\u4eec\u9700\u8981\u8fdb\u884c\u533a\u95f4\u52a0\u64cd\u4f5c\u5417\uff1f\n\n\u597d\u50cf\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4\uff0c\u771f\u662f\u9ebb\u70e6\n\n\u6211\u4eec\u90fd\u77e5\u9053\u4e8c\u7ef4\u626b\u63cf\u7ebf\u53ef\u4ee5\u5c06\u4e8c\u7ef4\u95ee\u9898\u53d8\u6210\u4e00\u4e2a\u4e00\u7ef4\u95ee\u9898\uff0c\u7528\u4e00\u7ef4\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u4e00\u4e2a\u4e00\u7ef4\u533a\u95f4\u52a0\u95ee\u9898\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e00\u7ef4\u626b\u63cf\u7ebf\uff0c\u628a\u8fd9\u4e2a\u4e00\u7ef4\u95ee\u9898\u53d8\u6210\u4e00\u4e2a\u96f6\u7ef4\u95ee\u9898\uff0c\u7528\u96f6\u7ef4\u6570\u636e\u7ed3\u6784\u2014\u2014\u4e00\u4e2a\u53d8\u91cf\u6765\u7ef4\u62a4\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u5f53\u4f60\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u533a\u95f4\u52a0\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u8fdb\u884c\u533a\u95f4\u52a0\uff0c\u800c\u662f\u4ec5\u4ec5\u5728\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cfflow\u4e0a+a\uff0c\u540c\u65f6\u6807\u8bb0\u4e0a\u8fd9\u4e2a\u533a\u95f4\u5df2\u9009\uff0c\u6211\u4eec\u6bcf\u6b21\u626b\u5230\u4e00\u4e2a\u51b3\u7b56\u70b9\u7684\u65f6\u5019\u5148\u628a\u5b83\u7684\u503c+flow\uff0c\u5bf9\u5e94\u7740\u8fd9\u4e2a\u70b9\u627f\u53d7\u7684\u533a\u95f4\u52a0\u64cd\u4f5c\n\n\u4e4b\u540e\u5f53\u6211\u626b\u5230\u4e00\u4e2a\u53f3\u7aef\u70b9\u65f6\uff0c\u6211\u4eec\u8981\"\u5220\u9664\"\u8fd9\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u8fd9\u4e2a\u533a\u95f4\u6709\u6ca1\u6709\u88ab\u9009\u4e2d\uff0c\u5982\u679c\u88ab\u9009\u4e86\uff0c\u6211\u4eec\u5c31\u628aflow-a\uff0c\u4ee3\u8868\u8fd9\u4e2a\u533a\u95f4\u52a0\u5df2\u7ecf\u7ed3\u675f\uff0c\u5982\u679c\u6ca1\u88ab\u9009\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u505a\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u8fd9\u6837\u6109\u5feb\u7684\u6d88\u6389\u4e86\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5168\u7a0b\u53ea\u9700\u8981\u4e00\u4e2apriority_queue\u5c31\u884c\u4e86\n\n\u7b97\u6cd5\u590d\u6742\u5ea6$O((n+m)log(n+m)log(ma))$\uff0c\u5927\u81f4\u662f$O(nlog^{2}n)$\u7684(\u5b9e\u9645\u4e0a\u8dd1\u7684\u98de\u8d77)\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;const int N=2*1e5+10;typedef long long ll;\nint n;int m;ll a;int k;int T;\nstruct opt//\u64cd\u4f5c\u7ed3\u6784\u4f53 \n{\n    ll val;int tp;int pos;//val\u5bf9\u4e8e\u5e8f\u5217\u70b9\u662f\u70b9\u503c\uff0c\u5bf9\u4e8e\u7ebf\u6bb5\u70b9\u662f\u7f16\u53f7 \n    friend bool operator <(opt a,opt b){return a.pos+a.tp/3.0<b.pos+b.tp/3.0;}\n}op[3*N];int cnt;int book[N];int r[N];ll lf=0x7f7f7f7f;ll ri;\nstruct data{int v;friend bool operator <(data a,data b){return r[a.v]<r[b.v];}};\npriority_queue <data> pq;//\u8fd9\u91cc\u5199\u4e86\u4e00\u4e2aO(1)\u7684\u6e05\u7a7a\u51fd\u6570 \ninline void clear(priority_queue <data>& pq){priority_queue <data> emp;swap(emp,pq);}\ninline bool jud(ll mid)\n{\n    ll flow=0;int tot=0;\n    for(int i=1;i<=cnt;i++)\n    {\n        if(op[i].tp==0){pq.push((data){op[i].val});}//\u63d2\u5165\u5de6\u7aef\u70b9 \n        else if(op[i].tp==1)\n        {\n            ll ned=mid-op[i].val-flow;if(ned<0)continue;//\u5982\u679c\u6bd4mid\u5927\u53ef\u4ee5continue\u4e86 \n            ll ch=(ned+a-1)/a;if(tot+ch>k){return false;}//\u5982\u679c\u8d85\u4e86\u9650\u5236\u7684\u8bdd\u53ef\u4ee5\u62cdfalse\u4e86 \n            for(;!pq.empty()&&ch;pq.pop())\n            {\n                int v=(pq.top()).v;\n                if(r[v]<op[i].pos){return false;}//\u5982\u679c\u6b64\u65f6\u5806\u4e3a\u7a7a\u4e5f\u53ef\u4ee5\u62cdfalse\u4e86 \n                else {book[v]=1;flow+=a;ch--;tot++;}//\u533a\u95f4+a \n            }if(ch>0){return false;}//\u5982\u679c\u6ca1\u52a0\u5b8c\u4e5f\u53ef\u4ee5\u62cdfalse\u4e86 \n        }else{flow-=book[op[i].val]*a;}//\u68c0\u67e5\u4e0b\u8fd9\u4e2a\u533a\u95f4\u6709\u6ca1\u6709\u88ab\u9009\u4e2d \n    }return true;//\u5982\u679c\u5168\u90e8\u901a\u8fc7\u5c31return true \n} \ninline void solve()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&k,&a);\n    for(int i=1;i<=n;i++)//\u63d2\u5165\u5e8f\u5217\u70b9 \n    {int t;scanf(\"%lld\",&t);op[++cnt]=(opt){t,1,i};lf=min(lf,(ll)t);}\n    for(int i=1;i<=m;i++)//\u63d2\u5165\u7ebf\u6bb5\u70b9 \n    {\n        scanf(\"%d\",&r[i]);op[++cnt]=(opt){i,0,r[i]};\n        scanf(\"%d\",&r[i]);op[++cnt]=(opt){i,2,r[i]};\n    }sort(op+1,op+cnt+1);ri=lf+m*a;//\u8ba1\u7b97\u5de6\u53f3\u533a\u95f4 \n    while(lf!=ri)//\u4e8c\u5206\u7b54\u6848\uff0c\u8bb0\u5f97\u6e05\u7a7a \n    {\n        ll mid=(lf+ri+1)/2;if(jud(mid)){lf=mid;}else {ri=mid-1;}\n        clear(pq);for(int i=1;i<=m;i++){book[i]=0;}\n    }printf(\"%lld\\n\",lf);cnt=0;lf=0x7f7f7f7f;//\u6e05\u7a7a\u4e00\u4e9b\u4e1c\u897f \n}\nint main(){scanf(\"%d\",&T);for(int z=1;z<=T;z++){solve();}return 0;}//\u62dc\u62dc\u7a0b\u5e8f~ \n```\n",
        "postTime": 1522195298,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4064 \u3010[JXOI2017]\u52a0\u6cd5\u3011"
    },
    {
        "content": "\u6700\u5c0f\u503c\u7684\u6700\u5927\u503c\uff0c\u4e00\u773c\u4e8c\u5206\u9898\u3002\n\n\u9898\u76ee\u8981\u6c42 $\\min\\{A_i\\}$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4e8c\u5206 $A_i$ \u7684\u4e0b\u9650\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4e8c\u5206\u7684\u57fa\u672c\u6d41\u7a0b\uff0c\u679a\u4e3e $A_i$\uff0c\u82e5 $A_i\\le mid$\uff0c\u5219\u9700\u8981\u5bf9 $A_i$ \u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u663e\u7136\uff0c$A_i$ \u4e4b\u524d\u7684\u6240\u6709\u503c\u5df2\u7ecf\u6ee1\u8db3\u6761\u4ef6\uff0c\u4e0d\u5728\u6211\u4eec\u7684\u8003\u8651\u8303\u56f4\u5185\uff0c\u53ea\u7528\u8003\u8651\u8fd9\u6b21\u9009\u62e9\u5bf9 $A_i$ \u4e4b\u540e\u7684\u5143\u7d20\u5e26\u6765\u7684\u5f71\u54cd\u3002\u6309\u7167\u8fd9\u4e2a\u601d\u8def\u8d2a\u5fc3\u5730\u60f3\uff0c\u6211\u4eec\u53ea\u7528\u5728\u6240\u6709\u5305\u542b $A_i$ \u7684\u533a\u95f4\u4e2d\u9009\u62e9\u53f3\u7aef\u70b9\u6700\u9760\u53f3\u7684\u533a\u95f4\uff0c\u4ee5\u6db5\u76d6\u66f4\u591a\u7684\u5143\u7d20\u3002\n\n\u5bf9\u4e8e\u9009\u62e9\u533a\u95f4\u7684\u64cd\u4f5c\uff0c\u9884\u5904\u7406\u6309\u533a\u95f4\u5de6\u7aef\u70b9\u4e3a\u5173\u952e\u5b57\u4ece\u5de6\u5230\u53f3\u6392\u5e8f\uff0c\u679a\u4e3e $A_i$ \u65f6\uff0c\u4ee5\u4e0a\u4e00\u6b21\u7684\u533a\u95f4\u5e8f\u5217\u4e3a\u57fa\u7840\uff0c\u52a0\u5165\u5de6\u7aef\u70b9\u5728 $A_i$ \u4e4b\u524d\u7684\u533a\u95f4\uff0c\u5220\u9664\u53f3\u7aef\u70b9\u5728 $A_i$ \u4e4b\u524d\u7684\u533a\u95f4\u5c31\u53ef\u4ee5\u5f97\u5230\u8986\u76d6 $A_i$ \u7684\u533a\u95f4\u5e8f\u5217\u3002\u201c\u4e0d\u65ad\u5730\u9009\u62e9\u53f3\u7aef\u70b9\u6700\u9760\u53f3\u7684\u533a\u95f4\u201d \u8fd9\u4e2a\u64cd\u4f5c\u6211\u4eec\u4f7f\u7528\u4ee5\u533a\u95f4\u53f3\u7aef\u70b9\u4e3a\u5173\u952e\u5b57\u7684\u5927\u6839\u5806\u5b8c\u6210\u3002\n\n\u660e\u663e\u8fc7\u7a0b\u4e2d\u9700\u8981\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u4fee\u6539\u3001\u5355\u70b9\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u5b9e\u65f6\u7ef4\u62a4 $A$\uff0c\u672c\u6587\u4e2d\u4f7f\u7528\u4e86\u6811\u72b6\u6570\u7ec4\u3002\n\n```cpp\n#include<queue>\n#include<cstdio> \n#include<cstring> \n#include<algorithm> \n#define int long long\nconst int inf=1e18;\nconst int maxn=2e5+5;\nconst int LEN=(1<<20);\nstruct _{\n\tint l,r;\n\tbool operator<(const _ q)const{ return r<q.r; }\n};\n_ t;\n_ p[maxn];\nint a[maxn],Bit[maxn];\nstd::priority_queue<_>q;\nint T,n,m,k,u,l,r,mid,ans,la,cnt;\ninline bool cmp(_ x,_ y){ return x.l<y.l; }\ninline int min(int x,int y){ return x<y?x:y; }\ninline int max(int x,int y){ return x>y?x:y; }\ninline int lowbit(int x){ return x&-x; }\ninline void Add(int x,int k){\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\tBit[i]+=k;\n\treturn;\n}\ninline int Query(int x){\n\tint res=0;\n\tfor(int i=x;i;i-=lowbit(i))\n\t\tres+=Bit[i];\n\treturn res;\n}\ninline int nec(){\n    static char buf[LEN],*p=buf,*e=buf;\n    if(p==e){\n        if((e=buf+fread(buf,1,LEN,stdin))==buf)\n            return EOF;\n        p=buf;\n    }\n    return *p++;\n}\ninline bool read(int&x){\n    static char neg=0,c=nec();\n    neg=0,x=0;\n    while((c<'0'||c>'9')&&c!='-'){\n        if(c==EOF)return 0;\n        c=nec();\n    }\n    if(c=='-'){\n        neg=1;\n        c=nec();\n    }\n    do{x=x*10+c-'0';}while((c=nec())>='0');\n    if(neg)x=-x;\n    return 1;\n}\ninline bool check(int x){\n\twhile(!q.empty()) q.pop();\n\tmemset(Bit,0,sizeof(Bit));\n\tla=1; cnt=0;\n\tfor(int i=1;i<=n;++i)\n\t\tAdd(i,a[i]-a[i-1]);\n\tfor(int i=1;i<=n;++i){\n\t\twhile(la<=m&&p[la].l<=i) q.push(p[la++]);\n\t\twhile(Query(i)<x&&q.size()){\n\t\t\tdo{ t=q.top(); q.pop(); }\n\t\t\twhile(t.r<i&&q.size());\n\t\t\tif(t.r<i||++cnt>k) return 0;\n\t\t\tAdd(t.l,u); Add(t.r+1,-u);\n\t\t}\n\t\tif(Query(i)<x) return 0;\n\t}\n\treturn 1;\n}\nsigned main(){\n\tread(T);\n\twhile(T--){\n\t\tread(n); read(m); read(k); read(u);\n\t\tl=inf; r=0;\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tread(a[i]), l=min(l,a[i]), r=max(r,a[i]);\n\t\tfor(int i=1;i<=m;++i)\n\t\t\tread(p[i].l), read(p[i].r);\n\t\tstd::sort(p+1,p+m+1,cmp);\n\t\tr+=k*u; ans=114514;\n\t\twhile(l<=r){\n\t\t\tmid=l+r>>1;\n\t\t\tif(check(mid)){\n\t\t\t\tans=mid;\n\t\t\t\tl=mid+1;\n\t\t\t}\n\t\t\telse r=mid-1;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1638548559,
        "uid": 245052,
        "name": "ollll62",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4064 [JXOI2017]\u52a0\u6cd5"
    },
    {
        "content": "\u4e0d\u77e5\u540d\u5730\u533a\u7701\u9009\u9898\uff0c\u96be\u5ea6\u597d\u50cf\u6709\u70b9\u5947\u602a\u3002\n\n\u9996\u5148\u770b\u5230\u9898\u76ee\u8981\u6c42\u6700\u5c0f\u503c\u6700\u5927\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6765\u89e3\u51b3\u3002\u95ee\u9898\u8f6c\u79fb\u5230\u4e86check\u7684\u5199\u6cd5\u3002\n\n\ncheck\u4e5f\u4e0d\u96be\u5199\u3002\u5148\u626b\u4e00\u904d\u8bb0\u4e0b\u6240\u6709\u4f4e\u4e8e\u4e8c\u5206\u503c\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u518d\u7528\u626b\u63cf\u7ebf\u4ece\u5de6\u81f3\u53f3\u626b\u63cf\uff0c\u626b\u5230\u4e86\u533a\u95f4\u5de6\u7aef\u70b9\u5c31\u5c06\u5b83\u7684\u53f3\u7aef\u70b9\u653e\u5165\u4f18\u5148\u961f\u5217\u3002\u5bf9\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u53ea\u9700\u8981\u533a\u95f4\u52a0\u5355\u70b9\u8be2\u95ee\u3002\u6bcf\u6b21\u9047\u5230\u70b9\u6743\u4e0d\u591f\u4e8c\u5206\u503c\u65f6\u8d2a\u5fc3\u5730\u4ece\u4f18\u5148\u961f\u5217\u91cc\u627e\u5230\u6700\u9760\u53f3\u7684\u53f3\u7aef\u70b9\uff0c\u533a\u95f4\u52a0\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86\u3002\u6ce8\u610f\u533a\u95f4\u9009\u62e9\u7684\u6b21\u6570\u9650\u5236\u548c\u4f18\u5148\u961f\u5217\u4e3a\u7a7a\u65f6\u76f4\u63a5\u8fd4\u56defalse\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log ^2n)$\u3002\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\n#include<cctype>\n#define For(i,a,b) for(i=(a),i##end=(b);i<=i##end;++i)\n#define Forward(i,a,b) for(i=(a),i##end=(b);i>=i##end;--i)\n#define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n#define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\n#define Chkmax(a,b) a=a>b?a:b\n#define Chkmin(a,b) a=a<b?a:b\nusing namespace std;\ntemplate<typename T>inline void read(T &x){\n    T s=0,f=1;char k=getchar();\n    while(!isdigit(k)&&k^'-')k=getchar();\n    if(!isdigit(k)){f=-1;k=getchar();}\n    while(isdigit(k)){s=s*10+(k^48);k=getchar();}\n    x=s*f;\n}\ninline void get(char &x){for(x=0;!isupper(x);x=getchar());}\nvoid file(void){\n    #ifndef ONLINE_JUDGE\n    freopen(\"water.in\",\"r\",stdin);\n    freopen(\"water.out\",\"w\",stdout);\n    #endif\n}\nconst int MAXN=2e5+7;\nstatic int n,m,k,pl,c[MAXN],a[MAXN],l,r;\ntypedef pair<int,int>Pr;\nPr p[MAXN];\n#define fi first\n#define se second\nvoid init()\n{\n    read(n);read(m);read(k);read(pl);\n    l=1e8+7;\n    Rep(i,1,n)read(a[i]),Chkmin(l,a[i]);\n    Rep(i,1,m)read(p[i].fi),read(p[i].se);\n    sort(p+1,p+m+1);\n}\nvector<int>G[MAXN];\nstatic int que[MAXN],tt;\nstatic priority_queue<int>K;\n#define lowbit(x) (x&-x)\ninline void add(int pos,int x)\n{for(;pos<=tt;pos+=lowbit(pos))c[pos]+=x;}\ninline int query(int pos)\n{static int ans;ans=0;for(;pos;pos-=lowbit(pos))ans+=c[pos];return ans;}\ninline bool Chek(int lim)\n{\n    tt=0;\n    Rep(i,1,n)if(a[i]<lim)que[++tt]=i;\n    memset(c,0,sizeof c);\n    while(!K.empty())K.pop();\n    static int j,cnt;j=1;cnt=0;\n    Rep(i,1,tt)\n    {\n        while(j<=m&&p[j].fi<=que[i])\n            K.push((upper_bound(que+1,que+tt+1,p[j++].se)-que-1));\n        while(a[que[i]]+query(i)<lim)\n        {\n            ++cnt;\n            if(cnt>k||K.empty())return false;\n            add(i,pl);\n            add(K.top()+1,-pl);\n            K.pop();\n        }\n    }\n    return true;\n}\nvoid solve()\n{\n    static int mid;\n    r=pl*k+l;\n    while(l<=r)\n    {\n        mid=(l+r)>>1;\n        if(Chek(mid))l=mid+1;\n        else r=mid-1;\n    }\n    printf(\"%d\\n\",r);\n}\nint main(void){\n    file();\n    static int _;\n    read(_);\n    while(_--)init(),solve();\n    //cerr<<1.0*clock()/CLOCKS_PER_SEC<<endl;\n    return 0;\n}\n```",
        "postTime": 1515759289,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4064 \u3010[JXOI2017]\u52a0\u6cd5\u3011"
    },
    {
        "content": "\n\n## \u8fd9\u662f\u4e00\u9053~~\u641e\u4e8b\u7684~~\u7efc\u5408\u9898\n\n\u611f\u8c22https://www.cnblogs.com/ylyvictor/p/7768972.html\n\u63d0\u4f9b\u7684\u5feb\u8bfb(~~\u6b64\u524d\u4e00\u76f4\u6ca1\u7528\u8fc7~~)\n\n\u770b\u5230\u5404\u4f4d\u5927\u4f6c\u90fd\u7528\u6811\u72b6\u6570\u7ec4(~~\u5176\u5b9e\u505a\u8fd9\u9898\u65f6\u6839\u672c\u5fd8\u4e86\u6709\u8fd9~~)\n\n\u9c9c\u6709\u7528\u5dee\u5206\n\n\u4e8e\u662f\u4e5f\u5199\u4e86\u4e00\u4e2a\u901a\u4fd7\u6613\u61c2(~~\u849f\u84bb~~)\u7684\u4e8c\u5206+\u8d2a\u5fc3+\u5dee\u5206+\u5806\u4f18\u5316\u4ee3\u7801\n\n\u7531\"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u8868\u793a\u64cd\u4f5c\u540e\u5e8f\u5217\u6700\u5c0f\u503c\u7684\u6700\u5927\u503c\"\u770b\u51fa\n\n### \u4e8c\u5206\uff01\n\n\tl=me,r=me+(k*ad)\n\nme\u4e3a\u5e8f\u5217\u4e2d\u6700\u5c0f\u503c,\u4f5c\u4e3a\u4e8c\u5206\u5de6\u7aef\u70b9;me+(k*ad)\u8868\u793a\u6240\u6709\u533a\u95f4\u53e0\u5230\u6700\u5c0f\u503c\u4e0a\u7684\u503c(\u7b54\u6848\u4e00\u5b9a\u5728\u8fd9\u4e2d\u95f4)\n\n\u4e8c\u5206\u51fa\u7b54\u6848mid\n\n\u89c2\u5bdf\u9898\u76ee,\u6613\u89c2\u5bdf\u51fa(~~\u5b9e\u9645\u4e0a\u60f3\u4e86\u534a\u5929~~)\n\n\u4e8c\u5206\u5982\u4f55\u5224\u65ad\uff1f\n\n### \u8d2a\u5fc3\uff01\n\n\u8d2a\u5fc3\u601d\u8def:\u82e5\u8981\u4f7f\u5f53\u524d\u70b9i\u8fbe\u5230mid,\u4e00\u5b9a~~\u75af\u72c2~~\u52a0\u533a\u95f4\u53e0\u81f3mid,\u5176\u4e2d\u5bf9\u540e\u9762\u5f71\u54cd\u6700\u5927\u7684\u65b9\u6848\u4e00\u5b9a\u662fr\u6700\u9760\u53f3\u7684\u5408\u6cd5(l<=i)\u533a\u95f4;\n\n\u5982\u4f55\u627e\u533a\u95f4\uff1f\n\n### ~~STL~~\u5806\uff01\n\n\u66f4\u65b0\u5806:\u5bf9\u5806\u9876:\u8fc7\u65f6\u7684(r<i)\u5220\u53bb\u7565\u8fc7\uff0c\u65b0\u9c9c\u7684(l<=i\u4e14\u672a\u52a0\u5165\u5806)\u8fdb\u6765;\n\n\u5982\u4f55\u4fee\u6539\u533a\u95f4?\n\n### \u5dee\u5206\uff01\n\n\u5f53\u9009\u597d\u533a\u95f4\u65f6,\u5c06\u672c\u5e94\u52a0\u5165\u533a\u95f4\u7684\u6570\u52a0\u5728\u4e00\u4e2a\u53d8\u91cfadd\u4e0a,\u800c\u5f53\u524d\u70b9i\u7684\u5b9e\u9645\u503c\u4e3aA=a[i]+add(\u8fd9\u91cc\u8003\u8651\u7684\u662f\u524d\u533a\u95f4\u5bf9\u5f53\u524d\u70b9\u7684\u5f71\u54cd)\n\n\u540c\u65f6\u5728r+1\u5904\u6807\u8bb0\u51cf\u53bb\u4e00\u6b21\u64cd\u4f5c\u5e94\u52a0\u7684\u503c(\u8fd9\u91cc\u8003\u8651\u7684\u662f\u6d88\u53bb\u524d\u533a\u95f4\u5bf9\u5f53\u524d\u70b9\u7684\u5f71\u54cd)~~\u5c31\u662f\u67e5\u5206\u7684\u57fa\u672c\u64cd\u4f5c~~\n\n\u7136\u540e...\u6ca1\u4e86\n\n```cpp\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cstdio>\n#include<iostream> \n#include<queue>\n#define ll long long\n#define MX 200005\nusing namespace std;\nint T;\nint n,m,k,ad;\nint a[MX];\nint b[MX];\nint me;\nstruct node{\n\tint l,r;\n};\nnode d[MX];\nbool cmp(node x,node y){\n\treturn x.l!=y.l? x.l<y.l:x.r>y.r;\n}\ninline int read(){\n    char ch,c;\n    int res = 0;\n    while(ch=getchar(),ch<'0'||ch>'9')c=ch;\n    res=ch-48;\n    while(ch=getchar(),ch>='0'&&ch<='9') res=(res<<3)+(res<<1)+ch-48;\n    if (c=='-')res=-res;\n\treturn res;\n}\ninline bool juj(int mid){\n\tint add=0;\n\tint us=0;\n\tmemset(b,0,sizeof(b));\n\tpriority_queue<int> q;\n\tint now=1;\n\tfor(int i=1;i<=n;++i){\n\t\tadd+=b[i];\n\t\tint A=a[i]+add;\n\t\tif(A>=mid) continue;\n\t\twhile(!q.empty()&&q.top()<i) q.pop();\n\t\twhile(now<=m&&d[now].l<=i){\n\t\t\tif(d[now].r>=i) q.push(d[now].r);\n\t\t\tnow++; //now\u662f\u63a8\u8fc7\u53bb\u7684,\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u91cd\u590d\u9009\u62e9\u533a\u95f4\n\t\t}\n\t\tint su=(mid-A)/ad;\n\t\tif((mid-A)%ad) su++;//\u7edf\u8ba1\u8981\u8fbe\u5230mid\u9700\u52a0\u4e0a\u7684\u533a\u95f4\u6570\n\t\tif(su+us>k) return false;\n\t\tus+=su;\n\t\twhile(su--){\n\t\t\tif(!q.empty()&&q.top()>=i){\n\t\t\t\tadd+=ad;\n\t\t\t\tb[q.top()+1]-=ad;\n\t\t\t\tq.pop();\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nint main(){\n\t//freopen(\"add.in\",\"r\",stdin); \n\t//freopen(\"add.out\",\"w\",stdout);\n\tT=read(); \n\twhile(T--){\n\t\tn=read(),m=read(),k=read(),ad=read();\n\t\tme=1<<30;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\ta[i]=read();\n\t\t\tme=min(a[i],me);\n\t\t}\n\t\tfor(int i=1;i<=m;++i){\n\t\t\td[i].l=read();\n\t\t\td[i].r=read();\n\t\t\tif(d[i].l>d[i].r) swap(d[i].l,d[i].r);//\u4ee5\u9632\u6bd2\u7624\u6570\u636e\n\t\t}\n\t\tsort(d+1,d+m+1,cmp);\n\t\tint l=me,r=me+(k*ad);\n\t\twhile(l<r){\n\t\t\tint mid=(r+l+1)>>1;\n\t\t\tif(juj(mid)){\n\t\t\t\tl=mid;\n\t\t\t}else{\n\t\t\t\tr=mid-1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",l);\n\t}\n\treturn 0;\n}//\u770b\u8d77\u6765\u957f,\u5b9e\u9645\u4e0a..\u6253\u6253\u4ee3\u7801\u5c31\u77e5\u9053\u6709\u591a\u826f\u5fc3\n```\n",
        "postTime": 1566553279,
        "uid": 166115,
        "name": "Midvoy_\u5c3a",
        "ccfLevel": 0,
        "title": "[JXOI]\u52a0\u6cd5"
    },
    {
        "content": "# \u9898\u76ee\u5206\u6790\n\n\u8bfb\u5b8c\u9898\u76ee\uff0c~~\u5927\u5bb6\u662f\u4e0d\u662f\u89c9\u5f97\u8111\u888b\u6709\u70b9\u660f~~\uff0c \u4f46\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u9898\u76ee\u4e2d\u6355\u6349\u51fa\u51e0\u4e2a\u8981\u70b9\u8bcd\u8bed\uff1a\u533a\u95f4\uff1b\u6700\u5c0f\u503c\u5c3d\u53ef\u80fd\u7684\u5927\uff1b\u7b49\u7b49\uff0c\u90a3\u4e48\u6211\u4eec\u6700\u5148\u53ef\u4ee5\u786e\u5b9a\u7684\u7b97\u6cd5\u5c31\u662f\u4e8c\u5206\u4e86\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4e8c\u5206\u51fa\u7684\u90a3\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u68c0\u67e5\uff0c\u8fd9\u91cc\u4e5f\u8fd8\u9700\u8981\u8d2a\u5fc3\u8fdb\u884c\u52a0\u533a\u95f4\u7684\u8f85\u52a9\n\n# \u601d\u8def\u89e3\u6790\n\n\u5f88\u660e\u663e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4fee\u6539\u6211\u4eec\u7684\u533a\u95f4\uff0c\u6211\u4eec\u5bf9\u6574\u4e2a\u533a\u95f4\u8fdb\u884c\u4fee\u6539\uff0c\u5e76\u4e14\u6211\u4eec\u9700\u8981\u6328\u4e2a\u68c0\u67e5\u6bcf\u4e00\u4e2a\u6570\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u6211\u4eec\u5206\u51fa\u6765\u7684 $mid$ \uff0c\u8fd9\u91cc\u53ef\u4ee5\u770b\u4f5c\u5355\u70b9\u7684\u67e5\u8be2\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7684\u533a\u6539\u5355\u67e5\u89e3\u51b3\u3002\u6ce8\u610f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u62ff\u6765\u66f4\u6539\u7684\u533a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u5148\u4ee5\u5de6\u7aef\u70b9\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8fc5\u901f\u627e\u51fa\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u5de6\u7aef\u70b9\uff0c\u8fd9\u91cc\u62e5\u6709\u7b26\u5408\u8981\u6c42\u7684\u5de6\u7aef\u70b9\u7684\u533a\u95f4\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u53f3\u7aef\u70b9\u538b\u5165\u4e00\u4e2a\u5927\u6839\u5806\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u524d\u6839\u9876\u5143\u7d20\u7684\u53f3\u7aef\u70b9\u6700\u5927\uff0c\u4e5f\u5c31\u662f\u8986\u76d6\u7684\u9762\u79ef\u6700\u591a\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u8981\u4f7f\u6bcf\u4e00\u4e2a\u6570\u6ee1\u8db3\u8981\u6c42\u7684 $mid$ \uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u591a\u6b21\u64cd\u4f5c\u66f4\u6539\u533a\u95f4\uff0c\u90a3\u4e48\u5728 $check$ \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a $p$ \u6570\u7ec4\u8bb0\u5f55\u4e0b\u5c0f\u4e8e $mid$ \u7684\u7684\u4e0b\u6807\uff08\u5373\u9700\u8981\u66f4\u6539\u7684\u6570\u7684\u4e0b\u6807\uff09,\u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9700\u8981\u66f4\u6539\u7684\u4e0b\u6807\u4e0d\u65ad\u5faa\u73af\u5730\u53bb\u66f4\u6539\uff0c\u5373\u4f7f\u7528 ```update(p[i], a)``` \u5e76\u4e14 ```update(x + 1, -a)``` \u53ef\u80fd\u6709\u4eba\u4f1a\u6709\u7591\u95ee\uff0c\u5bf9\u4e8e\u53ef\u4ee5\u4fee\u6539\u7684\u533a\u95f4\uff0c\u4e0d\u5e94\u8be5\u5148 ```update(s[i].l, a)``` \u5417\uff0c\u4e5f\u5c31\u662f\u5148\u4fee\u6539\u5de6\u7aef\u70b9\u5411\u540e\u4e00\u6bb5\uff0c\u518d\u5dee\u5206\u89e3\u51b3\u3002\u4f46\u662f\u6ce8\u610f\uff0c\u6211\u4eec\u5728\u89e3\u51b3\u8fd9\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u524d\u9762\u6240\u6709\u7684\u70b9\u90fd\u662f\u7b26\u5408\u6761\u4ef6\u7684\uff0c\u5c31\u6ca1\u5fc5\u8981\u518d\u53bb\u4fee\u6539 $p_{i}$ \u4e4b\u524d\u7684\u70b9\u4e86\u3002\n\n\u5f53\u7136\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4e8c\u5206\uff0c\u53ea\u6709\u5728\u5229\u7528\u5b8c\u6240\u6709\u53ef\u52a0\u533a\u95f4\u4e4b\u540e\uff0c\u6bcf\u4e00\u4e2a\u6570\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e00\u4e2a $mid$ \u624d\u662f\u53ef\u53d6\u7684\uff0c\u5426\u5219\u65e0\u8bba\u662f\u6b21\u6570\u4f7f\u7528\u5b8c\u4e86\uff0c\u6216\u8005\u662f\u6211\u4eec\u7684\u961f\u7528\u7a7a\u4e86\uff0c\u8fd9\u4e2a $mid$ \u90fd\u662f\u4e0d\u53ef\u53d6\u7684\u3002\n\n# \u6811\u72b6\u6570\u7ec4\u7ec6\u8282\n\u521a\u624d\u4e0a\u9762\u63d0\u5230\u4e86 **\u6811\u72b6\u6570\u7ec4** \u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u65e0\u7591\u662f\u533a\u6539\u5355\u67e5\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u6784\u5efa\u6811\u72b6\u6570\u7ec4\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u5dee\u5206\u6784\u5efa\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u52a0\u4e0a\u7684\u5e94\u8be5\u662f $b_{i} - b_{i - 1}$ ,\u8fd9\u6837\u5728\u6bcf\u6b21\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u5bf9\u4e00\u4e2a\u8282\u70b9\u4fee\u6539\uff0c\u90a3\u4e48\u6211\u4eec\u5b9e\u9645\u6570\u7ec4\u540e\u9762\u6bcf\u4e00\u4e2a\u70b9\u90fd\u4f1a\u88ab\u4fee\u6539\uff0c\u518d\u5229\u7528\u5dee\u5206\u5c31\u53ef\u4ee5\u5b9e\u73b0\u72ec\u7acb\u533a\u95f4\u7684\u4fee\u6539\u3002\u540c\u7406\uff0c\u5728\u67e5\u627e\u65f6\uff0c\u6211\u4eec\u77e5\u9053 **\u5dee\u5206\u6570\u7ec4\u7684\u524d\u7f00\u548c\u662f\u539f\u6570\u7ec4** \u90a3\u4e48\u6811\u72b6\u6570\u7ec4\u7684\u524d\u7f00\u6c42\u548c\u6240\u5f97\u7684\u503c\u5c31\u662f\u8fd9\u5355\u4e2a\u6570\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5355\u70b9\u7684\u67e5\u8be2\u4e86\n\n# AC CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define inf 0x3f3f3f3f\n#define MAXN 200005\nint lowbit(int x) { return x & (-x); }\nint b[MAXN], bit[MAXN], n, m, k, a, p[MAXN];\nstruct node2 {\n    int l, r;\n    bool operator<(node2 x) const { return l < x.l; }\n} s[MAXN];\nvoid update(int x, int d) {\n    for (int i = x; i <= n; i += lowbit(i)) {\n        bit[i] += d;\n    }\n}\nint sum(int x) {\n    int ans = 0;\n    for (int i = x; i >= 1; i -= lowbit(i)) {\n        ans += bit[i];\n    }\n    return ans;\n}\nbool check(int mid) {\n    priority_queue<int> q;\n    while (!q.empty()) q.pop();\n    for (int i = 1; i <= n; i++) {\n        bit[i] = 0;\n    }\n    for (int i = 1; i <= n; i++) {\n        update(i, b[i] - b[i - 1]);\n    }\n    int res = 0, tot = 0;\n    for (int i = 1; i <= n; i++)\n        if (b[i] < mid)\n            p[++tot] = i;\n    for (int i = 1, j = 1; i <= tot; i++) {\n        while (s[j].l <= p[i] && j <= m) {\n            q.push(s[j++].r);\n        }\n        while (sum(p[i]) < mid) {\n            if (q.empty()) {\n                return 0;\n            }\n            if (res >= k) {\n                return 0;\n            }\n            int x = q.top();\n            q.pop();\n            update(p[i], a);\n            update(x + 1, -a);\n            res++;\n        }\n    }\n    return 1;\n}\nint main() {\n    int T;\n    scanf(\"%d\", &T);\n    for (int i = 1; i <= T; i++) {\n        scanf(\"%d%d%d%d\", &n, &m, &k, &a);\n        int l = inf, r = 0;\n        for (int j = 1; j <= n; j++) {\n            scanf(\"%d\", &b[j]), l = min(l, b[j]), r = max(r, b[j]);\n        }\n        r += k * a;\n        for (int j = 1; j <= m; j++) {\n            scanf(\"%d %d\", &s[j].l, &s[j].r);\n        }\n        sort(s + 1, s + m + 1);\n        int mid, ans;\n        while (l < r) {\n            mid = (l + r + 1) / 2;\n            if (check(mid)) {\n                l = mid;\n            } else {\n                r = mid - 1;\n            }\n        }\n        printf(\"%d\\n\", l);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1658063910,
        "uid": 525056,
        "name": "I_love_LPN_Forever",
        "ccfLevel": 4,
        "title": "[JXOI2017]\u52a0\u6cd5 \u9898\u89e3"
    },
    {
        "content": "\n\u7b2c\u4e00\u773c\u60f3\u5230\u4e8c\u5206\u7b54\u6848\u3002 ~~\u7136\u540e\u6211\u5c31\u4e0d\u4f1a\u4e86~~\n\n\u9996\u5148\u4ee5 $l$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3001$r$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u5c06\u6240\u6709\u533a\u95f4\u6392\u5e8f\u3002\n\n\u5047\u8bbe\u73b0\u5728\u4e8c\u5206\u51fa\u4e86\u4e00\u4e2a\u7b54\u6848 $mid$ \u3002\n\n\u8d2a\u5fc3\u5730\u60f3\uff0c\u6211\u4eec\u53ea\u4f1a\u5728\u4e0d\u5f97\u4e0d\u7ed9\u4e00\u4e2a\u533a\u95f4\u52a0\u4e0a $a$ \u65f6\u7ed9\u5b83\u52a0\u4e0a $a$ \u3002\n\n\u4e8e\u662f\u4ece\u5de6\u5230\u53f3\u626b\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u8fbe\u5230 $mid$ \u7684\u8bdd\uff0c\u90a3\u4e48\u4ece\u4e4b\u524d\u7684\u533a\u95f4\u4e2d\u9009\u4e00\u4e2a\u52a0\u4e0a $a$ \u3002\n\n\u518d\u8d2a\u5fc3\u5730\u60f3\uff0c\u9009\u51fa\u7684\u533a\u95f4\u4e00\u5b9a\u662f $r$ \u6700\u5927\u7684\uff0c\u8fd9\u6837\u5b50\u624d\u80fd\u8986\u76d6\u66f4\u591a\u7684\u70b9\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u7528\u4e00\u4e2a\u5806\u6765\u7ef4\u62a4 $r$ \u6700\u5927\u7684\u533a\u95f4\uff0c\u6bcf\u6b21\u53d6\u51fa\u5373\u53ef\u3002\n\n\u7136\u540e\u8fd8\u8981\u7ef4\u62a4\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u652f\u6301\u533a\u95f4\u52a0\u3001\u5355\u70b9\u67e5\u8be2\u3002\n\n\u8003\u8651\u4e0d\u53ef\u884c\u7684\u60c5\u51b5\uff1a\n\n- \u6ca1\u6709\u7ebf\u6bb5\u80fd\u591f\u8986\u76d6\u5230\u5f53\u524d\u8fd9\u4e2a\u6ca1\u6709\u8fbe\u5230 $mid$ \u7684\u70b9\u3002\n- \u7528\u7684\u6b21\u6570\u8d85\u8fc7\u4e86 $k$ \u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ca\u7ec6\u8282\u89c1[\u4ee3\u7801](http://m-sea-blog.com/archives/2394/)\u3002",
        "postTime": 1552650828,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4064 \u3010[JXOI2017]\u52a0\u6cd5\u3011"
    },
    {
        "content": "\nemmm\u2026\u2026\u6211\u53c2\u52a0\u4e86JXOI2016\u548cJXOI2018\uff0c\u5c31\u662f\u6ca1\u53c2\u52a02017\uff08\u6eda\u53bb\u4e2d\u8003\u4e86\uff09\uff0c\u771f\u5947\u5999\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\u4e8c\u5206\u7b54\u6848\u4e4b\u540e\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u9009\u62e9\u4e0d\u8d85\u8fc7k\u4e2a\u533a\u95f4\u6765\u64cd\u4f5c\uff0c\u4f7f\u5f97\u6240\u6709\u6570\u90fd\u4e0d\u5c0f\u4e8emid\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u533a\u95f4\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5de6\u5230\u53f3\u626b\u63cf\uff0c\u626b\u5230\u4e00\u4e2a\u70b9\uff0c\u5c31\u5c06\u5de6\u7aef\u70b9\u4f4d\u4e8e\u8be5\u70b9\u5de6\u4fa7\u7684\u7ebf\u6bb5\u5168\u90e8\u52a0\u5165\u4e00\u4e2a\u5bb9\u5668\u4e2d\u3002\u82e5\u8be5\u70b9\u5c0f\u4e8emid\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5728\u5bb9\u5668\u4e2d\u62ff\u4e00\u4e2a\u533a\u95f4\u6765\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u70b9\u524d\u9762\u7684\u6240\u6709\u70b9\u5df2\u7ecf\u5927\u4e8e\u7b49\u4e8emid\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u76ee\u7684\u662f\u5f71\u54cd\u540e\u9762\u5c3d\u53ef\u80fd\u591a\u7684\u70b9\uff0c\u56e0\u6b64\u53f3\u7aef\u70b9\u66f4\u9760\u53f3\u7684\u533a\u95f4\u662f\u66f4\u4f18\u7684\u3002\n\n\u8fd9\u6837\u5176\u5b9e\u5c31\u786e\u5b9a\u4e86\u6211\u4eec\u8981\u4f7f\u7528\u7684\u5bb9\u5668\u662f\u5806\uff0c\u662f\u4e00\u4e2a\u4ee5\u53f3\u7aef\u70b9\u4e3a\u5173\u952e\u5b57\u7684\u5927\u6839\u5806\n\n\u82e5\u67d0\u4e00\u4e2a\u6570\u5c0f\u4e8emid\uff0c\u7136\u800c\u5806\u9876\u5143\u7d20\u7684\u53f3\u7aef\u70b9\u90fd\u5728mid\u5de6\u8fb9\u4e86\uff0c\u663e\u7136check\u5c31\u5931\u8d25\u4e86\n\n\u73b0\u5728\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u80fd\u652f\u6301\u533a\u95f4\u52a0\u6cd5\u3001\u5355\u70b9\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\uff0c\u90a3\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u3002\u518d\u7edf\u8ba1\u4e00\u4e0b\u533a\u95f4\u52a0\u6cd5\u7684\u6b21\u6570\uff0c\u8d85\u8fc7k\u6b21\u5c31\u8fd4\u56defalse\n\n```cpp\n#include<bits/stdc++.h>\n#define FR first\n#define SE second\nusing namespace std;\n\nconst int S=(1<<20)+5;\nchar buf[S],*H,*T;\ninline char Get()\n{\n    if(H==T) T=(H=buf)+fread(buf,1,S,stdin);\n    if(H==T) return -1;return *H++;\n}\ninline int read()\n{\n    int x=0;char c=Get();\n    while(!isdigit(c)) c=Get();\n    while(isdigit(c)) x=x*10+c-'0',c=Get();\n    return x;\n}\n\ntypedef pair<int,int> pii;\ntypedef long long LL;\nconst int N=200010;\npii seg[N];\nint n,m,k,a;\nint A[N];\nLL bit[N];\npriority_queue<pii> pq;\n\ninline int lowbit(const int &x){return x&-x;}\nvoid add(int p,int x){for(;p<=n+1;p+=lowbit(p))bit[p]+=x;}\nLL qry(int p){LL res=0;for(;p;p-=lowbit(p))res+=bit[p];return res;}\n\nbool check(int x)\n{\n    memset(bit,0,sizeof(LL)*(n+3));\n    for(int i=1;i<=n;i++)\n        add(i,A[i]),add(i+1,-A[i]);\n    int p=1,ans=0;\n    while(!pq.empty()) pq.pop();\n    for(int i=1;i<=n;i++)\n    {\n        while(p<=m&&seg[p].FR<=i) pq.push(pii(seg[p].SE,seg[p].FR)),p++;\n        while(qry(i)<x)\n        {\n            if(pq.empty()) return 0;\n            pii t=pq.top();pq.pop();\n            if(t.FR<i) return 0;\n            add(t.SE,a);add(t.FR+1,-a);\n            if(++ans>k) return 0;\n        }\n    }\n    return 1;\n}\n\nint main()\n{\n    for(int T_T=read();T_T;T_T--)\n    {\n        int l=INT_MAX;\n        n=read();m=read();k=read();a=read();\n        for(int i=1;i<=n;i++) l=min(l,A[i]=read());\n        for(int i=1;i<=m;i++) seg[i].FR=read(),seg[i].SE=read();\n        sort(seg+1,seg+1+m);\n        int r=l+k*a,mid;\n        while(l<=r)\n        {\n            mid=(l+r)/2;\n            if(check(mid)) l=mid+1;\n            else r=mid-1;\n        }\n        printf(\"%d\\n\",check(l)?l:l-1);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1540030652,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4064 \u3010[JXOI2017]\u52a0\u6cd5\u3011"
    },
    {
        "content": "## \u4e00\u3001\u9898\u76ee\n\n\u4e0d\u60f3\u591a\u8bf4\uff0c[\u70b9\u6b64\u770b\u9898](https://www.luogu.org/problem/P4064)\n\n\n## \u4e8c\u3001\u89e3\u6cd5\n\n\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u5427\uff0c\u6ca1\u6709\u4ec0\u4e48\u8fc7\u4e8e\u590d\u6742\u7684\u5730\u65b9\uff08\u6bd5\u7adf\u6211\u90fd\u80fd\u770b\u51fa\u6765\u89e3\u6cd5\uff09\u3002\n\n\u8fd9\u9053\u4e00\u770b\u5c31\u662f\u8981\u4e8c\u5206\u7b54\u6848\uff0c\u6211\u4eec\u8003\u8651\u600e\u4e48\u68c0\u67e5$mid$\u3002\n\n\u6211\u4eec\u5148\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\u533a\u95f4\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\uff08\u672c\u9898\u53ef\u7528\u524d\u5411\u661f\uff09\u3002\u8003\u8651\u5904\u7406\u5230\u5f53\u524d\u7684\u70b9\uff0c\u5c06\u8986\u76d6\u5b83\u7684\u64cd\u4f5c\u533a\u95f4\u76f4\u63a5\u52a0\u4e0a\u53bb\uff0c\u56e0\u4e3a\u4e8c\u5206\u7684\u7279\u6027\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5$mid$\u7684\u53ef\u884c\u6027\uff0c\u4e3a\u4e86\u53ef\u884c\u6211\u4eec\u4e0d\u80fd\u843d\u4e0b\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u52a0\u5230\u5b83\u4e0d\u5c0f\u4e8e$mid$\uff0c\u6211\u4eec\u8003\u8651\u52a0\u5165\u533a\u95f4\u7684\u4f18\u52a3\uff0c\u53d1\u73b0\u53ea\u8981\u53f3\u7aef\u70b9\u8d8a\u5927\u8d8a\u597d\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u8981\u5728\u4fdd\u8bc1\u5f53\u524d\u70b9\u7684\u60c5\u51b5\u4e0b\u517c\u987e\u540e\u9762\u7684\u70b9\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u3002\n\n\u601d\u8def\u5c31\u8bb2\u5b8c\u4e86\uff0c\u5176\u5b9e\u8fd9\u9898\u611f\u89c9\u4e5f\u4e0d\u96be\uff0c\u6309\u7740\u601d\u8def\u4e00\u6b65\u4e00\u6b65\u63a8\u5c31\u884c\uff08\u8be5\u8d2a\u5fc3\u65f6\u5c31\u8d2a\u5fc3\uff09\uff0c\u53e6\u5916\uff0c\u8fd9\u9898\u9700\u8981\u6253\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\u7684\u6811\u72b6\u6570\u7ec4\uff08\u4f1azkw\u7684\u5927\u4f6c\u8bf7\u5ffd\u7565\uff09\uff0c\n\u4f5c\u8005\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u6253\u9519\u4e86\u4e00\u76f4$Wa$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5c31nlog\u65b9\u5427\uff0c\u76ee\u6d4b\u8dd1\u7684\u8fd8\u597d\u3002\n\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 200005;\nint read()\n{\n    int num=0,flag=1;\n    char c;\n    while((c=getchar())<'0'||c>'9')if(c=='-')flag=-1;\n    while(c>='0'&&c<='9')num=(num<<3)+(num<<1)+(c^48),c=getchar();\n    return num*flag;\n}\nint T,n,tot,f[MAXN],ans,m,k,A,Min;\nint a[MAXN],b[MAXN];\nstruct node\n{\n int l,r;\n bool operator < (const node &x) const\n {\n  return r<x.r;\n }\n}s[MAXN];\nstruct edge\n{\n    int v,next;\n}e[MAXN];\npriority_queue<node> q;\nint lowbit(int x)\n{\n    return x&(-x);\n}\nvoid update(int x,int y)\n{\n for(int i=x;i<=n;i+=lowbit(i))\n  b[i]+=y;\n}\nint query(int x)\n{\n int res=0;\n for(int i=x;i>=1;i-=lowbit(i))\n  res+=b[i];\n return res;\n}\nbool check(int sta)\n{\n    while(!q.empty()) q.pop();\n for(int i=1;i<=n;i++)\n  b[i]=0;\n for(int i=1;i<=n;i++)\n  update(i,a[i]-a[i-1]);\n    int cnt=0;\n for(int i=1;i<=n;i++)\n {\n  int val=query(i);\n  while(!q.empty() && q.top().r<i)\n            q.pop();\n        for(int j=f[i];j;j=e[j].next)\n            q.push(s[e[j].v]);\n  while(val<sta && !q.empty() && q.top().r>=i)\n  {\n   node t=q.top();\n   q.pop();\n   cnt++;\n   val+=A;\n            update(t.l,A);\n            update(t.r+1,-A);\n  }\n  if(val<sta) return 0;\n }\n return cnt<=k;\n}\nvoid conquer(int l,int r)\n{\n if(l>r) return ;\n int mid=(l+r)>>1;\n if(check(mid))\n {\n  ans=mid;\n  conquer(mid+1,r);\n }\n else\n  conquer(l,mid-1);\n}\nsigned main()\n{\n T=read();\n while(T--)\n {\n  Min=0x3f3f3f3f;tot=0;\n  n=read();m=read();k=read();A=read();\n  for(int i=1;i<=n;i++)\n            f[i]=0;\n  for(int i=1;i<=n;i++)\n   a[i]=read(),Min=min(Min,a[i]);\n        ans=Min;\n  for(int i=1;i<=m;i++)\n  {\n   s[i].l=read();\n   s[i].r=read();\n            e[++tot]=edge{i,f[s[i].l]},f[s[i].l]=tot;\n  }\n  conquer(Min,Min+k*A);\n  printf(\"%d\\n\",ans);\n }\n}\n```\n\n",
        "postTime": 1568298626,
        "uid": 128239,
        "name": "C20203030",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4064 \u3010[JXOI2017]\u52a0\u6cd5\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u76ee\u8981\u6211\u4eec\u6c42\u6700\u5c0f\u503c\u6700\u5927\uff0c\u800c\u4e14\u8fd8\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u57fa\u672c\u786e\u5b9a\u662f\u8981\u4e8c\u5206\u3002   \n\u5982\u679c\u5c31\u662f\u4e8c\u5206\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u5224\u65ad\u5bf9\u4e8e\u4e00\u4e2a\u7b54\u6848 $\\text{mid}$ \u662f\u5426\u6ee1\u8db3\u7b54\u6848\u5373\u53ef\u3002   \n\u7136\u540e\u8d2a\u5fc3\u5730\u505a\u5224\u65ad\uff0c\u5982\u679c\u4e00\u4e2a\u6570 $a_i<mid$ \u90a3\u4e48\u4e00\u5b9a\u9700\u8981\u5bf9\u542b\u6709\u5b83\u7684\u533a\u95f4\u505a\u4e00\u6b21\u52a0\u64cd\u4f5c\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u6700\u4f18\uff0c\u8fd9\u6b21\u52a0\u64cd\u4f5c\u4e00\u5b9a\u8981\u5728\u53f3\u8fb9\u80fd\u8986\u76d6\u5c3d\u53ef\u80fd\u591a\u7684\u533a\u57df\u3002   \n\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u662f\u603b\u957f\u5ea6\u5462\uff1f\u56e0\u4e3a\u5de6\u8fb9\u7684\u6570\u5df2\u7ecf\u6ee1\u8db3 $a_i\\geq mid$ \u4e86\uff0c\u4e0d\u9700\u8981\u7ed9\u4ed6\u4eec\u518d\u52a0\u4e86\u3002   \n\u90a3\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5982\u4f55\u5728 $m$ \u4e2a\u533a\u95f4\u4e2d\u627e\u5230\u8986\u76d6\u4e86 $a_i$ \uff0c\u53c8\u5728\u53f3\u8fb9\u80fd\u8986\u76d6\u6700\u591a\u7684\u533a\u57df\u7684\u90a3\u4e2a\u3002\u8986\u76d6 $a_i$ \u975e\u5e38\u597d\u529e\uff0c\u5b9e\u73b0\u6392\u597d\u5e8f\uff0c\u679a\u4e3e\u5230 $i$ \u65f6\u52a0\u5165 $l$ \u7684\u503c\u4e3a $i$ \u7684\u533a\u95f4\u5373\u53ef\u3002 \u53f3\u8fb9\u80fd\u8986\u76d6\u6700\u591a\u4e5f\u597d\u529e\uff0c\u62ff\u4e00\u4e2a\u5806\u6765\u5b58\u7740\uff0c\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\u5373\u53ef\u3002   \n\u90a3\u4e48\u95ee\u9898\u5dee\u4e0d\u591a\u5c31\u89e3\u51b3\u5b8c\u4e86\uff0c\u6700\u540e\u7684\u95ee\u9898\u662f\u5982\u4f55\u505a\u5230\u533a\u95f4\u52a0 $a$ \uff0c\u540c\u65f6\u67e5\u8be2\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\uff0c\u8fd9\u4e0d\u662f\u6811\u72b6\u6570\u7ec42\u7684\u6a21\u677f\u5417\uff1f   \n\u90a3\u95ee\u9898\u5c31\u5b8c\u5168\u89e3\u51b3\u4e86\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n\\log^2 n)$ \uff08\u4e8c\u5206\u4e00\u4e2a $\\log$ \uff0c\u6811\u72b6\u6570\u7ec4\u52a0\u5806\u5224\u65ad$n\\log n$\uff09\uff0c\u867d\u7136 $n\\leq 200000$ \u8303\u56f4\u8f83\u5927\uff0c\u4f46\u662f\u65f6\u96503s\uff0c\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\u3002   \n#### \u6700\u540e\uff0c\u795d\u5927\u5bb6\u795e\u9009 RP++   \n\u4ee3\u7801\uff1a \n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define INF 0x3fffffff\nint lowbit(int x)\n{\n\treturn x&(-x);\n}\nstruct Node\n{\n\tint l,r;\n\tbool operator < (const Node &x) const\n\t{\n\t\tif(r!=x.r)\n\t\t{\n\t\t\treturn r<x.r;\n\t\t}\n\t\treturn l<x.l;\n\t}\n};\nstruct Seg\n{\n\tint l,r;\n\tbool operator < (const Seg &x) const\n\t{\n\t\tif(l!=x.l)\n\t\t{\n\t\t\treturn l<x.l;\n\t\t}\n\t\treturn r<x.r;\n\t}\n};\nSeg seg[200005];\nint dat[200005];\nint t[200005];\nint n,m,k,a;\nvoid add(int u,int data)\n{\n\twhile(u<=n)\n\t{\n\t\tt[u]+=data;\n\t\tu+=lowbit(u);\n\t}\n}\nint get(int u)\n{\n\tint ans=0;\n\twhile(u>0)\n\t{\n\t\tans+=t[u];\n\t\tu-=lowbit(u);\n\t}\n\treturn ans;\n}\nbool judge(int mid)\n{\n//\tcout<<mid<<endl;\n\tfor(int i=1;i<=n+1;i++)\n\t{\n\t\tt[i]=0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tadd(i,dat[i]);\n\t\tadd(i+1,-dat[i]);\n\t}\n\tpriority_queue<Node> q;\n\tint i=1,j=1;\n\tint res=0;\n\tfor(;i<=n;i++)\n\t{\n\t\twhile(seg[j].l<=i&&j<=m)\n\t\t{\n\t\t\tNode x;\n\t\t\tx.l=seg[j].l;\n\t\t\tx.r=seg[j].r;\n\t\t\tj++;\n\t\t\tq.push(x);\n\t\t}\n\t\twhile(get(i)<mid)\n\t\t{\n\t\t\tif(q.empty())\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(res==k)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tNode x=q.top();\n//\t\t\tprintf(\"%d %d %d\\n\",i,x.l,x.r);\n\t\t\tq.pop();\n\t\t\tadd(x.l,a);\n\t\t\tadd(x.r+1,-a);\n\t\t\tres++;\n\t\t}\n\t}\n\treturn true;\n}\nvoid work()\n{\n\tcin>>n>>m>>k>>a;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&dat[i]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d\",&seg[i].l,&seg[i].r);\n\t}\n\tsort(seg+1,seg+m+1);\n\tint l=0,r=INF,mid,ans;\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)/2;\n//\t\tprintf(\"%d %d\\n\",mid,clock());\n\t\tif(judge(mid))\n\t\t{\n\t\t\tl=mid+1;\n\t\t\tans=mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr=mid-1;\n\t\t}\n\t}\n\tcout<<ans<<endl;\n}\nint main()\n{\n\tint T;\n\tcin>>T;\n\tfor(int i=1;i<=T;i++)\n\t{\n\t\twork();\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1553520554,
        "uid": 70780,
        "name": "wasa855",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4064 \u3010[JXOI2017]\u52a0\u6cd5\u3011"
    },
    {
        "content": "\u5f88\u5957\u8def\u4f46\u662f\u6211\u53c8\u89c9\u5f97\u633a\u597d\u7684\u4e00\u9053\u9898\u3002\n\n\u9996\u5148\u770b\u89c1\u6700\u5927\u5316\u6700\u5c0f\u503c\u79d2\u60f3\u5230\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u91cd\u8981\u7684\u5c31\u662f\u89e3\u51b3 `check` \u51fd\u6570\uff0c\u533a\u95f4\u52a0\u5355\u70b9\u67e5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u67e5\u5206\u6570\u7ec4\uff0c\u53f3\u8f6c [P3368 \u3010\u6a21\u677f\u3011\u6811\u72b6\u6570\u7ec4 2](https://www.luogu.com.cn/problem/P3368)\n\n\u600e\u4e48\u505a\u5462\uff1f\uff1f\uff1f\n\n`check(x)` \u8868\u793a\u80fd\u4e0d\u80fd\u5728 $k$ \u6b21\u64cd\u4f5c\u4ee5\u5185\u4f7f\u5f97\u6bcf\u4e2a $A_i \\geqslant x$ \uff0c\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u662f\u4f18\u5148\u961f\u5217\u6700\u5c0f\u5806\uff0c\u4f46\u662f\u6211\u5f88\u5feb\u53d1\u73b0\u8fd9\u6837\u505a\u4e0d\u65b9\u4fbf\u8d2a\u5fc3\uff0c\u8fd9\u91cc\u663e\u7136\u662f\u8981\u8d2a\u5fc3\u7684\u3002\n\n\u90a3\u5c31\u8003\u8651 $1-n$ \u4e00\u4e2a\u4e2a\u679a\u4e3e\u5427\uff01\uff0c\u5f53\u6211\u4eec\u679a\u4e3e\u5230 $i$ \u7684\u65f6\u5019\u5c31\u8981\u4fdd\u8bc1 $A_i \\geqslant x$\u3002\n\n\u524d $i-1$ \u4e2a\u80af\u5b9a\u662f\u6ee1\u8db3\u5927\u4e8e\u7b49\u4e8e $x$ \u7684\u6761\u4ef6\u7684\uff08\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u524d\u9762\u679a\u4e3e\u6765\u7684\uff09\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4ece $i - n$ \u6bcf\u4e2a\u90fd\u6ee1\u8db3\u5927\u4e8e\u7b49\u4e8e $x$\u3002\u8d2a\u5fc3\u663e\u7136\u662f\u8981\u6536\u76ca\u6700\u5927\uff0c\u8003\u8651\u533a\u95f4 $[l,r]$ \u6b64\u65f6\u5bf9 $r - i + 1$ \u4e2a\u4f4d\u7f6e\u52a0\u4e0a\u4e86 $a$\uff0c\u663e\u7136 $r$ \u8d8a\u5927\u80fd\u52a0\u7684\u8d8a\u591a\uff08\u524d\u63d0\u662f $l \\geqslant i$\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u4fdd\u8bc1\u7684\u662f$A_i \\geqslant x$\uff09\u4e8e\u662f\u4e00\u4e2a\u8d2a\u5fc3\u65b9\u6848\u5c31\u51fa\u6765\u4e86\u3002\n\n\u679a\u4e3e $i$\uff0c\u5c06 $l = i$ \u7684\u533a\u95f4\u52a0\u5165\u4e00\u4e2a\u4ee5 $r$ \u4e3a\u5173\u952e\u5b57\u7684\u6700\u5927\u5806\uff0c\u7136\u540e\u53ea\u8981\u4e0d\u6ee1\u8db3 $A_i \\geqslant x$ \u5c31\u53d6\u5806\u9876\u7684\u533a\u95f4\u8fdb\u884c\u533a\u95f4\u52a0\u64cd\u4f5c\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 200005;\n#define int long long\nstruct node{\n\tint l,r;\n}a[N];\nstruct way{\n\tint p;\n\tnode x;\n\tbool operator<(const way& d)const{\n\t\treturn this->p < d.p;\n\t}\n\tway(node _x,int _p):x(_x),p(_p){}\n};\nint n,m,k,c,T,s[N],t[N];\nbool cmp(node x,node y){\n\tif(x.l != y.l) return x.l < y.l;\n\telse return x.r > y.r;\n}\nint lowbit(int x){return x & -x;}\nvoid add(int x,int p){for(int i = x;i <= n;i += lowbit(i)) t[i] += p;}\nint find(int x){\n\tint num = 0;\n\tfor(int i = x;i >= 1;i -= lowbit(i)) num += t[i];\n\treturn num;\n}\npriority_queue<way,vector<way> >q;\nbool check(int x){\n\twhile(!q.empty()) q.pop();\n\tmemset(t,0,sizeof(t));\n\tfor(int i = 1;i <= n;++i) add(i,s[i]),add(i + 1,-s[i]);\n\tint cnt = 0;\n\tint now = 1;\n\tfor(int i = 1;i <= n;++i){\n\t\twhile(a[now].l == i && now <= m){\n\t\t\tq.push(way(a[now],a[now].r));\n\t\t\t++now;\n\t\t}\n\t\twhile(!q.empty() && find(i) < x){\n\t\t\tway tmp = q.top();\n\t\t\tq.pop();\n\t\t\tadd(tmp.x.l,c),add(tmp.x.r + 1,-c);\n\t\t\t++cnt;\n\t\t}\n\t\tif(find(i) < x) return false;\n\t}\n\treturn cnt <= k;\n}\nsigned main(){\n\tscanf(\"%lld\",&T);\n\twhile(T--){\n\t\tscanf(\"%lld%lld%lld%lld\",&n,&m,&k,&c);\n\t\tfor(int i = 1;i <= n;++i) scanf(\"%lld\",&s[i]);\n\t\tfor(int i = 1;i <= m;++i) scanf(\"%lld%lld\",&a[i].l,&a[i].r);\n\t\ta[m + 1].l = a[m + 1].r = n + 1;\n\t\tsort(a + 1,a + m + 1,cmp);\n\t\tint l = 0,r = 2 * 1e8,mid,ret = 1;\n\t\twhile(l <= r){\n\t\t\tmid = (l + r) / 2;\n\t\t\t//printf(\"%d %d %d\\n\",l,r,mid);\n\t\t\t//for(int i = 1;i <= n;++i) s1[i] = s[i];\n\t\t\tif(check(mid)) ret = mid,l = mid + 1;\n\t\t\t//for(int i = 1;i <= n;++i) s[i] = s1[i];\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tprintf(\"%lld\\n\",ret);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1650462960,
        "uid": 239433,
        "name": "WZKQWQ",
        "ccfLevel": 7,
        "title": "P4064 [JXOI2017]\u52a0\u6cd5\u9898\u89e3"
    },
    {
        "content": "[Link](https://www.luogu.com.cn/problem/P4064)\n\n[Blog\u9605\u8bfb\u6548\u679c\u66f4\u4f73](https://tony102.xyz/index.php/2021/02/18/luogu4064-jxoi2017%e5%8a%a0%e6%b3%95/)\n\n\n### Sol\n\n**\u603b\u7ed3\uff1a\u5bf9\u4e8e\u4e00\u7c7b\u7528\u8d2a\u5fc3\u89e3\u51b3\u9009\u4e00\u4e9b\u533a\u95f4\u6765\u8986\u76d6\u70b9\uff08\u5bf9\u70b9\u7ecf\u884c\u64cd\u4f5c\uff09\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8d2a\u5fc3\u5730\u8003\u8651\u9009\u7684\u533a\u95f4\u5c3d\u91cf\u5f80\u53f3\u8fb9\u591a\u8d21\u732e\u4e00\u70b9\u3002**\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\uff0c\u7ed9\u4f60\u4e86\u4e00\u4e9b\u533a\u95f4$[l_i,r_i]$ \u548c\u4e00\u4e2a\u589e\u52a0\u503c $val$\uff0c\u6bcf\u4e2a\u533a\u95f4\u4ec5\u53ef\u4ee5\u88ab\u9009\u62e9\u4e00\u6b21\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u9009\u5b9a\u4e00\u4e2a\u533a\u95f4\u5e76\u5728\u5e8f\u5217\u4e0a\u5bf9\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6570\u90fd\u52a0\u4e0a$val$\uff0c\u73b0\u5728\u8981\u64cd\u4f5c\u540e\u7684\u5e8f\u5217\u7684\u6700\u5c0f\u503c\u5c3d\u53ef\u80fd\u7684\u5927\u3002\u53ea\u53ef\u4ee5\u64cd\u4f5c$k$\u6b21\n\n\u9996\u5148\u770b\u5230\u6700\u5927\u5316\u6700\u5c0f\u503c\u8fd9\u79cd\u5b57\u773c\uff0c\u5c31\u8981\u4e8c\u5206\u4e00\u4e0b\u8fd9\u4e2a\u7b54\u6848\u3002\u6700\u4f18\u5316\u95ee\u9898\u6539\u6210\u5224\u5b9a\u6027\u95ee\u9898\u5f88\u5e38\u89c1\u3002\n\n\u8fd8\u662f\u5bf9\u7ed9\u4f60\u7684\u533a\u95f4\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\u3002\u90a3\u4e48\u73b0\u5728\u4ece\u5de6\u5f80\u53f3\u64cd\u4f5c\u3002\u6211\u4eec\u5e0c\u671b\u6bcf\u6b21\u9009\u5b9a\u7684\u533a\u95f4\u53f3\u7aef\u70b9\u5c3d\u53ef\u80fd\u9760\u53f3\uff0c\u6240\u4ee5\u5c31\u5427\u533a\u95f4\u52a0\u5165\u4e00\u4e2a\u5927\u6839\u5806\u91cc\u9762\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u5373\u53ef\u3002\n\n\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u5224\u5b9a\u7684\u65f6\u5019\u4e00\u4e2a\u70b9\u5b83\u53ef\u80fd\u52a0\u4e00\u6b21\u8fd8\u662f\u4e0d\u6ee1\u8db3\uff0c\u4f46\u662f\u5b83\u6709\u53ef\u80fd\u88ab\u591a\u4e2a\u533a\u95f4\u8986\u76d6\u3002\u90a3\u4e48\u5c31while\u4e0b\u53bb\u5c31\u53ef\u4ee5\u4e86\uff08\u8fd9\u4e2abug\u6211\u6539\u4e86\u5f88\u4e45\u3002\n\n\n**[Code\u6233\u8fd9\u91cc](https://tony102.xyz/index.php/2021/02/18/luogu4064-jxoi2017%e5%8a%a0%e6%b3%95/)**",
        "postTime": 1613660638,
        "uid": 230933,
        "name": "Tony102",
        "ccfLevel": 7,
        "title": "Luogu4064 [JXOI2017]\u52a0\u6cd5"
    },
    {
        "content": "\u8fd9\u9898\u6709\u70b9\u601d\u7ef4\u96be\u5ea6\uff0c\u633a\u503c\u5f97\u505a\u7684\n\n---\n## \u5173\u952e\u4fe1\u606f\n- \u6700\u5c0f\u503c\u7684\u6700\u5927\u503c\n\n- \u533a\u95f4\u52a0\u6b63\u6574\u6570\n\n- \u6bcf\u4e2a\u533a\u95f4\u6700\u591a\u53ea\u80fd\u9009\u62e9\u4e00\u6b21\n\n- \u6070\u597d\u9009 $k$ \u4e2a\u533a\u95f4\n\n## \u5206\u6790\u9898\u76ee\n### \u4e3a\u4ec0\u4e48\u4e8c\u5206\n\u8fd9\u9898\u6c42\u6700\u5c0f\u503c\u7684\u6700\u5927\u5316\uff0c\u521d\u6b65\u8003\u8651\u4e8c\u5206\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u662f\u6709\u8303\u56f4\u7684\uff0c\u4ece $min\\lbrace a_i\\rbrace$ \u5230 $min\\lbrace a_i \\rbrace+a \\times k$ \u90fd\u662f\u53ef\u80fd\u7684\u7b54\u6848\u3002\n\n\u6700\u540e\uff0c\u8003\u8651\u5355\u8c03\u6027\uff0c\u6839\u636e\u6b64\u9898\u64cd\u4f5c\u662f\u52a0\u6b63\u6574\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u5927\u4e00\u70b9\uff0c\u627e\u5230\u5408\u6cd5\u89e3\u8d77\u6765\u5c31\u96be\u4e00\u70b9\uff1b\u7b54\u6848\u5c0f\u4e00\u70b9\uff0c\u627e\u5230\u5408\u6cd5\u89e3\u5c31\u5bb9\u6613\u4e00\u70b9\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u786e\u5b9a\u7528\u4e8c\u5206\u6765\u5f97\u5230\u7b54\u6848\u3002\n### \u5982\u4f55\u68c0\u6d4b\u7b54\u6848\u662f\u5426\u5408\u6cd5\n\u8fd9\u5c31\u662f\u672c\u9898\u7684\u96be\u70b9\u6240\u5728\u4e86\u3002\n\n\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u5982\u679c\u7b54\u6848\u6210\u7acb\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u4e3a $min\\lbrace a_i\\rbrace$ \uff0c\u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u8981\u4f7f\u5c0f\u4e8e\u4e8c\u5206\u4e2d\u70b9\u7684\u5143\u7d20\u589e\u52a0\uff0c\u76f4\u5230\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u4e8c\u5206\u7684\u4e2d\u70b9\u3002\n\n**\u6ce8\u610f\uff0c\u4e0b\u9762\u662f\u6b64\u9898\u96be\u70b9\u4e2d\u7684\u96be\u70b9**\n\n\u6211\u4eec\u7684\u7b56\u7565\u662f\u5148\u628a\u5c0f\u4e8e\u4e8c\u5206\u4e2d\u70b9\u7684\u5143\u7d20\u7684\u4e0b\u6807\u8bb0\u5f55\u4e0b\u6765\u3002\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u70b9\uff0c\u627e\u5230\u80fd\u8986\u76d6\u5b83\u7684\u7ebf\u6bb5\uff0c\u8fdb\u884c\u8986\u76d6\uff0c\u76f4\u5230\u5b83\u7684\u503c\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u4e8c\u5206\u7684\u4e2d\u70b9\u6216\u53d1\u73b0\u65e0\u6cd5\u5b9e\u73b0\u3002\n\n\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u8981\u4f18\u5316\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u4eec\u8981\u5148\u5bf9\u7ebf\u6bb5\u4ee5 **\u5de6\u7aef\u70b9\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ece\u5c0f\u5230\u5927\uff1b\u4ee5\u53f3\u7aef\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u4ece\u5c0f\u5230\u5927** \uff0c\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u6837\u5c31\u786e\u5b9a\u4e86\u7ebf\u6bb5\u7684\u987a\u5e8f\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a **\u5927\u6839\u5806** \u6765\u7ef4\u62a4\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9\u3002\u56e0\u4e3a\u5728\u80fd\u8986\u76d6\u8fd9\u4e2a\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u8986\u76d6\u66f4\u591a\u7684\u5143\u7d20\uff0c\u51cf\u5c11\u6210\u672c\u3002\u5de6\u7aef\u70b9\u4e0d\u7528\u7ef4\u62a4\uff0c\u56e0\u4e3a\u65e2\u7136\u6211\u4eec\u80fd\u8d70\u5230\u73b0\u5728\u8fd9\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u524d\u9762\u7684\u5143\u7d20\u4e00\u5b9a\u88ab\u66f4\u65b0\u597d\u4e86\u3002\u5982\u679c\u6709\u5de6\u7aef\u70b9\u5c0f\u4e8e\u73b0\u5728\u5143\u7d20\uff0c\u53f3\u7aef\u70b9\u4e5f\u5c0f\u4e8e\u73b0\u5728\u5143\u7d20\u7684\u7ebf\u6bb5\u8be5\u600e\u4e48\u529e\u5462\uff0c\u5373\u5728\u8be5\u5143\u7d20\u524d\u3001\u4e14\u8986\u76d6\u4e0d\u5230\u7684\u7ebf\u6bb5\uff1f\u4e0d\u7ba1\u3002\u56e0\u4e3a\u8fd9\u662f\u6ca1\u7528\u7684\u7ebf\u6bb5\uff0c\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002\n\n\u8986\u76d6\u65f6\u7528\u4e00\u4e2a\u5dee\u5206\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u6211\u4eec\u5bf9\u5f53\u524d\u5143\u7d20\u4f4d\u7f6e\u5230\u5806\u9876\u7684\u533a\u95f4\u52a0\u4e0a $a$\uff08\u5de6\u8fb9\u5df2\u7ecf\u5904\u7406\u597d\u4e86\uff0c\u5c31\u4e0d\u7ba1\uff09 \uff0c\u76f4\u5230\u8be5\u5143\u7d20\u503c\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u4e8c\u5206\u7684\u4e2d\u70b9\u6216\u53d1\u73b0\u65e0\u6cd5\u5b9e\u73b0\u3002\u8986\u76d6\u5b8c\u4e00\u6b21\u522b\u5fd8\u4e86\u5f39\u51fa\u5806\u9876\u54e6\u3002\u5982\u679c\u64cd\u4f5c **\u603b\u5171\u6267\u884c\u7684\u6b21\u6570\u6bd4 $k$ \u5927\u6216\u5806\u7a7a** \uff0c\u5c31\u8bf4\u660e\u65e0\u6cd5\u5b9e\u73b0\u3002\n\n### \u5982\u679c\u9009\u51fa\u7684\u533a\u95f4\u5c0f\u4e8ek\u4e2a\u600e\u4e48\u529e\n\u6211\u4eec\u770b\u4f3c\u6ca1\u6709\u5224\u65ad\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u4f46\u8fd9\u4e2a\u5176\u5b9e\u4e0d\u7528\u7ba1\u3002\u56e0\u4e3a\u8fd9\u9898\u7684\u64cd\u4f5c\u662f\u52a0\u6b63\u6570\uff0c\u6240\u4ee5\u64cd\u4f5c\u53ea\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u8d21\u732e\u6216\u4e0d\u6539\u53d8\u7b54\u6848\uff0c\u800c\u4e0d\u4f1a\u635f\u5bb3\u7b54\u6848\u3002\u5269\u4e0b\u7684\u533a\u95f4\u53cd\u6b63\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\uff0c\u5c31\u968f\u4fbf\u53d6\u554a\uff01\u800c\u8fd9\u9898\u6211\u4eec\u53ea\u8981\u7b54\u6848\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u4e0d\u7ba1\u4e86\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\u6211\u5199\u8fd9\u9898\u65f6\u5148\u5199\u4e86\u8bfb\u5165\u3001\u6392\u5e8f\u4e4b\u7c7b\u7684\u9884\u5904\u7406\uff0c\u7136\u540e\u5199\u4e8c\u5206\u7684\u6846\u67b6\uff0c\u518d\u5199\u6811\u72b6\u6570\u7ec4\uff0c\u6700\u540e\u624d\u5199 `check` \u51fd\u6570\u3002\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f\u6700\u4f73\u7684\u5199\u4ee3\u7801\u987a\u5e8f\u3002\n```cpp\n#include<bits/stdc++.h>\n#define il inline \nusing namespace std;\nconst int maxn=200004;\nint t,n,m,k,val,l,r,a[maxn],tree[maxn],tmp[maxn];\nstruct seg{\n\tint begin,end;\n\tbool operator < (const seg &comp) const{\n\t\tif(begin==comp.begin)\n\t\t\treturn end<comp.end;\n\t\treturn begin<comp.begin;\n\t}\n}s[maxn];\n\nil void read(int &x){\n\tbool f=0;char c=getchar();x=0;\n\tfor(;c<'0'||c>'9';c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=x*10+(c^48);\n}\n\nil const int _min(const int &a,const int &b){\n\treturn a<b?a:b;\n}\n\nil void add(int p,int v){\n\twhile(p<=n){\n\t\ttree[p]+=v;\n\t\tp+=p&-p;\n\t}\n}\n\nil int sum(int p){\n\tint ret=0;\n\twhile(p){\n\t\tret+=tree[p];\n\t\tp-=p&-p;\n\t}\n\treturn ret;\n}\n\nvoid init(){\n\tl=0x3f3f3f3f;\n\tread(n),read(m),read(k),read(val);\n\tfor(int i=1;i<=n;i++){\n\t\tread(a[i]);\n\t\tl=_min(l,a[i]);\n\t} \n\tr=l+val*k;\n\tfor(int i=1;i<=m;i++)\n\t\tread(s[i].begin),read(s[i].end);\n\tsort(s+1,s+m+1);\n}\n\nbool check(int mid){\n\tpriority_queue < int > q;\n\tint cnt=0,tot=0,j=1;\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]<mid)\n\t\t\ttmp[++cnt]=i;\n\tmemset(tree,0,sizeof(tree));\n\tfor(int i=1;i<=cnt;i++){\n\t\twhile(j<=m&&s[j].begin<=tmp[i])   \n\t\t\tq.push(upper_bound(tmp+1,tmp+cnt+1,s[j++].end)-tmp);\n\t\twhile(a[tmp[i]]+sum(i)<mid){\n\t\t\t++tot;\n\t\t\tif(tot>k||q.empty())\n\t\t\t\treturn 0;\n\t\t\tadd(i,val),add(q.top(),-val);\n\t\t\tq.pop();\n\t\t}\n\t} \n\treturn 1;\n}\n\nsigned main(){\n\tread(t);\n\twhile(t--){\n\t\tinit();\n\t\tint ans=0;\n\t\twhile(l<=r){\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(check(mid)){\n\t\t\t\tans=mid;\n\t\t\t\tl=mid+1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tr=mid-1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1611154568,
        "uid": 289944,
        "name": "Na2PtCl6",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4064 \u3010[JXOI2017]\u52a0\u6cd5\u3011"
    },
    {
        "content": "#### \u9898\u89e3\uff1a\n\n\u8bf8\u5982\u6b64\u7c7b\u9898\u76ee\uff0c\u5e38\u7528\u624b\u6bb5\u4fbf\u662f\u4e8c\u5206\u7b54\u6848\u3002\n\n\u5047\u8bbe\u6211\u4eec\u8981\u68c0\u9a8c\u7684\u7b54\u6848\u662f $x$\uff0c\u5982\u4f55\u5feb\u901f\u5224\u65ad\u80fd\u5426\u505a\u5230\u5c06 $\\min A_i$ \u8c03\u6574\u5230\u4e0d\u5c0f\u4e8e $x$\uff1f\n\n\u8fd9\u5373\uff0c\u6709\u82e5\u5e72\u6761\u7ebf\u6bb5\uff0c\u9009\u53d6\u5176\u4e2d\u7684 $k$ \u6761\uff0c\u80fd\u5426\u6ee1\u8db3 $i$ \u5904\u81f3\u5c11\u6709\u82e5\u5e72\u6761\u7ebf\u6bb5\u8986\u76d6\uff1f\n\n\u8fd9\u4fbf\u662f\u4e00\u9053\u7ecf\u5178\u7684\u8d2a\u5fc3\u9898\uff08\u7684\u6269\u5c55\uff09\uff0c\u6211\u4eec\u6709\u5982\u4e0b\u7b56\u7565\n\n> \u5f53\u76ee\u524d\u6700\u5de6\u8fb9\u7684\u70b9\u9700\u8981\u88ab\u82e5\u5e72\u6761\u7ebf\u6bb5\u8986\u76d6\u65f6\uff0c\u9009\u62e9\u54ea\u4e9b\u7ebf\u6bb5\u6700\u4f18\uff1f\n>\n> \u663e\u7136\u662f\u53d6\u53f3\u7aef\u70b9\u5c3d\u91cf\u9760\u53f3\u7684\u90a3\u4e48\u591a\u6761\u7ebf\u6bb5\uff0c\u56e0\u4e3a\u5b83\u4eec\u80fd\u8986\u76d6\u4e4b\u540e\u66f4\u591a\u7684\u70b9\u3002\n>\n\n\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u672c\u9898\u7684\u5927\u81f4\u601d\u8def\uff1a\n\n- \u5c06\u6240\u6709\u7ebf\u6bb5\u6309\u5de6\u7aef\u70b9\u4f4d\u7f6e\u9012\u589e\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u4f4d\u7f6e\u9012\u51cf\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff1b\n\n- \u4e8c\u5206\u5224\u65ad\u80fd\u5426\u4f7f\u5f97 $\\min A_i\\geq x$\uff1b\n\n\t- \u4ece\u5de6\u81f3\u53f3\u4f9d\u6b21\u8003\u8651 $j$\uff0c\u82e5 $A_i<x$, \u5219\u53d6\u5f53\u524d\u80fd\u8986\u76d6 $j$\uff0c\u4e14\u53f3\u7aef\u70b9\u6700\u9760\u53f3\u7684\u7ebf\u6bb5\uff0c\u5e76\u66f4\u6539\u5b83\u6240\u80fd\u5f71\u54cd\u5230\u7684\u70b9\u7684\u503c\uff1b\n    \n\t- \u66f4\u65b0\u6240\u5b58\u50a8\u7684\u7ebf\u6bb5\uff0c\u5373\u5c06\u53f3\u7aef\u70b9\u4e0d\u5230 $i$ \u7684\u5220\u53bb\u3002\n    \n\u8fd9\u91cc\u6ca1\u6709\u53bb\u8ba1\u7b97 $A_i$ \u6240\u9700\u7684\u7ebf\u6bb5\u6570\u91cf\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884c\u533a\u95f4\u52a0\uff0c\u662f\u56e0\u4e3a\u6211\u8ba4\u4e3a\u533a\u95f4\u52a0\u7565\u597d\u5199\u4e00\u4e9b\uff08\u4e0d\u9700\u8981\u8003\u8651\u8fb9\u754c\uff0c\u4f46\u591a\u4e00\u4e2a $\\log$\uff09\uff08\u5927\u96fe\uff09\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u7528\u5806\u7ef4\u62a4\u5f53\u524d\u5b58\u50a8\u7684\u7ebf\u6bb5\uff0c\u5e76\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6570\u5217 $A$ \u7684\u503c\uff0c\u4fbf\u53ef\u5b8c\u6210\u5bf9\u4e8c\u5206\u6240\u5047\u8bbe\u7684\u7b54\u6848\u7684\u5224\u65ad\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(m\\log m+\\log |D|(n \\log n))$\uff0c\u8fd9\u91cc $D$ \u662f\u503c\u57df\uff0c\u8303\u56f4\u662f $|D| \\leq am$\u3002\n\n\u4e8e\u662f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(m\\log m+\\log(am) \\times n\\log n)$\u3002\n\n------------\n\n#### \u4ee3\u7801\uff1a\n\n\u6ce8\u610f\u7ec6\u8282\uff1a\u5806\u91cc\u5bf9\u7ebf\u6bb5\u7684\u6392\u5e8f\u65b9\u5f0f\u548c\u521d\u59cb\u65f6\u7684\u6392\u5e8f\u65b9\u5f0f**\u4e0d\u4e00\u6837**\uff01\uff01\uff01\n\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+2333;\nconst int inf=233333333;\nint t,n,m,k,a,ans;\nint A[maxn],tree[maxn];\nstruct seg{\n\tint l,r;\n\tbool operator < (const seg &x) const{\n\t\tif(l==x.l)return r<x.r;\n\t\treturn l<x.l;\n\t}\n}s[maxn];\nstruct seg2{\n\tint l,r;\n\tbool operator < (const seg2 &x) const{\n\t\tif(r==x.r)return l<x.l;\n\t\treturn r<x.r;\n\t}\n};\nvoid add(int x,int k){\n\twhile(x<=n)tree[x]+=k,x+=(x&(-x));\n}\nint query(int x){\n\tint res=0;\n\twhile(x>0)res+=tree[x],x-=(x&(-x));\n\treturn res;\n} //\u6811\u72b6\u6570\u7ec4\nint check(int x){\n\tfor(int i=1;i<=n+1;i++)\n\t\ttree[i]=0;\n\tfor(int i=1;i<=n;i++)\n\t\tadd(i,A[i]),\n\t\tadd(i+1,-A[i]);\n\tpriority_queue<seg2>q;\n\tint j=1,mark=0;\n\tfor(int i=1;i<=n;i++){\n\t\twhile(s[j].l<=i&&j<=m){ //\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u7ebf\u6bb5\n\t\t\tseg2 c;\n\t\t\tc.l=s[j].l,c.r=s[j].r;\n\t\t\tq.push(c);\n\t\t\tj++;\n\t\t}\n\t\twhile(query(i)<x){\n\t\t\tif(q.empty())return 0; //\u7ebf\u6bb5\u4e0d\u591f\u8986\u76d6\uff0c\u4e0d\u884c\n\t\t\tif(mark==k)return 0;\n\t\t\tseg2 d=q.top();q.pop();\n\t\t\tadd(d.l,a);\n\t\t\tadd(d.r+1,-a); //\u9009\u62e9\u4e86\u7ebf\u6bb5\u540e\uff0c\u66f4\u65b0\u5176\u5b83A\u503c\n\t\t\tmark++;\n\t\t}\n\t}\n\treturn 1;\n}\nsigned main(){\n\tcin>>t;\n\twhile(t--){\n\t\tint e=inf;\n\t\tcin>>n>>m>>k>>a;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcin>>A[i],e=min(e,A[i]);\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tcin>>s[i].l>>s[i].r;\n\t\tint L=e,R=e+a*m,ans=e; //\u7cbe\u786e\u4f30\u8ba1\u4e0a\u4e0b\u754c\n\t\tsort(s+1,s+m+1);\n\t\twhile(L<=R){\n\t\t\tint mid=(L+R)/2;\n\t\t\tif(check(mid))\n\t\t\t\tans=mid,L=mid+1;\n\t\t\telse R=mid-1;\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\t\n}\n```",
        "postTime": 1596813930,
        "uid": 119526,
        "name": "codecode",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4064 \u3010[JXOI2017]\u52a0\u6cd5\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u6d1b\u8c37\u94fe\u63a5](https://www.luogu.org/problem/P4064)\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u96be\u770b\u51fa\u8fd9\u9053\u9898\u5177\u6709\u8fd9\u6837\u7684\u5355\u8c03\u6027\uff1a\u5982\u679c\u6709\u4e00\u79cd\u64cd\u4f5c\u65b9\u6848\u4f7f\u5f97$\\min\\{A_i\\}\\ge k$\uff0c\u90a3\u4e48\u5fc5\u7136\u6ee1\u8db3\u6709\u64cd\u4f5c\u65b9\u6848\u662f\u7684$\\min\\{A_i\\}\\ge k-1$\u3002\u8fd9\u4e3a\u6211\u4eec\u7684\u4e8c\u5206\u63d0\u4f9b\u4e86\u6761\u4ef6\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5047\u8bbe\u6211\u4eec\u4e8c\u5206\u5230\u4e86\u4e00\u4e2a$k=mid$\uff0c\u4e5f\u5c31\u662f\u8981\u6c42\u8fd9\u4e2a$A$\u6570\u7ec4\u91cc\u9762\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u5927\u4e8e$k$\uff0c\u90a3\u4e48\u5982\u4f55\u8d2a\u5fc3\u624d\u662f\u6700\u4f18\u7684\u5462\uff1f\u4e0d\u96be\u60f3\u5230\u626b\u63cf$A$\u6570\u7ec4\uff0c\u5e76\u4e14**\u5f53\u4e00\u4e2a\u70b9\u5982\u679c\u9519\u8fc7\u8fd9\u4e2a\u673a\u4f1a\u518d\u4e5f\u65e0\u6cd5\u88ab\u8986\u76d6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u624d\u53bb\u7528\u5df2\u6709\u7684\u53ef\u4ee5\u8986\u76d6\u7684\u533a\u95f4\u8986\u76d6\u5b83**\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8fd9\u79cd\u5c3d\u91cf\u5ef6\u540e\u7684\u7b56\u7565\u5728\u5176\u5b83\u9898\u4e2d\u4e5f\u6709\u4f53\u73b0\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u57fa\u4e8e\u8fd9\u4e2a\u601d\u8def\u6765\u68c0\u67e5\u4e00\u4e2a\u7b54\u6848\u662f\u5426\u5408\u7406\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u626b\u63cf$A$\u6570\u7ec4\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u96c6\u5408$S$\u3002\u5982\u679c\u5f53\u524d\u5230\u4e86\u70b9$i$\uff0c\u5219$S$\u91cc\u9762\u7684\u533a\u95f4\u90fd\u662f\u53ef\u4ee5\u8986\u76d6\u70b9$i$\u7684\u533a\u95f4\u3002\u8003\u8651\u626b\u63cf\u5230\u4e86\u70b9$i$\uff0c\u5219\u6211\u4eec\u5e94\u8be5\u5148\u7ef4\u62a4\u53ef\u7528\u7684\u96c6\u5408\u3002\u7136\u540e\uff0c\u5982\u679c$A_i<k$\uff0c\u6211\u4eec\u5c31\u5f97\u4ece\u96c6\u5408\u91cc\u9762\u9009\u51fa\u533a\u95f4\u6765\u64cd\u4f5c\u3002\u7531\u4e8e\u6bcf\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u533a\u95f4\u7684\u4f18\u52a3\u53d6\u51b3\u4e8e\u5b83\u7684\u53f3\u7aef\u70b9\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6839\u636e\u53f3\u7aef\u70b9\u8d8a\u53f3\u8d8a\u4f18\u6765\u6392\u5e8f\u7684\u5927\u6839\u5806\uff0c\u6743\u4f5c\u96c6\u5408\u3002\u6bcf\u6b21\u5c31\u4ece\u5806\u9876\u53d6\u533a\u95f4\u5c31\u53ef\u4ee5\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u533a\u95f4\u589e\u52a0\u4e00\u4e2a\u503c\u548c\u5355\u70b9\u67e5\u8be2\u7684\u64cd\u4f5c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u3002\u68c0\u67e5\u7684\u65f6\u95f4\u662f$O(n+m\\log_2m)$\uff0c\u603b\u65f6\u95f4\u662f$O(m\\log_2m\\log_2ka)$\uff08\u540e\u9762\u90a3\u4e2a$O(\\log_2ka)$\u662f\u5916\u90e8\u4e8c\u5206\u7684\u590d\u6742\u5ea6\uff09\n# \u4ee3\u7801\n```cpp\n#include <queue>\n#include <cstdio>\nusing namespace std;\n\n//#define __DEBUG\n#define isLeaf( a ) ( segTree[a].l == segTree[a].r )\n\nconst int MAXN = 2e5 + 5, MAXM = 2e5 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b; \n}\n\nstruct range\n{\n\tint l, r;\n\trange(){}\n\trange( const int L, const int R ){ l = L, r = R; }\n\tbool operator < ( const range & other ) const { return ! ( r > other.r ); }\n}ran[MAXM];\n\npriority_queue<range> q;\n\nint BIT[MAXN];\nint head[MAXN], nxt[MAXM];\nint A[MAXN];\nint N, M, K, a;\n\nvoid add( const int indx, const int ID )\n{\n\tnxt[ID] = head[indx];\n\thead[indx] = ID;\n}\n\nint lowbit( const int & x )\n{\n\treturn x & ( -x );\n}\n\nvoid update( const int indx, const int val )\n{\n\tfor( int i = indx ; i <= N ; i += lowbit( i ) ) BIT[i] += val;\n}\n\nint query( const int indx )\n{\n\tint s = 0;\n\tfor( int i = indx ; i ; i -= lowbit( i ) ) s += BIT[i];\n\treturn s;\n}\n\nvoid clear()\n{\n\twhile( ! q.empty() ) q.pop();\n\tfor( int i = 1 ; i <= N ; i ++ ) BIT[i] = 0;\n}\n\nbool chk( const int mn )\n{\n\tint tot = 0;\n\tclear();\n\tfor( int i = 1 ; i <= N ; i ++ ) update( i, A[i] - A[i - 1] );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\twhile( ! q.empty() && q.top().r < i ) q.pop();\n        //\u60f0\u6027\u5220\u9664\u6cd5\uff0c\u7ef4\u62a4\u51fa\u53f3\u7aef\u70b9\u53ef\u8fbe\u7684\u533a\u95f4\n\t\tfor( int j = head[i] ; j ; j = nxt[j] ) q.push( ran[j] );\n\t\twhile( query( i ) < mn && ! q.empty() && q.top().r >= i )\n\t\t{\n\t\t\ttot ++;\n\t\t\tupdate( q.top().l, a );\n\t\t\tupdate( q.top().r + 1, -a );\n\t\t\tq.pop();\n\t\t}\n        //\u533a\u95f4\u52a0\u503c\n\t\tif( query( i ) >= mn ) continue;\n\t\treturn false;\n        //\u5982\u679c\u53ef\u7528\u533a\u95f4\u90fd\u7528\u5b8c\u4e86\uff0c\u8fd8\u662f\u6ca1\u6709\u8fbe\u5230\u8981\u6c42\uff0c\u5c31\u8bf4\u660e\u8fd9\u662f\u65e0\u6cd5\u88ab\u6ee1\u8db3\u7684\n\t}\n\treturn tot <= K;\n}\n\nint main()\n{\n\tint T, l, r, mid;\n\tread( T );\n\twhile( T -- )\n\t{\n\t\tread( N ), read( M ), read( K ), read( a );\n\t\tfor( int i = 1 ; i <= N ; i ++ ) head[i] = 0;\n\t\tfor( int i = 1 ; i <= M ; i ++ ) nxt[i] = 0;\n        //\u521d\u59cb\u5316\u4e0d\u8981\u5fd8\u4e86\n\t\tl = 0x3f3f3f3f;\n\t\tfor( int i = 1 ; i <= N ; i ++ ) read( A[i] ), l = MIN( l, A[i] );\n\t\tfor( int i = 1 ; i <= M ; i ++ ) read( ran[i].l ), read( ran[i].r ), add( ran[i].l, i );\n\t\tr = l + K * a;\n\t\twhile( r - l > 1 )\n\t\t{\n\t\t\tmid = ( l + r ) >> 1;\n\t\t\tif( chk( mid ) ) l = mid;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tif( chk( r ) ) write( r );\n\t\telse write( l );\n\t\tputchar( '\\n' );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1568178009,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[LG P4064][JXOI2017]\u52a0\u6cd5"
    },
    {
        "content": "~~\u6bd4\u8f83\u7b80\u5355\u7684~~\u4e00\u9053\u7efc\u5408\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u201c\u6700\u5c0f\u503c\u7684\u6700\u5927\u503c\u201d\uff0c\u8bf4\u660e\u6b64\u9898\u9700\u8981\u4f7f\u7528\u4e8c\u5206\u6253\u6cd5\u2014\u2014\u4e5f\u5c31\u662f\u4e8c\u5206\u6700\u5c0f\u503c\uff0c\u5f97\u51fa\u5176\u6700\u5927\u503c\u3002\n\n\u672c\u9898\u6700\u96be\u7684\u5185\u5bb9\u4e5f\u5c31\u662f $check(x)$ \u7684\u5199\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5c0f\u4e8e $x$ \u7684\u6570\uff0c\u7136\u540e\u4f9d\u6b21\u627e\u5230\u5305\u62ec $i$ \u7684\u533a\u95f4\uff0c\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u533a\u95f4\uff0c\u5373\u4e3a\u7b2c $i$ \u4e2a\u6570\u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u53ef\u80fd\u8fbe\u5230\u6700\u5c0f\u503c\uff0c\u6240\u4ee5 $x$ \u4e3a\u6700\u5c0f\u503c\u662f\u4e0d\u6210\u7acb\u7684\u3002\u7136\u540e\u6211\u4eec\u4e0d\u65ad\u5730\u4f7f\u7528\u533a\u95f4\u589e\u52a0\u7b2c $i$ \u4e2a\u6570\u7684\u503c\uff0c\u5982\u679c\u52a0\u5b8c\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u4e2a\u6570\u8fd8\u662f\u6ca1\u6709 $x$ \u7684\u503c\u5927\uff0c\u8bf4\u660e\u4e5f\u662f\u4e0d\u53ef\u4ee5\u7684\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a\u5bb9\u6613\u5ffd\u7565\u7684\u9519\u8bef\u6761\u4ef6\uff1a\u5982\u679c\u4f7f\u7528\u533a\u95f4\u7684\u6570\u91cf\u8d85\u8fc7\u4e86 $k$\uff0c\u5e76\u4e14\u8fd8\u5fc5\u987b\u4f7f\u7528\u4e00\u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\u5c31\u8fdd\u80cc\u4e86\u9898\u76ee\u7684\u8981\u6c42\uff0c\u662f\u4e0d\u884c\u7684\u3002\n\n\u6700\u540e\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\uff0c\u65e2\u53ef\u4ee5\u6c42\u5230\u6bcf\u4e00\u4e2a\u6570\u7684\u503c\uff0c\u8fd8\u65b9\u4fbf\u4e86\u6211\u4eec\u4f7f\u7528\u533a\u95f4\uff0c\u4fee\u6539\u533a\u95f4\u7684\u64cd\u4f5c\u3002\n\n\u4e3a\u4e86\u4f18\u5316\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u4fee\u6539 $[l,r]$ \u7684\u65f6\u5019\u5c06 $[l,n]$ \u7684\u533a\u95f4\u53d8\u6210 $[i,n]$\uff0c\u56e0\u4e3a $i$ \u4ee5\u524d\u7684\u503c\u90fd\u4e0d\u4f1a\u518d\u4f7f\u7528\u4e86\uff0c\u5982\u679c\u8fd8\u8981\u5c06 $[l,i)$ \u7684\u503c\u8fdb\u884c\u4fee\u6539\uff0c\u663e\u7136\u53ea\u6709\u4e9b\u7d2f\u8d58\u7684\uff0c\u5728\u5361\u65f6\u95f4\u7684\u60c5\u51b5\u4e0b\u8fd9\u6837\u505a\u80af\u5b9a\u6709\u8d85\u65f6\u7684\u98ce\u9669\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=2e5+5;\nint n,m,k,s;\nint a[MAXN],c[MAXN];\nstruct node\n{\n\tint l,r;\n\tbool operator<(const node x)const\n\t{\n\t\treturn r<x.r;\n\t}\n}List[MAXN];\nbool cmp(node x,node y){return x.l<y.l;}\nint lowbit(int x)\n{\n\treturn x & -x;\n}\npriority_queue<node> que;\nvoid add(int x,int k)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))\tc[i]+=k;\t\n}\nint ask(int x)\n{\n\tint ans=0;\n\tfor(int i=x;i>=1;i-=lowbit(i))\tans+=c[i];\n\treturn ans;\n}\nbool check(int x)\n{\n\twhile(!que.empty())\tque.pop();\n\tmemset(c,0,sizeof(c));\n\tfor(int i=1;i<=n;i++)\tadd(i,a[i]-a[i-1]);\n\tint si=1,kum=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(si<=m&&List[si].l<=i)\tque.push(List[si++]);\n\t\twhile(ask(i)<x&&!que.empty())\n\t\t{\n\t\t\tnode t=que.top();\n\t\t\tque.pop();\n\t\t\twhile(t.r<i&&!que.empty())\n\t\t\t{\n\t\t\t\tt=que.top();\n\t\t\t\tque.pop();\n\t\t\t}\n\t\t\tkum++; \n\t\t\tif(t.r<i||kum>k)\treturn false;\n\t\t\tadd(i,s);\n\t\t\tadd(t.r+1,-s);\n\t\t}\n\t\tif(ask(i)<x)\treturn false;\n\t}\n\treturn true;\n}\nlong long ans;\nint main()\n{\n\tint T;\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tscanf(\"%d%d%d%d\",&n,&m,&k,&s);\n\t\tint l=INT_MAX,r=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tl=min(l,a[i]);\n\t\t\tr=max(r,a[i]);\n\t\t}\n\t\tfor(int i=1;i<=m;i++)\tscanf(\"%d%d\",&List[i].l,&List[i].r);\n\t\tsort(List+1,List+m+1,cmp);\n\t\tr+=k*s;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=(l+r)/2;\n\t\t\tif(check(mid))\tl=mid+1,ans=mid;\n\t\t\telse\tr=mid-1;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1658102479,
        "uid": 439177,
        "name": "Super_Sheep",
        "ccfLevel": 0,
        "title": "P4064\u9898\u89e3"
    },
    {
        "content": "# 0x00 \u601d\u8def\n>\u53ef\u601c\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684**\u6b63\u6574\u6570\u5e8f\u5217** $A$\uff0c\u4f46\u662f\u5979\u89c9\u5f97 $A$ \u4e2d\u7684\u6570\u5b57\u592a\u5c0f\u4e86\uff0c\u8fd9\u8ba9\u5979\u5f88\u4e0d\u5f00\u5fc3\u3002\n\n>\u4e8e\u662f\u5979\u9009\u62e9\u4e86 $m$ \u4e2a\u533a\u95f4 $[l_i, r_i]$ \u548c\u4e24\u4e2a**\u6b63\u6574\u6570** $a, k$\u3002\u5979\u6253\u7b97\u4ece\u8fd9 $m$ \u4e2a\u533a\u95f4\u91cc\u9009\u51fa**\u6070\u597d** $k$ \u4e2a\u533a\u95f4\uff0c\u5e76\u5bf9**\u6bcf\u4e2a\u533a\u95f4\u6267\u884c\u4e00\u6b21**\u533a\u95f4\u52a0 $a$ \u7684\u64cd\u4f5c\u3002\uff08**\u6bcf\u4e2a\u533a\u95f4\u6700\u591a\u53ea\u80fd\u9009\u62e9\u4e00\u6b21\u3002**\uff09\n\n>\u5bf9\u533a\u95f4 $[l, r]$ \u8fdb\u884c\u4e00\u6b21\u52a0 $a$ \u64cd\u4f5c\u53ef\u4ee5\u5b9a\u4e49\u4e3a**\u5bf9\u4e8e\u6240\u6709 $i\\in [l, r]$\uff0c\u5c06 $A_i$ \u53d8\u6210 $A_i + a$** \u3002\u73b0\u5728\u53ef\u601c\u60f3\u8981\u77e5\u9053\u600e\u4e48\u9009\u62e9\u533a\u95f4\u624d\u80fd\u8ba9\u64cd\u4f5c\u540e\u7684\u5e8f\u5217\u7684**\u6700\u5c0f\u503c\u5c3d\u53ef\u80fd\u7684\u5927**\uff0c\u5373\u6700\u5927\u5316 $\\min_{i=1}^{n} {A_i}$\u3002\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u9053\u9898\u6709\u533a\u95f4\u52a0\uff0c\u6709\u67e5\u8be2\uff0c\u6240\u4ee5\u53ef\u4ee5\u60f3\u5230\u7528\u6811\u72b6\u6570\u7ec4\u3002~~\u4e0d\u5e94\u8be5\u662f\u7ebf\u6bb5\u6811\uff1f~~\n\n\u63a5\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\uff1a\n>\u8ba9\u64cd\u4f5c\u540e\u7684\u5e8f\u5217\u7684**\u6700\u5c0f\u503c\u5c3d\u53ef\u80fd\u7684\u5927**\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u60f3\u5230\u4e8c\u5206\uff08\u56e0\u4e3a\u4e8c\u5206\u5c31\u662f\u7528\u6765\u89e3\u51b3\u6700\u5c0f\u503c\u6700\u5927\uff0c\u6700\u5927\u503c\u6700\u5c0f\u7684\uff09\u3002\n# 0x01 \u4f18\u5316\n\u5f53\u7136\uff0c\u867d\u7136\u6211\u4eec\u7528\u4e86\u4e8c\u5206\u628a\u65f6\u95f4\u8fdb\u884c\u4e86\u4e00\u6b21\u4f18\u5316\uff0c\u4f46\u662f\u5bf9\u4e8e $3000ms$ \u6765\u8bf4\uff0c\u8fd8\u662f**\u592a\u6162\u4e86**\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\u3002\u90a3\u4e48\u5c31\u9700\u8981\u6211\u4eec\u5148\u7406\u89e3\u8fd9\u4e2a\u601d\u8def\u5230\u5e95\u8981\u6211\u4eec\u505a\u4ec0\u4e48\u3002\u6211\u4eec\u4e8c\u5206\u7684\u80af\u5b9a\u662f\u7b54\u6848\uff0c\u5373\u6700\u5c0f\u503c\u7684\u6700\u5927\u503c\u4e3a\u591a\u5c11\u3002\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u8f83\u5927\u7684\u533a\u95f4\u53bb\u4e00\u6b21\u5bfb\u627e\u4e2d\u95f4\u503c\uff0c\u770b\u5728\u6ee1\u8db3\u4f7f\u7528 $k$ \u4e2a\u533a\u95f4\u53ca\u4ee5\u5185\u8fd9\u4e2a\u6761\u4ef6\u7684\u65f6\u5019\u80fd\u5426\u6ee1\u8db3\u6b64\u7b54\u6848\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\uff1a\u6211\u5230\u5e95\u8be5\u600e\u4e48\u9009\u62e9\u8fd9 $k$ \u4e2a\u533a\u95f4\u624d\u80fd\u4f7f\u5f97\u9009\u62e9\u65b9\u6848\u6700\u4f18\uff1f\n\n\u4e0d\u597d\u786e\u5b9a\u5bf9\u4e0d\u5bf9\uff1f\n\n\u65e2\u7136\u6211\u4eec\u6ca1\u6cd5\u5f88\u5bb9\u6613\u7684\u5f97\u51fa\u6700\u4f18\u65b9\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u8d2a\u5fc3\u6765\u60f3\u4e00\u60f3\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u4e2a\u5143\u7d20\u4e00\u4e2a\u5143\u7d20\u7684\u53bb\u89e3\u51b3\uff08\u4f7f\u5f97\u5f53\u524d\u5143\u7d20\u6ee1\u8db3\u7b54\u6848\u6216\u8005\u65e0\u6cd5\u6ee1\u8db3\uff09\uff0c\u8fd9\u6837\u518d\u53bb\u601d\u8003\u600e\u4e48\u9009\u62e9\u533a\u95f4\u6700\u4f18\u4e0d\u5c31\u5bb9\u6613\u4e86\u5417\uff1f\n\n\u7531\u4e8e\u6211\u4eec\u662f**\u4e00\u4e2a\u4e00\u4e2a**\u5143\u7d20\u601d\u8003\u7684\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u5143\u7d20**\u5de6\u8fb9\u7684\u5143\u7d20**\u4e00\u5b9a\u90fd\u7b26\u5408\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u4e3a\u4e86\u4f7f\u5f97\u7528\u533a\u95f4\u4e2a\u6570\u5c3d\u53ef\u80fd\u5c11\uff0c\u4e00\u5b9a\u4f1a\u7531\u4e8e\u8d2a\u5fc3\u601d\u60f3\u800c\u9009\u62e9\u533a\u95f4**\u7aef\u70b9\u6700\u9760\u53f3**\u4e14**\u672a\u88ab\u7528\u8fc7\u7684**\uff0c\u4ee5\u5c3d\u53ef\u80fd\u51cf\u5c11\u4f7f\u7528\u533a\u95f4\u7684\u4e2a\u6570\u3002\u82e5\u6211\u4eec\u4ecd\u7136\u65e0\u6cd5\u6ee1\u8db3\u4e8c\u5206\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u505a\u4e0d\u5230\u8fd9\u4e2a\u503c\u4e86\u3002\n\n\u5f53\u7136\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4f18\u5148\u961f\u5217\u518d\u6b21\u4f18\u5316\u65f6\u95f4\u3002\n\n# code\n```c\n#include<bits/stdc++.h>\n#define lowbit(x) (x&(-x))\nusing namespace std;\nconst int N=2e5+5;\nint n,q,k,a;\nlong long tree[N],m[N],dif[N],sum[N];\nbool book[N];\ntypedef struct Questions//\u5b58\u533a\u95f4\n{\n\tint l,r;\n\tfriend bool operator<(const Questions& a,const Questions& b)\n\t{\n\t\treturn a.r<b.r;\n\t}\n}ADD;\nADD sec[N];\nbool cmp(ADD a,ADD b)\n{\n\treturn a.l==b.l?a.r>b.r:a.l<b.l;\n}\n//\u6811\u72b6\u6570\u7ec4\u5e38\u89c4\u64cd\u4f5c\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\nvoid add(int i,long long val,int n)\n{\n\twhile(i<=n)\n\t{\n\t\ttree[i]+=val;\n\t\ti+=lowbit(i);\n\t}\n}\nlong long ques(int r)\n{\n\tif(r==0)\n\t\treturn 0;\n\treturn tree[r]+ques(r-lowbit(r));\n}\nbool check(int x)\n{\n\tpriority_queue<ADD>Q;//\u7528\u4f18\u5148\u961f\u5217\u76f4\u63a5\u67e5\u627e\u53f3\u7aef\u70b9\u6700\u9760\u53f3\u7684\uff0c\u8282\u7701\u65f6\u95f4\n\tint i,j,num=0;\n\tmemset(book,0,sizeof(book));\n\tfor(i=1;i<=n;i++)\n\t\ttree[i]=sum[i]-sum[i-lowbit(i)];\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(ques(i)>=x)\n\t\t\tcontinue;\n\t\tfor(j=1;j<=q&&sec[j].l<=i;j++)\n\t\t\tif(sec[j].r>=i&&!book[j])//\u6bcf\u4e2a\u533a\u95f4\u53ea\u80fd\u7528\u4e00\u6b21\n\t\t\t\tQ.push(sec[j]),book[j]=1;\n\t\twhile(ques(i)<x&&!Q.empty()&&num<=k)\n\t\t{\n\t\t\tadd(Q.top().l,a,n);\n\t\t\tadd(Q.top().r+1,-a,n);\n\t\t\tnum++;\n\t\t\tQ.pop();\n\t\t}\n\t\tif(ques(i)<x||num>k)\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\nint ef(int l,int r)//\u4e8c\u5206\n{\n\tif(l==r)\n\t\treturn l;\n\tif(l==r-1)\n\t{\n\t\tif(check(r))\n\t\t\treturn r;\n\t\treturn l;\n\t}\n\tint mid=l+r>>1;\n\tif(check(mid))\n\t\treturn ef(mid,r);\n\treturn ef(l,mid-1);\n}\nint main()\n{\n\tint i,j,T,l=0,r=1e9;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%d %d %d %d\",&n,&q,&k,&a); \n\t\tsum[0]=0;\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%lld\",&m[i]);\n\t\t\tdif[i]=m[i]-m[i-1];\n\t\t\tsum[i]=sum[i-1]+dif[i];//\u521d\u59cb\u5316\n\t\t}\n\t\tfor(i=1;i<=q;i++)\n\t\t\tscanf(\"%d %d\",&sec[i].l,&sec[i].r);\n\t\tsort(sec+1,sec+1+q,cmp);\n\t\tprintf(\"%d\\n\",ef(l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1638576775,
        "uid": 465692,
        "name": "Harry_Hedwig",
        "ccfLevel": 6,
        "title": "P4064 [JXOI2017]\u52a0\u6cd5 \u9898\u89e3"
    },
    {
        "content": "# 0x00 \u524d\u8a00\n\n\u6c27\u5316\u9499\uff0c\u8c03\u4e86\u534a\u5929\uff0c\u4e8c\u5206\u5047\u4e86\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u4f18\u5148\u961f\u5217\uff0c\u8d2a\u5fc3\uff0c\u4e8c\u5206\uff0c\u4e00\u79cd\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u548c\u7684\u6570\u636e\u7ed3\u6784\uff08\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4...\uff09\u3002\n\n# 0x01 \u4e8c\u5206\n\n\u9996\u5148\u7b54\u6848\u80af\u5b9a\u662f\u6210\u5355\u8c03\u6027\u7684\uff0c\u5982\u679c\u7b54\u6848\u8d8a\u5927\u663e\u7136\u8d8a\u96be\u51d1\u51fa\u6765\uff0c\u4ece\u800c\u6211\u4eec\u5229\u7528\u4e8c\u5206\u5224\u65ad\u7b54\u6848\u662f\u5426\u53ef\u884c\u5373\u53ef\u3002\n\n# 0x02 \u8d2a\u5fc3\n\n\u8d2a\u5fc3\u601d\u8def\u8fd8\u662f\u9700\u8981\u4e00\u70b9\u609f\u6027\uff0c\u56e0\u4e3a\u5176\u4e2d\u6d89\u53ca\u5230\u7684\u8d2a\u5fc3\u6bd4\u8f83\u591a\uff0c\u4f46\u4e5f\u6bd4\u8f83\u7ec6\u81f4\u3002\n\n\u4e0b\u9762\u4e00\u4e00\u6765\u5206\u6790\u5206\u6790\u3002\n\n\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u9700\u8981\u5224\u65ad\u7684\u503c\u662f $x$\u3002\n\n\u6211\u4eec\u53bb\u679a\u4e3e\u70b9\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u3002\uff08\u6b63\u5e38\u4eba\u4f1a\u8fd9\u4e48\u60f3\uff09\n\n\u6211\u4eec\u5728\u9009\u62e9\u533a\u95f4\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u5927\u4e8e\u4e86 $x$ \u7684 $a_i$\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u52a0\u533a\u95f4\uff0c\u76f4\u63a5\u8df3\u8fc7\u3002\n\n\u5f53 $a_i<x$ \u65f6\uff0c\u9700\u8981\u7528\u533a\u95f4\u53bb\u8986\u76d6\u3002\n\n\u56e0\u4e3a\u5728\u5904\u7406\u7b2c $i$ \u4e2a\u70b9\u65f6\uff0c\u524d $i-1$ \u4e2a\u70b9\u5fc5\u7136\u5df2\u7ecf\u5904\u7406\u8fc7\u4e86\uff0c\u6240\u4ee5\u9009\u62e9\u533a\u95f4\u7684 $l\\le i$ \u5c31\u597d\u4e86\u3002\n\n$r$ \u80af\u5b9a\u662f\u8d8a\u5927\u8d8a\u597d\uff0c\u56e0\u4e3a\u8d2a\u5fc3\u7684\u60f3\uff0c\u9009\u62e9\u7684\u533a\u95f4\u6709\u9650\uff0c\u8986\u76d6\u7684\u8d8a\u8fdc\u540e\u9762\u80af\u5b9a\u52a0\u7684\u8d8a\u591a\uff0c\u6240\u4ee5 $l$ \u5408\u7406\u7684\u60c5\u51b5\u4e0b $r$ \u8d8a\u5927\u8d8a\u597d\u3002\n\n\n\u5173\u4e8e $l$ \u6211\u4eec\u53ef\u4ee5\u5728\u6392\u5e8f\u65f6\u9884\u5904\u7406\u51fa\u6765\uff0c\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n\u5bf9\u4e8e $r$\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4f18\u5148\u961f\u5217\u5904\u7406\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u533a\u95f4\u52a0\u7684\u548c\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u5904\u7406\u5373\u53ef\uff08\u7ebf\u6bb5\u6811\u7a0d\u7a0d\u9ebb\u70e6\u4e00\u4e9b\uff0c\u4e14\u5e38\u6570\u5927\uff0c\u521d\u59cb\u5316\u590d\u6742\uff0c\u8fd9\u91cc\u7528\u7684\u662f\u6811\u72b6\u6570\u7ec4\uff09\u3002\n\n\u6700\u540e\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u52a0\u5b8c\u4e86\u6240\u6709\u533a\u95f4\u4ecd\u7136\u4e0d\u6ee1\u8db3\u6761\u4ef6\u6216\u8005\u6ca1\u6709\u53ef\u884c\u533a\u95f4\u9009\u62e9\u5219\u7b54\u6848\u4e0d\u884c\u3002\n\n# 0x03 \u590d\u6742\u5ea6\n\n\u4e8c\u5206\uff1a$\\log n$\n\n\u4e8c\u5206\u5224\u65ad\u51fd\u6570\uff1a\n\n* \u904d\u5386\u6bcf\u4e00\u4e2a\u70b9\uff1a$O(n)$\n\n* \u4f18\u5148\u961f\u5217\u548c\u6811\u72b6\u6570\u7ec4\uff1a$O(\\log n)$\n\n\u6240\u4ee5\u590d\u6742\u5ea6\u662f $O({n\\log^3 n})$\n\n# 0x04 \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f\n#define lowbit(x) x&-x\nusing namespace std;\nconst int N=2e5+5;\nconst int M=2e5+5;\nint n,m,k,p;\nint a[N],tr[N];\nstruct node{\n\tint L,R;\n\tfriend bool operator<(node x,node y){\n\t\treturn x.R<y.R;\n\t}\n}s[M];\nbool cmp(node x,node y){\n\treturn x.L==y.L?x.R>y.R:x.L<y.L;\n}\nvoid add(int x,int v){\n\tfor(;x<=n;x+=lowbit(x)) tr[x]+=v;\n}\nint ask(int x){\n\tint res=0;\n\tfor(;x;x-=lowbit(x)) res+=tr[x];\n\treturn res;\n}\nbool check(int P){\n\tmemset(tr,0,sizeof(tr));\n\tpriority_queue<node>q;\n\tint dq=1,u=0;\n\tfor(int i=1;i<=n;i++) add(i,a[i]-a[i-1]);\n\tfor(int i=1;i<=n;i++){\n\t\twhile(dq<=m && s[dq].L<=i){\n\t\t\tif(s[dq].R>=i) q.push((node){s[dq].L,s[dq].R});\n\t\t\tdq++;\n\t\t}\n\t\twhile(ask(i)<P){\n\t\t\tif(q.empty()) return 0;\n\t\t\tif(u==k) return 0;\n\t\t\tif(q.top().L<=i && q.top().R>=i){\n\t\t\t\tu++;\n\t\t\t\tadd(q.top().L,p);\n\t\t\t\tadd(q.top().R+1,-p);\t\n\t\t\t}\n\t\t\tq.pop();\n\t\t}\n\t}\n\treturn 1;\n}\nint f(int L,int R){\n\tif(L==R) return L;\n\tif(L+1==R){\n\t\tif(check(R)) return R;\n\t\treturn L;\n\t}\n\tint mid=(L+R)/2;\n\tif(check(mid)) return f(mid,R);\n\telse return f(L,mid-1);\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d %d %d %d\",&n,&m,&k,&p);\n\t\tint amin=inf;\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),amin=min(amin,a[i]);\n\t\tfor(int i=1;i<=m;i++) scanf(\"%d %d\",&s[i].L,&s[i].R);\n\t\tsort(s+1,s+1+m,cmp);\n\t\tprintf(\"%d\\n\",f(0,1e8));\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1638252472,
        "uid": 364122,
        "name": "BigJoker",
        "ccfLevel": 6,
        "title": "P4064 [JXOI2017]\u52a0\u6cd5-\u9898\u89e3\u62a5\u544a\u9898\u89e3"
    }
]