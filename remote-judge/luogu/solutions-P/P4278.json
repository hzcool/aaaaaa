[
    {
        "content": "#### \u8fd9\u9898\u771f\u6bd2\uff0cBZOJ\u8fc7\u4e86\uff0cLuogu\u6ca1\u8fc7\uff08\u8bf7\u6c42\u589e\u957f\u65f6\u9650QwQ\uff09  \n\n\u9898\u610f\uff08\u4e09\u79cd\u64cd\u4f5c\uff09\uff1a  \n - \u63d2\u5165\u4e00\u4e2a\u6570\u5230\u6570\u5217\u4e2d  \n - \u4fee\u6539\u6570\u5217\u4e2d\u4e00\u4e2a\u6570\u7684\u503c  \n - \u8be2\u95ee\u533a\u95f4\u7b2c$k$\u5c0f  \n\n**\u5f3a\u5236\u5728\u7ebf\u3002**  \n\n\u7136\u540e\u53ef\u601c\u7684\u6211\u53ea\u4f1a $O(n \\log^3 n)$ \u7684\u505a\u6cd5QAQ\u2026\u2026  \n\u8fd9\u9053\u9898\u53ef\u4ee5**\u6811\u5957\u6811**\uff0c\u7531\u4e8e\u9700\u8981\u52a8\u6001\u63d2\u70b9\uff0c\u6240\u4ee5**\u5916\u5c42\u6811**\u662f**\u5e73\u8861\u6811**\uff1b\u7531\u4e8e\u9700\u8981\u8be2\u95ee\u533a\u95f4$k$\u5c0f\u503c\uff0c\u6240\u4ee5**\u5185\u5c42\u6811**\u53ef\u4ee5\u662f**\u6743\u503c\u7ebf\u6bb5\u6811**\uff08\u4e0d\u5acc\u70e6\u53ef\u4ee5\u5199\u5e73\u8861\u6811\uff09\uff0c\u7ef4\u62a4\u5916\u5c42\u6811\u6240\u5728\u5b50\u6811\u7684\u6743\u503c\u4fe1\u606f\uff0c\u663e\u7136\u5982\u679c\u5916\u5c42\u6811\u9700\u8981\u65cb\u8f6c\u64cd\u4f5c\uff0c\u7ef4\u62a4\u5185\u5c42\u6811\u5c06\u76f8\u5f53\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u5efa\u8bae\u5916\u5c42\u6811\u5199**\u66ff\u7f6a\u7f8a\u6811**\u3002  \n\u5bf9\u4e8e\u63d2\u5165\u548c\u4fee\u6539\u64cd\u4f5c\uff0c\u53ef\u4ee5\u6839\u636e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u505a\u6cd5\u8fdb\u884c\uff0c\u540c\u65f6\u5b50\u6811\u4e0d\u5e73\u8861\u65f6\u66b4\u529b\u91cd\u6784\u3002  \n\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u7528\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\u533a\u95f4\u7684\u65b9\u6cd5\u7528vector\u5b58\u50a8\u9700\u8981\u8bbf\u95ee\u7684\u533a\u95f4\uff0c\u663e\u7136\u6700\u591a\u6709$\\log n$\u4e2a\u533a\u95f4\uff0c\u518d\u4e8c\u5206\u7b54\u6848\u8ba1\u7b97\uff08\u7c7b\u4f3c\u4e3b\u5e2d\u6811\u7684\u67e5\u8be2\u64cd\u4f5c\uff09\u3002  \n\u76ee\u524d\u65f6\u95f4\u7684\u74f6\u9888\u5728\u4e8e\u91cd\u6784\u90e8\u5206\u66b4\u529b\u70b9\u6743\u63d2\u5165\u7ebf\u6bb5\u6811\u9700\u8981$O(n \\log^3 n)$\uff0c\u4f7f\u5f97Luogu\u4e0a$TLE$\uff0cBZOJ\u4e0a$AC$\u3002  \n\u7136\u540e\u662f\u4ee3\u7801\uff08$TLE$\uff09\uff1a  \n```cpp\n#include<bits/stdc++.h>\n#define ratio 4\nusing namespace std;\ninline int read() {\n\tregister int tmp=0;register char c=getchar(); while(c<'0'||c>'9')\tc=getchar();\n\twhile(c>='0'&&c<='9')\ttmp=(tmp<<1)+(tmp<<3)+(c^48),c=getchar(); return tmp;\n}\ninline void print(int x) { if(x>9)\tprint(x/10); putchar(x%10+'0'); }\n\nconst int N=70010;\nint n,m,a[N],ans;\nvector <int> q,ttt;\nint root;\nint Tot=0;\nstruct ST {\n\tint l,r,s;\n\tST(int L,int R,int S):l(L),r(R),s(S) {}\n\tST() {}\n};ST tr[20000010]; int Sta[20000010],Top=0;\nint tot=0;\nstruct P {\n\tint l,r,val,rt,sz;\n\tP(int L,int R,int V,int Rt,int S):l(L),r(R),val(V),rt(Rt),sz(S) {}\n\tP() {}\n};P t[N];\nint sta[N],top=0;\n//sgt_...\uff1a\u66ff\u7f6a\u7f8a\u6811\u6240\u5c5e\u51fd\u6570\n//st_...\uff1a\u6743\u503c\u7ebf\u6bb5\u6811\u6240\u5c5e\u51fd\u6570\n\ninline int Min(const int x,const int y) { return x<y?\tx:y; }\ninline int Max(const int x,const int y) { return x>y?\tx:y; }\ninline int st_node() {\n\tif(!Top) return ++Tot; --Top; return Sta[Top+1];\n}\nvoid clean(int &u) {\n\tif(tr[u].l)\tclean(tr[u].l); if(tr[u].r)\tclean(tr[u].r);\n\tSta[++Top]=u,tr[u]=ST(0,0,0),u=0;\n}\nvoid st_insert(int &u,int l,int r,int x,int w) {\n\tif(!u)\tu=st_node(); tr[u].s+=w;\n\tif(l>=r) { if(!tr[u].s)\tclean(u); return ; }\n\tint mid=(l+r)>>1;\n\tx<=mid?\tst_insert(tr[u].l,l,mid,x,w):\n\t\t\tst_insert(tr[u].r,mid+1,r,x,w);\n\tif(!tr[u].s)\tclean(u);\n}\nvoid debug(int u,int Tab) {\n\tif(t[u].l)\tdebug(t[u].l,Tab+1);\n\tfor(int i=1;i<Tab;i++)\tprintf(\"     |\");\n\tprintf(\" %d\\n\",t[u].val);\n\tif(t[u].r)\tdebug(t[u].r,Tab+1);\n}\ninline bool Bad(int u) {\n\treturn (double)t[t[u].l].sz>ratio*(double)t[t[u].r].sz||\n\t       (double)t[t[u].r].sz>ratio*(double)t[t[u].l].sz;\n}\ninline int sgt_node(int l,int r,int v,int sz) {\n\tt[sta[top]]=P(l,r,v,0,sz),--top; return sta[top+1];\n}\nvoid sgt_init(int &u,int l,int r) {\n\tint mid=(l+r)>>1; u=sgt_node(0,0,a[mid],r-l+1);\n\tfor(int i=l;i<=r;i++)\tst_insert(t[u].rt,0,70000,a[i],1);//\u74f6\u9888\n\tif(l<mid)\tsgt_init(t[u].l,l,mid-1);\n\tif(mid<r)\tsgt_init(t[u].r,mid+1,r);\n}\nvoid ask(int u,int l,int r,int L,int R) {//\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u65b9\u6cd5\u9884\u5904\u7406\u51fa\u8981\u8be2\u95ee\u7684\u5757\n\tif(L>R||l>r)\treturn ;\n\tif(l==L&&r==R) { q.push_back(u);return ; }\n\tint mid=t[t[u].l].sz+l;\n\tif(L<=mid&&mid<=R)\tttt.push_back(t[u].val);\n\tif(R<mid)\task(t[u].l,l,mid-1,L,R);\n\telse if(L>mid)\task(t[u].r,mid+1,r,L,R);\n\telse\task(t[u].l,l,mid-1,L,mid-1),ask(t[u].r,mid+1,r,mid+1,R);\n}\nint solve(int l,int r,int k) {\n\task(root,1,t[root].sz,l,r); int L=0,R=70000,mid,sum;\n\tfor(int i=0;i<q.size();i++)\tq[i]=t[q[i]].rt;\n//\tprintf(\"ASK : \");\n//\tfor(int i=0;i<q.size();i++)\tprintf(\" %d\",tr[q[i]].s);printf(\"\\n\");\n//\tfor(int i=0;i<ttt.size();i++)\tprintf(\" 1\",ttt[i]);printf(\"\\n\");\n\twhile(L<R) {\n\t\tmid=(L+R)>>1,sum=0;\n\t\tfor(int i=0;i<q.size();i++)\tsum+=tr[tr[q[i]].l].s;\n\t\tfor(int i=0;i<ttt.size();i++)\tif(ttt[i]<=mid)\t++sum;\n//\t\tprintf(\"MWHAKIOI : %d %d\\n\",mid,sum);\n\t\tif(sum>=k) {\n\t\t\tR=mid; for(int i=0;i<q.size();i++)\tq[i]=tr[q[i]].l;\n\t\t}\n\t\telse {\n\t\t\tk-=sum,L=mid+1;\n\t\t\tfor(int i=0;i<q.size();i++)\tq[i]=tr[q[i]].r;\n\t\t\tfor(int i=0;i<ttt.size();i++)\n\t\t\t\tif(ttt[i]<=mid)\tttt[i]=70010;\n\t\t}\n\t}\n\tq.clear(),ttt.clear(); return R;\n}\nint sgt_find(int u,int k) {\n\tif(t[t[u].l].sz+1==k)\treturn t[u].val;\n\tif(k<=t[t[u].l].sz)\treturn sgt_find(t[u].l,k);\n\treturn sgt_find(t[u].r,k-t[t[u].l].sz-1);\n}\nvoid sgt_mdy(int u,int k,int Old,int New) {\n\tst_insert(t[u].rt,0,70000,Old,-1),\n\tst_insert(t[u].rt,0,70000,New,1);\n\tif(t[t[u].l].sz+1==k) { t[u].val=New;return ; }\n\tk<=t[t[u].l].sz?\tsgt_mdy(t[u].l,k,Old,New):\n\tsgt_mdy(t[u].r,k-t[t[u].l].sz-1,Old,New);\n}\nvoid dfs(int &u) {\n\tif(t[u].l)\tdfs(t[u].l);\n\ta[++n]=t[u].val,clean(t[u].rt),sta[++top]=u;\n\tif(t[u].r)\tdfs(t[u].r);\n\tu=0;\n}\nvoid rebuild(int &u) { n=0,dfs(u),sgt_init(u,1,n); }\nvoid sgt_insert(int &u,int x,int w) {\n\tif(!u) {\n\t\tu=sgt_node(0,0,w,1),st_insert(t[u].rt,0,70000,w,1);\n\t\treturn ;\n\t}\n\tst_insert(t[u].rt,0,70000,w,1),++t[u].sz;\n\tif(x<=t[t[u].l].sz)\tsgt_insert(t[u].l,x,w);\n\telse\tsgt_insert(t[u].r,x-t[t[u].l].sz-1,w);\n\tif(!Bad(u)) {\n\t\tif(Bad(t[u].l))\trebuild(t[u].l);\n\t\tif(Bad(t[u].r))\trebuild(t[u].r);\n\t}\n}\nint main() {\n\tn=read();\n\tfor(register int i=1;i<=n;++i)\ta[i]=read(); m=read();\n\tfor(register int i=1;i<N;++i)\tsta[++top]=i;\n\tsgt_init(root,1,n);\n//\tprintf(\"Array : \\n\"),debug(root,1),printf(\"\\n\");\n\tfor(;m;--m) {\n\t\tregister char opt=getchar();\n\t\twhile(opt<'A'||opt>'Z')\topt=getchar();\n\t\tif(opt=='Q') {\n\t\t\tregister int l=read()^ans,r=read()^ans,k=read()^ans;\n\t\t\tans=solve(l,r,k),print(ans),putchar(10);\n\t\t}\n\t\telse if(opt=='M') {\n\t\t\tregister int x=read()^ans,y=read()^ans,z;\n\t\t\tz=sgt_find(root,x),sgt_mdy(root,x,z,y);\n\t\t}\n\t\telse {\n\t\t\tregister int x=read()^ans,y=read()^ans;\n\t\t\tsgt_insert(root,x-1,y); if(Bad(root))\trebuild(root);\n\t\t}\n//\t\tprintf(\"Array : \\n\"),debug(root,1),printf(\"\\n\");\n\t}\n\treturn 0;\n}\n```  \n\u76ee\u524d\u60f3\u5230\u7684\u89e3\u51b3\u65b9\u5f0f\uff1a  \n - \u7ebf\u6bb5\u6811\u5408\u5e76  \n - leafy tree \u5b9e\u73b0\u91cd\u91cf\u5e73\u8861\u6811\uff08\u7ebf\u6bb5\u6811\u5408\u5e76\uff09 \n\n\u6211\u4eec\u77e5\u9053\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\log n)$ \u52a0\u4e0a\u91cd\u6784\u7684\u65f6\u95f4\u540e\u4e3a $O(n \\log^2 n)$ \uff0c\u7406\u8bba\u53ef\u8fc7\u3002\u4f46\u5b9e\u9645\u4e0a\u5728Luogu\u4f9d\u65e7\u88ab\u5361\uff081.2 s\uff09\u3002\n\n\u88ab\u5361\u7684\u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\n#define ratio 3\nusing namespace std;\ninline int read() {\n\tregister int tmp=0;register char c=getchar();\n\twhile(c<'0'||c>'9')\tc=getchar();\n\twhile(c>='0'&&c<='9')\ttmp=(tmp<<1)+(tmp<<3)+(c^48),c=getchar();\n\treturn tmp;\n}\ninline void print(int x) { if(x>9)\tprint(x/10); putchar(x%10+'0'); }\n\nconst int N=70010;\nint n,m,a[N],ans;\nvector <int> q,ttt;\nint root;\nint Tot=0;\nstruct ST {\n\tint l,r,s;\n\tST(int L,int R,int S):l(L),r(R),s(S) {}\n\tST() {}\n};ST tr[20000010]; int Sta[20000010],Top=0;\nint tot=0;\nstruct P {\n\tint l,r,val,rt,sz;\n\tP(int L,int R,int V,int Rt,int S):l(L),r(R),val(V),rt(Rt),sz(S) {}\n\tP() {}\n};P t[N];\nint sta[N],top=0;\n//sgt_...\uff1a\u66ff\u7f6a\u7f8a\u6811\u6240\u5c5e\u51fd\u6570\n//st_...\uff1a\u6743\u503c\u7ebf\u6bb5\u6811\u6240\u5c5e\u51fd\u6570\n\ninline int Min(const int &x,const int &y) { return x<y?\tx:y; }\ninline int Max(const int &x,const int &y) { return x>y?\tx:y; }\ninline int st_node() {\n\tif(!Top) return ++Tot; --Top; return Sta[Top+1];\n}\nvoid clean(int &u) {\n\tif(tr[u].l)\tclean(tr[u].l); if(tr[u].r)\tclean(tr[u].r);\n\tSta[++Top]=u,tr[u]=ST(0,0,0),u=0;\n}\nvoid st_insert(int &u,int l,int r,int x,int w) {\n\tif(!u)\tu=st_node(); tr[u].s+=w;\n\tif(l>=r) { if(!tr[u].s)\tclean(u); return ; }\n\tint mid=(l+r)>>1;\n\tx<=mid?\tst_insert(tr[u].l,l,mid,x,w):\n\t\t\tst_insert(tr[u].r,mid+1,r,x,w);\n\tif(!tr[u].s)\tclean(u);\n}\nvoid debug(int u,int Tab) {\n\tif(t[u].l)\tdebug(t[u].l,Tab+1);\n\tfor(int i=1;i<Tab;i++)\tprintf(\"     |\");\n\tprintf(\" %d\\n\",t[u].val);\n\tif(t[u].r)\tdebug(t[u].r,Tab+1);\n}\ninline bool Bad(int u) {\n\treturn (double)t[t[u].l].sz>ratio*(double)t[t[u].r].sz||\n\t       (double)t[t[u].r].sz>ratio*(double)t[t[u].l].sz;\n}\ninline int sgt_node(int l,int r,int v,int sz) {\n\tt[sta[top]]=P(l,r,v,0,sz),--top; return sta[top+1];\n}\nvoid Merge(int &u,int l,int r,int L,int R) {//\u7ebf\u6bb5\u6811\u5408\u5e76\n\tif(!l&&!r)\treturn ;\n\tu=st_node(),tr[u].s=tr[l].s+tr[r].s;\n\tif(l==r)\treturn ;\n\tint mid=(L+R)>>1;\n\tMerge(tr[u].l,tr[l].l,tr[r].l,L,mid),\n\tMerge(tr[u].r,tr[l].r,tr[r].r,mid+1,r);\n}\nvoid sgt_init(int &u,int l,int r) {\n\tint mid=(l+r)>>1; u=sgt_node(0,0,a[mid],r-l+1);\n\tif(l<mid)\tsgt_init(t[u].l,l,mid-1);\n\tif(mid<r)\tsgt_init(t[u].r,mid+1,r);\n\tMerge(t[u].rt,t[t[u].l].rt,t[t[u].r].rt,0,70000);//\u7ebf\u6bb5\u6811\u5408\u5e76\n\tst_insert(t[u].rt,0,70000,a[mid],1);\n}\nvoid ask(int u,int l,int r,int L,int R) {//\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u65b9\u6cd5\u9884\u5904\u7406\u51fa\u8981\u8be2\u95ee\u7684\u5757\n\tif(L>R||l>r)\treturn ;\n\tif(l==L&&r==R) { q.push_back(u);return ; }\n\tint mid=t[t[u].l].sz+l;\n\tif(L<=mid&&mid<=R)\tttt.push_back(t[u].val);\n\tif(R<mid)\task(t[u].l,l,mid-1,L,R);\n\telse if(L>mid)\task(t[u].r,mid+1,r,L,R);\n\telse\task(t[u].l,l,mid-1,L,mid-1),ask(t[u].r,mid+1,r,mid+1,R);\n}\nint solve(int l,int r,int k) {\n\task(root,1,t[root].sz,l,r); int L=0,R=70000,mid,sum;\n\tfor(int i=0;i<q.size();i++)\tq[i]=t[q[i]].rt;\n//\tprintf(\"ASK : \");\n//\tfor(int i=0;i<q.size();i++)\tprintf(\" %d\",tr[q[i]].s);printf(\"\\n\");\n//\tfor(int i=0;i<ttt.size();i++)\tprintf(\" 1\",ttt[i]);printf(\"\\n\");\n\twhile(L<R) {\n\t\tmid=(L+R)>>1,sum=0;\n\t\tfor(int i=0;i<q.size();i++)\tsum+=tr[tr[q[i]].l].s;\n\t\tfor(int i=0;i<ttt.size();i++)\tif(ttt[i]<=mid)\t++sum;\n//\t\tprintf(\"MWHAKIOI : %d %d\\n\",mid,sum);\n\t\tif(sum>=k) {\n\t\t\tR=mid; for(int i=0;i<q.size();i++)\tq[i]=tr[q[i]].l;\n\t\t}\n\t\telse {\n\t\t\tk-=sum,L=mid+1;\n\t\t\tfor(int i=0;i<q.size();i++)\tq[i]=tr[q[i]].r;\n\t\t\tfor(int i=0;i<ttt.size();i++)\n\t\t\t\tif(ttt[i]<=mid)\tttt[i]=70010;\n\t\t}\n\t}\n\tq.clear(),ttt.clear(); return R;\n}\nint sgt_find(int u,int k) {\n\tif(t[t[u].l].sz+1==k)\treturn t[u].val;\n\tif(k<=t[t[u].l].sz)\treturn sgt_find(t[u].l,k);\n\treturn sgt_find(t[u].r,k-t[t[u].l].sz-1);\n}\nvoid sgt_mdy(int u,int k,int Old,int New) {\n\tst_insert(t[u].rt,0,70000,Old,-1),\n\tst_insert(t[u].rt,0,70000,New,1);\n\tif(t[t[u].l].sz+1==k) { t[u].val=New;return ; }\n\tk<=t[t[u].l].sz?\tsgt_mdy(t[u].l,k,Old,New):\n\tsgt_mdy(t[u].r,k-t[t[u].l].sz-1,Old,New);\n}\nvoid dfs(int &u) {\n\tif(t[u].l)\tdfs(t[u].l);\n\ta[++n]=t[u].val,clean(t[u].rt),sta[++top]=u;\n\tif(t[u].r)\tdfs(t[u].r);\n\tu=0;\n}\nvoid rebuild(int &u) { n=0,dfs(u),sgt_init(u,1,n); }\nvoid sgt_insert(int &u,int x,int w) {\n\tif(!u) {\n\t\tu=sgt_node(0,0,w,1),st_insert(t[u].rt,0,70000,w,1);\n\t\treturn ;\n\t}\n\tst_insert(t[u].rt,0,70000,w,1),++t[u].sz;\n\tif(x<=t[t[u].l].sz)\tsgt_insert(t[u].l,x,w);\n\telse\tsgt_insert(t[u].r,x-t[t[u].l].sz-1,w);\n\tif(!Bad(u)) {\n\t\tif(Bad(t[u].l))\trebuild(t[u].l);\n\t\tif(Bad(t[u].r))\trebuild(t[u].r);\n\t}\n}\nint main() {\n\tn=read();\n\tfor(register int i=1;i<=n;++i)\ta[i]=read(); m=read();\n\tfor(register int i=1;i<N;++i)\tsta[++top]=i;\n\tsgt_init(root,1,n);\n//\tprintf(\"Array : \\n\"),debug(root,1),printf(\"\\n\");\n\tfor(;m;--m) {\n\t\tregister char opt=getchar();\n\t\twhile(opt<'A'||opt>'Z')\topt=getchar();\n\t\tif(opt=='Q') {\n\t\t\tregister int l=read()^ans,r=read()^ans,k=read()^ans;\n\t\t\tans=solve(l,r,k),print(ans),putchar(10);\n\t\t}\n\t\telse if(opt=='M') {\n\t\t\tregister int x=read()^ans,y=read()^ans,z;\n\t\t\tz=sgt_find(root,x),sgt_mdy(root,x,z,y);\n\t\t}\n\t\telse {\n\t\t\tregister int x=read()^ans,y=read()^ans;\n\t\t\tsgt_insert(root,x-1,y); if(Bad(root))\trebuild(root);\n\t\t}\n//\t\tprintf(\"Array : \\n\"),debug(root,1),printf(\"\\n\");\n\t}\n\treturn 0;\n}\n```  \n\u7136\u540e\u4ec5\u5269\u4e0b\u7684\u601d\u8def\u662f\u5757\u72b6\u94fe\u8868\uff0c\u82e5\u80fd\u505a\u5230$O(n \\sqrt {n})$ \u540c\u6837\u7406\u8bba\u53ef\u8fc7\u3002  \n\u6211\u5c1d\u8bd5\u53bb\u6572\u5757\u72b6\u94fe\u8868\uff0c\u7531\u4e8e\u5e38\u6570\u4f18\u79c0\uff0c\u8dd1\u5f97\u6bd4$O(n \\log^2 n)$\u8fd8\u5feb\uff0cLuogu\u4e0a\u8fc7\u4e8660%\u7684\u6570\u636e\u3002\u542c\u8bf4\u67d0\u4f4d\u5927\u795e\u7528\u5757\u72b6\u94fe\u8868\u5361\u8fdb\u53bb\u4e86\uff0c\u543e\u8f88\u8868\u793a\u65e0\u80fd\u4e3a\u529b\u3002  \n**\u5199\u9898\u6ca1\u6709\u5fc5\u8981\u505a\u5bf9\uff0c\u5199\u9898\u7684\u76ee\u7684\u662f\u953b\u70bc\u601d\u7ef4\u548c\u89e3\u9898\u65b9\u5f0f\uff0c\u7559\u4e0b\u601d\u8003\u7684\u75d5\u8ff9\uff0c\u8fd9\u6837\u5199\u9898\u624d\u6709\u610f\u4e49\u3002**  \n\u6700\u540e\u6211\u5728\u8fd9\u91cc\u7559\u4e0b\u5757\u72b6\u94fe\u8868\u5199\u6cd5\u7684\u4ee3\u7801\u3002  \n```cpp\n#include<bits/stdc++.h>\n#define ONLINE_JUDGE\n#define re register\nusing namespace std;\nconst int N=70000,BLOSIZE=1100,MXBLO=2*N/BLOSIZE;\nint n,m;\n\nstruct P {\n\tint a[3*BLOSIZE+100],b[3*BLOSIZE+100],sz,to;\n\tvoid reset() {\n\t\tfor(re int i=1;i<=sz;++i)\tb[i]=a[i];\n\t\tsort(b+1,b+sz+1);\n\t}\n};P t[MXBLO+100];\nint tot=0;\n\ninline int read() {\n\tre int x=0;re char c=getchar();\n\twhile(c<'0'||c>'9')\tc=getchar();\n\twhile(c>='0'&&c<='9')\tx=(x<<1)+(x<<3)+(c^48),c=getchar();\n\treturn x;\n}\nvoid print(int x) { if(x>9)\tprint(x/10); putchar(x%10+'0'); }\ninline void insert(int x,int w) {//\u63d2\u5165\u4e00\u4e2a\u6570\n\tre int u,tt;\n\tfor(u=0;u!=-1&&x>t[u].sz;u=t[u].to)\tx-=t[u].sz;\n\tfor(re int i=t[u].sz;i>=x;--i)\tt[u].a[i+1]=t[u].a[i];\n\tt[u].a[x]=w,++t[u].sz;\n\tif(t[u].sz>=2*BLOSIZE) {//\u5206\u88c2\u5757\n\t\tint nu=++tot; t[nu].to=t[u].to,t[u].to=nu;\n\t\tt[nu].sz=t[u].sz-BLOSIZE;\n\t\tfor(re int i=BLOSIZE+1;i<=t[u].sz;++i)\n\t\t\tt[nu].a[i-BLOSIZE]=t[nu].b[i-BLOSIZE]=t[u].a[i];\n\t\tfor(re int i=1;i<=BLOSIZE;++i) t[u].b[i]=t[u].a[i];\n\t\tt[u].sz=BLOSIZE;\n\t\tsort(t[nu].b+1,t[nu].b+t[nu].sz+1),\n\t\tsort(t[u].b+1,t[u].b+t[u].sz+1); return ;\n\t}\n\ttt=t[u].sz-1;\n\tfor(;tt;--tt) {\n\t\tif(t[u].b[tt]>w)\tt[u].b[tt+1]=t[u].b[tt];\n\t\telse\tbreak;\n\t}\n\tt[u].b[tt+1]=w;\n}\nvoid modify(int x,int w) {//\u4fee\u6539\u6743\u503c\n\tre int u,tt;\n\tfor(u=0;u!=-1&&x>t[u].sz;u=t[u].to)\tx-=t[u].sz;\n\tfor(re int i=1;i<=t[u].sz;++i)\n\t\tif(t[u].b[i]==t[u].a[x]) {\n\t\t\tfor(re int j=i;j<t[u].sz;++j)\n\t\t\t\tt[u].b[j]=t[u].b[j+1];\n\t\t\tt[u].b[t[u].sz--]=0;break;\n\t\t}\n\tt[u].a[x]=w,tt=t[u].sz;\n\tfor(;tt;--tt) {\n\t\tif(t[u].b[tt]>w) t[u].b[tt+1]=t[u].b[tt];\n\t\telse\tbreak;\n\t}\n\tt[u].b[tt+1]=w,++t[u].sz;\n}\nint query(int x,int y,int w) {//\u8be2\u95ee\u6392\u540d\n\tre int u,v,sum=0,l,r,mid,tt;\n\tfor(u=0;u!=-1&&x>t[u].sz;u=t[u].to)\tx-=t[u].sz;\n\tfor(v=0;v!=-1&&y>t[v].sz;v=t[v].to)\ty-=t[v].sz;\n\tif(u==v) {\n\t\tfor(int i=x;i<=y;i++) if(t[u].a[i]<w) ++sum;\n\t\treturn sum;\n\t}\n\tfor(re int i=x;i<=t[u].sz;++i) if(t[u].a[i]<w) ++sum;\n\tfor(re int i=1;i<=y;++i) if(t[v].a[i]<w) ++sum;\n\tfor(re int i=t[u].to;i!=v;i=t[i].to) {\n\t\tl=1,r=t[i].sz,tt=0;\n\t\twhile(l<=r) {\n\t\t\tmid=(l+r)>>1;\n\t\t\tt[i].b[mid]<w?\t(tt=mid,l=mid+1):r=mid-1;\n\t\t}\n\t\tsum+=tt;\n\t}\n\treturn sum;\n}\nvoid init() {//\u521d\u59cb\u5316\n\tt[0].to=-1,t[0].sz=0,n=read(); int cnt=BLOSIZE,Old=0;\n\tfor(re int i=1;i<=n;++i) {\n\t\tif(cnt==BLOSIZE) {\n\t\t\tint u=++tot;\n\t\t\tt[u].to=t[Old].to,t[Old].to=u,\n\t\t\tsort(t[Old].b+1,t[Old].b+t[Old].sz+1);\n\t\t\tOld=u,cnt=0;\n\t\t}\n\t\tt[Old].a[++t[Old].sz]=read(),\n\t\tt[Old].b[t[Old].sz]=t[Old].a[t[Old].sz],\n\t\t++cnt;\n\t}\n\tif(cnt==BLOSIZE) {\n\t\tint u=++tot;\n\t\tt[u].to=t[Old].to,t[Old].to=u,\n\t\tsort(t[Old].b+1,t[Old].b+t[Old].sz+1);\n\t\tOld=u,cnt=0;\n\t}\n\tt[Old].a[++t[Old].sz]=70000,\n\tt[Old].b[t[Old].sz]=t[Old].a[t[Old].sz],\n\tsort(t[Old].b+1,t[Old].b+t[Old].sz+1);\n\tm=read();\n}\nvoid debug() {\n\tfor(int i=0;i!=-1;i=t[i].to) {\n\t\tprintf(\" ( [%d]\",i);\n\t\tfor(int j=1;j<=t[i].sz;++j)\n\t\t\tprintf(\" %d\",t[i].b[j]);\n\t\tprintf(\" )\");\n\t}\n\tprintf(\"\\n\");\n}\nint main() {\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"Dynamic Kth in range.in\",\"r\",stdin);\n\tfreopen(\"Dynamic Kth in range.out\",\"w\",stdout);\n\tint cur=clock();\n\t#endif\n\tchar c; int x,y,k,ans=0,l,r,mid; init();\n\tfor(;m;--m) {\n\t\tc=getchar(); while(c<'A'||c>'Z')\tc=getchar();\n\t\tswitch(c) {\n\t\t\tcase 'Q':\n\t\t\t\tx=read()^ans,y=read()^ans,k=read()^ans;\n\t\t\t\tl=0,r=70000;\n\t\t\t\twhile(l<=r) {\n\t\t\t\t\tmid=(l+r)>>1;\n\t\t\t\t\tquery(x,y,mid)<k?\n\t\t\t\t\t\t(l=mid+1,ans=mid):r=mid-1;\n\t\t\t\t}\n\t\t\t\tprint(ans),putchar(10);break;\n\t\t\tcase 'I':\n\t\t\t\tx=read()^ans,y=read()^ans,insert(x,y);break;\n\t\t\tdefault:\tx=read()^ans,y=read()^ans,modify(x,y);\n\t\t}\n\t\t#ifndef ONLINE_JUDGE\n\t\tans=0;\n\t\t#endif\n\t}\n\t#ifndef ONLINE_JUDGE\n\tprintf(\">>> %d ms.\",clock()-cur);\n\tfclose(stdin),fclose(stdout);\n\t#endif\n\treturn 0;\n}\n```   \n\u518d\u6b21\u8bf7\u6c42\u7ba1\u7406\u5458\u589e\u957f\u65f6\u9650\uff01",
        "postTime": 1545653867,
        "uid": 41584,
        "name": "daniel14311531",
        "ccfLevel": 7,
        "title": "\u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c - \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u5757\u72b6\u94fe\u8868\u3002\n\n\u4e3a\u4e86\u5c3d\u91cf\u597d\u7406\u89e3\uff0c\u6211\u4f1a\u4e00\u4e2a\u95ee\u9898\u4e00\u4e2a\u95ee\u9898\u6765\u8bb2\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n- \u503c\u57df\u5206\u5757\u3002\n- \u5757\u72b6\u94fe\u8868\u662f\u4ec0\u4e48\uff1f\u662f\u5f88\u591a\u5757\u7528\u94fe\u8868\u7684\u65b9\u5f0f\u8fde\u8d77\u6765\u3002\n\n## \u4e00\u3001\u5982\u4f55\u6c42\u7b2c $k$ \u5c0f\uff1f\n\n\u503c\u57df\u5206\u5757\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u8bb0\u5f55\u4e24\u4e2a\u4e1c\u897f\uff1a\n\n1. \u503c\u4e3a $x$ \u7684\u6570\u7684\u4e2a\u6570\u7684\u524d\u7f00\u548c\u3002\n2. \u503c\u5c5e\u4e8e\u7b2c $k$ \u5757\u7684\u6570\u7684\u4e2a\u6570\u7684\u524d\u7f00\u548c\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nstruct Block {\n\tint l,r,size;\n\tint sk[305];//\u5757\u5185\u6709\u51e0\u4e2a\u5c5e\u4e8e\u8fd9\u4e00\u5757 \u7684\u524d\u7f00\u548c\n\tint s[70005];//\u5757\u5185\u6709\u51e0\u4e2a\u7b49\u4e8ex \u7684\u524d\u7f00\u548c\n\tint a[605];\n\tint& operator [](const int k) {\n\t\treturn a[k];\n\t}\n} b[605];\n```\n\n\u6709\u4e86\u8fd9\u4e9b\u4e1c\u897f\uff0c\u600e\u4e48\u6c42\u533a\u95f4\u7b2c $k$ \u5c0f\uff1f\n\n\u5148\u8981\u627e\u5230 $l,r$ \u5728\u54ea\u4e2a\u5757\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\tint now=L,lbel,rbel;\n\twhile(b[now].size<l)l-=b[now].size,now=b[now].r;\n\tlbel=now,now=L;\n\twhile(b[now].size<r)r-=b[now].size,now=b[now].r;\n\trbel=now;\n```\n\n\u82e5 $l,r$ \u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u53ea\u9700\u626b\u4e00\u904d\uff0c\u5c06\u503c\u4e3a $x$ \u7684\u6570\u7684\u4e2a\u6570\u548c\u503c\u5728\u67d0\u4e00\u5757\u5185\u7684\u6570\u7684\u4e2a\u6570\u7edf\u8ba1\u51fa\u6765\u3002\n\n\u7136\u540e\uff0c\u5148\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5757\uff0c\u8fb9\u505a\u524d\u7f00\u548c\u3002\u627e\u5230\u7b54\u6848\u5728\u54ea\u4e00\u5757\u540e\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u627e\u5230\u7b54\u6848\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u6ce8\u610f\u6e05\u7a7a\u4e34\u65f6\u6570\u7ec4\uff09\uff1a\n\n```cpp\n\tif(lbel==rbel) {\n\t\tfor(int i=l; i<=r; i++)tmps[b[lbel][i]]++,tmpsk[bel[b[lbel][i]]]++;\n\t\tnow=1;\n\t\twhile(tmpsk[now]<k)k-=tmpsk[now],now++;\n\t\tnow=(now-1)*THREEHUNDRED;\n\t\twhile(tmps[now]<k)k-=tmps[now],now++;\n\t\tfor(int i=l; i<=r; i++)tmps[b[lbel][i]]--,tmpsk[bel[b[lbel][i]]]--;\n\t\treturn now;\n\t}\n```\n\n\u82e5 $l,r$ \u4e0d\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u5148\u540c\u6837\u5730\u5c06\u4e24\u8fb9\u96f6\u6563\u7684\u4e2a\u6570\u7edf\u8ba1\u51fa\u6765\u3002\u7136\u540e\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7b54\u6848\u6240\u5728\u7684\u503c\u57df\u5757\uff0c\u7528\u603b\u4e2a\u6570\u524d\u7f00\u548c\u3002\u627e\u5230\u7b54\u6848\u5728\u54ea\u4e00\u5757\u540e\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u540c\u6837\u5730\u505a\u524d\u7f00\u548c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u5b83\u7684\u51fa\u73b0\u6b21\u6570\u7b49\u4e8e\uff1a$s_{r\\text{\u7684\u5de6\u8fb9}}-s_l+\\text{\u4e24\u8fb9\u96f6\u6563\u7684}$\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\tfor(int i=l; i<=b[lbel].size; i++)tmps[b[lbel][i]]++,tmpsk[bel[b[lbel][i]]]++;\n\tfor(int i=1; i<=r; i++)tmps[b[rbel][i]]++,tmpsk[bel[b[rbel][i]]]++;\n\tnow=1;\n\twhile(tmpsk[now]+b[b[rbel].l].sk[now]-b[lbel].sk[now]<k)k-=tmpsk[now]+b[b[rbel].l].sk[now]-b[lbel].sk[now],now++;\n\tnow=(now-1)*THREEHUNDRED;\n\twhile(tmps[now]+b[b[rbel].l].s[now]-b[lbel].s[now]<k)k-=tmps[now]+b[b[rbel].l].s[now]-b[lbel].s[now],now++;\n\tfor(int i=l; i<=b[lbel].size; i++)tmps[b[lbel][i]]--,tmpsk[bel[b[lbel][i]]]--;\n\tfor(int i=1; i<=r; i++)tmps[b[rbel][i]]--,tmpsk[bel[b[rbel][i]]]--;\n\treturn now;\n```\n\n\u4f60\u5df2\u7ecf\u6e21\u8fc7\u4e86\u6700\u96be\u7684\u4e00\u5173\uff0c\u63a5\u4e0b\u6765\u7684\u90fd\u5f88\u7b80\u5355\u4e86\u3002\n\n## \u4e8c\u3001\u5982\u4f55\u4fee\u6539\uff1f\n\n\u9996\u5148\u627e\u5230\u8fd9\u4e2a\u6570\u6240\u5728\u7684\u5757\u3002\u4ece\u8fd9\u4e2a\u5757\u5f80\u540e\u8df3\uff0c\u5c06\u4ed6\u539f\u6765\u7684\u503c\u7684\u7684\u4e2a\u6570\u51cf\u4e00\uff0c\u65b0\u503c\u7684\u4e2a\u6570\u52a0\u4e00\uff0c\u540c\u65f6\u7ef4\u62a4\u503c\u57df\u5206\u5757\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\tint now=L;\n\twhile(b[now].size<x)x-=b[now].size,now=b[now].r;\n\tint before=b[now][x],after=k;\n\tif(before==after)return ;\n\tb[now][x]=after;\n\twhile(now) {\n\t\tb[now].sk[bel[before]]--;\n\t\tb[now].sk[bel[after]]++;\n\t\tb[now].s[before]--;\n\t\tb[now].s[after]++;\n\t\tnow=b[now].r;\n\t}\n```\n\n## \u4e09\u3001\u5982\u4f55\u63d2\u5165\uff1f\n\n\u76f4\u63a5\u66b4\u529b\u63d2\u5165\uff0c\u5c06\u4ed6\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\u540e\u79fb\uff0c\u540c\u65f6\u6309\u7167\uff08\u4e8c\uff09\u4e2d\u7684\u65b9\u6cd5\u7ef4\u62a4\u524d\u7f00\u548c\u3002\n\n\u4f46\u662f\uff0c\u5047\u5982\u4e00\u76f4\u5f80\u540c\u4e00\u4e2a\u5757\u91cc\u63d2\u4e1c\u897f\uff0c\u663e\u7136\u65f6\u95f4\u7206\u70b8\u3002\n\n\u56e0\u6b64\uff0c\u5f53\u5757\u7684\u5927\u5c0f\u5927\u4e8e\u4e00\u4e2a\u9608\u503c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u5c06\u5176\u5206\u88c2\u6210\u4e24\u4e2a\u5c0f\u5757\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u770b\u6210\u628a\u539f\u5757\u7684\u540e\u4e00\u534a\u5206\u51fa\u53bb\u3002\n\n\u663e\u7136\u5206\u88c2\u4e0d\u4f1a\u5bf9\u540e\u9762\u7684\u5757\u7684\u524d\u7f00\u548c\u4ea7\u751f\u5f71\u54cd\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u5c0f\u5757\u3002\n\n\u540e\u9762\u7684\u5c0f\u5757\u7684\u6240\u6709\u4fe1\u606f\u5176\u5b9e\u548c\u539f\u6765\u7684\u662f\u4e00\u6837\u7684\uff0c\u590d\u5236\u8fc7\u53bb\u5c31\u884c\u3002\n\n\u7ef4\u62a4\u539f\u6765\u7684\u5757\uff0c\u53ea\u9700\u8981\u626b\u4e00\u904d\u540e\u9762\u7684\u5757\uff0c\u628a\u540e\u9762\u7684\u5757\u4e2d\u7684\u5143\u7d20\u51cf\u6389\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u540c\u65f6\u7ef4\u62a4\u4e00\u4e0b\u94fe\u8868\uff0c\u628a\u5206\u88c2\u524d\u540e\u9762\u90a3\u4e2a\u5757\u63a5\u5230\u5206\u51fa\u7684\u5757\u4e0a\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid Split(int now) {\n\tint newb=++S;\n\tb[newb].r=b[now].r,b[b[now].r].l=newb,b[now].r=newb,b[newb].l=now;\n\t//cout<<\"Splitting:\"<<now<<' '<<newb<<endl;\n\t//cout<<b[now].l<<' '<<b[now].r<<' '<<b[newb].l<<' '<<b[newb].r<<endl;\n\tb[newb].size=b[now].size/2;\n\tint tmp=b[now].size-b[newb].size;\n\tmemcpy(b[newb].sk,b[now].sk,sizeof(b[now].sk));\n\tmemcpy(b[newb].s,b[now].s,sizeof(b[now].s));\n\tfor(int i=tmp+1; i<=b[now].size; i++) {\n\t\tb[newb][i-tmp]=b[now][i];\n\t\tb[now].sk[bel[b[now][i]]]--,b[now].s[b[now][i]]--;\n\t\tb[now][i]=0;\n\t}\n\tb[now].size=tmp;\n}\nvoid Insert(int x,int k) {\n\t//cout<<\"RealInsert:\"<<x<<' '<<k<<endl;\n\tint now=L;\n\twhile(b[now].size<x){\n\t\tif(b[now].r)x-=b[now].size,now=b[now].r;\n\t\telse break;\n\t}\n\tfor(int i=b[now].size; i>=x; i--)b[now][i+1]=b[now][i];\n\tb[now][x]=k,b[now].size++;\n\tint tn=now;\n\twhile(now) {\n\t\tb[now].sk[bel[k]]++;\n\t\tb[now].s[k]++;\n\t\tnow=b[now].r;\n\t}\n\tif(b[tn].size>THREEHUNDRED*2)Split(tn);\n}\n```\n\n# \u56db\u3001\u7ed3\u8bed\n\n\u76f8\u4fe1\u770b\u5230\u8fd9\u91cc\uff0c\u4f60\u5df2\u7ecf\u6709\u80fd\u529b\u81ea\u5df1\u5199\u51fa\u4ee3\u7801\u4e86\u3002\n\n\u5176\u5b9e\u8fd9\u9898\u5e76\u4e0d\u96be\uff0c\u53ea\u8981\u4f60\u60f3\u597d\u4e86\u5199\uff0c\u5e76\u4e14\u6709\u4e00\u6bb5\u5145\u8db3\u7684\u65f6\u95f4\uff08\u6211\u7528\u4e86 2.5h\uff09\u8c03\u8bd5\uff0c\u5e94\u8be5\u662f\u80fd\u591f\u5c06\u5176 AC \u7684\u3002\n\n\u8fd9\u79cd\u503c\u57df\u5206\u5757\u7684\u60f3\u6cd5\uff0c\u5176\u5b9e\u5728\u5176\u4ed6\u9898\u4e2d\u4e5f\u53ef\u4ee5\u501f\u9274\u3002\n\n\u5b8c\u7ed3\u6492\u82b1~~",
        "postTime": 1584107999,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4278 \u3010\u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c\u3011"
    },
    {
        "content": "\u5361\u4e86\u534a\u5929\uff0c\u7ec8\u4e8e\u7528\u6811\u5957\u6811\u5361\u8fc7\u53bb\u4e86\u3002\n\n\u6b63\u5e38\u7684\u6811\u5957\u6811\u662f\u9700\u8981\u5916\u5c42\u4f7f\u7528\u66ff\u7f6a\u7f8a\u6811\u6216\u8005treap\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u6211\u4eec\u4ed4\u7ec6\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u5728\u6811\u5957\u6811\u6a21\u677f\u4e2d\uff0c\u6709\u4e00\u79cd\u6bd4\u8f83\u4e0d\u9519\u7684\u6811\u5957\u6811\u53ef\u4ee5\u6c42\u533a\u95f4\u7b2c K \u5c0f\uff0c\u5c31\u662f\u6743\u503c\u6811\u5957\u4f4d\u7f6e\u6811\u3002\u800c\u8fd9\u4e2a\u9898\u76ee\u4e2d\uff0c\u503c\u57df\u662f\u786e\u5b9a\u7684\uff0c\u4e0d\u4f1a\u5728\u4e24\u4e2a\u503c\u4e2d\u95f4\u591a\u51fa\u6765\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u5916\u5c42\u7684\u6811\u7ed3\u6784\u4e5f\u662f\u786e\u5b9a\u7684\u3002\n\n\u6211\u4eec\u6765\u601d\u8003\u5185\u5c42\uff0c\u6211\u4eec\u5728\u4e8c\u5206\u7b2c K \u5927\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u6c42\u51fa\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u6709\u591a\u5c11\u4e2a\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u6bd4\u8f83\u4e24\u4e2a\u5143\u7d20\u5728\u5e8f\u5217\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\u3002\u6211\u4eec\u8003\u8651\u5230\u4f1a\u6709\u63d2\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u7528\u4ed6\u4eec\u63d2\u5165\u65f6\u7684\u7f16\u53f7\u6bd4\u8f83\u3002\u6211\u4eec\u8003\u8651\u7ed9\u6bcf\u4e2a\u4f4d\u7f6e\u9644\u4e00\u4e2a\u503c\uff0c\u4f7f\u5f97\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u5bf9\u5e94\u4e00\u4e2a\u503c\uff0c\u800c\u4e14\u5728\u8d8a\u524d\u9762\u503c\u8d8a\u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u66ff\u7f6a\u7f8a\u6811/treap\u6765\u7ef4\u62a4\u8fd9\u4e2a\u503c\u3002\u5f53\u4e0d\u5e73\u8861\u65f6\u5019\u5c31\u91cd\u65b0\u5c06\u4e00\u4e2a\u5b50\u6811\u7684\u503c\u91cd\u65b0\u8d4b\u503c\u5c31\u597d\u4e86\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u652f\u6301\u6bd4\u8f83\u4e24\u4e2a\u5143\u7d20\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u5957\u5e73\u8861\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\u4f46\u662f\u5e73\u8861\u6811\u4e0d\u80fd\u592a\u6162\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i, l, r) for(int i = (l), i##end = (r);i <= i##end;++i)\ntypedef unsigned long long u64;\ntypedef double db;\ntypedef long long ll;\ntypedef unsigned u32;\nstruct istream {\n    static const int size = 1 << 23;\n    char buf[size], *vin;\n    inline istream() {\n        fread(buf,1,size,stdin);\n        vin = buf - 1;\n    }\n    inline istream& operator >> (int & x) {\n        for(x = *++vin & 15;isdigit(*++vin);) x = x * 10 + (*vin & 15);\n        return * this;\n    }\n    inline istream& operator >> (char & x) {\n    \tx = *++vin;\n        return * this;\n    }\n} cin;\nstruct ostream {\n    static const int size = 1 << 22;\n    char buf[size], *vout;\n    unsigned map[10000];\n    inline ostream() {\n        for(int i = 0;i < 10000;++i) {\n            map[i] = i % 10 + 48 << 24 | i / 10 % 10 + 48 << 16 | i / 100 % 10 + 48 << 8 | i / 1000 + 48;\n        }\n        vout = buf + size;\n    }\n    inline ~ ostream()\n    { fwrite(vout,1,buf + size - vout,stdout); }\n    inline ostream& operator << (u32 x) {\n        for(;x >= 10000;x /= 10000) *--(unsigned*&)vout = map[x % 10000];\n        do *--vout = x % 10 + 48; while(x /= 10);\n        return * this;\n    }\n    inline ostream& operator << (char x) {\n        *--vout = x;\n        return * this;\n    }\n} cout;\n\n\nconst int N = 100000;\nconst int M = 1 << 17;\nconst u64 Max = 1ull << 60;\n\ninline int gen() {\n\tstatic u32 x = 2431898411;\n\tx ^= x << 13;\n\tx ^= x >> 17;\n\tx ^= x << 5;\n\treturn x;\n}\n\nu64 value[N];\nnamespace treap {\n\tconst int S = 20 * N;\n\tstruct node {\n\t\tint ls, rs, p, v, size;\n\t} a[S];\n\tint tot;\n\tinline void update(int id) {\n\t\ta[id].size = a[a[id].ls].size + a[a[id].rs].size + 1;\n\t}\n\tinline int merge(int x, int y) {\n\t\tif(!x || !y) return x | y;\n\t\tif(a[x].p < a[y].p) {\n\t\t\ta[x].size += a[y].size;\n\t\t\ta[x].rs = merge(a[x].rs, y);\n\t\t\treturn x;\n\t\t} else {\n\t\t\ta[y].size += a[x].size;\n\t\t\ta[y].ls = merge(x, a[y].ls);\n\t\t\treturn y;\n\t\t}\n\t}\n\tinline void split(int rt, int idx, int & x, int & y) {\n\t\tif(!rt) x = y = 0;\n\t\telse {\n\t\t\tif(value[idx] < value[a[rt].v]) {\n\t\t\t\tsplit(a[rt].ls, idx, x, a[rt].ls);\n\t\t\t\ty = rt, a[y].size -= a[x].size;\n\t\t\t} else {\n\t\t\t\tsplit(a[rt].rs, idx, a[rt].rs, y);\n\t\t\t\tx = rt, a[x].size -= a[y].size;\n\t\t\t}\n\t\t}\n\t}\n\tinline void ins(int & rt, int idx) {\n\t\ta[++tot] = (node) {0, 0, gen(), idx, 1};\n\t\tint * x = &rt;\n\t\tfor(;*x && a[tot].p > a[*x].p;) {\n\t\t\t++ a[*x].size;\n\t\t\tx = &(value[idx] < value[a[*x].v] ? a[*x].ls : a[*x].rs);\n\t\t}\n\t\tsplit(*x, idx, a[tot].ls, a[tot].rs);\n\t\tupdate(*x = tot);\n\t}\n\tinline void del(int & rt, int idx) {\n\t\tint * x = &rt;\n\t\tfor(;a[*x].v != idx;) {\n\t\t\t-- a[*x].size;\n\t\t\tx = &(value[idx] < value[a[*x].v] ? a[*x].ls : a[*x].rs);\n\t\t}\n\t\t*x = merge(a[*x].ls, a[*x].rs);\n\t}\n\tinline int bet(int rt, u64 L, u64 R, int K) {\n\t\tfor(;rt && value[a[rt].v] - L > R - L;) rt = L < value[a[rt].v] ? a[rt].ls : a[rt].rs;\n\t\tint res = bool(rt);\n\t\tfor(int x = a[rt].ls;x && res < K;) {\n\t\t\tif(L <= value[a[x].v]) {\n\t\t\t\tres += a[a[x].rs].size + 1;\n\t\t\t\tx = a[x].ls;\n\t\t\t} else {\n\t\t\t\tx = a[x].rs;\n\t\t\t}\n\t\t}\n\t\tfor(int x = a[rt].rs;x && res < K;) {\n\t\t\tif(value[a[x].v] <= R) {\n\t\t\t\tres += a[a[x].ls].size + 1;\n\t\t\t\tx = a[x].rs;\n\t\t\t} else {\n\t\t\t\tx = a[x].ls;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n}\n\nnamespace seq { // for label\n\tconst int S = 200000;\n\tint ls[S], rs[S], p[S], size[S], A[S], tot;\n\tinline void update(int id) { size[id] = size[ls[id]] + size[rs[id]] + 1; }\n\tinline void rls(int & rt){ int x = ls[rt]; ls[rt] = rs[x], update(rs[x] = rt), rt = x; }\n\tinline void rrs(int & rt){ int x = rs[rt]; rs[rt] = ls[x], update(ls[x] = rt), rt = x; }\n\tinline int merge(int x, int y) {\n\t\tif(!x || !y) return x | y;\n\t\tif(p[x] < p[y]) {\n\t\t\tsize[x] += size[y], rs[x] = merge(rs[x], y);\n\t\t\treturn x;\n\t\t} else {\n\t\t\tsize[y] += size[x], ls[y] = merge(x, ls[y]);\n\t\t\treturn y;\n\t\t}\n\t}\n\tinline void build(int rt, u64 L, u64 R) {\n\t\tu64 mid = value[rt] = (L + R) >> 1;\n\t\tif(ls[rt]) build(ls[rt], L, mid);\n\t\tif(rs[rt]) build(rs[rt], mid, R);\n\t}\n\tinline void ins(int & rt, int rank, int idx, int a, int fa, u64 L = 0, u64 R = Max) {\n\t\tif(!rt) {\n\t\t\tp[++tot] = gen(), size[tot] = 1, value[idx] = (L + R) >> 1, A[tot] = a, rt = tot;\n\t\t} else {\n\t\t\tu64 mid = (L + R) >> 1;\n\t\t\tif(size[ls[rt]] >= rank) {\n\t\t\t\tins(ls[rt], rank, idx, a, rt, L, mid);\n\t\t\t\tif(p[ls[rt]] < p[rt]) rls(rt);\n\t\t\t} else {\n\t\t\t\tins(rs[rt], rank - size[ls[rt]] - 1, idx, a, rt, mid, R);\n\t\t\t\tif(p[rs[rt]] < p[rt]) rrs(rt);\n\t\t\t}\n\t\t\tupdate(rt);\n\t\t}\n\t\tif((p[rt] >= p[fa] || !fa) && rt == idx) build(rt, L, R);\n\t}\n\tinline int kth(int root, int k) {\n\t\tfor(;;) {\n\t\t\tif(size[ls[root]] >= k) {\n\t\t\t\troot = ls[root];\n\t\t\t} else {\n\t\t\t\tif(k == size[ls[root]] + 1) return root;\n\t\t\t\tk -= size[ls[root]] + 1;\n\t\t\t\troot = rs[root];\n\t\t\t}\n\t\t}\n\t}\n}\nint n, q;\nint a[N];\n\nint bit[M | 1];\n\nconst int U = 70001;\ninline void ins(int v, int seq_id) {\n\tv += 1;\n\tfor(;v <= U;v += v & -v)\n\t\ttreap::ins(bit[v], seq_id);\n}\ninline void del(int v, int seq_id) {\n\tv += 1;\n\tfor(;v <= U;v += v & -v)\n\t\ttreap::del(bit[v], seq_id);\n}\ninline int find_kth(u64 L, u64 R, int k) {\n\tint l = 1, r = M;\n\tfor(;l != r;) {\n\t\tint mid = l + r >> 1;\n\t\tif(mid > U) { r = mid; continue; }\n\t\tint cnt = treap::bet(bit[mid], L, R, k);\n\t\tif(cnt >= k) {\n\t\t\tr = mid;\n\t\t} else {\n\t\t\tk -= cnt;\n\t\t\tl = mid + 1;\n\t\t}\n\t}\n\treturn l - 1;\n}\nint out[N], cnt;\nint main() {\n\tstd::ios::sync_with_stdio(false), std::cin.tie(0);\n\tint root = 0;\n\tcin >> n;\n\tfor(int i = 1;i <= n;++i) {\n\t\tcin >> a[i];\n\t\tseq::ins(root, i, i, a[i], 0);\n\t\tins(a[i], i);\n\t}\n\tcin >> q;\n\tint last = 0;\n\tsize_t t = 0;\n\tfor(int i = 1, l, r, k, val;i <= q;++i) {\n\t\tchar type;\n\t\tcin >> type;\n\t\tif(type == 'Q') {\n\t\t\tcin >> l >> r >> k;\n\t\t\tl ^= last;\n\t\t\tr ^= last;\n\t\t\tk ^= last;\n\t\t\tint L = seq::kth(root, l);\n\t\t\tint R = seq::kth(root, r);\n\t\t\tlast = find_kth(value[L], value[R], k);\n\t\t\tout[++cnt] = last;\n\t\t}\n\t\tif(type == 'M') {\n\t\t\tcin >> l >> val;\n\t\t\tl ^= last;\n\t\t\tval ^= last;\n\t\t\tint L = seq::kth(root, l);\n\t\t\tdel(seq::A[L], L);\n\t\t\tseq::A[L] = val;\n\t\t\tins(seq::A[L], L);\n\t\t}\n\t\tif(type == 'I') {\n\t\t\tcin >> l >> val;\n\t\t\tl ^= last;\n\t\t\tval ^= last;\n\t\t\tseq::ins(root, l - 1, ++n, val, 0);\n\t\t\tins(val, n);\n\t\t}\n\t\t// last = 0;\n\t}\n\tfor(int i = cnt;i >= 1;--i) \n\t\tcout << '\\n' << (u32) out[i];\n\tstd::cerr << double(t) / CLOCKS_PER_SEC << '\\n';\n}\n\n```\n",
        "postTime": 1601337504,
        "uid": 30122,
        "name": "skip2004",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4278 \u3010\u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c\u3011"
    },
    {
        "content": "\u5982\u679c\u505a\u8fc7\u6700\u521d\u5206\u5757\u7684\u8bdd\uff0c\u770b\u5230\u8fd9\u4e2a\u9898\u5e94\u8be5\u5f88\u5feb\u80fd\u60f3\u51fa$O(n\\sqrt n)$\u7684\u5757\u72b6\u94fe\u8868\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u5bf9\u503c\u57df\u5206\u5757\uff0c\u7136\u540e\u53ea\u8981\u77e5\u9053\u533a\u95f4\u4e2d\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3001\u6bcf\u4e2a\u5757\u4e2d\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5c31\u53ef\u4ee5$O(\\sqrt n)$\u6c42\u51fa\u7b2c$k$\u5c0f\u3002\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5e38\u89c1\u5957\u8def\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u6240\u4ee5\u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u5957\u8def\u5c31\u662f\u5e8f\u5217\u5206\u5757\u3002\n\n\u8be2\u95ee\u65f6\uff0c\u6211\u4eec\u8981\u5feb\u901f\u6c42\u51fa\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u6bcf\u4e2a\u6570\u3001\u6bcf\u4e2a\u5757\u4e2d\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u90a3\u4e48\u5c31\u6709\u7b2c\u4e09\u4e2a\u5e38\u89c1\u5957\u8def\uff1a\u524d\u7f00\u548c\u3002\u5bf9\u6bcf\u4e2a\u5757\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u7684\u524d\u7f00\u548c\uff0c\u6bcf\u4e2a\u503c\u57df\u5757\u51fa\u73b0\u6b21\u6570\u7684\u524d\u7f00\u548c\u3002\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u8fb9\u89d2\u66b4\u529b\u7edf\u8ba1\uff0c\u4e2d\u95f4\u7684\u76f4\u63a5\u7528\u524d\u7f00\u548c\u76f8\u51cf\u5373\u53ef\u3002\u5176\u4e2d\u9884\u5904\u7406$O(n\\sqrt n)$\uff0c\u67e5\u8be2\u5355\u6b21$O(\\sqrt n)$\u3002\n\n\u4fee\u6539\u64cd\u4f5c\u66f4\u65b0\u524d\u7f00\u548c\u4fe1\u606f\uff0c\u6709\u53d8\u5316\u7684\u6570\u53ea\u67092\u4e2a\uff0c\u56e0\u6b64\u76f4\u63a5\u66b4\u529b\u66f4\u65b0\u524d\u7f00\u548c\u5373\u53ef\uff0c\u5355\u6b21$O(\\sqrt n)$\u3002\n\n\u7531\u4e8e\u6709\u63d2\u5165\u64cd\u4f5c\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u666e\u901a\u7684\u5206\u5757\u6bd4\u8f83\u96be\u7ef4\u62a4\u3002\u4e0d\u96be\u60f3\u5230\u7528\u5757\u72b6\u94fe\u8868\u6765\u52a8\u6001\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\sqrt n)$\u3002\n\n\u5176\u5b9e\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u5757\u72b6\u94fe\u8868\uff0c\u7528\u5206\u5757\u5957\u94fe\u8868\uff08\u548c\u5757\u72b6\u94fe\u8868\u7684\u533a\u522b\u662f\uff0c\u548c\u666e\u901a\u5e8f\u5217\u5206\u5757\u4e00\u6837\uff0c\u5757\u5927\u5c0f\u4e0d\u53d8\uff09\u4e5f\u80fd\u505a\u5230\u540c\u6837\u7684\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u8003\u8651\u5728\u67d0\u4e2a\u5757\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u8fd9\u4e2a\u5757\u672b\u5c3e\u5c31\u4f1a\u591a\u51fa\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u8981\u628a\u5b83\u653e\u5728\u4e0b\u4e00\u4e2a\u5757\u4e2d\uff0c\u7136\u540e\u7ee7\u7eed\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\u7531\u4e8e\u94fe\u8868\u7684\u5c3e\u90e8\u5220\u9664\u3001\u5934\u90e8\u63d2\u5165\u4e3a$O(1)$\u7684\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u4e3a$O(\\sqrt n)$\u3002\u800c\u628a\u4e00\u4e2a\u6570\u4ece\u4e00\u4e2a\u5757\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5757\uff0c\u53ea\u4f1a\u5f71\u54cd\u5230\u5b83\u539f\u6765\u6240\u5728\u5757\u7684\u524d\u7f00\u548c\u4fe1\u606f\uff0c\u6240\u4ee5\u66f4\u65b0\u4fe1\u606f\u7684\u603b\u590d\u6742\u5ea6\u4e5f\u662f$O(\\sqrt n)$\u7684\u3002\u8fd9\u6837\u5c31\u540c\u6837\u505a\u5230\u4e86$O(n\\sqrt n)$\u7684\u603b\u590d\u6742\u5ea6\u3002\n\n\u4ee3\u7801\u6bd4\u5757\u72b6\u94fe\u8868\u8981\u597d\u5199\u4e00\u70b9\u3002\u6211\u4f7f\u7528\u4e86```std::list```\u8fdb\u4e00\u6b65\u7b80\u5316\u4e86\u4ee3\u7801\uff08\u4f46\u52a0\u5927\u4e86\u5e38\u6570\uff0c\u6240\u4ee5\u6709\u70b9\u5361\u5e38\uff09\u3002\n\n## Code\uff1a\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#include<cctype>\n#include<cstdio>\n#include<list>\nusing namespace std;\nchar buf[(int)3e7],*ss=buf;\ninline int init(){buf[fread(buf,1,(int)3e7-1,stdin)]='\\n';fclose(stdin);return 0;}\nconst int __START__=init();\ninline int readint(){\n    int d=0;\n    while(!isdigit(*ss))++ss;\n    while(isdigit(*ss))d=d*10+(*ss++^'0');\n    return d;\n}\nconst int siz=300,blocks=235;\n#define bel(x)((x-1)/siz+1)\nlist<int>s[300];\ntypedef list<int>::iterator iter;\nint pre[70500][300],prb[300][300],m,ans,L[300],R[300],n,tot[70500],tob[300];\nint sta[666],top=0;\ninline int modify(list<int>&l,int x,int v){\n\titer it=l.begin();\n\twhile(x--)++it;\n\tconst int ret=*it;\n\t*it=v;\n\treturn ret;\n}\nvoid get(list<int>&l,int x,int s){\n\titer it=l.begin();\n\twhile(x--)++it;\n\twhile(s--)++tot[sta[++top]=*it],++tob[bel(*it)],++it;\n}\nint main(){\n\tn=readint();\n\tfor(int i=1;i<=blocks;++i)L[i]=R[i-1]+1,R[i]=i*siz;\n\tfor(int i=1;i<=n;++i){\n\t\tint x=readint()+1;\n\t\tconst int id=bel(i);\n\t\ts[id].push_back(x);\n\t\tint*P=pre[x],*B=prb[bel(x)];\n\t\tfor(int j=id;j<=blocks;++j)++P[j],++B[j];\n\t}\n\tfor(m=readint()^ans;m--;){\n\t\twhile(isspace(*ss))++ss;\n\t\tswitch(*ss){\n\t\t\tcase'Q':{\n\t\t\t\tint l=readint()^ans,r=readint()^ans,k=readint()^ans;\n\t\t\t\ttop=0;\n\t\t\t\tconst int bL=bel(l),bR=bel(r);\n\t\t\t\tif(bL==bR){\n\t\t\t\t\tget(s[bL],l-L[bL],r-l+1);\n\t\t\t\t\tfor(int i=1;;++i)\n\t\t\t\t\tif(k>tob[i])k-=tob[i];else{\n\t\t\t\t\t\tfor(int j=L[i];;++j)\n\t\t\t\t\t\tif(k>tot[j])k-=tot[j];else{ans=j;break;}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tget(s[bL],l-L[bL],R[bL]-l+1),get(s[bR],0,r-L[bR]+1);\n\t\t\t\t\tfor(int i=1;;++i)\n\t\t\t\t\tif(k>tob[i]+prb[i][bR-1]-prb[i][bL])k-=tob[i]+prb[i][bR-1]-prb[i][bL];else{\n\t\t\t\t\t\tfor(int j=L[i];;++j)\n\t\t\t\t\t\tif(k>tot[j]+pre[j][bR-1]-pre[j][bL])k-=tot[j]+pre[j][bR-1]-pre[j][bL];else{ans=j;break;}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprintf(\"%d\\n\",--ans);\n\t\t\t\tfor(int i=0;i<=top;++i)tot[sta[i]]=tob[bel(sta[i])]=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase'M':{\n\t\t\t\tint x=readint()^ans,v=readint()^ans;\n\t\t\t\t++v;\n\t\t\t\tconst int id=bel(x);\n\t\t\t\tint old=modify(s[id],x-L[id],v);\n\t\t\t\tint*Po=pre[old],*Pn=pre[v],*Bo=prb[bel(old)],*Bn=prb[bel(v)];\n\t\t\t\tfor(int i=id;i<=blocks;++i)\n\t\t\t\t--Po[i],--Bo[i],++Pn[i],++Bn[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase'I':{\n\t\t\t\tint x=readint()^ans,v=readint()^ans;\n\t\t\t\t++v;\n\t\t\t\tconst int id=bel(x);\n\t\t\t\titer it=s[id].begin();\n\t\t\t\tfor(int i=x-L[id];i--;)++it;\n\t\t\t\ts[id].insert(it,v);\n\t\t\t\tint*P=pre[v],*B=prb[bel(v)];\n\t\t\t\tfor(int i=id;i<=blocks;++i)++P[i],++B[i];\n\t\t\t\tfor(int i=id+1;i<=blocks;++i)\n\t\t\t\tif(s[i-1].size()<=siz)break;else{\n\t\t\t\t\tint vl=s[i-1].back();\n\t\t\t\t\t--pre[vl][i-1],--prb[bel(vl)][i-1];\n\t\t\t\t\ts[i-1].pop_back();\n\t\t\t\t\ts[i].push_front(vl);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1562068294,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4278 \u3010\u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u9898\u5982\u5176\u540d\uff0c\u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c\u3002\u5f3a\u5236\u5728\u7ebf\u3002\n\n[\u539f\u9898](https://www.luogu.com.cn/problem/P4278)\n\n\u8fd9\u9053\u9898\u6309\u9053\u7406\u6765\u8bf4\u662f\u53ef\u4ee5\u7528\u5947\u5999\u7684\u6811\u5957\u6811\u4e24\u4e2a$log$\u505a\u8fc7\u53bb\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u9898\u76ee\u53f3\u4e0a\u89d2\u7684\u90a3\u4f4d\u6bd2\u7624\uff0c\u88ab\u5361\u6389\u4e86\u3002\n\n\u90a3\u4e48\u80fd\u8fc7\u7684\u65b9\u6cd5\uff0c\u5c31\u53ea\u6709**\u5757\u72b6\u94fe\u8868+\u503c\u57df\u5206\u5757**\u4e86\u3002\n\n\u9996\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u503c\u57df\u5206\u5757\uff1a\n\n\u5148\u770b\u770b\u600e\u4e48\u7ef4\u62a4\u4e00\u4e2a**\u6570\u5217**\uff08\u4e0d\u662f\u533a\u95f4\uff09\u7684\u9759\u6001K\u5c0f\u503c\uff1a\n\n\u5c06\u503c\u57df(\u9ed8\u8ba4\u4e0e $n$ \u540c\u9636)\u5206\u6210$\\sqrt{n}$\u5757\uff0c\u7b2c $i$ \u5757\u8868\u793a\u7b2c $i$ \u4e2a\u8303\u56f4\u4e3a$\\sqrt{n}$\u7684\u503c\u57df\u3002\n\n\u5f04\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a$Size$\uff0c\u4e00\u4e2a$Alive$\u3002$Size(i)$\u8868\u793a\u7b2c $i$ \u5757\u503c\u57df\u5185\u51fa\u73b0\u4e86\u51e0\u4e2a\u6570\uff0c$Alive(i)$\u8868\u793a $i$ \u8fd9\u4e2a\u6570\u5728\u6570\u5217\u4e2d\u5171\u51fa\u73b0\u8fc7\u51e0\u6b21\u3002\u8fd9\u4e24\u4e2a\u6570\u7ec4\u53ef\u4ee5\u8f7b\u677e $O(n)$ \u5efa\u51fa\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6574\u4e2aK\u5c0f\u503c\uff0c\u6211\u4eec\u53ef\u4ee5**\u904d\u5386\u6bcf\u4e00\u5757\u503c\u57df**\uff0c\u6bd4\u8f83K\u4e0e\u5f53\u524d\u5757\u5185\u6570\u7684\u4e2a\u6570($Size$)\u7684\u5927\u5c0f\u3002\u82e5K\u5927\uff0c\u5c06K\u51cf\u53bb\u5f53\u524d\u5757\u5185\u4e2a\u6570\uff0c\u904d\u5386\u4e0b\u4e00\u5757\uff1b\u5426\u5219**\u8bf4\u660eK\u5c0f\u503c\u5c31\u5728\u8fd9\u4e00\u5757\u91cc\u4e86\u3002** \u90a3\u4e48\u5c31\u53ef\u4ee5\u5229\u7528$Alive$\u6570\u7ec4\uff0c\u904d\u5386\u8be5\u5757\u5185\u6240\u6709\u503c\u76f4\u5230\u627e\u5230K\u5c0f\u503c\u3002\u590d\u6742\u5ea6\u663e\u7136\u4e3a$O(\\sqrt{n})$\u3002\n\n\u518d\u6765\u770b\u770b**\u533a\u95f4**\u9759\u6001K\u5c0f\u503c\uff1a\n\n\u4ecd\u7136\u662f\u503c\u57df\u5206\u5757\uff0c\u4e0d\u8fc7\u8fd9\u6b21\u5229\u7528**\u524d\u7f00\u548c**\u7684\u601d\u60f3\u3002\u628a\u5e8f\u5217\u4e5f\u5206\u6210$\\sqrt{n}$\u5757\uff0c\n\u5c06$Size,Alive$\u6539\u6210\u4e8c\u7ef4\uff1a$Size(i)(j)$\u8868\u793a\u5e8f\u5217\u524d $i$ \u5757\u4e2d\uff0c\u503c\u57df\u7b2c $j$ \u5757\u5185\u51fa\u73b0\u8fc7\u51e0\u4e2a\u6570\uff1b$Alive(i)(j)$\u8868\u793a\u5e8f\u5217\u524d $i$ \u5757\u4e2d\uff0c$j$ \u8fd9\u4e2a\u6570\u51fa\u73b0\u8fc7\u51e0\u6b21\u3002\u8fd9\u4e24\u4e2a\u6570\u7ec4\u80fd$O(n \\sqrt{n})$ \u5f97\u5230\u3002\n\n\u5728\u5f04\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4$s,cnt$ \uff0c\u5176\u7528\u5904\u5927\u4f53\u4e0e$Size,Alive$\u76f8\u540c\u3002\u5177\u4f53\u89c1\u4e0b\u6587\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee$l,r,k$ \uff0c$l$\u5c5e\u4e8e\u7b2c $idl$ \u5757\uff0c$r$\u5c5e\u4e8e\u7b2c $idr$ \u5757\n\n\u82e5$idl=idr$\uff0c\u66b4\u529b\u4ece $l$ \u626b\u5230 $r$\uff0c\u628a\u626b\u5230\u7684\u6570\u62ff\u53bb\u66f4\u65b0$s,cnt$\u3002\u7136\u540e\uff0c\u7528\u4e4b\u524d\u63d0\u5230\u7684\u505a\u6cd5$O(\\sqrt{n})$\u5f97\u5230\u7b54\u6848\u3002\n\n\u5426\u5219\uff0c\u5148\u66b4\u529b\u5904\u7406\u6563\u5757\uff0c\u66f4\u65b0$s,cnt$\u3002\u7136\u540e\uff0c\u5bf9\u4e8e\u4e2d\u95f4\u7684\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\n$Size(idr-1)(j)-Size(idl)(j)$\u5f97\u5230 $idl+1$ \u5230 $idr-1$ \u8fd9\u4e00\u6bb5\u7684$s$\u3002$cnt$ \u540c\u7406\u3002\u4e5f\u5c31\u662f\u5728\u904d\u5386\u503c\u57df\u65f6\uff0c\u4ee5 $s(i)+Size(idr-1)(i)-Size(idl)(i)$ \u4f5c\u4e3a\u771f\u6b63\u7684 $s(i)$ \uff0c\u4ee5$cnt(j)+Alive(idr-1)(j)-Alive(idl)$ \u4f5c\u4e3a\u771f\u6b63\u7684 $cnt(j)$\u3002\n\u590d\u6742\u5ea6\u4ecd\u4e3a$O(\\sqrt{n})$\u3002\n\n\u5728\u6bcf\u6b21\u8be2\u95ee\u540e\uff0c\u8981\u628a\u52a0\u8fdb$s,cnt$\u91cc\u9762\u7684\u6570\u4ece$s,cnt$\u91cc\u9762\u6254\u6389\uff0c\u51c6\u5907\u8fce\u63a5\u4e0b\u4e00\u6b21\u8be2\u95ee\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4fee\u6539\uff08\u5355\u70b9\uff09\uff1a\n\n\u65e2\u7136\u53ea\u8981\u6539\u4e00\u4e2a\u503c\uff0c\u90a3\u6539\u6389\u5176\u6240\u5728\u5e8f\u5217\u5757\u53ca\u5176\u4ee5\u540e\u6240\u6709\u5757\u7684$Size,Alive$\u5373\u53ef\u3002\u4e00\u6b21\u4fee\u6539\u663e\u7136$O(1)$\uff0c\u7531\u4e8e\u5e8f\u5217\u5757\u6709$O(\\sqrt{n})$ \u5757\uff0c\u5355\u6b21\u4fee\u6539\u590d\u6742\u5ea6\u4ecd\u4e3a $O(\\sqrt{n})$\uff0c\u4e14\u51e0\u4e4e\u4e0e\u9759\u6001\u4ee3\u7801\u91cf\u6ca1\u6709\u533a\u522b\u3002\n\n\u5bf9\u6bd4\u4e3b\u5e2d\u6811\uff0c\u5982\u679c\u4e3b\u5e2d\u6811\u8981\u5e26\u4fee\uff0c\u90a3\u771f\u662f\u4f24\u7b4b\u52a8\u9aa8\u7684\uff0c\u5bf9\u6bd4\u503c\u57df\u5206\u5757\u4e5f\u4e0d\u518d\u6709\u591a\u5c11\u4f18\u52bf\u3002\u679c\u7136\u554a\uff0c\u8d8a\u66b4\u529b\u7684\u7b97\u6cd5\u80fd\u7ef4\u62a4\u7684\u4e1c\u897f\u8d8a\u591a\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u5c31\u662f\u6700\u540e\u4e00\u5173\u3002\u63d2\u5165\uff1a\n\n\u4ecb\u7ecd\u4e00\u4e0b\u6211\u4eec\u4eca\u5929\u7684\u7b2c\u4e8c\u4f4d\u4e3b\u89d2\uff1a\u5757\u72b6\u94fe\u8868\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u5e8f\u5217\u5757\u4e0e\u5e8f\u5217\u5757\u4e4b\u95f4**\u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u76f8\u8fde**\uff0c**\u6bcf\u4e2a\u5757\u5185\u90e8\u7ef4\u62a4\u5176\u8303\u56f4\u5185\u7684\u6570\u5217**\u3002\n\n\u90a3\u4e48\u63d2\u5165\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u76f4\u63a5\u5c06\u5bf9\u5e94\u5e8f\u5217\u5757\u4e2d\u8be5\u5411\u540e\u79fb\u7684\u90e8\u5206\u540e\u79fb\uff0c\u590d\u6742\u5ea6\u4e3a\u5757\u957f\u3002\u4e4b\u540e\u518d\u5c06$Size,Alive$\u4e2d\u8981\u589e\u52a0\u7684\u90e8\u5206\u52a0\u4e0a\u53bb\uff0c\u590d\u6742\u5ea6\u4e3a\u5757\u7684\u6570\u91cf\u3002\n\n\u95ee\u9898\u6765\u4e86\uff0c\u8981\u662f\u6211\u4eec\u4e0d\u65ad\u5f80\u540c\u4e00\u4e2a\u5757\u91cc\u9762\u63d2\u5165\u5462\uff1f\u8fd9\u4e2a\u5757\u5c82\u4e0d\u662f\u4f1a\u8d8a\u6765\u8d8a\u957f\uff0c\u6700\u540e\u5bfc\u81f4\u590d\u6742\u5ea6\u5012\u9000\u6210$O(n)$?\n\n\u8fd9\u5c31\u662f\u6211\u4eec\u8981\u628a\u666e\u901a\u7684\u5206\u5757\u6539\u6210\u5757\u72b6\u94fe\u8868\u7684\u539f\u56e0\u3002\u5f53\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u5757\u957f\u5ea6\u53d8\u6210\n$2\\sqrt{n}$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u5b83\u5f04\u6210\u4e24\u534a\uff0c\u6bcf\u4e00\u4efd\u957f\u4e3a$\\sqrt{n}$\u3002\n\u4e5f\u5c31\u662f\u628a\u539f\u6765\u7684\u5757\u7684\u540e\u534a\u90e8\u5206\u6495\u4e0b\u6765\uff0c\u6254\u5230\u4e00\u4e2a\u65b0\u5757\u4e0a\uff0c\u4e14\u8fd9\u4e2a\u65b0\u5757\u8981\u53d8\u6210\u5728\u539f\u6765\u7684\u5757\u540e\u9762\u7684\u7b2c\u4e00\u4e2a\u5757\u3002\n\n\u8003\u8651\u5982\u4f55\u5b9e\u73b0\uff1a\u628a\u539f\u5757\u540e\u534a\u90e8\u5206\u4ea4\u7ed9\u4e00\u4e2a\u65b0\u5757\u5bb9\u6613\uff0c\u6bd5\u7adf\u6570\u636e\u91cf\u4e5f\u5c31$O(\\sqrt{n})$\uff0c\u4e14\u7531\u4e8e\u6570\u636e\u672c\u8eab\u6ca1\u6709\u53d8\u5316\uff0c\u4e0d\u7528\u53bb\u4fee\u6539\u5176\u4ed6\u5757\uff0c\u80fd\u591f\u8f7b\u677e$O(\\sqrt{n})$ \u89e3\u51b3\u3002\n\n\u800c\u6211\u4eec\u53d1\u73b0\uff0c\u8981\u65b0\u5f00\u4e00\u4e2a\u5757\uff0c\u4e14\u8be5\u5757\u8981\u53d8\u6210\u8981\u6c42\u7684\u5757\u540e\u9762\u7684\u7b2c\u4e00\u4e2a\u5757\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u80fd\u591f\u7528**\u94fe\u8868**\u76f8\u5f53\u5bb9\u6613\u7684\u89e3\u51b3\u3002\u4e8e\u662f\uff0c\u5c31\u6709\u4e86\u5757\u72b6\u94fe\u8868\u3002\n\n\u590d\u6742\u5ea6\uff0c\u4ecd\u662f\u94c1\u6253\u4e0d\u52a8\u7684$O(\\sqrt{n})$ \u3002\n\n$\\texttt{Talk is cheap,show me your code.}$\n\n```\n#include <cstdio>\n\nconst int maxn=1e5+5,maxl=300;int maxx;\n\nstruct IO{\n\tIO(){};char c;\n\tinline char gc(){\n\t\tstatic char buf[maxn],*p1=buf,*p2=buf;\n\t\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,maxn,stdin),p1==p2)?EOF:*p1++;\n\t}\n\tinline IO&operator>>(int &_){\n\t\t_=0;bool f=1;c=gc();while(c<'0'||c>'9'){if(c=='-') f=0; c=gc();}\n\t\twhile(c>='0'&&c<='9'){_=_*10+c-48;c=gc();}if(!f) _=-_;return *this;\n\t}\n\tinline IO&operator<<(int x){\n\t\tif(!x){putchar(48);putchar('\\n');return *this;}\n\t\tstatic int wt[40],len;len=0;if(x<0){putchar('-');x=-x;}\n\t\tfor(;x;x/=10){wt[++len]=x%10;}\n\t\twhile(len){putchar(wt[len--]+48);}\n\t\tputchar('\\n');return *this;\n\t}\n}io;\n\nint n,m,block_size,last_ans;\nint Size[maxl*3][maxl+5],Alive[maxl*3][maxn+5],pre_len[maxn],bl[maxn];//bl\u7528\u6765\u7ba1\u4e0b\u6807\u7684\u6240\u5c5e\u5757\uff0cpre_len[i]\u8868\u793ac[i]\u524d\u6709\u51e0\u4e2a\u6570\nint s[maxl+5],cnt[maxn];\n\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}\n\ninline int L(int id){return (id-1)*maxl+1;}\ninline int R(int id){return min(id*maxl,maxx);}//\u8fd9\u4e2a\u7528\u6765\u7ba1\u503c\u57df\u7684\u5206\u5757\u60c5\u51b5\ninline int where(int val){return (val-1)/maxl+1;}//\u503c\u57df\u6240\u5c5e\u5757\n\nstruct Block{\n\tint size[maxl+5],alive[maxn];\n\tint a[(maxl<<1)+5],len;int lb,rb;\n\tinline void ins(int val){size[where(val)]++,alive[val]++;}\n\tinline void del(int val){size[where(val)]--,alive[val]--;}\n\tinline void insert(int pos,int val){\n\t\tlen++;for(int i=len;i>=pos+2;i--) a[i]=a[i-1];\n\t\ta[pos+1]=val;//\u5c06val\u63d2\u5230pos\u540e\u9762\n\t}\n\tinline void push_back(int val){a[++len]=val;}\n\tint& operator[](int id){\n\t\treturn a[id];//\u8fd9\u6837\u4f1a\u5f88\u8212\u723d\n\t}\n}c[maxl];int block_len=0;\n\ninline void modify(int pos,int val){\n\tint id=bl[pos],_=pos-pre_len[id];int old=c[id][_];\n\tc[id].del(old),c[id].ins(val);c[id][_]=val;\n\tfor(int i=id;i;i=c[i].rb){\n\t\tSize[i][where(old)]--;Alive[i][val]++;\n\t\tAlive[i][old]--;Size[i][where(val)]++;\n\t}\n}\n\ninline void ins(int val){s[where(val)]++,cnt[val]++;}\ninline void del(int val){s[where(val)]--,cnt[val]--;}\n\ninline int query(int key){\n\tfor(int i=1;i<=where(maxx);i++){\n\t\tif(key<=s[i]){\n\t\t\tfor(int j=L(i);j<=R(i);j++){\n\t\t\t\tif(key<=cnt[j]) return j;\n\t\t\t\tkey-=cnt[j];\n\t\t\t}\n\t\t}\n\t\telse key-=s[i];\n\t}//\u503c\u57df\u5206\u5757\u7684\u7384\u5999\u64cd\u4f5c\n\treturn 0;\n}\n\ninline int Query(int l,int r,int key){\n\tint idl=bl[l],idr=bl[r];\n\tif(idl==idr){\n\t\tfor(int i=l;i<=r;i++) ins(c[idl][i-pre_len[idl]]);\n\t\tint res=query(key);\n\t\tfor(int i=l;i<=r;i++) del(c[idl][i-pre_len[idl]]);\n\t\treturn res;\n\t}\n\tfor(int i=l;i<=pre_len[c[idl].rb];i++) ins(c[idl][i-pre_len[idl]]);\n\tfor(int i=pre_len[idr]+1;i<=r;i++) ins(c[idr][i-pre_len[idr]]);\n\tint res=0;\n\tfor(int i=1;i<=where(maxx);i++){\n\t\tint now=s[i]+Size[c[idr].lb][i]-Size[idl][i];\n\t\tif(key<=now){\n\t\t\tfor(int j=L(i);;j++){\n\t\t\t\tint _=cnt[j]+Alive[c[idr].lb][j]-Alive[idl][j];\n\t\t\t\tif(key<=_){res=j;break;}\n\t\t\t\telse key-=_;\n\t\t\t}break;\n\t\t}else key-=now;\n\t}//\u503c\u57df\u5206\u5757\uff0c\u591a\u4e48\u7f8e\u5999\n\tfor(int i=l;i<=pre_len[c[idl].rb];i++) del(c[idl][i-pre_len[idl]]);\n\tfor(int i=pre_len[idr]+1;i<=r;i++) del(c[idr][i-pre_len[idr]]);\n\treturn res;\n}\n\nvoid split(int id){//\u628a\u7b2cid\u5757\u62c6\u4e86\n\tc[++block_len].lb=id;c[block_len].rb=c[id].rb;c[c[id].rb].lb=block_len;c[id].rb=block_len;\n\tint now=block_size+1;for(;now<=c[id].len;now++){c[block_len].push_back(c[id][now]),c[block_len].ins(c[id][now]),c[id].del(c[id][now]);}\n\tpre_len[block_len]=pre_len[id]+(c[id].len=block_size);\n\tfor(int i=pre_len[block_len]+1;i<=pre_len[block_len]+c[block_len].len;i++) bl[i]=block_len;\n\tfor(int i=1;i<=where(maxx);i++) Size[block_len][i]=(Size[id][i]=Size[c[id].lb][i]+c[id].size[i])+c[block_len].size[i];\n\tfor(int i=1;i<=maxx;i++) Alive[block_len][i]=(Alive[id][i]=Alive[c[id].lb][i]+c[id].alive[i])+c[block_len].alive[i];\n}\n\nvoid insert(int pos,int val){\n\tint id=bl[pos];int _=pos-pre_len[id];\n\tc[id].insert(_,val);for(int i=c[id].rb;i;i=c[i].rb) pre_len[i]++;c[id].ins(val);\n\tfor(int i=id;i;i=c[i].rb){\n\t\tSize[i][where(val)]++,Alive[i][val]++;\n\t\tbl[pre_len[i]+c[i].len]=i;bl[pre_len[i]+1]=i;\n\t}\n\tif(c[id].len>=block_size*2) split(id);//\u8981\u662f\u53d1\u73b0\u5b83\u4e0d\u5bf9\u52b2\n}\n\nvoid build(){\n\tblock_size=maxl;for(int i=1;i<=n;i++) bl[i]=(i-1)/block_size+1;\n\tblock_len=bl[n];bl[0]=1;//\u6211\u7684\u4ee3\u7801\u4e2d\u8981\u662f\u88ab\u8981\u6c42\u628a\u4e00\u4e2a\u6570\u63d2\u5230\u7b2c\u4e00\u4e2a\u6570\uff0c\u4ed6\u4f1a\u53bb\u627e\u7b2c\u96f6\u4e2a\u6570\u5728\u54ea\u5757\u91cc\u9762\n\tfor(int i=1;i<=block_len;i++){\n\t\tc[i].lb=i-1,c[i].rb=i+1;\n\t}\n\tc[block_len].rb=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint x;io>>x;maxx=max(maxx,++x);//\u56e0\u4e3a\u6211\u8ba8\u538c0\uff0c\u6240\u4ee5\u6240\u6709\u51fa\u73b0\u7684\u4ef7\u503c\u90fd\u88ab\u6211\u52a01\u4e86\n\t\tc[bl[i]].push_back(x);c[bl[i]].ins(x);\n\t}\n\tfor(int i=1;i<=block_len;i++){\n\t\tpre_len[i]=pre_len[i-1]+c[i-1].len;\n\t\tfor(int j=1;j<=where(maxx);j++) Size[i][j]=Size[i-1][j]+c[i].size[j];\n\t\tfor(int j=1;j<=maxx;j++) Alive[i][j]=Alive[i-1][j]+c[i].alive[j];\n\t}\n}\n\nint main(){\n\tio>>n;build();io>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tchar opt=io.gc();while(opt>'Z'||opt<'A') opt=io.gc();\n\t\tif(opt=='M'){\n\t\t\tint pos,val;io>>pos>>val;pos^=last_ans,val^=last_ans;maxx=max(maxx,val+1);\n\t\t\tmodify(pos,val+1);\n\t\t}\n\t\tif(opt=='Q'){\n\t\t\tint l,r,k;io>>l>>r>>k;l^=last_ans,r^=last_ans,k^=last_ans;\n\t\t\tio<<(last_ans=Query(l,r,k)-1);//\u7531\u4e8e\u6211\u628a\u6240\u6709\u51fa\u73b0\u5143\u7d20+1\uff0c\u8fd9\u91cc\u8981-1\n\t\t}\n\t\tif(opt=='I'){\n\t\t\tint pos,val;io>>pos>>val;pos^=last_ans,val^=last_ans;maxx=max(maxx,val+1);\n\t\t\tinsert(pos-1,val+1);//\u610f\u601d\u662f\u628a(val+1)\u585e\u5230(pos-1)\u540e\u9762\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u5f53\u7136\uff0c\u9700\u8981\u5438\u6c27\u624d\u80fd\u5361\u8fc7\u65f6\u9650\u3002\u8fd9\u91cc\u6211\u9009\u62e9\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u6240\u5c5e\u5757\u548c\u6bcf\u4e2a\u5757\u4e4b\u524d\u6709\u51e0\u4e2a\u6570\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u7ef4\u62a4\uff0c\u8981\u7528\u7684\u65f6\u5019$O(\\sqrt{n})$\u626b\u4e00\u904d\uff0c\u5f97\u5230\u5176\u6240\u5c5e\u5757\u548c\u5757\u524d\u6709\u51e0\u4e2a\u6570\u3002\n\n\u4f60\u751a\u81f3\u53ef\u4ee5\u5728\u5757\u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u94fe\u8868\u3002\u8fd9\u4e2a\u5199\u6cd5\u5e38\u6570\u6bd4\u8d77\u5757\u5185\u7ef4\u62a4\u6570\u7ec4\u8981\u5927\u4e00\u4e9b\uff0c\u4e0d\u8fc7\u4eb2\u6d4b\u4e5f\u80fd\u5361\u8fc7\u53bb\u3002",
        "postTime": 1599826651,
        "uid": 101984,
        "name": "Rui_R",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4278 \u3010\u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c\u3011"
    },
    {
        "content": "\u6211\u662f\u6765\u7ed9daniel14311531\u5927\u4f6c\u7684$n\\sqrt n$[\u65b9\u6cd5](https://www.luogu.org/blog/acdevelopers/dai-cha-ru-ou-jian-k-xiao-zhi-geng-wei-you-xiu-di-xie-fa)\u505a\u6ce8\u89e3\u7684\u3002\n\n1.\u5206\u5757\u600e\u4e48\u9ad8\u6548\u6c42\u7b2cK\u5927\u3002\n\u9996\u5148\u7f51\u4e0a\u90a3\u4e9b\u4e8c\u5206\u5957\u4e3b\u5e2d\u6811\u5957\u5206\u5757\u4e4b\u7c7b\u7684\u90fd\u4e0d\u5728\u6211\u4eec\u7684\u8ba8\u8bba\u8303\u56f4\uff0c\u4e00\u70b9\u4e5f\u4e0d\u4f18\u7f8e\u3002\n\n\n\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e2a\u5927\u6740\u5668\uff0c\u65f6\u4ee3\u7684\u65b0\uff08\u5bf9\u535a\u4e3b\u6765\u8bf4\u662f\u65b0\uff09\u79d1\u6280\uff1a\n\n\u503c\u57df\u5206\u5757\u3002\n\n\u5c31\u662f\u5bf9\u67e5\u8be2\u7684\u503c\u57df\u8fdb\u884c\u5206\u5757\u3002\n\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u8bbe\u4e24\u4e2a\u6570\u7ec4S1[]\u548cS2[]\n\nS1[i] = \u503c\u5728$[i*S,i*S+S-1]$\u95f4\u7684\u6570\u7684\u6570\u91cf\u3002\n\nS2[i] = \u503c\u4e3a$i$\u7684\u6570\u7684\u6570\u91cf\u3002\n\n\u90a3\u4e48\u6c42\u7b2cK\u5927\u5c31\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5757\uff0c\u6c42\u51fa\u7b2cK\u5927\u5728\u503c\u57df\u4e2d\u7684\u54ea\u4e00\u5757\u3002\n\n\u7136\u540e\u518d\u5728\u90a3\u4e00\u5757\u4e2d\u679a\u4e3e\u6743\u503c\u3002\n\n\n\u4e24\u6b65\u90fd\u662f$O(\\sqrt n)$\u7684\u3002\n\n\u90a3\u4e48\u5982\u679c\u8de8\u8d8a\u591a\u5757\uff0c\u6211\u4eec\u5c31\u9700\u8981\u505a\u5230$O(1)$\u6c42\u51fa\u4e00\u4e2a\u533a\u95f4\u5185\u6240\u6709\u5757\u7684S1,S2\n\n\u53ef\u4ee5\u524d\u7f00\u548c\u3002\n\u6070\u597d \u3002\u3002\u3002\u3002\u3002\u8fd9\u4e2aS1,S2\u7684\u4fee\u6539\u662f$O(1)$\u7684\uff0c\u90a3\u4e48\u4fee\u6539\u524d\u7f00\u548c\u5c31\u662f$O(\\sqrt n)$\u7684\uff0c\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u8fd8\u662f$O(\\sqrt n)$\u7684\uff01\n\u4e0d\u5b8c\u6574\u7684\u5757\u628a\u4ed6\u4eec\u7684S1,S2\u66b4\u529b\u6c42\u51fa\u5373\u53ef\u3002\n\n\n2.\u5982\u4f55\u5728\u6709\u63d2\u5165\u7684\u60c5\u51b5\u4e0b\u7ef4\u62a4\u5206\u5757\u3002\n\n\u5757\u72b6\u94fe\u8868\u3002\n\n\u5c31\u662f\u4e0d\u628a\u5757\u653e\u5728\u5e8f\u5217\u4e0a\u3002\n\n\u524d\u4e00\u5757\u548c\u540e\u4e00\u5757\u4e92\u76f8\u8fde\u63a5\u50cf\u94fe\u8868\u4e00\u6837\u3002\n\n\u5757\u4e2d\u662f\u4e00\u4e2a\u6570\u7ec4\u3002\n\n\u6709$O(\\sqrt n)$\u4e2a\u5757\uff0c\u5757\u5927\u5c0f\u4e3a$O(\\sqrt n)$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u76f8\u5f53\u4e8e\u662f\u628a\u5bf9\u4e8e\u63d2\u5165-\u67e5\u8be2\u64cd\u4f5c$O(1)-O(n)$\u7684\u94fe\u8868\u548c$O(n)-O(1)$\u7684\u6570\u7ec4\u6309\u7167\u4e00\u5757\u4e00\u5757\u4ea4\u9519\u5b9e\u73b0\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u5bf9\u4e8e\u63d2\u5165-\u67e5\u8be2\u64cd\u4f5c$O(1)+O(\\sqrt n)-O(\\sqrt n)+O(1)$\u7684\u6570\u636e\u7ed3\u6784-\u5757\u72b6\u94fe\u8868\u3002\n\u5176\u5b9e\u94fe\u8868\u5957\u94fe\u8868\u4e5f\u662f$O(\\sqrt n) - O(\\sqrt n)$\u7684\u3002\u3002\u3002\u3002\u3002\u3002\u4f46\u662f\u5b9e\u73b0\u65f6\u4f1a\u5f15\u8d77\u4e0d\u9002\u3002\n\u5206\u5757\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u53ef\u4ee5\u7528\u5757\u72b6\u94fe\u8868\u5b9e\u73b0\uff0c\u5b9e\u73b0\u65b9\u6cd5\u7c7b\u4f3c\u3002\n\u4e0a\u9762\u7684\u503c\u57df\u5206\u5757\u540c\u7406\u3002\n\n\u771f\u7684\u6bd4$O(n\\log ^2n)$\u5feb\u597d\u591a\u3002\u3002\u3002\u3002\u3002\u3002\u3002\nAC Code:\n```cpp\n#include<bits/stdc++.h>\n#define maxn 70005\n#define S 310\nusing namespace std;\n\nchar cb[1<<17],*cs=cb,*ct=cb;\n#define getc() (cs==ct&&(ct=(cs=cb)+fread(cb,1,1<<17,stdin),cs==ct)?0:*cs++)\ninline void read(int &res){\n\tchar ch;\n\tfor(;!isdigit(ch=getc()););// if(ch=='-') f=1;\n\tfor(res=ch-'0';isdigit(ch=getc());res=res*10+ch-'0');\n\t//(f) && (res=-res);\n}\n\nint n;\n\nstruct block{\n\tint lb,rb;\n\tint a[S*2+10],cntS[maxn/S+5],cnt[maxn],siz;\n}B[maxn/S],Nb;\nint flb = 1 , cnt_bl = 0 , Mx = 0;\nint id[maxn];\n\nint Query(int x,int y,int k){\n\tint lb=1,rb=1,ret=0;\n\tfor(;B[lb].siz && B[lb].siz<x;x-=B[lb].siz,lb=B[lb].rb);\n\tfor(;B[rb].siz && B[rb].siz<y;y-=B[rb].siz,rb=B[rb].rb);\n\t//printf(\"%d %d %d\\n\",lb,rb,B[1].siz);\n\tif(lb == rb){\n\t\t//printf(\"%d %d\\n\",x,y);\n\t\tfor(int i=x-1,j=y-1,tmp;i<=j;i++){\n\t\t\t//printf(\"%d\\n\",id[B[lb].a[i]]);\n\t\t\ttmp = B[lb].a[i];\n\t\t\tNb.cntS[id[tmp]]++,\n\t\t\tNb.cnt[tmp]++;\n\t\t}\n\t\tfor(int i=1;i<=id[maxn-1];i++){\n\t\t\t//printf(\"%d %d\\n\",Nb.cntS[i],k);\n\t\t\tif(Nb.cntS[i]>=k){\n\t\t\t\tfor(int j=(i-1)*S;;j++){\n\t\t\t\t\t//printf(\"%d %d\\n\",j,k);\n\t\t\t\t\tif(k<=Nb.cnt[j]){ ret=j;break; }\n\t\t\t\t\telse k-=Nb.cnt[j];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse k-=Nb.cntS[i];\n\t\t}\n\t\tfor(int i=x-1,j=y-1,tmp;i<=j;i++){\n\t\t\t//printf(\"%d\\n\",id[B[lb].a[i]]);\n\t\t\ttmp = B[lb].a[i];\n\t\t\tNb.cntS[id[tmp]]--,\n\t\t\tNb.cnt[tmp]--;\n\t\t}\n\t\treturn ret;\n\t}\n\tfor(int i=x-1,tmp;i<B[lb].siz;i++){\n\t\ttmp = B[lb].a[i],\n\t\tNb.cntS[id[tmp]]++,\n\t\tNb.cnt[tmp]++;\n\t}\n\tfor(int i=0,tmp;i<y;i++){\n\t\ttmp = B[rb].a[i],\n\t\tNb.cntS[id[tmp]]++,\n\t\tNb.cnt[tmp]++;\n\t}\n\trb=B[rb].lb;\n\tfor(int i=1,tmp;i<=id[Mx];i++){\n\t\ttmp = Nb.cntS[i]+B[rb].cntS[i]-B[lb].cntS[i];\n\t\tif(tmp>=k){\n\t\t\tfor(int j=(i-1)*S,res;;j++){\n\t\t\t\tres = Nb.cnt[j]+B[rb].cnt[j]-B[lb].cnt[j];\n\t\t\t\tif(k<=res){ ret=j;break; }\n\t\t\t\telse k-=res;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\telse k-=tmp;\n\t}\n\trb=B[rb].rb;\n\tfor(int i=x-1,tmp;i<B[lb].siz;i++){\n\t\ttmp = B[lb].a[i],\n\t\tNb.cntS[id[tmp]]--,\n\t\tNb.cnt[tmp]--;\n\t}\n\tfor(int i=0,tmp;i<y;i++){\n\t\ttmp = B[rb].a[i],\n\t\tNb.cntS[id[tmp]]--,\n\t\tNb.cnt[tmp]--;\n\t}\n\treturn ret;\n}\n\nvoid Modify(int x,int y){\n\tint lb=1;\n\tfor(;B[lb].siz && B[lb].siz<x;x-=B[lb].siz,lb=B[lb].rb);\n\tint py = B[lb].a[x-1]; B[lb].a[x-1] = y;\n\tfor(;lb;lb=B[lb].rb)\n\t\tB[lb].cntS[id[py]]--,\n\t\tB[lb].cntS[id[y]]++,\n\t\tB[lb].cnt[py]--,\n\t\tB[lb].cnt[y]++;\n}\n\nvoid split(int x){\n\tB[++cnt_bl].lb=x,B[cnt_bl].rb=B[x].rb;\n\tB[B[x].rb].lb=cnt_bl,B[x].rb=cnt_bl;\n\tB[cnt_bl].siz = S , B[x].siz -= S;\n\tmemcpy(B[cnt_bl].a,B[x].a+B[x].siz,S*sizeof(int));\n\tmemcpy(B[cnt_bl].cntS,B[x].cntS,sizeof B[x].cntS);\n\tmemcpy(B[cnt_bl].cnt,B[x].cnt,sizeof B[x].cnt);\n\tfor(int i=0;i<S;i++) \n\t\tB[x].cntS[id[B[cnt_bl].a[i]]]--,\n\t\tB[x].cnt[B[cnt_bl].a[i]]--;\n}\n\nvoid Insert(int x,int y){\n\tint lb=1;x--;\n\tfor(;B[lb].siz && B[lb].siz<x;x-=B[lb].siz,lb=B[lb].rb);\n\tfor(int i=B[lb].siz++;i>x;i--) B[lb].a[i] = B[lb].a[i-1];\n\tB[lb].a[x]=y;\n\tfor(int i=lb;i;i=B[i].rb)\n\t\tB[i].cntS[id[y]]++,\n\t\tB[i].cnt[y]++;\n\tif(B[lb].siz>=2*S) \n\t\tsplit(lb);\n}\n\nint main(){\n\t//int t1 = clock();\n\t//freopen(\"1.in\",\"r\",stdin);\n\t//freopen(\"1.out\",\"w\",stdout);\n\tread(n);\n\tfor(int i=0;i<maxn;i++) id[i]=i/S+1;\n\tcnt_bl=id[n-1];\n\tfor(int i=0;i<n;i++){\n\t\tint u = id[i] , x;\n\t\tread(x);\n\t\tB[u].a[B[u].siz++] = x;\n\t\tB[u].cntS[id[x]]++;\n\t\tB[u].cnt[x]++;\n\t\tMx = max(Mx , x);\n\t}\n\tfor(int i=2;i<=cnt_bl;i++)\n\t{\n\t\tB[i-1].rb=i,B[i].lb=i-1;\n\t\tfor(int j=0;j<=Mx;j++){\n\t\t\tB[i].cnt[j] += B[i-1].cnt[j];\n\t\t\tif(j==0 || id[j]!=id[j-1]) \n\t\t\t\tB[i].cntS[id[j]] += B[i-1].cntS[id[j]];\n\t\t}\n\t}\n\tint q;\n\tread(q);\n\tchar s[2];\n\tfor(int x,y,k,la=0;q--;){\n\t\twhile(!isalpha(s[0]=getc()));\n\t\t//puts(s);\n\t\t//printf(\"@@@@%d\\n\",allsiz);\n\t\tif(s[0] == 'Q'){\n\t\t\tread(x),read(y),read(k);\n\t\t\tx ^= la , y ^= la , k ^= la;\n\t\t\t//printf(\"@@%d %d %d\\n\",x,y,k);\n\t\t\tprintf(\"%d\\n\",la=Query(x,y,k));\n\t\t}\n\t\telse if(s[0] == 'M'){\n\t\t\tread(x),read(y);\n\t\t\tx ^= la , y ^= la;\n\t\t\tMx = max(Mx ,y);\n\t\t\t//printf(\"$$%d %d\\n\",x,y);\n\t\t\tModify(x,y);\n\t\t}\n\t\telse {\n\t\t\tread(x),read(y);\n\t\t\tx^=la , y ^= la;\n\t\t\tMx = max(Mx , y);\n\t\t\t//printf(\"##%d %d\\n\",x,y);\n\t\t\tInsert(x,y);\n\t\t}\n\t\t//puts(s);\n\t\t//printf(\"%d\\n\",B[1].siz);\n\t}\n\t//freopen(\"CON\",\"w\",stdout);\n\t//printf(\"%d\\n\",clock()-t1);\n}\n```\n",
        "postTime": 1553180482,
        "uid": 30037,
        "name": "Freopen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4278 \u3010\u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c\u3011"
    },
    {
        "content": "**[\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u7a9d\u7684\u4e2a\u4eba\u535a\u5ba2](http://39.107.58.77/index.php/archives/luogu-p4278.html).**\n\n~~\u7b80\u5355\u9898~~,~~\u4e0d\u7528\u5361\u5e38~~.\n\n![](http://39.107.58.77/usr/uploads/2020/07/2378295321.png)\n\n## \u89e3\u9898\u601d\u8def\n\n\u9ed8\u8ba4$n$\u8be2\u95ee,\u503c\u57df\u540c\u9636.\n\n\u9996\u5148\u770b\u5230\u5f85\u63d2\u5165\u8003\u8651\u5e73\u8861\u6811\u548c\u5757\u72b6\u94fe\u8868.\u7406\u8bba\u4e0a\u5e73\u8861\u6811\u76f8\u5173\u7684\u6709$\\Theta(n\\lg^3n)$\u7684\u89e3\u6cd5,\u4f46\u662f\u7a9d\u4e0d\u4f1a\u800c\u4e14\u8fd9\u79cd\u89e3\u6cd5\u5e38\u6570\u5de8\u5927,\u6240\u4ee5\u8003\u8651\u5757\u72b6\u94fe\u8868.\n\n\u5982\u679c\u505a\u8fc7[\u6d1b\u8c37P4119 \\[Ynoi2018\\]\u672a\u6765\u65e5\u8bb0](http://39.107.58.77/index.php/archives/luogu-p4119.html)\u5c31\u4f1a\u5bb9\u6613\u5730\u60f3\u5230\u5728\u5206\u5757\u91cc\u9762\u67e5\u7b2c$k$\u5927\u4f1a\u7528\u503c\u57df\u5206\u5757,\u5957\u4e0a\u53bb\u5c31\u884c\u4e86.\n\n### \u4fee\u6539\n\n\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684,\u627e\u5230\u6240\u5728\u7684\u5757(\u600e\u4e48\u627e\u540e\u9762\u8bf4),\u4fee\u6539\u4e4b\u540e\u66f4\u65b0\u503c\u57df\u5206\u5757\u7684\u524d\u7f00\u548c\u5373\u53ef.\n\n### \u67e5\u8be2\n\n**\u503c  \u57df  \u5206  \u5757**.\n\n### \u63d2\u5165\n\n~~\u5c31\u548c\u5757\u72b6\u94fe\u8868\u7684\u4e00\u6837,\u653e\u8fdb\u53bb\u5c31\u884c.~~\n\n#### \u5757\u72b6\u94fe\u8868\n\n\u597d\u5427\u4e3b\u8981\u7684\u96be\u70b9\u5c31\u5728\u8fd9\u91cc.\u5757\u72b6\u94fe\u8868\u5927\u6982\u662f\u957f\u6210\u8fd9\u4e2a\u6837\u5b50\u7684\n\n![](http://39.107.58.77/usr/uploads/2020/07/3584722889.png)\n\n\u8b6c\u5982\u7a9d\u8981\u5728`E`\u540e\u9762\u63d2\u5165\u4e00\u4e2a`J`,\u90a3\u5c31\u5c06\u540c\u4e00\u5757\u91cc\u9762\u7684`F`\u5f80\u540e\u79fb\u4e00\u4f4d,\u7136\u540e\u628a`J`\u653e\u8fdb\u53bb\u5c31\u884c\u4e86,\u590d\u6742\u5ea6\u662f$\\Theta(\u5757\u957f)$\u7684.\u50cf\u8fd9\u6837\n\n![](http://39.107.58.77/usr/uploads/2020/07/3687332805.png)\n\n\u5982\u679c\u518d\u63a5\u7740\u5728`J`\u540e\u9762\u63d2\u5165\u4e00\u4e2a`K`\u548c\u4e00\u4e2a`L`,\u5c31\u5206\u522b\u662f\n\n![](http://39.107.58.77/usr/uploads/2020/07/2591586136.png)\n\n![](http://39.107.58.77/usr/uploads/2020/07/3486188200.png)\n\n\u4f46\u662f\u8fd9\u65f6\u5019\u53d1\u73b0\u5982\u679c\u7a9d\u4eec\u4e00\u76f4\u5728\u540c\u4e00\u5757\u91cc\u9762\u63d2,\u90a3\u5757\u957f\u5c31\u4f1a\u8fbe\u5230$n$,\u518d\u63d2\u5165\u65f6\u590d\u6742\u5ea6\u5c31\u592a\u9ad8\u4e86,\u6240\u4ee5\u5f53\u5757\u957f\u8fbe\u5230$2\\sqrt n$\u65f6\u8981\u5c06\u8fd9\u4e2a\u5757\u62c6\u6210\u4e24\u4e2a$\\sqrt n$\u7684\u5c0f\u5757,\u5c31\u50cf\u8fd9\u6837\n\n![](http://39.107.58.77/usr/uploads/2020/07/2042476918.png)\n\n\u5f53\u7136\u5b9e\u9645\u4e0a\u7684\u5c0f\u5757\u5e76\u4e0d\u662f\u5728\u4e2d\u95f4,\u800c\u662f\u5728\u6700\u540e\u9762,\u901a\u8fc7\u7ef4\u62a4\u5de6\u53f3\u4e24\u8fb9\u7684\u5757\u6765\u8fde\u6210\u4e00\u4e2a\u94fe\u8868,\u6240\u4ee5\u53eb\u5757\u72b6\u94fe\u8868.\u81f3\u4e8e\u5177\u4f53\u627e\u67d0\u4e2a\u5757,\u5c31\u76f4\u63a5\u6cbf\u7740\u94fe\u8868\u4f9d\u6b21\u627e\u8fc7\u53bb\u5373\u53ef,\u56e0\u4e3a\u6700\u591a\u65b0\u5efa$\\sqrt n$\u4e2a\u5757,\u6240\u4ee5\u590d\u6742\u5ea6\u4ecd\u7136\u662f$\\sqrt n$.\n\n\u5177\u4f53\u5230\u8fd9\u9053\u9898,\u90a3\u7a9d\u4eec\u5c31\u8981\u5c06\u539f\u6765\u7684\u5757(\u4f1a\u53d8\u6210\u524d\u4e00\u4e2a\u5c0f\u5757)\u7684\u524d\u7f00\u548c\u4fe1\u606f\u590d\u5236\u5230\u540e\u9762\u7684\u5c0f\u5757,\u7136\u540e\u5c06\u539f\u6765\u5927\u5757\u7684\u540e$\\sqrt n$\u4e2a\u6570\u653e\u8fdb\u540e\u9762\u5c0f\u5757,\u5e76\u5728\u524d\u9762\u7684\u5757\u7684\u524d\u7f00\u548c\u4fe1\u606f\u51cf\u53bb.\n\n```cpp\n/*\u590d\u5236\u524d\u7f00\u548c\u4fe1\u606f*/\nfor (int j=0;j<q;++j) b[cnt].sbk[j]=s->sbk[j];\nfor (int j=0;j<70001;++j) b[cnt].snm[j]=s->snm[j];\n/*\u51cf\u53bb\u653e\u5230\u540e\u9762\u7684\u5c0f\u5757\u7684\u6570\u7684\u524d\u7f00\u548c\u4fe1\u606f*/\nfor (int j=0;j<q;++j) {\n\tb[cnt][j]=s->a[j+q];\n\t--(s->sbk[p[b[cnt][j]]]);\n\t--(s->snm[b[cnt][j]]);\n}\n/*\u7ef4\u62a4\u5269\u4e0b\u76f8\u5173\u5185\u5bb9*/\n```\n\n## \u590d\u6742\u5ea6\u5206\u6790\n\n\u67e5\u8be2\u548c\u4fee\u6539\u663e\u7136\u90fd\u662f$\\Theta(\\sqrt n)$\u7684(\u548c\u672a\u6765\u65e5\u8bb0\u7c7b\u4f3c),\u63d2\u5165\u53ef\u4ee5\u770b\u5230\u590d\u5236\u524d\u7f00\u548c\u4fe1\u606f\u662f\u5355\u6b21$\\Theta(n)$\u7684,\u4f46\u662f\u6700\u591a\u4f1a\u5efa$\\sqrt n$\u4e2a\u65b0\u5757,\u6240\u4ee5\u603b\u4f53\u4e0a\u4ecd\u7136\u662f$\\Theta(\\sqrt n)$.\n\n\u5e76\u4e14\u8fd9\u9053\u9898\u4e0d\u50cfYnoi\u90a3\u4e48\u6bd2\u7624,\u4e0d\u7528\u8c03\u5757\u957f,\u76f4\u63a5\u53d6$\\lceil\\sqrt{70000}\\rceil=265$\u5373\u53ef,\u4f46\u662f\u8981\u8bb0\u5f97\u6570\u7ec4\u8981\u5f00\u5230$265^2=70225$.\n\n## Code\n\n\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684,\u6ce8\u610f\u7ec6\u8282.\u53e6\u5916\u5efa\u8bae\u628a\u5757\u957f\u8c03\u5230$3$\u5de6\u53f3\u8dd1\u6837\u4f8b,\u80fd\u8fc7\u518d\u8c03\u56de$265$\u4ea4.\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\n#define gc() (p0==p1&&(p1=(p0=buf)+fread(buf,1,1048577,stdin),p0==p1)?EOF:*p0++)\n\nconst int q=265;\n\nint cnt,p[70505];\nchar buf[1048577],*p0,*p1;\nstruct bxt {\n\tint lps,rps,siz;\n\tint a[545],sbk[545],snm[70505];\n\tbxt *lbk,*rbk;\n\tint& operator [] (const int p) {\n\t\treturn a[p];\n\t}\n} b[545],fir,lst;\n\ninline int read() {\n\tint re=0; char ch=gc();\n\twhile (ch<48||ch>57) ch=gc();\n\twhile (ch>47&&ch<58) {\n\t\tre=(re<<3)+(re<<1)+(ch^48);\n\t\tch=gc();\n\t}\n\treturn re;\n}\n\ninline int ropt() {\n\tchar ch;\n\twhile (true) switch (ch=gc()) {\n\t\tcase 81: return 0;\n\t\tcase 77: return 1;\n\t\tcase 73: return 2;\n\t\tdefault: break;\n\t}\n}\n\ninline int find_kth(int opl,int opr,int opk) {\n\tstatic int fbk[265],fnm[70505];\n\tint ql=opl,qr=opr,sum=0,ret=-1;\n\tbxt *pl=NULL,*pr=NULL;\n\tfor (bxt *i=fir.rbk;i;i=i->rbk) {\n\t\tif ((!pl)&&i->siz>ql) pl=i;\n\t\telse if (!pl) ql-=i->siz;\n\t\tif ((!pr)&&i->siz>qr) pr=i;\n\t\telse if (!pr) qr-=i->siz;\n\t}\n\tif (pl==pr) {\n\t\tfor (int i=ql;i<=qr;++i) {\n\t\t\t++fbk[p[pl->a[i]]]; ++fnm[pl->a[i]];\n\t\t}\n\t\tfor (int i=0;i<q;++i)\n\t\t\tif ((sum+=fbk[i])>=opk) {\n\t\t\t\tfor (int j=(i+1)*q-1;;--j)\n\t\t\t\t\tif ((sum-=fnm[j])<opk) {\n\t\t\t\t\t\tret=j; break;\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\tfor (int i=ql;i<=qr;++i) {\n\t\t\t--fbk[p[pl->a[i]]]; --fnm[pl->a[i]];\n\t\t}\n\t\treturn ret;\n\t}\n\tfor (int i=ql;i<pl->siz;++i) {\n\t\t++fbk[p[pl->a[i]]]; ++fnm[pl->a[i]];\n\t}\n\tfor (int i=0;i<=qr;++i) {\n\t\t++fbk[p[pr->a[i]]]; ++fnm[pr->a[i]];\n\t}\n\tfor (int i=0;i<q;++i)\n\t\tif ((sum+=(pr->lbk->sbk[i])-(pl->sbk[i])+fbk[i])>=opk) {\n\t\t\tfor (int j=(i+1)*q-1;;--j)\n\t\t\t\tif ((sum-=(pr->lbk->snm[j])-(pl->snm[j])+fnm[j])<opk) {\n\t\t\t\t\tret=j; break;\n\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\tfor (int i=ql;i<pl->siz;++i) {\n\t\t--fbk[p[pl->a[i]]]; --fnm[pl->a[i]];\n\t}\n\tfor (int i=0;i<=qr;++i) {\n\t\t--fbk[p[pr->a[i]]]; --fnm[pr->a[i]];\n\t}\n\treturn ret;\n}\n\ninline void update(int opp,int opx) {\n\tint w=0,opo=0; bxt *r=fir.rbk;\n\tfor (;r->rps<opp;r=r->rbk) w+=r->siz;\n\tfor (int i=0;i<r->siz;++i) if (w+i==opp)\n\t\t{opo=r->a[i]; r->a[i]=opx;}\n\tfor (;r!=&lst;r=r->rbk) {\n\t\t--(r->sbk[p[opo]]); --(r->snm[opo]);\n\t\t++(r->sbk[p[opx]]); ++(r->snm[opx]);\n\t}\n}\n\ninline void insert(int opp,int opx) {\n\tint w=0; bxt *r=fir.rbk,*s;\n\tfor (;r->rps<opp;r=r->rbk) w+=r->siz;\n\tif (r==&lst) w-=(r=r->lbk)->siz;\n\tfor (int i=0;i<=r->siz;++i) if (w+i==opp) {\n\t\tfor (int j=r->siz;j>i;--j)\n\t\t\tr->a[j]=r->a[j-1]; r->a[i]=opx;\n\t}\n\t++((s=r)->siz); --(r->lps);\n\tfor (;r!=&lst;r=r->rbk) {\n\t\t++(r->lps); ++(r->rps);\n\t\t++(r->sbk[p[opx]]); ++(r->snm[opx]);\n\t}\n\tif (s->siz==(q<<1)) {\n\t\tfor (int j=0;j<q;++j) b[cnt].sbk[j]=s->sbk[j];\n\t\tfor (int j=0;j<70001;++j) b[cnt].snm[j]=s->snm[j];\n\t\tfor (int j=0;j<q;++j) {\n\t\t\tb[cnt][j]=s->a[j+q];\n\t\t\t--(s->sbk[p[b[cnt][j]]]);\n\t\t\t--(s->snm[b[cnt][j]]);\n\t\t}\n\t\ts->siz=b[cnt].siz=q;\n\t\tb[cnt].rps=(s->rps=(b[cnt].lps=s->lps+q)-1)+q;\n\t\tb[cnt].lbk=s; b[cnt].rbk=s->rbk;\n\t\ts->rbk->lbk=&b[cnt]; s->rbk=&b[cnt]; ++cnt;\n\t}\n}\n\nint main() {\n\tint n=read(),m,las=0,x,y,z;\n\tmemset(fir.sbk,0x00,sizeof(fir.sbk));\n\tmemset(fir.snm,0x00,sizeof(fir.snm));\n\tfor (int i=0;i<70505;++i) p[i]=i/q;\n\tfor (int i=0;i<n;++i) {\n\t\tb[p[i]][i%q]=read();\n\t\t++b[p[i]].siz;\n\t}\n\tfor (int i=0;i<=p[n-1];++i) {\n\t\tb[i].lps=(i?b[i-1].rps+1:0);\n\t\tb[i].rps=b[i].lps+b[i].siz-1;\n\t\t(b[i].lbk=i?&b[i-1]:&fir)->rbk=&b[i];\n\t\tfor (int j=0;j<q;++j)\n\t\t\tb[i].sbk[j]+=b[i].lbk->sbk[j];\n\t\tfor (int j=0;j<70001;++j)\n\t\t\tb[i].snm[j]+=b[i].lbk->snm[j];\n\t\tfor (int j=0;j<b[i].siz;++j) {\n\t\t\t++b[i].sbk[p[b[i][j]]];\n\t\t\t++b[i].snm[b[i][j]];\n\t\t}\n\t}\n\tb[p[n-1]].rbk=&lst;\n\tlst.lbk=&b[p[n-1]];\n\tlst.rps=0x3fffffff;\n\tcnt=p[n-1]+1; m=read();\n\twhile (m--) {\n\t\tz=-1;\n\t\tswitch (ropt()) {\n\t\t\tcase 0:\n\t\t\t\tx=(read()^las)-1; y=(read()^las)-1;\n\t\t\t\tz=read()^las;\n\t\t\t\tprintf(\"%d\\n\",las=find_kth(x,y,z));\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tx=(read()^las)-1; y=read()^las;\n\t\t\t\tupdate(x,y); break;\n\t\t\tcase 2:\n\t\t\t\tx=(read()^las)-1; y=read()^las;\n\t\t\t\tinsert(x,y); break;\n\t\t\tdefault: break;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595217737,
        "uid": 54189,
        "name": "konjacq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4278 \u3010\u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c\u3011"
    },
    {
        "content": "## \u9759\u6001\u533a\u95f4k\u5c0f\u503c\n\n\u9996\u5148\u6211\u4eec\u5148\u8003\u8651\u9759\u6001\u7ef4\u62a4\u533a\u95f4 $k$ \u5c0f\u503c\u3002\n\n\u5bb9\u6613\u60f3\u5230\u4e8c\u7ef4\u5206\u5757\uff1a\u5bf9\u503c\u57df\u4e0e\u4e0b\u6807\u90fd\u8fdb\u884c\u5206\u5757\n\n\u8003\u8651\u5982\u679c\u6240\u6709\u7684 $l$ \u5230 $r$ \u8fd9\u4e2a\u533a\u95f4\u521a\u597d\u662f\u5b8c\u6574\u7684\u5757\u7684\u65f6\u5019\uff0c\u8be5\u600e\u4e48\u7ef4\u62a4\uff1f\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5148\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $ a_{ij} $ \u8868\u793a\u5728\u7b2ci\u4e2a\u4e0b\u6807\u5757\u3001\u7b2cj\u4e2a\u503c\u57df\u5757\u7684\u6570\u7684\u4e2a\u6570\u3002\u518d\u5bf9\u6bcf\u4e00\u4e2a\u503c\u57df\u5757\u7ef4\u62a4\u524d\u7f00\u548c $ sum_{ij}=\\sum_{k=1}^i a_{kj} $\u3002\n\n\u540c\u6837\u7684\u5bf9\u4e8e\u5757\u5185\u7684\u6563\u70b9\u4e5f\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $ b_{i,j} $ \u8868\u793a\u7b2ci\u5757\u5185\u503c\u521a\u597d\u662fj\u7684\u6570\u7684\u4e2a\u6570\uff0c\u4e5f\u4e2a\u524d\u7f00\u548c\u6570\u7ec4\u3002\u7136\u540e\u5c31\u50cf\u6743\u503c\u5206\u5757\u90a3\u6837\u626b\u8fc7\u53bb\uff0c\u5373\u53ef $ T+\\frac{n}{T} $ \u6c42\u9759\u6001\u533a\u95f4 $k$ \u5c0f\u503c\u3002\n\n\u518d\u8003\u8651\uff0c\u5728\u4e0a\u9762\u7684\u57fa\u7840\u4e0a\uff0c\u989d\u5916\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff08\u5143\u7d20\u4e2a\u6570 $T_2$\uff09,\u6c42\u8fd9\u4e2a\u6570\u7ec4\u4e0e\u4e00\u4e2a\u521a\u597d\u662f\u6574\u5757\u7684\u533a\u95f4\u5408\u5e76\u8d77\u6765\u4e4b\u540e\u7684\u7b2c $k$ \u5c0f\u503c\uff0c\u600e\u4e48\u505a\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u8fd9 $T_2$ \u4e2a\u6570\u5168\u90e8\u585e\u5230\u6700\u53f3\u8fb9\u7684\u4e0b\u6807\u5757\u91cc\uff0c\u6216\u8005\u653e\u5165\u65b0\u5efa\u7684\u4e00\u4e2a\u989d\u5916\u5757\u4e2d\uff0c\u5728\u6c42\u5b8c $k$ \u5c0f\u503c\u540e\u518d\u53d6\u51fa\u6765\u3002\u56e0\u4e3a\u6211\u4eec\u6c42 $k$ \u5c0f\u503c\u4e0d\u9700\u8981\u7528\u5230\u6bd4\u6700\u53f3\u8fb9\u4e00\u5757\u8fd8\u8981\u53f3\u4fa7\u7684 $sum$ \u6570\u7ec4\uff0c\u6240\u4ee5\u4e0d\u7528\u53bb\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u53ea\u8981\u4fee\u6539\u6700\u53f3\u8fb9\u4e00\u5757\u7684 $sum$ \u503c\u5c31\u884c\u3002\n\n\u56e0\u6b64\uff0c\u5f53 $l$ \u4e0e $r$ \u4e0d\u662f\u6574\u5757\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e24\u7aef\u7684\u6563\u70b9\u5f53\u6210\u7ed9\u5b9a\u7684\u6570\u7ec4\u4e22\u8fdb\u53bb\u5c31\u884c\u4e86\u3002\n\n\u5047\u8bbe\u4e0b\u6807\u5757\u957f\u4e3a $T_2$\uff0c\u503c\u57df\u5757\u957f\u4e3a $T_1$\u3002\n\n\u6240\u4ee5\u67e5\u8be2\u4e00\u6b21\u9759\u6001\u533a\u95f4k\u5c0f\u503c\u590d\u6742\u5ea6\u662f $O(T_2+T_1+\\frac{n}{T_1})$,\u9884\u5904\u7406\u590d\u6742\u5ea6\u4e3a $O(\\frac{N}{T_2} \\times N)$\u3002\n\n## \u5e26\u63d2\u533a\u95f4k\u5c0f\u503c\n\n\u5047\u8bbe\u539f\u5e8f\u5217\u4e3a $A$,\u5219\u6211\u4eec\u5728\u4efb\u610f\u65f6\u523b\uff0c\u4efb\u53d6\u4e00\u6bb5\u533a\u95f4\uff0c\u4e0d\u8003\u8651\u4e0b\u6807\u987a\u5e8f\uff0c\u8fd9\u6bb5\u533a\u95f4\u5185\u7684\u6570\u96c6\u76f8\u5f53\u4e8e\u662f\u5e8f\u5217 $A$ \u4e2d\u53d6\u51fa\u4e00\u6bb5\uff0c\u5220\u9664\u4e00\u4e9b\u6570\uff0c\u589e\u52a0\u4e00\u4e9b\u6570\u5f97\u5230\u7684\u6570\u96c6\u3002\n\n\u4fee\u6539\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5220\u4e00\u4e2a\u63d2\u4e00\u4e2a\uff0c\u63d2\u5165\u64cd\u4f5c\u4e0d\u7528\u591a\u8bf4\u3002\n\n\u5982\u679c\u5220\u9664\u7684\u6570\u548c\u589e\u52a0\u7684\u6570\u7684\u603b\u6570\u4e3a $T_3$,\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u534a\u90e8\u5206\u63d0\u5230\u7684\u65b9\u6cd5\uff0c$O(T_3+T_2+T_1+\\frac{n}{T_1})$\uff0c\u901a\u8fc7\u7ef4\u62a4\u539f\u5e8f\u5217 $A$ \u4e0a\u7684\u533a\u95f4\u4e0e\u589e\u52a0\u7684\u6570\u5408\u8d77\u6765\u7684\u533a\u95f4\u7b2ck\u5c0f\u503c\u6765\u7ef4\u62a4\u4fee\u6539\u540e\u5e8f\u5217\u7684\u533a\u95f4\u7b2ck\u5c0f\u503c\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u94fe\u8868\uff0c\u94fe\u8868\u4e0a\u5b58\u653e\u4e00\u4e9b\u56db\u5143\u7ec4 $(l,r,tag1,tag2)$\u3002\n\n\u5bf9\u4e8e $tag1=-1$ \u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u56db\u5143\u7ec4\u8868\u793a\u539f\u6570\u7ec4\u7684 $l$ \u5230 $r$ \u7684\u8fd9\u6bb5\u533a\u95f4\uff0c$tag2$ \u53ef\u88ab\u5ffd\u7565\u3002\n\n\u5bf9\u4e8e $tag\\not=-1$ \u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u56db\u5143\u7ec4\u8868\u793a\u4e00\u4e2a\u503c\u4e3a $tag1$ \u7684\u6570\uff0c$l$ \u4e0e $r$ \u53ef\u88ab\u5ffd\u7565\u3002\u6b64\u65f6\uff0c\u82e5 $tag2=0$ \u8868\u793a\u8fd9\u662f\u63d2\u5165\u7684\u6570\uff1b\u82e5 $tag2=1$ \u8868\u793a\u8fd9\u662f\u5bf9\u4e00\u4e2a\u63d2\u5165\u7684\u6570\u505a\u4fee\u6539\u64cd\u4f5c\u5f97\u5230\u7684\u6570\uff1b\u82e5 $tag2=3$ \u8868\u793a\u8fd9\u662f\u539f\u6570\u5217\u4e0a\u7684\u67d0\u4e2a\u6570\u88ab\u505a\u4fee\u6539\u5f97\u5230\u7684\u6570\u3002\n\n\u6211\u4eec\u8bbe\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5f97\u5230\u7684\u4e00\u6bb5\u533a\u95f4\u662f\u4ece\u539f\u5e8f\u5217 $A$ \u7684\u67d0\u4e00\u4e2a\u533a\u95f4 $S$ \u7ecf\u8fc7\u4fee\u6539\u5f97\u5230\u7684\u3002\u6c42 $S$ \u533a\u95f4\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u5728\u94fe\u8868\u91cc\u626b\u4e00\u904d\u3002\n\n\u5bf9\u4e8e\u6240\u6709 $tag1!=-1$ \u7684\u60c5\u51b5\u76f8\u5f53\u4e8e\u5728S\u4e0a\u52a0\u5165\u4e86\u67d0\u4e2a\u6570\uff0c\u5176\u4e2d\u5bf9\u4e8e $tag2=3$ \u7684\u60c5\u51b5\u76f8\u5f53\u4e8e\u8fd8\u8981\u989d\u5916\u5728 $S$ \u4e2d\u53bb\u9664\u67d0\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u63d2\u5165\u6216\u8005\u4fee\u6539\u64cd\u4f5c\uff0c\u66b4\u529b\u5728\u94fe\u8868\u4e0a\u627e\uff0c\u5982\u679c\u8981\u4fee\u6539\u6216\u8005\u63d2\u5165\u7684\u4f4d\u7f6e\u521a\u597d\u5728\u67d0\u4e00\u4e2a\u56db\u5143\u7ec4\u4ee3\u8868\u7684\u533a\u95f4\u5185\uff0c\u5c31\u901a\u8fc7\u4fee\u6539l\u4e0er\u7684\u503c\u5c06\u8fd9\u4e2a\u56db\u5143\u7ec4\u5206\u6210\u4e24\u4e2a\u56db\u5143\u7ec4\uff0c\u7136\u540e\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\u518d\u6ce8\u610f\u4e00\u4e0b $tag2$ \u7684\u6807\u8bb0\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4fbf\u53ef\u4ee5\u7528 $ O(T_2+T_1+\\frac{n}{T_1}+T_3) $ \u7684\u590d\u6742\u5ea6\u5b8c\u6210\u8be2\u95ee\u64cd\u4f5c\uff0c$O(T_3)$ \u5b8c\u6210\u4fee\u6539\u64cd\u4f5c\u3002\n\n\u4f46\u662f\u8fd9\u6837\u663e\u7136\u5f53\u94fe\u8868\u5185\u8282\u70b9\u8fc7\u591a\u7684\u65f6\u5019\u4f1a\u51fa\u73b0 $T_3=N$ \u7684\u60c5\u51b5\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u4f18\u5316\uff1a\n\n\u5f53\u94fe\u8868\u5185\u7684\u8282\u70b9\u4e2a\u6570\u8d85\u8fc7\u67d0\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u94fe\u8868\u91cc\u7684\u6570\u53d6\u51fa\u6765\u53d8\u6210\u4e00\u4e2a\u65b0\u7684\u5e8f\u5217\uff0c\u628a\u8fd9\u4e2a\u5e8f\u5217\u5f53\u4f5c $A$ \u6570\u7ec4\uff0c\u7136\u540e\u91cd\u65b0\u9884\u5904\u7406\u51fa\u9759\u6001\u533a\u95f4\u7b2ck\u5c0f\u3002\n\n\u4f9d\u65e7\u8bbe\u8fd9\u4e2a\u503c\u4e3a $T_3$\u3002\n\n\u6bcf\u6b21\u4fee\u6539/\u63d2\u5165\u64cd\u4f5c\u90fd\u4f1a\u5bfc\u81f4\u591a\u51fa $2$ \u4e2a\u6570\u3002\u5ffd\u7565\u5e38\u6570\u5e76\u4e14\u6700\u52a3\u5316\u8003\u8651\uff0c\u5047\u8bbe\u5168\u662f\u4fee\u6539\u6ca1\u6709\u67e5\u8be2\uff0c\u5c31\u662f\u6bcf\u7ecf\u8fc7 $T_3$ \u6b21\u64cd\u4f5c\u5c31\u8981\u91cd\u65b0\u5f97\u5230\u5e8f\u5217\u5e76\u4e14\u9884\u5904\u7406\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u591a\u6b21\u91cd\u6784\u7684\u603b\u590d\u6742\u5ea6\u662f $O(\\frac{M}{T_3}\\times \\frac{N}{T_2} \\times N)$\u3002\n\n\u518d\u8003\u8651\u5355\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\uff0c\u5047\u8bbe\u5168\u662f\u8be2\u95ee\u64cd\u4f5c\uff0c\u5219\u8be2\u95ee\u603b\u590d\u6742\u5ea6\u5c31\u662f  $ O(M\\times(T_2+T_1+\\frac{N}{T_1}+T_3) ) $ \u3002\n\n\u6240\u4ee5\u6211\u4eec\u53d6 $ T_3 =T_2=T_1=N^{\\frac{2}{3}}$ \u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u4f18\u590d\u6742\u5ea6 $O(N^{\\frac{5}{3}})$\u3002\n\n\u7a0d\u5fae\u4f18\u5316\u4e0b\u5e38\u6570\u5373\u53ef\u901a\u8fc7\u3002\n\n\n## \u4ee3\u7801\n\n```cpp\n#include<stdio.h>\n#include<iostream>\n#include<math.h>\n#include<cstring>\nusing namespace std;\nclass block{\n\tpublic:\n\tint l,r,nt,pr,tag,tag2;\n\tint sz(){\n\treturn r-l+1;\n\t}\n}a[700003];\nint cnt=0,head;\nint split(int x,int k){\n\tcnt++;\n\ta[cnt].r=a[x].r;\n\ta[cnt].l=a[x].l+k;\n\ta[x].r=a[cnt].l-1;\n\tif(a[x].nt!=0) a[a[x].nt].pr=cnt;\n\ta[cnt].pr=x;\n\ta[cnt].nt=a[x].nt;\n\ta[x].nt=cnt;\n\ta[cnt].tag=a[x].tag;\n\ta[cnt].tag2=a[x].tag2;\n\treturn cnt;\n}\nvoid insert(int r,int val){\n\tif(r==0) a[++cnt].nt=head,a[head].pr=cnt,head=cnt;\n\telse{\n\tint q=head,sum=0;\n\twhile(sum+a[q].sz()<r){\n\tsum+=a[q].sz();\n\tq=a[q].nt;\n\t}\n\tif(r-sum!=a[q].sz()) q=a[split(q,r-sum)].pr;\n\tcnt++;\n\tif(a[q].nt) a[a[q].nt].pr=cnt;\n\ta[cnt].nt=a[q].nt;\n\ta[cnt].pr=q;\n\ta[q].nt=cnt;\n\t}\n\ta[cnt].l=1,a[cnt].r=1,a[cnt].tag=val,a[cnt].tag2=0;\n}\nvoid change(int r,int val){\n\tint sum=0,p=head;\n\twhile(sum+a[p].sz()<r) sum+=a[p].sz(),p=a[p].nt;\n\tif(r-1!=sum) p=split(p,r-sum-1);\n\tif(a[p].sz()!=1) split(p,1);\n\ta[p].l=a[p].r=1;\n\ta[p].tag=val;\n\ta[p].tag2|=1;\n}\nint d[80003],c[80003];\nchar op[230003];\nint x[230003],y[230003],z[230003],M,Q,I;\nclass static_kth_block{\npublic:\nint sum1[907][907],sum2[907][70008],sum3[70008],sum4[907];\nint T=0,T2=400;\nbool vis[70008];\nvoid change(int val,int op){\n\tsum3[val]+=op,sum4[val/T2+1]+=op;\n}\nint N=0;\nint static_kth(int l,int r,int k){\n\tint ll=(l-1)/T+2,rr=(r-1)/T,sum=0,p=1;\n\tfor(int i=l;i<=(ll-1)*T;i++) if(i<=N)sum3[c[i]]++,sum4[(c[i])/T2+1]++;\n\tfor(int i=rr*T+1;i<=r;i++) if(i<=N) sum3[c[i]]++,sum4[(c[i])/T2+1]++;\n\twhile(sum+sum1[rr][p]-sum1[ll-1][p]+sum4[p]<k) {\n\tsum+=sum1[rr][p]-sum1[ll-1][p]+sum4[p],p++;\n\t}\n\tp=(p-1)*T2;\n\twhile(sum+sum2[rr][p]-sum2[ll-1][p]+sum3[p]<k) sum+=sum2[rr][p]-sum2[ll-1][p]+sum3[p],p++;\n\tfor(int i=l;i<=(ll-1)*T;i++) if(i<=N) sum3[c[i]]--,sum4[c[i]/T2+1]--;\n\tfor(int i=rr*T+1;i<=r;i++) if(i<=N) sum3[c[i]]--,sum4[c[i]/T2+1]--;\n\treturn p;\n}\nint tot=0,val[70003];\nvoid init(int n){\n\tif(N)\n\tfor(int i=1;i<=(N-1)/T+1;i++){\n\tfor(int j=1;j<=tot;j++)\n\tsum2[i][val[j]]=0;\t\n\tfor(int j=1;j<=(70000/T2+1);j++)\n\tsum1[i][j]=0;\n\t}\n\tN=n;\n\tT=pow(n,0.667);\n\tif(T<=1) T=2;\n\tmemset(vis,0,sizeof(vis));\n\ttot=0;\n\tfor(int i=1;i<=n;i++){\n\tsum1[(i-1)/T+1][c[i]/T2+1]++;\n\tsum2[(i-1)/T+1][c[i]]++;\t\n\tif(!vis[c[i]]) vis[c[i]]=1,val[++tot]=c[i];\t\n\t}\n\tfor(int i=1;i<=(n-1)/T+1;i++){\n\tfor(int j=1;j<=tot;j++)\n\tsum2[i][val[j]]+=sum2[i-1][val[j]];\t\n\tfor(int j=1;j<=(70000/T2+1);j++)\n\tsum1[i][j]+=sum1[i-1][j];\t\n\t}\n}\n} skb; \n/* \n*/\nint n; \n#define kth(a,b,c) skb.static_kth(a,b,c) \n#define ins(x) skb.change(x,1)\n#define del(x) skb.change(x,-1)\nint top=0,top2=0,de[70003],in[70003];\nint ask(int l,int r,int k){\t\n    int ans=0;\n\tint sum=0,p=head;\n\twhile(sum+a[p].sz()<l) sum+=a[p].sz(),p=a[p].nt;\n    int ll=70009,rr=-1;\n    if(a[p].tag==-1) ll=a[p].l+l-sum-1;\n\tint q=p;\n\twhile(sum+a[q].sz()<r){\n\tif(a[q].tag==-1) {if(ll==70009) ll=a[q].l;rr=a[q].r;}\n\telse{\n\tins(a[q].tag);\n\tin[++top2]=a[q].tag;\n\tif(a[q].tag2==3 && rr!=-1) del(c[++rr]),de[++top]=c[rr];\n\t}\n\tsum+=a[q].sz();\n\tq=a[q].nt; \n\t}\n\tif(a[q].tag==-1) {if(ll==70009) ll=a[q].l;rr=a[q].l+r-sum-1;}\n\telse{\n\tins(a[q].tag);\n\tin[++top2]=a[q].tag;\n\tif(a[q].tag2==3 && rr!=-1) del(c[++rr]),de[++top]=c[rr];\n\t}\n\tif(ll>rr) {\n\tll=1,rr=1;\n\tdel(c[1]);\n\tde[++top]=c[1];\n\t}\n\tans=kth(ll,rr,k);\n\tfor(int i=1;i<=top;i++) ins(de[i]);\n\ttop=0;\n\tfor(int i=1;i<=top2;i++) del(in[i]);\n\ttop2=0;\n\treturn ans;\n}\nint tot=0;\nvoid merge(){\n\ttot=0;\n\tfor(int i=head;i;i=a[i].nt)\n\tfor(int j=a[i].l;j<=a[i].r;j++) d[++tot]=(a[i].tag==-1)?c[j]:a[i].tag;\n\tswap(c,d);\n\tskb.init(tot);\n\tcnt=0;\n\thead=1;\n\ta[++cnt]={1,tot,0,0,-1,2};\n}\nint T,m;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d\",&c[i]);\t\t\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\top[i]=getchar();\n\twhile(op[i]!='I' && op[i]!='M' && op[i]!='Q') op[i]=getchar();\n\tif(op[i]=='I'){I++;\n\tscanf(\"%d%d\",&x[i],&y[i]);\n\t}\n\tif(op[i]=='M'){M++;\n\tscanf(\"%d%d\",&x[i],&y[i]);\n\t}\n\tif(op[i]=='Q'){Q++;\n\tscanf(\"%d%d%d\",&x[i],&y[i],&z[i]);\n\t}\n\t}\n\tskb.init(n);\n\tcnt=0;\n\thead=1;\t\n\ta[++cnt]={1,n,0,0,-1,2};\t\n\tint temp=0;\n\tT=pow(n+m,0.667);\n\tif(T<=1) T=2; \n\tfor(int i=1;i<=m;i++){\n\tif(op[i]=='I'){\n\tx[i]^=temp;\n\ty[i]^=temp;\n\tinsert(x[i]-1,y[i]);\n\t}\n\tif(op[i]=='M'){\n\tx[i]^=temp;\n\ty[i]^=temp;\n\tchange(x[i],y[i]);\n\t}\n\tif(op[i]=='Q'){\n\tx[i]^=temp;\n\ty[i]^=temp;\n\tz[i]^=temp;\n\ttemp=ask(x[i],y[i],z[i]);\n\tprintf(\"%d\\n\",temp);\n\t}\n\tif(cnt>=T)\n\tmerge();\n\t}\n}\n```\n",
        "postTime": 1631434989,
        "uid": 147670,
        "name": "\u91d1\u73c2\u62c9",
        "ccfLevel": 0,
        "title": "\u5e26\u63d2\u533a\u95f4k\u5c0f\u503c\u9898\u89e3"
    },
    {
        "content": "### [\u3010\u539f\u9898\u94fe\u63a5\u3011](https://www.luogu.com.cn/problem/P4278)\n\n## \u5927\u529b\u5757\u72b6\u94fe\u8868\u5957\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u8fd9\u9898\u6574\u6574\u641e\u4e86\u4e24\u5929\uff0c\u592a\u6bd2\u7624\u4e86\u3002~~\uff08\u771f\u5fc3\u611f\u89c9\u4f0f\u7279\u592a\u96be\u4e86\uff09~~\n\n\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\u548c\u5e73\u8861\u6811\u5957\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u90fd\u6709\u60f3\u8fc7\uff0c\u4f46\u662f\u4e0d\u4f1a\u5199 qwq\u3002\u6700\u540e\u7784\u4e86\u4e00\u773c\u6807\u7b7e\uff0c\u51b3\u5b9a\u4f7f\u7528\u5757\u72b6\u94fe\u8868\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u601d\u8def\u76f8\u5f53\u7684\u66b4\u529b\uff1a\u5757\u72b6\u94fe\u8868\u641e\u63d2\u5165\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u5757\u5f00\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u67e5\u8be2\u65f6\u62ce\u51fa\u5b8c\u6574\u5757\u7684\u8ddf\uff0c\u5bf9\u4e8e\u4e0d\u5b8c\u6574\u7684\u5757\u52a0\u5230\u4e00\u4e2a\u4e34\u65f6\u7684\u6811\u91cc\u9762\u3002\u67e5\u8be2\u65f6\u4e00\u8d77\u67e5\u3002\n\n~~\uff08\u4ec0\u4e48\uff1f\u503c\u57df\u5206\u5757\uff1f\uff1f\u4e0d\u4f1a\uff01\uff09~~\n\n\u5f53\u7136\u8fd9\u6837\u7684\u505a\u6cd5\u662f $O(n\\sqrt{n}\\log n)$ \u7684\uff0c\u5728\u6570\u636e $7e4$ \u7684\u8303\u56f4\u4e0b\u76f8\u5f53\u5371\uff0c\u4f46\u662f\u6bd5\u7adf\u662f\u53ef\u4ee5\u5361\u5e38\u5361\u8fc7\u53bb\u7684\u3002\u4e0b\u9762\u8bf4\u51e0\u79cd\u4f18\u5316\uff1a\n\n### \u624b\u52a8\u8bbe\u7f6e\u5757\u957f\n\n\u56e0\u4e3a\u6211\u4eec\u7684\u4e34\u65f6\u6811\u662f\u9700\u8981\u6bcf\u6b21\u6e05\u7a7a\u7684\uff0c\u6240\u4ee5\u96f6\u6563\u5757\u7684\u5f71\u54cd\u4f1a\u66f4\u5927\u4e00\u4e9b\u3002\u6211\u4eec\u8003\u8651\u7f29\u77ed\u5757\u957f\u3002\n\n\u7ecf\u8fc7\u5b9e\u9a8c\uff0c\u5757\u957f $65$ \u6700\u4f18\u3002~~\u522b\u95ee\u4e3a\u4ec0\u4e48\uff0c\u95ee\u5c31\u662f\u548c\u53e6\u4e00\u4e2a\u540c\u5b66\u4e00\u5171\u957f\u8fbe $3$ \u9875\u7684\u63d0\u4ea4\u3002~~\n\n### \u627e\u5bf9\u5e94\u5757\u65f6\u5206\u65b9\u5411\n\n\u7531\u4e8e\u6211\u4eec\u7684\u5757\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u65e0\u6cd5 $O(1)$ \u5b9a\u4f4d\u67d0\u4e00\u4f4d\u7f6e $p$ \u6240\u5728\u7684\u5757\uff0c\u53ea\u80fd\u66b4\u529b\u627e\u3002\n\n\u8003\u8651\u6539\u6210\u53cc\u5411\u94fe\u8868\uff0c\u5f53 $p\\le n/2$ \u65f6\u4ece\u5de6\u5f80\u53f3\u627e\uff0c\u5f53 $p>n/2$ \u65f6\u4ece\u53f3\u5f80\u5de6\u627e\u3002\n\n### \u4f7f\u7528\u5feb\u8bfb\u5feb\u5199\n\n\u4f60\u53ef\u4ee5\u5c06\u5feb\u8bfb\u5feb\u5199\u5347\u7ea7\u4e3a\u8d85\u7ea7\u5feb\u8bfb\u5feb\u5199\uff0c\u4e5f\u5c31\u662f\u7ed9\u5feb\u8bfb\u5feb\u5199\u5206\u522b\u5199\u4e00\u4e2a `char` \u7c7b\u578b\u6570\u7ec4 buf \u4f5c\u4e3a\u7f13\u5b58\u533a\u3002\u8f93\u51fa\u65f6\u5148\u653e\u5230\u7f13\u5b58\u91cc\uff0c\u5982\u679c\u7f13\u5b58\u6ee1\u4e86\u5c31\u7528\u7384\u5b66\u7684 `fwrite` \u5168\u90e8\u8f93\u51fa\uff0c\u7136\u540e\u6e05\u7a7a\u7f13\u5b58\u3002\u8f93\u5165\u7684\u8bdd\u53ef\u4ee5\u5148\u7528 `fread` \u5c06\u7f13\u5b58\u586b\u6ee1\uff0c\u7136\u540e\u4e00\u4e2a\u4e2a\u4ece buf \u91cc\u62ff\uff0cbuf \u7a7a\u4e86\u5c31\u518d\u586b\u4e00\u6b21\u3002\n\n\u5f53\u7136\u522b\u5fd8\u4e86\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u6e05\u7a7a\u8f93\u51fa\u7684\u7f13\u5b58\u3002\n\n~~[\u3010\u5e7f\u544a\u3011\u6211\u5199\u7684\u5feb\u8bfb\u5feb\u5199\u7c7b\uff08\u5728\u8fd9\u9898\u5feb\u8bfb\u5f00\u542f\u7f13\u5b58\u4f1a\u83ab\u540d\u5176\u5999 TLE\uff09](https://www.luogu.com.cn/paste/rmfl4cmy)~~\n\n### \u4f60\u90a3\u4e48\u806a\u660e\uff0c\u80af\u5b9a\u6709\u5176\u5b83\u7684\u4f18\u5316\u65b9\u6cd5\n\n\u7528\u5b8c\u4e0a\u9762\u7684\u65b9\u6cd5\u540e\uff0c\u6211\u5df2\u7ecf\u5361\u8fc7\u65f6\u9650\u4e86\uff0c\u6240\u4ee5\u5c31\u4e0d\u4ecb\u7ecd\u5176\u5b83\u65b9\u6cd5\u4e86\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u7531\u4e8e\u4ee5\u524d\u6ca1\u5199\u8fc7\u5757\u72b6\u94fe\u8868\uff0c\u5199\u6cd5\u53ef\u80fd\u4e0e\u6b63\u5e38\u5199\u6cd5\u4e0d\u592a\u4e00\u6837\uff0c\u89c1\u8c05\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n/*\n\u7701\u756580\u591a\u884c\u7684\u5feb\u8bfb\u5feb\u5199\u6a21\u677f\n\u4e5f\u5c31\u662f\u4ee3\u7801\u91cc\u7528\u7684qin\u3001qout\n*/\n\nint n,m,size=65;\nstruct TreeNode\n{\n\tint val;\n\tint lc,rc;\n}t[20000005];\nint cnt,rubbish[20000005],top;\ninline int newNode()\n\t{ return top?rubbish[top--]:++cnt; }\ninline void deleteNode(int &i)\n\t{ rubbish[++top]=i,t[i].lc=t[i].rc=t[i].val=0,i=0; }\nvoid destroy(int &i)\n\t{ if(i)destroy(t[i].lc),destroy(t[i].rc),deleteNode(i); }\nvoid add(int p,int &i,int l=0,int r=70000)\n{\n\tif(!i)\ti=newNode();\n\tt[i].val++;\n\tif(l!=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(mid>=p)\tadd(p,t[i].lc,l,mid);\n\t\telse\tadd(p,t[i].rc,mid+1,r);\n\t}\n}\nvoid sub(int p,int &i,int l=0,int r=70000)\n{\n\tt[i].val--;\n\tif(l!=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(mid>=p)\tsub(p,t[i].lc,l,mid);\n\t\telse\tsub(p,t[i].rc,mid+1,r);\n\t}\n\tif(!t[i].val)\tdeleteNode(i);\n}\nstruct Block\n{\n\tint *b,cnt,rt;\n\tBlock *nxt,*pre;\n\tBlock(Block *p): cnt(0),rt(0),pre(p)\n\t\t{ b=new int[size+5],nxt=nullptr; }\n\tinline bool full()\n\t\t{ return cnt==size; }\n}*head,*tail;\nvoid build(Block *&i,int pos=1,Block *last=nullptr)\n{\n\ti=new Block(last);\n\tint x;\n\twhile(!i->full() && pos<=n)\n\t\tqin>>x,i->b[++i->cnt]=x,add(x,i->rt),pos++;\n\tif(pos<=n)\tbuild(i->nxt,pos,i);\n\telse\ttail=i;\n}\nBlock *find(int &x)\n{\n\tBlock *i;\n\tif(x<=(n>>1))\n\t\tfor(i=head;i->cnt<x;x-=i->cnt,i=i->nxt);\n\telse\n\t{\n\t\tx=n-x+1;\n\t\tfor(i=tail;i->cnt<x;x-=i->cnt,i=i->pre);\n\t\tx=i->cnt-x+1;\n\t}\n\treturn i;\n}\nint ans,tot,rt[200005];\nint main()\n{\n\t// freopen(\"P4278.in\",\"r\",stdin);\n\t// freopen(\"P4278.out\",\"w\",stdout);\n\tqin>>n,build(head);\n\tqin>>m;\n\twhile(m--)\n\t{\n\t\tchar opt;\n\t\twhile((opt=getchar())<33);\n\t\tint x,y,z;\n\t\tqin>>x>>y,x^=ans,y^=ans;\n\t\tif(opt=='Q')\n\t\t{\n\t\t\tBlock *a=find(x),*b=find(y);\n\t\t\tqin>>z,z^=ans,tot=rt[0]=0;\n\t\t\tif(a==b)\n\t\t\t\tfor(int i=x;i<=y;i++)\tadd(a->b[i],rt[0]);\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int i=x;i<=a->cnt;i++)\tadd(a->b[i],rt[0]);\n\t\t\t\tfor(int i=1;i<=y;i++)\tadd(b->b[i],rt[0]);\n\t\t\t\tfor(;a->nxt!=b;a=a->nxt,rt[++tot]=a->rt);\n\t\t\t}\n\t\t\tint oldrt=rt[0],l=0,r=70000;\n\t\t\twhile(l<r)\n\t\t\t{\n\t\t\t\tint sz=0,mid=(l+r)>>1;\n\t\t\t\tfor(int i=0;i<=tot;i++)\tsz+=t[t[rt[i]].lc].val;\n\t\t\t\tif(sz>=z)\n\t\t\t\t{\n\t\t\t\t\tr=mid;\n\t\t\t\t\tfor(int i=0;i<=tot;i++)\trt[i]=t[rt[i]].lc;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tl=mid+1,z-=sz;\n\t\t\t\t\tfor(int i=0;i<=tot;i++)\trt[i]=t[rt[i]].rc;\n\t\t\t\t}\n\t\t\t}\n\t\t\tqout.writeln(ans=l),destroy(oldrt);\n\t\t}\n\t\telse if(opt=='M')\n\t\t{\n\t\t\tBlock *i=find(x);\n\t\t\tsub(i->b[x],i->rt),add(i->b[x]=y,i->rt);\n\t\t}\n\t\telse if(opt=='I')\n\t\t{\n\t\t\tBlock *i,*j;\n\t\t\tif(x==n+1)\n\t\t\t{\n\t\t\t\ti=find(--x),x++;\n\t\t\t\tif(i->full())\n\t\t\t\t\ti->nxt=new Block(i),i=i->nxt,tail=i,x=1;\n\t\t\t}\n\t\t\telse\ti=find(x);\n\t\t\tif(i->full())\n\t\t\t{\n\t\t\t\tj=i->nxt;\n\t\t\t\tif(!j || j->full())\n\t\t\t\t{\n\t\t\t\t\ti->nxt=new Block(i),i->nxt->nxt=j;\n\t\t\t\t\tif(j)\tj->pre=i->nxt;\n\t\t\t\t\telse\ttail=i->nxt;\n\t\t\t\t\tj=i->nxt;\n\t\t\t\t}\n\t\t\t\tfor(int k=++j->cnt;k>1;k--)\tj->b[k]=j->b[k-1];\n\t\t\t\tj->b[1]=i->b[size];\n\t\t\t\tadd(j->b[1],j->rt),sub(i->b[size],i->rt);\n\t\t\t\tfor(int k=size;k>x;k--)\ti->b[k]=i->b[k-1];\n\t\t\t}\n\t\t\telse\n\t\t\t\tfor(int k=++i->cnt;k>x;k--)\ti->b[k]=i->b[k-1];\n\t\t\ti->b[x]=y,add(y,i->rt),n++;\n\t\t}\n\t}\n\treturn qout.flush(),0;\n}\n```\n",
        "postTime": 1630317067,
        "uid": 279800,
        "name": "ExplodingKonjac",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011P4278 \u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c"
    },
    {
        "content": "\u56e0\u4e3a [\u6700\u521d\u5206\u5757](https://www.luogu.com.cn/problem/P4119) \u592a\u96be\u5199\u4e86\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u6765\u8fd9\u9898\u5199\u4e00\u4e0b\u6700\u521d\u5206\u5757\u7684\u90a3\u4e2a\u505a\u6cd5\n\n\u4e0d\u8fc7\u5199\u4e2a\u9898\u89e3\u5c31\u590d\u8bfb\u522b\u4eba\u8bf4\u8fc7\u7684\u4e1c\u897f\u663e\u7136\u4e0d\u597d\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u603b\u7ed3\u4e00\u4e0b\u672c\u9898\u5206\u5757\u6c42 $k$ \u5c0f\u7684\u4e09\u79cd\u505a\u6cd5\n\n\u6ce8\u610f\uff1a\u6211\u4eec\u9ed8\u8ba4\u503c\u57df\u548c $n,m$ \u540c\u9636\n\n- $n \\sqrt n \\log n$ \u7684\u89e3\u6cd5\n\n  \u5bf9\u6bcf\u4e2a\u5757\u8fdb\u884c\u6392\u5e8f\uff0c\u6211\u4eec\u8bbe $S$ \u4e3a\u521d\u59cb\u5757\u957f\uff0c$len$ \u4e3a\u67d0\u4e2a\u5757\u7684\u5b9e\u9645\u5757\u957f\n  \n  - \u4fee\u6539\u64cd\u4f5c\u76f8\u5f53\u4e8e\u662f\u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff0c\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u7528 $O(len)$ \u7684\u590d\u6742\u5ea6\u89e3\u51b3\n  \n  - \u63d2\u5165\u64cd\u4f5c\u4e5f\u662f\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c$O(len)$\n  \n  - \u6c42 $k$ \u5c0f\u9700\u8981\u5728\u6bcf\u4e2a\u5757\u4e8c\u5206\uff0c\u6c42\u51fa\u4e00\u4e2a $\\le x$ \u6709\u591a\u5c11\u4e2a\u6570\uff0c\u518d\u4e8c\u5206 $x$\uff0c\u590d\u6742\u5ea6\u662f $O(\\frac{n}{len} \\times \\log ^ 2n)$\n  \n  \u4f46\u662f\u4e00\u76f4\u63d2\u5165\u4f1a\u5bfc\u81f4\u67d0\u4e2a\u5757\u53d8\u5f97\u5f88\u5927\uff0c\u6240\u4ee5\u5f53 $len \\ge 2 \\times S$ \u65f6\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5757\u62c6\u6210\u4e24\u4e2a\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86 $len$ \u4f9d\u7136\u662f $S$ \u7684\u7ea7\u522b\n  \n  \u91cd\u6784\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u662f $O(len)$\uff0c\u81f3\u591a\u63d2\u5165 $n$ \u4e2a\u5143\u7d20\uff0c\u4f1a\u5f15\u8d77 $\\frac{n}{S}$ \u6b21\u91cd\u6784\uff0c\u6240\u4ee5\u91cd\u6784\u603b\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\n  \n  \u53ef\u4ee5\u89e3\u5f97\uff1a$S = \\sqrt n \\log n$ \u65f6\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u662f $O(n \\sqrt n \\log n)$ \u7684\n  \n- $n \\sqrt {n \\log n}$ \u7684\u89e3\u6cd5\n\n  \u521a\u624d\u90a3\u4e2a\u89e3\u6cd5\u4e8c\u5206\u4e86\u4e24\u6b21\uff0c\u663e\u7136\u662f\u4e0d\u597d\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u5728 $\\frac{n}{S}$ \u4e2a\u5757\u4e0a\u8fdb\u884c\u4e8c\u5206\n  \n  \u5bf9\u4e8e\u6bcf\u4e2a\u5757\u5efa\u7acb\u4e00\u9897\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u4ee5\u53ca\u5757\u5185\u6392\u5e8f\n  \n  - \u4fee\u6539\u64cd\u4f5c\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c $\\log n$\uff0c\u5757\u5185\u6392\u5e8f $O(len)$ \u4fee\u6539\n  \n  - \u63d2\u5165\u64cd\u4f5c\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c $\\log n$\uff0c\u5757\u5185\u6392\u5e8f $O(len)$ \u4fee\u6539\n  \n  - \u6c42\u7b2c $k$ \u5c0f\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u8fb9\u89d2\u5757\u4f7f\u7528\u4e00\u4e2a\u6307\u9488\u5728\u5757\u5185\u6392\u5e8f\u6570\u7ec4\u4e0a\u79fb\u52a8\uff0c\u5c31\u53ef\u4ee5\u5904\u7406\u8fb9\u89d2\u7684\u5f71\u54cd\uff0c\u6700\u591a\u8981\u79fb\u52a8 $len$ \u6b21\uff0c\u6bcf\u6b21\u5728 $\\frac{n}{len}$ \u9897\u7ebf\u6bb5\u6811\u4e0a\u540c\u65f6\u5411 \u5de6 / \u53f3 \u8df3\uff0c$\\frac{n}{len} \\log n + len$\n  \n  \u8fd8\u662f\u8981\u91cd\u6784\uff0c\u91cd\u6784\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u662f $O(len \\log n)$ \uff0c\u603b\u590d\u6742\u5ea6 $O(n \\log n)$ \n  \n  \u53ef\u4ee5\u89e3\u5f97\uff1a$S = \\sqrt {n \\log n}$ \u65f6\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u662f $O(n \\sqrt {n \\log n})$ \u7684\n  \n- $n \\sqrt n$ \u7684\u89e3\u6cd5\n\n  \u4e8c\u5206\u548c\u5206\u5757\u4e24\u4e2a\u4e1c\u897f\u662f\u4e0d\u642d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u6743\u503c\u8fdb\u884c\u5206\u5757\n  \n  \u5757\u957f\u90fd\u4e3a $\\sqrt n$ \n  \n  \u8bbe $v_{i,j}$ \u4e3a\u524d $i$ \u4e2a\u5757\uff0c\u843d\u5728\u7b2c $j$ \u4e2a\u503c\u57df\u5757\u7684\u6570\u7684\u4e2a\u6570\uff0c$s_{i,j}$ \u4e3a\u524d $i$ \u4e2a\u5757\uff0c\u503c\u4e3a $j$ \u4e2a\u6570\u7684\u4e2a\u6570\uff0c\u8fd9\u4e2a\u53ef\u4ee5 $n \\sqrt n$ \u9884\u5904\u7406\n  \n  \u8003\u8651\u8fb9\u89d2\u7684\u5f71\u54cd\uff0c\u518d\u5f15\u5165\u4e00\u4e2a $dv_i$ \u8868\u793a\u8fb9\u89d2\u843d\u5728\u503c\u57df $i$ \u7684\u6570\u91cf\uff0c$ds_i$ \u4e3a\u8fb9\u89d2\u503c\u4e3a $i$ \u7684\u6570\u91cf\uff0c\u8fd9\u4e24\u4e2a\u8868\u53ef\u4ee5 $\\sqrt n$ \u6c42\u51fa\uff0c\u7136\u540e $\\sqrt n$ \u6e05\u7a7a\n  \n  \u77e5\u9053\u4e86\u8fd9\u4e9b\u503c\uff0c\u8fd9\u6837\u6211\u4eec\u51cf\u4e00\u4e0b\u5c31\u53ef\u4ee5 $O(1)$ \u77e5\u9053\u533a\u95f4 $[l,r]$ \u6709\u591a\u5c11\u4e2a\u6570\u5728\u503c\u57df\u5757 $x$ \u5185\uff0c\u6709\u591a\u5c11\u4e2a\u6570\u503c\u4e3a $x$ \n  \n  \u4ece\u5c0f\u5230\u5927\u7528 $\\sqrt n$ \u7684\u65f6\u95f4\u679a\u4e3e\u51fa\u7b54\u6848\u5728\u54ea\u4e2a\u503c\u57df\u5757\uff0c\u7136\u540e\u7528 $\\sqrt n$ \u7684\u65f6\u95f4\u6c42\u51fa\u7b54\u6848\u662f\u4ec0\u4e48\n  \n  - \u4fee\u6539\n  \n     \u76f4\u63a5\u5bf9 $v,s$ \u8fdb\u884c\u4fee\u6539\uff0c\u4e00\u5171\u8981\u4fee\u6539 $\\sqrt n$ \u4e2a\u503c\n    \n     \u539f\u5e8f\u5217 $O(1)$ \u4fee\u6539\n    \n  - \u63d2\u5165\n  \n     \u5bf9 $v,s$ \u8fdb\u884c\u4fee\u6539\uff0c\u4e00\u5171\u8981\u4fee\u6539 $\\sqrt n$ \u4e2a\u503c\n    \n     \u539f\u5e8f\u5217 $O(\\sqrt n)$ \u4fee\u6539\n    \n  \u91cd\u6784\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u662f $O(n)$ \uff0c\u603b\u590d\u6742\u5ea6 $O(n \\sqrt n)$\n \n$n \\sqrt n$ \u7684\u4ee3\u7801\uff1a \n \n```cpp\n\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nint n,m;\nint a[35005];\n\n#define S 360\n#define from(x) ((x - 1) / S + 1)\n#define L(x) (x * S - S + 1)\n#define R(x) (x * S)\nint len;\nstruct BLock{\n    int v1[70005],v2[S + 3],v[2 * S + 3],l,r;\n}s[70005 / S + 3];\nint dv1[70005],dv2[S + 3];\n\nint query(int l,int r,int k){\n    int x = 0,y = 0;\n    int i,j,tmp;\n    for(i = 1;i <= len;++i){\n        if(s[i].r >= l && !x) x = i;\n        if(s[i].r >= r && !y) y = i;\n    }\n    if(x ^ y){\n        for(i = l - s[x].l;i < s[x].r - s[x].l + 1;++i){\n            dv1[s[x].v[i]]++;\n            dv2[from(s[x].v[i])]++;\n        }\n        for(i = 0;i <= r - s[y].l;++i){\n            dv1[s[y].v[i]]++;\n            dv2[from(s[y].v[i])]++;\n        }\n\n    }else{\n        for(i = l - s[x].l;i <= r - s[x].l;++i){\n            dv1[s[x].v[i]]++;\n            dv2[from(s[x].v[i])]++;\n        }\n    }\n\n    for(i = 1;i <= from(70001);++i){\n        tmp = dv2[i];\n        if(x ^ y) tmp += s[y - 1].v2[i] - s[x].v2[i]; \n        if(k > tmp) k -= tmp;\n        else break;\n    }\n    for(j = L(i);j <= R(i);++j){\n        tmp = dv1[j];\n        if(x ^ y) tmp += s[y - 1].v1[j] - s[x].v1[j];\n        if(k > tmp) k -= tmp;\n        else break;\n    }\n    if(x ^ y){\n        for(i = l - s[x].l;i < s[x].r - s[x].l + 1;++i){\n            dv1[s[x].v[i]]--;\n            dv2[from(s[x].v[i])]--;\n        }\n        for(i = 0;i <= r - s[y].l;++i){\n            dv1[s[y].v[i]]--;\n            dv2[from(s[y].v[i])]--;\n        }\n    }else{\n        for(i = l - s[x].l;i <= r - s[x].l;++i){\n            dv1[s[x].v[i]]--;\n            dv2[from(s[x].v[i])]--;\n        }\n    }\n\n    return j;\n}\n\nvoid modify(int x,int val){\n    int id,tmp;\n    for(int i = 1;i <= len;++i){\n        if(s[i].r >= x){\n            id = i;\n            break;\n        }\n    }\n    tmp = s[id].v[x - s[id].l];\n    for(int i = id;i <= len;++i){\n        s[i].v1[tmp]--;\n        s[i].v1[val]++;\n        s[i].v2[from(tmp)]--;\n        s[i].v2[from(val)]++;\n    }\n    s[id].v[x - s[id].l] = val;\n}\n\nvoid split(int x){\n    for(int i = len;i >= x + 1;--i){\n        swap(s[i],s[i + 1]);\n    }\n    len++;\n    s[x].r -= S;\n    s[x + 1].l = s[x].r + 1;\n    s[x + 1].r = s[x].r + S;\n    for(int i = S;i < 2 * S;++i){\n        s[x + 1].v[i - S] = s[x].v[i];\n        s[x].v[i] = 0;\n    }\n    for(int i = 1;i <= 70001;++i){\n        s[x + 1].v1[i] = s[x].v1[i];\n    }\n    for(int i = 1;i <= from(70001);++i){\n        s[x + 1].v2[i] = s[x].v2[i]; \n    }\n    for(int i = 0;i < S;++i){\n        s[x].v1[s[x + 1].v[i]]--;\n        s[x].v2[from(s[x + 1].v[i])]--;\n    }\n}\n\nvoid insert(int x,int val){\n    int id,tag = 0;\n    for(int i = 1;i <= len;++i){\n        s[i].l += tag;s[i].r += tag;\n        if((s[i].r >= x || i == len) && !tag){\n            id = i;\n            s[i].r++;\n            tag = 1;\n        }\n    }\n    for(int i = id;i <= len;++i){\n        s[i].v1[val]++;\n        s[i].v2[from(val)]++;\n    }\n    for(int i = s[id].r - s[id].l;i >= x - s[id].l + 1;--i){\n        s[id].v[i] = s[id].v[i - 1];\n    }\n    s[id].v[x - s[id].l] = val;\n    if(s[id].r - s[id].l + 1 == 2 * S) split(id);\n}\n\nnamespace io {\n    const int __SIZE = (1 << 20) + 1;\n    char ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n    #define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n    inline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n    inline void gc (char &x) { x = Gc(); }\n    inline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n    inline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n    inline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n        for(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) *s = __c; *s = 0; }\n    template <class I> inline bool gi (I &x) { _eof = 0;\n        for (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n        for (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; return !_eof; }\n    template <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n        while (x) qu[++ qr] = x % 10 + '0',  x /= 10; while (qr) pc (qu[qr --]); }\n    struct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\nint main(){\n    gi(n);\n    for(int i = 1;i <= n;++i){\n        gi(a[i]);a[i]++;int x = from(i);\n        s[x].v1[a[i]]++;\n        s[x].v2[from(a[i])]++;\n        s[x].v[i - L(x)] = a[i];\n    }\n    for(int i = 1;i <= from(n);++i){\n        s[i].l = L(i);s[i].r = min(R(i),n);\n        for(int j = 1;j <= 70001;++j){\n            s[i].v1[j] += s[i - 1].v1[j];\n        }\n        for(int j = 1;j <= from(70001);++j){\n            s[i].v2[j] += s[i - 1].v2[j];\n        }\n    }\n    len = from(n);\n    gi(m);\n    char opt;\n    int l,r,k,x,val,lastans = 0;\n    for(int i = 1;i <= m;++i){\n        do{\n            gc(opt);\n        }while(opt != 'Q' && opt != 'M' && opt != 'I');\n        if(opt == 'Q'){\n            gi(l);gi(r);gi(k);\n            l ^= lastans;r ^= lastans;k ^= lastans;\n            lastans = query(l,r,k) - 1;\n            print(lastans);pc('\\n');\n        }else if(opt == 'M'){\n            gi(x);gi(val);\n            x ^= lastans;val ^= lastans;\n            val++;\n            modify(x,val);\n        }else{\n            gi(x);gi(val);\n            x ^= lastans;val ^= lastans;\n            val++;\n            insert(x,val);\n        }\n    }\n    return 0;\n}\n```\n\n\u56e0\u4e3a\u4eba\u50bb\u5e38\u6570\u5927\uff0c\u6240\u4ee5\u5f00\u4e86 O2 \u4e5f\u4e0d\u4e00\u5b9a\u8fc7\uff0c\u9700\u8981\u5237\u8138",
        "postTime": 1595681092,
        "uid": 344628,
        "name": "MatKave",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4278 \u3010\u5e26\u63d2\u5165\u533a\u95f4K\u5c0f\u503c\u3011"
    }
]