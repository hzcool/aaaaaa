[
    {
        "content": "\u663e\u7136\u7684\u6811\u5f62dp\uff0c\u4f46\u662f\u2014\u2014\n\n\u4e3a\u4ec0\u4e48\u8981\u4eba\u4e91\u4ea6\u4e91\u5462\uff1f\u5199\u6210\u8bb0\u5fc6\u5316\u641c\u7d22\u4e0d\u597d\u4e48\uff1f\u77ed\u7684\u4f18\u7f8e\u3002\n\n\u5148\u4e0a\u4ee3\u7801\uff08\u5177\u4f53\u89e3\u91ca\u5728\u4ee3\u7801\u4e0b\u9762\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\ntemplate<class T>void ChkMax(T &a,T b){if (a<b)a=b;}\nconst int N=1010;\nint dp[N][N];\nstruct TreeNode{\n    int cost,val;\n}T[N*10];\nint tot;\nvoid init(int x){\n    scanf(\"%d%d\",&T[x].cost,&T[x].val);\n    T[x].cost*=2;\n    if (!T[x].val){\n        init(x<<1);init(x<<1|1);\n    }\n}\nint dfs(int x,int tot){\n    if (dp[x][tot]>0 || !tot)return dp[x][tot];\n    if (T[x].val)return dp[x][tot]=min(T[x].val,(tot-T[x].cost)/5);\n    for (int k=0;k<=tot-T[x].cost;k++)\n        ChkMax(dp[x][tot],dfs(x<<1,k)+dfs(x<<1|1,tot-T[x].cost-k));\n    return dp[x][tot];\n}\nint main(){\n    scanf(\"%d\",&tot);tot--;\n    init(1);\n    printf(\"%d\",dfs(1,tot));\n    return 0;\n}\n```\n\n\u597d\u4e86\uff0c\u6765\u8bf4\u8bf4\u600e\u4e48\u641e\u8fd9\u9053\u9898\u5427\u3002\n\n\u9996\u5148\u5904\u7406\u8bfb\u5165\uff0c\u4ee5dfs\u7684\u5f62\u5f0f\u8f93\u5165\uff0c\u5f88\u65b0\u9896\u3002\n\n\u7136\u540e\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684dp[i][j]\u8868\u793a\u5230\u7b2ci\u6761\u8d70\u5eca\u5269\u4f59j\u7684\u65f6\u95f4\u6700\u591a\u80fd\u62ff\u7684\u753b\u7684\u6570\u91cf\u3002\n\n\u90a3\u4e48\u679a\u4e3e\u4e00\u4e0b\u5206\u7ed9\u5de6\u513f\u5b50\u7684\u65f6\u95f4k\uff0c\u90a3\u4e48\u5206\u7ed9\u53f3\u513f\u5b50\u7684\u5c31\u662fj-k\u4e86\u3002\n\n\u6240\u4ee5dp[i][j]=max(dp[i][j],dp[lch][k]+dp[rch][j-k])\n\n\u5f53\u7136\uff0c\u8fd8\u8981\u51cf\u53bb\u4e00\u4e2a\u7ecf\u8fc7\u8d70\u5eca\u7684\u65f6\u95f4\u3002\u6ce8\u610f\uff0c\u8d70\u5eca\u662f\u8981\u8d70\u8fc7\u53bb\u5e76\u4e14\u8d70\u56de\u6765\u7684\uff0c\u6240\u4ee5\u65f6\u95f4\u5728\u8bfb\u5165\u65f6\\*2\u5c31\u884c\u4e86\u3002\n\n\u9898\u76ee\u8fd8\u6709\u4e00\u4e2a\u5751\uff0c\u5c31\u662f\u8b66\u5bdf\u4e00\u5230\u5c0f\u5077\u5c31\u6b7b\uff0c\u6240\u4ee5\u5c0f\u5077\u5fc5\u987b\u5728\u8b66\u5bdf\u6765\u7684\u524d1\u79d2\u8dd1\u6389\u3010\u624b\u52a8\u6ed1\u7a3d\u3011\n\n\u6240\u4ee5\u8bfb\u5165\u7684\u65f6\u95f4\u8981-1\n",
        "postTime": 1504698215,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "\u501f\u9274\u4e86\u4e00\u4e0b @I_AM_HelloWord \u5de8\u4f6c\u7684\u9898\u89e3  \n\u53d7\u76ca\u532a\u6d45  \n\u601d\u8def\u5dee\u4e0d\u591a  \n\u672c\u6765\u60f3\u628a\u4e24\u4e2adfs\u8bd5\u7740\u5408\u5e76\u4e00\u4e0b\u7684\uff0c\u7ed3\u679c\u53d1\u73b0\u6709\u70b9\u56f0\u96be  \n\u6211\u7a0d\u4f5c\u8865\u5145\uff0c\u628a\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\u4e86  \n\u5e76\u4e14\u7801\u7684\u7a0d\u5fae\u4e0d\u90a3\u4e48\u81c3\u80bf\u60f9  \n\u4ee3\u7801\u4e2d\u53c8\u5e26\u6709\u7ec6\u8282\u89e3\u91ca\uff0c\u89c1\u5982\u4e0bAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t, n, m, dp[1005][605];\n//dp[i][j]\u8868\u793a\u5230\u7b2ci\u4e2a\u8d70\u5eca\uff0c\u5728\u8fd9\u91cc(\u53ca\u5176\u5b50\u6811)\u8981\u7528j\u79d2\u65f6\u95f4\u5077\u7684\u6700\u591a\u753b\u6570\nstruct node {\n    int tim, pic; //tim\u8868\u793a\u8d70\u5eca\u65f6\u95f4\uff0cpic\u8868\u793a\u56fe\u7247\u4e2a\u6570\n}tr[5005];\n\ninline int read() {\n    int red = 0, f_f = 1; char ch = getchar();\n    while(ch>'9' || ch <'0') {if(ch=='-') f_f = -1;\tch = getchar();}\n    while(ch>='0' &&ch<='9') red = red*10+ch-'0', ch = getchar();\n    return red*f_f;\n}\n\nvoid dfs_read(int a) { //\u8bfb\u5165\u57fa\u672c\u5dee\u4e0d\u591a\n    tr[a].tim = read() * 2, tr[a].pic = read();\n    //\u8d70\u5eca\u8981\u8d70\u80af\u5b9a\u662f\u6765\u56de\u8d70\u7684\uff0c\u6240\u4ee5\u8bfb\u5165\u65f6\u76f4\u63a5*2\u5c31\u907f\u514d\u540e\u9762\u8fd9\u4e48\u591a\u4e2a*2\u4e86\n    if(!tr[a].pic) {\n        dfs_read(a << 1); dfs_read(a << 1| 1);\n    }\n}\n\nvoid dfs(int a, int r) {\n    if(dp[a][r] || !r) return;\n    //\u7b2c\u4e00\u904d\u4ea4WA\u4e86\uff0c\u5c31\u662f\u8fd9\u91cc\u5199\u6302\u4e86\uff0c\u8981\u6ce8\u610f\u4e0d\u8981\u6253\u9519\uff0c\u6253\u9519\u5c31\u51c9\u51c9\u4e86\n    if(tr[a].pic) { //\u5df2\u7ecf\u5230\u6700\u91cc\u9762\u4e86\n        dp[a][r] = min(tr[a].pic, (r - tr[a].tim) / 5);\n        //\u8ba1\u7b97\u5230\u7b2ca\u4e2a\u8d70\u5eca\u5728\u8fd9\u91cc(\u53ca\u4ed6\u5b50\u6811)\u8981\u82b1\u8d39r\u79d2\u7684\u65f6\u95f4\u5077\u7684\u505a\u591a\u753b\u6570\n        return;\n    }\n    for (int i = 0; i <= r - tr[a].tim; i++) { //\u679a\u4e3e\u5f80\u5de6\u7528\u51e0\u79d2\n        dfs(a << 1, i); //\u5de6\u8fb9\u7528 i \u79d2 \n        dfs(a << 1 | 1, r - tr[a].tim - i); //\u53f3\u8fb9\u7528 r-tim-i \u79d2 \n        //\u8fd8\u8981\u51cf\u53bb\u8fc7a\u7684\u8d70\u5eca\u7684\u65f6\u95f4\uff08\u5df2\u7ecf*\u8fc72\u4e86\n        dp[a][r] = max(dp[a][r], dp[a << 1][i] + dp[a << 1 | 1][r - tr[a].tim - i]);\n    }\n}\n\nint main()\n{\n    memset(dp, 0, sizeof(dp));\n    t = read() - 1; //\u5c31\u662f\u4f17\u6240\u5468\u77e5\u7684\u5751\uff0c\u8b66\u5bdf\u6765\u4e86\u4f60\u8fd8\u9003\u5f97\u8d70\u5417\uff1f\n    dfs_read(1);\n    dfs(1, t); //\u56e0\u4e3a\u6ca1\u6709\u8fd4\u56de\u503c\u6240\u4ee5\u653e\u5916\u9762\n    printf(\"%d\\n\", dp[1][t]);\n    return 0;\n}\n```\n\u5e0c\u671b\u849f\u84bb\u7684\u5c0f\u8865\u5145\u4f1a\u6709\u5e2e\u52a9\u4e00\u70b9 \u2014\u2014 \u849f\u84bb\u6a59\u5b50\u6c41\n",
        "postTime": 1554896313,
        "uid": 49655,
        "name": "\u6a59\u5b50\u6c41",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "## 0.\u8bf4\u5728\u524d\u9762\n\n\u4ed4\u7ec6\u68c0\u67e5\u4e86\u4e00\u4e0b\u81ea\u5df1\u7684\u505a\u6cd5\u548c\u524d\u9762\u7684\u9898\u89e3\u4eec\u90fd\u6709\u4e00\u4e9b\u6216\u5927\u6216\u5c0f\u7684\u5dee\u5f02\uff0c\u51b3\u5b9a\u8be6\u7ec6\u5730\u5206\u4eab\u7ed9\u5927\u5bb6\u3002\n\n\u5982\u679c\u662f\u56e0\u4e3a\u83ab\u540dWA\u6389\u4e86\u67d0\u4e9b\u70b9\u800c\u70b9\u8fdb\u6765\u7684\uff0c\u90a3\u4e48\u8bf7\u68c0\u67e5\u4e00\u4e0b\n \n- \u5077\u4e86\u753b\u4e4b\u540e\u5fc5\u987b\u4ece\u5165\u53e3\u9003\u8d70\uff0c\u6240\u4ee5\u6bcf\u6761\u8d70\u5eca\u5fc5\u987b\u8d70\u4e24\u6b21\n- \u8981\u5728\u8b66\u5bdf\u6765\u4e4b\u524d\u9003\u8d70\uff0c\u56e0\u6b64\u79bb\u5f00\u7684\u65f6\u95f4\u5fc5\u987b**\u4e25\u683c\u5c0f\u4e8e**\u8b66\u5bdf\u6765\u7684\u65f6\u95f4\n\n## 1.\u601d\u8def\u5206\u6790 \u548c \u4ee3\u7801\u5b9e\u73b0\n\n\u6bcf\u6761\u8d70\u5eca\u5206\u53c9\u4e3a\u4e24\u6761\u8d70\u5eca\uff1f \u2014\u2014\u6811\u5f62\u7ed3\u6784    \n\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\uff08\u4ef7\u503c\uff09\u5185\u62ff\u8d70\u591a\u5c11\u753b\uff08\u7269\u54c1\uff09\uff1f \u2014\u2014\u80cc\u5305  \n\n\u4e00\u9053\u975e\u5e38\u597d\u7684\u6811\u5f62\u80cc\u5305\u4e0a\u624b\u9898\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u7206\u641c\u5b9e\u73b0\uff0c\u4f46\u662f\u5176\u590d\u6742\u5ea6\u66f4\u9ad8\uff0c\u5e76\u4e0d\u63a8\u8350\u7528\u5728\u8fd9\u91cc\u3002\n\n### Part 1 .\u8bfb\u5165  \n\n\u5f88\u65b0\u9896\u7684\u8bfb\u5165\u65b9\u5f0f\uff0c\u5148\u5e8f\u904d\u5386\u8bfb\u5165\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6307\u9488\uff0c\u6bcf\u6761\u8d70\u5eca\u5f00\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u513f\u5b50\u4eec\uff0c\u4f46\u8fd9\u6837\u7565\u663e\u9ebb\u70e6\u3002  \n\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u50cf\u7ebf\u6bb5\u6811\u4e00\u6837\uff0c\u628a\u4e8c\u53c9\u6811\u6539\u4e3a\u7ebf\u6027\u5b58\u50a8\uff0c\u8282\u70b9 $x$ \u7684\u513f\u5b50\u7684\u7f16\u53f7\u5206\u522b\u4e3a `x<<1` \u548c `x<<1|1`\u3002\u6b64\u65b9\u6cd5\u7684\u4f18\u70b9\u5728\u4e8e\uff0c\u65e0\u9700\u518d\u5b58\u50a8\u513f\u5b50\u7f16\u53f7\uff0c\u800c\u4e14\u65f6\u95f4\u6548\u7387\u6781\u9ad8\u3002\u4e3a\u907f\u514d\u4e0b\u6807\u8d8a\u754c\u8bb0\u5f97\u5f00\u4e24\u500d\u7a7a\u95f4\u3002  \n\u53e6\u5916\uff0c\u521a\u521a\u4e5f\u5df2\u7ecf\u63d0\u5230\u6bcf\u6761\u8d70\u5eca\u5fc5\u987b\u8d70\u4e24\u6b21\uff0c\u6211\u4eec\u4e0d\u59a8\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u628a\u65f6\u95f4\u4e582\uff0c\u7701\u53bb\u540e\u987e\u4e4b\u5fe7\u3002\n\n```\nvoid build(int x){\n\tscanf(\"%d%d\",&t[x],&a[x]);\n\tt[x]<<=1;   //\u975e\u5e38\u91cd\u8981\uff0c\u6bcf\u6761\u8d70\u5eca\u5fc5\u987b\u8d70\u4e24\u6b21\n\tif(!a[x])build(x<<1),build(x<<1|1);  //\u5982\u679c\u5c3d\u5934\u6ca1\u6709\u753b\uff0c\u8bfb\u5de6\u53f3\u513f\u5b50\u8d70\u5eca\n}\n```\n\n### Part 2. \u80cc\u5305\n\n\u8282\u70b9\u5206\u4e3a\u4e24\u7c7b\uff0c\u4e00\u7c7b\u662f\u6ca1\u753b\u7684\u8d70\u5eca\uff0c\u4e00\u7c7b\u662f\u6709\u753b\u7684\u5c55\u5385\u3002\u4e0d\u59a8\u8bbe $f[x][t]$ \u8868\u793a $x$ \u53f7\u8282\u70b9\u5728\u7b2c $t$ \u79d2\u53ef\u4ee5\u6295\u591a\u5c11\u5e45\u753b\u3002  \n\u5728\u4ee5\u4e0b\u7684\u4ee3\u7801\u4e2d\uff0c`tim` \u6307\u5230\u8fbe $x$ \u53f7\u8282\u70b9**\u672b\u7aef**\u6240\u9700\u8981\u7684\u65f6\u95f4\uff1b`m` \u6307\u8b66\u5bdf\u5230\u7684\u65f6\u95f4**\u51cf1**\uff08\u56e0\u4e3a\u4f60\u53ea\u80fd\u5077\u8fd9\u4e48\u4e45\uff09\n\n \u6211\u4eec\u5148\u8ba8\u8bba\u5c55\u5385\u3002\u5f88\u663e\u7136\u6bcf\u5e45\u753b\u53ea\u80fd\u5077\u4e00\u6b21\uff0c\u56e0\u6b64\u6700\u591a\u5077 $a[x]$ \u5e45\u3002\u5077\u4e00\u5e45\u753b\u9700\u8981\u4e94\u79d2\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b $f[x][t]=f[x][t-5]+1$\u3002\n```\nfor(int i=1;i<=a[x];++i){  //\u679a\u4e3e\u50771\u526f\u5230\u5168\u90e8\u5077\u5b8c\n\tint now=tim+(i*5); \n\tif(now>m)break;   //\u4f60\u5fc5\u987b\u5728\u8b66\u5bdf\u6765\u4e4b\u524d\u9003\u8d70\n\tf[x][now]=f[x][now-5]+1;\n}\n```\n\n\u6211\u4eec\u518d\u8ba8\u8bba\u66f4\u590d\u6742\u7684\u8d70\u5eca\u3002\u7531\u4e8e\u5148\u5077\u5de6\u513f\u5b50\u548c\u5148\u5077\u53f3\u513f\u5b50\u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u5f8b\u89c6\u4e3a\u5148\u5077\u5de6\u513f\u5b50\u3002\u5047\u8bbe\u6b64\u4eba\u82b1\u4e86 $i$ \u79d2\u5728\u5de6\u513f\u5b50\u5077\u753b\uff0c\u82b1\u4e86 $j$ \u79d2\u5728\u53f3\u513f\u5b50\u5077\u753b\u3002\uff08\u5982\u679c\u6ca1\u6709\u53bb\u5de6/\u53f3\u513f\u5b50\uff0c\u90a3\u4e48 $i/j$ \u4e3a$0$\uff09\u7531\u4e8e\u4ed6\u5230\u8fbe $x$ \u53f7\u8d70\u5eca\u7684\u65f6\u523b\u662f  $tim$ \uff0c\u6240\u4ee5\u4ed6\u79bb\u5f00\u7684\u65f6\u95f4\u662f $tim+i+j$ \u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u65b9\u7a0b $f[x][tim+i+j] = max( f[x][tim+i+j] , f[l][tim+i] + f[r][tim+j] )$\n\n```\nint l=x<<1,r=x<<1|1;\ndfs(l,tim+t[l]);  //\u5148\u9012\u5f52\u513f\u5b50\uff0c\u518d\u56de\u6eaf\ndfs(r,tim+t[r]);\nfor(int i=0;i<=m-tim;++i)  //\u5de6\u513f\u5b50\u5077i\u79d2\n for(int j=0;tim+i+j<=m;++j)  //\u53f3\u513f\u5b50\u5077j\u79d2\n  tomax(f[x][tim+i+j],f[l][tim+i]+f[r][tim+j]);\n ```\n\u6700\u540e\u7684\u7b54\u6848\u5e94\u8be5\u662f $f[1][m]$\u3002\u6ce8\u610f $m$ \u7b49\u4e8e\u8b66\u5bdf\u5230\u8fbe\u7684\u65f6\u95f4**\u51cf1**\u54e6\u3002\n\n## 2.\u5b8c\u6574\u4ee3\u7801\n\n```\n#include<cstdio>\n\nint t[405],a[405],f[405][605],ans,m;\n\nvoid build(int x){   //\u8bfb\u5165\n\tscanf(\"%d%d\",&t[x],&a[x]);\n\tt[x]<<=1;\n\tif(!a[x])build(x<<1),build(x<<1|1);\n}\n\ninline void tomax(int &a,int b){if(a<b)a=b;}\nvoid dfs(int x,int tim){   //\u6811\u5f62DP\u4e3b\u4f53\n\tif(!a[x]){\n\t\tint l=x<<1,r=x<<1|1;\n\t\tdfs(l,tim+t[l]);\n\t\tdfs(r,tim+t[r]);\n\t\tfor(int i=0;i<=m-tim;++i)\n\t\t for(int j=0;tim+i+j<=m;++j)\n\t\t  tomax(f[x][tim+i+j],f[l][tim+i]+f[r][tim+j]);\n\t}else{\n\t\tfor(int i=1;i<=a[x];++i){\n\t\t\tint now=tim+(i*5);\n\t\t\tif(now>m)break;\n\t\t\tf[x][now]=f[x][now-5]+1;\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d\",&m);--m;  //\u8bfb\u5165\u4e0e\u9884\u5904\u7406\n\tbuild(1);\n\tdfs(1,t[1]);\n\tprintf(\"%d\",f[1][m]);\n\treturn 0;\n}\n```\n## 3.\u5199\u5728\u540e\u9762\n\n\u505a\u5b8c\u6b64\u9898\u53ef\u4ee5\u7ee7\u7eed\u5c1d\u8bd5\u5f88\u7c7b\u4f3c\u7684 [P3360 \u5077\u5929\u6362\u65e5](https://www.luogu.com.cn/problem/P3360)\n\nDP\u4e0d\u6613\uff0c\u591a\u52a0\u7ec3\u4e60",
        "postTime": 1576320208,
        "uid": 45176,
        "name": "FCBM71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "~~DP\u666e\u53ca-\uff0c\u8bfb\u5165 IOI+~~\n\n```cpp\n\u8bbef[i,j]\u8868\u793a\u5728\u7ed3\u70b9i\uff0c\u62ff\u4e86j\u5e45\u753b\u9700\u8981\u7684\u6700\u5c11\u65f6\u95f4\uff1b\n\n\u8fb9\u754c\uff1af[u,i]=i*5(0<=i<=c[u],u\u662f\u53f6\u5b50\u7ed3\u70b9)\uff1b\n\n\u76ee\u6807: max{i}(f[root][i]<tim)\uff1b\n\n\u51b3\u7b56\uff1af[u][i+j]=min{f[lson][i]+f[rson][j]+2*(cost[lson]+cost[rson])}\uff1b\n\n\t  \u5373\u5728\u5de6\u513f\u5b50\u5904\u5077i\u4ef6\uff0c\u5728\u53f3\u513f\u5b50\u5904\u5077j\u4ef6\u7684\u6700\u5c0f\u6d88\u8d39\n```\n\u8bfb\u5165\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u7ed9\u5b9a\u7684dfs\u5e8f\u8fdb\u884c\u9012\u5f52\u5904\u7406\uff08\u89c1\u4ee3\u7801\uff09\u3002\n```cpp\n#include<bits/stdc++.h>\n#define v first\n#define w second\nusing namespace std;\nconst int maxn=600+10;\nint n=1,tim;\nint f[maxn][maxn];//\u5728\u7ed3\u70b9i\u5077\u5230j\u5e45\u753b\u7684\u6700\u5c11\u65f6\u95f4 \nint c[maxn];\nvector<pair<int,int> >G[maxn];\n\nvoid read(int u){\n\tint w,val;\n\tscanf(\"%d%d\",&w,&val);\n\tif(val){//\u5904\u7406\u9012\u5f52\u7ec8\u70b9 \n\t\tG[u].push_back(make_pair(++n,w));\n\t\tc[n]=val;\n\t\treturn;\n\t}\n\tG[u].push_back(make_pair(++n,w));\n\tint v=n;\n\tread(v); read(v);\n\t//\u8bfb\u5165v\u7684\u4e24\u4e2a\u513f\u5b50 \n}\n\nvoid input(){\n\tcin>>tim;\n\tread(1);\n}\n\nvoid dp(int u){\n\tif(G[u].empty()){\n\t\tfor(int i=0;i<=c[u];++i) f[u][i]=i*5;\n\t\treturn;\n\t}\n\tif(u==1){\n\t\tdp(G[u][0].v);\n\t\tf[u][0]=0;\n\t\tfor(int i=1;i<=600;++i) f[u][i]=f[G[u][0].v][i]+G[u][0].w*2;\n\t\treturn;\n\t}\n\tdp(G[u][0].v);\n\tdp(G[u][1].v);\n\tfor(int i=0;i<=600;++i)\n\t\tfor(int j=0;i+j<=600;++j){\n\t\t\t//\u7ecf\u5206\u6790\u53ef\u77e5\uff0c\u6bcf\u4e00\u5c42\u5077\u5230\u7684\u753b\u4e0d\u8db3120\u5e45\uff0c\u8fd9\u91cc\u7528\u4e0d\u5f71\u54cd\u6548\u7387\u7684\u5145\u5206\u5927\u6570\u6765\u4ee3\u66ff \n\t\t\tint lw=i?G[u][0].w:0,rw=j?G[u][1].w:0;\n\t\t\tf[u][i+j]=min(f[u][i+j],f[G[u][0].v][i]+f[G[u][1].v][j]+lw*2+rw*2);\n\t\t}\n}\n\nvoid solve(){\n\tmemset(f,0x3f,sizeof(f));\n\tdp(1);\n\tint ans=0;\n\tfor(int i=1;i<=600;++i) if(f[1][i]<tim) ans=i;\n\tcout<<ans;\n}\n\nint main(){\n\tinput();\n\tsolve();\n\treturn 0;\n}\n\n```",
        "postTime": 1539267680,
        "uid": 38283,
        "name": "Dog_Two",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "/\\*\n\u57fa\u7840\u6811\u5f62dp   \u6709\u4f9d\u8d56\u6027\u80cc\u5305\u95ee\u9898\n\nf[i][j]\u8868\u793a\u5f53\u524d\u8282\u70b9\u4e3ai\u7528\u6389j\u79d2\u6240\u53d6\u5f97\u7684\u6700\u5927\u503c\n\n\u8f6c\u79fb\u7684\u65f6\u5019 \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u5b50\u8282\u70b9\uff0c\u5c31\u5224\u65ad\u80fd\u53d6\u591a\u5c11\n\n\u5982\u679c\u4e0d\u662f\u5c31\u679a\u4e3e\u5f53\u524d\u8282\u70b9\u6240\u5206\u914d\u7ed9\u5de6\u6811\u7684\u65f6\u95f4\uff0c\u7531\u5de6\u53f3\u5b50\u6811\u7684\u548c\u8f6c\u79fb\u6765\u3002\n\n\\*/\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define maxn 1001\nusing namespace std;\nint n,cnt,tot;\nint f[maxn][maxn];\nvoid dfs()\n{\n    int root=++cnt,limit,time;\n    scanf(\"%d%d\",&limit,&tot);\n    limit<<=1;\n    if(tot)//\u5b50\u8282\u70b9 \n    {\n        for(int time=limit;time<=n;time++)\n          f[root][time]=min((time-limit)/5,tot);//\u5224\u65ad\u53d6\u591a\u5c11 \n    }\n    else\n    {\n        int left=cnt+1,right;dfs();\n        right=cnt+1;dfs();\n        for(int time=limit;time<=n;time++)\n          for(int lctime=0;lctime<=time-limit;lctime++)//\u5206\u914d\u7ed9\u5de6\u6811\u7684\u65f6\u95f4 \n          {\n              f[root][time]=max(f[root][time],f[left][lctime]+f[right][time-limit-lctime]);//\u5de6\u53f3\u5b50\u6811\u7684\u548c \n          }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);n--;\n    dfs();\n    printf(\"%d\\n\",f[1][n]);\n    return 0;\n}\n\n```",
        "postTime": 1486078331,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "### $\\text{\u4e00\u5343\u4e2aOier\u7a0b\u5e8f\u4e2d\u6709\u4e00\u5343\u79cd\u6811\u5f62DP}$\n\n\u601d\u8def\u90fd\u5dee\u4e0d\u591a\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u72b6\u6001\u5b9a\u4e49\u4e0e\u8f6c\u79fb\n\n\u4e0d\u59a8\u5b9a\u4e49$dp[i][j]$\u8868\u793a\uff0c\u5728$i$\u5b50\u6811\u5185\uff0c\u5077$j$\u5f20\u753b\uff0c\u4e14\u4e0d\u8003\u8651\u6839\u5230$i$\u7236\u8282\u70b9\u8def\u5f84\u4ee3\u4ef7\u7684\u6700\u77ed\u65f6\u95f4\n\n$a[i]$\u8868\u793a$i$\u4e0e\u5176\u7236\u8282\u70b9\u7684\u8ddd\u79bb\n\n$d[i]$\u8868\u793a$i$\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\n\n#### \u4e0d\u96be\u60f3\u51fa\u8f6c\u79fb\n\n### $dp[i][j]=min\\left\\{dp[son1][k]+dp[son2][j-k]+dis[x]\\right\\}$\n\n#### \u7edf\u8ba1\u7b54\u6848\n\n\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\u9009\u51e0\u4e2a\uff0c\u5982\u679c$dp[i][j]+d[i]-a[i]<=s$\uff0c\u66f4\u65b0\u7b54\u6848\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint size[1010],s,cnt,a[1010],v[1010],e[1010][2],dp[1010][2010],ans,d[1010];\nvoid init(int x)\n{\n\tint t,to;\n\tif(scanf(\"%d%d\",&t,&to)!=2)\n\t\treturn;\n\td[x]+=2*t,a[x]=2*t,dp[x][0]=0;\n\tif(to)\n\t\tv[x]=to;\n\telse\n\t{\n\t\td[++cnt]=d[x],init(e[x][0]=cnt);\n\t\td[++cnt]=d[x],init(e[x][1]=cnt);\n\t}\n}\nvoid dfs(int x)\n{\n\tif(!x)\n\t\treturn;\n\tdfs(e[x][0]),dfs(e[x][1]);\n\tsize[x]=v[x]+size[e[x][0]]+size[e[x][1]];\n\tif(v[x])\n\t\tfor(int i=1;i<=v[x];i++)\n\t\t\tdp[x][i]=a[x]+dp[x][0]+5*i;\n\telse\n\t\tfor(int i=1;i<=size[x];i++)\n\t\t\tfor(int j=0;j<=i;j++)\n\t\t\t\tdp[x][i]=min(dp[x][i],dp[e[x][0]][j]+dp[e[x][1]][i-j]+a[x]);\n}\nint main()\n{\n\tscanf(\"%d\",&s);\n\tmemset(dp,0x3f,sizeof(dp));\n\tinit(++cnt);\n\tdfs(1);\n\tfor(int i=1;i<=cnt;i++)\n\t\tfor(int j=1;j<=size[i];j++)\n\t\t\tif(dp[i][j]+d[i]-a[i]<s)\n\t\t\t\tans=max(ans,j);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1539313077,
        "uid": 57045,
        "name": "communist",
        "ccfLevel": 7,
        "title": "P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u611f\u89c9\u662f\u6811\u5f62DP\u201c\u9752\u6625\u7248\u201d\n\n\u5c31\u53ea\u7528\u6df1\u641c\u548c\u56de\u6eaf\uff08\u56de\u6eaf\u7684\u65f6\u5019\u5e72\u5e72DP\u4e4b\u4e8b\uff09\u5c31\u53ef\u4ee5\u8fc7\n\n\u904d\u5386\u5230\u53f6\u5b50\u7684\u65f6\u5019\u5c06\u5176\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\n\n\u8981\u6ce8\u610f\u51e0\u70b9\uff1a\u9996\u5148\u662f\u6bcf\u6761\u8def\u90fd\u8981\u8d70\u4e24\u6b21\uff08\u5c0f\u5077\u603b\u4e0d\u80fd\u5728\u7ba1\u91cc\u5934\u8fc7\u591c\uff09\uff0c\u5176\u6b21\u662f\u6700\u540e\u4e00\u79d2\uff08\u4e0d\u53ef\u4ee5\u548c\u963fsir\u649e\u4e2a\u6ee1\u6000\uff09\n\n\u6700\u540e\u7ed9\u51fa\u4ee3\u7801\uff08\u8be6\u7ec6\u6ce8\u89e3\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint f[100100][610];\nint ls[100100],rs[100100];\nint t,tot;\nvoid build(int now)//dfs\n{\n\tint x,y;//x\u4ee3\u8868\u8def\u5f84\u957f\u5ea6\n\tscanf(\"%d%d\",&x,&y);\n\tif(y==0)\n\t{\n\t\tls[now]=++tot;build(ls[now]);\n\t\trs[now]=++tot;build(rs[now]);\n\t\tfor(int i=x*2+1;i<=t;i++)//\u4ece\u8d70\u5b8c\u8fd9\u6761\u8d70\u5eca\u7684\u65f6\u95f4\u5230\u6700\u540e\n\t\tfor(int j=0;j<=i-x*2;j++)\n//\u5de6\u513f\u5b50\u5206\u914dj\u7684\u65f6\u95f4\uff0c\u53f3\u4e8c\u5b50\u5206\u914d\uff08i-2*x-j\uff09\uff0c\u4e5f\u5c31\u662f\u8d70\u5b8c\u4e4b\u524d\u7684\u8d70\u5eca\u5206\u914d\u7ed9\u513f\u5b50\u7684\u65f6\u95f4\u51cf\u53bb\u5de6\u513f\u5b50\u5206\u914d\u5230\u7684\u65f6\u95f4\n\t\tf[now][i]=max(f[now][i],f[ls[now]][j]+f[rs[now]][i-2*x-j]);\n\t}\n\telse\n\t{\n\t\tfor(int i=x*2+5;i<=min(x*2+y*5,t);i++)f[now][i]=(i-x*2)/5;\n//\u8fd9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u53ea\u7ba1\u5077\u753b\uff08\u5e94\u8be5\u53ef\u4ee5\u4e0d\u7528\u8fd9\u4e2amin\uff09\n\t\tfor(int i=x*2+y*5+1;i<=t;i++)f[now][i]=f[now][i-1];\n//\u753b\u4e0d\u591f\u5077\u6ce8\u610f\u8865\u9f50\u5594\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\tbuild(0);\n\tprintf(\"%d\",f[0][t-1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1576246965,
        "uid": 90472,
        "name": "OHYEP",
        "ccfLevel": 0,
        "title": "P1270 \u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986"
    },
    {
        "content": "\u672c\u6587\u5c06\u540c\u6b65\u5230 [Hexo \u535a\u5ba2](https://mraymes.github.io).\n\n~~\u8bdd\u8bf4\u6211\u4eec\u4e3a\u5565\u8981\u5e2e\u5c0f\u5077\u554a, \u6709\u70b9\u8ff7~~\n\n\u8fd9\u662f\u4e00\u9053\u6811\u5f62 DP \u9898.  \n\u548c\u6811\u4e0a\u80cc\u5305\u7684\u5927\u81f4\u5199\u6cd5\u6bd4\u8f83\u7c7b\u4f3c, \u4f46\u662f\u56e0\u4e3a\u6309\u7f8e\u672f\u9986\u7684\u7ed3\u6784\u5efa\u6210\u7684\u6811\u662f\u4e8c\u53c9\u6811\u6240\u4ee5\u6ca1\u90a3\u4e48\u590d\u6742.\n\n\u9996\u5148\u5728\u5efa\u6811\u7684\u8fc7\u7a0b\u4e2d\u5c06\u8d70\u8fc7\u8d70\u5eca\u9700\u8981\u7684\u65f6\u95f4 (\u8fb9\u6743) \u8f6c\u79fb\u5230\u5c94\u8def\u53e3 (\u70b9) \u4e0a, \u8fd9\u6837\u4f1a\u4f7f\u8f6c\u79fb\u7684\u65f6\u5019\u65b9\u4fbf\u4e00\u4e9b.  \n\u5e76\u4e14\u5f53\u7236\u8282\u70b9\u4e3a `u` \u7684\u65f6\u5019, \u5b50\u8282\u70b9\u7f16\u53f7\u8bbe\u4e3a `u << 1` \u4ee5\u53ca `u << 1 | 1`.\n\n`f[i][j]` \u4e3a\u4ee5 `i` \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u82b1\u8d39 `j` \u7684\u65f6\u95f4\u80fd\u62ff\u5230\u7684\u753b\u7684\u6700\u5927\u503c.  \n\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b:\n$$ f_{i, j} = \\max\\limits_{1 \\leqslant k \\leqslant j - cost_i}\\{f_{2i, k} + f_{2i + 1, j - cost_i - k}\\}\\ (cost_u \\leqslant j \\leqslant t) $$\n\n\u5176\u4e2d `cost[i]` \u4e3a\u7f16\u53f7\u4e3a `i` \u7684\u70b9\u7684\u6743\u503c (\u4ece\u8fb9\u4e0a\u8f6c\u79fb\u540e).\n\n\u5728\u65b9\u7a0b\u4e2d, \u5206\u914d\u7ed9\u5de6\u8fb9\u7684\u65f6\u95f4\u4e3a `k`, \u5206\u914d\u7ed9\u53f3\u8fb9\u7684\u65f6\u95f4\u5c31\u662f `j - cost[i] - k`, \u56e0\u4e3a `j` \u4e3a\u603b\u65f6\u95f4, `cost[i]` \u4e3a\u5230\u8fbe\u8be5\u70b9\u9700\u8981\u7528\u7684\u65f6\u95f4, \u6240\u4ee5\u4e5f\u9700\u8981\u51cf\u53bb.\n\n\u6ce8\u610f `j` \u4e0e `k` \u7684\u8303\u56f4.\n\n\u6ce8\u610f\u5728\u8bfb\u5165\u7684\u65f6\u5019\u8981\u5c06\u6743\u503c\u4e58 `2`, \u56e0\u4e3a\u8981\u5f80\u8fd4, \u5426\u5219\u8b66\u5bdf\u6765\u4e86\u7684\u65f6\u5019\u4f60\u8fd8\u5728\u91cc\u9762, ~~\u4e0d\u5c31\u51c9\u51c9\u4e86\u5417.~~ \u8fd8\u6709\u8bfb\u5165\u7684\u65f6\u95f4\u4e5f\u8981\u51cf `1`, \u56e0\u4e3a\u8b66\u5bdf\u5230\u7684\u65f6\u5019\u4f60\u5fc5\u987b\u8dd1\u8def\u4e86, \u53ea\u6709 `t - 1` \u79d2\u949f\u65f6\u95f4.\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint t;\nint cost[1001], val[1001];\nint f[1001][2001];\nint x, y;\n\ntemplate <typename T>\ninline T read() { // \u5feb\u901f\u8bfb\u5165\n    T x = 0;\n    T multiplier = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-') {\n            multiplier = -1;\n        }\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9') {\n        x = (x << 3) + (x << 1) + (ch & 15);\n        ch = getchar();\n    }\n    return x * multiplier;\n}\n\nvoid input(int u) { // \u9012\u5f52\u8bfb\u5165\n    cost[u] = read<int>() * 2; // \u5c06\u8fb9\u6743\u8f6c\u79fb\u5230\u70b9\u4e0a. \u4e58 2 \u56e0\u4e3a\u8981\u5f80\u8fd4\n    val[u] = read<int>();\n\n    if (!val[u]) { // \u5982\u679c\u662f 0, \u4ee3\u8868\u4e0d\u662f\u53f6\u5b50\u8282\u70b9, \u7ee7\u7eed\u8bfb\u5165\u5b50\u8282\u70b9\n        input(u << 1);\n        input(u << 1 | 1);\n    }\n}\n\nvoid dfs(int u) {\n    if (val[u]) { // \u53f6\u5b50\u8282\u70b9\n        // i / 5 <= val[u] \u5224\u65ad\u753b\u7684\u6570\u91cf\u662f\u5426\u8d85\u51fa\u539f\u6709\u6570\u91cf\n        // cost[u] + i <= t \u5224\u65ad\u65f6\u95f4\u662f\u5426\u8db3\u591f\n        for (int i = 0; i / 5 <= val[u] && cost[u] + i <= t; i++) {\n            f[u][cost[u] + i] = i / 5;\n        }\n        return;\n    }\n\n    dfs(u << 1);\n    dfs(u << 1 | 1);\n\n    for (int i = cost[u]; i <= t; i++) {\n        for (int j = 0; j + cost[u] <= i; j++) { // \u5206\u914d\u7ed9\u5de6\u8fb9\u7684\u65f6\u95f4\n            f[u][i] = max(f[u][i],\n                          f[u << 1][j] + f[u << 1 | 1][i - cost[u] - j]);\n            // \u89c1\u4e0a\u9762\u8f6c\u79fb\u65b9\u7a0b\n        }\n    }\n}\n\nint main() {\n    t = read<int>() - 1; // \u51cf\u53bb\u4e00\u56e0\u4e3a\n    input(1);            // \u9012 (du) \u5f52 (liu) \u8bfb\u5165\n    dfs(1);              // dfs \u7b97\u51fa f \u6570\u7ec4\n    cout << f[1][t] << '\\n'; // \u6839\u8282\u70b9\u4e3a 1, \u8017\u65f6\u4e3a t \u80fd\u62ff\u5230\u7684\u753b\u7684\u6700\u5927\u503c\n    return 0;\n}\n```\n\n~~\u6211\u8868\u793a\u5341\u5206\u4e0d\u7406\u89e3\u4e3a\u5565\u8981\u5728 `dfs()` \u91cc\u9762\u4f20\u5165\u65f6\u95f4...~~  \n\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u7684\u6253\u6cd5\u8ddf\u5176\u4ed6\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u9898\u89e3\u4e0d\u4e00\u6837\u5427. \u53cd\u6b63\u5404\u6709\u5404\u7684\u6253\u6cd5, \u4e60\u60ef\u4e86\u5c31\u597d.\n",
        "postTime": 1557634958,
        "uid": 22227,
        "name": "mraymes",
        "ccfLevel": 7,
        "title": "Solution for Luogu P1270"
    },
    {
        "content": "\u6700\u8fd1\u5728\u5b66\u4e60\u6811\u5f62$dp$\uff0c\u8fd9\u662f\u6211\u7b2c\u4e00\u9053\u6ca1\u6709\u770b\u9898\u89e3AC\u7684\u6811\u5f62$dp$\u9898\uff08\u83dc\u9e21\n***\n## dp\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\u8fd9\u662f\u4e00\u9053\u5f88\u7ecf\u5178\u7684\u6811\u5f62\u80cc\u5305dp\uff0c\u53ef\u4ee5\u8bf4\u662f\u591a\u91cd\u80cc\u5305\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e0d\u96be\u60f3\u5230\u3002  \n\u770b\u5230\u9898\u89e3\u91cc\u6709\u4eba\u8bbe$dp[i][j]$\u7684$j$\u8868\u793a\u62ff\u7684\u753b\u7684\u6570\u91cf\uff0c\u8fd9\u91cc\u6211\u7528\u7684\u662f\u7ecf\u5178\u80cc\u5305\n\u95ee\u9898\u7684\u89e3\u6cd5\uff0c\u8bbe$dp[i][j]$\u4e3a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u6d88\u8017$j$\u79d2\u80fd\u62ff\u7684\u753b\u7684\u6700\u5927\u503c\u3002  \n\u5f88\u663e\u7136\uff0c\u8f6c\u79fb\u65b9\u7a0b\uff1a  \n$$dp[u][j]=max(dp[u][j],dp[u][j-k-w]+dp[v][k])$$  \n$$(w<=j<=min(n,size[u]),0<=k<=min(j-w,size[v]))$$\n\u5176\u4e2d\uff0c$v$\u662f$u$\u7684\u5b50\u7ed3\u70b9\uff0c$k$\u8868\u793a\u5728\u4ee5$v$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u65f6\u95f4\uff0c$w$\u662f\u8fb9\u6743\uff0c\u8868\u793a\u4ece$i$\u8d70\u5230$son[i]$\u9700\u8981\u7684\u65f6\u95f4\uff0c$size[i]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u8fb9\u6743\u4e4b\u548c\u3002  \n\u5230\u8fd9\u91cc\uff0c\u8fd9\u9053\u9898\u76ee\u7684\u6838\u5fc3\u5185\u5bb9$dp$\u5f0f\u5b50\u5c31\u89e3\u51b3\u4e86\uff0c\u63a5\u4e0b\u6765\u89e3\u51b3\u4e00\u4e9b\u8fd9\u9053\u9898\u4e2d\u6bd4\u8f83\u7279\u6b8a\u7684\u95ee\u9898\u3002  \n***\n## \u8bfb\u5165\u4e00\u9897\u6811  \n\u8fd9\u9053\u9898\u76ee\u7684\u8bfb\u5165\u65b9\u5f0f\u8ddf\u6b63\u5e38\u7684\u9898\u76ee\u4e0d\u592a\u4e00\u6837\uff0c\u662f\u7528$dfs$\u5e8f\u6765\u8bfb\u5165\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u8bfb\u5165\u6570\u636e\u3002  \n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5904\u7406\u4e24\u4e2a\u4fe1\u606f\uff1a$time$\u548c$pic$\u3002  \n\u5c06\u5b83\u7684\u7236\u7ed3\u70b9\u8fde\u5230\u5b83\uff0c\u8fb9\u6743\u4e3a\u7236\u7ed3\u70b9\u8d70\u5230\u8be5\u8282\u70b9\u7684\u65f6\u95f4$time * 2$\uff08\u5c0f\u5077\u8981\u6765\u56de\u8dd1\u540c\u4e00\u6761\u8fb9\uff09\u3002  \n\u5bf9\u4e8e\u975e$0$\u7684$pic$\u4fe1\u606f\uff0c\u7531\u4e8e\u9898\u76ee\u8bf4\u62ff\u6bcf\u4e00\u5e45\u753b\u90fd\u9700\u8981$5$\u79d2\u65f6\u95f4\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u5b58\u50a8\u4e3a$dp$\u4e2d\u7684\u503c\uff0c\u4e8e\u662f\u6211\u6539\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a\u5c06\u6bcf\u4e00\u5e45\u753b\u5316\u4e3a\u4e00\u6761\u8fb9\uff0c\u6bcf\u6709\u4e00\u5e45\u753b\uff0c\u5c31\u5c06\u8be5\u53f6\u5b50\u8282\u70b9\uff08\u5c55\u89c8\u5ba4\uff09\u8fde\u4e00\u6761\u5411\u4e00\u4e2a\u56fa\u5b9a\u7684\u865a\u62df\u7ed3\u70b9\uff08$0$\u53f7\u8282\u70b9\uff09\u7684\u8fb9\uff0c\u8fb9\u6743\u4e3a$5$\uff0c\u5373$add(x,0,5)$\uff0c\u7136\u540e\u8bbe$dp[0][0]=1$\u5c31\u884c\u4e86\u3002  \n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f$max(dp[root][i])$\uff0c\u6ce8\u610f$1<=i<n$\uff0c\u56e0\u4e3a\u9898\u9762\u4e2d\u8bf4\u201c\u5728\u8b66\u5bdf\u8d76\u6765\u4e4b\u524d\u201d\uff0c\u6240\u4ee5\u662f\u4e25\u683c\u5c0f\u4e8e\u3002  \n\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u7a7a\u95f4\u590d\u6742\u5ea6\u8f83\u5927\uff08\u56e0\u4e3a\u8981\u8fde\u5f88\u591a\u8fb9\uff09\uff0c\u4f46\u5c06\u5b58\u8fb9\u6570\u7ec4\u5f00\u5927\u4e00\u70b9\uff0c\u4e0d\u4f1aMLE\uff0c\u4eb2\u6d4b\u80fd\u8fc7\u3002  \n***\n## \u4ee3\u7801\uff08\u9644\u6ce8\u91ca\uff09  \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn=20005;\t//\u7a7a\u95f4\u5f00\u5927\u70b9 \n\nstruct edge{\n\tint v,w,next;\n}e[maxn];\nint head[maxn],cnt;\n\nvoid add(int u,int v,int w){\t//\u5b58\u8fb9 \n\te[++cnt].v=v;\n\te[cnt].w=w;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n}\n\nint n,tot,root,ans;\nint dp[maxn][maxn];\t//dp[i][j]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u6d88\u8017j\u79d2\u80fd\u62ff\u5230\u7684\u753b\u7684\u6700\u5927\u503c \nint size[maxn];\n\nvoid insert(int x,int fa){\t//\u5efa\u56fe \n\tint time,pic;\t\t\t//\u4e0a\u4e2a\u70b9\u8d70\u5230\u8fd9\u4e2a\u70b9\u7684\u65f6\u95f4 ,\u8fd9\u4e2a\u70b9\u753b\u7684\u6570\u91cf \t\n\tscanf(\"%d %d\",&time,&pic);\n\tadd(fa,x,time<<1);\t\t//\u5c06\u7236\u7ed3\u70b9\u8fde\u5230\u8be5\u8282\u70b9 \n\tif(!pic){\t\t\t//\u5206\u6210\u4e24\u6761\u8def \n\t\tinsert(++tot,x);\t//tot\u662f\u7ed3\u70b9\u5e8f\u53f7 \n\t\tinsert(++tot,x);\n\t}\n\telse{\t\t\t\t//\u53f6\u5b50\u8282\u70b9 \n\t\twhile(pic--)\t\t//\u6bcf\u6709\u4e00\u5e45\u753b\uff0c\u8fde\u4e00\u6761\u8fb9\u52300\u53f7\u7ed3\u70b9 \n\t\t\tadd(x,0,5);\n\t}\n}\n \nvoid dfs(int u){\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].v,w=e[i].w;\n\t\tdfs(v);\n\t\tsize[u]+=size[v]+w;\n\t\tfor(int j=min(n,size[u]);j>=w;j--)\t//j\u79d2\u7684\u65f6\u95f4\u5728u\u5b50\u6811 \n\t\t\tfor(int k=0;k<=min(j-w,size[v]);k++)  //k\u79d2\u7684\u65f6\u95f4\u8d70\u5230v\u5b50\u6811\n\t\t\t\tdp[u][j]=max(dp[u][j],dp[u][j-k-w]+dp[v][k]);\n\t}\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tn--;\n\troot=tot=1;\n\tinsert(++tot,root);\t//\u4ee5root=1\u4e3a\u8d77\u59cb\u8282\u70b9 \n\tdp[0][0]=1;\n\tdfs(root);\n\tfor(int i=1;i<n;i++)\n\t\tans=max(ans,dp[root][i]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n//\u6811\u4e0a\u591a\u91cd\u80cc\u5305 \n\n```\n\u770b\u5230\u8fd9\u91cc\uff0c\u4e0d\u77e5\u9053\u4f60\u662f\u5426\u5df2\u7ecf\u61c2\u4e86\u5462\uff1f\u5982\u679c\u6709\u4e0d\u61c2\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u79c1\u4fe1\u6211\u6216\u8005\u5728\u53f3\u8fb9\u8bc4\u8bba\u54e6\u3002",
        "postTime": 1564065553,
        "uid": 49092,
        "name": "Hugo_Minion",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "###  \u8bf4\u5b9e\u8bdd\uff0c\u62ff\u5230\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u6811\u5f62dp\uff0c\u4f46\u662f\u53d1\u73b0\u6211\u641e\u4e0d\u6765\uff0c\u4e8e\u662f\u5c31\u5728\u90a3\u91cc\u60f3\u60f3\u53ef\u4e0d\u53ef\u4ee5\u7528dfs\u7684\u5176\u4ed6\u65b9\u5f0f\u914d\u5408\u4e00\u4e0b\uff1b \n### \u9996\u5148\u5982\u679c\u5b9a\u4e49\u4e00\u4e2adp[i][j]\u8868\u793a\u5230\u8fbe\u5f53\u524d\u8282\u70b9i\uff0c\u5269\u4e0b\u7684\u65f6\u95f4j\u7684\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u53ea\u8981\u60f3\u597d\u600e\u4e48\u5de6\u53f3\u600e\u4e48\u914d\u5408\u5206\u914d\u65f6\u95f4\u5c31\u597d\u4e86\uff1b\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n\nusing namespace std;\nint n;\nstruct  node{\n\tint t;\n\tint v;\n}tree[19277];//\u6df1\u5ea6\u5b58\u56fe\u4f7f\u7528 \n\nint dp[19277][707];//d[i][j]\u8868\u793a\u7b2c i\u4e2a\u8282\u70b9\uff0c\u5269\u4f59\u65f6\u95f4\u4e3aj\u7684\u6700\u4f18\u89e3;\u5176\u5b9e\u540e\u9762\u5f88\u591a\u90fd\u53ef\u4ee5\u7b80\u5316\uff0c\u4f46\u662f\u6211\u592a\u61d2\u4e86\uff0c\u5c31\u8fd9\u6837\u5427\uff1b \n\nint readm(int ct)//\u6df1\u5ea6\u5efa\u6811\u5f0f\u5b58\u56fe \n    {\n\t    int a,b;\n\t    scanf(\"%d%d\",&a,&b);\n\t    tree[ct].t=a*2;//\u9884\u5904\u7406\u4e3a2\u500d\u65f6\u95f4\uff0c\u5f85\u4f1a\u513f\u5c31\u53ef\u4ee5\u7b80\u5316\u4e86 \n\t    tree[ct].v=b;\n\t    \n\t    if(b!=0)//\u5df2\u7ecf\u6709\u4e00\u4e2a\u6709\u753b\u7684\u623f\u95f4\u4e86\u5c31\u4e0d\u4f1a\u518d\u6709\u8d70\u5eca\u4e86 \n\t    return 0 ;\n\t    readm(ct*2);\n\t    readm(ct*2+1);//\u5927\u5bb6\u61c2\u7684 \n\t}\n\t\nint dfs(int ct,int s)\n     {\n\t      if(s<5)\n        return 0;//\u5df2\u7ecf\u6ca1\u67095s\u4e86\u5c31\u4e0d\u7528\u7ba1\u540e\u9762\u7684\u4e8b\u4e86\uff0c\u56e0\u4e3a\u62ff\u4e00\u5e45\u753b\u81f3\u5c11\u89815s\uff1b \n\t\t \n     \tif(tree[ct].v!=0)//\u8fd9\u91cc\u6709\u753b \n     \t{\n     \t\t int k1=tree[ct].v;\n     \t\t int k2=s/5;//\u770b\u4e00\u770b\u5f53\u524d\u65f6\u95f4\u6700\u591a\u80fd\u62ff\u591a\u5c11\u5e45\u753b\uff1b \n     \t\t   if(k1<k2)//\u753b\u5c11\u4ee5\u753b\u4e3a\u51c6\uff0c\u753b\u591a\u5c31\u4ee5\u65f6\u95f4\u4e3a\u51c6\uff1b \n     \t\t   return k1;\n     \t\t   return k2;\n     \t}\n     \t  if(dp[ct][s]!=0)\n\t\t   return dp[ct][s]; //\u5982\u679c\u5df2\u7ecf\u6709\u7b54\u6848\u4e86\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de \n\t \n     \t \tint l=tree[ct*2].t;\n     \t    int r=tree[ct*2+1].t;//\u4fdd\u5b58\u4e0b\u6765\u65b9\u4fbf\u4f7f\u7528 \n    \t  \n\t      for(int i=0;i<=s;i++)//\u4ece0\u5f00\u59cb\u5de6\u53f3\u5206\u914d\u65f6\u95f4 \n\t       {\n\t       \t   if(i<l&&(s-i)>=r)\n\t            { \n\t       \t         dp[ct][s]=max(dp[ct][s],dfs(ct*2+1,s-i-r));//\u5de6\u8fb9\u8d70\u4e0d\u4e86\u53ea\u7ba1\u53f3\u8fb9\uff1b \n\t            }\n\t         \telse if(i>=l&&(s-i)<r)\n\t        {\n\t       \t\tdp[ct][s]=max(dp[ct][s],dfs(ct*2,i-l)); //\u53f3\u8fb9\u8d70\u4e0d\u4e86\u53ea\u7ba1\u5de6\u8fb9\uff1b \n\t        }\n\t       \t        else  if(i>=l&&(s-i)>=r)\n\t       \t    {\n\t       \tint k1=dfs(ct*2,i-l);\n\t\t\t  int k2=dfs(ct*2+1,s-i-r);\n\t\t\t  \tdp[ct][s]=max(dp[ct][s],k1+k2);\t//\u5de6\u53f3\u90fd\u53ef\u4ee5\u5c31\u90fd\u641c\u4e00\u904d \n\t       \t   }\n\t       \t        \t\n\t       }\n\t     \n\t    return dp[ct][s];//\u5176\u5b9e\u4f5c\u7528\u4e0d\u5927 \n     }\t\n\t\nint main()//\u517b\u6210\u5148\u770b\u4e3b\u51fd\u6570\u518d\u770b\u5b50\u51fd\u6570\u7684\u597d\u4e60\u60ef\uff1b \n{\n\tmemset(tree,0,sizeof(tree));//\u586b\u5145\u4e60\u60ef\u4e86\uff0c\u5bb3\u6015\u7ffb\u8f66 \n\tscanf(\"%d\",&n);\n    readm(1);//\u5b58\u56fe \n    memset(dp,0,sizeof(dp));//\u540c\u4e0a \n    int ans=dfs(1,n-tree[1].t-1);//\u8981\u8d70\u8fdb\u53bb\u5c31\u4e00\u5b9a\u8981\u5148\u51cf\u53bb\u8fdb\u95e8\u7684\u65f6\u95f4\uff0c\u5e76\u4e14\u591a-1\u662f\u4e3a\u4e86\u4fdd\u8bc1\u53ef\u4ee5\u5728\u8b66\u5bdf\u6765\u4e4b\u524d1s\u8dd1\u6389\uff0c\u4e0d\u7136\u4f60\u7684\u7b2c3\u4e2a\u70b9\u5c31\u4f1a WA\uff1b \n    printf(\"%d\\n\",ans); \n   return 0;\n} \n```\n\n",
        "postTime": 1541139896,
        "uid": 42930,
        "name": "Reduce",
        "ccfLevel": 0,
        "title": "locatep1270"
    },
    {
        "content": "\u603b\u7684\u6765\u8bf4\uff0c\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u662f\u4e00\u9053\u6bd4\u8f83\u8003\u5bdf\u7efc\u5408\u80fd\u529b\u7684\u9898\u76ee\u3002\n\n\u9996\u5148\uff0c\u5ba1\u9898\u662f\u5173\u952e\u3002\u53ea\u6709\u8bfb\u61c2\u4e86\u9898\u610f\uff0c\u624d\u53ef\u80fd\u5199\u51fa\u6b63\u786e\u7684\u7a0b\u5e8f\u3002\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u4e00\u9053\u9898\u76ee\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u4eae\u70b9\u3002\u56e0\u4e3a\u5b83\u4e0d\u540c\u4e8e\u5e73\u5e38\u7684\u8bfb\u5165\uff0c\u800c\u662f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u65b9\u5f0f\u8bfb\u5165\u3002\u6240\u4ee5\uff0c\u7f16\u7a0b\u4eba\u9700\u8981\u975e\u5e38\u719f\u6089\u6df1\u641c\uff0c\u624d\u53ef\u80fd\u6b63\u786e\u5730\u5bfc\u5165\u6570\u636e\u3002\n\n\u5c31\u7b97\u8bfb\u5165\u4e86\u6570\u636e\uff0c\u8bb8\u591a\u540c\u5b66\u8fd8\u662f\u4e0d\u80fd\u628a\u63e1\u597d\u3002\u56e0\u4e3a\u8fd9\u9053\u9898\u76ee\u7684\u6570\u636e\u91cf\u770b\u4f3c\u4e0d\u5927\uff0c\u6240\u4ee5\u6709\u4e9b\u540c\u5b66\u53ef\u80fd\u4f1a\u9677\u5165\u641c\u7d22\u7684\u6b7b\u80e1\u540c\u3002\u5176\u5b9e\u672c\u9898\u7684\u6570\u636e\u91cf\u8fd8\u662f\u5f88\u5927\u7684\uff0c\u56e0\u4e3a\u6bcf\u6761\u8def\u7684\u8d70\u5eca\u4e5f\u9700\u8981\u65f6\u95f4\u3002\u6240\u4ee5\uff0c\u4f1a\u8ba9\u4eba\u6ca1\u6709\u5934\u7eea\u3002\n\n\u5176\u5b9e\uff0c\u9898\u76ee\u5df2\u7ecf\u628a\u6761\u4ef6\u7ed9\u7684\u5f88\u6e05\u695a\u4e86\uff0c**[color=red]\u663e\u7136\uff0c\u7f8e\u672f\u9986\u5c31\u662f\u4e00\u9897\u6811\uff0c\u800c\u4e14\u662f\u4e00\u9897\u4e8c\u53c9\u6811[/color]**\u3002\u90a3\u4e48\uff0c\u8bf4\u5230\u4e8c\u53c9\u6811\uff0c\u53c8\u8bf4\u5230\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u601d\u8def\u5c31\u5f88\u660e\u663e\u4e86\u2014\u2014\u6811\u5f62\u52a8\u89c4\u3002\n\n\n\u8bf4\u5230\u6811\u5f62\u52a8\u89c4\uff0c\u76f8\u4fe1\u8bb8\u591a\u540c\u5b66\u90fd\u6709\u601d\u8def\u4e86\u3002[u]**\u53ea\u8981\u8bbef[x,p]\u8868\u793a\u7b2cx\u548c\u8282\u70b9\uff0c\u8fd8\u6709p\u79d2\u949f\u65f6\u7684\u6700\u4f18\u89e3\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5373\u53ef**[/u]\u3002\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\u3002\n\n\n\u6240\u4ee5\uff0c\u73b0\u5728\u5c31\u7ed9\u51faDP\u7684\u6838\u5fc3\u4ee3\u7801\uff0c\u8f93\u5165\u4e0d\u518d\u9644\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u953b\u70bc\u81ea\u5df1\u7684\u7f16\u5199\u80fd\u529b\u3002\n\n```delphi\n\nfunction dp(x,p:longint):longint;  \nvar  \n  i,r,l,s:longint;  \nbegin    \n  if p=0 then  \n    exit(0);  //\u65f6\u95f4\u4e3a0\uff0c\u663e\u7136\u53ea\u80fd\u5077\u5230\u4e00\u5e45\u753b\n  if f[x,p]<>-1 then  \n    exit(f[x,p]);  //\u5df2\u7ecf\u6c42\u8fc7\u503c\uff0c\u4e0d\u518d\u91cd\u590d\u3002\u7c7b\u4f3c\u4e8e\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u601d\u60f3\u3002\u4e0d\u8fc7\u4e0d\u5199\u5e94\u8be5\u4e5f\u662f\u6ca1\u4e8b\u7684\uff0c\u53ea\u662f\u4e3a\u4e86\u4fdd\u9669\u800c\u5df2\u3002\n  s:=p-a[x]<<1;  //\u7a7f\u8fc7\u540e\u8fd8\u5269\u4e0b\u7684\u65f6\u95f4\uff0c\u663e\u7136\u6709\u53bb\u6709\u56de\uff0c\u65f6\u95f4\u5e94*2\n  if c[x,1]=0 then  //\u8d70\u5230\u5e95\u7684\u60c5\u51b5\n    begin  \n      f[x,p]:=min(b[x],s div 5); //\u6700\u6709\u60c5\u51b5\u4e3a\u62e5\u6709\u7684\u753b\u548c\u80fd\u5077\u5230\u7684\u753b\u7684\u6700\u5c0f\u503c \n      exit(f[x,p]);  \n    end;  \n  r:=c[x,1]; l:=c[x,2];  //\u5de6\u8282\u70b9\u548c\u6709\u8282\u70b9\n  for i:=0 to s do  \n    f[x,p]:=max(f[x,p],dp(r,i)+dp(l,s-i));  //\u65b9\u7a0b\u8f6c\u79fb\n  exit(f[x,p]);  \nend; \n```",
        "postTime": 1396008349,
        "uid": 734,
        "name": "lych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "\u5199\u7bc7\u9898\u89e3\u538b\u538b\u60ca\n\n\u6240\u6709\u4eba\u90fd\u5728\u7528\u4e8c\u53c9\u6811\u904d\u5386\u53ea\u6709\u6211\u7528\u591a\u53c9\u7cfb\u5217\u3002\n\n\u591a\u53c9\u904d\u5386\u5176\u5b9e\u548c\u4e8c\u53c9\u7684\u904d\u5386\u662f\u4e00\u6837\u7684\u3002\n\n\u8fd9\u9053\u9898\u5c31\u662f\u5f88\u88f8\u7684\u6811\u5f62\u80cc\u5305\u3002\u7269\u54c1\u7684\u4f53\u79ef\u5c31\u662f\u65f6\u95f4\u4e86\uff0c\u4ef7\u503c\u5c31\u662f1.\n\n\u7136\u540e\u5c31\u662f\u88f8\u7684\u6811\u5f62\u80cc\u5305\u7684\u6a21\u677f\u4e86\u3002\n\n\u9996\u5148dfs\u5b50\u8282\u70b9\u3002\n\u7136\u540e\u679a\u4e3e\u5f53\u524d\u8282\u70b9\u7684\u4f53\u79ef\uff0c\u679a\u4e3e\u5b50\u8282\u70b9\u7684\u4f53\u79ef\u3002\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\u5f53\u524d\u8282\u70b9\u7684\u4f53\u79ef\u9700\u8981\u5012\u53d9\u679a\u4e3e\uff0c\u4e0d\u7136\u4f1a\u51fa\u9519\u3002\u56e0\u4e3a\u540e\u9762\u7684\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\u7528\u5230\u4e86\u524d\u9762\u7684\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u7528\u91cd\u3002\n\n\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9\u7684\u5904\u7406\u5c31\u662f\u7c7b\u4f3c01\u80cc\u5305\u628a\uff0c\u76f4\u63a5\u7b97\u4e5f\u53ef\u4ee5\u3002\n\n\u56e0\u4e3a\u672c\u4eba\u592a\u84bb\u4e0d\u4f1a\u5199\u4e8c\u53c9\u7684\uff0c\u6240\u4ee5\u53ea\u80fd\u5199\u591a\u53c9\u4e86\u3002\u5176\u5b9e\u90fd\u4e00\u6837\u3002\n\n\u8bfb\u5165\u7684\u8bdd\u7528\u9012\u5f52\u8bfb\u5c31\u884c\u4e86\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\u7528\u7684\u65f6\u95f4\u8981\u4e25\u683c\u5c0f\u4e8e\u8b66\u5bdf\u6765\u7684\u65f6\u95f4\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nconst int maxn=1e4+10;\n\nint tim,num,tot;\nint hav[maxn],g[maxn],dp[maxn][610];\nstruct line\n{\n\tint to,next,w;\n}edge[maxn*2];\n\nvoid add1(int a,int b,int c)\n{\n\tedge[++tot].to=b;\n\tedge[tot].w=c;\n\tedge[tot].next=g[a];\n\tg[a]=tot;\n}\nvoid dfs(int cur,int fa)\t\t//\u8bfb\u5165\u5c31\u4e0d\u89e3\u91ca\u4e86\u3002 \n{\n\tint w=0,x=0;\n\tscanf(\"%d %d\",&w,&x);\n\tadd1(fa,cur,w*2);\n\tif(x)\n\t{\n\t\thav[cur]=x;\n\t\treturn;\n\t}\n\tdfs(++num,cur);\n\tdfs(++num,cur);\n}\nvoid dfs2(int cur)\n{\n\tif(hav[cur])\t\t\t\t\t//\u8ba1\u7b97\u53f6\u5b50\u8282\u70b9\u7684\u8d21\u732e \n\t{\n\t\tfor(int i=5;i<=tim;i++)dp[cur][i]=min(hav[cur],dp[cur][i-5]+1);\n\t\treturn;\n\t}\n\tfor(int i=g[cur];i;i=edge[i].next)//\u904d\u5386\u513f\u5b50 \n\t{\n\t\tdfs2(edge[i].to);\t\t\t//\u5148dp\u513f\u5b50 \n\t\tfor(int j=tim;j>=edge[i].w;j--)\t//\u9006\u5e8f\u679a\u4e3e\u5f53\u524d\u70b9\u7528\u5230\u7684\u4f53\u79ef\uff0c\uff0c\u9006\u5e8f\u7684\u4f5c\u7528\u548c\u6eda\u52a8\u6570\u7ec4\u4e00\u6837 \n\t\t\tfor(int k=edge[i].w;k<=j;k++)\t//\u679a\u4e3e\u513f\u5b50\u7684\u4f53\u79ef\u3002 \n\t\t\t\tdp[cur][j]=max(dp[cur][j],dp[cur][j-k]+dp[edge[i].to][k-edge[i].w]);//\u7ed9\u513f\u5b50k\u7684\u4f53\u79ef\uff0c\u81ea\u5df1\u8fd8\u5269j-k\uff0c\u5230\u513f\u5b50\u8981\u5148\u8d70\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u513f\u5b50\u80fd\u7528\u7684\u4f53\u79ef\u5c31\u662fk-\u8fb9\u6743 \n\t}\n}\nvoid print(int cur)\n{\n\tcout<<cur<<\" \";\n\tfor(int i=g[cur];i;i=edge[i].next)\n\t\tprint(edge[i].to);\n}\nint main()\n{\n\tscanf(\"%d\",&tim);\n\tdfs(++num,0);\t\t//\u8bfb\u5165 \n\tdfs2(0);\t\t\t//dp \n\tcout<<dp[0][tim-1];\n\treturn 0;\n}\n```",
        "postTime": 1540369416,
        "uid": 54825,
        "name": "ysj1173886760",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "\n\u8981\u505a\u597d\u8fd9\u9053\u9898\uff0c\u9996\u5148\u8981\u4ed4\u7ec6\u8bfb\u9898\uff08\u6709\u4e24\u4e2a\u5c0f\u5751\uff09\uff0c\u6211\u5c31\u56e0\u4e3a\u8bfb\u9519\u4e86\u9898\u5bfc\u81f4\u5012\u6570\u7b2c\u4e8c\u4e2a\u70b9\u591a\u5077\u4e86\u4e00\u5e45\u753b\u3002\n\n\n\u300a\u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a\u300b\u662f\u7206\u641c\u5c31\u80fd\u8fc7\u7684\uff0c\u4e8e\u662f\u8fd9\u9898\u6211\u4e5f\u5148\u5199\u4e86\u7206\u641c\uff0c\u7ed3\u679c40\u5206\u2026\n\n\n\n\n\n    \n\n```cpp\nstruct Node {\n    int lc, rc, t, p; // \u8d70\u5eca\u957f\u5ea6\uff0c\u753b\u7684\u6570\u91cf\n    Node(int a = 0, int b = 0, int c = -1, int d = -1)\n        : t(a), p(b), lc(c), rc(d) {\n    }\n} tree[666];\nint n(0);\nint build(int root) {\n    int a, b;\n    scanf(\"%d%d\", &a, &b);\n    tree[root] = (b ? Node(a * 2, b) : Node(a * 2, b, build(++n),\n        build(++n))); // \u6df1\u641c\u5efa\u6811\n    return root;\n}\nint dp(int root, int time) { // dp[i,j]\u8868\u793a\u7528j\u79d2\u56de\u5230i\u70b9\u6700\u591a\u62ff\u51e0\u5e45\u753b\n    if (tree[root].p)\n        return std::min((time - tree[root].t) / 5, tree[root].p); // \u53f6\u8282\u70b9\n    int maxt(time - tree[root].t),\n        ans(max(max(0, dp(tree[root].lc, maxt)), dp(tree[root].rc, maxt)));\n    for (int i(0); i < maxt; ++i)\n        ans = max(ans, dp(tree[root].lc, i) + dp(tree[root].rc, maxt - i));\n    return ans;\n}\n```\n\u4e8e\u662f\u6211\u53c8\u6539\u6210\u4e86\u6811\u5f62DP\uff0c\u5c31\u53ef\u4ee5\u8fc7\u4e86\n\n\n```cpp\nvoid dp(int root) {\n    if (tree[root].lc >= 0) {\n        dp(tree[root].lc);\n        dp(tree[root].rc);\n        for (int i(tree[root].t); i <= tot; ++i)\n            for (int j(0); j <= i - tree[root].t; ++j)\n                f[root][i] =\n                    max(f[root][i], f[tree[root].lc][j] +\n                f[tree[root].rc][i - tree[root].t - j]);\n    }\n    else\n        for (int i(tree[root].t); i <= tot; ++i)\n            f[root][i] = std::min((i - tree[root].t) / 5, tree[root].p);\n}\n```\n\u8fd9\u79cd\u6811\u5f62DP\u662f\u4ee5\u6bcf\u4e00\u68f5\u5b50\u6811\u4e3a\u9636\u6bb5\uff0c\u72b6\u6001\u4e00\u822c\u662f\u4e8c\u7ef4\u7684\uff0c\u7b2c\u4e00\u7ef4\u662f\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u7b2c\u4e8c\u7ef4\u662f\u4ee3\u4ef7\uff0cDP\u503c\u662f\u6240\u6c42\u7684\u7b54\u6848\uff1b\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u5b9e\u73b0\uff0c\u8981\u5148\u5224\u65ad\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u51b3\u7b56\u65f6\u8981\u679a\u4e3e\u53ef\u80fd\u7684\u4ee3\u4ef7\u5206\u7ed9\u5b50\u6811\uff0c\u9012\u5f52\u540e\u9009\u53d6\u6700\u4f18\u65b9\u6848\u3002\n\n\u524d\u4eba\u4e4b\u8ff0\u5907\u77e3\uff0c\u7136\u5219\u2026\n\n\u6211\u8fd9\u79cd\u7b97\u6cd5\u4f1a\u8ba1\u7b97\u4e00\u4e9b\u7528\u4e0d\u5230\u7684\u72b6\u6001\uff0c\u4f46\u5927\u5927\u51cf\u5c11\u4e86\u9012\u5f52\u8c03\u7528\u7684\u6b21\u6570\uff0c\u7136\u800c\u8fd8\u662f\u6bd4\u6807\u7a0b\u6162\u4e00\u4e9b\u3002\n\n\u5199\u5b8c\u540e\u53d1\u73b0\uff0c\u5efa\u6811\u662f\u540e\u5e8f\u904d\u5386\uff0cDP\u4e5f\u662f\u540e\u5e8f\u904d\u5386\uff0c\u4e8c\u8005\u7684\u7ed3\u6784\u6709\u7740\u60ca\u4eba\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u6240\u4ee5\uff0c\u4e0d\u7528\u5efa\u6811\uff01\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n// CodeVS 1163\n#include<cstdio>\n#include<algorithm>\nusing std::max;\n\nint tot, n(0), dp[666][666]; // dp[i,j]\u8868\u793a\u7528j\u79d2\u56de\u5230i\u6700\u591a\u62ff\u51e0\u5e45\u753b\n\nvoid dfs(int root) {\n    int time, pic;\n    scanf(\"%d%d\", &time, &pic);\n    time *= 2; // \u8d70\u5eca\u8981\u8d70\u4e24\u904d\n    if (!pic) { // \u5982\u679c\u4e0d\u662f\u53f6\u8282\u70b9\n        int lc(++n), rc(++n); // \u540e\u5e8f\u904d\u5386\n        dfs(lc);\n        dfs(rc);\n        for (int i(time); i <= tot; ++i)\n            for (int j(0); j <= i - time; ++j) // \u4ece\u53bb\u5de6\u8fb9j\u79d2\uff0c\u53bb\u53f3\u8fb9\u53ef\u7528\u65f6\u95f4\u51cfj\u79d2\n                    dp[root][i] =\n                    max(dp[root][i], dp[lc][j] + dp[rc][i - time - j]);\n    }\n    else\n        for (int i(time); i <= tot; ++i)\n            dp[root][i] = std::min((i - time) / 5, pic);\n}\n\nint main() {\n    scanf(\"%d\", &tot);\n    dfs(0);\n    printf(\"%d\\n\", dp[0][tot]);\n    return 0;\n}\n```",
        "postTime": 1474674160,
        "uid": 22214,
        "name": "wffms69_8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1270)\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n\u6811\u5f62DP\u3002\n\n## \u9898\u610f\u63cf\u8ff0\n\n- \u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8fb9\u6743\u7ed9\u5b9a\uff0c\u70b9\u6743\u7ed9\u5b9a\uff0c\u95ee\u6700\u591a\u5728\u7ed9\u5b9a\u503c\u5185\u80fd\u62ff\u5230\u591a\u5c11\u70b9\u6743\u3002\n\n# \u6811\u5f62DP\n\n\u4e00\u770b\u662f\u4e00\u68f5\u6811\uff0c\u8fd9\u663e\u7136\u53c8\u662f\u4e00\u4e2aDP\uff0c\u90a3\u4e48\u5c31\u6811\u5f62DP\u3002\n\n\u6211\u4eec\u5f97\u77e5\uff0c\u8d70\u4e86\u8fd9\u6761\u8fb9\u8fdb\u53bb\uff0c\u5fc5\u8981\u8d70\u8fd9\u6761\u8fb9\u51fa\u6765\u3002\u4e0d\u59a8\u5728\u5efa\u6811\u65f6\uff0c\u5bf9\u6bcf\u4e2a\u8fb9\u6743\u4e58\u4e0a2\u3002\n\n\u9996\u5148\u8fd9\u9898\u7684\u8f93\u5165\u683c\u5f0f\u8ddf\u4e00\u822c\u9898\u76ee\u4e0d\u592a\u4e00\u6837\uff0c\u6211\u4eec\u5148\u8981\u5b66\u4f1a\u8f93\u5165\u3002\n\n\u6211\u4eec**\u9012\u5f52**\u8fdb\u884c\u5904\u7406\u3002\n\n\u6bcf\u6b21\u82e5\u7b2c\u4e8c\u4e2a\u6570\u662f0\uff0c\u6211\u4eec\u9012\u5f522\u6b21\u8fdb\u884c\u52a0\u70b9\u3002\n\n\u5426\u5219\u7ed9\u4ed6\u52a0\u6743\u3002\n\n\u5efa\u8fb9\u51fd\u6570\u3002\n```cpp\nvoid build(ll fa){\n\tn++;\n\tll u=0,v=0;\n\trd(u);rd(v);\n\tadd(fa,n,u*2);\n\tll aa=n;\n\tif(v==0) build(aa),build(aa);\n\telse a[n]=v;\n}\n```\n\n\u4e3b\u51fd\u6570\u8c03\u7528\u90e8\u5206\u3002\n\n```cpp\n\tif(v==0) n=2,add(1,2,u*2),build(2),build(2);\n\telse add(1,2,u*2),n=2,a[2]=v;\n```\n\n\u7136\u540e\u6211\u4eec\u4e00\u770b\uff0c~~\u611f\u89c9~~\u5178\u578b\u7684DP\u95ee\u9898\u3002\uff08\u5e9f\u8bdd\uff09\n\n\u6211\u4eec\u8bbe $f_{i,j}$ \u4e3a\u8d70\u5230 $i$ \u8282\u70b9\u7528\u4e86 $j$ \u5355\u4f4d\u65f6\u95f4\u5e76**\u8d70\u56de\u6765**\u7684**\u6700\u5927\u6536\u76ca**\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u82e5\u6709\u513f\u5b50\u5fc5\u53ea\u6709**\u4e24\u4e2a**\uff08\u7531\u9898\u5f97\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\u3002\n\n$ f_{x,j}=max{f_{x,j},f_{x,j-k}+f_{es[i].t,k-es[i].va}} $\n\n\u5982\u679c\u6211\u4eec\u5728\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u7528\u70b9\u6743\u66f4\u65b0 $f$ \u6570\u7ec4\u3002\n\n```cpp\nfor(ll i=5;i<=m;i++) f[x][i]=min(a[x],f[x][i-5]+1);\n```\n\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u9012\u5f52\u5904\u7406\uff0c\u7136\u540e\u679a\u4e3e $j$ \u548c $k$\uff0c\u4e0d\u65ad\u66f4\u65b0\u5f97\u51fa\u7b54\u6848\u3002\n\n### \u7b54\u6848\u6709\u6ce8\u610f\u70b9\uff0c\u662f $f_{1,m-1}$\uff0c\u4ed6\u4e0d\u80fd\u548c\u8b66\u5bdf\u540c\u65f6\u3002\n\n```cpp\n/*\n***\n\u8fd8\u8981\u7ee7\u7eed\u52aa\u529b\n\u6210\u4e3a\u4e00\u540d\u70e4\u5495\u5b66\u5bb6\u54e6\n***\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=605;\nll n,m,tot,hd[N],vst[N],cnt,a[N],f[N][N],ans;\nstruct edge{ll t,nxt,va;}es[N<<2];\ntemplate <typename T> void rd(T &x){\n\tll fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\nvoid add(ll u,ll v,ll w){\n    es[++tot]=(edge){v,hd[u],w},hd[u]=tot;\n}\nvoid build(ll fa){\n\tn++;\n\tll u=0,v=0;\n\trd(u);rd(v);\n\tadd(fa,n,u*2);\n\tll aa=n;\n\tif(v==0) build(aa),build(aa);\n\telse a[n]=v;\n}\nvoid dfs(ll x){\n\tvst[x]=1;\n\tif(a[x]!=0){\n\t\tfor(ll i=5;i<=m;i++) f[x][i]=min(a[x],f[x][i-5]+1);\n\t\treturn ;\n\t}\n    for(ll i=hd[x];i;i=es[i].nxt)\n        if(!vst[es[i].t]){\n        \tdfs(es[i].t);\n        \tfor(ll j=m;j>=es[i].va;j--)\n        \t\tfor(ll k=es[i].va;k<=j;k++)\n        \t\t\tf[x][j]=max(f[x][j],f[x][j-k]+f[es[i].t][k-es[i].va]);\n\t\t}\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(m);\n\tll u=0,v=0;\n\trd(u);rd(v);\n\tif(v==0) n=2,add(1,2,u*2),build(2),build(2);\n\telse add(1,2,u*2),n=2,a[2]=v;\n\tdfs(1);\n\twr(f[1][m-1]);puts(\"\");\n\treturn 0;\n}\n```\n\n\u7136\u540e\u4f60\u5c31A\u4e86\u4e00\u9053\u84dd\u9898QAQ\u3002",
        "postTime": 1583887294,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "\u8bbf\u95ee\u7f8e\u672f\u9986\u9898\u89e3 \u6811\u5f62DP"
    },
    {
        "content": "* \u5199\u5728\u524d\u9762\n\n\u611f\u5192\u4e86\u4e0d\u80fd\u4e0a\u8bfe\u6765\u9893\u4e00\u7bc7\u9898\u89e3qwq\n\n\u9996\u5148\u8fd9\u9053\u9898\u662f\u4e00\u9053\u5f88\u660e\u663e\u7684\u6811\u4e0a\u80cc\u5305\n\n\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u542c\u8bf4\u8fc7\u6811\u4e0a\u80cc\u5305\u7684\u8bdd\uff0c\u63a8\u8350\u5728\u505a\u8fd9\u9053\u9898\u76ee\u524d\u5237\u5237[P2015 \u4e8c\u53c9\u82f9\u679c\u6811](https://www.luogu.com.cn/problem/P2015)\u548c[P2014 \u9009\u8bfe](https://www.luogu.com.cn/problem/P2014)\n\n\u81f3\u4e8e\u4e0d\u80fd\u7406\u89e3\u6811\u4e0a\u80cc\u5305\u7684\u8bdd~~\u8fd9\u4e8b\u5c31\u4e0d\u8981\u8d56\u6211\u8eab\u4e0a\u4e86\uff0c\u8bf4\u4e86\u8ba9\u4f60\u5148\u5237\u4e24\u9053\u9898\u7684~~\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6309\u7167\u4e00\u822cDP\u7684\u8ba8\u8bba\u6d41\u7a0b\u6765\u5427qwq\uff08\u5b9a\u4e49\u72b6\u6001\u3001\u521d\u59cb\u5316\u3001\u72b6\u6001\u8f6c\u79fb\uff09\n\n* \u5b9a\u4e49\u72b6\u6001\n\n\u8fd9\u9898\u7684\u72b6\u6001\u5927\u6982\u6709\u4e24\u79cd\u5b9a\u4e49\u65b9\u5f0f\n\n1. $dp[i][j]$:\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u7528 $j$ \u79d2\u7684\u65f6\u95f4\u6700\u591a\u80fd\u5077\u591a\u5c11\u5e45\u753b\n2. $dp[i][j]$:\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u5077 $j$ \u5e45\u753b\u6700\u5c11\u8981\u7528\u591a\u5c11\u79d2\n\n\u5b9a\u4e49\u7684\u672c\u8d28\u533a\u522b\u5c31\u662f**\u5bf9\u80cc\u5305\u5bb9\u91cf\u7684\u5b9a\u4e49**\uff0c\u770b\u4f60\u662f\u7528\u65f6\u95f4\u8fd8\u662f\u7528\u753b\n\n\u5f53\u7136\u8fd9\u9053\u9898\u6211\u662f\u7528\u7b2c\u4e8c\u79cd\u5199\u7684\n\n* \u521d\u59cb\u5316\n\n\u521d\u59cb\u5316\u6bd4\u8f83\u7b80\u5355\n\n\u9996\u5148\u6211\u4eec\u628a $dp$ \u8d4b\u6210\u6781\u5927\u503c\n\n\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9\uff0c\u5077\u4e00\u5e45\u753b\u5c31\u662f5\u79d2\uff0c\u90a3\u4e48\u5077 $i$ \u5e45\u5c31\u662f $i*5$ \u79d2\n\n\u5bf9\u4e8e\u50770\u5e45\u7684\u3002\u3002\u3002~~\u597d\u5584\u826f\u7684\u5c0f\u5077~~\n\n* \u8f6c\u79fb\u65b9\u7a0b\n\n\u9996\u5148\u6211\u4eec\u628a\u6811\u4e0a\u80cc\u5305\u7684\u6a21\u677f\u5199\u4e00\u904d\n\n```cpp\nfor(int j = s; j > 0; j--) // 01\u80cc\u5305\u5012\u5e8f\u5faa\u73af\uff0c\u679a\u4e3e\u8981\u5077\u7684\u753b\u6570\u91cf \n{\n\tfor(int k = 0; k <= t; k++)  // \u679a\u4e3e\u5728\u513f\u5b50\u7ed3\u70b9\u5077k\u5e45\u753b\n\t{\n            \u6211\u662f\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b;\n\t}\n}\n                         \n// s:\u4ee5\u5f53\u524d\u7ed3\u70b9\u4e3a\u6839\uff0c\u6700\u591a\u53ef\u4ee5\u5077\u7684\u753b\u6570\u91cf \n// t:\u513f\u5b50\u7ed3\u70b9\u6700\u591a\u53ef\u4ee5\u5077\u7684\u753b\u6570\u91cf\n```\n\n\u56e0\u4e3a\u5077\u5b8c\u662f\u8981\u5e26\u8d70\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u6811\u5b83\u7684\u7ec8\u70b9\u90fd\u662f\u5f53\u524d\u5b50\u6811\u7684\u6839\n\n\u800c\u4e14\u6211\u4eec\u8981\u4e0b\u5230\u513f\u5b50\u7ed3\u70b9\uff0c\u8fb9\u6743\u9700\u8981\u8d70\u4e00\u904d\n\n\u513f\u5b50\u7ed3\u70b9\u53c8\u8981\u56de\u5230\u7236\u4eb2\u9636\u6bb5\uff0c\u8fb9\u6743\u53c8\u8981\u8d70\u4e00\u904d\n\n\u6240\u4ee5\u8fd9\u6761\u8fb9\u6743\u5c31\u8d70\u4e86\u4e24\u904d\n\n\u5269\u4e0b\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u5728\u5f53\u524d\u7ed3\u70b9\u5077 $j-k$ \u5e45\u753b\u7684\u65f6\u95f4\uff0c\u513f\u5b50\u7ed3\u70b9\u5077 $k$ \u5e45\u753b\u7684\u65f6\u95f4\uff09\u76f4\u63a5\u52a0\u4e0a\u5c31\u597d\n\n\u6240\u4ee5\u6211\u4eec\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u51fa\u6765\u4e86\n\n$dp[i][j]=min(dp[i][j],dp[i][j-k]+dp[son][k]+w*2)$\n\n\u81f3\u4e8e\u57fa\u672c\u768401\u80cc\u5305\u548c\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u4e0d\u8981\u6211\u8bb2\u5427\n\n* \u6700\u540eBB\u51e0\u53e5\n\n\u4e0d\u8981\u6284\u9898\u89e3\uff01\u4e0d\u8981\u6284\u9898\u89e3\uff01\u4e0d\u8981\u6284\u9898\u89e3\uff01\n\n\u81f3\u4e8e\u6709\u4e9b\u4eba\u7ea0\u7ed3\u7684\u8bfb\u5165\uff0c\u96be\u9053\u4e0d\u662f\u76f4\u63a5\u9012\u5f52\u8bfb\u5c31\u53ef\u4ee5\u4e86\u5417qwq\n\n* \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nconst int MAX_INT = (1 << 30);\nconst ll MAX_LONG = ((ll)1 << (ll)60);\n\nstruct In\n{\n\ttemplate <typename T>\n\tinline In& operator >> (T &x)\n\t{\n\t\tchar c = getchar();\n\t\tint op = 0; x = 0;\n\t\twhile(c ^ '-' && !isdigit(c))c = getchar();\n\t\tif(c == '-')op = 1, c = getchar();\n\t\twhile(isdigit(c))x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\n\t\tif(op)x = -x;\n\t\treturn *this;\n\t}\n} in; // cin\u515a\u6700\u7231\u7684\u5feb\u8bfb \n\nconst int N = 110;\nconst int CNT = 20 * 100 + 10;\n\nstruct Edge\n{\n\tint to, w;\n};\n\nint seconds, cnt = 1; // seconds:\u8b66\u5bdf\u5230\u6765\u7684\u65f6\u95f4 cnt\uff1a\u65f6\u95f4\u6233\uff08\u5176\u5b9e\u5c31\u662f\u7ed9\u6bcf\u4e2a\u7ed3\u70b9\u4e00\u4e2a\u7f16\u53f7\uff09 \nint val[N], dp[N][CNT]; // val[i]:\u7ed3\u70b9i\u753b\u7684\u6570\u91cf dp[i][j]\uff1a\u4ee5\u8282\u70b9i\u4e3a\u6839\u7684\u5b50\u6811\u91cc\u9762\u5077j\u5e45\u753b\u6700\u5c11\u65f6\u95f4 \nbool leaf[N]; // \u5224\u65ad\u662f\u4e0d\u662f\u53f6\u5b50 \nvector<Edge> nbr[N]; // \u52a8\u6001\u90bb\u63a5\u8868\u5b58\u56fe \n\nvoid make_subtree(int cur); // \u6784\u5efa\u4e00\u68f5\u5b50\u6811\uff08\u8f93\u5165\u90e8\u5206\uff09 \n\nint dfs(int u); // DP \n\nint main()\n{\n\tmemset(dp, 0x3f, sizeof(dp)); // DP\u8bbe\u4e3a\u6781\u5927\u503c\n\t// memset\u91cc\u97620x3f\u8868\u793a\u628a\u6bcf\u4e2a\u5b57\u8282\u8d4b\u503c\u4e3a3f\uff080x\uff1a16\u8fdb\u5236\uff09\uff0cint\u56db\u4e2a\u5b57\u8282\uff0c\u5373\u6bcf\u4e2a\u6570\u90fd\u4e3a0x3f3f3f3f \n\t// \u4e3a\u4ec0\u4e48\u8981\u58f0\u660e\u56e0\u4e3a\u672c\u4eba\u88abmemset\u5751\u8fc7 \n\tin >> seconds; \n\tmake_subtree(1); // \u6784\u9020\u4e00\u68f5\u4ee51\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u7ed3\u70b91\u53ea\u6709\u4e00\u68f5\u5b50\u6811 \n\t// \u4ee5\u4e0a\u4e3a\u8f93\u5165\u5c42  \n\tfor(int i = 1; i <= cnt; i++) \n\t{\n\t\tdp[i][0] = 0; // \u50770\u5e45\u80af\u5b9a\u662f0\u554aqwq \n\t}\n\tint maxi = dfs(1); // DP\uff1bmaxi:\u6700\u591a\u80fd\u591f\u5077\u5230\u7684\u753b\u6570\u91cf \n\tfor(int i = maxi; i >= 0; i--) // \u4ece\u6700\u591a\u5f00\u59cb\u5411\u4e0b\u679a\u4e3e\u6240\u6709\u89e3 \n\t{\n\t\tif(dp[1][i] < seconds) // \u5982\u679c\u5728\u8b66\u5bdf\u6765\u4e4b\u524d\u53ef\u4ee5\u5077\u5230i\u5e45\u753b \n\t\t{\n\t\t\tcout << i;\n\t\t\tbreak; // \u8f93\u51fa\u4e0d\u89e3\u91ca \n\t\t}\n\t}\n\treturn 0;\n}\n\n// \u5f00\u59cb\u5199\u51fd\u6570\n \nvoid make_subtree(int cur) \n{\n\tint w, pic; // w\uff1a\u8fb9\u6743 pic\uff1a\u5f53\u524d\u8282\u70b9\u753b\u7684\u6570\u91cf \n\tin >> w >> pic;\n\tnbr[cur].push_back((Edge){++cnt, w}); // \u6709\u6839\u6811\u5efa\u5355\u5411\u8fb9 \n\tif(pic == 0)\n\t{\n\t\tint boot = cnt;\n\t\tmake_subtree(boot);\n\t\tmake_subtree(boot);\n\t\t// \u5982\u679c\u662f0\uff0c\u6784\u5efa\u4e24\u68f5\u4ee5cnt\u4e3a\u6839\u7684\u5b50\u6811 \n        // \u6ce8\u610f\u8fd9\u91cc\u5fc5\u987b\u5b9a\u4e49\u4e00\u4e2aboot\uff0c\u56e0\u4e3acnt\u4f1a\u53d8\u5316\n\t}\n\telse \n\t{\n\t\tval[cnt] = pic; // \u8bb0\u5f55\u5f53\u524d\u7ed3\u70b9\u753b\u7684\u6570\u91cf \n\t\tleaf[cnt] = true; // \u6807\u8bb0\u4e3a\u53f6\u5b50\u8282\u70b9 \n\t\tfor(int i = 1; i <= pic; i++) // \u5bf9DP\u8fdb\u884c\u521d\u59cb\u5316 \n\t\t{\n\t\t\tdp[cnt][i] = i * 5; // \u5077\u4e00\u5e45\u753b5s\uff0c\u4e0d\u89e3\u91ca \n\t\t}\n\t}\n\treturn ;\n}\n\nint dfs(int u)\n{\n\tif(leaf[u] == true) // \u5982\u679c\u5b83\u662f\u53f6\u5b50\u8282\u70b9 \n\t{\n\t\treturn val[u]; // \u8fd4\u56de\u5b83\u6709\u591a\u5c11\u5e45\u753b \n\t}\n\tint s = 0; // \u4ee5\u5f53\u524d\u7ed3\u70b9\u4e3a\u6839\uff0c\u6700\u591a\u53ef\u4ee5\u5077\u7684\u753b\u6570\u91cf \n\tfor(int i = 0; i < nbr[u].size(); i++) // \u904d\u5386\u6240\u6709\u513f\u5b50 \n\t{\n\t\tint v = nbr[u][i].to; // \u513f\u5b50\u7f16\u53f7 \n\t\tint w = nbr[u][i].w; // \u8fb9\u6743 \n\t\tint t = dfs(v); s += t; // \u8bb0\u5f55\u513f\u5b50\u7ed3\u70b9\u6700\u591a\u53ef\u4ee5\u5077\u7684\u753b\u6570\u91cf\uff0c\u5e76\u7d2f\u52a0 \n\t\tfor(int j = s; j > 0; j--) // 01\u80cc\u5305\u5012\u5e8f\u5faa\u73af\uff0c\u679a\u4e3e\u8981\u5077\u7684\u753b\u6570\u91cf \n\t\t{\n\t\t\tfor(int k = 0; k <= t; k++) // \u679a\u4e3e\u5728\u513f\u5b50\u7ed3\u70b9\u5077k\u5e45\u753b \n\t\t\t{\n\t\t\t\tdp[u][j] = min(dp[u][j], dp[u][j - k] + dp[v][k] + w * 2); // \u4e0a\u9762\u6709\uff0c\u8f6c\u79fb\u65b9\u7a0b \n\t\t\t}\n\t\t}\n\t\t// \u6811\u4e0a\u80cc\u5305\u6a21\u677f\uff0c\u5982\u679c\u4e0d\u4f1a\u505a\u6211\u63a8\u8350\u7684\u9898\u76ee\u554a\uff0c\u90a3\u91cc\u4e5f\u6709\u9898\u89e3\u7684\uff01\uff01\n\t}\n\treturn s; // \u8fd4\u56de\u90a3\u5565\uff08\u4e0d\u60f3\u6253\u4e86qwq\uff09 \n}\n```\n\n\u4e8e\u662f\u5c31\u505a\u5b8c\u4e86qwq",
        "postTime": 1577611779,
        "uid": 149192,
        "name": "__gcd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "\u521a\u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u88ab\u8f93\u5165\u5413\u4e86\u4e00\u8df3\uff0c\u4e8e\u662f\u7528 \u5b8c \u5168 \u4e8c \u53c9 \u6811 \u5efa\u4e86\u56fe\uff0c\u8d70\u4e0a\u4e86\u8d2a\u5fc3\u7684\u4e0d\u5f52\u8def(  \n\u7136\u800c\u8d2a\u5fc3\u5199\u5b8c\u624d\u53d1\u73b0\u4e0d\u5bf9\uff0c\u4e8e\u662f\u4e00\u6012\u4e4b\u4e0b\u5199\u4e86\u4e2a$\\text{SimulateAnneal}$(  \n\u7136\u540e\u8bb2\u4e0b *\u601d\u8def*  \n\n\u9996\u5148\uff0c\u5f88\u5bb9\u6613\u5c31\u4f1a\u60f3\u5230\u5148\u4ece\u5165\u53e3\u8d70\u5230\u79bb\u5165\u53e3\u6700\u8fd1\u7684\u53f6\u5b50\u7ed3\u70b9\uff0c\u53d6\u753b\uff0c\u518d\u4ece\u5c0f\u5077\u6240\u5728\u7684\u53f6\u5b50\u7ed3\u70b9\u8d70\u5230\u8ddd\u79bb\u6700\u8fd1\u7684\u53f6\u5b50\u7ed3\u70b9\uff0c\u518d\u53d6\u753b\uff0c\u7136\u540e\u5728\u753b\u88ab\u53d6\u5b8c\uff0c\u6216\u8005\u65f6\u95f4\u4e0d\u591f\u4e86\u7684\u65f6\u5019\u505c\u4e0b\uff0c\u8f93\u51fa\u7ed3\u679c\u3002  \n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5230\u4e86\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u753b\u662f\u80af\u5b9a\u8981\u5c3d\u91cf\u53d6\u5b8c\u7684\uff0c\u56e0\u4e3a\u53d6\u6bcf\u5f20\u753b\u6240\u9700\u7684\u65f6\u95f4\u76f8\u540c\uff0c\u800c\u53d6\u5230\u4e00\u534a\u53bb\u5176\u4ed6\u53f6\u5b50\u7ed3\u70b9\u4f1a\u5728\u8def\u4e0a\u4ea7\u751f\u989d\u5916\u7684\u65f6\u95f4\u3002\n\n\u5173\u4e8e\u65f6\u95f4\u95ee\u9898\uff0c\u5728\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u65f6\uff0c\u9700\u8981\u8003\u8651\u56de\u5165\u53e3\u7684\u65f6\u95f4\u662f\u5426\u5145\u8db3\uff0c\u6240\u4ee5\u9700\u8981\u8bb0\u5f55\u4e0b\u79bb\u5165\u53e3\u7684\u8ddd\u79bb\u3002\n\n\u7136\u800c\u8d2a\u5fc3\u786e\u5b9e\u5f88\u6709\u95ee\u9898\uff0c\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86(  \n\u6240\u4ee5\u53ef\u4ee5\u52a0\u4e2a\u6a21\u62df\u9000\u706b(  \n\u4ee3\u7801\u5982\u4e0b(\u5f88\u53ef\u80fd\u88abhack\u6389(\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<iostream>\nusing namespace std;\n\nbool isV[101];\nint s,paintingNode[101],painting[101],tree[550],maxCnt=0,ans=0;\nconst int K=8;\nint fa[550][K+1],faLen[550][K],dep[550];\ninline void init(int u,int father){ //\u8981\u6c42LCA\u548c\u6811\u4e0a\u4e24\u70b9\u8ddd\u79bb\u7684\u5566,\u6240\u4ee5\u8981\u521d\u59cb\u5316\u500d\u589e\u6570\u7ec4 \n\tfa[u][0]=father;\n\tfaLen[u][0]=tree[u];\n\tdep[u]=dep[father]+1;\n\tfor (register int i=1;i<=K;++i){\n\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\t\tfaLen[u][i]=faLen[u][i-1]+faLen[fa[u][i-1]][i-1];\n\t}\n\treturn;\n}\nvoid readDfs(int u,int father){//\u5efa\u56fe \n\tint a,b;\n\tinit(u,father);\n\tif (!(cin>>a>>b)) return;\n\ttree[u<<1]=a;\n\tif (b==0) readDfs(u<<1,u);\n\telse paintingNode[++maxCnt]=u<<1,painting[maxCnt]=b,init(u<<1,u);\n\tif (!(cin>>a>>b)) return;\n\ttree[(u<<1)|1]=a;\n\tif (b==0) readDfs((u<<1)|1,u);\n\telse paintingNode[++maxCnt]=(u<<1)|1,painting[maxCnt]=b,init((u<<1)|1,u);\n\treturn;\n}\ninline int dis(int x,int y){//\u6c42\u6811\u4e0a\u4e24\u70b9\u8ddd\u79bb \n\tint res=0;\n\tif (dep[x]<dep[y]) swap(x,y);\n\tfor (register int i=K;i>=0;--i)\n\t\tif (dep[fa[x][i]]>=dep[y]) res+=faLen[x][i],x=fa[x][i];\n\tif (x==y) return res;\n\tfor (register int i=K;i>=0;--i)\n\t\tif (fa[x][i]!=fa[y][i]) res+=faLen[x][i]+faLen[y][i],x=fa[x][i],y=fa[y][i];\n\tres+=faLen[x][0]+faLen[y][0];\n\treturn res;\n}\nint solve(int a){//\u8d2a\u5fc3 \u6a21\u62df \u6211\u67af\u4e86( \n\tint cur,cost=2147483647,pathCost,res=0,isVCnt=a;\n\tfor (register int i=1;i<=maxCnt;++i){//\u627e\u79bb\u6839\u8282\u70b9\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u5e76\u8d70\u8fc7\u53bb \n\t\tif (isV[i]) continue;\n\t\tint temp=dis(1,paintingNode[i]);\n\t\tif (cost>temp) pathCost=cost=temp,cur=i;\n\t}\n\tisV[cur]=1;++isVCnt;\n\tfor (register int i=1;i<=painting[cur];++i){\n\t\tcost+=5;++res;\n\t\tif (cost>s-pathCost){//\u53d6\u753b\u7684\u65f6\u5019\u8981\u7559\u56de\u53bb\u7684\u65f6\u95f4 \n\t\t\treturn res-1;\n\t\t}\n\t}\n\twhile (1){\n\t\tpathCost=2147483647;\n\t\tint tempCur;\n\t\tfor (register int i=1;i<=maxCnt;++i){//\u627e\u5230\u79bb\u6240\u5728\u53f6\u5b50\u6700\u8fd1\u7684\u53f6\u5b50\u7136\u540e\u8fc7\u53bb \n\t\t\tif (isV[i]) continue;\n\t\t\tint temp=dis(paintingNode[cur],paintingNode[i]);\n\t\t\tif (pathCost>temp) pathCost=temp,tempCur=i;\n\t\t\tif (pathCost==temp){//\u5982\u679c\u6709\u591a\u4e2a\u8ddd\u79bb\u4e00\u6837\u7684\u70b9\uff0c\u627e\u5230\u79bb\u51fa\u53e3\u6700\u8fd1\u7684 \n\t\t\t\tint x=dis(1,paintingNode[i]),y=dis(1,paintingNode[tempCur]);\n\t\t\t\tif (x<y) pathCost=temp,tempCur=i;\n\t\t\t}\n\t\t}\n\t\tif (isVCnt>=maxCnt) return res;//\u5982\u679c\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u90fd\u8bbf\u95ee\u8fc7\u4e86\u76f4\u63a5\u9000\u51fa \n\t\tcur=tempCur;cost+=pathCost;\n\t\tisV[cur]=1;++isVCnt;\n\t\tpathCost=dis(1,paintingNode[cur]);//\u8bb0\u5f55\u56de\u5230\u51fa\u53e3\u6240\u9700\u65f6\u95f4\uff0c\u4e3a\u4e0b\u9762\u7684\u5faa\u73af\u505a\u51c6\u5907 \n\t\tfor (register int i=1;i<=painting[cur];++i){\n\t\t\tcost+=5;++res;\n\t\t\tif (cost>s-pathCost){\n\t\t\t\treturn res-1;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid SA(){//\u5149\u8d2a\u5fc3\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u8fd8\u8981\u968f\u673a\u5316\u4e71\u641e\uff0c\u8fd9\u91cc\u63a8\u8350\u6a21\u62df\u9000\u706b\uff0c\u968f\u673a\u54ea\u4e9b\u53f6\u5b50\u4e0d\u53bb \n\tconst int T=1000;\n\tint k=1,cur,old=0,isVCnt=0;\n\tdouble t=T/log(1+k);\n\tbool deal[101];\n\tmemset(deal,0,sizeof(deal));\n\twhile (t>1e-3){\n\t\tint p=rand()%maxCnt+1;\n\t\tdeal[p]=!deal[p];\n\t\tif (deal[p]) ++isVCnt;else --isVCnt;\n\t\tmemcpy(isV,deal,sizeof(isV));\n\t\tcur=solve(isVCnt);\n\t\tif (cur>=old||exp(double(cur-old)/t)/double(RAND_MAX)>rand()) old=cur;\n\t\telse {if (deal[p]) --isVCnt;else ++isVCnt;deal[p]=!deal[p];}\n\t\t++k;\n\t\tif (k<100) t=T/log(1+k);\n\t\telse t=T/(1+2*k);\n\t}\n\tans=max(ans,cur);\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>s;\n\ts--;\n\tmemset(tree,-1,sizeof(tree));\n\treadDfs(1,0);\n\tsrand(19260817); \n\tint T=100;\n\twhile (T--) SA();\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1573654694,
        "uid": 85472,
        "name": "ENDKING",
        "ccfLevel": 0,
        "title": "P1270 \u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986 \u9898\u89e3"
    },
    {
        "content": "~~\u524d\u9762\u7684\u5927\u4f6c\u8bf4\uff0c\u4e00\u5343\u4e2aOIER\u5c31\u6709\u4e00\u5343\u79cd\u6811\u5f62DP\uff0c\u6211\u89c9\u5f97\u5f88\u6709\u9053\u7406~~\n\n\u53cc\u500d\u7ecf\u9a8c\u6307\u8def[P2014\u9009\u8bfe](https://www.luogu.org/problem/P2014)\n\n**\u4e00\u4e2a\u63d0\u9192\uff0c\u201c\u7b2c\u4e8c\u4e2a\u6570\u201d\u662f\u753b\u7684\u6570\u91cf\u4e0d\u662f\u4ef7\u503c**\n\n~~\u4f30\u8ba1\u5168\u4e16\u754c\u9664\u4e86\u6211\u4e5f\u4e0d\u4f1a\u6709\u4eba\u683d\u5728\u8fd9\u91cc\u3002\u3002\u3002\u3002~~\n\n\u4ec0\u4e48\uff1f\u4e8c\u53c9\u6811\uff1f\u6211\u542c\u4e0d\u89c1\u2014\u2014\u2014\u2014\n\n\u8fd9\u662f\u9002\u7528\u4e8e\u597d\u51e0\u53c9\u6811\u7684\u5199\u6cd5\uff08\u4ec5\u9488\u5bf9**DP\u90e8\u5206**\uff0c\u8bfb\u5165\u8fd8\u662f\u4e8c\u53c9\u6811\u7684\uff09\n\n```cpp\nvoid add(int x,int y,int z){\n\ten++;\n\tnxt[en]=head[x];\n\thead[x]=en;\n\tto[en]=y;\n\tw[en]=2*z;//\u8bb0\u5f97\u8981\u8dd1\u56de\u53bb\n}//\u94fe\u8868\u5b58\u8fb9\uff08\u9003\nvoid dfs(){\n\tfor(int i=1;i<=cnt;i++){\n\t\twhile(k>0&&fa[k][1]==2){\n\t\t\tfa[k][1]=0;\t\n\t\t\tk--;\t\n\t\t}\n\t\tfa[k][1]++;\n\t\tadd(fa[k][0],i,a[i]);\n\t\tif(b[i]==0){\n\t\t\tk++;\n\t\t\tfa[k][0]=i;\n\t\t}\n\t}\n}\n```\n\u628a\u6bcf\u4e2a\u201c\u901a\u5f80\u4e24\u4e2a\u8d70\u5eca\u7684\u8d70\u5eca\u201d\u5b9a\u4e49\u4e3a\u4e00\u95f4**\u6ca1\u6709\u753b\u7684\u85cf\u753b\u5ba4**\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u5efa\u8d77\u4e00\u68f5\u6811\u3002\n\n\u8bfb\u5165\u8fc7\u7a0b\u4e2d\uff0c0\u4e3a\u6839\u8282\u70b9\uff0c\u8fde\u63a5\u4e00\u6761\u8fb9\u5230\u7b2c\u4e00\u4e2a\uff08\u7a7a\uff09\u85cf\u753b\u5ba4\uff0c\u901a\u8fc7\u56de\u6eaf\u7684\u65b9\u5f0f\u786e\u5b9a\u6bcf\u95f4\u85cf\u753b\u5ba4\u7684\u7236\u8282\u70b9\u3002\n\n\u5177\u4f53\u64cd\u4f5c\uff1a\n\n\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff08$fa[k][1]$\u662f\u8ba1\u6570\u5668\uff0c$fa[k][0]$\u662f\u7f16\u53f7\uff09\u3002\n\n\u5f53\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u7a7a\u85cf\u753b\u5ba4\u65f6\uff0c$k++$\uff0c\n\n\u5f53\u8ba1\u6570\u5668\u5230\u4e862\u65f6\uff0c$k--$\u3002\n\n```cpp\nvoid ddp(int x){\n\tfor(int i=head[x];i;i=nxt[i]){\n\t\tint y=to[i];\n\t\tddp(y);\n\t\tfor(int j=m;j>=w[i];j--)\n\t\t\tfor(int k=j-w[i];k>=0;k--){\n\t\t\tif(j-k-w[i]>=0) dp[x][j]=max(dp[x][j],dp[x][j-k-w[i]]+dp[y][k]);\n\t\t}\n\t}\n\tif(b[x]!=0)\n\t\tfor(int j=m;j>=5;j--){\n\t\t\tif(j-b[x]*5>=0) dp[x][j]=dp[x][j-b[x]*5]+b[x];\n\t\t\telse{\n\t\t\t\tint temp=j/5;\n\t\t\t\tdp[x][j]=dp[x][j-temp*5]+temp;\n\t\t\t}\n\t\t}//\u5728\u540c\u4e00\u4e2a\u5730\u65b9\u62ff\u5c3d\u53ef\u80fd\u591a\u7684\u753b\u4e00\u5b9a\u6bd4\u75af\u72c2\u8d70\u8def\u5f3a\n} \nint main(){\n\tscanf(\"%d\",&m);\t\n\twhile(cin>>a[cnt]>>b[cnt]) cnt++;\n\tcnt--;\n\tm--;\n\tdfs();\n\tddp(0);\n\tprintf(\"%d\",dp[0][m]);\n\treturn 0;\n} \n```",
        "postTime": 1570430066,
        "uid": 44424,
        "name": "zhutier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u521d\u5b66\u6811\u5f62dp\u7684\u840c\u65b0\u75282\u4e2a\u591a\u5c0f\u65f6\u52c9\u5f3a\u5207\u6389\u7684~~\u7b80\u5355~~\u9898\u3002\n\n\u901a\u8fc7\u9898\u76ee\u5f97\u77e5\uff0c\u4e00\u4e2a\u8d70\u5eca\u8d70\u5230\u5c3d\u5934\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u5206\u6210\u4e24\u6761\u8d70\u5eca\uff0c\u4e00\u79cd\u662f\u8d70\u5230\u5934\u4e86\u5f00\u59cb\u62ff\u753b\uff0c\u8fd9\u5f88\u5bb9\u6613\u8ba9\u6211\u4eec\u8054\u60f3\u5230\u4e8c\u53c9\u6811\u7ed3\u6784\uff0c\u53c8\u56e0\u4e3a\u9898\u76ee\u8ba9\u6211\u4eec\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u6700\u591a\u80fd\u5077\u591a\u5c11\u5e45\u753b\uff0c\u8fd9\u79cd\u6c42\u6700\u4f18\u7684\u95ee\u6cd5\u4fbf\u8ba9\u6211\u4eec\u60f3\u5230\u6811\u5f62dp\u3002\n\n\u90a3\u4e48\u600e\u4e48dp\u5462\uff1f\u56e0\u4e3a\u672c\u9898\u8bfb\u5165\u7684\u95ee\u9898\uff0c\u6211\u4eec\u8981\u89e3\u51b3\u7684\u9996\u5148\u662f\u5efa\u6811\uff0c\u53c8\u56e0\u4e3a\u8bfb\u5165\u662f\u6309\u7167\u6df1\u5ea6\u4f18\u5148\u7684\u6b21\u5e8f\u7ed9\u51fa\uff0c\u800c\u6211\u4eec\u8d70\u6811\u5f62dp\u65f6\u7684\u987a\u5e8f\u4e5f\u662f\u5982\u6b64\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fb9\u8bfb\u5165\u8fb9dp\u3002\n\u518d\u770b\u8bfb\u5165\u7684\u6570\u636e\uff0c\u5206\u522b\u662f\u901a\u8fc7\u4e00\u6761\u8d70\u5eca\u7684\u65f6\u95f4\uff08\u6ce8\u610f\u6211\u4eec\u8981\u907f\u514d\u88ab\u8b66\u5bdf\u6293\u4f4f\uff0c\u6240\u4ee5\u8981\u5728\u8b66\u5bdf\u5230\u6765\u4e4b\u524d\u8dd1\u8d70\uff0c\u6240\u4ee5\u8fdb\u5165\u8d70\u5eca\u518d\u8d70\u51fa\u8d70\u5eca\u90fd\u9700\u8981\u65f6\u95f4\uff09\u548c\u8d70\u5eca\u5c3d\u5934\u753b\u7684\u6570\u91cf\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u8d70\u5eca\u770b\u505a\u4e00\u4e2a\u70b9\uff0c**\u4f46\u9700\u8981\u6ce8\u610f\uff0c\u5982\u679c\u8fd9\u6761\u8d70\u5eca\u8d70\u5230\u5c3d\u5934\u4e14\u62ff\u753b\u7684\u8bdd\uff0c\u76f8\u5f53\u4e8e\u8d70\u8fc7\u8fd9\u6761\u8d70\u5eca\uff0c\u62ff\u8d70\u753b\uff0c\u518d\u8d70\u51fa\u8fd9\u6761\u8d70\u5eca**\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8fb9\u754c\u5904\u7406\u65f6\u9664\u4e86\u62ff\u753b\u7684\u65f6\u95f4\u8fd8\u9700\u8981\u52a0\u4e0a\u7a7f\u8fc7\u8d70\u5eca\u7684\u65f6\u95f4*2\uff0c\u8fd9\u6837\u6211\u4eec\u6211\u4eec\u5728\u6df1\u641c\u7684\u57fa\u7840\u4e0a\u4e0d\u65ad\u8bfb\u5165\u6bcf\u4e2a\u70b9\u7684\u5c5e\u6027\uff0c\u8fd9\u4e2a\u6811\u5c31\u5efa\u597d\u4e86\u3002\n\n\u7136\u540e\u5f00\u59cbdp\u3002\u56e0\u4e3a\u6bcf\u4e2a\u753b\u5ba4\u7684\u753b\u4e0d\u4e00\u5b9a\u5168\u62ff\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u5206\u7ec4\u80cc\u5305\u3002\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u53ea\u5b58\u5728\u6ca1\u6709\u513f\u5b50\u548c\u6709\u4e24\u4e2a\u513f\u5b50\u4e24\u79cd\u60c5\u51b5\uff0c\u6ca1\u6709\u513f\u5b50\uff08\u8fb9\u754c\uff09\u7684\u60c5\u51b5\u6211\u4eec\u5176\u5b9e\u5728\u5efa\u6811\u65f6\u5df2\u7ecf\u5904\u7406\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u4e24\u4e2a\u513f\u5b50\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u8bbedp\u6570\u7ec4\u4e3af[now][i]\u8868\u793a\u4ee5\u5f53\u524d\u8282\u70b9\u7f16\u53f7\uff08now\uff09\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u62ffi\u4e2a\u753b\u9700\u8981\u7684\u6700\u5c0f\u65f6\u95f4\u4e3a**\u4ece\u5de6\u5b50\u6811\u4e2d\u62ffj\u4e2a\u753b+\u4ece\u53f3\u5b50\u6811\u4e2d\u62ffi-j\u4e2a\u753b+\u8fdb\u5165\u548c\u51fa\u53bb\u5f53\u524d\u8282\u70b9\u7f16\u53f7\u8868\u793a\u7684\u8d70\u5eca\u7684\u65f6\u95f4\u7684\u548c\u7684\u6700\u5c0f\u65f6\u95f4**\uff0c\u7531\u6b64\u53ef\u4ee5\u5f97\u5230dp\u65b9\u7a0b\uff1af[now][i]=min(f[now][i],f[now<<1][j]+f[now<<1|1]+t* 2).\n\n\u6700\u540e\u53ea\u9700\u5012\u5e8f\u679a\u4e3e\u753b\u7684\u4e2a\u6570\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a**\u5c0f\u4e8e**\u8b66\u5bdf\u5230\u6765\u65f6\u95f4\u7684\u753b\u7684\u4e2a\u6570\u8f93\u51fa\u5373\u53ef~~\u53ef\u80fd\u4e0e\u8b66\u5bdf\u5230\u6765\u65f6\u95f4\u76f8\u540c\u4f1a\u5728\u5927\u95e8\u53e3\u649e\u89c1\u8b66\u5bdf~~\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u6807\u6ce8\u5728\u4ee3\u7801\u91cc\u3002\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#define NN 123\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*f;\n}\nint s,f[NN<<1][NN*20];//\u56e0\u4e3a\u6700\u591a100\u5c55\u5ba4,\u90a3\u4e48\u6700\u591a\u6709100*2\u4e2a\u8282\u70b9,\u6bcf\u4e2a\u5c55\u5ba4\u6700\u591a20\u5e45\u753b,\u603b\u5171\u6700\u591a100*20\u5e45\u753b \ninline int dfs(int now)\n{\n\tint t=read(),num=read(); \n\tif(num!=0)\n\t{\n\t\tfor(int i=1;i<=num;i++){\n\t\t\tf[now][i]=i*5+t*2;//\u8fb9\u754c\u60c5\u51b5 \n\t\t}\n\t\treturn num;//\u8fd4\u56de\u753b\u6570 \n\t}\n\tint x1=dfs(now<<1),x2=dfs(now<<1|1),sum=0;//x1\u4e3a\u5de6\u5b50\u6811\u7684\u603b\u753b\u6570,\u9009\u4e3a\u53f3\u5b50\u6811\u7684\u603b\u753b\u6570 \n\tsum=x1+x2;\n\tfor(int i=sum;i;i--)//\u80cc\u5305\u95ee\u9898\u7684\u5012\u5e8f\u679a\u4e3e \n\t{\n\t\tfor(int j=0;j<=sum;j++)//\u56e0\u4e3a\u6709\u53ef\u80fd\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u62ff\u7684\u753b\u6570\u4e3a0,\u6240\u4ee5\u4ece0\u679a\u4e3e\u5230sum \n\t\t{\n\t\t\tif(i-j>=0&&j<=x1&&i-j<=x2)//\u5f53\u524d\u8282\u70b9\u7684\u53d6\u753b\u6570\u5927\u4e8e\u7b49\u4e8e\u5de6/\u53f3\u5b50\u6811\u7684\u53d6\u753b\u6570,\u4e14\u5de6\u53f3\u5b50\u6811\u7684\u53d6\u753b\u6570\u5c0f\u4e8e\u5de6\u53f3\u5b50\u6811\u7684\u603b\u753b\u6570 \n\t\t\t{\n\t\t\t\tf[now][i]=min(f[now][i],f[now<<1][j]+f[now<<1|1][i-j]+t*2);\n\t\t\t} \n\t\t}\n\t}\n\treturn sum;\n}\nint main()\n{\n\tmemset(f,0x3f,sizeof(f));//\u56e0\u4e3a\u6c42\u6700\u5c11\u65f6\u95f4,\u6240\u4ee5\u521d\u59cb\u5316\u4e3a\u6781\u5927\u503c \n\ts=read();\n\tfor(int i=1;i<(NN<<1);i++) f[i][0]=0;//\u521d\u59cb\u5316\u4e3a0 \n\tdfs(1);\n\tfor(int i=120;i>=0;i--)//\u56e0\u4e3a\u8b66\u5bdf\u5728600s\u5185\u6765,\u4e00\u5e45\u753b5s,\u6700\u591a120\u5e45 \n\t{\n\t\tif(f[1][i]<s)//\u518d\u6b21\u6ce8\u610f\u662f\u5c0f\u4e8e \n\t\t{\n\t\t\tprintf(\"%d\",i);\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n```\n\u5982\u679c\u6709\u4eba\u770b\u7684\u8bdd\uff0c\u611f\u8c22\u89c2\u770b\u3002\u5982\u6709\u9519\u8bef\uff0c\u8bf7\u4e0d\u541d\u8d50\u6559\u3002",
        "postTime": 1567839013,
        "uid": 111356,
        "name": "corazon",
        "ccfLevel": 0,
        "title": "P1270 \u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986 \u9898\u89e3"
    },
    {
        "content": "\n### \u6811\u5f62DP and DFS\n\n  1.   \u5b9a\u4e49f(x,p)\u8868\u793a\u5728\u8282\u70b9x\u6240\u5728\u5b50\u6811\u4e0a\u76d7p\u5e45\u753b\u6240\u82b1\u7684\u6700\u5c11\u65f6\u95f4\n   1.  \u9012\u5f52\u5efa\u6811\n```cpp\n    void build(int x,int k)\n    {\n        n++;\n        scanf(\"%d%d\",&t[n].d,&t[n].p);\n        int res=n; tot+=t[n].p;\n        if (k==0) t[x].l=n;\n        else t[x].r=n;\n        if (t[n].p==0)\n        {\n            build(res,0); build(res,1);\n        }\n     }\n```\n\n   \n   3.  \u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a:\n###    f(x,p)=min(f(x,p),f(t[x].l,i)+f(t[x].r,j)+2*t[x].d)\n  \n- \u5176\u4e2dt[x].l,t[x].r,t[x].d\u4e3ax\u7684\u5de6,\u53f3\u5b50\u6811\u7f16\u53f7\u53ca\u8fd4\u56dex\u7684\u7236\u5b50\u6811\u8282\u70b9\u6240\u9700\u8981\u7684\u65f6\u95f4.\n\n 4. \u6700\u540e\u679a\u4e3e\u6700\u5927\u80fd\u76d7\u753b\u6570\u81f31\u7684\u65f6\u95f4,\u627e\u51fa\u6700\u65e9\u80fd\u5c0f\u4e8e\u8b66\u5bdf\u8d76\u5230\u65f6\u95f4\u7684\u753b\u6570\u53ca\u4e3a\u6700\u591a\u76d7\u753b\u6570\n\n    \u9644\u4e0a\u4ee3\u7801:\n\n ```cpp\n   #include <iostream>\n   #include <cstdio>\n   using namespace std;\n   const int Max=100000000,P=2001,N=101;\n   int f[N][P],time1,n,tot=0;//\u6781\u9650\u60c5\u51b5\n    struct ss\n    {\n    \tint l,r,d,p;\n    }t[N];\n\n    void build(int x,int k)//\u5efa\u6811:x\u4e3a\u6839,k=0\u4e3a\u5de6\u5b50\u6811,k=1\u4e3a\u53f3\u5b50\u6811\n    {\n        n++;\n        scanf(\"%d%d\",&t[n].d,&t[n].p);\n        int res=n; tot+=t[n].p;\n        if (k==0) t[x].l=n;\n        else t[x].r=n;\n        if (t[n].p==0)//\u5f53\u524d\u8282\u70b9\u6709\u5b50\u6811\n        {\n            build(res,0); build(res,1);\n        }\n     }\n    void dfs(int x)\n    {\n        if (x==0) return;\n        if (t[x].l==0&&t[x].r==0)//\u5904\u7406\u53f6\u5b50\u7ed3\u70b9\n        {\n             f[x][0]=0;\n             for (int i=1; i<=t[x].p; i++) \n                     f[x][i]=i*5+2*t[x].d;//\u7528i*5\u79d2\u5077i\u5e45\u753b\u540e\u75282*t[x].d\u79d2\u8fd4\u56de\u7236\u7ed3\u70b9\n             return;\n        }\n        dfs(t[x].l); dfs(t[x].r);\n        t[x].p=t[t[x].l].p+t[t[x].r].p;//\u7edf\u8ba1\u5b50\u7ed3\u70b9\u7684\u753b\u6570\n        for (int i=0; i<=t[t[x].l].p; i++)\n            for (int j=0; j<=t[t[x].r].p; j++)\n                f[x][i+j]=min(f[x][i+j],f[t[x].l][i]+f[t[x].r][j]+2*t[x].d);\n    }\n    \n    int main()\n    {\n        scanf(\"%d\",&time1); n=1;\n        build(1,0);\n        for (int i=1; i<N; i++)\n            for (int j=1; j<P; j++) f[i][j]=Max;\n        dfs(1);\n        for (int i=tot; i>=1; i--) \n            if (f[1][i]<time1)//\u5c0f\u5077\u8981\u5728\u8b66\u5bdf\u6765\u524d1\u79d2\u9003\u8d70 \n            {\n                printf(\"%d\\n\",i); break;\n            }\n    return 0;\n    }\n\n\n```\n",
        "postTime": 1563850043,
        "uid": 141460,
        "name": "MD_17L",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u6709\u8da3\u554a\uff0c\u62ff\u5230\u9898\u770b\u8f93\u5165\u683c\u5f0f\u662f\u6df1\u641c\u987a\u5e8f\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u9012\u5f52\u8c03\u7528\u6765\u8f93\u5165\u3002\u6211\u62ff\u5230\u8fd9\u9053\u9898\u89c9\u5f97j\u8868\u793a\u62ff\u51e0\u5e45\u753b\u6bd4\u8f83\u597d\u8f6c\u79fb\u3002\u3002\u4e8e\u662f\u6211\u5c31\u5c1d\u8bd5\u7528dp\uff08i,j\uff09\u8868\u793ai\u4e3a\u8282\u70b9\u62ffj\u526f\u753b\u6240\u7528\u6700\u77ed\u65f6\u95f4\u3002\u770b\u9898\u89e3\u91cc\u5168\u662fdp i\uff0cj\u8868\u793a\u7684\u5269\u4f59\u65f6\u95f4\u3002\u3002\u6211\u5c31\u53d1\u4e00\u4e0b\u3002\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\uff0c\u770b\u4e0d\u61c2\u7684\u5730\u65b9\u53ef\u4ee5\u79c1\u4fe1\u3002\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\n#define lson (o<<1)\n#define rson (o<<1|1)\nusing namespace std;\nconst int MAXN=1e4+3;\nconst int MINN=1e3+3;\nstruct edge{\n    int to,next,w;\n}e[MAXN<<1];\nint head[MAXN],cnt=0;\ninline void add(int u,int v,int w){e[++cnt]=(edge){v,head[u],w},head[u]=cnt;}\nint times,tem1,tem2,w[MINN],dp[MINN][MINN],lw[MINN],rw[MINN],ans=0;//w\u4e3a\u4ee5u\u8282\u70b9\u4e3a\u6839\u4e0d\u9650\u65f6\u62ff\u6700\u591a\u753b\u7684\u6570\u91cf lw\u5de6\u5b50\u6811\u8fb9\u6743 \u53f3\u5b50\u6811\u8fb9\u6743\u3002 \nbool haveson[MAXN];\nvoid init(int o,int fa){\n    scanf(\"%d%d\",&tem1,&tem2);\n    if(!tem2){\n        add(fa,o,tem1);\n        init(lson,o);\n        init(rson,o);\n    }\n    else {\n        add(fa,o,tem1);\n        w[o]=tem2;\n    }\n}\n//dp[u][j]=min(dp[lson][k]+dp[rson][j-k]+2*(e.w1+e.w2),dp[u][j]));     if(k==0)-  if(k==j)-   \u8fd9\u662f\u5199\u7684\u65f6\u5019\u7684\u8349\u7a3f \n// if u->don't have son    dp[u][1]=5; dp[u][2]=10;    \nvoid dfs1(int o){\n    for(int i=head[o];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==lson)lw[o]=e[i].w;\n        if(v==rson)rw[o]=e[i].w;\n        if(!haveson[o])haveson[o]=1;\n        dfs1(v);\n        if(haveson[o])w[o]+=w[v];\n    }\n    if(!haveson[o])for(int i=0;i<=w[o];i++)dp[o][i]=5*i;    \n}\nvoid dfs2(int o){\n    for(int i=head[o];i;i=e[i].next){\n        int v=e[i].to;\n        dfs2(v);\n        if(o!=0){\n            for(int j=0;j<=w[o];j++){\n                for(int k=0;k<=j;k++){\n                    if(k>w[lson]||j-k>w[rson])continue;//\u5f88\u5173\u952e,\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u8981\u6392\u9664\u6389\u3002 \n                    int tem3=dp[lson][k]+dp[rson][j-k]+((lw[o]+rw[o])<<1);\n                    if(k==0)tem3-=(lw[o]<<1);\n                    if(k==j)tem3-=(rw[o]<<1);\n                    dp[o][j]=min(tem3,dp[o][j]);\n                }\n            }\n        }\n        else for(int j=0;j<=w[o];j++)dp[o][j]=dp[rson][j]+(rw[o]<<1);\n    }\n}\nvoid mem(){\n    memset(haveson,0,sizeof(haveson));\n    memset(dp,0x7f,sizeof(dp));\n    memset(w,0,sizeof(w));\n}\nint main(){\n    mem();\n    scanf(\"%d\",&times);\n    init(1,0);\n    dfs1(0);\n    dfs2(0);\n    for(int i=1;i<=w[0];i++){\n        if(dp[0][i]<times)ans++;\n        else break;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1510120993,
        "uid": 55704,
        "name": "luoyue123",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "\u4eca\u5929\u6211\u4eec\u6765\u5b66\u4e60treedp\u3002treedp\uff0c\u5c31\u662f\u5728tree\uff08\u6811\uff09\u4e0a\u505aDP\u3002DP\uff1f\u4e0d\u5361\u7a7a\u95f4\u65f6\uff0cDFS=DP\u3002\u4e8e\u662f\u6211\u4eec\u5f00\u5fc3\u7684\u5f00\u59cb\u4e86DFS\u3002\n\n### 1. \u7528\u5148\u5e8f\u904d\u5386\u5efa\u6811\u3002\n\n\u5b83\u5927\u6982\u957f\u8fd9\u6837\uff1a\n\n```cpp\ninline void dfs()\n{\n\tlen++;\n\tint now=len;\n\tscanf(\"%d%d\",&a[now].val,&a[now].bj);\n\ta[now].val*=2;\t//\u8981\u8d70\u56de\u53bb\u4e00\u904d\uff0c\u76f8\u5f53\u4e8e\u4e24\u500d\n\tif(a[now].bj==0)\n\t{\n\t\ta[now].c[0]=len+1;\n\t\tdfs();\n\t\ta[now].c[1]=len+1;\n\t\tdfs();\n\t}\n}\n```\n\n### 2. treedp \u8d70\u8d77\u3002\n\n\u505a\u6cd5\uff1atreedp(now,val)\u8868\u793a\u7b2cnow\u4e2a\u8282\u70b9\u6709val\u7684\u65f6\u95f4\u80fdget\u5230\u591a\u5c11\u5e45\u753b\u3002\u5982\u679cnow\u662f\u53f6\u5b50\u8282\u70b9\uff08\u5373\u5c55\u5ba4\uff09\uff0c\u5c31\u5077\u753b\uff1b\u5982\u679cnow\u662f\u8fc7\u9053\u5c94\u8def\u53e3\uff0c\u5c31\u7528i\u4ece1\u5230val\u679a\u4e3e\u4e00\u6761\u8fc7\u9053\u7684\u65f6\u95f4\u5206\u914d\uff0c\u53e6\u4e00\u6761\u8fc7\u9053\u5c31\u662fval-i\uff0c\u7ee7\u7eed\u641c\u4e0b\u53bb\uff0c\u8fd4\u56de\u6700\u591a\u80fd\u5077\u5230\u753b\u7684\u6570\u76ee\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 O(n*s)\uff0c\u8fd8\u662f\u80fd\u8fc7\u7684\u3002\n\n~~\u90a3\u4e0d\u662f\u548c\u5176\u4ed6\u9898\u89e3\u7684\u4e00\u6837\uff1f~~\n\n### 3.\u4f18\u5316\u65f6\u95f4\u5206\u914d\u3002\n\n **\u91cd\u70b9\u6765\u4e86\uff01** \u6211\u4eec\u53d1\u73b0\u5f88\u591a\u7684\u65f6\u95f4\u6d6a\u8d39\u5728\u4e86\u679a\u4e3e\u5c94\u8def\u53e3 **\u4e24\u6761\u8fc7\u9053\u7684\u65f6\u95f4\u5206\u914d** \u4e0a\uff0c\u4f8b\u5982\u6709\u79cd\u60c5\u51b5\u5de6\u8fb9\u8fc7\u9053\u7ed9100\u65f6\u95f4\u6700\u591a3\u5e45\u753b\uff0c\u7ed916\u65f6\u95f4\u8fd8\u662f3\u5e45\u753b\u3002\n \n ![](https://cdn.luogu.com.cn/upload/image_hosting/6c8db803.png)\n \n \u6240\u4ee5\u6bcf\u6b21\u8fd4\u56de\u65f6\u53ef\u4ee5\u591a\u8fd4\u56de\u4e00\u4e2a\u503cp\u8868\u793a\u6709\u591a\u5c11\u7a7a\u4f59\u65f6\u95f4\uff0c\u5728\u5206\u914d\u65f6\u5229\u7528p\u8fdb\u884c\u4f18\u5316\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4e3a\u4e86\u9009\u5230\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u53ea\u80fd\u628a1~val\u679a\u4e3e\u5176\u4e2d\u4e00\u6761\u8def\u4f18\u5316\u6210\u4e00\u6b21\u8df3\u4e00\u5c0f\u6bb5\uff0c\u4e0d\u80fd\u4e24\u8fb9\u90fd\u8df3\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0a2901ug.png)\n\n\u6240\u4ee5\u6211\u4eec\u4f18\u5316\u4e00\u6761\u8fc7\u9053\u5c31\u597d\u4e86\uff0c\u8bb0\u5f97\u641c\u5b8c\u8981\u51cf\u4e00\u8fdb\u5165\u4e0b\u4e00\u79cd\u60c5\u51b5\uff0c\u5904\u7406\u7ec6\u8282\u8981\u5c0f\u5fc3\u3002\n\n\u5728\u8fc7\u9053\u5f88\u591a\u65f6\u8fd9\u4e2a\u65b9\u6cd5\u5176\u5b9e\u4e5f\u6ca1\u6709\u4f18\u5316\u591a\u5c11\uff0c\u4f18\u5316\u529b\u5ea6\u6700\u5927\u7684\u8fd8\u662f\u8fde\u63a5\u53f6\u5b50\u8282\u70b9\u7684\u8fc7\u9053\u3002\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 < O(n*s)\u3002\n\nupdate:\n\n\u4f18\u5316\u771f\u7684\u5f3a\uff01\u8865\u4e0a\u4e0d\u7528map\u7684\u4ee3\u7801\uff08[\u65e0O2] 13ms\uff09\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint s,len,k;\nstruct node{\n\tint val,c[2],bj;\n}a[410];\ninline void dfs()\n{\n\tlen++;\n\tint now=len;\n\tscanf(\"%d%d\",&a[now].val,&a[now].bj);\n\ta[now].val*=2;\n\tif(a[now].bj==0)\n\t{\n\t\ta[now].c[0]=len+1;\n\t\tdfs();\n\t\ta[now].c[1]=len+1;\n\t\tdfs();\n\t}\n}\nbool mbj[210][610];\nint mpv[210][610];\nint mpp[210][610];\ninline int mins(int a,int b)\n{\n\treturn a<b?a:b;\n}\ninline int treedp(int now,int val,int &p)\n{\n\tif(mbj[now][val]==1){\n\t\tp=mpp[now][val];\n\t\treturn mpv[now][val];\n\t}\n\tp=val;\n\tif(val<=0){return 0;}\n\tint u1,ans=0,up,u;\n\tif(a[now].bj!=0){\n\t\tu1=mins(val/5,a[now].bj);\n\t\tp=val-u1*5;\n\t\treturn u1;\n\t}\n\tu1=val;\n\tans=treedp(a[now].c[0],val-a[a[now].c[0]].val,p);\n\twhile(u1>=0)\n\t{\n\t\tif(u1==0)\n\t\t{\n\t\t\tu=treedp(a[now].c[1],val-a[a[now].c[1]].val,up);\n\t\t\tif(u>ans)\n\t\t\t{\n\t\t\t\tans=u;\n\t\t\t\tp=up;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tu=treedp(a[now].c[0],u1-a[a[now].c[0]].val,up);\n\t\tif(u<=0)\n\t\t{\n\t\t\tu=u1=0;continue;\n\t\t}\n\t\tu1-=up;\t//\u4f18\u5316\u6240\u5728\n\t\tu+=treedp(a[now].c[1],val-u1-a[a[now].c[1]].val,up);\n\t\tif(u>ans)\n\t\t{\n\t\t\tans=u;\n\t\t\tp=up;\n\t\t}\n\t\tu1--;\t//\u8bb0\u5f97\u51cf\u4e00\n\t}\n\tmbj[now][val]=1;\n\tmpp[now][val]=p;\n\tmpv[now][val]=ans;\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d\",&s);\n\tdfs();\n\tprintf(\"%d\",treedp(1,s-1-a[1].val,k));\t//\u51cf\u53bb\u8fdb\u5165\u65f6\u95f4\uff0c\u8fd8\u8981\u51cf\u4e00\uff08\u9898\u76ee\u5751\u70b9\u6240\u5728\uff09\n\treturn 0;\n}\n```\n\n \u5410\u69fd\u4e00\u53e5\uff1a\u7ed9\u51fa\u8b66\u5bdf\u8d76 **\u5230** \u7684\u65f6\u95f4\u662f\u771f\u7684\u5751\uff0c\u8981\u5728\u8b66\u5bdf\u6765\u4e4b **\u524d** \u9003\u79bb\u3002",
        "postTime": 1576329712,
        "uid": 90473,
        "name": "abc123_abc123",
        "ccfLevel": 7,
        "title": "P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u6709\u8da3\u7684\u6811\u5f62\u52a8\u89c4\u3002\u3002\u3002\u3002\n\n\u6ce8\u610f\u53ef\u4ee5\u4e0d\u628a\u4e00\u4e2a\u5c55\u5385\u7684\u753b\u53d6\u5b8c\uff0c\u5bb3\u7684\u6211\u627e\u4e86\u534a\u5929\u7684\u9519\u3002\u3002\n\n\u53ef\u4ee5\u5728\u6bcf\u4e2a\u53f6\u8282\u70b9\uff08\u975e\u5c55\u5385\uff09\u628a\u5269\u4f59\u65f6\u95f4\u4e0e\u5077\u7684\u753b\u7684\u6570\u91cf\u8bb0\u5f55\u4e0b\u6765\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\nusing namespace std;\nstruct qe\n{\n    int is,t,fa,l[3],r;\n}map[1000];\nint n=1,ti;\nint qw[103][603];\nint we(int a,int b)\n{\n    if(b>a) return a;\n    return b;\n}\nint work(int a,int time)\n{\n    if(qw[a][time]!=-1) return qw[a][time];    \n    if(map[a].is!=0)\n    if(map[a].t<=time) \n    {qw[a][time]=we(map[a].is,(time-map[a].t)/5);\n    return qw[a][time];\n    }\n    else \n    {qw[a][time]=0;\n    return 0;\n    }    \n    if(time-map[a].t<=0) return 0;\n    time-=map[a].t;\n    int l=map[a].l[1],r=map[a].l[2];\n    int max=0;\n    for(int i=0;i<=time;i++) \n    {\n        int t1,t2;\n        t1=work(l,time-i);\n        t2=work(r,i);\n        if(t1+t2>max) max=t1+t2;    \n    }\n    qw[a][time+map[a].t]=max;\n    return max;\n}\nint main()\n{\n    int i,j,k;\n    scanf(\"%d\",&ti);\n    for(i=1;;i++)\n    {\n        scanf(\"%d%d\",&map[i].t,&map[i].is);\n        map[i].r=1;\n        if(i!=1)\n        {\n            for(j=i-1;j>=1;j--)\n            {\n                if(map[j].is==0&&map[j].r!=3)\n                {\n                    map[i].fa=j;\n                    map[j].l[map[j].r]=i;\n                    map[j].r++;\n                    break;\n                }\n            }\n        }\n        int p=1;\n        for(j=1;j<=i;j++) if(map[j].r!=3&&map[j].is==0) p=0;\n        if(p==1) break;\n    }\n    n=i;\n    for(i=1;i<=n;i++) \n    {\n        map[i].t*=2;\n    }\n    for(i=1;i<=n;i++)for(j=0;j<=ti;j++) qw[i][j]=-1;\n    int ans;\n    ans=work(1,ti);    \n    printf(\"%d\",ans);    \n    return 0;\n}\n```",
        "postTime": 1458358022,
        "uid": 9767,
        "name": "liumingchen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1270 \u3010\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986\u3011"
    }
]