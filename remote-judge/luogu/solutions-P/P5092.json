[
    {
        "content": "\u5c31\u50cfNOIP2018\u6a21\u4effPOI\u4e00\u6837\n\nUSACO2004\u5c45\u7136copyNOIP2002\u7684\u9898\n\n\u800c\u4e14\u8fd8\u7b80\u5316\u4e86......\n\n\n\n------------\n\n\u8fd9\u7b97\u662f\u6a21\u677f\u9898\u5427\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u662f\u6765\u5b66\u4e60\u5e76\u67e5\u96c6\u7684\u76f8\u5173\u77e5\u8bc6\u7684\uff0c\u90a3\u6211\u5c31\u4ece\u5934\u5f00\u59cb\u8bb2\uff0c\u4ee5\u57fa\u7840\u77e5\u8bc6\u4e3a\u4e3b\n\n\n------------\n\n\u89e3\u9898\u601d\u8def\uff1a\u5e26\u6743\u5e76\u67e5\u96c6+\u8def\u5f84\u538b\u7f29\n\n\u7528dis\u6570\u7ec4\u50a8\u5b58\u67d0\u4e00\u8282\u70b9\u5230\u4ed6\u6240\u5728\u961f\u5217\u961f\u9996\u7684\u8ddd\u79bb\n\n\n------------\n\nPart I \u5e26\u6743\u5e76\u67e5\u96c6\n\n\u6211\u4eec\u7528fa[i]\u6570\u7ec4\u8868\u793ai\u8282\u70b9\u7684\u7236\u4eb2\uff0c\u521d\u59cb\u5316\u4e3ai\n\u82e5\u67d0\u4e00\u4e2a\u8282\u70b9\u7684fa\u7b49\u4e8e\u4ed6\u81ea\u5df1\uff08fa[i]=i\uff09\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u8fd8\u6ca1\u6709\u88ab\u79fb\u52a8\u8fc7\uff0c\u4ed6\u5c31\u662f\u7b2ci\u961f\u5217\u7684\u961f\u9996\n\u4e8e\u662f\u5f97\u5230find\u51fd\u6570\n```cpp\nint find(int x)\n{\n\tif (fa[x]==x) return x;\n\treturn find(fa[x]);\n}\n```\n\n\u540c\u65f6\uff0c\u7528dis[i]\u8868\u793ai\u8282\u70b9\u5230\u4ed6\u6240\u5728\u961f\u5217\u961f\u9996\u7684\u8ddd\u79bb\uff0c\u521d\u59cb\u5316\u4e3a0\u3002length[i]\u8868\u793a\u7b2ci\u961f\u5217\u7684\u957f\u5ea6\uff08\u663e\u7136\u8fd9\u4e00\u961f\u5217\u7684\u961f\u9996\u4e3ai\uff09\uff0c\u521d\u59cb\u5316\u4e3a1\u3002\u5f53\u79fb\u52a8X\u961f\u5217\u5230Y\u540e\u65f6\uff0c\u5219\u6709\uff1a\n\nfa[x]=fa[y],dis[x]=length[y],length[y]+=length[x]\n\n\u6ce8\u610f\uff1a\u6211\u4eec\u5df2\u65e0\u6cd5\u5c06\u5176\u4ed6\u961f\u5217\u79fb\u52a8\u5230\u539fx\u961f\u5217\uff0c\u6545\u6ca1\u6709\u5fc5\u8981\u5c06length[x]\u6539\u4e3a0\n\n\u4e8e\u662f\u5f97\u5230move\u51fd\u6570\n```cpp\nvoid move(int x,int y)\n{\n\tint fx=find(x);\n\tint fy=find(y);\n\tfa[fx]=fy;\n\tdis[fx]+=length[fy];\t\n\tlength[fy]+=length[fx];\n}\n```\n\n\n\u90a3\u4e48check\u51fd\u6570\u5c31\u7b80\u5355\u5566\n\n```cpp\nvoid check(int x)\n{\n\tint ffx=find(x); \n\tprintf(\"%d\\n\",dis[x]);\n}\n```\n\n\n\u4ee5\u4e0a\u7a0b\u5e8f\u6574\u5408\u540e\uff0c\u671f\u671b\u5f97\u520660\u5206\u300260%AC+40%TLE\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u4f18\u5316\u5462\uff1f\n\n\n------------\n\nPart II \u8def\u5f84\u538b\u7f29\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u67d0\u4e00\u8282\u70b9x\u5728\u53e6\u4e00\u8282\u70b9y\u4e0a\u65b9\uff0c\u90a3\u4e48\u4ed6\u3001\u5b83\u6c38\u8fdc\u5728y\u4e0a\u65b9\uff0c\u800c\u4e14\u4e24\u70b9\u95f4\u8ddd\u6052\u5b9a\u3002\uff08\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u628a\u5176\u4ed6\u961f\u5217\u63d2\u5165\u5230\u5b83\u4eec\u4e2d\u95f4\uff09\n\n\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u8fdb\u884c\u8def\u5f84\u538b\u7f29\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\nfa[2]=1,fa[3]=2,fa[4]=3; \u4efb\u610f\u4e24\u70b9\u95f4\u8ddd\u4e3a1\n\n\u538b\u7f29\u4e3a\uff1a\n\nfa[2]=1,dis[2]=1,fa[3]=1,dis[3]=2,fa[4]=1,dis[4]=3\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u7528\u56de\u6eaf\u5b9e\u73b0\uff0c\u5728\u4e00\u6b65\u6b65\u627e\u5230\u961f\u5217\u961f\u9996\u540e\uff0c\u4e00\u6b65\u6b65\u539f\u8def\u8fd4\u56de\uff0c\u628a\u6bcf\u4e00\u8282\u70b9\u7684fa\u90fd\u6539\u4e3a\u961f\u9996\uff0c\u5e76\u76f8\u5e94\u7684\u6539\u53d8dis\u5373\u53ef\u3002\u4e8e\u662f\u5f97\u5230\u4f18\u5316\u540e\u7684find\u51fd\u6570\n\n```cpp\nint find(int xx)\n{\n\tif (fa[xx]==xx) return xx;\n\tint father=find(fa[xx]);\n\tdis[xx]+=dis[fa[xx]];\n\tfa[xx]=father;\n\treturn father;\n}\n```\n\n\n\n------------\n\n\u5b8c\u6574\u4ee3\u7801\uff0c\u68c0\u9a8c\u540eAC\n```\n#include<cstdio>\n#include<iostream>\n#include<cmath> \n#define num 30001\nusing namespace std;\nint n,fa[30005],dis[30005],length[30005];\nint read()\n{\n    int x=0,f=1; char c=getchar();\n    while (c<'0' || c>'9') {if (c=='-') f=-1; c=getchar();}\n    while (c>='0'&&c<='9') {x=(x<<3)+(x<<1)+(c^48); c=getchar();}\n    return x*f;\n}\nint find(int xx)\n{\n    if (fa[xx]==xx) return xx;\n    int father=find(fa[xx]);\n    dis[xx]+=dis[fa[xx]];\n    fa[xx]=father;\n    return father;\n}\nvoid move(int x,int y)\n{\n    int fx=find(x);\n    int fy=find(y);\n    fa[fx]=fy;\n    dis[fx]+=length[fy];\t\n    length[fy]+=length[fx];\n}\nvoid check(int x)\n{\n    int ffx=find(x); \n    printf(\"%d\\n\",dis[x]);\n}\nint main()\n{\n    n=read();\n    for (int i=1;i<=num;i++) fa[i]=i;\n    for (int i=1;i<=num;i++) length[i]=1;\n    for (int w=1;w<=n;w++)\n    {\n        char c; cin>>c;\n        int x=read();\n        if (c=='M')\n        {\n            int y=read(); \n            move(x,y);\n        }\n        if (c=='C') check(x);\n    }\n    return 0;\n}\n```\n\n\n\n\n\n------------\n\n\u6700\u540e\u8bf4\u660e\u51e0\u70b9\uff1a\n\n1\u3001\u6ca1\u6709\u5fc5\u8981\u5173\u6ce8fa[i]\u5230\u5e95\u662fi\u8282\u70b9\u7684\u4e0a\u51e0\u4f4d\uff0c\u56e0\u4e3adis\u6570\u7ec4\u968f\u4e4b\u53d8\u5316\uff0c\u52a0\u4e0a\u4e0a\u8ff0\u6027\u8d28\uff0c\u4ed6\u5df2\u7ecf\u8986\u76d6\u4e86\u4e2d\u95f4\u533a\u57df\u3002\n\n2\u3001\u849f\u84bb\u5199\u9898\u89e3\uff0c\u6709bug\u758f\u6f0f\u8bf7\u5927\u5bb6\u4e0d\u8981\u55b7\uff0c\u6709\u95ee\u9898\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u63d0\u95ee\uff0c\u6211\u4f1a\u5e38\u5e38\u5173\u6ce8\u3002\u6700\u540e\u5e0c\u671b\u9898\u89e3\u5bf9\u5927\u5bb6\u6709\u7528\uff0c\u795d\u5927\u5bb6AC\u6b64\u9898\uff0cAK IOI\u3002\n\n3\u3001\u5982\u6709\u9700Pascal\u4ee3\u7801\u8bf7\u5728\u8bc4\u8bba\u533a\u56de\u590d\u3002\n",
        "postTime": 1557631490,
        "uid": 120836,
        "name": "Han_Innocence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5092 \u3010[USACO2004OPEN]Cube Stacking \u65b9\u5757\u6e38\u620f\u3011"
    },
    {
        "content": "\u4f17\u6240\u5468\u77e5\u8fd9\u662f\u4e00\u4e2a\u5e76\u67e5\u96c6\u7684\u9898        \n\u4f46\u662f\u6211\u9009\u62e9\u4e86\u6700\u7231\u7684\u975e\u65cbTreap        \n~~\u8dd1\u5f97\u8fd8\u633a\u5feb\u7684~~      \n\u628a\u8fd9\u4e9b\u70b9\u770b\u6210\u5e8f\u5217      \nM\u64cd\u4f5c\u5c31\u662f\u5408\u5e76\u4e24\u4e2a\u5e8f\u5217(y\u5e8f\u5217\u653e\u5728x\u5e8f\u5217\u540e\u9762)   \nC\u64cd\u4f5c\u5c31\u662f\u67d0\u4e2a\u5143\u7d20val\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e-1(\u4ece\u5de6\u5f80\u53f3)   \n\u8fd9\u79cd\u5408\u5e76\u7684\u64cd\u4f5c\u5bf9\u975e\u65cbTreap\u6765\u8bf4\u7b97\u662f\u5e38\u89c4\u64cd\u4f5c\u4e86\n\u601d\u8def\u975e\u5e38\u597d\u60f3     \n\u521a\u5f00\u59cb\u6211\u4eec\u65b0\u5efa30000\u4e2a\u5b64\u7acb\u7684\u5e73\u8861\u6811(\u5c31\u662f\u53ea\u6709\u4e00\u4e2a\u70b9)     \n\u6211\u4eec\u5728\u6b63\u5e38\u975e\u65cbTreap\u7684\u57fa\u7840\u4e0a,\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u7236\u8282\u70b9    \n\u4ece\u67d0\u4e2a\u70b9\u5f00\u59cb\u4e00\u76f4\u5f80\u7236\u8282\u70b9\u8df3\u5c31\u80fd\u627e\u5230\u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u6811\u7684\u6839\u8282\u70b9  \n\u63a5\u4e0b\u6765\u6211\u4eec\u5408\u5e76\u4e24\u4e2a\u6839\u8282\u70b9,\u90a3\u4e48\u5c31\u5b8c\u6210\u4e86\u4e24\u9897\u5e73\u8861\u6811\u7684\u5408\u5e76,\u6216\u8005\u8bf4\u5c31\u662f\u9898\u76ee\u4e2d\u7684M\u64cd\u4f5c,\u6ce8\u610fy\u6811\u5728x\u6811\u524d\u9762  \n\u5f53\u7136\u8fd9\u91cc\u90fd\u662f\u5bf9\u4e8e\u70b9\u7684\u64cd\u4f5c,\u800c\u9898\u76ee\u4e2d\u662f\u5408\u5e76\u503c\u4e3aval\u7684\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u6811   \n\u6ce8\u610f\u5230\u6bcf\u4e2a\u70b9\u7684\u503c\u90fd\u4e0d\u4e00\u6837(\u4ece1\u5230n),\u90a3\u4e48\u6211\u4eec\u5c31\u7528\u4e00\u4e2amaps\u6570\u7ec4\u6765\u8bb0\u5f55\u6bcf\u4e2a\u503cval\u5bf9\u5e94\u5e73\u8861\u6811\u4e2d\u7ed3\u70b9\u7f16\u53f7.   \n\u8fd9\u6837\u5c31\u80fd\u4ece\u67d0\u4e2a\u503c\u627e\u5230\u4ed6\u5728\u5e73\u8861\u6811\u4e2d\u7684\u7ed3\u70b9,\u7136\u540e\u627e\u5230\u8be5\u8282\u70b9\u6240\u5728\u6811\u7684\u6839\u8282\u70b9\u5408\u5e76   \n\u5bf9\u4e8eC,\u8981\u9ebb\u70e6\u70b9    \n\u5bf9\u5e73\u8861\u6811\u4e2d\u5e8f\u904d\u5386,\u5f97\u5230\u7684\u5c31\u662f\u6211\u4eec\u7ef4\u62a4\u7684\u5e8f\u5217   \n\u73b0\u5728\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u67d0\u4e2a\u70b9\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684\u987a\u5e8f   \n\u505a\u6cd5\u5c31\u662f\u4ece\u8fd9\u4e2a\u70b9\u4e00\u76f4\u5f80\u6839\u8282\u70b9\u8df3\n\u5bf9\u4e8e\u67d0\u4e2a\u8282\u70b9,\u5982\u679c\u4ed6\u662f\u5176\u7236\u8282\u70b9\u7684\u53f3\u513f\u5b50,\u90a3\u4e48\u5bf9\u5e94\u7684\u987a\u5e8f\u5c31\u5e94\u8be5\u662f\u5176\u5144\u5f1f\u8282\u70b9\u7684size+\u7236\u8282\u70b9\u5927\u5c0f(\u5c31\u662f\u4ee5\u7236\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811,\u4e2d\u5e8f\u904d\u5386\u5148\u904d\u5386\u5de6\u5b50\u6811,\u7236\u8282\u70b9,\u7136\u540e\u624d\u8f6e\u5230\u53f3\u5b50\u6811,)  \n\u5982\u679c\u662f\u53f3\u513f\u5b50\u5c31\u76f4\u63a5\u5f80\u7236\u8282\u70b9\u8df3\n\u7136\u540e\u5f80\u7236\u8282\u70b9\u8df3,\u518d\u7edf\u8ba1size.\u76f4\u5230\u627e\u5230\u6839\u8282\u70b9\n\u7136\u540e\u7b54\u6848\u51cf\u4e00\u5c31\u662f\u7b54\u6848\u4e86   \n\u63a5\u4e0b\u6765\u5c31\u662f\u6211\u53c8\u81ed\u53c8\u957f\u7684\u4ee3\u7801\u4e86\n```cpp\n#include<iostream>\n#include<cstdlib>\n#define MAXN 1000001\nstruct node{int val,key,size,l,r,f;}t[MAXN];\nint root,tot,n=40000,p,maps[MAXN];\nusing namespace std;\nint New(int val)\n{\n\tt[++tot]=(node){val,rand(),1,0,0,0};\n\treturn maps[val]=tot;\n}\nvoid update(int now)\n{\n\tt[now].size=t[t[now].r].size+t[t[now].l].size+1;  //\u6839\u4e3anow\u7684\u5b50\u6811\u5927\u5c0f\u4e3a\u5de6\u5b50\u6811+\u53f3\u5b50\u6811+\u7236\u8282\u70b9 \n\tt[t[now].l].f=now;    //\u66f4\u65b0\u7236\u4eb2 \n\tt[t[now].r].f=now;\n}\nvoid split(int now,int&x,int&y,int rank)\n{\n\tif(!now){x=y=0;return;}\n\tif(t[t[now].l].size>=rank)y=now,split(t[now].l,x,t[y].l,rank);\n\telse x=now,split(t[now].r,t[x].r,y,rank-t[t[now].l].size-1);\n\tupdate(now); \n}\nvoid merge(int&now,int x,int y)    //\u8fd9\u4e2amerge\u662f\u975e\u65cbTreap\u4e2d\u7684merge \n{\n\tif(!x||!y){now=x+y;return;}\n\tif(t[x].key<t[y].key)now=x,merge(t[now].r,t[x].r,y);\n\telse now=y,merge(t[now].l,x,t[y].l);\n\tupdate(now);\n}\nint find_root(int val) //\u503c\u4e3aval\u7684\u70b9\u6240\u5728\u5e73\u8861\u6811\u7684\u6839\u8282\u70b9 \n{\n\tint now=maps[val];\n\twhile(t[now].f)now=t[now].f;\n\treturn now;\n}\nint order_of_key(int val) //\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e \n{\n\tint now=maps[val],ans=0;\n\tans+=t[t[now].l].size+1;\n\twhile(now)\n\t{\n\t\tif(t[t[now].f].r==now)\n\t\t\tans+=t[t[t[now].f].l].size+1;\n\t\tnow=t[now].f;\n\t}\n\treturn ans;\n}\nvoid merge(int x,int y)  //\u8fd9\u4e2amerge\u5bf9\u5e94\u9898\u76ee\u4e2d\u7684M\u64cd\u4f5c \n{\n\tx=find_root(maps[x]),y=find_root(maps[y]);\n\tmerge(x,x,y);\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tfor(int i=1;i<=n;i++)New(i);\n\tcin>>p;\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tchar opt;\n\t\tint x,y;\n\t\tcin>>opt;\n\t\tif(opt=='M')cin>>x>>y,merge(y,x); \n\t\telse cin>>x,cout<<order_of_key(x)-1<<endl;\n\t}\n}\n```\n",
        "postTime": 1572014759,
        "uid": 229609,
        "name": "NewSjf",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking \u65b9\u5757\u6e38\u620f\u3011"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\u70b9\uff1a\u5e76\u67e5\u96c6\uff0c\u4e0d\u4f1a\u7684\u8bf7\u5148\u505a[\u6a21\u677f](https://www.luogu.org/problem/P3367)\n\n\u9996\u5148\u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u4e0e\u5e76\u67e5\u96c6\u6709\u5173\u7684\u9898\u76ee\uff0c\u4f46\u7531\u4e8e\u4ed6\u9700\u8981\u7ef4\u62a4\u5728x\u4e0b\u9762\u7684\u65b9\u5757\u4e2a\u6570\uff0c\u6240\u4ee5\u548c\u5e76\u67e5\u96c6\u53c8\u4e0d\u5b8c\u5168\u4e00\u6837\u3002\n\n\u4f60\u4f1a\u53d1\u73b0\u4ed6\u53ea\u662f\u6bd4\u666e\u901a\u7684\u5e76\u67e5\u96c6\u9700\u8981\u591a\u7ef4\u62a4\u4e00\u4e2a\u6743\u503c\u800c\u5df2\uff0c\u800c\u8fd9\u79cd\u5e76\u67e5\u96c6\u5c31\u662f\u2014\u2014**\u5e26\u6743\u5e76\u67e5\u96c6**\n\n\u6309\u7167\u5e76\u67e5\u96c6\u7684\u601d\u8def\uff0c\u6211\u4eec\u9700\u8981\u7814\u7a76\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a\n\n1.\u7ef4\u62a4\u54ea\u4e9b\u6743\u503c\n\n2.\u5982\u4f55\u5408\u5e76\n\n3.\u5982\u4f55\u67e5\u8be2\n\n4.\u5982\u4f55\u8def\u5f84\u538b\u7f29\n\n------------\n\n### $1^o$ \u9700\u8981\u7ef4\u62a4\u54ea\u4e9b\u6743\u503c\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u7531\u4e8e\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u6743\u503c\u53ea\u6709\u5728$x$\u4e0b\u9762\u7684\u6570\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba9\u4e00\u5806\u4e2d\u7684\u6700\u4e0b\u9762\u7684\u4e00\u4e2a\u4e3a\u5f53\u524d\u96c6\u5408\u7684\u6839\uff0c\u65b9\u4fbf\u4ee5\u540e\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e0b\u4e09\u4e2a\u503c\uff1a\n```cpp\nstruct node{\n\tint fa,up,down;//\u5206\u522b\u662f\u5f53\u524d\u96c6\u5408\u7684\u6839\uff0c\u5728\u4ed6\u4e0a\u9762\u7684\u65b9\u5757\u6570(\u5305\u62ec\u81ea\u5df1\uff09\uff0c\u5728\u4ed6\u4e0b\u9762\u7684\u65b9\u5757\u6570\n}father[100005];\n```\n\n### $2^o$ \u5982\u4f55\u5408\u5e76\n\n\u5f53\u6211\u4eec\u8981\u628a$x$\uff0c$y$\uff08$x$,$y$\u5747\u4e3a\u96c6\u5408\u7684\u6839\uff09\u4e24\u4e2a\u96c6\u5408\u5408\u5e76\u65f6\u4f1a\u4ea7\u751f\u4e09\u79cd\u53d8\u5316\u3002\n\n1.$x$\u96c6\u5408\u7684\u6bcf\u4e2a\u6570\u7684$down$\u90fd\u4f1a\u52a0\u4e0a$y$\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\n\n\u800c$y$\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4f1a\u5b58\u5728$father[y].up$\u4e2d\n\n\u6240\u4ee5\u6bcf\u6b21:\t$father[x].down=father[y].up$\u5373\u53ef\n\n2.$y$\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u6570\u7684$up$\u90fd\u4f1a\u52a0\u4e0a$x$\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\n\n\u800c$x$\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u4f1a\u5b58\u5728$father[x].up$\u4e2d\n\n\u6240\u4ee5\u6bcf\u6b21\uff1a$father[y].up+=father[x].up$\u5373\u53ef\n\n3.\u5e76\u67e5\u96c6\u5e38\u89c4\u7956\u5148\u53d8\u6362\n\u6bcf\u6b21\uff1a$father[x].fa=father[y].fa$\u5373\u53ef\n\n\u7ed9\u51fa\u7247\u6bb5\u4ee3\u7801\uff08f1\u76f8\u5f53\u4e8ex\uff0cf2\u76f8\u5f53\u4e8ey)\n```cpp\ninline void unnion(int f1,int f2)\n{\n\tfather[f1].fa=f2;//\u66f4\u65b0fa\n\tfather[f1].down=father[f2].up;//\u66f4\u65b0down\n\tfather[f2].up+=father[f1].up;//\u66f4\u65b0up\n}\n```\n\n### $3^o$ \u5982\u4f55\u67e5\u8be2\n\n\n\u67e5\u8be2\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u8981\u5bf9\u4e8e$x$\u8f93\u51fa$father[x].down$\u5373\u53ef\u3002\n\n### $4^o$ \u5982\u4f55\u8def\u5f84\u538b\u7f29\n\n\u6211\u4eec\u77e5\u9053\u5728\u5bfb\u627e\u4e00\u4e2a\u96c6\u5408\u7684\u6839\u65f6\uff0c\u8def\u5f84\u538b\u7f29\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u4f18\u5316\u3002\n\n\u800c\u5230\u4e86\u5e26\u6743\u5e76\u67e5\u96c6\u4e2d\uff0c\u8def\u5f84\u538b\u7f29\u663e\u5f97\u66f4\u4e3a\u91cd\u8981\u3002\n\n\u4f8b\u5982\u672c\u9898\u6211\u4eec\u6bcf\u6b21\u66f4\u65b0\u6743\u503c\uff0c\u90fd\u53ea\u66f4\u65b0\u4e86\u6bcf\u4e2a\u96c6\u5408\u7684\u6839\uff0c\u800c\u663e\u7136\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u6743\u503c\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u5c31\u8981\u5728\u8def\u5f84\u538b\u7f29\u65f6\u628a\u6743\u503c\u4f20\u4e0b\u53bb\u3002\uff08\u6709\u70b9\u7c7b\u4f3c\u4e8e\u7ebf\u6bb5\u6811\u7684push_down\u4e0b\u4f20\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u7a0d\u5fae\u753b\u4e2a\u56fe\u5206\u6790\u4e00\u4e0b\uff0c\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6211\u4eec\u663e\u7136\u53ea\u6709$down$\u8fd9\u4e2a\u6743\u503c\u8fd8\u6ca1\u6709\u7ef4\u62a4\u597d\uff0c\u6240\u4ee5\u53ea\u9700\u7ef4\u62a4$down$\n\n\u800c\u4e14\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6240\u7f3a\u5c11\u7684\u90fd\u662f\u4e0a\u6b21\u5408\u5e76\u65f6\u66f4\u65b0\u5230\u6839\u8282\u70b9\u4e2d\u7684$father[y].up$\u3002\n\n\u53c8\u7531\u4e8e\u6211\u4eec\u7684\u66f4\u65b0\u65b9\u5f0f\u662f\u8fd9\u6837\u7684$father[x].down=father[y].up$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728\u8def\u5f84\u538b\u7f29\u7684\u8fc7\u7a0b\u4e2d\u5c06\u6bcf\u4e2a\u70b9\u7684$down$\u90fd\u52a0\u4e0a\u6839\u8282\u70b9\u7684$down$\u5c31\u884c\u4e86\u3002\n\n\u653e\u90e8\u5206\u4ee3\u7801\uff1a\n\n```cpp\ninline int Find(int x)\n{\n\tif (father[x].fa!=x)\n\t   {\n\t   int gr=Find(father[x].fa);//\u627e\u6839\uff0c\u987a\u4fbf\u66f4\u65b0\u5230\u4ed6\u7684\u7236\u4eb2\u4e2d\n\t   father[x].down+=father[father[x].fa].down;//\u8def\u5f84\u538b\u7f29\uff0c\u4e0b\u4f20\u6743\u503c\n\t   return father[x].fa=gr;\n\t   }\n\treturn father[x].fa;\n}\n```\n\n\n------------\n\n\u8fd9\u6837\u7ef4\u62a4\u4e0b\u6765\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86~~~\n\n\u653eAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint x=0;\n\tchar c=getchar();\n\tbool f=0;\n\twhile (!isdigit(c))\n\t\t  f|=(c=='-'),c=getchar();\n\twhile (isdigit(c))\n\t\t  x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f?-x:x;\n}\nint p;\nstruct node{\n\tint fa,up,down;\n}father[100005];\nint ans[100005];\ninline int Find(int x)//\u627e\u6839\uff0c\u987a\u4fbf\u4e0b\u4f20\u6743\u503c\n{\n\tif (father[x].fa!=x)\n\t   {\n\t   int gr=Find(father[x].fa);\n\t   father[x].down+=father[father[x].fa].down;\n\t   return father[x].fa=gr;\n\t   }\n\treturn father[x].fa;\n}\ninline void unnion(int f1,int f2)//\u5408\u5e76\n{\n\tfather[f1].fa=f2;\n\tfather[f1].down=father[f2].up;\n\tfather[f2].up+=father[f1].up;\n}\nint main(){\n\tfor (register int i=1;i<=100005;++i)\n\t    father[i].fa=i,father[i].up=1,father[i].down=0;\n\tp=read();\n\tfor (register int i=1;i<=p;++i)\n\t\t{\n\t\tchar c=getchar();\n\t\twhile (!isalpha(c))\n\t\t      c=getchar();\n\t\tif (c=='M')\n\t\t   {\n\t\t   int x=read(),y=read();\n\t\t   int f1=Find(x),f2=Find(y);\n\t\t   if (f1!=f2)\n\t\t      unnion(f1,f2);\n\t\t   }\n\t\telse\n\t\t   {\n\t\t   int x=read();\n\t\t   Find(x);//\u5728\u67e5\u8be2\u524d\u8981\u628a\u6743\u503c\u4e0b\u4f20\n\t\t   printf(\"%d\\n\",father[x].down);\n\t\t   }\n\t\t}\n\treturn 0;\n}\n\n```\n\u6700\u540e\u9001\u4e2a\u798f\u5229\u7ed9\u770b\u5230\u6700\u540e\u7684$Oier$\u4eec\n\n[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.org/problem/P2342)",
        "postTime": 1573637599,
        "uid": 125443,
        "name": "Dawn_Sdy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking \u65b9\u5757\u6e38\u620f\u3011"
    },
    {
        "content": "[\u539f\u9898](https://www.luogu.com.cn/problem/P5092)\n\n## \u9898\u610f\n\u7528\u4e00\u4e9b\u65b9\u5757\u7ec4\u6210\u4e00\u4e9b\u7acb\u65b9\u67f1\uff0c\u5e76\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\n1. \u79fb\u52a8\uff08$M$\uff09\uff1a\u5c06\u5305\u542b $X$ \u7684\u7acb\u65b9\u67f1\u79fb\u52a8\u5230\u5305\u542b $Y$ \u7684\u7acb\u65b9\u67f1\u4e0a\u3002\n1. \u7edf\u8ba1\uff08$C$\uff09\uff1a\u7edf\u8ba1\u542b $X$ \u7684\u7acb\u65b9\u67f1\u4e2d\uff0c\u5728 $X$ \u4e0b\u65b9\u7684\u65b9\u5757\u6570\u76ee\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n- \u7b2c\u4e00\u884c\u8f93\u5165\u6307\u4ee4\u6570 $q$\u3002\n- \u63a5\u4e0b\u6765 $q$ \u884c\u6bcf\u884c\u4e00\u4e2a\u6307\u4ee4\uff0c\u5f62\u5982 M X Y \u6216 C X\u3002\n\n## \u505a\u6cd5\n\n- \u5bf9\u4e8e\u6bcf\u4e2a\u65b9\u5757\uff0c\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u65b9\u5757\u6240\u5728\u7684\u7acb\u65b9\u67f1\u7684\u5e95\u90e8\u8282\u70b9\uff0c\u8fd9\u4e2a\u65b9\u5757\u548c\u5e95\u90e8\u8282\u70b9\u4e4b\u95f4\u76f8\u9694\u591a\u5c11\u65b9\u5757\uff0c\u4ee5\u53ca\u6240\u5728\u7acb\u65b9\u67f1\u5927\u5c0f\u3002\n- \u6bcf\u6b21\u5408\u5e76\u542b $X$ \u7684\u7acb\u65b9\u67f1\u548c\u542b $Y$ \u7684\u7acb\u65b9\u67f1\u7684\u65f6\u5019\uff0c\u5c06\u542b $X$ \u7684\u7acb\u65b9\u67f1\u653e\u5728\u542b $Y$ \u7684\u7acb\u65b9\u67f1\u4e0a\u9762\uff0c\u5373\u5c06\u542b $X$ \u7684\u7acb\u65b9\u67f1\u7684\u5e95\u90e8\u8282\u70b9\u53d8\u4e3a\u542b $Y$ \u7684\u7acb\u65b9\u67f1\u7684\u5e95\u90e8\u8282\u70b9\uff0c\u5e76\u7ef4\u62a4\u5404\u9879\u6570\u503c\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<iostream>\n#define N 30005\n\nusing namespace std;\n\nint t;\nint f[N],pre[N],num[N];\n// f[i]\u8868\u793a\u65b9\u5757i\u6240\u5728\u7acb\u65b9\u67f1\u7684\u5e95\u90e8\u8282\u70b9\u3002\n// pre[i]\u8868\u793a\u65b9\u5757i\u548c\u6240\u5728\u7acb\u65b9\u67f1\u5e95\u90e8\u8282\u70b9\u7684\u8ddd\u79bb\u3002\n// num[i]\u8868\u793a\u65b9\u5757i\u6240\u5728\u7acb\u65b9\u67f1\u7684\u5927\u5c0f\u3002 \n\nint find(int x){\n\tif(x==f[x])\n\t\treturn x;\n\tint fx=find(f[x]);\n\tpre[x]+=pre[f[x]];\n\treturn f[x]=fx;\n}\n\nint main(){\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=N;i++){\n\t\tf[i]=i;\n\t\tnum[i]=1;\n\t}\n\tchar opt;\n\tint x,y;\n\tfor(int i=1;i<=t;i++){\n\t\tscanf(\" %c%d\",&opt,&x);\n\t\tint fx=find(x);\n\t\tif(opt=='M'){\n\t\t\tscanf(\"%d\",&y);\n\t\t\tint fy=find(y);\n\t\t\tf[fx]=fy;\n\t\t\tpre[fx]+=num[fy];\n\t\t\tnum[fy]+=num[fx];\n\t\t\tnum[fx]=0;\n\t\t\t// \u5408\u5e76\u64cd\u4f5c\u3002 \n\t\t}\n\t\telse printf(\"%d\\n\",pre[x]); //\u67e5\u8be2 \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1630048501,
        "uid": 224926,
        "name": "\u8ba9\u98ce\u5ffd\u60a0\u4f60",
        "ccfLevel": 0,
        "title": "P5092 [USACO04OPEN]Cube Stacking \u9898\u89e3"
    },
    {
        "content": "\u770b\u4e0a\u53bb\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u6211\u4eec\u9700\u8981\u4ec0\u4e48\u4fe1\u606f\n\n\u67d0\u4e2a\u65b9\u5757\u524d\u9762\u6709\u591a\u5c11\u4e2a\n\n\u67d0\u4e00\u5806\u65b9\u5757\u6709\u591a\u5c11\u4e2a\n\n\u90a3\u4e48\u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u90fd\u8bb0\u5f55\u5b83\u524d\u9762\u6709\u591a\u5c11\u4e2a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u96c6\u5408\u7684\u6839\uff0c\u6211\u4eec\u8bb0\u5f55\u8be5\u96c6\u5408\u6709\u591a\u5c11\u4e2a\u5143\u7d20\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Maxn=30005;\nint A[Maxn],B[Maxn],fa[Maxn];//A\u6570\u7ec4\uff1a\u8be5\u65b9\u5757\u524d\u9762\u6709\u591a\u5c11\u4e2a\u65b9\u5757\uff0cB\u6570\u7ec4\uff1a\u8be5\u5806\u65b9\u5757\u5171\u6709\u591a\u5c11\u65b9\u5757\nint getfa(int x){\n\tif (fa[x]==x) return x;\n\tint tmp=getfa(fa[x]);\n\tA[x]+=A[fa[x]];\n\treturn fa[x]=tmp;\n}\nvoid Union(int x,int y){\n\tint fx=getfa(x),fy=getfa(y);\n\tif (fx!=fy) {\n\t\tfa[fx]=fy;\n\t\tA[fx]+=B[fy];\n\t\tB[fy]+=B[fx];\n\t}\n}\nint main(){\n//\tfreopen(\"cubes.in\",\"r\",stdin);\n//\tfreopen(\"cubes.out\",\"w\",stdout);\n\tios::sync_with_stdio(false);\n\tint P;\n\tcin>>P;\n\tfor (int i=1;i<=Maxn;i++) fa[i]=i,A[i]=0,B[i]=1;\n\tfor(int i=1;i<=P;i++){\n\t\tchar c;\n\t\tint x,y;\n\t\tcin>>c;\n\t\tif (c=='M'){\n\t\t\tcin>>x>>y;\n\t\t\tUnion(x,y);\n\t\t}\n\t\telse {\n\t\t\tcin>>x;\n\t\t\tgetfa(x);\n\t\t\tprintf(\"%d\\n\",A[x]);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1622097630,
        "uid": 434929,
        "name": "Usada_Pekora",
        "ccfLevel": 7,
        "title": "P5092 [USACO04OPEN]Cube Stacking \u9898\u89e3"
    },
    {
        "content": "(*\u9700\u524d\u7f6e\u5e76\u67e5\u96c6\u77e5\u8bc6\uff09\n\n\uff08u1s1\uff0c\u5176\u5b9e\u5c31\u662f[NOI2002](https://www.luogu.com.cn/problem/P1196)\u539f\u9898\uff08\u786e\u4fe1\uff09\uff09\n\n\u5e76\u67e5\u96c6\u5ef6\u4f38\u9898\n\n\u7531\u9898\u76ee\u63cf\u8ff0\u53ef\u4ee5\u5f88\u660e\u663e\u53ef\u4ee5\u770b\u51fa\uff0c\u5c31\u662f\u4e0d\u65ad\u5c06\u4e00\u6761\u94fe\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u6811\uff09\u5408\u5e76\u3002\n\n\u6211\u4eec\u77e5\u9053\u5e76\u67e5\u96c6\u53ef\u4ee5\u5408\u5e76\u4e24\u68f5\u6811\u7684\u6839\u8282\u70b9\u3002\u4f46\u5982\u4f55\u5904\u7406\u4e0a\u4e0b\u65b9\u5757\u4e2a\u6570\u5462\uff1f\n\n\u5176\u5b9e\u53ea\u9700\u8981\u50a8\u5b58\u6bcf\u4e2a\u94fe\u7684\u957f\u5ea6\uff0c\u5408\u5e76\u7684\u65f6\u5019\u628a\u7236\u4eb2\u7684\u957f\u5ea6\u52a0\u7ed9\u513f\u5b50\u3002\n\n\u4f46\u662f\u8be5\u95ee\u9898\u8981\u6c42\u7684\u662f\u5230\u513f\u5b50\u7684\u8ddd\u79bb\u600e\u4e48\u529e\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u5012\u8fc7\u6765\uff0c\u628a\u653e\u5728\u4e0b\u9762\u7684\u65b9\u5757\u770b\u505a\u7236\u4eb2\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u5e95\u4e0b\u65b9\u5757\u4e2a\u6570\n\n\u4e0a\u4ee3\u7801\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/a02j0act.png)\n",
        "postTime": 1604558431,
        "uid": 218311,
        "name": "Update\u10e6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e2a\u65b9\u5757 $x$ ,\n\n$cnt_x$ \u4ee3\u8868\u4ee5 $x$ \u4e3a\u6839\u7ed3\u70b9\u7684\u65b9\u5757\u7684\u4e2a\u6570\uff0c\uff08\u5373x\u662f\u4e00\u5e62\u65b9\u5757\u7684\u9876\uff0c\u95ee\u8fd9\u5e62\u65b9\u5757\u4e00\u5171\u6709\u51e0\u4e2a\u3002\uff09\n\n$dis_x$ \u8868\u793a $x$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u3002(\u5373x\u5934\u4e0a\u9876\u7740\u591a\u5c11\u4e2a\u65b9\u5757)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/j0btcev1.png)\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep(i,x,y) for(int i=x;i<=y;i++)\n#define per(i,x,y) for(int i=x;i>=y;i--)\n#define rd(x) scanf(\"%d\",&x);\ntypedef long long LL;\nconst int N=30010;\nint n=30000;\nint dis[N],fa[N],cnt[N];\nint find(int x){\n\tif(x==fa[x]) return x;\n\tint f=find(fa[x]);\n\tdis[x]+=dis[fa[x]];\n\tfa[x]=f;\n\treturn fa[x];\n}\nvoid merge(int x,int y){\n\tint fx=find(x),fy=find(y);\n\tif(fx==fy) return;\n\tfa[fy]=fx;\n\tdis[fy]=cnt[fx];\n\tcnt[fx]+=cnt[fy];\n} \nint main(){\n\tfor(int i=1;i<=n;i++) fa[i]=i,dis[i]=0,cnt[i]=1;\n\tint p;scanf(\"%d\",&p);\n\twhile(p--){\n\t\tchar s[5];int x,y;\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='M'){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tmerge(x,y);\n\t\t} else {\n\t\t\tscanf(\"%d\",&x);\n\t\t\tint fx=find(x);\n\t\t\tprintf(\"%d\\n\",cnt[fx]-dis[x]-1);\n\t\t} \n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1603978707,
        "uid": 106738,
        "name": "_Felix",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking\u3011"
    },
    {
        "content": "# \u9898\u89e3 p5092\n\n~~\u6b64\u9898\u548c p2342\u53e0\u79ef\u6728 \u4ee5\u53ca NOI2002 \u94f6\u6cb3\u82f1\u96c4\u5217\u4f20\u601d\u8def\u76f8\u540c~~\n\n### \u8003\u70b9 \uff1a \u5e76\u67e5\u96c6\uff08\u8fd8\u7528\u8bf4\n\n\u6700\u5f00\u59cb\u6211\u53ea\u60f3\u5230\u7ef4\u62a4\u6bcf\u4e2a\u79ef\u6728\u4e0b\u9762\u7684\u79ef\u6728\u7684\u4e2a\u6570\uff0c\u7136\u540e\u6837\u4f8b\u600e\u4e48\u8c03\u90fd\u662f\u8f93\u51fa0\u3002\n\u4e8e\u662f\u5c31\u60f3\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4\u7ef4\u62a4\u8be5\u79ef\u6728\u4e0a\uff08\u5305\u542b\u4ed6\u81ea\u5df1\uff09\u6709\u591a\u5c11\u4e2a\u79ef\u6728\uff0c\u547d\u540d\u4e3a$l[i]$\u6765\u8f85\u52a9\u6700\u540e\u7684\u7b54\u6848\u6570\u7ec4$d[i]$\u7684\u66f4\u65b0\u3002\n\n#####  $d[i]$:\u4ed6\u4e0b\u9762\u6709\u51e0\u4e2a\u79ef\u6728\n#####  $l[i]$:\u4ed6\u4e0a\u9762\u6709\u51e0\u4e2a\u79ef\u6728\uff08\u5305\u62ec\u4ed6\u81ea\u5df1\n\n#### \u65b9\u4fbf\u8d77\u89c1\n\u6211\u4eec\u76f4\u63a5\u628a\u6700\u4e0b\u9762\u4e00\u4e2a\u79ef\u6728\u4f5c\u4e3a\u6839\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u66f4\u65b0$l[i],d[i]$\u3002\n\n### CODE\n\n```\n#include<cstdio>\n#include<iostream>\nusing namespace std;\n\nconst int maxn = 5e5+5;\nint fa[maxn],d[maxn],l[maxn],n,p;\n\ninline int read()\n{\n\tchar c = getchar();int x = 0,f = 1;\n\twhile(c<'0'||c>'9') {if(c=='-')f = -1;c = getchar();}\n\twhile(c>='0'&&c<='9') {x = x*10+c-'0';c = getchar();}\n\treturn x*f;\n}\n\n//\u8def\u5f84\u538b\u7f29+\u5e26\u6743\u5e76\u67e5\u96c6\u6807\u51c6\u5199\u6cd5\uff0c\u7531\u4e8ed[i]\u7ef4\u62a4\u7b54\u6848\uff0c\u76f4\u4f20\u5b83\u7684\u503c\nint find(int x)\n{\n\tif(x==fa[x])\n\t\treturn x;\n\tint last = find(fa[x]);\n\td[x] += d[fa[x]];\n\treturn fa[x] = last;\n}\n\n//\u56e0\u4e3a\u9009\u7528\u4e86\u6700\u4e0b\u9762\u4e00\u4e2a\u79ef\u6728\u4f5c\u4e3a\u6839\uff0c\u6240\u4ee5\u8981\u7528\u7956\u5148\u6765\u66f4\u65b0\u3002\nvoid update(int x,int y)\n{\n\tx = find(x);y = find(y);\n\tif(x!=y)\n\t{\n\t\tfa[x] = y;\n\t\td[x] = l[y];\n\t\tl[y] += l[x];\n\t}\n}\n\nint main()\n{\n\tfor(int i = 1;i<=maxn;++i)\n\t\tfa[i] = i,l[i] = 1;\n\tint p = read();\n\tfor(int i = 1;i<=p;++i)\n\t{\n\t\tchar c; cin >> c;\n\t\tif(c=='M')\n\t\t{\n\t\t\tint x = read();int y = read();\n\t\t\tupdate(x,y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint x = read();\n\t\t\tfind(x);\n\t\t\tprintf(\"%d\\n\",d[x]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n~~\u5f3a\u70c8\u63a8\u8350\u624b\u63a8\u4e00\u4e0b\u5408\u5e76\u8fc7\u7a0b\uff0c\u77ac\u95f4\u6e05\u6670~~\n\n\n",
        "postTime": 1572274929,
        "uid": 186840,
        "name": "QMQMQM4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking \u65b9\u5757\u6e38\u620f\u3011"
    },
    {
        "content": "\u76f8\u4fe1\u5927\u5bb6\u770b\u5230\u8fd9\u91cc\u7684\u65f6\u5019\uff0c\u5bf9\u9898\u76ee\u610f\u601d\u5df2\u7ecf\u6df1\u523b\u7684\u7406\u89e3\n\n\u9898\u76ee\u5f53\u4e2d\u6709\u4e24\u4e2a\u64cd\u4f5c\n\n$1.$\u628a\u4e00\u4e2a\u67f1\u5b50\u4e0a\u7684\u7acb\u65b9\u4f53\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u67f1\u5b50\u4e0a\n\n$2.$\u6c42\u7ed9\u5b9a\u67f1\u5b50\u4e0a\u7684\u7acb\u65b9\u4f53\u4e2a\u6570\n\n**\u5408\u5e76\u533a\u95f4?\u6c42\u533a\u95f4\u4e2a\u6570?**\n\n\u8fd9\u4e0d\u662f~~\u5e76\u67e5\u96c6~~\u5417\n\n\u5f53\u8981\u8fdb\u884c\u79fb\u52a8\u64cd\u4f5c\u7684\u65f6\u5019\uff1a\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8981\u64cd\u4f5c\u7684\u4e24\u4e2a\u67f1\u5b50\u8fdb\u884c\u533a\u95f4\u5408\u5e76\n\n\u5f53\u8981\u8fdb\u884c\u67e5\u627e\u7acb\u65b9\u4f53\u4e2a\u6570\u65f6\n\n\u7b80\u5355\u7684\u5e76\u67e5\u96c6\u5df2\u7ecf\u65e0\u6cd5\u5b8c\u6210\n\n\u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u65b0\u5f00\u4e00\u4e2a$len$\u6570\u7ec4\uff0c\u6765\u5b58\u50a8\u533a\u95f4\u5927\u5c0f\n\n\u56e0\u4e3a\u52a0\u4e86$len$\u6570\u7ec4\uff0c\u6240\u4ee5\u64cd\u4f5c\u90fd\u8fdb\u884c\u4e86\u4e00\u4e9b\u7ec6\u5fae\u7684\u53d8\u5316\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read()\n{\n\tint x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile (!isdigit(c))\n\t\t  f|=(c=='-'),c=getchar();\n\twhile (isdigit(c))\n\t\t  x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f?-x:x;\n}\nvoid write(int x) {\n    if(x<0) {\n        putchar('-');\n        x=-x;\n    }\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint n;\nint fa[30110];\nint dis[30110];\nint lenn[30110];\ninline int change(int x){\n\tif(fa[x]==x)\n\t\treturn x;\n\tint findx;\n\tfindx=change(fa[x]);\n\tdis[x]+=dis[fa[x]];\n\tfa[x]=findx;\n\treturn findx;\n}\ninline void update(int x,int y){\n\tint fax;\n\tint fay;\n\tfax=change(x);\n\tfay=change(y);\n\tfa[fax]=fay;\n\tdis[fax]+=lenn[fay];\n\tlenn[fay]+=lenn[fax];\n}\ninline void query(int x){\n\tint tot;\n\ttot=change(x);\n\twrite(dis[x]);\n\tputs(\"\");\n}\nsigned main(){\n\tn=read();\n\tfor(register int i=1;i<=30010;++i)\n\t\tfa[i]=i;\n\tfor(register int i=1;i<=30010;++i)\n\t\tlenn[i]=1;\n\tfor(register int i=1;i<=n;++i)\n\t\t{\n\t\t\tchar c;\n\t\t\tcin>>c;\n\t\t\tif(c=='M')\n\t\t\t\t{\n\t\t\t\t\tint x;\n\t\t\t\t\tint y;\n\t\t\t\t\tx=read();\n\t\t\t\t\ty=read();\n\t\t\t\t\tupdate(x,y);\t\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tint x;\n\t\t\t\t\tx=read();\n\t\t\t\t\tquery(x);\n\t\t\t\t}\n\t\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1611755605,
        "uid": 193541,
        "name": "\u7f9a\u7f8aWANG",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking\u3011"
    },
    {
        "content": "\u672c\u9898\u662f\u4e00\u9053**\u5e26\u6743\u5e76\u67e5\u96c6**\u7684\u9898\u76ee\uff0c\u4e0d\u4e86\u89e3\u5e76\u67e5\u96c6\u7684\u53ef\u4ee5\u5148\u505a\u4e00\u4e0b[\u5e76\u67e5\u96c6\u6a21\u677f](https://www.luogu.com.cn/problem/P3367)\u3002\n\n#### \u9898\u610f\n\u6709 $n$ \u4e2a\u65b9\u5757\uff0c\u8fdb\u884c $P$ \u6b21\u64cd\u4f5c\uff1a\u5c06\u5305\u542b $X$ \u7684\u7acb\u65b9\u67f1\u79fb\u52a8\u5230\u5305\u542b $Y$ \u7684\u7acb\u65b9\u67f1\u4e0a\u6216\u7edf\u8ba1\u542b $X$ \u7684\u7acb\u65b9\u67f1\u4e2d\uff0c\u5728 $X$ \u4e0b\u65b9\u7684\u65b9\u5757\u6570\u76ee\u3002\n\n#### \u601d\u8def\n\u6211\u7684\u5199\u6cd5\u4e0e\u591a\u6570\u9898\u89e3\u4e0d\u540c\uff0c\u4ee5\u9876\u7aef\u7684\u65b9\u5757\u4e3a\u6839\u3002\u5728\u6807\u51c6\u5e76\u67e5\u96c6\u53ea\u6709 $father$ \u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u4e3a $size$ \u548c $value$\u3002$size_i$\u8868\u793a\u4ee5 $i$ \u4e3a\u7956\u5b97\u7684\u96c6\u5408\u7684\u5927\u5c0f\uff0c\u5373 $i$ \u53f7\u65b9\u5757\u53ca\u4e0b\u65b9\u7684\u65b9\u5757\u6570\uff1b$value_i$ \u5219\u8868\u793a $i$ \u5143\u7d20\u7684\u6743\u503c\uff0c\u5728\u672c\u9898\u4e2d\u5373\u4e3a $i$ \u53f7\u65b9\u5757\u4e0a\u65b9\u7684\u65b9\u5757\u6570\u3002\n\n\u5e26\u6743\u5e76\u67e5\u96c6\u7684 $find$ \u51fd\u6570\u9664\u666e\u901a\u5e76\u67e5\u96c6\u7684\u8def\u5f84\u538b\u7f29\u5916\uff0c\u8fd8\u8981\u7ed9\u6bcf\u4e2a\u8282\u70b9\u7684\u6743\u503c\u52a0\u4e0a\u5176\u7236\u4eb2\u7684\u6743\u503c\uff0c\u56e0\u4e3a\u662f\u81ea\u4e0b\u800c\u4e0a\u627e\u3002\n\n\u5bf9\u4e8e\u79fb\u52a8\u64cd\u4f5c\uff0c\u5148\u627e\u5230 $X$ \u548c $Y$ \u7684\u7956\u5148 $fx,fy$\u3002$fx,fy$ \u4e3a$X,Y$\u6240\u5728\u65b9\u5757\u67f1\u9876\u7aef\u7684\u65b9\u5757\u7f16\u53f7\uff0c$size_{fx},size_{fy}$ \u5373\u4e3a $X,Y$ \u6240\u5728\u65b9\u5757\u67f1\u7684\u65b9\u5757\u6570\u91cf\u3002\u5c06 $X$ \u79fb\u52a8\u5230 $Y$ \u4e0a\uff0c$X$ \u6240\u5728\u65b9\u5757\u67f1\u5b50\u7684\u9876\u7aef\u5373 $fx$ \u4e0b\u65b9\u7684\u65b9\u5757\u6570\u8981\u589e\u52a0 $Y$ \u6240\u5728\u7684\u67f1\u5b50\u7684\u65b9\u5757\u6570\uff1b$Y$ \u6240\u5728\u65b9\u5757\u67f1\u9876\u7aef\u7684\u4e0a\u65b9\u591a\u4e86 $X$ \u6240\u5728\u65b9\u5757\u67f1\u7684\u65b9\u5757\u6570\u3002\u7528\u8bed\u8a00\u63cf\u8ff0\u5f88\u9ebb\u70e6\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5199\u6210\u7b97\u5f0f\u5c31\u662f\uff1a $size_{fx}=size_{fx}+size_{fy}$ \u548c $value_{fy}=size_{fx}$\u3002\u7136\u540e\u5408\u5e76 $fx,fy$ \u4e24\u4e2a\u96c6\u5408\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5bf9 $size$ \u7684\u4fee\u6539\u90fd\u5728\u7956\u5148\u4e0a\uff0c\u56e0\u6b64\u4e0d\u80fd\u76f4\u63a5\u8f93\u51fa $size_X$ \u800c\u662f $size_{fx}-value_{x}-1$\uff0c\u5373 $X$ \u6240\u5728\u65b9\u5757\u67f1\u7684\u65b9\u5757\u603b\u6570- $X$ \u4e0a\u65b9\u7684\u65b9\u5757\u6570-\u81ea\u5df1\u7684\u503c\u3002\u8fd9\u91cc\u7684 $value_X$ \u53ef\u4ee5\u76f4\u63a5\u7528\u662f\u56e0\u4e3a\u5728 $find$ \u7684\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u88ab\u8d4b\u503c\u4e86\u3002\n\n#### \u4ee3\u7801\n\n\u4ee3\u7801\u4e2d $F,S,U$ \u5206\u522b\u5bf9\u5e94\u524d\u6587 $father,size,value$\u3002\n\n\u672c\u6587\u4ee3\u7801\u5e76\u67e5\u96c6\u7684 $find$ \u51fd\u6570\u5199\u4e86\u4f7f\u7528\u9012\u5f52\u548c\u975e\u9012\u5f52\u7684\u4e24\u79cd\u4e0d\u540c\u5199\u6cd5\uff0c\u56e0\u800c\u7565\u957f\u3002\n\n```cpp\n#include <cstdio>\nint F[30001];//\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u7684\u7236\u4eb2\u7f16\u53f7 \nint S[30001];//\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u4e0b\u9762\u7684\u65b9\u5757\u4e2a\u6570 \nint U[30001];//\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u7684\u6743\u503c \nint find1(int p)//\u5bfb\u627ep\u7684\u7956\u5b97\u8282\u70b9+\u8def\u5f84\u538b\u7f29-\u9012\u5f52\u5199\u6cd5 \n{\n\tint fp=F[p];\n\tif(fp!=p)\n\t{\n\t\tF[p]=find1(F[p]);\n\t} \n\tU[p]+=U[fp];\n\treturn F[p];\n} \nint st[30001];//\u6808-\u5de6\u95ed\u53f3\u95ed\u533a\u95f4 \nint find2(int p)//\u5bfb\u627ep\u7684\u7956\u5b97\u8282\u70b9+\u8def\u5f84\u538b\u7f29-\u5faa\u73af\u5199\u6cd5 \n{\n\tint L;\n\tL=0;\n\twhile(F[p]!=p)\n\t{\n\t\tst[++L]=p;//\u5411\u4e0a\u8df3\u4e00\u6b65\n\t\tp=F[p]; \n\t}\n\tint i;\n\tint x;\n\tint sum;\n\tsum=0;\n\tfor(i=L;i>=1;i--)//\u8def\u5f84\u538b\u7f29 \n\t{\n\t\tU[st[i]]+=U[F[st[i]]];\n\t\tF[st[i]]=p;//\u5c06\u6808\u4e2d\u7684\u6240\u6709\u5143\u7d20\u7684\u7236\u8282\u70b9\u6307\u5411p\u7684\u7956\u5b97 \n\t}\n\treturn p; \n} \nint main()\n{\n\tint P;\n\tint i;\n\tfor(i=1;i<=30000;i++)\n\t{\n\t\tF[i]=i;\n\t\tS[i]=1;//\u53ea\u6709\u672c\u8eab\u4e00\u5757\n\t\tU[i]=0;//\u4e0a\u65b9\u6ca1\u6709\u8282\u70b9 \n\t}\n\tscanf(\"%d\",&P);\n\tchar str[5]; \n\tint x,y;\n\tint fx,fy; \n\twhile(P--)\n\t{\n\t\tscanf(\"%s\",str);//\u5b57\u7b26\u4e32\u8bfb\u5165 \n\t\tif(str[0]=='M')//\u5408\u5e76 \n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tfx=find2(x);//\u5bfb\u627ex\u548cy\u7684\u7956\u5b97 \n\t\t\tfy=find2(y);\n\t\t\tif(fx==fy)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t} \n\t\t\tU[fy]=S[fx];//\u5408\u5e76\u540ey\u4e0a\u65b9\u6709S[fx]\u4e2a\u65b9\u5757 \n\t\t\tS[fx]+=S[fy];//\u8fd9\u4e2a\u7956\u5b97\u4e0b\u9762\u591a\u4e86y\u65b9\u5757\u6240\u5728\u67f1\u5b50\u7684\u65b9\u5757\u6570 \n\t\t\tF[fy]=fx;//y\u65b9\u5757\u7684\u7236\u4eb2\u8282\u70b9\u8bbe\u7f6e\u4e3ax\u7684\u7956\u5b97 \n\t\t} \n\t\telse\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tprintf(\"%d\\n\",S[find2(x)]-U[x]-1);//x\u6240\u5728\u67f1\u5b50\u7684\u65b9\u5757\u6570-x\u4e0a\u65b9\u7684\u65b9\u5757\u6570-x\u672c\u8eab=x\u65b9\u5757\u4e0b\u65b9\u7684\u65b9\u5757\u6570 \n\t\t}\n\t} \n} \n```\n",
        "postTime": 1596375088,
        "uid": 291481,
        "name": "novax",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking\u3011"
    },
    {
        "content": "\uff08\u53c8\uff09\u4e00\u9053\u5e26\u6743\u5e76\u67e5\u96c6\u597d\u9898\u3002\n\n\u4f17\u4eba\u6240\u77e5\uff0c\u666e\u901a\u5e76\u67e5\u96c6\u4e0d\u53ef\u4ee5\u5904\u7406\u8fb9\u6743\u95ee\u9898\uff0c\u4e8e\u662f\u806a\u660e\u7684\u4eba\u7c7b\u53d1\u660e\u4e86\u6709\u6743\u7684\u5e76\u67e5\u96c6\u3002\u5c31\u662f\u5728father\u6570\u7ec4\u7684\u57fa\u7840\u4e0a\uff0c\u52a0\u4e86siz\u6570\u7ec4\u548cdis\u6570\u7ec4\u3002\n\n\u5728\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u90a3\u9898\u91cc\uff1a\n\nfather[i]\u8868\u793ai\u70b9\u7684\u76f4\u63a5\u6240\u5728\u7684\u961f\u5934\n\ndis[i]\u8868\u793ai\u70b9\u5230\u7236\u4eb2\u7684\u8ddd\u79bb\n\nsize[i]\u8868\u793ai\u70b9\u7236\u4eb2\u6240\u5728\u7684\u961f\u7684\u8230\u8239\u6570\u91cf\n\n\u8fd9\u4e2a\u8ddf\u8fd9\u9898\u7684\u601d\u8def\u5dee\u4e0d\u591a\u3002\n\n\u7ed9\u6211\u4eec\u4e24\u4e2a\u64cd\u4f5c\uff0c\u7b2c\u4e00\u4e2a\u5c31\u662f\u666e\u666e\u901a\u901a\u7684\u5408\u5e76\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u4e2a\u8ba9\u6211\u4eec\u6c42\u7684\u5176\u5b9e\u662fx\u70b9\u5230\u7236\u4eb2\u7684\u8ddd\u79bb\u3002\u8f93\u51fadis[x]\u5373\u53ef\uff1f\uff1f\n\n\u7b54\u6848\u662f\u4e0d\u80fd\uff0c18\u5206\u3002\n\n\u7384\u5b66\u7684\u5751\u70b9\u6765\u4e86\uff1a\u5343\u4e07\u4e0d\u8981\u5fd8\u4e86\u67e5\u8be2\u524d\u8981\u628a\u6743\u5f80\u4e0b\u4f20\u3002\n\n\u7136\u540e\u5c31\u662fAC\u4ee3\u7801\u4e86\u3002\n\n```\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 30005;\n\nint T;\n\nint fa[MAXN], dis[MAXN], siz[MAXN];\n\nint find(int x) {\n    if (fa[x] == x) return x;\n    int father = fa[x];\n    fa[x] = find(father);\n    dis[x] += dis[father];\n    return fa[x];\n}\n\nvoid merge(int x, int y) {\n    int fx = find(x), fy = find(y);\n    fa[fx] = fy;\n    dis[fx] += siz[fy];\n    siz[fx] += siz[fy];\n    siz[fy] = siz[fx];\n}\n\nvoid init() {\n    for (int i = 1; i <= MAXN; ++i) {\n        fa[i] = i;\n        siz[i] = 1;\n    }\n}\n\nint main() {\n    init();\n    cin >> T;\n    while (T--) {\n        char c;\n        int x, y;\n        cin >> c;\n        if (c == 'M') {\n            cin >> x >> y;\n            merge(x, y);\n        }\n        if (c == 'C') {\n            cin >> x;\n            find(x);\n            cout << dis[x] << '\\n';\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1595643558,
        "uid": 298325,
        "name": "Marshadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/loney-s/p/12940029.html)\n\n# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5092)\n\n# \u601d\u8def\n\n\u6211\u4eec\u5355\u72ec\u8003\u8651\u5982\u679c\u5c06\u5305\u542b$x$\u7684\u7acb\u65b9\u67f1\u79fb\u52a8\u5305\u542b$y$\u7684\u7acb\u65b9\u67f1\u4e0a\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\n\n\u9996\u5148\u5bf9\u4e8e\u539f\u6765\u7684\u5305\u542b$y$\u7684\u7acb\u65b9\u67f1\uff0c\u6240\u6709\u7684\u7b54\u6848\u90fd\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u53d8\u5316\n\n\u5bf9\u4e8e\u5305\u542b$x$\u7684\u7acb\u65b9\u67f1\uff0c\u4ed6\u4eec\u6240\u6709\u7684\u7b54\u6848\u90fd\u4f1a\u52a0\u4e0a\u5305\u542b$y$\u7684\u7acb\u65b9\u67f1\u7684\u5927\u5c0f\n\n\u7b80\u5355\u7684\u53bb\u8003\u8651\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u53bb\u505a\n\n\u6bd5\u7adf\u64cd\u4f5c\u53ea\u6709\u6c42\u503c\uff0c\u5e73\u8861\u6811\u7684\u5408\u5e76\uff0c\u533a\u95f4\u52a0\u6cd5\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nlog_n)$\n\n\u672c\u7bc7\u535a\u5ba2\u4e3b\u8981\u4ecb\u7ecd\u5e26\u6743\u51b0\u8336\u59ec\u7684\u505a\u6cd5\n\n\u5176\u5b9e\u4e5f\u5dee\u4e0d\u591a\uff0c\n\n\u56e0\u4e3a\u6bcf\u4e00\u6b21\u7684\u64cd\u4f5c\u90fd\u662f\u9488\u5bf9\u6574\u4e2a\u51b0\u8336\u59ec\u8fdb\u884c\u64cd\u4f5c\n\n\u6240\u4ee5\u6211\u4eec\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u53ef\u4ee5\u76f4\u63a5\u6253\u5230\u6839\u4e0a\uff0c\n\n\u5728$findset$\u64cd\u4f5c\u7684\u65f6\u5019\u7528\u7236\u4eb2\u8282\u70b9\u7684\u4fe1\u606f\u8fdb\u884c\u7ef4\u62a4\n\n\u81f3\u4e8e$size$\u7684\u7ef4\u62a4\u66f4\u7b80\u5355\n\n\u53ea\u6709\u5728\u5408\u5e76\u4e24\u4e2a\u51b0\u8336\u59ec\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n# \u4ee3\u7801\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n;\nint fa[30005];\nint siz[30005];\nint ans[30005];\nchar opt;\ninline void makeset(int n)\n{\n\tfor(int i=1;i<=30000;i++)\n\t{\n\t\tfa[i]=i;\n\t\tsiz[i]=1;\n\t\tans[i]=0;\n\t}\n}\ninline int findset(int u)\n{\n\tif(fa[u]==u)\n\t\treturn u;\n\tint t=fa[u];\n\tfa[u]=findset(fa[u]);\n\tans[u]+=ans[t];\n\treturn fa[u];\n}\ninline void unionset(int a,int b)\n{\n\tint u=findset(a);\n\tint v=findset(b);\n\tif(u==v)\n\t\treturn;\n\tfa[v]=u;\n\tans[v]+=siz[u];\n\tsiz[u]+=siz[v];\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tmakeset(n);\n\tfor(int i=1,u,v;i<=n;i++)\n\t{\n\t\tcin>>opt;\n\t\tif(opt=='M')\n\t\t{\n\t\t\tcin>>u>>v;\n\t\t\tunionset(v,u);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcin>>u;\n\t\t\tfindset(u);\n\t\t\tcout<<ans[u]<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1590156110,
        "uid": 124477,
        "name": "gSE2xWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u660e\u663e\u7684\u5e76\u67e5\u96c6\uff0c\u4f46\u548c\u666e\u901a\u7684\u5e76\u67e5\u96c6\u4e0d\u592a\u4e00\u6837\n\n\u9898\u610f\uff1a\n```latex\n\u79fb\u52a8\uff08M\uff09\uff1a\u5c06\u5305\u542b X \u7684\u7acb\u65b9\u67f1\u79fb\u52a8\u5230\u5305\u542b Y \u7684\u7acb\u65b9\u67f1\u4e0a\u3002\n\u7edf\u8ba1\uff08C\uff09\uff1a\u7edf\u8ba1\u542b X \u7684\u7acb\u65b9\u67f1\u4e2d\uff0c\u5728 X \u4e0b\u65b9\u7684\u65b9\u5757\u6570\u76ee\u3002\n```\n\u7136\u540e\u5c31\u4e0d\u96be\u53d1\u73b0\uff0cM\u64cd\u4f5c\u662f\u5c06\u4e24\u4e2a\u79ef\u6728\u5806\u5408\u5e76\uff0c\u4e5f\u5c31\u662f\u5e76\u67e5\u96c6\u7684\u5408\u5e76\u64cd\u4f5c\uff0cC\u64cd\u4f5c\u662f\u4e00\u4e2a\u67e5\u8be2\u5de5\u4f5c\n\n\u8fd9\u4e2a\u5730\u65b9\u8981\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u7684\u601d\u8def\u53bb\u505a\uff0c\u56e0\u4e3aC\u64cd\u4f5c\u4e0d\u662f\u53bb\u6c42\u96c6\u5408\u91cc\u9762\u7684\u5143\u7d20\u4e2a\u6570\u800c\u662f\u90e8\u5206\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u7528\u4e00\u4e2a\u53e6\u5916\u7684\u65b9\u5f0f\u6765\u7ef4\u62a4\u8fd9\u4e9b\u4fe1\u606f\n\n\u4e0b\u9762\u5148\u653e\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N = 500010;\nint t;\nint fa[N], d[N], size[N];\nint find(int x)\n{\n\tif(fa[x] == x) return x;\n\tint root = fa[x];\n\tfa[x] = find(fa[x]);\n\tsize[x] = size[fa[x]];\n\td[x] += d[root];\n\treturn fa[x];\n}\nint main()\n{\n\tfor(int i = 1;i <= N;i++) fa[i] = i, size[i] = 1;\n\tscanf(\"%d\",&t);\n\tfor(int i = 1;i <= t;i++){\n\t\tchar s;cin >> s;\n\t\tint x, y;\n\t\tif(s == 'M'){\n\t\t\tscanf(\"%d%d\",&x, &y);\n\t\t\tx = find(x), y = find(y);\n\t\t\tfa[x] = y;\n\t\t\td[x] = size[y];\n\t\t\tsize[y] += size[x];\n\t\t\tsize[x] = size[y];\n\t\t}else{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tfind(x);\n\t\t\tprintf(\"%d\\n\",d[x]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u5728\u8fd9\u91cc\uff0cfa\u6570\u7ec4\u8868\u793a\u8282\u70b9\u7236\u4eb2\uff0cd\u6570\u7ec4\u8868\u793a\u8fb9\u6743\uff0cd[i]\u4fdd\u5b58\u4e86\u4f4d\u4e8e\u7f16\u53f7i\u7684\u79ef\u6728\u4e0b\u65b9\u7684\u79ef\u6728\u4e2a\u6570\n\nsize\u6570\u7ec4\u5219\u8868\u793a\u6bcf\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\n\n\u8fd8\u6709\u4e00\u4e2a\u6211\u8981\u5efa\u8bae\u7684\u662f\u589e\u5f3a\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u4e0d\u8981\u628a\u4e00\u4e9b\u64cd\u4f5c\u5199\u5728\u4e00\u8d77\uff0c\u4e0d\u5bb9\u6613\u8c03\u8bd5",
        "postTime": 1584663868,
        "uid": 219033,
        "name": "Snow_Dreams",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5092 \u3010[USACO04OPEN]Cube Stacking\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u81ea\u7136\u662f\u52a0\u6743\u5e76\u67e5\u96c6\n\n\u6211\u4eec\u5728\u67e5\u627e\u65f6\u7ef4\u62a4\u4e00\u4e2adis\u662f\u8fd9\u4e2a\u70b9\u5230\u6839\u4e4b\u95f4\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u65b9\u5757\n\n\n\n\u5f97\u5230\u4e86\u6838\u5fc3\u4ee3\u7801\u4e4b\u4e00\n\n```cpp\ninline int find(int x){\n    if(x == fa[x]) return x;\n    int t = find(fa[x]);\n    dis[x] += dis[fa[x]];// \u67e5\u627e\u65f6\u5904\u7406\u4e00\u4e0bx\u5230\u6839\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u65b9\u5757 \n    fa[x] = t;\n    return t;\n}\n```\n\n\u5728\u5408\u5e76\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6839\u7684siz\n\n\u5f97\u5230\u4e86\u6838\u5fc3\u4ee3\u7801\u4e4b\u4e8c\n\n```cpp\ninline void M(int x,int y){\n    int fa_a = find(x),fa_b = find(y);\n    fa[fa_b] = fa_a;\n    dis[fa_b] = siz[fa_a];  \n    siz[fa_a] += siz[fa_b];// \u5408\u5e76\u65f6\u7ef4\u62a4\u8fd9\u6839\u67f1\u5b50\u6709\u591a\u5c11\u4e2a\u65b9\u5757 \n    return;\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\n\n\u7801\u98ce\u975e\u5e38\u4e11QAQ\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<map>\n#include<queue>\n#include<ctime>\n#include<list>\n#include<bitset>\n#define ll long long\n#define N 30100\n#define IL inline\nusing namespace std;\ninline ll read()\n{\n \tll res=0,bo=1;\n \tchar ch=getchar();\n \twhile(ch<'0'||ch>'9'){if(ch=='-')bo=-1;ch=getchar();}\n \twhile(ch>='0'&&ch<='9'){res=(res<<1)+(res<<3)+ch-'0';ch=getchar();}\n \treturn bo*res;\n}\nll fa[N],dis[N],siz[N],n,p;\nchar ch;\ninline int find(int x){\n    if(x == fa[x]) return x;\n    int t = find(fa[x]);\n    dis[x] += dis[fa[x]];// \u67e5\u627e\u65f6\u5904\u7406\u4e00\u4e0bx\u5230\u6839\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u65b9\u5757 \n    fa[x] = t;\n    return t;\n}\ninline void M(int x,int y){\n    int fa_a = find(x),fa_b = find(y);\n    fa[fa_b] = fa_a;\n    dis[fa_b] = siz[fa_a];  \n    siz[fa_a] += siz[fa_b];// \u5408\u5e76\u65f6\u7ef4\u62a4\u8fd9\u6839\u67f1\u5b50\u6709\u591a\u5c11\u4e2a\u65b9\u5757 \n    return;\n}\ninline void C(int x){\n    int fa_a = find(x);\n    printf(\"%lld\\n\",(siz[fa_a] - dis[x] - 1));\n    return;\n}\nint main()\n{\n    p = read();\n    for(int i = 0;i <= 30010;i++)//\u521d\u59cb\u5316 \n        fa[i]=i,siz[i]=1;\n    for(int i = 1;i <= p;i ++){\n        int x,y;\n        cin>>ch>>x;\n        if(ch == 'C') {\n            C(x);//\u67e5\u8be2 x\u4e0b\u9762\u6709\u591a\u5c11\u65b9\u5757 \n            goto LZWFX;\n        }\n        cin>>y;\n        if(ch == 'M') \n            M(x,y);\n        LZWFX:;\n    }\t\n    return 0;\n}\n```\n\u8fd9\u662f\u849f\u84bb\u53d1\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u5e0c\u671b\u7ed9\u8fc7\n",
        "postTime": 1546430837,
        "uid": 162451,
        "name": "__wfx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5092 \u3010[USACO2004OPEN]Cube Stacking \u65b9\u5757\u6e38\u620f\u3011"
    },
    {
        "content": "[\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4](https://www.luogu.org/problemnew/show/P1196) \u662f\u4e00\u9053\u4e0e\u8fd9\u9898\u975e\u5e38\u76f8\u4f3c\u7684\u9898\u76ee\u3002\r\n\r\n\u5728\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e24\u5806\u65b9\u5757\u4e2d\u6700\u4e0a\u9762\u7684\u65b9\u5757\u8fdb\u884c\u5408\u5e76\uff0c\u5e76\u66f4\u65b0\u8be5\u65b9\u5757\u5728\u8be5\u5806\u65b9\u5757\u4e2d\u7684\u4f4d\u7f6e\uff0c\u65b0\u5f62\u6210\u5806\u7684\u65b9\u5757\u603b\u6570\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5408\u5e76\u64cd\u4f5c\u3002\r\n\r\n\u800c\u5728\u67e5\u8be2\u65f6\uff0c\u6211\u4eec\u5728\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u64cd\u4f5c\u7684\u540c\u65f6\uff0c\u9700\u8981\u540c\u65f6\u66f4\u65b0\u6240\u67e5\u8be2\u7684\u65b9\u5757\u5728\u8be5\u5806\u65b9\u5757\u7684\u4f4d\u7f6e\u3002\r\n```\r\n#include <cstdio>\r\n#include <algorithm>\r\nusing namespace std;\r\nint fa[30005],order[30005],num[30005];//fa\u4ee3\u8868\u5b83\u7684\r\nint find(int x)\r\n{\r\n if(x==fa[x])return x;\r\n int a=find(fa[x]);\r\n order[x]+=order[fa[x]];\r\n return fa[x]=a;\r\n}\r\nvoid unionn(int x,int y)\r\n{\r\n order[x]+=num[y];\r\n fa[x]=y;\r\n num[y]+=num[x];\r\n num[x]=0;\r\n}\r\nvoid init()\r\n{\r\n for(int i=1;i<=30000;i++)\r\n  fa[i]=i,num[i]=1;\r\n}\r\nint main()\r\n{\r\n int t;\r\n scanf(\"%d\",&t);\r\n init();\r\n for(int i=1;i<=t;i++)\r\n {\r\n  int x,y;\r\n  char op[5];\r\n  scanf(\"%s\",op);\r\n  if(op[0]=='M')\r\n  {\r\n   scanf(\"%d%d\",&x,&y);\r\n   unionn(find(x),find(y));\r\n  }\r\n  else\r\n  {\r\n   scanf(\"%d\",&x);\r\n   find(x);\r\n   printf(\"%d\\n\",order[x]);\r\n  }\r\n }\r\n return 0;\r\n}\r\n```",
        "postTime": 1544625117,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5092 \u3010[USACO2004OPEN]Cube Stacking \u65b9\u5757\u6e38\u620f\u3011"
    }
]