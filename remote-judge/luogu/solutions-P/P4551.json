[
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21\u5b66\u4e6001trie\uff0c\u53d1\u7bc7\u9898\u89e3\u52a0\u6df1\u4e00\u4e0b\u5370\u8c61\u3002\n\n\u9996\u5148\u8bf4\u4e00\u4e0b\u9898\u610f\u3002\u8fd9\u9898\u5c31\u662f\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6c42\u6811\u4e0a\u6240\u6709\u8def\u5f84\u4e2d\u5f02\u6216\u548c\u6700\u5927\u7684\u3002\n\n\u4e24\u4e2a\u524d\u7f6e\u829d\u58eb\uff1a\n\n# 1\u300101trie \n\n\u628a\u6570\u62c6\u6210\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\uff0c\u7136\u540e\u6bcf\u4e00\u4f4d\u90fd\u53ea\u6709\u4e24\u4e2a\u5b57\u7b26\uff1a0\u62161\uff0c\u7136\u540e\u6309\u7167trie\u7684\u65b9\u5f0f\u5b58\u4e0b\u6765\uff0c\u4ee5\u8fbe\u5230\u8282\u7701\u7a7a\u95f4\u7684\u6548\u679c\u3002\n\n\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/53407.png)\n\n\u8fd9\u6837\u5c31\u4e0d\u7528\u4e00\u4e2a\u6570\u4e00\u4e2a\u6570\u7ec4\u7684\u6d6a\u8d39\u7a7a\u95f4\u6765\u5b58\u4e86QAQ\n\n# 2\u3001\u5f02\u6216\n\n\u628a\u4e24\u4e2a\u6570\u5199\u6210\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\uff0c\u5bf9\u7167\u6bcf\u4e00\u4f4d\uff0c\u5982\u679c\u76f8\u540c\u5219\u8fd9\u4e00\u4f4d\u4e3a0\uff0c\u5426\u5219\u4e3a1\u3002\n\n\u5982\u4e0b\uff1a\n\n3:  011\n\n4:  100\n\n3^4=111=7\n\n\u7406\u89e3\u4e86\u6211\u4eec\u5c31\u63a5\u4e0b\u6765\u8fdb\u5165\u6b63\u9898\u3002\n\n# \u9898\u89e3\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5230\u6839\u8282\u70b9\u7684\u5f02\u6216\u548c\u8fdb\u884c\u5efa01trie\u6811\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/53408.png)\n\n\u7136\u540e\u6709\u4e00\u4e2a\u5b9a\u8bba\uff1a\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u5b83\u4e24\u6b21\u5f02\u6216\u540c\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u5b83\u662f\u4e0d\u4f1a\u6709\u6539\u53d8\u7684\u3002\n\n\u90a3\u4e48i~j\u7684\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u548c\uff0c\u5c31\u53ef\u4ee5\u8868\u793a\u6210\u6839\u5230i\u7684\u5f02\u6216\u548c\u5f02\u6216\u4e0a\u6839\u5230j\u7684\u5f02\u6216\u548c\u3002\n\n\u90a3\u601d\u8def\u5c31\u5f88\u660e\u786e\u4e86\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u8fdb\u884c\u8d2a\u5fc3\uff0c\u5982\u679c\u8fd9\u4e00\u4f4d\u6709\u4e00\u4e2a\u4e0e\u5b83\u4e0d\u540c\u7684\uff0c\u5373\u5f02\u6216\n\u540e\u662f1\uff0c\u90a3\u6211\u4eec\u5c31\u987a\u7740\u8fd9\u6761\u8def\u5f80\u4e0b\u8d70\uff1b\u5426\u5219\u5c31\u987a\u7740\u539f\u8def\u5f80\u4e0b\u8d70\u3002\n\n\u8fd9\u6837\u8d2a\u5fc3\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f\u56e0\u4e3a\u5f53\u524d\u8fd9\u4e00\u4f4d\u7684\u6743\u503c\u6bd4\u540e\u9762\u6240\u6709\u4f4d\u6570\u52a0\u8d77\u6765\u8fd8\u8981\u9ad8\u3002\n\n\u5c31\u6bd4\u5982\u6709\u4e00\u4e2a\u6570\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f10...0\uff08n\u4e2a0\uff09\n\n\u90a3\u4e48\u5b83\u6bd401...1(n-1\u4e2a1\uff09\u8fd8\u8981\u5927\u3002\n\n\u6240\u4ee5\u6700\u9ad8\u4f4d\u51b3\u5b9a\u4e00\u5207qwq~\n\n\u7136\u540e\u4ee3\u7801\u95ea\u4eae\u767b\u573a~\n\n    #include<bits/stdc++.h>\n    using namespace std;\n    struct qwq{\n        int v;\n        int w;\n        int nxt;\n    }edge[2000001];\n    int head[2000001];\n    int cnt=-1;\n    void add(int u,int v,int w){\n        edge[++cnt].nxt=head[u];\n        edge[cnt].v=v;\n        edge[cnt].w=w;\n        head[u]=cnt;\n    }\n    int sum[2000001];\n    void dfs(int x,int fa){//\u9884\u5904\u7406\n        for(int i=head[x];~i;i=edge[i].nxt){\n            int v=edge[i].v;\n            int w=edge[i].w;\n            if(v!=fa){\n                sum[v]=sum[x]^w;\n                dfs(v,x);\n            }\n        }\n    }\n    struct trie{\n        int ch[2];\n    }t[2000001];\n    int tot;\n    void build(int val,int x){\n        for(int i=(1<<30);i;i>>=1){\n            bool c=val&i;//\u53d6\u51fa\u4e8c\u8fdb\u5236\u4e0b\u8fd9\u4e2a\u6570\u7684\u5f53\u524d\u4f4d\u7f6e\n            if(!t[x].ch[c]){\n                t[x].ch[c]=++tot;\n            }\n            x=t[x].ch[c];\n        }\n    }\n    int query(int val,int x){\n        int ans=0;\n        for(int i=(1<<30);i;i>>=1){\n            bool c=val&i;\n            if(t[x].ch[!c]){//\u5982\u679c\u8fd9\u4e00\u4f4d\u53ef\u4ee5\u8fdb\u884c\u5f02\u6216\u5c31\u6cbf\u7740\u8fd9\u4e00\u6761\u5f80\u4e0b\u8d70\n                ans+=i;\n                x=t[x].ch[!c];\n            }\n            else x=t[x].ch[c];//\u5426\u5219\u5c31\u6cbf\u7740\u53e6\u4e00\u6761\u8def\u5f80\u4e0b\u8d70\n        }\n        return ans;\n    }\n    int main(){\n        memset(head,-1,sizeof(head));\n        int n;\n        scanf(\"%d\",&n);\n        for(int i=1;i<n;++i){\n            int u,v,w;\n            scanf(\"%d%d%d\",&u,&v,&w);\n            add(u,v,w);\n            add(v,u,w);\n        }\n        dfs(1,-1);//\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u7684\u5f02\u6216\u548c\n        for(int i=1;i<=n;++i)build(sum[i],0);//\u5efa\u7acbtrie\u6570\n        int ans=0;\n        for(int i=1;i<=n;++i){\n            ans=max(ans,query(sum[i],0));//\u67e5\u8be2\uff0c\u53d6\u6700\u5927\u503c\n        }\n        printf(\"%d\\n\",ans);\n    } \n\n\u590d\u6742\u5ea6O(n)  ~~\u81ea\u5e2630\u7684\u5e38\u6570~~",
        "postTime": 1552044309,
        "uid": 108510,
        "name": "Terminus_Est",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "##### \u672c\u7bc7\u9898\u89e3\u601d\u8def\u6765\u6e90\u4e8e\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\u3002\n### \u524d\u7f6e\u77e5\u8bc6\uff1a\n1.\t\u5b57\u5178\u6811\n2.\t\u5f02\u6216\u6027\u8d28\n3.  \u6700\u8fd1\u516c\u5171\u7956\u5148\n\n\u6709\u4e86\u4ee5\u4e0a\u77e5\u8bc6\u7684\u57fa\u7840\uff0c\u6211\u4eec\u624d\u80fd\u9ad8\u6548\u5730\u89e3\u51b3\u672c\u9053\u9898\u76ee\u3002\u82e5\u5bf9\u4ee5\u4e0a\u77e5\u8bc6\u70b9\u4e0d\u719f\u6089\uff0c\u5efa\u8bae\u5148\u505a\u9898\u5de9\u56fa\uff0c\u518d\u6765\u5c1d\u8bd5\u6b64\u9898\uff0c\u4f1a\u66f4\u6709\u6536\u83b7\u3002\u4e0b\u9762\u7684\u5185\u5bb9\u5efa\u7acb\u5728**\u719f\u6089\u4ee5\u4e0a\u77e5\u8bc6\u70b9**\u7684\u57fa\u7840\u4e0a\uff0c\u4e0d\u518d\u5bf9\u4e00\u4e9b\u540d\u8bcd\u8fdb\u884c\u89e3\u91ca\u3002\n\n\u9898\u76ee\u4e2d\u8981\u6c42\u6211\u4eec\u5bfb\u627e\u4e00\u6761\u4ece\u6811\u4e0a $X$ \u5230 $Y$ \u7684\u8def\u5f84\uff0c\u4f7f\u5f97**\u4ed6\u4eec\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u6743\u5f02\u6216\u8d77\u6765\u7684\u503c\u6700\u5927**\u3002\n\n\u6574\u4e2a\u95ee\u9898\u4e0d\u597d\u76f4\u63a5\u5165\u624b,\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u5212\u5206\u4e3a\u4e24\u4e2a\u5b50\u4efb\u52a1:\n\n\n------------\n#### _A._ \u6c42\u51fa\u4e24\u4e2a\u7ed3\u70b9\u95f4\u7684**\u8fb9\u6743\u5f02\u6216\u548c**\n#### _B._ \u627e\u5230\u4e24\u4e2a\u7ed3\u70b9,\u4f7f\u4ed6\u4eec\u8def\u5f84\u4e0a\u7684\u7684**\u8fb9\u6743\u5f02\u6216\u548c\u6700\u5927**\n------------\n\n\n\n\u5982\u679c\u6211\u4eec\u719f\u6089\u5f02\u6216\u6027\u8d28\uff0c\u6211\u4eec\u81ea\u7136\u4f1a\u60f3\u5230\uff1a\n\n$ A $  $xor$ $A$ $=$ $0$\n\n\u5373\uff0c\u82e5\u4e24\u4e2a**\u76f8\u540c**\u7684\u6570\u5f02\u6216\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u503c\u4e3a0\u3002\n\u7531\u4e8e\u5f02\u6216\u8fd0\u7b97\u5177\u6709**\u4ea4\u6362\u5f8b**\u4e0e**\u7ed3\u5408\u5f8b**\u7684\u6027\u8d28\uff0c\u90a3\u4e48\uff1a\n\n\u5bf9\u4e8e $ A $ $xor$ $B$ $xor$ $A$\n\n$=$ $(A$ $xor$ $A)$ $xor$ $B$\n\n$=$ $0$ $xor$ $B$\n\n$=$ $B$\n\n\u56e0\u6b64,\u6211\u4eec\u4ee4 $LCA$ \u4ee3\u8868 $X$ \u4e0e $Y$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148,\u4ee4 $Root$ \u8868\u793a\u6574\u9897\u6811\u7684\u6839\u8282\u70b9,\u4ee4 $Sum(X,Y)$ \u8868\u793a\u4ece $X$ \u5230 $Y$ \u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u7684\u5f02\u6216\u548c,\u6709:\n\n\n\n------------\n$Sum(X,Y)$\n\n$=$ $Sum(X,LCA)$ $xor$  $Sum(Y,LCA)$ \n\n$=$ $Sum(X,LCA)$ $xor$ $Sum(Y,LCA)$ $xor$ $Sum(LCA,Root)$ $xor$ $Sum(LCA,Root)$ \n\n$=$ $Sum(X,LCA)$ $xor$ $Sum(LCA,Root)$ $xor$ $Sum(Y,LCA)$  $xor$ $Sum(LCA,Root)$ \n\n$=$ $Sum(X,Root)$ $xor$ $Sum(Y,Root)$\n\n\u56e0\u6b64,\u5bf9\u4e8e$Sum(X,Y)$,\u6211\u4eec**\u5e76\u4e0d\u9700\u8981**\u77e5\u9053\u4ed6\u4eec\u4e4b\u95f4\u7684\u8def\u5f84\u4fe1\u606f,\u6211\u4eec\u53ea\u9700\u8981\u5206\u522b\u77e5\u9053\u4ed6\u4eec\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684**\u5f02\u6216\u548c**\u5373\u53ef\u3002\u800c\u8fd9\u4e2a\u64cd\u4f5c\u662f\u53ef\u4ee5\u901a\u8fc7$dfs$ $O(n)$\u5b9e\u73b0\u7684,\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u5728\u4ee3\u7801\u4e2d\u3002\n\n\u6b64\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u89e3\u51b3\u4e86\u4e00\u4e2a\u5b50\u95ee\u9898\uff1a\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u4e24\u4e2a\u7ed3\u70b9\u95f4\u7684**\u8fb9\u6743\u5f02\u6216\u548c**\u3002\u4ee4 $Dis[X]$ \u8868\u793a\u4ece $X$ \u5230\u6839\u8282\u70b9\u7684**\u8fb9\u6743\u5f02\u6216\u548c**,\u90a3\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u627e\u51fa\u4e00\u5bf9$(X,Y)$,\n\n\u4f7f\u5f97: $Dis(X)$ $xor$ $Dis(Y)$ \u6700\u5927\u3002\n\n\u73b0\u5728\u6211\u4eec\u6765\u8ba8\u8bba\uff0c\u5982\u4f55\u627e\u5230\u6700\u5927\u503c\uff0c\u5373**\u6700\u5927\u5f02\u6216\u5bf9**\u3002\u6211\u4eec\u53ef\u4ee5\u626b\u63cf\u4e00\u904d $Dis$**\u6570\u7ec4** ,\u5bf9\u6bcf\u4e00\u4e2a $Dis[X]$ ,\u5c1d\u8bd5\u627e\u5230\u4e00\u4e2a $Dis[Y]$ ,\u4f7f $Dis[X]$ $xor$ $Dis[Y]$ \u6700\u5927\u3002\u660e\u663e\u6709\u4e00\u79cd\u6734\u7d20\u7684 $O(n^2)$ \u7684\u7b97\u6cd5,\u627e\u51fa\u6240\u6709\u7684 $(X,Y)$ , \u627e\u51fa$Dis[X]$ $xor$ $Dis[Y]$ \u7684\u6700\u5927\u503c\u3002\u4f46\u5f88\u660e\u663e\uff0c\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u5bfc\u81f4\u8d85\u65f6\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u2014\u2014**\u5b57\u5178\u6811**\u3002\u5b57\u5178\u6811\u662f\u89e3\u51b3\u5f02\u6216\u95ee\u9898\u7684\u6709\u529b\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u8fd0\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u5f88\u5feb\u5730\u89e3\u51b3\u672c\u9898\u7684\u7b2c\u4e8c\u4e2a\u5b50\u4efb\u52a1\u3002\u5047\u8bbe\u67d0\u68f5\u6811\u67094\u4e2a\u7ed3\u70b9\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684 $Dis$ \u5206\u522b\u4e3a:\n\n$Dis[1] = 0$\n\n$Dis[2] = 6$\n\n$Dis[3] = 3$\n\n$Dis[4] = 5$\n\n\u8fd9\u91cc**\u4e0d\u7ed9\u51fa**\u6811\u7684\u7ed3\u6784,\u56e0\u4e3a\u5f53\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa $Dis$ \u6570\u7ec4\u540e,\u6811\u7684\u7ed3\u6784\u5df2\u7ecf\u65e0\u5173\u7d27\u8981\u4e86,\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2a\u5b50\u4efb\u52a1\u4e0e\u5176\u6ca1\u6709\u5173\u8054\u3002\u6b64\u65f6\u6211\u4eec\u5c06\u6bcf\u4e2a $Dis[X]$ \u7684\u503c\u89c6\u4e3a\u4e00\u4e2a**\u4e8c\u8fdb\u5236\u6570**,\u4e0e\u63d2\u5165\u5b57\u7b26\u4e32\u7c7b\u4f3c,**\u5c06\u6b64\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u89c6\u4f5c\u4e00\u4e2a *01\u5b57\u7b26\u4e32* , \u7531\u4e8c\u8fdb\u5236\u7684\u9ad8\u4f4d\u5230\u4f4e\u4f4d**\u4f9d\u6b21\u63d2\u5165\uff08\u5728\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5e94\u8be5\u66f4\u9ad8\u4f4d\uff0c\u4f8b\u5982\u4ece31\u4f4d\u5f00\u59cb\u63d2\u5165\uff0c\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4ece\u7b2c2\u4f4d\u5f00\u59cb\u63d2\u5165\uff08\u7b2c0\u4f4d\u4e3a\u6700\u4f4e\u4f4d\uff09\uff09:\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5c0cd0sq.png?x-oss-process=image/resize,m_lfit,h_510,w_675)\n\n###### \u73b0\u5728,\u6211\u4eec\u5df2\u7ecf\u5728\u8fd9\u68f5\u7ebf\u6bb5\u6811\u4e2d\u63d2\u5165\u4e86 $Dis$**\u6570\u7ec4** \u7684\u503c\u3002\u5148\u629b\u51fa\u7406\u8bba\uff0c\u4ee4 $Sum$ \u8868\u793a\u5f02\u6216\u548c\u3002\u5728 $Dis[X]$ \u7684**\u4e8c\u8fdb\u5236\u8868\u793a**\u4e2d\uff0c\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u626b\u63cf\uff0c\u82e5 $Dis[X]$ \u5f53\u524d\u4f4d\u7684\u503c\u662f $1$ ,\u90a3\u4e48\u6211\u4eec\u5728\u5f53\u524d\u5b57\u5178\u6811\u7684\u5b50\u6811\u4e2d,\u4ece\u6839\u8282\u70b9\u5411\u5de6\u513f\u5b50\u8d70(\u5373\u5411\u503c\u4e3a $0$ \u7684\u5b50\u8282\u70b9\u8d70,\u5728\u6211\u7684\u56fe\u4e2d\u662f\u5de6\u513f\u5b50)\uff0c\u5e76\u66f4\u65b0 $ Sum $ (\u5177\u4f53\u5728\u4ee3\u7801\u4e2d);\u82e5\u6ca1\u6709\u5de6\u513f\u5b50,\u90a3\u6211\u4eec\u53ea\u80fd\u5411\u53f3\u8d70,\u4e0d\u66f4\u65b0 $Sum$ \u3002\u82e5\u5f53\u524d\u4f4d\u7684\u503c\u662f $0$ ,\u5219\u76f8\u53cd\uff0c\u5373\u6bcf\u6b21\u5411\u4e0e\u5f53\u524d\u4f4d\u6570\u503c\u4e0d\u540c\u7684\u8282\u70b9\u8d70\u3002\u8fd9\u6837\u7684\u8d2a\u5fc3\u7b56\u7565\u662f\u663e\u7136\u6210\u7acb\u7684\u3002\u6700\u540e\u8d70\u5230\u53f6\u8282\u70b9\u65f6\uff0c\u6b64\u65f6\u7684 $Sum$ \u5c31\u662f\u67d0\u4e2a $Dis[Y]$ \u4e0e $Dis[X]$ \u5f02\u6216\u5f97\u5230\u7684\u6700\u5927\u503c\u3002\n\n\u4e8b\u5b9e\u4e0a,\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f97\u77e5 $Dis[Y]$ \u7684\u503c\uff0c\u5728\u6700\u540e\u518d\u4ee4 $Sum$ = $Dis[X]$ $xor$ $Dis[Y]$ \uff0c\u524d\u9762\u4e0d\u66f4\u65b0 $Sum$ \u3002\u60f3\u4e00\u60f3,\u600e\u4e48\u505a?(\u63d0\u793a:\u53ea\u7528\u5bf9 $end$ \u6570\u7ec4\u8fdb\u884c\u4fee\u6539\u5373\u53ef)\u3002\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5bfb\u627e\u4e0e $Dis[3] = 3$ \u5f02\u6216\u7684\u6700\u5927\u503c(\u7b54\u6848\u4e3a $Dis[4] = 5 $)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ixbzceo2.png?x-oss-process=image/resize,m_lfit,h_510,w_675)\n\n\u81f3\u6b64,\u95ee\u9898\u5f97\u5230\u89e3\u51b3,\u5269\u4e0b\u5c31\u662f\u7801\u4ee3\u7801\u4e86\u3002\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003,\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u8fd1\u4f3c\u4e8e $O(n)$ ,\u4f46\u5e38\u6570\u8f83\u5927\uff1a\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<memory.h>\nusing namespace std;\n#define N 100010\n\nint n;\nint head[N],nxt[N<<1],ver[N<<1],val[N<<1],tot=0;\nint Dis[N];//\u6b64\u5904Dis\u542b\u4e49\u4e0e\u4e0a\u6587\u76f8\u540c\nint trie[N<<4][2],cnt=1;//\u5b57\u5178\u6811\nbool end[N<<4];//\u7ed3\u675f\u6807\u8bc6\n\ninline void add(int x,int y,int z)\n{\n\tver[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n\tval[tot]=z;\n}//\u90bb\u63a5\u8868\u5b58\u56fe\n\nvoid dfs(int x,int fa)\n{\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=ver[i],z=val[i];\n\t\tif(y == fa)\t\n\t\t\tcontinue;\t\n\t\tDis[y]=(z^Dis[x]);\n\t\tdfs(y,x);\n\t}\n\treturn ;\n}//\u6c42\u51faDis\u6570\u7ec4\n\ninline void insert(int x)\n{\n\tint p=1;\n\tfor(int i=31;i>=0;i--)\n\t{\n\t\tint num=((x>>i)&1);\n\t\tif(!trie[p][num])\t\n\t\t\ttrie[p][num]=++cnt;\n\t\tp=trie[p][num];\n\t}\n\tend[p]=1;\n}//\u5b57\u5178\u6811-\u63d2\u5165\u8282\u70b9\n\ninline int find(int num)\n{\n\tint p=1;\n\tint Sum=0;\n\tfor(int i=31;i>=0;i--)\n\t{\n\t\tint x=((num>>i)&1);\n\t\tif(trie[p][x^1])\t\n        \tSum+=(1<<i),p=trie[p][x^1];//\u66f4\u65b0Sum\n\t\telse\t\n        \tp=trie[p][x];\t\t\t   //\u4e0d\u66f4\u65b0Sum\n\t}\n\treturn Sum;\n}//\u5b57\u5178\u6811-\u6c42\u548c\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tDis[1]=0;\n\tdfs(1,0);\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tinsert(Dis[i]);\n\t\n\tint Sum=0;\n\tfor(int i=1;i<=n;i++)\n\t\tSum=max(Sum,find(Dis[i]));\n\tprintf(\"%d\",Sum);\n\treturn 0;\n}\n\n\n```\n\n\n\n\n\n\n\n\n",
        "postTime": 1573514725,
        "uid": 144810,
        "name": "zyc2003",
        "ccfLevel": 9,
        "title": "P4551 \u6700\u957f\u5f02\u6216\u8def\u5f84 \u9898\u89e3"
    },
    {
        "content": "**\u9898\u76ee\u63cf\u8ff0**\n\n\u7ed9\u5b9a\u4e00\u68f5 n \u4e2a\u70b9\u7684\u5e26\u6743\u6811\uff0c\u7ed3\u70b9\u4e0b\u6807\u4ece 1 \u5f00\u59cb\u5230 N \u3002\u5bfb\u627e\u6811\u4e2d\u627e\u4e24\u4e2a\u7ed3\u70b9\uff0c\u6c42\u6700\u957f\u7684\u5f02\u6216\u8def\u5f84\u3002\n\n\u5f02\u6216\u8def\u5f84\u6307\u7684\u662f\u6307\u4e24\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u552f\u4e00\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u6743\u7684\u5f02\u6216\u3002\n\n**\u4e2a\u4eba**\uff1a\n\n\u9996\u5148\u5f3a\u63a8\u4e00\u4e0b01\u5b57\u5178\u6811(Trie),\u8fd9\u4e2a\u4e1c\u897f\u662f\u89e3\u51b3**xor\u95ee\u9898**\u7684\u5229\u5668.\n\n\u67e5\u627e\u6700\u5927\u5f02\u6216\u503c\u7684\u65f6\u5019\u6211\u4eec\u4e00\u822c\u4ece\u6700\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u5411\u4e0b\u627e  \n\n       eg:   1000(2)=8(10)\n             0111(2)=7(10)\n\u663e\u7136\u53ea\u8981\u6211\u7684\u6700\u9ad8\u4f4d\u662f1,\u9664\u975e\u4f60\u548c\u6211\u7684\u6700\u9ad8\u4f4d\u76f8\u540c,\u8981\u4e0d\u7136\u6211\u5c31\u662f\u6bd4\u4f60\u5927.\n\n\u6839\u636e\u6570\u5b66\u4e0a\u7684\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u53ef\u77e5\n8=2^3 \uff0c7=2^3-1\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u53ef\u4ee5**\u8d2a\u5fc3\u7684\u53bb\u627e\u5f53\u524d\u4f4d^1\u7684\u8282\u70b9**\n\n01\u5b57\u5178\u6811\u7684\u5199\u6cd5\u548ctrie\u6811\u5dee\u4e0d\u591a,\u5bf9\u4e8e\u8fd9\u4e2a\u9898,\n\n \t\u8fc7\u7a0b\uff1a\n         1.\u5efa\u56fe\u8dd1\u4e00\u4e0b\u518d\u53bbdfs\u53bb\u6c42\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684xor\u503c\u3002\n         2.\u518d\u53bb\u6784\u5efa01Trie\u53bb\u5b9e\u73b0\u6211\u4eec\u7684\u8d2a\u5fc3\u5373\u53ef\n    \n\n~~\u7f51\u4e0a\u8bb2\u8fd9\u4e2a\u7684\u5f88\u591a,\u60f3\u5b66\u7684\u53ef\u4ee5\u767e\u5ea6~~\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u4ee3\u7801\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n```cpp\n#include<bits/stdc++.h>\n#define IL inline\n#define RI register int\n#define maxn 100008\nint trie[maxn*31][2],xo[maxn],ans,rt;\nint val[maxn],n,head[maxn],tot;\nstruct code{int u,v,w;}edge[maxn<<1];\nIL void read(int &x){\n\tint f=1;x=0;char s=getchar();\n\twhile(s>'9'||s<'0'){if(s=='-')f=-1;s=getchar();}\n\twhile(s<='9'&&s>='0'){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nIL void add(int x,int y,int z)\n{\n\tedge[++tot].u=head[x];\n\tedge[tot].v=y;\n\tedge[tot].w=z;\n\thead[x]=tot;\n\tedge[++tot].u=head[y];\n\tedge[tot].v=x;\n\tedge[tot].w=z;\n\thead[y]=tot;\n}\nIL void build_trie(int x,int rt)\n{\n\tfor(RI i=1<<30;i;i>>=1)\n\t{\n\t\tbool c=x&i;\n\t\tif(!trie[rt][c])trie[rt][c]=++tot;\n\t\trt=trie[rt][c];\n\t}\n}\nIL int query(int x,int rt)\n{\n\tint ans=0;\n\tfor(RI i=1<<30;i;i>>=1)\n\t{\n\t\tbool c=x&i;\n\t\tif(trie[rt][c^1])ans+=i,rt=trie[rt][c^1];\n\t\telse rt=trie[rt][c];\n\t}\n\treturn ans;\n}\nIL void dfs(int u,int fa)\n{\n\tfor(RI i=head[u];i;i=edge[i].u)\n\t{\n\t\tif(edge[i].v!=fa)\n\t\t{\n\t\t\txo[edge[i].v]=xo[u]^edge[i].w;\n\t\t\tdfs(edge[i].v,u);\n\t\t}\n\t}\n}\nint main()\n{\n\tread(n);\n\tfor(RI i=1,u,v,w;i<n;i++)read(u),read(v),read(w),add(u,v,w);\n\tdfs(1,0);\n\tfor(RI i=1;i<=n;i++)build_trie(xo[i],rt);\n\tfor(RI i=1;i<=n;i++)ans=std::max(ans,query(xo[i],rt));\n\tprintf(\"%d\",ans);\n}\n```\n",
        "postTime": 1533249011,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "\u9996\u5148\u5bf9\u4e00\u6761\u8fb9\u5f02\u62162\u6b21\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709\u5f02\u6216\u3002\n\n\u8fd9\u6837\u7684\u8bdd i -> j \u7684\u5f02\u6216\u548c\uff0c\u5c31\u662f i -> 1 \u7684\u5f02\u6216\u548c\uff0c\u518d\u5f02\u6216\u4e0a 1 -> j \u7684\u5f02\u6216\u548c\u3002\n\n\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u52301\u8def\u5f84\u7684\u5f02\u6216\u548c\uff0c\u7136\u540e\u627e\u4e24\u4e2a\uff0c\u4f7f\u5b83\u4eec\u5f02\u6216\u8d77\u6765\u6700\u5927\u3002\n\n~~\u6709\u4e2a\u667a\u969c\u89c9\u5f97\u8fd9\u662f\u7ebf\u6027\u57fa\uff0c\u7136\u540e\u4ed6\u5c31WA\u4e86~~\n\n\u5b9e\u9645\u4e0a\u53ea\u8981\u628a\u6bcf\u4e2a\u6570\u770b\u6210\u4e00\u4e2a01\u4e32\uff0c\u7528Trie\u6811\u641e\u4e00\u4e0b\u3002\n\n\u6bcf\u6b21\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8d2a\u5fc3\u8dd1\u51fa\u5f02\u6216\u6700\u5927\u503c\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n*30)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define maxn 100003\n#define LL long long\nLL ji[33]={0};\nLL dis[maxn]={0};\nvector <LL> ed[maxn];\nvector <LL> l[maxn];\nLL n,tt=1;\nLL nex[maxn*33][2]={0};\nvoid ins(LL x){\n    LL a=0,b,c;\n    for(b=30;b>=0;b--) {\n        c=(x&(1<<b))>>b;\n        if(!nex[a][c]) nex[a][c]=tt++;\n        a=nex[a][c];\n    }\n}\nLL qu(LL x) {\n    LL a=0,b,c,ans=0;\n    for(b=30;b>=0;b--) {\n        c=(x&(1<<b))>>b;\n        if(!nex[a][!c]) a=nex[a][c];\n        else {a=nex[a][!c];ans+=(1<<b);}\n    }\n    return ans;\n}\nvoid dfs(LL x,LL fa) {\n    for(LL a=0;a<(LL)ed[x].size();a++) {\n        if(ed[x][a]!=fa) {\n            dis[ed[x][a]]=(dis[x]^l[x][a]);\n            dfs(ed[x][a],x);\n        }\n    }\n}\nint main(){\n    LL a,b,c,i,j,k;\n    scanf(\"%lld\",&n);\n    for(a=1;a<n;a++) {\n        scanf(\"%lld%lld%lld\",&i,&j,&k);\n        ed[i].push_back(j);\n        ed[j].push_back(i);\n        l[i].push_back(k);\n        l[j].push_back(k);\n    }\n    dfs(1,1);\n    LL ans=0;\n    for(a=1;a<=n;a++) ins(dis[a]);\n    for(a=1;a<=n;a++) ans=max(ans,qu(dis[a]));\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1525870811,
        "uid": 24608,
        "name": "winxp_qwq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "### \u5177\u4f53\u89e3\u6cd5\uff1a\n\u8bbe D[x] \u8868 \u793a \u6839 \u8282 \u70b9 \u5230 \u7684 \u8def \u5f84 \u4e0a \u7684 \u6240 \u6709 \u8fb9 \u6743 \u7684 XOR \u503c \uff0c \u5219 \uff1a                                                             \n#### D[X] = D[father[x]   ] ^ w[x,father[x] ].\n\n\n\n\n - \u6839 \u636e \u4e0a \u5f0f \uff0c \u6211 \u4eec \u53ef \u4ee5 \u5bf9 \u6811 \u8fdb \u884c DFS \uff0c \u6c42 \u51fa \u6240\u6709 \u7684 D[x] \u3002\n\n- \u6811 \u4e0a X \u5230 Y \u7684 \u8def \u5f84 \u4e0a \u6240 \u6709 \u8fb9 \u6743 \u7684 XOR \u503c \u5c31 \u7b49 \u4e8e D[x] ^ D[y]\u3002\n\n - \u8fd9 \u662f \u56e0 \u4e3a \u6839 \u636e XOR \u8fd0 \u7b97 \u7684 \u6027 \u8d28\uff08a^a=0\uff09\uff0c \u6240 \u4ee5 X \u5230 \u6839 \u548c Y \u5230 \u6839 \u8fd9 \u4e24 \u8def \u5f84 \u91cd \u53e0 \u7684 \u90e8 \u5206 \u6070 \u597d \u62b5 \u6d88 \u6389\uff0c\n \n- \u6240 \u4ee5 \u95ee \u9898 \u5c31 \u53d8 \u6210 \u4e86 \u4ece \u8fd9 N \u4e2a \u6570 \u4e2d \u9009 \u4e24 \u4e2a \uff0c XOR \u7ed3 \u679c \u6700 \u5927 \uff0c \u6211 \u4eec \u5c31 \u53ef \u4ee5 \u7528 Trie (\u8e39) \u6811\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\u6c42 \u89e3\u3002\n\n \u540c \u6837 \uff0c \u9700 \u6ce8 \u610f \u7684 \u662f \uff1a \n \n - \u5982 \u679c \u4e8c \u8fdb \u5236 \u4e0b \u540c \u4e00 \u4f4d\u4e0d \u76f8 \u540c , \u5219 \u4e3a 1 , \u5426 \u5219 \u4e3a 0 .\n \n - \u8d2a \u5fc3 \u7684 \u60f3 \uff0c \u5bf9 \u4e8e \u4e00 \u4e2a \u6570 X \uff0c \u6211 \u4eec \u5bf9 \u4e8e D[i]^x \u6700 \u5927 \uff0c \u5219 \u6bcf \u6b21 \u5f80 x\u76f8 \u53cd \u7684 \u503c \u9009 \u3002\n \n - \u5c31 \u662f \u5982 \u679c x \u8fd9 \u4e00 \u4f4d \u662f 1 \uff0c \u6211 \u4eec \u5728  trie \u6811 \u4e0a \u5f80 0 \u8dd1 \uff0c \u53cd \u4e4b \u5f80 1 \u8dd1 \u3002 \u8fd9 \u6837 \u7684 \u624d\u662f \u6700 \u5927 \u7684 \u3002\n \n \u4e0b\u9762\u662f\u4ee3\u7801\uff08\u5176\u5b9e\u6211\u76f8\u4fe1\u5404\u4f4d\u5927\u4f6c\u4e5f\u4e0d\u9700\u8981\u4ee3\u7801\uff09\uff1a\n\n\n```\n#include<iostream>\n\nusing namespace std;\n\n#define N 100005\n\nint p,ans=0,v[N],d[N],tot,trie[32*N][2],head[N],nxt[2*N],edge[2*N],len[2*N],n,u,v1,w;\n\nvoid add(int x,int y,int z)\n{\n\tedge[++tot]=y;\n\tlen[tot]=z;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\n\nvoid dfs(int x)\n{\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=edge[i],z=len[i];\n\t\tif(v[y])  continue;\n\t\tv[y]=1;\n\t\td[y]=d[x]^z;\n\t\tdfs(y);\n\t}\n}\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tcin>>u>>v1>>w;\n\t\tadd(u,v1,w);\n\t\tadd(v1,u,w);\n\t}\n\t\n\tv[1]=1;\n\tdfs(1);\n\t\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tp=1;\n\t\tfor(int j=31;j>=0;j--)\n\t\t{\n\t\t\tint k=(d[i]>>j)&1;\n\t\t\tif(!trie[p][k])  trie[p][k]=++tot;\n\t\t\tp=trie[p][k];\n\t\t}\n\t\tp=1;\n\t\tif(i!=1)\n\t\t{\n\t\t\tw=0;\n\t\t\tfor(int j=31;j>=0;j--)\n\t\t\t{\n\t\t\t\tint k=(d[i]>>j)&1;\n\t\t\t\tif(trie[p][k^1])// \u5c3d\u91cf\u8d70\u53cd\u65b9\u5411\uff0cXOR\u503c\u5927 \n\t\t\t\t{\n\t\t\t\t\tw=(w<<1)+(k^1);\n\t\t\t\t\tp=trie[p][k^1];\n\t\t\t\t}\n\t\t\t\telse  if(trie[p][k])//\u4e0d\u8981\u5fd8\u8bb0\u52a0else \n\t\t\t\t{\n\t\t\t\t\tw=(w<<1)+k;\n\t\t\t\t\tp=trie[p][k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tans=max(ans,w^d[i]);\n\t\t}\n\t}\n\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1563278631,
        "uid": 126136,
        "name": "Plus_Ultra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5361\u4e86\u534a\u4e2a\u5c0f\u65f6\uff0c\u7ec8\u4e8e\u8fc7\u4e86\uff0c\u6765\u4e00\u53d1\u9898\u89e3\u3002\n\n~~\u6307\u9488\uff0c\u4e00\u65f6\u5199\u4e00\u65f6\u723d\uff0c\u4e00\u76f4\u5199\u4e00\u76f4\u723d~~\u3002\n\u4e0d\u8fc7\u6307\u9488\u6709\u65f6\u5019\u4f1a\u51fa\u4e00\u4e9b\u83ab\u540dRE\u6bd4\u8f83\u96be\u53d7\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u3002\n\n\u9996\u5148\uff0c\u4e24\u4e2a\u70b9\u7684dis\u5f02\u6216\u4e00\u5b9a\u662f\u6700\u77ed\u8def\u5f84\u5f02\u6216\uff0c\u56e0\u4e3aLCA\u5230\u6839\u7684\u90a3\u6bb5\u8def\u5f84\uff0c\u4e00\u5f02\u6216\u5c31\u6ca1\u4e86\u3002\u6240\u4ee5\u653e\u5fc3\u5f02\u6216\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u6709\u548c\u8fd9\u4e2a\u70b9\u76f8\u53cd\u7684\uff080\u5c31\u627e1,1\u5c31\u627e0\uff09\uff0c\u90a3\u5c31\u53bb\u76f8\u53cd\u7684\u70b9\uff0c\u7ee7\u7eed\u904d\u5386\u3002\n\n\u6700\u540e\u7ed3\u675f\u3002\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int N = 100010 , M = 30;\ninline int read()\n{\n\tint x = 0 , f = 1;\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n\treturn x * f;\n}\nint n , ans;\nint dis[N];\nstruct Edge\n{\n\tint to , dis;\n\tEdge *nxt;\n\tEdge (int to = 0,int dis = 0,Edge *nxt = NULL) : to(to) , dis(dis) , nxt(nxt) {}\n}*head[N];\nvoid dfs(int now)\n{\n\tfor(Edge *i = head[now];i;i = i -> nxt)\n\t{\n\t\tint to = i -> to;\n\t\tif(dis[to] || to == 1)\tcontinue;\n\t\tdis[to] = dis[now] ^ i -> dis;\n\t\tdfs(to);\n\t}\n}\nstruct Trie\n{\n\tstruct node\n\t{\n\t\tnode *ch[2];\n\t\tnode () {memset(ch,0,sizeof ch);}\n\t}*root;\n\tinline void insert(int x)\n\t{\n\t\tnode *p = root;\n\t\tfor(int i = M , tmp;i >= 0;i --)\n\t\t{\n\t\t\ttmp = (x >> i) & 1;\n\t\t\tif(p -> ch[tmp] == NULL) p -> ch[tmp] = new node();\n\t\t\tp = p -> ch[tmp];\n\t\t}\n\t}\n\tinline void query(int x)\n\t{\n\t\tnode *p = root; int res = 0;\n\t\tfor(int i = M , tmp;i >= 0;i --)\n\t\t{\n\t\t\ttmp = (x >> i) & 1;\n\t\t\tif(p -> ch[tmp ^ 1]) p = p -> ch[tmp ^ 1] , res |= (1 << i);\n\t\t\telse if(p -> ch[tmp]) p = p -> ch[tmp];\n\t\t\telse return;\n\t\t}\n\t\tans = max(ans,res);\n\t}\n\tTrie () {root = new node();}\n}cf;\nint main()\n{\n\tn = read();\n\tfor(int i = 1 , u , v , w;i < n;i ++)\n\t{\n\t\tu = read(); v = read(); w = read();\n\t\thead[u] = new Edge(v,w,head[u]);\n\t\thead[v] = new Edge(u,w,head[v]);\n\t}\n\tdfs(1);\n\tfor(int i = 1;i <= n;i ++)\n\t{\n\t\tcf.insert(dis[i]);\n\t\tcf.query(dis[i]);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1568468205,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "- \u9898\u76ee\u94fe\u63a5\uff1a[P4551 \u6700\u957f\u5f02\u6216\u8def\u5f84](https://www.luogu.com.cn/problem/P4551)\n\n\n\u4e0d\u4f1a Trie \u6811\u7684\u5efa\u8bae\u767e\u5ea6\u81ea\u884c\u5b66\u4e60\uff08\u975e\u5e38\u7b80\u5355\uff09\u3002\n\n\u770b\u5230\u5f02\u6216\uff0c\u6211\u4eec\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230 01Trie\u6811 \u8fd8\u6709 \u7ebf\u6027\u57fa \u3002\n\n\u8fd9\u9898\u5f88\u660e\u663e\u8981\u7528 Trie\u6811 \u6765\u505a\u3002\n\n\u5927\u81f4\u601d\u8def\uff1a\n\n> \u901a\u8fc7 `dfs` \u5bfb\u627e\u8def\u5f84\uff0c\u4e4b\u540e\u901a\u8fc7 Trie\u6811 \u6c42\u6700\u5927\u503c\u3002\n\n\u6bcf\u4e2a\u6570\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u7531 $0$ \u548c $1$ \u6784\u6210\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u4e8c\u8fdb\u5236\uff09\uff0c\u4e4b\u540e\u7528 Trie\u6811 \u505a\u6cd5\u5c31\u5f88\u663e\u7136\u4e86\u3002\n\n\u8be6\u7ec6\u8bb2\u89e3\uff1a\n\n> \u6bcf\u4e00\u4f4d\u8fdb\u884c\u8d2a\u5fc3\uff0c\u5982\u679c\u540c\u4e00\u4f4d\u6709\u4e00\u4e2a\u548c\u5b83\u4e0d\u540c\u7684\uff0c\u8fd9\u6837\u5f02\u6216\u7684\u503c\u5c31\u4f1a\u5927\uff0c\u6211\u4eec\u5c31\u987a\u7740\u8fd9\u6761\u8def\u7ebf\u5f80\u4e0b\u8d70\uff0c\u53cd\u4e4b\u6309\u539f\u8def\u8d70\u3002\n\n\u7531\u4e8e\u9ad8\u4f4d\u5927\u51b3\u5b9a\u4e00\u5207\uff0c\u6240\u4ee5\u6211\u4eec\u8d2a\u5fc3\u662f\u5bf9\u7684\u3002\n\n\u4ee3\u7801\uff08\u4e0d\u61c2\u770b\u6ce8\u91ca\uff0c\u4f46\u662f\u611f\u89c9\u5f88\u5bb9\u6613\u61c2\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010,M=N<<1,K=N<<5;\nint n;\nint h[N],e[M],w[M],ne[M],idx;\nint son[K][2],cnt[N],res,t=1;\nchar str[N];\nvoid add(int a,int b,int c){e[idx]=b,w[idx]=c,ne[idx]=h[a],h[a]=idx++;}\nvoid insert(int x)\n{\n    int p=1;\n    for(int i=30;i>=0;i--)\n    {\n        int u=((x>>i)&1);//\u53d6\u5f53\u524d\u7b2ci\u4f4d\n        if(!son[p][u]) son[p][u]=++t;\n        p=son[p][u];\n    }\n}\nvoid check(int x)\n{\n    int ans=0,p=1;//ans\u7528\u6765\u8bb0\u5f55\n    for(int i=30;i>=0;i--)\n    {\n        int u=((x>>i)&1);\n        if(son[p][u^1]) p=son[p][u^1],ans+=(1<<i);\n        //\u91cd\u70b9\uff1a\u5982\u679c\u5f53\u524d\u4f4d\u6709\u4e0d\u540c\u7684\uff0c\u5373if(son[p][u^1])\uff0c\u6211\u4eec\u5c31\u987a\u7740\u8fd9\u6761\u8def\u8d70\u3002\u5982\u679c\u6ca1\u6709\u5c31\u6267\u884c\u4e0b\u9762\u7684\uff0c\u7ee7\u7eed\u6309\u7167\u539f\u8def\u8d70\n        else p=son[p][u];//\u539f\u8def\u7ee7\u7eed\u8d70\n    \n    }\n    res=max(res,ans);//\u6700\u540e\u53d6max\n}\nvoid init(int x){insert(x);check(x);}\nvoid dfs(int x,int last)\n{\n    init(cnt[x]);\n    for(int i=h[x];~i;i=ne[i])//\u641c\u7d22\u7236\u8282\u70b9\n    {\n        int j=e[i];\n        if(j==last) continue;//\u8fd9\u91cc\u7531\u4e8e\u4e0d\u4f1a\u539f\u8def\u8fd4\u56de\uff0c\u6240\u4ee5\u662f\u641c\u7d22\u7236\u8282\u70b9\n        cnt[j]=cnt[x]^w[i];//\u8fdb\u884c\u5f02\u6216\n        dfs(j,x);\n    }\n}\nint main()\n{\n    memset(h,-1,sizeof h);//\u90bb\u63a5\u8868\u521d\u59cb\u5316\n    scanf(\"%d\",&n);\n    int a,b,c;\n    for(int i=0;i<n-1;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        add(a,b,c),add(b,a,c);\n    }\n    dfs(1,0);\n    printf(\"%d\",res);\n    return 0;\n}\n```\n\n\u63a8\u8350\u7c7b\u4f3c\u9898\u76ee\uff1a[AcWing 143 \u6700\u5927\u5f02\u6216\u548c](https://www.acwing.com/problem/content/145/)\n\n\u5176\u5b9e\u8fd9\u9898\u771f\u7684\u4e0d\u96be\uff0c\u53ea\u6709\u4f1a Trie\u6811 \u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u8d2a\u5fc3\u7b56\u7565\u4e5f\u5341\u5206\u597d\u60f3\u3002\n\n\u5982\u679c\u6709\u95ee\u9898\u6216\u8005\u6587\u7ae0\u9519\u8bef\u6b22\u8fce\u63d0\u51fa\u3002\n\n",
        "postTime": 1589116358,
        "uid": 270120,
        "name": "xhQYm",
        "ccfLevel": 0,
        "title": "Solution P4551"
    },
    {
        "content": "\u6700\u76f4\u63a5\u7684\u601d\u8def\u662f$n^2$\u679a\u4e3e\u6240\u6709\u70b9\u5bf9\u8ba1\u7b97\u5f02\u6216\u503c, LCA\u9884\u5904\u7406\u4e00\u4e0b\u53ef\u4ee5\u62ff\u6ee1\u66b4\u529b\u5206\n\n\u5728LCA\u57fa\u7840\u4e0a\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u53ea\u8981dfs\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u4e4b\u548cd[x], \u90a3\u4e48x,y\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u5f02\u6216\u548c\u5c31\u4e3ad[x]^d[y]\n\n\u8fd9\u662f\u56e0\u4e3ax^x=0, \u4e5f\u5c31\u662f\u4ed6\u4eec\u6700\u8fd1\u516c\u5171\u7956\u5148\u4ee5\u4e0a\u7684\u90e8\u5206\u5f02\u6216\u548c\u76f4\u63a5\u62b5\u6d88\u4e86\n\n\u6240\u4ee5\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5728d[1~n]\u4e2d\u4efb\u9009\u4e24\u4e2a\u6570, \u4f7f\u4ed6\u4eec\u7684\u5f02\u6216\u503c\u6700\u5927, \u6109\u5feb\u7684\u53d8\u6210\u4e86Trie\u6811\u677f\u5b50\u9898\n\n\u8be6\u7ec6\u8bb2, \u57fa\u4e8e\u8d2a\u5fc3\u601d\u60f3, \u9009\u4e00\u5bf9\u6570x,y, \u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d, \u8981\u5c3d\u91cf\u6ee1\u8db3\u6bcf\u4e00\u4f4d\u90fd\u4e0d\u540c, \u5176\u6b21\u6682\u65f6\u8003\u8651\u8ba9\u4ed6\u4eec\u76f8\u540c\n\n\u628a d[1~n] \u6784\u9020\u6210\u4e00\u9897trie, \u5c31\u80fd\u65b9\u4fbf\u5730\u628ad\u4e2d\u7684\u4e00\u4e2a\u6570\u62ff\u51fa\u6765\u4e0e\u5176\u4ed6\u6240\u6709\u4e32\u5339\u914d, \u627e\u5230\u5f02\u6216\u503c\u6700\u5927\u7684\u90a3\u4e2a\n\n\u628a1~n\u6bcf\u4e2a\u6570\u62ff\u51fa\u6765\u5339\u914d\u4e00\u6b21\u5373\u5f97\u6700\u4f18\u7b54\u6848\n\n~~\u5410\u69fd:\u8003\u573a\u4e0a\u88ab\u5feb\u8bfb\u5751\u4e86\u4e00\u628a, \u8be6\u89c1\u4ee3\u7801, \u538b\u884c\u5bb3\u4eba\u4e0d\u6d45!!!~~\n\n```\n#include<cstdio>\n#define re register\n#define in inline\nin int read()\n{\n    int s=0,b=0;\n    char ch;\n    do{\n        ch=getchar();\n        if(ch=='-') b=1;\n    }while(ch<'0' || ch>'9');\n    while(ch>='0' && ch<='9')\n    {\n        s=(s<<3)+(s<<1)+(ch^'0');\n        ch=getchar();\n    }\n    return b?-s:s;\n}\nint n,d[100001];\nstruct edge{\n    int t,w,nxt;\n}e[100001*2];\nint head[100001],cnt=0;\nin void add(int f,int t,int w)\n{\n    e[++cnt].t=t;\n    e[cnt].w=w;\n    e[cnt].nxt=head[f];\n    head[f]=cnt;\n    e[++cnt].t=f;\n    e[cnt].w=w;\n    e[cnt].nxt=head[t];\n    head[t]=cnt;\n}\nvoid dfs(int now,int fa)\n{\n    for(re int i=head[now];i;i=e[i].nxt)\n    {\n        if(e[i].t!=fa){\n            if(now!=1) d[e[i].t]=d[now]^e[i].w;\n            else d[e[i].t]=e[i].w;\n            dfs(e[i].t,now);\n        }\n    }\n}//dfs\u6c42d\u6570\u7ec4\nint trie[9999999][2],cntt=1;\nin void insert(int a)\n{\n    int p=1;\n    for(re int i=30;i>=0;--i)\n    {\n        int ch=(a>>i)&1;//\u5206\u89e3a\u7684\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\n        if(!trie[p][ch]) trie[p][ch]=++cntt;\n        p=trie[p][ch];\n    }\n}//\u5efatrie\u6811\nin int find(int a)\n{\n    int p=1,ans=0;\n    for(re int i=30;i>=0;--i)\n    {\n        int ch=!((a>>i)&1);\n        if(!trie[p][ch]){//\u5982\u679c\u6ca1\u6709\u4e0d\u540c\u7684\u4f4d\n            if(trie[p][!ch]) p=trie[p][!ch];//\u6682\u65f6\u53ea\u80fd\u5148\u5f80\u4e0b\u8d70\n            else return ans;//\u5230\u8fbe\u4e32\u5c3e\n        }\n        else p=trie[p][ch],ans+=(1<<i);//\u6709\u4e0d\u540c\u7684\u4f4d, \u8d21\u732e\u52a0\u5165\u7b54\u6848\n    }\n    return ans;\n}//\u6c42\u4e00\u4e2a\u4e32\u4e0e\u5176\u4ed6\u6240\u6709\u4e32\u7684\u6700\u5927\u5f02\u6216\u503c\nsigned main()\n{\t\n    n=read();\n    int f,t,w;\n    for(re int i=1;i<=n-1;++i)\n    {\n        //add(read(),read(),read());\n        //\u4e0a\u9762\u662f\u9519\u8bef\u5199\u6cd5!!!\u4e09\u4e2aread()\u662f\u4ece\u53f3\u81f3\u5de6\u6267\u884c\u7684, \u53c2\u6570\u987a\u5e8f\u9519\u8bef!!!\n        f=read();\n        t=read();\n        w=read();\n        add(f,t,w);\n    }\n    dfs(1,0);\n    for(re int i=1;i<=n;++i)\n        insert(d[i]);\n    int ans=0;\n    for(re int i=1;i<=n;++i)\n    {\n        int t=find(d[i]);\n        if(t>ans) ans=t;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1548838451,
        "uid": 11864,
        "name": "_xcc_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u4e2d\u5fc3\u601d\u8def\u5176\u5b9e\u5c31\u662f\u4ee5 $1$ \uff08\u5176\u5b9e\u4ee5\u54ea\u4e2a\u8282\u70b9\u4e3a\u6839\u90fd\u884c\uff09\u4e3a\u6839\uff0c\u6c42 $1$~$i$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u5f02\u6216\u4e0a $1$~$j$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u7684\u503c\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\uff1f\uff1f\u6211\u4eec\u8bbe $i,j$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e3a $k$\uff0c\u5219 $i$~$j$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u5c31\u4e3a $i$~$k$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u5f02\u6216\u4e0a $j$~$k$ \u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u7684\u503c\u3002\u800c\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u6570\u5f02\u6216\u4e0a\u5b83\u81ea\u5df1\u7b49\u4e8e $0$\uff0c\u4e00\u4e2a\u6570\u5f02\u6216 $0$ \u7684\u503c\u8fd8\u4e3a\u5b83\u81ea\u5df1\u3002\u6240\u4ee5 \u4e24\u4e2a $1$~$k$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u80af\u5b9a\u5c31\u662f $0$\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa $1$~$j$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u5f02\u6216\u4e0a $1$~$i$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u7684\u503c\u5c31 OK \u4e86\u3002\n\n\u90a3\u4e48\u76f4\u63a5\u6c42\u6240\u6709\u8282\u70b9\u5230 $1$ \u53f7\u8282\u70b9\u7684\u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u5c31\u53ef\u4ee5\u4e86\uff0cBFS \u548c DFS \u90fd\u53ef\u4ee5\u3002\n\n\u6700\u540e\u6211\u4eec\u5c31\u662f\u8981\u627e\u90a3\u4e2a\u80fd\u6c42\u51fa\u6700\u5927\u5f02\u6216\u503c\u7684 $i$ \u548c $j$ \u4e86\uff0c\u5982\u679c\u5149\u679a\u4e3e $i$ \u548c $j$ \u7684\u8bdd\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 Trie\u6811 \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c06\u6bcf\u4e2a\u8fb9\u6743\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\uff0c\u7136\u540e\u4ece\u6700\u9ad8\u4f4d\uff08\u6ce8\u610f\u8fd9\u4e2a\u6700\u9ad8\u4f4d\u662f\u4e2a\u56fa\u5b9a\u503c\u4e5f\u5c31\u662f\u7b2c $31$ \u4f4d\uff0c\u5982\u679c\u6700\u4f4e\u4f4d\u662f\u7b2c $1$ \u4f4d\u7684\u8bdd\uff09\u5f80\u6700\u4f4e\u4f4d\u6784\u9020\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u4e0d\u8d85\u8fc7 $2^{31}-1$\uff0c\u6240\u4ee5 Trie\u6811 \u7684\u6df1\u5ea6\u81ea\u7136\u5c31\u4e0d\u4f1a\u8d85\u8fc7 $31$\u3002\u90a3\u4e48\u600e\u4e48\u627e\u6700\u5927\u5f02\u6216\u503c\u5462\uff1f\uff1f\uff1f\n\n\u9996\u5148\u679a\u4e3e $i$\uff0c\u5c06 $1$~$i$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u5f02\u6216\u503c\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236 $a$\uff0c\u5e76\u5c06\u6211\u4eec\u8981\u627e\u7684\u6570\u8bbe\u4e3a $b$\u3002\u4e4b\u540e\u4ece Trie\u6811 \u7684\u6839\u8282\u70b9\u5f00\u59cb\uff08\u5e76\u5c06 $a$ \u4ece\u7b2c $31$ \u4f4d\u5f00\u59cb\u5339\u914d\uff09\uff0c\u5982\u679c\u5b83\u6709\u5b50\u8282\u70b9\u7684\u503c\u4e0e $a$ \u4e2d\u6307\u5411\u7684\u90a3\u4e00\u4f4d\u7684\u503c\u4e0d\u76f8\u7b49\uff0c\u5c31\u5c06\u7f16\u53f7\u53d8\u6210\u5b83\u90a3\u4e2a\u5b50\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u5e76\u5c06 $b$ \u6240\u6307\u5411\u7684\uff08\u6240\u6307\u5411\u7684\u4f4d\u7f6e\u4e0e $a$ \u76f8\u540c\uff09\u7684\u90a3\u4e00\u4f4d\u6807\u4e0a $1$\u3002\u7136\u540e\u63a5\u7740\u5f80\u4e0b\u5339\u914d\uff0c$a$ \u6307\u5411\u7684\u90a3\u4e00\u4f4d\u5f80\u53f3\u79fb\u4e00\u4f4d\uff08\u5176\u5b9e\u5c31\u662f\u8bf4\u660e\u6211\u4eec\u8981\u4ece Trie\u6811 \u4e2d\u627e\u4e00\u4e2a\u503c\u4f7f\u5b83\u4ece\u9ad8\u4f4d\u5f00\u59cb\u5c31\u4e0e\u4e4b\u524d\u7684\u5f02\u6216\u503c\u4e0d\u540c\uff0c\u8fd9\u6837\u5b83\u4eec\u4fe9\u7684\u5f02\u6216\u503c\u80af\u5b9a\u4e5f\u5c31\u5f88\u5927\uff0c\u5982\u679c\u9ad8\u4f4d\u76f8\u540c\u4e86\uff0c\u90a3\u4e48\u540e\u9762\u7684\u4f4e\u4f4d\u518d\u4e0d\u540c\uff0c\u5f02\u6216\u503c\u4e5f\u4e0d\u5982\u9ad8\u4f4d\u4e0d\u540c\u5927\uff09\u3002\u5982\u679c\u6ca1\u6709\u53ea\u80fd\u5c06\u7f16\u53f7\u53d8\u6210\u5b83\u552f\u4e00\u7684\u5b50\u8282\u70b9\u7684\u7f16\u53f7\u4e86\u3002\u6b64\u65f6 $b$ \u5728\u8fd9\u4e00\u4f4d\u4e2d\u53ea\u80fd\u6807\u4e0a $0$\u3002\u6700\u540e\u518d\u5c06 $b$ \u548c $a$ \u8fdb\u884c\u5f02\u6216\u5f97\u51fa\u5f02\u6216\u503c\u3002\u6700\u540e\u518d\u5c06\u6240\u6709\u6211\u4eec\u6c42\u51fa\u7684\u5f02\u6216\u503c\u53d6\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log w)$\n\n# code:\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nvector<pair<int,int> > edge[100005];\nint a[100005],trie[3100005][2],cnt,maxn=0;\nbool used[100005];\nvoid add(int x){\n    int i,u=0;\n    for(i=30;i>=0;i--){\n        bool t=(x&1<<i)>>i;\n        if(!trie[u][t]){\n            trie[u][t]=++cnt;\n        }\n        u=trie[u][t];\n    }\n}\nvoid dfs(int x){\n    int i;\n    used[x]=1;\n    add(a[x]);\n    for(i=0;i<edge[x].size();i++){\n        if(!used[edge[x][i].first]){\n            a[edge[x][i].first]=a[x]^edge[x][i].second;\n            dfs(edge[x][i].first);\n        }\n    }\n}\nint search(int x){\n    int i,u=0,ans=0;\n    for(i=30;i>=0;i--){\n        bool t=(x&1<<i)>>i^1;\n        if(trie[u][t]){\n            u=trie[u][t];\n            ans=(ans<<1)+t;\n        }\n        else{\n            u=trie[u][t^1];\n            ans=(ans<<1)+(t^1);\n        }\n    }\n    return ans;\n}\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<n;i++){\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w);\n        edge[u].push_back(make_pair(v,w));\n        edge[v].push_back(make_pair(u,w));\n    }\n    dfs(1);\n    for(i=1;i<=n;i++){\n        maxn=max(maxn,search(a[i])^a[i]);\n    }\n    printf(\"%d\",maxn);\n    return 0;\n}\n```",
        "postTime": 1588241937,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "\u9996\u5148\u6ce8\u610f\u5230 xor \u7684\u4ea4\u6362\u7ed3\u5408\u5f8b\u4ee5\u53ca $a \\operatorname{xor} a=0$\uff0c\u6211\u4eec\u628a\u6bcf\u6761\u8def\u5f84 $<a,b>$ \u7684 xor \u548c\u8f6c\u5316\u6210 \u201c(a \u5230\u6839\u7684 xor \u548c) xor (b \u5230\u6839\u7684 xor \u548c)\u201d\u3002\n\n\u73b0\u5728\u9898\u76ee\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff1a\n\n**\u4ece\u4e00\u5806\u6570\u91cc\u9762\u9009\u51fa 2 \u4e2a\uff0c\u4f7f\u5979\u4eec\u7684 xor \u548c\u6700\u5927\u3002**\n\n\u8fd9\u79cd\u4e1c\u897f\u6211\u7b2c\u4e00\u53cd\u5e94\u7ebf\u6027\u57fa ~~\u7ed3\u679c\u88ab\u67d0\u5de8\u4f6c\u7684\u9898\u89e3\u9a82\u4e86zz\u5624\u5624\u5624~~\n\n\u7136\u800c\u7ebf\u6027\u57fa\u4e0d\u884c\uff0c\u4e8e\u662f\u5979\u95ea\u4eae\u767b\u573a\u2014\u2014\n\n#### XOR Trie\n\n\u5229\u7528\u5b57\u5178\u6811\uff0c\u628a\u6bcf\u4e2a\u6570\u5f53\u6210\u4e00\u4e2a 01 \u4e32\u63d2\u5165\u5b57\u5178\u6811\u3002\uff08\u5373\u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u513f\u5b50\u5206\u522b\u4ee3\u8868\u4e0b\u4e00\u4f4d\u662f 0 \u548c 1 \u7684\u6570\uff09\n\n\u6ce8\u610f\u8981\u628a\u6bcf\u4e2a\u4e32\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\u5316\u4e3a\u76f8\u540c\u7684\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u6211\u4eec\u8d2a\u5fc3\u5730\u67e5\u627e\u54ea\u4e2a\u4e32\u548c\u5979 xor \u6700\u5927\uff0c\u8fd9\u663e\u7136\u662f\u6bcf\u4e00\u4f4d\u5c3d\u53ef\u80fd\u627e\u548c\u5979\u8be5\u4f4d\u4e0d\u4e00\u6837\u7684\u3002\uff08\u662f 0 \u5c31\u627e 1\uff0c\u662f 1 \u5c31\u627e 0\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\cdot len)$\uff0c\u5176\u4e2d len \u662f\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\n```cpp\n//coder: Feliks*GM-YB\n#include<bits/stdc++.h>\n#define fu(i,a,b) for(register int i = a, I = (b) + 1; i < I; i++)\n#define fd(i,a,b) for(register int i = a, I = (b) - 1; i > I; i--)\n#define go(x) for(int i=first[x],y=v[i];i;i=nex[i],y=v[i])\ntypedef long long ll;\nusing namespace std;\nconst int N=1e5+50;\ninline int read(){\n    int x=0;char ch=getchar();\n    while(!isdigit(ch))ch=getchar();\n    while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n    return x;\n}int n,m,num=1;\nint v[N<<1],nex[N<<1],w[N<<1],first[N],tot;\ninline void add(int x,int y,int z){\n    v[++tot]=y;w[tot]=z;\n    nex[tot]=first[x];\n    first[x]=tot;\n}struct Trie{\n\tint son[2];\n\tTrie(){son[0]=son[1]=0;}\n}t[N<<5];\nint d[N],ans;\nvoid dfs(int x,int f){\n\tgo(x){\n\t\tif(y==f)continue;\n\t\td[y]=d[x]^w[i];\n\t\tdfs(y,x);\n\t}\n}inline void ins(int s){\t//Trie\u63d2\u5165\n\tint now=1,x;\n\tfd(i,30,0){\t\t\t\t//\u90fd\u5316\u4e3a 31 \u4f4d\u4e8c\u8fdb\u5236\u6570 \n\t\tx=(s>>i)&1;\t\t\t//\u627e\u5230\u7b2c i \u4f4d \n\t\tif(t[now].son[x])now=t[now].son[x];\n\t\telse now=t[now].son[x]=(++num);\n\t}\n}inline int find(int s){\t//\u5bf9\u4e8es\u67e5\u627exor\u6700\u5927\u7684\u6570 \n\tint now=1,x,cp=0;\t\t//cp\uff1a\u627e\u7684\u6570 \n\tfd(i,30,0){\n\t\tx=(s>>i)&1;\n\t\tif(t[now].son[x^1]){//\u5c3d\u91cf\u627e\u4e0d\u4e00\u6837\u7684 \n\t\t\tnow=t[now].son[x^1];\n\t\t\tcp=(cp<<1)|(x^1);\n\t\t}else{\t\t\t\t//\u627e\u4e0d\u5230\u4e5f\u6ca1\u529e\u6cd5 \n\t\t\tnow=t[now].son[x];\n\t\t\tcp=(cp<<1)|x;\n\t\t}\n\t}return cp^s;\n}\nint main(){\n\tn=read();\n\tfu(i,1,n-1){\n\t\tint x=read(),y=read(),z=read();\n\t\tadd(x,y,z),add(y,x,z);\n\t}dfs(1,0);\n\tfu(i,1,n)ins(d[i]);\n\tfu(i,1,n)\n\t\tans=max(ans,find(d[i]));\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n#### \u591a\u5634\u4e00\u53e5\n\nxor \uff08\u6700\u503c\uff09\u95ee\u9898\u7684\u5e38\u89c1\u65b9\u6cd5\u6709 xor Trie & \u7ebf\u6027\u57fa\u3002\n\n\u4e2a\u4eba\u770b\u6cd5\uff0c\u5982\u679c\u662f\u9009\u4efb\u610f\u591a\u6570 xor\uff0c\u5e94\u8be5\u7528\u7ebf\u6027\u57fa\uff1b\u5982\u679c\u662f 2 \u4e2a\u6570\uff0c\u7edd\u5b9a xor Trie\u3002",
        "postTime": 1585635409,
        "uid": 104292,
        "name": "YellowBean_Elsa",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "$01Trie$\u53ef\u4ee5\u89e3\u51b3\u5f88\u591a\u5f02\u6216\u95ee\u9898\n\n$01Trie$\u5c31\u662f\u628a\u6570\u770b\u6210$32$\u4f4d\u7684\u4e8c\u8fdb\u5236\u4e32\u63d2\u5165\u5230$Trie$\u91cc\u9762\uff0c\u8fd9\u6837\u5b83\u5c31\u6709\u5355\u6b21$O(32)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c$O(32n)$\u7684\u7a7a\u95f4\u590d\u6742\u5ea6.~~\u5176\u5b9e\u6b63int\u662f31~~\n\n\u5f02\u6216\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28:$a\\ xor\\ b\\ xor\\ b=a$\n\n\u8fd8\u6709\u5e38\u89c1\u7684\u4ea4\u6362\u5f8b\uff0c\u7ed3\u5408\u5f8b\u4ec0\u4e48\u7684\n\n\u8fd9\u91cc\u7528$(i,j)$\u8868\u793a$i$\u5230$j$\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u548c\n\n\u4e8e\u662f$(i,j)=(i,lca(i,j))\\ xor\\ (j,lca(i,j))=((1,i)\\ xor\\ (1,lca(i,j)))\\ xor\\ ((1,j)\\ xor\\ (1,lca(i,j)))=(1,i)\\ xor\\ (1,j)$\n\n\u4e8e\u662f\u95ee\u9898\u53d8\u6210\u4e86\u7ecf\u5178\u7684[\u6700\u5927\u5f02\u6216\u6570\u5bf9](https://loj.ac/problem/10050)\n\n$dfs$\u5904\u7406\u51fa$1$\u5230\u6bcf\u4e2a\u70b9\u7684\u5f02\u6216\u548c\uff0c\u63d2\u5230$01Trie$\u4e2d\n\n\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u6bcf\u4e00\u4f4d\u8d2a\u5fc3\u5730\u9009\u53d6\u76f8\u53cd\u7684\u503c\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct Edge{int u,v,w;}e[1000000];\nint n,mm,w[1000000],ans,l[1000000],r[1000000],nxt[1000000],fst[1000000];\nstruct Trie\n{\n    int a[5000005][2],size;\n    void ins(int x)\n    {\n        int u=0;\n        for(int i=30;i>=0;i--)\n        {\n            int t=x>>i;x=x&((1<<i)-1);\n            if(!a[u][t])a[u][t]=++size;\n            u=a[u][t];\n        }\n    }\n    int find(int x)\n    {\n        int u=0,ans=0;\n        for(int i=30;i>=0;i--)\n        {\n            int t=x>>i;x=x&((1<<i)-1);\n            if(a[u][t^1])ans|=1<<i,u=a[u][t^1];\n            else u=a[u][t];\n        }\n        return ans;\n    }\n}a;//01Trie\nvoid ade(int u,int v,int w)\n{\n    Edge *z=e+(++mm);\n    z->u=u,z->v=v,z->w=w;\n    nxt[mm]=fst[u],fst[u]=mm;\n}\nvoid dfs(int u,int fa)\n{\n    a.ins(w[u]);\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=e[i].v;\n        if(v!=fa)\n        {\n            w[v]=w[u]^e[i].w;\n            dfs(v,u);\n        }\n    }\n}//dfs\u5904\u7406\nint getin()\n{\n    int x=0;char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n    return x;\n}//\u5feb\u8bfb\nint main()\n{\n    n=getin();\n    for(int i=1;i<n;i++)\n    {\n        int u=getin(),v=getin(),w=getin();\n        ade(u,v,w),ade(v,u,w);\n    }\n    dfs(1,0);\n    for(int i=1;i<=n;i++)\n        ans=max(ans,a.find(w[i]));\n    cout<<ans<<endl;\n}\n```",
        "postTime": 1545559158,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u5e26\u6743\u6811\uff0c\u7ed3\u70b9\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\u5230 $N$ \u3002\u5bfb\u627e\u6811\u4e2d\u627e\u4e24\u4e2a\u7ed3\u70b9\uff0c\u6c42\u6700\u957f\u7684\u5f02\u6216\u8def\u5f84\u3002\n\n\u5f02\u6216\u8def\u5f84\u6307\u7684\u662f\u6307\u4e24\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u552f\u4e00\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u6743\u7684\u5f02\u6216\u3002\n\n### \u89e3\u6cd5\n- \u5148\u9884\u5904\u7406\u51fa\u4ece\u6839\u7ed3\u70b9\u5230\u6240\u6709\u7ed3\u70b9\u7684\u8def\u5f84\u4e0a\u7684 $xor$ \u503c\uff0c\u663e\u7136 $d(x) = d(fa)$ ^ $val(fa \\to x)$\u3002\n\n- \u53c8\u56e0\u4e3a\u5f02\u6216\u6709\u4e00\u6027\u8d28 $a$ ^ $a=0$ \uff0c\u6240\u4ee5\u53ef\u4ee5\u53d1\u73b0\u4ece $x$ \u5230 $y$ \u7684\u5f02\u6216\u8def\u5f84\u5c31\u662f $d(x)$ ^ $d(y)$\uff0c\u56e0\u4e3a $d(1)$ ^ $d(x-1)$ \u7ecf\u8fc7\u4e24\u6b21\u8ba1\u7b97\u76f8\u62b5\u6d88\u4e86\u3002\n\n- \u7136\u540e\u95ee\u9898\u5c31\u8f6c\u5316\u4e86\u5728 $1 \\le i,j\\le n$ \u4e2d\u627e\u5230\u6700\u5927\u7684 $d(i)$ ^ $d(j)$\uff0c\u628a\u6bcf\u4e2a\u6570\u770b\u505a\u4e00\u4e2a\u4e8c\u8fdb\u523601\u4e32\uff0c\u5efa\u7acb\u4e00\u68f501\u5b57\u5178\u6811\uff0c\u5229\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\u6bcf\u6b21\u627e\u4e0e\u5f53\u524d\u4f4d\u76f8\u53cd\u7684\u7ed3\u70b9\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <algorithm>\n#define M 200070\n#define N 5000070\n\nusing namespace std;\n\nstruct Edge\n{\n\tint to,nxt,w;\n}e[M];\nint n,ans,cnt,tot;\nint d[M],head[M],nxt[N][2];\n\nvoid add(int from,int to,int val){\n\te[++cnt].to=to;\n\te[cnt].w=val;\n\te[cnt].nxt=head[from];\n\thead[from]=cnt;\n}\n\nvoid dfs(int x,int fa){\n\tfor(int i=head[x];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa) continue;\n\t\td[v]=d[x]^e[i].w;\n\t\tdfs(v,x);\n\t}\n}\n\nvoid insert(int x){\n\tint c=0,op;\n\tfor(int i=31;i>=0;--i){\n\t\top=((x>>i)&1);\n\t\tif(!nxt[c][op])\n\t\t\tnxt[c][op]=++tot;\n\t\tc=nxt[c][op];\n\t}\n}\n\nint query(int x){\n\tint c=0,sum=0,op;\n\tfor(int i=31;i>=0;--i){\n\t\top=((x>>i)&1);\n\t\tif(nxt[c][op^1])\n\t\t\tc=nxt[c][op^1],sum=sum<<1|1;\n\t\telse\n\t\t\tc=nxt[c][op],sum=sum<<1;\n\t}\n\treturn sum;\n}\n\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<n;++i){\n\t\tint u,v,w;\n\t\tcin>>u>>v>>w;\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t}\n\tdfs(1,0);\n\tinsert(d[1]);\n\tfor(int i=2;i<=n;++i){\n\t\tans=max(ans,query(d[i]));\n\t\tinsert(d[i]);\n\t}\n\tcout<<ans<<endl;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta (31*N)$\u3002",
        "postTime": 1599110682,
        "uid": 224831,
        "name": "\u725b\u86d9\u4e36\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "## tire\n\n\u501f\u9274[\u8fd9\u91cc](https://www.luogu.org/blog/sdlang/Trie-study-text)\uff1a\u65e5\u62a5\u5927\u4f6c\u5199\u7684trie\u548c\u53ef\u6301\u4e45\u5316trie\u3002\n\n\u5f02\u6216\u7684\u6027\u8d28\uff1a\u5f02\u6216\u5177\u6709**\u4ea4\u6362\u5f8b**\u548c**\u7ed3\u5408\u5f8b**\uff0c\u5e76\u4e14\u4e00\u4e2a\u6570\u5f02\u6216\u5b83\u672c\u8eab=0\n\n\u6587\u4e2d\u8def\u5f84\u7684\u5f02\u6216\u548c=\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u7684\u5f02\u6216\u548c\u3002\n\n### \u5982\u4f55\u6c42\u51fa\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u5f02\u6216\u548c\n\n\u8bbe\u8fd9\u4e24\u4e2a\u70b9\u4e3aa,b\n\n\u8fd9\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c31\u662f(\u6839\u5230a\u7684\u5f02\u6216\u548c)^(\u6839\u5230b\u7684\u5f02\u6216\u548c)\n\n\u8bc1\u660e\uff1a\u5982\u679c\u6309\u7167\u4e00\u822c\u7684\u65b9\u6cd5\u8ba1\u7b97ab\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5b83\u7b49\u4e8e(a\u5230LCA(a,b)\u7684\u5f02\u6216\u548c)^(b\u5230LCA(a,b)\u7684\u5f02\u6216\u548c)\u3002\u6309\u7167\u521a\u624d\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u6bd4\u4e00\u822c\u65b9\u6cd5\u591a\u5f02\u6216\u4e86\u4e24\u6b21\u3010\u6839\u5230LCA(a,b)\u7684\u5f02\u6216\u548c\u3011\u3002\u4e24\u6b21\u5f02\u6216\u8fd9\u4e2a\u4e1c\u897f\u76f8\u5f53\u4e8e\u6ca1\u6709\u5f02\u6216\u3002\u6240\u4ee5\u8fd9\u4e24\u79cd\u65b9\u6cd5\u5f97\u51fa\u7684\u7b54\u6848\u76f8\u540c\u3002\n\n### trie\u4e0a\u573a\n\n\u95ee\u9898:\u7ed9\u51fan\u4e2a\u6570\uff0c\u6c42\u4e24\u4e2a\u6570\u5f02\u6216\u80fd\u5f97\u5230\u7684\u6700\u5927\u503c\u3002\u8303\u56f4n<=10^5\u3002loj\u9898\u76ee\u94fe\u63a5:https://loj.ac/problem/10050\n\n\u6709\u4e00\u79cd\u8d2a\u5fc3\u7684\u505a\u6cd5\uff1a\u628a\u6bcf\u4e2a\u6570**\u9ad8\u4f4d\u8865\u8db30**\u540e\u63d2\u5165\u5230\u5b57\u5178\u6811\u4e2d\uff0c\u6c42\u4e0e\u6570i\u5f02\u6216\u80fd\u5f97\u5230\u7684\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u4ece\u4ece\u9ad8\u4f4d\u5f00\u59cb\uff0c\u4f7f**\u6bcf\u4e00\u4f4d\u5c3d\u91cf\u4e0d\u540c**\u3002\u56e0\u4e3a\u5f53\u524d\u4f4d\u4e0d\u540c\u65f6\u624d\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u3002\u8f6c\u5316\u5230\u5b57\u5178\u6811\u4e0a\u5c31\u662f\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u6bcf\u6b21\u90fd\u5c3d\u91cf\u4f7f \u5f53\u524d\u8282\u70b9 \u4e0e \u6570i\u7684\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u6570 \u4e0d\u540c\u3002\n\n\u8003\u8651\u4e24\u6570\u6bd4\u5927\u5c0f\uff0c\u5f53\u4f4d\u6570\u76f8\u540c\uff0c\u603b\u662f\u4ece\u9ad8\u4f4d\u5f00\u59cb\u6bd4\u8f83\u3002\u5982\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u6bd4\u8f83\u5927\u5c0f\uff1a10000(2)>01111(2)\u3002\u6240\u4ee5\u8fd9\u4e2a\u8d2a\u5fc3~~\u663e\u7136~~\u662f\u5bf9\u7684\u3002\n\n\u5728\u6b64\u9898\u4e2d\u8bb0\u5f55\u6839\u8282\u70b9\u5230\u6bcf\u4e2a\u8282\u70b9\u8def\u5f84\u7684\u5f02\u6216\u548c\uff08dfs\u4e00\u904d\uff09\uff0c\u7136\u540e\u628a\u5b83\u4eec\u5f53\u6210\u4e0a\u9898\u4e2d\u7684\u4e00\u4e2a\u4e2a\u3010\u6570\u3011\uff0c\u63d2\u5165\u5230\u5b57\u5178\u6811\u4e2d\u7ef4\u62a4\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define int long long\nusing namespace std;\n\nconst int N = 100005;\nstruct edge\n{\n\tint nxt, to, w;\n} e[N * 2];\nint n, cnt = 0, ans = 0, sum = 0, head[N], trie[N * 31][2], p[N];\n\nvoid add(int x, int y, int w)\n{\n\te[++cnt] = (edge) { head[x], y, w };\n\thead[x] = cnt;\n}\n\nvoid dfs(int x, int fa, int now)\n{\n\tp[x] = now;\n\tfor(int i = head[x]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].to;\n\t\tif(v == fa) continue;\n\t\tdfs(v, x, now ^ e[i].w);\n\t}\n}\n\nvoid insert(int x)\n{\n\tint root = 0;\n\tfor(int i = 30; i >= 0; i--)\n\t{\n\t\tint pos = (p[x] >> i) & 1;\n\t\tif(!trie[root][pos]) trie[root][pos] = ++sum;\n\t\troot = trie[root][pos];\n\t}\n}\n\nint find(int x)\n{\n\tint root = 0, res = 0;\n\tfor(int i = 30; i >= 0; i--)\n\t{\n\t\tint pos = (p[x] >> i) & 1;\n\t\tif(trie[root][pos ^ 1])\n\t\t\troot = trie[root][pos ^ 1], res += 1 << i;\n\t\telse root = trie[root][pos];\n\t}\n\treturn res;\n}\n\nsigned main()\n{\n\tscanf(\"%lld\", &n);\n\tfor(int a, b, c, i = 1; i < n; i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\", &a, &b, &c);\n\t\tadd(a, b, c);\n\t\tadd(b, a, c);\n\t}\n\tdfs(1, 0, 0);\n\tfor(int i = 1; i <= n; i++) insert(i);\n\tfor(int i = 1; i <= n; i++) ans = max(ans, find(i));\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1569412085,
        "uid": 138280,
        "name": "lxy__",
        "ccfLevel": 6,
        "title": "P4551 \u6700\u957f\u5f02\u6216\u8def\u5f84"
    },
    {
        "content": "\u6211\u8fd9\u91cc\u63a8\u8350\u4e00\u4e0b[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/szr666--blog/)\n\n\u5728\u535a\u5ba2\u91cc\u89c2\u770b\u66f4\u7f8e\u89c2\u54e6~\n\n[\u9898\u76ee](https://www.luogu.org/problemnew/show/P4551)\n------------\n\n\n------------\n\n\u534e\u4e3d\u7684\u5206\u5272\u7ebf\n# \u89e3\u6790\n\u6b64\u9898\u4f7f\u7528\u5f02\u6216\u5229\u5668\u2014\u201401\u5b57\u5178\u6811\n\n\u5148\u8bb2\u4e00\u4e0b01\u5b57\u5178\u6811\n\n01\u5b57\u5178\u6811\u80fd\u89e3\u51b3\u5728n\u4e2a\u6570\u4e2d\uff0c\u9009\u62e9\u4e00\u4e2a\u6570\uff0c\u4f7f\u5f97x^\u8fd9\u4e2a\u6570\u6700\u5927\uff0c\u590d\u6742\u5ea6\u4e3aO(31)\n\n\u9996\u5148int\u670932\u4f4d\uff0c\u7b2c\u4e00\u4f4d\u4e3a\u7b26\u53f7\u4f4d\uff0c\u6211\u4eec\u628a\u5176\u4f5931\u4f4d\u5f53\u4f5c\u4e00\u4e2a\u53ea\u542b0\u30011\u7684\u5b57\u7b26\u4e32\n\n\u4ece\u6700\u9ad8\u4f4d\u5230\u6700\u4f4e\u4f4d\u52a0\u5165\u5230tire\u6811\u4e2d\uff0cint tire[31n][2]\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a62n\n\n\u4e3b\u8981\u8bf4\u4e00\u4e0b\u57fa\u672ctire\u6811\u7684\u57fa\u672c\u77e5\u8bc6\uff0ctire\u6811\u672c\u8eab\u7528\u6765\u5728\u6587\u7ae0\u4e2d\u67e5\u8be2\u5355\u8bcd\n\n![](https://cdn.luogu.com.cn/upload/pic/56370.png)\n\n\u5982\u679c\u4e00\u7bc7\u6587\u7ae0\u6709a abc abc ba bac cd\u8fd9\u4e9b\u5355\u8bcd\uff0c\u5219tire\u6811\u5982\u56fe\u6240\u793a\n\n\u5176\u4e2d\u5706\u5708\u5185\u4e3a\u8282\u70b9\u7f16\u53f7\uff0c\u5de6\u4fa7\u4e3a\u6240\u5b58\u5b57\u7b26\uff0c\u53f3\u4e0b\u89d2\u6709\u661f\u661f\u5219\u8be5\u8282\u70b9\u4e3a\u4e00\u4e2a\u5355\u8bcd\u7684\u7ed3\u5c3e\n\nint tire[u][ch] \u8868\u793a\u7b2cu\u4e2a\u8282\u70b9\u662f\u5426\u6709\u5b57\u7b26\u4e3ach+'a'\n\n(\u82e5\u5b57\u7b26\u4e3as,ch=s-'a',ch\u53d6\u503c\u8303\u56f40-25)\u7684\u513f\u5b50\uff0c\n\n\u5982\u679c\u6709\uff0ctire[u][ch]=\u513f\u5b50\u7684\u7f16\u53f7\uff0c\u5426\u5219\u4e3a0\n\nint val[u] \u8868\u793a\u7b2cu\u4e2a\u8282\u70b9\u662f\u5426\u4e3a\u5355\u8bcd\u7ed3\u5c3e\uff0c\u662f\u4e3a1\uff0c\u5426\u4e3a0\n\n#### \u63d2\u5165\u64cd\u4f5c\uff1a\n\u5bf9\u4e8e\u5b57\u7b26\u4e32s,i\u4ece0\u5230len-1\u5faa\u73af\uff0c\u4ece1\u53f7\u8282\u70b9(\u6839)\u51fa\u53d1\n\n\u5982\u679c\u6ca1\u6709\u513f\u5b50\u7684\u5b57\u7b26\u4e3as[i]\uff0c\u4e3a\u65b0\u513f\u5b50\u5206\u914d\u4e00\u4e2a\u7f16\u53f7\uff0c\u7136\u540e\u8df3\u5230\u513f\u5b50\u7f16\u53f7,i++\n\n\u76f4\u5230\u5faa\u73af\u7ed3\u675f\uff0cval[\u5f53\u524d\u513f\u5b50\u7f16\u53f7]=1\uff0c\u8868\u793a\u5355\u8bcd\u7ed3\u5c3e\n\ntire\u6811\u4f18\u70b9\uff1f\u628a\u5177\u6709\u76f8\u540c\u524d\u7f00\u7684\u5b57\u7b26\u4e32\u524d\u7f00\u53ea\u5b58\u4e00\u6b21\uff0c\u67e5\u8be2\u65f6\u901f\u5ea6\u5feb\u3002\n\n\u7f3a\u70b9\uff1f\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\n\nval\u6570\u7ec4\u7684\u4f5c\u7528\uff1f\u5982\u679c\u6587\u7ae0\u6709abcd,\u67e5\u8be2abc,\u6ca1\u6709val\u6570\u7ec4\u4f1areturn 1\u3002\n\n\u6240\u4ee5val\u6570\u7ec4\u53ef\u9632\u6b62\u67e5\u8be2\u5df2\u6709\u5355\u8bcd\u524d\u7f00\u7684\u60c5\u51b5\n\n#### \u67e5\u8be2\u64cd\u4f5c:\n\u5bf9\u4e8e\u5b57\u7b26\u4e32s,i\u4ece0\u5230len-1\u5faa\u73af\uff0c\u4ece1\u53f7\u8282\u70b9(\u6839)\u51fa\u53d1\n\n\u5982\u679c\u4e0d\u5b58\u5728\u513f\u5b50\u5b57\u7b26\u4e3as[i]\uff0creturn -1\uff0c\u5426\u5219\u8df3\u5230\u513f\u5b50\u7f16\u53f7,i++\n\n\u76f4\u5230\u5faa\u73af\u7ed3\u675f\uff0cval[\u5f53\u524d\u513f\u5b50\u7f16\u53f7]=1\uff0creturn 1,\u5426\u5219return -1\n\n\u4e0e\u63d2\u5165\u64cd\u4f5c\u5927\u540c\u5c0f\u5f02\n\n\u73b0\u5728\u770b01\u5b57\u5178\u6811\u5982\u4f55\u5b9e\u73b0\n\n```cpp\nvoid insert(int x)\n{\n    int u,i;\n    u=1;\n    bool ch;\n    for(i=30;i>=0;i--)\n    {\n        ch=(x&(1<<i))>>i;\n        if(tire[u][ch]==0)\n        {\n            sz++;\n            tire[u][ch]=sz;\n        }\n        u=tire[u][ch];\n    }\n}\n```\n\nsz\u4e3a\u5f53\u524d\u8282\u70b9\u6570\n\n\u5bf9\u4e8ex,(x&(1<<i))>>i\u8868\u793a\u53d6\u51fax\u7b2ci+1\u4f4d\n\n\u6bd4\u5982x=5,i=2;1<<i=100,x=101,x&(1<<i)=100,(x&(1<<i))>>i=1;\n\n\u5176\u4ed6\u4e0e\u6b63\u5e38\u5b57\u5178\u6811\u76f8\u540c\uff0c\u67e5\u8be2\u540c\u7406\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u73b0\u5728\u7ec8\u4e8e\u53ef\u4ee5\u505a\u8fd9\u9053\u9898\u4e86\n\n#### \u6c42i\u5230j\u8def\u5f84\u5f02\u6216\u548c\n\n\u56e0\u4e3ai\u5230j\u7684\u8def\u5f84\u53ef\u7531\u6839\u8282\u70b91\u4e2d\u8f6c\uff0c\u6240\u4ee5\u53ea\u8981\u9884\u5904\u7406\u51fa1\u5230i\u7684\u8def\u5f84\u5f02\u6216\u548cxorr[i]\uff0c\u8dd1dfs\u5373\u53ef\n\n\u56e0\u4e3ax^y^z=x^(y^z),\u5f02\u6216\u5177\u6709\u7ed3\u5408\u6027\uff0c\u6240\u4ee5i\u5230j\u8def\u5f84\u5f02\u6216\u548c=xorr[i]^xorr[j]\n\n\u4e5f\u5c31\u662f\u8bf4i\u5230j\u8def\u5f84\u5f02\u6216\u548c=i\u52301\u8def\u5f84\u5f02\u6216\u548c^1\u5230j\u8def\u5f84\u5f02\u6216\u548c\n\n#### \u6c42i\u5230\u4efb\u610f\u8282\u70b9\u8def\u5f84\u5f02\u6216\u548c\u6700\u5927\u503c\n\n\u628axorr\u6570\u7ec4\u4ece1\u5230n\u52a0\u523001\u5b57\u5178\u6811\n\ni\u5230\u4efb\u610f\u8282\u70b9\u8def\u5f84\u5f02\u6216\u548c\u6700\u5927\u503c=xorr[i]^xorr[\u4f7f\u7ed3\u679c\u6700\u5927\u70b9\u7684\u7f16\u53f7]\n\n\u7531\u4e8e\u63d2\u5165\u7531\u9ad8\u4f4d\u5230\u4f4e\u4f4d\uff0c\u6240\u4ee5\u5c3d\u53ef\u80fd\u4f7f\u9ad8\u4f4d\u5f02\u6216\u51fa1\n\n```cpp\nint search(int x)\n{\n    int u,i,ans;\n    u=1;\n    ans=0;\n    bool ch;\n    for(i=30;i>=0;i--)\n    {\n        ch=(x&(1<<i))>>i;\n        if(tire[u][ch^1]!=0)\n        {\n            ans+=1<<i;\n            u=tire[u][ch^1];\n        }\n        else\n        {\n            u=tire[u][ch];\n        }\n    }\n    return ans;\n}\n```\n\u5982\u679c\u6709\u662fx\u7684\u7b2ci+1\u4f4d\u5f02\u6216\u503c\u4e3a1\u7684\u513f\u5b50\uff08ch^1\u7684\u89e3\u91ca\uff1a0^1=1,1^1=0\uff09\n\n\u90a3\u4e48\u4ece\u5b83\u5f80\u4e0b\u627e\uff0cans\u52a01<<i(\u9009\u62e9\u8fd9\u4e2a\u513f\u5b50\u7684\u4ef7\u503c)\uff0c\u5426\u5219\u76f4\u63a5\u5411\u4e0b\u627e\n\n\u8fd9\u6837\u7528O(31)\u5b9e\u73b0\u4e86\u6c42i\u5230\u4efb\u610f\u8282\u70b9\u8def\u5f84\u5f02\u6216\u548c\u6700\u5927\u503c,\n\n\u518d\u679a\u4e3ei\u4ece1\u5230n,\u518d\u53d6\u6700\u5927\u503c\u5373\u53ef\n\n\u63d2\u5165O(31n),\u67e5\u8be2O(31n),\u603b\u590d\u6742\u5ea6O(62n)\n\n\u52a0\u8bfb\u5165\u4f18\u5316\u66f4\u5feb\u54e6\n\n# \u4ee3\u7801\n\n```cpp\n#include<cstdio>\nusing namespace std;\nvoid read(int &x)\n{\n    int f;\n    char c;\n    x=0;\n    f=1;\n    c=getchar();\n    while((c<'0'||c>'9')&&c!='-')\n    {\n        c=getchar();\n    }\n    if(c=='-')\n    {\n        f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<3)+(x<<1)+(c^48);\n        c=getchar();\n    }\n    x=x*f;\n}\nint max(int x1,int x2)\n{\n    return x1>x2 ? x1 : x2;\n}\nstruct node\n{\n    int to;\n    int val;\n    int next;\t\n};\nnode e[200000];\nint head[200000];\nint xorr[200000];\nint tot,n,sz;\nint tire[6000000][2];\nvoid add(int u,int g,int v)\n{\n    tot++;\n    e[tot].val=v;\n    e[tot].to=g;\n    e[tot].next=head[u];\n    head[u]=tot;\n}\nvoid dfs(int u,int fa)\n{\n    int j;\n    for(j=head[u];j!=0;j=e[j].next)\n    {\n        if(e[j].to!=fa)\n        {\n            xorr[e[j].to]=xorr[u]^e[j].val;\n            dfs(e[j].to,u);\n        }\n    }\n}\nvoid insert(int x)\n{\n    int u,i;\n    u=1;\n    bool ch;\n    for(i=30;i>=0;i--)\n    {\n        ch=(x&(1<<i))>>i;\n        if(tire[u][ch]==0)\n        {\n            sz++;\n            tire[u][ch]=sz;\n        }\n        u=tire[u][ch];\n    }\n}\nint search(int x)\n{\n    int u,i,ans;\n    u=1;\n    ans=0;\n    bool ch;\n    for(i=30;i>=0;i--)\n    {\n        ch=(x&(1<<i))>>i;\n        if(tire[u][ch^1]!=0)\n        {\n            ans+=1<<i;\n            u=tire[u][ch^1];\n        }\n        else\n        {\n            u=tire[u][ch];\n        }\n    }\n    return ans;\n}\nint main()\n{\n    tot=0;\n    sz=1;\n    int n,i,u,g,v,ans;\n    read(n);\n    for(i=1;i<=n-1;i++)\n    {\n        read(u);\n        read(g);\n        read(v);\n        add(u,g,v);\t\n    }\n    dfs(1,0);\n    for(i=1;i<=n;i++)\n    {\n        insert(xorr[i]);\n    }\n    ans=0;\n    for(i=1;i<=n;i++)\n    {\n        ans=max(ans,search(xorr[i]));\n    }\n    printf(\"%d\",ans);\n}\n```\n",
        "postTime": 1554903612,
        "uid": 129849,
        "name": "szr666",
        "ccfLevel": 4,
        "title": "\u7701\u9009NOI-\u4e13\u9898[\u5b57\u5178\u6811][\u641c\u7d22]\uff1aP4551 \u6700\u957f\u5f02\u6216\u8def\u5f84"
    },
    {
        "content": "#### [\u9898\u76ee\u94fe\u63a5 $Click$  $Here$](https://www.luogu.org/problemnew/show/P4551)\n\n$01Trie$\u597d\u9898~~\u88f8\u9898~~\u3002\n\n\u53d6\u8282\u70b9$1$\u4e3a\u6839\u8282\u70b9\uff0c\u5411\u4e0b\u626b\u6bcf\u4e00\u4e2a\u70b9\u4ece\u6839\u8282\u70b9\u5230\u5b83\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a$sumx[u]$\u3002\n\n\u73b0\u5728\u8def\u5f84\u5f02\u6216\u548c\u6709\u4e24\u7c7b\uff1a\n\n- \u8de8\u8fc7\u6839\u8282\u70b9\uff0c\u8fd9\u79cd\u7684\u5f02\u6216\u8def\u5f84\u957f\u5ea6\u7b49\u4e8e\u4e24\u4e2a\u5b50\u8282\u70b9\u7684$sumx$\u5f02\u6216\u548c\u5f02\u6216\u8d77\u6765\u7684\u6570\u503c\u5927\u5c0f\n- \u5728\u4e00\u68f5\u5b50\u6811\u4e2d\uff0c\u8fd9\u79cd\u7684\u5f02\u6216\u8def\u5f84\u7b49\u4e8e$sumx[u]$\u5f02\u6216\u4e0a$sumx[v]$\u518d\u5f02\u6216\u6389\u4e24\u6b21$sumx[1->lca (u, v)]$\uff08\u56e0\u4e3a\u88ab\u989d\u5916\u8ba1\u7b97\uff09\uff0c\u4f9d\u7136\u7b49\u4e8e\u4e24\u4e2a\u5b50\u8282\u70b9\u7684$sumx$\u5f02\u6216\u548c\u5f02\u6216\u8d77\u6765\u7684\u6570\u503c\u5927\u5c0f\u3002\n\n\u6240\u4ee5\u95ee\u9898\u8f6c\u4e3a\u6c42\u5728$sumx$\u4e2d\uff0c\u5bf9\u6bcf\u4e2a$sumx[u]$\uff0c\u548c\u5b83\u4ea7\u751f\u6700\u5927\u5f02\u6216\u548c\u7684$sumx[v]$\u6700\u5927\u53ef\u4ee5\u5f02\u6216\u51fa\u6765\u591a\u5c11\u3002\u6211\u4eec\u628a\u6570\u5217\u6bcf\u4e2a\u503c\u63d2\u5165$01Trie$\u4e2d\uff0c\u6c42\u89e3\u65f6\u5c3d\u53ef\u80fd\u9009\u62e9\u5bf9\u5e94\u4f4d\u4e0d\u540c\u7684\u6570\u3002\u590d\u6742\u5ea6$O(N*31)$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 100010;\n\nint cnt, head[N];\n\nstruct edge {\n\tint nxt, to, w;\n}e[N << 1];\n\nvoid add_edge (int from, int to, int val) {\n\te[++cnt].nxt = head[from];\n\te[cnt].to = to;\n\te[cnt].w = val;\n\thead[from] = cnt;\n}\n\nvoid add_len (int u, int v, int w) {\n\tadd_edge (u, v, w);\n\tadd_edge (v, u, w);\n}\n\nint n, u, v, w, sumx[N];\n\nvoid get_sumx (int u, int fa) {\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (v != fa) {\n\t\t\tsumx[v] = sumx[u] ^ e[i].w;\n\t\t\tget_sumx (v, u);\n\t\t}\n\t}\n}\n\n\nint ch[N * 31][2], max_size;\n\nvoid insert (int val) {\n\tint now = 0;\n\tfor (int i = 30, to = 0; i >= 0; --i) {\n\t\tto = ((val & (1 << i)) != 0); //\u5982\u679c val \u7b2c i \u4f4d\u4e0a\u4e3a 1\n\t\tif (!ch[now][to]) {\n\t\t\tch[now][to] = ++max_size;\n\t\t}\n\t\tnow = ch[now][to];\n\t}\n}\n\nint get_ans (int val) {\n\tint now = 0, ans = val;\n\tfor (int i = 30; i >= 0; --i) {\n\t\tif (ans & (1 << i)) {\n\t\t\t//\u8fd9\u4e00\u4f4d\u4e3a1 -> \u54110\u8d70\n\t\t\tif (ch[now][0] != 0) {\n\t\t\t\tnow = ch[now][0];\n\t\t\t} else {\n\t\t\t\tval ^= (1 << i);\n\t\t\t\tnow = ch[now][1];\n\t\t\t}\n\t\t} else {\n\t\t\t//\u4e3a0 -> \u54111\u8d70\n\t\t\tif (ch[now][1] != 0) {\n\t\t\t\tval ^= (1 << i);\n\t\t\t\tnow = ch[now][1];\n\t\t\t} else {\n\t\t\t\tnow = ch[now][0];\n\t\t\t}\n\t\t}\n\t}\n\treturn max (val, ans);\n}\n\nint main () {\n\tcin >> n;\n\tfor (int i = 1; i <= n - 1; ++i) {\n\t\tcin >> u >> v >> w;\n\t\tadd_len (u, v, w);\n\t}\n\tget_sumx (1, 0);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tinsert (sumx[i]);\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tans = max (ans, get_ans (sumx[i])); //\u6c42sumx\u4e0e\u5176\u4ed6\u6570\u7684\u6700\u5927\u5f02\u6216\n\t}\n\tcout << ans << endl;\n}\n\n```\n\n",
        "postTime": 1551235204,
        "uid": 58698,
        "name": "Nativ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "[\u70b9\u51fb\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/hbxblog/p/10167136.html)\n#### \u9898\u76ee\u94fe\u63a5\n[\u6233\u6211](https://www.luogu.org/problemnew/show/P4551)\n### \u524d\u7f6e\u77e5\u8bc6\n1. \u4ec0\u4e48\u662f\u5f02\u6216\uff1f\n + \u5982\u679c\u4e8c\u8fdb\u5236\u4e0b\u540c\u4e00\u4f4d\u4e0d\u76f8\u540c,\u5219\u4e3a\u4e00,\u5426\u5219\u4e3a0\n$$eg:(3)_{10}\\ xor \\ (2)_{10}=(11)_2\\ xor\\ (10)_2=(01)_2=1 $$\n\n2. tire\u6811\n\n3. \u57fa\u672c\u4f4d\u8fd0\u7b97\n\n\u5bf9\u4e8e\u540c\u4e00\u6761\u8fb9\u5f02\u6216\u4e24\u6b21\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709\u8fdb\u884c\u5f02\u6216\uff0c\u6211\u4eec\u5c06dis[i]\u8868\u793a\u4e3a\u4ecei\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u5f02\u6216\u548c\u3002\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u6c42\u4e24\u70b9\u7684dis\u5f02\u6216\u6700\u5927\u503c\n\n\u6211\u4eec\u53ef\u4ee5\u6839\u636edis\u6784\u5efa\u4e00\u989701 tire\u6811(\u81ea\u884c\u767e\u5ea6)\n\n\u8d2a\u5fc3\u7684\u60f3\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570X\uff0c\u6211\u4eec\u5bf9\u4e8edis[i]^x\u6700\u5927\uff0c\u5219\u6bcf\u6b21\u5f80x\u76f8\u53cd\u7684\u503c\u9009\u3002  \n\u53ca\u5982\u679cx\u8fd9\u4e00\u4f4d\u662f1\uff0c\u6211\u4eec\u5728tire\u6811\u4e0a\u5f800\u8dd1\uff0c\u53cd\u4e4b\u5f801\u8dd1\u3002\u8fd9\u6837\u7684\u4e00\u5b9a\u662f\u6700\u5927\u7684\u3002\n\n\n#### code\n```cpp\n\n#include<bits/stdc++.h>\n#define int ll\n#define rg register\n#define file(x) freopen(x\".in\",\"r\",stdin);freopen(x\".out\",\"w\",stdout);\nusing namespace std;\ntypedef long long ll;\nconst int N=1000010;\nint read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9') f=(c=='-')?-1:1,c=getchar();\n    while(c>='0'&&c<='9') x=x*10+c-48,c=getchar();\n    return f*x;\n}\nint dis[N],head[N],cnt,tot=1;\nstruct node {\n    int to,next,v;\n}b[N<<1];\nvoid dfs(int x,int fa){\n    for(int i=head[x];i;i=b[i].next){\n        int v=b[i].to;\n        if(v==fa)\n            continue;\n        dis[v]=dis[x]^b[i].v;\t\t\n        dfs(v,x);\n    }\n}\nvoid add(int x,int y,int v){\n    b[++cnt].to=y;\n    b[cnt].next=head[x];\n    b[cnt].v=v;\n    head[x]=cnt;\n}\nstruct node1 {\n    int ch[2];\n}a[N<<2];\nvoid build(int x){\n    int u=1;\n    for(int i=32;i>=0;i--){\n        int c=(x>>i)&1;\n        if(!a[u].ch[c])\n            a[u].ch[c]=++tot;\n        u=a[u].ch[c];\n    }\n}\nint find(int x){\n    int u=1,ans=0;\n    for(int i=32;i>=0;i--){\n        int c=((x>>i)&1)^1;\n        if(a[u].ch[c])\n            u=a[u].ch[c],ans+=1<<i;\n        else\n            u=a[u].ch[c^1];\n    }\n    return ans;\n}\n main(){\n    int n=read(),x,y,z,ans=0;\n    for(int i=1;i<n;i++)\n        x=read(),y=read(),z=read(),add(x,y,z),add(y,x,z);\n    dfs(1,0);\n    for(int i=1;i<=n;i++)\n        build(dis[i]);\n    for(int i=1;i<=n;i++)\n        ans=max(ans,find(dis[i]));\n    printf(\"%lld\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1545617507,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "\u5f02\u6216\u662f\u5565\uff0c\u60f3\u5fc5\u5927\u5bb6\u90fd\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u53ea\u63d0\u51e0\u4e2a\u5e38\u7528\u516c\u5f0f\uff1a\n$$\na\\oplus0=a\\\\\na\\oplus a=0\n$$\n\u7531\u6b64\u53ef\u4ee5\u5f15\u7533\u51fa\uff1a\n$$\n\\begin{matrix}\\underbrace{a\\oplus a\\oplus a\\oplus\\cdots\\oplus a}\\\\2n+1\u4e2aa\\end{matrix}=a\n$$\n$$\n\\begin{matrix}\\underbrace{a\\oplus a\\oplus a\\oplus\\cdots\\oplus a}\\\\2n\u4e2aa\\end{matrix}=0\n$$\n### \u9898\u76ee\u5206\u6790\n\u9996\u5148\u6211\u4eec\u770b\u5230\uff0c\u9898\u76ee\u4e2d\u8bf4\u7684\u662f\u4efb\u610f\u4e24\u70b9\u8fb9\u6743\u5f02\u6216\u548c\uff0c\u4e00\u5171\u6709 $n^2$ \u4e2a\u4e0d\u540c\u7684\u6570\u503c\uff0c\u800c $n\\le10^5$\u3002  \n\n$n^2$ \u7684\u89c4\u6a21\u592a\u5927\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u80fd\u628a\u6570\u636e\u7684\u89c4\u6a21\u51cf\u5c0f\u3002\n\n\u6211\u4eec\u5bb9\u6613\u5f97\u5230\u4ee5\u4e0b\u516c\u5f0f\uff1a\n$$d_{u,v}=d_{u,x}\\oplus d_{x,v}(u,v,x\\in V)$$ \n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ed9 $x$ \u53d6\u7279\u6b8a\u503c\uff0c\u6bd4\u5982 $1$\uff0c\u7136\u540e\u65e0\u6839\u6811\u8f6c\u6709\u6839\u6811\uff0c\u628a $n^2$ \u7684\u6570\u636e\u89c4\u6a21\u7f29\u5c0f\u81f3 $n$\u3002\n\n\u4e0d\u96be\u8bc1\u660e\u8fd9\u4e2a\u516c\u5f0f\u7684\u6b63\u786e\u6027\uff1a  \n\u4ee5 $x$ \u4e3a\u6839\u91cd\u6784\u6811\uff0c\u5982\u679c $u,v$ \u4e0d\u5728\u4e00\u6761\u94fe\u4e0a\uff0c\u90a3\u4e48 $x$ \u5904\u4e8e\u8def\u5f84 $(u,v)$ \u4e0a\uff0c\u4ee5\u5b83\u4e3a\u4e2d\u5fc3\u5c06\u8def\u5f84\u5288\u6210\u4e24\u4efd\uff0c\u81ea\u7136\u6ca1\u95ee\u9898\u3002  \n\u5982\u679c $u,v$ \u5728\u4e00\u6761\u8def\u5f84\u4e0a\uff0c\u4e0d\u59a8\u5047\u8bbe $u$ \u662f $v$ \u7684\u7956\u5148\uff0c\u90a3\u4e48\u5728\u5f02\u6216\u8fc7\u7a0b\u4e2d\uff0c$d_{u,x}$ \u88ab\u5f02\u6216\u4e86\u4e24\u6b21\uff0c\u62b5\u6d88\u4e86\u3002\n\n\u90a3\u4e48\u601d\u8def\u5c31\u5f88\u6e05\u695a\u4e86\uff1a\u6c42\u51fa\u4ece\u6839\u8282\u70b9\u5230\u5404\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u5f02\u6216\u503c\uff0c\u7136\u540e\u4ece\u4e2d\u4efb\u53d6\u4e24\u4e2a\u5f02\u6216\uff0c\u4f7f\u5f97\u5230\u7684\u7ed3\u679c\u6700\u5927\u3002\n\n\u5982\u4f55\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u6811\u4e2d\u7684\u4e00\u79cd\uff0c01\u5b57\u5178\u6811\u3002\n\n\u628a\u5404\u4e2a\u503c\u62c9\u6210\u4e8c\u8fdb\u5236\uff0c\u7136\u540e\u4ee5\u56fa\u5b9a\u7684\u957f\u5ea6\uff08\u6b64\u5904\u7531\u4e8e $w<2^{31}$\uff0c\u53ef\u4ee5\u53d631\uff09\u5b58\u5165\u4e00\u68f5\u5b57\u5178\u6811\u4e2d\u3002\u7136\u540e\u5728\u641c\u7d22\u65f6\u6bcf\u4e00\u4f4d\u5c3d\u91cf\u53d6\u4e0d\u4e00\u6837\u7684\u4e24\u4e2a\u6570\u4f7f\u5176\u5f02\u6216\u503c\u4e3a1\uff0c\u5982\u679c\u5b9e\u5728\u4e0d\u884c\u90a3\u5c31\u53d60\u3002\u8fd9\u5176\u5b9e\u662f\u5728\u5b57\u5178\u6811\u4e0a\u505a\u8d2a\u5fc3\u3002\n\n\u5982\u4f55\u8bc1\u660e\u8fd9\u79cd\u65b9\u6cd5\u662f\u6b63\u786e\u7684\u5462\uff1f\u53ef\u4ee5\u91c7\u7528\u201c\u53cd\u8bc1\u6cd5+\u5c40\u90e8\u8c03\u6574\u201d\u3002\n\n\u5047\u8bbe\u5728\u67d0\u4e00\u4f4d\u53ef\u4ee5\u53d61\u7684\u60c5\u51b5\u4e0b\u53d6\u4e860\uff0c\u7ed3\u679c\u4f1a\u5982\u4f55\u5462\uff1f\n\n\u8bbe\u8fd9\u4e00\u4f4d\u7684\u6df1\u5ea6\u662f $d$ **\uff08\u53f6\u5b50\u7ed3\u70b9\u7684\u6df1\u5ea6\u662f $0$\uff0c\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u662f $31$\uff09**\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e00\u4f4d\u53d6\u4e860\uff0cans\u5c31\u5931\u53bb\u4e86 $2^d$\u3002\u5c31\u7b97\u63a5\u4e0b\u6765\u6bcf\u4e00\u4f4d\u90fd\u662f1\uff0c\u6700\u7ec8ans\u53ea\u83b7\u5f97\u4e86 $\\sum\\limits_{x=1}^{d-1}2^x=2^d-1$\uff0c\u8fd8\u662f\u6ca1\u6709 $2^d$ \u5927\u3002\u6240\u4ee5\u80fd\u53d61\u7684\u4e00\u5b9a\u8981\u53d61\u3002\n\n\u601d\u8def\u5c31\u662f\u8fd9\u6837\u3002\u5982\u679c\u8fd8\u662f\u6ca1\u660e\u767d\uff0c\u4e0d\u59a8\u770b\u4ee3\u7801\u5427\u3002\n### \u4ee3\u7801\n\u5b57\u5178\u6811\u4e0d\u8bf4\uff0c\u5148\u5f97\u628a\u591a\u53c9\u6811\u5efa\u8d77\u6765\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+5;\nvector <int> to[maxn],w[maxn];\nint val[maxn];\nvoid dfs(int u,int fa)\n{\n\tint size=to[u].size();\n\tfor(int i=0;i<size;++i)\n\t{\n\t\tint v=to[u][i];\n\t\tif(v==fa) continue;\n\t\tval[v]=val[u]^w[u][i];\n\t\tdfs(v,u);\n\t}\n}\ninline int read()\n{\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f; \n}\nint main()\n{\n\tint n=read();\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint u=read(),v=read(),d=read();\n\t\tto[u].push_back(v);w[u].push_back(d);\n\t\tto[v].push_back(u);w[v].push_back(d);\n\t}\n\tdfs(1,0);\n\treturn 0;\n}\n```\n\u6811\u4e0a\u7684dfs\u60f3\u5fc5\u5927\u5bb6\u90fd\u5f88\u719f\u6089\u4e86\uff0c\u8fd9\u91cc\u4e0d\u4f5c\u8fc7\u591a\u89e3\u91ca\u3002\n\n\u8981\u5efa\u4e00\u68f5\u5b57\u5178\u6811\uff0c\u6211\u4eec\u5f97\u6709\u8fd9\u51e0\u4e2a\u6570\u636e\uff1a\u5b57\u5178\u6811\u7684\u7ed3\u70b9\u6570\u76ee\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\uff08\u5206\u522b\u4ee3\u886801\uff09\uff0c\u6700\u597d\u8fd8\u5e26\u4e0a\u4ee5\u8fd9\u4e2a\u7ed3\u70b9\u4e3a\u7ed3\u5c3e\u7684\u6570\u636e\u7684\u503c\uff0c\u4e00\u4f1a\u5728\u67e5\u8be2\u7684\u65f6\u5019\u6709\u7528\u3002\n```cpp\nconst int maxnode=2e6+5;\nstruct Trie\n{\n\tint sz;\n\tint tr[maxnode][2];\n\tint mark[maxnode];\n\tTrie(){sz=0;memset(tr,-1,sizeof(tr));}\n\tvoid insert(int);\n\tint query(int); \n};\nTrie trie=Trie();\n```\n\u5b57\u5178\u6811\u6709\u591a\u5c11\u4e2a\u7ed3\u70b9\u5462\uff1f\u7406\u8bba\u4e0a\u6700\u5927\u4f1a\u662f\u4e00\u68f5\u6df1\u5ea6\u4e3a $31$ \u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u8282\u70b9\u6570\u6709 $2^{32}-1$ \u4e2a\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c$n$ \u4e2a\u6570\u636e\u6bcf\u4e2a\u81f3\u591a\u53ea\u4f1a\u82b1\u8d39 $31$ \u4e2a\u7ed3\u70b9\uff0c\u6240\u4ee5\u5e94\u8be5\u662f $3\\times10^6$\uff0c\u4e0d\u8fc7\u4e8b\u5b9e\u4e0a\u4f1a\u6bd4\u8fd9\u5c11\u7684\u591a\uff0c\u7ecf\u6211\u5b9e\u6d4b\uff0c$2\\times10^6$ \u5c31\u5df2\u7ecf\u591f\u4e86\u3002\n\n\u73b0\u5728\u6211\u4eec\u6765\u5199insert\u51fd\u6570\u3002  \n\u6211\u4eec\u4ece $30$ \u5f00\u59cb\u904d\u5386\u5230 $0$\uff0c\u5206\u522b\u5c06\u63d2\u5165\u7684\u6570 $x$ \u6309\u4f4d\u4e0e\u4e0a $2^i$ \uff08\u5373\u53d6\u51fa\u7b2c $i$ \u4f4d\uff09\uff0c\u7136\u540e\u5efa\u6811\u3002\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u7ed3\u70b9\u4e0d\u5b58\u5728\uff08\u7f16\u53f7\u4e3a $-1$\uff09\uff0c\u90a3\u4e48\u521b\u5efa\u8fd9\u4e2a\u65b0\u8282\u70b9\u5373\u53ef\u3002\u6700\u540e\u628a\u53f6\u5b50\u7ed3\u70b9\u5bf9\u5e94\u7684\u503c\u8d4b\u4e0a\u3002\n\n\u4ee3\u7801\u5f88\u597d\u7406\u89e3\uff0c\u5982\u4e0b\uff1a\n```cpp\nvoid Trie::insert(int x)\n{\n\tint u=0;\n\tfor(int i=30;i>=0;--i)\n\t{\n\t\tbool h=x&(1<<i);\n\t\tif(tr[u][h]==-1)\n\t\t\ttr[u][h]=++sz;\n\t\tu=tr[u][h];\n\t}\n\tmark[u]=x;\n}\n```\n\u5199\u5b57\u5178\u6811\u7684\u4ee3\u7801\u65f6\uff0c\u65e0\u8bba\u4f55\u65f6\u8981\u8bb0\u4f4f\uff1a$0$ \u53f7\u7ed3\u70b9\u6c38\u8fdc\u662f **\u865a\u62df** \u7684\u6839\u8282\u70b9\uff0c\u4e0d\u53ef\u4ee5\u5b58\u503c\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u65b0\u5efa\u7ed3\u70b9\u65f6\u7528++sz\u800c\u4e0d\u662fsz++\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u67e5\u8be2\u4e86\u3002\u8fd9\u91cc\u6211\u4eec\u7ed9query(x)\u7684\u5b9a\u4e49\u662f\uff1a\u627e\u51fa\u4e0e $x$ \u5f02\u6216\u540e\u6700\u5927\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u5728\u6bcf\u4e00\u4f4d\u4e0a\u505a\u8d2a\u5fc3\uff0c\u5c3d\u91cf\u627e\u4e0e $x$ \u4e0d\u540c\u7684\u503c\u3002\n\n\u5199\u6cd5\u4e0a\u4e0einsert\u662f\u6709\u4e00\u70b9\u7c7b\u4f3c\u7684\uff0c\u4e5f\u975e\u5e38\u597d\u7406\u89e3\uff1a\n```cpp\nint Trie::query(int x)\n{\n\tint u=0;\n\tfor(int i=30;i>=0;--i)\n\t{\n\t\tbool h=x&(1<<i);\n\t\tif(tr[u][!h]!=-1)\n\t\t\tu=tr[u][!h];\n\t\telse \n\t\t\tu=tr[u][h];\n\t}\n\treturn mark[u]^x;\n}\n```\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6700\u540e\u7684\u8fd4\u56de\u503c\u76f4\u63a5\u5f02\u6216\u4e0a\u4e86 $x$\u3002\n\n\u90a3\u4e48\u4e3b\u51fd\u6570\u6dfb\u52a0\u8fd9\u51e0\u884c\u4ee3\u7801\u5373\u53ef\uff1a\n```cpp\n\tfor(int i=1;i<=n;++i)\n\t\ttrie.insert(val[i]);\n\tint ans=-1;\n\tfor(int i=1;i<=n;++i)\n\t\tans=max(ans,trie.query(val[i]));\n\tprintf(\"%d\\n\",ans);\n```\n\u5168\u90e8\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+5;\nconst int maxnode=2e6+5;\nvector <int> to[maxn],w[maxn];\nint val[maxn];\nstruct Trie\n{\n\tint sz;\n\tint tr[maxnode][2];\n\tint mark[maxnode];\n\tTrie(){sz=0;memset(tr,-1,sizeof(tr));}\n\tvoid insert(int);\n\tint query(int); \n};\nTrie trie=Trie();\nvoid dfs(int u,int fa)\n{\n\tint size=to[u].size();\n\tfor(int i=0;i<size;++i)\n\t{\n\t\tint v=to[u][i];\n\t\tif(v==fa) continue;\n\t\tval[v]=val[u]^w[u][i];\n\t\tdfs(v,u);\n\t}\n}\nvoid Trie::insert(int x)\n{\n\tint u=0;\n\tfor(int i=30;i>=0;--i)\n\t{\n\t\tbool h=x&(1<<i);\n\t\tif(tr[u][h]==-1)\n\t\t\ttr[u][h]=++sz;\n\t\tu=tr[u][h];\n\t}\n\tmark[u]=x;\n}\nint Trie::query(int x)\n{\n\tint u=0;\n\tfor(int i=30;i>=0;--i)\n\t{\n\t\tbool h=x&(1<<i);\n\t\tif(tr[u][!h]!=-1)\n\t\t\tu=tr[u][!h];\n\t\telse \n\t\t\tu=tr[u][h];\n\t}\n\treturn mark[u]^x;\n}\ninline int read()\n{\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f; \n}\nint main()\n{\n\tint n=read();\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint u=read(),v=read(),d=read();\n\t\tto[u].push_back(v);w[u].push_back(d);\n\t\tto[v].push_back(u);w[v].push_back(d);\n\t}\n\tdfs(1,0);\n\tfor(int i=1;i<=n;++i)\n\t\ttrie.insert(val[i]);\n\tint ans=-1;\n\tfor(int i=1;i<=n;++i)\n\t\tans=max(ans,trie.query(val[i]));\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\u603b\u590d\u6742\u5ea6\u770b\u4f3c\u662f $O(n\\log w)$\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u53d6\u4e86\u5b9a\u503c $31$\n\uff0c\u6240\u4ee5\u4e5f\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5927\u5e38\u6570\u7684 $O(n)$\uff0c\u4f46\u5df2\u7ecf\u53ef\u4ee5AC\u672c\u9898\u3002\n$$\\texttt{The End.}$$",
        "postTime": 1596983071,
        "uid": 270791,
        "name": "WanderingTrader",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u773c\u770b\u5230\u9898\u76ee\u4ee5\u4e3a\u662fTrie\u6811+\u70b9\u5206\u6cbb\n\n\u5f53\u7136\u8fd9\u79cd\u505a\u6cd5\u56fa\u7136\u53ef\u4ee5\uff08\u8fd9\u91cc\u4e0d\u7ed9\u51fa\u4ee3\u7801\uff0c\u592a\u9ebb\u70e6\u4e86\uff09\n\n\u6bcf\u6b21\u5206\u6cbb\u65f6\u5c06Trie\u6811\u6e05\u7a7a\uff08\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u5c06\u6839\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u8bbe\u4e3a\u7a7a\uff09\n\n\u4f46\u662f\u67e5\u4e00\u67e5\u5f02\u6216\u7684\u6027\u8d28\u53ef\u4ee5\u77e5\u9053\uff0c\u4e24\u6b21\u5f02\u6216\u540c\u4e00\u4e2a\u6570\u5f97\u5230\u7684\u7b54\u6848\u5c31\u662f\u539f\u6765\u7684\u6570\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u70b9\u5206\u6cbb\uff0c\u56e0\u4e3a\u5373\u4f7f\u4e24\u4e2a\u70b9\u7684\u8def\u5f84\u4e0d\u7ecf\u8fc7\u6839\u8282\u70b9\n\n\u4f60\u53ea\u7528\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u5f02\u6216\u8def\u5f84\u503c\uff0c\u6700\u540e\u5c06\u4ed6\u4eec\u5f02\u6216\u5c31\u6709\u4e86\u6700\u5927\u503c\n\n\u6240\u4ee5\u5e76\u4e0d\u7528\u8003\u8651\u8def\u5f84\u662f\u5426\u7ecf\u8fc7\u6839\u8282\u70b9\uff0c\u76f4\u63a5\u7b97\u5c31\u597d\u4e86\n\n\u7136\u540e\u5efa\u7acbTrie\u6811\uff0c\u8d2a\u5fc3\u4e00\u6b65\u6b65\u53bb\u627e\u76f8\u53cd\u7684\u4f4d\u7f6e\u5c31\u597d\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<queue>\n#define M 2001000\n#define inf 0x3f3f3f3f \n#define LL long long\nusing namespace std;\nLL n,head[M],cnt,cnte=1;\nLL ans,dist[M];\nstruct edge{\n\tLL to,next,val;\n}e[M];\nstruct trie{\n\tLL ch[2];\n}t[M];\nvoid add(LL a,LL b,LL c)\n{\n\te[++cnt].to=b;\n\te[cnt].next=head[a];\n\te[cnt].val=c;\n\thead[a]=cnt;\n}\ninline void read(LL &x)\n{\n\tLL f=1;x=0;char s=getchar();\n\twhile (!isdigit(s)){\n\t\tif(s=='-')f=-1;\n\t\ts=getchar();\n\t}\n\twhile (isdigit(s))\n\t{\n\t\tx=(x<<1)+(x<<3)+(s^48);\n\t\ts=getchar();\n\t}\n\tx*=f;\n}\nvoid insert(LL u)\n{\n\tLL now=1;\n\tfor (int i=1<<30;i;i>>=1)\n\t{\n\t\tint rt=(u&i?1:0);\n\t\tif (!t[now].ch[rt])\n\t\t{\n\t\t\tt[now].ch[rt]=++cnte;\n\t\t}\n\t\tnow=t[now].ch[rt];\n\t}\n}\nLL getmax(LL u)\n{\n\tLL now=1,maxx=0;\n\tfor (int i=1<<30;i;i>>=1)\n\t{\n\t\tint rt=(u&i?1:0);\n\t\tif (t[now].ch[!rt])\n\t\t{\n\t\t\tmaxx+=i;\n\t\t\tnow=t[now].ch[!rt];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnow=t[now].ch[rt];\n\t\t}\n\t}\n\treturn maxx;\n}\nvoid getdis(LL u,LL fa)\n{\n\tfor (int i=head[u];i;i=e[i].next)\n\t{\n\t\tif (e[i].to==fa)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tdist[e[i].to]=dist[u]^e[i].val;\n\t\tinsert(dist[e[i].to]);\n\t\tgetdis(e[i].to,u);\n\t}\n}\nint main()\n{\n\tread(n);\n\tfor (int i=1;i<=n-1;i++)\n\t{\n\t\tLL x,y,c;\n\t\tread(x);read(y);read(c);\n\t\tadd(x,y,c);\n\t\tadd(y,x,c);\n\t}\n\tgetdis(1,0);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tans=max(ans,getmax(dist[i]));\n\t}\n\tprintf(\"%lld\",ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1567404806,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n$0/1\\ Trie$ \u7684\u6a21\u677f\u9898\uff0c\u6570\u7ec4\u5f00\u5c0f\u4e86\u600e\u4e48\u8bf4\uff1f\uff1f\uff1f\n\n# \u9898\u9762\n\n[\u9898\u9762](https://www.luogu.org/problem/P4551)\n\n# Solution\n\n\u8981\u6c42\u6811\u4e0a\u8def\u5f84\u7684\u95ee\u9898\u6211\u4eec\u6709\u4e00\u4e2a\u5957\u8def\u7684\u505a\u6cd5\u3002\n\n\u6bcf\u4e00\u4e2a\u70b9 $i$ \u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u6743\u503c\u7684\u5f02\u6216\u548c\u6211\u4eec\u8ba1\u4f5c $dis_i$\n\n$u$ \u5230 $v$ \u7684\u8def\u5f84\u6743\u503c\u7684\u5f02\u6216\u548c\u6211\u4eec\u53ef\u4ee5\u62c6\u5206\u4e00\u4e0b\uff0c\u5373 $dis_{u,v}=dis_u\\ xor\\ dis_v$ \u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u627e\u51fa\u4e24\u4e2a\u70b9 $u,v$ \uff0c\u4f7f\u5f97 $dis_u\\ xor\\ dis_v$ \u6700\u5927\u3002\n\n\u8fdb\u4e00\u6b65\u8f6c\u5316\u3002\n\n\u5bf9\u4e8e\u5f02\u6216\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\uff0c\u6c42\u6bcf\u4e00\u4f4d\u7684\u5f02\u6216\u3002\n\n\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u6211\u4eec\u4ece\u9ad8\u5230\u4f4e\u6bcf\u4e00\u4f4d\u4f9d\u6b21\u6765\u770b\u3002\n\n\u56e0\u4e3a\u8981\u6700\u5927\uff0c\u6240\u4ee5\u7528\u6765\u5339\u914d\u7684\u90a3\u4e2a\u6570\u5728\u5f53\u524d\u4f4d\u4e0a\u8981\u5c3d\u91cf\u9009\u548c\u5df2\u77e5\u6570\u4e0d\u540c\u7684\u3002\n\n\u5efa\u7acb\u4e00\u9897 $0/1\\ Trie$ \u6811\uff0c\u5e76\u5c06\u6240\u6709\u5df2\u77e5\u7684 $dis$ \u5168\u90e8\u63d2\u5165\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u67e5\u8be2\uff0c\u6309\u7167\u4e4b\u524d\u8bf4\u7684\u8d2a\u5fc3\u7684\u60f3\u6cd5\u6765\u5411\u4e0b\u68c0\u7d22\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u6c42\u51fa\u4e00\u4e2a\u6700\u5927\uff0c\u6700\u540e\u518d\u53d6\u4e00\u4e2a $\\max$ \u5373\u53ef\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il print(T x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 1e5+5;\nint n,u,v,d,head[MAXN],num_edge,dis[MAXN],Trie[MAXN*32][2],cnt,ans;\nstruct Edge{\n\tint next,to,dis;\n\tEdge(){}\n\tEdge(int next,int to,int dis):next(next),to(to),dis(dis){}\n}edge[MAXN<<1];\nil add_edge(int u,int v,int dis){\n\tedge[++num_edge]=Edge(head[u],v,dis),head[u]=num_edge;\n\tedge[++num_edge]=Edge(head[v],u,dis),head[v]=num_edge;\n}\nil DFS(int u,int fa){\n\tfor(ri i=head[u];i;i=edge[i].next){\n\t\tif(edge[i].to==fa) continue;\n\t\tdis[edge[i].to]=dis[u]^edge[i].dis,DFS(edge[i].to,u);\n\t}\n}\nil build_tree(int val,int rt){\n\tfor(ri i=(1<<30);i;i>>=1){\n\t\tri c=(val&i?1:0);\n\t\tif(!Trie[rt][c]) Trie[rt][c]=++cnt;\n\t\trt=Trie[rt][c];\n\t}\n}\nit query(int val,int rt){\n\tri res=0;\n\tfor(ri i=(1<<30);i;i>>=1){\n\t\tri c=(val&i?1:0);\n\t\tif(Trie[rt][!c]) res+=i,rt=Trie[rt][!c];\n\t\telse rt=Trie[rt][c];\n\t}\n\treturn res;\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n);\n\tfor(ri i=1;i<n;++i) read(u),read(v),read(d),add_edge(u,v,d);\n\tDFS(1,0);\n\tfor(ri i=1;i<=n;++i) build_tree(dis[i],0);\n\tfor(ri i=1;i<=n;++i){\n\t\tri tmp=query(dis[i],0);\n\t\tans=ans>tmp?ans:tmp;\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u5bf9\u4e8e\u6811\u4e0a\u8def\u5f84\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u62c6\u6210\u4e0e $LCA$ \u6709\u5173\u7684\u5f0f\u5b50\u3002\n\n\u5bf9\u4e8e\u5f02\u6216\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u6570\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\uff0c\u7136\u540e\u6bcf\u4e00\u4f4d\u4f9d\u6b21\u6c42\u89e3\u3002",
        "postTime": 1567320986,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P4551 \u6700\u957f\u5f02\u6216\u8def\u5f84 \u9898\u89e3"
    },
    {
        "content": "[*\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c*](https://www.cnblogs.com/Lemir3/p/11174480.html#autoid-1-1-0)\n\n[*\u9898\u9762*](https://www.luogu.org/problemnew/show/P4551)\n\n\u8fd9\u4e48\u591aOJ\u90fd\u6709\u8fd9\u9053\u9898,\u8bf4\u660e\u8fd9\u662f\u4e00\u9053\u7ecf\u5178\u9898\u547c.\n\n##\u9898\u76ee\u5206\u6790\n\n\u4e00\u68f5\u5e26\u6743\u6811,\u6c42\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u95f4\u6700\u957f\u7684\u5f02\u6216\u8def\u5f84.\n\n\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb,\u4ece$LCA$\u7b97\u6cd5\u4e2d\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\u53ef\u4ee5\u8fd9\u6837\u6c42:\n\n>$dis_{ij}$=$depth_i$+$depth_j$-$2$\\*$depth_{LCA_{ij}}$\n\n\u4ec0\u4e48\u662f\u5f02\u6216\u5462,\u7b80\u5355\u5730\u8bf4,\u4e24\u6570\u76f8\u540c\u5219\u4e3a0,\u4e0d\u540c\u5219\u4e3a1.\n\n\u6240\u4ee5\u8bf4\u6709\u5982\u4e0b\u6027\u8d28:\n\n>$a$ $xor$ $a$=$0$\n\n\u8fd9\u6761\u6027\u8d28\u5728\u8fd9\u9053\u9898\u91cc\u5c24\u5176\u91cd\u8981.\n\n\u518d\u8054\u60f3\u5230\u4e0a\u9762\u7684\u6811\u4e0a\u4e24\u70b9\u8ddd\u79bb\u516c\u5f0f,\u540c\u5fd7\u4eec\u53ef\u4ee5\u5f97\u51fa\u6811\u4e0a\u4e24\u70b9\u95f4\u7684\u5f02\u6216\u503c\u7684\u6c42\u6cd5,\u5982\u4e0b\u56fe:\n\n![\u914d\u56fe1.png](https://i.loli.net/2019/07/12/5d27e67b7397e79066.png)\n\n\u7ea2\u4e24\u4e2a\u7ea2\u8272\u7ed3\u70b9\u7684LCA\u4e3a\u84dd\u8272\u7ed3\u70b9,\u5b83\u4eec\u4e4b\u95f4\u7684\u5f02\u6216\u503c\u4e5f\u5c31\u662f\u9ec4\u8272\u7684\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u7684\u5f02\u6216\u503c.\n\n\u518d\u7ed3\u5408\u4e0a\u9762\u7684\u6811\u4e0a\u4e24\u70b9\u8ddd\u79bb\u516c\u5f0f,\u6211\u4eec\u73b0\u5728\u9700\u8981\u505a\u7684\u662f\u6d88\u53bb\u84dd\u8272\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u5f02\u6216\u503c.\n\n\u6839\u636e\u4e0a\u9762\u8bb2\u5230\u7684\u5f02\u6216\u7684\u6027\u8d28,\u4e24\u4e2a\u76f8\u7b49\u7684\u6570\u7684\u5f02\u6216\u503c\u7b49\u4e8e0,\u6240\u4ee5\u8bf4\u628a\u4e24\u4e2a\u7ea2\u8272\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u5f02\u6216\u503c\u5f02\u6216\u8d77\u6765,\u5c31\u53ef\u4ee5\u5f97\u5230\u9ec4\u8272\u8def\u5f84\u4e0a\u7684\u5f02\u6216\u503c.\u5982\u4e0b\u56fe:\n\n![\u914d\u56fe2.png](https://i.loli.net/2019/07/12/5d27e8848809458766.png)\n\n\u53ef\u4ee5\u770b\u5230,\u6839\u8282\u70b9\u5230\u84dd\u8272\u7ed3\u70b9\u7684\u5f02\u6216\u503c\u88ab\u8ba1\u7b97\u4e86\u4e24\u6b21,\u4e8e\u662f\u5c31\u88ab\u6d88\u4e3a\u4e86$0$,\u5bf9\u4e4b\u540e\u7684\u5f02\u6216\u8fd0\u7b97\u6ca1\u6709\u5f71\u54cd.\n\n\u6240\u4ee5\u8bf4,\u8fd9\u9053\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6c42\u51fa\u6811\u4e0a\u4efb\u610f\u4e00\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u5f02\u6216\u503c,\u518d\u6c42\u51fa\u4efb\u610f\u4e24\u4e2a\u5f02\u6216\u503c\u4e2d\u7684\u6700\u5927\u503c.\n\n\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97,\u6211\u4eec\u628a\u8fb9\u6743\u62c6\u6210\u4e8c\u8fdb\u5236\u7684\u6570.\u8fd9\u6837\u7684\u8bdd\u6839\u636e\u5f02\u6216\u7684\u8fd0\u7b97\u6cd5\u5219,\u4e24\u4e2a\u6570\u4e0d\u4e00\u6837\u5c31\u4e3a$1$,\u4e00\u6837\u5c31\u4e3a$0$,\u6211\u4eec\u5c3d\u91cf\u9009\u62e9\u4e0d\u4e00\u6837\u7684\u6570.\u4e3a\u4e86\u6ee1\u8db3\u6700\u5927\u503c,\u6211\u4eec\u4ece\u9ad8\u4f4d\u5f00\u59cb.\n\n\u6734\u7d20\u7684\u601d\u60f3\u5c31\u662f\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u7ed3\u70b9\u4e86.\n\n\u518d\u4ed4\u7ec6\u60f3\u4e00\u60f3,\u53d1\u73b0\u8fd9\u65f6\u5019\u7684\u672c\u8d28\u65e0\u975e\u5c31\u662f\u8981\u5728\u4e00\u5806\u4e8c\u8fdb\u5236\u6570\u91cc\u627e\u51fa\u4e0e\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6570\u5c3d\u91cf\u6bcf\u4e00\u4f4d\u90fd\u4e0d\u76f8\u7b49\u7684\u6570\u4e2d\u6700\u957f\u7684\u6570.\n\n\u6211\u4eec\u628a\u4e0d\u540c\u7684\u4f4d\u6570\u89c6\u4e3a\u4e24\u4e2a\u6570\u7684\u524d\u7f00,\u7136\u540e\u5c31\u53ef\u4ee5\u60f3\u5230\u7528Trie\u5b9e\u73b0\u627e\u524d\u7f00\u4e86.\n\n\u540c\u5fd7\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u5f02\u6216\u503c\u5b58\u5728Trie\u91cc,\u4e0d\u8db331\u4f4d\u7684\u75280\u8865\u4f4d.\n\n\u56e0\u4e3a\u9ad8\u4f4d\u7684\u6570\u4e00\u5b9a\u6bd4\u4f4e\u4f4d\u5927,\u540c\u5fd7\u4eec\u6bcf\u6b21\u90fd\u5c3d\u91cf\u9009\u62e9\u4e0e\u539f\u4e32\u4e0d\u540c\u7684\u9ad8\u4f4d,\u6ee1\u8db3\u8d2a\u5fc3\u7b56\u7565.\n\n##\u4ee3\u7801\n\n```cpp\n\n#include \"cstdio\"\n#include \"algorithm\"\n#include \"cstring\"\n#include \"iostream\"\n\n#define ll long long\n#define debug(x) printf(\"debug:%lld\\n\",x)\n\nusing namespace std;\n\nstruct edge\n{\n    ll to,val,next;\n}e[10000010];\n\nll n,g,tot=1,ans,size;\nll trie[1000010][2],TwoBit[33],head[1000010],xor_[1000010];\nbool flag[10000010];\n\ninline void EdgeAdd(ll,ll,ll);\ninline void insert();\ninline ll search();\ninline void dfs(ll);\n\nsigned main(void)\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%lld\",&n);\n    for(ll _=1;_<=n-1;_++)\n    {\n        ll a,b,v;\n        scanf(\"%lld%lld%lld\",&a,&b,&v);\n        EdgeAdd(a,b,v);\n        EdgeAdd(b,a,v);\n    }\n    dfs(1);\n    for(ll _=1;_<=n;_++)\n    {\n        memset(TwoBit,0,sizeof(TwoBit));\n        g=-1;\n        ll v=xor_[_];\n        while(v)//\u62c6\u4e8c\u8fdb\u5236\n        {\n            TwoBit[++g]=v&1;\n            v>>=1;\n        }\n        insert();\n    }\n    for(ll _=1;_<=n;_++)\n    {\n        memset(TwoBit,0,sizeof(TwoBit));\n        g=-1;\n        ll v=xor_[_];\n        while(v)//\u62c6\u4e8c\u8fdb\u5236\n        {\n            TwoBit[++g]=v&1;\n            v>>=1;\n        }\n        ans=max(ans,search());\n    }\n    printf(\"%lld\\n\",ans);\nreturn 0;\n}\n\ninline void EdgeAdd(ll from,ll to,ll val)\n{\n    e[++size].to=to;\n    e[size].val=val;\n    e[size].next=head[from];\n    head[from]=size;\n}\n\ninline void dfs(ll from)//\u7528dfs\u6c42\u51fa\u5230\u6839\u7ed3\u70b9\u7684\u5f02\u6216\u503c\n{\n    flag[from]=true;\n    for(ll _=head[from];_!=-1;_=e[_].next)\n    {\n        ll to=e[_].to;\n        ll val=e[_].val;\n        if(flag[to]==true)//\u4e0d\u80fd\u5f80\u56de\u8d70\u554a\n        {\n            continue;\n        }\n        else\n        {\n            xor_[to]=xor_[from]^val;//\u7d2f\u52a0\u5f02\u6216\u503c\n            dfs(to);\n        }\n    }\n}\n\ninline void insert()\n{\n    ll p=1;\n    for(ll _=31;_>=0;_--)//\u4ece\u9ad8\u4f4d\u5f00\u59cb\u5b58\n    {\n        ll num=TwoBit[_];\n        if(trie[p][num]==0)\n        {\n            trie[p][num]=++tot;\n        }\n        p=trie[p][num];\n    }\n}\n\ninline ll search()\n{\n    ll p=1,cnt=0;\n    for(ll _=31;_>=0;_--)//\u4ece\u9ad8\u4f4d\u5f00\u59cb\u626b\n    {\n        ll num=TwoBit[_];\n        if(trie[p][1-num]!=0)//\u5c3d\u91cf\u9009\u62e9\u4e0e\u9ad8\u4f4d\u4e0d\u540c\u7684\n        {\n            cnt+=(1<<_);\n            p=trie[p][1-num];\n        }\n        else\n        {\n            p=trie[p][num];\n        }\n    }\nreturn cnt;\n}\n\n```\n",
        "postTime": 1562898339,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "$\\texttt{0-1 trie}$\u3002\n\n\u5927\u6982\u662f $\\texttt{0-1 trie}$ \u7684\u6a21\u677f\u9898\uff1f\n\n\u505a\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5148\u9884\u5904\u7406\u524d\u7f00 $\\texttt{xor}$ \u548c\uff0c\u628a\u5b83\u4eec\u6309\u4f4d\u4e22\u5230\u4e00\u9897 $\\texttt{trie}$ \u4e0a\uff0c\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u5f53\u524d $0$ \u5c31\u8d70 $1$\uff0c$1$ \u5c31\u8d70 $0$\uff0c\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u8d77\u70b9\u8dd1\u4e00\u904d\uff0c\u7136\u540e\u53d6\u6700\u5927\u7684\u90a3\u4e2a\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 2000005\n#define K 30\n#define reg register\n#define inl inline\nusing namespace std;\nint cnt,fst[MAXN],nxt[MAXN<<1],to[MAXN<<1],w[MAXN<<1];\nint n,a[MAXN],ch[MAXN][2],tot,ans;\ninl void AddEdge(reg int u,reg int v,reg int c)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n\tw[cnt]=c;\n}\ninl void Dfs(reg int u,reg int faz)\n{\n\tfor(reg int i=fst[u];i;i=nxt[i])\n\t{\n\t\treg int v=to[i];\n\t\tif(v==faz) continue;\n\t\ta[v]=a[u]^w[i];\n\t\tDfs(v,u);\n\t}\n}\ninl void Modify(reg int rt,reg int val)\n{\n\tfor(reg int i=K;i>=0;i--)\n\t{\n\t\treg bool u=val&(1<<i);\n\t\tif(!ch[rt][u]) ch[rt][u]=++tot;\n\t\trt=ch[rt][u];\n\t}\n}\ninl int Query(reg int rt,reg int val)\n{\n\treg int res=0;\n\tfor(reg int i=K;i>=0;i--)\n\t{\n\t\treg bool u=!(val&(1<<i));\n\t\tif(ch[rt][u])\n\t\t{\n\t\t\tres+=1<<i;\n\t\t\trt=ch[rt][u];\n\t\t}\n\t\telse rt=ch[rt][!u];\n\t}\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(reg int i=1;i<n;i++)\n\t{\n\t\treg int x,y,z;\n\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\tAddEdge(x,y,z);\n\t\tAddEdge(y,x,z);\n\t}\n\tDfs(1,0);\n\tfor(reg int i=1;i<=n;i++) Modify(0,a[i]);\n\tfor(reg int i=1;i<=n;i++) ans=max(ans,Query(0,a[i]));\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1561269866,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4551 \u3010\u6700\u957f\u5f02\u6216\u8def\u5f84\u3011"
    },
    {
        "content": "# Explanation\n\u9996\u5148\u5e94\u8be5\u60f3\u5230\u7528Trie\u89e3\u51b3\u4e24\u4e2a\u6570xor\u6700\u5927\u503c\u7684\u6a21\u677f\uff08\u53ef\u89c1[CH1602](<http://contest-hunter.org:83/contest/0x10%E3%80%8C%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%8D%E4%BE%8B%E9%A2%98/1602%20The%20XOR%20Largest%20Pair>)\uff09\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5efa\u4e00\u68f5\u5b57\u5178\u6811\uff0c\u8fd9\u68f5\u5b57\u5178\u6811\u6bcf\u4e2a\u8282\u70b9\u4ec5\u6709\u4e24\u4e2a\u5206\u652f0\u548c1\uff0c\u7136\u540e\u628a\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u63d2\u5165Trie\u3002\u82e5\u8981\u67e5\u8be2\u6700\u5927\u503c\uff0c\u5c31\u5728Trie\u4e0a\u6cbf\u5c3d\u91cf\u5f53\u524d\u4f4d\u7684\u53cd\u65b9\u5411\u884c\u8d70\u3002\u82e5\u80fd\u591f\u8fd9\u6837\u8d70\uff0c\u5219ans\u8be5\u4f4d\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002\n\n\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u5148\u7528\u4e00\u904ddfs\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u7684xor\u548c\uff08\u8bbe\u4e3asum[]\uff09\u3002\u6bcf\u4e24\u4e2a\u8282\u70b9\uff08\u5047\u8bbe\u4e3ax\u548cy\uff09\u4e4b\u95f4\u7684xor\u548c\u5373\u4e3asum[x] xor sum[y]\uff0c\u56e0\u4e3a\u91cd\u590d\u8def\u5f84\u4e0a\u7684\u6743\u503c\u81ea\u5df1xor\u81ea\u5df1\uff0c\u7ed3\u679c\u4e3a0\uff08a xor a = 0\uff09\uff0c\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u5982\u8981\u67e5\u9605\u66f4\u591a\u8d44\u6599~~\uff08\u6216\u60f3\u53cc\u500d\u7ecf\u9a8c\uff09~~\u53ef\u4ee5\u67e5\u9605POJ3764\u3002\u5728POJ\u53cc\u500d\u7ecf\u9a8c\u7684\u65f6\u5019\u8981\u8bb0\u5f97\uff1a1.\u4f17\u6240\u5468\u77e5\uff0c\u5934\u6587\u4ef6\uff08\u6ed1\u7a3d\uff09\uff1b2.\u9ed8\u8ba4\u6839\u8282\u70b9\u4e3a0\uff1b3.\u6709\u591a\u7ec4\u6570\u636e\u3002\n\n# Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int MAX_N = 100000 + 10;\nint Head[MAX_N], Next[MAX_N << 1], V[MAX_N << 1], W[MAX_N << 1], tot;\nint T[MAX_N * 30][2], cnt;\nint sum[MAX_N], n, ans;\n\nvoid Add(int u, int v, int w) {\n\tV[++tot] = v; W[tot] = w;\n\tNext[tot] = Head[u]; Head[u] = tot;\n}\n\nvoid dfs(int u, int fa) {\n\tfor (int i = Head[u]; i; i = Next[i]) {\n\t\tint v = V[i], w = W[i];\n\t\tif (v == fa) continue;\n\t\tsum[v] = sum[u] ^ w;\n\t\tdfs(v, u);\n\t}\n}\n\nvoid Insert(int str) {\n\tint cur = 0;\n\tfor (int i = 31; i >= 0; i--) {\n\t\tint ch = (str >> i) & 1;\n\t\tif (!T[cur][ch]) T[cur][ch] = ++cnt;\n\t\tcur = T[cur][ch];\n\t}\n}\n\nint Query(int str) {\n\tint cur = 0, ret = 0;\n\tfor (int i = 31; i >= 0; i--) {\n\t\tint ch = (str >> i) & 1;\n\t\tret <<= 1;\n\t\tif (T[cur][ch ^ 1]) ret |= 1, cur = T[cur][ch ^ 1];\n\t\telse cur = T[cur][ch];\n\t}\n\treturn ret;\n}\n\nint main() {\n\tint u, v, w;\n\tscanf(\"%d\", &n);\n\tmemset(Head, 0, sizeof Head); tot = 0;\n\tmemset(T, 0, sizeof T); cnt = 0;\n\tmemset(sum, 0, sizeof sum); ans = 0;\n\tfor (int i = 1; i < n; i++) {\n\t\tscanf(\"%d%d%d\", &u, &v, &w);\n\t\tAdd(u, v, w); Add(v, u, w);\n\t}\n\tdfs(1, -1);\n\tfor (int i = 1; i <= n; i++) {\n\t\tans = max(ans, Query(sum[i]));\n\t\tInsert(sum[i]);\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n} \n```\n\n# Reference\n[POJ3764](http://poj.org/problem?id=3764)\n\n\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300bp.76",
        "postTime": 1553268853,
        "uid": 47331,
        "name": "ZJsheep",
        "ccfLevel": 0,
        "title": "LG4551 \u6700\u957f\u5f02\u6216\u8def\u5f84 POJ3764 The xor-longest Path - Trie"
    }
]