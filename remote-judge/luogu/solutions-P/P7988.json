[
    {
        "content": "\u8003\u8651\u7b1b\u5361\u5c14\u6811\u3002\n\n\u4ee5\u4e0b\u6807\u4e3a\u5806\u7684\u6743\u503c\uff0c\u503c\u4e3a BST \u7684\u6743\u503c\uff0c\u5efa\u51fa\u7b1b\u5361\u5c14\u6811\u3002\n\n\u6837\u4f8b\u56fe\u7247\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q48rwaqj.png)\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5728\u4e00\u4e2a\u70b9\u5982\u679c\u5f97\u5230 HI \u7684\u7ed3\u679c\u4e0b\u4e00\u4e2a\u8be2\u95ee\u4e00\u5b9a\u5728\u5de6\u5b69\u5b50\uff0c\u5426\u5219\u5728\u53f3\u5b69\u5b50\u3002\n\n\u76f4\u63a5\u5728\u7b1b\u5361\u5c14\u6811\u4e0a\u7b97\u6839\u5230\u6bcf\u4e2a\u70b9\u7684\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u4e2a HILO \u5c31\u884c\u4e86\u3002",
        "postTime": 1640322118,
        "uid": 171487,
        "name": "cmll02",
        "ccfLevel": 8,
        "title": "HILO"
    },
    {
        "content": "[\u66f4\u5783\u573e\u7684\u9605\u8bfb\u4f53\u9a8c](https://hydro.ac/d/houzhiyuan/p/P12202/solution)\n\n\u8003\u8651\u987a\u5e8f\u8be2\u95ee\u4e0b\u53bb\uff0c\u8003\u8651\u4e00\u4e2a\u8be2\u95ee\u4f1a\u5bf9\u90a3\u4e9b\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n\n\u5728\u7b2c $a_i$ \u4e4b\u524d\uff0c\u5df2\u7ecf\u6709 $i-1$ \u6b21\u8be2\u95ee\uff0c\u5bb9\u6613\u53d1\u73b0\u53ea\u6709\u5728\u524d\u9762 $i-1$ \u6b21\u8be2\u95ee\u4e2d\u5c0f\u4e8e $a_i$ \u7684\u6700\u5927\u503c\u5230\u5927\u4e8e $a_i$ \u7684\u6700\u5c0f\u503c\u8fd9\u6bb5\u533a\u95f4\u4f1a\u9020\u6210\u5f71\u54cd\u3002\n\n\u5e76\u4e14\u4e00\u6b21\u8be2\u95ee\u4f1a\u5c06\u8fd9\u4e2a\u533a\u95f4\u5206\u6210\u4e24\u534a\u3002\n\n\u56e0\u6b64\u76f4\u63a5\u7528 set \u7ef4\u62a4\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u8bb0\u4e00\u4e2a\u56db\u5143\u7ec4 $(l,r,las,s)$\uff0c\u5206\u522b\u8868\u793a\u5de6\u53f3\u65ad\u7535\uff0c\u4e0a\u6b21\u8be2\u95ee\u7684\u56de\u7b54\u4ee5\u53ca\u7b54\u6848\u5c31\u597d\u4e86\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nstruct hzy{int l,r,ff,s;};\nint n,a[N];\nbool operator<(hzy a,hzy b){return a.l<b.l;}\nbool operator>(hzy a,hzy b){return a.l>b.l;}\nmultiset<hzy> se;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tse.insert((hzy){0,n+1,2,0});\n\tfor(int i=1;i<=n;i++){\n\t\tauto it=se.upper_bound((hzy){a[i],a[i],0,0});\n\t\tit--;\n\t\tif((it->ff)==1)se.insert((hzy){a[i],it->r,0,(it->s)+1});\n\t\telse se.insert((hzy){a[i],it->r,0,it->s});\n\t\tse.insert((hzy){it->l,a[i],1,it->s});\n\t\tse.erase(it);\n\t}\n\tfor(auto it:se)printf(\"%d\\n\",(it.s));\n}\n```",
        "postTime": 1640584130,
        "uid": 98490,
        "name": "houzhiyuan",
        "ccfLevel": 7,
        "title": "P7988"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u8003\u8651\u76f4\u63a5\u628a\u8fd9\u4e2a\u8be2\u95ee\u7684\u6811\u5efa\u7acb\u51fa\u6765\u3002\n\n\u8f6c\u5316\u4e00\u4e0b\u5c31\u662f\u4e00\u4e2a\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u4f46\u662f\u8981\u6c42\u8be2\u95ee\u5f97\u65e9\u7684\u8282\u70b9\u8981\u5728\u8be2\u95ee\u5f97\u8282\u70b9\u7684\u4e0a\u65b9\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5806\u7684\u6027\u8d28\u3002\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u6027\u8d28\u6765\u81ea\u4e8e\u5728\u8be2\u95ee\u5f97\u5230\u7ed3\u679c\u4e4b\u540e\u53ea\u4f1a\u5411\u4e00\u4e2a\u7279\u5b9a\u7684\u65b9\u5411\u8d70\uff0c\u5806\u7684\u6027\u8d28\u5219\u662f\u6765\u81ea\u4e8e\u8be2\u95ee\u7684\u987a\u5e8f\u7684\u4f18\u5148\u7ea7\u3002\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a\u7b1b\u5361\u5c14\u6811\uff0c\u4e8c\u53c9\u6811\u6743\u503c\u662f\u9898\u76ee\u7ed9\u51fa\u7684\u6570\u7684\u6743\u503c\uff0c\u5806\u7684\u6743\u503c\u662f\u9898\u76ee\u7ed9\u51fa\u7684\u6570\u7684\u987a\u5e8f\uff0c\u76f4\u63a5 $O(n)$ \u5efa\u7acb\u7b1b\u5361\u5c14\u6811\u3002\n\n---\n\u7136\u540e\u8003\u8651\u4ec0\u4e48\u6837\u7684\u60c5\u51b5\u4e0b\u4f1a\u8bf4\u51fa $\\text{HILO}$\uff0c\u5f88\u660e\u663e\u7684\u4e00\u79cd\u60c5\u51b5\u662f\u5148\u5411\u5de6\u5b50\u6811\u8d70\uff0c\u7136\u540e\u518d\u5411\u53f3\u5b50\u6811\u8d70\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u8d70\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u6070\u597d\u662f\u8be2\u95ee\u7684\u90a3\u4e00\u4e2a\uff0c\u4f1a\u56de\u7b54 $\\text{LO}$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u5411\u5de6\u8d70\u4e4b\u540e\u7684\u4e00\u4e2a\u8282\u70b9\u5728\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u9700\u8981\u52a0\u4e00\uff0c\u4f46\u662f\u8fd9\u4e2a\u52a0\u4e00\u4e0d\u4f1a\u4fdd\u7559\u5230\u5176\u4ed6\u5b50\u8282\u70b9\u3002\n\n\u7136\u540e\u5c31\u76f4\u63a5\u5bf9\u7740\u8fd9\u4e2a\u7b1b\u5361\u5c14\u6811\u904d\u5386\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n---\n\u7279\u6b8a\u5730\uff0c\u8be2\u95ee $0$ \u7684\u65f6\u5019\u4f1a\u4e00\u76f4 $\\text{HI}$\uff0c\u4e0d\u4f1a\u51fa\u73b0 $\\text{HILO}$\uff0c\u76f4\u63a5\u8f93\u51fa $0$ \u5c31\u597d\u4e86\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=2e5+7;\nstruct str{\n\tint num,id;\n\tbool operator < (str x)const{\n\t\treturn num<x.num;\n\t}\n}p[MAXN];\nint n,a[MAXN],stk[MAXN],ls[MAXN],rs[MAXN],ans[MAXN],tot,s;\nvoid dfs(int now,int last){\n\t\n\tif(now==0)return;\n\t//1 \u5411\u5de6 2 \u5411\u53f3 \n\tif(last==1)ans[now]=tot+1;\n\telse ans[now]=tot;\n\tdfs(ls[now],1);\n\t\n\tif(last==1)tot++;\n\tdfs(rs[now],0);\n\tif(last==1)tot--;\n}\nint main(){\n    scanf(\"%d\",&n);\n    printf(\"0\\n\");\n    for(int i=1;i<=n;i++){\n    \tscanf(\"%d\",&p[i].num);\n    \tp[i].id=i;\n\t}\n\ts=p[1].num;\n    sort(p+1,p+n+1);\n    for(int i=1;i<=n;i++){\n    \ta[i]=p[i].id;\n\t}\n\tfor(int i=1,pos=0,top=0;i<=n;++i){\n        pos=top;\n        while(pos&&a[stk[pos]]>a[i])pos--;\n        if(pos)rs[stk[pos]]=i;\n        if(pos<top)ls[i]=stk[pos+1];\n        stk[top=++pos]=i;\n    }\n    dfs(s,-1);\n    \n//    for(int i=1;i<=n;i++)\n//    printf(\"%d %d\\n\",ls[i],rs[i]);\n    \n    for(int i=1;i<=n;i++)\n    printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n/*\n\u5148\u5411\u5de6\u518d\u5411\u53f3\u7b97\u4e00\u6b21\uff0c\u5230\u8282\u70b9\u4e0a\u7b97\u4e00\u6b21\u53f3 \n*/\n```\n",
        "postTime": 1656771340,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "P7988 [USACO21DEC] HILO G \u9898\u89e3"
    },
    {
        "content": "\u573a\u4e0a\u5f53\u65f6\u4e0d\u77e5\u9053\u7b1b\u5361\u5c14\u6811\u4e00\u8bf4\u60f3\u51fa\u7684\u9006\u5929\u505a\u6cd5\uff0e\u65f6\u95f4\u5e26\u591a\u4e00\u4e2a $\\log$\uff0c\u7801\u91cf\u4e5f\u6bd4\u8f83\u5927\uff0e\n\n\u6211\u4eec\u8003\u8651\u731c\u6570\u7684\u8fc7\u7a0b\uff0c\u5c06 $i$ \u770b\u505a\u6a2a\u5750\u6807\uff0c$a_i$ \u770b\u505a\u7eb5\u5750\u6807\uff0e\u7ed9\u5b9a $x$ \u65f6\uff0c$a_i$ \u88ab\u731c\u6ee1\u8db3 $a_i \\le x$ \u4e14 $a_i$ \u7684\u5de6\u4e0a\u65b9\u6ca1\u6709\u70b9\uff0c\u6216 $a_i > x$ \u4e14 $a_i$ \u7684\u5de6\u4e0b\u65b9\u6ca1\u6709\u70b9\uff0e$x$ \u5c06\u5e73\u9762\u5206\u6210\u4e24\u90e8\u5206\uff0c\u88ab\u731c\u7684\u70b9\u96c6\u662f\u4e0a\u90e8\u7684\u4e00\u4e2a\u9012\u964d\u5e8f\u5217\u548c\u4e0b\u90e8\u7684\u4e00\u4e2a\u9012\u589e\u5e8f\u5217\uff0e\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $x$\uff0c\u6709\u4e00\u4e9b\u4e0a\u90e8\u7684\u70b9\u5230\u4e86\u4e0b\u90e8\u6765\uff0c\u6211\u4eec\u7ef4\u62a4\u4e0a\u4e0b\u4e24\u4e2a\u88ab\u731c\u70b9\u96c6\u7684\u53d8\u5316\u5373\u53ef\uff0e\u7136\u540e\u6211\u4eec\u53d1\u73b0\u52a0\u5165\u70b9\u6bd4\u5220\u9664\u70b9\u597d\u505a\u5f88\u591a\u2014\u2014\u53ef\u4ee5\u5c06\u4e0a\u70b9\u96c6\u5220\u9664\u70b9\u7684\u64cd\u4f5c\u770b\u4f5c\u4ece\u6700\u7ec8\u72b6\u6001\u52a0\u70b9\u7684\u8fc7\u7a0b\uff0c\u6a21\u62df\u7684\u8fc7\u7a0b\u4e2d\u5c06\u64cd\u4f5c\u8bb0\u4e0b\u5373\u53ef\uff0e\n\n```cpp\n#include<bits/stdc++.h>\n#define pii pair<int, int>\n#define fr first\n#define sc second\nusing namespace std;\ninline int rd(void){\n\tint s=0, f=1; char c=getchar();\n\twhile(c<'0' || c>'9') {if(c=='-') f=0; c=getchar();}\n\twhile(c>='0' && c<='9') {s=s*10+c-'0'; c=getchar();}\n\treturn f? s:-s;\n}\nconst int N=2e5+5;\nint n, a[N], p[N];\n\nint stk[N], tp;\nvector<int> act_hi[N];\nvector<int> act_lo[N];\nvoid prework(){\n\tfor(int i=1; i<=n; i++){\n\t\tint pos=p[i];\n\t\twhile(tp && stk[tp]>pos) act_lo[i].push_back(stk[tp--]);\n\t\tstk[++tp]=pos;\n\t}\n\ttp=0;\n\tfor(int i=n; i; i--){\n\t\tint pos=p[i];\n\t\twhile(tp && stk[tp]>pos) act_hi[i].push_back(stk[tp--]);\n\t\tstk[++tp]=pos;\n\t}\n}\n\nint ans[N], now;\nset<pii> s;\n\nvoid ins(int pos, int c){\n\ts.insert({pos, c});\n\tauto ite=s.lower_bound({pos, c});\n\tif(ite!=s.begin()){\n\t\tite--;\n\t\tint prec=(*ite).sc;\n\t\tif(prec==1 && c==0) now++;\n\t\tite++, ite++;\n\t\tif(ite!=s.end()){\n\t\t\tif(c==1 && (*ite).sc==0) now++;\n\t\t\tif(prec==1 && (*ite).sc==0) now--;\n\t\t}\n\t}\n\telse if(c==1){\n\t\t++ite;\n\t\tif(ite!=s.end() && (*ite).sc==0) now++;\n\t}\n}\n\nvoid del(int pos, int c){\n\tauto ite=s.lower_bound({pos, c});\n\tif(ite!=s.begin()){\n\t\tite--;\n\t\tint prec=(*ite).sc;\n\t\tif(prec==1 && c==0) now--;\n\t\tite++, ite++;\n\t\tif(ite!=s.end()){\n\t\t\tif(c==1 && (*ite).sc==0) now--;\n\t\t\tif(prec==1 && (*ite).sc==0) now++;\n\t\t}\n\t}\n\telse if(c==1){\n\t\t++ite;\n\t\tif(ite!=s.end() && (*ite).sc==0) now--;\n\t}\n\ts.erase({pos, c});\n}\n\nvoid work(){\n\tans[0]=0;\n\tfor(int i=1; i<=tp; i++) s.insert({stk[i], 1});\n\tfor(int i=1; i<=n; i++){\n\t\tfor(int x:act_hi[i]) ins(x, 1);\n\t\tdel(p[i], 1);\n\t\tfor(int x:act_lo[i]) del(x, 0);\n\t\tins(p[i], 0);\n\t\tans[i]=now;\n\t}\n}\n\nsigned main(){\n\tn=rd();\n\tfor(int i=1; i<=n; i++){\n\t\ta[i]=rd();\n\t\tp[a[i]]=i;\n\t}\n\tprework();\n\twork();\n\tfor(int i=0; i<=n; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n/*\n5\n3 1 4 5 2 \n*/\n```",
        "postTime": 1685451917,
        "uid": 456415,
        "name": "ckain",
        "ccfLevel": 6,
        "title": "P7988 [USACO21DEC] HILO G \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u672c\u8eab\u662f\u4e2a\u4e0d\u9519\u7684\u9898\uff0c\u505a\u6cd5\u591a\u79cd\u591a\u6837\uff08\u81f3\u5c11\u6211\u5df2\u77e5\u4e24\u79cd\uff09\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u4ecb\u7ecd\u4e00\u79cd\u6211\u8003\u573a\u4e0a\u7684\u505a\u6cd5\u597d\u4e86\uff0c\u6bd4\u8f83\u5c51\uff0c\u4f46\u4e0d\u5931\u4e3a\u4e00\u79cd\u601d\u8def\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8bd5\u56fe\u66b4\u529b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $x$ \u90fd\u628a\u6240\u6709\u56de\u7b54\u7684\u7ed3\u679c\u6c42\u51fa\u6765\uff0c\u90a3\u4e48\u5c31\u663e\u7136\u53ef\u4ee5\u7edf\u8ba1\u4e86\u3002\u663e\u7136\uff0c\u8fd9\u4e2a\u505a\u6cd5\u662f\u4f4e\u6548\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u770b\u770b\u80fd\u4e0d\u80fd\u4f18\u5316\u5b83\u3002\u76f4\u89c2\u7684\u60f3\u6cd5\u5c31\u662f\u6362\u79cd\u679a\u4e3e $x$ \u7684\u65b9\u5f0f\uff1a\u679a\u4e3e\u6bcf\u4e00\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u7136\u540e\u628a\u5b57\u7b26\u4e32\u62fc\u51fa\u6765\uff0c\u540c\u65f6\u4e5f\u5c31\u53ef\u4ee5\u628a\u5bf9\u5e94\u7684 $x$ \u6c42\u51fa\u6765\u4e86\u3002\u7531\u4e8e\u65e0\u6548\u8be2\u95ee\u7684\u5b58\u5728\uff0c\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u65b9\u5f0f\uff08\u7ef4\u62a4\u5f53\u524d $x$ \u7684\u53ef\u80fd\u53d6\u503c\u533a\u95f4\uff09\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u987a\u4fbf\u9ad8\u6548\u5730\u7ef4\u62a4\u7b54\u6848\u3002\n\n\u7136\u540e\u8003\u8651\u8fd9\u4e2a\u641c\u7d22\u7684\u8fc7\u7a0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u6784\u6210\u4e86\u4e00\u68f5\u6811\u7684\u7ed3\u6784\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u6bcf\u4e00\u6b21\u8be2\u95ee\u90fd\u662f\u6709\u6548\u7684\uff0c\u90a3\u4e48\u6bcf\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\u7684\u5ea6\u6570\u90fd\u81f3\u5c11\u4e3a $2$\uff0c\u90a3\u4e48\u6574\u68f5\u6811\u8282\u70b9\u6570\u4e0e\u53f6\u5b50\u8282\u70b9\u6570\u540c\u9636\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u590d\u6742\u5ea6\u5c31\u80fd\u591f\u5f97\u4ee5\u4fdd\u969c\u3002\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u5982\u4f55\u9ad8\u6548\u5730\u67e5\u627e\u4e0b\u4e00\u4e2a\u6709\u6548\u8be2\u95ee\u3002\u8fdb\u4e00\u6b65\u8f6c\u6362\uff0c\u4e00\u4e2a\u6392\u5217\uff0c\u6bcf\u6b21\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4\u548c\u4e00\u4e2a\u540e\u7f00\uff0c\u67e5\u8be2\u540e\u7f00\u4e2d\u503c\u5728\u6b64\u533a\u95f4\u5185\u7684\u6570\u7684\u6700\u5c0f\u4e0b\u6807\u3002\u4e0d\u96be\u60f3\u5230\u4f7f\u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u89e3\u51b3\uff0c\u590d\u6742\u5ea6\u4e00\u53ea $\\log$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconstexpr int N = 2e5 + 9;\nint n, p[N];\nint rt[N], tot;\nstruct node {\n  int mn;\n  int l, r;\n} tr[N << 5];\nvoid update(int& pos, int ppos, int val, int k, int L, int R) {\n  if (!pos) pos = ++tot;\n  tr[pos].mn = val;\n  if (L == R) return;\n  int mid = (L + R) >> 1;\n  if (k <= mid)\n    tr[pos].r = tr[ppos].r, update(tr[pos].l, tr[ppos].l, val, k, L, mid);\n  else\n    tr[pos].l = tr[ppos].l, update(tr[pos].r, tr[ppos].r, val, k, mid + 1, R);\n}\nint query(int pos, int l, int r, int L, int R) {\n  if (!pos || L > r || R < l) return n + 1;\n  if (L >= l && R <= r) return tr[pos].mn;\n  int mid = (L + R) >> 1;\n  return min(query(tr[pos].l, l, r, L, mid),\n             query(tr[pos].r, l, r, mid + 1, R));\n}\nint getnxt(int x, int l, int r) { return query(rt[x + 1], l, r, 0, n + 1); }\nbool bl[N];\nint stot;\nint ans[N], nans;\nvoid dfs(int x, int l, int r) {\n  if (x == n + 1)\n    ans[l] = nans;\n  else {\n    bl[++stot] = true;\n    dfs(getnxt(x, l, p[x] - 1), l, p[x] - 1);\n    if (bl[stot - 1]) ++nans;\n    bl[stot] = false;\n    dfs(getnxt(x, p[x], r), p[x], r);\n    if (bl[--stot]) --nans;\n  }\n}\nsigned main() {\n  ios::sync_with_stdio(false), cin.tie(nullptr);\n  cin >> n;\n  for (int i = 1; i <= n; ++i) cin >> p[i];\n  for (int i = n; i; --i) update(rt[i], rt[i + 1], i, p[i], 0, n + 1);\n  dfs(1, 0, n + 1);\n  for (int i = 0; i <= n; ++i) cout << ans[i] << '\\n';\n  return cout << flush, 0;\n}\n```",
        "postTime": 1640353369,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u53ef \u6301 \u4e45 \u5316 \u7ebf \u6bb5 \u6811"
    },
    {
        "content": "\u9898\u610f\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u8fdb\u884c\u731c\u6570\u8fc7\u7a0b\uff08\u6bd4\u5927\u5c0f\u7684\u8fc7\u7a0b\u5f62\u6210 `HI` \u6216\u8005 `LO` \u7684\u7ed3\u679c\uff0c\u800c\u4e14\u9700\u8981\u526a\u679d\uff0c\u526a\u679d\u7684\u8fc7\u7a0b\u9898\u76ee\u4e2d\u5df2\u8bb2\u8ff0\uff09\uff0c\u6c42\u5f62\u6210\u7684\u7ed3\u679c\u4e32\u4e4b\u5185\u5b50\u4e32 `HILO` \u7684\u6570\u91cf\u3002\n\n[\u63d0\u4f9b\u53e6\u5916\u4e00\u7ec4\u6837\u4f8b\u6570\u636e\u3002](https://www.luogu.com.cn/discuss/571191)\n\n\u601d\u8def\uff1a\u89c2\u5bdf\u5230\u66b4\u529b\u4e00\u4e2a\u4e2a\u53bb\u5904\u7406 `HI` \u548c `LO` \u7684\u7ed3\u679c\uff0c\u53ea\u80fd\u8fc7\u6570\u636e\u968f\u673a\u90a3\u4e00\u6863\u5206\u6570\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u4e0d\u597d\u5904\u7406\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u7684\u5168\u5c40\u67e5\u8be2\u4e00\u7c7b\u7ed3\u679c\uff0c\u4e8e\u662f\u8003\u8651\u8f6c\u5316\u601d\u8def\uff0c\u628a\u6240\u6709\u8be2\u95ee\u4e00\u8d77\u5904\u7406\u3002\uff08\u8fd9\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6574\u4f53\u4e8c\u5206\u7684\u601d\u60f3\uff09\n\n\u663e\u7136\u53ef\u77e5\uff0c\u5728\u4e0d\u65ad\u8fdb\u884c\u5904\u7406\u8be2\u95ee\u7684\u8fc7\u7a0b\u4e4b\u4e2d\uff0c\u4e00\u4e9b\u533a\u95f4\u7684\u7b54\u6848\u662f\u4e00\u6837\u7684\uff0c\u76f4\u5230\u6700\u540e\u7b2c $n$ \u4e2a\u64cd\u4f5c\u624d\u628a\u6240\u6709\u8be2\u95ee\u7684\u7b54\u6848\u72ec\u7acb\u3002\n\n\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\uff0c\u53d1\u73b0\u6bcf\u6b21\u64cd\u4f5c\u5b9e\u8d28\u4e0a\u662f\u5206\u88c2\u4e00\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u5bf9\u5b83\u4eec\u7edf\u8ba1\u4e0d\u540c\u7684\u7b54\u6848\u3002\n\n\u5b9e\u9645\u4e0a\u6bcf\u6b21\u64cd\u4f5c\u6240\u6d89\u53ca\u7684 $a_i$ \u4ec5\u4ec5\u5f71\u54cd\u5230\u5305\u542b $a_i$ \u7684\u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\uff0c\u4f7f\u8fd9\u4e2a\u533a\u95f4\u5206\u88c2\u6210\u4e3a\u4e24\u534a\uff08\u5de6\u534a\u90e8\u5206\u6253\u4e0a `HI` \u7684\u6807\u8bb0\u800c\u53f3\u534a\u90e8\u5206\u6253\u4e0a `LO` \u7684\u6807\u8bb0\uff0c\u5e76\u4e14\u8f6c\u79fb\u7b54\u6848\uff09\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u73c2\u6735\u8389\u6811\u7684 `split` \u64cd\u4f5c\uff0c\u5b9e\u73b0\u65f6\u5019\u53ea\u9700\u8981\u4f7f\u7528 `set` \u7ef4\u62a4\u533a\u95f4\u96c6\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;typedef int I;\nstruct nd{\n\tmutable I l,r,frid,ans;\n\tfriend bool operator <(nd a,nd b){\n\t\treturn a.l<b.l;}};\nset<nd>s;\nvoid split(I id){\n\tauto it=s.upper_bound(nd{id,id,0});\n\t--it;auto p=*it;\n\ts.erase(it);\n\tif(p.l<=id-1)s.insert(nd{p.l,id-1,0,p.ans});\n\ts.insert(nd{id,p.r,1,p.ans+(p.frid^1)});\n}I n;\nint main(){\n\tscanf(\"%d\",&n);\n\ts.insert(nd{0,n,1,0});\n\tfor(I i=n,x;i;--i)scanf(\"%d\",&x),split(x);\n\tfor(auto i:s)printf(\"%d\\n\",i.ans);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1676095442,
        "uid": 121995,
        "name": "SmallTualatin",
        "ccfLevel": 0,
        "title": "HILO-G \u9898\u89e3"
    }
]