[
    {
        "content": "9.14\n\n\u7b2c\u4e00\u9053\u72b6\u538bDP\n\n\u5185\u5bb9\u6765\u81eaUID:82857 drywwltu\n\n\u611f\u6027\u7406\u89e3\n\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nconst int mod = 100000000;\n\nint n, m;\nint a[13][13];\nint F[13];\n//\u7b2c[i]\u884c\u7684\u571f\u5730\u72b6\u6001\n\nint f[13][1 << 12 + 5];\t\t\n//f[i][j]\u524d[i]\u884c\u7684\u72b6\u6001\u4e3aj\u65f6\u7684\u5408\u6cd5\u65b9\u6848\u6570\t\u6ce8\u610f\u662f\u524di\u884c\u4e0d\u662f\u7b2ci\u884c\n\nbool g[1 << 12 + 5];\n//g[i]\u8bb0\u5f55i\u8fd9\u4e2a\u72b6\u6001\u662f\u5426\u5408\u6cd5\n\n/*\n\u5728\u6837\u4f8b\u4e2d\u4e00\u5171\u67092\u884c3\u5217\nm = 2, n = 3;\n1 1 1\n0 1 0\n\u90a3\u4e48\u7b2c[1]\u884c\u72b6\u6001\u4e3aF[1] = 111\n    \u7b2c[2]\u884c\u72b6\u6001\u4e3aF[2] = 010\n\n\t1 001    2 010    3 011    4 100\n    5 101\t 6 110    7 111   \n\t\n    \u53d1\u73b0\u5f53i < (1 << n)\u65f6,\n    i\u7684\u4e8c\u8fdb\u5236\u6570\u4f4d\u6570 = \u5217\u6570\n    \u4e5f\u5c31\u662f\u6bcf\u884c\u7684\u6570\u7684\u4e2a\u6570\n    \n    \u6240\u4ee5\u5c06g\u4ece0\u679a\u4e3e\u5230(1 << n)\u7b97\u51fa\u6240\u6709\u53ef\u80fd\u5b58\u5728\u7684\u72b6\u6001\n*/\nint main() {\n\tscanf(\"%d %d\", &m, &n); \n\t\n\tfor (int i = 1; i <= m; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tscanf(\"%d\", &a[i][j]);\n            F[i] = (F[i] << 1) + a[i][j];\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < (1 << n); i++) \n    \tg[i] = (!(i & (i << 1))) && (!(i & (i >> 1)));\n\t\n\t\n\tf[0][0] = 1;\n\tfor (int i = 1; i <= m; i++) {\n    //\u679a\u4e3e\u6bcf\u884c\n\t\tfor (int j = 0; j < (1 << n); j++) {\n        //\u679a\u4e3e\u8fd9\u884c\u6bcf\u4e2a\u53ef\u80fd\u7684\u72b6\u6001\n\t\t\tif (g[j] && ((j & F[i]) == j)) {\n            //\u8fd9\u884c\u7684\u72b6\u6001\u6ca1\u6709\u5e76\u6392\u76841\n            //\u4e14\u72b6\u6001j\u4e0eF[i]\u76f8\u540c\n            //\u4f7fj\u4e0eF[i]\u76f8\u540c\u4fdd\u8bc1\u662f\u5728\u80a5\u6c83\u571f\u5730\u4e0a\u79cd\u8349\n\t\t\t\tfor (int k = 0; k < (1 << n); k++) {\n                //\u679a\u4e3e\u4e0a\u4e00\u884c\u7684\u72b6\u6001\n\t\t\t\t\tif ((k & j) == 0) {\n                    //\u4e0e\u8be5\u884c\u72b6\u6001\u53d6&\u4e3a0\u8bf4\u660e\u4e0a\u4e00\u884c\u4e0e\u8fd9\u4e00\u884c\u4e0d\u5b58\u5728\u4efb\u610f\u4e00\u5757\u8349\u5730\u6709\u516c\u5171\u8fb9\n\t\t\t\t\t\tf[i][j] = (f[i][j] + f[i - 1][k]) % mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n    \n\tint ans = 0;\n\tfor (int i = 0; i < (1 << n); i++) {\n\t\tans = (ans + f[m][i]) % mod;\n        //\u6700\u540e\u5c06\u524dm\u884c\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u65b9\u6848\u6570\u7d2f\u52a0\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1536912706,
        "uid": 74596,
        "name": "wu_qing",
        "ccfLevel": 0,
        "title": "P1879 \u7389\u7c73\u7530 \u72b6\u538b"
    },
    {
        "content": "## \u524d\u6392\u8b66\u544a\n### \u8fd9\u662f\u5199\u7ed9\u521a\u5b66\u7684\u6211\u770b\u7684\uff0c\u5927\u4f6c\u8bf7\u81ea\u52a8\u5ffd\u7565\n\n\u4eba\u751f\u7b2c\u4e00\u9053\u72b6\u538b$dp$ ~~\u4e92\u4e0d\u4fb5\u72af\u662f\u5b66\u672f\u4ea4\u6d41\u8fc7\u7684~~\n\n\u672c\u849f\u84bb\u4eca\u5929\u5728\u673a\u623f\u542c\u5230\u72b6\u538b$dp$\uff0c\u611f\u89c9\u5f88\u9ad8\u5927\u4e0a\u2026\u2026\u5176\u5b9e\u5c31\u662f\u4f4d\u8fd0\u7b97\u9ad8\u5927\u4e0a\u4e00\u70b9\n\n#### \u89e3\u91ca\u4e00\u4e0b\u4f4d\u8fd0\u7b97\uff1a\n\n& \u7ed9\u4e2a\u4f8b\u5b50\n\n$0110101+1010011=0010001$\uff0c\u8fd4\u56de\u503c\u4e3a$17$\n\n$n<<k$ \u5c06$n$\u5de6\u79fb$k$\u4f4d\uff0c\u76f8\u5f53\u4e8e\u7ed9$n$\u4e58\u4e0a$2^k$\n\n$n>>k$ \u5c06$n$\u53f3\u79fb$k$\u4f4d\uff0c\u76f8\u5f53\u4e8e\u7ed9$n$\u9664\u4ee5$2^k$\u540e\u5411\u4e0b\u53d6\u6574\n\n#### \u89e3\u91ca\u4e00\u4e0b\u72b6\u538b$dp$\uff1a\n\n\u5b83\u7684\u57fa\u672c\u601d\u60f3\u5c31\u662f\u7528\u4e8c\u8fdb\u5236\u6765\u4f18\u7f8e\u5730\u66b4\u529b\u679a\u4e3e\u51fa\u73b0\u7684\u65b9\u6848\uff0c\n\n\u82e5\u4e8c\u8fdb\u5236\u4e0b\u7b2c$i$\u4f4d\u6709\u8d4b\u503c$1$\uff0c\u5219\u4e00\u884c\u7684\u7b2c$i$\u5217\u6709\u653e\u725b\n\n\u90a3\u4e48$f[i][j]$\u8868\u793a\u5728\u524d$i$\u884c\u4e2d\uff08\u5305\u62ec$i$\uff09\u5728$j$\u4e2a\u72b6\u6001\u4e0b\u7684\u6700\u5927\u65b9\u6848\u6570\n\n\u6613\u5f97$f[i][j]=(f[i][j]+f[i-1][k])\\ mod\\ p$\uff08$p=10^9$\uff0c$j$\u662f\u7b2c$i$\u884c\u7684\u72b6\u6001\uff0c$k$\u662f\u7b2c$i-1$\u884c\u7684\u72b6\u6001\uff09\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u518d\u9884\u5904\u7406\u4e00\u4e0b\uff0c$g[i]$\u8868\u793a\u7b2c$i$\u4e2a\u72b6\u6001\u662f\u5426\u5b58\u5728\uff0c\u5224\u65ad\u6761\u4ef6\u662f\n\n$g[i]=$ $!(i$&$(i>>1))!(i$&$(i<<1))$\n\n\u76ee\u6807\u72b6\u6001\uff1a$f[n][i]$\u5168\u90e8\u76f8\u52a0\n\n$Code \\ Below:$\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int p=100000000;\nll f[13][1<<12],n,m;\nll g[1<<12],h[1<<12],a[13][13];\nll F[13];\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tF[i]=(F[i]<<1)+a[i][j];\n\tfor(int i=0;i<(1<<m);i++){\n\t\tif(!(i&(i>>1))&&!(i&(i<<1))){\n\t\t\tg[i]=1;\n\t\t\tif((i&F[1])==i) f[1][i]=1;\n\t\t}\n\t}\n\tfor(int x=2;x<=n;x++)\n\t\tfor(int j=0;j<(1<<m);j++)\n\t\t\tif(((j&F[x-1])==j)&&g[j])\n\t\t\t\tfor(int k=0;k<(1<<m);k++)\n\t\t\t\t\tif(((k&F[x])==k)&&!(j&k)&&g[k]){\n\t\t\t\t\t\tf[x][k]=(f[x][k]+f[x-1][j])%p;\n\t\t\t\t\t}\n\tint ans=0;\n\tfor(int i=0;i<(1<<m);i++)\n\t\tans=(ans+f[n][i])%p;\n\tprintf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1531892696,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u6b64\u9898\u662f\u6211\u7b2c\u4e8c\u6b21\u6253...\u8fd9\u6b21\u611f\u89c9\u975e\u5e38\u826f\u597d,,,\u539f\u56e0\u662f\u627e\u5230\u4e86\u4e00\u4e2a\u505a\u6b64\u7c7b\u7684\u4e00\u4e2a\u5957\u8def\n\n\u9996\u5148\uff1a\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u4e00\u884c\u4e2d\u4e0d\u80fd\u76f8\u90bb\u7684\u72b6\u6001\u9884\u5904\u7406\uff0c\u53ef\u4ee5\u8282\u7701\u679a\u4e3e\u7684\u5927\u91cf\u82b1\u8d39...\n\n\u7136\u540e\uff1a\u5bf9\u5b83\u8f93\u5165\u72b6\u6001\u8fdb\u884c\u5904\u7406\n\n\u6700\u540e\uff1a\u56e0\u4e3a\u662f\u76f8\u90bb\uff0c\u6240\u4ee5\u6bcf\u6392\u4f1a\u53d7\u5230\u4e0a\u4e00\u6392\u7684\u5f71\u54cd\uff01\u6240\u4ee5\u5b9a\u4e49\u72b6\u6001F[i][k]+=F[i-1][j],\u8868\u793a\u7b2ci\u884c\u72b6\u6001\u4e3ak\u65f6\u7684\u65b9\u6848\u603b\u6570\u7b49\u4e8e\u7b2ci-1\u884c\u72b6\u6001\u4e3aj\u65f6\u7684\u65b9\u6848\u603b\u6570\u4e4b\u548c,\u5176\u4e2d\u72b6\u6001k\u5bf9\u4e8e\u72b6\u6001j\u800c\u8a00\u662f\u53ef\u884c\u72b6\u6001\n\n\n\n\n\n\n\n\n\n```cpp\n#include<stdio.h>\nusing namespace std;\nconst int MOD=1e8;\nint f[13][2100];//\u8868\u793a\u65b9\u6848\u6570 \nint can[13];//\u6700\u5f00\u59cb\u53ef\u4ee5\u7684\uff08\u8f93\u5165\u9650\u5236\uff09 \nint donot[201];//\u9884\u5904\u7406\u884c\uff0c\u8868\u793a\u5408\u6cd5\u7684\u72b6\u6001\uff0c\u5927\u6982\u4e0d\u8d85\u8fc7101\u4e2a \nbool judge(int x)\n{\n    return (x & (x>>1));\n}\nint main()\n{\n    int m,n; \n    scanf(\"%d%d\",&m,&n);\n    int x;\n    int full=(1<<n)-1;//\u6ee1\u72b6\u6001 \n    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            scanf(\"%d\",&x);\n            if(!x) can[i]=can[i] | (1<<(n-j));\n        }\n    }\n    int cnt=0;\n    for(int i=0;i<=full;i++)\n    {\n      if(judge(i)) continue;\n      donot[++cnt]=i;\n    }\n    int last,now;\n    for(int i=1;i<=cnt;i++)\n    {\n        now=donot[i];\n        if(donot[i] & can[1]) continue;\n        f[1][i]=1;\n    }\n    for(int i=2;i<=m;i++)\n    {\n        for(int j=1;j<=cnt;j++)\n        {\n            last=donot[j];//\u4e0a\u4e2a\u72b6\u6001 \n            if(last & can[i-1]) continue;\n            for(int k=1;k<=cnt;k++)\n            {\n                now=donot[k];\n                if(now & can[i]) continue;\n                if(now & last) continue;\n                f[i][k]+=f[i-1][j];\n                f[i][k]%=MOD;\n            }\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=cnt;i++) ans=(ans+f[m][i])%MOD;\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1509184234,
        "uid": 22233,
        "name": "\u6885\u5ddd\u4e18\u5e93",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "### \u8f6e\u5ed3\u7ebfdp\n\u8bb0\u5f55\u5f53\u524d\u7684\u8f6e\u5ed3\u7ebf\uff0c\u6839\u636e\u5f53\u524d\u8f6e\u5ed3\u7ebf\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff0c\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u666e\u901a\u72b6\u538bdp\u5feb\u3002\n\n\n------------\n\n| |  |  |  |\n| -----------: | -----------: | -----------: | -----------: |\n|  |  |k3  |k4  |\n|k1  |k2  | * |\n\n* \u5982\u56fe\uff0c\u5047\u8bbe\u5f53\u524d\u8f6c\u79fb\u5230*\u4f4d\u7f6e\uff0c\u8f6e\u5ed3\u7ebf\u72b6\u6001\u4e3a\u4e8c\u8fdb\u5236\u6570k1k2k3k4\uff0c1\u8868\u793a\u7b2ci\u5217\u5df2\u9009\uff0c0\u8868\u793a\u7b2ci\u5217\u672a\u9009\uff0c\u8f6c\u79fb\u65f6\u7528\u4f4d\u8fd0\u7b97\u89e3\u538b\u51fak3\u4e0ek2,\u4f5c\u51fa\u51b3\u7b56\uff0c\u5e76\u7ef4\u62a4\u6bcf\u4e00\u5217\u7684\u8f6e\u5ed3\u7ebf\u5373\u53ef *\n\n\n\n------------\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define max(x,y) ((x)>(y) ? (x) : (y))\n#define min(x,y) ((x)<(y) ? (x) : (y))\n#define Mod 100000000\n#define N 18\nusing namespace std;\n//\u8fd0\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\nint d[2][65546],n,m,a[N][N],cur;\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<n;i++) {\n\t\tfor(int j=0;j<m;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tmemset(d,0,sizeof d);\n\tcur=0;\n\td[0][0]=1;\n\tfor(int i=0;i<n;i++) {\n\t\tfor(int j=0;j<m;j++) {\n\t\t\tcur^=1;\n\t\t\tmemset(d[cur],0,sizeof d[cur]);\n\t\t\tfor(int k=0;k<(1<<m);k++) {\n\t\t\t\tint up=(1<<j)&k;\n\t\t\t\tint left=0;//\u89e3\u538b\u51fa\u5de6\u8fb9\u548c\u4e0a\u9762\n\t\t\t\tif(j>0) left=(1<<(j-1))&k;\n\t\t\t\tif(!i && up) continue;\n\t\t\t\tif(!j && left) continue;\n\t\t\t\tif(up && left) {//\u4e0a\u9762\u9009\u4e86\uff0c\u5de6\u8fb9\u9009\u4e86\uff0c\u8fd9\u4e2a\u53ea\u80fd\u4e0d\u9009\n\t\t\t\t\td[cur][k^(1<<j)]=(d[cur][k^(1<<j)]+d[cur^1][k])%Mod;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(up) {//\u4e0a\u9762\u9009\u4e86\uff0c\u8fd9\u4e2a\u53ea\u80fd\u4e0d\u9009\n\t\t\t\t\td[cur][k^(1<<j)]=(d[cur][k^(1<<j)]+d[cur^1][k])%Mod;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(left) {//\u5de6\u8fb9\u9009\u4e86\uff0c\u8fd9\u4e2a\u53ea\u80fd\u4e0d\u9009\n\t\t\t\t\td[cur][k]=(d[cur][k]+d[cur^1][k])%Mod;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n                //\u969c\u788d\u4e0d\u80fd\u9009\n\t\t\t\tif(!a[i][j]) {\n\t\t\t\t\td[cur][k]=(d[cur][k]+d[cur^1][k])%Mod;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n                //\u9664\u53bb\u4ee5\u4e0a\u72b6\u6001\uff0c\u8003\u8651\u9009\u548c\u4e0d\u9009\u4e24\u79cd\u60c5\u51b5\n\t\t\t\td[cur][k]=(d[cur][k]+d[cur^1][k])%Mod;\n\t\t\t\td[cur][k^(1<<j)]=(d[cur][k^(1<<j)]+d[cur^1][k])%Mod;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=0;i<(1<<m);i++) {\n\t\tans=(ans+d[cur][i])%Mod;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1524635246,
        "uid": 53417,
        "name": "Diogenes",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "# \u7389\u7c73\u7530\n\n## UPD\uff1a\n\n2021.7.20\uff1a\u4fee\u6539\u4e86\u7248\u9762\u3001\u6dfb\u52a0\u4e86\u4e24\u79cd\u4f18\u5316\u65b9\u6cd5\u3002\n\n## \u94fe\u63a5\uff1a\n\n[\u6d1b\u8c37](https://www.luogu.org/problem/P1879)\n\n[\u535a\u5ba2\u56ed](https://www.cnblogs.com/GJY-JURUO/p/12037232.html)\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\n\u5728\u4e00\u4e2a\u6709\u969c\u788d\u7684\u77e9\u9635\u4e2d\u653e\u7f6e\u7269\u54c1\uff0c\u8981\u6c42\u4e0d\u80fd\u76f8\u90bb\uff0c\u6c42\u65b9\u6848\u6570\u3002\n\n## \u601d\u8def\uff1a\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u662f\u72b6\u538b DP\u3002\n\n### \u6734\u7d20\uff1a\n\n\u8bbe $f_{i,j}$ \u8868\u793a\u7b2c $i$ \u884c\u7684\u65b9\u6848\u662f $j$\uff08\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u7528\u5341\u8fdb\u5236\u6765\u5b58\u50a8\uff0c\u7b2c $k$ \u4f4d\u662f $1/0$\uff08\u4e8c\u8fdb\u5236\uff09\u8868\u793a**\u9009\u6216\u4e0d\u9009**\uff09\u65f6\u7684\u65b9\u6848\u6570\u3002\n\n\u58f0\u660e\uff1a\u4e0b\u9762\u7684 $j,k$ \u90fd\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\u3002\n\n\u82e5\u5df2\u7ecf\u8fdb\u884c\u5230 $i$ \u884c\uff0c\u6b64\u65f6\u7684\u65b9\u6848\u662f $j$\uff0c\u4e0a\u4e00\u884c\u7684\u65b9\u6848\u662f $k$\u3002\n\n\u6709\u4e00\u4e2a\u7279\u6b8a\u6761\u4ef6\uff08\u8fb9\u754c\uff09\uff1a$i = 1$\u3002\n\n\u65e2\u7136\u662f\u7b2c\u4e00\u884c\uff0c\u90a3\u4e48\u5b83\u7684\u6240\u4ee5\u5408\u6cd5\u65b9\u6848\u90fd\u662f\u6b63\u786e\u7684\uff0c\u6240\u4ee5\u8fb9\u754c\u662f\uff1a\n\n$$f_{1,j} = 1$$\n\n\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u5230\u672c\u884c\u7684\u5408\u6cd5\u65b9\u6848\u7684\u65b9\u6848\u6570\u662f\u4e0a\u4e00\u884c\u7684**\u6240\u6709**\u5408\u6cd5\u65b9\u6848\u6570\uff0c\u4e5f\u5c31\u662f\uff1a\n\n$$f_{i,j} = f_{i,j}+f_{i - 1,k}$$\n\n### \u6734\u7d20\u4ee3\u7801\uff1a\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n{F_m}^2)$\uff0c\u5176\u4e2d $F_m$ \u8868\u793a\u5bbd\u4e3a $m$ \u7684\u65e0\u969c\u788d\u884c\u7684\u5408\u6cd5\u65b9\u6848\u6570\u3002\n\n```cpp\nconst int N = 15;\nint n, m;\nint f[N][(1 << N)];\nint st[1 << N];\nint a[N];\nint tot;\n\nvoid _init()     //\u7f29\u5c0f\u72b6\u6001\u96c6\u5408\u4f18\u5316\uff0c\u5224\u65ad\u6b64\u65b9\u6848  \u5728\u8fd9\u4e00\u884c  \u662f\u4e0d\u662f\u5408\u6cd5\u7684\n{\n\tfor (int i = 0; i < (1 << m); i++)\n\t{\n\t\tif (i & (i << 1)) continue;\n\t\tst[++tot] = i;\n\t}\n}\n\nint main()\n{\n\tscanf (\"%d%d\", &n, &m);\n\tfor (int j = 1; j <= n; j++)\n\t\tfor (int i = m - 1; i >= 0; i--)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf (\"%d\",&x);\n\t\t\ta[j] += (x << i);\n\t\t}\n\t_init();\n\tfor (int i = 1; i <= tot; i++)         //\u8fb9\u754c\u6761\u4ef6\n\t{\n\t\tif (!((st[i] | a[1]) == a[1]))continue;  //\u662f\u5426\u5408\u6cd5\n\t\tf[1][st[i]] = 1;\n\t}\n\tfor (int i = 2; i <= n; i++)\n\t{\n\t\tfor (int j = 1; j <= tot; j++)\n\t\t{\n\t\t\tif (!((st[j] | a[i]) == a[i]))continue;   //\u5224\u65ad\u5408\u6cd5\n\t\t\tfor (int k = 1; k <= tot; k++)\n\t\t\t{\n\t\t\t\tif (!((st[k] | a[i - 1]) == a[i - 1]))continue;  //\u540c\u4e0a\u6761\u6ce8\u91ca\n\t\t\t\tif (st[j] & st[k]) continue;\n\t\t\t\tf[i][st[j]] += f[i - 1][st[k]];      //\u8f6c\u79fb\n\t\t\t\tf[i][st[j]] %= 100000000;\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0;\n\tfor (int j = 1; j <= tot; j++)\n\t\tans += f[n][st[j]], ans %= 100000000;\n\tprintf (\"%d\", ans);\n\treturn 0;\n}\n\n```\n\n### \u8f6e\u5ed3\u7ebf DP\uff1a\n\n\u4f18\u5316\u662f\u65e0\u6b62\u5883\u7684\u3002\u82e5 $n,m\\leq19$\uff0c\u8981\u600e\u4e48\u89e3\u51b3\u672c\u9898\u5462\uff1f\n\n\u53ef\u91c7\u7528\u8f6e\u5ed3\u7ebf DP\u3002\u8bbe $f_{i,j,k}$ \u8868\u793a\u5f53\u524d\u70b9\u5728 $(i,j)$\uff0c\u8f6e\u5ed3\u7ebf\u7684\u72b6\u6001\u662f $k$ \u7684\u65b9\u6848\u6570\uff1a\n\n|   ?   |   ?   |   ?   |   ?   |\n| ---- | ---- | ---- | ---- |\n|   ?   |   ?   |   $\\mathrm{st}_{1}$   |   $\\mathrm{st}_{2}$   |\n| $\\mathrm{st}_{3}$   |   $\\mathrm{st}_{4}$   |   $x$   |   ?   |   \n\n\u5982\u8868\u683c\uff0c\u8f6e\u5ed3\u7ebf\u7684\u72b6\u6001\u4e3a $\\mathrm{st}_{3}\\mathrm{st}_{4}\\mathrm{st}_{1}\\mathrm{st}_{2}$\uff0c\u5176\u4e2d $\\mathrm{st}_{n}$ \u662f\u4e00\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u8868\u793a\u662f\u5426\u9009\u62e9\u6240\u5728\u683c\u5b50\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u7684\u8bdd\uff0c\u8003\u8651\u5230 $x$ \u7684\u4e0a\u9762\u548c\u5de6\u9762\u662f\u5426\u662f $1$\uff0c\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\u5173\u4e8e\u8f6c\u79fb\u65b9\u7a0b\uff0c\u4f4d\u8fd0\u7b97\u4f7f\u5f97\u516c\u5f0f\u5f88\u96be\u770b\uff0c\u6240\u4ee5\u8fd8\u662f\u5728\u4ee3\u7801\u770b\u597d\u4e86\u3002\n\n### \u8f6e\u5ed3\u7ebf DP \u4ee3\u7801\uff1a\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nm2^m)$\u3002\n\n```cpp\nconst int N = 30, M = 524298;\nconst int mod = 100000000;\n\ninline ll Read()\n{\n\tll x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c != '-' && (c < '0' || c > '9')) c = getchar();\n\tif (c == '-') f = -f, c = getchar();\n\twhile (c >= '0' && c <= '9') x = (x << 3) + (x << 1) + c - '0', c = getchar();\n\treturn x * f;\n}\n\nint n, m, Now = 0;\nint f[2][M];\nint a[N][N];\n\nint main()\n{\n\tn = Read(), m = Read();\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t\ta[i][j] = Read();\n\tf[0][0] = 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tNow ^= 1;\n\t\t\tfor (int k = 0; k < (1 << m); k++)\n\t\t\t{\n\t\t\t\tint lf = (j == 1? 0: (k >> (j - 2)) & 1), up = (k >> (j - 1)) & 1;\n\t\t\t\tif ((i == 1 && up) || (j == 1 && lf)) continue;\n\t\t\t\tif (up) f[Now][k ^ (1 << j - 1)] += f[Now ^ 1][k];         //\u5373\u4e0a\u9762\u9009\u4e86\uff0c\u8fd9\u91cc\u4e0d\u80fd\u9009 \n\t\t\t\telse if (lf || !a[i][j]) f[Now][k] += f[Now ^ 1][k];       //\u5373\u5de6\u8fb9\u9009\u4e86\u6216\u6709\u969c\u788d\uff0c\u8fd9\u91cc\u4e0d\u80fd\u9009 \n\t\t\t\telse              // \u90fd\u53ef\u4ee5\u9009 \n\t\t\t\t{\n\t\t\t\t\tf[Now][k] += f[Now ^ 1][k];\n\t\t\t\t\tf[Now][k ^ (1 << j - 1)] += f[Now ^ 1][k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int k = 0; k < (1 << m); k++) // \u5361\u5e38\u6570\uff0c\u51cf\u6cd5\u7684\u5e38\u6570\u6bd4\u53d6\u6a21\u5c0f\uff1b\n\t\t\t{\t\t\t\t//\u987a\u4fbf\u5b9e\u73b0memset(f[Now ^ 1], 0, sizeof f[Now ^ 1]) \u4e5f\u662f\u5361\u5e38 \n\t\t\t\tfor (; f[Now][k] > mod; f[Now][k] -= mod);\n\t\t\t\tf[Now ^ 1][k] = 0;\n\t\t\t}\n\t\t}\n\tint ans = 0;\n\tfor (int k = 0; k < (1 << m); k++)\n\t\tans = (ans + f[Now][k]) % mod;\n\tprintf (\"%d\", ans);\n\treturn 0;\n}\n```\n\n### \u8f6e\u5ed3\u7ebf\u4e14\u7f29\u5c0f\u72b6\u6001\u96c6\u5408\uff1a\n\n\u4f18\u5316\u662f\u65e0\u6b62\u5883\u7684\u3002\u82e5 $n\\leq120,m\\leq21$ \u5462\uff1f\n\n\u5728\u6734\u7d20\u4e2d\uff0c\u6211\u4eec\u7528\u4e86\u7f29\u5c0f\u72b6\u6001\u96c6\u5408\u4f18\u5316\uff0c\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u4ece\u539f\u672c\u7684 $\\mathcal{O}(n4^m)$ \u964d\u5230 $\\mathcal{O}(n{F_m}^2)$\u3002\n\n\u4e3a\u4e86\u8ba9\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u5c0f\uff0c\u6211\u4eec\u4e5f\u8003\u8651\u8ba9\u8f6e\u5ed3\u7ebf DP \u4e5f\u7f29\u5c0f\u72b6\u6001\u96c6\u5408\u3002\u4f46\u4f3c\u4e4e\u9047\u5230\u4e00\u4e2a\u74f6\u9888\uff1a\u6734\u7d20\u7684\u72b6\u6001\u662f\u4e00\u6574\u884c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u76f8\u90bb\u786e\u5b9a\u5408\u6cd5\uff1b\u800c\u8f6e\u5ed3\u7ebf\u7684\u72b6\u6001\u53ef\u80fd\u5206\u5e03\u5728\u4e24\u884c\uff0c\u5c31\u662f\u8bf4\u51fa\u73b0\u4e00\u7ec4\u76f8\u90bb\u90fd\u9009\u7684\u60c5\u51b5\u662f\u5408\u6cd5\u7684\u3002\u96be\u9053\u4e0d\u80fd\u786e\u5b9a\u5408\u6cd5\u5417\uff1f\n\n\u8df3\u51fa\u601d\u7ef4\uff0c\u8d8a\u8fc7\u74f6\u9888\u3002\u5b83\u5b58\u5728\u76f8\u90bb\u7684\u5730\u65b9\u5c31\u662f\u884c\u7684\u5206\u5272\u5904\uff0c\u628a\u5b83\u8bb0\u5f55\u4e0b\u6765\uff0c\u5728 DP \u65f6\u6839\u636e\u5f53\u524d\u70b9\u7684\u4f4d\u7f6e\u5c31\u5355\u7eaf\u679a\u4e3e\u201c\u5f53\u524d\u662f\u5206\u5272\u70b9\u201d\u7684\u72b6\u6001\u5373\u53ef\u3002\n\n### \u8f6e\u5ed3\u7ebf\u4e14\u7f29\u5c0f\u72b6\u6001\u96c6\u5408\u4ee3\u7801\uff1a\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u7b97\u3002\u4f46\u5b9e\u6d4b\u6bd4\u795e\u4ed9 [cmd](https://www.luogu.com.cn/blog/command-block/zhuang-ya-dp-za-tan) \u7684\u4ee3\u7801\u5feb\u3002\n\n```cpp\nconst int N = 121, N2 = 22, M = 1747628, M2 = 5e4;\nconst int mod = 100000000;\n\ninline ll Read()\n{\n\tll x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c != '-' && (c < '0' || c > '9')) c = getchar();\n\tif (c == '-') f = -f, c = getchar();\n\twhile (c >= '0' && c <= '9') x = (x << 3) + (x << 1) + c - '0', c = getchar();\n\treturn x * f;\n}\n\nint n, m, Now = 0;\nint f[2][M2];\nint a[N], st[N2][M2];\nshort id[2][M];  // \u7528 short \u538b\u7a7a\u95f4\n\nint main()\n{\n\tn = Read(), m = Read();\n\t\n\tfor (int i = 0; i < (1 << m); i++)\n\t{\n\t\tint u = i & (i >> 1);\n\t\tif(u != (u & -u)) continue;\n\t\tint p = u? log2(u) + 1: 0; \n\t\tst[p][++st[p][0]] = i;\n\t\tid[0][i] = p, id[1][i] = st[p][0];\n\t}\n\t\n\tfor (int i = 1; i <= n; ++i)\n\t\tfor (int j = 0; j < m; ++j)\n\t\t\ta[i] = a[i] << 1 | Read();\n\t\n\tfor (int i = 1; i <= st[0][0]; i++)\n\t\tif ((st[0][i] & a[1]) == st[0][i])\n\t\t\tf[Now][i] = 1;\n\t\n\tfor (int i = 2; i <= n; i++)\n\t{\n\t\tfor (int j = 0; j < m; j++)\n\t\t{\n\t\t\tNow ^= 1;\n\t\t\tfor (int k = 1; k <= st[0][0]; k++)  // \u679a\u4e3e\u6ca1\u6709\u5206\u5272\u70b9\u7684\u72b6\u6001 \n\t\t\t{\n\t\t\t\tif (!f[Now ^ 1][k]) continue; \n\t\t\t\tint u = st[0][k] & (st[0][k] ^ (1 << j)), tmp = f[Now ^ 1][k];\n\t\t\t\tf[Now ^ 1][k] = 0;\n\t\t\t\tf[Now][id[1][u]] += tmp;\n\t\t\t\tf[Now][id[1][u]] -= f[Now][id[1][u]] > mod? mod: 0;\n\t\t\t\t\n\t\t\t\tif (!(a[i] & (1 << j)) || (st[0][k] & (1 << j)) || (j && (st[0][k] & (1 << j - 1)))) continue;\n\t\t\t\t\n\t\t\t\tint x = id[1][st[0][k] | (1 << j)];\n\t\t\t\tif (id[0][st[0][k] | (1 << j)]) x += st[0][0];\n\t\t\t\tf[Now][x] += tmp;\n\t\t\t\tf[Now][x] -= f[Now][x] > mod? mod: 0;\n\t\t\t}\n\t\t\tif (!j) continue;\n\t\t\tfor (int k = 1; k <= st[j][0]; k++)  //\u6709\u5206\u5272\u70b9 \n\t\t\t{\n\t\t\t\tif (!f[Now ^ 1][k + st[0][0]]) continue; \n\t\t\t\tint u = st[j][k] & (st[j][k] ^ (1 << j)), tmp = f[Now ^ 1][k + st[0][0]];\n\t\t\t\tf[Now ^ 1][k + st[0][0]] = 0;\n\t\t\t\tf[Now][id[1][u]] += tmp;\n\t\t\t\tf[Now][id[1][u]] -= f[Now][id[1][u]] > mod? mod: 0;\n\t\t\t\t\n\t\t\t\tif (!(a[i] & (1 << j)) || (st[j][k] & (1 << j)) || (j && (st[j][k] & (1 << j - 1)))) continue;\n\t\t\t\t\n\t\t\t\tint x = id[1][st[j][k] | (1 << j)];\n\t\t\t\tif (id[0][st[j][k] | (1 << j)]) x += st[0][0];\n\t\t\t\tf[Now][x] += tmp;\n\t\t\t\tf[Now][x] -= f[Now][x] > mod? mod: 0;\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0;\n\tfor (int k = 1; k <= st[0][0]; k++)\n\t{\n\t\tans = ans + f[Now][k];\n\t\tans -= ans > mod ? mod: 0;\n\t}\n\tprintf (\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1564995778,
        "uid": 80695,
        "name": "Jayun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u6211\u611f\u89c9\u524d\u9762\u7684\u9898\u89e3\u6709\u4e9b\u8bb2\u7684\u4e0d\u662f\u5f88\u6e05\u695aqwq\uff0c\u6240\u4ee5\u6211\u53d1\u4e00\u7bc7\u3002\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u662f\u4e00\u4e2a\u72b6\u538bdp\uff0c\u4e0b\u9762\u6211\u8bf4\u4e0b\u601d\u8def\n\n1\u3001\u5148\u9884\u5904\u7406\u7b2ci\u884c\u7684\u8349\u5730\u72b6\u6001init[i]\uff0c\u538b\u7f29\u4e3a\u4e00\u4e2a\u6574\u6570\u3002\n\n2\u3001\u518d\u9884\u5904\u7406\u7b2ci\u884c\u4e0d\u76f8\u90bb\u7684\u72b6\u6001legal[i]\uff0c\u6bcf\u884c\u5171\u6709(1<<m)-1\u79cd\u72b6\u6001\uff0c\u4f46\u662f\u5f88\u591a\u662f\u5b58\u5728\u76f8\u90bb\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u63d0\u524d\u5904\u7406\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\u53ef\u4ee5\u5728\u72b6\u6001\u8f6c\u79fb\u4e2d\u964d\u4f4e\u5f88\u591a\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u67d0\u4e00\u72b6\u6001\u662f\u5426\u76f8\u90bb\u5462\uff1f\u53ea\u9700\u8981(i&(i<<1)==0)&&(i&(i>>1)==0)\u5c31\u53ef\u4ee5\u5224\u65ad,\u5982\u679c\u5b58\u5728\u76f8\u90bb\u60c5\u51b5\u5219\u5c06legal[i]\u7f6e\u4e3afalse\uff0c\u4e0d\u5b58\u5728\u76f8\u90bb\u5219\u4e3atrue\u3002\n\n3\u3001\u600e\u4e48\u5904\u7406\u53ea\u80fd\u653e\u5230\u80a5\u6c83\u7684\u8349\u5730\u5462\uff1f\u5bf9\u4e8e\u7b2ci\u884c\u7684\u5730\u5f62init[i]\u548c\u67d0\u4e00\u72b6\u6001j\uff0c\u5982\u679c\u679a\u4e3e\u5230\u7684init[i]&j==j\u5373\u8bf4\u660e\u4e86\u4e24\u4e2a\u72b6\u6001\u5b8c\u5168\u76f8\u540c\uff0c\u6ca1\u6709\u653e\u5230\u8d2b\u7620\u8349\u5730\u7684\u60c5\u51b5\u3002\n\n4\u3001\u5bf9\u4e8e\u7b2ci\u884c\u4e0d\u548ci-1\u884c\u6709\u8fde\u901a\u8349\u5730\uff0c\u679a\u4e3e\u4e0a\u4e00\u884c\u65b9\u6848k\uff0c\u8be5\u884c\u65b9\u6848j&k==0\u5373\u53ef\u6ee1\u8db3\u6761\u4ef6\u3002\n\n```cpp\n#include<cstdio>\n#include<bitset>\n#define ri register int\nusing namespace std;\nconst int mod=100000000; \ntemplate<typename TP>inline void read(TP&x)\n{\n    x=0;int f=1;char c=getchar();\n    while(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    x*=f;\n}\ntemplate<typename TP>inline void print(TP x)\n{\n    if(x<0)x=-x,putchar('-');\n    if(x>=10)print(x/10);\n    putchar(x%10+'0');\n}\nint dp[13][1<<12];//\u8be5dp\u7684\u72b6\u6001 dp[i][j]\u4e3a\u5728\u524di\u884c,\u6b64\u884c\u662f\u65b9\u6848j\u65f6\u7684\u65b9\u6848\u603b\u6570 \nbitset<1<<12>legal;//\u521d\u59cb\u5316\u4e00\u884c\u6bcf\u79cd\u53ef\u80fd\u653e\u725b\u65b9\u6848\u7684\u5408\u6cd5\u6027(\u6570\u7ec4\u4e0b\u6807\u7684\u4e8c\u8fdb\u5236\u4ee3\u8868\u72b6\u6001,\u5176\u4e2d\u5b58\u50a8\u7684true\u6216\u8005false\u8868\u793a\u8be5\u65b9\u6848\u662f\u5426\u53ef\u884c)\nint init[13];//\u6bcf\u884c\u7684\u521d\u59cb\u8349\u576a\u72b6\u6001(\u6570\u7ec4\u5185\u5b58\u50a8\u7684\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4ee3\u8868\u72b6\u6001)\nint n,m,temp,maxn,sum;\nint main()\n{\n\tread(n),read(m);\n\tfor(ri i=1;i<=n;++i)\n\t\tfor(ri j=1;j<=m;++j)\n\t\t\tread(temp),init[i]=(init[i]<<1)+temp;//\u5c06\u6bcf\u884c\u6709\u65e0\u8349\u576a\u7684\u521d\u59cb\u72b6\u6001\u538b\u7f29\u6210\u4e00\u4e2a\u6574\u6570 \n\tmaxn=(1<<m)-1;//\u6700\u5927\u72b6\u6001,\u5373\u5168\u90e8\u8349\u576a\u90fd\u653e\u725b\u65f6\u7684\u72b6\u6001 \n\tfor(ri i=0;i<=maxn;++i)\n\t\tif(!(i&i<<1)&&!(i&i>>1))//\u5982\u679c\u679a\u4e3e\u5230\u7684\u6b64\u79cd\u65b9\u6848\u4efb\u610f\u76f8\u90bb\u4e24\u683c\u4e4b\u95f4\u6ca1\u6709\u540c\u65f6\u653e\u725b,\u5219\u8fd9\u79cd\u65b9\u6848\u662f\u5408\u6cd5\u7684 \n\t\t\tlegal[i]=1;\n\tdp[0][0]=1;//\u521d\u59cb\u5316dp\u6570\u7ec4\n\tfor(ri i=1;i<=n;++i)//\u5faa\u73af\u6bcf\u4e00\u884c\n\t\tfor(ri j=0;j<=maxn;++j)//\u679a\u4e3e\u8be5\u884c\u7684\u65b9\u6848\n\t\t\tif(legal[j]&&(j&init[i])==j)//\u8be5\u79cd\u65b9\u6848\u5408\u6cd5\u5e76\u4e14\u6bcf\u5934\u725b\u6240\u5728\u4f4d\u7f6e\u4e0e\u6b64\u884c\u8349\u576a\u4e0a\u6709\u8349\u7684\u4f4d\u7f6e\u76f8\u540c\u5219\u8be5\u65b9\u6848\u53ef\u884c \n\t\t\t\tfor(ri k=0;k<=maxn;++k)//\u679a\u4e3e\u4e0a\u4e00\u884c\u65b9\u6848\n\t\t\t\t\tif(!(k&j))//\u5982\u679c\u8be5\u79cd\u65b9\u6848\u4e0e\u4e0a\u4e00\u884c\u65b9\u6848k\u4e0d\u5b58\u5728\u516c\u5171\u8fb9,\u5219\u53ef\u4ee5\u5728\u8be5\u65b9\u6848\u7d2f\u52a0\u4e0a\u4e00\u884c\u65b9\u6848k\u7684\u65b9\u6848\u603b\u6570\uff0c\u6b64\u65f6\u4e0d\u9700\u8981\u8003\u8651\u4e0a\u4e00\u884c\u65b9\u6848\u7684\u5408\u6cd5\u6027,\u56e0\u4e3a\u4e0a\u4e00\u79cd\u65b9\u6848\u4e0d\u5408\u6cd5\u5219\u672c\u8eab\u65b9\u6848\u6570\u5c31\u4e3a0 \n\t\t\t\t\t\tdp[i][j]=(dp[i][j]+dp[i-1][k])%mod;\n\tfor(ri i=0;i<=maxn;++i)\n\t\tsum=(sum+dp[n][i])%mod;//\u5c06\u524dn\u884c\u7684\u65b9\u6848\u603b\u6570\u7d2f\u52a0\n\tprint(sum);\n}\n```",
        "postTime": 1542704426,
        "uid": 118265,
        "name": "superMB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\uff08\u975e\u65b0\u624b\u5411\uff0c\u53ea\u662f\u770b\u5230\u4f3c\u4e4e\u6ca1\u4eba\u7528\u8bb0\u641c\uff0c\u4ee3\u7801\u4e5f\u6bd4\u8f83\u957f\u624d\u53d1\u7684\u8fd9\u4e2a\uff09\n\n\u50cf\u8fd9\u6837\u7684\u72b6\u538bdp\u9898\u80fd\u7528\u516c\u5f0f\u586b\u8868\u5f53\u7136\u4e5f\u80fd\u7528\u8bb0\u641c\u5566~\u672c\u849f\u84bb~~\u4e0d\u4f1a\u9012\u63a8\u6240\u4ee5~~\u6bd4\u8f83\u559c\u6b22\u8bb0\u641c\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\uff0c\u5f88\u77ed\u7684\uff0c\u6ce8\u91ca\u6253\u4e0a\u53bb\u4e86\uff0c\u6709\u7591\u95ee\u6b22\u8fce\u9a9a\u6270~~\n\n```cpp\n//\u4ee5\u4e0b\u7684\u72b6\u6001i\uff08\u6216\u8005\u7c7b\u4f3c\u8868\u8fbe\uff09\u7684\u610f\u601d\u662f\uff0c\u5c06i\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u6570\u540e\uff0c\u57281\u7684\u4f4d\u7f6e\u79cd\u4e1c\u897f\uff0c0\u7684\u4f4d\u7f6e\u4e0d\u79cd\u4e1c\u897f\u3002eg.\u72b6\u6001\u4e3a5\uff08\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a101\uff09\u8868\u793a\u53ea\u6709\u5012\u6570\u7b2c1,3\u4e2a\u4f4d\u7f6e\u79cd\u8349\u7684\u72b6\u6001\uff0c\n#include<cstdio>\n#include<cstring>\n#define N 12\n#define MOD 100000000\nint a[N+1];//\u628a\u6bcf\u4e00\u884c\u80a5\u6c83\u7a0b\u5ea6\u538b\u7f29\u6210\u4e8c\u8fdb\u5236\u6570\u5b58\u50a8\nlong long ans[N+2][1<<N];//f[i][j]\u8868\u793a\u7b2ci\u884c\u72b6\u6001\u4e3aj\u65f6\u5176\u4e0b\u9762\u51e0\u884c\u7684\u603b\u65b9\u6848\u6570\nint n,m;\nint dfs(int cur,int p)//\u6b63\u5728\u5904\u7406\u7b2ccur\u884c\uff0c\u4e0a\u4e00\u884c\u72b6\u6001\u4e3ap \n{\n\tif(ans[cur][p])return ans[cur][p];//\u8bb0\u5fc6\u5316\u641c\u7d22\u6838\u5fc3\uff0c\u641c\u8fc7\u7684\u5c31\u4e0d\u641c\u4e86\uff0c\u6389\u4e86\u8fd9\u53e5\u4f1a\u4e25\u91cd\u8d85\u65f6\n\tif(cur==n+1)return 1;//\u5df2\u7ecf\u641c\u5b8c\u4e86\u4e00\u904d\uff0c\u627e\u5230\u4e86\u4e00\u79cd\u65b9\u6848\n\tbool book[1<<N];//\u6807\u8bb0\u672c\u6b21\u641c\u7d22\u4e2d\u54ea\u4e9b\u72b6\u6001\u5df2\u7ecf\u641c\u8fc7\uff0c\u7531\u4e8e\u540e\u671f\u679a\u4e3e\u7b2ccur\u884c\u7684\u5408\u6cd5\u72b6\u6001\u7684\u65f6\u5019\u8981\u628a\u4e0d\u80a5\u6c83\u7684\u5730\u65b9\u7f6e\u96f6\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u679a\u4e3e1~1<<n\u7684\u65f6\u5019\u5f88\u6709\u53ef\u80fd\u679a\u4e3e\u5230\u4e00\u4e2a\u5df2\u7ecf\u7b97\u8fc7\u7684\u72b6\u6001\uff0c\u7ed3\u679c\u4f1a\u56e0\u4e3a\u91cd\u590d\u8ba1\u7b97\u800c\u504f\u5927\u3002\u5177\u4f53\u89e3\u91ca\u89c1\u4e0b\u65b9\u6ce8\u91ca\u3002\n\tmemset(book,0,sizeof(book));//\u521d\u59cb\u5316\n\tfor(int i=0;i<1<<m;i++)\n\t{\n\t\tif(i&(i<<1)||i&p)continue;//i&(i<<1)==true\u5219\u8868\u793a\u5f53\u524d\u679a\u4e3e\u5230\u7684\u72b6\u6001\u4e2d\u6709\u76f8\u90bb\u7684\u8349\uff0c\u4e0d\u5408\u6cd5\u3002i&p\u8868\u793a\u4e0e\u4e0a\u9762\u4e00\u884c\u7684\u67d0\u4e00\u5757\u8349\u5730\u76f8\u90bb\uff0c\u4e5f\u4e0d\u5408\u6cd5\u3002\u4e24\u79cd\u60c5\u51b5\u90fd\u8df3\u8fc7\u3002\n\t\tint t=i&a[cur];//\u8fd9\u5c31\u662f\u4e0a\u6587\u63d0\u5230\u7684\u628a\u80fd\u79cd\u8349\u7684\u5730\u65b9\u8fc7\u6ee4\u51fa\u6765\uff0c\u7ec6\u7ec6\u4e00\u60f3book\u7684\u4f5c\u7528\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\u3002\u6bd4\u5982\u5f53i=2\u62167\u65f6\uff0c\u8868\u793a\u72b6\u6001\u5206\u522b\u4e3a10\u548c111\uff0c\u5012\u6570\u7b2c\u4e8c\u4f4d\u90fd\u79cd\u4e0a\u4e86\uff0c\u5f53\u8fd9\u4e00\u884c\u7684\u80a5\u6c83\u7a0b\u5ea6\u4e3a010\u65f6\uff0ci=2\u4e0ei=7\u4e24\u6b21\u90fd\u641c\u5230\u4e86010\uff0c\u91cd\u590d\u8ba1\u7b97\u7ed3\u679c\u504f\u5927\u3002\n\t\tif(book[t])continue;//\u5df2\u7ecf\u641c\u8fc7\u7684\u5c31\u8df3\u8fc7\n        //\u6b64\u65f6\u641c\u5230\u7684\u72b6\u6001t\u5c31\u662f\u5408\u6cd5\u7684\n\t\tans[cur][p]+=dfs(cur+1,t);ans[cur][p]%=MOD;//\u7d2f\u52a0\u65b9\u6848\u6570\u5e76\u53d6\u6a21\uff0c\u56e0\u6b64\u51fd\u6570\u8fd4\u56de\u503c\u4e0d\u5fc5\u7528long long \n\t\tbook[t]=true;//\u6807\u8bb0\u5df2\u7ecf\u641c\u8fc7\n\t}\n\treturn ans[cur][p];\n}\nint main()\n{\n\tint i,j,t;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t\t{scanf(\"%d\",&t);a[i]<<=1;a[i]|=t;}//\u4e8c\u8fdb\u5236\u5b58\u56fe\n\tprintf(\"%d\",dfs(1,0));//\u4e0a\u4e00\u5c42\u72b6\u6001\u4e3a0\uff0c\u7b2c\u4e00\u5c42\u7684\u641c\u7d22\u4e0d\u53d7\u5f71\u54cd\uff0cdfs(1,0)\u8ba1\u7b97\u51fa\u6765\u7684\u81ea\u7136\u5c31\u662f\u603b\u65b9\u6848\u6570\u4e86\n    return 0;\n}\n```\n30ms\uff0c\u8fd8\u884cQWQ",
        "postTime": 1534933370,
        "uid": 59142,
        "name": "Lacer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u63a8\u5e7f\u4e00\u4e0b**\u8f6e\u5ed3\u7ebfDP**\n\n\u8003\u8651\u73b0\u5728\u6b63\u5728\u51b3\u5b9a\u4e0b\u56fe\u4e2d$x(2,2)$\u70b9\u7684\u53d6\u820d\uff0c\u5047\u8bbe\u73b0\u5728\u6240\u6709\u683c\u5b50\u5168\u90e8\u65e0\u969c\u788d\n\n|- |   0   |   1   |   2   |   3   |\n|:-| :---: | :---: | :---: | :---: |\n|1 |   ?   |   ?   | $k_3$ | $k_4$ |\n|2 | $k_1$ | $k_2$ |  $x$  |   0   |\n\n\u6211\u4eec\u5047\u8bbe\u8ba9$x$\u540e\u9762\u5168\u4e0d\u653e\u4e1c\u897f\uff08\u4e3a0\uff09\n\n\u4e5f\u5c31\u662f\u8bf4$x$\u53d6\u4e0d\u53d6\u53ea\u53d7\u5230$k2$ $k3$\u7684\u9650\u5236\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u4e8c\u8fdb\u5236\u6570$k=k_1k_2k_3k_4$\n\u6765\u8868\u793a\u5f53\u524d\u8f6e\u5ed3\u7ebf\u4e3a$k$\uff0c\n\u5176\u4e2d\u4e8c\u8fdb\u5236\u6570$k$\u4e2d\u5728$x$\u70b9\u53ca\u5176\u540e\u9762\u7684\u4f4d\u7f6e\u8868\u793a\u4e0a\u4e00\u5c42\u7684\u72b6\u6001\uff0c$x$\u4f4d\u7f6e\u524d\u9762\u7684\u6570\u8868\u793a\u5f53\u524d\u5c42\u7684\u72b6\u6001\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f4d\u8fd0\u7b97\u83b7\u5f97$x$\u70b9\u4e0a\u9762\u548c\u5de6\u9762\u7684\u72b6\u6001\u7136\u540e\u5bf9\u7ed3\u679c\u8fdb\u884c\u8f6c\u79fb\n\n\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n\n\tf[i][k] += f[i - 1][k];//\u4e0d\u53d6\u70b9(i,j)\n\tf[i][k ^ (1<<j)] += f[i - 1][k];//\u53d6\u70b9(i,j)\n    \n\u8fd9\u6837\u5c31OK\u4e86\n\n**\u7b49\u7b49\uff0c\u597d\u50cf\u6709\u4ec0\u4e48\u4e0d\u5bf9**\n\n\u5728\u4e0a\u4e2a\u56fe\u4e2d\uff0c\u5f53\u6211\u4eec\u9009\u62e9\u53d6\u70b9$x$\u7684\u65f6\u5019\uff0c\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u4e3a\n$k_1k_21k_4$\uff0c\n\u4f46\u6211\u4eec\u60f3\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u662f\n$k_1k_210$\n\n**\u90a3\u600e\u4e48\u529e\u5462\uff1f**\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u5e76\u4e0d\u5f71\u54cd\u6211\u4eec\u7edf\u8ba1\u7b54\u6848\uff0c\u5373$f[i][k_1k_2k_3k_4]$\u8868\u793a\u7684\u662f\u72b6\u6001\uff1a$k_1k_2k_3k_4$\uff0c$k_1k_2k_30$\u4e2d\u7684\u4e00\u90e8\u5206\uff0c$k_1000$\u4e2d\u7684\u4e00\u90e8\u5206\uff0c$0000$\u4e2d\u7684\u4e00\u90e8\u5206\u52a0\u5728\u4e00\u8d77\u7684\u603b\u548c\n\n\u8fd9\u6837\u6211\u4eec\u518d\u5904\u7406\u4e00\u4e0b\u6709\u969c\u788d\u7684\u60c5\u51b5\u5373\u4e00\u4e9b\u5c0f\u7ec6\u8282\u5c31\u53ef\u4ee5A\u6389\u8fd9\u9898\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nm2^m)$\u6700\u6162\u7684\u70b9\u7528\u4e86$0s$\n\n~~\uff08\u501f\u9274\u4e86\u697c\u4e0b\u7684\u697c\u4e0b\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u4ed6\u592a\u5f3a\u5566\u4ee5\u81f3\u4e8e\u89e3\u91ca\u597d\u5c11\uff0c\u6211\u53ea\u597d\u5c31\u5728\u8fd9\u91cc\u628a\u505a\u9898\u65f6\u6211\u7684\u601d\u8003\u5199\u4e0b\u6765\uff0c\u5199\u4e00\u7bc7\u8ba9\u548c\u6211\u4e00\u6837\u7684\u849f\u84bb\u4e5f\u80fd\u770b\u61c2\u7684\u9898\u89e3\u54af\uff09~~\n\n##  code\n```cpp\n//#include <iostream>\n#include <cstdio>\n#include <cstring>\n\n#define MAXN 15\n#define mod 100000000\n#define INF 0x7fffffff\n#define ll long long\n#define rep(i, a, b) for (int i = a; i <= b; i++)\n#define foi(i, a, b) for (int i = a; i >= b; i--)\n\nint abs(int x) { return x > 0 ? x : -x; }\nint max(int x, int y) { return x > y ? x : y; }\nint min(int x, int y) { return x < y ? x : y; }\n\nint read() {\n\tint ans = 0; char ch = getchar(), t = ch;\n\twhile (ch < '0' || ch > '9') { t = ch; ch = getchar(); }\n\twhile (ch >= '0' && ch <= '9') { ans = ans * 10 + ch - '0'; ch = getchar(); }\n\tif (t == '-') ans = -ans; return ans;\n}\n\nusing namespace std;\n\nint a[MAXN][MAXN], f[2][(1 << MAXN)];\n//\u56e0\u4e3adp\u65f6\u5f53\u524d\u8fd9\u5c42\u53ea\u4e0e\u4e0a\u4e00\u5c42\u6709\u5173\uff0c\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\n\nint main() {\n/*\tfreopen(\".in\", \"w\", stdin);\n\tfreopen(\".out\", \"r\", stdout);*/\n\tint n = read(), m = read(), nown = 0;\n\trep(i, 1, n) rep(j, 0, m - 1) a[i][j] = read();\n\tf[0][0] = 1;\n\trep(i, 1, n) rep(j, 0, m - 1) {//\u679a\u4e3e(i,j)\u70b9\u653e\u4e0d\u653e\n\t\tnown ^= 1; memset(f[nown], 0, sizeof(f[nown]));\n\t\trep(k, 0, (1 << m) - 1) {//\u679a\u4e3e\u8f6e\u5ed3\u7ebf\n\t\t\tint up = (1 << j) & k, left = (j > 0 ? (1 << (j - 1)) & k : 0);\n\t\t\t//\u627e\u5230\u5de6\u9762\u3001\u4e0a\u9762\u6709\u6ca1\u6709\u4e1c\u897f\n\t\t\tif ((i == 1 && up) || (!j && left)) continue;\n\t\t\t//\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\n\t\t\tif (up) {//\u5f53\u524d\u4f4d\u7f6e\u4e0d\u80fd\u9009\n\t\t\t\tf[nown][k ^ (1<<j)] = (1ll * f[nown][k ^ (1<<j)] + f[nown^1][k]) % mod;\n\t\t\t\tcontinue;\n\t\t\t}//\u6ce8\u610f\u8fd9\u91cc\u56e0\u4e3a\u8f6e\u5ed3\u7ebfk\u5728j\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a1\uff0c\u8981\u6539\u62100\n\t\t\tif (left || !a[i][j]) {//\u5f53\u524d\u4f4d\u7f6e\u4e0d\u80fd\u9009\n\t\t\t\tf[nown][k] = (1ll *  f[nown][k] + f[nown ^ 1][k]) % mod;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//\u4ee5\u4e0b\u4e3a\u53ef\u9009\u53ef\u4e0d\u9009\n\t\t\tf[nown][k] = (1ll * f[nown][k] + f[nown ^ 1][k]) % mod;//\u4e0d\u9009\n\t\t\tf[nown][k ^ (1<<j)] = (1ll * f[nown][k ^ (1<<j)] + f[nown^1][k]) % mod;//\u9009\n\t\t}\n\t}\n\tint ans = 0;\n\trep(i, 0, (1 << m) - 1) ans = (1ll * ans + f[nown][i]) % mod;\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```\n\n\u987a\u4fbf\u5410\u69fd\u4e0bluogu\u6570\u636e\u592a\u5f31\u4e86\uff1a\n```cpp\nf[nown][k ^ (1<<j)] = (1ll * f[nown][k ^ (1<<j)] + f[nown^1][k]) % mod;//\u9009\n```\n\u5199\u6210\n```cpp\nf[nown][k ^ (1<<j)] += (1ll * f[nown][k ^ (1<<j)] + f[nown^1][k]) % mod;//\u9009\n```\n\u5c45\u7136AC\u4e86\uff1f\uff1f",
        "postTime": 1533372537,
        "uid": 74874,
        "name": "laeva",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u6ca1\u4eba\u6765\u4e2a\u641c\u7d22\uff0c\u6211\u6765\u63d2\u4e2a\u7a7a\u3002(\u8fd9\u4e2a\u5bf9\u521d\u5b66\u8005\u7406\u89e3\u8d77\u6765\u8981\u5bb9\u6613)\n\n\n\u5176\u5b9e\u5c31\u662f\u4e24\u79cd\u9009\u62e9,\u653e\u548c\u4e0d\u653e.\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\nconst int maxn=(1<<16);\nint m,n;\nint ans=0;\nint mod=100000000;\nint f[30][maxn],a[30];\nvoid dfs(int i,int j,int state,int nex)//state\u8868\u793a\u5f53\u524d\u884c\u72b6\u6001\uff0c\n{//nex\u8868\u793a\u4e0b\u4e00\u884c\u72b6\u6001\n    if(j>=n)\n    {\n        f[i+1][nex]+=f[i][state];\n        f[i+1][nex]%=mod;//\u8fd9\u4e2a\u8981\u53d6\u4f59,\u9632\u6b62\u4e2d\u95f4\u8fc7\u7a0b\u6ea2\u51fa.\n        return;\n    }\n    dfs(i,j+1,state,nex);//\u8fd9\u4e00\u4e2a\u70b9\u4e0d\u653e\n    if(!((1<<j)&state)) dfs(i,j+2,state,nex|(1<<j));//\u8fd9\u4e00\u4e2a\u70b9\u5982\u679c\u80fd\u653e\u5c31\u653e\n    return;\n}\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;i++)\n    for(int j=0;j<n;j++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        if(x==0)\n        a[i]=a[i]|(1<<j);\n    }\n    f[1][a[1]]=1;//\u5f53\u7b2c\u4e00\u884c\u4ec0\u4e48\u4e5f\u4e0d\u653e\u65f6\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\n    for(int i=1;i<=m;i++)\n    for(int j=a[i];j<(1<<n);j++)//\u8fd9\u513f\u4ecea[i]\u5f00\u59cb\u5c31\u884c\u4e86\n```\n{//\u56e0\u4e3a\u653e0\u4e2a\u5c31\u662fa[i],\u6ca1\u6709\u6bd4\u5b83\u66f4\u5c11\u4e86.\n```cpp\n        if(f[i][j])\n        dfs(i,0,j,a[i+1]);\n    }\n    for(int i=0;i<(1<<n);i++)\n    {if(f[m+1][i]){ans+=f[m+1][i];ans%=mod;}}//\u6ce8\u610f\u6700\u540e\u52a0\u7684\u662fm+1\u884c.\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1496019152,
        "uid": 35647,
        "name": "huihao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/wzc-wwwwd/)\n\n[P1879 \u3010\\[USACO06NOV\\]\u7389\u7c73\u7530Corn Fields\u3011\u4f20\u9001\u95e8](https://www.luogu.org/problem/P1879)\n\n### \u6b64\u9898\u7b97\u6cd5:\u72b6\u538bdp\n\n\u662f\u6c34\u9898\uff0c\u5f53\u88ab\u6574\u4e86\u4e00\u5929\u7684\u6211\u771f\u7684\u4e0d\u80fd\u8fd9\u4e48\u8bf4\n\n\u5927\u81f4\u505a\u6cd5:\n\n>1.$dp[i][j]$\u4e2d$j$\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c$i$\u8868\u793a\u7b97\u5230\u524d$i$\u884c\uff0c$j$\u8868\u793a\u7b2c$i$\u884c\u7684\u72b6\u6001($0$\u8868\u793a\u7a7a\uff0c$1$\u8868\u793a\u7389\u7c73)$dp[i][j]$\u7684\u503c\u4e3a\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u79cd\u6cd5\u79cd\u6570\u3002\n\n>2.$full$\u8868\u793a\u6ee1\u7389\u7c73\u72b6\u6001\uff0c$sp[i]$\u7684\u503c\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u8868\u793a\u80a5\u6c83\u571f\u5730\u7684\u72b6\u6001\u3002\u7531\u4e8e\u9898\u76ee\u6709\u7389\u7c73\u4e0d\u76f8\u90bb\u7684\u8981\u6c42\uff0c\u6240\u4ee5\u6784\u5efa$C$\u5e03\u5c14\u6570\u7ec4\uff0c$C[i]=ture$\u8868\u793a$i$\u8fd9\u79cd\u60c5\u51b5\u7b26\u5408\u65e0\u7389\u7c73\u76f8\u90bb\u3002\u522b\u5fd8\u4e86\u4f4d\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u4f4e\u4e8e\u6bd4\u8f83\u7b26\uff0c\u8ba1\u7b97\u673a\u4f1a\u5148\u7b97$i==0$\u518d\u7b97$(i<<1)\\& 1$\u3002\n\n>3.$ $\u679a\u4e3e\u6bcf\u884c$i$\uff0c\u6bcf\u4e2a\u72b6\u6001$j$\u3002\u5982\u679c\u5f53\u524d\u72b6\u6001\u571f\u5730\u53ef\u4ee5\u79cd\u690d\uff0c\u5373$(sp[i]\\& j)==j$(\u610f\u601d\u5c31\u662f$j$\u4e2d\u7684$1$\u88ab$sp[i]$\u4e2d\u7684$1$\u6240\u5305\u542b)\uff0c\u5e76\u4e14$C[i]$\u5c31\u518d\u679a\u4e3e\u4e0a\u4e00\u884c\u7684\u6bcf\u4e2a\u72b6\u6001~~\u5bf9\u8fd9\u5c31\u662f\u4e0d\u4f1a\u8d85\u65f6~~\u5e76\u52a0\u4e0a\u5176\u4e2d\u4e0e$j$\u4e92\u4e0d\u8986\u76d6\u7684\u72b6\u6001\u7684\u503c\u3002\n\n>4.$ $\u7edf\u8ba1\u6700\u540e\u4e00\u884c\u6240\u6709\u72b6\u6001\u7684\u503c\u7684\u548c$ans$\uff0c\u8fd9\u5c31\u662f\u7b54\u6848\u3002\u522b\u5fd8\u4e86\u79cd\u7c7b\u503c\u76f8\u52a0\u65f6$\\%$\u4e00$\\% 10^8$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=13,M=1e8;\nint n,m,sp[N],full;\nint dp[N][1<<N],ans;\nbool a,C[1<<N];\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tsp[0]=full=(1<<m)-1;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(a) sp[i]|=(1<<(j-1));\t\t\t\n\t\t}\n\t} for(int i=0;i<=full;i++)\n\t\tC[i]=(((i<<1)&i)==0);\n\tdp[0][0]=1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=0;j<=full;j++)\n\t\t\tif((sp[i]&j)==j&&C[j])\n\t\t\t\tfor(int k=0;k<=full;k++)\n\t\t\t\t\tif((k&j)==0)\n\t\t\t\t\t\tdp[i][j]=(dp[i][\n\t\t\t\t\t\tj]+dp[i-1][k])%M;\n\tfor(int i=0;i<=full;i++)\n\t\tans=(ans+dp[n][i])%M;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\u4e0d\u61c2\u8fd0\u7b97\u4f18\u5148\u7ea7\u771f\u4f1a\u5bb3\u6b7b\u4eba\uff01\n\n\u8c22\u8c22\u5927\u5bb6! !\n",
        "postTime": 1566565421,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u8fd9\u9898\u867d\u7136\u662f\u4e00\u9053\u72b6\u538b\u5165\u95e8\u597d\u9898\uff0c\u4f46\u662f\u5c45\u7136\u6ca1\u4eba\u7528$FWT$\u505a\u771f\u662f\u53ef\u60dc\u2026\u2026\n\n\u9996\u5148\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a$dp[i][S]=\\sum_{T\\&S=0}dp[i-1][T]$\uff0c\u5176\u4e2d$S$\u4e3a\u5408\u6cd5\u72b6\u6001\uff0c\u8fd9\u4e2a\u5c31\u662f\u7ec6\u8282\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u8ddf$FWT$\u7684\u5f62\u5f0f\u975e\u5e38\u76f8\u4f3c\uff0c\u90fd\u662f\u4e0b\u6807\u8fdb\u884c\u4f4d\u8fd0\u7b97\u7136\u540e\u7d2f\u52a0\uff0c\u7136\u540e\u6211\u4eec\u628a\u8fd9\u4e2a\u5f0f\u5b50\u53d8\u4e00\u4e0b\u5f62\uff1a\n\n$\\sum_{T\\&S=0}dp[i-1][T]=\\sum_{T|(\\sim S)=\\sim S}dp[i-1][T]$\n\n\u89e3\u91ca\u4e00\u4e0b\uff0c\u56e0\u4e3a$S$\u4e0e$T$\u6ca1\u6709\u4ea4\u96c6\uff0c\u4e5f\u5c31\u662f\u8bf4$T$\u662f$S$\u7684\u8865\u96c6\u7684\u5b50\u96c6\uff0c\u5373$T|(\\sim S)=\\sim S$\uff0c\u90a3\u4e48\u5c31\u8f6c\u5316\u4e3a\u4e86$\\sum_{j|i=i}A_j$\u7684\u5f62\u5f0f\uff0c\u8fd9\u4e0d\u88f8\u7684$FWT$\uff1f\u76f4\u63a5\u7528$or$\u5377\u79ef\u7684$FWT$\u5728$O(m2^m)$\u7684\u65f6\u95f4\u5185\u5904\u7406$dp[i-1]$\u6570\u7ec4\uff0c\u7136\u540e\u5c31\u80fd$O(1)$\u8f6c\u79fb\u4e86\u3002\n\n\u7136\u540e\u65f6\u95f4\u590d\u6742\u5ea6$O(nm2^m)$\u6bd4\u5927\u90e8\u5206\u4eba\u7684\u66b4\u529b$dp$\u4f18\u8d8a~~\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll long long\n#define p 100000000\nusing namespace std;\nnamespace ywy{\n\tinline void fwt(int n,ll *f){//FWT\u677f\u5b50 \n\t\tfor(register int bit=2;bit<=n;bit<<=1){\n\t\t\tfor(register int i=0;i<n;i+=bit){\n\t\t\t\tfor(register int j=i;j<i+(bit>>1);j++){\n\t\t\t\t\tf[j+(bit>>1)]=(f[j]+f[j+(bit>>1)])%p;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tll dp[13][4097];//dp\n\tint s[13];//\u8fd9\u884c\u4e0d\u80fd\u653e\u7684\u4f4d\u7f6e\u96c6\u5408\uff08\u5224\u65ad\u72b6\u6001\u5408\u6cd5\u6027\uff09 \n\tunsigned char bv[4097];//\u8fd9\u4e2a\u72b6\u6001\u91cc\u662f\u5426\u6709\u76f8\u90bb\u76841 \uff08\u5224\u65ad\u72b6\u6001\u5408\u6cd5\u6027\uff09 \n\tvoid ywymain(){\n\t\tint n,m;cin>>n>>m;for(register int i=0;i<(1<<m);i++){\n\t\t\tint lst=-1234;int tmp=i;while(tmp){//\u5224\u65ad\u72b6\u6001\u662f\u5426\u6709\u76f8\u90bb\u76841\uff0c\u4e0d\u65ad\u53d6lowbit\u5224\u65ad \n\t\t\t\tint lb=tmp&(-tmp);if(lb==(lst<<1)){\n\t\t\t\t\tbv[i]=1;break;\n\t\t\t\t}tmp-=lb;lst=lb;\n\t\t\t}\n\t\t}\n\t\tfor(register int i=1;i<=n;i++){\n\t\t\tfor(register int j=0;j<m;j++){\n\t\t\t\tint a;cin>>a;if(!a)s[i]|=(1<<j);//\u8bfb\u5165\u6bcf\u884c\u72b6\u6001 \n\t\t\t}\n\t\t}\n\t\tfor(register int i=0;i<(1<<m);i++){\n\t\t\tif(bv[i])continue;if(i&s[1])continue;dp[1][i]=1;//\u9884\u5904\u7406\u7b2c\u4e00\u884c \n\t\t}\n\t\tfor(register int i=2;i<=n;i++){\n\t\t\tfwt(1<<m,dp[i-1]);//\u5bf9\u4e0a\u4e00\u884c\u7684dp\u6570\u7ec4\u505a\u4e00\u4e2afwt \n\t\t\tfor(register int j=0;j<(1<<m);j++){\n\t\t\t\tif(j&s[i])continue;if(bv[j])continue;\n\t\t\t\tdp[i][j]=dp[i-1][((1<<m)-1)^j];//\u6ce8\u610f\u53d6\u8865\u96c6 \n\t\t\t}\n\t\t}\n\t\tll ans=0;for(register int i=0;i<(1<<m);i++)ans=(ans+dp[n][i])%p;cout<<ans<<endl;//\u7edf\u8ba1\u7b54\u6848 \n\t}\n}\nint main(){\n\tywy::ywymain();return(0);\n}\n```",
        "postTime": 1542863170,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e2a\u88f8\u72b6\u538b\u9898\uff0c\u771f\u7684\u5f88\u6c34\u3002\u3002\u3002\n \n\u9898\u76ee\u5927\u81f4\u610f\u601d\u662f\u8bf4\u6709\u4e00\u5757\u5730\uff0c\u6bcf\u4e00\u683c\u90fd\u662f\u4e00\u5757\u6b63\u65b9\u5f62\u7684\u571f \u5730\uff08\u4ec0\u4e48\u9b3c\uff09\uff0c\u6709\u8bb8\u591a\u5976\u725b\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u6709\u591a\u5c11 QAQ ,\u53cd\u6b63 \u6709\u5f88\u591a\u5f88\u591a\u5976\u725b\uff0c\u4e00\u5b9a\u6bd4\u5730\u591a\uff09\u3002\n \n\u6709\u4e9b\u5730\u4e0d\u80fd\u7528\uff0c\u76f8\u5f53\u4e8e\u4e0d\u80fd\u653e\u725b\u3002\u5e76\u4e14\uff0c\u5976\u725b\u4eec\u559c\u6b22\u72ec\u5360\u4e00 \u5757\u5730\u7684\u611f\u89c9\uff08\u5730\u4e3b\uff09\uff0c\u6240\u4ee5\u4e24\u5934\u5976\u725b\u4e0d\u80fd\u76f8\u90bb\u3002\n \n\u5728\u4e0d\u76f8\u90bb\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u8bb8\u591a\u53ef\u884c\u65b9\u6848\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d \u653e\u5976\u725b\u3002\u95ee\u6709\u591a\u5c11\u79cd\u53ef\u884c\u65b9\u6848\u3002\n\n\n**\u4ece\u95ee\u9898\u4e0e\u7ed3\u679c\u51fa\u53d1**\n\n\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u77e5\u9053\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662f\u5728\u7b2cM\u884c\u3001\u6700\u540e\u4e00\u4e2a\u72b6 \u6001\u65f6\uff0c\u524dM\u884c\u6240\u6709\u53ef\u884c\u65b9\u6848\u4e4b\u548c\u3002\n \n\u5206\u89e3\u6210\u6bcf\u4e00\u4e2a\u9636\u6bb5\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u7b2c i \u884c\u3001\u7b2c j \u4e2a\u72b6\u6001 \u65f6\uff0c\u524d i \u884c\u6240\u6709\u53ef\u884c\u65b9\u6848\u4e4b\u548c\u3002\n \n\u4e8e\u662f\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a f \u6570\u7ec4\uff0c\u7531\u4e8e f[i][j]\u80af\u5b9a\u662f\u4ece\u7b2ci-1\u884c\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5728\u7b2c0\u884c,\u7b2c1\u4e2a\u72b6\u6001\u65f6\u5c31\u8981\u8d4b\u597d\u521d\u59cb\u503c\u3002\n \nf[0][0]= 1; / / \u7b2c\u4e00\u4e2a\u72b6\u6001\u4ece\u4e0b\u68070\u5f00\u59cb\n\n**\u5982\u4f55\u627e\u5230\u53ef\u884c\u72b6\u6001\uff1f**\n\n\u6211\u4eec\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u9898\u7684\u601d\u8def\u5e94\u8be5\u662f\u66b4\u529b\u641c\u7d22\uff0c\u53bb\u4ee5\u5b9e\u9645 \u7684\u7a7a\u95f4\u53bb\u4e00\u6b65\u4e00\u6b65\u641c\u7d22\u56de\u6eaf\u3002\u8fd9\u4e2a\u601d\u8def\u4e5f\u662f\u5bf9\u7684\u3002 \u5176\u5b9e\u52a8\u89c4\u4e0e\u66b4\u641c\u7684\u601d\u8def\u5dee\u4e0d\u591a\u3002\u53ea\u9700\u8981\u5224\u65ad\u4e0e\u5de6\u53f3\u548c\u4e0a \u4e00\u884c\u662f\u5426\u51b2\u7a81\u3002 \u6211\u4eec\u5728\u5224\u65ad\u8fd9\u4e2a\u72b6\u6001\u662f\u5426\u6210\u7acb\u7684\u65f6\u5019\uff0c\u72b6\u6001\u88ab\u4e8c\u8fdb\u5236\u538b \u7f29\u4e86\uff0c\u6240\u4ee5\u4f4d\u7f6e\u672c\u8eab\u662f\u5426\u53ef\u884c\uff0c\u5c31\u4e5f\u8981\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u3002\u4e8e \u662f\u5b9a\u4e49\u4e00\u4e2a map \u6570\u7ec4\u7528\u4e8c\u8fdb\u5236\u5b58\u50a8\u3002 \u7528\u6765\u5224\u65ad\u7684\u65f6\u5019\u53ea\u9700\u8981\u53d6\u53cd\u5373\u53ef\u3002 \n\n```cpp\nfor(int i=1;i<=m;i++)\n\tfor(int j=1;j<=n;j++){\n    x=read();\n    map[i]=(map[i]<<1)+x; \n }\n```\n\n\u4e0a\u4ee3????:\n\n```cpp\n//luogu 1879\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,ans,x,mod=1e8;\nint mapp[20],f[20][4100];\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n    while(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nsigned main(){\n    m=read();n=read();\n    for(int i=1;i<=m;i++){\n        for(int j=1;j<=n;j++){\n            x=read();mapp[i]=(mapp[i]<<1)+x;\n        }\n    }\n    f[0][0]=1;\n    for(int i=1;i<=m;i++) {\n        for(int j=0;j<=(1<<n)-1;j++){\n            if(!(j&(j<<1))&&!(j&(j>>1))&&!(j&(~mapp[i]))){\n                for(int k=0;k<=(1<<n)-1;k++){\n                   if(!(k&(k<<1))&&!(k&(k>>1))&&!(k&(~mapp[i-1]))&&!(j&k)) f[i][j]+=f[i-1][k];\n                }\n            }\n        }\n    }\n    for(int i=0;i<=(1<<n)-1;i++) ans+=f[m][i];\n    printf(\"%d\",ans%mod);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1573646617,
        "uid": 112522,
        "name": "WSJwsj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u5176\u5b9e\u662f`P1896 [SCOI2005]\u4e92\u4e0d\u4fb5\u72af`\u7684\u5f31\u5316\u7248\u3002\n\n\u6211\u4eec\u8bbe\u8ba1\u65b9\u7a0b`f[i][j]`\u4ee3\u8868\uff0c\u9009\u62e9\u524d$i$\u884c\uff0c\u72b6\u6001\u4e3a$j$\u65f6\u7684\u65b9\u6848\u603b\u6570\u3002\n\n\u8fd9\u79cd\u6c42\u65b9\u6848\u6570\u7684\u9898\u76ee\u90fd\u662f\u8fd9\u6837\u7684\u5957\u8def\uff0c\u8bbe\u8ba1\u65b9\u7a0b\u7684\u65f6\u5019\u4e5f\u8981\u5411\u8fd9\u79cd\u65b9\u7a0b\u5f62\u5f0f\u9760\u62e2\u3002\n\n\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u65b9\u7a0b\u5982\u4f55\u8f6c\u79fb\u3002\n\n\u6211\u4eec\u8bbe\u4e24\u4e2a\u72b6\u6001$h,g$\uff0c\u5e76\u4e14\u4fdd\u969c$h,g$\u4e0d\u51b2\u7a81\u4e14\u5408\u6cd5\u3002\n\n\u4e8e\u662f`f[i][h] += {f[i - 1][g]}.`\n\n\u90a3\u4e48\u6700\u540e\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5224\u65ad$h,g$\u662f\u5426\u51b2\u7a81\u3002\n\n\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u5f53$h\\&j=0$\u65f6\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u51b2\u7a81\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6309\u4f4d\u4e4b\u95f4\u6ca1\u6709\u76f8\u540c\u7684$1.$\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ea\u9700\u8981\u9884\u5904\u7406\u51fa\u6765\u6bcf\u4e00\u884c\u6446\u653e\u7684\u6240\u6709\u60c5\u51b5\uff0c\u7136\u540e\u518d\u6839\u636e\u6bcf\u4e00\u884c\u7684\u8349\u576a\u60c5\u51b5\u8fdb\u884c\u51b3\u7b56\uff0c\u6700\u540e\u7559\u4e0b\u5408\u6cd5\u7684\u60c5\u51b5\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n*m*4^{n})$\u770b\u6837\u5b50\u597d\u50cf\u8dd1\u4e0d\u8fc7\uff0c\u5176\u5b9e\u8fd9\u4e2a$4^n$\u6839\u672c\u8dd1\u4e0d\u5230\u4e00\u534a\uff0c\u6211\u4eec\u5728\u9884\u5904\u7406\u72b6\u6001\u7684\u65f6\u5019\u4f1a\u820d\u53bb\u5f88\u591a\u7684\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u901f\u5ea6\u8fd8\u662f\u86ee\u5feb\u7684\u3002\n\n$Code$:\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 15;\nint g[N][N];\nint n , m , ans;\nconst int mod = 100000000;\n\nint cow[(1 << N)] , cnt;\n\nvoid dfs(int now ,int tot) {\n\tif(tot >= m) {\n\t\tcow[++ cnt] = now; return;\n\t}\n\tdfs(now , tot + 1);\n\tdfs(now | (1 << tot) , tot + 2);\n}\n\nint f[N][(1 << N)];\n\nint main () {\n\tscanf(\"%d %d\" , &n , &m);\n\tfor(int i = 1 ; i <= n; ++ i)\n\t\tfor(int j = 1 ; j <= m ; ++ j) scanf(\"%d\" , &g[i][j]);\n\tdfs(0 , 0);\n\tfor(int i = 1 ; i <= cnt ; ++ i) {\n\t\tf[1][cow[i]] = 1;\n\t\tfor(int p = 1 ; p <= m ; ++ p) \n\t\t\tif(g[1][p] == 0 && (cow[i] & (1 << (p - 1)))) f[1][cow[i]] = 0;\n\t}\n\tfor(int i = 2 ; i <= n ; ++ i) {\n\t\tfor(int j = 1 ; j <= cnt ; ++ j){\n\t\t\tfor(int k = 1 ; k <= cnt ; ++ k) {\n\t\t\t\tif((cow[j] & cow[k])) continue;\n\t\t\t\tbool flag = 0;\n\t\t\t\tfor(int p = 1 ; p <= m ; ++ p) \n\t\t\t\t\tif(g[i][p] == 0 && (cow[j] & (1 << (p - 1)))) {flag = 1; break;}\n\t\t\t\tif(flag) continue;\n\t\t\t\t//printf(\"%d from %d\\n\" , cow[j] , cow[k]);\n\t\t\t\tf[i][cow[j]] += f[i - 1][cow[k]];\n\t\t\t\tf[i][cow[j]] %= mod;\n\t\t\t}\n\t\t}\t\t\n\t}\n\t//for(int i = 1 ; i <= cnt ; ++ i) printf(\"%d %d\\n\" , cow[i],f[n][cow[i]]);\n\tfor(int i = 1 ; i <= cnt ; ++ i) ans = (ans + f[n][cow[i]]) % mod;\n\tprintf(\"%d\\n\" , ans % mod);\n\treturn 0;\n}\n```",
        "postTime": 1572181473,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u849f\u84bb\u7684\u7b2c\u4e00\u9053\u72b6\u538bdp\u9898\n\n\n\u672c\u9898\u89e3\u4f5c\u8005\u53c2\u8003\u4e86\n\n[@AcCry](https://blog.csdn.net/AcCry) \u7684blog [\u4f20\u9001\u95e8](https://blog.csdn.net/accry/article/details/6607703)\n\n[@\u5916\u51fa\u6563\u6b65](https://blog.csdn.net/harrypoirot) \u7684\u6ce8\u91ca [\u4f20\u9001\u95e8](https://blog.csdn.net/harrypoirot/article/details/23163485)\n\n\u611f\u8c22\u4e24\u4f4d\u5927\u7287\n\n\u987a\u4fbf\u4e3a\u81ea\u5df1\u7684blog\u6253\u4e2a\u5e7f\u544a [JuntHe\u7684blog](https://www.luogu.org/blog/JuntHe/)\n\n\u4ee5\u4e0b\u8fdb\u5165\u6b63\u9898\n\n## \u5206\u6790\n\u7531\u8fd9\u9898\u6240\u7ed9\u7684\u6570\u636e\uff08\u53ea\u67091\u548c0\u4e24\u79cd\u60c5\u51b5\uff09\uff0c\u53ef\u4ee5\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u72b6\u538bdp\u7684\u9898\u3002\n\n0.dp[i][j]\u8868\u793a\u7b2ci\u884c\u91c7\u53d6\u7b2cj\u79cd\u51b3\u7b56\u53ef\u4ee5\u7684\u5f97\u5230\u7684\u603b\u9009\u62e9\u6570\u3002\n\n1.\u7528state[]\u6570\u7ec4\u8bb0\u5f55\u5355\u884c\u53ef\u884c\u51b3\u7b56\uff081\u8868\u793a\u653e\u7267\uff0c0\u8868\u793a\u4e0d\u653e\u7267\uff0c\u4e14\u6ca1\u6709\u76f8\u90bb\u7684\u4e24\u4e2a1\uff09\u3002~~\uff08\u505a\u8fd9\u9898\u65f6\u6709\u70b9\u6fc0\u52a8\uff0c\u628a0\u8fd9\u79cd\u60c5\u51b5\u5ffd\u7565\u4e86\uff09~~\n\n2.\u8bfb\u5165\u6570\u636e\u540e\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u6570\uff0c\u7528line[]\u6570\u7ec4\u6765\u50a8\u5b58\uff0c\u8bb0\u5f55\u6bcf\u4e00\u884c\u7684\u5b9e\u9645\u60c5\u51b5\u3002\n\n**\u6ce8\u610f\uff1a\u8981\u4ee5\u76f8\u53cd\u65b9\u5f0f\u5b58\u50a8\uff0c\u53731\u8868\u793a\u4e0d\u53ef\u653e\u7267\uff0c\u8fd9\u6837\u82e5\uff08line[i]&state[i]==1\uff09\u5219\u53ef\u5224\u5b9a\u4e3a\u975e\u6cd5\u51b3\u7b56\uff08\u8fd9\u4e00\u884c\u4e0d\u80fd\u8fd9\u6837\u653e\u7267\u5976\u725b\uff09\u3002**\n\n3.\u5f00\u59cbdp\uff0c\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u5728\u6bcf\u884c\u91cc\u627e\u6240\u6709\u72b6\u6001\uff0c\u5982\u679c\u8fd9\u4e2a\u72b6\u6001\u662f\u5408\u6cd5\u7684\uff0c\u4e14\u4e0d\u4f1a\u5728\u8d2b\u7620\u7684\u8349\u5730\u4e0a\u653e\u7267\uff08line[i]&state[i]\uff01=1\uff09\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5f00\u59cb\u5224\u65ad\u4e0e\u4e0a\u4e00\u884c\u51b3\u7b56\u662f\u5426\u7684\u5408\u6cd5\uff0c\u5373\u4e0a\u4e0b\u4e24\u884c\u4e4b\u95f4\u6ca1\u6709\u76f8\u90bb\u7684\u8349\u5730(state[a]&state[b]\uff01=1)\uff0cdp[i][j]\u5c31\u662f\u5f53\u524d\u65b9\u6848\u6570\u4e0e\u4e0a\u9762\u6240\u6709\u65b9\u6848\u6570\u7684\u603b\u548c\u3002\n\n4.\u7b54\u6848\u5c31\u662f\u6700\u540e\u4e00\u884c\u7684\u6bcf\u4e00\u5217\u7684\u65b9\u6848\u6570\u7684\u603b\u548c\uff08ans=dp[m][1]+dp[m][2]+...+dp[m][max]\uff09\u3002\n\n## \u4ee3\u7801\n\n\u4f5c\u8005\u7801\u98ce\u6bd4\u8f83\u7d27\u51d1\uff0c\u53ef\u80fd\u6bd4\u8f83\u4f24\u773c\uff0c\u4f46\u672c\u4eba\u611f\u89c9\u603b\u4f53\u8fd8\u662f\u6bd4\u8f83\u6e05\u6670\u7684\uff08qwq\uff09\u3002\n```cpp\n//\u72b6\u538bdp\u7684\u7b2c\u4e00\u9898\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=100000000;\nint m,n;\nint state[600],top=0;//state[]\u4e3a\u6bcf\u79cd\u51b3\u7b56\nint line[20];//line[i]\u8868\u793a\u7b2ci\u884c\u7684\u5b9e\u9645\u60c5\u51b5\nint dp[20][600];//\u8868\u793a\u6bcf\u4e00\u884c\u6bcf\u79cd\u51b3\u7b56\u7684\u53ef\u884c\u60c5\u51b5\nbool check1(int a)//\u7528\u4e8e\u68c0\u9a8c\u5f53\u524d\u51b3\u7b56\u662f\u5426\u5408\u6cd5\n{\n    if(a&(a<<1)) return false;\n    return true;\n}\nbool check2(int a,int b)//\u7528\u4e8e\u68c0\u9a8c\u5f53\u524d\u884c\u7684\u5b9e\u9645\u60c5\u51b5\u4e0e\u5f53\u524d\u51b3\u7b56\u662f\u5426\u5339\u914d\n{\n    if(line[a]&state[b]) return false;\n    return true;\n}\nbool check3(int a,int b)//\u7528\u4e8e\u68c0\u9a8c\u5f53\u524d\u884c\u51b3\u7b56\u5bf9\u5e94\u4e0a\u884c\u51b3\u7b56\u662f\u5426\u5408\u6cd5\n{\n    if(state[a]&state[b]) return false;\n    return true;\n}\nvoid init()//\u521d\u59cb\u5316\uff0c\u5bfb\u627e\u6240\u6709\u5355\u884c\u53ef\u884c\u7684\u51b3\u7b56\n{\n    for(int i=0;i<(1<<n);i++)\n        if(check1(i)) state[++top]=i;\n}\nint main()\n{\n    cin>>m>>n;\n    init();\n    for(int i=1;i<=m;i++)\n    {\n        bool num;\n        for(int j=1;j<=n;j++)\n        {\n            cin>>num;\n            if(num==0)//\u82e5\u8be5\u683c\u4e3a0\n                line[i]+=(1<<(n-j));//\u4ee5\u76f8\u53cd\u65b9\u5f0f\u5b58\u50a8\uff0c\u53731\u8868\u793a\u4e0d\u53ef\u653e\u7267\n        }\n    }\n    for(int i=1;i<=top;i++)//\u4e3adp[][]\u8d4b\u521d\u503c\n        if(check2(1,i)) dp[1][i]=1;\n    for(int i=2;i<=m;i++)//\u6bcf\u4e00\u884c\n        for(int j=1;j<=top;j++)//\u6bcf\u79cd\u51b3\u7b56\n        {\n            if(!check2(i,j)) continue;//\u51b3\u7b56\u7b26\u5408\u6539\u884c\u5b9e\u9645\u60c5\u51b5\n            for(int k=1;k<=top;k++)//\u4e0a\u4e00\u884c\u7684\u6bcf\u79cd\u51b3\u7b56\n            {\n                if(!check2(i-1,k)) continue;//\u51b3\u7b56\u7b26\u5408\u4e0a\u884c\u5b9e\u9645\u60c5\u51b5\n                if(!check3(j,k)) continue;//\u5f53\u524d\u51b3\u7b56\u5bf9\u5e94\u4e0a\u4e00\u884c\u51b3\u7b56\u5408\u6cd5\n                dp[i][j]=(dp[i][j]+dp[i-1][k])%mod;\n            }\n        }\n    int ans=0;\n    for(int i=1;i<=top;i++)\n        ans=(ans+dp[m][i])%mod;\n    cout<<ans<<endl;\n    return 0;//\u5b8c\u7f8e\u7684\u7ed3\u675f\uff0c\u8bf7\u541b\u52ff\u6284\n}\n\n```\n\n\n\n",
        "postTime": 1564059241,
        "uid": 176376,
        "name": "\u671b\u6daf\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "[\u6b22\u8fce\u6765\u6211\u535a\u5ba2\u73a9~](https://bubbleioa.github.io/2018/09/20/[%E6%B4%9B%E8%B0%B7P1879][USACO06NOV]%E7%8E%89%E7%B1%B3%E7%94%B0Corn%20Fields/#more)\n## \u9898\u89e3\n\u4e00\u9053\u72b6\u6001\u538b\u7f29\u5165\u95e8\u9898\uff0c\u4e5f\u662f\u7b2c\u4e00\u9053\u6211\u5728\u4e0d\u770b\u4efb\u4f55\u9898\u89e3\u7684\u60c5\u51b5\u4e0b\u5199\u51fa\u6765\u7684\u72b6\u538bdp\u9898  \n\u72b6\u538bdp\u4e00\u822c\u4f1a\u6709\u660e\u663e\u7684\u6570\u636e\u8303\u56f4\u7279\u5f81\uff0c\u5373n,m\u4e00\u822c\u90fd\u572820\u4ee5\u5185  \n\n\u72b6\u538bdp\u7684\u72b6\u6001\u8bbe\u8ba1\u548c\u8f6c\u79fb\u662f\u6709\u5957\u8def\u7684\uff0c\u5c31\u62ff\u8fd9\u9053\u9898\u6765\u8bf4\uff0c$f[i][j]$\u8868\u793a\u7b2c$i$\u884c\u5728\u72b6\u6001$j$\u7684\u65f6\u5019\u7684\u65b9\u6848\u6570\uff0c\u5176\u4e2d$j$\u6211\u4eec\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u6765\u8868\u793a\u3002  \n\u8f6c\u79fb\u7684\u65f6\u5019\u53ea\u8981\u5224\u65ad\u4e0e\u5f53\u524d\u884c\u548c\u4e0a\u4e00\u884c\u662f\u5426\u51b2\u7a81\u5373\u53ef\uff0c\u5982\u679c\u4e0d\u51b2\u7a81\uff0c$f[i][j]=\\sum f[i-1][z]$\u5176\u4e2dz\u4e3a\u4e0d\u51b2\u7a81\u7684\u72b6\u6001\n\n\n$\\sum_{1\\le i\\le cnt} f[n][i]$ \u5c31\u662f\u6700\u540e\u7684\u7b54\u6848\uff08$cnt$\u4e3a\u72b6\u6001\u603b\u6570\uff09\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u91cc\u5148\u679a\u4e3e\u672c\u5c42\uff0c\u5728\u679a\u4e3e\u4e0a\u4e00\u5c42\uff1a  \n\u56e0\u4e3a\u6211\u4eec\u52a8\u6001\u89c4\u5212\u662f\u9760\u72b6\u6001\u8f6c\u79fb\u6765\u5b9e\u73b0\u7684\uff0c\u4e0a\u4e00\u884c\u76f8\u5f53\u4e8e\u5904\u5728i-1\u9636\u6bb5\uff0c\u6211\u4eec\u9700\u8981\u4e0d\u65ad\u7528\u4e0a\u4e00\u4e2a\u9636\u6bb5\u6765\u66f4\u65b0\u4e0b\u4e00\u4e2a\u9636\u6bb5\uff08\u9006\u63a8\uff09\uff0c\u56e0\u6b64\u672c\u5c42\u5faa\u73af\u5728\u5916\u4fa7\u3002\n\n## \u4ee3\u7801\n```c++\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int mod=100000000;\nint f[13][5000];\nint ok[13];//\u7eaa\u5f55\u6bcf\u4e00\u884c\u8f93\u5165\u7684\u6570\u636e\uff0c\u4e5f\u662f\u7528\u4e8c\u8fdb\u5236\u4fdd\u5b58\nint n,m;\nint can[5000],cnt;//\u9884\u5904\u7406\u51fa\u6240\u6709\u5408\u6cd5\u72b6\u6001\n\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            int a;\n            cin>>a;\n            ok[i]<<=1;//\u8fd9\u91cc\u7684\u987a\u5e8f\u4e00\u5b9a\u8981\u6ce8\u610f\n            ok[i]|=a;\n        }\n    }\n    int MAXN=(1<<m)-1;//\u5047\u8bbem\u4e3a5\u6700\u5927\u7684\u72b6\u6001\u663e\u7136\u4e3a1 1 1 1 1\n    for(int i=0;i<=MAXN;i++)if((i&(i<<1))==0)can[++cnt]=i;//\u81ea\u5df1\u5982\u679c\u548c\u81ea\u5df1\u5de6\u79fb\u91cd\u53e0\u4e86\uff0c\u8bf4\u660e\u6709\u76f8\u90bb\u7684\uff0c\u4e0d\u5408\u6cd5\uff0c\u53ea\u6709\u4e0d\u91cd\u53e0\u624d\u5408\u6cd5\uff0c\u6ce8\u610f\u4ece0\u5f00\u59cb\n    for(int i=1;i<=cnt;i++){\n        if(can[i]&(~ok[1]))continue;//\u7b2c\u4e00\u884c\u5355\u72ec\u5904\u7406\uff0c~\u6309\u4f4d\u53d6\u53cd\n        f[1][i]=1;\n    }\n    for(int i=2;i<=n;i++){\n        for(int j=1;j<=cnt;j++){//\u679a\u4e3e\u5f53\u524d\u884c\n            int x=can[j];\n            for(int z=1;z<=cnt;z++){//\u679a\u4e3e\u4e0a\u4e00\u884c\n                int y=can[z];\n                if(x&y||x&(~ok[i])||y&(~ok[i-1]))continue;\n                f[i][j]=(f[i][j]+f[i-1][z])%mod;\n            }\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=cnt;i++)ans=(ans+f[n][i])%mod;\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1537458488,
        "uid": 61150,
        "name": "\u5192\u6ce1ioa",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u89e3\u9898\u601d\u8def:\u6309\u7167\u521a\u624d\u6211\u8bf4\u7684,\u9898\u76ee\u4e2d\u7684m,n\u6700\u5927\u90fd\u53ea\u670912,\u6211\u4eec\u8981\u5f88\u5feb\u60f3\u5230\u72b6\u538bdp,\u90a3\u4e48\u5982\u4f55\u72b6\u538b\u5462?\u5176\u5b9e\u72b6\u538bdp\u5c31\u662f\u4e00\u79cd\u679a\u4e3e,\u662f\u6700\u66b4\u529b\u7684\u4e00\u79cddp.\n\n\u5728\u9898\u76ee\u4e2d,\u67091\u7684\u5730\u65b9\u5c31\u53ef\u4ee5\u79cd\u690d,\u5426\u5219\u4e0d\u884c,\u5728\u4e0d\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u60c5\u51b5\u4e0b,\u6211\u4eec\u662f\u4e0d\u662f\u4f1a\u60f3\u5230\u6253\u66b4\u641c,\u679a\u4e3e\u6bcf\u4e00\u79cd\u60c5\u51b5,\u5982\u679c\u4e00\u5757\u5730\u4e0a\u5df2\u7ecf\u79cd\u4e86\u8349,\u90a3\u4e48\u4e0a\u4e0b\u5de6\u53f3\u5c31\u90fd\u4e0d\u80fd\u79cd\u4e86.\u6211\u4eec\u7ecf\u8fd9\u79cd\u601d\u8def\u8f6c\u5316\u6210\u4e8c\u8fdb\u5236,1\u4ee3\u8868\u5728\u8fd9\u5757\u5730\u4e0a\u79cd\u690d,0\u4ee3\u8868\u4e0d\u79cd,\u4f8b\u5982:010\u5c31\u4ee3\u8868\u5728\u7b2c\u4e8c\u5757\u5730\u79cd\u690d,\u5176\u4ed6\u5730\u90fd\u4e0d\u79cd.\n\n\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u884c\u7684\u72b6\u6001,\u5728\u5de6\u53f3\u4e0d\u76f8\u90bb\u7684\u60c5\u51b5\u4e0b,\u518d\u5224\u65ad\u4e0b\u4e00\u884c\u4e0d\u548c\u672c\u884c\u72b6\u6001\u51b2\u7a81\u7684\u72b6\u6001(\u5982:\u7b2c\u4e00\u884c\u662f0 1 0,\u7b2c\u4e8c\u884c\u662f0 1 0\u5c31\u51b2\u7a81\u4e86,\u5373\u4e0a\u4e0b\u884c\u540c\u4e00\u4f4d\u7f6e\u4e0d\u80fd\u540c\u65f6\u79cd\u690d),\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u9884\u5904\u7406\u51fa\u7b2c\u4e00\u884c\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u9012\u63a8\u51fa\u5176\u4ed6\u884c\u7684\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u72b6\u6001\u4e2a\u6570\u4e86\n\n\u4e0b\u9762\u6765\u5206\u6790\u4e00\u4e0b\u9898\u76ee\u6837\u4f8b\n\n1 1 1\n\n0 1 0\n\n\u7b2c\u4e00\u884c\u6ee1\u8db3\u6761\u4ef6\u7684\u72b6\u6001\u6709\n\n1\t000\n\n2\t100 \u3000\n\n3\t010\n\n4\t001\n\n5\t101\n\n\u7b2c\u4e8c\u884c\u6ee1\u8db3\u6761\u4ef6\u7684\u72b6\u6001\u6709\n\n1\t000\n\n2\t010\n\n\u6839\u636e\u4e58\u6cd5\u539f\u7406\u67095*2=10\u79cd\u65b9\u6cd5,\u4f46\u5176\u4e2d\u4e00\u79cd\u7b2c\u4e00\u884c0 1 0\u548c\u7b2c\u4e8c\u884c0 1 0\u662f\u51b2\u7a81\u7684,\u6240\u4ee5\u7ed3\u679c\u4e3a10-1=9\u79cd\u65b9\u6848\n\n\u8bbe\u8ba1dp\u6570\u7ec4\u7684\u72b6\u6001,\u72b6\u538bdp\u72b6\u6001\u5e94\u8be5\u8fd8\u662f\u6bd4\u8f83\u597d\u8bbe\u8ba1\u7684,\u672c\u9898\u4e3adp[i][state[j]]\u8868\u793a\u5230\u7b2ci\u884c\u5230\u7b2cj\u79cd\u72b6\u6001\u6ee1\u8db3\u6761\u4ef6\u7684\u65b9\u6848\u6570\n\n\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u539f\u5219,\u4e0b\u4e00\u884c\u7684\u72b6\u6001\u53ea\u80fd\u7531\u524d\u4e00\u884c\u8f6c\u79fb\u8fc7\u6765\n\ndp[i+1][state[j]]+=dp[i][state[k]] state[k]\u8868\u793a\u7b2ci\u884c\u6ee1\u8db3\u6761\u4ef6\u7684\u72b6\u6001\n\n\u603b\u7ed3\u4e00\u4e0b\u601d\u8def\uff1a\u5148\u679a\u4e3e\u7b2c\u4e00\u884c\uff0c\u628a\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001\u548c\u7b2c\u4e00\u884c\u7684\u9898\u76ee\u6240\u7ed9\u73af\u5883\u5bf9\u6bd4\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u5728\u5faa\u73af\u91cc\u7ee7\u7eed\u679a\u4e3e\u7b2c\u4e8c\u884c\uff0c\u628a\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001\u548c\u7b2c\u4e8c\u884c\u7684\u73af\u5883\u5bf9\u6bd4\uff0c\u5982\u679c\u6210\u529f\uff0c\u518d\u548c\u7b2c\u4e00\u884c\u586b\u5165\u7684\u72b6\u6001\u5bf9\u6bd4\uff0c\u5982\u679c\u53c8\u5339\u914d\u6210\u529f\uff0c\u5219dp[2][000] = dp[2][000] + dp[1][100];\u65b9\u6cd5\u6570\u52a0\u5230\u7b2c\u4e8c\u884c\u3002\u8fd9\u5c31\u662f\u4e00\u6b21\u5faa\u73af\u7ed3\u675f\u4e86\uff0c\u91cd\u65b0\u679a\u4e3e\u7b2c\u4e8c\u884c...\n\n\u6b22\u8fce\u5927\u5bb6\u6765\u8e29\u535a\u5ba2[real_l](https://www.cnblogs.com/real-l/p/8562834.html)\n ",
        "postTime": 1528964508,
        "uid": 45210,
        "name": "kikuss",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u9700\u8981\u4e86\u89e3**\u4f4d\u8fd0\u7b97**\uff1a\n\n1.\u201c&\u201d\u4e0e\u2014\u2014\u4e24\u4e2a\u90fd\u662f1\uff0c\u7ed3\u679c\u4e3a1\uff0c\u5176\u4ed6\u4e3a0\uff1b\n\n2.\u201c|\u201d\u6216\u2014\u2014\u53ea\u8981\u4e00\u4e2a\u662f1\uff0c\u7ed3\u679c\u4e3a1\uff1b\uff08\u4e24\u4e2a\u90fd\u662f0\u4e3a0\uff0c\u5176\u4ed6\u4e3a1\uff09\uff1b\n\n3.\u201c^\u201d\u5f02\u6216\u2014\u2014\u4e0d\u540c\u4e3a1\uff0c\u76f8\u540c\u4e3a0\uff08\u5e38\u7528\u4e8e\u53d6\u53cd\uff09\uff1b\n\n4\u3002\u201c~\u201d\u53d6\u53cd\uff1b-\n\n\n**\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b**\uff1adp[\u67d0\u4e00\u884c] [\u5f53\u524d\u72b6\u6001]=sum dp[\u4e0a\u4e00\u884c][\u4e0e\u5176\u4e0d\u51b2\u7a81\u7684\u72b6\u6001]\uff1b\n\n\u6700\u540e\u7b54\u6848\u5c31\u662fsum dp[\u6700\u540e\u4e00\u884c][\u6240\u6709\u53ef\u80fd\u72b6\u6001]\uff1b\n\n**\u5173\u4e8e\u72b6\u6001\u5b58\u50a8**\uff1a\u5f0013\u7ef4\u6570\u7ec4\u662f\u4e0d\u73b0\u5b9e****\u7684\uff0c\u800c\u4e14\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u884c\u7684\u72b6\u6001\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6570\u5b57\uff0c\u4e8c\u8fdb\u5236\u4e0b \u76840101\u2026\u5373\u4e0d\u540c\u9009\u62e9\u65b9\u6848\uff1b\n\n\u8be6\u7ec6\u89e3\u91ca\u89c1\u4ee3\u7801\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nconst int Mod=100000000; \nint n,m,num,ans;\nint dp[15][1<<15];//dp[\u7b2ci\u884c] [\u72b6\u6001\u4e3aj (\u4e8c\u8fdb\u5236\u4e0b)] =\u65b9\u6848\u6570 \nint map[15],stat[1<<15];//map\u5b58\u56fe\uff0cstat\u4fdd\u7559\u5de6\u53f3\u4e0d\u76f8\u90bb\u7684\u9009\u62e9\u65b9\u6848 \nusing namespace std;\n\nvoid init()\n{\n  memset(dp,0,sizeof(dp));\n  memset(map,0,sizeof(map));\n  \n  scanf(\"%d%d\",&m,&n);\n  for(int i=1;i<=m;i++)//m\u884cn\u5217\n  {\n      int t;\n    for(int j=1;j<=n;j++)\n    {\n      scanf(\"%d\",&t);\n      map[i]=(map[i]<<1)+(t^1);/*\u5c06\u6bcf\u4e00\u884c\u5b58\u4e3a\u4e00\u4e2a\u6570\u3002\u5168\u90e8\u53d6\u53cd\uff0c\u65b9\u4fbf\u540e\u9762\u8fd0\u7b97*/\n    }\n  }    \n}\n\nvoid begin()\n{\n  num=0;\n  for(int i=0;i<(1<<n);i++)//\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u72b6\u6001\uff0c\u5224\u65ad\u662f\u5426\u76f8\u90bb\n    if(! (i&(i<<1)) ) stat[++num]=i;//\u6700\u540e\u5b58\u50a8\u7684\u90fd\u662f\u5de6\u53f3\u4e0d\u51b2\u7a81\u7684\u72b6\u6001\n\n  for(int i=1;i<=num;i++)\n    if(! (map[1]&stat[i]) )//\u7b2c\u4e00\u884c\u4e2d\uff0c\u80fd\u653e\n      dp[1][stat[i]]=1;\n}\n\nvoid DP()\n{\n  for(int i=2;i<=m;i++)    //\u6240\u6709\u884c\n    for(int j=1;j<=num;j++)//\u6240\u6709\u53ef\u80fd\u72b6\u6001\n    {\n      if(map[i]&stat[j]) continue;//\u80fd\u653e\n      \n      for(int k=1;k<=num;k++)//\u4e0a\u4e00\u884c\u53ef\u80fd\u72b6\u6001\n      { \n        if(map[i-1]&stat[k]) continue;//\u4e5f\u80fd\u653e\n         \n        if(! (stat[k]&stat[j]) )//\u4e0a\u4e0b\u4e0d\u76f8\u90bb\n          dp[i][stat[j]]=( dp[i-1][stat[k]] +dp[i][stat[j]] )%Mod;    \n          \n      }     \n    } \n \n ans=0;\n for(int i=1;i<=num;i++)\n  ans=( ans+ dp[m][stat[i]])%Mod;\n}\nint main()\n{\n  init();\n  begin();\n  DP(); \n  \n  printf(\"%d\",ans);\nreturn 0;\n}\n```",
        "postTime": 1503759488,
        "uid": 37835,
        "name": "Julytree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u84dd\u4e66\u4e0a\u770b\u5230\u7684\u72b6\u538bDP\u7ec3\u4e60\u9898\u3002\u6570\u636e\u8303\u56f4\u4e5f\u5c31\u662f\u72b6\u538b\u3002\n\n\u72b6\u538b\u6700\u5173\u952e\u5c31\u662f\u9884\u5904\u7406\u51fa\u5408\u6cd5\u7684\u72b6\u6001\u3002\n\n\u8fd9\u4e2a\u9898\u5408\u6cd5\u7684\u72b6\u6001\u5c31\u662f\u5f53\u524d\u72b6\u6001\u5de6\u79fb\u548c\u53f3\u79fb\u5206\u522b\u4e0e\u5f53\u524d\u72b6\u6001\u6309\u4f4d\u4e0e\uff0c\u7ed3\u679c\u90fd\u4e3a0\u3002\n\n\u9884\u5904\u7406\u51fa\u6b63\u786e\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u5feb\u4e50DP\u4e86\u3002\n\n\u4e0d\u8981\u5fd8\u4e86\u5224\u65ad\u4e0a\u4e0b\u4e24\u884c\u7684\u662f\u4e0d\u662f\u5408\u6cd5\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=100000000;\nint tu[20][20],m,n,f[20][5000];\nint h[20];\nbool pd[1<<13];\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=m;i++)\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tscanf(\"%d\",&tu[i][j]);\n\t\t\th[i]=(h[i]<<1)+tu[i][j];\n\t\t}\n\t for(int i=0;i<(1<<n);i++)\n\t \tif( !((i>>1) & i) && !((i<<1) & i) )\n\t\t\tpd[i]=1;\n\t\telse pd[i]=0;\n\tf[0][0]=1;\n\tfor(int i=1;i<=m;i++)\n\t\tfor(int j=0;j<(1<<n);j++)\n\t\t\tif(pd[j] && (j&h[i])==j)\n\t\t\t\tfor(int k=0;k<(1<<n);k++)\n\t\t\t\t\tif(!(k&j))\n\t\t\t\t\t\tf[i][j]=(f[i][j]+f[i-1][k])%mod;\n\tlong long ans=0;\n\tfor(int i=0;i<(1<<n);i++)\n\t\tans=(ans+f[m][i])%mod;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1568623918,
        "uid": 128682,
        "name": "ChrisK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n**\u72b6\u538bDP**\n\n>  \u8fd8\u662f\u90a3\u53e5\u8bdd\uff0c\u4e3a\u4ec0\u4e48\u662f\u72b6\u538bDP\uff1f\uff1f\uff1f\n>\n> \u200b\t\t\t\t\t\u2014\u2014  \u56e0\u4e3a\u6570\u636e\u8303\u56f4\u5f88\u72b6\u538b\n\n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u9053\u9898\u7684DP\u8fc7\u7a0b\uff0cDP\u5c5e\u6027\u5982\u4e0b\uff1a\n\n- \u72b6\u6001\uff1a$f[i][j]$\u8868\u793a\u524d$i$\u884c\u7684\u538b\u7f29\u72b6\u6001\u4e3a$j$\u65f6\u5019\u7684\u65b9\u6848\u6570\uff0c$F[i]$\u8868\u793a\u7b2c$i$\u884c\u7684\u72b6\u6001\u3002\n- \u521d\u503c\uff1a$f[0][0] = 1$\uff0c\u7b2c0\u884c\u6ca1\u6709\u8349\u576a\uff0c\u65b9\u6848\u6570\u4e3a$1$\u3002\n- \u8f6c\u79fb\u65b9\u7a0b\uff1a`f[i][j] = (f[i][j] + f[i - 1][k]) % mod;`\n\n\u72b6\u6001\u600e\u4e48\u521d\u59cb\u5316\uff1f\uff1f\uff1f\n\n- \u8fd9\u9053\u9898\u4e2d\u7684\u5408\u6cd5\u6761\u4ef6\u8981\u6c42\u4e0d\u80fd\u6709\u4e24\u5934\u725b\u7684\u8349\u5730\u76f8\u90bb\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5f53\u524d\u4f4d\u7f6e$i$\u6211\u4eec\u8fdb\u884c\u4ee5\u4e0b\u5224\u65ad\n  1. `i & (i >> 1) == 0`\u8868\u793a\u5b83\u4e0d\u4e0e\u53f3\u8fb9\u7684\u8349\u5730\u76f8\u90bb\u3002\n  2. `i & (i << 1) == 0`\u8868\u793a\u5b83\u4e0d\u4e0e\u5de6\u8fb9\u7684\u8349\u5730\u76f8\u90bb\u3002\n- \u5982\u679c\u7b26\u5408\u4e0a\u8ff0\u4e24\u4e2a\u6761\u4ef6\uff0c\u8bc1\u660e\u8be5\u4f4d\u7f6e\u662f\u5408\u6cd5\u7684\uff0c\u5bf9\u6807\u8bb0\u6570\u7ec4\u6807\u8bb0$g[i]= 1$\u3002\n\n\u6700\u7ec8\u6211\u4eec\u53ea\u9700\u8981\u5faa\u73af\u7edf\u8ba1\u7b54\u6848\u8f93\u51fa\u5373\u53ef\u3002\n\n## AC\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 15;\n\nconst int M = (1 << 12) + 10;\n\nconst int mod = 1e8;\n\nbool g[M];\n\nint n, m, F[N], mp[N][N], f[N][M];\n\nint main()\n{\n\tscanf(\"%d%d\", &m, &n);\n\tfor (int i = 1; i <= m; i ++ )\n\t{\n\t\tfor (int j = 1; j <= n; j ++ )\n\t\t{\n\t\t\tscanf(\"%d\", &mp[i][j]);\n\t\t\tF[i] = (F[i] << 1) + mp[i][j];\n\t\t}\n\t}\n\tfor (int i = 0; i < (1 << n); i ++ )\n\t{\n\t\tif ((!(i & (i << 1))) && (!(i & (i >> 1))))\n\t\t{\n\t\t\tg[i] = 1;\n\t\t}\n\t}\n\tf[0][0] = 1;\n\tfor (int i = 1; i <= m; i ++ )\n\t{\n\t\tfor (int j = 0; j < (1 << n); j ++ )\n\t\t{\n\t\t\tif (g[j] && (j & F[i]) == j)\n\t\t\t{\n\t\t\t\tfor (int k = 0; k < (1 << n); k ++ )\n\t\t\t\t{\n\t\t\t\t\tif ((k & j) == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tf[i][j] = (f[i][j] + f[i - 1][k]) % mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0;\n\tfor (int i = 0; i < (1 << n); i ++ )\n\t{\n\t\tans = (ans + f[m][i]) % mod;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1567412985,
        "uid": 144702,
        "name": "littleseven",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u4e2a\u5b50\u96c6\u679a\u4e3e\u7684\u901a\u7528\u7b97\u6cd5\uff1a\n\n\u8bbe$Sub$\u662f\u72b6\u6001$mask$\u7684\u5b50\u96c6\uff0c\u90a3\u4e48\u5bf9\u4e8e$Sub$\u4e2d\u72b6\u6001\u6240\u6709\u53ef\u80fd\u7684\u53d6\u503c\u4e3a(\u542b\u7a7a\u96c6)\uff1a\n\n```cpp\n for (int Sub =  mask; ; Sub=(Sub-1) & mask ){\n \t// do sth. \n \tif (!mask) break;\n }\n```\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u72b6\u6001\u538b\u7f29dp\u4e86\u3002\n\n\u8bbe$f[i][j]$\u8868\u793a\u524d$i$\u884c\u5408\u6cd5\u4e14\u6700\u540e\u4e00\u884c\u7684\u72b6\u6001\u662f$j$\u7684\u65b9\u6848\u6570\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e00\u884c\u72b6\u6001\u53ea\u548c\u8fd9\u4e00\u884c\u548c\u4e0a\u4e00\u884c\u72b6\u6001\u6709\u5173\u7cfb\u3002\n\n\u679a\u4e3e\u8fd9\u4e00\u884c\u72b6\u6001\u4e3a$mask1$,\u4e0a\u4e00\u884c\u72b6\u6001\u4e3a$mask2$\n\n- \u82e5\u672c\u884c\u72b6\u6001\u4e0d\u5408\u7406\u4ea7\u751f\u7684\u9650\u5236\u4e3a mask1\u5b58\u5728\u4e24\u4e2a\u8fde\u7eed\u76841\n\n- \u82e5\u4e0a\u4e00\u884c\u72b6\u6001\u4e0d\u5408\u7406\u4ea7\u751f\u7684\u9650\u5236\u4e3a mask2\u5b58\u5728\u4e24\u4e2a\u8fde\u7eed\u76841\n\n- \u82e5\u4e0a\u4e00\u884c\u72b6\u6001+\u8fd9\u4e00\u884c\u72b6\u6001\u4e0d\u548c\u91cc\u5c31\u662fmask1\u548cmask2\u76f8\u540c\u4f4d\u4e0a\u90fd\u67091\n\n\u5bf9\u4e8e$1,2$\u4e24\u4e2a\u9650\u5236\uff0c\u6211\u4eec\u53ea\u9700\u8981\uff1a\n```cpp\nif (mask >> 1) return false;\nelse return true;\n```\n\u5bf9\u4e8e$3$\u9650\u5236\uff0c\u6211\u4eec\u53ea\u9700\u8981\n```cpp\nif (mask1 & mask2) return false;\nelse return true;\n```\n\n\u4ee3\u7801\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff1a\n\n```cpp\n# include <bits/stdc++.h>\n# define int long long\nusing namespace std;\nconst int N=13,mo=100000000;\nint f[N][1<<N],n,m,state[N];\nsigned  main()\n{\n\tscanf(\"%lld%lld\",&n,&m); int all=(1<<m)-1;\n\tfor (int i=1;i<=n;i++) {\n\t\tint ret=0;\n\t\tfor (int j=1;j<=m;j++) {\n\t\t\tint t; scanf(\"%lld\",&t);\n\t\t\tret=(ret<<1)+t;\n\t\t}\n\t\tstate[i]=ret;\n\t}\n\t\n\tfor (int mask=state[1] ; ; mask=(mask-1)&state[1] )  {\n\t\tif (!(mask & (mask>>1))) { f[1][mask]=1; }\n\t\tif (!mask) break;\n\t}\n\t \n\tfor (int i=2;i<=n;i++) {\n\t\tfor (int mask1 = state[i]; ;mask1=(mask1-1)&state[i]) {\n\t\t\tif (mask1 & (mask1>>1)) continue;\n\t\t\tfor (int mask2=state[i-1]; ;mask2=(mask2-1)&state[i-1]) {\n\t\t\t\tif (mask2 & (mask2>>1)) continue;\n\t\t\t\tif (mask1 & mask2) continue;\n\t\t\t\t(f[i][mask1]+=f[i-1][mask2])%=mo;\n\t\t\t\tif (!mask2) break;\n\t\t\t}\n\t\t\tif (!mask1) break;\n\t\t}\n\t}\n\t\n\tint ans=0;\n\tfor (int i=0;i<=all;i++) (ans+=f[n][i])%=mo; \n\tprintf(\"%lld\\n\",ans);\n\t \n\treturn 0;\n}\n```",
        "postTime": 1565442291,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "#### [\u535a\u5ba2\u4f20\u9001\u95e8](https://blog.csdn.net/huang_ke_hai/article/details/86669145)\n#### \u9898\u76ee\u63cf\u8ff0\uff1a\n\u519c\u573a\u4e3bJohn\u65b0\u4e70\u4e86\u4e00\u5757\u957f\u65b9\u5f62\u7684\u65b0\u7267\u573a\uff0c\u8fd9\u5757\u7267\u573a\u88ab\u5212\u5206\u6210M\u884cN\u5217(1 \u2264 M \u2264 12; 1 \u2264 N \u2264 12)\uff0c\u6bcf\u4e00\u683c\u90fd\u662f\u4e00\u5757\u6b63\u65b9\u5f62\u7684\u571f\u5730\u3002John\u6253\u7b97\u5728\u7267\u573a\u4e0a\u7684\u67d0\u51e0\u683c\u91cc\u79cd\u4e0a\u7f8e\u5473\u7684\u8349\uff0c\u4f9b\u4ed6\u7684\u5976\u725b\u4eec\u4eab\u7528\u3002\n\u9057\u61be\u7684\u662f\uff0c\u6709\u4e9b\u571f\u5730\u76f8\u5f53\u8d2b\u7620\uff0c\u4e0d\u80fd\u7528\u6765\u79cd\u8349\u3002\u5e76\u4e14\uff0c\u5976\u725b\u4eec\u559c\u6b22\u72ec\u5360\u4e00\u5757\u8349\u5730\u7684\u611f\u89c9\uff0c\u4e8e\u662fJohn\u4e0d\u4f1a\u9009\u62e9\u4e24\u5757\u76f8\u90bb\u7684\u571f\u5730\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6ca1\u6709\u54ea\u4e24\u5757\u8349\u5730\u6709\u516c\u5171\u8fb9\u3002\nJohn\u60f3\u77e5\u9053\uff0c\u5982\u679c\u4e0d\u8003\u8651\u8349\u5730\u7684\u603b\u5757\u6570\uff0c\u90a3\u4e48\uff0c\u4e00\u5171\u6709\u591a\u5c11\u79cd\u79cd\u690d\u65b9\u6848\u53ef\u4f9b\u4ed6\u9009\u62e9\uff1f\uff08\u5f53\u7136\uff0c\u628a\u65b0\u7267\u573a\u5b8c\u5168\u8352\u5e9f\u4e5f\u662f\u4e00\u79cd\u65b9\u6848\uff09\n***\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\uff1a\u4e24\u4e2a\u6574\u6570M\u548cN\uff0c\u7528\u7a7a\u683c\u9694\u5f00\u3002\n\u7b2c2\u5230\u7b2cM+1\u884c\uff1a\u6bcf\u884c\u5305\u542bN\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\uff0c\u63cf\u8ff0\u4e86\u6bcf\u5757\u571f\u5730\u7684\u72b6\u6001\u3002\u7b2ci+1\u884c\u63cf\u8ff0\u4e86\u7b2ci\u884c\u7684\u571f\u5730\uff0c\u6240\u6709\u6574\u6570\u5747\u4e3a0\u62161\uff0c\u662f1\u7684\u8bdd\uff0c\u8868\u793a\u8fd9\u5757\u571f\u5730\u8db3\u591f\u80a5\u6c83\uff0c0\u5219\u8868\u793a\u8fd9\u5757\u571f\u5730\u4e0d\u9002\u5408\u79cd\u8349\u3002\n***\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u4e00\u4e2a\u6574\u6570\uff0c\u5373\u7267\u573a\u5206\u914d\u603b\u65b9\u6848\u6570\u9664\u4ee5100,000,000\u7684\u4f59\u6570\u3002\n***\n\u5206\u6790\uff1a\u72b6\u538bdp\uff0c\u8bbedp[i][j]\u4e3a\u7b2ci\u884c\u72b6\u6001\u4e3aj\u7684\u65b9\u6848\u6570\u3002\u5f00\u59cb\u7528\u4e00\u4e2a\u6570\u7ec4$f[i]$\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u884c\u7684\u4e8c\u8fdb\u5236\u6240\u5bf9\u5e94\u5f97\u5341\u8fdb\u5236\u6570\u3002\u8f6c\u79fb\u65f6\uff0c\u679a\u4e3e\u4e0a\u4e0b\u4e24\u884c\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u5f53\u524d\u79cd\u7684\u7530\u662f\u5408\u7406\u7684\uff0c\u90a3\u4e48\u5c31\u80af\u5b9a\u6ee1\u8db3 $(i\\&(i>>1)==0)\\&\\&(i\\&(i<<1)==0)$\uff0c\u4ee5\u53ca\u662f\u653e\u5728\u519c\u7530\u4e0d\u8d2b\u7620\u7684\u571f\u4e0a\u7684$(j|f[k]==j)$\u3002\u8f6c\u79fb\u65f6\u5c31\u4ece\u4e0a\u5c42\u8f6c\u79fb\u7d2f\u52a0\u5373\u53ef.\n\n\u4e0d\u96be\u5904\u7406\u51fa\u9884\u5904\u7406\u90e8\u5206\uff1a\n\n```cpp\n    for (int i=1,x;i<=n;i++){\n\t    int sum=0;\n\t    for (int j=1;j<=m;j++) scanf(\"%d\",&x),sum=sum*2+x;\n\t    f[i]=sum;\n\t}\n```\n\ndp\u90e8\u5206\u5982\u4e0b\uff1a\n\n```cpp\n\tfor (int i=1;i<=n;i++)\n\t  for (int j=0;j<=sum;j++)\n\t    if (vis[j]&&((j&f[i])==j))\n\t      for (int k=0;k<=sum;k++)\n\t        if (!(k&j))\n\t          dp[i][j]=(dp[i][j]+dp[i-1][k])%P;\n```\n\u8fd9\u4e24\u90e8\u5206\u662f\u6838\u5fc3\uff0c\u9700\u8981\u6ce8\u610f\uff0c\u4e0d\u8fc7\u503c\u5f97\u4e00\u63d0\u7684\u662f\u8fd9\u9053\u9898\u7684\u521d\u503c\u4e5f\u6bd4\u8f83\u7279\u6b8a\u3002\n\n\u90a3\u4e48\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define P 100000000\nint f[100001];\nint dp[13][16777217];\nbool vis[16777217];\nint n,m;\n\nint main(){\n    scanf(\"%d %d\",&n,&m);\n    for (int i=1,x;i<=n;i++){\n\t    int sum=0;\n\t    for (int j=1;j<=m;j++) scanf(\"%d\",&x),sum=sum*2+x;\n\t    f[i]=sum;\n\t}\n//\tfor (int i=1;i<=n;i++) cout<<f[i]<<endl;\n\tint sum=(1<<m)-1;\n\tfor (int i=0;i<=sum;i++)\n\t  if (!(i&(i<<1))&&(i|f[1])==f[1]) dp[1][i]=1;\n\tfor (int i=0;i<=sum;i++)\n\t  vis[i]=(!(i&(i>>1)))&&(!(i&(i<<1)));\n\tfor (int i=1;i<=n;i++)\n\t  for (int j=0;j<=sum;j++)\n\t    if (vis[j]&&((j&f[i])==j))\n\t      for (int k=0;k<=sum;k++)\n\t        if (!(k&j))\n\t          dp[i][j]=(dp[i][j]+dp[i-1][k])%P;\n\tint ans=0;\n\tfor (int i=0;i<=sum;i++) ans=(ans+dp[n][i])%P;\n\tprintf(\"%d\",ans);\n}\n```\n\n",
        "postTime": 1548677210,
        "uid": 34301,
        "name": "\u9e6d\u5929",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<vector>\nusing namespace std;\nconst int mod=100000000;\ninline int read()\n{\n\tint x=0,w=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+c-48;c=getchar();}\n\treturn x*w;\n}\n\nvector<int> s[15];\nint n,m,f[15][1<<13]={0},cnt=0,sta[15]={0},len[15];//n\u884cm\u5217 \n//\u4e0a\u4e0b\u5de6\u53f3\u4e0d\u80fd\u79cd\uff0cf[i][j]\u8868\u793a\u7b26\u5408\u9898\u8bbe\u6761\u4ef6\u4e14\u7b2ci\u884c\u72b6\u6001\u4e3aj\u7684\u65b9\u6848\u6570\n//s[i][j]\u8868\u793a\u72b6\u6001i\u5bf9\u7b2cj\u884c\u662f\u5426\u6210\u7acb \n\ninline void init()\n{\n\tint tot=(1<<n)-1;\n\tfor(int i=0;i<=tot;i++)\n\t{\n\t\tif((i>>1)&i) continue;\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif((sta[j]|i)==sta[j])//\u6210\u7acb \n\t\t\t\ts[j].push_back(i);\n\t}\n}\nint main()\n{\n\tm=read(),n=read();\n\tfor(register int i=1;i<=m;i++)\n\t\tfor(register int j=1;j<=n;j++)\n\t\t{\n\t\t\tint x=read();\n\t\t\tif(x)\n\t\t\t\tsta[i]|=(1<<(n-j));\n\t\t}\n\tinit();\n\tfor(register int i=1;i<=m;i++)\n\t\tlen[i]=s[i].size();\n\tfor(register int i=0;i<len[1];i++)\n\t\tf[1][s[1][i]]=1;\n\tfor(register int i=2;i<=m;i++)\n\t{\n\t\tfor(register int j=0;j<len[i];j++)\n\t\t{\n\t\t\tint s1=s[i][j];\n\t\t\tfor(register int k=0;k<len[i-1];k++)\n\t\t\t{\n\t\t\t\tint s2=s[i-1][k];\n\t\t\t\tif(s1&s2) continue;//\u5224\u65ad\u4e0a\u4e0b\u662f\u5426\u6709\u4e00\u6837\u7684 \n\t\t\t\tf[i][s1]=(f[i][s1]+f[i-1][s2])%mod;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(register int j=0;j<len[m];j++)\n\t{\n\t\tint s1=s[m][j];\n\t\tans=(ans+f[m][s1])%mod;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1544966871,
        "uid": 88736,
        "name": "Sober_Clever",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011\u6d1b\u8c371879"
    },
    {
        "content": "## P1879 [USACO06NOV]\u7389\u7c73\u7530Corn Fields\n\n\u770b\u5230 N \u8f83\u5c0f \uff0c \u5e94\u8be5\u80fd\u60f3\u5230 **\u72b6\u6001\u538b\u7f29**\n\n* #### \u72b6\u6001\u8bbe\u8ba1\n\n```\nF[I][J]\n```\n\n\u8868\u793a\u7b2c\uff29\u884c\u5904\u4e8e\u72b6\u6001\uff2a\uff0c\u603b\u7684\u65b9\u6848\u6570\u3000\uff1b\n\n\u90a3\u4e48\u5bb9\u6613\u5f97\u51fa\uff26\uff3b\uff29\uff3d\uff3b\uff2a\uff3d\u3000\uff1d\u3000$F[i][j]=sum(F[i-1][0],F[i-1][1],F[i-1][2])$\n\n* #### \u5224\u65ad\u72b6\u6001\u662f\u5426\u5408\u6cd5\n\n  ```\n  (i<<1)&i\n  ```\n\n  \u8fd9\u53ef\u4ee5\u5224\u65adI\u4e2d\u662f\u5426\u6709\u76f8\u90bb\u7684\u4e24\u4e2a1\uff1b\n\n\n\n* #### \u8c03\u8bd5\u7684\u5c0f\u6280\u5de7\n\n  \u663e\u793a\u6570\u5b57\u4ee3\u8868\u7684\u72b6\u6001\n\n  ```c\n  string Dbg(int X) {\n      string Ans = \"\" ;\n      for (R int i = 0 ; i < M ; ++ i) {\n          Ans = (char)('0' + (((1<<i)&X)?1:0)) + Ans ;\n      }\n      return Ans ;\n  }\n  ```\n\n\n\n* Code\n\n  ```C\n  #include <string.h>\n  #include <stdio.h>\n  #define re register\n  #define gc getchar()\n  int Qread () {\n      int x = 0,f = 1;\n      char ch = gc ;\n      while (ch >'9' || ch < '0') {\n          if (ch =='-')f = -1;\n          ch = gc ;\n      }\n      while (ch >='0' && ch <='9') {\n          x = x * 10 + ch -'0' ;\n          ch = gc ;\n      }\n      return x *f ;\n  }\n  const int Wzx = 100000000 ;\n  int N , M ,F[14][4098];\n  unsigned short int A[14] , Pw;\n  int main () {\n      //freopen (\"P1879.in\" , \"r\" , stdin) ;\n      N = Qread () , M = Qread () ;\n      Pw = 1 << M ;\n      memset (A , 0 ,sizeof (A)) ;\n      re unsigned int i , j , k;\n      for (i = 0; i < N; ++ i) {\n          for (j = 0 ; j < M ; ++ j) {\n              A[i]= A[i] | (Qread() << j) ;\n          }\n          A[i] = ~A[i] ;\n      }\n      memset (F , 0 , sizeof (F)) ;\n      for (i = 0 ; i < Pw ; ++ i) {\n          if ((i >> 1) & i) continue ;\n          if (i&A[0]) continue ;\n          F[0][i] = 1 ;\n      }\n      for (i = 1; i < N ; ++ i) {\n          for (j = 0 ; j < Pw; ++ j) {\n              if ((j>>1) & j) continue ;\n              if (j&A[i]) continue ;\n              for (k = 0 ; k < Pw ; ++ k) {\n                  if (k&A[i-1]) continue ;\n                  if (k&j)continue ;\n                  F[i][j] += F[i-1][k] ;\n                  F[i][j] %= Wzx; \n              }\n          }\n      }\n      int Ans = 0 ;\n      for (i = 0 ; i < Pw ; ++ i) {\n          Ans += F[N-1][i] ;\n          Ans %= Wzx; \n      }\n      printf (\"%d\\n\" , Ans) ;\n      fclose (stdin) ;\n      fclose (stdout);\n      return 0;\n  }\n  ```\n\n\n\nThanks!",
        "postTime": 1544535353,
        "uid": 35219,
        "name": "Baihua",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u72b6\u538b\u7684\u8bdd\u662f\u538b\u7f29\u6bcf\u4e00\u884c\uff0c\u7136\u540e\u6bcf\u884c\u6bcf\u884c\u5730\u505a\u7c7b\u4f3c\u80cc\u5305\u7684\u64cd\u4f5c\u3002\n\n\u5176\u72b6\u6001\u5b9a\u4e49\u4e3a\u505a\u5230$i$\u884c\uff0c\u7b2c$i$\u884c\u7684\u72b6\u6001\u662f$j$\uff08$j$\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236$01$\u4e32\uff0c\u4e3a\u4e86\u5b58\u50a8\u8f6c\u6362\u6210\u5341\u8fdb\u5236\uff09\uff0c\u7b97\u51fa\u6765\u7684\u603b\u53ef\u80fd\u6027\u6570\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u8f6c\u79fb\u5f88\u660e\u663e\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u524d\u9762\u6240\u6709\u7684\u53ef\u80fd\uff0c\u53ea\u8981\u5408\u6cd5\u90fd\u53ef\u4ee5\u52a0\u4e0a\u53bb\uff0c\u800c\u4e14\u524d\u9762\u4e00\u884c\u4e5f\u5df2\u7ecf\u5e2e\u6211\u4eec\u7edf\u8ba1\u4e86\u5b83\u4e4b\u524d\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4ece\u524d\u4e00\u884c\u5408\u6cd5\u7684\u8f6c\u79fb\u3002\u8fd9\u4e2a\u72b6\u6001$j$\u662f\u53ef\u4ee5\u4e3a$0$\u7684\uff0c\u6bd5\u7adf\u8fd9\u4e00\u884c\u4e0d\u9009\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\n\u4e3b\u8981\u95ee\u9898\u5728\uff0c\u5982\u4f55\u5224\u65ad\u662f\u5426\u4e0d\u76f8\u90bb\u3002\n\n\u5bf9\u4e8e\u76f8\u90bb\u4e24\u884c\u7684\u6bd4\u8f83\uff0c\u5f88\u7b80\u5355\uff0c\u8bbe\u4e24\u4e2a01\u4e32\u662f$S_1$\uff0c$S_2$\uff0c\u90a3\u4e48$S_1 $ & $S_2==0$\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u540c\u4e00\u884c\u6765\u6bd4\u8f83\u6bcf\u5217\u5462\uff1f\u6bd4\u8f83\u597d\u5199\u7684\u662f\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u72b6\u6001$j$\u662f\u5426\u76f8\u90bb\uff0c\u6bd4\u8f83\u597d\u60f3\uff0c\u76f4\u63a5\u7684\u662f\u76f4\u63a5\u679a\u4e3e\u8fdb\u884c\u6bd4\u8f83\u3002\n\n\u81f3\u4e8e\u590d\u6742\u5ea6\uff0c\u6211\u4e5f\u89c9\u5f97\u6709\u70b9\u5927\uff0c\u6bd5\u7adf\u6570\u636e\u6c34\uff0c\u8fc7\u4e86\u5e76\u4e14\u8dd1\u5f97\u633a\u5feb\u7684\u3002\n\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint mod=100000000;\n\nint n,m;\nint a[100];\nlong long dp[105][6005];\nlong long ans;\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        int now=1;\n        for(int j=1;j<=m;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            a[i]+=now*x;\n            now*=2;\n        }\n    }\n\n    dp[0][0]=1;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=0;j<=(1<<m)-1;j++)\n        {\n            bool ok=0;\n            for(int k=2;k<=m;k++)\n                if(((1<<(k-1))&j)&&((1<<(k-2))&j))\n                {\n                    ok=1;\n                    break;\n                }\n            if(ok)continue;\n            if((j&a[i])!=j)continue;\n            for(int k=0;k<=(1<<m)-1;k++)\n            {\n                if((j&k)==0){\n                    dp[i][j]+=dp[i-1][k];\n                    dp[i][j]%=mod;\n                }\n            }\n            dp[i][j]%=mod;\n            if(i==n)ans=(ans+dp[i][j])%mod;\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1540860094,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u4f4d\u8fd0\u7b97+DP\u7ecf\u5178\u597d\u9898\u3002  \n\u5177\u4f53\u601d\u8def\uff1a\u8f93\u5165\u7684\u5730\u56fe\u7531\u4e8e\u53ea\u67090\u548c1\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u75282\u8fdb\u5236\u6765\u4fdd\u5b58\u3002  \n\u4f8b\u5982\uff1a$1 0 1$\u7528$5$\u6765\u4fdd\u5b58\uff0c\u5373$2^2+2^0$  \n\n\u8f93\u5165\u5b8c\u5730\u56fe\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u751f\u6210\u521d\u59cb\u72b6\u6001\uff0c\u5148\u751f\u6210\u5f53\u524d\u884c\u4e2d\u53ef\u80fd\u7684\u72b6\u6001\n\n\u6211\u4eec\u4f7f\u7528\u4f4d\u8fd0\u7b97\u6765\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4f8b\u5982$110$\u4e0d\u662f\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\uff0c\u56e0\u4e3a 6&(6<<1) != 0 \uff0c\u4e3a\u4ec0\u4e48\uff01=0\u5c31\u4e0d\u6210\u7acb\u5462\uff1f\n\n\u6bd4\u5982$1 1 0_2$\uff0c\u4ed6\u5de6\u79fb1\u4f4d\u53d8\u6210\u4e86$1100_2$,110$_2$&1100$_2$=$100_2 \\neq 0$\uff0c\n\n\u800c$101_2$\u5c31\u662f\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\uff0c\u56e0\u4e3a\u4ed6\u4e0e\u4ed6\u5de6\u79fb\u4e00\u4f4d\u540e\u505a\u4e0e\u8fd0\u7b97\u7b49\u4e8e0\u3002\n\n\u89e3\u51b3\u4e86\u521d\u59cb\u5316\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u585e\u5165\u5730\u56fe\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u7b80\u5355\uff0c\u5c06\u53ef\u80fd\u6027\u4e0e\u5730\u56fe\u8fdb\u884c\u6216\u8fd0\u7b97\uff0c\u5982\u679c\u7ed3\u679c\u4ecd\u7136\u662f\u5730\u56fe\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\u3002\n\n\u6700\u540e\uff0c\u6211\u4eec\u6765\u770b\u770bDP\u7684\u601d\u8def\uff0cdp[i][j]\u8868\u793a\u524di\u884c\u7684\u7b2cj\u79cd\u72b6\u6001\u6700\u591a\u7684\u79cd\u6570\uff0c\u56e0\u6b64\u7b54\u6848\u5c31\u662f$\\sum dp[n]$\u3002\n\n```cpp\nint n,m,maps[22],cnt,ans;//cnt\u8868\u793a\u6210\u7acb\u7684\u65b9\u6848\u79cd\u6570\nint ok[5555],dp[22][5555];//dp[i][j]\u8868\u793a\u524di\u884c\u7684\u7b2cj\u79cd\u72b6\u6001\u7684\u6700\u5927\u503c\uff08\u7b54\u6848\u5c31\u662f\u628a\u6700\u540e\u4e00\u884c\u90fd\u52a0\u8d77\u6765\uff09 \uff0cok\u8868\u793a\u6210\u7acb\u7684\u72b6\u6001\nint main() {\n\tios::sync_with_stdio(0);\n\tn=read();\n\tm=read();\n\tfor(int i=0; i<n; i++)\n\t\tfor(int j=0; j<m; j++)\n\t\t\tif(read())maps[i]+=(1<<j);//\u8bfb\u5165\u5730\u56fe\uff08\u6211\u8fd9\u91cc\u5b9e\u9645\u4e0a\u662f\u53cd\u7740\u5b58\u7684\uff0c\u4f46\u662f\u5e76\u4e0d\u5f71\u54cd\u7ed3\u679c\uff09\n\tfor(int i=0; i<(1<<m); i++)\n\t\tif(!(i&(i<<1)))\n\t\t\tok[cnt++]=i;//\u68c0\u67e5\u53ef\u80fd\u7684\u60c5\u51b5\u79cd\u6570\n\tfor(int i=0; i<cnt; i++)\n\t\tif((maps[0]|ok[i])==maps[0])dp[0][i]=1;//\u4f18\u5148\u5904\u7406\u7b2c1\u884c\uff08\u6211\u5b58\u56fe\u4ece0\u5f00\u59cb\uff09\n\tfor(int i=1; i<n; i++) {\n\t\tfor(int j=0; j<cnt; j++)\n\t\t\tif((maps[i]|ok[j])==maps[i])//\u5982\u679c\u8fd9\u79cd\u72b6\u6001\u53ef\u4ee5\u653e\u8fdb\u5f53\u524d\u5730\u56fe\n\t\t\t\tfor(int k=0; k<cnt; k++)\n\t\t\t\t\tif(!(ok[j]&ok[k]))dp[i][j]+=dp[i-1][k];//\u5982\u679c\u7b2cj\u79cd\u72b6\u6001\u548c\u7b2ck\u79cd\u72b6\u6001\u6ca1\u6709\u51b2\u7a81\uff0c\u5219\u7ee7\u627f\u4e0a\u4e00\u72b6\u6001\u7684\u7b54\u6848\n\t}\n\tfor(int i=0; i<cnt; i++)\n\t\tans+=dp[n-1][i];//\u628a\u6700\u540e\u4e00\u884c\u52a0\u8d77\u6765\n\twrite(ans%100000000);//\u8f93\u51fa\u7ed3\u679c\n\treturn 0;\n}\n\n\n```",
        "postTime": 1529129652,
        "uid": 58399,
        "name": "\u72f8\u72f8\u517b\u7684\u654f\u654f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u2026\u2026\u521a\u5f00\u59cb\u8111\u5b50\u4e00\u62bd\u4ee5\u4e3a2^12\u4f1aMLE\uff0c\u770b\u4e86\u9898\u89e3\u518d\u4e00\u7b97\u2014\u2014\u8fd8\u7ef0\u7ef0\u6709\u4f59hhhh\n\n\u9996\u5148\u8bf4\u4e00\u4e0b\u72b6\u6001\u5b9a\u4e49\uff0c\u548c\u697c\u4e0b\u5927\u4f6c\u90fd\u662f\u4e00\u6837\u7684\uff0cf[i][j]\u8868\u793a\u7b2ci\u884c\u72b6\u6001\u4e3aj\u7684\u65b9\u6848\u6570\uff0cj\u662f\u7528\u5341\u8fdb\u5236\u8868\u793a\u7684\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u4e8c\u8fdb\u5236\u6570\u7684\u6bcf\u4e00\u4f4d\u4ee3\u8868\u8be5\u4e3a\u9009\u8fd8\u662f\u6ca1\u9009\uff0c\u9009\u4e86\u5c31\u662f1\uff0c\u4e0d\u9009\u5c31\u662f0\n\n\uff08\u5176\u5b9e\u7b2c\u4e00\u7ef4\u662f\u53ef\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u6389\u7684\uff0c\u4f46\u61d2\u5f97\u5199\uff09\n\n\u6211\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u5237\u8868\u6cd5\uff0c\u611f\u89c9\u63a8\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\uff0c\u6240\u4ee5\u2026\u2026\n\n\u53e6\u5916\u8fd9\u4e2a\u9898\u662f\u6211\u7b2c\u4e00\u6b21\u7528\u9012\u5f52\u6765\u66f4\u65b0\u72b6\u6001hhhh\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u5177\u4f53\u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u8bb2\n\n```cpp\n#include<bits/stdc++.h>\n#define REP(x,a,b) for (int (x)=(a); (x)<=(b); (x)++) //\u4e2a\u4eba\u4e60\u60efhhhh\nusing namespace std;\nconst int N=13,toad=100000000;//\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6a21\u6570\u8d77\u8fd9\u4e2a\u540d\u5b57\uff0c\u60f3\u60f3\u5b83\u7684\u82f1\u8bed\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\nint n,m,ans,a[N][N],f[N][1<<N];//\u52a8\u89c4\u6570\u7ec4\u8d77\u540d\u4e3af\nint read(){\n    char c=getchar(); bool negative=false; int ret=0;\n    while ((c<'0' || c>'9') && c!='-') c=getchar();\n    if (c=='-') negative=true,c=getchar();\n    while (c>='0' && c<='9') ret=ret*10+c-'0',c=getchar();\n    return negative?-ret:ret;\n```\n}//\u8bfb\u5165\u4f18\u5316\uff08\u6c5f\u80e1\u4e60\u6c14\uff09\nvoid Update(int line, int step, int stats, int value, int cur){//\u9012\u5f52\u66f4\u65b0\u72b6\u6001\uff0cline\u4ee3\u8868\u90a3\u4e00\u884c\uff0cstep\u4ee3\u8868\u73b0\u5728\u5728\u586b\u7b2c\u51e0\u4f4d\uff0cstats\u662f\u4e0a\u4e00\u884c\u7528\u4e8e\u8f6c\u79fb\u7684\u72b6\u6001\uff0cvalue\u5c31\u662f\u4e0a\u4e00\u884c\u8be5\u72b6\u6001\u7684\u65b9\u6848\u6570\uff0ccur\u662f\u5f53\u524d\u72b6\u6001\n\nif (step==m+1){f[line][cur]=(f[line][cur]+value)%toad; return;}//\u5982\u679cstep==m+1\u4ee3\u8868\u586b\u5b8c\u4e86\uff0c\u66f4\u65b0\u7b54\u6848\n\n    if (cur&1 || (stats>>m-step)&1) Update(line,step+1,stats,value,cur<<1);//\u5982\u679c\u8fd9\u4e00\u4f4d\u7684\u5de6\u8fb9\u6216\u4e0a\u9762\u662f1\u8fd9\u4e00\u4f4d\u53ea\u80fd\u662f0\n```cpp\n    else {//\u5426\u5219\n        Update(line,step+1,stats,value,cur<<1);//\u53ef\u4ee5\u4e0d\u653e\n        if (a[line][step]) Update(line,step+1,stats,value,cur<<1|1);//\u653e\u7684\u8bdd\u5fc5\u987b\u6ee1\u8db3\u8fd9\u4f4d\u7f6e\u7684\u571f\u5730\u662f\u80a5\u6c83\u7684\n    }\n}\nint main(){\n    n=read(), m=read();\n    REP(i,1,n) REP(j,1,m) a[i][j]=read();//\u8bfb\u5165\n    f[0][0]=1;//\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u7b2c0\u884c\u4e0d\u80fd\u586b\uff0c\u53ef\u4ee5\u770b\u505a\u8fd9\u4e00\u884c\u571f\u5730\u5168\u90e8\u8d2b\u7620\uff0c\u8fd9\u6837\u8fd9\u4e00\u884c\u53ea\u80fd\u4e00\u4e2a\u4e0d\u653e\n    REP(i,0,n-1) REP(j,0,(1<<m)-1) if (f[i][j])//\u6328\u4e2a\u5237\u8868\uff0c\u6ce8\u610f\u5237\u8868\u7684\u65f6\u5019\u884c\u6570\u53ea\u80fd\u5230n-1\n        Update(i+1,1,j,f[i][j]%toad,0);\n    REP(i,0,1<<m) ans=(ans+f[n][i])%toad;//\u7edf\u8ba1\u7b54\u6848\uff0c\u540c\u65f6\u4e0d\u5fd8\u819c*\n    printf(\"%d\",ans%toad);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1507027314,
        "uid": 24548,
        "name": "\u5929\u4e0b\u7b2c\u4e00\u5251\u5ba2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u72b6\u538bDP\uff0c\u672c\u9898\u4e3b\u8981\u5728\u4e8e\u5b582\u8fdb\u5236\u6570\uff0c\u8fd8\u6709\u9898\u76ee\u7684\u610f\u601d\u662f\u8f93\u5165\u4e3a0\u7684\u8349\u5730\u4e0d\u80fd\u79cd\u8349\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u9898\u76ee\u91cc\u6211\u4eec\u8fd8\u8981\u5224\u65ad\u5f53\u524d\u7684\u72b6\u6001\u662f\u5426\u6ee1\u8db3\u8fd9\u4e00\u8981\u6c42\uff0c\u5b58\u56fe\u53ef\u4ee5\u53cd\u8fc7\u6765\u5b58\uff0c\u56e0\u4e3a\u8fd9\u68371\u5c31\u662f\u4e0d\u80fd\u653e\uff0c\u65b9\u4fbf\u6211\u4eec\u7684\u4f4d\u8fd0\u7b97&\u76f4\u63a5\u7b5b\u6389\u8fd9\u4e9b\u4e0d\u80fd\u653e\u7684\u60c5\u51b5\uff0c\u5176\u5b83\u5c31\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u6ce8\u610f\u7684\u5730\u65b9\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int hang=13;\nconst int zong=1<<hang;\nint n,m,st[zong],dp[hang][zong],mapp[hang],k,ans;\nvoid read(int &x){\n    char c=getchar();x=0;\n    while(!isdigit(c))c=getchar();\n    while(isdigit(c))x=x*10+c-'0',c=getchar();\n}\nint pd(int x){\n    return x&(x<<1);\n}\nint bj(int x,int y){\n    return (mapp[x]&st[y]);\n}\nint main(){\n    read(m),read(n);\n    for(register int i=1;i<=m;++i)\n        for(register int j=1;j<=n;++j){    \n            int x;\n            read(x);\n            if(x==0){\n                mapp[i]+=1<<(j-1);\n            }\n        }\n    for(register int i=0;i<(1<<n);++i){\n        if(!pd(i))\n            st[k++]=i;\n    }\n    for(register int i=0;i<k;++i)\n        if(!bj(1,i))\n            dp[1][st[i]]=1;\n    for(register int i=2;i<=m;++i){\n        for(int j=0;j<k;++j){\n            if(bj(i,j))continue;\n            for(int f=0;f<k;++f){\n                if(bj(i-1,f))continue;\n                if((st[j]&st[f])==0)\n                    dp[i][st[j]]+=dp[i-1][st[f]];\n            }\n        }\n    }\n    for(int i=0;i<(1<<n);++i){\n        ans+=dp[m][i];\n        ans%=100000000;    \n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1504339211,
        "uid": 47202,
        "name": "cheeseYang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u770b\u53d6\u819c\u7684\u6570\u5c31\u77e5\u9053\u66b4\u641c\u6b7b\u5b9a\uff0c\u90a3\u4e48\u7528\u72b6\u538b\uff0cf[i][j]\u8868\u793a\u53ef\u4ee5\u8f6c\u79fb\u5230i\u884cj\u72b6\u6001\u7684\u65b9\u6848\u6570\uff0c\u548c\u4e92\u4e0d\u4fb5\u72af\u7c7b\u4f3c\uff0c\u4f46\u7531\u4e8e\u63d0\u524d\u6709\u8d4b\u503c\uff0c\u6240\u4ee5\u628a1\u548c0\u6362\u4e00\u4e0b\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7684\u5224\u65ad\u63a8\u5bfc\u3002\n\n```cpp\n#include<iostream>\n#include<iomanip>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint m,n;\nbool a[14][14];int b[14],f[14][9000];\nint dfs(int x,int y,int zhuang,int net,int l,int old)\n{\n    if(y>=n)\n    {\n        f[x+1][(net|b[x+1])]=(f[x+1][(net|b[x+1])]+old)%100000000;\n        return 0;\n    }\n    if(y-l>1&&((1<<y)&zhuang)==0)\n    {\n        int k=net;\n        k=k|(1<<y);\n        dfs(x,y+2,zhuang,k,y,old);\n    }\n    dfs(x,y+1,zhuang,net,l,old);\n}\nint main()\n{\n    cin>>m>>n;\n    for(int i=1;i<=m;++i)\n     for(int j=1;j<=n;++j)\n     cin>>a[i][j];\n    for(int i=1;i<=m;++i)\n    {\n        b[i]=0;\n        for(int j=1;j<=n;++j)\n        {\n            if(a[i][j]==1)\n            a[i][j]=0;\n            else a[i][j]=1;\n            b[i]<<=1;\n            b[i]+=a[i][j];\n        }\n    }\n    f[1][b[1]]=1;  //\u4ecef\u30100\u3011\u30100\u3011\u63a8\u4e5f\u53ef\u4ee5\n    for(int i=1;i<=m;++i)\n     for(int j=0;j<(1<<n);++j)\n      if(f[i][j])\n      {\n          dfs(i,0,j,0,-2,f[i][j]);\n      }\n    int ans=0;\n    for(int i=0;i<(1<<n);++i)\n    ans=(ans+f[m+1][i])%100000000;\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1504148517,
        "uid": 43140,
        "name": "zhaoyifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u5982\u679c\u7528\u5750\u6807\u6027Dp\uff0c\u90a3\u4e48\u6309\u7167\u4e60\u60ef\u6211\u4eec\u5c31\u8981\u5b9a\u4e49\u4e00\u4e2a\n\nf[\u884c\u6570][\u8be5\u884c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u72b6\u6001][\u8be5\u884c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u7684\u72b6\u6001]\u2026\u2026[\u8be5\u884c\u7b2c12\u4e2a\u4f4d\u7f6e\u7684\u72b6\u6001]\n\n\u603b\u8ba113\u4e2a\u4e0b\u6807\u7684\u5927\u6570\u7ec4\uff0c\u663e\u7136\u6211\u4eec\u5904\u7406\u8d77\u6765\u4f1a\u5f88\u9ebb\u70e6\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u5e94\u8be5\u8981\u4f18\u5316\u4e00\u4e0b\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230m\u7684\u8303\u56f4\u5176\u5b9e\u5f88\u5c0f\uff0c\u800c\u5982\u679c\u6709\u4e00\u4e2a\u8303\u56f4\u662f\u572820\u4ee5\u5185\uff0c\u5e76\u4e14\u662f\u4e00\u4e2aDp\u95ee\u9898\u7684\u8bdd\n\n\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u72b6\u538bDp\uff0c\u72b6\u538bDp\u7684\u5b9e\u8d28\u5c31\u662f\u901a\u8fc7\u4e8c\u8fdb\u5236\u6570\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\n\n\u6700\u597d\u5148\u53bb\u5b66\u4e00\u4e0b\u4f4d\u8fd0\u7b97\u4e0d\u7136\u5f88\u96be\u770b\u61c2\u540e\u9762\u7684\u4ee3\u7801\n\n\u4f8b\u5982\u6837\u4f8b\u4e2d\u76841 1 1 / 0 1 0 \u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u6570 111/010 (\u53737\u4e0e2) \u6765\u8868\u793a\n\n\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u7684\u8ba1\u7b97\u6211\u5bf9\u5176\u8fdb\u884c\u4e86\u53d6\u53cd\u7684\u5904\u7406\uff0c\u5c31\u53d8\u6210\u4e86 000/101 \uff08\u53730\u4e0e5\uff09\n\n\u8fd9\u6837\u7528\u4e8c\u8fdb\u5236\u6570\u628a\u56fe\u4e00\u884c\u4e00\u884c\u7684\u5b58\u50a8\u5c31\u80fd\u5c06\u539f f \u6570\u7ec4\u540e\u976212\u7ef4\u538b\u7f29\u6210\u4e00\u7ef4\n\n\u5f53\u7136\u8fd8\u60f3\u4f18\u5316\u7a7a\u95f4\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\uff08\u53ef\u6211\u8fd9\u79cd\u61d2\u4eba\u4e0d\u60f3\u5199\uff09\n\n\u5176\u5b9e\u65b9\u7a0b\u672c\u6765\u4e5f\u5c31\u4e0d\u96be\u60f3\u4e3b\u8981\u662f\u770b\u600e\u4e48\u53bb\u628a\u6570\u7ec4\u4f18\u5316\n\n\u6240\u4ee5\u6211\u5c31\u4e0d\u8bf4\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u600e\u4e48\u63a8\u4e86\u81ea\u5df1\u63a8\u4e00\u4e0b\u5427\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int Mod=100000000;\nint n,m,k,ans,x;\nint map[15],st[5000],f[15][5000];\nvoid init()\n{\n    k=0,ans=0;\n    memset(map,0,sizeof(map));\n    memset(f,0,sizeof f);\n    memset(st,0,sizeof st);\n } \nint main()\n{\n    while(scanf(\"%d%d\",&n,&m)!=EOF) //\u6709\u591a\u7ec4\u6570\u636e \n    {\n        init();//\u8bb0\u5f97\u521d\u59cb\u5316\u6570\u7ec4\u4e0e\u53d8\u91cf \n        for(int i=1;i<=n;i++)\n         for(int j=1;j<=m;j++)\n         {\n             scanf(\"%d\",&x);\n            if(x==0) map[i]+=1<<(j-1); //\u8bfb\u5165\u5904\u7406 \n            //\u7528\u6765\u5b58\u5730\u56fe(\u4e00\u884c\u4e00\u884c\u5730\u5b58)\u5e76\u53d6\u53cd \n         }\n            \n        for(int i=0;i<(1<<m);i++)\n          if(!(i&(i<<1))) st[++k]=i;    //\u5224\u65ad\u662f\u5426\u76f8\u90bb\uff0c\u627e\u5230\u53ef\u884c\u7684\u60c5\u51b5 \n          \n         for(int i=1;i<=k;i++)\n          if(!(map[1]&st[i])) f[1][st[i]]=1; //\u521d\u59cb\u5316\u7b2c\u4e00\u884c \n          \n         for(int i=2;i<=n;i++)\n          for(int j=1;j<=k;j++)\n          {\n              if(st[j]&map[i]) continue;\n              for(int l=1;l<=k;l++)\n               {\n                   if(st[l]&map[i-1]) continue;\n                  if(!(st[l]&st[j])) f[i][st[j]]+=f[i-1][st[l]];\n             }\n         }\n         \n         for(int i=1;i<=k;i++)\n          ans=(ans+f[n][st[i]])%Mod;\n         printf(\"%d\",ans);\n    }    \n    return 0;\n}\n```",
        "postTime": 1503113264,
        "uid": 33963,
        "name": "\u6a80\u9ece\u6597\u00b7\u795e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "# [\u987e](https://www.luogu.org/blog/RPdreamer/#)[z](https://www.cnblogs.com/-guz/)\n\n~~\u4f60\u6ca1\u6709\u53d1\u73b0\u4e24\u4e2a\u5b57\u91cc\u7684blog\u90fd\u4e0d\u4e00\u6837\u561b~~ qwq\n\n\u9898\u76ee\u63cf\u8ff0-->[p1879 [USACO06NOV]\u7389\u7c73\u7530Corn Fields](https://www.luogu.org/problemnew/show/P1879)\n\n### \u5206\u6790\n\n**\u4e0b\u9762\u7684$n,m$\u4e3a$n$\u884c$m$\u5217,\u4e0e\u9898\u76ee\u63cf\u8ff0\u4e0d\u7b26.**\n\n\u96be\u5f97\u505a\u8d77\u4e86\u72b6\u538bDP\u7684\u9898 \n\n$f[i]$\u4ee3\u8868\u7b2c$i$\u884c\u7684\u72b6\u6001.\u5c31\u662f\u8f93\u5165\u7684\u72b6\u6001,\u8fd9\u4e2a\u4e1c\u897f\u7684\u8bdd\u5c31\u76f4\u63a5\u7b97\u5c31\u597d\u4e86.\n\n$$(f[i]<<=1)|=x$$\n\n\u521d\u59cb\u5316\uff1a$dp[0][0]=1$\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u884c,\u518d\u679a\u4e3e\u72b6\u6001$j$\u5224\u65ad\u5f53\u524d\u884c\u7684\u72b6\u6001$f[i]$\u662f\u5426\u4f1a\u5305\u542b\u72b6\u6001$j$,\u5373\u5408\u6cd5\u4e0e\u5426.\n\n\u5224\u65ad\u4e0d\u80fd\u6709\u76f8\u4e34\u7684\u8bdd,\u76f4\u63a5\u5199\u4e00\u4e2a\u51fd\u6570\u5373\u53ef\n\n![](https://i.loli.net/2018/10/12/5bc09deb93c6b.png)\n\n\u8fd9\u91cc\u5c31\u4e0d\u591a\u89e3\u91ca\u4e86.\n\n\u7136\u540e\u5728\u679a\u4e3e\u4e0a\u4e00\u884c\u72b6\u6001$k$\u662f\u5426\u4e0e\u5f53\u524d\u72b6\u6001$j$\u4e0d\u76f8\u90bb.\u5373\u4e0a\u4e0b\uff06\u8d77\u6765\u4e3a0\u3002\n\n(\u8fd9\u5c31\u6d89\u53ca\u5230\u4e86\uff06\u7684\u6027\u8d28,\u4e24\u8fb9\u4e3a$True$\u624d\u4e3a$True$)\n\n$$ans=\\sum_{i=0}^{(1<<m)-1}f[n][i]$$\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n \\times 2^{m+1})$\n\n``\u4ee3\u7801``\n\n```c++\n#include<cstdio>\n#include<cctype>\n#define mod 100000000\n#define R register\nusing namespace std;\ninline void in(int &x)\n{\n\tint f=1;x=0;char s=getchar();\n\twhile(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile(isdigit(s)){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nint res[15][15],f[18],n,m,dp[18][1<<15],ans;\ninline bool ok(int state)\n{\n\treturn ((state&(state>>1))==0 and (state&(state<<1))==0);\n}\nint main()\n{\n\tin(n),in(m);\n\tfor(R int i=1;i<=n;i++)\n\t\tfor(R int j=1,x;j<=m;j++)\n\t\t{\n\t\t\tin(x);\n\t\t\t(f[i]<<=1)|=x;\n\t\t}\n\tint state=(1<<m)-1;\n\tdp[0][0]=1;\n\tfor(R int i=1;i<=n;i++)\n\t\tfor(R int j=0;j<=state;j++)\n\t\t\tif(ok(j) and (f[i]&j)==j)\n\t\t\t\tfor(R int k=0;k<=state;k++)\n\t\t\t\t\tif((k&j)==0)\n\t\t\t\t\t\t(dp[i][j]+=dp[i-1][k])%=mod;\n\tfor(R int i=0;i<=state;i++)\n\t\t(ans+=dp[n][i])%=mod;\n\tprintf(\"%d\",ans%mod);\n}\n```\n\n",
        "postTime": 1539350037,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "**\u9ad8\u80fd\u8b66\u544a \u9ad8\u80fd\u8b66\u544a**\n\n~~\u5176\u5b9e\u4e00\u70b9\u4e5f\u4e0d\u9ad8\u80fdQWQ~~\n\n\u505a\u5b8c\u4ee5\u540e\u770b\u4e86\u4f17\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u4f3c\u4e4e\u53ea\u6709\u6211\u8fd9\u4e2a\u849f\u84bb\u8f93\u5165\u65f6\u7528\u4e86[\u5f02\u6216](https://blog.csdn.net/xiezhongyuan07/article/details/79248516)\uff1f\n\n\u597d\u4e86\u4e0d\u7ba1\u4e86\uff0c\u91cd\u70b9\u662f\u6211\u7684\u601d\u8def\u5b9e\u9645\u4e0a\u4e0e\u524d\u4eba\u5e76\u65e0\u4e24\u6837\uff1adfs\u66b4\u529b\u9884\u5904\u7406\u51fa\u5bf9\u4e8e\u4efb\u4e00\u884c\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001\uff08\u6682\u4e0d\u8003\u8651\u8d2b\u7620\u7684\u571f\u5730\uff09\uff0c\u5c31\u662f\u8fd9\u6837\u6ef4\uff1a\n```\nvoid dfs(int depth,int x)\n{\n\tif(depth>=m)\n\t{\n\t\tsum[++cnt]=x;\n\t\treturn;\n\t}\n\tdfs(depth+1,x);\n\tdfs(depth+2,x+(1<<depth));\n}\n```\n\n\u5176\u4e2dsum\u8bb0\u5f55\u7684\u5c31\u662f\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6bcf\u884c\u7684\u72b6\u6001\uff0c\u5982\uff1a\n```\n1 0 1 0 0 1\n```\n\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5b83\u770b\u505a\u4e00\u4e2a6\u4f4d\u4e8c\u8fdb\u5236\u6570\u3002\u6ce8\u610f\uff0c\u5728\u672c\u849f\u84bb\u7684\u4ee3\u7801\u4e2d\u8be5\u4e8c\u8fdb\u5236\u6570\u662f\u5012\u7740\u5b58\u7684\uff08= =\uff09\u4f8b\u5b50\u4e2d\u768401\u4e32\u5c31\u8868\u793a\u4e3a1+2^2+2^5=37\u3002\u6613\u5f97\u6bcf\u884c\u79cd\u5730\u65b9\u6848\u6570\u603b\u6570\uff08_cnt_\uff09\u4e0d\u8d85\u8fc7$2^{12}$\n\n\u9884\u5904\u7406\u5b8c\u6bd5\uff0c\u5c31\u8be5\u8003\u8651\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e86\u3002\u6211\u4eec\u7528_prog[i][j]_\u8868\u793a\u7b2c_i_\u884c\u7b2c_j_\u79cd\u79cd\u5730\u65b9\u5f0f\u7684\u65b9\u6848\u603b\u6570\uff0c\u90a3\u4e48\u5728\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u6709prog[i][j]=$\\sum_{k=1,j=1}^{cnt}{prog[i-1][k]}$\n\n\u8fd9\u91cc_k_\u662f\u679a\u4e3e\u4e0a\u4e00\u6392\uff08\u5373\u7b2c_i-1_\u6392\uff09\u7684\u79cd\u5730\u65b9\u5f0f\uff0c_j_\u662f\u679a\u4e3e\u5f53\u524d\u6392\uff08\u5373\u7b2c_i_\u6392\uff09\u7684\u79cd\u5730\u65b9\u5f0f\u3002\n\n\u6700\u540e\u4ee3\u7801\u5982\u4e0b\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define MAXN 100000000\ntypedef unsigned long long ULL;\nusing namespace std;\nULL n,m,prog[13][4097],sum[4097],cnt=0,field[13];\nlong long read()\n{\n\tlong long res=0,bj=1;char c=0;\n\twhile(c<'0'||c>'9'){if(c=='-')bj=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){res=res*10+c-48;c=getchar();}\n\treturn res*bj;\n}\nvoid dfs(int depth,int x)\n{\n\tif(depth>=m)\n\t{\n\t\tsum[++cnt]=x;\n\t\treturn;\n\t}\n\tdfs(depth+1,x);\n\tdfs(depth+2,x+(1<<depth));\n}\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)field[i]+=((read()^1)<<(j-1));\n\tdfs(0,0);\n\tfor(int i=1;i<=cnt;i++)\n\t\tif(!(field[1]&sum[i]))prog[1][i]=1;//\u9884\u5904\u7406\u90e8\u5206\uff08\u5343\u4e07\u8bb0\u5f97\u5224\u65ad\u5408\u6cd5\uff0c\u849f\u84bb\u5c31\u662f\u56e0\u4e3a\u6ca1\u5728\u8fd9\u91cc\u5224\u65adWA\u4e86\u4e00\u4e2a\u70b9\uff09\n\tfor(int i=2;i<=n;i++)\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t\tfor(int k=1;k<=cnt;k++)\n\t\t\t{\n\t\t\t\tif(sum[j]&field[i])continue;//\u5982\u679c\u8be5\u60c5\u51b5\u4e0d\u5408\u6cd5\u820d\u53bb\n\t\t\t\tif(sum[k]&field[i-1])continue;//\u5982\u679c\u4e0a\u4e00\u884c\u4e0d\u5408\u6cd5\u820d\u53bb\n\t\t\t\tif(sum[j]&sum[k])continue;//\u5982\u679c\u4e0a\u4e0b\u76f8\u90bb\u4e5f\u820d\u53bb\n\t\t\t\tprog[i][j]+=prog[i-1][k];//\u603b\u611f\u89c9\u4e4b\u524d\u7684\u6c42\u548c\u7b26\u53f7\u5199\u9519\u4e86\uff0c\u4e0d\u8fc7\u770b\u4ee3\u7801\u4e5f\u80fd\u770b\u61c2\n\t\t\t\tprog[i][j]%=MAXN;\u8bb0\u5f97\u53d6\u6a21\n\t\t\t}\n\tULL ans=0;\n\tfor(int i=1;i<=cnt;i++)ans+=prog[n][i];\n\tprintf(\"%lld\\n\",ans%MAXN);\n//\tfor(int i=1;i<=cnt;i++)printf(\"%lld\\n\",prog[n][i]);\n\treturn 0;\n}\n\n```\n\u540e\u8bb0\uff1a\u672c\u849f\u84bb$\\sum$\u6ca1\u5b66\u8fc7\uff0c~~\uff08\u4f30\u8ba1\u7528\u9519\u4e86\uff09~~\uff1bLATEX\u53c8\u4e0d\u4f1a\uff0c\u53ea\u80fd\u4e34\u573a\u95ee\u4e2a\u5927\u4f6c\u624d\u80fd\u52c9\u5f3a\u7ef4\u6301\u7684\u4e86\u751f\u6d3b\u8fd9\u6837\u5b50\u3002",
        "postTime": 1536460541,
        "uid": 23908,
        "name": "C201914",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "# \u5178\u578b\u7684\u72b6\u6001\u538b\u7f29\n#### \u4f7f\u7528\u4e86\u5404\u79cd\u7384\u5b66\u64cd\u4f5c\u540e\uff0c\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc71705548\uff0c\u7a7a\u95f4\u4e5f\u5f88\u5c0f\n###### \uff08\u2193\u2193\u2193~~\u611f\u89c9\u6570\u636e\u6709\u70b9\u6c34\uff0c\u4e0d\u50cf\u84dd\u9898\u7684\u6570\u636e~~\u2193\u2193\u2193\uff09\n\n```\n12 12\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1\n```\n\n------------\n\u9996\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u7684\u72b6\u6001\uff08\u4e0d\u8d85\u8fc7377\u79cd\uff09\n```cpp\nfor(int i=pw[n]*2-1;i>=0;i--)//pw[n]=pow(2,n+1)\n    if(!(i&(i<<1)))\n    {\n    \tzts++;\n    \tzt[zts]=i;\n    }\n```\n\n------------\n\u7136\u540e\u538b\u7f29\u6bcf\u4e00\u884c\u662f\u5426\u80fd\u79cd\u690d\n```cpp\nint fd[13]={0};\nfor(int i=1;i<=m;i++)\n    for(int j=1;j<=n;j++)\n    {\n    \tcin>>fd[0];\n    \tif(!fd[0])\n    \t\tfd[i]+=pw[j];\n    }\n//\u82e5\u7b2ci\u884c\u5f53\u524d\u72b6\u6001&fd[i]!=0 \u5219\u8fd9\u79cd\u65b9\u5f0f\u662f\u975e\u6cd5\u7684\n```\n\n------------\n### \u5b9e\u73b0\uff1a\n\u679a\u4e3e\u72b6\u6001\uff08\u4e24\u4e2a\u5faa\u73af\uff09\uff0c\u82e5**zt[j]&zt[k]==0**\u5219**dp[i][j]+=dp[i-1][k]**\n\n------------\n\n\u518d\u52a0\u4e0a\u6eda\u52a8\u6570\u7ec4\u5c31\u80fd\u51cf\u5c11\u7a7a\u95f4\u590d\u6742\u5ea6\u4e86\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint zt[378]={0};\nint main()\n{\n    ios::sync_with_stdio(0);\n    int m,n,zts=0;\n    int pw[13]={0};\n    pw[1]=1;\n    cin>>m>>n;\n    for(int i=2;i<=n;i++)\n    \tpw[i]=pw[i-1]*2;\n    for(int i=pw[n]*2-1;i>=0;i--)\n    \tif(!(i&(i<<1)))\n    \t{\n    \t\tzts++;\n    \t\tzt[zts]=i;\n    \t}\n    int fd[13]={0};\n    for(int i=1;i<=m;i++)\n    \tfor(int j=1;j<=n;j++)\n    \t{\n    \t\tcin>>fd[0];\n    \t\tif(!fd[0])\n    \t\t\tfd[i]+=pw[j];\n    \t}\n    int dp[2][378]={0};\n    dp[0][zts]=1;\n    for(int i=1;i<=m;i++)\n    \tfor(int j=1;j<=zts;j++)\n    \t{\n    \t\tdp[i&1][j]=0;\n    \t\tif(zt[j]&fd[i])continue;\n    \t\tfor(int k=1;k<=zts;k++)\n    \t\t{\n    \t\t\tif(zt[j]&zt[k])continue;\n    \t\t\tdp[i&1][j]+=dp[!(i&1)][k];\n    \t\t\tdp[i&1][j]%=100000000;\n    \t\t}\n    \t}\n    int ans=0;\n    for(int i=1;i<=zts;i++)\n    \tans+=dp[m&1][i],ans%=100000000;\n    cout<<ans;\n    return 0;\n}\n```\n\u8fd8\u6709\u4e00\u79cd\u4e0d\u90a3\u4e48\u597d\u7684\u89e3\u51b3\u65b9\u5f0f\n```cpp\nint dp[2][4096]={0};\n    dp[0][0]=1;\n    for(int i=1;i<=m;i++)\n    \tfor(int j=1;j<=zts;j++)\n    \t{\n    \t\tdp[i&1][zt[j]]=0;\n    \t\tif(zt[j]&fd[i])continue;\n    \t\tfor(int k=1;k<=zts;k++)\n    \t\t{\n    \t\t\tif(zt[j]&zt[k])continue;\n    \t\t\tdp[i&1][zt[j]]+=dp[!(i&1)][zt[k]];\n    \t\t\tdp[i&1][zt[j]]%=100000000;\n    \t\t}\n    \t}\n    int ans=0;\n    for(int i=1;i<=zts;i++)\n    \tans+=dp[m&1][zt[i]],ans%=100000000;\n```",
        "postTime": 1536069541,
        "uid": 70310,
        "name": "wuzhaoxin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u6839\u636e\u6570\u636e\u8303\u56f4\u548c\u9898\u610f\uff0c\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u88f8\u7684\u72b6\u538bDP\u9898\u3002\n\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u6211\u4eec\u679a\u4e3e\u72b6\u6001S\u548c\u4e0b\u4e00\u884c\u7684\u72b6\u6001j\uff0c\u8f6c\u79fb\u5408\u6cd5\u6709\u4ee5\u4e0b\u6761\u4ef6\uff1a\n- \u8fd9\u4e24\u884c\u7684\u79cd\u690d\u65b9\u6848\u4e2d\u4e0d\u5305\u62ec\u4e0d\u53ef\u7528\u7684\u571f\u5730\n- \u4e0d\u5b58\u5728\u76f8\u90bb\u7684\u8349\u5730\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5224\u65ad\uff0c\u6211\u4eec\u9884\u5904\u7406\u51faav\u6570\u7ec4\uff0cav[i]\u50a8\u5b58\u7b2ci\u884c\u4e0d\u53ef\u7528\u571f\u5730\u7684\u72b6\u6001\uff0c\u548c\u4e0a\u9762\u63d0\u5230\u7684S\uff0cj\u4e00\u6837\uff0c\u752801\u4e32\u8868\u793a\u3002\u6240\u4ee5\u5728\u5224\u65ad\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981&\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u5224\u65ad\uff0c\u53ea\u9700\u8981&\u4e00\u4e0b(S,j),(S,(S>>1))\u548cj,(j>>1))\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n\uff08\u8bb0\u5f97\u53d6\u6a21\u3002\n\n```\n/*\u53d8\u91cf\u89e3\u91ca\nmmp:\u9632\u6b62\u548cmap\u91cd\u540d\uff0c\u50a8\u5b58\u571f\u5730\u662f\u5426\u53ef\u7528\nav:\u6307available\uff0c\u4ee501\u4e32\u50a8\u5b58\u7b2ci\u884c\u7684\u53ef\u7528\u72b6\u6001\ndp:\u50a8\u5b58\u65b9\u6848\u6570\nn\uff0cm:\u542b\u4e49\u4e0e\u9898\u610f\u521a\u597d\u76f8\u53cd\n*/\n#include <bits/stdc++.h>\n#define maxn 15\n#define sum (1<<15)\n#define p 100000000\n#define ll long long\nusing namespace std;\nll n,m,ans,mmp[maxn][maxn];\nll av[maxn],dp[sum][maxn];\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>m; int temp;\n    for (ll i=0;i<n;i++)\n    for (ll j=0;j<m;j++){\n    \tcin>>temp;\n    \tif (!temp) mmp[i][j]=1;\n    }\n    ll up=(1<<m);\n    for (ll i=0;i<n;i++)\n    for (ll j=m-1;j>=0;j--)\n    av[i]+=mmp[i][j]*pow(2,m-j-1);//\u9884\u5904\u7406av\u6570\u7ec4\uff0c0\u8868\u793a\u53ef\u7528\uff0c1\u8868\u793a\u4e0d\u53ef\u7528\n    for (ll S=0;S<up;S++)\n    if (\uff01S&av[0])&&(\uff01&(S>>1))) dp[S][0]=1;//\u8fb9\u754c\u6761\u4ef6\uff0c\u7b2c\u4e00\u884c\u7684\u5408\u6cd5\u72b6\u6001\u65b9\u6848\u6570\u4e3a1\n    for (ll i=0;i<n-1;i++){\n        for (ll S=0;S<up;S++)\n        if (dp[S][i])\n        for (ll j=0;j<up;j++)\n        if (!(j&av[i+1])&&!(j&(j>>1))&&!(S&j))\n        dp[j][i+1]+=(dp[S][i])%p;\n    }\n    for (ll i=0;i<up;i++)\n    ans+=dp[i][n-1];\n    cout<<ans%p;\n}\n```",
        "postTime": 1520987747,
        "uid": 37158,
        "name": "XG_Zepto",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "#### \u770b\u4e86\u4e00\u4e0b\u524d\u9762\u7684\u9898\u89e3\uff0c\u611f\u89c9\u8bf4\u7684\u90fd\u4e0d\u592a\u6e05\u695a\uff0c\u6240\u4ee5\u51b3\u5b9a\u81ea\u5df1\u5199\u4e00\u7bc7\uff01\n\n#### \u4ecd\u7136\u662f\u4e2a\u72b6\u538bdp\u7684\u5165\u95e8\u9898 \u76f4\u63a5\u7528\u6a21\u7248\u505a\u6cd5\u5957\u4e0a\u53bb\u5373\u53ef\n\n#### \u5177\u4f53\u6765\u8bf4\u7684\u8bdd\u5c31\u662f\uff1a\u5148\u679a\u4e3e\u51fa\u53ef\u80fd\u7684\u6446\u653e\u65b9\u5f0f\uff08\u4e0d\u8003\u8651\u571f\u5730\u7684\u95ee\u9898\uff0c\u53ea\u8003\u8651\u4e00\u884c\u7684\u7389\u7c73\u7530\u662f\u5426\u51b2\u7a81\uff09\uff0c\u518d\u904d\u5386\u6bcf\u4e00\u884c\u63a8\u51fa\u65b9\u6848\u6570\u5373\u53ef\n\n#### \u8f6c\u79fb\u65b9\u7a0b\u662f\uff1af[i][j]+=f[i-1][k] i\u8868\u793a\u7b2c\u51e0\u884c\uff0cj\u8868\u793a\u8fd9\u4e00\u884c\u7684\u65b9\u6848\u6570\uff0c\u663e\u7136\u8fd9\u4e00\u884c\u6446\u6210j\u80fd\u4ea7\u751f\u7684\u65b9\u6848\u6570\u662f\u4e0a\u4e00\u884c\u6446\u6240\u6709\u4e0d\u51b2\u7a81\u72b6\u6001\u4ea7\u751f\u7684\u65b9\u6848\u6570\u4e4b\u548c\u3002\n\n#### \u4e4b\u540e\u904d\u5386\u4e00\u904d\u8f93\u51fa\u65b9\u6848\u5373\u53ef\n\n#### \u6ce8\u610f\u8bfb\u9898\uff01\uff01 \u5f00\u59cb\u6211\u4ee5\u4e3a\u662f\u5468\u56f4\u516b\u4e2a\u90fd\u4e0d\u80fd\u79cd\u7389\u7c73\uff0c\u4f46\u5176\u5b9e\u662f\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u3002\uff08\u5927\u6982\u53ea\u6709\u6211\u8fd9\u4e48\u50bb\u5427\uff09\n",
        "postTime": 1516792870,
        "uid": 83442,
        "name": "xxxxxxx__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u53ef\u4ee5\u5957\u7528\u63d2\u5934DP\u7684\u6a21\u677f\u3002\uff08\u867d\u7136\u6709\u70b9\u5927\u6750\u5c0f\u7528\uff09\n\n\u6211\u4eec\u8003\u8651\u5b9a\u4e49\u72b6\u6001 $f(i,j,k)$ \u8868\u793a\u5f53\u524d\u6b63\u5728\u5b89\u6392\u7b2ci\u884c\u7b2cj\u5217\uff0c\u5176\u4e2dk\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u5b83\u8868\u793a\n\n$(i,1)\\to(i,j-1)$ $(i-1)(j)\\to(i-1,m)$\n\n\u8fd9\u51e0\u4e2a\u683c\u5b50\u6709\u6ca1\u6709\u88ab\u79cd\u4e0a\u8349\u3002\n\n\u5982\u679c$(i-1,j) or(i,j-1)$ \u6709\u8349\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u8f6c\u79fb\u5230\u4e0d\u79cd\u8349\uff0c\u5426\u5219\u53ef\u79cd\u53ef\u4e0d\u79cd\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^22^n)$ \u7684\u3002\n\n\u6211\u7684\u4ee3\u7801\u5199\u590d\u6742\u4e86\u3002\n\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <fstream>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cstdio>\n#include <vector>\n#include <bitset>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\nusing namespace std;\n\nconst int MOD = 100000000;\nint n, m;\nlong long ans;\nint ch[20], c[20][20];\nlong long f[15][15][1 << 14];\n\nvoid inc(long long &a, long long b)\n{\n    a = (a % MOD + b % MOD) % MOD;\n}\n\nlong long encode()\n{\n    long long ret = 0;\n    for (int i = m; i > -1; --i)\n    {\n        ret <<= 1;\n        ret |= ch[i];\n    }\n    return ret;\n}\n\nvoid decode(long long v)\n{\n    for (int i = 0; i < m + 1; ++i)\n    {\n        ch[i] = v & 1;\n        v >>= 1;\n    }\n}\n\nvoid dpblank(int x, int y)\n{\n    int op = 0;\n    for (int i = 0; i < (1 << (m + 1)); ++i)\n    {\n        if (f[x][y][i] > 0)\n        {\n            decode(i);    \n            int u = ch[y - 1], v = ch[m];\n            ch[m] = 0;\n            ch[y - 1] = 0;\n            if (y != m)\n                inc(f[x][y + 1][encode()], f[x][y][i]);\n            else\n                inc(f[x + 1][1][encode()], f[x][y][i]);\n            if (u == 0 && v == 0)\n            {\n                ch[m] = 1;\n                ch[y - 1] = 1;\n                if (y != m)\n                    inc(f[x][y + 1][encode()], f[x][y][i]);\n                else\n                {\n                    ch[m] = 0;\n                    inc(f[x + 1][1][encode()], f[x][y][i]);\n                }\n            }\n        }\n    }\n}\n\nvoid dpblock(int x, int y)\n{\n    for (int i = 0; i < (1 << (m + 1)); ++i)\n    {\n        if (f[x][y][i] > 0)\n        {\n            decode(i);\n            ch[y - 1] = 0;\n            ch[m] = 0;\n            if (y != m)\n                inc(f[x][y + 1][encode()], f[x][y][i]);\n            else\n                inc(f[x + 1][1][encode()], f[x][y][i]);\n        }\n    }\n}\n\nint main()\n{\n    cin >> n >> m;\n    for (int i = 1; i < n + 1; ++i)\n    {\n        for (int j = 1; j < m + 1; ++j)\n            cin >> c[i][j];\n    }\n    f[1][1][0] = 1;\n    for (int i = 1; i < n + 1; ++i)\n    {\n        for (int j = 1; j < m + 1; ++j)\n        {\n            if (c[i][j] == 1)\n                dpblank(i, j);\n            else\n                dpblock(i, j);\n        }\n    }\n    for (int i = 0; i < (1 << m); ++i)\n        inc(ans, f[n + 1][1][i]);\n    printf(\"%lld\\n\", ans);\n}\n```",
        "postTime": 1516245423,
        "uid": 25739,
        "name": "scallop",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u9898\u610f:\u81ea\u5df1\u770b\uff0c\u770b\u4e0d\u5230\u6ca1\u5fc5\u8981\u505a\u5427-\\_-||\n\u505a\u6cd5\uff1a\u7531\u4e8en,m\u53ea\u670912\uff1b\u7ed3\u5408\u8981\u6c42\u65b9\u6848\u6570\u6240\u4ee5\u662f\u88c5\u538bdp+\u4e8c\u8fdb\u5236\uff1b\n\n\u9650\u5236\u6761\u4ef6\uff1a\u2460\u4f5c\u4e1a\u5468\u56f4\u4e0d\u80fd\u6709\u4f5c\u4e1a\uff0c\u2461\u4e0d\u80fd\u518d\u201c0\u201d\u5904\u653e\u4f5c\u4e1a\uff1b\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u2460\u7528\u4e0e\u8fd0\u7b97\u9010\u4f4d\u6bd4\u8f83\u2461\u4e0e\u8fd0\u7b97\u533a\u522b\u201c1\u201d\u201c0\u201d\u65b9\u683c\uff1b\n\n\u8f6c\u79fb\uff1a\u6c42\u65b9\u6848\u6570\uff1bf[i][j]=f[i][j]+f[i-1][k];\n\nk\u4ece0\u679a\u4e3e\u52301<<n-1;\u5176\u4e2df[i][j]\u8868\u793a\u7b2ci\u5217\u72b6\u6001\u4e3aj\u7684\u65b9\u6848\u6570\uff1b\n\n\u7ec6\u8282:\u2460\u4f5c\u4e1a\uff1a\u5de6\u53f3\u9700\u8981\u6bd4\u8f83\u76f8\u90bb\u4e24\u5217\u7684\u72b6\u6001\u662f\u5426\u5408\u6cd5\n\n\u2461f[0][0]=1\uff0c\u522b\u5c0f\u770b\u8fd9\u4e2a\u4e86;\n\n\u7b54\u6848\u7edf\u8ba1\uff1a\u53ea\u8981\u6c42\u548c\u6700\u540e\u4e00\u5217\u7684\u6240\u6709\u72b6\u6001\u5373\u53ef\uff1b\n\n~~\u6700\u540e\u603c\u4e00\u6ce2\u4e0a\u4e2a\u9898\u89e3\uff08\u6ed1\u7a3d\uff09\uff1a\u601d\u8def\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5199\u6cd5\u7684\u95ee\u9898\u6bd4\u8f83\u591a\uff0c\u8be6\u7ec6\u89c1\u4e0b\uff08\u4e0d\u662f\u771f\u7684\u603c\uff0c\u5410\u69fd\u4e00\u4e0b\u7f62\u4e86\u4e0d\u4f1a\u6253\u6211\u5427\uff1f\uff1f\uff09\uff1b~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint g[15],s,m,n,f[15][1<<13],ans,mod=100000000;\nbool check(int x)\n{\n    for(int i=0;i<=n-1;i++)\n    if((x&(1<<i))&&(x&(1<<(i-1))))//\u4e0a\u4e0b\u662f\u5426\u5408\u6cd5\n    return 0;return 1;\n}\nint main()\n{\n    f[0][0]=1;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    {\n        cin>>s;\n        g[j]|=s<<i-1;\n    }\n    f[0][0]=1;\n    for(int i=1;i<=m;i++)\n    for(int j=0;j<=(1<<n)-1;j++)\n    {\n        if((j&g[i-1])!=j)continue;//\u5de6\u53f3\u5408\u6cd5\uff0c\u6ce8\u610fg[i-1]\n        if(!check(j))continue;\n        for(int k=0;k<=(1<<n)-1;k++)\n        {\n            if(k&j)continue;\n            if((k&g[i])!=k)continue;//\u5de6\u53f3\u5408\u6cd5\u6ce8\u610f\u548cg[i]\n            if(!check(k))continue;\n            f[i][k]=(f[i][k]+f[i-1][j])%mod;\n        }\n    }\n    for(int i=0;i<=(1<<n)-1;i++)\n    ans=(ans+f[m][i])%mod;\n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1515294335,
        "uid": 36854,
        "name": "\u6211\u6b32LU\u5929",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2442 \u3010zxbsmk\u653e\u7f6e\u4f5c\u4e1a\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u548c\u68cb\u76d8\u90a3\u9053\u9898\u5f88\u76f8\u4f3c \u5c31\u662fpoj\u4e0a\u90a3\u4e2a\uff0c\u6211\u4eec\u552f\u4e00\u9700\u8981\u591a\u8003\u8651\u7684\u4e00\u70b9\u5c31\u662f\u5982\u4f55\u89e3\u51b3\u884c\u5185\u67d0\u4e2a\u4f4d\u7f6e\u4e0d\u80fd\u653e\u7f6e\u7684\u95ee\u9898\u3002\n\n\u6211\u662f\u5229\u7528\u8bb0\u5f55\u884c\u5185\u4e0d\u80fd\u653e\u7f6e\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u4f4d\u7f6e\u901a\u8fc7\u4f4d\u8fd0\u7b97\u6765\u8fdb\u884c\u5224\u65ad\uff0c\u5177\u4f53\u53ef\u770bcheck\u51fd\u6570\n\n\n    \n    \n    \n```cpp\n    #include <iostream>\n    #define MAX 100\n    using namespace std;\n    int pic[14][14];\n    int dp[14][1<<13];\n    int n,m,k;\n    int check(int x,int y){\n        if(((y >> 1) & y)) return 0;\n        for(int i = 1;i <= pic[x][0];i++){\n            if((y >> (m-pic[x][i])) & 1)\n                return 0;\n        }\n        return 1;\n    }\n    int main(){\n        cin >> n >> m;\n        for(int i = 1;i<=n;i++)\n            for(int j = 1;j <= m;j++){\n                int a;\n                cin >> a;\n                if(a == 0){\n                    pic[i][++pic[i][0]] = j;\n                }\n            }\n        dp[0][0] = 1;\n        for(int i = 1;i <= n;i++){\n            for(int j = 0;j < (1<<m);j++){\n                if(!check(i,j)) continue;\n                for(int k = 0;k < (1<<m);k++){\n                    if(!check(i-1,k) || (j & k)) continue;\n                    dp[i][j] += dp[i-1][k];\n                }\n            }\n        }\n        unsigned long long int ans = 0;\n        for(int i = 0;i < (1<<m);i++){\n            ans += dp[n][i];\n        }\n        cout << ans%100000000 ;\n        return 0;\n}\n```",
        "postTime": 1513688573,
        "uid": 20788,
        "name": "DarkEyeR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u6765\u4e00\u6ce20s\u505a\u6cd5\u3002\r\n\r\n\u663e\u7136\u8fd9\u662f\u72b6\u6001\u538b\u7f29dp\r\n\r\n\u5b9a\u4e49\u4e5f\u662f\u975e\u5e38\u7684\u597d\u60f3\uff0c\r\n\r\n\u5b9a\u4e49d[i][j]\u8868\u793a\u51b3\u7b56\u5230\u4e86\u7b2ci\u884c\uff0cj\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u884c\u7684\u8868\u793a\u60c5\u51b5\r\n\r\n\u90a3\u4e48\u663e\u7136\u6709d[i][j]=sigma(d[i-1][j ban p])(p\u5c5e\u4e8ej)\r\n\r\n\u5f53\u7136\u5b9e\u9645\u4e0a\u91c7\u7528\u5b58\u5728\u6027dp\u7684\u5f62\u5f0f\u8f6c\u79fb\u3002\r\n\r\n\u90a3\u4e48\u6709\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u95ee\u9898\uff0c\u5982\u4f55\u786e\u5b9a\u4e00\u4e2a\u6a2a\u884c\u662f\u5408\u6cd5\u7684\uff1f\r\n\r\n\u6253\u8868\u554a~~~~\r\n\r\n\u4e0b\u9762\u662f\u6570\u636e\u751f\u6210\u5668\u4ee3\u7801\r\n\r\n```cpp\r\n#include<stdio.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nint res[100000];int cnt;\r\nvoid dfs(int x,int step)//\u7b80\u5355\u7684dfs\u6ca1\u5565\u597d\u8bf4\r\n{\r\n    if(step==13)\r\n    {\r\n        res[cnt++]=(x>>1);\r\n        return;\r\n    }\r\n    if(((1<<step)&x)==0)\r\n    {\r\n        dfs((x|1<<(step+1)),step+1);\r\n        dfs(x,step+1);\r\n    }\r\n    else \r\n    {\r\n        dfs(x,step+1);\r\n    }\r\n    return;\r\n}\r\nint main()\r\n{\r\n    dfs(0,0);\r\n    printf(\"cnt=%d\",cnt);\r\n    sort(res,res+cnt);\r\n    for(int i=0;i<cnt;i++)\r\n    {\r\n        if(i%16==0)printf(\"\\n\");\r\n        printf(\"%-5d,\",res[i]);\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684dp\u4e86~\r\n\u8fd9\u4e2a\u526a\u679d\u526a\u5f97\u975e\u5e38\u72e0\uff0c\u6240\u4ee5\u8d85\u7ea7\u5feb~\r\n\r\n\u4e0a\u4ee3\u7801~\r\n\r\n```cpp\r\n#include<stdio.h>\r\n#include<math.h>\r\nusing namespace std;\r\nint dp[20][30000];\r\nint n;int m;int c[20];\r\nint res;bool map[20][20];\r\nint up;\r\nint s[600]={\r\n```\r\n0    ,1    ,2    ,4    ,5    ,8    ,9    ,10   ,16   ,17   ,18   ,20   ,21   ,32   ,33   ,34   ,\r\n36   ,37   ,40   ,41   ,42   ,64   ,65   ,66   ,68   ,69   ,72   ,73   ,74   ,80   ,81   ,82   ,\r\n\r\n84   ,85   ,128  ,129  ,130  ,132  ,133  ,136  ,137  ,138  ,144  ,145  ,146  ,148  ,149  ,160  ,\r\n\r\n161  ,162  ,164  ,165  ,168  ,169  ,170  ,256  ,257  ,258  ,260  ,261  ,264  ,265  ,266  ,272  ,\r\n\r\n273  ,274  ,276  ,277  ,288  ,289  ,290  ,292  ,293  ,296  ,297  ,298  ,320  ,321  ,322  ,324  ,\r\n\r\n325  ,328  ,329  ,330  ,336  ,337  ,338  ,340  ,341  ,512  ,513  ,514  ,516  ,517  ,520  ,521  ,\r\n\r\n522  ,528  ,529  ,530  ,532  ,533  ,544  ,545  ,546  ,548  ,549  ,552  ,553  ,554  ,576  ,577  ,\r\n\r\n578  ,580  ,581  ,584  ,585  ,586  ,592  ,593  ,594  ,596  ,597  ,640  ,641  ,642  ,644  ,645  ,\r\n\r\n648  ,649  ,650  ,656  ,657  ,658  ,660  ,661  ,672  ,673  ,674  ,676  ,677  ,680  ,681  ,682  ,\r\n\r\n1024 ,1025 ,1026 ,1028 ,1029 ,1032 ,1033 ,1034 ,1040 ,1041 ,1042 ,1044 ,1045 ,1056 ,1057 ,1058 ,\r\n\r\n1060 ,1061 ,1064 ,1065 ,1066 ,1088 ,1089 ,1090 ,1092 ,1093 ,1096 ,1097 ,1098 ,1104 ,1105 ,1106 ,\r\n\r\n1108 ,1109 ,1152 ,1153 ,1154 ,1156 ,1157 ,1160 ,1161 ,1162 ,1168 ,1169 ,1170 ,1172 ,1173 ,1184 ,\r\n\r\n1185 ,1186 ,1188 ,1189 ,1192 ,1193 ,1194 ,1280 ,1281 ,1282 ,1284 ,1285 ,1288 ,1289 ,1290 ,1296 ,\r\n\r\n1297 ,1298 ,1300 ,1301 ,1312 ,1313 ,1314 ,1316 ,1317 ,1320 ,1321 ,1322 ,1344 ,1345 ,1346 ,1348 ,\r\n\r\n1349 ,1352 ,1353 ,1354 ,1360 ,1361 ,1362 ,1364 ,1365 ,2048 ,2049 ,2050 ,2052 ,2053 ,2056 ,2057 ,\r\n\r\n2058 ,2064 ,2065 ,2066 ,2068 ,2069 ,2080 ,2081 ,2082 ,2084 ,2085 ,2088 ,2089 ,2090 ,2112 ,2113 ,\r\n\r\n2114 ,2116 ,2117 ,2120 ,2121 ,2122 ,2128 ,2129 ,2130 ,2132 ,2133 ,2176 ,2177 ,2178 ,2180 ,2181 ,\r\n\r\n2184 ,2185 ,2186 ,2192 ,2193 ,2194 ,2196 ,2197 ,2208 ,2209 ,2210 ,2212 ,2213 ,2216 ,2217 ,2218 ,\r\n\r\n2304 ,2305 ,2306 ,2308 ,2309 ,2312 ,2313 ,2314 ,2320 ,2321 ,2322 ,2324 ,2325 ,2336 ,2337 ,2338 ,\r\n\r\n2340 ,2341 ,2344 ,2345 ,2346 ,2368 ,2369 ,2370 ,2372 ,2373 ,2376 ,2377 ,2378 ,2384 ,2385 ,2386 ,\r\n\r\n2388 ,2389 ,2560 ,2561 ,2562 ,2564 ,2565 ,2568 ,2569 ,2570 ,2576 ,2577 ,2578 ,2580 ,2581 ,2592 ,\r\n\r\n2593 ,2594 ,2596 ,2597 ,2600 ,2601 ,2602 ,2624 ,2625 ,2626 ,2628 ,2629 ,2632 ,2633 ,2634 ,2640 ,\r\n\r\n2641 ,2642 ,2644 ,2645 ,2688 ,2689 ,2690 ,2692 ,2693 ,2696 ,2697 ,2698 ,2704 ,2705 ,2706 ,2708 ,\r\n\r\n2709 ,2720 ,2721 ,2722 ,2724 ,2725 ,2728 ,2729 ,2730 ,4100 ,4101 ,4104 ,4105 ,4106 ,4112 ,\r\n\r\n4113 ,4114 ,4116 ,4117 ,4128 ,4129 ,4130 ,4132 ,4133 ,4136 ,4137 ,4138 ,4160 ,4161 ,\r\n\r\n4162 ,4164 ,4165 ,4168 ,4169 ,4170 ,4176 ,4177 ,4178 ,4180 ,4181 ,4224 ,4225 ,4226 ,4228 ,4229 ,\r\n\r\n4232 ,4233 ,4234 ,4240 ,4241 ,4242 ,4244 ,4245 ,4256 ,4257 ,4258 ,4260 ,4261 ,4264 ,4265 ,4266 ,\r\n\r\n4352 ,4353 ,4354 ,4356 ,4357 ,4360 ,4361 ,4362 ,4368 ,4369 ,4370 ,4372 ,4373 ,4384 ,4385 ,4386 ,\r\n\r\n4388 ,4389 ,4392 ,4393 ,4394 ,4416 ,4417 ,4418 ,4420 ,4421 ,4424 ,4425 ,4426 ,4432 ,4433 ,4434 ,\r\n\r\n4436 ,4437 ,4608 ,4609 ,4610 ,4612 ,4613 ,4616 ,4617 ,4618 ,4624 ,4625 ,4626 ,4628 ,4629 ,4640 ,\r\n\r\n4641 ,4642 ,4644 ,4645 ,4648 ,4649 ,4650 ,4672 ,4673 ,4674 ,4676 ,4677 ,4680 ,4681 ,4682 ,4688 ,\r\n\r\n4689 ,4690 ,4692 ,4693 ,4736 ,4737 ,4738 ,4740 ,4741 ,4744 ,4745 ,4746 ,4752 ,4753 ,4754 ,4756 ,\r\n\r\n4757 ,4768 ,4769 ,4770 ,4772 ,4773 ,4776 ,4777 ,4778 ,4096 };//\u4e27\u5fc3\u75c5\u72c2\u7684\u6570\u636e\u8868\r\n\r\n            \r\n```cpp\r\nint main()\r\n{\r\n        //\u72b6\u538bdp\u90fd\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u4e2a\u662f\u6a21\u677f\r\n    scanf(\"%d%d\",&n,&m);\r\n    up=pow(2,m+1)-1;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        for(int j=1;j<=m;j++)\r\n        {\r\n            scanf(\"%d\",&map[i][j]);\r\n            if(map[i][j])\r\n            {\r\n                c[i]+=1<<j;\r\n                //printf(\"c[%d]=%d\\n\",i,c[i]);\r\n            }\r\n        }\r\n    }\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        for(int j=0;j<=up;j++)\r\n        {\r\n            dp[i][j]=-1;\r\n        }\r\n    }\r\n    dp[0][0]=1;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        for(int j=0;s[j]<=up;j++)\r\n        {\r\n            if(dp[i][s[j]]!=-1)\r\n            {\r\n                //printf(\"dp[%d][%d]=%d\\n\",i,s[j],dp[i][s[j]]);\r\n                for(int k=0;s[k]<=up;k++)\r\n                {\r\n                    if((s[k]&s[j])==0&&(s[k]|c[i+1])==c[i+1])\r\n                    {\r\n                        if(dp[i+1][s[k]]==-1)dp[i+1][s[k]]=0;\r\n                        dp[i+1][s[k]]+=dp[i][s[j]];dp[i+1][s[k]]%=1000000000;\r\n                        //printf(\"->dp[%d][%d]=%d\\n\",i+1,s[k],dp[i+1][s[k]]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for(int j=0;s[j]<=up;j++)\r\n    {\r\n        if(dp[n][s[j]]!=-1)\r\n        {\r\n            res+=dp[n][s[j]];\r\n            res%=1000000000;\r\n        }\r\n    }\r\n    printf(\"%d\",res);\r\n    return 0;\r\n}\r\n```",
        "postTime": 1508737031,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u6570\u636e\u8303\u56f4\u5c0f\u7684\u53ef\u601c\uff08m,n<=12\uff09\uff0c\u4f46\u7ed3\u679c\u4f3c\u4e4e\u53c8\u5f88\u5927\uff08mod1000000000\uff09\uff0c\u7206\u641c\u4f1aT\u3002\u8fd9\u9053\u9898\u6570\u636e\u6446\u660e\u8981\u6211\u4eec\u7528\u72b6\u538bDP\u4e71\u641e\u3002\n\n\u4e8c\u8fdb\u523601\u4e32\u5b58\u4fe1\u606f\u5e94\u8be5\u5f88\u7ecf\u5178\u5427\uff08\u4f4d\u4e0e|=\uff09\uff1b\n\n\u7136\u540e\u6bcf\u6b21\u679a\u4e3e\u4e24\u884c\u72b6\u6001\u9632\u6b62\u4e0a\u4e0b\u76f8\u90bb\uff0c\u540c\u65f6check\u9632\u6b62\u5de6\u53f3\u76f8\u90bb\u3002\n\n\u4e0d\u59a8\u8bbe dp[i][j] \u8868\u793a\u53d6\u5230\u7b2c i \u884c\u7684\u9009\u53d6\u72b6\u6001\u4e3a j \u7684\u65b9\u6848\u6570\uff0c\n\n\u7136\u540e\u628a\u65b9\u6848\u6570\u7d2f\u52a0\u8d77\u6765\uff0cdp[i][j] = \u03a3(dp[i-1][k]) \uff08j \u5728\u7b2c i \u884c\u6ca1\u6709\u51b2\u7a81\uff0c\u6ca1\u6709\u9009\u53d6\u4e0d\u80fd\u9009\u7684\u70b9 && j \u4e0e k \u6ca1\u6709\u76f8\u90bb\u9009\u53d6\uff08\u4e0a\u4e0b+\u5de6\u53f3\uff09\uff09\n\n\u6700\u7ec8\u7684\u7b54\u6848\u662f\uff1a\u03a3(dp[n-1][i]) ( i \u2208 [0,1<<m) )\n\n\u53e6\u5916\uff0c\u4f4d\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6bd4\u52a0\u51cf\u4e58\u9664\u4e4b\u7c7b\u7684\u90fd\u4f4e\uff0c\u4f7f\u7528\u65f6\u522b\u5fd8\u4e86\u6253\u62ec\u53f7\u3002\u3002\u3002\n\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define re register\n#define il inline\n#define fp(i,a,b) for(re int i=a;i<=b;i++)\n#define fq(i,a,b) for(re int i=a;i>=b;i--)\nusing namespace std;\nconst int mod=100000000;\nint n,m,g[15]={},f[15][1<<13]={},ans=0;\nil int gi()\n{\n    re int x=0;\n    re int t=1;\n    re char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if(ch=='-') t=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nil bool check(int x)\n{\n    fp(i,1,m-1)\n        if((x&(1<<i))&&(x&(1<<(i-1)))) return 0;//\u9632\u6b62\u4f5c\u4e1a\u653e\u5728\u5de6\u53f3\u76f8\u90bb\u683c\u5b50\u7684\u60c5\u51b5\n    return 1;\n}\nint main()\n{\n    m=gi();n=gi();\n    fp(i,1,m)\n      fp(j,1,n)\n        g[j]|=(gi()<<i-1);//g[i]\u7528\u4e8e\u5b58\u7b2ci\u884c\u6240\u6709\u72b6\u6001\n    f[0][0]=1;\n    fp(i,1,n)\n        fp(j,0,(1<<m)-1)//\u679a\u4e3e\u7b2ci\u884c\u7684\u9009\u53d6\u72b6\u6001\n    {\n        if((j&g[i-1])!=j) continue;//\u9632\u6b62\u5728\u4e0d\u80fd\u653e\u4f5c\u4e1a\u7684\u5730\u65b9\u653e\u4f5c\u4e1a\n        if(!check(j)) continue;\n        fp(k,0,(1<<m)-1)//\u679a\u4e3ei-1\u884c\u7684\u9009\u53d6\u72b6\u6001\n        {\n            if(k&j) continue;//\u9632\u6b62\u4e0a\u4e0b\u76f8\u90bb\u9009\u53d6\n            if((k&g[i])!=k) continue;//\u6ce8\u610f&\u7684\u4f18\u5148\u7ea7\u4f4e\u4e8e!=,\u8981\u6253\u62ec\u53f7 \n            if(!check(k)) continue;\n            f[i][k]=(f[i][k]+f[i-1][j])%mod;//\u4ece\u4e0a\u4e00\u884c\u8f6c\u79fb\u72b6\u6001\n        }\n    }\n    fp(i,0,(1<<m)-1)\n      ans=(ans+f[n][i])%mod;\n      printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1508482065,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2442 \u3010zxbsmk\u653e\u7f6e\u4f5c\u4e1a\u3011"
    },
    {
        "content": "\u770b\u5230\u6570\u636e\u8303\u56f4\u6beb\u65e0\u7591\u95ee\u7684\u72b6\u538b\u52a8\u5f52\n\n\u8fd8\u662f\u4e00\u5982\u65e2\u5f80\u7684\u6ca1\u6709\u4ee3\u7801\u91cc\u52a0\u6ce8\u91ca\u7684\u4e60\u60ef\n\n\u5148\u9884\u5904\u7406\u4e00\u6ce2 \u5f97\u5230\u6bcf\u4e00\u884c\u7684\u6240\u6709\u72b6\u6001\u4e00\u5171 s\u79cd s=2\u7684n\u6b21\u65b9-1\n\n\u7136\u540e\u679a\u4e3e\u6bcf\u79cd\u72b6\u6001 \u770b\u662f\u5426\u7b26\u5408\u5de6\u53f3\u6ca1\u6709\u76f8\u90bb\u7684 g[i]=(!(i<<1 & i) && !(i>>1 & i))\n\n\u5728\u8f93\u5165\u7684\u65f6\u5019\u8003\u8651\u54ea\u4e9b\u5730\u4e0d\u80fd\u79cd\n\n\u7528t[i]\u8bb0\u5f55 \u5224\u65ad\u7684\u65f6\u5019 (j&t[i])==j \u770b\u662f\u5426\u7b26\u5408\u8981\u6c42\n\n\u4e00\u6b21\u679a\u4e3e\u4e0a\u4e00\u884c\u7684\u72b6\u6001 for(int j=0;j<s;j++)\n\n\u548c\u4e0b\u4e00\u884c\u7684\u72b6\u6001 for(int k=0;k<s;k++)\n\n\u5224\u65ad\u4e0a\u4e0b\u6ca1\u6709\u76f8\u90bb\u7684 !(j&k)\n\n\u7136\u540e\u76f8\u52a0\u5c31ok\u4e86\n\n\u987a\u4fbf\u8bf4\u4e00\u53e5\n\n\u4f4d\u8fd0\u7b97\u7531\u4e8e\u592a\u5e95\u5c42\u4e86 \u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u8d3c\u4f4e\uff08\u6240\u4ee5\u6211\u88ab\u5751\u4e86\u5f88\u4e45\uff09\uff0c\u6bd4\u8d4b\u503c\u7684\u4f18\u5148\u7ea7\u8fd8\u4f4e\n\n\u6240\u4ee5\u591a\u52a0\u62ec\u53f7\uff08\u6572\u9ed1\u677f\uff09\uff01\uff01\uff01\n\n```cpp\n#include<cstdio>\n#define N 14\n#define S (1<<13)+5 \nint m,n,s,x,ans,f[N][S],t[N],g[S];\nint main(){\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++){\n            scanf(\"%d\",&x);\n            t[i] = (t[i]<<1) + x;\n        }\n    s=1<<n;\n    for(int i=0;i<s;i++)\n        g[i]=(!(i<<1 & i) && !(i>>1 & i));\n    f[0][0]=1;\n    for(int i=1;i<=m;i++)\n        for(int j=0;j<s;j++)if(g[j]&&(j&t[i])==j)for(int k=0;k<s;k++)if(!(j&k))f[i][j]+=f[i-1][k];\n    for(int i=0;i<s;i++)\n        ans=(ans+f[m][i])%100000000;\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1507185065,
        "uid": 44529,
        "name": "chestX_ray",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u7ecf\u5178\u7684\u72b6\u538bDP\u4f8b\u9898\n\n\n\u6211\u4eec\u5728\u5ba1\u9898\u65f6\u53d1\u73b0\uff0c\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u6ca1\u6709\u516c\u5171\u8fb9\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e00\u79cd\u65b9\u6848\uff0c\u6bcf\u4e00\u884c\u7684\u9009\u53d6\uff0c\u53ea\u5bf9\u5f53\u524d\u884c\uff0c\u548c\u4e0a\u4e0b\u4e24\u884c\u6709\u5f71\u54cd\uff0c\u6211\u4eec\u8003\u8651\u52a8\u6001\u89c4\u5212\uff0c\n\n\u4e0d\u59a8\u8bbe dp[i][j] \u8868\u793a\u53d6\u5230\u7b2c i \u884c\uff0c\u7b2c i \u884c\u7684\u9009\u53d6\u72b6\u6001\u4e3a j \u7684\u65b9\u6848\u6570\uff0c\u672c\u9898\u7684\u8981\u6c42\u521a\u597d\u6ee1\u8db3\u52a8\u6001\u89c4\u5212\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u5927\u8981\u4ef6\uff1a\u65e0\u540e\u6548\u6027\u3002\n\n\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u7b2c i \u884c\u679a\u4e3e\u9009\u53d6\u72b6\u6001\u65f6\uff0c\u6240\u53d7\u5230\u7684\u9650\u5236\u4ec5\u4ec5\u6765\u81ea\u4e8e\u5f53\u524d\u884c\u548c\u4e0a\u4e00\u884c\uff0c\u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n\ndp[i][j] = \u03a3(dp[i-1][k])    \uff08j \u5728\u7b2c i \u884c\u6ca1\u6709\u51b2\u7a81\uff0c\u6ca1\u6709\u9009\u53d6\u4e0d\u80fd\u9009\u7684\u70b9 && j \u4e0e k \u6ca1\u6709\u76f8\u90bb\u9009\u53d6\uff09\n\n\n\u6700\u7ec8\u7684\u7b54\u6848\u662f\uff1a\u03a3(dp[n-1][i])   ( i \u2208 [0,1<<m) )\n\n\n\n**Code**\n\n\n\n\n\n\n\n\n\n        \n\n\n\n    \n\n\n```cpp\n#include<bits/stdc++.h>\n#define MOD int(1E8)\nusing namespace std;\nint dp[20][1<<15];\nbool ok_state[20][1<<15];\nint a[20][20];\nint n,m,ans = 0;\nbool check(int line,int sta)\n{\n    for (int i=0;i<m;i++)\n        if ( ( sta & (1 << i) ) && a[line][i] == false) /// \u4e0d\u80fd\u53d6\u7684\u70b9\u53d6\u4e86\n            return false;\n    for (int i=1;i<m;i++)\n        if ( ( sta & (1 << i) ) && ( sta & (1 << (i - 1))) ) /// \u8fde\u9009\u4e24\u4e2a\n            return false;\n    return true;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i=0;i<n;i++)\n        for (int j=0;j<m;j++)\n            scanf(\"%d\",&a[i][j]);\n    memset(dp,0,sizeof dp);\n    for (int i=0;i<n;i++)\n        for (int j=0;j<(1<<m);j++)\n            ok_state[i][j] = check(i,j);\n    for (int i=0;i<(1<<m);i++) dp[0][i] = ok_state[0][i];\n    for (int i=1;i<n;i++)\n    {\n        for (int j=0;j<(1<<m);j++) /// \u679a\u4e3e\u7b2c i \u884c\u7684\u9009\u53d6\u72b6\u6001\n        {\n            if (ok_state[i][j] == false) continue;\n            for (int k=0;k<(1<<m);k++) /// \u679a\u4e3e i - 1 \u7684\u9009\u53d6\u72b6\u6001\n            {\n                if (ok_state[i-1][k] == false) continue;\n                bool flag = true;\n                for (int t=0;t<m;t++)\n                    if (j & (1 << t) && k & (1 << t))\n                    {\n                        flag = false;\n                        break;\n                    }\n                if (flag) dp[i][j] = (dp[i][j] + dp[i-1][k]) % MOD;\n            }\n        }\n    }\n    for (int i=0;i<(1<<m);i++) ans = (ans + dp[n-1][i]) % MOD;\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1501752609,
        "uid": 35575,
        "name": "\u4f55\u5353\u7136",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": ">>\u8f6c\u79fb\u65b9\u7a0b dp[i][j]=sum\uff08dp[i-1][k]\uff09\u3002\n\n\u6839\u636e\u9898\u610f\u53d1\u73b0\u884c\u7684\u4e00\u79cd\u653e\u6cd5\u662f\u6700\u591a\u753112\u4e2a 0 \u6216\u8005 1 \u7ec4\u6210\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u4e8c\u8fdb\u5236\uff0c\u7528\u4e8c\u8fdb\u5236\u7684\u4e00\u4e2a\u6570\u6765\u8868\u793a\u4e00\u79cd\u653e\u6cd5\u3002\u5b9a\u4e49\u72b6\u6001dp[i][j]\uff0c\u7b2c i \u884c\u72b6\u6001\u4e3a j \u7684\u65f6\u5019\u653e\u725b\u7684\u79cd\u6570\u3002j \u7684\u8bdd\u6211\u4eec\u8f6c\u5316\u6210\u4e8c\u8fdb\u5236\uff0c\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u4f9d\u6b21 1 \u8868\u793a\u653e\u725b0\u8868\u793a\u6ca1\u6709\u653e\u725b\uff0c\u5c31\u53ef\u4ee5\u8868\u793a\u4e00\u884c\u6240\u6709\u7684\u60c5\u51b5\u3002\n\n\n\u72b6\u538bdp\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n            \n```cpp\n#include <stdio.h>\n#include <iostream>\n#include <string.h>\n#include <algorithm>\nusing namespace std;\nint n,m;\nconst int mx=1<<13; \nint dp[20][mx];\nint map[mx];\nint s[mx];\nint mod=100000000;\nint ans;\nbool pd(int x)\n{\n    return (x&(x<<1)); //left and right all can put cows\n}\nbool judge(int x, int y)\n{\n    return (map[x]&s[y]);  //Di Tu Fu He \n}\nint main()\n{\n    int i,j,v,k;\n    cin>>n>>m;\n    int x;\n    for (i=1; i<=n; ++i)\n    {\n        for (j=1; j<=m; ++j)\n        {\n            scanf(\"%d\",&x);\n            if (x==0)\n            {\n                map[i]+=(1<<(j-1));  \n            }\n        }\n    }  //\u8bb0\u5f550\u7684\u4f4d\u7f6e\n    //-----------------------------------------------//\n    k=0;\n    for (i=0; i<(1<<m); ++i)\n    {\n        if (!pd(i))\n        {\n            s[++k]=i;\n            //k++\n        }\n    }  //\u521d\u59cb\u5316\u6240\u6709\u53ef\u884c\u72b6\u6001\n    //-------------------------------------------------//\n    for (i=1; i<=k; ++i)\n    {\n        if (!judge(1,i))\n        {\n            dp[1][i]=1;  //\u8868\u793a\u5728\u7b2c1\u884c\u72b6\u6001\u4e3ai\u65f6\u5019\u53ef\u4ee5\u653e\u725b\u7684\u79cd\u6570  \n        }\n    }\n    //-------------------------------------------------//\n    for (i=2; i<=n; ++i) //\u4ece\u7b2c2\u884c\u5f00\u59cbdp\n    {\n        for (j=1; j<=k; ++j)     //\u679a\u4e3ek\u79cd\u72b6\u6001  k kinds of \u53ef\u884c\u72b6\u6001\n        {\n            if (judge(i,j))\n                continue;\n            //\u5224\u65ad\u7b2ci\u884c \u5047\u5982\u6309\u72b6\u6001j\u653e\u725b\u7684\u8bdd\u884c\u4e0d\u884c\u3002   cut!\n            for (v=1; v<=k; ++v)   //\u679a\u4e3e\u4e0a\u4e00\u884c\u53ef\u884c\u72b6\u6001\n            {\n                if (judge(i-1,v)) //i-1 is last line\n                    continue;\n                //\u526a\u679d \u5224\u65ad\u4e0a\u4e00\u884c\u4e0e\u5176\u72b6\u6001\u662f\u5426\u6ee1\u8db3  \n                if (!(s[j]&s[v]))  //i-1 line and i line \u4e0d\u51b2\u7a81\n                    dp[i][j]+=dp[i-1][v];  \n                    dp[i][j]%=mod; \n            }\n            if (i==n)\n            {\n                ans+=dp[n][j];\n                ans%=mod;\n            }\n        }        \n    }\n    if (n==1)\n    {\n        for (i=1; i<=k; ++i)\n        {        \n            ans+=dp[1][i];\n        }\n    }\n    cout<<ans<<endl;  \n}\n>>\u5206\u5272\u7ebf\u5c31\u662f\u5206\u5757\u54e6\n```",
        "postTime": 1489808051,
        "uid": 22841,
        "name": "Right",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u76ee\u5206\u6790n\uff0cm\u5f88\u5c0f\u5e76\u4e14\u72b6\u6001\u53ea\u67090 1 \u6240\u4ee5\u5f88\u5bb9\u6613\u770b\u51fa\u662f\u4e00\u9053\u72b6\u6001\u538b\u7f29dp\n\n\u9898\u76ee\u8981\u6c42\u4e24\u4e2a\u8349\u5730\u4e0d\u76f8\u90bb \u6240\u4ee5\u5c31\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u5de6\u53f3& \u548c\u524d\u540e& \u6700\u540ef[i][j]\u8868\u793a\u7b2ci\u884c\u662fj\u8fd9\u4e2a\u72b6\u6001\u7684\u65b9\u6848\u6570\n\n\u5219\u8f6c\u79fb\u65b9\u7a0b\u4e3af[i][j]=sigma(f[i-1][k])(\u5f53j \u548c k\u4e0d\u51b2\u7a81)\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#define mod 100000000\nusing namespace std;\nint n,m;\nint map[20][20],sta[20][200],sum[200];\nlong long f[20][200],ans=0;//\u8868\u793a\u7b2ci\u884c\u662fj\u8fd9\u4e2a\u72b6\u6001\u7684\u603b\u65b9\u6848\u6570 \nvoid dfs(int line,int num,int put)\n{\n    if(put>m) return;\n    sta[line][++sum[line]]=num;\n    for(int i=put+2;i<=m;i++)\n     if(map[line][m-i+1])\n      dfs(line,num+(1<<(i-1)),i);//\u9884\u5904\u7406\u6bcf\u4e00\u884c\u7684\u53ef\u884c\u72b6\u6001\n}\nvoid pre_treat()\n{\n    memset(f,0,sizeof(f));\n    memset(sum,0,sizeof(sum));\n    for(int i=1;i<=n;i++)\n     dfs(i,0,-1);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n     for(int j=1;j<=m;j++) scanf(\"%d\",&map[i][j]);\n    pre_treat(); \n    for(int i=1;i<=sum[1];i++) f[1][i]=1;\n    for(int i=2;i<=n;i++)\n     for(int j=1;j<=sum[i];j++)\n      for(int k=1;k<=sum[i-1];k++)\n       if(!(sta[i][j]&sta[i-1][k]))\n        f[i][j]=(f[i][j]+f[i-1][k])%mod;\n    for(int i=1;i<=sum[n];i++) ans=(ans+f[n][i])%mod;\n    printf(\"%lld\",ans%mod);     \n    return 0;\n}\n```",
        "postTime": 1477875721,
        "uid": 22060,
        "name": "Memorize",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    },
    {
        "content": "\u72b6\u6001\u8868\u793a\uff0c\u5bf9\u4e8e\u6bcf\u884c\u571f\u5730\uff0c\u53ef\u7528\u6bcf\u4e2a2\u8fdb\u5236\u4f4d\u8868\u793a\u8be5\u884c\u4e2d\u6bcf\u5757\u571f\u5730\u7684\u72b6\u6001\uff081\u8868\u793a\u79cd\u8349\uff0c0\u8868\u793a\u4e0d\u79cd\u8349\uff09\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u884c\u571f\u5730\u72b6\u6001state\u53ef\u7528\u4ee5\u4e0b\u5f62\u5f0f\u8868\u793a\uff08\u6bcf\u884c\u571f\u5730\u6700\u6709n\u5757\uff09\uff1a\n\nn    n-1    \u2026    3    2    1    \u5341\u8fdb\u5236\n\nmin    0    0    0    0    0    0    0\n\n1/0    1/0    1/0    1/0    1/0    1/0    \u2026\n\nmax    1    1    1    1    1    1    2n-1\n\n\u6545\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0cstate\u8303\u56f4\u4e3a\uff1a[0, 2n-1]\n\n\u7136\u540e\uff0c\u5bf9\u8be5\u884c\u7684\u6bcf\u4e00\u79cd\u72b6\u6001\u8fdb\u884c\u53ef\u884c\u6027\u5224\u65ad\uff0c\u5982\u679c\u6709\u67d0\u683c\u571f\u5730\u8d2b\u7620\uff0c\u6216\u5b58\u5728\u8fde\u7eed\u4e24\u683c\u6709\u79cd\u8349\uff0c\u5747\u4e3a\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u72b6\u6001\n\n\n\u5bf9\u4e8e\u6bcf\u884c\u571f\u5730\u4e2d\uff0c\u6bcf\u683c\u571f\u5730\u662f\u5426\u80fd\u79cd\u8349\uff08\u571f\u5730\u662f\u5426\u8d2b\u7620\uff09\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4yes[1-M]\uff08\u538b\u7f29\u72b6\u6001\uff09\u8868\u793a\uff0c\u5bf9\u4e8e\u884ci\uff0cyes[i]\u4e2d\u5b58\u653e\u4e00\u4e2a\u72b6\u6001\u503c\uff0c\u8be5\u72b6\u6001\u503c\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u4e00\u5757\u571f\u5730\u7684\u8d2b\u7620\u60c5\u51b5\uff0c\u4ee5\u6837\u4f8b1\u4e3a\u4f8b\uff1a\n\n\u6837\u4f8b1\uff0c2\u884c3\u5217\uff0c\n\n1    2    3\n\n1    1\uff08\u53ef\u79cd\u8349\uff09    1\uff08\u53ef\u79cd\u8349\uff09    1\uff08\u53ef\u79cd\u8349\uff09\n\n2    0\uff08\u4e0d\u53ef\u79cd\u8349\uff09    1\uff08\u53ef\u79cd\u8349\uff09    0\uff08\u4e0d\u53ef\u79cd\u8349\uff09\n\n\u76f8\u5e94\u7684\u6570\u636e\u5b58\u50a8\u5982\u4e0b\uff1a\n\n\u4e8c\u8fdb\u5236    \u5341\u8fdb\u5236\n\nyes[1]    111    7\n\nyes[2]    010    2\n\n\n\u82e5\u5df2\u77e5m,n\uff0c\u5e76\u83b7\u53d6\u571f\u5730\u8d2b\u7620\u72b6\u6001\u6570\u7ec4map[m][n](\u975e\u538b\u7f29\u7684\uff0cmap[i][j]=0/1\u8868\u793a\u7b2ci\u884c\u7b2cj\u5217\u571f\u5730\u8d2b\u7620/\u4e0d\u8d2b\u7620)\n\n\u8ba1\u7b97yes\u7684\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\ndoyes()\n{\n  int i,j;\nfor (i=1;i<=m;i++)//\u5bf9\u6bcf\u4e00\u884c\u8fdb\u884c\u5904\u7406\nfor(j=n;j>=1;j--)//\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\uff0c\u7c7b\u4f3c\u591a\u4f4d\u6570\u5b57\u5b57\u7b26\u4e32\u8f6c\u6570\u503c\n  yes[i]=yes[i]<<1 | map[i][j];  \n}\n```\n\u6309\u884c\u8fdb\u884c\u52a8\u6001\u89c4\u5212\uff0c\u8ba1\u7b97\u7b26\u5408\u8981\u6c42\u7684\u65b9\u6848\u6570\u91cf,dp[i][state]\u8868\u793a\u52a8\u6001\u89c4\u5212\u5230\u7b2ci\u884c\u72b6\u6001state\u65f6\uff0c\u7b26\u5408\u8981\u6c42\u7684\u65b9\u6848\u6570\n\u521d\u59cb\u503c\uff1adp[0][0-2n-1]=1\n\ni\u4ece1-n\u9010\u884c\u52a8\u6001\u89c4\u5212\uff1a\n\n  \n\u9996\u5148\uff0c\u770b\u8be5\u884c\u7684state\u662f\u5426\u7b26\u5408\u8981\u6c42\uff1a\n\nif ((state | yes[i])!=yes[i]) continue;//\u82e5state\u4e2d\u542b\u8d2b\u7620\u571f\u5730\uff0c\u5219\u4e3a\u4e0d\u53ef\u80fd\u65b9\u6848\n\nif ((state & (state<<1))!=0) continue;//\u82e5state\u4e2d\u6709\u8fde\u7eed\u4e24\u5757\u571f\u5730\u79cd\u8349\uff0c\u5219\u4e3a\u4e0d\u53ef\u80fd\u65b9\u6848\n\n\n\u518d\u4e0edp[i-1][\u5404\u79cdstate]\u8fdb\u884c\u5bf9\u6bd4\uff0c\u8fdb\u884c\u52a8\u6001\u89c4\u5212\n\n\n        \n    \n    \n            \n        \n                    \n        \n        \n```cpp\nfor(k=0;k<=2n-1;k++)//\u8868\u793a\u7b2ci-1\u7684\u5404\u79cd\u72b6\u6001\n  { if((state & k) !=0)continue;//\u8868\u793a\u8be5\u884c\u4e0e\u4e0a\u4e00\u884c\u6709\u540c\u4e00\u5217\u4e0a\u90fd\u79cd\u4e86\u8349\uff0c\u4e3a\u4e0d\u53ef\u80fd\u65b9\u6848\n   dp[i][state]+=dp[i-1][k];}//\u7b26\u5408\u6761\u4ef6\u65b9\u6848\uff0c\u53e0\u52a0\u65b9\u6848\u6570\n    #include<cstdio>\n    using namespace std;\n    int main()\n    {\n        int n,m,map[15][15],dp[15][1<<13]={0},ans=0;\n        scanf(\"%d %d\",&m,&n);\n        for (int i=1;i<=m;i++)\n            for (int j=1;j<=n;j++)\n                scanf(\"%d\",&map[i][j]);\n        int rich[15]={0};\n        for (int i=1;i<=m;i++)\n            for (int j=1;j<=n;j++)\n                  rich[i]=(rich[i]<<1)|map[i][j];\n        for (int j=0;j<=(1<<n)-1;j++)\n            if (((j|rich[1])==rich[1])&&((j&(j<<1))==0))\n                dp[1][j]=1;\n        for (int i=2;i<=m;i++)\n            for (int j=0;j<=(1<<n)-1;j++)\n                if (((j|rich[i])==rich[i])&&((j&(j<<1))==0))\n                    for (int k=0;k<=(1<<n)-1;k++)\n                        if((k&j)==0)\n                            dp[i][j]+=dp[i-1][k];\n        for (int i=0;i<=(1<<n)-1;i++)\n            ans+=dp[m][i];\n        printf(\"%d\",ans%100000000);\n        return 0;\n}\n```",
        "postTime": 1514100411,
        "uid": 50748,
        "name": "chenzijie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1879 \u3010[USACO06NOV]\u7389\u7c73\u7530Corn Fields\u3011"
    }
]