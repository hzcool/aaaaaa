[
    {
        "content": "\u8fd9\u79cd\u5173\u4e8e\u6811\u4e0a\u8def\u5f84\u7684\u9898\uff0c\u6211\u4eec\u6ca1\u4ec0\u4e48\u597d\u529e\u6cd5\uff0c\u53ea\u597d\u70b9\u5206\u6cbb\u3002\n\n\u8003\u8651\u5f53\u524d\u5206\u6cbb\u91cd\u5fc3\u4e3aroot\uff0c\u5982\u4f55\u7edf\u8ba1\u7ecf\u8fc7\u5206\u6cbb\u91cd\u5fc3\u7684\u8def\u5f84\u7684\u7b54\u6848\u3002\n\n\u6211\u4eec\u4ee4prf[i]\u8868\u793a\u67d0\u4e2a\u70b9\u5230root\u7684\u8def\u5f84(\u4e0d\u542broot)\u5df2\u7ecf\u5faa\u73af\u5339\u914dS\u7684\u524d\u7f00\u5230\u4f4d\u7f6ei(\u4e0b\u6807\u4ece1\u5f00\u59cb\u5230m-1\uff0c\u7ed3\u5c3e\u4e3a0)\u7684\u65b9\u6848\u6570\uff0csuf[i]\u8868\u793a\u67d0\u4e2a\u70b9\u5230root\u7684\u8def\u5f84(\u4e0d\u542broot)\u5df2\u7ecf\u5faa\u73af\u5339\u914dS\u7684\u540e\u7f00\u5230\u4f4d\u7f6ei(\u4e0b\u6807\u4ece1\u5f00\u59cb\u5230m-1\uff0c\u7ed3\u5c3e\u4e3a0)\u7684\u65b9\u6848\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u8003\u8651\u5f53\u524d\u8fd9\u4e2a\u70b9\u5230root\u7684\u8def\u5f84(\u4e0d\u542broot)\u52a0\u4e0aroot\u4f5c\u4e3a\u524d\u7f00\u6216\u8005\u540e\u7f00\uff0c\u80fd\u548croot\u7684\u5176\u4ed6\u5b50\u6811\u7ec4\u6210\u7684\u65b9\u6848\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u627e\u5230\u5f53\u524d\u7684\u5339\u914d\u957f\u5ea6\uff0c\u8bfb\u53d6\u4e00\u4e0bprf\u548csuf\u5728root\u7684\u5176\u4ed6\u5b50\u6811\u4e2d\u7684\u524d\u7f00\u548c\u5c31\u597d\u4e86\u3002(\u50cf\u8fd9\u79cd\u7ef4\u62a4\u4e8c\u5143\u7ec4\u6570\u91cf\u4e0d\u7b97\u81ea\u8eab\u5bf9\u81ea\u8eab\u7684\u6709\u4e00\u4e2a\u5957\u8def\uff0c\u5c31\u662f\u8ba9\u81ea\u8eab\u548c\u524d\u9762\u7684\u548c\u53bb\u8ba1\u7b97\u8d21\u732e\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\uff0c\u6bcf\u7ec4\u88ab\u8ba1\u7b97\u4e14\u4ec5\u8ba1\u7b97\u4e00\u904d)\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u5b9e\u73b0\u5728\u4e00\u4e2a\u4e32\u7684\u524d\u9762\u8ffd\u52a0\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e76\u67e5\u8be2\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\uff0c\u6240\u4ee5\u8981\u7528\u5230\u54c8\u5e0c(\u56e0\u4e3a\u8fd9\u4e2a\u76f8\u7b49\u5173\u7cfb\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027)\u3002\n\n\u663e\u7136\u8fd9\u79cd\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4e0d\u5bf9\u7684(1e6\u5341\u7ec4\u6570\u636e\u5927\u6982\u5c31\u662f\u5361\u70b9\u5206\u6cbb\u7684)\uff0c\u7136\u800c\u56e0\u4e3a\u5168\u4e16\u754c\u90fd\u53ea\u6709\u524d\u4e09\u7ec4\u6570\u636e\uff0c\u6240\u4ee5\u5c31AC\u4e86\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#pragma GCC optimize(2)\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cctype>\n#include<iostream>\n#define debug cerr\nusing namespace std;\ntypedef unsigned long long int ulli;\nusing std::max;using std::reverse;\nconst int maxn=1e6+1e2;\nconst ulli base = 31;\nconst int inf=0x3f3f3f3f;\n\nchar in[maxn],tar[maxn]; // input string and target string .\nulli pows[maxn],hpr[maxn],hsu[maxn]; // hash prefix and hash suffix .\nint s[maxn],t[maxn<<1],nxt[maxn<<1],ban[maxn],cnt;\nint dep[maxn],siz[maxn],mxs[maxn],prf[maxn],suf[maxn],sprf[maxn],ssuf[maxn]; // mxs[0] = inf  , paired prf[length] .\nint n,m;\nulli ans;\n\nbool vis[maxn];\n\ninline void addedge(int from,int to) {\n    t[++cnt] = to , nxt[cnt] = s[from] ,s[from] = cnt;\n}\ninline void findroot(int pos,const int &fa,const int &fs,int &rt) {\n    siz[pos] = 1 , mxs[pos] = 0;\n    for(int at=s[pos];at;at=nxt[at]) if( t[at] != fa && !ban[t[at]] ) {\n        findroot(t[at],pos,fs,rt) , siz[pos] += siz[t[at]] , mxs[pos] = max( mxs[pos] , siz[t[at]] );\n    }\n    if( ( mxs[pos] = max( mxs[pos] , fs - siz[pos] ) ) <= mxs[rt] ) rt = pos;\n}\ninline void dfs(int pos,int fa,int dep,int &mxd,const char &mid,ulli h) {\n    mxd = max( mxd , dep ) , h += in[pos] * pows[dep-1]; // add in[pos] to first char .\n    if( h == hpr[dep] ) {\n        ++prf[dep%m];\n        if( mid == tar[dep%m+1] ) ans += ssuf[m-dep%m-1];\n    }\n    if( h == hsu[dep] ) {\n        ++suf[dep%m];\n        if( mid == tar[m-dep%m] ) ans += sprf[m-dep%m-1];\n    }\n    for(int at=s[pos];at;at=nxt[at]) if( t[at] != fa && !ban[t[at]] ) dfs(t[at],pos,dep+1,mxd,mid,h);\n}\ninline void solve(int pos,int fs) {\n    if( fs < m ) return;\n    int rt = 0 , full = 0;\n    *mxs = inf , findroot(pos,-1,fs,rt) , ban[rt] = 1;\n    if( in[rt] == tar[1] ) ++sprf[0];\n    if( in[rt] == tar[m] ) ++ssuf[0];\n    for(int at=s[rt],mxd;at;at=nxt[at]) if( !ban[t[at]] ) {\n        mxd = 0 , dfs(t[at],rt,1,mxd,in[rt],0) , full = max( full , mxd );\n        for(int i=0;i<=mxd;i++) sprf[i] += prf[i] , ssuf[i] += suf[i] , prf[i] = suf[i] = 0;\n    }\n    for(int i=0;i<=full;i++) sprf[i] = ssuf[i] = 0;\n    for(int at=s[rt];at;at=nxt[at]) if( !ban[t[at]] ) solve(t[at],siz[t[at]]<siz[rt]?siz[t[at]]:fs-siz[rt]);\n}\n\ninline char nextchar() {\n    static const int BS = 1 << 21;\n    static char buf[BS],*st=buf+BS,*ed=buf+BS;\n    if( st == ed ) ed = buf + fread(st=buf,1,BS,stdin);\n    return st == ed ? -1 : *st++;\n}\ninline int getint() {\n    int ret = 0 , ch;\n    while( !isdigit(ch=nextchar()) );\n    do ret = ret * 10 + ch - '0'; while( isdigit(ch=nextchar()) );\n    return ret;\n}\ninline void getstr(char* s) {\n    char ch;\n    while( !isalpha(ch=nextchar()) );\n    do *s++ = ch; while( isalpha(ch=nextchar()) );\n}\ninline void gethsh(ulli* dst) {\n    for(int i=m+1;i<=n;i++) tar[i] = tar[i-m];\n    for(int i=1;i<=n;i++) dst[i] = dst[i-1] * base + tar[i];\n}\ninline void fix(char* s,int len) {\n    for(int i=1;i<=len;i++) s[i] -= 'A' - 1;\n}\ninline void solve_case() {\n    n = getint() , m = getint() , getstr(in+1) , fix(in,n) , memset(s,0,sizeof(s)) , memset(ban,0,sizeof(ban)) , cnt = ans = 0 , *pows = 1;\n    for(int i=1;i<=n;i++) pows[i] = pows[i-1] * base;\n    for(int i=1,a,b;i<n;i++) a = getint() , b = getint() , addedge(a,b) , addedge(b,a);\n    getstr(tar+1) , fix(tar,m) , gethsh(hpr) , reverse(tar+1,tar+1+m) , gethsh(hsu) , reverse(tar+1,tar+1+m);\n    solve(1,n) , printf(\"%llu\\n\",ans);\n}\n\nint main() {\n    static int T;\n    T = getint();\n    while(T--) solve_case();\n    return 0;\n}\n\n```",
        "postTime": 1524751046,
        "uid": 31907,
        "name": "cmd2001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4075 \u3010[SDOI2016]\u6a21\u5f0f\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "[$My\\ blog$](https://ctz45562.github.io/2020/06/10/%E6%B4%9B%E8%B0%B7-P4075-SDOI2016-%E6%A8%A1%E5%BC%8F%E5%AD%97%E7%AC%A6%E4%B8%B2/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4075)\n\n\u9898\u89e3\u91cc\u90fd\u662f\u54c8\u5e0c\uff0c\u6211\u8fd9\u4e2a\u5927\u5e38\u6570SAM+kmp\u5c31\u663e\u5f97\u5f88\u53e6\u7c7b\uff08\n\n\u8003\u8651\u70b9\u5206\u6cbb\u65f6\u5982\u4f55\u628a\u4e24\u6761\u8def\u5f84\u62fc\u8d77\u6765\u3002\u7528$[P_i]$\u8868\u793a\u524d\u7f00\uff0c$[S_i]$\u8868\u793a\u540e\u7f00\uff0c$a[S]$\u8868\u793a$a$\u4e2a$S$\u76f8\u8fde\uff08$a\\in\\mathbb{Z}$\uff09\uff0c\u4e00\u5b9a\u662f\u5f62\u5982$a[S]+[P_i]$\u548c$[S_{i+1}]+b[S]$\u7684\u4e24\u6761\u534a\u8def\u5f84\u62fc\u6210\u7684\u8def\u5f84\u7b26\u5408\u8981\u6c42\uff1a\n\n$T_x$\u8868\u793a\u5206\u6cbb\u4e2d\u5fc3\u5230\u70b9$x$\u7684\u8def\u5f84\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c$T_x$\u5f62\u5982$[S_{i+1}]+b[S]$\uff0c\u5219\u7528$sl_x$\u8868\u793a$S_{i+1}$\u7684\u957f\u5ea6\u3002\n\n\u5bf9$S$\u4e32\u5efa$SAM$\uff0c\u5e76\u628a$S$\u4ee3\u8868\u7684\u8282\u70b9\uff08\u6700\u540e\u63d2\u5165\u7684\u5b57\u7b26\u65b0\u5efa\u7684\u8282\u70b9\uff09\u53ca\u5176$parent\\ tree$\u4e0a\u7684\u7956\u5148\u90fd\u6253\u4e0a\u6807\u8bb0\u3002\u5982\u679c\u628a$T_x$\u5728$SAM$\u4e0a\u8dd1\u4e00\u904d\u8d70\u5230\u4e86\u6709\u6807\u8bb0\u7684\u8282\u70b9\uff0c\u5219$T_x$\u4e3a$S$\u7684\u4e00\u4e2a\u540e\u7f00\uff0c$sl_x=deep_x$\u3002\n\n\u89e3\u51b3\u4e86\u540e\u7f00\u7684\u95ee\u9898\uff0c\u53ea\u8981\u627e\u51fa$[S]$\u5373\u53ef\u3002$kmp$\u5339\u914d\u4e00\u4e0b\u5c31\u884c\u3002\u5982\u679c$T_x$\u6b63\u597d\u5339\u914d$S$\uff0c\u5219$sl_x=sl_y$\uff08$y$\u4e3a$x$\u7684$m$\u7ea7\u7956\u5148\uff09\u3002\n\n\u800c$a[S]+[P_i]$\u5c31\u628a$S$\u53cd\u8fc7\u6765\u505a\u4e00\u904d\u3002\u5f00\u4e2a$sl$\u7684\u6876\u7edf\u8ba1\u7b54\u6848\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u590d\u6742\u5ea6$O(n\\log n)$\uff0c\u6210\u529f\u6324\u8fdb\u4e86\u6700\u4f18\u89e3\u6700\u540e\u4e00\u9875\u3002\n\n\u4ee3\u7801\uff1a\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 1000005\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\nchar s[2][maxn],t[maxn],a[maxn];\nint m;\nstruct SAM{\n#define son(x,y) son[x][y]\n\tint son[maxn<<1][26],fa[maxn<<1],len[maxn<<1],cnt,last;\n\tbool en[maxn<<1];\n\tvoid clear(){\n\t\tfor(register int i=1;i<=cnt;++i)memset(son[i],0,sizeof son[i]),fa[i]=len[i]=en[i]=0;\n\t\tcnt=last=1;\n\t}\n\tint insert(int c){\n\t\tint p=last,ne=last=++cnt;\n\t\tlen[ne]=len[p]+1;\n\t\twhile(p&&!son(p,c))son(p,c)=ne,p=fa[p];\n\t\tif(!p)fa[ne]=1;\n\t\telse {\n\t\t\tint q=son(p,c);\n\t\t\tif(len[q]==len[p]+1)fa[ne]=q;\n\t\t\telse {\n\t\t\t\tint sp=++cnt;\n\t\t\t\tmemcpy(son[sp],son[q],sizeof son[q]);\n\t\t\t\tlen[sp]=len[p]+1,fa[sp]=fa[q],fa[q]=fa[ne]=sp;\n\t\t\t\twhile(p&&son(p,c)==q)son(p,c)=sp,p=fa[p];\n\t\t\t}\n\t\t}\n\t\treturn ne;\n\t}\n\tvoid init(char *s){\n\t\tclear();\n\t\tfor(register int i=1;i<m;++i)insert(s[i]);\n\t\tint node=insert(s[m]);\n\t\twhile(node)en[node]=1,node=fa[node];\n\t}\n}S[2];\nint siz[maxn],h[maxn],st[maxn][2],tax[2][maxn],q[maxn],sl[maxn],nex[2][maxn],tail,num,mx,root,all,cnt;\nlong long ans;\nbool vis[maxn];\nstruct edge{int pre,to;}e[maxn];\ninline void add(int from,int to){e[++num]=(edge){h[from],to},h[from]=num;}\nvoid getroot(int node,int fa=0){\n\tint ma=all-siz[node];\n\tfor(register int i=h[node],x;i;i=e[i].pre){\n\t\tx=e[i].to;\n\t\tif(vis[x]||x==fa)continue;\n\t\tgetroot(x,node),ma=max(ma,siz[x]);\n\t}\n\tif(ma<mx)mx=ma,root=node;\n}\nvoid modify(int id,int len){\n\tif(len==-1)return;\n\tans+=tax[id^1][(m-len)%m];\n\tst[++cnt][0]=len,st[cnt][1]=id;\n}\nvoid calc(int node,int fa,int sam,int len,int id){\n\tq[++tail]=node,sam=S[id].son(sam,a[node]);\n\twhile(len&&s[id][len+1]!=a[node])len=nex[id][len];\n\tif(s[id][len+1]==a[node])++len;\n\tif(len==m)sl[node]=sl[q[tail-m]],len=nex[id][m];\n\telse if(S[id].en[sam])sl[node]=tail%m;\n\tmodify(id,sl[node]);\n\tfor(register int i=h[node],x;i;i=e[i].pre){\n\t\tx=e[i].to;\n\t\tif(x==fa||vis[x])continue;\n\t\tcalc(x,node,sam,len,id);\n\t}\n\t--tail,sl[node]=-1;\n}\nvoid dfs(int node,int fa){\n\tsiz[node]=1,sl[node]=-1;\n\tfor(register int i=h[node],x;i;i=e[i].pre){\n\t\tx=e[i].to;\n\t\tif(x==fa||vis[x])continue;\n\t\tdfs(x,node),siz[node]+=siz[x];\n\t}\n}\nvoid solve(int node){\n\tvis[node]=1,cnt=0,modify(0,0);\n\t++tax[0][0];\n\tint sam=S[1].son(1,a[node]),len=(s[1][1]==a[node]),last=1;\n\tlong long rec=ans;\n\tbool flag=0;\n\tif(len==m)len=nex[1][m];\n\telse if(S[1].en[sam])sl[node]=1%m;\n\tmodify(1,sl[node]);\n\tfor(register int i=h[node],x;i;i=e[i].pre){\n\t\tx=e[i].to;\n\t\tif(vis[x])continue;\n\t\tfor(register int j=last+1;j<=cnt;++j)\n\t\t\t++tax[st[j][1]][st[j][0]];\n\t\tlast=cnt;\n\t\tcalc(x,node,1,0,0);\n\t\tq[++tail]=node,calc(x,node,sam,len,1),--tail;\n\t}\n\tdfs(node,0);\n\tfor(register int i=1;i<=last;++i)--tax[st[i][1]][st[i][0]];\n\tfor(register int i=h[node],x;i;i=e[i].pre){\n\t\tx=e[i].to;\n\t\tif(vis[x])continue;\n\t\tall=siz[x],mx=inf,getroot(x,node),solve(root);\n\t}\n}\nint main(){\n\tmemset(sl,-1,sizeof sl),sl[0]=0;\n\tint t=read();\n\twhile(t--){\n\t\tmemset(vis,0,sizeof vis);\n\t\tmemset(h,0,sizeof h),num=ans=0;\n\t\tint n=read();\n\t\tm=read();\n\t\tscanf(\"%s\",a+1);\n\t\tfor(register int i=1;i<=n;++i)a[i]-='A';\n\t\tfor(register int i=1,x,y;i<n;++i)x=read(),y=read(),add(x,y),add(y,x);\n\t\tscanf(\"%s\",s[0]+1);\n\t\tfor(register int i=1;i<=m;++i)s[1][i]=(s[0][m-i+1]-='A');\n\t\tS[0].init(s[0]),S[1].init(s[1]);\n\t\tint j=0;\n\t\tfor(register int i=2;i<=m;++i){\n\t\t\twhile(j&&s[0][i]!=s[0][j+1])j=nex[0][j];\n\t\t\tif(s[0][i]==s[0][j+1])++j;\n\t\t\tnex[0][i]=j;\n\t\t}\n\t\tj=0;\n\t\tfor(register int i=2;i<=m;++i){\n\t\t\twhile(j&&s[1][i]!=s[1][j+1])j=nex[1][j];\n\t\t\tif(s[1][i]==s[1][j+1])++j;\n\t\t\tnex[1][i]=j;\n\t\t}\n\t\tdfs(1,0),mx=inf,all=n,getroot(1,0),solve(root);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n}\n```",
        "postTime": 1591760630,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4075 \u3010[SDOI2016]\u6a21\u5f0f\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "hhhhhhhh\u5e76\u4e0d\u77e5\u9053\u4e3a\u5565\uff0c\u53ea\u6709\u4e09\u7ec4\u6570\u636e\uff0c\u4e0d\u8fc7\u7b2c\u4e09\u7ec4\u6570\u636e\u591f\u5f3a\uff0c\u8fbe\u5230\u4e86\u9898\u76ee\u63cf\u8ff0\u7684$\\sum n\\leq10^6$\n\n~~\u5b9e\u9645\u4e0a$n=1e6$\u624d\u7b97\u5f3a\u5427~~\n\n\u53ea\u6709\u4e00\u4e2a\u5168\u5c40\u8be2\u95ee\uff0c\u8003\u8651\u70b9\u5206\u6cbb\uff0c\u7edf\u8ba1\u4e32\u7684\u65f6\u5019\u56e0\u4e3a$<u,v>$\u4e3a\u6709\u5e8f\u5bf9\uff0c\u6240\u4ee5solve\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\n\n\u8981\u5206\u522b\u8bb0\u5f55x\u5230\u5f53\u524d\u70b9\u65f6\u4f5c\u4e3aprefix\u548csuffix\u7684\u4e0d\u540chash\u503c\uff0c\u540c\u65f6\u5bf9\u9884\u5904\u7406\u51fa\u6765\u7684pre\u548csuf\u503c\u505a\u5339\u914d\n\n\u5982\u679c\u5339\u914d\u4e0a\u4e86\u5c31\u627e\u5bf9\u5e94\u7684\u5728\u4e4b\u524d\u5b50\u6811\u91cc\u7684\u6b8b\u4e32\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2a\u4e32\u5339\u914d\u524d\u540e\u7f00\u7edf\u8ba1\u7b54\u6848\u53ef\u4ee5\u505a\u5230$O(1)$\n\n\u8fd9\u6837\u7684\u8bdd\u8981\u5f00spre\u548cssuf\u8868\u793a\u5728\u4e4b\u524d\u7684\u5b50\u6811\u91cc\u7684$\\mod m$\u610f\u4e49\u4e0b\u6b8b\u4e32\u7684\u6570\u91cf\n\n\u8fd9\u6837\u7684\u8bddcalc\u6bcf\u4e2a\u70b9\u590d\u6742\u5ea6\u5c31\u662f\u7ebf\u6027\u7684\uff0c\u603b\u590d\u6742\u5ea6$O(n\\log n)$\n\n\u6ce8\u610f\u5c06\u4e00\u4e2a\u5b50\u6811\u7684\u5339\u914d\u524d\u540e\u7f00\u8ba1\u5165\u7684\u65f6\u5019\u8981dfs\u5b8c\u6574\u4e2a\u5b50\u6811\u518d\u8fdb\u884c\u8bb0\u5f55\uff0c\u4e0d\u7136\u4f1a\u6709\u91cd\u590d\u7b54\u6848\u3002\n\n\u6211\u8fd9\u91cc\u662f\u628acalc\u7684\u70b9$x$\u4f5c\u4e3a\u540e\u7f00\u8ba1\u5165\uff0c\u6240\u4ee5$spre_m$\uff08\u7531$x$\u548c\u5176\u5b50\u6811\u4e2d\u7684\u4e00\u6761\u8def\u5f84\u6070\u597d\u662f\u6a21\u5f0f\u4e32\u7684\u5faa\u73af\uff09\u4e00\u5f00\u59cb\u4e3a1\n\n\u5f53\u7136\u8fd9\u6837\u7684\u8bdd\u5982\u679c$x$\u6070\u597d\u4e3a\u6a21\u5f0f\u4e32\u6700\u540e\u4e00\u4f4d\u5bf9\u4e8e\u7f3a\u5c11$x$\u4f5c\u4e3a\u540e\u7f00\u7684\u524d\u7f00\u4e5f\u8981\u8ba1\u5165\uff0c\u5373$ssuf_1$\u521d\u59cb\u503c\u4e3a1\n\n```cpp\n#include<cstdio>\n#include<cstring>\nconst int N = 1e5+7;\ntypedef long long LL;\ntypedef unsigned long long uLL;\n#define R register\ninline int max(int a, int b) {\n  return a > b ? a : b;\n}\nint last[N], cnt, n, m, up, vis[N];\nchar A[N];\nuLL S[N], pre[N], suf[N];\nLL ans;\nstruct Edge {\n  int to, nxt;\n}e[N*2];\ninline void add(int u, int v) {\n  e[++cnt].nxt = last[u], e[cnt].to = v, last[u] = cnt;\n}\nint SIZ, mxson[N], siz[N], rt;\n#define BASE 233uLL\n#define cerr(x) printf(\"%d \", x)\n//#define cerr(x, y) printf(\"%d %d\\n\", x, y)\n#define debug printf(\"GG\\n\")\nvoid findrt(int x, int fa) {\n  siz[x] = 1, mxson[x] = 0;\n  for (int o = last[x]; o; o = e[o].nxt) {\n    int to = e[o].to;\n    if (to == fa || vis[to]) continue;\n    findrt(to, x);\n    siz[x] += siz[to];\n    mxson[x] = max(mxson[x], siz[to]);\n  } mxson[x] = max(SIZ - siz[x], mxson[x]);\n  if (mxson[x] < mxson[rt]) rt = x;\n}\nuLL spre[N], ssuf[N];\nint poi, total;\nstruct Node {\n  int pos, id;\n}p[N];\n/* \ninline uLL FST(uLL x, uLL k) {\n  uLL res = 1uLL;\n  while (k) {\n    if (k & 1uLL) res = res * x;\n    x = x * x; k >>= 1uLL; \n  } return res;\n}*/\nuLL FST[N]; \nvoid getdis(int x, int fa, uLL suffix, uLL prefix, uLL dep) {\n  //if (dep > up) return;\n  //cerr(x);\n  uLL omgx = suffix + S[x] * FST[dep];//, omgy = prefix * BASE + S[x];\n  uLL omgy = prefix + S[x] * FST[dep - 1];\n  if (omgx == suf[up - dep])\n    ans += spre[m - (dep + 1) % m], p[++total] = (Node){((dep + 1) % m) == 0 ? m : ((dep + 1) % m), 1};\n  if (omgy == pre[dep])\n    ans += ssuf[m - dep % m], p[++total] = (Node){(dep % m == 0) ? m : (dep % m), 2};\n  for (int o = last[x]; o; o = e[o].nxt) {\n    int to = e[o].to;\n    if (to == fa || vis[to]) continue;\n    getdis(to, x, omgx, omgy, dep + 1);\n  }\n}\nvoid div(int x) {\n  //cerr(x);\n  if (S[x] == A[m]) ssuf[1]++;\n  spre[m]++;\n  total = 0, poi = 0;\n  for (R int o = last[x]; o; o = e[o].nxt) {\n    int to = e[o].to;\n    if (vis[to]) continue;\n    getdis(to, x, S[x], 0, 1);\n    while (poi < total) {\n      poi++;\n      if (p[poi].id == 1) ssuf[p[poi].pos]++;\n      if (p[poi].id == 2) spre[p[poi].pos]++;\n    }\n  }\n  while (poi >= 1) {\n    if (p[poi].id == 1) ssuf[p[poi].pos]--;\n    if (p[poi].id == 2) spre[p[poi].pos]--;\n    poi--;\n  }\n  if (S[x] == A[m]) ssuf[1]--;\n  spre[m]--;\n  //cerr(ans, x);\n  //printf(\"%d %d\\n\", ans, x);\n}\nvoid solve(int x) {\n  //cerr(x);\n  //printf(\"%d %d\\n\", ans, x);\n  vis[x] = 1, div(x);\n  //printf(\"%d %d\\n\", ans, x);\n  for (int o = last[x]; o; o = e[o].nxt) {\n    int to = e[o].to;\n    if (vis[to]) continue;\n    SIZ = mxson[0] = siz[to], rt = 0;\n    findrt(to, x);\n    solve(rt);\n  }\n  vis[x] = 0;\n}\nint main() {\n  //freopen(\"random.in\", \"r\", stdin);\n  //freopen(\"check.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  FST[0] = 1uLL;\n  for (int i = 1; i <= 100000; i++)\n    FST[i] = FST[i - 1] * BASE;\n  while(T--) {\n    cnt = 0;\n    ans = 0;\n    memset(e, 0, sizeof(e));\n    memset(last, 0, sizeof(last));\n    memset(A, 0, sizeof(A));\n    memset(S, 0, sizeof(S));\n    memset(pre, 0, sizeof(pre));\n    memset(suf, 0, sizeof(suf));\n    memset(mxson, 0, sizeof(mxson));\n    memset(siz, 0, sizeof(siz));\n    //memset(vis, 0, sizeof(vis));\n    memset(spre, 0, sizeof(spre));\n    memset(ssuf, 0, sizeof(ssuf));\n    scanf(\"%d%d\", &n, &m);\n    scanf(\"%s\", A + 1);\n    up = (n / m) * m;\n    for (R int i = 1; i <= n; i++) S[i] = A[i];\n    for (R int i = 1, x, y; i < n; i++) scanf(\"%d%d\", &x, &y), add(x, y), add(y, x);\n    scanf(\"%s\", A + 1);\n    for (R int i = 1; i <= up; i++) pre[i] = pre[i - 1] * BASE + A[((i % m) == 0) ? m : (i % m)];\n    for (R int i = up; i >= 1; i--) suf[i] = suf[i + 1] * BASE + A[((i % m) == 0) ? m : (i % m)];\n    rt = 0, mxson[0] = SIZ = n;\n    findrt(1, 0);\n    solve(rt);\n    printf(\"%lld\\n\", ans);\n  } //debug;\n}\n\n// 97 ~ 122\n/* \n2\n10 4\naaaaaaabbb\n2 1\n3 1\n4 1\n5 2\n6 4\n7 2\n8 3\n9 7\n10 7\nbaaa \n10 4\naaaaaaabbb\n2 1\n3 1\n4 1\n5 2\n6 4\n7 2\n8 3\n9 7\n10 7\nbaaa \n\n*/\n```",
        "postTime": 1569306536,
        "uid": 181849,
        "name": "ComeIntoCalm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4075 \u3010[SDOI2016]\u6a21\u5f0f\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "[\u70b9\u6b64\u98df\u7528\u66f4\u4f73](https://www.lu-anlai.com/oi/solution/sdoi2016-r2d1t1/)\n\n\u524d\u6392\u63d0\u9192\uff1a\u672c\u9898\u662f\u4e00\u9053\u6bd2\u7624\u7684 \u70b9\u5206\u6cbb \u9898\u76ee\u3002\n\n\u9898\u76ee\u94fe\u63a5\uff1a[Luogu P4075](https://www.luogu.com.cn/problem/P4075)/[BZOJ 4598](http://www.lydsy.com/JudgeOnline/problem.php?id=4598)/[LibreOJ 2065](https://loj.ac/problem/2065)/SDOI2016 R2D1T1\u3002\n\n# \u9898\u76ee\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u6709\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u5927\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\uff0c\u95ee\u6709\u591a\u5c11\u5bf9 $u,v$\uff08\u6709\u5e8f\u6570\u5bf9\uff09\u6ee1\u8db3\u4ece $u$ \u5230 $v$ \u7684\u7b80\u5355\u8def\u5f84\u62fc\u6210\u7684\u5b57\u7b26\u4e32\u662f\u6a21\u5f0f\u4e32\u91cd\u590d\u6574\u6570\u500d\u7684\u7ed3\u679c\u3002\n\n\u8f93\u5165\u6709\u591a\u7ec4\u6570\u636e\uff0c\u6570\u636e\u7ec4\u6570\u7528 $C$ \u8868\u793a\u3002\n\n## \u6570\u636e\u8303\u56f4\n\n$$1\\leq C\\leq 10$$\n$$3\\leq n\\leq 10^6$$\n$$3\\leq m\\leq 10^6$$\n\n## \u65f6\u7a7a\u9650\u5236\n\n|\u9898\u76ee|\u65f6\u95f4\u9650\u5236|\u7a7a\u95f4\u9650\u5236|\n|:-:|:-:|:-:|\n|[Luogu P4075](https://www.luogu.com.cn/problem/P4075)|$$1\\text{s}$$|$$125\\text{MiB}$$|\n|[BZOJ 4598](http://www.lydsy.com/JudgeOnline/problem.php?id=4598)|$$10\\text{s}$$|$$128\\text{MiB}$$|\n|[LibreOJ 2065](https://loj.ac/problem/2065)|$$1\\text{s}$$|$$256\\text{MiB}$$|\n|SDOI2016 R2D1T1|$$?\\text{s}$$|$$?\\text{MiB}$$|\n\n# \u9898\u89e3\n\n## \u601d\u8def\n\n\u8003\u8651\u70b9\u5206\u6cbb\u3002\n\n\u5c06\u6574\u4e2a\u590d\u5236\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u5207\u6210\u4e09\u90e8\u5206\u3002\u5de6\u8fb9\u90e8\u5206\uff0c\u4e2d\u95f4\u5b57\u7b26\uff0c\u53f3\u8fb9\u90e8\u5206\u3002\u5c06\u4e2d\u95f4\u5b57\u7b26\u653e\u5728\u6839\u8282\u70b9\u90e8\u4f4d\uff0c\u7136\u540e\u7528\u6876\u7edf\u8ba1\u7b54\u6848\uff08\u5de6\u3001\u53f3\u534a\u90e8\u5206\u6070\u597d\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff09\u3002\u7136\u540e\u5c31\u662f\u5e38\u89c4\u7684\u70b9\u5206\u6cbb\u3002\n\n\u53e6\u5916\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8db3 $n$\uff0c\u5e94\u5f53\u8865\u9f50\uff0c\u7528\u54c8\u5e0c\u5904\u7406\u3002\u5de6\u8fb9\u987a\u5e8f\u5904\u7406\uff0c\u53f3\u8fb9\u5012\u5e8f\u5904\u7406\u3002\n\n\u4e0b\u9762\u8bb2\u4e00\u4e9b\u7ec6\u8282\u3002\n\n### \u7ec6\u8282\n\n#### \u5b57\u7b26\u4e32 Hash\n\n```cpp\ninline void fix(reg char *val){\n\twhile(*val){\n\t\t*val=*val-'A'+1; //\u63d0\u524d\u9884\u5904\u7406\u597d\u5b57\u7b26\u4e32\uff0c\u51cf\u5c11\u8fd0\u7b97\u91cf\n\t\t++val;\n\t}\n\treturn;\n}\n\ninline void copy(reg char *str,const int& m,const int& n){ //\u8865\u8db3\u5b57\u7b26\u4e32\u5230 n \u4f4d\n\tfor(reg int i=m+1;i<=n;++i)\n\t\tstr[i]=str[i-m];\n\treturn;\n}\n\nconst ull base=31;\null basep[MAXN];\null prehash[MAXN],sufhash[MAXN];\n\ninline void gethash(reg char *str,reg ull *hash,const int& n){ //\u8ba1\u7b97 Hash \u503c\u5e76\u50a8\u5b58\u597d\n\tfor(reg int i=1;i<=n;++i)\n\t\thash[i]=hash[i-1]*base+str[i];\n\treturn;\n}\n```\n\n#### \u70b9\u5206\u6cbb \u7684 Calc \u90e8\u5206\n\n```cpp\ninline void DFS(int ID,const int& father,const int& dep,reg int &Maxdep,const char& mid,reg ull Hash){\n\tMaxdep=max(Maxdep,dep); //\u8bb0\u5f55\u6700\u5927\u6df1\u5ea6\uff0c\u65b9\u4fbf\u540e\u671f\u8fd8\u539f\n\tHash+=val[ID]*basep[dep-1]; //\u7edf\u8ba1\u5f53\u524d Hash \u503c\n\tif(Hash==prehash[dep]){ //\u5de6\u534a\u90e8\u5206\u5339\u914d\n\t\t++Tpre[dep%m]; //\u7edf\u8ba1\n\t\tif(mid==pre[dep%m+1]) //\u5982\u679c\u6070\u597d\u4e2d\u95f4\u5b57\u7b26\u540c\u65f6\u5339\u914d\n\t\t\tans+=sumsuf[m-dep%m-1]; //\u76f4\u63a5\u7edf\u8ba1\u7b54\u6848\n\t}\n\tif(Hash==sufhash[dep]){ //\u53f3\u534a\u90e8\u5206\u5339\u914d\n\t\t++Tsuf[dep%m]; //\u7edf\u8ba1\n\t\tif(mid==suf[dep%m+1]) //\u4e2d\u95f4\u5339\u914d\n\t\t\tans+=sumpre[m-dep%m-1]; //\u7edf\u8ba1\u7b54\u6848\n\t}\n\tfor(reg int i=head[ID];i;i=Next[i])\n\t\tif(!del[to[i]]&&to[i]!=father)\n\t\t\tDFS(to[i],ID,dep+1,Maxdep,mid,Hash); //\u9012\u5f52\n\treturn;\n}\n\ninline void Calc(const int& ID){\n\tif(val[ID]==pre[1])\n\t\t++sumpre[0]; //\u6ca1\u6709\u5de6\u534a\u90e8\u5206\u7684\u7279\u6b8a\u60c5\u51b5\n    if(val[ID]==suf[1])\n\t\t++sumsuf[0]; //\u6ca1\u6709\u53f3\u534a\u90e8\u5206\u7684\u7279\u6b8a\u60c5\u51b5\n\tint Tag=0;\n\tfor(reg int i=head[ID];i;i=Next[i])\n\t\tif(!del[to[i]]){\n\t\t\tint Max=0;\n\t\t\tDFS(to[i],ID,1,Max,val[ID],0); //\u7edf\u8ba1\n\t\t\tTag=max(Tag,Max); //\u8bb0\u5f55\u6700\u5927\u6df1\u5ea6\uff0c\u65b9\u4fbf\u8fd8\u539f\n\t\t\tfor(reg int i=0;i<=Max;++i)\n\t\t\t\tsumpre[i]+=Tpre[i],sumsuf[i]+=Tsuf[i],Tpre[i]=Tsuf[i]=0; //\u7d2f\u52a0\u7edf\u8ba1\u6570\u636e\n\t\t}\n\tfor(reg int i=0;i<=Tag;++i)\n\t\tsumpre[i]=sumsuf[i]=0; //\u8fd8\u539f\n\treturn;\n}\n```\n\n#### \u5feb\u901f\u8bfb\u5165\n\n\u53e6\u5916\u8fd9\u9053\u9898\u5361\u5e38\u6570\uff0c\u6240\u4ee5\u8981\u5feb\u901f\u8bfb\u5165\u3002\n\n```cpp\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++) //\u7528 fread() \u52a0\u5feb\u8bfb\u5165\u901f\u5ea6\nstatic char buf[100000],*p1=buf,*p2=buf;\n\ninline int read(void){ //\u8bfb\u5165\u6574\u6570\uff0c\u6bd4\u8f83\u7b80\u5355\n\treg bool f=false;\n\treg char ch=getchar();\n\treg int res=0;\n\twhile(ch<'0'||'9'<ch)f|=(ch=='-'),ch=getchar();\n\twhile('0'<=ch&&ch<='9')res=10*res+ch-'0',ch=getchar();\n\treturn f?-res:res;\n}\n\ninline void read(char* str){ //\u8bfb\u5165\u4ec5\u5305\u542b\u5927\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\n\treg char ch=getchar();\n\twhile(ch<'A'||'Z'<ch)ch=getchar();\n\twhile('A'<=ch&&ch<='Z')(*str++)=ch,ch=getchar();\n\treturn;\n}\n```\n\n#### \u521d\u59cb\u5316\n\n\u8bb0\u5f97\u521d\u59cb\u5316\u4e0d\u8981\u6f0f\u6389\u67d0\u4e9b\u90e8\u5206\u3002\n\n```cpp\ninline void Init(void){ //\u521d\u59cb\u5316\n\tcnt=0; //\u90bb\u63a5\u8868\n\tans=0; //\u7b54\u6848\n\tmemset(del,0,sizeof(del)); //\u70b9\u5206\u6cbb\u6807\u8bb0\n\tmemset(head,0,sizeof(head)); //\u90bb\u63a5\u8868\u8868\u5934\n\treturn;\n}\n```\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e48\u591a\u7ec6\u8282\uff0c\u4f60\u4eec\u53ef\u4ee5\u770b\u770b\u63d0\u4ea4\u8bb0\u5f55\u4e2d\u6211\u88ab\u5361\u4e86\u591a\u5c11\u6b21\u3002\n\n## \u4ee3\u7801\n\n\u7b97\u6cd5\u7684\u6e10\u8fd1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(m+n+n\\log_2^2n)$\u3002\u5f88\u660e\u663e\u4f1a\u8d85\u65f6\uff0c\u4f46\u6211\u4eec\u8981\u76f8\u4fe1\u8bc4\u6d4b\u673a\uff0c\u662f\u53ef\u4ee5\u8fc7\u7684~~\uff08\u5b9e\u9645\u4e0a\u662f\u6570\u636e\u592a\u6c34\u4e86\uff09~~\u3002\n\n\u51fd\u6570\u4f20\u9012\u53c2\u6570\u7528 `const int&` \u66f4\u5feb\uff0c\u9632\u6b62\u88ab\u5361\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\ntypedef unsigned long long ull;\n#define INF 0X3F3F3F3F\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++)\nstatic char buf[100000],*p1=buf,*p2=buf;\ninline int read(void){\n\treg bool f=false;\n\treg char ch=getchar();\n\treg int res=0;\n\twhile(ch<'0'||'9'<ch)f|=(ch=='-'),ch=getchar();\n\twhile('0'<=ch&&ch<='9')res=10*res+ch-'0',ch=getchar();\n\treturn f?-res:res;\n}\ninline void read(char* str){\n\treg char ch=getchar();\n\twhile(ch<'A'||'Z'<ch)ch=getchar();\n\twhile('A'<=ch&&ch<='Z')(*str++)=ch,ch=getchar();\n\treturn;\n}\n\nconst int MAXN=1000000+5;\nconst int MAXM=1000000+5;\n\ninline void Init(void);\ninline void Read(void);\ninline void Work(void);\n\nint C;\n\nint main(void){\n\treg int C=read();\n\twhile(C--){\n\t\tInit();\n\t\tRead();\n\t\tWork();\n\t}\n\treturn 0;\n}\n\nint n,m;\nint cnt,head[MAXN],to[MAXN<<1],Next[MAXN<<1];\nchar val[MAXN];\nchar pre[MAXN],suf[MAXN];\null ans;\n\ninline void Add_Edge(const int& u,const int& v){\n\tNext[++cnt]=head[u];\n\tto[cnt]=v;\n\thead[u]=cnt;\n\treturn;\n}\n\ninline void Add_Tube(const int& u,const int& v){\n\tAdd_Edge(u,v);\n\tAdd_Edge(v,u);\n\treturn;\n}\n\ninline void fix(reg char *val){\n\twhile(*val){\n\t\t*val=*val-'A'+1;\n\t\t++val;\n\t}\n\treturn;\n}\n\ninline void copy(reg char *str,const int& m,const int& n){\n\tfor(reg int i=m+1;i<=n;++i)\n\t\tstr[i]=str[i-m];\n\treturn;\n}\n\nconst ull base=31;\null basep[MAXN];\null prehash[MAXN],sufhash[MAXN];\n\ninline void gethash(reg char *str,reg ull *hash,const int& n){\n\tfor(reg int i=1;i<=n;++i)\n\t\thash[i]=hash[i-1]*base+str[i];\n\treturn;\n}\n\ninline void Read(void){\n\tn=read(),m=read();\n\tread(val+1);\n\tfix(val+1);\n\tbasep[0]=1;\n\tfor(reg int i=1;i<=n;++i)\n\t\tbasep[i]=basep[i-1]*base;\n\tfor(reg int i=1;i<n;++i){\n\t\tstatic int u,v;\n\t\tu=read(),v=read();\n\t\tAdd_Tube(u,v);\n\t}\n\tread(pre+1);\n\tfix(pre+1);\n\tfor(reg int i=1;i<=m;++i)\n\t\tsuf[i]=pre[m-i+1];\n\tcopy(pre,m,n);\n\tcopy(suf,m,n);\n\tgethash(pre,prehash,n);\n\tgethash(suf,sufhash,n);\n\treturn;\n}\n\nbool del[MAXN];\nint size[MAXN],Max[MAXN];\n\ninline void GetRoot(int ID,const int& father,const int& sum,reg int& root){\n\tsize[ID]=1,Max[ID]=0;\n\tfor(reg int i=head[ID];i;i=Next[i])\n\t\tif(!del[to[i]]&&to[i]!=father){\n\t\t\tGetRoot(to[i],ID,sum,root);\n\t\t\tsize[ID]+=size[to[i]];\n\t\t\tMax[ID]=max(Max[ID],size[to[i]]);\n\t\t}\n\tMax[ID]=max(Max[ID],sum-size[ID]);\n\tif(Max[ID]<=Max[root])\n\t\troot=ID;\n\treturn;\n}\n\nint Tpre[MAXN],Tsuf[MAXN];\nint sumpre[MAXN],sumsuf[MAXN];\n\ninline void DFS(int ID,const int& father,const int& dep,reg int &Maxdep,const char& mid,reg ull Hash){\n\tMaxdep=max(Maxdep,dep);\n\tHash+=val[ID]*basep[dep-1];\n\tif(Hash==prehash[dep]){\n\t\t++Tpre[dep%m];\n\t\tif(mid==pre[dep%m+1])\n\t\t\tans+=sumsuf[m-dep%m-1];\n\t}\n\tif(Hash==sufhash[dep]){\n\t\t++Tsuf[dep%m];\n\t\tif(mid==suf[dep%m+1])\n\t\t\tans+=sumpre[m-dep%m-1];\n\t}\n\tfor(reg int i=head[ID];i;i=Next[i])\n\t\tif(!del[to[i]]&&to[i]!=father)\n\t\t\tDFS(to[i],ID,dep+1,Maxdep,mid,Hash);\n\treturn;\n}\n\ninline void Calc(const int& ID){\n\tif(val[ID]==pre[1])\n\t\t++sumpre[0];\n    if(val[ID]==suf[1])\n\t\t++sumsuf[0];\n\tint Tag=0;\n\tfor(reg int i=head[ID];i;i=Next[i])\n\t\tif(!del[to[i]]){\n\t\t\tint Max=0;\n\t\t\tDFS(to[i],ID,1,Max,val[ID],0);\n\t\t\tTag=max(Tag,Max);\n\t\t\tfor(reg int i=0;i<=Max;++i)\n\t\t\t\tsumpre[i]+=Tpre[i],sumsuf[i]+=Tsuf[i],Tpre[i]=Tsuf[i]=0;\n\t\t}\n\tfor(reg int i=0;i<=Tag;++i)\n\t\tsumpre[i]=sumsuf[i]=0;\n\treturn;\n}\n\ninline void Solve(int ID,const int& sum){\n\tif(sum<m)\n\t\treturn;\n\tint root=0;\n\tMax[root=0]=INF;\n\tGetRoot(ID,-1,sum,root);\n\tdel[root]=true;\n\tCalc(root);\n\tfor(reg int i=head[root];i;i=Next[i])\n\t\tif(!del[to[i]])\n\t\t\tSolve(to[i],size[to[i]]<size[root]?size[to[i]]:sum-size[root]);\n\treturn;\n}\n\ninline void Work(void){\n\tSolve(1,n);\n\tprintf(\"%llu\\n\",ans);\n\treturn;\n}\n\ninline void Init(void){\n\tcnt=0;\n\tans=0;\n\tmemset(del,0,sizeof(del));\n\tmemset(head,0,sizeof(head));\n\treturn;\n}\n```\n",
        "postTime": 1584412262,
        "uid": 38502,
        "name": "agicy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4075 \u3010[SDOI2016]\u6a21\u5f0f\u5b57\u7b26\u4e32\u3011"
    },
    {
        "content": "\u80fd\u5b57\u7b26\u4e32\u54c8\u5e0c\u4e3a\u4ec0\u4e48\u8981\u5199\u9ad8\u79d1\u6280\u554a\u3002\n\n\u70b9\u5206\u6cbb\u4e4b\uff0c\u8003\u8651\u4e00\u4e2a\u5b50\u6811 $V$ \u7684\u8d21\u732e\u3002\n\n\u8003\u8651\u5982\u4f55\u5224\u65ad $i\\in V$ \u5230\u5206\u6cbb\u4e2d\u5fc3 $u$ \u7684\u8def\u5f84\u80fd\u5426\u6210\u4e3a\u201c$S$ \u7684\u91cd\u590d\u201d\u7684\u524d\u7f00 / \u540e\u7f00\u3002\n\n\u5148\u5e8f\u904d\u5386 $V$\uff0c\u52a8\u6001\u5730\u7ef4\u62a4 $u$ \u5230\u5f53\u524d\u904d\u5386\u5230\u7684\u70b9 $i$ \u7684\u8def\u5f84\u5f62\u6210\u7684\u5b57\u7b26\u4e32 $T$\uff0c\n\n\u8fdb\u5165\u4e00\u4e2a\u70b9\u76f8\u5f53\u4e8e\u5728 $T$ \u540e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u9000\u51fa\u4e00\u4e2a\u70b9\u76f8\u5f53\u4e8e\u5728 $T$ \u540e\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002\n\n\u4ee5\u540e\u7f00\u4e3a\u4f8b\uff0c\u7ef4\u62a4 $F_i$ \u8868\u793a\u5f53\u524d $T[1\\dots i]$ \u80fd\u5426\u6210\u4e3a\u201c$S$ \u7684\u91cd\u590d\u201d\u7684\u540e\u7f00\uff08$F_0=1$\uff09\uff0c\u5219\n\n$$\nF_i=\\begin{cases}[T[1\\dots i]=S[m-i+1\\dots m]]&i<m\\\\ [F_{i-m}=1\\bigwedge T[i-m+1\\dots i]=S]&i\\ge m\\end{cases}\n$$\n\n\u5148\u5e8f\u904d\u5386\u5230 $i$ \u540e\u8f6c\u79fb\u5f53\u524d $S$ \u7684\u54c8\u5e0c\u503c\u548c $F_{d_i}$\uff0c\u8bb0\u5f55\u6b64\u65f6\u7684 $F_{d_i}$ \u8868\u793a $i$ \u5230 $u$ \u7684\u8def\u5f84\u80fd\u5426\u6210\u4e3a\u201c$S$ \u7684\u91cd\u590d\u201d\u7684\u540e\u7f00\u3002\n\n\u7136\u540e\u5957\u8def\u5730\u8bb0\u5f55 $C_{0/1,i}$ \u8868\u793a\u957f\u5ea6\u4e3a $i$ \u7684\u80fd\u6210\u4e3a\u201c$S$ \u7684\u91cd\u590d\u201d\u7684\u524d\u7f00 / \u540e\u7f00\u7684\u8def\u5f84\u6570\u91cf\uff0c\n\n\u5904\u7406 $V$ \u5b50\u6811\u65f6\u5bf9\u5176\u4e2d\u6bcf\u6761\u957f\u5ea6\u4e3a $j$ \u7684\u80fd\u6210\u4e3a\u201c$S$ \u7684\u91cd\u590d\u201d\u7684\u524d\u7f00 / \u540e\u7f00\u7684\u8def\u5f84\uff0c\u5176\u8d21\u732e\u4e3a $C_{1/0,(m+1-j\\bmod m)\\bmod m}$\u3002\n\n\uff08\u5bf9\u524d\u7f00\u627e\u540e\u7f00\uff0c\u5bf9\u540e\u7f00\u627e\u524d\u7f00\uff09\n\n\u7136\u540e\u628a $V$ \u7684\u4fe1\u606f\u5408\u5e76\u8fdb $C$ \u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <ext/pb_ds/hash_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace std;\nstruct E\n{\n    int v, t;\n} e[2000050];\n__gnu_pbds::gp_hash_table<int, int> C[2];\nchar a[1000050], o[1000050];\nbool b[1000050], F[1000050][2], W[1000050][2];\nunsigned long long q, P[1000050], H[1000050], Z[1000050][2];\nint T, n, m, c, l, R, s[1000050], p[1000050], d[1000050], D[1000050], h[1000050];\nvoid A(int u, int v)\n{\n    e[++c] = {v, h[u]};\n    h[u] = c;\n}\nvoid X(int u, int k, int t)\n{\n    s[u] = 1;\n    p[u] = 0;\n    for (int i = h[u], v; i; i = e[i].t)\n        if (!b[v = e[i].v] && v != k)\n            X(v, u, t), s[u] += s[v], p[u] = max(p[u], s[v]);\n    if (p[R] > (p[u] = max(p[u], t - s[u])))\n        R = u;\n}\nvoid Y(int u, int k)\n{\n    H[d[D[l++] = u]] = H[d[u] - 1] * 233 + a[u];\n    if (d[u] >= m)\n        W[u][0] = F[d[u]][0] = F[d[u] - m][0] & H[d[u]] - H[d[u] - m] * P[m] == Z[m][0],\n        W[u][1] = F[d[u]][1] = F[d[u] - m][1] & H[d[u]] - H[d[u] - m] * P[m] == Z[m][1];\n    else\n        W[u][0] = F[d[u]][0] = H[d[u]] == Z[m][0] - Z[m - d[u]][0] * P[d[u]],\n        W[u][1] = F[d[u]][1] = H[d[u]] == Z[m][1] - Z[m - d[u]][1] * P[d[u]];\n    for (int i = h[u], v; i; i = e[i].t)\n        if (!b[v = e[i].v] && v != k)\n            d[v] = d[u] + 1, Y(v, u);\n}\nvoid Q(int u, int k)\n{\n    H[1] = a[u];\n    W[u][0] = F[1][0] = C[0][1] = a[u] == o[b[u] = 1];\n    W[u][1] = F[1][1] = C[1][1] = a[u] == o[m];\n    for (int i = h[u], v; i; i = e[i].t)\n        if (!b[v = e[i].v] && v != k)\n        {\n            d[v] = 2;\n            Y(v, u);\n            for (int j = 0; j < l; ++j)\n                q += W[D[j]][0] * C[1][(m + 1 - d[D[j]] % m) % m] + W[D[j]][1] * C[0][(m + 1 - d[D[j]] % m) % m];\n            for (int j = 0; j < l; ++j)\n                C[0][d[D[j]] % m] += W[D[j]][0], C[1][d[D[j]] % m] += W[D[j]][1];\n            l = 0;\n        }\n    C[0].clear();\n    C[1].clear();\n    for (int i = h[u], v; i; i = e[i].t)\n        if (!b[v = e[i].v] && v != k)\n            R = 0, X(v, u, s[v]), Q(R, u);\n}\nint main()\n{\n    p[0] = 1e9;\n    F[0][0] = F[0][1] = 1;\n    for (int i = P[0] = 1; i <= 1e6; ++i)\n        P[i] = P[i - 1] * 233;\n    scanf(\"%d\", &T);\n    while (T--)\n    {\n        scanf(\"%d%d%s\", &n, &m, a + 1);\n        for (int i = 1, u, v; i < n; ++i)\n            scanf(\"%d%d\", &u, &v), A(u, v), A(v, u);\n        scanf(\"%s\", o + 1);\n        for (int i = 1; i <= m; ++i)\n            Z[i][0] = Z[i - 1][0] * 233 + o[m - i + 1], Z[i][1] = Z[i - 1][1] * 233 + o[i];\n        R = 0;\n        X(1, 0, n);\n        Q(R, 0);\n        printf(\"%llu\\n\", q);\n        c = q = 0;\n        for (int i = 1; i <= n; ++i)\n            h[i] = b[i] = 0;\n    }\n    return 0;\n}\n```\n",
        "postTime": 1685192922,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "P4075 [SDOI2016]\u6a21\u5f0f\u5b57\u7b26\u4e32"
    }
]