[
    {
        "content": "- 40\u5206\u505a\u6cd5-\u5bf9\u4e8e1\uff0c2\uff0c3\uff0c6\u4e2a\u70b9\n\n\u6a21\u62df\n- 40\u5206\u505a\u6cd5-\u5bf9\u4e8e\u524d4\u4e2a\u70b9\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u9ad8\u5ea610e9\u662f\u7eb8\u8001\u864e\u3002\u5b8c\u5168\u53ef\u4ee5\u79bb\u6563\u5316\u5904\u7406\u4e00\u904d\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5f97\u5230\uff0c\u4ece0\u5230$max(Ai,Bi,Ci)$\uff0c\u5f53\u7136\u662f\u79bb\u6563\u5316\u540e\u7684\uff0c\u4e4b\u95f4\u7684\u6bcf\u4e2a\u9ad8\u5ea6\u5728\u521d\u59cb\u60c5\u51b5\u4e0b\u6709\u51e0\u4e2a\u9732\u51fa\u90e8\u5206\u3002\u65b9\u6cd5\u662f\u4ece\u4f4e\u5f80\u9ad8\u626b\u63cf\u6bcf\u4e00\u4e2a\u9ad8\u5ea6\uff0c\u5982\u679c\u6709\u4e00\u4e9b\u5de8\u77f3\u7684\u9ad8\u5ea6\u4f4e\u4e8e\u626b\u63cf\u7ebf\uff0c\u90a3\u4e48\u770b\u5b83\u4e24\u8fb9\u7684\u5de8\u77f3\u9ad8\u5ea6\u3002\u5982\u679c\u4e24\u8fb9\u90fd\u6bd4\u8fd9\u5757\u9ad8\uff0c\u90a3\u4e48\u52a01\u3002\u5982\u679c\u90fd\u6bd4\u8fd9\u4e2a\u4f4e\uff0c\u90a3\u4e48\u51cf1\u3002\n\n- 100\u5206\u505a\u6cd5\n\n\u5176\u5b9e\u4e0a\u9762\u7684\u505a\u6cd5\u662f\u9884\u5904\u7406\u3002\u5047\u8bbe\u4e0b\u9762\u7684\u60c5\u51b5\uff1a\n\n```cpp\n0\n1        x     \n1        x    x\n1   x    x    x\n1   x    x    x\n1   x    x    x\n    3    5    4\n```\n\u53d8\u6210\n```cpp\n0\n0(-1)              \n1              x\n2(+1)x         x\n2(+1)x         x\n1    x    x    x\n     3    1    4\n```\n\u770b\u5230\u4e86\u5417\uff0c\u5f53\u4e0b\u964d\u65f6\uff0c\u5728\u67d0\u4e2a\u9ad8\u5ea6\u4e0b\uff0c\u8fd9\u4e2a\u5de8\u77f3\u5de6\u53f3\u4e24\u8fb9\u5982\u679c\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5404-1\uff0c\u800c\u8fd9\u4e2a\u9ad8\u5ea6\u4e0b\u8fd9\u4e2a\u5de8\u77f3\u4e24\u8fb9\u90fd\u6709\u5de8\u77f3\uff0c\u90a3\u4e48\u5404+1\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\u52a0\u6cd5\u3002\n\n\u8fd8\u9700\u8981\u7ee7\u7eed\u8bf4\u4e0b\u53bb\u5417\uff1f\u7ebf\u6bb5\u6811\u6811\u72b6\u6570\u7ec4\u5e73\u8861\u6811(treap)\u968f\u4fbf\u4e0a\u5427\u3002\n",
        "postTime": 1488121935,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "\u75280\u8868\u793a<\u6c34\u9762\uff0c1\u8868\u793a>=\u6c34\u9762\n\n\u4e00\u4e2a\u9732\u51fa\u7684\u90e8\u5206\u7c7b\u4f3c\u8fd9\u6837:00011111..1100\n\n\u5047\u8bbe\u6709n\u4e2a1\uff0c\n\n\u90a3\u4e48\u76f8\u90bb\u4e4b\u95f4max\u4e3a1\u7684\u6709n+1\u5bf9\uff0c\n\nmin\u4e3a1\u7684\u6709n-1\u5bf9\u3002\n\n\u53ef\u4ee5\u53d1\u73b0: (max>=x\u7684 - min>=x\u7684)/2 = x\u7684\u7b54\u6848\n\n\u6240\u4ee5\u6211\u4eec\u5bf9max,min\u7ef4\u62a4\u4e00\u4e2a\u4e1c\u897f\uff0c\u652f\u6301\u5220\u9664\uff0c\u63d2\u5165\uff0c\u67e5\u8be2>=\u4e00\u4e2a\u6570\u7684\u4e2a\u6570\u3002\n\n\u53ef\u4ee5\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=400100;\n\nint a[N],c[N],top;\nvoid add(int i,int x)\n{\n    i=top-i+1;\n    for(;i<=top;i+=i&-i) c[i]+=x;\n}\nint qiu(int i)\n{\n    i=top-i+1;\n    int ans=0;\n    for(;i;i-=i&-i) ans+=c[i];\n    return ans;\n}\n\nnamespace kcz\n{\n  int *q[N],tot;\n  void push(int *x)\n  {\n    q[++tot]=x;\n  }\n  bool xiao(int *x,int *y)\n  {\n      return *x<*y;\n  }\n  void lisan()\n  {\n       sort(q+1,q+tot+1,xiao);\n       top=1;\n     int now=*q[1];*q[1]=1;\n       for(int i=2;i<=tot;++i)\n       {\n           if(*q[i]!=now) { now=*q[i];++top; }\n           *q[i]=top;\n       }\n  }\n};\nstruct query\n{\n    int type,i,x;\n    void init()\n    {\n        scanf(\"%d\",&type);\n        if(type==1)  scanf(\"%d\",&x); \n        else  scanf(\"%d%d\",&i,&x);\n        kcz::push(&x);\n    }\n    void solve()\n    {\n        if(type==1)  printf(\"%d\\n\",qiu(x)>>1);\n        else\n        {\n            add(max(a[i],a[i+1]),-1);add(min(a[i],a[i+1]),1);\n            add(max(a[i],a[i-1]),-1);add(min(a[i],a[i-1]),1);\n            a[i]=x;\n            add(max(a[i],a[i+1]),1);add(min(a[i],a[i+1]),-1);\n            add(max(a[i],a[i-1]),1);add(min(a[i],a[i-1]),-1);\n        }\n    }\n}q[N];\n\nint main()\n{ freopen(\"1.in\",\"r\",stdin);\n    int n,m,i;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;++i) scanf(\"%d\",a+i);\n    for(i=0;i<=n+1;++i) kcz::push(a+i);\n    for(i=1;i<=m;++i) q[i].init();\n    kcz::lisan();\n    for(i=0;i<=n;++i) \n    {add(max(a[i],a[i+1]),1);add(min(a[i],a[i+1]),-1);\n    }\n    for(i=1;i<=m;++i) q[i].solve();\n}\n```",
        "postTime": 1490010816,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "### \u9884\u5904\u7406\n\n\u6211\u4eec\u89c2\u5bdf\u8fd9\u9053\u9898\uff0c\u5148\u786e\u5b9a\u6bcf\u6839\u77f3\u67f1\u7684\u8d21\u732e\uff1b\n\n\u6bcf\u6839\u77f3\u67f1\u5bf9\u7b54\u6848\u662f\u5426\u6709\u8d21\u732e\u5728\u4e8e\u5176\u662f\u5426**\u6253\u4e71\u4e86\u5176\u5de6\u53f3\u533a\u95f4\u7684\u5355\u8c03\u6027**\uff1b\n\n![](https://cdn.luogu.com.cn/upload/pic/16366.png)\n\n\u5927\u6982\u5c31\u662f\u4e0a\u56fe\u7684\u6548\u679c\uff0c\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u5c06**\u7ef4\u62a4\u5de6\u8fb9\u90a3\u4e00\u4e32\u6570**\uff1b\n\n\u90a3\u4e48\u6211\u4eec**\u5982\u4f55\u83b7\u5f97\u3001\u5982\u4f55\u5904\u7406**\u8fd9\u4e2a\u4fe1\u606f\u5462\uff1f\n\n\u6211\u4eec\u518d\u6765\u770b\u6bcf\u6839\u77f3\u67f1\uff1b\n\n\u5bf9\u4e8e\u6bcf\u6839\u77f3\u67f1\u6765\u8bf4\uff0c\u5982\u679c\u5176\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u90a3\u4e48\u8d21\u732e\u5728\u4e14\u53ea\u5728\u4e25\u683c\u9ad8\u4e8e\u5b83\u7684\u533a\u95f4\uff1a\u5bf9\u4e8e\u4e0a\u51f8\u7684\u77f3\u67f1\uff0c\u5b83\u5bf9\u4e25\u683c\u9ad8\u4e8e\u5b83\u7684\u533a\u95f4\u8d21\u732e\u4e3a-1\uff0c\u5bf9\u4e8e\u4e0b\u51f9\u7684\u77f3\u67f1\uff0c\u5b83\u5bf9\u4e25\u683c\u9ad8\u4e8e\u5b83\u7684\u533a\u95f4\u8d21\u732e\u4e3a+1\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5927\u80c6\u4f5c\u51fa\u5982\u4e0b\u8bba\u65ad\uff1a\n\n\u5728**\u4e25\u683c\u76f8\u90bb\u4e0d\u76f8\u7b49**\u7684\u77f3\u67f1\u7fa4\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u6839\u77f3\u67f1\uff0c\u5982\u679c\u5176\u4e24\u4fa7\u77f3\u67f1**\u4e25\u683c\u9ad8\u4e8e**\u5b83\uff0c\u90a3\u4e48\u5c31\u5728h[i]~maxh\u7684\u533a\u95f4+1\uff1b\u5982\u679c\u5176\u4e24\u4fa7\u7684\u77f3\u67f1**\u4e25\u683c\u4f4e\u4e8e**\u5b83\uff0c\u90a3\u4e48\u5c31\u5728h[i]~maxh\u7684\u533a\u95f4-1\u3002\u6700\u540e\u7edf\u8ba1\u5f97\u5230\u7684\u5c31\u662f\u5728\u8be5\u9ad8\u5ea6\u4e0b\u7684\u5c71\u5cf0\u603b\u6570\u3002\n\n\u4f46\u662f\u6211\u4eec\u5f88\u5feb\u5c31\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e8e\u4e0b\u56fe\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u7edf\u8ba1\u8d77\u6765\u5c31\u53d8\u5f97\u6709\u4e9b\u56f0\u96be\u2193\n\n![](https://cdn.luogu.com.cn/upload/pic/16367.png)\n\n\u5982\u679c\u6211\u4eec\u7edf\u8ba1\u65f6\u8981\u6c42\u6bcf\u6839\u77f3\u67f1\u4e24\u4fa7\u7684\u77f3\u67f1\u4e0e\u8fd9\u6839\u77f3\u67f1\u7684\u9ad8\u5ea6\u5dee\u90fd\u662f\u4e25\u683c\u4e0d\u4e3a0\u7684\uff0c\u90a3\u4e48\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5fc5\u7136\u4f1a\u53d7\u5230\u5c40\u9650\u3002\n\n\u4f46\u662f\u6211\u4eec\u5f88\u5feb\u5c31\u901a\u8fc7\u4e00\u79cd\u53bb\u91cd\u7684\u601d\u60f3\u627e\u5230\u4e86\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u65b9\u6cd5~~\uff08\u5176\u5b9e\u6211\u60f3\u4e86\u4e00\u665a\u4e0a\u624d\u53d1\u73b0\u7684\u6211\u592a\u5f31\u4e86QAQ~~\n\n\u6211\u4eec\u653e\u5f00\u4e25\u683c\u4f4e\u4e8e\u7684\u5de6\u8fb9\u754c\uff0c\u653e\u5f00\u4e25\u683c\u9ad8\u4e8e\u5224\u5b9a\u7684\u53f3\u8fb9\u754c\uff0c\u5bf9\u4e8e\u8fd9\u4e24\u79cd\u60c5\u51b5\u5176\u5355\u4fa7\u77f3\u67f1\u4e0d\u4e88\u4e25\u683c\u9650\u5236\uff1b\n\n\u90a3\u4e48**\u9884\u5904\u7406**\u5c31\u5b8c\u6210\u4e86\n\n### \u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u4fee\u6539\u548c\u67e5\u8be2\u64cd\u4f5c\uff1a\n\n\u67e5\u8be2\u64cd\u4f5c\u5c31\u662f\u5355\u70b9\u67e5\u8be2\u6570\u503c\uff08\u8fd9\u4e2a\u4e0d\u7528\u89e3\u91ca\u5427\uff0c\u6bcf\u4e2a\u70b9\u6570\u503c\u4ee3\u8868\u7684\u662f\u6c34\u9762\u6d77\u62d4\u8fbe\u5230\u8fd9\u79cd\u9ad8\u5ea6\u65f6\u7684\u5c71\u5cf0\u4e2a\u6570\uff09\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u5176\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4f9d\u7136\u5728\u4e8e\u6253\u4e71\u4e86\u539f\u6709\u77f3\u67f1\u7684\u79e9\u5e8f\uff1b\n\n\u6211\u4eec\u8bbe\u67d0\u77f3\u67f1\u4e24\u4fa7\u77f3\u67f1\u9ad8\u5ea6\u8f83\u9ad8\u7684\u4e3amxw\uff0c\u8f83\u4f4e\u7684\u4e3amiw\uff1b\n\n\u5bf9\u6bd4\u5982\u4e0b\u4e24\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/16366.png)\n\n![](https://cdn.luogu.com.cn/upload/pic/16368.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u67d0\u6839\u77f3\u67f1\u4e0b\u964d\u65f6\uff0c\u81f3\u591a\u53ea\u4f1a\u5f71\u54cd\u4e24\u4e2a\u533a\u95f4(new,miw]\u222a(mxw,pre]\uff08\u5f53\u7136\u5f71\u54cd\u4e0d\u5230\u6211\u4eec\u5c31\u4e0d\u8003\u8651\u4e86\uff09\uff1b\u540c\u6837\u5730\uff0c\u67d0\u6839\u77f3\u67f1\u4e0a\u5347\u65f6\u4e5f\u81f3\u591a\u53ea\u4f1a\u5f71\u54cd\u8fd9\u4e24\u6bb5\u533a\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6811\u72b6\u6570\u7ec4\u3001zkw\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5dee\u5206\u4e5f\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5efa\u8bae\u5404\u4f4d\u5c1d\u8bd5\u53bb\u5199\u4e00\u4e0b~~\uff08\u53cd\u6b63\u6211\u4e0d\u5199~~\n\n\u6211\u5199\u4e86\u4e00\u4e2a\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u7ebf\u6bb5\u6811\uff1b\n\n\u4e0a\u4ee3\u7801\u2193\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=1<<18;\n\nint n,m,x,y,z,maxh;\nint add[MAXN<<2],h[MAXN];\nstruct rpg{\n    int kd,h,id,to;\n    int reh;\n}p[MAXN<<1];\n\nbool cmp1(rpg a,rpg b){\n    return a.h<b.h;\n}bool cmp2(rpg a,rpg b){\n    return a.id<b.id;\n}\n\nvoid cadd(int k,int l,int r,int le,int ri,int x){\n    if(le<=l&&r<=ri){\n        add[k]+=x;\n        return;\n    }int i=k<<1,mid=l+r>>1;\n    if(le<=mid) cadd(i,l,mid,le,ri,x);\n    if(mid<ri) cadd(i|1,mid+1,r,le,ri,x);\n}\n\nint ask(int k,int l,int r,int p,int x){\n    if(l==r) return add[k]+x;\n    int i=k<<1,mid=l+r>>1;\n    if(p<=mid) return ask(i,l,mid,p,x+add[k]);\n    return ask(i|1,mid+1,r,p,x+add[k]);\n}\n\nvoid init(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&x);\n        p[i]=(rpg){0,x,i};\n    }for(int i=1;i<=m;++i){\n        scanf(\"%d\",&x);\n        if(x==1){\n            scanf(\"%d\",&y);\n            p[i+n]=(rpg){1,y,i+n};\n        }else{\n            scanf(\"%d%d\",&y,&z);\n            p[i+n]=(rpg){2,z,i+n,y};\n        }\n    }return;\n}\n\nvoid reduce(){\n    sort(p+1,p+n+m+1,cmp1);p[1].reh=1;\n    for(int i=2;i<=n+m;++i){\n        if(p[i].h==p[i-1].h) p[i].reh=p[i-1].reh;\n        else p[i].reh=p[i-1].reh+1;\n    }maxh=p[n+m].reh+1;sort(p+1,p+n+m+1,cmp2);\n    for(int i=1;i<=n;++i) h[i]=p[i].reh;\n    sort(p+1,p+n+1,cmp1);add[1]=1;\n    for(int i=1;i<=n;++i){\n        if(h[p[i].id-1]<=p[i].reh&&h[p[i].id+1]<p[i].reh){\n            cadd(1,1,maxh,p[i].reh+1,maxh,-1);\n        }if(h[p[i].id-1]>p[i].reh&&h[p[i].id+1]>=p[i].reh){\n            cadd(1,1,maxh,p[i].reh+1,maxh,1);\n        }\n    }\n\treturn;\n}\n\nvoid solve(){\n    for(int i=n+1;i<=m+n;++i){\n        if(p[i].kd==1){\n            printf(\"%d\\n\",ask(1,1,maxh,p[i].reh,0));\n        }else{\n            int mxw=max(h[p[i].to-1],h[p[i].to+1]);\n            int miw=min(h[p[i].to-1],h[p[i].to+1]);\n            if(p[i].reh<h[p[i].to]){\n                if(h[p[i].to]>mxw) cadd(1,1,maxh,max(p[i].reh,mxw)+1,h[p[i].to],-1);\n                if(p[i].reh<miw) cadd(1,1,maxh,p[i].reh+1,min(miw,h[p[i].to]),1);\n            }else if(p[i].reh>h[p[i].to]){\n                if(h[p[i].to]<miw) cadd(1,1,maxh,h[p[i].to]+1,min(p[i].reh,miw),-1);\n                if(p[i].reh>mxw) cadd(1,1,maxh,max(h[p[i].to],mxw)+1,p[i].reh,1);\n            }h[p[i].to]=p[i].reh;\n        }\n    }return;\n}\n\nint main(){\n    init();\n    reduce();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1522195492,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "# \u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4\n\u6ca1\u770b\u9898\u7684\u5148\u770b\u770b\u9898\u5427[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3616)\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u7684\u60c5\u51b5\uff0c\u90fd\u53ef\u4ee5\u7528\u4e00\u4e2a01\u4e32\u8868\u793a\uff0c0\u8868\u793a\u672a\u9732\u51fa\u6c34\u9762\uff0c1\u8868\u793a\u9732\u51fa\u6c34\u9762\u3002\u6837\u4f8b\u7b2c\u4e00\u4e2a\u8be2\u95ee\u53ef\u8868\u793a\u4e3a11010\u3002\u63a5\u4e0b\u6765\uff0c\u53ef\u4ee5\u5206\u4e24\u90e8\u5206\u6765\u7edf\u8ba1\u3002\u7b2c\u4e00\u90e8\u5206\u7edf\u8ba1\u6709\u591a\u5c11\u5757\u77f3\u5934\u9732\u51fa\u6c34\u9762\uff0c\u7b2c\u4e8c\u90e8\u5206\u7edf\u8ba1\u6709\u591a\u5c11\u5757\u77f3\u5934\u548c\u5b83\u5de6\u8fb9\u7684\u77f3\u5934\u90fd\u9732\u51fa\u6c34\u9762\u3002\u7b2c\u4e00\u90e8\u5206-\u7b2c\u4e8c\u90e8\u5206\u5c31\u53ef\u4ee5\u5f97\u5230\u6bb5\u6570\u4e86\u3002\n### \u4e3a\u4ec0\u4e48\u80fd\u8fd9\u6837\u505a\u5462\uff1f\n\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\uff0c\u5c31\u4f1a\u53d1\u73b0\u76f8\u6bd4\u4e8e\u7b2c\u4e00\u90e8\u5206\uff0c\u7b2c\u4e8c\u90e8\u5206\u6ca1\u6709\u7edf\u8ba1\u6bcf\u4e00\u6bb5\u7684\u5de6\u7aef\u70b9\u3002\u51cf\u5b8c\u540e\uff0c\u5f97\u5230\u7684\u5c31\u662f\u5de6\u7aef\u70b9\u7684\u4e2a\u6570\u4e86\u3002\u6bcf\u4e2a\u5de6\u7aef\u70b9\u5bf9\u5e94\u4e00\u6bb5\uff0c\u5de6\u7aef\u70b9\u6570=\u6bb5\u6570\u3002\n### \u5b9e\u73b0\u65b9\u6cd5\n\u5b83\u91cc\u9762\u4e0d\u4ec5\u6709\u67e5\u8be2\uff0c\u8fd8\u6709\u64cd\u4f5c\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4a\uff0cb\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u5176\u4e2da\u67e5\u8be2i\u8868\u793a\u6c34\u9ad8\u4e3ai\u65f6\u9732\u51fa\u6c34\u9762\u5757\u6570\uff0cb\u67e5\u8be2i\u8868\u793a\u6c34\u9ad8\u4e3ai\u65f6\u6709\u591a\u5c11\u5757\u77f3\u5934\u548c\u5b83\u5de6\u8fb9\u7684\u77f3\u5934\u90fd\u9732\u51fa\u6c34\u9762\u3002\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff08\u9700\u8981\u7528\u5230\u6811\u72b6\u6570\u7ec4\u7684\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff0c\u8fd8\u4e0d\u4e86\u89e3\u7684\u53bb\u770b\u770b[\u6811\u72b6\u6570\u7ec4\u6a21\u677f2](https://www.luogu.org/problemnew/show/P3368)\uff09\uff1a \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,q,lsh[400002],czsz[200001][3],ysxl[200002],tail=1,n1,ysxl1[200002];\nint a[400002],b[400002];\nbool gz(int x,int y){\n\treturn x<y;\n}\nvoid xg(int x,int y){//a\u4fee\u6539 \n\tif(x<=0)return;\n\twhile(x<=tail){\n\t\ta[x]+=y;\n\t\tx+=x&-x;\n\t}\n\treturn;\n}\nint cx(int x){//a\u67e5\u8be2 \n\tint ans=0;\n\twhile(x>0){\n\t\tans+=a[x];\n\t\tx-=(x&-x);\n\t}\n\treturn ans;\n}\nvoid xg_(int x,int y){//b\u4fee\u6539 \n\tif(x<=0)return;\n\twhile(x<=tail){\n\t\tb[x]+=y;\n\t\tx+=x&-x;\n\t}\n\treturn;\n}\nint cx_(int x){//b\u67e5\u8be2 \n\tint ans=0;\n\twhile(x>0){\n\t\tans+=b[x];\n\t\tx-=(x&-x);\n\t}\n\treturn ans;\n}\nint lshh(int x){//\u79bb\u6563\u5316\uff08\u5176\u5b9e\u53ef\u4ee5\u7528C++ STL map\u5b9e\u73b0\uff09 \n\tint l=0,r=tail,mid;\n\twhile(l<=r){\n\t\tmid=(l+r)/2;\n\t\tif(lsh[mid]>x){\n\t\t\tr=mid-1;\n\t\t}\n\t\telse{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\treturn r;\n}\nvoid xgg(int x,int y){//\u4fee\u6539 \n\txg(ysxl1[x]+1,1);\n\txg(y+1,-1);\n\txg_(min(ysxl1[x-1],ysxl1[x])+1,1);\n\txg_(min(ysxl1[x-1],y)+1,-1);\n\txg_(min(ysxl1[x+1],ysxl1[x])+1,1);\n\txg_(min(ysxl1[x+1],y)+1,-1);\n\tysxl1[x]=y;\n\treturn;\n}\nint main(){\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tysxl[i]=a[i];\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tscanf(\"%d%d\",&czsz[i][0],&czsz[i][1]);\n\t\tif(czsz[i][0]==2){\n\t\t\tscanf(\"%d\",&czsz[i][2]);\n\t\t\ta[i+n]=czsz[i][2];\n\t\t}\n\t\telse{\n\t\t\ta[i+n]=czsz[i][1];\n\t\t}\n\t}\n\tsort(a+1,a+1+n+q,gz);\n\tn1=n+q;\n\tfor(int i=1;i<=n1;i++){//\u79bb\u6563\u5316 \n\t\tlsh[tail]=a[i];\n\t\tif(a[i]!=a[i+1]){\n\t\t\ttail++;\n\t\t}\n\t}\n\tmemset(a,0,sizeof(a));//\u6570\u7ec4\u56de\u6536\u5229\u7528 \n\tfor(int i=1;i<=n;i++){\n\t\tysxl[i]=lshh(ysxl[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\txgg(i,ysxl[i]); \n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tif(czsz[i][0]==1){\n\t\t\tczsz[i][1]=lshh(czsz[i][1]);\n\t\t\tprintf(\"%d\\n\",cx(czsz[i][1])-cx_(czsz[i][1]));\n\t\t}\n\t\telse{\n\t\t\txgg(czsz[i][1],lshh(czsz[i][2]));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u8fd8\u6709\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u79bb\u6563\u5316\u548c\u6811\u72b6\u6570\u7ec4\u4ece1\u5f00\u59cb\uff0c\u5426\u5219\u4f1a\u5361\u6b7b\u5faa\u73af\u3002\n\n### -end-\n\n\n",
        "postTime": 1559133890,
        "uid": 102754,
        "name": "getchar123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "#### ~~\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u662f\u7d2b\u8272\u7684\uff08\u624b\u52a8\u6ed1\u7a3d\uff09~~\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u4e00\u5757\u77f3\u5934\u9ad8\u5ea6\u53d8\u5316\u5bf9\u6bcf\u4e2a\u9ad8\u5ea6\u7684\u67e5\u8be2\u7684\u7b54\u6848\u7684\u5f71\u54cd\uff0c\n\n\u5373**\u6211\u4eec\u8981\u8bb0\u5f55\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9ad8\u5ea6\u7684\u67e5\u8be2\u7684\u7b54\u6848**\n\n#### \u6240\u4ee5\u8981\u79bb\u6563\u5316\u9ad8\u5ea6\uff08\u4e0d\u7136\u54ea\u5f00\u7684\u4e0b\u6570\u7ec4\u554a\uff09\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u6b21\u53d8\u5316\u7684\u5bf9\u4e8e\u4e0d\u540c\u9ad8\u5ea6\u7684\u5f71\u54cd\uff0c\u5bf9\u4e8e\u4e00\u6bb5\u8fde\u7eed\u9ad8\u5ea6\u662f\u76f8\u540c\u7684\n\n#### \u5373\u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u4e00\u6bb5\u8fde\u7eed\u9ad8\u5ea6\u7684\u7b54\u6848\uff0c\u5f71\u54cd\u76f8\u540c\uff0c\u6ee1\u8db3\u533a\u95f4\u4fee\u6539\u6027\u8d28\n\n\u5c31\u51b3\u5b9a\u662f\u4f60\u4e86\uff0c\u6811\u72b6\u6570\u7ec4\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u8003\u8651\u4fee\u6539\u4f4d\u7f6e\u4fee\u6539\u524d\u540e\u548c\u4e24\u8fb9\u7684\u9ad8\u5ea6\u5173\u7cfb\n\n\u4f46\u662f\u60c5\u51b5\u5f88\u591a\uff0c\u4e0d\u59a8\u628a**\u4fee\u6539\u64cd\u4f5c\u6362\u6210\u5148\u5220\u9664\uff08\u628a\u9ad8\u5ea6\u964d\u4e3a0\uff09\uff0c\u518d\u63d2\u5165**\n\n\u8003\u8651\u5220\u9664\uff0c\u63d2\u5165\u7684\u8bdd\uff0c\u53cd\u8fc7\u6765\u5c31\u597d\uff0c\u4e2d\u95f4\u7684\u662f\u5220\u9664\u4f4d\u7f6e\n\n#### \u60c5\u51b51\uff1a\u4e2d\u95f4\u6bd4\u4e24\u8fb9\u4f4e\n\n![](https://cdn.luogu.com.cn/upload/pic/38868.png)\n\n\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5220\u9664\u6389\u4e2d\u95f4\u7684\u53ea\u80fd\u8ba9\u9ad8\u5ea6\u4e3a$part1$\u7684\u533a\u95f4\u7684\u7b54\u6848$+1$\uff0c\u56e0\u4e3a\u5b83\u5272\u88c2\u4e86\u4e24\u8fb9\u7684\u8fde\u7eed\u533a\u95f4\n\n#### \u60c5\u51b52\uff1a\u4e2d\u95f4\u6bd4\u4e24\u8fb9\u9ad8\n\n![](https://cdn.luogu.com.cn/upload/pic/38869.png)\n\n\u6700\u9ad8\u7684\u533a\u95f4\u5f71\u54cd\u5c31\u5f88\u5e7f\u4e86\n\n\u5bf9\u4e8e$part1:$\u5b83\u7684\u5220\u9664\u4f1a\u5272\u88c2\u4e24\u8fb9\u7684\u533a\u95f4$val~of~part1++$\n\n\u5bf9\u4e8e$part2:$\u56e0\u4e3a\u4e24\u8fb9\u6ca1\u6709\u6784\u6210\u8fde\u7eed\u533a\u95f4\uff0c\u6240\u4ee5\u6ca1\u6709\u5f71\u54cd\n\n\u5bf9\u4e8e$part3:$\u539f\u6765\u662f\u6709\u9732\u51fa\u6765\u7684\uff0c\u73b0\u5728\u6ca1\u4e86\uff0c\u5f53\u7136\u8981\u51cf\u6389\u4e86\n\n#### \u60c5\u51b53\uff1a\u4e2d\u95f4\u7684\u9ad8\u5ea6\u4e5f\u4e2d\u7b49\n\n![](https://cdn.luogu.com.cn/upload/pic/38875.png)\n\n\u4e5f\u5f88\u7b80\u5355\u4e86\uff0c\u53ea\u5bf9$part1$\u6709\u5f71\u54cd\n\n#### \u7136\u800c\u8fd9\u6837\u5904\u7406\u7684\u53ea\u662f\u7b54\u6848\u7684\u53d8\u5316\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7edf\u8ba1\u521d\u59cb\u7b54\u6848\n\n\u8fd8\u662f\u8003\u8651\u9ad8\u5ea6\u53d8\u5316\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u968f\u7740\u9ad8\u5ea6\u4e0a\u5347\uff0c\u672a\u88ab\u8986\u76d6\u7684\u70b9\u7684\u4e2a\u6570\u662f\u5355\u8c03\u4e0d\u5347\u7684\n\n\u6309\u9ad8\u5ea6\u5f00$vector$\uff0c\u628a\u6bcf\u4e2a\u9ad8\u5ea6\u6070\u597d\u88ab\u8986\u76d6\u7684\u6240\u6709\u4f4d\u7f6e\u6254\u8fdb\u53bb\n\n\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u9ad8\u5ea6\uff0c\u5148\u5c06\u8fd9\u4e2a\u9ad8\u5ea6\u7684\u7b54\u6848\u8bbe\u4e3a\u4e0a\u4e00\u4e2a\u9ad8\u5ea6\u7684\u7b54\u6848\uff0c\u53d6\u51fa\u8fd9\u4e2a\u9ad8\u5ea6\u6070\u597d\u88ab\u8986\u76d6\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u7edf\u8ba1\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u5f71\u54cd\n\n\u5982\u679c\u5b83\u6bd4\u4e24\u8fb9\u9ad8\uff0c\u7c7b\u6bd4\u4e0a\u9762\u60c5\u51b52\uff0c\u7b54\u6848\u51cf\u4e00\n\n\u4f4e\u5462\uff0c\u7b54\u6848\u52a0\u4e00\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\n\n#### \u4e0a\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int maxn=2e5+10;\nvector<int>v[2*maxn];\nint pre[2*maxn],n,m,a[maxn],mp[2*maxn],op[maxn],cnt,b[maxn],d[maxn],c[2*maxn];\nbool vis[2*maxn];\nint lowbit(int x)\n{\n    return x&-x;\n}\nint sum(int x)\n{\n    int ret=0;\n    while(x)\n    {\n        ret+=c[x];\n        x-=lowbit(x);\n    }\n    return ret;\n}\nvoid add(int x,int ch)\n{\n    while(x<=cnt)\n    {\n        c[x]+=ch;\n        x+=lowbit(x);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        mp[++cnt]=a[i];\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d\",&op[i]);\n        if(op[i]==1)\n            scanf(\"%d\",&b[i]),mp[++cnt]=b[i];\n        else\n            scanf(\"%d%d\",&d[i],&b[i]),mp[++cnt]=b[i];\n    }\n    sort(mp+1,mp+cnt+1);\n    cnt=unique(mp+1,mp+cnt+1)-mp-1;\n    for(int i=1;i<=n;i++)\n    {\n        a[i]=lower_bound(mp+1,mp+cnt+1,a[i])-mp;\n        v[a[i]+1].push_back(i);\n    }\n    for(int i=1;i<=m;i++)\n        b[i]=lower_bound(mp+1,mp+cnt+1,b[i])-mp;\n    pre[1]=1,vis[0]=vis[n+1]=1;\n    for(int i=2;i<=cnt;i++)\n    {\n        pre[i]=pre[i-1];\n        for(int j=0;j<v[i].size();j++)\n        {\n            int u=v[i][j];\n            vis[u]=1;\n            if(!vis[u-1]&&!vis[u+1])\n                pre[i]++;\n            else if(vis[u-1]&&vis[u+1])\n                pre[i]--;\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n        if(op[i]==1)\n            printf(\"%d\\n\",pre[b[i]]+sum(b[i]));\n        else\n        {\n            int tmp[5];\n            tmp[1]=a[d[i]-1],tmp[2]=a[d[i]],tmp[3]=a[d[i]+1];\n            sort(tmp+1,tmp+4);\n            if(a[d[i]]>=a[d[i]-1]&&a[d[i]]>=a[d[i]+1])\n                add(tmp[2]+1,-1),add(tmp[3]+1,1);\n            add(1,1),add(tmp[1]+1,-1);\n            tmp[1]=a[d[i]-1],tmp[2]=b[i],tmp[3]=a[d[i]+1];\n            sort(tmp+1,tmp+4);\n            if(b[i]>=a[d[i]-1]&&b[i]>=a[d[i]+1])\n                add(tmp[2]+1,1),add(tmp[3]+1,-1);\n            add(1,-1),add(tmp[1]+1,1);\n            a[d[i]]=b[i];\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1540086834,
        "uid": 57045,
        "name": "communist",
        "ccfLevel": 7,
        "title": "P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "##### \u672c\u7bc7\u9898\u89e3\u601d\u8def\u6765\u6e90\u4e8e\u672c\u4eba\u96c6\u8bad\u65f6\uff0c\u4e00\u6b21\u6a21\u62df\u8d5b\u4e2d\u67d0\u9053\u53d8\u5f0f\u9898\u76ee\u7684\u9898\u89e3\n\n### \u524d\u7f6e\u77e5\u8bc6:\n\n1. \u7ebf\u6bb5\u6811\n1. \u79bb\u6563\u5316\n\n\u6709\u4e86\u4ee5\u4e0a\u77e5\u8bc6\u7684\u57fa\u7840\uff0c\u6211\u4eec\u624d\u80fd\u9ad8\u6548\u5730\u89e3\u51b3\u672c\u9053\u9898\u76ee\u3002\u82e5\u5bf9\u4ee5\u4e0a\u77e5\u8bc6\u70b9\u4e0d\u719f\u6089\uff0c\u5efa\u8bae\u5148\u505a\u9898\u5de9\u56fa\uff0c\u518d\u6765\u5c1d\u8bd5\u6b64\u9898\uff0c\u4f1a\u66f4\u6709\u6536\u83b7\u3002\u4e0b\u9762\u7684\u5185\u5bb9\u5efa\u7acb\u5728\u719f\u6089\u4ee5\u4e0a\u77e5\u8bc6\u70b9\u7684\u57fa\u7840\u4e0a\uff0c\u4e0d\u518d\u5bf9\u4e00\u4e9b\u540d\u8bcd\u8fdb\u884c\u89e3\u91ca\u3002\n\n\u6982\u8ff0\u9898\u76ee\u5927\u610f\u3002\u9898\u76ee\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217\uff0c\u8981\u6c42\u6211\u4eec\u4f7f\u7528\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301**\u4fee\u6539\u3001\u67e5\u8be2**\u64cd\u4f5c\u3002\u4fee\u6539\u65f6\u5bf9\u6570\u5217\u8fdb\u884c**\u5355\u70b9\u4fee\u6539**\uff0c\u67e5\u8be2\u65f6\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6570\u503c $\\red X$ ,\u6c42\u8fd9\u4e2a\u6570\u5217\u4e2d\u6709\u51e0\u4e2a **\"\u5c9b\u5c7f\"** \u3002\u6b64\u5904 **\"\u5c9b\u5c7f\"** \u5b9a\u4e49\u4e3a\u4e00\u6bb5**\u8fde\u7eed\u5b50\u533a\u95f4**,\u4ee4\u8fd9\u4e2a**\u8fde\u7eed\u5b50\u533a\u95f4(\u95ed\u533a\u95f4)** \u7684\u6570\u503c\u96c6\u5408\u4e3a $S$ ,\u5de6\u7aef\u70b9\u4e3a $\\red L$ ,\u53f3\u7aef\u70b9\u4e3a $\\red R$ \uff1b\u8be5\u6570\u5217\u4e3a $Num$ , \u5de6\u7aef\u70b9\u4e3a $1$ ,\u53f3\u7aef\u70b9\u4e3a $n$ \u3002\u5219\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u533a\u95f4,\u90fd\u6709 : $\\forall$   $\\red Y$ $\\in$ $S$ , $\\red Y$ $\\ge$ $\\red X$ ,\u5e76\u4e14\u6ee1\u8db3 : $Num[\\red L-1]$ $<$ $\\red X$ \u6216 $\\red L-1 < 1$ , $Num[\\red R+1] < \\red X$ \u6216 $\\red R + 1 > n $\u3002\n\n\u901a\u4fd7\u6765\u8bb2\uff0c\u5c31\u662f\u6211\u4eec\u5e73\u5e38\u770b\u5230\u7684\u5c9b\u5c7f\u4e00\u6837\uff0c\u5c9b\u5c7f\u5728\u6c34\u9762\u4e0a\uff0c\u8981\u6c42\u6211\u4eec\u6c42\u51fa\u5c9b\u5c7f\u7684\u6570\u91cf\u3002\n\n#### \u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u95ee\u9898\u5212\u5206\u4e3a\u51e0\u4e2a\u5b50\u4efb\u52a1\uff1a\n\n-------------\n\n$A.$ \u4f7f\u5f97\u7a0b\u5e8f\u80fd\u5224\u65ad\u4ec0\u4e48\u662f **\"\u5c9b\u5c7f\"** , \u4e14\u4e0d\u4f1a\u91cd\u590d\u5224\u65ad\n\n$B.$ \u4f7f\u7528\u4e00\u79cd\u6570\u636e\u7ed3\u6784,\u652f\u6301\u67e5\u8be2 **\"\u5c9b\u5c7f\"** \u7684\u6570\u91cf\n\n$C.$ \u4f7f\u7528\u4e00\u79cd\u6570\u636e\u7ed3\u6784,\u80fd\u7ef4\u62a4 **\"\u5c9b\u5c7f\"** \u7684\u6570\u91cf\n\n----------\n\u6734\u7d20\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u4f7f\u7528\u6570\u636e\u7ed3\u6784\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u66b4\u529b\u626b\u63cf\u4e00\u904d\u6570\u5217 , \u82e5\u67d0\u4e2a\u4f4d\u7f6e\u7684\u6570\u503c\u5927\u4e8e\u5f53\u524d\u6c34\u4f4d\u7ebf\u7684\u6570\u503c , \u5e76\u4e14\u8be5\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\u503c\u5c0f\u4e8e\u5f53\u524d\u6c34\u4f4d\u7ebf\u7684\u6570\u503c , \u6211\u4eec\u4ee4**\u5c9b\u5c7f**\u7684\u6570\u91cf\u52a0\u4e00\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ea\u5728\u8fdb\u5165\u5c9b\u5c7f**\u5de6\u7aef\u70b9**\u65f6\u66f4\u65b0\u5c9b\u5c7f\u6570\u91cf\uff0c\u5728**\u5c9b\u5c7f\u4e2d\u95f4\u4e0e\u53f3\u7aef\u70b9**\u65f6\u4e0d\u66f4\u65b0\uff0c\u5c31\u80fd\u591f\u4e0d\u91cd\u590d\u8ba1\u7b97**\u5c9b\u5c7f**\u6570\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4fee\u6539\uff0c\u76f4\u63a5\u5728\u6570\u5217\u4e0a\u4fee\u6539\u5373\u53ef\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u5c31\u89e3\u51b3\u4e86 **\u5b50\u4efb\u52a1**$A$ \u3002\u4f46\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c\u4e3a $O(n^2)$  , \u5728\u672c\u9898\u4f1a\u8d85\u65f6\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u6765\u4f18\u5316\u3002\u663e\u7136\u7684,\u652f\u6301 **\u67e5\u8be2\u4e0e\u4fee\u6539** \u7684\u6570\u636e\u7ed3\u6784\u6709\u5f88\u591a\uff0c\u6211\u5728\u6b64\u5904\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u9996\u5148\uff0c\u5728\u5c1a\u65e0\u4fee\u6539\u64cd\u4f5c\u524d\uff0c\u6211\u4eec\u9700\u8981\u628a\u521d\u59cb\u5e8f\u5217\u7684\u4fe1\u606f\u63d2\u5165\u7ebf\u6bb5\u6811\u3002\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u63d2\u5165\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u6ca1\u6709\u4e00\u79cd\u64cd\u4f5c\u80fd\u76f4\u63a5\u652f\u6301\u67e5\u8be2 **\u201c\u5c9b\u5c7f\u201d** \u7684\u6570\u91cf\u3002\u4f46\u662f\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u7531\u4e0a\u9762\u6734\u7d20\u7b97\u6cd5\u7684\u601d\u8def\uff0c\u6709\uff1a\n\n##### **\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u4e3a\u5c9b\u5c7f\u5de6\u7aef\u70b9\u7684\u4f4d\u7f6e\uff0c\u5b83\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\u503c\u5fc5\u7136\u4e25\u683c\u5c0f\u4e8e\u5b83\u7684\u6570\u503c\uff0c\u5373\uff1a**\n$Num[\\red L] > Num[\\red L - 1] $\n\n\u5728\u8fd9\u91cc , \u6211\u4eec\u7ea6\u5b9a $Num[0] = 0 $ , $Num[n+1] = 0 $\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u5224\u65ad\u8d8a\u754c\u7684\u9ebb\u70e6\u3002\u7531\u4e8e\u6570\u636e\u8303\u56f4\u7684\u7ea6\u5b9a\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u6570\u5217\u7684\u5de6\u7aef\u70b9\u5fc5\u7136\u53ef\u80fd\u6210\u4e3a\u67d0\u4e2a\u5c9b\u5c7f\u7684\u5de6\u7aef\u70b9\uff0c\u6570\u5217\u7684\u53f3\u7aef\u70b9\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u4e0d\u5728\u6570\u5217\u4e2d\uff0c\u4e0d\u4f1a\u6210\u4e3a\u5de6\u7aef\u70b9\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u4ee4\u7ebf\u6bb5\u6811\u7684\u53f6\u8282\u70b9\u6240\u4ee3\u8868\u7684**\u533a\u95f4**\u4e3a $[\\red L , \\red L]$ , \u6570\u503c\u4e3a $Val$ \u3002\u5b83\u6307\u7684\u662f , \u5728\u6c34\u4f4d\u7ebf\u4e3a $\\red L$ \u65f6 , \u6570\u5217\u4e2d\u4f1a\u6709 $Val$ \u4e2a\u5c9b\u5c7f\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e**\u6240\u6709\u7684** $Num[\\red L] > Num[\\red L - 1] $ \uff0c\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a,\u5bf9 **\u533a\u95f4** $[Num[\\red L - 1] + 1 , Num[\\red L ]]$ \u8fdb\u884c**\u533a\u95f4\u52a0\u4e00**\u64cd\u4f5c\u3002\u5728\u6c34\u4f4d\u7ebf\u7684\u6570\u503c\u5728\u8fd9\u4e2a\u533a\u95f4\u65f6\uff0c$\\red L$ \u90fd\u4f1a\u6210\u4e3a\u67d0\u4e2a\u5c9b\u5c7f\u7684\u5de6\u7aef\u70b9\u3002\u800c\u82e5\u6c34\u4f4d\u7ebf\u7684\u9ad8\u5ea6\u4e3a $Num[\\red L-1]$ , \u5219\u5de6\u7aef\u70b9\u4f1a\u53d8\u6210 $\\red L-1$  , \u56e0\u6b64\uff0c\u6211\u4eec\u8fdb\u884c**\u533a\u95f4\u52a0**\u7684\u8303\u56f4\u662f\u4ece $[Num[\\red L - 1] + 1]$ \u5f00\u59cb\u7684\u3002\n\n\u5f53\u626b\u63cf\u5b8c\u6574\u4e2a\u6570\u5217\u5e76\u8fdb\u884c\u533a\u95f4\u52a0\u64cd\u4f5c\u540e\uff0c\u5bf9\u4e8e\u8f93\u5165\u7684\u6c34\u4f4d\u7ebf\uff0c\u53ea\u8981\u67e5\u627e\u8be5\u6c34\u4f4d\u7ebf\u7684\u6570\u503c\u6240\u5bf9\u5e94\u7684\u53f6\u5b50\u8282\u70b9\u7684 $ Val$ \uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u5c9b\u5c7f\u7684\u6570\u91cf\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u89e3\u51b3\u4e86 **\u5b50\u4efb\u52a1**$B$ \u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u652f\u6301\u4fee\u6539\u64cd\u4f5c\u5462\uff1f\n\n\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff0c\u5224\u65ad\u5f53\u524d\u4fee\u6539\u9020\u6210\u7684\u5f71\u54cd\u3002\u4f46\u662f\u8fd9\u6837\u7684\u64cd\u4f5c\u8fc7\u4e8e\u9ebb\u70e6\uff0c\u7c7b\u4f3c\u8003\u8651\u4e0d\u5168\u9762\u7684\u5931\u8bef\u5f88\u5bb9\u6613\u53d1\u751f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u672c\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u7b49\u4ef7\u4e8e\u5728\u8be5\u4f4d\u7f6e\u5148\u5220\u9664\u539f\u6765\u7684\u6570\u503c\uff0c\u518d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u503c\uff0c\u5373\uff1a\n\n##### **\u5148\u6d88\u9664\u8be5\u4f4d\u7f6e\u5bf9\u5c9b\u5c7f\u6570\u91cf\u7684\u8d21\u732e\uff0c\u518d\u6dfb\u52a0\u8be5\u4f4d\u7f6e\u65b0\u6570\u503c\u5bf9\u5c9b\u5c7f\u6570\u91cf\u7684\u8d21\u732e**\n\n\u4e3e\u4e2a\u4f8b\u5b50,\u6211\u4eec\u5df2\u7ecf\u6709\u4e00\u4e2a\u5e8f\u5217 $Num$ , \u6211\u4eec\u60f3\u5c06\u539f\u672c $Num[2] = 3$ , \u4fee\u6539\u4e3a $Num[2] = 5$ :\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/v5exyz7u.png?x-oss-process=image/resize,m_lfit,h_1800,w_1000)\n\n\u4e0a\u9762\u56fe\u7247\u4e2d\u7684\u64cd\u4f5c\u4fbf\u662f , \u5bf9\u4e8e $[Num[1]+1 , Num[2]]$ \u4e0e $[Num[2]+1,Num[3]]$ \u8fdb\u884c\u533a\u95f4\u51cf$1$\u64cd\u4f5c , \u56e0\u4e3a\u539f\u5148\u7684 $Num[2]$ \u5bf9\u8fd9\u4e24\u4e2a\u533a\u95f4\u90fd\u6709\u8d21\u732e\u3002\u6ce8\u610f : \u5f53\u8fdb\u884c\u533a\u95f4\u51cf\u64cd\u4f5c\u540e , \u6b64\u65f6\u7684\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\u5e76\u4e0d\u662f\u6570\u5217\u4e2d\u5c9b\u5c7f\u7684\u6570\u91cf\u3002\u56e0\u4e3a\u6211\u4eec**\u662f\u6d88\u9664\u4e86 $Num[2]$** \u7684\u8d21\u732e , \u800c\u4e0d\u662f\u4ee3\u8868\u6b64\u65f6 $Num[2]$ \u7684\u503c\u4e3a $0$ \u3002\u5f53\u6211\u4eec\u8fdb\u884c\u6dfb\u52a0 $Num[2]$ \u7684\u503c\u65f6 , \u5e94\u50cf\u4e4b\u524d\u4e00\u6837\u8003\u8651\u5b83\u7684\u8d21\u732e , \u56e0\u6b64\u6211\u4eec\u53ea\u5bf9 $[Num[1]+1,Num[2]]$ \u533a\u95f4\u8fdb\u884c\u533a\u95f4\u52a0$1$\u64cd\u4f5c\u3002\u81f3\u6b64\uff0c**\u5b50\u4efb\u52a1**$C$ \u5f97\u5230\u89e3\u51b3\u3002\n\n\u4f46\u6211\u4eec\u7684\u4efb\u52a1\u8fd8\u6ca1\u6709\u5b8c\u6210 , \u8003\u8651\u5230\u6c34\u4f4d\u9ad8\u5ea6\u7684\u8303\u56f4\u662f $ 1 \\le B_j \\le 10^9$ , \u6211\u4eec\u9700\u8981\u5bf9\u9ad8\u5ea6\u8fdb\u884c\u79bb\u6563\u5316\u3002\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u8bfb\u5165\u5b8c\u6570\u5217\u4fe1\u606f\u540e\uff0c\u5c31\u76f4\u63a5\u8fdb\u884c\u79bb\u6563\u5316\u3002\u56e0\u4e3a\u5728\u4e4b\u540e\u7684**\u67e5\u8be2\u4e0e\u4fee\u6539**\u64cd\u4f5c\u4e2d\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0e\u6570\u5217\u4e2d\u6570\u503c\u90fd\u4e0d\u76f8\u540c\u7684**\u67e5\u8be2\u4e0e\u4fee\u6539**\u64cd\u4f5c\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u8bfb\u5165\u6240\u6709\u64cd\u4f5c\u540e\uff0c\u8bb0\u5f55\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u6c34\u4f4d\u9ad8\u5ea6\u4e0e\u5ca9\u77f3\u9ad8\u5ea6\uff0c\u518d\u8fdb\u884c\u79bb\u6563\u5316\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u7b97\u6cd5\u662f\u79bb\u7ebf\u7684\u3002\n\n\u81f3\u6b64\uff0c\u95ee\u9898\u5f97\u5230\u89e3\u51b3\u3002\u5728\u5199\u4ee3\u7801\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u70b9\uff1a\n\n1. \u6211\u4eec\u4e0d\u7528\u8bb0\u5f55\u533a\u95f4\u548c\u3002\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u53f6\u5b50\u7ed3\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u4e0a\u4f20\uff0c\u4e14\u61d2\u6807\u8bb0\u5728\u4e0b\u4f20\u65f6\u64cd\u4f5c\u4f1a\u6709\u6240\u4e0d\u540c\u3002\n2. \u6211\u4f7f\u7528\u4e86\u5b8f\u5b9a\u4e49\u8fdb\u884c\u64cd\u4f5c\u3002\u82e5\u60a8\u4e0d\u719f\u6089\u5b8f\u5b9a\u4e49\uff0c\u53ef\u4ee5\u67e5\u8be2\u5b8f\u5b9a\u4e49\u7684\u7528\u6cd5\uff0c\u4ee5\u540e\u5199\u9898\u65f6\u53ef\u7ecf\u5e38\u4f7f\u7528\uff0c\u5341\u5206\u65b9\u4fbf\uff08\u4f46\u4e5f\u5f88\u5bb9\u6613\u51fa\u9505\uff09\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\uff1a\n\n````cpp\n#include<iostream>\n#include<memory.h>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\n#define N 201010\n#define mid ((l+r)>>1)\n#define L T[id].ls\n#define R T[id].rs\n//\u6b64\u5904\u4f7f\u7528\u5b8f\u5b9a\u4e49,\u4fbf\u4e8e\u64cd\u4f5c \n \nint n,m;\nint Num[N];//\u9ad8\u5ea6\u6570\u7ec4 \nstruct node1\n{\n\tint opt;\n\tint b,c,d;\n}Opt[N];//\u64cd\u4f5c\u6570\u7ec4 , b\u3001c\u3001d\u7684\u542b\u4e49\u4e0e\u9898\u76ee\u76f8\u540c \nint Map[N<<2],tot=0;//\u79bb\u6563\u5316\u6570\u7ec4 \nstruct node2\n{\n\tint ls,rs;\n\tint tag;\n\tint Val;\n}T[N<<3];//\u7ebf\u6bb5\u6811\u6570\u7ec4 \n//-----------------------------------------------\nint find(int x)\n{\n\treturn lower_bound(Map+1,Map+1+tot,x) - Map ;\n}\n//\u67e5\u8be2\u79bb\u6563\u5316\u540e\u7684\u6570\u503c \n//-----------------------------------------------\ninline void pushdown(int id)\n{\n\tif(!T[id].tag)\n\t\treturn ;\n\tT[L].tag+=T[id].tag;\n\tT[R].tag+=T[id].tag;\n\tT[L].Val+=T[id].tag;\n\tT[R].Val+=T[id].tag;\n\tT[id].tag=0;\n\treturn ;\n}\n//\u4e0b\u4f20\u6807\u8bb0 \nvoid build(int id,int l,int r)\n{\n\tif(l == r)\n\t\treturn ;\n\tL=id<<1;\n\tR=id<<1|1;\n\tbuild(L,l,mid);\n\tbuild(R,mid+1,r);\n\treturn ;\n}\n//\u5efa\u6811 \nvoid update(int id,int l,int r,int ql,int qr,int val)\n{\n\tif(ql <= l and qr >= r)\n\t{\n\t\tT[id].tag+=val;\n\t\tT[id].Val+=val;\n\t\treturn ;\n\t}\n\tpushdown(id);\n\tif(ql <= mid)\n\t\tupdate(L,l,mid,ql,qr,val);\n\tif(qr > mid)\n\t\tupdate(R,mid+1,r,ql,qr,val);\n\treturn ;\n}\n//\u66f4\u65b0\u7b54\u6848 \nint query(int id,int l,int r,int loc)\n{\n\tif(l == r)\n\t\treturn T[id].Val;\n\tpushdown(id);\n\tif(loc <= mid)\n\t\treturn query(L,l,mid,loc);\n\telse if(loc > mid)\n\t\treturn query(R,mid+1,r,loc);\n}\n//\u5355\u70b9\u67e5\u8be2 \n//-----------------------------------------------\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&Num[i]);\n\t\tMap[++tot]=Num[i];\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\t//\u6b64\u5904\u7684opt\u4e0d\u4f1a\u4e0e\u7ed3\u6784\u4f53\u91cc\u7684opt\u51b2\u7a81,\u5176\u5b83\u540c\u7406 \n\t\tint opt;\n\t\tint b,c,d;\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt == 1)\n\t\t{\n\t\t\tscanf(\"%d\",&b);\n\t\t\tOpt[i].opt=opt,Opt[i].b=b;\n\t\t\tMap[++tot]=b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&c,&d);\n\t\t\tOpt[i].opt=opt,Opt[i].c=c,Opt[i].d=d;\n\t\t\tMap[++tot]=d;\n\t\t}\n\t}\n\t//\u79bb\u7ebf\u5904\u7406 \n\tsort(Map+1,Map+1+tot);\n\ttot = unique(Map+1,Map+1+tot) - Map - 1;\n\t//\u6392\u5e8f\u53bb\u91cd\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tNum[i]=find(Num[i]);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(Opt[i].b)\n\t\t\tOpt[i].b=find(Opt[i].b);\n\t\tif(Opt[i].d)\n\t\t\tOpt[i].d=find(Opt[i].d);\n\t}\n\t//\u5c06\u6570\u636e\u5904\u7406\u4e3a\u79bb\u6563\u5316\u4e4b\u540e\u7684\u6570\u636e\n\tbuild(1,1,tot);\n\t//\u5efa\u6811 \n\tfor(int i=1;i<=n;i++)\n\t\tif(Num[i] > Num[i-1])\n\t\t\tupdate(1,1,tot,Num[i-1]+1,Num[i],1);\n\t//\u521d\u59cb\u7b54\u6848 \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint opt=Opt[i].opt,b=Opt[i].b,c=Opt[i].c,d=Opt[i].d;\n\t\tif(opt == 1)\n\t\t\tprintf(\"%d\\n\",query(1,1,tot,b));\n\t\telse if(opt == 2)\n\t\t{\n\t\t\tif(Num[c] > Num[c-1])\n\t\t\t\tupdate(1,1,tot,Num[c-1]+1,Num[c],-1);\n\t\t\tif(Num[c+1] > Num[c])\n\t\t\t\tupdate(1,1,tot,Num[c]+1,Num[c+1],-1);\n\t\t\t//\u6d88\u9664\u539f\u5148\u8d21\u732e \n\t\t\tNum[c]=d;\n\t\t\tif(Num[c] > Num[c-1])\n\t\t\t\tupdate(1,1,tot,Num[c-1]+1,Num[c],1);\n\t\t\tif(Num[c+1] > Num[c])\n\t\t\t\tupdate(1,1,tot,Num[c]+1,Num[c+1],1);\n\t\t\t//\u6dfb\u52a0\u5f53\u524d\u8d21\u732e \n\t\t}\n\t}\n\treturn 0;\n}\n\n````\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1573557366,
        "uid": 144810,
        "name": "zyc2003",
        "ccfLevel": 9,
        "title": "P3616 \u5bcc\u91d1\u68ee\u6797\u516c\u56ed \u9898\u89e3"
    },
    {
        "content": "\u5ba3\u4f20\u4e00\u53d1[blog](https://www.cnblogs.com/bztMinamoto/p/9369585.html)\n\n\u8bdd\u8bf4\u6a21\u62df\u8d5b\u7684\u65f6\u5019\u8fd9\u9898\u6253\u4e2a\u66b4\u529b\u9a97\u4e8650\u5206\n\n\u7136\u540e\u53bb\u7f51\u4e0a\u627e\u9898\u89e3\u7684\u65f6\u5019\u6123\u662f\u6ca1\u4e00\u4e2a\u80fd\u770b\u61c2\u7684\n\n\u6700\u540e\u627e\u4e86\u4efd\u4ee3\u7801\u77aa\u4e86\u4e09\u4e2a\u5c0f\u65f6\u624d\u660e\u767d\u662f\u600e\u4e48\u56de\u4e8b\n\n\u8fd8\u662f\u6765\u8be6\u7ec6\u7684\u8bb2\u8bb2\u597d\u4e86\n\n\u9996\u5148\uff0c\u8003\u8651\u66b4\u529b\uff0c\u626b\u4e00\u904d\u6570\u7ec4\uff0c\u5982\u679c$h[i-1]<H<=h[i]$,\u90a3\u4e48\u5c31++ans\n\n\u7136\u540e\u6211\u4eec\u5148\u6487\u5f00\u8be2\u95ee\u4e0d\u7ba1\uff0c\u6839\u636e\u4e0a\u8ff0\u5f0f\u5b50\u53ef\u4ee5\u5f97\u51fa\uff0c\u5982\u679c$h[i-1]<h[i]$\uff0c\u90a3\u4e48$(h[i-1],h[i]]$\u4e4b\u95f4\u7684\u7b54\u6848\u90fd\u4f1a\u52a0\u4e00\uff0c\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u533a\u95f4\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\n\n\u6700\u540e\uff0c\u8003\u8651\u8be2\u95ee\u548c\u4fee\u6539\u3002\u8be2\u95ee\u7684\u8bdd\uff0c\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u5355\u70b9\u67e5\u8be2\u3002\u81f3\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u4e2a\u70b9\u88ab\u4fee\u6539\u4e4b\u540e\uff0c\u548c$h[i-1]$\u4ee5\u53ca$h[i+1]$\u4e4b\u95f4\u7684\u5173\u7cfb\u53d1\u751f\u6539\u53d8\uff0c\u5f71\u54cd\u4e86\u7b54\u6848\uff0c\u6240\u4ee5\u6539\u4e4b\u524d\u628a\u4e4b\u524d\u7b54\u6848\u7684\u5f71\u54cd\u5220\u53bb\u5c31\u597d\n\nps\uff1a\u6700\u540e\u6709\u4e2a\u5c0f\u7ec6\u8282\uff0c\u6211\u4eec\u662f\u6309\u9ad8\u5ea6\u5efa\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u5fc5\u987b\u8fdb\u884c\u79bb\u6563\n\n```\n// luogu-judger-enable-o2\n//minamoto\n#include<bits/stdc++.h>\n#define N 400005\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<15,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<15],*p1=buf,*p2=buf;\ninline int read(){\n    #define num ch-'0'\n    char ch;bool flag=0;int res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nint sum[N<<2|1],tag[N<<2|1];\nstruct node{\n    int h,id;\n    bool operator <(const node &b)const\n    {return h<b.h;}\n}a[N<<1|1];\nint h[N<<1|1],x[N<<1|1],k[N<<1|1];\nint n,m,mx;\nvoid pushdown(int p){\n    if(!tag[p]) return;\n    int lson=p<<1,rson=p<<1|1;\n    sum[lson]+=tag[p],sum[rson]+=tag[p];\n    tag[lson]+=tag[p],tag[rson]+=tag[p];\n    tag[p]=0;\n}\nvoid change(int p,int l,int r,int ql,int qr,int x){\n    if(ql<=l&&qr>=r){\n        sum[p]+=x,tag[p]+=x;return;\n    }\n    pushdown(p);\n    int mid=(l+r)>>1;\n    if(ql<=mid) change(p<<1,l,mid,ql,qr,x);\n    if(qr>mid) change(p<<1|1,mid+1,r,ql,qr,x);\n}\nint query(int p,int l,int r,int x){\n    if(l==r) return sum[p];\n    pushdown(p);\n    int mid=(l+r)>>1;\n    if(x<=mid) return query(p<<1,l,mid,x);\n    else return query(p<<1|1,mid+1,r,x);\n}\nint main(){\n    //freopen(\"testdata.in\",\"r\",stdin);\n    n=read(),m=read();\n    for(int i=1;i<=n;++i)\n    a[i].h=read(),a[i].id=i;\n    for(int i=n+1;i<=n+m;++i){\n        k[i]=read();\n        if(k[i]==2) x[i]=read();\n        a[i].h=read();\n        a[i].id=i;\n    }\n    sort(a+1,a+1+n+m);h[a[1].id]=1;\n    for(int i=2;i<=n+m;++i)\n    h[a[i].id]=a[i].h>a[i-1].h?h[a[i-1].id]+1:h[a[i-1].id];\n    mx=h[a[n+m].id];\n    for(int i=1;i<=n;++i)\n    if(h[i-1]<h[i]) change(1,1,mx,h[i-1]+1,h[i],1);\n    for(int i=n+1;i<=n+m;++i){\n        if(k[i]==2){\n            int t=x[i];\n            if(h[t-1]<h[t])change(1,1,mx,h[t-1]+1,h[t],-1);\n            if(t!=n&&h[t]<h[t+1])change(1,1,mx,h[t]+1,h[t+1],-1);\n            h[t]=h[i];\n            if(h[t-1]<h[t])change(1,1,mx,h[t-1]+1,h[t],1);\n            if(t!=n&&h[t]<h[t+1])change(1,1,mx,h[t]+1,h[t+1],1);\n            \n        }\n        else printf(\"%d\\n\",query(1,1,mx,h[i]));\n    }\n    return 0;\n}\n```",
        "postTime": 1532558932,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u503c\u57df\u662f$10^9,$\u4f46\u662f\u6709\u7528\u7684\u503c\u53ea\u6709$O(n+m)$\u4e2a$,$\u6240\u4ee5\u53ef\u4ee5\u628a\u503c\u57df\u79bb\u6563\u5316\u5230$4 *10^5.$\n\n\u6211\u4eec\u4ee4\u9ad8\u5ea6\u6570\u7ec4\u4e3a$h[],$\u5373$h[i] = i$\u7684\u9ad8\u5ea6\u3002\n\n\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4$f[],$\u5176\u4e2d$f[i]$ \u8868\u793a **\u5f53\u6c34\u7684\u6d77\u62d4\u9ad8\u5ea6\u4e3a$i$\u65f6\u7684\u7b54\u6848\u3002**\n\n\u6211\u4eec\u628a $1 - n$ \u8fd9 $n$ \u5757\u5ca9\u77f3\u770b\u6210 $n$ \u4e2a\u70b9$,$\u628a\u76f8\u90bb\u4e24\u4e2a\u70b9$x,x-1$\u8fde\u8fb9$(x,x-1)$\u3002\n\n\u8be2\u95ee\u95ee\u7684\u662f\u6709\u591a\u5c11\u8054\u901a\u5757$,$\u7a0d\u52a0\u5206\u6790\u5373\u53ef\u5f97\u51fa: **\u8054\u901a\u5757\u4e2a\u6570 $=$ \u70b9\u6570 $-$ \u8fb9\u6570**\n\n\u90a3\u4e48$f[i]$\u5c31\u53ef\u4ee5\u8868\u793a\u6210 $:$ \n\n$($\u5f53\u6c34\u7684\u6d77\u62d4\u9ad8\u5ea6\u4e3a$i$\u65f6$,$**\u5b58\u5728\u7684**\u70b9\u6570$)$ $-$ $($\u5f53\u6c34\u7684\u6d77\u62d4\u9ad8\u5ea6\u4e3a$i$\u65f6$,$**\u5b58\u5728\u7684**\u8fb9\u6570$)$\n\n\u70b9$x$\u5b58\u5728\u7684\u6761\u4ef6\u4e3a$h_x>=i$\n\n\u8fb9$(x,x-1)$\u5b58\u5728\u7684\u6761\u4ef6\u662f $h_x>=i$ \u4e14 $h_{x-1}>=i$ \u4e5f\u5c31\u662f $min(h_x,h_{x-1}) >= i$\n\n\u6240\u4ee5$,$\u70b9$x$\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u5f71\u54cd\uff1a\u628a\u6240\u6709$1 <= i <= h_x$\u7684$f[i]++$\n\n\u8fb9$(x,x-1)$\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u5f71\u54cd\uff1a\u628a\u6240\u6709$1 <= i <= min(h_x,h_{x-1})$\u7684$f[i]--$\n\n\u4e5f\u5c31\u662f\u8bf4$,$\u70b9\u53ef\u4ee5\u770b\u6210\u5bf9$f[]$\u7684\u4e00\u4e2a\u524d\u7f00\u52a0\u64cd\u4f5c,\u8fb9\u53ef\u4ee5\u770b\u6210\u5bf9$f[]$\u7684\u4e00\u4e2a\u524d\u7f00\u51cf\u64cd\u4f5c\u3002\n\n\u6240\u4ee5$,$\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4$f[]$\u7684\u5dee\u5206\u6570\u7ec4  \u5373\u53ef\u5728$O(log(n+m))$\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u589e\u52a0$/$\u5220\u9664 \u70b9$/$\u8fb9\u7684\u64cd\u4f5c,\u5e76\u4e14\u53ef\u4ee5\u652f\u6301$O(log(n+m))$\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u4e00\u6b21\u5bf9$f[i]$\u7684\u5355\u70b9\u67e5\u8be2\u3002\n\n\u8003\u8651\u5b8c\u4e0a\u9762\u7684\u5185\u5bb9$,$\u4fee\u6539\u64cd\u4f5c\u5c31\u5f88\u7b80\u5355\u4e86$,$\u5bf9\u4e00\u4e2a\u70b9$u$\u8fdb\u884c\u4fee\u6539$,$\n\n\u6211\u4eec\u53ea\u9700\u8981\u5148\u64a4\u9500\u4fee\u6539\u4e4b\u524d\u70b9$u$,\u548c\u8fb9$(u,u+1),(u,u-1)$\u5bf9\u7b54\u6848\u7684\u5f71\u54cd$,$\n\n\u7136\u540e\u4fee\u6539$h_u$,\u518d\u91cd\u65b0\u52a0\u5165\u70b9$u$,\u548c\u8fb9$(u,u+1),(u,u-1)$\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6$O((n+m)log(n+m))$\n\n\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int x = 0; char c = getchar();\n    while (!isdigit(c)) c = getchar();\n    while (isdigit(c)) x = x * 10 + c - '0',c = getchar();\n    return x;\n}\ninline void write(int x){ if (x < 0) putchar('-'),x = -x; if (x > 9) write(x/10); putchar(x%10+'0'); }\nconst int N = 200005,M = 200005;\nstruct BIT{\n\tint n,d[N+M];\n\tinline void init(int nn){ n = nn; }\n\tinline void Add(int x){ if (!x) x = 1; while (x <= n) ++d[x],x+=x&-x; }\n\tinline void Dev(int x){ if (!x) x = 1; while (x <= n) --d[x],x+=x&-x; }\n\tinline void Ask(int x,int &r){ r=0; while (x) r+=d[x],x-=x&-x; }\n}T;\nint v[N+M],lv,n,m,ans,a[N],op[M],b[M],c[M],d[M],h[N];\ninline void Modify(int i,int vv){\n\tT.Add(h[i]); T.Dev(vv);\n\tif (i>1) T.Dev(min(h[i-1],h[i])),T.Add(min(h[i-1],vv));\n\tif (i<n) T.Dev(min(h[i+1],h[i])),T.Add(min(h[i+1],vv));\n\th[i] = vv;\n}\nint main(){\n\tint i;\n\tn = read(),m = read();\n\tfor (i = 1; i <= n; ++i) a[i] = read() + 1,v[++lv] = a[i];\n\tfor (i = 1; i <= m; ++i){ op[i] = read(); if (op[i] == 1) b[i] = read(),v[++lv] = b[i]; else c[i] = read(),d[i] = read() + 1,v[++lv] = d[i]; }\n\tsort(v+1,v+lv+1); lv = unique(v+1,v+lv+1)-v-1; T.init(lv);\n\tfor (i = 1; i <= n; ++i) a[i] = lower_bound(v+1,v+lv+1,a[i])-v;\n\tfor (i = 1; i <= m; ++i) if (op[i] == 1) b[i] = lower_bound(v+1,v+lv+1,b[i])-v; else d[i] =lower_bound(v+1,v+lv+1,d[i])-v;\n\tfor (i = 1; i <= n; ++i) Modify(i,a[i]);\n\tfor (i = 1; i <= m; ++i) if (op[i] == 1) T.Ask(b[i],ans),write(ans),putchar('\\n'); else Modify(c[i],d[i]);\n\treturn 0;\n}\n```",
        "postTime": 1569843265,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "\u600e\u4e48\u9898\u89e3\u533a\u91cc\u90fd\u662f\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8d21\u732e\u554a\uff08\n\n\u5355 $\\log$ \u505a\u6cd5\u592a\u9ad8\u5999\u4e86\u4e0d\u4f1a\u600e\u4e48\u529e\u554a\uff0c\u6765\u4e2a\u5206\u5757\uff08\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u7684 $x$\uff0c\u4ee4 $b_i = [a_i < x]$\uff0c\u90a3\u4e48\u8981\u7edf\u8ba1\u7684\u5c31\u662f $b$ \u4e2d\u6781\u957f\u8fde\u7eed\u7684 $0$ \u7684\u8fde\u7eed\u6bb5\u6570\u91cf\u3002\n\n\u5148\u6765\u60f3\u60f3\u5047\u5982\u6ca1\u6709\u4fee\u6539\u8be5\u600e\u4e48\u505a\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u53ef\u4ee5\u8003\u8651\u6309\u7167 $x$ \u6392\u5e8f\u3002\n\n\u4e00\u5f00\u59cb $b_i$ \u5168\u90fd\u662f $1$\uff0c\u6bcf\u6b21\u8be2\u95ee\u5c06\u65b0\u7684\u5c0f\u4e8e\u5f53\u524d $x$ \u7684\u6570\u8d4b\u6210 $0$\uff0c\u7136\u540e\u7ef4\u62a4\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u3002\n\n\u53d1\u73b0\u6bcf\u6b21\u7b54\u6848\u7684\u53d8\u5316\u91cf\u4e0d\u8d85\u8fc7 $1$\uff0c\u6240\u4ee5\u80fd\u591f $O(1)$ \u7ef4\u62a4\u3002\n\n\u79bb\u6563\u5316\u5e76\u6392\u5e8f\u540e\u53ef\u4ee5\u505a\u5230 $O(n + m)$ \u6c42\u51fa\u7b54\u6848\u3002\n\n\u8003\u8651\u5bf9\u64cd\u4f5c\u5e8f\u5217\u5206\u5757\uff0c\u5757\u957f\u4e3a $B$\uff0c\u6bcf $B$ \u6b21\u64cd\u4f5c\u4e00\u8d77\u5904\u7406\u3002\n\n\u8fd9\u4e9b\u64cd\u4f5c\u4e2d\uff0c\u4f1a\u6709 $O(B)$ \u6b21\u8be2\u95ee\u548c $O(B)$ \u6b21\u4fee\u6539\u3002\n\n\u8003\u8651\u5148\u5c06\u8be2\u95ee\u6309\u7167\u6ca1\u6709\u4fee\u6539\u7684\u65b9\u6cd5\u505a\uff0c\u5c06\u539f\u5e8f\u5217\u7684 $b_i$ \u4fee\u6539\u5b8c\u540e\uff0c\u518d\u5c06\u8fd9\u6b21\u8be2\u95ee\u524d\u7684\u4fee\u6539\u90fd\u505a\u4e00\u904d\uff0c\u5f97\u5230\u7b54\u6848\u540e\u64a4\u9500\u8fd9\u4e9b\u4fee\u6539\u64cd\u4f5c\u3002\n\n\u5206\u6790\u4e00\u4e0b\u8dd1\u4e00\u904d\u7684\u590d\u6742\u5ea6\uff1a\n\n\u91cd\u6784\u5e8f\u5217 $O(n)$\uff0c\u6392\u5e8f $O(B\\log{B})$\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684\u4fee\u6539 $O(B)$\uff0c\u4fee\u6539\u539f\u5e8f\u5217\u7684\u590d\u6742\u5ea6 $O(n+m)$\uff0c\u8dd1\u4e00\u904d\u7684\u603b\u590d\u6742\u5ea6\u5927\u6982\u662f $O(n+m+B^2)$\u3002\n\n\u4e00\u5171\u8981\u8dd1 $\\dfrac{m}{B}$ \u904d\uff0c\u6240\u4ee5\u6574\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u662f $O(\\dfrac{m(n+m)}{B}+mB)$\u3002\n\n\u7531\u4e8e\u5e38\u6570\u539f\u56e0\uff08\uff1f\uff09\uff0c[\u8fd9\u4efd\u4ee3\u7801](https://www.luogu.com.cn/paste/f1mdmur1)\u9700\u8981\u5f00 O2 \u5728 $B=m^{0.7}$ \u5de6\u53f3\u624d\u80fd\u901a\u8fc7\u3002",
        "postTime": 1649427635,
        "uid": 639649,
        "name": "KemononeRou",
        "ccfLevel": 0,
        "title": "P3616"
    },
    {
        "content": "\u5bf9\u4e8e\u6570\u636e\u7ed3\u6784\u9898\u76ee\u4e0d\u80fd\u7528\u6570\u636e\u7ed3\u6784\u60f3\u9898,\u5e94\u8be5\u7528\u9898\u60f3\u6570\u636e\u7ed3\u6784,\u867d\u7136\u8fd9\u9898\u5df2\u7ecf\u6709\u7ebf\u6bb5\u6811\u6807\u7b7e,\u4f46\u7531\u4e8e\u9898\u76ee\u7ea6\u675f\u5c11\u76f4\u63a5\u786c\u60f3\u7ebf\u6bb5\u6811\u4e5f\u5e94\u8be5\u53ef\u4ee5\u8f83\u5feb\u60f3\u51fa\u3002\n\n\n------------\n\n\u8bbe\u82e5\u6211\u4eec\u76f4\u63a5\u5bf9\u77f3\u5934\u7684\u6d77\u62d4\u76f4\u63a5\u8fdb\u884c\u7ef4\u62a4\u5e94\u8be5\u96be\u4ee5\u7edf\u8ba1\u7b54\u6848\uff0c\u65e2\u7136\u6211\u4eec\u88ab\u8be2\u95ee\u7684\u662f\u5404\u4e2a\u6d77\u62d4\u60c5\u51b5\u60c5\u51b5\u4e0b\u7684\u7b54\u6848,\u8003\u8651\u5c31\u76f4\u63a5\u5bf9\u8fd9\u4e2a\u8fdb\u884c\u7ef4\u62a4,\u7ec6\u8282\u6bd4\u8f83\u591a,\u8981\u4ed4\u7ec6\u8003\u8651\u6bcf\u5757\u77f3\u5934\u5728\u9012\u589e\u9012\u51cf\u60c5\u51b5\u4e0b\u4ea7\u751f\u9ad8\u5ea6\u53d8\u5316\u5bf9\u7b54\u6848\u7684\u5f71\u54cd,\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4.\n\n\n------------\n\n\u4e0b\u9762\u662f\u4ee3\u7801,\u7531\u4e8e\u662f\u65e9\u671f\u5199\u7684\u4ee3\u7801,\u4eca\u5929\u7a81\u7136\u6765\u5199\u4e2a\u9898\u89e3,\u5f88\u591a\u7279\u6b8a\u5904\u7406\u90fd\u5199\u5f97\u53c8\u957f\u53c8\u4e11\uff1b\n```\n#include<bits/stdc++.h>\n#define left l,mid,tr[pos].ls\n#define righ mid+1,r,tr[pos].rs\n#define use 1,1000000000,root\nusing namespace std;\nstruct qq{int ls,rs,key;}tr[200000*25];int n,m,a[200100],cnt,flag=1,ans,x; \ninline int maxx(int pos,int ans){if(pos<=ans)return ans;else return pos;}\ninline int minn(int pos,int ans){if(pos<=ans)return pos;else return ans;}\nvoid sak_tr(int l,int r,int &pos,int ql,int qr){\n\tif(!pos)pos=++cnt;if(l==ql&&r==qr){tr[pos].key+=flag;return;}int mid=l+r>>1;\n\tif(mid>=qr)sak_tr(left,ql,qr);else if(mid<ql)sak_tr(righ,ql,qr);\n\telse sak_tr(left,ql,mid),sak_tr(righ,mid+1,qr);\n}\nvoid sak_qu(int l,int r,int pos){\n\tans+=tr[pos].key;if(!pos||l==r)return;\n\tint mid=l+r>>1;\n\tif(mid>=x)sak_qu(left);else sak_qu(righ);\n}\nint main(){//\u9884\u5904\u7406\u521d\u59cb\u60c5\u51b5\u4e0b\u7684\u7b54\u6848 \n\tcin>>n>>m;int las=0,num,ma,root=0,mi,c; \n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",a+i);\n\t\tif(a[i]>las)sak_tr(use,las+1,a[i]);\n\t\tlas=a[i];\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&c,&x);\n\t\tif(c==1)ans=0,sak_qu(use),printf(\"%d\\n\",ans);\n\t\telse{\n\t\t\tscanf(\"%d\",&num);if(num==a[x]){a[x]=num;continue;}\n\t\t\tma=maxx(a[x+1],a[x-1]),mi=minn(a[x+1],a[x-1]); \n\t\t\tif(num<=ma&&num>=mi&&a[x]<=ma&&a[x]>=mi){a[x]=num;continue;}//\u76f8\u7b49\u60c5\u51b5 \n\t\t\tif(a[x]>ma){\n\t\t\t\tif(num<a[x]){flag=-1;\n\t\t\t\t\tif(num>ma)sak_tr(use,num+1,a[x]);\n\t\t\t\t\telse sak_tr(use,ma+1,a[x]);\n\t\t\t\t\tif(num<mi)flag=1,sak_tr(use,num+1,mi);\n\t\t\t\t}\n\t\t\t\telse flag=1,sak_tr(use,a[x]+1,num);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(num>a[x]){flag=-1;\n\t\t\t\t\tif(num>=mi&&a[x]<mi)sak_tr(use,a[x]+1,mi);\n\t\t\t\t\telse if(num<=mi&&a[x]<mi)sak_tr(use,a[x]+1,num);\n\t\t\t\t\tif(num>ma)flag=1,sak_tr(use,ma+1,num);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(a[x]<=mi)flag=1,sak_tr(use,num+1,a[x]);\n\t\t\t\t\telse flag=1,sak_tr(use,num+1,mi);\n\t\t\t\t}\n\t\t\t}a[x]=num;\n\t\t}\n\t}\n} \n```\n",
        "postTime": 1543106251,
        "uid": 59907,
        "name": "Sakura_\u68a6\u7476",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u5148\u60f3\u7b2c\u4e00\u79cd\u505a\u6cd5\uff0c\u8fd9\u79cd\u505a\u6cd5\u5728\u9ad8\u5ea6\u5404\u4e0d\u76f8\u540c\u65f6\u975e\u5e38\u597d\u5199\uff0c\u6211\u4eec\u627e\u5230\u5c71\u5cf0\uff08\u5927\u4e8e\u76f8\u90bb\u4e24\u8fb9\u7684\u9ad8\u5ea6\uff09\uff0c\u627e\u5230\u5c71\u8c37\uff08\u5c0f\u4e8e\u76f8\u90bb\u4e24\u8fb9\u7684\u9ad8\u5ea6\uff09\uff0c\u6211\u4eec\u628a\u8fde\u7eed\u7684\u4e00\u6bb5\u9732\u5728\u6c34\u9762\u5916\u7684\u53eb\u505a\u5c71\u597d\u4e86\u3002\n\n\u90a3\u4e48\u5bb9\u6613\u53d1\u73b0\uff0c\u5f53\u4e00\u4e2a\u5c71\u8c37\u88ab\u6df9\u6ca1\uff0c\u610f\u5473\u7740\u6709\u4e00\u5ea7\u5c71\u88ab\u9694\u5f00\u6210\u4e86\u4e24\u5ea7\u5c71\u4e86\uff0c\u90a3\u4e48\u5c71\u7684\u6570\u91cf$+1$\uff0c\u5f53\u4e00\u4e2a\u5c71\u5cf0\u88ab\u6df9\u6ca1\uff0c\u5219\u4ee3\u8868\u4e00\u4e2a\u5c71\u7684\u6574\u5ea7\u5c71\u90fd\u88ab\u6df9\u4e86\uff0c\u7b54\u6848$-1$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u6211\u4eec\u73b0\u5728\u6c34\u4f4d\uff0c\u7edf\u8ba1\u4e00\u4e0b\u5c71\u5cf0\u5c71\u8c37\u6570\u91cf\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n\u4f46\u662f\uff01\u8fd9\u9898\u91cc\u9762\u6709\u9ad8\u539f\u548c\u4f4e\u8c37\uff08\u56e0\u4e3a\u672c\u9898\u4e2d\u9ad8\u5ea6\u6709\u53ef\u80fd\u76f8\u540c\uff09\uff01\u5f53\u4e00\u957f\u4e32\u76f8\u540c\u9ad8\u5ea6\u7684\u77f3\u5934\u51fa\u73b0\u65f6\uff0c\u6211\u4eec\u8be5\u600e\u4e48\u5904\u7406\u5462\uff1f\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u6362\u79cd\u601d\u7ef4\u4e86\uff0c\u5c71\u5cf0\u548c\u76f8\u90bb\u5c71\u8c37\u95f4\u662f\u5355\u8c03\u7684\uff0c\u5982\u679c\u76f8\u90bb\u7684\u5c71\u8c37\u88ab\u6df9\u6ca1\uff0c\u90a3\u4e48\u6c34\u4e00\u5b9a\u4e0e\u5c71\u5cf0\u5230\u88ab\u6df9\u6ca1\u7684\u76f8\u90bb\u5c71\u8c37\u8fd9\u6bb5\u5355\u8c03\u7684\u5c71\u5761\u4e0a\u6709\u4e00\u4e2a\u4ea4\u70b9\uff0c\u5e76\u4e14\u6574\u5ea7\u5c71\u5982\u679c\u4e24\u8fb9\u73af\u6c34\u7684\u8bdd\u90a3\u5c31\u5b58\u5728\u4e24\u4e2a\u4ea4\u70b9\uff0c\u5047\u5982\u6211\u4eec\u8bbe\u6700\u5de6\u548c\u6700\u53f3\u7684\u9ad8\u5ea6\u4e3a\u6700\u5c0f\uff0c\u90a3\u4e48\u6bcf\u5ea7\u5c71\u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u4ea4\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6362\u79cd\u601d\u8def\uff0c\u6211\u4eec\u6765\u628a\u53ef\u80fd\u51fa\u73b0\u4ea4\u70b9\u7684\u9ad8\u5ea6\u5730\u65b9\u8bb0\u4e0b\u6765\uff0c\u90a3\u4e48\u6211\u4eec\u8be2\u95ee\u6c34\u4f4d\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u53ef\u4ee5\u6c42\u51fa\u8fd9\u4e2a\u9ad8\u5ea6\u4e0b\u7684\u4ea4\u70b9\u6570\uff0c\u4ea4\u70b9\u6570$/2$\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u600e\u4e48\u6c42\u76f8\u5e94\u9ad8\u5ea6\u7684\u4ea4\u70b9\u6570\u5462\uff1f\u6211\u4eec\u77e5\u9053\u4e00\u6bb5\u5355\u8c03\u533a\u95f4\u91cc\u9762\u6bcf\u4e00\u4e2a\u9ad8\u5ea6\u4e0a\u7684\u4ea4\u70b9\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u627e\u5230\u6700\u5c0f\u7684\u5355\u8c03\u533a\u95f4\u2014\u2014\u4e5f\u5c31\u662f\u4e24\u4e2a\u70b9$[i,i+1]$\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7ed9\u67d0\u4e2a\u70b9\u7684\u9ad8\u5ea6\u52a0\u4e0a\u4e00\u4e2a\u4ea4\u70b9\u4e24\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u8003\u8651\u9ad8\u5ea6\u533a\u95f4$[h[i]+1,h[i+1]]$\uff0c\u73b0\u5728\u8fd9\u4e2a\u5355\u8c03\u533a\u95f4\u91cc\u9762\u6240\u6709\u7684\u9ad8\u5ea6\u90fd\u53ef\u4ee5\u4e0e\u6c34\u6709\u4e2a\u4ea4\u70b9\uff0c\u90a3\u4e48\u76f4\u63a5\u4e0a\u6811\u72b6\u6570\u7ec4\u5904\u7406\u524d\u7f00\u548c\u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u66f4\u65b0\u53ea\u9700\u8981\u91cd\u65b0\u5904\u7406\u76f8\u90bb\u4e24\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u800c\u67e5\u8be2\u65f6\u53ef\u4ee5\u76f4\u63a5\u4ece\u6811\u72b6\u6570\u7ec4\u4e2d\u67e5\u51fa\u4ea4\u70b9\u6570\uff0c\u4ea4\u70b9\u6570\u9664\u4ee5$2$\u5c31\u662f\u7b54\u6848\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN=200005;\n\nstruct ha\n{\n    int val,id,c;\n}u[2*MAXN];\nint num,cnt;\nbool cmp(const ha &aa,const ha &bb)\n{\n    return aa.val<bb.val;\n}\n\nint n,m;\nint a[MAXN];\nint k[MAXN];\nint h[MAXN];\nint d[MAXN];\n\nvoid unq()\n{\n    cnt=1;\n    sort(u+1,u+1+num,cmp);\n    for(int i=1;i<=num;i++)\n    {\n        if(u[i].val!=u[i-1].val)\n            cnt++;\n        if(u[i].c==1)h[u[i].id]=cnt;\n        else a[u[i].id]=cnt;\n    }\n}\n\nvoid pu(int V,int ID,int C)\n{\n    num++;\n    u[num].val=V;\n    u[num].id=ID;\n    u[num].c=C;\n}\n\nvoid init()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        pu(a[i],i,2);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d\",&k[i]);\n        if(k[i]==2)\n            scanf(\"%d\",&d[i]);\n        scanf(\"%d\",&h[i]);\n        pu(h[i],i,1);\n    }\n    unq();\n}\n\nint sum[4*MAXN];\n\nvoid update(int x,int v)\n{\n    while(x<=cnt)\n    {\n        sum[x]+=v;\n        x+=(x&(-x));\n    }\n}\n\nint get(int x)\n{\n    int an=0;\n    while(x>0)\n    {\n        an+=sum[x];\n        x-=(x&(-x));\n    }\n    return an;\n}\n\nint isa(int i,int v)\n{\n    int minn=min(a[i],a[i+1]);\n    int maxn=a[i]+a[i+1]-minn;\n    update(minn+1,v);\n    update(maxn+1,-v);\n}\n\nint main()\n{\n    init();\n    a[0]=1;\n    a[n+1]=1;\n    for(int i=0;i<=n;i++)\n    {\n        isa(i,1);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        if(k[i]==1)\n        {\n            cout<<get(h[i])/2<<endl;\n        }\n        else\n        {\n            isa(d[i],-1);\n            isa(d[i]-1,-1);\n            a[d[i]]=h[i];\n            isa(d[i]-1,1);\n            isa(d[i],1);\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1566131332,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "\u5173\u4e8e\u8fd9\u9053\u9898\u7684\u6b63\u89e3\uff0c\u697c\u4e0akkk\u5927\u4f6c\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u56e0\u6b64\u672c\u9898\u89e3\u4f1a\u7740\u91cd\u5f3a\u8c03\u4e00\u4e9b\u4ee3\u7801\u7684\u7ec6\u8282\u95ee\u9898\u3002\n\n\u6b64\u9898\u89e3\u57fa\u4e8e\u7ebf\u6bb5\u6811\u89e3\u6cd5\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7684\u5927\u4f6c\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b\u4e86\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\u7684\u9884\u5904\u7406\uff0c\u6240\u6709\u9898\u89e3\u53ea\u53d9\u8ff0\u4e86 $[2,n-1]$\uff0c\u5373\u4e24\u4fa7\u6709\u77f3\u67f1\u7684\u60c5\u51b5\u3002\u90a3\u4e48\u5bf9\u4e8e $1,n$ \u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u77f3\u67f1\u5e94\u8be5\u600e\u6837\u5904\u7406\u5462\uff1f\n\n\u663e\u7136\u5e94\u8be5\u628a $1,n$ \u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u77f3\u67f1\u4e0e\u5176\u4ed6\u4f4d\u7f6e\u7684\u77f3\u67f1\u7edf\u4e00\uff0c\u4e5f\u5c31\u662f\u5728 $0,n+1$ \u4e24\u4e2a\u4f4d\u7f6e\u865a\u6784\u4e24\u6839\u77f3\u67f1\u3002\u5e94\u8be5\u660e\u786e\u7684\u662f\uff0c**\u8fd9\u4e24\u6839\u865a\u6784\u51fa\u6765\u7684\u77f3\u67f1\u9ad8\u5ea6\u5e94\u4e3a0\u3002**\u539f\u56e0\u663e\u800c\u6613\u89c1\uff1a\n### \u4f4d\u4e8e $0,n+1$ \u7684\u4e24\u6839\u77f3\u67f1\u662f\u4e0d\u53ef\u80fd\u5bf9\u7b54\u6848\u6709\u4efb\u4f55\u8d21\u732e\u7684\u3002\n\u4e3a\u4e86\u786e\u4fdd\u5b83\u4eec\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u8d21\u732e\uff0c\u6211\u4eec\u5fc5\u987b\u8ba9\u5b83\u4eec\u7684\u9ad8\u5ea6\u4f4e\u4e8e\u6240\u6709\u77f3\u67f1\u7684\u9ad8\u5ea6\uff0c\u4e5f\u5c31\u662f $0$\u3002(\u5f53\u7136\u4f60\u60f3\u5199 $-1$ \u6216 $-INF$ \u4e5f\u53ef\u4ee5)\n\n\u660e\u786e\u4e86\u8fd9\u4e00\u6761\u540e\uff0c\u4f60\u53d1\u73b0\u8fd8\u662f\u6ca1\u6cd5 $AC$ \u8fd9\u9053\u9898\u3002\u56e0\u4e3a\u4f60\u8fd8\u6f0f\u4e86\u4e00\u6761\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff1a\n### \u4efb\u4f55\u4e00\u6839\u77f3\u67f1(\u9664\u4e86\u865a\u6784\u7684\u4e24\u6839)\u90fd\u81f3\u5c11\u5bf9\u7b54\u6848\u6709 $1$ \u7684\u8d21\u732e\u3002\n\u56e0\u6b64\u6211\u4eec\u5fc5\u987b**\u7ed9\u6574\u4e2a\u533a\u95f4\u90fd\u5148\u52a0\u4e0a1**\uff0c\u518d\u8fdb\u884c\u9884\u5904\u7406\u3002\n\n\u732e\u4e0a\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```\n#include<algorithm>//STL\u901a\u7528\u7b97\u6cd5\n#include<bitset>//STL\u4f4d\u96c6\u5bb9\u5668\n#include<cctype>\n#include<cmath>\n#include<complex>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<ctime>\n#include<deque>//STL\u53cc\u7aef\u961f\u5217\u5bb9\u5668\n#include<list>//STL\u7ebf\u6027\u5217\u8868\u5bb9\u5668\n#include<map>//STL\u6620\u5c04\u5bb9\u5668\n#include<iostream>\n#include<queue>//STL\u961f\u5217\u5bb9\u5668\n#include<set>//STL\u96c6\u5408\u5bb9\u5668\n#include<stack>//STL\u5806\u6808\u5bb9\u5668\n#include<utility>//STL\u901a\u7528\u6a21\u677f\u7c7b\n#include<vector>//STL\u52a8\u6001\u6570\u7ec4\u5bb9\u5668\n#define INF 0x3f3f3f3f\n#define ll long long\n#define ls (now<<1)\n#define rs (now<<1|1)\n#define mid ((l+r)>>1)\nusing namespace std;\nint n,m,lst=INF,tot,hei[200010],res[400010];\nint tree[400010<<2],lzy[400010<<2];\nstruct uio{\n\tint pos,hei;\n}qry[200010];\nvoid pushdown(int now)\n{\n\tif(!lzy[now]) return;\n\ttree[ls]+=lzy[now],tree[rs]+=lzy[now];\n\tlzy[ls]+=lzy[now],lzy[rs]+=lzy[now];\n\tlzy[now]=0;\n}\nvoid rev(int now,int l,int r,int L,int R,int k)\n{\n\tif(L>R) return;\n\tif(L<=l&&r<=R) {tree[now]+=k,lzy[now]+=k;return;}\n\tif(L<=mid) rev(ls,l,mid,L,R,k);\n\tif(R>mid) rev(rs,mid+1,r,L,R,k);\n\ttree[now]=tree[ls]+tree[rs];\n}\nint query(int now,int l,int r,int pos)\n{\n\tif(l==r) return tree[now];\n\tpushdown(now);\n\tif(pos<=mid) return query(ls,l,mid,pos);\n\telse return query(rs,mid+1,r,pos);\n\ttree[now]=tree[ls]+tree[rs];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tres[++tot]=0;tree[1]=lzy[1]=1;//\u8fd9\u4e00\u884c\u5373\u4e3a\u9898\u89e3\u6240\u8bf4\u7684\u4e24\u70b9\u7ec6\u8282 \n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&hei[i]),res[++tot]=hei[i];\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;scanf(\"%d\",&u);\n\t\tif(u==1) {scanf(\"%d\",&v),qry[i]=(uio){0,v},res[++tot]=v;}\n\t\telse {scanf(\"%d%d\",&v,&w),qry[i]=(uio){v,w},res[++tot]=w;}\n\t}\n\tsort(res+1,res+1+tot);tot=unique(res+1,res+1+tot)-res-1;\n\tfor(int i=0;i<=n+1;i++) hei[i]=lower_bound(res+1,res+1+tot,hei[i])-res;\n\tfor(int i=1;i<=m;i++) qry[i].hei=lower_bound(res+1,res+1+tot,qry[i].hei)-res;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(hei[i-1]<=hei[i]&&hei[i]>hei[i+1]) rev(1,1,tot,hei[i]+1,tot,-1);\n\t\tif(hei[i-1]>hei[i]&&hei[i]<=hei[i+1]) rev(1,1,tot,hei[i]+1,tot,1);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=qry[i].pos;\n\t\tif(!x) {printf(\"%d\\n\",query(1,1,tot,qry[i].hei));continue;}\n\t\tint mn=min(hei[x-1],hei[x+1]),mx=max(hei[x-1],hei[x+1]);\n\t\tif(qry[i].hei<hei[x])\n\t\t{\n\t\t\tif(hei[x]>mx) rev(1,1,tot,max(mx,qry[i].hei)+1,hei[x],-1);\n\t\t\tif(qry[i].hei<mn) rev(1,1,tot,qry[i].hei+1,min(mn,hei[x]),1);\n\t\t}\n\t\tif(qry[i].hei>hei[x])\n\t\t{\n\t\t\tif(hei[x]<mn) rev(1,1,tot,hei[x]+1,min(mn,qry[i].hei),-1);\n\t\t\tif(qry[i].hei>mx) rev(1,1,tot,max(mx,hei[x])+1,qry[i].hei,1);\n\t\t}\n\t\thei[x]=qry[i].hei;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1541390168,
        "uid": 52186,
        "name": "radish\u5e03\u56e3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u4e5f\u662f\u6811\u72b6\u6570\u7ec4 + \u79bb\u6563\u5316 +\u79bb\u7ebf\n\n\u628a\u539f\u6765\u7684\u6d77\u62d4\u548c\u64cd\u4f5c\u540e\u7684\u6d77\u62d4\u90fd\u8bfb\u8fdb\u6765\uff0c\u79bb\u6563\u5316\u540e\u5c06\u8fd9\u4e2a\u503c\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u6743\u503c\n\n\u7136\u540e\u5728\u521d\u59cb\u7684\u6d77\u62d4\u627e\u51fa\u5c71\u5cf0\u548c\u4f4e\u8c37\uff08\u5373$A_i > A_{i-1} && A_i > A_{i+1} $\u6216$A_i < A_{i-1} && A_i < A_{i+1} $\uff09\n\n\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6d77\u62d4\u4ee5\u4e0a\u7684\u8fde\u7eed\u7684 = \u5c71\u5cf0\u7684\u6570\u91cf - \u4f4e\u8c37\u7684\u6570\u91cf\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7edf\u8ba1\u4e86\n\n\u5bf9\u4e00\u4e2a\u70b9\u4fee\u6539\u7684\u65f6\u5019\u8981\u6ce8\u610f\u8fd9\u4e2a\u70b9\u548c\u5b83\u4e24\u4fa7\u7684\u70b9\uff0c\u770b\u4ed6\u4eec\u662f\u5426\u4f1a\u53d8\u6210\u5c71\u5cf0\u6216\u4f4e\u8c37\n\n\u8ddf\u697c\u4e0b\u7684\u5b54\u7237\u4ea4\u6d41\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u8c8c\u4f3c\u662f\u5bf9\u7684\uff08\u8fd8\u6709\u6d77\u62d4\u76f8\u540c\u7684\u9700\u8981\u5904\u7406\u4e00\u4e0b\uff09\n\n~~\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6ca1\u4ee3\u7801\uff0c\u56e0\u4e3a\u6211\u592a\u5f31\u4e86\uff0c\u53ea\u6709\u601d\u8def\u5b8c\u5168\u8c03\u4e0d\u51fa\u6765\uff0c\u5e0c\u671bdalao\u4eec\u5e2e\u6211\u8865\u4e0a~~\n",
        "postTime": 1506259535,
        "uid": 23172,
        "name": "Lin1043",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3616 \u3010\u5bcc\u91d1\u68ee\u6797\u516c\u56ed\u3011"
    }
]