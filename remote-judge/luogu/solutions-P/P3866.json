[
    {
        "content": "# Solution For P3866  \n$\\large\\mathcal{By\\text{ }ShadderLeave}$  \n\n\u611f\u89c9\u53e6\u5916\u4e24\u7bc7\u9898\u89e3\u53ea\u8bb2\u4e86\u5b9e\u73b0\u65b9\u6cd5QwQ  \n~~\u90a3\u6211\u6765\u53e3\u80e1\u4e00\u4e0b\u601d\u7ef4\u5386\u7a0b~~  \nUpd On 2020-5-4\uff1a\u9898\u89e3\u754c\u9762\u6539\u4e86\u4ee3\u7801\u7f29\u8fdb\u53c8\u9b3c\u755c\u4e86\n\n[$\\mathsf{Link\\text{ }To\\text{ }Problem}$](https://www.luogu.com.cn/problem/P3866)  \n[$\\color{red}\\mathsf{A\\text{ }Better\\text{ }Reading\\text{ }Experience}$](https://www.luogu.com.cn/blog/ShadderLeave/solution-p3866)  \n\n## \u9898\u76ee\u5206\u6790  \n\u8fd9\u9053\u5927\u610f\u662f\u8ba9\u6211\u4eec\u628a\u654c\u519b\u5c01\u5728\u4e00\u4e2a\u533a\u57df\u5185\u4e0d\u80fd\u9003\u5230\u8fb9\u754c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u60f3\u8ba9\u6211\u4eec\u5207\u65ad\u4ece\u654c\u519b\u5f53\u524d\u4f4d\u7f6e\u5230\u8fb9\u754c\u7684\u9053\u8def\uff0c\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u4f7f\u7528\u6700\u5c0f\u7684\u82b1\u8d39\u3002  \n\u753b\u4e2a\u56fe\u5927\u6982yy\u4e00\u4e0b\u5c31\u662f\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/hznsufll.png)  \n\u4e2d\u95f4\u53ef\u80fd\u8f83\u590d\u6742\u7684\u90e8\u5206\u5148\u4e0d\u60f3\uff0c\u6211\u4eec\u5c31\u662f\u60f3\u628a $S$ \u548c $T$ \u4e4b\u95f4\u4f7f\u7528\u6700\u5c0f\u7684\u4ee3\u4ef7\u780d\u65ad\u4f7f\u4e8c\u8005\u4e0d\u53ef\u8fbe\uff08\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\u662f\u56e0\u4e3a**\u53ef\u80fd\u6709\u591a\u652f\u654c\u519b**\uff0c\u540c\u65f6\u8fb9\u754c\u7684\u70b9\u4e5f\u4e0d\u6b62\u4e00\u4e2a\uff09\u3002  \n\u8fd9\u5c31\u5f88\u81ea\u7136\u5730\u60f3\u5230\u4e86\u7f51\u7edc\u6d41\u7684\u6700\u5c0f\u5272\u3002  \n\n\u4e2d\u95f4\u90e8\u5206\u600e\u4e48\u529e\u5462\uff1f  \n\n\u4e2d\u95f4\u7684\u90e8\u5206\u8981\u8868\u793a\u539f\u56fe\u7684\u8054\u901a\u60c5\u51b5\uff0c\u540c\u65f6\u8981\u80fd\u591f\u8868\u73b0\u5207\u65ad\u67d0\u4e9b\u70b9\u7684\u4ee3\u4ef7\uff0c\u5982\u679c\u76f4\u63a5\u7528\u6734\u7d20\u7684\u65b9\u6cd5\uff1a\u5047\u5982\u4e24\u70b9 $u$\u3001$v$ \u76f8\u90bb\uff0c\u5c31\u5efa\u7acb\u8fb9 $(u,v)$ ,\u6743\u503c\u4e3a\u70b9 $v$ \u7684\u70b9\u6743\u7684\u4e00\u6761\u8fb9\uff0c\u662f\u4f1a\u6709bug\u7684\uff08\u6bd4\u5982\u4e00\u4e2a\u70b9\u70b8\u4e24\u6b21\uff09\u3002  \n\n\u90a3\u4e48\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u62c6\u70b9\u6cd5\u3002  \n\n\u5c06\u4e00\u4e2a\u70b9 $u$ \u62c6\u6210\u4e00\u4e2a\u5165\u70b9 $u_1$ \u4ee5\u53ca\u4e00\u4e2a\u51fa\u70b9 $u_2$,\u5e76\u4e14\u5728 $u_1$\u3001$u_2$ \u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u6743\u503c\u4e3a\u70b9 $u$ \u7684\u70b9\u6743\uff0c\u8fd9\u6837\u7834\u574f\u6389\u70b9 $u$ \u5c31\u76f8\u5f53\u4e8e\u5207\u65ad $u_1$ \u548c $u_2$ \u4e4b\u95f4\u8fde\u7684\u4e00\u6761\u8fb9\uff0c\u5207\u65ad\u540e\u6240\u6709\u60f3\u901a\u8fc7 $u$ \u70b9\u7684\u8def\u5f84\u4f1a\u88ab\u963b\u65ad\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/i309dta4.png)  \n\u6240\u4ee5\u8fd9\u65f6\u5019\u6a21\u578b\u57fa\u672c\u6d6e\u51fa\u6c34\u9762\uff1a  \n1. \u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u5e76\u4e14\u548c\u6240\u6709\u7684\u654c\u519b\u70b9\u7684\u5165\u70b9\u8fde\u63a5  \n2. \u5c06\u6240\u6709\u7684\u8fb9\u754c\u70b9\u7684\u51fa\u70b9\u8fde\u63a5\u5230\u8d85\u7ea7\u6c47\u70b9  \n3. \u5bf9\u4e8e\u4e2d\u95f4\u7684\u70b9\uff0c\u6bcf\u4e2a\u70b9\u7684\u51fa\u70b9\u8fde\u63a5\u5230\u76f8\u90bb\u70b9\u7684\u5165\u70b9  \n\n\u63a5\u4e0b\u6765\u662f\u8fb9\u6743\u7684\u95ee\u9898  \n\n\u5df2\u7ecf\u8bf4\u8fc7\u6bcf\u4e2a\u70b9\u7684\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u8fb9\u6743\u662f\u8be5\u70b9\u7684\u70b9\u6743\uff0c\u5047\u5982\u8be5\u70b9\u662f\u654c\u4eba \u5219\u4e0d\u7528\u8fde\u8fb9\uff08\u56e0\u4e3a\u8fde\u8fb9\u8868\u793a\u53ef\u4ee5\u70b8\u6389\u8fd9\u4e00\u70b9\uff0c\u4e0d\u5408\u9898\u610f\uff09\uff0c\u5047\u5982\u8be5\u70b9\u5df2\u7ecf\u662f\u969c\u788d\uff0c\u90a3\u4e48\u66f4\u4e0d\u7528\u8fde\u8fb9\uff0c\u800c\u4e14\u5728\u76f8\u90bb\u70b9\u8fde\u8fb9\u7684\u65f6\u5019\u4e5f\u8981\u6ee4\u6389\u8fd9\u4e2a\u60c5\u51b5\uff08\u672c\u6765\u5c31\u4e0d\u662f\u8054\u901a\u7684\u591a\u8fde\u8fb9\u6d6a\u8d39\u65f6\u7a7a\uff09\u3002  \n\n\u5bf9\u4e8e\u76f8\u90bb\u70b9\u95f4\u7684\u8fb9\uff0c\u662f\u4e0d\u53ef\u4ee5\u65ad\u6389\u7684\uff0c\u56e0\u4e3a\u65ad\u6389\u8fd9\u6761\u8fb9\u6ca1\u6709\u5b9e\u9645\u7684\u610f\u4e49\uff0c\u5b83\u53ea\u662f\u7528\u6765\u8868\u793a\u8fde\u901a\u6027\u7684\uff0c\u65ad\u6389\u5c31\u4f1a\u7834\u574f\u539f\u56fe\u7684\u4fe1\u606f\uff0c\u9632\u6b62\u5b83\u88ab\u65ad\u6389\u5c31\u5c06\u5176\u8fb9\u6743\u7f6e\u4e3a $inf$\u3002\uff08\u6700\u5c0f\u5272\u9009\u4e2d\u6b63\u65e0\u7a77\u7684\u8fb9\u5c31\u4e0d\u4f1a\u662f\u6700\u5c0f\u5272\u4e86\uff09  \n\n\u5bf9\u4e8e\u8d85\u7ea7\u6e90\u6c47\u70b9\u548c\u5177\u4f53\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0c\u540c\u6837\u4e0d\u53ef\u4ee5\u65ad\u6389\uff0c\u7f6e\u4e3a $inf$\u3002  \n\n\u7531\u6700\u5c0f\u5272\u6700\u5927\u6d41\u5b9a\u7406\uff0c\u6700\u5c0f\u5272\u5728\u6570\u503c\u4e0a\u7b49\u4e8e\u6700\u5927\u6d41\uff0c\u76f4\u63a5\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u8bf4\u5b8c\u5566\u3002\u8981\u662f\u8fd8\u6709\u95ee\u9898\u5c31\u53bb\u4ee3\u7801\u91cc\u9762\u627e\u6211\u5427qwq  \n\n$\\large\\mathsf{Code}:$  \n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nqueue <int> q;\nconst int maxn=1807;//\u60f3\u60f3\u81ea\u5df1\u6570\u7ec4\u5f00\u6ca1\u5f00\u5c0f\nconst int maxm=40007;\nconst int inf=0x7f7f7f7f;\nint N,M,S,T,all;\nstruct E{\n    int u,v,cf;\n}e[maxm];\nint first[maxn],nt[maxm],ES=1;//\u8fb9\u7684\u7f16\u53f7\u521d\u59cb\u5316\u5426\u5219\u53cd\u8fb9\u4e0d\u53ef\u8868\u793a\u4e3a i^1\n#define cf(i) e[i].cf\ninline void addE(int u,int v,int cf)\n{\n    e[++ES]=(E){u,v,cf};\n    nt[ES]=first[u];\n    first[u]=ES;\n    return ;\n}\ninline void add(int u,int v,int cf)//\u7f51\u7edc\u7624\u4e13\u7528\u52a0\u8fb9\n{\n    addE(u,v,cf);addE(v,u,0);\n    return ;\n}\ninline int R()\n{\n    char c;\n    int re,f=1;\n    while((c=getchar())>'9'||c<'0')\n    if(c=='-') f=-1;\n    re=c-48;\n    while((c=getchar())>='0'&&c<='9')\n    re=re*10+c-48;\n    return re*f;\n}\nint cnt[maxn],cur[maxn];\ninline bool BFS()//Dinic\u7b97\u6cd5\n{\n    int u,v;\n    memset(cnt,0,sizeof(cnt));\n    cnt[S]=1;q.push(S);\n    while(!q.empty())\n    {\n        u=q.front();q.pop();\n        for(register int i=first[u];i;i=nt[i])\n        {\n            v=e[i].v;\n            if(!cnt[v]&&cf(i)>0)\n            {\n                cnt[v]=cnt[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return cnt[T]!=0;\n}\ninline int min_(const int &x,const int &y) {return x<y?x:y;} \ninline int dfs(int u,int f)//Dinic\u7b97\u6cd5\n{\n    if(u==T) return f;\n    int v,d,sum=0;\n    for(register int &i=cur[u];i;i=nt[i])\n    {\n        v=e[i].v;\n        if(cnt[v]==cnt[u]+1&&cf(i)>0)\n        {\n            d=dfs(v,min_(f,cf(i)));\n            if(d>0)\n            {\n                sum+=d;f-=d;\n                cf(i)-=d;cf(i^1)+=d;\n                if(f<=0) return sum;\n            }\n        }\n    }\n    return sum;\n}\nint m[37][37];\ninline int num(int i,int j)//\u7531\u5750\u6807\u6362\u7b97\u6210\u7684\u70b9\u7f16\u53f7\n{\n    return (i-1)*M+j;//\u8981\u51cf\u4e00\uff0c\u5207\u8bb0\uff01\uff01\u5207\u8bb0\uff01\uff01\n}\nint main()\n{\n\tN=R();M=R();all=N*M;//\u603b\u70b9\u6570\n\tT=2*all+1;\n    for(register int i=1;i<=N;i++)\n        for(register int j=1;j<=M;j++)\n            m[i][j]=R();\n    for(register int i=1;i<=N;i++)\n        for(register int j=1;j<=M;j++)\n        {\n\t\t\tif(m[i][j]==-1) continue;//\u672c\u6765\u5c31\u662f\u969c\u788d\u5565\u4e5f\u4e0d\u7528\u505a\n\t\t\telse if(m[i][j]==0)//\u7279\u5224\u654c\u519b\n\t\t\t\tadd(num(i,j),num(i,j)+all,inf),add(S,num(i,j),inf);\n\t\t\telse add(num(i,j),num(i,j)+all,m[i][j]);\n\t\t\t//\u76f8\u90bb\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\n\t\t\tif(i>1&&m[i-1][j]!=-1) add(num(i,j)+all,num(i-1,j),inf);\n\t\t\tif(j>1&&m[i][j-1]!=-1) add(num(i,j)+all,num(i,j-1),inf);\n\t\t\tif(i<N&&m[i+1][j]!=-1) add(num(i,j)+all,num(i+1,j),inf);\n\t\t\tif(j<M&&m[i][j+1]!=-1) add(num(i,j)+all,num(i,j+1),inf);\n\t\t\t//\u7279\u5224\u8fb9\u754c\n\t\t\tif(i==1||j==1||i==N||j==M) add(num(i,j)+all,T,inf);\n        }\n    int ans=0;\n    while(BFS())//Dinic\u6c42 \u6700\u5927\u6d41/\u6700\u5c0f\u5272\n    {\n        memcpy(cur,first,sizeof(first));//\u5f53\u524d\u5f27\u4f18\u5316\n        ans+=dfs(S,inf);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u5982\u679c\u8fd9\u7bc7\u9898\u89e3\u5bf9\u60a8\u6709\u5e2e\u52a9\uff0c\u8bf7\u70b9\u4e2a\u8d5eQwQ  \n\u5982\u679c\u8fd8\u6709\u95ee\u9898\u53ef\u4ee5\u8bc4\u8bba\u6216\u8005\u76f4\u63a5\u79c1\u4fe1\u7a9d\u3002  \n\u87f9\u87f9\u7ba1\u7406\u5927\u5927\u5ba1\u6838^_^   \n\n$\\LARGE\\mathcal{The\\text{ }End}$",
        "postTime": 1588084106,
        "uid": 215697,
        "name": "LeavingZ",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3866 \u3010[TJOI2009]\u6218\u4e89\u6e38\u620f\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053\u7f51\u7edc\u6d41\u7684\u5efa\u56fe\u9898  \n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3866)  \n\n## \u9898\u76ee\u5206\u6790  \n\n- \u6709\u4e00\u7fa4\u654c\u4eba\u201c0\u201d\uff0c\u60f3\u8981\u8d70\u51fa\u5730\u56fe\u3002\n\n- \u6709\u4e00\u4e9b\u969c\u788d\u201c-1\u201d\uff0c\u5728\u5730\u56fe\u4e0a\u3002\n\n- \u4f60\u53ef\u4ee5\u901a\u8fc7\u7528\u70b8\u836f\u628a\u4e00\u4e9b\u5730\u53d8\u4e3a\u969c\u788d\uff0c\u4e0d\u8fc7\u6bcf\u4e00\u5757\u5730\u53d8\u6210\u969c\u788d\u6240\u9700\u7684\u70b8\u836f\u4e0d\u540c\uff0c\u5177\u4f53\u662f\u8fd9\u5757\u5730\u7684\u6570\u5b57\uff0c\u5982\u201c2\u201d\u3002\n\n- \u4f60\u73b0\u5728\u8981\u77e5\u9053\u963b\u6b62\u654c\u4eba\u8d70\u51fa\u5730\u56fe\u6240\u7528\u7684\u6700\u5c11\u70b8\u836f\u662f\u591a\u5c11\u3002\n\n- \u5bf9100%\u7684\u6570\u636e\uff0c$1 \\le M,N \\le 30$  \n\n## \u601d\u8def  \n\n\u6211\u4eec\u8981\u5272\u65ad\u654c\u4eba\u7684\u8def\uff0c\u65ad\u4e86\u7684\u8def\u4e0d\u80fd\u8d70\uff0c\u53c8\u8981\u4f7f\u6240\u7528\u7684\u70b8\u836f\u6700\u5c11\uff0c\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f  \n\u5bf9\uff01 \u6700\u5c0f\u5272\uff01  \n\u53c8\u56e0\u4e3a\u6700\u5927\u6d41=\u6700\u5c0f\u5272\u3002  \n\u6240\u4ee5 \u5efa\u56fe+\u62c6\u70b9+\u6700\u5927\u6d41 \u5c31\u662f\u6b63\u89e3\u3002  \n\n## \u4ebf\u70b9\u95ee\u9898  \n\n\u4e07\u6076\u7684\u5efa\u56fe\u603b\u662f\u6211\u4eec\u6210\u529f\u8def\u4e0a\u7684\u7eca\u811a\u77f3\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5efa\u56fe\u5462\uff1f  \n\u5730\u56fe\u4e0a\u552f\u4e00\u5728\u5728\u52a8\u7684\u662f\u654c\u4eba\uff0c\u800c\u6211\u4eec\u8981\u963b\u6b62\u4ed6\u5230\u8fb9\u754c\u3002\u6bcf\u4e00\u4e2a\u5757\u5730\u6709\u4e00\u4e2a\u503c\uff0c\u4ee3\u8868\u6211\u4eec\u90a3\u81f3\u5c11\u8981\u7528\u591a\u5c11\u70b8\u836f\u628a\u5b83\u53d8\u6210\u969c\u788d\uff08\u8981\u82b1\u8d39\u591a\u5c11\u628a\u6d41\u5272\u65ad\uff09\u3002   \n\u90a3\u4e48\u56fe\u7684\u57fa\u672c\u6846\u67b6\u5c31\u51fa\u6765\u4e86\uff1a  \n\n1. \u628a\u6240\u6709\u7684\u70b9\u62c6\u6210\u4e24\u4e2a\uff0c\u4e2d\u95f4\u8fde\u8d77\u6765\u7684\u6d41\u91cf\u4e3a\u8fd9\u4e2a\u70b9\u7684\u6570\u503c\u3002\n\n1. \u6784\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff0c\u628a\u6240\u6709\u7684\u654c\u4eba\u7684\u5165\u70b9\u8fde\u8d77\u6765\u3002 \n\n1. \u628a\u6240\u6709\u7684\u70b9\u7684\u51fa\u70b9\u8fde\u4e0a\u65c1\u8fb9\u70b9\u7684\u5165\u70b9\u3002\n\n1. \u5efa\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u628a\u6240\u6709\u7684\u8fb9\u754c\u70b9\u7684\u51fa\u70b9\u8fde\u8d77\u6765\u3002\n\n\nPS.\u4e0d\u8fc7\u654c\u4eba\u548c\u969c\u788d\u90fd\u53ef\u4ee5\u4e0d\u8fde\u8fb9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u80fd\u70b8\u6389\u3002\n\n## \u4ee3\u7801  \nCode:   \n\n~~~cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define ll long long\nusing namespace std;\n\nconst int N = 100010, M = 2000010, INF = 1e8;\n\nll n, m, S, T;\nll head[N], ver[M], edge[M], next_[M], tot;\nll q[N], d[N], cur[N];\nll map[35][35];\n\nll min_(int x, int y) {\n\tif (x < y) return x;\n\treturn y;\n}\n\n//\u7f51\u7edc\u6d41\u8fde\u8fb9 \nvoid add(int x, int y, int z) {\n\tver[tot] = y, edge[tot] = z, next_[tot] = head[x], head[x] = tot ++;\n\tver[tot] = x, edge[tot] = 0, next_[tot] = head[y], head[y] = tot ++;\n}\n\n//\u7f51\u7edc\u6d41Dinic\nbool bfs() {\t\t\t\t\t\t\t\t\t\t\t\t\n\tint hh = 0, tt = 0;\n\tmemset(d, -1, sizeof d);\n\tq[0] = S, d[S] = 0, cur[S] = head[S];\n\twhile (hh <= tt) {\n\t\tint t = q[hh++];\n\t\tfor (int i = head[t]; ~i; i = next_[i]) {\n\t\t\tint ver_ = ver[i];\n\t\t\tif (d[ver_] == -1 && edge[i]) {\n\t\t\t\td[ver_] = d[t] + 1;\n\t\t\t\tcur[ver_] = head[ver_];\t\t\t\t\t\t\n\t\t\t\tif (ver_ == T) return true;\n\t\t\t\tq[++ tt] = ver_;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;   \n}\n\nint find(ll u, ll limit) {\t\t\t\t\t\t\t\t\t\n\tif (u == T) return limit;\n   \tll flow = 0;\n\tfor (int i = cur[u]; ~i && flow < limit; i = next_[i]) {\n\t\tcur[u] = i;\n\t\tint ver_ = ver[i];\n\t\tif (d[ver_] == d[u] + 1 && edge[i]) {\n\t\t\tint t = find(ver_, min_(edge[i], limit - flow));\n\t\t\tif (!t) d[ver_] = -1;\n\t\t\tedge[i] -= t, edge[i ^ 1] += t, flow += t;\n\t\t}\n\t}\n\treturn flow;\n}\n\nll dinic() {\t\t\t\t\t\t\t\t\t\t\t\t \n\tlong long r = 0, flow;\n\twhile (bfs()) while (flow = find(S, INF)) r += flow;\n\treturn r;\n} \n\n\nint main() {\n\tcin >> n >> m;\n\tmemset(head, -1, sizeof head);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u521d\u59cb\u5316\u8868\u5934 \n\tfor(int i = 1; i <= n; i ++){\n\t\tfor(int j = 1; j <= m; j ++){\n\t\t\tcin >> map[i][j];\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i ++){\n\t\tfor(int j = 1; j <= m; j ++){\n\t\t\tif(map[i][j] == -1) continue;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u969c\u788d \n\t\t\telse if(map[i][j] == 0) add((i - 1) * m + j ,(i - 1) * m + j + n * m, INF), add(0, (i - 1) * m + j, INF);\t\t//\u654c\u4eba \n\t\t\telse add((i - 1) * m + j, (i - 1) * m + n * m + j, map[i][j]);\t\t\t\t\t\t\t\t\t\t\t\t\t//\u81ea\u5df1\u7684\u5165\u70b9\u8fde\u51fa\u70b9 \n\t\t\tif(i > 1 && map[i - 1][j] != -1) add((i - 1) * m + n * m + j, (i - 1 - 1) * m + j,INF);\t\t\t\t\t\t\t//\u5185\u90e8\u70b9\u8fde\u56db\u5468 \n\t\t\tif(j > 1 && map[i][j - 1] != -1) add((i - 1) * m + n * m + j, (i - 1) * m + j - 1,INF);\n\t\t\tif(i < n && map[i + 1][j] != -1) add((i - 1) * m + n * m + j, (i) * m + j,INF);\n\t\t\tif(j < m && map[i][j + 1] != -1) add((i - 1) * m + n * m + j, (i - 1) * m + j + 1,INF);\n\t\t\tif(i == 1 || j == 1 || i == n || j == m) add((i - 1) * m + n * m + j, 2 * n * m + 1, INF);\t\t\t\t\t\t//\u8fb9\u754c \n\t\t}\n\t}\n\tS = 0;\n\tT = 2 * n * m + 1;\n\tcout << dinic();\n\treturn 0;\n}\n~~~\n\n## \u540e\u8bb0  \n\n\u4e00\u4e9b\u5176\u4ed6\u5173\u4e8e\u7f51\u7edc\u6d41\u7684\u9898\uff1a  \n[\u72fc\u548c\u7f8a\u7684\u6545\u4e8b](https://www.luogu.com.cn/problem/P2598)  \n[\u65b9\u683c\u53d6\u6570\u95ee\u9898](https://www.luogu.com.cn/problem/P2774)  \n[\u5bb6\u56ed / \u661f\u9645\u8f6c\u79fb\u95ee\u9898](https://www.luogu.com.cn/problem/P2754)\n",
        "postTime": 1618488835,
        "uid": 211276,
        "name": "\u95f2\u4eba",
        "ccfLevel": 0,
        "title": "\u95f2\u4eba\u306e\u9898\u89e3P3866"
    },
    {
        "content": "[P3866 [TJOI2009]\u6218\u4e89\u6e38\u620f](https://www.luogu.com.cn/problem/P3866)\n\n\u9898\u610f\uff1a\u4e0d\u8981\u8ba9\u654c\u4eba\u9003\u51fa\u53bb\u3002\n\n\u6807\u7b7e\uff1a\u6700\u5c0f\u5272\u3002\n\n\u77e5\u9053\u662f\u6700\u5c0f\u5272\uff0c\u4f60\u5c31\u5f88\u5feb\u80fd\u53cd\u5e94\u8fc7\u6765\uff0c\u8ba9\u5730\u56fe\u548c\u5916\u754c\u4e0d\u8fde\u901a\uff0c\u76f8\u5f53\u4e8e\u5c06\u5730\u56fe\u4e0e\u5916\u754c\u7684\u8054\u7cfb\u5207\u65ad\uff0c\u5916\u754c\u5c31\u81ea\u7136\u6210\u4e3a\u4e86\u6c47\u70b9\u3002\u4e0a\u6700\u5c0f\u5272\u3002\n\n\u8bb2\u4e00\u4e0b\u8fde\u8fb9\u3002\n\n1\u3001\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u969c\u788d\u7269\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002\n\n2\u3001\u8003\u8651\u62c6\u70b9\u3002\u5c06\u6bcf\u4e00\u4e2a\u4e0d\u662f\u969c\u788d\u7684\u70b9\u62c6\u4e3a\u4e24\u4e2a\u70b9\uff0c\u5165\u70b9\u8fde\u5411\u51fa\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u654c\u4eba\uff0c\u8fb9\u6743\u4e3a $ \\infty $\u3002\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u7a7a\u5730\uff0c\u8fb9\u6743\u4e3a\u5f53\u524d\u70b9\u70b9\u6743\u3002\n\n3\u3001\u6240\u6709\u70b9\u5411\u5468\u56f4\u7684\u70b9\u8fde\u8fb9\u3002\u5468\u56f4\u70b9\u662f\u969c\u788d\u5c31\u4e0d\u8fde\uff0c\u662f\u654c\u4eba\u548c\u7a7a\u5730\u90fd\u8981\u8fde\u3002\u8fb9\u6743\u4e3a $ \\infty $\u3002\u6ce8\u610f\u662f**\u8d77\u70b9\u7684\u51fa\u70b9\u8fde\u5411\u7ec8\u70b9\u7684\u5165\u70b9**\uff0c\u4e5f\u662f\u4e2a\u8001\u5957\u8def\u4e86\u3002\n\n4\u3001\u8003\u8651\u6e90\u70b9\u6c47\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u3002\u6e90\u70b9\u5411\u6240\u6709\u654c\u519b\u7684\u5165\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $ \\infty $  \u7684\u8fb9\u3002\u6bcf\u4e2a\u8fb9\u754c\u4e0a\u7684\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $ \\infty $ \u7684\u8fb9\u3002\n\n\u63a5\u7740\u5229\u7528\u6700\u5c0f\u5272\u6700\u5927\u5218\u5b9a\u7406\u6c42\u51fa\u6700\u5c0f\u5272\u3002\n\nCode\n```cpp\n# include <iostream>\n# include <queue>\n# include <cstring>\n# include <cstdio>\nusing namespace std;\n\nconst int N = 1e6 + 5;\nconst int M = 2e6 + 5;\nconst int inf = 1e9;\n\ntypedef struct {\n\tint x , y , z , next;\n} Node;\nNode edge[M];\nint E = 1 , elast[N];\nvoid add(int x , int y , int z) {\n\tE ++;\n\tedge[E].x = x;\n\tedge[E].y = y;\n\tedge[E].z = z;\n\tedge[E].next = elast[x];\n\telast[x] = E;\n}\nint S , T;\nint dis[N] , cnt[N];\nvoid bfs(int start) {\n\tqueue<int> q;\n\tq.push(start);\n\tdis[start] = 0;\n\tcnt[S] = 1;\n\twhile (!q.empty()) {\n\t\tint cur = q.front();\n\t\tq.pop();\n\t\tfor (int i = elast[cur] ; i ; i = edge[i].next) {\n\t\t\tint v = edge[i].y;\n\t\t\tif (dis[v] != -1) continue;\n\t\t\tdis[v] = dis[cur] + 1;\n\t\t\tq.push(v);\n\t\t\tcnt[dis[v]] ++;\n\t\t}\n\t}\n}\nint cur[N];\nint dfs(int u , int flow) {\n\tif (u == T) return flow;\n\tint delta = 0;\n\tfor (int i = cur[u] ; i ; i = edge[i].next) {\n\t\tcur[u] = i;\n\t\tint v = edge[i].y;\n\t\tif (edge[i].z > 0 && dis[u] == dis[v] + 1) {\n\t\t\tint temp = dfs(v , min(flow - delta , edge[i].z));\n\t\t\tedge[i].z -= temp;\n\t\t\tedge[i ^ 1].z += temp;\n\t\t\tdelta += temp;\n\t\t\tif (delta == flow) return delta;\n\t\t}\n\t}\n\tif (dis[S] >= T + 1) return delta;\n\tcur[u] = elast[u];\n\tif (-- cnt[dis[u]] == 0) dis[S] = T + 1;\n\tcnt[++ dis[u]] ++;\n\treturn delta;\n}\nint Isap() {\n\tint ans = 0;\n\tmemset(cnt , 0 , sizeof cnt);\n\tmemset(dis , -1 , sizeof dis);\n\tbfs(T);\n\tfor (int i = 0 ; i <= T ; i ++) {\n\t\tcur[i] = elast[i];\n\t}\n\twhile (dis[S] < T + 1) ans += dfs(S , inf);\n\treturn ans;\n}\nint st[50][50];\nint dx[4] = {1 , 0 , -1 , 0};\nint dy[4] = {0 , 1 , 0 , -1};\nint n , m;\nint id(int x , int y) {\n\treturn (x - 1) * n + y;\n}\nint main() {\n\tcin >> m >> n;\n\tS = 0 , T = (n * m) << 1 | 1;\n\tfor (int i = 1 ; i <= m ; i ++) {\n\t\tfor (int j = 1 ; j <= n ; j ++) cin >> st[i][j];\n\t}\n\tfor (int i = 1 ; i <= m ; i ++) {\n\t\tfor (int j = 1 ; j <= n ; j ++) {\n\t\t\tif (st[i][j] == -1) continue;\n\t\t\tif (st[i][j] == 0) add(S , id(i , j) , inf) , add(id(i , j) , S , 0) , add(id(i , j) , id(i , j) + n * m , inf) , add(id(i , j) + n * m , id(i , j) , 0);\n\t\t\telse add(id(i , j) , id(i , j) + n * m , st[i][j]) , add(id(i , j) + n * m , id(i , j) , 0);\n\t\t\tfor (int k = 0 ; k < 4 ; k ++) {\n\t\t\t\tint tx = i + dx[k] , ty = j + dy[k];\n\t\t\t\tif (tx < 1 || ty < 1 || tx > m || ty > n) continue;\n\t\t\t\telse if (st[tx][ty] == -1) continue;\n\t\t\t\telse add(id(i , j) + n * m , id(tx , ty) , inf) , add(id(tx , ty) , id(i , j) + n * m , 0);\n\t\t\t}\n\t\t\tif (i == 1 || j == 1 || i == m || j == n) add(id(i , j) + n * m , T , inf) , add(T , id(i , j) + n * m , 0);\n\t\t}\n\t}\n\tprintf(\"%d\\n\" , Isap());\n\treturn 0;\n}\n\n```",
        "postTime": 1629188206,
        "uid": 335477,
        "name": "ker_xyxyxyx_xxs",
        "ccfLevel": 0,
        "title": "P3866 [TJOI2009]\u6218\u4e89\u6e38\u620f"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u662f\u4e00\u4e2a\u5f88\u88f8\u7684\u6700\u5c0f\u5272\u3002\n\n\n\u628a\u6bcf\u4e00\u4e2a\u70b9\u90fd\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u82e5\u8be5\u70b9\u4e0d\u662f\u8def\u969c\uff0c\u5219\u4e2d\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u82e5\u8be5\u70b9\u70b9\u6743\u4e3a\u6b63\uff0c\u5219\u6d41\u91cf\u7b49\u4e8e\u70b9\u6743\uff0c\u82e5\u70b9\u6743\u4e3a0\uff0c\u5219\u6d41\u91cf\u7b49\u4e8eINF\u3002\u5bf9\u4e8e\u6240\u6709\u76f8\u90bb\u7684\u70b9\u5bf9\uff0c\u5efa\u8fb9\uff0c\u6743\u503c\u4e3aINF\uff08\u82e5\u4e24\u70b9\u4e2d\u6709\u4e00\u70b9\u662f\u8def\u969c\uff0c\u5219\u4e0d\u5efa\u8fb9\uff09\u3002\n\n\n\u8bbe\u4e00\u4e2a\u6e90\u70b9source\uff0c\u4e00\u4e2a\u6c47\u70b9sink\u3002\u5728\u6e90\u70b9\u4e0e\u6240\u6709\u654c\u519b\u4e4b\u95f4\u5efa\u6743\u503c\u4e3aINF\u7684\u8fb9\uff0c\u5728\u8fb9\u754c\u4e0a\u6240\u6709\u70b9\u4e0e\u6c47\u70b9\u4e4b\u95f4\u5efa\u6743\u503c\u4e3aINF\u7684\u8fb9\u3002\n\n\n\u7136\u540e\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u6839\u636e\u6700\u5c0f\u5272\u7b49\u4e8e\u6700\u5927\u6d41\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u6700\u5c0f\u5272\u4e86\u3002\n\n\nCode:\n```cpp\n    #include<cstdio>\n    #include<cctype>\n    #include<cstring>\n    #include<utility>\n    #include<algorithm>\n    #include<vector>\n    #include<queue>\n    #include<cmath>\n    #include<set>\n    int n,m;\n    int source,sink;\n    int mat[35][35];\n    int to[200010],cap[200010],flow[200010],nxt[200010],fst[20010],cnt;\n    int level[20010],q[20010],head,tail;\n    const int INF=0x3fffffff;\n    int trans1[35][35],trans2[35][35];\n    inline int transform1(int x,int y){\n        return m*(x-1)+y;\n    }\n    inline int transform2(int x,int y){\n        return m*(x+n-1)+y;\n    }\n    inline void buildedge(int u,int v,int f){\n        to[cnt]=v,cap[cnt]=f;\n        nxt[cnt]=fst[u];\n        fst[u]=cnt++;\n        to[cnt]=u;\n        nxt[cnt]=fst[v];\n        fst[v]=cnt++;\n    }\n    inline int min(int a,int b){\n        return a<b?a:b;\n    }\n    inline bool bfs(){\n        int u,k;\n        memset(level,0,sizeof(level));\n        head=0,tail=1;\n        q[head]=source;\n        level[source]=1;\n        while(head!=tail){\n            u=q[head++];\n            for(k=fst[u];k!=-1;k=nxt[k]){\n                if(!level[to[k]]&&cap[k]>flow[k]){\n                    level[to[k]]=level[u]+1;\n                    q[tail++]=to[k];\n                    if(to[k]==sink)return true;\n                }\n            }\n        }\n        return false;\n    }\n    int dfs(int u,int avaiflow){\n        if(u==sink)return avaiflow;\n        int k,r=avaiflow,p;\n        for(k=fst[u];r&&k!=-1;k=nxt[k]){\n            if(level[to[k]]==level[u]+1&&cap[k]>flow[k]){\n                r-=(p=dfs(to[k],min(r,cap[k]-flow[k])));\n                flow[k]+=p;\n                cap[k^1]+=p;\n            }\n        }\n        return avaiflow-r;\n    }\n    inline int dinic(){\n        int maxflow=0,t;\n        while(bfs()){\n            while(t=dfs(source,INF)){\n                maxflow+=t;\n            }\n        }\n        return maxflow;\n    }\n    int main(){\n        scanf(\"%d%d\",&n,&m);\n        source=0,sink=2*n*m+1;\n        for(int i=source;i<=sink;i++){\n            fst[i]=-1;\n        }\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=m;j++){\n                scanf(\"%d\",&mat[i][j]);\n                trans1[i][j]=transform1(i,j);\n                trans2[i][j]=transform2(i,j);\n                if(!mat[i][j]){\n                    buildedge(source,trans1[i][j],INF);\n                    buildedge(trans1[i][j],trans2[i][j],INF);\n                }\n                if(i==1||j==1||i==n||j==m){\n                    buildedge(trans2[i][j],sink,INF);\n                }\n                if(mat[i][j]>0){\n                    buildedge(trans1[i][j],trans2[i][j],mat[i][j]);\n                }\n                if(i>1&&mat[i][j]>=0&&mat[i-1][j]>=0){\n                    buildedge(trans2[i][j],trans1[i-1][j],INF);\n                    buildedge(trans2[i-1][j],trans1[i][j],INF);\n                }\n                if(j>1&&mat[i][j]>=0&&mat[i][j-1]>=0){\n                    buildedge(trans2[i][j],trans1[i][j-1],INF);\n                    buildedge(trans2[i][j-1],trans1[i][j],INF);\n                }\n            }\n        }\n        printf(\"%d\\n\",dinic());\n    }\n```\n",
        "postTime": 1502519272,
        "uid": 21903,
        "name": "vegetabird",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3866 \u3010[TJOI2009]\u6218\u4e89\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e00\u4e9b\u6559\u8bad\uff1a\u6a21\u677f\u8fd8\u662f\u8981\u7ec3\u719f\u4e00\u4e9b\u624d\u597d\u3002\n\n### \u5206\u6790\n\n\u6574\u5f20\u5730\u56fe\u4e2d\uff0c\u4e00\u5171\u6709 $3$ \u79cd\u683c\u5b50\uff0c\u5206\u522b\u4e3a\u969c\u788d\u7269\u3001\u654c\u519b\u4ee5\u53ca\u7a7a\u5730\uff0c\u6211\u4eec\u9700\u8981\u8f70\u70b8\u7684\u662f\u7a7a\u5730\uff0c\u4fdd\u8bc1\u654c\u519b\u4f1a\u88ab\u8f70\u70b8\u540e\u7684\u5730\u65b9\u4ee5\u53ca\u969c\u788d\u7269\u5305\u56f4\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u683c\u5b50\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u683c\u5b50\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### \u601d\u8def\n\n\u9996\u5148\u5206\u6790\u6837\u4f8b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i3qef5na.png)\n\n\u7ea2\u8272\u7684\u683c\u5b50\u5c31\u662f\u6837\u4f8b\u4e2d\u88ab\u70b8\u6389\u7684\u533a\u57df\u3002\n\n\u4e4d\u4e00\u770b\uff0c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u7684\u601d\u8def\uff0c\u6240\u4ee5\u4e0d\u59a8\u8003\u8651\uff0c\u6211\u4eec\u662f\u5982\u4f55\u628a\u654c\u519b\u6240\u5728\u7684\u4f4d\u7f6e\u7ed9\u9694\u79bb\u51fa\u53bb\u7684\u3002\n\n\u6bd4\u5982\u539f\u6765\u6211\u4eec\u9700\u8981\u8f70\u70b8\u8fd9\u4e9b\u533a\u57df\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ogp7arpo.png)\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u8f70\u70b8\u654c\u519b\u6240\u5728\u4f4d\u7f6e\u4e0a\u9762\u4e00\u5757\u662f\u4e0d\u5212\u7b97\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53c8\u5bf9\u8fd9\u4e00\u5757\u8fdb\u884c\u8003\u8651\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8f70\u70b8\u4ee3\u4ef7\u4e3a $10$ \u7684\u533a\u57df\u7684\u5de6\u3001\u4e0a\u3001\u53f3\u4e09\u5757\u533a\u57df\uff0c\u5373\u8fd9\u4e9b\u533a\u57df**\u4ee3\u66ff**\u4e86\u4ee3\u4ef7\u4e3a $10$ \u7684\u533a\u57df\u3002\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u8003\u8651\u7684\u4e1c\u897f\u53d8\u4e3a\u4e86\u5982\u4f55\u8f70\u70b8\uff0c\u4f7f\u5f97\u6b64\u65f6\u519b\u961f\u7684\u5de6\u3001\u4e0b\u3001\u4e0a\u4e09\u5757\u533a\u57df\u88ab\u5305\u56f4\u6216\u8005\u88ab\u8f70\u70b8\u3002\n\n\u6839\u636e\u4ee3\u4ef7\u4e3a $10$ \u7684\u65b9\u5757\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u5c1d\u8bd5\u7740\u5efa\u7acb\u4e86\u8fd9\u6837\u4e00\u5f20\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8jcs227c.png)\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5272\u6389\u8fd9\u4e9b\u8fb9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/afvg6fs3.png)\n\n\u6240\u4ee5\u601d\u8def\u5df2\u7ecf\u51fa\u6765\u4e86\uff0c**\u6700\u5c0f\u5272**\uff01\n\n\u6839\u636e\u6211\u4eec\u7684\u7ecf\u9a8c\uff0c\u9996\u5148\u9700\u8981\u5c06\u6bcf\u4e2a\u70b9\u8fdb\u884c\u62c6\u70b9\u64cd\u4f5c\uff0c\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u8fde\u8fb9\uff1a\n\n1. \u5bf9\u4e8e\u969c\u788d\u7269\uff0c\u6211\u4eec\u9009\u62e9\u5ffd\u7565\u3002\n2. \u6e90\u70b9\u4e0e\u519b\u961f\u6240\u5728\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a $\\infty$\u3002\n3. \u5bf9\u4e8e\u4e0d\u662f\u969c\u788d\u7269\u7684\u70b9\uff0c\u4ece\u8be5\u70b9\u7684\u51fa\u70b9\u5411\u56db\u5468\u7684\u5165\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u540c\u6837\u4e3a $\\infty$\u3002\n4. \u5bf9\u4e8e\u7a7a\u5730\uff0c\u6211\u4eec\u4ece\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u8fb9\uff0c\u4ee3\u4ef7\u4e3a\u8f70\u70b8\u7684\u4ee3\u4ef7\u3002\u5bf9\u4e8e\u654c\u519b\uff0c\u6211\u4eec\u4ece\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a $\\infty$\u3002\n5. \u5bf9\u4e8e\u8fb9\u754c\u7684\u70b9\uff0c\u6211\u4eec\u4ece\u51fa\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a $\\infty$\u3002\n\n\u6700\u540e\uff0c\u6839\u636e\u6700\u5c0f\u5272\u6700\u5927\u6d41\u5b9a\u7406\u8dd1\u6700\u5c0f\u5272\u5c31\u884c\u4e86\u3002\n\n### \u4e00\u4e9b\u7ec6\u8282\n\n1. \u6700\u5927\u6d41\u6a21\u677f\u4e00\u5b9a\u4e0d\u8981\u5199\u9519\u4e86\uff01\n2. \u5f97\u5728\u5f00\u5934\u7279\u5224\u662f\u5426\u4e3a\u969c\u788d\u7269\uff0c\u679a\u4e3e\u56db\u5468\u8fde\u8fb9\u65f6\u4e5f\u8981\u5224\u65ad\uff0c\u540c\u65f6\u6ce8\u610f\u8d8a\u754c\u95ee\u9898\u3002\n3. \u654c\u519b\u6240\u5728\u5730\u4e0d\u80fd\u88ab\u8f70\u70b8\uff01\n\nCode\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint sss=0,www=1;\n\tchar chh=getchar();\n\twhile(chh<'0'||chh>'9'){\n\t\tif(chh=='-') www=-1;\n\t\tchh=getchar();\n\t}\n\twhile(chh>='0'&&chh<='9'){\n\t\tsss=sss*10+chh-'0';\n\t\tchh=getchar();\n\t}\n\treturn sss*www;\n}\nconst int dx[]={0,1,0,-1},dy[]={1,0,-1,0};\nint n,m,s,t;\nint maze[35][35];\nint depth[1805];\nint head[1805],to[1000005],val[1000005],nxt[1000005],tot=1;\nvoid add(int u,int v,int w){\n\tto[++tot]=v;\n\tval[tot]=w;\n\tnxt[tot]=head[u];\n\thead[u]=tot;\n}\nvoid add_edge(int u,int v,int w){\n\tadd(u,v,w); add(v,u,0);\n}\nbool in(int x,int y){\n\treturn 1<=x&&x<=n&&1<=y&&y<=m;\n}\nint calc_in(int x,int y){\n\treturn m*(x-1)+y;\n}\nint calc_out(int x,int y){\n\treturn m*(x-1)+y+n*m;\n}\nbool bfs(){\n\tmemset(depth,0,sizeof depth); depth[s]=1;\n\tqueue<int> q; q.push(s);\n\twhile(!q.empty()){\n\t\tint x=q.front(); q.pop();\n\t\tfor(register int i=head[x];i;i=nxt[i]){\n\t\t\tint u=to[i];\n\t\t\tif(val[i]&&!depth[u]){\n\t\t\t\tdepth[u]=depth[x]+1;\n\t\t\t\tq.push(u);\n\t\t\t}\n\t\t}\n\t}\n\treturn depth[t];\n}\nint dfs(int now,int flow){\n\tif(now==t) return flow;\n\tint out_flow=0;\n\tfor(register int i=head[now];i&&flow;i=nxt[i]){\n\t\tint u=to[i];\n\t\tif(val[i]&&depth[u]==depth[now]+1){\n\t\t\tint tmp=dfs(u,min(flow,val[i]));\n\t\t\tval[i]-=tmp,val[i^1]+=tmp;\n\t\t\tflow-=tmp,out_flow+=tmp;\n\t\t}\n\t}\n\tif(out_flow==0) depth[now]=0;\n\treturn out_flow;\n}\nint Dinic(){\n\tint ans=0;\n\twhile(bfs()) ans+=dfs(s,1e9);\n\treturn ans;\n}\nint main(){\n\tmemset(head,-1,sizeof head); \n\tn=read(),m=read(); s=0,t=2*n*m+1;\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tmaze[i][j]=read();\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tif(maze[i][j]==-1) continue;\n\t\t\tif(maze[i][j]==0){\n\t\t\t\tadd_edge(s,calc_in(i,j),1e9);\n\t\t\t\tadd_edge(calc_in(i,j),calc_out(i,j),1e9);\n\t\t\t}\n\t\t\telse add_edge(calc_in(i,j),calc_out(i,j),maze[i][j]);\n\t\t\tfor(register int k=0;k<4;k++){\n\t\t\t\tint tx=i+dx[k],ty=j+dy[k];\n\t\t\t\tif(in(tx,ty)&&maze[tx][ty]!=-1) add_edge(calc_out(i,j),calc_in(tx,ty),1e9);\n\t\t\t}\n\t\t\tif(i==1||i==n||j==1||j==m) add_edge(calc_out(i,j),t,1e9);\n\t\t}\n\t}\n\tprintf(\"%d\",Dinic());\n\treturn 0;\n}\n```",
        "postTime": 1648200419,
        "uid": 367316,
        "name": "Foreverxxx",
        "ccfLevel": 0,
        "title": "P3866 [TJOI2009] \u6218\u4e89\u6e38\u620f \u9898\u89e3"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3866)\n\n\u5206\u6790\u9898\u610f\uff0c\u610f\u601d\u662f\u4e0d\u80fd\u8ba9\u654c\u4eba\u901a\u8fc7\u683c\u5b50\u4e4b\u95f4\u7684\u79fb\u52a8\u8d70\u51fa\u8fb9\u754c\uff0c\u800c\u963b\u6b62\u654c\u519b\u4ece\u4e00\u4e2a\u683c\u5b50\u5230\u53e6\u4e00\u4e2a\u5b50\u7684\u9014\u5f84\u662f\u4ec0\u4e48\u2014\u2014\u82b1\u8d39\u654c\u519b\u8981\u5230\u7684\u683c\u5b50\u6240\u9700\u7684\u4ee3\u4ef7\u6765\u5efa\u5899\u3002\n\n\u7531\u6b64\u5982\u679c\u6211\u4eec\u628a\u6bcf\u4e2a\u683c\u5b50\u4e4b\u95f4\u90fd\u5efa\u4e00\u6761\u8fb9\u6743\u4e3a\u7ec8\u70b9\u683c\u5b50\u7684\u5efa\u5899\u4ee3\u4ef7\u7684\u8fb9\uff0c\u518d\u5c06\u6e90\u70b9\u8fde\u5411\u6bcf\u4e2a\u654c\u4eba\u8fb9\u6743\u4e3a\u65e0\u7a77\u5927\uff0c\u518d\u628a\u6bcf\u4e2a\u8fb9\u754c\u70b9\u5411\u6c47\u70b9\u8fde\u65e0\u7a77\u5927\u7684\u8fb9\uff0c\u6700\u540e\u6c42\u4e00\u4e0b\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u5272\u4e0d\u5c31\u662f\u7b54\u6848\u4e86\u5417\uff1f\uff08\u4ee5\u4e0a\u5efa\u8fb9\u5747\u4e0d\u5305\u542b\u8d77\u70b9\u6216\u7ec8\u70b9\u4e3a\u969c\u788d\u6216\u7ec8\u70b9\u4e3a\u654c\u4eba\u7684\u60c5\u51b5\uff0c\u539f\u56e0\u663e\u7136\u3002\uff09\n\n\u4e8e\u662f\u9519\u8bef\u7684\u89e3\u6cd5\u8bde\u751f\u4e86\u3002\n\n\u8fd9\u4e2a\u770b\u4f3c\u5f88\u5bf9\u7684\u89e3\u6cd5\u867d\u7136\u5f88\u63a5\u8fd1\u6b63\u89e3\u4e86\uff0c\u4f46\u4e3a\u4ec0\u4e48\u662f\u9519\u7684\u5462\uff1f\n\n\u8fd9\u6837\u5efa\u56fe\u7684\u8bdd\uff0c\u5982\u679c\u6709\u591a\u4e2a\u654c\u4eba\u7684\u8bdd\uff0c\u5411\u654c\u4eba\u5468\u56f4\u7684\u683c\u5b50\u5efa\u8fb9\u53ef\u80fd\u4f1a\u4ea7\u751f\u91cd\u590d\uff0c\u6bd4\u5982\u4e09\u4e2a\u654c\u4eba\u5750\u6807\u5206\u522b\u4e3a $(i,j),(i+1,j-1),(i+1,j+1)$\uff0c\u6b64\u65f6\u6211\u4eec\u60f3\u8981\u5728  $(i+1,j)$ \u5efa\u5899\u7684\u8bdd\uff0c\u56e0\u4e3a\u4e09\u4e2a\u654c\u4eba\u90fd\u5411\u8fd9\u4e2a\u5750\u6807\u8fde\u8fc7\u8fb9\uff0c\u8fd9\u6837\u4e0d\u5c31\u4ea7\u751f\u91cd\u590d\u4e86\u5417\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u4f7f\u7528**\u62c6\u70b9**\u6cd5\u3002\n\n\u5c06\u6bcf\u4e2a\u5750\u6807\uff08\u969c\u788d\u683c\u9664\u5916\uff09\uff0c\u62c6\u5206\u6210\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u4f5c\u4e3a\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u8fb9\u6743\u4e3a\u8fd9\u4e2a\u5750\u6807\u4fee\u5899\u7684\u4ee3\u4ef7\uff0c\u518d\u5c06\u51fa\u70b9\u5411\u5176\u4ed6\u4ed6\u76f8\u90bb\u7684\u975e\u969c\u788d\u4e14\u975e\u654c\u4eba\u683c\u7684\u5165\u70b9\u8fde\u8fb9\u6743\u4e3a\u65e0\u7a77\u5927\u7684\u8fb9\uff0c\u6700\u540e\u5c06\u8fb9\u754c\u70b9\u7684\u51fa\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\u6743\u4e3a\u65e0\u7a77\u5927\u7684\u8fb9\uff0c\u5c06\u6e90\u70b9\u5411\u654c\u4eba\u683c\u7684\u5165\u70b9\u8fde\u8fb9\u6743\u4e3a\u65e0\u7a77\u5927\u7684\u8fb9\u3002\n\n\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u8fb9\u6743\u91cd\u590d\u8ba1\u7b97\u7684\u95ee\u9898\u3002\n\n\u6700\u7ec8\u7b54\u6848\u5c31\u662f\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u5272\u3002\n\n#### Question\uff1a\n\n1. \u8fd9\u6837\u7684\u5efa\u8fb9\u6bcf\u4e24\u4e2a\u7a7a\u683c\u5b50\u4e4b\u95f4\u4f1a\u5efa\u4e24\u6761\u8fb9\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u8fb9\u6743\u8ba1\u7b97\u91cd\u590d\u5417\uff1f\n\n- \u9996\u5148\uff0c\u4e0d\u8fd9\u6837\u5efa\u8fb9\u7684\u8bdd\u663e\u7136\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u4e0d\u80fd\u8986\u76d6\u6240\u6709\u60c5\u51b5\uff08\u6bd4\u5982\u6211\u53ea\u80fd\u5230\u4e00\u4e2a\u683c\u5b50\u800c\u4e0d\u80fd\u4ece\u4e00\u4e2a\u683c\u5b50\u51fa\u53bb\uff09\u3002\u5176\u6b21\u8fd9\u6837\u5efa\u8fb9\u53ea\u6709\u6bcf\u4e2a\u683c\u5b50\u62c6\u51fa\u6765\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u624d\u6709\u975e\u65e0\u9650\u5927\u7684\u7684\u8fde\u8fb9\uff08\u6700\u5c0f\u5272\u4e00\u5b9a\u53ea\u4f1a\u5272\u8fd9\u4e9b\u8fb9\uff09\uff0c\u5e76\u4e14\u662f\u5355\u5411\u8fb9\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u53ea\u4f1a\u7531\u8d77\u70b9\u7684\u51fa\u70b9\u5411\u7ec8\u70b9\u7684\u5165\u70b9\u8fde\u7684\u8fb9\uff0c\u5373\u4e3a\u8fb9\u6743\u503c\u4f1a\u8ba1\u7b97\u4e00\u6b21\uff0c\u4e0d\u4f1a\u4ea7\u751f\u91cd\u590d\u3002\n\n2. \u5efa\u65e0\u9650\u5927\u8fb9\u6743\u7684\u8fb9\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\n\n- \u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u6700\u5c0f\u5272\uff0c\u5c31\u8981\u4fdd\u6301\u56fe\u7684\u8054\u901a\uff0c\u4f46\u662f\u6211\u4eec\u53c8\u4e0d\u80fd\u56e0\u4e3a\u8fd9\u4e9b\u4e3a\u4e86\u4fdd\u6301\u56fe\u8054\u901a\u800c\u4e0d\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u8fb9\u5f71\u54cd\u7b54\u6848\uff0c\u6240\u4ee5\u5efa\u65e0\u7a77\u5927\u7684\u8fb9\uff0c\u8fd9\u6837\u6211\u4eec\u6c42\u6700\u5c0f\u5272\u7684\u65f6\u5019\u624d\u4e0d\u4f1a\u9009\u4e0a\u8fd9\u4e9b\u8fb9\u3002",
        "postTime": 1685579567,
        "uid": 774862,
        "name": "Tsinghua_pwtking",
        "ccfLevel": 0,
        "title": "[TJOI2009] \u6218\u4e89\u6e38\u620f \u9898\u89e3"
    },
    {
        "content": "$1\\le n,m\\le 30$\uff0c\u7f51\u7edc\u6d41\u65e0\u7591\u4e86\u3002\n\n\u8003\u8651\u6700\u5c0f\u5272\u6a21\u578b\u3002\u5efa\u7acb\u8d85\u7ea7\u539f\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9 $S$\uff0c$T$\uff0c\u5c06\u6bcf\u4e2a\u70b9 $(i,j)$ \u62c6\u6210\u4e24\u4e2a\u70b9 $(i,j)$ \u548c $(i',j')$\uff0c\u5bf9\u4e8e**\u53ef\u70b8\u6bc1**\u7684\u70b9 $(i,j)$\uff0c\u8fde\u8fb9 $(i,j)\\xrightarrow{a_{i,j}} (i',j')$ \u548c $S\\xrightarrow{INF}(x,y)$\uff0c\u5bf9\u4e8e\u76f8\u90bb\u7684\u70b9 $(x,y)$ \u8fde\u8fb9\uff1a$(i',j')\\xrightarrow{inf}(x,y)$\u3002\u5bf9\u4e8e\u654c\u519b\u7684\u70b9 $(x,y)$ \u8fde\u8fb9\uff1a$(x,y)\\xrightarrow{INF}T$\uff0c\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u6c42\u51fa\u6700\u5c0f\u5272\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nstruct Edge{\n  int u, v, flow, cap;\n  Edge(int A=0, int B=0, int C=0, int D=0){\n    u=A, v=B, flow=C, cap=D;\n  }\n};\nconst int N=1e5+11, INF=1e9;\nstruct Dinic{\n  vector<int> E[N]; vector<Edge> edge;\n  int vis[N], dist[N], c[N], s, t, tt;\n\n  void link(int u, int v, int cap){\n    E[u].push_back(int(edge.size()));\n    edge.push_back(Edge(u, v, 0, cap));\n    E[v].push_back(int(edge.size()));\n    edge.push_back(Edge(v, u, 0, 0));\n  }\n\n  bool BFS(){\n    for(int i=1; i<=tt; i++)\n      c[i]=vis[i]=0, dist[i]=INF;\n    queue<int> q; q.push(s), dist[s]=0, vis[s]=1;\n    while(!q.empty()){\n      int u=q.front(); q.pop();\n      for(int i:E[u]){\n        Edge e=edge[i];\n        if(e.cap>e.flow&&!vis[e.v])\n          vis[e.v]=1, dist[e.v]=dist[e.u]+1, q.push(e.v);\n      }\n    }\n    return vis[t];\n  }\n\n  int dfs(int u, int a){\n    if(u==t||a==0) return a;\n    int tot=0, f=0;\n    for(int &i=c[u]; i<int(E[u].size()); i++){\n      Edge e=edge[E[u][i]];\n      if(dist[e.v]==dist[e.u]+1&&(f=dfs(e.v, min(e.cap-e.flow, a)))>0){\n        tot+=f, a-=f, edge[E[u][i]].flow+=f, edge[E[u][i]^1].flow-=f;\n        if(a==0)break;\n      }\n    }\n    return tot;\n  }\n\n  int Max_Flow_Min_Cost(int u, int v, int total){\n    int ans=0;\n    s=u, t=v, tt=total;\n    while(BFS())ans+=dfs(u, INF);\n    return ans;\n  }\n}g;\nint a[333][333];\nint n, m;\nint id(int i, int j){\n  return (i-1)*m+j;\n}\nint main(){\n  cin>>n>>m;\n  int s=2*n*m+2, t=s-1, all=n*m;\n  for(int i=1; i<=n; i++)\n  for(int j=1; j<=m; j++)\n    cin>>a[i][j];\n  for(int i=1; i<=n; i++)\n  for(int j=1; j<=m; j++){\n    if(a[i][j]==-1)continue;\n    if(a[i][j]==0)g.link(s, id(i, j), INF), g.link(id(i, j), id(i, j)+all, INF);\n    else g.link(id(i, j), id(i, j)+all, a[i][j]);\n    if(i>1&&a[i-1][j]!=-1)g.link(id(i, j)+all, id(i-1, j), INF);\n    if(j>1&&a[i][j-1]!=-1)g.link(id(i, j)+all, id(i, j-1), INF);\n    if(i<n&&a[i+1][j]!=-1)g.link(id(i, j)+all, id(i+1, j), INF);\n    if(j<m&&a[i][j+1]!=-1)g.link(id(i, j)+all, id(i, j+1), INF);\n    if(i==1||j==1||i==n||j==m)g.link(id(i, j)+all, t, INF);\n  }\n  cout<<g.Max_Flow_Min_Cost(s, t, t+11)<<'\\n';\n  return 0;\n}\n```\n\n",
        "postTime": 1683726654,
        "uid": 740607,
        "name": "__ODT__",
        "ccfLevel": 0,
        "title": "P3866"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3866)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://wqlblogger.oier.space/post/lg-477917-solution-p3866)\n\n[\u6700\u5927\u6d41\u6700\u5c0f\u5272\u8bc1\u660e\uff08\u9009\u62e9\u6027\u89c2\u770b\uff09](https://wqlblogger.oier.space/post/wql)\n\n**\u9898\u76ee\u5927\u610f\uff1a** \u7ed9\u5b9a\u4e00\u4e2a $\\mathrm{M \\times N}$ \u7684**\u5e26\u6743**\u77e9\u9635 $\\mathrm A_{i,\\,j}$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\u7684\u6743\u503c $\\mathrm A_{i,\\,j}$\uff0c\u5206\u4e09\u79cd\u60c5\u51b5\uff1a\n\n- $\\mathrm A_{i,\\,j} = -1$\uff0c\u8868\u793a\u65e0\u6cd5\u901a\u8fc7 $(i,\\,j)$ \u8fd9\u4e2a\u5143\u7d20\u3002\n\n- $\\mathrm A_{i,\\,j} = 0$\uff0c\u8868\u793a $(i,\\,j)$ \u8fd9\u4e2a\u5143\u7d20\u88ab\u6807\u8bb0\u4e3a\u4e00\u4e2a**\u8d77\u70b9\u3002**\n\n- $\\mathrm A_{i,\\,j} \\in \\mathbb{N^+}$\uff0c\u8868\u793a\u53ef\u4ee5\u82b1\u8d39 $\\mathrm A_{i,\\,j}$ \u7684\u4ee3\u4ef7\u4f7f\u5f97 $(i,\\,j)$ \u8fd9\u4e2a\u5143\u7d20\u88ab\u6807\u8bb0\u4e3a\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u4ece\u6bcf\u4e2a\u5143\u7d20 $(i,\\,j)$ \u53ef\u4ee5\u901a\u8fc7\u4e0e\u5176\u76f8\u90bb\u7684**\u672a\u6807\u8bb0\u4e0d\u53ef\u901a\u8fc7**\u7684\u5143\u7d20\u3002\n\n\u8bbe\u88ab\u6807\u8bb0\u7684\u7b2c $i$ \u4e2a\u8d77\u70b9\u7684\u5750\u6807\u4e3a $(x_i,\\,y_i)$\uff0c\u6743\u503c\u4e3a $w_i$\u3002\n\n\u7528\u4e00\u5b9a\u7684\u4ee3\u4ef7\u5c06\u67d0\u4e9b\u5143\u7d20\u6807\u8bb0\u4e3a\u4e0d\u53ef\u901a\u8fc7\uff0c\u4f7f\u5f97\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u4e2a\u8def\u5f84\uff0c\u8be5\u8def\u5f84\u6ee1\u8db3\u5176\u8d77\u70b9\u4e3a $(x_i,\\,y_i)$\uff0c\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u88ab\u6807\u8bb0\u4e3a\u4e0d\u53ef\u901a\u8fc7\u7684\u5143\u7d20\uff0c\u4e14\u7ec8\u70b9\u4e3a\u4efb\u610f\u4e00\u4e2a\u5728\u8fb9\u754c\u4e0a\u7684\u5143\u7d20\u3002\u6c42\u6700\u4f18\u65b9\u6848\u3002\n\n### Solution\n\n\u6839\u636e\u9898\u610f\uff0c\u5bb9\u6613\u60f3\u5230\u6700\u5c0f\u5272\uff0c\u8003\u8651\u5efa\u56fe\uff0c\u5219\u9898\u610f\u8f6c\u5316\u4e3a**\u6c42\u51fa\u5c06\u4ece\u8d77\u70b9\u5230\u8fb9\u754c\u7ed3\u70b9\u5272\u65ad\u7684\u6700\u5c0f\u4ee3\u4ef7**\u3002\n\n\u8003\u8651\u6bcf\u4e2a\u7ed3\u70b9 $u$\uff0c\u5148\u8003\u8651 $u$ \u662f\u8d77\u70b9\u7684\u60c5\u51b5\uff0c\u5219\u53ef\u4ee5\u5efa\u7acb\u8d85\u7ea7\u6c47\u70b9 $s$\uff0c\u4ece $s$ \u5230 $u$ \u8fde\u5bb9\u91cf\u4e3a $+\\infty$ \u7684\u8fb9\u3002\u518d\u8003\u8651 $u$ \u662f\u8fb9\u754c\u7ed3\u70b9\u7684\u60c5\u51b5\uff0c\u5efa\u7acb\u8d85\u7ea7\u6c47\u70b9 $t$\uff0c\u4ece $u$ \u5411 $t$ \u8fde\u5bb9\u91cf\u4e3a $+\\infty$ \u7684\u8fb9\u3002\n\n\u6b64\u65f6\u518d\u8003\u8651\u5176\u5b83\u7ed3\u70b9\u7684\u8fde\u8fb9\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed3\u70b9 $u$\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5176\u6807\u8bb0\uff0c\u5219\u5c06\u4f1a\u5bfc\u81f4\u6240\u6709\u901a\u8fc7\u7ed3\u70b9 $u$ \u7684\u8def\u5f84\u88ab\u5207\u65ad\u3002\u4f46\u4f20\u7edf\u7684\u6700\u5c0f\u5272\u53ea\u80fd\u6a21\u62df\u5355\u4e2a\u8fb9\u88ab\u5272\u65ad\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u7ed3\u70b9\u88ab\u5272\u65ad\u7684\u60c5\u51b5\u5219\u96be\u4ee5\u5b9e\u73b0\uff0c\u4e8e\u662f\u8003\u8651\u7279\u6b8a\u5efa\u56fe\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u6bcf\u4e2a\u7ed3\u70b9\u5efa\u7acb\u4e00\u4e2a **\u300c\u5165\u70b9\u300d** \u548c **\u300c\u51fa\u70b9\u300d**\uff0c\u76f8\u5f53\u4e8e\u628a\u6bcf\u4e00\u4e2a\u7ed3\u70b9 $u$ \u201c\u62c6\u201d\u6210\u4e86 $u'$ \u548c $u''$\uff0c\u5148\u4ece $u'$ \u5411 $u''$ \u8fde\u5bb9\u91cf\u4e3a $\\mathrm A_{i,\\,j}$ \u7684\u8fb9\u3002\u4e4b\u540e\u6240\u6709\u539f\u672c\u8fde\u5411 $u$ \u7684\u8fb9\u90fd\u8fde\u5411 $u'$\uff0c\u6240\u6709\u4ece $u$ \u8fde\u51fa\u53bb\u7684\u8fb9\u90fd\u6539\u4e3a\u4ece $u''$ \u8fde\u51fa\u53bb\u3002\u5728\u8fd9\u9053\u9898\u4e0a\uff0c\u5c31\u662f\u4ece\u76f8\u90bb\u7ed3\u70b9\u7684\u51fa\u70b9\u5411\u5f53\u524d\u7ed3\u70b9\u7684\u5165\u70b9\u8fde\u8fb9\uff0c\u663e\u7136\u5bb9\u91cf\u4e3a $+\\infty$\uff0c\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\u7279\u6b8a\u60c5\u51b5\u5373\u53ef\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ux2cf5r7.png)\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define inf 1000000000000000\n#define V 100010\n#define E 5000010\ntypedef long long int ll;\nstruct edge {\n\tint to, next;\n\tll capa;\n};\nint cnt = 0, head[V], n, m; edge node[E];\ninline void add(int fir, int nxt, ll w) {\n\tnode[cnt].to = nxt,\n\tnode[cnt].capa = w,\n\tnode[cnt].next = head[fir],\n\thead[fir] = cnt++;\n}\nint s, t, dep[V], gap[V], cur[V]; queue<int>que; ll sum = 0;\ninline void initing() {\n\tmemset(dep, -1, V * sizeof(int));\n\tmemcpy(cur, head, (t + 1) * sizeof(int));\n}\ninline void bfs() {\n\tint fro, ito;\n\tque.push(t); dep[t] = 0; ++gap[dep[t]];\n\twhile (!que.empty()) {\n\t\tfro = que.front(); que.pop();\n\t\tfor (register int i = head[fro]; i != -1; i = node[i].next) {\n\t\t\tito = node[i].to;\n\t\t\tif (dep[ito] == -1) {\n\t\t\t\tdep[ito] = dep[fro] + 1;\n\t\t\t\tque.push(ito);\n\t\t\t\t++gap[dep[ito]];\n\t\t\t}\n\t\t}\n\t}\n}\nll dfs(int u, ll flow) {\n\tif (u == t || flow == 0)return flow; ll used = 0, wei = 0;\n\tfor (register int i = cur[u]; i != -1; i = node[i].next) {\n\t\tcur[u] = i;\n\t\tif (dep[u] == dep[node[i].to] + 1 && node[i].capa) {\n\t\t\twei = dfs(node[i].to, min(flow - used, node[i].capa));\n\t\t\tif (wei) {\n\t\t\t\tnode[i].capa -= wei;\n\t\t\t\tnode[i ^ 1].capa += wei;\n\t\t\t\tused += wei;\n\t\t\t}\n\t\t}\n\t\tif (used == flow)return used;\n\t}\n\t--gap[dep[u]];\n\tif (!gap[dep[u]])dep[s] = t + 1;\n\t++gap[++dep[u]];\n\treturn used;\n}\nll ISAP() {\n\tiniting(); bfs();\n\twhile (dep[s] < t) {\n\t\tsum += dfs(s, inf);\n\t\tmemcpy(cur, head, (t + 1) * sizeof(int));\n\t}\n\treturn sum;\n}\ninline int bh(int x, int y){\n\treturn (x - 1) * m + y;\n}\ninline int hb(int x, int y){\n\treturn bh(x,y)+n*m;\n}\ninline void addE(int u, int v, ll w){\n\tadd(u, v, w);\n\tadd(v, u, 0);\n}\nbool vis[205][205];\nbool ok(int i, int j){\n\treturn (i && i <= n && j && j <= m && !vis[i][j]);\n}\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(); cout.tie();\n\tmemset(head, -1, V * sizeof(int));\n\tcin >> n >> m; s = 2 * n * m + 1, t = 2 * n * m + 2;\n\tint f, l; ll w;\n\tfor(int i = 1; i <= n; i++){\n\t\tfor(int j = 1; j <= m; j++){\n\t\t\tcin >> w;\n\t\t\tif(w == -1){\n\t\t\t\tvis[i][j] = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(w == 0)addE(s, bh(i,j), inf);\n\t\t\tif(w != 0)addE(bh(i,j), hb(i,j), w);\n\t\t\telse addE(bh(i,j), hb(i,j), inf);\n\t\t\tif(i == 1 || j == 1 || i == n || j == n)addE(hb(i,j), t, inf);\n\t\t\tif(ok(i-1,j))addE(hb(i,j), bh(i-1,j), inf);\n\t\t\tif(ok(i+1,j))addE(hb(i,j), bh(i+1,j), inf);\n\t\t\tif(ok(i,j-1))addE(hb(i,j), bh(i,j-1), inf);\n\t\t\tif(ok(i,j+1))addE(hb(i,j), bh(i,j+1), inf);\n\t\t}\n\t}\n\tcout << ISAP();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1662632531,
        "uid": 551861,
        "name": "wql_cai",
        "ccfLevel": 4,
        "title": "P3866\u9898\u89e3"
    },
    {
        "content": "[\u4f20\u9001\u95e8\uff1aP3866 [TJOI2009] \u6218\u4e89\u6e38\u620f](https://www.luogu.com.cn/problem/P3866)\n\n## Solution\n\n\u9996\u5148\u8003\u8651\u5982\u4f55\u5efa\u56fe\u3002\n\n\u5148\u770b\u5efa\u6e90\u70b9\u548c\u6c47\u70b9\u7684\u539f\u56e0\uff1a\n\n- \u5efa\u6e90\u70b9\uff1a\u6709\u82e5\u5e72\u652f\u4e0d\u540c\u7684\u519b\u961f\u9700\u8981\u62e6\u622a\uff0c\u6240\u4ee5\u8981\u5c06\u4ed6\u4eec\u6240\u5728\u70b9\u90fd\u4e0e\u6e90\u70b9\u8fde\u63a5\uff0c\u4ee5\u8dd1\u7f51\u7edc\u6d41\u3002\n- \u5efa\u6c47\u70b9\uff1a\u6709\u82e5\u5e72\u4e2a\u901a\u5411\u56fe\u5916\u7684\u53ef\u884c\u8fb9\u754c\u70b9\uff0c\u4e5f\u8981\u5c06\u5b83\u4eec\u90fd\u4e0e\u6c47\u70b9\u8fde\u5728\u4e00\u8d77\uff0c\u4ee5\u8dd1\u7f51\u7edc\u6d41\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6e90\u70b9\u7684\u6c47\u70b9\u7684\u5efa\u56fe\u65b9\u5f0f\u5c31\u53ef\u4ee5\u8f7b\u6613\u5f97\u5230\u4e86\uff1a\n\n- \u6e90\u70b9\uff1a\u81ea\u6e90\u70b9\u5411\u6240\u6709\u519b\u961f\u7684\u6240\u5728\u70b9\u76f8\u8fde\uff0c\u6d41\u91cf\u4e3a $inf$\u3002\n- \u6c47\u70b9\uff1a\u5c06\u6240\u6709\u53ef\u4ee5\u901a\u884c\u7684\u56fe\u5185\u8fb9\u754c\u70b9\u4e0e\u6c47\u70b9\u76f8\u8fde\uff0c\u6d41\u91cf\u4e3a $inf$\u3002\n\n\u5982\u6b64\uff0c\u89e3\u51b3\u6b64\u9898\u7684\u5177\u4f53\u65b9\u5f0f\u4e5f\u5c31\u51fa\u6765\u4e86\uff1a\u6c42\u6700\u5c0f\u5272\u3002\n\n\u4e0a\u6587\u6240\u8ff0\uff0c\u5c06\u519b\u961f\u90fd\u4e0e\u6e90\u70b9\u76f8\u8fde\uff0c\u53ef\u884c\u8fb9\u754c\u70b9\u90fd\u4e0e\u6c47\u70b9\u76f8\u8fde\uff0c\u5219\u8981\u60f3\u963b\u6b62\u519b\u961f\u51fa\u56fe\uff0c**\u5c31\u662f\u8981\u5272\u53bb\u4e00\u4e9b\u5e26\u6743\u503c\u7684\u8fb9\uff0c\u65e2\u80fd\u4f7f\u6e90\u70b9\u548c\u6c47\u70b9\u4e0d\u8fde\u901a\uff0c\u53c8\u8981\u4f7f\u5272\u53bb\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u6700\u5c0f**\u3002\n\n\u56e0\u4e3a\u6700\u5927\u6d41\u7b49\u4e8e\u6700\u5c0f\u5272\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u8f6c\u5316\u4e3a\u6c42\u6700\u5927\u6d41\u3002\u90a3\u4e48\u4e0a\u8ff0\u7684\u8fb9\u6743\u5728\u4e0b\u6587\u5c31\u53d8\u6210\u4e86\u6d41\u91cf\u3002\n\n\u518d\u770b\u5982\u4f55\u5efa\u56fe\u7684\u4e2d\u95f4\u90e8\u5206\uff1a\n\n1. \u5f88\u660e\u663e\uff0c\u8981\u5c06\u6240\u6709\u7684\u53ef\u884c\u70b9\uff08\u5373\u8be5\u70b9\u6ca1\u6709\u969c\u788d\u7269\uff09\u548c\u5b83\u56db\u5468\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a $inf$\u3002\n\n2. \u5bf9\u4e8e\u7a7a\u5730\uff0c\u53d1\u73b0\u5b83\u6709\u4e00\u4e2a\u8f70\u70b8\u503c\uff08\u5373\u8f70\u70b8\u6240\u8d39\u70b8\u836f\u6570\uff09\uff0c\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u519b\u961f\u6240\u5728\u70b9\uff0c\u8f70\u70b8\u503c\u4e3a 0\u3002\u6309\u4e0a\u6587\u6240\u8ff0\uff0c\u8981\u60f3\u5c06\u4e00\u4e2a\u70b9\u6743\u8f6c\u5316\u4e3a\u8fb9\u6743\uff0c\u4e5f\u5c31\u662f\u4e00\u6761\u8fb9\u7684\u6d41\u91cf\uff0c\u90a3\u4e48\u65b9\u6cd5\u547c\u4e4b\u6b32\u51fa\uff1a\u62c6\u70b9\u3002\n\n1. \u6240\u4ee5\uff0c\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u53ef\u884c\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u8fde\u8fb9\u3002\u82e5\u70b9\u4e3a\u7a7a\u5730\uff0c\u5219\u8fb9\u7684\u6d41\u91cf\u5373\u4e3a\u7a7a\u5730\u7684\u8f70\u70b8\u503c\uff0c\u8fd9\u6837\u5373\u53ef\u9650\u5236\u901a\u8fc7\u8be5\u7a7a\u5730\u70b9\u7684\u6d41\u91cf\uff1b\u82e5\u70b9\u4e3a\u519b\u961f\u6240\u5728\u70b9\uff0c\u5219\u8fb9\u7684\u6d41\u91cf\u4e3a $inf$\u3002\n\n1. \u6700\u540e\u518d\u6765\u8bf4\u5165\u70b9\u548c\u51fa\u70b9\u7684\u8fde\u8fb9\uff1a\u5bf9\u4e8e\u6240\u6709\u53ef\u884c\u70b9\uff0c\u4f7f\u7528\u51fa\u70b9\u5411\u56db\u5468\u53ef\u884c\u70b9\u7684\u5165\u70b9\u8fde\u8fb9\uff1b\u5bf9\u4e8e\u519b\u961f\u6240\u5728\u70b9\uff0c\u5219\u81ea\u6e90\u70b9\u4e0e\u8be5\u70b9\u7684\u5165\u70b9\u8fde\u8fb9\u3002\n\n\u5efa\u56fe\u5c31\u8bf4\u5b8c\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u53ea\u6709\u6700\u5927\u6d41\u677f\u5b50\u4e86\u3002\n\n\u7279\u522b\uff1a\u6ce8\u610f\u70b9\u7684\u7f16\u53f7\u7684\u5904\u7406\u3002\n\n## Code\n\n\u66f4\u591a\u8be6\u60c5\u89c1\u4ee3\u7801\u53ca\u6ce8\u91ca\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<vector>\nusing namespace std;\n\n#define rep(i, a, b) for(int i = a; i <= b; ++i)\n#define maxn 2005\n#define maxm 40005\n#define inf 2147483647\nint n, m, d, nm;\nint c[maxn][maxn], cntc, l[maxm], r[maxm], ans;\nint s, t, p[maxn][maxn], tot;\nint dep[maxm];\nint hd[maxm], cur[maxm], cnt = 1;\nint fx[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nstruct node{\n\tint to, nxt, w;\n}e[maxm << 1];\n\ninline void add(int u, int v, int w)\n{\n\te[++cnt].to = v;\n\te[cnt].nxt = hd[u], e[cnt].w = w;\n\thd[u] = cnt;\n\te[++cnt].to = u;\n\te[cnt].nxt = hd[v], hd[v] = cnt;\n}\n\ninline int id(int x, int y)/*\u70b9\u7684\u7f16\u53f7\u7684\u5904\u7406*/\n{\n\treturn (x - 1) * m + y;\n}\n\ninline bool bfs()\n{\n\tqueue <int> q;\n\tmemset(dep, 0, sizeof dep);\n\tdep[s] = 1, q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tfor(int v, i = hd[u]; i; i = e[i].nxt)\n\t\t{\n\t\t\tif(!dep[v = e[i].to] and e[i].w)\n\t\t\t{\n\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}                              \n\t\t}\n\t}\n\treturn dep[t] ? true : false;\n}\n\ninline int dinic(int u, int in)\n{\n\tif(u == t or !in) return in;\n\tint out = 0;\n\tfor(int v, &i = cur[u]/*cur[u] \u968f\u7740 i \u7684\u53d8\u5316\u800c\u53d8\u5316*/; i and in/*\u6ce8\u610f\u5224\u5bb9\u91cf\u5269\u4f59*/; i = e[i].nxt)\n\t        /*\u5f53\u524d\u5f27\u4f18\u5316*/ \n\t{\n\t\tif(dep[v = e[i].to] == dep[u] + 1 and e[i].w)\n\t\t{\n\t\t\tint res = dinic(v, min(in, e[i].w));\n\t\t\te[i].w -= res, e[i ^ 1].w += res;\n\t\t\tin -= res, out += res;\n\t\t}\n\t}\n\tif(!out) dep[u] = 0;\n\treturn out;\n}\n\nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tnm = n * m, t = nm * 2 + 1;\n\trep(i, 1, n) rep(j, 1, m) scanf(\"%d\", &c[i][j]);\n\trep(i, 1, n) rep(j, 1, m) if(c[i][j] != -1)\n\t{\n\t\tif(!c[i][j])//\u82e5\u8be5\u70b9\u4e3a\u519b\u961f\u6240\u5728\u70b9 \n\t\t\tadd(id(i, j), id(i, j) + nm, inf)/*\u62c6\u70b9*/, add(s, id(i, j), inf)/*\u519b\u961f\u6240\u5728\u70b9\u548c\u6e90\u70b9\u76f8\u8fde*/;\n\t\telse /*\u82e5\u8be5\u70b9\u4e3a\u7a7a\u5730*/add(id(i, j), id(i, j) + nm, c[i][j])/*\u62c6\u70b9*/;\n\t\tint nw = id(i, j) + nm;//\u5f53\u524d\u5165\u70b9\u76f8\u5bf9\u5e94\u7684\u51fa\u70b9 \n\t\tif(i == 1 or j == 1 or i == n or j == m) add(nw, t, inf);//\u8fb9\u754c\u70b9\u548c\u6c47\u70b9\u76f8\u8fde \n\t\trep(k, 0, 3)//\u5411\u70b9\u7684\u56db\u5468\u53ef\u884c\u70b9\u8fde\u8fb9 \n\t\t{\n\t\t\tint xx = i + fx[k][0], yy = j + fx[k][1];\n\t\t\tif(xx < 1 or yy < 1 or xx > n or yy > m or c[xx][yy] == -1) continue;\n\t\t\tadd(nw/*\u5f53\u524d\u70b9\u51fa\u70b9*/, id(xx, yy)/*\u56db\u5468\u53ef\u884c\u70b9\u5165\u70b9*/, inf);\n\t\t}\n\t}\n\twhile(bfs())//Dinic\u677f\u5b50 \n\t{\n\t\trep(i, s, t) cur[i] = hd[i];//\u5f53\u524d\u5f27\u4f18\u5316-\u6570\u7ec4\u521d\u59cb\u5316 \n\t\tans += dinic(s, inf);\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0; \n}\n```\n\n\n------------\n\u611f\u8c22\u9605\u8bfb\u3002\n\n\u8f9b\u82e6\u7ba1\u7406\u5458\u5ba1\u6838\uff0c\u82e5\u6709\u95ee\u9898\u70e6\u8bf7\u6307\u51fa\u3002",
        "postTime": 1644817496,
        "uid": 469672,
        "name": "\u4f0d\u53c1\u58f9",
        "ccfLevel": 7,
        "title": "P3866 [TJOI2009] \u6218\u4e89\u6e38\u620f \u9898\u89e3"
    },
    {
        "content": "## \u3010\u9898\u610f\u3011\n\n\u8ba9\u4e00\u4e9b\u683c\u5b50\u4e0d\u53ef\u884c\uff0c\u4f7f\u519b\u961f\u65e0\u6cd5\u5230\u8fbe\u8fb9\u754c\uff0c\u6c42\u6700\u5c0f\u4ee3\u4ef7\n\n## \u3010\u5206\u6790\u3011\n\n\u519b\u961f\u7ec4\u6210\u70b9\u96c6 $A$\uff0c\u8fb9\u754c\u4e0a\u7684\u70b9\u7ec4\u6210\u70b9\u96c6 $B$\n\n\u6c42\u5c06 $A$ \u548c $B$ \u5272\u5f00\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n**\u6700\u5c0f\u5272=\u6700\u5927\u6d41**\n\n------------\n\n\u8003\u8651\u5982\u4f55\u5efa\u56fe\n\n\u5c06\u70b9\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\n\n* \u6e90\u70b9\u5411\u519b\u961f\u7684\u51fa\u70b9\u8fde\u6d41\u91cf $\\inf$ \u7684\u8fb9\n\n* \u7a7a\u5730\u7684\u5165\u70b9\u5411\u7a7a\u5730\u7684\u51fa\u70b9\u8fde\u6d41\u91cf\u662f\u6b64\u70b9\u4ee3\u4ef7\u7684\u8fb9\n\n* \u975e\u969c\u788d\u70b9\u7684\u51fa\u70b9\u5411\u5468\u56f4\u70b9\u7684\u5165\u70b9\u8fde\u6d41\u6d6a $\\inf$ \u7684\u8fb9\n\n* \u5468\u56f4\u70b9\u7684\u51fa\u70b9\u5411\u6c47\u70b9\u8fde\u6d41\u91cf $\\inf$ \u7684\u8fb9\n\n\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u6d41\u4f1a\u88ab\u9700\u8981\u8f70\u70b8\u7684\u70b9\u5361\u4f4f\n\n\u5e76\u4e14\u6700\u5927\u6d41\u5c31\u662f\u6700\u5c0f\u4ee3\u4ef7\n\n## \u7b97\u6cd5\n\n\u7f51\u7edc\u6d41\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=35,maxt=maxn*maxn*2,maxe=maxn*maxn*10,INF=1<<30,p[4][2]={{-1,0},{0,1},{1,0},{0,-1}};\nint n,m;\nint mp[maxn][maxn];\nint read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nstruct Dinic{\n    int S,T;\n    struct edge{\n        int to,nxt,f;\n    }e[maxe];\n    int tot,lnk[maxt];\n    void add_e(int x,int y,int f){\n        e[++tot]=(edge){y,lnk[x],f};\n        lnk[x]=tot;\n    }\n    void ADD(int x,int y,int f){\n        add_e(x,y,f),add_e(y,x,0);\n    }\n    int que[maxt],cur[maxt],dep[maxt];\n    bool BFS(){\n        int hed=0,til=1;\n        for(int i=1;i<=T;i++) cur[i]=lnk[i],dep[i]=INF;\n        que[1]=S,dep[S]=0;\n        while(hed!=til){\n            int x=que[++hed];\n            for(int j=lnk[x];j;j=e[j].nxt){\n                int y=e[j].to;\n                if(dep[y]==INF&&e[j].f){\n                    dep[y]=dep[x]+1;\n                    que[++til]=y;\n                }\n            }\n        }\n        return dep[T]!=INF;\n    }\n    int DFS(int x,int limit){\n        if(!limit||x==T) return limit;\n        int flow=0,f;\n        for(int j=cur[x];j;j=e[j].nxt){\n            cur[x]=j;\n            int y=e[j].to;\n            if(dep[y]==dep[x]+1&&(f=DFS(y,min(limit,e[j].f)))){\n                e[j].f-=f;\n                e[j^1].f+=f;\n                flow+=f;\n                limit-=f;\n            }\n            if(!limit) return flow;\n        }\n        return flow;\n    }\n    int calc(){\n        int ans=0;\n        while(BFS()) ans+=DFS(S,INF);\n        return ans;\n    }\n}D;\nint getid(int x,int y){\n\treturn (x-1)*m+y;\n}\nint main(){\n \tfreopen(\"P3866.in\",\"r\",stdin);\n \tfreopen(\"P3866.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++) mp[i][j]=read();\n\tD.S=n*m*2+1,D.T=D.S+1,D.tot=1;\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tif(mp[i][j]==0){\n\t\t\tD.ADD(D.S,getid(i,j)+n*m,INF);\n\t\t\tfor(int w=0;w<4;w++){\n\t\t\t\tint x=i+p[w][0],y=j+p[w][1];\n\t\t\t\tif(x>n||x<1||y>m||y<1) continue;\n\t\t\t\tif(mp[x][y]==-1) continue;\n\t\t\t\tD.ADD(getid(i,j)+n*m,getid(x,y),INF);\n\t\t\t}\n\t\t}else\n\t\tif(mp[i][j]>0){\n\t\t\tD.ADD(getid(i,j),getid(i,j)+n*m,mp[i][j]);\n\t\t\tfor(int w=0;w<4;w++){\n\t\t\t\tint x=i+p[w][0],y=j+p[w][1];\n\t\t\t\tif(x>n||x<1||y>m||y<1) continue;\n\t\t\t\tif(mp[x][y]==-1) continue;\n\t\t\t\tD.ADD(getid(i,j)+n*m,getid(x,y),INF);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tD.ADD(getid(i,1)+n*m,D.T,INF),D.ADD(getid(i,m)+n*m,D.T,INF);\n\tfor(int j=2;j<m;j++)\n\t\tD.ADD(getid(1,j)+n*m,D.T,INF),D.ADD(getid(n,j)+n*m,D.T,INF);\n\tprintf(\"%d\\n\",D.calc());\n\treturn 0;\n}\n```\n",
        "postTime": 1626867453,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3866 [TJOI2009]\u6218\u4e89\u6e38\u620f"
    },
    {
        "content": "## [\u9898\u9762](https://www.luogu.org/problemnew/show/P3866)\n\n\u597d\u96be\u8868\u8ff0\u554a~\n\n\u5728n*m\u7684\u77e9\u9635\u4e0a\uff0c\u6709\u4e00\u4e9b\u5927\u5175\uff08\u4e3a0\uff09\uff0c\u4e00\u4e9b\u7a7a\u5730\uff08\u4e00\u4e2a\u6b63\u6574\u6570\uff09\uff0c\u969c\u788d\u7269\uff08-1\uff09\uff0c\u73b0\u5728\u6467\u6bc1\u4e00\u4e9b\u7a7a\u5730\uff0c\u4f7f\u6240\u6709\u5927\u5175\u4e0d\u80fd\u8d70\u51fa\u77e9\u9635\u53bb\uff08\u4ee3\u4ef7\u4e3a\u8868\u793a\u7a7a\u5730\u7684\u6574\u6570\uff09\uff0c\u6c42\u6700\u5c0f\u4ee3\u4ef7\n\n## \u601d\u8def\uff1a\n\n### \u7f51\u7edc\u6d41\u6700\u5c0f\u5272\n\n~~\u201c\u963b\u6b62\u201d\uff0c\u201c\u6700\u5c0f\u201d\uff0c\u770b\u5230\u8fd9\u6837\u7684\u5b57\u773c\uff0c\u80af\u5b9a\u5c31\u8981\u60f3\u5230\u6700\u5c0f\u5272\u554a~~\n\n\u5728\u4e92\u76f8\u80fd\u5230\u8fbe\u7684\u70b9\u4e4b\u95f4\u5efa\u8fb9\uff0c\u5bb9\u91cf\u4e3aINF\uff0c\u56e0\u4e3a\u2014\u2014\u5b83\u4e0d\u80fd\u70b8\u2026\u2026\n\n\u7136\u540e\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210**\u5165\u70b9**\u548c**\u51fa\u70b9**\uff0c\u6bcf\u4e2a\u5175\u6240\u5728\u7684\u51fa\u70b9\u548c**\u6e90\u70b9S**\u76f4\u63a5\u76f8\u8fde\uff0c\u5728\u6700\u5916\u9762\u7684\u70b9\u7684\u51fa\u70b9\u548c**\u6c47\u70b9T**\u76f4\u63a5\u76f8\u8fde\n\n\u6700\u540e\u5957\u6a21\u677f\uff0cOK\u4e86\n\n\u6700\u91cd\u8981\u7684\u8fd8\u662f\u5efa\u8fb9\uff0c\u80fd\u591f\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\uff0c\u60f3\u51fa\u5bf9\u5e94\u7684\u7b56\u7565\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x7f7f7f7f\n#define M 5010\n#define N 2010\n#define Mn 31\nusing namespace std;\nint Cx[4]={1,0,0,-1};//\u9884\u5904\u7406\u79fb\u52a8\u7684\u65b9\u5411\nint Cy[4]={0,1,-1,0};\nstruct node{\n\tint to,cap;\n\tint nxt;\n\tnode(int a,int b):to(a),cap(b){\t}\n\tnode(){\t}\n}b[M<<1];\nint head[N],deep[N],a[Mn][Mn];\nint n,m,S,T,Maxflow,Max,t=1;\nbool p[Mn][Mn];\nint read()\n{\n\tint s=0,p=1;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c=='-')\n\t\t\tp=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t{\n\t\ts=(s<<1)+(s<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s*p;\n}\nint Cag(int x,int y)\n{\n\treturn (x-1)*m+y;\n}\nvoid add(int x,int y,int cap)\n{\n\tb[++t]=node(y,cap);\n\tb[t].nxt=head[x];\n\thead[x]=t;\n\tb[++t]=node(x,0);\n\tb[t].nxt=head[y];\n\thead[y]=t;\n\treturn;\n}\nvoid Add(int x,int y)\n{\n\tint Tx,Ty;\n\tfor(int i=0;i<4;i++)\n\t{\n\t\tTx=x+Cx[i];Ty=y+Cy[i];\n\t\tif(p[Tx][Ty])//\u8fb9\u6846\u7684\u7528\u5904\n\t\t\tadd(Cag(x,y)+Max,T,INF);//\u5728\u77e9\u9635\u5916\u5c31\u548c\u6c47\u70b9T\u76f8\u8fde\n\t\telse\n\t\t\tadd(Cag(x,y)+Max,Cag(Tx,Ty),INF);//\u5426\u5219\u51fa\u70b9\u548c\u5165\u70b9\u76f8\u8fde\n\t}\n\treturn;\n}\nbool BFS()\n{\n\tint i,cur;\n\tint to,cap;\n\tqueue<int>p;\n\tmemset(deep,0,sizeof(deep));\n\tp.push(S);deep[S]=1;\n\twhile(!p.empty())\n\t{\n\t\tcur=p.front();p.pop();\n\t\tfor(i=head[cur];i;i=b[i].nxt)\n\t\t{\n\t\t\tto=b[i].to;cap=b[i].cap;\n\t\t\tif(cap&&!deep[to])\n\t\t\t{\n\t\t\t\tdeep[to]=deep[cur]+1;\n\t\t\t\tp.push(to);\n\t\t\t\tif(to==T)\n\t\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint Dinic(int k,int flow)\n{\n\tif(k==T)\n\t\treturn flow;\n\tint i,to,cap,res,rest=flow;\n\tfor(i=head[k];i&&rest;i=b[i].nxt)\n\t{\n\t\tto=b[i].to;cap=b[i].cap;\n\t\tif(cap&&deep[to]==deep[k]+1)\n\t\t{\n\t\t\tres=Dinic(to,min(rest,cap));\n\t\t\tif(!res)\n\t\t\t\tdeep[to]=0;\n\t\t\tb[i].cap-=res;\n\t\t\tb[i^1].cap+=res;\n\t\t\trest-=res;\n\t\t}\n\t}\n\treturn flow-rest;\n}\nint main()\n{\n\tint i,j,flow;\n\tn=read();m=read();\n\tMax=n*m;T=Max+Max+1;//\u6c47\u70b9T\n\tfor(i=1;i<=n;i++)//\u88f1\u4e2a\u6846\uff0c\u65b9\u4fbf\u5224\u65ad\n\t\tp[i][0]=p[i][m+1]=1;\n\tfor(i=1;i<=m;i++)\n\t\tp[0][i]=p[n+1][i]=1;\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t\ta[i][j]=read();\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[i][j]==-1)//\u5982\u679c\u662f\u969c\u788d\u5c31\u4e0d\u5efa\u8fb9\n\t\t\t\tcontinue;\n\t\t\tif(a[i][j]==0)//\u5982\u679c\u662f\u5927\u5175\u5c31\u4e0e\u6e90\u70b9\u5efa\u8fb9\uff0c\u6ce8\u610f\uff0c\u662f\u51fa\u70b9\uff01\u5426\u5219\u90fd\u8981\u4e3azero\u4e86\u2026\u2026\n\t\t\t\tadd(S,Cag(i,j)+Max,INF);\n\t\t\telse//\u5982\u679c\u662f\u7a7a\u5730\uff0c\u90a3\u4e48\u5728\u81ea\u5df1\u7684\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u5efa\u8fb9\n\t\t\t\tadd(Cag(i,j),Cag(i,j)+Max,a[i][j]);//\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5bb9\u91cf\u662fa[i][j]\uff0c\u5c31\u662f\u8981\u70b8\u591a\u5c11\u6b21\n\t\t\tAdd(i,j);//\u653e\u4e2a\u51fd\u6570\u91cc\u770b\u770b\u80fd\u4e0d\u80fd\u548c\u56db\u5468\u76f8\u8fde\n\t\t}\n\twhile(BFS())//Dinic\u6a21\u677f\n\t\twhile((flow=Dinic(S,INF)))\n\t\t\tMaxflow+=flow;\n\tprintf(\"%d\",Maxflow);\n\treturn 0;\n}\n```\n\n## \u63a8\u8350\u9898\u76ee\n\n### [Luogu P2472 [SCOI2007]\u8725\u8734](https://www.luogu.org/problemnew/show/P2472)\n\n\u6709\u70b9\u7c7b\u4f3c\uff0c~~\u4f46\u5f88\u4e0d\u76f8\u540c\uff01~~",
        "postTime": 1546410435,
        "uid": 83564,
        "name": "hovny",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3866 \u3010[TJOI2009]\u6218\u4e89\u6e38\u620f\u3011"
    }
]