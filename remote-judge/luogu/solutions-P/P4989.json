[
    {
        "content": "## \u5806$n\\ log\\ n$\u89e3\u6cd5\n\n# \u6b63\u9898\n\u9898\u76ee\u94fe\u63a5:https://www.luogu.org/problemnew/show/P4989\n\n------------\n\n## \u9898\u76ee\u5927\u610f\n\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u4e24\u4e24\u914d\u5bf9\uff0c\u8981\u6c42\n1. \u914d\u5bf9\u7684\u6570\u4e0d\u80fd\u4ea4\u53c9(\u7528\u540c\u4e00\u4e2a\u533a\u95f4\u4f46\u4e0d\u5305\u542b)\n2. 0\u5728\u524d1\u5728\u540e\n\n\u8981\u6c42\u914d\u5bf9\u6700\u591a\u7684\u60c5\u51b5\u4e0b\u6240\u6709\u914d\u5bf9\u7684\u8ddd\u79bb\u4e4b\u548c\u6700\u8fdc\u3002\n\n-------------\n\n## \u89e3\u9898\u601d\u8def\n\u5c060\u89c6\u4e3a\u5de6\u62ec\u53f7\uff0c1\u89c6\u4e3a\u53f3\u62ec\u53f7\uff0c\u9898\u76ee\u53d8\u4e3a\u62ec\u53f7\u5339\u914d\u95ee\u9898\u3002\n\n\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\uff0c\u5148\u662f\u4ea4\u53c9\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u679c\u4e24\u4e2a\u4ea4\u53c9\u4e86\uff0c\u6211\u4eec\u8ba9\u4ed6\u4eec\u53cd\u8fc7\u6765\u914d\u5bf9(\u914d\u5bf9\u65b9\u7684\u90a3\u4e2a)\u7684\u8bdd\u7b54\u6848\u5e76\u4e0d\u4f1a\u6539\u53d8\u3002\u6240\u6709\u6211\u4eec\u4e0d\u8981\u8003\u8651\u4ea4\u53c9\u95ee\u9898\u3002\n\n\u90a3\u6211\u4eec\u5f00\u59cb\u505a\uff0c\u9996\u5148\u4e0d\u8003\u8651\u914d\u5bf9\u6700\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u5b58\u50a8\u76ee\u524d\u6240\u6709\u5df2\u7ecf\u5339\u914d\u7684\u53f3\u62ec\u53f7\u8fd8\u6709\u672a\u5de6\u62ec\u53f7\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u6211\u4eec\u6bcf\u6b21\u5230\u4e00\u4e2a\u53f3\u62ec\u53f7\u65f6\uff0c\u53d6\u51fa\u6700\u5c0f\u7684\u90a3\u4e2a\u4e0e\u5176\u5339\u914d\u5e76\u8ba1\u7b97\u591a\u51fa\u6765\u7684\u4ee3\u4ef7\u3002\u7136\u540e\u4ece\u65b0\u4e22\u5165\u5806\u4e2d\u3002\n\n\u8fd9\u662f\u8ddd\u79bb\u4e4b\u548c\u6700\u8fdc\uff0c\u4f46\u662f\u914d\u5bf9\u6700\u591a\u600e\u4e48\u529e\uff0c\u90a3\u4e48\u6211\u4eec\u5b9a\u4e49\u6743\u503c\uff0c\u5c0f\u6839\u5806\u7ef4\u62a4\u6743\u503c\u3002\u5bf9\u4e8e\u5df2\u7ecf\u5339\u914d\u7684\u53f3\u62ec\u53f7\u6211\u4eec\u6743\u503c\u5c31\u662f\u5b83\u7684\u4f4d\u7f6e\uff1b\u5bf9\u4e8e\u6ca1\u6709\u5339\u914d\u7684\u5de6\u62ec\u53f7\uff0c\u6211\u4eec\u8ba9\u5b83\u7684\u6743\u503c\u52a0\u4e0a\u4e00\u4e2a$-inf$\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4f18\u5148\u5339\u914d\u6ca1\u6709\u5339\u914d\u7684\u4e14\u6743\u503c\u6700\u5927\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\ log\\ n)$\n\n--------------\n\n## $code$\n```cpp\n#include<cstdio>\n#include<queue>\n#include<iostream>\nusing namespace std;\nstruct node{\n\tint wz,w;\n};\nbool operator <(const node &a,const node &b)\n{return a.w<b.w;}\npriority_queue<node> q;\nint n,ans,a[1000];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tchar c;cin>>c;\n\t\ta[i]=c-'0';\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!a[i]) q.push((node){i,233333333-i});\n\t\telse{\n\t\t\tif(q.empty()) continue;\n\t\t\tans+=i-q.top().wz;q.pop();\n\t\t\tq.push((node){i,-i});\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}\n```\n",
        "postTime": 1562248669,
        "uid": 52918,
        "name": "QuantAsk",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4989 \u3010\u4e8c\u8fdb\u5236\u4e4b\u8c1c\u3011"
    },
    {
        "content": "# \u4e3a\u4e86\u8ba9\u5927\u5bb6\u770b\u8d77\u6765\u65b9\u4fbf\uff0c\u4e8e\u662f\u9a8c\u9898\u4eba\u5c31\u628a\u9898\u89e3\u653e\u8fdb\u6765\u4e86\uff0c\u76f8\u5173\u9898\u76ee\u8bf7\u70b9\u51fb[\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/83239164)\n\n## T3\n\n\u9898\u610f\u7565\u3002\n\n**Solution 0**\n\n\u6211\u4eec\u53ef\u4ee5\u6709\u4fe1\u4ef0\uff01~~\u8f93\u51fa0\uff0c\u671f\u671b\u5f97\u52060\u3002~~\n\n**Solution 1**\n\n\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\uff01\u679a\u4e3e\u6240\u6709\u7ec4\u5408\u72b6\u6001\uff0c\u671f\u671b\u5f97\u520630\u3002\n\n**Solution 2**\n\n\u5efa\u56fe\u8dd1\u8d39\u7528\u6d41\u3002\n\n\u5c06\u6240\u67090\u89c6\u4e3a\u6e90\u70b9\uff0c\u6240\u67091\u89c6\u4e3a\u6c47\u70b9\uff0c\u5f53\u7136\u8fd9\u6837\u662f\u8dd1\u4e0d\u4e86\u7f51\u7edc\u6d41\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8bbe\u7f6e\u8d85\u7ea7\u6e90\u70b9\u4e0e\u8d85\u7ea7\u6c47\u70b9\u5206\u522b\u4e0e\u6240\u6709\u6e90\u70b9\u548c\u6240\u6709\u6c47\u70b9\u76f8\u8fde\uff0c\u7531\u4e8e\u6bcf\u4e2a0\u548c1\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u8fd9\u4e9b\u8fb9\u7684\u8d39\u7528\u4e3a0\uff0c\u5bb9\u91cf\u4e3a1\u3002\n\n\u4e4b\u540e\u5904\u7406\u4e8c\u8fdb\u5236\u6570\uff0c\u5c06\u6bcf\u4e00\u4e2a0\u4e0e\u5176\u540e\u9762\u76841\u8fde\u4e00\u6761\u8d39\u7528\u4e3a\u4e24\u8005\u4f4d\u6570\u5dee\u7684\u7edd\u5bf9\u503c\u4e14\u5bb9\u91cf\u4e3a1\u7684\u8fb9\u3002\n\n\u8fd9\u6837\u5efa\u56fe\u5c31\u5b8c\u6210\u4e86\uff0c\u8dd1\u4e00\u904d\u8d39\u7528\u6d41\u5373\u53ef\u3002\n\n\u4f46\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u4fdd\u8bc1\u5b83\u4eec\u4e0d\u4ea4\u53c9\uff1f\n\n\u5176\u5b9e\u663e\u7136\u53ef\u4ee5\u53d1\u73b0\uff0c\u540c\u6837\u7684\u51e0\u4e2a\u6570\uff0c\u4e0d\u7ba1\u5bf9\u5e94\u5173\u7cfb\u4ea4\u53c9\u8fd8\u662f\u4e0d\u4ea4\u53c9\uff0c\u603b\u542f\u53d1\u7cfb\u6570\u662f\u76f8\u7b49\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u65e0\u9700\u53e6\u5916\u7279\u6b8a\u5904\u7406\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5728$O(n^3)$~$O(n^4)$\u4e4b\u95f4\uff0c\u671f\u671b\u5f97\u5206100\u5206\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\n    int n,first;\n    char c[501]; \n    int w[502][502];\n    bool f[502][502];\n    int stack[502];\n    int dist[502];\n    int pre[502];\n    bool vis[502];\nint check()\n{\n    int top=1;\n    stack[1]=0;\n    for (int i=1;i<=n+1;i++)\n        dist[i]=-2147483647;\n    dist[0]=0;\n    memset(vis,false,sizeof(vis));\n    vis[0]=true;\n    while (top>0)\n    {\n        int now=stack[top];\n        top--;\n        vis[now]=false;\n        for (int i=0;i<=n+1;i++)\n            if (f[now][i]&&dist[now]+w[now][i]>dist[i])\n            {\n                dist[i]=dist[now]+w[now][i];\n                pre[i]=now;\n                if (!vis[i])\n                {\n                    vis[i]=true;\n                    stack[++top]=i;\n                }\n            }\n    }\n    return dist[n+1]; \n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        char s;\n        s=getchar();\n        while (s!='0'&&s!='1') s=getchar();\n        c[i]=s;\n    }\n    for (int i=1;i<=n;i++)\n    {\n        if (c[i]=='0')\n        {\n            w[0][i]=0;\n            w[i][0]=0;\n            f[0][i]=1;\n            f[i][0]=0;\n        }\n        else\n        {\n            w[i][n+1]=0;\n            w[n+1][i]=0;\n            f[i][n+1]=1;\n            f[n+1][i]=0;\n        }\n        for (int j=i+1;j<=n;j++)\n            if (c[i]=='0'&&c[j]=='1')\n            {\n                w[i][j]=j-i;\n                w[j][i]=-(j-i);\n                f[i][j]=1;\n                f[j][i]=0;\n            }\n    }\n    int ans=0;\n    bool find=false;\n    while (!find)\n    {\n        int del=check();\n        if (del==-2147483647)\n            find=true;\n        else\n        {\n            ans+=del;\n            int t=n+1;\n            while (t!=0)\n            {\n                f[t][pre[t]]=!f[t][pre[t]];\n                f[pre[t]][t]=!f[pre[t]][t];\n                t=pre[t];\n            }\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1542416085,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4989 \u3010\u4e8c\u8fdb\u5236\u4e4b\u8c1c\u3011"
    },
    {
        "content": "### \u89e3\u6cd5\n\n\u7528\u529b\u8d2a\u5fc3\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u961f\u5217 $q_0$ \u8bb0\u5f55\u6ca1\u88ab\u5339\u914d\u7684 `'0'` \u7684\u4e0b\u6807\uff1b\n\n\u961f\u5217 $q_1$ \u8bb0\u5f55\u5df2\u7ecf\u5339\u914d\u7684 `'1'` \u7684\u4e0b\u6807\u3002\n\n\u4ece\u5de6\u5f80\u53f3\u5904\u7406\u5b57\u7b26\u4e32\uff1a\n\n1. \u9047\u5230 `'0'`\uff0c\u5c31\u628a\u4e0b\u6807 $\\mathrm{idx}_0$ \u653e\u5165\u961f\u5217 $q_0$ \u4e2d\uff1b\n\n2. \u9047\u5230 `'1'`\uff0c\u5982\u679c\u961f\u5217 $q_0$ \u975e\u7a7a\uff0c\u5f39\u51fa\u961f\u9996 $\\mathrm{idx}_0$\uff0c\u628a\u4e0b\u6807\u4e3a $\\mathrm{idx}_0$ \u7684 `'0'` \u4e0e\u5f53\u524d\u4e0b\u6807\u4e3a $\\mathrm{idx}_1$ \u7684 `'1'` \u5339\u914d\uff0c\u52a0\u4e0a\u542f\u53d1\u7cfb\u6570 $\\mathrm{idx}_1 - \\mathrm{idx}_0$\uff0c\u7136\u540e\u628a $\\mathrm{idx}_1$ \u653e\u5165\u961f\u5217 $q_1$ \u4e2d\uff1b\n\n3. \u9047\u5230 `'1'`\uff0c\u5982\u679c\u961f\u5217 $q_0$ \u5df2\u7a7a\uff0c\u8868\u793a\u524d\u9762\u5df2\u7ecf\u6ca1\u6709 `'0'` \u53ef\u4ee5\u8ddf\u5b83\u5339\u914d\u4e86\u3002\u5148\u5c06\u5f53\u524d\u4e0b\u6807 $\\mathrm{idx}_1$ \u4e22\u5165\u961f\u5217 $q_1$ \u4e2d\uff0c\u7136\u540e\u5f39\u51fa $q_1$ \u7684\u961f\u9996 $\\mathrm{idx}_1'$\uff0c\u5c06\u542f\u53d1\u7cfb\u6570\u51cf\u53bb $\\mathrm{idx}_1'$ \u518d\u52a0\u4e0a $\\mathrm{idx}_1$\u3002\uff08\u4e5f\u5c31\u662f\u5c06\u539f\u5148\u5339\u914d\u5230\u4f4d\u4e8e $\\mathrm{idx}_1'$ \u7684 `'1'` \u7684 `'0'` \u5339\u914d\u5230\u4f4d\u4e8e $\\mathrm{idx}_1$ \u7684 `'1'`\uff09\n\n### \u6b63\u786e\u6027\n\n\u53ef\u4ee5\u770b\u5230\u8fd9\u79cd\u505a\u6cd5\u6839\u672c\u6ca1\u53bb\u8003\u8651\u4ea4\u53c9\u7684\u95ee\u9898\u3002\u5b9e\u9645\u4e0a\u4e5f\u6839\u672c\u4e0d\u9700\u8981\u53bb\u8003\u8651\u8fd9\u79cd\u95ee\u9898\u3002\u4ee5\u4e0b\u662f\u89e3\u91ca\uff1a\n\n\u5982\u679c\u4e00\u4e2a `0-1` \u5bf9 $(\\mathrm{idx}_0, \\mathrm{idx}_1)$ \u4e0e\u53e6\u4e00\u4e2a `0-1` \u5bf9 $(\\mathrm{idx}_0', \\mathrm{idx}_1')$ \u4ea4\u53c9\u4e86\uff0c\u5047\u5b9a $\\mathrm{idx}_0 < \\mathrm{idx}_0' < \\mathrm{idx}_1 < \\mathrm{idx}_1'$\uff0c\u5149\u770b\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u5e94\u8be5\u90fd\u80fd\u60f3\u5230\u4e86\uff1a\u628a\u4e24\u4e2a `0-1` \u5bf9\u6362\u6210 $(\\mathrm{idx}_0, \\mathrm{idx}_1')$ \u548c $(\\mathrm{idx}_0', \\mathrm{idx}_1)$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u542f\u53d1\u7cfb\u6570\u8fd8\u662f $\\mathrm{idx}_1 + \\mathrm{idx}_1' - \\mathrm{idx}_0 - \\mathrm{idx}_0'$\u3002\n\n\u7136\u540e\u662f\u600e\u4e48\u4fdd\u8bc1\u5bf9\u5e94\u5173\u7cfb\u6700\u591a\uff1a\n\n\u6839\u636e 2.\uff0c\u6bcf\u6b21\u9047\u5230 `'1'` \u7684\u65f6\u5019\uff0c\u53ea\u8981\u524d\u9762\u8fd8\u6709\u6ca1\u5339\u914d\u7684 `'0'`\uff0c\u5c31\u4e00\u5b9a\u4f1a\u53bb\u5339\u914d\u5b83\u3002\n\n\u5982\u679c\u524d\u9762\u6ca1\u6709\u5339\u914d\u7684 `'0'` \u4e86\uff0c\u4e0d\u4f1a\u6dfb\u52a0\u65b0\u7684 `0-1` \u5bf9\u3002\u56e0\u4e3a\u540e\u9762\u7684 `'0'` \u65e0\u6cd5\u5339\u914d\u524d\u9762\u7684 `'1'`\u3002\n\n\u6700\u540e\u662f\u600e\u4e48\u4fdd\u8bc1\u542f\u53d1\u7cfb\u6570\u6700\u5927\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a `0-1` \u5bf9\uff0c\u5b83\u4f1a\u8d21\u732e $\\mathrm{idx}_1 - \\mathrm{idx}_0$ \u7684\u542f\u53d1\u7cfb\u6570\u3002\n\n\u8ba9 $\\mathrm{idx}_0$ \u5c3d\u53ef\u80fd\u5c0f\u5c31\u53ef\u4ee5\u8ba9\u542f\u53d1\u7cfb\u6570\u5c3d\u53ef\u80fd\u5927\u3002\u7531\u4e8e\u662f\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u5b57\u7b26\u4e32\uff0c\u53c8\u4f7f\u7528\u961f\u5217\u8fd9\u4e00\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u4fdd\u8bc1\u4e86\u961f\u9996\u7684 $\\mathrm{idx}_0$ \u662f\u6700\u5c0f\u7684\u3002\n\n\u8ba9 $\\mathrm{idx}_1$ \u5c3d\u53ef\u80fd\u5927\u5c31\u53ef\u4ee5\u8ba9\u542f\u53d1\u7cfb\u6570\u5c3d\u53ef\u80fd\u5927\u3002\u6839\u636e 3.\uff0c\u5728\u9047\u5230\u5df2\u7ecf\u6ca1\u6709\u672a\u5339\u914d\u7684 `'0'` \u7684\u60c5\u51b5\u4e0b\uff0c\u8ba9\u542f\u53d1\u7cfb\u6570\u51cf\u53bb\u5c3d\u53ef\u80fd\u5c0f\u7684 $\\mathrm{idx}_1'$\uff08\u5df2\u7ecf\u5339\u914d\u7684 `'1'` \u4e2d\u4e0b\u6807\u6700\u5c0f\u7684\uff09\u518d\u52a0\u4e0a\u5f53\u524d\u7684\u4e0b\u6807 $\\mathrm{idx}_1$ \u5c31\u53ef\u4ee5\u8ba9\u542f\u53d1\u7cfb\u6570\u5c3d\u53ef\u80fd\u5927\u3002\u540c\u6837\u5730\uff0c\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u5b57\u7b26\u4e32\uff0c\u5e76\u4f7f\u7528\u961f\u5217\u6765\u7ef4\u62a4\u6700\u5c0f\u7684 $\\mathrm{idx}_1'$\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u662f\u5173\u4e8e 3. \u7684\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\u4e3a\u4ec0\u4e48\u662f\u5148\u63d2\u5165\u518d\u5f39\u51fa\uff1f\n\n\u5982\u679c\u4e4b\u524d\u6839\u672c\u6ca1\u6709\u5339\u914d\u7684 `0-1` \u5bf9\uff0c\u5148\u5f39\u51fa\u518d\u63d2\u5165\u4f1a\u8bd5\u56fe\u5bf9\u7a7a\u7684 $q_1$ \u6267\u884c\u5f39\u51fa\u64cd\u4f5c\uff0c\u800c\u5148\u63d2\u5165\u540e\u5f39\u51fa\u5219\u53ef\u4ee5\u5de7\u5999\u5730\u907f\u5f00\u8fd9\u4e00\u95ee\u9898\u3002\n\n\u81f3\u4e8e\u662f\u5148\u52a0\u8fd8\u662f\u5148\u51cf\uff0c\u5176\u5b9e\u4e0d\u91cd\u8981\u3002\u56e0\u4e3a\u5728\u7c7b\u578b\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u6ea2\u51fa\u4e86\u4e5f\u80fd\u4fee\u6b63\u56de\u6765\u3002\n\n------------\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$ \u7684\u7b97\u6cd5\uff0c\u751a\u81f3\u652f\u6301\u4ece\u5c3e\u7aef\u5728\u7ebf\u63d2\u5165\uff0c\u4e0d\u9700\u8981\u63d0\u524d\u77e5\u9053 $n$ \u7684\u503c\uff0c\u62ff\u6765\u89e3\u8fd9\u9053\u9898\u53ef\u8c13\u7ef0\u7ef0\u6709\u4f59\u4e86\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <stdio.h>\n#include <queue>\n\ntypedef unsigned long long u64;\n\ninline void nextint() {\n\tint ch = getchar();\n\twhile(ch >  '9' || ch <  '0') ch = getchar();\n\twhile(ch >= '0' && ch <= '9') ch = getchar();\n}\n\ninline void run() {\n\t\n\tchar ch = getchar();\n\tstd::queue<u64> zerolist, onelist;\n\t\n\twhile(ch > '1' || ch < '0') ch = getchar();\n\tu64 idx = 0, zerosum = 0, onesum = 0;\n\t\n\twhile(ch >= '0' && ch <= '1') {\n\t\tif(ch == '0')\n\t\t\tzerolist.push(idx);\n\t\telse if(!zerolist.empty()) { // get 1, no-empty\n\t\t\tonesum += idx;\n\t\t\tzerosum += zerolist.front();\n\t\t\tzerolist.pop();\n\t\t\tonelist.push(idx);\n\t\t}\n\t\telse { // get 1, empty\n\t\t\tonelist.push(idx);\n\t\t\tonesum += idx;\n\t\t\tonesum -= onelist.front();\n\t\t\tonelist.pop();\n\t\t}\n\t\t++idx;\n\t\tch = getchar();\n\t}\n\t\n\tprintf(\"%llu\", onesum - zerosum);\n\t\n}\n\nint main() {\n\tnextint(); // \u8fc7\u6ee4 n \u7684\u503c\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\u4e0d\u91cd\u8981\n\trun();\n\treturn 0;\n}\n```\n\n\u55f7\u545c\u4e00\u4e0b~",
        "postTime": 1676930870,
        "uid": 76508,
        "name": "Untitled_unrevised",
        "ccfLevel": 0,
        "title": "P4989 \u4e8c\u8fdb\u5236\u4e4b\u8c1c \u9898\u89e3"
    }
]