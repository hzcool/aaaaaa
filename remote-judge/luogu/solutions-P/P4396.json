[
    {
        "content": "\u5199\u4e00\u4e2a\u611f\u89c9\u6bd4\u8f83\u8be6\u7ec6(\u840c\u65b0\u53cb\u597d\u5411)\u7684\u83ab\u961f\u505a\u6cd5\u2026\u590d\u6742\u5ea6 $O(n\\sqrt m+m\\sqrt n)$ \u3002\n\n\u8003\u8651\u76f4\u63a5\u83ab\u961f\u7684\u8bdd\uff0c\u9700\u8981\u652f\u6301\u67e5\u8be2\u67d0\u4e2a\u503c\u57df\u533a\u95f4\u4e2d\u7684\u6570\uff0c\u9700\u8981\u4e0a\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u8fd9\u6837\u5e26 $\\log$ \u3002\n\n\u4e8e\u662f\u8003\u8651\u4e00\u4e0b\u83ab\u961f\u7684\u672c\u8d28\uff0c\u5373\u83ab\u961f\u7684\u590d\u6742\u5ea6\u5206\u6790\uff0c\u672c\u8d28\u4e0a\u5206\u6790\u7684\u662f $l,r$ \u79fb\u52a8\u7684\u590d\u6742\u5ea6\uff0c\u4e5f\u5c31\u662f\u4fee\u6539\u7684\u590d\u6742\u5ea6\u3002\u6240\u4ee5\u83ab\u961f\u53ef\u4ee5\u672c\u8d28\u4e0a\u770b\u6210\u4e00\u4e2a $O(n\\sqrt m)$ \u4fee\u6539\uff0c$O(m)$ \u8be2\u95ee\u7684\u6570\u636e\u7ed3\u6784\u3002\u89c2\u5bdf\u5230\u8be2\u95ee\u6570\u8f83\u5c11\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u4e00\u4e2a\u53ef\u4ee5\u5feb\u901f\u4fee\u6539\uff0c\u4f4e\u901f\u67e5\u8be2\u7684 ds \u6765\u7ef4\u62a4\u503c\u57df\uff0c\u90a3\u8fd9\u81ea\u7136\u5c31\u662f\u503c\u57df\u5206\u5757\uff0c\u6700\u7ec8\u590d\u6742\u5ea6 $O(n\\sqrt m+m\\sqrt n)$ \u3002\n\n\u4ee5\u4e0b\u662f\u8865\u5145\u5185\u5bb9\uff1a\n____\n\n1\u3001\u83ab\u961f\u7684\u590d\u6742\u5ea6\u5206\u6790\n\n\u4ee4 $m$ \u4e3a\u64cd\u4f5c\u6570\uff0c$B$ \u4e3a\u5757\u5927\u5c0f\u3002\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u5757\u5185\u7684 $l$\uff0c\u5176 $r$ \u662f\u5355\u589e\u7684\uff0c\u4e8e\u662f\u8003\u8651\u5982\u4e0b\uff1a\n\n- \u5de6\u7aef\u70b9\uff0c\u5728\u5757\u5185\u53ef\u80fd\u4f1a\u4e00\u524d\u4e00\u540e\u8fd9\u6837\u8bbe\u7f6e\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u88ab\u5361\u5230\u6700\u6ee1\uff0c\u4e3a $O(m\\cdot B)$ \uff1b\n- \u53f3\u7aef\u70b9\uff0c\u8003\u8651\u5404\u5757\u5185\u7684\u8be2\u95ee\u663e\u7136\u90fd\u53ef\u4ee5\u505a\u5230\u5355\u5757 $O(n)$\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8003\u8651 $m$ \u7684\u8d21\u732e\uff0c\u5373\u53f3\u7aef\u70b9\u79fb\u52a8\u7684\u590d\u6742\u5ea6\u5c31\u662f $\\frac{n}{B}\\cdot n=\\frac{n^2}{B}$\u3002\n\n\u5747\u503c\u4e00\u4e0b\u53d1\u73b0 $m\\cdot B+\\frac{n^2}{B}\\geq 2\\sqrt{n^2m}=O(n\\sqrt m)$ \uff0c\u6b64\u65f6\u6709 $m\\cdot B=\\frac{n^2}{B}$\uff0c\u89e3\u5f97 $B=\\frac{n}{\\sqrt m}$ .\n\n\u6240\u4ee5\u53d6\u5757\u5927\u5c0f\u4e3a $\\frac{n}{\\sqrt m}$ \u65f6\u8fbe\u5230\u7406\u8bba\u6700\u4f18\uff0c\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt m)$ \u3002\n____\n\n2\u3001\u503c\u57df\u5206\u5757\u7684\u6b63\u786e\u6253\u5f00\u65b9\u5f0f\n\n\u89c2\u5bdf\u5230\u6211\u4eec\u672c\u8d28\u4e0a\u9700\u8981\u4e00\u4e2a\u503c\u57df\u4e0a $O(1)$ \u5355\u70b9\u52a0/\u51cf\uff0c$O(\\sqrt n)$ \u533a\u95f4\u8be2\u95ee\u7684\u7ed3\u6784\uff0c\u90a3\u5c31\u662f\u666e\u901a\u7684\u5206\u5757\u4e86\u3002\u8003\u8651\u5206\u5757\u7ef4\u62a4\u5757\u5185\u548c\u548c\u5355\u70b9\u503c\uff0c\u4fee\u6539\u7684\u65f6\u5019 $O(1)$ \u4fee\u6539\u70b9\u503c\u548c\u5757\u503c\uff0c\u8be2\u95ee\u5c31\u662f\u6734\u7d20\u8be2\u95ee(for \u8fc7\u53bb)\u5373\u53ef\u3002\n\n____\n\n\u7136\u540e\u672c\u9898\u9700\u8981\u5206\u522b\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570\u548c\u662f\u5426\u51fa\u73b0\uff0c\u5206\u522b\u7ef4\u62a4\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std ;\n\nconst int N = 200010 ;\n\nvoid debug(int *tp, int minn, int maxn, char c){\n    for (int i = minn ; i <= maxn ; ++ i)\n        cout << tp[i] << \" \" ;  cout << c ;\n}\n\nint B ; \nint V ; \nint n, m ;\nint bl[N] ;\nint blv[N] ;\nint res[N] ;\nint ans[N] ;\nint sum[N] ;\nint sumr[N] ;\nint sump[N] ;\nint base[N] ;\n\nstruct query{\n\tint id ; \n\tint l, r ; \n\tint a, b ; \n}q[N] ;\n\nbool comp(query a, query b){\n\treturn (bl[a.l] ^ bl[b.l]) ? bl[a.l] < bl[b.l] : \n\t\t   ((bl[a.l] & 1) ? a.r < b.r : a.r > b.r) ;\n}\nvoid del(int p){\n\tsump[base[p]] -- ; \n\tsumr[blv[base[p]]] -- ;\n\tif (sump[base[p]] <= 0) -- sum[blv[base[p]]]  ; \n}\nvoid add(int p){\n\tsump[base[p]] ++ ; \n\tsumr[blv[base[p]]] ++ ; \n\tif (sump[base[p]] <= 1) ++ sum[blv[base[p]]]  ; \n}\nint get_ans(int l, int r){\n\tint ret = 0 ; \n\tr = min(r, V) ; \n\tif (l > V) return 0 ; \n\tint nl = blv[l] + 1 ; \n\tint nr = blv[r] - 1 ;\n\tif (blv[l] == blv[r]){\n\t\tfor (int i = l ; i <= r ; ++ i)\n\t\t\tret += (bool)sump[i] ; return ret ; \n\t}\n\tfor (int i = nl ; i <= nr ; ++ i) ret += sum[i] ;\n\tfor (int i = l ; blv[i] == blv[l] && l <= V ; ++ i) ret += (bool)sump[i] ;\n\tfor (int i = r ; blv[i] == blv[r] && r >= 0 ; -- i) ret += (bool)sump[i] ;\n\treturn ret ;\n}\nint get_res(int l, int r){\n\tint ret = 0 ; \n\tr = min(r, V) ; \n\tif (l > V) return 0 ; \n\tint nl = blv[l] + 1 ; \n\tint nr = blv[r] - 1 ;\n\tif (blv[l] == blv[r]){\n\t\tfor (int i = l ; i <= r ; ++ i)\n\t\t\tret += sump[i] ; return ret ; \n\t}\n\tfor (int i = nl ; i <= nr ; ++ i) ret += sumr[i] ;\n\tfor (int i = l ; blv[i] == blv[l] && l <= V ; ++ i) ret += sump[i] ;\n\tfor (int i = r ; blv[i] == blv[r] && r >= 0 ; -- i) ret += sump[i] ;\n\treturn ret ;\n}\nint main(){\n\tcin >> n >> m ; \n\tB = 1.0 * n / sqrt(m) + 1 ; \n\tfor (int i = 1 ; i <= n ; ++ i)\n\t\tscanf(\"%d\", &base[i]), V = max(V, base[i]), bl[i] = i / B ; \n\tfor (int i = 1 ; i <= m ; ++ i)\n\t\tscanf(\"%d%d%d%d\", &q[i].l, &q[i].r, &q[i].a, &q[i].b), q[i].id = i ; \n\tsort(q + 1, q + m + 1, comp) ; \n\tint l = 1, r = 0 ; B = sqrt(V) + 1 ; \n\tfor (int i = 0 ; i <= V ; ++ i) blv[i] = i / B ; \n\tfor (int i = 1 ; i <= m ; ++ i){\n\t\tint a = q[i].a, b = q[i].b ; \n\t\twhile (l < q[i].l) del(l ++) ; \n\t\twhile (l > q[i].l) add(-- l) ; \n\t\twhile (r < q[i].r) add(++ r) ;\n\t\twhile (r > q[i].r) del(r --) ;\n\t\tres[q[i].id] = get_res(a, b) ;\n\t\tans[q[i].id] = get_ans(a, b) ; \n\t}\n\tfor (int i = 1 ; i <= m ; ++ i) \n\t\tprintf(\"%d %d\\n\", res[i], ans[i]) ; return 0 ; \n}\n```\n\n\u5feb\u6765\u5938\u6211\u7801\u98ce! (\u8d85\u81ea\u8c6a\n\n~~\u6211\u662f\u4e00\u4e2a\u521a\u5f00\u59cb\u5b66 lxl \u6df1\u523b\u7406\u8bba\u7684\u840c\u65b0\uff0c\u4e0d\u8981 d \u6211~~",
        "postTime": 1586623668,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u90fd\u662f\u5206\u5757\u7684\uff0c\u90a3\u672c\u849f\u84bb\u6765\u53d1\u4e00\u4e2a\u7406\u8bba\u4e0a\u590d\u6742\u5ea6\u66f4\u597d\u7684cdq\u5206\u6cbb\u5427\u3002\n\n**[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/474D/)**\n\n\u505a\u8fc7[P1972](https://www.luogu.org/problemnew/show/P1972)\u7684\u53ef\u80fd\u4f1a\u53d1\u73b0\u6b64\u9898\u548c\u90a3\u9898\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u591a\u4e86\u4e00\u4e2a\u6570\u5b57\u5927\u5c0f\u7684\u9650\u5236\u3002\u4e0d\u8fc7\u601d\u8def\u662f\u4e00\u6837\u7684\u3002\u5177\u4f53\u6765\u8bb2\uff0c\u5148\u79bb\u6563\u5316\uff0c\u7136\u540e\u8bb0\u5f55\u4e00\u4e2apre[]\u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u6570\u4e4b\u524d\u4e00\u6b21\u51fa\u73b0\u5728\u54ea\u91cc\u3002\u4e8e\u662f\u672c\u9898\u7684\u7b2c\u4e8c\u95ee\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\n\n> \u8f93\u5165(L,R,A,B)\uff0c\u8f93\u51fa\u6709\u591a\u5c11\u4e2ax\u6ee1\u8db3\uff1a  \nL<=x<=R; A<=a[x]<=B; 0<=pre[x]<=L-1\n\n\u4e00\u770b\u5c31\u662f\u4e00\u4e2a\u4e09\u7ef4\u6570\u70b9\uff0c\u76f4\u63a5\u4e0acdq\u3002\n\n\u7b2c\u4e00\u95ee\u5462\uff1f\u5728\u5f52\u5e76\u7684\u65f6\u5019\u76f4\u63a5\u628a\u5de6\u8fb9\u5df2\u7ecf\u5f52\u5e76\u7684\u6570\u91cf\u52a0\u5230\u53f3\u8fb9\u7684\u7b54\u6848\u4e2d\u5c31\u884c\u4e86\uff0c\u76f8\u5f53\u4e8e\u4e8c\u7ef4\u6570\u70b9\u3002\n\nC++17\u4ee3\u7801\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define maxn 100010\nusing namespace std;\nint n,m,a[maxn],b[maxn],h[maxn],ans[maxn],ans1[maxn],c[maxn];\nstruct qry{int x,y,z,f,id;};\nvector<qry> v,w;\nbool operator <=(qry a,qry b){\n    return pair(a.y,a.z)<=pair(b.y,b.z);\n}\nvoid ins(int p,int v){for(;p<=n;p+=p&-p)c[p]+=v;}\nint Qry(int p){int r=0;for(;p;p&=p-1)r+=c[p];return r;}\nvoid CDQ(int l,int r){\n    if(l+1>=r)return;\n    int mid=l+r>>1,i=l,j=mid,cnt=0;\n    CDQ(l,mid),CDQ(mid,r);\n    w.clear();\n    while(i<mid || j<r)if(i<mid && (j==r || v[i]<=v[j])){\n        w.push_back(v[i]);\n        if(!v[i].f)ins(v[i].z+1,1),cnt++;\n        i++;\n    }else{\n        w.push_back(v[j]);\n        if(v[j].f)\n            ans[v[j].id]+=v[j].f*Qry(v[j].z+1),\n            ans1[v[j].id]+=v[j].f*cnt;\n        j++;\n    }\n    for(int i=l;i<mid;i++)if(!v[i].f)ins(v[i].z+1,-1);\n    for(int i=l;i<r;i++)v[i]=w[i-l];\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%d\",a+i),b[i]=a[i];\n    sort(b+1,b+1+n);\n    for(int i=1;i<=n;i++){\n        int pre=h[a[i]=lower_bound(b+1,b+1+n,a[i])-b];\n        h[a[i]]=i;\n        v.push_back({i,a[i],pre,0,0});\n    }\n    for(int i=1;i<=m;i++){\n        int l,r,A,B;\n        scanf(\"%d%d%d%d\",&l,&r,&A,&B);\n        A=lower_bound(b+1,b+1+n,A)-b;\n        B=upper_bound(b+1,b+1+n,B)-b-1;\n        v.insert(v.end(),{{r,B,l-1,1,i},{l-1,A-1,l-1,1,i},\n                {l-1,B,l-1,-1,i},{r,A-1,l-1,-1,i}});\n    }\n    stable_sort(v.begin(),v.end(),[](qry a,qry b){\n        return tuple(a.x,a.y,a.z)<tuple(b.x,b.y,b.z);\n    });\n    //\u4e3a\u4ec0\u4e48\u662fstable_sort?\u6211\u4e5f\u4e0d\u77e5\u9053\u3002\u4f46\u662f\u7a33\u4e00\u70b9\u3002\n    CDQ(0,v.size());\n    for(int i=1;i<=m;i++)\n        printf(\"%d %d\\n\",ans1[i],ans[i]);\n    return 0;\n}\n```",
        "postTime": 1537619648,
        "uid": 30093,
        "name": "cosmicAC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c \u6211\u975e\u5e38\u559c\u6b22\u66b4\u529b\u6570\u636e\u7ed3\u6784\uff0c \u4e8e\u662f\u5c31\u7528\u5206\u5757A\u4e86\u6b64\u9898\n\n\u8fd9\u91cc\u63d0\u4f9b\u7684\u662f**\u652f\u6301\u5728\u7ebf**\u7684**\u7eaf\u5206\u5757\u505a\u6cd5** \uff0c \u800c**\u4e0d\u662f**\u4e3b\u6d41\u7684\u83ab\u961f\u505a\u6cd5\n\n\u5177\u4f53\u505a\u6cd5\u662f\u5148\u5bf9\u6570\u5217\u5206\u5757\uff0c \u518d\u5bf9\u503c\u57df\u5206\u5757\uff0c \u7ef4\u62a4\u4e09\u4e2a\u6570\u7ec4cnt1, cnt2, cnt3\n\n- cnt3(i,j,k)\u8868\u793a\u7b2ci\u5230\u7b2cj\u4e2a\u5757\u4e2d\u7b2ck\u4e2a\u503c\u57df\u5757\u7684\u6570\u7684\u79cd\u7c7b\u6570 \n\n- cnt2(i,j)\u8868\u793a\u524di\u4e2a\u5757\u4e2dj\u8fd9\u4e2a\u6570\uff08\u79bb\u6563\u540e)\u7684\u4e2a\u6570\n\n- cnt1(i,j)\u8868\u793a\u524di\u4e2a\u5757\u4e2d\u7b2cj\u4e2a\u503c\u57df\u5757\u4e2d\u6570\u7684\u4e2a\u6570 \n\n~~\u6211\u504f\u8981\u53cd\u7740\u653e~~\n\n\u663e\u7136\u8fd9\u4e2a\u9884\u5904\u7406\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fn sqrt n \u7684\uff08\u5177\u4f53\u7684\u590d\u6742\u5ea6\u5728\u7a0b\u5e8f\u7684\u6ce8\u91ca\u4e2d\u6709\u5199\uff09\n\n\u7136\u540e\u5bf9\u4e8e\u8be2\u95ee\u4e24\u70b9\u5728\u76f8\u90bb\u6570\u5217\u5757\u7684\u65f6\u5019\u76f4\u63a5\u66b4\u529b\u6c42\uff0c \u5426\u5219\u7684\u8bdd\u5148\u626b\u4e00\u904d\u4e24\u904d\u7684\u6563\u5757\uff08\u6570\u5217\u5757\uff09 \u7edf\u8ba1\u4e00\u4e0b\u7b26\u5408\u8981\u6c42\u7684\u989c\u8272\u4e2a\u6570\u548c\u5176\u4ed6\u4fe1\u606f\uff08\u8fd9\u91cc\u53ef\u4ee5\u5f00\u4e00\u4e9b\u4e34\u65f6\u6570\u7ec4\u6765\u5b8c\u6210\u7b54\u6848\u7684\u7edf\u8ba1\uff0c \u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u770b\u770b\u6574\u5757\u600e\u6837\u5904\u7406\uff1a \n\n\u5982\u679c\u4e0a\u4e0b\u754c\u5728\u76f8\u90bb\u7684\u503c\u57df\u5757\u91cc\u6211\u4eec\u66b4\u529b\u626b\u4e00\u904d\u503c\u57df\u5757\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u4e86 \uff0c \u5426\u5219\u6211\u4eec\u53ef\u4ee5\u5148\u626b\u4e00\u4e0b\u4e0a\u4e0b\u4e24\u4e2a\u6563\u5757\uff08\u503c\u57df\u5757\uff09\uff0c \u7136\u540e\u518d\u626b\u4e00\u4e0b\u4e2d\u95f4\u7684\u6574\u5757\uff08\u503c\u57df\u5757\uff09\uff0c \u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\u5c31\u53ef\u4ee5\u5566qwqwq\uff08\u7edf\u8ba1\u7b54\u6848\u7684\u65b9\u6cd5\u4e00\u770b\u5c31\u4f1a\uff0c \u5404\u4f4d\u795e\u4ed9\u76f4\u63a5\u770b\u4ee3\u7801\u5c31\u597d\u4e86\uff0c \u5c0f\u849f\u84bb\u8fd9\u91cc\u5c31\u4e0d\u5570\u55e6\u4e86~~\u8bd5\u56fe\u63a9\u76d6\u61d2\u7684\u4e8b\u5b9e~~\uff09\n\n\u5177\u4f53\u5b9e\u73b0\u4ee3\u7801\u91cc\u90fd\u6709\u6ce8\u91ca\uff0c \u5982\u679c\u6709\u4ec0\u4e48\u7591\u95ee\u7684\u8bdd\u79c1\u4fe1\u5c0f\u849f\u84bb\u5c31\u597d\n\n\u9884\u5904\u7406\u590d\u6742\u5ea6\u662fn sqrt(n), \u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662fsqrt\uff0c\u552f\u4e00\u7684\u7f3a\u70b9\u5c31\u662f\u5e38\u6570\u7565\u5927\uff0c \u5982\u679c\u60f3\u4e0d\u5f00O2\u8fc7\u6700\u540e\u4e00\u4e2a\u70b9\u53ef\u80fd\u8981\u5361\u5361\u5e38\uff0c \u8fd9\u91cc\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\u5c31\u628a\u4fbf\uff08chang\uff09\u4e8e\uff08shu\uff09\u7406\uff08ju\uff09\u89e3\uff08da\uff09\u7684\u7248\u672c\u653e\u4e0a\u6765\u5566\u3002\n\n**\u90a3\u4e48\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath> \n#include <algorithm>\n#define maxn 100010\n#define maxs 400\n#define re register\n#define FOR(i, l, r) for(re int i = l; i <= r; ++i)\nusing namespace std;\n\nint n, m, c, r, t, x, y, low, high;\nint sq1, sq2;\nint a[maxn], z[maxn], b1[maxn], b2[maxn], cnt1[maxs][maxs], cnt2[maxs][maxn];\nunsigned short cnt3[maxs][maxs][maxs];\nint col[maxn], cn[maxn], blkcol[maxn];\n\ninline void in(int &x){\n    x=0;char c=getchar();\n    while(c<'0'||c>'9'){\n        c=getchar();\n    }\n    while(c<='9'&&c>='0'){\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n} \n\nvoid query(int x, int y, int k1, int k2) {\n    if(b1[x] == b1[y] || b1[y] == b1[x]+1) { //x\u548cy\u5728\u540c\u4e00\u4e2a\u5757\u91cc\u6216\u5728\u76f8\u90bb\u7684\u5757\u91cc \n        int ans1 = 0, ans2 = 0;\n        FOR(i, x, y) {\n            ++col[a[i]];\n            if(a[i] >= k1 && a[i] <= k2 && col[a[i]] == 1)\n              ++ans2;\n            if(a[i] >= k1 && a[i] <= k2)\n              ++ans1;\n        }\n        printf(\"%d %d\\n\", ans1, ans2);\n        FOR(i, x, y) \n          --col[a[i]];\n        return;\n    }\n    \n    FOR(i, x, min(y, b1[x]*sq1)) { //x, y \u6240\u5728\u7684\u5757\u4e0d\u76f8\u90bb \n        ++col[a[i]]; //\u5355\u4e2a\u989c\u8272\u7684\u4e2a\u6570 \n        ++blkcol[b2[a[i]]]; //\u503c\u57df\u5757\u5185\u989c\u8272\u7684\u4e2a\u6570 \n        if(col[a[i]]+cnt2[b1[y]-1][a[i]]-cnt2[b1[x]][a[i]] == 1)\n          ++cn[b2[a[i]]]; //\u7edf\u8ba1\u989c\u8272\u79cd\u7c7b\u6570 \n    }\n    FOR(i, (b1[y]-1)*sq1+1, y) {\n        ++col[a[i]];\n        ++blkcol[b2[a[i]]];\n        if(col[a[i]]+cnt2[b1[y]-1][a[i]]-cnt2[b1[x]][a[i]] == 1)\n          ++cn[b2[a[i]]]; \n    } \n    \n    if(b2[k1] == b2[k2] || b2[k1]+1 == b2[k2]) { //\u4e0a\u4e0b\u754c\u5728\u540c\u4e00\u4e2a\u503c\u57df\u5757\u91cc\u6216\u4e0a\u4e0b\u754c\u5728\u76f8\u90bb\u503c\u57df\u5757\u91cc \n        int ans1 = 0, ans2 = 0;\n        FOR(i, k1, k2) {  //\u76f4\u63a5\u679a\u4e3e\u503c\u57df \n            if(col[i]+cnt2[b1[y]-1][i]-cnt2[b1[x]][i] > 0) \n              ++ans2;\n            ans1 += col[i]+cnt2[b1[y]-1][i]-cnt2[b1[x]][i]; \n        }\n        printf(\"%d %d\\n\", ans1, ans2);\n    }\n    else { //x \u548cy\u7684\u5757\u4e0d\u76f8\u90bb\u4e14\u4e0a\u4e0b\u754c\u503c\u57df\u5757\u4e0d\u76f8\u90bb \n        int ans1 = 0, ans2 = 0;\n        FOR(i, k1, b2[k1]*sq2) {\n            if(col[i]+cnt2[b1[y]-1][i]-cnt2[b1[x]][i] > 0) {\n                ++ans2;\n            }\n              \n            ans1 += col[i]+cnt2[b1[y]-1][i]-cnt2[b1[x]][i];\n        }\n        FOR(i, (b2[k2]-1)*sq2+1, k2) {\n            if(col[i]+cnt2[b1[y]-1][i]-cnt2[b1[x]][i] > 0) {\n                 ++ans2;\n            }\n             \n            ans1 += col[i]+cnt2[b1[y]-1][i]-cnt2[b1[x]][i];\n        }\n        \n        FOR(i, b2[k1]+1, b2[k2]-1) { //\u6574\u503c\u57df\u5757 \n            ans1 += blkcol[i]+cnt1[b1[y]-1][i]-cnt1[b1[x]][i]; //\u7edf\u8ba1\u603b\u4e2a\u6570 \n            ans2 += cn[i]+cnt3[b1[x]+1][b1[y]-1][i]; //\u79cd\u7c7b\u6570 \n        }\n        printf(\"%d %d\\n\", ans1, ans2);\n    }\n    \n    FOR(i, x, min(y, b1[x]*sq1)) { //\u6d88\u9664\u5f71\u54cd \n        --col[a[i]]; \n        --blkcol[b2[a[i]]]; \n        if(col[a[i]]+cnt2[b1[y]-1][a[i]]-cnt2[b1[x]][a[i]] == 0)\n          --cn[b2[a[i]]]; \n    }\n    FOR(i, (b1[y]-1)*sq1+1, y) {\n        --col[a[i]];\n        --blkcol[b2[a[i]]];\n        if(col[a[i]]+cnt2[b1[y]-1][a[i]]-cnt2[b1[x]][a[i]] == 0)\n          --cn[b2[a[i]]]; \n    } \n}\n\nint main() {\n    //cnt3(i,j,k)\u8868\u793a\u7b2ci\u5230\u7b2cj\u4e2a\u5757\u4e2d\u7b2ck\u4e2a\u503c\u57df\u5757\u7684\u6570\u7684\u79cd\u7c7b\u6570 \n    //cnt2(i,j)\u8868\u793a\u524di\u4e2a\u5757\u4e2dj\u8fd9\u4e2a\u6570\uff08\u79bb\u6563\u540e)\u7684\u4e2a\u6570\n    //cnt1(i,j)\u8868\u793a\u524di\u4e2a\u5757\u4e2d\u7b2cj\u4e2a\u503c\u57df\u5757\u4e2d\u6570\u7684\u4e2a\u6570 \n    in(n), in(m);\n    sq1 = sqrt(n);\n    FOR(i, 1, n)\n      in(a[i]), z[++z[0]] = a[i];\n    sort(z+1, z+z[0]+1);\n    z[0] = unique(z+1, z+z[0]+1)-z-1;\n    sq2 = sqrt(z[0]);\n    FOR(i, 1, z[0])\n      b2[i] = (i-1)/sq2+1;\n    FOR(i, 1, n) {\n        a[i] = lower_bound(z+1, z+z[0]+1, a[i])-z; //\u79bb\u6563 \n        b1[i] = (i-1)/sq1+1;\n        ++cnt1[b1[i]][b2[a[i]]];\n        ++cnt2[b1[i]][a[i]];\n    }\n    FOR(i, 1, b1[n]) {\n        FOR(j, 1, b2[z[0]])  //\u5904\u7406cnt1\u7684\u524d\u7f00\u548c \u603b\u590d\u6742\u5ea6On \n          cnt1[i][j] += cnt1[i-1][j];\n        FOR(j, 1, z[0]) //\u5904\u7406cnt2\u7684\u524d\u7f00\u548c  \u603b\u590d\u6742\u5ea6O(n sqrt(n)) \n          cnt2[i][j] += cnt2[i-1][j];\n        \n        FOR(j, i, b1[n]) { //\u5904\u7406\u51facnt3\u7684\u503c \u603b\u590d\u6742\u5ea6O(n sqrt(n)) \n            FOR(k, (j-1)*sq1+1, min(n, j*sq1)) {\n                ++col[a[k]];\n                if(col[a[k]] == 1) {\n                     ++cnt3[i][j][b2[a[k]]];\n                }\n            }\n        }\n        \n        FOR(j, i, b1[n])\n          FOR(k, 1, b2[z[0]])\n            cnt3[i][j][k] += cnt3[i][j-1][k];\n        \n        FOR(j, i, b1[n]) { //\u6d88\u9664\u5f71\u54cd \n            FOR(k, (j-1)*sq1+1, min(n, j*sq1)) {\n                --col[a[k]];\n            }\n        }\n    }\n    \n    FOR(i, 1, m) {\n        in(x), in(y), in(low), in(high);\n        if(low < z[1] && high < z[1])  { //\u51e0\u79cd\u7279\u6b8a\u60c5\u51b5\u7684\u5224\u5b9a\n            puts(\"0 0\");\n          \tcontinue;\n        } \n        if(low > z[z[0]])  {\n            puts(\"0 0\");\n            continue;\n        }\n        low = lower_bound(z+1, z+z[0]+1, low)-z;\n        high = upper_bound(z+1, z+z[0]+1, high)-z-1;  \n        if(low == high+1) {\n            puts(\"0 0\");\n            continue;\n        }\n        query(x, y, low, high); \n    }\n}\n```\n\n**\u5b8c\u7ed3\u6492\u82b1qwqwq**",
        "postTime": 1548151872,
        "uid": 66965,
        "name": "Juan_feng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u4e00\u5806\u5206\u5757\u5440\u3002\u3002\u4e09\u7ef4\u6570\u70b9\u4e0d\u5e94\u8be5\u662f\u5957\u8def\u79bb\u7ebf/\u53ef\u6301\u4e45\u5316+\u6811\u5957\u6811\u4e48\u3002\u3002\n\n\u4eb2\u6d4b\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u53ef\u8fc7\n\n\u590d\u6742\u5ea6$O(nlog^2n)$\uff0c\u7a7a\u95f4$O(nlogn)$(\u79bb\u7ebf)\n\n```cpp\n#include<bits/stdc++.h> \n#define Pair pair<int, int>\n#define MP(x, y) make_pair(x, y)\n#define fi first\n#define se second\n#define Fin(x) {freopen(#x\".in\",\"r\",stdin);}\n#define Fout(x) {freopen(#x\".out\",\"w\",stdout);}\nusing namespace std;\nconst int MAXN = 4e5 + 10, SS = 1e7 + 10;\ninline int read() {\n    char c = getchar(); int x = 0, f = 1;\n    while(c < '0' || c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\nint N, M, a[MAXN], pre[MAXN], las[MAXN], Lim = 1e5, tot;\nPair ans[MAXN];\n#define lb(x) (x & (-x))\nstruct BIT {\n\tint T[MAXN];\n\tvoid Add(int x, int v) {\n\t\tx++;\n\t\twhile(x <= Lim) T[x] += v, x += lb(x); \n\t}\n\tint sum(int x) {\n\t\tx++;\n\t\tint ans = 0;\n\t\twhile(x) ans += T[x], x -= lb(x);\n\t\treturn ans;\n\t}\n\tint Query(int x, int y) {return sum(y) - sum(x - 1);}\n}Q1;\nstruct query {\n\tint k, a, b, id, p;\n\tbool operator < (const query &rhs) const {\n\t\treturn k < rhs.k;\t\n\t}\n}q[MAXN];\nint root[SS], sum[SS], ls[SS], rs[SS], cnt;\nvoid update(int k) {\n\tsum[k] = sum[ls[k]] + sum[rs[k]];\n}\nvoid insert(int &k, int l, int r, int p, int v) {\n\tif(!k) k = ++cnt;\n\tif(l == r) {sum[k]++; return ;}\n\tint mid = l + r >> 1;\n\tif(p <= mid) insert(ls[k], l, mid, p, v);\n\telse insert(rs[k], mid + 1, r, p, v);\n\tupdate(k);\n}\nint Query(int k, int l, int r, int ql, int qr) {\n\tif(!k) return 0;\n\tif(ql <= l && r <= qr) return sum[k];\n\tint mid = l + r >> 1;\t\n\tif(ql > mid) return Query(rs[k], mid + 1, r, ql, qr);\n\telse if(qr <= mid) return Query(ls[k], l, mid, ql, qr);\n\telse return Query(ls[k], l, mid, ql, qr) + Query(rs[k], mid + 1, r, ql, qr);\n}\nvoid Add(int x, int v) {\n\tx++;\n\twhile(x <= Lim) insert(root[x], 0, Lim, v, 1), x += lb(x); \n}\nint Query(int x, int a, int b) {\n\tx++;\n\tint ans = 0;\n\twhile(x) ans += Query(root[x], 0, Lim, a, b), x -= lb(x);\n\treturn ans;\n}\nvoid Solve() {\n\tint x = 0;\n\tfor(int i = 1; i <= tot; i++) {\n\t\twhile(x < q[i].k) \n\t\t\tQ1.Add(a[++x], 1), Add(pre[x], a[x]);\n\t\tans[abs(q[i].id)].fi += (q[i].id / (abs(q[i].id))) * Q1.Query(q[i].a, q[i].b);\n\t\tans[abs(q[i].id)].se += (q[i].id / (abs(q[i].id))) * Query(q[i].p, q[i].a, q[i].b);\n\t}\n}\nsigned main() {\n\tN = read(); M = read();\n\tfor(int i = 1; i <= N; i++) {\n\t\ta[i] = read();\n\t\tpre[i] = las[a[i]]; las[a[i]] = i;\n\t}\n\tfor(int i = 1; i <= M; i++) {\n\t\tint l = read(), r = read(), a = read(), b = read();\n\t\tq[++tot].k = l - 1; q[tot].a = a; q[tot].b = b; q[tot].id = -i; q[tot].p = l - 1;\n\t\tq[++tot].k = r;     q[tot].a = a; q[tot].b = b; q[tot].id = i;  q[tot].p = l - 1;\n\t}\n\tsort(q + 1, q + tot + 1); \n\tSolve();\n\tfor(int i = 1; i <= M; i++) printf(\"%d %d\\n\", ans[i].fi, ans[i].se);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1549607822,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "# \u83ab\u961f+\u5206\u5757\n\n------------\n\u597d\u50cf\u5f88\u591a\u5199\u83ab\u961f+\u5206\u5757\u7684\uff0c\u4f46\u662f\u4ee3\u7801\u53ef\u8bfb\u6027\u4e2a\u4eba\u611f\u89c9\u6709\u70b9\u5dee\uff0c\u5c31\u5199\u4e86\u4e2a\u7801\u98ce\u5947\u7279\u7684\u7248\u672c\u7ed9\u5404\u4f4d\u5e26\u54e5\u5eb7\u5eb7\u3002\n\n\n------------\n\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u5ba1\u6838\u5927\u5927\u7ed9\u4e2a\u8fc78 \uff01\u10da(\u00b0\u25d5\u2035\u01b9\u2032\u25d5\u10da) ~~\u8bdd\u8bf4\u8fd9\u9898\u597d\u6c34~~\n\n------------\n\u5bf9\u4e8e\u672c\u9898\uff0c\u5728\u5bdf\u89c9\u4e86\u51fa\u73b0\u6570\u5b57\u4e2a\u6570\u65f6\u5c31\u5f88\u5bb9\u6613\u5bdf\u89c9\u5230\uff08~~\u6740\u610f\u611f\u77e5~~\uff09\u53ef\u4ee5\u7528\u83ab\u961f\u5904\u7406\uff08\u79bb\u7ebf\uff09\uff0c\u4f46\u662f\u5bf9\u4e8e\u533a\u95f4\u5185\u7b26\u5408\u6761\u4ef6\u7684x\u7684\u603b\u4e2a\u6570\u5462\uff1f\u60f3\u5230\u53ef\u4ee5\u7528\u83ab\u961f\u548c\u5206\u5757\u6709\u673a\u7ed3\u5408\u5904\u7406\uff0c\u5c31\u53ef\u4ee5A\u6389\u672c\u9898\u4e86\uff01\n\n\n\n------------\n\u770b\u4ee3\u7801\uff0cGKD\n\n\n------------\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+7;\nint n,m,q[N],a[N],l=1,r,blo;\nint appnum[N],appq[N],tot[N];\n\nstruct node\n{\n    int l,r,a,b,id;\n}ask[N];//\u5b58\u50a8\u8f93\u5165 \n\nstruct node1\n{\n    int a1,a2;\n}ans[N];//\u50a8\u5b58\u7b54\u6848\uff0c\u6709\u4e24\u4e2a\u8f93\u51fa\uff0c\u4e00\u4e2a\u662f\u79cd\u7c7b\u6570\uff0c\u4e00\u4e2a\u662f\u4e2a\u6570\n\nbool cmp(node x,node y)\n{\n\tif(q[x.l]!=q[y.l])\n\treturn q[x.l]<q[y.l];\n    else return x.r<y.r;\n}\n\nvoid add(int x)\n{\n    appnum[x]++;\n    appq[q[x]]++;\n    if(appnum[x]==1) tot[q[x]]++;\n}\n \nvoid del(int x)\n{\n    appnum[x]--;\n    appq[q[x]]--;\n    if(appnum[x]==0) tot[q[x]]--;\n}\n\nvoid getans(int a,int b,int k)//\u5206\u5757\u627e\u7b54\u6848 \n{\n    for(int i=a;i<=min(b,q[a]*blo);i++)\n        if(appnum[i]) ans[k].a1+=appnum[i],ans[k].a2++;\n    \n    if(q[a]!=q[b])\n        for(int i=(q[b]-1)*blo+1;i<=b;i++)\n            if(appnum[i]) ans[k].a1+=appnum[i],ans[k].a2++;\n    \n    for(int i=q[a]+1;i<=q[b]-1;i++)\n    { \n        ans[k].a1+=appq[i];\n        ans[k].a2+=tot[i];\n    }\n}\n\ninline int read()\n{\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\n\nint main()\n{\n\t//freopen(\"homework.in\",\"r\",stdin);\n\t//freopen(\"homework.out\",\"w\",stdout);\n\n    n=read();m=read();\n    blo=sqrt(n);\n    \n    for(int i=1;i<=n;i++)\n    {\n \t\ta[i]=read();\n\t\tq[i]=(i-1)/blo+1;//\u5206\u5757\n\t}\n\t\n    for(int i=1;i<=m;i++)\n    {\n        ask[i].l=read();ask[i].r=read();ask[i].a=read();ask[i].b=read();\n        ask[i].id=i;//\u8f93\u5165\u6570\u636e\n    }\n    \n    sort(ask+1,ask+m+1,cmp);//\u5bf9\u67e5\u8be2\u533a\u95f4\u7684\u6392\u5e8f\u8282\u7ea6\u65f6\u95f4\uff0c\u83ab\u961f\u57fa\u64cd\n    \n    for(int i=1;i<=m;i++)\n    {\t//\u83ab\u961f\u5148\u7edf\u8ba1 \n        while(r<ask[i].r)\tadd(a[++r]);\n        while(r>ask[i].r)\tdel(a[r--]);\n        while(l>ask[i].l)\tadd(a[--l]);\n        while(l<ask[i].l)\tdel(a[l++]);\n        \n        getans(ask[i].a,ask[i].b,ask[i].id);\n    }\n    \n    for(int i=1;i<=m;i++)\n        printf(\"%d %d\\n\",ans[i].a1,ans[i].a2);\n        \n    return 0;\n}\n```\n",
        "postTime": 1568204070,
        "uid": 138095,
        "name": "3lizabeth",
        "ccfLevel": 0,
        "title": "\u83ab\u961f+\u5206\u5757\u7684\u6709\u673a\u7ed3\u5408"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u51fa\u4e00\u4e2a\u9759\u6001\u533a\u95f4\u548c\u591a\u4e2a\u8be2\u95ee\uff0c\u8be2\u95ee\u5206\u4e3a\u4e0b\u9762\u4e24\u79cd\uff1a\n\n- \u5728\u533a\u95f4 $[l,r]$ \u4e2d\u6709\u591a\u5c11\u4e2a $i$\uff0c\u4f7f\u5f97 $a_i \\in [a,b]$\uff1b   \n- \u5728\u533a\u95f4 $[l,r]$ \u4e2d\u6709\u591a\u5c11\u79cd $a_i(i\\in[l,r])$\uff0c\u4f7f\u5f97 $a_i \\in [a,b]$\u3002\n\n\u9996\u5148\u8003\u8651\u7b2c\u4e8c\u4e2a\u95ee\u9898\u7684\u5f31\u5316\u7248\uff0c\u6211\u4eec\u8981\u6c42\u533a\u95f4 $[l,r]$ \u79cd\u5143\u7d20\u7684\u79cd\u6570\u3002\u663e\u7136\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u83ab\u961f\u89e3\u51b3\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u52a0\u4e0a\u4e86\u5bf9\u5143\u7d20\u7684\u9650\u5236\u3002\u8003\u8651\u7b80\u5355\u5bb9\u65a5\uff0c\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u7b49\u4e8e $val \\in [1,b]$ \u7684\u79cd\u6570 $p$\uff0c$val \\in [1,a-1]$ \u7684\u79cd\u6570 $q$\uff0c\u95ee\u9898\u7684\u7b54\u6848\u5373\u4e3a $p-q$\u3002\n\n\u56e0\u4e3a\u503c\u57df\u5c0f\uff0c\u663e\u7136\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002$\\operatorname{query}(x)$ \u5373\u4e3a $val \\in [1,x]$ \u7684\u79cd\u6570\u3002\u7b54\u6848\u5373\u4e3a $\\operatorname{query}(b)-\\operatorname{query}(a-1)$\u3002\n\n\u518d\u8fd4\u56de\u53bb\u8003\u8651\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u53bb\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 $O(n \\sqrt n \\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u4e86\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u592a\u66b4\u529b\u4e86\uff08\uff08\u5361\u5361\u5e38\u624d\u80fd\u8fc7\u3002\n\n\u4e8e\u662f\u4f18\u5316\uff1a\n\n- \u83ab\u961f\u00b7\u5947\u5076\u6027\u6392\u5e8f\uff1b   \n- \u6811\u72b6\u6570\u7ec4\u00b7\u7384\u5b66\u533a\u95f4\u67e5\u8be2\uff08By \u65e5\u62a5\uff09\uff1b   \n- `assert` \u5957\u53d6 $n$ \u7684\u8303\u56f4\uff0c\u53d1\u73b0\u5012\u6570\u7b2c\u4e8c\u4e2a\u70b9\u7684 $n=10^4$\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u7684 $n=10^5$\u3002\u4e8e\u662f\u5206\u7c7b\u8ba8\u8bba\u5757\u957f\u3002\u9898\u89e3\u9009\u7528\u7684\u662f\u8bd5\u9a8c\u591a\u6b21\u6548\u679c\u8f83\u597d\u7684\u957f\u5ea6\u3002\uff08\u5206\u522b\u4e3a $\\sqrt n,150,433$\uff09\uff1b   \n- `#pragma GCC optimize(3)`\u3002\n\n\u73b0\u5728\u5c31\u53ef\u4ee5\u4e0d\u7528 `O2` \u8fc7\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(3) \nusing namespace std;\nchar buf[1<<21],*p1=buf,*p2=buf;\n#define getchar() (p1==p2 && (p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nint read()\n{\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\n\t{\n\t\tif(c=='-')\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x*f;\n}\nvoid write(int x)\n{\n\tif(x<0)\tputchar('-'),x=-x;\n\tif(x>9)\twrite(x/10);\n\tputchar(x%10+'0');\n}\nint pos[100005],n,p,m,a[100005],gr,cnt[100005],ans[100005],res[100005];\nstruct queries{\n    int l,r,a,b,id;\n    queries(){l=r=a=b=id=0;}\n    queries(int L,int R,int A,int B,int ID){l=L,r=R,a=A,b=B,id=ID;}\n    bool operator < (queries another) const {\n    \treturn (pos[l]^pos[another.l])?pos[l]<pos[another.l]:(pos[l]&1)?r<another.r:r>another.r;\n    }\n}que[100005];\nstruct BinaryIndexedTree{\n    int a[100005];\n    int lowbit(int x){return x&(-x);}\n    void modify(int x,int val){for(int i=x;i<=n;i+=lowbit(i))   a[i]+=val;}\n    int query(int x)\n    {\n        int ans=0;\n        while(x)    ans+=a[x],x-=lowbit(x);\n        return ans;\n    }\n    int query(int l,int r)\n    {\n    \t--l;\n    \tint ans=0;\n    \twhile(r>l)\tans+=a[r],r-=lowbit(r);\n    \twhile(l>r)\tans-=a[l],l-=lowbit(l);\n    \treturn ans;\n\t}\n}bit1,bit2;\nvoid add(int x)\n{\n    x=a[x];\n    if(!cnt[x]) bit2.modify(x,1);\n    bit1.modify(x,1);\n    ++cnt[x];\n}\nvoid sub(int x)\n{\n\tx=a[x];\n    bit1.modify(x,-1);\n    --cnt[x];\n    if(!cnt[x]) bit2.modify(x,-1);\n}\nint main(){\n\tn=read(),m=read();\n\tif(n<10000)\tp=sqrt(n);\n\telse if(n==10000)\tp=150;\n\telse\tp=433;\n    for(int i=1;i<=n;++i)   a[i]=read(),pos[i]=(i-1)/p+1;\n    for(int i=1;i<=m;++i)\n    {\n        int l=read(),r=read(),a=read(),b=read();\n        que[i]=queries(l,r,a,b,i);\n    }\n    sort(que+1,que+1+m);\n    for(int i=1,l=1,r=0;i<=m;++i)\n    {\n        while(l>que[i].l)   add(--l);\n        while(l<que[i].l)   sub(l++);\n        while(r<que[i].r)   add(++r);\n        while(r>que[i].r)   sub(r--);\n\t\tans[que[i].id]=bit1.query(que[i].a,que[i].b);\n\t\tres[que[i].id]=bit2.query(que[i].a,que[i].b);\n    }\n    for(int i=1;i<=m;++i)   write(ans[i]),putchar(' '),write(res[i]),puts(\"\");\n    return 0;\n}\n```\n\n\uff08\u539f\u5df2\u8fc7\u5ba1\uff09",
        "postTime": 1595926004,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "##   [\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/drurry/p/9094548.html)\n\n\u66b4\u529b77\u5206\u5c31\u4e0d\u7528\u8bb2\u4e86\n\n\n------------\n\n\n**\n\u6b63\u89e3\uff1a**\n\n\u505a\u6cd5\u4e0d\u552f\u4e00\uff0c\u5e38\u89c1\u505a\u6cd5\u4e3a\u83ab\u961f+\u5206\u5757\u6216\u8005\u83ab\u961f+\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u662f\u7f51\u4e0a\u4e5f\u6709\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u65b9\u6cd5\u3002\n\n\u6c42\u4efb\u610f\u4e00\u6bb5\u533a\u95f4\u5185\u5728[a,b]\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5206\u5757\uff1b\u4f46\u662f\u9898\u76ee\u6709\u8981\u6c42\u8be5\u533a\u95f4\u5185\u5728[a,b]\u7684\u6570\u503c\u79cd\u6570\uff0c\u8fd9\u53c8\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u83ab\u961f\u3002\u6240\u4ee5\u6b63\u89e3\u5c31\u662f\u83ab\u961f+\u5206\u5757\u3002\u4f8b\u5982\u6837\u4f8b\u7684\u7b2c\u4e00\u4e2a\u8be2\u95ee\uff0c\u83ab\u961f\u589e\u52a0\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\u3001\u8be5\u6570\u5b57\u6240\u5728\u7684\u5757\u7684\u5143\u7d20\u4e2a\u6570\uff08\u5305\u62ec\u91cd\u590d\u7684\u6570\u5b57\uff09\u3001\u8be5\u6570\u6240\u5728\u5757\u7684\u4e0d\u91cd\u590d\u5143\u7d20\u4e2a\u6570\u3002\u7136\u540e\u5206\u5757\u8be2\u95ee[a,b]\u4e4b\u95f4\u5728\u89c4\u5b9a\u533a\u95f4\u7684\u7b54\u6848\u3002\n\n\u6b63\u89e3\u5f88\u5de7\u5999\u5730\u4e00\u70b9\u5728\u4e8e\u5206\u5757\u5206\u7684\u4e0d\u4ec5\u4ec5\u662f\u6709\u591a\u5c11\u4e2a\u6570\uff08\u5373n\uff09\uff0c\u8fd8\u662f\u6570\u503c\uff08\u5373color[ ]\uff09\u3002\u8fd9\u4e5f\u5c31\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5047\u8bben\u5f88\u5c0f\uff0c\u4f46\u662fcolor[ ]\u5f88\u5927\u53c8\u8981\u53e6\u505a\u5904\u7406\u3002\n\n\u5982\u679c\u4e0d\u80fd\u7406\u89e3\u4ee3\u7801\u7684\u5efa\u8bae\u81ea\u884c\u6a21\u62df\u6837\u4f8b\u3002\n\n------------\n\u66f4\u65b0\uff1a**\u9488\u5bf9hack\u6570\u636e\u6539\u4e86\u4e00\u6ce2\uff0c\u4e4b\u524d\u7684\u95ee\u9898\u662f\u5982\u679cl\u6216r\u8d85\u51fa\u4e86color[]\u7684\u6700\u5927\u503c\uff0cposi[l]\u6216\u8005posi[r]\u4f1a \u53d8\u62100\uff0c\u90a3\u4e48\u5bf9\u7b54\u6848\u7684\u7edf\u8ba1\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898**\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010;\nint n,m,L,R,block,num,posi[N],lll[N],rrr[N],sum[N],skuai[N],change[N],color[N],ans1[N],ans2[N],anss1,anss2;\nstruct node{\n    int l,r,x,y,id;\n}a[N];\nbool cmp(node aa,node bb)\n{\n    if(posi[aa.l]==posi[bb.l]) return aa.r<bb.r;\n    else return aa.l<bb.l;\n}\nvoid build()//\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u5757\u7684\u8fb9\u754c\n{\n    block=sqrt(n);num=n/block;\n    if(n%block) num++;\n    for(int i=1;i<=num;i++) \n    lll[i]=(i-1)*block+1,rrr[i]=i*block;\n    rrr[num]=n;\n    for(int i=1;i<=n;i++) posi[i]=(i-1)/block+1;\n}\nvoid add(int col)\n{\n    sum[col]++;skuai[posi[col]]++;\n    if(sum[col]==1) change[posi[col]]++;\n}\nvoid del(int col)\n{\n    sum[col]--;skuai[posi[col]]--;\n    if(!sum[col]) change[posi[col]]--;\n}\nvoid find(int l,int r,int id)\n{\n    if(posi[l]==posi[r]) \n    {\n        for(int i=l;i<=r;i++) if(sum[i]) ans1[id]+=sum[i],ans2[id]++;\n        return;\n\t}\n    /*\u6539\u52a8*/\n    if(posi[l]!=0) \n    for(int i=l;i<=rrr[posi[l]];i++) if(sum[i]) ans1[id]+=sum[i],ans2[id]++;\n\tif(posi[r]!=0)\n\tfor(int i=lll[posi[r]];i<=r;i++) if(sum[i]) ans1[id]+=sum[i],ans2[id]++;\n\tif(posi[l]!=0&&posi[r]!=0)\n\tfor(int i=posi[l]+1;i<posi[r];i++) ans1[id]+=skuai[i],ans2[id]+=change[i];\n\tif(posi[l]!=0&&posi[r]==0) \n\tfor(int i=posi[l]+1;i<=num;i++) ans1[id]+=skuai[i],ans2[id]+=change[i];\n}\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&color[i]);\n    build();\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d%d\",&a[i].l,&a[i].r,&a[i].x,&a[i].y);\n        a[i].id=i;\n    }\n    L=1,R=0;\n    sort(a+1,a+1+m,cmp);\n    for(int i=1;i<=m;i++)\n    {\n        while(R<a[i].r) add(color[++R]);\n        while(R>a[i].r) del(color[R--]);\n        while(L<a[i].l) del(color[L++]);\n        while(L>a[i].l) add(color[--L]);\n        find(a[i].x,a[i].y,a[i].id);\n    }\n    for(int i=1;i<=m;i++)\n        printf(\"%d %d\\n\",ans1[i],ans2[i]);\n    return 0;\n}\n```",
        "postTime": 1527348182,
        "uid": 45656,
        "name": "brsjdys",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $v_i$ \uff0c $m$ \u6b21\u67e5\u8be2\uff0c\u6bcf\u6b21\u67e5\u8be2\u7ed9\u51fa $l,r,a,b$ \uff0c\u6c42\u4e0b\u6807 $x$ \u5728\u533a\u95f4 $[l,r]$ \u5185\u4e14 $v_x\\in [a,b]$ \u7684\u4e0b\u6807 $x$ \u7684\u4e2a\u6570\u548c\u4e0d\u540c $v_x$ \u7684\u4e2a\u6570\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u8fd9\u4e48\u597d\u7684\u4e00\u9053\u9898\u600e\u4e48\u53ef\u4ee5\u6ca1\u6709\u4f18\u79c0\u7684\u5728\u7ebf\u505a\u6cd5\u5462~\n\n#### \u524d\u7f6e\u6280\u80fd\uff1a [k-D Tree](https://oi-wiki.org/ds/k-dtree/)\n\n\u5148\u8003\u8651\u7b2c\u4e00\u95ee\u7684\u505a\u6cd5\uff0c\u9898\u76ee\u6c42\u7684\u662f $\\sum_{i=l}^r [v_i\\in [a,b]]$ \uff0c\u5bf9\u6bcf\u4e2a\u4e0b\u6807 $i$ \u90fd\u5bf9\u5e94\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9 $(i,v_i)$ \uff0c\u9700\u8981\u7edf\u8ba1\u7684\u5c31\u662f\u4ee5 $(l,a)$ \u4e3a\u5de6\u4e0b\u89d2\uff0c $(r,b)$ \u4e3a\u53f3\u4e0a\u89d2\u7684\u77e9\u5f62\u533a\u57df\u5185\u7684\u70b9\u6570\u3002\u53ef\u4ee5\u4f7f\u7528 2-D Tree \u8fdb\u884c\u7edf\u8ba1\u3002\n\n\u7b2c\u4e8c\u95ee\uff0c\u6c42\u7684\u662f\u4e0d\u540c $v_i$ \u7684\u4e2a\u6570\uff0c\u6b64\u65f6\u4e8c\u7ef4\u6570\u70b9\u5c31\u4e0d\u80fd\u80dc\u4efb\u4e86\uff0c\u9700\u8981\u518d\u589e\u52a0\u4e00\u4e2a\u7ef4\u5ea6\u3002\n\n\u5b9a\u4e49 $lst_i$ \u4e3a\u4f4d\u7f6e $i$ \u4e0a\u7684\u6570\u503c\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u4e4b\u524d\u4e0d\u5b58\u5728\u8fd9\u4e2a\u503c\u4e0d\u59a8\u5b9a\u4e49\u4e3a $0$ \u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u67e5\u8be2\u7684\u533a\u95f4 $[l,r]$ \uff0c\u8981\u4fdd\u8bc1\u51fa\u73b0\u7684\u76f8\u540c\u503c\u53ea\u88ab\u7edf\u8ba1\u4e00\u6b21\uff0c\u53ef\u4ee5\u7edf\u8ba1\u5728\u8fd9\u6bb5\u533a\u95f4\u4e2d\u51fa\u73b0\u7b2c\u4e00\u6b21\u7684\u503c\uff0c\u90a3\u4e48\u8fd9\u4e9b\u4f4d\u7f6e\u5bf9\u5e94\u7684 $lst$ \u503c\u90fd\u662f\u5c0f\u4e8e $l$ \u7684\u3002\n\n\u6211\u4eec\u5c06\u7b2c\u4e8c\u95ee\u8f6c\u5316\u4e3a\u6c42 $\\sum_{i=1}^r [v_i\\in [a,b]\\wedge lst_i\\in [1,l-1]]$ \u7684\u503c\u3002\u5c06\u6bcf\u4e2a\u4e0b\u6807 $i$ \u90fd\u5bf9\u5e94\u5230\u4e09\u7ef4\u7a7a\u95f4\u4e0a\u7684\u70b9 $(i,v_i,lst_i)$ \uff0c\u9700\u8981\u7edf\u8ba1\u7684\u5c31\u662f\u7b2c\u4e00\u7ef4\u5750\u6807\u5728\u533a\u95f4 $[l,r]$ \uff0c\u7b2c\u4e8c\u7ef4\u5750\u6807\u5728\u533a\u95f4 $[a,b]$ \uff0c\u7b2c\u4e09\u7ef4\u5750\u6807\u5728 $[1,l-1]$ \u5185\u7684\u957f\u65b9\u4f53\u533a\u57df\u5185\u7684\u70b9\u6570\u3002\u81f3\u6b64\uff0c\u9898\u76ee\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u4e09\u7ef4\u6570\u70b9\u95ee\u9898\u3002\n\n\u5728\u7ebf\u89e3\u51b3\u4e09\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 **3-D Tree** \u3002\u7531\u4e8e\u6b64\u9898\u4e2d\u7684\u70b9\u96c6\u662f\u9759\u6001\u7684\uff0c\u6240\u4ee5\u4e0d\u7528\u652f\u6301\u91cd\u6784\u64cd\u4f5c\u3002\u5efa\u51fa\u6811\u540e\u5728\u6811\u4e0a\u67e5\u8be2\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6700\u4f18 $O(\\log_2 n)$ \u3001\u6700\u5dee $O(n^{\\frac 2 3})$ \u7684\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(mn^{\\frac 2 3})$ \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$ \u3002\n\n\u7531\u4e8e\u4ee3\u7801\u5b9e\u73b0\u4e2d\u7b2c\u4e00\u95ee\u7528\u5230\u4e86\u4e3b\u5e2d\u6811\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log_2 n)$ \u3002\n\n### \u53c2\u8003\u5b9e\u73b0\n\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=100010;\nint n,m,v[maxn],lst[maxn],ql,qr,a,b;\nstruct node{int x,y,z;}s[maxn],x;\nbool cmp1(node a,node b){return a.x<b.x;}\nbool cmp2(node a,node b){return a.y<b.y;}\nbool cmp3(node a,node b){return a.z<b.z;}\nint lc[maxn],rc[maxn],L[maxn],R[maxn],D[maxn],U[maxn],F[maxn],B[maxn],siz[maxn];\nvoid maintain(int x)\n{\n\tsiz[x]=siz[lc[x]]+1+siz[rc[x]];\n\tL[x]=R[x]=s[x].x;D[x]=U[x]=s[x].y;F[x]=B[x]=s[x].z;\n\tif(lc[x])L[x]=min(L[x],L[lc[x]]),R[x]=max(R[x],R[lc[x]]),D[x]=min(D[x],D[lc[x]]),U[x]=max(U[x],U[lc[x]]),F[x]=min(F[x],F[lc[x]]),B[x]=max(B[x],B[lc[x]]);\n\tif(rc[x])L[x]=min(L[x],L[rc[x]]),R[x]=max(R[x],R[rc[x]]),D[x]=min(D[x],D[rc[x]]),U[x]=max(U[x],U[rc[x]]),F[x]=min(F[x],F[rc[x]]),B[x]=max(B[x],B[rc[x]]);\n}\ndouble sq(double x){return x*x;}\nint build(int l,int r)\n{\n\tif(l>r)return 0;\n\tint mid=(l+r)>>1;\n\tdouble av1=0,av2=0,av3=0,va1=0,va2=0,va3=0,maxx;\n\tfor(int i=l;i<=r;i++)av1+=s[i].x,av2+=s[i].y,av3+=s[i].z;\n\tav1/=(r-l+1);av2/=(r-l+1);av3/=(r-l+1);\n\tfor(int i=l;i<=r;i++)va1+=sq(av1-s[i].x),va2+=sq(av2-s[i].y),va3+=sq(av3-s[i].z);\n\tmaxx=max(max(va1,va2),va3);\n\tif(maxx==va1)nth_element(s+l,s+mid,s+r+1,cmp1);\n\telse if(maxx==va2)nth_element(s+l,s+mid,s+r+1,cmp2);\n\telse nth_element(s+l,s+mid,s+r+1,cmp3);\n\tlc[mid]=build(l,mid-1);rc[mid]=build(mid+1,r);\n\tmaintain(mid);return mid;\n}\nint query(int l,int r)\n{\n\tint mid=(l+r)>>1;\n\tif(l>r||R[mid]<ql||L[mid]>qr||U[mid]<a||D[mid]>b||F[mid]>=ql)return 0;\n\tif(ql<=L[mid]&&R[mid]<=qr&&a<=D[mid]&&U[mid]<=b&&B[mid]<ql)return siz[mid];\n\tint ret=0;\n\tif(ql<=s[mid].x&&s[mid].x<=qr&&a<=s[mid].y&&s[mid].y<=b&&s[mid].z<ql)ret=1;\n\treturn ret+query(l,mid-1)+query(mid+1,r);\n}\nstruct persistent_tree\n{\n\tint cur,rt[maxn],lc[maxn*20],rc[maxn*20],siz[maxn*20];\n\tvoid update(int&o,int lst,int l,int r,int x)\n\t{\n\t\tif(!o)o=++cur;\n\t\tsiz[o]=siz[lst]+1;\n\t\tif(l==r)return;\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid)rc[o]=rc[lst],update(lc[o],lc[lst],l,mid,x);\n\t\telse lc[o]=lc[lst],update(rc[o],rc[lst],mid+1,r,x);\n\t}\n\tint query(int o1,int o2,int l,int r,int ql,int qr)//ans=o1-o2\n\t{\n\t\tif(r<ql||l>qr)return 0;\n\t\tif(ql<=l&&r<=qr)return siz[o1]-siz[o2];\n\t\tint mid=(l+r)>>1;\n\t\treturn query(lc[o1],lc[o2],l,mid,ql,qr)+query(rc[o1],rc[o2],mid+1,r,ql,qr); \n\t}\n}st;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",v+i),s[i]={i,v[i],lst[v[i]]},lst[v[i]]=i,st.update(st.rt[i],st.rt[i-1],1,n,v[i]);\n\tbuild(1,n);\n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d%d%d\",&ql,&qr,&a,&b);\n\t\tprintf(\"%d %d\\n\",st.query(st.rt[qr],st.rt[ql-1],1,n,a,b),query(1,n));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1564382479,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P4396)\n\n# \u83ab\u961f\u3002\n\u7ef4\u62a4\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u4e2a\u8868\u793a\u6570\u7684\u4e2a\u6570\uff0c\u4e00\u4e2a\u8868\u793a\u4e0d\u540c\u6570\u503c\u7684\u4e2a\u6570\u3002\u4e3a\u4e86\u5224\u65ad\u5f53\u524d\u52a0\u5165\u7684\u6570\u503c\u5b58\u4e0d\u5b58\u5728/\u5f53\u524d\u5220\u9664\u7684\u6570\u503c\u662f\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\uff0c\u5f00\u4e00\u4e2acount\u6570\u7ec4\u3002\n\n\u540e\u9762\u5c31\u662f\u5957\u8def\u4e86\uff0c\u6bcf\u6b21\u4fee\u6539\u65f6\u7ef4\u62a4\u6811\u72b6\u6570\u7ec4\u548ccount\u6570\u7ec4\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#define min(X,Y) ((X)<(Y)?(X):(Y))\n\nint pos[200010],n,m,count[200010],num[200010],block,c[200001],c2[200001];\nint bl,br,bmid,ans1[200010],ans2[200001],nowans1,nowans2;\nstruct point{\n    int l,r,orig,a,b;\n}q[200010];\nbool cmp(point a,point b){return pos[a.l]==pos[b.l] ? a.r<b.r : pos[a.l]<pos[b.l];}\nvoid update1(int x,int num){\n\tfor(;x<=n;x+=x&-x)c[x]+=num;\n}\nint query1(int x){\n\tint tot=0;\n\tfor(;x;x-=x&-x)tot+=c[x];\n\treturn tot;\n}\nvoid update2(int x,int num){\n\tfor(;x<=n;x+=x&-x)c2[x]+=num;\n}\nint query2(int x){\n\tint tot=0;\n\tfor(;x;x-=x&-x)tot+=c2[x];\n\treturn tot;\n}\nvoid add(int ind){\n\tif(!count[ind])update2(ind,1);\n\tupdate1(ind,1);\n\tcount[ind]++; \n}\nvoid del(int ind){\n\tupdate1(ind,-1);\n\tcount[ind]--;\n\tif(!count[ind])update2(ind,-1);\n}\nvoid write(int x){\n\tif(x>9)write(x/10);\n\tputchar((x%10)+'0');\n}\nint read(){\n\tint x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n\treturn x;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    block = (int)sqrt(n);\n    for(register int i=1;i<=n;i++){\n        pos[i]=(i-1)/block+1;\n        num[i]=read();\n    }\n    for(register int i=1;i<=m;i++)q[i].l=read(),q[i].r=read(),q[i].a=read(),q[i].b=read(),q[i].orig=i;\n    std::sort(q+1,q+m+1,cmp);\n    for(register int i=q[1].l;i<=q[1].r;i++)add(num[i]);\n    ans1[q[1].orig]=query1(q[1].b)-query1(q[1].a-1);\n    ans2[q[1].orig]=query2(q[1].b)-query2(q[1].a-1);\n    for(register int i=2;i<=m;i++){\n        if(q[i-1].l<q[i].l)for(int j=q[i-1].l;j<q[i].l;j++)del(num[j]);\n        else for(int j=q[i].l;j<q[i-1].l;j++)add(num[j]); \n        if(q[i-1].r<q[i].r)for(int j=q[i-1].r+1;j<=q[i].r;j++)add(num[j]);\n        else for(int j=q[i].r+1;j<=q[i-1].r;j++)del(num[j]);\n        ans1[q[i].orig]=query1(q[i].b)-query1(q[i].a-1);\n        ans2[q[i].orig]=query2(q[i].b)-query2(q[i].a-1);\n    }\n    for(register int i=1;i<=m;i++)write(ans1[i]),putchar(' '),write(ans2[i]),putchar('\\n');\n}\n```",
        "postTime": 1537781478,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP4396 [AHOI2013]\u4f5c\u4e1a"
    },
    {
        "content": "\u5148\u77e5\u9053\u8fd9\u9053\u9898\u76ee\u7684\u6240\u6c42\n\n- \u6c42\u51fa\u4e00\u4e2a $num_i$ \u4f7f $a\\leq num_i\\leq b$ \u4e14\u5728 $l\\leq place_i\\leq r$\u3002\u7136\u540e\u7edf\u8ba1 $num_i$ \u7684\u4e2a\u6570\u3002\n\n- \u6c42\u51fa\u4e00\u4e2a $num_i$ \u4f7f $a\\leq num_i\\leq b$ \u4e14\u5728 $l\\leq place_i\\leq r$\u3002\u7136\u540e\u7edf\u8ba1 $num_i$ **\u5b58\u5728\u8fc7**\u3002(\u4e0d\u540c\u4e8e\u4e0a\u4e00\u95ee\u7684\u662f\u8fd9\u91cc\u53ea\u662f $inc(ans) $,\u800c\u4e0a\u4e00\u95ee\u662f $inc(ans,num_i$\u5728\u533a\u95f4\u91cc\u51fa\u73b0\u7684\u6b21\u6570) )\u3002 \n\n\u660e\u767d\u6240\u6c42\u4e4b\u540e\u5f00\u59cb\u505a\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u83ab\u961f\u6765\u7ef4\u62a4\u6bcf\u4e00\u6b21\u7684 $l,r$ \u4e4b\u95f4\u7684\u72b6\u6001,\u7136\u540e\u7528\u5206\u5757\u8fdb\u884c\u4fee\u6539\u3002\u5206\u5757\u7ef4\u62a4\u7684\u662f\u6743\u503c,\u5e76\u4e14\u7ef4\u62a4\u4e0a\u9762\u7684\u4e24\u4e2a\u6570\u3002\n\n```pascal\nprocedure add(x,i:longint); // \u589e\u52a0\u4e00\u4e2a\u6570\nbegin\n    inc(block[x,1]); inc(intersum[Locate(x),1]); // \u51fa\u73b0\u6b21\u6570++\n    if block[x,1]=1 then begin block[x,2]:=1;  inc(intersum[Locate(x),2]); end; // \u6709\u51fa\u73b0\u8fc7,\u53ea\u53ef\u80fd\u662f 1 \u6216 0 \u8868\u793a\u51fa\u73b0\u6216\u8005\u6ca1\u6709\u51fa\u73b0\nend;\n\nprocedure dim(x,i:longint); // \u51cf\u5c11\u4e00\u4e2a\u6570\u5b57\nbegin\n    dec(block[x,1]); dec(intersum[Locate(x),1]);\n    if block[x,1]=0 then begin block[x,2]:=0; dec(intersum[Locate(x),2]); end;\nend;\n\n```\n\n\u53ef\u80fd\u5927\u5bb6\u4f1a\u95ee\u4e3a\u4ec0\u4e48\u5206\u5757,\u5176\u5b9e\u4e0a\u9762\u51e0\u7bc7\u9898\u89e3\u8bb2\u5f97\u4e0d\u5bf9,\u56e0\u4e3a\u5206\u5757\u7684\u5355\u70b9\u4fee\u6539\u662f $O(1)$ \u7684,\u800c\u6811\u72b6\u6570\u7ec4\u4ec0\u4e48\u7684\u662f $O(\\log\\ n)$,\u4f1a\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u4e0b\u964d\u4e3a $O(n\\sqrt{n}\\log\\ n)$,\u5c06\u8fd1 $4e8$\u3002\u6240\u4ee5\u5e76\u4e0d\u662f\u65b9\u4fbf\u624d\u7528\u7684\u3002\n\n\u4ee5\u4e0b\u7684\u5c31\u975e\u5e38\u7b80\u5355\u4e86\u3002\n\n```pascal\n// luogu-judger-enable-o2\nvar\n    block_num,node_num,sum,i,j,n,m,l,r:longint;\n    num,id,left,right,vall,valr,recf:array[-1..110000] of longint;\n    block:array[-1..110000,1..2] of longint;\n    intersum:array[-1..400,1..2] of longint;\n    ans:array[-1..110000,1..2] of longint;\n\nprocedure Swap(var x,y:longint); var t:longint; begin t:=x; x:=y; y:=t; end;\n\nfunction Locate(node:longint):longint;\nbegin if node mod node_num=0 then exit(node div node_num); exit(node div node_num+1);\nend;\n\nprocedure Sort(l,r:longint);\nvar i,j,s1,s2:longint;\nbegin\n    i:=l; j:=r; s1:=recf[(l+r) div 2]; s2:=right[(l+r) div 2];\n    repeat\n        while ((recf[i]<s1)or((recf[i]=s1)and(right[i]<s2))) do inc(i);\n        while ((recf[j]>s1)or((recf[j]=s1)and(right[j]>s2))) do dec(j);\n        if i<=j then\n        begin\n            Swap(recf[i],recf[j]); Swap(id[i],id[j]); Swap(left[i],left[j]);\n            Swap(right[i],right[j]); Swap(vall[i],vall[j]); Swap(valr[i],valr[j]);\n            inc(i); dec(j);\n         end;\n    until i>=j;\n    if i<r then Sort(i,r);\n    if j>l then Sort(l,j);\nend;\n\nfunction Query(l,r,mode:longint):longint;\nvar\n    i:longint;\n    real:array[1..2] of longint;\nbegin\n    Query:=0; real[1]:=Locate(l); real[2]:=Locate(r);\n    if real[2]-real[1]<=1 then for i:=l to r do inc(Query,block[i,mode])\n    else\n    begin\n        for i:=real[1]+1 to real[2]-1 do inc(Query,intersum[i,mode]);\n        for i:=l to real[1]*node_num do inc(Query,block[i,mode]);\n        for i:=(real[2]-1)*node_num+1 to r do inc(Query,block[i,mode]);\n    end;\nend;\n\nprocedure add(x,i:longint);\nbegin\n    inc(block[x,1]); inc(intersum[Locate(x),1]);\n    if block[x,1]=1 then begin block[x,2]:=1; inc(intersum[Locate(x),2]); end;\nend;\n\nprocedure dim(x,i:longint);\nbegin\n    dec(block[x,1]); dec(intersum[Locate(x),1]);\n    if block[x,1]=0 then begin block[x,2]:=0; dec(intersum[Locate(x),2]); end;\nend;\n\nprocedure Ready;\nbegin\n    read(n,m); node_num:=trunc(sqrt(n)); block_num:=node_num;\n    if block_num<>sqrt(n) then inc(block_num);\n    for i:=1 to n do read(num[i]);\n    for i:=1 to m do begin id[i]:=i; read(left[i],right[i],vall[i],valr[i]); recf[i]:=Locate(left[i]); end;\n    Sort(1,m);\nend;\n\nbegin\n    Ready; l:=1; r:=0; sum:=0;\n    for i:=1 to m do\n    begin\n        while r<right[i] do begin  inc(r); add(num[r],i); end;\n        while r>right[i] do begin dim(num[r],i); dec(r); end;\n        while l<left[i] do begin dim(num[l],i); inc(l); end;\n        while l>left[i] do begin dec(l); add(num[l],i); end;\n        ans[id[i],1]:=Query(vall[i],valr[i],1); ans[id[i],2]:=Query(vall[i],valr[i],2);\n    end;\n    for i:=1 to m do writeln(ans[i,1],' ',ans[i,2]);\nend.\n```",
        "postTime": 1538869471,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "\u83ab\u961f\uff08\u5757\u72b6\u66b4\u529b\uff09\u3002  \n\u9996\u5148\u8fd9\u9053\u9898\u7684\u6570\u636e\u7565\u6c34\uff0c\u6ca1\u6709\u89c4\u5b9a $a_i$ \u7684\u8303\u56f4\uff08\u5b9e\u9645\u4e0a\u4e0d\u8d85\u8fc7 $2\\times 10^5$\uff1f\uff09\uff0c\u4e0d\u8fc7\u5982\u679c\u5728 $10^9$ \u8303\u56f4\u5185\u53ea\u8981\u79bb\u6563\u5316\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002  \n\u7136\u540e\u8fd9\u4e2a\u957f\u5f97\u5c31\u5f88\u50cf\u83ab\u961f\uff08\u5757\u72b6\u66b4\u529b\uff09\uff0c\u53ef\u4ee5\u76f4\u63a5\u83ab\u961f\uff08\u5757\u72b6\u66b4\u529b\uff09\u5957\u4e0a\u53bb\uff0c\u7136\u540e\u8003\u8651\u600e\u4e48\u52a0\u70b9\u51cf\u70b9\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u5148\u7528\u5957\u8def\u7ef4\u62a4 $\\text{cnt}_ i$ \u4ee3\u8868 $i$ \u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u518d\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u9898\u76ee\u8981\u6c42\u90a3\u4e24\u4e2a\u4e1c\u897f\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528 \u533a\u95f4\u52a0 \u548c \u533a\u95f4\u67e5\u8be2 \u6765\u8bb0\u5f55\u533a\u95f4\u51fa\u73b0\u6570\u7684\u6b21\u6570\u548c\u6570\u7684\u4e2a\u6570\uff0c\u8fd9\u4e1c\u897f\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u7136\u540e\u8fd9\u9898\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u8fc7\u6389\u4e86\u3002  \n\uff08\u611f\u89c9\u53ef\u4ee5\u5947\u5076\u6027\u4f18\u5316\u6216\u8005\u56de\u6eda\u83ab\u961f\uff1f\u6709\u6ca1\u6709\u795e\u4ed9\u52a0\u5f3a\u4e00\u4e0b\u6570\u636e\u554a\uff09\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 200005\n#define reg register\n#define inl inline\nusing namespace std;\nstruct Qry\n{\n\tint l,r,pos,x,y,id;\n\tfriend bool operator < (const Qry &x,const Qry &y)\n\t{\n\t\treturn x.pos==y.pos?x.r<y.r:x.l<y.l;\n\t}\n}q[MAXN];\nint n,m,a[MAXN],cnt[MAXN],ans1[MAXN],ans2[MAXN];\nstruct BIT\n{\n\tint c[MAXN];\n\tinl int lowbit(reg int x)\n\t{\n\t\treturn x&-x;\n\t}\n\tinl void Modify(reg int x,reg int val)\n\t{\n\t\tfor(;x<=n;x+=lowbit(x)) c[x]+=val;\n\t}\n\tinl int Query(reg int x)\n\t{\n\t\treg int res=0;\n\t\tfor(;x;x-=lowbit(x)) res+=c[x];\n\t\treturn res;\n\t}\n}A,B;\ninl void Add(reg int x)\n{\n\tif(!cnt[x]) B.Modify(x,1);\n\tA.Modify(x,1);\n\tcnt[x]++;\n}\ninl void Del(reg int x)\n{\n\tA.Modify(x,-1);\n\tcnt[x]--;\n\tif(!cnt[x]) B.Modify(x,-1);\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(reg int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\treg int unt=sqrt(n);\n\tfor(reg int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d %d %d\",&q[i].l,&q[i].r,&q[i].x,&q[i].y);\n\t\tq[i].id=i;\n\t\tq[i].pos=(q[i].l-1)/unt+1;\n\t}\n\tsort(q+1,q+m+1);\n\treg int L=1,R=0;\n\tfor(reg int i=1;i<=m;i++)\n\t{\n\t\twhile(L>q[i].l) Add(a[--L]);\n\t\twhile(R<q[i].r) Add(a[++R]);\n\t\twhile(L<q[i].l) Del(a[L++]);\n\t\twhile(R>q[i].r) Del(a[R--]);\n\t\tans1[q[i].id]=A.Query(q[i].y)-A.Query(q[i].x-1);\n\t\tans2[q[i].id]=B.Query(q[i].y)-B.Query(q[i].x-1);\n\t}\n\tfor(reg int i=1;i<=m;i++) printf(\"%d %d\\n\",ans1[i],ans2[i]);\n\treturn 0;\n}\n```",
        "postTime": 1572957498,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "~~\u770b\u5230\u8fd9\u9898 \uff1a \"\u8fd9\u4e0d\u662f\u83ab\u961f+\u6811\u72b6\u6570\u7ec4 \u50bb*\u9898\u5417\"~~\n\n\u7b80\u5316\u4e00\u4e0b \u9898\u76ee\n\n\u8fd9\u9898\u662f\u8981\u6c42 $[l,r]$ \u8fd9\u4e2a\u533a\u95f4 $[a,b]$ \u7684\u4e2a\u6570 \u4ee5\u53ca$[a,b]$ \u7684\u6570\u503c\u79cd\u7c7b\u6570\n\n\u4e0d\u96be\u60f3\u5230\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4$\\text{\u83ab\u961f}$\n\n\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4 \u5b58 \u4e2a\u6570\n\n\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4 \u5b58 \u79cd\u7c7b\u6570\n\n\u83ab\u961f\u7684\u590d\u6742\u5ea6 \u662f $n \\sqrt n$ \u7684\n\u5e26\u4e0a\u4e00\u4e2a \u6811\u72b6\u6570\u7ec4 \u7684 $\\log n$ \u7684\u590d\u6742\u5ea6\n\n\u5927\u6982\u5c31\u662f $n \\sqrt n * \\log n$\n\n\u4f46\u83ab\u961f\u8dd1\u7684\u8fd8\u633a\u5feb\u7684\n\n$\\mathcal Code$\n\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std ;\nconst int N = 1e5 + 10 ;\nint tree[N] ;\ninline int low(int x) {\n\treturn x & - x ;\n}\ninline void Add(int x , int y) {\n\tfor( ; x <= N ; x += low(x)) tree[x] += y ;\n}\ninline int Query(int x) { register int ans = 0 ;\n\tfor( ; x ; x -= low(x)) ans += tree[x] ;\n\treturn ans ;\n}\nint tree2[N] ;\ninline void Add2(int x , int y) {\n\tfor( ; x <= N ; x += low(x)) tree2[x] += y ;\n}\ninline int Query2(int x) { register int ans = 0 ;\n\tfor( ; x ; x -= low(x)) ans += tree2[x] ;\n\treturn ans ;\n}\nint n , m ;\nint a[N] ;\nint cnt[N] ;\nint Ans[N] ;\nint Ans2[N] ;\nstruct node {\n\tint l , r ;\n\tint a , b ;\n\tint bl ;\n\tint id ;\n} ;\nnode q[N] ;\ninline bool cmp(node x , node y) {\n\treturn x.bl ^ y.bl ? x.bl < y.bl : x.r < y.r ;\n}\n\ninline void Ins(int x) {\n\tAdd(a[x] , 1) ;\n\tif(++ cnt[a[x]] == 1) Add2(a[x] , 1) ;\n}\ninline void Del(int x) {\n\tAdd(a[x] , -1) ;\n\tif(-- cnt[a[x]] == 0) Add2(a[x] , -1) ;\n}\nsigned main() {\n\tios::sync_with_stdio(false ) ;\n\tcin.tie(0) ;\n\tcout.tie(0) ;\n\tcin >> n >> m ;\n\tint unt = sqrt(n * 3 / 2) ;\n\tfor(register int i = 1 ; i <= n ; i ++) {\n\t\tcin >> a[i] ;\n\t}\n\tfor(register int i = 1 ; i <= m ; i ++) {\n\t\tcin >> q[i].l >> q[i].r >> q[i].a >> q[i].b ;\n\t\tq[i].bl = q[i].l / unt ;\n\t\tq[i].id = i ;\n\t}\n\tsort(q + 1 , q + m + 1 , cmp) ;\n\tint l = 1 , r = 0 ;\n\tfor(register int i = 1 ; i <= m ; i ++) {\n\t\tfor( ; l < q[i].l ; Del(l ++)) ;\n\t\tfor( ; r > q[i].r ; Del(r --)) ;\n\t\tfor( ; l > q[i].l ; Ins(-- l)) ;\n\t\tfor( ; r < q[i].r ; Ins(++ r)) ;\n\t\tAns[q[i].id] = Query(q[i].b) - Query(q[i].a - 1) ;\n\t\tAns2[q[i].id] = Query2(q[i].b) - Query2(q[i].a - 1) ;\n\t}\n\tfor(register int i = 1 ; i <= m ; i ++) {\n\t\tcout << Ans[i] << ' ' << Ans2[i] << endl ;\n\t}\n\treturn 0 ;\n}",
        "postTime": 1568540649,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "\u83ab\u961f+\u5206\u5757\n\n\u8fd9\u9898\u5176\u5b9e\u7528\u6811\u72b6\u6570\u7ec4\u4e5f\u53ef\u4ee5\u7ef4\u62a4\uff0c\u4f46\u662f\u6211\u4eec\u7ecf\u8fc7\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\u8fd9\u9898\u91cc\u63d2\u5165\u7684\u6b21\u6570\u6709 $O(n\\sqrt{n})$ \u6b21\uff0c\u800c\u67e5\u8be2\u7684\u6b21\u6570\u53ea\u6709 $O(n)$ \u6b21\uff0c\u6240\u4ee5\u5982\u679c\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u7684\u8bdd\u603b\u590d\u6742\u5ea6\u5c31\u662f $O(n\\sqrt{n}logn)$ \u7684\u3002\u800c\u5982\u679c\u7528\u5206\u5757\u7ef4\u62a4\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0 $O(1)$ \u4fee\u6539\uff0c$O(\\sqrt{n})$ \u67e5\u8be2\uff0c\u6700\u540e\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n})$ \uff0c\u603b\u7684\u6765\u8bf4\u590d\u6742\u5ea6\u662f\u66f4\u4f18\u7684\n\n\u987a\u5e26\u9700\u8981\u6ce8\u610f\u7684\u662f $a$ \u548c $b$ \u4e0d\u4e00\u5b9a\u5728\u539f\u6570\u7ec4\u91cc\u6709\uff0c\u6240\u4ee5\u4e3a\u4e86\u907f\u514d\u51fa\u9505\u6700\u597d\u8ba9 $find$ \u540c\u65f6\u652f\u6301\u8fd4\u56de\u5927\u4e8e\u7b49\u4e8e\u7684\u7b2c\u4e00\u4e2a\u6570\u548c\u8fd4\u56de\u5c0f\u4e8e\u7b49\u4e8e\u7684\u7b2c\u4e00\u4e2a\u6570\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\ntypedef struct query{\n    int l,r,a,b,x,id;\n    bool operator < (const query &o) const {return ((x!=o.x)?x<o.x:(x&1)?r<o.r:r>o.r);}\n}qy;\n\nqy q[100010];\nint n,m,block,a[100010],v[100010],siz,bsum[5010],bsiz[5010],w[100010],belong[100010]={0,1},vblock,ans[100010],ans2[100010];\n\ninline int read(){\n    int num=0,k=1; char c=getchar();\n    while(c>'9' || c<'0') k=(c=='-')?0:k,c=getchar();\n    while(c>='0' && c<='9') num=num*10+c-'0',c=getchar();\n    return k?num:-num;\n}\n\nint find(int x,int type){\n    int l=0,r=siz+1,mid;\n    while(l+1<r){\n        mid=(l+r)>>1;\n        if(v[mid]<x) l=mid;\n        else if(v[mid]>x) r=mid;\n        else return mid;\n    }\n    return (type?r:l);\n}\n\nvoid modify(int p,int v) {bsum[belong[p]]+=v; bsiz[belong[p]]-=(w[p]>0); w[p]+=v; bsiz[belong[p]]+=(w[p]>0);}\n\nvoid query(int l,int r,int &sum,int &siz){\n    sum=siz=0;\n    if(l>r) return;\n    for(int i=belong[l]+1;i<belong[r];i++) sum+=bsum[i],siz+=bsiz[i];\n    for(int i=l;belong[i]==belong[l] && i<=r;i++) sum+=w[i],siz+=(w[i]>0);\n    if(belong[l]!=belong[r]) for(int i=r;belong[i]==belong[r];i--) sum+=w[i],siz+=(w[i]>0);\n}\n\nint main(){\n    n=read(); m=read(); block=sqrt(n);\n    for(int i=1;i<=n;i++) v[++siz]=a[i]=read();\n    sort(v+1,v+1+siz); siz=unique(v+1,v+1+siz)-v-1; vblock=sqrt(siz);\n    for(int i=1;i<=n;i++) a[i]=find(a[i],0);\n    for(int i=1;i<=m;i++) q[i].l=read(),q[i].r=read(),q[i].a=read(),q[i].b=read(),q[i].x=q[i].l/block+1,q[i].id=i;\n    sort(q+1,q+1+m);\n    for(int i=2;i<=siz;i++) belong[i]=belong[i-1]+(i%vblock==0);\n    int l=1,r=0;\n    for(int i=1;i<=m;i++){\n        while(l<q[i].l) modify(a[l++],-1);\n        while(l>q[i].l) modify(a[--l],1);\n        while(r<q[i].r) modify(a[++r],1);\n        while(r>q[i].r) modify(a[r--],-1);\n        query(find(q[i].a,1),find(q[i].b,0),ans[q[i].id],ans2[q[i].id]);\n    }\n    for(int i=1;i<=m;i++) printf(\"%d %d\\n\",ans[i],ans2[i]);\n    return 0;\n}\n\n```",
        "postTime": 1551798179,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u8ddf[Gty\u7684\u4e8c\u903c\u59b9\u5b50\u5e8f\u5217](https://www.luogu.org/problemnew/show/P4867)\n\u975e\u5e38\u50cf\n\n\u628a\u90a3\u9898\u4ee3\u7801\u6539\u6539\u5c31\u884c\u4e86\n\n\u601d\u8def\uff1a\u83ab\u961f+\u5206\u5757\n\n\u9996\u5148\u533a\u95f4\u95ee\u9898\uff0c\u53ef\u4ee5\u79bb\u7ebf\uff0c\u9a6c\u4e0a\u60f3\u5230\u83ab\u961f\n\n\u7136\u540e\u53d1\u73b0\u4e0d\u4f1a\u4fee\u6539\uff1f\u600e\u4e48\u529e\uff1f\n\n(\u597d\u50cf\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\u505a\uff0c\u53ef\u662f\u6211\u4e0d\u4f1ao((\u2299\ufe4f\u2299))o\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u503c\u57df\u5206\u5757\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230\u6bcf\u6b21\u67e5\u8be2$O(\\sqrt n)$\uff0c\u4fee\u6539$O(1)$\u4e86\n\n\u603b\u590d\u6742\u5ea6$O(m \\sqrt n)$\n\n```cpp\n#include <bits/stdc++.h>\n#define getpos(x) ((x - 1) / block + 1)\n#define getblock(x) ((x - 1) * block + 1)\nconst int MaxN = 100010;\nstruct query\n{\n    int id, pos;\n    int l, r, a, b;\n};\nquery q[MaxN];\nint n, m, size, block;\nint a[MaxN], cnt[MaxN], sum[MaxN][3], ans[MaxN][3];\ninline int cmp(query a, query b)\n{\n    if (a.pos != b.pos)\n        return a.pos < b.pos;\n    return a.r < b.r;\n}\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n        ch = getchar();\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return x;\n}\ninline void add(int x)\n{\n    ++cnt[a[x]];\n    ++sum[getpos(a[x])][1];\n    if (cnt[a[x]] == 1)\n        ++sum[getpos(a[x])][2];\n}\ninline void del(int x)\n{\n    --cnt[a[x]];\n    --sum[getpos(a[x])][1];\n    if (cnt[a[x]] == 0)\n        --sum[getpos(a[x])][2];\n}\ninline void ask(int x)\n{\n    int id = q[x].id, l = q[x].a, r = q[x].b, Posl = getpos(q[x].a), Posr = getpos(q[x].b);\n    for (int i = Posl + 1; i < Posr; i++)\n        ans[id][1] += sum[i][1], ans[id][2] += sum[i][2];\n    if (Posl == Posr)\n    {\n        for (int i = l; i <= r; i++)\n        {\n            ans[id][1] += cnt[i];\n            if (cnt[i])\n                ans[id][2]++;\n        }\n    }\n    else\n    {\n        int L = getblock(Posr), R = getblock(Posl + 1) - 1;\n        for (int i = l; i <= R; i++)\n        {\n            ans[id][1] += cnt[i];\n            if (cnt[i])\n                ans[id][2]++;\n        }\n        for (int i = L; i <= r; i++)\n        {\n            ans[id][1] += cnt[i];\n            if (cnt[i])\n                ans[id][2]++;\n        }\n    }\n}\ninline void solve()\n{\n    int l = 1, r = 0;\n    for (int i = 1; i <= m; i++)\n    {\n        while (l > q[i].l)\n            --l, add(l);\n        while (r < q[i].r)\n            ++r, add(r);\n        while (l < q[i].l)\n            del(l), l++;\n        while (r > q[i].r)\n            del(r), r--;\n        ask(i);\n    }\n}\nint main()\n{\n    n = read(), m = read();\n    size = pow(n, 0.55), block = sqrt(n);\n    for (int i = 1; i <= n; ++i)\n        a[i] = read();\n    for (int i = 1; i <= m; i++)\n    {\n        q[i].l = read(), q[i].r = read();\n        q[i].a = read(), q[i].b = read();\n        q[i].id = i, q[i].pos = (q[i].l - 1) / size + 1;\n    }\n    std::sort(q + 1, q + m + 1, cmp);\n    solve();\n    for (int i = 1; i <= m; i++)\n        printf(\"%d %d\\n\", ans[i][1], ans[i][2]);\n    return 0;\n}\n\n```",
        "postTime": 1549257615,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4396)\n\n---\n\n\u9898\u76ee\u53ef\u8bf4\u662f\u76f8\u5f53\u7b80\u6d01\u660e\u4e86\uff0c\u5c31\u662f\u627e\u5206\u522b\u4e3a\u5728 $\\texttt{l}$ \u548c $\\texttt{r}$ \u8fd9\u6bb5\u533a\u95f4\u4e2d\u5927\u5c0f\u5728 $\\texttt{[a,b]}$ \u4e2d\u7684\u6570\u7684\u4e2a\u6570\uff0c\n\n\u4ee5\u53ca\u5927\u4e8e\u7b49\u4e8e $\\texttt{a}$\uff0c\u5c0f\u4e8e\u7b49\u4e8e $\\texttt{b}$ \u7684\uff0c\u4e14\u5728\u8be5\u533a\u95f4\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u503c\u7684\u4e2a\u6570\u3002\n\n---\n\n\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u8981\u6c42\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u83ab\u961f\uff0c\u4f46\u95ee\u9898\u5728\u5982\u4f55\u7ef4\u62a4\u6240\u6c42\u7684\u503c\u3002\n\n\u56e0\u4e3a\u6c42\u7684\u503c\u662f\u5728\u4e00\u4e2a\u533a\u95f4\u5185\uff0c\u53c8\u770b\u5230$\\texttt{a}$\u7684\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u4e0d\u7528\u79bb\u6563\u5316\uff0c\n\n\u533a\u95f4\u6c42\u548c\u5c31\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u4e3b\u8981\u662f\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u975e\u5e38\u5feb\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u5206\u522b\u7ef4\u62a4\u51fa\u73b0\u7684\u6b21\u6570\u548c\u51fa\u73b0\u7684\u503c\u3002\n\n\u4f46\u8fd9\u9053\u9898\u6709\u4e00\u70b9\u5361\u5e38\uff0c\u5404\u4e2a\u5730\u65b9\u90fd\u9700\u8981\u4f18\u5316\u4e00\u4e0b\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u5730\u65b9\u5c31\u662f\u83ab\u961f\u7684\u6392\u5e8f\u4f18\u5316\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5e38\u5907\u6280\u80fd\u3002\n\n---\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#define lowbit(x) (x & -x)\nusing namespace std;\ntemplate<typename T>void read(T &x) {\n\tT f = 1;x = 0;char s = getchar();\n\twhile(s < '0' || s > '9') {if(s == '-')f = -1;s = getchar();}\n\twhile(s >= '0' && s <= '9') {x = x * 10 + s - '0';s = getchar();}\n\tx *= f;\n}\ntemplate<typename T>void print(T x) {\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9) print(x / 10);\n\tputchar(x % 10 + '0');\n}\nconst int maxn = 100000;\n\nstruct node {\n\tint l,r,a,b,id;\n}ask[maxn + 5];\n\nint n,m,a[maxn + 5];\nint pos[maxn + 5],ans[maxn + 5],res[maxn + 5];\nint tr[maxn + 5],t[maxn + 5],vis[maxn + 5];\n\nint sum(int x) {\n\tint res = 0;\n\tfor (; x ; x -= lowbit(x)) res += tr[x];\n\treturn res;\n}\n\nint update(int x,int y) {\n\tfor (; x <= maxn ; x += lowbit(x)) tr[x] += y;\n}\n\nint exsum(int x) {\n\tint res = 0;\n\tfor (; x ; x -= lowbit(x)) res += t[x];\n\treturn res;\n}\n\nint exupdate(int x,int y) {\n\tfor (; x <= maxn ; x += lowbit(x)) t[x] += y;\n}\n\nbool cmp(node rhs,node shr) {\n    if (pos[rhs.l] != pos[shr.l]) return rhs.l < shr.l;\n    else if (pos[rhs.l] & 1) return rhs.r < shr.r;\n    else return rhs.r > shr.r;\n}\n\nvoid Add(int x) {\n\tif (!vis[a[x]]) {\n\t\texupdate(a[x],1);\n\t}\n\tupdate(a[x],1);\n\tvis[a[x]] ++;\n}\n\nvoid Sub(int x) {\n\tvis[a[x]] --;\n\tif (!vis[a[x]]) {\n\t\texupdate(a[x],-1);\n\t}\n\tupdate(a[x],-1);\n}\n\nint main() {\n\tread(n);read(m);\n\tint t = sqrt(n);\n\tfor (int i = 1 ; i <= n ; ++ i) read(a[i]),pos[i] = i / t;\n\tfor (int i = 1 ; i <= m ; ++ i) read(ask[i].l),read(ask[i].r),read(ask[i].a),read(ask[i].b),ask[i].id = i;\n\tsort(ask + 1,ask + 1 + m,cmp);\n\tint l = 1,r = 0;\n\tfor (int i = 1 ; i <= m ; ++ i) {\n\t\twhile (l > ask[i].l) Add(-- l);\n\t\twhile (l < ask[i].l) Sub(l ++);\n\t\twhile (r < ask[i].r) Add(++ r);\n\t\twhile (r > ask[i].r) Sub(r --);\n\t\tans[ask[i].id] = sum(ask[i].b) - sum(ask[i].a - 1);\n\t\tres[ask[i].id] = exsum(ask[i].b) - exsum(ask[i].a - 1);\n\t}\n\tfor (int i = 1 ; i <= m ; ++ i) printf(\"%d %d\\n\",ans[i],res[i]);\n\treturn 0;\n}\n```",
        "postTime": 1596093633,
        "uid": 163516,
        "name": "Strelitzia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    },
    {
        "content": ">>>\u4e00\u9053\u83ab\u961f\u52a0\u4e0a\u6811\u72b6\u6570\u7ec4\u7684\u9898\uff0c\u4f46\u662f\u6211\u4e0d\u60f3\u5199\u6811\u72b6\u6570\u7ec4\u600e\u4e48\u529e\n----\n>>>\u65e2\u7136\u83ab\u961f\u90fd\u5206\u5757\u4e86\uff0c\u5c31\u76f4\u63a5\u5199\u5206\u5757\u54af\uff0c\u83ab\u961f\u67e5\u8be2\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5728\u6bcf\u6b21\u83ab\u961f\u8c03\u5b8cL\uff0cR\u540e\uff0c\u76f4\u63a5\u67e5\u8be2\u7b54\u6848\uff0c\u8be6\u7ec6\u89c1\u4ee3\u7801\u3002\n-----\n------\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200010; \nstruct edge{\n\tint l,r,a,b;\n\tint ans1,ans2;\n\tint id;\n}G[N];\nint cnt[N];\nint bl[N];\nint blk;\nint n,m;\nint S[N];\nint f[N],g[N];\nbool cmp(edge a,edge b)\n{\n\treturn bl[a.l]==bl[b.l]?a.r<b.r:bl[a.l]<bl[b.l];\n} \nbool cmp1(edge a,edge b)\n{\n\treturn a.id<b.id;\n}\nvoid jisuan(int l,int r,int x)\n{\n\tif(bl[l]==bl[r])\n\t{\n\t\tfor(int i=l;i<=r;i++)\n\t\t if(cnt[i]) G[x].ans1+=cnt[i],G[x].ans2++;\n\t}\n\telse{\n\t\tfor(int i=bl[l]*blk-1;i>=l;--i) if(cnt[i]) G[x].ans1+=cnt[i],G[x].ans2++;\n\t\tfor(int i=bl[r]*blk-blk;i<=r;i++) if(cnt[i]) G[x].ans1+=cnt[i],G[x].ans2++;\n\t\tfor(int i=bl[l]+1;i<bl[r];i++) G[x].ans1+=f[i],G[x].ans2+=g[i];\n\t}\n}\nvoid add(int x)\n{\n\t++f[bl[x]];\n\t++cnt[x];\n\tif(cnt[x]==1) g[bl[x]]++;\n}\nvoid del(int x)\n{\n\t--f[bl[x]];\n\t--cnt[x];\n\tif(!cnt[x]) g[bl[x]]--;\n}\nvoid moqueue()\n{\n\tint L=1,R=0;\n\t for(int i=1;i<=m;i++){\n\t \twhile(L>G[i].l) add(S[--L]);\n\t\twhile(L<G[i].l) del(S[L++]);\n\t\twhile(R<G[i].r) add(S[++R]);\n\t\twhile(R>G[i].r) del(S[R--]);\n\t  jisuan(G[i].a,G[i].b,i);\n\t }\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\t for(int i=1;i<=n;i++)\n\t \tscanf(\"%d\",&S[i]);\n\t \n\t blk=sqrt(n);\n\t for(int i=1;i<=n;i++)\n\t bl[i]=(i)/blk+1;\n\t  for(int i=1;i<=m;i++)\n\t  \tscanf(\"%d %d %d %d\",&G[i].l,&G[i].r,&G[i].a,&G[i].b),G[i].id=i;\n       sort(G+1,G+1+m,cmp);\n       moqueue();\n       sort(G+1,G+1+m,cmp1);\n       for(int i=1;i<=m;i++)\n       printf(\"%d %d\\n\",G[i].ans1,G[i].ans2);\n}\n```\n\n",
        "postTime": 1527078783,
        "uid": 31826,
        "name": "RetrO",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4396 \u3010[AHOI2013]\u4f5c\u4e1a\u3011"
    }
]