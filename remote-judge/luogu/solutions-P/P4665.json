[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](/problem/P4665)\n### $ \\mathcal{Problem} $ \n\u7ed9\u5b9a\u4e00\u9897 $ n $ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6c42\u81f3\u5c11\u52a0\u591a\u5c11\u6761\u8fb9\u6ee1\u8db3\u65ad\u6389\u4efb\u610f\u4e00\u6761\u8fb9\uff0c\u56fe\u4ecd\u7136\u8054\u901a\u3002  \n\n### $ \\mathcal{Solution} $ \n\u539f\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\u9009\u62e9\u5c3d\u53ef\u80fd\u5c11\u7684\u70b9\u5bf9\u8def\u5f84\uff0c\u4f7f\u5f97\u4efb\u610f\u4e00\u6761\u8fb9\u81f3\u5c11\u88ab\u4e00\u6761\u8def\u5f84\u8986\u76d6\u3002  \n\n\u4e0d\u96be\u53d1\u73b0**\u9009\u62e9\u4e00\u5bf9\u53f6\u5b50\u8282\u70b9\u4e0d\u6bd4\u5176\u4ed6\u70b9\u5bf9\u52a3**\uff0c\u56e0\u4e3a\u4efb\u610f\u4e00\u6761\u8def\u5f84\u5747\u53ef\u4ee5\u88ab\u4e00\u6761\u7531\u53f6\u5b50\u8282\u70b9\u6784\u6210\u7684\u8def\u5f84\u8986\u76d6\u3002  \n\u8bbe $ k $ \u4e3a\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u8003\u8651\u5c06\u53f6\u5b50\u8282\u70b9\u4e24\u4e24\u914d\u5bf9\uff0c\u8fd9\u6837\u7b54\u6848\u7684\u4e0b\u754c\u4e3a $ \\lceil \\dfrac k 2 \\rceil $\uff0c\u5206\u6790\u5982\u4f55\u8fbe\u5230\u8fd9\u4e2a\u4e0b\u754c\u3002  \n\n\u4efb\u9009\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u4e3a\u6839\uff0c\u5c06\u53f6\u5b50\u8282\u70b9\u6309 dfs \u5e8f\u6392\u5217\uff0c\u82e5 $ k $ \u4e3a\u5947\uff0c\u62ff\u51fa\u6765\u4e00\u4e2a\u6700\u540e\u968f\u4fbf\u8fde\u4e00\u4e2a\u53f6\u5b50\u3002  \n\u6309\u987a\u5e8f\u5206\u4e3a\u5927\u5c0f $ \\lfloor \\dfrac k 2 \\rfloor $ \u7684\u4e24\u7ec4\uff0c**\u7ec4\u4e0e\u7ec4\u4e4b\u95f4\u6309\u987a\u5e8f\u4e24\u4e24\u914d\u5bf9**\uff0c\u5373\u7b2c $i$ \u4e2a\u53f6\u5b50\u548c\u7b2c $ i + \\lfloor \\dfrac k 2 \\rfloor $ \u4e2a\u53f6\u5b50\u914d\u5bf9\u3002\n\n\u6b63\u786e\u6027\u8bc1\u660e\uff1a  \n\u5bf9\u4e8e\u4e00\u4e2a\u975e\u6839\u8282\u70b9 $ u $\uff0c$ fa $ \u4e3a\u5176\u7236\u8282\u70b9\uff0c\u5176\u5b50\u6811\u4e2d\u6709 $ x $ \u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u7531 dfs \u7684\u6027\u8d28\uff0c$ x $ \u4e2a\u53f6\u5b50\u8282\u70b9\u5728\u5e8f\u5217\u4e2d\u4e00\u5b9a\u8fde\u7eed\u7684\uff0c\u957f\u5ea6\u4e3a $ x $\uff0c\u8003\u8651\u8fb9 $ (u,fa) $\uff1a\n- \u82e5 $ x \\le \\lfloor \\dfrac k 2 \\rfloor $\uff0c**\u603b\u4f1a\u6709\u4e00\u4e2a\u53f6\u5b50\u5411\u201c\u5916\u201d\u5339\u914d**\uff0c\u8986\u76d6\u8fb9 $ (u,fa) $\u3002  \n\n- \u82e5 $ x > \\lfloor \\dfrac k 2 \\rfloor $\uff0c\u90a3\u4e48 $ k - x \\le \\lfloor \\dfrac k 2 \\rfloor $\uff0c\u540c\u7406**\u603b\u4f1a\u6709\u4e00\u4e2a\u53f6\u5b50\u5411\u201c\u5185\u201d\u5339\u914d**\uff0c\u8986\u76d6\u8fb9 $ (u,fa) $\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ O(n) $\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $ O(n) $\u3002\n\n### $ \\mathcal{Code} $ \n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxN = 5e5 + 5;\n\nint n, d[maxN];\nvector<int> leaf, edge[maxN];\n\nvoid dfs(int u, int prt) {\n\tif (d[u] == 1) leaf.push_back(u);\n\tfor (auto v: edge[u])\n\t\tif (v != prt)\n\t\t\tdfs(v, u);\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n  \n\tcin >> n;\n\tfor (int i = 1, u, v; i < n; i++) {\n\t\tcin >> u >> v;\n\t\tedge[u].push_back(v), d[u]++;\n\t\tedge[v].push_back(u), d[v]++;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (d[i] != 1) {\n\t\t\tdfs(i, 0);\n\t\t\tbreak;\n\t\t}\n\tn = (int)leaf.size();\n\tcout << ceil(n / 2.0);\n\tfor (int i = 0; i < n / 2; i++)\n\t\tcout << '\\n' << leaf[i] << ' ' << leaf[i + n / 2];\n\tif (n & 1) cout << '\\n' << leaf[0] << ' ' << leaf[n - 1];\n\n\treturn 0;\n}\n```",
        "postTime": 1671524430,
        "uid": 211279,
        "name": "hj23308",
        "ccfLevel": 6,
        "title": "P4665 \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\u662f\u8ba9\u4f60\u8fde\u6700\u5c11\u7684\u8fb9\uff0c\u4f7f\u4e00\u9897\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u88ab\u5305\u62ec\u5728\u67d0\u4e00\u4e2a\u73af\u4e0a\u3002\n\n\u5373\u4f7f\u6811\u4e0a\u6bcf\u4e2a\u70b9\u88ab\u73af\u8986\u76d6\u3002\n\n### \u5148\u80e1\u4e00\u4e2a\u8fde\u53f6\u5b50\u662f\u6700\u4f18\u60c5\u51b5\u7684\u8bc1\u660e:\n\n\u8fde\u4e24\u4e2a\u70b9\u5373\u53ef\u4f7f\u8fd9\u4e24\u70b9\u5230\u5176lca\u4e0a\u7684\u70b9\u88ab\u8986\u76d6\u3002\n\n\u8bb0\u8fde\u63a5\u7684\u70b9\u4e3a$x$,$y$\u3002\n\n1. \u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e2a\u70b9\u662f\u53f6\u5b50(\u5047\u8bbe\u662f$y$)\n\n- \u82e5$x$\u662f$y$\u7684\u7956\u5148\uff0c\u6b64\u6b21\u8fde\u8fb9\u53ef\u4ee5\u8986\u76d6$x$\u5230$y$\u8def\u5f84\u4e0a\u7684\u70b9\u3002\u800c\u8fde\u63a5$x$\u53e6\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684\u70b9\u4e0e$y$\u5fc5\u80fd\u4f7f$x$\u5230$y$\u8def\u5f84\u4e0a\u7684\u70b9\u88ab\u8986\u76d6\u3002\n\n- \u82e5$x$\u4e0d\u662f$y$\u7684\u7956\u5148\uff0c\u6b64\u6b21\u8fde\u8fb9\u53ef\u4ee5\u8986\u76d6$x$,$y$\u5230\u4ed6\u4eeclca\u4e0a\u7684\u6240\u6709\u70b9\u3002\u800c\u8fde\u63a5$x$\u5b50\u6811\u5185\u7684\u4efb\u610f\u4e00\u70b9\u5fc5\u80fd\u4f7f$x$,$y$\u5230\u4ed6\u4eeclca\u4e0a\u7684\u6240\u6709\u70b9\u88ab\u8986\u76d6\u3002\n\n2. \u5982\u679c\u8fde\u63a5\u7684\u4e0d\u662f\u53f6\u8282\u70b9\u3002\n\n- \u82e5$y$\u5728$x$\u5b50\u6811\u4e2d($x$\u5728$y$\u5b50\u6811\u4e2d\u540c\u7406)\u3002\u5bf9\u4e8e\u6b64\u6b21\u8fde\u8fb9\uff0c\u5fc5\u5b9a\u4e0d\u80fd\u8986\u76d6\u5230$y$\u5b50\u6811\u4e2d\u7684\u70b9\uff0c\u800c\u8fde\u63a5$y$\u5b50\u6811\u5185\u7684\u4efb\u610f\u4e00\u70b9\u4e0e$x$\u5fc5\u5b9a\u80fd\u4f7f$x$\u5230$y$\u7684\u8def\u5f84\u88ab\u8986\u76d6\u3002\n\n- \u82e5$y$\u4e0d\u5728$x$\u7684\u5b50\u6811\uff0c\u90a3\u4e48\u6b64\u6b21\u8fde\u8fb9\u4e4b\u540e\uff0c\u5fc5\u5b9a\u8fd8\u9700\u8981\u82e5\u5e72\u6b21\u8fde\u8fb9\u4f7f$x$\u5b50\u6811\u548c$y$\u5b50\u6811\u4e2d\u7684\u70b9\u88ab\u8986\u76d6\u3002\u800c\u8fde\u63a5$x$\u5b50\u6811\u6216$y$\u5b50\u6811\u4e2d\u7684\u4efb\u610f\u4e00\u70b9\uff0c\u5fc5\u80fd\u4f7f\u70b9$x$,$y$\u88ab\u8986\u76d6\u3002\n\n\u81f3\u6b64\uff0c\u53ef\u4ee5\u77e5\u9053\u8fde\u63a5\u4e24\u53f6\u8282\u70b9\u80fd\u8986\u76d6\u7684\u70b9\u5305\u62ec\u4e0d\u8fde\u53f6\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u4e14\u6240\u6709\u70b9\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u53f6\u8282\u70b9\u8fdb\u884c\u8986\u76d6\u3002\u6240\u4ee5\u8fde\u53f6\u8282\u70b9\u662f\u4e00\u79cd\u6700\u4f18\u60c5\u51b5\u3002\n\n### \u518d\u80e1\u4e00\u4e2a\u80fd\u5b8c\u5168\u8986\u76d6\u53f6\u8282\u70b9\u7684\u8bc1\u660e\u3002\n\n~~(\u8fd9\u4e0b\u6807\u9898\u884c\u4e0d\u957f\u4e86\u5427\u3002\u3002)~~\n\n\u8fdedfs\u5e8f\u4e0b\u7b2c$i$\u4e2a\u53f6\u5b50\u548c\u7b2c$i+$ $\\lceil$ $k/2$ $\\rceil$\u4e2a\u53f6\u5b50\u5c31\u4e00\u5b9a\u80fd\u8986\u76d6\u6240\u6709\u70b9\u3002(k\u4e3a\u53f6\u8282\u70b9\u4e2a\u6570)\n\n\u5bf9\u4e8e\u53f6\u8282\u70b9\uff0c\u53ea\u8981\u8fde\u8fb9\u5c31\u80fd\u8986\u76d6\u3002\n\n\u5bf9\u4e8e\u5176\u4ed6\u70b9$x$\uff0c\u53ea\u8981$x$\u5b50\u6811\u5185\u6709\u53f6\u8282\u70b9\u8fde\u5230\u5176\u4ed6\u5b50\u6811\uff0c$x$\u548c$fa[x]$\u5c31\u4f1a\u88ab\u8986\u76d6\u3002\n\ndfs\u5e8f\u4e2d\uff0c\u5b50\u6811\u5185\u53f6\u8282\u70b9\u8fde\u7eed\u3002\n\n\u8bb0\u6709\u4e00\u975e\u53f6\u8282\u70b9$x$\u3002\n\n1. \u82e5$x$\u4e2d\u53f6\u8282\u70b9\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e$\\lceil$ $k/2$ $\\rceil$\u3002\u4efb\u610f\u53f6\u8282\u70b9\u7684\u8fde\u8fb9\u90fd\u4f1a\u8fde\u5230\u975e$x$\u5b50\u6811\u5185\u7684\u70b9\u3002\n\n2. \u82e5$x$\u4e2d\u53f6\u8282\u70b9\u4e2a\u6570\u5927\u4e8e$\\lceil$ $k/2$ $\\rceil$\u3002\u524d$\\lceil$ $k/2$ $\\rceil$\u4e2a\u53f6\u8282\u70b9\u4f1a\u88abdfs\u5e8f\u5c0f\u7684\u975e$x$\u5b50\u6811\u5185\u7684\u53f6\u8282\u70b9\u8fde\u8fb9\u3002\u540e$\\lceil$ $k/2$ $\\rceil$\u4e2a\u53f6\u8282\u70b9\u4f1a\u5411dfs\u5e8f\u5927\u7684\u975e$x$\u5b50\u6811\u5185\u7684\u53f6\u8282\u70b9\u8fde\u8fb9\u3002\n\n\u81f3\u6b64\uff0c\u53ef\u4ee5\u77e5\u9053\u8fdedfs\u5e8f\u4e0b\u7b2c$i$\u4e2a\u53f6\u5b50\u548c\u7b2c$i+$ $\\lceil$ $k/2$ $\\rceil$\u4e2a\u53f6\u5b50\u5c31\u4e00\u5b9a\u80fd\u6ee1\u8db3\u4e0a\u8ff0\u60c5\u51b5\uff0c\u5373\u80fd\u5b8c\u5168\u8986\u76d6\u6240\u6709\u70b9\u3002\n\n### \u8868\u8ff0\u4e0d\u662f\u5f88\u6e05\u52a0\u4e0a\u53e3\u80e1\u7684\u8bc1\u660e--\u611f\u6027\u7406\u89e3\u5427\u3002\u3002\u3002\n\n### \u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\n\n\u6ce8\u610f\u8981\u4ece\u5ea6\u6570\u4e0d\u4e3a1\u7684\u70b9\u5f00\u59cb\u641c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nconst int Mx=5e5+10;\nint n,m,fir[Mx],nex[Mx<<1],to[Mx<<1],tot,de[Mx];\nstruct Edge{int x,y;}E[Mx];\nvoid addEdge(int x,int y){\n    nex[++tot]=fir[x];fir[x]=tot;to[tot]=y;de[x]++;\n    nex[++tot]=fir[y];fir[y]=tot;to[tot]=x;de[y]++;\n}\nint rem[Mx],top;\nvoid dfs(int x,int f){\n    int flag=0;\n    for(int i=fir[x];i;i=nex[i]){\n        int v=to[i];\n        if(v==f)continue;\n        dfs(v,x);\n        flag=1;\n    }\n    if(flag==0)rem[++top]=x;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1,x,y;i<n;i++){\n        scanf(\"%d%d\",&x,&y);\n        addEdge(x,y);\n    }\n    int st=0;\n    for(int i=1;i<=n;i++)if(de[i]>1){st=i;break;}\n    if(st==0)return puts(\"1\"),0;\n    dfs(st,0);\n    for(int i=1;i<=top/2;i++)E[++m]=(Edge){rem[i],rem[i+top/2]};\n    if(top&1)E[++m]=(Edge){rem[1+top/2],rem[top]};\n    printf(\"%d\\n\",m);\n    for(int i=1;i<=m;i++)printf(\"%d %d\\n\",E[i].x,E[i].y);\n}\n```\n~~\u8fd8\u6709\u4e24\u5929\u5c31\u9000\u5f79\u7684\u6211\u8fd8\u5728\u8fd9\u8fb9\u5199\u535a\u5ba2\u3002~~\n",
        "postTime": 1571294703,
        "uid": 32483,
        "name": "2344b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4665 \u3010[BalticOI 2015]Network\u3011"
    },
    {
        "content": "\u7ffb\u8bd1\u597d\u8bc4\u3002\n\n[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4665)\n\n## \u9898\u610f\u7b80\u5316\n\u7ed9\u5b9a\u4e00\u9897 $\\text{n}$ \u4e2a\u70b9\u7684\u65e0\u6839\u6811\uff0c\u6c42\u6700\u5c11\u52a0\u591a\u5c11\u6761\u8fb9\u4f7f\u5f62\u6210\u7684\u56fe\u4efb\u610f\u5220\u9664\u4e00\u6761\u8fb9\u540e\u90fd\u8054\u901a\uff0c\u8fb9\u662f\u65e0\u5411\u7684\u3002\n\u8f93\u51fa\u6700\u5c11\u52a0\u8fb9\u6570\u548c\u4efb\u610f\u4e00\u79cd\u52a0\u8fb9\u65b9\u6848\u3002\n\n---\n\u4e00\u9053\u4e0d\u9519\u7684\u6784\u9020\u9898\u3002\n\n\u9996\u5148\u663e\u7136\u8fde\u63a5\u7684\u8fb9\u90fd\u662f\u53f6\u5b50\u80af\u5b9a\u4e0d\u4f1a\u6bd4\u5176\u5b83\u65b9\u6848\u8981\u52a3\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u56fe\u662f\u4e2a\u73af\uff0c\u90a3\u4e48\u65ad\u4e00\u6761\u8fb9\u5c31\u4e0d\u4f1a\u4f7f\u6b64\u56fe\u4e0d\u8fde\u901a\u3002\u6240\u4ee5\u9009\u4e24\u4e2a\u53f6\u8282\u70b9\u8fde\u63a5\u6700\u4f18\u3002\u8fd9\u4f7f\u5f97\u73af\u4e0a\u8282\u70b9\u6700\u591a\u3002\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u6362\u4e3a\u9009\u51fa\u5c3d\u91cf\u5c11\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u662f\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u8986\u76d6\u5b8c\u6811\u4e0a\u6240\u6709\u8fb9\u3002\n\n\u8fd9\u79cd\u9898\u53ef\u4ee5**\u5c1d\u8bd5\u8bc1\u660e\u7b54\u6848\u7684\u4e0a/\u4e0b\u754c**\u7136\u540e\u5bf9\u7740\u6784\u9020\u3002\u8fd9\u9898\u5047\u8bbe\u53f6\u5b50\u8282\u70b9\u6709 $\\text{m}$ \u4e2a\uff0c\u663e\u7136\u7b54\u6848\u4e0d\u4f1a\u5c0f\u4e8e  $\\lceil \\frac{m}{2} \\rceil$ \u3002\u56e0\u4e3a\u6bcf\u4e2a\u53f6\u5b50\u90fd\u9700\u8981\u4e00\u6761\u8fb9\u6765\u4f7f\u5176\u4e0e\u7236\u4eb2\u53cc\u8054\u901a\u3002\n\n\u8003\u8651\u6784\u9020\u4e00\u4e2a\u7b54\u6848\u4e3a $\\lceil \\frac{m}{2} \\rceil$ \u7684\u89e3\u3002\n\n---\n\u5047\u5982\u6211\u4eec\u9009\u53d6\u4e86\u4e00\u4e2a\u8282\u70b9 $\\text{x}$ \u4f5c\u4e3a\u6839\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u53f6\u5b50\u90fd\u80fd\u548c\u4e00\u4e2a\u4e0e\u5b83\u4e0d\u5c5e\u4e8e\u540c\u4e00\u68f5\uff08\u6839\u8282\u70b9\u513f\u5b50\u4e3a\u6839\uff09\u5b50\u6811\u7684\u53f6\u5b50\u5339\u914d\u3002\n\n\u4ee4 $a_k$ \u8868\u793a\u5176\u5404\u4e2a\u513f\u5b50\u8282\u70b9\u5b50\u6811\u5185\u7684\u53f6\u5b50\u4e2a\u6570\u3002\u6211\u4eec\u76f8\u5f53\u4e8e\u6bcf\u6b21\u9009\u62e9\u4e00\u7ec4\u975e\u96f6\u7684 $a_i$ , $a_j$ \u5c06\u5b83\u4eec\u90fd\u51cf 1\uff0c\u8868\u793a\u8fd9\u4e24\u4e2a\u5b50\u6811\u5185\u9009\u62e9\u4e24\u4e2a\u53f6\u5b50\u5339\u914d\uff0c\u6267\u884c\u5230\u6700\u540e\u5982\u679c\u5269\u4e0b\u4e86\u4e00\u4e2a 1 \u5c31\u5c06\u5176\u968f\u4fbf\u548c\u4e00\u4e2a**\u5176\u5b83**\u5b50\u6811\u7684\u53f6\u5b50\u5339\u914d\u3002\n\n\u663e\u7136\u5f53\u6700\u5927\u7684 $a_i$ \u7684\u4e24\u500d\u8d85\u8fc7 $\\sum{a_i}$ \u65f6\u5c31\u4e0d\u5b58\u5728\u4efb\u4f55\u53ef\u884c\u65b9\u6848\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u627e\u4e00\u4e2a\u7c7b\u4f3c\u201c\u91cd\u5fc3\u201d\u7684\u70b9\uff08\u53ea\u4e0d\u8fc7\u662f\u5b50\u6811\u5927\u5c0f\u6539\u4e3a\u5b50\u6811\u53f6\u5b50\u4e2a\u6570\uff09\u4f5c\u4e3a\u6839\uff0c\u7136\u540e\u6bcf\u6b21\u8d2a\u5fc3\u5730\u9009\u53d6\u6700\u5927\u7684\u4e00\u7ec4 $a_i$, $a_j$ \u53bb\u5339\u914d\uff0c\u5404\u81ea\u51cf $1$ \u653e\u56de\u53bb\uff0c\u76f4\u5230\u65e0\u6cd5\u6267\u884c\u5c31\u597d\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u4e00\u5b9a\u80fd\u51fa\u89e3\u5462\uff1f\u8003\u8651\u5f52\u7eb3\u8bc1\u660e\uff0c\u9009\u53d6\u6700\u5927\u7684 $a_i$, $a_j$ \u90fd\u51cf $1$ \u585e\u56de\u53bb\uff0c\n$a_k$ \u4f9d\u7136\u6ee1\u8db3\u6700\u5927\u503c\u4e24\u500d\u4e0d\u8d85\u8fc7\u603b\u548c\u3002\n\n\u7136\u540e\u8fb9\u754c\u60c5\u51b5\u4e24\u4e2a $1$ \u662f\u663e\u7136\u6210\u7acb\u7684\u3002\u8bc1\u6bd5\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\text{O(nlogn)}$\u3002\n\n---\n\u7531\u4e8e`dfs`\u7684\u6027\u8d28\uff0c\u6211\u4eec\u641e\u51fa\u6240\u6709\u53f6\u5b50\u8282\u70b9\u540e\u6390\u5934\u6390\u5c3e\u5373\u53ef\u5b8c\u6210\u5339\u914d\u3002\u5373**\u6bcf\u4e2a\u53f6\u5b50\u90fd\u80fd\u548c\u4e00\u4e2a\u4e0e\u5b83\u4e0d\u5c5e\u4e8e\u540c\u4e00\u68f5\uff08\u6839\u8282\u70b9\u513f\u5b50\u4e3a\u6839\uff09\u5b50\u6811\u7684\u53f6\u5b50\u5339\u914d\u3002**\n\n\u8bb0\u5f97\u8981\u9009\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u4f5c\u4e3a\u6839\u8dd1`dfs`\u3002\n\n\u53ef\u80fd\u5927\u5bb6\u542c\u5f97\u4e91\u91cc\u96fe\u91cc\uff0c\u653e\u4e00\u4e0b\u4ee3\u7801\u7ed9\u5927\u5bb6\u53c2\u8003\u5427\u3002\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nconst int N=5e5+10;\n\nint n,fir[N],tot,du[N],leaf[N],cnt;\nstruct node {int to,nex;} e[N << 1];\n\nvoid add(int u,int v)\n{\n\te[++tot].to=v;\n\te[tot].nex=fir[u];\n\tfir[u]=tot; du[v]++;\n\treturn ;\n}\n\nvoid dfs(int x,int dad)\n{\n\tbool f=true;\n\tfor(int i=fir[x];i;i=e[i].nex)\n\t\tif(e[i].to^dad) {f=false; dfs(e[i].to,x);}\n\tif(f) leaf[++cnt]=x;\n\treturn ;\n}\n\nint main()\n{\n//\tfreopen(\"work.in\",\"r\",stdin); freopen(\"work.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(int i=1,u,v;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v); add(v,u);\n\t}\n\tint root=0;\n\tfor(int i=1;i<=n && !root;i++) if(du[i] > 1) root=i;\n\tif(!root) return printf(\"1\"),0;//\u8fb9\u754c\n\tdfs(root,0);\n\tprintf(\"%d\\n\",(cnt+1)>>1);\n\tfor(int i=1;i<=cnt>>1;i++) printf(\"%d %d\\n\",leaf[i],leaf[i+(cnt>>1)]);\n\tif(cnt&1) printf(\"%d %d\",leaf[(cnt>>1)+1],leaf[cnt]);\n//\tfclose(stdin); fclose(stdout);\n\treturn 0;\n}\n```\n\u611f\u8c22\u9605\u8bfb\uff01\u60a8\u7684\u70b9\u8d5e\u548c\u8bc4\u8bba\u662f\u5bf9\u4f5c\u8005\u6700\u5927\u7684\u652f\u6301!",
        "postTime": 1613360766,
        "uid": 240191,
        "name": "MY\uff08\u4e00\u540d\u849f\u84bb\uff09",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4665 \u3010[BalticOI 2015]Network\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\u5927\u6982\u601d\u8def\u4f1a\u6d41\u7545\u4e9b\u3002\n\n### \u9898\u610f\u7b80\u8ff0\n\u5728\u4e00\u68f5\u6811\u4e0a\u9009\u62e9\u82e5\u5e72\u65e0\u8fb9\u7684\u4e24\u70b9\u8fde\u8fb9\uff0c\u4f7f\u5f97\u5220\u53bb\u4efb\u610f\u4e00\u6761\u8fb9\u540e\u56fe\u4ecd\u8fde\u901a\u3002\n\n### \u5206\u6790\n\u7ed9\u4e24\u70b9\u8fde\u8fb9\u540e\uff0c\u5220\u53bb\u4e24\u70b9\u8def\u5f84\u4e0a\u7684\u8fb9\u4e0d\u518d\u5f71\u54cd\u8fde\u901a\u6027\u3002\u4e8e\u662f\u95ee\u9898\u7b49\u4ef7\u4e8e\u8986\u76d6\u82e5\u5e72\u70b9\u5bf9\u95f4\u8def\u5f84\uff0c\u4f7f\u5f97\u6bcf\u6761\u6811\u8fb9\u81f3\u5c11\u88ab\u8986\u76d6\u4e00\u6b21\u3002\n\n\u7531\u4e8e\u4e0e\u53f6\u7ed3\u70b9\u76f8\u8fde\u7684\u8fb9\u53ea\u80fd\u88ab\u53f6\u7ed3\u70b9\u8986\u76d6\uff0c\u6545\u6bcf\u4e2a\u53f6\u7ed3\u70b9\u81f3\u5c11\u9700\u8fde\u4e00\u6761\u8fb9\u3002\u8bbe\u5171\u6709 $k$ \u4e2a\u53f6\u7ed3\u70b9\uff0c\u8003\u8651\u5c06\u53f6\u7ed3\u70b9\u4e24\u4e24\u8fde\u8fb9\u5373\u4e3a\u7b54\u6848\u4e0b\u754c $\\lceil\\dfrac{k}{2}\\rceil$\u3002\n\n\u8003\u8651\u662f\u5426\u80fd\u6784\u9020\u51fa\u6ee1\u8db3\u7b54\u6848\u4e0b\u754c\u7684\u5408\u6cd5\u65b9\u6848\u3002\u8003\u8651\u56fa\u5b9a\u4e00\u4e2a\u975e\u53f6\u7ed3\u70b9\u4e3a\u6839\uff0c\u53d1\u73b0\u82e5\u6bcf\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u53f6\u7ed3\u70b9\u5747\u4e0d\u5728\u6839\u7ed3\u70b9\u7684\u540c\u4e00\u68f5\u5b50\u6811\u4e2d\uff0c\u5219\u6839\u5230\u6bcf\u4e2a\u53f6\u7ed3\u70b9\u7684\u8def\u5f84\u90fd\u88ab\u8986\u76d6\uff0c\u8fd9\u4e0e\u6bcf\u6761\u8fb9\u5747\u88ab\u8986\u76d6\u7b49\u4ef7\u3002\n\n\u4e00\u4e2a\u6734\u7d20\u7684\u8d2a\u5fc3\u60f3\u6cd5\u662f\u5728\u83b7\u5f97 dfs \u5e8f\u4e2d\u8bbf\u95ee\u6bcf\u4e2a\u53f6\u7ed3\u70b9\u7684\u987a\u5e8f\u540e\uff0c\u4f7f\u5f97\u8fde\u8fb9\u7684\u4e24\u4e2a\u53f6\u7ed3\u70b9\u5728\u8be5\u987a\u5e8f\u4e2d\u8ddd\u79bb\u6700\u5c0f\u503c\u5c3d\u91cf\u5927\uff0c\u5373\u5c06\u7b2c $i$ \u4e2a\u8bbf\u95ee\u7684\u53f6\u7ed3\u70b9\u4e0e\u7b2c $i+\\lfloor\\dfrac{k}{2}\\rfloor$ \u4e2a\u8bbf\u95ee\u7684\u53f6\u7ed3\u70b9\u8fde\u8fb9\u3002\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u4e00\u8d2a\u5fc3\u7b56\u7565\u662f\u6b63\u786e\u7684\uff08\u53ef\u4ee5\u5728\u5176\u5b83\u9898\u89e3\u627e\u5230\u8bba\u8ff0\uff09\u2014\u2014\u4f46\u4e0d\u591f\u663e\u7136\u3002\u4f46\u82e5\u8fd9\u68f5\u6811\u6ee1\u8db3\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d\u53f6\u7ed3\u70b9\u4e2a\u6570\u5747\u4e0d\u8d85\u8fc7 $\\lfloor\\dfrac{k}{2}\\rfloor$\uff0c\u7b56\u7565\u4fbf\u663e\u7136\u6b63\u786e\u4e86\u3002\u8003\u8651\u662f\u5426\u80fd\u591f\u627e\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u6839\u7ed3\u70b9\uff0c\u53d1\u73b0\u8be5\u70b9\u6027\u8d28\u4e8b\u5b9e\u4e0a\u4e0e\u6811\u7684\u91cd\u5fc3\u6781\u5176\u7c7b\u4f3c\u3002\u4e8e\u662f\u6a21\u4eff\u6811\u7684\u91cd\u5fc3\u7684\u5e73\u79fb\u6cd5\uff0c\u53ef\u77e5\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u662f\u5b58\u5728\u7684\uff0c\u4e14\u4f7f\u7528\u6c42\u51fa\u5b50\u6811\u53f6\u7ed3\u70b9\u6570\u6700\u5927\u503c\u6700\u5c0f\u7684\u70b9\u7684\u7684\u65b9\u6cd5\u5373\u53ef\u6c42\u51fa\u3002\n\n\u5f53\u53f6\u7ed3\u70b9\u4e2a\u6570\u4e3a\u5947\u6570\u65f6\uff0c\u6700\u540e\u8bbf\u95ee\u7684\u53f6\u7ed3\u70b9\u5c06\u65e0\u8fde\u8fb9\u3002\u6b64\u65f6\u5c06\u5176\u4e0e\u6700\u5148\u8bbf\u95ee\u7684\u53f6\u7ed3\u70b9\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\operatorname{O}(n)$\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define loop(i,from,to) for(int i=(from);i<=(to);++i)\nusing namespace std;\nconst int maxn=5e5;\nint n,x,y,g,leaves,size[maxn+1],maxsize[maxn+1],order[maxn+1];\nvector<int> edge[maxn+1];\nvoid dfs1(int now,int parent){\n\tsize[now]=(edge[now].size()==1);\n\tfor(auto to:edge[now])if(to!=parent)dfs1(to,now),size[now]+=size[to],maxsize[now]=max(maxsize[now],size[to]);\n\tmaxsize[now]=max(maxsize[now],leaves-size[now]);\n\tif(maxsize[now]<maxsize[g]&&edge[now].size()!=1)g=now;\n\treturn;\n}\nvoid dfs2(int now,int parent){\n\tif(edge[now].size()==1)order[++order[0]]=now;\n\tfor(auto to:edge[now])if(to!=parent)dfs2(to,now);\n\treturn;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tloop(i,1,n-1)scanf(\"%d%d\",&x,&y),edge[x].push_back(y),edge[y].push_back(x);\n\tloop(i,1,n)leaves+=(edge[i].size()==1);\n\tmaxsize[0]=n,dfs1(1,0),dfs2(g,0);\n\tprintf(\"%d\\n\",(leaves+1)/2);\n\tloop(i,1,leaves/2)printf(\"%d %d\\n\",order[i],order[i+leaves/2]);\n\tif(leaves&1)printf(\"%d %d\\n\",order[1],order[leaves]);\n\treturn 0;\n}\n```",
        "postTime": 1629537512,
        "uid": 67952,
        "name": "\u767d\u9c9f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4665 [BalticOI 2015]Network"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u660e\u663e\uff0c\u662f\u8981\u94fe\u63a5\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u3002\n\n\u7136\u540e\u770b\u8138\u9ed1\u4e0d\u9ed1\u3002\n\n```\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n;\nint du[1050005],tot;\nint a[1050005];\nsigned main(){\n\tsrand(time(NULL));\n\tcin>>n;\n\tfor(int i=1,x,y;i<=n-1;++i){\n\t\tscanf(\"%lld %lld\",&x,&y);\n\t\tdu[x]++;\n\t\tdu[y]++;\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tif(du[i]==1)\n\t\t\ttot++,a[tot]=i;\n\t}\n\tcout<<(tot+1)/2<<endl;\n\trandom_shuffle(a+1,a+tot+1);\n\trandom_shuffle(a+1,a+tot+1);\n\trandom_shuffle(a+1,a+tot+1);\n\tfor(int i=1;i<=tot/2;++i)\n\t\tprintf(\"%lld %lld\\n\",a[i],a[tot-i+1]);\n\tif(tot%2==1)\n\t\tprintf(\"%lld %lld\\n\",a[1],a[tot/2+1]);\n}\n```\n\u66b4\u529b\u679a\u4e3e\u8fc7\u6837\u4f8b\uff0crandom_shuffle\u51fa\u5947\u8ff9\uff01",
        "postTime": 1571119000,
        "uid": 53058,
        "name": "Algha_Porthos",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4665 \u3010[BalticOI 2015]Network\u3011"
    },
    {
        "content": "\u9898\u610f\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\u5728\u4e00\u68f5\u6811\u4e0a\u52a0\u5c3d\u91cf\u5c11\u7684\u8fb9\uff0c\u4f7f\u5f97\u6bcf\u6761\u8fb9\u81f3\u5c11\u5728\u4e00\u4e2a\u73af\u4e2d\u3002\n\n\u9996\u5148\u4e0d\u96be\u901a\u8fc7\u6837\u4f8b\u53d1\u73b0\u4e0b\u9762\u4e24\u4e2a\u7ed3\u8bba\uff1a\n\n- Observation 1. $k = \\lceil \\frac{leaf}{2} \\rceil$\uff0c\u5176\u4e2d $leaf$ \u8868\u793a\u53f6\u5b50\u6570\u3002\n- Observation 2. \u6700\u4f18\u65b9\u6848\u4e2d\u7684\u6240\u6709 $a, b$ \u4e00\u5b9a\u5747\u4e3a\u53f6\u5b50\u3002\n\nObservation 2 \u7684\u8bc1\u660e\uff1a\n\n\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u5c06\u52a0\u4e00\u6761\u8fb9 $(u, v)$ \u7b49\u6548\u4e3a\uff1a\n\n- \u8ba9\u6811\u4e0a $u, v$ \u8fd9\u6761\u94fe\u4e0a\u7684\u6240\u6709\u8fb9\u8fbe\u6210\u201c\u81f3\u5c11\u5728\u4e00\u4e2a\u73af\u4e2d\u201d\u7684\u76ee\u6807\u3002\n\n\u4e8e\u662f\uff08\u4e0b\u6587\u5047\u5b9a\u6211\u4eec\u968f\u610f\u94a6\u5b9a\u4e00\u4e2a\u70b9\u4e3a\u6839\u4e14 $a$ \u7684\u6df1\u5ea6\u5c0f\u4e8e $b$\uff09\uff1a\n\n1. $a$ \u4e3a $b$ \u7684\u7956\u5148\n\n\u9996\u5148\uff0c\u7531\u4e8e $n \\geq 3$\uff0c\u539f\u6811\u4e2d\u4e0d\u53ef\u80fd\u4ec5\u4ec5\u5b58\u5728 $1$ \u4e2a\u53f6\u5b50\u3002\n\n\u4e8e\u662f\u6b64\u65f6\u6211\u4eec\u5c06 $b$ \u66ff\u6362\u4e3a\u4e00\u4e2a $b$ \u5b50\u6811\u5185\u7684\u53f6\u5b50\u3001\u5c06 $a$ \u66ff\u6362\u4e3a\u4e00\u4e2a\u53f6\u5b50 $a'$ \u4f7f\u5f97 $lca(a', b)$ \u4e3a $a$ \u7684\u7956\u5148\u3002\n\n2. $a$ \u4e0d\u4e3a $b$ \u7684\u7956\u5148\n\n\u6b64\u65f6\u53ef\u4ee5\u8fbe\u6210\u76ee\u6807\u7684\u6700\u6d45\u70b9\u56fa\u5b9a\u4e3a $lca(a, b)$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u628a $a, b$ \u5206\u522b\u66ff\u6362\u4e3a\u5176\u5b50\u6811\u5185\u7684\u4e00\u4e2a\u53f6\u5b50\u5373\u53ef\u3002\n\nObservation 1 \u7684\u8bc1\u660e\uff1a\n\n\u9996\u5148\u8fd9\u73a9\u610f\u663e\u7136\u662f\u7b54\u6848\u4e0b\u754c\u2014\u2014\u56e0\u4e3a\u6211\u4eec\u4f1a\u5c3d\u91cf\u4e0d\u91cd\u590d\u5730\u9009\u53f6\u5b50\u3002\n\n\u7136\u540e\u5c31\u662f\u4eba\u7c7b\u667a\u6167\u7684\u4e00\u6b65\u4e86\u2014\u2014\n\n- \u6211\u4eec\u628a\u6240\u6709\u53f6\u5b50\u6293\u51fa\u6765\uff0c\u6309 dfs \u5e8f\u5347\u5e8f\u6392\u5e8f\uff0c\u524d\u4e00\u534a\u4e0e\u540e\u4e00\u534a\u7684\u5bf9\u5e94\u70b9\u914d\u5bf9\uff0c\u5982\u679c\u6700\u540e\u5355\u51fa\u4e00\u4e2a\u6700\u5927\u7684\u5c31\u8ddf\u6700\u5c0f\u7684\u914d\u5bf9\u3002\n\n\u90a3\u5b83\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1f\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u975e\u6839\u8282\u70b9 $u$\u3002\n\n1. $u$ \u5b50\u6811\u5185\u53f6\u5b50\u4e2a\u6570 $\\leq \\lfloor \\frac{leaf}{2} \\rfloor$\n\n\u6b64\u65f6 $u \\to fa_u$ \u4e00\u5b9a\u4f1a\u8fbe\u6210\u76ee\u6807\uff0c\u56e0\u4e3a\u4e00\u5b9a\u6709\u4ece\u5185\u5411\u5916\u7684\u8fde\u8fb9\u3002\n\n2. $u$ \u5b50\u6811\u5185\u53f6\u5b50\u4e2a\u6570 $> \\lfloor \\frac{leaf}{2} \\rfloor$\n\n\u663e\u7136\u6b64\u65f6 $u$ \u5b50\u6811\u5185\u4e0d\u4f1a\u6db5\u76d6\u6240\u6709\u53f6\u5b50\uff0c\u4e8e\u662f\u6700\u5c0f / \u6700\u5927\u4e4b\u4e00\u603b\u4f1a\u5411\u5176\u4e2d\u8fde\u8fb9\u3002\n\n\u81f3\u6b64 Observation 1 \u5f97\u8bc1\u3002\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h>\n\ntypedef struct {\n\tint nxt;\n\tint end;\n} Edge;\n\nint cnt = 0;\nint head[500007], deg[500007], rnk[500007], leaf[500007];\nEdge edge[1000007];\n\ninline void add_edge(int start, int end){\n\tcnt++;\n\tedge[cnt].nxt = head[start];\n\thead[start] = cnt;\n\tedge[cnt].end = end;\n}\n\nvoid dfs(int u, int father, int &id){\n\trnk[++id] = u;\n\tfor (int i = head[u]; i != 0; i = edge[i].nxt){\n\t\tint x = edge[i].end;\n\t\tif (x != father) dfs(x, u, id);\n\t}\n}\n\nint main(){\n\tint n, id = 0, leaf_cnt = 0, half;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i < n; i++){\n\t\tint a, b;\n\t\tscanf(\"%d %d\", &a, &b);\n\t\tdeg[a]++;\n\t\tdeg[b]++;\n\t\tadd_edge(a, b);\n\t\tadd_edge(b, a);\n\t}\n\tdfs(1, 0, id);\n\tfor (int i = 1; i <= n; i++){\n\t\tif (deg[rnk[i]] == 1) leaf[++leaf_cnt] = rnk[i];\n\t}\n\thalf = leaf_cnt / 2;\n\tprintf(\"%d\\n\", (leaf_cnt + 1) / 2);\n\tfor (int i = 1; i <= half; i++){\n\t\tprintf(\"%d %d\\n\", leaf[i], leaf[i + half]);\n\t}\n\tif (leaf_cnt % 2 != 0) printf(\"%d %d\", leaf[1], leaf[leaf_cnt]);\n\treturn 0;\n}\n```",
        "postTime": 1666886845,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4665 \u3010[BalticOI2015] Network\u3011"
    },
    {
        "content": "\u4ee5\u4efb\u610f\u975e\u53f6\u8282\u70b9\u4e3a\u6839\u6c42 dfs \u6811\uff0c\u8bbe\u53f6\u5b50\u8282\u70b9\u4e3a $k$\uff0c\u7b54\u6848\u7684\u4e0b\u754c\u662f $\\left\\lceil\\frac{k}{2}\\right\\rceil$\uff0c\u73b0\u5728\u7ed9\u51fa\u4e00\u7ec4\u6784\u9020\u65b9\u6848\u8bc1\u660e\u8fd9\u4e2a\u4e0b\u754c\u53ef\u4ee5\u8fbe\u5230\u3002\n\n\u628a\u53f6\u5b50\u8282\u70b9\u6309\u7167 dfn \u6392\u5e8f\uff0c\u7136\u540e\u7b2c $i$ \u4e2a\u53f6\u5b50\u8fde\u5411\u7b2c $i+k/2$ \u4e2a\u53f6\u5b50\u3002\n\n\u5982\u679c\u6bcf\u6761\u8fb9\u90fd\u5728\u4e00\u4e2a\u73af\u91cc\uff0c\u90a3\u4e48\u8fd9\u4e2a\u56fe\u6ca1\u6709\u5272\u8fb9\uff0c\u5982\u679c\u6839\u8282\u70b9\u7684\u5b50\u6811\u5305\u542b\u7684\u53f6\u5b50\u8282\u70b9\u90fd $<k/2$\uff0c\u90a3\u4e48\u6bcf\u4e2a\u53f6\u5b50\u90fd\u80fd\u548c\u53e6\u5916\u4e00\u4e2a\u5b50\u6811\u7684\u53f6\u5b50\u5339\u914d\uff0c\u663e\u7136\u6bcf\u6761\u8fb9\u90fd\u4f1a\u88ab\u8986\u76d6\u5230\u3002\n\n\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5b50\u6811 $>k/2$\uff0c\u90a3\u4e48\u6ca1\u6709\u548c\u5b50\u6811\u5916\u7684\u70b9\u5339\u914d\u7684\u53ea\u6709\u8fd9\u4e2a\u5b50\u6811\u5185\u7684\u53f6\u5b50\uff0c\u5355\u72ec\u8003\u8651\u8fd9\u68f5\u5b50\u6811\uff0c\u4e00\u5b9a\u662f\u524d\u82e5\u5e72\u4e2a\u53f6\u5b50\u548c\u540e\u82e5\u5e72\u4e2a\u53f6\u5b50\u5339\u914d\uff0c\u5982\u679c\u5b83\u4eec\u4e0d\u5728\u8fd9\u4e2a\u5b50\u6811\u7684\u4e00\u68f5\u5b50\u6811\u5185\uff0c\u5c31\u5408\u6cd5\u4e86\uff0c\u5426\u5219\u8fd8\u4f1a\u5b58\u5728\u4e00\u4e2a\u66f4\u4e0b\u4e00\u5c42\u7684\u5b50\u6811\uff0c\u524d\u82e5\u5e72\u4e2a\u53f6\u5b50\u548c\u540e\u82e5\u5e72\u4e2a\u53f6\u5b50\u5339\u914d\u3002\u5982\u6b64\u9012\u5f52\u4e0b\u53bb\uff0c\u5230\u4e86\u6700\u5e95\u5c42\u7684\u65f6\u5019\u663e\u7136\u5408\u6cd5\u3002\n\n\u6240\u4ee5\u6574\u4e2a\u6784\u9020\u65b9\u6848\u662f\u5408\u6cd5\u7684\u3002",
        "postTime": 1632285482,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300d\u6d1b\u8c37P4665 [BalticOI 2015]Network"
    },
    {
        "content": "\u9ed1\u7684\u8fd8\u884c\n\n### \u9898\u610f\uff1a\u5728\u4e00\u68f5\u6811\u5185\u65b0\u5efa\u6700\u5c11\u7684\u8fb9\u4f7f\u5f97\u4efb\u610f\u5207\u6389\u4e00\u6761\u8fb9\u540e\u56fe\uff08\u52a0\u8fb9\u4e4b\u540e\u7684\u6811\uff09\u4ecd\u7136\u662f\u8054\u901a\u7684\n\n\u53f6\u8282\u70b9\u88ab\u5207\u6389\u76f8\u90bb\u7684\u90a3\u6761\u8fb9\u4e4b\u540e\u4e00\u5b9a\u5c31\u51fa\u8fd9\u4e2a\u8054\u901a\u5757\u4e86\n\n\u6240\u4ee5dfs\u627e\u5230\u6240\u6709\u7684\u53f6\u8282\u70b9\u8bb0\u4e0b\u6765\uff0c\u4e3acnt\n\n\u8981\u8f93\u51fa\u52a0\u7684\u8fb9\u6570\uff0c\u5373cnt-cnt/2\n\n\u7136\u540e\u6311\u4e24\u4e2a\u70b9\u8f93\u51fa\u6765\u5c31\u53ef\u4ee5\n\n\u6700\u540e\u7279\u5224\u4e00\u4e0b\u5947\u5076\u7684\u60c5\u51b5\n\n------------\n\n\u524d\u5411\u661f\uff0c\u8981\u6bd4\u6211\u7684vector\u5feb\u56db\u500d\u591a\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <complex>\n#include <algorithm>\n#include <climits>\n#include <vector>\n#define A 1000010\n\nusing namespace std;\ntypedef long long ll;\nstruct node {\n\tint next, to;\n}e[A];\nint head[A], num;\nvoid add(int fr, int to) {\n\te[++num].next = head[fr];\n\te[num].to = to;\n\thead[fr] = num;\n}\nint n, m, cnt, f[A], fa[A], x, y, in[A];\nvoid dfs(int fr) {\n\tif (in[fr] == 1) f[++cnt] = fr;\n\tfor (int i = head[fr]; i; i = e[i].next) {\n\t\tint ca = e[i].to;\n\t\tif (ca == fa[fr]) continue;\n\t\tfa[ca] = fr;\n\t\tdfs(ca);\n\t}\n}\n\nint main(int argc, char const *argv[]) {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i < n; i++) {\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tadd(x, y);\n\t\tadd(y, x);\n\t\tin[x]++, in[y]++;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (in[i]) {\n\t\t\tdfs(i);\n\t\t\tbreak;\n\t\t}\n\tprintf(\"%d\\n\", cnt - cnt / 2);\n\tfor (int i = 1; i <= cnt / 2; i++)\n\t\tif (f[i] < f[i + cnt / 2]) printf(\"%d %d\\n\", f[i], f[i + cnt / 2]);\n\t\telse printf(\"%d %d\\n\", f[i + cnt / 2], f[i]);\n\tif (cnt & 1) printf(\"%d %d\\n\", f[cnt / 2], f[cnt]);\n}\n```\n$vector$:\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <complex>\n#include <algorithm>\n#include <climits>\n#include <vector>\n#define A 1000010\n\nusing namespace std;\ntypedef long long ll;\nvector<int> v[A];\nint n, m, cnt, f[A], x, y, fa[A];\nvoid dfs(int fr) {\n\tif (v[fr].size() == 1) f[++cnt] = fr;\n\tfor (int i = 0; i < v[fr].size(); i++) {\n\t\tint ca = v[fr][i];\n\t\tif (ca == fa[fr]) continue;\n\t\tfa[ca] = fr;\n\t\tdfs(ca);\n\t}\n}\n\nint main(int argc, char const *argv[]) {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i < n; i++) {\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tv[x].push_back(y);\n\t\tv[y].push_back(x);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (v[i].size()) {\n\t\t\tdfs(i);\n\t\t\tbreak;\n\t\t}\n\tprintf(\"%d\\n\",cnt - cnt / 2);\n\tfor (int i = 1; i <= cnt / 2;i++) printf(\"%d %d\\n\", f[i], f[i + cnt / 2]);\n\tif (cnt & 1) printf(\"%d %d\\n\", f[cnt / 2], f[cnt]);\n\treturn 0;\n}\n```",
        "postTime": 1547360229,
        "uid": 78064,
        "name": "\u826f\u6708\u6faa\u4e8c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4665 \u3010[BalticOI 2015]Network\u3011"
    },
    {
        "content": "$\\text{Dfs}$\u3002\u9ed1\u6389\u7d2b\u786e\u5b9e\u633a\u8ba9\u4eba\u550f\u5618\u7684\u3010\u7b11\u3011\uff0c\u4e0d\u8fc7\u8fd9\u9898\u4e5f\u786e\u5b9e\u633a\u7b80\u5355\u7684\u2026\u2026\u627e\u5230\u6240\u6709\u53f6\u5b50\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u5ea6\u4e3a $1$ \u7684\u70b9\uff0c\u628a\u5b83\u4eec\u8fde\u8d77\u6765\u5c31\u884c\u4e86\u2026\u2026\n\n\u56e0\u4e3a\u8981\u4fdd\u8bc1\u76f8\u90bb\u7684\u8fde\u4e0a\uff0c\u8dd1\u4e00\u904d $\\text{Dfs}$ \u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 500005\nusing namespace std;\nint cnt,fst[MAXN],nxt[MAXN<<1],to[MAXN<<1];\nint n,ans[MAXN],tot,deg[MAXN];\nvoid AddEdge(int u,int v)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n}\nvoid Dfs(int u,int faz)\n{\n\tif(deg[u]==1) ans[++tot]=u;\n\tfor(int i=fst[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(v==faz) continue;\n\t\tDfs(v,u);\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tAddEdge(x,y);\n\t\tAddEdge(y,x);\n\t\tdeg[x]++;\n\t\tdeg[y]++;\n\t}\n\tDfs(1,0);\n\tprintf(\"%d\\n\",tot-tot/2);\n\tfor(int i=1;i<=tot/2;i++)\n\t{\n\t\tif(ans[i]>=ans[i+tot/2]) swap(ans[i],ans[i+tot/2]);\n\t\tprintf(\"%d %d\\n\",ans[i],ans[i+tot/2]);\n\t}\n\tif(tot&1) printf(\"%d %d\\n\",ans[tot/2],ans[tot]);\n\treturn 0;\n}\n```",
        "postTime": 1550659546,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4665 \u3010[BalticOI 2015]Network\u3011"
    }
]