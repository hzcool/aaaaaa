[
    {
        "content": "\u9898\u89e3\u771f\u7684\u662f\u4e94\u82b1\u516b\u95e8\u554aorz\n\n\u6c42\u6700\u5c0f\u751f\u6210\u6811\u5e72\u4ec0\u4e48\u554a\u96be\u9053\u4e0d\u662f\u4e2a\u5e76\u67e5\u96c6\u677f\u5b50\n\n\u6309\u65f6\u95f4sort\u4e00\u904d\uff0c\u6bcf\u6b21\u5408\u5e76\u4e24\u4e2a\u8282\u70b9\uff0c\u663e\u7136\u5982\u679c\u539f\u5148\u4e0d\u8fde\u901a\u90a3\u4e48\u5408\u5e76\u4e4b\u540e\u8054\u901a\u5757\u6570\u91cf--\n\n\u7136\u540e\u5982\u679cn==1\u5c31\u8f93\u51fa\u5f53\u524d\u65f6\u95f4return\n\n\u6700\u5c0f\u751f\u6210\u6811\u653e\u5230\u8fd9\u91cc\u6709\u4e9b\u6d6a\u8d39\u4e86\n\n\u597d\u50cf\u8fd8\u6709\u4eba\u5199\u4e8c\u5206???\u4e8c\u5206\u5e72\u4ec0\u4e48\u987a\u5e8f\u904d\u5386\u554a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct hh\n{\n\tint x,y,t;\n}a[200000];\nint f[200000],n,m;\nint cmp(const hh &a,const hh &b){return a.t<b.t;}\nint find(int x){return f[x]==x?x:(f[x]=find(f[x]));}\nint getin()\n{\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n\treturn x;\n}\nint main()\n{\n\tn=getin(),m=getin();\n\tif(n==1){cout<<0;return 0;}//\u5176\u5b9e\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u7684\u7279\u5224\n\tfor(int i=1;i<=m;i++)a[i].x=getin(),a[i].y=getin(),a[i].t=getin();\n\tsort(a+1,a+m+1,cmp);\n\tfor(int i=1;i<=n;i++)f[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint fx=find(a[i].x),fy=find(a[i].y);\n\t\tif(fx!=fy)f[fx]=fy,n--;\n\t\tif(n==1){cout<<a[i].t;return 0;}\n\t}\n\tcout<<-1<<endl;\n    return 0;\n}\n```",
        "postTime": 1534731443,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u65b9\u6cd5\u662f**\u5e76\u67e5\u96c6\u548c\u751f\u6210\u6700\u5c0f\u6811**\u3002\n\n\u6211\u6253\u7b97\u8be6\u7ec6\u5730\u8bb2\u4e00\u8bb2\u3002\n\n##\u5e76\u67e5\u96c6\n\n\u5e76\u67e5\u96c6\u662f\u5bf9\u6811\u7684\u4e00\u79cd\u64cd\u4f5c\uff0c\u65e8\u5728\u627e\u5230\u67d0\u4e2a\u8282\u70b9\u7684\u516c\u5171\u7956\u5148\uff08\u6700\u8001\u516c\u5171\u7956\u5148\uff09\u3002\u6211\u4eec\u5148\u8bb2\u4e00\u4e0b\u5e76\u3002\n\n###\u5e76\n\u5e76\u5c31\u662f\u8bb2\u4e24\u4e2a\u8282\u70b9\u5408\u5e76\u5230\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\uff08\u8fd9\u4e2a\u96c6\u5408\u5fc5\u987b\u662f\u6811\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u7956\u5148\uff0c\u6700\u8001\u516c\u5171\u7956\u5148\u7684\u7956\u5148\u5c31\u662f\u81ea\u5df1\uff0c\u800c\u6bcf\u4e2a\u8282\u70b9\u5728\u5408\u5e76\u524d\u7684\u521d\u59cb\u503c\u4e5f\u662f\u81ea\u5df1\uff0c\u4e5f\u5c31\u662f\uff1a\u82e5\u6709\u4e00\u4e2a\u8282\u70b9$ a $\uff0c\u8bbe\u5b83\u7684\u7956\u5148\u4e3a$ s[a] $\uff0c\u90a3\u4e48\u5b83\u7684\u521d\u59cb\u503c\u5c31\u662f$ s[a]=a $\u3002\u8fd9\u4e2a\u5408\u5e76\u64cd\u4f5c\u5e76\u4e0d\u96be\uff0c\u53ea\u8981\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u6709\u7956\u5148\uff0c\u6ca1\u6709\u5c31\u5f88\u597d\u529e\uff0c\u76f4\u63a5\u968f\u4fbf\u8fde\uff0c\u6bd4\u5982\uff1a$ a $\u548c$ b $\uff0c\u4ed6\u4eec\u90fd\u6ca1\u6709\u7956\u5148\uff08\u4e5f\u5c31\u662f\u7956\u5148\u662f\u81ea\u5df1\uff09\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5$ s[a]=b $\u4e86\uff0c\u5982\u679c$ s[a] \\neq a $\uff0c\u90a3\u4e48\u5c31\u8ba9$ b $\u7684\u6700\u8001\u7956\u5148\uff08\u53ef\u80fd\u662f\u81ea\u5df1\uff09\u518d\u5f80\u4e0a\u591a\u4e00\u4e2a\u7956\u5148$ s[a] $\uff0c\u6b64\u65f6$ b $\u7684\u6700\u8001\u7956\u5148\u4e5f\u5c31\u662f$ a $\u7684\u6700\u8001\u7956\u5148\u4e86\uff08\u4e0d\u4e00\u5b9a\u662f$ a $\uff09\u3002\u5177\u4f53\u7b97\u6cd5\u5982\u4e0b\uff1a\n\n```cpp\nvoid together(int *b, int a, int *s)//\u4e3a\u4e86\u6620\u7167\u4e0a\u9762\u7684\u8bf4\u660e\uff0ca\u548cb\u5c31\u8fd9\u6837\u5f04\u5427 \n{\n    if(s[*b]==*b)//a\u6ca1\u6709\u7956\u5148\u65f6\n        s[*b]=a;//\u4ee4a\u4e3ab\u7684\u7236\u4eb2\n    else\n        together(&s[*b], a, s);//\u5426\u5219\u7ee7\u7eed\u627eb\u7684\u7956\u5148\uff0c\u76f4\u5230b\u7684\u6700\u8001\u7956\u5148\uff0c\u7136\u540e\u5c06b\u7684\u6700\u8001\u7956\u5148\u7684\u7236\u4eb2\u8bbe\u4e3aa\n}\n```\n###\u67e5\n\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u67e5\u67d0\u4e2a\u8282\u70b9\u7684\u6700\u8001\u7956\u5148\u662f\u8c01\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u4e0b\u9762\u5224\u65ad\u67d0\u4e24\u4e2a\u8282\u70b9\u7684\u6700\u8001\u7956\u5148\u662f\u5426\u76f8\u540c\u800c\u51c6\u5907\u7684\u3002\u5047\u5982\u6709\u8fd9\u6837\u4e00\u7ec4\u5173\u7cfb\uff1a\n\n ![](https://cdn.luogu.com.cn/upload/pic/10787.png) \n\n\u6bd4\u5982\u6211\u4eec\u8981\u627e$ 1 $\u7684\u6700\u8001\u7956\u5148\uff0c\u90a3\u4e48\u600e\u4e48\u627e\u5462\uff1f\u90a3\u4e48\u5c31\u8981\u901a\u8fc7$ 3 $\u6765\u627e\uff0c\u518d\u5f80\u4e0a\u627e\uff0c\u8fd9\u6837\u7684\u8bdd\u4ee3\u7801\u5c31\u662f\uff1a\n\n```cpp\nint findfather(int s[], int x) \n{\n    if(x!=s[x])//\u5982\u679c\u4e0d\u662f\u6700\u8001\u7956\u5148\uff0c\u90a3\u4e48\u5c31\u5f80\u4e0a\u7ee7\u7eed\u627e\n        x=findfather(s, s[x]);//\u4ece\u4e0a\u9762\u4f20\u8fc7\u6765\u7684\u53c2\u6570\n    return s[x];//\u662f\u7956\u5148\uff0c\u5c31\u8fd4\u56de\u6700\u8001\u7956\u5148\u7684\u503c\n}\n```\n\u4f46\u662f\uff0c\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u4f1a\u6709\u5f88\u591a\u91cd\u590d\u5de5\u4f5c\u3002\u6bd4\u5982\u6211\u521a\u624d\u627e$ 1 $\uff0c\u73b0\u5728\u627e$ 2 $\uff0c\u90a3\u4e48\u4f60\u5c31\u91cd\u590d\u641c\u7d22\u4e86$ 2 $\u3002\u6b64\u65f6\u6211\u4eec\u5c31\u9700\u8981**\u538b\u7f29\u8def\u5f84**\uff0c\u4ee5\u4fbf\u540e\u9762\u67e5\u627e\u65f6\u66f4\u4fbf\u6377\u3002\u538b\u7f29\u8def\u5f84\u7684\u8bdd\uff0c\u5c31\u662f\u5728\u67e5\u627e\u7684\u65f6\u5019\uff0c\u987a\u5e26\u628a\u7ecf\u8fc7\u7684\u8282\u70b9\u7684\u7956\u5148\u76f4\u63a5\u6307\u5411\u6700\u8001\u7956\u5148\uff0c\u90a3\u4e48\u540e\u9762\u627e\u6700\u8001\u7956\u5148\u7684\u65f6\u5019\uff0c\u5c31\u4e00\u6b65\u5230\u4f4d\u4e86\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint findfather(int *s, int x)//*s\u4ee3\u8868\u7684\u662f\u76f4\u63a5\u5bf9s\u8fdb\u884c\u64cd\u4f5c \n{\n    if(x!=s[x])//\u4e0d\u662f\u6700\u8001\u7956\u5148\n        s[x]=findfather(s, s[x]);//\u6539\u53d8\u5176\u6307\u5411\uff0c\u4e00\u76f4\u5f80\u4e0a\u6307\uff0c\u76f4\u5230\u6700\u8001\u7956\u5148\u3002\n    return s[x];//\u662f\u6700\u8001\u7956\u5148\uff0c\u8fd4\u56de\u6700\u8001\u7956\u5148\u7684\u503c\n}\n```\n\u8fd9\u79cd\u65b9\u6cd5\u5341\u5206\u5de7\u5999\uff0c\u538b\u7f29\u8def\u5f84\u4e4b\u540e\uff0c\u67e5\u627e\u7684\u901f\u5ea6\u4e5f\u4f1a\u5feb\u5f97\u591a\u3002\n\n##\u5173\u4e8e\u672c\u9898\u76ee\n\n\u7531\u4e8e\u9898\u76ee\u539f\u672c\u4e0d\u662f\u6811\uff0c\u800c\u662f\u56fe\uff0c\u800c\u9898\u76ee\u53c8\u95ee\u7684\u662f\u6700\u77ed\u4fee\u597d\u8def\u5f97\u65f6\u95f4\uff0c\u5982\u679c\u662f\u56fe\uff0c\u90a3\u4e48\u4f1a\u6709\u591a\u6761\u8def\u8054\u901a\u4e24\u4e2a\u8282\u70b9\uff0c\u800c\u5176\u4e2d\u5fc5\u5b9a\u6709\u4e00\u6761\u6700\u77ed\u65f6\u95f4\u4fee\u597d\u7684\u8def\uff0c\u90a3\u4e48\u6700\u7ec8\u5fc5\u5b9a\u662f\u5176\u4e2d\u7684\u5305\u542b\u7684\u6700\u5c0f\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u751f\u6210\u6700\u5c0f\u6811\u3002\n\n##\u6700\u5c0f\u751f\u6210\u6811\u4e4bKruskal\u7b97\u6cd5\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7528\u5230\u7684\u65b9\u6cd5\u662f\uff0c\u5148\u5c06\u6240\u6709\u8fb9\u6309\u7167\u6743\u91cd\uff08\u6b64\u5904\u662f\u65f6\u95f4\u957f\u77ed\uff09\u6392\u5e8f\uff0c\u6211\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7684\u3002\u6392\u5e8f\u7528\u5230\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u53ea\u80fd\u662f$ O(nlgn) $\u4ee5\u4e0b\u7684\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\u3002\u6bd4\u5982\u5feb\u901f\u6392\u5e8f\uff0c\u8fd9\u4e9b\u5fc5\u987b\u5b66\uff0c\u6b64\u5904\u4e0d\u505a\u8d58\u8ff0\u3002\u6392\u597d\u5e8f\u4ee5\u540e\uff0c\u5c31\u4ece\u6743\u91cd\u6700\u5c0f\u7684\u8fb9\u5f00\u59cb\uff0c\u56e0\u4e3a\u6b64\u65f6\u6240\u6709\u8282\u70b9\u7684\u7956\u5148\u503c\u90fd\u4e3a\u81ea\u5df1\uff08\u4e5f\u5c31\u662f\u6240\u6709\u7684\u8282\u70b9\u90fd\u662f\u72ec\u7acb\u7684\uff09\uff0c\u8fd0\u7528\u5e76\u67e5\u96c6\u8fdb\u884c**\u67e5**\u7684\u64cd\u4f5c\uff0c\u770b\u4e00\u4e0b\u8fb9\u7684\u5de6\u53f3\u8282\u70b9\u7684\u7956\u5148\u662f\u5426\u76f8\u540c\uff0c\u5982\u679c\u6700\u8001\u7956\u5148\u76f8\u540c\uff0c\u5c31\u4ee3\u8868\u8fd9\u4e24\u4e2a\u8282\u70b9\u5df2\u7ecf\u5728\u4e00\u4e2a\u6811\u91cc\u9762\u4e86\uff0c\u4f60\u518d\u53bb\u8fde\u8fd9\u4e24\u4e2a\u8282\u70b9\uff0c\u5c31\u4f1a\u7ec3\u6210\u56fe\uff0c\u6240\u4ee5\u6700\u8001\u7956\u5148\u76f8\u540c\u5219\u4e0d\u8fde\uff0c\u5982\u679c\u6709\u4e0d\u540c\u7684\u6700\u8001\u7956\u5148\uff0c\u90a3\u4e48\u5c31\u5bf9\u8fd9\u4e24\u4e2a\u8282\u70b9\u8fdb\u884c\n\n**\u5e76**\u7684\u64cd\u4f5c\uff0c\u8fd9\u6837\u8fd8\u662f\u6811\u3002\u76f4\u5230\u6700\u540e\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u5b8c\u6bd5\u540e\uff0c\u6700\u5c0f\u6811\u5c31\u751f\u6210\u4e86\u3002\u6700\u5c0f\u751f\u6210\u6811\u5177\u4f53\u7b97\u6cd5\u5982\u4e0b\uff1a\n\n```cpp\nint TREE(E *e, int *s)//\u76f4\u63a5\u5bf9\u56fe\u548c\u7956\u5148\u503c\u8fdb\u884c\u64cd\u4f5c\n{\n    int i, total=0;\n    SORT(e, 1, M);//\u5bf9\u8fb9\u8fdb\u884c\u6743\u91cd\u5927\u5c0f\u6392\u5e8f\n    for(i=1;i<=M;i++)\n        if(findfather(s, s[e[i].a])!=findfather(s, s[e[i].b]))//\u662f\u5426\u6709\u76f8\u540c\u6700\u8001\u7956\u5148\n        {\n            together(&s[e[i].a], s[e[i].b], s);//\u5e76\u64cd\u4f5c\n            total++;//\u8ba1\u7b97\u8282\u70b9\uff0c\u4e3a\u540e\u9762\u67e5\u770b\u662f\u5426\u6bcf\u4e2a\u6751\u5e84\u90fd\u80fd\u8fde\u901a\u505a\u51c6\u5907\n            ans=e[i].t;//\u6211\u5c06ans\u5b9a\u4e49\u4e3a\u4e86\u5168\u5c40\u53d8\u91cf\uff0c\u8868\u793a\u6700\u5c0f\u6811\u4e2d\u7684\u6700\u5927\u901a\u8def\u65f6\u95f4\n        }\n    return total;\n}\n```\n##\u6700\u540e\u5b9e\u73b0\n\n```cpp\n#include <iostream>\nusing namespace std;\nint N, M, ans;//\u5168\u5c40\u53d8\u91cf\uff0c\u51fd\u6570\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528\uff0c\u65e0\u9700\u4f20\u53c2\u6570\nstruct E//\u56fe\u7684\u8fb9 \n{\n    int a;\n    int b;//\u4fe9\u9876\u70b9\n    int t;//\u4fee\u590d\u65f6\u95f4 \n};\n//\u4e2d\u95f4\u5ffd\u7565\u4e00\u5806\u51fd\u6570\uff0c\u4e0a\u9762\u5199\u4e86\u8fd9\u91cc\u5c31\u4e0d\u5199\u4e86\nint main()\n{\n    int i, j, a, b, c;\n    int s[100010];\n    E e[100010];\n    cin>>N>>M;\n    for(i=1;i<=N;i++)\n        s[i]=i;\n    for(i=1;i<=M;i++)\n        cin>>e[i].a>>e[i].b>>e[i].t;\n    c=TREE(e, s);//\u751f\u6210\u6700\u5c0f\u6811\uff0c\u5e76\u8fd4\u56de\u679d\u5e72\u6570\n    if(c!=N-1)//\u5982\u679c\u6ca1\u6709\u5c06\u6240\u6709\u6751\u5e84\u8fde\u63a5\u8d77\u6765\uff08N\u4e2a\u8282\u70b9\u7684\u6811\u7684\u679d\u5e72\u6570\u76ee\u5fc5\u987b\u662fN-1\uff09\n        ans=-1;//\u5219\u7b54\u6848\u4e3a\u4e0d\u53ef\u80fd\n    cout<<ans;//\u5426\u5219\u8f93\u51fa\u751f\u6210\u6700\u5c0f\u6811\u65f6\u5904\u7406\u597d\u7684\u7b54\u6848\n    return 0;\n}\n```",
        "postTime": 1510280371,
        "uid": 50871,
        "name": "Euler_Pursuer",
        "ccfLevel": 6,
        "title": "\u6211\u7684\u601d\u8003\u2014\u2014\u4fee\u590d\u516c\u8def"
    },
    {
        "content": "\u5f88\u660e\u663e\uff0c\u6b64\u9898\u662f\u5e76\u67e5\u96c6\u7684\u6a21\u677f\u9898\u3002\n\n\u5e76\u67e5\u96c6\u6709\u4e24\u79cd\u64cd\u4f5c\u2014\u2014\u67e5\u8be2\uff0c\u5408\u5e76\u3002\n\n\u67e5\u8be2\u901a\u5e38\u7528\u6765\u6c42\u8054\u901a\u5757\u4e2d\u5404\u8282\u70b9\u7684\u7236\u8282\u70b9\u3002\n\n\u800c\u5408\u5e76\u5219\u53ef\u7edf\u4e00\u4e24\u70b9\u7684\u7236\u8282\u70b9\u3002\n\n\u5047\u8bbe\u6211\u4eec\u7ed9\u51faA\uff0cB\uff0cC\uff0cD\u56db\u4e2a\u70b9\uff0c\u5e76\u4f9d\u6b21\u7ed9\u51fa\u5982\u4e0b\u51e0\u79cd\u64cd\u4f5c\uff1a\n\n\uff08\u6211\u4eec\u4e0d\u7528\u523b\u610f\u5728\u610f\u8c01\u662f\u8c01\u7684\u7236\u4eb2\uff09\n\n\u5c06A\u4e0eB\u5408\u5e76\uff0c\u5219A\uff0cB\u7684\u7236\u8282\u70b9\u90fd\u4e3aA\u3002\n\n\u5c06C\u4e0eD\u5408\u5e76\uff0c\u5219C\uff0cD\u7684\u7236\u8282\u70b9\u90fd\u4e3aB\u3002\n\n\u5c06B\u4e0eC\u5408\u5e76\uff0c\u6b64\u65f6\uff0cA\uff0cB\uff0cC\uff0cD\u7684\u7236\u8282\u70b9\u90fd\u4e3aA\u3002\n\n\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7528\u5230\u9012\u5f52\u64cd\u4f5c\uff1b\n\n\u5e76\u67e5\u96c6\u6a21\u677f\uff1a\n```cpp\nint find(int x) {//\u67e5\u8be2\u64cd\u4f5c\n  if (x != fa[x])  \n    fa[x] = find(fa[x]);  \n  return fa[x];\n}\nvoid unionSet(int x, int y) {//\u5408\u5e76\u64cd\u4f5c\n  x = find(x);//\u5176\u5b9e\u4e0d\u7528\u523b\u610f\u5199\u51fd\u6570\uff0c\u76f4\u63a5\u5728\u4e3b\u51fd\u6570\u4e2d\u5199\u4ea6\u53ef\n  y = find(y);\n  if (x == y)\n    return;\n  fa[x] = y; \n}\n```\n\u5206\u6790\u6b64\u9898\uff0c\u56e0\u4e3a\u8981\u5224\u65ad\u5168\u90e8\u6751\u5e84\u662f\u5426\u80fd\u901a\u8f66\uff0c\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u662f\u5426\u5168\u90e8\u80fd\u4fee\u597d\uff0c\n\n\u5176\u6b21\u6211\u4eec\u9700\u8981\u6c42\u6700\u77ed\u7684\u901a\u8f66\u65f6\u95f4\uff0c\u6240\u4ee5\u9700\u8981\u7528sort\u6392\u4e00\u904d\u5e8f\u3002\n\n\u6700\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684AC\u5566\uff01\n\n\u9644\uff1aAC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint fa[989898];\nstruct node{int x,y,t;}e[989898];\nbool operator < (node a,node b){return a.t<b.t;}\nint find(int x){if(x!=fa[x])fa[x]=find(fa[x]);return fa[x];}\nint n,m,num,ans;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d%d\",&e[i].x,&e[i].y,&e[i].t);\n\tsort(e+1,e+1+m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=find(e[i].x),y=find(e[i].y);\n\t\tif(x==y)continue;fa[x]=y;num++;ans=max(ans,e[i].t);\n\t}\n\tif(num!=n-1)printf(\"-1\\n\");else printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1571123901,
        "uid": 225299,
        "name": "Coding__QAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u9605\u8bfb\u6548\u679c\u66f4\u4f73](https://blog.csdn.net/BWzhuzehao/article/details/100147427)\n\n\u8fd9\u9053\u9898\u5c31\u662f\u5e76\u67e5\u96c6\u7684\u7ec3\u624b\u597d\u9898QAQ\n\n\u5982\u679c\u5bf9\u5e76\u67e5\u96c6\u4e0d\u719f\u6089\u7684\u540c\u5b66\u53ef\u4ee5\u505a\u4e00\u4e0b[\u8fd9\u9053\u9898](https://www.luogu.org/problemnew/show/P3367)\n\n\u6765\u770b\u4e00\u4e0b\u9898\u76ee\uff1a\n\n\u7ed9\u51faA\u5730\u533a\u7684\u6751\u5e84\u6570N\uff0c\u548c\u516c\u8def\u6570M\uff0c\u516c\u8def\u662f\u53cc\u5411\u7684\u3002\u5e76\u544a\u8bc9\u4f60\u6bcf\u6761\u516c\u8def\u7684\u8fde\u7740\u54ea\u4e24\u4e2a\u6751\u5e84\uff0c\u5e76\u544a\u8bc9\u4f60\u4ec0\u4e48\u65f6\u5019\u80fd\u4fee\u5b8c\u8fd9\u6761\u516c\u8def\u3002\u95ee\u6700\u65e9\u4ec0\u4e48\u65f6\u5019\u4efb\u610f\u4e24\u4e2a\u6751\u5e84\u80fd\u591f\u901a\u8f66\uff0c\u5373\u6700\u65e9\u4ec0\u4e48\u65f6\u5019\u4efb\u610f\u4e24\u6761\u6751\u5e84\u90fd\u5b58\u5728\u81f3\u5c11\u4e00\u6761\u4fee\u590d\u5b8c\u6210\u7684\u9053\u8def\uff08\u53ef\u4ee5\u7531\u591a\u6761\u516c\u8def\u8fde\u6210\u4e00\u6761\u9053\u8def\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9N\u4e2a\u6751\u5e84\u770b\u6210N\u4e2a\u70b9\uff0c\u5176\u4e2dM\u662f\u6211\u4eec\u8981\u5408\u5e76\u7684\u6b21\u6570\u3002\n\n\u5f88\u660e\u663e\uff0c\u4fee\u8def\u65f6\u95f4t\u8d8a\u65e9\u7684\u5c31\u8981\u8d8a\u65e9\u5408\u5e76\uff0c**\u6240\u4ee5\u8981\u5148\u6392\u5e8f\uff01**(\u6837\u4f8b\u4e2d\u90fd\u80fd\u770b\u51fa\u6765)\n\n\u6392\u5e8f\u540e\uff0c\u6309\u7167\u65f6\u95f4\u9010\u4e2a\u5408\u5e76\uff0c\u5982\u679c\u5408\u5e76\u8fc7\u7a0b\u4e2d\u9053\u8def\u8fde\u901a\uff0c\u90a3\u4e48\u8f93\u51fa\u65f6\u95f4;\u5426\u5219\u8f93\u51fa-1\n\n\u4f46\u662f\u5982\u679c\u6309\u65f6\u95f4\u6392\u5e8f\uff0cx,y\u4e5f\u8981\u8ddf\u7740\u52a8\uff0c\u600e\u4e48\u529e\u5462\uff1f**\u7528\u7ed3\u6784\u4f53\uff01**~~\u7ed3\u6784\u4f53\u4e0d\u4f1a\u7684\u53ef\u4ee5\u81ea\u884c\u79bb\u5f00\u4e86~~\n\n\u5982\u4f55\u5224\u65ad\u5f53\u524dN\u4e2a\u70b9\u6709\u6ca1\u6709\u5728\u4e00\u4e2a\u96c6\u5408\u5185\u5462\uff1f\n\n\u6211\u4eec\u8bbefa[i]\u662f\u7b2ci\u4e2a\u4eba\u7684\u7956\u5148\uff0c\u521d\u59cb\u5316fa[i]=i\uff0c\u5404\u81ea\u662f\u5404\u81ea\u7684\u7956\u5148\n\n\u5f53\u5408\u5e76\u4e00\u6b21\u4e4b\u540e\uff0c\u6211\u4eec\u626b\u4e00\u904dfa\u6570\u7ec4\uff0c\u7edf\u8ba1fa[i]=i\u7684\u4e2a\u6570\uff1a\n1. \u5982\u679c\u53ea\u67091\u4e2afa[i]=i\uff0c\u5c31\u8bf4\u660e\u6240\u6709\u7684\u5168\u90e8\u8054\u901a\u4e86\uff08\u56e0\u4e3a\u53ea\u67091\u4e2a\u4eba\u662f\u81ea\u5df1\u7684\u7956\u5148\uff0c\u522b\u7684\u4eba\u90fd\u8ddf\u7740\u4ed6\uff09\n2. \u5982\u679c\u4e0d\u6b621\u4e2a\uff0c\u5c31\u8bf4\u660e\u5f53\u524d\u6ca1\u6709\u5168\u90e8\u8054\u901a\uff08\u56e0\u4e3a\u4e24\u4e2a\u4eba\u4e92\u76f8\u6ca1\u6709\u5173\u7cfb\uff09\uff0c\u9700\u8981\u7ee7\u7eed\u5408\u5e76\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u4f1a\u6709\u70b9\u9ad8\uff0c\u4f46\u8db3\u591f\u901a\u8fc7\u672c\u9898\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint fa[1000+10],n,m;\nstruct node\n{\n\tint x,y,t;\n}a[100000+10];//\u7ed3\u6784\u4f53\u5927\u6cd5\u597d\uff01\nbool cmp(node fir,node sec)\n{\n\treturn fir.t<sec.t;\n}//\u6309\u7167\u65f6\u95f4\u6392\u5e8f\nint gf(int x)\n{\n\tif(fa[x]==x) return x;\n\treturn fa[x]=gf(fa[x]);\n    //\u8fd9\u53e5\u662f\u8def\u5f84\u538b\u7f29\uff0c\u524d\u9762\u7684\u9898\u89e3\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u6b64\u5904\u4e0d\u518d\u9610\u8ff0\n}\nvoid hb(int x,int y)\n{\n\tint fx=gf(x);//\u627e\u5230x\u7684\u7956\u5148\n\tint fy=gf(y);//\u627e\u5230y\u7684\u7956\u5148\n\tfa[fx]=fy;//\u8ba9fx\u8ba4fy\u4e3a\u7956\u5148\n}//\u5408\u5e76\u64cd\u4f5c\nbool check()\n{\n\tint sum=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(fa[i]==i) sum++;//\u7edf\u8ba1\u72ec\u7acb\u96c6\u5408\u7684\u4e2a\u6570\n\t\tif(sum==2) return 0;//\u53d1\u73b0\u6709\u4e24\u4e2a\u5c31\u8fd4\u56defalse\u5e94\u8be5\u4f1a\u7701\u4e00\u70b9\u65f6\u95f4\n\t}\n\treturn 1;//\u53ea\u67091\u4e2a\u96c6\u5408\uff0c\u8fd4\u56detrue\n}//\u5224\u65ad\u96c6\u5408\u4e2a\u6570\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) fa[i]=i;//\u521d\u59cb\u5316\n\tfor(int i=1;i<=m;i++) scanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].t);\n\tsort(a+1,a+m+1,cmp);//\u6309\u65f6\u95f4\u6392\u5e8f\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\thb(a[i].x,a[i].y);//\u8fdb\u884c\u5408\u5e76\n\t\tif(check())//\u5982\u679c\u53ea\u67091\u4e2a\u96c6\u5408\n\t\t{\n\t\t\tprintf(\"%d\\n\",a[i].t);//\u8f93\u51fa\u65f6\u95f4\n\t\t\treturn 0;//\u6109\u5feb\u7684\u7ed3\u675f\u4e3b\u7a0b\u5e8f\n\t\t}\n\t}\n\tprintf(\"-1\\n\");//\u6240\u6709\u516c\u8def\u4fee\u5b8c\u4e86\u4ecd\u6ca1\u6709\u8054\u901a\uff08\u96c6\u5408\u4e2a\u6570>=2\uff09\uff0c\u8f93\u51fa-1\n\treturn 0;//\u6109\u5feb\u7684\u7ed3\u675f\u4e3b\u7a0b\u5e8f\n}\n```",
        "postTime": 1559389985,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "####  \u5e76\u67e5\u96c6\uff08~~\u88f8\u9898~~\uff09\n\u4e0b\u9762\u5148\u4ecb\u7ecd\u4e00\u4e0b\u5e76\u67e5\u96c6\n\u987e\u540d\u601d\u4e49\u652f\u6301\u5e76\u548c\u67e5\n\u53731.\u5408\u5e76\u4e24\u4e2a\u5143\u7d20\u6240\u5728\u96c6\u5408\n2.\u67e5\u8be2\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\n\n\u521d\u59cb\u5316\n\n~~\u628a\u81ea\u5df1\u8bbe\u4e3a\u81ea\u5df1\u7684\u7236\u4eb2~~\n```cpp\nfor(int i=1;i<=n;i++)\n\t  f[i]=i;\n```\n\u67e5\u8be2\uff08\u542b\u8def\u5f84\u538b\u7f29\uff09\n\n\u4e0d\u77e5\u9053\u600e\u4e48\u5f62\u5bb9\uff08~~\u8fd8\u662f\u80cc\u8fc7\u5427~~\uff09\n```cpp\nint find(int x)\n{\n\treturn f[x]==x?x:(f[x]=find(f[x]));\n}\n```\n\u5408\u5e76\n\n1\u7684\u7956\u5148\u4fee\u6539\u4e3a2\u7684~~~\n```cpp\nvoid hb(int x,int y)\n{\n\tint x1=find(f[x]),y1=find(f[y]);\n\tf[x1]=y1;\n}\n```\n\u4f18\u5316\u5c31\u662f\u8def\u5f84\u538b\u7f29~~~~\n\n\u6211\u4eec\u4e00\u5f00\u59cb\u627e\u5230\u4e86x\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u4e4b\u540e\uff0c\u6211\u4eec\u968f\u7740\uff08X--->X\u7684\u7956\u5148\uff09\u8fd9\u6761\u8def\uff0c\u4e00\u76f4\u628a\u8fd9\u6761\u8def\u4e0a\u7684\u6240\u6709\u8282\u70b9\u7684\u7236\u8282\u70b9\u90fd\u6807\u8bb0\u4e3a\u7956\u5148\u8282\u70b9\u3002\u4ece\u800c\u52a0\u5feb\u4e86\u67e5\u627e\u7684\u901f\u5ea6\u3002\uff08~~\u6765\u81ea\u767e~~\u5ea6\uff09\n### \u8fd9\u9053\u9898\n\u6700\u5c0f\u751f\u6210\u6811Kruskal\n\n\u6392\u5e8f\u627e\u5230\u82b1\u8d39\u6700\u5c11\u7684\u8def\uff0c\u67e5\u8be2\u7956\u5148\uff0c\u4e0d\u540c\u5c31\u8fde\u8d77\u6765\nover\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nstruct node{\n\tint x,y,t;\n}a[100006];\nint n,m,f[100006];\nint cmp(node a,node b)\n{\n\treturn a.t<b.t;\n}\nint find(int x)\n{\n\treturn f[x]==x?x:(f[x]=find(f[x]));\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t  scanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].t);\n\tsort(a+1,a+m+1,cmp);\n\tfor(int i=1;i<=n;i++)\n\t  f[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint fx=find(a[i].x);\n\t\tint fy=find(a[i].y);\n\t\tif(fx!=fy) f[fx]=fy,n--;\n\t\tif(n==1) \n\t\t{\n\t\t\tcout<<a[i].t;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"-1\";\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1565406062,
        "uid": 50512,
        "name": "cytheria",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u51e0\u4e4e\u662f\u5e76\u67e5\u96c6\u7684\u6a21\u677f\u9898\n\n\u5c06\u65f6\u95f4\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e0ekruskal\u5f88\u76f8\u4f3c\n\n\u5728\u67d0\u4e2a\u65f6\u95f4\uff0c\u6240\u6709\u7684\u8def\u90fd\u53ef\u4ee5\u8fde\u901a\uff0c\u5c31\u8f93\u51fa\u7ed3\u679c\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<cmath>\n#include<algorithm>\n#define LL long long\nconst int INF=0x7fffffff;\nint n,fa[1010];\nint m,a,b;\nusing namespace std;\nstruct node\n{\n    int x,y,v;\n}q[100010];\nbool cmp(const node &a,const node &b)\n{\n    return a.v<b.v;\n}\nint find(int x)\n{\n    if(x!=fa[x])return fa[x]=find(fa[x]);\n    return fa[x]=x;\n}\nbool pd()\n{\n    for(int i=1;i<=n/2+1;i++)\n    if(find(i)!=find(n-i+1))return 0;\n    return 1;\n}\nint main()\n{\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&q[i].x,&q[i].y,&q[i].v);\n    }\n    for(int i=1;i<=n;i++)\n    fa[i]=i;\n    sort(q+1,q+1+m,cmp);\n    for(int i=1;i<=m;i++)\n    {\n        a=find(q[i].x);\n        b=find(q[i].y);\n        if(a!=b)\n        {\n            fa[a]=b;\n            if(pd())\n            {\n                cout<<q[i].v;\n                return 0;\n            }\n//            tot++;\n        }\n//        if(tot==n-1)break;\n//\u6211\u7528\u4e86\u9ebb\u70e6\u7684\u5224\u65ad\u65b9\u6cd5\uff0c\u4e0d\u8fc7\u65f6\u95f4\u4e0a\u4f3c\u4e4e\u5dee\u4e0d\u591a \n    }\n    cout<<-1;\n    fclose(stdin);fclose(stdout);\n    return 0;\n}\n\n```",
        "postTime": 1496730994,
        "uid": 18386,
        "name": "zpf_13516358919",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "## \u697c\u4e0b\u5404\u79cd\u751f\u6210\u6811\uff0c\u7136\u800c\u5e76\u4e0d\u9700\u8981\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u9609\u5272\u7248\u8fb9\u5e26\u6743\u5e76\u67e5\u96c6\uff0c\u548c\u94f6\u6cb3\u82f1\u96c4\u4f20\u8bf4\u7684\u5dee\u522b\u5c31\u662f\u8fd9\u4e2a\u9898\u53ea\u9700\u8981\u7edf\u8ba1\u96c6\u5408\u5927\u5c0f\u800c\u4e0d\u9700\u8981\u7b97\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u53e6\u5916\u5728\u6ce8\u610f\u4e00\u70b9\uff0c\u662f\u6c42\u6700\u957f\u82b1\u8d39\u65f6\u95f4\uff0c\u65f6\u95f4\u4e0d\u5e94\u7d2f\u52a0\uff0c\u5e94\u8be5\u53d6\u6700\u5927\u65f6\u95f4\u3002\u770b\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <algorithm>\n#define SIZE 100050\nusing namespace std;\nint n,m,ans,maxn;\nstruct poi{\n\tint x,y,t;\n\tbool operator<(const poi &a)const{\n\t\treturn t<a.t;\n\t}\n}s[SIZE];\nint fa[SIZE],ty[SIZE];//ty[]\u5c31\u662f\u5f53\u524d\u96c6\u5408\u5927\u5c0f\n\ninline int rin(){\n\tint x=0,f=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n\twhile(ch<='9'&&ch>='0') x=x*10+ch-'0',ch=getchar();\n\treturn f*x;\n}\ninline int getfa(int x){\n\tif(x==fa[x]) return x;\n\treturn fa[x]=getfa(fa[x]);\n}\ninline void Merge(int x,int y){\n\tx=getfa(x),y=getfa(y);\n\tfa[x]=y,ty[y]+=ty[x];//\u5408\u5e76\u96c6\u5408\u66f4\u65b0\u5143\u7d20\u4e2a\u6570\n\tmaxn=max(maxn,ty[y]);//\u8bb0\u5f55\u96c6\u5408\u5143\u7d20\u4e2a\u6570\u4e3a\u4e86\u6700\u540e\u6bd4\u8f83\u662f\u5426\u5168\u90e8\u901a\u8f66\n}\n\nint main(){\n\tn=rin(),m=rin();\n\tfor(int i=1;i<=m;i++){\n\t\ts[i].x=rin(),s[i].y=rin();\n\t\ts[i].t=rin();\n\t}\n\tsort(s+1,s+m+1);\n\tfor(int i=1;i<=n;i++) fa[i]=i,ty[i]=1;\n\tfor(int i=1;i<=m;i++){\n\t\tif(getfa(s[i].x)==getfa(s[i].y)) continue;\n\t\tMerge(s[i].x,s[i].y);\n\t\tans=max(ans,s[i].t);//\u65f6\u95f4\n\t}\n\tif(maxn!=n) printf(\"-1\");\n\telse printf(\"%d\",ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1530773398,
        "uid": 44669,
        "name": "fletmer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "# \u8fd9\u9898\u5176\u5b9e\u5c31\u662f\u4e2a\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\u6a21\u677f\uff0c\u7528Kruskal\u548cPrim\u7b97\u6cd5\u90fd\u6ca1\u95ee\u9898\u3002\n\n# \u849f\u84bb\u7528\u7684\u662fPrim\u7b97\u6cd5\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u89e3\u91ca\u4e00\u4e0b\uff1a\n\n\u5728\u4e00\u68f5\u6811\u4e2d\uff0c\u9996\u5148\u53d6\u51fa\u4e00\u4e2a\u8282\u70b9\u52a0\u5165**\u96c6\u5408V**\uff0c\u5269\u4e0b\u7684\u8282\u70b9\u5728**\u96c6\u5408U**\u4e2d\uff0c \u6bcf\u6b21\u5bfb\u627e**\u4e0eV\u4e2d\u67d0\u8282\u70b9\u76f8\u8fde\u7684\u4e14\u53e6\u4e00\u7aef\u4e0d\u5728\u96c6\u5408V\u4e2d\u7684\u4ee3\u4ef7\u6700\u5c0f\u8fb9**\uff0c\u5e76\u5c06\u5176\u53e6\u4e00\u7aef\u52a0\u5165\u96c6\u5408V\u3002\u5f53\u96c6\u5408U\u4e3a\u7a7a\u65f6\uff0c\u6700\u5c0f\u751f\u6210\u6811\u5efa\u7acb\u5b8c\u6bd5\uff0c\u5efa\u6811\u4ee3\u4ef7\u4e3a\u5404\u8fb9\u6743\u503c\u4e4b\u548c\u3002\n\n\uff08\u6ce8\uff1a**\u6b64\u5904\u52a0\u5165\u96c6\u5408V\u5373\u610f\u5473\u7740\u79bb\u5f00\u96c6\u5408U**\uff09\n\n\u7531\u4e8e\u6b64\u9898\u6c42\u6700\u65e9\u901a\u8f66\u65f6\u95f4\uff0c\u5373\u610f\u5473\u7740\u6c42\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u4ee3\u4ef7\u6700\u5927\u8fb9\uff0c\u6545\u5c06+=\u6539\u6210=\uff0c\u53e6\uff0c\u5728\u8f93\u51fa\u65f6\u8981\u52a0\u4ee5\u7279\u5224\uff0c\u5224\u65adans\u662f\u5426\u4e3a\u521d\u503c\uff0c\u5982\u4e3a\u521d\u503c\uff0c\u8f93\u51fa-1\u3002\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\uff1a\uff08\u8be6\u89c1\u6ce8\u91ca\uff09\n```cpp\n#include<cstdio>\nint f[6000][6000],f1[6000],n,m,x,y,z;\n//f\u6570\u7ec4\u4e3a\u90bb\u63a5\u77e9\u9635\uff0cf[i][j]\u8868\u793ai\u4e0ej\u4e4b\u95f4\u8fb9\u7684\u6743\u503c\n//f1\u6570\u7ec4\u4e3a\u8f85\u52a9\u6570\u7ec4\uff0c\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u4e0e\u5176\u4ed6\u8fb9\u7684\u6743\u503c\nbool visit[6000];\n//visit\u6570\u7ec4\u8868\u793a\u8282\u70b9\u662f\u5426\u5728\u96c6\u5408V\u4e2d\uff0c\u5728\u4e3a1\uff0c\u4e0d\u5728\u4e3a0\nvoid prim()\n{\n\tint s=0,ans=0;\n\t//s\u8868\u793a\u8fb9\u6570\uff0c\u521d\u59cb\u4e3a0\n\twhile(s<n)\n\t//\u5efa\u7acb\u6700\u5c0f\u751f\u6210\u6811\n\t{\n\t\tint minn=1<<30,to=0;\n\t\t//minn\u4e3a\u6240\u8981\u52a0\u5165\u8fb9\u7684\u6743\u503c\uff0cto\u4e3a\u53e6\u4e00\u7aef\n\t\ts++;\n\t\t//\u8fb9\u6570+1\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(!visit[i]&&f1[i]<minn)\n\t\t\t{\n\t\t\t\tminn=f1[i];\n\t\t\t\tto=i;\n\t\t\t}\n\t\t//\u5bfb\u627e\u8981\u52a0\u5165\u8fb9\n\t\tif(minn!=1<<30)ans=minn;\n\t\t//\u5f53\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8fb9\u65f6\uff0c\u66f4\u65b0\u7b54\u6848\n\t\tfor(int i=1;i<=n;i++)\n            if(f1[i]>f[to][i]&&!visit[i])\n                f1[i]=f[to][i];\n        //\u66f4\u65b0f1\u6570\u7ec4\n        visit[to]=1;\n        //to\u52a0\u5165\u96c6\u5408V\n\t}\n\tprintf(\"%d\",ans==0?-1:ans);\n\t//\u8f93\u51fa\u53ca\u7279\u5224\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tf[i][j]=1<<30;\n\t//\u521d\u59cb\u4e3a\u65e0\u9650\u5927\uff0c\u8868\u793a\u4e0d\u53ef\u8fbe\u5230\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tif(f[x][y]>z)f[y][x]=f[x][y]=z;\n\t}\n\t//\u4ec5\u5f53\u6743\u503c\u5c0f\u4e8e\u539f\u6743\u503c\u65f6\uff0c\u66f4\u65b0\u6743\u503c\uff08\u5176\u5b9e\u6ca1\u7528\uff09\n\tfor(int i=1;i<=n;i++)f1[i]=f[1][i];\n\tvisit[1]=1;\n\t//\u9996\u5148\u5c06\u8282\u70b91\u52a0\u5165\u96c6\u5408V\uff08\u53ef\u4ee5\u52a0\u5165\u4efb\u4e00\u8282\u70b9\uff09\n\tprim();\n\t//\u5efa\u6811\n}\n```",
        "postTime": 1524642999,
        "uid": 70592,
        "name": "Victory_Defeat",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u6211\u53d1\u73b0\u597d\u591a\u5de8\u4f6c\u8bf4\u8fd9\u9898\u662f\u751f\u6210\u6811\uff0c\u6211\u5c31\u7528\u5e76\u67e5\u96c6\u8bd5\u7740\u6253\u4e86\u4e00\u4e0b\uff0c\u7136\u540e\u6211\u5c31AC\u4e86\u2026\u2026\u8bdd\u4e0d\u591a\u8bf4\u770b\u4ee3\u7801\u5427\uff01\n\n\u5e76\u67e5\u96c6\u76f8\u5173\u5185\u5bb9\u5728\u6b64\u4e0d\u8d58\u8ff0\u4e86\uff0c\u53bb\u770b\u201c\u4eb2\u621a\u201d\u8fd9\u9898\u5427\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define ld long double\nusing namespace std;\nll read()//\u5feb\u901f\u8bfb\u5165\n{\n    ll s=0;\n    char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        s=s*10+c-'0';\n        c=getchar();\n    }\n    return s;\n}\nll zx[100001];//\u201c\u7956\u5148\u201d\uff0c\u5e76\u67e5\u96c6\u7528\u7684\nstruct kkk//\u7ed3\u6784\u4f53\uff0ca\uff0cb\u662f\u8def\u7684\u4e24\u7aef\uff0ct\u662f\u5efa\u6210\u7684\u65f6\u95f4\n{\n\tll a,b,t;\n}r[100001];\nbool cmp(kkk a,kkk b)//\u7528\u4e8e\u6392\u5e8f\n{\n\treturn a.t<b.t;\n}\nll find(ll x)//\u627e\u7956\u5148\n{\n\tif(zx[x]==x)return zx[x];\n\tzx[x]=find(zx[x]);\n\treturn zx[x];\n}\nvoid lian(ll x,ll y)//\u201c\u8fde\u201d\uff0c\u5c31\u662f\u201c\u5e76\u67e5\u96c6\u201d\u4e2d\u7684\u201c\u5e76\u201d\n{\n\tzx[find(x)]=find(y);\n}\nint main()\n{\n\tll n,m,done=2;//done\u662f\u5df2\u7ecf\u8054\u901a\u7684\u6751\u5e84\uff0c\u4ece\u7b2c\u4e00\u5bf9\uff081,2\uff09\u7b97\u8d77\uff0c\u5982\u679c\u540e\u9762\u6709\u4e5f\u6682\u65f6\u4e0d\u7ba1\u3002\u53cd\u6b63\u5982\u679c\u6240\u6709\u7684\u6751\u5e84\u90fd\u8054\u901a\u65f6done\u5c31\u4f1a\u6ee1\u4e86\n\tn=read();\n\tm=read();\n\tfor(ll i=1;i<=m;i++)\n\t{\n\t\tr[i].a=read();\n\t\tr[i].b=read();\n\t\tr[i].t=read();\n\t}\n\tfor(ll i=1;i<=n;i++)zx[i]=i;\n\tsort(r+1,r+1+m,cmp);//\u5c06\u4fee\u8def\u6309\u65f6\u95f4\u6392\u5e8f\n\tfor(ll i=1;i<=m;i++)//\u7136\u540e\u5f00\u59cb\u9010\u4e00\u4fee\u8def\u5427\uff01\n\t{\n\t\tlian(r[i].a,r[i].b);//\u5c06\u4fee\u8def\u7684\u4e24\u7aef\u5e76\u8d77\u6765\n\t\twhile(find(done)==find(done-1))//\u5982\u679c\u73b0\u5728done\u7684\u6751\u5e84\u5bf9\u5df2\u7ecf\u8054\u901a\uff0c\u5c31\u8ba9done\u5f80\u540e\uff0c\u7ee7\u7eed\u68c0\u6d4b\u4e0b\u4e00\u5bf9\u6751\u5e84\u3002\u8fd9\u662f\u8fd9\u91cc\u7684\u6838\u5fc3\u601d\u60f3\u5427\n\t\t{\n\t\t\tdone++;\n\t\t}\n\t\tif(done==n+1)//\u5982\u679cdone\u5df2\u7ecf\u52a0\u6ee1\u4e86\uff0cdone\u5e94\u4e3an+1\uff0c\u5f53\u524d\u6240\u6709\u6751\u5e84\u8054\u901a\uff0c\u8f93\u51fa\u7ed3\u679c\u540e\u7ed3\u675f\n\t\t{\n\t\t\tcout<<r[i].t;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<-1;//\u4ec0\u4e48\uff0c\u524d\u9762\u7684ruturn 0\u6ca1\u6709\u751f\u6548\uff1f\u90a3\u5fc5\u7136\u4fee\u8865\u4e0d\u597d\u4e86\uff0c\u8f93\u51fa-1\u5427\n    string name=\"\u9632\u4f5c\u5f0a\";\n\twhile(name==\"\u9632\u4f5c\u5f0a\")cout<<1; \n\treturn 0;\n} \n```",
        "postTime": 1542297092,
        "uid": 48949,
        "name": "\u963f\u5c14\u8428\u65af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u88f8\u7684\u514b\u9c81\u65af\u5361\u5c14\u554a\u3002\u3002\n\n\u76f4\u63a5\u5957\u677f\u5b50\u5c31\u53ef\u4ee5\uff0c\u4ec0\u4e48\u90fd\u4e0d\u7528\u6539\n\n\u81f3\u4e8e\u6751\u5b50\u7684\u8fde\u901a\u6027\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u6751\u5b50\u90fd\u770b\u505a\u4e00\u4e2a\u70b9\n\n\u80fd\u5b8c\u5168\u8fde\u63a5n\u4e2a\u70b9\u7684\u8fb9\u6570\u5c31\u662fn-1\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=1001;\nvoid read(int & n)\n{\n    char c='+';int x=0;    \n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        x=x*10+c-48;\n        c=getchar();\n    }\n    n=x;\n}\nint n,m;\nstruct node\n{\n    int u,v,w;\n}edge[MAXN*100];\nint comp(const node & a,const node & b)\n{return a.w<b.w;}\nint fa[MAXN];\nint find(int x)\n{\n    if(fa[x]==x)\n    return fa[x];\n    else\n    return fa[x]=find(fa[x]);\n}\nvoid unionn(int x,int y)\n{\n    int fx=find(x);\n    int fy=find(y);\n    fa[fx]=fy;\n}\nint main()\n{\n    read(n);read(m);\n    for(int i=1;i<=n;i++)\n        fa[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        read(edge[i].u);\n        read(edge[i].v);\n        read(edge[i].w);\n    }\n    int tot=0;\n    int ans=-1;\n    sort(edge+1,edge+m+1,comp);\n    for(int i=1;i<=m;i++)\n    {\n        if(find(edge[i].u)!=find(edge[i].v))\n        {\n            unionn(edge[i].u,edge[i].v);\n            tot++;\n            ans=max(ans,edge[i].w);\n        }\n        if(tot==n-1)\n            break;\n    }\n    if(tot!=n-1)\n        printf(\"-1\");\n    else\n        printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1498049444,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u4f9d\u65e7\u5728\u7ec3\u5e76\u67e5\u96c6\uff0c\u8fd8\u662f\u4e00\u9053\u6a21\u677f\u9898\u5427...\n\n\u56e0\u4e3a\u6c42\u7684\u662f\u6700\u65e9\u4ec0\u4e48\u65f6\u5019\u8def\u88ab\u5168\u90e8\u8fde\u901a\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u8d2a\u5fc3\u5229\u7528\u6bcf\u6761\u8def\u4fee\u7b51\u7684\u65f6\u95f4\u6765\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u518d\u6309\u7167\u8fd9\u4e2a\u987a\u5e8f\u628a\u6bcf\u4e00\u6761\u8def\u7684\u4e24\u4e2a\u5730\u70b9\u8fde\u5728\u4e00\u8d77\u3002\n\n**\u4f9d\u636e\u4e00\u68f5\u6811\u53ea\u6709\u4e00\u4e2a\u6839\u7ed3\u70b9\u7684\u6027\u8d28\uff1a**\n\n\u6bcf\u8fde\u8d77\u4e00\u6761\u8def\u4e4b\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u53ea\u6709\u4e00\u4e2a\u7ed3\u70b9\u7956\u5148\u662f\u4ed6\u81ea\u5df1\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5c31\u8bf4\u660e\u5df2\u7ecf\u5168\u90e8\u8fde\u5728\u4e00\u8d77\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nstruct CZP\n{\n\tint x,y,z;\n}a[1000001];\nint n,m,fa[10001];\nint cmp(CZP x1,CZP y1)\n{\n\treturn x1.z<y1.z;\n}\nint find(int x)\n{\n\tif (x==fa[x])\n\treturn x;\n\telse\n\tfa[x]=find(fa[x]);\n\treturn fa[x];\n}  //\u8def\u5f84\u538b\u7f29\u5e76\u67e5\u96c6\nint pd()\n{\n\tint ans=0;\n\tfor (int i=1;i<=n;i++)\n\tif (fa[i]==i) ans++;\n\tif (ans==1)  //\u5982\u679c\u81ea\u5df1\u662f\u81ea\u5df1\u7956\u5148\u7684\u7ed3\u70b9\u53ea\u6709\u4e00\u4e2a\u5c31\u8bf4\u660e\u5168\u90e8\u8fde\u5728\u4e00\u8d77\u4e86\n\treturn 1;\n\telse\n\treturn 0;\n}  //\u5224\u65ad\u662f\u5426\u5168\u90e8\u8fde\u5728\u4e00\u8d77\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++)\n\tfa[i]=i;\n\tfor (int i=1;i<=m;i++)\n\t\tscanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].z);\n\tsort(a+1,a+m+1,cmp);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint x1=find(a[i].x),y1=find(a[i].y);\n\t\tif (x1!=y1)\n\t\t{\n\t\t\tfa[y1]=x1;\n\t\t}\n\t\tif (pd())\n\t\t{\n\t\t\tprintf(\"%d\\n\",a[i].z);\n\t\t\treturn 0;\n\t\t}   \n   //\u56e0\u4e3a\u6309\u5efa\u9020\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6240\u4ee5\u5982\u679c\u5f53\u524d\u8def\u8fde\u597d\u4e4b\u540e\u5c31\u5168\u90e8\u8fde\u5728\u4e00\u8d77\uff0c\u5c31\u8bf4\u660e\u8fde\u8fd9\u6761\u8def\u7684\u65f6\u95f4\u5c31\u662f\u6700\u540e\u8fde\u8def\u7684\u6700\u77ed\u603b\u65f6\u95f4\uff08\u5efa\u9020\u6bcf\u6761\u8def\u540c\u65f6\u8fdb\u884c\uff09\n\t}\n\tprintf(\"-1\");\n\treturn 0;\n}\n```\n",
        "postTime": 1564672651,
        "uid": 24812,
        "name": "Sakura_Peng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u672c\u9898\u57fa\u672c\u4e0a\u53ef\u4ee5\u7b97\u662fKruskal\u7684\u6a21\u677f\u9898\u4e86\uff0c\u6ce8\u610f\u70b9\u662f\uff1a\u7528struct\u5b9a\u4e49\u8fb9\uff0c\u6839\u636e\u5176\u6062\u590d\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\uff08sort\u91cc\u9762\u662f+\u8fb9\u6570\u4e0d\u662f+\u8282\u70b9\u6570\uff0c\u7c97\u5fc3\u9519\u4e86\u597d\u591a\u6b21\uff09\uff0c\u7528\u5e76\u67e5\u96c6\u8fdb\u884c\u5224\u65ad\u548c\u5408\u5e76\uff0c\u5728\u8bb0\u5f55\u7b54\u6848\u7684\u65f6\u5019\u628atot+=e[i].z\u6539\u4e3atot=max\uff08tot\uff0ce[i].z\uff09(\u56e0\u4e3a\u672c\u9898\u53ea\u9700\u8981\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u53ef\u4ee5\u8d70\u901a\uff0c\u800c\u4e0d\u662f\u628a\u65f6\u95f4\u7d2f\u52a0)\uff0c\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\u6ce8\u610f\u5224\u65ad\u662f\u5426\u6709\u5927\u4e8e\u7b49\u4e8e\u8282\u70b9\u6570-1\u6761\u8fb9\u5373\u53ef\u3002\uff08PS\uff1a\u672c\u9898\u5176\u5b9e\u548cP1119\u6709\u7c7b\u4f3c\u4e4b\u5904\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u53bb\u8bd5\u8bd5\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1050;\nconst int maxm=100050;\nint fa[maxn];\nint n,m;\nstruct node{\n    int x,y,z;\n}e[maxm];//\u8bb0\u5f97\u6570\u7ec4\u5927\u5c0f\u8981\u5f00\u6210\u8fb9\u6570\uff0c\u5426\u5219\u4f1aRE \nint cmp(node a,node b)\n{\n    return a.z<b.z;\n}\nint Find(int x)\n{\n    if(x!=fa[x])return fa[x]=Find(fa[x]);//\u8def\u5f84\u538b\u7f29 \n    return fa[x];//\u82e5\u672c\u8eab\u4e3a\u96c6\u5408\u4ee3\u8868\u5219\u76f4\u63a5\u8fd4\u56de \n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)fa[i]=i;//\u521d\u59cb\u5316FATHER\u6570\u7ec4\uff0c\u6bcf\u4e2a\u70b9\u6210\u4e3a\u4e00\u4e2a\u96c6\u5408 \n    for(int i=1;i<=m;i++)\n    {\n        cin>>e[i].x>>e[i].y>>e[i].z;\n    }\n    sort(e+1,e+1+m,cmp);//\u5bf9\u8fb9\u6392\u5e8f\uff0c\u8bb0\u5f97\u5199cmp \n    int num=0,tot=0;\n    for(int i=1;i<=m;i++)\n    {\n        int u=Find(e[i].x),v=Find(e[i].y);\n        if(u!=v)\n        {\n            fa[u]=v;\n            num++;\n            tot=max(tot,e[i].z);//\u6b64\u5904\u4e0e\u88f8Kruskal\u4e0d\u540c\uff0c\u8bb0\u5f55\u6700\u5927\u65f6\u95f4\u800c\u975e\u7d2f\u52a0 \n        }\n    }\n    if(num>=n-1)cout<<tot<<endl;//\u5224\u65ad\u662f\u5426\u6700\u5c11\u6709n-1\u6761\u8fb9\uff0c\u82e5\u6709\u5219\u80fd\u8d70\u901a\uff0c\u5426\u5219\u8f93\u51fa-1 \n    else cout<<-1<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1509433808,
        "uid": 17154,
        "name": "gxwinnt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u53d1\u73b0\u697c\u4e0b\u7684\u795e\u7287\u7528\u7684\u90fd\u662f\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\uff08\u5e76\u67e5\u96c6\uff09\uff0c\u6211\u5c31\u7ed9\u5927\u5bb6\u53e6\u4e00\u79cd\u601d\u8def\uff1aPrim\u7b97\u6cd5\uff08\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\uff09\uff0c\u6ca1\u6709\u7528\u5230\u5e76\u67e5\u96c6\u3002\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u662f\u4e2a\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\u6a21\u677f\u9898\uff0c\u4e0e\u6a21\u677f\u7684\u552f\u4e00\u5dee\u522b\u662f\uff1a\u6a21\u677f\u6c42\u7684\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u5404\u8fb9\u7684\u957f\u5ea6\u4e4b\u548c\uff0c\u800c\u8fd9\u9053\u9898\u6c42\u7684\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u7684\u6700\u5927\u6743\u3002\n\n\u6240\u4ee5\uff0c\u6a21\u677f\u7a0b\u5e8f\u6539\u4e00\u53e5\u8bdd\u5373\u53efA\u6b64\u9898\uff08\u65e2\u7136\u662f\u6a21\u677f\u5c31\u4e0d\u7528\u89e3\u91ca\u4e86\u5427\uff09\uff1a\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#define fp(i,a,b) for(i=a;i<=b;i++)\n#define fq(i,a,b) for(i=a;i>=b;i--)\n#define il inline\n#define re register\n#define ll long long \nusing namespace std;\nint map[5005][5005]={},dis[100005]={};\nbool vis[100005]={};\nil int gi()//\u8bfb\u5165\u4f18\u5316\n{\n  re int x=0;\n  re short int t=1;\n  re char ch=getchar();\n  while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n  if(ch=='-') t=-1,ch=getchar();\n  while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n  return x*t;\n}\nint main()\n{\n  re int i,j,k,n,m,x,y,z,ans=0;\n  memset(map,0x3f,sizeof(map));//\u8fd9\u662f\u7ed9\u6570\u7ec4\u8d4b\u6781\u5927\u503c\u7684\u597d\u65b9\u6cd5\n  n=gi();m=gi();\n  fp(i,1,m)\n  {\n    x=gi();y=gi();z=gi();\n    if(z<map[x][y]) map[x][y]=z,map[y][x]=z;\n  }\n  memset(dis,0x3f,sizeof(dis));\n  fp(i,1,n) vis[i]=1;\n  dis[1]=0;\n  fp(i,1,n)\n  {\n    k=0;\n    fp(j,1,n) if(vis[j]==1&&(dis[j]<dis[k])) k=j;\n    vis[k]=0;\n    fp(j,1,n) if(vis[j]==1&&(map[k][j]<dis[j])) dis[j]=map[k][j];\n  }\n  fp(i,1,n) ans=max(dis[i],ans);//\u628a\u6c42\u5404\u8fb9\u957f\u5ea6\u4e4b\u548c\u6539\u4e3a\u6c42\u8fb9\u7684\u6700\u5927\u6743\n  if(ans!=1061109567) printf(\"%d\\n\",ans);//1061109567=0x3f\n    else printf(\"-1\\n\");\n  return 0;\n}\n\n```",
        "postTime": 1501404009,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "#P1111\u9898\u89e3\n\n\u4f7f\u7528\u52a0\u6743\u5e76\u67e5\u96c6\uff0c\u6bcf\u4e2a\u6839\u8282\u70b9\u8bb0\u5f55\u8be5\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\u3002\n\n\u9996\u5148\u5c06\u9053\u8def\u6309\u4fee\u597d\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u6328\u4e2a\u8fde\u63a5\u9053\u8def\u3002\u5f53\u8fde\u63a5\u9053\u8def\u540e\uff0c\u5408\u5e76\u51fa\u6765\u7684\u96c6\u5408\u5143\u7d20\u4e2a\u6570\u7b49\u4e8e\u603b\u57ce\u5e02\u6570\u65f6\uff0c\u8bf4\u660e\u8fde\u901a\u3002\n\n\n\uff08roads\u6570\u7ec4\u4ece0\u5f00\u59cb\u7f16\u53f7\uff09\n\n\uff08assert\u7528\u6765\u9632\u6b62\u51fa\u73b0\u8bbf\u95ee\u975e\u6839\u8282\u70b9\u7684cnt\u503c\u7684\u60c5\u51b5\uff09\n\n```cpp\n#include<cctype>\n#include<cstdio>\n#include<algorithm>\n#include<cassert>\n\nusing namespace std;\n\nconst int maxm = 100005;\nconst int maxn = 1005;\n\nint n, m;\n\nstruct Road{\n    int from, to, fix_time;\n    friend bool operator < (const Road& a, const Road& b){\n        return a.fix_time < b.fix_time;\n    }\n}roads[maxm]; \n\ninline void setRoad(Road& x, int u, int v, int ft){    // \u5c06x\u4e09\u4e2a\u6210\u5458\u53d8\u91cf\u5206\u522b\u8bbe\u4e3au\u3001v\u3001ft \n    x.from = u;\n    x.to = v;\n    x.fix_time = ft;\n}\n\n\n\nstruct UFS{ // \uff08\u52a0\u6743\uff09\u5e76\u67e5\u96c6 \n    int fa[maxn], cnt[maxn];    // \u7236\u4eb2\u6307\u9488\u3001\u8282\u70b9\u6570\n    // \u6ce8\u610f\uff0c\u5f53 u \u4e0d\u662f\u5e76\u67e5\u96c6\u68ee\u6797\u7684\u6839\u65f6\uff0ccnt[u]\u672a\u5b9a\u4e49 \n    int find(int x){\n        return fa[x] == x ? x : fa[x] = find(fa[x]);\n    }\n    \n    bool unite(int u, int v){    // \u5408\u5e76\u64cd\u4f5c\u3002\u5f53\u8fdb\u884c\u8be5\u5408\u5e76\u64cd\u4f5c\u540e\u8fd4\u56de\u662f\u5426\u6240\u6709\u7684\u5143\u7d20\u90fd\u5728\u4e00\u4e2a\u96c6\u5408\u5185 \n        int fu = find(u), fv = find(v);\n        if(fu == fv) return cnt[fu] == n;\n        \n        // \u542f\u53d1\u5f0f\u5408\u5e76\u3002\u5c06\u6bd4\u8f83\u5927\u7684\u96c6\u5408\u653e\u524d\u8fb9\uff0c\u7136\u540e\u5c06\u8f83\u5c0f\u96c6\u5408\u7684\u6839\u8282\u70b9\u6307\u5411\u5927\u96c6\u5408\u7684\u6839\u8282\u70b9 \n        if(cnt[fu] < cnt[fv]) swap(fu, fv);\n        fa[fv] = fu;\n        // fu\u3001fv\u5fc5\u987b\u662f\u6839\u8282\u70b9 \n        // assert(fa[fu] == fu);\n        // assert(fa[fv] == fv);\n        return (cnt[fu] += cnt[fv]) == n;\n    }\n    void init(){\n        for(int i = 1; i <= n; i++) fa[i] = i;\n        for(int i = 1; i <= n; i++) cnt[i] = 1;\n    }\n}ufs;\n\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 0; i < m; i++){\n        int u, v, ft;\n        scanf(\"%d%d%d\", &u, &v, &ft);\n        setRoad(roads[i], u, v, ft);\n    }\n    sort(roads, roads + m);    // \u5c06\u9053\u8def\u6309\u4fee\u597d\u7684\u65f6\u95f4\u6392\u5e8f \n    ufs.init();    // \u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316\u64cd\u4f5c \n    for(int i = 0; i < m; i++){\n        if(ufs.unite(roads[i].from, roads[i].to)){\n            printf(\"%d\\n\", roads[i].fix_time);\n            return 0;    // \u7b97\u51fa\u7b54\u6848\u4e86\uff0c\u9000\u51fa \n        }\n    }\n    puts(\"-1\");\n    return 0;\n}\n\n```",
        "postTime": 1482503249,
        "uid": 28372,
        "name": "\u6c22\u6c27\u5316\u94efCsOH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "n\u4e2a\u6751\u5e84\uff0cm\u6761\u516c\u8def\uff0c\u5c31\u662fn\u4e2a\u70b9m\u6761\u8fb9\uff0c\u7136\u540e\u627e\u6700\u5c0f\u751f\u6210\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7528\u514b\u9c81\u65af\u5361\u5c14\u3002\u3002\n\n\u5e76\u67e5\u96c6\u7ef4\u62a4\u4ee5\u53ca\u8054\u901a\u7684\u70b9\u3002\n\n   \n   \n```cpp\n# include <cstdio>\n# include <cstring>\n# include <cmath>\n# include <iostream>\n# include <algorithm>\n# include <vector>\n# include <map>\n# include <queue>\n# include <stack>\nusing namespace std;\nstruct node{\n  int x,y,v;\n}e[100005];\nint fa[100005],num[100005];//\u5e76\u67e5\u96c6 num\u4ee3\u8868\u8054\u901a\u96c6\u5408\u7684\u5927\u5c0f \nbool cmp(node a,node b)\n{\n  return a.v<b.v;//\u65f6\u95f4\u5c31\u662f\u6743\u503c\n}\nint find (int x)\n{\n  return fa[x]==x?x:fa[x]=find(fa[x]);\n}\nint main(){\n   int n,m;\n   cin>>n>>m;\n   for (int i=1;i<=m;i++)\n   {\n        scanf(\"%d%d%d\",&e[i].x,&e[i].y,&e[i].v);\n   }\n   for (int i=1;i<=n;i++) num[i]=1,fa[i]=i;    \n   sort(e+1,e+m+1,cmp);\n   int T=0;\n   for (int i=1;i<=m;i++)\n   {\n       T=e[i].v;//\u56e0\u4e3a\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392 \u6700\u77ed\u8def\u4e2d\u6700\u957f\u65f6\u95f4\u5c31\u662f\u8fd9\u8fb9\u7684\u6743\u503c \n       int dx,dy;\n       dx=find(e[i].x);\n       dy=find(e[i].y);\n       if (dx==dy) continue;\n       if (dx>dy) swap(dx,dy);//\u6211\u662f\u628a\u5c0f\u7684\u505afa\u3002\u3002\u3002 \n       fa[dy]=dx;\n       num[dx]=num[dx]+num[dy];//\u628a\u4e24\u4e2a\u96c6\u5408\u5927\u5c0f\u5408\u5e76 \n       if (num[dx]==n) {printf(\"%d\",T); return 0;}\n   }\n   printf(\"-1\");\n}\n\n```",
        "postTime": 1476672262,
        "uid": 24632,
        "name": "46days",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4f7f\u7528\u7684\u662f $\\rm Kruskal$ \u6c42\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u4f60\u53ef\u80fd\u4f1a\u8d28\u7591\u6211\uff0c\u56e0\u4e3a\u89e3\u51b3\u8fd9\u9053\u9898\u786e\u5b9e\u6709\u66f4\u52a0\u7b80\u4fbf\u7684\u65b9\u6cd5\u3002\n\n\u4f46\u662f\u5f53\u6211\u770b\u5230\u8fd9\u9053\u9898\u65f6\u7684**\u7b2c\u4e00\u5370\u8c61**\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u6240\u4ee5\uff0c\u4e0b\u9762\u7684\u5206\u6790\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u4e5f\u662f\u6211\u7684\u601d\u8003\u8fc7\u7a0b\u3002\n\n\n------------\n\u9996\u5148\u6211\u4eec\u6765\u56de\u5fc6\u4e00\u4e0b\uff0c\u6811\u662f\u4ec0\u4e48\uff1f\n\n\u7b80\u5355\u4e0a\u6765\u8bf4\uff0c\u6811\u5c31\u662f\u4e00\u4e2a\u6709 $n$ \u4e2a\u70b9\uff0c$n-1$ \u6761\u8fb9\u7684**\u8fde\u901a**\u56fe\u3002\n\n\u8fd9\u9053\u9898\u76ee\u7684\u9898\u9762\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u7ed9\u4e86\u6211\u4eec $n$ \u4e2a\u70b9\uff08**\u539f\u672c\u4e92\u4e0d\u8fde\u901a**\uff09\uff0c\u6709 $m$ \u79cd\u52a0\u8fb9\u7684\u65b9\u6848\uff0c\u7b2c $i$ \u79cd\u52a0\u8fb9\u65b9\u6848\u4f1a\u5728 $t_i$ \u65f6\u523b\u52a0\u4e00\u6761 $x_i$ \u5230 $y_i$ \u7684\u65e0\u5411\u8fb9\uff0c\u95ee\u6700\u65e9\u4ec0\u4e48\u65f6\u5019\u80fd\u4f7f\u56fe\u8054\u901a\uff08\u4e5f\u5c31\u662f\u6210\u4e3a\u4e00\u9897\u6811\uff09\u3002\n\n\u800c\u751f\u6210\u6811\u5c31\u662f\u6307\u4e00\u4e2a**\u8fde\u901a\u65e0\u5411**\u56fe\u7684\u751f\u6210\u5b50\u56fe\uff0c\u540c\u65f6\u8981\u6c42\u662f**\u6811**\u3002\n\n\u6700\u5c0f\u751f\u6210\u6811\u5373\u662f\u8fb9\u6743\u548c**\u6700\u5c0f**\u7684\u751f\u6210\u6811\u3002\n\n\u90a3\u4e48\u5c06\u6700\u5c0f\u751f\u6210\u6811\u7684\u5b9a\u4e49\u5957\u5230\u9898\u76ee\u4e2d\uff0c\u8fd9\u9898\u77ac\u95f4\u5c31\u53d8\u6210\u4e86\u6700\u5c0f\u751f\u6210\u6811\u7684\u88f8\u9898\u3002\n\n\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u7b54\u6848\u5e76\u4e0d\u662f\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6743\u548c\u3002\n\n\u9898\u76ee\u95ee\u7684\u662f\u6700\u65e9\u4ec0\u4e48\u65f6\u5019\u4efb\u610f\u4e24\u4e2a\u6751\u5e84\u80fd\u591f\u901a\u8f66\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c$\\max \\{{\\text{\u52a0\u8fb9\u8fc7\u7a0b\u4e2d\u7684}t_i}\\}$ \u624d\u662f\u6700\u7ec8\u7684\u7b54\u6848\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u5728\u4f7f\u7528 $\\rm Kruskal$ \u524d\u8981\u6309\u8fb9\u6743\u6392\u5e8f\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6c42 $\\max$ \u64cd\u4f5c\u5c31\u4e0d\u8981\u7528\u4e86\u3002\n\n\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u7406\u89e3\uff0c\u90a3\u6211\u53ea\u80fd\u4e0a\u4ee3\u7801\u4e86\uff01\n\n$\\rm code$\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\n# define ll long long\n// \u4e4b\u524d\u770b\u9519\u4e86\u9898\uff0c\u4ee5\u4e3a\u662f\u6c42\u8fb9\u6743\u548c\uff0c\u6240\u4ee5 define \u4e86\u4e00\u4e0b/kk\nconst int maxN = 1005;\nconst int maxM = 100005;\nstruct Edge {\n\tint x, y, v;\n}a[maxM];\n// \u5b58\u653e\u8fb9\nint fa[maxN]; // \u7956\u5148\nint n, m;\nnamespace io {\n\tint read() {\n\t\tint x = 0;\n\t\tchar ch = getchar();\n\t\tfor(; !isdigit(ch);) ch = getchar();\n\t\tfor(; isdigit(ch);) x = x * 10 + (ch & 15), ch = getchar();\n\t\treturn x;\n\t}\n\tvoid write(int x) {\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + 48);\n\t}\n}\n// \u5feb\u8bfb\u5feb\u8f93\u53ef\u4ee5\u4e0d\u770b\nnamespace ufs {\n\tvoid init() { for(int i = 1; i <= n; ++i) fa[i] = i; }\n\tint find(int x) { return fa[x] == x ? x : fa[x] = find(fa[x]); }\n\tvoid merge(int x, int y) { fa[find(x)] = find(y); }\n}\n// ufs:Union_Find_Set\uff0c\u5e76\u67e5\u96c6\u7684\u82f1\u6587\uff0c\u8fd9\u91cc\u628a\u5e76\u67e5\u96c6\u7684\u4e3b\u8981\u64cd\u4f5c\u90fd\u5c01\u88c5\u5230\u4e86\u4e00\u4e2a namespace \u91cc\u9762\u53bb\nbool cmp(Edge, Edge); // \u8fb9\u6743\u6392\u5e8f\u51fd\u6570\nint kruskal();\nint main() {\n// \tfreopen(\"repair.in\", \"r\", stdin);\n// \tfreopen(\"repair.out\", \"w\", stdout);\n\tn = io::read(), m = io::read();\n\tfor(int i = 1; i <= m; ++i) a[i].x = io::read(), a[i].y = io::read(), a[i].v = io::read();\n\tsort(a + 1, a + m + 1, cmp);\n\tufs::init();\n    // \u8f93\u5165\uff0c\u6392\u5e8f\uff0c\u521d\u59cb\u5316\n\tcout << kruskal();\n\treturn 0;\n}\nbool cmp(Edge a, Edge b) {\n\treturn a.v < b.v;\n}\nint kruskal() {\n\tint ans = 0; // ans \u662f\u7b54\u6848\n\tint cnt = 0; // cnt \u662f\u7edf\u8ba1\u52a0\u4e86\u591a\u5c11\u6761\u8fb9\n    // \u4e0b\u9762\u662f Kruskal \u7684\u6a21\u677f\n\tfor(int i = 1; i <= m; ++i) {\n\t\tint fx = ufs::find(a[i].x), fy = ufs::find(a[i].y);\n    \t// \u627e\u7956\u5148  \n\t\tif(fx != fy) { // \u82e5\u4e0d\u662f\u4e00\u5bb6\n\t\t\tans = a[i].v; // \u66f4\u65b0 ans\n\t\t\tufs::merge(fx, fy); // \u5408\u5e76\u6210\u4e00\u5bb6\n\t\t\t++cnt; // \u8ba1\u6570\u5668\u81ea\u52a0 1\n\t\t\tif(cnt == n - 1) return ans; // \u5982\u679c\u5df2\u7ecf\u662f\u4e00\u68f5\u6811\u4e86\uff0c\u76f4\u63a5 return\n\t\t}\n\t}\n\treturn -1;\n}\n```\n\n\n------------\n\u6700\u7ec8\uff0c\u8981\u611f\u8c22 $\\rm OI\\ Wiki$\uff0c\u8ba9\u6211\u7406\u89e3\u4e86\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5e76\u4e14\u5728\u8fd9\u7bc7\u9898\u89e3\u4e2d\uff0c\u4e5f\u501f\u9274\u4e86\u5176\u4e2d\u7684\u601d\u60f3\uff08~~\u548c\u8bed\u8a00~~\uff09\u3002\n\n\u6c42\u7ba1\u7406\u5458\u901a\u8fc7\uff0c\u8c22\u8c22qaq",
        "postTime": 1566637954,
        "uid": 46747,
        "name": "Aehnuwx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u8ddf\u6807\u7b7e\u8bf4\u7684\u4e00\u6837\uff0c\u7528\u5e76\u67e5\u96c6\u89e3\u51b3\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int MAXN(1001), MAXM(100000);\nint p[MAXN],rank[MAXN];    //rank\u662f\u4ee5i\u4e3a\u6839\u7684\u8282\u70b9\u603b\u6570\nint n;\nstruct road\n{\n    int c1, c2, t;\n    road(int a, int b, int t):c1(a), c2(b), t(t){}\n    road(){}\n}list[MAXM];    //\u9053\u8def\u4fe1\u606f\nbool cmp(const road& a,const road& b)\n{\n    return a.t < b.t;\n}\nvoid init_ufs()\n{\n    for(int i(1);i<=n;++i)\n        { p[i] = i; rank[i] = 1; }\n}\nint find_root(int x)    //\u67e5\u627e\u6839\n{\n    return p[x] == x ? x : p[x] = find_root(p[x]);\n}\nvoid unite_set(int a, int b)    //\u5408\u5e76\u96c6\u5408\n{\n    int ar(find_root(a)), br(find_root(b));\n    if(ar != br)\n    {\n        if(rank[ar] > rank[br])\n        {\n            p[br] = a;\n            rank[ar] += rank[br];    //\u5408\u5e76\u65f6\u589e\u52a0\u4ee5ar\u4e3a\u6839\u7684\u8282\u70b9\u6570\n        }\n        else\n        {\n            p[ar] = b;\n            rank[br] += rank[ar];\n        }\n    }\n}\nint main()\n{\n    int m;  cin >> n >> m;\n    init_ufs();\n    for(int i(0);i!=m;++i)\n    {\n        int c1, c2, t;\n        cin >> c1 >> c2 >> t;\n        list[i] = road(c1, c2, t);\n    }\n    sort(list, list + m, cmp);    //\u6309\u65f6\u95f4\u7684\u5148\u540e\u987a\u5e8f\u6392\u5e8f\n    int t(0);\n    for(int i(0);i!=m;++i)\n    {\n        unite_set(list[i].c1,list[i].c2);    \u200b//\u5408\u5e76\u4e24\u70b9\u96c6\u5408\n        t = list[i].t;\n        if(rank[find_root(1)] == n)\n    \u200b    \u200b/*    \u200b\u5f53\u6240\u6709\u6751\u5e84\u6253\u901a\u540e\n    \u200b    \u200b    \u200b    \u200bfind_root(1) = find_root(2) = ... = find_root(n)\n    \u200b    \u200b    \u200b    \u200b\u5219rank[find_root(1)] = n\n    \u200b    \u200b    \u200b    \u200b\u6ca1\u6709\u6253\u901a\u65f6rank[find_root(1)]\u4e00\u5b9a\u4e0d\u7b49\u4e8en\n    \u200b    \u200b*/\n        {\n            cout << t;\n            return 0;\n        }\n    }\n    cout << \"-1\";    \u200b//\u672a\u6253\u901a\u8f93\u51fa-1\n    return 0;\n}\n```",
        "postTime": 1480655140,
        "uid": 22911,
        "name": "ajil",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u6765\u5b89\u6170p\u515a\u4e00\u4e0b\u3002\n\n\u975e\u5e38\u6c34\u7684\u4e00\u9053\u5e76\u67e5\u96c6\u3002\u3002\n\n\u9996\u5148  \u5c06\u6570\u636e\uff08\u8fb9\uff09\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u7136\u540e\u4e00\u6761\u6761\u8fb9\u52a0\u8fdb\u53bb \u76f4\u5230 n\u4e2d\u6240\u6709\u7684\u70b9\u90fd\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\uff08\u5904\u7406\u5230m\u65f6\u4ecd\u4e0d\u80fd\u5f97\u5230 \u5219\u8f93\u51fa-1\uff09\n\n\u8f93\u51faans\u5373\u53ef\u3002\u3002\u3002\uff08\u6ce8\u610f\u9898\u76ee\u4e2d\u8bf4\u7684\u662f Ti \u6307\u7684\u662f\u5230\u7b2cTi \u4e2a\u5355\u4f4d\u65f6\u95f4\u53ef\u4ee5\u4fee\u597d\u7b2c i \u6761\u8def\uff09\n\n\u4e00\u70b9\u70b9\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u5c31\u662f\u6c34\u4e86\u3002\n\n\n\n\n\n\n\n\n\n```cpp\nconst maxn=1001;maxm=100001;\nvar father:array[0..maxn]  of longint;\n    root:array[0..maxn] of longint;\n    st,en,w:array[0..maxm] of longint;\n    n,m,best:longint;\nfunction getfather(i:longint):longint;\n  var k:longint;\n  begin\n    if father[i]=i then exit(i)\n    else begin\n      getfather:=getfather(father[i]);\n      father[i]:=getfather;\n    end;\n  end;\nprocedure merge(x,y:longint);\n  var i,j:longint;\n  begin\n    i:=getfather(x);j:=getfather(y);\n    if i<>j then begin\n      father[j]:=i;\n      inc(root[i],root[j]);\n      root[j]:=0;\n    end;\n  end;\nprocedure sort(l,r:longint);\n  var i,j,t,mid:longint;\n  begin\n    i:=l;j:=r;mid:=w[(l+r) div 2];\n    repeat\n      while w[i]<mid do inc(i);\n      while w[j]>mid do dec(j);\n      if j>=i then begin\n        t:=w[i];w[i]:=w[j];w[j]:=t;\n        t:=st[i];st[i]:=st[j];st[j]:=t;\n        t:=en[i];en[i]:=en[j];en[j]:=t;\n        inc(i);dec(j);\n      end;\n    until i>j;\n    if i<r then sort(i,r);\n    if l<j then sort(l,j);\n  end;\nprocedure init;\n  var i,j:longint;\n  begin\n    readln(n,m);\n    for i:=1 to m do begin\n      readln(st[i],en[i],w[i]);\n    end;\n    sort(1,m);//\u6570\u636e\u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\n  end;\nprocedure main;\n  var i,j:longint;\n      ok:boolean;\n      ans:int64;\n  begin\n    for i:=1 to n do begin\n      father[i]:=i;\n      root[i]:=1;//\u8bb0\u5f55\u4ee5i\u4e3a\u6839\u7684\u96c6\u5408\u7684\u6570\u4e2a\u6570\u3002\n    end;\n    i:=0;ans:=0;ok:=false;\n    while (root[getfather(1)]<>n) and (i<m) do begin\n      inc(i);\n      merge(st[i],en[i]);\n      if ans<w[i] then ans:=w[i];\n      if root[getfather(1)]=n then ok:=true;//\u5224\u65ad\u662f\u5426\u9700\u8981\u8f93\u51fa-1\n      if ok then break;\n    end;\n    if ok then writeln(ans) else writeln(-1);\n  end;\n  begin\n    init;\n    main;\n  end.\n\n```",
        "postTime": 1460473893,
        "uid": 17421,
        "name": "\u4e0d\u53ef\u55b5\u7684",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u8bb0\u5f55\u6bcf\u4e2a\u96c6\u5408\u7684\u57ce\u5e02\u6570\u2026\u2026\n\n\u53ef\u4ee5\u5728\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u7684\u65f6\u5019\u5224\u65ad\u662f\u5426\u8fde\u901a\uff0c\u7406\u7531\u662f\uff08\u5982\u679c\u53ef\u4ee5\u8fde\u901a\uff09\u80af\u5b9a\u6709\u67d0\u4e2a\u6700\u540e\u4e00\u6b65\u5408\u5e76\u51fa\u4e86\u4e00\u4e2a\u57ce\u5e02\u6570\u4e3aN\u7684\u96c6\u5408\u3002\n\n```cpp\n\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct edge{\n    int x,y,t;\n}e[100000];\nint n,m,i,p[1001],num[1001];//p for parent\nint find_set(int x)\n{\n    if(p[x]!=x)p[x]=find_set(p[x]),num[x]=num[p[x]];\n    return p[x];\n}\nbool link(int x,int y)\n{\n    x=find_set(x),y=find_set(y);\n    if(x!=y)p[y]=x,num[x]=num[y]+=num[x];\n    return num[y]>=n;\n}\nbool cmp(edge a,edge b){return a.t<=b.t;}\nint main()\n{\n    for(scanf(\"%d%d\",&n,&m);i<m;i++)scanf(\"%d%d%d\",&e[i].x,&e[i].y,&e[i].t);\n    sort(e,e+m,cmp);\n    for(i=1;i<=n;i++)p[i]=i,num[i]=1;\n    for(i=0;i<m;i++)if(link(e[i].x,e[i].y))break;\n    printf(\"%d\",i<m?e[i].t:-1);\n    \n    return 0;\n}\n\n```",
        "postTime": 1446310500,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u4ee3\u7801\u6bd4\u697c\u4e0b\u66f4\u77ed\u3002Kruskal\u3002\u8fd8\u662f\u624b\u5199\u7684\u5feb\u6392\u3002ans\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u503c\u3002\u6700\u540e\u641c\u7d22\u4e00\u904d\uff0c\u5982\u679c\u6240\u6709\u70b9\u7684\u7236\u4eb2\u90fd\u76f8\u540c\u90a3\u4e48\u8f93\u51faans\uff0c\u5426\u5219\u51fa\u73b0\u67d0\u4e2a\u70b9\u7684\u7236\u4eb2\u548c\u5176\u4ed6\u7684\u70b9\u4e0d\u4e00\u6837\uff0c\u8fd9\u6837\u5c31\u8f93\u51fa-1\n\n```delphi\n\nvar father:array[1..1000]of longint;\nvar i,j,k,n,m,ans,f1,f2,k1,k2,k11,k22,last,ff:longint;\nvar s,e,len:array[1..1000000]of longint;\nprocedure qsort(l,r:longint);\nvar i,j,mid,temp:longint;\nbegin\ni:=l;\nj:=r;\nmid:=len[(i+j)div 2];\nwhile i<j do\nbegin\nwhile len[i]<mid do inc(i);\nwhile len[j]>mid do dec(j);\nif i<=j then\nbegin\ntemp:=len[i];\nlen[i]:=len[j];\nlen[j]:=temp;\ntemp:=s[i];\ns[i]:=s[j];\ns[j]:=temp;\ntemp:=e[i];\ne[i]:=e[j];\ne[j]:=temp;\ninc(i);\ndec(j);\nend;\nend;\nif l<j then qsort(l,j);\nif i<r then qsort(i,r);\nend;\nfunction max(aa,bb:longint):longint;\nbegin\nif aa>bb then exit(aa)\nelse exit(bb);\nend;\n\nbegin\nread(n,m);\nfor i:=1 to m do\nread(s[i],e[i],len[i]);\nqsort(1,m);\nfor i:=1 to n do\nfather[i]:=i;\nans:=0;\n\nfor i:=1 to m do\nbegin\nf1:=s[i];f2:=e[i];\nwhile f1<>father[f1] do f1:=father[f1];\nwhile f2<>father[f2] do f2:=father[f2];\nif f1<>f2 then\nbegin\nk1:=s[i];k2:=e[i];\nwhile k1<>father[k1] do begin k11:=father[k1];father[k1]:=f1;k1:=k11;end;\nwhile k2<>father[k2] do begin k22:=father[k2];father[k2]:=f2;k2:=k22;end;\nfather[k1]:=father[k2];\nans:=max(ans,len[i]);\nend;\nend;\nlast:=1;\nwhile last<>father[last] do last:=father[last];\nfor i:=2 to n do\nbegin\nff:=i;\nwhile ff<>father[ff] do ff:=father[ff];\nif ff<>last then\nbegin\nwriteln(-1);\nhalt;\nend;\nend;\nwriteln(ans);\nend.\n\n```",
        "postTime": 1443701192,
        "uid": 2266,
        "name": "\u51ef\u7279\u7433",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u4ee3\u7801\u6bd4\u697c\u4e0b\u77ed\u5f97\u591a\n\n\u4f46\u4e0d\u89c1\u5f97\u597d\u3002\u3002\u3002\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff08m\\*n\uff09\n\n\u4e00\u7b97\u521a\u597d\u80fd\u8fc7\u3002\u3002\u3002\n\n\u53ef\u4ee5\u7528\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u96c6\u5408\u6240\u5305\u542b\u7684\u5143\u7d20\u6570\u91cf\uff0c\n\n\u5728\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u65f6\u8fdb\u884c\u4f18\u5316\uff0c\u66f4\u52a0\u4fdd\u9669\u3002\n\n\u67d0\u79cd\u610f\u4e49\u4e0a\u7b97\u6c34\u8fc7\u53bb\u7684\u3002\u3002\u3002\u5199\u7684\u4e0d\u597d\u89c1\u8c05\n\n```cpp\n\n#include<cstdio>\n#define swap(x,y){int tmp=x;x=y;y=tmp;}\nint f[1010],d[1010],m,n;//f\u6570\u7ec4\u8bb0\u5f55\u96c6\u5408\u7684\u6839\uff0cd\u6570\u7ec4\u8bb0\u5f55\u4fee\u597d\u6240\u9700\u65f6\u95f4\nvoid link(int a,int b,int w){\n    for(int i=1;i<=n;i++)\n        if(f[b]==f[i]&&b!=i)\n            f[i]=f[a];//\u66f4\u65b0\u88ab\u5408\u5e76\u96c6\u5408\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u6839\n    f[b]=f[a];\n    d[f[b]]=w;\n}\nint main(){\n    int i,j,k;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++){\n        f[i]=i;\n        d[i]=10000000;\n    }\n    for(i=1;i<=m;i++){\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        if(x>y)swap(x,y);\n        if(f[x]!=f[y])\n            link(x,y,z);\n        d[y]=d[y]<z?d[y]:z;//\u66f4\u65b0\u65f6\u95f4\n        if(f[x]==f[y])\n            d[x]=d[x]<z?d[x]:z;//\u82e5\u4e24\u70b9\u4e4b\u95f4\u5df2\u6709\u9053\u8def\u8054\u901a\uff0c\u4e24\u70b9\u65f6\u95f4\u5747\u9700\u66f4\u65b0\n    }\n    j=f[1];k=d[1];\n    for(i=2;i<=n;i++){\n        if(f[i]!=j){//\u5982\u679c\u53d1\u73b0\u6709\u5143\u7d20\u7684\u6839\u4e0ef[1]\u4e0d\u540c\uff0c\u8bf4\u660e\u6709\u591a\u4e2a\u96c6\u5408\u5b58\u5728\n            printf(\"-1\");\n            return 0;\n        }\n        if(d[i]>k&&f[i]!=i)k=d[i];//\u66f4\u65b0\u6700\u957f\u65f6\u95f4\n    }\n    printf(\"%d\",k);\n    return 0;\n}\n\n```",
        "postTime": 1440660181,
        "uid": 8399,
        "name": "dy0607",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u505a\u7684\u6709\u70b9\u9ebb\u70e6\u3002\u3002\u3002\u4ee3\u7801\u633a\u591a\u540d\u79f0\u633a\u957f\u3002\u3002\u3002\n\n```cpp\n\n#include \"stdio.h\"\n#include \"stdlib.h\"\n#include \"string.h\"\nvoid qs(int,int);    //\u5feb\u6392\nint ffind(int);      //\u5e76\u67e5\u96c6\u627e\u6811\u6839\nbool linker(int,int);//\u5e76\u67e5\u96c6\u5408\u5e76\nint rcnt(void);      //\u67e5\u6709\u51e0\u4e2a\u6811\u6839\uff0c\u5047\u5982\u53ea\u67091\u4e2a\u5c31\u5b8c\u6210\u4e86\n////////////////////////\nint flist[2333];\nint tlist[233333];\nint trlist1[233333];\nint trlist2[233333];\nint road;\nint val;\nint maxtime;\nint tempmp=1;\n////////////////////////\nint main(void)\n{\n        //\u8f93\u5165\uff0c\u521d\u59cb\u5316\n    memset(tlist,0,sizeof(tlist));\n    memset(trlist1,0,sizeof(trlist1));\n    memset(trlist2,0,sizeof(trlist2));\n    scanf(\"%d %d\",&val,&road);\n    for(int i=1;i<=val;i++)\n        flist[i]=i;\n    for(int i=1;i<=road;i++)\n        scanf(\"%d %d %d\",trlist1+i,trlist2+i,tlist+i);\n        //\u5feb\u6392\uff0c\u628a\u6700\u77ed\u9053\u8def\u5f04\u51fa\u6765\n    qs(1,road);\n        //tlist[road]\u662f\u6700\u540e\u4e00\u4e2a\uff0c\u5c31\u662f\u6700\u957f\u7684\uff0c\u679a\u4e3e\u8def\u7a0b\u957f\u5ea6\u8fde\u63a5\n        //tempmp\u662f\u8fd9\u4e2ak\u957f\u5ea6\u7684\u8d77\u59cb\u70b9\n    for(int k=1;k<=tlist[road];k++)\n    {\n        for(;tlist[tempmp]==k&&tempmp<=road;tempmp++)\n            linker(trlist1[tempmp],trlist2[tempmp]);\n        if(rcnt()==1)\n        {\n            printf(\"%d\\n\",k);\n            return 0;\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n\nvoid qs(int stp,int edp)\n{\n    int lp=stp,rp=edp;\n    int mid=tlist[(lp+rp)/2];\n    while(lp<=rp)\n    {\n        for(;tlist[lp]<mid;lp++);\n        for(;tlist[rp]>mid;rp--);\n        if(lp<=rp)\n        {\n            int t1=trlist1[lp];\n            int t2=trlist2[lp];\n            int t3=tlist[lp];\n            trlist1[lp]=trlist1[rp];\n            trlist2[lp]=trlist2[rp];\n            tlist[lp]=tlist[rp];\n            trlist1[rp]=t1;\n            trlist2[rp]=t2;\n            tlist[rp]=t3;\n            lp++;rp--;\n        }\n    }\n    if(stp<rp)    qs(stp,rp);\n    if(lp<edp)    qs(lp,edp);\n}\n\nint ffind(int c)\n{\n    if(flist[c]==c)\n        return c;\n    else\n        flist[c]=ffind(flist[c]);\n    return flist[c];\n}\n\nbool linker(int x,int y)\n{\n    int fx=ffind(x);\n    int fy=ffind(y);\n    if(fx==fy)\n        return false;\n    flist[fx]=fy;\n    return true;\n}\n\nint rcnt(void)\n{\n    int temp=0;\n    for(long int i=1;i<=val;i++)\n        if(ffind(i)==i)\n            temp++;\n    return temp;\n}\n\n\n```",
        "postTime": 1437445775,
        "uid": 7574,
        "name": "lightdarkxjt",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u5f88\u7ecf\u5178\u7684\u5e76\u67e5\u96c6~~\n\n\nfirst~\u5148\u6309\u6bcf\u6761\u8def\u4fee\u590d\u7684\u65f6\u95f4\u6392\u5e8f\uff1b\n\n\nthen~\u5f00\u59cb\u6309\u65f6\u95f4\u70b9\u4fee\u8def\uff08\u76f8\u5f53\u4e8e\u4e00\u6b21\u628a\u76f8\u540c\u65f6\u95f4\u7684\u8def\u5168\u90e8\u5efa\u597d\uff09\n\n\n\u6b64\u9898\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4f18\u5316\uff0c\u56e0\u4e3a\u6bcf\u7ed3\u675f\u4e00\u4e2a\u65f6\u95f4\u70b9\u5c31\u9700\u8981\u67e5\u8be2\u662f\u5426n\u4e2a\u70b9\u6210\u4e3a\u4e00\u4e2a\u8054\u901a\u5757\u3002\n\nso \u9700\u8981\u591a\u5f00\u4e00\u4e2a\u6570\u7ec4a[i]\u8bb0\u5f55\u4ee5i\u4e3afather\u65f6 \u4ee5i\u4e3afather\u7684\u70b9\u7684\u4e2a\u6570\uff08\u5305\u62eci)\u3010\u6709\u70b9\u7ed5\u5416\u2026\u2026\u8bed\u6b7b\u65e9\u3011\n\n\n\u5728\u6bcf\u6b21getfather\u65f6\u8fdb\u884c\u8def\u5f84\u538b\u7f29\uff08\u5c06father[i]\u53d8\u6210getfather(father[i])\uff09\uff0c\u987a\u4fbf\u66f4\u65b0a\u6570\u7ec4\u3002\n\n\u5408\u5e76\u65f6\u4e5f\u5408\u5e76a\u6570\u7ec4\u3002\n\n\n\u8fd9\u6837\u6bcf\u6b21\u53ea\u9700\u5224\u65ada[getfather(father[1])]\u662f\u5426\u7b49\u4e8en\u5c31\u884c\u54af\u3002\n\n\n```delphi\n\n\n\ntype\n  abb=record\n  f,t,w:longint;\n  end;\nvar fat:array [0..1001] of longint;\n    sum:array [0..1001] of longint;\n    a:array [0..100001] of abb;\n    i,j,k,l,m,n,p,t:longint;\nfunction getfather(a:longint):longint;\nvar t:longint;\nbegin\n  if fat[a]=a then exit(a);\n  t:=getfather(fat[a]);\n  fat[a]:=t;\n  sum[a]:=1;\n  exit(t);\nend;\nprocedure sort(l,r:longint);\nvar i,j:longint;\n    x,y:abb;\nbegin\n  i:=l;\n  j:=r;\n  x:=a[(l+r) div 2];\n  repeat\n    while a[i].w<x.w do inc(i);\n    while x.w<a[j].w do dec(j);\n    if not(i>j)\n    then\n      begin\n        y:=a[i];\n        a[i]:=a[j];\n        a[j]:=y;\n        inc(i);\n        j:=j-1;\n      end;\n  until i>j;\n  if l<j then sort(l,j);\n  if i<r then sort(i,r);\nend;\nbegin\n  readln(n,m);\n  for i:=1 to n do fat[i]:=i;\n  for i:=1 to n do sum[i]:=1;\n  for i:=1 to m do readln(a[i].f,a[i].t,a[i].w);\n  sort(1,m);\n  i:=1;\n  while (i<=m) do\n    begin\n      p:=getfather(fat[a[i].f]);\n      t:=getfather(fat[a[i].t]);\n      if p<>t then begin fat[p]:=t; sum[t]:=sum[t]+sum[p]; end;\n      while (i<m) and (a[i].w=a[i+1].w) do\n        begin\n          inc(i);\n          p:=getfather(fat[a[i].f]);\n          t:=getfather(fat[a[i].t]);\n          if p<>t then begin fat[p]:=t; sum[t]:=sum[t]+sum[p]; end;\n        end;\n      p:=getfather(1);\n      if sum[p]=n\n      then\n        begin\n          writeln(a[i].w); halt;\n        end;\n      inc(i);\n    end;\n  writeln(-1);\nend.\n\n\n\n```",
        "postTime": 1376105796,
        "uid": 277,
        "name": "plane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u5224\u65ad\u65f6\u95f4\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u5404\u79cd\u8fb9\u754c\u7684\u95ee\u9898\uff0c\uff0c\u5361\u4e86\u597d\u4e45\n```\n#include <stdio.h>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nbool flag = false; //\u7528\u6765\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u8054\u901a,\u521d\u59cb\u72b6\u6001\u4e3a\u672a\u8054\u901a\nconst int N = 100010;\nint father[N]; //\u7528\u6765\u5b58\u50a8\u6bcf\u4e00\u4e2a\u6751\u5e84\u7684\u7236\u4eb2\u7ed3\u70b9\nvoid Union(int x, int y);\nvoid init(int n);\nint findFather(int x);\nstruct Node\n{\n    int x, y, t;\n} node[N];\n\nbool cmp(Node a, Node b)\n{\n    return a.t < b.t;\n}\n\nint main()\n{\n    int n, m;\n    int tempfather;\n    cin >> n >> m;\n    init(n); //\u521d\u59cb\u5316\n    for (int i = 1; i <= m; i++)\n    {\n        scanf(\"%d%d%d\", &node[i].x, &node[i].y, &node[i].t);\n    }\n    sort(node + 1, node + m + 1, cmp);\n    int lastonenow = 0; //\u7528\u6765\u50a8\u5b58\u5f53\u524d\u65f6\u95f4\u76f8\u540c\u7684\u5143\u7d20\u7684\u53f3\u8fb9\u754c\n    int timenow = 0;\n    int temp;\n    while (1)\n    {\n\n        lastonenow++;\n        temp = lastonenow;                                                      //\u7528\u6765\u50a8\u5b58\u5f53\u524d\u65f6\u95f4\u76f8\u540c\u7684\u5143\u7d20\u7684\u5de6\u8fb9\u754c\n        timenow = node[lastonenow].t;                                           //\u4e34\u65f6\u50a8\u5b58\u5f53\u524d\u7684\u65f6\u95f4                                                      //\u50a8\u5b58\u5f53\u524d\u540c\u4e00\u65f6\u95f4\u7684\u5de6\u8fb9\u754c\n        while (node[lastonenow + 1].t == node[lastonenow].t && lastonenow <= m) //\u4e0d\u80fd\u8d8a\u754c\n        {\n            lastonenow++; //\u5982\u679c\u5f53\u524d\u6307\u5411\u7684\u7ed3\u70b9\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7684\u65f6\u95f4\u7b49\u4e8e\u5f53\u524d\u6307\u5411\u7684\u7ed3\u70b9\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u7ed3\u70b9\n        }\n        //timenow = node[lastonenow].t;\n        for (int i = temp; i <= lastonenow; i++)\n        {\n            Union(node[i].x, node[i].y);\n        }\n        tempfather = findFather(1);\n        for (int i = 2; i <= n; i++)\n        {\n            if (findFather(i) == tempfather)\n                flag = true;\n            else\n            {\n                flag = false;\n                break; //\u5982\u679c\u51fa\u73b0\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u6839\u8282\u70b9\uff0c\u8df3\u51fa\u5faa\u73af\n            }\n        }\n        if (flag) //\u5982\u679c\u5f53\u524d\u6240\u6709\u7684\u90fd\u8054\u901a\u4e86\n        {\n            cout << timenow << endl;\n            break; //\u6240\u6709\u7684\u90fd\u8054\u901a\u4e86\uff0c\u8f93\u51fa\u4e34\u65f6\u5b58\u50a8\u7684\u65f6\u95f4\uff0c\u8df3\u51fa\u6b7b\u5faa\u73af\n        }\n        if (lastonenow == m)\n        {\n            break;\n        }\n    }\n    if (!flag) //\u5982\u679c\u8fd9\u65f6\u5019\u8fd8\u662f\u6ca1\u6709\u8054\u901a\n        cout << \"-1\" << endl;\n    return 0;\n}\n\nvoid init(int n)\n{\n    for (int i = 1; i <= n; i++)\n    {\n        father[i] = i; //\u6bcf\u4e00\u4e2a\u6751\u5e84\u7684\u7236\u4eb2\u7ed3\u70b9\u521d\u59cb\u5316\u4e3a\u5b83\u81ea\u5df1\n    }\n}\n\nvoid Union(int x, int y)\n{\n    int faX = findFather(x);\n    int faY = findFather(y);\n    if (faX != faY)\n    {\n        father[faX] = faY; //\u5c06x\u7684\u7236\u4eb2\u7ed3\u70b9\u8bbe\u7f6e\u4e3ay\u7684\u7236\u4eb2\u7ed3\u70b9\uff0c\u8fbe\u5230\u5408\u5e76\u7684\u76ee\u7684\n    }\n}\n\nint findFather(int x)\n{\n    int temp = x; //\u5148\u4e34\u65f6\u50a8\u5b58x\n    while (father[x] != x)\n    {\n        x = father[x];\n    }                         //\u8fd9\u91cc\u5148\u627e\u5230x\u7684\u7236\u4eb2\u7ed3\u70b9\n    int temp2 = father[temp]; //temp2\u7528\u6765\u4e34\u65f6\u5b58\u50a8temp\u7684\u7236\u4eb2\n    while (father[temp2] != temp2)\n    {\n        temp2 = father[temp2];\n        father[temp] = x; //\u538b\u7f29\n        temp = temp2;\n    }\n    return x;\n}\n```",
        "postTime": 1571456235,
        "uid": 246508,
        "name": "\u6f2b\u96e8\u8f7b\u98d8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6c34\u7684\u4e00\u6279\n\n\u4e0d\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u5417\uff1f\n\n\u6700\u5c0f\u751f\u6210\u6811\uff1a[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/666Jason/solution--p3366)\n\n\u628aorz\u6362\u6210-1,\u628al\u6362\u6210maxn\u6c42\u6700\u5927\u8def\u5f84\u5c31\u597d\u4e86\u3002\n\n\u8be6\u7ec6\u4ee3\u7801\uff08Kruskal\uff09\uff1a\n\n```\n//\u4ee5\u4e0b\u4ee3\u7801\u6d89\u53ca\u5e76\u67e5\u96c6\uff0c\u4e0d\u61c2\u7684\u7ae5\u978b\u53ef\u4ee5\u5148\u4e86\u89e3\u4e00\u4e0b \n#include<bits/stdc++.h>\nusing namespace std;\nstruct edge{\n    int fr,to,len;\n}ed[200005];\n//\u7528\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u6bcf\u6761\u8fb9\u7684\u5934\u3001\u5c3e\u548c\u6743\u503c \nint n,m,x,y,z,cnt,maxn,fa[5001];\nbool cmp(edge a,edge b){\n    return a.len<b.len;\n}\nint find(int x){\n    if(fa[x]==x)return x;\n    return fa[x]=find(fa[x]);\n}\n//\u5e76\u67e5\u96c6\u51fd\u6570*1\nvoid merget(int x,int y){\n    int fx=find(x),fy=find(y);\n    if(fx!=fy)fa[fx]=fy;\n}\n//\u5e76\u67e5\u96c6\u51fd\u6570*2\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)fa[i]=i;                       //\u521d\u59cb\u5316 \n    for(int i=1;i<=m;i++){\n        cin>>ed[i].fr>>ed[i].to>>ed[i].len;                                   //\u8bfb\u5165\u6570\u636e\n    }\n    sort(ed+1,ed+m+1,cmp);                              //\u6392\u5e8f\uff0c\u627e\u5230\u6743\u503c\u5c0f\u7684\u8fb9 \n    for(int i=1;i<=m;i++){\n        if(cnt==n-1)break;                              //\u5982\u679c\u70b9\u6570\u679a\u4e3e\u5b8c\u4e86\u5c31\u8df3\u51fa\u5faa\u73af \n        if(find(ed[i].fr)==find(ed[i].to))continue;     //\u5982\u679c\u8fd9\u4e24\u70b9\u5728\u4e00\u4e2a\u96c6\u5408\u5185\u5c31\u8df3\u8fc7 \n        merget(ed[i].fr,ed[i].to);                      //\u628a\u8fd9\u6761\u8fb9\u7684\u4e00\u5934\u4e00\u5c3e\u5408\u5e76 \n        maxn=max(maxn,ed[i].len);                                   //\u6700\u957f\u8fb9\u957f\u5ea6 \n        cnt++;                                          //\u8ba1\u6570\u5668+1 \n    }\n    if(cnt==n-1)cout<<maxn;                                //\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\u5c31\u8f93\u51fa\u957f\u5ea6 \n    else cout<<-1;                                   //\u4e0d\u7136\u5c31\u8f93\u51fa-1\n    return 0;\n} \n```\n\n# \u5b8c\u7f8e\u5730\u7ed3\u675f",
        "postTime": 1569992669,
        "uid": 242967,
        "name": "JasonZRY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "    \u697c\u9876\u4e0adalap\u4eec\u90fd\u7528Kruskal\n    \u672c\u849f\u84bb\u5bf9\u6b64\u9ebb\u6728\u4e0d\u4ec1\u6123\u662f\u53ea\u60f3\u5230\u4e86\u5e76\u67e5\u96c6\n    \u8089\u773c\u53ef\u89c1\u9700\u8981\u6309\u65f6\u95f4\u987a\u5e8f\u628a\u9053\u8def\u8fdb\u884c\u6392\u5e8f\uff0c\u518d\u9010\u4e2a\u904d\u5386\u9053\u8def\uff0c\u5e76\u5728\u6bcf\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u5c06\u8fde\u901a\u4e24\u4e2a\u6751\u5e84\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u8fde\u901a\u4e86\u6574\u4e2a\u6751\u5e84\u5c31\u884c\u4e86\uff0c\u5f53\u7136\uff0c\u6bcf\u6b21\u91cd\u65b0\u5224\u65ad\u8fde\u901a\u6709\u70b9\u96be\u53d7\uff0c\u6240\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6574\u6570num,\u8868\u793a\u7f16\u53f7\u4e00\u5230\u7f16\u53f7num\u5df2\u7ecf\u8fde\u901a\u4e86\uff0c\u8fd9\u6837\u5982\u679c\u904d\u5386\u5230\u6700\u540enum\u6bd4\u6751\u5e84\u6570\u8981\u5c0f\uff0c\u5c31\u662f\u65e0\u89e3\u3002\n    PS.find\uff0ctheSame,init,unite\u8fd9\u4e9b\u5e76\u67e5\u96c6\u6807\u51c6\u51fd\u6570\u5199\u5b8c\u4e86\u5176\u5b9e\u6ca1\u51e0\u884c\u5185\u5bb9\uff0c\n\n  \u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nstruct node{\n\tint x,y,t;\n};\nconst int MAX_N=1005,MAX_M=100005;\nint P[MAX_N];\nint K[MAX_N];\nnode D[MAX_M];\nvoid init(int n){\n\tfor(int i=1;i<=n;i++){\n\t\tP[i]=i;K[i]=0;\n\t}\n}\nint find(int x){\n\tif(P[x]!=x)return P[x]=find(P[x]);else return x;\n}\nvoid unite(int x,int y){\n\tx=find(x);y=find(y);\n\tif(x==y)return;\n\tif(K[y]<K[x])P[y]=x;\n\telse{\n\t\tP[x]=y;\n\t\tif(K[x]==K[y])K[y]++;\n\t}\n}\nbool theSame(int x,int y){\n\treturn find(x)==find(y);\n}\n\nbool cmp(const node& a,const node& b){\n\treturn a.t<b.t;\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tinit(n);\n\tfor(int i=0;i<m;i++){\n\t\tcin>>D[i].x>>D[i].y>>D[i].t;\n\t}\n\tsort(D,D+m,cmp);//\u00b0\u00b4\u00ca\u00b1\u00bc\u00e4\u00cb\u00b3\u00d0\u00f2\u00c5\u00c5\u00c1\u00d0\u00b5\u00c0\u00c2\u00b7 \n\tint num=1;\n\tfor(int i=0;i<m;i++){\n\t\tnode& a=D[i];\n\t\tunite(a.x,a.y);\n\t\twhile(theSame(num,num+1))num++;  \n\t\tif(num>=n){printf(\"%d\",a.t);return 0;}\n\t}\n\tprintf(\"%d\",-1);\n}\n```\n\n  \n",
        "postTime": 1563599782,
        "uid": 227604,
        "name": "Xing_Mang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u665a\u4e0a\u521a\u5b66\u4e86\u5e76\u67e5\u96c6\uff0c\u8bd5\u7740\u5199\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\n\u76ee\u524d\u8fd8\u53ea\u4f1a\u7528C\u8bed\u8a00\u5199\uff0c\u771f\u7684\u592a\u83dc\u3002\n```\n\u601d\u8def\uff1a\n1\uff09\u65b9\u6848\u6309\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff1b\n2\uff09\u6309\u65f6\u95f4\u4ece1\u5230\u6700\u957f\u65f6\u95f4\u5faa\u73af\uff1a\n\ta)\u5982\u679c\u5f53\u524d\u65f6\u95f4\u70b9\u6709\u8def\u4fee\u597d\uff0c\n    \u5219\u5408\u5e76\u8be5\u4e24\u4e2a\u57ce\u5e02\u6240\u5728\u7684\u96c6\u5408\uff1b\n   b)\u68c0\u67e5\u57ce\u5e021\u6240\u5728\u96c6\u5408\u7684\u57ce\u5e02\u6570\u91cf\uff0c\n    \u5982\u679c\u7b49\u4e8en\uff0c\u5219\u627e\u5230\u6700\u77ed\u65f6\u95f4\uff1b\n```\n\n\n\u56e0\u4e3a\u8981\u67e5\u8be2\u96c6\u5408\u4e2d\u57ce\u5e02\u6570\u91cf\uff0c\n\u6240\u4ee5\u91c7\u7528**\u6309\u96c6\u5408\u4e2d\u5305\u542b\u5143\u7d20\u4e2a\u6570\u7684\u65b9\u5f0f**\u5408\u5e76\n\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#define MAX 1005\n#define MMAX 100005\n\ntypedef struct Graph //\u50a8\u5b58\u70b9\u548c\u65f6\u95f4\n{\n    int a, b;\n    int v;\n}Gra;\n\nint n, m\uff1b\nint tim = -1; //\u8bb0\u5f55\u6700\u65e9\u901a\u8def\u65f6\u95f4\nint num = 1;  //\u8bb0\u5f55\u4fee\u8def\u8fdb\u5ea6\nint uset[MAX];\nGra G[MMAX];\n\n//\u5e76\u67e5\u96c6\u6a21\u677f \u53c2\u8003[](https://www.cnblogs.com/cyjb/p/UnionFindSets.html)\nvoid MakeSet()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        uset[i] = -1;\n    }\n}\n\nint Find(int x)\n{\n    if (uset[x] < 0)\n    {\n        return x;\n    }\n    else\n    {\n        uset[x] = Find(uset[x]);\n        return uset[x];\n    }\n}\n\nvoid UnionSet(int x, int y)\n{\n    x = Find(x);\n    y = Find(y);\n\n    if (x == y)\n    {\n        return;\n    }\n\n    if (uset[x] > uset[y])\n    {\n        uset[x] += uset[y];\n        uset[y] = x;\n    }\n    else\n    {\n        uset[y] += uset[x];\n        uset[x] = y;\n    }\n}\n\n//\u5bf9\u4fee\u8def\u65b9\u6848\u6392\u5e8f\uff0c\u7528\u5feb\u6392\u80fd\u8fc7\uff0c\u9009\u62e9\u6392\u5e8f\u6709\u51e0\u4e2a\u6d4b\u8bd5\u70b9\u4f1aTLE\nvoid Sort(int l, int r)\n{\n    int i=l;\n    int j=r;\n    int mid=G[(l+r)/2].v;\n    Gra temp;\n    while (i<j)\n    {\n        while (G[i].v<mid) i++;\n        while (G[j].v>mid) j--;\n        if (i<=j)\n        {\n            temp=G[i];\n            G[i]=G[j];\n            G[j]=temp;\n            i++;\n            j--;\n        }\n    }\n    if (l<j) Sort(l,j);\n    if (i<r) Sort(i,r);\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n\n    for (int i = 1; i <= m; i++)\n    {\n        scanf(\"%d%d%d\", &G[i].a, &G[i].b, &G[i].v);\n    }\n\n    Sort(1, m);\t//\u4fee\u8def\u65b9\u6848\u6392\u5e8f\n    \n    MakeSet();\n\n    for (int i = 1; i <= G[m].v; i++) // i\u8bb0\u5f55\u5f53\u524d\u65f6\u95f4\n    {\n        while (G[num].v == i) //\u540c\u4e00\u65f6\u95f4\u70b9\u53ef\u80fd\u6709\u591a\u6761\u8def\u4fee\u597d\n        {\n\t   \t\t  UnionSet(G[num].a, G[num].b);\n           //-uset[Find(1)]\u4ee3\u88681\u6240\u5728\u96c6\u5408\u7684\u57ce\u5e02\u6570\u91cf\n           if ((-uset[Find(1)]) == n) \n           {\n              tim = i;\n              break;\n           }\n           num++;\n           }\n        }\n    }\n\n    printf(\"%d\\n\", tim);\n    return 0;\n}\n```\n",
        "postTime": 1562343577,
        "uid": 138566,
        "name": "THOOOR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u4e00\u3001\u50a8\u5907\u7b97\u6cd5\n\n**1\u3001\u5e76\u67e5\u96c6\uff08\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u51c6\u5907\uff09**\n\n**2\u3001\u8d2a\u5fc3\uff08\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u51c6\u5907\uff09**\n\n**3\u3001\u6700\u5c0f\u751f\u6210\u6811\uff08\u4e3b\u7b97\u6cd5\uff09**\n\n\u4e8c\u3001\u601d\u8def\uff1a\u65e2\u7136\u8981\u6700\u65e9\u901a\u8f66\uff0c\u90a3\u4e48\u80af\u5b9a\u8981**\u5c06\u4fee\u590d\u65f6\u95f4t\u4ece\u5c0f\u5230\u5927\u6392\u5e8f**\uff08\u8d2a\u5fc3\uff09\uff0c\u7136\u540e\u76f4\u63a5\u4e0a\u6700\u5c0f\u751f\u6210\u6811\uff01\uff01\uff01\n\n\u4e09\u3001\u4ee3\u7801\uff08\u989d\u989d\u989d\uff0c\u6ca1\u6709\u7f29\u8fdb\u54e6\uff01\uff09\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\nconst int M=100100;\nint tot,t,n,m,i,j,f[1010];\n//\u6570\u7ec4\u6700\u597d\u5f00\u592710~1000\uff0c\u7a7a\u95f4\u4e0a\u65e0\u592a\u5927\u6240\u8c13\nstruct node{\n    int x,y,v;\n    bool operator < (const node &a) const{\n        return v<a.v;\n    }\n    //\u91cd\u5b9a\u4e49<\u53f7\uff0c\u4e3a\u6392\u5e8f\u51c6\u5907\n    void read(){\n        scanf(\"%d%d%d\",&x,&y,&v);\n    }\n    //\u8f93\u5165\n}a[M];\nint getf(int x){\n    if (f[x]==x) return x;\n    else return f[x]=getf(f[x]);\n}\n//\u5e76\u67e5\u96c6\nbool merge(int a,int b){\n    a=getf(a);b=getf(b);\n    if (a==b) return false;\n    f[b]=a;return true;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++) a[i].read();\n    for(i=1;i<=n;i++) f[i]=i;\n    sort(a+1,a+m+1);\n    for(i=1;i<=m;i++)\n    if (merge(a[i].x,a[i].y)){\n        tot=max(tot,a[i].v);\n        //\u4e0e\u6807\u51c6\u6700\u5c0f\u751f\u6210\u6811\u552f\u4e00\u7684\u4e0d\u540c\n        t++;if (t==n-1) break;\n    }\n    //\u6700\u5c0f\u751f\u6210\u6811\n    if (t==n-1) printf(\"%d\\n\",tot);\n    else puts(\"-1\");\n    return 0;\n}\n```\n\u56db\u3001\u8c08\u8c08\u4e07\u80fd\u5934\uff08bits/stdc++.h\uff09\uff1a\n\nnoip\u7cfb\u5217\u7ade\u8d5b\u4e2d\u8bf4\uff1a\u201c**\u7406\u8bba\u4e0a**\u5141\u8bb8\u4f7f\u7528\u4e07\u80fd\u5934\u201d\uff0c\u4f46\u9009\u624b\u8981\u4e3a\u5168\u8d23\uff08\u4e07\u4e00\u4e0d\u80fd\u7528\uff0c\u90a3\u5c31liangliang\u54af\uff09\uff0c\u6240\u4ee5\u5927\u5bb6\u5e73\u65f6\u53ef\u4ee5\u7528\u7528\uff0c\u4f46\u8003\u8bd5\u6700\u597d\u522b\u7528\uff01",
        "postTime": 1560511472,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u840c\u65b0\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5927\u4f6c\u52ff\u55b7\u3002\n\n\u8bf4\u5b9e\u8bdd\uff0c\n\u6211\u5e76\u4e0d\u8ba4\u4e3a\u8fd9\u9053\u9898\u8981\u7528**~~\u6700\u5c0f\u751f\u6210\u6811\u3002~~**\n\n## \u53ea\u9700\u8981\u5e76\u67e5\u96c6\u3002\n\n# \u4e00\u91cd\u5faa\u73af\uff0c\u590d\u6742\u5ea6**O\uff08m\uff09**;\n\u5927\u4f6c\u4eec\u5df2\u7ecf\u89e3\u91ca\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u6765\u8bf4\u4e00\u6ce2\u81ea\u5df1\u7684\u601d\u8def\u3002\n\n\u957f\u8bdd\u77ed\u8bf4\uff0c\u653e\u4ee3\u7801\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint fa[200005],n,m,s=0;\nstruct pp{\n  int a,b,c;//a:\u8fb9\u9996,b:\u8fb9\u5c3e,c:\u65f6\u95f4;\n};\npp t[200005];\nbool cp(pp p,pp q){//\u6309\u65f6\u95f4\u6392\u5e8f\u3002\n  return p.c<q.c;\n}\nint gets(int x){//\u5e76\u67e5\u96c6\u6a21\u677f\u3002\n  if(x==fa[x]) return x;\n  return fa[x]=gets(fa[x]);\n}\nvoid add(int x,int y){\n  fa[gets(x)]=gets(y);\n}\nint judge(int x,int y){//\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u7956\u5148\u3002\n  int x1,x2;\n  x1=gets(x);\n  x2=gets(y);\n  if(x1==x2)\n    return 1;\n  return 0;\n} \nint main(){\n  scanf(\"%d%d\",&n,&m);\n  for(int i=1;i<=n;i++){\n    fa[i]=i;\n  }\n  for(int i=0;i<=m;i++) t[i].c=0x3f;\n  for(int i=1;i<=m;i++)\n    scanf(\"%d%d%d\",&t[i].a,&t[i].b,&t[i].c);\n  sort(t+1,t+m+1,cp);//**\u6ce8\u610f\uff0c\u4ecet+1**\n  for(int i=1;i<=m;i++){\n    if(!judge(t[i].a,t[i].b))//\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u3002\n    {add(t[i].a,t[i].b);s++;if(s==n-1) {cout<<t[i].c;return 0;}}   \n  }\n  cout<<\"-1\";\n  return 0;\n}\n```\n",
        "postTime": 1556714258,
        "uid": 164688,
        "name": "spsp23",
        "ccfLevel": 0,
        "title": "p1111\u6765\u81ea\u840c\u65b0\u7684\u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053**Kruskal\u7b97\u6cd5**\u88f8\u9898\uff0c\u53ef\u4ee5\u7528**\u5229\u7528**\u5e76\u67e5\u96c6\u505a  \n\n**Kruskal\u7b97\u6cd5**\uff1a\nKruskal\u7b97\u6cd5\u662f\u4e00\u79cd\u7528\u6765\u67e5\u627e[\u6700\u5c0f\u751f\u6210\u6811](https://baike.baidu.com/item/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91)\u7684\u7b97\u6cd5\uff0c\u7531Joseph Kruskal\u57281956\u5e74\u53d1\u8868\u3002\n\u7528\u6765\u89e3\u51b3\u540c\u6837\u95ee\u9898\u7684\u8fd8\u6709[Prim\u7b97\u6cd5](https://baike.baidu.com/item/Prim/10242166?fromtitle=Prim%E7%AE%97%E6%B3%95&fromid=10986864)\u548cBoruvka\u7b97\u6cd5\u7b49\u3002\u4e09\u79cd\u7b97\u6cd5\u90fd\u662f\u8d2a\u5fc3\u7b97\u6cd5\u7684\u5e94\u7528\u3002\n\u548cBoruvka\u7b97\u6cd5\u4e0d\u540c\u7684\u5730\u65b9\u662f\uff0cKruskal\u7b97\u6cd5\u5728\u56fe\u4e2d\u5b58\u5728\u76f8\u540c\u6743\u503c\u7684\u8fb9\u65f6\u4e5f\u6709\u6548\u3002\n\n\u5148\u6765\u8bb2\u8ff0\u4e00\u4e0b\u5e76\u67e5\u96c6\n\n\u5e76\u67e5\u96c6\u662f\u63cf\u8ff0**\u4e0d\u76f8\u4ea4\u96c6\u5408\u7684\u6570\u636e\u7ed3\u6784**\uff0c\u5e76\u652f\u6301\u5bf9\u8fd9\u4e9b\u4e0d\u76f8\u4ea4\u96c6\u5408\u8fdb\u884c**\u5408\u5e76**\u3001**\u67e5\u627e**\u64cd\u4f5c\u3002  \n\u56e0\u6b64\u5e76\u67e5\u96c6\u4e3b\u8981\u5c31\u662f\u4e24\u4e2a\u64cd\u4f5c\uff1a  \n1.\u5408\u5e76\u64cd\u4f5c  \n2.\u67e5\u627e\u64cd\u4f5c  \n \u4ee3\u7801\u5982\u4e0b\n ```cpp\n int find(int x) {\n\treturn x==fa[x] ? x: fa[x]=find(fa[x]);\n}//\u67e5\u627e\u64cd\u4f5c\n\n void join(int x,int y) {\n\tif(find(x)!=find(y)) fa[find(y)]=find(x);\n}//\u5408\u5e76\u64cd\u4f5c\n ```\n \u6240\u4ee5\u9700\u8981\u5982\u4e0b\u65b9\u6848  \n1\u3001\u5bf9\u56fe\u7684\u6240\u6709\u8fb9\u6309\u7167\u6743\u503c\u5927\u5c0f\u8fdb\u884c\u6392\u5e8f\u3002  \n2\u3001\u5c06\u8fb9\u6dfb\u52a0\u5230\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u65f6\uff0c\u5224\u65ad\u662f\u5426\u5f62\u6210\u4e86\u56de\u8def\u3002  \n\u6392\u5e8f\u5c31\u4e0d\u7528\u8bf4\u4e86  \n\u5224\u65ad\u662f\u5426\u5f62\u6210\u4e86\u56de\u8def\uff0c\u6b63\u662f\u5e76\u67e5\u96c6\u7684\u5f3a\u9879  \n\u53ea\u9700\u628a\u5408\u5e76\u64cd\u4f5c\u4fee\u6539\u4e3a\n```cpp\nbool join(int x,int y) {\n\tif(find(x)!=find(y)) {\n\t\tfa[find(y)]=find(x);\n\t\treturn 1;\n\t}\n\treturn 0;\n}//\u5224\u65ad\u662f\u5426\u5f62\u6210\u4e86\u56de\u8def\n```\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint fa[100005],n,m;\nstruct weizi {\n\tint x,y,sum;\n} a[100005];\nint find(int x) {\n\treturn x==fa[x] ? x: fa[x]=find(fa[x]);\n}\nint join(int x,int y) {\n\tif(find(x)!=find(y)) {\n\t\tfa[find(y)]=find(x);\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nint cmp(weizi a,weizi b) {\n\treturn a.sum<b.sum;\n}\nint main() {\n\tcin>>n>>m;\n\tfor(int i=1; i<=m; i++)cin>>a[i].x>>a[i].y>>a[i].sum;\n\tsort(a+1,a+1+m,cmp);\n\tfor(int i=1; i<=n; i++)fa[i]=i;\n\tint count=0;\n\tfor(int i=1; i<=m; i++) {\n\t\tif(join(a[i].x,a[i].y)) {\n\t\t\tcount++;\n\t\t}\n\t\tif(count==n-1) {\n\t\t\tcout<<count<<' '<<a[i].sum<<endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<-1;\n\treturn 0;\n}\n```\n\u7b80\u5355\u6765\u8bf4\uff0cKruskal\u7b97\u6cd5\u5c31\u662f\u5229\u7528\u4e86\u8d2a\u5fc3\u539f\u7406\uff0c\u628a\u70b9\u7684\u6743\u503c\u6392\u5e8f\uff0c\u7136\u540e\u5229\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u5f62\u6210\u56de\u8def\uff0c\u7531\u6b64\u6c42\u89e3\n",
        "postTime": 1554520509,
        "uid": 124786,
        "name": "dlydly",
        "ccfLevel": 4,
        "title": "P1111 \u4fee\u590d\u516c\u8def"
    },
    {
        "content": "****\u5feb\u901f\u6392\u5e8f+\u5e76\u67e5\u96c6\n\n- \u7ed3\u6784\u4f53\u50a8\u5b58\u6bcf\u6761\u8fb9\n\n- \u81ea\u5b9a\u4e49\u4e00\u4e2acmp\u51fd\u6570\uff0c\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6392\u5217\u7ed3\u6784\u4f53\u4e0b\u6807\uff0c\u4f7f\u987a\u5e8f\u904d\u5386\u65f6\u95f4\u4ece\u65e9\u5230\u665a\u3002\n\n- \u76f4\u63a5\u987a\u5e8f\u5e76\u67e5\u96c6\u52a0\u8fb9\uff0c\u5408\u5e76\u8fc7\u7a0b\u4e2d\u628a\u5b50\u96c6\u7684\u603b\u70b9\u6570\u76f8\u52a0\uff08>\u5408\u5e76\u8fc7\u7a0b\u4fdd\u8bc1\u6ca1\u6709\u91cd\u590d\uff09\uff0c\u5224\u65ad\u662f\u5426\u7b49\u4e8e\u603b\u70b9\u6570\uff0c\u5373\u5408\u5e76\u5f97\u5230\u7684\u5e76\u67e5\u96c6\u4e2d\u662f\u5426\u5305\u542b\u6240\u6709\u70b9\n\n- \u82e5\u6b64\u65f6\u6b64\u96c6\u4e2d\uff08\u4e0d\u91cd\u590d\u7684\uff09\u70b9\u6570\u91cf\u7b49\u4e8e\u603b\u70b9\u6570\uff0c\u5219\u8f93\u51fa\u6b64\u65f6\u65f6\u95f4\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define maxx 1010\nusing namespace std;\nint n,m,fa[maxx],du[maxx],rank[maxx];\nstruct node{\n    int u,v,t;\n}a[100010];\nvoid makeset(int size)\n{\n    for(int i=1;i<=size;i++) {\n    fa[i]=i;\n    du[i]=1;\n    rank[i]=0;\n    }\n}\nbool cmp(node o,node p)\n{\n    return o.t<p.t;\n}\nint find(int i)\n{\n    if(fa[i]!=i) fa[i]=find(fa[i]);\n    return fa[i];\n}\nvoid unionset(int x,int y)\n{\n    x=find(x);\n    y=find(y);\n    if(x==y) return ;\n    if(rank[x]>rank[y])\n      {\n          fa[y]=x;du[x]+=du[y];\n      }\n    else{\n        fa[x]=y;\n        if(rank[x]==rank[y]) rank[y]++;\n        du[y]+=du[x];\n    }\n}\nint main()\n{\n    freopen(\"in.txt\",\"r\",stdin);\n    scanf(\"%d%d\",&n,&m);\n    makeset(n);\n    for(int i=1;i<=m;i++)\n      {\n          scanf(\"%d%d%d\",&a[i].u,&a[i].v,&a[i].t);\n      }\n    sort(a+1,a+m+1,cmp);\n    int flag=0;\n    int i=1;\n    for(i=1;i<=m;i++)\n      {\n          unionset(a[i].u,a[i].v);\n          int h=find(a[i].u);\n        if(du[h]==n) \n            {\n                flag=1;\n                printf(\"%d\",a[i].t);\n                break;\n            }\n      }\n    if(flag==0) cout<<-1;\n    return 0;\n}\n```",
        "postTime": 1509190956,
        "uid": 45553,
        "name": "Gae_Blog",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u4e8c\u5206+\u5e76\u67e5\u96c6\n\n\u4e8c\u5206\u51fa\u6700\u5c0f\u65f6\u95f4\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5f00\u4e00\u4e2a\u5e76\u67e5\u96c6\u8bb0\u5f55\u5f53\u524d\u9053\u8def\u7684\u8054\u901a\u60c5\u51b5\n\n\u5168\u90e8\u8054\u901a\u7684\u8bdd\u5b83\u4eec\u7684\u7956\u5148\u662f\u516c\u5171\u7684\n\n\u53e6\u5916\u5148\u5224\u4e00\u4e0bt=100000\u65f6\u662f\u5426\u53ef\u884c\uff0c\u4e0d\u884c\u8f93\u51fa-1\n\n\u5177\u4f53\u7ec6\u8282\u4ee3\u7801\u91cc\u8bb2\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n,m; \nint father[2000];\nstruct node{\n    int x;\n    int y;\n    int t;\n}b[100001];//\u50a8\u5b58\u8fb9\nbool cmp(node o,node p)\n{\n    return o.t<p.t;\n```\n}//\u6392\u5e8f\n```cpp\nint getf(int k)\n{\n    if(father[k]==k)\n     return k;\n    father[k]=getf(father[k]);\n    return father[k];\n}\nbool pd(int k)\n{\n    for(int i=1;i<=n;i++)\n      father[i]=i;\n    for(int i=1;b[i].t<=k&&b[i].t!=0;i++)\n      {\n          int f1=getf(b[i].x);\n          int f2=getf(b[i].y);\n          if(f1!=f2)\n            father[f1]=f2;\n      }\n    int g=getf(1);\n    for(int i=2;i<=n;i++)\n      if(getf(i)!=g)\n        return 0;//\u82e5\u68c0\u67e5\u5230\u6709\u70b9\u7684\u7956\u5148\u4e0d\u540c\uff0c\u5219\u4e0d\u8054\u901a\uff0c\u8fd4\u56de0\n    return 1;\n}\nint ef(int l,int r)//\u4e11\u964b\u7684\u4e8c\u5206\n{\n    int mid=(l+r)/2;\n    if(l==r)\n      return l;\n    if(l+1==r)\n      if(pd(l))\n        return l;\n      else\n        return r;\n    if(pd(mid))\n      r=mid;\n    else\n      l=mid+1;\n    return ef(l,r);\n} \nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n      scanf(\"%d%d%d\",&b[i].x,&b[i].y,&b[i].t);\n    sort(b+1,b+m+1,cmp);\n    if(!pd(100000))//\u7279\u5224\n      {\n          cout<<\"-1\";\n          return 0;\n      }\n    cout<<ef(1,100000);  \n    return 0;\n}\n```",
        "postTime": 1508577236,
        "uid": 21332,
        "name": "nkoi18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u57fa\u672c\u601d\u8def\uff1a\u7528\u7ed3\u6784\u4f53\u6765\u4fdd\u5b58\u4e24\u4e2a\u6751\u5e84\u548c\u65f6\u95f4\uff0c\u5e76\u901a\u8fc7\u65f6\u95f4\u7528sort\u4ece\u5c0f\u5230\u5927\u6392\u5217\u7ed3\u6784\u4f53\uff0c\u5e76\u4ece\u6700\u5c0f\u7684\u5f00\u59cb\u8fde\u63a5\u6751\u5e84\u3002\u4e4b\u6240\u4ee5\u8fd9\u4e48\u505a\uff0c\u662f\u56e0\u4e3a\u8fd9\u9053\u9898\u7684\u65f6\u95f4\u5177\u6709**\u91cd\u53e0\u6027**\u3002\u5b83\u662f\u80fd\u5728 t \u65f6\u5b8c\u6210\uff0c\u800c\u4e0d\u662f\u8981\u7528 t \u8fd9\u4e48\u591a\u65f6\u95f4\uff0c\u8981\u6ce8\u610f\u5ba1\u9898\u3002\u5148\u4e0a\u4ee3\u7801\u6162\u6162\u8bb2\uff1a\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct zhu{\n    int u,v,w;\n}e[100010];\nint fa[1010];\nint cmp(const zhu &a,const zhu &b)\n{\n    return a.w<b.w;\n}\nint find(int k)\n{\n    return k==fa[k]?k:fa[k]=find(fa[k]);\n}\nint main()\n{\n    int n,m,t,i,w;     \n //w\u6211\u662f\u53d6\u5f97wrong\u7684\u9996\u5b57\u6bcd\uff0c\u610f\u601d\u662f\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u53ea\u6709\u5f53\u8fd9w\u4e3a0\u65f6\uff0c\u624d\u662f\u8fde\u63a5\u5b8c\u6210\uff08\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\uff0c\u88ab\u7b2c\u4e8c\u4e2a\u70b9\u8d85\u65f6\u641e\u75af\u7684\u5c0f\u4f19\u4f34\u4e0b\u9762\u5e94\u8be5\u770b\u4ed4\u7ec6\u4e86\uff09\uff0ct\u662f\u6307\u73b0\u5728\u6211\u8981\u7528\u591a\u5c11\u65f6\u95f4\u4e86\n    cin>>n>>m;\n    w=n;\n    for(i=1;i<=m;i++)\n    {\n        cin>>e[i].u>>e[i].v>>e[i].w;\n    }\n    sort(e,e+m+1,cmp);       //\u6392\u5217\u7ed3\u6784\u4f53\uff0c\u901a\u8fc7\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5217\n    for(i=1;i<=n;i++)\n    fa[i]=i;\n    for(i=1;i<=m;i++)\n    {\n        int x=find(e[i].u);\n        int y=find(e[i].v);\n        if(x!=y)\n        {\n            fa[x]=y;\n            t=e[i].w;\n            w=w-1;     //\u5982\u679c\u8fde\u63a5\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u8868\u793a\u4e0d\u540cw\u7684\u5c31\u4f1a-1\uff0c\u8fd9\u5bf9\u4e8e\u4e24\u4e2a\u96c6\u5408\u4e4b\u95f4\u7684\u8fde\u63a5\u4e5f\u5b9e\u7528\n        }\n        if(w==0)break;     //\u5f53\u6ca1\u6709\u4e0d\u540c\u7684\uff0c\u5c31\u4e0d\u7528\u8fde\u4e86\n    }\n    int ok=2;\n    if(i<=n-1)          //\u6b64\u5904\u7684i\u7684\u503c\u5f53\u7136\u662f\u6211\u7684\u8fb9\u679a\u4e3e\u5230\u7b2c\u51e0\u4e2a\u4e86\uff0c\u5f53\u8fb9\u6ca1\u6709\u5230n\u5c31\u9000\u51fa\u6765\u4e86\uff0c\u5f53\u7136\u6211\u7edd\u5bf9\u662f\u8fde\u63a5\u5b8c\u4e86\uff0c\u4e5f\u5c31\u4e0d\u7528\u518d\u5224\u70b9\u4e86\u3002\n    cout<<t;\n    else{\n        for(int i=1;i<=n;i++)\n    {\n        if(find(i)==i)\n        {\n            ok=ok-1;\n        }\n        if(!ok)break;\n    }\n    if(ok)cout<<t;\n    else cout<<\"-1\";\n    }\n    return 0;\n}\n```",
        "postTime": 1507945405,
        "uid": 49620,
        "name": "\u859b\u88d5\u9f99",
        "ccfLevel": 6,
        "title": "1111"
    },
    {
        "content": "\u5176\u5b9e\u5dee\u4e0d\u591a\u5c31\u662f\u4e00\u9053\u88f8\u7684kruskal \uff0c\u4f46\u8fd8\u662f\u8981\u6ce8\u610f\u4e9b\u95ee\u9898\uff0c\u4e0d\u662f\u6c42\u548c\u800c\u662f\u8fb9\u6743\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6539\u4e0b\u9700\u8981\u5199\u4e2amax\n\n\u8fd8\u6709\u5c31\u662f\u5e76\u67e5\u96c6\u90a3\u91cc\u9700\u8981\u6ce8\u610f\u4e0b\u8981\u538b\u7f29\u4e0b\uff0c\u76f4\u63a5\u5168\u90e8\u6307\u5230\u4e00\u70b9\u4e0d\u8981\u6bcf\u6b21\u90fd\u904d\u5386\n\n```cpp\n#include<cstdio>\n#include<algorithm>//\u5934\u6587\u4ef6\n#define N (5001) \n#define M (200001)\nusing namespace std;\n//\u5b9a\u4e49\u7ed3\u6784\u4f53\u5b58\u8fb9\uff0cx\u4e3a\u8d77\u70b9\uff0cy\u4e3a\u7ec8\u70b9\uff0cz\u4e3a\u503c\nstruct edge{\n    int x,y,z;\n}a[M];\nint fat[N],tot,ans;//fat[]\u8868\u793a\u662f\u5426\u5728\u540c\u4e00\u5e76\u5dee\u96c6 \nbool cmp(edge x,edge y){//\u7528\u4e8esort\u7684\u6392\u5e8f\uff0c\u6309\u503c\u6392\uff0c\u6700\u5c0f\u7684\u5728\u524d\u9762 \n    return x.z<y.z;\n} \nint ask(int x){//\u67e5\u627e\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\n         if (fat[x]!=x) fat[x]=ask(fat[x]); \n    return fat[x];//\u5982\u679c\u4ed6\u81ea\u5df1\u7684fat\u4e0d\u662f\u81ea\u5df1\u5c31\u627efat\u7684fat \n}\nvoid he(int r1,int r2)//\u5408\u5e76\u96c6\u5408 \n{\n    int l1=ask(r1);\n    int l2=ask(r2);\nif (l1!=l2)  fat[l1]=l2;//\u4e0d\u5728\u7edf\u4e00\u96c6\u5408\u5408\u5e76\n}\nint main(){\n    int n,m;\n    scanf(\"%d%d\",&n,&m);//\u8f93\u5165 \n    for (int i=1;i<=m;i++) scanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].z);//\u8f93\u5165\u8d77\u70b9\u7ec8\u70b9\u8fb9 \n    sort(a+1,a+m+1,cmp);//\u628a\u8fb9\u6309\u4ece\u5c0f\u5230\u5927\u6392\n    for (int i=1;i<=n;i++) fat[i]=i;//\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n    for (int i=1;i<=m;i++){\n        if (ask(a[i].x)!=ask(a[i].y)){//\u514b\u9c81\u65af\u5361\u5c14\n            ans=max(ans,a[i].z);//\u53d6\u6700\u5927\u8fb9 \n            he(a[i].x,a[i].y);//\u5408\u5e76\u96c6\u5408\u8868\u793a\u5df2\u8fde \n            tot++;//\u6570\u91cf \u5224\u65ad\u662f\u5426\u751f\u6210 \n        }\n    }\n    if (tot<n-1) printf(\"-1\");//\u5224\u65ad\u82e5tot=k-1\u5219\u751f\u6210\u4e86\u6700\u5c0f\u6811\n    else printf(\"%d\",ans);//\u8f93\u51fa \nreturn 0;\n}\n```",
        "postTime": 1506507036,
        "uid": 9181,
        "name": "\u5305\u5b50\u5165\u4fb5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5dee\u4e0d\u591a\u5c31\u662f\u4e00\u9053\u88f8\u7684kruskal \u6ce8\u610f\u4e00\u4e0bans\u4e0d\u662f\u548c \u800c\u662f\u4f7f\u6240\u6709\u70b9\u90fd\u8054\u901a\u65f6\u65f6\u95f4\u7684\u6700\u5c0f\u503c\n\n\u8fd8\u6709\u5c31\u662f \u5927\u5bb6\u4e00\u5b9a\u8981\u7ec6\u5fc3QAQ\u5373\u4f7f\u662f\u5199\u677f\u5b50\u7684\u65f6\u5019\n\n\u5982\u679c\u4f60\u770b\u6211\u7684\u63d0\u4ea4\u8bb0\u5f55\u5c31\u4f1a\u53d1\u73b0 \u6211\u56e0\u4e3a\u628asort\u5199\u5728\u4e86\u8f93\u5165\u524d\u8fb9\u5bfc\u81f4WA\u4e86\u597d\u591a\u6b21\n\n\u6211\u8fd8\u4e00\u8138\u61f5\u6bd4\u7684\u6539\n\n\u7ec6\u5fc3\u6700\u91cd\u8981 \u7ec6\u5fc3\u6700\u91cd\u8981 \u7ec6\u5fc3\u6700\u91cd\u8981\uff01\uff01\uff01\n\n\u6ce8\u91ca\u90fd\u5728\u4ee3\u7801\u91cc\u4e86\n\n\u00b7\u00b7\u00b7\n \n \n```cpp\n#include<bits/stdc++.h>  \n#define MAXN 200100\nusing namespace std;\nint father[MAXN],ans=0;\nint flag[MAXN],n,m,tot,bis;\nstruct edge{\n    int from,to;\n    int value;\n};edge Edge[MAXN];//\u5b58\u8fb9 \nbool cmp(edge x,edge y)//\u6bd4\u8f83\u51fd\u6570\u7684cmp \n{\n    return x.value<y.value;\n}\nint Find(int x)\n{\n    if(father[x]!=x)\n    {\n        father[x]=Find(father[x]);//\u8def\u5f84\u538b\u7f29 \n    }\n    return father[x];\n}\nvoid Union(int x,int y)//\u5408\u5e76 \n{\n    int fx=Find(x),fy=Find(y);\n    if(fx!=fy)\n    {\n        father[fx]=fy;\n    }\n}\nvoid init()\n{\n    memset(flag,1,sizeof(flag));\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        father[i]=i;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        cin>>Edge[i].from>>Edge[i].to>>Edge[i].value;\n    }    \n        sort(Edge+1,Edge+m+1,cmp);//\u6309\u7167\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n}\nvoid out()\n{\n        for(int i=1;i<=n;i++)\n    {\n        if(flag[i])//\u5982\u679c\u6709\u4e00\u4e2a\u70b9\u6ca1\u5728\u6811\u4e2d \u4e5f\u5c31\u662fflag[i]=1 \u7684\u65f6\u5019 \u8bf4\u660e\u65e0\u6cd5\u901a\u8f66 \u8f93\u51fa-1 \n        {\n            cout<<\"-1\"<<endl;\n            return ;\n        }\n    }\n    cout<<ans<<endl;\n    return ;\n}\nvoid work()\n{\n    for(int i=1;i<=m;i++)\n    {\n        int a=Edge[i].from,b=Edge[i].to;\n        if(Find(a)!=Find(b))//\u5f53\u4e24\u4e2a\u70b9\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u65f6\u5019 \u5408\u5e76 \n        {\n            ans=max(ans,Edge[i].value);\n            Union(a,b);\n            flag[a]=0,flag[b]=0;//\u6bcf\u5f53\u5408\u5e76\u4e00\u4e2a\u70b9 \u5c31flag[i]=0 \n        }\n    }\n}\nint main()//\u4e3b\u7a0b\u5e8f \n{\n    init();\n    work();\n    out();\n    return 0;\n } \n\u00b7\u00b7\u00b7\n```",
        "postTime": 1506085549,
        "uid": 18875,
        "name": "\u53f8\u5f92stuart",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u514b\u9c81\u65af\u5361\u5c14\n\n\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u7248\u5b50\uff0c\u4e0d\u591a\u8bf4\uff0c\u770bac\u4ee3\u7801\u6ce8\u89e3\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define N (1000+10) \n#define M (100000+10)\nusing namespace std;\nstruct edge{\n    int x,y,z;\n}a[M];//\u5b9a\u4e49\u6bcf\u6761\u8fb9\u4e3a\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u65b9\u4fbf\u6392\u5e8f\nint fa[N],tot,ans;\nbool cmp(edge x,edge y){\n    return x.z<y.z;\n} //\u6392\u5e8f\u7684cmp\uff0c\u4e0d\u591a\u8bf4\nint ask(int x){\n    if (fa[x]==x) return x;\n    fa[x]=ask(fa[x]); return fa[x];\n```\n}//\u5e76\u67e5\u96c6\u7684\u7cbe\u9ad3\uff0c\u548c\u4ee5\u524d\u6253\u7684Pascal\u7248\u7684\u8fd8\u662f\u6709\u5dee\u522b\uff0c\u91cd\u70b9\u89e3\u91ca\u4e00\u4e0b\uff0cfa\u8868\u793a\u7236\u4eb2\uff0cfather\u7684\u7b80\u5199\uff0c\u5f88\u597d\u61c2\uff0c\u7136\u540eask\u8868\u793a\u6700\u8fdc\u80fd\u8ffd\u6eaf\u5230\u7684\u7956\u5148\uff0c\u6211\u6700\u8fdc\u80fd\u8ffd\u6eaf\u5230\u7684\u7956\u5148\u7b49\u4e8e\u6211\u7239\u6700\u8fdc\u80fd\u8ffd\u6eaf\u5230\u7684\u7956\u5148\uff0c\u6700\u540e\u628a\u503c\u8d4b\u7ed9fa[x]\uff0c\u8fd9\u53e5\u8bdd\u53eb\u8def\u5f84\u538b\u7f29\uff0c\u4f7f\u5f97\u6211\u4e0b\u4e00\u6b21\u518d\u627e\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u7956\u5148\uff0c\u5927\u5927\u538b\u7f29\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u662f\u5e76\u67e5\u96c6\u7684\u7cbe\u9ad3\u6240\u5728\u3002\n```cpp\nvoid unite (int x,int y){\n    int x1=ask(x),x2=ask(y);\n    if (x1==x2) return;\n    else fa[x1]=x2;\n```\n}//\u5408\u5e76\uff0c\u6ce8\u610f\u4e0d\u662f\u5408\u5e76\u8fd9\u4e24\u4e2a\u70b9\uff0c\u800c\u662f\u628a\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u5e76\u67e5\u96c6\u5408\u5e76\u3002\n```cpp\nint main(){\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=m;i++) scanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].z);\n    sort(a+1,a+m+1,cmp);//\u6700\u5c0f\u751f\u6210\u6811\u7684\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\uff0c\u5148\u6309\u8fb9\u6743\u6392\u5e8f\uff0c\u518d\u5229\u7528\u8d2a\u5fc3\u3002\n    //for (int i=1;i<=m;i++) printf(\"%d %d %d\\n\",a[i].x,a[i].y,a[i].z);\n    for (int i=1;i<=n;i++) fa[i]=i;\n    for (int i=1;i<=m;i++){\n        if (ask(a[i].x)!=ask(a[i].y)){\n            tot++;\n            ans=max(ans,a[i].z);//\u6ce8\u610f\u8fd9\u4e2a\u65f6\u95f4\u662f\u6240\u6709\u65f6\u95f4\u4e2d\u7684\u6700\u5927\u503c\n            unite(a[i].x,a[i].y);//\u53d6\u5b8c\u8fd9\u6761\u8fb9\u4e4b\u540e\uff0c\u5408\u5e76\u4e24\u4e2a\u7aef\u70b9\n        }\n    }\n    if (tot<n-1) printf(\"-1\");\n    else printf(\"%d\",ans);\n}\n\u514b\u9c81\u65af\u5361\u5c14\u5e94\u8be5\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u7b80\u5355\u6700\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u5e0c\u671b\u672c\u7bc7\u9898\u89e3\u80fd\u5bf9\u5927\u5bb6\u6709\u6240\u5e2e\u52a9\uff0c\u8c22\u8c22\u3002\n```",
        "postTime": 1500386901,
        "uid": 15232,
        "name": "Michael_Li",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u88f8\u7684\u5e76\u67e5\u96c6\n\n\u5148\u4ee5\u4fee\u8def\u7684\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u5c06\u6751\u5e84\u770b\u4f5c\u662f\u70b9\uff0c\u9053\u8def\u4e3a\u8fb9\n\n\u6c42\u7684\u662f\u74f6\u9888\u751f\u6210\u6811\u3002\n\n\u5229\u7528prim\u6216\u8005kruskal\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6700\u5927\u7684\u8fb9\u6743\u5c31\u662f\u7b54\u6848\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n, m, k, ans, f[1000086];\nstruct point\n{\n    int x;\n    int y;\n    int v;\n};\npoint a[1000086];\ninline long long get()\n{\n    char ch;\n    long long res = 0;\n    while (((ch = getchar()) < '0' || ch > '9') && ch != '-');\n    if (ch != '-')\n      res = ch - '0';\n    char c;\n    while ((c = getchar()) >= '0' && c <= '9')\n      res = (res << 3) + (res << 1) + c - '0';\n    return ch == '-' ? ~res + 1 : res;\n}\nvoid put(long long x)\n{\n    if (x < 0)\n      putchar('-'), x = ~x + 1;\n    if (x > 9) put(x / 10);\n      putchar(x % 10 + '0'); \n}\nint cmp(const point &a, const point &b)\n{\n    if (a.v < b.v) return 1;\n      else return 0; \n}\nint find(int x)\n{\n    if (f[x] != x) f[x] = find(f[x]);\n    return f[x];\n}\nint main()\n{\n    n = get(); m = get();\n    for (int i = 1; i <= m; ++i)\n    {\n        a[i].x = get(); a[i].y = get(); a[i].v = get(); \n        if (a[i].x > a[i].y) swap(a[i].x, a[i].y);\n    }\n    sort(a + 1, a + m + 1, cmp);\n    for (int i = 1; i <= n; ++i) f[i] = i;\n    for (int i = 1; i <= m; ++i)\n    {\n        int a1 = find(a[i].x),\n            a2 = find(a[i].y);\n        if (a1 != a2)\n        {\n            k++;\n            if (a[i].v > ans) ans = a[i].v;\n            f[a1] = a2;\n        } \n        if (k == n - 1)\n        {\n            put(ans);\n            return 0;\n        }\n    } \n    put(-1);\n    return 0;\n}\n```",
        "postTime": 1500281205,
        "uid": 30013,
        "name": "\u5c01\u4e8c\u5c11",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u88f8\u7684\u5e76\u67e5\u96c6\u3002  \u5148\u6839\u636e\u5b8c\u6210\u65f6\u95f4\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u5408\u5e76\u70b9\n\n\u6bcf\u5408\u5e76\u4e00\u4e2a\u70b9\u5c31\u76f8\u5f53\u4e8e\u591a\u4e00\u4e2a\u70b9\u88ab\u8054\u901a\uff0c\u7ed9tot-1\n\ntot\u4e3a1\u65f6\uff0c\u8bf4\u660e\u6240\u6709\u70b9\u5df2\u8fde\u63a5\uff0c\u63a8\u51fa\u5faa\u73af\u3002\n\n\u4e00\u5f00\u59cb\u6ca1\u6ce8\u610f\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\u2026\u2026\n\n\u5224\u5b9a\u6700\u540e\u5982\u679ctot\u4e0d\u662f1\uff0c\u8bf4\u660e\u6ca1\u8fde\u5b8c\uff0c\u8f93\u51fa-1\n\n\n\n>var n,m,i,tot,t,xx,yy:longint;\n\n\n\n```cpp\n    x,y,z:array[0..100000]of longint;\n    fa:array[0..1000]of longint;\nprocedure qsort(xx,yy:longint);\nvar i,j,m,t:longint;\nbegin\n    i:=xx; j:=yy; m:=z[(xx+yy)div 2];\n    repeat\n          while z[i]<m do inc(i);\n          while z[j]>m do dec(j);\n          if i<=j then begin\n              t:=z[i];z[i]:=z[j];z[j]:=t;\n              t:=x[i];x[i]:=x[j];x[j]:=t;\n              t:=y[i];y[i]:=y[j];y[j]:=t;\n              inc(i);dec(j);\n          end;\n    until i>j;\n    if i<yy then qsort(i,yy);\n    if xx<j then qsort(xx,j);\nend;\nfunction gf(x:Longint):longint;\nbegin\n    if fa[x]=x then exit(x);\n    fa[x]:=gf(fa[x]);\n    exit(fa[x]);\nend;\nbegin\n    readln(n,m);\n    for i:=1 to m do begin\n        readln(x[i],y[i],z[i]);\n    end;\n    qsort(1,m);\n    for i:=1 to n do fa[i]:=i;\n    tot:=n;\n    for i:=1 to m do begin\n        xx:=gf(x[i]); yy:=gf(y[i]);\n        if xx<>yy then begin\n            dec(tot);\n            t:=z[i];\n            fa[xx]:=yy;\n            if tot=1 then break;\n        end;\n    end;\n    if tot <>1 then writeln(-1) else\n    writeln(t);\nend.\n```",
        "postTime": 1479426841,
        "uid": 29298,
        "name": "\u968f\u60a6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u8dd1\u4e00\u8fb9PRIM,0,1\u6807\u8bb0\uff0c\u6700\u540e\u82e5\u5168\u4e3a1\u5219\u8f93\u51fa\u6700\u5c0f\u751f\u6210\u6811\u8fb9\u7684\u6700\u5927\u503c\uff0c\u5426\u5219\u8f93\u51fa-1\n\n```cpp\n###var n,m,i,j,k,x,y,t,ans:longint;\n###a:array[1..1000,1..1000] of longint;\n###flag:array[1..1000] of boolean;\n###dist:array[1..1000] of longint;\n###begin\n###read(n,m);\n###for i:=1 to m do begin read(x,y,t);  a[x,y]:=t;a[y,x]:=t; end;\n###for i:=1 to n do dist[i]:=maxlongint;\n###flag[1]:=true;\n###k:=1;\n###for i:=1 to n-1 do\n###begin\n###for j:=1 to n do\n###if (a[k,j]<>0) and (not flag[j])then  if a[k,j]<dist[j] then dist[j]:=a[k,j];\n###t:=maxlongint;\n###for j:=1 to n do\n###if (dist[j]<t)  and (not flag[j]) then begin t:=dist[j];k:=j; end;\n###flag[k]:=true;\n###if t>ans then ans:=t;\n###end;\n###for i:=1 to n do if not flag[i] then begin write('-1'); halt; end;\n###write(ans);\nend.\n```",
        "postTime": 1471397207,
        "uid": 8948,
        "name": "huangyizhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\u5e76\u67e5\u96c6\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u660e\u786e \u8981\u4f7f\u6574\u4e2a\u56fe\u8054\u901a \u90a3\u4e48\u81f3\u5c11\u81f3\u5c11\u9700\u8981\u586b\uff08n-1\uff09\u6761\u8fb9 \u90a3\u4e48\u5148sort\u6392\u5e8f\u628a\u6240\u6709\u7684\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7528\u4e00\u4e2acnt\u8bb0\u5f55 \u5f53a\uff0cb\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\u4e14\u6b64\u65f6\u6709\u4e00\u6761\u8fb9\u53ef\u4ee5\u8054\u901a\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u8054\u901a \u4e14cnt--\u66f4\u65b0ans \u6700\u540e\u5982\u679c\u5224\u65adcnt==1\u90a3\u4e48\u8f93\u51faans \u5426\u5219\u65e0\u89e3\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#define maxn 100020\nusing namespace std;\nint n,m,fa[maxn],vis[maxn],ans,cnt;\nstruct Road{\n    int a,b,time;\n    bool operator <(const Road &a)const{\n        return (time)<(a.time);\n    }\n}road[maxn];\nint find(int x){\n    if(fa[x]==x)return x;\n    return fa[x]=find(fa[x]);\n}\nvoid work(int u){\n    int x=road[u].a,y=road[u].b;\n    int dx=find(x);\n    int dy=find(y);\n    if(dx!=dy){\n        fa[dx]=dy;\n        cnt--;\n        ans=road[u].time ;\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    cnt=n;\n    for(int i=1;i<=n;i++)fa[i]=i;\n    for(int i=1;i<=m;i++){\n        int a,b,c;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        road[i].a=a;\n        road[i].b=b;\n        road[i].time=c;\n    }\n    sort(road+1,road+m+1);\n    for(int i=1;i<=m;i++){\n        work(i);\n    }\n    if(cnt==1)\n    printf(\"%d\",ans);\n    else\n    puts(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1465260750,
        "uid": 18431,
        "name": "intruder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u88f8\u9898\u3002\n\n\u9996\u5148\u6839\u636e\u65f6\u95f4\u70b9\u6392\u5e8f\u3002\n\n\u7136\u540e\u6309\u7167\u65f6\u95f4\u70b9\u8fdb\u884c\u5408\u5e76\u3002\n\n\u5bf9\u4e8e\u5224\u65ad\u662f\u5426\u8fbe\u6210\u76ee\u6807\u7684\u65b9\u6cd5\uff0c\u6211\u662f\u8bbe\u4e86\u4e00\u4e2a\u6570\u7ec4num[i]\u8bb0\u5f55\u4ee5i\u8282\u70b9\u4e3a\u6839\u7684\u96c6\u5408\u7684\u70b9\u6570\u3002\n\n\u5f53num[i]==n\u65f6\u8f93\u51fa\u3002\n\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn=1010;\nconst int maxm=100010;\nconst int INF=1e9;\n\nstruct data{\n    int x,y,t;\n    bool operator <(const data& x) const{\n        return t<x.t;\n    }\n}a[maxm];\n\nint fa[maxn],n,m,num[maxn];\n\nvoid Build(){\n    for(int i=1;i<=n;i++){\n        fa[i]=i;\n        num[i]=1;\n    }\n    \n    \n    return;\n}\n\nint Find(int x){\n    if(fa[x]==x)return x;\n    return fa[x]=Find(fa[x]);\n}\n\nvoid Merge(int x,int y){\n    int a=Find(x),b=Find(y);\n    \n    if(a==b)return;\n    \n    if(num[a]>num[b]){\n        fa[b]=a;\n        num[a]+=num[b];\n    }\n    else{\n        fa[a]=b;\n        num[b]+=num[a];\n    }\n    \n    return;\n}\n\nint main()\n{\n    //freopen(\"c.in\",\"r\",stdin);\n    //freopen(\"c.out\",\"w\",stdout);\n    \n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    scanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].t);\n    \n    sort(a+1,a+m+1);\n    \n    Build();\n    \n    for(int i=1;i<=m;i++){\n        Merge(a[i].x,a[i].y);\n        \n        int x=Find(a[i].x);\n        if(num[x]>=n){\n            printf(\"%d\\n\",a[i].t);\n            return 0;\n        }\n    }\n    \n    printf(\"-1\\n\");\n    \n    return 0;\n}\n\n```",
        "postTime": 1439352137,
        "uid": 5680,
        "name": "\u4e0a\u8fdb\u7684z\u541b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "\u770b\u8d77\u6765\u9898\u89e3\u91cc\u6ca1\u591a\u5c11\u4eba\u7528$Prim$\u7b97\u6cd5\uff0c\u6211\u6765\u6c34\u4e00\u6ce2\u3002\n\n\u4e00\u9053\u597d\u7aef\u7aef\u7684\u5e76\u67e5\u96c6\u88f8\u9898\uff0c\u6210\u4e86\u6700\u5c0f\u751f\u6210\u6811\uff1f\u5e94\u8be5\u662f\u5bf9\u5e94$Kruskal$\u7684\u5427\u3002\n\n\u65b9\u6cd5\u591a\u79cd\u591a\u6837\uff0c\u8bf8\u541b\u8bf7\u9009\u62e9\u81ea\u5df1\u6700\u9002\u5408\u7684\u3002\n\n\n------------\n\n$1)$\u7eaf\u5e76\u67e5\u96c6\uff0c\u7c7b\u4f3c\u8054\u901a\u5757\uff1f\u8bf7\u770b\u4ed6\u4eba\u9898\u89e3\u3002\n\n$2)$ $Kruskal+$\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29\uff0c\u697c\u4e0b\u9898\u89e3\u5f88\u591a\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n$3)$ \u8c8c\u4f3c\u987a\u5e8f\u904d\u5386\u53ef\u4ee5\u8fc7\uff1f~~\u4e0d\u7ba1\u4e86~~\u4e0d\u518d\u8d58\u8ff0\u3002\n\n$4)$ $Prim+$\u5806\u4f18\u5316\uff0c\u91cd\u70b9\u8bb2\u8bb2\u8fd9\u4e2a\u3002\n\n\n------------\n\n\u601d\u8def\uff1a\n\n$1)$\u8003\u8651\u5230\u662f\u4e2a\u7a20\u5bc6\u56fe\uff0c\u7406\u8bba\u4e0a$Prim$\u4f1a\u66f4\u5feb\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5404\u6761\u9053\u8def\u662f\u540c\u65f6\u65bd\u5de5\uff0c\u56e0\u6b64**\u7b54\u6848\u5e94\u8be5\u662f\u65f6\u95f4\u6700\u5927\u503c\u800c\u975e\u603b\u548c**\u3002\n\n$2)$\u4e3a\u4e86\u4fdd\u9669\uff0c\u4f18\u5316\u7b97\u6cd5\uff0c\u5728\u6bcf\u6b21\u5bfb\u627e\u6700\u5c0f\u8fb9\u7684\u65f6\u5019\uff0c\u91c7\u7528**\u5806\u4f18\u5316**\uff0c\u5c31\u4e0d\u7528$sort$\uff0c**\u7a0b\u5e8f\u603b\u65f6\u95f4\u590d\u6742\u5ea6**$O(nlogn)$\u3002\n\n$3)$ \u5bf9\u4e8e\u5224$-1$\u7684\u60c5\u51b5\uff0c\u7531\u6700\u5c0f\u751f\u6210\u6811\u7684\u6027\u8d28\u53ef\u77e5\uff0c**\u4e00\u4e2a\u8fde\u901a\u56fe\u81f3\u5c11\u6709$n-1$\u6761\u8fb9**\uff0c \u56e0\u6b64\u6bcf\u6b21\u904d\u5386\u4e00\u6761\u8fb9\u5c31\u8ba1\u6570\uff0c\u7ed3\u5c3e\u518d\u5224\u65ad\u6709\u6ca1\u6709$n-1$\u90a3\u4e48\u591a\u3002\u6ca1\u6709\u8f93\u51fa$-1$\u3002\n\n$4)$ \u5bf9\u4e8e\u5efa\u56fe\uff0c\u6570\u636e\u5c0f\uff0c\u968f\u610f\u3002\u5305\u62ec\u90bb\u63a5\u77e9\u9635\u3002\n\n------------\n\n\u5269\u4e0b\u7684\u90fd\u662f\u7ec6\u8282\uff0c\u8bf7\u770b\u7a0b\u5e8f\uff1a\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<vector>\nusing namespace std;\n\nconst int MAXN=100005;\nint n,m,ans;\nstruct node\n{\n\tint to,v;\n};\nvector <node> edge[MAXN];\nbool visit[MAXN];\nint cnt;\n\nvoid input(void)\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,t;\n\t\tcin>>x>>y>>t;\n\t\tedge[x].push_back((node){y,t});\n\t\tedge[y].push_back((node){x,t});//\u65e0\u5411\u56fe\n\t}\n}\n\nstruct cmp//\u91cd\u8f7d\u5806\u7528\u7684\n{\n\tbool operator()(const node& x,const node& y)const\n\t{\n\t\treturn x.v>y.v;\n\t}\n};\n\nvoid prim(void)\n{\n\tpriority_queue <node,vector<node>,cmp> q;//\u5806\u4f18\u5316\n\tvisit[1]=true;//\u4ee51\u4e3a\u8d77\u70b9\n\tfor(vector<node>::iterator it=edge[1].begin();it!=edge[1].end();it++)\n\t q.push(*it);\n\twhile(!q.empty())//\u6309\u7167\u6a21\u677f\u6765\u5c31\u884c\n\t{\n\t\tconst node tmp=q.top();\n\t\tq.pop();\n\t\tif(visit[tmp.to])\n\t\t continue;\n\t\tvisit[tmp.to]=true;\n\t\tans=max(ans,tmp.v);//\u6ce8\u610f\u662f\u6c42\u6700\u5927\u503c\n\t\tcnt++;//\u8ba1\u6570\u7b54\u6848\uff0c\u770b\u6709\u6ca1\u6709n-1\n\t\tfor(vector<node>::iterator it=edge[tmp.to].begin();it!=edge[tmp.to].end();it++)\n\t\t if(!visit[it->to])\n\t\t  q.push(*it);\n\t}\n}\n\nvoid output(void)\n{\n\tif(cnt<n-1)//cnt\u7528\u5904\u4f53\u73b0\u4e86\n\t{\n\t\tcout<<-1;\n\t\treturn;\n\t}\n\tcout<<ans;\n}\n\nint main()\n{\n\tinput();\n\tprim();\n\toutput();\n\treturn 0;\n}\n```",
        "postTime": 1549466152,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    },
    {
        "content": "```cpp\n\n#include <cstdio>\n#include <algorithm>\n#include <cstdlib>\n\nusing namespace std;\n\nstruct road {\n    int x,y,t;\n};\n\nbool operator<(road r1,road r2) {\n    return r1.t<r2.t;\n}\n\nstruct node {\n    int prev,n;\n};\n\nint n=0,m=0;\nnode s[1001];\nroad roads[100000];\nint maxx=1;\n\nvoid init() {\n    for (int i=1;i<=n;++i) {\n        s[i].prev=0;\n        s[i].n=1;\n    }    \n}\n\nint root(int a) {\n    if (s[a].prev==0)\n        return a;\n    else {\n        int i=0;\n        int path[1001];\n        while (s[a].prev!=0) {\n            path[i++]=a;\n            a=s[a].prev;\n        }\n        for (int j=0;j<i;++j)\n            s[path[j]].prev=a;\n        return a;\n    }\n}\n\nvoid merge(int a,int b) {\n    int ra=root(a),rb=root(b);\n    if (ra==rb)\n        return;\n    int x=s[ra].n+s[rb].n;\n    if (x>maxx)\n        maxx=x;\n    s[rb].prev=a;\n    s[ra].n=x;\n}\n\nint main(void) {\n    scanf(\"%d %d\",&n,&m);\n    for (int i=0;i<m;++i) \n        scanf(\"%d %d %d\",&roads[i].x,&roads[i].y,&roads[i].t);\n    sort(roads,roads+m);\n    init();\n    for (int i=0;i<m;++i) {\n        if (maxx==n) {\n            printf(\"%d\\n\",roads[i-1].t);\n            exit(0);\n        }\n        merge(roads[i].x,roads[i].y);\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n\n```\n\n\u9996\u5148 \u8fd9\u5f53\u7136\u662f\u4e00\u9053\u5e76\u67e5\u96c6\u9898\u76ee\u4e86\u256e(\u256f\u25bd\u2570)\u256d\n\n\u5148\u6309\u65f6\u95f4\u6392\u4e00\u904d\u5e8f\n\n\u7528\u5e76\u67e5\u96c6\u8868\u793a\u6751\u5e84\u7684\u8fde\u901a\u60c5\u51b5\n\n\u5728\u6839\u8282\u70b9\u4e0a\u5b58\u50a8\u4e00\u68f5\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u6751\u5e84\n\n\u5408\u5e76\u7684\u65f6\u5019\u8ba1\u7b97 \u8fde\u901a\u7684\u6751\u5e84\u6570\u591f\u4e0d\u591fn\n\n\u591fn\u5c31\u8f93\u51fa\u5f53\u524d\u7684\u65f6\u95f4 \u4e0d\u591f\u5c31\u7ee7\u7eed\n\n\u7136\u540e \u6211\u5f88\u83dc\u7684 \u4e0d\u8981\u55b7\u6211\u554aQAQ\n",
        "postTime": 1447917232,
        "uid": 13433,
        "name": "QwQ2000",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1111 \u3010\u4fee\u590d\u516c\u8def\u3011"
    }
]