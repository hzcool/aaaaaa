[
    {
        "content": "\u6709\u8da3\u7684\u9898\u3002\n\n\u78b0\u5230\u8fd9\u79cd\u4e8c\u5143\u5173\u7cfb\u7684\u9898\uff0c\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u8003\u8651\u4ece\u56fe\u8bba\u7684\u89d2\u5ea6\u53bb\u601d\u8003\u3002\n\n\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u628a\u9ea6\u7247\u5f53\u4f5c\u70b9\uff0c\u628a\u5976\u725b\u5f53\u4f5c\u8fb9\u3002\n\n\u6211\u4e00\u5f00\u59cb\u8003\u8651\u628a\u5976\u725b\u5f53\u4f5c\u6709\u5411\u8fb9\uff0c\u4ece\u7b2c\u4e00\u559c\u6b22\u7684\u9ea6\u7247\u6307\u5411\u7b2c\u4e8c\u559c\u6b22\u7684\u9ea6\u7247\uff0c\u4f46\u662f\u6709\u5411\u56fe\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u6027\u8d28\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u628a\u5976\u725b\u770b\u4f5c\u65e0\u5411\u8fb9\uff0c\u518d\u8003\u8651\u5b83\u662f\u5426\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u3002\n\n---\n\u8003\u8651\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u8bbe\u8fde\u901a\u5757\u5185\u80fd\u591f\u5403\u5230\u9ea6\u7247\u7684\u5976\u725b\u6570\u4e3a $cnt$\uff0c\u8fde\u901a\u5757\u70b9\u6570\u4e3a $n$\uff0c\u8fb9\u6570\u4e3a $m$\u3002\n\n\u663e\u7136 $cnt\\le \\min(n,m)$\u3002\n\n\u901a\u8fc7\u624b\u73a9\u51e0\u7ec4\u6570\u636e\uff0c\u6211\u4eec\u4e0d\u59a8\u5927\u80c6\u731c\u60f3 $cnt= \\min(n,m)$\u3002\n\n\u5177\u4f53\u5730\u8bf4\uff0c\u5982\u679c $m=n-1$\uff0c\u5373\u8fde\u901a\u5757\u662f\u4e00\u68f5\u6811\uff0c\u5219 $cnt=n-1$\uff1b\u5426\u5219 $cnt=n$\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5982\u4f55\u6784\u9020\u3002\n\n1. $m=n-1$\uff1a\n\n   \u4ece\u8fde\u901a\u5757\u5185\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb bfs/dfs\uff0c\u6309\u7167 bfs/dfs \u987a\u5e8f\u8f93\u51fa\u8fb9\u5373\u53ef\u3002\n\n   **\u6b63\u786e\u6027\u8bf4\u660e\uff1a**\n\n   \u8bbe\u4e00\u6761\u8fb9\u4e3a $(u,v)$\uff0c\u5176\u4e2d $u$ \u662f $v$ \u5728\u6811\u4e0a\u7684\u7956\u5148\u3002\n\n   \u5728\u8bbf\u95ee\u5230\u8fd9\u6761\u8fb9\u7684\u65f6\u5019\uff0c$v$ \u4e00\u5b9a\u6ca1\u6709\u88ab\u9009\u62e9\uff0c$u$ \u53ef\u80fd\u88ab\u9009\u53ef\u80fd\u4e0d\u88ab\u9009\u3002\n\n\t\u6240\u4ee5\u4e0d\u8bba\u8fd9\u6761\u8fb9\u7684\u6307\u5411\u5982\u4f55\uff0c\u5b83\u90fd\u4e00\u5b9a\u80fd\u591f\u88ab\u6ee1\u8db3\u3002\n\n\t\u6240\u4ee5\u6070\u597d\u6709 $m=n-1$ \u6761\u8fb9\u88ab\u6ee1\u8db3\uff0c\u65b9\u6848\u662f\u6b63\u786e\u7684\u3002\n\n\n\t\n\n2. $m\\ge n$\uff1a\n\n\t\u6211\u4eec\u8003\u8651\u5efa\u51fa\u8fde\u901a\u5757\u7684\u4e00\u68f5\u641c\u7d22\u6811\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u8fd8\u8981\u4f7f\u5f97\u8fde\u901a\u5757\u5185\u7684\u4e00\u6761\u540e\u5411\u8fb9\uff08\u5373\u4e0d\u5728\u641c\u7d22\u6811\u4e0a\u7684\u8fb9\uff09\u88ab\u6ee1\u8db3\u3002\n\n\t\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u5148\u8f93\u51fa\u4e00\u6761\u540e\u5411\u8fb9\uff0c\u8bbe\u8fd9\u65f6\u88ab\u9009\u62e9\u7684\u70b9\uff08\u5373\u7b2c\u4e00\u559c\u6b22\u7684\u9ea6\u7247\uff09\u4e3a $s$\u3002\n\n\t\u4ee5 $s$ \u4e3a\u6839\u5bf9\u641c\u7d22\u6811\u8fdb\u884c bfs/dfs\uff0c\u6309\u7167\u987a\u5e8f\u8f93\u51fa\u6811\u4e0a\u7684\u8fb9\u3002\n\n\t\u6700\u540e\u518d\u8f93\u51fa\u4e0d\u80fd\u88ab\u6ee1\u8db3\u7684\u8fb9\u5373\u53ef\u3002\n\n\n\t**\u6b63\u786e\u6027\u8bf4\u660e\uff1a**\n\n\t\u4f9d\u7136\u8003\u8651\u8fb9 $(u,v)$\uff0c\u5176\u4e2d $u$ \u662f $v$ \u5728\u6811\u4e0a\u7684\u7956\u5148\u3002\n\n\t\u5982\u679c $u=s$\uff0c\u663e\u7136\u53ea\u80fd\u9009\u62e9 $v$\u3002\n\n\t\u5426\u5219\u6309\u7167\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c$u$ \u4e00\u5b9a\u5df2\u7ecf\u88ab\u9009\u62e9\uff0c\u6240\u4ee5\u4e0d\u8bba $v$ \u662f\u4e0d\u662f\u7b2c\u4e00\u9009\u62e9\uff0c\u90fd\u53ea\u80fd\u9009\u62e9 $v$\u3002\n\n\t\u8fd9\u65f6\u6709\u6070\u597d $n$ \u6761\u8fb9\u88ab\u6ee1\u8db3\uff0c\u65b9\u6848\u662f\u6b63\u786e\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n+m)$\u3002\n\n\n---\n```cpp\n#include<bits/stdc++.h>\n#define N 100009\nusing namespace std;\nint n,m,ans,hd[N],tot,fi[N],c[N],nV[N],nE[N],nC,choose[N];\nbool in[N<<1],vst[N];//in\u4ee3\u8868\u5728\u4e0d\u5728\u641c\u7d22\u6811\u5185,vst\u4ee3\u8868\u6709\u6ca1\u6709\u88ab\u9009\nstruct edge{\n\tint t,nxt;\n} es[N<<1];\n//\u7f16\u53f7\u4e3ai\u7684\u8fb9\u4e3a(i*2)\u548c(i*2+1)\nvoid add(int u,int v){es[++tot]=(edge){v,hd[u]},hd[u]=tot;}\nvoid dfs(int u){\n\t++nV[c[u]];\n\tfor(int i=hd[u];i;i=es[i].nxt){\n\t\t++nE[c[u]];\n\t\tint v=es[i].t;\n\t\tif(c[v])continue;\n\t\tin[i]=in[i^1]=1;\n\t\tc[v]=c[u];\n\t\tdfs(v);\n\t}\n}\nvoid print(int u,int in_edge){\n\tfor(int i=hd[u];i;i=es[i].nxt)if(in[i]&&i!=(in_edge^1)){\n\t\tprintf(\"%d\\n\",i>>1);vst[i>>1]=1;\n\t\tprint(es[i].t,i);\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\ttot=1;\n\tfor(int i=1;i<=n;++i){\n\t\tint u,v;scanf(\"%d%d\",&u,&v);fi[i]=u;\n\t\tadd(u,v),add(v,u);\n\t}\n\tfor(int i=1;i<=m;++i)\n\t\tif(!c[i]){\n\t\t\tc[i]=++nC;\n\t\t\tdfs(i);\n\t\t}\n\tfor(int i=1;i<=n;++i)if(!in[i<<1]){//\u7b2c\u4e8c\u79cd\u60c5\u51b5(\u9009\u62e9\u4e00\u6761\u540e\u5411\u8fb9)\n\t\tint id=c[es[i<<1].t];choose[id]=i;\n\t}\n\tfor(int i=1;i<=m;++i)if(nE[c[i]]==nV[c[i]]*2-2)\n\t\tchoose[c[i]]=i;//\u7b2c\u4e00\u79cd\u60c5\u51b5\uff08dfs\u8d77\u59cb\u70b9\uff09\n\tans=m;\n\tfor(int i=1;i<=nC;++i)\n\t\tif(nE[i]==nV[i]*2-2)--ans;\n\tcout<<n-ans<<endl;\n\tfor(int i=1;i<=nC;++i){\n\t\tif(nE[i]==nV[i]*2-2){\n\t\t\tprint(choose[i],0);\n\t\t}else{\n\t\t\tprintf(\"%d\\n\",choose[i]);vst[choose[i]]=1;\n\t\t\tprint(fi[choose[i]],0);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(!vst[i])printf(\"%d\\n\",i);\n\treturn 0;\n}\n```",
        "postTime": 1643978626,
        "uid": 362346,
        "name": "TianyiLemon",
        "ccfLevel": 0,
        "title": "P8095 Cereal 2 S \u9898\u89e3"
    },
    {
        "content": "update\uff1a2022/4/17 \u66f4\u6b63\u4e86\u535a\u5ba2\u5730\u5740\n\n\u524d\u8a00\uff1a\u9898\u89e3\u53ef\u80fd\u6bd4\u8f83\u5570\u55e6\uff0c\u56e0\u4e3a\u8fd9\u9898\u6bd4\u8d5b\u7684\u65f6\u5019\u6ca1\u505a\u51fa\u6765\uff0c\u6240\u4ee5\u5199\u9898\u89e3\u4e3b\u8981\u7528\u4e8e\u6574\u7406\u81ea\u5df1\u7684\u601d\u8def\u3002\u5982\u679c\u4f60\u6709\u601d\u8def\u53ea\u662f\u4ee3\u7801\u6253\u6302\u4e86\u7b80\u6613\u76f4\u63a5\u8df3\u5230\u4ee3\u7801\u90e8\u5206\u3002\n\nupdate@2022/3/13: \u611f\u8c22[@\u5c0f\u6728\u866b](https://www.luogu.com.cn/user/213173)\u7684\u63d0\u9192\uff0c**\u5f53\u524d\u7684\u89e3\u6cd5\u4e0d\u662f\u6b63\u89e3\uff01** \u5982\u679cUSACO\u7684\u6570\u636e\u591f\u5f3a\u7684\u8bdd\uff0c\u76ee\u524d\u6211\u4f7f\u7528\u7684\u5308\u7259\u5229\u7b97\u6cd5\u56e0\u4e3a\u590d\u6742\u5ea6\u662f $O(nm)$\uff0c\u662f\u8fc7\u4e0d\u4e86\u8fd9\u9053\u9898\u7684\u3002\u5982\u679c\u60f3\u7528\u6211\u8fd9\u4e2a\u4e8c\u5206\u56fe\u5339\u914d + \u62d3\u6251\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528dinic\u7b97\u6cd5\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff08\u4e0d\u8fc7\u5199\u8d77\u6765\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff09\u3002\u672c\u4eba\u6709\u65f6\u95f4\u7684\u65f6\u5019\u4e5f\u4f1a\u5c1d\u8bd5\u7528dinic\u5b9e\u73b0\u8fd9\u4e2a\u89e3\u6cd5\u5e76\u4e14\u66f4\u65b0\u9898\u89e3\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P8095)\n\n[\u535a\u5ba2\u4e2d\u89c2\u770b\u4f53\u9a8c\u66f4\u4f73](https://ttzytt.com/2022/02/P8095/)\n\n# 1\uff1a\u9898\u610f\n\u6709 $N$ \u5934\u725b\uff0c$M$ \u79cd\u9ea6\u7247\uff08\u6bcf\u79cd\u4e00\u7bb1\uff09\uff0c\u6bcf\u5934\u90fd\u6709\u7b2c\u4e00\u548c\u7b2c\u4e8c\u559c\u6b22\u7684\u9ea6\u7247\u79cd\u7c7b\uff08\u4e0b\u6587\u7b80\u79f0\u4e3a\u4e00\u9009\u548c\u4e8c\u9009\uff09\uff0c\u725b\u4f1a\u4f18\u5148\u9009\u62e9\u81ea\u5df1\u6700\u559c\u6b22\u7684\u9ea6\u7247\uff0c\u5f53\u6700\u559c\u6b22\u7684\u9ea6\u7247\u88ab\u5360\u7528\u540e\u4f1a\u9009\u62e9\u7b2c\u4e8c\u559c\u6b22\u7684\u9ea6\u7247\uff0c\u95ee\uff1a\n1. \u6700\u5c11\u4f1a\u6709\u591a\u5c11\u725b\u5f97\u4e0d\u5230\u9ea6\u7247\u3002\n2. \u80fd\u8fbe\u5230\u6b64\u6700\u5c0f\u503c\u7684\u725b\u7684\u6392\u5217\n# 2\uff1a\u5206\u6790\n## 2.1 \u7b2c\u4e00\u5c0f\u95ee\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5c0f\u95ee\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4f7f\u7528\u5308\u7259\u5229\u7b97\u6cd5\u89e3\u51b3\uff08\u7136\u800c\u8fd9\u6b21\u6bd4\u8d5b\u7684\u65f6\u5019\u6211\u5e76\u6ca1\u6709\u60f3\u5230\uff09\u3002\u4e0d\u719f\u6089\u5308\u7259\u5229\u7b97\u6cd5\u548c\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\u7684\u540c\u5b66\u53ef\u4ee5\u53c2\u8003[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P3386)\u91cc\u7684\u9898\u89e3\u3002\u8fd9\u7bc7\u9898\u89e3\u5c06\u4e3b\u8981\u5173\u6ce8\u7b2c\u4e8c\u5c0f\u95ee\u7684\u6c42\u89e3\u3002\n## 2.2 \u7b2c\u4e8c\u5c0f\u95ee\n\u5bf9\u4e8e\u7b2c\u4e8c\u5c0f\u95ee\uff0c\u6211\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u5148\u8f93\u51fa\u6210\u529f\u5339\u914d\u5230\u4e00\u9009\u7684\u725b\uff0c\u5176\u6b21\u662f\u6210\u529f\u5339\u914d\u5230\u4e8c\u9009\u7684\u725b\uff0c\u6700\u540e\u8f93\u51fa\u6ca1\u6709\u6210\u529f\u5339\u914d\u7684\u725b\u3002\u7ed3\u679c[\u4ea4\u4e0a\u53bb](https://www.luogu.com.cn/record/68553854)\u53ea\u8fc7\u4e86\u6837\u4f8b\u3002\u7ecf\u8fc7[@lutongyu](https://www.luogu.com.cn/user/37935)\u5927\u4f6c\u7684\u6307\u5bfc\uff0c\u6211\u7ec8\u4e8e\u7406\u89e3\u4e86\u8fd9\u4e2a\u505a\u6cd5\u7684\u95ee\u9898\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u6210\u529f\u5339\u914d\u5230\u4e00\u9009\u7684\u5976\u725b\uff0c\u53ef\u4ee5\u5148\u8f93\u51fa\uff0c\u6700\u540e\u8f93\u51fa\u6ca1\u6709\u6210\u529f\u5339\u914d\u7684\u5976\u725b\u4e5f\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u771f\u6b63\u7684\u95ee\u9898\u5728\u4e8e\u4e8c\u9009\u5976\u725b\u7684\u987a\u5e8f\u3002\u8003\u8651\u4e0b\u9762\u8fd9\u6837\u7684\u4e00\u4e2a\u6570\u636e\uff08\u5982\u4e0b\u56fe\uff09: \n\n```\n1 (cow) -> [1 (fir), 2 (sec)]\n2 (cow) -> [1 (fir), 3 (sec)] \n3 (cow) -> [3 (fir), 4 (sec)] \n```\n![](https://cdn.luogu.com.cn/upload/image_hosting/63og5ij1.png)\n\n\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u8fd9\u4e2a\u6570\u636e\n\n\u6211\u4eec\u9996\u5148\u5c1d\u8bd5\u8fd9\u4e2a\u6570\u636e\u4e0b\u7684\u6700\u4f18\u6392\u5217 `1 2 3`\n\n1. $\\text{Cow}_1$ \u4f1a\u5148\u9009\u62e9\u5b83\u7684\u4e00\u9009\uff0c\u4e5f\u5c31\u662f\u9ea6\u7247 1\n2. \u56e0\u4e3a $\\text{Cow}_2$ \u7684\u4e00\u9009\u88ab $\\text{Cow}_1$ \u5360\u7528\u4e86\uff0c\u6240\u4ee5\u5b83\u4f1a\u9009\u62e9\u5b83\u7684\u4e8c\u9009\uff0c\u4e5f\u5c31\u662f\u9ea6\u7247 3\n3. $\\text{Cow}_3$ \u7684\u4e00\u9009\u88ab $\\text{Cow}_2$ \u5360\u7528\u4e86\uff0c\u6240\u4ee5\u5b83\u4f1a\u9009\u62e9\u4ed6\u7684\u4e8c\u9009\uff0c\u4e5f\u5c31\u662f\u9ea6\u7247 4\n\n\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e00\u5934\u5976\u725b\u90fd\u80fd\u5403\u5230\u9ea6\u7247\n\n\u7136\u540e\u6211\u4eec\u8c03\u6362\u4e00\u4e0b $\\text{Cow}_2$ \u548c $\\text{Cow}_3$ \u7684\u987a\u5e8f\uff0c\u5f97\u5230`1 3 2` \u7684\u987a\u5e8f\uff0c\u4ee5\u53ca\u4e0b\u9762\u7684\u6a21\u62df\u8fc7\u7a0b\n\n1. $\\text{Cow}_1$ \u4f1a\u9009\u62e9\u5b83\u7684\u4e00\u9009\uff0c\u4e5f\u5c31\u662f\u9ea6\u7247 1\n2. $\\text{Cow}_3$ \u4f1a\u9009\u62e9\u5b83\u7684\u4e00\u9009\uff0c\u4e5f\u5c31\u662f\u9ea6\u7247 3\n3. $\\text{Cow}_2$ \u7684\u4e00\u9009\u548c\u4e8c\u9009\u90fd\u88ab\u5360\u7528\u4e86\uff08\u9ea6\u7247 1 3\uff09\uff0c\u5b83\u4e0d\u80fd\u5403\u5230\u9ea6\u7247\n\n\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c$\\text{Cow}_2$ \u5e76\u4e0d\u80fd\u5403\u5230\u4efb\u4f55\u9ea6\u7247\n\n\u901a\u8fc7\u8fd9\u4e2a\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u76f4\u63a5\u8f93\u51fa\u5339\u914d\u5230\u4e8c\u9009\u7684\u725b\u662f\u4e0d\u884c\u7684\uff0c\u8fd8\u9700\u8981\u5728\u8f93\u51fa\u5339\u914d\u5230\u4e8c\u9009\u7684\u725b\u65f6\u505a\u4e00\u4e9b\u5904\u7406\uff0c\u4fdd\u8bc1\u8fd9\u4e2a\u6392\u5217\u80fd\u8fbe\u5230\u6700\u5927\u5339\u914d\u6570\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684\u7b97\u6cd5\u6765\u89e3\u51b3\u4e8c\u9009\u5976\u725b\u7684\u51b2\u7a81\u95ee\u9898\u3002\n\n\u6211\u4eec\u9996\u5148\u6765\u8003\u8651\u5f53\u4e00\u5934\u5976\u725b\u6210\u529f\u5339\u914d\u5230\u81ea\u5df1\u7684\u4e00\u9009\uff0c\u5e76\u4e14\u5b83\u7684\u4e00\u9009\u540c\u65f6\u4e5f\u662f\u522b\u7684\u5976\u725b\u7684\u4e00\u9009\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u62ff\u4e0a\u56fe\u4e2d\u7684 $\\text{Cow}_1$ \u4e3e\u4f8b\u5b50\uff0c\u5b83\u4f1a\u5f71\u54cd\u5230 $\\text{Cow}_2$ \u7684\u9009\u62e9\uff08$\\text{Cow}_1$ \u5360\u7528\u4e86 $\\text{Cow}_2$ \u7684\u4e00\u9009\uff0c\u8feb\u4f7f\u5176\u9009\u62e9\u4e8c\u9009\uff09\uff0c\u800c $\\text{Cow}_2$ \u53c8\u4f1a\u5f71\u54cd\u5230 $\\text{Cow}_3$ \u7684\u9009\u62e9\uff08$\\text{Cow}_2$ \u5360\u7528\u4e86 $\\text{Cow}_3$ \u7684\u4e00\u9009\uff0c\u8feb\u4f7f\u5176\u9009\u62e9\u4e8c\u9009\uff09\u3002\u901a\u8fc7\u89c2\u5bdf\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u53ea\u8981\u6309\u7167\u8fd9\u6837\u4e00\u4e2a \u201c\u5f71\u54cd\u94fe\u201d \u6765\u8f93\u51fa\u5976\u725b\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u8fbe\u5230\u6700\u5927\u5339\u914d\u3002\n\n# 3\uff1a\u7b97\u6cd5\u8fc7\u7a0b\n\n\u8fd9\u4e00\u6761\u94fe\u7684\u5f00\u59cb\u4e00\u5b9a\u662f\u6210\u529f\u5339\u914d\u5230\u4e00\u9009\uff0c\u5e76\u4e14\u8feb\u4f7f\u522b\u7684\u5976\u725b\u9009\u62e9\u4e8c\u9009\u7684\u5976\u725b\uff08\u8fd9\u4e2a\u5976\u725b\u7684\u4e00\u9009\u4e5f\u662f\u522b\u7684\u5976\u725b\u7684\u4e00\u9009\uff09\u3002\u6211\u4eec\u628a\u8fd9\u6837\u7684\u5976\u725b\u5168\u90e8\u5165\u961f\u3002\u6211\u4eec\u518d\u6765\u8003\u8651\u88ab\u5f71\u54cd\u7684\u5976\u725b\uff0c\u4e3a\u4e86\u627e\u51fa \u201c\u5f71\u54cd\u94fe\u201d \u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e9b\u88ab\u5f71\u54cd\u5230\u7684\u5976\u725b\u4e5f\u5165\u961f\uff08\u56e0\u4e3a\u8fd9\u4e9b\u5976\u725b\u53ea\u80fd\u9009\u62e9\u4e8c\u9009\uff0c\u800c\u4ed6\u4eec\u7684\u4e8c\u9009\u53ef\u80fd\u4f1a\u5360\u7528\u522b\u7684\u5976\u725b\u7684\u4e00\u9009\uff0c\u5c31\u50cf\u4e0a\u56fe\u4e2d\u7684 $\\text{Cow}_2$\uff09\u3002\n\n\u4e3a\u4e86\u627e\u51fa\u6709\u54ea\u4e9b\u725b\u662f\u53ef\u80fd\u88ab\u5f71\u54cd\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a `inv_e[i]` \u7684\u52a8\u6001\u6570\u7ec4\uff08\u94fe\u5f0f\u524d\u5411\u661f\uff09\uff0c\u8868\u793a\u6240\u6709\u628a i \u53f7\u9ea6\u7247\u4f5c\u4e3a\u4e00\u9009\u7684\u725b\uff08\u53ea\u6709\u4e00\u9009\u5148\u88ab\u522b\u7684\u725b\u9009\u4e86\u624d\u4f1a\u88ab\u5f71\u54cd\uff09\u3002\n\n\u6bd4\u5982\u5728\u4e0a\u56fe\u4e2d `inv_e[1] = [` $\\text{Cow}_1$ `,` $\\text{Cow}_2$ `]`\n\n\u6211\u4eec\u77e5\u9053\u5728\u5b9e\u73b0\u5308\u7259\u5229\u7b97\u6cd5\u7684\u65f6\u5019\u4f1a\u7528\u5230 `matched[i]` \u6570\u7ec4\u3002\u5b83\u7684\u4e0b\u6807\u8868\u793a\u53f3\u90e8\u8282\u70b9\uff0c\u503c\u8868\u793a\u5339\u914d\u5230\u8fd9\u4e2a\u53f3\u90e8\u8282\u70b9\u7684\u5de6\u90e8\u8282\u70b9\u3002\u5728\u8fd9\u9898\u4e2d\uff0c`matched[i]` \u7684\u4e0b\u6807\u5c31\u662f\u9ea6\u7247\u7684\u7f16\u53f7\uff0c\u800c\u503c\u662f\u5339\u914d\u5230\u8fd9\u4e2a\u9ea6\u7247\u7684\u725b\u3002\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a `inv_match[i]` \u6570\u7ec4\uff0c\u5b83\u7684\u4e0b\u6807\u662f\u725b\uff0c\u800c\u503c\u662f\u9ea6\u7247\u3002\u901a\u8fc7 `inv_match` \u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6bcf\u5934\u725b\u6700\u7ec8\u5339\u914d\u5230\u7684\u9ea6\u7247\u662f\u54ea\u4e2a\uff08\u4e00\u9009\u4e8c\u9009\u6216\u8005\u5339\u914d\u5931\u8d25\uff09\u3002\n\n\u7528\u4e0a\u56fe\u4e3e\u4f8b\u5b50\uff0c `inv_match[` $\\text{Cow}_2$ `]` \u5c31\u7b49\u4e8e\u9ea6\u7247 3 \uff08\u6700\u7ec8\u5339\u914d\u5230\u7684\u662f\u9ea6\u7247 3\uff09\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u627e\u5230\u6240\u6709\u88ab\u4e00\u9009\u5976\u725b\u6240\u5f71\u54cd\u7684\u5976\u725b\n\n```cpp\nfor(int i = 1; i <= n; i++){              //i\u904d\u5386\u7684\u662f\u6210\u529f\u5339\u914d\u5230\u4e00\u9009\u7684\u5976\u725b\n    if(invmatched[i] != e[i][0]) continue;//e[i][0]\u8868\u793ai\u7684\u4e00\u9009\n                                          //invmatched[i] \u662fi\u6700\u7ec8\u5339\u914d\u5230\u7684\u9ea6\u7247\n                                          //\u6240\u4ee5\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u5982\u679c\u4e0d\u662f\u4e00\u9009\u5c31\u76f4\u63a5continue\n    printf(\"%d\\n\",i);//\u5982\u679c\u662f\u4e00\u9009\u76f4\u63a5\u8f93\u51fa\n\n    for(int cur:inve[e[i][0]]){         //\u904d\u5386\u5f53\u524d\u6210\u529f\u5339\u914d\u4e00\u9009\u7684\u725b \u53ef\u80fd\u5f71\u54cd\u7684\u725b\n                                        //e[i][0]\u8868\u793a\u7684\u662fi\u7684\u4e00\u9009\uff0c\u800ci\u4e00\u5b9a\u662f\u6210\u529f\u5339\u914d\u4e00\u9009\u7684\u725b\n                                        //inve[e[i][0]]\u662f\u6240\u6709\u4e00\u9009\u548ci\u7684\u4e00\u9009\u76f8\u540c\u7684\u5976\u725b\uff0c\u8fd9\u4e9b\u5976\u725b\u53ef\u80fd\u88abi\u5f71\u54cd\n        if(invmatched[cur] == e[cur][1])//\u524d\u6587\u63d0\u5230\u4e86invmatched[cur] \u8868\u793a\u7684\u662fcur\u6700\u7ec8\u5339\u914d\u5230\u7684\u9ea6\u7247\n                                        //\u800ce[cur][1] \u8868\u793a\u7684\u662f cur \u7684\u4e8c\u9009\n        {                               //\u6240\u4ee5\u8fd9\u53e5\u8bdd\u786e\u4fdd\u4e86cur\u6700\u7ec8\u9009\u5230\u7684\u662f\u4e8c\u9009\uff08\u8bf4\u660e\u8fd9\u5934\u725b\u88ab\u5f71\u54cd\u5230\u4e86\uff0c\u6ca1\u6709\u9009\u4e00\u9009\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u9632\u6b62\u628ai\u81ea\u5df1\u5165\u961f\uff09\n            q.push(cur);\n        }\n    }\n}\n\n```\n\n\u63a5\u4e0b\u6765\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u8fdb\u5165\u961f\u5217\u7684\u5976\u725b\uff0c\u4ed6\u4eec\u7684\u4e8c\u9009\u53ef\u80fd\u4f1a\u5360\u7528\u522b\u7684\u5976\u725b\u7684\u4e00\u9009\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u76f8\u4f3c\u7684\u65b9\u6cd5\u627e\u51fa\u8fd9\u4e2a \u201c\u5f71\u54cd\u94fe\u201d\n\n```cpp\nwhile(!q.empty()){\n    int cur = q.front();\n    printf(\"%d\\n\",cur);//\u961f\u5217\u662f\u5148\u8fdb\u5148\u51fa\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u8f93\u51fa\u5728\u5f71\u54cd\u94fe\u4e0a\u65b9\u7684\u725b\uff08\u66f4\u65e9\u88ab\u5f71\u54cd\u5230\u7684\u725b\uff09\n    q.pop();\n    for(int nex:inve[e[cur][1]]){         //e[cur][1]\u662f\u7f16\u53f7\u4e3acur\u7684\u725b\u7684\u4e8c\u9009\n                                          //inve[e[cur][1]] \u5c31\u662f\u6240\u6709\u628a cur \u7684\u4e8c\u9009\u5f53\u4f5c\u4e00\u9009\u7684\u725b\uff0c\u4e5f\u5c31\u662f\u53ef\u80fd\u88ab cur \u5f71\u54cd\u5230\u7684\u725b\n        if(invmatched[nex] == e[nex][1]) {//\u6700\u7ec8\u9009\u5230\u7684\u662f\u4e8c\u9009\uff08\u8bf4\u660e\u8fd9\u5934\u725b\u88ab\u5f71\u54cd\u5230\u4e86\uff09\n            q.push(nex);\n        }\n    }\n}\n```\n\n# 4\uff1a\u4ee3\u7801\u5b9e\u73b0\u4ee5\u53ca\u7ec6\u8282\n\u6700\u540e\u7ed9\u51fa\u8be6\u7ec6\u4ee3\u7801\uff08\u6709\u6ce8\u91ca\u89e3\u91ca\u7ec6\u8282\uff09\n```cpp\n/*Date: 22 - 02-03 22 19\nPROBLEM_NUM: P8095 [USACO22JAN] Cereal 2 S*/\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 10;\nint n, m;\nvector<int> e[MAXN], inve[MAXN];\nqueue<int> q;\nint vised[MAXN], matched[MAXN];\nint invmatched[MAXN];\n\nbool found(int cur){//\u5308\u7259\u5229\u7b97\u6cd5\n    for(int nex:e[cur]){\n        if(vised[nex]) continue;\n        vised[nex] = true;\n        if(!matched[nex] || found(matched[nex])){\n            matched[nex] = cur;\n            invmatched[cur] = nex;\n            vised[nex] = false;\n            return true;\n        }\n    }\n    return false;\n}\n\nint main(){\n    int match_cnt = 0;\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1; i<=n; i++){\n        int f,s;\n        scanf(\"%d%d\",&f,&s);\n        e[i].push_back(f);   //e[i][0]\u662fi\u7684\u4e00\u9009\n        e[i].push_back(s);   //e[i][1]\u662fi\u7684\u4e8c\u9009\n        inve[f].push_back(i);//inve[f] \u8868\u793a\u6240\u6709\u628a f \u53f7\u9ea6\u7247\u4f5c\u4e3a\u4e00\u9009\u7684\u725b\n    }\n    for(int i = 1;i <= n; i++){//\u5308\u7259\u5229\u7b97\u6cd5\u90e8\u5206\n        if(found(i)){\n            match_cnt++;\n        }\n    }\n\n    printf(\"%d\\n\", n - match_cnt);//\u9965\u997f\u7684\u5976\u725b = \u6240\u6709\u5976\u725b - \u5403\u5230\u9ea6\u7247\u7684\u5976\u725b\n\n    for(int i = 1; i <= n; i++){          //i\u904d\u5386\u7684\u662f\u6210\u529f\u5339\u914d\u5230\u4e00\u9009\u7684\u5976\u725b\n    if(invmatched[i] != e[i][0]) continue;//\u5982\u679c\u4e0d\u662f\u4e00\u9009\u5c31\u76f4\u63a5continue\n    printf(\"%d\\n\",i);                     //\u5982\u679c\u662f\u4e00\u9009\u76f4\u63a5\u8f93\u51fa\n\n    for(int cur:inve[e[i][0]]){         //\u904d\u5386\u5f53\u524d\u6210\u529f\u5339\u914d\u4e00\u9009\u7684\u725b \u53ef\u80fd\u5f71\u54cd\u7684\u725b\n                                        //e[i][0]\u8868\u793a\u7684\u662fi\u7684\u4e00\u9009\uff0c\u800ci\u4e00\u5b9a\u662f\u6210\u529f\u5339\u914d\u4e00\u9009\u7684\u725b\n                                        //inve[e[i][0]]\u662f\u6240\u6709\u4e00\u9009\u548ci\u7684\u4e00\u9009\u76f8\u540c\u7684\u5976\u725b\uff0c\u8fd9\u4e9b\u5976\u725b\u53ef\u80fd\u88abi\u5f71\u54cd\n        if(invmatched[cur] == e[cur][1])//\u524d\u6587\u63d0\u5230\u4e86invmatched[cur] \u8868\u793a\u7684\u662fcur\u6700\u7ec8\u5339\u914d\u5230\u7684\u9ea6\u7247\n                                        //\u800ce[cur][1] \u8868\u793a\u7684\u662f cur \u7684\u4e8c\u9009\n            {                           //\u6240\u4ee5\u8fd9\u53e5\u8bdd\u786e\u4fdd\u4e86cur\u6700\u7ec8\u9009\u5230\u7684\u662f\u4e8c\u9009\uff08\u8bf4\u660e\u8fd9\u5934\u725b\u88ab\u5f71\u54cd\u5230\u4e86\uff0c\u6ca1\u6709\u9009\u4e00\u9009\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u9632\u6b62\u628ai\u81ea\u5df1\u5165\u961f\uff09\n                q.push(cur);\n            }\n        }\n    }\n    \n    while(!q.empty()){\n        int cur = q.front();\n        printf(\"%d\\n\",cur);//\u961f\u5217\u662f\u5148\u8fdb\u5148\u51fa\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u8f93\u51fa\u5728\u5f71\u54cd\u94fe\u4e0a\u65b9\u7684\u725b\uff08\u66f4\u65e9\u88ab\u5f71\u54cd\u5230\u7684\u725b\uff09\n        q.pop();\n        for(int nex:inve[e[cur][1]]){         //e[cur][1]\u662f\u7f16\u53f7\u4e3acur\u7684\u725b\u7684\u4e8c\u9009\n                                              //inve[e[cur][1]] \u5c31\u662f\u6240\u6709\u628a cur \u7684\u4e8c\u9009\u5f53\u4f5c\u4e00\u9009\u7684\u725b\uff0c\u4e5f\u5c31\u662f\u53ef\u80fd\u88ab cur \u5f71\u54cd\u5230\u7684\u725b\n            if(invmatched[nex] == e[nex][1]) {//\u6700\u7ec8\u9009\u5230\u7684\u662f\u4e8c\u9009\uff08\u8bf4\u660e\u8fd9\u5934\u725b\u88ab\u5f71\u54cd\u5230\u4e86\uff09\n                q.push(nex);\n            }\n        }\n    }\n\n    for(int i = 1; i<=n; i++){//\u6700\u540e\u8f93\u51fa\u6ca1\u6709\u6210\u529f\u5339\u914d\u5230\u7684\u5976\u725b\n        if(!invmatched[i]){   //invmatched[i] == 0 \u8bf4\u660e\u5976\u725b i \u6ca1\u6709\u5339\u914d\u5230\u4efb\u4f55\u9ea6\u7247\n            printf(\"%d\\n\",i);\n        }\n    }\n\n    system(\"pause\");\n}\n```\n\n\u6700\u540e\uff0c\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u5e2e\u5230\u4f60\uff0c\u5982\u679c\u8fd8\u6ca1\u770b\u61c2\u6216\u8005\u662f\u53d1\u73b0\u4e86\u9898\u89e3\u6709\u95ee\u9898\u90fd\u53ef\u4ee5\u79c1\u4fe1\u6211\u6216\u8005\u5728\u8bc4\u8bba\u533a\u6307\u51fa\uff0c\u6211\u4f1a\u5c3d\u91cf\u56de\u7b54\u6216\u662f\u89e3\u51b3\u95ee\u9898\u3002",
        "postTime": 1644121915,
        "uid": 394488,
        "name": "tzyt",
        "ccfLevel": 0,
        "title": "P8095 [USACO22JAN] Cereal 2 S\u9898\u89e3"
    },
    {
        "content": "# P8095 \u9898\u89e3\n\n**\u9898\u610f**\uff1a\n\n\u6709 $n$ \u5934\u725b\u548c $m$ \u79cd\u9ea6\u7247\uff0c\u6bcf\u79cd\u9ea6\u7247\u53ea\u6709\u4e00\u7bb1\uff0c\u6bcf\u5934\u725b\u5206\u522b\u6709\u5176\u6700\u559c\u6b22\u7684\u548c\u7b2c\u4e8c\u559c\u6b22\u7684\u4e24\u79cd\u4e0d\u540c\u7684\u9ea6\u7247\u3002\n\n\u9700\u8981\u7ed9\u6240\u6709\u725b\u5236\u5b9a\u4e00\u4e2a\u53d6\u9ea6\u7247\u7684\u5148\u540e\u987a\u5e8f\uff0c\u4f7f\u5f97\u6ca1\u6709\u62ff\u9ea6\u7247\u7684\u725b\u7684\u6570\u91cf\u6700\u5c11\u3002\n\n\u4e00\u5934\u725b\u53d6\u9ea6\u7247\u7684\u65b9\u5f0f\u662f\uff1a\u5982\u679c\u5176\u6700\u559c\u6b22\u7684\u9ea6\u7247\u8fd8\u5728\uff0c\u5c31\u76f4\u63a5\u62ff\u4e00\u7bb1\u5176\u6700\u559c\u6b22\u7684\uff0c\n\n\u5426\u5219\uff0c\u5982\u679c\u5176\u7b2c\u4e8c\u559c\u6b22\u7684\u8fd8\u5728\uff0c\u5c31\u62ff\u4e00\u7bb1\u5176\u7b2c\u4e8c\u559c\u6b22\u7684\uff0c\u5426\u5219\u5c31\u4e00\u7bb1\u4e5f\u4e0d\u62ff\u3002\n\n\u8f93\u51fa\u8fd9\u4e2a\u987a\u5e8f\u5bf9\u5e94\u7684\u6392\u5217\u548c\u6ca1\u6709\u62ff\u5230\u9ea6\u7247\u7684\u725b\u6570\u7684\u6700\u5c0f\u503c\u3002\n\n> $n,m\\le10^5$\u3002\n\n**\u505a\u6cd5**\uff1a\n\n\u8bbe\u6ca1\u6709\u62ff\u9ea6\u7247\u7684\u725b\u7684\u6570\u91cf\u7684\u6700\u5c0f\u503c\u4e3a $val$\u3002\n\n\u5219\u6211\u4eec\u5c06\u6bcf\u5934\u725b\u548c\u5176\u559c\u6b22\u7684\u9ea6\u7247\u8fde\u8fb9\uff0c\u8bbe\u8fd9\u5f20\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u4e3a $mch$\uff0c\n\n\u5219\u6211\u4eec\u4e00\u5b9a\u6709 $mch\\ge n-val$\uff0c\n\n\u539f\u56e0\u662f\uff0c\u6240\u6709\u725b\u6240\u62e5\u6709\u9ea6\u7247\u7684\u79cd\u7c7b\u7684 $n$ \u5143\u7ec4\uff0c\u4e0e\u56fe\u4e2d\u6240\u6709\u7b26\u5408\u7684\u4e8c\u5206\u56fe\u5339\u914d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\n\n\u5f53\u7136\uff0c\u4e5f\u8bb8\u6709\u53ef\u80fd\u51fa\u73b0 $mch>n-val$\uff0c\n\n\u51fa\u73b0\u8fd9\u4ef6\u4e8b\u7684\u6761\u4ef6\u662f\uff0c\u6700\u5927\u5339\u914d\u5bf9\u5e94\u7684\u90a3\u4e2a\u9ea6\u7247\u79cd\u7c7b $n$ \u5143\u7ec4\uff0c\u65e0\u6cd5\u901a\u8fc7\u9898\u610f\u4e2d\u7684\u53d6\u6cd5\u6784\u9020\u51fa\u6765\u3002\n\n\u90a3\u8fd9\u65f6\u6211\u4eec\u731c\u6d4b\uff0c\u4efb\u4f55\u4e00\u79cd\u725b\u7fa4\u62ff\u9ea6\u7247\u7684\u65b9\u5f0f\u90fd\u53ef\u4ee5\u88ab\u6784\u9020\u51fa\u6765\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u8bc1\u660e\u7684\u662f\uff0c\u5bf9\u4efb\u4f55\u4e00\u79cd\u5339\u914d $X$\uff0c\u90fd\u80fd\u6784\u9020\u51fa\u4e00\u4e2a\u6392\u5217\uff0c\u4f7f\u5f97\uff1a\n\n\u725b\u7fa4\u6309\u7167\u8fd9\u4e2a\u6392\u5217\u7684\u987a\u5e8f\u53d6\u9ea6\u7247\uff0c\u6700\u540e\u6240\u6709\u725b\u6240\u62e5\u6709\u9ea6\u7247\u79cd\u7c7b\u7684 $n$ \u5143\u7ec4\u5c31\u5bf9\u5e94\u4e86\u5339\u914d $X$\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u731c\u6d4b\u6210\u7acb\uff0c\u90a3\u4e48\u6700\u540e\u7b54\u6848\u5c31\u662f\u6700\u5927\u5339\u914d\uff0c\u90a3\u6211\u4eec\u8003\u8651\u80fd\u5426\u8bc1\u660e\u8fd9\u4e2a\u731c\u6d4b\u3002\n\n\u56e0\u4e3a\u6700\u540e\u8981\u6c42\u8f93\u51fa\u6392\u5217\uff0c\u6545\u8003\u8651\u7ed9\u51fa\u6784\u9020\u6027\u8bc1\u660e\u3002\n\n\u8003\u8651\u6784\u9020\u7684\u56f0\u96be\u4e4b\u5904\uff0c\u5728\u4e8e\u5339\u914d\u4e0e\u9898\u610f\u4e2d\u5403\u8349\u987a\u5e8f\u7684\u4e0d\u5339\u914d\uff0c\n\n\u5373\u67d0\u5934\u725b\u5728\u5339\u914d\u4e2d\u5e94\u8be5\u62ff\u8d70\u5176\u7b2c\u4e8c\u559c\u6b22\u7684\u9ea6\u7247\uff0c\u7136\u800c\u5b9e\u9645\u4e0a\uff0c\n\n\u5b83\u53ef\u80fd\u56e0\u4e3a\u5176\u6700\u559c\u6b22\u7684\u9ea6\u7247\u8fd8\u5728\uff0c\u4ece\u800c\u76f4\u63a5\u62ff\u8d70\u5176\u6700\u559c\u6b22\u7684\u9ea6\u7247\uff0c\n\n\u751a\u81f3\uff0c\u5176\u6700\u559c\u6b22\u7684\u9ea6\u7247\u6709\u53ef\u80fd\u662f\u53e6\u5916\u4e00\u5934\u725b\u5728\u6700\u7ec8\u5339\u914d\u65b9\u6848\u4e2d\u6240\u62e5\u6709\u7684\u9ea6\u7247\uff0c\n\n\u6211\u4eec\u8981\u505a\u7684\u4e8b\uff0c\u662f\u5c3d\u91cf\u5730\u6d88\u9664\u8fd9\u4e9b\u9519\u4f4d\u5e26\u6765\u7684\u5f71\u54cd\u3002\n\n\u6211\u4eec\u8bb0\u6700\u7ec8\u5339\u914d\u65b9\u6848\u4e2d\uff0c\u7b2c $i$ \u5934\u725b\u62ff\u4e86\u7b2c $t_i$ \u79cd\u9ea6\u7247\uff0c\u5176\u6700\u559c\u6b22\u7b2c $f_i$ \u79cd\u9ea6\u7247\uff0c\u7b2c\u4e8c\u559c\u6b22\u7b2c $s_i$ \u79cd\u9ea6\u7247\uff0c\n\n\u5f53\u7136\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u4e0d\u9700\u8981\u8003\u8651\u6ca1\u62ff\u9ea6\u7247\u7684\u725b\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u6392\u5217\u7684\u6700\u540e\u8ba9\u8fd9\u4e9b\u725b\u5c1d\u8bd5\u53d6\u4e00\u6b21\u9ea6\u7247\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u5373\u6240\u6709 $t_i$ \u4e92\u4e0d\u76f8\u540c\u3002\n\n\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u5f53\u524d\u6392\u5217\uff0c\u4ee3\u8868\u6240\u6709\u5df2\u7ecf\u5c1d\u8bd5\u53d6\u8fc7\u9ea6\u7247\u7684\u725b\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u628a\u6240\u6709\u7f16\u53f7 $i$ \u6ee1\u8db3 $f_i=t_i$ \u7684\u725b\u52a0\u5165\u6392\u5217\u672b\u5c3e\uff0c\u8fd9\u6837\u663e\u7136\u4e00\u5b9a\u8db3\u591f\u4f18\uff0c\n\n\u800c\u5269\u4e0b\u8fd8\u9700\u8981\u8003\u8651\u7684\u725b\u7684\u7f16\u53f7 $i$\uff0c\u90fd\u6ee1\u8db3 $s_i=t_i$\uff0c\u8bbe\u96c6\u5408 $S$ \u5305\u542b\u4e86\u6240\u6709\u7f16\u53f7\u6ee1\u8db3 $s_i=t_i$ \u7684\u725b\u3002\n\n\u90a3\u4e48\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u505a\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u76f4\u5230 $S$ \u53d8\u6210\u7a7a\u96c6\u3002\n\n\u5728\u6bcf\u6b21\u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ece $S$ \u4e2d\u968f\u4fbf\u53d6\u51fa\u4e00\u5934\u725b\u5e76\u5f00\u59cb\u68c0\u67e5\uff0c\u8bbe\u6700\u521d\u53d6\u51fa\u7684\u725b\u7f16\u53f7\u4e3a $u$\uff0c\u5219\uff1a\n\n\u5982\u679c\u6b64\u65f6\u7b2c $f_u$ \u79cd\u9ea6\u7247\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\uff0c\u5c31\u76f4\u63a5\u7ec8\u6b62\u68c0\u67e5\uff1b\n\n\u5426\u5219\uff0c\u5982\u679c $S$ \u4e2d\u4e0d\u5b58\u5728\u725b $v$ \u6ee1\u8db3 $s_v=f_u$\uff0c\u6211\u4eec\u4e5f\u76f4\u63a5\u7ec8\u6b62\u68c0\u67e5\uff1b\n\n\u5426\u5219\uff0c\u6b64\u65f6 $S$ \u4e2d\u4e00\u5b9a\u5b58\u5728\u725b $v$ \u6ee1\u8db3 $s_v=f_u$\uff0c\u6211\u4eec\u5c06 $(u,v)$ \u8fde\u8fb9\uff0c\u518d\u5bf9 $v$ \u8fdb\u884c\u4e0a\u9762\u7684\u68c0\u67e5\u3002\n\n\u6ce8\u610f\uff0c\u6b64\u5904\u7684\u8fde\u8fb9\u4e0e\u4e0a\u9762\u725b\u4e0e\u9ea6\u7247\u8fde\u7684\u8fb9\u65e0\u5173\uff0c\u53ea\u662f\u7528\u6765\u65b9\u4fbf\u53d9\u8ff0\u7684\uff0c\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4e2d\u8fde\u7684\u8fb9\u662f\u5728\u4e00\u5f20\u72ec\u7acb\u7684\u65b0\u56fe\u4e0a\u7684\uff0c\u8ddf\u5176\u4ed6\u6b21\u64cd\u4f5c\u4ee5\u53ca\u6700\u521d\u7684\u56fe\u65e0\u5173\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5728\u8fd9\u6b21\u64cd\u4f5c\u4e2d\u68c0\u67e5\u8fc7\u7684\u6240\u6709\u725b\uff0c\u4e00\u5b9a\u4f1a\u5f62\u6210\u5f62\u5982\u4e00\u4e2a\u73af\u63a5\u4e0a\u4e00\u6761\u94fe\u7684\u6837\u5f0f\uff0c\n\n\u5f53\u7136\uff0c\u73af\u957f\u548c\u94fe\u957f\u53ef\u4ee5\u662f $0$\uff0c\u5373\u53ef\u4ee5\u662f\u7eaf\u7684\u4e00\u4e2a\u73af\u6216\u4e00\u6761\u94fe\u3002\n\n\u8003\u8651\u6b64\u65f6\uff0c\u6211\u4eec\u5c06\u6240\u6709\u725b\u6309\u68c0\u67e5\u725b\u987a\u5e8f\u7684\u5012\u5e8f\u52a0\u5165\u6392\u5217\u672b\u5c3e\uff0c\u5e76\u4ece $S$ \u4e2d\u5220\u53bb\u8fd9\u4e9b\u725b\uff0c\u662f\u8db3\u591f\u4f18\u7684\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\uff0c\u5982\u679c\u8ba9\u725b\u4eec\u6309\u4e0a\u9762\u8fd9\u79cd\u6784\u9020\u65b9\u5f0f\u91cc\u7684\u987a\u5e8f\u6765\u5c1d\u8bd5\u53d6\u9ea6\u7247\u7684\u8bdd\uff0c\n\n\u6240\u6709\u73af\u4e0a\u7684\u725b\u90fd\u4f1a\u62ff\u8d70\u5b83\u4eec\u6700\u559c\u6b22\u7684\u9ea6\u7247\uff0c\u800c\u6240\u6709\u94fe\u4e0a\u7684\u725b\u90fd\u4f1a\u62ff\u8d70\u5b83\u4eec\u7b2c\u4e8c\u559c\u6b22\u7684\u9ea6\u7247\u3002\n\n\u5177\u4f53\u8bc1\u660e\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c\u76f8\u4fe1\u8fd9\u4e2a\u4e5f\u4e0d\u96be\uff0c\u753b\u4e2a\u56fe\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u5c31\u80fd\u7406\u89e3\u3002\n\n\u5f53\u7136\uff0c\u5728\u6392\u5217\u7684\u6700\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u52a0\u5165\u6240\u6709\u5728\u5339\u914d\u4e2d\u6ca1\u6709\u62ff\u5230\u9ea6\u7247\u7684\u725b\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5bf9\u4efb\u610f\u4e00\u4e2a\u6ca1\u6709\u7279\u6b8a\u6027\u8d28\u7684\u5339\u914d $X$\uff0c\u7ed9\u51fa\u4e86\u4e00\u79cd\u6392\u5217\u987a\u5e8f\uff0c\u6ee1\u8db3\uff1a\n\n\u6240\u6709\u725b\u6309\u8fd9\u4e2a\u987a\u5e8f\u53bb\u9ea6\u7247\uff0c\u6700\u540e\u6bcf\u5934\u725b\u6240\u62e5\u6709\u7684\u9ea6\u7247\u5c31\u548c $X$ \u5bf9\u5e94\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5bf9\u521d\u59cb\u56fe\u7684\u6700\u5927\u5339\u914d\u6784\u9020\u51fa\u8fd9\u6837\u7684\u4e00\u4e2a\u6392\u5217\u987a\u5e8f\u5373\u53ef\u3002\n\n\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u662f\u5982\u4f55\u6c42\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u56e0\u4e3a\u672c\u9898\u6570\u636e\u8f83\u5927\uff0c\u6545\u53ef\u4ee5\u4f7f\u7528\u7f51\u7edc\u6d41\uff0c\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((n+m)\\sqrt{n+m})$\uff0c\u74f6\u9888\u5728 ```dinic``` \u7b97\u6cd5\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n\u56e0\u4e3a\u6784\u9020\u6392\u5217\u7684\u5177\u4f53\u5b9e\u73b0\u53ef\u80fd\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\uff0c\u6545\u7ed9\u51fa\u4ee3\u7801\u4ee5\u4fbf\u53c2\u8003\uff0c\u5f53\u7136\u6700\u597d\u8fd8\u662f\u81ea\u5df1\u5199\u3002\n\n**code**\uff1a\n\n```\n#include <bits/stdc++.h>\n\n#define fi first\n#define se second\n#define vi vector\n#define mp make_pair\n#define pb push_back\n#define LL long long\n#define pii pair < int , int >\n#define SZ(x) ((int)(x.size()))\n#define ckmax(a, b) ((a) = max((a), (b)))\n#define ckmin(a, b) ((a) = min((a), (b)))\n#define rep(i, a, b) for (int i = (a); i <= (b); i++)\n#define per(i, a, b) for (int i = (a); i >= (b); i--)\n#define edg(i, v, u) for (int i = head[u], v = e[i].to; i; i = e[i].nxt, v = e[i].to)\n\nusing namespace std;\ninline int read() {\n\t// \u5feb\u8bfb\n}\nconst int N (3e5 + 10);\nconst int INF (2e9 + 10);\nstruct Edge {\n\tint fr, to, cp, fl;\n};\n\nstruct Dinic {\n\tint n, m;\n\tint s, t;\n\tint d[N];\n\tint cur[N];\n\tint vis[N];\n\tvector < Edge > E;\n\tvector < int > G[N];\n\t\n\tvoid init (int n) {\n\t\tE.clear();\n\t\trep (i, 0, n - 1) G[i].clear();\n\t}\n\tvoid adde (int u, int v, int c) {\n\t\tE.pb ((Edge) {u, v, c, 0});\n\t\tE.pb ((Edge) {v, u, 0, 0});\n\t\tint sz = E.size();\n\t\tG[u].pb (sz - 2), G[v].pb (sz - 1);\n\t}\n\tbool bfs() {\n\t\tqueue < int > q;\n\t\tmemset (vis, 0, sizeof (vis));\n\t\tq.push (s), d[s] = 0, vis[s] = 1;\n\t\twhile (!q.empty()) {\n\t\t\tint u = q.front(); q.pop();\n\t\t\trep (i, 0, SZ (G[u]) - 1) {\n\t\t\t\tEdge& e = E[G[u][i]];\n\t\t\t\tif (!vis[e.to] && e.cp > e.fl) \n\t\t\t\t  d[e.to] = d[u] + (vis[e.to] = 1), q.push (e.to);\n\t\t\t}\n\t\t}\n\t\treturn vis[t];\n\t}\n\tint dfs (int u, int flw) {\n\t\tif (u == t || !flw) return flw;\n\t\tint flow = 0;\n\t\tfor (int& i = cur[u]; i < SZ (G[u]); i++) {\n\t\t\tEdge& e = E[G[u][i]]; int f = 0;\n\t\t\tif (d[e.to] == d[u] + 1 && (f = dfs (e.to, min (flw, e.cp - e.fl))) > 0) {\n\t\t\t\te.fl += f, E[G[u][i] ^ 1].fl -= f, flow += f, flw -= f;\n\t\t\t\tif (flw == 0) break;\n\t\t\t}\n\t\t}\n\t\tif (flow == 0) d[u] = 0;\n\t\treturn flow;\n\t}\n\tint mxflow (int s, int t) {\n\t\tthis -> s = s, this -> t = t;\n\t\tint flow = 0;\n\t\twhile (bfs()) {\n\t\t\tmemset (cur, 0, sizeof (cur));\n\t\t\tflow += dfs (s, INF);\n\t\t}\n\t\treturn flow;\n\t}\n} Dinic;\n\nint tot;\nint num;\nint n, m;\nint s, t;\nint a[N];\nint b[N];\nint rb[N];\nint res[N];\nint buk[N];\nint ned[N];\n\nint main() {\n\tn = read(), m = read();\n\tmemset (rb, -1, sizeof rb);\n\trep (i, 1, n) a[i] = read() + n, b[i] = read() + n;\n\ts = n + m + 1, t = s + 1;\n\trep (i, 1, n) {\n\t\tDinic.adde (s, i, 1);\n\t\tDinic.adde (i, a[i], 1);\n\t\tDinic.adde (i, b[i], 1);\n\t}\n\trep (i, 1, m) Dinic.adde (i + n, t, 1);\n\tint val = n - Dinic.mxflow (s, t);\n\tprintf (\"%d\\n\", val);\n\trep (u, 1, n) for (int id : Dinic.G[u]) {\n\t\tEdge e = Dinic.E[id];\n\t\tif (e.fl != 1 || e.cp == 0) continue;\n\t\tif (e.to == a[u]) {\n\t\t\tres[++tot] = u, buk[a[u]] = 1, ned[u] = 1; break;\n\t\t}\n\t\trb[b[u]] = u, ned[u] = 2;\n\t}\n\trep (i, 1, n) {\n\t\tif (ned[i] != 2) continue;\n\t\tint u = i;\n\t\tstack < int > stk;\n\t\twhile (true) {\n\t\t\tif (ned[u] == 1) break;\n\t\t\tstk.push (u);\n\t\t\tif (buk[a[u]] || rb[a[u]] == -1 || rb[a[u]] == i) break;\n\t\t\tned[u] = 1, u = rb[a[u]];\n\t\t}\n\t\twhile (!stk.empty()) {\n\t\t\tu = stk.top();\n\t\t\tned[u] = 1;\n\t\t\tif (!buk[a[u]]) buk[a[u]] = 1;\n\t\t\telse buk[b[u]] = 1;\n\t\t\tres[++tot] = u, stk.pop();\n\t\t}\n\t}\n\trep (i, 1, n) if (ned[i] != 1) res[++tot] = i;\n\trep (i, 1, tot) printf (\"%d\\n\", res[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1644241419,
        "uid": 100091,
        "name": "GaryH",
        "ccfLevel": 6,
        "title": "P8095 \u9898\u89e3"
    },
    {
        "content": "> [P8095 [USACO22JAN] Cereal 2 S](https://www.luogu.com.cn/problem/P8095)\u3002\n\n\u8da3\u9898\uff01\u9898\u76ee\u7684\u9650\u5236\u5f88\u96be\u4e0d\u8ba9\u4eba\u5f80\u4e8c\u5206\u56fe\u5339\u914d\u65b9\u5411\u4e0a\u60f3\uff0c\u7136\u540e\u5c31\u5bc4\u4e86\uff0c\u56e0\u4e3a\u5728\u9009 $s_i$ \u7684\u540c\u65f6\u5fc5\u987b\u4fdd\u8bc1 $f_i$ \u5728\u6b64\u4e4b\u524d\u88ab\u522b\u4eba\u9009\u4e86\uff0c\u8f83\u96be\u5904\u7406\uff08\u4e0d\u8fc7\u53ef\u80fd\u4e5f\u6709\u529e\u6cd5\uff09\u3002\n\n\u8003\u8651\u5728 $s_i$ \u548c $t_i$ \u4e4b\u95f4\u8fde\u8fb9\u3002\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e2a\u8fde\u901a\u5757\u72ec\u7acb\uff0c\u56e0\u6b64\u5355\u72ec\u6c42\u89e3\u4e00\u4e2a\u8fde\u901a\u5757 $G = (V, E)$\uff1a\u5f53 $|E| \\geq |V|$ \u65f6\uff0c\u8fde\u901a\u5757\u5b58\u5728\u73af\u3002\u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\u6700\u591a\u80fd\u6ee1\u8db3 $|V|$ \u5934\u5976\u725b\uff0c\u56e0\u4e3a\u53ea\u6709 $|V|$ \u7bb1\u9ea6\u7247\u3002\u7ed9\u51fa\u4e00\u4e2a\u80fd\u591f\u5230\u8fbe\u8be5\u4e0a\u754c\u7684\u6784\u9020\uff1a\n\n- \u5bf9\u4e8e\u4e00\u68f5\u6811 $T$\uff0c\u5982\u679c\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 $r$ \u88ab\u9009\u4e86\uff0c\u90a3\u4e48\u4ece\u6839\u5f00\u59cb dfs \u5e76\u628a\u7ecf\u8fc7\u7684\u8fb9\u6309\u987a\u5e8f\u52a0\u5165\u7b54\u6848\uff0c\u5c31\u662f\u4e00\u7ec4\u5408\u6cd5\u89e3\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u52a0\u5165\u8fb9 $e = (fa_i, i)$ \u65f6\uff0c$fa_i$ \u4e00\u5b9a\u5df2\u7ecf\u88ab\u9009\u4e86\uff08\u5426\u5219\u6211\u4eec\u4e5f\u4e0d\u53ef\u80fd dfs \u5230 $fa_i$\uff09\uff0c\u56e0\u6b64 $e$ \u8fd9\u6761\u8fb9\u5bf9\u5e94\u7684\u5976\u725b\u53ea\u80fd\u9009\u9ea6\u7247 $i$\uff0c\u5bfc\u81f4\u4ece $i$ \u7ee7\u7eed\u5f80\u4e0b dfs \u5230\u5b83\u7684\u513f\u5b50 $v\\in \\mathrm{son}(i)$ \u65f6\uff0c$e' = (i, v)$ \u5bf9\u5e94\u7684\u5976\u725b\u53ea\u80fd\u9009\u9ea6\u7247 $v$\u3002\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u53ef\u4ee5\u8bc1\u660e\u65b9\u6848\u5408\u6cd5\u3002\uff08\u6216\u8005\u8bf4\u52a0\u5165\u6bcf\u4e00\u6761\u8fb9 $(fa_i, i)$ \u7684\u65f6\u5019\uff0c\u5b50\u8282\u70b9 $i$ \u663e\u7136\u6ca1\u6709\u88ab\u9009\uff09\n- \u56e0\u6b64\uff0c\u627e\u5230 $G$ \u7684\u4efb\u4f55\u4e00\u68f5\u751f\u6210\u6811 $T$\uff0c\u518d\u627e\u5230\u4efb\u610f **\u975e\u6811\u8fb9** $e\\notin T$\uff0c\u9996\u5148\u4ee4 $e$ \u5bf9\u5e94\u7684\u5976\u725b\u9009\uff0c\u90a3\u4e48 $f_e$ \u88ab\u9009\u4e2d\u3002\u518d\u4ece $f_e$ \u5f00\u59cb\u5bf9 $T$ \u8fdb\u884c dfs\uff0c\u5e76\u8fdb\u884c\u4e0a\u8ff0\u6784\u9020\uff0c\u5373\u53ef\u5f97\u5230\u4e00\u4e2a\u6ee1\u8db3 $|V|$ \u5934\u5976\u725b\u7684\u8fbe\u5230\u4e0a\u754c\u7684\u65b9\u6848\u3002\n\n\u5f53 $|E| < |V|$ \u65f6\uff0c$|E| = |V| - 1$\uff0c\u8bf4\u660e\u6574\u4e2a\u8fde\u901a\u5757\u662f\u4e00\u68f5\u6811\u3002\u6b64\u65f6\u4ece\u4efb\u610f\u8282\u70b9\u5f00\u59cb dfs\uff08\u5373\u5c06\u4efb\u610f\u8282\u70b9\u4f5c\u4e3a\u6839\uff09\uff0c\u628a\u904d\u5386\u5230\u7684\u8fb9\u4f9d\u6b21\u52a0\u5165\u7b54\u6848\u3002\u540c\u6837\u7684\uff0c\u56e0\u4e3a\u52a0\u5165\u6bcf\u4e00\u6761\u8fb9\u65f6\u5b50\u8282\u70b9\u5fc5\u7136\u6ca1\u6709\u88ab\u9009\uff0c\u6545\u6784\u9020\u5408\u6cd5\uff0c\u4e14\u62ff\u5230\u9ea6\u7247\u7684\u5976\u725b\u6570\u91cf\u8fbe\u5230\u4e0a\u754c $|V| - 1$\u3002\n\n\u6700\u540e\uff0c\u82e5\u4e00\u6761\u8fb9\u6ca1\u6709\u88ab\u9009\uff0c\u8bf4\u660e\u8fd9\u5934\u5976\u725b\u62ff\u4e0d\u5230\u9ea6\u7247\u3002\u5269\u4e0b\u6765\u6ca1\u6709\u88ab\u9009\u7684\u8fb9\u5747\u62ff\u4e0d\u5230\u9ea6\u7247\uff0c\u6240\u4ee5\u5728\u8f93\u51fa\u5b8c\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u5976\u725b\u540e\uff0c\u76f4\u63a5\u8f93\u51fa\u5269\u4e0b\u6765\u7684\u8fb9\u5373\u53ef\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u5728 $\\mathcal{O}(n + m)$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u4e86\u8be5\u95ee\u9898\u3002\u672c\u9898\u7684\u6838\u5fc3\u601d\u8def\u5728\u4e8e\uff0c\u8003\u8651\u6bcf\u5934\u5976\u725b\u9009\u4e86\u54ea\u7bb1\u9ea6\u7247\u8f83\u56f0\u96be\uff0c\u7531\u4e8e\u4e00\u7bb1\u88ab\u9009\u7684\u9ea6\u7247\u548c\u4e00\u5934\u9009\u4e86\u9ea6\u7247\u7684\u5976\u725b **\u4e00\u4e00\u5bf9\u5e94**\uff0c\u56e0\u6b64\u8f6c\u5316\u4e3a\u6bcf\u7bb1\u9ea6\u7247\u88ab\u54ea\u5934\u5976\u725b\u9009\u4e2d\uff0c\u5373\u53ef\u8f7b\u677e\u6c42\u89e3\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pii pair <int, int>\n#define fi first\n#define se second\nconst int N = 1e5 + 5;\nint n, m, ans, vis[N], buc[N];\nint tot, f[N], s[N];\nvector <pii> e[N];\nvector <int> tr, cp, p;\nvoid find(int id) {\n\tvis[id] = 1, tot += e[id].size(), cp.push_back(id);\n\tfor(auto it : e[id]) {\n\t\tif(vis[it.fi]) continue;\n\t\ttr.push_back(it.se), find(it.fi);\n\t}\n}\nvoid dfs(int id, int fa) {\n\tfor(auto it : e[id]) {\n\t\tif(!buc[it.se] || it.fi == fa) continue;\n\t\tp.push_back(it.se), dfs(it.fi, id);\n\t}\n}\nint main() {\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++) {\n\t\tscanf(\"%d %d\", &f[i], &s[i]);\n\t\te[f[i]].push_back({s[i], i}), e[s[i]].push_back({f[i], i});\n\t} for(int i = 1; i <= m; i++) if(!vis[i] && e[i].size()) {\n\t\ttot = 0, cp.clear(), tr.clear(), find(i);\n\t\tfor(int it : tr) buc[it] = 1;\n\t\tif(tot < cp.size() << 1) ans += tot >> 1, dfs(i, 0);\n\t\telse {\n\t\t\tint out = -1; ans += cp.size();\n\t\t\tfor(int id : cp) {\n\t\t\t\tfor(auto it : e[id]) if(!buc[it.se]) {out = it.se; break;}\n\t\t\t\tif(~out) break;\n\t\t\t} p.push_back(out), dfs(f[out], 0);\n\t\t} for(int it : tr) buc[it] = 0;\n\t} cout << n - ans << endl;\n\tfor(int it : p) cout << it << \"\\n\", buc[it] = 1;\n\tfor(int i = 1; i <= n; i++) if(!buc[i]) cout << i << \"\\n\";\n\treturn 0;\n}\n```",
        "postTime": 1644066792,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P8095 [USACO22JAN] Cereal 2 S"
    },
    {
        "content": "### Preface\n\n\u6211\u548c\u8bb8\u591a\u540c\u5b66\u8d5b\u540e\u4e00\u76f4\u8ba8\u8bba\u8fd9\u9053\u9898\uff0c\u6709\u7684\u8bf4\u7f51\u7edc\u6d41\uff0c\u6709\u7684\u8bf4\u62d3\u6251\uff0c~~\u6709\u7684\u8bf4\u4e0d\u53ef\u505a~~\uff0c\u800c\u6211\u7528\u4e86\u5e94\u8be5\u662f\u6700\u7b80\u5355\u7684\u601d\u8def\uff0c\u6240\u4ee5\u6709\u5e95\u6c14\u6765\u53d1\u9898\u89e3~~\u4e3b\u8981\u662f\u6211\u6bd4\u8f83\u95f2~~\u3002\n\n\u8fd9\u7bc7\u9898\u89e3\u5199\u5728\u5b98\u65b9\u9898\u89e3\u51fa\u6765\u4e4b\u524d\uff0c\u6240\u4ee5\u5982\u679c\u5b98\u65b9\u7528\u4e86\u975e\u5e38\u5de7\u5999\u7684\u7b97\u6cd5\uff0c~~\u90a3\u4e48\u8bf7\u5404\u4f4d\u62bd\u70df~~\u90a3\u4e48\u7b97\u6211\u8f93\u3002\n\n### Analysis\n\n\u5efa\u56fe\uff1a$m$ \u4e2a\u70b9\u4ee3\u8868\u9ea6\u7247\uff0c$n$ \u6761\u6709\u5411\u8fb9\uff08\u4ee3\u7801\u5b9e\u73b0\u65f6\u8bb0\u5f97\u5b58\u53cd\u5411\u8fb9\uff09\uff0c$x\\to y$ \u8868\u793a\u6709\u4e00\u4e2a\u5976\u725b\u7684\u7b2c\u4e00\u9009\u62e9\u662f $y$\uff0c\u7b2c\u4e8c\u9009\u62e9\u662f $x$\uff08\u4e0d\u8981\u641e\u53cd\u4e86\uff09\u3002\n\n**\u8bf7\u6c38\u8fdc\u8bb0\u4f4f\uff1a\u8fb9\u662f\u5976\u725b\uff0c\u70b9\u662f\u9ea6\u7247\uff0c$n$ \u662f\u8fb9\u6570\uff0c$m$ \u662f\u70b9\u6570\u3002**\n\n\u5f53\u7136\uff0c\u7531\u4e8e\u8fb9\u8981\u5b58\u8f83\u591a\u7684\u4fe1\u606f\uff08\u5976\u725b\u7684\u7f16\u53f7\uff0c\u6b63\u53cd\u65b9\u5411\u7b49\uff09\uff0c\u8bf7\u4f7f\u7528\u524d\u5411\u661f\u3002\uff08\u6211\u4e4b\u524d\u5199\u7684\u662f vector\uff0c$176$ \u884c\u7684\u4ee3\u7801\u91cd\u5199 qwq\uff09\n\n\u7b97\u6cd5\u5f00\u59cb\u3002\n\n\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff08\u4e0d\u662f\u5f3a\u8fde\u901a\u5206\u91cf\uff09\u5206\u522b\u8003\u8651\u3002\u73b0\u5728\u8003\u5bdf\u8fde\u901a\u5757 $A$\u3002\u8ba1\u7b97\u70b9\u6570\u548c\u8fb9\u6570 $V,E$\u3002\n\n#### \u60c5\u51b5\uff08\u4e00\uff09$E=V-1$\n\n\u5fc5\u7136\u662f\u68f5\u6811\uff08\u5ffd\u7565\u5b9a\u5411\uff09\u3002$A$ \u4e2d\u7edd\u5bf9\u6ca1\u6709\u6328\u997f\u7684\u5976\u725b\u3002\n\n\u6784\u9020\uff08\u5373\u8bc1\u660e\uff09\uff1a\n\n\u7531\u4e8e $A$ \u662f\u4e00\u4e2a DAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\uff0c\u5fc5\u7136\u6709\u65e0\u5165\u5ea6\u7684\u70b9\uff0cDFS \u9009\u53d6\u5976\u725b\u5373\u53ef\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/95st68ie.png)\n\n#### \u60c5\u51b5\uff08\u4e8c\uff09$E\\ge V$\n\n\u5fc5\u7136\u6709\u4e00\u4e2a\u57fa\u73af\u6811\uff08\u73af\u53ef\u80fd\u662f\u91cd\u8fb9\uff09\u7684\u5b50\u56fe\uff08\u5ffd\u7565\u5b9a\u5411\uff09\u3002$A$ \u4e2d\u6328\u997f\u7684\u5976\u725b\u6570 $=E-V$\uff08\u5373\u4e0d\u5728\u57fa\u73af\u6811\u5185\u7684\u8fb9\u6570\uff09\u3002\n\n\u8bc1\u660e\uff1a\n\n\u7531\u4e8e\u9ea6\u7247\u4e00\u5171\u5c31 $V$ \u5305\uff0c\u6240\u4ee5\u6328\u997f\u7684\u5976\u725b\u6570 $\\ge E-V$\u3002\n\n\u63a5\u4e0b\u6765 \u57fa\u73af\u6811\u5b50\u56fe\u4e0a\u6bcf\u6761\u8fb9\u90fd\u6709\u5bf9\u5e94\u70b9 \u7684\u6784\u9020 \u5373\u8bc1\u660e\u4e86\u6328\u997f\u7684\u5976\u725b\u6570 $\\le E-V$\uff0c\u5373\u539f\u547d\u9898\u5f97\u8bc1\u3002\n\n\u6784\u9020\uff1a\n\n\u4efb\u53d6\u4e00\u57fa\u73af\u6811\u5b50\u56fe $B$\u3002\u8bbe\u57fa\u73af\u4e3a $C$\uff0c\u957f\u5ea6\u4e3a $len$\u3002\u9009\u53d6\u4efb\u610f\u57fa\u73af\u4e0a\u4e00\u6761\u8fb9\uff0c\u5728\u57fa\u73af\u4e0a\u6cbf\u7740\u8fd9\u6761\u8fb9\u7684\u65b9\u5411\u4f9d\u6b21\u6ee1\u8db3\u5976\u725b\u3002\u8fd9\u6837\u57fa\u73af\u4e0a\u7684\u8fb9\u90fd\u6709\u5bf9\u5e94\u70b9\u4e86\uff0c\u4e14\u90fd\u662f\u57fa\u73af\u4e0a\u7684\u70b9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lh6wa9pa.png)\n\n\u7136\u540e\u6211\u4eec\u5c06\u6bcf\u4e2a\u57fa\u73af\u4e0a\u7684\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5206\u522b DFS\uff0c\u7c7b\u4f3c\u60c5\u51b5\uff08\u4e00\uff09\u6c42\u89e3\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/db06xngx.png)\n\n\u7b97\u6cd5\u7ed3\u675f\u3002\n\n\u603b\u65f6\u95f4 $O(n+m)$\uff0c\u800c\u5e38\u6570\u8f83\u5927\u3002\n\n### Code\n\n[\u4e0d\u5e26\u6ce8\u91ca 2.27KB \u4ee3\u7801\u63d0\u4ea4](https://www.luogu.com.cn/record/68578612)\n\n\u6ce8\u91ca\u7248\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define IOS ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define fir first\n#define sec second\n#define mkp make_pair\n#define pb emplace_back\n#define For(i,j,k) for(int i=j;i<=k;i++)\n#define Fe(x,y) for(int x=h[y];x;x=e[x].nxt) //for:edge \u8ddf\u94c1\u6ca1\u5173\u7cfb qwq \n#define N 100100\nstruct edge{\n\tint to,nxt,id;\n\tbool fw;//is it forward?\n}e[2*N];//\u6b63\u53cd\u90fd\u8981 \nint n,m,tot=1,h[N],sum,f[N];//tot:\u4ece 1 \u5f00\u59cb\uff0c\u65b9\u4fbf\u627e\u53cd\u5411\u8fb9 h:\u524d\u5411\u661f\u7684\u5934 sum:\u8be5\u8054\u901a\u5757\u7684\u8fb9\u6570 f[i]:\u641c\u7d22\u6811\u4e2d i \u7684\u7236\u4eb2 \nbool vis[N],out[N],ban[N],ins[N];//vis[i]:i \u6240\u5728\u8fde\u901a\u5757\u662f\u5426\u88ab\u7b97\u8fc7 out[i]:\u8fb9\uff08\u5976\u725b\uff09\u662f\u5426\u88ab\u8f93\u51fa\u4e86 ban[i]:\u70b9 i DFS \u662f\u5426\u88ab\u8fbe\u54a9\u4e86 ins[i]:\u662f\u5426\u5728\u641c\u7d22\u6811\u4e2d\u7684\u7956\u5148\u96c6\u5408 \nvector<int> v,con,cy;//v:\u5f85\u8f93\u51fa\u7684\u65b9\u6848 con:\u5f53\u524d\u8fde\u901a\u5757 cy:\u57fa\u73af\u4e0a\u4f9d\u6b21\u7684\u70b9\npair<int,int> key;//\u73af\u7684\u4e24\u7aef\uff08\u73af\u4e0a\u76f8\u90bb\uff09 \ninline void print(int x){v.pb(x);out[x]=1;}\ninline void adde(int x,int y,int id,bool z){e[++tot]={y,h[x],id,z};h[x]=tot;}//\u52a0\u8fb9 \nvoid see(int rt){//\u67e5\u770b\u6574\u4e2a\u8fde\u901a\u5757 \n\tvis[rt]=1;con.pb(rt);\n\tFe(i,rt){\n\t\tsum++;\n\t\tif(!vis[e[i].to]) see(e[i].to);\n\t}\n}\nvoid tree(int rt,int fa){//DFS tree \n\tFe(i,rt){\n\t\tint to=e[i].to;\n\t\tif(to==fa) continue;\n\t\tprint(e[i].id);\n\t\ttree(to,rt);\n\t}\n}\nvoid solve1(int x){//\u6811\uff08\u8fb9\u6709\u5411\uff09 \n\tint root=-1;bool flag;\n\tfor(int i:con){//\u627e\u65e0\u5165\u5ea6\u7684\u70b9 \n\t\tflag=1;\n\t\tFe(j,i)if(!e[j].fw){flag=0;break;}\n\t\tif(flag){root=i;break;}\n\t}\n\ttree(root,0);\n}\nbool dfs(int x,int fr,int fa){//\u627e\u5230\u4e00\u4e2a\u73af\uff08\u53ef\u80fd\u662f\u91cd\u8fb9\uff0c\u4f46\u4e0d\u80fd\u662f\u6b63\u5411\u8fb9\u548c\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9\uff09 \n\tins[x]=1;f[x]=fa;\n\tFe(i,x){\n\t\tif((i^fr)==1) continue;//fa\u6765\u7684\u53cd\u5411\u8fb9\uff0c\u8fbe\u54a9 \n\t\tif(ins[e[i].to]){\n\t\t\tkey=mkp(x,e[i].to);\n\t\t\treturn true;\n\t\t}\n\t\tif(dfs(e[i].to,i,x)) return true;\n\t}\n\tins[x]=0;return false;\n}\nvoid subt(int rt){//\u57fa\u73af\u6811\u7684\u5b50\u6811\u6c42\u89e3 \n\tFe(i,rt){\n\t\tif(ban[e[i].to]) continue;\n\t\tprint(e[i].id);\n\t\tban[e[i].to]=1;\n\t\tsubt(e[i].to);\n\t}\n}\ninline bool fang(int x,int y){Fe(i,x)if(e[i].to==y)return e[i].fw;}//x=>y \u7684\u65b9\u5411 \ninline int cow(int x,int y){Fe(i,x)if(e[i].to==y && !out[e[i].id])return e[i].id;}//x=>y \u7684\u5976\u725b\u7f16\u53f7 \nvoid solve2(int x){//\u6700\u4f18\u79c0\u4e3a\u57fa\u73af\u6811\uff08\u57fa\u73af\u53ef\u80fd\u662f\u91cd\u8fb9\uff09 \n\tcy.clear();\n\tdfs(x,0,0);//True \n\tint tmp=key.fir;\n\twhile(true){\n\t\tcy.pb(tmp);\n\t\tif(tmp==key.sec) break;\n\t\ttmp=f[tmp]; \n\t}\n\tint len=cy.size();\n\tif(!fang(cy[0],cy[1])){//\u7ffb\u8f6c\u73af\uff08\u955c\u50cf\uff09 \n\t\tkey=mkp(cy[0],cy[1]);\n\t\tFor(i,2,len-1) cy[i-2]=cy[i];\n\t\tcy[len-2]=key.fir;\n\t\tcy[len-1]=key.sec;\n\t\treverse(cy.begin(),cy.end());\n\t}\n\tFor(i,0,len-1) print(cow(cy[i],cy[(i+1)%len])); //\u73af\u4e0a\u89e3\u51b3 \n\tfor(int i:cy) ban[i]=1;\n\tfor(int i:cy) subt(i);//\u5b50\u6811\u89e3\u51b3 \n}\nsigned main(){IOS;\n\tcin>>n>>m;\n\tint x,y;\n\tFor(i,1,n){\n\t\tcin>>x>>y;\n\t\tadde(y,x,i,1);//\u6b63\u5411\u8fb9 (sec->fir)\n\t\tadde(x,y,i,0);//\u53cd\u5411\u8fb9 (fir->sec)\n\t}\n\tFor(i,1,m){\n\t\tif(vis[i]) continue;\n\t\tsum=0;con.clear();\n\t\tsee(i);\n\t\tsum>>=1;//\u53cc\u5411\u8fb9\u6570\u91cf\u6298\u534a \n\t\tif((int)con.size()==sum+1) solve1(i);\n\t\telse solve2(i);\n\t}\n\tint ans=0;\n\tFor(i,1,n) if(!out[i]) ans++;//\u9965\u997f\u7684 \n\tcout<<ans<<endl;\n\tfor(int i:v) cout<<i<<endl;//\u8f93\u51fa\u6709\u7684\u5403\u4e86 \n\tFor(i,1,n) if(!out[i]) cout<<i<<endl;//\u8f93\u51fa\u6328\u997f\u7684 \nreturn 0;}\n```",
        "postTime": 1644057376,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "P8095 [USACO22JAN] Cereal 2 S"
    },
    {
        "content": "~~\u73b0\u5728\u8fde\u94f6\u7ec4\u90fd\u6709\u84dd\u9898\u4e86\u5417\uff1f~~\n\n## \u601d\u8def\uff1a\n\n\u6c42\u5976\u725b\u7684\u6700\u4f18\u6392\u5217\uff0c\u4e0d\u96be\u60f3\u5728\u8fd9\u9053\u9898\u8981\u7528\u5230\u4e8c\u5206\u56fe\u5339\u914d\u3002\u5339\u914d\u8fc7\u7a0b\u4e0e\u677f\u5b50\u5927\u4f53\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u52a0\u591a\u4e86\u4e00\u4e2a $second$\u3002\n\n\u5339\u914d\u597d\u4ee5\u540e\uff0c\u5269\u4e0b\u7684\u4e5f\u4e0d\u96be\u4e86\u3002\n\n## \u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n1. \u4e8c\u5206\u56fe\u5339\u914d\uff0c\u6c42\u51fa\u4e00\u79cd\u6700\u4f18\u89e3\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7bb1\u9ea6\u7247\uff0c\u5f97\u5230\u5b83\u5e94\u8be5\u88ab\u54ea\u5934\u725b\u5403\uff08\u6216\u8005\u6ca1\u88ab\u5403\uff09\uff0c\u53ef\u4ee5\u4f7f\u7ed3\u679c\u6700\u4f18\u3002\n\n2. \u5bf9\u725b\u7684\u987a\u5e8f\u8fdb\u884c\u7ea6\u675f\uff0c\u8bbe\u67d0\u5934\u725b\u7f16\u53f7\u4e3a $x$\uff0c\u5b83\u7684\u7b2c\u4e00\u559c\u6b22\u3001\u7b2c\u4e8c\u559c\u6b22\u7684\u9ea6\u7247\u7f16\u53f7\u5206\u522b\u4e3a $a$\uff0c$b$\uff0c\u5982\u679c\u725b $x$ \u5403\u5230\u7684\u662f\u9ea6\u7247 $b$\uff0c\u90a3\u9ea6\u7247 $a$ \u80af\u5b9a\u65e9\u5c31\u88ab\u5403\u4e86\uff0c\u6b64\u65f6\u5403\u6389\u9ea6\u7247 $a$ \u7684\u725b $y$ \u4e00\u5b9a\u8981\u6392\u5728\u725b $x$ \u4e4b\u524d\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u4e00\u6761\u4ece $x$ \u5230 $y$ \u7684\u5355\u5411\u8fb9\uff0c\u8868\u793a $x$ \u6392\u5728 $y$ \u4e4b\u540e\u3002\n\n3. \u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u8f93\u51fa\u7b54\u6848\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\nusing namespace std;\ninline int read()\n{\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(!isdigit(ch)){if(ch == '-') f = -1; ch = getchar();}\n\twhile(isdigit(ch)){x = x * 10 + ch - 48; ch = getchar();}\n\treturn f * x;\n}\n\nint vis[N], n, m, ans;\nint fri[N], sec[N], to[N], ind[N];\nvector<int> e[N];\ninline void add(int x, int y)\n{\n\te[x].push_back(y);\n\tind[y]++;\n}\n\ninline bool dfs(int u)//\u4e8c\u5206\u56fe\u5339\u914d\u677f\u5b50\n{\n    if(!vis[fri[u]])\n\t{\n        vis[fri[u]] = 1;\n        if ((!to[fri[u]]) || dfs(to[fri[u]]))\n\t\t{\n            to[fri[u]] = u;\n            vis[fri[u]] = 0;\n            return 1;\n        }\n        vis[fri[u]] = 0;\n    }\n    if(!vis[sec[u]])\n\t{\n        vis[sec[u]] = 1;\n        if((!to[sec[u]]) || dfs(to[sec[u]]))\n\t\t{\n            to[sec[u]] = u;\n            vis[sec[u]] = 0;\n            return 1;\n        }\n        vis[sec[u]] = 0;\n    }\n    return 0;\n}\n\n\nint main()\n{\n\tn = read(); m = read();\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tfri[i] = read();\n\t\tsec[i] = read();\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif(dfs(i))\n\t\t{\n\t\t\tans++;\n\t\t}\n\t}\n\tmemset(vis, 0, sizeof(vis));\n\tprintf(\"%d\\n\", n-ans);\n\tfor(int i = 1; i <= m; i++)\n\t{\n        if(i == sec[to[i]])//\u7b2c i \u4e2a\u9ea6\u7247\u88ab\u7f16\u53f7\u4e3a to[i] \u7684\u725b\u6240\u5403\n\t\t{\n            add(to[fri[to[i]]],to[i]);\n        }\n    }\n    int head = 0;\n    while(head < n)\n\t{\n        for(int i = 1; i <= n; i++)\n\t\t{\n            if(vis[i])\n                continue;\n            if(!ind[i])\n\t\t\t{\n                vis[i] = 1;\n                printf(\"%d\\n\", i);\n                head++;\n                int l = e[i].size();\n                for (int j = 0; j < l; j++)\n                {\n                \tint too = e[i][j];\n                \tind[too]--;\n\t\t\t\t}\n            }\n        }\n    }\n}\n```\n",
        "postTime": 1643948848,
        "uid": 327813,
        "name": "__lyh__",
        "ccfLevel": 6,
        "title": "P8095 [USACO22JAN] Cereal 2 S \u9898\u89e3"
    },
    {
        "content": "\u5148\u4e0d\u8003\u8651\u7b2c\u4e00\u559c\u6b22\u548c\u7b2c\u4e8c\u559c\u6b22\u7684\u533a\u522b\uff0c\u5047\u8bbe\u5976\u725b\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u7b2c\u4e00\u559c\u6b22\u548c\u7b2c\u4e8c\u559c\u6b22\u3002\u90a3\u4e48\u53ef\u4ee5\u628a\u5976\u725b\u770b\u505a\u65e0\u5411\u8fb9\uff0c\u9ea6\u7247\u770b\u505a\u662f\u9876\u70b9\uff0c\u5efa\u51fa\u4e00\u5f20\u65e0\u5411\u56fe\u3002\n\n\u5f53\u7136\u56fe\u4e0d\u4e00\u5b9a\u8054\u901a\uff0c\u8003\u8651\u6bcf\u4e2a $x$ \u70b9\u7684\u8054\u901a\u5757\uff1a\n\n- \u5982\u679c\u662f\u6811\uff0c\u90a3\u4e48\u6709 $x-1$ \u6761\u8fb9\uff0c\u8003\u8651\u6d6a\u8d39\u6389\u4e00\u4e2a\u70b9\uff08\u4f8b\u5982\u6839\uff09\uff0c\u6bcf\u6761\u8fb9\u9009\u62e9\u513f\u5b50\u5373\u53ef\u3002\u5728\u6709\u7b2c\u4e00\u559c\u6b22\u548c\u7b2c\u4e8c\u559c\u6b22\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6837\u505a\u81ea\u7136\u4e5f\u662f\u53ef\u884c\u7684\u3002\n\n- \u5982\u679c\u4e0d\u662f\u6811\uff0c\u90a3\u4e48\u81f3\u5c11\u6709 $x$ \u6761\u8fb9\u3002\u663e\u7136\u6700\u591a\u53ea\u6709 $x$ \u53ea\u5976\u725b\u6ee1\u8db3\u3002\u8003\u8651\u4ed6\u7684\u751f\u6210\u6811\uff08\u8fd9\u91cc\u62ff DFS \u6811\u66f4\u65b9\u4fbf\uff09\u5305\u542b $x-1$ \u6761\u8fb9\uff0c\u518d\u968f\u4fbf\u9009\u4e00\u6761\u989d\u5916\u7684\u8fb9\u3002\u6211\u4eec\u5148\u9009\u62e9\u989d\u5916\u7684\u8fb9\uff0c\u5b83\u7684\u7b2c\u4e00\u559c\u6b22\u7684\u70b9\u8bbe\u4e3a\u6839\u3002\u5176\u4ed6\u8fb9\u6309\u7167\u6811\u505a\u5c31\u884c\u4e86\u3002\n\n\u4e8e\u662f\u6bcf\u4e2a\u8fde\u901a\u5757\u90fd\u6700\u5927\u5316\u4e86\uff0c\u5c31\u505a\u597d\u4e86\u3002\n\n\u4ee3\u7801\u4e0d\u591f\u4f18\u7f8e\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n```cpp\n// By: Little09\n// Problem: P8095 [USACO22JAN] Cereal 2 S\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P8095\n// Memory Limit: 256 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define mem(x) memset(x,0,sizeof(x))\n#define printYes puts(\"Yes\")\n#define printYES puts(\"YES\")\n#define printNo puts(\"No\")\n#define printNO puts(\"NO\")\n\nconst ll inf=1000000000000000000; \n//const ll mod=998244353;\n//const ll mod=1000000007;\n\nconst int N=100005;\nint n,m; \nint a[N],b[N];\n\nvector<int>t[N],v[N];\nvector<int>g[N],val[N];\n\ninline int read()\n{\n    int F=1,ANS=0;\n\tchar C=getchar();\n    while (C<'0'||C>'9')\n\t{\n\t\tif (C=='-') F=-1;\n\t\tC=getchar();\n\t}\n    while (C>='0'&&C<='9')\n\t{\n\t\tANS=ANS*10+C-'0';\n\t\tC=getchar();\n\t}\n    return F*ANS;\n}\ninline char readchar()\n{\n\tchar C=getchar();\n    while (C<33||C>126) C=getchar();\n    return C;\n}\ninline int raed(){return read();}\nbool vis[N];\nint s,num;\nint ans[N],cnt;\nbool used[N];\nvoid dfs(int x,int fa)\n{\n\tnum++;\n\tvis[x]=1;\n\tfor (int i=0;i<t[x].size();i++)\n\t{\n\t\tif (v[x][i]==fa) continue;\n\t\tif (vis[t[x][i]]==1)\n\t\t{\n\t\t\tif (s==-1) \n\t\t\t{\n\t\t\t\ts=a[v[x][i]];\n\t\t\t\tans[++cnt]=v[x][i];\n\t\t\t\tused[v[x][i]]=1;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tg[x].push_back(t[x][i]);\n\t\tg[t[x][i]].push_back(x);\n\t\tval[x].push_back(v[x][i]);\n\t\tval[t[x][i]].push_back(v[x][i]);\n\t\tdfs(t[x][i],v[x][i]);\n\t}\n}\n\nvoid dfs2(int x,int fa)\n{\n\tfor (int i=0;i<g[x].size();i++)\n\t{\n\t\tif (val[x][i]==fa) continue;\n\t\tans[++cnt]=val[x][i];\n\t\tused[val[x][i]]=1;\n\t\tdfs2(g[x][i],val[x][i]);\n\t}\n}\n\nint main()\n{\n\tm=read(),n=raed();\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\ta[i]=read(),b[i]=read();\n\t\tt[a[i]].push_back(b[i]);\n\t\tt[b[i]].push_back(a[i]);\n\t\tv[a[i]].push_back(i);\n\t\tv[b[i]].push_back(i);\n\t}\n\tint tot=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (vis[i]==1) continue;\n\t\ts=-1,num=0;\n\t\tdfs(i,-1);\n\t\tif (s==-1) tot+=num-1;\n\t\telse tot+=num;\n\t\tif (s==-1) dfs2(i,-1);\n\t\telse dfs2(s,-1);\n\t}\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tif (used[i]==0) ans[++cnt]=i;\n\t}\n\tcout << m-tot << endl;\n\tfor (int i=1;i<=cnt;i++) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1644045569,
        "uid": 151475,
        "name": "Little09",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8095 [USACO22JAN] Cereal 2 S"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u677f\u5b50\u9898\u3002\n\n\u8003\u8651\u5c06\u725b\u4f5c\u4e3a\u4e00\u4e2a\u70b9\u96c6\uff0c\u9ea6\u7247\u4f5c\u4e3a\u4e00\u4e2a\u70b9\u96c6\u3002\u82e5\u5976\u725b $A$ \u559c\u6b22\u9ea6\u7247 $a$\uff0c\u5219 $A$ \u4e0e $a$ \u8fde\u8fb9\uff0c\u8fd9\u6837\u5efa\u51fa\u7684\u56fe\u663e\u7136\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\u5976\u725b\u603b\u6570\u51cf\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6570\u5373\u4e3a\u9965\u997f\u5976\u725b\u7684\u6700\u5c0f\u4e2a\u6570\u3002\n\n\u6ce8\u610f\uff0c\u7531\u4e8e\u5976\u725b\u4f18\u5148\u62ff\u7b2c\u4e00\u559c\u6b22\u7684\u9ea6\u7247\uff0c\u6240\u4ee5\u5728\u4e8c\u5206\u56fe\u5339\u914d\u7684\u65f6\u5019\uff0c\u4f18\u5148\u5339\u914d\u7b2c\u4e00\u559c\u6b22\u7684\u9ea6\u7247\u3002\n\n\u81f3\u4e8e\u6700\u540e\u8f93\u51fa\u7684\u6392\u5217\uff0c\u53ea\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u5373\u53ef\uff1a\n\n- \u82e5\u5976\u725b $A$ \u7b2c\u4e00\u559c\u6b22\u9ea6\u7247 $a$\uff0c\u7b2c\u4e8c\u559c\u6b22\u9ea6\u7247 $b$\uff0c\u4e14\u5976\u725b $A$ \u62ff\u4e86\u9ea6\u7247 $b$\uff0c\u5976\u725b $B$ \u62ff\u4e86\u9ea6\u7247 $a$\uff0c\u5219 $B$ \u5728 $A$ \u524d\u9762\u3002\n\n- \u82e5\u5976\u725b $A$ \u7b2c\u4e00\u559c\u6b22\u9ea6\u7247 $a$\uff0c\u7b2c\u4e8c\u559c\u6b22\u9ea6\u7247 $b$\uff0c\u4e14\u5976\u725b $B,C$ \u62ff\u4e86\u9ea6\u7247 $b,c$\uff0c\u5219 $B,C$ \u5728 $A$ \u524d\u9762\u3002\n\n\u867d\u7136\u770b\u4e0a\u53bb\u597d\u50cf\u662f\u62d3\u6251\uff0c\u4f46\u9012\u5f52\u8f93\u51fa\u5c31\u597d\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=200010;\ninline int read()\n{\n\tint x=0;\n\tchar c=getchar();\n\tfor(;!(c>='0'&&c<='9');c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\treturn x;\n}\nint n,m,ans[maxn];\nint a[maxn],b[maxn];\nint pp[maxn],vis[maxn];\nbool dfs(int x,int t){\n\tif(vis[x]==t) return 0;\n\tvis[x]=t;\n\tif(!pp[a[x]]||dfs(pp[a[x]],t)){\n   //\u4f18\u5148\u62ff\u9ea6\u7247a[x](\u7b2c\u4e00\u559c\u6b22)\n\t\tpp[a[x]]=x,pp[x]=a[x];\n\t\treturn 1;\n\t}\n\telse if(!pp[b[x]]||dfs(pp[b[x]],t)){\n \t//\u518d\u62ff\u9ea6\u7247b[x](\u7b2c\u4e8c\u559c\u6b22)\n\t\tpp[b[x]]=x,pp[x]=b[x];\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nvoid Print(int x){//\u8f93\u51fa\n\tif(vis[x]) return ;\n\tvis[x]=1;//vis[x]=1:\u5976\u725bx\u5df2\u7ecf\u8f93\u51fa\u8fc7\n\tif(!pp[x]){\n   //\u5982\u679c\u5976\u725bx\u6ca1\u6709\u62ff\u8d70\u9ea6\u7247\n   //\u90a3\u4e48\u62ff\u8d70\u5b83\u7b2c\u4e00/\u4e8c\u559c\u6b22\u7684\u9ea6\u7247\u7684\u5976\u725b\u8981\u5148\u8f93\u51fa\n\t\tPrint(pp[a[x]]);\n\t\tPrint(pp[b[x]]);\n\t\tprintf(\"%d\\n\",x);\n\t\treturn ; \n\t}\n\tif(pp[x]==b[x]){\n\t//\u5982\u679c\u5976\u725bx\u62ff\u8d70\u7684\u662f\u5b83\u7b2c\u4e8c\u559c\u6b22\u7684\u9ea6\u7247\n\t//\u90a3\u4e48\u62ff\u8d70\u5b83\u7b2c\u4e00\u559c\u6b22\u7684\u9ea6\u7247\u7684\u5976\u725b\u8981\u5148\u8f93\u51fa\n\t\tPrint(pp[a[x]]);\n\t\tprintf(\"%d\\n\",x);\n\t\treturn ;\n\t}\n\t//\u5426\u5219\u76f4\u63a5\u8f93\u51fa\n\tprintf(\"%d\\n\",x);\n}\nint main(){\n\tint sum=0;\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read()+n,b[i]=read()+n;\n\tfor(int i=1;i<=n;i++) dfs(i,i);//\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\tfor(int i=1;i<=n;i++) sum+=bool(pp[i]);\n\tprintf(\"%d\\n\",n-sum);\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=n;i++)\n\t\tif(!vis[i]) Print(i);\n\treturn 0;\n```\n\n",
        "postTime": 1644222785,
        "uid": 288716,
        "name": "lzqy_",
        "ccfLevel": 7,
        "title": "[USACO22JAN] Cereal 2 S"
    },
    {
        "content": "# \u8d2a\u5fc3 + \u62d3\u6251\n\u53ef\u4ee5\u8f7b\u677e\u7684\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u6700\u5927\u5339\u914d\u7684\u95ee\u9898\uff0c \u90a3\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u5308\u7259\u5229\u7b97\u6cd5\u3002\u4f46\u662f\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u662f $10^{5}$ \u4f46\u662f\u5308\u7259\u5229\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nm)$, \u5f88\u660e\u663e\u662f\u4f1a\u7206\u65f6\u7684\u3002 \n### \u627e\u9ea6\u7247-\u5976\u725b\u7684\u5339\u914d\n1. **\u5efa\u56fe** \u53ef\u4ee5\u628a\u5976\u725b\u548c\u98df\u7269\u5206\u522b\u770b\u4f5c\u4e00\u4e2a\u8282\u70b9\uff0c \u5728\u5976\u725b\u548c\u5b83\u7684\u9996\u9009\u548c\u6b21\u9009\u9ea6\u7247\u4e4b\u95f4\u5efa\u8fb9\u3002\u6211\u662f\u7528\u7684\u662f\u94fe\u5f0f\u524d\u5411\u661f\uff0c \u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u9ea6\u7247\u7684\u4f18\u5148\u7ea7  \n\n2. **\u8d2a\u5fc3** \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5976\u725b\u548c\u9ea6\u7247\u7684\u8fde\u901a\u5757\u6709\u4e09\u79cd\u60c5\u51b5 \u2014\u2014 \u5976\u725b > \u9ea6\u7247\uff0c \u5976\u725b = \u9ea6\u7247\uff0c \u5976\u725b < \u9ea6\u7247(\u5f53\u7136\u662f\u6307\u6570\u91cf\uff09\n- \u5976\u725b < \u9ea6\u7247\uff1a \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e0d\u96be\u53d1\u73b0\u6700\u591a\u591a\u51fa\u4e00\u4e2a\u9ea6\u7247\uff0c \u6211\u4eec\u9700\u8981\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u9ea6\u7247\u662f\u6ca1\u6709\u5339\u914d\u7684\n- \u5976\u725b >= \u9ea6\u7247\uff1a\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u6bcf\u4e00\u4e2a\u9ea6\u7247\u90fd\u80fd\u6709\u5bf9\u5e94\u7684\u5976\u725b    \n\n\t\u90a3\u4e48\u8d2a\u5fc3\u7b56\u7565\u5c31\u662f\u627e\u5230\u6bcf\u4e00\u4e2a\u9ea6\u7247\u6709\u591a\u5c11\u4e2a\u5976\u725b\u53ef\u4ee5\u9009\u62e9(\u5ea6\u6570)\uff0c\u4f18\u5148\u628a\u5ea6\u6570\u6700\u5c0f\u7684\u9ea6\u7247\u5339\u914d\u4e00\u4e2a\u53ef\u884c\u7684\u5976\u725b\uff0c \u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u9ea6\u7247\u6ca1\u6709\u6d6a\u8d39\u3002\u8fd9\u79cd\u60c5\u51b5\u5c31\u7528\u5c0f\u6839\u5806\u4f18\u5316\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O((n+m)logn)$    \n\n3. **\u62d3\u6251** \u6211\u4eec\u6709\u4e86\u6bcf\u4e2a\u5976\u725b\u5339\u914d\u7684\u9ea6\u7247\uff0c\u4f46\u600e\u4e48\u8f93\u51fa\u987a\u5e8f\u5462\uff1f\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5339\u914d\u5f97\u5230\u5976\u725b\u4e4b\u95f4\u7684\u4f18\u5148\u5173\u7cfb\u518d\u5efa\u4e00\u4e2a\u56fe\uff0c\u628a\u8fd9\u4e2a\u56fe\u7684\u62d3\u6251\u987a\u5e8f\u8f93\u51fa\u5373\u53ef\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u5976\u725b\u5360\u4e86\u5b83\u7684\u6b21\u9009\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u5728\u5360\u4e86\u5b83\u7684\u9996\u9009\u7684\u5976\u725b\u4e4b\u540e\uff1b \u5982\u679c\u4e00\u4e2a\u5976\u725b\u6ca1\u6709\u5339\u914d\uff0c\u90a3\u4e48\u5b83\u5c31\u5728\u5360\u4e86\u5b83\u7684\u4e24\u4e2a\u9009\u62e9\u7684\u5976\u725b\u4e4b\u540e\u3002 \u8fd9\u65f6\u5c31\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u987a\u5e8f\u56fe\u53ef\u80fd\u51fa\u73b0\u73af\uff0c\u62d3\u6251\u5e8f\u5c31\u8f93\u51fa\u4e0d\u4e86\u4e86\u3002\u6240\u4ee5\u8981\u5728\u8d2a\u5fc3\u65f6\u52a0\u4e0a\u4e00\u6b65\uff1a\u5982\u679c\u9ea6\u7247\u53ef\u4ee5\u5bf9\u5e94\u4e00\u4e2a\u5976\u725b\u7684\u9996\u9009\uff0c\u5c31\u4f18\u5148\u5339\u914d\u9996\u9009\uff0c\u907f\u514d\u73af\u7684\u51fa\u73b0\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N2 = 110, N3 = 1110, N4 = 1e4 + 10, N5 = 1e5 + 10, N6 = 1e6 + 10;\ntypedef pair <int, int> PII;\nconst int dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1};\nconst int N = 5 * 1e5;\nconst int INF = 1e5;\nint n, m;\nint h[N], e[N], ne[N], idx, pr[N], d[N], st[N], match[N];\nint first[N], value[N], nex[N], id, duu[N];\n//\u7ed3\u6784\u4f53\u5b58\u9ea6\u7247\u5e8f\u53f7\u548c\u5ea6\u6570\nstruct Node\n{\n    int in, du;\n    bool operator> (const Node &a) const{\n        return du > a.du;\n    }\n};\nvoid add(int a, int b, int st){\n    idx++, e[idx] = b, pr[idx] = st, ne[idx] = h[a], h[a] = idx;\n}\nvoid addtop(int a, int b){\n    id++, value[id] = b, nex[id] = first[a], first[a] = id;\n}\nvoid topsort(){\n    //\u62d3\u6251\n    queue<int> q;\n    for (int i = 1; i <= n;i++)\n        if (duu[i] == 0)\n            q.push(i);\n    while(!q.empty()){\n        int j = q.front();\n        cout << j << endl;\n        q.pop();\n        for (int i = first[j]; i; i = nex[i])\n        {\n            int p = value[i];\n            duu[p]--;\n            if (!duu[p])\n                q.push(p);\n        }\n    }\n    for (int i = 1; i <= n; i++)\n        if (duu[i])\n            cout << i << endl;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n    cin >> n >> m;\n    for (int i = 1; i <= n;i++){\n        int f, s;\n        cin >> f >> s;\n        //\u5b58\u8fb9\uff1a\u9ea6\u7247\u5c31\u662f\u539f\u7f16\u53f7 + 1e5\n        add(i, s + 1e5, 2), add(i, f + 1e5, 1);\n        add(s + 1e5, i, 2), add(f + 1e5, i, 1);\n        d[f + INF]++, d[s + INF]++;\n    }\n    //\u5339\u914d\n    priority_queue <Node, vector <Node>, greater <Node> > heap;\n    for (int i = 1e5 + 1; i <= 1e5 + m; i++)\n        if (d[i])\n            heap.push({i, d[i]});\n    while(!heap.empty()){\n        Node j = heap.top();\n        heap.pop();\n        if (st[j.in])\n            continue;\n        if (j.du == 0)\n        {\n            st[j.in] = -1;\n            continue;\n        }\n        //\u4f18\u5148\u9009\u62e9\u4f18\u5148\u7ea7\u9ad8\u7684\n        int tar = h[j.in], pro = 3;\n        for (int i = h[j.in]; i; i = ne[i])\n            if (!match[e[i]] && pr[i] < pro)\n                tar = i, pro = pr[i];\n        \n        match[e[tar]] = j.in, st[j.in] = e[tar];\n        for (int i = h[e[tar]]; i; i = ne[i])\n        {\n            if (!st[e[i]]){\n                d[e[i]]--;\n                heap.push({e[i], d[e[i]]});\n            }\n        }\n    }\n    int cnt = 0;\n    for (int i = 1; i <= n;i++){\n        if (!match[i])\n            cnt++;\n    }\n    cout << cnt << endl;\n    \n    for (int i = 1; i <= n; i++)\n    {\n        if (match[i]){\n            int fi, si;\n            for (int j = h[i]; j; j = ne[j])\n                if (pr[j] == 2)\n                    si = j;\n                else\n                    fi = j;\n            if (match[i] == e[si] && st[e[fi]] != -1){\n                addtop(st[e[fi]], i), duu[i]++;\n            }\n        }\n        else\n        {\n            int fi, si;\n            for (int j = h[i]; j; j = ne[j])\n                if (pr[j] == 2)\n                    si = j;\n                else\n                    fi = j;\n            addtop(st[e[fi]], i), addtop(st[e[si]], i), duu[i] += 2;\n\n        }\n    }\n    topsort();\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1643952500,
        "uid": 615315,
        "name": "Alvintsh",
        "ccfLevel": 0,
        "title": "USACO Silver 2022 Jan Cereal II \u8d2a\u5fc3+\u62d3\u6251\u505a\u6cd5"
    },
    {
        "content": "\u88ab\u8fd9\u9898\u641e\u4e86\u4e0b\u5fc3\u6001\u3002\n\n------------\n\n\u628a\u6bcf\u888b\u9ea6\u7247\u770b\u6210\u70b9\uff0c\u6bcf\u5934\u5976\u725b\u7684 $f_i$ \u548c $s_i$ \u770b\u6210\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0c\u4e8e\u662f\u539f\u9898\u53d8\u6210\u5c3d\u53ef\u80fd\u5339\u914d\u591a\u7684\u70b9\u548c\u8fb9\u3002\n\n\u6bcf\u4e2a\u8fde\u901a\u5757\u5355\u72ec\u5206\u6790\u3002\n\n- \u6784\u6210\u56fe\u5f62\u4e3a\u4e00\u68f5\u6811\n\n\u4efb\u610f\u8bbe\u5176\u4e2d\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u5176\u4f59\u70b9\u76f4\u63a5\u548c\u4e0e\u7236\u4eb2\u95f4\u7684\u8fde\u8fb9\u5339\u914d\u5373\u53ef\u3002\n\n\u7531\u4e8e $f_i$ \u548c $s_i$ \u8fd8\u6709\u4f18\u5148\u7ea7\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u679a\u4e3e\u6240\u6709\u6839\u7684\u8fde\u8fb9\uff0c\u5982\u679c\u67d0\u6761\u8fb9\u7684 $f_i$ \u4e3a\u6839\uff0c\u90a3\u4e48\u5c31\u5c06\u5176\u7684\u5339\u914d\u70b9\u6539\u4e3a\u6839\uff0c\u5e76\u5c06\u5176\u539f\u672c\u7684\u5339\u914d\u70b9\u8bbe\u4e3a\u65b0\u7684\u6839\u3002\n\n\u4e0d\u65ad\u9012\u5f52\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u8fd9\u6837\u7684\u8fb9\u4e3a\u6b62\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u4ece\u6839\u5f80\u4e0b\u8d70\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u5728\u641c\u5230\u53f6\u5b50\u65f6\u6216\u4e4b\u524d\u505c\u6b62\u3002\n\n- \u6784\u6210\u56fe\u5f62\u4e0d\u4e3a\u4e00\u68f5\u6811\n\n\u4efb\u53d6\u5176\u4e2d\u7684\u4e00\u68f5\u57fa\u73af\u6811\uff0c\u628a\u73af\u770b\u6210\u6839\u3002\u5bf9\u4e8e\u6240\u6709\u4e0d\u5728\u73af\u4e0a\u7684\u8fb9\uff0c\u5c06\u5176\u4e0e\u513f\u5b50\u8282\u70b9\u5339\u914d\u3002\n\n\u5bf9\u4e8e\u73af\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u4efb\u9009\u4e00\u4e2a\u65b9\u5411\u6309\u987a\u5e8f\u5339\u914d\u5373\u53ef\uff0c\u4f46\u8981\u6ce8\u610f\u5982\u679c\u6b64\u65f6\u73af\u4e0a\u7684\u8fb9\u90fd\u548c\u5176\u7684 $s_i$ \u5339\u914d\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5012\u8f6c\u65b9\u5411\u5339\u914d\u3002\n\n\u5168\u90e8\u5339\u914d\u5b8c\u540e\u6839\u636e\u5339\u914d\u60c5\u51b5\u5efa\u7acb\u6709\u5411\u56fe\uff08\u8fd9\u65f6\u5976\u725b\u770b\u6210\u70b9\uff09\uff0c\u62d3\u6251\u6392\u5e8f\u5373\u53ef\uff08\u53ef\u4ee5\u53d1\u73b0\u6b64\u65f6\u5efa\u7acb\u51fa\u7684\u56fe\u4e00\u5b9a\u662f\u65e0\u73af\u7684\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint lw[100005],bi[200005][3],bs=1,vi[100005];\nint n,m,f[100005],s[100005],ans;\nint p[100005],pxh[100005];\nvoid add(int u,int v,int w){bi[++bs][0]=lw[u],bi[lw[u]=bs][1]=v,bi[bs][2]=w;}\nint dl[100005],tzz,wzz;\nint bxh[100005],it[100005],bn,dxh[100005],tn;\nstruct edge{\n\tint to,xh;\n};\nvector<edge> e[100005];int rd[100005];\nint che;\nvoid dfs1(int w,int fa)\n{\n\tfor(int i=0,in=e[w].size();i<in;i++)\n\t{\n\t\tedge x=e[w][i];int v=x.to,xh=x.xh;\n\t\tif(v!=fa)\n\t\t{\n\t\t\tp[abs(xh)]=v,dfs1(v,w);\n\t\t}\n\t}\n}\nint hxh[100005],hn,hb[100005];\nint getans(int x)\n{\n\tbn=0,tn=1;\n\ttzz=0,dl[wzz=1]=x,vi[x]=1;\n\twhile(tzz<wzz)\n\t{\n\t\t++tzz;int u=dl[tzz];\n\t\tfor(int o_o=lw[u];o_o;o_o=bi[o_o][0])\n\t\t{\n\t\t\tint v=bi[o_o][1];\n\t\t\tif(bi[o_o][2]>0)bxh[++bn]=o_o>>1;\n\t\t\tif(!vi[v])it[o_o>>1]=1,dl[++wzz]=v,vi[v]=1,++tn;\n\t\t}\n\t}\n\tfor(int i=1;i<=bn;i++)if(it[bxh[i]])\n\t{\n\t\tint xh=bxh[i],u=bi[(xh<<1)|1][1],v=bi[xh<<1][1],w=bi[xh<<1][2];\n\t\te[u].push_back((edge){v,w}),e[v].push_back((edge){u,-w}),++rd[u],++rd[v];\n\t}\n\tif(bn==tn-1)\n\t{\n\t\tdfs1(x,0);\n\t\tint rt=x,fa=0;\n\t\tfor(;;)\n\t\t{\n\t\t\tint jg=0;\n\t\t\tfor(int i=0,in=e[rt].size();i<in;i++)\n\t\t\t{\n\t\t\t\tedge b=e[rt][i];int so=b.to,xh=b.xh;\n\t\t\t\tif(so!=fa&&xh>0)\n\t\t\t\t{\n\t\t\t\t\tjg=1,p[xh]=rt,fa=rt,rt=so;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!jg)break;\n\t\t}\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tint tb=0;\n\t\tfor(int i=1;i<=bn;i++)if(!it[bxh[i]])\n\t\t{\n\t\t\tint xh=bxh[i],u=bi[(xh<<1)|1][1],v=bi[xh<<1][1],w=bi[xh<<1][2];\n\t\t\te[u].push_back((edge){v,w}),e[v].push_back((edge){u,-w}),++rd[u],++rd[v];\n\t\t\ttb=xh;break;\n\t\t}\n\t\tfor(int i=1;i<=tn;i++)dxh[i]=dl[i];\n\t\ttzz=wzz=0;\n\t\tfor(int i=1;i<=tn;i++)if(rd[dxh[i]]==1)dl[++wzz]=dxh[i];\n\t\twhile(tzz<wzz)\n\t\t{\n\t\t\t++tzz;int u=dl[tzz];\n\t\t\tfor(int i=0,in=e[u].size();i<in;i++)\n\t\t\t{\n\t\t\t\tedge b=e[u][i];int v=b.to,xh=b.xh;\n\t\t\t\tif(rd[v]!=0)\n\t\t\t\t{\n\t\t\t\t\tp[abs(xh)]=u,--rd[u],--rd[v];\n\t\t\t\t\tif(rd[v]==1)dl[++wzz]=v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\thn=0;\n\t\tfor(int i=1;i<=tn;i++)if(rd[dxh[i]]!=0)\n\t\t{\n\t\t\thxh[hn=1]=dxh[i];\n\t\t\tint w=dxh[i];\n\t\t\tdo\n\t\t\t{\n\t\t\t\tfor(int j=0,jn=e[w].size();j<jn;j++)\n\t\t\t\t{\n\t\t\t\t\tedge b=e[w][j];int v=b.to,xh=b.xh;\n\t\t\t\t\tif(rd[v]&&xh!=-hb[hn-1])\n\t\t\t\t\t{\n\t\t\t\t\t\thb[hn]=xh,hxh[++hn]=v,w=v;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}while(w!=dxh[i]);\n\t\t\tbreak;\n\t\t}\n\t\t--hn,che=0;\n\t\tfor(int i=1;i<=hn;i++)if(hb[i]>0){che=1;break;}\n\t\tif(che)\n\t\t{\n\t\t\tfor(int i=1;i<=hn;i++)p[abs(hb[i])]=hxh[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i=1;i<=hn;i++)p[abs(hb[i])]=hxh[i+1];\n\t\t}\n\t\treturn bn-tn;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",f+i,s+i);\n\t\tadd(f[i],s[i],i),add(s[i],f[i],-i);\n\t}\n\tfor(int i=1;i<=m;i++)if(!vi[i])ans+=getans(i);\n\tprintf(\"%d\\n\",ans);\n\tfor(int i=1;i<=n;i++)if(p[i])pxh[p[i]]=i;\n\tfor(int i=1;i<=n;i++)e[i].clear(),rd[i]=0;\n\tfor(int i=1;i<=n;i++)\n\tif(p[i])\n\t{\n\t\tif(p[i]==s[i])\n\t\t{\n\t\t\tint u=pxh[f[i]],v=i;\n\t\t\te[u].push_back((edge){v,0}),++rd[v];\n\t\t}\n\t}\n\telse\n\t{\n\t\tint u1=pxh[f[i]],u2=pxh[s[i]],v=i;\n\t\te[u1].push_back((edge){v,0}),++rd[v];\n\t\te[u2].push_back((edge){v,0}),++rd[v];\n\t}\n\ttzz=wzz=0;\n\tfor(int i=1;i<=n;i++)if(rd[i]==0)dl[++wzz]=i;\n\twhile(tzz<wzz)\n\t{\n\t\t++tzz;int u=dl[tzz];\n\t\tprintf(\"%d\\n\",u);\n\t\tfor(int i=0,in=e[u].size();i<in;i++)\n\t\t{\n\t\t\tint v=e[u][i].to;\n\t\t\t--rd[v];\n\t\t\tif(rd[v]==0)dl[++wzz]=v;\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1643768693,
        "uid": 104581,
        "name": "kkk\u7684\u5c0f\u8214\u72d7",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8095 \u3010[USACO22JAN] Cereal 2 S\u3011"
    },
    {
        "content": "\u5982\u679c\u6bcf\u5934\u725b\u7684\u559c\u597d\u4e0d\u5206\u5148\u540e\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e2a\u88f8\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u6bcf\u5934\u725b\u5411\u559c\u6b22\u7684\u9ea6\u7247\u8fde\u8fb9\u7136\u540e\u6d41\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u73b0\u5728\u4e3a\u4e86\u8ba9\u725b\u4f18\u5148\u9009\u62e9\u81ea\u5df1\u6700\u559c\u6b22\u7684\uff0c\u6211\u4eec\u7ed9\u8fb9\u52a0\u8d39\u7528\u3002\u7b2c\u4e00\u559c\u6b22\u7684\u8d39\u7528\u4e3a $0$\uff0c\u7b2c\u4e8c\u559c\u6b22\u7684\u8d39\u7528\u4e3a $1$\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u6015\u725b\u5728\u80fd\u9009\u6700\u559c\u6b22\u7684\u9ea6\u7247\u7684\u60c5\u51b5\u4e0b\u53bb\u9009\u7b2c\u4e8c\u559c\u6b22\u7684\u4e86\u3002\n\n\u8f93\u51fa\u65b9\u6848\u53ef\u4ee5\u7528\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u5148\u628a\u5403\u5230\u6700\u559c\u6b22\u9ea6\u7247\u7684\u90fd\u8f93\u51fa\u4e86\uff0c\u5bf9\u4e8e\u5403\u7b2c\u4e8c\u559c\u6b22\u9ea6\u7247\u7684\u725b\uff0c\u5219\u8981\u7b49\u5230\u5b83\u6700\u559c\u6b22\u7684\u9ea6\u7247\u88ab\u5403\u4e86\u4e4b\u540e\u518d\u8f93\u51fa\u3002\u6700\u540e\uff0c\u518d\u8f93\u51fa\u6ca1\u5f97\u5403\u7684\u725b\u3002\n\n```cpp\n#include <cstring>\n#include <climits>\n#include <cstdio>\n#include <vector>\n#include <queue>\n\nconst int maxn = 2e5+9, maxm = maxn<<3;\nusing namespace std;\n\nstruct edge {\n    int to,next,flow,cost;\n}edges[maxm];\n\nint head[maxn],chead[maxn],dep[maxn],match[maxn],n,m,s,t;\nint a[maxn],b[maxn];\nbool vis[maxn],printed[maxn],inq[maxn];\nvector<int> want[maxn];\nqueue<int> q;\n\ninline void AddEdge(int u, int v, int f, int c){\n    static int tot = 1;\n    edges[++tot] = {v,head[u],f,c};\n    head[u] = tot;\n    edges[++tot] = {u,head[v],0,-c};\n    head[v] = tot;\n}\nvoid Read(){\n    scanf(\"%d%d\",&n,&m);\n    s=n+m+1;\n    t=s+1;\n    for(int i=1; i<=n; i++){\n        scanf(\"%d%d\",&a[i],&b[i]);\n        want[a[i]].push_back(i);\n        want[b[i]].push_back(i);\n        AddEdge(s,i,1,0);\n        AddEdge(i,n+b[i],1,1);\n        AddEdge(i,n+a[i],1,0);\n    }\n    for(int i=1; i<=m; i++) AddEdge(n+i,t,1,0);\n}\n\nbool SPFA(){\n    memset(dep,0x7f,sizeof(dep)); dep[s]=0;\n    memset(inq,0,sizeof(inq));\n    q.push(s);\n    while(!q.empty()){\n        int now = q.front(); q.pop();\n        inq[now] = false;\n        chead[now] = head[now];\n        for(int i=head[now],to; i; i=edges[i].next){\n            if(!edges[i].flow) continue;\n            if(dep[now]+edges[i].cost < dep[to=edges[i].to]){\n                dep[to] = dep[now]+edges[i].cost;\n                if(!inq[to]){\n                    q.push(to);\n                    inq[to] = true;\n                }\n            }\n        }\n    }\n    return dep[t]!=dep[0];\n}\nint Dinic(int now, int in){\n    if(now == t) return in;\n    int out=0,cur;\n    inq[now] = true;\n    for(int i=chead[now],to; i&&in; i=edges[i].next){\n        chead[now] = i;\n        if(!edges[i].flow || inq[to=edges[i].to]) continue;\n        if(dep[to] != dep[now]+edges[i].cost) continue;\n        cur = Dinic(to,min(in,edges[i].flow));\n        in -= cur;\n        edges[i].flow -= cur;\n        out += cur;\n        edges[i^1].flow += cur;\n    }\n    if(out) inq[now] = false;\n    return out;\n}\n\ninline void FindMatch(int now){\n    for(int i=head[now],to; i; i=edges[i].next){\n        to = edges[i].to-n;\n        if(to > m) continue;\n        if(!edges[i].flow) {\n            match[now] = to;\n            return;\n        }\n    }\n}\nvoid Dfs(int now){\n    printf(\"%d\\n\",now);\n    vis[match[now]] = 1;\n    printed[now] = 1;\n    for(int cow : want[match[now]]){\n        if(printed[cow] || !match[cow]) continue;\n        if(vis[a[cow]]) Dfs(cow);\n    }\n}\n\nint main(){\n    Read();\n    int cnt = n;\n    while(SPFA()) cnt -= Dinic(s,INT_MAX); \n    printf(\"%d\\n\",cnt);\n    for(int i=1; i<=n; i++) FindMatch(i);\n    for(int i=1; i<=n; i++){\n        if(match[i] == a[i]) { //\u5403\u5230\u6700\u559c\u6b22\u7684\n            printf(\"%d\\n\",i);\n            printed[i] = true;\n            vis[a[i]] = true;\n        }\n    }\n    for(int i=1; i<=n; i++){\n        if(!match[i] || printed[i]) continue;\n        if(vis[a[i]]) Dfs(i); //\u6700\u559c\u6b22\u7684\u5df2\u7ecf\u88ab\u5403\u4e86\n    }\n    for(int i=1; i<=n; i++){\n        if(!printed[i]) printf(\"%d\\n\",i);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1643946798,
        "uid": 130256,
        "name": "jia_shengyuan",
        "ccfLevel": 9,
        "title": "P8095 [USACO22JAN] Cereal 2 S \u9898\u89e3"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8095)\n\n## \u9898\u76ee\u5206\u6790\n\n\u4e8c\u5206\u56fe+\u62d3\u6251\u6392\u5e8f\u3002\n\n\u725b\u548c\u9ea6\u7247\u5206\u522b\u4e3a\u4e8c\u5206\u56fe\u7684\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u95ee\u5373\u4e3a\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n\u7406\u8bba\u4e0a\u5308\u7259\u5229\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a $O(nm)$\uff0c\u800c `Dinic` \u5728\u4e8c\u5206\u56fe\u4e2d\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt{n})$\u3002\u4f46\u7531\u4e8e\u67d0\u79cd\u672a\u77e5\u539f\u56e0\uff0c\u672c\u9898\u5308\u7259\u5229\u8dd1\u5f97\u6bd4 `Dinic` \u5feb\u3002\n\n\u7b14\u8005\u4e0d\u4f1a\u5308\u7259\u5229\uff0c\u4e8e\u662f\u4f7f\u7528\u4e86 `Dinic`\u3002\n\n\u76f4\u63a5\u65e0\u8111\u6700\u5927\u6d41\u4f1a\u53d1\u73b0\uff0c\u4e24\u79cd\u559c\u6b22\u7684\u9ea6\u7247\u6ca1\u6709\u533a\u522b\u3002\u56e0\u6b64\u6211\u4eec\u5bf9\u725b\u6307\u5411\u9ea6\u7247\u7684\u8fb9\u52a0\u4e0a\u8fb9\u6743\uff0c\u4f7f\u4f18\u5148\u7ea7\u51fa\u73b0\u5dee\u5f02\uff0c\u7136\u540e\u6539\u7528\u8d39\u7528\u6d41\u6c42\u89e3\u5373\u53ef\u3002\n\n\u6e90\u70b9\u6d41\u5411\u725b\u7684\u6d41\u91cf\uff0c\u725b\u6d41\u5411\u9ea6\u7247\u7684\u6d41\u91cf\u548c\u9ea6\u7247\u6d41\u5411\u6c47\u70b9\u7684\u6d41\u91cf\u5747\u4e3a $1$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u6ce8\u610f\u5230\u82e5\u725b\u53d6\u8d70\u67d0\u4e2a\u9ea6\u7247\uff0c\u90a3\u4e48\u8fde\u63a5\u725b\u4e0e\u9ea6\u7247\u7684\u5269\u4f59\u6d41\u91cf\u4e3a $0$\u3002\n\n\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u8fb9\u6765\u5224\u65ad\u9ea6\u7247\u88ab\u54ea\u5934\u725b\u53d6\u8d70\uff0c\u7136\u540e\u5efa\u7acb\u725b\u6392\u961f\u987a\u5e8f\u7684\u62d3\u6251\u5173\u7cfb\u3002\n\n\u5bf9\u4e8e\u725b `A`\uff0c\u82e5\u6700\u559c\u6b22\u7684\u9ea6\u7247\u88ab\u725b `B` \u53d6\u8d70\uff0c\u5219 `B` \u5728 `A` \u524d\u9762\u3002\u82e5\u540c\u65f6\u6b21\u559c\u6b22\u7684\u9ea6\u7247\u88ab `C` \u53d6\u8d70\uff0c\u5219 `C` \u4e5f\u5728 `A` \u524d\u9762\u3002\n\n\u6309\u7167\u4e0a\u8ff0\u5173\u7cfb\u5efa\u7acb\u65b0\u56fe\u5e76\u62d3\u6251\u6392\u5e8f\uff0c\u5373\u53ef\u5f97\u5230\u5408\u6cd5\u5e8f\u5217\u3002\n\n## code\n\n```cpp\n#include <bits/stdc++.h>\n#define rei register int\n#define N 1500010\nusing namespace std;\ntypedef long long ll;\nconst int inf = 1e9;\n\ntemplate <typename T> inline void read(T &x)\n{\n\tx = 0; T f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -f; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - 48; ch = getchar();}\n\tx *= f;\n}\n\nint n, m, st, ed, head[N], edge_cnt = 1, ans, Head[N], Edge = 1, a[N][2], bel[N], que[N], he = 1, tot, dis[N], cur[N], in[N], vis[N], incf[N], pre[N];\nstruct edge {int nxt, v, w, c;} e[N], E[N];\n\ninline void add_edge(int u, int v, int w, int c) {e[++edge_cnt].nxt = head[u]; head[u] = edge_cnt; e[edge_cnt].v = v; e[edge_cnt].w = w; e[edge_cnt].c = c;}\ninline void Add(int u, int v) {E[++Edge].nxt = Head[u]; Head[u] = Edge; E[Edge].v = v;}\n\ninline bool SPFA()\n{\n    queue<int> q;\n    memset(dis, 0x3f, sizeof(dis));\n    memset(vis, 0, sizeof(vis));\n    dis[st] = 0; q.push(st); vis[st] = 1; incf[st] = inf;\n    while (!q.empty())\n    {\n        int u = q.front(); q.pop();\n        vis[u] = 0;\n        cur[u] = head[u];\n        for (rei i = head[u]; i; i = e[i].nxt)\n        {\n            int v = e[i].v;\n            if (dis[u] + e[i].c < dis[v] && e[i].w)\n            {\n                dis[v] = dis[u] + e[i].c;\n                incf[v] = min(incf[u], e[i].w);\n                pre[v] = i;\n                if (!vis[v]) q.push(v), vis[v] = 1;\n            }\n        }\n    }\n    return dis[ed] != 1061109567;\n}\n\ninline int Dfs(int u, int flow)\n{\n\tif (u == ed) return flow;\n\tint rest = flow;\n\tvis[u] = 1;\n\tfor (rei i = cur[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].v; cur[u] = i;\n\t\tif (dis[v] == dis[u] + e[i].c && e[i].w && !vis[v])\n\t\t{\n\t\t\tint tmp = Dfs(v, min(rest, e[i].w));\n\t\t\te[i].w -= tmp;\n\t\t\te[i ^ 1].w += tmp;\n\t\t\trest -= tmp;\n\t\t\tif (!rest) break;\n\t\t}\n\t}\n\treturn flow - rest;\n}\n\ninline int Dinic()\n{\n\tint ret = 0;\n\twhile (SPFA()) ret += Dfs(st, inf);\n\treturn ret;\n}\n\ninline void Toposort()\n{\n\tfor (rei i = 1; i <= n; i++)\n\t\tif (!in[i]) que[++tot] = i, vis[i] = 1;\n\twhile (he <= tot)\n\t{\n\t\tint u = que[he++];\n\t\tfor (rei i = Head[u]; i; i = E[i].nxt)\n\t\t{\n\t\t\tint v = E[i].v;\n\t\t\t--in[v];\n\t\t\tif (!in[v]) que[++tot] = v, vis[v] = 1;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tread(n); read(m); ed = n + m + 1;\n\tfor (rei i = 1; i <= n; i++)\n\t{\n\t\tint x, y; read(x); read(y);\n\t\ta[i][0] = x; a[i][1] = y;\n\t\tadd_edge(i, y + n, 1, 1); add_edge(y + n, i, 0, -1);\n\t\tadd_edge(i, x + n, 1, 0); add_edge(x + n, i, 0, 0);\n\t}\n\tfor (rei i = 1; i <= n; i++) add_edge(st, i, 1, 0), add_edge(i, st, 0, 0);\n\tfor (rei i = 1; i <= m; i++) add_edge(i + n, ed, 1, 0), add_edge(ed, i + n, 0, 0); \n\tans = Dinic(); printf(\"%d\\n\", n - ans); \n\tfor (rei i = 1; i <= n; i++) // \u9ea6\u7247\u88ab\u54ea\u53ea\u725b\u62ff\u8d70 \n\t{\n\t\tfor (rei j = head[i]; j; j = e[j].nxt)\n\t\t{\n\t\t\tint v = e[j].v;\n\t\t\tif (v <= n || v > m + n) continue;\n\t\t\tif (!e[j].w) bel[v - n] = i;\n\t\t}\n\t}\n\tfor (rei i = 1; i <= n; i++)\n\t{\n\t\tif (bel[a[i][0]] != i && bel[a[i][0]]) Add(bel[a[i][0]], i), ++in[i];  // \u6700\u559c\u6b22\u7684\u88ab\u62ff\u4e86 \n\t\tif (bel[a[i][1]] && bel[a[i][1]] != i && bel[a[i][0]] != i) Add(bel[a[i][1]], i), ++in[i]; // \u90fd\u88ab\u62ff\u4e86 \n\t\tif (bel[a[i][0]] == i && bel[a[i][1]] && bel[a[i][1]] != i && a[bel[a[i][1]]][0] != a[i][1]) Add(i, bel[a[i][1]]), ++in[bel[a[i][1]]]; // \u7b2c\u4e8c\u559c\u6b22\u88ab\u62ff\u4f46\u62ff\u5230\u6700\u559c\u6b22\u7684 \n\t}\n\tToposort();\n\tfor (rei i = 1; i <= tot; i++) printf(\"%d\\n\", que[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1649426081,
        "uid": 200930,
        "name": "\u30d9\u72d0\u4ed9\u59d0\u59d0\u3054",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P8095 [USACO22JAN] Cereal 2 S"
    }
]