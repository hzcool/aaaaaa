[
    {
        "content": "\u6b64\u9898\u663e\u7136\u6709**O\uff08n\uff09\u505a\u6cd5**\uff0c\u55b5\u55b5\u55b5\uff1f\n\n## \u89e3\u6cd5\uff1a\n\n\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u79cd\u989c\u8272\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n\u6211\u4eec\u8003\u8651\u628a\u6811\u4e2d\u8fd9\u79cd\u989c\u8272\u7684\u70b9\u90fd\u5220\u6389\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u5f88\u591a\u7684\u5c0f\u6811\uff0c\u8fd9\u4e9b\u5c0f\u6811\u4e2d\u7684\u70b9\u4e92\u76f8\u4e4b\u95f4\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u800c\u4e0d\u540c\u6811\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u79cd\u989c\u8272\uff0c\u70b9\u7684sum\u503c\u5c31\u662f **n - \u6240\u5728\u5c0f\u6811\u7684size**\u3002\n\n\u7531\u6b64\uff0c\u4e00\u4e2a\u70b9\u7684sum\u5c31\u662f n * \u989c\u8272\u6570 - \u6bcf\u79cd\u989c\u8272\u8282\u70b9\u65f6\u6240\u5728\u5c0f\u6811\u7684size\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u68f5\u5c0f\u6811\u7684size\uff0c\u5b58\u5728\u6df1\u5ea6\u6700\u5c0f\u7684\u8282\u70b9\u4e0a\uff0c\u90a3\u4e48\u540e\u9762\u5c31\u53ef\u4ee5\u7528**\u6811\u4e0a\u5dee\u5206**\u5b9e\u73b0\u8986\u76d6\u3002\n\n\u6c42size\uff0c\u5728\u56de\u6eaf\u65f6\u9047\u5230\u4e0e\u5f53\u524d\u989c\u8272\u76f8\u540c\u7684\u70b9\uff0c\u5c31\u628a\u6574\u4e00\u9897\u5b50\u6811\u7684\u8282\u70b9\u90fd\u5220\u6389\uff0c\u90a3\u4e48\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u5c31\u662f\uff0c** \u5b50\u6811\u7684size - \uff08\u5f53\u524d\u5220\u7684\u4e2a\u6570 - \u904d\u5386\u65f6\u5220\u7684\u4e2a\u6570\uff09**\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u989c\u8272\uff0c\u6240\u4ee5\u4e00\u4e2a\u8282\u70b9\u4f1a\u8bb0\u5f55\u4e00\u6b21\u7b54\u6848\uff0c**\u7279\u522b\u7684**\u6839\u8282\u70b9\u7684\u7236\u4eb2\u8bbe\u4e3a\u6240\u6709\u989c\u8272\u90fd\u6709\uff0c\u5168\u90e8\u7edf\u8ba1\u4e00\u4e0b\u3002\u7136\u540e\u5c31\u6811\u4e0a\u5dee\u5206\u4f20\u9012\u4e0b\u53bb\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5427\u3002\u3002\u3002\u55b5\u55b5\u6c6a!!!(~~\u5947\u4e11\u65e0\u6bd4~~)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long read()\n{\n\tchar ch=getchar();long long x=0,ff=1;\n\twhile(ch<'0'||ch>'9') {if(ch=='-') ff=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*ff;\n}\nvoid write(long long aa)\n{\n\tif(aa<0) putchar('-'),aa=-aa;\n\tif(aa>9) write(aa/10);\n\tputchar('0'+aa%10);\n\treturn;\n}\nlong long n,sum,qwq;\nlong long vis[100005],ans[100005];\nlong long tot,head[100005],nx[200005],to[200005];\nlong long col[100005],sz[100005],jian[100005]\uff1b\nlong long lz[100005],bj[100005];\nvoid jia(long long aa,long long bb)\n{\n\ttot++;\n\tnx[tot]=head[aa];\n\tto[tot]=bb;\n\thead[aa]=tot;\n\treturn;\n}\nvoid dfs(long long rt,long long fa)\n{\n\tsz[rt]=1;\n\tlong long tmp=jian[col[fa]];//\u904d\u5386\u65f6\u5220\u7684\u4e2a\u6570\n\tfor(long long i=head[rt];i;i=nx[i])\n\t{\n\t\tlong long yy=to[i];\n\t\tif(yy==fa) continue;\n\t\tdfs(yy,rt);\n\t\tsz[rt]+=sz[yy];\n\t}\n\tjian[col[rt]]++;//\u5220\u70b9\n\tif(fa)\n\t{\n\t\tlz[rt]=sz[rt]-jian[col[fa]]+tmp;//\u5b50\u6811\u7684size - \uff08\u5f53\u524d\u5220\u7684\u4e2a\u6570 - \u904d\u5386\u65f6\u5220\u7684\u4e2a\u6570\uff09\n\t\tjian[col[fa]]+=lz[rt];//\u5220\u70b9\n\t}\n}\nvoid getans(long long rt,long long fa)\n{\n\tlong long yuanbj=bj[col[fa]];\n\tqwq+=lz[rt]-bj[col[fa]];//\u5dee\u5206\u5566\n\tbj[col[fa]]=lz[rt];\n\tans[rt]=n*sum-qwq+bj[col[rt]];//\u81ea\u5df1\u989c\u8272\u7684\u663e\u7136\u662f\u4e0d\u80fd\u5220\u6389\u7684\n\tfor(long long i=head[rt];i;i=nx[i])\n\t{\n\t\tlong long yy=to[i];\n\t\tif(yy==fa) continue;\n\t\tgetans(yy,rt);\n\t}\n\tbj[col[fa]]=yuanbj;\n\tqwq-=lz[rt]-bj[col[fa]];//\u8fd8\u539f\u5566\n\treturn;\n}\nint main()\n{\n\tn=read();\n\tfor(long long i=1;i<=n;++i) \n\t{\n\t\tcol[i]=read();//col[i]<=100000,\u53ef\u80fd\u5927\u4e8en\u3002\u3002\u3002\u3002\n\t\tif(!vis[col[i]]) vis[col[i]]=1,sum++;//sum\u989c\u8272\u79cd\u7c7b\n\t}\n\tfor(long long i=1;i<n;++i) \n\t{\n\t\tlong long x=read(),y=read();\n\t\tjia(x,y);jia(y,x);\n\t}\n\tdfs(1,0);\n\tfor(long long i=1;i<=100000;++i) if(vis[i]) qwq+=n-jian[i],bj[i]=n-jian[i];//\u7279\u522b\u5904\u7406\u6839\u8282\u70b9\n\tgetans(1,0);\n\tfor(long long i=1;i<=n;++i) write(ans[i]),puts(\"\");\n\treturn 0;\n}\n```\n\u5927\u5bb6\u89c1\u8c05\uff0c\u8bb2\u5f97\u81ea\u5df1\u90fdqwq\u4e86\u3002\u3002\u3002",
        "postTime": 1544412395,
        "uid": 84156,
        "name": "sxd666888",
        "ccfLevel": 0,
        "title": "P2664 \u6811\u4e0a\u6e38\u620f"
    },
    {
        "content": "From SLYZ Leaves\n\n\u6ca1\u6709\u9898\u89e3\u5462\n\n\u4e8e\u662f\u6765\u5199\u4e00\u4efd\u3002\n\n\u6700\u521d\u770b\u5230\u8fd9\u4e2a\u9898\u662f\u7fa4\u91cc\u4e00\u4e2adalao\u5b89\u5229\u7684\u3002\n\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u79cd\u5904\u7406\u6811\u4e0a\u70b9\u5bf9\u3001nlogn\u53ef\u4ee5\u63a5\u53d7\u4e14\u5355\u6b21\u8be2\u95ee\u7684\u95ee\u9898\n\n\u80af\u5b9a\u662f\u70b9\u5206\u6cbb\u8dd1\u4e0d\u6389\u4e86\u3002\n\n\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u4f60\u6709\u4e00\u68f5\u6811\uff0c\u5982\u4f55\u5728O\uff08n\uff09\u7684\u5904\u7406\u51fa\uff0c\u4ee5\u6839\u4e3alca\u7684\u70b9\u5bf9\u7684\u7b54\u6848\uff1f\n\n\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff1a**\u5bf9\u4e8e\u6811\u4e2d\u7684\u4e00\u70b9\uff49\uff0c\u5982\u679c\u8be5\u70b9\u7684\u989c\u8272\u5728\u8be5\u70b9\u5230\u6839\u8fd9\u6761\u94fe\u4e0a\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u68f5\u6811\u7684\u5176\u4ed6\u70b9\uff4a\uff08\uff4a\u4e0e\uff49\u7684\uff4c\uff43\uff41\u4e3a\u6839\uff09\uff0c\u5747\u80fd\u4e0e\uff49\u7684\u5b50\u6811\uff08\u5305\u62ec\uff49\uff09\u7ec4\u6210\u70b9\u5bf9\uff0c\uff49\u7684\u989c\u8272\u4f1a\u5bf9\uff4a\u7684\u7b54\u6848\u8d21\u732esize[i]\u3002\uff08\u6211\u4eec\u5728\u6b64\u6682\u4e14\u4e0d\u8003\u8651\uff4a\u5230\u6839\u7684\u94fe\u4e0a\u662f\u5426\u51fa\u73b0\u4e86\uff49\u7684\u989c\u8272\uff09**\n\n\u8fd9\u4e2a\u6027\u8d28\u8fd8\u662f\u5f88\u597d\u8bc1\u660e\u7684\uff0c\u5927\u5bb6\u753b\u753b\u56fe\u5c31\u80fd\u770b\u61c2\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u505a\u4e86\uff1a\n\n\uff11.\u5bf9\u6811\u8fdb\u884c\u7b2c\u4e00\u904ddfs\uff0c\u9884\u5904\u7406size\u548c\u4e0a\u65b9\u6027\u8d28\u4e2d\u7684\u8d21\u732e\u3002\uff08\u5f00\u4e00\u4e2acolor\u6570\u7ec4\u5373\u53ef\u8bb0\u5f55\u8d21\u732e\uff09\uff0c\u540c\u65f6\u8bb0\u5f55\u8d21\u732e\u603b\u548csum\n\n\uff12.\u679a\u4e3e\u8ddf\u7684\u6240\u6709\u5b50\u6811\uff0c\u5148\u628a\u5b50\u6811\u626b\u4e00\u904d\u6e05\u9664\u5176\u5728color\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u8d21\u732e\u3002\u63a5\u7740\uff0c\u5bf9\u4e8e\u8be5\u5b50\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff4a\uff1a\n\n\u8bbe\uff38\uff1dsigma color[j \u5230\u6839\u4e0a\uff08\u4e0d\u5305\u62ec\u6839\uff09\u7684\u6240\u6709\u989c\u8272] \u7531\u4e8e\u8fd9\u4e9b\u989c\u8272\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u6211\u4eec\u4e0d\u80fd\u5728\u8be5\u5b50\u6811\u5916\u8ba1\u7b97\u5176\u8d21\u732e\uff09\n\n\u8bbenum\u4e3a\uff4a\u5230\u6839\u4e0a\uff08\u4e0d\u5305\u62ec\u6839\uff09\u7684\u989c\u8272\u6570\n\n\u8bbe\uff39\u4e3asize[root]-size[\u8be5\u5b50\u6811]\uff08\u5373\u6240\u6709\u5176\u4ed6\u5b50\u6811\uff0b\u6839\u7684\u70b9\u6570\uff09\n\n\u5219ans[j]+\uff1dsum-X+num\\*Y;\n\n\uff13.\u522b\u5fd8\u4e86\u8ba1\u7b97\u5355\u72ec\uff52\uff4f\uff4f\uff54\u7684\uff41\uff4e\uff53\n\n  \u3000\u3000ans[root]+=sum-color[\u6839\u7684\u989c\u8272]+size[root]\n\n\uff14\uff0e\u6e05\u7a7a\u8d21\u732e\u6570\u7ec4\u4ee5\u53ca\u5176\u4ed6\u4e1c\u897f\n\n  \n\u90a3\u4e48\u70b9\u5206\u6cbb\u5c31\u89e3\u51b3\u4e86\uff5e\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n    \n                \n                \n    \n    \n   \n   \n```cpp\n    #include<cstdio>\n    #include<cstring>\n    #include<iostream>\n    #include<algorithm>\n    #define o 200011\n    #define ll long long\n    using namespace std;\n    const int inf=1e8;\n    int head[o],nxt[o*2],point[o*2],V[o];\n    ll color[o],ans[o],much,sum,num,size[o],cnt[o],total,record;\n    int tot,n,ui,vi,root;\n    bool vis[o*2];\n    void addedge(int x,int y){\n        tot++;nxt[tot]=head[x];head[x]=tot;point[tot]=y;\n        tot++;nxt[tot]=head[y];head[y]=tot;point[tot]=x;\n    }\n    void findroot(int now,int dad){\n        size[now]=1;\n        ll maxson=0;\n        for(int tmp=head[now];tmp;tmp=nxt[tmp]){\n            int v=point[tmp];\n            if(v!=dad&&!vis[tmp]){\n                findroot(v,now);\n                size[now]+=size[v];\n                maxson=max(maxson,size[v]);\n            }\n        }\n        maxson=max(maxson,total-size[now]);\n        if(maxson<record) root=now,record=maxson;\n    }        \n    void dfs1(int now,int dad){\n        size[now]=1;\n        cnt[V[now]]++;\n        for(int tmp=head[now];tmp;tmp=nxt[tmp]){\n            int v=point[tmp];\n            if(!vis[tmp]&&v!=dad){\n                dfs1(v,now);\n                size[now]+=size[v];\n            }\n        }\n        if(cnt[V[now]]==1){\n            sum+=size[now];\n            color[V[now]]+=size[now];\n        } \n        cnt[V[now]]--;\n    }\n    void change(int now,int dad,int value){\n        cnt[V[now]]++; \n        for(int tmp=head[now];tmp;tmp=nxt[tmp]){\n            int v=point[tmp];\n            if(!vis[tmp]&&v!=dad) change(v,now,value);\n        }\n        if(cnt[V[now]]==1){\n            sum+=(ll)size[now]*value;\n            color[V[now]]+=(ll)size[now]*value;\n        } \n        cnt[V[now]]--;\n    }\n    void dfs2(int now,int dad){\n        cnt[V[now]]++;\n        if(cnt[V[now]]==1){\n            sum-=color[V[now]];\n            num++;\n        }\n        ans[now]+=sum+num*much;\n        for(int tmp=head[now];tmp;tmp=nxt[tmp]){\n            int v=point[tmp];\n            if(!vis[tmp]&&v!=dad) dfs2(v,now);\n        }    \n        if(cnt[V[now]]==1){\n            sum+=color[V[now]];\n            num--;\n        }\n        cnt[V[now]]--;\n    }\n    void clear(int now,int dad){\n        cnt[V[now]]=0;\n        color[V[now]]=0;\n        for(int tmp=head[now];tmp;tmp=nxt[tmp]){\n            int v=point[tmp];\n            if(!vis[tmp]&&v!=dad) clear(v,now);\n        }\n    }\n    void did(int now,int dad){\n        dfs1(now,dad);\n        ans[now]+=sum-color[V[now]]+size[now];\n        for(int tmp=head[now];tmp;tmp=nxt[tmp]){\n            int v=point[tmp];\n            if(!vis[tmp]&&v!=dad){\n                cnt[V[now]]++;\n                sum-=size[v];\n                color[V[now]]-=size[v];\n                change(v,now,-1);\n                cnt[V[now]]--;\n                much=size[now]-size[v];\n                dfs2(v,now);\n                cnt[V[now]]++;\n                sum+=size[v];\n                color[V[now]]+=size[v];\n                change(v,now,1);\n                cnt[V[now]]--;\n            }\n        }\n        sum=0;num=0;\n        clear(now,dad);\n    }\n    void solve(int now,int dad){\n        did(now,dad);\n        for(int tmp=head[now];tmp;tmp=nxt[tmp]){\n            int v=point[tmp];\n            if(!vis[tmp]&&v!=dad){\n                vis[tmp]=true;\n                vis[tmp^1]=true;\n                total=size[v];\n                record=inf;\n                findroot(v,now);\n                solve(root,0);\n            }\n        }\n    }\n    int main(){\n        tot=1;\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++) scanf(\"%d\",&V[i]);\n        for(int i=1;i<n;i++){\n            scanf(\"%d%d\",&ui,&vi);\n            addedge(ui,vi);\n        }\n        record=inf;\n        total=n;\n        findroot(1,0);\n        solve(root,0);\n        for(int i=1;i<=n;i++) printf(\"%lld\\n\",ans[i]);\n        return 0;\n    }\n\n```",
        "postTime": 1514467887,
        "uid": 24559,
        "name": "Treeloveswater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a<https://www.luogu.com.cn/problem/P2664>\n\n\u6709\u51e0\u7bc7 $\\mathcal O(n)$ \u89e3\u6cd5\u7684\u9898\u89e3\uff0c\u4f46\u662f\u90fd\u5199\u7684\u8fc7\u4e8e\u4e0d\u6e05\u6670\uff0c\u751a\u81f3\u6211\u4f1a\u4e86\u8fd8\u662f\u770b\u4e0d\u61c2\uff0c\u4e8e\u662f\u6211\u91cd\u65b0\u4ece\u5934\u5230\u5c3e\u8bb2\u4e00\u904d $\\mathcal O(n)$ \u7684\u7b97\u6cd5\uff0c\u5c3d\u91cf\u5305\u542b\u5230\u6bcf\u4e2a\u7ec6\u8282\u3002\u867d\u7136\u4e0d\u80fd\u5b8c\u5168\u786e\u5b9a\u6211\u7684\u548c\u5df2\u7ecf\u5728\u8fd9\u513f\u7684\u9898\u89e3\u5b8c\u5168\u4e00\u6837\uff0c\u4f46\u662f\u5927\u81f4\u80af\u5b9a\u90fd\u662f\u4e00\u6837\u7684\u3002\n\n\u5728\u672c\u7bc7\u9898\u89e3\u4e2d\uff0c\u79f0\u8282\u70b9 $i$ \u7684\u989c\u8272\u4e3a $a_i$\uff0c\u8282\u70b9 $i$ \u7684\u7b54\u6848\u4e3a $sum_i$\uff08\u5982\u9898\u9762\u4e2d\uff09\u3002\n\n\u9996\u5148\u5bf9\u6c42 $sum_i$ \u7684\u95ee\u9898\u505a\u51fa\u4e00\u4e2a\u8f6c\u6362\uff1a\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272 $c$\uff0c\u8ba1\u7b97\u6709\u591a\u5c11\u6761\u4ece $i$ \u51fa\u53d1\u7684\u8def\u5f84\u4e0d\u5305\u542b\u8fd9\u79cd\u989c\u8272\uff0c\u8bb0\u4e3a  $t_{i,c}$\uff08\u6b64\u5904\u770b $t$ \u6570\u7ec4\u662f $n^2$ \u7684\uff0c\u8fd9\u4e2a\u7591\u95ee\u4e0b\u9762\u518d\u89e3\u51b3\uff09\u3002\u90a3\u4e48 $n-t_{i,c}$ \u5c31\u662f\u6709\u591a\u5c11\u6761\u4ece $i$ \u51fa\u53d1\u7684\u8def\u5f84\u5305\u542b\u989c\u8272 $c$\u3002\u8fd9\u6bb5\u7684\u603b\u4f53\u601d\u60f3\u5c31\u662f\u8003\u8651\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\uff0c\u518d\u53cd\u8fc7\u6765\u7b97\u3002\n\n\u5bf9\u4e8e\u4e00\u79cd\u989c\u8272 $c$\uff0c\u5982\u679c\u5c06\u6240\u6709\u989c\u8272\u4e3a $c$ \u7684\u8282\u70b9\u5220\u9664\uff0c\u4e0e\u5b83\u8fde\u63a5\u7684\u8fb9\u4e5f\u5220\u9664\uff0c\u90a3\u4e48\u6574\u68f5\u6811\u4f1a\u65ad\u6210\u4e00\u4e9b\u5c0f\u7684\u8fde\u901a\u5757\uff08\u4e5f\u5c31\u662f\u5176\u4ed6\u9898\u89e3\u4e2d\u7684\u201c\u5c0f\u6811\u201d\uff09\u3002\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5b83\u5185\u90e8\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5728\u539f\u6811\u4e0a\u7684\u8def\u5f84\u90fd\u4e0d\u4f1a\u6709\u989c\u8272 $c$\u3002\u76f8\u53cd\u5730\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u70b9\uff0c\u5982\u679c\u5b83\u4eec\u5728\u4e0d\u540c\u7684\u8fde\u901a\u5757\u5185\uff0c\u90a3\u4e48\u5b83\u4eec\u4e4b\u95f4\u5728\u539f\u6811\u4e0a\u7684\u8def\u5f84\u4e2d\u4e00\u5b9a\u6709\u989c\u8272 $c$\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5927\u5c0f\u4e3a $s$ \u7684\u8fde\u901a\u5757\u4e2d\u7684\u6240\u6709\u70b9 $x$\uff0c\u9700\u8981\u628a $t_{x,c}$ \u52a0\u4e0a $s$\u3002\n\n\u5982\u679c\u7b2c\u4e00\u91cd\u5faa\u73af\u679a\u4e3e\u4e86\u4e00\u4e2a\u989c\u8272\uff0c\u90a3\u4e48\u4e0d\u7ba1\u600e\u6837\u90fd\u8981\u904d\u5386\u6574\u68f5\u6811\uff08\u5373\u4f7f\u6709\u4e0d\u904d\u5386\u7684\u65b9\u6cd5\u4e5f\u4f1a\u975e\u5e38\u590d\u6742\uff0c\u5927\u6982\u8fd9\u4e48\u89c9\u5f97\u5427\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u4e3a\u4e86 $\\mathcal O(n^2)$\uff0c\u4e0d\u80fd\u63a5\u53d7\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e00\u904d dfs \u4e2d\u540c\u65f6\u5904\u7406\u591a\u79cd\u989c\u8272\uff0c\u8ba1\u7b97\u591a\u79cd\u989c\u8272\u7684\u7b54\u6848\u3002\n\n\u8bbe\u5f53\u524d\u679a\u4e3e\u5230\u4e86\u8282\u70b9 $x$\uff0c\u5b83\u6709\u82e5\u5e72\u5b50\u8282\u70b9 $y_1,y_2,\\cdots$\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u5220\u9664\u6389\u6240\u6709\u989c\u8272\u4e3a $a_x$ \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e9b\u8fde\u901a\u5757\u7684\u201c\u9876\u90e8\u201d\u662f $y_1,y_2,\\cdots$\u3002\u4e0b\u9762\u7684\u56fe\u8868\u793a\u4e86\u4e00\u4e2a\u5b50\u8282\u70b9 $y$ \u7684\u60c5\u51b5\u3002\u7ea2\u8272\u5708\u8d77\u6765\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u4ee5 $y$ \u4e3a\u9876\u90e8\u7684\u8fde\u901a\u5757\uff0c\u5b83\u7684\u5927\u5c0f\u662f $y$ \u7684\u5b50\u6811\u5927\u5c0f\u51cf\u53bb $y$ \u7684\u5b50\u6811\u4e2d\u6240\u6709\u989c\u8272\u4e3a $c$ \u7684\u5b50\u6811\u7684\u5927\u5c0f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u8282\u70b9\u53ea\u5904\u7406\u4e00\u4e2a\u989c\u8272\uff0c\u5373\u5f53\u524d\u8282\u70b9\u7684\u989c\u8272\uff0c\u4e5f\u53ea\u9700\u8981\u5904\u7406\u8fd9\u4e2a\u989c\u8272\u3002\u5982\u679c\u6ca1\u61c2\u7684\u8bdd\u89c1\u4ee3\u7801\u5b9e\u73b0\u96be\u70b9\u7684\u90e8\u5206\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dtvsfg9m.png)\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u80fd\u5728\u4e00\u904d dfs \u4e2d\u77e5\u9053\u9700\u8981\u7ed9 $t$ \u6570\u7ec4\u7684\u54ea\u4e9b\u4f4d\u7f6e\u52a0\u4e0a\u4ec0\u4e48\u6570\u3002\u4e0b\u9762\u8981\u89e3\u51b3\u7684\u5c31\u662f\u4f18\u5316\u6389 $t$ \u7684\u4e00\u7ef4\u5e76\u4e14\u5feb\u901f\u505a\u52a0\u6cd5\u3002\n\n\u5728\u6700\u540e\uff0c$sum_i$ \u662f\uff08$m$ \u4e3a\u989c\u8272\u79cd\u6570\uff09\uff1a\n$$\\sum_{c=1}^m(n-t_{i,c})=nm-\\sum_{c=1}^mt_{i,c}$$\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u4e00\u4e2a $i$\uff0c\u6c42\u51fa\u6240\u6709\u989c\u8272\u7684\u7b54\u6848\u7684\u548c\u5c31\u884c\u4e86\u3002\u8bb0\u4e3a $t_i$\u3002\u4e0b\u9762\u91c7\u7528\u6811\u4e0a\u5dee\u5206\uff1a\u8bbe\u6211\u4eec dfs \u5230\u4e86 $x$\uff0c\u679a\u4e3e\u5230\u4e86\u5b50\u8282\u70b9 $y$\uff08\u4e5f\u5c31\u662f\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u9876\u662f $y$\uff09\uff0c\u8fde\u901a\u5757\u7684\u5927\u5c0f\u4e3a $s$\uff0c\u90a3\u4e48\u5728\u8282\u70b9 $y$ \u5904\u52a0 $s$\uff0c\u5b50\u6811\u5185\u6700\u9760\u4e0a\u7684\u989c\u8272\u4e3a $c$ \u7684\u8282\u70b9\u5904\u51cf $c$\u3002\u4f60\u80af\u5b9a\u6ca1\u770b\u61c2\uff0c\u770b\u4e0b\u56fe\uff08\u5982\u4f55\u6c42\u7b54\u6848\u3001\u6b63\u786e\u6027\u3001\u590d\u6742\u5ea6\u8bc1\u660e\u7b49\u5728\u56fe\u4e0b\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lyxrodc9.png)\n\n\u6700\u540e $t_x$ \u662f\u4ece $x$ \u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u5dee\u5206\u503c\u7684\u548c\u3002\u8fd9\u6837\uff0c\u4e0a\u56fe\u4e2d\u90a3\u4e9b $c$ \u7684\u5b50\u6811\u5185\u5c31\u4e0d\u4f1a\u53d7\u5230\u8fd9\u4e2a\u8fde\u901a\u5757\u5e26\u6765\u7684\u8d21\u732e\uff08\u62b5\u6d88\u4e86\uff09\uff0c$x$ \u53ca\u5916\u9762\u66f4\u4e0d\u4f1a\u53d7\u5230\u8d21\u732e\uff08$x$ \u786e\u5b9e\u4e0d\u5e94\u8be5\u53d7\u5230\u8d21\u732e\uff09\u3002\n\n\u6709\u5173\u8fd9\u4e2a\u89e3\u6cd5\u7684\u590d\u6742\u5ea6\uff0c\u770b\u8d77\u6765\u4e00\u4e2a\u4e00\u4e2a\u7ed9 $y$ \u5b50\u6811\u5185\u7684 $c$ \u6253\u6807\u8bb0\u5f88\u6162\uff0c\u5176\u5b9e\uff0c\u5728\u4e00\u4e2a\u8282\u70b9\u4ee5\u201c$c$\u201d\u7684\u8eab\u4efd\u88ab\u6253\u8fc7\u6807\u8bb0\u540e\u5c31\u518d\u4e5f\u4e0d\u4f1a\u4ee5\u201c$c$\u201d\u7684\u8eab\u4efd\u88ab\u6253\u6807\u8bb0\u4e86\u3002\u4ee5\u201c$y$\u201d\u7684\u8eab\u4efd\u6253\u6807\u8bb0\u4e5f\u663e\u7136\u53ea\u4f1a\u6709\u4e00\u6b21\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $\\mathcal O(n)$ \u7684\u3002\u81f3\u6b64\uff0c\u8fd9\u4e2a\u95ee\u9898\u88ab\u5b8c\u7f8e\u89e3\u51b3\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u8fd8\u6709\u51e0\u4e2a\u4e0d\u592a\u597d\u5904\u7406\u7684\u7ec6\u8282\uff1a\n- \u5982\u4f55\u5feb\u901f\u8ba1\u7b97 $y$ \u7684\u5b50\u6811\u5185\u90a3\u4e9b\u5982\u56fe\u4e2d $c$ \u7684\u5b50\u6811\u5927\u5c0f\u7684\u548c\uff0c\u4e5f\u5c31\u662f\u8fde\u901a\u5757\u76f8\u6bd4 $y$ \u7684\u5b50\u6811\u7f3a\u5931\u7684\u90e8\u5206\u3002\u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4ee5\u989c\u8272\u4e3a\u4e0b\u6807\u5f00\u4e00\u4e2a\u6876 $b_x$\uff08\u5373\u4ee3\u7801\u4e2d\u7684 `colsiz[x]`\uff09\u8bb0\u5f55\u90a3\u4e9b\u6781\u5927\u7684\u3001\u6839\u8282\u70b9\u7684\u989c\u8272\u4e3a $x$ \u7684\u5b50\u6811\u5927\u5c0f\u548c\u3002\u5728 dfs \u5230 $x$\uff0c\u51c6\u5907\u9012\u5f52\u8fdb\u5165\u5b83\u7684\u4e00\u4e2a\u513f\u5b50 $y$ \u524d\u8bb0\u5f55\u4e0b $b_{a_x}$ \u7684\u503c\uff08\u4ee3\u7801\u4e2d\u7684 `psiz`\uff09\uff0c\u5728\u56de\u6765\u65f6\u6bd4\u8f83\u4e00\u4e0b\u73b0\u5728\u7684 $b_{a_x}$ \u4e0e\u4e4b\u524d\u7684 $b_{a_x}$\uff0c\u5dee\u5c31\u662f\u8fde\u901a\u5757\u76f8\u6bd4 $y$ \u7684\u5b50\u6811\u7f3a\u5931\u7684\u90e8\u5206\u7684\u5927\u5c0f\u3002\n- \u5bf9\u4e8e\u4e0a\u9762\u7684 $b$\uff08`colsiz`\uff09\u6570\u7ec4\u7684\u66f4\u65b0\uff0c\u5728\u6bcf\u4e00\u4e2a\u513f\u5b50 $y$ \u7b97\u51fa\u8fde\u901a\u5757\u7684\u5927\u5c0f $s$\uff08\u4ee3\u7801\u4e2d\u7684 `nsiz`\uff09\u65f6\uff0c\u90fd\u5c06 $b_{a_x}$ \u52a0\u4e0a $s$\u3002\u6700\u540e\u5728\u679a\u4e3e\u5b8c\u513f\u5b50\u540e\u518d\u52a0 $1$\uff08\u8282\u70b9 $x$\uff09\u3002\n- \u5728\u6253\u5dee\u5206\u6807\u8bb0\u65f6\uff0c\u5982\u4f55\u627e\u51fa $y$ \u5b50\u6811\u5185\u5982\u56fe\u4e2d\u7684\u90a3\u4e9b $c$ \u8282\u70b9\u6253\u4e0a\u51cf\u7684\u6807\u8bb0\u3002\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272 $c$ \u5f00\u4e00\u4e2a `vector`\uff08\u4ee3\u7801\u4e2d\u7684 `v[c]`\uff09\uff0c\u8bb0\u5f55\u4e0b\u6240\u6709\uff08\u4e0d\u7ba1\u662f\u5426\u5728 $y$ \u7684\u5b50\u6811\uff09\u6839\u8282\u70b9\u989c\u8272\u4e3a $c$ \u4e14\u6781\u5927\u7684\u5b50\u6811\u7684\u6839\u8282\u70b9\u3002\u5728\u9700\u8981\u6253\u6807\u8bb0\u65f6\uff0c\u7531\u4e8e\u521a\u521a\u9012\u5f52\u8fdb $y$ \u7684\u5b50\u6811\uff0c\u6240\u4ee5 $y$ \u7684\u5b50\u6811\u5185\u90a3\u4e9b\u9700\u8981\u6253\u6807\u8bb0\u7684\u8282\u70b9\u80af\u5b9a\u5728 $v_{a_x}$ \u4e2d\u7684\u6700\u524d\u9762\u3002\u4ece $v_{a_x}$ \u7684\u540e\u9762\u5f80\u524d\u9762\u5faa\u73af\uff0c\u4f7f\u7528 dfs \u5e8f\u5224\u65ad\u662f\u5426\u5728 $y$ \u7684\u5b50\u6811\u5185\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u5c31\u6253\u4e0a\u6807\u8bb0\u5e76\u7531\u4e8e\u5b83\u4e0d\u518d\u6781\u5927\u4e86\uff0c\u6267\u884c `pop_back`\u3002\u5728\u5faa\u73af\u5b8c\u6240\u6709\u5b50\u8282\u70b9\u540e\uff0c\u5c06 $x$ \u538b\u8fdb $v_{a_x}$ \u4e2d\u5373\u53ef\u3002\n- \u5728\u7b2c\u4e00\u904d dfs \u6267\u884c\u5b8c\u540e\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\u8fd8\u5269\u4e0b\u6839\u8282\u70b9\u90a3\u513f\u7684\u4e00\u4e2a\u8fde\u901a\u5757\u3002\u5229\u7528\u5f53\u524d\u8bb0\u5f55\u4e0b\u7684 `colsiz[c]`\uff0c`v[c]` \u7b49\u4fe1\u606f\u5728\u4e3b\u51fd\u6570\u5185\u6253\u6807\u8bb0\u5373\u53ef\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct edge\n{\n\tint to,nxt;\n}e[200005];\nint h[100005],a[100005],dfn[100005],siz[100005],colsiz[100005],cnt;\nlong long cf[100005],dep[100005];\nbool buc[100005];\nvector<int>v[100005];\ninline int read()\n{\n\tchar c=getchar();\n\tint x=0;\n\twhile(c<'0'||c>'9')\n\t\tc=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x;\n}\nvoid write(long long x)\n{\n\tif(x>9)\n\t\twrite(x/10);\n\tputchar(x%10+'0');\n}\ninline void adde(int x,int y)\n{\n\te[++cnt].to=y;\n\te[cnt].nxt=h[x];\n\th[x]=cnt;\n}\nvoid dfs(int x,int f)\n{\n\tsiz[x]=1;\n\tdfn[x]=++cnt;\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t\tif(e[i].to!=f)\n\t\t{\n\t\t\tint psiz=colsiz[a[x]];//\u8bb0\u5f55\u4e0b\u9012\u5f52\u524d\u7684\u4e2a\u6570\n\t\t\tdfs(e[i].to,x);\n\t\t\tsiz[x]+=siz[e[i].to];\n\t\t\tint nsiz=siz[e[i].to]+psiz-colsiz[a[x]];//\u6b64\u5904\u610f\u4e3asiz[e[i].to]-(colsiz[a[x]]-psiz)\n\t\t\tcolsiz[a[x]]+=nsiz;\n\t\t\tcf[e[i].to]+=nsiz;//\u6253\u4e0a\u52a0\u7684\u6807\u8bb0\n\t\t\twhile(v[a[x]].size()&&dfn[v[a[x]].back()]>dfn[x])//\u4ece\u540e\u5f80\u524d\u627e\n\t\t\t{\n\t\t\t\tcf[v[a[x]].back()]-=nsiz;\n\t\t\t\tv[a[x]].pop_back();\n\t\t\t}\n\t\t}\n\tcolsiz[a[x]]++;\n\tv[a[x]].push_back(x);\n}\nvoid dfs2(int x,int f)//\u6839\u636e\u5dee\u5206\u6570\u7ec4\u8ba1\u7b97\u6700\u7ec8\u7b54\u6848\n{\n\tdep[x]=dep[f]+cf[x];\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t\tif(e[i].to!=f)\n\t\t\tdfs2(e[i].to,x);\n}\nint main()\n{\n\tint n=read(),m=0,tot=0,i,x,y;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tm=max(m,a[i]);\n\t\tbuc[a[i]]=true;//\u8bb0\u5f55\u4e00\u4e2a\u989c\u8272\u662f\u5426\u51fa\u73b0\u5728a[i]\u4e2d\n\t}\n\tfor(i=1;i<n;i++)\n\t{\n\t\tx=read();\n\t\ty=read();\n\t\tadde(x,y);\n\t\tadde(y,x);\n\t}\n\tcnt=0;\n\tdfs(1,0);\n\tfor(i=1;i<=m;i++)//\u5904\u7406\u5305\u542b1\u7684\u90a3\u4e9b\u8fde\u901a\u5757\n\t\tif(buc[i])\n\t\t{\n\t\t\ttot++;\n\t\t\tcf[1]+=n-colsiz[i];\n\t\t\tfor(int j=0;j<v[i].size();j++)\n\t\t\t\tcf[v[i][j]]-=n-colsiz[i];\n\t\t}\n\tdfs2(1,0);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\twrite(1ll*n*tot-dep[i]);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626103593,
        "uid": 150522,
        "name": "b6e0_",
        "ccfLevel": 9,
        "title": "P2664 \u6811\u4e0a\u6e38\u620f \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u70b9\u5206\u6cbb\uff0c\u5bf9\u4e8e\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3\uff0c\u7edf\u8ba1\u51fa\u5b83\u81ea\u5df1\u51fa\u53d1\u5230\u5206\u6cbb\u5757\u5185\u7684\u6240\u6709\u8def\u5f84\u5bf9\u81ea\u5df1\u7b54\u6848\u7684\u8d21\u732e\uff0c\u548c\u7ecf\u8fc7\u5b83\u7684\u8def\u5f84\u5bf9\u5f53\u524d\u5206\u6cbb\u5757\u5185\u70b9\u7684\u8d21\u732e\u3002\u81ea\u5df1\u51fa\u53d1\u5230\u5206\u6cbb\u5757\u5185\u7684\u6240\u6709\u8def\u5f84\u5bf9\u81ea\u5df1\u7b54\u6848\u7684\u8d21\u732e\u5f88\u597d\u6c42\uff0c\u73b0\u5728\u8003\u8651\u600e\u4e48\u6c42\u7ecf\u8fc7\u5b83\u7684\u8def\u5f84\u5bf9\u5f53\u524d\u5206\u6cbb\u5757\u5185\u70b9\u7684\u8d21\u732e\u3002\n\n    \n\u6211\u4eec\u5bf9\u4e8e\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3\u7684\u6bcf\u4e00\u4e2a\u5b50\u6811\u5206\u522b\u8003\u8651\uff0c\u4ee4$cnt[i]$\u4e3a\u4ece\u5206\u6cbb\u4e2d\u5fc3\u51fa\u53d1\u7684\u8fdb\u5165\u5176\u4ed6\u5b50\u6811\u7684\u6240\u6709\u8def\u5f84\u4e2d\uff0c\u5305\u542b\u989c\u8272$i$\u7684\u8def\u5f84\u6761\u6570\uff0c$size$\u4e3a\u9664\u4e86\u8be5\u5b50\u6811\u5916\u5f53\u524d\u5206\u6cbb\u5757\u5185\u6240\u6709\u7684\u70b9\u7684\u4e2a\u6570\u3002\u90a3\u4e48\uff0c\u6211\u4eecdfs\u8fd9\u68f5\u5b50\u6811\u8ba1\u7b97\u8d21\u732e\uff0c\u5047\u8bbe\u5f53\u524ddfs\u5230$x$\uff0c\u9996\u5148\u7ed9$sum_x$\u52a0\u4e0a$\\sum cnt[i]$\uff0c\u5373\u6240\u6709\u5728\u5176\u4ed6\u5b50\u6811\u4e2d\u51fa\u73b0\u7684\u989c\u8272\u7684\u8d21\u732e\u603b\u548c\uff0c\u7136\u540e\u8ba1\u7b97$x$\u5230\u5206\u6cbb\u4e2d\u5fc3\u7684\u8def\u5f84\u4e0a\u989c\u8272\u7684\u8d21\u732e\u3002\n\n    \n\u5bf9\u4e8e\u4e00\u4e2a\u51fa\u73b0\u5728\u5206\u6cbb\u4e2d\u5fc3\u5230$x$\u7684\u8def\u5f84\u4e0a\u7684\u989c\u8272$c$\uff0c\u5b83\u5bf9$x$\u7684\u8d21\u732e\u4e3a$size-cnt[c]$\uff0c\u56e0\u4e3a$c$\u5df2\u7ecf\u5728\u4e00\u4e9b\u8def\u5f84\u4e0a\u51fa\u73b0\uff0c\u5b83\u73b0\u5728\u80fd\u4ea7\u751f\u7684\u989d\u5916\u8d21\u732e\u4e3a\u5b83\u539f\u6765\u6ca1\u6709\u51fa\u73b0\u7684\u8def\u5f84\u6761\u6570\u3002\u6240\u4ee5\u6211\u4eec\u7ed9$sum_x$\u8fd8\u8981\u52a0\u4e0a$size-cnt[c]$\u3002\u540c\u65f6$c$\u4e5f\u4f1a\u5bf9$x$\u7684\u5b50\u6811\u5185\u6240\u6709\u70b9\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8d21\u732e\u8981\u50cf\u6807\u8bb0\u4e00\u6837\u5f80\u4e0b\u4f20\u9012\uff0c\u7136\u540e\u6807\u8bb0\u4e00\u4e0b$c$\u7684\u8d21\u732e\u5df2\u7ecf\u88ab\u8ba1\u7b97\u8fc7\uff0c\u5f80\u4e0bdfs\u65f6\u5c31\u4e0d\u7528\u518d\u6b21\u8ba1\u7b97\u4e86\u3002\n\n\n\u6240\u4ee5\u53ea\u9700\u8981\u5bf9\u4e8e\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3\u6c42\u51fa$cnt$\u6570\u7ec4\u548c\u6bcf\u68f5\u5b50\u6811\u7684$size$\uff0c\u8fdb\u5165\u4e00\u68f5\u5b50\u6811\u65f6\u51cf\u53bb\u5b50\u6811\u81ea\u5df1\u5185\u90e8\u5bf9$cnt$\u4ea7\u751f\u7684\u8d21\u732e\u3002\u540c\u65f6\u4e3a\u4e86\u9632\u6b62\u590d\u6742\u5ea6\u9000\u5316\uff0c\u6211\u4eec\u4e0d\u80fd\u5bf9\u4e8e\u6240\u6709\u989c\u8272\u6c42$cnt$\uff0c\u8981\u5148\u7edf\u8ba1\u4e00\u4e0b\u5f53\u524d\u5206\u6cbb\u5757\u5185\u6709\u54ea\u4e9b\u989c\u8272\u51fa\u73b0\u4e86\uff0c\u8fd9\u6837\u679a\u4e3e\u5757\u5185\u6240\u6709\u989c\u8272\u7684\u590d\u6742\u5ea6\u624d\u662fO(\u5206\u6cbb\u5757\u5927\u5c0f)\u3002\n\n    \n\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\n#define For(i,_beg,_end) for(int i=(_beg),i##end=(_end);i<=i##end;++i)\n#define Rep(i,_beg,_end) for(int i=(_beg),i##end=(_end);i>=i##end;--i)\n\ntemplate<typename T>T Max(const T &x,const T &y){return x<y?y:x;}\ntemplate<typename T>T Min(const T &x,const T &y){return x<y?x:y;}\ntemplate<typename T>int chkmax(T &x,const T &y){return x<y?(x=y,1):0;}\ntemplate<typename T>int chkmin(T &x,const T &y){return x>y?(x=y,1):0;}\ntemplate<typename T>void read(T &x){\n    T f=1;char ch=getchar();\n    for(;ch<'0'||ch>'9';ch=getchar())if(ch=='-')f=-1;\n    for(x=0;ch>='0'&&ch<='9';ch=getchar())x=x*10+ch-'0';\n    x*=f;\n}\n\ntypedef long long LL;\nconst int maxn=100010,inf=0x7fffffff;\nstruct edge{\n    int to,nxt;\n}e[maxn<<1];\nint n,num,head[maxn],c[maxn];\nint f[maxn],size[maxn],Size,root;\nint has[maxn],col[maxn],top,cl[maxn],tp;\nLL sum[maxn],res[maxn],cnt[maxn],ct[maxn],cct[maxn],path,tot;\nbool vis[maxn],exist[maxn];\n\nvoid addedge(int,int);\nvoid get_sum(int,int);//\u8ba1\u7b97\u5b50\u6811\u5927\u5c0f\nvoid get_root(int,int);//\u8ba1\u7b97\u91cd\u5fc3\nvoid Dfs(int,int,LL*);//\u7edf\u8ba1\u54ea\u4e9b\u989c\u8272\u51fa\u73b0\u8fc7\uff0c\u540c\u65f6\u8ba1\u7b97cnt\u6570\u7ec4\nvoid Modify(int,int,LL);//\u66f4\u65b0\u5b50\u6811\u7684\u7b54\u6848\nvoid Calc(int);//\u5bf9\u4e8e\u5206\u6cbb\u4e2d\u5fc3\u7edf\u8ba1\u7b54\u6848\nvoid Solve(int);//\u70b9\u5206\u6cbb\n\nint main(){\n    read(n);\n    For(i,1,n) read(c[i]);\n    For(i,1,n-1){\n        int u,v;\n        read(u);read(v);\n        addedge(u,v);\n    }\n    Solve(1);\n    For(i,1,n) printf(\"%lld\\n\",sum[i]);\n    return 0;\n}\n\nvoid Calc(int x){\n    get_sum(x,Size=0);\n    \n    tot=top=0;\n    Dfs(x,0,cnt);\n    For(i,1,top) exist[col[i]]=false;//\u8981\u53ca\u65f6\u8fd8\u539f\u6807\u8bb0\u6570\u7ec4\n    For(i,1,tp=top){\n        tot+=cnt[cl[i]=col[i]];\n        cct[col[i]]=cnt[col[i]];\n    }\n    \n    sum[x]+=tot;\n    LL temp=tot;\n    \n    for(int i=head[x];i;i=e[i].nxt) if(!vis[e[i].to]){\n        \n        has[c[x]]=1;top=0;\n        Dfs(e[i].to,x,ct);\n        has[c[x]]=0;\n        For(j,1,top) exist[col[j]]=false;\n        \n        cnt[c[x]]-=size[e[i].to];\n        tot-=size[e[i].to];\n        For(j,1,top){\n            cnt[col[j]]-=ct[col[j]];\n            tot-=ct[col[j]];\n        }\n        \n        path=size[x]-size[e[i].to];\n        Modify(e[i].to,x,0);\n        \n        cnt[c[x]]+=size[e[i].to];\n        tot=temp;\n        For(j,1,top){\n            cnt[col[j]]=cct[col[j]];\n            ct[col[j]]=0;\n        }\n    }\n    \n    For(i,1,tp) cnt[cl[i]]=0;//\u8fd8\u539f\u6570\u7ec4\n    vis[x]=true;\n}\nvoid Modify(int x,int fa,LL lst){//lst\u4e3a\u4e4b\u524d\u4e0b\u4f20\u4e0b\u6765\u7684\u8d21\u732e\u548c\n    LL tag=lst;\n    if(++has[c[x]]==1) tag+=path-cnt[c[x]];\n    sum[x]+=tot+tag;\n    for(int i=head[x];i;i=e[i].nxt){\n        if(e[i].to==fa||vis[e[i].to]) continue;\n        Modify(e[i].to,x,tag);\n    }\n    has[c[x]]--;\n}\nvoid Dfs(int x,int fa,LL *cnt){\n    if(!exist[c[x]]) col[++top]=c[x],exist[c[x]]=true;\n    if(++has[c[x]]==1) cnt[c[x]]+=size[x];\n    for(int i=head[x];i;i=e[i].nxt){\n        if(e[i].to==fa||vis[e[i].to]) continue;\n        Dfs(e[i].to,x,cnt);\n    }\n    has[c[x]]--;\n}\nvoid Solve(int x){\n    Calc(x);\n    for(int i=head[x];i;i=e[i].nxt) if(!vis[e[i].to]){\n        f[Size=root=0]=inf;\n        get_sum(e[i].to,x);\n        get_root(e[i].to,x);\n        Solve(root);\n    }\n}\nvoid get_sum(int x,int fa){\n    Size++;size[x]=1;\n    for(int i=head[x];i;i=e[i].nxt){\n        if(e[i].to==fa||vis[e[i].to]) continue;\n        get_sum(e[i].to,x);\n        size[x]+=size[e[i].to];\n    }\n}\nvoid get_root(int x,int fa){\n    f[x]=0;\n    for(int i=head[x];i;i=e[i].nxt){\n        if(e[i].to==fa||vis[e[i].to]) continue;\n        get_root(e[i].to,x);\n        chkmax(f[x],size[e[i].to]);\n    }\n    chkmax(f[x],Size-size[x]);\n    if(f[x]<f[root]) root=x;\n}\nvoid addedge(int u,int v){\n    e[++num].to=v;e[num].nxt=head[u];head[u]=num;\n    e[++num].to=u;e[num].nxt=head[v];head[v]=num;\n}\n```",
        "postTime": 1517361162,
        "uid": 20176,
        "name": "Salamander",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "[P2664 \u6811\u4e0a\u6e38\u620f](https://www.luogu.org/problemnew/show/P2664)\n\n\u4e00\u9053\u9ed1\u9898\uff0c\u96be\u5ea6\u540d\u526f\u5176\u5b9e\u3002\n\n\u4e0b\u9762\u7b80\u8ff0\u6211\u7684\u505a\u6cd5\u3002\n\n\u6211\u7684\u505a\u6cd5\u53ef\u80fd\u76f8\u5f53\u52a3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\text{O}(n \\log n)$\uff0c\u6bd4\u4e0d\u8fc7$\\text{O}(n)$\u7684\u65b9\u6cd5\uff1b\u800c\u4e14\u4ee3\u7801\u6bd4\u8f83\u957f\uff0c\u8fbe\u5230\u4e86$210$\u884c\uff08\u5e26\u6ce8\u91ca$242$\u884c\uff09\uff1b\u4f7f\u7528\u4e86\u5f88\u591a\u6b21$\\mathrm{dfs}$\uff0c\u5e38\u6570\u4e5f\u4e0d\u591f\u4f18\u3002\u4f46\u662f\u4e5f\u8bb8\u6211\u7684\u601d\u8def\u4f1a\u5bf9\u60a8\u6709\u6240\u542f\u53d1\u3002\n\n\u770b\u5230\u6811\u4e0a\u201c\u8def\u5f84\u201d\uff0c\u4e14\u6811\u5f62$\\text{dp}$\u4e0d\u597d\u5904\u7406\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4f7f\u7528\u70b9\u5206\u6cbb\u3002\n\n\u201c\u989c\u8272\u6570\u201d\u4e00\u76f4\u662f\u96be\u4ee5\u5904\u7406\u7684\u7edf\u8ba1\u91cf\uff0c\u8fd9\u4e2a\u7edf\u8ba1\u91cf\u963b\u6b62\u4e86\u6211\u4eec\u76f4\u63a5\u5bf9\u201c\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u201d\u8fdb\u884c\u5408\u5e76\uff0c\u800c\u5fc5\u987b\u8003\u8651\u5176\u4ed6\u7684\u65b9\u6cd5\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5206\u6cbb\u5230\u539f\u6811\u7684\u67d0\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u6211\u4eec\u5f53\u524d\u53ea\u8003\u8651\u7ecf\u8fc7\uff08\u5206\u6cbb\u7684\uff09\u6839\uff08\u5373\u5f53\u524d\u91cd\u5fc3\uff0c\u4e0d\u59a8\u8bb0\u4e3a$\\mathrm{root}$\uff09\u7684\u8def\u5f84\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981\u601d\u8003\u4e24\u4e2a\u95ee\u9898\uff1a\n\n1. \u5982\u4f55\u8ba1\u7b97\u5f53\u524d\u5206\u6cbb\u533a\u57df\u5185\u6839\u7684\u7b54\u6848\uff1f\n2. \u5982\u4f55\u8ba1\u7b97\u5f53\u524d\u5206\u6cbb\u533a\u57df\u5185\u5176\u4ed6\u70b9\u7684\u7b54\u6848\uff1f\n\n\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u4eec\u628a\u6839\u7684\u989c\u8272\u5355\u72ec\u62ff\u51fa\u6765\u8ba8\u8bba\u3002  \n\u5bf9\u4e8e\u6839\u672c\u8eab\uff0c\u6839\u7684\u989c\u8272\u7684\u8d21\u732e\u662f$\\mathrm{size}(\\mathrm{root})$\uff1b\u5bf9\u4e8e\u6839\u7684\u4efb\u4f55\u4e00\u4e2a\u5b50\u5b59\u9876\u70b9\uff0c\u6839\u7684\u989c\u8272\u7684\u8d21\u732e\u662f$\\mathrm{size}(\\mathrm{root})-\\mathrm{size}(\\mathrm{branch})$\uff0c\u5176\u4e2d$\\mathrm{branch}$\u662f\u6307\u8be5\u8282\u70b9\u6240\u5728\u7684\u6839\u7684\u5b50\u6811\u3002  \n\u63a5\u4e0b\u6765\uff0c\u5982\u679c\u9047\u5230\u4e0e\u6839\u540c\u8272\u7684\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u5f53\u4f5c\u65e0\u8272\u5904\u7406\u3002\n\n\u7b2c\u4e00\u4e2a\u95ee\u9898\u6bd4\u8f83\u5bb9\u6613\u89e3\u51b3\u3002\n\n\u5047\u8bbe\u6211\u4eec\u4ece\u6839\u8d70\u5230**\u67d0\u4e00**\u5b50\u5b59\u8282\u70b9\uff0c\u5728\u8d70\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u67d0\u79cd**\u65b0**\u989c\u8272\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u7b54\u6848\u5c31\u5e94\u8be5$+1$\u3002\u4e5f\u5373\u6211\u4eec\u7edf\u8ba1\u7684\u601d\u8def\u662f\uff0c\u53ea\u5728\u989c\u8272\u7b2c\u4e00\u6b21\u51fa\u73b0\u65f6\u8ba1\u7b97\u3002  \n\u5982\u679c\u5728$\\mathrm{root}\\rightarrow x$\u7684\u8def\u5f84\u4e0a\uff0c$\\mathrm{color}(x)$\u53ea\u51fa\u73b0\u4e00\u6b21\uff08\u5373$x$\u7684\u7956\u5148\u90fd\u4e0e$x$\u4e0d\u540c\u8272\uff09\uff0c\u90a3\u4e48\u7956\u5148\u5230\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u7684\u8def\u5f84\u4e0a\u90fd\u4f1a\u51fa\u73b0$\\mathrm{color}(x)$\uff0c\u4e14\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u662f$x$\u3002\u4ece\u800c\uff0c$x$\u5bf9\u6839\u7684\u7b54\u6848\u7684\u8d21\u732e\u4e3a$x$\u6240\u5728\u5b50\u6811\u5185\u9876\u70b9\u7684\u4e2a\u6570\uff0c\u5373$\\mathrm{size}(x)$\u3002\u5426\u5219\u5982\u679c$x$\u4e0e\u67d0\u4e00\u7956\u5148\u540c\u8272\uff0c\u90a3\u4e48$x$\u7684\u989c\u8272\u5c31\u4e0d\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5bf9\u6839\u7684\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u3002   \n\u4e0d\u59a8\u8bbe\u8282\u70b9$x$\u7684\u4e0a\u8ff0\u8d21\u732e\u4e3a$f(x)$\uff0c\u90a3\u4e48$f(x)$\u4e3a$\\mathrm{size}(x)$\uff08$\\mathrm{color}(x)$\u7b2c\u4e00\u6b21\u51fa\u73b0\uff09\u6216$0$\uff08$x$\u4e3a\u6839\u6216$\\mathrm{color}(x)$\u4e0d\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0)\u3002\u6211\u4eec\u628a\u5b83\u4eec\u7d2f\u52a0\uff0c\u5f97\u5230\u6574\u68f5\u6811\u7684\u8d21\u732e\u548c$\\sum{f}$\u3002\n\n\u90a3\u4e48\u7b2c\u4e00\u4e2a\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\u8be5\u533a\u57df\u5185\u6839\u7684\u7b54\u6848$\\mathrm{ans}(\\mathrm{root})=\\mathrm{size}(\\mathrm{root})+\\sum{f}$\uff0c\u5373\u6839\u8282\u70b9\u5904\u7684\u7b54\u6848\u5c31\u7b49\u4e8e\u81ea\u8eab\u989c\u8272\u7684\u8d21\u732e\u4e0e\u5b50\u5b59\u8282\u70b9\u989c\u8272\u8d21\u732e\u4e4b\u548c\u3002\n\n\u7b2c\u4e8c\u4e2a\u95ee\u9898\u6bd4\u8f83\u56f0\u96be\u3002\n\n\u70b9\u5206\u6cbb\u7684\u5408\u5e76\u601d\u60f3\u542f\u793a\u6211\u4eec\uff0c\u501f\u52a9\u521a\u624d\u8ba1\u7b97\u7684$f$\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u628a\u8def\u5f84$x\\rightarrow y$\u62c6\u6210$x\\rightarrow \\mathrm{root}$\u548c$\\mathrm{root} \\rightarrow y$\u4e24\u6bb5\u3002\n\n\u5bf9\u4e8e\u67d0\u4e00\u5b9a\u70b9$x$\uff0c\u5982\u679c\u53ea\u8003\u8651\u6240\u6709\u7684$x\\rightarrow \\mathrm{root}$\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8def\u5f84\u4e00\u5171\u6709$\\mathrm{size}(\\mathrm{root})-\\mathrm{size}(\\mathrm{branch})$\u6761\uff08\u6bcf\u4e2a$y$\u5bf9\u5e94\u4e00\u6761\uff09\uff0c\u6bcf\u6761\u8def\u5f84\u5b8c\u5168\u76f8\u540c\uff0c\u51fa\u73b0\u7684\u4e0d\u540c\u989c\u8272\u7684\u4e2a\u6570\u90fd\u76f8\u7b49\uff1b\u4e8e\u662f\uff0c\u8def\u5f84\u4e0a\u51fa\u73b0\u7684\u6bcf\u4e00\u79cd\u989c\u8272$t$\u5bf9$x$\u7684\u7b54\u6848\u7684\u8d21\u732e\u5747\u4e3a$\\mathrm{size}(\\mathrm{root})-\\mathrm{size}(\\mathrm{branch})$\u3002\n\n\u5982\u679c\u53ea\u8003\u8651\u6240\u6709\u7684$\\mathrm{root} \\rightarrow y$\uff0c\u8fd9\u4e9b\u8def\u5f84\u4e2d\u6bcf\u6761\u8def\u5f84\u51fa\u73b0\u989c\u8272\u6570\u4e4b\u548c\u5373\u4e3a$\\sum_{y\\notin \\mathrm{branch}}{f(y)}=\\sum{f}-\\sum_{i \\in \\mathrm{branch}}{f(i)}$\uff0c\u5373$\\sum{f}$\u51cf\u53bb\u6240\u6709$x$\u6240\u5728\u5206\u652f\u7684\u70b9\u7684$f$\u503c\u3002\n\n\u4f46\u662f\uff0c$x\\rightarrow \\mathrm{root}$\u548c$\\mathrm{root} \\rightarrow y$\u4e2d\u53ef\u80fd\u4f1a\u6709\u91cd\u590d\u7684\u989c\u8272\u3002\u5177\u4f53\u5730\uff0c\u5982\u679c\u67d0\u79cd\u989c\u8272$t$\u5728$x\\rightarrow \\mathrm{root}$\u4e2d\u51fa\u73b0\u4e86\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709\u7684\u5728\u5206\u652f\u5916\u90e8\u7684\u3001$\\mathrm{color}(u)=t$\u7684\u9876\u70b9$u$\uff0c\u5b83\u4eec\u7684$f$\u503c\u90fd\u4e0d\u80fd\u518d\u8ba1\u5165\u5230\u7b54\u6848\u91cc\uff0c\u56e0\u4e3a\u8fd9\u4e00\u79cd\u989c\u8272\u5df2\u7ecf\u5728$x\\rightarrow \\mathrm{root}$\u4e0a\u7edf\u8ba1\u8fc7\u4e86\u3002\n\n\u5982\u679c\u6211\u4eec\u8bb0$A$\u4e3a\u5728$x\\rightarrow \\mathrm{root}$\u4e0a\u51fa\u73b0\u8fc7\u7684\u989c\u8272\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f  \n$$\\sum{f}-\\sum_{i \\in \\mathrm{branch}}{f(i)}-\\sum_{u\\notin \\mathrm{branch}\\text{\u4e14}\\mathrm{color}(u)\\in A}f(u)+\\sum_{t\\in A}(\\mathrm{size}(\\mathrm{root})-\\mathrm{size}(\\mathrm{branch}))$$\n\n\u4e0a\u5f0f\u5df2\u7ecf\u5305\u62ec\u4e86\u6839\u7684\u989c\u8272\u5bf9$x$\u7684\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u89c2\u5bdf\u4e0a\u5f0f\uff0c\u6211\u4eec\u53d1\u73b0\u8981\u8bb0\u5f55\u7684\u91cf\u6709\uff1a\n\n1. $\\sum{f}$\u3002\n2. $\\mathrm{branch}$\u4e2d\u6240\u6709\u70b9\u7684$f$\u548c\uff0c\u5373$\\sum_{i \\in \\mathrm{branch}}{f(i)}$\u3002\n3. \u4e0d\u5728$\\mathrm{branch}$\u4e2d\uff0c\u4f46\u5176\u989c\u8272\u5728$x\\rightarrow \\mathrm{root}$\u4e0a\u51fa\u73b0\u8fc7\u7684\u70b9\u7684$f$\u548c\uff0c\u5373$\\sum_{u\\notin \\mathrm{branch}\\text{\u4e14}\\mathrm{color}(u)\\in A}f(u)$\u3002\n4. $x\\rightarrow \\mathrm{root}$\u4e0a\u6240\u6709\u989c\u8272\u7684\u8d21\u732e\u548c\uff0c\u5373$\\sum_{t\\in A}(\\mathrm{size}(\\mathrm{root})-\\mathrm{size}(\\mathrm{branch}))$\u3002\n\n\u5bf9\u6b64\uff0c\u627e\u5230\u91cd\u5fc3\u540e\uff0c\u6211\u4eec\u518d\u8fdb\u884c\u4e09\u6b21$\\mathrm{dfs}$\u3002\n\n\u7b2c\u4e00\u6b21$\\mathrm{dfs}$\u7684\u4efb\u52a1\u662f\uff0c\u8ba1\u7b97\u51fa$\\mathrm{size},\\sum{f},\\sum_{i \\in \\mathrm{branch}}{f(i)}$\uff1b\u5e76\u5bf9\u6bcf\u4e00\u79cd\u989c\u8272$t$\uff0c\u8ba1\u7b97\u6240\u6709\u989c\u8272\u4e3a$t$\u7684\u8282\u70b9\u7684$f$\u548c\uff0c\u5373$\\sum_{\\mathrm{color}(u)=t}f(u)$\u3002\n\n\u7b2c\u4e00\u6b21$\\mathrm{dfs}$\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230$\\mathrm{ans}(\\mathrm{root})$\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u5f00\u59cb\u679a\u4e3e$\\mathrm{root}$\u7684\u5b50\u6811\uff0c\u5373\u679a\u4e3e$\\mathrm{branch}$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$\\mathrm{branch}$\uff0c\u5148\u8fdb\u884c\u7b2c\u4e8c\u6b21$\\mathrm{dfs}$\uff0c\u4efb\u52a1\u662f\u5bf9\u6bcf\u4e00\u79cd$\\mathrm{branch}$\u4e2d\u51fa\u73b0\u7684\u989c\u8272$t$\uff0c\u8ba1\u7b97\u5206\u652f\u5185\u6240\u6709\u989c\u8272\u4e3a$t$\u7684\u8282\u70b9$v$\u7684$f$\u548c\uff0c\u5373$\\sum_{v\\in \\mathrm{branch}\\text{\u4e14}\\mathrm{color}(v)=t}f(v)$\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e0a\u9762\u7684\u7b2c\u4e09\u4e2a\u91cf\uff1a\n$$\\sum_{u\\notin \\mathrm{branch}\\text{\u4e14}\\mathrm{color}(u)=t}f(u)=\\sum_{\\mathrm{color}(u)=t}f(u)-\\sum_{v\\in \\mathrm{branch}\\text{\u4e14}\\mathrm{color}(v)=t}f(v)$$\n\n\u7d27\u63a5\u7740\uff0c\u8fdb\u884c\u7b2c\u4e09\u6b21$\\mathrm{dfs}$\uff0c\u4efb\u52a1\u4fbf\u662f\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u5148\u5904\u7406$\\mathrm{ans}$\u5f0f\u5b50\u7684\u7b2c\u4e8c\u9879\uff0c\u5373\u6211\u4eec\u628a\u5206\u652f\u5185\u7684$f$\u4ece$\\sum{f}$\u91cc\u6682\u65f6\u51cf\u6389\uff0c\u5373\u628a$\\sum{f}$\u6263\u6389$\\sum_{i \\in \\mathrm{branch}}{f(i)}$\uff0c\u5f85$\\mathrm{dfs}$\u7ed3\u675f\u540e\u518d\u52a0\u56de\u6765\u3002\n\n\u7b2c\u4e09\u3001\u7b2c\u56db\u9879\u5408\u5e76\u5904\u7406\u3002\u5728$\\mathrm{dfs}$\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5230\u8fbe\u4e86\u4e00\u4e2a\u4e0e\u7956\u5148\u90fd\u4e0d\u540c\u8272\u7684\u9876\u70b9$v$\uff0c\u5c31\u8bf4\u660e$t=\\mathrm{color}(v)$\u662f\u65b0\u51fa\u73b0\u7684\uff0c\u90a3\u4e48$v$\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9\u7684\u96c6\u5408$A$\u90fd\u4f1a\u65b0\u589e\u4e00\u4e2a\u5143\u7d20$t$\u3002\u8fd9\u6837\uff0c\u7b2c\u4e09\u9879\u5c31\u589e\u52a0\u4e86$\\sum_{u\\notin \\mathrm{branch}\\text{\u4e14}\\mathrm{color}(u)=t}f(u)$\uff0c\u4e5f\u5373\u7b54\u6848\u8fd8\u9700\u8981\u6263\u9664$\\sum_{\\mathrm{color}(u)=t}f(u)-\\sum_{v\\in \\mathrm{branch}\\text{\u4e14}\\mathrm{color}(v)\\in A}f(v)$\uff1b\u800c\u7b2c\u56db\u9879\u5c31\u589e\u52a0\u4e86\u4e00\u4e2a$\\mathrm{size}(\\mathrm{root})-\\mathrm{size}(\\mathrm{branch})$\uff0c\u4e5f\u5373\u7b54\u6848\u8fd8\u9700\u8981\u589e\u52a0$\\mathrm{size}(\\mathrm{root})-\\mathrm{size}(\\mathrm{branch})$\u3002\u90a3\u4e48\u6211\u4eec\u628a\u4e0a\u8ff0\u53d8\u5316\u5904\u7406\u5230\u5bf9\u5b58\u50a8$\\sum{f}$\u7684\u53d8\u91cf\u5904\uff0c\u51fd\u6570\u5373\u5c06\u8fd4\u56de\u65f6\u518d\u6062\u590d\u56de\u6765\u3002  \n\u800c\u5982\u679c$x$\u7684\u989c\u8272\u5df2\u7ecf\u51fa\u73b0\u8fc7\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u505a\u4e0a\u8ff0\u5904\u7406\u3002\n\n\u7ecf\u8fc7\u8fd9\u6837\u7684\u5904\u7406\uff0c$\\mathrm{ans}$\u5f0f\u5b50\u7684\u6bcf\u4e00\u9879\u90fd\u5728\u5b58\u50a8$\\sum{f}$\u7684\u53d8\u91cf\u5904\u8ba1\u7b97\u4e86\uff0c\u90a3\u4e48\u8be5\u53d8\u91cf\u7684\u503c\u5c31\u7b49\u4e8e$\\mathrm{ans}(x)$\u3002\n\n\u7ecf\u8fc7\u8fd9\u6837\u7684\u904d\u5386\uff0c\u6211\u4eec\u5c31\u628a\u6240\u6709\u7b54\u6848\u90fd\u8ba1\u7b97\u5b8c\u6bd5\u4e86\u3002\n\n\u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u6309\u7167\u70b9\u5206\u6cbb\u7684\u57fa\u672c\u601d\u60f3\uff0c\u5728\u6bcf\u4e00\u5c42\u5206\u6cbb\u90fd\u4f5c\u4e0a\u8ff0\u8ba1\u7b97\uff0c\u628a\u6bcf\u4e00\u5c42\u7684\u7b54\u6848\u7d2f\u52a0\u5373\u53ef\u3002\n\n\u4f46\u5728\u4ee3\u7801\u5b9e\u73b0\u4e0a\u8fd8\u6709\u4e00\u4e2a\u8f83\u5927\u7684\u95ee\u9898\u3002\u7531\u4e8e\u70b9\u5206\u6cbb\u9700\u8981\u591a\u6b21\u8ba1\u7b97\uff0c\u56e0\u6b64\u6570\u7ec4\u5fc5\u987b\u53ca\u65f6\u6e05\u96f6\uff0c\u5426\u5219\u7b54\u6848\u4f1a\u4e0d\u6b63\u786e\u3002\n\n\u5b58\u50a8\u6bcf\u4e2a\u5206\u652f\u7684$f$\u548c\u7684\u6570\u7ec4\u53ea\u9700\u5728\u7b2c\u4e09\u6b21$\\mathrm{dfs}$\u7ed3\u675f\u540e\u987a\u624b\u5c06\u8be5\u5206\u652f\u7684\u4f4d\u7f6e\u8bbe\u4e3a$0$\u5373\u53ef\u3002\u5bf9\u4e8e\u5b58\u50a8\u6bcf\u79cd\u989c\u8272\u7684$f$\u548c\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u8bb0\u5f55\u8be5\u5c42\u5206\u6cbb\u6240\u51fa\u73b0\u7684\u989c\u8272\uff0c\u5728\u5f80\u4e0b\u9012\u5f52\u5206\u6cbb\u524d\u628a\u6808\u4e2d\u6240\u6709\u989c\u8272\u7684\u503c\u6e05\u96f6\u5373\u53ef\u3002\n\n\u800c\u8bb0\u5f55\u67d0\u7279\u5b9a\u5206\u652f\u4e2d\u6bcf\u4e00\u79cd\u989c\u8272\u7684$f$\u503c\u548c\u7684\u6570\u7ec4\u5c31\u6bd4\u8f83\u5c34\u5c2c\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5728\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5206\u652f\u5b8c\u6bd5\u540e\u7acb\u5373\u6e05\u96f6\u3002\u6211\u91c7\u7528\u7684\u65b9\u6cd5\u662f\u5728\u7b2c\u4e09\u6b21$\\mathrm{dfs}$\u540e\u518d\u8fdb\u884c\u7b2c\u56db\u6b21$\\mathrm{dfs}$\uff0c\u4efb\u52a1\u662f\u6e05\u96f6\u8be5\u6570\u7ec4\u3002\n\n\u8fd9\u6837\uff0c\u8fd9\u9053\u9898\u5c31\u5b8c\u5168\u89e3\u51b3\u4e86\u3002\u5f53\u7136\uff0c\u4ee3\u7801\u5b9e\u73b0\u4e0a\u8fd8\u6709\u8bb8\u591a\u7ec6\u8282\uff0c\u9700\u8981\u591a\u591a\u6ce8\u610f\u3002\u4f8b\u5982\uff0c\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u9700\u8981\u5f00`long long`\uff08\u5426\u5219\u53ea\u6709$80$\u5206\uff09\u3002\n\n\u6211\u7684\u5b9e\u73b0\u603b\u7528\u65f6[$1421\\mathrm{ms}$\uff08\u65e0`O2`\uff09](https://www.luogu.org/record/show?rid=18133128) / [$919\\mathrm{ms}$\uff08`O2`\uff09](https://www.luogu.org/record/show?rid=18133134)\u3002\n\n[\u5e26\u6ce8\u91ca\u7684\u4ee3\u7801](https://www.luogu.org/recordnew/show/18135537)\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#define MAXN 100005\n#define MAXM 200005\n#define MAXIOLG 25\nusing namespace std;\n\ntypedef long long ll; //\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u8bb0\u5f97\u5f00long long\n\n//\u4e0b\u9762\u4e3a\u76ee\u9690\u56e2\u90e8\u5206\u6210\u5458/\u8bfb\u5165\u8f93\u51fa\u4f18\u5316\ntypedef ll io_t;\n//\u5982\u6708\u4f38\u592a\u90ce, shintaro, No.7, \u76ee\u7f20, \u8bb0\u5fc6\u6570\u5b57\nio_t shin[MAXIOLG];\n//\u6fd1\u6237\u5e78\u52a9, seto, No.2, \u76ee\u76d7, \u8bfb\u5165\u4f18\u5316\nio_t seto(void);\n//\u696f\u5c71\u6587\u4e43, ayano, No.0, \u76ee\u6302, \u8f93\u51fa\u4f18\u5316\nvoid ayano(io_t x,char spliter='\\n');\n\nint fst[MAXN],nxt[MAXM],edges=0; //\u5b58\u56fe\u90bb\u63a5\u8868\nint g[MAXM]; //\u56fe\nint sz[MAXN],mnsz,root,tree_sz; //size\u6570\u7ec4, mnsz\u7528\u4e8e\u627e\u91cd\u5fc3, root\u4e3a\u5f53\u524d\u5206\u6cbb\u6839, tree_sz\u4e3a\u5f53\u524d\u5206\u6cbb\u533a\u57df\u70b9\u6570\nint visited[MAXN]; //visited\u8bb0\u5f55\u70b9\u662f\u5426\u5df2\u7ecf\u88ab\u5220\u9664\n\nint color[MAXN]; //\u6bcf\u4e2a\u70b9\u7684\u989c\u8272\nint tree_color[MAXN],tree_color_n; //\u6808\u7ed3\u6784, \u5b58\u50a8\u5f53\u524d\u5206\u6cbb\u533a\u57df\u51fa\u73b0\u7684\u989c\u8272, \u4fbf\u4e8e\u6e05\u7a7a\u6570\u7ec4\n\n//\u4f9d\u6b21\u4e3a\u6bcf\u79cd\u989c\u8272\u7684f\u548c\u3001\u8be5\u79cd\u989c\u8272\u5728\u4e4b\u524d\u662f\u5426\u51fa\u73b0\u8fc7\u3001\u8be5\u5206\u652f\u6bcf\u79cd\u989c\u8272\u7684f\u548c\u3001\u6bcf\u4e00\u5206\u652f\u7684f\u548c\u3001\u5b58\u50a8sum(f)\u7684\u53d8\u91cf\nll color_f[MAXN],has_col[MAXN],branch_color_f[MAXN],branch_f[MAXN],tf;\n//\u7b54\u6848\u6570\u7ec4\nll ans[MAXN];\n\nvoid addedge(int u,int v); //\u52a0\u8fb9\nvoid solve(int x); //\u5206\u6cbb\u51fd\u6570\nvoid find_g(int x,int pa); //\u627e\u91cd\u5fc3\nvoid dfs1(int x,int pa,int branch); //\u7b2c\u4e00\u6b21dfs\nvoid dfs2(int x,int pa,int branch); //\u7b2c\u4e8c\u6b21dfs\nvoid dfs3(int x,int pa,int branch); //\u7b2c\u4e09\u6b21dfs\nvoid dfs4(int x,int pa,int branch); //\u7b2c\u56db\u6b21dfs\n\nint main(void){\n    int n;\n    //\u8bfb\u5165\n    n=seto();\n    for (int i=1;i<=n;i++)\n        color[i]=seto();\n    for (int i=1;i<n;i++){\n        int u,v;\n        u=seto(),v=seto();\n        addedge(u,v);\n        addedge(v,u);\n    }\n    //\u70b9\u5206\u6cbb\n    sz[1]=n;\n    solve(1);\n    //\u8f93\u51fa\n    for (int i=1;i<=n;i++)\n        ayano(ans[i]);\n    return 0;\n}\n\nvoid solve(int x){\n    //\u5206\u6cbb\u51fd\u6570\n    mnsz=tree_sz=sz[x];\n    find_g(x,0); //\u627e\u91cd\u5fc3\n\n    //\u6e05\u7a7a\u6808\n    tree_color_n=0;\n    const int root_col=color[root];\n    tree_color[tree_color_n++]=root_col;\n    has_col[root_col]=1;\n    tf=0;\n    \n    dfs1(root,0,0); //\u7b2c\u4e00\u6b21dfs\u8ba1\u7b97sz, tf, color_f, branch_f\n\n    ans[root]+=(tf+tree_sz); //\u5f97\u5230\u6839\u7684\u7b54\u6848\n    \n    for (int ei=fst[root];ei;ei=nxt[ei]){\n        //\u679a\u4e3e\u5206\u652f\n        int v=g[ei];\n        if (visited[v])\n            continue;\n        tf-=branch_f[v]; //\u6263\u9664\u8be5\u5206\u652ff\u503c\uff08\u7b54\u6848\u5f0f\u7b2c\u4e8c\u9879\uff09\n        dfs2(v,root,v); //\u7b2c\u4e8c\u6b21dfs\u8ba1\u7b97branch_color_f\n        dfs3(v,root,v); //\u7b2c\u4e09\u6b21dfs\u8ba1\u7b97ans\n        dfs4(v,root,v); //\u7b2c\u56db\u6b21dfs\u6e05\u96f6branch_color_f\n        tf+=branch_f[v]; //\u6d88\u9664\u7b2c\u4e8c\u9879\u7684\u5f71\u54cd, \u6062\u590dtf\u53d8\u91cf\n        branch_f[v]=0; //\u6e05\u96f6branch_f\n    }\n\n    has_col[root_col]=0; //\u6e05\u96f6has_col\n    //\u6e05\u96f6color_f\n    while (tree_color_n){\n        tree_color_n--;\n        color_f[tree_color[tree_color_n]]=0;\n    }\n\n    //\u9012\u5f52\u5206\u6cbb\n    visited[root]=1;\n    for (int ei=fst[root];ei;ei=nxt[ei]){\n        int v=g[ei];\n        if (visited[v])\n            continue;\n        solve(v);\n    }\n}\n\nvoid dfs1(int x,int pa,int branch){\n    //\u7b2c\u4e00\u6b21dfs\u8ba1\u7b97sz, tf, color_f, branch_f\n    if (pa==root)\n        branch=x; //\u5904\u7406branch\u53d8\u91cf\n    sz[x]=1; //sz\u521d\u59cb\u5316\n    int is_new_col=0,tcol=color[x];\n    if (!has_col[tcol]) //\u65b0\u51fa\u73b0\u7684\u989c\u8272, \u5148\u8bb0\u5f55\n        is_new_col=has_col[tcol]=1;\n    for (int ei=fst[x];ei;ei=nxt[ei]){\n        int v=g[ei];\n        if (visited[v] || v==pa)\n            continue;\n        dfs1(v,x,branch);\n        sz[x]+=sz[v];\n    }\n    if (is_new_col){\n        //\u65b0\u51fa\u73b0\u7684\u989c\u8272, \u66f4\u65b0\u53d8\u91cf\n        if (!color_f[tcol]) //\u989c\u8272\u5728\u6574\u4e2a\u5206\u6cbb\u533a\u57df\u7b2c\u4e00\u6b21\u51fa\u73b0, \u5165\u6808\n            tree_color[tree_color_n++]=tcol;\n        color_f[tcol]+=sz[x]; //\u5c06\u8d21\u732e\u7d2f\u52a0\u5230color_f\u4e2d\n        branch_f[branch]+=sz[x]; //\u5c06\u8d21\u732e\u7d2f\u52a0\u5230branch_f\u4e2d\n        tf+=sz[x]; //\u5c06\u8d21\u732e\u7d2f\u52a0\u5230tf\u4e2d\n        has_col[tcol]=0; //\u6e05\u6389has_col\n    }\n}\n\nvoid dfs2(int x,int pa,int branch){\n    //\u7b2c\u4e8c\u6b21dfs\u8ba1\u7b97branch_color_f\n    int tcol=color[x],is_new_color=0;\n    if (!has_col[tcol]) //\u65b0\u51fa\u73b0\u7684\u989c\u8272, \u5148\u8bb0\u5f55\n        has_col[tcol]=is_new_color=1;\n    for (int ei=fst[x];ei;ei=nxt[ei]){\n        int v=g[ei];\n        if (visited[v] || v==pa)\n            continue;\n        dfs2(v,x,branch);\n    }\n    if (is_new_color) //\u65b0\u51fa\u73b0\u7684\u989c\u8272, \u6e05\u6389has_col\u5e76\u5c06\u8d21\u732e\u7d2f\u52a0\u5230branch_color_f\u4e2d\n        has_col[tcol]=0,branch_color_f[tcol]+=sz[x];\n}\n\nvoid dfs3(int x,int pa,int branch){\n    //\u7b2c\u4e09\u6b21dfs\u8ba1\u7b97ans\n    ans[x]+=(tree_sz-sz[branch]); //\u6839\u5904\u7684\u7b54\u6848\u5728\u524d\u9762\u672a\u52a0\u5165, \u73b0\u5728\u989d\u5916\u7b97\n    int tcol=color[x],is_new_color=0;\n    if (!has_col[tcol]){\n        has_col[tcol]=is_new_color=1; //\u65b0\u51fa\u73b0\u7684\u989c\u8272,\u8bb0\u5f55\n        tf-=(color_f[tcol]-branch_color_f[tcol]); //\u7b54\u6848\u5f0f\u5b50\u7b2c\u4e09\u9879\n        tf+=(tree_sz-sz[branch]);  //\u7b54\u6848\u5f0f\u5b50\u7b2c\u56db\u9879\n    }\n    ans[x]+=tf; //\u7d2f\u52a0\u7b54\u6848\n    for (int ei=fst[x];ei;ei=nxt[ei]){\n        int v=g[ei];\n        if (visited[v] || v==pa)\n            continue;\n        dfs3(v,x,branch);\n    }\n    if (is_new_color){\n        //\u65b0\u51fa\u73b0\u7684\u989c\u8272,\u6e05\u6389has_col\u5e76\u6062\u590dtf\u53d8\u91cf\u539f\u6765\u7684\u503c\n        has_col[tcol]=0;\n        tf+=(color_f[tcol]-branch_color_f[tcol]);\n        tf-=(tree_sz-sz[branch]);\n    }\n}\n\nvoid dfs4(int x,int pa,int branch){\n    //\u7b2c\u56db\u6b21dfs\u6e05\u96f6branch_color_f\n    branch_color_f[color[x]]=0;\n    for (int ei=fst[x];ei;ei=nxt[ei]){\n        int v=g[ei];\n        if (visited[v] || v==pa)\n            continue;\n        dfs4(v,x,branch);\n    }\n}\n\nvoid find_g(int x,int pa){\n    //\u627e\u91cd\u5fc3\n    sz[x]=1; //\u521d\u59cb\u5316size\n    int mxsz=0; //x\u7684\u5b50\u6811\u6216x\u4ee5\u4e0a\u90e8\u5206\u7684\u6700\u5927size\n    for (int ei=fst[x];ei;ei=nxt[ei]){\n        int v=g[ei];\n        if (visited[v] || v==pa)\n            continue;\n        find_g(v,x);\n        sz[x]+=sz[v];\n        if (sz[v]>mxsz)\n            mxsz=sz[v];\n    }\n    if (tree_sz-sz[x]>mxsz)\n        mxsz=tree_sz-sz[x];\n    if (mxsz<mnsz)\n        mnsz=mxsz,root=x;\n}\n\nvoid addedge(int u,int v){\n    //\u52a0\u8fb9\u51fd\u6570\n    edges++;\n    g[edges]=v;\n    nxt[edges]=fst[u],fst[u]=edges;\n}\n\n//\u4e0b\u9762\u4e3a\u76ee\u9690\u56e2\u90e8\u5206\u6210\u5458/\u8bfb\u5165\u8f93\u51fa\u4f18\u5316\n\nio_t seto(void){\n    //\u6fd1\u6237\u5e78\u52a9, seto, No.2, \u76ee\u76d7, \u8bfb\u5165\u4f18\u5316\n    io_t ans=0;\n    int symbol=0;\n    char ch=getchar();\n    while (!isdigit(ch))\n        (ch=='-')?(symbol=1):(0),ch=getchar();\n    while (isdigit(ch))\n        (ans=ans*10+(ch-'0')),ch=getchar();\n    return (symbol)?(-ans):(ans);\n}\n\nvoid ayano(io_t x,char spliter){\n    //\u696f\u5c71\u6587\u4e43, ayano, No.0, \u76ee\u6302, \u8f93\u51fa\u4f18\u5316\n    if (!x){\n        putchar('0'),putchar(spliter);\n        return;\n    }\n    if (x<0)\n        putchar('-'),x=-x;\n    int len=0;\n    while (x){\n        io_t d=x/10;\n        shin[len++]=x-d*10; //\u5982\u6708\u4f38\u592a\u90ce, shintaro, No.7, \u76ee\u7f20, \u8bb0\u5fc6\u6570\u5b57\n        x=d;\n    }\n    while (len){\n        len--;\n        putchar(shin[len]+'0');\n    }\n    putchar(spliter);\n}\n```",
        "postTime": 1555037209,
        "uid": 25008,
        "name": "Sweetlemon",
        "ccfLevel": 9,
        "title": "\u9700\u8981\u53d8\u6362\u601d\u8def\u548c\u4f7f\u7528\u6280\u5de7\u7684\u70b9\u5206\u6cbb\u9898\u2014\u2014\u6811\u4e0a\u6e38\u620f"
    },
    {
        "content": "\u8fd8\u771f\u4e0d\u4e00\u5b9a\u8981\u7528\u70b9\u5206\u6cbb......\n\n\n\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u5c06\u6bcf\u79cd\u989c\u8272\u5206\u5f00\u8ba1\u7b97\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u67d0\u4e00\u79cd\u989c\u8272\uff0c\u53ef\u4ee5\u53d1\u73b0\u6811\u4e0a\u8fd9\u79cd\u989c\u8272\u7684\u70b9\u5c06\u6574\u68f5\u6811\u5206\u6210\u4e86\u5f88\u591a\u5757\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5757\u4e2d\u7684\u6240\u6709\u70b9\uff0c\u5f53\u524d\u989c\u8272\u5bf9\u5757\u5185\u70b9\u4e0e\u5757\u5916\u70b9\u76f8\u8fde\u7684\u6240\u6709\u8fb9\u90fd\u67091\u7684\u8d21\u732e\u3002\n\n\u800c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u672c\u6765\u5c31\u662f\u8fd9\u79cd\u989c\u8272\u7684\u70b9\uff0c\u5b83\u8fde\u51fa\u53bb\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u8fd9\u79cd\u989c\u8272\u90fd\u4f1a\u67091\u7684\u8d21\u732e\u3002\n\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u53ef\u4ee5\u7528\u5dee\u5206\u65b9\u4fbf\u5730\u7edf\u8ba1\u3002\n\n\u7136\u800c\u5bf9\u6bcf\u4e00\u79cd\u989c\u8272\u904d\u5386\u4e00\u6b21\u6574\u68f5\u6811\u6765\u6253\u6807\u8bb0\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(nc)$\uff0c\u65e0\u6cd5\u627f\u53d7\u3002\n\n\n\u90a3\u4e48\u8003\u8651\u5efa\u865a\u6811\u4f18\u5316\u6bcf\u6b21\u904d\u5386\u7684\u8282\u70b9\u6570\u3002\n\n\u5728\u666e\u901a\u865a\u6811\u7684\u57fa\u7840\u4e0a\uff0c\u9700\u8981\u5728\u865a\u6811\u5185\u6dfb\u52a0\u6bcf\u4e2a\u5f53\u524d\u989c\u8272\u7684\u8282\u70b9\u7684\u6240\u6709\u76f4\u63a5\u513f\u5b50\u3002\n\n\u6bcf\u6b21\u5bf9\u4e8e\u4e00\u5757\u7684\u52a0\u51cf\uff0c\u53ef\u4ee5\u5728\u5757\u7684\u5f00\u59cb\u5904\uff08\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u662f\u67d0\u4e2a\u5f53\u524d\u989c\u8272\u7684\u8282\u70b9\u7684\u67d0\u4e2a\u76f4\u63a5\u513f\u5b50\uff0c\u521a\u624d\u54b1\u4eec\u5df2\u7ecf\u5c06\u5176\u52a0\u5165\u4e86\u865a\u6811\uff09\u6253\u4e0a\u7b49\u540c\u4e8e\u603b\u70b9\u6570\u51cf\u53bb\u8fd9\u4e2a\u5757\u5927\u5c0f\u7684\u6807\u8bb0\uff0c\u518d\u5728\u5757\u7684\u6240\u6709\u7ed3\u675f\u8282\u70b9\u5904\u5220\u53bb\u8fd9\u4e2a\u6807\u8bb0\u3002\n\n\u4e8e\u662f\u8003\u8651\u5230\u5efa\u7acb\u6240\u6709\u7684\u865a\u6811\u7684\u590d\u6742\u5ea6\u4e3a$O(nlogn)$\uff0c\u5927\u5c0f\u4e3a$O(n)$\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u51fa\u89e3\u4e86\u3002\n\n\n\u7531\u4e8e\u54b1\u8d4c5\u6bdb\u94b1\u51fa\u9898\u4eba\u5e76\u6ca1\u6709\u60f3\u8fc7\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u6240\u4ee5\u6570\u636e\u6ca1\u6709\u9488\u5bf9\u6027\u3002\n\n\u4e8e\u662f\u6ca1\u6709\u7279\u610f\u5361\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c**\u6682\u65f6**\u6210\u4e3a\u4e86\u901f\u5ea6\u7b2c\u4e00~\n\n~~\uff08\u90a3\u4e2aread()\u662f\u4e2a\u4eba\u89c9\u5f97\u5199\u8d77\u6765\u6bd4scanf()\u987a\u624b\u800c\u4e0d\u662f\u5361\u5e38QWQ\uff09~~\n\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ninline int read()\n{\n    int x=0;char ch=getchar();\n    while(ch<'0' || '9'<ch)ch=getchar();\n    while('0'<=ch && ch<='9')x=x*10+(ch^48),ch=getchar();\n    return x;\n}\n\ntypedef long long ll;\nconst int K=21;\nconst int N=1e5+9;\nvector<int> g[N],col[N],p;\nint n,to[N<<1],nxt[N<<1],beg[N],c[N],stk[N],tot;\nint fa[N][K],siz[N],dep[N],id[N],ed[N],dfn,top;\nll sum[N];\n\ninline void add(int u,int v)\n{\n    to[++tot]=v;\n    nxt[tot]=beg[u];\n    beg[u]=tot;\n}\n\ninline void dfs(int u)\n{\n    id[u]=++dfn;\n    siz[u]=1;\n    for(int i=beg[u];i;i=nxt[i])\n        if(fa[u][0]!=to[i])\n        {\n            dep[to[i]]=dep[u]+1;\n            fa[to[i]][0]=u;\n            dfs(to[i]);\n            siz[u]+=siz[to[i]];\n        }\n    ed[u]=dfn;\n}\n\ninline int lca(int a,int b)\n{\n    if(dep[a]>dep[b])swap(a,b);\n    for(int i=K-1;i>=0;i--)\n        if(dep[fa[b][i]]>=dep[a])\n            b=fa[b][i];\n    if(a==b)return a;\n    for(int i=K-1;i>=0;i--)\n        if(fa[a][i]!=fa[b][i])\n            a=fa[a][i],b=fa[b][i];\n    return fa[a][0];\n}\n\ninline bool cmp(int a,int b)\n{\n    return id[a]<id[b];\n}\n\ninline void dfs2(int u,int cc)\n{\n    int rectop,tots=0;\n    for(int i=0;i<g[u].size();i++)\n    {\n        rectop=top;\n        dfs2(g[u][i],cc);\n        if(c[u]==cc)\n        {\n            ll bcnt=siz[g[u][i]];\n            for(int j=rectop+1;j<=top;j++)\n                    bcnt-=siz[stk[j]];\n            sum[g[u][i]]+=n-bcnt;\n            tots+=n-bcnt;\n            for(int j=rectop+1;j<=top;j++)\n                sum[stk[j]]-=n-bcnt;\n            top=rectop;\n        }\n    }\n\n    if(c[u]==cc)\n    {\n        stk[++top]=u;\n        sum[u]+=n;\n        for(int i=beg[u];i;i=nxt[i])    \n            if(to[i]!=fa[u][0])\n                sum[to[i]]-=n;\n    }\n    else if(u==1)\n    {\n        int bcnt=siz[u];\n        for(int i=1;i<=top;i++)\n            bcnt-=siz[stk[i]];\n        sum[u]+=n-bcnt;\n        for(int i=1;i<=top;i++)\n            sum[stk[i]]-=n-bcnt;\n    }\n}\n\ninline void dfs3(int u)\n{\n    if(fa[u][0])\n        sum[u]+=sum[fa[u][0]];\n    for(int i=beg[u];i;i=nxt[i])\n        if(to[i]!=fa[u][0])\n            dfs3(to[i]);\n}\n\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++)\n        col[c[i]=read()].push_back(i);\n    for(int i=1,u,v;i<n;i++)\n    {\n        u=read();v=read();\n        add(u,v);add(v,u);\n    }\n        \n    dep[1]=1;\n    fa[1][0]=0;\n    dfs(1);\n    for(int i=1;i<K;i++)\n        for(int j=1;j<=n;j++)\n            fa[j][i]=fa[fa[j][i-1]][i-1];\n\n    for(int cc=1;cc<N;cc++)\n    {\n        if(col[cc].empty())continue;\n\n        p.clear();\n        sort(col[cc].begin(),col[cc].end(),cmp);\n        for(int i=1,e=col[cc].size();i<e;i++)\n        {\n            p.push_back(col[cc][i]);\n            p.push_back(lca(col[cc][i-1],col[cc][i]));\n            for(int j=beg[col[cc][i]];j;j=nxt[j])\n                if(to[j]!=fa[col[cc][i]][0])\n                    p.push_back(to[j]);\n        }\n        p.push_back(col[cc][0]);\n        for(int j=beg[col[cc][0]];j;j=nxt[j])\n            if(to[j]!=fa[col[cc][0]][0])\n                p.push_back(to[j]);\n        p.push_back(1);\n        sort(p.begin(),p.end(),cmp);\n        int size=unique(p.begin(),p.end())-p.begin();\n        \n        stk[top=1]=1;\n        g[1].clear();\n        for(int i=1;i<size;i++)\n        {\n            g[p[i]].clear();\n            while(top && id[p[i]]>ed[stk[top]])\n                top--;\n            g[stk[top]].push_back(p[i]);\n            stk[++top]=p[i];\n        }\n\n        top=0;\n        dfs2(1,cc);\n    }\n\n    dfs3(1);\n    for(int i=1;i<=n;i++)\n        printf(\"%lld\\n\",sum[i]);\n    return 0;\n}\n```",
        "postTime": 1514821781,
        "uid": 19293,
        "name": "zltttt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "\n[my blog:redbag\u7684\u5c0f\u5c4b](http://redbag.pw/)\n\n$$ \\sum _{i=1}^n s(i,j) $$\n\n\u8003\u8651\u79bb\u7ebf\uff0c\u4e00\u79cd\u4e00\u79cd\u989c\u8272\u52a0\u8fdb\u6765\u3002\n\ni\u5230\u6ca1\u6709\u51fa\u73b0\u8fd9\u79cd\u989c\u8272\u7684\u5730\u65b9\uff0c\u6784\u6210\u4e00\u4e2a\u8054\u901a\u5757\u3002(\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4)  $ ans+=(n-size) $\n\n\u590d\u6742\u5ea6\u6700\u574f $ O(n^2) $ \u3002\n\n\u671f\u671b\u5f97\u5206 40\u5206\u3002\n\n\u7136\u540e\u60f3\u60f3\u600e\u4e48\u628a40\u5206\u53d8\u6210\u4e00\u767e\u5206\u3002\n\n\u6bcf\u6b21\u70b9\u5206\u7684\u65f6\u5019\u53ea\u8981\u7b97\u5b50\u6811\u5bf9\u5b50\u6811\u7684\u8d21\u732e\uff0c\u8fd8\u6709\u5b50\u6811\u5bf9\u6839\u7684\u8d21\u732e\uff0c\u5185\u90e8\u8d21\u732e\u7ee7\u7eed\u5206\u7684\u65f6\u5019\u7b97\u3002\n\n\u6bcf\u4e2a\u5b50\u6811\u7684\u989c\u8272x\u5bf9\u5176\u4ed6\u5b50\u6811\u7684\u8d21\u732e=\u8be5\u5b50\u6811\u6240\u6709\u94fe\u4e0a\uff0cx\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6ep\uff0cp\u7684\u5b50\u6811\u7684\u5927\u5c0f\u3002\u7136\u540e\u9047\u5230\u53d7\u5230\u5185\u90e8\u5f71\u54cd\u7684\u60c5\u51b5\uff0c\u8d21\u732e\u5c31\u8981\u4fee\u6539\u3002\n\n\u591a\u79cd\u989c\u8272\u6211\u4eec\u4e0d\u53ef\u4ee5\u5206\u5f00\u5904\u7406\uff0c\u5c31\u4e00\u8d77\u5904\u7406\uff08\u770b\u7740\u9b3c\u755c\uff09\n\n1.\u627e\u91cd\u5fc3\uff0c\u6c42size,\u6e05\u4e0a\u4e00\u6b21\u7684\u6807\u8bb0\n\n2.\u7b2c\u4e00\u6b21dfs\uff1a\u8bb0\u5f55\u6574\u4e2a\u5b50\u6811\uff0c\u6bcf\u4e2a\u989c\u8272\u5728\u8be5\u6761\u94fe\u4e0a\u7b2c\u4e00\u6b21\u51fa\u73b0\u65f6\u5019\uff0c\u5176\u5b50\u6811\u7684\u5927\u5c0f\u7684\u548c\u3002\n\u6240\u4ee5\u8fd9\u5230\u5e95\u662f\u4ec0\u4e48\u4e1c\u897f\u554aQAQ\u3002\n\u770b\u56fe\u611f\u6027\u7406\u89e3\u5199\uff08\u9003\uff09\uff0c\n\n\u7136\u540e\u8fd8\u8981\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e00\u79cd\u989c\u8272\uff0c\u5728\u6574\u4e2a\u5206\u6cbb\u5757\u7684\u7b54\u6848\uff0c\n\n\u7136\u540e\u548c\u6839\u989c\u8272\u4e0d\u540c\u7684\u624d\u7b97\u3002\u8bb0\u4e00\u4e2a\u603b\u548cs2\uff0c\u6bcf\u4e2a\u6811\u7684\u8d21\u732e\u5c31\u662fsum[i]\u3002\u56e0\u4e3a\u6839\u7684\u989c\u8272\u7684\u8d21\u732e\u5c31\u662f\u6574\u4e2a\u5206\u6cbb\u5757\u7684\u5927\u5c0f\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\u3002\n\n3.\u7b2c\u4e8c\u6b21dfs\uff1a\u8bbe\u6574\u4e2a\u5b50\u6811\u5bf9\u5176\u4ed6\u5b50\u6811\u548c\u6839\u7684\u8d21\u732e\u4e3asum[i]\uff0c\u8bbes1=s2-sum[i]-size[i]\uff08\u7b97\u81ea\u5df1\u7684\u65f6\u5019\u4e0d\u8981\u7b97\u5185\u90e8\u7684\u8d21\u732e\uff09\uff0c\n\u5982\u679c\u51fa\u73b0\u4e86\u989c\u8272z\uff08\u5e76\u4e14z \u2260\u6839\u7684\u989c\u8272\uff09\uff0c\u989c\u8272z\u5728\u6574\u4e2a\u5206\u6cbb\u5757\u7684\u603b\u8d21\u732e\u4e3acnt[z], \u76ee\u524d\u5728\u70b9d\uff0c\u6240\u5728\u5b50\u6811\u4e3ax\uff0c\n\ncnt1[z]\u8868\u793a\u989c\u8272z\u5728\u76ee\u524d\u5b50\u6811x\u7684\u7b54\u6848\uff08\u7b2c\u4e09\u6b21dfs\uff09\uff0cs1=s1-cnt[z]+cnt1[c[x]]+\uff08sz-size[x]\uff09\n\uff08\u5c31\u662f\u628a\u539f\u672c\u8fd9\u79cd\u989c\u8272\u7684\u8d21\u732e\u6539\u4e3a\u6574\u4e2a\u5206\u6cbb\u5757\u7684\u5927\u5c0f\u51cf\u53bb\u81ea\u5df1\u6574\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\uff09\n\n4.\u7136\u540e\u8fd8\u9700\u8981\u4e00\u6b21dfs\u6765\u6e05\u7406\u6807\u8bb0QAQ\u3002\n\n\u8bed\u6587\u4e0d\u597d\u4e0d\u80fd\u8868\u8fbe\u5f97\u5f88\u6e05\u695a\uff0c\u4ee3\u7801\u4e5f\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u6709\u95ee\u9898\u53ef\u4ee5\u8bc4\u8bba/\u79c1\u4fe1\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ld long double\n#define ll long long\nusing namespace std;\nvoid qmax(int &x,int y) {if (x<y) x=y;}\nvoid qmin(int &x,int y) {if (x>y) x=y;}\ninline int read()\n{\n    char s;\n    int k=0,base=1;\n    while((s=getchar())!='-'&&s!=EOF&&!(isdigit(s)));\n    if(s==EOF)exit(0);\n    if(s=='-')base=-1,s=getchar();\n    while(isdigit(s)) {k=k*10+(s^'0');s=getchar();}\n    return k*base;\n}\ninline void write(int x)\n{\n    static char cnt,num[15];cnt=0;\n    if (!x)\n    {\n        printf(\"0\");\n        return;\n    }\n    for (;x;x/=10) num[++cnt]=x%10;\n    for (;cnt;putchar(num[cnt--]+48));\n}\nconst int maxn=1e5+100;\nint n,flag;\nint c[maxn];//\u989c\u8272 \nint to[maxn<<1],ne[maxn<<1],po[maxn],id,X,Y;\nint size[maxn],hson[maxn],root,del[maxn],sz;//del\u5220\u9664\u6807\u8bb0 \nll ans[maxn];//\u7b54\u6848\nll sum[maxn],s1;//\u8bb0\u5f55\u6bcf\u4e2a\u5b50\u6811\u7684\u7b54\u6848 \nint vis[maxn];//\u6807\u8bb0\u67d0\u79cd\u989c\u8272\u662f\u5426\u5728\u8be5\u94fe\u4e2d\u51fa\u73b0\u8fc7\nll cnt[maxn]; //\u5b58\u6574\u4e2a\u5206\u6cbb\u5757\u7684\u7b54\u6848 \nint cnt1[maxn];//\u5b58\u5f53\u524d\u626b\u7684\u5b50\u6811\u7684\u7b54\u6848 \nvoid add(int x,int y)\n{\n\tid++;to[id]=y;ne[id]=po[x];po[x]=id;\n}\nvoid get_root(int x,int fa)\n{\n\tcnt[c[x]]=0;//\u6e05\u7406\u6807\u8bb0 \n\tsize[x]=1;hson[x]=0;\n\tfor (int i=po[x];i;i=ne[i])\n\t{\n\t\tif (!del[to[i]]&&fa!=to[i])\n\t\t{\n\t\t\tget_root(to[i],x);\n\t\t\tif (size[to[i]]>hson[x]) hson[x]=size[to[i]];\n\t\t\tsize[x]+=size[to[i]];\n\t\t}\n\t}\n\tqmax(hson[x],sz-size[x]);\n\tif (root==-1||hson[root]>hson[x]) root=x;\n}//\u627e\u91cd\u5fc3 \nvoid qsize(int x,int fa)\n{\n\tsize[x]=1;\n\tfor (int i=po[x];i;i=ne[i])\n\t{\n\t\tif (!del[to[i]]&&fa!=to[i])\n\t\t{\n\t\t\tqsize(to[i],x);\n\t\t\tsize[x]+=size[to[i]];\n\t\t}\n\t}\n}//\u6c42\u6bcf\u4e2a\u5b50\u6811\u7684\u5927\u5c0f \nvoid dfs1(int x,int fa,int s)//\u76ee\u524d\u5728\u70b9x,\u7236\u4eb2\u4e3afa\uff0c\u6240\u5c5e\u4e8e\u5b50\u6811s \n{\n\tvis[c[x]]++; //\u6807\u8bb0\u51fa\u73b0\u6b21\u6570 \n\tif (vis[c[x]]==1&&c[x]!=c[root]) \n\t{\n\t\tcnt[c[x]]+=size[x];\n\t\tsum[s]+=size[x];//\u8be5\u5206\u6cbb\u5757\u7684\u8d21\u732e \n\t}\n\tfor (int i=po[x];i;i=ne[i])\n\t{\n\t\tif (to[i]==fa||del[to[i]]) continue;\n\t\tdfs1(to[i],x,s);\n\t}\n\tvis[c[x]]--;\n}\nvoid dfs3(int x,int fa,int s)\n{\n\tvis[c[x]]++; \n\tif (vis[c[x]]==1&&c[x]!=c[root]) cnt1[c[x]]+=size[x];// \u8be5\u5b50\u6811\u7684\u8d21\u732e \n\tfor (int i=po[x];i;i=ne[i])\n\t{\n\t\tif (to[i]==fa||del[to[i]]) continue;\n\t\tdfs3(to[i],x,s);\n\t}\n\tvis[c[x]]--;//\u6e05\u6807\u8bb0 \n}\nvoid dfs4(int x,int fa,int s)\n{\n\tcnt1[c[x]]=0;\n\tfor (int i=po[x];i;i=ne[i])\n\t{\n\t\tif (to[i]==fa||del[to[i]]) continue;\n\t\tdfs4(to[i],x,s);\n\t}\n}//\u6e05\u6807\u8bb0\u800c\u5df2233 \nvoid dfs2(int x,int fa,int s)\n{\n\tvis[c[x]]++;\n\tll s3;\n\tif (c[x]!=c[root]&&vis[c[x]]==1)//\u4fee\u6539 \n\t{\n\t\ts3=s1; \n\t\ts1=s1-cnt[c[x]]+cnt1[c[x]]+sz-size[s];\n\t}\n\tans[x]+=s1;\n\tfor (int i=po[x];i;i=ne[i])\n\t{\n\t\tif (to[i]==fa||del[to[i]]) continue;\n\t\tdfs2(to[i],x,s);\n\t}\n\tif (c[x]!=c[root]&&vis[c[x]]==1) s1=s3;//\u56de\u6eaf\u6389qaq \n\tvis[c[x]]--;\n}\nvoid solve(int x)\n{\n\tqsize(x,0);//\u6c42\u51fa\u6bcf\u4e2a\u6811\u7684size \n\tif (size[x]==1) \n\t{\n\t\tans[x]++;//\u81ea\u5df1\u5230\u81ea\u5df1\u4e5f\u8981\u7b97 \n\t\tdel[x]=1;\n\t\treturn;\n\t}\n\tll s2=0;\n\tfor (int i=po[x];i;i=ne[i])\n\t{\n\t \tif (del[to[i]]) continue;\n\t \tsum[to[i]]=0;\n\t \tdfs1(to[i],x,to[i]);\n\t \ts2+=sum[to[i]];\n\t}\n\ts2+=size[root];\n\tans[root]+=s2;\n\tfor (int i=po[x];i;i=ne[i])\n\t{\n\t\tif (del[to[i]]) continue;\n\t\ts1=s2-sum[to[i]]-size[to[i]];\n\t\tdfs3(to[i],x,to[i]);\n\t\tdfs2(to[i],x,to[i]);\n\t\tdfs4(to[i],x,to[i]); \n\t} //\u7edf\u7b54\u6848 \n\tdel[x]=1;\t\n\tfor (int i=po[x];i;i=ne[i])\n\t{\n\t\tif (del[to[i]]) continue;\n\t\tsz=size[to[i]];\n\t\troot=-1;\n\t\tget_root(to[i],x);\n\t\tsolve(root); \n\t}//\u5904\u7406\u4e0b\u4e00\u5c42 \n}\nint main()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++) c[i]=read();\n\tfor (int i=1;i<n;i++)\n\t{\n\t\tX=read();Y=read();\n\t\tadd(X,Y),add(Y,X);\n\t}\n\tsz=n;\n\troot=-1;\n\tget_root(1,0);\n\tsolve(root); \n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%lld\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1523254941,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "### \u6362\u6839 dp\n\n\u849f\u84bb\u4e0d\u4f1a~~\u6dc0\u7c89\u8d28~~\u2026\u2026\n\n[P2664 \u6811\u4e0a\u6e38\u620f](https://www.luogu.com.cn/problem/P2664)\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5982\u679c\u8282\u70b9 $i$ \u5230\u6839\u8282\u70b9 $rt$ \u7684\u8def\u5f84\u4e0a\u6ca1\u6709\u989c\u8272\u4e3a $c[i]$ \u7684\u8282\u70b9\uff08\u5305\u62ec $rt$\uff09\uff0c\u90a3\u4e48 $i$ \u5bf9\u7b54\u6848 $f[rt]$ \u7684\u8d21\u732e\u4e3a $size[i]$\uff1b\u5982\u679c\u8def\u5f84\u4e0a\u6709\u989c\u8272\u4e3a $c[i]$ \u7684\u8282\u70b9\uff0c\u90a3\u4e48 $i$ \u5bf9 $f[rt]$ \u5c31\u6ca1\u6709\u8d21\u732e\u3002\n\n\u90a3\u4e48 $f[rt]$ \u5c31\u5f88\u597d\u5f97\u5230\u4e86\uff0c\u8dd1\u7b2c\u4e00\u904d dfs \u65f6\u5f00\u4e2a\u6570\u7ec4 $a$ \u8bb0\u5f55\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\uff0c\u6700\u540e\u76f8\u52a0\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8003\u8651\u5982\u4f55\u7531 $f[lst]$ \u8f6c\u79fb\u5230\u5176\u5b50\u8282\u70b9 $f[u]$\u3002\u663e\u7136\u53ea\u6709 $c[lst]$ \u548c $c[u]$ \u4f1a\u6539\u53d8\uff1a$lst$ \u53d8\u6210 $u$ \u7684\u513f\u5b50\uff0c\u4f7f $c[lst]$ \u8d21\u732e\u51cf\u5c11\u4e86 $size[u]$\uff1b$u$ \u53d8\u6210\u6839\u8282\u70b9\uff0c$c[u]$ \u7684\u8d21\u732e\u4f1a\u53d8\u4e3a $n$\u3002\u4f46\u662f\u6ce8\u610f\u5230\uff0c\u539f\u672c\u5728 $u$ \u7684\u5b50\u6811\u4e2d\u989c\u8272\u4e3a $c[lst]$ \u7684\u8282\u70b9\u53ef\u80fd\u4f1a\u4ea7\u751f\u65b0\u7684\u8d21\u732e\uff0c\u4e5f\u8981\u8ba1\u5165 $f[u]$\uff1b\u539f\u672c\u4e0d\u5728 $u$ \u7684\u5b50\u6811\u4e2d\u7684\u989c\u8272\u4e3a $c[u]$ \u7684\u8282\u70b9\u672c\u6765\u6709\u8d21\u732e\u800c\u73b0\u5728\u5c31\u6ca1\u6709\u8d21\u732e\u4e86\uff0c\u4e0d\u80fd\u8ba1\u7b97\u81f3 $f[u]$ \u4e2d\u3002\n\n\u5bf9\u4e8e\u524d\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4 $b$ \u8bb0\u5f55 \u201c$u$ \u7684\u5b50\u6811\u4e2d\u989c\u8272\u4e3a $c[lst]$ \u7684\u8282\u70b9\u5728\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u65f6\u7684\u8d21\u732e\u201d\u3002\u5728\u8dd1\u7b2c\u4e00\u904d dfs \u65f6\uff0c\u6bcf\u6b21\u628a $a[c[lst]]$ \u5b58\u8d77\u6765\u5e76\u6e05\u7a7a\uff0c\u5728\u5b50\u6811\u4e2d\u9047\u5230\u989c\u8272\u4e3a $c[lst]$ \u7684\u8282\u70b9\u65f6\u6b63\u5e38\u6dfb\u52a0\u8d21\u732e\uff0c\u8fd9\u6837\u6211\u4eec\u56de\u6eaf\u65f6\u5f97\u5230\u7684 $a[c[lst]]$ \u5c31\u662f $b[u]$ \u4e86\u3002\u5c06 $a[c[lst]]$ \u8fd8\u539f\u8986\u76d6\u5b50\u6811\u4e2d\u7684\u8d21\u732e\u5373\u53ef\uff08\u8fd9\u6837\u505a\u4e5f\u4e0d\u9700\u8981\u5224\u65ad\u67d0\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u662f\u5426\u6709\u76f8\u540c\u7684\u989c\u8272\uff0c\u5982\u679c\u6709\u7684\u8bdd\u8fd9\u4e2a\u8282\u70b9\u7684\u8d21\u732e\u5c31\u4f1a\u88ab\u8986\u76d6\u6389\uff09\u3002\n\n\u5bf9\u4e8e\u540e\u8005\uff0c\u6211\u4eec\u8003\u8651\u5728\u8dd1\u7b2c\u4e8c\u904d dfs \u65f6\uff0c\u7528\u6570\u7ec4 $a$ \u7ef4\u62a4\u6839\u8282\u70b9\u4e3a\u5f53\u524d\u70b9\u65f6\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\uff08\u8dd1\u5b8c\u7b2c\u4e00\u904d dfs \u65f6 $a$ \u7ef4\u62a4\u7684\u662f\u4ee5 $rt$ \u4e3a\u6839\u8282\u70b9\u65f6\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6bcf\u6b21\u8f6c\u79fb\u53ef\u4ee5 $O(1)$ \u4fee\u6539\uff09\uff0c\u8bbf\u95ee\u67d0\u4e2a\u8282\u70b9\u800c\u8fd8\u672a\u4fee\u6539 $a[c[u]]$ \u65f6 $a[c[u]]$ \u5e94\u5f53\u662f\u4ee5 $lst$ \u4e3a\u6839\u65f6 $c[u]$ \u7684\u8d21\u732e\uff0c\u800c\u6211\u4eec\u53c8\u77e5\u9053\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u65f6 $a[c[u]$ \u4e00\u5b9a\u4e3a $n$\uff0c\u4e8c\u8005\u4e4b\u5dee\u5373\u4e3a $c[u]$ \u65b0\u589e\u7684\u8d21\u732e\u3002\u56de\u6eaf\u65f6\u8bb0\u5f97\u8fd8\u539f $a$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u80fd\u5f97\u5230 $f[u]=f[lst]-size[u]+b[u]+n-a[c[u]]$\u3002\n\n---\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\uff08~~\u7801\u98ce\u6bd2\u7624\u8f7b\u55b7~~\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+10,C=1e5+10;\nint n;\nint c[N];\nint hd[N],to[N<<1],nxt[N<<1],cnte;\nint sz[N];\nint a[C],b[N];\nll f[N],ans;\nvoid add_edge(int u,int v){\n\tcnte++;\n\tto[cnte]=v;\n\tnxt[cnte]=hd[u];\n\thd[u]=cnte;\n\treturn;\n}\ntemplate<typename T>\nvoid rd(T &a){\n\tT f=1,x=0;\n\tchar c=getchar();\n\tfor(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=x*10+c-'0';\n\ta=f*x;\n\treturn;\n}\ntemplate<typename T>\nvoid wt(T x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)wt(x/10);\n\tputchar(x%10+'0');\n\treturn;\n}\nvoid dfs1(int u,int lst){\n\tint tmp=a[c[u]];//\u63d0\u524d\u5b58\u8d77\u6765\u65b9\u4fbf\u4e4b\u540e\u8fd8\u539f \n\ta[c[lst]]=0;//\u6e05\u7a7a c[lst] \u8d21\u732e\uff0c\u7528\u4ee5\u8bb0\u5f55\u5b50\u6811\u4e2d\u7684\u8d21\u732e \n\tsz[u]=1;\n\tfor(int i=hd[u];i;i=nxt[i]){\n\t\tint v=to[i];\n\t\tif(v==lst)\n\t\t\tcontinue;\n\t\tdfs1(v,u);\n\t\tsz[u]+=sz[v];\n\t}\n\ta[c[u]]=sz[u];//\u5c06\u5b50\u6811\u4e2d\u7684\u8d21\u732e\u8986\u76d6\n\tb[u]=a[c[lst]];\n\ta[c[u]]+=tmp;//\u8fd9\u91cc\u5206\u5f00\u4e24\u6b65\u662f\u4e3a\u4e86\u9632\u6b62 u \u4e0e lst \u989c\u8272\u76f8\u540c\u65f6 b[u] \u8bb0\u5f55\u4e0a\u4e0d\u5c5e\u4e8e\u5b50\u6811\u4e2d\u7684\u8d21\u732e\n\treturn;\n}\nvoid dfs2(int u,int lst){\n\tint tmp1=a[c[u]],tmp2=a[c[lst]];\n\tif(u!=1){\n\t\tf[u]=f[lst]-sz[u]+b[u]+n-a[c[u]];//\u6b64\u65f6 a[c[u]] \u8fd8\u6ca1\u6709\u4fee\u6539\uff0c\u5b58\u7684\u662f\u4ee5 lst \u4e3a\u6839\u65f6 c[u] \u7684\u8d21\u732e \n\t\ta[c[u]]=n,a[c[lst]]=n-sz[u]+b[u];//\u73b0\u5728 a \u662f\u4ee5 u \u4e3a\u6839\u8282\u70b9\u65f6\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\u4e86 \n\t}\n\tfor(int i=hd[u];i;i=nxt[i]){\n\t\tint v=to[i];\n\t\tif(v==lst)\n\t\t\tcontinue;\n\t\tdfs2(v,u);\n\t}\n\ta[c[u]]=tmp1,a[c[lst]]=tmp2;\n}\nint main(){\n\trd(n);\n\tfor(int i=1;i<=n;i++)\n\t\trd(c[i]);\n\tfor(int i=1,u,v;i<n;i++){\n\t\trd(u),rd(v);\n\t\tadd_edge(u,v),add_edge(v,u);\n\t}\n\tdfs1(1,0);//\u76f4\u63a5\u628a 1 \u5f53\u505a\u6839\u8282\u70b9 \n\tfor(int i=1;i<=1e5;i++)\n\t\tf[1]+=a[i];\n\tdfs2(1,0);\n\tfor(int i=1;i<=n;i++)\n\t\twt(f[i]),putchar('\\n');\n\treturn 0;\n}\n```\n",
        "postTime": 1606830395,
        "uid": 258968,
        "name": "arimx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2664 \u6811\u4e0a\u6e38\u620f"
    },
    {
        "content": "### \u626b\u63cf\u7ebf\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u8986\u76d6\n\n\uff08\u753b\u98ce\u8be1\u5f02\uff0c\u771f\u7684\u6ca1\u6709\u70b9\u5206\u6cbb\uff0c\u6ca1\u6709\u865a\u6811\u3002\u3002\u3002\uff09\n\n**\u25cf\u7b80\u8981\u7248:**\n\t\t\n\t\u5bf9\u6bcf\u79cd\u989c\u8272\u5206\u522b\u8003\u8651\uff0c\n\t\u6bcf\u4e2a\u70b9\u4f1a\u8d21\u732e\u7684S(i,j)\u5f62\u6210\u5e73\u9762\u4e0a\u7684\u82e5\u5e72\u77e9\u5f62\u3002\n\t\u7136\u540e\u7528\u626b\u63cf\u7ebf+\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u8986\u76d6\u53bb\u6c42\u5f97\uff1a\n\t\u53ea\u8003\u8651\u8be5\u989c\u8272\u65f6\u7684\u6bcf\u4e2asum[u](\u51c6\u786e\u8bf4\u662fsum[u]\u7684\u5dee\u5206\u6570\u7ec4)\n    \u628a\u6bcf\u79cd\u989c\u8272\u5f97\u5230\u7684sum[u]\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\t\t\n**\u25cf\u8be6\u7ec6\u7248\uff1a**\n\t\n\t\u4e8b\u5148dfs\u4e00\u904d\u8fd9\u9897\u6811,\u5bf9\u6bcf\u4e2a\u70b9u\u8bb0\u5f55\u4e0b\u5b83\u7684dfs\u5e8f\u53f7\u3002\n\t\u7136\u540e\u7ef4\u62a4\u51fabe[u](begin)\u8868\u793au\u7684\u5b50\u6811\u5185\u6700\u5c0f\u7684dfs\u5e8f\u53f7(\u663e\u7136\u5c31\u662f\u5b83\u81ea\u5df1\u7684\u5e8f\u53f7\u5566)\n\t\u4ee5\u53caen[u](end)\u8868\u793au\u7684\u5b50\u6811\u5185\u6700\u5927\u7684dfs\u5e8f\u53f7(\u4e5f\u5c31\u662fu\u5b50\u6811\u91cc\u6700\u540e\u4e00\u4e2a\u88ab\u904d\u5386\u5230\u7684\u70b9\u7684\u5e8f\u53f7)\n\t\n\t\u8003\u8651\u6811\u4e0a\u7684\u67d0\u4e00\u4e2a\u70b9u\uff0c\u5b83\u7684\u989c\u8272\u4e3ac\uff0c\u5047\u8bbe\u5176\u5b83\u70b9\u90fd\u662f\u6ca1\u6709\u989c\u8272\u7684\uff0c\n\t\u90a3\u4e48\u6765\u8003\u8651\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u70b9\u4f1a\u4e3a\u54ea\u4e9bS(i,j)\u8d21\u732e1\u7684\u503c\n\t\u663e\u7136\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\u60c5\u51b5\uff1a\n\t\t1).i\u4e3au\u5916\u9762\u7684\u70b9\uff0cj\u4e3ax\u5b50\u6811\u5185\u7684\u70b9\u3002 \n\t\t  (\u6216\u8005j\u4e3au\u5916\u9762\u7684\u70b9\uff0ci\u4e3au\u5b50\u6811\u5185\u7684\u70b9)\n\t\t2).i,j\u5206\u522b\u4e3ax\u7684\u4e0d\u540c\u513f\u5b50\u7684\u5b50\u6811\u5185\u7684\u70b9\u3002\n\t\t  (\u8fd9\u6837\u7684\u8bdd\uff0ci,j\u7684lca\u4e3au\u561b)\u3002\n\t\t  \n\t\u73b0\u5728\u6211\u4eec\u8d4b\u4e88\u4e8c\u5143\u7ec4(i,j)\u51e0\u4f55\u610f\u4e49\uff1a\u5bf9\u5e94\u7740\u5750\u6807\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9(i,j)\uff0c\n\t\n\t\u6709\u4e86\u4e8c\u7ef4\u5e73\u9762\uff0c\u6211\u4eec\u5728\u628a\u4e4b\u524d\u7684\u4e24\u7c7b\u60c5\u51b5\u53cd\u6620\u5230\u5e73\u9762\u4e0a:\uff08\u5efa\u8bae\u753b\u56fe\u7406\u89e3\uff09 \n\t\t1).i,j\u4e00\u4e2a\u4e3au\u5916\u9762\u7684\u70b9\uff0c\u53e6\u4e00\u4e2a\u4e3au\u5b50\u6811\u5185\u7684\u70b9\u3002\n\t\t\t\u5b50\u60c5\u51b5(1)\uff1ai=1~be[u],j=be[u]~en[u]\n\t\t\t\t\u90a3\u4e48\u8fd9\u5c31\u5bf9\u5e94\u7740(1~be[u],be[u]~en[u])\u8fd9\u6837\u4e00\u4e2a\u77e9\u5f62\uff0c\n\t\t\t\u5b50\u60c5\u51b5(2,\u7c7b\u4f3c\u4e0a\u9762\uff0c\u53ea\u662f\u628ai,j\u4ea4\u6362)\uff1ai=be[u]~en[u],j=1~be[u]\n\t\t\t\t\u90a3\u4e48\u8fd9\u5c31\u5bf9\u5e94\u7740(be[u]~en[x],1~be[u])\u8fd9\u6837\u4e00\u4e2a\u77e9\u5f62\uff0c\n\t\t\t\u5b50\u60c5\u51b5(3): i=be[u]~en[u],j=en[u]~N\n\t\t\t\t\u90a3\u4e48\u8fd9\u5c31\u5bf9\u5e94\u7740(be[u]~en[u],en[u]~N)\u8fd9\u6837\u4e00\u4e2a\u77e9\u5f62\uff0c\n\t\t\t\u5b50\u60c5\u51b5(4,\u7c7b\u4f3c\u4e0a\u9762\uff0c\u53ea\u662f\u628ai,j\u4ea4\u6362)\uff1ai=en[u]~N,j=be[u]~en[u]\n\t\t\t\t\u90a3\u4e48\u8fd9\u5c31\u5bf9\u5e94\u7740(en[u]~N,be[u]~en[u])\u8fd9\u6837\u4e00\u4e2a\u77e9\u5f62\uff0c\n\t\t2).i,j\u5206\u522b\u4e3ax\u7684\u4e0d\u540c\u513f\u5b50\u7684\u5b50\u6811\u5185\u7684\u70b9\u3002\n\t\t\t\u8fd9\u91cc\u9700\u8981\u679a\u4e3eu\u7684\u6bcf\u4e2a\u513f\u5b50v\uff1a\n\t\t\t\u5b50\u60c5\u51b5(1)\uff1ai=be[u]~(en[v]-1),j=be[v]~en[v]\n\t\t\t\t\u90a3\u4e48\u8fd9\u5c31\u5bf9\u5e94\u7740(be[u]~(en[v]-1),be[v]~en[v])\u8fd9\u6837\u4e00\u4e2a\u77e9\u5f62\uff0c\n\t\t\t\u5b50\u60c5\u51b5(2,\u7c7b\u4f3c\u4e0a\u9762\uff0c\u53ea\u662f\u628ai,j\u4ea4\u6362)\uff1ai=be[v]~en[v],j=be[u]~(en[v]-1)\n\t\t\t\t\u90a3\u4e48\u8fd9\u5c31\u5bf9\u5e94\u7740(be[v]~en[v],be[u]~(en[v]-1))\u8fd9\u6837\u4e00\u4e2a\u77e9\u5f62\uff0c\n\t\t\t\u5b50\u60c5\u51b5(3)\uff1ai=be[v]~en[v],j=(en[v]+1)~en[u]\n\t\t\t\t\u90a3\u4e48\u8fd9\u5c31\u5bf9\u5e94\u7740(be[v]~en[v],(en[v]+1)~en[u])\u8fd9\u6837\u4e00\u4e2a\u77e9\u5f62\uff0c\n\t\t\t\u5b50\u60c5\u51b5(4,\u7c7b\u4f3c\u4e0a\u9762\uff0c\u53ea\u662f\u628ai,j\u4ea4\u6362)\uff1ai=(en[v]+1)~en[u],j=be[v]~en[v]\n\t\t\t\t\u90a3\u4e48\u8fd9\u5c31\u5bf9\u5e94\u7740((en[v]+1)~en[u],be[v]~en[v])\u8fd9\u6837\u4e00\u4e2a\u77e9\u5f62\uff0c\n\t\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u628a\u4e0a\u9762\u8fd9\u4e9b\u77e9\u5f62\u8986\u76d6\u5728\u5e73\u9762\u4e0a\uff0c\n\t\u5982\u679c\u53d1\u73b0(i,j)\u8fd9\u4e2a\u70b9\u88ab\u8986\u76d6\u7684\u8bdd\uff0c\u5c31\u8868\u660e\uff0ci\u5230j\u7684\u8def\u5f84\u4e0a\u6709\u8fd9\u4e48\u4e00\u4e2a\u989c\u8272\u3002\n\t\u7531\u4e8e\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u540c\u4e00\u4e2a\u989c\u8272\u53ea\u80fd\u8ba1\u7b97\u4e00\u6b21\u3002\n\t\u6240\u4ee5\u628a\u76f8\u540c\u989c\u8272\u7684\u70b9\u5f52\u5728\u4e00\u8d77\uff0c\u7136\u540e\u4e00\u79cd\u989c\u8272\u4e00\u79cd\u989c\u8272\u53bb\u505a\u3002\n\t\u628a\u5f53\u524d\u989c\u8272\u7684\u70b9\u4ea7\u751f\u7684\u77e9\u5f62\u5168\u90e8\u53bb\u8986\u76d6\u5e73\u9762\uff0c\n\t\u7136\u540e\u7528\u626b\u63cf\u7ebf+\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u8986\u76d6\u53bb\u5f97\u5230\u6bcf\u4e2ax\u4f4d\u7f6e\u4e0ay\u88ab\u8986\u76d6\u7684\u957f\u5ea6y_cover\uff0c\n\ty_cover\u7684\u542b\u4e49\u5c31\u662f\uff0c\u53ea\u8003\u8651\u5f53\u524d\u989c\u8272\u65f6\uff0csum[x]\u7684\u503c \n\t(\u5f53\u7136\u4e0d\u7528\u9010\u4e2a\u6c42\u51fa\u6bcf\u4e2ax\u4f4d\u7f6e\u4e0ay\u7684\u8986\u76d6\u957f\u5ea6\uff0c\u8fd9\u91cc\u91c7\u7528\u4e00\u4e2a\u6570\u7ec4\u53bb\u8bb0\u5f55sum[x]\u7684\u5dee\u5206\uff0c\u6700\u540e\u518d\u6c42\u4e00\u904d\u524d\u7f00\u5c31\u597d\u4e86)\n\t \n**\u25cf\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a**\n\n\t\t\u663e\u7136\u5f71\u54cd\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5173\u952e\u5728\u7ef4\u62a4\u82e5\u5e72\u77e9\u5f62\u7684\u8986\u76d6\u4e0a\u9762\u3002\n\t\t\u5bf9\u4e8e\u6bcf\u4e2a\u77e9\u5f62\uff0c\u4f1a\u5b58\u5728logN\u7ea7\u522b\u7684\u65f6\u95f4\u82b1\u8d39\u3002\n\t\t\u7531\u4e8e\u6bcf\u4e2a\u70b9\u6700\u591a\u53ea\u4f1a\u4ea7\u751f\u5e38\u6570k\u4e2a\u77e9\u5f62\n\t\t\u6240\u4ee5\uff0c\u590d\u6742\u5ea6\u5c31O(K*N*logN).\n\t\t\u4f46\u662f\u6bcf\u4e2a\u70b9\u4f1a\u4ea7\u751f\u7684\u77e9\u5f62\u6700\u591a\u67098\u4e2a\uff0c\n\t\t\u6240\u4ee5\u590d\u6742\u5ea6\u91cc\u7684K\u518d\u4e58\u4e0a\u7ebf\u6bb5\u6811\u7684\u8986\u76d6\u548c\u67e5\u8be2\u6b21\u6570\u4e5f\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2alogN\u4e86\uff0c\n\t\t\u8fd9\u4e5f\u662f\u8fd9\u4e2a\u505a\u6cd5\u8dd1\u5f97\u6bd4\u8f83\u6162\u7684\u539f\u56e0\u3002 \n\t\t\n**\t\u81f3\u4e8e\u70b9\u5206\u6cbb\u7684\u505a\u6cd5\uff0c\u63a8\u8350\u8fd9\u4e2a\u5f88\u68d2\u7684\u9898\u89e3\uff1a\n\thttps://www.luogu.org/blog/user24559/solution-p2664**\n\t\n~~\uff08\u90a3\u4e2aread()\u662f\u771f\u7684\u88ab\u5361\u5e38\u4e86\uff0c\u5e76\u4e0d\u662f\u4e2a\u4eba\u89c9\u5f97\u5199\u8d77\u6765\u6bd4scanf()\u987a\u624b\uff0c\u8ff7...\uff09~~\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 100050\n#define INF 0x3f3f3f3f\nusing namespace std;\nint N,dnt,snt;\nint be[MAXN],en[MAXN],fa[MAXN];\nlong long cc[MAXN],ANS[MAXN];\nstruct List{\n\tint lnt;\n\tint to[MAXN*2],nxt[MAXN*2],head[MAXN];\n\tList():lnt(2){}\n\tvoid Add(int c,int u){\n\t\tto[lnt]=u; nxt[lnt]=head[c]; head[c]=lnt++;\n\t}\n}CL,E;\nstruct Segment{\n\t//Every vertice can lead to (4 + the num of son*4) Plates. In the other words there are 2*4*2*N segments at most.\n\tint x,yl,yr,k;\n\tbool operator < (const Segment &rtm) const{\n\t\treturn x<rtm.x||(x==rtm.x&&k>rtm.k);\n\t}\n}S[MAXN*16];\nstruct SGT{\n\t//The Segment Tree are used to maintain the cover of the line.\n\tint size,root;\n\tint ls[MAXN*2],rs[MAXN*2],cover[MAXN*2],tag[MAXN*2];\n\tvoid Pushup(int u,int l,int r){\n\t\tcover[u]=tag[u]?(r-l+1):cover[ls[u]]+cover[rs[u]];\n\t}\n\tvoid Modify(int &u,int l,int r,int al,int ar,int k){\n\t\tif(!u) u=++size;\n\t\tif(al<=l&&r<=ar) return (void)(tag[u]+=k,Pushup(u,l,r));\n\t\tint mid=(l+r)>>1;\n\t\tif(al<=mid) Modify(ls[u],l,mid,al,ar,k);\n\t\tif(mid<ar) Modify(rs[u],mid+1,r,al,ar,k);\n\t\tPushup(u,l,r);\n\t}\n}DT;\nvoid dfs(int u,int dad){\n\tbe[u]=++dnt; fa[u]=dad;\n\tfor(int e=E.head[u];e;e=E.nxt[e]){\n\t\tint v=E.to[e]; if(v==dad) continue;\n\t\tdfs(v,u);\n\t}\n\ten[u]=dnt;\n}\nvoid insplate(int x1,int x2,int y1,int y2){\n\tif(x1>x2||y1>y2) return;\n\tS[++snt]=(Segment){x1,y1,y2,1};\n\tS[++snt]=(Segment){x2+1,y1,y2,-1};\n}\nvoid read(int &x){\n\tstatic int sign; static char ch;\n\tx=0; sign=1; ch=getchar();\n\tfor(;ch<'0'||'9'<ch;ch=getchar()) if(ch==-'-') sign=-1;\n\tfor(;'0'<=ch&&ch<='9';ch=getchar()) x=x*10+ch-'0';\n\tx=x*sign;\n}\nint main(){\n\tread(N); int minc=INF,maxc=0;\n\tfor(int i=1,c;i<=N;i++)\n\t\tread(c),CL.Add(c,i),\n\t\tminc=min(minc,c),maxc=max(maxc,c);\n\tfor(int i=1,a,b;i<N;i++)\n\t\tread(a),read(b),E.Add(a,b),E.Add(b,a);\n\tdfs(1,0);\n\tfor(int c=minc,u,ycover;c<=maxc;c++){\n\t\tsnt=0; ycover=0;\n\t\tfor(int i=CL.head[c];i;i=CL.nxt[i]){\n\t\t\tu=CL.to[i];\n\t\t\tinsplate(1,be[u],be[u],en[u]);\n\t\t\tinsplate(be[u],en[u],1,be[u]);\n\t\t\tinsplate(be[u],en[u],en[u]+1,N);\n\t\t\tinsplate(en[u]+1,N,be[u],en[u]);\n\t\t\tfor(int e=E.head[u];e;e=E.nxt[e]){\n\t\t\t\tint v=E.to[e]; if(v==fa[u]) continue;\n\t\t\t\tinsplate(be[u],be[v]-1,be[v],en[v]);\n\t\t\t\tinsplate(be[v],en[v],be[u],be[v]-1);\n\t\t\t\tinsplate(be[v],en[v],en[v]+1,en[u]);\n\t\t\t\tinsplate(en[v]+1,en[u],be[v],en[v]);\n\t\t\t}\n\t\t}\n\t\tsort(S+1,S+snt+1);\n\t\tfor(int i=1;i<=snt;i++){\n\t\t\tcc[S[i-1].x]+=ycover;\n\t\t\tcc[S[i].x]-=ycover;\n\t\t\tDT.Modify(DT.root,1,N,S[i].yl,S[i].yr,S[i].k);\n\t\t\tycover=DT.cover[DT.root];\n\t\t}\n\t}\n\tfor(int i=1;i<=N;i++) ANS[i]=ANS[i-1]+cc[i];\n\tfor(int i=1;i<=N;i++) printf(\"%lld\\n\",ANS[be[i]]);\n\treturn 0;\n}    \n```",
        "postTime": 1520664262,
        "uid": 20972,
        "name": "__ZJ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "# \u6811\u4e0a\u6e38\u620f\u9898\u89e3\n@ sxd666888\u5de8\u4f6c\uff0c\u592a\u5de8\u4e86\uff0c$O(n)$\u505a\u6cd5\u8650\u7206\u5168\u573a\u3002\n\n\u4f46\u662f\u7ec6\u8282\u6709\u70b9\u6ca1\u8bb2\u6e05\u695a\uff08~~\u6211\u7406\u89e3\u80fd\u529b\u592a\u5dee\u4e86~~\uff09\n\n\u6211\u6765\u8865\u5145\u4e00\u4e0b\u7ec6\u8282(~~\u5927\u4f6c\u8ba4\u4e3a\u6211\u4eec\u7406\u6240\u5e94\u5f53\u7406\u89e3\u7684\u4e1c\u897f~~)\n\n**$upd:$(\u4f5c\u8005\u4e0a\u9762\u6709\u4e9b\u56fe\u753b\u9519\u4e86\uff0c\u6bcf\u4e00\u5c0f\u6811\u5757\u4e2d\u4e0d\u5e94\u8be5\u5305\u62ec\u84dd\u8272\u7684\u70b9\uff0c\u96be\u4ee5\u4fee\u6539\uff0c\u656c\u8bf7\u8c05\u89e3\u3002)**\n\n\u9996\u5148\uff0c\u5220\u9664\u67d0\u4e00\u79cd\u989c\u8272\u4f1a\u5f62\u6210\u5f88\u591a\u68f5\u5c0f\u6811\uff0c\n\n**\u6ce8\u610f\uff1a\u6b64\u6587\u4e2d\u5c0f\u6811\u8ddf\u5b50\u6811\u4e0d\u540c\u3002**\n\n\u6211\u4eec\u82e5\u5c06\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\u770b\u4e3a\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u7b2c\u4e00\u4e2a\u70b9\uff0c\n\n\n\u90a3\u4e48\uff0c\n\n\u6bcf\u68f5\u5c0f\u6811\u4e2d\u7684\u6240\u6709\u70b9\u5230\u5176\u5b83\u5c0f\u6811\u4e0a\u7684\u4efb\u610f\u70b9\u90fd\u4f1a\u7ecf\u8fc7\u8fd9\u68f5\u5c0f\u6811\u7684\u6839\u7684\u7236\u4eb2\uff0c\n\n\u4f1a\u6709\u4e00\u6b21\u8d21\u732e\u3002\n\n\u5982\u56fe\u6837\u4f8b\uff1a\n\n![](https://img2018.cnblogs.com/blog/1655789/201908/1655789-20190828182605783-1603958222.png)\n\n\u5220\u9664\u84dd\u8272\u70b9\u540e\uff1a\n\n![](https://img2018.cnblogs.com/blog/1655789/201908/1655789-20190828182635763-402681221.png)\n\u6211\u4eec\u4e0d\u59a8\u770b\u4e00\u770b\u56fe\u4e2d\u7684\u70b9$x$\uff0c\n\n\u5230\u5c0f\u6811\u5916\u4efb\u610f\u4e00\u70b9\u7684\u8def\u5f84\u4e0a\u90fd\u7ecf\u8fc7\u70b9$y$\uff0c\u4e14\u7ecf\u8fc7\u7684\u7b2c\u4e00\u4e2a\u84dd\u70b9\u5c31\u662f$y$\u3002\n\n\u770b\u56fe\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5427\u3002\n\n![](https://img2018.cnblogs.com/blog/1655789/201908/1655789-20190828183217995-545383655.png)\n\n\u6240\u4ee5\uff0c\u6bcf\u4e2a\u70b9\u5728\u5220\u9664\u4e00\u79cd\u989c\u8272\u4ee5\u540e\uff0c\u8fd9\u79cd\u989c\u8272\u5bf9\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u4e3a$(n-siz)$(\u5176\u4e2d$siz$\u4e3a\u5c0f\u6811\u5927\u5c0f)\u3002\n\n\u6bcf\u4e2a\u70b9\u6240\u6709\u989c\u8272\u7684\u8d21\u732e\u4e3a\n$(n-siz_{1})+(n-siz_{2})+...+(n-siz_{num})=n*num-\\sum_{i=1}^{num}siz_{i}$\n\n**\u6ce8\u610f\uff1a\u6bcf\u4e2a\u70b9\u81ea\u5df1\u7684\u989c\u8272\u7684\u8d21\u732e\u4e3an,\u56e0\u4e3a\u5728\u5230\u6bcf\u4e2a\u70b9\u7684\u8def\u5f84\u4e0a\uff0c\u5b83\u90fd\u662f\u7b2c\u4e00\u4e2a\u6b64\u989c\u8272\u7684\u70b9\u3002**\n\n\u5c06\u6bcf\u68f5\u5c0f\u6811\u7684\u5927\u5c0f\u5b58\u4e8e\u6839\u5904($dfs$)\uff0c\n\n\u6700\u540e\u7edf\u8ba1($get_ans$)\u3002\n\n\u518d\u8bf4\u4e00\u4e0b\u54b1\u6570\u7ec4\u7684\u5b9a\u4e49\u3002\n\n$c[x]:x$\u7684\u989c\u8272\uff0c$v[x]:$\u8868\u793a\u8fd9\u79cd\u989c\u8272\u662f\u5426\u51fa\u73b0\uff0c$siz[x]:$x\u7684\u5b57\u6570\u5927\u5c0f\uff0c$sz:$\u5220\u9664\u7236\u4eb2\u989c\u8272\u540e\u7684\u5c0f\u6811\u5927\u5c0f\uff0c\n\n$sub[x]:$\u8bb0\u5f55\u5220\u9664\u989c\u8272\u4e3a$x$\u7684\u70b9\u540e\uff0c\u4e0e\u6b64\u5c0f\u6811\u4e0d\u8fde\u901a\u7684\u70b9\u6570\u5927\u5c0f\uff0c$pre[x]:$\u5220\u9664\u989c\u8272\u4e3ax\u7684\u70b9\u540e\uff0c\u4e0a\u4e00\u68f5\u5c0f\u6811\u7684\u5927\u5c0f(\u7236\u4eb2\u7956\u8f88\u4e0a\u7684)\n\n$ans[x]:$\u7b54\u6848\uff0c$sum:$ \u76ee\u524d\u6b64\u70b9\u88ab\u8986\u76d6\u7684\u5c0f\u6811\u7684\u5927\u5c0f\u4e4b\u548c\u3002\n\n\u603b\u5171\u5206\u4e3a\u4e24\u6b65\uff1a$dfs()$\u548cget_ans()$\u4e0a\u9762\u8bb2\u4e86)\n\n\u6211\u5c31\u8d34\u8d34\u4ee3\u7801\uff0c\u8d34\u8d34\u56fe\u7247\u5427:\n\n### $1.dfs():$\n\n![](https://img2018.cnblogs.com/blog/1655789/201908/1655789-20190828192707274-1272430182.png)\n\n\n```cpp\nvoid dfs(int x,int fa){\n     siz[x]=1; ll tmp=sub[c[fa]];//\u50a8\u5b58\u8fd9\u68f5\u5b50\u6811\u5916\u7684sub(\u5305\u62ec\u5176\u5b83\u5b50\u6811\u548c\u7236\u8f88)\n     FOR(i,x)\n         if(e[i].to!=fa)\n            dfs(e[i].to,x),siz[x]+=siz[e[i].to];//\u6c42x\u7684\u5b50\u6811\u5927\u5c0f\n     ++sub[c[x]];//\u5220\u53bb\u6b64\u70b9\n     if(fa) sz[x]=siz[x]-sub[c[fa]]+tmp,sub[c[fa]]+=sz[x];//sz[x]:\u6c42\u4ee5x\u4e3a\u6839\u7684\u5c0f\u6811\u5927\u5c0f\uff0csub\u66f4\u65b0\uff0c\u56fe\u4e2d\u6709\u8be6\u89e3\n}\n```\n### 2.get_ans():\n\n![](https://img2018.cnblogs.com/blog/1655789/201908/1655789-20190828194615033-1744279463.png)\n\n\n```cpp\nvoid get_ans(int x,int fa){\n     ll tmp=pre[c[fa]];//\u8bb0\u5f55\u7236\u8f88\u91cc\u4e4b\u524d\u4e00\u5757\u7684\u88ab\u6b64\u989c\u8272\u8986\u76d6\u7684\u70b9\u6570\n     sum+=sz[x]-tmp,pre[c[fa]]=sz[x],ans[x]=n*num-sum+pre[c[x]];\n     //sum\u5c06\u989c\u8272\u4e3ac[fa]\u7684\u5757\u5927\u5c0f\u66f4\u65b0\uff0cpre\u4e5f\u66f4\u65b0\uff0cans\u7684\u5f0f\u5b50\u4e0a\u9762\u6709\u89e3\u91ca\n     FOR(i,x)\n        if(e[i].to!=fa)\n           get_ans(e[i].to,x);\n     pre[c[fa]]=tmp,sum-=sz[x]-tmp;\n     //\u8fd8\u539f\uff0c\u4e0d\u5c06\u5f71\u54cd\u5e26\u5230\u53e6\u4e00\u68f5\u5b50\u6811\n}\n```\n**\u6ce8\u610f\uff1a$++sub[c[x]]$\u4e0d\u80fd\u653e\u5728$if(fa)$\u4e4b\u540e\uff0c\u56e0\u4e3a\u5b58\u5728\u7236\u4eb2\u513f\u5b50\u989c\u8272\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u5728\u6b64\u60c5\u51b5\u4e2d\uff1a**\n![](https://img2018.cnblogs.com/blog/1655789/201908/1655789-20190828194615033-1744279463.png)\n\n**\u8fd8\u6709\uff0c\u5904\u7406\u4e00\u4e0b\u6839\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u5b83\u7684\u3002**\n\n![](https://img2018.cnblogs.com/blog/1655789/201908/1655789-20190828202727585-772560553.png)\n\n\u603b\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define For(i,l,r) for(int i=(l);i<=(r);++i)\n#define FOR(i,x) for(int i=head[x];i;i=e[i].nxt)\nusing namespace std;\nconst int N=1e5+6;\nint t1,t2,cnt=0,c[N],v[N],siz[N],sz[N],sub[N],head[N];\nll n,num=0,sum=0,pre[N],ans[N];\nstruct edge{int nxt,to;}e[N<<1];\ninline void add(int u,int v){e[++cnt].nxt=head[u],e[cnt].to=v,head[u]=cnt;}\ninline int rd(){\n   int T=0,F=1; char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-') F=-1; ch=getchar();}\n   while(ch>='0'&&ch<='9') T=(T<<3)+(T<<1)+(ch-48),ch=getchar();\n   return F*T;\n}\nvoid dfs(int x,int fa){\n     siz[x]=1; ll tmp=sub[c[fa]];//\u50a8\u5b58\u8fd9\u68f5\u5b50\u6811\u5916\u7684sub(\u5305\u62ec\u5176\u5b83\u5b50\u6811\u548c\u7236\u8f88)\n     FOR(i,x)\n         if(e[i].to!=fa)\n            dfs(e[i].to,x),siz[x]+=siz[e[i].to];//\u6c42x\u7684\u5b50\u6811\u5927\u5c0f\n     ++sub[c[x]];//\u5220\u53bb\u6b64\u70b9\n     if(fa) sz[x]=siz[x]-sub[c[fa]]+tmp,sub[c[fa]]+=sz[x];//sz[x]:\u6c42\u4ee5x\u4e3a\u6839\u7684\u5c0f\u6811\u5927\u5c0f\uff0csub\u66f4\u65b0\uff0c\u56fe\u4e2d\u6709\u8be6\u89e3\n}\nvoid get_ans(int x,int fa){\n     ll tmp=pre[c[fa]];//\u8bb0\u5f55\u7236\u8f88\u91cc\u4e4b\u524d\u4e00\u5757\u7684\u88ab\u6b64\u989c\u8272\u8986\u76d6\u7684\u70b9\u6570\n     sum+=sz[x]-tmp,pre[c[fa]]=sz[x],ans[x]=n*num-sum+pre[c[x]];\n     //sum\u5c06\u989c\u8272\u4e3ac[fa]\u7684\u5757\u5927\u5c0f\u66f4\u65b0\uff0cpre\u4e5f\u66f4\u65b0\uff0cans\u7684\u5f0f\u5b50\u4e0a\u9762\u6709\u89e3\u91ca\n     FOR(i,x)\n        if(e[i].to!=fa)\n           get_ans(e[i].to,x);\n     pre[c[fa]]=tmp,sum-=sz[x]-tmp;\n     //\u8fd8\u539f\uff0c\u4e0d\u5c06\u5f71\u54cd\u5e26\u5230\u53e6\u4e00\u68f5\u5b50\u6811\n}\nint main(){\n    n=read();\n    For(i,1,n){\n        c[i]=read();\n        if(!v[c[i]]) v[c[i]]=1,++num;\n    }\n    For(i,1,n-1) t1=read(),t2=read(),add(t1,t2),add(t2,t1);\n    dfs(1,0);\n    For(i,1,1e5) if(v[i]) sum+=n-sub[i],pre[i]=n-sub[i]; //\u7279\u6b8a\u5904\u7406\u6839\u8282\u70b9\n    get_ans(1,0);\n    For(i,1,n) printf(\"%lld\\n\",ans[i]);\n    return 0;\n} \n```\n\u6e29\u99a8\u63d0\u793a\uff1a\u4ee3\u7801\u4e34\u65f6\u62fc\u51d1\uff0c\u5e76\u4e00\u5b9a\u80fd\u5bf9\u54e6\uff0c\u4f46\u7406\u89e3\u8d77\u6765\u6ca1\u95ee\u9898\u3002",
        "postTime": 1566995598,
        "uid": 44180,
        "name": "ljk123",
        "ccfLevel": 0,
        "title": "\u6811\u4e0a\u6e38\u620f\u9898\u89e3"
    },
    {
        "content": "### [\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2664)  \n\u9898\u76ee\u8981\u6c42$sum_j=\\sum_{i=1}^ns(i,j)$,\u5176\u4e2d$s(i,j)$\u4e3a$(i,j)$\u8def\u5f84\u4e0a\u7684\u989c\u8272\u6570\u91cf\uff0c$n,c[i]\\leq 1e5$\u3002  \n\u770b\u5230\u8fd9\u9898\u60f3\u5230\u4e86\u70b9\u5206\u6cbb\uff0c\u7136\u800c\u4e0d\u592a\u597d\u60f3\uff0c\u4e8e\u662f\u5c31\u6362\u4e86\u4e2a\u601d\u8def\u60f3\u4e86\u4e0b$O(n)$,\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\uff0c\u5220\u53bb\u8be5\u989c\u8272\u7684\u6240\u6709\u70b9\uff0c\u5219\u5269\u4e0b\u7684\u6240\u6709\u8054\u901a\u5757\u7684\u7b54\u6848\u90fd\u8981\u52a0\u4e0a$n-siz,siz$\u662f\u8054\u901a\u5757\u7684\u70b9\u6570\u3002  \n\u6ce8\u610f\u8fd9\u91cc\u662f\u6781\u5927\u8054\u901a\u5757\uff0c\u56e0\u4e3a\u8be5\u6781\u5927\u8054\u901a\u5757\u4e2d\u65e0\u8be5\u989c\u8272\u7684\u70b9\uff0c\u5373\u8fde\u901a\u5757\u5185\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u800c\u8054\u901a\u5757\u5916\u4efb\u610f\u4e00\u70b9\u90fd\u53ef\u4ee5\u5bf9\u6b64\u8054\u901a\u5757\u4ea7\u751f1\u7684\u8d21\u732e\u3002  \n\u4f46\u662f\u5173\u952e\u662f\u600e\u4e48\u6c42\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u4e0d\u542b\u67d0\u79cd\u989c\u8272\u7684\u6781\u5927\u8054\u901a\u5757\uff1f  \n### 40pts:  \n\u76f4\u63a5\u8bb0$siz[i][j]$\u4e3a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4e0d\u542b\u989c\u8272$j$\u7684\u8054\u901a\u5757\u70b9\u6570\u3002  \n\u8f6c\u79fb\u65f6$siz[x][i]=\\sum_{u\\in son[x]}siz[u][i],siz[x][col[x]]=0$\u5373\u53ef  \n\u8bb0$rt[x]$\u4e3a\u4e0d\u542b$col=x$\u7684\u6781\u5927\u8054\u901a\u5757\u7684\u6839\uff0c\u5982\u679c\u8bf4$rt[x]$\u5728\u4ece$fa$\u8f6c\u79fb\u5230$x$\u7684\u65f6\u5019\u8fd8\u80fd\u5305\u542b$x$\u90a3\u4e48\u5c31\u4e0d\u7528\u7ba1\uff0c\u4f46\u662f\u56e0\u4e3a\u5230$x$\uff0c\u53ef\u80fd\u542b$col[fa[x]]$,\u4e0d\u80fd\u542b$col[x]$\uff0c\u53ea\u6709\u8fd9\u4e24\u4e2a\u8054\u901a\u5757\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u90a3\u4e48\u5c31$+siz[x][col[fa[x]]]-siz[rt[col[x]]][col[x]]$\u5373\u53ef\u3002  \n\u6ce8\u610f\u8fd8\u8981\u5c06$rt$\u4fee\u6539\u3002  \n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int N=2e3+10;\nint d[N],nxt[N<<1],to[N<<1],n,tot;\nint ans[N],fa[N],col[N],siz[N],del[N],S;\nint dp[N][N];\ninline void ins(int a,int b){to[++tot]=b,nxt[tot]=d[a],d[a]=tot;}\ninline void dfs(int x){\n\tfor(int i=1;i<=S;++i)dp[x][i]=1;\n\tfor(int i=d[x];i;i=nxt[i]){\n\t\tint u=to[i];\n\t\tif(u!=fa[x]){\n\t\t\tfa[u]=x;\n\t\t\tdfs(u);\n\t\t\tfor(int j=1;j<=S;++j)\n\t\t\t\tdp[x][j]+=dp[u][j];\n\t\t}\n\t}dp[x][col[x]]=0;\n}int a[N],rt[N];\ninline void work(int x,int tmp){\n\ttmp+=dp[x][col[fa[x]]]-dp[rt[col[x]]][col[x]];\n\tint p=rt[col[x]];\n\tans[x]=n*S-tmp;\n\tfor(int i=d[x];i;i=nxt[i]){\n\t\tint u=to[i];\n\t\tif(u!=fa[x]){\n\t\t\trt[col[x]]=u;\n\t\t\twork(u,tmp);\n\t\t}\n\t}rt[col[x]]=p;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&col[i]),a[i]=col[i];\n\tsort(a+1,a+1+n),S=unique(a+1,a+1+n)-a-1;\n\tfor(int i=1;i<=n;++i)col[i]=lower_bound(a+1,a+1+S,col[i])-a;\n\tint u,v;\n\tfor(int i=1;i<n;++i)scanf(\"%d%d\",&u,&v),ins(u,v),ins(v,u);\n\tdfs(1);int T=0;\n\tfor(int i=1;i<=S;++i)T+=dp[1][i],rt[i]=1;\n\twork(1,T);\n\tfor(int i=1;i<=n;++i)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n\n```\n\n### 100pts:\n\u60f3\u4e86\u534a\u5929\u6ca1\u60f3\u51fa\u6765\uff0c\u770b\u4e86\u9898\u89e3\u624d\u60f3\u51fa\u6765 ~~\uff08\u4f46\u662f\u611f\u89c9\u8bb2\u7684\u4e0d\u6e05\u695a\uff09~~  \n40pts\u590d\u6742\u5ea6\u4e3b\u8981\u5728\u4e8e\u9884\u5904\u7406\u9664\u4e86\u6240\u6709\u70b9\u7684\u6240\u6709\u989c\u8272\uff0c\u90a3\u4e48\u6709\u5fc5\u8981\u5417\uff1f  \n\u5b9e\u9645\u4e0a\u5176\u5b9e\u53ea\u548c$fa$\u548c$rt$\u6709\u5173\uff0c\u800c$dp[rt[col[x]]][col[x]]$\u662f\u53ef\u4ee5\u518d\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u4e0b\u7684\uff0c\u90a3\u4e48\u5c31\u53ea\u5269\u4e0b\u4e00\u4e2a$dp[x][col[fa[x]]]$\uff0c\u90a3\u4e48\u5c82\u4e0d\u662f\u53ea\u9700\u8981\u5904\u7406\u51fa$dp[x][col[fa[x]]]$\u5c31\u597d\u4e86\uff1f  \n\u90a3\u4e48\u5c31\u7528\u4e2a$lz[x]$\u4ee3\u8868$dp[x][col[fa[x]]]$,$tag[x]$\u4ee3\u8868$dp[rt[x]][x]$\u3002  \n\u9884\u5904\u7406\u7684\u8bdd\u5176\u5b9e\u4e0d\u7b97\u592a\u96be\uff0c\u5177\u4f53\u4ee3\u7801\u6709\u6ce8\u91ca\u3002  \n\u90a3\u4e48\u4e4b\u540e\u5c31\u505a\u4e0b\u5dee\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u4ece$fa$\u8f6c\u79fb\u5230$x$\u5566\uff01 \n\u5373$-tag[col[fa[x]]]+lz[x]$\u3002\u4f46\u662f\u7531\u4e8e$tag[col[x]]$\u88ab\u591a\u51cf\u4e86\uff0c\u7edf\u8ba1\u7b54\u6848\u8981\u52a0\u56de\u53bb\u3002\u4ee3\u7801\u6709~~\u8be6\u7ec6~~\u6ce8\u91ca\u3002  \n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int N=1e5+10;\nLL ans[N],qwq;\nint d[N],nxt[N<<1],to[N<<1],n,tot;\nint fa[N],col[N],siz[N],del[N],S;\nint lz[N],tag[N];\ninline void ins(int a,int b){to[++tot]=b,nxt[tot]=d[a],d[a]=tot;}\ninline void dfs(int x){\n\tsiz[x]=1;\n\tint tmp=del[col[fa[x]]];\n\tfor(int i=d[x];i;i=nxt[i]){\n\t\tint u=to[i];\n\t\tif(u!=fa[x]){\n\t\t\tfa[u]=x,dfs(u);\n\t\t\tsiz[x]+=siz[u];\n\t\t}\n\t}++del[col[x]];\n\tif(fa[x]){\n\t\tlz[x]=siz[x]-(del[col[fa[x]]]-tmp);//\u4e0d\u542bcol[fa[x]]\u7684\u6781\u5927\u8054\u901a\u5757 \n\t\tdel[col[fa[x]]]+=lz[x];// lz[x]+del[col[fa[x]]]-tmp=siz[x] \n\t}\n}int a[N];\n//\u5904\u7406\u51fa\u7684del[i]\u662f\u542bcol=i\u7684\u8054\u901a\u5757\u7684\u70b9\u6570\u3002 \n//\u540c\u4e00\u6761\u94fe\u6709\u82e5\u5e72\u4e2a\u76f8\u540c\u989c\u8272\u53ea\u6709\u6700\u6d45\u7684x\u5bf9del\u6709siz[x]\u7684\u8d21\u732e\u3002  \n//\u90a3\u4e48\u663e\u7136n-del[i]\u662f\u6839\u8282\u70b9\u4e0d\u542bcol=i\u7684\u4e14\u542b\u6839\u8282\u70b91\u7684\u6781\u5927\u8054\u901a\u5757\u7684\u70b9\u6570\u3002 \ninline void work(int x){\n\t//tag[z]\u4ee3\u8868\u4e0d\u542bz\u989c\u8272\u7684\u4e14\u542bx\u7684\u6781\u5927\u8054\u901a\u5757\u70b9\u6570 \n\t//\u53ea\u6709col[x]\u548ccol[fa[x]]\u4e24\u5757\u53d1\u751f\u6539\u53d8\u3002\n\t//lz[x]\u8bb0\u7684x\u4e0d\u542bcol[fa[x]]\u7684\u6781\u5927\u8054\u901a\u5757\u70b9\u6570\u4e4b\u548c \n\t//pre:\u5728\u6b64\u4e4b\u524d\u4e0d\u542bcol[fa[x]]\u7684\u6781\u5927\u8054\u901a\u5757\u70b9\u6570\u4e4b\u548c\n\t//\u505a\u5dee\u5373\u53ef\u5f97\u6c42\u51facol[fa[x]]\u7684\u6539\u53d8\u91cf \n\tint pre=tag[col[fa[x]]]; \n\tqwq+=lz[x]-pre; \n\ttag[col[fa[x]]]=lz[x];\n\t//\u8054\u901a\u5757\u6539\u53d8\u4e86\uff0c\u8981\u66f4\u65b0tag \n\tans[x]=n*1ll*S-qwq+tag[col[x]];\n\t//\u6ce8\u610f\u56e0\u4e3a\u4e0a\u9762tag[col[fa[x]]]\u662f\u542b\u4e86col[x]\u7684,\u4f46\u662flz[x]\u4e0d\u542bcol[x]\u7684, \n\tfor(int i=d[x];i;i=nxt[i]){\n\t\tint u=to[i];\n\t\tif(u!=fa[x])work(u);\n\t}tag[col[fa[x]]]=pre;\n\tqwq-=lz[x]-pre;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&col[i]),a[i]=col[i];\n\tsort(a+1,a+1+n),S=unique(a+1,a+1+n)-a-1;\n\tfor(int i=1;i<=n;++i)col[i]=lower_bound(a+1,a+1+S,col[i])-a;\n\tint u,v;\n\tfor(int i=1;i<n;++i)scanf(\"%d%d\",&u,&v),ins(u,v),ins(v,u);\n\tdfs(1);\n\tfor(int i=1;i<=S;++i)qwq+=n-del[i],tag[i]=n-del[i];//\u521d\u59cb\u5316\u4e00\u4e0b \n\twork(1);\n\tfor(int i=1;i<=n;++i)printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n\n```",
        "postTime": 1558238820,
        "uid": 54113,
        "name": "ecnerwaIa",
        "ccfLevel": 0,
        "title": "P2664 \u6811\u4e0a\u6e38\u620f"
    },
    {
        "content": "\n[My Blog](https://www.cnblogs.com/luoshuitianyi/p/10472957.html)\n---\n\n\u70b9\u5206\u6cbb\u7684\u795e\u4ed9\u9898\u54c7\u5929\u54ea\uff0c\u4e00\u4e2a\u4e2a\u9898\u89e3\u770b\u5f97\u6211\u90a3\u53eb\u4e00\u4e2a\u61f5\u3002\u6211\u8fd8\u662f\u770b\u795e\u4ed9\u7684\u9898\u89e3\u624d\u61c2\u7684\uff0c\u6211\u8fd9\u7bc7\u9898\u89e3\u5e0c\u671b\u80fd\u8ba9\u60a8\u4eec\u7406\u89e3\u795e\u4ed9\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u7785\u4e00\u773c\u6570\u636e\u8303\u56f4 $10^5......$ \u662f $nlog$ \u6216 $nlog^2$ \u7684\u6807\u51c6\u8303\u56f4\uff0c\u90a3\u4e48\u5f88\u663e\u7136\u6211\u4eec\u4e0d\u80fd\u7edf\u8ba1\u8def\u5f84\uff0c\u800c\u662f\u5e94\u8be5\u7edf\u8ba1\u989c\u8272\u5bf9\u8def\u5f84\u4eec\u7684\u8d21\u732e\u3002\u5219\u7b2c\u4e00\u65f6\u95f4\u53d1\u73b0\u548c\u6811\u4e0a\u8def\u5f84\u6709\u5173\uff0c\u81ea\u7136\u4e0a\u70b9\u5206\u3002\n\n\u90a3\u4e48\u70b9\u5206\u600e\u4e48\u641e\u5462\uff1f\u8bf4\u6765\u5c31\u4e0d\u7b80\u5355\u554a $......$ \uff0c\u5bf9\u4e8e\u5f53\u524d\u5904\u7406\u7684\u8fd9\u9897\u5b50\u6811\uff0c\u6211\u4eec\u8bb0 $cnt[i]$ \u4e3a\u5b83\u7684\u6240\u6709\u5b50\u6811\u5185\u5230\u4ed6\u7684\u8def\u5f84\u4e2d\u5305\u542b\u989c\u8272 $i$ \u7684\u8def\u5f84\u6761\u6570\uff0c\u90a3\u4e48\u5f53\u5904\u7406\u5230\u4e00\u9897\u5b50\u6811\u5185\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7edf\u8ba1\u5f97\u5230\u5176\u4ed6\u5b50\u6811\u8d21\u732e\u7684\u6240\u6709 $cnt$ \u6570\u7ec4\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8be5\u5b50\u6811\u5185\u7684\u4e00\u4e2a\u70b9\uff0c\u5148\u4e0d\u8003\u8651\u5b83\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u989c\u8272\uff0c\u5219\u5176\u5b83\u5b50\u6811\u5185\u7684\u989c\u8272\u5bf9\u5f53\u524d\u8282\u70b9 $x$ \u7684\u8d21\u732e\u80af\u5b9a\u4e3a $\\sum cnt[i]$ (\u60a8\u522b\u544a\u8bc9\u6211\u8fd9\u4e2a\u770b\u4e0d\u51fa\u6765\u5c31\u6210) \u3002\n\n\u90a3\u4e48\u8fd9\u6837\u4e00\u6765\u5c31\u6709\u95ee\u9898\u5982\u4e0b\uff1a\n\n- $cnt$ \u6570\u7ec4\u5982\u4f55\u7edf\u8ba1\u3002\n- \u5f53\u524d\u8282\u70b9 $i$ \u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u989c\u8272\u7684\u8d21\u732e\u5982\u4f55\u5904\u7406\u3002\n\n\u6211\u4eec\u5148\u89e3\u51b3 $cnt$ \u6570\u7ec4\uff0c\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5148\u7edf\u8ba1\u6bcf\u9897\u5b50\u6811\u7684 $cnt$ \u6570\u7ec4\uff0c\u8bbe $col[i]$ \u4e3a\u70b9 $i$ \u7684\u989c\u8272\uff0c\u5219\u6bcf\u5f53\u6211\u4eec\u8bbf\u95ee\u5230\u4e00\u4e2a\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u989c\u8272 $col[i]$ \uff0c\u90a3\u4e48 $cnt[col]+=size[i]$ \u3002\u6211\u60f3\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\uff0c\u56e0\u4e3a\u5b50\u6811\u5185\u7684\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u90fd\u7ecf\u8fc7\u4e86\u8282\u70b9 $i$ \u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5f00\u4e2a $book$ \u6570\u7ec4\u8bb0\u5f55 $book[i]$ \u4e3a\u5f53\u524d\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u989c\u8272\u4e3a $i$ \u7684\u8282\u70b9\u4e2a\u6570\uff0c\u8fdb\u5165 $i$ \u8282\u70b9\u7684\u65f6\u5019 $book[col[i]]++$ \uff0c\u9000\u51fa\u65f6 $--$ \u5373\u53ef\u3002\n\n\u5982\u4f55\u51cf\u53bb\u5f53\u524d\u5904\u7406\u7684\u5b50\u6811\u5bf9 $cnt$ \u6570\u7ec4\u7684\u8d21\u732e\u5462\uff1f\u5f53\u7136\u662f\u5728\u5904\u7406\u8fd9\u9897\u5b50\u6811\u4e4b\u524d\u518d\u626b\u4e00\u904d\uff0c\u628a\u8d21\u732e\u53bb\u6389\uff0c\u5904\u7406\u5b8c\u4e4b\u540e\u53c8\u626b\u4e00\u904d\uff0c\u518d\u52a0\u56de\u6765 = = \u3002~~\u6211\u4e5f\u89c9\u5f97\u5f88\u8822\u3002~~\n\n\u7b2c\u4e8c\u4e2a\u95ee\u9898\u7a0d\u7a0d\u96be\u60f3\u4e00\u70b9\uff0c\u8bbe\u5f53\u524d\u5206\u6cbb\u7684\u5b50\u6811\u4e3a $now$ \uff0c\u6211\u4eec\u5148 $dfs$ \u7edf\u8ba1\u8d21\u732e\uff0c\u5bf9\u4e8e\u5f53\u524d\u7ed3\u70b9 $i$ \uff0c\u6211\u4eec\u8bb0\u5f55 $tot=\\sum_{col[j]\\in col[pre_i]} cnt[col[j]]$ \uff0c\u4e5f\u5c31\u662f\u5c06 $i$ \u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u989c\u8272\u5728 $cnt$ \u6570\u7ec4\u4e2d\u5bf9\u5e94\u8d21\u732e\u8bb0\u5f55\u4e0b\u6765\uff0c\u7531\u4e8e\u5176\u4ed6\u5b50\u6811\u5185\u8fd9\u4e9b\u989c\u8272\u7684\u8def\u5f84\u5230\u70b9 $i$ \u4e5f\u4f1a\u7ecf\u8fc7\u8fd9\u4e9b\u70b9\uff0c\u6211\u4eec\u4e0d\u80fd\u91cd\u590d\u8ba1\u7b97\u8d21\u732e\uff0c\u90a3\u5c31\u53ea\u80fd\u727a\u7272 $cnt$ \u6570\u7ec4\u7684\u8d21\u732e\u4e86 $QwQ$ \u3002\n\n\u63a5\u7740\uff0c\u5982\u679c\u7edf\u8ba1\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u989c\u8272\uff0c\u90a3\u4e48 $tot+=cnt[col[i]]$ \uff0c\u53ef\u4ee5\u9884\u6599\u5230\u7684\u662f\uff0c\u8fd9\u4e2a\u65b0\u989c\u8272\u5bf9\u5b83\u7684\u5b50\u6811\u5185\u6bcf\u4e2a\u8282\u70b9\u7684\u8d21\u732e\u80af\u5b9a\u662f $size[root]-size[now]$ \uff0c\u4e5f\u5373\u5f53\u524d\u5206\u6cbb\u5b50\u6811\u5916\u6240\u6709\u8282\u70b9\u90fd\u53ef\u4ee5\u901a\u8fc7\u5f53\u524d\u8282\u70b9\u5230\u8fbe\u5f53\u524d\u8282\u70b9\u5b50\u6811\u5185\u7684\u8282\u70b9\uff0c\u6211\u4eec\u5e26\u7740\u8fd9\u4e2a\u8d21\u732e\u5f80\u4e0b $dfs$ \uff0c\u8bbe\u5176\u4e3a $num$ \uff0c\u5728\u8bbe\u4e00\u4e2a $sum=\\sum cnt[i]$ \u6765\u8868\u793a\u603b\u8d21\u732e\uff0c\u90a3\u4e48\u5f53\u6211\u4eec $dfs$ \u5230\u70b9 $i$ \u7684\u65f6\u5019\u5c31\u53d8\u6210\u4e86\u5982\u4e0b\u6d41\u7a0b\uff1a\n\n- \u5224\u65ad\u70b9 $i$ \u7684\u989c\u8272\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u82e5\u6ca1\u6709\uff0c\u5219 $tot+=cnt[col[i]],num+=size[root]-size[now]$ \u3002\n- $ans[i]+=sum-tot+num$\n\n\u7136\u540e\u5206\u6cbb\u9012\u5f52\u5904\u7406\u66f4\u591a\u7684\u5b50\u6811\u5c31\u5b8c\u4e86\uff01\n\n\u4e0d\u7406\u89e3\u53ef\u4ee5\u770b\u4e0b\u4ee3\u7801(\u7801\u98ce\u4ed9\uff0c\u65e0\u7a7a\u683c\uff0c\u4e0d\u8fc7\u6709\u6ce8\u91ca)\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,col[100001];\nint rt,sum,top,Y,maxs[100001],size[100001],now[100001],cbook[100001],cnt[100001];\nint head[100001],nx[200001],to[200001];\nbool vis[100001],Book[100001];\nlong long Sum,ans[100001];\nvoid add(int u,int v,int d)\n{\n\tto[d]=v,nx[d]=head[u];\n\thead[u]=d;\n}\nvoid getrt(int x,int fa)\n{\n\tsize[x]=1,maxs[x]=0;\n\tfor(int i=head[x];i;i=nx[i])\n\t\tif(to[i]!=fa&&!vis[to[i]])\n\t\t{\n\t\t\tgetrt(to[i],x);\n\t\t\tsize[x]+=size[to[i]];\n\t\t\tmaxs[x]=max(maxs[x],size[to[i]]);\n\t\t}\n\tmaxs[x]=max(maxs[x],sum-size[x]);\n\tif(maxs[x]<maxs[rt])rt=x;\n}\nvoid getsize(int x,int fa)\n{\n\tsize[x]=1;\n\tfor(int i=head[x];i;i=nx[i])\n\t\tif(to[i]!=fa&&!vis[to[i]])\n\t\t\tgetsize(to[i],x),size[x]+=size[to[i]];\n}\nvoid getcol(int x,int fa)\n{\n\tif(!now[col[x]])\n\t{\n\t\tcnt[col[x]]+=size[x];\n\t\tSum+=size[x];\n\t}//\u5982\u679c\u6ca1\u51fa\u73b0\u8fc7\uff0c\u6211\u4eec\u7684\u8d21\u732e\u5c31 +=size\n\tif(!Book[col[x]])cbook[++top]=col[x],Book[col[x]]=true;//\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u5206\u6cbb\u7684\u90e8\u5206\u603b\u5171\u6709\u54ea\u4e9b\u989c\u8272\n\tnow[col[x]]++;//\u51fa\u73b0\u6b21\u6570\u53d8\u66f4\n\tfor(int i=head[x];i;i=nx[i])\n\t\tif(to[i]!=fa&&!vis[to[i]])\n\t\t\tgetcol(to[i],x);\n\tnow[col[x]]--;\n}\nvoid delcol(int x,int fa)\n{\n\tif(!now[col[x]])\n\t{\n\t\tcnt[col[x]]-=size[x];\n\t\tSum-=size[x];\n\t}\n\tnow[col[x]]++;\n\tfor(int i=head[x];i;i=nx[i])\n\t\tif(to[i]!=fa&&!vis[to[i]])\n\t\t\tdelcol(to[i],x);\n\tnow[col[x]]--;\n}\nvoid Count(int x,int fa,int num,long long tot)\n{\n\tif(!now[col[x]])num++,tot+=cnt[col[x]];//\u5982\u679c\u6b64\u989c\u8272\u9996\u6b21\u51fa\u73b0\uff0c\u8fa3\u4e48\u8bb0\u5f55 tot \u8d21\u732e\n\tnow[col[x]]++;\n\tans[x]+=Sum-tot+num*Y;//ans\u7684\u5904\u7406\n\tfor(int i=head[x];i;i=nx[i])\n\t\tif(to[i]!=fa&&!vis[to[i]])\n\t\t\tCount(to[i],x,num,tot);\n\tnow[col[x]]--;\n}\nvoid work(int x)\n{\n\tgetsize(x,0);//\u5148\u628a size \u5904\u7406\u51fa\u6765\n\tSum=0,top=0;\n\tgetcol(x,0);//\u7edf\u8ba1\u6240\u6709\u5b50\u6811\u7684 cnt \u6570\u7ec4\n\tfor(int i=head[x];i;i=nx[i])\n\t\tif(!vis[to[i]])\n\t\t{\n\t\t\tnow[col[x]]++,delcol(to[i],x),cnt[col[x]]-=size[to[i]],Sum-=size[to[i]];//\u5148\u51cf\u53bb\u5f53\u524d\u5b50\u6811\u7684\u8d21\u732e\uff0c\u5404\u79cd\u51cf\u5c31\u5bf9\u4e86\n\t\t\tY=size[x]-size[to[i]],Count(to[i],x,0,0);//Y \u5c31\u662f\u5176\u4ed6\u5b50\u6811\u7684\u8282\u70b9\u6570\n\t\t\tgetcol(to[i],x),now[col[x]]--,cnt[col[x]]+=size[to[i]],Sum+=size[to[i]];//\u518d\u628a\u8d21\u732e\u52a0\u56de\u6765QwQ\n\t\t}\n\tans[x]+=Sum-cnt[col[x]]+size[x];\n\tfor(int i=1;i<=top;i++)//\u5c06\u51fa\u73b0\u8fc7\u7684\u989c\u8272\u7684\u8d21\u732e\u7edf\u7edf\u5220\u6389\n\t\tBook[cbook[i]]=false,cnt[cbook[i]]=0;\n}\nvoid solve(int x)\n{\n\tvis[x]=true;\n\twork(x);//\u5f00\u59cb\u8ba1\u7b97\u8d21\u732e\n\tfor(int i=head[x];i;i=nx[i])\n\t\tif(!vis[to[i]])\n\t\t{\n\t\t\trt=0,sum=size[to[i]];\n\t\t\tgetrt(to[i],x);\n\t\t\tsolve(rt);\n\t\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&col[i]);\n\tint u,v;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v,i);\n\t\tadd(v,u,i+n);\n\t}\n\tmaxs[rt=0]=sum=n;\n\tgetrt(1,0);//\u6c42\u91cd\u5fc3\n\tsolve(rt);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%lld\\n\",ans[i]);\n}\n```",
        "postTime": 1551702714,
        "uid": 39954,
        "name": "\u6d1b\u6c34\u00b7\u9526\u4f9d\u536b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "\u70b9\u5206\u6cbb\u771f\u662f\u4e00\u4e2a\u597d\u4e1c\u897f\u3002~~\u53ef\u60dc\u6211\u4e0d\u4f1a~~  \n\u8fd9\u79cd\u8981\u6c42\u6240\u6709\u8def\u7ecf\u7684\u9898**\u5f88\u53ef\u80fd**\u662f\u70b9\u5206\u6cbb\u3002  \n\u7136\u540e\u6211\u5c31\u4e0d\u4f1a\u4e86\u3002\u3002  \n\u65e2\u7136\u8981\u7528\u70b9\u5206\u6cbb\uff0c\u5c31\u60f3\uff0c\u70b9\u5206\u6cbb\u6709\u54ea\u4e9b\u4f18\u70b9\uff1f\u5b83\u53ef\u4ee5$O(nlogn)$\u904d\u5386\u5206\u6cbb\u6811\u7684\u6240\u6709\u5b50\u6811\u3002  \n\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5982\u53ef\u5feb\u901f\uff08$O(n)$\u6216O$(nlogn)$\uff09\u6c42\u4ee5\u4e00\u4e2a\u70b9\u4e3a\u6839\u7684\u65f6\u5019\uff0c\u5b50\u6811\u4e4b\u95f4\u7684\u8d21\u732e\uff08\u5f53\u7136\u8fd8\u6709\u6839\u8282\u70b9\u7684\uff09\u3002  \n\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u4e00\u68f5\u5b50\u6811\u4e2d\u4e00\u4e2a\u70b9\u5bf9\u5176\u4ed6\u5b50\u6811\u7684\u70b9\u4ea7\u751f\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u70b9\u7684\u989c\u8272\u5728\u5b83\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7b2c\u4e00\u6b21\u51fa\u73b0\uff08\u6216\u8005\u8bf4\u53ea\u7b97\u4e0a\u8fd9\u4e9b\u8d21\u732e\u7b54\u6848\u6b63\u786e\uff09\uff0c\u4e14\u8d21\u732e\u4e3a\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u3002\uff08\u4e0d\u8003\u8651\u5176\u5b83\u5b50\u6811\u7684\u989c\u8272)  \n\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u904d\u5386\u4e24\u904d\u5b50\u6811\uff0c\u7b2c\u4e00\u904d\u9884\u5904\u7406\u51fa\u6240\u6709\u5b50\u6811\u5bf9\u5176\u5b83\u5b50\u6811\u7684\u8d21\u732e\uff08\u5982\u4e0a\u8fb9\u4e00\u6bb5\u6240\u8bf4\u628a\u8d21\u732e\u7edf\u8ba1\uff09\uff0c\u7b2c\u4e8c\u6b21\u904d\u5386\u6bcf\u4e00\u9897\u5b50\u6811\u5148\u628a\u8fd9\u9897\u6811\u7684\u8d21\u732e\u53bb\u6389\uff0c\u7edf\u8ba1\u6240\u6709\u5176\u5b83\u7684\u6811\u5bf9\u8fd9\u9897\u6811\u7684\u8d21\u732e\u3002  \n\u90a3\u4e48\u5177\u4f53\u8be5\u600e\u4e48\u505a\uff1f\n```cpp\nvoid calc(int u){\n\tdfs1(u,0);\n\tans[u]+=sum;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(vis[v])continue;\n\t\tcnt[a[u]]++;\n\t\tsum-=size[v];color[a[u]]-=size[v];\n\t\tchange(v,u,-1);\n\t\tcnt[a[u]]--;\n\t\ttot=size[u]-size[v];\n\t\tdfs2(v,u);\n\t\tcnt[a[u]]++;\n\t\tsum+=size[v];color[a[u]]+=size[v];\n\t\tchange(v,u,1);\n\t\tcnt[a[u]]--;\n\t}\n\tclear(u,0);\n}\n```\n\u9996\u5148dfs1\u662f\u7edf\u8ba1\u8d21\u732e\u7684\uff0c\u7528sum\u8bb0\u5f55\u8d21\u732e\u548c\uff0ccolor[i]\u8bb0\u5f55\u7b2ci\u79cd\u989c\u8272\u7684\u8d21\u732e\u3002\n\u7136\u540e\u6839\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u7d2f\u52a0\u4e86\u3002  \n\u90a3\u4e48\u5982\u53ef\u5224\u65ad\u4e00\u4e2a\u989c\u8272\u7b2c\u4e00\u6b21\u51fa\u73b0\uff1f\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e2acnt[i]\u8bb0\u5f55\u7b2ci\u79cd\u989c\u8272\u5728\u5230\u6839\u7684\u8def\u5f84\u4e0a\u51fa\u73b0\u591a\u5c11\u6b21\u3002\u5f53cnt[i]\u7b49\u4e8e1\u7684\u65f6\u5019\u7edf\u8ba1\u8d21\u732e\u3002  \n\u7136\u540e\n```cpp\n\t\tcnt[a[u]]++;\n\t\tsum-=size[v];color[a[u]]-=size[v];\n\t\tchange(v,u,-1);\n\t\tcnt[a[u]]--;\n```\n\u7528\u6765\u6d88\u9664\u5b50\u6811\u8d21\u732e\u3002dfs2\u7edf\u8ba1\u5176\u5b83\u5b50\u6811\u5bf9\u8fd9\u9897\u5b50\u6811\u7684\u8d21\u732e\u3002  \n```cpp\nvoid dfs2(int u,int f){\n\tcnt[a[u]]++;\n\tif(cnt[a[u]]==1){\n\t\tsum-=color[a[u]];\n\t\tnum++;\n\t}\n\tans[u]+=sum+num*tot;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==f||vis[v])continue;\n\t\tdfs2(v,u);\n\t}\n\tif(cnt[a[u]]==1){\n\t\tsum+=color[a[u]];\n\t\tnum--;\n\t}\n\tcnt[a[u]]--;\n}\n```\n\u5982\u679c\u8fd9\u9897\u5b50\u6811\u4e2d\u51fa\u73b0\u4e00\u4e2a\u989c\u8272\uff0c\u5e76\u4e14\u5b83\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u90a3\u4e48\u51cf\u53bb\u6240\u6709\u5b50\u6811\u7684color[a[u]]\uff0c\u52a0\u4e0a\u5176\u5b83\u5b50\u6811\u7684\u8282\u70b9\u603b\u6570\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6761\u5230\u5176\u5b83\u5b50\u6811\u7684\u8def\u5f84\u90fd\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u4e00\u5f00\u59cb\u4e0d\u8003\u8651\u8d21\u732e\u5bf9\u5176\u4ed6\u5b50\u6811\u5f71\u54cd\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u904d\u5386\u5b50\u6811\u7684\u65f6\u5019\u4f1a\u628a\u8fd9\u4e9b\u91cd\u590d\u7684\u8d21\u732e\u51cf\u53bb\u3002  \n\u66f4\u5177\u4f53\u8fd8\u662f\u770b\u4ee3\u7801\u3002\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define int long long\nconst int N=101000;\nint Cnt,head[N];\nint g[N],size[N],cnt[N],a[N],sum,color[N],tot,num,root,all,vis[N],ans[N],n;\nstruct edge{\n\tint to,nxt;\n}e[N*2];\nvoid add_edge(int u,int v){\n\tCnt++;\n\te[Cnt].nxt=head[u];\n\te[Cnt].to=v;\n\thead[u]=Cnt;\n}\nint read(){\n\tint sum=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){sum=sum*10+ch-'0';ch=getchar();}\n\treturn sum*f;\n}\nvoid getroot(int u,int f){\n\tg[u]=0;size[u]=1;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==f||vis[v])continue;\n\t\tgetroot(v,u);\n\t\tsize[u]+=size[v];\n\t\tg[u]=max(g[u],size[v]);\n\t}\n\tg[u]=max(g[u],all-size[u]);\n\tif(g[u]<g[root])root=u;\n}\nvoid dfs1(int u,int f){\n\tcnt[a[u]]++;\n\tsize[u]=1;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==f||vis[v])continue;\n\t\tdfs1(v,u);\n\t\tsize[u]+=size[v];\n\t}\n\tif(cnt[a[u]]==1){\n\t\tsum+=size[u];\n\t\tcolor[a[u]]+=size[u];\n\t}\n\tcnt[a[u]]--;\n}\nvoid clear(int u,int f){\n\tcnt[a[u]]++;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==f||vis[v])continue;\n\t\tclear(v,u);\n\t}\n\tif(cnt[a[u]]==1){\n\t\tsum-=size[u];\n\t\tcolor[a[u]]-=size[u];\n\t}\n\tcnt[a[u]]--;\n}\nvoid dfs2(int u,int f){\n\tcnt[a[u]]++;\n\tif(cnt[a[u]]==1){\n\t\tsum-=color[a[u]];\n\t\tnum++;\n\t}\n\tans[u]+=sum+num*tot;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==f||vis[v])continue;\n\t\tdfs2(v,u);\n\t}\n\tif(cnt[a[u]]==1){\n\t\tsum+=color[a[u]];\n\t\tnum--;\n\t}\n\tcnt[a[u]]--;\n}\nvoid change(int u,int f,int k){\n\tcnt[a[u]]++;\n\tif(cnt[a[u]]==1){\n\t\tsum+=k*size[u];color[a[u]]+=k*size[u];\n\t}\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==f||vis[v])continue;\n\t\tchange(v,u,k);\n\t}\n\tcnt[a[u]]--;\n}\nvoid calc(int u){\n\tdfs1(u,0);\n\tans[u]+=sum;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(vis[v])continue;\n\t\tcnt[a[u]]++;\n\t\tsum-=size[v];color[a[u]]-=size[v];\n\t\tchange(v,u,-1);\n\t\tcnt[a[u]]--;\n\t\ttot=size[u]-size[v];\n\t\tdfs2(v,u);\n\t\tcnt[a[u]]++;\n\t\tsum+=size[v];color[a[u]]+=size[v];\n\t\tchange(v,u,1);\n\t\tcnt[a[u]]--;\n\t}\n\tclear(u,0);\n}\nvoid work(int u){\n\tcalc(u);\n\tvis[u]=1;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(vis[v])continue;\n\t\troot=0,all=size[v];\n\t\tgetroot(v,0);\n\t\twork(root);\n\t}\n}\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<n;i++){\n\t\tint u=read(),v=read();\n\t\tadd_edge(u,v);add_edge(v,u);\n\t}\n\tg[0]=n+10;root=0;all=n;\n\tgetroot(1,0);work(root);\n\tfor(int i=1;i<=n;i++)printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1546216320,
        "uid": 52173,
        "name": "xudaxia",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "\u521a\u5b66\u5b8c\u70b9\u5206\u6cbb\uff0c\"\u70b9\u5206\u6cbb\u771f\u597d\u73a9\"\uff0c$dalao$\u77ac\u95f4\u628a\u8fd9\u9898\u4e22\u8fc7\u6765\uff0c\u809b\u4e86\u4e09\u4e2a\u5c0f\u65f6\u7ec8\u4e8e$A$\u4e86\n\n$$ans_i=\\sum\\limits_{j=1}^n sum(i,j)$$\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u773c\u9898\u7cfb\u5217\uff0c\u5c31\u662f\u7ec6\u8282\u96be\u5904\u7406\n\n\u6a21\u677f\u9898\u544a\u8bc9\u6211\u4eec\uff1a\u8981\u628a\u5176\u4ed6\u5b50\u6811\u90fd\u5806\u5230\u4e00\u8d77\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u9898\u76f8\u5bf9\u6765\u8bf4\u5e76\u4e0d\u597d\u5904\u7406\n\n\u4f46\u5176\u5b9e\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff0c\u8bbe\u6811\u7684\u91cd\u5fc3\u4e3a$w$\uff0c\u4e00\u5bf9\u7236\u5b50\u5173\u7cfb\u7684\u70b9\u5bf9$(u,v)$\uff0c$v$\u662f\u5305\u542b$u$\u7684\n\n\u66f4\u65b0\uff1a\u5c06\u91cd\u5fc3\u770b\u4f5c\u4e00\u4e2a\u65e0\u8272\u8282\u70b9\uff0c\u904d\u5386\u5176\u4e2d\u4e00\u68f5\u5b50\u6811\uff0c\u80fd\u5f97\u5230\u5b50\u6811\u603b\u8d21\u732e\u53ca\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\n\n\u7edf\u8ba1\u7b54\u6848\uff1a\u70b9\u5bf9$(u,v)$\uff0c$v$\u7edf\u8ba1\u5728\u5176\u4ed6\u5b50\u6811\u7684\u8d21\u732e\u4e00\u5b9a\u6bd4$u$\u5c0f\uff0c\u4e4b\u524d\u5df2\u5f97\u51fa\u5176\u4ed6\u5b50\u6811\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\uff0c\u51cf\u6389\u5c31\u597d\u4e86\n\n\u7ec6\u8282\uff1a\n1. \u7edf\u8ba1\u91cd\u5fc3\u8d21\u732e\n1. \u7edf\u8ba1\u6bcf\u79cd\u989c\u8272\u8d21\u732e\u7684\u6807\u8bb0\u8bb0\u5f97\u5f39\u51fa\u5b50\u6811\u540e\u6e05\u7a7a\n1. \u5b9e\u9645\u83ca\u82b1\u56fe\u80fd\u5361\u7206\u7a7a\u95f4\uff0c\u53ef\u4ee5\u7528$map$\u5904\u7406\u6570\u7ec4\uff0c\u7531\u4e8e\u672c\u9898\u6570\u636e\u8fc7\u6c34\u5f00\u5b50\u6811\u5e8f\u5217$100$\u5c31\u80fd\u8fc7\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ninline LL Read(){\n    LL x(0),f(1); char c=getchar();\n    while(c<'0' || c>'9'){ if(c=='-')f=-1; c=getchar(); }\n    while(c>='0' && c<='9') x=(x<<3)+(x<<1)+c-'0',c=getchar();\n    return x*f;\n}\nconst LL maxn=1e5+9,inf=0x3f3f3f3f;\nstruct node{\n    LL to,nxt;\n}dis[maxn<<1];\nvoid Clear(LL u,LL now);\nLL num,root,N,mi,tmp,n,tree,nsize;\nLL head[maxn],size[maxn],a[maxn],cnt[100][maxn],ans[maxn],fir[maxn],V[maxn],sz[100],nsum[100],st[maxn];\nbool visit[maxn];\ninline void Add(LL u,LL v){\n    dis[++num]=(node){v,head[u]}, head[u]=num;\n}\nvoid Dfs(LL u){\n    size[u]=1; LL mx(0); visit[u]=true;\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Dfs(v), size[u]+=size[v];\n        mx=max(mx,size[v]);\n    }mx=max(mx,N-size[u]);\n    if(mi>mx) mi=mx,root=u;\n    visit[u]=false;\n}\nvoid Up(LL u,LL now){\n    ++sz[0], ++sz[now];\n    visit[u]=true;\n    bool f(false);\n    if(!fir[a[u]]) \n        fir[a[u]]=f=true,\n        cnt[0][a[u]]+=size[u],cnt[now][a[u]]+=size[u],\n        nsum[0]+=size[u],nsum[now]+=size[u];\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Up(v,now);\n    }visit[u]=false;\n    if(f) fir[a[u]]=false;\n}\nvoid Get(LL u,LL now){\n    bool f(false);\n    if(!fir[a[u]])\n        fir[a[u]]=f=true,tmp=tmp-cnt[0][a[u]]+cnt[now][a[u]],++tree;\n    ans[root]+=tree;\n    ans[u]+=tmp+tree*nsize; visit[u]=true;\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Get(v,now);\n    }visit[u]=false;\n    if(f) --tree,fir[a[u]]=false,tmp=tmp+cnt[0][a[u]]-cnt[now][a[u]];\n}\nvoid Div(LL u){\n    mi=inf, Dfs(u);\n    Dfs(root);\n    visit[u=root]=true;\n    memset(nsum,0,sizeof(nsum));\n    nsize=1;\n    LL now(0);\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        ++now;\n        Up(v,now);\n    }now=0;\n    for(LL i=head[u],S=nsize;i;i=dis[i].nxt){\n        LL v(dis[i].to); \n        if(visit[v]) continue;\n        ++now;\n        nsize=sz[0]-sz[now]+1;\n        tmp=nsum[0]-nsum[now];\n        fir[a[u]]=true, tree=1;\n        tmp=tmp-cnt[0][a[u]]+cnt[now][a[u]];\n        Get(v,now);\n        fir[a[u]]=false;\n    }\n    now=0;\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to); if(visit[v]) continue;\n        ++now;\n        Clear(v,now);\n    }\n    \n    for(LL i=head[u],sum=N;i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        N=size[v];\n        Div(v);\n    }\n}\nvoid Clear(LL u,LL now){\n    visit[u]=true;\n    cnt[0][a[u]]=cnt[now][a[u]]=0;\n    sz[0]=sz[now]=0;\n    nsum[0]=nsum[now]=0;\n    for(LL i=head[u];i;i=dis[i].nxt){\n        LL v(dis[i].to);\n        if(visit[v]) continue;\n        Clear(v,now);\n    }visit[u]=false;\n}\nint main(){\n    n=Read();\n    for(LL i=1;i<=n;++i) a[i]=Read();\n    for(LL i=1;i<n;++i){\n        LL u(Read()),v(Read());\n        Add(u,v), Add(v,u);\n    }\n    N=n, Div(1);\n    for(LL i=1;i<=n;++i) printf(\"%lld\\n\",ans[i]+1);\n    return 0;\n}\n```",
        "postTime": 1551077932,
        "uid": 88804,
        "name": "y2823774827y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u4e00\u4e2a\u8fa3\u9e21\u7684$\\Theta(n \\log^2n)$\u505a\u6cd5\n\n\u9996\u5148\u6211\u4eec\u5957\u4e2a\u70b9\u5206\u6cbb\n\n\u7136\u540e\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7edf\u8ba1\u8de8\u8fc7\u6839\u7684\u8def\u5f84\u7684\u8d21\u732e\n\n\u5148\u8dd1\u4e00\u904d\u4ee5\u5f53\u524d\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u548cDFS\u5e8f\n\n\u540c\u65f6\u5c06\u6839\u8def\u5f84\u4e0a\u9996\u6b21\u51fa\u73b0\u8be5\u989c\u8272\u7684\u70b9\u5b58\u8d77\u6765\n\n\u7136\u540e\u6839\u636e\u989c\u8272\u6392\u5e8f\n\n\u5bf9\u4e8e\u4e0d\u540c\u989c\u8272\u7edf\u8ba1\u7ed3\u679c\u663e\u7136\u4e92\u4e0d\u5f71\u54cd\n\n\u90a3\u4e48\u5bf9\u4e8e\u540c\u79cd\u989c\u8272\u6211\u4eec\u5bb9\u65a5\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n\u533a\u95f4\u52a0\u6cd5\u53ef\u4ee5\u7528DFS\u5e8f\u4e0a\u5dee\u5206\u6765\u4ee3\u66ff\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1e5+5;\n\nint n,np,rt,sum,tp;\nint h[MAXN];\nint siz[MAXN],mx[MAXN],sz[MAXN],id[MAXN],rid[MAXN];\nint clr[MAXN],bnk[MAXN],sm[MAXN];\nlong long v[MAXN];\nbool vis[MAXN];\nlong long ans[MAXN];\nstruct rpg{\n\tint li,nx;\n}a[MAXN<<1];\nstruct pt{\n\tint x,c,r;\n}stk[MAXN];\n\nint read()\n{\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||'9'<ch) ch=getchar();\n\twhile('0'<=ch&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x;\n}\n\nvoid add(int ls,int nx)\n{\n\ta[++np]=(rpg){h[ls],nx};h[ls]=np;\n\ta[++np]=(rpg){h[nx],ls};h[nx]=np;\n}\n\nvoid gtrt(int x,int fa)\n{\n\tsiz[x]=1;mx[x]=0;\n\tfor(int i=h[x];i;i=a[i].li){\n\t\tif(a[i].nx==fa||vis[a[i].nx]) continue;\n\t\tgtrt(a[i].nx,x);\n\t\tsiz[x]+=siz[a[i].nx];\n\t\tmx[x]=max(mx[x],siz[a[i].nx]);\n\t}mx[x]=max(mx[x],sum-siz[x]);\n\tif(mx[rt]>mx[x]) rt=x;\n\treturn;\n}\n\nvoid gtsz(int x,int fa)\n{\n\tsz[x]=1;id[x]=++id[0];rid[id[0]]=x;\n\tfor(int i=h[x];i;i=a[i].li){\n\t\tif(a[i].nx==fa||vis[a[i].nx]) continue;\n\t\tgtsz(a[i].nx,x);\n\t\tsz[x]+=sz[a[i].nx];\n\t}return;\n}\n\nvoid dfs(int x,int fa,int rot)\n{\n\tif(!bnk[clr[x]]) stk[++tp]=(pt){x,clr[x],rot};\n\t++bnk[clr[x]];\n\tfor(int i=h[x];i;i=a[i].li){\n\t\tif(a[i].nx==fa||vis[a[i].nx]) continue;\n\t\tdfs(a[i].nx,x,rot);\n\t}--bnk[clr[x]];\n\treturn;\n}\n\nbool cmp(pt a,pt b){return a.c<b.c;}\n\nvoid calc(int x)\n{\n\tid[0]=0;\n\tgtsz(x,x);bnk[clr[x]]=1;\n   \tans[x]+=sz[x];//\u7531\u6839\u5bfc\u81f4\u7684\u8d77\u70b9\u4e3a\u6839\u7684\u8def\u5f84\u5bf9\u6839\u7684\u8d21\u732e\n\tfor(int i=h[x];i;i=a[i].li){\n\t\tif(vis[a[i].nx]) continue;\n\t\tdfs(a[i].nx,a[i].nx,a[i].nx);\n\t\tv[id[a[i].nx]]+=sz[x]-sz[a[i].nx];\n\t\tv[id[a[i].nx]+sz[a[i].nx]]-=sz[x]-sz[a[i].nx];\n     \t\t//\u7531\u6839\u5bfc\u81f4\u7684\u8d77\u70b9\u5728\u8be5\u5b50\u6811\u5185\u8de8\u8fc7\u6839\u7684\u8def\u5f84\u5bf9\u8d77\u70b9\u7684\u8d21\u732e\n\t}sort(stk+1,stk+tp+1,cmp);\n\tfor(int l=1,r=0;l<=tp;l=r+1){\n\t\tint sum=0;\n\t\twhile(r+1<=tp&&stk[r+1].c==stk[l].c) ++r,sm[stk[r].r]+=sz[stk[r].x],sum+=sz[stk[r].x];\n\t\tfor(int i=l;i<=r;++i){\n\t\t\tv[id[stk[i].x]]-=sum-sm[stk[i].r];\n\t\t\tv[id[stk[i].x]+sz[stk[i].x]]+=sum-sm[stk[i].r];\n\t\t\t//\u51cf\u53bb\u8de8\u8fc7\u6839\u7684\u76f8\u540c\u989c\u8272\u5bfc\u81f4\u591a\u7b97\u7684\u8d21\u732e\n\t\t\tv[1]+=sz[stk[i].x];\n\t\t\tv[id[stk[i].r]]-=sz[stk[i].x];\n\t\t\tv[id[stk[i].r]+sz[stk[i].r]]+=sz[stk[i].x];\n\t\t\t//\u7edf\u8ba1\u7ec8\u70b9\u5728\u8be5\u5b50\u6811\u5185\u8def\u5f84\u5bf9\u8d77\u70b9\u7684\u8d21\u732e\n\t\t\tv[id[stk[i].x]]+=sz[x]-sz[stk[i].r];\n\t\t\tv[id[stk[i].x]+sz[stk[i].x]]-=sz[x]-sz[stk[i].r];\n        \t\t//\u8d77\u70b9\u5728\u8be5\u5b50\u6811\u5185\u5bf9\u8d77\u70b9\u7684\u8d21\u732e\n\t\t}for(int i=l;i<=r;++i) sm[stk[i].r]=0;\n\t}\n\tfor(int i=1;i<=id[0];++i) v[i]+=v[i-1],ans[rid[i]]+=v[i];\n\tfor(int i=1;i<=id[0]+1;++i) v[i]=0;\n\tbnk[clr[x]]=tp=0;\n\treturn;\n}\n\nvoid DFZ(int x)\n{\n\tvis[x]=1;calc(x);\n\tfor(int i=h[x];i;i=a[i].li){\n\t\tif(vis[a[i].nx]) continue;\n\t\tsum=siz[a[i].nx];rt=0;\n\t\tgtrt(a[i].nx,a[i].nx);\n\t\tDFZ(rt);\n\t}return;\n}\n\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i) clr[i]=read();\n\tfor(int i=1;i<n;++i){\n\t\tint x=read(),y=read();\n\t\tadd(x,y);\n\t}sum=n;mx[rt]=n;\n\tgtrt(1,1);\n\tDFZ(rt);\n\tfor(int i=1;i<=n;++i) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1550831893,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "\u77e5\u9053\u662f\u70b9\u5206\u6cbb\uff0c\u4f46\u5e76\u4e0d\u662f\u5f88\u597d\u60f3\u3002\n\n#### cnt[col]: \u4ece\u6b64\u65f6\u7684\u91cd\u5fc3\u51fa\u53d1\u5230\u6240\u6709\u7684\u5b50\u6811\u5185\uff0c\u5305\u542b\u989c\u8272col\u7684\u8def\u5f84\u6570\u3002\n#### sum[i]\uff1a\u7b54\u6848\u3002\n\n\u6240\u4ee5\u6bcf\u4e00\u6b21\u679a\u4e3e\u4e86\u91cd\u5fc3\u540e\uff0c\u5148DFS\u4e00\u6b21\uff0c\u6c42\u51fa\u5305\u542b\u91cd\u5fc3\u7684\u6574\u68f5\u5b50\u6811\u7684cnt. \n\next[ ] \u548c has[ ] \u7528\u4e8e\u7ed9\u989c\u8272\u5224\u91cd\uff0cCst[ ]\u662f\u50a8\u5b58\u989c\u8272\u7684\u6808\n\n```cpp\nvoid DFS(int x,int fa, llg *cnt){\n\tif(!ext[c[x]])Cst[++top]=c[x],ext[c[x]]=1;\n\tif(++has[c[x]]==1){\n\t\tcnt[c[x]]+=siz[x];\n\t}\n\tfor(Re int i=head[x];i;i=nxt[i]){\n\t\tint vv=v[i];\n\t\tif(vis[vv]||vv==fa)continue;\n\t\tDFS(vv,x,cnt);\n\t}\n\thas[c[x]]--;\n}\n```\n\n\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u65b0\u91cd\u5fc3\u4e86 sum[x]+= \u2211 cnt[ i ]\n\n\u6709\u4e86cnt\u4ee5\u540e\u6211\u4eec\u8981\u5982\u4f55\u5230\u91cd\u5fc3\u5916\u7684\u5b50\u6811\u91cc\u66f4\u65b0\u91cc\u9762\u7684\u70b9\u5462\uff1f\n\n\u8fd9\u7c7b\u7edf\u8ba1\u6570\u76ee\u7684\u70b9\u5206\u6cbb\u9898\u6709\u4e00\u4e2a\u5957\u8def\u6027\u7684\u505a\u6cd5\u3002\n\n\u5148\u4e0a\u56fe\n\n\n![](https://cdn.luogu.com.cn/upload/pic/50361.png)\n\n\u5bf9\u8fd9\u4e2a\u5b50\u6811\u50cf\u4e0a\u9762\u4e00\u6837DFS\u4e00\u6b21\uff0c\u628a\u5b50\u6811\u5bf9\u5e94\u7684cnt\u6570\u7ec4\u6c42\u51fa\u6765\uff0c\u5b58\u5230ct[]\u91cc\u9762\uff0c\u7136\u540e\u8fd9\u4e2a\u5206\u6cbb\u5757\u9664\u5b50\u6811\u7684\u5176\u4f59\u90e8\u5206\u7684cnt\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u76f8\u51cf\u6c42\u51fa\u6765\u4e86\u3002\u76f8\u5f53\u4e8e\u628a\u6b64\u65f6\u679a\u4e3e\u7684\u5b50\u6811\u6316\u53bb\uff0c\u51cf\u53bb\u5b83\u7684\u8d21\u732e\uff0c\u7b49\u4e00\u4e0b\u7528\u5269\u4f59\u90e8\u5206\u7684cnt\u6765\u66f4\u65b0\u8fd9\u4e2a\u5b50\u6811\u5185\u7684\u70b9\u3002\n\n\u8bbe\u6b64\u65f6\u8fd9\u4e2a\u6316\u53bb\u4e00\u4e2a\u5b50\u6811\u7684\u5206\u6cbb\u5757\u5927\u5c0f\uff08size)\u4e3aNsiz.\n\n\u679a\u4e3e\u4e0e\u91cd\u5fc3\u76f8\u8fde\u7684\u5b50\u6811\uff0c\u81ea\u4e0a\u800c\u4e0b\u5730\u904d\u5386\u6bcf\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u6ca1\u5230\u4e00\u4e2a\u70b9x \u5c31\u53ef\u4ee5\u66f4\u65b0\u5b83 sum[x]+= \u2211 cnt[ i ] (\u6b64\u65f6\u7684cnt[i]\u5df2\u7ecf\u51cf\u53bb\u4e86\u5b50\u6811\u7684\u8d21\u732e\uff09\n\n\u4f46\u9664\u4e86\u7528cnt\u66f4\u65b0\u8fd8\u4e0d\u591f\uff0c\u4ece\u4e0a\u5f80\u4e0b\u8d70\u7684\u8fc7\u7a0b\u6211\u4eec\u4f1a\u9047\u5230\u65b0\u7684\u70b9\u3001\u65b0\u7684\u989c\u8272\u3002\n\n\u8bbex\u7684\u989c\u8272\u4e3acx\n\n\u6240\u4ee5\u6b64\u65f6\u7684sum[x] \u8fd8\u8981\u52a0\u4e0a Nsiz-cnt[cx] (\u6b64\u65f6\u7684cnt[cx]\u5df2\u7ecf\u51cf\u53bb\u4e86\u5b50\u6811\u7684\u8d21\u732e\uff09\n\u8868\u793a\u90a3\u4e9b\u4ece\u5b50\u6811\u5916\u7684\u70b9\u5230\u5b50\u6811\u5185\u7b2c\u4e00\u6b21\u51fa\u73b0\u989c\u8272cx\u7684\u8def\u5f84\u7684\u6570\u91cf\u3002\n\n\u8fd9\u662f\u52a0\u7684 Nsiz-cnt[cx] \u4e5f\u8981\u52a0\u7ed9\u4e0b\u9762\u7684\u70b9\uff0c\u5b83\u4f1a\u5bf9\u6574\u4e2a\u5b50\u6811\u9020\u6210\u8d21\u732e\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a\u7c7b\u4f3ctag\u7684\u53d8\u91cf\u5b58\u8d77\u6765\u52a0\u7ed9\u4e0b\u9762\u7684\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\u5728\u4e0b\u9762\u82e5\u518d\u9047\u5230\u989c\u8272cx\uff0c\u5219\u4e0d\u9700\u8981\u518d\u6b21\u8ba1\u7b97\u3002\n\n\u6bcf\u6b21\u5904\u7406\u5b8c\u4e00\u4e2a\u5206\u6cbb\u5757\uff0c\u8bb0\u5f97\u8981\u628acnt[]\u6e050\uff0c\u4f46\u4e0d\u53ef\u4ee5\u7528memset\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n\n#define For(i,a,b) for(register int i=a;i<=b;++i)\n#define Dwn(i,a,b) for(register int i=a;i>=b;--i)\n#define Pn putchar('\\n')\n#define Re register\n#define llg long long\n\nusing namespace std;\n\nconst int N=1e5+5;\n\nint head[N],nxt[N*2],v[N*2],BH=1;\nint Cst[N],top=0,Cstx[N],siz[N],Mx[N];\nllg ct[N],cnt[N],cct[N],sum[N],Ctot;\nint n,m,c[N],x,y,rt,tot,Frt,tp,Nsiz;\nbool vis[N],ext[N];\n\ninline void read(int &v){\n\tv=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')v=v*10+c-'0',c=getchar();\n}\nvoid write(llg x){\n\tif(x>9)write(x/10);\n\tint xx=x%10;\n\tputchar(xx+'0');\n}\nvoid add(int ux,int vx){\n\tBH++;\n\tnxt[BH]=head[ux]; head[ux]=BH; v[BH]=vx;\n\tBH++;\n\tnxt[BH]=head[vx]; head[vx]=BH; v[BH]=ux;\n}\n\nint has[N];\nvoid dfsRT(int x,int fa){\n\tsiz[x]=1; Mx[x]=0; \n\tfor(Re int i=head[x];i;i=nxt[i]){\n\t\tint vv=v[i];\n\t\tif(vis[vv]||vv==fa)continue;\n\t\tdfsRT(vv,x);\n\t\tsiz[x]+=siz[vv];\n        Mx[x]=max(Mx[x],siz[vv]);\n\t}\n\tMx[x]=max(Mx[x],tot-siz[x]);\n\tif(Mx[x]<Mx[rt])rt=x;\n}\nint getWRT(int x,int fa,int sz){\n\trt=0; Mx[0]=2147483600; tot=sz;\n\tdfsRT(x,fa);\n\treturn rt;\n}\nvoid getSIZ(int x,int fa){ \n\tsiz[x]=1;\n\tfor(Re int i=head[x];i;i=nxt[i]){\n\t\tint vv=v[i]; \n\t\tif(vis[vv]||vv==fa)continue;\n\t\tgetSIZ(vv,x);\n\t\tsiz[x]+=siz[vv];\n\t}\n}\nvoid DFS(int x,int fa, llg *cnt){ // \u6c42cnt[] \n\tif(!ext[c[x]])Cst[++top]=c[x],ext[c[x]]=1;\n\tif(++has[c[x]]==1){\n\t\tcnt[c[x]]+=siz[x];\n\t}\n\tfor(Re int i=head[x];i;i=nxt[i]){\n\t\tint vv=v[i];\n\t\tif(vis[vv]||vv==fa)continue;\n\t\tDFS(vv,x,cnt);\n\t}\n\thas[c[x]]--;\n}\nvoid ReNEW(int x,int fa,llg Tag){ //\u66f4\u65b0\u5b50\u6811\u5185\u7684\u70b9 \n\tif(++has[c[x]]==1){\n\t\tTag+=Nsiz-cnt[c[x]];\n    }\n    sum[x]+=Ctot+Tag;\n    for(Re int i=head[x];i;i=nxt[i]){\n    \tint vv=v[i];\n    \tif(vis[vv]||vv==fa)continue;\n    \tReNEW(vv,x,Tag);\n\t}\n\thas[c[x]]--;\n}\nvoid Work(int x){    //\u5206\u6cbb + \u66f4\u65b0\u5206\u6cbb\u5757 \n\tvis[x]=1;\n\tgetSIZ(x,0);\n\ttop=0; Ctot=0;\n\tDFS(x,0,cnt);\n\tFor(i,1,top)ext[Cst[i]]=0;\n\ttp=top;\n\tFor(i,1,top){\n\t\tCtot+=cnt[Cst[i]];\n\t\tcct[Cst[i]]=cnt[Cst[i]];\n\t\tCstx[i]=Cst[i];\n\t \n\t}\n\tsum[x]+=Ctot;\n\tllg tmp=Ctot;\n\t\n\tfor(Re int i=head[x];i;i=nxt[i]){\n\t\tint vv=v[i];\n\t\tif(vis[vv])continue;\n\t\thas[c[x]]=1;  //\u4f7f\u548c\u91cd\u5fc3\u989c\u8272\u4e00\u6837\u7684\u70b9\u4e0d\u4f1a\u88ab\u8ba1\u7b97cnt \n\t\ttop=0;\n\t\tDFS(vv,x,ct);\n\t\tFor(j,1,top)ext[Cst[j]]=0;\n\t\thas[c[x]]=0;\n\t\t\n\t\tcnt[c[x]]-=siz[vv]; Ctot-=siz[vv]; //\u51cf\u53bb\u91cd\u5fc3\u989c\u8272\u7684\u8d21\u732e \n\t\tFor(j,1,top){\n\t\t\tint cx=Cst[j];\n\t\t\tcnt[cx]-=ct[cx];\n\t\t\tCtot-=ct[cx];\n\t\t}\n\t\tNsiz=siz[x]-siz[vv];\n\t\tReNEW(vv,x,0);\n\t\t\n\t\tcnt[c[x]]+=siz[vv];  //\u8fd8\u539f \n\t\tCtot=tmp;\n\t\tFor(j,1,top){\n\t\t\tint cx=Cst[j];\n\t\t\tcnt[cx]=cct[cx];\n\t\t\tct[cx]=0;\n\t\t}\n\t}\n\t\n\tFor(j,1,tp){\n\t\tint cx=Cstx[j];\n\t\tcnt[cx]=0;\n\t}\n\t\n\tfor(Re int i=head[x];i;i=nxt[i]){ \n\t\tint vv=v[i]; if(vis[vv])continue;\n\t\tgetSIZ(vv,x);\n\t\tint NxRT=getWRT(vv,x,siz[vv]);\n\t\tWork(NxRT);\n\t}\n\t\n}\nint main(){\n//\tfreopen(\"ex.in\",\"r\",stdin);\n\tmemset(vis,0,sizeof(vis));\n\tmemset(ext,0,sizeof(ext));\n\tread(n); \n\tFor(i,1,n)read(c[i]);\n\tFor(i,1,n-1){\n\t\tread(x); read(y); add(x,y);\n\t}\n\tFrt=getWRT(1,0,n);\n\tWork(Frt);\n\tFor(i,1,n){\n\t\twrite(sum[i]); Pn;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1548820553,
        "uid": 86041,
        "name": "_LAUV_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "# \u6811\u4e0a\u6e38\u620f\n\n## \u9898\u610f\n\n\u6709\u4e00\u68f5\u6811\uff0c\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u6709\u4e2a\u989c\u8272\u3002\u5b9a\u4e49 $s(i,j)$ \u4e3a $i$ \u5230 $j$ \u7684\u989c\u8272\u6570\u91cf\uff0c $sum_i=\\sum_{j=1}^ns(i,j)$\n\n\u6c42\u6240\u6709\u7684 $sum_i$\n\n## \u5206\u6790\n\n\u597d\u50cf\u633a\u6c34\u7684\n\n\u770b\u5230\u6811\u4e0a\u8def\u5f84\u95ee\u9898\uff0c\u8003\u8651\u70b9\u5206\u6cbb\n\n\u5f53 $j$ \u5728\u70b9\u5206\u6811\u5b50\u6811\u4e2d\u65f6\n\n\u76f4\u63a5\u904d\u5386\u7edf\u8ba1\u5373\u53ef\n\n\u5f53 $j$ \u5728\u70b9\u5206\u6811\u5b50\u6811\u5916\u65f6\n\n\u6a21\u4eff\u5176\u4ed6\u9898\u5c06\u5148\u524d\u8def\u5f84\u7528\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u8d77\u6765\u7684\u65b9\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u5148\u524d\u8def\u5f84\u7edf\u8ba1\u8d77\u6765\n\n\u4f46\u8fd9\u4e9b\u8def\u5f84\u4e0d\u597d\u5408\u5e76\n\n---\n\n\u8003\u8651\u8d21\u732e\u6cd5\n\n\u5f53\u6211\u4eec\u904d\u5386\u5230\u4e00\u4e2a $now$ \u65f6\n\n\u6211\u4eec\u5148\u628a\u4e0d\u5728\u5b50\u6811\u5185\u7684\u5176\u4ed6\u8282\u70b9 $others$ \u5230\u91cd\u5fc3\u7684 $s(others,\\text{\u91cd\u5fc3})$ \u4e4b\u548c\u6c42\u51fa\uff0c\u8bb0\u4e3a $sum$\n\n\u7136\u540e\u8003\u8651\u91cd\u5fc3\u5230 $now$ \u8d21\u732e\u4e86\u591a\u5c11 $s$ \u503c\n\n---\n\n\u8003\u8651\u6709\u591a\u5c11\u6761\u4ece\u5f53\u524d\u91cd\u5fc3\u51fa\u53d1\u5230\u5b50\u6811\u5185\u7684\u8def\u5f84\u6709\u989c\u8272 $x$ \uff0c\u8bb0\u4e3a\u6570\u7ec4 $A[x]$\n\n\u8fd9\u4e2a\u53ef\u4ee5\u5728\u904d\u5386\u4e2d\u5bb9\u6613\u5f97\u51fa\n\n\u56e0\u4e3a\u8981\u8d70\u7b80\u5355\u8def\u5f84\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e0b\u91cd\u5fc3\u5230\u6bcf\u4e2a\u5b69\u5b50\u5b50\u6811\u7684\u8def\u5f84\u6761\u6570\uff0c\u8bb0\u4e3a\u6570\u7ec4 $B[x]$\n\n\u904d\u5386\u4e09\u6b21\uff0c\u7b2c\u4e00\u6b21\u6c42 $A$ \uff0c\u7b2c\u4e8c\u6b21\u6c42 $B$ \uff0c\u7b2c\u4e09\u6b21\u7edf\u8ba1\u7b54\u6848\n\n\u56e0\u4e3a\u91cd\u5fc3\u6bcf\u4e2a\u5b69\u5b50\u90fd\u8981\u4e00\u4e2a $B$ \uff0c\u6240\u4ee5\u6211\u4eec\u7b97\u4e00\u4e2a\u5b69\u5b50\u7684 $B$ \u5c31\u7edf\u8ba1\u8fd9\u4e2a\u5b69\u5b50\u5b50\u6811\u5185\u7684\u7b54\u6848\n\n### \u6c42 $A$\n\n\u5f53\u4ece\u91cd\u5fc3\u904d\u5386\u5230\u4e00\u4e2a\u70b9 $now$ \u65f6\n\n\u82e5\u5f53\u524d\u70b9\u7684\u989c\u8272\u5728\u91cd\u5fc3\u5230\u6b64\u70b9\u7684\u8def\u5f84\u4e2d\u51fa\u73b0\u8fc7\uff0c\u4e0d\u5904\u7406\n\n\u5f53\u6ca1\u51fa\u73b0\u8fc7\uff0c $A[col[now]]+=siz[now]$ \uff0c\u56e0\u4e3a\u91cd\u5fc3\u5230\u5f53\u524d\u8282\u70b9\u5b50\u6811\u7684\u6240\u6709\u8def\u5f84\u90fd\u6709\u8fd9\u4e2a\u989c\u8272\n\n### \u6c42 $B$\n\n\u76f8\u5f53\u4e8e\u5728\u5b50\u6811\u5185\u6c42 $A$ \uff0c\u4e0d\u8bf4\u4e86\n\n### \u7edf\u8ba1\u7b54\u6848\n\n\u9012\u5f52\u65f6\u8bbe\u4e34\u65f6\u53d8\u91cf $k$ \uff0c\u521d\u59cb\u4e3a $0$\n\n\u5f53\u4ece\u91cd\u5fc3\u904d\u5386\u5230\u4e00\u4e2a\u70b9 $now$ \u65f6\n\n\u82e5\u5f53\u524d\u70b9\u7684\u989c\u8272\u5728\u91cd\u5fc3\u5230\u6b64\u70b9\u7684\u8def\u5f84\u4e2d\u51fa\u73b0\u8fc7\uff0c\u4e0d\u5904\u7406 $k$\n\n\u5f53\u6ca1\u51fa\u73b0\u8fc7\n\n$(A[col[now]]-B[col[now]])$ \u662f\u6709\u542b\u989c\u8272 $col[now]$ \u7684\u8def\u5f84\u4e2a\u6570\n\n\u6240\u4ee5\u8fd9\u4e2a\u989c\u8272\u5bf9\u4e8e\u539f\u6811\u4e2d $now$ \u7684\u5b50\u6811\u7684\u8d21\u732e\u662f $siz[\\text{\u91cd\u5fc3}]-(A[col[now]]-B[col[now]])$ \n\n\u6240\u4ee5 $k+=siz[\\text{\u91cd\u5fc3}]-(A[col[now]]-B[col[now]])$\n\n\u7edf\u8ba1\u7b54\u6848 $ans[now]+=k+sum$\n\n---\n\n\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u4e86\uff0c\u6548\u7387 $O(n\\log n)$\n\n## \u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN=2e5+7;\n\nint n,m;\nll ans[MAXN];\n\nint col[MAXN];\nstruct side {\n\tint nex,to,val;\n\tside(){nex=0;}\n}edge[MAXN<<1];\nint scnt=0;\nint head[MAXN]={0};\ninline void link(int A,int B) {\n\tedge[++scnt].to=B;\n\tedge[scnt].nex=head[A];\n\thead[A]=scnt;\n}\n\nbool arr[MAXN]={0};\nll carr[MAXN],cs=0,col_cov[MAXN],col_cov2[MAXN];\nint siz[MAXN],root_,n2,minn=1e9;\nvoid getn2(int now,int fa) {\n\tn2++;\n\tsiz[now]=0;\n\tfor(int i=head[now];i;i=edge[i].nex)\n        if(!arr[edge[i].to]&&fa!=edge[i].to)\n            getn2(edge[i].to,now);\n}\nvoid getr(int now,int fa) {\n    siz[now]=1;\n    int ms=0;\n    for(int i=head[now];i;i=edge[i].nex)\n        if(!arr[edge[i].to]&&fa!=edge[i].to) {\n            getr(edge[i].to,now);\n            siz[now]+=siz[edge[i].to];\n            ms=max(ms,siz[edge[i].to]);\n            siz[edge[i].to]=0;\n        }\n    ms=max(ms,n2-siz[now]);\n    if(minn>ms) {\n        minn=ms;\n        root_=now;\n    }\n}\nint dis[MAXN],FA[MAXN]={0};\nvoid getsiz(int now) {\n\tsiz[now]=1;\n    for(int i=head[now];i;i=edge[i].nex)\n        if(!arr[edge[i].to]&&edge[i].to!=FA[now]) {\n\t\t\tFA[edge[i].to]=now;\n            getsiz(edge[i].to);\n            siz[now]+=siz[edge[i].to];\n        }\n}\nvoid getd(int now,ll &S) {\n    if(carr[col[now]]==0) cs++;\n    carr[col[now]]++;\n    S+=cs;\n    for(int i=head[now];i;i=edge[i].nex)\n        if(!arr[edge[i].to]&&edge[i].to!=FA[now])\n\t\t\tgetd(edge[i].to,S);\n\tcarr[col[now]]--;\n    if(carr[col[now]]==0) {\n    \tcs--;\n    \tcol_cov[col[now]]+=siz[now];\n    }\n}\nvoid getd2(int now)\n{\n    carr[col[now]]++;\n    for(int i=head[now];i;i=edge[i].nex)\n        if(!arr[edge[i].to]&&edge[i].to!=FA[now])\n            getd2(edge[i].to);\n    carr[col[now]]--;\n    if(carr[col[now]]==0) {\n    \tcol_cov2[col[now]]+=siz[now];\n    }\n}\nvoid del(int now)\n{\n\tcol_cov2[col[now]]=0;\n    for(int i=head[now];i;i=edge[i].nex)\n        if(!arr[edge[i].to]&&FA[now]!=edge[i].to)\n            del(edge[i].to);\n}\nvoid del2(int now)\n{\n\tcarr[col[now]]=col_cov[col[now]]=col_cov2[col[now]]=0;\n    for(int i=head[now];i;i=edge[i].nex)\n        if(!arr[edge[i].to]&&FA[now]!=edge[i].to)\n            del2(edge[i].to);\n    FA[now]=0;\n}\nvoid getans(int now,int siz_root,int SUM) {\n\tif(carr[col[now]]==0) {\n\t\tSUM+=siz_root-(col_cov[col[now]]-col_cov2[col[now]]);\n\t}\n\tans[now]+=SUM;\n\tcarr[col[now]]++;\n\tfor(int i=head[now];i;i=edge[i].nex)\n        if(!arr[edge[i].to]&&FA[now]!=edge[i].to)\n            getans(edge[i].to,siz_root,SUM);\n    carr[col[now]]--;\n    if(carr[col[now]]==0) {\n\t\tSUM-=siz_root-(col_cov[col[now]]-col_cov2[col[now]]);\n\t}\n}\nvoid di(int now) {\n\tgetn2(now,0);\n    minn=1e9;\n    getr(now,0);\n    now=root_;\n    getsiz(now);\n    arr[now]=1;\n    vector<ll> V;\n    ll Sum=1;\n    carr[col[now]]=1;cs=1;\n    col_cov[col[now]]=siz[now];\n    for(int i=head[now];i;i=edge[i].nex)\n        if(!arr[edge[i].to]) {\n        \tll i2=0;\n\t\t\tFA[edge[i].to]=now;\n\t        getd(edge[i].to,i2);\n\t        Sum+=i2;\n\t        V.push_back(i2);\n        }\n    ans[now]+=Sum;\n    for(int i=head[now],i2=0;i;i=edge[i].nex)\n    \tif(!arr[edge[i].to]) {\n    \t\tcarr[col[now]]=1;\n    \t\tgetd2(edge[i].to);\n    \t\tgetans(edge[i].to,siz[now]-siz[edge[i].to],Sum-V[i2]);\n    \t\tdel(edge[i].to);\n    \t\ti2++;\n    \t}\n    cs=0;del2(now);\n    for(int i=head[now],i2;i;i=edge[i].nex)\n        if(!arr[edge[i].to]) {\n\t\t\tn2=0;\n            di(edge[i].to);\n            i2++;\n        }\n}\n\ninline int read() {\n\tint A=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t\tch=getchar();\n\twhile(ch>='0'&&ch<='9') {\n\t\tA=A*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn A; \n}\n\nint main() {\n    n=read();\n    for(int i=1,i2;i<=n;i++) {\n    \ti2=read();\n    \tcol[i]=i2;\n    }\n    for(int i=1,i2,i3;i<n;i++) {\n        i2=read();i3=read();\n        link(i2,i3);\n        link(i3,i2);\n    }\n    \n    di(1);\n    \n    for(int i=1;i<=n;i++) cout<<ans[i]<<endl;\n\n    return 0;\n}\n```",
        "postTime": 1567064332,
        "uid": 34323,
        "name": "mohei0",
        "ccfLevel": 7,
        "title": "\u6811\u4e0a\u6e38\u620f \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u611f\u89c9\u5f88\u795e\n\n\u70b9\u5206\u6cbb\uff0c\u7136\u540e\u53ea\u9700\u8981\u8003\u8651\u8fc7\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u94fe\n\n\u76f4\u63a5\u505a\u4e0d\u597d\u505a\uff0c\u8003\u8651\u5bf9\u6bcf\u79cd\u989c\u8272\u5206\u5f00\u7b97\u8d21\u732e.\n\n\u91cd\u5fc3$root$\u628a\u6811\u5206\u6210\u8bb8\u591a\u5b50\u6811\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9$u$\uff0c\u5b83\u5bf9\u4e00\u4e2a$lca(u,v)=root$\u7684\u5f02\u8272\u70b9$v$\u4f1a\u9020\u6210$size[u]$\u7684\u8d21\u732e.\u8fd9\u6837\u6211\u4eec\u7edf\u8ba1\u51fa\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e$s$\u4ee5\u53ca\u6240\u6709\u989c\u8272\u7684\u8d21\u732e\u4e4b\u548c$sum$.\n\n\u8003\u8651\u4e00\u68f5\u5b50\u6811$S$\uff0c\u6211\u4eec\u5148\u6d88\u9664\u5b83\u7684\u8d21\u732e\uff0c\u7136\u540e\u8fd9\u68f5\u5b50\u6811\u5185\u7684\u4e00\u4e2a\u70b9$u$\u7684\u7b54\u6848\u5c31\u662f\n\n$sum-\\text{u\u5230S\u7684\u6839\u7684\u94fe\u4e0a\u6240\u6709\u989c\u8272\u7684s\u4e4b\u548c}+\\text{u\u5230S\u7684\u6839\u7684\u94fe\u4e0a\u7684\u989c\u8272\u6570}$\n\n\u4f46\u8fd9\u6837\u8fd8\u662f\u6709\u95ee\u9898\uff0c\u6ca1\u6709\u8003\u8651\u6839\u8282\u70b9\u7684\u989c\u8272\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u5904\u7406\u51fa\u4e0d\u5b58\u5728\u548c$root$\u76f8\u540c\u989c\u8272\u7684\u70b9\u4e14\u5305\u542b$root$\u7684\u6781\u5927\u5b50\u6811\u7684\u5927\u5c0f$siz$\uff0c\u7136\u540e\u5982\u679c$u$\u5230$S$\u7684\u6839\u7684\u94fe\u4e0a\u6ca1\u6709\u51fa\u73b0\u8fc7$color[root]$\u90a3\u5c31\u518d\u52a0\u4e0a$siz$\n\n\u6700\u540e\u662f$root$\u672c\u8eab\u7684\u7b54\u6848 \u8fd9\u4e2a\u5c31\u662f$sum-s[color[root]]+size[root]$\u4e86\n\n\u4ee3\u7801\u8fd8\u662f\u633a\u4e11\u7684emmm\u5e38\u6570\u5de8\u5927\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nconst int N=5e5,INF=1e9;\nint size[N],s[N],vis[N],to[N],cnt[N],c[N],mm,fst[N],nxt[N],root,n,nn,mx,siz;\nlong long sum,ans[N];\nvoid ade(int u,int v)\n{\n    to[++mm]=v,nxt[mm]=fst[u],fst[u]=mm;\n}\nvoid findroot(int u,int fa)\n{\n    int mxson=0;\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(v==fa||vis[v])continue;\n        findroot(v,u);mxson=max(mxson,size[v]);\n    }\n    mxson=max(mxson,nn-size[u]);\n    if(mxson<mx)mx=mxson,root=u;\n}\nvoid getsize(int u,int fa)\n{\n    size[u]=1;\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(v==fa||vis[v])continue;\n        getsize(v,u),size[u]+=size[v];\n    }\n}\nvoid calc(int u,int fa,int f)\n{\n    if(++cnt[c[u]]==1)\n        s[c[u]]+=f*size[u],sum+=f*size[u];\n    if(!cnt[c[root]])siz+=f;\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(v==fa||vis[v])continue;\n        calc(v,u,f);\n    }\n    --cnt[c[u]];\n}\nvoid calcans(int u,int fa,int num,long long pres)\n{\n    if(++cnt[c[u]]==1)++num,pres+=s[c[u]];ans[u]+=sum-pres+num*mx;if(!cnt[c[root]])ans[u]+=siz;\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(v==fa||vis[v])continue;\n        calcans(v,u,num,pres);\n    }\n    --cnt[c[u]];\n}\nvoid solve(int u)\n{\n    vis[u]=1;getsize(u,0);siz=1;\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(vis[v])continue;\n        calc(v,0,1);\n    }\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(vis[v])continue;\n        calc(v,0,-1);mx=size[u]-size[v];calcans(v,0,0,0);calc(v,0,1);\n    }\n    ans[u]+=sum-s[c[u]]+size[u];\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(vis[v])continue;\n        calc(v,0,-1);\n    }\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(vis[v])continue;\n        nn=size[v],sum=0,mx=INF,findroot(v,0),solve(root);\n    }\n}\nvoid fILe()\n{\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n}\nint main()\n{\n  //  fILe();\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",c+i);\n    for(int i=1,u,v;i<n;i++)scanf(\"%d%d\",&u,&v),ade(u,v),ade(v,u);\n    nn=n,mx=INF,getsize(1,0),findroot(1,0),solve(root);\n    for(int i=1;i<=n;i++)printf(\"%lld\\n\",ans[i]);\n}\n```",
        "postTime": 1565771124,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "[$$\\large \\color{purple} My\\; Blog $$](https://www.cnblogs.com/p-b-p-b/p/10482817.html)\n\n\n-------------------------\n\n## \u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u8111\u6d1e\u5927\u5f00\u60f3\u5230\u70b9\u5206\u6cbb\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u4e2a\u70b9\u90fd\u8981\u8f93\u51fa\u5bf9\u5e94\u7684$ans$\uff0c\u6240\u4ee5\u60f3\u5230\u5728\u70b9\u5206\u6811\u4e0a\u8df3\uff0c\u5f97\u5230\u7b54\u6848\u3002\n\n\u4e00\u4e2a\u70b9\u7b54\u6848\u7684\u8d21\u732e\u8981\u5206\u4e3a\u597d\u51e0\u4e2a\u90e8\u5206\u3002\n\n#### \u7b2c\u4e00\u4e2a\n\n\u8fd9\u662f\u6700\u5bb9\u6613\u7edf\u8ba1\u7684\u90e8\u5206\u3002\u4f60\u9700\u8981\u5f97\u5230\u70b9\u5206\u6811\u4e0a\u81ea\u5df1\u7684\u5b50\u6811\u5bf9\u81ea\u5df1\u7684\u8d21\u732e\u3002\n\n\u663e\u7136\u4e00\u4e2adfs\u5373\u53ef\u641e\u5b9a\u3002\n\n#### \u7b2c\u4e8c\u4e2a\n\n\u5047\u8bbe\u5f53\u524d\u8981\u6c42\u7684\u70b9\u662f$x$\uff0c\u679a\u4e3e\u5b83\u7684\u7956\u5148\u4e3a$y$\u3002\n\n\u6211\u4eec\u9700\u8981\u5f97\u5230$y\\rightarrow x$\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u8d21\u732e\u4e58\u4e0a$size_y-size_x$\uff0c\u5176\u4e2d$size_x$\u8868\u793ax\u6240\u5728\u5b50\u6811\u7684\u5927\u5c0f\uff0c$size_y$\u8868\u793a$y$\u5728\u70b9\u5206\u6811\u4e0a\u5b50\u6811\u5927\u5c0f\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u53ef\u4ee5\u5728\u5efa\u70b9\u5206\u6811\u65f6\u7528\u4e00\u4e2adfs\u641e\u5b9a\u3002\n\n#### \u7b2c\u4e09\u4e2a\n\n\u8fd8\u662f\u4e0a\u9762\u7684$x,y$\uff0c\u6211\u4eec\u9700\u8981\u7edf\u8ba1$y$\u5b50\u6811\u4e2d\u9664\u53bb$x$\u5b50\u6811\u7684\u70b9\u5bf9$x$\u7684\u8d21\u732e\u3002\n\n\u8003\u8651\u6bcf\u79cd\u989c\u8272\u5206\u5f00\u8003\u8651\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\uff0c\u7edf\u8ba1\u4f1a\u51fa\u73b0\u5b83\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u4e00\u4e2adfs\u641e\u5b9a\u3002\n\n\u7136\u540e\u628a$x$\u6240\u5728\u7684\u5b50\u6811\u7684\u8d21\u732e\u5220\u53bb\u4e4b\u540e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n#### \u7b2c\u56db\u4e2a\n\n\u53d1\u73b0\u7b2c\u4e8c\u90e8\u5206\u548c\u7b2c\u4e09\u90e8\u5206\u4f1a\u7b97\u91cd\uff0c\u8981\u628a\u91cd\u590d\u7684\u53bb\u6389\u3002\n\n\u5bf9\u4e8e$y\\rightarrow x$\u8def\u5f84\u4e0a\u51fa\u73b0\u8fc7\u7684\u989c\u8272\uff0c\u8981\u628a\u5b83\u51fa\u73b0\u8fc7\u7684\u8def\u5f84\u6570\u5220\u53bb\u3002\n\n\u4e5f\u662f\u5efa\u6811\u65f6\u4e00\u4e2adfs\u53ef\u4ee5\u641e\u5b9a\u7684\u3002\n\n#### \u6700\u540e\n\n\u4f60\u53d1\u73b0\u4e0a\u9762\u8fd9\u4e9b\u5168\u662f\u5efa\u6811\u65f6\u5c31\u53ef\u4ee5\u7b97\u51fa\u6765\u7684\uff0c\u4e8e\u662f\u4f60\u6839\u672c\u4e0d\u9700\u8981\u5efa\u6811\uff0c\u76f4\u63a5\u641e\u5c31\u597d\u4e86\u3002\n\n\u7ec6\u8282\u8f83\u591a\uff0c\u795d\u4f60\u597d\u8fd0\u3002\n\n\u4e0d\u8fc7\u628a\u6211\u7684\u7f3a\u7701\u6e90\u5220\u53bb\u540e\u5176\u5b9e\u8fd8\u633a\u77ed\u7684\uff0c\u53ea\u6709\u5927\u6982110\u884c\u3002\n\n-------------------------\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nclock_t t=clock();\nnamespace my_std{\n    using namespace std;\n    #define pii pair<int,int>\n    #define fir first\n    #define sec second\n    #define MP make_pair\n    #define rep(i,x,y) for (int i=(x);i<=(y);i++)\n    #define drep(i,x,y) for (int i=(x);i>=(y);i--)\n    #define go(x) for (int i=head[x];i;i=edge[i].nxt)\n    #define templ template<typename T>\n    #define sz 101010\n    typedef long long ll;\n    typedef double db;\n    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n    templ inline T rnd(T l,T r) {return uniform_int_distribution<T>(l,r)(rng);}\n    templ inline bool chkmax(T &x,T y){return x<y?x=y,1:0;}\n    templ inline bool chkmin(T &x,T y){return x>y?x=y,1:0;}\n    templ inline void read(T& t)\n    {\n        t=0;char f=0,ch=getchar();double d=0.1;\n        while(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n        while(ch<='9'&&ch>='0') t=t*10+ch-48,ch=getchar();\n        if(ch=='.'){ch=getchar();while(ch<='9'&&ch>='0') t+=d*(ch^48),d*=0.1,ch=getchar();}\n        t=(f?-t:t);\n    }\n    template<typename T,typename... Args>inline void read(T& t,Args&... args){read(t); read(args...);}\n    char sr[1<<21],z[20];int C=-1,Z=0;\n    inline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\n    inline void print(register int x)\n    {\n    \tif(C>1<<20)Ot();if(x<0)sr[++C]='-',x=-x;\n    \twhile(z[++Z]=x%10+48,x/=10);\n    \twhile(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n    }\n    void file()\n    {\n        #ifndef ONLINE_JUDGE\n        freopen(\"a.in\",\"r\",stdin);\n        #endif\n    }\n    inline void chktime()\n    {\n        #ifndef ONLINE_JUDGE\n        cout<<(clock()-t)/1000.0<<'\\n';\n        #endif\n    }\n    #ifdef mod\n    ll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x%mod) if (y&1) ret=ret*x%mod;return ret;}\n    ll inv(ll x){return ksm(x,mod-2);}\n    #else\n    ll ksm(ll x,int y){ll ret=1;for (;y;y>>=1,x=x*x) if (y&1) ret=ret*x;return ret;}\n    #endif\n//\tinline ll mul(ll a,ll b){ll d=(ll)(a*(double)b/mod+0.5);ll ret=a*b-d*mod;if (ret<0) ret+=mod;return ret;}\n}\nusing namespace my_std;\n\nint n;\nint col[sz];\nstruct hh{int t,nxt;}edge[sz<<1];\nint head[sz],ecnt;\nvoid make_edge(int f,int t)\n{\n\tedge[++ecnt]=(hh){t,head[f]};\n\thead[f]=ecnt;\n\tedge[++ecnt]=(hh){f,head[t]};\n\thead[t]=ecnt;\n}\n\nll ans[sz];\nbool vis[sz];\nint size[sz],mn,root,sum;\n#define v edge[i].t\nvoid calcsize(int x,int fa)\n{\n    size[x]=1;\n    go(x) \n\t\tif (v!=fa&&!vis[v])\n        \tcalcsize(v,x),size[x]+=size[v];\n}\nvoid findroot(int x,int fa)\n{\n    int S=-1;\n    go(x) \n\t\tif (v!=fa&&!vis[v])\n        \tfindroot(v,x),chkmax(S,size[v]);\n    chkmax(S,sum-size[x]);\n    if (chkmin(mn,S)) root=x;\n}\nvoid findroot(int x){calcsize(x,0);mn=1e9;sum=size[x];findroot(x,0);}\nint cnt[sz]; // \u6bcf\u79cd\u989c\u8272\u51fa\u73b0\u6b21\u6570\nint S1; // \u51fa\u73b0\u8fc7\u7684\u989c\u8272\u6570\u91cf \nvoid dfs1(int x,int u,int fa) // \u7edf\u8ba1u\u5f80\u4e0b\u7684\u8def\u5f84 \n{\n\t++cnt[col[x]];if (cnt[col[x]]==1) ++S1;\n\tans[u]+=S1;\n\tgo(x) if (!vis[v]&&v!=fa) dfs1(v,u,x);\n\t--cnt[col[x]];if (cnt[col[x]]==0) --S1;\n}\nll S[sz],SS; // \u6bcf\u79cd\u989c\u8272\u51fa\u73b0\u8fc7\u7684\u8def\u5f84\u6570\uff0c\\sum_i S[i] \nvoid dfs2(int x,int fa) // \u7edf\u8ba1\u6bcf\u79cd\u989c\u8272\u51fa\u73b0\u8fc7\u7684\u8def\u5f84\u6570\n{\n\t++cnt[col[x]];if (cnt[col[x]]==1) S[col[x]]+=size[x],SS+=size[x];\n\tgo(x) if (!vis[v]&&v!=fa) dfs2(v,x);\n\t--cnt[col[x]];\n}\nvoid clr(int x,int fa)\n{\n\t++cnt[col[x]];if (cnt[col[x]]==1) S[col[x]]-=size[x],SS-=size[x];\n\tgo(x) if (!vis[v]&&v!=fa) clr(v,x);\n\t--cnt[col[x]];\n}\nll S2; // \u5df2\u7ecf\u91cd\u590d\u9700\u8981\u88ab\u51cf\u53bb\u7684\u8def\u5f84\u6570 \nvoid dfs3(int x,int fa,int Size)\n{\n\t++cnt[col[x]];if (cnt[col[x]]==1) S2+=S[col[x]],++S1;\n\tans[x]+=SS+S1*Size-S2;\n\tgo(x) if (!vis[v]&&v!=fa) dfs3(v,x,Size);\n\t--cnt[col[x]];if (cnt[col[x]]==0) S2-=S[col[x]],--S1;\n}\nvoid CLR(int x,int fa)\n{\n\tS[col[x]]=0;\n\tgo(x) if (v!=fa&&!vis[v]) CLR(v,x);\n}\nvoid calc(int x)\n{\n\tcalcsize(x,0);\n\tdfs1(x,x,0);\n\tdfs2(x,0);\n\tgo(x) if (!vis[v])\n\t{\n\t\tcnt[col[x]]=1;SS-=size[v];S[col[x]]-=size[v];clr(v,x);cnt[col[x]]=0;\n\t\tdfs3(v,x,size[x]-size[v]);\n\t\tcnt[col[x]]=1;SS+=size[v];S[col[x]]+=size[v];dfs2(v,x);cnt[col[x]]=0;\n\t}\n\tCLR(x,0);SS=0;\n}\nvoid solve(int x)\n{\n\tvis[x]=1;\n\tcalc(x);\n\tgo(x) \n\t\tif (!vis[v])\n\t\t\tfindroot(v),solve(root);\n}\n#undef v\n\nint main()\n{\n\tfile();\n\tread(n);\n\tint x,y;\n\trep(i,1,n) read(col[i]);\n\trep(i,1,n-1) read(x,y),make_edge(x,y);\n\tfindroot(1);solve(root);\n\trep(i,1,n) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1551851633,
        "uid": 76481,
        "name": "p_b_p_b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "## \u9898\u610f\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6c42\u4ece\u6539\u70b9\u51fa\u53d1\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84\u7684\u989c\u8272\u6570\u548c\n\u7531\u4e8e\u662f\u70b9\u5206\u6807\u7b7e\u70b9\u8fdb\u6765\u7684\uff0c\u5c31\u6ca1\u6709\u8003\u8651\u5176\u4ed6\u505a\u6cd5\u3002\u3002(\u7136\u800c\u53d1\u73b0\u6709O\uff08n\uff09\u795e\u4ed9)\n\u8003\u8651\u70b9\u5206\u6cbb\u7279\u70b9\uff1a\u53ef\u4ee5\u5728O\uff08nlogn\uff09\u65f6\u95f4\u5185\u201c\u679a\u4e3e\u201d\u6240\u6709\u8def\u5f84\u3002\n\u4f46\u662f\u9700\u8981\u80fd\u591fO\uff08\u5b50\u6811\u5927\u5c0f\uff09\u5f97\u5904\u7406\u5f53\u524d\u9009\u53d6\u6839\u7684\u5176\u4ed6\u5b50\u6811\u5bf9\u4e00\u4e2a\u5b50\u6811\u7684\u8d21\u732e\u3002\n\u8003\u8651\u5206\u5f00\u989c\u8272\u5904\u7406\u8d21\u732e\n\u6bd4\u5982\u5728\u6837\u4f8b\u4e2d\u6a21\u62df\u7b2c\u4e00\u6b21\u9009\u53d61\u4e3a\u6839\u8fdb\u884c\u5904\u7406\u3002\u8981\u6c42\u4ee5\u975e5\u4e3a\u5c0f\u6839\u7684\u5b50\u6811\u5bf9\u4ee55\u4e3a\u5c0f\u6839\u7684\u5b50\u6811\u5404\u70b9(\u6837\u4f8b\u4e2d\u53ea\u67095)sum\u7684\u8d21\u732e\u3002\n\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\n\u4e00.\u5bf9\u4e8e\u6839\u8282\u70b9\u7684\u989c\u8272\uff0c\u6bcf\u6761\u4ee55\u4e3a\u8d77\u70b9\uff0c\u975e5\u4e3a\u5c0f\u6839\u7684\u5b50\u6811\u7684\u7ed3\u70b9\u4e3a\u7ec8\u70b9\u7684\u8def\u5f84\u7684\u8d21\u732e\u4e3asz[1]-sz[5]\u3002\n\u4e8c.\u5bf9\u4e8e\u5c0f\u68395\u5230\u5f53\u524d\u5904\u7406\u70b9\u4e2d\u672a\u51fa\u73b0\u7684\u989c\u8272\u8d21\u732e\u4e3a\u6240\u6709\u975e5\u4e3a\u5c0f\u6839\u7684\u5b50\u6811\u8def\u5f84\u4e2d\u9996\u6b21\u51fa\u73b0\u8be5\u989c\u8272\u7ed3\u70b9\u7684sz\u548c(\u8fd9\u4e2a\u53ef\u4ee5\u9884\u5904\u7406)\n\u4e09.\u5bf9\u4e8e\u5c0f\u68395\u5230\u5f53\u524d\u5904\u7406\u70b9\u4e2d\u51fa\u73b0\u8fc7\u7684\u989c\u8272\uff0c\u8d21\u732e\u4e3asz[\u5927rt]-sz[\u5c0frt]-\u6240\u6709\u975e5\u4e3a\u5c0f\u6839\u7684\u5b50\u6811\u8def\u5f84\u4e2d\u9996\u6b21\u51fa\u73b0\u8be5\u989c\u8272\u7ed3\u70b9\u7684sz\u548c\u3002\n\u5c31ok\u4e86\u3002\n\u7136\u800c\u4ee3\u7801\u5f88\u70e6\uff0c\u7ec6\u8282\u5f88\u591a\u3002\n\u849f\u84bb\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\n#define N 100005\n#define ll long long\nbool vis[N];\nint head[N],nex[N<<1],ver[N<<1],tot,rt,sum;\nint maxp[N];\ninline void add(int x,int y){\n\tnex[++tot]=head[x];head[x]=tot;ver[tot]=y;\n}\nint sz[N];\ninline void getrt(int x,int fa){\n\tsz[x]=1;maxp[x]=0;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=ver[i];\n\t\tif(y==fa||vis[y]) continue;\n\t\tgetrt(y,x);sz[x]+=sz[y];maxp[x]=max(maxp[x],sz[y]);\n\t}\n\tmaxp[x]=max(maxp[x],sum-sz[x]);\n\tif(maxp[rt]>maxp[x]) rt=x;\n}\nll col[N];\nbool jd[N],tt[N];\nll ans;\nll t[N],ssum[N];\nqueue<int> q1,q2;\ninline void dfs(int x,int fa){\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=ver[i];if(vis[y]||y==fa) continue;\n\t\tbool fg=0;\n\t\tif(!tt[col[y]]) ans+=sz[y],t[col[y]]+=sz[y],fg=1,tt[col[y]]=1,q1.push(col[y]);\n\t\tdfs(y,x);\n\t\tif(fg) tt[col[y]]=0;\n\t}\n}\ninline void dfs_1(int x,int fa,int num,ll aans){\n\tssum[x]+=aans;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=ver[i];if(vis[y]||y==fa) continue;\n\t\tbool fg=0;\n\t\tif(!jd[col[y]])jd[col[y]]=fg=1, dfs_1(y,x,num,aans+num-t[col[y]]);\n\t\telse dfs_1(y,x,num,aans);\n\t\tif(fg) jd[col[y]]=0;\n\t}\n}\nll aans;\ninline void dfs_2(int x,int fa){\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=ver[i];if(vis[y]||y==fa) continue;\n\t\tbool fg=0;\n\t\tif(!tt[col[y]]) jd[col[y]]=0,aans-=sz[y],t[col[y]]-=sz[y],fg=1,tt[col[y]]=1,q1.push(y);\n\t\tdfs_2(y,x);\n\t\tif(fg) tt[col[y]]=0;\n\t}\n}\ninline void calc(int x){\n\tans=sz[x];t[col[x]]=sz[x];jd[col[x]]=tt[col[x]]=1;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=ver[i];if(vis[y]) continue;\n\t\tbool fg=0;\n\t\tif(!tt[col[y]]) ans+=sz[y],t[col[y]]+=sz[y],fg=1,tt[col[y]]=1,q1.push(col[y]);\n\t\tdfs(y,x);\n\t\tif(fg) tt[col[y]]=0;\n\t\twhile(!q1.empty()) q2.push(q1.front()),q1.pop();\n\t}\n\tssum[x]+=ans;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=ver[i];if(vis[y]) continue;\n\t\taans=ans-sz[y];\n\t\tbool fg=0;\n\t\tif(!tt[col[y]]) jd[col[y]]=0,aans-=sz[y],t[col[y]]-=sz[y],fg=1,tt[col[y]]=1,q1.push(y);\n\t\tdfs_2(y,x);\n\t\tif(fg) tt[col[y]]=0;\n\t\tfg=0;\n\t\tif(!jd[col[y]])jd[col[y]]=fg=1,aans=aans+sz[x]-sz[y]-t[col[y]];\n\t\tdfs_1(y,x,sz[x]-sz[y],aans);\n\t\tif(fg) jd[col[y]]=0;\n\t\twhile(!q1.empty()) t[col[q1.front()]]+=sz[q1.front()],tt[col[q1.front()]]=0,q1.pop();\n\t}\n\twhile(!q2.empty()) t[q2.front()]=0,q2.pop();t[col[x]]=tt[col[x]]=jd[col[x]]=0;\n}\ninline void gsz(int x,int fa){\n\tsz[x]=1;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=ver[i];\n\t\tif(vis[y]||y==fa) continue;gsz(y,x);sz[x]+=sz[y];\n\t}\n}\ninline void solve(int x){\n\tvis[x]=1;gsz(x,x);calc(x);\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=ver[i];if(vis[y]) continue;\n\t\tsum=sz[y];maxp[rt=0]=n;\n\t\tgetrt(y,0);solve(rt);\n\t}\n}\nsigned main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&col[i]);\n\tfor(int i=1;i<n;++i){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tmaxp[0]=sum=n;\n\tgetrt(1,0);\n\tsolve(rt);\n\tfor(int i=1;i<=n;++i) cout<<ssum[i]<<endl;\n}\n```cpp",
        "postTime": 1551167725,
        "uid": 21165,
        "name": "no_one_cm_Fe_in_hand",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2664 \u3010\u6811\u4e0a\u6e38\u620f\u3011"
    },
    {
        "content": "\u70b9\u5206\u6cbb\n\n\u770b\u5230\u6811\u4e0a\u70b9\u5bf9\u8def\u5f84\u4e4b\u7c7b\u7684\u57fa\u672c\u5c31\u662f\u70b9\u5206\u6cbb\u3002\u8003\u8651\u8ba1\u7b97\u6bcf\u4e2a\u989c\u8272\u7684\u8d21\u732e\u3002\u5bf9\u4e8e\u6bcf\u4e00\u68f5\u5c0f\u6811\u91cc\u7684\u6bcf\u4e2a\u70b9\uff0c\u6211\u5206\u6210\u4e24\u79cd\u989c\u8272\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u7b2c\u4e00\u79cd\u662f\u8fd9\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6ca1\u6709\u8fd9\u79cd\u989c\u8272\u7684\u3002\u8fd9\u79cd\u53ef\u4ee5dfs\u5904\u7406\u51fa\u6765\u6bcf\u68f5\u76f4\u63a5\u5b50\u6811\u91cc\u989c\u8272\u6700\u5148\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u5b50\u6811\u5927\u5c0f\u52a0\u5230\u8d21\u732e\u91cc\uff0c\u753b\u753b\u56fe\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u3002\n\n\u7b2c\u4e8c\u79cd\u662f\u8def\u5f84\u4e0a\u6709\u8fd9\u79cd\u989c\u8272\u3002\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u7531\u8fd9\u4e2a\u70b9\u5ef6\u4f38\u5230\u8fd9\u68f5\u5c0f\u6811\u91cc\u5176\u4ed6\u5b50\u6811\u91cc\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u3002\u6240\u4ee5\u7b54\u6848\u5c31\u662f\u5c0f\u6811\u7684size\u51cf\u53bb\u8fd9\u68f5\u5b50\u6811\u7684size\u3002\n\n\u7ec6\u8282\u7684\u8bdd\uff0c\u76f8\u5f53\u591a\u3002\u9996\u5148\u5c31\u662f\u8ba1\u7b97\u6bcf\u4e2a\u5b50\u6811\u8d21\u732e\u7684\u65f6\u5019\u6e05\u7a7a\u5f53\u524d\u5b50\u6811\u8d21\u732e\u3002\u4e00\u5f00\u59cb\u53ea\u9700\u8981\u6e05\u7a7a\u6bcf\u4e2a\u70b9\u5bf9\u4e8ecoas\u7684\u8d21\u732e\u3002\u4e4b\u540e\u6bcf\u65b0\u9047\u5230\u4e00\u4e2a\u989c\u8272\u5c31\u628a\u8fd9\u4e2a\u989c\u8272\u5728\u6b64\u5b50\u6811\u4e2d\u7684\u8d21\u732e\u52a0\u56de\u6765\uff0c\u7136\u540etmpans-=coas[a[x]]\u5c31\u597d\u4e86\u3002\u56e0\u4e3a\u518d\u5f80\u4e0b\u8d70\u7684\u65f6\u5019\u53ef\u4ee5\u5ef6\u4f38\u5230\u6240\u6709\u5176\u4ed6\u5b50\u6811\u7684\u8282\u70b9\uff0c\u6240\u4ee5tmpans\u53ef\u4ee5\u51cf\u6389\u8fd9\u4e2a\u989c\u8272\u7684\u8d21\u732e\uff0c\u7136\u540etps++\u3002\u8ba1\u7b97\u5b8c\u8d21\u732e\u8981\u628a\u6bcf\u4e2a\u989c\u8272\u7684\u8d21\u732e\u52a0\u56de\u6765\u3002\n\n\u6211\u628a\u6211\u7684\u4ee3\u7801\u91cc\u6bcf\u4e2a\u6570\u7ec4/\u53d8\u91cf\u7684\u610f\u4e49\u5217\u51fa\u6765\u3002\n\nsiz[te] te\u8fd9\u4e2a\u70b9\u5b50\u6811\u5927\u5c0f\n\nrt \u5f53\u524d\u5c0f\u6811\u7684\u6839\n\ncol\u6ca1\u7528\u4e0a\n\ncl[x] x\u8fd9\u4e2a\u989c\u8272\u5728\u5f53\u524d\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u51fa\u73b0\u4e86\u51e0\u6b21\n\nrem[ii] \u5b58\u653e\u5f53\u524d\u5b50\u6811\u91cc\u6240\u6709\u7684\u70b9\uff0c\u4fbf\u4e8e\u6e05\u7a7a\u3002\n\nrz rem\u6570\u7ec4\u7684\u9876\u6307\u9488\n\ntps \u6c42\u6bcf\u4e00\u4e2a\u70b9\u7b54\u6848\u7684\u65f6\u5019\u5f53\u524d\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u79cd\u989c\u8272\n\nb \u5b58\u653e\u5f53\u524d\u5c0f\u6811\u91cc\u6240\u6709\u7684\u70b9\uff0c\u4fbf\u4e8e\u6e05\u7a7a\u3002\n\nz b\u6570\u7ec4\u7684\u9876\u6307\u9488\n\nrttot \u5355\u72ec\u8ba1\u7b97\u6839\u7684\u7b54\u6848\u65f6\u5f53\u524d\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7531\u591a\u5c11\u79cd\u989c\u8272\n\ntotans \u6bcf\u4e2a\u5b50\u6811\u6bcf\u4e2a\u989c\u8272\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\n\nval[x] x\u70b9\u5bf9totans\u7684\u8d21\u732e\n\ncoas[x] x\u989c\u8272\u7684\u8d21\u732e\n\ntmpans \u8ba1\u7b97\u7b54\u6848\u65f6\u4e34\u65f6totans\u51cf\u53bb\u5f53\u524d\u5b50\u6811\u7684\u8d21\u732e\n\nthcs[x] \u5f53\u524d\u5b50\u6811x\u989c\u8272\u7684\u8d21\u732e\n\nans[x] x\u70b9\u7684\u6700\u7ec8\u7b54\u6848\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\ntypedef long long ll;\n#define N 100002\nstruct edge\n{\n    int to,nxxt;\n}e[N<<1];\nint head[N],cnt=1;\nint n,a[N];\nint siz[N],msz[N],sum,rt;\nbool vis[N],col[N];\nint cl[N];\nint rem[N],rz,tps,b[N],z,rttot;\nll totans,val[N],coas[N],tmpans,thcs[N];\nll ans[N];\nvoid getrt(int te,int la)\n{\n    siz[te]=1;\n    msz[te]=0;\n    cl[a[te]]=0;\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(j==la||vis[j])continue;\n        getrt(j,te);\n        siz[te]+=siz[j];\n        msz[te]=max(msz[te],siz[j]);\n    }\n    msz[te]=max(msz[te],sum-siz[te]);\n    if(msz[te]<msz[rt])rt=te;\n}\ninline void ins(int u,int v)\n{\n    e[cnt].to=v;\n    e[cnt].nxxt=head[u];\n    head[u]=cnt++;\n}\nvoid dfs(int te,int la)\n{\n    rem[++rz]=te;\n    cl[a[te]]++;\n//\tif(rt==3)printf(\"%d %d\\n\",te,cl[a[te]]);\n    if(cl[a[te]]==1)\n    {\n        totans+=siz[te];\n        coas[a[te]]+=siz[te];\n        val[te]=siz[te];\n    }\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(vis[j]||j==la)continue;\n        dfs(j,te);\n    }\n    cl[a[te]]--;\n}\nvoid df5(int te,int la,int trt)\n{\n    rem[++rz]=te;\n    cl[a[te]]++; \n    if(cl[a[te]]==1)\n    {\n        tps++;\n        tmpans=tmpans+thcs[a[te]]-coas[a[te]];\n    }\n    //printf(\"%d %d %d %d %d %lld cal\\n\",rt,te,tps,siz[rt],siz[trt],tmpans);\n    ans[te]+=1ll*tps*(siz[rt]-siz[trt]);\n    ans[te]+=1ll*tmpans;\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(j==la||vis[j])continue;\n        df5(j,te,trt);\n    }\n    cl[a[te]]--;\n    if(cl[a[te]]==0)\n    {\n        tps--;\n        tmpans=tmpans-thcs[a[te]]+coas[a[te]];\n    }\n}\nvoid getsiz(int te,int la)\n{\n    siz[te]=1;\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(vis[j]||j==la)continue;\n        getsiz(j,te);\n        siz[te]+=siz[j];\n    }\n}\nvoid getrtans(int te,int wh,int la)\n{\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(j==la||vis[j])continue;\n        cl[a[j]]++;\n        if(cl[a[j]]==1)\n        {\n            rttot++;\n        }\n        ans[wh]+=rttot;\n        getrtans(j,wh,te);\n        cl[a[j]]--;\n        if(!cl[a[j]])rttot--;\n    }\n}\nvoid clecol(int te,int la)\n{\n    totans-=val[te];\n    thcs[a[te]]+=val[te];\n    rem[++rz]=te;\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(vis[j]||j==la)continue;\n        clecol(j,te);\n    }\n}\nvoid adcol(int te,int la)\n{\n    totans+=val[te];\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(vis[j]||j==la)continue;\n        adcol(j,te);\n    }\n}\nvoid calc(int te)\n{\n    rt=te;\n    getsiz(te,te);\n    totans=0;\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(vis[j])continue;\n        for(int ii=1;ii<=rz;ii++)cl[a[rem[ii]]]=0;\n        rz=0;\n        rem[++rz]=te;\n        cl[a[te]]=1;\n//\t\tif(rt==3)printf(\"%d %d %d\\n\",j,cl[a[1]],cl[a[3]]);\n//\t\tprintf(\"%lld totans\\n\",totans);\n        dfs(j,te);\n        for(int ii=1;ii<=rz;ii++)cl[a[rem[ii]]]=0; \n    }\n    z=0;\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(vis[j])continue;\n        rz=0;\n        rem[++rz]=te;\n        cl[a[te]]=1;\n        clecol(j,te);\n        for(int ii=1;ii<=rz;ii++)cl[a[rem[ii]]]=0;\n        rz=0;\n        tmpans=totans;\n        tmpans-=coas[a[te]];\n        tps=1;\n        cl[a[te]]=1;\n        rt=te;\n//\t\tprintf(\"%lld totans\\n\",totans);\n        df5(j,te,j);\n        for(int ii=1;ii<=rz;ii++)cl[a[rem[ii]]]=0;\n        cl[a[te]]=1;\n        adcol(j,te);\n        for(int ii=1;ii<=rz;ii++)cl[a[rem[ii]]]=0,thcs[a[rem[ii]]]=0;\n        for(int ii=1;ii<=rz;ii++)cl[a[rem[ii]]]=0,b[++z]=rem[ii];\n        rz=0;\n    }\n    for(int i=1;i<=z;i++)coas[a[b[i]]]=0,cl[a[b[i]]]=0,val[b[i]]=0;\n    rttot=1;\n    cl[a[te]]=1;\n    ans[te]++;\n    getrtans(te,te,te);\n    //printf(\"%d rt\\n\",rt);\n    //for(int i=1;i<=n;i++)printf(\"%lld \",ans[i]);puts(\"\");\n}\nvoid solve(int te)\n{\n    vis[te]=1;calc(te);\n    for(int i=head[te];i;i=e[i].nxxt)\n    {\n        int j=e[i].to;\n        if(vis[j])continue;\n        rt=0;msz[rt]=n;sum=siz[j];\n        getrt(j,te);\n        solve(rt);\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n    for(int i=1;i<n;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        ins(x,y);\n        ins(y,x);\n    }\n    msz[rt]=sum=n;\n    getrt(1,1);\n    solve(rt);\n    for(int i=1;i<=n;i++)printf(\"%lld\\n\",ans[i]);\n}\n\n```\n",
        "postTime": 1563549974,
        "uid": 84564,
        "name": "LebronDurant",
        "ccfLevel": 9,
        "title": "\u6811\u4e0a\u6e38\u620f"
    }
]