[
    {
        "content": "# \u66b4\u529b\u7834\u89e3\n## code\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, x1, x2, yu, y2, x[7], y[7], max;\ndouble bj1, bj2, bj3, bj4, bj5, bj6, the_max_num;\ndouble max_ab(double x, double y);\ndouble min_ab(double x, double y);\nvoid sc(int q, int q1, int q2, int q3, int q4, int q5, int q6)\n{\n    if (q == 1)\n    {\n        bj1 = min_ab(min_ab(fabs(x[q1] - x1), fabs(x[q1] - x2)), min_ab(fabs(y[q1] - yu), fabs(y[q1] - y2)));\n        the_max_num = max_ab(the_max_num, bj1 * bj1 * 3.1415926);\n    }\n    if (q == 2)\n    {\n        bj1 = min_ab(min_ab(fabs(x[q1] - x1), fabs(x[q1] - x2)), min_ab(fabs(y[q1] - yu), fabs(y[q1] - y2)));\n        if (sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) <= bj1)\n            bj2 = 0;\n        else\n            bj2 = min_ab(min_ab(min_ab(fabs(x[q2] - x1), fabs(x[q2] - x2)), min_ab(fabs(y[q2] - yu), fabs(y[q2] - y2))), sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) - bj1);\n        the_max_num = max_ab(the_max_num, bj1 * bj1 * 3.1415926 + bj2 * bj2 * 3.1415926);\n    }\n    if (q == 3)\n    {\n        bj1 = min_ab(min_ab(fabs(x[q1] - x1), fabs(x[q1] - x2)), min_ab(fabs(y[q1] - yu), fabs(y[q1] - y2)));\n        if (sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) <= bj1)\n            bj2 = 0;\n        else\n            bj2 = min_ab(min_ab(min_ab(fabs(x[q2] - x1), fabs(x[q2] - x2)), min_ab(fabs(y[q2] - yu), fabs(y[q2] - y2))), sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) - bj1);\n        if (sqrt((x[q3] - x[q1]) * (x[q3] - x[q1]) + (y[q3] - y[q1]) * (y[q3] - y[q1])) <= bj1 || sqrt((x[q3] - x[q2]) * (x[q3] - x[q2]) + (y[q3] - y[q2]) * (y[q3] - y[q2])) <= bj2)\n            bj3 = 0;\n        else\n            bj3 = min_ab(min_ab(min_ab(min_ab(fabs(x[q3] - x1), fabs(x[q3] - x2)), min_ab(fabs(y[q3] - yu), fabs(y[q3] - y2))), sqrt((x[q3] - x[q1]) * (x[q3] - x[q1]) + (y[q3] - y[q1]) * (y[q3] - y[q1])) - bj1), sqrt((x[q3] - x[q2]) * (x[q3] - x[q2]) + (y[q3] - y[q2]) * (y[q3] - y[q2])) - bj2);\n        the_max_num = max_ab(the_max_num, bj1 * bj1 * 3.1415926 + bj2 * bj2 * 3.1415926 + bj3 * bj3 * 3.1415926);\n    }\n    if (q == 4)\n    {\n        bj1 = min_ab(min_ab(fabs(x[q1] - x1), fabs(x[q1] - x2)), min_ab(fabs(y[q1] - yu), fabs(y[q1] - y2)));\n        if (sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) <= bj1)\n            bj2 = 0;\n        else\n            bj2 = min_ab(min_ab(min_ab(fabs(x[q2] - x1), fabs(x[q2] - x2)), min_ab(fabs(y[q2] - yu), fabs(y[q2] - y2))), sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) - bj1);\n        if (sqrt((x[q3] - x[q1]) * (x[q3] - x[q1]) + (y[q3] - y[q1]) * (y[q3] - y[q1])) <= bj1 || sqrt((x[q3] - x[q2]) * (x[q3] - x[q2]) + (y[q3] - y[q2]) * (y[q3] - y[q2])) <= bj2)\n            bj3 = 0;\n        else\n            bj3 = min_ab(min_ab(min_ab(min_ab(fabs(x[q3] - x1), fabs(x[q3] - x2)), min_ab(fabs(y[q3] - yu), fabs(y[q3] - y2))), sqrt((x[q3] - x[q1]) * (x[q3] - x[q1]) + (y[q3] - y[q1]) * (y[q3] - y[q1])) - bj1), sqrt((x[q3] - x[q2]) * (x[q3] - x[q2]) + (y[q3] - y[q2]) * (y[q3] - y[q2])) - bj2);\n        if (sqrt((x[q4] - x[q1]) * (x[q4] - x[q1]) + (y[q4] - y[q1]) * (y[q4] - y[q1])) <= bj1 || sqrt((x[q4] - x[q2]) * (x[q4] - x[q2]) + (y[q4] - y[q2]) * (y[q4] - y[q2])) <= bj2 || sqrt((x[q4] - x[q3]) * (x[q4] - x[q3]) + (y[q4] - y[q3]) * (y[q4] - y[q3])) <= bj3)\n            bj4 = 0;\n        else\n            bj4 = min_ab(min_ab(min_ab(min_ab(min_ab(fabs(x[q4] - x1), fabs(x[q4] - x2)), min_ab(fabs(y[q4] - yu), fabs(y[q4] - y2))), sqrt((x[q4] - x[q1]) * (x[q4] - x[q1]) + (y[q4] - y[q1]) * (y[q4] - y[q1])) - bj1), sqrt((x[q4] - x[q2]) * (x[q4] - x[q2]) + (y[q4] - y[q2]) * (y[q4] - y[q2])) - bj2), sqrt((x[q4] - x[q3]) * (x[q4] - x[q3]) + (y[q4] - y[q3]) * (y[q4] - y[q3])) - bj3);\n        the_max_num = max_ab(the_max_num, bj1 * bj1 * 3.1415926 + bj2 * bj2 * 3.1415926 + bj3 * bj3 * 3.1415926 + bj4 * bj4 * 3.1415926);\n    }\n    if (q == 5)\n    {\n        bj1 = min_ab(min_ab(fabs(x[q1] - x1), fabs(x[q1] - x2)), min_ab(fabs(y[q1] - yu), fabs(y[q1] - y2)));\n        if (sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) <= bj1)\n            bj2 = 0;\n        else\n            bj2 = min_ab(min_ab(min_ab(fabs(x[q2] - x1), fabs(x[q2] - x2)), min_ab(fabs(y[q2] - yu), fabs(y[q2] - y2))), sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) - bj1);\n        if (sqrt((x[q3] - x[q1]) * (x[q3] - x[q1]) + (y[q3] - y[q1]) * (y[q3] - y[q1])) <= bj1 || sqrt((x[q3] - x[q2]) * (x[q3] - x[q2]) + (y[q3] - y[q2]) * (y[q3] - y[q2])) <= bj2)\n            bj3 = 0;\n        else\n            bj3 = min_ab(min_ab(min_ab(min_ab(fabs(x[q3] - x1), fabs(x[q3] - x2)), min_ab(fabs(y[q3] - yu), fabs(y[q3] - y2))), sqrt((x[q3] - x[q1]) * (x[q3] - x[q1]) + (y[q3] - y[q1]) * (y[q3] - y[q1])) - bj1), sqrt((x[q3] - x[q2]) * (x[q3] - x[q2]) + (y[q3] - y[q2]) * (y[q3] - y[q2])) - bj2);\n        if (sqrt((x[q4] - x[q1]) * (x[q4] - x[q1]) + (y[q4] - y[q1]) * (y[q4] - y[q1])) <= bj1 || sqrt((x[q4] - x[q2]) * (x[q4] - x[q2]) + (y[q4] - y[q2]) * (y[q4] - y[q2])) <= bj2 || sqrt((x[q4] - x[q3]) * (x[q4] - x[q3]) + (y[q4] - y[q3]) * (y[q4] - y[q3])) <= bj3)\n            bj4 = 0;\n        else\n            bj4 = min_ab(min_ab(min_ab(min_ab(min_ab(fabs(x[q4] - x1), fabs(x[q4] - x2)), min_ab(fabs(y[q4] - yu), fabs(y[q4] - y2))), sqrt((x[q4] - x[q1]) * (x[q4] - x[q1]) + (y[q4] - y[q1]) * (y[q4] - y[q1])) - bj1), sqrt((x[q4] - x[q2]) * (x[q4] - x[q2]) + (y[q4] - y[q2]) * (y[q4] - y[q2])) - bj2), sqrt((x[q4] - x[q3]) * (x[q4] - x[q3]) + (y[q4] - y[q3]) * (y[q4] - y[q3])) - bj3);\n        if (sqrt((x[q5] - x[q1]) * (x[q5] - x[q1]) + (y[q5] - y[q1]) * (y[q5] - y[q1])) <= bj1 || sqrt((x[q5] - x[q2]) * (x[q5] - x[q2]) + (y[q5] - y[q2]) * (y[q5] - y[q2])) <= bj2 || sqrt((x[q5] - x[q3]) * (x[q5] - x[q3]) + (y[q5] - y[q3]) * (y[q5] - y[q3])) <= bj3 || sqrt((x[q5] - x[q4]) * (x[q5] - x[q4]) + (y[q5] - y[q4]) * (y[q5] - y[q4])) <= bj4)\n            bj5 = 0;\n        else\n            bj5 = min_ab(min_ab(min_ab(min_ab(min_ab(min_ab(fabs(x[q5] - x1), fabs(x[q5] - x2)), min_ab(fabs(y[q5] - yu), fabs(y[q5] - y2))), sqrt((x[q5] - x[q1]) * (x[q5] - x[q1]) + (y[q5] - y[q1]) * (y[q5] - y[q1])) - bj1), sqrt((x[q5] - x[q2]) * (x[q5] - x[q2]) + (y[q5] - y[q2]) * (y[q5] - y[q2])) - bj2), sqrt((x[q5] - x[q3]) * (x[q5] - x[q3]) + (y[q5] - y[q3]) * (y[q5] - y[q3])) - bj3), sqrt((x[q5] - x[q4]) * (x[q5] - x[q4]) + (y[q5] - y[q4]) * (y[q5] - y[q4])) - bj4);\n        the_max_num = max_ab(the_max_num, bj1 * bj1 * 3.1415926 + bj2 * bj2 * 3.1415926 + bj3 * bj3 * 3.1415926 + bj4 * bj4 * 3.1415926 + bj5 * bj5 * 3.1415926);\n    }\n    if (q == 6)\n    {\n        bj1 = min_ab(min_ab(fabs(x[q1] - x1), fabs(x[q1] - x2)), min_ab(fabs(y[q1] - yu), fabs(y[q1] - y2)));\n        if (sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) <= bj1)\n            bj2 = 0;\n        else\n            bj2 = min_ab(min_ab(min_ab(fabs(x[q2] - x1), fabs(x[q2] - x2)), min_ab(fabs(y[q2] - yu), fabs(y[q2] - y2))), sqrt((x[q2] - x[q1]) * (x[q2] - x[q1]) + (y[q2] - y[q1]) * (y[q2] - y[q1])) - bj1);\n        if (sqrt((x[q3] - x[q1]) * (x[q3] - x[q1]) + (y[q3] - y[q1]) * (y[q3] - y[q1])) <= bj1 || sqrt((x[q3] - x[q2]) * (x[q3] - x[q2]) + (y[q3] - y[q2]) * (y[q3] - y[q2])) <= bj2)\n            bj3 = 0;\n        else\n            bj3 = min_ab(min_ab(min_ab(min_ab(fabs(x[q3] - x1), fabs(x[q3] - x2)), min_ab(fabs(y[q3] - yu), fabs(y[q3] - y2))), sqrt((x[q3] - x[q1]) * (x[q3] - x[q1]) + (y[q3] - y[q1]) * (y[q3] - y[q1])) - bj1), sqrt((x[q3] - x[q2]) * (x[q3] - x[q2]) + (y[q3] - y[q2]) * (y[q3] - y[q2])) - bj2);\n        if (sqrt((x[q4] - x[q1]) * (x[q4] - x[q1]) + (y[q4] - y[q1]) * (y[q4] - y[q1])) <= bj1 || sqrt((x[q4] - x[q2]) * (x[q4] - x[q2]) + (y[q4] - y[q2]) * (y[q4] - y[q2])) <= bj2 || sqrt((x[q4] - x[q3]) * (x[q4] - x[q3]) + (y[q4] - y[q3]) * (y[q4] - y[q3])) <= bj3)\n            bj4 = 0;\n        else\n            bj4 = min_ab(min_ab(min_ab(min_ab(min_ab(fabs(x[q4] - x1), fabs(x[q4] - x2)), min_ab(fabs(y[q4] - yu), fabs(y[q4] - y2))), sqrt((x[q4] - x[q1]) * (x[q4] - x[q1]) + (y[q4] - y[q1]) * (y[q4] - y[q1])) - bj1), sqrt((x[q4] - x[q2]) * (x[q4] - x[q2]) + (y[q4] - y[q2]) * (y[q4] - y[q2])) - bj2), sqrt((x[q4] - x[q3]) * (x[q4] - x[q3]) + (y[q4] - y[q3]) * (y[q4] - y[q3])) - bj3);\n        if (sqrt((x[q5] - x[q1]) * (x[q5] - x[q1]) + (y[q5] - y[q1]) * (y[q5] - y[q1])) <= bj1 || sqrt((x[q5] - x[q2]) * (x[q5] - x[q2]) + (y[q5] - y[q2]) * (y[q5] - y[q2])) <= bj2 || sqrt((x[q5] - x[q3]) * (x[q5] - x[q3]) + (y[q5] - y[q3]) * (y[q5] - y[q3])) <= bj3 || sqrt((x[q5] - x[q4]) * (x[q5] - x[q4]) + (y[q5] - y[q4]) * (y[q5] - y[q4])) <= bj4)\n            bj5 = 0;\n        else\n            bj5 = min_ab(min_ab(min_ab(min_ab(min_ab(min_ab(fabs(x[q5] - x1), fabs(x[q5] - x2)), min_ab(fabs(y[q5] - yu), fabs(y[q5] - y2))), sqrt((x[q5] - x[q1]) * (x[q5] - x[q1]) + (y[q5] - y[q1]) * (y[q5] - y[q1])) - bj1), sqrt((x[q5] - x[q2]) * (x[q5] - x[q2]) + (y[q5] - y[q2]) * (y[q5] - y[q2])) - bj2), sqrt((x[q5] - x[q3]) * (x[q5] - x[q3]) + (y[q5] - y[q3]) * (y[q5] - y[q3])) - bj3), sqrt((x[q5] - x[q4]) * (x[q5] - x[q4]) + (y[q5] - y[q4]) * (y[q5] - y[q4])) - bj4);\n        if (sqrt((x[q6] - x[q1]) * (x[q6] - x[q1]) + (y[q6] - y[q1]) * (y[q6] - y[q1])) <= bj1 || sqrt((x[q6] - x[q2]) * (x[q6] - x[q2]) + (y[q6] - y[q2]) * (y[q6] - y[q2])) <= bj2 || sqrt((x[q6] - x[q3]) * (x[q6] - x[q3]) + (y[q6] - y[q3]) * (y[q6] - y[q3])) <= bj3 || sqrt((x[q6] - x[q4]) * (x[q6] - x[q4]) + (y[q6] - y[q4]) * (y[q6] - y[q4])) <= bj4 || sqrt((x[q6] - x[q5]) * (x[q6] - x[q5]) + (y[q6] - y[q5]) * (y[q6] - y[q5])) <= bj5)\n            bj6 = 0;\n        else\n            bj6 = min_ab(min_ab(min_ab(min_ab(min_ab(min_ab(min_ab(fabs(x[q6] - x1), fabs(x[q6] - x2)), min_ab(fabs(y[q6] - yu), fabs(y[q6] - y2))), sqrt((x[q6] - x[q1]) * (x[q6] - x[q1]) + (y[q6] - y[q1]) * (y[q6] - y[q1])) - bj1), sqrt((x[q6] - x[q2]) * (x[q6] - x[q2]) + (y[q6] - y[q2]) * (y[q6] - y[q2])) - bj2), sqrt((x[q6] - x[q3]) * (x[q6] - x[q3]) + (y[q6] - y[q3]) * (y[q6] - y[q3])) - bj3), sqrt((x[q6] - x[q4]) * (x[q6] - x[q4]) + (y[q6] - y[q4]) * (y[q6] - y[q4])) - bj4), sqrt((x[q6] - x[q5]) * (x[q6] - x[q5]) + (y[q6] - y[q5]) * (y[q6] - y[q5])) - bj5);\n        the_max_num = max_ab(the_max_num, bj1 * bj1 * 3.1415926 + bj2 * bj2 * 3.1415926 + bj3 * bj3 * 3.1415926 + bj4 * bj4 * 3.1415926 + bj5 * bj5 * 3.1415926 + bj6 * bj6 * 3.1415926);\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cin >> n;\n    cin >> x1 >> yu >> x2 >> y2;\n    for (int i = 1; i <= n; i++)\n        cin >> x[i] >> y[i];\n    switch (n)\n    {\n    case 1:\n        sc(n, 1, 0, 0, 0, 0, 0);\n        break;\n    case 2:\n        for (int i1 = 1; i1 <= n; i1++)\n            for (int i2 = 1; i2 <= n; i2++)\n            {\n                if (i2 == i1)\n                    continue;\n                sc(n, i1, i2, 0, 0, 0, 0);\n            }\n        break;\n    case 3:\n        for (int i1 = 1; i1 <= n; i1++)\n            for (int i2 = 1; i2 <= n; i2++)\n            {\n                if (i2 == i1)\n                    continue;\n                for (int i3 = 1; i3 <= n; i3++)\n                {\n                    if (i3 == i1 || i3 == i2)\n                        continue;\n                    sc(n, i1, i2, i3, 0, 0, 0);\n                }\n            }\n        break;\n    case 4:\n        for (int i1 = 1; i1 <= n; i1++)\n            for (int i2 = 1; i2 <= n; i2++)\n            {\n                if (i2 == i1)\n                    continue;\n                for (int i3 = 1; i3 <= n; i3++)\n                {\n                    if (i3 == i1 || i3 == i2)\n                        continue;\n                    for (int i4 = 1; i4 <= n; i4++)\n                    {\n                        if (i4 == i1 || i4 == i2 || i4 == i3)\n                            continue;\n                        sc(n, i1, i2, i3, i4, 0, 0);\n                    }\n                }\n            }\n        break;\n    case 5:\n        for (int i1 = 1; i1 <= n; i1++)\n            for (int i2 = 1; i2 <= n; i2++)\n            {\n                if (i2 == i1)\n                    continue;\n                for (int i3 = 1; i3 <= n; i3++)\n                {\n                    if (i3 == i1 || i3 == i2)\n                        continue;\n                    for (int i4 = 1; i4 <= n; i4++)\n                    {\n                        if (i4 == i1 || i4 == i2 || i4 == i3)\n                            continue;\n                        for (int i5 = 1; i5 <= n; i5++)\n                        {\n                            if (i5 == i1 || i5 == i2 || i5 == i3 || i5 == i4)\n                                continue;\n                            sc(n, i1, i2, i3, i4, i5, 0);\n                        }\n                    }\n                }\n            }\n        break;\n    case 6:\n        for (int i1 = 1; i1 <= n; i1++)\n            for (int i2 = 1; i2 <= n; i2++)\n            {\n                if (i2 == i1)\n                    continue;\n                for (int i3 = 1; i3 <= n; i3++)\n                {\n                    if (i3 == i1 || i3 == i2)\n                        continue;\n                    for (int i4 = 1; i4 <= n; i4++)\n                    {\n                        if (i4 == i1 || i4 == i2 || i4 == i3)\n                            continue;\n                        for (int i5 = 1; i5 <= n; i5++)\n                        {\n                            if (i5 == i1 || i5 == i2 || i5 == i3 || i5 == i4)\n                                continue;\n                            for (int i6 = 1; i6 <= n; i6++)\n                            {\n                                if (i6 == i1 || i6 == i2 || i6 == i3 || i6 == i4 || i6 == i5)\n                                    continue;\n                                sc(n, i1, i2, i3, i4, i5, i6);\n                            }\n                        }\n                    }\n                }\n            }\n        break;\n    }\n    cout << (int)round(fabs(x1 - x2) * fabs(yu - y2) - the_max_num);\n    return 0;\n}\ndouble max_ab(double x, double y)\n{\n    return (x > y ? x : y);\n}\ndouble min_ab(double x, double y)\n{\n    return (x > y ? y : x);\n}\n```",
        "postTime": 1538754880,
        "uid": 90425,
        "name": "Abx123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u76ee\u603b\u4f53\u4e0a\u6765\u8bf4\u8fd8\u662f\u86ee\u597d\u505a\u7684\uff0c\u5c31\u662f#\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u7136\u540e\u6839\u636e\u524d\u9762\u6240\u786e\u5b9a\u7684\u6cb9\u6ef4\u7684\u5750\u6807\u548c\u534a\u5f84\u6765\u786e\u5b9a\u76ee\u524d\u7684\u6cb9\u6ef4\u7684\u534a\u5f84\uff0c\uff01\uff01\uff01\u4f46\u662f\u6709\u4e00\u4e2a\u5730\u65b9\u662f\u9700\u8981\u6ce8\u610f\u7684\uff0c\u5c31\u662f\u5982\u679c\u8fd9\u4e2a\u6cb9\u6ef4\u672c\u8eab\u5c31\u5728\u53e6\u5916\u4e00\u4e2a\u6cb9\u6ef4\u7684\u5185\u90e8\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u80fd\u9009\u62e9\u8fd9\u4e2a\u6cb9\u6ef4\uff0c\u4e5f\u5c31\u662f\u5f53\u4e24\u4e2a\u6cb9\u6ef4\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c0f\u4e8e\u90a3\u4e2a\u6cb9\u6ef4\u7684\u534a\u5f84\uff0c\u6211\u4eec\u5c31\u8981\u628a\u5b83\u53d8\u62100\uff01\uff01\uff01\uff01\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int maxn=10;\nconst double PI=3.1415926535;\nbool s[maxn];\ndouble x[maxn],y[maxn],r[maxn],xa,ya,xb,yb,ansmax;\nint n;\ndouble cal(int i)//\u8fd9\u662f\u8ba1\u7b97\u5f53\u524d\u7684\u70b9\u7684\u534a\u5f84\u7684\u51fd\u6570\n{\n    double s1=min(abs(x[i]-xa),abs(x[i]-xb));\n    double s2=min(abs(y[i]-ya),abs(y[i]-yb));\n    double ans=min(s1,s2);\n    for(int j=1;j<=n;j++)\n    if(i!=j&&s[j])\n    {\n        double d=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n        ans=min(ans,max(d-r[j],0.0));//\u5982\u679c\u8ddd\u79bb\u90fd\u5c0f\u4e8e0\u4e86\uff0c\u90a3\u6211\u8fd8\u8981\u4f60\u6709\u4f55\u7528\n    }\n    return ans;\n}\nvoid dfs(int k,double sum)\n{\n    if(k>n)\n    {\n        ansmax=max(ansmax,sum);\n        return;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!s[i])\n        {\n            r[i]=cal(i);\n            s[i]=1;\n            dfs(k+1,sum+r[i]*r[i]*PI);\n            s[i]=0;\n        }\n    }\n}\nint main()\n{\n    double ss;\n    scanf(\"%d\",&n);\n    scanf(\"%lf%lf%lf%lf\",&xa,&ya,&xb,&yb);\n    ss=abs(xa-xb)*abs(ya-yb); \n    for(int i=1;i<=n;i++)\n    scanf(\"%lf%lf\",&x[i],&y[i]);\n    dfs(1,0);\n    printf(\"%d\",int(ss-ansmax+0.5));//\u56db\u820d\u4e94\u5165\n    return 0;\n}\n```",
        "postTime": 1500642736,
        "uid": 20059,
        "name": "ylsoi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c[\u539f\u9898\u5728\u8fd9](https://www.luogu.org/problemnew/show/P1378)\n\n\u6069\uff0c\u8ba9\u6211\u4eec\u8fdb\u5165\u6b63\u9898\uff1a\u6cb9\u6ef4\u6269\u5c55\u2014\u2014\u663e\u7136\uff0c\u8fd9\u9053\u9898\u662f\u4e2a\u641c\u7d22\u9898\uff0c\u5e76\u4e14\u662f\u4e2a\u6253\u773c\u4e00\u770b\u4e0a\u53bb\u5c31\u6bd4\u8f83\u6076\u5fc3\u7684\u641c\u7d22\u9898\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u9053\u9898\u7ec6\u8282\u6076\u5fc3\uff0c\u5e76\u4e0d\u4ee3\u8868\u8fd9\u9053\u9898\u601d\u8def\u96be\u3002\n\n------------\n\n\n\u9898\u610f\u5927\u5bb6\u90fd\u4e86\u89e3\u4e86\uff0c\u8ba9\u6211\u4eec\u5148\u6765\u628a\u7ec6\u8282\u95ee\u9898\u5751\u70b9\u89e3\u51b3\uff1a\n\n \n\n1.\u5750\u6807\u8303\u56f4\u4e3a [-1000,1000] ,\u6709\u8d1f\u6570\u600e\u4e48\u529e\uff1f\n\n\n\u3000\u3000\u89e3\u51b3\u65b9\u6cd5\u5f88\u7b80\u5355\u7c97\u66b4\uff1a\u5c06\u6240\u6709\u5750\u6807\u52a0\u4e0a1000\u5c31\u884c\u4e86\uff0c\u7136\u540e\u5c31\u53ef\u89c6\u4e3a\u6240\u6709\u5750\u6807\u90fd\u4e3a\u6b63\u6570\u4e86\u3002\n\n \n\n2.\u8ba9\u8f93\u51fa\u7684\u7b54\u6848\u4e3a\u5269\u4f59\u7684\u9762\u79ef\uff0c\u8fd8\u8981\u56db\u820d\u4e94\u5165\u3002\n\n \n\n\u3000\u3000\u89e3\u51b3\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff1a\u5148\u641c\u7d22\u6c42\u51fa\u6700\u5927\u8986\u76d6\u9762\u79ef\uff0c\u7136\u540e\u5c06\u7b54\u6848 + = 0.5 \uff0c\u7528\u77e9\u5f62\u603b\u9762\u79ef\u51cf\u53bb\u7b54\u6848\u8f93\u51fa\u5373\u53ef\u3002\n\n \n\n------------\n\n\n\u7136\u540e\u5c31\u662f\u4ee3\u7801\u5b9e\u73b0\u90e8\u5206\uff0c\u5148\u58f0\u660e\u53d8\u91cf\uff1a\n\n```cpp\nint n; //n\u4e2a\u6cb9\u6ef4 \nint X1,Y1,X2,Y2;//\u77e9\u5f62\u533a\u57df \ndouble ans;//\u8986\u76d6\u7684\u6700\u5927\u9762\u79ef \n\nint x[10],y[10];//\u7f16\u53f7\u4e3a [i] \u7684\u6cb9\u6ef4\u7684\u5750\u6807 \ndouble r[10];   //\u7f16\u53f7\u4e3a [i] \u7684\u6cb9\u6ef4\u7684\u534a\u5f84 \n\nbool b[10]; //\u8bb0\u5f55\u6b64\u6cb9\u6ef4\u662f\u5426\u5df2\u7ecf\u6269\u5c55 \n\n//\u4e09\u4e2a\u51fd\u6570\uff0c\u611f\u89c9\u8fd9\u6837\u5199\u53ef\u80fd\u4f1a\u6bd4 C++ \u81ea\u5e26\u7684\u5feb\u4e00\u4e9b \ninline double Max(double a,double b){\n    return a > b ? a : b ;\n}\ninline double Min(double a,double b){\n    return a < b ? a : b ;\n}\ninline int Abs(int a,int b){\n    if(a>b)\n        return a-b;\n    return b-a;\n}\n```\n \n\n\u7136\u540e\u5c31\u8ba9\u6211\u4eec\u8fdb\u5165\u771f\u6b63\u7684\u91cd\u70b9\uff1a\u641c\u7d22\u51fd\u6570\uff08\u4ee3\u7801\u91cc\u6709\u8be6\u89e3\u54e6~~\uff09\n\n```cpp\nvoid find(int now,double sum){//now \u4e3a\u5c06\u8981\u641c\u7b2c\u51e0\u4e2a\u6cb9\u6ef4 ,sum\u4e3a\u73b0\u5728\u5df2\u7ecf\u6269\u5c55\u7684\u9762\u79ef \n    if(now==n+1){//\u90fd\u641c\u5b8c\u4e86\n        ans=Max(ans,sum);//\u66f4\u65b0\u7b54\u6848\u3002 \n        return ;\n    }\n    \n    for(int i=1;i<=n;i++)\n        if(!b[i]){//\u82e5\u8fd9\u4e2a\u6cb9\u6ef4\u8fd8\u6ca1\u88ab\u6269\u5c55 \n        \n            int tt=0;//\u4e34\u65f6\u53d8\u91cf \n            \n            for(int j=1;j<=n;j++)//\u8fd9\u4e2a\u5faa\u73af\u7684\u4f5c\u7528\u662f\u5224\u65ad\u6b64\u6cb9\u6ef4\u662f\u5426\u5df2\u7ecf\u88ab\u5176\u4ed6\u6cb9\u6ef4\u8986\u76d6\u4e86 \n                if(b[j]&&r[j]>=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]))){\n                    tt=1;\n                    b[i]=1;\n                    find(now+1,sum); \n                    b[i]=0;\n                }\n                \n            if(tt==1)\n                continue ;\n                \n            b[i]=1;\n            \n            r[i]=Min(Abs(x[i],X1),Abs(x[i],X2));\n            r[i]=Min(r[i],Min(Abs(y[i],Y1),Abs(y[i],Y2)));//\u6b64\u6cb9\u6ef4\u7684\u53ef\u80fd\u534a\u5f84\u4e3a\u5230\u8fb9\u754c\u7684\u6700\u77ed\u8def\u5f84 \n            \n            for(int j=1;j<=n;j++)//\u6839\u636e\u5df2\u7ecf\u6269\u5c55\u7684\u6cb9\u6ef4(j)\u534a\u5f84\u6765\u786e\u5b9a \u6b64\u6cb9\u6ef4(i)\u7684\u6700\u5c0f\u534a\u5f84 \n                if(i!=j&&b[j]){\n                    double d=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n                    r[i]=Min(r[i],d-r[j]);\n                }\n            find(now+1,sum+pi*r[i]*r[i]);//\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6cb9\u6ef4\n             \n            r[i]=0;//\u56de\u6eaf \n            b[i]=0; \n        }\n}\n```\n\u81ea\u6b64\uff0c\u672c\u9898\u91cd\u70b9\u5c31\u5b8c\u5566\u3002\n\n \n\n\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#define pi 3.1415926\nusing namespace std;\nint n; //n\u4e2a\u6cb9\u6ef4 \nint X1,Y1,X2,Y2;//\u77e9\u5f62\u533a\u57df \ndouble ans;//\u8986\u76d6\u7684\u6700\u5927\u9762\u79ef \n\nint x[10],y[10];//\u7f16\u53f7\u4e3a [i] \u7684\u6cb9\u6ef4\u7684\u5750\u6807 \ndouble r[10];   //\u7f16\u53f7\u4e3a [i] \u7684\u6cb9\u6ef4\u7684\u534a\u5f84 \n\nbool b[10]; //\u8bb0\u5f55\u6b64\u6cb9\u6ef4\u662f\u5426\u5df2\u7ecf\u6269\u5c55 \n\n//\u4e09\u4e2a\u51fd\u6570\uff0c\u611f\u89c9\u8fd9\u6837\u5199\u53ef\u80fd\u4f1a\u6bd4 C++ \u81ea\u5e26\u7684\u5feb\u4e00\u4e9b \ninline double Max(double a,double b){\n    return a > b ? a : b ;\n}\ninline double Min(double a,double b){\n    return a < b ? a : b ;\n}\ninline int Abs(int a,int b){\n    if(a>b)\n        return a-b;\n    return b-a;\n}\nvoid find(int now,double sum){//now \u4e3a\u5c06\u8981\u641c\u7b2c\u51e0\u4e2a\u6cb9\u6ef4 ,sum\u4e3a\u73b0\u5728\u5df2\u7ecf\u6269\u5c55\u7684\u9762\u79ef \n    if(now==n+1){//\u90fd\u641c\u5b8c\u4e86\n        ans=Max(ans,sum);//\u66f4\u65b0\u7b54\u6848\u3002 \n        return ;\n    }\n    \n    for(int i=1;i<=n;i++)\n        if(!b[i]){//\u82e5\u8fd9\u4e2a\u6cb9\u6ef4\u8fd8\u6ca1\u88ab\u6269\u5c55 \n        \n            int tt=0;//\u4e34\u65f6\u53d8\u91cf \n            \n            for(int j=1;j<=n;j++)//\u8fd9\u4e2a\u5faa\u73af\u7684\u4f5c\u7528\u662f\u5224\u65ad\u6b64\u6cb9\u6ef4\u662f\u5426\u5df2\u7ecf\u88ab\u5176\u4ed6\u6cb9\u6ef4\u8986\u76d6\u4e86 \n                if(b[j]&&r[j]>=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]))){\n                    tt=1;\n                    b[i]=1;\n                    find(now+1,sum); \n                    b[i]=0;\n                }\n                \n            if(tt==1)\n                continue ;\n                \n            b[i]=1;\n            \n            r[i]=Min(Abs(x[i],X1),Abs(x[i],X2));\n            r[i]=Min(r[i],Min(Abs(y[i],Y1),Abs(y[i],Y2)));//\u6b64\u6cb9\u6ef4\u7684\u53ef\u80fd\u534a\u5f84\u4e3a\u5230\u8fb9\u754c\u7684\u6700\u77ed\u8def\u5f84 \n            \n            for(int j=1;j<=n;j++)//\u6839\u636e\u5df2\u7ecf\u6269\u5c55\u7684\u6cb9\u6ef4(j)\u534a\u5f84\u6765\u786e\u5b9a \u6b64\u6cb9\u6ef4(i)\u7684\u6700\u5c0f\u534a\u5f84 \n                if(i!=j&&b[j]){\n                    double d=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n                    r[i]=Min(r[i],d-r[j]);\n                }\n            find(now+1,sum+pi*r[i]*r[i]);//\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6cb9\u6ef4\n             \n            r[i]=0;//\u56de\u6eaf \n            b[i]=0; \n        }\n    \n}\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\nint main(){\n    n=read();\n    X1=read()+1000,Y1=read()+1000,X2=read()+1000,Y2=read()+1000;\n    for(int i=1;i<=n;i++)\n        x[i]=read()+1000,y[i]=read()+1000;\n        \n    find(1,0.0);\n    \n    ans=Abs(X1,X2)*Abs(Y1,Y2)-ans;\n    int answer=int(ans+0.5);\n    printf(\"%d\",answer);\n    return 0;\n}\n```\n ",
        "postTime": 1539485451,
        "uid": 31980,
        "name": "\u9752\u73f9",
        "ccfLevel": 0,
        "title": "\u6cb9\u6ef4\u6269\u5c55"
    },
    {
        "content": "# \u601d\u8def\n\n## \u7b97\u6cd5\n\n\u4f7f\u7528**\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5**~~\uff08\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\u592a\u9ebb\u70e6\uff09~~\u3002\n\n## \u7ec6\u8282\n\n### \u5173\u4e8e$\\pi$\n\n\u81f3\u4e8e$\\pi$\u7684\u503c\uff0c\u5982\u679c\u5728\u8003\u573a\u4e0a\u80cc\u4e0d\u51fa\u6765\u5c0f\u6570\u70b9\u540e$20$\u4f4d\u7684\u8bdd\uff0c\u53ef\u4ee5\u6253\u5f00\u5934\u6587\u4ef6```<math.h>```\uff0c\u627e\u5230\uff1a\n\n```cpp\n#if !defined(__STRICT_ANSI__) || defined(_XOPEN_SOURCE) || defined(_GNU_SOURCE) || defined(_BSD_SOURCE) || defined(_USE_MATH_DEFINES)\n#define M_E\t\t2.7182818284590452354\n#define M_LOG2E\t\t1.4426950408889634074\n#define M_LOG10E\t0.43429448190325182765\n#define M_LN2\t\t0.69314718055994530942\n#define M_LN10\t\t2.30258509299404568402\n#define M_PI\t\t3.14159265358979323846\n#define M_PI_2\t\t1.57079632679489661923\n#define M_PI_4\t\t0.78539816339744830962\n#define M_1_PI\t\t0.31830988618379067154\n#define M_2_PI\t\t0.63661977236758134308\n#define M_2_SQRTPI\t1.12837916709551257390\n#define M_SQRT2\t\t1.41421356237309504880\n#define M_SQRT1_2\t0.70710678118654752440\n#endif\n```\n\n```#define M_PI```\u540e\u9762\u7684$3.14159265358979323846$\u5c31\u662f$\\pi$\u7684\u503c\u3002\n\n\u6ce8\uff1a```acos(-1)```\u7684\u7cbe\u5ea6\u53ef\u80fd\u6709\u70b9\u504f\u5dee\u3002\n\n\u5f53\u7136\uff0c\u5047\u5982\u4f60\u5199\u4e86```#include<math.h>```\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528```M_PI```\u4ee3\u66ff$\\pi$\u7684\u503c\u3002\n\n### \u5173\u4e8e\u77e9\u5f62\u7684\u63cf\u8ff0\n\n\u73b0\u5728\u77e5\u9053\u4e00\u4e2a\u77e9\u5f62\u7684\u4e24\u4e2a\u76f8\u5bf9\u7aef\u70b9\u4e3a$A(x_1,y_1),B(x_2,y_2)$\uff0c\u5219\u8fd9\u4e2a\u77e9\u5f62\u6211\u4eec\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a\n\n\u4e0a\u8fb9\uff1a$y=max(y_1,y_2)$\uff0c\u540e\u9762\u7528```up```\u4ee3\u66ff\uff1b\n\n\u4e0b\u8fb9\uff1a$y=min(y_1,y_2)$\uff0c\u540e\u9762\u7528```down```\u4ee3\u66ff\uff1b\n\n\u5de6\u8fb9\uff1a$x=min(x_1,x_2)$\uff0c\u540e\u9762\u7528```left```\u4ee3\u66ff\uff1b\n\n\u53f3\u8fb9\uff1a$x=max(x_1,x_2)$\uff0c\u540e\u9762\u7528```right```\u4ee3\u66ff\u3002\n\n### \u5173\u4e8e\u6cb9\u6ef4\u7684\u534a\u5f84\u5927\u5c0f\n\n#### \u6cb9\u6ef4\u6269\u5c55\u65f6\u4e0d\u80fd\u8d85\u51fa\u77e9\u5f62\u7684\u8303\u56f4\n\n\u6240\u4ee5\u5728\u4e0d\u8003\u8651\u5176\u4ed6\u6cb9\u6ef4\u65f6\uff0c\u8fd9\u4e00\u9897\u6cb9\u6ef4\u7684\u534a\u5f84\uff1a\n\n```cpp\nr=min(min(x-left,right-x),min(y-down,up-y));\n```\n\n#### \u6cb9\u6ef4\u6269\u5c55\u65f6\u63a5\u89e6\u5230\u5176\u4ed6\u6cb9\u6ef4\u5c31\u505c\u6b62\n\n1. \u9996\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u6cb9\u6ef4\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5176\u4e2d```d[i][j]=d[j][i],d[i][i]=0```\uff0c\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\nfor(i=1;i<=n;i++)//i={1~n}\n\tfor(j=i+1;j<=n;j++)//j={i+1~n}\uff0c\u8fd9\u6837\u53ef\u4ee5\u7701\u53bb\u4e00\u534a\u591a\u7684\u8ba1\u7b97\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u6548\u7387\n\t\td[i][j]=d[j][i]=sqrt(\n\t\t\t(x[i]-x[j])*(x[i]-x[j])+\n\t\t\t(y[i]-y[j])*(y[i]-y[j])\n\t\t);\n```\n\n2. \u6839\u636e\u5706\u4e0e\u70b9\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff1a\n\n\t- \u5982\u679c\u5706\u7684\u534a\u5f84\u5927\u4e8e\u70b9\u5230\u5706\u5fc3\u7684\u8ddd\u79bb\uff0c\u70b9\u5728\u5706\u5185\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa$d-r<0$\uff0c\u5373\u65b0\u7684\u6cb9\u6ef4\u5728\u5176\u5b83\u6cb9\u6ef4\u5185\u90e8\uff0c\u65e0\u6cd5\u8fdb\u884c\u6269\u5c55\u3002\n    \n    - \u5982\u679c\u5706\u7684\u534a\u5f84\u7b49\u4e8e\u70b9\u5230\u5706\u5fc3\u7684\u8ddd\u79bb\uff0c\u70b9\u5728\u5706\u4e0a\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa$d-r=0$\uff0c\u4e5f\u65e0\u6cd5\u8fdb\u884c\u6269\u5c55\u3002\n    \n    - \u5982\u679c\u5706\u7684\u534a\u5f84\u5c0f\u4e8e\u70b9\u5230\u5706\u5fc3\u7684\u8ddd\u79bb\uff0c\u70b9\u5728\u5706\u5916\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa$d-r>0$\uff0c\u6b64\u65f6\u65b0\u6cb9\u6ef4\u53ef\u4ee5\u6269\u5c55\uff0c\u5b83\u7684\u534a\u5f84\u4e3a$r'=(d-r)$\uff0c\u9762\u79ef\u4e3a$S=r'^2\\pi$\u3002\n\n\u6cb9\u6ef4\u7684\u534a\u5f84\u5927\u5c0f\u7684\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\u3002\n\n```cpp\nr[i]=min(\n\tmin(x[i]-left,right-x[i]),\n    min(y[i]-down,up-y[i])\n);//\u5148\u4e0d\u8003\u8651\u5176\u5b83\u6cb9\u6ef4\nfor(j=1;j<=n;j++)//\u679a\u4e3e\u5176\u5b83\u6cb9\u6ef4\n\tif(used[j])//\u5982\u679c\u6269\u5c55\u8fc7\n\t\tr[i]=min(r[i],d[i][j]-r[j]);//\u53d6\u6700\u5c0f\u503c\nif(r[i]<0)\n\tr[i]=0;//\u5982\u679c\u51fa\u73b0\u4e86\u70b9\u5728\u5706\u5185\u7684\u60c5\u51b5\uff0c\u534a\u5f84\u8981\u7f6e\u4e3a0\n```\n\n# \u4ee3\u7801\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include<stdio.h>\n#include<math.h>//\u5934\u6587\u4ef6\n#define\tabs(a)  ( (a) > 0 ? (a) : ( - (a) ) )\n#define min(a,b)    ( (a) < (b) ? (a) : (b) )\n#define max(a,b)    ( (a) > (b) ? (a) : (b) )//\u5b8f\u5b9a\u4e49\u8bb8\u591a\u51fd\u6570\n\nbool used[7];//\u6807\u8bb0\u6570\u7ec4\nint n;\ndouble tx,ty,up,down,left,right,x[7],y[7],r[7],ans=0,d[7][7];//\u7528double\u51cf\u5c0f\u8bef\u5dee\n\nvoid DFS(int,double);//\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\n\nint main(void){\n\tregister int i,j;//\u5bc4\u5b58\u5668\u66f4\u5feb\u4e9b\n\tscanf(\"%d\",&n);//\u8bfb\u5165n\n\tscanf(\"%lf%lf\",&tx,&ty);//\u5148\u8bfb\u5165\u4e00\u4e2a\u9876\u70b9\n\tleft=right=tx;up=down=ty;//\u5747\u8d4b\u503c\n\tscanf(\"%lf%lf\",&tx,&ty);//\u518d\u8bfb\u5165\u53e6\u4e00\u4e2a\u9876\u70b9\n\tleft=min(left,tx),right=max(right,tx);\n\tdown=min(down,ty),up=max(up,ty);//\u663e\u7136\uff0c\u4e00\u4e2a\u77e9\u5f62\u7684\u5750\u6807\u53ef\u4ee5\u7528\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u503c\u6765\u63cf\u8ff0\uff0c\u5de6\u5c0f\u53f3\u5927\uff0c\u4e0a\u5927\u4e0b\u5c0f\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lf%lf\",&x[i],&y[i]);//\u8bfb\u5165\u70b9\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=i+1;j<=n;j++)//\u526a\u53bb\u4e00\u822c\u7684\u8ba1\u7b97\u8fc7\u7a0b\n\t\t\td[i][j]=d[j][i]=sqrt(\n\t\t\t\t(x[i]-x[j])*(x[i]-x[j])+\n\t\t\t\t(y[i]-y[j])*(y[i]-y[j])\n\t\t\t);//\u5c06\u8ddd\u79bb\u9884\u5904\u7406\n\tDFS(1,0.0);\n\tprintf(\"%.0lf\",(up-down)*(right-left)-ans);//\u8f93\u51fa\u5269\u4f59\u7684\u9762\u79ef\n\treturn 0;//\u7ed3\u675f\n}\n\nvoid DFS(int will_put,double sum){//\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0cwill_put\u4e3a\u8fd9\u6b21\u641c\u7d22\u8981\u9009\u62e9\u7b2cwill_put\u4e2a\u8981\u653e\u7f6e\u7684\u70b9\uff0csum\u662f\u6240\u6709\u5df2\u7ecf\u653e\u7f6e\u7684\u6cb9\u6ef4\u7684\u9762\u79ef\u4e4b\u548c\n\tregister int i,j;//\u5bc4\u5b58\u5668\u66f4\u5feb\u4e9b\n\tif(will_put==n+1)//\u5982\u679cn\u4e2a\u653e\u7f6e\u5b8c\u6bd5\n\t\tans=max(ans,sum);//\u66f4\u65b0\u7b54\u6848\n\tfor(i=1;i<=n;i++)\n\t\tif(!used[i]){//\u5982\u679c\u6ca1\u6709\u9009\u53d6\n\t\t\tr[i]=min(\n\t\t\t\tmin(x[i]-left,right-x[i]),\n\t\t\t\tmin(y[i]-down,up-y[i])\n\t\t\t);//\u786e\u5b9a\u534a\u5f84\u7684\u521d\u503c\n\t\t\tfor(j=1;j<=n;j++)\n\t\t\t\tif(used[j])\n\t\t\t\t\tr[i]=min(r[i],d[i][j]-r[j]);//\u591a\u6b21\u66f4\u65b0\u534a\u5f84\n\t\t\tused[i]=true;//\u6807\u8bb0\n\t\t\tif(r[i]<0)\n\t\t\t\tr[i]=0;//\u5982\u679c\u534a\u5f84\u4e3a\u8d1f\u6570\uff0c\u663e\u7136\u662f\u5728\u5176\u4ed6\u6cb9\u6ef4\u5185\uff0c\u5ffd\u7565\u6b64\u6cb9\u6ef4\u4e0d\u8bb0\n\t\t\tDFS(will_put+1,sum+r[i]*r[i]*M_PI);//\u8fdb\u5165\u4e0b\u4e00\u5c42\u7684\u641c\u7d22\n\t\t\tused[i]=false;//\u56de\u6eaf\n\t\t}\n\treturn;//\u9000\u51fa\n}\n```\n\n## [\u6211\u7684\u6d4b\u8bc4\u8bb0\u5f55](https://www.luogu.org/record/show?rid=9552792)",
        "postTime": 1533902391,
        "uid": 38502,
        "name": "agicy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u91cc\u90fd\u662f\u6df1\u641c\uff0c\u6765\u4e00\u53d1\u4e0d\u4e00\u6837\u7684\n\n\u770b\u9898\u76ee\uff0c\u89c2\u5bdf\u5230$n<=6$\u3002\u53c8\u53d1\u73b0\u6cb9\u6ef4\u6ef4\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6700\u540e\u5269\u4e0b\u9762\u79ef\u4e0d\u540c\uff0c\u90a3\u5c31\u4f7f\u51fa\u6211\u4eec\u7684STL\u5927\u6cd5\uff08~~STL\u5927\u6cd5\u597d~~\uff09\uff1a\n#### next_permutation\n\u7528next_permutation\u679a\u4e3e\u6240\u6709\u987a\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u987a\u5e8f\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5269\u4f59\u7684\u9762\u79ef\uff0c\u600e\u4e48\u8ba1\u7b97\u5462\uff1f\n\n\u6cb9\u6ef4\u7684\u6269\u5c55\u6709\u9650\u5236\uff0c\u770b\u9898\u76ee\u53ef\u4ee5\u53d1\u73b0\uff0c\u6cb9\u6ef4\u78b0\u5230\u77e9\u5f62\u8fb9\u754c\u6216\u8005\u5176\u4ed6\u6cb9\u6ef4\u7684\u8fb9\u754c\u5c31\u4f1a\u505c\u6b62\u6269\u6563\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u6bcf\u6b21\u8981\u6ef4\u7684\u6cb9\u6ef4\u7684\u9650\u5236\u6761\u4ef6\uff1a\n\n1. #### \u79bb\u77e9\u5f62\u4e0a\u9762\u7684\u8ddd\u79bb\n1. #### \u79bb\u77e9\u5f62\u5de6\u8fb9\u7684\u8ddd\u79bb\n1. #### \u79bb\u77e9\u5f62\u4e0b\u9762\u7684\u8ddd\u79bb\n1. #### \u79bb\u77e9\u5f62\u53f3\u8fb9\u7684\u8ddd\u79bb\n1. #### \u79bb\u4e4b\u524d\u6240\u6709\u5df2\u6ef4\u7684\u6cb9\u6ef4\u8fb9\u754c\u7684\u8ddd\u79bb\n\u5728\u8fd9\u4e9b\u8ddd\u79bb\u4e2d\uff0c\u53d6\u6700\u5c0f\u503c\uff0c\u5373\u53ef\u5f97\u5230\u8be5\u6cb9\u6ef4\u6269\u6563\u7684\u6700\u5927\u534a\u5f84\u3002\u4f46\u8981\u6ce8\u610f\uff0c\u5982\u679c\u79bb\u4e4b\u524d\u6240\u6709\u5df2\u6ef4\u7684\u6cb9\u6ef4\u8fb9\u754c\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u5c0f\u4e8e0\uff0c\u5373\u8be5\u6cb9\u6ef4\u5728\u4e4b\u524d\u6cb9\u6ef4\u4e4b\u5185\uff0c\u65e0\u6cd5\u6269\u6563\n\n\u5177\u4f53\u89c1\u4ee3\u7801\uff08\u6709\u4e9b\u7528\u4e86\u62fc\u97f3\u4fbf\u4e8e\u7406\u89e3\uff09\uff1a\n```cpp\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\n#define ts cout<<\"ok\"<<endl\n#define lowbit(x) (x)&(-x)\n#define oo (1e18)\n#define soo (1e8)\n#define INF 2147483647\n#define Bigprime 212370440130137957ll\n#define ll long long\n#define LL unsigned long long\n#define lll __int128\n#define hash Hash\n#define time Time\n#define gc getchar()\n#define pc(x) putchar(x)\n#define hh puts(\"\")\n#define mp make_pair\n#define fi first\n#define se second\nusing namespace std;\nint n,res=soo;\ndouble xx1,yy1,xx2,yy2,shang,xia,zuo,you,u,d,l,r,rr[15];\nint b[15];\ndouble s;\nstruct node{\n\tdouble x,y;\n}a[15];\ninline int read(){\n    int ret=0,ff=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') ff=-ff;ch=getchar();}\n    while(isdigit(ch)){ret=(ret<<3)+(ret<<1)+ch-'0';ch=getchar();}\n    return ret*ff;\n}\ndouble dist(int aa,int bb){\n\treturn sqrt((a[aa].x-a[bb].x)*(a[aa].x-a[bb].x)+(a[aa].y-a[bb].y)*(a[aa].y-a[bb].y));\n}\ndouble work(){\n\tdouble sum=0,R;\n\tfor(int i=1;i<=n;i++){\n\t\tu=shang-a[b[i]].y;//\u8ba1\u7b97\u4e0a\u8fb9\u754c\n\t\td=a[b[i]].y-xia;//\u8ba1\u7b97\u4e0b\u8fb9\u754c\n\t\tl=a[b[i]].x-zuo;//\u8ba1\u7b97\u5de6\u8fb9\u754c\n\t\tr=you-a[b[i]].x;//\u8ba1\u7b97\u53f3\u8fb9\u754c\n\t\tR=soo;\n\t\tfor(int j=i-1;j>=1;j--)//\u8ba1\u7b97\u79bb\u4e4b\u524d\u6240\u6709\u5df2\u6ef4\u7684\u6cb9\u6ef4\u8fb9\u754c\u7684\u8ddd\u79bb\n        \tR=min(R,dist(b[i],b[j])-rr[j]);\n        //\u6ce8\u610fb\u6570\u7ec4\u5b58\u7f16\u53f7\uff0c\u8ba1\u7b97dis\u65f6\u53c2\u6570\u4e3a\u7f16\u53f7\n        \n\t\tif(R<0){//\u5728\u4e4b\u524d\u6cb9\u6ef4\u4e4b\u5185\n\t\t\trr[i]=0;\n\t\t\tcontinue;\n\t\t}\n\t\trr[i]=min(u,min(d,min(l,min(r,R))));//rr\u5b58\u8be5\u6cb9\u6ef4\u534a\u5f84\n\t\tsum+=rr[i]*rr[i]*3.1415926;//pai\u591a\u6253\u51e0\u4f4d\u9632\u6b62\u7cbe\u5ea6\u95ee\u9898\n\t}\n\treturn sum;\n}\nint main(){\n\tn=read();\n\tcin>>xx1>>yy1>>xx2>>yy2;\n\tshang=max(yy1,yy2),xia=min(yy1,yy2),zuo=min(xx1,xx2),you=max(xx1,xx2);\n\ts=(shang-xia)*(you-zuo);\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i].x>>a[i].y;\n\t\tb[i]=i;\n\t}\n\tdouble t;\n\tint tt;\n\tdo{\n\t\tt=work();\n\t\tt=s-t;//\u77e9\u5f62\u5269\u4f59\u9762\u79ef\n\t\ttt=(int)round(t);//\u56db\u820d\u4e94\u5165\n\t\tres=min(res,tt);\n\t}while(next_permutation(b+1,b+n+1));\n\tprintf(\"%d\",res);\n    return 0;\n}\n```",
        "postTime": 1549764811,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u7684\u65b9\u6cd5\u5e76\u4e0d\u96be\u60f3\uff0c\u4f46\u80fd\u505a\u5230\u4e00\u904dAC\u7684\u4e5f\u4e00\u5b9a\u662f\u771fdalao.\n\n\u9996\u5148\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u6b64\u9898\u7684\u8981\u6c42\uff0c\u6cb9\u6ef4\u662f\u5706\u5f62\u7684\uff0c\u5404\u4e2a\u6cb9\u6ef4\u53ea\u80fd\u76f8\u79bb\u6216\u76f8\u5207\u3002\u5176\u6b21\uff0c\u6cb9\u6ef4\u4e0d\u80fd\u8986\u76d6\u5728\u5df2\u6709\u7684\u6cb9\u6ef4\u4e0a\uff0c\u9700\u8981\u8fdb\u884c\u7279\u5224\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst double pi=3.141592;\nint n,x,y,x1,yx;\nint a[7][3];\nbool v[7];\ndouble res,outt=-1;\ndouble r[7];\n```\n```\ndouble dis(int xx,int yy,int xx1,int yy1)\n{\n\treturn sqrt(pow((xx-xx1),2)+pow((yy-yy1),2));\n}\n```\ndis\u51fd\u6570\u7528\u6765\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff08\u52fe\u80a1\u5b9a\u7406\uff09\u3002\n```\ndouble minn(int k)\n{\n\tfor(int i=1;i<=n;i++)\n\t\tif(i!=k&&v[i]==1)\n\t\t\tif(r[i]>dis(a[i][1],a[i][2],a[k][1],a[k][2])) return 0;\n    //\u5224\u65ad\u8be5\u70b9\u5750\u6807\u662f\u5426\u5df2\u88ab\u6cb9\u6ef4\u8986\u76d6\uff0c\u662f\u5219\u5c06\u8be5\u70b9\u534a\u5f84\u8bbe\u4e3a\u96f6\u3002\n\tdouble dist;\n\tdouble ans=min(min(abs(a[k][1]-x),abs(a[k][1]-x1)),min(abs(a[k][2]-y),abs(a[k][2]-yx)));\n    //\u5148\u53d6\u8be5\u70b9\u5230\u8fb9\u754c\u7684\u6700\u5c0f\u8ddd\u79bb\u3002\n\tfor(int i=1;i<=n;i++)\n\t\tif(i!=k&&v[i]==1)\n\t\t{\n\t\t\tdist=dis(a[i][1],a[i][2],a[k][1],a[k][2])-r[i];\n\t\t\tans=min(ans,dist);\n\t\t}\n    //\u679a\u4e3e\u6bcf\u4e2a\u5df2\u5b58\u5728\u7684\u6cb9\u6ef4\uff0c\u66f4\u65b0\u6700\u5c0f\u503c\u3002\n\treturn ans;\n}\n```\nminn\u51fd\u6570\u7528\u6765\u5224\u65ad\u5706\u7684\u6700\u5927\u534a\u5f84\u3002\n```\nvoid dfs(int k,double res)\n{\n\tdouble mm;\n\tif(k==n)\n\t{\n\t\toutt=max(outt,res);\n\t\treturn;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(v[i]==0)\n\t\t{\n\t\t\tr[i]=minn(i);\n\t\t\tv[i]=1;\n\t\t\tdfs(k+1,res+pi*r[i]*r[i]);\n\t\t\tv[i]=0;\n\t\t\tr[i]=0;\n\t\t}\n}\n```\ndfs\u4ee3\u7801\uff0c\u641c\u7d22\u6240\u6709\u53ef\u80fd\u7684\u987a\u5e8f\u3002\n```\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%d%d%d%d\",&x,&y,&x1,&yx);\n\tint s=abs(x-x1)*abs(y-yx);\n    //\u8ba1\u7b97\u603b\u9762\u79ef\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d\",&a[i][1],&a[i][2]);\n\tdfs(0,0);\n\tcout<<int(s-outt+0.5);\n    //\u56db\u820d\u4e94\u5165\n    return 0;\n}\n```\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8f93\u51fa\u7ed3\u679c\u65f6\u4e0d\u80fd\u4f7f\u7528\u5982\u4e0b\u5199\u6cd5\n```\n\tcout<<floor(s-outt+0.5);\n```\n\u770b\u4f3c\u8fd9\u4e0e    int(s-outt+0.5);    \u5e76\u6ca1\u6709\u533a\u522b\uff0c\u4f46\u7531\u4e8e\u7cbe\u5ea6\u7684\u95ee\u9898\uff0c\u8fd9\u79cd\u5199\u6cd5\u4f1aWA\u4e24\u4e2a\u70b9\u3002\t\n\u4f8b\u5982\uff1a\u6b63\u786e\u7b54\u684812345678\uff0c\u800c\u7528floor\u51fd\u6570\u4f1a\u5f97\u52301.234567e+006\n### \u4e8e\u662f\u4e4e\uff0c\u6211\u53d1\u73b0\uff1afloor \u51fd\u6570\u7684\u8fd4\u56de\u503c\u7adf\u7136\u662f\u662f double \u578b\u7684\uff01\t\t\n\u800cdouble\u7c7b\u578b\u7684\u5c0f\u6570\u70b96\u4f4d\u4e4b\u540e\u5c31\u65e0\u6cd5\u4fdd\u8bc1\u7cbe\u5ea6\u4e86\u3002\uff08\u6211\u7684\u673a\u5b50\u4e0a\u662f6\u4f4d\uff09\u3002\n\n\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\u3002",
        "postTime": 1523883308,
        "uid": 26512,
        "name": "Christopher_Yan",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37 1378 \u6cb9\u6ef4\u6269\u5c55"
    },
    {
        "content": "\u603b\u7ed3\u4e00\u4e0b\u524d\u4eba\u7684\u8840\u6cea\u6559\u8bad\uff0c\u5199\u4e00\u70b9\u4e2a\u4eba\u601d\u7d22\n\n\u9996\u5148\uff0c\u770b\u8303\u56f4\uff0c\u53ea\u67096\uff0c\u800c\u9898\u76ee\u4e2d\u53c8\u95ee\u4f60\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u76f4\u63a5\u5168\u6392\u5217\u679a\u4e3e\u65b9\u6cd5\u5373\u53ef\n\n\u5f97\u5230\u987a\u5e8f\u4e4b\u540e\u6309\u8fd9\u4e2a\u987a\u5e8f\u8fdb\u884c\u679a\u4e3e\u5373\u53ef\uff0c\u5728\u6240\u6709\u7684\u679a\u4e3e\u4e2d\u627e\u51fa\u6700\u4f18\u89e3\u3002\n\n\u5168\u6392\u5217\n\n```\nvoid dfs(int x) {\n\tif(x>n) {\n\t\tmemset(r,0,sizeof(r));\n\t\tfor(int i=1; i<=n; i++) slove(a[i]);\n\t\tdouble s=0;\n\t\tfor(int i=1; i<=n; i++) s+=3.1415926*r[i]*r[i];\n\t\ts=max(s,ans);\n\t} else \n\t\tfor(int i=x; i<=n; i++) {\n\t\t\tswap(a[i],a[x]);\n\t\t\tdfs(x+1);\n\t\t\tswap(a[i],a[x]);\n\t\t}\n}\n```\n\n**\u03c0\u8981\u53d6\u591a\u4e00\u70b9\uff0c\u9632\u6b62\u62a5\u7cbe\u5ea6**\n\n\u5173\u4e8e\u5982\u4f55\u8fdb\u884c\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u9762\u79ef\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u6709\u4e00\u4e0b2\u4e2a\u9650\u5236\u6761\u4ef6\uff1a\n\n1.\u78b0\u5230\u77e9\u9635\u56db\u8fb9\u8fb9\u754c\n\n2.\u78b0\u5230\u5176\u4ed6\u6cb9\u6ef4\n\n**\u6ce8\u610f\uff0c\u521a\u5f00\u59cb\u6bcf\u4e2a\u53ef\u4ee5\u653e\u6cb9\u6ef4\u7684\u4f4d\u7f6e\u4e0a\u6ca1\u6709\u6cb9\u6ef4\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u8d8a\u8fc7\u8fd9\u4e9b\u70b9**\n\n\u8ba1\u7b97\u9762\u79ef\uff1a\n\n\u8fb9\u754c\u5f88\u597d\u7b97\uff0c\u4e0d\u518d\u8d58\u8ff0\uff0c\u5173\u952e\u5728\u4e8e\u5982\u4f55\u6c42\u4e0e\u5176\u4ed6\u6cb9\u6ef4\u521a\u597d\u76f8\u4ea4\u7684\u60c5\u51b5\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u4e24\u5706\u5fc3\u8ddd\u79bb-\u53e6\u4e00\u4e2a\u5706\u534a\u5f84\u5c31\u884c\n\n## \u6ce8\u610f\uff1a\n**1.\u5982\u679c\u51cf\u51fa\u6765\u7684\u503c\u975e\u6b63\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u5176\u4ed6\u6cb9\u6ef4\u5305\u56f4\u4e86\uff0c\u76f4\u63a5\u8df3\u6389**\n\n**2.\u5982\u679c\u53e6\u4e00\u4e2a\u5706\u534a\u5f84\u4e3a0\uff0c\u4e0d\u7528\u7ba1\uff0c\u56e0\u4e3a\u8fd9\u4ee3\u8868\u8fd9\u91cc\u6ca1\u6709\u6cb9\u6ef4\uff0c\u53ef\u4ee5\u76f4\u63a5\u8d8a\u8fc7**\n\n```\nvoid slove(int i) {\n\tdouble mn=1e9;\n\tmn=min(min(x[i]-sx,ex-x[i]),min(y[i]-sy,ey-y[i]));\n\tfor(int j=1; j<=n; j++) \n\t\tif(i!=j) {\n\t\t\tif(!r[j]) continue;\n\t\t\tif(jl(i,j)<=r[j]) return ;\n\t\t\tmn=min(mn,jl(i,j)-r[j]);\n\t\t}\n\t\tr[i]=mn;\n}\n```\n\n\u8bc1\u660e\u6709\u56fe\u663e\u7136\n![](https://cdn.luogu.com.cn/upload/image_hosting/9uxg7c6y.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,a[9];\ndouble ans,r[9],sx,sy,ex,ey,x[9],y[9],jg[9];\ndouble jl(int a,int b) {return sqrt((x[a]-x[b])*(x[a]-x[b])+(y[a]-y[b])*(y[a]-y[b]));}\nvoid slove(int i) {\n\tdouble mn=1e9;\n\tmn=min(min(x[i]-sx,ex-x[i]),min(y[i]-sy,ey-y[i]));\n\tfor(int j=1; j<=n; j++) \n\t\tif(i!=j) {\n\t\t\tif(!r[j]) continue; \u3001\u3001\u6ca1\u6cb9\u6ef4\u4e0d\u7ba1\n\t\t\tif(jl(i,j)<=r[j]) return ; //\u88ab\u5305\u56f4\u76f4\u63a5\u5f39\u51fa\n\t\t\tmn=min(mn,jl(i,j)-r[j]);\n\t\t}\n\t\tr[i]=mn;\n}\nvoid dfs(int x) {\n\tif(x>n) {\n\t\tmemset(r,0,sizeof(r));\n\t\tfor(int i=1; i<=n; i++) slove(a[i]);\n\t\tdouble s=0;\n\t\tfor(int i=1; i<=n; i++) s+=3.1415926*r[i]*r[i];\n\t\ts=max(s,ans);\n\t} else \n\t\tfor(int i=x; i<=n; i++) {\n\t\t\tswap(a[i],a[x]);\n\t\t\tdfs(x+1);\n\t\t\tswap(a[i],a[x]);\n\t\t}\n}\nint main() {\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) a[i]=i;\n\tcin>>sx>>sy>>ex>>ey;\n\tif(sx>ex) swap(sx,ex);\n\tif(sy>ey) swap(sy,ey);\n\tfor(int i=1; i<=n; i++) cin>>x[i]>>y[i];\n\tdfs(1);\n\tans=(ex-sx)*(ey-sy)-ans;\n\tprintf(\"%d\\n\",(int)(ans+0.5)); //\u4e00\u5b9a\u8981\u5148\u8f6cint\n\treturn 0;\n}\n```\n\n",
        "postTime": 1567840204,
        "uid": 11392,
        "name": "shenbear",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "## \u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\n\u8fd9\u4e2a\u9898\u53ef\u4ee5\u7528dfs\uff0c\u601d\u8def\u6e05\u6670\u4f46\u7ec6\u8282\u8f83\u591a\uff0c~~\u660e\u660e\u662f\u81ea\u5df1\u83dc~~\n\n\u9996\u5148\u8bf4\u8bf4\u9898\u610f\uff0c\u60f3\u8c61\u4e00\u4e2a\u77e9\u5f62\u76d2\u5b50\uff0c\u6307\u5b9a\u70b9\u7684\u6b63\u4e0a\u65b9\u60ac\u6d6en\u4e2a\u6ef4\u7ba1\uff0c\u6bcf\u4e2a\u6ef4\u7ba1\u4f9d\u6b21\u6ef4\u4e0b~~\u871c\u6c41~~\u6db2\u4f53\uff0c\u6bcf\u6b21\u6db2\u4f53\u6ef4\u5165\u76d2\u5b50\u540e\u4f1a\u4e0d\u65ad\u6269\u5c55\u6210\u5706\uff0c\u5373\u5706\u534a\u5f84\u4f1a\u9010\u6e10\u589e\u5927\u76f4\u81f3\u4e0e\u76d2\u5b50\u8fb9\u754c\u6216\u53e6\u4e00\u4e2a\u5df2\u5f62\u6210\u7684\u5706\u76f8\u5207\u3002\u6c42\u6240\u6709\u5706\u9762\u79ef\u4e4b\u548c\u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u5269\u4f59\u7a7a\u95f4\u7684\u6700\u5c0f\u503c\u3002\n\n\u60f3\u6cd5\u662fdfs\u641c\u6ef4\u7ba1\u6ef4\u5165\u6db2\u4f53\u7684\u987a\u5e8f\uff0c\u7136\u540e\u6c42\u6bcf\u79cd\u987a\u5e8f\u4e0b\u5706\u9762\u79ef\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u6709\u51e0\u4e2a\u91cd\u8981\u7684\u7ec6\u8282\uff1a\n\n1.\u8ba1\u7b97\u534a\u5f84\uff1a\u7b2c\u4e00\u90e8\u5206\u6c42\u8be5\u70b9\u5230\u76d2\u5b50\u7684\u56db\u4e2a\u8fb9\u754c\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u7b2c\u4e8c\u90e8\u5206\u6c42\u8be5\u70b9\u5230\u8be5\u5176\u4ed6\u5706\u7684\u6700\u5c0f\u8ddd\u79bb(\u70b9\u5230\u67d0\u5706\u5706\u5fc3\u7684\u8ddd\u79bb**\u51cf\u53bb\u8be5\u5706\u7684\u534a\u5f84**) \u56e0\u6b64\u5f97\u5230\u7684\u8ddd\u79bb\u53ef\u80fd\u4e3a\u8d1f\uff0c\u5373\u8be5\u70b9\u88ab\u5305\u542b\u5728\u4e00\u4e2a\u5706\u91cc\u7684\u60c5\u51b5\uff0c\u9700\u6e05\u96f6\u3002\n\n2.\u8f93\u51fa\u683c\u5f0f\uff1ac\u7684\u8f93\u51fa\u6bd4\u8f83\u7b80\u5355\uff0c\u5982\u4e0b\n```c\nscanf(\"%0.0f,minn);    //\u8f93\u51fa\u7ed3\u679c\u662f\u56db\u820d\u4e94\u5165\u540e\u7684\u6574\u6570\n```\n\u4f46\u6211\u524d\u9762\u7528c++\u5199(~~\u61d2~~)\u6240\u4ee5\u60f3\u7528cout\u8f93\u51fa\uff1a\u7528round()\u51fd\u6570\u56db\u820d\u4e94\u5165\uff1b\u4f46\u662fcout\u9ed8\u8ba46\u4e2a\u5bbd\u5ea6\u8f93\u51fa\uff0c\u5982\u679c\u6574\u6570\u8d85\u8fc76\u4f4d\u4f1a\u81ea\u52a8\u7528**\u79d1\u5b66\u8ba1\u6570\u6cd5**\u8868\u793a\uff0c~~\u56e0\u4e3a\u8fd9\u4e2a\u6709\u4e24\u4e2a\u70b9\u8fc7\u4e0d\u4e86~~\uff0c\u6240\u4ee5\u9700\u8981\u52a0\u4e0afixed\u4ee5\u56fa\u5b9a\u6d6e\u70b9\u3002\n\n3.\u5176\u4ed6\u7ec6\u8282\u5728\u6ce8\u91ca\u91cc\u3002\u3002\n\n\u4ee5\u4e0b\u4e3a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cmath>\n#include<climits>      //INT_MAX\u5728\u8be5\u5934\u6587\u4ef6\u91cc\n#define sqar(x) ((x)*(x))\nusing namespace std;\nstruct node\n{\n\tint x,y;\n\tdouble r;     //\u5706\u9762\u79ef\u53ea\u548c\u534a\u5f84\u6709\u5173\uff0c\u6240\u4ee5\u53ea\u5b58\u534a\u5f84\u3002\n}oil[6];                      //Q:\u4e3a\u4ec0\u4e48\u7528\u8fd9\u4e48\u5947\u602a\u7684\u53d8\u91cf\u540d? \nint xa,xb,ya,yb,n,used[6];    //A:y0,y1\u662f\u5b9a\u4e49\u5728math.h\u91cc\u7684\u51fd\u6570\u7684\u540d\u5b57\ndouble minn=INT_MAX;            //\u6211\u4eec\u8fd9\u91cc\u53c8\u9700\u8981\u7528\u5168\u5c40\u53d8\u91cf\ninline double dist(int x,int y) //\u6240\u4ee5\u4e0d\u80fd\u518d\u7528y0,y1\n\t{ return sqrt(sqar(x)+sqar(y)); }\ndouble calradius(int index)\n{\n\tdouble x=oil[index].x,y=oil[index].y;\n\tdouble r=min(fabs(x-xa),fabs(y-ya));    //fabs()\u6c42\u6d6e\u70b9\u6570\u7edd\u5bf9\u503c\n\tr=min(r,min(fabs(x-xb),fabs(y-yb)));\n\tfor(int i=0;i<n;i++)\n\t\tif(used[i])\n\t\t\tr=min(r,dist(x-oil[i].x,y-oil[i].y)-oil[i].r); \n\tif(r<0) r=0;   //\u6b64\u5904\u5224\u8d1f\n\treturn r;\n}\nvoid dfs(int step)\n{\n\tif(!step)     //\u6b64\u65f6n\u4e2a\u6ef4\u7ba1\u5747\u6ef4\u8fc7\u6db2\u4f53\n\t{\n\t\tdouble sum=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t\tsum+=sqar(oil[i].r)*M_PI;      //M_PI\u88ab\u5b9a\u4e49\u5728math.h\u4e2d\n\t\tsum=abs(xa-xb)*abs(ya-yb)-sum;     //\u77e9\u5f62\u9762\u79ef\u51cf\u5706\u9762\u79ef\u4e4b\u548c\n\t\tif(sum<minn)\n\t\t\tminn=sum;\n\t\treturn;\n\t}\n\tfor(int i=0;i<n;i++)\n\t\tif(used[i])         //\u5224\u65ad\u8be5\u6ef4\u7ba1\u662f\u5426\u5df2\u7ecf\u6ef4\u8fc7\u6db2\u4f53\n\t\t\tcontinue;\n\t\telse\n\t\t{\n\t\t\toil[i].r=calradius(i);\n\t\t\tused[i]=1;\n\t\t\tdfs(step-1);\n\t\t\tused[i]=oil[i].r=0;     //\u56de\u6eaf\n\t\t}\n}\nint main()\n{\n\tcin>>n>>xa>>ya>>xb>>yb;\n\tfor(int i=0;i<n;i++)\n\t\tcin>>oil[i].x>>oil[i].y;\n\tdfs(n);\n\tcout<<fixed<<(int)round(minn);    \n}\n```\n\n",
        "postTime": 1556082948,
        "uid": 159213,
        "name": "Reno_Jarrison",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "1.\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\u8ba9\u8f93\u5165\u7684\u6570\u636e\u4fdd\u8bc1\u77e9\u5f62xa,ya\u662f\u5de6\u4e0a\u89d2\u5750\u6807,xb,yb\u662f\u53f3\u4e0b\u89d2\u5750\u6807\n\n2.\u7136\u540e\u5f00\u59cb\u679a\u4e3e\u653e\u7f6e\u7684\u987a\u5e8f\uff0c\u5168\u90e8\u679a\u4e3e\u51fa\u6765\uff01\u5176\u5b9e\u5c31\u662f1~n\u7684\u5168\u6392\u5217\n\n\u6211\u662f\u628a\u6240\u6709\u7684\u70b9\u90fd\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\u7684\uff0c\u6240\u4ee5\u6211\u5c31\u628a\u4e0b\u6807\u7684\u987a\u5e8f\u53d6\u5168\u6392\u5217\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u662f\u6240\u6709\u70b9\u7684\u653e\u7f6e\u987a\u5e8f\u7684\u5168\u6392\u5217\u4e86\n\n4.\u6bcf\u4e2a\u987a\u5e8f\u90fd\u7b97\u51fa\u8be5\u987a\u5e8f\u7684\u7a7a\u95f4\uff0c\u7136\u540e\u53d6\u6700\u5c0f\u503c\n\n(\u6211\u8fd9\u91cc\u7b97\u4e86\u6cb9\u6ef4\u5360\u7528\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u77e9\u5f62\u9762\u79ef\u51cf\u53bb\u5b83)\n\n\u5982\u4f55\u7b97\u6bcf\u4e2a\u987a\u5e8f\u7684\u7a7a\u95f4\uff1f\n\n3.\u904d\u5386\u8be5\u987a\u5e8f\u7684\u70b9\uff0c\u6bcf\u6b21\u53d6\u6700\u5c0f\u503c:::\n\n\u53d6\u6700\u5c0f\u503c\u7684\u89c4\u5219:\n\n(1)\u4e0e\u56db\u8fb9\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\n\n(2)\u4e0e\u8be5\u987a\u5e8f\u4e0b\uff0c\u4e4b\u524d\u5df2\u7ecf\u653e\u7f6e\u4e86\u7684\u6240\u6709\u6cb9\u6ef4\u7684\u5706\u5fc3\u8ddd\u79bb \u51cf\u53bb \u8fd9\u4e2a\u653e\u7f6e\u4e86\u7684\u5706\u7684\u534a\u5f84 \u7684\u3002\u6700\u540e\u53d6\u4e00\u4e2a\u6700\u5c0f\u503c(\u5faa\u73af\u641e\u5b9a)\n\n\u4e0a\u9762\u4e24\u4e2a\u89c4\u5219\u518d\u53d6\u6700\u5c0f\u503c\uff0c\u5c31\u662f\u8be5\u5706\u80fd\u6269\u5927\u5230\u7684\u534a\u5f84\n\n\u7136\u540e\u6309\u4e4b\u524d\u6240\u8bf4\u7684\uff0c\u6240\u6709\u987a\u5e8f\u8fd9\u6837\u6765\uff0c\u53d6\u51fa\u6700\u503c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nint xa,ya;\nint xb,yb;\n/*\n\u5c3d\u91cf\u7528double\npi\u7cbe\u5ea6\u8981\u9ad8\n\u8003\u8651\u88ab\u8986\u76d6\u7684\u70b9\uff0c\u4e0d\u7136\u534a\u5f84\u53d8\u6210\u8d1f\u6570\u4e86\n\u77e9\u5f62\u7684\u89d2 \u987a\u5e8f \n*/ \npair<int,int> p[7];\ninline double dis(int xa,int ya,int xb,int yb){\n\treturn sqrt((xa-xb)*(xa-xb)+(ya-yb)*(ya-yb));\n}\ninline double solve(){\n\tdouble maxoccupy=0;\n\tint ord[n+1];//\u987a\u5e8f \n\tint cx,cy,jx,jy;\n\tdouble leastr,dotr[n+1];\n\tfor(int i=1;i<=n;++i)\tord[i]=i;\n\tdo{\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tcx=p[ord[i]].first,cy=p[ord[i]].second;\n\t\t\tleastr=min(min(xb-cx,cx-xa),min(ya-cy,cy-yb));\n\t\t\tfor(int j=1;j<i;++j){\n\t\t\t\tjx=p[ord[j]].first,jy=p[ord[j]].second;\n\t\t\t\tleastr=min(leastr,dis(cx,cy,jx,jy)-dotr[j]);\n\t\t\t}\n\t\t\tdotr[i]=leastr<0?0:leastr;\n\t\t}\n\t\tdouble occupy=0;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\toccupy+=3.1415926535898*dotr[i]*dotr[i];\n\t\t}\n\t\tmaxoccupy=max(maxoccupy,occupy);\n\t}while(next_permutation(ord+1,ord+1+n));//\u5168\u6392\u5217\n\treturn maxoccupy;\n}\nint main(){\n\tcin>>n>>xa>>ya>>xb>>yb;\n\tint a,b;\n    //\u4fdd\u8bc1\u77e9\u5f62xa,ya\u662f\u5de6\u4e0a\u89d2\u5750\u6807,xb,yb\u662f\u53f3\u4e0b\u89d2\u5750\u6807\n\tif(xa>xb){\n\t\tswap(xa,xb);\n\t}\n\tif(ya<yb){\n\t\tswap(ya,yb);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>a>>b;\n\t\tp[i]=make_pair(a,b);\n\t}\n\tcout<<(int)round((xb-xa)*(ya-yb)-solve());//\u56db\u820d\u4e94\u5165\u5230\u6574\u6570\n}\n```",
        "postTime": 1533610048,
        "uid": 109228,
        "name": "lingerleaf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "//\u7b2c\u4e00\uff0c\u672c\u4eba\u662f\u5f31\u7701\u849f\u84bb \uff0c\u6240\u4ee5\u65b9\u6cd5\u5f88\u5783\u573e\uff0c\u5927\u4f6c\u52ff\u55b7\n\n```cpp\n//\u8bf4\u9898\u76ee\u3002\u3002\u3002\u5c31\u662f\u641c\u7d22\u3002\u3002\u3002\u770b\u6211\u4e0b\u9762\u6ce8\u91ca \n//\u7528dfs\u6c42\u51fa\u5168\u6392\u5217\n//\u8fd8\u6709 r\u8981\u6ee1\u8db3 \n//1): r<=\u70b9\u5230\u8fb9\u754c\u8ddd\u79bb \n//2): \u8fd9\u4e2a\u70b9\u5f62\u6210\u7684\u5706\u4e0e\u5176\u4ed6\u5706\u5916\u79bb\u6216\u5916\u5207 \n//\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\n//\u770b\u4ee3\u7801 \n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#include<cmath>\n#define pi 3.141592653\n#define MAXM 0x7fffffff\nusing namespace std;\nint n,z,m,s,t,x[10],y[10],vis[10],p[10],d[10];\ndouble maxl=0,data[10][10],r[10],sum=0;\nint bi( int aaa,int bbb,int ccc,int ddd)\n{\n    aaa=aaa<bbb? aaa:bbb;\n    aaa=aaa<ccc? aaa:ccc;\n    aaa=aaa<ddd? aaa:ddd;\n    return aaa;\n```\n}//\u8fd9\u4e2a\u662f\u7528\u6765\u6c42\u70b9\u5230\u8fb9\u754c\u7684\u6700\u5c0f\u503c\u7684\n```cpp\nvoid check()\n{\n    sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        sum+=r[i]*r[i]*pi;    \n    }\n    maxl=max(maxl,sum);\n```\n}//\u6c42\u6700\u5927\u7684\u9762\u79ef\n```cpp\nvoid dfs(int step)\n{\n    if(step>n)\n    {\n        check();\n        return ;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(vis[i]==0)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                if(vis[j]!=0&&i!=j)\n                { \n                    if(data[i][j]<r[j]) \n                    {\n//\u8fd9\u91cc\u4e00\u76f4\u9519\uff0c\u56e0\u4e3a\u5982\u679c\u4e0a\u4e2a\u70b9\u534a\u5f84\u592a\u5927\uff0c\u4f1a\u8986\u76d6\u8fd9\u4e2a\u70b9\uff0c\u8981\u7279\u5224\u4e00\u4e0b\n                        r[i]=0;\n                        break;\n                    }\n                    else\n                    r[i]=min(r[i],data[i][j]-r[j]);\n                    //\u8fd9\u91cc\u7684\u8bdd\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u591a\u4e2a\u70b9\uff0c\u6709\u7684\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684 \n                    //\u8ddd\u79bb\u5c0f\u4f46\u534a\u5f84\u5927\uff0c\u6240\u4ee5\u90fd\u8981\u6bd4\u8f83\u4e00\u4e0b \n                }\n            }\n            if(step<=n)\n            {\n                vis[i]=1;\n                dfs(step+1);\n                vis[i]=0;\n                r[i]=d[i];\n            }\n        }\n    }\n    return ;\n}\nint main()\n{\n    cin>>n;\n    cin>>z>>m>>s>>t;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>x[i]>>y[i];\n        int a=abs(x[i]-z),b=abs(y[i]-m),c=abs(x[i]-s),dd=abs(y[i]-t);\n        d[i]=bi(a,b,c,dd);\n    }\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n    {\n        if(i==j)\n        data[i][j]=0;\n        else\n        data[i][j]=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n    }\n    for(int i=1;i<=n;i++)\n    {\n        r[i]=d[i];\n```\n}//\u53ef\u4ee5\u548c\u4e0a\u9762\u5408\u5728\u4e00\u8d77 \u6211\u61d2\u5f97\u6539\u4e86...\n```cpp\n    dfs(1);\n    int S=(abs(z-s)*abs(m-t));\n    cout<<(int)(S-maxl+0.5);//\u7ec6\u8282\u95ee\u9898\u76f8\u4fe1\u5927\u5bb6\u90fd\u61c2\u5427 \n    return 0;\n}\n```",
        "postTime": 1510191999,
        "uid": 39949,
        "name": "SCD_Wiasin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u76ee\u51e0\u4e4e\u53ef\u4ee5\u7b97\u4f5c\u662f\u7206\u641c\u7684\u88f8\u9898\u4e86\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u96be\u5ea6\u53ea\u6709\u5728\u9ec4\u9898\u5de6\u53f3\n### \u5927\u4f53\u601d\u8def\u5c31\u662f\u679a\u4e3e\u6240\u6709\u70b9\u7684\u987a\u5e8f\uff0c\u9009\u62e9\u6700\u5927\u7684\u4e00\u79cd\n### \u9274\u4e8e\u6269\u5c55\u6bcf\u4e2a\u6cb9\u6ef4\u7684\u5224\u65ad\u9700\u8981\u8017\u8d39\u4e00\u5b9a\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u5728\u679a\u4e3e\u70b9\u7684\u987a\u5e8f\u7684\u65f6\u5019\u5c31\u5e94\u8be5\u8fdb\u884c\u6269\u5c55\u6cb9\u6ef4\u800c\u4e0d\u662f\u5728\u679a\u4e3e\u51fa\u6392\u5217\u7684\u65f6\u5019\u4e00\u8d77\u6269\u5c55\uff0c\u540e\u8005\u8f83\u524d\u8005\u800c\u8a00\u6709\u66f4\u52a0\u591a\u7684\u91cd\u590d\u8ba1\u7b97\u6b21\u6570\n### \u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u03c0\u7684\u53d6\u503c\uff0c\u6211\u539f\u672c\u4ee5\u4e3a\u65e2\u7136\u662f\u4fdd\u7559\u6574\u6570\uff0c\u53c8\u6d89\u53car * r,\u5e94\u8be5\u53ea\u9700\u8981\u53d6\u4e24\u4f4d\u5c0f\u6570(3.14)\u4ee5\u4e0a\u5c31\u591f\u4e86\uff0c\u6ca1\u60f3\u5230\u03c0\u7684\u503c\u53d63.1415\u53ea\u80fd\u62ff\u523040\u5206\uff0c\u53d63.14159\u53ea\u80fd\u62ff\u523070\u5206\uff0c\u53ea\u6709\u53d6\u52303.141592\u7684\u65f6\u5019\u624d\u80fd\u62ff\u5230\u5168\u5206\u3002\u8fd9\u70b9\u5f88\u5bb9\u6613\u6d6a\u8d39\u5927\u91cf\u7684\u65f6\u95f4\uff0c\u8bf7\u6ce8\u610f\u3002\n### \u81f3\u4e8e\u6269\u5c55\uff0c\u5176\u5b9e\u53ea\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u8fb9\u754c\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u518d\u5224\u65ad\u662f\u5426\u5c0f\u4e8e\u5230\u5176\u4ed6\u5df2\u7ecf\u88ab\u6269\u5c55\u7684\u5706\u7684\u8ddd\u79bb\u5373\u53ef\u3002\n### \u7531\u4e8e\u9700\u8981\u6c42\u6240\u6709\u7684\u987a\u5e8f\u7684\u6700\u5927\u503c\uff0c\u6545\u672c\u9898\u5927\u6982\u6ca1\u6709\u4ec0\u4e48\u526a\u679d\u3002\n### \u6700\u540e\u9644\u4e0a\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nconst double pi = 3.141592;\nconst int size = 10;\ndouble dis[size][size], x[size], y[size], r[size], side[size], ans, x1, x2, yi, y2;\nint vis[size];\n\nvoid work(int n) {\n    double add = 0;\n    for(int i = 0; i < n; i++) add += r[i] * r[i];\n    ans = max(ans, pi*add);\n}\n\nvoid ext(int p, int n) {\n    double rt = side[p];\n    for(int i = 0; i < n; i++)\n        if(p != i && vis[i])\n            rt = min(rt, max(dis[i][p]-r[i], 0.0));\n    r[p] = rt;\n}\n\nvoid dfs(int cur, int n) {\n    if(cur == n) {\n        work(n);\n        return;\n    }\n    for(int i = 0; i < n; i++)\n        if(!vis[i]) {\n            vis[i] = 1;\n            ext(i, n);\n            dfs(cur+1, n);\n            r[i] = 0;\n            vis[i] = 0;\n        }\n}\n\nvoid init(int n) {\n    ans = 0;\n    for(int i = 0; i < n; i++)\n        for(int j = 0; j < n; j++)\n            if(i == j) dis[i][j] = 0;\n            else if(i < j){\n                double dx = x[i] - x[j], dy = y[i] - y[j];\n                dis[i][j] = sqrt(dx * dx + dy * dy);\n            } else {\n                dis[i][j] = dis[j][i];\n            }\n    for(int i = 0; i < n; i++) {\n        side[i] = min(x[i]-x1, x2-x[i]);\n        side[i] = min(side[i], y[i]-yi);\n        side[i] = min(side[i], y2-y[i]);\n    }\n}\n\nint main() {\n    int n, a, b, c, d;\n    memset(vis, 0, sizeof(vis));\n    scanf(\"%d %d %d %d %d\", &n, &a, &b, &c, &d);\n    x1 = min(a, c), x2 = max(a, c), yi = min(b, d), y2 = max(b, d);\n    for(int i = 0; i < n; i++) scanf(\"%lf %lf\", x+i, y+i);\n    init(n);\n    dfs(0, n);\n    printf(\"%.0f\\n\", round((x2-x1)*(y2-yi)-ans));\n    return 0;\n}\n```",
        "postTime": 1544867718,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u770b\u4e86\u9898\uff0c\u7b2c\u4e00\u4e2a\u60f3\u5230\u7684\u65b9\u6cd5\u5c31\u662f\u641c\u7d22\uff0c\u7136\u540e\u770b\u770b$N$\uff0c\u53ea\u67096\uff0c\u90a3\u5c31\u59a5\u59a5\u7684$N!$\u66b4\u529b\u78be\u8fc7\u4e86\u3002\n\n\u641c\u7d22\u90e8\u5206\u5c31\u4e0d\u8bb2\u4e86\uff0c\u76f4\u63a5\u641c\u653e\u6cb9\u6ef4\u7684\u987a\u5e8f\u5373\u53ef\u3002  \n\u7136\u540e\u5c31\u662f\u8ba1\u7b97\u7b54\u6848\uff0c\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u53d6\u4e0e\u77e9\u5f62\u56db\u8fb9\u548c\u5176\u4ed6\u6cb9\u6ef4\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u4e0e\u6cb9\u6ef4\u8ddd\u79bb\u5e94\u4e3a\u4e24\u5706\u5fc3\u8ddd\u79bb\u51cf\u53bb\u5df2\u653e\u6cb9\u6ef4\u7684\u534a\u5f84\u3002  \n\u57511\uff0c\u672a\u8bf4\u660e\u7ed9\u51fa\u77e9\u5f62\u9876\u70b9\u4e3a\u5de6\u4e0a\u548c\u53f3\u4e0b\uff0c\u53ef\u80fd\u51fa\u9505\u3002  \n\u57512\uff0c\u5982\u679c\u5f53\u524d\u653e\u6cb9\u6ef4\u7684\u4f4d\u7f6e\u5df2\u7ecf\u88ab\u67d0\u4e2a\u6cb9\u6ef4\u8986\u76d6\uff0c\u90a3\u4e48\u8981\u5c06\u8fd9\u4e2a\u6cb9\u6ef4\u7684\u534a\u5f84\u8bbe\u4e3a0\uff0c\u5426\u5219\u76f4\u63a5\u8ba1\u7b97\u65f6\u4f1a\u51fa\u73b0\u534a\u5f84\u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = 3.14159265358979323846;//\u03c0\u8bbe\u7cbe\u786e\u4e00\u70b9\u603b\u6ca1\u6709\u574f\u5904\nint n;\ndouble ux, uy, vx, vy, px[10], py[10], ans;\n//\u524d\u56db\u4e3a\u77e9\u5f62\u4e24\u70b9\u5750\u6807\uff0cpx[],py[]\u8868\u793a\u70b9\u4f4d\u7f6e\n//ans\u4e3a\u6700\u5927\u6cb9\u6ef4\u9762\u79ef\nint id[10], used[10];\n//\u6cb9\u6ef4\u653e\u7f6e\u987a\u5e8f\uff0c\u662f\u5426\u679a\u4e3e\u8fc7\ndouble tr[10];\n//\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u6bcf\u4e2a\u6cb9\u6ef4\u7684\u534a\u5f84\ndouble sq_dis(int k) {\n    return min(min(fabs(px[k] - ux), fabs(px[k] - vx)), \n           min(fabs(py[k] - uy), fabs(py[k] - vy)));\n}//\u67d0\u70b9\u8ddd\u79bb\u77e9\u5f62\u8fb9\u754c\u7684\u8ddd\u79bb\ndouble pdis(int k1, int k2) {\n    return sqrt((px[k1] - px[k2]) * (px[k1] - px[k2]) + \n                (py[k1] - py[k2]) * (py[k1] - py[k2]));\n}//\u4e24\u70b9\u8ddd\u79bb\nvoid f() {//\u8ba1\u7b97\u5f53\u524d\u653e\u7f6e\u987a\u5e8f\u7684\u7ed3\u679c\n    //\u8fd9\u91cc\u6ce8\u610f\u4e00\u70b9\uff0ctr\u6570\u7ec4\u4f7f\u7528\u65f6\u4e0b\u6807\u4e3aid[x]\n    memset(tr, 0, sizeof(tr));\n    double ret = 0, nr = 0;\n    //\u603b\u9762\u79ef\uff08\u975e\u5269\u4f59\u90e8\u5206\u9762\u79ef\uff09\n    for (int i = 1; i <= n; ++i) {\n        nr = sq_dis(id[i]);//\u534a\u5f84\u521d\u59cb\u5316\u4e3a\u5230\u8fb9\u754c\u7684\u8ddd\u79bb\n        for (int j = 1; j < i; ++j) {//\u5728\u5df2\u653e\u7f6e\u6cb9\u6ef4\u4e2d\u627e\u6700\u8fd1\u7684\n            nr = max(min(nr, pdis(id[i], id[j]) - tr[id[j]]), 0.0);\n        }\n        tr[id[i]] = nr;\n        ret += pi * nr * nr;\n        #ifdef DEBUG\n        cout << \"r = \" << nr << \" , V = \" << pi * nr * nr << \"\\t\";\n        #endif\n    }\n    ans = max(ans, ret);\n    #ifdef DEBUG\n    cout << \"Ans = \" << ans << endl;\n    #endif\n    return;\n}\nvoid dfs(int k) {//\u641c\u7d22\u90e8\u5206\uff0ck\u4e3a\u5f53\u524d\u679a\u4e3e\u7b2ck\u4e2a\u987a\u5e8f\n    if (k == n + 1) {\n        #ifdef DEBUG\n        cout << \"Order: \";\n        for (int i = 1; i <= n; ++i) {\n            cout << id[i] << \" \";\n        }\n        puts(\"\");\n        #endif\n        f();\n        return;\n    }\n    for (int i = 1; i <= n; ++i) {\n        if (!used[i]) {\n            used[i] = true;\n            id[k] = i;\n            dfs(k + 1);\n            used[i] = false;//\u8bb0\u5f97\u91cd\u7f6e\n            id[k] = 0;\n        }\n    }\n    return;\n}\nint main() {\n    cin >> n >> ux >> uy >> vx >> vy;\n    for (int i = 1; i <= n; ++i) {\n        cin >> px[i] >> py[i];\n    }\n    dfs(1);\n    cout << (int)(fabs(ux - vx) * fabs(uy - vy) - ans + 0.5) << endl;\n    //1,\u9898\u76ee\u8981\u6c42\u5269\u4f59\u90e8\u5206\u9762\u79ef\n    //2,\u8981\u56db\u820d\u4e94\u5165\u4e3a\u6574\u6570\n    return 0;\n} \n```\n",
        "postTime": 1543844226,
        "uid": 37539,
        "name": "_Qer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#define R register\nusing namespace std;\nconst double pi=3.141592;//\u8be5\u6b7b\u7684\u7cbe\u5ea6--\nint n,x,y,dx,dy,d[10][10];//d[i][1]\u662fx\uff0cd[i][2]\u662fy\nbool v[10];//\u8fd9\u4e2a\u70b9\u662f\u5426\u7528\u8fc7\ndouble res,ans=-1,r[10];//r[i]\u7b2ci\u4e2a\u5706\u7684\u534a\u5f84\ninline int ri(){\n\tchar c=getchar();int x=0,w=1;\n\twhile(!isdigit(c)){if(c=='-')w=-1;c=getchar();}\n\twhile( isdigit(c)){x=(x<<3)+(x<<1)+c-48,c=getchar();}\n\treturn x*w;\n}\ninline double die(int a,int b,int aa,int bb){\n\treturn sqrt(pow((a-aa),2)+pow((b-bb),2));\n}//\u52fe\u80a1\u5927\u6cd5\ninline double qbj(int jx){\n\tfor(R int i=1;i<=n;i++)\n\t\tif(i!=jx&&v[i])//\u4e0d\u662f\u672c\u8eab\u70b9\u4e14\u6c42\u8fc7\u5b83\u7684\u534a\u5f84\n\t\t\tif(r[i]>die(d[i][1],d[i][2],d[jx][1],d[jx][2]))return 0;//\u534a\u5f84\u5927\u4e8e\u4e24\u70b9\u8ddd\u79bb\u5373\u70b9\u5728\u522b\u4eba\u7684\u5706\uff0c\u534a\u5f84\u4e3a0\u54af\n\tdouble ans=min(min(abs(d[jx][1]-x),abs(d[jx][1]-dx)),min(abs(d[jx][2]-y),abs(d[jx][2]-dy)));//\u627e\u4e0e\u8fb9\u6846\u6700\u8fd1\u7684\u8ddd\u79bb\u4e3a\u521d\u59cb\u534a\u5f84\n\tfor(R int i=1;i<=n;i++)\n\t\tif(i!=jx&&v[i])\n\t\t\tans=min(ans,die(d[i][1],d[i][2],d[jx][1],d[jx][2])-r[i]);//\u534a\u5f84\u4e0d\u80fd\u4f38\u5230\u522b\u4eba\u7684\u5706\u91cc\u554a--\u6240\u4ee5\u51cf\u6389\u522b\u4eba\u7684\u534a\u5f84 \u6709\u6ca1\u6709\u4f38\u5230\uff1f\u5224\u4e2amin\n\treturn ans;\n}\n\ninline void dfs(int k,double res){//\u641c\u4e86\u51e0\u4e2a\u5706\uff0c\u5360\u4e86\u591a\u5c11\u9762\u79ef\u54af\n\tif(k==n){ans=max(ans,res); return ;}//\u8bb0\u8f7d\u5404\u79cd\u60c5\u51b5\u7684\u6700\u5927\u9762\u79ef\n\tfor(R int i=1;i<=n;i++){\n\t\tif(!v[i]){//\u6ca1\u7528\u8fc7\u5c31dfs\u5b83\n            r[i]=qbj(i);v[i]=1;\n            dfs(k+1,res+pi*r[i]*r[i]);\n            v[i]=0;r[i]=0;//\u53d6\u6d88\u6807\u8bb0\u7ed9\u4e0b\u4e00\u6b21dfs\n\t\t}\n\t}\t\n}\nint main(){\n\tn=ri();x=ri();y=ri();dx=ri();dy=ri();\n\tint s=abs(dx-x)*abs(dy-y);\n\tfor(R int i=1;i<=n;i++)d[i][1]=ri(),d[i][2]=ri();\n\tdfs(0,0);\n\tcout<<int(s-ans+0.5);//\u56db\u820d\u4e94\u5165\n\treturn 0;\n}\n```",
        "postTime": 1542603358,
        "uid": 70207,
        "name": "\u665a\u5b89\u81ea\u5df1\u8bf4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6ca1\u6709\u4ec0\u4e48\u6280\u5de7\u6027\u7684\u6df1\u641c\u526a\u679d\uff0c\u53ea\u6709\u4e00\u4e9b\u96f6\u788e\u7684\u6ce8\u610f\u70b9:\n1. \u6cb9\u6ef4\u4e0d\u80fd\u76f8\u878d\uff0c\u5373\u4e00\u4e2a\u6cb9\u6ef4\u78b0\u5230\u53e6\u4e00\u4e2a\u540e\u5c31\u505c\u6b62\u6269\u5c55\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8981\u7206\u641c\u7684\u539f\u56e0\uff09\uff0c\u6240\u4ee5\uff1a\n\t1. \u534a\u5f84\u5728\u6bcf\u6b21\u6df1\u641c\u65f6\u90fd\u4f1a\u6539\u53d8\uff0c\u6bcf\u6b21\u90fd\u8981\u66f4\u65b0\u3002\n    1. \u53ea\u80fd\u7206\u641c\u6b21\u6570\uff0c\u6bcf\u6b211~n\u90fd\u8981\u641c\uff0c\u4e0d\u80fd\u53ea\u7206\u641c\u6bcf\u4e2a\u70b9\u53d6\u4e0d\u53d6\u3002\n    \n1. \u5982\u679c\u5df2\u7ecf\u6709\u6cb9\u6ef4y\u5305\u542b\u4e86\u5f53\u524d\u6cb9\u6ef4x\uff0c\u5c31\u4e0d\u80fd\u653e\uff0c\u5373\u628a\u534a\u5f84\u8bbe\u4e3a0\u800c\u4e0d\u662fdis(x,y)-r[y]\u3002\n1. \u5750\u6807\u4f1a\u6709\u8d1f\u6570\uff08P\u515a\u968f\u610f\uff09\uff0c\u6240\u4ee5\u8981\u7edf\u4e00\u628a\u6240\u6709\u5750\u6807\u90fd+1000\n1. \u6700\u540e\u8981\u56db\u820d\u4e94\u5165\uff0c\u4e0d\u8981\u4e71\u641e\uff0c\u89c4\u89c4\u77e9\u77e9\u5730\u6309\u56db\u820d\u4e94\u5165\u7684\u539f\u7406\u6765\u3002\n\n\u7531\u6b64\uff0c\u6211\u5c31\u5149\u8363\u5730WA\u4e86\u4e24\u6b21\u3002\u3002\u3002\u3002\u3002\n\nCODE\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\nusing namespace std;\nconst double pai=3.1415926535;\nint n,sum,id[12];\ndouble mn,r[12],x1,x2,y3,y2,x[12],y[12],lim,p[12];//\u6ce8\u610f\u53d8\u91cf\u7c7b\u578b\nbool b[12];\ninline double calc(int a,int b)\n{\n\tdouble s1=x[a]-x[b],s2=y[a]-y[b];\n\treturn sqrt(s1*s1+s2*s2);\n}\ninline void dfs(int now,double s)\n{\n\tif (now>n)\n\t{\n\t\tmn=min(mn,lim-s);\n\t\treturn;\n\t}\n\tbool flag=1;\n\tfor (int t=1; t<=n; t++)//\u6ce8\u610f\u70b91.2\n\tif (!b[t])//\u4e0d\u8981\u91cd\u590d\u653e\u6cb9\u6ef4\n\t{\n      //**//\n\t\tr[t]=min(min(min(x[t]-x1,x2-x[t]),y[t]-y3),y2-y[t]);\n        //\u539f\u6765\u7684\u6700\u5927\u534a\u5f84\n\t\tfor (int i=1; i<=n; i++)\n\t\tif (i!=t&&b[i])\n\t\tr[t]=min(r[t],max(calc(i,t)-r[i],0.0));\n        //\u4e0e\u5df2\u7ecf\u653e\u7684\u6cb9\u6ef4\u6bd4\u8f83;\u6ce8\u610f\u70b92\n      //**//\u6ce8\u610f\u70b91.1\n\t\tb[t]=1;\n\t\tdfs(now+1,s+r[t]*r[t]*pai);\n\t\tb[t]=0;\n\t}\n}\nint main()\n{\n\tmn=1000000012.12;\n\tscanf(\"%d\",&n);\n\tcin>>x1>>y3>>x2>>y2;\n\tx1+=1000.0;y3+=1000.0;x2+=1000.0;y2+=1000.0;//\u6ce8\u610f\u70b93\n\tif (x1>x2) swap(x1,x2);\n\tif (y3>y2) swap(y3,y2);\n\tlim=(x2-x1)*(y2-y3);//\u603b\u9762\u79ef\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tcin>>x[i]>>y[i];\n\t\tx[i]+=1000.0;y[i]+=1000.0;\n\t}\n\tdfs(1,0.0);\n\treturn printf(\"%.0f\\n\",floor(mn+0.5)),0;//\u6ce8\u610f\u70b94\n}\n```",
        "postTime": 1541237140,
        "uid": 43103,
        "name": "Tanktt",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u4e00\u9053\u9762\u5411\u8fc7\u7a0b\u7684\u641c\u7d22\u9898\n\n\u5982\u679c\u91c7\u7528\u6a21\u5757\u5316\u7684\u601d\u60f3\u8fd9\u9053\u9898\u4f1a\u5f88\u597d\u5199\u3002\n\n\u5148\u7528dfs\u6c42\u51fa\u5168\u6392\u5217\uff0c\n\n\u7136\u540e\u6211\u4eec\u5199\u4e00\u4e2aplace\u51fd\u6570\uff0c\u5904\u7406\u6240\u6709\u7684\u62d3\u5c55\u6cb9\u6ef4\u60c5\u51b5\u5373\u53ef\n\n\u8fd9\u6837\u80fd\u591f\u907f\u514d\u5934\u6655\u4ee5\u53ca\u4e0d\u5fc5\u8981\u7684\u8c03\u8bd5\u3002\n\n```cpp\n#include<stdio.h>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint control[6];bool book[6];//\u5b58\u50a8\u5168\u6392\u5217\nint n;double res;\ndouble d[6][6];\nstruct circle\n{\n    int x;int y;double r;\n}c[6];\nint x3;int y3;int x2;int y2;\ndouble place(int p)//\u62d3\u5c55\u6cb9\u6ef4\u51fd\u6570\n{\n    double minp=0x3f3f3f3f;double\n    t=abs(x3-c[p].x);minp=min(minp,t);//printf(\"minpis%.4f\\n\",minp);\n    t=abs(x2-c[p].x);minp=min(minp,t);//printf(\"minpis%.4f\\n\",minp);\n    t=abs(y3-c[p].y);minp=min(minp,t);//printf(\"minpis%.4f\\n\",minp);\n    t=abs(y2-c[p].y);minp=min(minp,t);//printf(\"minpis%.4f\\n\",minp);//\u66f4\u65b0\u56db\u8fb9\u8ddd\u79bb\n    for(int i=0;i<n;i++)\n    {\n        if(i==p)continue;//\u4e0d\u80fd\u8ba1\u7b97\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\n        if(c[i].r>-0.000001&&c[i].r<0.000001)//\u5982\u679c\u76ee\u6807\u70b9\u534a\u5f84\u4e3a0\u5373\u8df3\u8fc7\n        continue;\n        t=d[p][i]-c[i].r;\n        if(t<0.00001)return 0;//\u5982\u679c\u5728\u6cb9\u6ef4\u5185\u90e8\u65e0\u6cd5\u62d3\u5c55\n        minp=min(minp,t);//printf(\"minpis%.4f\\n\",minp);    \n    }\n    c[p].r=minp;\n    return minp*minp;//return\u7684\u662fr^2\u6700\u540e\u518d\u4e58\u03c0\n}\nvoid clear()//\u6e05\u7a7a\u534a\u5f84\n{\n    for(int i=0;i<n;i++)\n    {\n        c[i].r=0;\n    }return;\n}\nvoid dfs(int x)//\u6c42\u5168\u6392\u5217\n{\n    if(x==n)\n    {\n        double rep=0;\n        for(int i=0;i<n;i++)//\u6309\u6392\u5217\u987a\u5e8f\u653e\u7f6e\u6cb9\u6ef4\n        {\n            rep+=place(control[i]);\n        }\n        if(res<rep)res=rep;\n        clear();//\u8bb0\u5f97\u6e05\u7a7a\u534a\u5f84\n        return;\n    }\n    else//\u5168\u6392\u5217\u6a21\u677f\n    {\n        for(int i=0;i<n;i++)\n        {\n            if(!book[i])\n            {\n                book[i]=true;\n                control[x]=i;\n                dfs(x+1);\n                book[i]=false;\n            }\n        }\n    }\n    return ;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%d%d%d%d\",&x3,&y3,&x2,&y2);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&c[i].x,&c[i].y);\n    }\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<i;j++)\n        {\n            d[j][i]=d[i][j]=\n            sqrt((c[i].x-c[j].x)*(c[i].x-c[j].x)+(c[i].y-c[j].y)*(c[i].y-c[j].y));\n            //printf(\"d[%d][%d]is%f\\n\",i,j,d[i][j]);\n                        //\u8ba1\u7b97\u4efb\u610f\u4e24\u70b9\u8ddd\u79bb\n        }\n    }\n    dfs(0);//dfs\n    res*=3.1415926;//\u7531\u4e8eres\u662f\u03a3ri^2\u6240\u4ee5\u8981\u4e58\u03c0\n    res=abs(x3-x2)*abs(y3-y2)-res+0.5;//\u51cf\u603b\u9762\u79ef\uff0c\u56db\u820d\u4e94\u5165\n    int ans=res;\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1507625358,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "Chapter1:  \u7ecf\u8fc7\u4ed4\u7ec6\u8bfb\u9898\uff0c\u53ef\u4ee5\u53d1\u73b0\u9898\u76ee\u53ea\u7ed9\u65b9\u5f62\u5bf9\u89d2\u7ebf\u5750\u6807\uff0c\u6211\u60f3\uff1a\u65b9\u5f62\u5bf9\u89d2\u7ebf\u5750\u6807\u548c\u6cb9\u6ef4\u5750\u6807\u90fd\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u975e\u5e38\u4e0d\u5229\u4e8e\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5c06\u65b9\u5f62\u5e73\u79fb\u5230\u4e0ex\u6b63\u534a\u8f74\u548cy\u6b63\u534a\u8f74\u91cd\u5408\uff0c\u6cb9\u6ef4\u540c\u65f6\u5e73\u79fb\u76f8\u540c\u7684\u5355\u4f4d\u957f\u5ea6\uff0c\u5373x[0~n]-=\u65b9\u5f62\u5de6\u4e0b\u89d2\u70b9\u7684x\uff0cy[0~n]-=\u65b9\u5f62\u5de6\u4e0b\u89d2\u70b9\u7684y\uff1b\u82e5\u60f3\u6c42\u5f97\u5230\u65b9\u5f62\u5de6\u4e0b\u89d2\u5750\u6807\u8fd9\u53ea\u80fd\u7279\u5224\u4e24\u4e2a\u5bf9\u89d2\u7ebf\u70b9\u7684\u5173\u7cfb\uff0c\u6bd4\u5982x1>x2,y1>y2,\u5c31\u662f\u70b91\u5728\u70b92\u7684\u5de6\u4e0b\u89d2\u3002\n\nChapter2:  \u5bf9\u4e8e\u63d0\u8bae--\u201c\u5c3d\u53ef\u80fd\u7684\u7559\u4e0b\u5c11\u7684\u7a7a\u95f4\u201d\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4f7f\u6240\u6709\u6cb9\u6ef4\u7684\u9762\u79ef\u603b\u548c\u6700\u5927\uff0c\u53ef\u4ee5\u4f7f\u7528\u5168\u6392\u5217\u6765\u679a\u4e3e\u653e\u6cb9\u6ef4\u7684\u987a\u5e8f\u3002\n\nChapter3:  \u5bf9\u4e8e\u5f53\u524d\u653e\u7f6e\u6cb9\u6ef4\u7684r\u7684\u6700\u5927\u503c\u53ef\u4ee5\u8bc1\u660e\u5f97\uff1a(len=\u77e9\u5f62\u957f\uff0chig=\u77e9\u5f62\u9ad8)r=MIN\uff08x\uff0cy\uff0clen-x,hig-y,\u5f53\u524d\u6cb9\u6ef4\u5230\u6240\u6709\u5df2\u7ecf\u6269\u5c55\u7684\u6cb9\u6ef4\u7684\u8ddd\u79bb-\u5df2\u7ecf\u6269\u5c55\u7684\u6cb9\u6ef4\u7684r\uff09\n\n\u7efc\u4e0a\u6240\u8ff0\u5f97\u51fa\u7ed3\u8bba\uff1a\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\n#include<stdio.h>\n#include<math.h>\nint N;\ndouble x[10],y[10],best=-1,r[10],x11,x22,y11,y22,len,hig,dx,dy;\ndouble min(double a,double b){\n    if(a>b) return b;\n        else return a;\n}\nint updata(int ss[]){\n    int i;\n    double s=0;\n    for(i=0;i<N;i++){\n        s+=r[i]*r[i]*M_PI;\n    }\n    if(best<s){\n        best=s;\n    }\n    return 0;\n}\nint swp(int *a,int *b){\n    int tmp;\n    tmp=*a;\n    *a=*b;\n    *b=tmp;\n}\nint init(){\n    int tmp,i;\n    if(x11<x22&&y11>y22){\n        dx=x11;\n        dy=y22;\n    }\n    if(x11>x22&&y11<y22){\n        dx=x22;\n        dy=y11;\n    }\n    if(x11>x22&&y11>y22){\n        dx=x22;\n        dy=y22;\n    }\n    if(x11<x22&&y11<y22){\n        dx=x11;\n        dy=y11;\n    }\n    len=fabs(x11-x22);\n    hig=fabs(y11-y22);\n    for(i=0;i<N;i++){\n        x[i]-=dx;\n        y[i]-=dy;\n    }\n}\nint run(int s[]){\n    double R=999999999;\n    int j,i;\n    for(i=0;i<N;i++){//\u8ba1\u7b97r\n        R=min(R,x[s[i]]);\n        R=min(R,y[s[i]]);\n        R=min(R,len-x[s[i]]);\n        R=min(R,hig-y[s[i]]);\n        for(j=0;j<N;j++)\n            if(r[j]!=-1&&s[i]!=j)\n                R=min(R,sqrt((x[s[i]]-x[j])*(x[s[i]]-x[j])+(y[s[i]]-y[j])*(y[s[i]]-y[j]))-r[j]);\n        if(R>=0){\n            r[s[i]]=R;\n        }\n        else r[s[i]]=0;\n    }\n    R=99999999;\n}\nint dfs(int beg,int end,int s[]){\n    int i;\n    if(beg==end){\n        for(i=0;i<N;i++){\n            r[i]=-1;\n        }\n        run(s);\n        updata(s);\n        return 0;\n    }\n    for(i=0;i<=end;i++){//\u5168\u6392\n        swp(&s[beg],&s[i]);\n        dfs(beg+1,end,s);\n        swp(&s[beg],&s[i]);\n    }\n}\nint main(){\n    int i,aa[10]={0,1,2,3,4,5,6,7,8,9};\n    scanf(\"%d\",&N);\n    scanf(\"%lf%lf%lf%lf\",&x11,&y11,&x22,&y22);\n    for(i=0;i<N;i++)\n        scanf(\"%lf%lf\",&x[i],&y[i]);\n    init();\n    dfs(0,N-1,aa);\n    best=len*hig-best;\n    printf(\"%.0lf\\n\",best);\n    return 0;\n}\n\n```\uff08c/c++\uff09\n",
        "postTime": 1459009680,
        "uid": 8296,
        "name": "March",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u9996\u5148\u7406\u89e3\u9898\u610f\uff1a\n\n\u6cb9\u6ef4\u6700\u591a\u6269\u5c55\u5230\uff1a\n\n1.\u5230\u957f\u65b9\u5f62\u8fb9\u754c\u3002\n\n2.\u6216\u8005\u78b0\u5230\u5176\u4ed6\u6cb9\u6ef4\u3002\uff08\u6ce8\u610f\uff1a\u6b64\u65f6\u7684\u8ba1\u7b97\u9700\u8981\u6c42\u4e24\u5706\u5fc3\u7684\u8ddd\u79bb-\u90a3\u4e2a\u5706\u7684\u534a\u5f84\uff09\n\n\n\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1.\u5982\u679c\u8be5\u6cb9\u6ef4\u5df2\u7ecf\u5904\u4e8e \u88ab\u8986\u76d6\u7684\u533a\u57df\u3002\u5219\u8be5\u6cb9\u6ef4\u7684\u534a\u5f84\u5e94\u89c6\u4e3a0 \u907f\u514d\u91cd\u590d\u8ba1\u7b97\u3002\n\n2.\u6700\u540e\u628adouble\u578b\u6570\u636e\u5f3a\u5236\u8f6c\u5316\u4e3aint\u65f6\uff0c \u5e94\u5148\u52a0\u4e0a0.5\u518d\u5f3a\u5236\u8f6c\u6362\uff0c\u8fd9\u6837\u624d\u662f\u56db\u820d\u4e94\u5165\u3002\n\n\n\uff08\u8fd8\u6709\uff0c\u6b64\u9898\u5176\u5b9e\u4e0d\u5fc5\u6784\u5efa\u4e8c\u7ef4\u6570\u7ec4\u6765 \u586b 0 1\u4ee5\u5f62\u6210\u5730\u56fe\u3002\u76f4\u63a5\u6c42\u6cb9\u6ef4\u6240\u5728\u4f4d\u7f6e\u8ddd\u79bb\u8fb9\u6846 \u548c \u5176\u4ed6\u5706\u5fc3\u7684\u8ddd\u79bb\u51cf\u534a\u5f84\u7684 \u6700\u5c0f\u503c\u4f5c\u4e3a\u534a\u5f84\u5373\u53ef\u3002\uff09\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n    \n        \n    \n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst double pi=3.141592653589793238462643383279502;\nconst double _MAX=99999999.0;\nconst int maxn=6+5;\nint n,x[maxn],y[maxn],tx1,ty1,tx2,ty2;\ndouble ans,maxAns=0.0,square,R[maxn],used[maxn]; //x\u4e3ai y\u4e3aj\ndouble getR(int d)\n{\n    double len=_MAX;\n    for(int i=1;i<=n;i++)if(R[i])\n        len=min(len,sqrt(abs(x[i]-x[d])*abs(x[i]-x[d])+abs(y[i]-y[d])*abs(y[i]-y[d])) - R[i]);\n    len=min(len,(double)min(abs(x[d]-tx1),min(abs(x[d]-tx2),min(abs(y[d]-ty1),abs(y[d]-ty2)))));\n    if(len<0)    return 0.0; //\u5982\u679c\u8be5\u6cb9\u6ef4\u5df2\u7ecf\u5904\u4e8e \u88ab\u8986\u76d6\u7684\u533a\u57df\u3002\u5219\u8fd4\u56de0 \u907f\u514d\u91cd\u590d\u8ba1\u7b97 \n    return len;\n} \nvoid dfs(int pos)\n{\n    if(pos>n){maxAns=max(maxAns,ans);return;} \n    for(int i=1;i<=n;i++)if(!used[i])\n    {\n        double r=getR(i);\n        used[i]=1;\n        R[i]=r;\n        ans+=(pi*r*r);\n        dfs(pos+1);\n        R[i]=0.0;\n        used[i]=0;\n        ans-=(pi*r*r);\n    }\n}\nint main()\n{\n    freopen(\"s.in\",\"r\",stdin);\n    freopen(\"s.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    scanf(\"%d%d%d%d\",&tx1,&ty1,&tx2,&ty2);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&x[i],&y[i]);\n    dfs(1);\n    square=(double) abs(tx1-tx2)*abs(ty1-ty2);\n    square-=maxAns;\n    square+=0.5;//+0.5\u662f\u4e3a\u4e86\u56db\u820d\u4e94\u5165 \n    printf(\"%d\",(int)square);\n    return 0;\n}\n```",
        "postTime": 1445422606,
        "uid": 8973,
        "name": "iYuer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "# \u66b4\u529b\n#### \u4e3b\u8981\u601d\u60f3\u662f\u5728dfs\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u4ee5\u4e0b\u51e0\u4e2a\u503c\n- \u5df2\u7ecf\u653e\u7f6e\u7684\u6cb9\u6ef4\u7684\u5706\u5fc3\u4f4d\u7f6e\u548c\u6269\u6563\u534a\u5f84\n- \u5f53\u524d\u6846\u5b50\u91cc\u5df2\u88ab\u5360\u636e\u7684\u4f53\u79ef\n###### \n\n------------\n\u90a3\u4e48dfs\u51fd\u6570\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u4e86\ndfs\uff08k,ret\uff09\u8868\u793a\u5f53\u524d\u6b63\u5728\u5e03\u7f6e\u7b2ck\u4e2a\u6cb9\u6ef4\uff0c\u6846\u5b50\u91cc\u5df2\u7ecf\u5360\u636e\u4e86ret\u7684\u9762\u79ef\n\ndfs\u65f6\u7528\u957f\u65b9\u5f62\u6846\u5b50\u7684\u56db\u6761\u8fb9\u548c\u4e4b\u524d\u5176\u4ed6\u7684\u6cb9\u6ef4\u7684\u4f4d\u7f6e\u6765\u627e\u5230\u6700\u5927\u7684\u6269\u6563\u534a\u5f84\u6df1\u641c\u5373\u53ef\n\n\u5e76\u4e14\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6cb9\u6ef4\u4f7f\u5f97\u6b64\u65f6\u653e\u7f6e\u7684\u6cb9\u6ef4\u5706\u5fc3\u4e0e\u8be5\u6cb9\u6ef4\u5706\u5fc3\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e\u8be5\u6cb9\u6ef4\u6269\u6563\u534a\u5f84\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u6b64\u65f6\u653e\u7f6e\u7684\u6cb9\u6ef4\u4f4d\u7f6e\u5df2\u88ab\u8986\u76d6\n\n\u6700\u540e\u8f93\u51fa\u7b54\u6848\u4f7f\u7528round\u51fd\u6570\u53d6\u56db\u820d\u4e94\u5165\u503c\n\n\u4e00\u4e9b\u5176\u4ed6\u7684\u5c0f\u7ec6\u8282\u90fd\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\n# AC\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\ndouble pi=3.1415926535897932;\nint n;\ndouble xa,xb,ya,yb,ans,S;\nbool vst[7];\nstruct p\n{\n\tdouble x,y;\n}poi[7];//\u5b58\u50a8\u6cb9\u6ef4\nstruct a\n{\n\tdouble posx,posy,r;\n}c[10];//\u5b58\u50a8\u5df2\u653e\u7f6e\u7684\u6cb9\u6ef4\u7684\u4f4d\u7f6e\u548c\u6269\u6563\u534a\u5f84\ninline double dis(double ax,double ay,double bx,double by)\n{\n\treturn sqrt(pow(ax-bx,2)+pow(ay-by,2));\n}\ninline double s(double rr)\n{\n\treturn pi*rr*rr;\n}\nvoid dfs(int k,double ret)\n{\n\tif(ret>S)\n\t\treturn;\n\tif(k>=n+1)//\u6b64\u65f6\u6cb9\u6ef4\u5df2\u7ecf\u653e\u5b8c\uff0c\u66f4\u65b0\u88ab\u8986\u76d6\u7684\u6700\u5927\u9762\u79ef\n\t{\n\t\tans=max(ans,ret);\n\t\treturn;\n\t}\n\telse\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tdouble minn=1<<30;\n\t\t\tif(!vst[i])//vst\u8868\u793a\u6cb9\u6ef4\u662f\u5426\u88ab\u653e\u7f6e\u8fc7\n\t\t\t{\n\t\t\t\tfor(int j=1;j<k;j++)//\u904d\u5386\u4e4b\u524d\u7684\u6cb9\u6ef4\n\t\t\t\t{\n\t\t\t\t\tdouble range=dis(c[j].posx,c[j].posy,poi[i].x,poi[i].y)-c[j].r;\n\t\t\t\t\tif(range>=0)//\u5f53\u524d\u6cb9\u6ef4\u4f4d\u7f6e\u4e0d\u5728\u5df2\u88ab\u8986\u76d6\u7684\u9762\u79ef\u4e0a\n\t\t\t\t\t\tminn=min(minn,range);\n\t\t\t\t\telse//\u5f53\u524d\u6cb9\u6ef4\u7684\u4f4d\u7f6e\u5df2\u88ab\u8986\u76d6\n\t\t\t\t\t\tminn=0;\n\t\t\t\t}\n\t\t\t\tminn=min(minn,xb-poi[i].x);\n\t\t\t\tminn=min(minn,poi[i].x-xa);\n\t\t\t\tminn=min(minn,yb-poi[i].y);\n\t\t\t\tminn=min(minn,poi[i].y-ya);//\u4e0d\u8981\u5fd8\u8bb0\u7528\u6846\u5b50\u7684\u56db\u6761\u8fb9\u66f4\u65b0\u6700\u5927\u6269\u6563\u534a\u5f84\n\t\t\t\tc[k].posx=poi[i].x;\n\t\t\t\tc[k].posy=poi[i].y;\n\t\t\t\tc[k].r=minn;\n\t\t\t\tvst[i]=true;\n\t\t\t\tdfs(k+1,ret+s(minn));\n\t\t\t\tvst[i]=false;\n\t\t\t\tc[k].posx=c[k].posy=c[k].r=0;\n\t\t\t}\n\t\t}\n}\nint main()\n{\n\tscanf(\"%d%lf%lf%lf%lf\",&n,&xa,&ya,&xb,&yb);\n\tif(xa>xb)//\u4f7fxb\u603b\u5927\u4e8exa\n\t\tswap(xa,xb);\n\tif(ya>yb)//\u540c\u7406\n\t\tswap(ya,yb);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lf%lf\",&poi[i].x,&poi[i].y);\n\tS=(xb-xa)*(yb-ya);//\u6846\u5b50\u7684\u603b\u9762\u79ef\n\tfor(int i=1;i<=n;i++)\n\t\tdfs(1,0);//\u653e\u7f6e\u7b2c\u4e00\u4e2a\u6cb9\u6ef4\uff0c\u6846\u5b50\u5185\u88ab\u5360\u636e\u7684\u9762\u79ef\u662f0\n\tprintf(\"%.0lf\",round((S-ans)));//\u603b\u9762\u79ef-\u8986\u76d6\u9762\u79ef=\u5269\u4f59\u9762\u79ef\n    //\u73c2\u6735\u8389\u662f\u6211\u7684\n\treturn 0;\n}\n```\n",
        "postTime": 1571057932,
        "uid": 231743,
        "name": "QDK_Storm",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "```\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<map>\nusing namespace std;\nconst int maxn=2000;\nint n;    \nint ans=1e8;\nstruct node{\n       int x,y;\n}a[maxn];\nint b[maxn];  \ndouble x3,y3,x2,y2;\ndouble r[maxn];\ndouble jvli(int p,int q)\n{\n       return sqrt((a[p].x-a[q].x)*(a[p].x-a[q].x)+(a[p].y-a[q].y)*(a[p].y-a[q].y));\n}\ndouble min4(int y,int z,int w,int q)\n{\n       return min(y,min(z,min(w,q)));\n}\ndouble mianji(int k)\n{\n       double mn;\n       mn=min4(abs(a[b[k]].x-x3),abs(a[b[k]].x-x2),abs(a[b[k]].y-y3),abs(a[b[k]].y-y2));\n       //mn\u5148\u8d4b\u503c\u4e3a\u8fd9\u4e2a\u70b9\u5230\u56db\u5468\u8fb9\u754c\u7684\u6700\u5c0f\u503c \n       for(int i=1;i<k;i++)\n       {\n         mn=min(mn,jvli(b[i],b[k])-r[b[i]]);\n         //b[i]\u4e3a\u4e4b\u524d\u6ef4\u8fc7\u7684\u6bcf\u4e00\u4e2a\u70b9\u7684\u771f\u5b9e\u7f16\u53f7 \n         if(mn<=0)\n         {\n           r[b[k]]=0;\n           return 0; \n         }\n       }\n       r[b[k]]=mn;\n       return M_PI*mn*mn;\n}\ndouble totsize()\n{\n       memset(r,0,sizeof(r));\n       double s=0;\n       //s\u4e3a\u5f53\u524d\u8fd9\u79cd\u6392\u5217\u7684\u6cb9\u6ef4\u8986\u76d6\u9762\u79ef\n       for(int i=1;i<=n;i++)\n         s+=mianji(i);\n       //\u6c42\u51fa\u5f53\u524db\u6570\u7ec4\uff08\u5373\u8fd9\u79cd\u6cb9\u6ef4\u6ef4\u5165\u987a\u5e8f\uff09 \n       return s;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    cin>>x3>>y3>>x2>>y2;\n    for(int i=1;i<=n;i++)\n    {\n      b[i]=i;\n      scanf(\"%d%d\",&a[i].x,&a[i].y);\n    }\n\n    do{\n      \n      double ts=totsize(); \n      //ts\u8d4b\u503c\u4e3a\u5f53\u524d\u8fd9\u79cd\u6392 \u5217\u7684\u6cb9\u6ef4\u8986\u76d6\u9762\u79ef\n      ts=abs(x3-x2)*abs(y2-y3)-ts;\n      //\u7528\u65b9\u6846\u603b\u9762\u79ef\u51cf\u53bb\u6cb9\u6ef4\u8986\u76d6\u9762\u79ef\n      int t=round(ts);\n      //\u56db\u820d\u4e94\u5165\u6c42\u5269\u4f59\u9762\u79ef\n      ans=min(ans,t);\n    }while(next_permutation(b+1,b+n+1));\n    //\u5217\u4e3e\u5168\u6392\u5217\uff0c\u6bd4\u8f83\u6bcf\u4e00\u79cd\u6392\u5217\u65b9\u5f0f\u7684\u6700\u7ec8\u5269\u4f59\u9762\u79ef\n    printf(\"%d\\n\",ans);\n    system(\"pause\");\n    return 0;\n}\n\n```\n",
        "postTime": 1568029057,
        "uid": 148757,
        "name": "wanxiang_zx",
        "ccfLevel": 0,
        "title": "P1378 \u6cb9\u6ef4\u6269\u5c55"
    },
    {
        "content": "WA4\u6b21\u4e4b\u540e\u7ec8\u4e8eAC\u2026\u2026\n#### \u53cd\u601d\n\u5b9a\u4e49\u51fd\u6570\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u6570\u636e\u7c7b\u578b\uff08~~\u591a\u4e48\u60e8\u75db\u7684\u6559\u8bad~~\uff09\n\n\u8bdd\u4e0d\u591a\u8bf4\u4e0a\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nint n;\ndouble X[10] = {},Y[10] = {},r[10] = {},vis[10] = {},m,ans = 0;\ndouble X1,Y1,X2,Y2;\ndouble p = 3.1415926535;\ndouble dis(int a,int b){\n\tdouble k = sqrt((X[a] - X[b]) * (X[a] - X[b]) + (Y[a] - Y[b]) * (Y[a] - Y[b]));\n\treturn (k - r[b] >= 0) ? k - r[b] : 0;\n}//\u8ba1\u7b97\u8ddd\u79bb\uff0c\u6ce8\u610f\u6392\u9664\u67d0\u70b9\u5305\u542b\u5728\u5176\u5b83\u5706\u5185\u7684\u60c5\u51b5\nvoid dfs(int k,int c,double nans){\n\t//\u56e0\u4e3a\u6570\u636e\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u7206\u641c\n   //\u53e6\u5916\uff0c\u8fd9\u91cc\u6211\u8c03\u8bd5\u4e86\u5f88\u591a\u6b21\uff0c\u5927\u7ea6\u82b1\u4e86\u4e00\u4e2a\u5c0f\u65f6\u624d\u53d1\u73b0\u4e0a\u9762\u7684double\u5199\u6210\u4e86int\u2026\u2026\n\tr[k] = min(min(X2 - X[k],X[k] - X1),\n    \t\tmin(Y2 - Y[k],Y[k] - Y1));\n\tint i;\n\tfor(i = 1;i <= n;i++){\n\t\tif(vis[i]){\n\t\t\tr[k] = min(r[k],dis(k,i));//\u8be5\u70b9\u6269\u5c55\u7684\u534a\u5f84\n\t\t}\n\t}\n\tif(c == n){\n\t\tans = max(ans,nans + p * r[k] * r[k]);\n\t\tr[k] = 0;//\u6ce8\u610f\u6e05\u96f6\n\t\treturn;\n\t}\n\tvis[k] = 1;\n\tfor(i = 1;i <= n;i++){\n\t\tif(!vis[i]){\n\t\t\tdfs(i,c + 1,nans + p * r[k] * r[k]);\n\t\t}\n\t}\n\tvis[k] = 0;\n\tr[k] = 0;//\u6e05\u96f6\n}\nint main(){\n\tcin>>n>>X1>>Y1>>X2>>Y2;\n\tif(X2 < X1)\n\t\tswap(X2,X1);\n\tif(Y2 < Y1)\n\t\tswap(Y2,Y1);\n\tm = (X2 - X1) * (Y2 - Y1);//\u957f\u65b9\u5f62\u7684\u9762\u79ef\n\tif(!n){\n\t\tcout<<(X2 - X1) * (Y2 - Y1);\n\t\treturn 0;\n\t}\n\tfor(int i = 1;i <= n;i++)\n\t\tcin>>X[i]>>Y[i];\n\tfor(int i = 1;i <= n;i++){\n\t\tdfs(i,1,0);\n\t}\n\tprintf(\"%.0lf\",m - ans);\n   //\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9053\u9898\u6839\u672c\u4e0d\u5b58\u5728\u56db\u820d\u4e94\u5165\u7684\u95ee\u9898\n}\n```\n",
        "postTime": 1567865949,
        "uid": 141090,
        "name": "\u674e\u4e50\u5e73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P1378)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7531\u4e8e\u6570\u636e\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8dd1\u5168\u6392\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u8003\u8651\u5982\u4f55\u6839\u636e\u5df2\u7ecf\u5f97\u5230\u7684\u6570\u636e\u6c42\u5f53\u524d\u653e\u4e0b\u7684\u6cb9\u6ef4\u6269\u6563\u5f00\u7684\u534a\u5f84\u3002\u9996\u5148\uff0c\u8be5\u6cb9\u6ef4\u4e0d\u4f1a\u8d85\u51fa\u77e9\u5f62\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u6839\u636e\u77e9\u5f62\u8fb9\u6846\u786e\u5b9a\u4e00\u4e2a\u4e0a\u754c\uff1b\u7136\u540e\u679a\u4e3e\u5df2\u7ecf\u6ef4\u4e86\u7684\u6cb9\u6ef4\uff0c\u8ba1\u7b97\u51fa\u6765\u4e0e\u4e4b\u76f8\u5207\u65f6\u7684\u534a\u5f84\uff0c\u6c42$\\min$\u5373\u53ef\u3002\u6ce8\u610f\u7279\u5224\u8be5\u6cb9\u6ef4\u5728\u4e00\u4e2a\u5706\u5f62\u7684\u5185\u90e8\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u9700\u8981\u76f4\u63a5\u5224$0$\n# \u4ee3\u7801\n```cpp\n#include<cmath>\n#include<cstdio>\n\nconst double pi = 3.1415926535;\nconst int MAXN = 10;\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\t\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\ndouble r[MAXN];\ndouble res = 0x3f3f3f3f, score;\ndouble x[MAXN], y[MAXN];\ndouble lx, ly, rx, ry;\nint N;\nbool used[MAXN];\n\ndouble getDis( const double x, const double y, const double a, const double b )\n{\n\treturn sqrt( ( x - a ) * ( x - a ) + ( y - b ) * ( y - b ) );\t\n}\n\nvoid DFS( const int indx )\n{\n\tif( indx > N )\n\t{\n\t\tres = MIN( res, score );\n\t\treturn;\n\t}\t\n\tdouble val;\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tif( ! used[i] )\n\t\t{\n\t\t\tused[i] = true;\n\t\t\tr[i] = MIN( x[i] - lx, MIN( rx - x[i], MIN( y[i] - ly, ry - y[i] ) ) );\n\t\t\tfor( int j = 1 ; j <= N ; j ++ )\n\t\t\t{\n\t\t\t\tif( j != i && used[j] ) \n\t\t\t\t{\n\t\t\t\t\tr[i] = MIN( r[i], ( val = getDis( x[i], y[i], x[j], y[j] ) - r[j] ) < 0 ? 0 : val );\n\t\t\t\t}\n\t\t\t}\n\t\t\tscore -= pi * r[i] * r[i];\n\t\t\tDFS( indx + 1 );\n\t\t\tscore += pi * r[i] * r[i];\n\t\t\tused[i] = false;\t\n\t\t}\t\n\t}\n}\n\nint main()\n{\n\tdouble x1, y1, x2, y2;\n\tscanf( \"%d %lf %lf %lf %lf\", &N, &x1, &y1, &x2, &y2 );\n\tlx = MIN( x1, x2 );\n\trx = MAX( x1, x2 );\n\tly = MIN( y1, y2 );\n\try = MAX( y1, y2 );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tscanf( \"%lf %lf\", &x[i], &y[i] );\t\n\t}\n\tscore = ( rx - lx ) * ( ry - ly );\n\tDFS( 1 );\n\tprintf( \"%.0lf\\n\", res );\n\treturn 0;\t\n}\n```",
        "postTime": 1565756310,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[P1378] \u6cb9\u6ef4\u6269\u5c55"
    },
    {
        "content": "\u5176\u5b9e\u672c\u9898\u8fd8\u662f\u633a\u7b80\u5355\u7684\uff0c\u5c31\u662f\u8981\u6ce8\u610f\u7ec6\u8282\uff0c\u6bd4\u5982\u6211\u8fd9\u79cd\u849f\u84bba,b\u590d\u5236\u540e\u6ca1\u6539\u5b8c\uff0cans\u7528double\u4e4b\u7c7b\u7684\u83ab\u540d\u5176\u5999\u6302\u638960\u5206\uff0c\u8fd8\u8c03\u8bd5\u4e86\u534a\u5929\uff1b\n\u5509\uff0c\u8fd8\u662f\u7ec3\u4e60\u592a\u5c11\u4e86\uff1b\u53e6\u7801\u98ce\u52ff\u55b7\uff1b\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<string>\n#define REP(i,n) for(int i=0;i<n;i++)\n\nusing namespace std;\ndouble x,y,xx,yy,S,sum;\nlong long ans;\nconst double PI=3.1415926535;\nint vis[6],n;\n\nvoid SHE(string a){//setIO\n\tstring in=a+\".in\",out=a+\".out\";\n\tfreopen(in.c_str(),\"r\",stdin);\n\tfreopen(out.c_str(),\"w\",stdout);\n}\n\nstruct yd{\n\tdouble a,b,r;\n\n\tdouble d(const yd& x){\n\t\treturn sqrt((a-x.a)*(a-x.a)+(b-x.b)*(b-x.b))-x.r;\n\t}\n\n\tdouble db(){\n\tdouble s1=min(abs(x-a),abs(xx-a));\n    \tdouble s2=min(abs(y-b),abs(yy-b));\n    \tdouble ans=min(s1,s2);\n\treturn inside()? ans:0;\n\t}\n\n\tdouble V(){\n\t\treturn PI*r*r;\n\t}\n\n\tbool inside(){\n\treturn  (( x<=a && xx>=a) || ( xx<=a && x>=a)) && (( y<=b && yy>=b) || ( yy<=b && y>=b));\n\t\t\t}\n\n}she[6];\n\nvoid JIAN(){\n\tscanf(\"%d\",&n);\n\tscanf(\"%lf%lf%lf%lf\",&x,&y,&xx,&yy);\n\tS=abs((x-xx)*(y-yy));\n\tREP(i,n) cin>>she[i].a>>she[i].b;\n}\n\nvoid find_r(double& R,int id){//\n\tR=10000;\n\tREP(i,n){\n\t\tif(i==id)  continue;\n\t\tif (vis[i]) R=min(R,she[id].d(she[i]));\n\t}\n\tR=max(R,0.0);\n\tR=min(R,she[id].db());\n}\n\nvoid dfs(int id,int k,double sumr){\n\tdouble& R=she[id].r;\n\tfind_r(R,id);\n\tsumr+=she[id].V();\n\tif (k==n) {sum=max(sum,sumr);return;}\n\tvis[id]=1;\n\tREP(i,n) if(!vis[i]) dfs(i,k+1,sumr);\n\tR=vis[id]=0;\n\treturn;\n}\n\nvoid _0702(){//solve\n\tREP(i,n) dfs(i,1,0);\n\tans=(long long)(S-sum+0.5);\n\tcout<<ans;\n}\n\nint main(){\n\t//SHE(\"P1378\");\n\tJIAN();//read input\n\t_0702();//solve\n\treturn 0;\n}\n\n\n```",
        "postTime": 1532871093,
        "uid": 101957,
        "name": "shejian0702",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u6ca1\u4ec0\u4e48\uff0c\u53ea\u662f\u60f3\u8bf4\u53ef\u4ee5\u7528\u679a\u4e3e\u5168\u6392\u5217\u6765\u679a\u4e3e\u6240\u6709\u6ef4\u5165\u6cb9\u6ef4\u7684\u987a\u5e8f\uff0c\u611f\u89c9\u8fd9\u4e2a\u601d\u8def\u6bd4\u8f83\u597d\u5199 ~~\u7136\u800c\u849f\u84bb\u4ee3\u7801\u8d3c\u4e11~~\n\n\u5176\u4f59\u53c2\u7167\u522b\u7684\u5927\u4f6c\u7684\u9898\u89e3\u7565\u7565\u7565\n\n------------\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nconst int Maxn = 10;\nconst double PI = acos(-1);\n\nstruct Node\n{\n\tint x, y;\n\tdouble r;\n} a[Maxn];\n\nint n, bx, by, ex, ey;\nint order[Maxn];\ndouble ri[Maxn];\n\ninline double dis(int i, int j) // \u4e24\u70b9\u7684\u8ddd\u79bb\n{\n\treturn sqrt((a[i].x-a[j].x)*(a[i].x-a[j].x) + (a[i].y-a[j].y)*(a[i].y-a[j].y));\n}\n\ninline double cal() // \u8ba1\u7b97\u5f53\u524d\u987a\u5e8f\u4e0b\u7684\u8986\u76d6\u9762\u79ef\n{\n\tdouble res = 0.0;\n\tfor(int i = 1, cur; i <= n; ++i)\n\t{\n\t\tcur = order[i];\n\t\tri[cur] = a[cur].r;\n        // \u770b\u548c\u4e4b\u524d\u7684\u6cb9\u6ef4\u662f\u5426\u51b2\u7a81\n\t\tfor(int j = 1; j < i; ++j)\n\t\t\tri[cur] = min(ri[cur], dis(cur, order[j]) - ri[order[j]]);\n\t\t// \u7279\u6bd4\u6ce8\u610f!!!\u4e0d\u7136\u53ea\u670960\u5206\n\t\tif(ri[cur] < 0) ri[cur] = 0.0;\n        \n\t\tres += PI * ri[cur] * ri[cur];\n\t}\n\treturn res;\n}\n\ninline int out(double num) // \u849f\u84bb\u7684\u56db\u820d\u4e94\u5165\n{\n\t// \u53d6\u4e0b\u754c\uff0c\u770b\u5c0f\u6570\u7b2c\u4e00\u4f4d\u662f\u4e0d\u662f\u5927\u4e8e5\n\tdouble floor_v = floor(num);\n\treturn static_cast<int>(num - floor_v >= 0.5 ? floor_v+1 : floor_v);\n}\n\ninline int min4(int a, int b, int c, int d) // \u6c42\u56db\u4e2a\u6570\u7684\u6700\u5c0f\u503c\n{\n\tint arr[4] = {a, b, c, d};\n\tsort(arr, arr+4);\n\treturn arr[0];\n}\n\nint main()\n{\n\tscanf(\"%d%d%d%d%d\", &n, &bx, &by, &ex, &ey);\n\tfor(int i = 1; i <= n; ++i) \n\t{\n\t\torder[i] = i;\n\t\tscanf(\"%d%d\", &a[i].x, &a[i].y);\n        // \u8ba1\u7b97\u78b0\u5230\u8fb9\u754c\u80fd\u8fbe\u5230\u7684\u6700\u5927\u534a\u5f84\n\t\ta[i].r = min4(abs(a[i].x-bx), abs(a[i].x-ex), abs(a[i].y-by), abs(a[i].y-ey));\n\t}\n\tdouble ans = 0.0;\n    // \u5f53\u5f53\u5f53\u5f53\n\tdo ans = max(ans, cal());\n\twhile(next_permutation(order+1, order+n+1));\n\tprintf(\"%d\\n\", out(-ans + abs((bx-ex)*(by-ey)) ) );\n\treturn 0;\n}\n\n```",
        "postTime": 1530076348,
        "uid": 53116,
        "name": "Kaizyn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u770b\u4e86\u770b\u9898\u89e3 \u597d\u50cf\u6ca1\u6709\u4ec0\u4e48OO\n\n\u5176\u5b9eOO\u4f1a\u6709\u8d85\u9ad8\u7684\u5199\u4ee3\u7801\u6548\u7387 \u800c\u4e14\u5199\u7684\u65f6\u5019\u4f1a\u6bd4\u8f83\u5f00\u5fc3\n\n**\u4f46\u662f\u6570\u636e\u91cf\u5927\u7684\u9898\u4e3a\u4e86\u9632\u6b62\u4f18\u5316\u95ee\u9898\u8fd8\u662f\u4e0d\u8981OO\u4e86**\n\n\n\u6211\u5199\u7684\u662f\u4e2a\u8d2a\u5fc3 \u5176\u5b9e\u6211\u4e0d\u592a\u6562\u786e\u5b9a\u4f46\u662f\u81ea\u5df1\u968f\u673a\u5927\u91cf\u6570\u636e\u53d1\u73b0\u5168\u6392\u5217\u548c\u8d2a\u5fc3\u7ed3\u679c\u5168\u4e00\u6837 \u5c31\u653e\u5fc3\u7528\u4e86\n\n\u5728\u6bd4\u8d5b\u7684\u65f6\u5019\u62ff\u4e0d\u51c6\u662f\u5426\u80fd\u8d2a\u5fc3\uff0c\u66b4\u529b\u53c8\u6015\u65f6\u95f4\u4e0d\u591f\uff0c\u5176\u5b9e\u8fd8\u53ef\u4ee5\u5199\u4e00\u4e9b\u5148\u8d2a\u5fc3\uff0c\u518d\u66b4\u529b\uff0c\u66b4\u529b\u8fc7\u7a0b\u4e2d\u5728\u4e00\u4e9b\u8d39\u65f6\u7684\u5faa\u73af\u4e2d\u68c0\u67e5\u65f6\u95f4\uff0c\u65f6\u95f4\u8981\u8d85\u4e86\u5c31\u5f3a\u884c\u9000\u6389\u76f4\u63a5\u8f93\u51fa\u8d2a\u5fc3\u7ed3\u679c\u4e4b\u7c7b\u7684\n\n\n###\u4e0b\u9762\u662f\u4ee3\u7801\n\n\u8fd9\u90e8\u5206\u6ca1\u5565\u597d\u8bf4\u7684\n\n```cpp\n#include <vector>\n#include<iostream>\n#include <cmath>\n#include <algorithm>\n#include <iomanip>\n\ndouble areaofCircle(const double&r)\n    {\n    return 3.1415926*r*r;\n    }\n```\n\u8fd9\u662f\u4e2a\u6cb9\u6ef4\u7684class\n\n\u50a8\u5b58\u4e86\u6211\u80fd\u60f3\u5230\u7684**\u6240\u6709\u6cb9\u6ef4\u53ef\u80fd\u5177\u5907\u7684\u5c5e\u6027**\n\n\u6bd4\u5982\u662f\u5426\u5df2\u7ecf\u6269\u6563\uff08\u65b9\u4fbf\u5224\u65ad\u8ddd\u79bb\uff0c\u58f0\u660e\u6269\u6563\u5176\u4ed6\u6cb9\u6ef4\u7684\u65f6\u5019\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e2a\u70b9\uff09\n\n\u80fd\u5426\u6269\u6563\uff08\u8ba1\u7b97\u529b\u4e0d\u8981\u6d6a\u8d39\u5728\u5df2\u7ecf\u88ab\u8986\u76d6\u7684\u6cb9\u6ef4\u4e0a\uff09\n\n```cpp\nclass OilDrop\n    {\n    friend class Box;\n    double posX, posY; //Centre\n    double radius = 0;    //Radius\n    bool diffusible = true;\n    bool diffused = false;\n    OilDrop(const  int&x, const  int&y)\n        {\n        posX = x;posY = y;\n        }\n    void prevent()\n        {\n        diffusible = false;\n        }\n    };\n```\n\n\u8fd9\u91cc\u662f\u76d2\u5b50\u7684class \u53d8\u91cf\u540d\u90fd\u5f88\u597d\u770b \u4e0d\u7528\u89e3\u91ca\u4e86\n\n\u8fd9\u91cc\u53ef\u4ee5\u770b\u51faOO\u601d\u60f3\uff0c\u6211\u5728\u8bbe\u8ba1\u8fd9\u4e2a\u7c7b\u7684\u65f6\u5019\u662f**\u628aBox\u91cc\u9762\u53d1\u751f\u7684\u4e8b\u90fd\u5f53\u505a\u51fd\u6570\u5199\u8fdb\u53bb\u4e86**\n\n```cpp\nclass Box\n    {\n    double X1, X2, Y1, Y2;\n    double leftArea;\n    std::vector<OilDrop*>DropSet;\n    double getCentreDistance(const OilDrop*D1, const OilDrop*D2) const\n        {\n        double square = (D1->posX - D2->posX)*(D1->posX - D2->posX) + (D1->posY - D2->posY)*(D1->posY - D2->posY);\n        return sqrt(square);\n        }\n\n    double minDistance(OilDrop*Drop) const\n        {\n        std::vector<double>distance;\n        distance.push_back(abs(X1 - Drop->posX));\n        distance.push_back(abs(X2 - Drop->posX));\n        distance.push_back(abs(Y1 - Drop->posY));\n        distance.push_back(abs(Y2 - Drop->posY));\n        for (const auto theDrop : DropSet)\n            {\n            if (theDrop->diffused)\n                distance.push_back(getCentreDistance(theDrop, Drop) - theDrop->radius);\n            }\n        return *std::min_element(distance.begin(), distance.end());\n        }\n\n    void Spread(OilDrop*Drop, const double&r)\n        {\n        if (!Drop->diffusible)return;\n        Drop->radius = r;\n        Drop->diffused = true;\n        leftArea -= areaofCircle(r);\n        for (const auto theDrop : DropSet)\n            {\n            if (!theDrop->diffused)\n                if (getCentreDistance(theDrop, Drop) <= Drop->radius)theDrop->prevent();\n            }\n        }\n\n\n    public:\n        Box(const unsigned int& num)\n            {\n            std::cin >> X1 >> Y1 >> X2 >> Y2;\n            leftArea = abs(X1 - X2)*abs(Y1 - Y2);\n            for (size_t i = 0;i < num;i++)\n                {\n                int tmpX, tmpY;\n                std::cin >> tmpX >> tmpY;\n                OilDrop *tmp = new OilDrop(tmpX, tmpY);\n                DropSet.push_back(tmp);\n                }\n            }\n        bool spreadall()\n            {\n            OilDrop* toSpread = nullptr;\n            double max = 0;\n            for (auto const theDrop : DropSet)\n                {\n                if (!theDrop->diffusible)continue;\n                auto currR = minDistance(theDrop);\n                if (max < currR)\n                    {\n                    max = currR;\n                    toSpread = theDrop;\n                    }\n                }\n            if (max == 0)return false;\n            Spread(toSpread, max);\n            return true;\n            }\n        void print()\n            {\n            std::cout << std::setiosflags(std::ios::fixed) << std::setprecision(0) << leftArea;\n            }\n    };\n```\nmain\u6ca1\u5565\u8bf4\u7684\n\n```cpp\nint main()\n    {\n    unsigned int N;\n    std::cin >> N;\n    Box mainBox(N);\n    for (;mainBox.spreadall(););\n    mainBox.print();\n    return 0;\n    }\n```\n\nOO\u9002\u5408**\u5728\u6ca1\u6709\u592a\u591a\u601d\u8def\u7684\u65f6\u5019\u628a\u9898\u8bbe\u90fd\u7528\u4ee3\u7801\u8868\u793a\u51fa\u6765\u627e\u601d\u8def**\n\n\u81f3\u4e8e\u8fd0\u884c\u6548\u7387\uff0c\u548cSTL\u4e00\u4e2a\u611f\u89c9\u5427\uff0c\u60f3\u7528\u5c31\u7528\uff0c\u89c9\u5f97\u6162\u5c31\u4e0d\u8981\u7528\n",
        "postTime": 1509182381,
        "uid": 67163,
        "name": "CondemnedXL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u7528DFS\u641c\u7d22n\u4e2a\u70b9\u7684\u5168\u6392\u5217\u3002\n\n\u6269\u5c55\u67d0\u4e2a\u6cb9\u6ef4\u5b9e\u9645\u4e0a\u662f\u5728\u6c42\u5f53\u524d\u60c5\u51b5\u4e0b\u6cb9\u6ef4\u6700\u5927\u53ef\u884c\u7684\u534a\u5f84\uff0c\u4ee4\u5176\u4e3ar\n\n\u8bbe\u6cb9\u6ef4\u5750\u6807\u4e3aa(x,y)\uff0c\u6211\u4eec\u53d1\u73b0r\u9700\u8981\u6ee1\u8db3\u4e00\u4e0b\u6761\u4ef6\n\n1)    r \u2264 \u70b9a\u5230\u77e9\u5f62\u56db\u6761\u8fb9\u7684\u8ddd\u79bb\n\n2)    \u4ee5a\u4e3a\u5706\u5fc3\uff0cr\u4e3a\u534a\u5f84\u7684\u5706\u4e0e\u6240\u6709\u5df2\u7ecf\u5b58\u5728\u7684\u5706\u5747\u5916\u79bb\uff08\u6ca1\u6709\u516c\u5171\u70b9\uff09\u6216\u5916\u5207\uff08\u53ea\u6709\u4e00\u4e2a\u516c\u5171\u70b9\uff09\uff0c\u5373\u5bf9\u4e8e\u6240\u6709\u5df2\u7ecf\u5b58\u5728\u7684\u5706\u5fc3\u4e3aO\uff0c\u534a\u5f84\u4e3aR\u7684\u5706\uff0cdist(O,a)>=r+R\uff08dist\uff08O,a\uff09\u8868\u793a\u70b9O\u4e0e\u70b9a\u7684\u8ddd\u79bb\uff0cr\u548cR\u7684\u610f\u4e49\u540c\u524d\u6587\uff09\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u91cc\u7684r\u5c31\u7b49\u4e8e\u6240\u6709\u9650\u5236\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u5373\n\nr=min{min{a\u5230\u77e9\u5f62\u56db\u8fb9\u7684\u8ddd\u79bb} , min{dist(a,O)-R}(\u5bf9\u4e8e\u6240\u6709\u5df2\u5b58\u5728\u7684\u5706\u5fc3\u4e3aO\uff0c\u534a\u5f84\u4e3aR\u7684\u5706)}\n\n\u6c42\u51far\u540e\uff0c\u7ee7\u7eedDFS\u5373\u53ef\n\n\u7a0b\u5e8f\uff1a\n\n\n```cpp\nvar n,n1,i:longint;\n    ans:double;\n    xi,yi:array[1..4] of longint;\n    a1,b1:array[0..7] of longint;\n    f:array[0..7] of boolean;\n    len:array[0..7] of double;\nfunction minn(a,b:double):double; begin if a<b then exit(a) else exit(b);end;\nprocedure work(s:longint);\nvar i,j:longint;\n    sum,lon:double;\nbegin\n  if s>n then\n    begin\n      sum:=0;\n      for i:=1 to n do sum:=sum+pi*len[i]*len[i];\n      sum:=n1-sum;\n      if (ans=-1) or (sum<ans)\n      then ans:=sum;\n    end\n   else\n     begin\n       for i:=1 to n do if f[i]\n         then\n         begin\n           len[i]:=maxlongint;\n           for j:=1 to 4 do\n             begin\n               len[i]:=minn(len[i],abs(xi[j]-a1[i]));\n               len[i]:=minn(len[i],abs(yi[j]-b1[i]));\n             end;\n           for j:=1 to n do\n             if not f[j] then\n             begin\n               lon:=sqrt(sqr(a1[j]-a1[i])+sqr(b1[j]-b1[i]));\n```\nif lon-len[j]>0\nthen len[i]:=minn(len[i],lon-len[j]) else len[i]:=0;\n\n```cpp\n             end;\n           f[i]:=false;\n           work(s+1);\n           f[i]:=true;\n         end;\n     end;\nend;\nbegin\n  readln(n);\n  readln(xi[1],yi[1],xi[2],yi[2]);\n  xi[3]:=xi[1];\n  yi[3]:=yi[2];\n  xi[4]:=xi[2];\n  yi[4]:=yi[1];\n  for i:=1 to n do readln(a1[i],b1[i]);\n  n1:=abs((xi[2]-xi[1])*(yi[2]-yi[1]));\n  ans:=-1;\n  fillchar(f,sizeof(f),true);\n  work(1);\n  writeln(round(ans));\nend.\n```",
        "postTime": 1506341914,
        "uid": 57604,
        "name": "lin_secret",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u548b\u4e00\u770b\u611f\u89c9\u5f88\u96be\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u5904\u7406\u6cb9\u6ef4\u7684\u987a\u5e8f\u548c\u6cb9\u6ef4\u7684\u534a\u5f84\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u770b\u5230\u6570\u636e\u5c31\u4f1a\u53d1\u73b0n\u5c0f\u4e8e\u7b49\u4e8e6\uff0c\u8fd9\u771f\u662f\u975e\u5e38\n\n\n\u5c0f\u554a\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u5fc3\u5730\u5199\u4e00\u4e2aDFS\u6765\u679a\u4e3e\u6cb9\u6ef4\u7684\u987a\u5e8f,\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u6cb9\u6ef4\u5b83\u80fd\u6269\u957f\u5927\u534a\u5f84\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u4e86\uff0c\u8981\u4e0e\u6bcf\u4e2a\u5df2\u7ecf\n\n\n\u6ef4\u4e0b\u7684\u6cb9\u6ef4\u6bd4\u8f83\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u51cf\u53bb\u90a3\u4e2a\u6cb9\u6ef4\u5df2\u7ecf\u6269\u5f20\u7684\u534a\u5f84\uff0c\u5c31\u662f\u5bf9\u4e8e\u8fd9\u6ef4\u6cb9\u6ef4\u6765\u8bf4\u6700\u5927\u7684\u534a\u5f84\uff0c\u4e0d\u8981\u5fd8\u4e86\u548c\u8fb9\u754c\u5224\u65ad\u4e00\n\n\n\u4e0b\u3002\n\u6700\u540e\u518d\u732e\u4e0a\u5b8c\u6574\u4ee3\u7801\n\n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#define maxn 15\nusing namespace std;\nconst double pi=3.1415926535897932384626433832795;//\u6d89\u53ca\u5230\u7cbe\u5ea6\u95ee\u9898\u3002\nbool vis[maxn];//\u6807\u8bb0\u8fd9\u4e2a\u6cb9\u6ef4\u662f\u5426\u5df2\u7ecf\u88ab\u6ef4\u4e0b\ndouble sum,ans;\nint n,x,y,x_,y_;\nstruct chj{\n    int x,y;\n    double r;\n}a[maxn];\ninline int read(){\n    int ret=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();} \n    while (ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n    return ret*f;\n}\ninline double getcost(int x,int y){return sqrt((a[x].x-a[y].x)*(a[x].x-a[y].x)+(a[x].y-a[y].y)*(a[x].y-a\n[y].y));}//\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\ninline void mrk_r(int p){//\u7b97\u534a\u5f84\n    double r=1e100;\n    for (int i=1;i<=n;i++) if (vis[i]) r=min(r,getcost(i,p)-a[i].r);//\u8ddf\u5df2\u7ecf\u6ef4\u4e0b\u7684\u6cb9\u6ef4\u6bd4\u8f83\uff0c\u5237\u4e2a\u77ed\u534a\u5f84\uff0c\u5373\n```\n\u5bf9\u5e94\u9898\u76ee\u4e2d\u7684\u76f4\u5230\u63a5\u89e6\u5230\u5176\u4ed6\u6cb9\u6ef4\u3002\n```cpp\n    if (x_-a[p].x<r) r=x_-a[p].x;//\u4e0e\u8fb9\u754c\u6bd4\u8f83\u3002\n    if (a[p].x-x<r) r=a[p].x-x;\n    if (y_-a[p].y<r) r=y_-a[p].y;\n    if (a[p].y-y<r) r=a[p].y-y;\n    if (r<0) r=0;//\u534a\u5f84\u4e0d\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u6ce8\u610f\u54e6\u3002\n    a[p].r=r;\n}\ninline void DFS(int step){//\u679a\u4e3e\u987a\u5e8f\n    if (step>n){\n        double s=0;\n        for (int i=1;i<=n;i++) s+=a[i].r*a[i].r*pi;//\u8ba1\u7b97\u6bcf\u4e2a\u6cb9\u6ef4\u7684\u9762\u79ef\u7d2f\u79ef\u4e00\u4e0b\u3002\n        if (s>ans) ans=s;//\u4ece\u4f17\u591a\u7ed3\u679c\u91cc\u5237\u4e2a\u5927\u7684\n        return;\n    }\n    for (int i=1;i<=n;i++)\n    if (!vis[i]){//\u6807\u51c6\u7684DFS\n        mrk_r(i);\n        vis[i]=1;\n        DFS(step+1);\n        vis[i]=0;\n    }\n}\nint main(){\n    freopen(\"box.in\",\"r\",stdin);\n    freopen(\"box.out\",\"w\",stdout);\n    n=read();\n    int aa=read(),bb=read(),cc=read(),dd=read();\n    x=min(aa,cc);y=min(bb,dd);x_=max(aa,cc);y_=max(bb,dd);\n    for (int i=1;i<=n;i++) a[i].x=read(),a[i].y=read();//\u8bfb\u6570\u636e\n    DFS(1);\n    sum=(x_-x)*(y_-y);//\u8fd9\u662f\u603b\u9762\u79ef\n    printf(\"%.f\\n\",sum-ans);\n    return 0;\n}\n```",
        "postTime": 1504277480,
        "uid": 36559,
        "name": "\u53ef\u8010\u7684\u83ca\u82b1\u8336",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u5176\u5b9e\u6ef4\u7684\u65b9\u6848\u6570\u5c31\u662fn\u7684\u9636\u4e58\uff0c\u4e5f\u5c31\u662f\u5168\u6392\u5217\u3002\n\n\u90a3\u4e48\u6574\u4e2a\u9898\u7684\u96be\u70b9\u5c31\u5230\u4e86\u600e\u4e48\u8ba1\u7b97\u6bcf\u6ef4\u6cb9\u6269\u6563\u5f00\u6765\u7684\u5706\u7684\u534a\u5f84\u3002\n\n\u800c\u5706\u53ea\u8981\u78b0\u5230\u8fb9\u754c\u6216\u8005\u5176\u5b83\u5706\u5c31wei\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5706\u7684\u534a\u5f84\u53ea\u662f\u5c31\u662f\u5b83\u4e0e\u957f\u65b9\u5f62\u56db\u6761\u8fb9\u7684\u8ddd\u79bb\uff0cmax(\u5176\u4ed6\u5706\u7684\u8ddd\u79bb-\u90a3\u4e2a\u5706\u7684\u534a\u5f84,0)\uff0c\u5728\u4e8c\u8005\u91cc\u627e\u4e00\u4e2amin\u5c31\u884c\u4e86\u3002\n\nAC\u4ee3\u7801:\n\n\n```cpp\nconst\n  pi=3.1415926535;\nvar\n  x,y,kk:array[0..7]of longint;\n  b:array[0..7]of boolean;\n  zz:array[0..7]of double;\n  n,i,x1,y1,x2,y2:longint;\n  sum,ans:double;\nfunction max(x,y:double):double;\nbegin\n  if x>y then exit(x) else exit(y);\nend;\nfunction min(x,y:double):double;\nbegin\n  if x<y then exit(x) else exit(y);\nend;\nfunction ff(n,t:longint):double;\nvar\n  i:longint;\n  begin  \n    ff:=min(min(abs(x[t]-x1),abs(x[t]-x2)),min(abs(y[t]-y1),abs(y[t]-y2)));\n    for i:=1 to n do \n      ff:=min(ff,max(0,sqrt(sqr(x[t]-x[kk[i]])+sqr(y[t]-y[kk[i]]))-zz[i]));\n  end;//\u8ba1\u7b97\u534a\u5f84\nprocedure try(k:longint);\nvar\n  i:longint;\n  s:double;\n  begin\n    if k>n then \n      begin\n        s:=0;\n        for i:=1 to n do \n          s:=s+zz[i]*zz[i]*pi;//\u8ba1\u7b97\u8fd9\u4e9b\u5706\u7684\u9762\u79ef\u4e4b\u548c\n        if s>ans then ans:=s;//\u8981\u4f7f\u5269\u4f59\u9762\u79ef\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5706\u7684\u9762\u79ef\u4e4b\u548c\u5c31\u8981\u5c3d\u53ef\u80fd\u5927\n        exit;\n      end;\n    for i:=1 to n do \n      if not b[i] then \n        begin\n          zz[k]:=ff(k-1,i);//\u8ba1\u7b97\u5706\u7684\u534a\u5f84\n          kk[k]:=i;//\u8bb0\u5f55\u4e0b\u5706\u7684\u7f16\u53f7\n          b[i]:=true;\n          try(k+1);\n          b[i]:=false;//\u56de\u6eaf\n        end; \n  end; \nbegin\n  readln(n);\n  readln(x1,y1,x2,y2);\n  sum:=abs(x2-x1)*abs(y2-y1);\n  for i:=1 to n do readln(x[i],y[i]);\n  try(1);\n  writeln((sum-ans):0:0);\nend.\n\n```",
        "postTime": 1504155991,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "        \n```cpp\n//\u8fd9\u4e2a\u4e5f\u662f\u7528\u7684\u662f\u5168\u6392\u5217\n//\u4f46\u662f\u50a8\u5b58\u6570\u636e\u7684\u65b9\u6cd5\u548c\u697c\u4e0b\u7684\u4e0d\u4e00\u6837\n//\u7528\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\n//\u63a5\u7740\u5168\u6392\u5217\u6570\u7ec4a\u8c03\u7528\u7ed3\u6784\u4f53\n//\u6ce8\u610f\u554a\uff0c\u03c0\u8981\u591a\u5f80\u540e\u5199\u51e0\u4f4d\n//\u521a\u5f00\u59cb\u628a\u03c0\u5199\u6210\u4e863.141\u53ea\u5f97\u4e8630\u5206\uff0c\u770b\u4ee3\u7801\u770b\u4e86\u4e24\u4e2a\u5c0f\u65f6\u90fd\u627e\u4e0d\u5230\u54ea\u91cc\u9519\n//\u6700\u540e\u628a\u03c0\u7684\u503c\u6539\u62103.141592653\u3002\u3002\u3002\u3002\u624d\u5bf9\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst double PI=3.1415926535;//\uff01\uff01\uff01\nstruct node{\n    int  x;\n    int  y; };//\u7ed3\u6784\u4f53\u7528\u6765\u5b58\u6cb9\u6ef4\u7684\u70b9\nnode p[7];\nint a[7];//\u5168\u6392\u5217\u6570\u7ec4\ndouble ans;\nint n;\nint sx,sy,ex,ey;\ndouble r[7];//\u8bb0\u5f55\u6bcf\u4e2a\u5706\u7684\u534a\u5f84\ndouble dis[7][7];//\u5706\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\ndouble s()\n{    double ss=0.0;\n    for(int i=0;i<n;i++)\n    {    \n        double r1=min(abs(p[a[i]].x-sx),abs(p[a[i]].x-ex));\n        double r2=min(abs(p[a[i]].y-sy),abs(p[a[i]].y-ey));//\u5148\u786e\u5b9a\u70b9\u548c\u8fb9\u754c\u8c01\u7684\u534a\u5f84\u5c0f\n        r1=min(r1,r2);\n        for(int j=0;j<i;j++)\n            {\n            if(r[a[j]]!=0)        \n            r1=min(dis[a[i]][a[j]]-r[a[j]],r1);\n            if(r1<0)r1=0;//\u63a5\u7740\u5bf9\u524di\u4e2a\u6cb9\u6ef4\u7684\u534a\u5f84\u904d\u5386\uff0c\u627e\u51fa\u5f53\u524d\u6cb9\u6ef4\u7684\u6700\u5c0f\u534a\u5f84\n            }\n        r[a[i]]=r1;//\u50a8\u5b58\n        //cout<<r1<<endl;\n        ss+=PI*r1*r1;//\u8ba1\u7b97\u9762\u79ef\n        //cout<<ss;    \n    }\n    return ss;\n```\n}//\u8fd9\u662f\u8ba1\u7b97\u51fd\u6570\n\n```cpp\nint main(){\n    freopen(\"123.txt\",\"r\",stdin);\n    cin>>n;\n    cin>>sx>>sy>>ex>>ey;\n    memset(r,0,sizeof(r));\n    for(int i=0;i<n;i++)\n        {\n            a[i]=i;\n            cin>>p[i].x>>p[i].y;\n        }\n        memset(dis,0,sizeof(dis));//\u8f93\u5165\u548c\u521d\u59cb\u5316\n        for(int i=0;i<n;i++)\n            for(int j=0;j<n;j++)\n            {\n            if(i!=j&&dis[i][j]==0)dis[i][j]=dis[j][i]=sqrt(pow(p[i].x-p[j].x,2)+pow(p[i].y-p[j].y,2));    \n            //cout<<dis[i][j]<<endl;\n```\n}//\u4e8b\u5148\u8ba1\u7b97\u51fa\u4eae\u70b9\u4e4b\u95f4\u8ddd\u79bb\u65b9\u4fbf\u8c03\u7528\nwhile(next\\_permutation(a+0,a+n))//\u7528STL\u5e93\u4e2d\u7684\u5168\u6392\u5217\n\n            \n```cpp\n    {    for(int i=0;i<n;i++)//cout<<a[i]<<endl;;\n        ans=max(s(),ans);\n        memset(r,0,sizeof(r));//\u6ce8\u610f\u904d\u5386\u4e00\u6b21\u4e00\u5b9a\u8981\u628ar\u6570\u7ec4\u7ed9\u6e05\u96f6\n    }\n    double sum=abs(sx-ex)*abs(sy-ey);//\u6c42\u51fa\u957f\u65b9\u4f53\u9762\u79ef\n    //cout<<sum<<\" \";\n    int cur=sum-ans+0.5;//\u8fd9\u662f\u4ece\u697c\u4e0b\u5b66\u7684\u56db\u820d\u4e94\u5165\uff0c\u611f\u89c9\u5f88\u5de7\u554a\u4e4b\u524d\u90fd\u6ca1\u89c1\u8fc7\n    cout<<cur; \n}\n```",
        "postTime": 1503310604,
        "uid": 27330,
        "name": "\u68ee\u6d77\u585e\u5c14",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "n\u6700\u591a\u5c316\uff0c\u56e0\u6b64\u679a\u4e3e\u8db3\u77e3\uff0c\u96be\u70b9\u5728\u4e8e\u5bf9\u601d\u7ef4\u7684\u7f1c\u5bc6\u6027\u8981\u6c42\u8f83\u9ad8\u3002\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e0a\u4ee3\u7801\uff0c\u6ce8\u91ca\u5df2\u7ecf\u5f88\u8be6\u5c3d\u4e86\u3002\n\n```cpp\n#include<cmath>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,xa,ya,xb,yb;\nconst double infd=100000000.0;//\u8fd9\u4e2a\u662f\u5bf9\u4e8edouble\u7684INF \nconst double PI=acos(-1);//\u4e3a\u4e86\u7cbe\u5ea6 \ndouble ans;\nint x[10],y[10];\ndouble r[10];\nint seq[10];\nint fact[10]={0,1,2,6,24,120,720};//\u9636\u4e58\u503c,\u5176\u5b9e\u5c31\u662f\u5168\u6392\u5217\u6570 \ndouble dist(int a,int b){//\u6c42\u4e24\u5706a,b\u7684\u5706\u5fc3\u8ddd \n    return sqrt((x[a]-x[b])*(x[a]-x[b])+(y[a]-y[b])*(y[a]-y[b]));\n}\nvoid solve(){\n    double cur;//current answer\u76ee\u524d\u7684\u7b54\u6848 \n    cur=abs(xa-xb)*abs(ya-yb);//\u521a\u5f00\u59cb\u8fd8\u6ca1\u88ab\u6cb9\u6ef4\u8986\u76d6,\u6240\u4ee5\u662f\u6574\u4e2a\u76d2\u5b50\u9762\u79ef \n    for(int i=0;i<n;i++){//\u5bf9\u586b\u5145\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5706\u8ba1\u7b97\u5176\u5728\u6b64\u60c5\u51b5\u4e0b\u7684\u534a\u5f84 \n        double mr=infd;//\u5f53\u524d\u5706\u7684\u534a\u5f84\u7684\u6700\u5927\u503cmax radian(mr) \n        mr=min(min(abs(x[seq[i]]-xa),abs(x[seq[i]]-xb)),min(abs(y[seq[i]]-ya),abs(y[seq[i]]-yb)));\n        //\u4ee5\u4e0a\u8be5\u884c\u53ea\u8003\u8651\u4e86\u76d2\u5b50\u8fb9\u754c\uff0c\u672a\u8003\u8651\u5176\u4ed6\u4e4b\u524d\u586b\u597d\u7684\u5706 \n        for(int j=0;j<i;j++){//\u73b0\u5728\u8003\u5bdf\u4e4b\u524d\u6269\u5c55\u5b8c\u6bd5\u7684\u6cb9\u6ef4 \n            double t=dist(seq[i],seq[j])-r[seq[j]];\n            //\u5706\u5fc3\u8ddd\u51cf\u53bb\u8be5\u5706\u534a\u5f84\uff0c\u6709\u53ef\u80fd\u6709\u8d1f\u6570\uff0c\u6b64\u65f6\u672c\u5706\u88ab\u5305\u542b\u5728\u4e4b\u524d\u7684\u5706\u4e2d\uff0c\u9700\u8981\u7279\u5224\uff0c\u5426\u5219WA60\u5206 \n            mr=mr<max(t,(double)0)?mr:max(t,(double)0);//\u7279\u5224\u3002\u4e09\u601d\u800c\u540e\u63d0\u4ea4\uff01consider twice before you submit!\n        }\n        r[seq[i]]=mr;//\u8bb0\u5f55\u8be5\u5706\u534a\u5f84 \n        cur-=PI*mr*mr;//\u8ba1\u7b97\u76ee\u524d\u672a\u88ab\u8986\u76d6\u7684\u9762\u79ef \n    }\n    ans=min(ans,cur);//\u66f4\u65b0\u7b54\u6848 \n    return;\n}\nint main(){\n    cin>>n>>xa>>ya>>xb>>yb;\n    ans=abs(xa-xb)*abs(ya-yb);//\u521d\u59cb\u5316 \n    for(int i=0;i<n;i++){\n        seq[i]=i;\n        cin>>x[i]>>y[i];\n    }\n    for(int i=0;i<fact[n];i++){\n        solve();\n        next_permutation(seq,seq+n);//\u6c42\u4e0b\u4e00\u4e2a\u6392\u5217 \n    }\n//    cout<<round(ans);\u7528round\u4f1a\u5bfc\u81f4\u88ab\u5361\u638910\u5206\uff01\n    cout.precision(0);\n    cout<<fixed<<ans; \n    return 0;\n}\n```",
        "postTime": 1484322157,
        "uid": 21421,
        "name": "pantw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\uff0c\u597d\u597d\u7684STL\u5168\u6392\u5217\u4e0d\u7528\uff0c\u9012\u5f52\u5e72\u4ec0\u4e48\uff1f\n\n\u6211~~\u673a\u667a\u7684~~\u4f7f\u7528\u4e86STL\u51fd\u6570next\\_permutation\uff0c\u6c42\u4e0b\u4e00\u4e2a\u6392\u5217\u3002\n\n\u7136\u540e\u518d\u4f9d\u6b21\u8fdb\u884c\u6bcf\u4e2a\u6cb9\u6ef4\u7684\u6269\u5c55\uff0c\u5176\u5b9e\u5c31\u662f\u7b97\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684\u6cb9\u6ef4\u6700\u5927\u53ef\u80fd\u7684\u534a\u5f84\n\n~~\u4e3a\u4ec0\u4e48\u03c0\u8d4b\u503c\u62103.14\u53ea\u670910\u5206\u5462\uff1f\u8fd9\u662f\u4e2a\u95ee\u9898\u3002~~\n\n~~\u4e3a\u4ec0\u4e48\u03c0\u8d4b\u503c\u62103.141592653589\u4f1a\u6ee1\u5206\u5462\uff1f\u8fd9\u4e5f\u662f\u4e2a\u95ee\u9898\u3002~~\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\nconst double pi=3.141592653589;\nint n,s1[10],s2[10],x[4],y[4],a[10];\ndouble ans,m,p[10];\nvoid pd(int u){\n    double g=1e9;\n    for (int i=0;i<u;i++)\n    g=min(g,sqrt((s1[a[i]]-s1[a[u]])*(s1[a[i]]-s1[a[u]])+(s2[a[i]]-s2[a[u]])*(s2[a[i]]-s2[a[u]]))-p[a[i]]);\n    for (int i=0;i<4;i++)\n    g=min(g,(double)min(abs(x[i]-s1[a[u]]),abs(y[i]-s2[a[u]])));\n    p[a[u]]=max(g,0.0);\n    m+=p[a[u]]*p[a[u]]*pi;\n}\nint main()\n{\n    scanf(\"%d%d%d%d%d\",&n,&x[0],&y[0],&x[2],&y[2]);\n    x[1]=x[0];y[1]=y[2];x[3]=x[2];y[3]=y[0];\n    for (int i=0;i<n;i++)\n    {\n        a[i]=i;\n        scanf(\"%d%d\",&s1[i],&s2[i]);\n    }\n    do\n    {\n        m=0;\n        memset(p,0,sizeof(p));\n        for (int i=0;i<n;i++)\n        pd(i);//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u7684\u6269\u5c55\n        ans=max(ans,m);\n    }while(next_permutation(a,a+n));//\u6c42\u4e0b\u4e00\u4e2a\u6392\u5217\n    printf(\"%.0lf\",abs(x[2]-x[0])*abs(y[2]-y[0])-ans);\n    return 0;\n}\n```",
        "postTime": 1478695527,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6837\u4f8b\u7684\u7406\u89e3\uff0c\u7b2c\u4e00\u4e2a\u6cb9\u6ef4\u6269\u6563\u534a\u5f84\u4e3a3\uff0c\u56e0\u4e3a\u53d7\u77e9\u5f62\u6846\u7684\u9650\u5236\u3002\u7b2c\u4e8c\u4e2a\u6cb9\u6ef4\u6269\u6563\u534a\u5f84\u5c0f\u4e8e3\uff0c\u56e0\u4e3a\u53d7\u7b2c\u4e00\u4e2a\u6cb9\u6ef4\u7684\u9650\u5236\u3002r2\u53d7r1\u9650\u5236\uff0c\u5373r2<=dis-r1. \uff08dis\u4e3a\u5706\u5fc3\u8ddd\uff09\n\n\u679a\u4e3en\u4e2a\u70b9\u7684\u5148\u540e\u987a\u5e8f\u3002\u5bf9\u4e8e\u7b2ci\u4e2a\u6cb9\u6ef4\uff0c\u80fd\u6269\u6563\u5230\u7684\u534a\u5f84Ri\u53ea\u53d7\u77e9\u5f62\u548c\u524di-1\u4e2a\u6cb9\u6ef4\u534a\u5f84\u7684\u7ea6\u675f\uff0c\u4e3a\u65b9\u4fbf\u6c42Ri\uff0c\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u5404\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bbdis[i][j]\u3002\n\n```cpp\n#include<stdio.h>\n#include<math.h>\n#define PI 3.1415926\nint n,vis[7];\ndouble A[7][2],x,y,x2,y2,R[7],max,dis[7][7];\ndouble abss(double a){return a>0.0?a:-a;}\nvoid dfs(int step,double s)\n{//\u51c6\u5907\u653e\u7f6e\u7b2cstep\u4e2a\u6cb9\u6ef4\uff0c\u653e\u7f6e\u524d\u9762\u79ef\u4e3as\n    int k,i;\n    double r=0;//\u51c6\u5907\u653e\u7f6e\u7684\u6cb9\u6ef4\u7684\u6269\u6563\u534a\u5f84 \n    if(step==n+1)//\u653e\u5b8c \n        max=s>max?s:max;\n    else\n    for(k=1;k<=n;k++) if(!vis[k])\n    {\n        //\u77e9\u5f62\u548c\u5df2\u653e\u7f6e\u7684\u6cb9\u6ef4\u7ea6\u675f\u4e86r\u7684\u5927\u5c0f \n        r=abss(y2-A[k][1]);\n        if(r>abss(x2-A[k][0]))r=abss(x2-A[k][0]);\n        if(r>abss(y-A[k][1])) r=abss(y-A[k][1]);\n        if(r>abss(x-A[k][0])) r=abss(x-A[k][0]);\n        for(i=1;i<=n;i++) if(vis[i])\n            if(r>dis[k][i]-R[i]) r=dis[k][i]-R[i];\n        r=r<0?0:r;//\u6ce8\u610fr\u4e0d\u80fd\u4e3a\u8d1f \n        vis[k]=1;R[k]=r;\n        dfs(step+1,s+PI*r*r);\n        vis[k]=0;R[k]=0.0;\n    }\n}\nint main(void)\n{\n    int i,j;\n    scanf(\"%d%lf%lf%lf%lf\",&n,&x,&y,&x2,&y2);\n    for(i=1;i<=n;i++) \n    {scanf(\"%lf%lf\",&A[i][0],&A[i][1]);} \n    //\u9884\u5904\u7406\u51fa\u6cb9\u6ef4\u95f4\u8ddddis \n    for(i=1;i<=n;i++) for(j=1;j<i;j++) if(i!=j)\n        dis[i][j]=dis[j][i]=\n        sqrt((A[i][0]-A[j][0])*(A[i][0]-A[j][0])+\n            (A[i][1]-A[j][1])*(A[i][1]-A[j][1]));\n    dfs(1,0.0);\n    double S=abss(x-x2)*abss(y-y2);//\u77e9\u5f62\u9762\u79ef \n    printf(\"%.0lf\",S-max);\n    return 0;\n}\n```",
        "postTime": 1446047300,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u5341\u5206\u7b80\u5355\u7684\u641c\u7d22\uff0c\u4ece\u6bcf\u4e00\u4e2a\u70b9\u5f00\u59cb\u4e0d\u65ad\u8fdb\u884c\u6df1\u641c\uff0c\u534a\u5f84\u7684\u5927\u5c0f\u4e3amin\uff08\u5750\u6807-\u8fb9\u754c\uff0c\u4e0e\u5176\u4ed6\u6cb9\u6ef4\u5706\u5fc3\u7684\u8ddd\u79bb-\u6b64\u6cb9\u6ef4\u7684\u534a\u5f84\uff09\uff0c\u6709\u4e86\u8fd9\u4e2a\u5269\u4e0b\u7684\u5c31\u5341\u5206\u7b80\u5355\u4e86\u3002\u4f46\u662f\u8981\u6ce8\u610f\u6cb9\u6ef4\u662f\u5426\u88ab\u5176\u5b83\u6cb9\u6ef4\u5305\u542b\uff0c\u5982\u679c\u5305\u542b\u76f4\u63a5\u9000\u51fa\u5f53\u524d\u5faa\u73af\u3002\n\n\n```(\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \nint n,i,order[7];  \ndouble x1,y1,x2,y2,dot[7][2],area,r[7],answer=0;  \nbool use[7]={};  \ninline long double  \nsqrt(long double \\_\\_x)  \n{ return \\_\\_builtin\\_sqrtl(\\_\\_x); }  \nint DFS (int No,int last)  \n{  \n    order[No-1]=last;  \n    use[last]=1;  \n    if (No>n)  \n    {  \n             area=0;  \n             for (int i=1;i<=n;i++)  \n             {  \n                 r[i]=min(min(max(x1-dot[order[i]][0],dot[order[i]][0]-x1),max(x2-dot[order[i]][0],dot[order[i]][0]-x2)),min(max(y1-dot[order[i]][1],dot[order[i]][1]-y1),max(y2-dot[order[i]][1],dot[order[i]][1]-y2)));  \n                 for (int j=1;j<i;j++)  \n                 r[i]=min(r[i],(double)sqrt((dot[order[i]][0]-dot[order[j]][0])\\*(dot[order[i]][0]-dot[order[j]][0])+(dot[order[i]][1]-dot[order[j]][1])\\*(dot[order[i]][1]-dot[order[j]][1]))-r[j]);  \n                 r[i]=max(r[i],0.0);  \n                 area+=r[i]\\*r[i]\\*3.1415926535;  \n             }  \n             answer=max(answer,area);  \n    }  \n    for (int i=1;i<=n;i++)  \n    if (!use[i])  \n    DFS(No+1,i);  \n    use[last]=0;  \n}  \nint main ()  \n{  \n    cin>>n>>x1>>y1>>x2>>y2;  \n    for (i=1;i<=n;i++)  \n    cin>>dot[i][0]>>dot[i][1];  \n    DFS(1,0);  \n    printf(\"%.0f\",(max(x1-x2,x2-x1))\\*(max(y1-y2,y2-y1))-answer);  \n    return 0;  \n}\n\uff09",
        "postTime": 1444115771,
        "uid": 9729,
        "name": "timetravler",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u7531\u4e8en\u5341\u5206\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u6ef4\u6cb9\u6ef4\u987a\u5e8f\u4e2d\u6cb9\u6ef4\u5360\u636e\u7684\u9762\u79ef\uff0c\u6c42\u8fd9\u4e9b\u9762\u79ef\u7684\u6700\u5927\u503c\u4e0e\u6846\u5b50\u9762\u79ef\u7684\u5dee\u7684\u76f8\u53cd\u6570\uff0c\u6700\u5c11\u679a\u4e3e\u4e2a\u6570\u4e3an!\u6b21\uff0c\u672a\u4f18\u5316\u7684\u679a\u4e3e\u4e3an^n\u6b21\uff0c\u4e24\u79cd\u65b9\u6848\u90fd\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n       \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c[delete]\u6316\u6398\u673a\u6280\u672f\u54ea\u5bb6\u5f3a\uff1f[/delete]\u5982\u4f55\u6c42\u6cb9\u6ef4\u5360\u636e\u9762\u79ef\uff1f\u8bbe\u6cb9\u6ef4i\u6269\u6563\u9762\u79efSi=\u03c0\u25aari^2\u3002\u82e5\u6846\u5b50\u4e2d\u53ea\u6709\u4e00\u4e2a\u6cb9\u6ef4\uff0cx'=y=y'=\u221e\uff0c\u5219r1=|x-x1|\uff08\u8bc1\u660e\u5e94\u8be5\u4e0d\u96be\uff09\u3002\u540c\u7406\uff0c\u82e5x=y=y'=\u221e\uff0c\u5219r1=|x'-x1|\uff1b\u82e5x=x'=y'=\u221e\uff0c\u5219r1=|y-y1|\uff1b\u82e5x=x'=y=\u221e\uff0c\u5219r1=|y'-y1|\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u82e5\u6846\u5b50\u4e2d\u53ea\u6709\u4e00\u4e2a\u6cb9\u6ef4\uff0c\u5219r=min(|x-x1|,|x'-x1|,|y-y1|,|y'-y1|)\u3002\u82e5\u6846\u5b50\u4e2d\u6709\u4e24\u4e2a\u6cb9\u6ef4\uff0c\u4e14x=x'=y=y'\uff0c\u5219r2=sqrt((x1-x2)^2+(y1-y2)^2)-r1\uff08\u5176\u4e2dsqrt((x1-x2)^2+(y1-y2)^2)\u8868\u793a\u4e24\u70b9\u8ddd\u79bb\uff0csqrt(x)\u8868\u793a\u6839\u53f7x\uff0c\u5e94\u7528\u52fe\u80a1\u5b9a\u7406\uff09\uff08\u4e5f\u5f88\u5bb9\u6613\u8bc1\u660e\uff09\u3002\n\u6240\u4ee5ri=min{|x-xi|,|x'-xi|,|y-yi|,|y'-yi|,sqrt((xi-xj)^2+(yi-yj)^2)-rj}\uff0c\u6c42ri\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u6c42\u6574\u4e2a\u6570\u5217r\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2)\uff0c\u8be5\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^n\u25aan^2)\uff0c\u4e0d\u4f1a\u8d85\u65f6\u3002\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<iostream>\n#include<stdio.h>\nusing namespace std;\nint n,i,order[7];\ndouble x1,y1,x2,y2,dot[7][2],area,r[7],answer=0;\nbool use[7]={};\ninline long double\nsqrt(long double __x)\n{ return __builtin_sqrtl(__x); }\nint DFS (int No,int last)\n{\n    order[No-1]=last;\n    use[last]=1;\n    if (No>n)\n    {\n             area=0;\n             for (int i=1;i<=n;i++)\n             {\n                 r[i]=min(min(max(x1-dot[order[i]][0],dot[order[i]][0]-x1),max(x2-dot[order[i]][0],dot[order[i]][0]-x2)),min(max(y1-dot[order[i]][1],dot[order[i]][1]-y1),max(y2-dot[order[i]][1],dot[order[i]][1]-y2)));\n                 for (int j=1;j<i;j++)\n                 r[i]=min(r[i],(double)sqrt((dot[order[i]][0]-dot[order[j]][0])*(dot[order[i]][0]-dot[order[j]][0])+(dot[order[i]][1]-dot[order[j]][1])*(dot[order[i]][1]-dot[order[j]][1]))-r[j]);\n                 r[i]=max(r[i],0.0);\n                 area+=r[i]*r[i]*3.1415926535;\n             }\n             answer=max(answer,area);\n    }\n    for (int i=1;i<=n;i++)\n    if (!use[i])\n    DFS(No+1,i);\n    use[last]=0;\n}\nint main ()\n{\n    cin>>n>>x1>>y1>>x2>>y2;\n    for (i=1;i<=n;i++)\n    cin>>dot[i][0]>>dot[i][1];\n    DFS(1,0);\n    printf(\"%.0f\",(max(x1-x2,x2-x1))*(max(y1-y2,y2-y1))-answer);\n    return 0;\n}\n\n```",
        "postTime": 1437399463,
        "uid": 4865,
        "name": "Mr_Li",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1378 \u3010\u6cb9\u6ef4\u6269\u5c55\u3011"
    },
    {
        "content": "\u9898\u76ee\u63cf\u8ff0\n\n\u5728\u4e00\u4e2an*m\u7684\u53ea\u5305\u542b0\u548c1\u7684\u77e9\u9635\u91cc\u627e\u51fa\u4e00\u4e2a\u4e0d\u5305\u542b0\u7684\u6700\u5927\u6b63\u65b9\u5f62\uff0c\u8f93\u51fa\u8fb9\u957f\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u8f93\u5165\u6587\u4ef6\u7b2c\u4e00\u884c\u4e3a\u4e24\u4e2a\u6574\u6570n,m\uff081<=n,m<=100\uff09\uff0c\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884cm\u4e2a\u6570\u5b57\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c0\u62161.\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u4e00\u4e2a\u6574\u6570\uff0c\u6700\u5927\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\n\n\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n\u8f93\u5165\u6837\u4f8b#1\uff1a \n\n4 4\n\n0 1 1 1\n\n1 1 1 0\n\n0 1 1 0\n\n1 1 0 1\n\n\u8f93\u51fa\u6837\u4f8b#1\uff1a \n\n2\n\n\u4e00\u9053\u7384\u5b66\u9898\u76ee\uff0c\u505a\u5b8c\u540e\u624d\u53d1\u73b0\u6807\u7b7e\u5c45\u7136\u662fdp\uff0c\n\u4f46\u662f\u5176\u5b9e\u66b4\u529b\u526a\u679d\u53ef\u4ee5\u8fc7\u3002\n\n\u8bf4\u8bf4\u66b4\u529b\u601d\u8def\n\n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u5b83\u7684\u503c\u4e3a0\uff0c\u5f88\u663e\u7136\u4e0d\u53ef\u80fd\u6784\u6210\u6b63\u65b9\u5f62\uff0c\u76f4\u63a5\u526a\u6389\n\n\u7136\u540e\u4ee5\u8fb9\u957f\u4e3a\u5faa\u73af\u53d8\u91cf\u4ece1\u679a\u4e3e\u5230\u6700\u5927\u53ef\u80fd\u6027\uff0c\u904d\u5386\u6b63\u65b9\u5f62\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u53d1\u73b0\u67090\u76f4\u63a5\u505c\u6b62\u8fd9\u4e2a\u70b9\u5faa\u73af\uff08\u56e0\u4e3a\u54ea\u6015\u662f\u66f4\u5927\u7684\u6b63\u65b9\u5f62\u4e5f\u4f1a\u5c06\u8fd9\u4e2a\u70b9\u5305\u8fdb\u53bb\uff0c\u4e0d\u53ef\u80fd\u6ee1\u8db3\u9898\u76ee\u9700\u6c42\uff09\n\n\u6700\u540e\u7384\u5b66\u526a\u679d\uff0c\u5373\u5982\u679c\u5269\u4e0b\u7684\u884c\u6570\u6bd4\u73b0\u5728\u7684\u6700\u5927\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u6765\u5f97\u5c0f\uff0c\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u53ef\u80fd\u518d\u6784\u6210\u4e00\u4e2a\u6700\u5927\u6b63\u65b9\u5f62\uff0c\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\n\n\u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u5c31\u662f\u8fb9\u957f\u6307\u7684\u662f\u6709\u51e0\u4e2a\u6570\u800c\u4e0d\u662f\u6570\u4e4b\u95f4\u6709\u591a\u5c11\u95f4\u9694\n\n\u9644ac\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Maxn=110;\nint square[Maxn][Maxn];\nint n,m,d,maxd=0;\nbool have_0=false;\nint max(int a,int b){return a>b?a:b;}\nint main(){\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t  for(int j=1;j<=m;++j)\n\t    scanf(\"%d\",&square[i][j]);\n\tfor(int i=1;i<=n;++i)\n\t  for(int j=1;j<=m;++j){\n\t  \tif(square[i][j]==0) continue;\n\t  \tfor(d=1;d<=min(m-j,n-i);d++){\n\t  \t    for(int z=i;z<=i+d;z++){\n\t  \t      for(int k=j;k<=j+d;k++)\n\t  \t        if(square[z][k]==0){\n\t  \t        \thave_0=true;\n\t  \t        \tbreak;\n\t\t\t     }\n\t  \t    \tif(have_0==true) break;\n\t\t\t  }\n\t\t\tif(have_0==false) maxd=max(d,maxd);\n\t\t\telse{have_0=false; break;}\n\t\t  }\n\t\tif(maxd>=n-i) break;\n\t  }\n\tprintf(\"%d\",maxd+1);\n\treturn 0;\n}\n```",
        "postTime": 1535952596,
        "uid": 106632,
        "name": "Rbrq",
        "ccfLevel": 0,
        "title": "P1378\u6700\u5927\u6b63\u65b9\u5f62"
    }
]