[
    {
        "content": "### \u524d\u8a00\n\n[\u5f31\u5316\u7248](https://www.luogu.com.cn/problem/P6560)\n\n\u6559\u7ec3\u8bb2\u7684\u9898\uff0c\u636e\u8bf4\u662f\u5f88\u597d\u7684\u7801\u529b\u9898\u548c\u535a\u5f08\u8bba\u9898\uff0c\u4e8e\u662f\u5c31\u6765\u5199\u4e00\u4e0b\u9898\u89e3\u52a0\u6df1\u5370\u8c61\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\n\n- `bfs`\n- \u62d3\u6251\u6392\u5e8f\n- \u535a\u5f08\u8bba\n\n------------\n\n## Solution\n\n\u535a\u5f08\u8bba\u6b63\u5e38\u601d\u8def\uff1a\u5b9a\u4e49\u52a8\u6001\u89c4\u5212\u6570\u7ec4\u8868\u793a\u8fd9\u4e2a\u70b9\u80fd\u5426\u5b8c\u6210\u67d0\u4e2a\u76ee\u6807\u3002\n\n\u4e8e\u662f\u6765\u5957\u4e00\u4e0b\u5b9a\u4e49\uff1a\u5b9a\u4e49 $f_{a,b,c,d,e,f}$ \u8868\u793a\u9ed1\u5b50\u5728 $(a,b)$ \u5904\uff0c\u7b2c\u4e00\u4e2a\u7ea2\u5b50\u5728 $(c,d)$ \u5904\uff0c\u7b2c\u4e8c\u4e2a\u7ea2\u5b50\u5728 $(e,f)$ \u65f6\u7684\u72b6\u6001\u3002\u770b\u7a7a\u95f4\u9650\u5236\uff1a$n,m \\leq 10$\uff0c\u4e0d\u4f1a\u8d85\u7a7a\u95f4\u3002\u4f46\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u53ef\u4ee5\u4f18\u5316\u6211\u4eec\u679a\u4e3e\u7684\u72b6\u6001\u6570\uff0c\u6211\u4eec\u53d1\u73b0 $f_{1,2,3,4,5,6}$ \u548c $f_{1,2,5,6,3,4}$ \u5176\u5b9e\u662f\u540c\u4e00\u79cd\u72b6\u6001\uff0c\u4e8e\u662f\u6211\u4eec\u51cf\u5c11\u679a\u4e3e\u6570\u91cf\uff0c\u5f3a\u884c\u8ba9\u7b2c\u4e00\u4e2a\u7ea2\u5b50\u7684\u5750\u6807\u5728\u7b2c\u4e8c\u4e2a\u7ea2\u5b50\u7684\u4e0a\u65b9\uff0c\u8fd9\u6837\u5c31\u4f1a\u51cf\u5c11\u72b6\u6001\u5197\u4f59\u3002\n\n\u6211\u4eec\u518d\u5b9a\u4e49\u4e00\u4e2a `pair` \u7c7b\u578b\u7684 $wp$ \u6570\u7ec4\uff0c$wp.x=1$ \u4ee3\u8868\u5728 $i$ \u72b6\u6001\u4e0b\u9ed1\u5b50\u4e3a\u5fc5\u80dc\u6001\uff0c$wp.x=0$ \u4ee3\u8868\u5728 $i$ \u72b6\u6001\u4e0b\u7ea2\u5b50\u4e3a\u5fc5\u80dc\u6001\uff0c\u6700\u540e\u5b9a\u4e49 $wp.x=+\\infty$ \u4ee3\u8868 $i$ \u8fd9\u4e2a\u72b6\u6001\u8fd8\u6ca1\u88ab\u904d\u5386\u8fc7\u3002$wp.y$ \u5219\u4ee3\u8868\u5230\u8fbe $i$ \u8fd9\u4e2a\u72b6\u6001\u9700\u8981\u7684\u6b65\u6570\u3002\u4e8e\u662f\u6211\u4eec\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u5b9a\u4e49 $ans$ \u4e3a\u76ee\u6807\u72b6\u6001\uff0c\u5f53 $wp_{ans}$ \u7684\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a $+\\infty$ \u65f6\uff0c\u8bf4\u660e\u662f\u5e73\u5c40\u3002\u5f53 $wp_{ans}$ \u7684\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a $1$ \u65f6\uff0c\u8bf4\u660e\u9ed1\u5b50\u80dc\u3002\u5426\u5219\u7ea2\u5b50\u80dc\u3002\n\n\u5b9a\u4e49\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u4fbf\u5f00\u59cb bfs\uff0c\u627e\u5230\u9012\u63a8\u8d77\u70b9\uff08\u9ed1\u5b50\u5fc5\u80dc\u7684\u70b9\uff09\uff0c\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\u8981\u4e48\u5230\u8fbe\u4e86\u5e95\u7ebf\uff0c\u8981\u4e48\u5403\u6389\u4e86\u7ea2\u5b50\uff0c\u8981\u4e48\u7ea2\u5b50\u65e0\u8def\u53ef\u8d70\u3002\u7136\u540e\u6c42\u51fa\u6bcf\u4e00\u4e2a\u72b6\u6001\u88ab\u54ea\u4e00\u4e2a\u72b6\u6001\u66f4\u65b0\uff0c\u8fd9\u91cc\u5efa\u7acb\u53cd\u5411\u8fb9\uff0c\u4fdd\u5b58\u4e0b\u6765\u5907\u7528\u3002\n\n\u63a5\u4e0b\u6765\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u548c\u535a\u5f08\u8bba\u7684\u90e8\u5206\uff0c\u5047\u5982\u6211\u4eec\u53d6\u51fa\u6765\u7684\u70b9\u4e3a $u$\uff0c\u5e76\u4e14 $u$ \u662f\u5fc5\u80dc\u6001\uff0c\u8bbe $u$ \u80fd\u5230\u8fbe $v$\uff0c\u8bf4\u660e $v$ \u4e00\u5b9a\u4e3a\u5fc5\u8d25\u6001\u3002\n\n\u8bc1\u660e\uff1a\u56e0\u4e3a\u6211\u4eec\u5efa\u7acb\u7684\u662f\u53cd\u5411\u8fb9\uff0c\u6240\u4ee5\u5176\u5b9e\u662f $v$ \u53bb\u66f4\u65b0 $u$\uff0c\u53ea\u6709 $v$ \u4e3a\u5fc5\u8d25\u6001\u65f6\uff0c$u$ \u624d\u662f\u5fc5\u80dc\uff0c\u6240\u4ee5\u5f53 $u$ \u5fc5\u80dc\u65f6\uff0c$v$ \u5fc5\u8d25\u3002\n\n\u6ce8\u610f\uff0c\u5f53 $v$ \u4e3a $+\\infty$ \u65f6\uff0c\u6211\u4eec\u9700\u8981\u628a $v$ \u5b9a\u4e49\u4e3a\u5fc5\u80dc\u6001\u3002\n\n\u5177\u4f53\u7ec6\u8282\u53c2\u8003\u4ee3\u7801\u3002\n\n [Code](https://www.luogu.com.cn/paste/pln30uv1)\n\n\n",
        "postTime": 1681981024,
        "uid": 706523,
        "name": "zhengdongwen",
        "ccfLevel": 0,
        "title": "P9169 \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u5982\u679c\u53ea\u5b58\u4e09\u4e2a\u70b9\u7684\u4f4d\u7f6e\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\uff0c\u4e8e\u662f\u8003\u8651\u8bbe\u4e00\u4e2a $dp_{x1,y1,x2,y2,x3,y3}$ \u5206\u522b\u8868\u793a\u4e09\u70b9\u5750\u6807\u4e3a\u4e0b\u6807\u7684\u83b7\u80dc\u72b6\u6001\uff0c\u518d\u5f00\u4e2a\u6570\u7ec4\u5b58\u4e00\u4e0b\u6b65\u6570\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u8f6c\u79fb\uff0c\u53d1\u73b0\u9ed1\u70b9\u5728\u7b2c\u4e00\u884c\uff0c\u4ee5\u53ca\u4e24\u70b9\u76f8\u649e\u8fd9\u79cd\u72b6\u6001\u662f\u5df2\u77e5\u80dc\u8d1f\u7684\u72b6\u6001\uff0c\u4e8e\u662f\u53ef\u4ee5\u4ece\u8fd9\u4e9b\u72b6\u6001\u5012\u7740\u8f6c\u79fb\u3002\n\n\u8bf4\u5230\u8fd9\u505a\u6cd5\u4e5f\u5c31\u5dee\u4e0d\u591a\u6709\u4e86\uff0c\u5148\u5229\u7528 bfs \u641c\u51fa\u6240\u6709\u53ef\u5230\u8fbe\u7684\u72b6\u6001\uff08\u5c3d\u91cf\u522b\u7528 dfs \u5e38\u6570\u592a\u5927\u4e86\uff09\u5e76\u5012\u7740\u8fde\u8fb9\uff0c\u7136\u540e\u8dd1\u4e00\u4e2a\u7c7b\u4f3c\u62d3\u6251\u7684\u4e1c\u897f\uff0c\u5177\u4f53\u6765\u8bb2\uff0c\u5c31\u662f\u63a8\u5230\u961f\u5217\u7684\u6761\u4ef6\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u8fd9\u4e2a\u4eba\u5fc5\u80dc\uff0c\u4e00\u79cd\u662f\u5165\u5ea6\u5df2\u7ecf\u4e3a $0$\u3002\u6700\u540e\u5982\u679c\u6ca1\u6709\u8dd1\u5230\u8d77\u59cb\u72b6\u6001\u5c31\u8f93\u51fa `Tie`\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5bf9\u5462\uff1f\u5176\u5b9e\u8fd9\u6837\u505a\u7b49\u4ef7\u4e8e\u63a8\u5165\u7684\u70b9\u72b6\u6001\u4e00\u5b9a\u786e\u5b9a\uff0c\u8981\u4e48\u5df2\u7ecf\u786e\u5b9a\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u8981\u4e48\u8d70\u6240\u6709\u51fa\u8fb9\u90fd\u662f\u8f93\u7684\uff0c\u800c\u6700\u540e\u72b6\u6001\u4e0d\u786e\u5b9a\u7684\u90a3\u4e9b\u70b9\u53ea\u8981\u4e0d\u8d70\u5fc5\u8d25\u8fb9\u5c31\u597d\u4e86\u3002\n\n\u4e00\u5b9a\u8981\u6ce8\u610f\u4e0d\u80fd\u8ba9\u4e24\u4e2a\u7ea2\u7684\u649e\u4e00\u8d77\uff01\uff01\uff01\uff01\uff08\u6211\u8003\u573a\u5c31\u8fd9\u91cc\u6302\u4e86\u3002\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace Wilson_Inversion{void main();}\nint main(){\n    Wilson_Inversion::main();\n    return 0;\n}\nnamespace Wilson_Inversion{\nconst int inf=0x3f3f3f3f;\nint id,T,n,m,dd[4][2]={{0,1},{0,-1},{-1,0},{1,0}},p[3][2],deg[1111120],mn[1111120];\nbool vis[1111120],win[1111120];\nchar s[20][20];\nvector<int>ve[1111120];\nint hss[11][11][11][11][11][11];\nbool ins[1111120];\nint hs(int a,int b,int c,int d,int e,int f){\n    return a*100000+b*10000+c*1000+d*100+e*10+f;\n}\ntemplate<typename T>struct queue{\n    T a[2000010];\n    int l,r;\n    queue(){l=1,r=0;}\n    void push(T x){\n        a[++r]=x;\n    }\n    void pop(){\n        ++l;\n    }\n    bool empty(){\n        return l>r;\n    }\n    T front(){\n        return a[l];\n    }\n    void clear(){\n        l=1,r=0;\n    }\n};\nqueue<int>q;\nstruct node{\n\tint a,b,c,d,e,f;\n\tbool g;\n\tnode(){}\n\tnode(int _a,int _b,int _c,int _d,int _e,int _f,bool _g):a(_a),b(_b),c(_c),d(_d),e(_e),f(_f),g(_g){}\n};\nqueue<node>qq;\nvoid bfs(){\n\tqq.push(node(p[2][0],p[2][1],p[0][0],p[0][1],p[1][0],p[1][1],0));\n\tvis[hss[p[2][0]][p[2][1]][p[0][0]][p[0][1]][p[1][0]][p[1][1]]]=true;\n\twhile(!qq.empty()){\n\t\tnode u=qq.front();\n\t\tqq.pop();\n\t\tint a=u.a,b=u.b,c=u.c,d=u.d,e=u.e,f=u.f;\n\t\tbool g=u.g;\n\t\tint tt=hss[a][b][c][d][e][f];\n\t\tdeg[tt]=0;\n\t\tif(g){\n\t\t\tif((a==c&&b==d)||(a==e&&b==f)){\n\t\t\t\tq.push(tt),ins[tt]=true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbool ti=0;\n\t\t\tfor(int i=0;i<3;++i){\n\t            int ta=a+dd[i][0],tb=b+dd[i][1];\n\t            if(ta>0&&ta<=n&&tb>0&&tb<=m&&s[ta][tb]!='#'){\n\t                ve[hss[ta][tb][c][d][e][f]].push_back(tt),++deg[tt];\n\t                if(!vis[hss[ta][tb][c][d][e][f]]){\n\t                \tvis[hss[ta][tb][c][d][e][f]]=true;\n\t                \tqq.push(node(ta,tb,c,d,e,f,g^1));\n\t                }\n\t                ti=1;\n\t            }\n\t        }\n\t        if(!ti)q.push(tt),ins[tt]=true;\n\t\t}else{\n\t\t\tif((a==c&&b==d)||(a==e&&b==f)||a==1){\n\t            q.push(tt),ins[tt]=true;\n\t            continue;\n\t        }\n\t        bool ti=0;\n\t        for(int i=0;i<4;++i){\n\t            int tc=c+dd[i][0],td=d+dd[i][1];\n\t            if(tc>0&&tc<=n&&td>0&&td<=m&&s[tc][td]!='#'&&(tc!=e||td!=f)){\n\t                ve[hss[a][b][tc][td][e][f]].push_back(hss[a][b][c][d][e][f]),++deg[tt];\n\t                if(!vis[hss[a][b][tc][td][e][f]]){\n\t                \tvis[hss[a][b][tc][td][e][f]]=true;\n\t                \tqq.push(node(a,b,tc,td,e,f,g^1));\n\t                }\n\t                ti=1;\n\t            }\n\t        }\n\t        for(int i=0;i<4;++i){\n\t            int te=e+dd[i][0],tf=f+dd[i][1];\n\t            if(te>0&&te<=n&&tf>0&&tf<=m&&s[te][tf]!='#'&&(c!=te||d!=tf)){\n\t                ve[hss[a][b][c][d][te][tf]].push_back(hss[a][b][c][d][e][f]),++deg[tt];\n\t                if(!vis[hss[a][b][c][d][te][tf]]){\n\t                \tvis[hss[a][b][c][d][te][tf]]=true;\n\t                \tqq.push(node(a,b,c,d,te,tf,g^1));\n\t                }\n\t                ti=1;\n\t            }\n\t        }\n\t        if((!ti))q.push(tt),ins[tt]=true;\n\t\t}\n\t}\n}\nvoid solve(){\n    q.clear(),qq.clear();\n    for(int i=1;i<=1111111;++i)ve[i].clear();\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i)scanf(\"%s\",s[i]+1);\n    memset(vis,0,sizeof(vis));\n    bool mark=0;\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=m;++j){\n            if(s[i][j]=='X'){\n                p[2][0]=i,p[2][1]=j;\n            }else if(s[i][j]=='O'){\n                p[mark][0]=i,p[mark][1]=j,mark=1;\n            }\n        }\n    }\n    memset(ins,0,sizeof(ins));\n    bfs();\n    memset(win,0,sizeof(win));\n    memset(mn,0,sizeof(mn));\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        if(hss[p[2][0]][p[2][1]][p[0][0]][p[0][1]][p[1][0]][p[1][1]]==u)break;\n        for(int i:ve[u]){\n            if(!win[u]){\n                if(!win[i]){\n                    win[i]=true;\n                    mn[i]=mn[u]+1;\n                    ins[i]=true;\n                    q.push(i);\n                }else{\n                    mn[i]=min(mn[i],mn[u]+1);\n                    --deg[i];\n                }\n            }else{\n                if(!win[i]){\n                    mn[i]=max(mn[i],mn[u]+1);\n                    --deg[i];\n                    if(!deg[i]){\n                        ins[i]=true;\n                        q.push(i);\n                    }\n                }\n                else --deg[i];\n            }\n        }\n    }\n    if(!ins[hs(p[2][0],p[2][1],p[0][0],p[0][1],p[1][0],p[1][1])])puts(\"Tie\");\n    else if(win[hs(p[2][0],p[2][1],p[0][0],p[0][1],p[1][0],p[1][1])])printf(\"Red %d\\n\",mn[hs(p[2][0],p[2][1],p[0][0],p[0][1],p[1][0],p[1][1])]);\n    else printf(\"Black %d\\n\",mn[hs(p[2][0],p[2][1],p[0][0],p[0][1],p[1][0],p[1][1])]);\n}\nvoid main(){\n    // freopen(\"zu.in\",\"r\",stdin);\n    // freopen(\"zu.out\",\"w\",stdout);\n    scanf(\"%d%d\",&id,&T);\n    for(int a=1;a<=10;++a){\n        for(int b=1;b<=10;++b){\n            for(int c=1;c<=10;++c){\n                for(int d=1;d<=10;++d){\n                    for(int e=1;e<=10;++e){\n                        for(int f=1;f<=10;++f)hss[a][b][c][d][e][f]=hs(a,b,c,d,e,f);\n                    }\n                }\n            }\n        }\n    }\n    while(T--)solve();\n    return;\n}\n}\n```\n",
        "postTime": 1680505424,
        "uid": 576737,
        "name": "Wilson_Inversion",
        "ccfLevel": 7,
        "title": "P9169 [\u7701\u9009\u8054\u8003 2023] \u8fc7\u6cb3\u5352 \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u662f\u7ecf\u5178\u7684\u6709\u5411\u56fe\u535a\u5f08\u95ee\u9898\u3002\u6ce8\u610f\u5230 $n,m\\leq 10$\uff0c\u6240\u4ee5\u672c\u9898\u4e09\u4e2a\u68cb\u5b50\u7684\u4f4d\u7f6e $(x_1,y_1),(x_2,y_2),(x_3,y_3)$ \u4ee5\u53ca\u5148\u540e\u624b\u60c5\u51b5\u7684\u603b\u72b6\u6001\u6570\u7ea6\u4e3a $2(nm)^3=2\\times 10^6$ \u7ea7\u522b\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u89e3\u51b3\u4e00\u4e2a\u66f4\u5f3a\u7684\u95ee\u9898\uff1a\u5bf9\u4e8e\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u521d\u59cb\u4f4d\u4e8e\u72b6\u6001 $s$\uff0c\u6bcf\u6b21\u53ef\u4ee5\u79fb\u52a8\u4e00\u6b65\uff0c\u4e0d\u80fd\u79fb\u52a8\u8005\u8f93\uff0c\u89c4\u5219\u548c\u539f\u9898\u76f8\u540c\uff0c\u6c42\u80dc\u8d1f\u60c5\u51b5\u548c\u5bf9\u5e94\u7684\u79fb\u52a8\u6b65\u6570\u3002\n\n\u5148\u8003\u8651\u89e3\u51b3\u80dc\u8d1f\u60c5\u51b5\u7684\u95ee\u9898\uff1a\n\n> \u89c2\u5bdf $1$\uff1a\u4e00\u4e2a\u72b6\u6001\u4e3a\u5fc5\u80dc\u6001\u5f53\u4e14\u4ec5\u5f53\u5176\u540e\u7ee7\u72b6\u6001\u5b58\u5728\u5fc5\u8d25\u6001\uff0c\u4e00\u4e2a\u72b6\u6001\u4e3a\u5fc5\u8d25\u6001\u5f53\u4e14\u4ec5\u5f53\u5176\u6240\u6709\u540e\u7ee7\u90fd\u662f\u5fc5\u80dc\u6001\uff0c\u5426\u5219\u4e3a\u5e73\u5c40\u3002\n\n\u636e\u6b64\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u4e00\u4e2a\u57fa\u4e8e BFS \u7684\u7b97\u6cd5\uff1a\u6bcf\u6b21\u4ec5\u628a\u975e\u5e73\u5c40\u72b6\u6001\u538b\u8fdb\u961f\u5217\uff0c\u82e5\u5f53\u524d\u72b6\u6001\u4e3a\u5fc5\u8d25\u6001\uff0c\u5219\u5c06\u5b83\u7684\u6240\u6709\u524d\u9a71\u90fd\u6807\u8bb0\u4e3a\u5fc5\u80dc\u6001\uff0c\u5e76\u52a0\u5165\u961f\u5217\u3002\u82e5\u5f53\u524d\u72b6\u6001\u4e3a\u5fc5\u80dc\u6001\uff0c\u5219\u68c0\u67e5\u5b83\u7684\u67d0\u4e2a\u524d\u9a71\u7684\u6240\u6709\u540e\u7ee7\u662f\u5426\u5168\u90e8\u88ab\u8bbf\u95ee\u4e14\u4e3a\u5fc5\u80dc\u6001\uff0c\u82e5\u662f\uff0c\u5219\u628a\u8fd9\u4e2a\u524d\u9a71\u6807\u8bb0\u4e3a\u5fc5\u8d25\u6001\uff0c\u5e76\u52a0\u5165\u961f\u5217\u3002BFS \u5b8c\u6210\u540e\uff0c\u6240\u6709\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u7684\u7ed3\u70b9\u4e3a\u5e73\u5c40\u3002\u5bb9\u6613\u5f97\u5230\u4e00\u4e2a $\\mathcal{O}((nm)^3)$ \u7684\u5b9e\u73b0\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u64cd\u4f5c\u6b65\u6570\u7684\u95ee\u9898\uff0c\u89c2\u5bdf\u4e0a\u8ff0 BFS \u8fc7\u7a0b\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n> \u89c2\u5bdf $2$\uff1a\u4e00\u4e2a\u72b6\u6001\u82e5\u4e3a\u5fc5\u80dc\u6001\uff0c\u5219\u5b83\u4e00\u5b9a\u88ab\u5b83\u5728\u961f\u5217\u4e2d\u9996\u6b21\u51fa\u73b0\u7684\u540e\u7ee7\u66f4\u65b0\u6b65\u6570\u3002\u4e00\u4e2a\u72b6\u6001\u82e5\u4e3a\u5fc5\u8d25\u6001\uff0c\u5219\u5b83\u4e00\u5b9a\u88ab\u5b83\u5728\u961f\u5217\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u540e\u7ee7\u66f4\u65b0\u6b65\u6570\u3002\n\n\u8bc1\u660e\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a BFS \u8fc7\u7a0b\u4e2d\u5728\u961f\u5217\u4e2d\u8d8a\u665a\u51fa\u73b0\u7684\u7ed3\u70b9\u6b65\u6570\u8d8a\u5927\u3002\n\n\u56de\u5230\u539f\u95ee\u9898\uff0c\u53ef\u4ee5\u53d1\u73b0\u539f\u9898\u5df2\u7ecf\u88ab\u5b8c\u5168\u5272\u88c2\u6210\u5efa\u56fe\u548c BFS \u4e24\u90e8\u5206\uff0c\u6a21\u62df\u5373\u53ef\u3002\n\n\u4e0b\u9762\u662f\u8003\u573a\u4ee3\u7801\u3002\u7b14\u8005\u5728\u8003\u573a\u4e0a\u5728 $30\\min$ \u4ee5\u5185\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u601d\u8def\uff0c\u6548\u7387\u5e94\u8be5\u8fd8\u662f\u5f88\u9ad8\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define db double\n#define ull unsigned long long\n#define pb push_back\n#define mp make_pair\n#define pii pair<int, int>\n#define FR first\n#define SE second\n#define il inline\n#define re register\nusing namespace std;\ninline int read() {\n    int x = 0; bool op = false;\n    char c = getchar();\n    while(!isdigit(c))op |= (c == '-'), c = getchar();\n    while(isdigit(c))x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\n    return op ? -x : x;\n}\nconst int N = 15;\nconst int MAXN = 2e6 + 10;\nconst int dx[4] = {-1, 0, 0, 1};\nconst int dy[4] = {0, -1, 1, 0};\nint SID, n, m, tot, etot;\nchar s[N][N];\nint id[N][N][N][N][N][N][2];\nint vis[MAXN], f[MAXN], g[MAXN], in[MAXN];\nint head[MAXN], to[MAXN << 3], nxt[MAXN << 3];\nvoid addedge(int u, int v) {to[++etot] = v; nxt[etot] = head[u]; head[u] = etot;}\nil bool chk(int a, int b, int x, int y, int z, int w) {\n    if(a < 1 || a > n || b < 1 || b > m)return false;\n    if(x < 1 || x > n || y < 1 || y > m)return false;\n    if(z < 1 || z > n || w < 1 || w > m)return false;\n    if(s[a][b] == '#' || s[x][y] == '#' || s[z][w] == '#')return false;\n    if(x == z && y == w)return false;\n    return true;\n}\nint st;\nil void bfs() {\n    queue<int> q;\n    for(re int i = 0; i < tot; i++)if(vis[i])q.push(i);\n    while(q.empty() == false) {\n        int u = q.front(); q.pop();\n        if(u == st)return ;\n        for(int i = head[u]; i; i = nxt[i]) {\n            int v = to[i];\n            if(vis[v] == false) {\n                in[v]--;\n                if(g[u] == 0) {\n                    g[v] = 1; f[v] = f[u] + 1;\n                    vis[v] = true; q.push(v);\n                }\n                else if(in[v] == 0) {\n                    g[v] = 0; f[v] = f[u] + 1; \n                    vis[v] = true; q.push(v);\n                }\n            }\n        }\n    }\n    return ;\n}\nil void clr() {\n    for(re int i = 0; i < tot; i++) {\n        vis[i] = in[i] = f[i] = g[i] = head[i] = 0;\n    }\n    tot = etot = 0;\n    return ;\n}\nil void solve() {\n    queue<int> q;\n    n = read(); m = read();\n    for(re int i = 1; i <= n; i++)scanf(\"%s\", s[i] + 1);\n    int sa = 0, sb = 0, sx = 0, sy = 0, sz = 0, sw = 0;\n    for(re int i = 1; i <= n; i++)for(re int j = 1; j <= m; j++) {\n        if(s[i][j] == 'X')sa = i, sb = j;\n        if(s[i][j] == 'O') {\n            if(sx == 0 && sy == 0)sx = i, sy = j;\n            else sz = i, sw = j;\n        }\n    }\n    for(re int a = 1; a <= n; a++)for(re int b = 1; b <= m; b++) {\n        for(re int x = 1; x <= n; x++)for(re int y = 1; y <= m; y++) {\n            for(re int z = 1; z <= n; z++)for(re int w = 1; w <= m; w++) {\n                if(chk(a, b, x, y, z, w) == false)continue;\n                id[a][b][x][y][z][w][0] = tot++;\n                id[a][b][x][y][z][w][1] = tot++;\n            }\n        }\n    }\n    st = id[sa][sb][sx][sy][sz][sw][0];\n    for(re int a = 1; a <= n; a++)for(re int b = 1; b <= m; b++) {\n        for(re int x = 1; x <= n; x++)for(re int y = 1; y <= m; y++) {\n            for(re int z = 1; z <= n; z++)for(re int w = 1; w <= m; w++) {\n                if(chk(a, b, x, y, z, w) == false)continue;\n                int cur = id[a][b][x][y][z][w][0];\n                for(int i = 0; i < 4; i++) {\n                    int nx = x + dx[i], ny = y + dy[i];\n                    if(chk(a, b, nx, ny, z, w)) {\n                        addedge(id[a][b][nx][ny][z][w][1], cur);\n                        in[cur]++;\n                    }\n                    nx = z + dx[i]; ny = w + dy[i];\n                    if(chk(a, b, x, y, nx, ny)) {\n                        addedge(id[a][b][x][y][nx][ny][1], cur);\n                        in[cur]++;\n                    }\n                }\n                for(int i = 0; i < 3; i++) {\n                    int nx = a + dx[i], ny = b + dy[i];\n                    if(chk(nx, ny, x, y, z, w)) {\n                        addedge(id[nx][ny][x][y][z][w][0], cur ^ 1);\n                        in[cur ^ 1]++;\n                    }\n                }\n                if(a == 1) {\n                    vis[cur] = vis[cur ^ 1] = true;\n                    g[cur] = 0; g[cur ^ 1] = 1;\n                    f[cur] = f[cur ^ 1] = 0;\n                }\n                else if((a == x && b == y) || (a == z && b == w)) {\n                    vis[cur] = vis[cur ^ 1] = true;\n                    g[cur] = g[cur ^ 1] = 0;\n                    f[cur] = f[cur ^ 1] = 0;\n                }\n                else {\n                    if(in[cur] == 0)vis[cur] = true, g[cur] = f[cur] = 0;\n                    if(in[cur ^ 1] == 0)vis[cur ^ 1] = true, g[cur ^ 1] = f[cur ^ 1] = 0;\n                }\n            }\n        }\n    }\n    bfs();\n    if(vis[st] == false)puts(\"Tie\");\n    else if(g[st] == 1)printf(\"Red %d\\n\", f[st]);\n    else printf(\"Black %d\\n\", f[st]);\n    return clr(), void();\n}\nint main() {\n    freopen(\"zu.in\", \"r\", stdin);\n    freopen(\"zu.out\", \"w\", stdout);\n    SID = read(); int test = read();\n    while(test--)solve();\n    return 0;\n}\n```\n\n\u4f46\u662f luogu TLE \u4e00\u4e2a\u70b9\u662f\u600e\u4e48\u56de\u4e8b\u5462\uff08\n\n",
        "postTime": 1681469746,
        "uid": 682934,
        "name": "yllcm",
        "ccfLevel": 0,
        "title": "Solution-P9169"
    },
    {
        "content": "\u9898\u5982\u5176\u540d\uff0c\u8003\u573a\u4e0a\u628a\u6211\u9001\u5352\u4e86\u3002\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n- bfs\n- \u8db3\u591f\u7684\u7801\u529b\u548c\u8010\u5fc3\u3002\n\n\n### Solution\n\u89c2\u5bdf\u5230 $1\\le n,m\\le 10$\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e24\u4f4d\u6574\u6570\u8868\u793a\u4e00\u4e2a\u68cb\u5b50\u7684\u5750\u6807\u3002\u5c06\u4e09\u4e2a\u68cb\u5b50\u5168\u90e8\u52a0\u5165\u72b6\u6001\uff0c\u72b6\u6001\u6570\u6700\u591a\u53ea\u6709 $10^6$\uff0c\u65f6\u95f4\u4e0a\u5141\u8bb8\u6211\u4eec\u66b4\u529b\u641c\u7d22\u3002\n\n\u6ce8\u610f\u5230\u72b6\u6001\u95f4\u7684\u8f6c\u79fb\u53ef\u80fd\u6210\u73af\uff0c\u800c\u5728\u73af\u4e0a\u7684\u72b6\u6001\u5e76\u4e0d\u4e00\u5b9a\u90fd\u4e3a\u5e73\u5c40\u3002dfs \u96be\u4ee5\u5904\u7406\uff0c\u6211\u4eec\u628a\u72b6\u6001\u5efa\u56fe\u540e\u4f7f\u7528 bfs \u8f6c\u79fb\u7b54\u6848\u3002\n\n\u5177\u4f53\u5730\uff0c\u7531\u4e8e\u7ec8\u6b62\u72b6\u6001\u7684\u80dc\u8d1f\u5df2\u77e5\uff0c\u53ef\u4ee5\u4ece\u7ec8\u6b62\u72b6\u6001\u5012\u5e8f\u8f6c\u79fb\u3002\u53cd\u8fc7\u6765\u5efa\u56fe\uff0c\u8003\u8651\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684\u8f6c\u79fb\u65b9\u5f0f\uff0c\u4e00\u4e2a\u70b9 $u$ \u53ef\u4ee5\u88ab\u52a0\u5165\u961f\u5217\uff0c\u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4e4b\u4e00\uff1a\n\n- \u70b9 $u$ \u53ef\u4ee5\u5230\u8fbe\u4e00\u4e2a\u5df2\u786e\u5b9a\u7684\u5fc5\u8d25\u6001\uff0c\u5373 $u$ \u5fc5\u80dc\uff1b\n- \u70b9 $u$ \u6240\u6709\u53ef\u8fbe\u7684\u70b9\u72b6\u6001\u5747\u5df2\u786e\u5b9a\uff0c\u4e14\u5168\u90e8\u5fc5\u80dc\uff0c\u5219 $u$ \u5fc5\u8d25\u3002\n\n\u82e5\u6700\u540e\u8d77\u59cb\u70b9\u7684\u72b6\u6001\u4ecd\u672a\u88ab\u66f4\u65b0\uff0c\u5219\u5e73\u5c40\u3002\n\n### Tips\n\n- \u6ce8\u610f\u5224\u4e24\u4e2a\u7ea2\u5b50\u4e0d\u80fd\u76f8\u649e\u3002\n- \u53ef\u4ee5\u8bc1\u660e\u82e5\u68cb\u5b50\u72b6\u6001\u7ed9\u5b9a\uff0c\u5f53\u524d\u5c40\u9762\u7684\u884c\u52a8\u65b9\u4e5f\u552f\u4e00\u786e\u5b9a\u3002\u53ef\u4ee5\u5728\u7b2c\u4e00\u8f6e bfs \u5efa\u56fe\u4e2d\u8bb0\u5f55\u6bcf\u4e2a\u5c40\u9762\u7684\u5148\u540e\u624b\u60c5\u51b5\uff0c\u4ece\u800c\u538b\u6389\u7b2c\u4e03\u7ef4\u72b6\u6001\u3002\n- \u8bbe\u4e24\u679a\u7ea2\u5b50\u4e3a $(a,b),(c,d)$\uff0c\u663e\u7136\u5b83\u4eec\u7b49\u4ef7\uff0c\u53ef\u4ee5\u94a6\u5b9a $a\\le c$ \u4ee5\u51cf\u5c0f\u4e00\u500d\u5e38\u6570\u3002\n- \u4f3c\u4e4e\u76f4\u63a5\u5199\u5e76\u4e0d\u5361\u5e38\uff0c\u6240\u4ee5\u4ee3\u7801\u6ca1\u52a0\u4e0a\u8ff0\u7b2c\u4e09\u6761\u4f18\u5316\uff08\n- \u4e00\u5b9a\u8981\u5168\u90e8\u60f3\u6e05\u695a\u518d\u5f00\u59cb\u5199\u3002\n\n### Code\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\nusing namespace std;\nil int read()\n{\n    int xr=0,F=1; char cr=getchar();\n    while(cr<'0'||cr>'9') {if(cr=='-') F=-1;cr=getchar();}\n    while(cr>='0'&&cr<='9')\n        xr=(xr<<3)+(xr<<1)+(cr^48),cr=getchar();\n    return xr*F;\n}\nconst int N=3e6+5,M=15;\nint id,T,n,m;\nint hsh(int a,int b,int c,int d,int x,int y) {return y+x*10+d*100+c*1000+b*10000+a*100000;}\nstruct edge{\n    int nxt,to;\n}e[N<<2];\nint head[N],cnt;\nil void add(int u,int v) {e[++cnt]={head[u],v};head[u]=cnt;}\nint bel[N],vis[N],in[N];\nstruct qwq{\n    int w,stp;\n}ans[N];\nstruct node{\n    int op,a,b,c,d,x,y;\n};\nchar mp[M][M];\nint dx[4]={-1,0,0,1};\nint dy[4]={0,1,-1,0};\nvoid bfs(node s,int h) //\u641c\u51fa\u6240\u6709\u53ef\u8fbe\u72b6\u6001\uff0c\u5efa\u56fe\n{\n    memset(vis,0,sizeof(vis)),memset(in,0,sizeof(in));\n    memset(head,0,sizeof(head)),cnt=0;\n    queue<node> q;\n    q.push(s); vis[h]=1;\n    while(!q.empty())\n    {\n        node nw=q.front(); q.pop();\n        int op=nw.op,a=nw.a,b=nw.b,c=nw.c,d=nw.d,x=nw.x,y=nw.y;\n        if(x==0||(a==x&&b==y)||(c==x&&d==y)) continue;\n        int qwq=hsh(a,b,c,d,x,y);\n        bel[qwq]=op;\n        if(op)\n        {\n            for(int w=0;w<4;w++) //\u7ea2\u68cb 1 \u79fb\u52a8\n            {\n                int na=a+dx[w],nb=b+dy[w];\n                if(na<0||na>=n||nb<0||nb>=m) continue;\n                if(mp[na][nb]=='#'||(na==c&&nb==d)) continue;\n                int pwp=hsh(na,nb,c,d,x,y);\n                add(pwp,qwq); in[qwq]++;\n                if(!vis[pwp]) vis[pwp]=1,q.push({op^1,na,nb,c,d,x,y});\n            }\n            for(int w=0;w<4;w++) //\u7ea2\u68cb 2 \u79fb\u52a8\n            {\n                int nc=c+dx[w],nd=d+dy[w];\n                if(nc<0||nc>=n||nd<0||nd>=m) continue;\n                if(mp[nc][nd]=='#'||(nc==a&&nd==b)) continue;\n                int pwp=hsh(a,b,nc,nd,x,y);\n                add(pwp,qwq); in[qwq]++;\n                if(!vis[pwp]) vis[pwp]=1,q.push({op^1,a,b,nc,nd,x,y});\n            }\n        }\n        else\n        {\n            for(int w=0;w<3;w++) //\u9ed1\u68cb\u79fb\u52a8\n            {\n                int nx=x+dx[w],ny=y+dy[w];\n                if(nx<0||nx>=n||ny<0||ny>=m||mp[nx][ny]=='#') continue;\n                int pwp=hsh(a,b,c,d,nx,ny);\n                add(pwp,qwq); in[qwq]++;\n                if(!vis[pwp]) vis[pwp]=1,q.push({op^1,a,b,c,d,nx,ny});\n            }\n        }\n    }\n}\nbool vs[N];\nvoid solve()//\u62d3\u6251\u8f6c\u79fb\u7b54\u6848\n{\n    memset(vs,0,sizeof(vs)),memset(ans,0,sizeof(ans));\n    queue<int> q;\n    for(int i=0;i<1e6;i++) \n    {\n        if(vis[i]&&!in[i]) \n        {\n            ans[i]={0,0},q.push(i);\n            vs[i]=1;\n        }\n    }\n    while(!q.empty())\n    {\n        int now=q.front(); q.pop();\n        for(int i=head[now];i;i=e[i].nxt)\n        {\n            int v=e[i].to;\n            if(ans[now].w==0)\n            {\n                if(!ans[v].w) ans[v].w=1,ans[v].stp=ans[now].stp+1;\n                else ans[v].stp=min(ans[v].stp,ans[now].stp+1);\n                if(!vs[v]) vs[v]=1,q.push(v);\n            }\n            else \n            {\n                in[v]--;\n                if(!ans[v].w) ans[v].stp=max(ans[v].stp,ans[now].stp+1);\n                if(!in[v]&&!vs[v]) {vs[v]=1,q.push(v);}\n            }\n        }\n    }\n}\nint main()\n{\n    id=read(),T=read();\n    while(T--)\n    {\n        n=read(),m=read();\n        int a=-1,b=0,c=0,d=0,x=0,y=0;\n        for(int i=0;i<n;i++)\n            for(int j=0;j<m;j++)\n            {\n                cin>>mp[i][j];\n                if(mp[i][j]=='X') x=i,y=j;\n                else if(mp[i][j]=='O')\n                {\n                    if(a==-1) a=i,b=j;\n                    else c=i,d=j;\n                }\n            }\n        bfs({1,a,b,c,d,x,y},hsh(a,b,c,d,x,y));\n        solve();\n        qwq res=ans[hsh(a,b,c,d,x,y)];\n        if(res.w) printf(\"Red %d\\n\",res.stp);\n        else if(vs[hsh(a,b,c,d,x,y)]) printf(\"Black %d\\n\",res.stp);\n        else printf(\"Tie\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1681973508,
        "uid": 234074,
        "name": "\u6a31\u96ea\u55b5",
        "ccfLevel": 7,
        "title": "P9169 [\u7701\u9009\u8054\u8003 2023] \u8fc7\u6cb3\u5352"
    },
    {
        "content": "\u6709\u5411\u56fe\u535a\u5f08\u95ee\u9898\u3002\n\n\u8003\u8651\u7528\u516d\u5143\u7ec4 $(x_{r1},y_{r1},x_{r2},y_{r2},x_b,y_b)$ \u63cf\u8ff0\u4e00\u4e2a\u5c40\u9762\u4e2d\u4e09\u4e2a\u68cb\u5b50\u7684\u5750\u6807\u3002\u6613\u5f97\u77e5\uff0c\u516d\u5143\u7ec4\u4e2a\u6570\u4e0d\u8d85\u8fc7 $1e6$\uff0c\u53ef\u4ee5\u679a\u4e3e\u51fa\u6765\u3002\n\n\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u90fd\u4f1a\u79fb\u52a8\u67d0\u4e00\u9897\u68cb\u5b50\uff0c\u8fdb\u800c\u4f7f\u5176\u4e0e\u5176\u521d\u59cb\u4f4d\u7f6e\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u5947\u5076\u6027\u6539\u53d8\uff1b\u6240\u4ee5\u901a\u8fc7\u5f53\u524d\u5c40\u9762\u4e09\u4e2a\u5750\u6807\u548c\u521d\u59cb\u5c40\u9762\u4e09\u4e2a\u5750\u6807\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u548c\u7684\u5947\u5076\u6027\u53ef\u4ee5\u5224\u65ad\u51fa\u4e0b\u4e00\u6b65\u662f\u7ea2\u65b9\u8fd8\u662f\u9ed1\u65b9\u64cd\u4f5c\uff0c\u800c\u4e0d\u7528\u52a0\u53e6\u5916\u7684\u6807\u8bb0\u3002\n\n\u8003\u8651\u5c06\u516d\u5143\u7ec4\u89c6\u4f5c\u70b9\uff0c\u5411\u540e\u7ee7\uff08\u5373\u540e\u6587\u7684 \u540e\u7ee7\u72b6\u6001\uff0c\u8868\u793a\u5bf9\u5f53\u524d\u5c40\u9762\u64cd\u4f5c\u540e\u7684\u4e0b\u4e00\u4e2a\u5c40\u9762\uff09\u7684\u8f6c\u79fb\u89c6\u4f5c\u8fb9\uff08\u5bf9\u4e8e\u9ed1\u5b50\u5df2\u7ecf\u5230\u8fbe\u7b2c\u4e00\u884c\u7684\u72b6\u6001\uff0c\u4e0d\u5411\u540e\u7ee7\u8fde\u8fb9\uff09\uff0c\u5efa\u51fa\u535a\u5f08\u56fe\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u7ecf\u5178\u7684\u6709\u5411\u56fe\u535a\u5f08\u95ee\u9898\uff08\u4e24\u4eba\u4ea4\u66ff\u79fb\u52a8\u6709\u5411\u56fe\u4e2d\u7684\u4e00\u70b9\uff0c\u65e0\u6cd5\u79fb\u52a8\u7684\u4eba\u8f93\uff09\u3002\n\n\u5177\u4f53\u505a\u6cd5\uff1a  \n\u53cd\u5411\u5efa\u56fe\uff0c\u7136\u540e\u4f7f\u7528\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684\u601d\u8def\u7528\u961f\u5217\u66f4\u65b0\u4ee5\u6bcf\u4e2a\u70b9\u5f00\u59cb\u7684\u8f93\u8d62\u72b6\u6001\u3002  \n\u89c4\u5b9a\u5fc5\u8d25\u72b6\u6001\u4e3a $P$ \u6001\uff0c\u5fc5\u80dc\u72b6\u6001\u4e3a $N$ \u6001\u3002\u5148\u5c06\u5165\u5ea6\u4e3a $0$ \u7684 $P$ \u6001\u70b9\u52a0\u5165\u961f\u5217\u3002\u6bcf\u6b21\u53d6\u51fa\u961f\u9996\u7684\u70b9 $u$\uff0c\u82e5 $u$ \u8fde\u5411\u7684\u70b9 $v$ \u7684\u540e\u7ee7\u72b6\u6001\u4e2d\u5b58\u5728 $P$ \u6001\uff0c\u5219 $v$ \u4e3a $N$ \u6001\uff1b\u82e5 $v$ \u7684\u540e\u7ee7\u72b6\u6001\u90fd\u4e3a $N$ \u6001\uff0c\u5219 $v$ \u4e3a $P$ \u6001\uff0c\u82e5 $v$ \u786e\u5b9a\u4e86\u72b6\u6001\uff0c\u628a $v$ \u52a0\u5165\u961f\u5217\u3002\u5bf9\u4e8e\u6700\u7ec8\u672a\u80fd\u786e\u5b9a $N$ \u6216 $P$ \u6001\u7684\u70b9\uff0c\u5b83\u5e73\u5c40\u3002  \n\u63a5\u4e0b\u6765\u8003\u8651\u66f4\u65b0\u6b65\u6570\u7684\u65b9\u6cd5\uff1a$N$ \u6001\u70b9\u7684\u6b65\u6570\u662f\u5728\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u540e\u7ee7 $P$ \u6001\u70b9\u7684\u6b65\u6570 $+1$\uff0c$P$ \u6001\u70b9\u7684\u6b65\u6570\u662f\u5728\u961f\u5217\u4e2d\u6700\u540e\u4e00\u4e2a\u540e\u7ee7 $N$ \u6001\u70b9\u7684\u6b65\u6570 $+1$\u3002  \n\u4ee5\u4e0b\u662f\u6211\u4e2a\u4eba\u7684\u4e00\u4e9b\u7406\u89e3\uff1a\n\u5728\u5df2\u77e5\u72b6\u6001\u7684\u70b9\u7684\u961f\u5217\u4e2d\u4ece\u524d\u5f80\u540e\uff0c$N$ \u6001\u70b9\u7684\u6b65\u6570\u4e0d\u51cf\uff0c$P$ \u6001\u70b9\u7684\u6b65\u6570\u4e0d\u51cf\u3002\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a\u5bf9\u4e8e\u5728\u961f\u5217\u4e2d\u6b65\u6570\u4e0d\u51cf\u7684 $N$ \u6001\u70b9\uff0c\u4f9d\u6b21\u626b\u63cf\u5b83\u4eec\u5f97\u5230\u7684\u65b0\u7684 $P$ \u6001\u70b9\u6b65\u6570\u4e0d\u51cf\uff0c\u4e14\u6309\u7167\u987a\u5e8f\u63d2\u5165\u961f\u5217\u4e2d\uff0c\u626b\u63cf $P$ \u6001\u70b9\u5f97\u5230\u65b0\u7684 $N$ \u6001\u70b9\u4e5f\u662f\u540c\u7406\u3002\n\n\u9898\u76ee\u5230\u8fd9\u91cc\uff0c\u7b97\u6cd5\u57fa\u672c\u5b8c\u6210\u3002\u4f46\u9700\u8981\u4e00\u4e9b\u5e38\u6570\u4f18\u5316\u3002\u5728\u679a\u4e3e\u4e24\u4e2a\u7ea2\u5b50\u65f6\uff0c\u6ce8\u610f\u5230\u987a\u5e8f\u65e0\u5f71\u54cd\uff0c\u4e8e\u662f\u5f3a\u884c\u4ee4 $x_{r1} \\le x_{r2}$\u3002\u72b6\u6001\u6570\u51cf\u5c11\u8bb8\u591a\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define pii pair<int, int>\n#define fr first\n#define sc second\n#define For(i, sta, ed) for(i=sta; i<=ed; i++)\nusing namespace std;\ninline int rd(void){\n\tint s=0, f=1; char c=getchar();\n\twhile(c<'0' || c>'9') {if(c=='-') f=0; c=getchar();}\n\twhile(c>='0' && c<='9') {s=s*10+c-'0'; c=getchar();}\n\treturn f? s:-s;\n}\nconst int N=1e6+5;\nconst int dx[]={0, 0, -1, 1}, dy[]={1, -1, 0, 0};\nint id, T, n, m;\nchar mp[11][11];\npii sr1, sr2, sb;\n\nint Num[11][11][11][11][11][11], tot;\n#define num(r1, r2, b) (Num[r1.fr][r1.sc][r2.fr][r2.sc][b.fr][b.sc])\nstruct Node{pii r1, r2, b;}  pos[N];\n\ninline bool inthe(pii x){return x.fr>0 && x.fr<=n && x.sc>0 && x.sc<=m;}\ninline bool check(pii r1, pii r2, pii b){return inthe(r1) && inthe(r2) && inthe(b) && mp[r1.fr][r1.sc]!='#' && mp[r2.fr][r2.sc]!='#' && mp[b.fr][b.sc]!='#' && r1!=r2;}\n\nvector<int> e[N]; int in[N];\nint q[N], hd, tl;\nint fwn[N], stp[N];\n\ninline void topo(){\n\tmemset(stp, 63, sizeof(stp));\n\thd=1, tl=0;\n\tfor(int i=1; i<=tot; i++) if(!in[i]) fwn[i]=-1, stp[i]=0, q[++tl]=i;\n\twhile(tl>=hd){\n\t\tint u=q[hd++];\n\t\tfor(int v:e[u]){\n\t\t\tif(fwn[u]==-1 && !fwn[v]) fwn[v]=1, stp[v]=stp[u]+1, q[++tl]=v;\n\t\t\telse if(fwn[u]==1 && !fwn[v] && !--in[v]) fwn[v]=-1, stp[v]=stp[u]+1, q[++tl]=v;\n\t\t}\n\t}\n}\n\nsigned main(){\n\tid=rd(); T=rd();\n\twhile(T--){\n\t\tn=rd(), m=rd();\n\t\tfor(int i=1; i<=n; i++){\n\t\t\tscanf(\"%s\", mp[i]+1);\n\t\t\tfor(int j=1; j<=m; j++){\n\t\t\t\tif(mp[i][j]=='X') sb={i, j};\n\t\t\t\telse if(mp[i][j]=='O') sr1.fr? sr2={i, j}:sr1={i, j};\n\t\t\t}\n\t\t}\n\t\tpii r1, r2, b;\n\t\tFor(r1.fr, 1, n) For(r1.sc, 1, m){\n\t\t\tFor(r2.fr, r1.fr, n) For(r2.sc, 1, m){\n\t\t\t\tFor(b.fr, 1, n) For(b.sc, 1, m){\n\t\t\t\t\tif(check(r1, r2, b)) num(r1, r2, b)=++tot, pos[tot]={r1, r2, b};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1; i<=tot; i++){\n\t\t\tr1=pos[i].r1, r2=pos[i].r2, b=pos[i].b;\n\t\t\tif(r1==b || r2==b || b.fr==1) continue;\n\t\t\tif((abs(r1.fr-sr1.fr)+abs(r1.sc-sr1.sc)+abs(r2.fr-sr2.fr)+abs(r2.sc-sr2.sc)+abs(b.fr-sb.fr)+abs(b.sc-sb.sc))&1){\n\t\t\t\tfor(int j=0; j<3; j++){\n\t\t\t\t\tpii nb={b.fr+dx[j], b.sc+dy[j]};\n\t\t\t\t\tif(check(r1, r2, nb)) e[num(r1, r2, nb)].push_back(i), in[i]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse for(int j=0; j<4; j++){\n\t\t\t\tpii nr={r1.fr+dx[j], r1.sc+dy[j]};\n\t\t\t\tif(check(nr, r2, b)) e[nr.fr>r2.fr? num(r2, nr, b):num(nr, r2, b)].push_back(i), in[i]++;\n\t\t\t\tnr={r2.fr+dx[j], r2.sc+dy[j]};\n\t\t\t\tif(check(r1, nr, b)) e[nr.fr>r1.fr? num(r1, nr, b):num(nr, r1, b)].push_back(i), in[i]++;\n\t\t\t}\n\t\t}\n\t\ttopo();\n\t\tint s=num(sr1, sr2, sb);\n\t\tif(fwn[s]==1) printf(\"Red %d\\n\", stp[s]);\n\t\telse if(fwn[s]==-1) printf(\"Black %d\\n\", stp[s]);\n\t\telse puts(\"Tie\");\n\t\t\n\t\tmemset(in, 0, sizeof(in));\n\t\tmemset(fwn, 0, sizeof(fwn));\n\t\tfor(int i=1; i<=tot; i++) e[i].clear();\n\t\ttot=0;\n\t\tsr1.fr=0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1683382406,
        "uid": 456415,
        "name": "ckain",
        "ccfLevel": 6,
        "title": "P9169 [\u7701\u9009\u8054\u8003 2023] \u8fc7\u6cb3\u5352 \u9898\u89e3"
    },
    {
        "content": "\u7ec6\u8282\u5f88\u591a\u7684\u535a\u5f08\u8bba\u6bd2\u7624\u3002\n\n\u611f\u8c22\u8003\u573a\u4e0a\u8fd9\u9898\u6ca1\u5199\u6302\uff0c~~\u800c\u4e14 CCF \u6570\u636e\u6781\u5f3a~~\n\n\u4e00\u4e2a ~~\u7b28\u62d9\u7684~~ \u8bbe\u72b6\u6001\u65b9\u6cd5\uff1a\u8bbe $(a,b,c,d,e,f,I)$ \u8868\u793a\u9ed1\u68cb\u7684\u5750\u6807\u662f $(a,b)$\uff0c\u7ea2\u68cb $1$ \u7684\u5750\u6807\u662f $(c,d)$\uff0c\u7ea2\u68cb $2$ \u7684\u5750\u6807\u662f $(e,f)$\uff0c\u5f53\u524d\u8d70\u68cb\u4eba\u662f $I$\u3002\n\n\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u8bbe\u51fa $2\\times 10^6$ \u4e2a\u72b6\u6001\uff0c\u5e38\u6570\u5347\u5929\u3002\n\n\u8bbe\u72b6\u6001 $(a,b,c,d,e,f)$ \u8868\u793a\u9ed1\u68cb\u7684\u5750\u6807\u662f $(a,b)$\uff0c\u7ea2\u68cb\u7684\u5750\u6807\u662f $(c,d)$ \u4e0e $(e,f)$\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u56e0\u4e3a\u4e24\u4e2a\u7ea2\u68cb\u672c\u8d28\u76f8\u540c\uff0c$(a,b,c,d,e,f)$ \u4e0e $(a,b,e,f,c,d)$ \u5176\u5b9e\u662f\u4e00\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u5f3a\u5236\u89c4\u5b9a $c<e$ \u6216 $(c=e,d<f)$\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u628a\u72b6\u6001\u6570\u7f29\u5c0f\u4e24\u500d\u3002\n\n\u72b6\u6001\u91cc\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5f53\u524d\u8d70\u68cb\u4eba\u5462\uff1f\u56e0\u4e3a\u68cb\u5b50\u786e\u5b9a\u7684\u65f6\u5019\uff0c\u8d70\u68cb\u4eba\u4e5f\u5c31\u786e\u5b9a\u4e86\u3002\n\n> \u8bc1\u660e\uff1a\n>\n> \u56e0\u4e3a\u8d70\u4e00\u6b65\u5c31\u4f1a\u6539\u53d8\u4e00\u6b21\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u5947\u5076\u6027\uff0c\u6240\u4ee5\u4e00\u4e2a\u68cb\u5b50\u8981\u8d70\u5230\u53e6\u4e00\u4e2a\u5750\u6807\uff08\u5047\u5982\u80fd\u8d70\u5230\uff09\uff0c\u8d70\u7684\u6b65\u6570\u7684\u5947\u5076\u6027\u4e00\u5b9a\u7b49\u4e8e\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u5947\u5076\u6027\u3002\n>\n> \u6240\u4ee5\uff0c\u73b0\u5728\u7684\u72b6\u6001\u5230\u521d\u59cb\u72b6\u6001\u7684\u6b65\u6570\u7684\u5947\u5076\u6027\u4e00\u5b9a\u7b49\u4e8e**\u4e09\u4e2a\u66fc\u54c8\u987f\u8ddd\u79bb\u4e4b\u548c**\u7684\u5947\u5076\u6027\u3002\n>\n> \u4e09\u4e2a\u66fc\u54c8\u987f\u8ddd\u79bb\u5176\u5b9e\u6709\u4e24\u79cd\uff1a\u5f00\u59cb\u7684\u7ea2\u68cb $1$ \u8d70\u5230\u4e86\u73b0\u5728\u7684\u7ea2\u68cb $1$\uff0c\u5f00\u59cb\u7684\u7ea2\u68cb $2$ \u8d70\u5230\u4e86\u73b0\u5728\u7684\u7ea2\u68cb $2$\uff0c \u6216\u8005\u5f00\u59cb\u7684\u7ea2\u68cb $1$ \u8d70\u5230\u4e86\u73b0\u5728\u7684\u7ea2\u68cb $2$\uff0c\u5f00\u59cb\u7684\u7ea2\u68cb $2$ \u8d70\u5230\u4e86\u73b0\u5728\u7684\u7ea2\u68cb $1$\u3002\n>\n> \u800c\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4e4b\u548c\u7684\u5947\u5076\u6027\u4e5f\u662f\u76f8\u540c\u7684\u2014\u2014\u7b2c\u4e8c\u79cd\u60c5\u51b5\u6211\u4eec\u8ba9\u5f00\u59cb\u7684\u7ea2\u68cb $1$ \u8d70\u5230\u5f00\u59cb\u7684\u7ea2\u68cb $2$ \u7684\u5730\u65b9\uff0c\u5f00\u59cb\u7684\u7ea2\u68cb $2$ \u8d70\u5230\u5f00\u59cb\u7684\u7ea2\u68cb $1$ \u7684\u5730\u65b9\uff0c\u8d70\u8fc7\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u76f8\u540c\uff0c\u6240\u4ee5\u603b\u66fc\u54c8\u987f\u8ddd\u79bb $+2d$\uff0c\u5947\u5076\u6027\u4e0d\u53d8\u3002 \n>\n> \u786e\u5b9a\u4e86\u5947\u5076\u6027\uff0c\u8d70\u68cb\u4eba\u4e5f\u5c31\u786e\u5b9a\u4e86\u3002\n\n\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8bb0\u5f55\u8d70\u68cb\u4eba\uff0c\u72b6\u6001\u6570\u672c\u8d28\u4e0d\u4f1a\u589e\u52a0\uff0c\u53ea\u662f\u6e05\u7a7a\u6570\u7ec4\u7684\u65f6\u5019\u5e38\u6570\u53d8\u5927\u4e86\u4e00\u500d\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6210\u529f\u628a\u72b6\u6001\u6570\u538b\u7f29\u5230\u4e86 $5\\times 10^5$\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u535a\u5f08\u8bba\u7684\u5185\u5bb9\u4e86\u3002\n\n\u6211\u4eec\u5148\u7528 BFS \u641c\u51fa\u6240\u6709\u53ef\u80fd\u5230\u8fbe\u7684\u72b6\u6001\uff0c\u6ca1\u6709\u51fa\u5ea6\u7684\u70b9\u4e00\u5b9a\u662f\u5fc5\u8d25\u6001\uff0c\u6211\u4eec\u5c06\u5176\u52a0\u5165\u961f\u5217\u3002\n\n\u7136\u540e\u6309\u7167\u961f\u5217\u4e2d\u7684\u987a\u5e8f\uff0c\u8bbe\u961f\u5934\u4e3a $u$\uff0c\u66f4\u65b0\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u5230\u8fbe $u$ \u72b6\u6001\u7684\u70b9 $v$\uff08\u901a\u8fc7\u5efa\u53cd\u56fe\u5b9e\u73b0\uff09\u3002\n\n- \u82e5 $u$ \u4e3a\u5fc5\u8d25\u6001\uff0c\u5219 $v$ \u4e00\u5b9a\u662f\u5fc5\u80dc\u6001\uff0c\u800c\u4e14\u8d70\u7684\u6b65\u6570\u6700\u5c11\u7684\u60c5\u51b5\u4e00\u5b9a\u662f\u79fb\u5230\u72b6\u6001 $u$\uff08\u6b65\u6570\u7684\u8def\u5f84\uff1a\u5fc5\u8d25\u6001\u5148\u8fdb\u5165\u961f\u5217 $\\to$ \u5fc5\u80dc\u6001\u7684\u6700\u52a3\u89e3\u5148\u8fdb\u5165\u961f\u5217 $\\to$ \u5fc5\u8d25\u6001\u7684\u6700\u4f18\u89e3\u5148\u8fdb\u5165\u961f\u5217 $\\to\\cdots\\to$ \u5148\u5230\u8fbe\u521d\u59cb\u72b6\u6001\uff09\uff0c\u6240\u4ee5\u66f4\u65b0 $v$\uff0c\u5e76\u628a $v$ \u52a0\u5165\u961f\u5217\u3002\n- \u82e5 $v$ \u80fd\u5230\u8fbe\u7684\u6240\u6709\u72b6\u6001\u90fd\u662f\u5fc5\u80dc\u6001\uff0c\u5219 $v$ \u4e3a\u5fc5\u8d25\u6001\uff0c\u53d6\u9700\u8981\u83b7\u80dc\u6b65\u6570\u6700\u591a\u7684 $u$ \u6765\u66f4\u65b0\uff0c\u5e76\u628a $v$ \u52a0\u5165\u961f\u5217\u3002\n\n\u5168\u90e8\u66f4\u65b0\u5b8c\u4e4b\u540e\uff0c\u4f1a\u6709\u4e00\u4e9b\u70b9\u6ca1\u88ab\u66f4\u65b0\u5230\uff0c\u5219\u8fd9\u4e9b\u70b9\u662f\u5e73\u5c40\uff08\u5fc5\u5b9a\u6210\u73af\uff09\u3002\n\n\u6700\u540e\u8f93\u51fa\u8d77\u70b9\u7684\u503c\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\n\n- \u9ed1\u68cb\u53ea\u80fd\u8d70\u4e09\u4e2a\u65b9\u5411\n- \u7ea2\u68cb\u4e0d\u80fd\u91cd\u53e0\n\n[\u53c2\u8003\u4ee3\u7801](https://www.luogu.com.cn/paste/bry9cotk)\n",
        "postTime": 1681657842,
        "uid": 236006,
        "name": "cymrain07",
        "ccfLevel": 7,
        "title": "\u300c\u8054\u5408\u7701\u9009 2023\u300d\u8fc7\u6cb3\u5352"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P9169)\n\n\u5341\u5206\u8003\u9a8c\u4ee3\u7801\u5b9e\u73b0\u80fd\u529b\u3002\n## \u9898\u610f\n\u4e00\u4e2a $n\\times m$ \u7684\u68cb\u76d8\uff0c\u6709\u7684\u4f4d\u7f6e\u6709\u969c\u788d\u7269\u3002\u6709\u4e24\u4e2a\u7ea2\u5b50\u548c\u4e00\u4e2a\u9ed1\u5b50\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7ea2\u5b50 $(x,y)$\uff0c\u79fb\u52a8\u4e00\u6b21\u53ef\u4ee5\u8d70\u5230 $(x\u00b11,y)$ \u6216 $(x,y\u00b11)$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u9ed1\u5b50\uff0c\u79fb\u52a8\u4e00\u6b21\u53ef\u4ee5\u8d70\u5230 $(x-1,y)$ \u6216 $(x,y\u00b11)$\u3002\u9700\u8981\u4fdd\u8bc1\u79fb\u52a8\u540e\u8fd8\u5728\u5730\u56fe\u5185\u4e14\u4e0d\u5728\u969c\u788d\u7269\u4e0a\u3002\u4e24\u4e2a\u7ea2\u5b50\u4e0d\u80fd\u91cd\u53e0\u3002\u53cc\u65b9\u8f6e\u6d41\u6267\u5b50\uff0c\u7ea2\u65b9\u4e3a\u5148\u624b\uff0c\u7ea2\u65b9\u6bcf\u6b21\u53ef\u6311\u4e00\u4e2a\u68cb\u5b50\u8fdb\u884c\u79fb\u52a8\u3002\n\n\u5728\u4e00\u6b21\u79fb\u52a8\u524d\uff0c\u6309\u7167\u4ee5\u4e0b\u987a\u5e8f\u5224\u5b9a\u80dc\u8d1f\uff1a\n- \u9ed1\u5b50\u5904\u5728 $x=1$\uff0c\u9ed1\u65b9\u80dc\uff1b\n- \u4e00\u4e2a\u7ea2\u5b50\u548c\u9ed1\u5b50\u5728\u540c\u4e00\u4f4d\u7f6e\u4e0a\uff0c\u672c\u6b21\u79fb\u52a8\u65b9\u8d1f\uff1b\n- \u672c\u6b21\u79fb\u52a8\u65b9\u65e0\u68cb\u5b50\u53ef\u79fb\u52a8\uff0c\u672c\u6b21\u79fb\u52a8\u65b9\u8d1f\uff1b\n- \u90fd\u4e0d\u6ee1\u8db3\u5219\u7531\u672c\u6b21\u79fb\u52a8\u65b9\u6267\u884c\u672c\u6b21\u79fb\u52a8\u3002\n\n\u5047\u8bbe\u53cc\u65b9\u5747\u91c7\u7528\u6700\u4f18\u7b56\u7565\uff0c\u5728\u53ef\u83b7\u80dc\u65f6\u5e0c\u671b\u603b\u79fb\u52a8\u6b65\u6570\u6700\u5c11\uff0c\u5426\u5219\u5e0c\u671b\u603b\u79fb\u52a8\u6b65\u6570\u6700\u591a\u3002\u5982\u679c\u6e38\u620f\u65e0\u6cd5\u7ed3\u675f\u5219\u5224\u5b9a\u5e73\u5c40\u3002\n\n$T$ \u7ec4\u6570\u636e\uff0c\u7ed9\u51fa\u5730\u56fe\uff0c\u6c42\u83b7\u80dc\u65b9\u3001\u603b\u79fb\u52a8\u6b65\u6570\u6216\u5224\u5b9a\u5e73\u5c40\u3002\n\n$1\\le T,n,m\\le 10$\u3002\n\n## \u601d\u8def\n\n\u5bf9\u4e8e\u4e09\u4e2a\u68cb\u5b50\uff0c\u5206\u522b\u8bb0\u4f5c $r_1,r_2,b$\u3002\u6c42\u51fa\u4e09\u4e2a\u68cb\u5b50\u6240\u5728\u8fde\u901a\u5757\u7684\u6240\u6709\u70b9\uff0c\u5217\u51fa\u6240\u6709\u53ef\u80fd\u5b58\u5728\u7684\u5c40\u9762\uff08\u5305\u542b\u4e09\u4e2a\u70b9\u7684\u4f4d\u7f6e\u548c\u5148\u624b\uff0c\u663e\u7136\u4e0a\u9650\u662f $O(n^3m^3)$ \u79cd\uff09\uff0c\u5728\u5c40\u9762\u5185\u5efa\u8fb9 $t\\to s$ **\u8868\u793a $s$ \u5c40\u9762\u4e00\u6b21\u79fb\u52a8\u540e\u53ef\u4ee5\u8f6c\u79fb\u5230 $t$ \u5c40\u9762**\u3002\u5efa\u53cd\u5411\u8fb9\u7684\u539f\u56e0\u662f $s$ \u4f1a\u51b3\u7b56\u8d70\u5230\u54ea\u4e2a\u5c40\u9762\u66f4\u597d\uff0c\u5f53 $t$ \u51b3\u7b56\u5b8c\u4e86\u53ef\u4ee5\u66f4\u597d\u5730\u66f4\u65b0 $s$ \u7684\u51b3\u7b56\u3002\n\n\u8003\u8651\u6c42\u51fa\u6240\u6709\u70b9\u6700\u4f18\u65b9\u6848\uff0c\u8003\u8651\u4e00\u4e2a bfs \u548c\u62d3\u6251\u6392\u5e8f\u7684\u878d\u5408\u4e1c\u897f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u5b58\u5f53\u524d\u51b3\u7b56\u5b8c\u4e86\u7684\u6240\u6709\u70b9\u3002\u521d\u59cb\u65f6\u961f\u5217\u91cc\u7684\u70b9\u662f\u6240\u6709\u7684\u7ed3\u675f\u7ed3\u70b9\uff08\u5728\u8fd9\u4e2a\u5c40\u9762\u79fb\u52a8\u4e4b\u524d\u5df2\u7ecf\u5224\u5b9a\u80dc\u8d1f\uff09\u3002\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u83b7\u80dc\u65b9\u548c\u7ed3\u675f\u6b65\u6570 $p_i$\u3002\n\n\u8003\u8651\u4e00\u4e2a\u70b9 $t$ \u53bb\u66f4\u65b0\u70b9 $s$\uff1a\n- \u5982\u679c $s$ \u76ee\u524d\u6ca1\u6709\u4f7f\u5f97 $s$ \u5148\u624b\u80dc\u5229\u7684\u65b9\u6848\uff1a\n\t- \u5982\u679c $t$ \u4e2d\u83b7\u80dc\u7684\u662f $s$ \u7684\u540e\u624b\uff1a$p_s\\gets p_t+1$\uff0c\u56e0\u4e3a\u662f bfs\uff0c\u6240\u4ee5\u6b64\u65f6 $p_t+1$ \u80af\u5b9a\u4e0d\u5c0f\u4e8e $p_s$\uff1b\n   - \u5426\u5219\uff1a$p_s\\gets p_t+1$\uff0c\u5e76\u6807\u8bb0 $s$ \u5df2\u7ecf\u627e\u5230\u4f7f\u5f97\u5148\u624b\u80dc\u5229\u7684\u65b9\u6848\uff1b\n- \u5426\u5219\uff1a\u7531\u4e8e\u662f bfs\uff0c\u5373\u4f7f $t$ \u4e2d\u83b7\u80dc\u7684\u662f $s$ \u7684\u5148\u624b\uff0c\u6b64\u65f6\u7684 $p_t+1$ \u4e5f\u66f4\u65b0\u4e0d\u4e86 $p_s$\u3002\n\n\u6240\u4ee5\u5f53\u4e00\u4e2a\u70b9\u88ab\u51b3\u7b56\u5b8c\u6bd5\u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u4e24\u6761\u4ef6\u4e4b\u4e00\uff1a\n- \u5165\u5ea6\u4e3a $0$\uff1b\n- \u7b2c\u4e00\u6b21\u627e\u5230\u4f7f\u5f97\u5148\u624b\u80dc\u5229\u7684\u65b9\u6848\u3002\n\n\u6ee1\u8db3\u4e24\u6761\u4ef6\u4e4b\u4e00\u65f6\u5c06\u5176\u52a0\u5165\u961f\u5217\u5373\u53ef\u3002\n\n\u5982\u679c\u521d\u59cb\u5c40\u9762\u7684\u7ed3\u70b9\u6ca1\u6709\u88ab\u51b3\u7b56\u5b8c\u6bd5\uff0c\u5219\u5fc5\u5b9a\u5e73\u5c40\uff0c\u5426\u5219\u6839\u636e\u83b7\u80dc\u65b9\u5224\u65ad\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(Tn^3m^3)$\u3002\n\n\u6ce8\u610f\u4e9b\u5361\u5e38\u624b\u6bb5\uff1a\n- `vector` \u5f00 $2\\times 10^6$ \u6bd4\u8f83\u96be\u63a5\u53d7\uff0c\u5efa\u8bae\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u3002\n- \u4e0d\u8981\u4f7f\u7528 `map` \u4f7f\u590d\u6742\u5ea6\u9000\u5316\uff0c\u5c40\u9762\u6700\u591a\u53ea\u6709 $2\\times 10^6$\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b58\u3002\n- \u8981\u6c42 $r_1$ \u6a2a\u5750\u6807\u6bd4 $r_2$ \u6a2a\u5750\u6807\u5c0f\u53ef\u4ee5\u51cf\u5c11\u72b6\u6001\u6570\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//read(),getc()\nconst int N=10+2,M=1e6+10,INF=1e9;\nint id,T,n,m,cnt;\nbool ok[N][N],vis[N][N];\nstruct Point{\n\tint x,y;\n\tPoint(){x=y=0;}\n\tPoint(int a,int b){x=a,y=b;}\n\tinline friend bool operator==(const Point &a,const Point &b){\n\t\treturn a.x==b.x&&a.y==b.y;\n\t}\n\tinline friend bool operator<(const Point &a,const Point &b){\n\t\treturn a.x<b.x||a.x==b.x&&a.y<b.y;\n\t}\n}stk[3][N*N];\nint top[3];\ninline bool checkR(int x,int y){\n\treturn ok[x-1][y]|ok[x][y+1]|ok[x][y-1]|ok[x+1][y];\n}\ninline bool checkB(int x,int y){\n\treturn ok[x-1][y]|ok[x][y+1]|ok[x][y-1];\n}\ninline bool checkR(Point tmp1,Point tmp2){\n\tok[tmp1.x][tmp1.y]=ok[tmp2.x][tmp2.y]=0;\n\tbool tmp=checkR(tmp1.x,tmp1.y)||checkR(tmp2.x,tmp2.y);\n\tok[tmp1.x][tmp1.y]=ok[tmp2.x][tmp2.y]=1;\n\treturn tmp;\n}\ninline bool checkB(Point tmp){\n\treturn checkB(tmp.x,tmp.y);\n}\nint DX[]={1,0,0,-1},DY[]={0,-1,1,0};\ninline void bfs(Point st,int ty){\n\tfor(int i=0;i<=n+1;i++)\n\t\tfor(int j=0;j<=m+1;j++)\n\t\t\tvis[i][j]=!ok[i][j];\n\tqueue<Point>q;\n\tq.push(st);\n\tvis[st.x][st.y]=1;\n\ttop[ty]=0;\n\twhile(!q.empty()){\n\t\tPoint tmp=q.front();\n\t\tstk[ty][++top[ty]]=tmp;\n\t\tq.pop();\n\t\tint px=tmp.x,py=tmp.y;\n\t\tfor(int i=!ty;i<=3;i++){\n\t\t\tint nx=px+DX[i],ny=py+DY[i];\n\t\t\tif(vis[nx][ny]) continue;\n\t\t\tvis[nx][ny]=1;\n\t\t\tq.push(Point(nx,ny));\n\t\t}\n\t}\n}\nint fr[M*2];\nstruct Edge{\n\tint to,nxt;\n}a[M*14];\nint head[M*2],ent;\nint deg[M*2];\nshort edn[M*2],stp[M*2];\nbool vi2[M*2],fin[M*2],vi3[M*2];\nint ind[2][M*2];\ninline void upd(short &x,int y){\n\tif(!x) x=y;\n}\ninline void add(int u,int v){\n\tif(!u||!v) return ;\n\tent++;\n\ta[ent].to=u;\n\ta[ent].nxt=head[v];\n\thead[v]=ent;\n\tdeg[u]++;\n}\ninline int cng(int a,int b,int c,int d,int e,int f){\n\treturn f+11*(e+11*(d+11*(c+11*(b+11*a))));\n}\ninline int get(Point a,Point b,Point c,int fr){\n\tif(b<a) swap(a,b);\n\treturn ind[fr-1][cng(a.x,a.y,b.x,b.y,c.x,c.y)];\n}\ninline void upd(Point a,Point b,Point c,int fr,int cnt){\n\tif(b<a) swap(a,b);\n\tind[fr-1][cng(a.x,a.y,b.x,b.y,c.x,c.y)]=cnt;\n}\ninline int get2(Point a,Point b,Point c){\n\treturn vi3[cng(a.x,a.y,b.x,b.y,c.x,c.y)];\n}\ninline void upd2(Point a,Point b,Point c,int cnt){\n\tvi3[cng(a.x,a.y,b.x,b.y,c.x,c.y)]=cnt;\n}\nint main(){\n//\tfreopen(\"P9169_14.in\",\"r\",stdin);\n//\tfreopen(\"zu.out\",\"w\",stdout);\n\tid=read(),T=read();\n\twhile(T--){\n\t\tn=read(),m=read();\n\t\tfor(int i=0;i<=n+1;i++)\n\t\t\tfor(int j=0;j<=m+1;j++)\n\t\t\t\tok[i][j]=0;\n\t\tPoint r1,r2,b;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tchar ch=getc();\n\t\t\t\tif(ch!='#') ok[i][j]=1;\n\t\t\t\tif(ch=='X') b.x=i,b.y=j;\n\t\t\t\tif(ch=='O'){\n\t\t\t\t\tPoint tmp(i,j);\n\t\t\t\t\tif(r1.x) r2=tmp;\n\t\t\t\t\telse r1=tmp;\n\t\t\t\t}\n\t\t\t}\n\t\tbfs(r1,1),bfs(r2,2),bfs(b,0);\n\t\tcnt=0;\n\t\tfor(int i=1;i<=top[1];i++)\n\t\t\tfor(int j=1;j<=top[2];j++){\n\t\t\t\tPoint R1=stk[1][i],R2=stk[2][j];\n\t\t\t\tif(R1==R2) continue;\n\t\t\t\tif(R2<R1) swap(R1,R2);\n\t\t\t\tfor(int k=1;k<=top[0];k++){\n\t\t\t\t\tPoint B=stk[0][k];\n\t\t\t\t\tif(get(R1,R2,B,1)) continue;\n//\t\t\t\t\tStatu tmp0(R1,R2,B,1),tmp1(R1,R2,B,2);\n\t\t\t\t\tfr[++cnt]=1,upd(R1,R2,B,1,cnt),upd2(R1,R2,B,0);\n\t\t\t\t\tfr[++cnt]=2,upd(R1,R2,B,2,cnt);\n\t\t\t\t\tedn[cnt]=edn[cnt-1]=deg[cnt]=deg[cnt-1]=vi2[cnt-1]=vi2[cnt]=fin[cnt-1]=fin[cnt]=0;\n\t\t\t\t\tif(B.x==1) upd(edn[cnt-1],2),upd(edn[cnt],2),fin[cnt-1]=fin[cnt]=1;\n\t\t\t\t\tif(R1==B||R2==B) upd(edn[cnt-1],2),upd(edn[cnt],1),fin[cnt-1]=fin[cnt]=1;\n\t\t\t\t\tif(!checkR(R1,R2)) upd(edn[cnt-1],2),fin[cnt]=1;\n\t\t\t\t\tif(!checkB(B)) upd(edn[cnt],1),fin[cnt]=1;\n\t\t\t\t\tupd(edn[cnt-1],2),upd(edn[cnt],1);\n\t\t\t\t}\n\t\t\t}\n\t\tent=0;\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\thead[i]=0;\n\t\tint i=0;\n\t\tfor(int i0=1;i0<=top[1];i0++)\n\t\t\tfor(int j=1;j<=top[2];j++){\n\t\t\t\tPoint r1=stk[1][i0],r2=stk[2][j];\n\t\t\t\tif(r1==r2) continue;\n\t\t\t\tif(r2<r1) swap(r1,r2);\n\t\t\t\tfor(int k=1;k<=top[0];k++){\n\t\t\t\t\tPoint b=stk[0][k];\n\t\t\t\t\tif(get2(r1,r2,b)) continue;\n\t\t\t\t\tupd2(r1,r2,b,1);\n\t\t\t\t\ti++;\n\t\t\t\t\tif(!fin[i]){\n\t\t\t\t\t\tint px=r1.x,py=r1.y;\n\t\t\t\t\t\tfor(int j=0;j<4;j++){\n\t\t\t\t\t\t\tint nx=px+DX[j],ny=py+DY[j];\n\t\t\t\t\t\t\tadd(i,get(Point(nx,ny),r2,b,2));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpx=r2.x,py=r2.y;\n\t\t\t\t\t\tfor(int j=0;j<4;j++){\n\t\t\t\t\t\t\tint nx=px+DX[j],ny=py+DY[j];\n\t\t\t\t\t\t\tadd(i,get(r1,Point(nx,ny),b,2));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t\tif(!fin[i]){\n\t\t\t\t\t\tint px=b.x,py=b.y;\n\t\t\t\t\t\tfor(int j=1;j<4;j++){\n\t\t\t\t\t\t\tint nx=px+DX[j],ny=py+DY[j];\n\t\t\t\t\t\t\tadd(i,get(r1,r2,Point(nx,ny),1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tmemset(ind,0,sizeof(ind));\n\t\tqueue<int>q;\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tstp[i]=0,vi2[i]=0;\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tif(!deg[i]) q.push(i),vi2[i]=1;\n\t\twhile(!q.empty()&&!vi2[1]){\n\t\t\tint P=q.front();q.pop();\n\t\t\tshort x=stp[P]+1;\n\t\t\tfor(int i=head[P];i;i=a[i].nxt){\n\t\t\t\tint tmp=a[i].to;\n\t\t\t\tif(vi2[tmp]) continue;\n\t\t\t\tif(fr[tmp]==2){\n\t\t\t\t\tif(edn[tmp]==1){\n\t\t\t\t\t\tif(edn[P]!=2) stp[tmp]=x;\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tstp[tmp]=x,edn[tmp]=2;\n\t\t\t\t\t\t\tif(!vi2[tmp]) vi2[tmp]=1,q.push(tmp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(edn[tmp]==2){\n\t\t\t\t\t\tif(edn[P]!=1) stp[tmp]=x;\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tstp[tmp]=x,edn[tmp]=1;\n\t\t\t\t\t\t\tif(!vi2[tmp]) vi2[tmp]=1,q.push(tmp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdeg[tmp]--;\n\t\t\t\tif(deg[tmp]==0&&!vi2[tmp]) vi2[tmp]=1,q.push(tmp);\n\t\t\t}\n\t\t}\n\t\tif(vi2[1]){\n\t\t\tif(edn[1]==1) printf(\"Red %d\\n\",stp[1]);\n\t\t\telse printf(\"Black %d\\n\",stp[1]);\n\t\t}else puts(\"Tie\");\n\t}\n}\n```\n",
        "postTime": 1681293641,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P9169\u3010[\u7701\u9009\u8054\u8003 2023] \u8fc7\u6cb3\u5352\u3011"
    },
    {
        "content": "## Problem\n\n[P9169 [\u7701\u9009\u8054\u8003 2023] \u8fc7\u6cb3\u5352](https://www.luogu.com.cn/problem/P9169)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n\u6709\u4e00\u4e2a $n \\times m$ \u7684\u68cb\u76d8\uff0c\u6bcf\u4e2a\u683c\u5b50\u662f\u7a7a\u5730\u6216\u969c\u788d\uff0c\u68cb\u76d8\u4e0a\u6709\u4e24\u4e2a\u7ea2\u5b50\u548c\u4e00\u4e2a\u9ed1\u5b50\u3002\u7ea2\u5b50\u6bcf\u6b21\u53ef\u4ee5\u5411\u4e0a\u4e0b\u5de6\u53f3\u79fb\u52a8\u4e00\u683c\uff0c\u524d\u63d0\u662f\u76ee\u6807\u683c\u5b50\u4e0d\u662f\u969c\u788d\u6216\u53e6\u4e00\u4e2a\u7ea2\u5b50\u3002\u9ed1\u5b50\u6bcf\u6b21\u53ef\u4ee5\u5411\u4e0a\u5de6\u53f3\u79fb\u52a8\u4e00\u683c\uff0c\u524d\u63d0\u662f\u76ee\u6807\u683c\u5b50\u4e0d\u662f\u969c\u788d\u3002    \n\u7ea2\u65b9\u548c\u9ed1\u65b9\u8f6e\u6d41\u51b3\u7b56\uff0c\u7ea2\u65b9\u5148\u8d70\u3002\n\n\u6e38\u620f\u7ed3\u675f\u5224\u5b9a\u4e3a\uff1a\n\n- \u82e5\u5f53\u524d\u9ed1\u5b50\u5728\u7b2c\u4e00\u884c\uff0c\u5219\u9ed1\u65b9\u80dc\u5229\u3002\n- \u82e5\u9ed1\u5b50\u4e0e\u67d0\u4e2a\u7ea2\u5b50\u5728\u540c\u4e00\u4e2a\u683c\u5b50\uff0c\u5219\u4e0a\u4e00\u6b65\u79fb\u52a8\u7684\u73a9\u5bb6\u80dc\u5229\u3002\n- \u82e5\u5f53\u524d\u73a9\u5bb6\u65e0\u6cd5\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u5219\u53e6\u4e00\u65b9\u80dc\u5229\u3002\n\n\u53cc\u65b9\u51b3\u7b56\u76f8\u540c\uff0c\u5747\u4e3a\uff1a\n\n- \u82e5\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u5219\u9009\u62e9\u6b65\u6570\u6700\u5c11\u7684\u7b56\u7565\u3002\n- \u82e5\u6ca1\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u4f46\u5b58\u5728\u65e0\u8bba\u5bf9\u65b9\u65e0\u6cd5\u79fb\u52a8\uff0c\u81ea\u5df1\u90fd\u4e0d\u4f1a\u8d25\u7684\u7b56\u7565\uff0c\u5219\u9009\u62e9\u8fd9\u4e2a\u7b56\u7565\u3002\n- \u82e5\u4e0d\u6ee1\u8db3\u4e0a\u9762\u4e24\u79cd\u6761\u4ef6\uff0c\u5219\u9009\u62e9\u4e0d\u6570\u6700\u591a\u7684\u7b56\u7565\u3002\n\n\u6c42\u6700\u7ec8\u83b7\u80dc\u65b9\u548c\u603b\u6b65\u6570\u3002\n\n\u82e5\u6c38\u8fdc\u65e0\u6cd5\u7ed3\u675f\u6e38\u620f\uff0c\u5219\u8f93\u51fa `Tie`\u3002\n\n## Solution\n\n\u867d\u7136\u4e0d\u662f\u516c\u5e73\u7ec4\u5408\u6e38\u620f\uff0c\u4f46\u4e5f\u80fd\u7528\u7c7b\u4f3c\u4e8e $\\verb|SG|$ \u51fd\u6570\u7684\u505a\u6cd5\u6765\u89e3\u51b3\u3002\n\n\u53d1\u73b0\u68cb\u76d8\u72b6\u6001\u53ea\u4e0e\u5f53\u524d\u6bcf\u4e2a\u68cb\u5b50\u7684\u4f4d\u7f6e\u6709\u5173\uff0c\u4e14\u68cb\u76d8\u5f88\u5c0f\uff0c\u6545\u8003\u8651\u7528 $(rx_1, ry_1, rx_2, ry_2, bx, by)$ \u8868\u793a\u5f53\u524d\u5c40\u9762\u4e09\u4e2a\u68cb\u5b50\u7684\u4f4d\u7f6e\u3002  \n\u7531\u4e8e\u4e0d\u662f\u516c\u5e73\u535a\u5f08\uff0c\u6545\u8fd8\u8981\u589e\u52a0\u4e00\u7ef4\u8868\u793a\u5f53\u524d\u5148\u624b\u662f\u54ea\u4e00\u65b9\u3002\u6545\u72b6\u6001\u4e3a $(rx_1, ry_1, rx_2, ry_2, bx, by, 0 / 1)$\u3002\u5176\u4e2d\u6700\u540e\u4e00\u7ef4 $0$ \u8868\u793a\u5148\u624b\u662f\u7ea2\u65b9\uff0c$1$ \u8868\u793a\u5148\u624b\u662f\u9ed1\u65b9\u3002\u5176\u610f\u4e49\u4e3a\u5f53\u524d\u5c40\u9762\u5230\u6e38\u620f\u7ed3\u675f\u6240\u9700\u7684\u6b65\u6570\u3002\n\n\u7136\u540e\u5efa\u51fa\u535a\u5f08\u56fe\u3002\n\n\u8003\u8651\u7531\u6700\u7ec8\u72b6\u6001\u63a8\u51fa\u5176\u4ed6\u72b6\u6001\u3002\u7136\u800c\u56fe\u4e0d\u662f $\\verb|DAG|$\uff0c\u6240\u4ee5\u8981\u8003\u8651\u73af\u4e0a\u7684\u70b9\u600e\u4e48\u5904\u7406\u3002  \n\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u95ee\u9898\u3002\u82e5\u73af\u4e0a\u7684\u70b9\u662f\u5fc5\u8d25\u7684\uff0c\u5219\u53ef\u4ee5\u7528\u4ed6\u6765\u66f4\u65b0\u522b\u7684\u70b9\u3002\u5426\u5219\uff0c\u4e0d\u80fd\u7528\u4ed6\u66f4\u65b0\u522b\u7684\u70b9\u3002\n\n\u5bf9\u4e8e\u72b6\u6001\u4e4b\u95f4\u7684\u66f4\u65b0\uff1a\n\n- \u82e5\u88ab\u66f4\u65b0\u72b6\u6001\u4e3a\u5fc5\u80dc\u72b6\u6001\uff0c\u5219\u53d6\u6700\u5c0f\u503c\uff0c\u5e76\u4e14\u5728\u7b2c\u4e00\u6b21\u66f4\u65b0\u65f6\u5373\u53ef\u5165\u961f\u5217\u3002\n- \u82e5\u88ab\u66f4\u65b0\u72b6\u6001\u4e3a\u5fc5\u8d25\u72b6\u6001\uff0c\u5219\u53d6\u6700\u5927\u503c\uff0c\u5e76\u4e14\u5728\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u65f6\u624d\u80fd\u5165\u961f\u5217\u3002\n\n\u5bf9\u4e8e\u5fc5\u80dc\u548c\u5fc5\u8d25\u7684\u5224\u5b9a\uff1a\u82e5\u6b65\u6570\u4e3a\u5947\u6570\uff0c\u5219\u4e3a\u5fc5\u80dc\u72b6\u6001\u3002\u82e5\u6b65\u6570\u4e3a\u5076\u6570\uff0c\u5219\u4e3a\u5fc5\u8d25\u72b6\u6001\u3002\n\n\u5bf9\u4e8e\u65e0\u6cd5\u88ab\u63a8\u51fa\u72b6\u6001\u7684\u70b9\uff0c\u5176\u7ed3\u679c\u4e3a `Tie`\u3002\n\n\u590d\u6742\u5ea6\u4e3a $O(|V| + |E|)$\uff0c\u5176\u4e2d $V$ \u4e3a\u535a\u5f08\u56fe\u7684\u70b9\u96c6\uff0c$E$ \u4e3a\u535a\u5f08\u56fe\u7684\u8fb9\u96c6\u3002\n\n\u7136\u800c\u968f\u624b\u4e00\u7b97\u53d1\u73b0\u6781\u9650\u60c5\u51b5\u8981\u8dd1\u5f88\u591a\u904d\uff0c\u52a0\u4e0a\u5404\u79cd\u5404\u6837\u7684\u5e38\u6570\uff0c\u76f4\u63a5\u6765\u7edd\u5bf9\u8fc7\u4e0d\u53bb\u3002\u4e8e\u662f\u8003\u8651\u5361\u5e38\u3002\n\n\u9996\u5148\u53ef\u4ee5\u7701\u7565\u5efa\u535a\u5f08\u56fe\u7684\u8fc7\u7a0b\uff0c\u7528\u9690\u5f0f\u5efa\u56fe\u3002  \n\u7136\u540e\u53d1\u73b0\u4e24\u4e2a\u7ea2\u5b50\u672c\u8d28\u76f8\u540c\uff0c\u6240\u4ee5\u53ef\u4ee5\u51cf\u53bb\u4e00\u534a\u7684\u72b6\u6001\u3002  \n$\\verb|bfs|$ \u65f6\u82e5\u5f53\u524d\u72b6\u6001\u4e3a\u9898\u76ee\u8be2\u95ee\u7684\u521d\u59cb\u72b6\u6001\u5219\u7acb\u5373\u505c\u6b62\u3002  \n\u4e8b\u5b9e\u8bc1\u660e\u5f00\u4e03\u7ef4\u6570\u7ec4\u6bd4\u538b\u5230\u4e00\u7ef4\u7684\u5bfb\u5740\u66f4\u5feb\u3002\n\n\u53e6\u5916\u53d1\u73b0\u6e38\u620f\u7ed3\u675f\u9664\u4e86\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u53e6\u5916\u4e24\u79cd\u90fd\u6709\u8fde\u5411\u5176\u4ed6\u72b6\u6001\u7684\u8fb9\uff0c\u6240\u4ee5\u5b9e\u73b0\u65f6\u9700\u8981\u6807\u8bb0\u7ed3\u675f\u72b6\u6001\u7684\u70b9\u4fdd\u8bc1\u5176\u4e0d\u4f1a\u88ab\u66f4\u65b0\u3002\n\n## Code\n\n\u4ee3\u7801\u7565\u4e11\u3002\n\n```cpp\n// Think twice, code once.\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define SG(x) sg[x.rx1][x.ry1][x.rx2][x.ry2][x.bx][x.by][x.f]\n#define IN(x) in[x.rx1][x.ry1][x.rx2][x.ry2][x.bx][x.by][x.f]\n#define VIS(x) vis[x.rx1][x.ry1][x.rx2][x.ry2][x.bx][x.by][x.f]\n// \u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5199\u4e00\u957f\u4e32\u72b6\u6001\u3002\n// \u4f46\u662f\u6ce8\u610f\u4e0d\u8981\u5199\u6210\u51fd\u6570\u7684\u5f62\u5f0f\uff08\u5982 int &SG(x) {return ...;}\uff09\uff0c\u56e0\u4e3a\u8c03\u7528\u51fd\u6570\u5e38\u6570\u8f83\u5927\uff0c\u800c\u5b8f\u5b9a\u4e49\u5219\u5728\u7f16\u8bd1\u65f6\u5b8c\u6210\u66ff\u6362\uff0c\u4e0d\u5f71\u54cd\u5e38\u6570\u3002\nusing namespace std;\n\nconst int grx[] = {1, -1, 0, 0}, gry[] = {0, 0, -1, 1};\nconst int gbx[] = {-1, 0, 0}, gby[] = {0, -1, 1};\n// \u8fd9\u4e9b\u6570\u7ec4\u5206\u522b\u8868\u793a\u7ea2\u5b50\u548c\u9ed1\u5b50\u7684\u79fb\u52a8\u3002\n\nint ID, T, n, m, srx1, sry1, srx2, sry2, sbx, sby;\nint sg[11][11][11][11][11][11][2], in[11][11][11][11][11][11][2], vis[11][11][11][11][11][11][2];\n// \u4e09\u4e2a\u6570\u7ec4\u5206\u522b\u5b58\u7ed3\u679c\u3001\u5ea6\u6570\u3001\u662f\u5426\u4e3a\u7ed3\u675f\u72b6\u6001\u3002\nchar ch[15][15];\nstruct node { // \u5c06\u72b6\u6001\u7528\u7ed3\u6784\u4f53\u5b58\u8d77\u6765\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01\u3002\n\tint rx1, ry1, rx2, ry2, bx, by, f;\n\n\tnode() = default;\n\tnode(int _rx1, int _ry1, int _rx2, int _ry2, int _bx, int _by, int _f): rx1(_rx1), ry1(_ry1), rx2(_rx2), ry2(_ry2), bx(_bx), by(_by), f(_f) {}\n\tbool operator==(const node &x) const {\n\t\treturn rx1 == x.rx1 && ry1 == x.ry1 && rx2 == x.rx2 && ry2 == x.ry2 && bx == x.bx && by == x.by && f == x.f;\n\t}\n};\n\nint check(int xx, int yy) {\n\treturn 1 <= xx && xx <= n && 1 <= yy && yy <= m && ch[xx][yy] !='#';\n}\n\nint main() {\n\t// freopen(\"zu.in\", \"r\", stdin);\n\t// freopen(\"zu.out\", \"w\", stdout);\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcin >> ID >> T;\n\twhile (T--) {\n\t\tcin >> n >> m;\n\t\tsrx1 = 0;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= m; j++) {\n\t\t\t\tcin >> ch[i][j];\n\t\t\t\tif (ch[i][j] == 'O') {\n\t\t\t\t\tif (!srx1) srx1 = i, sry1 = j;\n\t\t\t\t\telse srx2 = i, sry2 = j;\n\t\t\t\t} else if (ch[i][j] == 'X') sbx = i, sby = j;\n\t\t\t}\n\t\tqueue<node> q;\n\t\tfor (int rx1 = 1; rx1 <= n; rx1++) // \u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u548c\u7ed3\u675f\u72b6\u6001\u3002\n\t\t\tfor (int ry1 = 1; ry1 <= m; ry1++) if (ch[rx1][ry1] != '#')\n\t\t\t\tfor (int rx2 = rx1; rx2 <= n; rx2++)\n\t\t\t\t\tfor (int ry2 = (rx2 == rx1 ? ry1 + 1 : 1); ry2 <= m; ry2++) if (ch[rx2][ry2] != '#')\n\t\t\t\t\t\tfor (int bx = 1; bx <= n; bx++)\n\t\t\t\t\t\t\tfor (int by = 1; by <= m; by++) if (ch[bx][by] != '#')\n\t\t\t\t\t\t\t\tfor (int f = 0; f < 2; f++) {\n\t\t\t\t\t\t\t\t\tsg[rx1][ry1][rx2][ry2][bx][by][f] = 0;\n\t\t\t\t\t\t\t\t\tin[rx1][ry1][rx2][ry2][bx][by][f] = 0;\n\t\t\t\t\t\t\t\t\tvis[rx1][ry1][rx2][ry2][bx][by][f] = 0;\n                                    // \u521d\u59cb\u5316\u3002\n\t\t\t\t\t\t\t\t\tif (f == 0) { // \u7ea2\u65b9\u5148\u3002\n\t\t\t\t\t\t\t\t\t\tif (bx == 1) { // \u9ed1\u5b50\u5728\u7b2c\u4e00\u884c\n\t\t\t\t\t\t\t\t\t\t\tq.emplace(rx1, ry1, rx2, ry2, bx, by, f);\n\t\t\t\t\t\t\t\t\t\t\tVIS(node(rx1, ry1, rx2, ry2, bx, by, f)) = 1;\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif ((rx1 == bx && ry1 == by) || (rx2 == bx && ry2 == by)) { // \u7ea2\u5b50\u4e0e\u9ed1\u5b50\u5728\u540c\u4e00\u4e2a\u683c\u5b50\uff0c\u4e14\u4e0a\u4e00\u6b65\u662f\u9ed1\u5b50\u3002\n\t\t\t\t\t\t\t\t\t\t\tq.emplace(rx1, ry1, rx2, ry2, bx, by, f);\n\t\t\t\t\t\t\t\t\t\t\tVIS(node(rx1, ry1, rx2, ry2, bx, by, f)) = 1;\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tfor (int i = 0; i < 4; i++) { // \u79fb\u52a8\u7b2c\u4e00\u4e2a\u7ea2\u5b50\n\t\t\t\t\t\t\t\t\t\t\tint xx = rx1 + grx[i], yy = ry1 + gry[i];\n\t\t\t\t\t\t\t\t\t\t\tif (!check(xx, yy)) continue;\n\t\t\t\t\t\t\t\t\t\t\tif (xx == rx2 && yy == ry2) continue; // \u6ce8\u610f\u4e24\u4e2a\u7ea2\u5b50\u4e0d\u80fd\u5728\u540c\u4e00\u4e2a\u683c\u5b50\u4e0a\uff01\n\t\t\t\t\t\t\t\t\t\t\tin[rx1][ry1][rx2][ry2][bx][by][f]++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tfor (int i = 0; i < 4; i++) { // \u79fb\u52a8\u7b2c\u4e8c\u4e2a\u7ea2\u5b50\n\t\t\t\t\t\t\t\t\t\t\tint xx = rx2 + grx[i], yy = ry2 + gry[i];\n\t\t\t\t\t\t\t\t\t\t\tif (!check(xx, yy)) continue;\n\t\t\t\t\t\t\t\t\t\t\tif (xx == rx1 && yy == ry1) continue;\n\t\t\t\t\t\t\t\t\t\t\tin[rx1][ry1][rx2][ry2][bx][by][f]++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (in[rx1][ry1][rx2][ry2][bx][by][f] == 0) { // \u7ea2\u65b9\u65e0\u6cd5\u79fb\u52a8\n\t\t\t\t\t\t\t\t\t\t\tq.emplace(rx1, ry1, rx2, ry2, bx, by, f);\n\t\t\t\t\t\t\t\t\t\t\tVIS(node(rx1, ry1, rx2, ry2, bx, by, f)) = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif ((rx1 == bx && ry1 == by) || (rx2 == bx && ry2 == by)) { // \u7ea2\u5b50\u4e0e\u9ed1\u5b50\u5728\u540c\u4e00\u4e2a\u683c\u5b50\uff0c\u4e14\u4e0a\u4e00\u6b65\u662f\u7ea2\u5b50\u3002\n\t\t\t\t\t\t\t\t\t\t\tq.emplace(rx1, ry1, rx2, ry2, bx, by, f);\n\t\t\t\t\t\t\t\t\t\t\tVIS(node(rx1, ry1, rx2, ry2, bx, by, f)) = 1;\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tfor (int i = 0; i < 3; i++) { // \u79fb\u52a8\u9ed1\u5b50\n\t\t\t\t\t\t\t\t\t\t\tint xx = bx + gbx[i], yy = by + gby[i];\n\t\t\t\t\t\t\t\t\t\t\tif (!check(xx, yy)) continue;\n\t\t\t\t\t\t\t\t\t\t\tin[rx1][ry1][rx2][ry2][bx][by][f]++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (in[rx1][ry1][rx2][ry2][bx][by][f] == 0) { // \u9ed1\u65b9\u65e0\u6cd5\u79fb\u52a8\n\t\t\t\t\t\t\t\t\t\t\tq.emplace(rx1, ry1, rx2, ry2, bx, by, f);\n\t\t\t\t\t\t\t\t\t\t\tVIS(node(rx1, ry1, rx2, ry2, bx, by, f)) = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\tint flag = 0; // flag \u8868\u793a\u7ed3\u679c\u662f\u5426\u4e3a Tie\u3002\n\t\twhile (!q.empty()) {\n\t\t\tnode now = q.front();\n\t\t\tq.pop();\n\t\t\tif (now == node(srx1, sry1, srx2, sry2, sbx, sby, 0)) {\n\t\t\t\tif (SG(now) % 2 == 1) cout << \"Red \" << SG(now) << '\\n';\n\t\t\t\telse cout << \"Black \" << SG(now) << '\\n';\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (now.f == 0) { // \u5f53\u524d\u4e3a\u7ea2\u65b9\u5148\u8d70\uff0c\u5219\u4e0a\u4e00\u6b65\u4e3a\u9ed1\u65b9\u3002\n\t\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\t\tint xx = now.bx - gbx[i], yy = now.by - gby[i];\n\t\t\t\t\tif (!check(xx, yy)) continue;\n\t\t\t\t\tnode to = now;\n\t\t\t\t\tto.bx = xx, to.by = yy;\n\t\t\t\t\tto.f ^= 1;\n\t\t\t\t\tif (VIS(to)) continue;\n\t\t\t\t\tif (SG(now) % 2 == 0) { // \u5f53\u524d\u4e3a\u5fc5\u8d25\u72b6\u6001\uff0c\u5219\u88ab\u66f4\u65b0\u72b6\u6001\u4e3a\u5fc5\u80dc\u72b6\u6001\u3002\n\t\t\t\t\t\tif (SG(to) % 2 == 0) { // \u539f\u672c\u6ca1\u6709\u5fc5\u80dc\u72b6\u6001\uff0c\u76f4\u63a5\u66f4\u65b0\u3002\n\t\t\t\t\t\t\tSG(to) = SG(now) + 1;\n\t\t\t\t\t\t\tIN(to) = 0;\n\t\t\t\t\t\t\tq.push(to);\n\t\t\t\t\t\t} else SG(to) = min(SG(to), SG(now) + 1); // \u539f\u672c\u5c31\u662f\u5fc5\u80dc\u72b6\u6001\uff0c\u53d6\u6700\u5c0f\u503c\u3002\n\t\t\t\t\t} else if(SG(to) % 2 == 0) SG(to) = max(SG(to), SG(now) + 1); // \u5f53\u524d\u4e3a\u5fc5\u80dc\u72b6\u6001\uff0c\u5219\u88ab\u66f4\u65b0\u72b6\u6001\u4e3a\u5fc5\u8d25\u72b6\u6001\u3002\u82e5\u88ab\u66f4\u65b0\u72b6\u6001\u539f\u672c\u5373\u4e3a\u5fc5\u8d25\u72b6\u6001\u5219\u53d6\u6700\u5927\u503c\u3002\n\t\t\t\t\tif (!--IN(to)) q.push(to);\n\t\t\t\t}\n\t\t\t} else { // \u5f53\u524d\u4e3a\u9ed1\u65b9\u5148\u8d70\uff0c\u5219\u4e0a\u4e00\u6b65\u4e3a\u7ea2\u65b9\u3002\n\t\t\t\tfor (int i = 0; i < 4; i++) { // \u4e0a\u4e00\u6b65\u79fb\u52a8\u7b2c\u4e00\u4e2a\u7ea2\u5b50\u3002\n\t\t\t\t\tint xx = now.rx1 - grx[i], yy = now.ry1 - gry[i];\n\t\t\t\t\tif (!check(xx, yy)) continue;\n\t\t\t\t\tnode to = now;\n\t\t\t\t\tto.rx1 = xx, to.ry1 = yy;\n\t\t\t\t\tto.f ^= 1;\n\t\t\t\t\tif (to.rx1 > to.rx2 || (to.rx1 == to.rx2 && to.ry1 > to.ry2))\n\t\t\t\t\t\tswap(to.rx1, to.rx2), swap(to.ry1, to.ry2); // \u4e00\u534a\u72b6\u6001\u7684\u526a\u679d\u3002\n\t\t\t\t\tif (to.rx1 == to.rx2 && to.ry1 == to.ry2) continue;\n\t\t\t\t\tif (VIS(to)) continue;\n\t\t\t\t\tif (SG(now) % 2 == 0) {\n\t\t\t\t\t\tif (SG(to) % 2 == 0) {\n\t\t\t\t\t\t\tSG(to) = SG(now) + 1;\n\t\t\t\t\t\t\tIN(to) = 0;\n\t\t\t\t\t\t\tq.push(to);\n\t\t\t\t\t\t} else SG(to) = min(SG(to), SG(now) + 1);\n\t\t\t\t\t} else if(SG(to) % 2 == 0) SG(to) = max(SG(to), SG(now) + 1);\n\t\t\t\t\tif (!--IN(to)) q.push(to);\n                    // \u8fd9\u91cc\u4e0e\u4e0a\u9762\u76f8\u540c\u3002\n\t\t\t\t}\n\t\t\t\tfor (int i = 0; i < 4; i++) { // \u4e0a\u4e00\u6b65\u79fb\u52a8\u7b2c\u4e8c\u4e2a\u7ea2\u5b50\u3002\n\t\t\t\t\tint xx = now.rx2 - grx[i], yy = now.ry2 - gry[i];\n\t\t\t\t\tif (!check(xx, yy)) continue;\n\t\t\t\t\tnode to = now;\n\t\t\t\t\tto.rx2 = xx, to.ry2 = yy;\n\t\t\t\t\tto.f ^= 1;\n\t\t\t\t\tif (to.rx1 > to.rx2 || (to.rx1 == to.rx2 && to.ry1 > to.ry2))\n\t\t\t\t\t\tswap(to.rx1, to.rx2), swap(to.ry1, to.ry2);\n\t\t\t\t\tif (to.rx1 == to.rx2 && to.ry1 == to.ry2) continue;\n\t\t\t\t\tif (VIS(to)) continue;\n\t\t\t\t\tif (SG(now) % 2 == 0) {\n\t\t\t\t\t\tif (SG(to) % 2 == 0) {\n\t\t\t\t\t\t\tSG(to) = SG(now) + 1;\n\t\t\t\t\t\t\tIN(to) = 0;\n\t\t\t\t\t\t\tq.push(to);\n\t\t\t\t\t\t} else SG(to) = min(SG(to), SG(now) + 1);\n\t\t\t\t\t} else if(SG(to) % 2 == 0) SG(to) = max(SG(to), SG(now) + 1);\n\t\t\t\t\tif (!--IN(to)) q.push(to);\n\t\t\t\t}\n                // \u8fd9\u91cc\u4e0e\u4e0a\u9762\u76f8\u540c\u3002\n\t\t\t}\n\t\t}\n\t\tif (!flag) cout << \"Tie\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1681372560,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P9169 \u3010[\u7701\u9009\u8054\u8003 2023] \u8fc7\u6cb3\u5352\u3011"
    }
]