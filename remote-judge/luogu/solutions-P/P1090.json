[
    {
        "content": "## \u9996\u5148\u770b\u5230\u5404\u4f4d\u5927\u4f6c\u7528\u7684\u90fd\u662f\u5806\u6216\u6876\u6211\u4e5f\u5c31\u653e\u5fc3\u4e86\n~~\u5f53\u7136\u6211\u505a\u8fd9\u9053\u9898\u7684\u601d\u8def\u4e5f\u662f\u5806~~\n\n\u4f46\u662f,\u7b80\u5355\u7684\u4ecb\u7ecd\u5806\u5e76\u4e0d\u662f\u6211\u5199\u8fd9\u9053\u9898\u7684\u76ee\u7684\n\n# \u6211\u5199\u8fd9\u7bc7\u9898\u89e3\uff0c\u662f\u4e3a\u4e86\u8ba9\u5404\u4f4d\u4e86\u89e3\u4e00\u4e0b\u5927\u5bb6\u5e73\u65f6\u5f88\u5c11\u6ce8\u610f\u7684C++\u7684\u67d0\u4e2a\u65b9\u9762\n~~\u53d1\u6398\u66f4\u591a\u65b0\u73a9\u6cd5~~\n\n~~\u628a\u4f60\u4eec\u4ece\u7b97\u6cd5\u7684\u6df1\u6e0a\u62c9\u51fa\u6765~~\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u6b63\u6587\u5f00\u59cb\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u6b64\u7bc7\u4e3aC++\u798f\u5229\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n## \u7b2c\u4e00\u90e8\u5206\n\n\u8bbe\u60f3\u4e00\u4e0b\uff0c\u67d0\u4e00\u5929\uff0c\u5f53\u4f60\u5174\u81f4\u52c3\u52c3\u7684\u5728\u6d1b\u8c37\u91cc\u5237\u9898\u65f6\uff0c\u770b\u5230\u4e86\u4e00\u9053\u53eb\u201c\u5408\u5e76\u679c\u5b50\u201d\u7684\u9898\uff0c\u4f60\u4e0d\u5c51\u5730\u626b\u4e86\u4e00\u904d\u9898\u76ee\uff0c\u5fc3\u60f3\u7740\u8fd9\u79cd\u6a21\u677f\u9898\u4e5f\u597d\u610f\u601d\u5165\u9009\u63d0\u9ad8\u7ec4\u3002\u8fc5\u901f\u7528\u5c0f\u6839\u5806\u5c06\u5b83AC\u540e\uff0c\u5374\u5bf9\u5806\u4ea7\u751f\u4e86\u6d53\u539a\u5174\u8da3\uff0c\u4fbf\u53c8\u627e\u6765\u4e00\u9053\u4e0e\u5806\u6709\u5173\u7684\u9898\uff0c\u60ca\u8bb6\u53d1\u73b0\u8be5\u9898\u7684\u6570\u636elong long\u88c5\u4e0d\u4e0b\uff0c\u4e8e\u662f\u53c8\u5199\u4e86\u4e00\u7bc7\u9ad8\u7cbe\uff0c\u4f46\u662f\u5728\u7ed3\u5408\u4e24\u8005\u65f6\u5374\u6b7b\u6d3b\u90fd\u7ed3\u5408\u4e0d\u4e86\uff0c\u6700\u540e\u5173\u6389\u7535\u8111\uff0c\u751f\u65e0\u53ef\u604b\u3002\n\n\u6362\u4e00\u4e2a\u573a\u666f\uff0c\u5f88\u591a\u4eba\u90fd\u7528\u8fc7\uff0c\u81f3\u5c11\u63a5\u89e6\u8fc7C++\u7684STL\u5e93\uff0c\u90a3\u4e48\u5e94\u8be5\u5c31\u5f88\u719f\u6089\u5f62\u4f3c\u8fd9\u6837\u7684\u4e1c\u897f\n```cpp\npriority_queue < int, vector<int>, greater<int> >;\nvector < long long >;\nqueue <double >;\n```\n\u4e00\u4e9b\u7ec6\u5fc3\u7684\u4eba\u53ef\u80fd\u5c31\u4f1a\u53d1\u73b0\uff0c\u5728<>\u7b80\u76f4\u53ef\u4ee5\u88c5\u4e0b\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48C++\uff0c\u5230\u5e95\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u79cd\u64cd\u4f5c\u7684\u5462\uff1f\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n## \u7b2c\u4e8c\u90e8\u5206\n\n\u6211\u4eec\u56de\u5230\u7b2c\u4e00\u4e2a\u8bbe\u60f3\uff0c\u4f60\u5728\u5199\u4e86\u4e00\u7bc7\u5806\u6a21\u677f\u540e\uff0c\u4e3a\u4e86\u8ba9\u5b83\u80fd\u591f\u652f\u6301\u4e0d\u540c\u6570\u636e\u7c7b\u578b\uff0c\u5bf9\u4ee3\u7801\u8fdb\u884c\u4e86\u8fd9\u6837\u7684\u6539\u52a8\n```cpp\ntypedef item int;\nclass heap{\n\tprivate:\n    \titem h[1001];\n        int len;\n    public:\n    \theap();\n        void push(item const &);\n        void pop();\n}\n```\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u6570\u636e\u7c7b\u578b\uff0c\u8fd0\u7528\u4e0d\u540c\u7684\u5806\n```cpp\ntypedef item long long;\nclass heap{\n\tprivate:\n    \titem h[1001];\n        int len;\n    public:\n    \theap();\n        void push(item const &);\n        void pop();\n}\n```\n\n```cpp\ntypedef item string;\nclass heap{\n\tprivate:\n    \titem h[1001];\n        int len;\n    public:\n    \theap();\n        void push(item const &);\n        void pop();\n}\n```\n\u4f46\u8fd9\u6837\u5374\u6709\u4e24\u4e2a\u81f4\u547d\u7684\u7f3a\u9677\uff0c\u90a3\u5c31\u662f\u6bcf\u6b21\u4f7f\u7528\uff0c\u90fd\u5f97\u6539\u4e00\u4e0b\u5934\u6587\u4ef6\uff0c\u5e76\u4e14\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u5806\u3002\u90a3\u4e48\u5e94\u8be5\u600e\u6837\u505a\u5462\uff1f\u4f60\u4e0d\u7981\u9677\u5165\u4e86\u6c89\u601d\u3002\n\n## \u7b2c\u4e09\u90e8\u5206\n\u806a\u660e\u7684\u4f60\u5f53\u7136\u77e5\u9053\u5982\u4f55\u4f7f\u7528\u7f51\u7edc\u6765\u4f7f\u81ea\u5df1\u7684\u751f\u6d3b\u66f4\u52a0\u4fbf\u5229\uff0c\u4e8e\u662f\u4f60\u5728\u201c\u767e\u5ea6\u4e00\u4e0b\u201d\u4e2d\u6253\u51fa\u4e86\n```cpp\npriority_queue < int, vector<int>, greater<int> >\n```\n\u5e76\u6309\u4e0b\u4e86\u56de\u8f66\uff0c\u7ed3\u679c\u8df3\u51fa\u6765\u6ee1\u5c4f\u7684\u201c\u5bb9\u5668\u201d\u554a\uff0c\u201cCSDN\u535a\u5ba2\u201d\u554a\u4e4b\u7c7b\u7684\uff0c\u8ba9\u4f60\u5fc3\u70e6\u610f\u71e5\uff0c\u5206\u5206\u949f\u539f\u5730\u7206\u70b8\u3002\u6216\u662f\u7785\u7740\u987a\u773c\u7684\u70b9\u4e86\u4e00\u7bc7\uff0c\u8010\u7740\u6027\u5b50\u770b\u5b8c\uff0c\u6700\u540e\u5b66\u5230\u4e86NOTHING\u3002\n\n\u4f46\u662f\uff0c\u4e00\u4e2a\u8bcd\u8bed\u7a81\u7136\u4ece\u4f60\u773c\u524d\u95ea\u8fc7\uff0c\u8fd9\u4e2a\u8bcd\u8bed\u4eff\u4f5b\u6709\u7740\u9b54\u529b\uff0c\u4f7f\u4f60\u7684\u89c6\u7ebf\u4e00\u4e0b\u5b50\u805a\u7126\u5728\u4e86\u5b83\u8eab\u4e0a\uff0c\u4f60\u7684\u8111\u4e2d\u4eff\u4f5b\u6d6e\u73b0\u51fa\u4e86\u4ec0\u4e48\uff0c\u53c8\u4eff\u4f5b\u6ca1\u6709\u3002\n\n### \u201c\u7c7b\u6a21\u677f\u201d\n\u4f60\u8f7b\u8f7b\u5730\u5ff5\u53e8\u7740\u8fd9\u8bcd\u3002\n\n## \u7b2c\u56db\u90e8\u5206\n### \u7c7b\u6a21\u677f\uff0c\u6a21\u677f\u7684\u7c7b\u578b\u53c2\u6570\u7531\u5173\u952e\u5b57class \u6216\u5173\u952e\u5b57typename \u53ca\u5176\u540e\u7684\u6807\u8bc6\u7b26\u6784\u6210\u3002\u5728\u6a21\u677f\u53c2\u6570\u8868\u4e2d\u5173\u952e\u5b57class \u548ctypename \u7684\u610f\u4e49\u76f8\u540c\u3002(\u5728\u6807\u51c6C++\u4e4b\u524d\u5173\u952e\u5b57typename \u6ca1\u6709\u88ab\u652f\u6301 \uff0c\u628a\u8fd9\u4e2a\u5173\u952e\u5b57\u52a0\u5165\u5230C++\u4e2d\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u6709\u65f6\u5fc5\u987b\u8981\u9760\u5b83\u6765\u6307\u5bfc\u7f16\u8bd1\u5668\u89e3\u91ca\u6a21\u677f\u5b9a\u4e49\u3002)\uff0c\u662f\u5bf9\u4e00\u6279\u4ec5\u4ec5\u6210\u5458\u6570\u636e\u7c7b\u578b\u4e0d\u540c\u7684\u7c7b\u7684\u62bd\u8c61\uff0c\u7a0b\u5e8f\u5458\u53ea\u8981\u4e3a\u8fd9\u4e00\u6279\u7c7b\u6240\u7ec4\u6210\u7684\u6574\u4e2a\u7c7b\u5bb6\u65cf\u521b\u5efa\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u7ed9\u51fa\u4e00\u5957\u7a0b\u5e8f\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u7528\u6765\u751f\u6210\u591a\u79cd\u5177\u4f53\u7684\u7c7b\uff0c(\u8fd9\u7c7b\u53ef\u4ee5\u770b\u4f5c\u662f\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b)\uff0c\u4ece\u800c\u5927\u5927\u63d0\u9ad8\u7f16\u7a0b\u7684\u6548\u7387\u3002\u2014\u2014\u2014\u2014360\u767e\u79d1\n\u6211\u4eec\u4e3e\u4e2a\u5217\u5b50\uff1a\n```cpp\ntemplate<typename item>\nclass smallest_heap{\n\tprivate:\n\t\titem heap[10001];\n\t\tint len;\n\tpublic:\n\t\tsmallest_heap();\n\t\tvoid push(item const &);\n\t\tvoid pop();\n\t\titem top();\n\t\tint size();\n\t\tbool empty();\n\t\t\n};\n```\n\u5176\u4e2d\u7b2c\u4e00\u6392\u7684\n```cpp\ntemplate<typename item>\n```\n\u5c31\u662f\u5173\u952e\uff0c\u5b83\u6307\u51fa\u63a5\u4e0b\u6765\u58f0\u660e\u7684\u67d0\u4e2a\u7c7b\u662f\u6a21\u677f\uff0c\u4e5f\u5c31\u662f\u90e8\u5206\u6570\u636e\u7c7b\u578b\u4e0d\u786e\u5b9a\uff0c\u6682\u4e14\u5c06\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u53eb\u505a\n```cpp\nitem\n```\n\u800c\u65b9\u6cd5\uff08\u4e5f\u5c31\u662f\u6210\u5458\u51fd\u6570\uff09\uff0c\u76f8\u4fe1\u5404\u4f4d\u5927\u4f6c\u90fd\u4f1a\u5199\u3002\u4f46\u662f\uff0c\u8981\u6ce8\u610f\uff0c\u5728\u64cd\u4f5c\u65f6\uff0c\u6709\u4e00\u4e9b\u4e0d\u540c\u6307\u51fa\n```cpp\ntemplate<typename item>\nsmallest_heap<item>::smallest_heap(){\n\tlen=0;\n\tmemset(heap,0,sizeof(heap));\n}\n\ntemplate<typename item>\nvoid smallest_heap<item>::push(item const &n){\n\theap[++len]=n;\n\tint son=len,father=son/2;\n\twhile(heap[son]<heap[father] && father>=1){\n\t\tswap(heap[son],heap[father]);\n\t\tson=father,father=son/2;\n\t}\n}\n\ntemplate<typename item>\nvoid smallest_heap<item>::pop(){\n\tswap(heap[1],heap[len]);\n\theap[len--]=0;\n\tint father=1,son=2;\n\twhile(son<=len){\n\t\tif(son<len && heap[son]>heap[son+1]) son++;\n\t\tif(heap[father]>heap[son]){\n\t\t\tswap(heap[father],heap[son]);\n\t\t\tfather=son,son=father*2;\n\t\t}else break;\n\t}\n}\n\ntemplate<typename item>\nitem smallest_heap<item>::top(){\n\treturn heap[1];\n}\n\ntemplate<typename item>\nint smallest_heap<item>::size(){\n\treturn len;\n}\n\ntemplate<typename item>\nbool smallest_heap<item>::empty(){\n\treturn len;\n}\n```\n\u5728\u6bcf\u4e2a\u65b9\u6cd5\u524d\uff0c\u90fd\u52a0\u4e86\u4e00\u6392\n```cpp\ntemplate<typename item>\n```\n\u8fd9\u662f\u56e0\u4e3a\u7c7b\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u786e\u5b9a\uff0c\u81ea\u7136\u65b9\u6cd5\u6570\u636e\u7c7b\u578b\u4e5f\u4e0d\u786e\u5b9a\uff0c\u6240\u4ee5\u7528\n```cpp\nitem\n```\n\u6765\u66ff\u4ee3\u3002\u5e76\u4e14\u5728\u58f0\u660e\u65b9\u6cd5\u6240\u5c5e\u57df\u65f6\uff0c\u4e5f\u4e0d\u662f\n```cpp\nsmallest_heap::smallest_heap()\n```\n\u800c\u662f\n```cpp\nsmallest_heap<item>::smallest_heap()\n```\n\u6700\u540e\u9001\u4e0aAC\u4ee3\u7801\u4ee5\u53ca\u5c0f\u6839\u5806\uff0c\u5927\u6839\u5806\u6a21\u677f\u4e00\u4efd\n\n## \u756a\u5916\nAC\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\n\ntemplate<typename item>\nclass smallest_heap{\n\tprivate:\n\t\titem heap[10001];\n\t\tint len;\n\tpublic:\n\t\tsmallest_heap();\n\t\tvoid push(item const &);\n\t\tvoid pop();\n\t\titem top();\n\t\tint size();\n\t\tbool empty();\n\t\t\n};\n\ntemplate<typename item>\nsmallest_heap<item>::smallest_heap(){\n\tlen=0;\n\tmemset(heap,0,sizeof(heap));\n}\n\ntemplate<typename item>\nvoid smallest_heap<item>::push(item const &n){\n\theap[++len]=n;\n\tint son=len,father=son/2;\n\twhile(heap[son]<heap[father] && father>=1){\n\t\tswap(heap[son],heap[father]);\n\t\tson=father,father=son/2;\n\t}\n}\n\ntemplate<typename item>\nvoid smallest_heap<item>::pop(){\n\tswap(heap[1],heap[len]);\n\theap[len--]=0;\n\tint father=1,son=2;\n\twhile(son<=len){\n\t\tif(son<len && heap[son]>heap[son+1]) son++;\n\t\tif(heap[father]>heap[son]){\n\t\t\tswap(heap[father],heap[son]);\n\t\t\tfather=son,son=father*2;\n\t\t}else break;\n\t}\n}\n\ntemplate<typename item>\nitem smallest_heap<item>::top(){\n\treturn heap[1];\n}\n\ntemplate<typename item>\nint smallest_heap<item>::size(){\n\treturn len;\n}\n\ntemplate<typename item>\nbool smallest_heap<item>::empty(){\n\treturn len;\n}\n\n\nsmallest_heap<int> h;\nint n,ans;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tint a;\n\t\tcin>>a;\n\t\th.push(a);\n\t}\n\twhile(h.size()>1){\n\t\tint x=h.top(); h.pop();\n\t\tint y=h.top(); h.pop();\n\t\th.push(x+y);\n\t\tans+=x+y;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u5c0f\u6839\u5806\n```cpp\n#include<cstring>\n\ntemplate<typename item>\nclass smallest_heap{\n\tprivate:\n\t\titem heap[10001];\n\t\tint len;\n\tpublic:\n\t\tsmallest_heap();\n\t\tvoid push(item const &);\n\t\tvoid pop();\n\t\titem top();\n\t\tint size();\n\t\tbool empty();\n\t\t\n};\n\ntemplate<typename item>\nsmallest_heap<item>::smallest_heap(){\n\tlen=0;\n\tmemset(heap,0,sizeof(heap));\n}\n\ntemplate<typename item>\nvoid smallest_heap<item>::push(item const &n){\n\theap[++len]=n;\n\tint son=len,father=son/2;\n\twhile(heap[son]<heap[father] && father>=1){\n\t\tswap(heap[son],heap[father]);\n\t\tson=father,father=son/2;\n\t}\n}\n\ntemplate<typename item>\nvoid smallest_heap<item>::pop(){\n\tswap(heap[1],heap[len]);\n\theap[len--]=0;\n\tint father=1,son=2;\n\twhile(son<=len){\n\t\tif(son<len && heap[son]>heap[son+1]) son++;\n\t\tif(heap[father]>heap[son]){\n\t\t\tswap(heap[father],heap[son]);\n\t\t\tfather=son,son=father*2;\n\t\t}else break;\n\t}\n}\n\ntemplate<typename item>\nitem smallest_heap<item>::top(){\n\treturn heap[1];\n}\n\ntemplate<typename item>\nint smallest_heap<item>::size(){\n\treturn len;\n}\n\ntemplate<typename item>\nbool smallest_heap<item>::empty(){\n\treturn len;\n}\n```\n\u5927\u6839\u5806\n```cpp\n#include<cstring>\n\ntemplate<typename item>\nclass largest_heap{\n\tprivate:\n\t\titem heap[10001];\n\t\tint len;\n\tpublic:\n\t\tlargest_heap();\n\t\tvoid push(item const &);\n\t\tvoid pop();\n\t\titem top();\n\t\tint size();\n\t\tbool empty();\n\t\t\n};\n\ntemplate<typename item>\nlargest_heap<item>::largest_heap(){\n\tlen=0;\n\tmemset(heap,0,sizeof(heap));\n}\n\ntemplate<typename item>\nvoid largest_heap<item>::push(item const &n){\n\theap[++len]=n;\n\tint son=len,father=son/2;\n\twhile(heap[son]>heap[father] && father>=1){\n\t\tswap(heap[son],heap[father]);\n\t\tson=father,father=son/2;\n\t}\n}\n\ntemplate<typename item>\nvoid largest_heap<item>::pop(){\n\tswap(heap[1],heap[len]);\n\theap[len--]=0;\n\tint father=1,son=2;\n\twhile(son<=len){\n\t\tif(son<len && heap[son]<heap[son+1]) son++;\n\t\tif(heap[father]<heap[son]){\n\t\t\tswap(heap[father],heap[son]);\n\t\t\tfather=son,son=father*2;\n\t\t}else break;\n\t}\n}\n\ntemplate<typename item>\nitem largest_heap<item>::top(){\n\treturn heap[1];\n}\n\ntemplate<typename item>\nint largest_heap<item>::size(){\n\treturn len;\n}\n\ntemplate<typename item>\nbool largest_heap<item>::empty(){\n\treturn len;\n```\n\u540c\u65f6\u4e5f\u53ef\u4ee5\u652f\u6301\u81ea\u5df1\u7f16\u5199\u7684\u7c7b\uff0c\u4f46\u987b\u63d0\u4f9b\u201c<\u201d\u6216\u201c>\u201d\u7684\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u4f8b\u5982\n```cpp\nclass T{\n\tprivate:\n\t\tint a;\n\tpublic:\n\t\tbool operator<(T const &type){\n\t\t\treturn a<type.a;\n\t\t}\n};\nsmallest_heap<T> heap;\n\n\n```\n\n## \u6700\u540e\u7684\u603b\u7ed3\n\u6211\u4eec\u73b0\u5728\u6240\u8fd0\u7528\u7684C++\uff0c\u53ea\u662f\u5b83\u7684\u51b0\u5c71\u4e00\u89d2\uff0c\u5982\u679c\u6709\u4e0e\u6211\u540c\u6837\u7231\u597dC++\u7684\uff0c\u5bf9\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0clambda\u51fd\u6570\uff0c\u7c7b\u7ee7\u627f\uff0c\u51fd\u6570\u91cd\u8f7d\uff0c\u865a\u65b9\u6cd5\u7b49\u611f\u5174\u8da3\u7684\uff0c\u53ef\u4ee5\u79c1\u4fe1\u6211\uff0c\u4e00\u8d77\u8fdb\u6b65\uff01\n\n## \u756a\u5916\u4e2d\u7684\u756a\u5916\n\u63a8\u8350\u4e00\u4e2a\u7f51\u7ad9\u548c\u4e00\u672c\u4e66\n\nC\u8bed\u8a00\u4e2d\u6587\u7f51 c.biancheng.net\n\n\u300aC++ Primer Plus\u300b\n\n\t\t\t\t----\u6bd5\u7adf\u840c\u65b0\uff0c\u6587\u7b14\u4e0d\u597d\uff0c\u8bf7\u591a\u591a\u5305\u5bb9",
        "postTime": 1529630530,
        "uid": 69166,
        "name": "Way_How_Fri3nd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u849f\u84bb\u4e00\u5f00\u59cb\u5faa\u73af\u6bcf\u6b21\u90fd\u6392\u5e8f50\u5206\n\n\u7136\u540e\u849f\u84bb~~\u5728\u6807\u7b7e\u7684\u63d0\u793a\u4e0b~~\u60f3\u5230\u4e86**\u4f18\u5148\u961f\u5217**\n\nC++\u515a\u6709\u4e2a\u798f\u5229\uff1a\n\n\u6211\u4eec\u6709** _STL_ **  \uff01\uff01\uff01\n\nSTL\u91cc\u7684\u4f18\u5148\u961f\u5217 : priority_queue\n\n\u5b9a\u4e49\uff1a\n\n```cpp\npriority_queue<int>q;\n```\n\n\u4ece\u5c0f\u5230\u5927\uff1a\n\n```cpp\npriority_queue<int,vector<int>,greater<int> >q;\n```\n\n\u5982\u679c\u4f60\u60f3\u4ece\u5927\u5230\u5c0f\u7684\u8bdd\u53ef\u4ee5\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff1a\n\n```cpp\nstruct Node{\n\tint x,y;\n\tNode(int a=0, int b=0):\n\t\tx(a), y(b) {}\n};\n \nstruct cmp{\n\tbool operator()(Node a, Node b){\n\t\tif(a.x == b.x)\treturn a.y>b.y;\n\t\treturn a.x>b.x;\n\t}\n};\n\npriority_queue<Node,vector<Node>,cmp>q;\n```\n\n\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u7528less\n\n```\npriority_queue<int,vector<int>,less<int> >q;\n```\n\u6700\u540e\u8fd9\u5c31\u662f\u9053\u6c34\u9898\u4e86\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,x,ans;\npriority_queue<int,vector<int>,greater<int> >q;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>x,q.push(x);\n\twhile(q.size()>=2){\n\t\tint a=q.top(); q.pop();\n\t\tint b=q.top(); q.pop();\n\t\tans+=a+b;\n\t\tq.push(a+b);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1533201064,
        "uid": 54066,
        "name": "ybwowen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "# \u4e00\u9053\u5e26\u6709\u65f7\u53e4\u4e4b\u601d\u7684\u9898\u554a\uff01\n\n## \u6211\u662f\u771f\u7684\u88ab\u8fd9\u4e2a\u9898\u7ed9\u5751\u4e86\uff01\n\n### \u4f46\u662f\u4e00\u65e6\u60f3\u660e\u767d\u4e86\u53c8\u53d1\u73b0\u5f88\u7b80\u5355\uff01\n\n------------------------------------------------------------------------------------------------(**\u8fdb\u5165\u6b63\u9898**\uff09\n\n**\u770b\u5230\u4e86\u5f88\u591a\u7528\u5806\u554a\uff0c\u6216\u7528\u4f18\u5148\u961f\u5217\u554a\u7684\u5927\u4f6c\u3002**\n\n\u8fd8\u6709\u5f88\u591a\u7528\u6392\u5e8f\uff0c~~\u4f46\u662f\u6839\u672c\u4e0d\u6d4b\u8bd5\u5c31\u5f80\u4e0a\u53d1\u90a3\u79cd\u4e00\u5b9a\u4f1aTLE\u4ee3\u7801\u7684\u6c99\u96d5~~\n\n\u7136\u800c\u65e0\u8bba\u600e\u6837\uff0c\u4ed6\u4eec\u7684\u6548\u7387\u5927\u6982\u90fd\u5728\u4e00\u4e2a\u70b9\u5341\u51e0\u6beb\u79d2\n\n\u6211\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u6211\u7684\u6548\u7387\u80fd\u8fbe\u5230\u4e00\u4e2a\u70b9\u51e0\u6beb\u79d2\uff01\uff01\uff01\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\uff0c\u5408\u5e76\u4e00\u4e0b\uff0c\u6392\u4e00\u4e0b\u5e8f\u662f\u4e00\u5b9a\u4f1aTLE\u7684  \n\u800c\u4e14\u5361\u6b7b\u4f60\uff0c\u5c31\u7b97\u4f60\u7528sort,\u4e5f\u53ea\u80fd\u8fc74\u4e2a\u70b9\uff08\u6211\u5c31\u8fd9\u4e48\u88ab\u5751\u7684\uff09  \n\u7136\u800c\u5982\u679c\u6211\u4eec\u63a7\u5236\u4e00\u4e0b\uff0c\u7528\u56db\u6307\u9488\u53bb\u63a7\u5236\u539f\u59cb\u6570\u5217\u548c\u5408\u5e76\u540e\u7684\u6570\u5217  \n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u4e00\u5f00\u59cb\u6392\u4e00\u4e0b\u5e8f\u5c31\u884c\u4e86  \n\u6211\u4e2a\u4eba\u7528\u7684\u662f\u7ecf\u5178\u4e8c\u5206\u5feb\u6392!\u5f53\u7136\u4f60\u5176\u5b9e\u5728\u8fd9\u91cc\u7528\u4e00\u4e0bsort\u662f\u6ca1\u6709\u95ee\u9898\u7684  \n\u53ea\u4e0d\u8fc7\u6211\u4e3a\u4e86\u63d0\u9ad8\u4ee3\u7801\u6548\u7387\u3002\n\n\u9996\u5148\u7ed9\u4f60\u4eec\u770b\u4e00\u4e0b\u4e3b\u51fd\u6570\uff01\n\n```\nint main()//\u6211\u77e5\u9053\u4f60\u4eec\u5355\u72ec\u770b\u4e3b\u51fd\u6570\u662f\u770b\u4e0d\u61c2\u7684\uff01\uff01\n{\n    read();\n    quick(1,n);\n    print();\n    return 0;\n}\n```\n\u662f\u4e0d\u662f\u4e00\u8138\u61f5\u903c\u5462\uff08\u8981\u7684\u5c31\u662f\u8fd9\u4e2a\u6548\u679c\uff09\n\n\u6211\u89e3\u91ca\u4e00\u4e0b\u554a\uff01\uff01\u7a0d\u5fae\u6709\u70b9\u82f1\u8bed\u5e95\u5b50\u7684\u4eba\u554a\uff0c\u90fd\u80fd\u770b\u61c2read\u662f\u8bfb\u5165\u51fd\u6570\uff01quick\u662f\u5feb\u6392\uff01print\u662f\u8f93\u51fa\uff01\n\n\u7ed9\u4f60\u4eec\u770b\u4e00\u4e0b\u5934\u6587\u4ef6\u548c\u51fd\u6570\u5b9a\u4e49\uff01\n```\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\nvoid read();//\u8bfb\u5165\u51fd\u6570\nvoid quick(int c,int b);//\u6392\u5e8f\u51fd\u6570\nint sum();//\u5224\u5b9aand\u5408\u5e76\u51fd\u6570\nvoid print();//\u8f93\u51fa\u51fd\u6570\nint n,a[10002];//\u5176\u5b9e\u4e5f\u53ef\u4ee5\u53cc\u6570\u7ec4\uff08QAQ\uff09\n```\n\u6211\u5728\u8fd9\u91cc\u7528\u4e86\u5355\u4e2a\u6570\u7ec4\uff0c\u6211\u5199\u8d77\u6765\u4f7f\u7528\u4e86\u56db\u6307\u9488\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5206\u5f00\u770b\uff0c\u4f1a\u66f4\u5bb9\u6613\u61c2\uff01\n\n## \u6211\u7684\u6ce8\u91ca\u8d85\u597d\u770b\uff01\u6240\u4ee5\u4f60\u4f1a\u61c2\u7684\uff01\n\n\u5feb\u6392\u4ee3\u7801\uff01\u89c1\u4e0b\uff01\n```\nvoid quick(int c,int b)//\u5199\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5feb\u6392\uff01\n{\n    int f,e,k;//\u4e09\u4e2a\u53d8\u91cf\u75af\u72c2\u4e92\u6362\n    if (c==b)return;//\u6b63\u5e38\u5feb\u6392\u7684\u5224\u5b9a\uff01\u5982\u679c\u524d\u540e\u6307\u9488\u91cd\u53e0\uff0c\u8df3\u51fa\uff01\n    f=c;//\u8bb0\u5f55\u4e00\u4e0b\u53d8\u91cf\n    e=b;\n    k=a[c];//\u5b9a\u4e49\u4e00\u4e0b\u4e2d\u503c\n    while (f!=e)//\u4e24\u4e2a\u6570\u4e0d\u662f\u4e00\u4e2a\u6570\u65f6\uff01\uff01\n    {\n        while ((a[e]>=k)&&(e>f))e--;//\u540e\u9762\u5927\u4e8e\u4e2d\u503c\u4e14\u4e24\u4e2a\u7684\u4e0b\u6807\u4e5f\u662f\u540e\u9762\u5927\u4e8e\u4e2d\u503c\u65f6\u6211\u4eec\u5c31\u76f4\u63a5\u518d\u5f80\u524d\u4e32\u4e00\u4e2a\u7ee7\u7eed\u641c\uff01\n        if (a[e]<k)//\u8bf6\uff0c\u5f53\u540e\u9762\u5c0f\u4e8e\u4e2d\u503c\u65f6\uff01\n        {\n            a[f++]=a[e];//\u5148\u628a\u5934\u6362\u4e00\u4e0b\uff0c\u518d\u5f80\u540e\u4e32\u4e00\u4e0b\uff01\n            while((a[f]<k)&&(f<e))f++;//\u4ece\u5934\u641c\u4e00\u4e0b\u8981\u662f\u4e00\u76f4\u5c0f\u4e8e\u4e2d\u503c\u5c31\u975e\u5e38\u68d2\u68d2\uff0c\u5c31\u4e00\u76f4\u641c\u4e0b\u53bb\u76f4\u5230\u627e\u5230\u5927\u4e8e\u4e2d\u503c\u7684\uff01\uff01\n            if(a[f]>=k)//\u7b49\u6211\u641c\u5230\u5927\u4e8e\u4e2d\u503c\u7684\u65f6\u5019\uff01\u563f\u563f\u563f\uff01\n            {\n                a[e--]=a[f];//\u6211\u5c31\u518d\u628a\u5934\u6362\u8fc7\u53bb\uff01\uff01\n            }\n        }\n\n    }\n    a[f]=k;//\u7136\u540e\u6211\u518d\u5b9a\u4e49\u4e00\u4e0b\u4e2d\u503c\n    if (f-c>1) quick(c,f-1);//\u75af\u72c2\u4e8c\u5206\u9012\u5f52\u524d\u534a\u90e8\u5206\uff01\n    if (b-f>1) quick(f+1,b);//\u75af\u72c2\u4e8c\u5206\u9012\u5f52\u540e\u534a\u90e8\u5206\uff01\n    return;\n}\n```\n\u8fd9\u5c31\u662f\u4e2a\u7b80\u5355\u7684\uff0c\u666e\u901a\u7684\u5feb\u6392\uff01\uff01\n\n\u6bd4\u8f83\u96be\u7406\u89e3\u7684\u662f\u4e0b\u9762\u8fd9\u4e2a\u5408\u5e76\u548c\u6307\u9488\u63a7\u5236\u7684\u51fd\u6570\uff01\u80fd\u4e0d\u80fd\u61c2\u5c31\u770b\u9020\u5316\u4e86\u3002\u6211\u4e3a\u4e86\u8ba9\u4f60\u4eec\u61c2\u6211\u8fd8\u662f\u5199\u4e86\u633a\u591a\u7684\uff01\n\n\u5408\u5e76\u51fd\u6570\uff01\u89c1\u4e0b\uff01\n```\nint sum()//\u5408\u5e76\u90e8\u5206\uff01\uff01\u6211\u81ea\u5df1\u770b\u7684\u90fd\u5934\u6655\u4e89\u53d6\u8ba9\u5927\u5bb6\u770b\u61c2\uff01\uff01\n{\n    int Af,Ae,Bf=1,Be,sum=0;//Af\uff0cAe\u662f\u521d\u59cb\u961f\u5217\u7684\u5934,\u5c3e\u3002Bf\uff0cBe\u662f\u5408\u5e76\u540e\u961f\u5217\u7684\u5934\u548c\u5c3e\n/*\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u8bf4\u4e86\u53ef\u4ee5\u7528\u4e24\u4e2a\u961f\u5217\uff08\u6570\u7ec4\uff09\uff0c\u4e00\u4e2a\u5b58\u5408\u5e76\uff0c\u4e00\u4e2a\u5b58\u521d\u59cb\uff0c\u7136\u540e\u75af\u72c2\u5220\u51cf\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\n\u521d\u59cb\u961f\u5217\u662f\u5728\u4e0d\u505c\u5220\uff0c\u5408\u5e76\u961f\u5217\u5374\u5728\u4e0d\u505c\u52a0\uff0c\u8981\u6ce8\u610f\u597d\u63a7\u5236\u4e24\u4e2a\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u8981\u5173\u6ce8\uff0c\u521d\u59cb\u961f\u5217\u662f\u53ef\u80fd\u88ab\u6e05\u7a7a\u7684\uff0c\u6e05\n\u5373\u8df3\u51fa*/\n    if (n==1)return a[1];//\u5176\u5b9e\u4e00\u5806\u7684\u8bdd\u6211\u4e0d\u8d39\u529b\u6c14\u7684\uff0c\u4f46\u662f\u6211\u8981\u4ee5\u7b2c\u4e00\u5806\u4e3a\u57fa\u7840\uff01\uff01\u4ed6\u4e5f\u80af\u5b9a\u4e0d\u4f1a\u53ea\u7ed9\u6211\u4e00\u5806\u7684\u5bf9\u5427\uff01\n    a[1]=a[1]+a[2];//\u5408\u5e76\uff0c\u7b2c\u4e00\u5806\u7b49\u4e8e\u524d\u4e24\u5806\u4e4b\u548c\uff01\n    Af=3;//\u524d\u4e24\u5806\u5df2\u7ecf\u5408\u5e76\u4e86\uff0c\u6211\u8ba9\u4ed6\u4ece\u7b2c\u4e09\u4e2a\u5f00\u59cb\uff01\n    Ae=n;//\u7136\u540e\u5728\u7b2cn\u4e2a\u7ed3\u675f\uff01\n    Bf=1;//\u5408\u5e76\u961f\u5217\u73b0\u5728\u4ec0\u4e48\u90fd\u6ca1\u6709\u6240\u4ee5\u5f00\u59cb\u548c\u7ed3\u675f\u90fd\u5728\u201c1\u201d\u7684\u4f4d\u7f6e\u4e0a\uff01\n    Be=1;\n    sum+=a[Be];//\u8bb0\u5f55\u529b\u6c14\uff01\n    while(Bf<n-1)\n    {\n        if((a[Af]<=a[Bf])&&(Af<=Ae))//\u6211\u628a\u5408\u5e76\u540e\u7684\u8fd9\u4e2a\u503c\u5c31\u76f4\u63a5\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5982\u679c\u8fd9\u4e2a\u961f\u5217\u540e\u9762\u7684\u503c\u5c0f\u4e8e\u8fd9\u4e24\u4e2a\u503c\u5408\u5e76\u540e\u7684\u503c\uff01\uff01\n        {\n            if ((a[Af+1]<a[Bf])&&(Af+1<=Ae))//\u5982\u679c\u540e\u4e24\u4e2a\u503c\u90fd\u5c0f\u4e8e\u8fd9\u4e2a\u503c\uff0c\u90a3\u4e48\uff01\uff01\n            {\n                a[++Be]=a[Af]+a[Af+1];//\u6211\u4e0b\u4e00\u6b65\u4e00\u5b9a\u662f\u8ba9\u540e\u4e24\u4e2a\u503c\u52a0\u5728\u4e00\u8d77\n                sum+=a[Be];//\u5e76\u4e14\u628a\u4e24\u4e2a\u503c\u4e5f\u90fd\u5b58\u8d77\u6765\n                Af=Af+2;//\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e24\u4e2a\u503c\u518d\u7ee7\u7eed\u641c\n            }\n            else\n            {\n                a[++Be]=a[Af]+a[Bf];//\u5982\u679c\u53ea\u6709\u540e\u9762\u7684\u4e00\u4e2a\u503c\u5c0f\u4e8e\u5408\u5e76\u540e\u7684\u8fd9\u4e2a\u503c\n                sum+=a[Be];//\u90a3\u4e48\u6211\u5c31\u5e94\u8be5\u8ba9\u5408\u5e76\u540e\u7684\u503c\u548c\u540e\u9762\u7684\u90a3\u4e2a\u503c\u52a0\u4e00\u8d77\uff01\uff01\n                Af++;//\u7136\u540e\u521d\u59cb\u6570\u5217\u6ca1\u4e86\u4e00\u4e2a\u503c\uff01\n                Bf++;//\u5408\u5e76\u540e\u7684\u6570\u5217\u4e5f\u6ca1\u4e86\u4e00\u4e2a\u503c!\n            }\n        }\n        else//\u5982\u679c\u540e\u9762\u90a3\u4e2a\u6570\u6bd4\u6211\u5927\uff01\uff01\n        {\n            if (((a[Af]<a[Bf+1])&&(Bf+1<=Be)&&(Af<=Ae))||((Bf==Be)&&(Af<=Ae)))//\u5982\u679c\u540e\u9762\u90a3\u4e2a\u6570\u53ea\u662f\u6bd4\u6211\u5408\u5e76\u5b8c\u7684\u5176\u4e2d\u4e00\u4e2a\u6570\u5927\uff01\uff01\n            {\n                a[++Be]=a[Af]+a[Bf];//\u6211\u5c31\u5408\u5e76\u8fd9\u4e2a\u5c0f\u4e8e\u4ed6\u6570\u7684\u548c\u540e\u9762\u7684\u503c\uff0c\n                sum+=a[Be];\n                Af++;\n                Bf++;\n            }\n            else//\u5982\u679c\u4ed6\u5927\u4e8e\u4e24\u4e2a\u5408\u5e76\u540e\u7684\u503c!!\n            {\n                a[++Be]=a[Bf]+a[Bf+1];//\u90a3\u6211\u5c31\u5408\u5e76\u8fd9\u4e24\u4e2a\u6211\u5408\u5e76\u540e\u7684\u503c\uff01\uff01\n                sum+=a[Be];\n                Bf=Bf+2;//\u8981\u6ce8\u610f\u56e0\u4e3a\u5408\u5e76\u4e86\u4e24\u4e2a\u5408\u5e76\u540e\u7684\u503c\uff01\u6240\u4ee5\u8981+2\uff01\n            }\n        }\n    }\n    return sum;//\u628a\u529b\u6c14\u8f93\u51fa\u6765\uff01\uff01\n}\n```\n\u6b63\u56e0\u4e3a\u63a7\u5236\u8d77\u6765\u4e0d\u5bb9\u6613\uff0c\u6240\u4ee5\u6548\u7387\u8d85\u7ea7\u9ad8\uff01\u6bd4\u4e00\u822c\u7684\u4f18\u5148\u961f\u5217\uff0c\u6216\u8005\u662f\u7528\u5806\uff01\n\n\u4e0b\u9762\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff01\n\n\u8f93\u51fa\u51fd\u6570\uff01\u89c1\u4e0b\uff01\n```\nvoid print()//\u770b\u8fd9\u4e2a\u4f60\u4eec\u4e5f\u770b\u4e0d\u61c2\u7684\uff01\uff01\u8f93\u51fa\u7684\u662f\u76f4\u63a5\u5408\u5e76\u5b8c\u5e76\u4e14\u6392\u5b8c\u987a\u5e8f\u7684\uff01\uff01\n{\n    printf(\"%d\\n\",sum());\n    return;\n}\n```\n\u8fd9\u4e2a\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u54c8\uff01\n\n\u8fd9\u4e2a\u7684\u6548\u7387\u771f\u7684\u8d85\u9ad8\uff01\n\n\u8fd8\u6709\u554a\uff0c\u6211\u8ddf\u4f60\u4eec\u8bf4\uff0c\u5176\u5b9e\u8fd9\u79cd\u4ee3\u7801\u662f\u57fa\u7840\uff0c\u4e0d\u8981\u6c89\u8ff7\u4e8eSTL\uff0cSTL\u56fa\u7136\u597d\uff0c\u4f46\u662f\u53ea\u4f1aSTL\u662f\u4e0d\u53ef\u80fd\u7684\uff01\n\n\u5b8c\u6574\u4ee3\u7801\u89c1\u4e0b!\n```\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\nvoid read();\nvoid quick(int c,int b);\nint sum();\nvoid print();\nint n,a[10002];\nint main(){\n    int i;\n    read();\n    quick(1,n);\n    print();\n    return 0;\n}\nvoid read(){\n    int i;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    return; \n}\nvoid print(){\n    printf(\"%d\\n\",sum());\n    return;\n}\nvoid quick(int c,int b){\n    int f,e,k;\n    if (c==b)return;\n    f=c;\n    e=b;\n    k=a[c];\n    while (f!=e){\n        while ((a[e]>=k)&&(e>f))e--;\n        if (a[e]<k){\n            a[f++]=a[e];\n            while((a[f]<k)&&(f<e))f++;\n            if(a[f]>=k){\n                a[e--]=a[f];\n            }\n        }\n    }\n    a[f]=k;\n    if (f-c>1) quick(c,f-1);\n    if (b-f>1) quick(f+1,b);\n    return;\n}\nint sum(){\n    int Af,Ae,Bf=1,Be,i,sum=0;\n    if (n==1)return a[1];\n    a[1]=a[1]+a[2];\n    Af=3;\n    Ae=n;\n    Bf=1;\n    Be=1;\n    sum+=a[Be]; \n    while(Bf<n-1){\n        if((a[Af]<=a[Bf])&&(Af<=Ae)){\n            if ((a[Af+1]<a[Bf])&&(Af+1<=Ae)){\n                a[++Be]=a[Af]+a[Af+1];\n                sum+=a[Be];\n                Af=Af+2;\n            }\n            else {\n                a[++Be]=a[Af]+a[Bf];\n                sum+=a[Be]; \n                Af++;\n                Bf++;   \n            }\n        }\n        else {\n            if (((a[Af]<a[Bf+1])&&(Bf+1<=Be)&&(Af<=Ae))||((Bf==Be)&&(Af<=Ae))){\n                a[++Be]=a[Af]+a[Bf];\n                sum+=a[Be];     \n                Af++;\n                Bf++;\n            }\n            else {\n                a[++Be]=a[Bf]+a[Bf+1];\n                sum+=a[Be]; \n                Bf=Bf+2;    \n            }\n        }\n    }\n    return sum;\n}\n```\n\u672c\u4eba\u662f\u4e00\u4e2a\u849f\u84bb\uff01\n\n\u867d\u7136\u4e0d\u662f\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u4f46\u662f\uff01\n\n\u662f\u7b2c\u4e00\u6b21\u5199\u8fd9\u4e48\u5168\u7684\u6ce8\u91ca\uff0c\u6240\u4ee5\uff01\n\n\u8bf7\u7ed9\u4e2a\u8d5e\uff01\u6216\u8005\u4f60\u8fd8\u53ef\u4ee5\uff01emm\n\n\u7ed9\u6211\u53d1\u4e2a\u79c1\u4fe1\uff0c\u8fd9\u6837\u6211\u4eec\u4ee5\u540e\u8fd8\uff01\n\n\u53ef\u4ee5\u4e00\u8d77\u63a2\u8ba8\u95ee\u9898\uff01\u4ea4\u6d41\u7f16\u7a0b\uff01\n\n\u8d85\u7ea7\u559c\u6b22\u4ea4\u670b\u53cb\uff01",
        "postTime": 1544837931,
        "uid": 143690,
        "name": "Beauty_Moon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "# O(n)\u7b97\u6cd5\n\u636e\u8bf4\u662f\u79bb\u6563\u5316\u7b97\u6cd5\n\u5c31\u662f\u5148\u628a\u539f\u672c\u7684\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u6392\u597d\u3002\u7136\u540e\u7528\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u662f\u5b58\u50a8\u539f\u672c\u7684\uff0c\u53e6\u4e00\u4e2a\u662f\u5b58\u50a8\u5408\u6210\u7684\uff08\u7531\u4e8e\u539f\u672c\u7684\u662f\u4ece\u5c0f\u5230\u5927\u6240\u6709\u65b0\u5f00\u7684\u4e5f\u662f\u4ece\u5c0f\u5230\u5927\uff09\u3002\u7136\u540e\u5728\u4e24\u4e2a\u961f\u5217\u7684\u5934\u53d6\u6700\u5c0f\u7684\uff0c\u6267\u884c\u4e24\u6b21\u7136\u540e\u628a\u8fd9\u4e24\u4e2a\u5408\u5e76\u52a0\u5165\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d\u3002\n\u7136\u540e\u7531\u4e8e\u8f93\u5165\uff1a\n$(1\u2264ai\u226420000)$\uff0c\u6240\u4ee5\u7528\u6876\u6392\u5e8f\u5c31\u53ef\u4ee5$O(n)$\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u4ee3\u7801\u6bd4\u8f83\u4e11\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint k,x,num,n1,n2,a1[30001],a2[30001],t[20001],w,sum;\nint main()\n{\n\tscanf(\"%d\",&num);\n\tmemset(a1,127/3,sizeof(a1));\n\tmemset(a2,127/3,sizeof(a2));\n\tfor (int i=1;i<=num;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tt[x]++;//\u6876\n\t}\n\tfor (int i=1;i<=20000;i++)\n\t{\n\t\twhile (t[i])//\u901a\u6392\u5e8f\n\t\t{\n\t\t\tt[i]--;\n\t\t\ta1[++n1]=i;\n\t\t}\n\t}\n\tint i=1,j=1;\n\tk=1;\n\twhile (k<num)\n\t{\n\t\tif (a1[i]<a2[j])//\u53d6\u6700\u5c0f\u503c\n\t\t{\n\t\t\tw=a1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tw=a2[j];\n\t\t\tj++;\n\t\t}\n\t\tif (a1[i]<a2[j])//\u53d6\u7b2c\u4e8c\u6b21\n\t\t{\n\t\t\tw+=a1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tw+=a2[j];\n\t\t\tj++;\n\t\t}\n\t\ta2[++n2]=w;//\u52a0\u5165\u7b2c\u4e8c\u4e2a\u961f\u5217\n\t\tk++;//\u8ba1\u7b97\u5408\u5e76\u6b21\u6570\n\t\tsum+=w;//\u8ba1\u7b97\u4ef7\u503c\n\t}\n\tprintf(\"%d\",sum);\n}\n```\n\n\u5176\u5b9e\u7528\u5faa\u73af\u961f\u5217\u4f1a\u5c11\u4e00\u4e9b\u5185\u5b58~~\u4e0d\u8fc7\u6211\u61d2~~",
        "postTime": 1524299257,
        "uid": 52918,
        "name": "QuantAsk",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ea\u9700\u8981\u628a\u6700\u5c0f\u7684\u4e24\u4e2a\u679c\u5806\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u597d\u591a\u5927\u4f6c\u90fd\u7528\u7684\u662f\u4f18\u5148\u961f\u5217\uff0c\u4f46\u7531\u4e8e\u672c\u4eba\u592a\u83dc\uff0c\u53ea\u597d\u7528\u6570\u7ec4\u505a\u3002\n\n\u5982\u679c\u8fd9\u6837\u60f3\uff0c\u90a3\u4e48\u6bcf\u5408\u5e76\u4e00\u6b21\u90fd\u9700\u8981\u6392\u4e00\u6b21\u5e8f\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u505a\uff08\u800c\u4e14\u8fd9\u6837\u4f1a\u8d85\u65f6\uff0c\u6211\u4e4b\u524d\u7528sort\u51fd\u6570\u6392\u5c31\u8fc7\u4e86\u56db\u4e2a\u70b9\uff0c\u540e\u9762\u5168\u90fdtle\u4e86\uff09\uff0c\u53ea\u9700\u8981\u7ed9\u65b0\u5408\u5e76\u7684\u679c\u5806\u627e\u5230\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u5c06\u7a7a\u7684\u679c\u5806\u5220\u9664\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0b\u9762AC\u4ee3\u7801\u3002\n\n    \n    \n    \n        \n\n```cpp\n     #include<bits/stdc++.h>//\uff08\u4e07\u80fd\u5e93\uff09\n    using namespace std;\n    int a[100000];//(\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u4ee3\u66ff\u961f\u5217)\n    int main(){\n    int n,sum=0;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];//\uff08\u8bfb\u5165\u6570\u636e\uff09\n    }\n    sort(a+1,a+n+1);//\uff08\u521d\u59cb\u6392\u5e8f\uff09\n    while(1){//\uff08\u5f00\u59cb\u5408\u5e76\u5faa\u73af\uff0c\u5176\u5b9e\u53ef\u4ee5\u7528for\u4ee3\u66ff\uff09\n        int j=1;\n        while(a[j]==0)\n        j++;\n        //\uff08\u5176\u5b9e\u8fd9\u91cc\u61d2\u4e86\uff0c\u5f53\u65f6\u505a\u7684\u65f6\u5019\u7528\u7684\u662fsort,\u53ef\u4ee5\u7528\u522b\u7684\u505a\u6cd5\uff09\n        if(j==n) break;//\uff08\u6b64\u65f6\u53ea\u5b58\u5728\u4e00\u4e2a\u5806\uff0c\u9000\u51fa\u5faa\u73af\uff09\n        else {\n            a[j]+=a[j+1];\n            sum+=a[j];//\uff08i\u548cj \u5408\u5e76\u6210\u4e00\u4e2a\u679c\u5806\uff0c\u589e\u52a0\u6240\u7528\u7684\u529b\u6c14\uff09\n            for(int l=j+1;l<n;l++)\n             {\n                a[l]=a[l+1];//\uff08\u5c06j\u540e\u9762\u7684\u679c\u5806\u5411\u524d\u4e00\u4f4d\uff09\n            }\n            n--;//\uff08\u51cf\u5c11\u4e00\u4e2a\u5806\uff09\n        }\n        for(int l=j;l<n;l++)\n        {\n            if(a[l]>a[l+1])//\uff08\u4e3a\u65b0\u7684\u5806\u627e\u5230\u4f4d\u7f6e\uff09\n            {\n                swap(a[l],a[l+1]);\n            }\n        }\n    }\n    cout<<sum;//\uff08\u8f93\u51fa\u529b\u6c14\uff09\n    return 0;//\uff08\u529f\u5fb7\u5706\u6ee1\uff09\n    }\n\u5982\u6709\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u8fd8\u8bf7\u5404\u4f4d\u5927\u4f6c\u63d0\u51fa\u5efa\u8bae\u3002\n```",
        "postTime": 1514077174,
        "uid": 60136,
        "name": "chengni",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u597d\u50cf\u697c\u4e0b\u5f88\u5c11\u6709\u4eba\u624b\u5199\u5806\uff08\u5176\u5b9e\u672c\u6765\u5c31\u4e0d\u7528\uff09\uff0c\u6709\u4e00\u4f4d\u5927\u795e\u7528\u4e86\u9012\u5f52\u5199\u7684\uff0c\u7136\u800c\u849f\u84bb\u96be\u4ee5\u7406\u89e3\u3002\u4e8e\u662f\u5728\u6b64\u53d1\u5e03\u4e00\u4efd\u5b8c\u5168\u624b\u5199\u7684\u5806\uff0c\u53ef\u4ee5\u8bf4\u5c31\u662f\u6a21\u677f\u4e86\u5427\uff0c\u4ec5\u4f9b\u5404\u4f4d\u53c2\u8003\u3002\n\u597d\uff0c\u6765\u770b\u7a0b\u5e8f\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=10000+10;\nint n,heap[maxn],size=0;\nvoid up(int p) //\u4e8c\u53c9\u5c0f\u6839\u5806\u5411\u4e0a\u8c03\u6574\uff08\u5b50\u8282\u70b9\u5c0f\u4e8e\u7236\u8282\u70b9\u5c31\u8c03\u6574\uff09\n{\n  while(p>1)\n  {\n    if(heap[p]<heap[p/2])\n    {\n      swap(heap[p],heap[p/2]);\n      p/=2;\n    }\n    else break;\n  }\n}\nvoid insert(int val) //\u4e8c\u53c9\u5806\u63d2\u5165\uff0c\u65b0\u5143\u7d20\u653e\u5728\u5806\u5e95\uff0c\u5411\u4e0a\u8c03\u6574\n{\n  heap[++size]=val;\n  up(size);\n}\nvoid down(int p) //\u4e8c\u53c9\u5c0f\u6839\u5806\u5411\u4e0b\u8c03\u6574\n{\n  int s=p*2;\n  while(s<=size)\n  { //\u4e0b\u9762\u8fd9\u53e5\u8bdd\u662f\u4ece\u5de6\u53f3\u513f\u5b50\u4e2d\u9009\u4e00\u4e2a\u66f4\u5c0f\u7684\u505a\u4ea4\u6362\n    if(s<size&&heap[s+1]<heap[s]) s++; \n    if(heap[s]<heap[p])\n    {\n      swap(heap[s],heap[p]);\n      p=s; s=p*2;\n    }\n    else break;\n  }\n}\nvoid extract() //\u4e8c\u53c9\u5806\u5220\u9664\u5806\u9876\n{\n  heap[1]=heap[size--]; //\u5c06\u5806\u5e95\u79fb\u81f3\u5806\u9876\uff0c\u5411\u4e0b\u8c03\u6574\n  down(1);\n}\nint gettop() //\u8fd4\u56de\u5806\u9876\u7684\u503c\n{\n  return heap[1];\n}\nint main()\n{\n  cin>>n;\n  for(int i=1; i<=n; i++)\n  {\n    int a; cin>>a;\n    insert(a); //\u5efa\u7acb\u4e8c\u53c9\u5806\n  }\n  long long ans=0; //\u5176\u5b9e\u8fd9\u91cc\u4e0d\u4f1a\u8d8a\u754c\uff0c\u4f46\u597d\u50cf\u539f\u9898\u6570\u636e\u662f3\u4e07\n  while(size>=2) //\u5982\u679c\u8fd8\u53ef\u5408\u5e76\n  {\n    int top1=gettop(); //\u53d6\u51fa\u5806\u9876\uff08\u5806\u4e2d\u6700\u5c0f\u503c\uff09\u540e\u5220\u9664\u5806\u9876\n    extract();\n    int top2=gettop(); //\u540c\u4e0a\n    extract();\n    ans+=(top1+top2);\n    insert(top1+top2); //\u5c06\u4e24\u6570\u4e4b\u548c\u52a0\u5165\u4e8c\u53c9\u5806\uff0c\u91cd\u590d\u8fd0\u7b97\n  }\n  cout<<ans<<endl; //\u8f93\u51fa\u7b54\u6848\n  return 0;\n}\n```",
        "postTime": 1518326255,
        "uid": 9156,
        "name": "\u5fae\u96e8\u71d5\u53cc\u98de",
        "ccfLevel": 0,
        "title": "\u4e00\u4efd\u6765\u81ea\u849f\u84bb\u7684\u624b\u5199\u4e8c\u53c9\u5806"
    },
    {
        "content": "\u8bc1\u660e\u4e0d\u65ad\u53d6\u6700\u5c0f\u7684\u4e24\u5806\u5408\u5e76\u6210\u8f83\u5927\u7684\u4e00\u5806\u662f\u6700\u4f18\u7684\u3002\n\n\uff08\u4e0d\u592a\u597d\u8bc1\u54e6\uff09\n\n\u2460**\u6700\u4f18\u65b9\u6848\u53ef\u4ee5\u8868\u793a\u6210\u4e00\u4e2a\u4e8c\u53c9\u6811\u3002**\u603b\u4ee3\u4ef7 $\\sum_{i=1}^{n} a_i \u00d7 depth_i$\u3002\u5176\u4e2d $depth$ \u662f\u6df1\u5ea6\uff0c\u4e5f\u5c31\u662f\u8fd9\u5806\u679c\u5b50\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u88ab\u6709\u6548\u5408\u5e76\u4e86\u51e0\u6b21\u3002\n\n\u6ce8\u610f\uff1a$a_i$ \u90fd\u662f\u53f6\u5b50\u7ed3\u70b9\u3002\u975e\u53f6\u5b50\u7ed3\u70b9\u90fd\u662f\u5408\u5e76\u540e\u7684\u4ea7\u7269\u3002\n\n\u2461**\u6700\u5c0f\u7684\u4e24\u5806\u4e00\u5b9a\u5728\u6700\u4f18\u65b9\u6848\u6811\u7684\u6700\u6df1\u5c42\u3002**\n\n\u8fd9\u4e2a\u7528\u53cd\u8bc1\u6cd5\u3002\u5047\u8bbe\u6709\u4e00\u4e2a\u6700\u4f18\u65b9\u6848\u6811\uff0c\u5176\u6700\u6df1\u5c42\u4e2d\u6ca1\u6709\u6700\u5c0f\u7684\u4e24\u5806\u3002\u90a3\u4e48\u628a\u6700\u5c0f\u7684\u5806\u4e0e\u6700\u6df1\u5c42\u7684\u67d0\u5806\u4e92\u6362\u4f4d\u7f6e\u5f62\u6210\u65b0\u65b9\u6848\uff0c\u4fdd\u8bc1\u65b0\u65b9\u6848\u5b58\u5728\u800c\u4e14\u65b0\u65b9\u6848\u7684\u4ee3\u4ef7\u5c0f\u4e8e\u539f\u65b9\u6848\u3002\n\n\u6ce8\u610f\uff1a\u6700\u6df1\u5c42\u603b\u662f\u4e00\u7ec4\uff08\u4e00\u7ec4\u6709\u4e24\u4e2a\uff09\u6216\u591a\u7ec4\u53f6\u5b50\u8282\u70b9\uff0c\u6765\u8868\u793a\u5b83\u4eec\u88ab**\u76f4\u63a5**\u5408\u5e76\u3002\n\n\u2462**\u540c\u5c42\u53f6\u5b50\u8282\u70b9\u4e92\u6362\uff0c\u5bf9\u603b\u4ee3\u4ef7\u65e0\u5f71\u54cd\u3002**\n\n\u6839\u636e\u2460\u7684 $\\sum$ \u5f97\u3002\u53ef\u89c1\uff0c\u6700\u5c0f\u7684\u4e24\u5806\uff0c\u5982\u679c\u5728\u6700\u4f18\u65b9\u6848\u6811\u6700\u6df1\u5c42\u4e2d\u4e0d\u662f\u5373\u5c06\u5408\u5e76\u7684\u4e00\u7ec4\uff0c\u90a3\u4e48\u53ef\u4ee5\u65e0\u507f\u6362\u4e3a\u4e00\u7ec4\u3002\n\n\u2463\u6839\u636e\u4e0a\u4e24\u6b65\uff0c\u6211\u4eec\u5df2\u7ecf\u660e\u786e\uff1a\u6700\u4f18\u65b9\u6848\u9700\u8981**\u76f4\u63a5**\u5408\u5e76\u5f53\u524d\u6700\u5c0f\u7684\u4e24\u5806\u3002\u73b0\u5728\u6211\u4eec\u5c31\u8fdb\u884c\u8fd9\u4e2a\u64cd\u4f5c\u3002**\u4e8b\u5b9e\u662f\uff1a\u73b0\u5728\u53ea\u5269 $n-1$ \u5806\u4e86\u3002**\u6211\u4eec\u53ea\u77e5\u9053\u521a\u624d\u8fdb\u884c\u4e86\u4e00\u4e2a**\u7edd\u5bf9\u4e0d\u9519**\u7684\u64cd\u4f5c\uff0c\u800c\u4e0d\u8bb0\u5f97\u64cd\u4f5c\u4e4b\u524d\u662f\u4ec0\u4e48\u6837\u7684\u3002\u6211\u4eec\u53ea\u60f3\u5bf9\u73b0\u5728\u5269\u4e0b\u7684\u51e0\u5806\u964c\u751f\u7684\u679c\u5b50\u8fdb\u884c\u6700\u597d\u7684\u64cd\u4f5c\u3002\u5ffd\u7565\u4e4b\u524d\u7684\u6811\uff0c\u4e8e\u662f\u56de\u5230\u2460\u4e86\u3002\n\n**\u6ce8\u610f**\uff1a\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4e4b\u524d\u4e00\u6b65\u7684\u64cd\u4f5c\u4f7f\u65e5\u540e\u7684\u4ee3\u4ef7\u548c\u975e\u5e38\u4f18\u79c0\u3002\n\n***\n```\n#include <cstdio>\n#include <queue>\nusing std :: priority_queue;\nusing std :: greater;\nusing std :: vector;\n\nint n, ans = 0;\npriority_queue < int, vector <int>, greater <int> > q;\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\tint x; scanf(\"%d\", &x);\n\t\tq.push(x);\n\t}\n\twhile(q.size() > 1)\n\t{\n\t\tint x = q.top(); q.pop();\n\t\tint y = q.top(); q.pop();\n\t\tans += x + y;\n\t\tq.push(x + y);\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n***\n\n\u8fd9\u4e9b\u8bf4\u6cd5\u662f\u4e0d\u5bf9\u7684\uff1a\n\n\u4e00\u3001*\u6bcf\u6b65\u53d6\u6700\u5c0f\u7684\u4e24\u5806\u5408\u5e76\u6210\u8f83\u5927\u7684\u4e24\u5806\uff0c\u80fd\u4fdd\u8bc1\u5f62\u6210\u201c\u8fd9\u4e00\u6b65\u4ee3\u4ef7\u6700\u5c0f\u201d\u4e14\u201c\u63a5\u4e0b\u6765\u5c06\u8981\u6d88\u8017\u7684\u4ee3\u4ef7\u6bd4\u5176\u5b83\u65b9\u6848\u5c0f\u201d\u3002*\n\n**\u53cd\u4f8b**\u5982\uff0c\u5982\u679c\u6709\u56db\u5806\u679c\u5b50\uff0c\u6570\u76ee\u5206\u522b\u662f$3,4,5,6$\u3002\u7136\u800c\u6211\u9009\u62e9\u5408\u5e76$5,6$\uff0c\u867d\u7136\u76ee\u524d\u4ee3\u4ef7\u5f88\u5927\uff0c\u4f46\u4f60\u4f1a\u53d1\u73b0\u63a5\u4e0b\u6765\u7684\u4ee3\u4ef7\u6bd4\u201c\u5148\u5408\u5e76$3,4$\uff0c\u63a5\u4e0b\u6765\u7684\u4ee3\u4ef7\u201d\u8981\u5c0f\u5f97\u591a\u3002\u8fd9\u5426\u5b9a\u4e86\u4e00\u4e9b\u9898\u89e3\u3002\n\n\u4e8c\u3001*\u5982\u679c\u7ed9\u521d\u59cb\u7684\u6bcf\u5806\u679c\u5b50 $a_i$ \u8bb0\u5f55\u4e00\u4e2a $t_i$ \u8868\u793a\u8fd9\u5806\u679c\u5b50\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u76f8\u5f53\u4e8e\u5408\u5e76\u4e86\u51e0\u6b21\uff0c\u90a3\u4e48 $t_i$ \u7684\u548c\u662f\u5b9a\u503c\u3002*\n\n\u5176\u5b9e\u65b9\u6848\u4e0d\u540c\u7684\u65f6\u5019\uff0c $t_i$ \u4e4b\u548c\u5b8c\u5168\u53ef\u4ee5\u53d8\u5316\u3002\u53ef\u4ee5\u662f $n^2$ \u7ea7\u522b\uff0c\u4e5f\u53ef\u4ee5\u662f $n~logn$ \u7ea7\u522b\u3002\u8fd9\u5bfc\u81f4\u4e0a\u9762\u7684\u8bc1\u660e\u66f4\u96be\u3002\n\n***\n\n\u8fd9\u9053\u9898\u53ef\u89c6\u4f5c\u6784\u9020\u54c8\u592b\u66fc\u6811\u3002\u800c\u5bf9\u54c8\u592b\u66fc\u6811\u6b63\u786e\u6027\u7684\u8bc1\u660e\u8ba9\u5f88\u591a\u4eba\u5934\u75bc\uff0c\u300aAlgorithms\u300b\u4e5f\u662f\u5927\u82b1\u7b14\u58a8\uff01\u6240\u4ee5\u8bc1\u660e\u53ef\u80fd\u771f\u7684\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\u3002\n\n**\u6709\u66f4\u7b80\u5355\u7684\u8bc1\u660e\u3001\u6216\u8005\u4e0a\u9762\u7684\u8bc1\u660e\u6709\u95ee\u9898\uff0c\u5c31\u8bc4\u8bba\u5427\uff01**",
        "postTime": 1539089389,
        "uid": 49474,
        "name": "\u5b66\u59d4",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "# [\u524d\u65b9\u9ad8\u80fd]\n\n\u4e00\u9053\u5c0f\u6839\u5806\u7684\u6a21\u677f\u9898\n\n\u628a\u6240\u6709\u6570\u538b\u5165\u5806\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e24\u6b21\u5806\u9876\uff0c\u518d\u628a\u53d6\u51fa\u7684\u4e24\u4e2a\u6570\u7684\u548c\u538b\u5165\u5806\u3002\u6700\u540e\u5269\u7684\u4e00\u4e2a\u5c31\u662f\u7b54\u6848\n\n~~\u7981\u6b62CTJ\uff01~~\n\n\n------------\n\n```cpp\n#include<bits/stdc++.h>//\u60ef\u7528\u4e07\u80fd\u5934\nusing namespace std;\nint a[100002],len;//len\u8bb0\u5f55\u5806\u7684\u957f\u5ea6\n/*\nput\uff1a\u628a\u6570\u538b\u5165\u5806\n\u628a\u6570\u52a0\u5728\u6700\u540e,\u957f\u5ea6+1\uff0c\u5229\u7528\u5806\u7684\u7236\u5b50\u8282\u70b9\u5173\u7cfb\uff0c\n\u4e00\u6b21\u6b21\u4e0e\u7236\u4eb2\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u7236\u4eb2\u5c0f\uff0c\u5c31\u4ea4\u6362\uff0c\u7ee7\u7eed\u6bd4\u8f83\uff0c\n\u76f4\u5230\u6bd4\u7236\u4eb2\u5927\u6216\u5230\u4e86\u6839\u8282\u70b9\u4e3a\u6b62\n*/\nvoid put(int x) {\n\tint f;\n\tlen++;\n\ta[len]=x;\n\tint b=len;\n\twhile(b!=1&&a[b]<a[b/2]) {\n\t\tswap(a[b],a[b/2]);\n\t\tb=b/2;\n\t}\n}\n/*\nget\uff1a\u53d6\u51fa\u5806\u9876\n\u957f\u5ea6-1\uff0c\u628a\u6700\u540e\u4e00\u4e2a\u63d0\u5230\u7b2c\u4e00\u4e2a\u3002\n\u5229\u7528\u5806\u7684\u7236\u5b50\u8282\u70b9\u5173\u7cfb\uff0c\u7528\u6362\u5230\u7b2c\u4e00\u4e2a\u7684\u6570\u4e0e\u513f\u5b50\u6bd4\u8f83\uff0c\n\u5982\u679c\u6bd4\u5b69\u5b50\u5927\uff0c\u5c31\u4e0e\u4e24\u4e2a\u513f\u5b50\u4e4b\u95f4\u8f83\u5c0f\u7684\u4e00\u4e2a\u4ea4\u6362\uff0c\n\u76f4\u5230\u6ca1\u6709\u513f\u5b50\u6216\u6bd4\u513f\u5b50\u5c0f\u4e3a\u6b62\n*/\nint get() {\n\tint x=a[1],c;\n\ta[1]=a[len];\n\tlen--;\n\tint f=1,b,t;\n\twhile(f*2<=len) {\n\t\tif(f*2+1>len||a[f*2]<a[f*2+1]) {\n\t\t\tc=f*2;\n\t\t} else {\n\t\t\tc=f*2+1;\n\t\t}\n\t\tif(a[f]>a[c]) {\n\t\t\tswap(a[f],a[c]);\n\t\t\tf=c;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t}\n\treturn x;\n}\nint main() {\n\tint n;\n\tcin>>n;//\u8f93\u5165\u4e2a\u6570\n\tfor(int i=1; i<=n; i++) {\n\t\tint x;\n\t\tcin>>x;\n\t\tput(x);//\u628a\u6570\u538b\u5165\u5806\n\t}\n\tint ans=0;\n\twhile(len!=1) {\n\t\t//\u53d6\u51fa\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\n\t\tint k=get();\n\t\tint c=get();\n\t\t//ans\u8bb0\u5f55\u7ed3\u679c\n\t\tans+=k+c;\n\t\t//\u628a\u65b0\u7684\u5806\u538b\u5165\u5806\n\t\tput(c+k);\n\t}\n\t//\u8f93\u51fa\u7ed3\u679c\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u611f\u8c22CCTV,\u611f\u8c22MTV,\u611f\u8c22Channel V,\u611f\u8c22\u6240\u6709\u8d5e\u6211\u7684\u4eba\uff01",
        "postTime": 1565941050,
        "uid": 118029,
        "name": "\u653e_\u5f03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u4e2d\u6587\u9898\uff0c\u9898\u610f\u5c31\u4e0d\u89e3\u91ca\u4e86\uff0c\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u5c31\u60f3\u5230\u8ddf\u4ee5\u524d\u505a\u7684\u8d2a\u5fc3\u9898\u6709\u70b9\u7c7b\u4f3c\uff0c\u5927\u81f4\u601d\u8def\u4e5f\u5c31\u662f\uff0c\u5148\u627e\u5230\u4e24\u4e2a\u6700\u5c0f\u7684\uff0c\u53d6\u51fa\u6765\uff0c\u76f8\u52a0\u518d\u653e\u8fdb\u53bb\uff0c\u4e0d\u8fc7\u6211\u72af\u4e86\u4e00\u4e2a\u81f4\u547d\u6027\u7684\u9519\u8bef\uff0c\u6211\u6bcf\u4e00\u6b21\u53d6\u4e4b\u524d\u90fd\u5bf9\u5269\u4e0b\u7684\u8fdb\u884c\u6392\u5e8f\uff0c\u5bfc\u81f4\u65f6\u95f4\u8d85\u65f6\uff0c\u540e\u6765\u4e0d\u6392\u5e8f\u76f4\u63a5\u627e\u5230\u6700\u5c0f\u7684\u548c\u6b21\u5c0f\u7684\uff0c\u628a\u5b83\u4eec\u76f8\u52a0\u518d\u653e\u8fdb\u53bb\uff0c\u8fd9\u6837\u5c31\u7701\u4e0b\u6765\u6392\u5e8f\u7684\u65f6\u95f4\u4e86\uff0c\u76f4\u63a5\u8fc7\u4e86\u3002\u6bd4\u8d5b\u7ed3\u675f\u540e\u542c\u522b\u4eba\u6709\u7528\u4f18\u5148\u961f\u5217\u505a\u7684\uff0c\u81ea\u5df1\u4e5f\u5c1d\u8bd5\u4e86\u4e00\u4e0b\uff0c\u5176\u5b9e\u4e5f\u633a\u7b80\u5355\u7684\uff0c\u5b9a\u4e49\u4e00\u4e2a\u4ee5\u8d28\u91cf\u4ece\u5c0f\u5230\u5927\u7684\u961f\u5217\uff0c\u6bcf\u6b21\u51fa\u961f\u4e24\u4e2a\uff0c\u5165\u961f\u4e00\u4e2a\uff08\u5165\u961f\u7684\u5c31\u662f\u51fa\u961f\u4e24\u4e2a\u6570\u7684\u548c\uff09\uff0c\u8fd9\u6837\u4e5f\u4e0d\u7528\u6392\u5e8f\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u8fc7\u3002\n\n\nAC\u4ee3\u7801\uff1a\n\n[cpp] view plain copy\n\n\n```cpp\n#include<stdio.h>  \n#include<algorithm>  \nusing namespace std;  \nint a[10010],n;  \nvoid df(int x)  \n{  \n    int i,t,q;  \n    q=x;  \n    for(i=q+1;i<=n;i++)  \n    {  \n        if(a[i]<a[q])  \n            q=i;  \n    }  \n    swap(a[x],a[q]);  \n}  \nint main()  \n{  \n    int i,sum;  \n    while(~scanf(\"%d\",&n))  \n    {  \n        sum=0;  \n        for(i=1;i<=n;i++)  \n            scanf(\"%d\",&a[i]);  \n        df(1);  \n        df(2);  \n        for(i=2;i<=n;i++)  \n        {  \n            a[i]+=a[i-1];  \n            sum+=a[i];  \n            df(i);  \n            df(i+1);  \n        }  \n        printf(\"%d\\n\",sum);  \n    }  \n    return 0;  \n}  \n```\n\u4f18\u5148\u961f\u5217\uff1a\n[cpp] view plain copy\n\n```cpp\n#include<stdio.h>  \n#include<queue>  \n#include<string.h>  \n#include<algorithm>  \nusing namespace std;  \nstruct node  \n{  \n    int m;  \n    bool operator<(const node &a) const//\u4f18\u5148\u961f\u5217\uff0c\u91cd\u91cf\u5c0f\u7684\u5728\u524d  \n    {  \n        return a.m<m;  \n    }  \n};  \nint main()  \n{  \n    int i,j,n,sum;  \n    priority_queue<node>Q;  \n    node p,q;  \n    while(~scanf(\"%d\",&n))  \n    {  \n        for(i=0; i<n; i++)  \n        {  \n            scanf(\"%d\",&p.m);  \n            Q.push(p);  \n        }  \n        sum=0;  \n       for(i=0;i<n-1;i++)//n\u4e2a\u679c\u5b50\u53ea\u9700\u8981n-1\u6b21\u5408\u5e76  \n        {  \n            p=Q.top(),Q.pop();  \n            q=Q.top(),Q.pop();  \n            sum+=p.m+q.m;  \n            p.m=p.m+q.m;  \n            Q.push(p);  \n        }  \n        while(!Q.empty())  \n            Q.pop();  \n        printf(\"%d\\n\",sum);  \n    }  \n    return 0;  \n}\n```",
        "postTime": 1512452266,
        "uid": 46408,
        "name": "Sorenson",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "To\u5ba1\u6838\u7684\u7ba1\u7406\u5458:\n\n\u4e4b\u524d\u683c\u5f0f\u70b8\u4e86\uff0c\u4f46\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u8fc7\u554a\uff0c\u6211\u89c9\u5f97\u6211\u8bb2\u7684\u5f88\u8be6\u7ec6\u554a\n\n\u697c\u4e0b\u7684dalao\u4eec\u90fd\u597dnb\uff0c\u849f\u84bb\u6211\u53ea\u6d45\u663e\u5730\u8bb2\u4e00\u4e0b\u597d\u4e86\u3002\n\n\u5148\u8bb2\u4e00\u4e0b\u8fd9\u9898\u7684\u6734\u7d20\u505a\u6cd5\uff0c\u53ef\u80fd\u6ca1\u5b66\u5806\u7684\u540c\u5b66\u90fd\u4f1a\u8fd9\u4e48\u60f3\uff1a\n\n\u5148\u6392\u5e8f\uff0c\u7136\u540e\u5408\u5e76\uff0c\u6bcf\u6b21\u5408\u5e76\u90fd\u518d\u6b21\u6392\u4e00\u6b21\u5e8f\uff0c$n$\u4e2a\u679c\u5b50\u5c31\u8981\u5408\u5e76$n-1$\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(n^2log_2n)$\uff0c\u9898\u4e2d\u6700\u5927\u6570\u636e\u4e3a$10000$\uff0c\u8ba1\u7b97\u8fc7\u540e\u5927\u6982\u5c31\u662f$1.3\\times10^9$\uff0c\u4e00\u6ce2$TLE$\u9001\u8d70\u4f60\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5806\u7684\u6027\u8d28\uff0c\u5efa\u7acb\u5c0f\u6839\u5806\uff0c\u672c\u7bc7\u9898\u89e3\u8bb2\u8ff0\u4e00\u4e0b\u4e8c\u53c9\u5806\u7684\u57fa\u672c\u5e94\u7528\u3002\n\n\u6211\u4eec\u4f7f\u7528\u7ebf\u6027\u8868\u50a8\u5b58\u5806\uff0c\u58f0\u660e\u4e00\u4e2a$heap$\u6570\u7ec4\u50a8\u5b58\u5806\uff0cheap_size\u7528\u6765\u8868\u793a\u5806\u7684\u8282\u70b9\u7684\u4e2a\u6570\uff08\u5806\u7684\u5927\u5c0f\uff09\u3002\n\n**\u5806\u7684\u8868\u793a\uff1a**\n![](https://cdn.luogu.com.cn/upload/pic/17833.png)\n\n\u73b0\u5728\u6211\u4eec\u5efa\u7acb\u4e86\u4e00\u4e2a\u7a7a\u5806\uff0c\u5373heap_size=0\n\n\u8282\u70b9\u7684\u5de6\u513f\u5b50\u5c31\u662f\u8282\u70b9\u7f16\u53f7$\\times$2\uff0c\u53f3\u513f\u5b50\u5c31\u662f\u8282\u70b9\u7f16\u53f7$\\times$2+1\n\n\u4e3e\u4e2a\u6817\u5b50\uff0c\n![](https://cdn.luogu.com.cn/upload/pic/17835.png)\n\n\u8282\u70b9\u7f16\u53f71\u7684\u5de6\u513f\u5b50\u662f2\uff081$\\times$2=2\uff09\uff0c\u53f3\u513f\u5b50\u662f3\uff081$\\times$2+1=3\uff09\n\n\u597d\uff0c\u770b\u4e86\u8fd9\u4e9b\u4f60\u5e94\u8be5\u660e\u767d\u5806\u6700\u57fa\u672c\u7684\u50a8\u5b58\u65b9\u5f0f\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u5806\u7684\u4e09\u79cd\u57fa\u672c\u64cd\u4f5c\uff1a\n\n**\u63d2\u5165\u8282\u70b9\uff1a**\n\n\u6709\u4e00\u4e2a\u4e0d\u592a\u4e13\u4e1a\u7684\u8bcd\u53ef\u4ee5\u63cf\u8ff0\u63d2\u5165\u8fd9\u79cd\u64cd\u4f5c\u2014\u2014**\u4e0a\u6d6e**\n\n\u610f\u601d\u5c31\u662f\uff1a\u5148\u628a\u8981\u63d2\u5165\u7684\u8282\u70b9\u5148\u63d2\u5728$heap$\u6570\u7ec4\u7684\u6700\u540e\uff0c\u518d\u4e0e\u7236\u8282\u70b9\u505a\u6bd4\u8f83\uff0c\u51b3\u5b9a\u662f\u5426\u201c\u4e0a\u6d6e\u201d\u3002\n\n\u770b\u770b\u672c\u9898\u7684\u6837\u4f8b\uff1a\n\n```cpp\n3 \n1 2 9 \n```\n\n\u4e0d\u8fc7\u8fd9\u4e2a\u6837\u4f8b\u4e0d\u80fd\u5f88\u597d\u5730\u8bf4\u660e\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u6539\u4e00\u4e0b\uff1a\n\n```cpp\n3\n1 3 0\n```\n\n\u6309\u7167\u8fd9\u4e2a\u6837\u4f8b\uff0c\u6211\u4eec\u6765\u6a21\u62df\u4e00\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/17837.png)\n\n```cpp\ninline int put(int a){\n\tint now,net;\n\theap[++heap_size]=a;\n\tnow=heap_size;\n\treturn 0;\n}\n```\n\n\u4f46\u662f\u2026\u2026\n\n\u8fd9\u53ea\u662f\u7279\u6b8a\u60c5\u51b5\u2026\u2026\n\n\u5982\u679c\u63d2\u5165\u524d\u4e0d\u662f\u7a7a\u5806\u600e\u4e48\u529e\u5462\uff1f\n\n\u8fd9\u65f6\u5c31\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1.\u65b0\u63d2\u5165\u8282\u70b9\u6bd4\u7236\u8282\u70b9\u5927\u3002\n![](https://cdn.luogu.com.cn/upload/pic/17840.png)\n\n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u4e0d\u7528\u53d8\u5316\u3002\n\n2.\u65b0\u63d2\u5165\u8282\u70b9\u6bd4\u7236\u8282\u70b9\u5c0f\u3002\n\n\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u6700\u91cd\u8981\u7684\u5566\uff01~~\u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9~~\n![](https://cdn.luogu.com.cn/upload/pic/17843.png)\n\n\u73b0\u5728\u6211\u4eec\u5c31\u8981\u91c7\u7528**\u4e0a\u6d6e**\uff0c\n\u5c06\u5b83\u4e0e\u5b83\u7684\u7236\u8282\u70b9\u6bd4\u8f83\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/17846.png)\n\n\u4e8e\u662f\u5c31\u2014\u2014\n![](https://cdn.luogu.com.cn/upload/pic/17847.png)\n\n\u4f46\u662f\u53ef\u80fd\u6709\u540c\u5b66\u4f1a\u95ee\uff1a\u660e\u660e1<3\uff0c\u4e3a\u4ec0\u4e481\u57283\u7684\u540e\u9762\u5462\uff1f\n\n\u90a3\u4e48\u8bf7\u4ed4\u7ec6\u770b\u4e00\u770b\uff0c0\u4f5c\u4e3a\u7236\u8282\u70b9\uff0c3\u548c1\u5206\u522b\u4f5c\u4e3a\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u3002\n\n\u5806\u7684\u6027\u8d28\u53ea\u8981\u6c42\u4e86\u5b50\u8282\u70b9\u4e0e\u7236\u8282\u70b9\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5e76\u6ca1\u6709\u5bf9\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7684\u5173\u7cfb\u6709\u8981\u6c42\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4ee3\u7801\uff1a\n\n```cpp\ninline int put(int a){\n\tint now,net;\n\theap[++heap_size]=a;\n\tnow=heap_size;\n\twhile(now>1){\n\t\tnet=now>>1;//\u53f3\u79fb\u8fd0\u7b97\u7b26\uff0c\u5177\u4f53\u8bf7\u4e0a\u7f51\u54a8\u8be2\uff08\u8fd9\u513f\u7684\u4f5c\u7528\u5c31\u662f\u9664\u4ee52\uff09\n\t\tif(heap[now]>=heap[net]){\n\t\t\treturn 0; \n\t\t}\n\t\tswag(heap[now],heap[net]);\n\t\tnow=net;\n\t}\n\treturn 0;\n}\n```\n\n**\u5220\u9664\u8282\u70b9\uff1a**\n\n\u8fd9\u4e2a\u64cd\u4f5c\u4e5f\u662f\u5806\u7684\u4e00\u4e2a\u57fa\u672c\u64cd\u4f5c\uff0c\u4e00\u822c\u662f\u5220\u9664\u5806\u9876\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u53ea\u8bb2\u8fd9\u4e00\u79cd\u4e86\u3002\n\n\u64cd\u4f5c\u7684\u57fa\u672c\u601d\u8def\u662f\uff1a\n\n1.\u5220\u9664\u5806\u9876\u5143\u7d20\n\n2.\u5c06\u5806\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u63d2\u5230\u5806\u9876\n\n3.**\u4e0b\u6c89**\n\n\u8fd9\u91cc\u6211\u4eec\u4ecd\u7136\u4f7f\u7528\u4e0a\u4e00\u79cd\u64cd\u4f5c\u7684\u6570\u636e\u4ee5\u53ca\u72b6\u6001\u3002\n\n\u8ba9\u6211\u4eec\u6765\u6a21\u62df\u4e00\u4e0b\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/17850.png)\n![](https://cdn.luogu.com.cn/upload/pic/17851.png)\n\n\u8fd9\u79cd\u60c5\u51b5\u65e0\u9700\u8fdb\u884c\u4e0b\u6c89\uff0c\u6240\u4ee5\u6211\u4eec\u6362\u4e00\u79cd\u6570\u636e\n![](https://cdn.luogu.com.cn/upload/pic/17854.png)\n\n\uff08\u4e0d\u8981\u5728\u610f\u7ec6\u8282\uff09\n\n\u4e0b\u6c89\u7684\u65b9\u6cd5\uff1a\n\n1.\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u513f\u5b50\uff0c\u7ec8\u6b62\u3002\n\n2.\u5f53\u524d\u8282\u70b9\u53ea\u6709\u5de6\u513f\u5b50\u6216\u8005\u53f3\u513f\u5b50\uff0c\u5c06\u5f53\u524d\u8282\u70b9\u4e0e\u90a3\u4e2a\u513f\u5b50\u4ea4\u6362\uff0c\u7ee7\u7eed\u5224\u65ad\u3002\n\n3.\u5f53\u524d\u8282\u70b9\u4e24\u4e2a\u513f\u5b50\u90fd\u6709\uff0c\u53d6\u4e24\u513f\u5b50\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u5224\u65ad\u662f\u5426\u4ea4\u6362\u3002\n\n\u6211\u4eec\u7528\u56fe\u6765\u5c55\u793a\uff08\u53ea\u5c55\u793a\u7b2c\u4e09\u79cd\u60c5\u51b5\uff09\n![](https://cdn.luogu.com.cn/upload/pic/17857.png)\n\n\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u6bd4\u8f83\u6c34\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4ea4\u6362\u4e00\u6b21\u3002\n\n\u800c\u4e00\u822c\u7684\u6570\u636e\u90fd\u4f1a\u4ea4\u6362\u8bb8\u8bb8\u591a\u591a\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u5199\u5faa\u73af\u3002\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n\ninline int get(){\n\tint net,now,res;\n\tres=heap[1];\n\theap[1]=heap[heap_size--];\n\tnow=1;\n\twhile(now*2<=heap_size){\n\t\tnet=now<<1;\n\t\tif(net<heap_size && heap[net+1]<heap[net]){\n\t\t\t++net;\n\t\t}\n\t\tif(heap[now]<=heap[net]){\n\t\t\treturn res;\n\t\t}\n\t\tswag(heap[now],heap[net]);\n\t\tnow=net;\n\t}\n\treturn res;\n}\n```\n\n**\u8fd4\u56de\u6808\u9876\u5143\u7d20\uff1a**\n\n\u8fd9\u4e2a\u4e0d\u591a\u8bf4\u660e\n```cpp\ninline int run(){\n\treturn heap[1];\n}\n\n```\n\n\u6700\u540e\uff0c\u4ee3\u7801\uff1a\n\n```cpp\n//#define filreader\n#include <bits/stdc++.h>\n#define fp(i,l,r) for(register int i=(l);i<=(r);++i)\n#define fd(i,l,r) for(register int i=(l);i>=(r);--i)\n#define MAXN 10000+20 \nusing namespace std;\n\nstatic int n,m;\nstatic int heap[MAXN],heap_size,ans;\n\ntemplate <typename T>\n\ninline int swag(T &a,T &b){\n\ta^=b^=a^=b;\n}\n\ninline int put(int a){\n\tint now,net;\n\theap[++heap_size]=a;\n\tnow=heap_size;\n\twhile(now>1){\n\t\tnet=now>>1;\n\t\tif(heap[now]>=heap[net]){\n\t\t\treturn 0; \n\t\t}\n\t\tswag(heap[now],heap[net]);\n\t\tnow=net;\n\t}\n\treturn 0;\n}\n\ninline int get(){\n\tint net,now,res;\n\tres=heap[1];\n\theap[1]=heap[heap_size--];\n\tnow=1;\n\twhile(now*2<=heap_size){\n\t\tnet=now<<1;\n\t\tif(net<heap_size && heap[net+1]<heap[net]){\n\t\t\t++net;\n\t\t}\n\t\tif(heap[now]<=heap[net]){\n\t\t\treturn res;\n\t\t}\n\t\tswag(heap[now],heap[net]);\n\t\tnow=net;\n\t}\n\treturn res;\n}\n\ninline int run(){\n\treturn heap[1];\n}\n\ninline int init(){\n\tscanf(\"%d\",&n);\n\tint a;\n\tfp(i,1,n){\n\t\tscanf(\"%d\",&a);\n\t\tput(a);\n\t}\n\tfp(i,1,n-1){\n\t\tint x=get();\n\t\tint y=get();\n\t\tans+=x+y;\n\t\tput(x+y);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\nint main(){\n\t#ifdef filreader\n\tfreopen(\".in\",\"r\",stdin);\n\tfreopen(\".out\",\"w\",stdout);\n\t#endif\n\tinit();\n\treturn 0; \n}\n\n```\n\n\u8bf4\u660e\uff0c\u5176\u4e2d\u7684$swag$\u662f\u4ea4\u6362\u51fd\u6570\u3002\n\n\u5f62\u5f0f\u53ef\u4ee5\u6709\u5f88\u591a\uff0c\u4e0d\u5fc5\u6284\u6e90\u4ee3\u7801\u7684\u3002\n\n\uff08\u7a9d\u4ece\u6765\u6ca1\u5199\u8fc7\u8fd9\u4e48\u957f\u7684\u9898\u89e3...\u6240\u4ee5\uff0c\u8bf7\u4e0d\u8981\u55b7\u7a9d\u7684\u56fe\u4e11\u2044(\u2044 \u2044\u2022\u2044\u03c9\u2044\u2022\u2044 \u2044)\u2044\uff09",
        "postTime": 1524299738,
        "uid": 32107,
        "name": "Fraction",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u8bf7\u591a\u591a\u5173\u7167\u3002\n\n\u8fd9\u53ef\u80fd\u662f\u6700\u77ed\u7684AC\u4ee3\u7801\uff0c\u89e3\u91ca\u770b\u4ee3\u7801\u3002\n```\n#include <iostream>\n#include <algorithm>\n//sort\u51fd\u6570\u5728algorithm\u5934\u6587\u4ef6\u5185\nusing namespace std;\n//a\u50a8\u5b58\u679c\u5b50\u6570\u91cf\nint a[10000];\n//n\u662f\u6570\u7ec4\u7684\u957f\u5ea6\uff08\u53f3\u7aef\uff09\n//l\u662f\u6570\u7ec4\u7684\u5de6\u7aef\n//c\u662f\u50a8\u5b58\u7b54\u6848\u7684\u53d8\u91cf\nint n,l=0,c=0;\nint main(){\n\tcin>>n;\n\tfor(int i=0;i<n;i++)\n\t\tcin>>a[i];\n    //\u5148\u5bf9\u6574\u4e2a\u6570\u7ec4\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\n    //(sort\u662f\u5feb\u901f\u6392\u5e8f)\n\tsort(a,a+n);\n    //\u5f53\u5269\u4f591\u5806\u65f6\u9000\u51fa\n\twhile(l<n-1){\n        //\u8d2a\u5fc3\u7b56\u7565\uff1a\u6bcf\u6b21\u90fd\u5408\u5e76\u6700\u5c0f\u76842\u5806\n\t\tc+=a[l]+a[l+1];\n        //\u5c06\u5408\u5e76\u540e\u7684\u4e00\u5806\u50a8\u5b58\u5728\u9760\u540e\u7684\u4e00\u5806\u4e2d\n\t\ta[l+1]+=a[l];\n        //\u6570\u7ec4\u5de6\u7aef\u5411\u53f3\u79fb\u52a8\n\t\tl++;\n        //\u4f7f\u7528\u5192\u6ce1\u6392\u5e8f\uff0c\u5feb\u901f\u6392\u5e8f\u4f1a\u8d85\u65f6\uff0c\u56e0\u4e3a\u5feb\u901f\u6392\u5e8f\u4f1a\u4fee\u6539\u6574\u4e2a\u6570\u7ec4\n        //\u800c\u5192\u6ce1\u6392\u5e8f\u53ea\u9700\u8981\u4e00\u8d9f\u5373\u53ef\uff0c\u56e0\u4e3a\uff08\u79fb\u52a8\u540e\uff09\u53ea\u6709\u7b2c\u4e00\u5806\u53ef\u80fd\u6ca1\u6392\u5e8f\uff0c\u540e\u9762\u7684\u90fd\u662f\u4e4b\u524d\u6392\u5e8f\u597d\u7684\n\t\tfor(int j=l+1;j<n;j++)\n\t\t\tif(a[j-1]>a[j])\n\t\t\t\tswap(a[j-1],a[j]);\n            else\n            \tbreak;\n\t}\n\tcout<<c;\n\treturn 0;\n}\n```",
        "postTime": 1542616418,
        "uid": 153382,
        "name": "su226",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u5176\u5b9e\uff0c\u534a\u5e74\u524d\u7684\u6211\u4e00\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5c31\u8ba4\u4e3a\u8fd9\u9053\u9898\u5f88\u7b80\u5355\u6bcf\u6b21sort\u4e00\u904d\u4e0d\u5c31\u8fc7\u4e86\u5417\uff1f\uff1f\n    \n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5e93\nusing namespace std;\nint n,a[10010],j;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n    }\n    sort(a+1,a+n+1);//\u6392\u5e8f\n    for(int i=1;i<n;i++)\n    {\n        j+=a[i]+a[i+1];\n        a[i+1]=a[i]+a[i+1]; //\u6700\u5c0f\u52a0\u4e0a\u7b2c\u4e8c\u5c0f\n        sort(a+1,a+n+1);\n    }\n    cout<<j;\n    return 0;\n}\n```\n\n------------\n\n\n------------\n\n\n------------\n\n\n\u5176\u5b9e\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u670940\u5206\uff0c\u8fd9\u53ea\u4e0d\u8fc7\u662f\u6211\u534a\u5e74\u524d\u7684\u505a\u6cd5\uff0c\u6bcf\u6b21sort\u4e00\u6b21\u660e\u663e\u8d85\u65f6\u597d\u5417\uff01\uff01\uff08\u88ab\u6211\u9634\u4e86\u7684\u8bf7\u4e3e\u4e2a\u722a\uff09\n\n\u597d\u4e86\uff0c\u73b0\u5728\u5f00\u59cb\u6253\u6b63\u89e3\n\n\n------------\n\n\n------------\n\n\n------------\n\n\u770b\u5230\u4e0a\u9762\u5927\u4f6c\u4eec\u7684\u4ec0\u4e48\u5806\u4ec0\u4e48\u6876\uff08\u597d\u50cf\u8fd8\u6709\u4e00\u4e2a\u624b\u5199\u5806\u7684\u731b\u7537\uff09\n\n\u53cd\u6b63\u6211\u662f\u4e0d\u4f1a\u8fd9\u79cd\u4e1c\u897f\u7684\u5566\uff08~~\u8c8c\u4f3c\u6211\u4eca\u5e74\u666e\u53ca\u624d150~~\uff09\n\n\u867d\u8bf4\u6211\u4eec\u521a\u521a\u7684\u4ee3\u7801\u662fTLE\u4e866\u4e2a\u70b9\uff0c\u4f46\u662f\u601d\u8def\u597d\u50cf\u662f\u6ca1\u6709\u9519\u7684\uff0c\u6bcf\u6b21\u6392\u5e8f\u662f\u6700\u7b80\u5355\u7684\u6b63\u89e3\u601d\u8def\u3002\n\n\u800c\u5728\u6392\u5e8f\u91cc\uff0c\u6700\u5feb\u7684\u662f\u4ec0\u4e48\uff08\u6211\u4e0d\u77e5\u9053\uff09\uff0c\u6211\u53ea\u77e5\u9053\u6211\u65b0\u5b66\u7684\u4f18\u5148\u961f\u5217\u53ef\u4ee5\u76f4\u63a5\u6392\u5e8f\u3002\n\n\u4f18\u5148\u961f\u5217\uff1a~~\u4f18\u5148\u961f\u5217\u662f\u4e00\u4e2a\u961f\u5217~~  \u4f5c\u4e3a\u4e00\u4e2a\u961f\u5217\u4ed6\u5c31\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u51fd\u6570\uff08\u8bed\u6587\u4e0d\u597d\uff0c\u4e0d\u77e5\u5982\u4f55\u8868\u8fbe\uff09\n\n```cpp\n#include<iostream>\n#include<queue>//\u4e0e\u961f\u5217\u4e00\u81f4\nusing namespace std;\npriority_queue<int>s;//\u5b9a\u4e49\u4e00\u4e2aint\u7c7b\u578b\u7684\u4f18\u5148\u961f\u5217\nint b,a;\nint main()\n{\n\tcin>>b>>a;\n    s.push(b);//b\u538b\u5165\u4f18\u5148\u961f\u5217\n    s.push(a);//a\u538b\u5165\u4f18\u5148\u961f\u5217\n    cout<<s.top();//\u8f93\u51fa\u4f18\u5148\u961f\u5217\u4e2d\u6700\u5927\u503c\n    s.pop\uff08\uff09;//\u5220\u9664\u6700\u5927\u503c\n    cout<<s.top();//\u8f93\u51fa\u7b2c\u4e8c\u5927\u503c\n\treturn 0;\n}\n\n```\n\n\u4e0a\u9762\u662f\u4f18\u5148\u961f\u5217\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\u3002\n\n\u6709\u4e86\u8fd9\u79cd\u597d\u73a9\u7684\u7684\u4e1c\u897f\u4ee5\u540e\n\n\u8fd9\u5c31\u662f\u4e00\u9053\u6c34\u9898\u4e86\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,b,j;\npriority_queue<int>s; \nint main()\n{\n\tcin>>n;//n\u5806\u679c\u5b50\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>b;\n\t\ts.push(b);//\u538b\u5165\u961f\u5217\n\t}\n\tfor(int i=1;i<n;i++)//\u5408\u5e76n\u5806\u53ea\u9700\u8981n-1\u6b21\u5408\u5e76\n\t{\n\t\tb=s.top();//\u53d6\u6700\u503c\n\t\ts.pop();\n\t\tb+=s.top();//\u53d6\u7b2c\u4e8c\u6700\u503c\n\t\ts.pop();\n\t\ts.push(b);\n\t\tj+=b;//\u8ba1\u7b97\u4f53\u529b\u6d88\u8017\n\t}\n\tcout<<j;//\u8f93\u51fa\u8ba1\u6570\u5668\n\treturn 0;\n } \n```\n\n\n------------\n\n\n------------\n\n\n------------\n\n\u6211\u6253\u4e86\u4e00\u4e2a\u665a\u4e0a\u7684\u9898\u89e3\uff0c\u600e\u4e48\u80fd\u8ba9\u4f60\u600e\u4e48\u5feb\u5c31AC\u5462\uff1f\n\n\u8fd9\u9053\u9898\u8ba9\u4f60\u6c42\u7684\u662f\u6700\u5c0f\u7684\u4f53\u529b\u6d88\u8017\n\n\u4e0a\u9762\u7684\u662f\u4ec0\u4e48\uff01\uff01\n\n\u662f\u6700\u5927\u4f53\u529b\u6d88\u8017\uff01\uff01\n\ns.top\uff08\uff09\u53d6\u7684\u662f\u6700\u5927\u503c\uff01\uff01\n\n\u90a3\u8be5\u600e\u4e48\u529e\u5462QAQ\uff1f\uff1f\n\n\u56de\u60f3\u4e00\u4e0b\u5c0f\u5b66\u6570\u5b66\n\n\u8981\u6c42\u7edd\u5bf9\u503c\u6700\u5c0f\u7684    \u53ea\u9700\u8981\u628a\u6570\u5b57*-1\u518d\u6392\u5e8f\u5c31\u597d\u4e86\n\n\u6240\u4ee5\uff0c\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u6240\u6709\u679c\u5b50\u5806\u7684\u6570\u91cf\u5728\u538b\u5165\u961f\u5217\u4e4b\u524d*-1\uff0c\u56e0\u4e3a-1*-1==1\uff0c\u6240\u4ee5\u6700\u540e\u7684\u8ba1\u6570\u5668\u518d*-1\u5c31\u53ef\u4ee5\u8f93\u51fa\u4e86\u3002\n\n\u6b63\u786e\u7684AC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,b,j;\npriority_queue<int>s; //\u5b9a\u4e49\u961f\u5217\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>b;\n\t\ts.push(-b);//*-1\u540e\u518d\u538b\u5165\u961f\u5217\n\t}\n\tfor(int i=1;i<n;i++)//\u5faa\u73afn-1\u6b21\n\t{\n\t\tb=s.top();//\u5f39\u51fa\u6700\u5c0f\u503c\n\t\ts.pop();//\u5220\u9664\u6700\u5c0f\u503c\n\t\tb+=s.top();//\u5f39\u51fa\u7b2c\u4e8c\u5c0f\u503c\n\t\ts.pop();//\u5220\u9664\u7b2c\u4e8c\u5c0f\u503c\n\t\ts.push(b);//\u91cd\u65b0\u538b\u5165\u961f\u5217\n\t\tj+=b;//\u8ba1\u6570\n\t}\n\tcout<<j*-1;//\u8f93\u51fa-1*\u8ba1\u6570\u5668\n\treturn 0;//\u7ed3\u675f\u4ee3\u7801\n } \n```\n\n\u8fd9\u6b21\uff0c\u662f\u771f\u7684\u7ed3\u675f\u4e86\u3002\n\n\u6211\u53ea\u662f\u4e00\u4e2a\u666e\u53ca\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u4e8c\u7b49\u7684\u849f\u84bb\uff0c\u5927\u4f6c\u52ff\u55b7\uff0c\u6709\u9519\u8bef\u6216\u8005\u7ea0\u6b63\u7684\u53ef\u4ee5\u627e\u6211\n\n\u7ec8\u4e8e\u7ed3\u675f\u4e86\uff0c\u6211\u6253\u4e86\u4e00\u4e2a\u665a\u4e0a\u7684\u9898\u89e3",
        "postTime": 1542464904,
        "uid": 63394,
        "name": "XQLG",
        "ccfLevel": 4,
        "title": "\u81ea\u6211\u611f\u89c9\u826f\u597d\u7684\u9898\u89e3"
    },
    {
        "content": "# \u5168\u65b0Haliro\u9898\u89e3<\u7b2c\u4e00\u671f>\n\n~~\u840c\u65b0\u7b2c\u4e00\u6b21\u5199\u9898\u89e3,\u6ca1\u7ecf\u9a8c\u3002~~\n\u8bf7\u591a\u8c05\u89e3\uff01\n\n\n------------\n\n## \u5148\u8d34\u4e0aac\u4ee3\u7801:\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint main()\n{\n\tint n;\n\tcin>>n;\n\tint a[n],now=n;\n\tfor(int i=0;i<n;i++) \n\t{\n\t\tcin>>a[i];\n\t}\n\tunsigned long long p,q,p1,q1,man=0;\n\twhile(now!=1)\n\t{\n\t\tp=q=184467441615;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(a[i]==0) continue;\n\t\t\tif(a[i]<q) \n\t\t\t{\n\t\t\t\tq=a[i];\n\t\t\t\tq1=i;\n\t\t\t}\n\t\t\telse if(a[i]<p) \n\t\t\t{\n\t\t\t\tp=a[i];\n\t\t\t\tp1=i;\n\t\t\t}\n\t\t\tif(p>q)\n\t\t\t{\n\t\t\t\tswap(p,q);\n\t\t\t\tswap(p1,q1);\n\t\t\t}\n\t\t}\n\t\tman=man+p+q;\n\t\tnow--;\n\t\ta[q1]=p+q;\n\t\ta[p1]=0;\n\t}\t\n\tcout<<man;\n\treturn 0;\n}\n```\n\n~~\u90a3\u4e48\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355~~\n\n\u53ea\u8981\u4f60\u627e\u51fa\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\uff0c\u52a0\u5230\u4f53\u529b\u503c\u91cc\u9762\u5c31\u5927\u529f\u544a\u6210\u3002\u5e76\u4e0d\u9700\u8981\u4efb\u4f55\u7684\u6392\u5e8f\uff01\uff01\uff01\n\n\u5f53\u4f60\u627e\u5230\u4e24\u4e2a\u8f83\u5c0f\u7684\u6570\u65f6\uff0c\u5148\u8d34\u4e0a\u6807\u8bb0\uff0c\u9632\u6b62\u540e\u9762\u6709\u6bd4\u4ed6\u66f4\u5c0f\u7684\u6570\u51fa\u73b0\u3002\n\n\u800c\u4e3a\u4ec0\u4e48p\u4e00\u5b9a\u8981\u6bd4q\u5c0f\u5462\uff1f\uff1f\n\n\u56e0\u4e3a\u5f53\u4f60\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u5148\u6bd4\u8f83q\uff0c\u82e5\u662f\u6bd4q\u8fd8\u5927\uff0c\u80af\u5b9a\u6bd4p\u5927\u3002\u4f46\u662f\u82e5\u662f\u6bd4q\u5c0f\uff0c\u518d\u4e0ep\u6bd4\u8f83\u5373\u53ef\u3002\n\n\u6240\u4ee5p\u4e00\u5b9a\u8981\u6bd4q\u5927\uff01\uff01\uff01\uff01\n\n\u8c22\u8c22\u89c2\u8d4f\uff01\n\n\u6211\u662f~~\u5c0f\u540d\u9f0e\u9f0e\u7684~~Haliro",
        "postTime": 1569673422,
        "uid": 176127,
        "name": "Haliro",
        "ccfLevel": 0,
        "title": "P1090\u9898\u89e3"
    },
    {
        "content": "\n\n\n------------\n\n## [\u5408\u5e76\u679c\u5b50](https://www.luogu.org/problemnew/show/P1090) (fruit.pas\uff0fc\uff0fcpp) 2004\u5e74\u63d0\u9ad8\u7ec4  \u7b2c2\u9898\n### \u3010\u95ee\u9898\u63cf\u8ff0\u3011\n\u5728\u4e00\u4e2a\u679c\u56ed\u91cc\uff0c\u591a\u591a\u5df2\u7ecf\u5c06\u6240\u6709\u7684\u679c\u5b50\u6253\u4e86\u4e0b\u6765\uff0c\u800c\u4e14\u6309\u679c\u5b50\u7684\u4e0d\u540c\u79cd\u7c7b\u5206\u6210\u4e86\u4e0d\u540c\u7684\u5806\u3002\u591a\u591a\u51b3\u5b9a\u628a\u6240\u6709\u7684\u679c\u5b50\u5408\u6210\u4e00\u5806\u3002\n\n\u6bcf\u4e00\u6b21\u5408\u5e76\uff0c\u591a\u591a\u53ef\u4ee5\u628a\u4e24\u5806\u679c\u5b50\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u6d88\u8017\u7684\u4f53\u529b\u7b49\u4e8e\u4e24\u5806\u679c\u5b50\u7684\u91cd\u91cf\u4e4b\u548c\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6240\u6709\u7684\u679c\u5b50\u7ecf\u8fc7n-1\u6b21\u5408\u5e76\u4e4b\u540e\uff0c\u5c31\u53ea\u5269\u4e0b\u4e00\u5806\u4e86\u3002\u591a\u591a\u5728\u5408\u5e76\u679c\u5b50\u65f6\u603b\u5171\u6d88\u8017\u7684\u4f53\u529b\u7b49\u4e8e\u6bcf\u6b21\u5408\u5e76\u6240\u8017\u4f53\u529b\u4e4b\u548c\u3002\n\n\u56e0\u4e3a\u8fd8\u8981\u82b1\u5927\u529b\u6c14\u628a\u8fd9\u4e9b\u679c\u5b50\u642c\u56de\u5bb6\uff0c\u6240\u4ee5\u591a\u591a\u5728\u5408\u5e76\u679c\u5b50\u65f6\u8981\u5c3d\u53ef\u80fd\u5730\u8282\u7701\u4f53\u529b\u3002\u5047\u5b9a\u6bcf\u4e2a\u679c\u5b50\u91cd\u91cf\u90fd\u4e3a1\uff0c\u5e76\u4e14\u5df2\u77e5\u679c\u5b50\u7684\u79cd\u7c7b\u6570\u548c\u6bcf\u79cd\u679c\u5b50\u7684\u6570\u76ee\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u8bbe\u8ba1\u51fa\u5408\u5e76\u7684\u6b21\u5e8f\u65b9\u6848\uff0c\u4f7f\u591a\u591a\u8017\u8d39\u7684\u4f53\u529b\u6700\u5c11\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u7684\u4f53\u529b\u8017\u8d39\u503c\u3002\n\n\u4e3e\u4e2a\u6817\u5b50 \u67093\u79cd\u679c\u5b50\uff0c\u6570\u76ee\u4f9d\u6b21\u4e3a1\uff0c2\uff0c9\u3002\u53ef\u4ee5\u5148\u5c061\u30012\u5806\u5408\u5e76\uff0c\u65b0\u5806\u6570\u76ee\u4e3a3\uff0c\u8017\u8d39\u4f53\u529b\u4e3a3\u3002\u63a5\u7740\uff0c\u5c06\u65b0\u5806\u4e0e\u539f\u5148\u7684\u7b2c\u4e09\u5806\u5408\u5e76\uff0c\u53c8\u5f97\u5230\u65b0\u7684\u5806\uff0c\u6570\u76ee\u4e3a12\uff0c\u8017\u8d39\u4f53\u529b\u4e3a12\u3002\u6240\u4ee5\u591a\u591a\u603b\u5171\u8017\u8d39\u4f53\u529b=3+12=15\u3002\u53ef\u4ee5\u8bc1\u660e15\u4e3a\u6700\u5c0f\u7684\u4f53\u529b\u8017\u8d39\u503c\u3002\n### \u3010\u8f93\u5165\u6587\u4ef6\u3011\n\u8f93\u5165\u6587\u4ef6fruit.in\u5305\u62ec\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570n(1<\uff1dn<=10000)\uff0c\u8868\u793a\u679c\u5b50\u7684\u79cd\u7c7b\u6570\u3002\u7b2c\u4e8c\u884c\u5305\u542bn\u4e2a\u6574\u6570\uff0c\u7528\u7a7a\u683c\u5206\u9694\uff0c\u7b2ci\u4e2a\u6574\u6570ai(1<\uff1dai<=20000)\u662f\u7b2ci\u79cd\u679c\u5b50\u7684\u6570\u76ee\u3002\n### \u3010\u8f93\u51fa\u6587\u4ef6\u3011\n\u8f93\u51fa\u6587\u4ef6fruit.out\u5305\u62ec\u4e00\u884c\uff0c\u8fd9\u4e00\u884c\u53ea\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u7684\u4f53\u529b\u8017\u8d39\u503c\u3002\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u8fd9\u4e2a\u503c\u5c0f\u4e8e231\u3002\n \n#### \u3010\u6837\u4f8b\u8f93\u5165\u3011 \n3 \n1 2 9 \n#### \u3010\u6837\u4f8b\u8f93\u51fa\u3011 \n15 \n#### \u3010\u6570\u636e\u89c4\u6a21\u3011 \n\u5bf9\u4e8e30\uff05\u7684\u6570\u636e\uff0c\u4fdd\u8bc1\u6709n<=1000\uff1a\u5bf9\u4e8e50\uff05\u7684\u6570\u636e\uff0c\u4fdd\u8bc1\u6709n<=5000\uff1b \n\n\u5bf9\u4e8e\u5168\u90e8\u7684\u6570\u636e\uff0c\u4fdd\u8bc1\u6709n<=10000\u3002 \n\n\n------------\n\u8fd9\u4e2a\u662f\u6211\u4eec\u8001\u5e08\u7ed9\u7684\u6570\u636e\u89c4\u6a21\n\n\u6bd4\u6d1b\u8c37\u7684\u89c4\u6a21\u8981\u5927\u4e00\u4e9b\n\n\u6240\u4ee5\u6d1b\u8c37\u540c\u6837\u80fd\u8fc7\n\u4e0b\u9762\u662f\u5206\u6790\n\n\n------------\n\u9898\u610f\u662f\u4e24\u5806\u5408\u5e76\u4e00\u6b21\u6210\u4e3a\u4e00\u65b0\u5806\uff0c\u5176\u4ee3\u4ef7\u4e3a\u8fd9\u4e24\u5806\u679c\u5b50\u7684\u91cd\u91cf\u548c\uff0c\u73b0\u628an\u5806\u679c\u5b50\u5408\u5e76\u6210\u4e00\u5806\u679c\u5b50\uff0c\u8981\u6c42\u5408\u5e76\u603b\u4ee3\u4ef7\u6700\u5c0f\u3002\n\n\u672c\u9898\u663e\u7136\u662f\u8d2a\u5fc3\u7b56\u7565\uff0c\u9009\u4e24\u5806\u91cd\u91cf\u6700\u5c0f\u7684\u8fdb\u884c\u5408\u5e76\uff0c\u6210\u4e3a\u4e00\u65b0\u5806\u3002\u518d\u4ece\u6240\u6709\u7684\u5806\uff08\u5305\u62ec\u65b0\u5806\uff09\u4e2d\u9009\u4e24\u5806\u91cd\u91cf\u6700\u5c0f\u7684\u8fdb\u884c\u5408\u5e76\uff0c\u76f4\u5230\u6240\u6709\u7684\u679c\u5b50\u5408\u5e76\u6210\u4e00\u5806\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06n\u5806\u679c\u5b50\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5f97\u5230a[1]~a[n]\uff0c\u5c06a[1]\u4e0ea[2]\u5408\u5e76\uff0c\u4ea7\u751f\u4e00\u65b0\u5806\u679c\u5b50X\u3002\u8fd9\u4e00\u65b0\u5806X\u53c8\u5f97\u63d2\u5165\u6392\u5e8f\u7684\u5e8f\u5217\u4e2d\uff0c\u79fb\u52a8\u8fd9\u6837\u4f1a\u5f88\u8d39\u65f6\uff0c\u4f1a\u5bfc\u81f4\u8d85\u65f6\u3002\n\n\u6240\u4ee5\u6211\u91c7\u7528\u5e8f\u5217\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u8fd9\u9053\u9898\u76ee\n\n\u5916\u5e26\u4e00\u70b9\u6307\u9488\u7684\u5185\u5bb9\uff08\u5176\u5b9e\u4e5f\u4e0d\u7b97\uff09\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[10005],b[10005],total,n;\nint main()\n{\n\t//freopen(\"fruit.in\",\"r\",stdin);\n  \t//freopen(\"fruit.out\",\"w\",stdout);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t cin>>a[i];\n\tsort(a+1,a+n+1);\n\tint i1=0;//\u7b2c\u4e00\u7ec4\u6307\u94881\u6307\u54110\uff08\u8fd8\u6ca1\u5f00\u59cb\uff09 \n\tint i2=n;//\u7b2c\u4e8c\u7ec4\u6307\u94882\u6307\u5411n(\u7ed3\u675f\u70b9\uff09\n\tint k1=0;//\u7b2c\u4e00\u7ec4\u6307\u94881\u6307\u54110\n\tint k2=0;//\u540c\u4e0a\n\twhile(i2-i1+k2-k1>1)\n\t//\u8868\u660e\u6307\u9488\u6307\u5411\u7684\u4e24\u4e2a\u7ec4\u522ba,b\u4e2d\u4ecd\u7136\u6709\u81f3\u5c11\u4e24\u5806\uff0c\u53ef\u4ee5\u76f8\u52a0\n\t{\n\t\tint t=0;//\u8fd9\u4e2a\u662f\u73b0\u5728\u7684\u548c \n\t\t\n\t\tif(i1==i2/*\u8fd9\u662fa\u5806\u6ca1\u6709\u4e86*/||(k1<k2&&b[k1+1]<a[i1+1])/*\u8fd9\u662f\u5e94\u8be5\u9009b\u7684\u60c5\u51b5*/)\n\t\t t+=b[++k1];//\u9009\u76f8\u52a0\u7684\u7b2c\u4e00\u5806\u662f\u4ec0\u4e48 \n\t\telse t+=a[++i1];//\u9664\u6b64\u4e4b\u5916\uff0c\u5c31\u662f\u9009a\u7ec4 \n\t\t\n\t\tif(i1==i2||(k1<k2&&b[k1+1]<a[i1+1]))\n\t\t t+=b[++k1];//\u9009\u76f8\u52a0\u7684\u7b2c\u4e8c\u5806\u662f\u4ec0\u4e48 \uff0c\u540c\u9009\u7b2c\u4e00\u7ec4\u60c5\u51b5  \n\t\telse t+=a[++i1];//\u540c\u4e0a\n\t\t\n\t\ttotal+=t;//\u8868\u660e\u8981\u6d88\u8017\u7684\u4f53\u529b\u6570 \n\t\tb[++k2]=t;\n\t} \n\tcout<<total<<endl;\n\treturn 0;\n}\n```\n\n\n------------\n\u8001\u5e08\u6559\u6750\u4e0a\u9762\u9644\u5e26\u4e86\u4e00\u79cd\u5176\u4ed6\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u8eab\u4e3a\u849f\u84bb\u7684\u6211\u4e00\u70b9\u4e5f\u770b\u4e0d\u61c2\n\n\u7ed9\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\n\n\n------------\n```cpp\n#include<cstdio>\n#include<algorithm>//\u5305\u542b\u5806heap\n#include<vector>\nusing namespace std;\nvector <int>a;\nint total,n,x;\nbool cmp(const int &a,const int &b)\n{\n  return a>b;//\u5c0f\u6839\u5806 \n}\nint main()\n{\n  //freopen(\"fruit.in\",\"r\",stdin);\n  //freopen(\"fruit.out\",\"w\",stdout);\n  scanf(\"%d\",&n);\n  for (int i=1;i<=n;i++)\n   { \n     scanf(\"%d\",&x);\n     a.push_back(x);\n   }\n  make_heap(a.begin(),a.end(),cmp);//\u5c06a\u5efa\u6210\u5c0f\u6839\u5806 \n  while (a.size()>1)//\u81f3\u5c11\u8fd8\u6709\u4e24\u5806 \n  {\n    x=a.front();\n    pop_heap(a.begin(),a.end(),cmp);//\u5806\u9876\u6700\u5c0f\u503c\u653e\u5230\u6700\u540e\uff0c\u5e76\u91cd\u65b0\u4fee\u6b63\u6700\u5c0f\u503c \n    a.pop_back();//\u5220\u9664\u6700\u540e\u4e00\u4e2a\u503c \n    x+=a.front();   \n    pop_heap(a.begin(),a.end(),cmp);\n    a.pop_back();\n    total+=x;\n    a.push_back(x);//\u5728a\u7684\u6700\u540e\u6dfb\u52a0\u4e00\u4e2a\u6570\u636eX\n    push_heap(a.begin(),a.end(),cmp);//\u6700\u540e\u6570\u636eX\u8c03\u6574\u5230\u5806\u4e2d\u7684\u5408\u9002\u4f4d\u7f6e\n  }\n  printf(\"%d\\n\",total);\n  return 0;\n}\n\n```\n\n\n------------\n\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u8bc4\u8bba\u66f4\u597d\u7684\u65b9\u6cd5\u54e6~\n\n\u70b9\u4e2a\u8d5e\u9f13\u52b1\u4e00\u4e0b\u5457\uff08\u8c22\u8c22\u54af\uff09",
        "postTime": 1534909872,
        "uid": 116903,
        "name": "Nobody_Zhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "# \u9898\u610f\u5206\u6790\uff1a\n------------\n## \u9898\u76ee\u610f\u601d\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5c06n\u4e2a\u6570\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff0c\u7d2f\u8ba1\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\u4e4b\u548c\u7684\u548c\uff0c\u8fd9\u4e2a\u7d2f\u8ba1\u7684\u6570\u503c\u8981\u6700\u5c0f\uff0c\u6240\u4ee5\u6bcf\u6b21\u8ba1\u7b97\u4e24\u4e2a\u6700\u5c0f\u503c\u4e4b\u540e\uff0c\u9700\u8981\u91cd\u65b0\u6392\u5e8f\u3002\u601d\u8def\u5982\u4e0b\uff0c\u5c06n\u4e2a\u6570\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8ba1\u7b97\u6700\u540e\u4e24\u4e2a\u6570\u4e4b\u548c\uff0c\u5e76\u5c06\u6570\u7ec4\u5927\u5c0f\u51cf1\uff0c\u5c06\u5f97\u5230\u7684\u548c\u8c03\u6574\u4f4d\u7f6e\u540e\uff0c\u7ee7\u7eed\u8ba1\u7b97\u6700\u540e\u4e24\u4e2a\u6570\u7684\u548c\uff0c\u91cd\u590d\u3002\u3002\u3002\u76f4\u5230\u6570\u7ec4\u5927\u5c0f\u4e3a1.\n------------\n## \u4ee3\u7801\u5b9e\u73b0\uff1a\n------------\n```\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint map[10005];\nbool cmpare(int a,int b)//\u5c06\u6570\u7ec4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n{\n\treturn a>b;\n}\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)scanf(\"%d\",&map[i]);\n\tsort(map,map+n,cmpare);\n\tint ans = 0;//\u7d2f\u8ba1\u6bcf\u6b21\u8ba1\u7b97\u7684\u548c \n\twhile(n)\n\t{\n\t\tn--;//\u62ff\u53d6\u7684\u6b21\u6570\u51cf1 \n\t\tmap[n-1] = map[n]+map[n-1];//\u8ba1\u7b97\u6700\u5c0f\u4e24\u4e2a\u6570\u7684\u548c\uff0c\u5e76\u653e\u5728n-1\u4f4d\u6570\u7ec4\u91cc \n\t\tans += map[n-1];//\u7d2f\u8ba1\u548c \n\t\tfor(i=n-1;i>0;i--)//\u8c03\u6574\u548c\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e \n\t\t{\n\t\t\tif(map[i]<=map[i-1])break; \n\t\t\telse\n\t\t\t{\n\t\t\t\tint temp = map[i];\n\t\t\t\tmap[i] = map[i-1];\n\t\t\t\tmap[i-1] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans - map[0]);//\u7d2f\u8ba1\u7684\u65f6\u5019\u4f1a\u591a\u52a0\u4e00\u6b21\uff0c\u6240\u4ee5\u8981\u51cf\u6389map[0] \n\treturn 0;\n}\n```",
        "postTime": 1517466163,
        "uid": 83861,
        "name": "MakerOne",
        "ccfLevel": 0,
        "title": "P1090"
    },
    {
        "content": "\u5185\u5bb9\u6458\u81ea\uff1ahttp://y.luogu.org/\n\n\u9898\u89e3\n\n\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u9898\u76ee\u3002\n\n\n\u6211\u7684\u65b9\u6cd5\u662f\u6bcf\u6b21\u9009\u53d6\u6700\u5c11\u7684\u4e24\u5806\u5408\u5e76\uff0c\u76f4\u5230\u5269\u4e00\u5806\u3002\n\n\n\u7136\u800c\u8fd9\u6837\uff0c\u6bcf\u6b21\u90fd\u8981\u6392\u5e8f\u4ee5\u786e\u5b9a\u6700\u5c11\u679c\u5b50\u7684\u4e24\u5806\uff0c\u4ee3\u7801\u590d\u6742\u5ea6\u3001\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u8981\u4e0a\u5347\u3002\n\n\n\u4f5c\u4e3a\u4e00\u4e2a\u4f7f\u7528C++\u7684OIer\uff0c\u81ea\u7136\u5c31\u60f3\u5230\u4e86STL\uff08\u8981\u67e5\u770b\u66f4\u591a\u4e0eSTL\u6709\u5173\u7684\u5185\u5bb9\uff0c\u8bf7\u5230\uff1a\u672f\u8bed\u96c6\u5408\uff09\u3002\n\n\n\u9700\u8981#include<queue>\u4ee5\u4f7f\u7528\u4f18\u5148\u961f\u5217\u3002\n\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<queue>  \n#include<cstdio>  \n#include<algorithm>  \n#include<cstdlib>  \nusing namespace std;  \nint main()  \n{  \n    priority_queue<int>gz;  //\u4f18\u5148\u961f\u5217\n    int n;  \n    scanf(\"%d\",&n);  \n    for (int i=1,temp;i<=n;i++)  \n    {  \n        scanf(\"%d\",&temp);  \n        gz.push(-temp);  //\u4e3a\u4e86\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    }  \n    int hb=0;  \n   for (int i=1,temp=0;i<n;i++)  //\u5408\u5e76\u6700\u5c0f\u7684\u4e24\u5806\n   {  \n        temp=gz.top();  //temp\u8d1f\u8d23\u8ba1\u7b97\u4e24\u5806\u5408\u5e76\u540e\u7684\u679c\u5b50\u6570\n        hb-=gz.top();  \n        gz.pop();  \n        temp+=gz.top();  \n        hb-=gz.top();  //hb\u8d1f\u8d23\u8ba1\u7b97\u4f53\u529b\n        gz.pop();  \n        gz.push(temp);  \n   }  \n   printf(\"%d\",hb);  //\u8f93\u51fa\n}  \n\n```\n\u4f46\u662f\uff01\u8fd8\u6709\u4f46\u662f\uff01\u5f53\u65f6C++\u4e0d\u5141\u8bb8\u4f7f\u7528STL\uff08\u5426\u5219\u6709\u8bed\u8a00\u6b67\u89c6\u5acc\u7591\uff09\uff01\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u63d0\u5347\u80fd\u529b\uff0c\u5c31\u4e0d\u8981\u4f7f\u7528STL\u3002\n\n\n\u6b65\u9aa4\uff1a\n\n\n\u8bfb\u8fdb\u6570\u7ec4\n\n\u6392\u5e8f\n\u53d6a,b\uff08b\u5f00\u59cb\u4e3a\u7a7a\uff0c\u521d\u59cb\u5316\u4e3a\u8fd1\u4f3c\u65e0\u7a77\u5927\uff0c\u4f46\u8981\u4f7f\u5f97\u201c\u65e0\u7a77\u5927\u201d+\u201c\u65e0\u7a77\u5927\u201d=\u201c\u65e0\u7a77\u5927\u201d\\*2\uff0c\u800c\u4e0d\u4f1a\u6ea2\u51fa\u6210\u4e3a\u8d1f\u6570\uff09\n\n\u53d6a\uff0cb\u4e2d\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\u5408\u5e76\uff0c\u5b58\u5728b\u6570\u7ec4\u540e\u9762\uff0c\u76f8\u52a0\u7684\u4e24\u4e2a\u6570\u5220\u6389\u3002\u8fd9\u4e24\u4e2a\u6570\u7684\u548c\u7d2f\u52a0\u5230\u4f53\u529b\u4e2d\u3002\u8be5\u6b65\u91cd\u590dn-1\u6b21\u3002\n\n\u8f93\u51fa\u4f53\u529b\n\nAC\\*2\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<cctype>\n#include<iostream>\nusing namespace std;\nint a[100001],b[100000],al=0,ar,bl=0,br=0,tl=0;\nvoid pd()\n{\n    if((a[al]+a[al+1] < a[al]+b[bl])&& (a[al]+a[al+1] < b[bl]+b[bl+1]))\n    {\n        b[br]=a[al]+a[al+1];\n        al+=2;\n    }\n    else\n    {\n        if (a[al]+b[bl] < b[bl]+b[bl+1])\n        {\n            b[br]=a[al]+b[bl];\n            bl++;\n            al++;\n        }\n        else\n        {\n            b[br]=b[bl]+b[bl+1];\n            bl+=2;\n        }\n    }\n    tl+=b[br];\n    br++;\n}\nint main()\n{\n    memset(a,0x3f3f3f3f,sizeof(int)*100001);\n    memset(b,0x3f3f3f3f,sizeof(int)*100000);\n    int n;\n    scanf(\"%d\",&n);\n    for (int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    ar=n-1;\n    int i=1;\n    bool jh=false;\n    do\n    {\n        jh=false;\n        for (int j=1;j<=n-i;j++)\n        {\n            if (a[j-1]>a[j])\n            {\n                a[100000]=a[j-1];\n                a[j-1]=a[j];\n                a[j]=a[100000];\n                jh=true;\n            }\n        }\n        i++;\n    }\n    while(jh);\n    for (int i=1;i<n;i++)\n    {\n        pd();\n    }\n    printf(\"%d\",tl);\n}\n\n```\n[color=red]\u6ce8\uff1a\u8be5\u7a0b\u5e8f\u5192\u6ce1\u6392\u5e8f\u8fd8\u53ef\u6539\u4e3a\u66f4\u4f18\u7684\u5feb\u901f\u6392\u5e8f\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u601d\u8003\u3002[/color]\n\n\nSTL\u4e0e\u975eSTL\u4ee3\u7801\u6bd4\u8f83\n\n\nSTL               \u975eSTL\n\n\n\u4ee3\u7801\u957f\u5ea6                             0.43KB          0.88KB\n\n\n\u5355\u5e97\u5e73\u5747\u8fd0\u884c\u65f6\u95f4                6ms              118ms\n\n\n\u5355\u5e97\u5e73\u5747\u6d88\u8017\u5185\u5b58              2042kb           2848kb\n\n\n \n\n\u6211\u4e0d\u7981\u611f\u53f9STL\u662f\u591a\u4e48\u597d\u7528\u554a~233\n\n\n--------------------------------------------The End-----------------------------------------\n",
        "postTime": 1435669262,
        "uid": 5846,
        "name": "yyy2015c01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u5f88\u7b80\u5355\uff0c\u6211\u8bb0\u5f97\u4ee5\u524d\u505a\u8fd9\u9053\u9898\u65f6\u7528O(n^2)\u7684\u505a\u6cd5\u4f1a\u8d85\u65f6\uff0c\u6807\u51c6\u505a\u6cd5\u662f\u5806\u6392\u5e8f\uff0c\u4f46\u662f\u6bd4\u8f83\u9ebb\u70e6\u3002\u4e8e\u662f\u6211\u60f3\u5230\u4e86\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u529e\u6cd5\u3002\n\n\u57fa\u672c\u601d\u60f3\u7c7b\u4f3c\u9009\u62e9\u6392\u5e8f\uff0c\u4f46\u662f\u6bcf\u6b21\u53ea\u8981\u9009\u53d6\u8d28\u91cf\u6700\u5c0f\u7684\u4e24\u5bf9\u5408\u5e76\u5373\u53ef\uff0c\u6240\u4ee5\u53ea\u8981\u7528\u9009\u62e9\u6392\u5e8f\u7684\u601d\u60f3\u9009\u51fa\u4e24\u5806\u8d28\u91cf\u6700\u5c0f\u7684\uff0c\u5408\u5e76\u4e4b\uff08a[1]:=a[1]+a[2]\uff09,\u7136\u540e\u628a\u672a\u88ab\u5408\u5e76\u64cd\u4f5c\u8fc7\u7684\u6700\u540e\u4e00\u5806\u8d4b\u503c\u5230a[2]\u6765\uff0c\u4ee5\u540e\u7684\u9009\u62e9\u6392\u5e8f\u65f6\u4e0d\u8003\u8651\u6700\u540e\u7684\u51e0\u4e2a\uff08\u76f8\u5f53\u4e8e\u6392\u5e8f\u6b21\u6570\uff09\u6570\u636e\u5373\u53ef\u3002\n\n\u8bf4\u7684\u8fd9\u4e48\u8be6\u7ec6\u4e86\uff0c\u522b\u7684\u5927\u5bb6\u81ea\u5df1\u4f53\u4f1a\u5427\u3002\n\n```delphi\n\nvar\n n,i,t,j,t1,k,tl:longint;\n a:array[1..10000]of longint;\nbegin\n readln(n);\n for i:=1 to n do read(a[i]);\n while t1<n do\n begin\n      for i:=1 to 2 do\n      begin\n           for j:=i+1 to n-t1 do\n           begin\n                if a[i]>a[j] then\n                begin\n                     t:=a[i];\n                     a[i]:=a[j];\n                     a[j]:=t;\n                end;\n           end;\n      end;\n      a[1]:=a[1]+a[2];\n      a[2]:=a[n-t1];\n      a[n-t1]:=0;\n      inc(t1);\n      inc(tl,a[1]);\n end;\n writeln(tl);\nend. \n\n```",
        "postTime": 1379998857,
        "uid": 954,
        "name": "fadeAwayLi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u5404\u4f4d\u6709\u6ca1\u6709\u505a\u8fc7\u54c8\u5f17\u66fc\u6811\uff0c\u8fd9\u4e2a\u9898\u5c31\u662f\u627e\u51fa\u4e24\u4e2a\u6700\u5c0f\u7684\u5806\u76f8\u52a0\uff0c\u7d2f\u8ba1\u5c31\u884c\u4e86\u3002\n\n```java\nimport java.util.Scanner;\n\npublic class Main2 {\n\tstatic int n;\n\tstatic int[] a;\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tn = in.nextInt();\n\t\ta = new int[n];\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = in.nextInt();\n\t\t}\n\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\tsum += f();\n\t\t}\n\t\tSystem.out.println(sum);\n\t}\n\tprivate static int f() {\n\t\t// TODO Auto-generated method stub\n\t\tint min1 = 99999999, min2 = 99999999;\n\t\tint mark1 = 0, mark2 = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a[i] != 0) {\n\t\t\t\tif (a[i] < min1) {\n\t\t\t\t\tmin1 = a[i];\n\t\t\t\t\tmark1 = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ta[mark1] = 0;\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a[i] != 0) {\n\t\t\t\tif (a[i] < min2) {\n\t\t\t\t\tmin2 = a[i];\n\t\t\t\t\tmark2 = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ta[mark1] = min1 + a[mark2];\n\t\ta[mark2] = 0;\n\t\treturn a[mark1];\n\t}\n}\n```",
        "postTime": 1522301271,
        "uid": 84632,
        "name": "zxr2585479224",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u662f\u4e2a****\u8d2a\u5fc3\u9898****\u5566  \n\u80af\u5b9a\u662f\u6bcf\u6b21\u53d6\u6700\u5c0f\u7684\u4e24\u5806\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u5566  \n\u7531\u4e8e\u6211\u592a\u5f31\u4e86\uff0c\u6240\u4ee5\u7528STL\u7684\u4f18\u5148\u961f\u5217\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u624b\u5199\u5c0f\u6839\u5806  \n~~\u76f8\u4fe1\u5927\u5bb6\u90fd\u559c\u6b22STL~~\n\u4e0b\u9762\u5c31\u662f\u672c\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\npriority_queue <int,vector<int>,greater<int> > q;//\u4f18\u5148\u961f\u5217\nlong long ans,n,a,b,x;\ntemplate<class T>void read(T &x)//\u5feb\u8bfb\n{\n\tx=0;int f=0;char ch=getchar();\n\twhile(ch<'0' || ch>'9')f|=(ch=='-'),ch=getchar();\n\twhile(ch>='0' && ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\tx=f? -x:x;return ;\n}\nint main()\n{\n   cin>>n;\n   for(int i=1;i<=n;i++)read(x),q.push(x);//\u8f93\u5165\uff0c\u628a\u6bcf\u4e2a\u6570\u5165\u961f\n   for(int i=1;i<n;i++)//\u64cd\u4f5cn-1\u6b21\n   {\n   \ta=q.top();//\u6bcf\u6b21\u53d6\u961f\u5217\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\uff0c\u7528a,b\u8bb0\u5f55,\u540c\u65f6\u51fa\u961f\n\tq.pop();\n     \tb=q.top();\n\tq.pop();\n    \tans+=a+b;//ans\u4e3a\u6d88\u8017\u7684\u4f53\u529b,\u52a0\u4e0aa,b\n      \tq.push(a+b);//\u5c06\u5408\u5e76\u7684\u6570\u5165\u961f\n   }\n    cout<<ans;\n    return 0;\n}\n```\n\n",
        "postTime": 1564987313,
        "uid": 124943,
        "name": "wangwentao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u5f88\u591a\u4eba\u77e5\u9053\u8fd9\u53ef\u4ee5\u7528\u4e00\u79cd\u53eb\u5806\u7684\u4e1c\u897f\u7ef4\u62a4\uff0c\u4f46\u4e0d\u77e5\u9053\u8fd9\u9898\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u53eb\u54c8\u592b\u66fc\u6811\u7684\u4e1c\u897f\u7684\u6a21\u677f\n\n\u5148\u6765\u7b80\u4ecb\u4e00\u4e0b\u54c8\u592b\u66fc\u6811\uff0c\u5148\u6765\u601d\u8003\u4e00\u4e2a\u7b80\u5355\u95ee\u9898\uff0c\u9996\u5148\uff0c\u4f60\u628a\u5408\u5e76\u679c\u5b50\u7684\u8fc7\u7a0b\u6309\u4e0b\u65b9\u6848\u5efa\u6811\uff1a\n\n\u9009\u4e24\u4e2a\u6700\u5c0f\uff0c\u52a0\u8d77\u6765\u653e\u5230\u4e0a\u4e00\u5c42\u505a\u5b83\u7684\u7236\u4eb2\uff08\u5408\u5e76\u4e86\u8fd9\u4e24\u4e2a\u70b9\uff09\uff0c\u76f4\u81f3\u53ea\u5269\u4e00\u4e2a\u6839\n\n![\u6811](https://cdn.luogu.com.cn/upload/image_hosting/m72ezx8m.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6211\u4eec\u53ef\u4ee5\u663e\u7136\u8bc1\u660e\uff0c\u8fd9\u6837\u662f\u6700\u4f18\u7684\uff0c\u7136\u540e\u540c\u7406\uff0c\u5bf9\u4e8e\u5176\u4ed6\u4e1c\u897f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u540c\u6837\u5efa\u6811\u3002\n\n\u6709\u4ec0\u4e48\u7528\uff1f\u53ef\u4ee5A\u4e86\u6b64\u9898\u554a\uff0c\u4f60\u89c2\u5bdf\u4e00\u4e0b\u8fd9\u8bfe\u6811\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u5c31\u662f\u5b83\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u7136\u540e\u64cd\u4f5c\u6b21\u6570\u4e58\u4e0a\u91cd\u91cf\uff0c\u7d2f\u52a0\u5c31\u662f\u7b54\u6848\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e4+8;\nint n,a[N],cnt,ans,g;\nstruct hfmn\n{\n\tint l,r,id,w;\n\tbool operator < (const hfmn a) const \n\t{\n\t\treturn w>a.w;\n\t}\n}p[N];\npriority_queue<hfmn> q;\nvoid hfman() //\u5efa\u6811\n{\n\twhile(q.size()>1)\n\t{\n\t\thfmn a=q.top();\n\t\tq.pop();\n\t\thfmn b=q.top();\n\t\tq.pop();\n\t\thfmn c={a.id,b.id,++cnt,a.w+b.w};\n\t\tq.push(c);\n\t\tp[c.id]=c;\n\t}\n\tg=cnt;\n}\nvoid dfs(int x,int de) //\u67e5\u627e\u6df1\u5ea6\n{\n\tif(!p[x].l&&!p[x].r)\n\t{\n\t\tans+=p[x].w*de;\n\t\treturn ;\n\t} \n\tdfs(p[x].l,de+1);\n\tdfs(p[x].r,de+1);\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) \n\t{\n\t\tscanf(\"%d\",a+i);\n\t\thfmn hf=hfmn{0,0,++cnt,a[i]}; \n\t\tq.push(hf);\n\t\tp[cnt]=hf;\n\t}\n\thfman();\n\tdfs(g,0);\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n\u5f53\u7136\uff0c\u4f60\u4f1a\u53d1\u73b0\u54c8\u592b\u66fc\u6811\u662f\u4e00\u79cd\u5341\u5206\u4f18\u79c0\u7684\u8d2a\u5fc3\u6811\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u8d2a\u5fc3\uff0c\u5178\u578b\u5c31\u662f\u54c8\u592b\u66fc\u7f16\u7801\n\n\u4ec0\u4e48\u662f\u54c8\u592b\u66fc\u7f16\u7801\uff0c\u6211\u4eec\u601d\u8003\uff0c\u4e00\u7bc7\u6587\u7ae0\u4e2d\u201c\u7684\u201d\u7684\u6570\u91cf\u5f88\u591a\uff0c\u800c\u201c\u723f\u201d\u7b49\u751f\u50fb\u5b57\u7684\u6570\u91cf\u5f88\u5c11\uff0c\u4f60\u5bf9\u6bcf\u4e2a\u5b57\u90fd\u5b89\u6392\u540c\u6837\u5185\u5b58\u5b58\u50a8\u6709\u5931\u516c\u5141\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u60f3\u4e00\u79cd\u65b9\u6cd5\uff0c\u6309\u6bcf\u4e2a\u5b57\u7684\u51fa\u73b0\u6982\u7387\u50cf\u4e0a\u8ff0\u65b9\u6cd5\u5efa\u6811\uff0c\u7136\u540e\u6982\u7387\u5927\u7684\u7a7a\u95f4\u5c0f\uff0c\u6982\u7387\u5c0f\u7684\u7a7a\u95f4\u5927\uff0c\u8fd9\u5c31\u662f\u5b83\u7684\u7528\u9014\u3002\n\n\u4f46\u5230\u5e95\u4ec0\u4e48\u662f\u54c8\u592b\u66fc\u7f16\u7801\u5462\uff1f\u4f60\u6309\u4e0a\u8ff0\u89c4\u5219\u5efa\u4e86\u4e00\u68f5\u6811\u540e\uff0c\u4f60\u628a\u505a\u513f\u5b50\u6807\u4e3a0\uff0c\u53f3\u513f\u5b50\u8868\u4f4d1\uff0c\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u5c31\u80fd\u5f97\u5230\u4e00\u4e32\u54c8\u592b\u66fc\u7f16\u7801\n\n\u5982\u4e0a\u56fe\uff1a\n\n1:00\n\n2:01\n\n12:11\n\n\u54c8\u592b\u66fc\u6811\u867d\u7136\u5bf9\u590d\u8d5b\u57fa\u672c\u4e0d\u8003\uff0c\u4f46\u521d\u8d5b\u8fd8\u662f\u6709\u53ef\u80fd\u8981\u6d89\u53ca\u7684\n\n\u6700\u540e\uff0c\u795d\u5404\u7701CSP\u673a\u5b50++",
        "postTime": 1572181689,
        "uid": 11392,
        "name": "shenbear",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "# ~~\u6ed1\u7a3d\u9898\u89e3\u7b2c\u4e8c\u7bc7~~\n#### ~~\u7b2c\u4e00\u7bc7\u9898\u89e3\u5fd8\u8bb0\u5199\u6ed1\u7a3d\u9898\u89e3\u4e86\uff08\u9898\u76ee\u662f\u7ea6\u745f\u592b\u95ee\u9898\uff09\uff0c\u5199\u5f97\u662f\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\u3002~~\n\u94fe\u63a5\uff1a[\u6ed1\u7a3d\u9898\u89e3\u7b2c\u4e00\u7bc7](https://www.luogu.org/blog/mishanghuaji/solution-p1996)\n\n\u5207\u5165\u6b63\u9898\uff0c\u672c\u4f53\u672c\u849f\u84bb\u5c31\u60f3\u5230\u4e86\u4e24\u79cd\u505a\u6cd5\uff1a\u5806\u548c\u6392\u5e8f\n\n\u9996\u5148\u6211\u4eec\u6765\u770b\u6700\u5e38\u89c1\u6700\u5bb9\u6613\u60f3\u7684\u5806\u6392\u5e8f\uff0cstl\u5c31\u597d\u4e86\uff0c~~\u8c01\u624b\u5199\u554a~~\uff08\u6ed1\u7a3d\uff09\u597d\u5427\u597d\u5427\u56de\u5230\u6b63\u9898\uff1a\n\n\u8fd9\u9053\u9898\u628a\u6ca1\u4e00\u4e2a\u70b9\u6254\u5230\u5806\u91cc\u53bb\uff0c\u6700\u540e\u53bb\u5806\u9876\u70b9\uff0c\u5220\u70b9\uff0c\u518d\u53d6\uff0c\u518d\u5220\uff0c\u628a\u4e24\u6b21\u5806\u9876\u503c\u76f8\u52a0\uff0c\u518d\u52a0\u5230\u7b54\u6848\u91cc\u53bb\u5c31\u597d\u4e86\uff0c\u77e5\u9053\u5806\u53ea\u5269\u4e0b\u4e00\u4e2a\u70b9\n\n\n\u534e\u4e3d\u7684\u5206\u5272\u7ebf\uff0c\u9644\u4e0aAC\n------------\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n```cpp\n#include<bits/stdc++.h>\n#include<queue>\nusing namespace std;\npriority_queue<int,vector<int>,greater<int> >q;\nint n;\nint x,ans;\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>x;\n\t\tq.push(x);\n\t}\n\twhile(q.size()>=2)\n\t{\n\t\tint a=q.top();\n\t\tq.pop();\n\t\tint b=q.top();\n\t\tq.pop();\n\t\tans=ans+a+b;\n\t\tq.push(a+b);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n NO.2\u6392\u5e8f\n \n \u6bcf\u6b21sort\u4f1a\u8d85\u65f6\uff01\uff01\uff01\uff01\u6211\u5c31\u8bd5\u9a8c\u8fc7\uff01\uff01\uff01\uff01\n \u6240\u4ee5\u6211\u4eec\u91c7\u7528\u63d2\u5165\u6392\u5e8f\uff0c\u6bcf\u6b21\u6392\u4e00\u904d\uff0c\u7136\u540e\u53d6\u6700\u5c0f\u503c\u5c31\u83ab\u5f97\u95ee\u9898\uff01\n \n \n\u6ed1\u7a3d\uff08\u5443\u5443\uff09\u7684\u5206\u5272\u7ebf\n------------\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint q;\nint cmp(int x,int y)\n{\n\treturn x<y;\n}\nint head=1,tail;\nint ans;\nint a[170000];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d\",&a[i]);\n\ttail=n;\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n-1;i++)\n    {\n        q=a[i]+a[i+1];\n        int j;\n        for(j=i+1;j<=n-1;j++)\n        {\n            a[j]=a[j+1];\n            if(a[j]>q){a[j]=q;break;\n            }\n        }\n        if(j==n)a[n]=q;\n        ans+=q; \n    }\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u5b8c\u4e8b\uff01\n\n\u6c42\u8fc7\u4e86\u8c22\u8c22",
        "postTime": 1568211529,
        "uid": 229919,
        "name": "\u4e00E\u5b64\u884c",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u4ee3\u7801\u4e0d\u957f\uff0c\u4f46\u9700\u8981\u597d\u597d\u7406\u89e3\u3002\n\n\u601d\u8def\uff1a**\u5feb\u6392+\u624b\u5199\u5806**\n\n~~\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u624b\u5199\uff0c\u4f46\u662f\u6211\u61d2~~~\n\n\u5feb\u6392\u76f4\u63a5\u7528STL\uff0c\u4e0d\u8bb2\u3002\n\n\u8bb2\u4e00\u4e0b\u5806\uff1a\n\n\t\u6211\u4eec\u53ef\u4ee5\u628a\u5806\u7406\u89e3\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\n    \n    \u7136\u540e\u8fd9\u91cc\u6211\u4eec\u8981\u7528\u5230\u7684\u662f\u5c0f\u6839\u5806\uff0c\n    \n    \u5373\u7236\u8282\u70b9\u6bd4\u5b50\u8282\u70b9\u7684\u503c\u5927\u3002\n    \n    \u666e\u901a\u7684\u624b\u5199\u5806\u6709\u4e24\u4e2a\u6bd4\u8f83\u5e38\u7528\u7684\u51fd\u6570\uff1adown\u548cins\n    \n    ins\u5c31\u662f\u63d2\u5165\uff0c\u5728\u5efa\u5806\u65f6\u7528\u3002\u8fd9\u91cc\u6211\u7528\u4e86\u5feb\u6392\u5c31\u4e0d\u9700\u8981\u4e86\u3002\n    \n    down\u5c31\u662f\u5f80\u4e0b\u66f4\u65b0\u6570\u503c\uff0c\u7ef4\u62a4\u5806\u3002\n    \n    \n    \n   \u672c\u7bc7\u9898\u89e3\u7528\u5230\u7684down\uff1a\n    \n   down(p)\u8868\u793a\u4ece\u7f16\u53f7\u4e3ap\u7684\u8282\u70b9\u5f80\u4e0b\u66f4\u65b0\uff0c\u4f7f\u5f97\u7236\u8282\u70b9\u5c0f\u4e8e\u5b50\u8282\u70b9\uff0c\u4e0d\u6ee1\u8db3\u5c31swap\uff0c\u800c\u4e14\u8981\u627e**\u6700\u5c0f\u7684**\u8282\u70b9swap\u3002\n   \n   \u7136\u540e\u5c31\u53ef\u4ee5\u4e0a\u4ee3\u7801\u4e86\uff1a\n   \n   ```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,ans;\nint b[10001];\ninline void down(int p){\n\twhile(p*2<=n){\n\t\tint q=p*2;//\u5de6\u5b50\u8282\u70b9\u7f16\u53f7=\u7236\u8282\u70b9\u7f16\u53f7*2\n\t\tif(q+1<=n&&b[q]>b[q+1])q++;//\u53f3\u5b50\u8282\u70b9\u7f16\u53f7=\u5de6\u5b50\u8282\u70b9\u7f16\u53f7+1\n\t\tif(b[q]<b[p]){\n\t\t\tswap(b[q],b[p]);p=q;\n\t\t}\n\t\telse break;\n\t}\n\treturn;\n}\nint main(){\n\tcin>>n;//n\u5c31\u662f\u5806\u7684\u89c4\u6a21\n\tfor(register int i=1;i<=n;i++)cin>>b[i];\n\tsort(b+1,b+n+1);//\u5feb\u6392\n\twhile(n>1){\n\t\tint p1,p2;\n\t\tp1=b[1];\n\t\tb[1]=b[n--];//\u6bcf\u6b21\u5408\u5e76\u4f1a\u5c11\u4e00\u4e2a\u5806\n\t\tdown(1);\n\t\tp2=b[1];\n\t\tans+=p1+p2;\n\t\tb[1]=p1+p2;\n\t\tdown(1);\n\t}\n\tcout<<ans<<endl;\n}\n```\n\n    \n    ",
        "postTime": 1566871925,
        "uid": 114504,
        "name": "\u68a6\u91cc\u8c03\u97f3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "### \u2022\u89e3\u6cd5\u4e00:\n\u8d2a\u5fc3+\u5806\u4f18\u5316\n\n\u6bcf\u6b21\u5408\u5e76\u5b8c\u518d\u628a\u5b83\u6254\u8fdb\u5806\u91cc\uff0c\u8fd9\u6837\u4e0d\u65ad\u91cd\u590d\u5c31\u597d\u4e86\n\n####  \u3010\u4ee3\u7801\u3011\n```cpp\n#include <cstdio>\n#include <queue>\n\nusing namespace std;\n\nconst int M = 10111;\nint n,w[M];\n\npriority_queue <int,vector<int>,greater<int> > Q;\n//\u5c0f\u6839\u5806\n\nint ans;\n\nint main(void)\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&w[i]);\n        Q.push(w[i]);\n        //\u628a\u679c\u5b50\u90fd\u6254\u8fdb\u5806\u91cc\n    }\n    int a,b;\n    for(int i=1;i<n;i++) //\u8fd9\u91cc\u53ea\u5faa\u73af\u5230n-1,why?\n    {\n        a=Q.top();\n        Q.pop();\n        b=Q.top();\n        Q.pop();\n        ans += a+b;\n        Q.push(a+b);\n        //\u5408\u5e76\u5b8c\u518d\u6254\u8fdb\u53bb\n    }\n    \n    printf(\"%d\",ans);\n    return 0;\n}\n```\n### \u00b7\u89e3\u6cd5\u4e8c\uff1a\n\u53cc\u961f\u5217\n```cpp\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nconst int M = 30001;\nconst int N = 20001;\nint n,ans,que1[M],que2[M];\nint k,i1=1,j1=1,Min;\nint T[N],cnt;\n\ninline int read() {\n\tregister int ret;register bool flag=0;register char c;\n\twhile((c=getchar())<'0'||c>'9') flag^=!(c^48);ret=c^48;\n\twhile((c=getchar())>='0'&&c<='9') ret=(ret<<3)+(ret<<1)+(c^48);\n\treturn flag?-ret:ret;\n}\n// \u5feb\u8bfb\n\nint main(void) {\n\tmemset(que1,127/3,sizeof(que1));\n\tmemset(que2,127/3,sizeof(que2));\n\tn = read();\n\tfor(register int i = 1;i <= n; i++) {\n\t\tint x = read();\n\t\tT[x]++;\n\t}\n\t//\u6876\u6392\u5e8f\n\tfor(register int i = 1;i <= 20000; i++) {\n\t\twhile(T[i]) {\n\t\t\tT[i]--;\n\t\t\tque1[++k] = i;\n\t\t}\n\t}\n\tk = 0;\n\tcnt = 1;\n    //\u60f3\u60f3\u4e3a\u4ec0\u4e48cnt\u521d\u59cb\u503c\u662f1\n    //\u4ee5\u4e0b\u662f\u53cc\u961f\u5217\u7684\u64cd\u4f5c\n\twhile(cnt < n)\n\t{\n\t\tif(que1[i1] < que2[j1]) {\n\t\t\tMin = que1[i1];\n\t\t\ti1++;\n\t\t}\n\t\telse {\n\t\t\tMin = que2[j1];\n\t\t\tj1++; \n\t\t}\n\t\t//\u7b2c\u4e00\u6b21\u5728\u4e24\u4e2a\u961f\u5217\u91cc\u627e\u4e2a\u6700\u5c0f\u7684\n        \n\t\tif(que1[i1] < que2[j1]) {\n\t\t\tMin += que1[i1];\n\t\t\ti1++;\n\t\t}\n\t\telse {\n\t\t\tMin += que2[j1];\n\t\t\tj1++;\n\t\t}\n\t\t//\u518d\u627e\u4e2a\u6700\u5c0f\u7684\n        //\u56e0\u4e3aque1\u662f\u5355\u8c03\u9012\u589e\u7684\u6240\u4ee5Min\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\n        \n\t\tque2[++k] = Min;\n        //\u627e\u51fa\u7684Min\u53ef\u76f4\u63a5\u653e\u5728\u961f\u5c3e\uff0c\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\n\t\tcnt++;\n\t\tans += Min;\n\t}\n\t\n\tprintf(\"%d\",ans);\n\tputs(\"\");\n\treturn 0;\n}\n```\n\n### \u7b54\u6848\uff1a\n1.\u4e00\u5171\u8981\u5faa\u73af$n -1$\u6b21\uff0c\u8fdb\u884c$n-1$\u6b21\u5408\u5e76\u4e5f\u53ef\u5199\u6210for(int i=1;i<n;i++)\n\n2.que1\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6240\u4ee5\u540e\u7b97\u51fa\u7684\u503c\u4e00\u5b9a\u6bd4\u524d\u9762\u7684\u5927\uff0c\u524d\u9762\u7b97\u7684\u662f\u5f53\u65f6\u7684\u6700\u5c0f\u503c",
        "postTime": 1541078365,
        "uid": 75093,
        "name": "Awdrgysxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "# \u7ec8\u4e8e\u809d\u8fc7\u6700\u5c0f\u5806\u60f9\uff01\n\n\u849f\u84bb\u8868\u793a\uff0c\u4e00\u5f00\u59cb\u6211\u771f\u7684\u4ee5\u4e3a\u8fd9\u5c31\u662f\u666e\u901a\u7684\u8d2a\u5fc3+\u6392\u5e8f\uff0c\u5f88\u5f00\u5fc3\u7684\u6bcf\u5408\u5e76\u4e00\u6b21\u6392\u5e8f\u4e00\u6b21\uff0c\u7ed3\u679ctle\u4e869\u4e2a\u70b9\u3002\u3002\u3002\n\n\u987a\u4fbf\u4e00\u63d0\uff0c\u5e94\u8be5\u5f88\u660e\u663e\uff0c\u6bcf\u6b21\u9700\u8981\u5408\u5e76n-1\u6b21\u679c\u5b50\u3002\n\n### \u9519\u8bef\u793a\u8303\n\n    \n\n```cpp\n    #define maxn 101000\n    int ans=0,i,a[maxn],n;\n    int r=1,h,q[maxn];\n    int main(){\n        scanf(\"%d\",&n);\n        for (i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n        sort(a+1,a+n+1);\n        while (r<n) {\n            h=r;\n            while (a[h]>a[h+1]) {\n                swap(a[h],a[h+1]);\n                h++;\n            }\n            a[r+1]=a[r]+a[r+1];\n            r++; \n            ans+=a[r];\n        }\n        printf(\"%d\",ans);\n    }\n```\n\u4e4b\u540e\u4e86\u89e3\u4e86\u4e00\u4e0bSTL\u5e93\u540e\uff0c\u4f7f\u7528\u4e86STL\u5e93\u91cc\u7684\u4f18\u5148\u961f\u5217\uff0c92ms\u3002\n### \u4f18\u5148\u961f\u5217AC\u4ee3\u7801\n\n    \n```cpp\n    #include<bits/stdc++.h>\n        using namespace std;\n        priority_queue<int,vector<int>,greater<int> > q;//\u5b9a\u4e49\u4e00\u4e2a\u4f18\u5148\u4e3a\u5c0f\u7684\u4f18\u5148\u961f\u5217 \n        int n,ans=0,jl=0;                                //\u9700\u8981\u7528\u5230queue\u5e93 \n        inline int read(){//\u8bfb\u5165\u4f18\u5316 \n            int X=0,w=0; \n            char ch=0;\n            while(!isdigit(ch)) {w|=ch=='-';ch=getchar();}\n            while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n            return w?-X:X;\n        }\n        int main(){\n            n=read();\n            for (int i=1;i<=n;i++) {\n                int a;\n                a=read();\n                q.push(a);//\u5165\u961f\u64cd\u4f5c \n            }\n            for (jl=n-1;jl;jl--) {//\u5408\u5e76n-1\u6b21 \n                int a,b;\n                a=q.top();//\u83b7\u5f97\u4f18\u5148\u5ea6\u6700\u9ad8\u7684\u5143\u7d20\uff08\u8fd9\u91cc\u662f\u6700\u5c0f\uff09 \n                q.pop();//\u5c06\u4f18\u5148\u5ea6\u6700\u9ad8\u7684\u5143\u7d20\u51fa\u961f \n                b=q.top();\n                q.pop();\n                ans+=(a+b);//\u4f53\u529b\u8017\u8d39 \n                q.push(a+b);//\u5c06\u5408\u5e76\u540e\u7684\u679c\u5b50\u5165\u961f \n            }\n            printf(\"%d\",ans);\n        } \n```\n\u867d\u7136\u5df2\u7ecfAC\u4e86\uff0c\u4f46\u662f\u8fd8\u60f3\u518d\u5feb\u4e00\u70b9\uff0c\u4e8e\u662f\u5c31\u7528\u4e86\u5c0f\u6839\u5806\uff0c32ms\uff0c\u6548\u7387up\n### \u5c0f\u6839\u5806AC\u4ee3\u7801\n\n```cpp\n    #include<bits/stdc++.h>\n    using namespace std;\n    #define maxn 2002000\n    int heap[maxn],n,ans=0;//heap\u662f\u5806 \n    inline int read(){//\u8bfb\u5165\u4f18\u5316 \n        int X=0,w=0; \n        char ch=0;\n        while(!isdigit(ch)) {w|=ch=='-';ch=getchar();}\n        while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n        return w?-X:X;\n    }\n    void siftdown(int l,int r) {//\u5411\u4e0b\u8c03\u6574 \n        int i=l,j=2*i;\n        heap[0]=heap[i];//heap[0]\u4e34\u65f6\u50a8\u5b58heap[i]\u4e2d\u7684\u503c \n        while (j<=r) {\n            //\u6709\u53f3\u513f\u5b50\u4e14\u53f3\u513f\u5b50\u66f4\u5c0f\u65f6 \n            if (j<r&&heap[j]>heap[j+1]) j++;\n            //\u5982\u679c\u5df2\u7ecf\u8c03\u6574\u597d \n            if (heap[0]<=heap[j]) break;\n            else {\n                //\u7ee7\u7eed\u5f80\u4e0b\u8c03\u6574 \n                heap[i]=heap[j];\n                i=j;\n                j*=2;\n            }\n        }\n        heap[i]=heap[0];\n    }\n    void createheap() {//\u5efa\u5c0f\u6839\u5806 \n        memset(heap,0,sizeof(heap));\n        for (int i=1;i<=n;i++) heap[i]=read();//\u8d4b\u521d\u503c \n        int m=n/2;//m\u662f\u6700\u540e\u4e00\u4e2a\u7236\u7ed3\u70b9 \n        while (m>0) {\n            siftdown(m,n);//\u5f80\u4e0b\u8c03\u6574 \n            m--;\n        }\n    }\n    void siftup(int l) {//\u5411\u4e0a\u8c03\u6574 \n        int j=l,i=j/2;\n        heap[0]=heap[j];//heap[0]\u4e34\u65f6\u50a8\u5b58heap[j]\u4e2d\u7684\u503c \n        while (j>0) {\n            //\u5982\u679c\u5df2\u7ecf\u8c03\u6574\u597d \n            if (heap[j]<=heap[0]) break;\n            else {\n                //\u7ee7\u7eed\u5f80\u4e0a\u8c03\u6574 \n                heap[j]=heap[i];\n                j=i;\n                i=i/2;\n            }\n        }\n        heap[j]=heap[0];\n    } \n    void insert(int x) {//\u6dfb\u52a0\u5143\u7d20 \n        heap[++n]=x;\n        siftup(n);\n    }\n    void demin() {//\u5220\u9664\u6700\u5c0f\u5143\u7d20\uff08\u5373\u5806\u9876\uff09 \n        heap[1]=heap[n--];\n        siftdown(1,n); \n    }\n    int main(){\n        n=read();\n        createheap();//\u5efa\u5806 \n        for (int jl=n-1;jl;jl--) {//\u5408\u5e76\u679c\u5b50 \n            int a=heap[1];//\u5c06\u6700\u5c0f\u7684\u4e24\u4e2a\u9009\u51fa\u6765 \n            demin();\n            int b=heap[1];\n            demin();\n            ans+=(a+b);//\u8017\u8d39\u4f53\u529b \n            insert(a+b);//\u5c06\u8fd9\u4e24\u9879\u5408\u5e76\u540e\u63d2\u5165\u5806\u4e2d \n        }\n        printf(\"%d\",ans);\n}\n```",
        "postTime": 1515991669,
        "uid": 78752,
        "name": "lolte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u6bcf\u6b21\u5148\u96c6\u5408\u61d2\u6563\u503c\u6700\u5c0f\u7684\u4e24\u4e2a\u7fa4\uff0c\u6240\u8017\u8d39\u7684\u4f53\u529b\u6700\u5c0f\uff0c\u4e00\u822c\u901a\u8fc7\u5feb\u6392+\u4e8c\u5206\u6392\u5e8f\u5373\u53ef\u89e3\u51b3\uff0c\u4f46\u6b64\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\u6cd5\uff0c\u5176\u57fa\u672c\u601d\u60f3\u662f\u8bbe\u7f6e\u82e5\u5e72\u4e2a\u7bb1\u5b50\uff0c\u4f9d\u6b21\u626b\u63cf\u5f85\u6392\u5e8f\u7684\u6570\uff0c\u5c06\u5173\u952e\u5b57=K\u7684\u8bb0\u5f55\u5168\u88c5\u5165\u7b2cK\u4e2a\u7bb1\u5b50\uff08\u5206\u914d\uff09\uff0c\u7136\u540e\u6309\u5e8f\u53f7\u4f9d\u6b21\u5c06\u5404\u975e\u7a7a\u7bb1\u5b50\u9996\u5c3e\u8fde\u63a5\u8d77\u6765\uff08\u6536\u96c6\uff09\u3002\n\n\u5148\u5b9a\u4e49\u4e00\u4e2a\u4e0b\u6807\u4ece1~20000\u7684\u6574\u578b\u6570\u7ec4number[]\uff0c\u6570\u7ec4\u76f8\u5e94\u4e0b\u6807\u5143\u7d20\u5b58\u653e\u5bf9\u5e94\u503c\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u5408\u5e76\u65f6\uff0c\u5982\u5408\u5e76\u7684\u503cX\u4e0d\u8d85\u8fc720000\uff0c\u5219number[X]++\uff0c\u5373\u4e2a\u6570\u52a01\uff0c\u5982\u679c\u8d85\u8fc720000\uff0c\u5219\u987a\u5e8f\u5b58\u5165BigNumber[]\u4e2d\uff0c\u4f4d\u7f6e\u7531BigNumber[0]\u51b3\u5b9a\u3002\u7136\u540e\u91c7\u53d6\u8d2a\u5fc3\u6cd5\uff0c\u4f9d\u6b21\u627e\u6700\u5c0f\u7684\u4e24\u4e2a\u503c\uff0c\u800c\u4e14\u4e24\u6570\u7ec4\u5df2\u4f9d\u6b21\u6392\u597d\u5927\u5c0f\uff0c\u6240\u4ee5\u76f4\u63a5\u987a\u5e8f\u53d6\u503c\u5373\u53ef\uff0c\u65e0\u9700\u6392\u5e8f\u3002\n\n\n\n    \n\n\n\n```cpp\n[color=red]\n#include <stdio.h>\n#include <string.h>\n#include <iostream>\n#include <stdlib.h>\nusing namespace std;\nint number[20000+1];//\u5b58\u653e\u4e0b\u6807\u5bf9\u5e94\u503c\u7684\u6570\u7684\u4e2a\u6570 \nint BigNumber[15000+1];//\u987a\u5e8f\u5b58\u653e\u5927\u4e8e2\u4e07\u7684\u7fa4\u6570\u636e \nint n;//\u4e3a\u4eba\u6570 \nint power;//\u6d88\u8017\u4f53\u529b\u503c \nvoid solve()\n{\n  int i,p,q;\n  long total=0;\n  p=1;//\u5b58\u653enumber\u6570\u7ec4\u6ca1\u5408\u5e76\u524d\u7684\u6700\u5c0f\u6307\u9488\u6570 \n  q=1;//\u5b58\u653eBigNumber\u6570\u7ec4\u6ca1\u5408\u5e76\u524d\u7684\u6700\u5c0f\u6307\u9488\u6570 \n  i=0;//\u5b58\u653e\u6bcf\u6b21\u5408\u5e76\u65f6\u5df2\u5408\u5e76\u7684\u7fa4\u6570 \n  while(n>1)//\u5982\u8fd8\u6ca1\u5408\u5e76\u5b8c\uff0c\u5219\u7ee7\u7eed\u5408\u5e76 \n  {\n    if(p<=20000)//\u5982\u6709\u4e2a\u6570\u5c0f\u4e8e2\u4e07\u7684\u7fa4\u6ca1\u6709\u5408\u5e76 \n    {\n      if(number[p]>0)//\u5982\u679cnumber\u4e0b\u6807\u5bf9\u5e94\u7fa4\u5b58\u5728\uff0c\u5219\u5408\u5e76 \n      {\n        i++;\n        total+=p;\n        number[p]--;\n      }\n      else\n        p++;//\u6ca1\u6709\u4e2a\u6570\u4e3ap\u7684\u503c\u5219\u5f80\u4e0b\u627e \n    }\n    else//\u6240\u6709\u7fa4\u7684\u4e2a\u6570\u90fd\u5927\u4e8e2\u4e07\uff0c\u5219\u987a\u5e8f\u4ecenumber\u6570\u636e\u4e2d\u53d6\u51fa\u7fa4\u5408\u5e76 \n    {\n      i++;\n      total+=BigNumber[q];\n      q++;\n    }\n    if((total<=20000)&&(i==2))//\u4e00\u6b21\u5408\u5e76\u540e\uff08i=2)\uff0c\u4e14\u5408\u5e76\u540e\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc72\u4e07 \n    {\n      number[total]++;//\u5c06\u5408\u5e76\u7684\u503c\u4e2a\u6570\u653e\u5165\u5c0f\u6570\u7ec4\u4e2d \n      n--;\n      i=0;\n      power+=total;\n      total=0;\n    }\n    else\n      if(i==2)//\u4e00\u6b21\u5408\u5e76\u5b8c\uff0c\u4e14\u5408\u5e76\u540e\u7684\u4e2a\u6570\u5927\u4e8e2\u4e07 \n      {\n        BigNumber[0]++;//\u54e8\u5175\uff0c\u8868\u793a\u4e0b\u4e00\u6b21\u53d6\u503c\u4ece\u5927\u6570\u7ec4\u7684\u4f55\u4f4d\u7f6e\u53d6 \n        BigNumber[BigNumber[0]]=total;//\u5b58\u5165\u5927\u6570\u7ec4 \n        n--;\n        power+=total;\n        i=0;\n        total=0;\n      }\n  }\n  printf(\"%d\\n\",power);\n}\nvoid init()\n{\n  int i,k;\n  scanf(\"%d\",&n);\n  for(i=1;i<=n;i++)\n  {\n    scanf(\"%d\",&k);\n    number[k]++;\n  }\n}\nint main()\n{\n  power=0;\n  init();//\u5904\u7406\u8f93\u5165\u6570\u636e \n  solve();\n  return 0;\n}\n\n```",
        "postTime": 1464409129,
        "uid": 15214,
        "name": "Juliet",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\uff0c\u76f4\u63a5\u6392\u5e8f\n\n\u5408\u5e76\u7684\u65f6\u5019\u4e0d\u65ad\u66f4\u65b0\u6570\u7ec4\u7684\u524d\u4e09\u4e2a\u6570\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u4ece\u524d\u4e24\u4e2a\u6700\u5c0f\u7684\u6570\u548c\u5df2\u7ecf\u5408\u5e76\u7684\u6570\u5f53\u4e2d\u9009\u51fa\u6700\u5c0f\u7684\u548c\u6b21\u5c0f\u7684\u6570\u5408\u5e76\n\n\uff08\u4e0d\u80fd\u6bcf\u6b21\u90fd\u53bb\u6392\u4e00\u4e0b\u5e8f\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\uff09\n\n```delphi\nvar\n  a:array[1..10100] of longint;\n  l,i,j,k,n,sum,t:longint;\nbegin\n  sum:=0;\n  read(n);\n  for i:=1 to n do read(a[i]);\n  for i:=0 to n-1 do//\u5408\u5e76n-1\u6b21\n    begin\n      for l:=1 to 2 do\n        begin\n          for j:=l+1 to n-i do\n            begin\n              if a[l]>a[j] then\n                begin\n                  t:=a[l];\n                  a[l]:=a[j];\n                  a[j]:=t;\n                end;\n            end;\n        end;//\u5bf9\u524d\u4e09\u4e2a\u6570\u8fdb\u884c\u6392\u5e8f\n      a[1]:=a[1]+a[2];//\u5408\u5e76\u6700\u5c0f\u548c\u6b21\u5c0f\u7684\u6570\n      a[2]:=a[n-i];\n      a[n-i]:=0;//\u5c06\u961f\u5217\u7f29\u77ed\uff0c\u4e0d\u65ad\u7684\u5408\u5e76\u548c\u66f4\u65b0\n      sum:=sum+a[1];\n    end;\n  write(sum);\nend.\n```",
        "postTime": 1446430616,
        "uid": 5938,
        "name": "\u5c0f\u9ed1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u4e0d\u9700\u8981\u4ec0\u4e48\u590d\u6742\u7684\u7b97\u6cd5\uff0c\u53ea\u8981\u6bcf\u6b21\u628a\u6240\u6709\u6700\u5c0f\u7684\u4e24\u5806\u679c\u5b50\u91cd\u91cf\u52a0\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include <iostream>  \n#include <algorithm>  \nusing namespace std;  \nint main()  \n{  \nint a,js=0,min1,min2; cin >>a; int b[a+1]; b[a]=100000000; min1=a; min2=a;  \nfor (int q=0;q<=a-1;q++)scanf(\"%d\",&b[q]);    \nfor (int q=1;q<=a-1;q++)  \n{  \nfor (int c=0;c<=a-1;c++)if (b[c]==-1)continue; else if (b[c]<b[min1]) {min2=min1; min1=c;}  \nelse if (b[c]<b[min2])min2=c;  \njs+=b[min1]+b[min2]; b[min1]+=b[min2]; b[min2]=-1; min1=a;min2=a;   \n}  \ncout <<js;  \nreturn 0;  \n}  \n```",
        "postTime": 1380286403,
        "uid": 262,
        "name": "\u8c01\u61c2\u8c01\u4f24\u5fc3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u9898\u89e3\u6cd5\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u6211\u6765\u7528\u4e0d\u540c\u7684\u7b97\u6cd5\u505a\u5b9e\u9a8c\uff0c\u6bd4\u6bd4\u54ea\u79cd\u5feb\n\n#\u89e3\u6cd51\uff1a\u9009\u62e9\u6392\u5e8f\n\n\u8fd9\u5e94\u8be5\u7b97\u662f\u6700\u6734\u7d20\u7684\u505a\u6cd5\u4e86\uff0c\u6bcf\u6b21\u9009\u51fa\u6700\u5c11\u7684\u4e24\u5806\u679c\u5b50\u5408\u5e76\u3002\u65f6\u95f4\u590d\u6742\u5ea6[color=red]**O(n^2)**[/color]\uff0c\u65e0\u9700\u8f85\u52a9\u7a7a\u95f4\u3002\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u4e5f\u53ef\u4ee5\u6bcf\u6b21\u505a\u4e24\u8d9f\u5192\u6ce1\u6392\u5e8f\u3002\n\n\u6b64\u7b97\u6cd5\u5bb9\u6613\u60f3\u5230\uff0c\u4ee3\u7801\u7b80\u5355\uff0c\u867d\u7136\u6548\u7387\u4e0d\u9ad8\uff0c\u4f46\u662f\u53ef\u4ee5AC\u3002\uff08\u4e0d\u8fc7\u4e0d\u4fdd\u8bc1\u5f53\u65f6\u53ef\u4ee5AC\uff0c\u56e0\u4e3a2004\u5e74\u7684\u8bc4\u6d4b\u673a\u3002\u3002\uff09\n\n```cpp\n\n#include<cstdio>\nint a[10010],n,t;\nlong long ans;\nint main(){\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    ans=0;\n    for (int i=1;i<=n-1;i++){\n        for (int j=i;j<=i+1;j++)\n            for (int k=j+1;k<=n;k++)\n                if (a[j]>a[k]){\n                    t=a[j];\n                    a[j]=a[k];\n                    a[k]=t;\n                }\n        a[i+1]=a[i]+a[i+1];\n        ans=(long long)a[i+1]+ans;\n    }\n    printf(\"%lld\\n\",ans);\n}\n\n```\n[color=red]**\u8017\u65f6949ms**[/color]\n\n#\u89e3\u6cd52\uff1anth\\_element\n\n\u7531\u4e8estd::sort\u6bd4\u624b\u6253\u7684\u5feb\u6392\u8981\u5feb\uff0c\u800c\u4e14\u7a33\u5b9a\uff0c\u6240\u4ee5\u6211\u4e0d\u7981\u8054\u60f3\uff1a\u4f7f\u7528STL\u4e2d\u7684nth\\_element\u662f\u4e0d\u662f\u4f1a\u6bd4\u89e3\u6cd51\u5feb\u4e00\u70b9\u5462\uff1f\n\n\u7ed3\u679c[color=red]**TLE**[/color]\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\n\n#\u89e3\u6cd53\uff1a\u5806\n\n\u8c8c\u4f3c\u5806\u6392\u662f\u6807\u51c6\u89e3\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6[color=red]**O(nlogn)**[/color]\uff0c\u4f46\u662f\u4ee3\u7801\u590d\u6742\u5ea6\u7565\u9ad8\u3002\n\n\u6211\u770b\u4e86\u4e0b\uff0cJOHNKRAM\u8c8c\u4f3c\u662f\u7528\u5806\u5199\u7684\uff0c[color=red]**30ms**[/color]\n\n\u6211\u81f3\u4eca\u4e0d\u4f1a\u5806\u3002\u3002\u3002\n\n#[color=red]**\u89e3\u6cd54\uff1a\u5feb\u6392+\u5355\u8c03\u961f\u5217**[/color]\n\n\u4e3a\u4e86\u5feb\u901f&\u7b80\u6d01\uff0c\u6240\u4ee5\u5feb\u6392\u76f4\u63a5\u8c03\u7528std::sort\u3002\u5047\u8bbe\u6570\u636e\u7528\u6570\u7ec4a\u5b58\u50a8\uff0c\u518d\u65b0\u5efa\u6570\u7ec4b\u3002\n\n\u5206\u522b\u7528\u4e24\u4e2a\u6307\u9488\u6307\u5411\u4e24\u4e2a\u961f\u5217\u7684\u961f\u9996\u548c\u961f\u5c3e(p,q\u6307\u5411a\uff1br,s\u6307\u5411b)\u3002\u7531\u4e8ea,b\u90fd\u662f\u5355\u8c03\u961f\u5217\uff0c\u6240\u4ee5\u6700\u5c11\u7684\u4e24\u5806\u679c\u5b50\u67093\u79cd\u60c5\u51b5\uff1a1.a[p]\u548ca[p+1]\uff1b2.a[p]\u548cb[r]\uff1b3.b[r]\u548cb[r+1]\n\n\u5408\u5e76\u5b83\u4eec\uff0c\u5e76\u63d2\u5230b\u7684\u961f\u5c3e\uff0c\u5faa\u73af\u505an-1\u6b21\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5feb\u6392O(nlogn)\uff0c\u5355\u8c03\u961f\u5217O(n)\uff0c\u52a0\u8d77\u6765\u8fd8\u662f[color=red]**O(nlogn)**[/color]\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u9700\u8981O(n)\u7684\u8f85\u52a9\u7a7a\u95f4\n\n\u4ee3\u7801\u590d\u6742\u5ea6\uff1a\u8f83\u4f4e\uff0c\u53ea\u67090.6K\n\n\u5b9e\u6d4b[color=red]**0ms**[/color]\u79d2\u8fc7\uff0c\u77ac\u95f4rank1\n\n```cpp\n\n#include<cstdio>\n#include<algorithm>\nint a[10010],b[10010],n,t,p,q,r,s,k;\nlong long ans;\nint main(){\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    ans=0;\n    std::sort(a+1,a+n+1);\n    p=1;\n    q=n;\n    r=1;\n    s=0;\n    for (int i=1;i<n;i++){\n        t=2100000000;\n        if (q>p){\n            t=a[p]+a[p+1];\n            k=1;\n        }\n        if (q>=p && s>=r && a[p]+b[r]<t){\n            t=a[p]+b[r];\n            k=2;\n        }\n        if (s>r && b[r]+b[r+1]<t){\n            t=b[r]+b[r+1];\n            k=3;\n        }\n        ans=(long long)t+ans;\n        if (k==1) p+=2;\n        if (k==2){\n            p++;\n            r++;\n        }\n        if (k==3) r+=2;\n        s++;\n        b[s]=t;\n    }    \n    printf(\"%lld\\n\",ans);\n}\n\n```",
        "postTime": 1376211846,
        "uid": 206,
        "name": "courage",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u770b\u5230\u5927\u4f6c\u90fd\u662f\u7528\u4f18\u5148\u961f\u5217\u3002\u3002~~\u56e0\u4e3a\u4e0d\u4f1a\u7528\u4f18\u5148\u961f\u5217~~\uff0c\u8fd9\u91cc\u7528\u4e86multiset\uff08~~\u5f00\u59cb\u5fd8\u4e86set\u4e0d\u80fd\u6709\u91cd\u590d\u5143\u7d20WA\u4e86\u534a\u5c0f\u65f6\u624d\u60f3\u8d77\u6765~~\uff09 \n\n\u6c34\u9898\uff0c\u8f7b\u677e\u8fc7\uff0c\u6bcf\u6b21\u9009\u62e9\u6700\u5c0f\u7684\u4e24\u5806\u679c\u5b50\u5408\u5e76\u5c31\u53ef\u4ee5\u4e86\uff0c\u8d2a\u5fc3\u5373\u53ef\u65e0\u9700DP\n\nmultiset\u4e0eset\u7684\u533a\u522b\u5728\u4e8emultiset**\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20**\n\n\u4f8b\u5982\n```cpp\n#include<set>\n#include<iostream>\nusing namespace std;\nint main()\n{\nset<int>tests;\nmultiset<int>testm;\ntests.insert(1);\ntests.insert(1);\ntestm.insert(1);\ntestm.insert(1);\ncout<<tests.size()<<endl;\ncout<<testm.size()<<endl;\n}\n```\n\n\u8f93\u51fa\u7ed3\u679c\u4e3a\n```cpp\n1\n2\n```\n\n\u56e0\u4e3aset\u4e2d\u4e0d\u80fd\u5305\u542b\u76f8\u540c\u7684\u5143\u7d20\uff0c\u800cmultiset\u53ef\u4ee5\n\n\uff08\u4e0e\u6b64\u7c7b\u4f3c\u7684\u8fd8\u6709map\u548cmultimap\uff0cmultimap\u53ef\u4ee5\u6709\u91cd\u590d\u7684\u952e\u503c\uff0c\u4e0d\u8fc7\u505a\u9898\u5e94\u8be5\u57fa\u672c\u7528\u4e0d\u5230multimap\uff09\n\nAC\u4ee3\u7801\n```cpp\ninclude <iostream>\ninclude <algorithm>\ninclude <set>\nusing namespace std;\nint main() \n{ \nint n;\ncin >> n; \nmultiset<int>s;\nfor (int i = 0; i < n; i++) \n{ \nint t;\ncin >> t;\ns.insert(t);\n} \nint ans = 0; \nwhile (s.size() != 1)\n{\nans += *(s.begin()); \n//\u5c06\u6700\u5c0f\u7684\u4e24\u5806\u5408\u5e76\uff0c\u6d88\u8017\u7684\u529b\u6c14\u589e\u52a0\u4e24\u5806\u679c\u5b50\u6570\u91cf\u7684\u603b\u548c\nint t = *(s.begin());\ns.erase(s.begin());\n//\u4ece\u96c6\u5408\u4e2d\u5220\u53bb\u88ab\u5408\u5e76\u7684\u4e24\u5806\nans += *(s.begin()); \n//\u5c06\u6700\u5c0f\u7684\u4e24\u5806\u5408\u5e76\uff0c\u6d88\u8017\u7684\u529b\u6c14\u589e\u52a0\u4e24\u5806\u679c\u5b50\u6570\u91cf\u7684\u603b\u548c\nt += *(s.begin()); \ns.erase(s.begin());\n//\u4ece\u96c6\u5408\u4e2d\u5220\u53bb\u88ab\u5408\u5e76\u7684\u4e24\u5806\ns.insert(t);\n//\u5c06\u5408\u5e76\u51fa\u7684\u679c\u5806\u52a0\u5165\u96c6\u5408\n} \ncout << ans << endl; \n//\u8f93\u51fa\u7ed3\u679c\n}\n```",
        "postTime": 1568872777,
        "uid": 205228,
        "name": "thjkhdf12",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P1090\u3011\u5408\u5e76\u679c\u5b50"
    },
    {
        "content": "## \u8fd9\u9898\u5176\u5b9e\u662f$Huffman-tree$\u6a21\u677f\n\n\u5148\u770b\u8fd9\u4e1c\u897f\u7684\u662f\u5565\uff1a\n\n\u81ea\u6211\u7406\u89e3\uff0c$Huffman$\u6811\uff0c\u53c8\u79f0\u6700\u4f18\u4e8c\u53c9\u6811\uff0c\u662f\u6307\u5b9a$n$\u4e2a\u8282\u70b9\u4e3a\u53f6\u8282\u70b9\u6240\u7ec4\u6210\u7684\u4e8c\u53c9\u6811\u4e2d\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u548c\u6700\u5c0f\u7684\u4e00\u68f5\u6811\u3002\n\n\u5982\u679c\u60a8\u6ca1\u5b66\u8fc7\u8fd9\u4e2a\u4e1c\u897f\uff0c\u80af\u5b9a\u662f\u4e00\u7247\u61f5\u903c\uff08~~\u5927\u4f6c\u8bf7\u7ed5\u9053~~\uff09\uff0c\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u6765\u4e00\u4e00\u89e3\u91ca\u4e00\u4e0b\u3002\n\n\u9996\u5148\uff1a\u201c\u5b9a$n$\u4e2a\u8282\u70b9\u4e3a\u53f6\u8282\u70b9\u6240\u7ec4\u6210\u7684\u4e8c\u53c9\u6811\u201d\uff0c\u8fd9\u4e2a\u90e8\u5206\u5f88\u597d\u7406\u89e3\uff0c\u7b49\u540c\u4e8e\u8fd9\u68f5\u4e8c\u53c9\u6811\u7684\u53f6\u8282\u70b9\u662f\u8fd9$n$\u4e2a\u70b9\uff0c\u5982\u4e0b\u56fe:\n\n![](https://img-blog.csdn.net/20180805111237725?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NTE5MDQx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u6307\u5b9a$3$\u548c$5$\u4e3a\u53f6\u8282\u70b9\uff0c\u6240\u5f97\u5230\u7684\u4e8c\u53c9\u6811\u53ea\u6709\u8fd9\u4e00\u79cd\u65b9\u6848\u3002\n\n\u7136\u540e\u770b\u201c\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u548c\u6700\u5c0f\u201d\uff0c\u8fd9\u53e5\u8bdd\u6bd4\u8f83\u96be\u7406\u89e3\uff0c\u5148\u6765\u770b\u5e26\u6743\u8def\u5f84\uff1a\n\n\u6240\u8c13\u5e26\u6743\u8def\u5f84\u957f\u5ea6\uff0c\u5c31\u662f\u6307\u67d0\u4e00\u4e2a$\\color{red}{\\text{\u53f6\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6}\\times\\text{\u5b83\u81ea\u8eab\u7684\u70b9\u6743}}$\n\n\u6bd4\u5982\u8fd9\u68f5\u6811\uff1a\n\n![](https://pic002.cnblogs.com/images/2011/348136/2011112215092754.jpg)\n\n$5$\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u5c31\u7b49\u4e8e$5\\times3=15$\n\n\u800c\u6240\u8c13\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u548c\u5c31\u662f\u6240\u6709\u53f6\u8282\u70b9\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\u3002\u4e0a\u9762\u90a3\u68f5\u6811\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u548c\u5c31\u7b49\u4e8e$5\\times3+43\\times3=144$\n\n\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u6784\u5efa\u8fd9\u6837\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u4f7f\u5b83\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u548c\u6700\u5c0f\u3002\n\n\u6784\u5efa\u65b9\u6cd5\u5b9e\u9645\u4e0a\u662f\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u6743\u503c\u8d8a\u5927\u7684\u8282\u70b9\u79bb\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u8d8a\u5c0f\u3002\u6bcf\u6b21\u9009\u51fa\u53f6\u8282\u70b9\u96c6\u5408\u4e2d\u70b9\u6743\u6700\u5c0f\u4e14\u6ca1\u88ab\u9009\u8fc7\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u628a\u5b83\u4eec\u7684\u7236\u4eb2\u90fd\u6307\u5411\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u8fd9\u4e2a\u65b0\u8282\u70b9\u7684\u6743\u503c\u4e3a\u88ab\u9009\u7684\u4e24\u4e2a\u8282\u70b9\u6743\u503c\u4e4b\u548c\uff0c\u5982\u6b64\u5faa\u73af\uff0c\u77e5\u9053\u539f\u96c6\u5408\u4e2d\u53ea\u5269\u4e00\u4e2a\u6839\u8282\u70b9\u3002\n\n\u8fd9\u4e48\u8bf4\u6709\u70b9~~\u65e0\u6bd4~~\u62bd\u8c61\uff0c\u4e0a\u56fe\u7406\u89e3\u4e00\u4e0b\uff1a\n\n\u8bbe\u53f6\u7ed3\u70b9\u7684\u7f16\u53f7\u4e3a$A,B,C,D,E,F,G$\uff0c\u5bf9\u5e94\u7684\u6743\u503c\u5206\u522b\u4e3a:$60,45,13,69,14,5,3$\n\n\u5148\u53d6\u51fa\u6743\u804c\u505a\u5c0f\u76845\u548c3\uff0c\u4ed6\u4eec\u7684\u7236\u8282\u70b9\u8fde\u5230\u65b0\u8282\u70b98\uff0c\u6811\u53d8\u6210\u4e86\uff1a\n\n![](https://img-blog.csdn.net/20180805111237725?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NTE5MDQx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n~~\u597d\u628a\u56fe\u7247\u662f\u6211\u4ece\u7f51\u4e0a\u6284\u7684~~\n\n\u6b64\u65f6\u6700\u5c0f\u7684\u53d8\u4e3a\u4e868\u4e0e13\uff0c\u7ee7\u7eed\u5408\u5e76\uff1a\n\n![](https://img-blog.csdn.net/20180805112102841?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NTE5MDQx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u6700\u5c0f\u7684\u53d8\u4e3a\u4e8624\u4e0e14\uff0c\u5408\u5e76\uff0c\u6811\u53d8\u6210\uff1a\n\n![](https://img-blog.csdn.net/20180805113424722?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NTE5MDQx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u91cd\u590d\u521a\u624d\u7684\u6b65\u9aa4\uff0c\u5f97\u5230\u53e6\u4e00\u68f5\u6811:\n\n![](https://img-blog.csdn.net/20180805113828778?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NTE5MDQx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u6700\u540e\u4f9d\u7136\u6309\u4e4b\u524d\u7684\u6b65\u9aa4\u5408\u5e76\u90a3\u4e24\u68f5\u6811\uff1a\n\n![](https://img-blog.csdn.net/20180805114408466?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NTE5MDQx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u8fd9\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u4e86\uff0c\u5f88\u7b80\u5355\u5427\u3002\n\n~~\u95ee\u6b63\u786e\u6027\u8bc1\u660e\u7684\u6211\u4e5f\u4e0d\u4f1a\u81ea\u5df1\u767e\u5ea6\u5427~~\n\n\u7136\u540e\u518d\u770b\u8fd9\u9053\u9898\uff0c\u552f\u4e00\u7684\u96be\u70b9\u5c31\u662f\u6bcf\u5806\u679c\u5b50\u4f1a\u7b97\u591a\u6b21\u3002\u8bbe$k_i$\u4e3a\u7b2c$i$\u5806\u642c\u8fd0\u7684\u6b21\u6570\uff0c\u5219\u9898\u76ee\u53d8\u6210\u4e86\u786e\u5b9a$k_i$\uff0c\u4f7f\u5f97\uff1a\n\n## $$\\sum_{i=1}^n a_ik_i$$\n\n\u6700\u5c0f\u5316\u3002\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\u5b83\u548c$Huffman$\u6811\u6709\u70b9\u50cf\uff0c\u6bcf\u5806\u679c\u5b50\u5c31\u76f8\u5f53\u4e8e\u7ed9\u5b9a\u7684\u53f6\u8282\u70b9\u3002\n\n\u5b83\u7684\u5408\u5e76\u65b9\u5f0f\u4e5f\u548c$Huffman$\u6811\u7684\u5efa\u6811\u65b9\u5f0f\u5341\u5206\u76f8\u4f3c\uff0c\u521b\u5efa\u65b0\u7684\u4e00\u5806\u679c\u5b50\uff0c\u5927\u5c0f\u662f\u539f\u6765\u90a3\u4e24\u5806\u7684\u5927\u5c0f\u4e4b\u548c\u3002\u6211\u4eec\u540c\u6837\u628a\u539f\u6765\u90a3\u4e24\u5bf9\u7684\u7236\u8282\u70b9\u6307\u5411\u65b0\u5806\uff0c\u4e4b\u540e\u6bcf\u6b21\u642c\u8fd0\u65b0\u5806\u662f\u539f\u6765\u4e24\u5806\u7684$k_i$\u90fd\u4f1a\u52a0$1$\uff0c\u4e5f\u5c31\u7b49\u540c\u4e8e\u5408\u5e76\u540e\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u52a0\u4e86$1$\u3002\n\n\u5e76\u4e14\u8fd9\u9053\u9898\u8981\u4f53\u529b\u8017\u8d39\u503c\u6700\u5c0f\uff0c\u663e\u7136\u6ee1\u8db3\u8d2a\u5fc3\u3002\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u6784\u9020\u51fa\u4e00\u68f5$Huffman$\u6811\uff0c\u518d\u6c42\u51fa\u4ed6\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u548c\u5c31\u597d\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u6bcf\u6b21\u627e\u6700\u5c0f\u7684\u4e24\u4e2a\u70b9\u66b4\u529b$for$\u4e00\u904d\u590d\u6742\u5ea6\u4e3a$\\Theta(n^2)$\uff0c\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u6765\u7ef4\u62a4\uff0c\u590d\u6742\u5ea6$\\Theta(n\\log_2n)$\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h> \n\nusing namespace std;\n\nstruct node {\n\tint l, r, v, f, st;\n\tnode() {\n\t\tl = r = v = f = -1;\n\t}\n\tinline bool operator > (const node& b) const {\n\t\treturn v > b.v;\n\t}\n}nd[5000005];\n\nint top(0);\npriority_queue<node, vector<node>, greater<node> >q;\n\ninline bool merge() {\n\tif (q.size() <= 1) return false;\n\tnode a = q.top(); q.pop(); node b = q.top(); q.pop();\n\tnd[++top].v = a.v + b.v; nd[top].st = top;\n\tnd[top].l = a.st; nd[top].r = b.st;\n\tnd[a.st].f = nd[b.st].f = top;\n\tq.push(nd[top]);\n\treturn q.size() - 1;\n}\n\ninline int get(int now, int dep) {\n\treturn (nd[now].l == -1 && nd[now].r == -1) ? nd[now].v * dep : get(nd[now].l, dep + 1) + get(nd[now].r, dep + 1); \n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\ttop = n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> nd[i].v;\n\t\tnd[i].st = i;\n\t\tq.push(nd[i]);\n\t}\n\twhile (merge());\n\tcout << get(q.top().st, 0);\n\treturn 0;\n}\n```\n",
        "postTime": 1563199420,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\n\u5728\u4e00\u4e2a\u679c\u56ed\u91cc\uff0c\u591a\u591a\u5df2\u7ecf\u5c06\u6240\u6709\u7684\u679c\u5b50\u6253\u4e86\u4e0b\u6765\uff0c\u800c\u4e14\u6309\u679c\u5b50\u7684\u4e0d\u540c\u79cd\u7c7b\u5206\u6210\u4e86\u4e0d\u540c\u7684\u5806\u3002\u591a\u591a\u51b3\u5b9a\u628a\u6240\u6709\u7684\u679c\u5b50\u5408\u6210\u4e00\u5806\u3002\n\n\u6bcf\u4e00\u6b21\u5408\u5e76\uff0c\u591a\u591a\u53ef\u4ee5\u628a\u4e24\u5806\u679c\u5b50\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u6d88\u8017\u7684\u4f53\u529b\u7b49\u4e8e\u4e24\u5806\u679c\u5b50\u7684\u91cd\u91cf\u4e4b\u548c\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6240\u6709\u7684\u679c\u5b50\u7ecf\u8fc7 n-1 \u6b21\u5408\u5e76\u4e4b\u540e\uff0c \u5c31\u53ea\u5269\u4e0b\u4e00\u5806\u4e86\u3002\u591a\u591a\u5728\u5408\u5e76\u679c\u5b50\u65f6\u603b\u5171\u6d88\u8017\u7684\u4f53\u529b\u7b49\u4e8e\u6bcf\u6b21\u5408\u5e76\u6240\u8017\u4f53\u529b\u4e4b\u548c\u3002\n\n\u56e0\u4e3a\u8fd8\u8981\u82b1\u5927\u529b\u6c14\u628a\u8fd9\u4e9b\u679c\u5b50\u642c\u56de\u5bb6\uff0c\u6240\u4ee5\u591a\u591a\u5728\u5408\u5e76\u679c\u5b50\u65f6\u8981\u5c3d\u53ef\u80fd\u5730\u8282\u7701\u4f53\u529b\u3002\u5047\u5b9a\u6bcf\u4e2a\u679c\u5b50\u91cd\u91cf\u90fd\u4e3a 1 \uff0c\u5e76\u4e14\u5df2\u77e5\u679c\u5b50\u7684\u79cd\u7c7b \u6570\u548c\u6bcf\u79cd\u679c\u5b50\u7684\u6570\u76ee\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u8bbe\u8ba1\u51fa\u5408\u5e76\u7684\u6b21\u5e8f\u65b9\u6848\uff0c\u4f7f\u591a\u591a\u8017\u8d39\u7684\u4f53\u529b\u6700\u5c11\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u7684\u4f53\u529b\u8017\u8d39\u503c\u3002\n\n\u4f8b\u5982\u67093\u79cd\u679c\u5b50,\u6570\u76ee\u4f9d\u6b21\u4e3a1,2,9.\u53ef\u4ee5\u5148\u5c06 1 \u30012 \u5806\u5408\u5e76\uff0c\u65b0\u5806\u6570\u76ee\u4e3a 3 \uff0c\u8017\u8d39\u4f53\u529b\u4e3a 3 \u3002\u63a5\u7740\uff0c\u5c06\u65b0\u5806\u4e0e\u539f\u5148\u7684\u7b2c\u4e09\u5806\u5408\u5e76\uff0c\u53c8\u5f97\u5230\u65b0\u7684\u5806\uff0c\u6570\u76ee\u4e3a 12 \uff0c\u8017\u8d39\u4f53\u529b\u4e3a 12 \u3002\u6240\u4ee5\u591a\u591a\u603b\u5171\u8017\u8d39\u4f53\u529b =3+12=15 \u3002\u53ef\u4ee5\u8bc1\u660e 15 \u4e3a\u6700\u5c0f\u7684\u4f53\u529b\u8017\u8d39\u503c\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n#### \u8f93\u5165\u683c\u5f0f\uff1a\n\u5171\u4e24\u884c\u3002\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 n(1\u2264n\u226410000),\u8868\u793a\u679c\u5b50\u7684\u79cd\u7c7b\u6570\u3002\n\n\u7b2c\u4e8c\u884c\u5305\u542b n \u4e2a\u6574\u6570\uff0c\u7528\u7a7a\u683c\u5206\u9694\uff0c\u7b2c i \u4e2a\u6574\u6570ai(1\u2264ai\u226420000) \u662f\u7b2c ii \u79cd\u679c\u5b50\u7684\u6570\u76ee\u3002\n\n#### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u4e00\u4e2a\u6574\u6570\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u7684\u4f53\u529b\u8017\u8d39\u503c\u3002\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u8fd9\u4e2a\u503c\u5c0f\u4e8e 2^31.\n\n### \u5206\u6790\n\u672c\u9898\u4e3a\u5178\u578b\u7684\u4f18\u5148\u961f\u5217(\u5c0f\u6839\u5806\uff0c\u5728<queue>\u4e2d\uff09\n```\npriority_queue<int,vector<int>,greater<int> > q;\n```\n\u53d6\u4f18\u5148\u7684\u4e24\u4e2a\u5355\u4f4d\uff0c\u5408\u5e76\uff0c\u518d\u585e\u56de\u5806\u4e2d\uff0c\u8fdb\u884c\u81ea\u4e3b\u7ef4\u62a4\u3002\n\n  \n### \u4ee3\u7801\n  ```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n,ans;\npriority_queue<int,vector<int>,greater<int> > q;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        int r;\n        cin>>r;\n        q.push(r);//\u8bfb\u5165\uff0c\u81ea\u4e3b\u7ef4\u62a4\n    }\n\tfor(int i=1;i<=n-1;i++){\n        int x=q.top();\n        q.pop();//\u7b2c\u4e00\u4e2a\u8bfb\u53d6\uff0c\u5f39\u51fa\n        int y=q.top();\n        q.pop();//\u7b2c\u4e8c\u4e2a\u8bfb\u53d6\uff0c\u5f39\u51fa\n        q.push(x+y);//\u5408\u5e76\uff0c\u518d\u653e\u5165\u5806\u4e2d\n\t\tans+=x+y;\n    }\n    cout<<ans<<\"\\n\";\n    return 0;\n}\n```\n",
        "postTime": 1561533303,
        "uid": 31541,
        "name": "AIsystem",
        "ccfLevel": 0,
        "title": "P1090"
    },
    {
        "content": "1\u3001\u7b97\u6cd5\u5206\u6790\n\n\u5c06\u8fd9\u4e2a\u95ee\u9898\u6362\u4e00\u4e2a\u89d2\u5ea6\u63cf\u8ff0\uff1a\u7ed9\u5b9an\u4e2a\u53f6\u7ed3\u70b9\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u6709\u4e00\u4e2a\u6743\u503cw[i],\u5c06\u5b83\u4eec\u4e2d\u4e24\u4e2a\u3001\u4e24\u4e2a\u5408\u5e76\u4e3a\u6811\uff0c\u5047\u8bbe\u6bcf\u4e2a\u7ed3\u70b9\u4ece\u6839\u5230\u5b83\u7684\u8ddd\u79bb\u662fd[i]\uff0c\u4f7f\u5f97\u6700\u7ec8\u2211\uff08wi*di\uff09\u6700\u5c0f\n\n\u4e8e\u662f\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u53d8\u4e3a\u4e86\u7ecf\u5178\u7684Huffman\u6811\u95ee\u9898\u3002Huffman\u6811\u7684\u6784\u9020\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\uff081\uff09\u4ece\u68ee\u6797\u91cc\u53d6\u4e24\u4e2a\u6743\u548c\u6700\u5c0f\u7684\u7ed3\u70b9\uff1b\n\uff082\uff09\u5c06\u5b83\u4eec\u7684\u6743\u548c\u76f8\u52a0\uff0c\u5f97\u5230\u65b0\u7684\u7ed3\u70b9\uff0c\u5e76\u4e14\u628a\u539f\u7ed3\u70b9\u5220\u9664\uff0c\u5c06\u65b0\u7ed3\u70b9\u63d2\u5165\u5230\u68ee\u6797\u4e2d\uff1b\n\uff083\uff09\u91cd\u590d\uff081\uff09~\uff082\uff09\uff0c\u76f4\u5230\u68ee\u6797\u91cc\u53ea\u6709\u4e00\u68f5\u6811\u3002\n\n2\u3001\u6570\u636e\u7ed3\u6784\n\n\u5f88\u663e\u7136\uff0c\u95ee\u9898\u5f53\u4e2d\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\u662f\uff1a\uff081\uff09\u4ece\u4e00\u4e2a\u8868\u4e2d\u53d6\u51fa\u6700\u5c0f\u7684\u6570  \uff082\uff09\u63d2\u5165\u4e00\u4e2a\u6570\u5b57\u5230\u8fd9\u4e2a\u8868\u4e2d\u3002   \u652f\u6301\u52a8\u6001\u67e5\u627e\u6700\u5c0f\u6570\u548c\u52a8\u6001\u63d2\u5165\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u7528\u5806\u6765\u5b9e\u73b0\u3002\u56e0\u4e3a\u53d6\u7684\u662f\u6700\u5c0f\u5143\u7d20\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u5c0f\u6839\u5806\u6765\u5b9e\u73b0\u3002\n\n\u7528\u5806\u7684\u5173\u952e\u90e8\u5206\u662f\u4e24\u4e2a\u64cd\u4f5c\uff1aput\u64cd\u4f5c\uff0c\u5373\u5f80\u5806\u4e2d\u52a0\u5165\u4e00\u4e2a\u5143\u7d20\uff1bget\u64cd\u4f5c\uff0c\u5373\u4ece\u5806\u4e2d\u53d6\u51fa\u5e76\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u3002\n\n3\u3001\u64cd\u4f5c\u5b9e\u73b0\n\n\u6574\u4e2a\u7a0b\u5e8f\u5f00\u59cb\u65f6\u901a\u8fc7n\u6b21get\u64cd\u4f5c\u5efa\u7acb\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u7136\u540e\u4e0d\u65ad\u91cd\u590d\u5982\u4e0b\u64cd\u4f5c\uff1a\u4e24\u6b21get\u64cd\u4f5c\u53d6\u51fa\u4e24\u4e2a\u6700\u5c0f\u6570\u7d2f\u52a0\u8d77\u6765\uff0c\u5e76\u4e14\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u7ed3\u70b9\uff0c\u518d\u63d2\u5165\u5230\u5806\u4e2d\u3002\u59821+1=2\uff0c\u518d\u628a2\u63d2\u5165\u5230\u5806\u7684\u540e\u9762\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u4ece\u4e0b\u5f80\u4e0a\u8c03\u6574\uff0c\u4f7f\u5f97\u5305\u62ec2\u5728\u5185\u7684\u6570\u7ec4\u6ee1\u8db3\u5806\u7684\u6027\u8d28\u3002\n\n\n\u4ee3\u7801\nPascal\n```\n\nconst maxn=10000;\nvar heap:array[1..maxn]of longint;\n    ans,n,len,a,b,i,t:longint;\nprocedure put(x:longint);\nvar son,t:longint;\nbegin\n\tlen:=len+1;\n\theap[len]:=x;\n\tson:=len;\n\twhile(son<>1)and(heap[son div 2]>heap[son])do\n\t\tbegin\n\t\t\tt:=heap[son div 2];\n\t\t\theap[son div 2]:=heap[son];\n\t\t\theap[son]:=t;\n\t\t\tson:=son div 2;\n\t\tend;\nend;\nfunction get:longint;\nvar fa,son,t:longint;\n    s:boolean;\nbegin\n    get:=heap[1];\n\theap[1]:=heap[len];\n\tlen:=len-1;\n\tfa:=1;\n\ts:=false;\n\twhile((fa*2<=len)or(fa*2+1<=len))and(not s)do\n\t\tbegin\n\t\t\tif(fa*2+1>len)or(heap[fa*2]<heap[fa*2+1])\n\t\t\t\tthen son:=fa*2 else son:=fa*2+1;\n\t\t\tif heap[fa]>heap[son]then\n\t\t\t\tbegin\n\t\t\t\t\tt:=heap[fa];\n\t\t\t\t\theap[fa]:=heap[son];\n\t\t\t\t\theap[son]:=t;\n\t\t\t\t\tfa:=son;\n\t\t\t\tend\n\t\t\telse s:=true;\n\t\tend;\nend;\nbegin\n\tlen:=0;\n\treadln(n);\n\tfor i:=1 to n do\n\t\tbegin\n\t\t\tread(t);\n\t\t\tput(t);\n\t\tend;\n\tans:=0;\n\tfor i:=1 to n-1 do\n\t\tbegin\n\t\t\ta:=get;\n\t\t\tb:=get;\n\t\t\tans:=ans+a+b;\n\t\t\tput(a+b);\n\t\tend;\n\twriteln(ans);\nend.\n\n~~\u6253\u5b57\u6253\u5f97\u624b\u9178~\u5e0c\u671b\u901a\u8fc7~~",
        "postTime": 1548673509,
        "uid": 67087,
        "name": "_\u68c9\u82b1\u7cd6_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u95ee\u9898\u5206\u6790:\u5f88\u660e\u663e\u7684\u8fd9\u9898\u662f\u4e2a\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u5c06\u6700\u5c0f\u4e0e\u6b21\u5c0f\u7684\u4e00\u5806\u679c\u5b50\u5408\u5e76\uff0c\u4ece\u800c\u5f97\u5230\u6700\u4f18\u89e3\u3002\u5173\u4e8e\u8fd9\u4e00\u9898\uff0c\u6709\u5f88\u591a\u89e3\u6cd5\uff0c\u6bd4\u5982\uff1a\u4f18\u5148\u961f\u5217\uff0c\u5806\u7b49\u7b49\u3002\n\n\u7b97\u6cd5\u9009\u62e9\uff1a\u672c\u6b21\u6211\u4ecb\u7ecd\u7684\u662f\u6700\u4f18\u7b97\u6cd5\u7684\u5f31\u5316\u7248\u7eaf\u5355\u8c03\u961f\u5217\u3002PS\uff1a\u6700\u4f18\u7b97\u6cd5\u662f\u5355\u8c03\u961f\u5217\u52a0\u5806\u4f18\u5316\u3002\n\n\u9009\u62e9\u539f\u56e0\uff1a\u56e0\u4e3a\u8981\u6bcf\u6b21\u9009\u62e9\u6700\u5c0f\u7684\u4e24\u5806\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4e25\u683c\u9012\u589e\u7684\u5355\u8c03\u961f\u5217\uff0c\u6bcf\u6b21\u53d6\u51fa\u961f\u5934\u7684\u4e24\u4e2a\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ece\u800c\u5f97\u5230\u6700\u4f18\u89e3\u3002\n\n\u5177\u4f53\u64cd\u4f5c\uff1a\u5b9a\u4e49\u4e24\u4e2a\u6570\u7ec4a\u6570\u7ec4\u548cb\u6570\u7ec4\u3002\u5c06\u8bfb\u5165\u7684\u6570\u653e\u5165a\u6570\u7ec4\u4e2d\uff0c\u8c03\u7528algorithm\u4e0b\u7684sort\u51fd\u6570\u8fdb\u884c\u6392\u5e8f\u3002\u7136\u540e\u5c06b\u6570\u7ec4\u4ee5\u53caa[n+2]\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\uff0c\u9632\u6b62\u5728\u5408\u5e76\u65f6\u5c06b\u6570\u7ec4\u6ca1\u6709\u5408\u5e76\u7684\u9009\u4e2d\u548ca\u6570\u7ec4\u7684\u8d8a\u754c\u3002\u5b9a\u4e49a_head,b_head\uff0ca_tail,b_tail\uff0c\u7528\u9014\u4e0d\u7528\u6211\u89e3\u91ca\u4e86\u5427\u3002\u6bcf\u6b21\u53d6\u4e24\u5806\u6700\u5c0f\u7684\u679c\u5b50\uff0c\u5408\u5e76\u540e\u4e22\u5165b\u6570\u7ec4\uff0c\u4e00\u5171\u8981\u5408\u5e76n\u6b21\uff0c\u5c06\u6bcf\u6b21\u5408\u5e76\u7684\u82b1\u8d39\u52a0\u5165ans\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u8bfb\u5165a\u6570\u7ec4O(n),\u8d4bb\u6570\u7ec4\u65e0\u7a77\u5927O(n),\u5feb\u6392a\u6570\u7ec4O(nlogn),\u5408\u5e76\u679c\u5b50O(n)\uff0c\u603b\u5171O(3n+nlogn)\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aa\u6570\u7ec4O(n)\uff0cb\u6570\u7ec4O(n),\u603b\u5171O(2n)\u3002\n\n\u53c2\u8003\u4ee3\u7801:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define M 999999999\nusing namespace std;\nint a[20010],b[20010],\na_head=1,b_head=1,b_tail,n;\n#define find() a[a_head]<b[b_head]?a[a_head++]:b[b_head++]\nint main()\n{\n\tlong long ans=0;scanf(\"%d\",&n);\n\tfor(int i=n;i;i--) scanf(\"%d\",&a[i]);\n\tsort(a+1,a+n+1);\n\tfor(int i=n;i;i--) b[i]=M;\n\ta[--n+2]=M;\n\twhile(n--)\n\t{\n\t\tlong long x=find(),y=find();\n\t\tb[++b_tail]=x+y;\n\t\tans+=x+y;\n\t}\n\tprintf(\"%lld\",ans);\n}\n```\n",
        "postTime": 1544256834,
        "uid": 86279,
        "name": "Dust_hjc4",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u521d\u770b\u8fd9\u9898\uff0c\u4e00\u5f00\u59cb\u8111\u5b50\u62bd\u7b4b\uff0c\u6392\u5e8f\u4e00\u8fb9\u5c31\u76f4\u63a5\u9010\u6b65\u7d2f\u52a0\u6c42\u548c\uff0c\u7ed3\u679c\u8fc7\u4e861\u4e2a\u70b9\u3002\u3002\u3002\n\n\n------------\n\n\u6781\u5ea6\u4e0d\u723d\uff0c \u6bcf\u6b21\u52a0\u4e00\u4e2a\u6392\u5e8f\uff0c \u7ed3\u679c10\u4e2aTLE...\n\n------------\n\n\u51b7\u9759\u4e0b\u6765\u597d\u597d\u60f3\u60f3\uff0c\u5c31\u60f3\u5230\u4e86\u4e00\u6837\u4e1c\u897f\uff1a\n#### c++\u515a\u7684\u798f\u97f3\uff1aSTL\u4e2d\u7684\u4f18\u5148\u961f\u5217\uff01\uff01\uff01\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u8d2a\u5fc3\u3002\n\u6bcf\u4e00\u6b21\u53d6\u51fa\u961f\u9996\u7684\u4e24\u4e2a\u6570a, b\uff08\u8fd9\u91cc\u8981\u91cd\u8f7d\u5c0f\u4e8e\u53f7\uff0c\u6545\u961f\u9996\u7684\u4e24\u4e2a\u503c\u4e3a\u6700\u5c0f\u7684\u4e24\u5806\uff09\uff0c \u5e76\u6210\u4e00\u5806\uff0c sum = a + b\uff0cans += sum\uff1b\u8fd9\u6837\u6bcf\u6b21\u7684\u529b\u6c14\u82b1\u8d39\u5c31\u7d2f\u52a0\u4e86\u3002\n\n\n\n------------\n\ncode:\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nstruct node{\n\tbool operator () (int &a, int &b){\n\t\treturn a > b;\n\t}\n};//node\u7ed3\u6784\u4f53\u7684\u4f5c\u7528\u662f\u91cd\u8f7d<;\npriority_queue <int, vector<int>, node> q;//\u5b9a\u4e49\u4e00\u4e2a\u4f18\u5148\u961f\u5217\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i++) {\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tq.push(x); \n\t}\n\tint ans = 0;\n\tint sum = 0;\n    //\u91cd\u70b9\u6765\u4e86\uff1a\n\twhile(q.size() != 1) {\n\t\tint a = q.top();\n\t\tq.pop();\n\t\tint b = q.top();\n\t\tq.pop();\n\t\tsum = a + b;\n\t\tans += sum;\n\t\tq.push(sum); \n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1540715237,
        "uid": 115383,
        "name": "Mystery_Sky",
        "ccfLevel": 6,
        "title": "\u4f18\u5148\u961f\u5217\u653e\u5149\u8292\uff01"
    },
    {
        "content": "\u55ef\u2026\u2026~~\u672c\u4eba\u89c9\u5f97\u8fd9\u9898\u8fd8\u662f\u86ee\u7b80\u5355\u7684~~\n\n\u5f53\u7136\uff0c\u672c\u5f31\u9e21\u7684\u4ee3\u7801\u6bd4\u4e0d\u4e0a\u90a3\u4e9b\u7528\u4f18\u5148\u961f\u5217\u7684\u5927\u4f6c\n\n\u90fd\u8fd8\u770b\u5f97\u61c2\u5427\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint ans = 0, n, tmp, k;\nint a[40005];\nint head = 0, tail;\nint main()\n{\n\tscanf(\"%d\", &n);\n\ttail = n - 1;\n\tmemset(a, 0x3f, sizeof(a));\n\tfor(int i = 0 ; i < n ; i ++) scanf(\"%d\", &a[i]);\n\tsort(a, a + n);\n\twhile(1)\n\t{\n\t\ttmp = a[head] + a[head + 1];//\u76f8\u52a0 \n\t\thead += 2, tail ++;\n\t\tif(head == tail)//\u6392\u5b8c\u4e86 \n\t\t{\n\t\t\tans += tmp;\n\t\t\tbreak;\n\t\t}\n\t\tk = head;//\u5f00\u59cb\u540e\u79fb\u6392\u5e8f \n\t\twhile(tmp >= a[k]) k ++;\n\t\tfor(int i = tail ; i > k ; i --) a[i] = a[i - 1];\n\t\ta[k] = tmp;\n\t\tans += tmp;\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```\n\u672c\u4eba\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u4e0d\u559c\u52ff\u55b7",
        "postTime": 1538881120,
        "uid": 75175,
        "name": "huanghaiyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u770b\u5230\u4f17\u591a\u5927\u4f6c\u5728\u9898\u89e3\u53d1\u5e03\u5404\u79cd\u770b\u4e0d\u61c2\u7684\u7b97\u6cd5\n\n\u672c\u849f\u84bb\u9ed8\u9ed8\u7801\u4e00\u7bc7\u81ea\u5df1\u7684\u9898\u89e3\n\n\u5176\u5b9e\u53ea\u8981\u4f53\u529b\u82b1\u8d39\u6700\u5c11 \u6bcf\u6b21\u628a\u6700\u5c11\u679c\u5b50\u6570\u76ee\u7684\u5806\u5408\u5e76\u5c31\u53ef\u4ee5\u4e86\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint n,a[10001];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tsort(a+1,a+n+1);//\u5c06\u679c\u5b50\u6570\u76ee\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\tint ans=0,temp=1;\n\tfor(int i=1;i<n;i++){\n\t\ta[i+1]=a[i]+a[i+1];//\u5408\u5e76\n\t\tans+=a[i+1];//\u8ba1\u7b97\u4f53\u529b\n\t\twhile((a[i+temp]>a[i+temp+1])&&(a[i+temp+1]!=0)){\n\t\t\tswap(a[i+temp],a[i+temp+1]);//\u5c06\u5408\u5e76\u540e\u7684\u679c\u5b50\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u5730\u65b9\u63d2\u5165\n\t\t\ttemp++;\n\t\t}\n\t\ttemp=1;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1538793868,
        "uid": 49540,
        "name": "Oist",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u663e\u7136\u8fd9\u9053\u9898\u6211~~\u4f5c\u5f0a~~\u7528\u4e86\u4e00\u79cd\u6392\u597d\u5e8f\u7684\u5bb9\u5668\uff1amultiset\n\n------------\n\u76f4\u63a5\u4e0a\u5927\uff08\u4ee3\uff09\u9ebb\uff08\u7801\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmultiset<int> num;//\u5b9a\u4e49multiset\nint n,a,q=0,sum=0;\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tnum.insert(a);//\u627e\u5230a\u7684\u5408\u9002\uff08\u5c0f\u2192\u5927\uff09\u7684\u4f4d\u7f6e\u5e76\u63d2\u5165\n\t}\n\twhile(*(++num.begin())!=*(--num.end()))//\u5faa\u73af\u6761\u4ef6\uff1a\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4e0d\u76f8\u7b49\uff0c\u5373\u4e0d\u4e3a\u7a7a\n\t{\n\t\tq=*num.begin()+*(++num.begin());//\u5408\u5e76\n\t\tsum+=q;\n\t\tnum.erase(num.begin());//\u6e05\u9664\u5e76\u6392\u5e8f\n\t\tnum.erase(num.begin());\n\t\tnum.insert(q);\n\t}\n\tsum+=*num.begin()+*(++num.begin());//\u2191\u5faa\u73af\u7ed3\u675f\u540e\u8fd8\u5269\u6700\u540e\u4e24\u5806\uff0c\u6700\u540e\u5408\u5e76\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}\n```\n\n------------\n\n\u63d0\u4ea4\u4e4b\u540e\u5c31AC\u5566~",
        "postTime": 1532421369,
        "uid": 59558,
        "name": "Skeleton",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u5806\u7684\u505a\u6cd5\u6211\u5c31\u4e0d\u8bb2\u4e86\uff0c\u5176\u4ed6\u4eba\u90fd\u8bb2\u5f97\u5f88\u6e05\u695a\uff0c\u611f\u89c9\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6a21\u62df\u5806\uff0c\u6211\u5c31\u6765\u4e00\u53d1\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\u3002\n\n\u4ee3\u7801\u9644\u4e0a\uff08\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)  \u7a7a\u95f4\u590d\u6742\u5ea6(n)\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define N 300001\n#define PINF INT_MAX\n#define MINF INT_MIN\nusing namespace std;\nstruct node{\n\tint left,right,v;\n\tbool flag;\n};\nint n,ans,a[N];\nnode tree[N*4];\nbool tag;\nint work(int x,int y){\n\tif (tag) return min(x,y); else return max(x,y);\n}\nvoid mems(node*Tree,int i){\n\tif (tag) Tree[i].v=PINF; else Tree[i].v=MINF;\n\tTree[i].flag=true;\n\treturn;\n}\nvoid PushUp(node*Tree,int i){\n\tTree[i].v=work(Tree[i<<1].v,Tree[i<<1|1].v);\n\tTree[i].flag=Tree[i<<1].flag||Tree[i<<1|1].flag;\n\treturn;\n}\nvoid BuildTree(node*Tree,int i,int L,int R){\n\tTree[i].left=L;\n\tTree[i].right=R;\n\tif (L==R){\n\t\tmems(Tree,i);\n\t\treturn;\n\t}\n\tint m=(L+R)>>1;\n\tBuildTree(Tree,i<<1,L,m);\n\tBuildTree(Tree,i<<1|1,m+1,R);\n\tPushUp(Tree,i);\n\treturn;\n}\nint Search1(node*Tree,int i){\n\tif (Tree[i].left==Tree[i].right) return Tree[i].left;\n\tif (Tree[i<<1].flag) return Search1(Tree,i<<1); else return Search1(Tree,i<<1|1);\n}\nint Search2(node*Tree,int i){\n\tif (Tree[i].left==Tree[i].right) return Tree[i].left;\n\tif (Tree[i<<1].v==Tree[i].v) return Search2(Tree,i<<1); else return Search2(Tree,i<<1|1);\n}\nint Query(node*Tree,int i,int index){\n\tif (Tree[i].left==Tree[i].right) return Tree[i].v;\n\tif (index<=Tree[i<<1].right) return Query(Tree,i<<1,index); else return Query(Tree,i<<1|1,index);\n}\nvoid Change1(node*Tree,int i,int index,int s){\n\tif (Tree[i].left==Tree[i].right) {\n\t\tTree[i].flag=false;\n\t\tTree[i].v=s;\n\t\treturn;\n\t}\n\tif (index<=Tree[i<<1].right) Change1(Tree,i<<1,index,s); else Change1(Tree,i<<1|1,index,s);\n\tPushUp(Tree,i);\n\treturn;\n}\nvoid Change2(node*Tree,int i,int index){\n\tif (Tree[i].left==Tree[i].right) {\n\t\tmems(Tree,i);\n\t\treturn;\n\t}\n\tif (index<=Tree[i<<1].right) Change2(Tree,i<<1,index); else Change2(Tree,i<<1|1,index);\n\tPushUp(Tree,i);\n\treturn;\n}\nvoid Build(node*Tree,int len,bool d){\n\ttag=d;\n\tBuildTree(Tree,1,1,len);\n\treturn;\n}\nvoid PutIn(node*Tree,int x){\n\tint t=Search1(Tree,1);\n\tChange1(Tree,1,t,x);\n\treturn;\n}\nint PutOut(node*Tree){\n\tint t=Search2(Tree,1),k=Query(Tree,1,t);\n\tChange2(Tree,1,t);\n\treturn k;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tBuild(tree,n,true);\n\tfor (int i=1;i<=n;i++) PutIn(tree,a[i]);\n\tfor (int i=1;i<n;i++){\n\t\tint t1,t2,k;\n\t\tt1=PutOut(tree);\n\t\tt2=PutOut(tree);\n\t\tk=t1+t2;\n\t\tPutIn(tree,k);\n\t\tans+=k;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u4f46\u56e0\u4e3a\u7ebf\u6bb5\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u4e00\u4e2a\u7384\u5b66\u7684\u5e38\u6570C\uff0c\u6240\u4ee5\u603b\u5171\u8dd1\u4e86136ms\uff0c\u53ef\u80fd\u4e0d\u5982\u90a3\u4e9b\u76f4\u63a5\u7528\u5806\u7684\u3002",
        "postTime": 1532231488,
        "uid": 72598,
        "name": "logwzc",
        "ccfLevel": 7,
        "title": "\u7ebf\u6bb5\u6811\u6a21\u62df\u5806"
    },
    {
        "content": "\n## Vjudge \u5408\u5e76\u679c\u5b50\n\n\n> ## \u5355\u8c03\u961f\u5217\n\n### \u9898\u610f\uff1a\n```c++\n\u73b0\u5728\u6709n\u5806\u679c\u5b50\uff0c\u7b2ci\u5806\u6709ai\u4e2a\u679c\u5b50\u3002\u73b0\u5728\u8981\u628a\u8fd9\u4e9b\u679c\u5b50\u5408\u5e76\u6210\u4e00\u5806\uff0c\u6bcf\u6b21\u5408\u5e76\u7684\u4ee3\u4ef7\u662f\u4e24\u5806\u679c\u5b50\u7684\u603b\u679c\u5b50\u6570\u3002\u6c42\u5408\u5e76\u6240\u6709\u679c\u5b50\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n```\n\n```c\n\u6570\u636e\u8303\u56f4:\n2<=n<=1000\n```\n\n```c\nInput:\n2\n4\n1 2 3 4\n5\n3 5 2 1 4\n```\n\n```c\nOutput:\n19\n33\n```\n\n#### \u601d\u8def\uff1a\n```\n\u7531\u8d2a\u5fc3\u53ef\u77e5,\u4e0d\u65ad\u7684\u53d6\u6700\u5c0f\u7684\u679c\u5b50\u5408\u5e76\u5373\u53ef.\n\u90a3\u4e48\u6211\u4eec\u5148\u5c06\u539f\u6765\u7684\u679c\u5b50\u6392\u5e8f,\u800c\u540e\u7ef4\u62a4\u4e00\u4e2a\u9012\u589e\u5355\u8c03\u961f\u5217\u5373\u53ef.\n\u4e5f\u5c31\u662f\u8bf4,\u5c06\u5408\u5e76\u540e\u7684\u679c\u5b50\u653e\u5165\u53e6\u4e00\u4e2a\u6570\u7ec4,\u4e00\u6b65\u6b65\u5f52\u5e76\u6392\u5e8f\u5373\u53ef.\n\u601d\u60f3\u7684\u8bdd\u662f\u5355\u8c03\u961f\u5217\u6ca1\u9519,\u4f46\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\u5f52\u5e76\u6392\u5e8f,\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5355\u8c03\u961f\u5217\u7684\u7ef4\u62a4.\n\u5355\u8c03\u961f\u5217\u7ef4\u62a4\uff1a\n        \u53ea\u9700\u5b9e\u65f6\u7684\u5c06\u5934\u6307\u9488\u653e\u5728\u6700\u5c0f\u4f4d\u7f6e\u5373\u53ef.\n        Ps:\u961f\u5217\u4e2d\u8fd8\u9700\u5b58\u50a8\u5c3e\u6307\u9488.\u5355\u8c03\u961f\u5217\u7684\u4e00\u822c\u5957\u8def\u5e94\u8be5\u4e5f\u90fd\u61c2.\n```\n\n\n#### \u4ee3\u7801\uff1a\n```c++\nscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++)scanf(\"%d\",A+i);\n\tsort(A+1,A+1+n);\n\tla=1,lb=1,rb=0;\n\tfor(int i=1; i<n; i++) {\n\t\tint a,b;\n\t\tif(lb>rb) {\n\t\t\ta=A[la++];\n\t\t\tb=A[la++];\n\t\t} else if(la>n) {\n\t\t\ta=B[lb++];\n\t\t\tb=B[lb++];\n\t\t} else {\n\t\t\tif(A[la]>B[lb])a=B[lb++];\n\t\t\telse a=A[la++];\n\t\t\tif(la>n)b=B[lb++];\n\t\t\telse if(lb>rb)b=A[la++];\n\t\t\telse {\n\t\t\t\tif(A[la]>B[lb])b=B[lb++];\n\t\t\t\telse b=A[la++];\n\t\t\t}\n\t\t}\n\t\tB[++rb]=a+b;\n\t\tans+=B[rb];\n\t}\n```\n#### \u603b\u7ed3\uff1a\n```\n\u8fd9\u79cd\u505a\u6cd5\u5e94\u8be5\u4e5f\u662f\u590d\u6742\u5ea6\u6700\u4f4e\u5f97\u4e86\u5427\u2026\u2026\n\u5e94\u8be5\u662f\u8fd9\u9898\u7684\u6b63\u89e3\u4e86.\n```",
        "postTime": 1531831273,
        "uid": 100000,
        "name": "Armand",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "### java\u7248\u4ee3\u7801\n * \u4e3b\u8981\u601d\u60f3\u662f\u8d2a\u5fc3,\u6bcf\u6b21\u5408\u5e76\u6700\u5c0f\u7684\u4e24\u5806,\u76f4\u5230\u53ea\u5269\u4e0b\u6700\u540e\u4e00\u5806...\n * \u53ef\u4ee5\u7528\u6392\u5e8f,\u4f46\u662f\u6bcf\u6b21\u5408\u5e76\u540e\u90fd\u91cd\u65b0\u6392\u5e8f,\u660e\u663e\u4f1aTLE.....\n * \u4f46\u5176\u5b9e\u53ea\u8981\u8bfb\u5165\u6570\u636e\u65f6\u6392\u5e8f\u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86,\u4e4b\u540e\u6bcf\u6b21\u5408\u5e76\u90fd\u6267\u884c\u63d2\u5165\u64cd\u4f5c(\u63d2\u5165\u6392\u5e8f\u7684\u601d\u60f3?),\u5c31\u53ef\u4ee5AC\u4e86\n \n\n------------\n```\n\nimport java.io.BufferedInputStream;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(new BufferedInputStream(System.in));\n\t\tint n = scan.nextInt();\n\t\tArrayList<Integer> list = new ArrayList<>();//\u4f7f\u7528list\u6765\u5b58\u50a8\u6bcf\u5806\u7684\u91cd\u91cf\n\t\t\n\t\tfor (int i = 0; i < n; i++) {//\u8bfb\u5165\u6570\u636e\n\t\t\tlist.add(scan.nextInt());\n\t\t}\n\t\t\n\t\tCollections.sort(list);//\u4f7f\u7528sort\u6392\u5e8f\n\t\t\n\t\tint temp = 0, sum = 0;//temp\u8868\u793a\u5408\u5e76\u6700\u5c0f\u7684\u4e24\u5806\u540e\u7684\u91cd\u91cf,sum\u8868\u793a\u7528\u6389\u7684\u603b\u4f53\u529b\n\t\t\n\t\twhile (list.size() >= 2) {\n\t\t\t//\u53d6\u6700\u5c0f\u7684\u4e24\u5806,\u968f\u540e\u628a\u8fd9\u4e24\u5806\u79fb\u9664\n\t\t\ttemp = list.get(0) + list.get(1);\n\t\t\tsum = sum + temp;\n\t\t\tlist.remove(0);\n\t\t\tlist.remove(0);\n\t\t\t\n\t\t\tif (list.size() == 0)\n\t\t\t\tbreak;\n\t\t\tif (temp >= list.get(list.size() - 1)) {//\u5982\u679c\u5408\u5e76\u4e4b\u540e\u7684\u5806\u91cd\u91cf\u6bd4list\u4e2d\u6700\u5927\u7684\u5806\u91cd,\u63d2\u5165\u5728\u672b\u5c3e\n\t\t\t\tlist.add(temp);\n\t\t\t} else if (temp <= list.get(0)) {//\u5982\u679c\u5408\u5e76\u4e4b\u540e\u7684\u961f\u6bd4list\u4e2d\u6700\u5c0f\u7684\u8981\u5c0f,\u63d2\u5165\u5728\u6700\u524d\u9762\n\t\t\t\tlist.add(0, temp);\n\t\t\t} else {\n\t\t\t\tinsert(list, temp);//\u5176\u4ed6\u4f4d\u7f6e\u7684\u63d2\u5165\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sum);\n\n\t}\n\n\tstatic void insert(ArrayList<Integer> list, int temp) {//\u628atemp\u63d2\u5165\u5728list\u4e2d\u7684\u5408\u9002\u4f4d\u7f6e\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tif (list.get(i) <= temp && temp <= list.get(i + 1)) {\n\t\t\t\tlist.add(i + 1, temp);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1526017810,
        "uid": 98392,
        "name": "continued258",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u597d\u4e45\u6ca1\u5199\u9898\u89e3\u4e86...\u4e00\u76f4\u6ca1\u627e\u56de\u611f\u89c9\uff0c\u5c31\u6ca1\u600e\u4e48\u5237\u9898\u76ee\u4e5f\u6ca1\u600e\u4e48\u5b66\u65b0\u7684\u4e1c\u897fqwq\n\n\u8fd9\u9053\u9898\u76ee\u5176\u5b9e\u662f\u4e8c\u53c9\u5806\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u6839\u8282\u70b9\u7684\u6a21\u677f\u9898\u4e86...\n\n\u3010\u601d\u8def\u3011\n\n\u672c\u9898\u76ee\u8bf4\u7684\u662f\u6c42\u6700\u5c0f\u4f53\u529b\uff0c\u800c\u6309\u7167\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u5219\u4e3a\uff1a\n\n\uff081\uff09\u53d6\u51fa\u6574\u4e2a\u6570\u7ec4\u4e2d\u6700\u5c0f\u4e24\u4e2a\u6570\n\n\uff082\uff09\u5220\u9664\u8fd9\u4e24\u4e2a\u6570\u5e76\u5408\u5e76\u8fd9\u4e24\u4e2a\u6570\n\n\uff083\uff09\u5408\u5e76\u540e\u7684\u503c\u653e\u5165\u6570\u7ec4\u5e76\u8f6c\uff081\uff09\n\n\u8fd9\u91cc\u6709\u4e09\u79cd\u65b9\u6cd5\uff1a\n\n1\uff1a\u6bcf\u5220\u9664\u63d2\u5165\u4e00\u6b21\u4fbf\u6392\u4e00\u6b21\u5e8f\n\n\u8fd9\u79cd\u65b9\u6cd5\u8d85\u65f6\uff0c\u53ea\u80fd\u5f9750\u5206\n\n2.\u91c7\u7528\u5c0f\u6839\u5806\u7684\u5f62\u5f0f\n \n3.\u91c7\u7528\u4f18\u5148\u961f\u5217\n\n\u7531\u4e8e\u672c\u4eba\u6b63\u5728\u7ec3\u4e60\u6570\u636e\u7ed3\u6784\u4e8c\u53c9\u6811\u65b9\u9762\u7684\uff0c\u8fd9\u91cc\u53ea\u653e\u51fa\u4e8c\u53c9\u5806\u7684\u9898\u89e3qwq\n\n\u5148\u7528\u5c0f\u6839\u5806\u8fdb\u884c\u5b58\u50a8\u6574\u4e2aN\u4e2a\u6570\u3002\u56e0\u4e3a\u5c0f\u6839\u5806\u7684\u6839\u8282\u70b9\u4e00\u5b9a\u662f\u6574\u4e2a\u5806\u4e2d\u6700\u5c0f\u7684\u6570\uff0c\u6240\u4ee5\u6bcf\u4e00\u6b21\u5220\u9664\u6839\u8282\u70b9\u3002\n\n\u3010\u4ee3\u7801\u3011\n```cpp\n#include <cstdio>\nusing namespace std;\nint a[10001],len,total;\nvoid swap(int x,int y)\n{\n\tint t;\n\tt=a[x];\n\ta[x]=a[y];\n\ta[y]=t;\n} //\u4ea4\u6362\u51fd\u6570\nvoid put(int k)\n{\n\tint son,parent;\n\ta[++len]=k;\n\tson=len;\n\twhile (son>1)\n\t{\n\t\tparent=son/2;\n\t\tif (a[parent]<a[son]) break;\n\t\tswap(parent,son);\n\t\tson=parent;\n\t}\n} //\u63d2\u5165\u5143\u7d20\u81f3\u5c0f\u6839\u5806\nint get()\n{\n\tint son,parent,t;\n\tt=a[1];\n\ta[1]=a[len];\n\tlen--;\n\tparent=1;\n\twhile(parent*2<=len)\n\t{\n\t\tson=parent*2;\n\t\tif (son<len && a[son]>a[son+1])\n\t\tson++;\n\t\tif (a[parent]<a[son]) break;\n\t\tswap(parent,son);\n\t\tparent=son;\n\t}\n\treturn t;\n} //\u5220\u9664\u5143\u7d20\u5e76\u8fd4\u56de\u5c0f\u6839\u5806\u6839\u8282\u70b9\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tint k;\n\t\tscanf(\"%d\",&k);\n\t\tput(k);\n\t} //\u8f93\u5165\uff0c\u6bcf\u8f93\u5165\u4e00\u4e2a\u6570\n   for (int j=1;j<n;j++)\n   {\n   \t   int x1=get();\n   \t   int y1=get(); //\u53d6\u51fa\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\n   \t   int l=x1+y1; //\u5408\u5e76\n   \t   total+=l; //\u52a0\u5165\u603b\u548c\n   \t   put(l); //\u5c06\u5408\u5e76\u7684\u503c\u63d2\u5165\u5c0f\u6839\u5806\n   }\n   printf(\"%d\",total);\n\treturn 0;\n}\n```\n\u3010\u53cd\u601d\u53ca\u6ce8\u610f\u70b9\u3011\n\nemmm\u6ca1\u5565\u4e86\uff0c\u5982\u679c\u5b66\u4e8c\u53c9\u5806\uff0c\u8fd9\u9053\u9898\u7b97\u662f\u5165\u95e8\u5427\uff01\n\n**\u611f\u8c22\u770b\u5230\u8fd9\u91cc\uff01\uff01**",
        "postTime": 1520164231,
        "uid": 24812,
        "name": "Sakura_Peng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u9762\u5bf9\u8fd9\u4e2a\u4e0a\u53e4\u65f6\u671f\u7684\u96be\u9898\uff0c\u6211\u5e76\u6ca1\u6709\u663e\u9732\u51fa\u592a\u591a\u7684\u754f\u60e7~~\uff08\u56e0\u4e3a\u5b66\u957f\u6765\u628a\u8fd9\u9898\u5f53\u4f8b\u9898\u8bb2233\uff09~~\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\uff08\u4e00\u6761\u6709\u6027\u683c\u7684\u5206\u5272\u7ebf\uff09\n\n\u4e0d\u626f\u4e86\u4e0b\u9762\u662f\u6b63\u6587\u3002\u3002\n\n\n\u8fd9\u9898\u7684\u5927\u6982\u601d\u8def\uff1a\n\n\n\u628an\u5806\u679c\u5b50\u6d88\u8017\u7684\u4f53\u529b\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u6bcf\u6b21\u53d6\u4e00\u5806\u679c\u5b50\u5c31\u6392\u4e00\u6b21\u5e8f\uff08\u56e0\u4e3a\u6839\u636e\u6b64\u9898\u8d2a\u5fc3\uff08\uff1f\uff09\u539f\u5219\u5408\u5e76\u4e24\u5806\u679c\u5b50\u6d88\u8017\u4f53\u529b\u503c\u8981\u6700\u5c11\uff0c\u6240\u4ee5\u6bcf\u6b21\u90fd\u8981\u5c3d\u91cf\u6700\u5c11\u3002\u3002\n\n\n\u53ef\u80fd\u4e0a\u9762\u7684\u770b\u8d77\u6765\u6709\u70b9\u4e0d\u660e\u767d\uff0c\u4e0d\u591a\u8bf4\uff0c\u4e0a\u6807\u7a0b\uff1a\n\n\uff08\u7531\u4e8e\u4eca\u5929\u6211\u4eec\u8981\u8bb2\u5806\uff0c\u6240\u4ee5\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u5806\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5728\u7528\u6570\u7ec4\u6a21\u62df\u5806\uff0c\u4ec0\u4e48\u65f6\u5019\u5b66\u4e60\u4e86STL\u7684\u8bdd\u5c3d\u91cf\u8865\u4e0a\u8fd9\u4e9b\u77e5\u8bc6\uff09~~\u5176\u5b9e\u8fd9\u662f\u6211\u6284dalao\u7684\uff0c\u800c\u4e14\u6284\u9519\u4e86\uff0c\u987f\u65f6\u611f\u89c9\u667a\u5546\u4e0b\u7ebf\u3002\u3002\u3002qwq~~\n\n\n\u4f46\u4e0b\u9762\u7684\u4ee3\u7801\u4fdd\u8bc1AC\u3002\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n\nusing std::cin;\nusing std::cout;\n\nconst int MAXN = 100000 + 50;\n\nint heap[MAXN] = {0}, num;\n/*heap\u4e3a\u5c0f\u6839\u5806\uff1b\n *num\u4e3a\u5806\u7684\u5927\u5c0f\n */\n\nvoid debug1() {\n    for (int i = 0; i <= num+3; ++i) {\n        std::cerr << heap[i] << \"   \";\n    }\n    std::cerr << \"num = \" << num << \"\\n\\n\";\n}\n/*\u4e0b\u9762\u662f\u5806\u7684\u201c\u4e0a\u6d6e\u201d\u64cd\u4f5c*/\nvoid Up(int u) {/*u\u8868\u793a\u6570\u5bf9\u5e94\u7684\u4e0b\u6807*/\n    if (u == 1) return;/*\u5982\u679c\u4e0a\u6d6e\u7684\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5c31return\uff08\u5b83\u6ca1\u6709\u7236\u4eb2\u8282\u70b9\u53ef\u4e0a\u6d6e\uff09*/\n    if (heap[u >> 1] < heap[u]) return;/*\u5982\u679cu >> 1\uff08u>>1\u8868\u793au\u7684\u7236\u4eb2\u8282\u70b9\uff09\u672c\u6765\u5c31\u5c0f\u4e8e\u8282\u70b9u\uff0creturn\uff08\u5df2\u7ecf\u662f\u201c\u5c0f\u6839\u201d\uff09*/\n    std::swap(heap[u >> 1], heap[u]);//\u4ea4\u6362\u3002\u3002\n    Up(u >> 1);//\u9012\u5f52\u8fdb\u884c\uff0c\u7ee7\u7eed\u201c\u4e0a\u6d6e\u201d\u8282\u70b9u\n}\n/*\u4e0b\u9762\u662f\u5806\u7684\u4e0b\u964d\u64cd\u4f5c\uff0c\u867d\u7136\u662f\u9012\u5f52\u8fdb\u884c\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u5f88\u8017\u6027\u80fd*/\nvoid Down(int u) {\n    int leftSon = u << 1, rightSon = leftSon + 1;\n    /*u<<1 == u*2, \u81f3\u4e8eleft\u548cright\u7684\u7ed3\u679c\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5199\uff0c\u53ef\u4ee5\u7a0d\u5fae\u60f3\u4e00\u60f3*/\n    if (leftSon > num) return;//\u5982\u679cleft\u5728\u4e2a\u6570\u4ee5\u5916\uff0c\u5c31\u8bf4\u660e\u6ca1\u6709left\uff0creturn\uff1b\n    int smallSon = rightSon;//\u5c0f\u7684\u513f\u5b50\uff0c\u6bcf\u6b21\u4e0b\u964d\u65f6\uff0c\u5c3d\u91cf\u5f80\u5c0f\u7684\u65b9\u5411\u4e0b\u964d\u3002\u3002\n    if ((rightSon > num) || (heap[leftSon] < heap[rightSon])) smallSon = leftSon;//\u53f3\u513f\u5b50\u4e0d\u5b58\u5728||\u5de6\u513f\u5b50\u6bd4\u53f3\u513f\u5b50\u66f4\u4f18\n    /*\u4e0a\u9762\u8bf4\u6284\u6f0f\u7684\u5c31\u662f\u4e0b\u9762\u8fd9\u4e00\u53e5\uff0c\u610f\u601d\u662f\uff1a\u5f53 \u5f53\u524d\u70b9 \u6bd4\u513f\u5b50\u8282\u70b9\u66f4\n     *\u5c0f\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2aheap\u5df2\u7ecf\u662f\u4e00\u4e2a\u5806\uff0c\u8981return\uff1b\n    */\n    if (heap[u]<heap[smallSon]) return;\n    std::swap(heap[smallSon], heap[u]);\n    Down(smallSon);    \n}\n\nvoid Delete(int u) {\n    heap[u] = heap[num--];//\u5c06heap[num]\u63d0\u4e0a\u6765\uff0c\u8986\u76d6\u6389heap[u]\uff0c\u5e76\u51cf\u5c11num\u4e2a\u6570\uff0c\n    Down(u);//\u5c06\u63d0\u4e0a\u6765\u7684heap[num]\u4e0b\u6c89\n}\n\nvoid Insert(int data) {\n    heap[++num] = data;\n    Up(num);\n}\n\nint main() {\n//    freopen(\"testdata.in\",\"r\",stdin);\n//    freopen(\"456.out\",\"w\",stdout);\n    /*\u4e0a\u9762\u7684\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u662f\u5bf9\u62cd\u7528\u7684\uff0c\u7136\u800c\u6211\u4e00\u5f00\u59cb\u5bf9\u7684\u65f6\u5019\n     *\u7b2c\u4e00\u4e2a\u968f\u673a\u6570\u636e\u90fd\u6ca1\u8fc7\uff0c\u611f\u89c9\u968f\u4fbf\u51fa\u4e00\u4e2a\u6570\u636e\u5c31\u80fd\u88ab\u5361\u3002\u3002qwq\n     */\n    int N;\n    cin >> N;\n    for (int i = 1; i <= N; ++i) {\n        int data;\n        cin >> data;\n        Insert(data);//\u63d2\u5165\u91cd\u91cf\n    }\n\n//     debug1();\u8c03\u8bd5\u4e13\u7528\n\n    long long ans = 0;\n\n    while (num >= 2) {//\u5f53heap\u4e2d\u67092\u4e2a\u6216\u4ee5\u4e0a\u5143\u7d20\u65f6\uff0c\u624d\u80fd\u6709\u4e24\u5806\n        int a = heap[1];\n        Delete(1);//\u5220\u6389\u5806\u5934\uff08\u6700\u5c0f\u7684\u5143\u7d20\uff09\u5e76\u7ef4\u62a4\u5806\u3002\u3002\n        int b = heap[1];\n        Delete(1);\n//        std::cerr << ans << \"\\n\";\n        ans += (a + b);\n        Insert(a + b);//\u5c06\u5408\u5e76\u51fa\u7684\u65b0\u5806a+b\u518d\u653e\u5165\u5806\u4e2d\n   //     debug1();\n    }\n    \n    cout << ans << std::endl;//\u8f93\u51fa\u4f53\u529b\u503c\u3002\n//     fclose(stdin);\n    return 0;\n}\n\n```\n\n\u867d\u7136\u6211\u770b\u8fd9\u4e2a\u80fd\u770b\u61c2\u3002\u3002\u4f46\u662f\u6211\u77e5\u9053\u80af\u5b9a\u5730\u65b9\u6211\u6ca1\u6709\u5199\u597d\u3002\u3002\u6240\u4ee5\u3002\u3002\u53ef\u4ee5\u79c1\u4fe1\u5411\u6211\u63d0\u610f\u89c1\u3002\u3002\n\n\n\u8c22\u8c22\u89c2\u8d4f\u3002\u3002\n",
        "postTime": 1517136532,
        "uid": 51211,
        "name": "yjxyjx",
        "ccfLevel": 0,
        "title": "\u5408\u5e76\u679c\u5b50\uff08NOIP2004\uff09"
    },
    {
        "content": "\u672c\u9898\u663e\u7136\u9700\u8981\u4f18\u5148\u961f\u5217/\u5806\u7684\u7ed3\u6784\u6765\u5199\uff0c\u4f46\u662f\u2026\u2026\n\n\u6211\u4eec\u5047\u60f3:\u90aa\u6076\u7684\u51fa\u9898\u4eba\u84c4\u610f\u8981\u5361stl::priority\\_queue\u2026\u2026\n\n\u4e43\u81f3\u51fa\u9898\u4eba\u7684\u6570\u636e\u5927\u5f97\u8fde\u624b\u5199\u5806\u90fd\u65e0\u6cd5\u627f\u53d7(\u770bBZOJ3040)\u5f97\u8bdd\u2026\u2026\n\n\u96be\u9053\u8981\u624b\u5199\u6590\u6ce2\u90a3\u5951\u5806?\u65e0\u6cd5\u60f3\u8c61\u2026\u2026\n\n\u6551\u661f\u5728\u8fd9\u91cc\uff01\n\n\u6211\u4eec\u770b\u5230\u4e86\u4e07\u80fd\u7684pb\\_ds(\u4e0d\u662f\u5e73\u677f\u7535\u89c6)\u5e93\uff01\n\n\u5b83\u6709hash,red\\_black\\_tree,splay,trie,\u2026\u2026\n\n\u8fd8\u6709priority\\_queue!\n\n\n\nhttps://gcc.gnu.org/onlinedocs/libstdc++/ext/pb\\_ds/\n\n\u5728\u6b64\u7f51\u7ad9\u4e2d\uff0cpb\\_ds\u5e93\u7684\u529f\u80fd\u4e0e\u7279\u6027\u88ab\u8be6\u7ec6\u89e3\u6790\uff08\u867d\u7136\u662f\u82f1\u8bed\u2026\u2026\uff09\n\n\u8bfb\u8d44\u6599\u6613\u77e5\uff1a\n\npairing\\_heap\\_tag \u662f\\_\\_gun\\_pbds\u5e93\u4e2dpriority\\_queue\u7684\u5e38\u7528\u9009\u9879\uff0c\u5bf9\u4e8e\u64cd\u4f5cpush\u4e0ejoin(\u4e0b\u9762\u8bb2\uff0c\u5148\u62ff\u4ee3\u7801\u6ee1\u8db3\u4f60)\u7684\u5747\u644a\u6e10\u8fdb\u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u9700O(1)\uff0c\u5176\u4f59\u64cd\u4f5c\u4ea6\u4ec5\u9700O(log(2)n)\u3002\u4e00\u770b\uff0c\u8fd9\u4e0d\u5c31\u5f88\u5feb\u5417\uff1f\u679c\u65ad\u4e0a\uff01\u4e8e\u662f\u6211\u4eec\u6709\u4e86\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/priority_queue.hpp>//\u7279\u522b\u7684\u5934\u6587\u4ef6\nusing namespace std;\nusing namespace __gnu_pbds;//\u7279\u522b\u7684\u547d\u540d\u7a7a\u95f4\n__gnu_pbds::priority_queue<int,greater<int>,pairing_heap_tag>q;//\u7559\u610f\u5b9a\u4e49\u65b9\u5f0f\uff1a\u7b2c\u4e8c\u4e2a\u53ef\u4ee5\u91cd\u8f7d\uff0c\u53ef\u4ee5\u7528stl\u8fd0\u7b97\u7b26\uff1b\u7b2c\u4e09\u4e2a\u662ftag\nint n,a,x,y,ans;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a),q.push(a);\n    for(int i=1;i<n;i++){\n        x=q.top();\n        q.pop();\n        y=q.top();\n        q.pop();//\u53d6\u524d\u4e8c\u5143\u7d20\n        ans+=(x+y);\n        q.push(x+y);//\u5c06\u5408\u5e76\u6210\u7684\u679c\u5b50\u538b\u56de\u961f\u5217\n    }\n    printf(\"%d\\n\",ans);\n}//\u4ee5\u4e0a\u662f\u5341\u5206\u6709\u9650\u7684\u5e94\u7528\uff0c\u66f4\u591a\u7528\u6cd5\uff0c\u53ef\u53c2\u8003\u7f51\u7edc\u8d44\u6599\n```\n\u00b7\u00b7\u00b7\n\n\u662f\u7684\uff0c\u548c\u4e00\u822c\u7684priority\\_queue\u6781\u5ea6\u76f8\u4f3c\u2026\u2026\u4f46\u662f\u5728\u672a\u4e88\u5f00\u542fO(2)\u4f18\u5316\u7684\u6761\u4ef6\u4e0b\uff0c\u8fd0\u7528stl::priority\\_queue\u7684\u7528\u65f6\u5408\u8ba188ms,\u4f46\u8fd0\u7528\\_\\_gun\\_pbds::priority\\_queue(paring\\_heap\\_tag)\u7684\u7a0b\u5e8f\u4ec5\u970048ms!\n\n\u5c31\u6392\u540d\u800c\u8a00\uff0c48ms\u53ef\u5360\u524d20%,88ms\u5219\u53ef\u80fd\u8dcc\u51fa\u524d33%\uff01\n\n\u4e0b\u9644\\_\\_gun\\_pbds\u5e93\u5404\u79cdheap\\_tag\u7684\u7279\u70b9\uff1a\n\npairing\\_heap\uff1a\u89c1\u4e0a\uff08join\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u53ef\u89c1\u5de6\u504f\u5806\u9898\u89e3\uff0c\u6b64\u5904\u4e0d\u505a\u5c55\u5f00\uff09\n\nthin\\_heap\uff1a\u76f8\u5f53\u4e8e\u6590\u6ce2\u90a3\u5951\u5806\uff0c\u4f46\u6d4b\u8bd5\u7ed3\u679c\u7591\u4f3c\u6bd4stl\u66f4\u6162\u2026\u2026\u4e0d\u652f\u6301join,push\u4e3aO(1),\u5176\u4f59\u4e3aO(log(2)n)\n\nbinary\\_heap:\u4ec5\u652f\u6301push,pop,\u5747\u4e3aO(log(2)n)(\u5b9e\u9645\u6781\u6162\uff0c\u672c\u9898\u5b9e\u6d4b50%TLE)\n\n\nbinomial\\_heap:push\u4e3aO(1),\u5176\u4f59\u4e3a\u0398(log n)\n\n\u5728\u6b64\u518d\u6b21\u5f3a\u70c8\u63a8\u8350pairing\\_heap(\u53ef\u5e76\u5806)\u4e0ethin\\_heap\uff08\u4f18\u5316dijkstra\u7684\u6590\u6ce2\u90a3\u5951\u5806\uff09\uff01\n\n\n\u6700\u540e\u7684\u6700\u540e\uff0c\u5927\u7231stl\uff0c\u5927\u7231pbds.\n\n\u540c\u65f6\u611f\u8c22\u6765\u81ea\u5927\u8fde\u5e02\u7b2c\u4e8c\u5341\u56db\u4e2d\u5b66\u4e8e\u7eaa\u5e73\u6559\u7ec3\u5728WC2015\u8425\u5458\u4ea4\u6d41\u4e2d\u7684PDF\u8bb2\u7a3f\uff01\n",
        "postTime": 1516710851,
        "uid": 62562,
        "name": "B_1168",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\uff1a\n\n\u6bcf\u6b21\u53d6\u51fa\u4e24\u4e2a\u6700\u5c0f\u7684\u5408\u5e76 \u540e\u518d\u53d8\u4e3a\u4e00\u4e2a\u518d\u63d2\u5165\u9012\u589e\u5e8f\u5217\u91cc\n\n\u7531\u4e8e\u4e00\u76f4sort\u4f1a\u8d85\u65f6(30\u5206 7\u4e2aTLE)\n\n\u6240\u4ee5\u76f4\u63a5\u5c1d\u8bd5\u4e86\u4e00\u4e0b\u63d2\u5165\u6392\u5e8f\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <memory.h>\nint n;\nint Ft[10000];\nint Fte;    //\u5f53\u524d\u5e8f\u5217\u91cc\u6570\u7684\u4e2a\u6570\nint Out;\nvoid Input()  //\u8f93\u5165\u53ca\u521d\u59cb\u5316\n{\n    scanf(\"%d\",&n);\n    int wi;\n    for(wi=0;wi<n;++wi)\n        scanf(\"%d\",Ft+wi);\n    std::sort(Ft,Ft+n);\n    Fte=n;\n}\nvoid Stuck(int na)  //\u628a\u4e00\u4e2a\u6570\u63d2\u5165\u6709\u5e8f\u6570\u7ec4\u4e2d\uff0c\u65b9\u4fbf\u8d77\u89c1\u6ca1\u7528\u4e8c\u5206\u67e5\u627e\u6216\u8005lower_bound\n{\n    Fte-=2;    \n    if(Fte==0)\n    {\n        Ft[0]=na;\n        ++Fte;\n        return;\n    }\n    memmove(Ft,Ft+2,(Fte)*4);\n    if(Ft[Fte-1]<=na)\n    {\n        Ft[Fte]=na;\n        ++Fte;\n        return;\n    }\n    int wi=0;\n    while(Ft[wi]<na)++wi;\n    memmove(Ft+wi+1,Ft+wi,(Fte-wi)*4);\n    Ft[wi]=na;\n    ++Fte;\n    return;\n}\nint main()\n{\n    Input();\n    int bf;\n    while(1)\n    {\n        if(Fte==1)     //\u8fb9\u754c\u6761\u4ef6\u2014\u2014\u5e8f\u5217\u91cc\u53ea\u6709\u4e00\u4e2a\u6570\uff08\u53ea\u6709\u4e00\u5806\u67d0\u4e1c\u897f\uff09\u9000\u51fa\n            break;\n        bf=Ft[0];        //\u53d6\u51fa\u524d\u4e24\u4e2a\u6700\u5c0f\u7684\n        bf+=Ft[1];\n        Out+=bf;\n        Stuck(bf);\n    }\n    printf(\"%d\",Out);\n    return 0;\n}\n```",
        "postTime": 1478014031,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u7528\u5806(\u867d\u7136\u6211\u7528\u5f97\u4e0d\u597d\uff0c\u4f46\u6211\u4e5f\u53ea\u4f1a\u8fd9\u65b9\u6cd5\u4e86)\uff0c\u8fd8\u662f\u5f88\u9ad8\u6548\u7684\n\n```delphi\n\nvar\n  n,i,ans:longint;\n  a:array[0..10000] of longint;\n\nprocedure swap(var x,y:longint);\nvar t:longint;\nbegin\n  t:=x;\n  x:=y;\n  y:=t;\nend;\n\nprocedure wh(i:longint);\nbegin\n  while a[i]<a[i div 2] do\n  begin\n    swap(a[i],a[i div 2]);\n    i:=i div 2;\n  end;\nend;\n\nprocedure wh2(i:longint);\nbegin\n while i*2<=n do\n begin\n  i:=i*2;\n  if (a[i]>a[i+1])and(i+1<=n) then inc(i);\n  if a[i]<a[i div 2] then swap(a[i],a[i div 2])\n  else exit;\n end;\nend;\n\nbegin\n  readln(n);\n  for i:=1 to n do\n  begin\n    read(a[i]); //\u52a0\u5165\u5806\n    wh(i); //\u4fdd\u6301\u6700\u5c0f\u5806\n  end; \n\n  while n>1 do //n=1\u8bf4\u660e\u5408\u5e76\u5b8c\u4e86\n  begin\n   swap(a[1],a[n]);\n   dec(n);\n   wh2(1); //\u627e\u51fa\u7b2c\u4e8c\u5c0f\u7684\uff0c\u540c\u65f6\u4fdd\u6301\u6700\u5c0f\u5806\n   inc(a[1],a[n+1]); //\u5408\u5e76\u4e24\u4e2a\u6700\u5c0f\u6570\n   inc(ans,a[1]);  //\u8ba1\u7b97\u7b54\u6848\n   wh2(1); //\u4fdd\u6301\u6700\u5c0f\u5806\n  end;\n\n  writeln(ans);\nend.\n\n```",
        "postTime": 1446859645,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u770b\u5230\u5408\u5e76\u679c\u5b50\u8fd9\u9053\u9898\u76ee\uff0c\u679c\u65ad\u7528\u5806\u6392\u3002\n\n\u5176\u5b9e\u5355\u8c03\u961f\u5217\u4e5f\u80fd\u8fc7\uff0c\u800c\u4e14\u4ee3\u7801\u590d\u6742\u5ea6\u5f88\u4f4e\u5f88\u4f4e\uff08\u81f3\u5c11\u6bd4\u5806\u4f4e\uff09\uff0c\u4f46\u662f\u6211\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u5806\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u4e1c\u897f\u3002\u5b83\u53ef\u4ee5\u7528logn\u7684\u65f6\u95f4\u5b8c\u6210\u63d2\u5165\u548c\u67e5\u8be2\uff0c\u56e0\u6b64\u8fd9\u91cc\u8bb2\u8ff0\u4e00\u4e0b\u5806\u6392\u3002\u4ee5\u6700\u5c0f\u5806\u4e3a\u4f8b\u3002\n\n\n\n\u6982\u5ff5\uff1a\u9996\u5148\u5806\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff08\u4e0d\u89e3\u91ca\u4e86\uff09\uff0c\u6bcf\u4e00\u68f5\u5b50\u6811\u90fd\u5fc5\u987b\u4fdd\u8bc1\u6839\u8282\u70b9<=\u53f6\u8282\u70b9\uff0c\u6bcf\u4e00\u523b\u5b50\u6811\u90fd\u7b26\u5408\u8fd9\u6837\u89c4\u5f8b\u7684\u5806\u88ab\u79f0\u4e3a\u6700\u5c0f\u5806\u3002\n\n\n\u63d2\u5165\uff1a\u9996\u5148\u628a\u8fd9\u4e2a\u8282\u70b9\u653e\u5728\u6700\u540e\uff0c\u7136\u540e\u9010\u4e00\u4e0e\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u4e0d\u65ad\u5730\u4ea4\u6362\uff0c\u76f4\u5230\u5230\u8fbe\u6839\u8282\u70b9\u6216\u4e0d\u80fd\u4ea4\u6362\u4f4d\u7f6e\u4e3a\u6b62\uff08\u5373\u6bd4\u7236\u8282\u70b9\u5927\u4e86\uff09\uff0c\u7531\u4e8e\u6700\u591alogn\u5c42\uff0c\u6240\u4ee5\u5bf9\u4e8en\u4e2a\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3anlongn\n\n\n\u8f93\u51fa\uff1a\u9996\u5148\u5c06\u6839\u8282\u70b9\u8f93\u51fa\uff0c\u7136\u540e\u5c06\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u653e\u5728\u6839\u8282\u70b9\u5904\uff0c\u8c03\u6574\u5806\uff0c\u5373\u5c06\u8fd9\u4e2a\u8282\u70b9\u4e0d\u65ad\u5411\u4e0b\u627e\u3002\u76f4\u5230\u6ee1\u8db3\u6700\u5c0f\u5806\u7684\u6027\u8d28\u4e3a\u6b62\u3002\n\n\n\u8865\u5145\uff1a\u5bf9\u4e8e\u6ca1\u4e00\u4e2a\u8282\u70b9\uff08\u6839\u8282\u70b9\u9664\u5916\uff09\uff0c\u5176\u7236\u8282\u70b9\u7f16\u53f7\u4e3ai div 2\uff0c\u5b69\u5b50\u8282\u70b9\uff08\u53f6\u8282\u70b9\u9664\u5916\uff09\u4e3a2i\u4ee5\u53ca2i+1\n\n  \n\u73b0\u5728\u5c31\u662f\u5408\u5e76\u679c\u5b50\u4e86\uff0c\u9996\u5148\u5c06\u6700\u5c0f\u7684\u4e24\u4e2a\u8282\u70b9\u5408\u5e76\uff0c\u5373\u5c061\u30012\u62161\u30013\u5408\u5e76\u3002\u7136\u540e\u5c06\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u653e\u5728\u9996\u4f4d\uff0c\u5c06\u8fd9\u4e2a\u5408\u5e76\u597d\u7684\u8282\u70b9\u653e\u5728\u7b2c\u4e8c\u4f4d\uff0c\u4e0d\u65ad\u8c03\u6574\u5806\u5373\u53ef\u3002\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(NlogN\uff09\n\n\n\u8be6\u7ec6\u7b97\u6cd5\u89c1\u6807\u7a0b\uff1a\n\n```cpp\nvar\n  n,i,ans,k,ii,t,kk:longint;\n  a:array[0..100000] of longint;\nbegin\n  read(n);\n  for i:=1 to n do\n    begin\n      read(a[i]);\n      k:=i;\n      while (k>1) and (a[k]<a[k shr 1]) do//\u5982\u679c\u80fd\u8c03\u6574\n        begin\n          t:=a[k];\n          a[k]:=a[k shr 1];\n          a[k shr 1]:=t;\n          k:=k shr 1;//\u66f4\u65b0\u5b83\u7684\u4f4d\u7f6e\n        end;//\u8c03\u6574\u5806\n    end;//\u5efa\u7acb\u4e00\u4e2a\u6700\u5c0f\u5806\n  for i:=n downto 2 do\n    begin\n      if i=2 then k:=2 else\n      if a[2]<a[3] then k:=2 else k:=3;//\u53d6\u4e24\u4e2a\u4e2d\u5c0f\u7684\u90a3\u4e2a\n      a[k]:=a[1]+a[k];\n      ans:=ans+a[k];//\u7d2f\u52a0\u6240\u9700\u7684\u529b\u6c14\n      if i=2 then break;//\u5408\u5e76\u5b8c\u6210\uff0c\u9000\u51fa\u5e76\u8f93\u51fa\n      a[1]:=a[i];\n      a[i]:=maxlongint;//\u6ce8\u610f\u8981\u5c06\u8fd9\u4e2a\u70b9\u8d4b\u4e3amaxlongint\uff0c\u5426\u5219\u8fd9\u4e2a\u70b9\u53ef\u80fd\u88ab\u91cd\u590d\u8ba1\u7b97\n      while (k<(i+1) shr 1) and ((a[k]>a[k shl 1+1]) or (a[k]>a[k shl 1])) do\n        begin\n          if a[k shl 1+1]>a[k shl 1] then k:=k shl 1 else k:=k shl 1+1;\n          t:=a[k];\n          a[k]:=a[k shr 1];\n          a[k shr 1]:=t;\n        end;//\u9996\u5148\u8c03\u6574\u7b2c\u4e8c\u4e2a\u8282\u70b9\n      k:=1;\n      while (k<(i+1) shr 1) and ((a[k]>a[k shl 1+1]) or (a[k]>a[k shl 1])) do\n        begin\n          if a[k shl 1+1]>a[k shl 1] then k:=k shl 1 else k:=k shl 1+1;\n          t:=a[k];\n          a[k]:=a[k shr 1];\n          a[k shr 1]:=t;\n        end;//\u518d\u8c03\u6574\u6839\u8282\u70b9\n    end;\n  writeln(ans);\nend.\n```",
        "postTime": 1381143103,
        "uid": 734,
        "name": "lych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u4e4d\u770b\uff0c\u5f88\u6c34\u7684\u8d2a\u5fc3\uff1a\u6bcf\u6b21\u5c06\u6700\u5c0f\u4e24\u961f\u5408\u5e76\u4e3a\u4e00\u5806\n\n\u518d\u4e00\u7f16\uff1aTLE~~\u6211\u53bb~~\n\n\u4e8e\u662f\u5c31\u5f97\u7528\u5230\u4f18\u5148\u961f\u5217\n\n~~\u672c\u4eba\u4e0d\u662f\u5f88\u61c2\uff0c\u8bf7\u6559\u4e86\u65c1\u4eba~~\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,s,t;\npriority_queue<int, vector<int>,greater<int> >q;//\u4f18\u5148\u961f\u5217 \nint main(){\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tcin>>t;\n\t\tq.push(t);//\u5165\n\t}\n\tfor(int i=n;i>1;i--){\n\t\tt=q.top();\n\t\tq.pop();//\u51fa\n\t\tt+=q.top();//\u5355\u6b21\u529b\n\t\tq.pop();\n\t\ts+=t;//\u52a0\u5165\u603b\u503c\n\t\tq.push(t);//\u5165\u5408\u5e76\u597d\u7684\u5806\n\t}\n\tcout<<s;//\u8f93\u51fa\n\treturn 0;\n}\n```\n\u4e0b\u6b21\u4e0d\u89c1",
        "postTime": 1564970271,
        "uid": 220678,
        "name": "Terrific_Year",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "- \u8d2a\u5fc3+\u5229\u7528\u6700\u5c0f\u5806\u7684\u8981\u6c42\uff08\u5c31\u662f\u6240\u6709\u7236\u7ed3\u70b9\u90fd\u6bd4\u5b50\u7ed3\u70b9\u8981\u5c0f\uff09\n\n- \u8d2a\u5fc3\u5c31\u662f\u5bf9\u4e24\u4e2a\u679c\u5b50\u6570\u5c11\u7684\u5806\u8fdb\u884c\u5408\u5e76\n\n- \u6700\u5c0f\u5806\u7684\u8981\u6c42\u6211\u5728\u4ee3\u7801\u5b9e\u73b0\u7684\u65f6\u5019\u662f\u6309\u7236\u7ed3\u70b9\u5c0f\u4e8e\u7b49\u4e8e\u5b50\u7ed3\u70b9\u6765\u89c4\u5b9a\u7684\uff0c\u81f3\u4e8e\u539f\u56e0QWQ.....\u753b\u51e0\u4e2a\u8fc7\u7a0b\u56fe\u81ea\u7136\u5c31\u77e5\u9053\u4e86\n\n- list[i] = 0\uff0c\u8868\u793a\u5220\u53bb\u4e00\u4e2a\u7ed3\u70b9\uff0c\u4e5f\u5c31\u662f\u5220\u53bb\u4e00\u4e2a\u5806\n\n- \u4ee5\u4e0a\u51e0\u70b9\u660e\u767d\u4e4b\u540e\u5c31\u53ef\u4ee5\u64b8\u4ee3\u7801\u5566\n\n------------\n```c\n#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nvoid swap1(int list[],int i,int j){ //\u4ea4\u6362\u7236\u7ed3\u70b9\u548c\u5de6\u513f\u5b50\u7ed3\u70b9 \n\tint t = list[j];\n\tlist[j] = list[i];\n\tlist[i] = t;\n}\n\nvoid swap2(int list[],int i,int j){ //\u4ea4\u6362\u7236\u7ed3\u70b9\u548c\u53f3\u513f\u5b50\u7ed3\u70b9 \n\tint t = list[j];\n\tlist[j] = list[i+1];\n\tlist[i+1] = t;\n}\n\nint cmp(const void *a,const void *b){ \n\treturn *(int*)a-*(int*)b;\n}\n\nint main(){\n\tint num[10000],list[10000]; //list\u662f\u7528\u6765\u5b58\u50a8\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u7684\u503c\n\tint n,sum = 0;\n\tint i,j;\n\t\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%d\", &num[i]);\n\t}\n\tqsort(num,n,sizeof(int),cmp); //\u5148\u5feb\u6392\u4e00\u4e0b,\u5f97\u5230\u521d\u59cb\u72b6\u6001\u4e0b\u7684list \n\tfor(i = 0; i < n; i++){ //\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u8d4b\u503c \n\t\tlist[i] = num[i];\n\t}\n\twhile(n > 1){\n\t\tif((list[1]<=list[2]) || (list[2]==0)){ //\u6839\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u6216\u6839\u7ed3\u70b9\u53ea\u6709\u5de6\u513f\u5b50\u7ed3\u70b9 \n\t\t\tlist[0] += list[1];\n\t\t\tlist[1] = 0;\n\t\t}\n\t\telse{ //\u6839\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u5927\u4e8e\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c \n\t\t\tlist[0] += list[2];\n\t\t\tlist[2] = 0;\n\t\t}\n\t\tj = 0; //\u521d\u59cb\u5316 \n\t\tsum += list[0]; //\u52a0\u4e0a\u6839\u7ed3\u70b9\u7684\u503c\n\t\tif(n == 2){ //\u53ea\u6709\u4e24\u4e2a\u7ed3\u70b9\u4e14\u662f\u6839\u7ed3\u70b9\u548c\u5de6\u513f\u5b50\u7ed3\u70b9 \n\t\t\tbreak;\n\t\t}\n\t\tfor(i = 0; i < n; i++){ //\u56e0\u4e3a\u5f80list\u91cc\u65b0\u63d2\u5165\u4e86\u4e00\u4e2a\u503c,\u90a3\u4e48\u6b64\u65f6\u5c31\u5f97\u91cd\u65b0\u521b\u5efalist\n\t\t\tif(list[i] != 0){ //\u7ed3\u70b9\u4e0a\u7684\u503c\u4e0d\u4e3a0\n\t\t\t\tif(j >= 3 && i+1 < n){ //\u6839\u7ed3\u70b9\u4e0d\u5224\u4e14\u4e0d\u80fd\u8d8a\u754c \n\t\t\t\t\tint fu = ceil((i-1)/2.0)-1; //\u7b2ci\u4e2a\u7ed3\u70b9\u7684\u7236\u7ed3\u70b9\u7684\u4e0b\u6807\n\t\t\t\t\tif(list[fu] > list[i] && list[fu] <= list[i+1]){ //\u7236\u7ed3\u70b9\u7684\u503c\u5927\u4e8e\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u4e14\u7236\u7ed3\u70b9\u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c \n\t\t\t\t\t\tswap1(list,i,fu);\n\t\t\t\t\t}\n\t\t\t\t\tif(list[fu]>list[i+1] && list[fu] <= list[i]){ //\u7236\u7ed3\u70b9\u7684\u503c\u5927\u4e8e\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u4e14\u7236\u7ed3\u70b9\u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u503c \n\t\t\t\t\t\tswap2(list,i,fu);\n\t\t\t\t\t}\n\t\t\t\t\tif(list[fu] > list[i] && list[fu] > list[i+1]){ //\u7236\u7ed3\u70b9\u7684\u503c\u5927\u4e8e\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u4e14\u4e5f\u5927\u4e8e\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c \n\t\t\t\t\t\tif(list[i] <= list[i+1]){ //\u7236\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c \n\t\t\t\t\t\t\tswap1(list,i,fu);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{ //\u7236\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u5927\u4e8e\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c \n\t\t\t\t\t\t\tswap2(list,i,fu);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlist[j] = list[i]; \n\t\t\t\tj++; //list\u7684\u957f\u5ea6\u589e\u52a0 \n\t\t\t}\n\t\t\tif(i >= n-1){\n\t\t\t\tlist[i] = 0; //\u628a\u591a\u51fa\u6765\u7684\u7ed3\u70b9\u7684\u503c\u7f6e\u4e3a0 \n\t\t\t}\n\t\t}\n\t\ti = 0;\n\t\twhile(((list[i]>list[2*i+1]&&list[2*i+1]>0)||(list[i]>list[2*i+2]&&list[2*i+2]>0)) && (2*i+1<n-1||2*i+2<n-1)){ //\u8ba9list\u91cc\u9762\u6240\u6709\u7684\u7236\u8282\u70b9\u7684\u503c\u59cb\u7ec8\u662f\u5c0f\u4e8e\u7b49\u4e8e\u5de6\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c \n\t\t\tif((list[2*i+1]<=list[2*i+2]) || (list[2*i+2]==0)){ //\u7236\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u6216\u53ea\u6709\u5de6\u513f\u5b50\u7ed3\u70b9\u6ca1\u6709\u53f3\u513f\u5b50\u7ed3\u70b9 \n\t\t\t\tint t = list[i];\n\t\t\t\tlist[i] = list[2*i+1];\n\t\t\t\tlist[2*i+1] = t;\n\t\t\t\ti = 2*i+1;\n\t\t\t}\n\t\t\telse{ //\u7236\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7ed3\u70b9\u7684\u503c\u5927\u4e8e\u53f3\u513f\u5b50\u7ed3\u70b9\u7684\u503c\n\t\t\t\tint t = list[i];\n\t\t\t\tlist[i] = list[2*i+2];\n\t\t\t\tlist[2*i+2] = t;\n\t\t\t\ti = 2*i+2;\n\t\t\t}\n\t\t}\n\t\tn--; //\u6bcf\u4e24\u4e2a\u7ed3\u70b9\u5408\u5e76\u4e00\u6b21,\u603b\u7ed3\u70b9\u6570\u5c31\u4f1a\u5c111 \n\t}\n\tprintf(\"%d\", sum);\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1555170765,
        "uid": 189467,
        "name": "\u5317\u5317\u5317\u5317",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u770b\u4e0d\u61c2\u5404\u4f4d\u5927\u4f6c\u7684\u505a\u6cd5\uff0c\u6709\u4eba\u8bf4\u6bcf\u6b21\u90fd\u6392\u5e8f\u4f1a\u8d85\u65f6\uff0c\u6211\u5c31\u6ca1\u6562\u7528sort\uff0c\u6211\u53ea\u662f\u7528\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u5192\u6ce1\u7684\u7b80\u5355\u6392\u5e8f\u3002\uff08\u7b97\u662f\u9012\u5f52\u5427\uff09\n\n\u9001\u4e0a\u4ee3\u7801\uff1a\n\n------------\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint a[10005];\nint ans=0;\nint rear,front_=1;\nvoid put_(){//\u5408\u5e76\u679c\u5b50\u7684\u51fd\u6570\n    if(rear==front_){//\u7ec8\u6b62\u6761\u4ef6\n\n        return;\n    }\n    else{\n        a[front_+1]+=a[front_];//\u5408\u5e76\n        ans+=a[front_+1];//\u8ba1\u6570\n        front_++;\n        int num=front_;\n        while(a[num]>=a[num+1]&&num<rear){//\u5c0f\u6392\u5e8f\n            swap(a[num],a[num+1]);\n            num++;\n        }\n        put_();//\u9012\u5f52\u8c03\u7528\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>a[i];\n    }\n    rear=n;\n    sort(a+1,a+n+1);\n    put_();\n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1542500738,
        "uid": 144379,
        "name": "daihang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "emmm.....\u67d0\u8c37\u6700\u5f31\u7684\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3.....\n\u9996\u5148\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u9898\u3002\u5173\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4e0d\u4f1a\u5404\u4f4d\u5927\u4f6c\u4eec\u8bf4\u7684\u6876\u6392\uff0c\u4e5f\u4e0d\u4f1a\u4ec0\u4e48\u4e71\u4e03\u516b\u7cdf\u7684\u795e\u5947\u64cd\u4f5c\u3002(~~\u8fd8\u4e0d\u662f\u6211\u592a\u5f31\u4e86~~)      \n\u6211\u60f3\u4e86\u60f3\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u5427\uff0c\u7528\u4f18\u5148\u961f\u5217\u5c31\u597d\u4e86\uff0cstl\u53ef\u4ee5\u5e2e\u6211\u4eec\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\uff0cstl\u91cc\u9762\u9ed8\u8ba4\u7684\u662f\u961f\u9996\u662f\u6700\u5927\u7684\u5143\u7d20\uff0c\u5982\u679c\u4e0d\u52a0\u5904\u7406\u7684\u8bdd\uff0c\u4f1a\u5bfc\u81f4\u7b97\u7684\u7ed3\u679c\u4e0e\u9898\u76ee\u8981\u6c42\u5b8c\u5168\u76f8\u53cd\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u53d6\u53cd\uff0c\u7136\u540e\u52a0\u5165\uff0c\u53d6\u51fa\u7684\u65f6\u5019\u518d\u53d6\u53cd\u4e00\u904d\uff0c\u5c31\u6210\u4e86\u539f\u6765\u7684\u5143\u7d20\uff0c\u800c\u4e14\u961f\u5217\u53d8\u6210\u4e86\u961f\u9996\u662f\u6700\u5c0f\u5143\u7d20\uff08\u53d6\u53cd\u4e4b\u540e\uff09    \n\u4e3a\u4ec0\u4e48\u5462\uff1f\uff1f             \n\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u6c42\u8bc1\u7684\uff1b   \n\u9996\u5148\uff0c\u5047\u8bbe\u6709\u4e09\u4e2a\u5806\uff0c\u4ee3\u4ef7\u4e3aa\uff0cb\uff0cc\uff1b    \n\u8bbea>b>c;\n\u5982\u679c\u76f4\u63a5\u4ecea\u5230b\u518d\u5230c\u5408\u5e76\uff0c\u5176\u4ee3\u4ef7\u4e3a   \n(a+b)+[(a+b)+c]=2a+2b+c\uff1b   \n\u5982\u679c\uff0c\u6211\u4eec\u5148\u5408\u5e76b\u548cc\uff0c\u5176\u4ee3\u4ef7\u4e3a   \n(b+c)+[(b+c)+a]=2b+2c+a;   \n\u6211\u4eec\u53d1\u73b0\uff0c\u4e0a\u9762\u7684\u5f0f\u5b50\u662f\u5927\u4e8e\u4e0b\u9762\u7684\u5f0f\u5b50\u7684\uff1b   \n\u591a\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u4e5f\u65e0\u59a8\u3002   \n\u7136\u540e\u6211\u4eec\u8bc1\u5f97\uff0c\u6bcf\u6b21\u5408\u5e76\u5f53\u524d\u6700\u5c0f\u7684\u4e24\u5806\uff0c\u76f4\u5230\u5408\u5e76\u5b8c\u6bd5\uff0c\u5c31\u662f\u6211\u4eec\u7684\u95ee\u9898\u6240\u6c42\u89e3\u3002   \n\u7136\u540e\u3002\u3002\u3002\u3002\n\u628a\u961f\u5934\u53d6\u51fa\uff0c\u5f39\u6389\uff0c\u7136\u540e\u518d\u53d6\u4e00\u4e2a\uff0c\u5f39\u6389\uff0c\u518d\u52a0\u5165\u4e00\u4e2a\u3002\nemmm....(~~\u6211\u5c31\u662f\u8fd9\u4e48\u5f31\u554a\u3002\u3002\u3002~~)\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff08~~\u4e2a\u4eba\u8ba4\u4e3a\u7b80\u5355\u6613\u61c2~~\uff09\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<queue>\nusing namespace std;\npriority_queue<int >q;//\u4f18\u5148\u961f\u5217\nint main () {\n    int n,ans=0,t;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&t);\n        q.push(-t);//\u53d6\u53cd\u8bfb\u5165\n    }\n    while(n!=1){//\u53ea\u6709\u4e00\u5806\u65f6\uff0c\u5373\u5168\u90e8\u5408\u5e76\u5b8c\u6bd5\n        int o=0,s=0,he;//he\u662f\u8868\u793a\u5f53\u524d\u5408\u5e76\u4e24\u4e2a\u5806\u6240\u9700\u4ee3\u4ef7\n        o=q.top();\n        q.pop();\n        n--;//\u5408\u5e76\u4e00\u6b21\u603b\u5806\u6570\u51cf\u4e00\n        s=q.top();\n        q.pop();\n        he=-o-s;\n        q.push(-he);//\u53d6\u53cd\u538b\u5165\n        ans+=he;\n    }\n    cout<<ans;\n}\n```",
        "postTime": 1537975150,
        "uid": 39009,
        "name": "Time_grow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "\u672c\u9898\u8d2a\u5fc3\u7b56\u7565\u5c31\u662f\u6bcf\u6b21\u9009\u6700\u5c0f\u7684\u4e24\u4e2a\u5408\u5e76,\u53ef\u4ee5\u7528\u5f88\u591a\u65b9\u6cd5,\u6bd4\u8f83\u597d\u7684\u662f\u54c8\u592b\u66fc\u6570\u6216\u8005\u5806(\u4f18\u5148\u961f\u5217),stl\u5e93\u7684\u4f18\u5148\u961f\u5217\u592a\u6162\u4e8680ms\u8fc7,\u4e8e\u662f\u81ea\u5df1\u624b\u6253\u4e86\u4e00\u4e2a\u5c01\u88c5\u5728\u7ed3\u6784\u4f53\u91cc40ms,\u62ff\u51fa\u6765\u752820ms,\u6ce8\u91ca\u5199\u4ee3\u7801\u91cc\u4e86...(\u849f\u84bb\u52ff\u55b7)\n\n\u5c01\u88c5\u7248(\u6a21\u677f\u8c03\u7528\u65b9\u4fbf40ms\u9644\u6ce8\u91ca)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct my_priority {\n    vector<int>heap;\n    void init() {\n        heap.push_back(-1e9);//\u63d2\u5165\u6570\u7ec4\u4e0b\u6807\u4e3a0\u7684\u6570\u4fbf\u4e8e\u4e4b\u540e\u5404\u8282\u70b9\u8bbf\u95ee\u7236\u4eb2\u4ee5\u53ca\u5b69\u5b50\n    }\n    void gao(int pos) {      //\u4ece\u6839\u8282\u70b9\u5f80\u4e0b\u66f4\u65b0\u786e\u4fdd\u6ee1\u8db3\u5806\u7684\u6027\u8d28\n        int flag;\n        if(pos*2>heap.size()-1)return;\n        else if(pos*2==heap.size()-1)flag=0;\n        else flag=heap[pos*2]>heap[pos*2+1];\n        if(heap[pos]>heap[pos*2+flag]) {\n            swap(heap[pos],heap[pos*2+flag]);\n            gao(pos*2+flag);\n        }\n        return;\n    }\n    void doit(int i) {      //\u4ece\u5f53\u524d\u8282\u70b9\u5f80\u6839\u8282\u70b9\u66f4\u65b0\u786e\u4fdd\u6ee1\u8db3\u5806\u7684\u6027\u8d28\n        while(heap[i]<heap[i/2]) {\n            swap(heap[i],heap[i/2]);\n            i>>=1;\n        }\n        return;\n    }\n    void push(int w) {     //\u63d2\u5165\n        heap.push_back(w);\n        doit(heap.size()-1);\n    }\n    int top() {           //\u8fd4\u56de\u5806\u9876\n        return heap[1];\n    }\n    void pop() {          //\u5220\u9664\u5806\u9876\u5143\u7d20\n        heap[1]=heap[heap.size()-1];\n        heap.pop_back();\n        gao(1);\n    }\n    int size() {\n        return heap.size()-1;   //\u8fd4\u56de\u5806\u5143\u7d20\u4e2a\u6570\n    }\n} q;\nint main() {\n    int i,ans=0;\n    int n,tmp;\n    q.init();\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++) {\n        scanf(\"%d\",&tmp);\n        q.push(tmp);\n    }\n    while(q.size()>1) {\n        tmp=q.top();\n        q.pop();\n        tmp+=q.top();\n        q.pop();\n        ans+=tmp;\n        q.push(tmp);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\u62c6\u5c01\u7248(\u8dd1\u5f97\u5feb20ms)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint heap[100010],cnt;\nvoid gao(int pos)\n{\n    int flag=heap[pos*2]>=heap[pos*2+1];\n    if(heap[pos]>heap[pos*2+flag]){\n        swap(heap[pos],heap[pos*2+flag]);\n        gao(pos*2+flag);\n    }\n    return;\n}\nvoid doit(int i)\n{   while(heap[i]<heap[i/2])\n    {\n        swap(heap[i],heap[i/2]);\n        i/=2;\n    }\n    return;\n}\nvoid push(int w)\n{\n    heap[++cnt]=w;\n    doit(cnt);\n}\nint top()\n{return heap[1];}\nvoid pop()\n{\n    heap[1]=heap[cnt];heap[cnt]=1e9;\n    --cnt;gao(1);\n}\nint main()\n{\n    int i,ans=0;\n    {   memset(heap,127,sizeof heap);heap[0]=-1e9;\n        int n,tmp;ans=0;cnt=0;\n        scanf(\"%d\",&n);\n        for(i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&tmp);\n            push(tmp);\n        }\n        while(cnt>1)\n        {\n            tmp=top();pop();tmp+=top();pop();\n            ans+=tmp;push(tmp);\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1512798249,
        "uid": 51742,
        "name": "sigland",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    },
    {
        "content": "    \u81ea\u5df1\u521a\u5b66\u5806\uff0c\u6240\u4ee5\u5199\u4e00\u4e2a\u5806\u7684\u9898\u89e3\u3002\n    \u5c06\u8fd9\u4e2a\u95ee\u9898\u6362\u4e00\u4e2a\u89d2\u5ea6\u6765\u63cf\u8ff0\uff1a\u7ed9\u5b9an\u4e2a\u53f6\u8282\u70b9\uff0c\n    \u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u6743\u503cw[i]\uff0c\n    \u5c06\u4ed6\u4eec\u4e2d\u4e24\u4e2a\u4e24\u4e2a\u5408\u5e76\u6210\u6811\uff0c\n    \u5047\u8bbe\u6bcf\u4e2a\u8282\u70b9\u4ece\u6839\u5230\u4ed6\u7684\u8ddd\u79bb\u662fd[i]\uff0c\n    \u4f7f\u5f97\u6700\u7ec8(w[i]*d[i])\u6700\u5c0f\u3002\n    \u4e8e\u662f\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u6210\u4e86\u7ecf\u5178\u7684Huffman\u6811\u95ee\u9898\u3002\n    \u5f88\u663e\u7136\uff0c\u95ee\u9898\u5f53\u4e2d\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\u662f\uff1a\n    \uff081\uff09\u4ece\u4e00\u4e2a\u8868\u4e2d\u53d6\u51fa\u6700\u5c0f\u7684\u6570\uff1b\n    \uff082\uff09\u63d2\u5165\u4e00\u4e2a\u6570\u5b57\u5230\u8fd9\u4e2a\u8868\u4e2d\u3002\u652f\u6301\u52a8\u6001\u67e5\u627e\u6700\u5c0f\u6570\u548c\u52a8\u6001\u63d2\u5165\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u7528\u5806\u6765\u5b9e\u73b0\u3002\n    \u56e0\u4e3a\u53d6\u7684\u662f\u6700\u5c0f\u5143\u7d20\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u5c0f\u6839\u5806\u6765\u5b9e\u73b0\u3002\n\n    \u6574\u4e2a\u7a0b\u5e8f\u5f00\u59cb\u65f6\u901a\u8fc7n\u6b21put\u64cd\u4f5c\u5efa\u7acb\u8d77\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u7136\u540e\u4e0d\u65ad\u91cd\u590d\u5982\u4e0b\u64cd\u4f5c\uff1a\u4e24\u6b21get\u64cd\u4f5c\u53d6\u51fa\u4e24\u4e2a\u6700\u5c0f\u6570\u7d2f\u52a0\u8d77\u6765\uff0c\u5e76\u4e14\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u7ed3\u70b9\uff0c\u518d\u63d2\u5165\u5230\u5806\u4e2d\u3002\n\n    #include<iostream>\n    using namespace std;\n    int len,n,heap[10000];\n    void swap(int &a,int &b)\n    {\n\t    int t=a;a=b;b=t;\n    }\n    void put(int d)\n    {\n        int now,next;\n        heap[++len]=d;\n        now=len;\n        while (now>1)\n        {\n            next=now>>1;\n            if (heap[now]>=heap[next])return;\n            swap(heap[now],heap[next]);\n            now=next;\n        }\n    }\n    int get()\n    {\n        int now,next,res;\n        res=heap[1];\n        heap[1]=heap[len--];\n        now=1;\n        while (now*2<=len)\n        {\n            next=now*2;\n            if (next<len && heap[next+1]<heap[next])\n            next++;\n            if (heap[now]<=heap[next])    \n\t\t    return res;\n            swap(heap[now],heap[next]);\n            now=next;\n        }\n        return res;\n    }\n    void work()\n    {\n\t    int i,x,y,ans=0;\n\t    cin>>n;\n\t    for(i=1;i<=n;i++)\n\t    {\n\t\t    cin>>x;\n\t\t    put(x);\n\t    } \n\t    for(i=1;i<n;i++)\n\t    {\n\t\t    x=get();\n\t\t    y=get();\n\t\t    ans+=x+y;\n\t\t    put(x+y);\n\t    }\n\t    cout<<ans<<endl;\n    }\n    int main()\n    {\n\t    work();\n\t    return 0;\n    }\n    put\u548cget\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u5747\u4e3alog2n\u3002\u6240\u4ee5\u5efa\u5806\u590d\u6742\u5ea6\u4e3anlog2n\u3002\n    \u5408\u5e76\u679c\u5b50\u65f6\uff0c\u6bcf\u6b21\u9700\u8981\u4ece\u5806\u4e2d\u53bb\u53d6\u4e24\u4e2a\u6570\uff0c\u7136\u540e\u518d\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u56e0\u6b64\u4e00\u6b21\u5408\u5e76\u7684\u590d\u6742\u5ea6\u4e3a3log2n\uff0c\u5171n-1\u6b21\u3002\u6240\u4ee5\u6574\u9053\u9898\u76ee\u7684\u590d\u6742\u5ea6\u4e3anlog2n\u3002",
        "postTime": 1520950070,
        "uid": 44799,
        "name": "\u6e05\u98ce\u9701\u6708",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1090 \u3010\u5408\u5e76\u679c\u5b50\u3011"
    }
]