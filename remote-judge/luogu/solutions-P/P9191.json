[
    {
        "content": "## \u524d\u8a00\n\n\u8d5b\u65f6\u53ea\u6253\u51fa\u4e86\u7279\u6b8a\u6027\u8d28\uff0c\u8fd8\u662f\u592a\u83dc\u4e86 /kk\u3002\n\n## \u89e3\u6cd5\n\n\u4ee5\u4e0b\u63cf\u8ff0\u4e2d\uff0c\u201c\u539f\u59cb\u72b6\u6001\u201d\u6307\u7684\u662f\u672a\u8fdb\u884c\u4efb\u4f55\u5408\u5e76\u64cd\u4f5c\u7684\u6811\uff0c\u201c\u76ee\u6807\u72b6\u6001\u201d\u6307\u7684\u662f\u201c\u8fdb\u884c\u5b8c\u6240\u6709\u5408\u5e76\u64cd\u4f5c\u540e\u7684\u6811\u201d\uff0c$K(a)$ \u8868\u793a\u8282\u70b9 $a$ \u7684\u5b50\u8282\u70b9\u96c6\u5408\uff0c$w_a$ \u8868\u793a\u5728\u76ee\u6807\u72b6\u6001\u4e2d\u4e0d\u5b58\u5728\u7684\u8282\u70b9\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u548c\u5b83\u8fdb\u884c\u5408\u5e76\u7684\u8282\u70b9\u3002\n\n\u4ee4 $c_{a,b}$ \u4e3a\u201c\u8282\u70b9 $a$ \u662f\u5426\u53ef\u4ee5\u5408\u5e76\u8fdb\u8282\u70b9 $b$\u201d\u3002\u663e\u7136\u7684\uff0c\u82e5 $c_{a,b}$ \u4e3a\u771f\uff0c\u90a3\u4e48 $a$ \u548c $b$ \u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6\uff1a\n\n- \u76ee\u6807\u72b6\u6001\u5305\u542b\u8282\u70b9 $b$\uff1b\n\n- $a\\le b$\uff0c\u7b49\u53f7\u80fd\u53d6\u5230\u5f53\u4e14\u4ec5\u5f53\u76ee\u6807\u72b6\u6001\u5305\u542b\u8282\u70b9 $a$\uff1b\n\n- $\\forall i\\in K(a)$\uff0c$\\exists j\\in K(b)$ \u4f7f\u5f97 $c_{i,j}$ \u4e3a\u771f\u3002\n\n\u8ba1\u7b97\u51fa $c_{a,b}$ \u4e0d\u662f\u96be\u4e8b\uff0c\u53ef\u4ee5\u6839\u636e\u5b9a\u4e49\uff0c\u4ece\u6811\u7684\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\u6309\u7167\u6df1\u5ea6\u9012\u51cf\u4e00\u76f4\u7b97\u5230\u6839\u8282\u70b9\u5373\u53ef\u3002\n\n\u6700\u540e\u6784\u9020\u65b9\u6848\u65f6\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u6309\u7167\u6df1\u5ea6\u9012\u589e\u4e00\u76f4\u7b97\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6df1\u5ea6\u6307\u5b9a\u7684\u8282\u70b9 $a$\uff0c\u4ee4\u5176\u5728\u539f\u72b6\u6001\u4e2d\u7684\u7236\u4eb2\u4e3a $f$\uff0c\u90a3\u4e48\u53ea\u8981\u627e\u5230\u4e00\u4e2a\u6700\u5927\u7684\u8282\u70b9 $b$ \u6ee1\u8db3 $b$ \u5728\u76ee\u6807\u72b6\u6001\u4e2d\u7684\u7236\u4eb2\u4e0e $w_f$ \u76f8\u7b49\uff08\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1 $a,b$ \u73b0\u5728\u6709\u540c\u4e00\u4e2a\u7236\u4eb2\uff09\u4e14 $c_{a,b}$ \u4e3a\u771f\uff0c\u82e5\u6700\u7ec8 $a\\ne b$ \u5c31\u5408\u5e76 $a,b$\u3002\n\n\u653e\u4ee3\u7801\uff1a\n\n```cpp\n/*\nID: CrowMatrix\nTASK: Tree Merging\nLANG: C++\n*/\n#include<bits/stdc++.h>\nusing namespace std;\nint p1[1001],p2[1001],d[1001],w[1001];\nbool e[1001],c[1001][1001];\nint main(){\n  ios::sync_with_stdio(false);\n  int t; cin>>t;\n  while(t--){\n    int n,r; cin>>n;\n    for(int i=1;i<=n;i++)p1[i]=p2[i]=e[i]=w[i]=d[i]=0;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)c[i][j]=false;\n    for(int i=1;i<n;i++){\n      int v,p; cin>>v>>p; p1[v]=p;\n    } // \u539f\u72b6\u6001\n    for(int i=1;i<=n;i++)if(!p1[i])r=i;\n    int m; cin>>m; e[r]=true;\n    for(int i=1;i<m;i++){\n      int v,p; cin>>v>>p; p2[v]=p,e[v]=true;\n    } // \u76ee\u6807\u72b6\u6001\n    for(int i=n;i;i--)\n      for(int j=1;j<=n;j++)\n        if(j!=r)d[j]=d[p1[j]]+1; // \u8ba1\u7b97\u8282\u70b9\u6df1\u5ea6\n    for(int i=n;i;i--)\n      for(int j=1;j<=n;j++)\n        if(d[j]==i)\n          if(e[j])c[j][j]=true;\n          else for(int k=j;k<=n;k++)\n            if(e[k])for(int l=c[j][k]=1;l<=n;l++)\n              if(p1[l]==j){\n                bool f=false;\n                for(int p=1;p<=n;p++)\n                  f|=p2[p]==k&&c[l][p];\n                c[j][k]&=f; // \u9010\u4e00\u68c0\u67e5\u5404\u9879\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\n              }\n    cout<<n-m<<endl; w[r]=r;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n        if(d[j]==i){\n          for(int k=1;k<=n;k++)\n            if(p2[k]==w[p1[j]]&&c[j][k])w[j]=k; // \u627e\u5408\u5e76\u7684\u76ee\u6807\n          if(j!=w[j])cout<<j<<' '<<w[j]<<endl;\n        }\n  }\n  return 0;\n}\n```",
        "postTime": 1680612788,
        "uid": 556366,
        "name": "zyc212303",
        "ccfLevel": 5,
        "title": "[USACO23OPEN] Tree Merging G \u9898\u89e3"
    }
]