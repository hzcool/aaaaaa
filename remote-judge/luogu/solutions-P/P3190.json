[
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u7684blog](http://www.cnblogs.com/dedicatus545/p/8629572.html)\n\n\u5185\u6709\u591a\u7bc7\u63d2\u5934dp\u9898\u89e3\uff0c\u53ef\u914d\u5408\u4f7f\u7528\uff0c\u53e3\u611f\u66f4\u4f73orz\n\n# \u601d\u8def\uff1a\n\n[\u6ca1\u5b66\u8fc7\u63d2\u5934dp\u7684\u53ef\u4ee5\u770b\u8fd9\u91cc](http://www.cnblogs.com/dedicatus545/p/8638869.html)\n\n\u5148\u7406\u89e3\u4e00\u4e0b\u9898\u610f\uff1a\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u4f60\u6c42\u8fd9\u4e2a\u68cb\u76d8\u603b\u6743\u503c\u6700\u5927\u7684\u4e00\u4e2a\u56de\u8def\n\n\u770b\u5230\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u8fd8\u6709\u56de\u8def\u5904\u7406\uff0c\u5c31\u60f3\u5230\u4f7f\u7528\u63d2\u5934dp\u6765\u505a\u4e86\n\n\u89c2\u5bdf\u4e00\u4e0b\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u56e0\u4e3a\u90fd\u662f\u56de\u8def\uff0c\u6240\u4ee5\u8054\u901a\u5757\u4e0a\u65b9\u7684\u63d2\u5934\u4e00\u5b9a\u4e24\u4e24\u914d\u5bf9\uff0c\u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7\u5e8f\u5217\u4ee3\u66ff\u6700\u5c0f\u8868\u793a\u6cd5\n\n\u5206\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\n\n \n\n\u60c5\u51b5\u4e00\uff1a\u5f53\u524d\u683c\u5b50\u4e0a\u65b9\u548c\u5de6\u65b9\u90fd\u6ca1\u6709\u63d2\u5934\n\n\u8fd9\u79cd\u65f6\u5019\u53ef\u4ee5\u7ee7\u7eed\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u5f53\u524d\u683c\u5b50\u52a0\u4e00\u4e2a\u4e0b\u63d2\u5934\u4e00\u4e2a\u53f3\u63d2\u5934\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u65b0\u7684\u8054\u901a\u5206\u91cf\n\n \n\n\u60c5\u51b5\u4e8c\uff1a\u4e0a\u65b9\u6709\u4e00\u4e2a\u4e0b\u63d2\u5934\uff0c\u5de6\u8fb9\u6ca1\u6709\n\n\u8fd9\u65f6\u6709\u4e24\u4e2a\u51b3\u7b56\uff1a\u53ef\u4ee5\u5411\u53f3\u8f6c\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5411\u4e0b\uff0c\u64cd\u4f5c\u5c31\u662f\u5206\u522b\u7ed9\u8fd9\u4e2a\u683c\u5b50\u4e00\u4e2a\u53f3\u63d2\u5934\u6216\u8005\u4e00\u4e2a\u4e0b\u63d2\u5934\n\n\u6ce8\u610f\u6b64\u65f6\u65b0\u63d2\u5934\u7684\u62ec\u53f7\u7c7b\u578b\u548c\u539f\u6765\u7684\u90a3\u4e2a\u63d2\u5934\u76f8\u540c\uff08\u753b\u4e2a\u56fe\u53ef\u4ee5\u7406\u89e3\u4e00\u4e0b\uff09\n\n\u60c5\u51b5\u4e09\uff1a\u5de6\u8fb9\u6709\u4e00\u4e2a\u53f3\u63d2\u5934\uff0c\u4e0a\u9762\u6ca1\u6709\n\n\u540c\u60c5\u51b5\u4e8c\uff0c\u8f6c\u5f2f\u6216\u8005\u76f4\u8d70\n\n \n\n\u60c5\u51b5\u56db\uff1a\u90fd\u6709\u63d2\u5934\uff0c\u800c\u4e14\u4e24\u4e2a\u63d2\u5934\u662f\u540c\u4e00\u62ec\u53f7\n\n\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u63d2\u5934\u5408\u5e76\uff0c\u5728\u5f53\u524d\u683c\u5b50\u628a\u8fd9\u6761\u8def\u5f84\u5c01\u95ed\u4e86\n\n\u4f46\u662f\u8fd9\u91cc\u9700\u8981\u8003\u8651\u4e00\u4e0b\u5176\u4ed6\u7684\u63d2\u5934\n\n\u6211\u4eec\u53bb\u6389\u4e86\u4e24\u4e2a\u76f8\u540c\u7684\u62ec\u53f7\uff0c\u5c31\u9700\u8981\u628a\u53e6\u5916\u4e00\u4e2a\u62ec\u53f7\u53cd\u8fc7\u6765\u914d\u5bf9\u624d\u884c\n\n\u6bd4\u5982\u5f53\u524d\u7684\u62ec\u53f7\u5e8f\u5217\u662f ((##()#(##**))**##)\uff0c\u52a0\u7c97\u7684\u662f\u6211\u4eec\u8981\u5408\u5e76\u7684\u4e24\u4e2a\u62ec\u53f7\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a)\u53d8\u6210#\u4ee5\u540e\uff0c\u5b83\u4eec\u539f\u6765\u5339\u914d\u7684\u5de6\u62ec\u53f7(\u5c31\u5931\u914d\u4e86\uff0c\u9700\u8981\u5176\u4e2d\u4e00\u4e2a\uff08\u53f3\u8fb9\u7684\u90a3\u4e2a\uff09\u5de6\u62ec\u53f7\u53d8\u6210\u53f3\u62ec\u53f7\uff0c\u4e24\u4e2a\u91cd\u65b0\u914d\u5bf9\n\n\u4e5f\u5c31\u662f((##()#(**))**##)\u53d8\u6210((##()#(**##**##)\u53d8\u6210((##()#**)**####)\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\uff0c\u4e24\u6761\u8def\u5f84\u76f8\u5f53\u4e8e\u662f\u7ed5\u4e86\u5708\u63a5\u8d77\u6765\u4e86\n\n\u8fd9\u4e2a\u64cd\u4f5c\u9700\u8981\u626b\u4e00\u904d\u6574\u4e2a\u5e8f\u5217\uff0c\u662f$O\\left(n\\right)$\u7684\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u9884\u5904\u7406\u53d8\u6210$O\\left(1\\right)$\n\n \n\n\u60c5\u51b5\u4e94\uff1a\u90fd\u6709\u63d2\u5934\uff0c\u4e14\u4e24\u4e2a\u662f)(\n\n\u8fd9\u65f6\u5019\u76f4\u63a5\u5408\u5e76\u5c31\u597d\u4e86\n\n\u60c5\u51b5\u516d\uff1a\u90fd\u6709\u63d2\u5934\uff0c\u800c\u4e14\u4e24\u4e2a\u662f()\n\n\u8fd9\u79cd\u65f6\u5019\uff0c\u53ea\u6709\u5728\u6574\u4e2a\u8f6e\u5ed3\u7ebf\u4e0a\u53ea\u5269\u4e0b\u8fd9\u4e24\u4e2a\u63d2\u5934\u65f6\u624d\u80fd\u5408\u5e76\uff0c\u8def\u5f84\u5b8c\u5168\u5c01\u95ed\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u7b54\u6848\n\n \n\n\u72b6\u6001\u6570\u7565\u591a\uff0c\u53ef\u4ee5\u6eda\u52a8\u6570\u7ec4+\u54c8\u5e0c\u5904\u7406\n\n\u5206\u7c7b\u8ba8\u8bba\u7684\u65f6\u5019\u6ce8\u610f\u53ef\u4e0d\u53ef\u4ee5\u8fd9\u4e48\u505a\uff08\u9700\u8981\u5224\u65ad\u4e0b\u4e00\u4e2a\u683c\u5b50\u662f\u5426\u4e3a\u969c\u788d\uff09\n\n# \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define hash deep_dark_fantasy\n#define inf 1e9\nusing namespace std;\ninline int read(){\n    int re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n}\nint n,m,x[150][150],cur,pre,ex,ey;\nint st[2][300010];ll ans[2][300010],re;\nint tot[2],bit[20],state[300010],st_tot,hash=300000;\nstruct edge{\n    int to,next;\n}a[300010];\nvoid insert(int sta,ll val){//\u5f80\u54c8\u5e0c\u8868\u91cc\u63d2\u5165\u4e00\u4e2a\u72b6\u6001\uff0c\u987a\u4fbf\u66f4\u65b0\u7b54\u6848\n    int p=sta%hash,i;\n    for(i=state[p];i;i=a[i].next){\n        if(st[cur][a[i].to]==sta){\n            ans[cur][a[i].to]=max(ans[cur][a[i].to],val);return;\n        }\n    }\n    tot[cur]++;\n    a[++st_tot].to=tot[cur];\n    a[st_tot].next=state[p];\n    state[p]=st_tot;st[cur][tot[cur]]=sta;ans[cur][tot[cur]]=val;\n}\nvoid dp(){\n    int i,j,k,l,now,down,right;ll val;re=-inf;\n    cur=0;tot[cur]=1;ans[cur][1]=0;st[cur][1]=0;\n    for(i=1;i<=n;i++){\n        for(j=1;j<=tot[cur];j++) st[cur][j]<<=2;\n        for(j=1;j<=m;j++){\n            pre=cur;cur^=1;tot[cur]=0;st_tot=0;memset(state,0,sizeof(state));\n            for(k=1;k<=tot[pre];k++){\n                now=st[pre][k];val=ans[pre][k];\n                right=(now>>bit[j-1])%4;down=(now>>bit[j])%4;\n                if(!down&&!right){//\u65b0\u5efa\u8054\u901a\u5206\u91cf\uff0c\u52a0\u4e00\u4e2a\u4e0b\u63d2\u5934\u4e00\u4e2a\u53f3\u63d2\u5934\n                    insert(now,val);\n                    if(j!=m) \n                        insert(now+(1<<bit[j-1])+((1<<bit[j])<<1),val+x[i][j]);\n                }\n                if(down&&!right){//\u5ef6\u7eed\u4e0b\u63d2\u5934\n                    insert(now-down*(1<<bit[j])+down*(1<<bit[j-1]),val+x[i][j]);\n                    if(j!=m)insert(now,val+x[i][j]);\n                }\n                if(right&&!down){//\u5ef6\u7eed\u53f3\u63d2\u5934\n                    insert(now,val+x[i][j]);\n                    if(j!=m) \n                        insert(now+right*(1<<bit[j])-right*(1<<bit[j-1]),val+x[i][j]);\n                }\n                if(right==1&&down==1){//\u5408\u5e76\u4e24\u4e2a\u5de6\u62ec\u53f7\n                    int cnt=1;\n                    for(l=j+1;l<=m;l++){\n                        if((now>>bit[l])%4==1) cnt++;\n                        if((now>>bit[l])%4==2) cnt--;\n                        if(!cnt){\n                            insert(now-(1<<bit[l])-(1<<bit[j])-(1<<bit[j-1]),val+x[i][j]);\n                            break;\n                        }\n                    }\n                }\n                if(right==2&&down==2){//\u5408\u5e76\u4e24\u4e2a\u53f3\u62ec\u53f7\n                    int cnt=1;\n                    for(l=j-2;l>=0;l--){\n                        if((now>>bit[l])%4==1) cnt--;\n                        if((now>>bit[l])%4==2) cnt++;\n                        if(!cnt){\n                            insert(now+(1<<bit[l])-((1<<bit[j])<<1)-((1<<bit[j-1])<<1),val+x[i][j]);\n                            break;\n                        }\n                    }\n                }\n                if(right==2&&down==1){//\u5408\u5e76)(\n                    insert(now-((1<<bit[j-1])<<1)-(1<<bit[j]),val+x[i][j]);\n                }\n                if(right==1&&down==2){//\u5408\u5e76()\uff0c\u7edf\u8ba1\u7b54\u6848\n                    if((now==(1<<bit[j-1])+((1<<bit[j])<<1))&&(val+x[i][j]>re)){\n                        re=val+x[i][j];\n                    }\n                }\n            }\n        }\n    }\n}\nint main(){\n    int i,j;\n    n=read();m=read();\n    for(i=1;i<=10;i++) bit[i]=(i<<1);\n    for(i=1;i<=n;i++) for(j=1;j<=m;j++) x[i][j]=read();\n    dp();\n    printf(\"%lld\",re);\n}\n```",
        "postTime": 1521787308,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3190 \u3010[HNOI2007]\u795e\u5947\u6e38\u4e50\u56ed\u3011"
    },
    {
        "content": "upd 2022/11/12: \u91cd\u65b0\u68b3\u7406\u4e86\u4e00\u904d\u63d2\u5934 DP\uff0c\u6539\u4e86\u4e00\u4e9b\u9519\u8bef\u7684\u63cf\u8ff0\uff0c\u8865\u5145\u4e0b\u6211\u6ca1\u8bb2\u6e05\u7684\u4e1c\u897f\u3002\n\n--------\n\n\u6ca1\u505a\u8fc7\u63d2\u5934 DP \u7684\u4eba\uff0c\u5efa\u8bae\u5148\u53bb\u505a\n [P5074](https://www.luogu.com.cn/problem/P5074)\u3002 \uff08\u4e0d\u9700\u8981\u62ec\u53f7\u5e8f\u5217\uff0c\u53ea\u9700\u5224\u65ad\u63d2\u5934\u95f4\u8054\u901a\u3002\uff09\n \n\u5176\u6b21\u518d\u505a\u4e00\u4e0b [ P5065 ](PPttps://www.luogu.com.cn/problem/P5056) \u3002\uff08\u6a21\u677f\u9898\uff0c\u6b63\u5e38\u63d2\u5934 DP \uff0c\u5b66\u4f1a\u4e86\u8fd9\u9053\u6a21\u677f\u9898\u7684\u5199\u6cd5\u5927\u90e8\u5206\u63d2\u5934 DP \u7684\u9898\u53ea\u9700\u518d\u7ec6\u8282\u4e0a\u7565\u52a0\u6539\u52a8\uff0c\u6bd4\u5982\u6b64\u9053\u9898\u3002\uff09\n\n---------- \n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a $n \\times m$ \u7684\u7f51\u683c\u56fe\uff0c\u6bcf\u683c\u5185\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6c42\u4e00\u4e2a\u4efb\u610f\u4e0d\u4ea4\u53c9\u56de\u8def\u4f7f\u53d6\u5f97\u6743\u503c\u6700\u5927\u3002\n\n------------\n\n\n\u8fd9\u91cc\u505a\u5b8c\u4e0a\u4e24\u9053\u9898\u7684\u4eba\u5e94\u8be5\u5f88\u660e\u4e86\u4e86\uff0c\u5c31\u662f\u6a21\u677f\u7684\u53d8\u7248\u3002\u6240\u4ee5\u5c31\u4e0d\u8be6\u7ec6\u8c08\u57fa\u7840\u77e5\u8bc6\u4e86\uff0c\u53ea\u8bf4\u4e00\u4e0b\u4e0d\u540c\u7684\u70b9\u3002\n\n- \u6a21\u677f\u6c42\u7684\u662f\u65b9\u6848\u6570\uff0c\u6240\u4ee5\u53d6\u51fa\u4e0a\u4e00\u4e2a\u9636\u6bb5\u7684\u65b9\u6848\u6570\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u6c42\u548c\u3002\u8fd9\u9053\u9898\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u5e94\u8be5\u4f20\u5165\u5f53\u524d\u7ecf\u8fc7\u66f4\u6539\u7684\u6743\u503c\uff0c\u5728\u66f4\u65b0 val \u7684\u65f6\u5019\u53d6 max\u3002\n\n- \u4e0d\u8981\u6c42\u5168\u90e8\u8054\u901a\uff0c\u6240\u4ee5\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u8d8a\u754c\u5373\u53ef\u3002\n    \n- \u5bf9\u4e8e\u9898\u76ee\u6240\u8981\u6c42\u7684\u8054\u901a\uff0c\u6211\u4eec\u5728\u539f\u9898\u7684\u65f6\u5019\u662f\u5728\u6700\u540e\u8003\u8651\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8003\u8651\u9664\u4e86\u5f53\u524d\u5408\u5e76\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u662f\u5426\u6709\u5176\u4ed6\u7684\u8fde\u901a\u5757\uff0c\u8fd9\u9898\u662f\u8f6c\u79fb\u4e2d\u66f4\u65b0\u7b54\u6848\uff0c\u6240\u4ee5\u8981\u8003\u8651\u65f6\u5019\u53ef\u80fd\u6709\u5176\u4ed6\u7684\u8fde\u901a\u5757\u3002\n\n--------------\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u6ce8\u91ca\u5e94\u8be5\u5f88\u660e\u767d\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define int long long\n\nusing namespace std;\n\nconst int Mod = 299987;\nconst int N = 14;\nconst int M = 2 << 16;\n\nint n, m, ans;\nint a[101][N];\nchar s;\nint que[2][M], val[2][M]; // que\u662f\u5f53\u524d\u72b6\u6001/\u4e0a\u4e00\u72b6\u6001, val\u662f\u72b6\u6001\u6240\u4ee3\u8868\u7684\u4ef7\u503c\u3002\nint tw[N], cnt[2]; // tw\u662f\u9884\u5904\u7406\u7684\u56db\u8fdb\u5236\u6570\u5b57\uff0ccnt\u4e3a\u5f53\u524d\u9636\u6bb5\u53ef\u884c\u7684\u72b6\u6001\u6570\u3002\nint ei, ej;\nint now;\nint last, num;\n\nint Next[M], head[300000];\nvoid Zip(int bit, int num){// hash \u538b\u7f29\u548c\u8fde\u8fb9  bit\u4e3a\u5f53\u524d\u72b6\u6001\uff0cnum\u8981\u66f4\u65b0\u7684\u503c.\n\tlong long u = bit % Mod + 1;// \u53d6head \n\tfor(int i = head[u]; i; i = Next[i]){// \u5f53\u524d\u72b6\u6001\u5c5e\u4e8eu\u96c6\u5408\n\t\tif(que[now][i] == bit){ // \u627e\u5230\u4e86\n\t\t\tif(val[now][i] < num) val[now][i] = num; // \u66f4\u65b0\n\t\t\treturn;\n\t\t}\n\t}// \u6ca1\u6709return\u5c31\u8bf4\u660e\u662f\u65b0\u7684\u70b9\uff0c\u5efa\u65b0\u8fb9\u5e76\u4e14\u8d4b\u503c \n\tNext[++ cnt[now]] = head[u];\n\thead[u] = cnt[now];\n\tque[now][cnt[now]] = bit;\n\tval[now][cnt[now]] = num;\n}\n\nbool check(int k, int j, int x, int y){\n\treturn (k == (x * (1 << (j - 1) * 2) + y * (1 << (j * 2)))); // \u5224\u65ad\u662f\u5426\u53ea\u6709\u4e00\u4e2a\u8fde\u901a\u5757\n}\n\nvoid dp(){\n\tcnt[now] = 1;\n\tval[now][1] = 0;\n\tque[now][1] = 0;\n\tfor(int i = 1; i <= n; ++ i){// \u9010\u884c\u8f6c\u79fb\n\t\tfor(int j = 1; j <= cnt[now]; ++ j) que[now][j] <<= 2;/*\n\t\tque\u662f\u4e2a\u961f\u5217\uff0c\u88c5\u7684\u662f\u4e0a\u4e00\u6b65\u8f6c\u79fb\u540e\u7684\u5408\u6cd5\u72b6\u6001\uff0c\u7531\u4e8e\u6211\u4eec\u662f>>\u53d6\u63d2\u5934\uff0c\u540c\u65f6\n\t\t\u7531\u4e0a\u4e00\u6761\u8f6e\u5ed3\u7ebf\u7684\u672b\u72b6\u6001\uff08\u6bcf\u4e2a\u72b6\u6001\u662f\u8fdb\u884c\u4e00\u6b21\u8f6c\u79fb\u7684\u6765\u7684\uff0c\u53ef\u4ee5\u770b\u4f5c\u5269\u4e0b\u7684\u90e8\u5206\u4e0d\u8f6c\u79fb\u800c\u76f4\u63a5\u5230\u672b\u72b6\u6001\uff09\u8f6c\u79fb\u5230\u8fd9\u4e00\u6761\u8f6e\u5ed3\u7ebf\u7684\u521d\u72b6\u6001\uff0c\u753b\u56fe\n\t\t\u5f97\u77e5\uff0c\u4e0a\u4e00\u4e2a\u72b6\u6001\u7684\u6700\u540e\u4e00\u4e2a\u63d2\u5934\u4e00\u5b9a\u4e0d\u4f1a\u6709\uff08\u4e0d\u53ef\u80fd\u6307\u5411\u683c\u5916\uff09\uff0c\u8fd9\u4e00\u4e2a\u72b6\u6001\u7684\u7b2c\u4e00\u4e2a\u63d2\u5934\u80af\u5b9a\u4e0d\u4f1a\u5b58\u5728(\u4e0d\u53ef\u80fd\u7531\u683c\u5916\u6307\u8fdb\u6765)\uff0c\u5373\u4e0a\u4e00\u4e2a\u72b6\u6001\n\t\t\u4e00\u5b9a\u662f 00(\u6700\u540e\u4e00\u683c\u50a8\u5b58\u5728\u6700\u9ad8\u4f4d\uff09 \u2026\u2026 \uff08\u4e24\u4e2a\u4e8c\u8fdb\u5236\u8868\u793a\u4e00\u4e2a\u4e09\u8fdb\u5236\u6570) \u4e0b\u4e00\u4e2a\u72b6\u6001\u8fd8\u6ca1\u5f00\u59cb\u8f6c\u79fb\u7684\u65f6\u5019\u4e00\u5b9a\u662f  \u2026\u202600 \uff08\u7b2c\u4e00\u683c\u50a8\u5b58\u5728\u7b2c\u4e00\u4f4d \n\t\t\u8fd9\u4e24\u4e2a\u7701\u7565\u53f7\u8868\u8fbe\u7684\u662f\u76f8\u540c\u7684 \uff0c\u56e0\u4e3a\u8fd8\u6ca1\u53d1\u751f\u8f6c\u79fb\u3002\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e0a\u4e00\u4e2a\u8f6c\u79fb\u7684\u7ed3\u675f\u72b6\u6001\u8f6c\u4e3a\u8fd9\u4e2a\u8f6c\u79fb\u7684\u521d\u59cb\u72b6\u6001\uff0c\u53ea\u9700\u8981 << 2\n\t\t*/ \n\t\tfor(int j = 1; j <= m; ++ j){  // \u9010\u683c\u679a\u4e3e\n\t\t\tmemset(head, 0, sizeof head);\n\t\t\tlast = now; now ^= 1;// \u6eda\u52a8\u6570\u7ec4 \n\t\t\tcnt[now] = 0; \n\t\t\tfor(int k = 1; k <= cnt[last]; ++ k){\n\t\t\t\tint bit = que[last][k], num = val[last][k] + a[i][j];// last\u9636\u6bb5\u7b2ck\u4e2a\u72b6\u6001\uff0c last\u9636\u6bb5\u7b2ck\u4e2a\u72b6\u6001\u5bf9\u5e94\u7684\u503c \n\t\t\t\tint b1 = (bit >> ((j - 1) * 2)) % 4, b2 = (bit >> (j * 2)) % 4;// \u4e8c\u8fdb\u5236\u8868\u793a\u56db\u8fdb\u5236\u5b58\u50a8\uff0c\u4f4d\u6570*2\uff0c\u6240\u4ee5\u5de6\u79fb\u7684\u4f4d\u6570*2 \n\t\t\t\tif(!b1 && !b2){\n\t\t\t\t\tZip(bit, num - a[i][j]); // \u4e0d\u9009 \n\t\t\t\t\tif(i != n && j != m) Zip(bit + tw[j - 1] + tw[j] * 2, num); //\u4e0d\u8d8a\u754c\uff0c\u9009\n\t\t\t\t}\n\t\t\t\telse if(!b1 && b2) { // \u4e0b\u540c\n\t\t\t\t\tif(j != m) Zip(bit, num);\n\t\t\t\t\tif(i != n) Zip(bit - tw[j] * b2 + tw[j - 1] * b2, num);\n\t\t\t\t}\n\t\t\t\telse if(b1 && !b2){\n\t\t\t\t\tif(i != n) Zip(bit, num);\n\t\t\t\t\tif(j != m) Zip(bit - tw[j - 1] * b1 + tw[j] * b1, num);\n\t\t\t\t} \n\t\t\t\telse if(b1 == 1 && b2 == 1){ // \u4e24\u4e2a\u5de6\u62ec\u53f7\n\t\t\t\t\tint flag = 1;\n\t\t\t\t\tfor(int l = j + 1; l <= m; ++ l){\n\t\t\t\t\t\tif((bit >> (l * 2)) % 4 == 1) flag ++;\n\t\t\t\t\t\tif((bit >> (l * 2)) % 4 == 2) flag --;\n\t\t\t\t\t\tif(!flag){ // \u627e\u6700\u5de6\u7684\u53f3\u62ec\u53f7\n\t\t\t\t\t\t\tZip(bit - tw[j] - tw[j - 1] - tw[l], num);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(b1 == 2 && b2 == 2){\n\t\t\t\t\tint flag = 1;\n\t\t\t\t\tfor(int l = j - 2; l >= 0; -- l){\n\t\t\t\t\t\tif((bit >> (l * 2)) % 4 == 1) flag --;\n\t\t\t\t\t\tif((bit >> (l * 2)) % 4 == 2) flag ++;\n\t\t\t\t\t\tif(!flag){\n\t\t\t\t\t\t\tZip(bit - tw[j] * 2 - tw[j - 1] * 2 + tw[l], num);\n\t\t\t\t\t\t\tbreak; \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(b1 == 2 && b2 == 1) Zip(bit - tw[j - 1] * 2 - tw[j], num);\n\t\t\t\t\t/*\u8981\u5408\u5e76\u8fde\u901a\u5757\u4e86*/else if(ans <= num && check(bit, j, b1, b2)) ans = num;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nsigned main(){\n\tscanf(\"%lld%lld\", &n, &m);\n\tfor(int i = 1; i <= n; ++ i)\n\t\tfor(int j = 1; j <= m; ++ j){\n\t\t\tscanf(\"%lld\", &a[i][j]); \n\t\t}\n\ttw[0] = 1; \n\tfor(int i = 1; i <= 9; ++ i) tw[i] = tw[i - 1] << 2;\n\tans = -(n * m) * 10001; // \u521d\u59cb\u5316\n\tdp();\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n\n\n------------\n\n\u6700\u540e\u6d45\u8c08\u4e0b\u77e5\u8bc6\u70b9\u548c\u6211\u5b66\u4e60\u63d2\u5934 DP \u65f6\u7591\u60d1\u7684\u70b9 \uff1a\n\n\t1. \u72b6\u6001\u7ef4\u62a4\u7684\u662f\u5728\u8f6e\u5ed3\u7ebf\u4e0a\u7684\u5bf9\u4e8e\u8f6e\u5ed3\u7ebf\u5bf9\u5e94\u7684\u65b9\u683c\u7684\u51b3\u7b56\u3002\u72b6\u6001\u5b9e\u9645\u662f\u4e8c\u8fdb\u5236\uff0c\u4f46\u662f\u6bcf\u4e24\u4f4d\u4e00\u8003\u8651\uff0c\u5c31\u662f\u6240\u8c13\u7684\u56db\u8fdb\u5236\u3002\u4e24\u4f4d\u4e8c\u8fdb\u5236\u80fd\u8868\u8fbe0 1 2 3\uff0c\u7528\u4e24\u4f4d\u4e8c\u8fdb\u5236\u8868\u793a\u4e00\u4e2a\u63d2\u5934\u3002\n\n\t2. \u5173\u4e8e\u62ec\u53f7\u7684\u542b\u4e49\u662f\u5f53\u524d\u8f6e\u5ed3\u7ebf\u4ec5\u4e0a\u65b9\u7684\u8054\u901a\u7684\u7ebf\u4e0e\u8f6e\u5ed3\u7ebf\u7684\u76f8\u4ea4\u72b6\u51b5\uff0c\u56e0\u4e3a\u62ec\u53f7\u7684\u5339\u914d\u53ef\u4ee5\u533a\u5206\u4e0d\u540c\u7684\u8fde\u901a\u5757\u3002\n\n\t3. \u8f6c\u79fb\u7684\u65f6\u5019\u66f4\u65b0\u7684\u662f\u51b3\u7b56\u5b8c\u7684\u72b6\u6001\u800c\u4e0d\u662f\u666e\u901a DP \u7684\u90a3\u79cd\u539f\u672c\u7684\u72b6\u6001\u4e0d\u53d8\u3002\n\n\t4. \u72b6\u6001\u8f6c\u79fb\u7684\u65f6\u5019\u8bb0\u5f97\u60f3\u8c61\u539f\u56fe\uff0c\u5bf9\u4e8e\u662f\u5426\u589e\u52a0\u65b0\u62ec\u53f7\u548c\u5220\u9664\u67d0\u4e9b\u62ec\u53f7\u5f88\u6709\u5e2e\u52a9 \uff08\u80cc\u4e0b\u6765\u66f4\u597d\uff09\u3002\n    \n    5.\u5bf9\u4e8e\u5927\u591a\u6570\u9898\u89e3\u6216\u535a\u5ba2\u91cc\u753b\u7684\u56fe\uff0c\u901a\u5e38\u4f1a\u753b\u51fa\u4e00\u79cd\u5408\u6cd5\u65b9\u6848\uff0c\u518d\u753b\u8f6e\u5ed3\u7ebf\uff0c\u4f46\u662f\u4e0d\u5bb9\u6613\u7406\u89e3\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb\uff0c\u6240\u4ee5\u6211\u4eec\u65e0\u89c6\u8f6e\u5ed3\u7ebf\u4e0b\u65b9\u7684\u56fe\uff0c\u628a\u5b83\u5f53\u4f5c\u672a\u77e5\u7684\u7686\u6709\u53ef\u80fd\u7684\uff0c\u53ef\u80fd\u4f1a\u66f4\u597d\u7406\u89e3\u63d2\u5934\u4e4b\u95f4\u7684\u53d8\u5316\u3002\n",
        "postTime": 1659801050,
        "uid": 307940,
        "name": "aaaaaaaawsl",
        "ccfLevel": 4,
        "title": "P3190 [HNOI2007]\u795e\u5947\u6e38\u4e50\u56ed \u9898\u89e3"
    },
    {
        "content": "[\u6b22\u8fce\u535a\u5ba2\u98df\u7528\uff01](https://www.cnblogs.com/LittleMoMol-kawayi/p/solution_LuoGu_P3190.html)\n\n---\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u662f\u4e00\u9053\u63d2\u5934 DP \u9898\uff0c\u56e0\u4e3a\u505a\u5230\u8fd9\u9053\u9898\u7684\u795e\u7287\u5e94\u8be5\u5bf9\u63d2\u5934 DP \u6709\u6240\u4e86\u89e3\uff0c\u90a3\u4e48\u6211\u5c31\u7b80\u5355\u603b\u7ed3\u4e00\u4e0b\u63d2\u5934 DP \u7684\u5927\u81f4\u5185\u5bb9\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u884c\u6211\u4eec\u7528**\u56db\u8fdb\u5236**\u8868\u793a\u5176\u72b6\u6001\uff0c\u56e0\u4e3a\u56db\u8fdb\u5236\u65b9\u4fbf\u4e9b\u3002\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b9\u5757\u7ef4\u62a4\u4e00\u4e2a\u6570 $num \\in \\{0,1,2\\}$\uff0c\u5176\u4e2d $0$ \u8868\u793a\u8fd9\u4e2a\u5757\u4e4b\u524d\u6ca1\u6709\u63d2\u5934\u6307\u5411\u5b83\uff1b\u5bf9\u4e8e\u6709\u63d2\u5934\u6307\u5411\u7684\u65b9\u5757\uff0c\u56e0\u4e3a\u6700\u7ec8\u662f\u4e2a\u73af\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u884c\u88ab\u7ebf\u7a7f\u8fc7\u7684\u6b21\u6570\u5fc5\u5b9a\u4e3a\u5076\u6570\uff08\u4e0a\u53bb\u4e86\u5fc5\u5b9a\u8981\u4e0b\u6765\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u6307\u5411\u8be5\u65b9\u5757\u7684\u63d2\u5934\u662f\u5de6\u8fb9\u7684\u8fd8\u662f\u53f3\u8fb9\u7684\uff0c\u6240\u4ee5\u6709\u4e0b\u9762 $7$ \u79cd\u60c5\u51b5\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ahue73if.png)\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u5730\u601d\u8003\u5bf9\u5e94\u8f6c\u79fb\u65b9\u7a0b\uff0c\u76f4\u63a5\u4e0a\u56fe\u5427\n\n\u5148\u6765\u770b\u524d\u4e09\u79cd\u60c5\u51b5\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qcid85yo.png)\n\n\u518d\u6765\u770b 4\u30015 \u4e24\u79cd\u60c5\u51b5\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7ndlbnqf.png)\n\n\u518d\u770b\u7b2c 6 \u79cd\u60c5\u51b5\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bul6ae6r.png)\n\n\u6700\u540e\u770b\u7b2c 7 \u79cd\u60c5\u51b5\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zj92s35y.png)\n\n\u4f60\u4f1a\u53d1\u73b0\u7b2c 7 \u79cd\u60c5\u51b5\u4f60\u53ea\u80fd\u5c01\u53e3\uff08\u611f\u6027\u7406\u89e3\uff09\uff0c\u6b64\u65f6\u4e00\u4e2a\u73af\u5df2\u7ecf\u5f62\u6210\uff0c\u5bf9\u7b54\u6848\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 600, M = 107, INF = 0x3f3f3f3f;\n\nint n, m;\nint maze[110][10], q[2][N], cnt[2];\nint h[2][M], v[2][M];\n\nint find_pos(int cur, int x)\n{\n\tint t = x % M;\n\twhile (h[cur][t] != -1 && h[cur][t] != x)\n\t\tif ( ++ t == M) t = 0;\n\treturn t;\n}\n\nint get(int state, int k)\n{\n\treturn (state >> (k * 2)) & 3;\n}\n\nint stt(int k, int v)\n{\n\treturn v * (1 << (k * 2));\n}\n\nvoid add(int cur, int state, int w)\n{\n\tint t = find_pos(cur, state);\n\tif (h[cur][t] == -1)\n\t{\n\t\th[cur][t] = state;\n\t\tv[cur][t] = w;\n\t\tq[cur][ ++ cnt[cur]] = t;\n\t}\n\telse v[cur][t] = max(v[cur][t], w);\n\treturn;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\t\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i ++ )\n\t\tfor (int j = 1; j <= m; j ++ )\n\t\t\tcin >> maze[i][j];\n\t\n\tint ans = -INF;\n\tmemset(h, -1, sizeof h);\n\tint cur = 0;\n\tadd(cur, 0, 0);\n\tfor (int i = 1; i <= n; i ++ )\n\t{\n\t\tfor (int j = 1; j <= cnt[cur]; j ++ )\n\t\t\th[cur][q[cur][j]] <<= 2;\n\t\tfor (int j = 1; j <= m; j ++ )\n\t\t{\n\t\t\tint lst = cur;\n\t\t\tcur ^= 1, cnt[cur] = 0;\n\t\t\tmemset(h[cur], -1, sizeof h[cur]);\n\t\t\tfor (int k = 1; k <= cnt[lst]; k ++ )\n\t\t\t{\n\t\t\t\tint state = h[lst][q[lst][k]];\n\t\t\t\tint w = v[lst][q[lst][k]];\n\t\t\t\tint x = get(state, j - 1);\n\t\t\t\tint y = get(state, j);\n\t\t\t\tif (!x && !y)\n\t\t\t\t{\n\t\t\t\t\tadd(cur, state, w);\n\t\t\t\t\tif(i < n && j < m) add(cur, state + stt(j - 1, 1) + stt(j, 2), w + maze[i][j]);\n\t\t\t\t}\n\t\t\t\telse if (!x && y)\n\t\t\t\t{\n\t\t\t\t\tif (i < n) add(cur, state - stt(j, y) + stt(j - 1, y), w + maze[i][j]);\n\t\t\t\t\tif (j < m) add(cur, state, w + maze[i][j]);\n\t\t\t\t}\n\t\t\t\telse if (x && !y)\n\t\t\t\t{\n\t\t\t\t\tif (i < n) add(cur, state, w + maze[i][j]);\n\t\t\t\t\tif (j < m) add(cur, state - stt(j - 1, x) + stt(j, x), w + maze[i][j]);\n\t\t\t\t}\n\t\t\t\telse if (x == 1 && y == 1)\n\t\t\t\t{\n\t\t\t\t\tfor (int u = j + 1, s = 1; ; u ++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tint z = get(state, u);\n\t\t\t\t\t\tif (z == 1) s ++ ;\n\t\t\t\t\t\telse if (z == 2) s -- ;\n\t\t\t\t\t\tif (s == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tadd(cur, state - stt(j - 1, x) - stt(j, y) - stt(u, 1), w + maze[i][j]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (x == 2 && y == 2)\n\t\t\t\t{\n\t\t\t\t\tfor (int u = j - 2, s = 1; ; u -- )\n\t\t\t\t\t{\n\t\t\t\t\t\tint z = get(state, u);\n\t\t\t\t\t\tif (z == 2) s ++ ;\n\t\t\t\t\t\telse if (z == 1) s -- ;\n\t\t\t\t\t\tif (s == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tadd(cur, state - stt(j - 1, x) - stt(j, y) + stt(u, 1), w + maze[i][j]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (x == 2 && y == 1)\n\t\t\t\t{\n\t\t\t\t\tadd(cur, state - stt(j - 1, x) - stt(j, y), w + maze[i][j]);\n\t\t\t\t}\n\t\t\t\telse if (x == 1 && y == 2)\n\t\t\t\t{\n\t\t\t\t\tif (state == stt(j - 1, x) + stt(j, y))\n\t\t\t\t\t\tans = max(ans, w + maze[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}\n```",
        "postTime": 1660285152,
        "uid": 590755,
        "name": "LittleMoMol",
        "ccfLevel": 0,
        "title": "P3190 [HNOI2007]\u795e\u5947\u6e38\u4e50\u56ed \u9898\u89e3"
    },
    {
        "content": "### \u4ec0\u4e48\u662f\u63d2\u5934DP   \n\n\u63d2\u5934DP\u901a\u5e38\u7528\u6765\u89e3\u51b3\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u68cb\u76d8\u95ee\u9898\uff0c\u6bd4\u5982\u7ed9\u4f60\u4e00\u4e9b\u9650\u5236\u6761\u4ef6\uff0c\u8ba9\u4f60\u6c42\u68cb\u76d8\u4e0a\u7684\u4e00\u4e2a\u73af\uff0c\u6216\u8005\u4e00\u4e2a\u7279\u6b8a\u5f62\u72b6\u3002\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u72b6\u538bDP\uff0c\u5176\u5b9e\u662f\u72b6\u538bDP\u7684\u5347\u7ea7\u7248\u3002\u8fd9\u91cc\u5c31\u62ff~~\u5b66\u957f\u63a8\u8350~~\u7684\u6bd2\u7624\u9898[\u795e\u5947\u6e38\u4e50\u56ed](https://www.luogu.com.cn/problem/P3190)\u4e3a\u4f8b\u5427\u3002\n\n### \u4e00\u4e9b\u6982\u5ff5\n\n#### \u63d2\u5934\n\n\u7ed9\u4f60\u4e00\u4e2a\u7f51\u683c\u56fe\uff0c\u8fd8\u6709\u4e00\u4e2a\u6ca1\u5b8c\u6210\u7684\u73af\u8def\uff0c\u4f60\u4f1a\u53d1\u73b0\u6709\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff0c\u7aef\u70b9\u53ef\u4ee5\u5728\u7f51\u683c\u7684\u56db\u4e2a\u8fb9\u4e0a\u7684\u4efb\u610f\u4e00\u8fb9\uff0c\u6211\u4eec\u79f0\u5de6\u7aef\u70b9\u4e3a**\u5de6\u63d2\u5934**\u6216\u8005**\u5f00\u63d2\u5934**\uff0c\u7c7b\u4f3c\u5730\uff0c\u79f0\u53f3\u7aef\u70b9\u4e3a**\u53f3\u63d2\u5934**\u6216\u8005**\u95ed\u63d2\u5934**\u3002\n\n#### \u8f6e\u5ed3\u7ebf\n\n\u6211\u4eec\u7684DP\u662f\u4e00\u683c\u4e00\u683c\u5730\u8fdb\u884c\u7684\uff0c\u5b8c\u6210\u4e86DP\u7684\u7f51\u683c\u548c\u672a\u8fdb\u884cDP\u7684\u7f51\u683c\u5f62\u6210\u4e86\u4e00\u6761\u5206\u754c\u7ebf\uff0c\u8fd9\u6761\u5206\u754c\u7ebf\u5c31\u662f\u8f6e\u5ed3\u7ebf\u3002\n\n\u5982\u56fe\u6240\u793a\uff1a\u84dd\u8272\u7684\u662f\u8f6e\u5ed3\u7ebf\uff0c\u9ec4\u8272\u7684\u662f\u6b63\u5728\u8fdb\u884cDP\u7684\u683c\u5b50\uff0c\u7eff\u8272\u7684\u662f\u63d2\u5934\u3002\n\n![chatou1.JPG](https://i.loli.net/2020/06/11/WpbOyShQtlDo2uC.jpg)\n\n### \u5982\u4f55\u8fdb\u884cDP\n\n#### \u9884\u5904\u7406\n\n\u6211\u4eec\u8bbe $f_{i,j,k}$ **\u8868\u793a\u5f53\u524d\u5904\u7406\u683c\u5b50\u4e3a $(i,j)$\uff0c\u72b6\u6001\u4e3a $k$ \u65f6\u6700\u5927\u7684\u6ee1\u610f\u5ea6\u4e4b\u548c**\uff08\u9898\u76ee\u8981\u6c42\u7684\uff09\u3002  \n\nQ\uff1a\u7b49\u7b49\uff0c\u4ec0\u4e48\u53eb\u201c\u72b6\u6001\u4e3a $k$\u201d\uff1f\n\nA\uff1a\u8fd9\u91cc\uff0c$k$ **\u662f\u4e00\u4e2a\u56db\u8fdb\u5236\u6570\uff0c\u6bcf\u4e00\u4f4d\u90fd\u4ee3\u8868\u7740\u8f6e\u5ed3\u7ebf\u4e0a\u6bcf\u4e00\u5c0f\u6bb5\u7684\u72b6\u51b5\uff0c\u8fd9\u4e00\u4f4d\u4e3a $0$ \u4ee3\u8868\u8fd9\u4e00\u6bb5\u6ca1\u6709\u63d2\u5934**\uff08\u5c31\u50cf\u4e0a\u56fe\u7684\u7b2c\u4e09\u884c\u7b2c\u4e8c\u5217\uff09\uff0c**\u8fd9\u4e00\u4f4d\u4e3a $1$ \u4ee3\u8868\u8fd9\u4e00\u6bb5\u6709\u4e00\u4e2a\u5f00\u63d2\u5934**\uff08\u5c31\u50cf\u4e0a\u56fe\u7684\u7b2c\u4e09\u884c\u7b2c\u4e00\u5217\uff09\uff0c**\u8fd9\u4e00\u4f4d\u4e3a $2$ \u4ee3\u8868\u8fd9\u4e00\u6bb5\u6709\u4e00\u4e2a\u95ed\u63d2\u5934**\uff08\u5c31\u50cf\u4e0a\u56fe\u7684\u7b2c\u4e8c\u884c\u7b2c\u56db\u5217\uff09\u3002\u90a3\u4e48\uff0c\u4e0a\u56fe\u7684\u72b6\u6001\u5c31\u662f `101220` \u3002\n\nQ\uff1a\u65e2\u7136\u6ca1\u6709 $3$\uff0c\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e09\u8fdb\u5236\uff1f\n\nA\uff1a~~\u8fa3\u4f60\u81ea\u5df1\u5199\u4e09\u8fdb\u5236\u4f4d\u8fd0\u7b97\u554a~~\uff01\u7528\u56db\u8fdb\u5236\u7684\u597d\u5904\u5c31\u662f\uff0c\u5b83\u53ef\u4ee5\u548c\u4e8c\u8fdb\u5236\u8054\u7cfb\u8d77\u6765\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u9884\u5904\u7406\u5566\uff01\u5177\u4f53\u6765\u8bf4\u5c31\u662f\uff0c\u5047\u5982**\u8981\u53d6\u56db\u8fdb\u5236\u4e0b\u7684\u7b2c $k$ \u4f4d\uff0c\u90a3\u5c31\u662f\u4e8c\u8fdb\u5236\u7684\u7b2c $2k$ \u4f4d\u548c\u7b2c $2k+1$ \u4f4d**\u3002\n\n\u90a3\u73b0\u5728\u5c31\u628a\u4ee3\u7801\u5199\u51fa\u6765\u5427\uff1a\n\n```cpp\ninline int get(int x,int k){//\u53d6\u51fa\u4e8c\u8fdb\u5236\u72b6\u6001 x \u7684\u7b2c k \u4f4d\n    return (x>>(k<<1))&3;\n}\n```\n\nQ\uff1a\u7b49\u7b49\uff0c\u8fd9\u662f\u4ec0\u4e48\u9b3c\u6211\u770b\u4e0d\u61c2\u554a\uff01\n\nA\uff1a\u90a3\u6211\u89e3\u91ca\u4e00\u4e0b\uff1a`k<<1` \u610f\u601d\u5c31\u662f `k*2` \uff0c\u90a3\u4e48 `x>>(k<<1)` \u610f\u601d\u5c31\u662f**\u72b6\u6001 $x$ \u7684\u7b2c $2k$ \u4f4d**\uff0c\u53c8\u7531\u4e8e\u524d\u9762\u8bf4\u7684\uff0c\u8981\u53d6\u51fa $2k$ \u548c $2k+1$ \u4f4d\uff0c\u5c31\u548c 3\uff08\u5728\u4e8c\u8fdb\u5236\u4e0b\u662f 11\u200b\uff09\u8fdb\u884c\u6309\u4f4d\u4e0e\u5c31\u884c\u4e86\u3002\n\n\u72b6\u538bDP\u7684\u4e00\u4e2a\u91cd\u8981\u6b65\u9aa4\u5c31\u662f**\u9884\u5904\u7406**\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u53ef\u884c\u7684\u72b6\u6001\u3002\n\nQ\uff1a\u4ec0\u4e48\u53eb\u53ef\u884c\uff1f\n\nA\uff1a\u4e00\u4e2a\u72b6\u6001\u53ef\u884c\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u7684\u6761\u4ef6\uff1a\n\n1. \u4e0d\u53ef\u80fd\u51fa\u73b0 3\u3002\uff08\u5e9f\u8bdd\uff09\n2. \u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u9047\u5230\u4e00\u4e2a\u95ed\u63d2\u5934\uff0c\u5c31\u5fc5\u987b\u4e0e\u4ed6**\u5de6\u8fb9\u6700\u8fd1\u7684\u672a\u914d\u5bf9\u7684\u7684\u5f00\u63d2\u5934\u914d\u5bf9**\u3002\uff08\u4ed4\u7ec6\u60f3\u60f3\u4e3a\u4ec0\u4e48\uff09\n3. \u6240\u6709\u63d2\u5934\u90fd\u914d\u5bf9\u4e86\u3002\uff08\u5e9f\u8bdd\uff09\n\n\u6211\u4eec\u7528 `s[]` \u6570\u7ec4\u8bb0\u5f55\u63d2\u5934\u7684\u4f4d\u7f6e\uff0c`Map[i][j]` \u8868\u793a\u72b6\u6001 $i$ \u4e0b $j$ \u914d\u5bf9\u7684\u63d2\u5934\uff0c`sta[]` \u8bb0\u5f55\u5408\u6cd5\u7684\u72b6\u6001\u3002\n\n\u90a3\u4e48\u5199\u51fa\u4ee3\u7801\uff1a\n\n``` cpp\ninline void prework(){\n    maxk=1<<((m+1)<<1);//\u6211\u77e5\u9053\u4f60\u53ef\u80fd\u5bf9\u6b64\u4e0d\u7406\u89e3\uff0c\u8bf7\u770b\u6ce8\u89e31\n    for(int k=0;k<maxk;++k){\n        bool flag=true;//flag=true \u8868\u793a\u8fd9\u79cd\u72b6\u6001\u662f\u5408\u6cd5\u7684\n        sp=0;//\u8868\u793a\u8fd9\u79cd\u72b6\u6001\u6709\u51e0\u4e2a\u5f00\u63d2\u5934\n        for(int j=0,cur;j<=m;++j){//\u4ece\u5de6\u5f80\u53f3\u626b\n            cur=get(k,j);//\u8f6e\u5ed3\u7ebf\u4e0a\u8fd9\u4e00\u6bb5\u662f\u4ec0\u4e48\n            if(cur==3){flag=false;break;}//\u5408\u6cd5\u7684\u72b6\u6001\u4e0d\u4f1a\u51fa\u73b03\n            if(cur==2){//\u8fd9\u662f\u4e2a\u95ed\u63d2\u5934\n                if(sp<=0){flag=false;break;}//\u6ca1\u6709\u53ef\u4ee5\u914d\u5bf9\u7684\u63d2\u5934\uff0c\u72b6\u6001\u4e0d\u5408\u6cd5\n                Map[k][j]=s[sp];//\u9047\u5230\u4e00\u4e2a\u95ed\u63d2\u5934\uff0c\u5c31\u5fc5\u987b\u4e0e\u4ed6\u5de6\u8fb9\u6700\u8fd1\u7684\u672a\u914d\u5bf9\u7684\u7684\u5f00\u63d2\u5934\u914d\u5bf9\n                Map[k][s[sp]]=j;\n                sp--;//\u53ef\u4ee5\u914d\u5bf9\u7684\u5f00\u63d2\u5934\u51cf\u4e00\n\t\t\t}\n            else if(cur==1)s[++sp]=j;//\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u5f00\u63d2\u5934\n        }\n        if(flag&&sp==0)sta[++cnt]=k;//\u5408\u6cd5\u7684\u8bdd\u8bb0\u5f55\u8fd9\u4e2a\u72b6\u6001\n\t}\n}\n```\n\n> \u6ce8\u89e31\uff1a`maxk=1<<((m+1)<<1)` \u7528\u6570\u5b66\u8bed\u8a00\u8868\u8fbe\u5c31\u662f $maxk=2^{2(m+1)}=4^{m+1}$ \uff0c\u8868\u793a\u6709\u591a\u5c11\u79cd\u72b6\u6001\uff1b\u662f `m+1` \u800c\u4e0d\u662f `m` \u662f\u56e0\u4e3a\u8f6e\u5ed3\u7ebf\u7684\u957f\u5ea6\u662f `m+1` \u800c\u4e0d\u662f `m` \uff08\u56e0\u4e3a\u6709\u4e00\u4e2a\u5c0f\u62d0\u5f2f\uff09\u3002\n\n#### \u9012\u63a8\u8fc7\u7a0b\n\n\u63a5\u4e0b\u6765\u662f\u91cd\u5934\u620f\uff0c\u4e5f\u5c31\u662f\u9012\u63a8\u8fc7\u7a0b\u3002\u72b6\u6001\u8f6c\u79fb\u9700\u8981\u5206\u5f88\u591a\u60c5\u51b5\u3002\n\n\u6211\u4eec\u4ee4 `cur` \u4e3a\u5f53\u524d\u683c\u4e0a\u63d2\u5934\u7684\u72b6\u6001\uff0c`last` \u4e3a\u5f53\u524d\u683c\u5de6\u63d2\u5934\u7684\u72b6\u6001\u3002\n\n#### \u60c5\u51b5\u4e00\uff1a`cur==0&&last==0`\n\n**\u5c06\u5f53\u524d\u683c\u7684\u4e0b\u63d2\u5934\u8bbe\u4e3a\u65b0\u7684\u5f00\u63d2\u5934\uff0c\u5f53\u524d\u683c\u53f3\u63d2\u5934\u8bbe\u4e3a\u65b0\u7684\u95ed\u63d2\u5934**\u3002\n\n#### \u60c5\u51b5\u4e8c\uff1a`cur==0||last==0`\n\n\u4e24\u79cd\u65b9\u6cd5\uff1a\n\n1. **\u628a\u63d2\u5934\u62c9\u5230\u683c\u5b50\u53f3\u8fb9\uff0c\u53f3\u63d2\u5934\u7684\u503c\u5c31\u662f\u539f\u63d2\u5934\u7684\u503c**\u3002\n2. **\u628a\u63d2\u5934\u62c9\u5230\u683c\u5b50\u4e0b\u8fb9\uff0c\u4e0b\u9762\u7684\u63d2\u5934\u7684\u503c\u5c31\u662f\u539f\u63d2\u5934\u7684\u503c**\u3002\n\n#### \u60c5\u51b5\u4e09\uff1a`cur==2&&last==1`\n\n**\u4e00\u6761\u73af\u8def\u7ed3\u675f\u4e86\uff0c\u66f4\u65b0\u7b54\u6848**\u3002\n\n#### \u60c5\u51b5\u56db\uff1a`cur==1&&last==2`\n\n**\u5220\u53bb\u63d2\u5934\u4ee3\u8868\u7684\u56de\u8def**\u3002\n\n#### \u60c5\u51b5\u4e94\uff1a`cur==last`\n\n\u4e24\u4e2a\u63d2\u5934\u540c\u5f00\u540c\u95ed\u3002\u90a3\u4e48**\u9996\u5148\u6e05\u7a7a\u5339\u914d\uff0c\u7136\u540e\u91cd\u65b0\u5206\u914d**\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u662f\u4e24\u4e2a\u95ed\u63d2\u5934\u5728\u4e00\u8d77\uff0c\u628a `last` \u5bf9\u5e94\u7684\u5f00\u63d2\u5934\u6539\u6210\u95ed\u63d2\u5934\uff1b\u5982\u679c\u662f\u4e24\u4e2a\u5f00\u63d2\u5934\u5728\u4e00\u8d77\uff0c\u628a `cur` \u5bf9\u5e94\u7684\u95ed\u63d2\u5934\u6539\u6210\u5f00\u63d2\u5934\u3002\n\n\u4e0d\u6e05\u695a\u7684\u8bdd\u53ef\u4ee5\u5728\u7eb8\u4e0a\u6a21\u62df\u4e00\u4e0b\u3002\n\n#### \u9012\u63a8\u8fc7\u7a0b\u7684\u4ee3\u7801\n\n\u90a3\u4e48\u4e0b\u9762\u662f\u9012\u63a8\u8fc7\u7a0b\u7684\u4ee3\u7801\uff1a\n\n```cpp\ninline void Update(int &x,int k){\n    if(x<k)x=k;\n}\ninline void solve(){\n    for(int i=1;i<=n;++i){\n        for(int K=1,k;K<=cnt;++K){//\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u53ef\u884c\u7684\u72b6\u6001\n            k=sta[K];\n            if(f[i-1][m][k]!=-inf&&get(k,m)==0)//\u5bfc\u5165\u4e0a\u4e00\u884c\u7684\u626b\u63cf\u7ebf\uff1a\u5982\u679c\u4e0a\u4e00\u884c\u7684\u8fd9\u4e2a\u72b6\u6001\u88ab\u66f4\u65b0\u8fc7\u800c\u4e14\u4e0a\u4e00\u884c\u8fd9\u4e00\u4e2a\u72b6\u6001\u7684\u8f6e\u5ed3\u7ebf\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u5e76\u4e0d\u662f\u4ec0\u4e48\u90fd\u6ca1\u6709\n            f[i][0][k<<2]=f[i-1][m][k];\n        }\n        for(int j=1;j<=m;++j){\n            Update(f[i][j][(1<<((j-1)<<1))|(2<<(j<<1))],a[i][j]);//\u521d\u59cb\u5316\n            for(int K=1,k,ck,cur,last;K<=cnt;++K){\n                k=sta[K];\n                if(f[i][j-1][k]==-inf)continue;//\u975e\u6cd5\u60c5\u51b5\n                ck=k&(~(3<<((j-1)<<1)))&(~(3<<(j<<1))); //\u83b7\u5f97\u4e0b\u4e00\u4f4d\u7f6e\u72b6\u6001\u7684\u6a21\u677f\uff0c\u7a7a\u51fa j-1 \u548c j \u4f4d\u4ee5\u586b\u5199\n                cur=get(k,j);last=get(k,j-1);//\u63d2\u5934\u72b6\u6001\n                if(cur==0&&last==0){//\u60c5\u51b5\u4e00\n                    Update(f[i][j][k],f[i][j-1][k]);//\u4ec0\u4e48\u4e5f\u4e0d\u653e\n                    Update(f[i][j][ck|(1<<((j-1)<<1))|(2<<(j<<1))],f[i][j-1][k]+a[i][j]);//\u5728 j-1 \u548c j \u63d2\u5165 1 \u548c 2\uff0c\u4ee3\u8868\u5c06\u5f53\u524d\u683c\u7684\u4e0b\u63d2\u5934\u8bbe\u4e3a\u65b0\u7684\u5f00\u63d2\u5934\uff0c\u5f53\u524d\u683c\u53f3\u63d2\u5934\u8bbe\u4e3a\u65b0\u7684\u95ed\u63d2\u5934\n                }\n                else if(cur==0||last==0){//\u60c5\u51b5\u4e8c\n                    int t=max(cur,last);//\u9009\u51fa\u4e0d\u4e3a\u7a7a\u7684\n                    //\u63a5\u4e0b\u6765\u4e24\u79cd\u65b9\u6cd5\n                    Update(f[i][j][ck|(t<<((j-1)<<1))],f[i][j-1][k]+a[i][j]);\n                    Update(f[i][j][ck|(t<<(j<<1))],f[i][j-1][k]+a[i][j]);\n                }\n                else if(cur==2&&last==1){//\u60c5\u51b5\u4e09\n                    if(!ck)//\u5982\u679c\u786e\u5b9e\u662f\u4e2a\u56de\u8def\n                     Update(res,f[i][j-1][k]+a[i][j]);//\u66f4\u65b0\u7b54\u6848\n                }\n                else if(cur==1&&last==2){\n                    Update(f[i][j][ck],f[i][j-1][k]+a[i][j]);//\u5220\u53bb\u8fd9\u4e24\u4e2a\u63d2\u5934\u4ee3\u8868\u7684\u56de\u8def\n                }\n                else if(cur==last){\n                    int t=ck&(~(3<<(Map[k][j-1]<<1)))&(~(3<<(Map[k][j]<<1)));//\u6e05\u7a7a\u5339\u914d\n                    t=t|(1<<(Map[k][j]<<1))|(2<<(Map[k][j-1]<<1));//\u91cd\u65b0\u5339\u914d\n                    Update(f[i][j][t],f[i][j-1][k]+a[i][j]);\n                }\n            }\n        }\n    }\n    cout<<res<<endl;\n}\n```\n\n### \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=110;\nconst int maxm=20;\nconst int maxs=(1<<14);\nconst int inf=1e9;\nint f[maxn][maxm][maxs],a[maxn][maxm];\nint Map[maxs][maxm],sta[maxs],cnt=0,s[maxs],sp;\nint n,m,maxk,res=-inf;\ninline int get(int x,int k){//\u53d6\u51fa\u4e8c\u8fdb\u5236\u72b6\u6001 x \u7684\u7b2c k \u4f4d\n    return (x>>(k<<1))&3;\n}\ninline void prework(){\n    maxk=1<<((m+1)<<1);//\u6211\u77e5\u9053\u4f60\u53ef\u80fd\u5bf9\u6b64\u4e0d\u7406\u89e3\uff0c\u8bf7\u770b\u6ce8\u89e31\n    for(int k=0;k<maxk;++k){\n        bool flag=true;//flag=true \u8868\u793a\u8fd9\u79cd\u72b6\u6001\u662f\u5408\u6cd5\u7684\n        sp=0;//\u8868\u793a\u8fd9\u79cd\u72b6\u6001\u6709\u51e0\u4e2a\u5f00\u63d2\u5934\n        for(int j=0,cur;j<=m;++j){//\u4ece\u5de6\u5f80\u53f3\u626b\n            cur=get(k,j);//\u8f6e\u5ed3\u7ebf\u4e0a\u8fd9\u4e00\u6bb5\u662f\u4ec0\u4e48\n            if(cur==3){flag=false;break;}//\u5408\u6cd5\u7684\u72b6\u6001\u4e0d\u4f1a\u51fa\u73b03\n            if(cur==2){//\u8fd9\u662f\u4e2a\u95ed\u63d2\u5934\n                if(sp<=0){flag=false;break;}//\u6ca1\u6709\u53ef\u4ee5\u914d\u5bf9\u7684\u63d2\u5934\uff0c\u72b6\u6001\u4e0d\u5408\u6cd5\n                Map[k][j]=s[sp];//\u9047\u5230\u4e00\u4e2a\u95ed\u63d2\u5934\uff0c\u5c31\u5fc5\u987b\u4e0e\u4ed6\u5de6\u8fb9\u6700\u8fd1\u7684\u672a\u914d\u5bf9\u7684\u7684\u5f00\u63d2\u5934\u914d\u5bf9\n                Map[k][s[sp]]=j;\n                sp--;//\u53ef\u4ee5\u914d\u5bf9\u7684\u5f00\u63d2\u5934\u51cf\u4e00\n\t\t\t}\n            else if(cur==1)s[++sp]=j;//\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u5f00\u63d2\u5934\n        }\n        if(flag&&sp==0)sta[++cnt]=k;//\u5408\u6cd5\u7684\u8bdd\u8bb0\u5f55\u8fd9\u4e2a\u72b6\u6001\n\t}\n}\ninline void Update(int &x,int k){\n    if(x<k)x=k;\n}\ninline void solve(){\n    for(int i=1;i<=n;++i){\n        for(int K=1,k;K<=cnt;++K){//\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u53ef\u884c\u7684\u72b6\u6001\n            k=sta[K];\n            if(f[i-1][m][k]!=-inf&&get(k,m)==0)//\u5bfc\u5165\u4e0a\u4e00\u884c\u7684\u626b\u63cf\u7ebf\uff1a\u5982\u679c\u4e0a\u4e00\u884c\u7684\u8fd9\u4e2a\u72b6\u6001\u88ab\u66f4\u65b0\u8fc7\u800c\u4e14\u4e0a\u4e00\u884c\u8fd9\u4e00\u4e2a\u72b6\u6001\u7684\u8f6e\u5ed3\u7ebf\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u5e76\u4e0d\u662f\u4ec0\u4e48\u90fd\u6ca1\u6709\n            f[i][0][k<<2]=f[i-1][m][k];\n        }\n        for(int j=1;j<=m;++j){\n            Update(f[i][j][(1<<((j-1)<<1))|(2<<(j<<1))],a[i][j]);//\u521d\u59cb\u5316\n            for(int K=1,k,ck,cur,last;K<=cnt;++K){\n                k=sta[K];\n                if(f[i][j-1][k]==-inf)continue;//\u975e\u6cd5\u60c5\u51b5\n                ck=k&(~(3<<((j-1)<<1)))&(~(3<<(j<<1))); //\u83b7\u5f97\u4e0b\u4e00\u4f4d\u7f6e\u72b6\u6001\u7684\u6a21\u677f\uff0c\u7a7a\u51fa j-1 \u548c j \u4f4d\u4ee5\u586b\u5199\n                cur=get(k,j);last=get(k,j-1);//\u63d2\u5934\u72b6\u6001\n                if(cur==0&&last==0){//\u60c5\u51b5\u4e00\n                    Update(f[i][j][k],f[i][j-1][k]);//\u4ec0\u4e48\u4e5f\u4e0d\u653e\n                    Update(f[i][j][ck|(1<<((j-1)<<1))|(2<<(j<<1))],f[i][j-1][k]+a[i][j]);//\u5728 j-1 \u548c j \u63d2\u5165 1 \u548c 2\uff0c\u4ee3\u8868\u5c06\u5f53\u524d\u683c\u7684\u4e0b\u63d2\u5934\u8bbe\u4e3a\u65b0\u7684\u5f00\u63d2\u5934\uff0c\u5f53\u524d\u683c\u53f3\u63d2\u5934\u8bbe\u4e3a\u65b0\u7684\u95ed\u63d2\u5934\n                }\n                else if(cur==0||last==0){//\u60c5\u51b5\u4e8c\n                    int t=max(cur,last);//\u9009\u51fa\u4e0d\u4e3a\u7a7a\u7684\n                    //\u63a5\u4e0b\u6765\u4e24\u79cd\u65b9\u6cd5\n                    Update(f[i][j][ck|(t<<((j-1)<<1))],f[i][j-1][k]+a[i][j]);\n                    Update(f[i][j][ck|(t<<(j<<1))],f[i][j-1][k]+a[i][j]);\n                }\n                else if(cur==2&&last==1){//\u60c5\u51b5\u4e09\n                    if(!ck)//\u5982\u679c\u786e\u5b9e\u662f\u4e2a\u56de\u8def\n                     Update(res,f[i][j-1][k]+a[i][j]);//\u66f4\u65b0\u7b54\u6848\n                }\n                else if(cur==1&&last==2){\n                    Update(f[i][j][ck],f[i][j-1][k]+a[i][j]);//\u5220\u53bb\u8fd9\u4e24\u4e2a\u63d2\u5934\u4ee3\u8868\u7684\u56de\u8def\n                }\n                else if(cur==last){\n                    int t=ck&(~(3<<(Map[k][j-1]<<1)))&(~(3<<(Map[k][j]<<1)));//\u6e05\u7a7a\u5339\u914d\n                    t=t|(1<<(Map[k][j]<<1))|(2<<(Map[k][j-1]<<1));//\u91cd\u65b0\u5339\u914d\n                    Update(f[i][j][t],f[i][j-1][k]+a[i][j]);\n                }\n            }\n        }\n    }\n    cout<<res<<endl;\n}\nint main(){\n    ios::sync_with_stdio(0);\n    cin>>n>>m;\n    for(int i=1;i<=n;++i)\n     for(int j=1;j<=m;++j)\n      cin>>a[i][j];\n    prework();\n    for(int i=0;i<=n;++i)\n     for(int j=0;j<=m;++j)\n      for(int k=0;k<maxk;++k)\n       f[i][j][k]=-inf;\n    solve();\n    return 0;\n}\n```\n\n",
        "postTime": 1591877075,
        "uid": 223392,
        "name": "Belarus",
        "ccfLevel": 4,
        "title": "\u63d2\u5934DP\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "### \u6700\u5c0f\u8868\u793a\u6cd5\u3002\n\n\u867d\u7136\u6bd4\u62ec\u53f7\u5e8f\u5217\u6162\u4e00\u70b9\uff0c\u4f46\u662f\u771f\u7684\u5f88\u597d\u7406\u89e3\uff0c\u4e5f\u4e0d\u5bb9\u6613\u5199\u9519\u3002\n\n\uff08\u6ca1\u6709$1A$\u662f\u56e0\u4e3a$i$\u548c$j$\u5199\u53cd\u4e86$QwQ$\n\n> \u6700\u5c0f\u8868\u793a\u6cd5\u662f\u4ec0\u4e48\u5462\uff1f\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u73b0\u5728\u6709\u8fd9\u6837\u4e00\u4e2a\u5e8f\u5217(5,5,3,2,4,1,3,2)\uff0c\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u4ee3\u8868\u7b2ci\u4e2a\u683c\u5b50\u6240\u5c5e\u7684\u8fde\u901a\u5206\u91cf\u3002\u56e0\u4e3a\u7f16\u53f7\u662f\u4eba\u4e3a\u8bbe\u7f6e\u7684\uff0c\u6240\u4ee5\u5176\u6bcf\u4e00\u4e2a\u7f16\u53f7\u4e5f\u53ef\u4ee5\u4e00\u4e00\u6620\u5c04\u6210\u7b49\u6548\u7684\u5176\u4ed6\u7f16\u53f7\u3002\u4e3a\u4e86\u8fde\u901a\u6027\u8868\u793a\u7684\u89c4\u8303\u548c\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u5e8f\u5217\u6574\u7406\u6210\u610f\u4e49\u7b49\u6548\u7684\u524d\u63d0\u4e0b\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5f62\u5f0f\uff0c\u5bf9\u8fd9\u4e2a\u5e8f\u5217\u5c31\u662f(1,1,2,3,4,5,2,3)\u3002\n\n\u5728\u8fd9\u4e2a\u9898\u76ee\u4e2d\u540c\u7406\u3002\u6211\u4eec\u6574\u7406\u6bcf\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u5bf9\u683c\u5b50\u8003\u8651\u8fde\u901a\u65b9\u5f0f\uff08\u5e94\u8be5\u6ca1\u4ec0\u4e48\u96be\u5ea6\u5427\uff1f\uff09\u3002\n\n\u8bbe\u5f53\u524d\u683c\u5b50\u5de6\u8fb9\u8f6e\u5ed3\u7ebf\u4e3a$b_1$\uff0c\u53f3\u8fb9\u8f6e\u5ed3\u7ebf\u4e3a$b_2$\u3002\n\n- $b1 = b2 = 0$ \uff1a\n\t\n    - \u8fd9\u4e2a\u683c\u5b50\u53ef\u4ee5\u6ca1\u6709\u63d2\u5934\u3002\n    \n    - \u4e5f\u53ef\u4ee5\u65b0\u5efa\u8fde\u901a\u5206\u91cf\uff0c\u5411\u4e0b\u5411\u53f3\u8fde\u63a5\u3002\n    \n- $b1$ \u548c $b2$\u4e00\u4e2a\u4e3a $0$ \u4e00\u4e2a\u975e $0$\uff1a\n\t\n    - \u53ef\u4ee5\u5411\u5de6\u8fde\u6216\u8005\u5411\u4e0b\u8fde\u3002\n    \n- $b1 != b2$ \u4e14\u4e8c\u8005\u5747\u4e0d\u4e3a $0$\n\n\t- \u5408\u5e76\u4e24\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u628a\u5176\u4e2d\u4e00\u4e2a\u5168\u90fd\u6539\u4e3a\u53e6\u4e00\u4e2a\u3002\n    \n- $b1 = b2$ \u4e14\u4e8c\u8005\u5747\u4e0d\u4e3a $0$\n\n\t- \u5373\u7ec8\u6001\uff0c\u8bb0\u5f55\u7b54\u6848\uff0c\u4e0d\u505a\u8f6c\u79fb\u3002\n    \n$Code$\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 100 + 5;\nconst int base = 999983;\nconst int M = 1000000 + 5;\nconst int INF = 0x7fffffff;\n\nint n, m, ans = -INF, w[N][N], in[N][N]; \n\nint las, cur, cnt[2], nxt[M];\n\nint head[M], dp[2][M], Hash[2][M];\n\nint get_wei (int zt, int wei) {\n\treturn (zt >> (wei * 3)) % 8;\n}\n\nint alt_wei (int zt, int wei, int val) {\n\treturn zt - ((get_wei (zt, wei) - val) << (wei * 3));\n}\n\nvoid cmax (int &x, int y) {x = max (x, y);}\n\nvoid min_express (int &zt) {\n\tint tot = 0, bel[10] = {0};\n\tfor (int i = 0; i <= m; ++i) {\n\t\tint now = get_wei (zt, i);\n\t\tif (now == 0) continue;\n\t\tif (bel[now]) {\n\t\t\tzt = alt_wei (zt, i, bel[now]);\n\t\t} else {\n\t\t\tzt = alt_wei (zt, i, bel[now] = ++tot);\n\t\t}\n\t}\n}\n\nbool one_block (int zt) {\n\tmin_express (zt);\n\tfor (int i = 0; i <= m; ++i) {\n\t\tif (get_wei (zt, i) > 1) {\n\t\t\treturn false;\n\t\t}\t\n\t}\n\treturn true;\n}\n\nvoid update (int zt, int val) {\n\tmin_express (zt); \n\tint _zt = zt % base;\n\tfor (int i = head[_zt]; i; i = nxt[i]) {\n\t\tif (Hash[cur][i] == zt) {\n\t\t\tcmax (dp[cur][i], val); return;\n\t\t}\n\t}\n\tnxt[++cnt[cur]] = head[_zt];\n\thead[_zt] = cnt[cur];\n\tHash[cur][cnt[cur]] = zt;\n\tdp[cur][cnt[cur]] = val;\n}\t\n\nint solve () {\n\tupdate (0, 0);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= cnt[cur]; ++j) {\n\t\t\tHash[cur][j] <<= 3;\n\t\t}\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\tlas = cur, cur ^= 1, cnt[cur] = 0;\n\t\t\tmemset (head, 0, sizeof (head));\n\t\t\tfor (int k = 1; k <= cnt[las]; ++k) {\n\t\t\t\tint zt = Hash[las][k];\n\t\t\t\tint b1 = get_wei (zt, j - 1);\n\t\t\t\tint b2 = get_wei (zt, j - 0);\n\t\t\t\tint val = dp[las][k];\n\t\t\t\tif (b1 + b2 == 0) {\n\t\t\t\t\tupdate (zt, val); // \u4e0d\u9009\n\t\t\t\t\tif (in[i][j + 1] && in[i][j + 1]) {\n\t\t\t\t\t\tint _zt = zt; // \u65b0\u5efa\u8fde\u901a\u5206\u91cf\u8bbe\u7f6e\u4e3a 7\n\t\t\t\t\t\t_zt = alt_wei (_zt, j - 1, 7); \n\t\t\t\t\t\t_zt = alt_wei (_zt, j - 0, 7);\n\t\t\t\t\t\tupdate (_zt, val + w[i][j]);\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\tif (b1 != 0 && b2 == 0) {\n\t\t\t\t\tif (in[i][j + 1]) {\n\t\t\t\t\t\tint _zt = zt; \n\t\t\t\t\t\t_zt = alt_wei (_zt, j - 1, 0);\n\t\t\t\t\t\t_zt = alt_wei (_zt, j - 0, b1);\n\t\t\t\t\t\tupdate (_zt, val + w[i][j]); \n\t\t\t\t\t}\n\t\t\t\t\tif (in[i + 1][j]) { \n\t\t\t\t\t\tupdate (zt, val + w[i][j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (b1 == 0 && b2 != 0) {\n\t\t\t\t\tif (in[i + 1][j]) {\n\t\t\t\t\t\tint _zt = zt;\n\t\t\t\t\t\t_zt = alt_wei (_zt, j - 1, b2);\n\t\t\t\t\t\t_zt = alt_wei (_zt, j - 0, 0);\n\t\t\t\t\t\tupdate (_zt, val + w[i][j]);\n\t\t\t\t\t}\n\t\t\t\t\tif (in[i][j + 1]) {\n\t\t\t\t\t\tupdate (zt, val + w[i][j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (b1 && b2 && b1 != b2) {\n\t\t\t\t\tint _zt = zt;\n\t\t\t\t\t_zt = alt_wei (_zt, j - 1, 0);\n\t\t\t\t\t_zt = alt_wei (_zt, j - 0, 0);\n\t\t\t\t\tfor (int t = 0; t <= m; ++t) {\n\t\t\t\t\t\tif (get_wei (_zt, t) == b2) {\n\t\t\t\t\t\t\t_zt = alt_wei (_zt, t, b1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tupdate (_zt, val + w[i][j]);\n\t\t\t\t} \n\t\t\t\tif (b1 && b2 && b1 == b2) {\n\t\t\t\t\tif (one_block (zt)) {\n\t\t\t\t\t\tans = max (ans, val + w[i][j]);\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main () {\n//\tfreopen (\"data.in\", \"r\", stdin);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\tcin >> w[i][j];\n\t\t\tin[i][j] = true;\n\t\t}\n\t}\n\tcout << solve () << endl;\n}\n```",
        "postTime": 1557391976,
        "uid": 58698,
        "name": "Nativ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3190 \u3010[HNOI2007]\u795e\u5947\u6e38\u4e50\u56ed\u3011"
    },
    {
        "content": "\u5927\u6982\u662f\u7b97\u7b2c\u4e00\u9053\u81ea\u5df1\u505a\u51fa\u6765\u7684\u63d2\u5934dp\uff1f\n\n\uff08\u867d\u7136\u90fd\u662f\u7167\u7740\u6284\u677f\u5b50\u7684\uff09\n\n\uff08\u867d\u7136\u6709\u4e2a\u5730\u65b9\u6b7b\u6d3b\u6ca1\u8c03\u51fa\u6765\u6700\u540e\u53ea\u80fd\u770b\u9898\u89e3\u624d\u53d1\u73b0\u81ea\u5df1\u9519\u5728\u54ea\u91cc\u7684\uff09\n\n\u6211\u5c31\u5f53\u4f60\u4eec\u90fd\u4f1a\u63d2\u5934dp\u4e86\u2026\u2026\n\n\u56e0\u4e3a\u5fc5\u987b\u5f97\u662f\u4e00\u6761\u8def\u5f84\uff0c\u6240\u4ee5\u626b\u63cf\u7ebf\u4e0a\u7684\u63d2\u5934\u5f97\u4e24\u4e24\u5bf9\u5e94\uff0c\u8981\u7528\u62ec\u53f7\u5e8f\u5217\n\n\u7136\u540e\u5206\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\uff0c\u8bb0$p1$\u4e3a\u5f53\u524d\u5173\u952e\u683c\u5de6\u8fb9\u7684\u63d2\u5934\uff0c$p2$\u4e3a\u5f53\u524d\u5173\u952e\u683c\u4e0a\u9762\u7684\u63d2\u5934\n\n$0$\u8868\u793a\u65e0\u63d2\u5934\uff0c$1$\u8868\u793a\u5de6\u62ec\u53f7\uff0c$2$\u8868\u793a\u53f3\u62ec\u53f7\n\n1.$p1==0$\u4e14$p2==0$\n\n\u90a3\u4e48\u5f88\u660e\u663e\u6211\u4eec\u53ef\u4ee5\u628a\u4e0b\u65b9\u63d2\u5934\u8bbe\u4e3a$1$\u53f3\u65b9\u63d2\u5934\u8bbe\u4e3a$2$\uff0c\u5c31\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u8fde\u901a\u5757\u4e86\n\n\u7136\u540e\u6ce8\u610f\u4e0d\u8bbe\u4efb\u4f55\u63d2\u5934\u7684\u72b6\u6001\u4e5f\u8981\u8f6c\u79fb\uff08\u6211\u5c31\u662f\u5728\u8fd9\u91cc\u5751\u4e86\u4e00\u4e2a\u665a\u4e0a\uff09\n\n2.$p1!=0$\u4e14$p2==0$\n\n\u90a3\u4e48\u6211\u4eec\u6709\u4e24\u79cd\u8d70\u6cd5\uff0c\u4e00\u662f\u76f4\u8d70\uff0c\u90a3\u4e48\u53f3\u63d2\u5934\u7684\u503c\u5c31\u662f\u539f\u63d2\u5934\u7684\u503c\uff0c\u4e00\u662f\u62d0\u5f2f\uff0c\u90a3\u4e48\u4e0b\u9762\u7684\u63d2\u5934\u7684\u503c\u5c31\u662f\u5de6\u63d2\u5934\u7684\u503c\n\n3.$p1==0$\u4e14$p2!=0$\n\n\u540c\u4e0a\uff0c\u4e0d\u591a\u8bf4\u4e86\n\n4.$p1==1$\u4e14$p2==1$\n\n\u5c31\u662f\u4e24\u4e2a\u5de6\u62ec\u53f7\u649e\u5230\u4e00\u8d77\u4e86\uff0c\u90a3\u4e48\u628a$p2$\u5bf9\u5e94\u7684\u53f3\u62ec\u53f7\u6539\u6210\u5de6\u62ec\u53f7\n\n5.$p1==1$\u4e14$p2==2$\n\n\u8fd9\u79cd\u60c5\u51b5\u5c31\u8bf4\u660e\u4e00\u6761\u8def\u5f84\u5df2\u7ecf\u7ed3\u675f\u4e86\uff0c\u90a3\u4e48\u6b64\u65f6\u5982\u679c\u8f6e\u5ed3\u7ebf\u4e0a\u6ca1\u6709\u5176\u4ed6\u4efb\u4f55\u63d2\u5934\u5c31\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u4e86\n\n6.$p1==2$\u4e14$p2==1$\n\n\u4e24\u6761\u8def\u5f84\u5728\u8fd9\u91cc\u6c47\u5408\uff0c\u76f4\u63a5\u5408\u5e76\n\n7.$p1==2$\u4e14$p2==2$\n\n\u4e24\u4e2a\u53f3\u62ec\u53f7\u649e\u5230\u4e00\u8d77\u4e86\uff0c\u90a3\u4e48\u628a$p1$\u5bf9\u5e94\u7684\u5de6\u62ec\u53f7\u6539\u6210\u53f3\u62ec\u53f7\n\n\u7136\u540e\u2026\u2026\u5269\u4e0b\u7684\u770b\u4ee3\u7801\u597d\u4e86\uff08\u4f3c\u4e4e\u6211\u7684\u63d2\u5934dp\u5199\u6cd5\u548c\u5f88\u591a\u4eba\u4e0d\u4e00\u6837\u8bf6\u2026\u2026\u8dd1\u5f97\u597d\u6162\u2026\u2026\uff09\n```\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll long long\n#define inf 0x3f3f3f3f3f3f3f3f\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\nconst int mod=200097;\nint n,m,c[105][105];ll ans=-0x3f3f3f3f3f3f3f3f;\nstruct Ha{\n\tint key[mod],sz,Hash[mod];ll val[mod];\n\tinline void init(){\n\t\tmemset(val,0xef,sizeof(val)),memset(key,-1,sizeof(key));\n\t\tsz=0,memset(Hash,0,sizeof(Hash));\n\t}\n\tinline void newhash(int id,int state){Hash[id]=++sz,key[sz]=state,val[sz]=-inf;}\n\tll &operator [](const int state){\n\t\tfor(int i=state%mod;;i=(i+1==mod)?0:i+1){\n\t\t\tif(!Hash[i]) newhash(i,state);\n\t\t\tif(key[Hash[i]]==state) return val[Hash[i]];\n\t\t}\n\t}\n}f[2];\ninline int find(int state,int id){return (state>>((id-1)<<1))&3;}\ninline void set(int &state,int pos,int val){\n\tpos=(pos-1)<<1,state|=3<<pos,state^=3<<pos,state|=val<<pos;\n}\nint link(int state,int pos){\n\tint cnt=0,del=(find(state,pos)==1)?1:-1;\n\tfor(int i=pos;i&&i<=m+1;i+=del){\n\t\tint plug=find(state,i);\n\t\tif(plug==1) ++cnt;\n\t\telse if(plug==2) --cnt;\n\t\tif(!cnt) return i;\n\t}\n\treturn -1;\n}\nvoid solve(int x,int y){\n\tint now=((x-1)*m+y)&1,last=now^1,tot=f[last].sz;\n\tf[now].init();\n\tfor(int i=1;i<=tot;++i){\n\t\tint state=f[last].key[i];ll val=f[last].val[i];\n\t\tint plug1=find(state,y),plug2=find(state,y+1);\n\t\tif(!plug1&&!plug2){\n\t\t\tcmax(f[now][state],val);\n\t\t\tif(x!=n&&y!=m) set(state,y,1),set(state,y+1,2),cmax(f[now][state],val+c[x][y]);\n\t\t}\n\t\telse if(plug1&&!plug2){\n\t\t\tif(x!=n) cmax(f[now][state],val+c[x][y]);\n\t\t\tif(y!=m) set(state,y,0),set(state,y+1,plug1),cmax(f[now][state],val+c[x][y]);\n\t\t}\n\t\telse if(!plug1&&plug2){\n\t\t\tif(y!=m) cmax(f[now][state],val+c[x][y]);\n\t\t\tif(x!=n) set(state,y,plug2),set(state,y+1,0),cmax(f[now][state],val+c[x][y]);\n\t\t}\n\t\telse if(plug1==1&&plug2==1)\n\t\tset(state,link(state,y+1),1),set(state,y,0),set(state,y+1,0),cmax(f[now][state],val+c[x][y]);\n\t\telse if(plug1==1&&plug2==2){\n\t\t\tset(state,y,0),set(state,y+1,0);\n\t\t\tif(!state) cmax(ans,val+c[x][y]);\n\t\t}\n\t\telse if(plug1==2&&plug2==1) set(state,y,0),set(state,y+1,0),cmax(f[now][state],val+c[x][y]);\n\t\telse if(plug1==2&&plug2==2)\n\t\tset(state,link(state,y),2),set(state,y,0),set(state,y+1,0),cmax(f[now][state],val+c[x][y]);\n\t}\n}\nint main(){\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\tfor(int j=1;j<=m;++j)\n\tscanf(\"%d\",&c[i][j]);\n\tf[0].init(),f[0][0]=0;\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=m;++j) solve(i,j);\n\t\tif(i!=n){\n\t\t\tint now=(i*m)&1,tot=f[now].sz;\n\t\t\tfor(int j=1;j<=tot;++j)\n\t\t\tf[now].key[j]<<=2;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1537188794,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3190 \u3010[HNOI2007]\u795e\u5947\u6e38\u4e50\u56ed\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/P3190)\n\n\u63d2\u5934DP\uff0c\u62ec\u53f7\u5e8f\u5217\u3002\n\n\u5177\u4f53\u505a\u6cd5\u4ee5\u53ca\u5206\u7c7b\u90fd\u4e0e[\u8fd9\u9053\u9898](https://www.lydsy.com/JudgeOnline/problem.php?id=1814)\u4e00\u6837\uff0c\u5177\u4f53\u8ba8\u8bba\u8bf7\u770b[\u8fd9\u7bc7\u535a\u5ba2](https://www.luogu.org/blog/foreverlasting/ural-1519formula-1-post)\uff0c\u90a3\u91cc\u5f88\u8be6\u7ec6\u5730\u8bb2\u89e3\u4e86\u3002\u8fd9\u91cc\u53ea\u4e0d\u8fc7\u662f\u628a\u8f6c\u79fb\u65b9\u7a0b\u6362\u4e86\u4e00\u4e0b\u3002\n\ncode:\n```\n//2018.9.10 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register LL\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline LL read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline LL _abs(const res &x){\n    return x>0?x:-x;\n}\ninline LL _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline LL _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int N=1e2+10,M=6+10,P=5e3+10;\nconst int kcz=23333;\nnamespace MAIN{\n    int n,m;\n    int va[N][M];\n    int cur,cnt[2];\n    int hsh[kcz+10];\n    int vis[2][P];\n    LL dp[2][P],ans=-inf;\n    inline void insert(res S,LL sum){\n        res pos=S%kcz;\n        while(hsh[pos]){\n            if(vis[cur][hsh[pos]]==S){dp[cur][hsh[pos]]=_max(dp[cur][hsh[pos]],sum);return;}\n            pos=(pos+1)%kcz;\n        }\n        hsh[pos]=++cnt[cur],vis[cur][hsh[pos]]=S,dp[cur][hsh[pos]]=sum;\n    }\n    inline void MAIN(){\n        n=read(),m=read();\n        for(res i=1;i<=n;i++)\n            for(res j=1;j<=m;j++)\n                va[i][j]=read();\n        cnt[0]=1;\n        for(res i=1;i<=n;i++){\n            for(res j=1;j<=m;j++){\n                cnt[cur^=1]=0;\n                memset(hsh,0,sizeof(hsh));\n                for(res k=1;k<=cnt[cur^1];k++){\n                    res S=vis[cur^1][k],l=(S>>((j-1)<<1))&3,r=(S>>(j<<1))&3;\n                    LL las=dp[cur^1][k],now=las+va[i][j];\n                    if(!l&&!r){\n                        if(i<n&&j<m)insert(S^(1<<((j-1)<<1))^(2<<(j<<1)),now);\n                        insert(S,las);\n                    }\n                    if(l&&!r){\n                        if(j<m)insert(S^(l<<((j-1)<<1))^(l<<(j<<1)),now);\n                        if(i<n)insert(S,now);\n                    }\n                    if(!l&&r){\n                        if(i<n)insert(S^(r<<(j<<1))^(r<<((j-1)<<1)),now);\n                        if(j<m)insert(S,now);\n                    }\n                    if(l==1&&r==1){\n                        res dt=1;\n                        for(res p=j+1;p<=m;p++){\n                            res val=(S>>(p<<1))&3;\n                            if(val==1)dt++;\n                            if(val==2)dt--;\n                            if(!dt){S^=(2<<(p<<1))^(1<<(p<<1));break;}\n                        }\n                        insert(S^(1<<((j-1)<<1))^(1<<(j<<1)),now);\n                    }\n                    if(l==2&&r==2){\n                        res dt=1;\n                        for(res p=j-2;~p;p--){\n                            res val=(S>>(p<<1))&3;\n                            if(val==1)dt--;\n                            if(val==2)dt++;\n                            if(!dt){S^=(1<<(p<<1))^(2<<(p<<1));break;}\n                        }\n                        insert(S^(2<<((j-1)<<1))^(2<<(j<<1)),now);\n                    }\n                    if(l==2&&r==1)insert(S^(2<<((j-1)<<1))^(1<<(j<<1)),now);\n                    if(l==1&&r==2&&(S^(l<<((j-1)<<1))^(r<<(j<<1)))==0)ans=_max(ans,now);\n                }\n            }\n            for(res j=1;j<=cnt[cur];j++)vis[cur][j]<<=2;\n        }\n        printf(\"%lld\\n\",ans);\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1536584172,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010HNOI2007\u3011\u795e\u5947\u6e38\u4e50\u56ed"
    },
    {
        "content": "\u4e00\u9053~~\u5947\u602a\u7684~~\u63d2\u5934dp\uff08\u9ed8\u8ba4\u4f60\u4eec\u4f1a\u63d2\u5934dp\uff09\n\n## \u7528\u4e0d\u7740\u54c8\u5e0c\uff0c\u76f4\u63a5\u5b58\u5408\u6cd5\u4e0b\u6807\u548c\u5b83\u4eec\u5bf9\u5e94\u7684\u7684\u503c\u5c31\u591f\u4e86\n\n> \u6211\u7684\u5947\u4e11\u65e0\u6bd4\u7684\u4ee3\u7801\u7528hash\u540e\u5c31TLE\u4e86......\n\n\u7136\u540e\u662f\u63d2\u5934dp\u6b63\u9898\n\n---\n\n1. 00\uff1a 00\uff08\u4e0d\u5f00\u59cb\u56de\u8def\uff0912\uff08\u5f00\u59cb\u4e00\u4e2a\u8f6c\u89d2\uff09\n2. \u63d2\u5934\u91cc\u6709\u4e00\u4e2a\u662f0\uff1a\u5ef6\u957f\u6216\u8f6c\u5f2f\n3. \u4e24\u4e2a\u63d2\u5934\u76f8\u540c\u4e14\u4e0d\u4e3a0\uff1a\u5982\u679c\u4e24\u4e2a\u90fd\u662f1\u5c31\u6539\u4e0a\u63d2\u5934\u5bf9\u5e94\u76842\uff0c\u5426\u5219\u6539\u5de6\u63d2\u5934\u5bf9\u5e94\u76841\n4. 12\uff1a \u7ed3\u675f\u56de\u8def\uff0c\u5224\u65ad\u8f6e\u5ed3\u7ebf\u4e0a\u6709\u6ca1\u6709\u5176\u5b83\u63d2\u5934\u518d\u7b97\u7b54\u6848\n5. 21\uff1a \u76f4\u63a5\u8fdb\u884c\u8fde\u63a5\uff08\u76f8\u5f53\u4e8e\u6dfb\u52a0\u4e00\u4e2a\u8f6c\u89d2\uff09 \n\n\n\u5176\u4e2d2\uff0c3\uff0c5\u90fd\u662f\u4e0e\u6b63\u5e38\u7684\u63d2\u5934dp\u76f8\u540c\u7684\uff0c\u53ea\u67091\u548c4\u8981\u6ce8\u610f\u4e00\u4e0b\n\n\u5269\u4e0b\u7684\u770b\u4ee3\u7801\u5427\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,bits[20];\ninline void ch(int &val,const int &pos,const int &vv) //\u67e5\u8be2\n{val &= ~(3 << bits[pos - 1]);val |= (vv << bits[pos - 1]);}\ninline int query(const int &val,const int &pos) //\u66f4\u6539\n{ return (val >> bits[pos - 1]) & 3;}\nconst int N = 1048576;\nint sub[N],val[N],l;\nstruct DP \n{\n    int ptr = 0,_sub[N],_val[N];//_sub:\u4e0b\u6807 _val:\u503c\uff08\u4e0d\u7528long long\uff09\n    bool last = 0,vis[N];\n    inline void clear() \n    { memset(vis,0,sizeof(vis));ptr = last = 0; }\n    inline void set_last() {last = 1;} //\u662f\u5426\u4e3a\u6700\u540e\u4e00\u5217\n    DP() {clear(); }\n    inline void add(int s,int vv)\n    {\n        if (last) s <<= 2; //\u6700\u540e\u4e00\u5217\u7684\u7279\u6b8a\u5904\u7406\n       \tif (vis[s]) //\u4e0b\u6807\u51fa\u73b0\u8fc7\n       \t{\n       \t\tif (_val[s] < vv) _val[s] = vv;\t\n        }\n        else\n        {\n            _sub[ptr++] = s;_val[s] = vv; vis[s] = 1;\n        }\n    }\n    inline void fetch_all() //\u83b7\u53d6\u6240\u6709\n    {\n        l = 0;\n        for (int i = 0;i < ptr;i++)\n        {\n            sub[++l] = _sub[i];\n            val[l] = _val[_sub[i]];\n         } \n    }\n} h[2];\nint a[105][10],ans;\nint find_pos(int cur,int pos,int dirc)\n{\n    int tmp = query(cur,pos),top = 0;\n    if (tmp == 1) ++top;else if (tmp == 2) --top;\n    pos += dirc;\n    while (1)\n    {\n        tmp = query(cur,pos);\n        if (tmp == 1) ++top;else if (tmp == 2) --top;\n        if (top == 0) return pos;\n        pos += dirc;\n    }\n}\n\nvoid dp(int now,int i,int j)\n{\n    int pre = now ^ 1,cnt = 0;\n    if (j == m) h[now].set_last();\n    h[pre].fetch_all();\n    for (int k = 1;k <= l;k++)\n    {\n        int stat = sub[k],cur = sub[k],vv = val[k] + a[i][j];\n        int left = query(stat,j),up = query(stat,j + 1);\n        ++cnt;\n        if (left == 0 && up == 0) //Case 1\n        {\n            h[now].add(stat,vv - a[i][j]);\n            if (i == n || j == m) continue;\n            ch(cur,j,1);ch(cur,j + 1,2);h[now].add(cur,vv);\n        }\n        else if (left == 0 || up == 0) //Case 2\n        {\n            if (i != n)\n            {\n                ch(cur,j,left + up);ch(cur,j + 1,0);h[now].add(cur,vv);\n            }\n            if (j != m)\n            {\n                ch(cur,j,0);ch(cur,j + 1,left + up);h[now].add(cur,vv);\n            }\n        }\n        else if (left == up) //Case 3\n        {\n            if (left == 1)\n            {\n                ch(cur,find_pos(stat,j + 1,1),1);\n                ch(cur,j,0);ch(cur,j + 1,0);h[now].add(cur,vv);\n            }\n            else if (left == 2)\n            {\n                ch(cur,find_pos(stat,j,-1),2);  \n                ch(cur,j,0);ch(cur,j + 1,0);h[now].add(cur,vv);\n            }\n        }\n        else if (left == 1 && up == 2) //Case 4\n        {\n            ch(cur,j,0);ch(cur,j + 1,0);if (!cur) ans = max(ans,vv);\n        }\n        else if (left == 2 && up == 1) //Case 5\n        {\n            ch(cur,j,0);ch(cur,j + 1,0);h[now].add(cur,vv);\n        }\n    }\n}\nint main ()\n{\n    for (int i = 0;i < 20;i++) bits[i] = (i << 1);\n    int num = 0;ch(num,1,2);\n    scanf(\"%d%d\",&n,&m);\n    for (int i = 1;i <= n;i++)\n        for (int j = 1;j <= m;j++) scanf(\"%d\",&a[i][j]);\n    if (m > 6) throw;\n    int now = 0;h[1].add(0,0);\n    ans = INT_MIN;\n    for (int i = 1;i <= n;i++)\n        for (int j = 1;j <= m;j++)\n        {\n            dp(now,i,j);now ^= 1;h[now].clear();\n        } \n    printf(\"%d\",ans);\n    return 0;\n}             \n```",
        "postTime": 1552653813,
        "uid": 92602,
        "name": "SIGSEGV",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3190 \u3010[HNOI2007]\u795e\u5947\u6e38\u4e50\u56ed\u3011"
    },
    {
        "content": "# [HNOI2007]\u795e\u5947\u6e38\u4e50\u56ed\n\n[Luogu P3190](https://www.luogu.com.cn/problem/P3190)\n\n\n## Solution\n\n\u53ef\u4ee5\u8bf4\u662f\u6a21\u677f\u9898\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\u4e86\uff0c\u505a\u6cd5\u57fa\u672c\u548c\u6a21\u677f\u9898\u4e00\u81f4\uff0c\u53ea\u6709\u5c11\u90e8\u5206\u5730\u65b9\u9700\u8981\u66f4\u6539\u3002\u5982\u679c\u4f60\u5bf9\u63d2\u5934 DP \u8fd8\u4e0d\u719f\uff0c\u90a3\u5199\u4e00\u5199\u8fd9\u9053\u9898\u4e5f\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9~~\uff08\u63d2\u5934 DP \u7684\u9ed1\u9898\u8fd8\u662f\u6709\u5f88\u591a\u6c34\u9898\u7684\uff09~~\uff08\u63a8\u9500\u4e0b\u6211\u5199\u7684[\u63d2\u5934DP\u7684\u535a\u5ba2](https://www.cnblogs.com/hanx16msgr/p/16572885.html)\uff09\u3002\n\n\u4e0e\u6a21\u677f\u9898\u4e0d\u540c\u7684\u662f\uff0c\u6b64\u9898\u7684\u56de\u8def\u5e76\u4e0d\u8981\u6c42\u8d70\u5b8c\u6574\u4e2a\u65b9\u683c\u56fe\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u683c\u5b50\u5177\u6709\u7684\u63d2\u5934\u53ef\u80fd\u6709 $2$ \u4e2a\u6216\u8005\u662f $0$ \u4e2a\u3002\u90a3\u4e48\u77e5\u9053\u4e86\u8fd9\u70b9\u5c31\u53ef\u4ee5\u6765\u5c1d\u8bd5\u8ba8\u8bba\u4e00\u4e0b\u5404\u79cd\u60c5\u51b5\u4e86\u3002\n\n\u6b64\u9898\u89e3\u4f7f\u7528\u62ec\u53f7\u8868\u793a\u6cd5~~\uff0c\u5982\u679c\u4e0d\u4f1a\u7684\u8bdd\u4e0a\u9762\u7684\u535a\u5ba2\u94fe\u63a5\u6709\u8bf7~~\u3002\n\n### \u5206\u7c7b\u8ba8\u8bba\n\n#### 1. \u6ca1\u6709\u5de6\u63d2\u548c\u4e0a\u63d2\n\n\u6b64\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u524d\u683c\u5b50\u53ef\u4ee5\u6ca1\u6709\u4efb\u4f55\u63d2\u5934\uff08\u4e5f\u5c31\u662f\u8bf4\u4e0d\u8d70\u8fd9\u4e2a\u683c\u5b50\uff09\uff0c\u4e5f\u53ef\u4ee5\u540c\u65f6\u5177\u6709\u53f3\u63d2\u548c\u4e0b\u63d2\uff08\u4f5c\u4e3a\u4e00\u6761\u8def\u5f84\u7684\u62d0\u70b9\uff09\uff1a\n\n$$\n\\begin{matrix}\n&0\\\\\n0&\\square&0\\\\\n&0\n\\end{matrix}\n$$\n\n\u6216\u8005\u662f\n\n$$\n\\begin{matrix}\n&0\\\\\n0&\\square&\\rightarrow_2\\\\\n&\\downarrow_1\n\\end{matrix}\n$$\n\n#### 2. \u53ea\u6709\u5de6\u63d2\n\n\u6b64\u65f6\u5f53\u524d\u683c\u5b50\u53ef\u4ee5\u6709\u4e00\u4e2a\u4e0b\u63d2\u6216\u8005\u53f3\u63d2\uff1a\n\n$$\n\\begin{matrix}\n&0\\\\\n\\rightarrow_{1/2}&\\square&\\rightarrow_{1/2}\\\\\n&0\n\\end{matrix}\n$$\n\n\u6216\u8005\u662f\n\n$$\n\\begin{matrix}\n&0\\\\\n\\rightarrow_{1/2}&\\square&0\\\\\n&\\downarrow_{1/2}\n\\end{matrix}\n$$\n\n\u6b64\u65f6\u7684\u53f3\u63d2\u6216\u4e0b\u63d2\u5e94\u8be5\u4e0e\u5de6\u63d2\u7684\u7f16\u53f7\u4fdd\u6301\u4e00\u81f4\u3002\n\n#### 3. \u53ea\u6709\u4e0b\u63d2\n\n\u4e0e\u4e0a\u8ff0\u60c5\u51b5\u51e0\u4e4e\u76f8\u540c\uff0c\u5c31\u4e0d\u8be6\u7ec6\u518d\u5199\u4e86\u3002\n\n#### 4. \u5de6\u63d2\u4e0a\u63d2\u90fd\u4e3a $1$\n\n\u5982\u679c\u628a $1$ \u7684\u63d2\u5934\u770b\u505a\u662f\u8fdb\u5165\u5f53\u524d\u683c\u5b50\uff0c$2$ \u7684\u63d2\u5934\u770b\u505a\u8d70\u51fa\u5f53\u524d\u683c\u5b50\uff0c\u90a3\u4e48\u5982\u679c\u5de6\u63d2\u548c\u4e0a\u63d2\u90fd\u662f $1$\uff0c\u5c31\u5e94\u8be5\u5c06\u4e00\u4e2a\u63d2\u5934\u4ee3\u8868\u7684\u8def\u5f84\u53cd\u5411\uff0c\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u5c06\u4e0a\u63d2\u5bf9\u5e94\u7684\u90a3\u4e2a $2$ \u7684\u63d2\u5934\u66f4\u6539\u4e3a $1$\uff0c\u540c\u65f6\u5220\u9664\u5f53\u524d\u683c\u5b50\u7684\u5de6\u63d2\u548c\u4e0a\u63d2\uff08\u8fd9\u4e2a\u4e0d\u597d\u7528\u77e9\u9635\u6765\u753b\u56fe\u8868\u8fbe\uff0c\u53ef\u4ee5\u81ea\u5df1\u5728\u8349\u7a3f\u7eb8\u4e0a\u753b\u4e00\u753b~~\uff0c\u8349\u7a3f\u7eb8\u7684\u529f\u80fd\u53ef\u6bd4\u8fd9\u73a9\u610f\u591a\u591a\u4e86~~\uff09\u3002\n\n#### 5. \u5de6\u63d2\u4e0a\u63d2\u90fd\u4e3a $2$\n\n\u4e0e\u4e0a\u9762\u7684\u90a3\u79cd\u60c5\u51b5\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u9700\u8981\u5c06\u5f53\u524d\u7684\u4e24\u4e2a\u63d2\u5934\u5220\u9664\uff0c\u7136\u540e\u627e\u5230\u5de6\u63d2\u5bf9\u5e94\u7684 $1$ \u7684\u63d2\u5934\u5e76\u5c06\u5176\u66f4\u6539\u4e3a $2$\u3002\n\n#### 6. \u5de6\u63d2\u4e3a $2$\uff0c\u4e0a\u63d2\u4e3a $1$\n\n\u5f53\u524d\u683c\u5b50\u7684\u63d2\u5934\u521a\u597d\u662f\u80fd\u8ba9\u4e24\u6761\u8def\u5f84\u4e00\u8fdb\u4e00\u51fa\u7684\u63a5\u4e0a\uff0c\u6240\u4ee5\u76f4\u63a5\u5220\u9664\u8fd9\u4e24\u4e2a\u63d2\u5934\u5c31\u53ef\u4ee5\u4e86\uff08\u6211\u628a $2$ \u7684\u63d2\u5934\u753b\u6210\u8fdc\u79bb\u5f53\u524d\u683c\u5b50\u7684\u65b9\u5411\u4f1a\u4e0d\u4f1a\u66f4\u597d\u770b\uff09\uff1a\n\n$$\n\\begin{matrix}\n&\\downarrow_1\\\\\n\\leftarrow_2&\\square&0\\\\\n&0\n\\end{matrix}\n$$\n\n#### 7. \u5de6\u63d2\u4e3a $1$\uff0c\u4e0a\u63d2\u4e3a $2$\n\n\u65e2\u7136\u8fd9\u6761\u8def\u5f84\u90fd\u80fd\u5411\u4e0a\u8d70\u4e86\uff0c\u90a3\u4e48\u80af\u5b9a\u5c31\u4f1a\u6784\u6210\u56de\u8def\u4e86\uff0c\u6240\u4ee5\u6b64\u65f6\u66f4\u65b0\u7b54\u6848\uff1a\n\n$$\n\\begin{matrix}\n&\\uparrow_2\\\\\n\\rightarrow_1&\\square&0\\\\\n&0\n\\end{matrix}\n$$\n\n\u56e0\u4e3a\u5728\u5199\u8fd9\u7bc7\u4ee3\u7801\u7684\u65f6\u5019\u76f4\u63a5\u5957\u7528\u4e86\u6a21\u677f\u9898\u7684\u601d\u8def\u548c\u4ee3\u7801\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86\u54c8\u5e0c\u6765\u4f18\u5316\u72b6\u6001\u6570\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a $m\\le 6$ \u7684\u6570\u636e\u91cf\u5b8c\u5168\u662f\u4e0d\u9700\u8981\u7684~~\uff08\u6240\u4ee5\u6211\u5c31\u628a\u54c8\u5e0c\u7684\u6a21\u5199\u6210\u4e86\u4e0e\u6570\u7ec4\u957f\u5ea6\u76f8\u7b49\uff09~~\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0a\u9762\u5206\u7c7b\u8ba8\u8bba\u7684\u65f6\u5019\u7684\u8f6c\u79fb\u662f\u9700\u8981\u8fdb\u884c\u4e00\u5b9a\u7684\u5224\u65ad\u7684\uff08\u5224\u65ad\u65b0\u7684\u72b6\u6001\u662f\u5426\u5408\u6cd5\uff0c\u6bd4\u5982\u63d2\u5934\u662f\u5426\u63d2\u5230\u65b9\u683c\u56fe\u5916\u9762\u53bb\u4e86\u8fd9\u79cd\u60c5\u51b5\uff09\uff0c\u56e0\u4e3a\u4f7f\u7528\u4e86\u54c8\u5e0c\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u975e\u6cd5\u60c5\u51b5\uff0c\u90a3\u4e48\u4e4b\u540e\u4f1a\u518d\u5728\u8fd9\u4e9b\u975e\u6cd5\u60c5\u51b5\u4e0a\u751f\u6210\u65b0\u7684\u975e\u6cd5\u60c5\u51b5\uff0c\u4f1a\u5bfc\u81f4 `RE` \u6216\u8005\u662f `TLE`\uff08\u8fd9\u4e24\u8005\u7684\u533a\u522b\u53d6\u51b3\u4e8e\u4f60\u7684\u6570\u7ec4\u5f00\u4e86\u591a\u5927\uff0c\u592a\u5927\u5c31\u4f1a\u8d85\u65f6\uff0c\u592a\u5c0f\u5c31\u4f1a\u8fd0\u884c\u65f6\u9519\u8bef\uff09\u3002\u5982\u679c\u5224\u65ad\u4e86\u975e\u6cd5\u60c5\u51b5\u7684\u8bdd\uff0c\u6570\u7ec4\u53ef\u4ee5\u5f00\u7684\u975e\u5e38\u5c0f\uff08\u5b9e\u6d4b\u51fa\u6765\u5927\u6982\u53ea\u6709 $200$ \u5de6\u53f3\u7684\u6837\u5b50\uff09\u3002\n\n### Code\n\n\u4ee3\u7801\u7ec6\u8282\u5176\u5b9e\u548c\u6a21\u677f\u9898\u9700\u8981\u6ce8\u610f\u7684\u51e0\u4e4e\u4e00\u81f4\uff0c\u6240\u4ee5\u5c31\u4e0d\u518d\u8bb2\u89e3\u4e86\u3002\n\n```c++\n#include<bits/stdc++.h>\n#define mem(a,b) memset(a,b,sizeof a)\n#define int long long\nusing namespace std;\nvoid read(auto &k)\n{\n\tk=0;auto flag=1;char b=getchar();\n\twhile (!isdigit(b)) {flag=(b=='-')?-1:1;b=getchar();}\n\twhile (isdigit(b)) {k=k*10+b-48;b=getchar();}\n\tk*=flag;\n}\nvoid write(auto k) {if (k<0) {putchar('-'),write(-k);return;}if (k>9) write(k/10);putchar(k%10+48);}\nvoid writewith(auto k,char c) {write(k);putchar(c);}\nint n,m,a[105][105],Fans=INT_MIN;\nint pre=1,cur=0;\nconst int _SIZE=200,HSIZE=200;\nint f[2][_SIZE+5],state[2][_SIZE+5],tot[2],bits[15];\nstruct HASH{\n\tint nxt,to;\n}H[_SIZE+5];\nint ptr[HSIZE+5],at;\nvoid modify(int sta,int val)\n{\n\tint key=sta%HSIZE;\n\tfor (int i=ptr[key];i;i=H[i].nxt)\n\t\tif (state[cur][H[i].to]==sta)\n\t\t{\n\t\t\tf[cur][H[i].to]=max(f[cur][H[i].to],val);\n\t\t\treturn;\n\t\t}\n\ttot[cur]++;if (tot[cur]>_SIZE) printf(\"?\"),exit(0);//\u8fd9\u4e00\u53e5\u7c7b\u4f3c\u4e8eassert\uff0c\u53ea\u4e0d\u8fc7\u662f\u60f3\u770b\u6d4b\u8bd5\u70b9RE\u7684\u539f\u56e0\n\tstate[cur][tot[cur]]=sta;\n\tf[cur][tot[cur]]=val;\n\tH[++at].nxt=ptr[key];\n\tH[at].to=tot[cur];\n\tptr[key]=at;\n}\nvoid init(){for (int i=1;i<=10;i++) bits[i]=i<<1;}\nvoid PlugDP()\n{\n\ttot[cur]=1;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=tot[cur];j++) state[cur][j]<<=2;\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tswap(cur,pre);\n\t\t\ttot[cur]=0;at=0;mem(ptr,0);\n\t\t\tfor (int k=1;k<=tot[pre];k++)\n\t\t\t{\n\t\t\t\tint nowans=f[pre][k],nowsta=state[pre][k];\n\t\t\t\tint isR=(nowsta>>bits[j-1])%4,isD=(nowsta>>bits[j])%4;\n\t\t\t\tif ((!isR) && (!isD))\n\t\t\t\t{\n\t\t\t\t\tif (j!=m && i!=n) modify(nowsta+(1<<bits[j-1])+2*(1<<bits[j]),nowans+a[i][j]);\n\t\t\t\t\tmodify(nowsta,nowans);\n\t\t\t\t}\n\t\t\t\telse if ((!isR) && isD)\n\t\t\t\t{\n\t\t\t\t\tif (j!=m) modify(nowsta,nowans+a[i][j]);\n\t\t\t\t\tif (i!=n) modify(nowsta-isD*(1<<bits[j])+isD*(1<<bits[j-1]),nowans+a[i][j]);\n\t\t\t\t}\n\t\t\t\telse if (isR && (!isD))\n\t\t\t\t{\n\t\t\t\t\tif (i!=n) modify(nowsta,nowans+a[i][j]);\n\t\t\t\t\tif (j!=m) modify(nowsta-isR*(1<<bits[j-1])+isR*(1<<bits[j]),nowans+a[i][j]);\n\t\t\t\t}\n\t\t\t\telse if (isR==1 && isD==1)\n\t\t\t\t{\n\t\t\t\t\tint cnt=1;\n\t\t\t\t\tfor (int l=j+1;l<=m;l++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ((nowsta>>bits[l])%4==1) cnt++;\n\t\t\t\t\t\telse if ((nowsta>>bits[l])%4==2) cnt--;\n\t\t\t\t\t\tif (!cnt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodify(nowsta-(1<<bits[j-1])-(1<<bits[j])-(1<<bits[l]),nowans+a[i][j]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (isR==2 && isD==2)\n\t\t\t\t{\n\t\t\t\t\tint cnt=1;\n\t\t\t\t\tfor (int l=j-2;l;l--)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ((nowsta>>bits[l])%4==1) cnt--;\n\t\t\t\t\t\telse if ((nowsta>>bits[l])%4==2) cnt++;\n\t\t\t\t\t\tif (!cnt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodify(nowsta-2*(1<<bits[j-1])-2*(1<<bits[j])+(1<<bits[l]),nowans+a[i][j]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (isR==2 && isD==1)\n\t\t\t\t\tmodify(nowsta-(1<<bits[j])-2*(1<<bits[j-1]),nowans+a[i][j]);\n\t\t\t\telse if (isR==1 && isD==2 && 2*(1<<bits[j])+(1<<bits[j-1])==nowsta)\n\t\t\t\t\tFans=max(Fans,nowans+a[i][j]);\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main()\n{\n\tread(n),read(m);\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++) read(a[i][j]);\n\tinit();\n\tPlugDP();\n\twritewith(Fans,'\\n');\n\treturn 0;\n}\n\n```",
        "postTime": 1660549417,
        "uid": 345225,
        "name": "Hanx16QwQ",
        "ccfLevel": 0,
        "title": "P3190 [HNOI2007]\u795e\u5947\u6e38\u4e50\u56ed"
    },
    {
        "content": "# \u524d\u8a00\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3190)\n\n\n\n# \u672c\u9898\u601d\u8def\n\n\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u8ba9\u4f60\u6c42\u51fa\u6c42\u4e00\u4e2a\u6700\u5927\u70b9\u6743\u56de\u8def\uff0c\u4e0d\u96be\u60f3\u5230\u63d2\u5934 DP\u3002\n\n\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5957\u63d2\u5934 DP \u7684\u6a21\u677f\u3002\n\n\u6709\u4e00\u4e9b\u7ec6\u8282\u6027\u7684\u95ee\u9898\u9700\u8981\u6ce8\u610f\u6ce8\u610f\uff1a\n\n- \u679a\u4e3e\u6700\u53f3\u70b9\uff0c\u4e0d\u80fd\u5b58\u5728\u53f3\u63d2\u5934\u3002\u4e0d\u7136\u4e4b\u540e\u8f6c\u79fb\u72b6\u6001\u867d\u7136\u6ca1\u8003\u8651\u4f46\u662f\u4f1a\u4e00\u76f4\u8bb0\u5f55\uff0c\u7136\u540e\u70b8\u65f6\u95f4\u548c\u7a7a\u95f4\u3002\n\n- \u5f62\u6210\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21 ```()``` \u7684\u60c5\u51b5\uff0c\u4e0d\u8981\u518d ```push``` \u8fdb\u72b6\u6001\u3002\n\n\u8fd9\u9898\u5bf9\u4e8e\u80cc\u8fc7\u6a21\u677f\u7684\u4f19\u4f34\u4eec\u6765\u8bf4\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u6ce8\u610f\u4e00\u4e0b\u5c31 AC \u4e86\u3002\n\n# code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nstruct hash_table {\n    int hash_mod = 19991;\n    int state[20000], ans[20000], up;\n    int tot, first[20000], nxt[20000], w[20000];\n    void init() {\n        memset(first, 0, sizeof(first));\n        tot = 0;\n        up = 0;\n    }\n    int ins(int sta, int val) {\n        int key = sta%hash_mod;\n        for(int i = first[key]; i; i = nxt[i]) {\n            if(state[w[i]] == sta) return ans[w[i]] = max(ans[w[i]],val);\n        }\n        state[++up] = sta;\n        ans[up] = val;\n        nxt[++tot] = first[key];\n        w[tot] = up;\n        first[key] = tot;\n        return val;\n    }\n}dp[2];\n\n#define prel (1<<bit[j-1])\n#define prer (1<<bit[j])\nint n, m, a[105][10], bit[10];\n\nvoid solve() {\n    int cur = 0, ans = -1e9;\n    dp[cur].init();\n    dp[0].ins(0,0);\n    for(int i = 1; i <= n; ++i) {\n        for(int j = 1; j <= dp[cur].up; ++j) dp[cur].state[j] <<= 2;\n        for(int j = 1; j <= m; ++j) {\n            cur ^= 1;\n            dp[cur].init();\n            for(int k = 1; k <= dp[cur^1].up; ++k) {\n                int sta = dp[cur^1].state[k];\n                int w = dp[cur^1].ans[k];\n                int d = (sta>>bit[j])&3;\n                int r = (sta>>bit[j-1])&3;\n                if(!r && !d) {\n                    dp[cur].ins(sta,w);\n                    if(j != m) dp[cur].ins(sta+prel+2*prer,w+a[i][j]);\n                }\n                else if(!r && d) {\n                    if(j != m) dp[cur].ins(sta,w+a[i][j]);\n                    dp[cur].ins(sta-d*prer+d*prel,w+a[i][j]);\n                }\n                else if(r && !d) {\n                    dp[cur].ins(sta,w+a[i][j]);\n                    if(j != m) dp[cur].ins(sta-r*prel+r*prer,w+a[i][j]);\n                }\n                else if(r == 1 && d == 1) {\n                    int cnt = 1;\n                    for(int p = j+1; p <= m; ++p) {\n                        if(((sta>>bit[p])&3) == 1) ++cnt;\n                        if(((sta>>bit[p])&3) == 2) --cnt;\n                        if(!cnt) {\n                            dp[cur].ins(sta-prel-prer-(1<<bit[p]),w+a[i][j]);\n                            break;\n                        }\n                    }\n                }\n                else if(r == 2 && d == 2) {\n                    int cnt = 1;\n                    for(int p = j-2; p >= 0; --p) {\n                        if(((sta>>bit[p])&3) == 1) --cnt;\n                        if(((sta>>bit[p])&3) == 2) ++cnt;\n                        if(!cnt) {\n                            dp[cur].ins(sta-2*prel-2*prer+(1<<bit[p]),w+a[i][j]);\n                            break;\n                        }\n                    }\n                }\n                else if(r == 2 && d == 1) {\n                    dp[cur].ins(sta-prel*r-prer*d,w+a[i][j]);\n                }\n                else {\n                    if(sta == prel+2*prer) ans = max(ans,w+a[i][j]);\n                    // \u5f62\u6210\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u4e0d\u80fd\u518dpush\u8fdb\u53bb\u4e0d\u7136\u5b58\u5728\u591a\u4e2a\u56de\u8def\n//                    else dp[cur].ins(sta-prel-2*prer,w+a[i][j]);\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\n\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1; i <= n; ++i) for(int j = 1; j <= m; ++j) scanf(\"%d\",&a[i][j]);\n    for(int i = 1; i <= m; ++i) bit[i] = i<<1;\n    solve();\n\treturn 0;\n}\n\n```\n[AC\u8bb0\u5f55](https://www.luogu.com.cn/record/68753336)",
        "postTime": 1644297508,
        "uid": 464732,
        "name": "luqyou",
        "ccfLevel": 5,
        "title": "solution-p3190"
    }
]