[
    {
        "content": "\u6211\u4e0d\u4f1a\u4ec0\u4e48\u534a\u5e73\u9762\u4ea4\uff0c\u4e5f\u4e0d\u60f3\u5199\u961f\u5217\uff0c\u6211\u53ea\u7528\u6700\u66b4\u529b\u7684\u65b9\u6cd5AC\u6b64\u9898\n\n\u9996\u5148\u901a\u8fc7\u624b\u52a8\u6a21\u62df\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n\u77ad\u671b\u5854\u7684\u6a2a\u5750\u6807\u4e00\u5b9a\u5728\u4e24\u6761\u76f4\u7ebf\u7684\u4ea4\u70b9\u5904\n\n\u6240\u4ee5\u6211\u4eec\u5148\u5229\u7528\u5f00\u59cb\u7684n\u4e2a\u70b9\u6c42\u51fan-1\u6761\u76f4\u7ebf\n\n\u7136\u540e\u4e24\u4e24\u679a\u4e3e\u6c42\u4ea4\u70b9\u7684\u6a2a\u5750\u6807\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6a2a\u5750\u6807\u518d\u901a\u8fc7\u679a\u4e3en-1\u6761\u76f4\u7ebf\u6c42\u6700\u9ad8\u70b9\n\n\u7136\u540e\u7b54\u6848\u53d6\u4e00\u4e2a\u6700\u5c0f\u503c\u5373\u53ef\n\n\u590d\u6742\u5ea6$O(n^3)$\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\ntypedef double db;\nconst int N=305;\nconst db inf=99999999999.0;\nint n;\ndb ax[N],ay[N];\nstruct LINE{\n    db k,b; //y=kx+b\n}ln[N];\ndb ans=inf;\ndb sol(db x){ //\u8ba1\u7b97\u7279\u5b9a\u6a2a\u5750\u6807\u7684\u6700\u5c0f\u77ad\u671b\u5854\u9ad8\u5ea6\n    db res=0;\n    for(int i=1;i<n;i++)\n        res=max(res,ln[i].k*x+ln[i].b);\n    return res;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%lf\",&ax[i]);\n    for(int i=1;i<=n;i++)\n        scanf(\"%lf\",&ay[i]);\n    for(int i=1;i<n;i++){\n        ln[i].k=(ay[i]-ay[i+1])/(ax[i]-ax[i+1]);\n        ln[i].b=ay[i]-ln[i].k*ax[i];\n    }\n    for(int i=1;i<=n;i++)\n        ans=min(ans,sol(ax[i])-ay[i]); //\u5148\u679a\u4e3e\u6bcf\u4e2a\u7aef\u70b9\n    for(int i=1;i<n;i++)\n        for(int j=i+1;j<n;j++){\n            db x=(ln[i].b-ln[j].b)/(ln[j].k-ln[i].k); //\u6c42\u4e24\u76f4\u7ebf\u7684\u4ea4\u70b9\n            for(int k=1;k<n;k++)\n                if(ax[k]<=x&&x<=ax[k+1])\n                    ans=min(ans,sol(x)-ln[k].k*x-ln[k].b); //\u6700\u5c0f\u5316\u7b54\u6848\n        }\n    printf(\"%.3lf\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1540038177,
        "uid": 18029,
        "name": "\u97f5\u57ce\u5c0f\u7ba1\u5bb6",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2600 \u3010[ZJOI2008]\u77ad\u671b\u5854\u3011"
    },
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u4f7f\u7528\u4e09\u5206\u6cd5\n\n\u5c06\u70b9\u6309\u6a2a\u5750\u6807\u6392\u597d\u5e8f\u540e\n\n\u5bf9\u4e8e\u4efb\u610f\u76f8\u610f\u4e24\u4e2a\u70b9\u8fde\u6210\u7684\u7ebf\u6bb5\uff0c\u77ad\u671b\u5854\u7684\u9ad8\u5ea6 \u662f\u5355\u5cf0\u51fd\u6570\uff0c\u800c\u4e14\u662f\u4e0b\u51f8\u51fd\u6570\n\n\u611f\u6027\u7406\u89e3\u5355\u5cf0\u5c31\u662f\n\n\u77ad\u671b\u5854\u5efa\u7684\u9760\u5de6\uff0c\u4e3a\u4e86\u80fd\u770b\u5230\u53f3\u8fb9\u7684\uff0c\u8981\u9ad8\u4e00\u70b9\n\n\u77ad\u671b\u5854\u5efa\u7684\u9760\u53f3\uff0c\u4e3a\u4e86\u80fd\u770b\u5230\u5de6\u8fb9\u7684\uff0c\u8981\u9ad8\u4e00\u70b9\n\n\u6240\u4ee5\n\u679a\u4e3e\u6240\u6709\u7ebf\u6bb5\uff0c\u4e09\u5206\u7ebf\u6bb5\u4e0a\u5efa\u9020\u77ad\u671b\u5854\u7684\u4f4d\u7f6e\uff0c\u6240\u6709\u7ebf\u6bb5\u4e0a\u7684\u77ad\u671b\u5854\u9ad8\u5ea6\u53d6\u6700\u5c0f\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define N 301\nconst double eps=1e-7;\nint n;\nstruct POINT\n{\n    double x,y;\n}e[N];\nstruct LINE\n{\n    double k,b;\n    bool exit;\n}l[N];\nbool cmp(POINT p,POINT q)\n{\n    return p.x<q.x;\n}\ndouble cal(double x,double y)\n{\n    double tmp=0;\n    for(int i=1;i<n;++i)\n    {\n        if(!l[i].exit) continue;\n        tmp=fmax(tmp,l[i].k*x+l[i].b-y);\n    }\n    return tmp;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i) scanf(\"%lf\",&e[i].x);\n    for(int i=1;i<=n;++i) scanf(\"%lf\",&e[i].y);\n    sort(e+1,e+n+1,cmp);\n    for(int i=1;i<n;++i)\n    {\n        if(fabs(e[i].x-e[i+1].x)<eps) continue;\n        l[i].k=(e[i].y-e[i+1].y)/(e[i].x-e[i+1].x);\n        l[i].b=e[i].y-e[i].x*l[i].k;\n        l[i].exit=true;\n    }\n    double L,R,mid1,mid2;\n    int T;\n    double ans=1e20;\n    for(int i=1;i<n;++i)\n    {\n        if(!l[i].exit) continue;\n        T=100; L=e[i].x; R=e[i+1].x;\n        while(T--)\n        {\n            mid1=L+(R-L)/3; mid2=R-(R-L)/3;\n            if(cal(mid1,l[i].k*mid1+l[i].b)<cal(mid2,l[i].k*mid2+l[i].b)) R=mid2;\n            else L=mid1;\n        }\n        ans=fmin(ans,cal(mid1,l[i].k*mid1+l[i].b));\n    }\n    printf(\"%.3lf\",ans);\n}\n```",
        "postTime": 1511964563,
        "uid": 21351,
        "name": "xuxinyu",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2600 \u3010[ZJOI2008]\u77ad\u671b\u5854\u3011"
    },
    {
        "content": "### \u534a\u5e73\u9762\u4ea4\n\n\u6211\u4eec\u628a\u6bcf\u6761\u7ebf\u770b\u6210\u4e00\u4e2a\u6307\u5411\u53f3\u7684\u5411\u91cf\uff0c\u5b83\u6240\u5728\u76f4\u7ebf\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5e73\u9762\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206\u3002\u8981\u60f3\u8ba9\u4e00\u6761\u7ebf\u4e0a\u6bcf\u5904\u90fd\u88ab\u77ad\u671b\u53f0\u770b\u5230\uff0c\u628a\u77ad\u671b\u53f0\u5efa\u5728\u5176\u5de6\u534a\u5e73\u9762\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u6837\uff0c $n$ \u6761\u76f4\u7ebf\u5c31\u6709 $n$ \u4e2a\u9700\u6c42\uff0c\u8981\u60f3\u5168\u90e8\u6ee1\u8db3\uff0c\u77ad\u671b\u53f0\u9876\u7aef\u5c31\u5fc5\u987b\u5efa\u5230\u8fd9\u4e9b\u534a\u5e73\u9762\u7684\u4ea4\u5904\u3002\n\n\u5df2\u7ecf\u6c42\u5b8c\u534a\u5e73\u9762\u4ea4\uff0c\u518d\u6765\u8003\u8651\u5982\u4f55\u6c42\u6700\u4f18\u65b9\u6848\u3002\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u4e24\u4e2a\u8f6e\u5ed3\uff0c\u4e00\u4e2a\u662f\u4e0a\u9762\u7684\u534a\u5e73\u9762\u4ea4\uff0c\u662f\u77ad\u671b\u53f0\u9876\u7aef\u5fc5\u987b\u6240\u5728\u7684\u533a\u57df\uff0c\u4e00\u4e2a\u662f\u4e0b\u9762\u7684\u539f\u6751\u5730\u5f62\u56fe\uff0c\u662f\u77ad\u671b\u53f0\u5e95\u90e8\u5fc5\u987b\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u8981\u6c42\u4e00\u6761\u5782\u76f4\u4e8e $x$ \u8f74\u7684\u7ebf\uff0c\u4f7f\u5f97\u4e0e\u4e24\u8f6e\u5ed3\u7684\u4ea4\u70b9\u8ddd\u79bb\u6700\u8fd1\u3002\u6700\u4f18\u7684\u65b9\u6848\u4e00\u5b9a\u7ecf\u8fc7\u534a\u5e73\u9762\u4ea4\u7684\u9876\u70b9\u6216\u539f\u6751\u7684\u62d0\u70b9\uff0c\u56e0\u4e3a\u4e24\u6bb5\u7ebf\u6bb5\u659c\u7387\u4e00\u5b9a\uff0c\u4e2d\u95f4\u7684\u70b9\u4e00\u5b9a\u6ca1\u6709\u4e24\u7aef\u8ddd\u79bb\u8fd1\uff0c\u53ef\u4ee5\u753b\u56fe\u770b\u770b\u3002\n\n\u6700\u540e\u5c31\u628a\u534a\u5e73\u9762\u4ea4\u548c\u539f\u5730\u5f62\u56fe\u7684\u62d0\u70b9\u679a\u4e3e\u4e00\u904d\uff0c\u8fc7\u8be5\u70b9\u4f5c\u4e00\u6761\u5782\u76f4\u4e8e $x$ \u8f74\u7684\u76f4\u7ebf\uff0c\u6c42\u5b83\u548c\u53e6\u4e00\u4e2a\u8f6e\u5ed3\u7684\u4ea4\u70b9\u4e0e\u8be5\u70b9\u8ddd\u79bb\uff0c\u53d6\u6700\u5c0f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define x first\n#define y second\n#define D double\n\nusing namespace std;\n\ntypedef pair<D,D> PDD;//\u70b9\nconst int amou=340;\nconst D eps=1e-8;\n\nint cnt,n,m;\nD final=1e15;\nstruct Line{\n\tPDD st,ed;//\u8d77\u70b9\u548c\u7ec8\u70b9\n}line[amou];\nPDD p[amou],ans[amou];\nint q[amou];\n\nPDD operator-(PDD a,PDD b){\n\treturn {a.x-b.x,a.y-b.y};\n}\n\nD get_angle(Line a){//\u6c42\u89d2\u5ea6\n\treturn atan2(a.ed.y-a.st.y,a.ed.x-a.st.x);\n}\n\nint dcmp(D a,D b){//\u6bd4\u8f83\u5927\u5c0f\n\tif(fabs(a-b)<eps) return 0;\n\tif(a<b) return -1;\n\treturn 1;\n}\n\nD cross(PDD a,PDD b){//\u53c9\u4e58\n\treturn a.x*b.y-a.y*b.x;\n}\n\nD area(PDD a,PDD b,PDD c){//\u6c42\u9762\u79ef\n\treturn cross(b-a,c-a);\n}\n\nbool cmp(Line a,Line b){//\u6392\u5e8f\u51fd\u6570\uff0c\u6309\u89d2\u5ea6\n\tD A=get_angle(a),B=get_angle(b);\n\tif(!dcmp(A,B)) return area(a.st,a.ed,b.st)<0;//\u89d2\u5ea6\u4e00\u6837\uff0c\u4fdd\u7559\u5de6\u8fb9\u90a3\u6761\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u51fd\u6570\u4e2d\u5982\u679c\u548c\u524d\u4e00\u6761\u89d2\u5ea6\u4e00\u6837\u5c31\u4e0d\u518d\u91cd\u590d\u5904\u7406\uff0c\u76f8\u5f53\u4e8e\u8df3\u8fc7\uff0c\u6240\u4ee5\u628a\u6700\u5de6\u8fb9\u7684\u6392\u5230\u6700\u524d\u8fb9\uff0c\u624d\u80fd\u5904\u7406\u6b63\u786e\n\treturn A<B;\n}\n\nPDD get_line_intersection_point(PDD s1,PDD t1,PDD s2,PDD t2){//\u6c42\u4ea4\u70b9\n\tPDD u=s1-s2;\n\tD t=cross(t2,u)/cross(t1,t2);\n\treturn {s1.x+t1.x*t,s1.y+t1.y*t};\n}\n\nPDD get_line_intersection_line(Line a,Line b){//\u7ebf\u7ebf\u6c42\u4ea4\u70b9\n\treturn get_line_intersection_point(a.st,a.ed-a.st,b.st,b.ed-b.st);\n}\n\nbool on_right(Line a,Line b,Line c){//bc\u4ea4\u70b9\u662f\u5426\u5728a\u53f3\u8fb9\n\tPDD p=get_line_intersection_line(b,c);\n\treturn area(a.st,a.ed,p)<=0;\n}\n\nbool ccmp(PDD a,PDD b){//\u628a\u534a\u5e73\u9762\u4ea4\u7684\u70b9\u4ece\u5de6\u81f3\u53f3\u6392\n\treturn a.x<b.x;\n}\n\nvoid half_plane_intersection(){\n\tsort(line+1,line+cnt+1,cmp);\n\tint head=0,tail=-1;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(i>1&&!dcmp(get_angle(line[i]),get_angle(line[i-1]))) continue;\n\t\twhile(head+1<=tail&&on_right(line[i],line[q[tail]],line[q[tail-1]])) tail--;\n\t\twhile(head+1<=tail&&on_right(line[i],line[q[head]],line[q[head+1]])) head++;\n\t\tq[++tail]=i;\n\t}\n\twhile(head+1<=tail&&on_right(line[q[head]],line[q[tail]],line[q[tail-1]])) tail--;\n\twhile(head+1<=tail&&on_right(line[q[tail]],line[q[head]],line[q[head+1]])) head++;\n\n\tfor(int i=head;i<tail;i++) ans[++m]=get_line_intersection_line(line[q[i]],line[q[i+1]]);\n\tsort(ans+1,ans+m+1,ccmp);\n\tint posans=1,posp=1;\n\twhile(posans<=m&&posp<=n)//\u540c\u65f6\u679a\u4e3e\uff0c\u4e00\u4e2a\u4e2a\u5730\u5904\u7406\uff0c\u5c31\u4e0d\u7528\u4e8c\u5206\u4e86\n\t{\n\t\tPDD temp;\n\t\tif(ans[posans].x>p[posp].x)//\u4e0a\u8fb9\u7684\u70b9\u5728\u53f3\u8fb9\n\t\t{\n\t\t\ttemp=get_line_intersection_line({ans[posans],ans[posans-1]},{p[posp],{p[posp].x,p[posp].y+100}});//\u4e0a\u8fb9\u7684\u70b9\u548c\u5b83\u4e0a\u4e00\u4e2a\u70b9\u6784\u6210\u7684\u76f4\u7ebf\uff0c\u548c\u8fc7\u4e0b\u8fb9\u7684\u70b9\u5782\u76f4\u4e8ex\u8f74\u7684\u76f4\u7ebf\uff0c\u7684\u4ea4\u70b9\n\t\t\tfinal=min(final,temp.y-p[posp].y);//\u7eb5\u5750\u6807\u4e4b\u5dee\u5c31\u662f\u8ddd\u79bb\n\t\t\tposp++;//\u843d\u540e\u7684\u5f80\u524d\u632a\u4e00\u683c\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp=get_line_intersection_line({p[posp-1],p[posp]},{ans[posans],{ans[posans].x,ans[posans].y+100}});//\u540c\u4e0a\uff0c\u54c1\u5427\n\t\t\tfinal=min(final,ans[posans].y-temp.y);\n\t\t\tposans++;\n\t\t}\n\t}\n    //\u8fd9\u65f6\u6709\u53ef\u80fd\u5176\u4e2d\u4e00\u4e2a\u8fd8\u6ca1\u5904\u7406\u5b8c\u5c31\u9000\u51fa\u4e86\uff0c\u90a3\u5c31\u7ee7\u7eed\u5904\u7406\n\twhile(posans<=m) final=min(final,ans[posans].y-get_line_intersection_line({p[posp-1],p[posp]},{ans[posans],{ans[posans].x,ans[posans].y+100}}).y),posans++;\n\twhile(posp<=n) final=min(final,get_line_intersection_line({ans[posans],ans[posans-1]},{p[posp],{p[posp].x,p[posp].y+100}}).y-p[posp].y),posp++;\n\t\n\tprintf(\"%.3lf\",final);\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lf\",&p[i].x);\n\tfor(int i=1;i<=n;i++) scanf(\"%lf\",&p[i].y);\n\tline[++cnt]={{-110,110},{-110,0}};//\u8fb9\u754c\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u4e0d\u7136\u540e\u9762\u534a\u5e73\u9762\u4ea4\u5c31\u4f1a\u6c42\u5f97\u4e0d\u5b8c\u6574\u3002\u5c31\u8fd9\u4e2a\u4e1c\u897f\u6211\u8c03\u4e86\u4e00\u6574\u5929\n\tfor(int i=1;i<n;i++) line[++cnt]={p[i],p[i+1]};\n\t\n\thalf_plane_intersection();\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1618278916,
        "uid": 280519,
        "name": "Yaha",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2600\u3010[ZJOI2008]\u77ad\u671b\u5854\u3011"
    },
    {
        "content": "\u4e00\u9053\u6570\u8bba+\u6570\u636e\u7ed3\u6784\u597d\u9898\uff0c\u4e09\u5206\u5373\u53ef\u3002\n\n`calc(x, y)` \u51fd\u6570\u8868\u793a\u6c42\u5728\u70b9 $\\left(x,y\\right)$ \u5efa\u9020\u706f\u5854\u7684\u6700\u4f4e\u9ad8\u5ea6\u3002\n\n```cpp\n#include <bits/stdc++.h>\ntypedef long long ll;\n\nusing namespace std;\n\nint read() {\n    int x = 0; bool m = 0; char c = getchar();\n    while (!isdigit(c) && c != '-') c = getchar();\n    if (c == '-') m = 1, c = getchar();\n    while (isdigit(c)) x = x * 10 + c - '0', c = getchar();\n    if (m) return -x; else return x;\n}\n\nconst int maxn = 305;\nint n;\ndouble mid, ans = 1e200, lbound, rbound, lmid, rmid;\ndouble x[maxn], y[maxn], k[maxn], b[maxn];\n\ndouble calc(double x, double y) {\n    double ans = 0;\n    for (int i = 1; i < n; i++)\n        ans = max(ans, x * k[i] + b[i] - y);\n    return ans;\n}\n\nint main() {\n\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n        scanf(\"%lf\", &x[i]);\n    for (int i = 1; i <= n; i++)\n        scanf(\"%lf\", &y[i]);\n\n    for (int i = 1; i < n; i++) {\n        k[i] = (y[i + 1] - y[i]) / (x[i + 1] - x[i]);\n        b[i] = y[i] - x[i] * k[i];\n    }\n\n    for (int i = 1; i < n; i++) {\n        lbound = x[i];\n        rbound = x[i + 1];\n        for (int t = 100; t; t--) {\n            lmid = lbound + (rbound - lbound) / 3;\n            rmid = rbound - (rbound - lbound) / 3;\n            if (calc(lmid, lmid * k[i] + b[i]) < calc(rmid, rmid * k[i] + b[i]))\n                rbound = rmid;\n            else\n                lbound = lmid;\n        }\n        mid = (lbound + rbound) / 2;\n        ans = min(ans, calc(mid, mid * k[i] + b[i]));\n    }\n    printf(\"%.3lf\\n\", ans);\n\n    return 0;\n}\n```",
        "postTime": 1597021176,
        "uid": 349885,
        "name": "HECZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2600 \u3010[ZJOI2008]\u77ad\u671b\u5854\u3011"
    },
    {
        "content": "\u524d\u9762\u5148\u63d0\u9192\u4e0b\uff1a\u867d\u7136\u6570\u636e\u8303\u56f4\u662f 1e6 \u5185\uff0c\u4f46\u7a0b\u5e8f\u4e2d\u7684\u6700\u5927\u503c\u5e94\u8be5\u81f3\u5c11\u5f00\u5230 5e11\uff08\u5de6\u53f3\uff09\u3002\n\n\u8003\u8651\u4e00\u4e2a\u7531\u4e09\u6761\u7ebf\u7ec4\u6210\u7684\u68af\u5f62\u5c71\u5761\uff0c\u5de6\u53f3\u76f4\u7ebf\u659c\u7387\u7684\u7edd\u5bf9\u503c\u5747\u4e3a 1e6\uff1b\u5373\u8fd9\u6837\u4e00\u4e2a\u56fe\u5f62\uff1a\n\n![\u77ad\u671b\u5854](https://cdn.luogu.com.cn/upload/image_hosting/qfray194.png)\n\n\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u77ad\u671b\u5854\u81f3\u5c11\u8981\u5728**\u5de6\u53f3\u76f4\u7ebf\u7684\u4ea4\u70b9\u5904**\uff0c\u800c\u8fd9\u4e2a\u4ea4\u70b9\u7684 $y$ \u5750\u6807\u662f $10^6\\cdot(\\frac 1 2\\cdot10^6)=5\\cdot10^{11}$\u3002\n\n![\u77ad\u671b\u58542](https://cdn.luogu.com.cn/upload/image_hosting/8qa4az2j.png)\n\n\uff08\u5b9e\u9645\u4f4d\u7f6e\u592a\u96be\u7ffb\u4e86\uff08GeoGebra\u5750\u6807\u5230 1e10 \u5c31\u4e0d\u80fd\u518d\u7f29\u653e\u4e86\uff09\u6211\u5c31\u53ea\u653e\u4e2a\u5750\u6807\u4e86qaq\uff09\n\n## \u89e3\u6790\n\n\u8bfb\u5b8c\u9898\u6211\u7acb\u523b\u5c31\u60f3\u5230\u4e86\u4e00\u9053 [\u6c42\u591a\u8fb9\u5f62\u6838\u7684\u9898\u76ee](https://www.luogu.com.cn/problem/UVA1571)\u3002\n\n\u8fd9\u9898\u6c42\u7684\u4e5f\u5927\u6982\u662f\u540c\u4e00\u4e2a\u4e1c\u897f\uff1a\u6211\u4eec\u5c06\u5730\u9762\u62c6\u6210\u4e00\u6761\u6761\u7ebf\u6bb5\uff0c\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u4e00\u6761\u7ebf\u6bb5\u4e00\u5b9a\u8981\u6c42\u77ad\u671b\u5854\u5728\u5b83\u7684 \u201c\u4e0a\u9762\u201d\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u534a\u5e73\u9762\u4ea4\u8dd1\u4e00\u8dd1\u3002\n\n\u6211\u4eec\u5728\u5de6\u4fa7\u548c\u53f3\u4fa7\u7d27\u8d34\u7740\u5730\u9762\u52a0\u4e24\u6761\u8fb9\u754c\uff08\u5c31\u50cf\u9898\u76ee\u793a\u4f8b\u56fe\u7684\u5de6\u53f3\u8fb9\u6846\uff09\uff0c\u5e76\u5728\u4e0a\u9762\u4e5f\u52a0\u4e00\u6761\u8fb9\u754c\uff08\u8981\u6c42\u6bd4\u53ef\u80fd\u6700\u9ad8\u7684\u77ad\u671b\u5854\u5750\u6807\u9ad8\uff09\uff0c\u8fd9\u6837\u6700\u540e\u6c42\u51fa\u7684\u4ea4\u5c31\u4e00\u5b9a\u662f\u4e2a\u51f8\u5305\uff08\u6709\u9650\u7684\u9762\u79ef\uff09\uff0c\u8fd9\u4e2a\u51f8\u5305\u7684\u542b\u4e49\u5c31\u662f**\u77ad\u671b\u5854\u6240\u6709\u53ef\u80fd\u7684\u4f4d\u7f6e**\u3002\n\n\u7531\u5355\u8c03\u6027\u53ef\u4ee5\u60f3\u5230\u51f8\u5305\u53ca\u5730\u9762\u9876\u70b9\u4e00\u5b9a\u6bd4\u8fb9\u4e0a\uff08\u6216\u51f8\u5305\u5185\u90e8\u7684\u70b9\uff09\u66f4\u4f18\u3002\n\n\u7528\u534a\u5e73\u9762\u4ea4\u6c42\u51fa\u7684\u51f8\u5305\u5e94\u8be5\u662f\u6309\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u6392\u5217\u7684\u8fb9\uff0c\u76f4\u63a5\u904d\u5386\u6c42\u51fa\u7684\u70b9\u4e5f\u662f\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u7684\uff0c\u4f46\u8fd9\u4e9b\u70b9 $x$ \u5750\u6807\u4e0d\u4e00\u5b9a\u5355\u8c03\uff0c\u8fd9\u5bfc\u81f4\u6211\u4eec**\u5bf9\u6bcf\u4e2a\u51f8\u5305\u70b9\u627e\u5230\u76f8\u5e94\u90a3\u6bb5\u5730\u9762\u7ebf\u6bb5\u6c42\u5854\u9ad8**\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u6216 $O(n)$ \u66b4\u529b\u3002\n\n---\n\n\u6211\u4eec\u628a\u51f8\u5305\u62c6\u6210\u4e0a\u51f8\u58f3\u6216\u4e0b\u51f8\u58f3\uff0c\u663e\u7136\u4e0a\u51f8\u58f3\u7684\u70b9\u6ca1\u6709\u4e0b\u51f8\u58f3\u7684\u70b9\u4f18\uff0c\u662f\u53ef\u4ee5\u820d\u53bb\u7684\u3002\n\n\u56e0\u6b64\u8003\u8651\u5728\u5bf9\u76f4\u7ebf\u6392\u5e8f\u65f6\u505a\u4e9b\u4fee\u6539\uff1a\u6211\u4eec\u6309 tan2 \u51fd\u6570\u8fd4\u56de\u7684\u6781\u89d2\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u53ef\u4ee5\u7ed9\u8fd9\u4e9b\u6781\u89d2\u52a0\u4e0a\u4e00\u4e2a\u5e38\u6570\uff0c\u5c31\u50cf\u4e3a\u4e86\u53d6\u6b63\u52a0\u4e0a $\\pi$ \u4e00\u6837\uff0c\u662f\u4e0d\u5f71\u54cd\u7684\uff09\uff0c\u90a3\u4e48\u6700\u540e\u6c42\u51fa\u7684\u51f8\u5305\u8fb9\u7684\u987a\u5e8f\u5c31\u50cf\u8fd9\u6837\uff1a\n\n![\u51f8\u5305](https://cdn.luogu.com.cn/upload/image_hosting/j67rj9am.png)\n\n\uff08\u4ece\u5927\u5230\u5c0f\u6392\u4e5f\u884c\uff0c\u6c42\u4e0b\u51f8\u58f3\u505a\u6cd5 \u201c\u5bf9\u79f0\u201d \u4e0b\u5c31\u53ef\u4ee5\u4e86\uff09\n\n\u90a3\u4e48\u5728\u987a\u5e8f\u904d\u5386\u6c42\u51fa\u9876\u70b9\u540e\uff08\u90a3\u4e48\u9876\u70b9\u6392\u5e8f\u548c\u8fb9\u662f\u4e00\u6837\u7684\uff09\uff0c\u6211\u4eec\u4ece\u5934\u90e8\u5411\u53f3\u79fb\u52a8\u6307\u9488\u76f4\u5230**\u6307\u9488\u4e0b\u4e00\u4e2a\u4f4d\u7f6e**\u7684\uff08\u53ef\u89c1\u4ee3\u7801\uff09 $x$ \u5750\u6807**\u4e0d\u518d\u51cf\u5c0f**\uff0c\u4ece\u5c3e\u90e8\u5411\u5de6\u79fb\u52a8\u6307\u9488\u76f4\u5230\u6307\u9488\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684 $x$ \u5750\u6807**\u4e0d\u518d\u589e\u5927**\uff0c\u8fd9\u4e2d\u95f4\u7684\u533a\u95f4\uff08\u5305\u542b\u5de6\u53f3\u6307\u9488\u8fb9\u754c\uff09\u91cc\u5c31\u662f\u4e0b\u51f8\u5305\u9876\u70b9\u3002\n\n```cpp\n/*\u8fd9\u91cc\u4e5f\u7ed9\u51fa\u6c42\u51f8\u5305\u9876\u70b9\u7684\u4ee3\u7801*/\n/*hull \u5b58\u51f8\u5305\u8fb9\uff0ctoth \u662f\u8fb9\u6570\u91cf*/\n/*getIntersection(f, g) \u8fd4\u56de f, g \u7684\u4ea4\u70b9*/\ninline int getPoint(line hull[], int toth, vect point[]){\n\tint totp =0;\n\thull[toth++] =hull[0];\n\tfor(int i =0; i < toth-1; ++i) point[totp++] =getIntersection(hull[i], hull[i+1]);\n\treturn totp;\n}\n```\n\n```cpp\n/*\u6307\u9488\u5de6\u95ed\u53f3\u5f00*/\n/*totph \u662f\u51f8\u5305\u9876\u70b9\u6570\uff0cpointh \u5b58\u51f8\u5305\u9876\u70b9*/\n/*gtr(a, b) -> (a > b)*/\nint l =0, r =totph;\nwhile(gtr(pointh[l].x, pointh[l+1].x)) ++l;\nwhile(gtr(pointh[r-2].x, pointh[r-1].x)) --r;\n```\n\n\u6c42\u51fa\u4e0b\u51f8\u58f3\u540e\uff0c\u4e24\u4e2a\u6570\u7ec4\u5185\u70b9\u7684\u5750\u6807\u5c31\u90fd\u662f**\u5355\u8c03\u9012\u589e**\u7684\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u679a\u4e3e\u5176\u4e2d\u4e00\u4e2a\u6570\u7ec4\u7684\u70b9\u65f6\uff0c\u60f3\u8981\u627e\u51fa\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u8fb9\u7684\u7aef\u70b9\uff0c\u53ea\u9700\u7528\u4e00\u4e2a**\u5355\u8c03\u79fb\u52a8**\u7684\u6307\u9488\u627e\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n```cpp\n/*totph \u662f\u51f8\u5305\u9876\u70b9\u6570\uff0cpointh \u5b58\u51f8\u5305\u9876\u70b9*/\n/*point \u5b58\u5730\u9762\u9876\u70b9\uff08\u8f93\u5165\u76f4\u63a5\u7ed9\u51fa\u7684\uff09\uff0ctotp \u662f\u5730\u9762\u9876\u70b9\u6570*/\ninline double get(vect pointh[], int totph, vect point[], int totp){\n\tint l =0, r =totph;\n\twhile(gtr(pointh[l].x, pointh[l+1].x)) ++l;\n\twhile(gtr(pointh[r-2].x, pointh[r-1].x)) --r;\n\t/*\u4e0a\u9762\u8fd9\u6bb5\u5c31\u662f\u6c42\u4e0b\u51f8\u58f3*/\n\tdouble ans =MAX;\n\t/*\u4e0b\u9762\u5bf9\u4e8e\u51f8\u5305\u9876\u70b9\u548c\u5730\u9762\u9876\u70b9\u90fd\u505a\u4e00\u6b21*/\n\tfor(int ph =l, pp =0; ph < r; ++ph){\n\t\t/*\u627e\u5230\u4e24\u4e2a\u70b9 point[pp], point[pp-1] \u4f7f\u5f97 pointh[ph]\uff08\u7684 x \u5750\u6807\uff09\u5939\u5728\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4*/\n\t\twhile(pp < totp && gtr(pointh[ph].x, point[pp].x)) ++pp;\n\t\tif(pp == 0 || pp == totp-1) continue;\n\t\t/*gethigh(p, a, b) \u6c42\u8fc7 p \u7684\u4e14\u5e73\u884c y \u8f74\u7684\u76f4\u7ebf\u4e0e\u76f4\u7ebf (a, b) \u7684\u4ea4\u70b9\u5230 p \u7684\u8ddd\u79bb*/\n\t\tdouble res =gethigh(pointh[ph], point[pp-1], point[pp]);\n\t\tif(gtr(ans, res)) ans =res;\n\t}\n\tfor(int ph =l, pp =0; pp < totp; ++pp){\n\t\twhile(ph < r && gtr(point[pp].x, pointh[ph].x)) ++ph;\n\t\tif(ph == 0 || ph == r-1) continue;\n\t\tdouble res =gethigh(point[pp], pointh[ph-1], pointh[ph]);\n\t\tif(gtr(ans, res)) ans =res;\n\t}\n\treturn ans;\n}\n```\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\nusing std::sort;\nusing std::pair;\ntypedef pair<int, int> pad;\n\n/*------------------------------Computational geometry------------------------------*/\n\nconst double pi =acos(-1), eps =1e-6;\n\nstruct vect{\n\tdouble x, y;\n\tvect(){}\n\tvect(double xx, double yy):x(xx), y(yy){}\n\tvect operator + (vect v){ return vect(x+v.x, y+v.y); }\n\tvect operator - (vect v){ return vect(x-v.x, y-v.y); }\n\tvect operator * (double mu){ return vect(mu*x, mu*y); }\n\tdouble operator / (vect v){ return x*v.y-y*v.x; }/*\u53c9\u79ef*/\n};\n\nstruct line{\n\tvect u, v;\n\tdouble angle;\n\tline(){}\n\tline(vect uu, vect vv):u(uu), v(vv){ angle =atan2(vv.y-uu.y, vv.x-uu.x); }\n};\n\ninline short gtr(double a, double b){ return (a-b > eps); }\n\ninline bool eq(double a, double b){ return (a-b < eps && a-b > -eps); }\n\ninline bool onright(line f, vect w){ return (gtr((w-f.u)/(f.v-f.u), 0)); }\n\nvect getIntersection(line f, line g){\n\tdouble w =((g.u-f.u)/(f.u-f.v))/((f.u-f.v)/(g.u-g.v));\n\treturn g.u+(g.u-g.v)*w;\n}\n\nint cmp(line A, line B){\n\tif(eq(A.angle, B.angle)) return onright(B, A.u);/*\u6709\u5411\u76f4\u7ebf\u6700\u5de6\u7684\u5728\u6700\u540e\u9762\uff0c\u4f1a\u88ab\u4fdd\u7559*/\n\telse return (gtr(B.angle, A.angle));\n}\n\n/*\u6c42\u5de6\u4fa7\u534a\u5e73\u9762\u4ea4*/\ninline pad getHPI(line ls[], int totl, line hull[]){\n\tsort(ls, ls+totl, cmp);\n\tint l =0, r =0;\n\tfor(int i =0; i < totl; ++i){\n\t\twhile(i < totl-1 && eq(ls[i].angle, ls[i+1].angle)) ++i;\n\t\twhile(r-l > 1 && onright(ls[i], getIntersection(hull[r-1], hull[r-2]))) --r;\n\t\tif(eq(ls[i].angle-hull[r-1].angle, pi)) return pad(0, 0);/*\u5224\u65b9\u5411\u76f8\u53cd\u7684\u5e73\u884c*/\n\t\thull[r++] =ls[i];\n\t}\n\twhile(r-l > 1){\n        if(onright(hull[r-1], getIntersection(hull[l], hull[l+1]))) ++l;\n        else if(onright(hull[l], getIntersection(hull[r-1], hull[r-2]))) --r;\n        else break;/*\u5df2\u7ecf\u6ca1\u6709\u66f4\u65b0\u4e86*/\n    }\n\tif(r-l < 3) return pad(0, 0);/*\u8bdd\u8bf4\u8fd9\u9898\u5e94\u8be5\u6ca1\u6709\u65e0\u89e3...*/\n\telse return pad(l, r);\n}\n\ninline double dist(vect x, vect y){ return sqrt((y.x-x.x)*(y.x-x.x)+(y.y-x.y)*(y.y-x.y)); }\n\n/*------------------------------Main------------------------------*/\n\nconst int MAXN =400;\nconst long long MAX =6e11;\n\n/*\u56e0\u4e3a\u6392\u5e8f\uff0c\u8fd9\u91cc\u6c42\u51fa\u7684\u51f8\u5305\u70b9\u662f\u6709\u4e00\u5b9a\u987a\u5e8f\u7684*/\ninline int getPoint(line hull[], int toth, vect point[]){\n\tint totp =0;\n\thull[toth++] =hull[0];\n\tfor(int i =0; i < toth-1; ++i) point[totp++] =getIntersection(hull[i], hull[i+1]);\n\treturn totp;\n}\n\ninline double gethigh(vect p, vect a, vect b){\n\tline f =line(p, p+vect(0, -1)), g =line(a, b);\n\tif(eq(f.angle, g.angle) || eq(f.angle+pi, g.angle) || eq(f.angle, g.angle+pi)) return MAX;\n\treturn dist(p, getIntersection(f, g));\n}\n\ninline double get(vect pointh[], int totph, vect point[], int totp){\n\tint l =0, r =totph;\n\twhile(gtr(pointh[l].x, pointh[l+1].x)) ++l;\n\twhile(gtr(pointh[r-2].x, pointh[r-1].x)) --r;\n\tdouble ans =MAX;\n\tfor(int ph =l, pp =0; ph < r; ++ph){\n\t\twhile(pp < totp && gtr(pointh[ph].x, point[pp].x)) ++pp;\n\t\tif(pp == 0 || pp == totp-1) continue;\n\t\tdouble res =gethigh(pointh[ph], point[pp-1], point[pp]);\n\t\tif(gtr(ans, res)) ans =res;\n\t}\n\tfor(int ph =l, pp =0; pp < totp; ++pp){\n\t\twhile(ph < r && gtr(point[pp].x, pointh[ph].x)) ++ph;\n\t\tif(ph == 0 || ph == r-1) continue;\n\t\tdouble res =gethigh(point[pp], pointh[ph-1], pointh[ph]);\n\t\tif(gtr(ans, res)) ans =res;\n\t}\n\treturn ans;\n}\n\nline ls[MAXN], hull[MAXN];\nvect point[MAXN], pointh[MAXN];\n\ninline int read(){\n\tint x =0; bool f =0; char c =getchar();\n\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn (f) ? -x : x;\n}\n\nint main(){\n\tint n =read();\n\tfor(int i =0; i < n; ++i) point[i].x =read();\n\tfor(int i =0; i < n; ++i) point[i].y =read();\n\tint totl =0;\n\tfor(int i =0; i < n-1; ++i) ls[totl++] =line(point[i], point[i+1]);\n\t/*\u52a0\u5165\u8fb9\u754c*/\n\tls[totl++] =line(vect(point[0].x, MAX), vect(point[0].x, point[0].y));\n\tls[totl++] =line(vect(point[n-1].x, point[n-1].y), vect(point[n-1].x, MAX));\n\tls[totl++] =line(vect(point[n-1].x, MAX), vect(point[0].x, MAX));\n\tpad h =getHPI(ls, totl, hull);\n\tint totph =getPoint(hull, h.second-h.first, pointh);\n\tprintf(\"%.3lf\", get(pointh, totph, point, n));\n}\n```\n",
        "postTime": 1592785980,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2600 \u3010[ZJOI2008]\u77ad\u671b\u5854\u3011"
    },
    {
        "content": "### Po\u59d0\u5199\u4e86\u9000\u706b\n### TA\u535a\u5ba2\u8bbf\u95ee\u91cf\u592a\u9ad8\uff0c\u7136\u540e\u53c8\u6709\u5e03\u5e03\u6263\u8fd9\u4e9b\u4e1c\u897f\n### \u4e8e\u662f\u8fd9\u9053\u9898\u641c\u51fa\u6765\u4e00\u7248\u7684\u9000\u706b\n### \u6211\u7adf\u7136\u4fe1\u4e86\n\n\u4e3a\u4e86\u4e0d\u8f9c\u8d1f\u6211\u56db\u4e2a\u5c0f\u65f6\u7684\u8c03\u53c2\uff0c\u6211\u5199\u4efd\u9898\u89e3\uff1a\n\n\u5982\u679c\u6211\u4eec\u786e\u5b9a\u4e86\u6a2a\u5750\u6807\uff0c\u90a3\u4e48\u7eb5\u5750\u6807\u53ef\u4ee5\u4e8c\u5206\u51fa\u6765\n\n\u8981\u6c42\u6240\u6709\u7684\u6298\u70b9\u4e0e\uff08xx\uff0cyy\uff09\u7684\u8fde\u7ebf\u8981\u662f\u987a\u65f6\u9488\u7684\uff0c\u6240\u4ee5\u5c31\u662fxx\u5de6\u8fb9\u7684\u70b9\u8fde\u5411\u4ed6\u5de6\u8fb9\u659c\u7387\u9012\u589e\uff0c\u53f3\u8fb9\u4e5f\u9012\u589e\n\n\u7136\u540e\u9ad8\u5ea6\u4e0e\u5173\u4e8ex\u662f\u4e00\u4e2a\u6709\u5cf0\u7684\u51fd\u6570\uff08~~\u4e3a\u4ec0\u4e48\u6211\u4e0d\u89c9\u5f97\u662f\u5355\u5cf0~~\uff09\n\n\u6240\u4ee5\u53ef\u4ee5\u9000\u706b\u6765\u627e\u6a2a\u5750\u6807\uff01\n\n### \u6700\u6700\u91cd\u8981\u7684Tip\uff1a\n\u8fd9\u79cd\u8ba1\u7b97\u51e0\u4f55\u7528\u9000\u706b\u505a\u800c\u4e14\u7cbe\u5ea6\u8981\u6c42\u4e0d\u4f4e\u7684\uff0c\u9000\u5b8c\u706b\u4e4b\u540e\u8981\u5728\u7b54\u6848\u9644\u8fd1Rand\u4e0a\u4e2a\u5343\u628a\u6b21\u624d\u662f\u5bf9\u7684\uff08~~\u4e4b\u524d\u6ca1\u6709\u52a0\u53ea\u670910\u5206~~\uff09\n\n\u7c7b\u4f3c\u7684\u8fd9\u79cd\u9898\u8fd8\u6709[JSOI2004]\u5e73\u8861\u70b9 / \u540a\u6253XXX\u3001[POJ]Run Away\uff0c\u90fd\u662f\u8981\u5728\u9000\u706b\u4e4b\u540e\u7684\u7b54\u6848\u9644\u8fd1\u627e\u66f4\u4f18\u89e3\u7684\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#define double long double\nusing namespace std;\nconst int N=400;\nint n,x[N],y[N];\ndouble ans=1e15,lst,pos;\nint Check(double xx,double yy)\n{\n\tdouble lst=-1e15;\n\tint i;\n\tfor(i=1;i<=n&&x[i]<xx;i++)\n\t{\n\t\tdouble a=1.0*(yy-y[i])/(xx-x[i]);\n\t\tif(a<lst) return 0; lst=a;\n\t}\n\tif(x[i]==xx) i++;\n\tlst=-1e15;\n\tfor(;i<=n;i++)\n\t{\n\t\tdouble a=1.0*(yy-y[i])/(xx-x[i]);\n\t\tif(a<lst) return 0; lst=a;\n\t}\n\treturn 1;\n}\ndouble Calc(double xx)\n{\n\tdouble l=0,r=1e11,res=1e12;\n\twhile(r-l>1e-4)\n\t{\n\t\tdouble mid=(l+r)/2;\n\t\tif(Check(xx,mid)) r=mid,res=mid;\n\t\telse l=mid;\n\t}\n\treturn res;\n}\ndouble Find(double xx)\n{\n\tfor(int i=1;i<=n;i++)\n\t\tif(x[i]<xx&&x[i+1]>xx&&i!=n)\n\t\t\treturn 1.0*(y[i+1]-y[i])/(x[i+1]-x[i])*(xx-x[i])+y[i];\n\t\telse if(x[i]==xx) return y[i];\n\treturn 0;\n}\ndouble Rand(double l,double r)\n{\n\tdouble d=rand()%1000/1000.0;\n\treturn d*(r-l)+l;\n}\nvoid SA(double T)\n{\n\tdouble y;\n\tfor(;T>1e-5;T*=0.99)\n\t{\n\t\tdouble d=Rand(-1,1)*T;\n\t\tif(pos+d>x[n]||pos+d<x[1]) continue;\n\t\ty=Find(pos+d);\n\t\tdouble h=Calc(pos+d)-y;\n\t\tif(h<lst||exp((lst-h)/T)>Rand(0,1))\n\t\t{\n\t\t\tans=fmin(ans,h);\n\t\t\tpos=pos+d;lst=h;\n\t\t}\n\t}\n\tfor(int i=1;i<=1000;i++)\n\t{\t\n\t\tdouble d=T*Rand(-1,1);\n\t\tif(pos+d>x[n]||pos+d<x[1]) continue;\n\t\ty=Find(pos+d);\n\t\tdouble h=Calc(pos+d)-y;\n\t\tlst=h;ans=fmin(ans,lst);\n\t}\n}\nint main()\n{\n\tsrand(170530233);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&x[i]);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&y[i]);\n\tfor(int t=1;t<=5;t++)\n\t{\n\t\tint p=rand()%n+1;\n\t\tpos=x[p]; lst=Calc(pos)-y[p];\n\t\tans=fmin(ans,lst);\n\t\tSA(x[n]-x[1]);\n\t}\n\tif(ans<0) ans=0;\n\tprintf(\"%.3Lf\\n\",ans);\n}\n\n```\n~~\u8f7b\u8f7b\u677e\u677e\u5012\u6570Rk1~~\n\n![\u554a\u554a\u554a]( https://cdn.luogu.com.cn/upload/pic/23112.png )",
        "postTime": 1531386888,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2600 \u3010[ZJOI2008]\u77ad\u671b\u5854\u3011"
    },
    {
        "content": "\u5e76\u4e0d\u9700\u8981\u6253\u4ec0\u4e48\u53cc\u7aef\u961f\u5217\uff0c\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u5355\u8c03\u961f\u5217\u5373\u53ef\uff0c\u64cd\u4f5c\u548c\u51f8\u5305\u662f\u5dee\u4e0d\u591a\u7684\u3002\n\n\u8fd9\u9898\u5206\u4e24\u6b65\u3002\u7b2c\u4e00\u6b65\u5c31\u662f\u6c42\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u534a\u5e73\u9762\uff0c\u8fd9\u534a\u90e8\u5206\u5c31\u662f\"\u6c34\u5e73\u53ef\u89c1\u76f4\u7ebf\"\u90a3\u9898\u3002\n\n\u7b2c\u4e8c\u90e8\u5c31\u662f\u8ba1\u7b97\u7b54\u6848\u3002\u53ef\u4ee5\u8bc1\u660e\u77ad\u671b\u5854\u7684\u6a2a\u5750\u6807\u4e00\u5b9a\u5728\u534a\u5e73\u9762\u6216\u5730\u9762\u7684\u62d0\u70b9\u5904\uff0c\u56e0\u4e3a\u4e2d\u95f4\u90e8\u5206\u4e00\u5b9a\u6ca1\u6709\u5176\u4e2d\u4e00\u7aef\u4f18\u79c0\u3002\n\n\u6240\u4ee5\u5bf9\u534a\u5e73\u9762\u548c\u5730\u9762\u7684\u62d0\u70b9\u5206\u522b\u62ce\u51fa\u6765\u8ba8\u8bba\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\n\n\n\n```cpp\n#include    <iostream>\n#include    <cstdio>\n#include    <cstdlib>\n#include    <algorithm>\n#include    <vector>\n#include    <cstring>\n#include    <queue>\n#include    <complex>\n#include    <stack>\n#define dob double\nusing namespace std;\nconst int N = 310;\nconst double eps = 0.00000001;\nstruct Data{\n  double k,b;int bel;\n  bool operator <(const Data &l)const{\n    if(k!=l.k)return k<l.k;\n    return b>l.b;\n  }\n}Line[N];\nint n,que[N],st,ed,tot,x[N],y[N];\ndouble Ans=19260817*666.2333;\ninline int gi()\n{\n  int x=0,res=1;char ch=getchar();\n  while(ch>'9'||ch<'0'){if(ch=='-')res*=-1;ch=getchar();}\n  while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();\n  return x*res;\n}\ninline bool check(double a,double b){return a-b<eps && b-a<eps;}\nint main()\n{\n  n=gi();\n  for(int i=1;i<=n;++i)x[i]=gi();\n  for(int i=1;i<=n;++i)y[i]=gi();\n  for(int i=2;i<=n;++i){\n    double dtx=x[i]-x[i-1];\n    double dty=y[i]-y[i-1];\n    double k=dty/dtx,b=double(y[i])-x[i]*k;\n    Line[++tot]=(Data){k,b,tot};\n  }\n  sort(Line+1,Line+tot+1);\n  st=1;ed=0;\n  que[++ed]=1;que[++ed]=2;\n  for(int i=3;i<=tot;){\n    if(check(Line[i].k,Line[que[ed]].k)){++i;continue;}\n    if(ed==1){que[++ed]=i++;continue;}\n    dob dtk1=(Line[i].k-Line[que[ed]].k);\n    dob dtb1=(Line[que[ed]].b-Line[i].b);\n    dob dtk2=(Line[que[ed]].k-Line[que[ed-1]].k);\n    dob dtb2=(Line[que[ed-1]].b-Line[que[ed]].b);\n    if(dtk1*dtb2>=dtk2*dtb1-eps)--ed;\n    else que[++ed]=i++;\n  }\n  for(int i=1,nl=1;i<=n;++i){\n    while(nl<ed){\n      dob dtk=Line[que[nl]].k-Line[que[nl+1]].k;\n      dob dtb=Line[que[nl+1]].b-Line[que[nl]].b;\n      if(dtk*x[i]<=dtb)++nl;\n      else break;\n    }\n    dob ny=Line[que[nl]].k*dob(x[i])+Line[que[nl]].b;\n    Ans=min(Ans,ny-dob(y[i]));\n  }\n  for(int i=st,nx=1;i<ed;++i){\n    dob dtk=Line[que[i]].k-Line[que[i+1]].k;\n    dob dtb=Line[que[i+1]].b-Line[que[i]].b;\n    dob xn=dtb/dtk;\n    while(nx<n){\n      if(x[nx+1]<=xn)++nx;\n      else break;\n    }\n    dob dtx=x[nx+1]-x[nx],dty=y[nx+1]-y[nx];\n    dob ny=y[nx]+dty*(xn-x[nx])/dtx;\n    Ans=min(Ans,Line[que[i]].k*xn+Line[que[i]].b-ny);\n  }\n  printf(\"%.3lf\\n\",Ans);\n  return 0;\n}\n\n```",
        "postTime": 1500091243,
        "uid": 23875,
        "name": "\u652f\u7fbd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2600 \u3010[ZJOI2008]\u77ad\u671b\u5854\u3011"
    },
    {
        "content": "Update 2020/12/27 \u4fee\u590d\u4e86\u4e00\u70b9\u9505\u3002\nUpdate 2020/12/28 \u5220\u9664\u4e86\u4e0d\u5fc5\u8981\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\u3002\n## \u9898\u76ee\u5927\u610f\n- \u7ed9\u5b9a\u4e00\u6761\u6298\u7ebf\n- \u6c42\u6298\u7ebf\u6b63\u4e0a\u65b9\u4e00\u4e2a\u70b9\uff0c\u4f7f\uff1a\n\t1. \u70b9\u5230\u6298\u7ebf\u7684\u7ad6\u76f4\u8ddd\u79bb\u6700\u5c0f\uff1b\n   1. \u70b9\u4e0e\u4efb\u4e00\u6298\u70b9\u7684\u8fde\u7ebf\u4e0d\u4e0e\u6298\u7ebf\u76f8\u4ea4\u3002\n\n\n## \u524d\u7f6e\u77e5\u8bc6\n1. \u534a\u5e73\u9762\u4ea4\n\n## \u89e3\u6cd5\n1. \u5bf9\u4e8e\u6298\u7ebf\u4e0a\u4efb\u4e00\u4e00\u6bb5\uff0c\u8be5\u70b9\u80fd\u770b\u5230\u5176\u7aef\u70b9\u4ec5\u5f53\u8be5\u70b9\u5728\u8be5\u7ebf\u6bb5\u6240\u5728\u76f4\u7ebf\u7684\u4e0a\u65b9\u3002\n1. \u6c42\u51fa\u6240\u6709\u6ee1\u8db3\uff081\uff09\u7684\u534a\u5e73\u9762\u7684\u4ea4\u96c6\uff0c\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0b\u51f8\u58f3\u3002\n1. \u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u4e0b\u51f8\u58f3\u4e0a\u7684\u70b9 A \u4e0e\u4e00\u4e2a\u6298\u70b9 B \uff0c\u4f7f\u5f97\u5176\u8fde\u7ebf\u4e0e\u6298\u7ebf\u76f8\u4ea4\u3002\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\n    1. \u4ea4\u4e8e\u6298\u70b9 C \uff08\u663e\u7136 B C \u4e0d\u76f8\u90bb\uff09\uff0c\n        \u6613\u77e5 B C \u4e2d\u6298\u7ebf\u4e2d\u5fc5\u6709\u4e0d\u6ee1\u8db3\u5047\u8bbe\u8005\u3002\n    1. \u4ea4\u4e8e\u6298\u7ebf CD , \u6613\u77e5 B C \u4e2d\u6298\u7ebf\u4e2d\u5fc5\u6709\u4e0d\u6ee1\u8db3\u5047\u8bbe\u8005\u3002\n1. \u5982\u4e0b\u56fe\uff08\u753b\u6280\u4e0d\u597d\uff0c\u8bf7\u89c1\u8c05\uff09,\u7070\u8272\u90e8\u5206\u4e3a\u4e0b\u51f8\u58f3\uff0c\u679a\u4e3e\u4e0b\u51f8\u58f3\u4e0e\u539f\u6298\u7ebf\u7684\u6298\u70b9\uff0c\u53ef\u6c42\u6b64\u65f6\u4e24\u8005\u95f4\u7684\u8ddd\u79bb\u3002\u53d6min\u5373\u53ef\u3002\n![\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/atl3eeis.png)\n\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define For(i, a, b) for (int i = a; i <= b; i++)\n#define pss pair<string, string>\ntypedef long long ll;\ntypedef long double ldb;\nldb ASDF , FGHJ;\n#define MAX(a, b) (ASDF = (a)) < (FGHJ = (b)) ? FGHJ : ASDF\n#define MIN(a, b) (ASDF = (a)) > (FGHJ = (b)) ? FGHJ : ASDF\nconst ldb eps = 1e-9;\nconst int MAXN = 307;\nusing namespace std;\n\nint N;\nstruct Node {\n    ldb x, y;\n    bool operator<(Node b) { return x < b.x; }\n} a[MAXN], c[MAXN];\nstruct line {\n    ldb k, b;\n    bool operator<(line g) { return k < g.k || (k == g.k && b > g.b); }\n} e[MAXN];\nint now;\nint stk[MAXN], tp;\ninline line make_line(Node a, Node b) {  // a.x != b.x\n    register line res;\n    res.k = (b.y - a.y) / (b.x - a.x);\n    res.b = a.y - res.k * a.x;\n    return res;\n}\ninline Node intersect(line a, line b) {\n    register Node res;\n    res.x = (a.b - b.b) / (b.k - a.k);\n    res.y = a.k * res.x + a.b;\n    return res;\n}\nldb ans = 1e50;\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cin >> N;\n    For(i, 1, N) cin >> a[i].x;\n    For(i, 1, N) cin >> a[i].y;\n    For(i, 1, N - 1) e[i] = make_line(a[i], a[i + 1]);\n    sort(e + 1, e + N);\n    now = 1;\n    For(i, 2, N - 1) if (e[i].k > e[now].k) e[++now] = e[i];\n    For(i, 1, now) {\n        while (tp > 1 && (e[i].b - e[stk[tp - 1]].b) * (-e[stk[tp]].k + e[stk[tp - 1]].k) <\n                             (e[stk[tp]].b - e[stk[tp - 1]].b) * (-e[i].k + e[stk[tp - 1]].k))\n            tp--;\n        stk[++tp] = i;\n    }\n    For(i, 1, tp - 1) {\n        c[i] = intersect(e[stk[i]], e[stk[i + 1]]);\n        if (c[i].x > a[N].x || c[i].x < a[1].x)\n            continue;\n        register int w = lower_bound(a + 1, a + N + 1, c[i]) - a;\n        register line m = make_line(a[w], a[w - 1]);\n        ans = MIN(ans, c[i].y - m.k * c[i].x - m.b);\n    }\n    For(i, 1, N) {\n        register int w = lower_bound(c + 1, c + tp, a[i]) - c;\n        ans = MIN(ans, e[stk[w]].k * a[i].x + e[stk[w]].b - a[i].y);\n    }\n    cout << fixed << setprecision(3) << ans + eps << endl;//\u6ce8\u610f\u7cbe\u5ea6\uff01\n    return 0;\n}\n```\n",
        "postTime": 1608976684,
        "uid": 219202,
        "name": "code_hunter",
        "ccfLevel": 0,
        "title": "P2600 [ZJOI2008]\u77ad\u671b\u5854 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u6c42\u51fa\u534a\u5e73\u9762\u4ea4\uff0c\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\u4e00\u5b9a\u5728\u7279\u6b8a\u70b9\uff08\u5730\u4e0a\u7684\u70b9\u4ee5\u53ca\u534a\u5e73\u9762\u4ea4\u70b9\uff09\u5904\u4ea7\u751f\n\n\u8fd9\u4e2a\u7ed3\u8bba\u7684\u8bc1\u660e\u53ef\u4ee5\u6839\u636e\u4e0a\u4e0b\u7ebf\u6bb5\u7684\u659c\u7387\u6765\u8003\u8651\uff0c\u5728\u4e24\u4e2a\u7279\u6b8a\u70b9\u95f4\u4e0a\u4e0b\u7684\u7ebf\u6bb5\u659c\u7387\u4e00\u5b9a\u662f\u4e0d\u53d8\u7684\uff0c\u4e8e\u662f\u5b83\u4eec\u7684\u5dee\u4e5f\u662f\u5b9a\u503c\uff0c\u5219\u6700\u4f18\u89e3\u53ea\u4f1a\u5728\u7aef\u70b9\u5904\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\ntypedef struct vec{\n    double x,y;\n    vec() {}\n    vec(double _x,double _y):x(_x),y(_y) {}\n    vec operator + (vec a) {return vec(x+a.x,y+a.y);}\n    vec operator - (vec a) {return vec(x-a.x,y-a.y);}\n    vec operator * (double a) {return vec(x*a,y*a);}\n    double operator * (vec a) {return x*a.y-y*a.x;}\n    double operator ^ (vec a) {return x*a.x+y*a.y;}\n}vec;\n\ntypedef struct line{\n    vec s,t;\n    double theta;\n}line;\n\nconst double eps=1e-8,Pi=acos(-1);\nvec p[310],w[310];\nline r[310],l[310];\ndouble ans=1e20;\nint n,m,cnt,q[310],head=1,tail=0;\n\nbool cmp(line a,line b){\n    if(fabs(a.theta-b.theta)>eps) return a.theta<b.theta;\n    return (a.s-b.s)*(b.t-b.s)<0;\n}\n\nint dcmp(double a) {return ((fabs(a)<=eps)?0:((a>eps)?1:-1));}\n\nvec intersection(line a,line b){\n    double s1=(b.s-a.s)*(a.t-a.s),s2=(b.t-a.s)*(a.t-a.s);\n    return b.s+(b.t-b.s)*(s1/(s1-s2));\n}\n\ndouble length(vec a) {return sqrt(a.x*a.x+a.y*a.y);}\n\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%lf\",&p[i].x);\n    for(int i=1;i<=n;i++) scanf(\"%lf\",&p[i].y);\n    for(int i=1;i<n;i++) r[i].s=p[i],r[i].t=p[i+1],r[i].theta=atan2(p[i+1].y-p[i].y,p[i+1].x-p[i].x);\n    sort(r+1,r+n,cmp);\n    l[++cnt]=r[1];\n    for(int i=2;i<n;i++) if(dcmp(r[i].theta-r[i-1].theta)!=0) l[++cnt]=r[i];\n    for(int i=1;i<=cnt;i++){\n        while(head<tail && dcmp((l[i].t-l[i].s)*(intersection(l[q[tail]],l[q[tail-1]])-l[i].s))==-1) tail--;\n        while(head<tail && dcmp((l[i].t-l[i].s)*(intersection(l[q[head]],l[q[head+1]])-l[i].s))==-1) head++;\n        q[++tail]=i;\n    }\n    while(head<tail && dcmp((l[q[head]].t-l[q[head]].s)*(intersection(l[q[tail]],l[q[tail-1]])-l[q[head]].s))==-1) tail--;\n    while(head<tail && dcmp((l[q[tail]].t-l[q[tail]].s)*(intersection(l[q[head]],l[q[head+1]])-l[q[tail]].s))==-1) head++;\n    for(int i=head;i<tail;i++) w[++m]=intersection(l[q[i]],l[q[i+1]]);\n    int p1=1,p2=1;\n    while(p1<=n && p2<=m){\n        if(p[p1].x<w[p2].x){\n            ans=min(ans,length((l[q[head+p2-1]].s+(l[q[head+p2-1]].t-l[q[head+p2-1]].s)*((p[p1].x-l[q[head+p2-1]].s.x)/(l[q[head+p2-1]].t.x-l[q[head+p2-1]].s.x)))-p[p1]));\n            p1++;\n        }\n        else{\n            ans=min(ans,length((p[p1-1]+(p[p1]-p[p1-1])*((w[p2].x-p[p1-1].x)/(p[p1].x-p[p1-1].x)))-w[p2]));\n            p2++;\n        }\n    }\n    while(p1<=n) ans=min(ans,length((l[q[head+p2-1]].s+(l[q[head+p2-1]].t-l[q[head+p2-1]].s)*((p[p1].x-l[q[head+p2-1]].s.x)/(l[q[head+p2-1]].t.x-l[q[head+p2-1]].s.x)))-p[p1])),p1++;\n    while(p2<=m) ans=min(ans,length((p[p1-1]+(p[p1]-p[p1-1])*((w[p2].x-p[p1-1].x)/(p[p1].x-p[p1-1].x)))-w[p2])),p2++;\n    if(n<=2) ans=0.000;\n    printf(\"%.3f\",ans);\n    return 0;\n}\n```",
        "postTime": 1554293863,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2600 \u3010[ZJOI2008]\u77ad\u671b\u5854\u3011"
    }
]