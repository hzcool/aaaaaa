[
    {
        "content": "**\u53bb\u5e74\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u8fd8\u5728\u77bb\u4ef0\u8fd9\u9053\u9898\u800c\u65e0\u4ece\u4e0b\u624b\uff0c\u8f6c\u773c\u4e00\u5e74\u53c8\u8fc7\u53bb\u4e86\u554a\uff0c\u65f6\u95f4\u8fc7\u5f97\u597d\u5feb**\n\n\u5199\u89e3\u91ca\u5668\u5927\u6982\u6709\u4e24\u79cd\u52a8\u624b\u65b9\u6cd5\uff1a\u4e00\u79cd\u662f\u7a0b\u5e8f\u5458\u7684\u601d\u8def\uff0c\u6bcf\u6b21\u5b9e\u73b0\u4e00\u70b9\u529f\u80fd\u5e76\u8c03\u8bd5\uff0c\u9010\u6e10\u5b9e\u73b0\u5168\u90e8\u529f\u80fd\uff1b\u53e6\u4e00\u79cd\u662fOIer\u7684\u601d\u8def\uff0c\u4e00\u6b21\u6027\u7801\u5b8c\u6240\u6709\u4ee3\u7801\u7136\u540e\u5f00\u59cb\u8c03\u8bd5\u3002\n\n\u663e\u7136\u7b2c\u4e00\u79cd\u65b9\u6cd5\u66f4\u5408\u7406\u4e00\u4e9b\u3002\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u867d\u7136\u5199\u8d77\u6765\u5f88\u75db\u5feb\uff0c\u4f46\u662f\u8c03\u8bd5\u8d77\u6765\u3002\u3002\u3002\n\n\u7136\u800c\u56e0\u4e3a\u6211\u592a\u61d2\u4e86\uff0c\u6240\u4ee5\u9009\u62e9\u4e86\u7b2c\u4e8c\u79cd\u3002\n\n# \u4e00\u3001 \u89c4\u5212\u7ed3\u6784\n\n\u9996\u5148\u6211\u4eec\u628a\u7a0b\u5e8f\u8fc7\u7a0b\u5206\u4e3a\u201c**\u89e3\u6790\u4ee3\u7801**\u201d\u548c\u201c**\u6267\u884c\u4ee3\u7801**\u201d\u4e24\u90e8\u5206\u3002\n\n\u89e3\u6790\u4ee3\u7801\uff1a\u5c06\u6e90\u4ee3\u7801\u7ffb\u8bd1\u6210\u6613\u4e8e\u5206\u6790\u4e0e\u6267\u884c\u7684\u5185\u90e8\u7ed3\u6784\n\n\u6267\u884c\u4ee3\u7801\uff1a\u8fd0\u884c\u3001\u7ef4\u62a4\u5185\u90e8\u4ee3\u7801\u3001\u7ed3\u6784\n\n\u53ef\u89c1\uff0c\u89e3\u6790\u548c\u6267\u884c\u4e4b\u95f4\uff0c\u5b58\u5728\u4e00\u4e2a\u6c9f\u901a\u7684\u6865\u6881\uff1a**\u5185\u90e8\u7ed3\u6784**\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u89c4\u5212\u5185\u90e8\u4ee3\u7801\n\n# \u4e8c\u3001\u5185\u90e8\u7ed3\u6784\n\n## 1\u3001\u4e3a\u4ec0\u4e48\u8981\u6709\u5185\u90e8\u7ed3\u6784\n\n\u76f4\u63a5\u5c06\u6e90\u4ee3\u7801\u5b57\u7b26\u4e32\u5b8c\u5168\u50a8\u5b58\u4e0b\u6765\u7136\u540e\u8fd0\u884c\u53ef\u884c\u5417\uff1f\u5f53\u7136\u53ef\u884c\uff0c\u4f46\u662f\u8fd9\u6837\u505a\uff0c\u65e0\u8bba\u662f\u7a7a\u95f4\u6d88\u8017\u8fd8\u662f\u65f6\u95f4\u6d88\u8017\u90fd\u5b8c\u5168\u4e0d\u5408\u9002\u3002\u5c06\u6e90\u4ee3\u7801\u7ffb\u8bd1\u6210\u5185\u90e8\u4ee3\u7801\uff08\u54ea\u6015\u4e0d\u8bbe\u8ba1\u65b0\u4ee3\u7801\u53ea\u662f\u5b57\u5bf9\u5b57\u7684\u7ffb\u8bd1\uff09\uff0c\u4e00\u65b9\u9762\u538b\u7f29\u4e86\u7a7a\u95f4\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u4fbf\u4e8e\u6267\u884c\u3002\n\n## 2\u3001\u4ee3\u7801\u7ed3\u6784\n\n\u4ee3\u7801\u4e2d\u5b58\u5728\u4e24\u79cd\u57fa\u672c\u7684\u7ed3\u6784\uff1a**\u8868\u8fbe\u5f0f**\u548c**\u6307\u4ee4**\u3002\u6307\u4ee4\u5c31\u662f\u5982 \u201cihu\u201d\u3001\u201cwhile\u201d\u3001\u201cset\u201d\u7684\u8fd9\u4e9b\u8bed\u53e5\uff0c\u800c\u8868\u8fbe\u5f0f\u5219\u662f\u5982 \u201ca + 2 - b\\[3]\u201d \u8fd9\u6837\u7684\u7b97\u5f0f\u3002\u663e\u7136\u7a0b\u5e8f\u662f\u7531\u4e00\u6761\u4e00\u6761\u6307\u4ee4\u62fc\u63a5\u800c\u6210\u7684\uff0c\u800c\u8868\u8fbe\u5f0f\u5219\u662f\u67d0\u4e9b\u6307\u4ee4\u7684\u4e00\u90e8\u5206\u53c2\u6570\u3002\u4e0d\u8fc7\u5728CYaRon!\u8bed\u4e2d\uff0c\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u7ed3\u6784\uff0c\u53ea\u5b58\u5728\u4e8evars\u8bed\u53e5\u5f53\u4e2d\uff0c\u7528\u4e8e\u58f0\u660e\u53d8\u91cf\u3002\n\n## 3\u3001\u53d8\u91cf\u7684\u50a8\u5b58\n\nCYaRon!\u8bed\u4e2d\u53ea\u6709\u4e24\u79cd\u53d8\u91cf\uff1a\u6574\u6570\u548c\u6574\u6570\u6570\u7ec4\u3002\u6574\u6570\u5c31\u7528int\u5373\u53ef\uff0c\u6574\u6570\u6570\u7ec4\u5219\u9700\u8981\u5199\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\uff1a\n\n```cpp\nstruct arr {\t//\u6570\u7ec4\u7684\u50a8\u5b58\u7ed3\u6784\n\tint *val, start;\t//\u9700\u8981\u6709\u6570\u7ec4\u7a7a\u95f4\u548c\u8d77\u59cb\u5730\u5740\n\tarr(int s, int t): start(s) { val = new int[t - s + 5]; }\n\tvoid aset(int i, int v) { val[i - start] = v; }\t//\u8d4b\u503c\n\tint aget(int i) { return val[i - start]; }\t//\u53d6\u503c\n};\n```\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u5728\u5b9e\u73b0\u6570\u7ec4\u7684\u540c\u65f6\u8fd8\u6709\u4e24\u4e2a\u6210\u5458\u51fd\u6570aset\u4e0eaget\uff0c\u610f\u4e49\u5f88\u597d\u7406\u89e3\u3002\n\n\u4e0e c++ \u4e00\u6837\uff0c\u8fd9\u4e2a\u89e3\u91ca\u5668\u5e76\u4e0d\u4f1a\u8fdb\u884c\u6570\u7ec4\u8d8a\u754c\u68c0\u67e5\uff08\u56e0\u4e3a\u6211\u61d2\uff09\u3002\n\n\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u628a\u53d8\u91cf\u50a8\u5b58\u5728map\u91cc\uff0c\u9700\u8981\u65f6\u76f4\u63a5\u4ecemap\u91cc\u67e5\uff1a\n\n```cpp\nmap<std::string, int> inttable;\t//\u50a8\u5b58\u6574\u6570\u53d8\u91cf\nmap<std::string, arr*> arrtable;\t//\u50a8\u5b58\u6570\u7ec4\u53d8\u91cf\n```\n\n\u6ce8\u610f\u5230\u6211\u4eec\u50a8\u5b58\u6570\u7ec4\u53d8\u91cf\u5b9e\u9645\u4e0a\u53ea\u5b58\u4e86\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0c\u5728\u4e4b\u540e\u7684\u5904\u7406\u4e2d\u4e5f\u5e94\u5f53\u6ce8\u610f\u8fd9\u4e00\u70b9\u3002\n\n\u7528map\u50a8\u5b58\uff0c\u4e0d\u4ec5\u6162\uff0c\u800c\u4e14\u5728\u5185\u90e8\u4ee3\u7801\u4e2d\u4e5f\u8981\u5904\u5904\u4fdd\u5b58\u7740\u53d8\u91cf\u540d\u7684\u5b57\u7b26\u4e32\u3002\u5b9e\u9645\u4e0a\u5b58\u5728\u4e00\u79cd\u66f4\u4f18\u79c0\u4e5f\u662f\u66f4\u901a\u7528\u7684\u505a\u6cd5\uff0c\u5c31\u662f\u628a\u53d8\u91cf\u5904\u7406\u6210\u5730\u5740\uff0c\u4e4b\u540e\u76f4\u63a5\u5728\u8fd9\u4e2a\u5730\u5740\u4e2d\u641e\u4e8b\uff0c\u901f\u5ea6\u5feb\u4e14\u7701\u7a7a\u95f4\u3002\u4f46\u662f\u56e0\u4e3a\u61d2\uff0c\u59d1\u4e14\u5148\u7528map\u3002\n\n## 4\u3001\u8868\u8fbe\u5f0f\n\n\u5728\u4f20\u7edf\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5f80\u5f80\u4f1a\u88ab\u89e3\u6790\u6210\u82e5\u5e72\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u8fd0\u7b97\u3002\u5728CYaRon!\u8bed\u4e2d\uff0c\u56e0\u4e3a\u8868\u8fbe\u5f0f\u53ea\u5b58\u5728\u201c+\u201d\u3001\u201c-\u201d\uff0c\u8fd9\u65e0\u7591\u7ed9\u4e86\u6211\u4eec\u6781\u5927\u7684\u4fbf\u5229\uff1a\u5c06\u6bcf\u4e2a\u8868\u8fbe\u5f0f\u5904\u7406\u6210\u4e00\u4e32\u201c**\u8868\u8fbe\u5f0f\u5757**\u201d\uff0c\u6bcf\u4e2a\u5757\u53ea\u5305\u542b\u4e00\u4e2a\u53d8\u91cf\u6216\u5e38\u6570\u4ee5\u53ca\u4e00\u4e2a\u7b26\u53f7\u6807\u5fd7\uff0c\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u53ef\u4ee5\u88ab\u7b80\u5316\u6210\u6c42\u201c\u8fd9\u4e9b\u5757\u7684\u53d6\u503c\u7684\u548c\u201d\u3002\n\n\u90a3\u4e48\n\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8868\u8fbe\u5f0f\u5904\u7406\u6210\u4e00\u4e2a\u8868\u8fbe\u5f0f\u5757\u7684\u94fe\u8868\uff0c\u8fd9\u4e2a\u94fe\u8868\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a\n```cpp\nstruct Expression {\t//\u8868\u8fbe\u5f0f\u50a8\u5b58\u7ed3\u6784\n\tint type;\t//\u8868\u8fbe\u5f0f\u7c7b\u578b\uff080\u4e3a\u5e38\u6570\uff0c1\u4e3a\u6574\u6570\u53d8\u91cf\uff0c2\u4e3a\u6570\u7ec4\u53d8\u91cf\uff09\n\tint symbol;\t//\u6b63\u8d1f\n\tExpression *arre;\t//\uff08\u6570\u7ec4\u4e13\u7528\uff09\u6570\u7ec4\u4e0b\u6807\u7684\u8868\u8fbe\u5f0f\n\tstd::string val;\t//\u8868\u8fbe\u5f0f\u7684\u5f62\u6001\uff08\u5e38\u6570\u4e3a\u6570\u5b57\u4e32\uff0c\u53d8\u91cf\u4e3a\u53d8\u91cf\u540d\uff0c\u5e38\u6570\u4e0d\u9700\u8981\u5e26\u7b26\u53f7\uff0c\u6570\u7ec4\u4e0d\u9700\u8981\u5e26\u4e0b\u6807\uff09\n\tExpression *nxt;\t//\u4e0b\u4e00\u6761\u8868\u8fbe\u5f0f\uff08\u6211\u4eec\u4f7f\u7528\u94fe\u8868\u7ed3\u6784\u50a8\u5b58\u4e00\u6574\u4e2a\u8868\u8fbe\u5f0f\uff09\n\t\n\tint eget() {\t//\u8868\u8fbe\u5f0f\u53d6\u503c\n\t\tint num = 0;\n\t\tif(type == 0) {\t//\u5982\u679c\u662f\u5e38\u6570\n\t\t\tfor(int i = 0; i < val.size(); ++i) num = num * 10 + val[i] - '0';\t//\u83b7\u53d6\u6570\u503c\n\t\t} else if(type == 1) {\t//\u5982\u679c\u662f\u6574\u6570\u53d8\u91cf\n\t\t\tnum = inttable[val];\t//\u4ece\u5185\u5b58\u4e2d\u627e\u5230\u53d8\u91cf\u7684\u503c\n\t\t} else if(type == 2) {\t//\u5982\u679c\u662f\u6570\u7ec4\n\t\t\tnum = arrtable[val]->aget(arre->eget());\t//\u4ece\u5185\u5b58\u4e2d\u627e\u6570\u7ec4\u5e76\u6839\u636e\u4e0b\u6807\u8868\u8fbe\u5f0f\u8ba1\u7b97\u51fa\u4e0b\u6807\u5e76\u8bbf\u95ee\n\t\t} else {\t//\u5176\u4ed6\u60c5\u51b5\n\t\t\tthrow(\"RE\");\t//\u662f\u4e0d\u5b58\u5728\u7684\u5982\u679c\u771f\u7684\u5b58\u5728\u8bf4\u660e\u7a0b\u5e8f\u51faBUG\u4e86\n\t\t}\n\t\tnum *= symbol;\t//\u5e26\u4e0a\u7b26\u53f7\n\t\tif(nxt != NULL) return num + nxt->eget();\t//\u5982\u679c\u540e\u9762\u8fd8\u6709\u8868\u8fbe\u5f0f\uff0c\u8ba1\u7b97\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u5e76\u52a0\u4e0a\n\t\treturn num;\n\t}\n};\n```\n\n\u5728\u8fd9\u4efd\u4ee3\u7801\u4e2d\u8fd8\u6709\u4e00\u4e9b\u8868\u8fbe\u5f0f\u7684\u5176\u4ed6\u5c5e\u6027\uff0c\u5982\u8868\u8fbe\u5f0f\u7c7b\u578b\uff0c\u6570\u7ec4\u4e0b\u6807\u8868\u8fbe\u5f0f\uff0c\u4ee5\u53ca\u8868\u8fbe\u5f0f\u5f62\u6001\u3002\n\n\u8868\u8fbe\u5f0f\u7c7b\u578b\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff08\u5757\uff09\u662f\u5e38\u6570\u8fd8\u662f\u6574\u6570\u53d8\u91cf\u8fd8\u662f\u6570\u7ec4\uff0c\u6570\u7ec4\u4e0b\u6807\u8868\u8fbe\u5f0f\u4e13\u4e3a\u6570\u7ec4\u670d\u52a1\uff0c\u7528\u6765\u50a8\u5b58\u4e0b\u6807\u3002\u867d\u7136\u9898\u76ee\u63cf\u8ff0\u4e2d\u6570\u7ec4\u4e0b\u6807\u4e0d\u4f1a\u5d4c\u5957\uff0c\u4f46\u662f\u7528\u8fd9\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5b8c\u5168\u53ef\u4ee5\u652f\u6301\u5d4c\u5957\u3002\u8868\u8fbe\u5f0f\u5f62\u6001\u7684\u610f\u4e49\u4fbf\u662f\u50a8\u5b58\u8868\u8fbe\u5f0f\u7684\u201c\u7279\u5f81\u503c\u201d\uff0c\u5b9e\u9645\u50a8\u5b58\u7684\u662f\u53d8\u91cf\u540d\u6216\u6570\u5b57\u4e32\u3002\n\n\u4f5c\u4e3a\u94fe\u8868\uff0c\u7406\u5e94\u6709\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u5757\u7684\u6307\u9488\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u6709\u8da3\u51fd\u6570 eget\uff0c\u7528\u6765\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u4ed6\u7684\u5de5\u4f5c\u539f\u7406\u4e5f\u76f8\u5f53\u7b80\u5355\uff0c\u9605\u8bfb\u4ee3\u7801\u53ca\u6ce8\u91ca\u4fbf\u53ef\u7406\u89e3\u3002\n\n## 5\u3001\u53d8\u91cf\u58f0\u660e\n\n\u4e0e\u8868\u8fbe\u5f0f\u76f8\u540c\u7684\u662f\uff0c\u6211\u4eec\u5c06\u4e00\u4e2avars\u8bed\u53e5\u4e2d\u7684\u6240\u6709\u53d8\u91cf\u58f0\u660e\u5904\u7406\u6210\u4e00\u4e2a\u94fe\u8868\u3002\n\n\n```\nstruct Initer {\t//\u53d8\u91cf\u58f0\u660e\u50a8\u5b58\u7ed3\u6784\n\tint type;\t//\u53d8\u91cf\u7c7b\u578b\uff080\u4e3a\u6574\u6570\uff0c1\u4e3a\u6570\u7ec4\uff09\n\tstd::string name;\t//\u53d8\u91cf\u540d\n\tint begin, end;\t//\uff08\u6570\u7ec4\u4e13\u7528\uff09\u8d77\u59cb\u503c\u4e0e\u7ec8\u6b62\u503c\n\tIniter *nxt;\t//\u4e0b\u4e00\u6761\u53d8\u91cf\u58f0\u660e\uff08\u6211\u4eec\u4f7f\u7528\u94fe\u8868\u7ed3\u6784\u50a8\u5b58\u4e00\u6574\u4e32\u53d8\u91cf\u58f0\u660e\uff09\n};\n```\n\n## 6\u3001\u6307\u4ee4\n\n\u55ef\u4f60\u6ca1\u731c\u9519\uff0c\u6211\u628a\u6307\u4ee4\u4e5f\u5904\u7406\u6210\u94fe\u8868\u4e86\u3002\n\n\u6307\u4ee4\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u5c5e\u6027\uff0c\u5982\u4ec5\u4f9bvars\u4f7f\u7528\u7684\u53d8\u91cf\u58f0\u660e\u8868\uff0c\u4ec5\u4f9bif\u3001hor\u3001while\u4f7f\u7528\u7684\u6bd4\u8f83\u7c7b\u578b\u4ee5\u53ca\u4ec5\u4f9bif\u3001hor\u3001while\u4f7f\u7528\u7684\u5b50\u6307\u4ee4\u8868\u3002\n\n\u6307\u4ee4\u8fd8\u5305\u542b\u4e86\u4e09\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e09\u4e2a\u8868\u8fbe\u5f0f\u5728\u4e0d\u540c\u8bed\u53e5\u4e2d\u7528\u9014\u4e0d\u540c\uff08\u6216\u4e0d\u4f7f\u7528\uff09\uff0c\u5728\u6ce8\u91ca\u4e2d\u6709\u8be6\u7ec6\u8bf4\u660e\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728CYaRon!\u4e2d\uff0chor \u7684\u4e09\u4e2a\u8868\u8fbe\u5f0f\u7ed9\u51fa\u7684\u5148\u540e\u987a\u5e8f\u662f\uff1a\u5faa\u73af\u53d8\u91cf\u3001\u8d77\u59cb\u503c\u3001\u7ec8\u6b62\u503c\uff0c\u800c\u5185\u90e8\u6307\u4ee4\u4e2d\u5374\u628a\u8d77\u59cb\u503c\u653e\u5230\u4e86exp3\uff0c\u7ec8\u6b62\u503c\u653e\u5230\u4e86exp1\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u7ed9\u540e\u9762\u7684\u6267\u884c\u521b\u9020\u4e86\u4fbf\u5229\u3002\n\n\u867d\u7136hor\u8bed\u53e5\u6ca1\u6709\u663e\u5f0f\u7684\u5224\u65ad\u7c7b\u578b\uff0c\u4f46\u6211\u4eec\u4ecd\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u6210\u201cle\u201d\uff0c\u8fd9\u4e5f\u662f\u5728\u4e3a\u6267\u884c\u521b\u9020\u4fbf\u5229\u3002\n\n```cpp\nstruct Instruction {\t//\u6307\u4ee4\u7684\u50a8\u5b58\u7ed3\u6784\n\tint type;\t//\u6307\u4ee4\u7c7b\u578b\uff080\u4e3avars\uff0c1\u4e3aset\uff0c2\u4e3ayosoro\uff0c3\u4e3aihu\uff0c4\u4e3ahor\uff0c5\u4e3awhile\uff09\n\tIniter *init;\t//\uff08var\u4e13\u7528\uff09\u521d\u59cb\u5316\u53d8\u91cf\u5217\u8868\n\tExpression *exp1, *exp2, *exp3;\t//exp1\uff1aset\u88ab\u8d4b\u503c\u9879\uff0cyosoro\u88ab\u8f93\u51fa\u8868\u8fbe\u5f0f\uff0cihu\u5de6\u503c\uff0chor\u5faa\u73af\u53d8\u91cf\uff0cwhile\u5de6\u503c\n\t\t\t\t\t\t\t\t\t//exp2\uff1aihu\u53f3\u503c\uff0chor\u7ed3\u675f\u503c\uff0cwhile\u53f3\u503c\n\t\t\t\t\t\t\t\t\t//exp3\uff1aset\u6e90\u8d4b\u503c\u8868\u8fbe\u5f0f\uff0chor\u521d\u59cb\u503c\n\tint judgetype;\t//ihu\u3001while\u3001hor\u4e13\u7528\uff0c\u6bd4\u8f83\u7c7b\u578b\uff080\u4e3alt\uff0c1\u4e3agt\uff0c2\u4e3ale\uff0c3\u4e3age\uff0c4\u4e3aeq\uff0c5\u4e3aneq\uff09\uff0chor\u9700\u8981\u59cb\u7ec8\u8bbe\u7f6e\u4e3a2\uff08le\uff09\n\tInstruction *subins;\t//ihu\u3001hor\u3001while\u4e13\u7528\uff0c\u5b50\u6307\u4ee4\u5757\n\tInstruction *nxt;\t//\u4e0b\u4e00\u6761\u6307\u4ee4\uff08\u6211\u4eec\u7528\u94fe\u8868\u7ed3\u6784\u50a8\u5b58\u4e00\u6574\u4e32\u6307\u4ee4\uff09\n};\n```\n\n# \u4e09\u3001\u6267\u884c\n\n\u4ece\u65f6\u95f4\u987a\u5e8f\u6765\u8bf4\uff0c\u5e94\u8be5\u662f\u5148\u8bfb\u53d6\u89e3\u6790\u800c\u540e\u6267\u884c\uff0c\u4f46\u662f\u6267\u884c\u90e8\u5206\u7684\u903b\u8f91\u66f4\u4e3a\u6e05\u6670\uff0c\u5730\u4f4d\u4e5f\u66f4\u4e3a\u91cd\u8981\uff0c\u5b9e\u73b0\u8d77\u6765\u5374\u76f8\u5bf9\u7b80\u5355\uff0c\u6240\u4ee5\u6211\u5148\u63cf\u8ff0\u6267\u884c\u73af\u8282\u3002\n\n## 1\u3001\u8fd0\u884c\u6307\u4ee4\n\n\u4e00\u4e32switch\u800c\u5df2\uff0c\u89c1\u4ee3\u7801\uff1a\n\n```cpp\nvoid Run(Instruction *ins)\t//\u5904\u7406\u6307\u4ee4\n{\n\twhile(ins != NULL) //\u4e00\u6761\u4e00\u6761\u6267\u884c\u4e0b\u53bb\u4e0b\u53bb\n\t{\n\t\tswitch(ins->type)\t//\u5206\u6e05\u6307\u4ee4\u7c7b\u578b\n\t\t{\n\t\tcase 0:\n\t\t\t_vars(ins);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\t_set(ins);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t_yosoro(ins);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\t_ihu(ins);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\t_hor(ins);\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\t_while(ins);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow(\"RE: Something wrong with the type of a instruction.\");\n\t\t}\n\t\tins = ins->nxt;\t//\u4e0b\u4e00\u6761\n\t}\n}\n```\n\n\u867d\u7136\u6b64\u9898\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0\u9519\u8bef\u4ee3\u7801\uff0c\u4e0d\u8fc7\u987a\u4fbf\u628a\u9519\u8bef\u5224\u65ad\u5199\u4e0a\u4e5f\u4e0d\u788d\u4e8b\uff0c\u800c\u4e14\u601d\u8def\u66f4\u4e3a\u6e05\u6670\u3002\u4e4b\u540e\u4f60\u4f1a\u770b\u5230\u6b64\u89e3\u91ca\u5668\u4e2d\u6709\u65e0\u6570\u4e2aCE\u5224\u65ad\u3002\n\n\u5206\u522b\u5b9e\u73b0\u6bcf\u4e00\u79cd\u8bed\u53e5\uff1a\n\n## vars\uff1a\n\n```cpp\nvoid _vars(Instruction *ins)\t//\u5904\u7406var\u8bed\u53e5\n{\n\tfor(Initer *i = ins->init; i != NULL; i = i->nxt) //\u904d\u5386\u6bcf\u4e00\u6761\u53d8\u91cf\u58f0\u660e\n\t{\n\t\tif(i->type == 0) inttable[i->name] = 0;\t//\u5982\u679c\u662f\u6574\u6570\uff0c\u76f4\u63a5\u5728\u6574\u6570\u5185\u5b58\u4e2d\u8bbe\u7f6e\u4e3a0\n\t\telse if(i->type == 1) {\t//\u5982\u679c\u662f\u6570\u7ec4\n\t\t\tarrtable[i->name] = new arr(i->begin, i->end);\t//\u5728\u6570\u7ec4\u5185\u5b58\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\n\t\t} else {\t//\u5176\u4ed6\u60c5\u51b5\n\t\t\tthrow(\"RE: Something wrong with the type of a Initer.\");\t//\u4e0d\u53ef\u80fd\u6709\u5176\u4ed6\u60c5\u51b5\u5982\u679c\u6709\u5c31\u8bf4\u660e\u7a0b\u5e8f\u51faBUG\u4e86\n\t\t}\n\t}\n}\n```\n\n## set\uff1a\n\n```cpp\nvoid _set(Instruction *ins)\t//\u5904\u7406set\u8bed\u53e5\n{\n\tExpression *exp1 = ins->exp1, *exp3 = ins->exp3;\t//\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\u628a\u94fe\u8868\u6362\u4e2a\u540d\u5b57\uff08\u56e0\u4e3a\u662f\u6307\u9488\u6240\u4ee5\u6307\u5411\u7684\u7ed3\u6784\u662f\u4e0d\u4f1a\u53d8\u7684\uff09\n\tif(exp1->type == 1) {\t//\u5982\u679c\u88ab\u8d4b\u503c\u9879\u662f\u6574\u6570\u53d8\u91cf\n\t\tinttable[exp1->val] = exp3->eget();\t//\u76f4\u63a5\u5728\u5185\u5b58\u4e2d\u6539\u53d8\u503c\n\t} else if(exp1->type == 2) {\t//\u5982\u679c\u88ab\u8d4b\u503c\u9879\u662f\u6570\u7ec4\n\t\tarrtable[exp1->val]->aset(exp1->arre->eget(), exp3->eget());\t//\u83b7\u53d6\u6570\u7ec4\u4e0b\u6807\u5e76\u6839\u636e\u4e0b\u6807\u8bbe\u7f6e\u6570\u7ec4\u7684\u503c\n\t} else {\t//\u5176\u4ed6\u60c5\u51b5\n\t\tthrow(\"CE: exp1 is not a variable\");\t//\u4e0d\u53ef\u80fd\u6709\u5176\u4ed6\u60c5\u51b5\uff0c\u5982\u679c\u6709\u53ef\u80fd\u662f\u8f93\u5165\u65f6\u8868\u8fbe\u5f0f\u5c31\u4e0d\u6b63\u786e\n\t}\n}\n```\n\n## yosoro\uff1a\n\n```cpp\nvoid _yosoro(Instruction *ins)\t//\u5904\u7406yosoro\u8bed\u53e5\n{\n\tprintf(\"%d \", ins->exp1->eget());\t//\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c\u5e76\u8f93\u51fa\uff0c\u540e\u8ddf\u4e00\u4e2a\u7a7a\u683c\n}\n```\n\n## ihu\uff1a\n\n```cpp\nbool _ihu(Instruction *ins)\t//\u5904\u7406ihu\u8bed\u53e5\n{\n\tExpression *exp1 = ins->exp1, *exp2 = ins->exp2;\t//\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\u628a\u94fe\u8868\u6362\u4e2a\u540d\u5b57\uff08\u56e0\u4e3a\u662f\u6307\u9488\u6240\u4ee5\u6307\u5411\u7684\u7ed3\u6784\u662f\u4e0d\u4f1a\u53d8\u7684\uff09\n\tswitch(ins->judgetype)\t//\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u5224\u65ad\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u5c31\u8fd4\u56defalse\n\t{\n\tcase 0:\t//lt\n\t\tif(exp1->eget() >= exp2->eget()) return false;\n\t\tbreak;\n\tcase 1:\t//gt\n\t\tif(exp1->eget() <= exp2->eget()) return false;\n\t\tbreak;\n\tcase 2:\t//le\n\t\tif(exp1->eget() > exp2->eget()) return false;\n\t\tbreak;\n\tcase 3:\t//ge\n\t\tif(exp1->eget() < exp2->eget()) return false;\n\t\tbreak;\n\tcase 4:\t//eq\n\t\tif(exp1->eget() != exp2->eget()) return false;\n\t\tbreak;\n\tcase 5: //neq\n\t\tif(exp1->eget() == exp2->eget()) return false;\n\t\tbreak;\n\tdefault:\n\t\tthrow(\"RE: Something wrong with the type of a judge\");\n\t}\n\tRun(ins->subins);\t//\u5982\u679c\u7b26\u5408\u7ed3\u679c\u5c31\u6267\u884c\u5b50\u6307\u4ee4\u5757\n\treturn true;\t//\u8fd4\u56detrue\n}\n```\n\nihu\u7684\u5b9e\u73b0\u6bd4\u8f83\u7279\u6b8a\uff0c\u4ed6\u8981\u6267\u884c\u5b50\u6307\u4ee4\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u4e2a\u8fd4\u56de\u503c\u8868\u793a\u5224\u65ad\u7ed3\u679c\u3002\n\n## hor\uff1a\n\n```cpp\nvoid _hor(Instruction *ins)\t//\u5904\u7406hor\u8bed\u53e5\n{\n\tExpression *exp1 = ins->exp1, *exp2 = ins->exp2, *exp3 = ins->exp3;\t//\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\u628a\u94fe\u8868\u6362\u4e2a\u540d\u5b57\uff08\u56e0\u4e3a\u662f\u6307\u9488\u6240\u4ee5\u6307\u5411\u7684\u7ed3\u6784\u662f\u4e0d\u4f1a\u53d8\u7684\uff09\n\t_set(ins);\t//\u628aexp3\u8d4b\u503c\u7ed9exp1\n\twhile(_ihu(ins)) {\t//\u5229\u7528ihu\u8bed\u53e5\u53cd\u590d\u6267\u884c\n\t\tif(exp1->type == 1) {\t//+1\u64cd\u4f5c\uff0c\u5faa\u73af\u53d8\u91cf\u5982\u679c\u662f\u6574\u6570\u53d8\u91cf\n\t\t\t++inttable[exp1->val];\t//\u76f4\u63a5\u52a0\n\t\t} else if(exp1->type == 2) {\t//\u5982\u679c\u662f\u6570\u7ec4\n\t\t\tint i = exp1->arre->eget();\t//\u83b7\u5f97\u4e0b\u6807\n\t\t\tarrtable[exp1->val]->aset(i, arrtable[exp1->val]->aget(i) + 1); //\u52a0\u4e0a\u53bb\n\t\t} else {\t//\u5982\u679c\u5176\u4ed6\u7c7b\u578b\n\t\t\tthrow(\"CE: exp1 is not a variable\");\t//\u4e0d\u53ef\u80fd\n\t\t}\n\t}\n}\n```\n\n\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u51fa\u4e4b\u524d\u628ahor\u7684\u521d\u59cb\u503c\u653e\u5230exp3\u800c\u7ec8\u6b62\u503c\u653e\u5230exp2\u7684\u7528\u610f\u4e86\uff0c\u6211\u4eec\u5229\u7528_ihu\u4e0d\u505c\u7684\u5224\u65ad\u517c\u6267\u884c\uff0c\u800cihu\u5224\u65ad\u4e24\u4e2a\u8868\u8fbe\u5f0f\u7684\u5219\u662fexp1\u4e0eexp2\uff0c\u521d\u59cb\u503c\u5728\u8d4b\u503c\u5b8c\u6210\u540e\u5c31\u6ca1\u7528\u4e86\uff0c\u6240\u4ee5\u653e\u5230\u4e86exp3\u3002\n\n## while:\n\n```cpp\nvoid _while(Instruction *ins)\t//\u5904\u7406while\u8bed\u53e5\n{\n\twhile(_ihu(ins));\t//\u5229\u7528ihu\u53cd\u590d\u6267\u884c\n}\n```\n\nwhile\u5b9e\u73b0\u8d77\u6765\u6700\u7b80\u5355\u4e86\u3002\n\n\u6267\u884c\u90e8\u5206\u5230\u8fd9\u91cc\u5c31\u6ca1\u6709\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u8981\u5199\u6700\u9ebb\u70e6\u7684\u8bfb\u5165\u89e3\u6790\u90e8\u5206\u4e86\u3002\n\n# \u56db\u3001\u8bfb\u5165\n\n\u8bfb\u5165\u6ca1\u4ec0\u4e48\u53ef\u7b80\u4ecb\u7684\u3002\n\n## 1\u3001\u8bfb\u5165\u65b9\u5f0f\n\n\u6709\u4eba\u559c\u6b22\u4e00\u6b21\u8bfb\u5165\u6574\u4e2a\u4ee3\u7801\u6587\u4ef6\u7136\u540e\u5728\u5b57\u7b26\u6570\u7ec4\u91cc\u641e\u4e8b\uff0c\u6709\u4eba\u559c\u6b22\u4e00\u884c\u4e00\u884c\u7684\u8bfb\uff0c\u6709\u4eba\u662f\u4e00\u4e2a\u5355\u8bcd\u4e00\u4e2a\u5355\u8bcd\u7684\u8bfb\u5165\uff0c\u4f46\u662f\u9274\u4e8e\u672c\u4eba\u592a\u8fc7\u4e8e\u61d2\u60f0\u4e0d\u613f\u610f\u5199\u90a3\u4e48\u590d\u6742\u7684\u8bfb\u5165\uff0c\u6240\u4ee5\u5c31\u7528getchar\u4e86\uff0c\u8fb9\u8bfb\u5165\u8fb9\u5904\u7406\u3002\u6bcf\u6b21\u9700\u8981\u4e00\u4e2a\u5b57\u7b26\u5c31\u8bfb\u4e00\u4e2a\u5b57\u7b26\uff0c\u8bfb\u5230EOF\u5c31\u7b97\u662f\u8bfb\u5b8c\u4e86\u3002\n\n\u4f46\u662f\u8fd8\u4e0d\u60f3\u76f4\u63a5\u7528getchar\uff0c\u867d\u7136\u9898\u76ee\u4e2d\u8bf4\u4ee3\u7801\u91cc\u6ca1\u6709\u6ce8\u91ca\uff0c\u4f46\u662f\u7531\u4e8e\u89c9\u5f97\u96be\u53d7\u8fd8\u662f\u52a0\u4e0a\u4e86\u6ce8\u91ca\u5224\u65ad\uff0c\u6ce8\u91ca\u7528 \u201c#\u201d\u5f00\u5934\uff0c\u6b64\u540e\u4e00\u76f4\u5230\u884c\u672b\u90fd\u662f\u6ce8\u91ca\u5185\u5bb9\u3002\n\n\u6211\u4eec\u5148\u5199\u4e00\u4e2a\u53ef\u4ee5\u541e\u6389\u6ce8\u91cagetchar\uff1a\n\n```cpp\nchar _getc() { //\u4e00\u4e2a\u53ef\u4ee5\u541e\u6389\u6ce8\u91ca\u7684getchar()\n\tchar ch = getchar();\n\tif(ch == '#') while(ch != '\\n' && ch != EOF) ch = getchar();\n\treturn ch; \n}\n```\n\n\u6211\u4eec\u5f04\u4e00\u4e2a\u5168\u5c40\u90fd\u5728\u4f7f\u7528\u7684\u5b57\u7b26\u53d8\u91cf \u201cc\u201d\uff0c\u4ee5\u540e\u6bcf\u6b21\u90fd\u628a\u5b57\u7b26\u8bfb\u8fdb\u8fd9\u91cc\u8fb9\u6765\uff1a\n\n```cpp\nchar c;\n\n// \u4ee5\u540e\u5c31\u8fd9\u4e48\u8bfb\u5165\nc = _getc();\n```\n\n## 2\u3001\u201cc\u201d \u4e2d\u5230\u5e95\u6709\u4ec0\u4e48\n\n\u6211\u4eec\u603b\u662f\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u7684\u8bfb\u5165\uff0c\u7136\u540e\u5904\u7406\u5373\u53ef\u3002\u4f46\u662f\u6ce8\u610f\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u5f53\u6211\u4eec\u8bfb\u5165\u4e00\u4e2a\u5185\u5bb9\u7684\u65f6\u5019\uff0c\u662f\u5982\u4f55\u77e5\u9053\u5b83\u8bfb\u5b8c\u4e86\u5462\uff1f\u5176\u5b9e\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1\u3001\u5f53\u524d\u5185\u5bb9\u53ea\u4f7f\u7528\u7279\u5b9a\u7684\u5b57\u7b26\uff0c\u8bfb\u5230\u522b\u7684\u5b57\u7b26\u5c31\u610f\u5473\u7740\u7ed3\u675f\u4e86\u3002\u4f8b\u5982\u8bfb\u5165\u5e38\u6570\u65f6\uff0c\u5982\u679c\u8bfb\u5230\u4e0d\u662f\u6570\u5b57\u7684\u5b57\u7b26\u5c31\u610f\u5473\u7740\u5e38\u6570\u8bfb\u5b8c\u4e86\uff1b\u8bfb\u5165\u53d8\u91cf\u540d\u65f6\uff0c\u9047\u5230\u4e0d\u662f\u5b57\u6bcd\u7684\u5b57\u7b26\u610f\u5473\u7740\u53d8\u91cf\u540d\u8bfb\u5b8c\u4e86\u3002\n\n2\u3001\u5f53\u524d\u5185\u5bb9\u7684\u5b57\u7b26\u6bd4\u8f83\u591a\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5b57\u7b26\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a**\u7ed3\u675f\u6807\u5fd7**\uff0c\u4e00\u65e6\u8bfb\u5230\u7ed3\u675f\u6807\u5fd7\u5c31\u610f\u5473\u7740\u8bfb\u5b8c\u4e86\uff0c\u6ca1\u9047\u5230\u7ed3\u675f\u6807\u5fd7\u5c31\u4e00\u76f4\u8bfb\u4e0b\u53bb\u3002\u5982\u8bfb\u5165\u6570\u7ec4\u4e0b\u6807\u8868\u8fbe\u5f0f\u65f6\uff0c\u8bfb\u5230 \u201c ] \u201d \u5c31\u53ef\u4ee5\u77e5\u9053\u4e0b\u6807\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u4e86\u3002\n\n\u8fd9\u4e24\u79cd\u7ed3\u675f\u65b9\u5f0f\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u5728\u7ed3\u675f\u8bfb\u5165\u540e\uff0cc \u4e2d\u4fdd\u5b58\u7684\u662f**\u4e0b\u4e00\u4e2a\u8981\u8bfb\u5165\u7684\u5185\u5bb9\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26**\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u8bfb\u5165\u4e0b\u4e00\u4e2a\u5185\u5bb9\u65f6\u4e0d\u5fc5\u5148\u8bfb\u5165\u800c\u9ed8\u8ba4 c \u4e2d\u6709\u5185\u5bb9\uff0c\u5bf9\u4e8e\u540e\u4e00\u79cd\u60c5\u51b5\u5219\u4e0d\u7136\u3002\n\n\u53ef\u662f\u8bfb\u5165\u65f6\u600e\u4e48\u80fd\u77e5\u9053 c \u4e2d\u5230\u5e95\u4fdd\u5b58\u4e86\u7ed3\u675f\u7b26\u8fd8\u662f\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff1f\u8fd9\u4e2a\u5224\u65ad\u81ea\u5df1\u662f\u5f80\u5f80\u505a\u4e0d\u4e86\u7684\u3002\u867d\u7136\u6211\u4e0d\u77e5\u9053\u4e0a\u4e00\u4e2a\u8bfb\u5165\u662f\u600e\u4e48\u7ed3\u675f\u7684\uff0c\u4f46\u662f\u6211\u53ef\u4ee5\u77e5\u9053\u81ea\u5df1\u662f\u600e\u4e48\u7ed3\u675f\u7684\u3002\u90a3\u4e48\u6211\u4eec\u89c4\u5b9a\uff1a**\u4ee5\u7ed3\u675f\u6807\u5fd7\u7ed3\u675f\u7684\u8bfb\u5165\u8981\u5728\u7ed3\u675f\u540e\u518d\u8bfb\u5165\u4e00\u6b21**\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8bfb\u5165\uff0c**c \u4e2d\u9884\u5148\u603b\u662f\u4fdd\u5b58\u4e86\u4ed6\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u800c\u65e0\u987b\u8bfb\u5165\u4e86**\u3002\n\n## 3\u3001\u8bfb\u5165\u6307\u4ee4\n\n```cpp\nvoid ReadInstruction(char endc, Instruction *ins)\n{\n\twhile(c != endc) \n\t{\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u8bfb\u5230\u4e0d\u662f\u7a7a\u5b57\u7b26\u4e3a\u6b62\n\t\tif(c == '{' || c == ':')\t//\u6307\u4ee4\n\t\t{\n\t\t\tstd::string opt;\n\t\t\tc = _getc();\n\t\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u8bfb\u5230\u4e0d\u662f\u7a7a\u5b57\u7b26\u4e3a\u6b62\n\t\t\twhile(c >= 'a' && c <= 'z') { //\u83b7\u53d6\u6307\u4ee4\u540d\u79f0\n\t\t\t\topt.push_back(c);\n\t\t\t\tc = _getc();\n\t\t\t}\n\t\t\tif(c != ' ' && c != '\\t' && c != '\\n' && c != '\\r') throw(\"CE: Unexpected character. \");\t//\u4e0d\u662f\u4ee5\u7a7a\u5b57\u7b26\u7ed3\u5c3e\u7684\u76f4\u63a5CE\n\t\t\t\n\t\t\tif(opt == \"vars\")\n\t\t\t\treadvars(ins);\n\t\t\telse if(opt == \"set\")\n\t\t\t\treadset(ins);\n\t\t\telse if(opt == \"yosoro\")\n\t\t\t\treadyosoro(ins);\n\t\t\telse if(opt == \"ihu\")\n\t\t\t\treadihu(ins);\n\t\t\telse if(opt == \"hor\")\n\t\t\t\treadhor(ins);\n\t\t\telse if(opt == \"while\")\n\t\t\t\treadwhile(ins);\n\t\t\telse\t//\u672a\u5b9a\u4e49\u7684\u6307\u4ee4\n\t\t\t\tthrow(\"CE: Unknow Instruciton. \");\n\t\t\t\t\n\t\t\tins->nxt = new Instruction();\n\t\t\tins = ins->nxt;\n\t\t\t\n\t\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u8bfb\u5230\u4e0d\u662f\u7a7a\u5b57\u7b26\u4e3a\u6b62\n\t\t} else {\t//\u975e\u6cd5\u5b57\u7b26\n\t\t\tthrow(\"CE: Unexpected character. \");\n\t\t}\n\t}\n}\n```\n\n\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u4e3a\u7ed3\u675f\u6807\u5fd7\u4e0e\u8981\u8bfb\u5165\u6307\u4ee4\u7684\u6307\u9488\u6240\u5728\u3002\n\n\u7ed3\u675f\u6807\u5fd7\u6709\u4e3b\u7a0b\u5e8f\u7684 EOF\uff0c\u4e5f\u6709\u5b50\u6307\u4ee4\u7684 \u201c } \u201d\uff0c\u8fd9\u4e2a\u8981\u770b\u8c03\u7528\u8005\u7684\u610f\u601d\u3002\n\n\u6307\u4ee4\u6240\u5728\u6307\u9488**\u5fc5\u987b\u4e8b\u5148\u521d\u59cb\u5316**\u3002\n\n\u5176\u4ed6\u5730\u65b9\u6bd4\u8f83\u597d\u7406\u89e3\u3002\n\n## \u8bfb\u5165\u4e00\u4e9b\u975e\u6307\u4ee4\u5185\u5bb9\n\n\u8bfb\u5165\u53d8\u91cf\u58f0\u660e\uff1a\n\n```cpp\nvoid readiniter(Initer *init)\t//\u8bfb\u53d6\u53d8\u91cf\u58f0\u660e\n{\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u541e\u6389\u7a7a\u5b57\u7b26\n\tif(!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))) throw(\"CE: Unexpected character. \"); //\u975e\u5b57\u6bcd\u4e0d\u53ef\u4ee5\u4f5c\u53d8\u91cf\u540d\n\tstd::string name;\n\twhile((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\t//\u8bfb\u53d6\u53d8\u91cf\u540d\n\t\tname.push_back(c);\n\t\tc = _getc();\n\t}\n\tinit->name = name;\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u5141\u8bb8\u53d8\u91cf\u540d\u548c\u5192\u53f7\u4e4b\u95f4\u6709\u7a7a\u5b57\u7b26\n\tif(c != ':') throw(\"CE\");\t//\u975e\u6cd5\u5b57\u7b26\n\tc = _getc();\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u5141\u8bb8\u5192\u53f7\u548c\u7c7b\u578b\u4e4b\u95f4\u6709\u7a7a\u5b57\u7b26\n\tname.clear();\n\tif(!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))) throw(\"CE: Unexpected character. TT\"); //\u975e\u5b57\u6bcd\u4e0d\u53ef\u4ee5\u4f5c\u7c7b\u578b\u540d\n\twhile((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\n\t\tname.push_back(c);\n\t\tc = _getc();\n\t}\n\tif(name == \"int\") {\t//int\n\t\tinit->type = 0;\n\t} else if(name == \"array\") {\t//array\n\t\tinit->type = 1;\n\t\tif(c != '[') throw(\"CE: Unexpected character. \");\t//array\u540e\u9762\u7d27\u8ddf\u7684\u4e0d\u662f\"[\"\u5c31\u4e0d\u884c\uff08\u6211\u89c4\u5b9a\u7684\uff09\n\t\tname.clear();\n\t\tc = _getc();\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u5141\u8bb8\u65b9\u62ec\u53f7\u540e\u9762\u6709\u7a7a\u5b57\u7b26\n\t\twhile((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\t//\u8bfb\u53d6\u7c7b\u578b\u540d\n\t\t\tname.push_back(c);\n\t\t\tc = _getc();\n\t\t}\n\t\tif(name != \"int\") throw(\"CE: Unknow type. \");\t//\u4e0d\u662fint\u80af\u5b9a\u4e0d\u884c\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u5141\u8bb8\u7c7b\u578b\u540d\u540e\u9762\u6709\u7a7a\u5b57\u7b26\n\t\tif(c != ',') throw(\"CE: Unexpected character. \");\t//\u4e0d\u662f\"\uff0c\"\u4e5f\u4e0d\u884c\n\t\tc = _getc();\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\n\t\tint num = 0;\n\t\twhile(c >= '0' && c <= '9') {\t//\u8bfb\u53d6\u8d77\u59cb\u4e0b\u6807\n\t\t\tnum = num * 10 + c - '0';\n\t\t\tc = _getc();\n\t\t}\n\t\tinit->begin = num;\n\t\tif(c == '.') {\t//\"..\"\u5fc5\u987b\u4e0e\u4e24\u4e2a\u503c\u7d27\u51d1\u7684\u6328\u5728\u4e00\u8d77\uff08\u6211\u89c4\u5b9a\u7684\uff09\n\t\t\tc = _getc();\n\t\t\tif(c != '.') throw(\"CE: Unexpected character. \");\n\t\t} else throw(\"CE\");\n\t\tc = _getc();\n\t\tnum = 0;\n\t\twhile(c >= '0' && c <= '9') { //\u8bfb\u53d6\u7ec8\u6b62\u4e0b\u6807\n\t\t\tnum = num * 10 + c - '0';\n\t\t\tc = _getc();\n\t\t}\n\t\tinit->end = num;\n\t\tc = _getc();\n\t} else throw(\"CE: Unknow type. \");\n}\n```\n\n\u53d8\u91cf\u58f0\u660e\u7684\u53c2\u6570\u4e5f\u662f\u6307\u5411\u8be5\u58f0\u660e\u7684\u6307\u9488\uff0c\u4e5f\u5fc5\u987b\u521d\u59cb\u5316\u597d\u3002\n\n\u8bfb\u53d6\u8868\u8fbe\u5f0f\uff1a\n\n```cpp\nvoid readexpression(char endc, Expression *&expr)\t//\u8bfb\u53d6\u8868\u8fbe\u5f0f\uff0cendc\u4e3a\u8868\u8fbe\u5f0f\u7ec8\u6b62\u7684\u6807\u5fd7\n{\n\texpr = new Expression();\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u5148\u628a\u524d\u9762\u7684\u7a7a\u5b57\u7b26\u541e\u4e86\n\tif(c == '-') {\t//\u5982\u679c\u662f\"-\"\uff0c\u90a3\u5c31\u662f\u8d1f\u7684\n\t\texpr->symbol = -1; \n\t\tc = _getc(); while(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u56e0\u4e3a\u8bfb\u5230\u4e86\u7b26\u53f7\uff0c\u6240\u4ee5\u4e3b\u4f53\u8fd8\u5728\u540e\u9762\n\t}\n\telse if(c == '+') {\t//\u5982\u679c\u662f\"+\"\uff0c\u90a3\u5c31\u662f\u6b63\u7684\n\t\texpr->symbol = 1;\n\t\tc = _getc(); while(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r')\tc = _getc();\t//\u7406\u7531\u540c\u4e0a\n\t} else {\n\t\texpr->symbol = 1;\t//\u6ca1\u6307\u660e\u6b63\u8d1f\u4e5f\u662f\u6b63\u7684\uff0c\u53ea\u662f\u4e0d\u7528\u7ee7\u7eed\u5f80\u4e0b\u8bfb\u4e86\n\t}\n\t\n\tif(c >= '0' && c <= '9') {\t//\u5982\u679c\u662f\u5e38\u6570\n\t\texpr->type = 0;\n\t\tstd::string num;\t//\u76f4\u63a5\u628a\u6570\u5b57\u8bfb\u6210\u5b57\u7b26\u4e32\uff0c\u89e3\u6790\u6254\u7ed9\u6267\u884c\u90a3\u8fb9\uff0c\u8bfb\u5165\u8fd9\u91cc\u5c31\u4e0d\u7ba1\u4e86\n\t\twhile(c >= '0' && c <= '9') {\n\t\t\tnum.push_back(c);\n\t\t\tc = _getc();\n\t\t}\n\t\texpr->val = num;\n\t} else if((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\t//\u5982\u679c\u662f\u53d8\u91cf\n\t\tstd::string name;\n\t\twhile((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\t//\u8bfb\u5b8c\u53d8\u91cf\u540d\n\t\t\tname.push_back(c);\n\t\t\tc = _getc();\n\t\t}\n\t\texpr->val = name;\n\t\tif(c == '[') {\t//\u5982\u679c\u662farray\n\t\t\texpr->type = 2;\n\t\t\tc = _getc();\n\t\t\treadexpression(']', expr->arre);\t//\u4ee5\"]\"\u4e3a\u7ec8\u6b62\u6807\u5fd7\u8bfb\u53d6\u6570\u7ec4\u4e0b\u6807\u8868\u8fbe\u5f0f\n\t\t} else expr->type = 1;\n\t}\n\twhile(c != endc && (c == ' ' || c == '\\n' || c == '\\t' || c == '\\r')) c = _getc();\t//\u4e00\u76f4\u541e\u7a7a\u5b57\u7b26\uff0c\u76f4\u5230\u8bfb\u5230\u7ed3\u675f\u6807\u5fd7\u6216\u5176\u4ed6\u5b57\u7b26\u4e3a\u6b62\uff08\u8fd9\u91cc\u7ed3\u675f\u6807\u5fd7\u4e5f\u53ef\u80fd\u662f\u56db\u5927\u7a7a\u5b57\u7b26\u4e4b\u4e00\uff09\n\tif(c == '+' || c == '-') readexpression(endc, expr->nxt);\t//\u5982\u679c\u662f\u6b63\u8d1f\uff08\u52a0\u51cf\uff09\u53f7\u5c31\u8bfb\u4e0b\u4e00\u4e2a\u8868\u8fbe\u5f0f\n\telse if(c == endc) c = _getc();\t//\u7ec8\u6b62\u7b26\u5c31\u518d\u8bfb\u4e00\u4e2a\u5b57\u7b26\u8d70\u4eba\n\telse throw(\"CE: Unexpected character. \");\t//\u4e0d\u53ef\u80fd\u662f\u522b\u7684\u5b57\u7b26\uff0c\u5982\u679c\u662f\u5c31CE\n}\n```\n\n\u8868\u8fbe\u5f0f\u4e5f\u6709\u7ed3\u675f\u6807\u5fd7\uff0c\u4f8b\u5982\u9017\u53f7\uff0c\u6362\u884c\uff0c\u201c]\u201d\uff0c\u8fd9\u4e9b\u8981\u770b\u8c03\u7528\u8005\u7684\u610f\u613f\u3002\n\n\u8bfb\u5165\u8868\u8fbe\u5f0f\u4f20\u5165\u7684\u662f**\u6307\u5411\u8868\u8fbe\u5f0f\u7684\u6307\u9488\u7684\u5f15\u7528**\uff0c\u8bfb\u5165\u8868\u8fbe\u5f0f\u65f6\u4f1a\u81ea\u884c\u521d\u59cb\u5316\uff0c\u65e0\u987b\u63d0\u524d\u521d\u59cb\u5316\u3002\n\n\u8bfb\u5165\u6bd4\u8f83\u5224\u65ad\uff1a\n\n```cpp\nint readjudge()\n{\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\n\tif(c == 'l') {\t//\u8bfb\u53d6\u6bd4\u6559\u7684\u7c7b\u578b\uff0c\u4e0d\u7b26\u54086\u4e2a\u7c7b\u578b\u4e4b\u4e00\u7684CE\u6389\n\t\tc = _getc();\n\t\tif(c == 't') {\n\t\t\treturn 0;\t//lt\n\t\t} else if(c == 'e') {\n\t\t\treturn 2;\t//le\n\t\t} else throw(\"CE: Unexpected character. \");\n\t} else if(c == 'g') {\n\t\tc = _getc();\n\t\tif(c == 't') {\n\t\t\treturn 1;\t//gt\n\t\t} else if(c == 'e') {\n\t\t\treturn 3;\t//ge\n\t\t} else throw(\"CE: Unexpected character. \");\n\t} else if(c == 'e') {\n\t\tc = _getc();\n\t\tif(c == 'q') {\n\t\t\treturn 4;\t//eq\n\t\t} else throw(\"CE: Unexpected character. \");\n\t} else if(c == 'n') {\n\t\tif(c == 'e') {\n\t\t\tc = _getc();\n\t\t\tif(c == 'q') {\n\t\t\t\treturn 5;\t//neq\n\t\t\t} else throw(\"CE: Unexpected character. \");\n\t\t} else throw(\"CE: Unexpected character. \");\n\t} else throw(\"CE: Unexpected character. \");\n}\n```\n\n\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\u3002\n\n## readvars\uff1a\n\n```cpp\nvoid readvars(Instruction *ins)\t//\u8bfb\u53d6vars\n{\n\tins->init = new Initer();\n\tIniter *init = ins->init;\n\twhile(c != '}') {\n\t\treadiniter(init);\n\t\tinit->nxt = new Initer();\n\t\tinit = init->nxt;\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\n\t}\n\tins->type = 0;\n\tc = _getc();\n}\n```\n\n\u5148\u7ed9\u6307\u4ee4\u7684\u53d8\u91cf\u58f0\u660e\u8868\u521d\u59cb\u5316\u597d\u3002\u6bcf\u6b21\u8bfb\u53d6\u5b8c\u6362\u6210\u4e0b\u4e00\u6761\u63a5\u7740\u8bfb\u53d6\u3002\n\n\n## readset\uff1a\n\n```cpp\nvoid readset(Instruction *ins)\t//\u8bfb\u53d6set\n{\n\tins->type = 1;\n\treadexpression(',', ins->exp1);\t//\u4ee5\u9017\u53f7\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp1\n\treadexpression('\\n', ins->exp3); //\u4ee5\u6362\u884c\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp2\n}\n\n```\n\n## readyosoro\uff1a\n\n```cpp\nvoid readyosoro(Instruction *ins)\t//\u8bfb\u53d6yosoro\n{\n\tins->type = 2;\n\treadexpression('\\n', ins->exp1);\t//\u4ee5\u6362\u884c\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp1\n}\n```\n\n## readihu\uff1a\n\n```cpp\nvoid readihu(Instruction *ins)\t//\u8bfb\u53d6ihu\n{\n\tins->type = 3;\n\tins->judgetype = readjudge();\t//\u8bfb\u53d6\u6bd4\u8f83\u7c7b\u578b\n\treadexpression(',', ins->exp1);\t//\u4ee5\u9017\u53f7\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp1\n\treadexpression('\\n', ins->exp2);\t//\u4ee5\u6362\u884c\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp2\n\tins->subins = new Instruction();\n\tReadInstruction('}', ins->subins);\t//\u4ee5\u6709\u62ec\u53f7\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6subins\n}\n```\n\n\u4ece ihu \u5f00\u59cb\u51fa\u73b0\u4e86\u5b50\u6307\u4ee4\u7684\u8bfb\u5165\u3002\n\n## readhor\uff1a\n\n```cpp\nvoid readhor(Instruction *ins)\t//\u8bfb\u53d6hor\n{\n\tins->type = 4;\n\tins->judgetype = 2;\t//\u6bd4\u8f83\u7c7b\u578b\u5929\u7136\u4e3ale\n\treadexpression(',', ins->exp1);\t//\u4ee5=\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6\u5faa\u73af\u53d8\u91cf\n\treadexpression(',', ins->exp3);\t//\u4ee5t\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6\u521d\u503c\n\treadexpression('\\n', ins->exp2);\t//\u4ee5\u6362\u884c\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6\u7ec8\u6b62\u503c\n\tins->subins = new Instruction();\n\tReadInstruction('}', ins->subins);\n}\n```\n\n## readwhile\uff1a\n\n```cpp\nvoid readwhile(Instruction *ins)\t//\u8bfb\u53d6while\n{\n\treadihu(ins);\t//\u56e0\u4e3a\u5185\u90e8\u662f\u76f8\u540c\u7684\u76f4\u63a5\u5f88\u8d56\u76ae\u7684\u7528ihu\u8bfb\u5165\n\tins->type = 5;\t//\u7136\u540e\u628a\u7c7b\u578b\u6539\u8fc7\u6765\u5c31\u884c\u4e86\n}\n```\n\nwhile \u548c ihu \u5728\u8868\u793a\u4e0a\u5b9e\u5728\u662f\u592a\u50cf\u4e86\u3002\n\n\u81f3\u6b64\u8bfb\u5165\u90e8\u5206\u4e5f\u5b8c\u6210\u4e86\u3002\n\n# \u4e94\u3001\u6536\u5c3e\n\n```cpp\nInstruction *Main;\t//\u4e3b\u6307\u4ee4\u4e32\n\nint main()\n{\n\tc = _getc();\t//\u5148\u8bfb\u4e00\u4e2a\u5b57\u7b26\n\tMain = new Instruction();\n\ttry {\n\t\tReadInstruction(EOF, Main);\t//\u4ee5EOF\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6Main\n\t\tRun(Main);\n        printf(\"\\n\");\n\t} catch (const char* e) {\n\t\tcerr << e << endl;\n\t}\n\treturn 0;\n}\n```\n\n\u5728\u63d0\u4ea4\u7684\u65f6\u5019\u4e3a\u4e86\u4fdd\u8bc1\u6548\u7387\u53ef\u4ee5\u628a\u5f02\u5e38\u5904\u7406\u5220\u6389\u3002\n\n# \u516d\u3001\u6d4b\u8bd5\n\n\u5199\u662f\u5199\u5b8c\u4e86\uff0c\u6b63\u786e\u6027\u8fd8\u5f97\u4e0d\u5230\u4fdd\u8bc1\u3002\u6211\u4eec\u5199\u4e00\u4e9bCYaRon!\u7a0b\u5e8f\u6d4b\u8bd5\u4e00\u4e0b\uff1a\n\n## test1.cyr \u4e09\u8fde\u51fb\u76f4\u63a5\u8f93\u51fa\uff1a\n\n\u65e2\u7136\u9898\u76ee\u63cf\u8ff0\u4e2d\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u662f\u4e09\u8fde\u51fb\u76f4\u63a5\u8f93\u51fa\u3002\n\n```python\n# test1.cyr\n\n:yosoro 192\n:yosoro 384\n:yosoro 576\n:yosoro 219\n:yosoro 438\n:yosoro 657\n:yosoro 273\n:yosoro 546\n:yosoro 819\n:yosoro 327\n:yosoro 654\n:yosoro 981\n\n```\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\n\n```\n192 384 576 219 438 657 273 546 819 327 654 981 \n\n```\n\n\u901a\u8fc7\u3002\n\n## test2.cyr A+B Problem\uff1a\n\n```python\n# test2.cyr\n\n{ vars\n\ta:int\n\tb:int\n}\n\n:set a, 1\n:set b, 2\n\n:yosoro a + b\n\n```\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\n\n```\n3\n```\n\n\u901a\u8fc7\u3002\n\n## test3.cyr \u628a\u4e09\u8fde\u51fb\u653e\u5165\u6570\u7ec4\n\n\u9898\u76ee\u63cf\u8ff0\u4e0d\u8bf4\u5c31\u81ea\u5df1\u7f16\u4e00\u4e2a\u3002\n\n\u4e0e test1 \u4e0d\u540c\uff0ctest3 \u5148\u628a\u4e09\u8fde\u51fb\u7684\u7b54\u6848\u5b58\u5165\u6570\u7ec4\uff0c\u800c\u540e\u8f93\u51fa\u3002\n\n```python\n# test3.cyr\n\n{ vars \n\tmyarr:array[int, 100..150]\n}\n\n:set myarr[100], 192\n:set myarr[101], 384\n:set myarr[102], 576\n:set myarr[103], 219\n:set myarr[104], 438\n:set myarr[105], 657\n:set myarr[106], 273\n:set myarr[107], 546\n:set myarr[108], 819\n:set myarr[109], 327\n:set myarr[110], 654\n:set myarr[111], 981\n\n:yosoro myarr[100]\n:yosoro myarr[101]\n:yosoro myarr[102]\n:yosoro myarr[103]\n:yosoro myarr[104]\n:yosoro myarr[105]\n:yosoro myarr[106]\n:yosoro myarr[107]\n:yosoro myarr[108]\n:yosoro myarr[109]\n:yosoro myarr[110]\n:yosoro myarr[111]\n\n```\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\n\n```\n192 384 576 219 438 657 273 546 819 327 654 981\n```\n\n\u901a\u8fc7\u3002\n\n## test4.cyr \u6570\u7ec4\u7ffb\u8f6c\n\n\u518d\u81ea\u5df1\u7f16\u4e00\u4e2a\u7a0b\u5e8f\u3002\n\n```python\n# test4.cyr\n\n{ vars\n\tmyarr:array[int, 1..6]\n\ttmp:int\n}\n\n:set myarr[1], 1\n:set myarr[2], 2\n:set myarr[3], 3\n:set myarr[4], 4\n:set myarr[5], 5\n:set myarr[6], 6\n\n:set tmp, myarr[1]\n:set myarr[1], myarr[6]\n:set myarr[6], tmp\n\n:set tmp, myarr[2]\n:set myarr[2], myarr[5]\n:set myarr[5], tmp\n\n:set tmp, myarr[3]\n:set myarr[3], myarr[4]\n:set myarr[4], tmp\n\n:yosoro myarr[1]\n:yosoro myarr[2]\n:yosoro myarr[3]\n:yosoro myarr[4]\n:yosoro myarr[5]\n:yosoro myarr[6]\n\n```\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\n\n```\n6 5 4 3 2 1\n```\n\n\u901a\u8fc7\u3002\n\n## test5.cyr - test10.cyr\n\n\u56e0\u4e3a\u8fc7\u4e8e\u590d\u6742\u5e76\u4e14\u6211\u60f3\u8981\u7761\u89c9\u4ee5\u53ca\u660e\u5929\u6708\u8003\u8fd8\u6709\u73b0\u5728\u665a\u4e0a12:30\u7b49\u79cd\u79cd\u539f\u56e0\u5b9e\u5728\u61d2\u5f97\u5199\u4e86\u3002\n\n\u4e0d\u8fc7\u5148\u628a\u6ca1\u6d4b\u8bd5\u8fc7\u7684\u8bed\u53e5\u6d4b\u8bd5\u4e00\u904d\u3002\n\n## testihu.cyr\n\n```python\n# testihu.cyr\n\n{ vars\n\ta:int\n\tb:array[int, 1..1]\n}\n\n:set a, 233\n:set b[1], 233\n\n{ ihu eq, a, b[1] # \u8fd9\u91cc\u5176\u4ed6\u5224\u65ad\u7c7b\u578b\u90fd\u8bd5\u4e00\u4e0b\n\t:yosoro 1\n}\n\n```\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\n\n```\n1\n```\n\n\u901a\u8fc7\u3002\n\n## testhor.cyr\n\n```python\n# testhor.cyr\n\n{ vars \n\tmyarr:array[int, 100..150]\n\ti:int\n}\n\n:set myarr[100], 192\n:set myarr[101], 384\n:set myarr[102], 576\n:set myarr[103], 219\n:set myarr[104], 438\n:set myarr[105], 657\n:set myarr[106], 273\n:set myarr[107], 546\n:set myarr[108], 819\n:set myarr[109], 327\n:set myarr[110], 654\n:set myarr[111], 981\n\n{ hor i = 100 to 111\n\t:yosoro myarr[i]\n}\n\n```\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\n\n```\n192 384 576 219 438 657 273 546 819 327 654 981 \n```\n\n\u901a\u8fc7\u3002\n\n## testwhile.cyr\n\n```python\n# testwhile.cyr\n\n{ vars \n\tmyarr:array[int, 100..150]\n\ti:int\n}\n\n:set myarr[100], 192\n:set myarr[101], 384\n:set myarr[102], 576\n:set myarr[103], 219\n:set myarr[104], 438\n:set myarr[105], 657\n:set myarr[106], 273\n:set myarr[107], 546\n:set myarr[108], 819\n:set myarr[109], 327\n:set myarr[110], 654\n:set myarr[111], 981\n\n:set i, 111\n\n{ while ge, i, 100\n\t:yosoro myarr[i]\n\t:set i, i - 1\n}\n```\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\n\n```\n981 654 327 819 546 273 657 438 219 576 384 192\n```\n\n\u901a\u8fc7\u3002\n\n# \u4e03\u3001\u7ed3\u675f\u4e86\n\n\u5230\u73b0\u5728CYaRon!\u8bed\u89e3\u91ca\u5668\u5df2\u7ecf\u5199\u5b8c\u4e86\uff0c\u8be5\u6d4b\u8bd5\u7684\u4e5f\u6d4b\u8bd5\u8fc7\u4e86\uff0c\u53ef\u4ee5\u4ea4\u4e86\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u6709\u4e24\u4e2a\u5df2\u77e5BUG\uff1a\n\n1\u3001set\u8bed\u53e5\u88ab\u8d4b\u503c\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u5f88\u957f\u4e00\u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5224\u65ad\u5904\u7406\u4e86\u7b2c\u4e00\u9879\uff0c\u867d\u7136\u4e0d\u4f1a\u5f15\u53d1\u9519\u8bef\uff0c\u4f46\u8fd8\u662f\u4e0d\u5408\u7406\u7684\n\n2\u3001\u9898\u76ee\u4fdd\u8bc1\u6700\u540e\u4e00\u884c\u4e00\u5b9a\u662f\u7a7a\u884c\uff0c\u800c\u6b64\u89e3\u91ca\u5668\u4e5f\u5fc5\u987b\u4fdd\u8bc1\u8fd9\u4e00\u70b9\u5426\u5219\u4f1a\u51fa\u9519\uff0c\u867d\u7136\u4e0d\u5f71\u54cd\u8bc4\u6d4b\uff0c\u4f46\u8fd8\u662f\u4e0d\u5b8c\u7f8e\n\n\u5982\u679c\u6709\u5176\u4ed6BUG\u7684\u5b58\u5728\uff0c\u8bf7\u52a1\u5fc5\u6307\u51fa\uff01\u611f\u6fc0\u4e0d\u5c3d\n\n\u5728\u6700\u540e\u8d34\u4e00\u4e0b\u5b8c\u6574\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nchar _getc() { //\u4e00\u4e2a\u53ef\u4ee5\u541e\u6389\u6ce8\u91ca\u7684getchar()\n\tchar ch = getchar();\n\tif(ch == '#') while(ch != '\\n' && ch != EOF) ch = getchar();\n\treturn ch; \n}\n\nstruct arr {\t//\u6570\u7ec4\u7684\u50a8\u5b58\u7ed3\u6784\n\tint *val, start;\t//\u9700\u8981\u6709\u6570\u7ec4\u7a7a\u95f4\u548c\u8d77\u59cb\u5730\u5740\n\tarr(int s, int t): start(s) { val = new int[t - s + 5]; }\n\tvoid aset(int i, int v) { val[i - start] = v; }\t//\u8d4b\u503c\n\tint aget(int i) { return val[i - start]; }\t//\u53d6\u503c\n};\n\nmap<std::string, int> inttable;\t//\u50a8\u5b58\u6574\u6570\u53d8\u91cf\nmap<std::string, arr*> arrtable;\t//\u50a8\u5b58\u6570\u7ec4\u53d8\u91cf\n\nstruct Initer {\t//\u53d8\u91cf\u58f0\u660e\u50a8\u5b58\u7ed3\u6784\n\tint type;\t//\u53d8\u91cf\u7c7b\u578b\uff080\u4e3a\u6574\u6570\uff0c1\u4e3a\u6570\u7ec4\uff09\n\tstd::string name;\t//\u53d8\u91cf\u540d\n\tint begin, end;\t//\uff08\u6570\u7ec4\u4e13\u7528\uff09\u8d77\u59cb\u503c\u4e0e\u7ec8\u6b62\u503c\n\tIniter *nxt;\t//\u4e0b\u4e00\u6761\u53d8\u91cf\u58f0\u660e\uff08\u6211\u4eec\u4f7f\u7528\u94fe\u8868\u7ed3\u6784\u50a8\u5b58\u4e00\u6574\u4e32\u53d8\u91cf\u58f0\u660e\uff09\n};\n\nstruct Expression {\t//\u8868\u8fbe\u5f0f\u50a8\u5b58\u7ed3\u6784\n\tint type;\t//\u8868\u8fbe\u5f0f\u7c7b\u578b\uff080\u4e3a\u5e38\u6570\uff0c1\u4e3a\u6574\u6570\u53d8\u91cf\uff0c2\u4e3a\u6570\u7ec4\u53d8\u91cf\uff09\n\tint symbol;\t//\u6b63\u8d1f\n\tExpression *arre;\t//\uff08\u6570\u7ec4\u4e13\u7528\uff09\u6570\u7ec4\u4e0b\u6807\u7684\u8868\u8fbe\u5f0f\n\tstd::string val;\t//\u8868\u8fbe\u5f0f\u7684\u5f62\u6001\uff08\u5e38\u6570\u4e3a\u6570\u5b57\u4e32\uff0c\u53d8\u91cf\u4e3a\u53d8\u91cf\u540d\uff0c\u5e38\u6570\u4e0d\u9700\u8981\u5e26\u7b26\u53f7\uff0c\u6570\u7ec4\u4e0d\u9700\u8981\u5e26\u4e0b\u6807\uff09\n\tExpression *nxt;\t//\u4e0b\u4e00\u6761\u8868\u8fbe\u5f0f\uff08\u6211\u4eec\u4f7f\u7528\u94fe\u8868\u7ed3\u6784\u50a8\u5b58\u4e00\u6574\u4e2a\u8868\u8fbe\u5f0f\uff09\n\t\n\tint eget() {\t//\u8868\u8fbe\u5f0f\u53d6\u503c\n\t\tint num = 0;\n\t\tif(type == 0) {\t//\u5982\u679c\u662f\u5e38\u6570\n\t\t\tfor(int i = 0; i < val.size(); ++i) num = num * 10 + val[i] - '0';\t//\u83b7\u53d6\u6570\u503c\n\t\t} else if(type == 1) {\t//\u5982\u679c\u662f\u6574\u6570\u53d8\u91cf\n\t\t\tnum = inttable[val];\t//\u4ece\u5185\u5b58\u4e2d\u627e\u5230\u53d8\u91cf\u7684\u503c\n\t\t} else if(type == 2) {\t//\u5982\u679c\u662f\u6570\u7ec4\n\t\t\tnum = arrtable[val]->aget(arre->eget());\t//\u4ece\u5185\u5b58\u4e2d\u627e\u6570\u7ec4\u5e76\u6839\u636e\u4e0b\u6807\u8868\u8fbe\u5f0f\u8ba1\u7b97\u51fa\u4e0b\u6807\u5e76\u8bbf\u95ee\n\t\t} else {\t//\u5176\u4ed6\u60c5\u51b5\n\t\t\tthrow(\"RE\");\t//\u662f\u4e0d\u5b58\u5728\u7684\u5982\u679c\u771f\u7684\u5b58\u5728\u8bf4\u660e\u7a0b\u5e8f\u51faBUG\u4e86\n\t\t}\n\t\tnum *= symbol;\t//\u5e26\u4e0a\u7b26\u53f7\n\t\tif(nxt != NULL) return num + nxt->eget();\t//\u5982\u679c\u540e\u9762\u8fd8\u6709\u8868\u8fbe\u5f0f\uff0c\u8ba1\u7b97\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u5e76\u52a0\u4e0a\n\t\treturn num;\n\t}\n};\n\nstruct Instruction {\t//\u6307\u4ee4\u7684\u50a8\u5b58\u7ed3\u6784\n\tint type;\t//\u6307\u4ee4\u7c7b\u578b\uff080\u4e3avar\uff0c1\u4e3aset\uff0c2\u4e3ayosoro\uff0c3\u4e3aihu\uff0c4\u4e3ahor\uff0c5\u4e3awhile\uff09\n\tIniter *init;\t//\uff08var\u4e13\u7528\uff09\u521d\u59cb\u5316\u53d8\u91cf\u5217\u8868\n\tExpression *exp1, *exp2, *exp3;\t//exp1\uff1aset\u88ab\u8d4b\u503c\u9879\uff0cyosoro\u88ab\u8f93\u51fa\u8868\u8fbe\u5f0f\uff0cihu\u5de6\u503c\uff0chor\u5faa\u73af\u53d8\u91cf\uff0cwhile\u5de6\u503c\n\t\t\t\t\t\t\t\t\t//exp2\uff1aihu\u53f3\u503c\uff0chor\u7ed3\u675f\u503c\uff0cwhile\u53f3\u503c\n\t\t\t\t\t\t\t\t\t//exp3\uff1aset\u6e90\u8d4b\u503c\u8868\u8fbe\u5f0f\uff0chor\u521d\u59cb\u503c\n\tint judgetype;\t//ihu\u3001while\u3001hor\u4e13\u7528\uff0c\u6bd4\u8f83\u7c7b\u578b\uff080\u4e3alt\uff0c1\u4e3agt\uff0c2\u4e3ale\uff0c3\u4e3age\uff0c4\u4e3aeq\uff0c5\u4e3aneq\uff09\uff0chor\u9700\u8981\u59cb\u7ec8\u8bbe\u7f6e\u4e3a2\uff08le\uff09\n\tInstruction *subins;\t//ihu\u3001hor\u3001while\u4e13\u7528\uff0c\u5b50\u6307\u4ee4\u5757\n\tInstruction *nxt;\t//\u4e0b\u4e00\u6761\u6307\u4ee4\uff08\u6211\u4eec\u7528\u94fe\u8868\u7ed3\u6784\u50a8\u5b58\u4e00\u6574\u4e32\u6307\u4ee4\uff09\n};\n\nvoid Run(Instruction *ins);\n\nvoid _vars(Instruction *ins)\t//\u5904\u7406var\u8bed\u53e5\n{\n\tfor(Initer *i = ins->init; i != NULL; i = i->nxt) //\u904d\u5386\u6bcf\u4e00\u6761\u53d8\u91cf\u58f0\u660e\n\t{\n\t\tif(i->type == 0) inttable[i->name] = 0;\t//\u5982\u679c\u662f\u6574\u6570\uff0c\u76f4\u63a5\u5728\u6574\u6570\u5185\u5b58\u4e2d\u8bbe\u7f6e\u4e3a0\n\t\telse if(i->type == 1) {\t//\u5982\u679c\u662f\u6570\u7ec4\n\t\t\tarrtable[i->name] = new arr(i->begin, i->end);\t//\u5728\u6570\u7ec4\u5185\u5b58\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\n\t\t} else {\t//\u5176\u4ed6\u60c5\u51b5\n\t\t\tthrow(\"RE: Something wrong with the type of a Initer.\");\t//\u4e0d\u53ef\u80fd\u6709\u5176\u4ed6\u60c5\u51b5\u5982\u679c\u6709\u5c31\u8bf4\u660e\u7a0b\u5e8f\u51faBUG\u4e86\n\t\t}\n\t}\n}\n\nvoid _set(Instruction *ins)\t//\u5904\u7406set\u8bed\u53e5\n{\n\tExpression *exp1 = ins->exp1, *exp3 = ins->exp3;\t//\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\u628a\u94fe\u8868\u6362\u4e2a\u540d\u5b57\uff08\u56e0\u4e3a\u662f\u6307\u9488\u6240\u4ee5\u6307\u5411\u7684\u7ed3\u6784\u662f\u4e0d\u4f1a\u53d8\u7684\uff09\n\tif(exp1->type == 1) {\t//\u5982\u679c\u88ab\u8d4b\u503c\u9879\u662f\u6574\u6570\u53d8\u91cf\n\t\tinttable[exp1->val] = exp3->eget();\t//\u76f4\u63a5\u5728\u5185\u5b58\u4e2d\u6539\u53d8\u503c\n\t} else if(exp1->type == 2) {\t//\u5982\u679c\u88ab\u8d4b\u503c\u9879\u662f\u6570\u7ec4\n\t\tarrtable[exp1->val]->aset(exp1->arre->eget(), exp3->eget());\t//\u83b7\u53d6\u6570\u7ec4\u4e0b\u6807\u5e76\u6839\u636e\u4e0b\u6807\u8bbe\u7f6e\u6570\u7ec4\u7684\u503c\n\t} else {\t//\u5176\u4ed6\u60c5\u51b5\n\t\tthrow(\"CE: exp1 is not a variable\");\t//\u4e0d\u53ef\u80fd\u6709\u5176\u4ed6\u60c5\u51b5\uff0c\u5982\u679c\u6709\u53ef\u80fd\u662f\u8f93\u5165\u65f6\u8868\u8fbe\u5f0f\u5c31\u4e0d\u6b63\u786e\n\t}\n}\n\nvoid _yosoro(Instruction *ins)\t//\u5904\u7406yosoro\u8bed\u53e5\n{\n\tprintf(\"%d \", ins->exp1->eget());\t//\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c\u5e76\u8f93\u51fa\uff0c\u540e\u8ddf\u4e00\u4e2a\u7a7a\u683c\n}\n\nbool _ihu(Instruction *ins)\t//\u5904\u7406ihu\u8bed\u53e5\n{\n\tExpression *exp1 = ins->exp1, *exp2 = ins->exp2;\t//\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\u628a\u94fe\u8868\u6362\u4e2a\u540d\u5b57\uff08\u56e0\u4e3a\u662f\u6307\u9488\u6240\u4ee5\u6307\u5411\u7684\u7ed3\u6784\u662f\u4e0d\u4f1a\u53d8\u7684\uff09\n\tswitch(ins->judgetype)\t//\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u5224\u65ad\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u5c31\u8fd4\u56defalse\n\t{\n\tcase 0:\t//lt\n\t\tif(exp1->eget() >= exp2->eget()) return false;\n\t\tbreak;\n\tcase 1:\t//gt\n\t\tif(exp1->eget() <= exp2->eget()) return false;\n\t\tbreak;\n\tcase 2:\t//le\n\t\tif(exp1->eget() > exp2->eget()) return false;\n\t\tbreak;\n\tcase 3:\t//ge\n\t\tif(exp1->eget() < exp2->eget()) return false;\n\t\tbreak;\n\tcase 4:\t//eq\n\t\tif(exp1->eget() != exp2->eget()) return false;\n\t\tbreak;\n\tcase 5: //neq\n\t\tif(exp1->eget() == exp2->eget()) return false;\n\t\tbreak;\n\tdefault:\n\t\tthrow(\"RE: Something wrong with the type of a judge\");\n\t}\n\tRun(ins->subins);\t//\u5982\u679c\u7b26\u5408\u7ed3\u679c\u5c31\u6267\u884c\u5b50\u6307\u4ee4\u5757\n\treturn true;\t//\u8fd4\u56detrue\n}\n\nvoid _hor(Instruction *ins)\t//\u5904\u7406hor\u8bed\u53e5\n{\n\tExpression *exp1 = ins->exp1, *exp2 = ins->exp2, *exp3 = ins->exp3;\t//\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\u628a\u94fe\u8868\u6362\u4e2a\u540d\u5b57\uff08\u56e0\u4e3a\u662f\u6307\u9488\u6240\u4ee5\u6307\u5411\u7684\u7ed3\u6784\u662f\u4e0d\u4f1a\u53d8\u7684\uff09\n\t_set(ins);\t//\u628aexp3\u8d4b\u503c\u7ed9exp1\n\twhile(_ihu(ins)) {\t//\u5229\u7528ihu\u8bed\u53e5\u53cd\u590d\u6267\u884c\n\t\tif(exp1->type == 1) {\t//+1\u64cd\u4f5c\uff0c\u5faa\u73af\u53d8\u91cf\u5982\u679c\u662f\u6574\u6570\u53d8\u91cf\n\t\t\t++inttable[exp1->val];\t//\u76f4\u63a5\u52a0\n\t\t} else if(exp1->type == 2) {\t//\u5982\u679c\u662f\u6570\u7ec4\n\t\t\tint i = exp1->arre->eget();\t//\u83b7\u5f97\u4e0b\u6807\n\t\t\tarrtable[exp1->val]->aset(i, arrtable[exp1->val]->aget(i) + 1); //\u52a0\u4e0a\u53bb\n\t\t} else {\t//\u5982\u679c\u5176\u4ed6\u7c7b\u578b\n\t\t\tthrow(\"CE: exp1 is not a variable\");\t//\u4e0d\u53ef\u80fd\n\t\t}\n\t}\n}\n\nvoid _while(Instruction *ins)\t//\u5904\u7406while\u8bed\u53e5\n{\n\twhile(_ihu(ins));\t//\u5229\u7528ihu\u53cd\u590d\u6267\u884c\n}\n\nvoid Run(Instruction *ins)\t//\u5904\u7406\u6307\u4ee4\n{\n\twhile(ins != NULL) //\u4e00\u6761\u4e00\u6761\u6267\u884c\u4e0b\u53bb\u4e0b\u53bb\n\t{\n\t\tswitch(ins->type)\t//\u5206\u6e05\u6307\u4ee4\u7c7b\u578b\n\t\t{\n\t\tcase 0:\n\t\t\t_vars(ins);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\t_set(ins);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t_yosoro(ins);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\t_ihu(ins);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\t_hor(ins);\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\t_while(ins);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow(\"RE: Something wrong with the type of a instruction.\");\n\t\t}\n\t\tins = ins->nxt;\t//\u4e0b\u4e00\u6761\n\t}\n}\n\nInstruction *Main;\t//\u4e3b\u6307\u4ee4\u4e32\nchar c;\t//\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u5b57\u7b26\n\nvoid ReadInstruction(char endc, Instruction *ins);\n\nvoid readiniter(Initer *init)\t//\u8bfb\u53d6\u53d8\u91cf\u58f0\u660e\n{\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u541e\u6389\u7a7a\u5b57\u7b26\n\tif(!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))) throw(\"CE: Unexpected character. \"); //\u975e\u5b57\u6bcd\u4e0d\u53ef\u4ee5\u4f5c\u53d8\u91cf\u540d\n\tstd::string name;\n\twhile((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\t//\u8bfb\u53d6\u53d8\u91cf\u540d\n\t\tname.push_back(c);\n\t\tc = _getc();\n\t}\n\tinit->name = name;\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u5141\u8bb8\u53d8\u91cf\u540d\u548c\u5192\u53f7\u4e4b\u95f4\u6709\u7a7a\u5b57\u7b26\n\tif(c != ':') throw(\"CE\");\t//\u975e\u6cd5\u5b57\u7b26\n\tc = _getc();\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u5141\u8bb8\u5192\u53f7\u548c\u7c7b\u578b\u4e4b\u95f4\u6709\u7a7a\u5b57\u7b26\n\tname.clear();\n\tif(!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))) throw(\"CE: Unexpected character. TT\"); //\u975e\u5b57\u6bcd\u4e0d\u53ef\u4ee5\u4f5c\u7c7b\u578b\u540d\n\twhile((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\n\t\tname.push_back(c);\n\t\tc = _getc();\n\t}\n\tif(name == \"int\") {\t//int\n\t\tinit->type = 0;\n\t} else if(name == \"array\") {\t//array\n\t\tinit->type = 1;\n\t\tif(c != '[') throw(\"CE: Unexpected character. \");\t//array\u540e\u9762\u7d27\u8ddf\u7684\u4e0d\u662f\"[\"\u5c31\u4e0d\u884c\uff08\u6211\u89c4\u5b9a\u7684\uff09\n\t\tname.clear();\n\t\tc = _getc();\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u5141\u8bb8\u65b9\u62ec\u53f7\u540e\u9762\u6709\u7a7a\u5b57\u7b26\n\t\twhile((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\t//\u8bfb\u53d6\u7c7b\u578b\u540d\n\t\t\tname.push_back(c);\n\t\t\tc = _getc();\n\t\t}\n\t\tif(name != \"int\") throw(\"CE: Unknow type. \");\t//\u4e0d\u662fint\u80af\u5b9a\u4e0d\u884c\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u5141\u8bb8\u7c7b\u578b\u540d\u540e\u9762\u6709\u7a7a\u5b57\u7b26\n\t\tif(c != ',') throw(\"CE: Unexpected character. \");\t//\u4e0d\u662f\"\uff0c\"\u4e5f\u4e0d\u884c\n\t\tc = _getc();\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\n\t\tint num = 0;\n\t\twhile(c >= '0' && c <= '9') {\t//\u8bfb\u53d6\u8d77\u59cb\u4e0b\u6807\n\t\t\tnum = num * 10 + c - '0';\n\t\t\tc = _getc();\n\t\t}\n\t\tinit->begin = num;\n\t\tif(c == '.') {\t//\"..\"\u5fc5\u987b\u4e0e\u4e24\u4e2a\u503c\u7d27\u51d1\u7684\u6328\u5728\u4e00\u8d77\uff08\u6211\u89c4\u5b9a\u7684\uff09\n\t\t\tc = _getc();\n\t\t\tif(c != '.') throw(\"CE: Unexpected character. \");\n\t\t} else throw(\"CE\");\n\t\tc = _getc();\n\t\tnum = 0;\n\t\twhile(c >= '0' && c <= '9') { //\u8bfb\u53d6\u7ec8\u6b62\u4e0b\u6807\n\t\t\tnum = num * 10 + c - '0';\n\t\t\tc = _getc();\n\t\t}\n\t\tinit->end = num;\n\t\tc = _getc();\n\t} else throw(\"CE: Unknow type. \");\n}\n\nvoid readexpression(char endc, Expression *&expr)\t//\u8bfb\u53d6\u8868\u8fbe\u5f0f\uff0cendc\u4e3a\u8868\u8fbe\u5f0f\u7ec8\u6b62\u7684\u6807\u5fd7\n{\n\texpr = new Expression();\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u5148\u628a\u524d\u9762\u7684\u7a7a\u5b57\u7b26\u541e\u4e86\n\tif(c == '-') {\t//\u5982\u679c\u662f\"-\"\uff0c\u90a3\u5c31\u662f\u8d1f\u7684\n\t\texpr->symbol = -1; \n\t\tc = _getc(); while(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\t//\u56e0\u4e3a\u8bfb\u5230\u4e86\u7b26\u53f7\uff0c\u6240\u4ee5\u4e3b\u4f53\u8fd8\u5728\u540e\u9762\n\t}\n\telse if(c == '+') {\t//\u5982\u679c\u662f\"+\"\uff0c\u90a3\u5c31\u662f\u6b63\u7684\n\t\texpr->symbol = 1;\n\t\tc = _getc(); while(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r')\tc = _getc();\t//\u7406\u7531\u540c\u4e0a\n\t} else {\n\t\texpr->symbol = 1;\t//\u6ca1\u6307\u660e\u6b63\u8d1f\u4e5f\u662f\u6b63\u7684\uff0c\u53ea\u662f\u4e0d\u7528\u7ee7\u7eed\u5f80\u4e0b\u8bfb\u4e86\n\t}\n\t\n\tif(c >= '0' && c <= '9') {\t//\u5982\u679c\u662f\u5e38\u6570\n\t\texpr->type = 0;\n\t\tstd::string num;\t//\u76f4\u63a5\u628a\u6570\u5b57\u8bfb\u6210\u5b57\u7b26\u4e32\uff0c\u89e3\u6790\u6254\u7ed9\u6267\u884c\u90a3\u8fb9\uff0c\u8bfb\u5165\u8fd9\u91cc\u5c31\u4e0d\u7ba1\u4e86\n\t\twhile(c >= '0' && c <= '9') {\n\t\t\tnum.push_back(c);\n\t\t\tc = _getc();\n\t\t}\n\t\texpr->val = num;\n\t} else if((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\t//\u5982\u679c\u662f\u53d8\u91cf\n\t\tstd::string name;\n\t\twhile((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\t//\u8bfb\u5b8c\u53d8\u91cf\u540d\n\t\t\tname.push_back(c);\n\t\t\tc = _getc();\n\t\t}\n\t\texpr->val = name;\n\t\tif(c == '[') {\t//\u5982\u679c\u662farray\n\t\t\texpr->type = 2;\n\t\t\tc = _getc();\n\t\t\treadexpression(']', expr->arre);\t//\u4ee5\"]\"\u4e3a\u7ec8\u6b62\u6807\u5fd7\u8bfb\u53d6\u6570\u7ec4\u4e0b\u6807\u8868\u8fbe\u5f0f\n\t\t} else expr->type = 1;\n\t}\n\twhile(c != endc && (c == ' ' || c == '\\n' || c == '\\t' || c == '\\r')) c = _getc();\t//\u4e00\u76f4\u541e\u7a7a\u5b57\u7b26\uff0c\u76f4\u5230\u8bfb\u5230\u7ed3\u675f\u6807\u5fd7\u6216\u5176\u4ed6\u5b57\u7b26\u4e3a\u6b62\uff08\u8fd9\u91cc\u7ed3\u675f\u6807\u5fd7\u4e5f\u53ef\u80fd\u662f\u56db\u5927\u7a7a\u5b57\u7b26\u4e4b\u4e00\uff09\n\tif(c == '+' || c == '-') readexpression(endc, expr->nxt);\t//\u5982\u679c\u662f\u6b63\u8d1f\uff08\u52a0\u51cf\uff09\u53f7\u5c31\u8bfb\u4e0b\u4e00\u4e2a\u8868\u8fbe\u5f0f\n\telse if(c == endc) c = _getc();\t//\u7ec8\u6b62\u7b26\u5c31\u518d\u8bfb\u4e00\u4e2a\u5b57\u7b26\u8d70\u4eba\n\telse throw(\"CE: Unexpected character. \");\t//\u4e0d\u53ef\u80fd\u662f\u522b\u7684\u5b57\u7b26\uff0c\u5982\u679c\u662f\u5c31CE\n}\n\nint readjudge()\n{\n\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\n\tif(c == 'l') {\t//\u8bfb\u53d6\u6bd4\u6559\u7684\u7c7b\u578b\uff0c\u4e0d\u7b26\u54086\u4e2a\u7c7b\u578b\u4e4b\u4e00\u7684CE\u6389\n\t\tc = _getc();\n\t\tif(c == 't') {\n\t\t\tc = _getc();\n\t\t\treturn 0;\t//lt\n\t\t} else if(c == 'e') {\n\t\t\tc = _getc();\n\t\t\treturn 2;\t//le\n\t\t} else throw(\"CE: Unexpected character. \");\n\t} else if(c == 'g') {\n\t\tc = _getc();\n\t\tif(c == 't') {\n\t\t\tc = _getc();\n\t\t\treturn 1;\t//gt\n\t\t} else if(c == 'e') {\n\t\t\tc = _getc();\n\t\t\treturn 3;\t//ge\n\t\t} else throw(\"CE: Unexpected character. \");\n\t} else if(c == 'e') {\n\t\tc = _getc();\n\t\tif(c == 'q') {\n\t\t\tc = _getc();\n\t\t\treturn 4;\t//eq\n\t\t} else throw(\"CE: Unexpected character. \");\n\t} else if(c == 'n') {\n\t\tc = _getc();\n\t\tif(c == 'e') {\n\t\t\tc = _getc();\n\t\t\tif(c == 'q') {\n\t\t\t\tc = _getc();\n\t\t\t\treturn 5;\t//neq\n\t\t\t} else throw(\"CE: Unexpected character. \");\n\t\t} else throw(\"CE: Unexpected character. \");\n\t} else throw(\"CE: Unexpected character. \");\n\tc = _getc();\n}\n\nvoid readvars(Instruction *ins)\t//\u8bfb\u53d6vars\n{\n\tins->init = new Initer();\n\tIniter *init = ins->init;\n\twhile(c != '}') {\n\t\treadiniter(init);\n\t\tinit->nxt = new Initer();\n\t\tinit = init->nxt;\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc();\n\t}\n\tins->type = 0;\n\tc = _getc();\n}\n\nvoid readset(Instruction *ins)\t//\u8bfb\u53d6set\n{\n\tins->type = 1;\n\treadexpression(',', ins->exp1);\t//\u4ee5\u9017\u53f7\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp1\n\treadexpression('\\n', ins->exp3); //\u4ee5\u6362\u884c\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp2\n}\n\nvoid readyosoro(Instruction *ins)\t//\u8bfb\u53d6yosoro\n{\n\tins->type = 2;\n\treadexpression('\\n', ins->exp1);\t//\u4ee5\u6362\u884c\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp1\n}\n\nvoid readihu(Instruction *ins)\t//\u8bfb\u53d6ihu\n{\n\tins->type = 3;\n\tins->judgetype = readjudge();\t//\u8bfb\u53d6\u6bd4\u8f83\u7c7b\u578b\n\tc = _getc();\n\treadexpression(',', ins->exp1);\t//\u4ee5\u9017\u53f7\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp1\n\treadexpression('\\n', ins->exp2);\t//\u4ee5\u6362\u884c\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6exp2\n\tins->subins = new Instruction();\n\tReadInstruction('}', ins->subins);\t//\u4ee5\u6709\u62ec\u53f7\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6subins \n}\n\nvoid readhor(Instruction *ins)\t//\u8bfb\u53d6hor\n{\n\tins->type = 4;\n\tins->judgetype = 2;\t//\u6bd4\u8f83\u7c7b\u578b\u5929\u7136\u4e3ale\n\treadexpression(',', ins->exp1);\t//\u4ee5=\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6\u5faa\u73af\u53d8\u91cf\n\treadexpression(',', ins->exp3);\t//\u4ee5t\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6\u521d\u503c\n\treadexpression('\\n', ins->exp2);\t//\u4ee5\u6362\u884c\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6\u7ec8\u6b62\u503c\n\tins->subins = new Instruction();\n\tReadInstruction('}', ins->subins);\n}\n\nvoid readwhile(Instruction *ins)\t//\u8bfb\u53d6while\n{\n\treadihu(ins);\t//\u56e0\u4e3a\u5185\u90e8\u662f\u76f8\u540c\u7684\u76f4\u63a5\u5f88\u8d56\u76ae\u7684\u7528ihu\u8bfb\u5165\n\tins->type = 5;\t//\u7136\u540e\u628a\u7c7b\u578b\u6539\u8fc7\u6765\u5c31\u884c\u4e86\n}\n\nvoid ReadInstruction(char endc, Instruction *ins)\n{\n\twhile(c != endc) \n\t{\n\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u8bfb\u5230\u4e0d\u662f\u7a7a\u5b57\u7b26\u4e3a\u6b62\n\t\tif(c == '{' || c == ':')\t//\u6307\u4ee4\n\t\t{\n\t\t\tstd::string opt;\n\t\t\tc = _getc();\n\t\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u8bfb\u5230\u4e0d\u662f\u7a7a\u5b57\u7b26\u4e3a\u6b62\n\t\t\twhile(c >= 'a' && c <= 'z') { //\u83b7\u53d6\u6307\u4ee4\u540d\u79f0\n\t\t\t\topt.push_back(c);\n\t\t\t\tc = _getc();\n\t\t\t}\n\t\t\tif(c != ' ' && c != '\\t' && c != '\\n' && c != '\\r') throw(\"CE: Unexpected character. \");\t//\u4e0d\u662f\u4ee5\u7a7a\u5b57\u7b26\u7ed3\u5c3e\u7684\u76f4\u63a5CE\n\t\t\t\n\t\t\tif(opt == \"vars\")\n\t\t\t\treadvars(ins);\n\t\t\telse if(opt == \"set\")\n\t\t\t\treadset(ins);\n\t\t\telse if(opt == \"yosoro\")\n\t\t\t\treadyosoro(ins);\n\t\t\telse if(opt == \"ihu\")\n\t\t\t\treadihu(ins);\n\t\t\telse if(opt == \"hor\")\n\t\t\t\treadhor(ins);\n\t\t\telse if(opt == \"while\")\n\t\t\t\treadwhile(ins);\n\t\t\telse\t//\u672a\u5b9a\u4e49\u7684\u6307\u4ee4\n\t\t\t\tthrow(\"CE: Unknow Instruciton. \");\n\t\t\t\t\n\t\t\tins->nxt = new Instruction();\n\t\t\tins = ins->nxt;\n\t\t\t\n\t\t\twhile(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r') c = _getc(); //\u8bfb\u5230\u4e0d\u662f\u7a7a\u5b57\u7b26\u4e3a\u6b62\n\t\t} else {\t//\u975e\u6cd5\u5b57\u7b26\n\t\t\tthrow(\"CE: Unexpected character. \");\n\t\t}\n\t}\n\tc = _getc();\n}\n\nint main()\n{\n\tc = _getc();\t//\u5148\u8bfb\u4e00\u4e2a\u5b57\u7b26\n\tMain = new Instruction();\n\ttry {\n\t\tReadInstruction(EOF, Main);\t//\u4ee5EOF\u4e3a\u7ed3\u675f\u6807\u5fd7\u8bfb\u53d6Main\n\t\tRun(Main);\n\t\tprintf(\"\\n\");\n\t} catch (const char* e) {\n\t\tcerr << e << endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1539276120,
        "uid": 75482,
        "name": "\u661f\u91ce\u68a6\u7f8e",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3695 \u3010CYaRon!\u8bed\u3011"
    },
    {
        "content": "# P3695 CYaRon\uff01\u8bed\n\n## \u5f00\u59cb\u4e4b\u524d\n\n\u672c\u7bc7\u9898\u89e3\u540c\u6b65\u4e8e\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\u3002\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/adm-1223/p/16333702.html)\n\n\u4e0a\u6b21\u6c34\u4e86\u4e9b\u5c0f\u6a21\u62df\u4e4b\u540e\u611f\u89c9\u4e0d\u80fd\u518d\u9893\u5e9f\u4e86\uff0c\u4e8e\u662f\u5c31\u6765\u5927\u6a21\u62df\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u82b1\u4e86\u6211\u4e00\u4e2a\u591a\u661f\u671f ![](//\u56fe.tk/h)\n\n\u8fd8\u662f[\u6700\u5dee\u89e3](https://www.luogu.com.cn/record/list?pid=P3695&user=&orderBy=1&status=&page=2) ![](//\u56fe.tk/h)\n\n\u4e0d\u8fc7\uff0c\u4e3a\u4e86\u7eaa\u5ff5\u6211\u7684\u7b2c 20 \u9053\u7d2b\u9898\uff0c\u7eaa\u5ff5\u6211\u8fd9\u4e00\u5468\u7684\u52aa\u529b\uff0c\u6211\u8fd8\u662f\u60f3\u5199\u7bc7\u9898\u89e3\uff0c\u8bb0\u5f55\u6211\u7684\u4e00\u70b9\u4e00\u6ef4\u3002\n\n## \u5927\u81f4\u601d\u8def\n\n\u6a21\u62df\u9898\uff0c\u90fd\u662f\u6839\u636e\u9898\u610f\u76f4\u63a5\u6a21\u62df\u7684\uff08\u96fe\u3002\n\n\u8fd9\u4e2a\u9898\u5462\uff0c\u5c31\u9002\u5408\u5206\u6b65\u5b8c\u6210\u3002\n\n## \u5173\u4e8e\u53d8\u91cf\n\n\u7528\u7684\u53d8\u91cf\u5927\u90fd\u662f\u6c49\u8bed\u62fc\u97f3\u6216\u8005\u7f29\u5199\u6216\u8005\u534a\u7f29\u5199\uff08\u6bd4\u8f83\u597d\u8c03\uff09\u3002\n\n\u6709\u4e9b\u5730\u65b9\u6ca1\u52a0\u6ce8\u91ca\u5c31\u53ef\u4ee5\u76f4\u63a5\u8bfb\u62fc\u97f3\u7406\u89e3\u542b\u4e49\u3002\n\n## \u6210\u957f\u8fc7\u7a0b\n\n### \u4e00 . \u8f93\u51fa\uff0c\u53d8\u91cf\uff0c\u8d4b\u503c\n\n\u521a\u5f00\u59cb\u6211\u662f\u8fd9\u4e48\u60f3\u7684\uff1a\n\n\u5148\u628a\u53d8\u91cf\u3001\u6570\u7ec4\u548c\u8d4b\u503c\u3001\u8f93\u51fa\u6253\u5b8c\u3002\n\n1. \u8f93\u51fa\n\n\t\u76f4\u63a5\u5c06\u8868\u8fbe\u5f0f\u7684\u503c\u8ba1\u7b97\u51fa\u6765\u8f93\u51fa\u5373\u53ef\u3002\n\n1. \u53d8\u91cf\u548c\u6570\u7ec4\n\n\t\u7528\u5230\u4e86\u4e24\u4e2a map\uff0c\u7528\u6765\u6620\u5c04 string \u548c int \u6216\u8005 array \u4e4b\u95f4\u7684\u5173\u7cfb\u3002\n\n1. \u8d4b\u503c\n\n\t\u548c\u8f93\u51fa\u5dee\u4e0d\u591a\uff0c\u5c06\u53d8\u91cf\u540d\u50a8\u5b58\u4e0b\u6765\uff0c\u8ba1\u7b97\u51fa\u540e\u8fb9\u8868\u8fbe\u5f0f\u7684\u503c\u5373\u53ef\u3002\n\n\u5177\u4f53\u770b[\u4ee3\u7801](https://www.luogu.com.cn/paste/s62a709y)\u3002\n\n\u663e\u7136\u8fd9\u4e2a `js` \u662f\u4e0d\u5bf9\u7684\uff0c\u6ca1\u6709\u5224\u65ad\u51cf\u6cd5\uff0c`:yosoro 2-1` \u90fd\u662f\u9519\u7684\u3002\n\n\u6570\u7ec4\u7684\u5904\u7406\u4e5f\u6709\u4e9b\u9519\u8bef\u3002\n\n\u5f97\u4e86 20 \u5206\u3002\n\n\u4f46\u6211\u5f53\u65f6\u6ca1\u5728\u610f\uff0c\u5c31\u53bb\u6253 `ihu` \u4e86\u3002\n\n### \u4e8c .ihu\n\n\u6211\u5bf9 `ihu` \u60f3\u7684\u5f88\u7b80\u5355\uff0c\u6ca1\u8003\u8651\u5faa\u73af\u7684\u60c5\u51b5\u3002\n\n\u5982\u679c `ihu` \u5408\u6cd5\uff0c\u5c31\u987a\u5e8f\u6267\u884c\uff1b\u5426\u5219\uff0c\u5c31\u5c06\u66f4\u6df1\u5c42\u6570\u7684\u8bfb\u5165\uff0c\u8df3\u8fc7\u3002\n\n\u5c42\u6570\u7684\u5b9a\u4e49\u5927\u6982\u5c31\u662f\u6bcf\u9047\u5230\u4e00\u4e2a `{` \u5c42\u6570 +1\uff0c\u9047\u5230 `}` \u5c42\u6570 -1\u3002\n\n\u7136\u540e\u53c8\u5c0f\u6539\u4e86\u4e00\u4e0b `js`\uff0c\u5b8c\u5584\u4e86\u51cf\u6cd5\u7684\u7ef4\u62a4\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/ubt32mfe)\n\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6211\u7684 `ihu` \u601d\u8def\u4e0a\u6ca1\u4ec0\u4e48\u5927\u9519\u8bef\u3002\n\n30 \u5206\u3002\n\n### \u4e09 . \u6570\u7ec4\n\n\u4e4b\u540e\u6211\u770b\u4e86\u6570\u636e\u90a3\u5f20\u56fe\u3002\n\n\u5c31\u8fd9\u4e2a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/4595.png)\n\n\u201c\u4e0d\u5bf9\u554a\uff0c\u5e94\u8be5\u662f 50 \u5417\uff1f\u201d\n\n\u7136\u540e\u5c31\u5f00\u59cb\u8c03\u8bd5\u6570\u7ec4\u3002\n\n\u6211\u5c31\u53d1\u73b0 `js` \u7528\u9012\u5f52\u7684\u8bdd\uff0c`ls` \u662f\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u4f1a\u88ab\u6e05\u7a7a\u3002\n\n\u7136\u540e\u6211\u5c31\u76f4\u63a5\u5f53\u6570\u5b57\u8ba1\u7b97\u4e86\u2026\u2026\n\n\u6ca1\u8003\u8651\u6570\u7ec4\u4e0b\u6807\u662f\u53d8\u91cf\u7684\u60c5\u51b5\u3002\n\n\u4e0d\u8fc7\uff0c50 \u5206\u5c31\u8fd9\u4e48\u5230\u624b\u4e86\u2026\u2026\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/ywynn6dt)\n\n### \u56db .hor\n\n\u4ece\u8fd9\u5f00\u59cb\uff0c\u5c31\u5f00\u59cb\u6709\u4e9b\u6076\u5fc3\u4e86\u3002\n\n\u56e0\u4e3a\u8981\u91cd\u590d\u64cd\u4f5c\uff0c\u987a\u5e8f\u64cd\u4f5c\u53ef\u80fd\u4e0d\u597d\u5f04\uff0c\u6240\u4ee5\u8fd9\u91cc\u9009\u62e9\u4e86\u9012\u5f52\u3002\n\n\u7528\u4e86\u4e00\u4e2a `zhixing` \u51fd\u6570\uff0c\u5c06\u66f4\u6df1\u5c42\u6570\u7684\u64cd\u4f5c\u50a8\u5b58\u4e0b\u6765\u3002\u7528\u5faa\u73af\u9012\u5f52\u5904\u7406\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u662f\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u539f\u56e0\uff0c`main` \u51fd\u6570\u4e2d\u7684 `zhixing` \u662f\u4ee5\u8bfb\u5165\u7684\u5f62\u5f0f\u6267\u884c\u7684\uff0c\u800c\u9012\u5f52\u65f6\u5219\u662f\u4ee5\u50a8\u5b58\u7684\u5f62\u5f0f\u6267\u884c\u7684\u3002\n\n\u6240\u4ee5\u8981\u6709\u4e00\u4e9b\u5224\u65ad\uff0c\u5c06\u8bfb\u5165\u6216\u662f\u50a8\u5b58\u7684\u4ee3\u7801\u7edf\u4e00\u8d77\u6765\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/lr0iznb1)\n\n\n\u4f46\u8fd9\u6837\u53ea\u80fd\u6267\u884c\u5355\u5c42\u5faa\u73af\uff0c\u4e0d\u80fd\u5d4c\u5957\uff08\u4e0d\u7ba1\u662f\u5d4c\u5957\u5faa\u73af\u8fd8\u662f ihu\uff09\u3002\n\n\u800c\u539f\u56e0\u5462\uff0c\u5c31\u662f\u56e0\u4e3a\u5982\u679c\u5faa\u73af\u4e4b\u4e2d\u5d4c\u5957\u5faa\u73af\uff0c\u9012\u5f52\u6267\u884c\u5230\u4e0b\u4e00\u6b21\u5faa\u73af\u65f6\uff0c\u53c8\u4f1a\u6267\u884c `getline` \u51fd\u6570\u3002\n\n\u90a3\u4e48\u52a0\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u5faa\u73af\uff08\u4e25\u683c\u6765\u8bf4\u662f\u6700\u5916\u5c42\u5faa\u73af\uff09\uff0c\u5c31\u5c06\u66f4\u6df1\u5c42\u6b21\u7684\u5b58\u4e0b\u6765\uff1b\u5426\u5219\u5c31\u4ece\u4e4b\u524d\u50a8\u5b58\u7684\u4ee3\u7801\u4e2d\u627e\u5230\u8981\u6267\u884c\u7684\u8bed\u53e5\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/ke154uvr)\n\n\u5173\u4e8e `duiy` \u7684\u7528\u5904\uff0c\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\n\n```CYaRon!\n{ vars\n\ta:int\n\tb:int\n}\n\n{ hor a, 1, 2\n\t{ hor b, 1, 2\n\t\t:yosoro b\n\t}\n}\n```\n\n\u4e0d\u52a0 `duiy` \u7684\u8f93\u51fa\uff1a\n\n```\n1 2 0 1 2 0 \n```\n\n\u52a0 `duiy` \u7684\u8f93\u51fa\uff1a\n\n```\n1 2 1 2 \n```\n\n\u5982\u679c\u5c06\u5faa\u73af\u6267\u884c\u7684\u8bed\u53e5 **\u987a\u5e8f** \u8f93\u51fa\u7684\u8bdd\uff0c\u90a3\u4e48\u4e0d\u52a0 `duiy` \u7684\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff08\u4ec5 `hor` \u5faa\u73af\uff09\uff1a\n\n```\n{ hor a, 1, 2\n{ hor b, 1, 2\n:yosoro b\n}\n{ hor b, 1, 2\n:yosoro b\n}\n:yosoro b\n{ hor b, 1, 2\n:yosoro b\n}\n{ hor b, 1, 2\n:yosoro b\n}\n:yosoro b\n}\n```\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5faa\u73af\u7ed3\u675f\u4e4b\u540e\u53c8\u987a\u5e8f\u6267\u884c\u4e86\u4e00\u904d\u5faa\u73af\u4f53\u3002\n\n\u5e94\u8be5\u2026\u2026\u4e0d\u96be\u7406\u89e3\u5427\u3002\n\n\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5427\u3002\n\n\u7136\u540e\u5c31 60 \u5206\u4e86\u3002\n\n\u8fd9\u91cc\u7684 `duiy` \u7edf\u8ba1\u6bd4\u8f83\u6d45\u663e\uff0c\u6ca1\u6709\u8003\u8651 `ihu` \u7684\u4e0d\u6210\u7acb\u65f6\u8df3\u8fc7\u548c `while` \u8bed\u53e5\u3002\n\n### \u4e94 .while\n\n`ihu` \u548c `hor` \u6253\u5b8c\u4e4b\u540e\uff0c`while` \u5c31\u5f88\u597d\u6253\u4e86\u3002\n\n\u56e0\u4e3a `while` \u5b8c\u5168\u5c31\u662f `ihu` \u548c `hor` \u7684\u7ed3\u5408\u4f53\u3002\n\n\u987a\u4fbf\u53c8\u4fee\u6539\u4e86\u4e00\u4e0b `js` \u51fd\u6570\u3002\n\n\u4fee\u590d\u4e86\u4e4b\u524d\u8bf4\u7684\u6570\u7ec4\u4e0b\u6807\u662f\u53d8\u91cf\u65f6\u7684\u9519\u8bef\u3002\n\n\u8fd8\u5b8c\u5584\u4e86\u5bf9\u4e8e\u5faa\u73af\u4e2d\u7684 `ihu` \u7684\u8df3\u8fc7\u5904\u7406\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/otx0x5de)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u65f6\u7684 `zhixing` \u51fd\u6570\u6709\u4e86\u8fd4\u56de\u503c\u3002\n\n\u8fd9\u662f\u4e3a\u4e86\u5224\u65ad `ihu` \u662f\u5426\u9700\u8981\u8df3\u8fc7\u3002\n\n\u800c\u4e14\u6b64\u65f6\u7684 `duiy` \u51fd\u6570\u7684\u7edf\u8ba1\u65b9\u5f0f\u4e5f\u53d8\u6210\u4e86\u7531\u5927\u62ec\u53f7\u76f4\u63a5\u7edf\u8ba1\uff0c\u800c\u4e0d\u662f\u901a\u8fc7 `hor` \u7edf\u8ba1\u3002\n\n\u4ea4\u4e0a\u4e4b\u540e\uff0c80 \u5206\u4e86\uff0c\u4e24\u4e2a TLE\u3002\n\n### \u516d .set\n\n\u901a\u8fc7\u4e0b\u8f7d\u6570\u636e\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c#6 \u7684 `set` \u7684\u53d8\u91cf\u548c\u6570\u503c\u4e4b\u95f4\u6ca1\u6709\u7a7a\u683c\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u6211\u7684\u5904\u7406\u51fa\u73b0\u5947\u5947\u602a\u602a\u7684\u9519\u8bef\uff08\u6211\u7684\u5904\u7406\u662f\u6309\u7167\u7a7a\u683c\u5212\u5206\u7684\uff09\u3002\n\n\u65e2\u7136\u8fd9\u6837\uff0c\u53cd\u6b63 `set` \u4e2d\u7684 `,` \u662f\u7edd\u5bf9\u6709\u7684\uff0c\u90a3\u4e48\u5c31\u6839\u636e\u8fd9\u4e2a `,` \u5212\u5206\u53d8\u91cf\u3002\n\n[AC Code](https://www.luogu.com.cn/paste/zq3qn1xp)\n\n### \u4e03 . \u6570\u7ec4\n\n\u201c\u4f60\u7684 `vector` \u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u201d\n\n\u201c\u5c31\u76f4\u63a5\u7528\u554a\u3002\u201d\n\n\u201c\u90a3\u5b83\u5982\u679c\u76f4\u63a5\u662f\u4e00\u4e2a 9\uff1f\u201d\n\n\u201c\u55ef\uff1f\u54e6\uff0c\u6211\u5148 `push_back` \u4e86 1000 \u4e2a 0\u3002\u201d\n\n\u201c\u90a3\u4f60\uff1f\u201d\n\n\u201c\u597d\u50cf\u662f\u54e6\u3002\u201d\n\n\u867d\u7136\u8fd9\u4e2a\u5bf9\u8bdd\u6709\u4e9b\u5947\u602a\uff0c\u4f46\u6211\u4eec\u4e24\u4e2a\u90fd get \u5230\u4e86\u5bf9\u65b9\u7684\u610f\u601d\u3002\n\n\u4e8e\u662f\u6211\u5c31\u628a `vector` \u6362\u6210\u4e86 `int` \u6570\u7ec4\u3002\n\n\u5176\u5b9e\u5dee\u4e0d\u591a\uff08\u53cd\u6b63\u90fd\u662f\u6700\u5dee\u89e3\uff09\u3002\n\n[AC Code](https://www.luogu.com.cn/paste/5kg1xp4p)\n\n[\u542b\u8c03\u8bd5\u8fc7\u7a0b\u7684\u4ee3\u7801](https://www.luogu.com.cn/paste/yh42ed75)\n\n## \u603b\u7ed3\n\n\u4e2a\u4eba\u611f\u89c9\u8fd9\u79cd\u7d2b\u8272\u7684\u5927\u6a21\u62df\u5bf9\u4e8e\u4ee3\u7801\u80fd\u529b\u7684\u953b\u70bc\u8fd8\u662f\u5f88\u6709\u7528\u7684\u3002\n\n\u9664\u4e86\u8fc7\u7a0b\u6709\u70b9\u6298\u78e8\u5916\uff0cA \u6389\u4e4b\u540e\u8fd8\u662f\u5f88\u5f00\u5fc3\u7684\u3002\n\n\u5982\u679c\u5bf9\u4e8e\u6211\u7684\u4ee3\u7801\u7591\u95ee\uff0c\u53ef\u4ee5\u79c1\u4fe1\u95ee\u6211\u3002\n\n2022 \u5e74 noip \u540e\u5c31\u8981\u9000\u5f79\u4e86\u3002\u9000\u5f79\u524d\u8fd8\u662f\u80fd\u56de\u590d\u7684\u3002\n\n\u5927\u5b66\u4e4b\u540e\u53ef\u80fd\u4f1a\u662f\u4e0d\u662f\u4e0a\u6d1b\u8c37\u6216\u535a\u5ba2\u56ed\u770b\u770b\u3002\n\n\u5982\u679c\u89c9\u5f97\u8fd9\u7bc7\u9898\u89e3\u5199\u7684\u8fd8\u53ef\u4ee5\uff0c\u8bf7\u4e0d\u8981\u541d\u556c\u60a8\u7684\u70b9\u8d5e\u3002\n\n## \u5e7f\u544a\n\n[\u535a\u5ba2\u56ed](https://www.cnblogs.com/adm-1223/)",
        "postTime": 1654041107,
        "uid": 413020,
        "name": "Zvelig1205",
        "ccfLevel": 4,
        "title": "P3695 CYaRon!\u8bed"
    },
    {
        "content": "\u8fd9\u4e0d\u662f\u91cd\u590d\u7684\u505a\u6cd5\u3002\u6d1b\u5495\u5ba1\u9898\u89e3\u597d\u50cf\u5224\u9519\u4e86\u3002\n\n\u601d\u8def\uff1aCyaRon \u8f6c Perl \u540e\u518d\u8fd0\u884c\u3002\n\n\u8fd9\u4e2a\u9898\uff0c\u597d\u50cf\u662f\u8981\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u65b0\u8bed\u8a00\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5199 23 \u884c Perl \u7a0b\u5e8f\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002\u56e0\u4e3a\u6b63\u5219\u7528\u7684\u4e0d\u662f\u5f88\u719f\u7ec3\uff0c\u6240\u4ee5\u4e0d\u786e\u5b9a\u662f\u662f\u4e0d\u662f\u66f4\u77ed\u7684\u5b9e\u73b0\u3002\n\n```perl\n$/ = undef;\nmy $code = <>;\n$code = $code =~\ns/#.*?\\n/\\n/gsr =~ s/{[^}]*vars.*?}//gsr =~\ns/:yosoro(.*?)\\n/print $1\\nprint ' '\\n/gsr =~ s/:set(.*?),(.*?)\\n/$1 = $2\\n/gsr;\n$code = $code =~\ns/([^a-z])lt([^a-z])/$1<$2/gsr =~ s/([^a-z])gt([^a-z])/$1>$2/gsr =~\ns/([^a-z])le([^a-z])/$1<=$2/gsr =~ s/([^a-z])ge([^a-z])/$1>=$2/gsr =~\ns/([^a-z])eq([^a-z])/$1==$2/gsr =~ s/([^a-z])neq([^a-z])/$1!=$2/gsr;\nmy $magic = '([^,\\{\\}]*),([^,\\{\\}]*),([^,\\{\\}\\n]*)\\n([^\\}\\{]*?)\\}';\nwhile ($code =~ m/ihu/ or $code =~ m/hor/ or $code =~ /while/) {\n\t$code =~ s/\\{[^\\{\\}]*?ihu$magic/IF ($2 $1 $3) <%\\n $4 %>\\n/gs;\n\t$code =~ s/\\{[^\\{\\}]*?hor$magic/FOR $1 ( $2 .. $3 ) <%\\n $4 %>\\n/gs;\n\t$code =~ s/\\{[^\\{\\}]*?while$magic/WHILE ($2 $1 $3) <%\\n $4 %>\\n/gs;}\n$code = $code =~ s/<%/{/gsr =~ s/%>/}/gsr;\nfor my $keyword (qw/print/) {\n\t$code =~ s/([^a-z])${keyword}([^a-z])/$1\\U$keyword\\E$2/gs; }\n$code = $code =~\ns/([^a-z\\$])([a-z])/$1\\$$2/gsr =~ s/([^0-9\\'])([0-9]+)/$1'$2'/gsr;\nfor my $keyword (qw/if for while print while if for/) {\n\t$code =~ s/([^a-z])\\U$keyword\\E([^a-z])/$1$keyword$2/gs; }\n$code = $code =~ s/\\[/{/gsr =~ s/\\]/}/gsr =~ s/\\n/;\\n/gsr;\neval $code;\n```\n\n\u8fd9\u4e00\u5768\u4ee3\u7801\u770b\u4e0d\u5f97\u3002\u628a\u4ee3\u7801\u6253\u6563\u4e4b\u540e\u8fd8\u662f\u6709\u4e00\u70b9\u53ef\u8bfb\u6027\u7684\u3002\n\n\u57fa\u672c\u601d\u8def\u662f\u628a CYaRon \u8bed\u8a00\u8f6c\u6210 Perl\uff0c\u7136\u540e\u518d eval \u4e00\u4e0b\u3002\n\n\u4ee3\u7801\u903b\u8f91\u5199\u5728\u6ce8\u91ca\u91cc\u4e86\u3002\u5982\u679c\u6709\u7591\u95ee\uff0c\u6b22\u8fce\u79c1\u4fe1\u3002\n\n```perl\n\n#!/usr/bin/perl\n\n$/ = undef;\nmy $code = <>;\n\n# \u53bb\u6389\u6ce8\u91ca\n$code =~ s/#.*?\\n/\\n/gs;\n\n# \u53bb\u6389 vars \u6807\u7b7e\n$code =~ s/{[^}]*vars.*?}//gs;\n\n# \u5904\u7406 yosoro\n$code =~ s/:yosoro(.*?)\\n/print $1\\nprint ' '\\n/gs;\n\n# \u5904\u7406 set\n$code =~ s/:set(.*?),(.*?)\\n/$1 = $2\\n/g;\n\n# \u8f6c\u6362\u903b\u8f91\u64cd\u4f5c\u7b26\n$code =~ s/([^a-z])lt([^a-z])/$1<$2/gs;\n$code =~ s/([^a-z])gt([^a-z])/$1>$2/gs;\n$code =~ s/([^a-z])le([^a-z])/$1<=$2/gs;\n$code =~ s/([^a-z])ge([^a-z])/$1>=$2/gs;\n$code =~ s/([^a-z])eq([^a-z])/$1==$2/gs;\n$code =~ s/([^a-z])neq([^a-z])/$1!=$2/gs;\n\n# \u4ee3\u7801\u5757\u5d4c\u5957\nwhile ($code =~ m/ihu/ or $code =~ m/hor/ or $code =~ /while/) {\n\t$code =~ s/\\{[^\\{\\}]*?ihu([^,\\{\\}]*),([^,\\{\\}]*),([^,\\{\\}\\n]*)\\n([^\\}\\{]*?)\\}/IF ($2 $1 $3) <%\\n $4 %>\\n/gs;\n\t$code =~ s/\\{[^\\{\\}]*?hor([^,\\{\\}]*),([^,\\{\\}]*),([^,\\{\\}\\n]*)\\n([^\\}\\{]*?)\\}/FOR $1 ( $2 .. $3 ) <%\\n $4 %>\\n/gs;\n\t$code =~ s/\\{[^\\{\\}]*?while([^,\\{\\}]*),([^,\\{\\}]*),([^,\\{\\}\\n]*)\\n([^\\}\\{]*?)\\}/WHILE ($2 $1 $3) <%\\n $4 %>\\n/gs;\n}\n\n$code =~ s/<%/{/g;\n$code =~ s/%>/}/g;\n\n# \u4fdd\u62a4\u5173\u952e\u5b57\nfor my $keyword (qw/print/) {\n\t$code =~ s/([^a-z])${keyword}([^a-z])/$1\\U$keyword\\E$2/gs;\n}\n\n# \u7ed9\u53d8\u91cf\u52a0\u4e0a\u9b54\u6cd5\n$code =~ s/([^a-z\\$])([a-z])/$1\\$$2/gs;\n\n# \u7ed9\u6570\u5b57\u52a0\u4e0a\u9b54\u6cd5\n$code =~ s/([^0-9\\'])([0-9]+)/$1'$2'/gs;\n\n# \u8f6c\u56de\u5173\u952e\u5b57\nfor my $keyword (qw/if for while print while if for/) {\n\t$code =~ s/([^a-z])\\U$keyword\\E([^a-z])/$1$keyword$2/gs;\n}\n\n# \u4f7f\u7528\u54c8\u5e0c\uff0c\u9632\u6b62\u6570\u7ec4\u8d8a\u754c\n$code =~ s/\\[/{/gs;\n$code =~ s/\\]/}/gs;\n\n# \u52a0\u4e0a\u5206\u53f7\n$code =~ s/\\n/;\\n/gs;\n\n# --L-i-v-e--\uff08bushi\uff09 \u8fd0\u884c\uff01\neval $code;\n\n```",
        "postTime": 1564137402,
        "uid": 87267,
        "name": "jyi2ya",
        "ccfLevel": 0,
        "title": "\u300cPerl \u505a\u6cd5\u300dP3695 CYaRon!\u8bed"
    },
    {
        "content": "CyaRon!\u8bed\uff0c\u8bed\u8a00\u5927\u6a21\u62df\u754c\u7684\u4e00\u9897\u660e\u73e0\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\n\n1. [\u89e3\u91ca\u6267\u884c\u4e0e\u7f16\u8bd1\u6267\u884c](https://www.luogu.com.cn/paste/ktllgem8)\n2. [\u79bb\u7ebf\u4e0e\u5728\u7ebf](https://www.luogu.com.cn/paste/u3gl9jc2)\n\n\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u753b\u51fa\u6d41\u7a0b\u56fe\u6765\u68b3\u7406\u5206\u6790\u6b64\u9898\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bjay7fng.png)\n\n\u753b\u597d\u6d41\u7a0b\u56fe\u540e\uff08\u6211\u7684\u53ef\u80fd\u4e0d\u592a\u6807\u51c6\uff09\uff0c\u5c31\u53ef\u4ee5\u4e00\u6b65\u6b65\u7684\u7f16\u7a0b\u4e86\u3002\n\n\u5927\u4e8b\u5316\u5c0f\uff0c\u5c0f\u4e8b\u5316\u4e86\uff0c\u6211\u4eec\u628a\u95ee\u9898\u62c6\u5206\u6765\u770b\uff1a\n\n1. \u521d\u59cb\u5316\n2. \u8bfb\u5165\n3. \u5404\u79cd\u6307\u4ee4\n4. \u8f93\u51fa\n\n\u521d\u59cb\u5316\uff1a\n\n```cpp\nint expression();\nint statements();\nvoid skip_statements();\nint var_declarations();\nvoid if_statement();\nint for_statement();\nvoid while_statement();\n/* \u63d0\u524d\u5b9a\u4e49\u51fd\u6570 */\n\nenum tk_type {TK_WRONG, TK_END, TK_ID, TK_NUM, TK_LF_BRACE, TK_RT_BRACE, TK_COLON, TK_COMMENT, TK_LF_BRACKET, TK_RT_BRACKET, TK_COMMA, TK_RANGE, TK_NL, TK_OP_PLUS, TK_OP_MINUS};\nenum op_type {OP_PLUS, OP_MINUS};\nenum st_type {ST_DECL, ST_ASSIGN, ST_OUTPUT, ST_IF, ST_FOR, ST_WHILE};\n/* \u679a\u4e3e\u7c7b\u578b\u65b9\u4fbf\u7406\u89e3 */\n\nstring in;                          // \u6e90\u7a0b\u5e8f\nint cur;                            // \u5f53\u524d\u4f4d\u7f6e\nstring strToken;                    // \u7528\u4e8e\u4fdd\u5b58\u51fd\u6570get_token()\u7684\u7ed3\u679c\uff08\u6807\u8bc6\u7b26\uff09\nlong numToken;                      // \u7528\u4e8e\u4fdd\u5b58\u51fd\u6570get_token()\u7684\u7ed3\u679c\uff08\u5e38\u6570\uff09 \nst_type curStType;                  // \u5f53\u524d\u5904\u7406\u7684\u8bed\u53e5\u7c7b\u578b\n\nvector< pair <string, int> > vars;  // \u4fdd\u5b58\u6240\u6709\u53d8\u91cf\u7684\u503c\n                                    // \u6570\u7ec4\u53d8\u91cf\u88ab\u770b\u6210\u4e3a\u591a\u4e2a\u53d8\u91cf\n```\n\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f `enum`\uff0c`enum` \u662f\u679a\u4e3e\u7c7b\u578b\uff0c\u6bd4\u5982 `TK_WRONG` \u4e3a 0\uff0c\u60f3\u66f4\u6df1\u5165\u4e86\u89e3\u7684\u540c\u5b66\u8bf7\u770b[link](https://baike.baidu.com/item/%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B/2978296?fr=aladdin)\u3002\n\n\u6211\u4eec\u628a `in` \u4f5c\u4e3a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u7684Token\u627e\u51fa\u6765\u540e\u5b58\u5230 `strToken` \u548c `numToken` \u91cc\uff0c\u5982\u679c\u4e3a\u5b9a\u4e49\u53d8\u91cf\u7684\u8bdd\uff0c\u628a\u53d8\u91cf\u5b58\u5230 `vars` \u91cc\u3002\n\n\u8f93\u5165\uff1a\n\n```cpp\n// \u8bfb\u5165\u7a0b\u5e8f\n    char c;\n    while ((c = getchar()) != EOF) //\u79bb\u7ebf\u8bfb\u5165\u76f4\u5230EOF\n    {\n        in.push_back(c);\n    }\n\n    cur = 0;\n    statements(); //\u8fdb\u884c\u8bed\u53e5\u5217\u8868\u7684\u8bc6\u522b\n```\n\n\u8bfb\u5165\u9700\u8981\u7528 `getchar()`\uff0c\u65b9\u4fbf\u5224\u65adEOF\uff0c\u5728win\u7cfb\u7edf\u4e2d\u6253\u51faEOF\u53ef\u4ee5\u7528  \u3001`Ctrl+Z`\uff0cLinux\u4e0b\u9700\u8981\u7528 `Ctrl+D`\u3002\n\n\u6267\u884c\u6307\u4ee4\uff1a\n\n```cpp\n/* \u8bfb\u5165\u5e76\u6267\u884c\u8bed\u53e5\u5e8f\u5217 */\nint statements()\n{\n    tk_type t = get_token();\n\n    while(t != TK_END && t != TK_RT_BRACE) \n    {\n        if (t == TK_LF_BRACE) // \u590d\u5408\u8bed\u53e5\n        {                  \n            if ((t = get_token()) != TK_ID)\n            {\n                cout << \"Parse error!\\n\";\n                return 0;\n            }\n\n            if (strToken == \"vars\")            // \u53d8\u91cf\u58f0\u660e\u8bed\u53e5 {vars x:type y:type ...}\n            {\n                curStType = ST_DECL;\n                var_declarations();\n            }\n            else if (strToken == \"ihu\")            // if\u8bed\u53e5 {ihu cond statements}\n            {\n                curStType = ST_IF;\n                if_statement();\n            }\n            else if (strToken == \"hor\")            // for\u8bed\u53e5 {hor i, lb, ub statements}\n            {\n                curStType = ST_FOR;\n                for_statement();\n            }\n            else if (strToken == \"while\")          // while\u8bed\u53e5 {while cond statements}\n            {\n                curStType = ST_WHILE;\n                while_statement();\n            }\n            else \n            {                                   // otherwise\n                cout << \"Parse error!\\n\";\n                return 0;\n            }\n        }\n        else if (t == TK_COLON) // \u7b80\u5355\u8bed\u53e5\n        {                     \n            assert((t = get_token()) == TK_ID);\n\n            if (strToken == \"set\") // :set varname, varvalue\n            { \n                curStType = ST_ASSIGN;\n                // varname\n                t = get_token();\n                int idx = find_by_name(strToken);\n                if (idx == -1) \n                {\n                    cout << \"Variable not found!\\n\"; \n                    return 0;\n                }\n                // comma\n                assert( (t = get_token()) == TK_COMMA);\n                // expression\n                int value = expression();\n                vars[idx].second = value; \n            }\n            else if (strToken == \"yosoro\" ) // :yosoro statement\n            {\n                curStType = ST_OUTPUT;\n                int value = expression(); \n                cout << value << \" \"; \n            }\n            else \n            {\n                cout << \"Parse error!\\n\";\n                return 0;\n            } \n        }\n        else if (t == TK_NL);        // \u7a7a\u8bed\u53e5           \n        else if (t == TK_COMMENT) // \u6ce8\u91ca\n        {     \n            while ( (t = get_token()) != TK_NL) {}\n        }\n        else \n        {\n            cout << \"Parse error!\\n\" ;\n            return 0;\n        }\n\n        t = get_token();\n    }\n\n    return 0;\n}\n```\n\n`statements` \u5c31\u50cf\u662f\u4e00\u4e2a\u4e2d\u592e\u5904\u7406\u5668\uff0c\u8bfb\u5165\u5e76\u8bc6\u522b\u6307\u4ee4\u540e\u53bb\u5bfb\u627e\u76f8\u5e94\u7684\u51fd\u6570\u3002\n\n\u6211\u4eec\u628a\u6307\u4ee4\u5206\u4e3a\u7b80\u5355\u6307\u4ee4\u548c\u590d\u5408\u6307\u4ee4\uff0c\u590d\u5408\u6307\u4ee4\uff08\u5982 `vars`\uff09\u9700\u8981\u53bb\u76f8\u5e94\u7684\u51fd\u6570\uff0c\u7b80\u5355\u6307\u4ee4\uff08\u5982 `yosoro`\uff09\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u3002\uff08\u8be6\u60c5\u89c1\u4ee3\u7801\uff09\n\n```cpp\ntk_type get_token()\n{\n    char c;\n    tk_type type;\n\n    // \u521d\u59cb\u5316\n    strToken.clear();\n    numToken = 0;\n\n    // \u53bb\u6389\u5de6\u8fb9\u7684\u7a7a\u683c\n    while (cur < in.length()) \n    {\n        if(in.at(cur) == ' ') ++cur;\n        else break;\n    }\n\n    // EOF\n    if (cur == in.length()) \n    {\n        type = TK_END;                      // end of file\n        return type;\n    } \n\n    c = in.at(cur);\n    if (is_numeric(c)) \n    {                    // \u5e38\u6570TOKEN\n        type = TK_NUM;\n        numToken = (int) (c - '0'); \n        c = in.at(++cur);\n        while (is_numeric(c)) \n        {\n            numToken *= 10; \n            numToken += (int) (c-'0'); \n            c = in.at(++cur);\n        } \n\n        if (is_letter(c)) // 111a \u662f\u975e\u6cd5\u6807\u8bc6\u7b26\n        {                 \n            type = TK_WRONG;\n            cout << \"Parse error!\\n\";\n            exit(0);\n        }\n    }\n    else if (is_letter(c)) // \u6807\u8bc6\u7b26TOKEN\n    {                \n        type = TK_ID;\n        strToken.push_back(c);\n        c = in.at(++cur);\n        while (is_letter(c)) {\n            strToken.push_back(c);\n            c = in.at(++cur);\n        }\n        if (is_numeric(c)) // \u6807\u8bc6\u7b26\u53ea\u5305\u542b\u82f1\u6587\u5b57\u7b26\n        {                \n            type = TK_WRONG;\n            cout << \"Parse error!\\n\";\n            exit(0);\n        }\n\n        /* \u6570\u7ec4\u8bfb */\n        if(curStType != ST_DECL && c == '[')\n        {\n            string ref = strToken;\n            ref.push_back('['), ++cur;\n            ref.append(m_to_string(expression()) );     \n            // \u6ce8\u610f\uff1aexpression() \u51fd\u6570\u4e2d\u4f1a\u66f4\u65b0 cur, strToken \u7b49\u5168\u5c40\u53d8\u91cf\n            ref.push_back(']'); \n            strToken = ref;\n        } \n    }\n    else // \u7279\u6b8aTOKEN\n    {                                  \n        switch (c)\n        {\n        case ',':                           // \u9017\u53f7\n            type = TK_COMMA;\n            break;\n        case '.':                           // \u8303\u56f4\u7b26\u53f7\n            if ((c = in.at(++cur)) != '.') {\n                type = TK_WRONG;\n                cout << \"Parse error!\\n\";\n                exit(0);\n            }\n            type = TK_RANGE;\n            break;\n        case ':':                           // \u5192\u53f7\n            type = TK_COLON;\n            break;\n        case '#':\n            type = TK_COMMENT;\n            break;\n        case '{':\n            type = TK_LF_BRACE;\n            break;\n        case '}':\n            type = TK_RT_BRACE;\n            break; \n        case '[':\n            type = TK_LF_BRACKET;\n            break;\n        case ']':\n            type = TK_RT_BRACKET;\n            break; \n        case '+':\n            type = TK_OP_PLUS;\n            break;\n        case '-':\n            type = TK_OP_MINUS;\n            break;\n        case '\\n':\n            type = TK_NL;\n            break;\n        default:\n            break;\n        }\n\n        ++cur;                                  // \u6307\u9488\u5f80\u524d\u632a\u52a8\u4e00\u683c\u4f4d\u7f6e\n    }\n\n    return type;\n}\n```\n\n`get_token` \u51fd\u6570\u4f1a\u8bc6\u522b\u6bcf\u4e00\u4e2atoken\uff0c\u5e76\u4e14\u505a\u51fa\u8fd4\u56de\uff0ctoken\u6709\uff1a\n\n`vars`\uff0c`ihu`\uff0c`hor`\uff0c`while`\uff0c`\u5e38\u91cf`\uff0c`\u53d8\u91cf\u540d\uff08\u5b57\u7b26\u4e32\uff09`\uff0c`\u7b26\u53f7\uff08\u5982+\u53f7\uff09`\uff0c`\u6362\u884c\u7b26\uff08\\n\uff09`\uff0c`EOF`\uff0c`ERROR`\u3002\n\n\u5728\u8bfb\u53d6token\u65f6\uff0c\u9700\u8981\u628a\u524d\u9762\u7684\u7a7a\u683c\u53bb\u6389\uff0c\u5982 `[space]:` \u9700\u8981\u53d8\u6210 `:`\u7b49\u3002\n\n\u53bb\u6389\u7a7a\u683c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u628atoken\u5206\u62104\u4e2a\u90e8\u5206\uff1a\n\n\u5e38\u6570\u3001\u5b57\u7b26\u3001\u7b26\u53f7\u3001ERROR\u3002\n\n\u5e38\u6570token\u9700\u8981\u628a\u8be5\u5e38\u6570\u8fdb\u884c\u6570\u4f4d\u62c6\u5206\u540e\u538b\u5165\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u540c\u7406\u3002\n\n\u7279\u522b\u7684\uff0c\u5982\u679c\u8bfb\u5b8c\u5b57\u7b26token\u540e\u51fa\u73b0\u4e86`[`\uff0c\u4e14\u8be5token\u4e0d\u4e3a `vars`\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u51fa\u73b0\u4e86 `a[i]` \u8fd9\u6837\u7684\u6570\u7ec4\u8bfb\uff0c\u9700\u8981\u8fdb\u884c\u7279\u6b8a\u7684\u538b\u5165\u5904\u7406\u3002\uff08\u8be6\u60c5\u89c1\u4ee3\u7801\uff09\n\n\u5982\u679c\u4e3a\u7b26\u53f7\uff0c\u5229\u7528 `switch` \u7ed9\u7b26\u53f7token\u5206\u7c7b\u3002\n\n\u5982\u679c\u975e\u4ee5\u4e0a\u4e09\u79cd\u60c5\u51b5\uff0c\u5c31\u62a5\u9519\u3002\uff08\u5373\u4f7f\u8f93\u5165\u4fdd\u8bc1\u6b63\u786e\uff0c\u4f46\u662f\u4ecd\u9700\u8981\u8fdb\u884cCE\u5904\u7406\uff09\n\n\u8fd8\u6709\uff0c\u5982\u679c\u5728\u6570\u5b57token\u4e2d\u8bfb\u5165\u5230\u4e86\u5b57\u7b26\uff0c\u6216\u5728\u5b57\u7b26token\u4e2d\u8bfb\u5230\u4e86\u6570\u5b57\uff0c\u5219\u5168\u90e8\u62a5\u9519\u3002\n\n```cpp\nint var_declarations()\n{\n    tk_type t;\n    string varname, array_varname; \n    pair<long, long> range;                          // array range\n    long i;                          \n\n    while ((t = get_token()) != TK_RT_BRACE) \n    {\n        if (t == TK_NL) continue; \n\n        assert(t == TK_ID);                         // var name\n        varname = strToken;\n\n        assert( (t = get_token()) == TK_COLON);      // :\n\n        assert( (t = get_token()) == TK_ID);         // var type\n        if (strToken == \"array\") \n        {\n            assert((t = get_token()) == TK_LF_BRACKET);\n\n            assert((t = get_token()) == TK_ID);\n            if (strToken != \"int\") \n            {\n                cout << \"Parse error!\\n\";\n                return 0;\n            }\n\n            assert((t = get_token()) == TK_COMMA);\n\n            range = get_array_range();\n            for (i=range.first; i<=range.second; i++)\n            {\n                array_varname = varname;\n                array_varname += \"[\" + m_to_string(i) + \"]\";\n                vars.push_back(make_pair(array_varname, 0));\n            }\n\n            assert( (t = get_token()) == TK_RT_BRACKET);\n        }\n        else if (strToken == \"int\") \n        {\n            vars.push_back(make_pair(varname, 0));\n        }\n        else \n        {\n            cout << \"Only integer type supported!\\n\";\n            return 0; \n        }\n\n    }\n\n    return 0; \n} \n```\n\n\u5b9a\u4e49\u53d8\u91cf\u65f6\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u8fc7\u6ee4\u7a7a\u884c\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684CE\u3002\n\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u5229\u7528 `assert` \u51fd\u6570\u8fdb\u884c\u5224\u65ad\uff08`assert(x)`\uff0c\u5982\u679c`x`\u4e3a\u5047\uff0c\u629b\u51fa\u9519\u8bef\u3002\u60f3\u62d3\u5c55\u77e5\u8bc6\u9762\u7684\u540c\u5b66\u70b9\u51fb[lilnk](https://baike.baidu.com/item/assert/10931289?fr=aladdin)\uff09\uff0c\u867d\u7136\u6570\u636e\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u9519\uff0c\u4f46\u662f\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\u3002\n\n\u5982\u679c\u5b9a\u4e49\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u5f97\u5230\u4e0a\u4e0b\u754c\uff0c\u53ef\u4ee5\u5199\u4e00\u4e2a `get_array_range()` \u51fd\u6570\uff0c\u7531\u4e8e\u6bd4\u8f83\u7b80\u5355\uff0c\u6545\u4e0d\u653e\u51fa\u6765\u4e86\u3002\n\n\u5982\u679c\u5b9a\u4e49\u7684\u662f\u666e\u901a\u53d8\u91cf\uff0c\u76f4\u63a5\u538b\u5165\u5411\u91cf `vars` \u5373\u53ef\u3002\n\n\u5982\u679c\u4ee5\u4e0a\u5747\u4e0d\u662f\uff0c\u5219\u62a5\u9519\u3002\n\n```cpp\nvoid if_statement()\n{    \n    tk_type t;\n    bool cond;\n    \n    // \u8bfb\u5165\u6761\u4ef6\u8868\u8fbe\u5f0f\u5e76\u8d4b\u503c\n    cond = condition();\n\n    // \u6839\u636e\u6761\u4ef6\u8d4b\u503c\u9009\u62e9\u662f\u5426\u6267\u884c\u540e\u9762\u7684\u8bed\u53e5\n    if (cond) \n    {\n        statements(); \n    }\n    else \n    {\n        skip_statements();\n    }\n}\n```\n\nihu\u8bed\u53e5\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u5f97\u5230\u8868\u8fbe\u5f0f\u7684\u503c\uff08\u51fd\u6570\u7b80\u5355\uff0c\u4e0d\u653e\u51fa\u6765\u4e86\uff09\uff0c\u518d\u53bb\u6267\u884c\uff0c\u5982\u679c\u4e3a\u5047\uff0c\u76f4\u63a5 `skip` \u5230\u4e0b\u4e00\u4e2a\u6307\u4ee4\u3002\n\n```cpp\nint for_statement()\n{\n    tk_type t;\n    string iter_name;                   // \u5faa\u73af\u53d8\u91cf\u540d\n    int iter;                           // \u5faa\u73af\u53d8\u91cf\u5728vars\u7684\u5b58\u50a8\u4f4d\u7f6e\n    int lb, ub;\n    int loop_head;\n\n    // \u8bfb\u5165\u5faa\u73af\u53d8\u91cf\u540d\n    assert((t = get_token()) == TK_ID);\n    iter_name = strToken;\n    assert(( t = get_token() ) == TK_COMMA);\n    iter = find_by_name(iter_name);\n    if (iter == -1) \n    {\n        cout << \"Variable not found!\\n\"; \n        return 0;\n    }\n\n    // \u8bfb\u5165\u5faa\u73af\u53d8\u91cf\u521d\u59cb\u503c\uff0c\u4ee5\u9017\u53f7\u7ed3\u675f\n    lb = expression();\n\n    // \u8bfb\u5165\u5faa\u73af\u53d8\u91cf\u7ed3\u675f\u503c\uff0c\u4ee5\u6362\u884c\u7ed3\u675f\n    ub = expression();\n\n    // \u8bb0\u5f55\u5faa\u73af\u5934\u4f4d\u7f6e\n    loop_head = cur;\n\n    for (int i=lb; i<=ub; i++) \n    {\n        vars[iter].second = i; \n        cur = loop_head;\n        statements();\n    }\n\n    return 0;\n}\n```\n\nhor\u8bed\u53e5\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u4ece\u53d8\u91cf\u5411\u91cf\u91cc\u627e\u5230\u5faa\u73af\u53d8\u91cf\uff0c\u6a21\u62dffor\u5373\u53ef\u3002\n\n\u4f46\u662f\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u4e0b\u5faa\u73af\u5934\uff0c\u65b9\u4fbf\u540e\u9762\u6301\u7eed\u7684\u8df3\u8f6c\u5faa\u73af\u3002\n\n```cpp\nvoid while_statement()\n{\n    tk_type t;\n    bool cond;\n    int loop_head; \n    \n    // \u8bb0\u5f55\u5faa\u73af\u5934\u4f4d\u7f6e\n    loop_head = cur;\n\n    // \u6839\u636e\u6761\u4ef6\u8d4b\u503c\u9009\u62e9\u662f\u5426\u6267\u884c\u540e\u9762\u7684\u8bed\u53e5\n    while (condition()) \n    {\n        statements(); \n        cur = loop_head;\n    }\n\n    // \u8df3\u8f6c\u5230\u5faa\u73af\u7ed3\u675f\u7684\u4f4d\u7f6e\n    skip_statements();\n\n    return;\n}\n```\n\nwhile\u548chor\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u5faa\u73af\u5934\u7684\u4f4d\u7f6e\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u540c\u65f6\u9700\u8981\u5224\u65ad\u8868\u8fbe\u5f0f\u662f\u5426\u6210\u7acb\u3002\n\n\u5b8c\u6574\u7a0b\u5e8f\u6bd4\u8f83\u957f\uff08515\u884c\uff09\uff0c\u6545\u4e0d\u653e\u51fa\u6765\u4e86\uff0c\u9700\u8981\u7684\u540c\u5b66\u6765[link](https://www.luogu.com.cn/paste/b4honglk)\uff0c\u540c\u65f6\u5e0c\u671b\u5927\u5bb6\u6709\u81ea\u5df1\u7684\u601d\u8003\u3002\n\n\u9898\u5916\u8bdd\uff1a\u5927\u6a21\u62df\u5176\u5b9e\u5e76\u4e0d\u96be\uff0c\u53ea\u9700\u8981\u8ba4\u771f\u5206\u6790\uff0c\u5927\u4e8b\u5316\u5c0f\uff0c\u5c0f\u4e8b\u5316\u4e86\uff01",
        "postTime": 1601963347,
        "uid": 334586,
        "name": "159\u53f7\u7a0b\u5e8f\u5458",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3695 \u3010CYaRon!\u8bed\u3011"
    },
    {
        "content": "\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6a21\u62df\uff0c\u8003\u8651\u8fd9\u6837\u4e00\u4e9b\u60c5\u51b5\n\n1\u3001:\u5f00\u5934\u7684\u8bed\u53e5\uff0c\u5355\u6b65\u6267\u884c\n\n2\u3001{}\u5757\n\n3\u3001vars\u5e94\u8be5\u548c\u4e0a\u9762\u90a3\u4e2a\u60c5\u51b5\u5206\u5f00\n\n\n\u5b9a\u4e49exp()\u8868\u793a\u8868\u8fbe\u5f0f\u7684\u503c\uff0cgti()\u8868\u793a\u53d8\u91cf\u5730\u5740\uff0cgtn()\u662f\u6570\u5b57\n\ngts()\u662f\u53d6\u5b57\u7b26\u4e32\uff0cgtf()\u662f\u626b\u63cf\u5b57\u7b26\uff0cpd()\u8bfb\u53d6\u5e03\u5c14\u5f0f\uff0crun()\u8fd0\u884c(\u518d\u6765\u4e2amain())\n\n\u5199\u4e00\u4e2ax,y\u4ee3\u8868\u4f4d\u7f6e\uff0c\u8bb0\u5f97gtf()\u91cc\u5904\u7406\u6362\u884c\n\n\n\u7ed3\u6784\uff1a\n\nexp:\n\n\n\n\n\n\n```cpp\n  gtn()\n  |v[gti()]\n  |exp() +/- exp()\ngti()\n  map[gts()]\n  |map[gts()] '[' exp() ']'\ngtn()\n  gtf()-'0'\n  |gtn()*10+gtf()-'0'\ngts()\n  gtf()\n  |gts()+gtf()\npd()\n  gts() ',' exp()  ','  exp()\nrun()\n  ':' gts() ...\n  | '{' gts() ... '}'\nmain()\n  while(...)run()\n```\n#----------------------------\n\n\n```cpp\n    #include <iostream>\n    #include <algorithm>\n    #include <stdio.h>\n    #include <string.h>\n    #include <string>\n    #include <map>\n    using namespace std;\n    map<string,int>num;\n    map<string,map<int,int> >arr;\n    char pro[503][10003],q[10003];\n    int n,x,y,v[500003],vt=0;\n    void run();\n    inline string gts();\n    inline char gtf();\n    inline int gtn();\n    int gti();\n    int exp();\n    bool pd();\n    void run() {\n        y=1;\n        char c=gtf();\n        int q,q1,q2,x1,y1,x2;\n        string s,s1;\n        if(c==':') {\n            y++;\n            s=gts();\n            if(s==\"set\") {\n                x1=x+1;\n                q=gti();\n                gtf();\n                y++;\n                v[q]=exp();\n                x=x1;\n                y=1;\n            } else if(s==\"yosoro\") {\n                x1=x+1;\n                printf(\"%d \",exp());\n                x=x1;\n                y=1;\n            }\n        } else if(c=='{') {\n            y++;\n            x2=x+1;\n            s=gts();\n            if(s==\"ihu\") {\n                if(pd()) {\n                    x=x2;\n                    y=1;\n                    while(gtf()!='}')run();\n                    x++;\n                    y=1;\n                } else {\n                    x=x2;y=1;\n                    for(x1=0; x1>=0;) {\n                        c=gtf();\n                        if(c=='{')x1++;\n                        if(c=='}')x1--;\n                        x++;\n                        y=1;\n                    }\n                }\n            } else if(s==\"hor\") {\n                q=gti();\n                gtf();\n                y++;\n                q1=exp();\n                gtf();\n                y++;\n                q2=exp();\n                x=x2;\n                y=1;\n                for(v[q]=q1; v[q]<=q2; v[q]++) {\n                    while(gtf()!='}')run();\n                    x=x2;\n                    y=1;\n                }\n                for(x1=0; x1>=0;) {\n                    c=gtf();\n                    if(c=='{')x1++;\n                    if(c=='}')x1--;\n                    if(c==0)continue;\n                    x++;\n                    y=1;\n                }\n            } else if(s==\"while\") {\n                x1=x;\n                y1=y;\n                while(pd()) {\n                    x=x2;\n                    y=1;\n                    while(gtf()!='}')run();\n                    x=x1;\n                    y=y1;\n                }\n                x=x2;\n                y=1;\n                for(x1=0; x1>=0;) {\n                    c=gtf();\n                    if(c=='{')x1++;\n                    if(c=='}')x1--;\n                    if(c==0)continue;\n                    x++;\n                    y=1;\n                }\n            } else if(s==\"vars\") {\n                x=x2;\n                y=1;\n                while(gtf()!='}') {\n                    x1=x+1;\n                    s=gts();\n                    gtf();\n                    y++;\n                    s1=gts();\n                    if(s1==\"int\") {\n                        num[s]=++vt;\n                    } else {\n                        gtf();\n                        y++;\n                        gts();\n                        gtf();\n                        y++;\n                        q1=gtn();\n                        gtf();\n                        y++;\n                        gtf();\n                        y++;\n                        q2=gtn();\n                        arr[s];\n                        map<string,map<int,int> >::iterator qq=arr.find(s);\n                        for(int i=q1; i<=q2; i++)(qq->second)[i]=++vt;\n                    }\n                    x=x1;\n                    y=1;\n                }\n                x++;\n                y=1;\n            }\n        }\n    }\n    inline char gtf() {\n        while(1) {\n            if(!pro[x][y]) {\n                if(y>0){x++;\n                y=0;\n                return 0;}\n                y++;\n            } else if(pro[x][y]==' ')y++;\n            else break;\n        }\n        return pro[x][y];\n    }\n    inline string gts() {\n        char c=gtf();\n        int i;\n        for(i=0; c>='a'&&c<='z'; i++,c=pro[x][++y])q[i]=c;\n        q[i]=0;\n        return string(q);\n    }\n    inline int gtn() {\n        int a=0;\n        while(!isdigit(gtf()))y++;\n        while(isdigit(gtf())) {\n            a=a*10+gtf()-'0';\n            y++;\n        }\n        return a;\n    }\n    int gti() {\n        string s=gts();\n        int q;\n        if(gtf()=='[') {\n            y++;\n            q=exp();\n            gtf();\n            y++;\n            return arr[s][q];\n        } else return num[s];\n    }\n    int exp() {\n        int ans=0,q;char c=gtf(),d;\n        if(isdigit(c))ans=gtn();\n        else if(c>='a'&&c<='z')ans=v[gti()];\n        c=gtf();\n        while(c=='+'||c=='-'){\n            y++;d=gtf();\n            if(isdigit(d))q=gtn();\n            else if(d>='a'&&d<='z')q=v[gti()];\n            if(c=='+')ans+=q;else ans-=q;\n            c=gtf();\n        }\n        return ans;\n    }\n    bool pd() {\n        string s=gts();gtf();y++;\n        int q1=exp();gtf();y++;int q2=exp();\n        if(s==\"lt\")return q1<q2;\n        if(s==\"gt\")return q1>q2;\n        if(s==\"le\")return q1<=q2;\n        if(s==\"ge\")return q1>=q2;\n        if(s==\"eq\")return q1==q2;\n        if(s==\"neq\")return q1!=q2;\n    }\n    int main() {\n        while(gets(pro[++n]+1)!=NULL);\n        n--;\n        x=1;\n        y=1;\n        for(; x<=n;)run();\n        return 0;\n    }\n```\n\u5173\u4e8e\u53d8\u91cf\u5b58\u50a8\u7684\u95ee\u9898\uff0c\u53ea\u8981map\u57fa\u672c\u591f\u7528\u4e86\uff0c\u6211\u4ee5\u524d\u5c31\u641e\u8fc7\u8bed\u8a00\uff0c\u6bd4\u8fd9\u4e2a\u5f88\u9017\u7684\u8bed\u6cd5\u590d\u6742\u591a\u4e86\uff0c\u4f46\u662f\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u6211\u8fd8\u662f\u8c03\u4e86\u4e24\u5929\uff08PS:\u5f53\u521d\u90a3\u4e2a\u8bed\u8a00debug\u4e86\u4e00\u4e2a\u591a\u6708\uff0c\u4e0d\u5305\u62ec\u524d\u671f\u7801\u4ee3\u7801\u671f\u95f4\u7684Tests\u3002\uff09\n\u6240\u4ee5\u4e0d\u8981\u770b\u9898\u9762\u5c31\u77e5\u96be\u800c\u9000(\uffe3\u25bd\uffe3)~\\*\n",
        "postTime": 1515216521,
        "uid": 13925,
        "name": "yyhhenry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3695 \u3010CYaRon!\u8bed\u3011"
    },
    {
        "content": "[BLOG\u4e2d\u67e5\u770b](https://xciyang.github.io/2020-01/11-luogu3695/)\u4f53\u9a8c\u66f4\u4f73\u3002\n\n### \u524d\u8a00\n\n\u7ed9\u51fa\u89e3\u91ca\u5668\u7684\u76f8\u5173\u5185\u5bb9\uff0c[\u56fd\u5916\u6587\u732e](https://ruslanspivak.com/lsbasi-part1/)\u53ca[\u56fd\u5185\u7ffb\u8bd1](https://my.oschina.net/shawnplaying/blog/661998)\uff0c\u6587\u732e\u6240\u7528\u8bed\u8a00\u662fPython\uff0c\u5e76\u4e14\u56fd\u5185\u53ea\u6709\u8ba1\u7b97\u5668\u7684\u90e8\u5206\uff08\u52a0\u51cf\u4e58\u9664\uff0c\u76f8\u53cd\u6570\uff09\u3002\n\n\u6240\u4ee5\u6211\u5199\u4ee3\u7801\u7684\u65f6\u5019\u66f4\u52a0\u6ce8\u91cd\u5de5\u7a0b\u98ce\u683c\uff0c\u5728\u4fdd\u8bc1\u65e0BUG\u524d\u63d0\u4e0b\u5c3d\u91cf\u4e25\u683c\uff0c\u5e76\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u5176\u4ed6\u5e93\uff08STL\uff09\u3002\n\n*\u5982\u679c\u5728\u4ee3\u7801\u4e2d\u8c03\u7528\u4e86\u6211\u6ca1\u6709\u8bb2\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u8bf7\u770b\u6700\u540e\u7684\u5b8c\u6574\u4ee3\u7801\uff0c\u56e0\u4e3a\u51fd\u6570\u5b9e\u5728\u592a\u591a\u4e86\u3002\u7c7b\u4e2d\u5fc5\u8981\u7684public\u51fd\u6570\u57fa\u672c\u90fd\u5df2\u7701\u7565\u3002\u4ee3\u7801\u4e2d`...`\u8868\u793a\u7701\u7565*\n\n### \u89e3\u91ca\u5668\u6982\u8ff0\n\n\u5efa\u8bae\u5148\u7f16\u5199\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u4e0d\u8fc7\u8fd9\u9053\u9898\u9700\u8981\u5904\u7406\u7684\u4e2d\u7f00\u8868\u8fbe\u5f0f\u4e2d\u53ea\u6709\u52a0\u51cf\u8fd0\u7b97\uff0c\u6240\u4ee5\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u5199\u4e00\u4e0b\u7684\u89e3\u91ca\u5668\u901a\u7528\u7684\u903b\u8f91\u3002\n\n#### TOKEN\n\n\u7ffb\u8bd1\u4e3a\u4ee4\u724c\u3001\u6807\u8bb0\uff0c\u6211\u7406\u89e3\u4e3a\u5355\u8bcd\uff0c\u5305\u62ec\u5355\u5173\u952e\u5b57\u3001\u53d8\u91cf\u540d\u3001\u7b26\u53f7\u7b49\u3002\n\n\u4e3b\u8981\u662f\u5c06\u4e00\u6bb5\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u8ba1\u7b97\u673a\u53ef\u4ee5\u7406\u89e3\u7684\u4e1c\u897f\uff0c\u901a\u5e38\u662f\u6570\u5b57\u3002\u6bcf\u4e2aTOKEN\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u5b58\u50a8\u539f\u6709\u7684\u5185\u5bb9\u3002TOKEN\u901a\u5e38\u662f\u89e3\u91ca\u5668\u7684\u6700\u5c0f\u5355\u5143\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u7528define\u3001const\u3001enum\u4e4b\u4e00\uff0c\u6211\u4f7f\u7528\u4e86enum\u3002\u8fd9\u4e9b\u90fd\u662f\u7a0b\u5e8f\u5458\u81ea\u5df1\u5b9a\u4e49\u7684\u3002\u4f8b\u5982\u6b64\u9898\uff08\u90e8\u5206\uff09\uff1a\n```cpp\nenum TOKEN_TYPE {\n\tINTEGER = 1,    // \u6574\u5f62\uff08\u6570\u5b57\uff09\n\tOPERATOR_PLUS,  // \u64cd\u4f5c\u7b26 '+'\n\t...,\n\tT_COLON,        // \u7b26\u53f7 ':'\n\tT_COMMA         // \u7b26\u53f7 ','\n};\n// TOKEN \u7c7b\u578b\n```\n\u5b58\u50a8\u65f6\u5373\u4f7f\u7528\u7c7b\u6216\u8005\u7ed3\u6784\u4f53\uff0c\u4ee3\u7801\uff08\u90e8\u5206\uff09\uff1a\n```cpp\nclass TOKEN {\n\tprivate:\n\tTOKEN_TYPE _typ;    // TOKEN\u7c7b\u578b\n\tconst char *_val;   // \u539f\u6709\u7684\u503c\n\tunsigned int _len;  // \u503c\u957f\u5ea6\n    // \u6ce8\uff1a\u4f7f\u7528 const char* \u662f\u4e3a\u4e86\u65b9\u4fbf\n    ...\n};\n```\n\n#### LEXER\n\n\u7ffb\u8bd1\u4e3a\u8bcd\u6cd5\u5206\u6790\u5668\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u8f93\u5165\u4e00\u5806\u5b57\u7b26\uff08\u672c\u9898\u662f\u6574\u4e2a\u7a0b\u5e8f\uff09\uff0c\u7ecf\u8fc7LEXER\u7684\u5904\u7406\uff0c\u8f93\u51fa\u4e00\u7cfb\u5217\u7684TOKEN\uff08\u6309\u987a\u5e8f\uff09\u3002\n\n\u5bf9\u4e8e\u5927\u90e8\u5206OIER\u6765\u8bf4\uff0c\u90fd\u5199\u8fc7\u66b4\u529b\u6a21\u62df\u7684\u8868\u8fbe\u5f0f\u6c42\u503c\u3002\u4e24\u8005\u60f3\u4f3c\uff0c\u4f46\u662fLEXER\u5206\u6790\u4e00\u6bb5\u5b57\u7b26\u4e32\u540e\u8f93\u51faTOKEN\u5e76\u4e0d\u76f4\u63a5\u8ba9LEXER\u6765\u5904\u7406\u3002\u6240\u4ee5\u5b83\u8fd8\u6709\u4e2a\u522b\u540d\u4e3ascanner\u3002\n\n\u5b58\u50a8\u65f6\u4f9d\u7136\u662f\u4f7f\u7528\u7c7b\u6216\u8005\u7ed3\u6784\u4f53\uff0c\u4ee3\u7801\uff08\u90e8\u5206\uff09\uff1a\n\n```cpp\nclass LEXER {\n\tprivate:\n\tconst char *_text;  // \u4e00\u5806\u5b57\u7b26\uff08\u672c\u9898\u662f\u6574\u4e2a\u7a0b\u5e8f\uff09\n\tunsigned int _len;  // \u5b57\u7b26\u957f\u5ea6\n\tunsigned int _pos;  // \u5904\u7406\u5230\u7b2c_pos\u4e2a\u5b57\u7b26\uff08\u4ece 0 \u5f00\u59cb\uff09\n\tchar _ch;           // \u5f53\u524d\u5b57\u7b26\u4e3a_ch\n    ...\n}\n```\n\n\u7136\u540e\u8981\u5728\u7c7b\u4e2d\u5199\u51e0\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u662f\u626b\u63cf\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3001\u8df3\u8fc7\u95f4\u9694\u7b26\u3001\u8df3\u8fc7\u6570\u5b57\u7b49\u3002\u626b\u63cf\u4e0b\u4e00\u4e2a\u5b57\u7b26\u65f6\u8981\u5224\u65ad\u662f\u5426\u5df2\u5230\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u4ee3\u7801\uff1a\n\n```cpp\nvoid nextChar() {\n    this->_ch = (this->_pos >= this->_len ? 0 : this->_text[++this->_pos]);\n    return;\n}\nunsigned int skipNumber() {\n    unsigned int res = 0;\n    while(this->_ch != 0 && isNumber(this->_ch)) ++res, nextChar();\n    // isNumber(x) \u8868\u793a x \u662f\u5426\u4e3a\u6570\u5b57\n    return res;\n}\n```\n\nLEXER\u6700\u91cd\u8981\u7684\u4f5c\u7528\u8fd8\u662f\u83b7\u53d6TOKEN\uff0c\u5bf9\u4e8e\u672c\u9898\u7684\u4ee3\u7801\uff08\u90e8\u5206\uff09\uff1a\n\n```cpp\nTOKEN getNextToken() {\n    while(this->_ch != 0) {\n        if(isSpacer(this->_ch)) {\n        // isSpacer(x) \u8868\u793a x \u662f\u5426\u4e3a\u95f4\u9694\u7b26\n            skipSpace();\n        // skipSpace() \u8df3\u8fc7\u95f4\u9694\u7b26\n            continue;\n        }\n        if(isNumber(this->_ch)) {\n        // isNumber(x) \u8868\u793a x \u662f\u5426\u4e3a\u6570\u5b57\n            const char *pos = getPosString();\n            return TOKEN(INTEGER, pos, skipNumber());\n        }\n        if(this->_ch == '+') {\n            nextChar();\n            return TOKEN(OPERATOR_PLUS);\n        }\n        ...\n        if(this->_ch == ',') {\n            nextChar();\n            return TOKEN(T_COMMA);\n        }\n        if(this->_ch == ':') {\n            nextChar();\n            return TOKEN(T_COLON);\n        }\n        return TOKEN(T_NULL);\n        // \u65e0\u6cd5\u5904\u7406\n    }\n    return TOKEN(T_EOF);\n    // \u7ed3\u5c3e\n}\n```\n\n#### NODE\n\nNODE\u662f\u6211\u8d77\u7684\u540d\u5b57\uff0c\u56e0\u4e3a\u5b83\u4ee3\u8868\u8bed\u6cd5\u6811\u7684\u4e00\u4e2a\u8282\u70b9\u3002\u83b7\u5f97\u7a0b\u5e8f\u6839\u8282\u70b9\u7684\u8fd4\u56de\u503c\u610f\u5473\u7740\u8fd0\u884c\u6574\u4e2a\u7a0b\u5e8f\u3002\n\n\u6bcf\u4e2aNODE\u5b58\u50a8\u4e00\u4e2aTOKEN\uff0cTOKEN\u7684\u7c7b\u578b\u8868\u793aNODE\u7684\u4efb\u52a1\u7c7b\u578b\uff0cTOKEN\u7684\u503c\u8868\u793aNODE\u53ef\u7528\u7684\u53c2\u6570\u3002NODE\u8fd8\u6709\u5b83\u7684\u5b50\u8282\u70b9\uff0c\u6bcf\u4e2aNODE\u8fd0\u4f5c\u65f6\u90fd\u4f1a\u7528\u6307\u5b9a\u65b9\u5f0f\u4f7f\u5b83\u7684\u5b50\u8282\u70b9\u8fd0\u4f5c\u3002\n\n\u5b83\u7684\u7c7b\u5728\u6b64\u9898\u5982\u4e0b\uff1a\n```cpp\nclass NODE {\n\tprivate:\n\tTOKEN _token;               // \u5fc5\u9700\u7684\n\tNODE **_list;               // \u5b50\u8282\u70b9\u6307\u9488\u6570\u7ec4\n\tbool _multi;\n\tunsigned int _siz, _msiz;\n\tbool _flag;\n}\n```\n\n_multi\u3001_msiz\u3001_flag\u662f\u6211\u7684\u5b9e\u73b0\uff0c\u53ef\u80fd\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u3002\u81f3\u4e8e\u5b83\u4eec\u7684\u4f5c\u7528\u4f1a\u5728\u4e0b\u9762\u518d\u8bb2\u3002\n\nNODE\u7684\u4e24\u4e2a\u6838\u5fc3\u65b9\u6cd5\u4e3agetValue\u548csetValue\uff0c\u4f46\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\uff0c\u524d\u7f6e\u66f4\u590d\u6742\u4e00\u4e9b\u3002\n\n#### PARSER\n\n\u7ffb\u8bd1\u4e3a\u8bed\u6cd5\u5206\u6790\u5668\u3002\u8f93\u5165TOKEN\uff0c\u751f\u6210\u8bed\u6cd5\u6811\uff0c\u8f93\u51fa\u6839\u8282\u70b9\u3002\u56e0\u4e3a\u6b64\u9898\u4e0d\u6d89\u53ca\u8fd0\u7b97\u7b26\u5148\u540e\u987a\u5e8f\uff0c\u6240\u4ee5\u53ea\u9700\u5b9e\u73b0\u5224\u65ad\u3002\u5faa\u73af\u7b49\u8bed\u6cd5\u5373\u53ef\u3002\n\nPARSER\u7c7b\u7684\u4ee3\u7801\uff08\u90e8\u5206\uff09\uff1a\n```cpp\nclass PARSER {\n\tprivate:\n\tLEXER _lexer;   // \u7ed1\u5b9a\u7684LEXER\n\tTOKEN _tok;     // \u5f53\u524d\u5904\u7406\u7684TOKEN\n    ...\n};\n```\n\u540c\u6837\u5728\u7c7b\u4e2d\u6709\u83b7\u5f97\u4e0b\u4e00\u4e2aTOKEN\u7684\u51fd\u6570\uff0c\u4ee3\u7801\uff1a\n```cpp\nvoid nextToken(TOKEN_TYPE typ) {\n    if(this->_tok.getType() == typ) this->_tok = this->_lexer.getNextToken();\n    return;\n}\n```\n\u6709\u65b9\u6cd5parser\u7528\u6765\u751f\u6210\u8bed\u6cd5\u6811\uff0c\u5185\u90e8\u7531\u591a\u4e2a\u51fd\u6570\u9012\u5f52\u5b9e\u73b0\uff0c\u56e0\u8bed\u8a00\u800c\u5f02\u3002\n\n#### CALCULATOR\n\n\u63a8\u8350\u5148\u5199\u4e00\u4e2a\u52a0\u51cf\u4e58\u9664\u76f8\u53cd\u6570\u7684\u8ba1\u7b97\u5668\u6765\u7ec3\u624b\uff0c[\u6b64\u5904](https://github.com/Xciyang/OI-Workspace/blob/ed0e1c1457e8a5263177cc5c4b0a1db971b1e02e/calc.cpp)\u4e3a\u6211\u7684\u4ee3\u7801\u3002\n\n### \u672c\u9898\u5206\u6790\n\n\u8ba1\u7b97\u5668\u548c\u672c\u9898\u5dee\u522b\u8fd8\u662f\u5f88\u5927\u7684\uff0c\u5bf9\u6bd4\u53d1\u73b0\uff0c\u672c\u9898\u591a\u4e86\u53d8\u91cf\u3001\u5224\u65ad\u3001\u5faa\u73af\u3001\u6570\u7ec4\u3001\u8f93\u51fa\u3001\u6bd4\u8f83\uff0c\u5c11\u4e86\u4e58\u9664\u3002\u518d\u8fdb\u4e00\u6b65\u53d1\u73b0\uff0c\u5c11\u4e86\u8fd0\u7b97\u4f18\u5148\u7ea7\u7684\u95ee\u9898\u3002\n\n#### TOKEN\n\n\u6211\u5b9a\u4e49\u672c\u9898\u670930\u4e2aTOKEN\uff0c\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u591a\u4e86\uff0c\u6240\u4ee5\u8bf7\u5bf9\u7167\u5b8c\u6574\u4ee3\u7801\u3002\u7136\u540e\u53ea\u8bb2\u4e00\u4e9b\u672c\u9898\u7684\u6838\u5fc3\u8bed\u6cd5\u548c\u903b\u8f91\u3002\n\n\u5982\u679c\u4e0d\u77e5\u9053\u67d0\u4e2aTOKEN_TYPE\u7684\u542b\u4e49\uff0c\u90a3\u4e48\u8bf7\u770b\u5728\u4ee3\u7801\u91cc\u7684LEXER\u4e2dTOKEN\u662f\u5982\u4f55\u4ea7\u751f\u7684\u3002\n\n#### VARIABLE\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5148\u8bb2\u8fd9\u4e2a\uff0c\u56e0\u4e3a\u7a0b\u5e8f\u4e00\u4e0a\u6765\u5c31\u8981\u5b9a\u4e49\u53d8\u91cf\u3002\u6211\u662f\u9488\u5bf9\u672c\u9898\u53ea\u6709int\u6765\u89e3\u51b3\u7684\uff0c\u89e3\u91ca\u5668\u6587\u732e\u7684\u8fd9\u90e8\u5206\u5728C++\u4e2d\u51fa\u5165\u8f83\u5927\u3002\n\n\u672c\u7740\u4e0d\u7528STL\u7684\u539f\u5219\uff0c\u56e0\u6b64\u65e0\u6cd5\u4f7f\u7528map\u3002\u6211\u5e76\u4e0d\u60f3\u4e5f\u4e0d\u4f1a\u5199\u7ea2\u9ed1\u6811\uff0c\u800c\u672c\u9898\u53ea\u670910\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u5c31\u94fe\u8868\u67e5\u8be2\u53d8\u91cf\u4e86\u3002\u4ee3\u7801\uff08\u90e8\u5206\uff09\uff1a\n\n```cpp\nclass VAR {\n\tprivate:\n\tconst char *_name;  // \u53d8\u91cf\u540d\n\tunsigned int _len;  // \u53d8\u91cf\u540d\u957f\u5ea6\n\tVAR *_nxt;          // \u94fe\u8868\u4e0b\u4e00\u4e2a\n\tint *_mem;          // \u5185\u5b58\n\tint _s, _t;         // \u6570\u7ec4\u4e0b\u6807\u8d77\u59cb\u548c\u7ec8\u6b62\uff0c\u975e\u6570\u7ec4\u4e2d\u5206\u522b\u4e3a0\u30011\n    ...\n};\n```\n\n\u7136\u540e\u5b9a\u4e49\u4e00\u4e2a\u94fe\u8868\u9996\u8282\u70b9var_first\uff0c\u5199\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u4e3agetVar\u3001setVar\uff0c\u524d\u7f6e\u662f\u6839\u636e\u540d\u79f0\u83b7\u5f97VAR\u6307\u9488\uff0c\u540e\u8005\u5b9e\u9645\u4e0a\u662f\u6ce8\u518c\u4e00\u4e2aVAR\u3002\n\n#### BLOCK\n\nBLOCK\u662f\u4e00\u4e2aTOKEN\u7c7b\u578b\uff0c\u76ee\u7684\u8868\u793a\u4ee3\u7801\u5757\u3002\u4e00\u4e2a`{}`\u6240\u5305\u542b\u7684\u5185\u5bb9\u5373\u662f\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u7279\u522b\u7684\uff0c\u6574\u4e2a\u7a0b\u5e8f\u4e5f\u662f\u4e00\u4e2a\u4ee3\u7801\u5757\u3002\n\n\u6839\u636e\u8bed\u8a00\u7684\u7279\u6027\uff0c\u4ee3\u7801\u5757\u7684\u7b2c\u4e00\u884c\u901a\u5e38\u4e3a\u63a7\u5236\u8bed\u53e5\uff0c\u6bd4\u5982\u5224\u65ad\u3001\u5faa\u73af\u3001vars\u7b49\u3002\u5982\u679c\u6ca1\u6709\u63a7\u5236\u8bed\u53e5\uff0c\u8bbe\u7f6eBLOCK\u4e3a\u9ed8\u8ba4\u63a7\u5236\u8bed\u53e5\uff0c\u4ee3\u8868\u53ea\u8fd0\u884c\u4e00\u6b21\uff0cvars\u4e5f\u662f\u5982\u6b64\u3002\n\n\u6211\u4eec\u5c06\u6839\u636e\u7b2c0\u4e2a\u5b50\u8282\u70b9\u7684\u8fd4\u56de\u503c\u662f\u5426\u4e3atrue\u5faa\u73af\u8fd0\u884cBLOCK\u4e2d\u7684\u5185\u5bb9\u3002\n\n#### NODE\n\n\u6240\u4ee5\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u5982\u4f55\u5b58\u50a8\u5b50\u8282\u70b9\u5217\u8868\u3002\u6211\u4eec\u5e76\u4e0d\u60f3\u4f7f\u7528vector\uff0c\u53ea\u597d\u81ea\u5df1\u5b9e\u73b0\u3002\n\n\u6839\u636evector\u7684\u601d\u60f3\uff0c\u53ea\u9700\u8981\u5728\u5217\u8868\u5df2\u6ee1\u65f6\u5c06\u7a7a\u95f4\u6269\u5927\u4e00\u500d\uff08\u53d8\u4e3a\u4e24\u500d\uff09\uff0c\u6548\u7387\u6bd4\u8f83\u9ad8\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c\u7279\u5316\u51fa\u81ea\u8fd0\u7b97\u3001\u4e00\u5143\u8fd0\u7b97\u548c\u4e8c\u5143\u8fd0\u7b97\uff0c\u4ee5~~\u63d0\u9ad8\u4ee3\u7801\u590d\u6742\u5ea6~~\u4fbf\u4e8e\u7f16\u5199\u3002\n\n\u6309\u7167\u89c4\u5219\uff0cBLOCK\u8868\u793a\u4ee3\u7801\u5757\u65f6\u662f\u591a\u5143\u8fd0\u7b97\u3002\u5982\u679cBLOCK\u8868\u793a\u63a7\u5236\u8bed\u53e5\u65f6\u662f\u81ea\u8fd0\u7b97\u3002\n\n\u56e0\u6b64\u5728\u4ee3\u7801\u4e2d\u7528_multi\u8868\u793a\u662f\u5426\u4e3a\u591a\u5143\u8fd0\u7b97\uff0c_siz\u8bb0\u5f55\u5b50\u8282\u70b9\u6570\uff0c_msiz\u8bb0\u5f55\u5206\u914d\u5185\u5b58\u5927\u5c0f\u3002\n\n#### VARIABLE_DEFINE\n\n\u9996\u5148\u77e5\u9053\u683c\u5f0f\u4e3a`name:type/array[type, s..t]`\uff0c\u5373`\u540d\u79f0:\u7c7b\u578b/\u6570\u7ec4[\u7c7b\u578b, \u8d77\u59cb\u4e0b\u6807..\u7ec8\u6b62\u4e0b\u6807]`\u3002\n\n\u90a3\u4e48\u7ec4\u6210\u5b83\u7684TOKEN\u5305\u62ecVARIABLE_NAME\u3001VARIABLE_TYPE\u3001BRACKET_LEFT\u3001BRACKET_RIGHT\u3001INTEGER\u3001T_DOT\u3002\n\n\u8bed\u6cd5\u6811\u6784\u5efa\u65f6\uff0c\u6211\u628aT_COLON\u8bbe\u4e3a\u591a\u5143\u8fd0\u7b97\u7b26\uff0cVARIABLE_NAME\u8bbe\u4e3a\u7b2c0\u5b50\u8282\u70b9\uff0c\u7701\u53bb\u4e86VARIABLE_TYPE\uff0c\u5982\u679c\u4e3a\u6570\u7ec4\u518d\u65b0\u5efa\u4e24\u4e2aINTEGER\u8282\u70b9\u5f53\u505aT_COLON\u7684\u5b50\u8282\u70b9\u3002\n\n\u6b64\u4e3aparserVar\u51fd\u6570\u3002\n\n\u8fd0\u4f5c\u65f6\u5224\u65ad\u5b50\u8282\u70b9\u6570\uff0cVAR\u4e2d\u7684_s\u4e3a\u7b2c1\u4e2a\u5b50\u8282\u70b9\u7684\u503c\uff0c_t\u4e3a\u7b2c2\u4e2a\u5b50\u8282\u70b9\u7684\u503c\uff0c\u65e0\u5b50\u8282\u70b9\u89c6\u4e3a0\u30011\u3002\n\n#### EXPRESSION\n\n\u8868\u8fbe\u5f0f\u5df2\u7ecf\u662f\u8001\u751f\u5e38\u8c08\u7684\u95ee\u9898\u4e86\uff0c\u6240\u4ee5\u4e0d\u518d\u7ec6\u8bf4\u3002\n\n\u9047\u5230\u8868\u8fbe\u5f0f\u8c03\u7528parserSecond\uff0c\u5185\u90e8\u8c03\u7528parserThird\uff0c\u5206\u6790\u51fa\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u52a0\u51cf\u8fd0\u7b97\u7b26\uff0c\u9047\u5230\u62ec\u53f7\uff08\u7136\u800c\u6b64\u9898\u6ca1\u6709\uff0c\u624d\u53d1\u73b0\uff09\u5c31\u9012\u5f52\u8c03\u7528parserSecond\u3002\n\n#### VARIABLE\n\n\u8bfb\u53d6\u53d8\u91cf\u7684\u503c\u65f6\u5148\u8bfb\u5165VARIABLE_NAME\uff0c\u518d\u5224\u65ad\u662f\u5426\u6709BRACKET_LEFT\uff08\u5de6\u4e2d\u62ec\u53f7\uff09\uff0c\u4e4b\u540e\u518d\u8c03\u7528parserSecond\u8bfb\u53d6\u5185\u90e8\u8868\u8fbe\u5f0f\uff0c\u518d\u8bfb\u5165BRACKET_RIGHT\uff0c\u7136\u800c\u672c\u9898\u5185\u90e8\u8868\u8fbe\u5f0f\u5e76\u4e0d\u4f1a\u5f88\u590d\u6742\u3002\n\n\u6240\u4ee5\u6b64\u5904\u6211\u628aVARIABLE_NAME\u8bbe\u4e3a\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u4ec5\u6709\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\u4e3a\u4e0b\u6807\uff08\u4e0d\u662f\u6570\u7ec4\u5219\u4e3a0\uff09\u3002\n\n#### YOSORO | ASSIGN(SET)\n\n\u5148\u5206\u6790\u8f93\u51fa\u548c\u8d4b\u503c\u8bed\u53e5\uff0c\u56e0\u4e3a\u5b83\u4eec\u903b\u8f91\u6700\u7b80\u5355\u4e14\u4f5c\u7528\u76f8\u53cd\uff08\u4f3c\u4e4e\u5e76\u4e0d\u76f8\u53cd\uff09\u3002\n\n\u5f53PARSER\u9047\u5230\u7c7b\u578b\u4e3aT_COLON\u7684TOKEN\u65f6\uff0c\u90a3\u4e48\u5c31\u89c6\u4e3a\u8981\u6267\u884c\u51fd\u6570\u4e86\uff0c\u8fdb\u5165parserCall\u51fd\u6570\u3002\n\nYOSORO\u4e3a\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u4ec5\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u4e3a\u8868\u8fbe\u5f0f\u3002ASSIGN\u4e3a\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0c\u5de6\u513f\u5b50\u4e3a\u53d8\u91cf\u540d\uff0c\u53f3\u513f\u5b50\u4e3a\u8868\u8fbe\u5f0f\u3002\n\n#### IF(IHU) | WHILE\n\n\u4e4b\u6240\u4ee5\u5b83\u4eec\u653e\u5728\u4e00\u5757\uff0c\u662f\u56e0\u4e3a\u8bed\u6cd5\u76f8\u540c\u3002\u5f53\u9047\u5230\u5bf9\u5e94\u7684TOKEN\u65f6\uff0c\u4f9d\u6b21\u8bfb\u53d6\u6bd4\u8f83\u64cd\u4f5c\u7b26\u3001\u9017\u53f7\u3001\u8868\u8fbe\u5f0f\u3001\u9017\u53f7\u3001\u8868\u8fbe\u5f0f\uff0c\u51fd\u6570\u4e3aparserIhu\u548cparserWhile\u3002\n\nIF\u548cWHILE\u4e3a\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u4ec5\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u4e3a\u6bd4\u8f83\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u3002\u4f17\u6240\u5468\u77e5\u6bd4\u8f83\u64cd\u4f5c\u7b26\u662f\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0c\u8fd9\u4e2a\u975e\u5e38\u7b80\u5355\u3002\n\n\u4e3a\u4e86\u5224\u65ad\u4e00\u4e2a\u8282\u70b9\u662f\u5426\u7b2c\u4e00\u6b21\u8fd0\u4f5c\uff0c\u6240\u4ee5\u5728NODE\u4e2d\u52a0\u5165\u4e86\u53d8\u91cf_flag\u3002\n\nIF\u548cWHILE\u7684\u5dee\u522b\u5728\u4e8eIF\u540e\u9700\u8981\u5c06_flag\u8bbe\u4e3atrue\u3002\n\n#### BLOCK 1\n\n\u5728BLOCK\u8fd0\u4f5c\u7ed3\u675f\u540e\u8fd8\u9700\u8981\u91cd\u7f6e\u5b50\u8282\u70b9\u7684\u72b6\u6001\u4fe1\u606f\uff08\u5982_flag\uff09\uff0c\u4ee5\u8ba9\u4e0b\u6b21\u8fdb\u5165BLOCK\u8282\u70b9\u65f6\u6240\u6709\u7684\u5b50\u8282\u70b9\u662f\u65b0\u7684\u3002\n\n#### FOR(HOR)\n\nFOR\u5e94\u8be5\u662f\u6bd4\u8f83\u9ebb\u70e6\u7684\u4e00\u4e2a\uff0c\u6211\u5c06\u5b83\u8bbe\u4e3a\u591a\u5143\u8fd0\u7b97\u7b26\u3002\n\n\u51fd\u6570\u4e3aparserHor\uff0c\u4f9d\u6b21\u8bfb\u53d6\u8868\u8fbe\u5f0f\u3001\u9017\u53f7\u3001\u8868\u8fbe\u5f0f\u3001\u9017\u53f7\u3001\u8868\u8fbe\u5f0f\u3002\u4e09\u4e2a\u8868\u8fbe\u5f0f\u4f9d\u6b21\u4e3a\u5b83\u7684\u4e09\u4e2a\u5b50\u8282\u70b9\u3002\n\n\u8fd0\u4f5c\u65f6\u5148\u5224\u65ad_flag\uff0c\u7b2c\u4e00\u6b21\u9700\u8981\u7ed9\u7b2c0\u4e2a\u5b50\u8282\u70b9\u8d4b\u503c\u4e3a\u7b2c1\u4e2a\u5b50\u8282\u70b9\u7684\u503c\u3002\u7136\u540e\u518d\u901a\u8fc7\u5224\u65ad\u7b2c0\u4e2a\u5b50\u8282\u70b9\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u7b2c2\u4e2a\u5b50\u8282\u70b9\u3002\n\n\u8fd8\u9700\u8981\u8ba9FOR\u8282\u70b9\u4e5f\u8981\u6709\u4e00\u4e2a\u8d4b\u503c\u7684\u65b9\u6cd5\uff0c\u4e3a\u4e86\u5728\u5faa\u73af\u7ed3\u675f\u65f6\u7ed9\u7b2c0\u4e2a\u5b50\u8282\u70b9\u52a01\u3002\n\n#### BLOCK 2\n\n\u6240\u4ee5BLOCK\u7ed3\u675f\u65f6\u8fd8\u8981\u8c03\u7528\u63a7\u5236\u8bed\u53e5\uff08\u7b2c0\u4e2a\u5b50\u8282\u70b9\uff09\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u5f53\u7136\u503c\u5c31\u4e0d\u5fc5\u8bbe\u7f6e\u4e86\u3002\n\n#### GLOBAL FUNCTION\n\n\u8fd0\u884c\u7a0b\u5e8f\u4f7f\u7528calc\uff0c\u53c2\u6570\u4e3a\u6574\u4e2a\u7a0b\u5e8f\u548c\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\n\n```cpp\nint calc(const char *exp, unsigned int len) {\n\tchar *_exp = new char[len]();\n\tfor(unsigned int i = 0; i < len; i++) _exp[i] = exp[i];\n    // \u6539\u4e3a\u7528\u6237\u4e0d\u53ef\u53d8\u5185\u5b58\uff0c\u5b89\u5168\u8d77\u89c1\n\tint res = PARSER(LEXER(_exp, len)).parser()->getValue();\n\tdelete[] _exp;\n\treturn res;\n}\n```\n\n\u5e76\u672a\u4f7f\u7528strcmp\uff0c\u624b\u5199\u4e86equalString\u7528\u6765\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\u3002\n\n\u5269\u4e0b\u7684\u65b9\u6cd5\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u81ea\u884c\u7406\u89e3\u5373\u53ef\u3002\n\n### \u56fe\u4f8b\n\n\u5982\u679c\u8fd8\u4e0d\u61c2\u53ef\u4ee5\u770b\u56fe\u4f8b\uff0c\u7eaf\u624b\u5de5\u826f\u5fc3\u5236\u4f5c\u3002\n\n![P3695](https://xciyang.github.io/images/P3695.jpg)\n\n### \u4ee3\u7801\n\n\u65e0O2\u7528\u65f637ms\u5185\u5b58820KB\n\n```cpp\n#include <stdio.h>\nnamespace CALCULATOR {\nenum TOKEN_TYPE {\n\tINTEGER = 1,\n\tOPERATOR_PLUS,\n\tOPERATOR_MINUS,\n\tOPERATOR_LT,\n\tOPERATOR_GT,\n\tOPERATOR_LE,\n\tOPERATOR_GE,\n\tOPERATOR_EQ,\n\tOPERATOR_NEQ,\n\tPAR_LEFT,\n\tPAR_RIGHT,\n\tBRACKET_LEFT,\n\tBRACKET_RIGHT,\n\tBLOCK_LEFT,\n\tBLOCK_RIGHT,\n\tPROGRAM,\n\tBLOCK,\n\tVARIABLE_NAME,\n\tVARIABLE_TYPE,\n\tVARS,\n\tYOSORO,\n\tOPERATOR_ASSIGN,\n\tIHU,\n\tHOR,\n\tWHILE,\n\tT_DOT,\n\tT_EOF,\n\tT_NULL,\n\tT_COLON,\n\tT_COMMA\n};\n\nbool equalString(const char *a, const char *b, unsigned int len) {\n\tfor(unsigned int i = 0; i < len; i++)\n\t\tif(a[i] != b[i]) return 0;\n\treturn 1;\n}\nclass VAR {\n\tprivate:\n\tconst char *_name;\n\tunsigned int _len;\n\tVAR *_nxt;\n\tint *_mem;\n\tint _s, _t;\n\n\tpublic:\n\tVAR() : _name(), _len(), _nxt(), _mem(), _t(), _s() {}\n\tVAR(const char *name, unsigned int len) : _name(name), _len(len), _nxt(), _mem(), _t(), _s() {}\n\tVAR(const char *name, unsigned int len, int s, int t) : _name(name), _len(len), _nxt(), _mem(), _t(t), _s(s) {\n\t\tthis->_mem = new int[this->_t - this->_s]();\n\t}\n\tunsigned int getLen() const {\n\t\treturn this->_len;\n\t}\n\tvoid setValue(int x, int v) {\n\t\tthis->_mem[x - this->_s] = v;\n\t\treturn;\n\t}\n\tconst char *getName() const {\n\t\treturn this->_name;\n\t}\n\tVAR *getNext() const {\n\t\treturn this->_nxt;\n\t}\n\tvoid setNext(VAR *v) {\n\t\tthis->_nxt = v;\n\t}\n\tint getValue(int x) {\n\t\treturn this->_mem[x - this->_s];\n\t}\n} var_first;\nVAR *getVar(const char *name, unsigned int len) {\n\tVAR *p = &var_first;\n\twhile(p) {\n\t\tif(p->getLen() == len && equalString(p->getName(), name, len)) return p;\n\t\tp = p->getNext();\n\t}\n\treturn 0;\n}\nvoid setVar(VAR *nxt) {\n\tVAR *p = &var_first;\n\twhile(p->getNext()) p = p->getNext();\n\tp->setNext(nxt);\n\treturn;\n}\nclass TOKEN {\n\tprivate:\n\tTOKEN_TYPE _typ;\n\tconst char *_val;\n\tunsigned int _len;\n\n\tpublic:\n\tTOKEN(TOKEN_TYPE typ = T_NULL) : _typ(typ), _val(), _len() {}\n\tTOKEN(TOKEN_TYPE type, const char *val, unsigned int len) : _val(val), _typ(type), _len(len) {}\n\tTOKEN_TYPE getType() const {\n\t\treturn this->_typ;\n\t}\n\tconst char *getValue() const {\n\t\treturn this->_val;\n\t}\n\tunsigned int getLength() const {\n\t\treturn this->_len;\n\t}\n\t~TOKEN() {}\n};\nint toInteger(const char *val, unsigned int len) {\n\tint res = 0;\n\tfor(unsigned int i = 0; i < len; i++) res = res * 10 + val[i] - '0';\n\treturn res;\n}\n\nunsigned int toString(int val, char *res) {\n\tunsigned int len = 0;\n\tint val2 = val;\n\twhile(val2) ++len, val2 /= 10;\n\tunsigned int len2 = len;\n\twhile(val) res[--len2] = '0' + val % 10, val /= 10;\n\tif(len == 0) res[len = 1] = '0';\n\treturn len;\n}\n\nbool isNumber(char ch) {\n\treturn ch >= '0' && ch <= '9';\n}\n\nbool isLetter(char ch) {\n\treturn (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');\n}\n\nbool isSpacer(char ch) {\n\treturn ch == ' ' || ch == '\\n' || ch == '\\t';\n}\n\nclass LEXER {\n\tprivate:\n\tconst char *_text;\n\tunsigned int _len;\n\tunsigned int _pos;\n\tchar _ch;\n\tvoid nextChar() {\n\t\tthis->_ch = (this->_pos >= this->_len ? 0 : this->_text[++this->_pos]);\n\t\treturn;\n\t}\n\tvoid skipSpace() {\n\t\twhile(this->_ch != 0 && isSpacer(this->_ch)) nextChar();\n\t\treturn;\n\t}\n\tunsigned int skipNumber() {\n\t\tunsigned int res = 0;\n\t\twhile(this->_ch != 0 && isNumber(this->_ch)) ++res, nextChar();\n\t\treturn res;\n\t}\n\tunsigned int skipWord() {\n\t\tunsigned int res = 0;\n\t\twhile(this->_ch != 0 && isLetter(this->_ch)) ++res, nextChar();\n\t\treturn res;\n\t}\n\tconst char *getPosString() const {\n\t\treturn _text + _pos;\n\t}\n\n\tpublic:\n\tLEXER(const char *text, unsigned int len) : _text(text), _len(len), _pos() {\n\t\tthis->_ch = (this->_pos >= this->_len ? 0 : this->_text[this->_pos]);\n\t}\n\t~LEXER() {}\n\tTOKEN getNextToken() {\n\t\twhile(this->_ch != 0) {\n\t\t\tif(isSpacer(this->_ch)) {\n\t\t\t\tskipSpace();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(isNumber(this->_ch)) {\n\t\t\t\tconst char *pos = getPosString();\n\t\t\t\treturn TOKEN(INTEGER, pos, skipNumber());\n\t\t\t}\n\t\t\tif(isLetter(this->_ch)) {\n\t\t\t\tconst char *pos = getPosString();\n\t\t\t\tunsigned int len = skipWord();\n\t\t\t\tif(len == 2 && equalString(\"lt\", pos, len)) return TOKEN(OPERATOR_LT);\n\t\t\t\tif(len == 2 && equalString(\"gt\", pos, len)) return TOKEN(OPERATOR_GT);\n\t\t\t\tif(len == 2 && equalString(\"le\", pos, len)) return TOKEN(OPERATOR_LE);\n\t\t\t\tif(len == 2 && equalString(\"ge\", pos, len)) return TOKEN(OPERATOR_GE);\n\t\t\t\tif(len == 2 && equalString(\"eq\", pos, len)) return TOKEN(OPERATOR_EQ);\n\t\t\t\tif(len == 3 && equalString(\"neq\", pos, len)) return TOKEN(OPERATOR_NEQ);\n\t\t\t\tif(len == 3 && equalString(\"set\", pos, len)) return TOKEN(OPERATOR_ASSIGN);\n\t\t\t\tif(len == 3 && equalString(\"ihu\", pos, len)) return TOKEN(IHU);\n\t\t\t\tif(len == 3 && equalString(\"hor\", pos, len)) return TOKEN(HOR);\n\t\t\t\tif(len == 3 && equalString(\"int\", pos, len)) return TOKEN(VARIABLE_TYPE, pos, len);\n\t\t\t\tif(len == 4 && equalString(\"vars\", pos, len)) return TOKEN(VARS);\n\t\t\t\tif(len == 5 && equalString(\"while\", pos, len)) return TOKEN(WHILE);\n\t\t\t\tif(len == 5 && equalString(\"array\", pos, len)) return TOKEN(VARIABLE_TYPE, pos, len);\n\t\t\t\tif(len == 6 && equalString(\"yosoro\", pos, len)) return TOKEN(YOSORO);\n\t\t\t\treturn TOKEN(VARIABLE_NAME, pos, len);\n\t\t\t}\n\t\t\tif(this->_ch == '+') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(OPERATOR_PLUS);\n\t\t\t}\n\t\t\tif(this->_ch == '-') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(OPERATOR_MINUS);\n\t\t\t}\n\t\t\tif(this->_ch == '(') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(PAR_LEFT);\n\t\t\t}\n\t\t\tif(this->_ch == ')') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(PAR_RIGHT);\n\t\t\t}\n\t\t\tif(this->_ch == '.') {\n\t\t\t\tnextChar();\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(T_DOT);\n\t\t\t}\n\t\t\tif(this->_ch == ',') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(T_COMMA);\n\t\t\t}\n\t\t\tif(this->_ch == ':') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(T_COLON);\n\t\t\t}\n\t\t\tif(this->_ch == '[') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(BRACKET_LEFT);\n\t\t\t}\n\t\t\tif(this->_ch == ']') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(BRACKET_RIGHT);\n\t\t\t}\n\t\t\tif(this->_ch == '{') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(BLOCK_LEFT);\n\t\t\t}\n\t\t\tif(this->_ch == '}') {\n\t\t\t\tnextChar();\n\t\t\t\treturn TOKEN(BLOCK_RIGHT);\n\t\t\t}\n\t\t\treturn TOKEN(T_NULL);\n\t\t}\n\t\treturn TOKEN(T_EOF);\n\t}\n};\n\nclass NODE {\n\tprivate:\n\tTOKEN _token;\n\tNODE **_list;\n\tbool _multi;\n\tunsigned int _siz, _msiz;\n\tbool _flag;\n\tint getConstantValue() {\n\t\tif(this->_token.getType() == INTEGER) return toInteger(this->_token.getValue(), this->_token.getLength());\n\t\tif(this->_token.getType() == VARS && this->_flag == 0) return this->_flag = 1;\n\t\tif(this->_token.getType() == BLOCK && this->_flag == 0) return this->_flag = 1;\n\t\treturn 0;\n\t}\n\tint getUnaryValue() {\n\t\tif(this->_token.getType() == OPERATOR_PLUS) return +this->_list[0]->getValue();\n\t\tif(this->_token.getType() == OPERATOR_MINUS) return -this->_list[0]->getValue();\n\t\tif(this->_token.getType() == YOSORO) return printf(\"%d \", this->_list[0]->getValue()), 0;\n\t\tif(this->_token.getType() == VARIABLE_NAME) return getVar(this->_token.getValue(), this->_token.getLength())->getValue(this->_list[0]->getValue());\n\t\tif(this->_token.getType() == IHU && this->_flag == 0) return this->_flag = 1, this->_list[0]->getValue();\n\t\tif(this->_token.getType() == WHILE) return this->_list[0]->getValue();\n\t\treturn 0;\n\t}\n\tint getBinValue() {\n\t\tif(this->_token.getType() == OPERATOR_PLUS) return this->_list[0]->getValue() + this->_list[1]->getValue();\n\t\tif(this->_token.getType() == OPERATOR_MINUS) return this->_list[0]->getValue() - this->_list[1]->getValue();\n\t\tif(this->_token.getType() == OPERATOR_LT) return this->_list[0]->getValue() < this->_list[1]->getValue();\n\t\tif(this->_token.getType() == OPERATOR_GT) return this->_list[0]->getValue() > this->_list[1]->getValue();\n\t\tif(this->_token.getType() == OPERATOR_LE) return this->_list[0]->getValue() <= this->_list[1]->getValue();\n\t\tif(this->_token.getType() == OPERATOR_GE) return this->_list[0]->getValue() >= this->_list[1]->getValue();\n\t\tif(this->_token.getType() == OPERATOR_EQ) return this->_list[0]->getValue() == this->_list[1]->getValue();\n\t\tif(this->_token.getType() == OPERATOR_NEQ) return this->_list[0]->getValue() != this->_list[1]->getValue();\n\t\tif(this->_token.getType() == OPERATOR_ASSIGN) return this->_list[0]->setValue(this->_list[1]->getValue());\n\t\treturn 0;\n\t}\n\tint getMultiValue() {\n\t\tif(this->_token.getType() == T_COLON) {\n\t\t\tif(this->_siz == 1) {\n\t\t\t\tthis->_list[0]->registerVar(0, 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis->_list[0]->registerVar(this->_list[1]->getValue(), this->_list[2]->getValue());\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t\tif(this->_token.getType() == BLOCK) {\n\t\t\twhile(this->_list[0]->getValue()) {\n\t\t\t\tfor(unsigned int i = 1; i < this->_siz; i++) {\n\t\t\t\t\tthis->_list[i]->getValue();\n\t\t\t\t}\n\t\t\t\tthis->_list[0]->setValue(0);\n\t\t\t}\n\t\t\tthis->clearST();\n\t\t}\n\t\tif(this->_token.getType() == HOR) {\n\t\t\tif(this->_flag == 0) {\n\t\t\t\tthis->_list[0]->setValue(this->_list[1]->getValue());\n\t\t\t\tthis->_flag = 1;\n\t\t\t}\n\t\t\treturn this->_list[0]->getValue() <= this->_list[2]->getValue();\n\t\t}\n\t\treturn 0;\n\t}\n\tint registerVar(int s, int t) {\n\t\tVAR *p = new VAR(this->_token.getValue(), this->_token.getLength(), s, t);\n\t\tsetVar(p);\n\t\treturn 0;\n\t}\n\tint setValue(int v) {\n\t\tif(this->_token.getType() == VARIABLE_NAME) {\n\t\t\tVAR *p = getVar(this->_token.getValue(), this->_token.getLength());\n\t\t\tp->setValue(this->_list[0]->getValue(), v);\n\t\t}\n\t\tif(this->_token.getType() == HOR) {\n\t\t\tthis->_list[0]->setValue(this->_list[0]->getValue() + 1);\n\t\t}\n\t\treturn 0;\n\t}\n\tvoid clearST() {\n\t\tif(this->_siz == -1) return;\n\t\tfor(unsigned int i = 0; i < this->_siz; i++) this->_list[i]->_flag = 0, this->_list[i]->clearST();\n\t}\n\n\tpublic:\n\tNODE(bool multi = 0) : _token(T_NULL), _list(), _siz(-1), _multi(multi), _msiz(), _flag() {\n\t\tif(this->_multi) this->_siz = 0;\n\t}\n\tNODE(TOKEN token) : _token(token), _list(), _siz(), _multi(), _msiz(), _flag() {}\n\tNODE(TOKEN token, NODE *expr0) : _token(token), _siz(1), _multi(), _msiz(1), _flag() {\n\t\tthis->_list = new NODE *[this->_siz]();\n\t\tthis->_list[0] = expr0;\n\t}\n\tNODE(TOKEN token, NODE *expr0, NODE *expr1) : _token(token), _siz(2), _multi(), _msiz(2), _flag() {\n\t\tthis->_list = new NODE *[this->_siz]();\n\t\tthis->_list[0] = expr0;\n\t\tthis->_list[1] = expr1;\n\t}\n\t~NODE() {\n\t\tif(this->_list)\n\t\t\tfor(unsigned int i = 0; i < this->_siz; i++) delete this->_list[i];\n\t}\n\tint getValue() {\n\t\tif(this->_multi) return getMultiValue();\n\t\tswitch(_siz) {\n\t\t\tcase 0: return getConstantValue();\n\t\t\tcase 1: return getUnaryValue();\n\t\t\tcase 2: return getBinValue();\n\t\t\tdefault: break;\n\t\t}\n\t\treturn 0;\n\t}\n\tvoid setToken(const TOKEN &token) {\n\t\tthis->_token = token;\n\t\treturn;\n\t}\n\tvoid push(NODE *expr0) {\n\t\tif(this->_siz >= this->_msiz) {\n\t\t\tunsigned int lmsiz = this->_msiz;\n\t\t\tthis->_msiz = (this->_siz + 1) * 2;\n\t\t\tNODE **list = new NODE *[this->_msiz]();\n\t\t\tfor(unsigned int i = 0; i < this->_siz; i++) list[i] = this->_list[i];\n\t\t\tif(this->_list) {\n\t\t\t\tdelete[] this->_list;\n\t\t\t}\n\t\t\tthis->_list = list;\n\t\t}\n\t\tthis->_list[this->_siz++] = expr0;\n\t\treturn;\n\t}\n\tint getSize() const {\n\t\treturn this->_siz;\n\t}\n};\nclass PARSER {\n\tprivate:\n\tLEXER _lexer;\n\tTOKEN _tok;\n\tvoid nextToken(TOKEN_TYPE typ) {\n\t\tif(this->_tok.getType() == typ) this->_tok = this->_lexer.getNextToken();\n\t\treturn;\n\t}\n\tNODE *parserThird() {\n\t\tTOKEN token = this->_tok;\n\t\tif(token.getType() == INTEGER) {\n\t\t\tnextToken(INTEGER);\n\t\t\treturn new NODE(token);\n\t\t}\n\t\tif(token.getType() == PAR_LEFT) {\n\t\t\tnextToken(PAR_LEFT);\n\t\t\tNODE *res = parserSecond();\n\t\t\tnextToken(PAR_RIGHT);\n\t\t\treturn res;\n\t\t}\n\t\tif(token.getType() == VARIABLE_NAME) {\n\t\t\tnextToken(VARIABLE_NAME);\n\t\t\tNODE *res;\n\t\t\tif(this->_tok.getType() == BRACKET_LEFT) {\n\t\t\t\tnextToken(BRACKET_LEFT);\n\t\t\t\tres = parserSecond();\n\t\t\t\tnextToken(BRACKET_RIGHT);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres = new NODE();\n\t\t\t}\n\t\t\treturn new NODE(token, res);\n\t\t}\n\t\tif(token.getType() == OPERATOR_PLUS || token.getType() == OPERATOR_MINUS) {\n\t\t\tnextToken(token.getType());\n\t\t\treturn new NODE(token, parserThird());\n\t\t}\n\n\t\treturn new NODE();\n\t}\n\tNODE *parserSecond() {\n\t\tNODE *res = parserThird();\n\t\twhile(this->_tok.getType() != T_EOF) {\n\t\t\tTOKEN token = this->_tok;\n\t\t\tif(token.getType() == OPERATOR_PLUS || token.getType() == OPERATOR_MINUS) {\n\t\t\t\tnextToken(token.getType());\n\t\t\t\tres = new NODE(token, res, parserThird());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\tNODE *parserCall() {\n\t\tTOKEN token = this->_tok;\n\t\tif(token.getType() == YOSORO) {\n\t\t\tnextToken(YOSORO);\n\t\t\treturn new NODE(token, parserSecond());\n\t\t}\n\t\tif(token.getType() == OPERATOR_ASSIGN) {\n\t\t\tnextToken(OPERATOR_ASSIGN);\n\t\t\tNODE *res = parserThird();\n\t\t\tnextToken(T_COMMA);\n\t\t\treturn new NODE(token, res, parserSecond());\n\t\t}\n\t\treturn new NODE();\n\t}\n\tNODE *parserVar() {\n\t\tNODE *res = new NODE(1);\n\t\tres->push(new NODE(this->_tok));\n\t\tnextToken(VARIABLE_NAME);\n\t\tres->setToken(this->_tok);\n\t\tnextToken(T_COLON);\n\t\tif(this->_tok.getLength() == 5) {\n\t\t\tnextToken(VARIABLE_TYPE);\n\t\t\tnextToken(BRACKET_LEFT);\n\t\t\tnextToken(VARIABLE_TYPE);\n\t\t\tnextToken(T_COMMA);\n\t\t\tres->push(new NODE(this->_tok));\n\t\t\tnextToken(INTEGER);\n\t\t\tnextToken(T_DOT);\n\t\t\tnextToken(T_DOT);\n\t\t\tres->push(new NODE(this->_tok));\n\t\t\tnextToken(INTEGER);\n\t\t\tnextToken(BRACKET_RIGHT);\n\t\t}\n\t\telse {\n\t\t\tnextToken(VARIABLE_TYPE);\n\t\t}\n\t\treturn res;\n\t}\n\tNODE *parserIhu() {\n\t\tNODE *res;\n\t\tnextToken(IHU);\n\t\tTOKEN token = this->_tok;\n\t\tif(token.getType() == OPERATOR_LT || token.getType() == OPERATOR_GT || token.getType() == OPERATOR_LE || this->_tok.getType() == OPERATOR_GE || this->_tok.getType() == OPERATOR_EQ || token.getType() == OPERATOR_NEQ) {\n\t\t\tnextToken(token.getType());\n\t\t\tnextToken(T_COMMA);\n\t\t\tNODE *res1 = parserSecond();\n\t\t\tnextToken(T_COMMA);\n\t\t\tNODE *res2 = parserSecond();\n\t\t\tres = new NODE(token, res1, res2);\n\t\t}\n\t\telse {\n\t\t\tres = new NODE();\n\t\t}\n\t\treturn new NODE(TOKEN(IHU), res);\n\t}\n\tNODE *parserHor() {\n\t\tNODE *res = new NODE(1);\n\t\tres->setToken(this->_tok);\n\t\tnextToken(HOR);\n\t\tres->push(parserSecond());\n\t\tnextToken(T_COMMA);\n\t\tres->push(parserSecond());\n\t\tnextToken(T_COMMA);\n\t\tres->push(parserSecond());\n\t\treturn res;\n\t}\n\tNODE *parserWhile() {\n\t\tNODE *res;\n\t\tnextToken(WHILE);\n\t\tTOKEN token = this->_tok;\n\t\tif(token.getType() == OPERATOR_LT || token.getType() == OPERATOR_GT || token.getType() == OPERATOR_LE || this->_tok.getType() == OPERATOR_GE || this->_tok.getType() == OPERATOR_EQ || token.getType() == OPERATOR_NEQ) {\n\t\t\tnextToken(token.getType());\n\t\t\tnextToken(T_COMMA);\n\t\t\tNODE *res1 = parserSecond();\n\t\t\tnextToken(T_COMMA);\n\t\t\tNODE *res2 = parserSecond();\n\t\t\tres = new NODE(token, res1, res2);\n\t\t}\n\t\telse {\n\t\t\tres = new NODE();\n\t\t}\n\t\treturn new NODE(TOKEN(WHILE), res);\n\t}\n\tNODE *parserFirst() {\n\t\tNODE *res = new NODE(1);\n\t\tres->setToken(TOKEN(BLOCK));\n\t\twhile(this->_tok.getType() != T_EOF) {\n\t\t\tTOKEN token = this->_tok;\n\t\t\tif(token.getType() == VARS) {\n\t\t\t\tnextToken(VARS);\n\t\t\t\tres->push(new NODE(TOKEN(VARS)));\n\t\t\t}\n\t\t\telse if(token.getType() == IHU) {\n\t\t\t\tres->push(parserIhu());\n\t\t\t}\n\t\t\telse if(token.getType() == HOR) {\n\t\t\t\tres->push(parserHor());\n\t\t\t}\n\t\t\telse if(token.getType() == WHILE) {\n\t\t\t\tres->push(parserWhile());\n\t\t\t}\n\t\t\telse if(token.getType() == VARIABLE_NAME) {\n\t\t\t\tif(res->getSize() == 0) res->push(new NODE(TOKEN(BLOCK)));\n\t\t\t\tres->push(parserVar());\n\t\t\t}\n\t\t\telse if(token.getType() == T_COLON) {\n\t\t\t\tif(res->getSize() == 0) res->push(new NODE(TOKEN(BLOCK)));\n\t\t\t\tnextToken(T_COLON);\n\t\t\t\tres->push(parserCall());\n\t\t\t}\n\t\t\telse if(token.getType() == BLOCK_LEFT) {\n\t\t\t\tif(res->getSize() == 0) res->push(new NODE(TOKEN(BLOCK)));\n\t\t\t\tnextToken(BLOCK_LEFT);\n\t\t\t\tres->push(parserFirst());\n\t\t\t\tnextToken(BLOCK_RIGHT);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tpublic:\n\tPARSER(LEXER lexer) : _lexer(lexer) {\n\t\tthis->_tok = this->_lexer.getNextToken();\n\t}\n\tNODE *parser() {\n\t\treturn parserFirst();\n\t}\n\n\t~PARSER() {}\n};\n\nint calc(const char *exp, unsigned int len) {\n\tchar *_exp = new char[len]();\n\tfor(unsigned int i = 0; i < len; i++) _exp[i] = exp[i];\n\tint res = PARSER(LEXER(_exp, len)).parser()->getValue();\n\tdelete[] _exp;\n\treturn res;\n}\n\n}  // namespace CALCULATOR\n\n#include <stdio.h>\n#include <iostream>\nusing namespace std;\nstring str, str2;\n\nint main() {\n\twhile(getline(cin, str2)) {\n\t\tstr += str2;\n\t}\n\tCALCULATOR::calc(str.c_str(), str.size());\n\treturn 0;\n}\n```\n\n### \u540e\u8bb0\n\n\u9898\u89e3\u5199\u4e86\u534a\u4e2a\u4e0b\u5348\uff0c\u7ee7\u7eed\u5b66\u4e60\u53d8\u91cf\u7c7b\u578b\u53bb\u4e86\u3002\n",
        "postTime": 1578738103,
        "uid": 109815,
        "name": "Ciyang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3695 \u3010CYaRon!\u8bed\u3011"
    },
    {
        "content": "# \u6211\u504f\u4e0d\u5199\u89e3\u91ca\u5668\n\n# \u4e0b\u9762\u662fCYaRon!\u8bed\u201c\u7f16\u8bd1\u201d\u5668\n\n\u8fd9\u9898\u771f\u7684\u5f88duliu\uff0c\u8d85\u8fc7\u4e86\"\u732a\u56fd\u6740\"\n\n\u7528\u4e86\u6211\u4e00\u661f\u671f\u65f6\u95f4\uff0c\u5f53\u7136\u662f\u65ad\u65ad\u7eed\u7eed\u5b8c\u6210\u7684\n\n\u6700\u540e\u63d0\u4ea4\u5f00\u59cb\u5f9770\u5206(2RE+1WA,RE\u539f\u56e0\u89c1\u4e0b\u9762)\uff0c\u7136\u540e\u4e0b\u8f7d\u4e863\u6b21\u6570\u636e\u5c31A\u4e86 ~~\uff08\u96fe~~\n\n\u6211\u7684\u601d\u8def\u6bd4\u8f83\u7279\u6b8a\uff1a\u628a\u7a0b\u5e8f\u201c\u7f16\u8bd1\u201d\u6210\u4f2a\u6c47\u7f16\u547d\u4ee4\uff0c\u7136\u540e\u6267\u884c\n\n\u4e00\u5171\u7528\u52304\u4e2a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u7f16\u53f7\u4eceA\u5230D\n\n\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u5efa\u8bae\u5c06\u7a0b\u5e8f\u5168\u90e8\u8bfb\u5165\u518d\u5904\u7406\n\n\u6ce8\u610f\u533a\u5206\u4e0b\u9762\u5173\u4e8e\u6808\u7684\u64cd\u4f5c\u5bf9\u54ea\u4e2a\u6808\u8fdb\u884c\u5904\u7406\n\n## \u7b2c\u4e00\u6b65\uff1a\u201c\u6c47\u7f16\u201d\u547d\u4ee4\u8868\n\n\u6bcf\u6761\u547d\u4ee4\u6709\u4e24\u4e2a\u53c2\u6570type(\u542b3\u4e2a\u5b50\u53c2\u6570)\u548cnum\uff08\u53ef\u4ee5\u4e3a0\uff09\n\n\u7b2c\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u64cd\u4f5c\u7684\u5bc4\u5b58\u5668\uff0c\u4ece\u6700\u9ad8\u6709\u6548\u4f4d\u5f00\u59cb\u6392\u5e8f\n\n\u6bd4\u59820x123\u5c31\u662f\u5bf9B\u548cC\u64cd\u4f5c\uff0c\u7ed3\u679c\u5b58\u5230D\u4e2d\n\n\u9664\u4e86\u79fb\u52a8\u64cd\u4f5c\uff0c\u4e0b\u9762\u7ed9\u51fa\u63cf\u8ff0\n\n\u8fd9\u662f\u6211\u5b9a\u4e49\u7684\u547d\u4ee4\u5217\u8868\uff1a\n```\nnul\n\t\u7a7a\u6307\u4ee4\nadd\n\t\u5c06\u5bc4\u5b58\u56681\u4e0e2\u76f8\u52a0\u653e\u57283\u91cc\narc\n\t\u5c06\u5bc4\u5b58\u56681\u53d6\u76f8\u53cd\u6570\u540e\u653e\u57283\u91cc\njif\n\t\u5982\u679c\u5bc4\u5b58\u56681\u4e0d\u662f0\uff0c\u5c31\u8df3\u8f6c\u5230num\u884c\njmp\n\t\u8df3\u8f6c\u5230\u7b2cnum\u884c\nmov\n\t\u6839\u636etype\u7684\u6700\u9ad8\u6709\u6548\u4f4d\u51b3\u5b9a\u5177\u4f53\u64cd\u4f5c\n    \t0:\u5c06\u5bc4\u5b58\u56681\u7684\u6570\u590d\u5236\u5230\u5bc4\u5b58\u56682\u4e2d\n    \t1:\u5c06\u5bc4\u5b58\u56681\u6240\u6307\u5411\u5185\u5b58\u5730\u5740\u4e2d\u7684\u6570\u590d\u5236\u5230\u5bc4\u5b58\u56682\u4e2d\n        \u5373:\u8bfb\u53d6\u5185\u5b58\n        2:\u5c06\u5bc4\u5b58\u56681\u7684\u6570\u590d\u5236\u5230\u5bc4\u5b58\u56682\u6240\u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u4e2d\n        \u5373:\u5199\u5165\u5185\u5b58\n        3:\u5c06\u5bc4\u5b58\u56682\u8bbe\u4e3anum\n        type\u5f62\u5f0f\u5e94\u7c7b\u4f3c0x301,\u4e2d\u95f4\u4e00\u4f4d\u65e0\u5f71\u54cd\nput\n\t\u8f93\u51fa\u5bc4\u5b58\u56681\u4e2d\u7684\u6570\u5b57\ngeq\nleq\ngrt\nles\nequ\nneq\n\t\u5bf9\u5bc4\u5b58\u56681\u548c2\u8fdb\u884c\u6bd4\u8f83\uff0c\u7ed3\u679c\u5b58\u5230\u5bc4\u5b58\u56683\u4e2d\npush\n\t\u5c06ABC\u538b\u5165\u6808\uff0c\u5bf9D\u4e0d\u6267\u884c\u64cd\u4f5c\npop\n\t\u4ece\u6808\u9876\u5f39\u51faABC\uff0c\u5bf9D\u4e0d\u6267\u884c\u64cd\u4f5c\nhlt\n\t\u7ed3\u675f\u7a0b\u5e8f\n```\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u7f16\u8bd1\u5668\u4e86\n\n## \u7b2c\u4e8c\u6b65\uff1a\u53d8\u91cf\n\n\u9996\u5148\u5904\u7406\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5176\u4e2dloadvar\u53ea\u5904\u7406\u5b9a\u4e49\u5185\u5bb9\uff0c\u7531variable\u7684\u6784\u9020\u51fd\u6570\u5206\u914d\u5185\u5b58\n\n\u6ce8\u610f\uff1a\u4e0d\u4e00\u5b9a\u6709\u53d8\u91cf\u5b9a\u4e49\n\n\u5bf9\u4e8e\u5355\u4e2a\u53d8\u91cf\uff0c\u53ea\u9700\u8981\u5728\u5185\u5b58\u4e2d\u5206\u914d\u6700\u9760\u540e\u7684\u4e00\u4e2a\u5730\u5740\u5c31\u884c\n\n\u5bf9\u4e8e\u6570\u7ec4\uff0c\u6211\u5148\u8ba1\u7b97\u51fa\u4e0b\u6807\u4e3a0\u5bf9\u5e94\u7684\u5185\u5b58\u5730\u5740p\uff08\u53ef\u80fd\u8d8a\u754c\uff09\uff0c\u7136\u540e\u5728\u5185\u5b58\u4e2d\u5206\u914d\u76f8\u5e94\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u5728\u4f7f\u7528\u65f6\u53ea\u8981\u53d6\u51fap\uff0c\u52a0\u4e0a\u4e0b\u6807\uff0c\u7136\u540e\u53d6\u51fa\u5185\u5b58\u5c31\u53ef\u4ee5\n\n\u4e3a\u4e86\u7701\u4e8b\uff0c\u6211\u5c06\u5b57\u7b26\u4e32\u8f6c\u6210\u4e86\u6570\u5b57\n\n\u6839\u636e\u9898\u76ee\u6570\u636e\u8303\u56f4\uff0c\u53ef\u4ee5\u7528long long\u5b58\uff0c\u800c\u4e14\u80fd\u4fdd\u8bc1\u4e0d\u540c\u53d8\u91cf\u5bf9\u5e94\u4e0d\u540c\u7684\u6570\u5b57\n\n## \u7b2c\u4e09\u6b65\uff1a\u8868\u8fbe\u5f0f\n\n\u9898\u76ee\u4e2d\u9700\u8981\u5927\u91cf\u5904\u7406\u8868\u8fbe\u5f0f\uff08\u5305\u62ec\u8d4b\u503c\u64cd\u4f5c\u7684\u88ab\u64cd\u4f5c\u6570\uff09\n\n\u6240\u4ee5\u5148\u5f04\u8868\u8fbe\u5f0f\u8bfb\u53d6\n\n\u5bf9\u4e8e\u8868\u8fbe\u5f0f\uff0c\u6211\u5206\u4e3a\u4e24\u7c7b\uff1a\u4f20\u503c\u548c\u4f20\u5740\n\n\u533a\u522b\u5c31\u662f\uff0c\u6700\u540e\u4e00\u6b65\u64cd\u4f5c\u662f\u5426\u6267\u884c\u53d6\u5185\u5b58\u64cd\u4f5c\n\n\u6211\u5199\u7684calc::build(type)\u4f1a\u4ece\u5f53\u524d\u884c\u5f00\u59cb\uff0c\u7f16\u8bd1\u83b7\u5f97\u8868\u8fbe\u5f0f\u5185\u5bb9\u7684\u4e00\u6bb5\u547d\u4ee4\uff0c\u4fdd\u8bc1\u53ea\u4f1a\u6539\u53d8\u5bc4\u5b58\u5668D\uff0c\u6700\u540e\u6570\u503c\u6216\u5730\u5740\u5728\u5bc4\u5b58\u5668D\u4e2d\n\n\u6211\u7684\u5b9e\u73b0\u662f\u5148\u5efa\u8868\u8fbe\u5f0f\u6811\uff0c\u7136\u540edfs\u4e00\u904d\uff0cdfs\u65f6\u6839\u636e\u60c5\u51b5\u7f16\u8bd1\u51fa\u76f8\u5e94\u547d\u4ee4\n\n\u8fd9\u9898\u53ea\u6709\u52a0\u51cf\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8003\u8651\u4f18\u5148\u7ea7\u95ee\u9898\n\n\u7136\u540e\u5bf9\u4e8e\u53d6\u4e0b\u6807\u64cd\u4f5c\uff0c\u53ef\u4ee5\u770b\u505a\u7279\u6b8a\u7684\u8fd0\u7b97\uff0c\u5904\u7406\u65f6\u628a```'['```\u5f53\u4f5c\u8fd0\u7b97\u7b26\u540e\u9762\u8ddf\u62ec\u53f7\uff0c```']'```\u5f53\u505a\u666e\u901a\u62ec\u53f7\n\n\u5177\u4f53\u8fdb\u884c\u65f6\u7684\u64cd\u4f5c\u53ef\u80fd\u7565\u6709\u533a\u522b\n\n\u5efa\u8868\u8fbe\u5f0f\u6811\u7684\u65f6\u5019\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u6bcf\u5f53\u80fd\u591f\u5408\u5e76\u6808\u9876\u7684\u65f6\u5019\uff0c\u5c31\u628a\u8fd0\u7b97\u7b26\u4f5c\u4e3a\u4e34\u65f6\u6839\u8282\u70b9\uff0c\u4e24\u8fb9\u6570\u4f5c\u4e3a\u5de6\u53f3\u513f\u5b50\uff0c\u7136\u540e\u628a\u8fd0\u7b97\u7b26\u5bf9\u5e94\u7684\u6811\u538b\u6808\n\n\u9047\u5230\u62ec\u53f7\u5c31\u628a\u62ec\u53f7\u6254\u6389\uff0c\u4e24\u4e2a\u62ec\u53f7\u4e2d\u95f4\u90e8\u5206\u53d6\u51fa\uff0c\u538b\u6808\n\n\u5982\u679c\u9047\u5230\u4f5c\u4e3a\u8d1f\u53f7\u7684```'-'```\uff0c\u7279\u70b9\u662f\u524d\u9762\u662f\u8d1f\u53f7\u6216\u8005\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\uff0c\u5c31\u628a\u5f71\u54cd\u5230\u7684\u70b9\u6253\u76f8\u53cd\u6570\u6807\u8bb0\n\n\u7ed3\u675f\u5efa\u6811\u6761\u4ef6\u662f\u51fa\u73b0\u4e86\u975e\u6cd5\u5b57\u7b26\uff0c\u6bd4\u5982\u9017\u53f7\u548c\u5927\u62ec\u53f7\n\ndfs\u65f6\uff0c\u6bcf\u5f53\u8fdb\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5148\u7f16\u8bd1\u538b\u6808\u547d\u4ee4\n\n\u5982\u679c\u662f\u6570\u5b57\uff0c\u5219\u7f16\u8bd1\u4e00\u6761\u8d4b\u503c\u547d\u4ee4\n\n\u5982\u679c\u662f\u53d8\u91cf\uff0c\u6839\u636e\u662f\u5426\u53d6\u5730\u5740\u8ba8\u8bba\n\n\u5982\u679c\u662f\u8fd0\u7b97\uff0c\u5219\u9012\u5f52\u5904\u7406\u5de6\u53f3\u513f\u5b50\uff0c\u6bcf\u5904\u7406\u5b8c\u4e00\u534a\u5c31\u628a\u5f97\u5230\u7684\u7ed3\u679c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff0c\u7136\u540e\u5bf9\u4e24\u4e2a\u5bc4\u5b58\u5668\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u3002\u5982\u679c\u6709\u7ffb\u8f6c\u6807\u8bb0\uff0c\u5c31\u5728\u6700\u540e\u7f16\u8bd1\u4e00\u6761\u53d6\u76f8\u53cd\u6570\u547d\u4ee4\n\n\u5c06\u8981\u79bb\u5f00\u8282\u70b9\u65f6\uff0c\u7f16\u8bd1\u4e00\u6761\u5f39\u6808\u547d\u4ee4\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u7ee7\u7eed\u4e86\n\n## \u7b2c\u56db\u6b65\uff1ayosoro&set\n\n\u53ea\u8981\u628a\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u5bf9\u5e94\u547d\u4ee4\u7f16\u8bd1\u51fa\u6765\uff0c\u7136\u540e\u7f16\u8bd1\u51e0\u6761\u79fb\u52a8\u6216\u8f93\u51fa\u547d\u4ee4\u5c31\u53ef\u4ee5\u4e86\n\n## \u7b2c\u4e94\u6b65\uff1a\u6761\u4ef6\u8bed\u53e5\n\n\u8fd9\u91cc\u9700\u8981\u7528\u5230\u6761\u4ef6\u8f6c\u79fb\u547d\u4ee4\uff0c\u4f46\u662f\u547d\u4ee4\u8f6c\u79fb\u5230\u7684\u4f4d\u7f6e\u5728\u5f00\u59cb\u5e76\u4e0d\u77e5\u9053\uff0c\u4e0b\u9762\u6709\u5904\u7406\u65b9\u6cd5\n\n\u9996\u5148\u8bb0\u5f55\u64cd\u4f5c\u7c7b\u578b\n\n\u7136\u540e\u628a\u88ab\u6bd4\u8f83\u7684\u4e24\u4e2a\u8868\u8fbe\u5f0f\u547d\u4ee4\u7f16\u8bd1\u51fa\u6765\uff0c\u518d\u7f16\u8bd1\u4e00\u6761\u6bd4\u8f83\u547d\u4ee4\u548c\u6761\u4ef6\u8f6c\u79fb\u547d\u4ee4\uff08\u8f6c\u79fb\u5230\u7684\u884c\u6570\u7559\u7a7a\uff09\uff0c\u628a\u6761\u4ef6\u8f6c\u79fb\u547d\u4ee4\u6240\u5728\u884c\u6570\u538b\u6808\n\n\u5f53\u9047\u5230\u6761\u4ef6\u8bed\u53e5\u7ec8\u6b62\u65f6\uff0c\u628a\u521a\u624d\u88ab\u538b\u5165\u6808\u7684\u90a3\u4e2a\u884c\u6570\u53d6\u51fa\uff0c\u8f6c\u79fb\u884c\u6570\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u4e86\n\n\u6211\u7684\u4ee3\u7801\u4e2d\u547d\u4ee4\u548c\u8981\u6c42\u7684\u64cd\u4f5c\u662f\u53cd\u7740\u7684\uff0c\u539f\u56e0\u8bf7\u6839\u636e\u547d\u4ee4\u5217\u8868\u81ea\u884c\u601d\u8003\n\n## \u7b2c\u516d\u6b65\uff1afor\u5faa\u73af\u8bed\u53e5\n\n\u5982\u679c\u4f60\u5199\u7684\u662f\u89e3\u91ca\u578b\u4ee3\u7801\u7684\u8bdd\uff0c\u53ef\u80fd\u8fd9\u4e2a\u64cd\u4f5c\u6bd4while\u7b80\u5355\n\n\u4f46\u662f\u5982\u679c\u7f16\u8bd1\u5c31\u590d\u6742\u4e86\n\n\u7406\u4e00\u4e0b\u601d\u8def\uff0c\u6267\u884c\u8fd9\u79cd\u5faa\u73af\u7684\u987a\u5e8f\uff1a\n\n```\n\u53d6\u51fai\u7684\u5730\u5740\n\u53d6\u51faa\u7684\u6570\u503c\n\u5c06i\u8bbe\u4e3a\u5bf9\u5e94\u6570\u503c\uff08\u4e00\u6761\u547d\u4ee4\uff09\n\u53d6\u51fai\u7684\u6570\u503c #1\n\u53d6\u51fab\u7684\u6570\u503c\n\u6bd4\u8f83i\u548cb\u7684\u503c\u5e76\u8f6c\u79fb(#2)\uff08\u82e5\u5e72\u6761\u547d\u4ee4\uff09\n\uff08\u5faa\u73af\u4f53\uff09\n\u53d6\u51fai\u7684\u5730\u5740\n\u5c06i\u52a01\uff08\u82e5\u5e72\u6761\u547d\u4ee4\uff09\n\u8f6c\u79fb\u5230#1\n#2\uff08\u8df3\u51fa\u5faa\u73af\uff09\n```\n\u5728\u5904\u7406\u65f6\uff0c\u9700\u8981\u591a\u6b21\u53d6\u51fa\u540c\u4e00\u8868\u8fbe\u5f0f\uff0c\u53ea\u8981\u8bb0\u5f55\u8868\u8fbe\u5f0f\u4ee3\u7801\u5f00\u59cb\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u91cd\u65b0\u7f16\u8bd1\u5c31\u884c\n\n\u538b\u6808\u65f6\uff0c\u628a\u8bed\u53e5\u7ec8\u6b62\u6bb5\u5904\u7406\u6240\u9700\u4fe1\u606f\u4e5f\u4e00\u5e76\u538b\u6808\n\n## \u7b2c\u516d\u6b65\uff1awhile\u5faa\u73af\u8bed\u53e5\n\n\u548cif\u8bed\u53e5\u6709\u76f8\u4f3c\u4e4b\u5904\n\n\u8fd8\u662f\u9700\u8981\u7406\u6e05\u601d\u8def\n```\n\u53d6\u51faa\u548cb\u7684\u503c #1\n\u6bd4\u8f83\u5e76\u8f6c\u79fb(#2)\n\uff08\u5faa\u73af\u4f53\uff09\n\u8f6c\u79fb\u5230#1\n#2\uff08\u8df3\u51fa\u5faa\u73af\uff09\n```\n\u7136\u540e\u5c31\u548c\u4e0a\u9762\u7c7b\u4f3c\u4e86\n## \u7b2c\u4e03\u6b65\uff1a\u8fd0\u884c\n\n\u8bb0\u5f55\u5f53\u524d\u884c\uff0c\u6839\u636e\u6bcf\u79cd\u547d\u4ee4\u7684\u89c4\u5b9a\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\uff0c\u8fd9\u4e00\u6b65\u5c31\u5f88\u7b80\u5355\u4e86\n\n## \u4ee3\u7801\n\n\u5305\u542b\u4e00\u4e9b\u8c03\u8bd5\u4fe1\u606f\uff0c\u628adebug\u8bbe\u4e3atrue\u5c31\u80fd\u770b\u5230\n\n\u4e5f\u6709\u4e00\u4e9b\u8c03\u8bd5\u64cd\u4f5c\u88ab\u6ce8\u91ca\u6389\u4e86\uff0c\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\n\n**\u4e00\u5b9a\u8981\u5b8c\u6210\u4e00\u90e8\u5206\u5e76\u786e\u8ba4\u6b63\u786e\u540e\u518d\u8fdb\u884c\u4e0b\u4e00\u90e8\u5206**\n\nCE\u51fd\u6570\u4e3b\u8981\u4e5f\u662f\u8c03\u8bd5\u7528\u7684\uff0c\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u4f1aRE\u800c\u4e0d\u662fWA\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n//\u53d6\u51fa\"type\"\u7684\u5bf9\u5e94\u4f4d\u7f6e\n#define low(x) (x&0x00f)\n#define mid(x) ((x&0x0f0)>>4)\n#define high(x) ((x&0xf00)>>8)\nusing namespace std;\nconst bool debug=false;\nnamespace cst{\n//\u8bb0\u5f55\u5173\u952e\u5b57\u7684\u54c8\u5e0c\u503c\n\t#define cst(x,y) const long long x=y;\n\tcst(vars,434260);\n\tcst(val,6959);\n\tcst(arr,898909);\n\tcst(yosoro,367079703);\n\tcst(set,14006);\n\tcst(iho,6798);\n\tcst(lt,344);\n\tcst(gt,209);\n\tcst(le,329);\n\tcst(ge,194);\n\tcst(_eq,152);\n\tcst(_neq,10358);\n\tcst(hor,6255);\n\tcst(loop,12387497);\n\t#undef cst\n}\n\nnamespace com{\n//\u5728\u7f16\u8bd1\u65f6\u76f4\u63a5\u8c03\u7528\n//\u4e0b\u9762\u7684\u6ce8\u91ca\u4e0d\u4e00\u5b9a\u5bf9\uff0c\u8bf7\u65e0\u89c6\n#define nul 0\n//nothing\n#define add 1\n//c=a+b\n#define arc 2\n//c=-a\n#define jif 3\n//if a!=0 goto c\n#define jmp 4\n//goto c\n#define mov 5\n//1: reg=*mem\n//2: reg=const\n//3: *mem(A)=reg\n//4: reg=reg\n#define put 6\n//print a\n#define geq 7\n//c=a>=b\n#define leq 8\n//c=a<=b\n#define grt 9\n//c=a>b\n#define les 11\n//c=a<b\n#define equ 12\n//c=a==b\n#define neq 13\n//c=a!=b\n#define push 14\n//push a,b,c\n#define pop 15\n//pop c,b,a\n#define hlt 16\n//stop\n}\n//\u5b58\u6e90\u7a0b\u5e8f\nchar cpp[500000];\nint lst;\n//\u8fd9\u4e9b\u662f\u4e00\u4e9b\u7b80\u5355\u51fd\u6570\nlong long hash(char *c){\n\tlong long ans=0;\n\twhile(*c){\n\t\tans*=27;\n\t\tans+=(*c-'a'+1);\n\t}\n\treturn ans;\n}\ninline bool isletter(char c){\n\treturn c>='a'&&c<='z';\n}\ninline bool isdigit(char c){\n\treturn c>='0'&&c<='9';\n}\n\n\nvoid CE(const char *res){\n\tprintf(\"Complie Error\\n%s\\nAt char %d\\n\",res,lst);\n\tthrow(1);\n}\n\nvoid pass(){\n\t\n\twhile(1){\n\t\twhile(cpp[lst]==' '||cpp[lst]=='\\n'||cpp[lst]=='\\r'||cpp[lst]=='\\t')lst++;\n\t\tif(cpp[lst]=='#'){\n\t\t\twhile(cpp[lst]!='\\n')lst++;\n\t\t\tlst++;\n\t\t}else{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n}\nlong long getword(){\n\tpass();\n\tlong long ans=0;\n\tif(!isletter(cpp[lst]))CE(\"Invailed letter\");\n\twhile(isletter(cpp[lst])){\n\t\tans*=27;\n\t\tans+=(cpp[lst]-'a'+1);\n\t\tlst++;\n\t}\n\treturn ans;\n}\nlong long getnum(){\n\tpass();\n\tlong long ans=0;\n\tint f=1;\n\tif(cpp[lst]=='-')f=-1,lst++;\n\tif(!isdigit(cpp[lst]))CE(\"Invailed number\");\n\twhile(isdigit(cpp[lst])){\n\t\tans*=10;\n\t\tans+=(cpp[lst]-'0');\n\t\tlst++;\n\t}\n\treturn ans*f;\n}\n\n//\u547d\u4ee4\nstruct command{\n\tchar com;\n\tint type,num;\n};\nint reg[4],cur;//registers\ncommand exe[10000];\nint last;\n//\u8fd9\u4e2a\u662f\u7f16\u8bd1\u4e00\u6761\u547d\u4ee4\nint comm(int opt,int type,int num){\n\texe[last]=(command){(char)opt,type,num};\n\tlast++;\n\treturn last-1;\n}\nint mem[60000];\nint memsz;\n\n//\u5904\u7406\u53d8\u91cf\nstruct variable{\n\tlong long name;\n\tint beg,end;\n\tint p;\n\tvariable(long long _name,int _beg,int _end){\n\t\tif(debug){cout<<\"define \"<<_name<<\" at mem \"<<memsz\n\t\t\t<<\" to \"<<memsz+_end-_beg<<endl;\n\t\t\tcout<<\"array from \"<<_beg<<\" to \"<<_end<<endl;\n\t\t\t\n\t\t}\n\t\tname=_name;\n\t\tbeg=_beg;\n\t\tend=_end;\n\t\tp=memsz-_beg;\n\t\tmemsz+=(_end-_beg+1);\n\t}\n\tvariable(long long _name){\n\t\tif(debug)cout<<\"define \"<<_name<<\" at mem \"<<memsz<<endl;\n\t\tname=_name;\n\t\tbeg=0;\n\t\tend=0;\n\t\tp=memsz;\n\t\tmemsz++;\n\t}\n\tvariable(){}\n};\nvariable vlist[100];\nint vcnt;\nvoid loadvar(){\n\tlong long name,type,beg,end;\n\tpass();\n\tif(cpp[lst]!='{'){\n\t\tlst++;\n\t\tpass();\n\t\tname=getword();\n\t\tif(name!=cst::vars){\n\t\t\tlst=0;\n\t\t\treturn;\n\t\t}else{\n\t\t\tCE(\"Unknown Error\");\n\t\t}\n\t}\n\tlst++;\n\tpass();\n\t\n\tname=getword();\n\tif(name!=cst::vars)CE(\"Invailed variable define begin\");\n\tpass();\n\twhile(1){\n\t\tif(cpp[lst]=='}'){\n\t\t\tlst++;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tname=getword();\n\t\tpass();\n\t\t\n\t\tif(cpp[lst]!=':')CE(\"Invailed variable define begin\");\n\t\tlst++;\n\t\tpass();\n\t\t\n\t\ttype=getword();\n\t\tpass();\n\t\t\n\t\tif(type==cst::val){\n\t\t\tvlist[vcnt++]=variable(name);\n\t\t}else if(type==cst::arr){\n\t\t\t\n\t\t\tif(cpp[lst]!='[')CE(\"Invailed array begin\");\n\t\t\tlst++;\n\t\t\tpass();\n\t\t\t\n\t\t\ttype=getword();\n\t\t\tif(type!=cst::val)CE(\"Invailed array type\");\n\t\t\tpass();\n\t\t\t\n\t\t\tif(cpp[lst]!=',')CE(\"Invailed array define\");\n\t\t\tlst++;\n\t\t\tpass();\n\t\t\t\n\t\t\tbeg=getnum();\n\t\t\tpass();\n\t\t\t\n\t\t\tif(cpp[lst]!='.')CE(\"Invailed array range\");\n\t\t\tlst++;\n\t\t\tif(cpp[lst]!='.')CE(\"Invailed array range\");\n\t\t\tlst++;\n\t\t\tpass();\n\t\t\t\n\t\t\tend=getnum();\n\t\t\tpass();\n\t\t\t\n\t\t\tif(cpp[lst]!=']')CE(\"Invailed array end\");\n\t\t\tlst++;\n\t\t\tpass();\n\t\t\t\n\t\t\tvlist[vcnt++]=variable(name,beg,end);\n\t\t}else{\n\t\t\tCE(\"Invailed variable type\");\n\t\t}\n\t}\n\t\t\n}\n\n\n//\u8fd9\u90e8\u5206\u662f\u7f16\u8bd1\u8fc7\u7a0b\nint stack[60000],top;\nint getmem(long long name){\n//\u83b7\u5f97\u67d0\u4e2a\u53d8\u91cf\u7684\u5730\u5740\n\tfor(int i=0;i<vcnt;i++){\n\t\tif(name==vlist[i].name)return vlist[i].p;\n\t}\n\tCE(\"Variable not found\");\n\treturn -1;\n}\n//\u5efa\u8868\u8fbe\u5f0f\u6811\nnamespace calc{\n\tstruct node{\n\t\tnode *lcd,*rcd;\n\t\tnode *pa;\n\t\tchar type;\n\t\tlong long num;\n\t\tbool rev;\n        //dfs\u5e76\u7f16\u8bd1\u547d\u4ee4\n\t\tvoid dfs(bool addr){\n\t\t\tif(type=='d')CE(\"Invailed operator\");\n\t\t\tif(type=='p')CE(\"Invailed parter\");\n\t\t\tif(type=='n'){\n\t\t\t\tif(addr)CE(\"Attemt to index a number\");\n\t\t\t\tcomm(mov,0x303,num);\n\t\t\t\tif(rev){\n\t\t\t\t\tcomm(arc,0x33,0);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(type=='v'){\n\t\t\t\tif(addr){\n\t\t\t\t\tcomm(mov,0x303,getmem(num));\n\t\t\t\t}else{\n\t\t\t\t\tcomm(mov,0x303,getmem(num));\n\t\t\t\t\tcomm(mov,0x133,0);\n\t\t\t\t}\n\t\t\t\tif(rev){\n\t\t\t\t\tcomm(arc,0x33,0);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(type=='o'){\n\t\t\t\tif(addr&&num=='['){\n\t\t\t\t\tcomm(push,0,0);\n\t\t\t\t\tlcd->dfs(1);\n\t\t\t\t\tcomm(mov,0x030,0);\n\t\t\t\t\trcd->dfs(0);\n\t\t\t\t\tcomm(mov,0x031,0);\n\t\t\t\t\tcomm(add,0x013,0);\n\t\t\t\t\tcomm(pop,0,0);\n\t\t\t\t\treturn;\n\t\t\t\t\t//comm(mov,0x303,0);\n\t\t\t\t}\n\t\t\t\tif(addr)CE(\"Attemt to index a number\");\n\t\t\t\tcomm(push,0,0);\n\t\t\t\tif(num=='['){\n\t\t\t\t\tlcd->dfs(1);\n\t\t\t\t\tcomm(mov,0x030,0);\n\t\t\t\t\trcd->dfs(0);\n\t\t\t\t\tcomm(mov,0x031,0);\n\t\t\t\t\tcomm(add,0x013,0);\n\t\t\t\t\tcomm(mov,0x133,0);\n\t\t\t\t}else if(num=='+'){\n\t\t\t\t\tlcd->dfs(0);\n\t\t\t\t\tcomm(mov,0x030,0);\n\t\t\t\t\trcd->dfs(0);\n\t\t\t\t\tcomm(mov,0x031,0);\n\t\t\t\t\tcomm(add,0x013,0);\n\t\t\t\t}else if(num=='-'){\n\t\t\t\t\tlcd->dfs(0);\n\t\t\t\t\tcomm(mov,0x030,0);\n\t\t\t\t\trcd->dfs(0);\n\t\t\t\t\tcomm(mov,0x031,0);\n\t\t\t\t\tcomm(arc,0x11,0);\n\t\t\t\t\tcomm(add,0x013,0);\n\t\t\t\t}\n\t\t\t\tif(rev){\n\t\t\t\t\tcomm(arc,0x33,0);\n\t\t\t\t}\n\t\t\t\tcomm(pop,0,0);\n\t\t\t}\n\t\t}\n\t};\n\tnode mem[4000];int cnt;\n\tnode *get(){\n\t\treturn mem+(++cnt);\n\t}\n\tnode *st[4000];int top;\n    //\u5c06\u6808\u9876\u80fd\u5904\u7406\u90e8\u5206\u5904\u7406\u6389\n\tvoid calc(){\n\t\tnode *l,*m,*r;\n\t\twhile(1){\n\t\t\tif(top==0)CE(\"Unknown Error\");\n\t\t\telse if(top==1)break;\n\t\t\telse if(top==2){\n\t\t\t\tif(st[top-1]->type=='p'){\n\t\t\t\t\tif(st[top-1]->num!='['&&st[top-1]->num!='(')CE(\"Dup parter\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(st[top-1]->type=='d')break;\n\t\t\t\tr=st[--top];\n\t\t\t\tif(st[top-1]->type=='d'){\n\t\t\t\t\tm=st[--top];\n\t\t\t\t\tif(m->num=='-')r->rev=!r->rev;\n\t\t\t\t\tst[top++]=r;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(st[top-1]->type=='p'){\n\t\t\t\t\tst[top++]=r;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tCE(\"Invailed number or variable\");\n\t\t\t}else{\n\t\t\t\tif(st[top-1]->type=='d')break;\n\t\t\t\tif(st[top-1]->type=='p'){\n\t\t\t\t\tif(st[top-1]->num==']'){\n\t\t\t\t\t\tr=st[--top];\n\t\t\t\t\t\tif(st[top-1]->type=='d')CE(\"Invailed operator\");\n\t\t\t\t\t\tif(st[top-1]->type=='p')CE(\"Invailed parter\");\n\t\t\t\t\t\tm=st[--top];\n\t\t\t\t\t\tif(st[top-1]->type=='d'){\n\t\t\t\t\t\t\tCE(\"Invailed operator\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(st[top-1]->type=='p'){\n\t\t\t\t\t\t\tif(st[top-1]->num!='[')CE(\"Invailed parter\");\n\t\t\t\t\t\t\tl=st[--top];\n\t\t\t\t\t\t\tr=m;m=l;\n\t\t\t\t\t\t\tif(top==0)CE(\"Invailed index of NULL\");\n\t\t\t\t\t\t\tif(st[top-1]->type!='v'){\n\t\t\t\t\t\t\t\tif(st[top-1]->type=='d')CE(\"Invailed operator\");\n\t\t\t\t\t\t\t\tif(st[top-1]->type=='p')CE(\"Invailed parter\");\n\t\t\t\t\t\t\t\tCE(\"Invailed number or variable\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tl=st[--top];\n\t\t\t\t\t\t\tl->pa=m;\n\t\t\t\t\t\t\tr->pa=m;\n\t\t\t\t\t\t\tm->lcd=l;\n\t\t\t\t\t\t\tm->rcd=r;\n\t\t\t\t\t\t\tm->type='o';\n\t\t\t\t\t\t\tst[top++]=m;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tCE(\"Invailed number or variable\");\n\t\t\t\t\t}\n\t\t\t\t\tif(st[top-1]->num==')'){\n\t\t\t\t\t\tr=st[--top];\n\t\t\t\t\t\tif(st[top-1]->type=='d')CE(\"Invailed operator\");\n\t\t\t\t\t\tif(st[top-1]->type=='p')CE(\"Invailed parter\");\n\t\t\t\t\t\tm=st[--top];\n\t\t\t\t\t\tif(st[top-1]->type=='d'){\n\t\t\t\t\t\t\tCE(\"Invailed operator\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(st[top-1]->type=='p'){\n\t\t\t\t\t\t\tif(st[top-1]->num!='(')CE(\"Invailed parter\");\n\t\t\t\t\t\t\tl=st[--top];\n\t\t\t\t\t\t\tst[top++]=m;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tCE(\"Invailed number or variable\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tr=st[--top];\n\t\t\tif(st[top-1]->type=='p'){\n\t\t\t\tif(st[top-1]->num!='['&&st[top-1]->num!='(')CE(\"Dup parter\");\n\t\t\t\tst[top++]=r;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(st[top-1]->type=='d'){\n\t\t\t\tm=st[--top];\n\t\t\t\tif(st[top-1]->type=='d'||st[top-1]->type=='p'){\n\t\t\t\t\tif(m->num=='-'){\n\t\t\t\t\t\tr->rev=!r->rev;\n\t\t\t\t\t}\n\t\t\t\t\tst[top++]=r;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tl=st[--top];\n\t\t\t\tl->pa=m;\n\t\t\t\tr->pa=m;\n\t\t\t\tm->lcd=l;\n\t\t\t\tm->rcd=r;\n\t\t\t\tm->type='o';\n\t\t\t\tst[top++]=m;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tCE(\"Invailed number or variable\");\n\t\t}\n\t}\n    //\u4e3b\u8fc7\u7a0b\n\tvoid build(bool addr){\n\t\ttop=0;\n\t\tlong long p;\n\t\tnode *cur;\n\t\twhile(1){\n\t\t\tpass();\n\t\t\tif(cpp[lst]=='{'||cpp[lst]=='}'||cpp[lst]==':'||cpp[lst]==','||cpp[lst]==0||cpp[lst]=='#')break;\n\t\t\telse if(isdigit(cpp[lst])){\n\t\t\t\tp=getnum();\n\t\t\t\tcur=get();\n\t\t\t\tcur->type='n';\n\t\t\t\tcur->num=p;\n\t\t\t\tst[top++]=cur;\n\t\t\t}else if(isletter(cpp[lst])){\n\t\t\t\tp=getword();\n\t\t\t\tcur=get();\n\t\t\t\tcur->type='v';\n\t\t\t\tcur->num=p;\n\t\t\t\tst[top++]=cur;\n\t\t\t\tpass();\n\t\t\t\tif(cpp[lst]=='['){\n\t\t\t\t\tlst++;\n\t\t\t\t\tcur=get();\n\t\t\t\t\tcur->type='p';\n\t\t\t\t\tcur->num='[';\n\t\t\t\t\tst[top++]=cur;\n\t\t\t\t}\n\t\t\t}else if(cpp[lst]=='+'||cpp[lst]=='-'){\n\t\t\t\tcur=get();\n\t\t\t\tcur->type='d';\n\t\t\t\tcur->num=cpp[lst];\n\t\t\t\tst[top++]=cur;\n\t\t\t\tlst++;\n\t\t\t}else if(cpp[lst]=='('||cpp[lst]=='['||cpp[lst]==')'||cpp[lst]==']'){\n\t\t\t\tcur=get();\n\t\t\t\tcur->type='p';\n\t\t\t\tcur->num=cpp[lst];\n\t\t\t\tst[top++]=cur;\n\t\t\t\tlst++;\n\t\t\t}else{\n\t\t\t\tCE(\"Invailed symbol\");\n\t\t\t}\n\t\t\tcalc();\n\t\t}\n\t\tif(top!=1)CE(\"Unknown Error\");\n\t\tif(st[0]->type=='p')CE(\"Invailed parter\");\n\t\tif(st[0]->type=='d')CE(\"Invailed operator\");\n\t\tst[0]->dfs(addr);\n\t}\n}\n//\u6b63\u5f0f\u7f16\u8bd1\nvoid complie(){\n\tint p1,p2,p3,p4;\n\tlong long com;\n\twhile(cpp[lst]){\n\t\tpass();\n\t\tif(cpp[lst]==':'){\n        //\u5982\u679c\u662f\u547d\u4ee4\n\t\t\tlst++;\n\t\t\tpass();\n\t\t\tcom=getword();\n\t\t\tswitch(com){\n\t\t\t\tcase cst::yosoro:\n\t\t\t\t\tpass();\n\t\t\t\t\tcalc::build(0);\n\t\t\t\t\tcomm(put,0x3,0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase cst::set:\n\t\t\t\t\tpass();\n\t\t\t\t\tcalc::build(1);\n\t\t\t\t\tcomm(mov,0x030,0);\n\t\t\t\t\tpass();\n\t\t\t\t\tlst++;\n\t\t\t\t\tpass();\n\t\t\t\t\tcalc::build(0);\n\t\t\t\t\tcomm(mov,0x031,0);\n\t\t\t\t\tcomm(mov,0x210,0);\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t}\n\t\t}else if(cpp[lst]=='{'){\n        //\u5426\u5219\u662f\u63a7\u5236\u8bed\u53e5\n\t\t\tlst++;\n\t\t\tcom=getword();\n\t\t\t\n\t\t\tswitch(com){\n\t\t\t\tcase cst::iho:\n\t\t\t\t\tpass();\n\t\t\t\t\tcom=getword();\n\t\t\t\t\tpass();\n\t\t\t\t\tif(cpp[lst]!=',')CE(\"Invailed symbol\");\n\t\t\t\t\tlst++;\n\t\t\t\t\tpass();\n\t\t\t\t\tcalc::build(0);\n\t\t\t\t\tcomm(mov,0x030,0);\n\t\t\t\t\tpass();\n\t\t\t\t\tif(cpp[lst]!=',')CE(\"Invailed symbol\");\n\t\t\t\t\tlst++;\n\t\t\t\t\tpass();\n\t\t\t\t\tcalc::build(0);\n\t\t\t\t\tcomm(mov,0x031,0);\n\t\t\t\t\t\n\t\t\t\t\tswitch(com){\n\t\t\t\t\t\tcase cst::ge:\n\t\t\t\t\t\t\tcomm(les,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::le:\n\t\t\t\t\t\t\tcomm(grt,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::_eq:\n\t\t\t\t\t\t\tcomm(neq,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::_neq:\n\t\t\t\t\t\t\tcomm(equ,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::gt:\n\t\t\t\t\t\t\tcomm(leq,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::lt:\n\t\t\t\t\t\t\tcomm(geq,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tstack[top++]=comm(jif,0x3,-1);\n\t\t\t\t\tstack[top++]=0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase cst::hor:\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tpass();\n\t\t\t\t\tp1=lst;\n\t\t\t\t\tcalc::build(1);\n\t\t\t\t\tcomm(mov,0x030,0);\n\t\t\t\t\t\n\t\t\t\t\tpass();\n\t\t\t\t\tif(cpp[lst]!=',')CE(\"Invailed symbol\");\n\t\t\t\t\tlst++;\n\t\t\t\t\tpass();\n\t\t\t\t\tcalc::build(0);\n\t\t\t\t\tcomm(mov,0x230,0);\n\t\t\t\t\t\n\t\t\t\t\tstack[top++]=last;\n\t\t\t\t\t\n\t\t\t\t\tpass();\n\t\t\t\t\tif(cpp[lst]!=',')CE(\"Invailed symbol\");\n\t\t\t\t\tlst++;\n\t\t\t\t\tpass();\n\t\t\t\t\tp2=lst;\n\t\t\t\t\t\n\t\t\t\t\tlst=p1;\n\t\t\t\t\tcalc::build(0);\n\t\t\t\t\tcomm(mov,0x030,0);\n\t\t\t\t\t\n\t\t\t\t\tlst=p2;\n\t\t\t\t\tcalc::build(0);\n\t\t\t\t\tcomm(grt,0x031,0);\n\t\t\t\t\tstack[top++]=comm(jif,0x1,-1);\n\t\t\t\t\t\n\t\t\t\t\tstack[top++]=p1;\n\t\t\t\t\tstack[top++]=1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase cst::loop:\n\t\t\t\t\t\n\t\t\t\t\tpass();\n\t\t\t\t\tcom=getword();\n\t\t\t\t\tpass();\n\t\t\t\t\tif(cpp[lst]!=',')CE(\"Invailed symbol\");\n\t\t\t\t\tlst++;\n\t\t\t\t\t\n\t\t\t\t\tpass();\n\t\t\t\t\tstack[top++]=last;\n\t\t\t\t\tcalc::build(0);\n\t\t\t\t\tcomm(mov,0x030,0);\n\t\t\t\t\tpass();\n\t\t\t\t\tif(cpp[lst]!=',')CE(\"Invailed symbol\");\n\t\t\t\t\tlst++;\n\t\t\t\t\t\n\t\t\t\t\tpass();\n\t\t\t\t\tcalc::build(0);\n\t\t\t\t\tcomm(mov,0x031,0);\n\t\t\t\t\tswitch(com){\n\t\t\t\t\t\tcase cst::ge:\n\t\t\t\t\t\t\tcomm(les,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::le:\n\t\t\t\t\t\t\tcomm(grt,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::_eq:\n\t\t\t\t\t\t\tcomm(neq,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::_neq:\n\t\t\t\t\t\t\tcomm(equ,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::gt:\n\t\t\t\t\t\t\tcomm(leq,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase cst::lt:\n\t\t\t\t\t\t\tcomm(geq,0x013,0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tstack[top++]=comm(jif,0x3,-1);\n\t\t\t\t\tstack[top++]=2;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpass();\n\t\t\t\n\t\t}else if(cpp[lst]=='}'){\n        //\u63a7\u5236\u8bed\u53e5\u7ed3\u675f\n\t\t\tlst++;\n\t\t\tcom=stack[--top];\n\t\t\tswitch(com){\n\t\t\t\tcase 0:\n\t\t\t\t\tcom=stack[--top];\n\t\t\t\t\texe[com].num=last;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tp1=lst;\n\t\t\t\t\tlst=stack[--top];\n\t\t\t\t\tp2=stack[--top];\n\t\t\t\t\tp3=stack[--top];\n\t\t\t\t\tcalc::build(1);\n\t\t\t\t\tcomm(mov,0x300,1);\n\t\t\t\t\tcomm(mov,0x131,0);\n\t\t\t\t\tcomm(add,0x101,0);\n\t\t\t\t\tcomm(mov,0x213,0);\n\t\t\t\t\tcomm(jmp,0x0,p3);\n\t\t\t\t\texe[p2].num=last;\n\t\t\t\t\tlst=p1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tp1=stack[--top];\n\t\t\t\t\tp2=stack[--top];\n\t\t\t\t\tcomm(jmp,0x0,p2);\n\t\t\t\t\texe[p1].num=last;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpass();\n\t\t}else{\n\t\t\tCE(\"Invailed command\");\n\t\t}\n\t}\n\tcomm(hlt,0,0);\n}\n//\u53ef\u4ee5\u8fd0\u884c\u4e86\nvoid run(){\n\tcur=0;\n\tcommand c;\n\tint tmp;\n\twhile(1){\n\t\tc=exe[cur];\n\t\tswitch(c.com){\n        //\u53ea\u8981\u628a\u547d\u4ee4\u5bf9\u5e94\u64cd\u4f5c\u6572\u51fa\u6765\u5c31\u53ef\u4ee5\n\t\t\tcase nul:\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase add:\n\t\t\t\tif(debug)cout<<\"add \"<<(char)('A'+high(c.type))<<\"+\"\n\t\t\t\t\t<<(char)('A'+mid(c.type))\n\t\t\t\t\t<<\" to \"<<(char)('A'+low(c.type))<<endl;\n\t\t\t\ttmp=reg[high(c.type)];\n\t\t\t\ttmp+=reg[mid(c.type)];\n\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase equ:\n\t\t\t\ttmp=reg[high(c.type)]==reg[mid(c.type)];\n\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase neq:\n\t\t\t\ttmp=reg[high(c.type)]!=reg[mid(c.type)];\n\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase geq:\n\t\t\t\ttmp=reg[high(c.type)]>=reg[mid(c.type)];\n\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase leq:\n\t\t\t\ttmp=reg[high(c.type)]<=reg[mid(c.type)];\n\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase grt:\n\t\t\t\ttmp=reg[high(c.type)]>reg[mid(c.type)];\n\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase les:\n\t\t\t\ttmp=reg[high(c.type)]<reg[mid(c.type)];\n\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase jif:\n\t\t\t\ttmp=reg[low(c.type)];\n\t\t\t\tif(tmp)cur=c.num;\n\t\t\t\telse cur++;\n\t\t\t\tbreak;\n\t\t\tcase jmp:\n\t\t\t\tcur=c.num;\n\t\t\t\tbreak;\n\t\t\tcase arc:\n\t\t\t\ttmp=reg[mid(c.type)];\n\t\t\t\treg[low(c.type)]=-tmp;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase mov:\n\t\t\t\tswitch(high(c.type)){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tif(debug)cout<<\"mov \"<<(char)('A'+mid(c.type))<<\" to \"\n\t\t\t\t\t\t\t<<(char)('A'+low(c.type))<<endl;\n\t\t\t\t\t\ttmp=reg[mid(c.type)];\n\t\t\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\ttmp=mem[reg[mid(c.type)]];\n\t\t\t\t\t\tif(debug)cout<<\"mov &\"<<(char)('A'+mid(c.type))<<\":\"<<tmp<<\" to \"\n\t\t\t\t\t\t\t<<(char)('A'+low(c.type))<<endl;\n\t\t\t\t\t\t\n\t\t\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\ttmp=reg[mid(c.type)];\n\t\t\t\t\t\tif(debug)cout<<\"mov \"<<(char)('A'+mid(c.type))<<\" to &\"\n\t\t\t\t\t\t\t<<(char)('A'+low(c.type))<<\":\"<<reg[low(c.type)]<<endl;\n\t\t\t\t\t\t\n\t\t\t\t\t\tmem[reg[low(c.type)]]=tmp;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\ttmp=c.num;\n\t\t\t\t\t\tif(debug)cout<<\"mov \"<<tmp<<\" to \"\n\t\t\t\t\t\t\t<<(char)('A'+low(c.type))<<endl;\n\t\t\t\t\t\treg[low(c.type)]=tmp;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase put:\n\t\t\t\tif(debug)cout<<\"put \"<<(char)('A'+low(c.type))<<endl;\n\t\t\t\tcout<<reg[low(c.type)]<<\" \";\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase push:\n\t\t\t\tstack[top++]=reg[0];\n\t\t\t\tstack[top++]=reg[1];\n\t\t\t\tstack[top++]=reg[2];\n\t\t\t\tif(debug)cout<<\"push ABC\"<<endl;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase pop:\n\t\t\t\treg[2]=stack[--top];\n\t\t\t\treg[1]=stack[--top];\n\t\t\t\treg[0]=stack[--top];\n\t\t\t\tif(debug)cout<<\"pop ABC\"<<endl;\n\t\t\t\tcur++;\n\t\t\t\tbreak;\n\t\t\tcase hlt:\n\t\t\t\treturn;\n\t\t\t\tbreak;\n\t\t}\n\t\tif(debug){\n\t\t\tcout<<\"A:\"<<reg[0]<<\" \";\n\t\t\tcout<<\"B:\"<<reg[1]<<\" \";\n\t\t\tcout<<\"C:\"<<reg[2]<<\" \";\n\t\t\tcout<<\"D:\"<<reg[3]<<\" \";\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}\n//\u7136\u540e\u662f\u7b80\u6d01\u7684\u4e3b\u7a0b\u5e8f\nint main(){\n\tchar *p=cpp;\n\tchar c=getchar();\n\twhile(c!=-1){\n\t\t*p=c;\n\t\tp++;\n\t\tc=getchar();\n\t}\n\t//calc::build();\n\tloadvar();\n\tcomplie();\n\trun();\n}\n```\n~~\u5982\u679c\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u8bd5\u7740\u628a\u7f16\u8bd1\u540e\u7684\u7a0b\u5e8f\u8f93\u51fa\uff0c\u7136\u540e\u5904\u7406\u6210\u53ef\u6267\u884c\u6587\u4ef6~~\n\n\u7136\u540e\u6211\u51fa\u73b0\u7684\u4e09\u5904\u9519\u8bef\uff1a\n\n\u4e0d\u4fdd\u8bc1\u6709\u53d8\u91cf\u5b9a\u4e49(#1)\n\n\u53d8\u91cf\u540d\u8f83\u957f\u65f6\u4f1a\u7206int(#3)\n\n\u5728\u8868\u8fbe\u5f0f\u6811\u4e0adfs\u65f6\uff0c\u5355\u4e2a\u6570\u5b57\u6216\u53d8\u91cf\u6709\u76f8\u53cd\u6570\u6807\u8bb0\u65f6\uff0c\u6ca1\u6709\u7f16\u8bd1\u5bf9\u5e94\u547d\u4ee4(#5)",
        "postTime": 1553263247,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3695 \u3010CYaRon!\u8bed\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u6a21\u62df\u5373\u53ef\u3002\n\n---\n\n\u518d\u6709\u5176\u4ed6\u5185\u5bb9\u5c31\u662f\u5b57\u7b26\u4e32\u7684\u8bfb\u5165\u4e86\u5427\u3002\n\n\u4e0b\u4e86\u4e09\u7ec4\u6570\u636e\u624dAC\uff0c\u4e0d\u5f97\u4e0d\u8bf4#10\u5f88\u5f3a\u3002\n\n\u5728\u8fd9\u4e2a\u9898\u4e2d\uff0c\u51fd\u6570\u601d\u60f3\u5f88\u91cd\u8981\u3002\u56e0\u4e3a\u6709\u5f88\u591a\u5730\u65b9\u4f1a\u8c03\u7528\u76f8\u540c\u7684\u5185\u5bb9\uff0c\u751a\u81f3\u6709\u65f6\u5019\u6709\u5927\u7bc7\u5e45\u76f8\u4f3c\u7684\u4e24\u90e8\u5206\u53ef\u4ee5\u5408\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\u518d\u52a0`if`\u5224\u65ad\u3002\n\n\u5faa\u73af\u7684\u5d4c\u5957\u662f\u6700\u9ebb\u70e6\u7684\u5185\u5bb9\uff0c\u5176\u6b21\u662f\u53d8\u91cf\u6c42\u503c\u3002\u8fd8\u597d\u6ca1\u6709\u6570\u7ec4\u5957\u6570\u7ec4\uff08\u5927\u4e0d\u4e86\u591a\u51e0\u4e2a\u9012\u5f52\uff09\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u5f00\u5f97\u6bd4\u8f83\u5c0f\u3002\u53d8\u91cf\u53ef\u4ee5\u7528`std::map`\u6620\u5c04\uff0c\u7136\u540e\u7528\u7f16\u53f7\u7edf\u4e00\u5b58\u8d77\u6765\u3002\n\n\u5bf9\u4e8e\u53d8\u91cf\u6c42\u503c\u800c\u8a00\uff0c\u4e00\u4e2a\u662f**\u5355\u9879\u5f0f\u6c42\u503c**\uff0c\u4e00\u4e2a\u662f**\u591a\u9879\u5f0f(\u4ec5\u52a0\u51cf)\u6c42\u503c**\uff0c\u5176\u4e2d\u53c8\u8981\u8003\u8651\u662f\u5426\u662f\u6570\u7ec4\u7684\u60c5\u51b5\u3002\u6211\u5199\u4e86\u4e00\u4e2a`getnext(int &i)`\u51fd\u6570\uff0c\u7528\u6765\u83b7\u53d6\u4ece$i$\u5f00\u59cb\u7684\u7b2c\u4e00\u4e2a**\u53ef\u6c42\u7684**\u5f0f\u5b50\u3002\u5982\u679c`a`\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u90a3\u4e48`a[7]`\u662f\u4e00\u4e2a\u53ef\u6c42\u7684\u5f0f\u5b50\u800c`a`\u4e0d\u662f\u3002\u7136\u540e\u7528\u5b57\u7b26\u4e32\u5904\u7406\u4f9d\u6b21\u8003\u8651\u6b63\u8d1f\u5373\u53ef\u3002\n\n\u5982\u679c\u7ecf\u5e38\u4f7f\u7528gdb\u6216\u67d0\u4e9bIDE\u7684\u81ea\u5e26debug\u5668\u7684\u8bdd\uff0c\u5faa\u73af\u5d4c\u5957\u7684\u601d\u8def\u6bd4\u8f83\u5bb9\u6613\u8054\u60f3\uff0c\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6~~\u5e9f\u8bdd~~\u3002\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cftot\u5b58\u50a8\u5f53\u524d\u505a\u5230**\u5faa\u73af\u7684**\u7b2c\u51e0\u884c\u4e86\uff0c\u5e26\u5165\u5185\u5c42\u5faa\u73aftot\u4e0d\u53d8\uff0c\u5faa\u73af\u7ed3\u675f\u65f6\u7f6etot\u4e3aen+2\uff08en\u6307\u5faa\u73af\u7ed3\u675f\u7684}\u5b57\u7b26\u6240\u5728\u884c\u7684\u524d\u4e00\u884c\uff09\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u662f**\u5faa\u73af\u4e2d**\u8bed\u53e5\u4f1a\u88ab\u4f7f\u7528\u591a\u904d\uff0c\u8fd9\u65f6\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7\u6807\u51c6\u8bfb\u5165\uff0c\u800c\u8981\u628a\u8fd9\u4e9b\u8bed\u53e5\u5168\u90e8\u5b58\u8d77\u6765\u3002\u8bfb\u4e00\u884c\uff08\u7a7a\u683c\u4e5f\u8bfb\uff09\u7528\u5230\u7684\u662f`gets(char *s)`\uff0c\u5f53\u8bfb\u5230EOF\u65f6\u8fd4\u56deNULL\u3002\n\n\u6ce8\u610f\u8fd9\u4e2a\u9898\u7684\u7f29\u8fdb\u548c\u7a7a\u683c\u90fd\u4e0d\u786e\u5b9a\u3002\u6240\u4ee5\u9700\u8981\u5199\u4e00\u4e2a`jump()`\uff0c\u5c31\u662f\u4f7f$i$\u8df3\u8fc7\u524d\u9762\u6240\u6709\u7684\u8fde\u7eed\u7a7a\u683c\u3002\u8fd8\u6709\u5176\u4ed6\u5b57\u7b26\u7684\u8df3\u8fc7\u989d\u5916\u5199\u4e00\u70b9\u4e5f\u4e0d\u600e\u4e48\u9ebb\u70e6\u3002\n\n\u611f\u8c22\u81ea\u5df1\u7684\u575a\u6301\u3002\n\n## Code\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<map>\n#define jump() do{while(s[i]==' ')++i;}while(0)\nusing namespace std;\nmap<string,int> mp;\nint a[55][1010];\nint cnt;\nint st[55],len[55];\nchar s[1000];\nint getnext(int &i)//\u83b7\u5f97\u4ecei\u5f00\u59cb\u63a5\u4e0b\u6765\u4e00\u6bb5\u5f0f\u5b50\u7684\u503c i\u88ab\u7f6e\u4e3a\u6700\u540e\u4e00\u4e2a\u4e0b\u6807+1\n{\n    jump();\n    int x=0;\n    if(s[i]>='0'&&s[i]<='9')\n    {\n        for(;s[i]>='0'&&s[i]<='9';++i)\n            x=x*10+s[i]-'0';\n        return x;\n    }\n    string ss=\"\";\n    for(;s[i]>='a'&&s[i]<='z';++i)\n        ss+=s[i];\n    int t=mp[ss];\n    if(len[t]==1)\n        return a[t][0];\n    jump();\n    ++i;\n    int ans=a[t][getnext(i)-st[t]];\n    ++i;\n    return ans;\n}\nint getstring(int &i)//\u83b7\u5f97\u4ecei\u5f00\u59cb\u7684\u4e00\u4e2a\u591a\u9879\u5f0f\u7684\u503c\n{\n    int ans=0,flag=1;\n    jump();\n    while((s[i]>='0'&&s[i]<='9')||(s[i]>='a'&&s[i]<='z')||s[i]=='+'||s[i]=='-')\n    {\n        flag=(s[i]=='-')?-1:1;\n        while(s[i]==' '||s[i]=='+'||s[i]=='-')\n            ++i;\n        ans+=flag*getnext(i);\n        jump();\n    }\n    return ans;\n}\nvoid Set()//\u8d4b\u503c\n{\n    int i=0;\n    jump();\n    i+=4;\n    jump();\n    string ss=\"\";\n    for(;s[i]>='a'&&s[i]<='z';++i)\n        ss+=s[i];\n    int t=mp[ss],u=0,v=0;\n    if(len[t]==1)\n    {\n        while(s[i]==' '||s[i]==',')\n            ++i;\n        a[t][0]=getstring(i);\n    }\n    else\n    {\n        ++i;\n        u=getstring(i);\n        //i\u662f']'\n        ++i;\n        while(s[i]==' '||s[i]==',')\n            ++i;\n        a[t][u-st[t]]=getstring(i);\n    }\n}\nvoid print()\n{\n    int i=0;\n    jump();\n    i+=7;\n    jump();\n    while(s[i]==' '||s[i]==',')\n        ++i;\n    printf(\"%d \",getstring(i));\n}\n\nvoid qaq();\nbool ihu(int ty);\nvoid hor();\nvoid whi();\n\nchar F[500][100];\nint tot=0;\n\nbool isend()//\u662f\u5426\u7ed3\u5c3e \u5224\u65adihu\u3001hor\u548cwhile\u662f\u5426\u7ed3\u675f\n{\n    if(!tot)\n        gets(s);\n    else\n    {\n        int i=0;\n        for(;F[tot][i]!='\\0';++i)\n            s[i]=F[tot][i];\n        s[i]='\\0';\n        ++tot;\n    }\n    int i=0;\n    jump();\n    return (s[i]=='}');\n}\n\nint main()\n{\n    gets(s);\n    int i=1,flag=0;\n    jump();\n    if(s[i]=='v')//\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u5c31\u8981\u8df3\u8fc7\n{\n    gets(s);\n    while(s[0]!='}')\n    {\n        string ss=\"\";\n        int i=0;\n        jump();\n        for(;s[i]>='a'&&s[i]<='z';++i)\n            ss+=s[i];\n        mp[ss]=++cnt;\n        jump();\n        if(s[i+1]=='i')\n            st[cnt]=len[cnt]=1;\n        else\n        {\n            i+=10;\n            while(s[i]==' '||s[i]==',')\n                ++i;\n            //\u9017\u53f7\u524d\u540e\u7684\u7a7a\u683c\n            st[cnt]=getnext(i);\n            while(s[i]==' '||s[i]=='.')\n                ++i;\n            len[cnt]=getnext(i);\n            len[cnt]-=st[cnt]-1;\n        }\n        gets(s);\n    }\n}\n    else\n        flag=1;\n    \n    while(flag||gets(s)!=NULL)\n    {\n        flag=0;\n        if(!strlen(s))\n            continue;\n        qaq();\n        tot=0;\n    }\n    return 0;\n}\nvoid qaq()//\u6267\u884c\u8bed\u53e5\n{\n    int i=0;\n    jump();\n    if(s[i]=='{')\n    {\n        ++i;\n        jump();\n        if(s[i]=='i')\n            ihu(0);\n        else if(s[i]=='w')\n            whi();\n        else\n            hor();\n    }\n    else if(s[i+1]=='s')\n        Set();\n    else\n        print();\n}\n\nbool ihu(int ty)\n{\n    int i=0;\n    jump();\n    ++i;\n    jump();\n    i+=3+ty*2;\n    jump();\n    char tmp[2]={s[i],s[i+1]};\n    i+=2;\n    if(tmp[0]=='n')\n        ++i;\n    while(s[i]==' '||s[i]==',')\n        ++i;\n    int x=getstring(i);\n    while(s[i]==' '||s[i]==',')\n        ++i;\n    int y=getstring(i);\n    bool sat;\n    if(tmp[0]=='e')\n        sat=(x==y);\n    else if(tmp[0]=='l')\n    {\n        if(tmp[1]=='t')\n            sat=(x<y);\n        else\n            sat=(x<=y);\n    }\n    else if(tmp[0]=='n')\n        sat=(x!=y);\n    else\n    {\n        if(tmp[1]=='t')\n            sat=(x>y);\n        else\n            sat=(x>=y);\n    }\n    if(ty)\n        return sat;\n    int br=1;\n    if(!sat)\n        while(1)\n        {\n            if(isend()&&br==1)\n                return 0;\n            i=0;\n            jump();\n            if(s[i]=='{')\n                ++br;\n            if(s[i]=='}')\n                --br;\n        }\n    else\n    {\n        while(1)\n        {\n            if(isend()&&br==1)\n                return 0;\n            if(!strlen(s))\n                continue;\n            qaq();\n        }\n    }\n}\nvoid hor()\n{\n    int i=0;\n    jump();\n    ++i;\n    jump();\n    i+=3;\n    jump();\n    string ss=\"\";\n    for(;s[i]>='a'&&s[i]<='z';++i)\n        ss+=s[i];\n    int t=mp[ss];\n    int *ii,u;//\u7528\u6307\u9488\u5f15\u7528\u503c\u66f4\u52a0\u65b9\u4fbf\n    if(len[t]==1)\n        ii=&a[t][0];\n    else\n    {\n        ++i;\n        u=getstring(i);\n        ii=&a[t][u-st[t]];\n    }\n    while(s[i]==' '||s[i]==',')\n        ++i;\n    int from=getstring(i);\n    while(s[i]==' '||s[i]==',')\n        ++i;\n    int to=getstring(i);\n    int st=1,en=0,l=0;\n    if(tot)\n        st=tot;\n    int br=1;\n    while(1)\n    {\n        if(isend()&&br==1)//\u6ce8\u610f\u4e0d\u8981\u627e\u5230\u522b\u4eba\u7684\u53f3\u62ec\u53f7\u4e86 \u4e0b\u540c\n        {\n            if(tot)\n                en=tot-2;//en\u662f\u53f3\u62ec\u53f7\u4e0a\u9762\u4e00\u884c\u76f8\u5bf9st(1)\u7684\u7f16\u53f7\n            else\n                en=l;\n            break;\n        }\n        if(!strlen(s))//\u6ce8\u610f\u7a7a\u4e32\u5982\u679c\u8df3\u8fc7\u4f1a\u65b9\u4fbf\u4e00\u4e9b\n            continue;\n        ++l;\n        i=0;\n        jump();\n        if(s[i]=='{')\n            ++br;\n        if(s[i]=='}')\n            --br;\n        if(!tot)\n        {\n            i=0;\n            for(;s[i]!='\\0';++i)\n                F[l][i]=s[i];\n            F[l][i]='\\0';\n        }\n    }\n    for(*ii=from;*ii<=to;++(*ii))\n    {\n        tot=st;\n        while(tot<=en)\n        {\n            i=0;\n            for(;F[tot][i]!='\\0';++i)\n                s[i]=F[tot][i];\n            s[i]='\\0';\n            ++tot;\n            qaq();\n        }\n    }\n    tot=en+2;\n}\n\n\nvoid whi()\n{\n    int i=0;\n    char p[1000];\n    for(;s[i]!='\\0';++i)\n        p[i]=s[i];\n    p[i]='\\0';\n    int st=0,en=0,l=0;\n    if(tot)//\u6700\u5916\u5c42\u4e0d\u9700\u8981\u5904\u7406\u8fd9\u91cc\n    {\n        st=tot-1;\n        ++tot;\n    }\n\n    int br=1;\n    while(1)\n    {\n        if(isend()&&br==1)\n        {\n            if(tot)\n                en=tot-2;\n            else\n                en=l;\n            break;\n        }\n        if(!strlen(s))\n            continue;\n\n        i=0;\n        ++l;\n        jump();\n        if(s[i]=='{')\n            ++br;\n        if(s[i]=='}')\n            --br;\n        if(!tot)\n        {\n            i=0;\n            for(;s[i]!='\\0';++i)\n                F[l][i]=s[i];\n            F[l][i]='\\0';\n        }\n    }\n\n    while(1)\n    {\n        tot=st+1;\n        i=0;\n        for(;p[i]!='\\0';++i)\n            s[i]=p[i];\n        s[i]='\\0';\n        if(!ihu(1))\n        {\n            tot=en+2;\n            return;\n        }\n\n        while(tot<=en)\n        {\n            i=0;\n            for(;F[tot][i]!='\\0';++i)\n                s[i]=F[tot][i];\n            s[i]='\\0';\n            ++tot;\n            qaq();\n        }\n    }\n}\n```",
        "postTime": 1550187633,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3695 \u3010CYaRon!\u8bed\u3011"
    },
    {
        "content": "# P3695 CYaRon!\u8bed \u9898\u89e3\n\n\u8bf4\u5b9e\u8bdd\u8fd9\u9053\u6a21\u62df\u9898\u5e76\u4e0d\u96be\uff0c~~\u800c\u4e14\u4ee3\u7801\u91cf\u53ea\u6709 [3.30k](https://www.luogu.com.cn/record/86095503)(%%% 1.95k \u5e26\u5e08)~~\u3002\n\n\u5728\u6b63\u5f0f\u505a\u8fd9\u9053\u9898\u76ee\u4e4b\u524d\uff0c\u6211\u4eec\u53d1\u73b0\u6240\u6709\u7684\u7a7a\u683c\u548c\u6ce8\u91ca\u90fd\u662f **\u4e0d\u5fc5\u8981** \u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4e0d\u8bfb\u5165\u7a7a\u683c\u548c\u6ce8\u91ca\u3002\n\n\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u5728 $\\texttt{CYaRon}$ \u4e2d\u6362\u884c\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u4efb\u4f55\u6307\u4ee4\u90fd\u72ec\u5360\u4e00\u884c\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u4fbf\u6377\u5730\u5206\u6790\u4e00\u4e2a\u4e2a\u6307\u4ee4\u3002\n\n\u4ee5\u4e0b\u5c31\u662f\u4e00\u4e2a\u57fa\u7840\u7684\u8bfb\u5165\u4ee3\u7801\u3002\n```cpp\ninline char getc() {\n    char ch = getchar();\n    if (ch == '#')\n        while (ch != '\\n' && ch != EOF) ch = getchar();\n    return ch;\n}\nint n;\nvoid readin() {\n    char tmp;\n    while ((tmp = getc()) != EOF) {\n        if (tmp == ' ' || tmp == '\\t') continue;\n        if (tmp == '\\n')\n            n++;\n        else\n            c[n][len[n]++] = tmp;\n    }\n    n++;\n}\n```\n\u5efa\u7acb\u4e00\u4e9b\u5173\u4e8e\u5b57\u7b26\u4e32\u4f7f\u7528\u7684\u51fd\u6570\uff08\u7528 STL \u4e5f\u662f\u53ef\u4ee5\u7684\uff09\uff0c\u5177\u4f53\u5305\u62ec\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u67d0\u4e2a\u5b50\u4e32\u548c\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c\uff0c\u4ee5\u53ca\u627e\u5230\u4e00\u4e2a\u5b50\u4e32\u4e2d\u67d0\u5b57\u7b26\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff1a\n```cpp\ninline bool same(char str[], int l, int r, const char p[]) {\n    int len = strlen(p);\n    if (len != (r - l)) return 0;\n    for (int i = l; i < r; i++)\n        if (str[i] != p[i - l]) return 0;\n    return 1;\n}\ninline int find(int x, int l, int r, char v) {\n    for (int i = l; i < r; i++)\n        if (c[x][i] == v) return i;\n    return -1;\n}\n```\n\u7136\u540e\u5c31\u7801\u4e00\u4e2a\u7b80\u5355\u7684\u5904\u7406\u6846\u67b6\uff1a\u89e3\u51b3 $x$ \u884c\u5f00\u5934\u7684\u8bed\u53e5\u5757\u7684\u6307\u4ee4\uff0c\u5e76\u8df3\u81f3\u8bed\u53e5\u5757\u672b\u5c3e\u3002\n```cpp\ninline void solve(int& x) { //\u89e3\u51b3x\u884c\u5f00\u5934\u7684\u8bed\u53e5\u5757\u7684\u6307\u4ee4\uff0c\u5e76\u8df3\u81f3\u8bed\u53e5\u5757\u672b\u5c3e\n    if (len[x] == 0) return;\n    if (same(c[x], 0, 7, \":yosoro\"))\n        printf(\"%d \", getExpression(x, 7, len[x]));\n    else if (same(c[x], 0, 5, \"{vars\"))\n        solvevar(x);\n    else if (same(c[x], 0, 4, \":set\")) {\n        int f1 = find(x, 4, len[x], ',');  //,\u7684\u4f4d\u7f6e\n        getVariable(x, 4, f1) = getExpression(x, f1 + 1, len[x]);\n    }\n    else if (same(c[x], 0, 4, \"{ihu\"))\n        solveihu(x);\n    else if (same(c[x], 0, 4, \"{hor\"))\n        solvehor(x);\n    else if (same(c[x], 0, 6, \"{while\"))\n        solvewhile(x);\n}\nint main() {\n    readin();\n    for (int i = 0; i < n; i++)\n        solve(i);\n    return 0;\n}\n```\n\n\u8fd9\u6837\u6240\u6709\u6709\u5173\u8bfb\u5165\u7684+\u5904\u7406\u5c31\u5b8c\u6210\u4e86\uff0c\u4e0b\u9762\u5c31\u662f\u5206\u6790\u4e00\u4e2a\u4e00\u4e2a\u6307\u4ee4\u3002\n\n\u5b9e\u9645\u4e0a\uff0c`set`\uff0c `yosoro`\uff0c `vars` \u672c\u8eab\u5904\u7406\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u53ea\u8981\u66b4\u529b\u6267\u884c\u6307\u4ee4\u5373\u53ef, \u8fd9\u9053\u9898\u5904\u7406\u7684\u6838\u5fc3\u95ee\u9898\u5728\u4e8e\u4ee5\u4e0b2\u4e2a\uff1a\n\n- \u8868\u8fbe\u5f0f\u7684\u6c42\u503c (\u91cd\u4e2d\u4e4b\u91cd)\uff1b\n- \u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u7684\u5904\u7406\u3002\n\n## \u8868\u8fbe\u5f0f\n\n\u4e00\u5f00\u59cb\u4f60\u53ef\u80fd\u4ee5\u4e3a\u8868\u8fbe\u5f0f\u5904\u7406\u5f88\u7b80\u5355\uff0c\u201c\u4e0d\u5c31\u662f\u4e00\u6b65\u4e00\u6b65\u7b97\u51fa\u6765\u5417\u201d\u3002\n\n\u5b9e\u9645\u4e0a\u4f60\u4f1a\u9047\u5230\u4e00\u4e2a\u5927\u95ee\u9898\uff1a\u6570\u7ec4\u8bbf\u95ee\u3002\n\n\u6570\u7ec4\u4e0b\u6807\u4e2d\u4e5f\u662f\u8868\u8fbe\u5f0f\uff0c\u8fd9\u5c31\u5f88\u8ba8\u538c\u3002\u867d\u7136\u9898\u76ee\u4e2d\u8bf4\u6ca1\u6709\u5d4c\u5957\u6570\u7ec4\u8bbf\u95ee\uff0c\u4f46\u662f\u53ef\u4ee5\u5728\u4e0b\u6807\u4e2d\u5d4c\u5957\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\n\n\u800c\u4e14\u6570\u7ec4\u8bbf\u95ee\u7684\u65f6\u5019\u5b83\u5c31\u548c\u53d8\u91cf\u5fc5\u987b\u5206\u5f00\u6765\u505a\uff0c\u6240\u4ee5\u4f60\u5f88\u96be\u7528\u4e00\u4e2a\u7c7b\u53bb\u4ee3\u88682\u79cd\u7c7b\u578b\u7684\u6570\u636e\u6765\u7b80\u5316\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6240\u4ee5\u8fd9\u4e1c\u897f\u5c31\u5f88\u68d8\u624b\u3002\n\n\u6211\u5bf9\u8868\u8fbe\u5f0f\u7684\u5904\u7406\u65b9\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\n\n\u627e\u5230\u4e0d\u5728\u6570\u7ec4\u7684\u65b9\u62ec\u53f7\u4e2d\u7684\u51cf\u53f7\u548c\u52a0\u53f7\uff0c\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u6570\u3002\n\n\u5bf9\u8fd9\u4e9b\u6570\u8fdb\u884c\u5355\u72ec\u7684\u5904\u7406\uff1a\n\n\u5982\u679c\u5206\u51fa\u7684\u6570\u662f\u6570\u7ec4\uff0c\u5219\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u6570\u7ec4\u4e0b\u6807\u4e2d\u7684\u8868\u8fbe\u5f0f\uff0c\u5426\u5219\u76f4\u63a5\u8fd4\u56de\u53d8\u91cf\u503c\u6216\u5e38\u91cf\u3002\n\n\u7a0b\u5e8f\u4e2d $x,l,r$ \u8868\u793a\u8ba1\u7b97\u7b2c $i$ \u884c\u53bb\u7a7a\u683c\u540e\u7b2c $l$ \u81f3 $r$ \u4e2a\u5b57\u7b26\u6784\u6210\u7684\u8868\u8fbe\u5f0f\u7684\u548c\uff0c\u5176\u4e2d $\\texttt{tablearr}$ \u548c $\\texttt{tableint}$ \u5206\u522b\u5b58\u6574\u5f62\u548c\u6570\u7ec4\u3002\n\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff08\u5229\u7528\u5728\u6570\u7ec4\u4e0b\u6807\u4e2d\u4e0d\u65ad\u8fed\u4ee3\u6570\u7ec4\u8bbf\u95ee\uff09\uff0c\u662f\u53ef\u4ee5\u4f18\u5316\u7684\uff0c\u4f46\u662f\u672c\u9898\u76ee\u5e76\u6ca1\u6b64\u60c5\u51b5\uff0c\u56e0\u4e3a\u4fdd\u8bc1\u4e0b\u6807\u4e0d\u4f1a\u5d4c\u5957\u3002\n\n\u5b9e\u73b0\u548c\u4e0b\u9762\u5dee\u4e0d\u591a\u3002\n```cpp\ninline int stoint(int x, int l, int r) {\n    int num = 0, flag = 1;\n    for (int i = l; i < r; i++) num = (num << 1) + (num << 3) + (c[x][i] ^ 48);\n    return num * flag;\n}\ninline string getstr(int x, int l, int r) {\n    string ans = \"\";\n    for (int i = l; i < r; i++) ans.push_back(c[x][i]);\n    return ans;\n}\ninline int& getVariable(int x, int l, int r) {\n    if (c[x][r - 1] != ']') return tableint[getstr(x, l, r)];\n    int ll = find(x, l, r, '[');\n    return tablearr[getstr(x, l, ll)][getExpression(x, ll + 1, r - 1)];\n}\ninline int getnum(int x, int l, int r) {\n    if (isdigit(c[x][l])) return stoint(x, l, r);\n    return getVariable(x, l, r);\n}\ninline int getExpression(int x, int l, int r) {\n    int ans = 0, ll = l, flag = 1, lf = 0;\n    for (int i = l; i < r; i++) {\n        if (c[x][i] == '[') ++lf;\n        if (c[x][i] == ']') --lf;\n        if (!lf && c[x][i] == '+') ans += flag * getnum(x, ll, i), flag = 1, ll = i + 1;\n        if (!lf && c[x][i] == '-') ans += flag * getnum(x, ll, i), flag = -1, ll = i + 1;\n    }\n    ans += flag * getnum(x, ll, r);\n    return ans;\n}\n```\n## \u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\n\n\u9996\u5148\u662f `ihu` \u8bed\u53e5\uff1a\u76f4\u63a5\u627e\u5230\u9017\u53f7\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5224\u65ad\u4e24\u4e2a\u8868\u8fbe\u5f0f\u7684\u5173\u7cfb\u5373\u53ef\u3002\u5982\u679c\u4ed6\u4eec\u7684\u5173\u7cfb\u7b26\u5408\u8981\u6c42\uff0c\u5219\u4e00\u884c\u4e00\u884c\u6267\u884c\uff0c\u76f4\u5230\u73b0\u5728\u7684\u884c\u5934\u662f\u53f3\u82b1\u62ec\u53f7\u3002\u5982\u679c\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5c31\u4e00\u76f4\u626b\u5230\u5de6\u62ec\u53f7\u4e0e\u53f3\u62ec\u53f7\u4e00\u6837\u591a\u5373\u53ef\u3002\n\n```cpp\ninline bool checkOp(string s, int x, int y) {\n    if (s == \"lt\") return x < y;\n    if (s == \"gt\") return x > y;\n    if (s == \"le\") return x <= y;\n    if (s == \"ge\") return x >= y;\n    if (s == \"eq\") return x == y;\n    if (s == \"neq\") return x != y;\n    return 0;\n}\nvoid solveihu(int& x) {\n    int f1 = find(x, 4, len[x], ','), f2 = find(x, f1 + 1, len[x], ','); // f1\u8868\u793a\u7b2c\u4e00\u4e2a','f2\u8868\u793a\u7b2c\u4e8c\u4e2a','\n    string s1 = getstr(x, 4, f1);\n    int x1 = getExpression(x, f1 + 1, f2), x2 = getExpression(x, f2 + 1, len[x]);\n    if (checkOp(s1, x1, x2)) {\n        ++x;\n        while (c[x][0] != '}') solve(x), ++x;\n    } else {\n        int lfsum = 1;\n        ++x;\n        while (lfsum) {\n            if (c[x][0] == '{') ++lfsum;\n            if (c[x][0] == '}') --lfsum;\n            ++x;\n        }\n        --x;\n    }\n}\n```\n`while` \u7684\u5904\u7406\u770b\u4f3c\u80af\u9ebb\u70e6\uff0c\u5b9e\u5219\u5c31\u662f\u5728 `ihu` \u7684\u5904\u7406\u6700\u540e\u518d\u91cd\u65b0\u9012\u8c03\u7528\u4e00\u4e0b\u81ea\u5df1\u5c31\u53ef\u4ee5\u4e86\u3002\u56e0\u4e3a `while` \u8bed\u53e5\u7684\u683c\u5f0f\u51e0\u4e4e\u548c `ihu` \u4e00\u6a21\u4e00\u6837\uff0c\u56e0\u6b64\u76f4\u63a5\u590d\u5236\u4e0b\u6765\u5373\u53ef\uff08\u5b9e\u9645\u4e0a\u4f60\u53ef\u4ee5\u7ed9 `if` \u52a0\u4e00\u4e2a\u8fd4\u56de\u503c\u8868\u793a\u662f\u5426\u6267\u884c\uff0c\u7136\u540e\u5728 `while` \u4e2d\u8c03\u7528 `if` \u4e5f\u662f\u53ef\u4ee5\u7684\uff09\u3002\n\n\u6709\u4e00\u70b9\u503c\u5f97\u6ce8\u610f\uff1a`while` \u8bed\u53e5\u76842\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u90fd\u662f\u53ef\u80fd\u6539\u53d8\u7684\u3002\n```cpp\nvoid solvewhile(int& x) {\n    int tmp = x, f1, f2;  // f1\u8868\u793a\u7b2c\u4e00\u4e2a','f2\u8868\u793a\u7b2c\u4e8c\u4e2a','\n    f1 = find(x, 6, len[x], ','), f2 = find(x, f1 + 1, len[x], ',');\n    string s1 = getstr(x, 6, f1);\n    int x1 = getExpression(x, f1 + 1, f2), x2 = getExpression(x, f2 + 1, len[x]);\n    if (checkOp(s1, x1, x2)) {\n        ++x;\n        while (c[x][0] != '}') solve(x), ++x;\n        solvewhile(tmp);\n    } else {\n        int lfsum = 1;\n        ++x;\n        while (lfsum) {\n            if (c[x][0] == '{') ++lfsum;\n            if (c[x][0] == '}') --lfsum;\n            ++x;\n        }\n        --x;\n    }\n}\n```\n`hor` \u5b9e\u9645\u4e0a\u5c31\u662f\u5728 `while` \u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e2a\u521d\u59cb\u503c\u548c\u4e0d\u65ad\u81ea\u589e\u800c\u5df2\u3002\n```cpp\nvoid runhor(int& x, int& v, int fl, int fr) {\n    int tmp = x, f = getExpression(x, fl, fr);\n    if (v <= f) {\n        ++x;\n        while (c[x][0] != '}') solve(x), ++x;\n        ++v;\n        runhor(tmp, v, fl, fr);\n    } else {\n        int lfsum = 1;\n        ++x;\n        while (lfsum) {\n            if (c[x][0] == '{') ++lfsum;\n            if (c[x][0] == '}') --lfsum;\n            ++x;\n        }\n        --x;\n    }\n}\ninline void solvehor(int& x) {\n    int f1 = find(x, 4, len[x], ','), f2 = find(x, f1 + 1, len[x], ',');  // f1\u8868\u793a\u7b2c\u4e00\u4e2a','\uff0cf2\u8868\u793a\u7b2c\u4e8c\u4e2a','\n    int& num1 = getVariable(x, 4, f1) = getExpression(x, f1 + 1, f2);\n    return runhor(x, num1, f2 + 1, len[x]);\n}\n```\n## \u5176\u4ed6\n\n`vars` \u8bed\u53e5\u5c31\u4e00\u884c\u4e00\u884c\u626b\uff0c\u7136\u540e\u770b\u6700\u540e\u662f\u4e0d\u662f `]` \u6765\u786e\u5b9a\u662f\u6570\u7ec4\u8fd8\u662f\u6574\u5f62\u3002\n```cpp\ninline void solvevar(int& pos) {\n    ++pos;\n    int f1, f2, f3;  //:\u7684\u4f4d\u7f6e ,\u7684\u4f4d\u7f6e .\u7684\u4f4d\u7f6e\n    string name;\n    while (c[pos][0] != '}') {\n        f1 = find(pos, 0, len[pos], ':');\n        if (c[pos][len[pos] - 1] != ']') {\n            tableint[getstr(pos, 0, f1)] = 0;\n        } else\n            f2 = find(pos, f1 + 1, len[pos], ','), f3 = find(pos, f2 + 1, len[pos], '.'), name = getstr(pos, 0, f1), tablearr[name].fir = stoint(pos, f2 + 1, f3), tablearr[name].pos = ++tot, tablearr[name].clear();\n        ++pos;\n    }\n}\n```\n\u600e\u4e48\u6837\uff0c\u662f\u4e0d\u662f\u611f\u89c9\u53ea\u8981\u4e00\u6b65\u4e00\u6b65\u628a\u95ee\u9898\u5206\u89e3\u51fa\u6765\uff0c\u96be\u5ea6\u4e5f\u4e0d\u5927\u5462\uff1f\n",
        "postTime": 1662596544,
        "uid": 615348,
        "name": "zhouershan",
        "ccfLevel": 7,
        "title": "P3695 CYaRon!\u8bed \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u4e2a\u9898\u770b\u4f3c\u590d\u6742\uff0c\u5176\u5b9e\u672c\u6765\u6ca1\u6709\u591a\u5c11\u5185\u5bb9\uff0c\u4ee5\u6211\u7684\u58f0\u660e\u90e8\u5206\u4e3a\u4f8b\uff1a   \n```cpp\nnamespace CYaRon\n{\n\tvoid Error(const char *s){std::cerr<<s<<std::endl;exit(EXIT_FAILURE);}\n\t\n\tusing siz_type=unsigned;\n\tusing index_type=long long;\n\tusing val_type=int;\n\t//\u8bfb\u5165\u8f93\u51fa\n\tclass Input;\n\tclass Output;\n\t//\u53d8\u91cf\u5b58\u50a8\n\tclass Variable;\n\tclass VarList;\n\t//\u8bed\u53e5\u5757\u7684\u8bfb\u53d6\u4e0e\u6267\u884c\n\tval_type read_expression(char);  //\u8bfb\u53d6\u4e2d\u7f00\u8868\u8fbe\u5f0f\n\tval_type& read_variable(char);   //\u8bfb\u53d6\u53d8\u91cf\uff08\u5f15\u7528\uff09\n\tbool read_con();                 //\u8bfb\u53d6\u6761\u4ef6\u8868\u8fbe\u5f0f\n\tbool read_vars();                //\u8bfb\u53d6\u53d8\u91cf\u58f0\u660e\n\tbool read_instruction();         //\u8bfb\u53d6\u4e00\u6761\u6307\u4ee4\n\t//\u8bfb\u53d6\u4e0e\u8df3\u8fc7\u6307\u4ee4\n\tvoid jump();\n\tvoid run();\n}\n```   \n\u53ef\u4ee5\u770b\u5230\uff0c\u6574\u4e2a\u7a0b\u5e8f\u5b9e\u9645\u9700\u8981\u5b9e\u73b0\u7684\u4e1c\u897f\u5176\u5b9e\u4e0d\u591a\u3002   \n\n_____\n\n\u5148\u6574\u7406\u4e00\u4e0b\u9898\u610f\uff1a  \n\u8bfb\u5165\u4e00\u4e2a $\\texttt{CYaRon!}$ \u8bed\u7a0b\u5e8f\uff0c\u8f93\u51fa\u5176\u8fd0\u884c\u7ed3\u679c\u3002    \n\n\u9700\u8981\u5b9e\u73b0\u7684\u8868\u8fbe\u5f0f\uff1a   \n\u4ec5\u542b + - \u7684\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1b   \n\u6761\u4ef6\u8868\u8fbe\u5f0f\uff1b   \n\n\u9700\u8981\u5b9e\u73b0\u7684\u53d8\u91cf\uff1a   \n\u4ec5\u542b `int` \u7684\u53d8\u91cf/\u6570\u7ec4\uff1b    \n\n\u9700\u8981\u5b9e\u73b0\u7684\u6307\u4ee4\uff1a   \n\u8f93\u51fa\uff1b   \n\u8d4b\u503c\uff1b    \n\u5224\u65ad\uff1b    \n\u5faa\u73af\uff1b   \n\n\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\uff1a   \n\u53d8\u91cf\uff1b   \n\u8868\u8fbe\u5f0f\uff1b   \n\u4ee3\u7801\u5757\u3002    \n_____\n\n\u9996\u5148\u8ba8\u8bba\u4e00\u4e0b\u53d8\u91cf\u5b58\u50a8\u7684\u95ee\u9898\u3002    \n\u8bfb\u8fdb\u6765\u7684\u53d8\u91cf\uff0c\u8981\u5c06\u5176\u5b58\u50a8\u8d77\u6765\uff0c\u5e76\u4e14\u80fd\u591f\u4fee\u6539\u548c\u67e5\u8be2\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u67d0\u79cd\u4e1c\u897f\u6765\u5b58\u50a8\u5b83\u4eec\u3002    \n\u5b58\u50a8\u5668\u5206\u4e24\u4e2a\uff1a**\u53d8\u91cf**\u548c**\u53d8\u91cf\u5217\u8868**\u3002   \n\u53d8\u91cf\uff1a\u4e00\u4e2a\u957f\u5ea6\u4e3a $r-l+1$ \u7684**\u6570\u7ec4**\uff08\u53ef\u7528 `std::vector` \u5b9e\u73b0\uff09\u3002\u5355\u4e2a\u53d8\u91cf\u53ef\u4ee5\u8ba4\u4e3a\u662f\u957f\u5ea6\u4e3a $1$ \u7684\u6570\u7ec4\u3002   \n```cpp\nclass Variable:public std::vector<val_type>\n{\n\tprivate:\n    \tint L,R;\n\tpublic:\n    \tVariable(){}\n        Variable(index_type __minimum_index,index_type __maximun_index):\n        \tstd::vector<val_type>(__maximun_index-__minimum_index+1,0),L(__minimum_index),R(__maximun_index){}\n        val_type& operator[] (const index_type &x){if(x<L||x>R)throw \"\u6570\u7ec4\u8d8a\u754c\";return *(this->begin()+(x-L));}\n};\n```   \n\u521d\u59cb\u5316\u51fd\u6570\u4e3a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\u4e0b\u6807\u533a\u95f4\uff0c\u751f\u6210\u4e00\u4e2a\u76f8\u5e94\u7684\u521d\u503c\u4e3a $0$ \u7684\u6570\u7ec4\u3002     \n\u91cd\u8f7d\u64cd\u4f5c\u7b26 `[]` \u4e3a\u8fd4\u56de\u53d8\u91cf\u5f15\u7528\uff0c\u65b9\u4fbf\u4e4b\u540e\u4fee\u6539\u3002    \n\n\u7531\u4e8e\u672c\u4eba\u521a\u5f00\u59cb\u8111\u5b50\u6ca1\u8f6c\u8fc7\u6765\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b49\u4ef7\u7684\u52a8\u6001\u5206\u914d\u5185\u5b58\u5b9e\u73b0\uff1a   \n```cpp\nclass Variable\n{\n\tprivate:\n\t\tval_type *data;\n\t\tsiz_type len;\n\t\tindex_type L,R;\n\tpublic:\n\t\tVariable(){data=NULL;}\n\t\tVariable(siz_type __len):len(__len),L(0),R(0){data=new val_type[1]();}\n\t\tVariable(index_type __minimum_index,index_type __maximun_index):\n\t\t\tlen(__maximun_index-__minimum_index+1),L(__minimum_index),R(__maximun_index){data=new val_type[len]();}\n\t\tvoid set(index_type __minimum_index,index_type __maximun_index)\n\t\t\t{L=__minimum_index;R=__maximun_index;len=__maximun_index-__minimum_index+1;data=new val_type[len]();}\n\t\t~Variable(){if(data)delete[] data;}\n\t\tval_type& operator[] (const index_type &x){if(x<L||x>R)throw \"\u6570\u7ec4\u8d8a\u754c\";return data[x-L];}\n};\n```\n\n\u53d8\u91cf\u5217\u8868\uff1a\u7528\u6765\u5904\u7406**\u53d8\u91cf\u540d**\u4e0e**\u53d8\u91cf**\u7684\u5bf9\u5e94\u5173\u7cfb\uff08\u53ef\u7528 `std::unordered_map` \u5b9e\u73b0\uff09\u3002     \n```cpp\nclass VarList:public std::unordered_map<std::string,Variable>\n{\n\tpublic:\n\t\tVariable& operator[] (const std::string &x)\n\t\t{\n\t\t\tauto it=this->find(x);\n\t\t\tif(it!=this->end())return it->second;\n\t\t\tthrow \"\u672a\u5b9a\u4e49\u53d8\u91cf\";\n\t\t}\n}varlist;\n```    \n\u540c\u6837\uff0c\u91cd\u8f7d `[]` \u4e3a\u8fd4\u56de\u5f15\u7528\u4fbf\u4e8e\u4fee\u6539\u3002   \n______\n\u8bfb\u5165\u8f93\u51fa\uff1a     \n\u8fd9\u91cc\u662f\u5148\u628a\u6574\u4e2a\u4ee3\u7801\u8bfb\u8fdb\u6765\u518d\u5904\u7406\u7684\u65b9\u5f0f\uff0c\u6211\u5c31\u987a\u4fbf\u7528 `fread` `fwrite` \u5199\u4e86\u4e2a\u5feb\u8bfb\u5feb\u8f93\u3002    \n\u8fd9\u91cc\u6211\u4eec\u8bb2\u4e00\u4e0b\u5982\u4f55\u5904\u7406\u4ee3\u7801\u5757\u5d4c\u5957\u7684\u95ee\u9898\u3002\u6211\u770b\u6709\u4e9b\u5927\u4f6c\u9009\u62e9\u5148\u5f97\u5230\u4ee3\u7801\u5757\u7ed3\u5c3e\u4f4d\u7f6e\u6216\u8005\u5efa\u4ee3\u7801\u6811\uff0c\u4e0d\u8fc7\u6211\u9009\u62e9\u56de\u6eaf\u8bfb\u53d6\u4f4d\u7f6e\uff0c\u9012\u5f52\u5b9e\u73b0\u7684\u65b9\u5f0f\u3002   \n\u8003\u8651\u6bcf\u4e2a\u4ee3\u7801\u5757\u7684\u7ed3\u5c3e\u4e00\u5b9a\u662f `}` \u6216 `EOF` \u3002\u4e8e\u662f\u6211\u4eec\u9009\u62e9\u6267\u884c\u6307\u4ee4\u65f6\u4e00\u65e6\u8bfb\u5230\u8fd9\u4e24\u4e2a\u5b57\u7b26\u5c31\u7ed3\u675f\u6267\u884c\u3002\u5982\u679c\u8bfb\u5230\u5f53\u524d\u6307\u4ee4\u9700\u8981\u65b0\u5f00\u4ee3\u7801\u5757\uff0c\u90a3\u4e48\u5c31\u9012\u5f52\u8fdb\u5165\u65b0\u4ee3\u7801\u5757\u6267\u884c\u6307\u4ee4\u3002     \n\u7b80\u5355\u6765\u8bf4\uff0c\u770b\u4f2a\u4ee3\u7801\uff1a   \n```\nread_instruction()\n\tch=\u8be5\u884c\u7b2c\u4e00\u4e2a\u53ef\u89c6\u5b57\u7b26\n    if ch=='}'||ch==EOF:return false\n    if ch==':':\u6267\u884c\u6307\u4ee4\n    if ch=='{':\n    \t\u5728\u67d0\u79cd\u6761\u4ef6\u4e0b:run()\n    return true\nrun()\n\twhile read_instruction()==true;\n```  \n\u78b0\u5230\u5faa\u73af\uff0c\u6211\u4eec\u9700\u8981\u56de\u6eaf\u5149\u6807\u3002\u6240\u4ee5\u6211\u4eec\u8981\u8bb0\u4e00\u4e2a\u5149\u6807\u3002   \n```cpp\nclass Input\n{\n\tprivate:\n\t\tchar buf[1000010];int t;//\u5149\u6807\n\tpublic:\n\t\tInput(){buf[fread(buf,1,1000000,stdin)]=EOF;t=0;}\n\t\tchar get(){return buf[t++];}\n\t\tint getpos(){return t;}\n\t\tvoid setpos(int _t){t=_t;}//\u79fb\u52a8\u5149\u6807\n}In;\nclass Output\n{\n\tprivate:\n\t\tchar buf[1000010];int t;\n\tpublic:\n\t\tOutput():t(){}\n\t\t~Output(){if(t)fwrite(buf,1,t,stdout);}\n        void putc(char c){buf[t++]=c;}\n\t\tvoid put(int a)//\u5feb\u5199\n\t\t{\n\t\t\tchar buf[20],len=0;\n            if(a<0)putc('-'),a=-a;\n            do buf[len++]=a%10+'0',a/=10; while(a);\n            while(len)putc(buf[--len]);putc(' ');\n\t\t}\n}Out;\n``` \n____\n\u8868\u8fbe\u5f0f\u6c42\u503c\uff1a   \n\u6211\u4eec\u4ee5 `+` `-` \u4e3a\u5206\u9694\u7b26\uff0c\u5c06\u6574\u4e2a\u8868\u8fbe\u5f0f\u5206\u4e3a\u82e5\u5e72\u90e8\u5206\uff0c\u6bcf\u90e8\u5206\u4ec5\u5305\u542b\u4e00\u4e2a\u5e38\u6570\u6216\u4e00\u4e2a\u53d8\u91cf\u3002\u5206\u7c7b\u8bfb\u53d6\u3002\u8bfb\u5230\u5206\u9694\u7b26\u5c31\u5411\u4e0b\u9012\u5f52\u3002    \n```cpp\nval_type read_expression(char end='\\n')\n{\n\tchar ch=In.get();\n\tval_type sum=0;\n\tbool vis=false,type=false,typ1=false;\n\tstd::string s;\n\twhile(ch!=end)\n\t{\n\t\tif(ch==EOF)throw \"\u975e\u6cd5\u5b57\u7b26\";\n\t\tif(isgraph(ch)&&!isdigit(ch)&&!isalpha(ch)&&ch!='['&&ch!='+'&&ch!='-')throw \"\u975e\u6cd5\u5b57\u7b26\";\n\t\tif(typ1&&isgraph(ch)&&ch!='+'&&ch!='-')throw \"\u975e\u6cd5\u5b57\u7b26\";\n\t\tif(isgraph(ch)&&!vis)\n\t\t\tvis=true,type=isalpha(ch);//\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5224\u65ad\u7c7b\u578b\n\t\tif(isdigit(ch))\n\t\t\tif(!type)sum=sum*10+ch-'0';\n\t\t\telse s+=ch;\n\t\telse if(isalpha(ch))\n\t\t\tif(!type)throw \"\u975e\u6cd5\u5b57\u7b26\";\n\t\t\telse s+=ch;\n\t\telse if(ch=='[')\n\t\t\tif(!type)throw \"\u975e\u6cd5\u5b57\u7b26\";\n\t\t\telse sum=read_expression(']'),typ1=true;//\u9012\u5f52\u8bfb\u53d6\u4e0b\u6807\n\t\telse if(ch=='+')\n\t\t\treturn (type?varlist[s][sum]:sum)+read_expression(end);//\u9012\u5f52\u8bfb\u53d6\u8868\u8fbe\u5f0f\u4e0b\u4e00\u90e8\u5206\uff08+\uff09\n\t\telse if(ch=='-')\n\t\t\treturn (type?varlist[s][sum]:sum)-read_expression(end);//\u540c\u4e0a\uff08-\uff09\n\t\tch=In.get();\n\t}\n\treturn type?varlist[s][sum]:sum;//\u53d8\u91cf/\u503c\n}\n```\n____\n\u53d8\u91cf\u8bfb\u53d6\u540c\u7406\uff0c\u5c31\u662f\u8bb0\u5f97\u8981\u628a\u8fd4\u56de\u503c\u6539\u4e3a\u5f15\u7528\u3002   \n```cpp\nval_type& read_variable(char end)\n{\n\tchar ch=In.get();\n\tstd::string s;int x=0;\n\tbool type=false;\n\twhile(ch!=end)\n\t{\n\t\tif(ch==EOF)throw \"\u975e\u6cd5\u5b57\u7b26\";\n\t\tif(isgraph(ch)&&!isdigit(ch)&&!isalpha(ch)&&ch!='[')throw \"\u975e\u6cd5\u5b57\u7b26\";\n\t\tif(type&&isgraph(ch))throw \"\u975e\u6cd5\u5b57\u7b26\";\n\t\tif(isgraph(ch)&&ch!='[')\n\t\t\ts+=ch;\n\t\telse if(ch=='[')\n\t\t\tx=read_expression(']'),type=true;\n\t\tch=In.get();\n\t}\n\treturn varlist[s][x];\n}\n``` \n______\n\u53d8\u91cf\u58f0\u660e\u8bfb\u53d6\uff1a     \n\u76f4\u63a5\u6309\u7167 \u53d8\u91cf\u540d\uff1a\u53d8\u91cf\u7c7b\u578b[\u5de6\u7aef\u70b9..\u53f3\u7aef\u70b9] \u7684\u683c\u5f0f\u8bfb\u53d6\u3002   \n\u8bb0\u5f97\u6309\u7167\u6211\u4eec\u524d\u9762\u63d0\u5230\u7684\uff0c\u8bfb\u5230\u7ed3\u675f\u7b26\u8fd4\u56de `false`\u3002    \n```cpp\nbool read_vars()\n{\n\tchar ch;\n\tdo ch=In.get(); while(!isgraph(ch));\n\tif(ch=='}')return false;\n\tstd::string s,s1;\n\tint l=0,r=0;\n\tdo s+=ch,ch=In.get(); while(isalpha(ch));//\u53d8\u91cf\u540d\n\twhile(ch!=':')ch=In.get();\n\tdo ch=In.get(); while(!isgraph(ch));\n\tdo s1+=ch,ch=In.get(); while(isalpha(ch));//\u7c7b\u578b\n\tif(s1[0]=='a')\n\t{\n\t\twhile(ch!=',')ch=In.get();\n\t\tl=read_expression('.');\n\t\tch=In.get();\n\t\tr=read_expression(']');\n\t}\n\tvarlist.emplace(s,Variable());\n\tvarlist[s].set(l,r);\n    //\u5982\u679c\u662f\u7528\u7684vector\uff0c\u8fd9\u91cc\u76f4\u63a5emplace(s,Variable(l,r))\u5c31\u53ef\u4ee5\u4e86\n\treturn true;\n}\n``` \n_____\n\u6761\u4ef6\u8868\u8fbe\u5f0f\uff1a\u540c\u4e0a  \n```cpp\nbool read_con()\n{\n\tstd::string s;char ch;\n\tdo ch=In.get(); while(!isgraph(ch));\n\tdo s+=ch,ch=In.get(); while(isgraph(ch)&&ch!=',');\n\twhile(ch!=',')ch=In.get();\n\tint x=read_expression(','),y=read_expression();\n\tswitch(s[0]*200+s[1])\n\t{\n\t\tcase 'l'*200+'t':return x<y;break;\n\t\tcase 'g'*200+'t':return x>y;break;\n\t\tcase 'l'*200+'e':return x<=y;break;\n\t\tcase 'g'*200+'e':return x>=y;break;\n\t\tcase 'e'*200+'q':return x==y;break;\n\t\tcase 'n'*200+'e':return x!=y;break;\n\t\tdefault: throw \"someting wrong\";\n\t}\n}\n``` \n______\n\u8bfb\u53d6\u6307\u4ee4\uff1a\u540c\u4e0a\uff08`return false`\uff1b\u9012\u5f52\u6267\u884c\uff1b\u5403\u6389`'#'`\uff09    \n```cpp\nbool read_instruction()\n{\n\tchar ch;\n\tdo ch=In.get(); while((~ch)&&!isgraph(ch));\n\tif(ch==EOF||ch=='}')return false;//\n\tif(ch=='#'){while(ch!='\\n')ch=In.get();return true;}//\n\tstd::string s;\n\tdo ch=In.get(); while(!isgraph(ch));\n\tdo s+=ch,ch=In.get(); while(isgraph(ch));\n\tswitch(s[0])\n\t{\n\t\tcase 'v':while(read_vars());break;//vars\n\t\tcase 'y':Out.put(read_expression());break;//yosoro\n\t\tcase 's':{int &x=read_variable(',');x=read_expression();break;}//set\n\t\tcase 'i':if(read_con())run();else jump();break;//ihu\n\t\tcase 'h'://hor\n\t\t{\n\t\t\tint &x=read_variable(','),l=read_expression(','),r=read_expression(),pos=In.getpos();//\u83b7\u53d6\u5faa\u73af\u53d8\u91cf\u5373\u5149\u6807\n\t\t\tbool flg=false;\n\t\t\tfor(x=l;x<=r;x++)//\u76f4\u63a5\u628a\u5faa\u73af\u53d8\u91cf\u4ecel\u5230r\u81ea\u589e\n            In.setpos(pos),run(),flg=true;//\u56de\u6eaf\u5149\u6807\n\t\t\tif(!flg)jump();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'w':{int pos=In.getpos();while(read_con())run(),In.setpos(pos);jump();break;}//while\n\t\tdefault:throw \"\u9519\u8bef\u8bed\u53e5\";\n\t}\n\treturn true;\n}\n```\n______\n\u8df3\u8fc7\u5f53\u524d\u4ee3\u7801\u5757\uff1a   \n\u6a21\u62df\u62ec\u53f7\u5339\u914d\u5373\u53ef\u3002    \n```cpp\nvoid jump(){int x=1;char ch;while(x){ch=In.get();if(ch=='{')++x;else if(ch=='}')--x;}}\n```\n_____\n\u6267\u884c\u6307\u4ee4\uff1a\n\u5982\u4e0a\u6240\u8ff0\u3002     \n```cpp\nvoid run(){while(read_instruction());}\n```\n______\n\u4e3b\u51fd\u6570\uff1a    \n```cpp\nint main()\n{\n\ttry\n    {\n        CYaRon::run();\n    }\n    catch(const char *e)\n    {\n        CYaRon::Error(e);//\u5f02\u5e38\u5904\u7406\uff08\u5199\u5230\u540e\u9762\u5199\u70e6\u4e86\uff0c\u6240\u4ee5\u6ca1\u600e\u4e48\u5199\u5f02\u5e38\u5904\u7406\uff0c\uff0c\uff0c\u89c1\u8c05\uff09\n    }\n\treturn 0;\n}\n```\n______\n[\u5b8c\u6574\u4ee3\u7801\uff08\u7ea6 5KB\uff09](https://www.luogu.com.cn/paste/rn8he6s7)     \n_____\n\u540e\u8bb0\uff1a    \n~~A\u4e86\u8fd9\u9053\u9898\uff0c\u795d\u4f60\u6210\u529f~~",
        "postTime": 1604408709,
        "uid": 35137,
        "name": "a___",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3695 \u3010CYaRon!\u8bed\u3011"
    },
    {
        "content": "~~NOIP \u4e34\u8fd1\uff0c\u636e\u4e4b\u524d\u6a21\u62df\u8d5b\u7684\u7ecf\u9a8c\u6765\u770b\uff0c\u6b63\u89e3\u6211\u5927\u6982\u7684\u786e\u662f\u60f3\u4e0d\u51fa\u6765\u4e86\uff0c\u4f46\u662f\u66b4\u529b\u8fd8\u8001\u662f\u5199\u6302\u3002\u6240\u4ee5\u60f3\u505a\u4e00\u9053\u5927\u6a21\u62df\u7ec3\u7ec3\u624b\u3002\u7ed3\u679c\u8111\u5b50\u4e00\u62bd\u505a\u4e86\u8fd9\u9053\u9898\uff0c\u5dee\u70b9\u6b7b\u5728 VS code \u91cc\u3002~~\n\n------------\n\n\n__\u6211\u91c7\u7528\u7684\u662f\u7c7b\u4f3c\u7f16\u8bd1\u5668\u7684\u65b9\u6cd5\u3002\u5148\u628a\u6240\u6709\u8bed\u53e5\u90fd\u89e3\u6790\u4e4b\u540e\u5b58\u8d77\u6765\u4e4b\u540e\u518d\u8fd0\u884c\u3002__\n\n------------\n\n\n## \u8bed\u53e5\u7684\u5b58\u50a8\n\n- \uff08\u5148\u7ed9\u6bcf\u79cd\u547d\u4ee4\u8bbe\u7f6e\u4e00\u4e2a\u201cID\u201d\uff09\uff1a\n\n```cpp\nenum Opt {\n    YOSORO, SET, IHU, JMP, HOR, WHILE, VARS, DEC\n    //JMP: \u8df3\u5230\u6307\u5b9a\u6307\u4ee4\uff0c\u6700\u7ec8\u5904\u7406\u7ed3\u679c\u4e2d\u4e0d\u542b\u6709 while\u3002\n    //DEC\uff1a\u81ea\u51cf\u8fd0\u7b97\u3002\n};\n\nenum Operator {\n    LT, GT, LE, GE, EQ, NEQ, ERR    //ERR: \u9519\u8bef\u7684\u7b26\u53f7\n};\n```\n\n- \u6574\u4e2a\u7a0b\u5e8f\u4e2d\u7684\u8bed\u53e5\u7528 vector \u5b58\u8d77\u6765\uff0c\u8bed\u53e5\u4e2d\u7684\u53c2\u6570\u53ef\u80fd\u662f\u5728\u89e3\u6790\u8f93\u5165\u7684\u65f6\u5019\u4e0d\u80fd\u786e\u5b9a\u7684\u503c\uff0c\u6240\u4ee5\u7528\u94fe\u8868\u5b58\u50a8\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u91cc\u9762\u662f\u9700\u8981\u5f15\u7528\u7684\u53d8\u91cf\u7684\u5730\u5740\u3001\u504f\u79fb\u91cf\uff08\u6570\u7ec4\u4e0b\u6807\u6709\u65f6\u4e5f\u4e0d\u80fd\u5728\u89e3\u6790\u7684\u65f6\u5019\u786e\u5b9a\uff09\u3002\n\n```cpp\nstruct Arg {\n    int *addr;\n    Arg *addrShift; //\u504f\u79fb\u91cf\uff08\u56e0\u4e3a\u9700\u8981\u8003\u8651\u53d8\u91cf\u505a\u4e0b\u6807\uff09\n    bool positive;  //true:+, false:-\n    Arg *nxt;   //\u9700\u8981\u4fdd\u8bc1\u94fe\u8868\u5c3e\u9879nxt\u4e3aNULL\n};\nclass Statement {\npublic:\n    Opt opt;\n    Arg *args[mxStatArg];\n    Statement(Opt option) {\n        opt = option;\n    }\n};\nvector<Statement> program;\n```\n### \u5e38\u91cf\u7684\u5b58\u50a8\n\n\u5b58\u50a8\u8bed\u53e5\u65f6\u80af\u5b9a\u4f1a\u9047\u5230\u4e00\u4e9b\u5e38\u91cf\u3002\u6211\u91c7\u53d6\u7684\u65b9\u6cd5\u662f\u5f00\u4e00\u4e2a\u4e13\u95e8\u5b58\u50a8\u5e38\u91cf\u7684\u6570\u7ec4\uff0c\u9047\u5230\u5e38\u91cf\u5c31\u653e\u8fdb\u6570\u7ec4\u91cc\uff0c\u7136\u540e\u62ff\u51fa\u6307\u9488\u3002\n\n```cpp\nint constPool[constPoolSize], cntConst = 0;\n```\n\n_\u4ec0\u4e48\uff1f\u4f60\u8bf4\u53ef\u4ee5\u76f4\u63a5\u5728\u5b58\u50a8\u8bed\u53e5\u7684\u7c7b\u91cc\u9762\u5f00\u51e0\u4e2a int \u7684\u7a7a\u95f4\u6216\u8005\u5b58\u7684\u65f6\u5019\u76f4\u63a5\u7528 `new` \u5206\u914d\u4e00\u4e2a\u5730\u5740\uff1f\t\u6211\u540e\u6765\u624d\u60f3\u5230\u8fd9\u4e9b\u7684\uff0c\u61d2\u5f97\u6539\u4e86\u3002\u53cd\u6b63\u5c31\u8fd9\u6837\u4e5f\u4e0d\u9519\u3002_\n\n### \u53d8\u91cf\u7684\u5b58\u50a8\n\n\u5206\u6570\u548c\u6570\u7ec4\u4e24\u4e2a `map` \u5b58\u50a8\u3002\n\n```cpp\nmap<string, int> integers;\nstruct Array {\n    int delta;\n    int arr[mxArraySize];\n    Array(int bg, int en) {\n        memset(arr, 0, (en - bg + 3) * sizeof(int));\n        delta = bg;\n    }\n    int& operator [] (int pos) {\n        return arr[pos - delta];\n    }\n};\nmap<string, Array> arrays;\n```\n\n\u6570\u7ec4\u9700\u6ce8\u610f\u4e0b\u6807\u95ee\u9898\u3002\u8fd9\u91cc\u6211\u76f4\u63a5\u5c06\u5bf9\u6574\u4e2a struct \u7684\u4e0b\u6807\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6210\u4e86\u8bbf\u95ee\u504f\u79fb\u540e\u7684\u4e0b\u6807\u3002\n\n## \u89e3\u6790\u8f93\u5165\n\n\u5c06\u89e3\u6790\u8f93\u5165\u90e8\u5206\u5c01\u88c5\u6210\u4e86\u4e00\u4e2a\u7c7b\uff08`Processer`\uff09\uff1a\n\n```cpp\nclass Processer {\n    char inputBuf[inBufSize];\n    char *cursor;\n    \n    inline string getNextWord();    //\u63d0\u53d6\u4e0b\u4e00\u4e2a\u8bcd\uff08\u9700\u4fdd\u8bc1\u8bcd\u5728\u672c\u884c\u5185\uff09\n    inline bool endOfLine();        //\u5149\u6807\u540e\u6362\u884c\u524d\u6ca1\u6709\u6709\u610f\u4e49\u7684\u4e1c\u897f\n    inline bool eof();              //\u5149\u6807\u5df2\u7ecf\u8dd1\u5230\u4e86\u6ca1\u6709\u6570\u636e\u7684\u8352\u539f\n    inline void nextCommandLine();  //\u8df3\u5230\u4e0b\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u884c\n    inline void skipSpace();        //\u8df3\u8fc7\u7a7a\u683c\n    inline void skipChar(char);     //\u8df3\u8fc7\u4efb\u610f\u591a\u4e2a\u7a7a\u683c\u548c\u4efb\u610f\u591a\u4e2a\u6307\u5b9a\u5b57\u7b26\u7684\u4efb\u610f\u6392\u5217\n    inline int readNum();           //\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u6570\n    inline int readNum(string);     //\u4ecestring\u8bfb\u53d6\u6570\n    inline Operator judgeOper(string);  //\u5224\u65ad\u4e0d\u7b49\u5f0f\uff08\u5224\u65ad\u5f0f\uff09\u7684\u7b26\u53f7\n    inline Arg* judgeVar(string);       //\u8fd4\u56de\u53d8\u91cf\u7684\u5730\u5740\n    inline Arg* analyzeFormula();       //\u89e3\u6790\u7b97\u5f0f\uff08\u8fd4\u56de\u89e3\u6790\u540e\u7684\u94fe\u8868\u9996\u6307\u9488\uff09\n    inline void error(const char *);    //\u62a5\u544a\u9519\u8bef\npublic:\n    Processer();\n    inline void getInput(); //\u5c06\u8f93\u5165\u5168\u90e8\u8bfb\u5165\n    inline void proc();     //\u5904\u7406\n}processer;\n\n```\n\uff08\u51fd\u6570\u7684\u5b9a\u4e49\u8bf7\u770b\u6587\u672b\u6e90\u4ee3\u7801\uff09\n\n**\u4e3a\u4e86\u8fd0\u884c\u65f6\u597d\u5904\u7406\uff0c\u65b0\u5b9a\u4e49\u4e86\u4e24\u4e2a\u6307\u4ee4\uff1a**\n\n- `jmp`\uff1a\u8df3\u5230\u6307\u5b9a\u6307\u4ee4\u3002\n- `dec`\uff1a\u81ea\u51cf\u8fd0\u7b97\u3002\n\n\u7ed9\u6bcf\u79cd\u7c7b\u578b\u89c4\u5b9a\u4e86\u53c2\u6570\u7684\u5b58\u50a8\u987a\u5e8f\uff1a\n\n- `ihu`: \u4e0d\u7b49\u5f0f\u7b26\u53f7\uff0c\u4e0d\u7b49\u5f0f\u5de6\uff0c\u4e0d\u7b49\u5f0f\u53f3\uff0c\u82e5\u8868\u8fbe\u5f0f\u4e0d\u6210\u7acb\u5219\u8df3\u5230\u54ea\u884c\n- `hor`: \u5faa\u73af\u53d8\u91cf\uff0c\u5faa\u73af\u53d8\u91cf\u7684\u6700\u5927\u503c\uff0c\u82e5\u8868\u8fbe\u5f0f\u4e0d\u6210\u7acb\u5219\u8df3\u5230\u54ea\u884c\n- `set`: \u88ab\u8d4b\u503c\u7684\u53d8\u91cf, \u8d4b\u8fc7\u53bb\u7684\u503c\n- `jmp`: \u6307\u4ee4\u5e8f\u53f7\n- `dec`: \u5bf9\u8c61\n\n### \u5212\u5206\u201c\u8bcd\u201d\uff1a\n\n\u5c06\u8f93\u5165\u5206\u89e3\u6210\u8bb8\u591a\u4fbf\u4e8e\u5904\u7406\u7684\u201c\u8bcd\u201d\u3002\uff08\u8fd9\u73a9\u610f\u597d\u50cf\u6d41\u884c\u53eb Token\uff0c\u4f46\u6211\u5c31\u53eb\u5b83 word\uff0c\u61d2\u5f97\u6539\u4e86\uff09\n\n`getNextWord` \u51fd\u6570\u5982\u679c\u9047\u5230\u4e00\u4e2a\u62ec\u53f7\u6216\u5176\u5b83\u6709\u7528\u7684\u7b26\u53f7\u5c31\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2a\u7b26\u53f7\uff0c\u5176\u5b83\u60c5\u51b5\u5219\u8fd4\u56de\u4e0b\u4e00\u4e2a\u7531\u6570\u7ec4\u548c\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u5730\u5224\u65ad\u4e0b\u6807\u3001\u7b97\u5f0f\u7b26\u53f7\u7b49\u3002\n\n```cpp\ninline string Processer::getNextWord() {\n    while (*cursor == ' ')  cursor++;\n    string ret = \"\";\n    if (*cursor == '{' || *cursor == '}' || *cursor == '+' || *cursor == '-' ||\n        *cursor == '[' || *cursor == ']' || *cursor == ':' || *cursor == ',')\n        ret.push_back(*(cursor++));\n    else\n        while ((*cursor >= 'a' && *cursor <= 'z') || (*cursor >= 'A' && *cursor <= 'Z') ||\n            (*cursor >= '0' && *cursor <= '9'))\n            ret.push_back(*(cursor++));\n    return ret;\n}\n```\n\n### \u5c06 `hor` \u548c `while` \u62c6\u5206\u3002\n\n- `hor`\n\n\u5c06 `hor` \u62c6\u5206\u6210 `set` \u4e0e `hor`\uff0c\u62c6\u5206\u540e\u7684 `hor` \u4e2d\u53ea\u662f\u5c06\u5faa\u73af\u53d8\u91cf\u81ea\u589e\uff0c\u53ea\u6709\u5224\u65ad\u5faa\u73af\u662f\u5426\u5e94\u8be5\u505c\u6b62\u3002\u5e76\u5728\u5faa\u73af\u7ed3\u675f\u65f6 `jmp` \u56de\u5faa\u73af\u5f00\u59cb\u3002\n\n`hor` \u4f2a\u4ee3\u7801\uff08\u5b58\u50a8\u65f6\u8bed\u53e5\u7684\u53c2\u6570\u4e0e\u53c2\u6570\u8868\u5bf9\u5e94\uff09\uff1a\n\n```\n\u539f\u683c\u5f0f\uff1a\n{\thor var, bg, en\n\t...\n}\n\n\u5b58\u50a8\u683c\u5f0f\uff1a\n:set var, bg - 1\nhor bg, en, jmp\u7684\u4e0b\u4e00\u884c\n...\njmp hor\u90a3\u4e00\u884c\n\n```\n- `while`\n\n\u5c06 `while` \u8f6c\u6362\u6210 `ihu`\uff0c\u5e76\u5728\u5faa\u73af\u7ed3\u675f\u65f6 `jmp` \u56de\u5faa\u73af\u5f00\u59cb\u3002\n\n`while` \u4f2a\u4ee3\u7801\uff1a\n```\n\u539f\u683c\u5f0f\uff1a\n{\twhile oper, left, right\n\t...\n}\n\n\u5b58\u50a8\u683c\u5f0f\uff1a\nihu oper, left, right, jmp\u7684\u4e0b\u4e00\u884c\n...\njmp ihu\u90a3\u4e00\u884c\n```\n\n### \u5927\u62ec\u53f7\u95ee\u9898\n\n\u4f7f\u7528\u4e86\u4e00\u4e2a\u6808\u6765\u5b58\u50a8\u5927\u62ec\u53f7\u3002\n\n```cpp\nstruct Brace {\n    Opt opt;    //\u524d\u5927\u62ec\u53f7\u662f\u4ec0\u4e48\u6307\u4ee4\n    int bg;     //\u524d\u5927\u62ec\u53f7\u5728\u7b2c\u51e0\u4e2a\u6307\u4ee4\n};\nstack<Brace> braces;\n```\n\n\u9047\u5230\u524d\u62ec\u53f7\u538b\u6808\uff08`vars` \u9664\u5916\uff0c\u5904\u7406 `vars` \u65f6\u4f1a\u987a\u4fbf\u628a\u540e\u62ec\u53f7\u5403\u6389\uff09\uff0c\u9047\u5230\u540e\u62ec\u53f7\u53d6\u6808\u9876\u3001\u5f39\u6808\u5e76\u586b\u5165\u54cd\u5e94\u8bed\u53e5\u4e0e\u53c2\u6570\u3002\n\n#### \u6ce8\u610f\uff1a\u8f93\u5165\u6570\u636e\u6700\u540e\u53ef\u80fd\u6ca1\u6709\u6362\u884c\u3002\n\n## \u8fd0\u884c\n\n\u5c06\u8fd0\u884c\u90e8\u5206\u5c01\u88c5\u6210\u4e86\u4e00\u4e2a\u7c7b\uff08`Runner`\uff09\uff1a\n```cpp\nclass Runner {\n    int calc(Arg *);\n    inline bool judge(int, int, int);\n    inline void error(const char *, int);\npublic:\n    inline void run();\n}runner;\n```\n\uff08\u51fd\u6570\u7684\u5b9a\u4e49\u8bf7\u770b\u6587\u672b\u6e90\u4ee3\u7801\uff09\n\n~~\u5c01\u88c5\u4e86\u4e2a\u5bc2\u5bde~~\n\n\u8fd0\u884c\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\u3002\n\n\u5199\u4e86\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\uff08calc\uff09\u53bb\u8ba1\u7b97\u6bcf\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u3002\n\n```cpp\nint Runner::calc(Arg *a) {\n    if (a == NULL)\n        return 0;\n    const int res = *(a->addr + calc(a->addrShift));\n    if (a->positive)\n        return calc(a->nxt) + res;\n    else\n        return calc(a->nxt) - res;\n}\n```\n\n\n\u4e4b\u540e\u5c06\u8bed\u53e5\u4e00\u4e2a\u4e00\u4e2a\u5f80\u4e0b\u6267\u884c\uff0c\u628a\u5bf9\u5e94\u7684\u53c2\u6570\u62ff\u51fa\u6765\u53c2\u4e0e\u8fd0\u7b97\uff0c\u5982\u679c\u9700\u8981\u8df3\u8f6c\u5c31\u8df3\u5230\u5bf9\u5e94\u7684\u884c\uff0c\u5426\u5219\u6267\u884c\u4e0b\u4e00\u4e2a\u8bed\u53e5\u3002\u5982\u679c\u6267\u884c\u5b8c\u4e86\u5c31\u505c\u3002\u5c31\u884c\u4e86\u3002\n\n# [\u6e90\u4ee3\u7801](/paste/o3smwhta)\n\n------------\n\n__\u9644\u5f55 \u5355\u8bcd\u8868__\n\n| \u5355\u8bcd | \u91ca\u4e49 |\n| :----------- | :----------- |\n| statement | \u8fd9\u91cc\u6307\u5355\u4e2a\u8bed\u53e5\uff08\u8fd9\u4e2a\u7528\u6cd5\u597d\u50cf\u4e0d\u5e38\u89c1\uff09\u3002 |\n| brace | \u5927\u62ec\u53f7\u3002 |\n| word | \u5c31\u662f\u5927\u4f6c\u4eec\u8bf4\u7684 token\uff0c\u5373\u5c06\u5b57\u7b26\u4e32\u5212\u5206\u6210\u7684\u4fbf\u4e8e\u5904\u7406\u7684\u5b50\u4e32\u3002 |\n| formula | \u8fd9\u91cc\u6307\u7b97\u5f0f\u3001\u8868\u8fbe\u5f0f\u3002\uff08\u8fd9\u4e2a\u8bcd\u597d\u50cf\u4e00\u822c\u6307\u516c\u5f0f\uff0c\u5efa\u8bae\u4e0d\u8981\u50cf\u6211\u8fd9\u6837\u7528\uff09 |\n\n__\u4ee5\u4e0b\u662f\u8f83\u5e38\u89c1/\u7b80\u5355\u7684\u5355\u8bcd\uff1a__\n\n| \u5355\u8bcd | \u91ca\u4e49 |\n| :----------- | :----------- |\n| cursor | \u6307\u5149\u6807\u3002 |\n| opt | \u4e3a option \u7684\u7b80\u5199\u3002\u9009\u9879\uff0c\u9009\u62e9\u3002 |\n| calc | \u4e3a calculate \u6216 calculation \u7684\u7b80\u5199\u3002\u8ba1\u7b97\u3002 |\n| analyze | \u5206\u6790\uff0c\u89e3\u6790\u3002|\n| arg | \u4e3a argument \u7684\u7b80\u5199\u3002\u6307\u5b9e\u9645\u53c2\u6570\u3002~~\u7cbe\u6c28\u9178~~ |\n| positive | \u8fd9\u91cc\u6307\u4e00\u4e2a\u6570\u4e3a\u6b63\u6570\u3002",
        "postTime": 1669253651,
        "uid": 402255,
        "name": "Untitled10032",
        "ccfLevel": 4,
        "title": "P3695 CYaRon!\u8bed \u9898\u89e3"
    }
]