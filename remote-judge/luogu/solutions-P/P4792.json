[
    {
        "content": "\u770b\u5230\u795e\u4ed9\u4eec\u90fd\u662f\u7528\u5c3a\u53d6\u6cd5\u505a\u7684\u3002\n\n\u4f46\u662f\u672c\u9898\u53ef\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\u505a\u3002\n\n\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u7b54\u6848\uff1a\u5982\u679c\u8bf4\u957f\u5ea6\u4e3a l \u7684\u5b50\u4e32\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u5bf9\u4e8e$\\forall{len(s) > l}$\u7684\u5b50\u4e32\u5168\u90e8\u6ee1\u8db3\u6761\u4ef6\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u7b54\u6848\uff1a\n\n\u4e8c\u5206\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u4e32\u7684\u6700\u5c0f\u957f\u5ea6\u3002\u5efa\u7acb\u4e00\u4e2a\u961f\u5217\uff0c\u6bcf\u4e00\u6b21\u201c\u5411\u53f3\u6ed1\u52a8\u201d\u4e00\u6b21\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7a97\u53e3\uff0c\u5982\u679c\u8bf4\u6709\u54ea\u4e00\u6b21\u6211\u4eec\u7528\u8fd9\u4e2a\u961f\u5217\u201c\u6846\u4f4f\u201d\u4e86\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u4e32\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u957f\u5ea6\u662f\u53ef\u884c\u7684\uff0c\u7ee7\u7eed\u5411\u66f4\u5c0f\u7684\u627e\u3002\u800c\u5982\u679c\u6ca1\u6709\u627e\u5230\u53ef\u884c\u7684\uff0c\u5c31\u5411\u66f4\u5927\u7684\u627e\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <deque>\nint read() {\n    register int n = 0, f = 1;\n    register char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9') {\n        n = (n << 3) + (n << 1) + (ch ^ '0');\n        ch = getchar();\n    }\n    return n * f;\n}\nconst int N = 200005;\nstd::deque<int> q;\nint n, K, R;\nint a[N];\nint cnt[N], cnt2[N], tot, tot2;\nvoid init() {\n    n = read(), K = read(), R = read();\n    for (int i = 1; i <= n; i++) a[i] = read();\n    for (int i = 1; i <= R; i++) {\n        int B = read(), Q = read();\n        cnt[B] = Q;\n        tot++;\n    }\n}\nbool check(int x) {\n    q.clear();\n    memset(cnt2, 0, sizeof(cnt2));\n    tot2 = 0;\n    int i = 1;\n    while (q.size() < x) {\n        q.push_back(a[i]);\n        cnt2[a[i]]++;\n        if (cnt[a[i]] && cnt2[a[i]] == cnt[a[i]])\n            tot2++;\n        if (tot2 >= tot)\n            return 1;\n        i++;\n    }\n    for (; i <= n; i++) {\n        q.push_back(a[i]);\n        cnt2[a[i]]++;\n        if (cnt[a[i]] && cnt2[a[i]] == cnt[a[i]])\n            tot2++;\n        if (cnt[q.front()] && (cnt2[q.front()] == cnt[q.front()]))\n            tot2--;\n        cnt2[q.front()]--;\n        q.pop_front();\n        if (tot2 >= tot)\n            return 1;\n    }\n    return 0;\n}\nint main(void) {\n#ifdef FS\n    freopen(\"Martian.in\", \"r\", stdin);\n    freopen(\"Martian.out\", \"w\", stdout);\n#endif\n    init();\n    int l = 0, r = n, ans = -1;\n    while (l <= r) {\n        const int mid = l + r >> 1;\n        if (check(mid))\n            r = mid - 1, ans = mid;\n        else\n            l = mid + 1;\n    }\n    if (ans == -1)\n        puts(\"impossible\");\n    else\n        printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1606731016,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4792 \u3010[BalticOI 2018]\u706b\u661f\u4eba\u7684 DNA\u3011"
    },
    {
        "content": "\u5c3a\u53d6\u3002\n\n## \u601d\u8def\n\n\u5148\u8ba1\u7b97\u51fa\u73b0\u603b\u6570\uff0c\u603b\u6570\u6ca1\u8fbe\u5230\u6240\u6709\u8981\u6c42\u76f4\u63a5\u8fd4\u56de\u4e0d\u53ef\u80fd\u3002\n\n\u5426\u5219\u8003\u8651\u5c3a\u53d6\uff0c\u679a\u4e3e\u5de6\u8fb9\u7aef\u70b9\uff0c\u6bcf\u6b21\u5411\u53f3\u79fb\u3002\n\n\u5c3a\u53d6\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8981\u8bb0\u5f55\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570 $cnt_i$\uff0c\u4ee5\u53ca\u6240\u6709\u6ee1\u8db3\u7684\u8981\u6c42\u3002\u4ee4\u7b2c $i$ \u4e2a\u6570\u8981\u6c42\u51fa\u73b0\u6b21\u6570\u4e3a $num_i$\u3002\n\n\u5f53\u6211\u4eec\u53f3\u7aef\u70b9\u79fb\u52a8\u65f6\uff0c\u5982\u679c $cnt_i=num_i-1$\uff0c\u6211\u4eec\u65b0\u52a0\u5165\u8fd9\u4e2a\u6570\u7684\u65f6\u5019\u6ee1\u8db3\u7684\u8981\u6c42\u7684\u6570\u91cf\u589e\u52a0\u4e86 $1$\u3002\n\n\u540c\u7406\uff0c\u5de6\u7aef\u70b9\u79fb\u52a8\u65f6\uff0c\u5982\u679c $cnt_i=num_i$\uff0c\u5220\u9664\u6b64\u6570\u4f1a\u4f7f\u6ee1\u8db3\u7684\u8981\u6c42\u7684\u6570\u91cf\u51cf\u5c11 $1$\u3002\n\n\u7a0d\u5fae\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\u5427\uff0c\u6574\u4f53\u6bd4\u8f83\u7b80\u5355\u3002\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n\n\u590d\u6742\u5ea6 $O(n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define mp make_pair\nusing namespace std;\nint countt[200005],num[200005],cnt[200005];\nsigned main(){\n\tint n,k,r;\n\tcin>>n>>k>>r;\n\tint a[n+1];\n\tfor(int i=1;i<=n;i++){\n\t    cin>>a[i];\n\t    countt[a[i]]++;//\u8ba1\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u6570\u91cf\uff0ccount\u8fd9\u4e2a\u663e\u793aambiguous\n\t}\n\tfor(int i=1;i<=r;i++){\n\t    int u,v;\n\t    cin>>u>>v;\n\t    num[u]=v;//\u8bb0\u5f55\u4e00\u4e0b\u8981\u6c42\n\t}\n\tint tot=0,ok=1;\n\tfor(int i=0;i<=k;i++){\n\t    if(countt[i]<num[i]) ok=0;//\u5224\u65ad\u6ee1\u8db3\u8981\u6c42\n\t}\n\tif(!ok){\n\t    cout<<\"impossible\";\n\t    return 0;\n\t}\n\tint minv=n,nr=0;\n\tfor(int l=1;l<=n;l++){//\u5c3a\u53d6\u90e8\u5206\uff0c\u679a\u4e3e\u5de6\u7aef\u70b9\n\t    while(nr<n&&tot!=r){//\u5411\u53f3\u626b\u53f3\u7aef\u70b9\n\t        nr++;//\u6ce8\u610f\u4e00\u4e0b\u8fd9\u91cc\u987a\u5e8f\n\t        if(num[a[nr]]){\n\t            tot-=(cnt[a[nr]]>=num[a[nr]]);//\u4e3a\u4e86\u65b9\u4fbf\u66f4\u65b0\uff0c\u5148\u628a\u539f\u6765\u60c5\u51b5\u51cf\u6389\uff0c\u540e\u9762\u52a0\u4e0a\n\t            cnt[a[nr]]++;\n\t            tot+=(cnt[a[nr]]>=num[a[nr]]);\n\t        }\n\t    }\n\t    if(tot==r){\n\t        minv=min(minv,nr-l+1);//\u7b26\u5408\u8981\u6c42\u53d6min\n\t    }\n\t    if(num[a[l]]){\n\t       tot-=(cnt[a[l]]>=num[a[l]]);//\u4e00\u6837\u7684\uff0c\u65b9\u4fbf\u66f4\u65b0\u5148\u628a\u539f\u6765\u51cf\u6389\n\t       cnt[a[l]]--;\n\t       tot+=(cnt[a[l]]>=num[a[l]]);\n\t    }\n\t}\n\tcout<<minv;\n\treturn 0;\n}\n```",
        "postTime": 1667663404,
        "uid": 116664,
        "name": "Daniel_lele",
        "ccfLevel": 8,
        "title": "P4792 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u6c42\u6700\u77ed\u5b50\u4e32\uff0c\u4f7f\u5f97\u6ee1\u8db3\u6240\u6709\u6570\u636e\u7ed9\u51fa\u7684\u5f62\u5982\uff1a\u201c\u6570 $x$ \u51fa\u73b0 $b$ \u6b21\u201d\u7684\u6761\u4ef6\u3002\n\n## \u601d\u8def\n\n\u66b4\u529b\u7684\u8bdd\u679a\u4e3e\u6240\u6709\u5b50\u4e32\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31 $O(n^2)$ \u4e86\u3002\n\n\u901a\u5e38\u7528\u53cc\u6307\u9488\u6765\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$ \u7684\u7b97\u6cd5\u3002\n\n\u9996\u5148 $r$ \u6307\u9488\u4e0d\u65ad\u540e\u632a\u76f4\u5230\u5f53\u524d\u7684 $l \\sim r$ \u6ee1\u8db3\u6240\u6709\u6761\u4ef6\uff0c\u7136\u540e\u5982\u679c $l$ \u6307\u9488\u540e\u632a\u540e\u4ecd\u7136\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u8bb2 $l$ \u6307\u9488\u4e0d\u65ad\u540e\u632a\uff0c\u540e\u632a\u4e0d\u4e86\u4e86\u5c31\u662f\u5f53\u524d\u533a\u95f4\u4e3a\u7b54\u6848\u4e00\u79cd\u65b9\u6848\u3002\n\n\u6ce8\u610f\u7b54\u6848\u4e0d\u6b62\u4e00\u79cd\u65b9\u6848\uff0c\u627e\u5230\u4e00\u79cd\u65b9\u6848\u4e4b\u540e $r$ \u6307\u9488\u8981\u7ee7\u7eed\u540e\u632a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define N 200005\nint n, k, q, a[N], b[N], num[N], pk[N], pj[N], tot, question[N], front, ans = 0x7f7f7f7f;\n\nint main() {\n\tscanf(\"%d %d %d\", &n, &k, &q);\n\tfor (int i = 1; i <= n; ++ i) scanf(\"%d\", a + i), pk[a[i]] ++;\n\tfor (int i = 1; i <= q; ++ i) {\n\t\tscanf(\"%d %d\", b + i, num + i);\n\t\tquestion[b[i]] = num[i];\n\t\tif(pk[b[i]] < num[i]) return printf(\"impossible\"), 0;\n\t}\n\ttot = q, front = 1, pj[a[1]] ++;\n\tif(question[a[1]] == pj[a[1]] && question[a[1]]) -- tot;\n\tfor (int i = 2; i <= n; ++ i) {\n\t\tpj[a[i]] ++;\n\t\tif(question[a[i]] == pj[a[i]] && question[a[i]]) -- tot;\n\t\twhile((question[a[front]] < pj[a[front]] || !question[a[front]]) && front < i) {\n\t\t\tpj[a[front]] --;\n\t\t\tfront ++;\n\t\t}\n\t\tif(!tot) {\n\t\t\tans = min(ans, i - front + 1);\n\t\t\tpj[a[front]] --;\n\t\t\tfront ++;\n\t\t\ttot ++;\n\t\t}\n\t}\n\tprintf(\"%d\", ans);\n}\n```",
        "postTime": 1662385758,
        "uid": 316827,
        "name": "Temperature_automata",
        "ccfLevel": 4,
        "title": "P4792 [BalticOI 2018]\u706b\u661f\u4eba\u7684 DNA\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u7684 `\u524d\u7f00\u548c` \u7684\u6807\u7b7e\u5bb3\u6b7b\u4eba\u3002\n\n\u8fd9\u6837\u7684\u9898\uff0c\u5c3a\u53d6\u6cd5/two pointers \u51e0\u4e4e\u516b\u4e5d\u4e0d\u79bb\u5341\u4e86\uff0c\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u662f\u5426\u7b26\u5408\u6761\u4ef6\u3002\n\n\u5bf9\u4e8e $68\\ pts$\uff0c\u53ef\u4ee5\u5efa $R$ \u4e2a\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u68c0\u67e5\u533a\u95f4\u5185\u6240\u6709\u6709\u9650\u5236\u7684\u5143\u7d20\u4e2a\u6570\u662f\u5426\u7b26\u5408\u9650\u5236\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(NR)$\uff0c$68\\ pts$ \u5f88\u597d\u9a97\u3002\n\n\u5bf9\u4e8e $100\\ pts$\uff0c\u8fd9\u6837\u7684\u6548\u7387\u663e\u7136\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6\u3002\u5982\u679c\u4f60\u5b66\u8fc7\u83ab\u961f\uff0c\u8fd9\u4e00\u6b65\u5c31\u4f1a\u597d\u60f3\u5f88\u591a\u3002\u6765\u770b\u4e00\u6bb5\u83ab\u961f\u4ee3\u7801\uff1a\n\n```cpp\nvoid insert(int i){\n\tnow+=(s[a[i]]++ == 0);\n}\nvoid erase(int i){\n\tnow-=(s[a[i]]-- == 1);\n}\n```\n\n\u55ef\uff0c\u4e0d\u9519\uff0c\u628a\u8fd9\u4e2a $now$ \u6539\u4e3a\u9898\u76ee\u4e2d\u7684 $R$ \uff08\u5373\u672a\u6ee1\u8db3\u7684\u6761\u4ef6\u6570\uff09\uff0c$s[i]$ \u8868\u793a\u5f53\u524d\u4ecd\u9700\u8981 i \u5143\u7d20\u7684\u4e2a\u6570\u4e3a $s[i]$\uff08$s[i]<0$ \u8868\u793a i \u5143\u7d20\u6bd4\u9650\u5236\u591a\u51fa\u51e0\u4e2a\uff09\uff0c\u7136\u540e\u628a insert \u548c erase \u6362\u8fc7\u6765\uff0c\u5c31\u53ef\u4ee5\u5904\u7406\u5de6\u53f3\u7aef\u70b9\u7684\u79fb\u52a8\u4e86\u3002\u660e\u663e\uff0c$R=0$ \u65f6\u8868\u793a\u8be5\u5e8f\u5217\u6ee1\u8db3\u6761\u4ef6\u3002\u7531\u4e8e\u53f3\u7aef\u70b9\u5355\u8c03\u53f3\u79fb\uff0c\u56e0\u6b64\u8be5\u7b97\u6cd5\u4e3a\u7ebf\u6027\u590d\u6742\u5ea6 $O(N)$\u3002\n\n\n\u63d0\u4f9b\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nint read() {\n\tint x=0, f=1; char ch=' ';\n\twhile(!isdigit(ch)) {ch=getchar(); if(ch=='-') f=-1;}\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+(ch^48), ch=getchar();\n\treturn x*f;\n}\nint a[200005], s[200005], n, k, R;\nvoid erase(int i){\n\tR+=(s[a[i]]++ == 0);\n}\nvoid insert(int i){\n\tR-=(s[a[i]]-- == 1);\n}\nint main() {\n\tcin>>n>>k>>R;\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=1;i<=R;i++) {\n\t\tint x=read(), y=read();\n\t\ts[x]=y;\n\t}\n\tint r=0;\n\tint minn=1e9;\n\tfor(int i=1;i<=n;i++) {\n\t\tif(i>1) erase(i-1);\n\t\twhile(R&&r<=n) {\n\t\t\tinsert(++r);\n\t\t}\n\t\tif(r>n) break;\n\t\tminn=min(minn, r-i+1);\n\t}\n\tif(minn==1e9) cout<<\"impossible\";\n\telse cout<<minn;\n}\n```\n\n",
        "postTime": 1592535867,
        "uid": 93041,
        "name": "__Watcher",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4792 \u3010[BalticOI 2018]\u706b\u661f\u4eba\u7684 DNA\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u4ee3\u7801\u975e\u5e38\u7b80\u6d01\uff0c\u4f46\u662f\u601d\u7ef4\u8fc7\u7a0b\u5fc5\u987b\u5f88\u7f1c\u5bc6\u624d\u884c\u3002\u8bb0$flg_i=0/1$\u8868\u793a\u5b57\u7b26$i$\u662f\u5426\u88ab\u9700\u8981\uff0c$cnt_i$\u8868\u793a\u5b57\u7b26$i$\u88ab\u9700\u8981\u7684\u6570\u91cf\uff08\u82e5\u4e0d\u9700\u8981\u5219\u4e3a$0$\uff09\u3002\u7531\u4e8e\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7c7b\u4f3c\u5c3a\u53d6\u6cd5\u7684\u505a\u6cd5\u3002\n\n\u8bbe\u4e24\u4e2a\u6307\u9488$l$\u548c$r$\uff0c\u521d\u59cb\u503c\u5206\u522b\u4e3a$1$\u548c$0$\u3002\u663e\u7136$r$\u5411\u53f3\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u591a\u5bb9\u7eb3\u4e00\u4e9b\u5b57\u7b26\uff0c\u90a3\u4e48\u5bf9\u5e94\u5b57\u7b26\u7684$cnt$\u503c\u5c31\u53ef\u4ee5\u51cf\u5c0f\u3002\u800c\u5f53\u4e00\u4e2a\u5b57\u7b26\u7684$cnt$\u503c\u6682\u65f6\u51cf\u5230$0$\u540e\uff0c\u6211\u4eec\u7684$R$\u503c\u4e5f\u53ef\u4ee5\u51cf\u5c0f\u3002\u6545\u5f53\u67d0\u65f6\u523b$R=0$\u65f6\uff0c\u5b50\u4e32$a_l...a_r$\u5c31\u662f\u5408\u6cd5\u7684\u3002\n\n\u518d\u6765\u8003\u8651$l$\u53f3\u79fb\u65f6\u7684\u60c5\u51b5\u3002\u8fd9\u65f6\u4e00\u4e9b\u5b57\u7b26\u4f1a\u88ab\u629b\u5f03\uff0c\u6240\u4ee5\u8981\u5c06\u5bf9\u5e94\u5b57\u7b26\u7684$cnt$\u503c\u91cd\u65b0\u589e\u5927\uff0c\u4e14\u5982\u679c\u6709\u4ece$0$\u53d8$1$\u7684$cnt$\u503c\uff0c\u8fd8\u8981\u5c06$R$\u589e\u5927\u3002\u5982\u679c\u6682\u65f6\u6ca1\u6709\u51fa\u73b0\u4e0a\u8ff0\u60c5\u51b5\uff0c\u5219\u5b50\u4e32\u4ecd\u7136\u5408\u6cd5\u3002\n\n\u56e0\u6b64\u4e3b\u7b97\u6cd5\u6846\u67b6\u5982\u4e0b\uff1a\n\n\uff08$1$\uff09\u53f3\u79fb$r$\u76f4\u5230$r=n$\u6216$R=0$\uff1b\n\n\uff08$2$\uff09\u5c06$r-l+1$\u4e0e$ans$\u6253\u64c2\uff1b\n\n\uff08$3$\uff09\u5c06$l$\u53f3\u79fb\u4e00\u4f4d\uff0c\u5224\u65ad\u5b50\u4e32\u662f\u5426\u4ecd\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u540c\u65f6$l,r$\u53f3\u79fb\u8fc7\u7a0b\u4e2d\u5bf9$cnt$\u503c\u7684\u8c03\u6574\u5f88\u76f8\u4f3c\uff0c\u53ef\u4ee5\u62bd\u8c61\u6210\u540c\u4e00\u4e2a\u51fd\u6570\u3002\n\n\u53c2\u8003\u7a0b\u5e8f\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=(2e5+5);\nint N,K,R,x,y,a[MAXN],cnt[MAXN],ans;\nbool flg[MAXN];\nvoid adjust(int x,int k){\n\tif (flg[a[x]])\n\t\tif ((cnt[a[x]]+=k)==(k+1>>1)) R+=k;\n}\nint main(){\n\tscanf(\"%d%d%d\",&N,&K,&R),ans=1e7;\n\tfor (int i=1;i<=N;i++) scanf(\"%d\",&a[i]);\n\tfor (int i=1;i<=R;i++)\n\t\tscanf(\"%d%d\",&x,&y),cnt[x]=y,flg[x]=1;\n\tfor (int i=1,j=0;i<=N;i++){\n\t\twhile (j<=N-1&&R>=1) j++,adjust(j,-1);\n\t\tif (j>N-1&&R) break;\n\t\tans=min(ans,j-i+1),adjust(i,1);\n\t}\n\tif (ans==1e7) printf(\"impossible\");\n\telse printf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1584241163,
        "uid": 54456,
        "name": "\u9752\u4e18\u6768\u54f2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4792 \u3010[BalticOI 2018]\u706b\u661f\u4eba\u7684 DNA\u3011"
    },
    {
        "content": "## \u6ce8\uff1a\u672c\u9898\u89e3\u4e3a\u5b98\u65b9\u9898\u89e3\uff0c\u7528\u8bed\u53ef\u80fd\u548c\u9898\u9762\u6709\u4e9b\u5dee\u5f02\u3002\n### \u5b50\u4efb\u52a11\n\u5b9a\u4e49$s=s_1s_2...s_N$\u4e3a DNA \u5b57\u7b26\u4e32\u3002\u7ed9\u4f60\u4e00\u4e2a\u5b50\u4e32$t=s_is_{i+1}...s_j$\uff0c\u68c0\u67e5$t$\u4e2d\u662f\u5426\u542b\u6709\u6240\u6709\u8981\u6c42\u7684\u5b57\u7b26\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N \\cdot R)$\u3002\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u66b4\u529b\uff0c\u53ea\u9700\u8981\u5faa\u73af\u5e76\u4e14\u8ba1\u7b97\u51fa\u5728\u5b50\u4e32\u4e2d\u6bcf\u4e2a\u8981\u6c42\u7684\u5b57\u7b26\u6570\u91cf\u662f\u5426\u7b26\u5408\u5373\u53ef\u3002\u90a3\u4e48\uff0c\u53ef\u4ee5\u901a\u8fc7\u66b4\u529b\u679a\u4e3e\u627e\u51fa\u6700\u4f18\u7684\u5b50\u4e32(\u6709$C_2^\t{N+1}=O(N^2)$\u4e2a)\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N^3R)$\n\n### \u5b50\u4efb\u52a12\n\n\u53ef\u4ee5\u505a\u4e00\u4e9b\u9884\u5904\u7406\uff0c\u8fd9\u6837\u68c0\u67e5\u5b57\u5b50\u4e32\u662f\u5426\u5408\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86$O(R)$\u3002\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\u89e3\u51b3\uff08\u5373\u8ba1\u7b97$s$\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff09\u3002\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(R)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(N^2R)$\n\n### \u5b50\u4efb\u52a13\n\n\u5176\u5b9e\uff0c\u5f53$N=100000$\u5de6\u53f3\u65f6\uff0c\u6839\u672c\u4e0d\u7528\u68c0\u67e5\u6240\u6709\u5b50\u4e32\u3002\u627e\u51fa$i \\in \\{1,...,N\\}$\u4e2d\uff0c\u5305\u542b\u8db3\u591f\u591a\u7684\u8981\u6c42\u5b57\u7b26\u7684\u5b57\u4e32$s_i...s_j$\uff0c\u5e76\u4f7f\u5f97$j$\u6700\u5c0f\u5373\u53ef\u3002\u7528\u4e8c\u5206\u4ee5\u53ca\u524d\u7f00\u548c\u89e3\u51b3\u3002\u590d\u6742\u5ea6\u5c31\u662f$O(NR \\log\\, N)$\n### \u5b50\u4efb\u52a14\n\u60f3\u7528O(N)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 _\u53cc\u6307\u9488_ \u7684\u601d\u60f3\u89e3\u51b3\u3002\u8bb0\u5f55\u4e00\u4e2a\u5b50\u4e32$s_l...s_r$\uff0c\u5982\u679c\u5b83\u4e0d\u5408\u6cd5\u90a3\u5c31\u662f\u592a\u5c0f\u4e86\uff0c\u8fd9\u65f6\u53ef\u4ee5$r$++\u3002\u5982\u679c\u5408\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u4e32\u6709\u53ef\u80fd\u592a\u5927\uff0c\u90a3\u4e48\uff0c$l$++\u3002\u8fd9\u6837\u53ea\u7528\u68c0\u67e5$O(N)$\u4e2a\u5b50\u4e32\u3002\n\n\u6bcf\u6b21\u52a0\u51cf$l,r$\uff0c\u5b50\u4e32\u7684\u53d8\u5316\u5e76\u4e0d\u592a\u5927\u3002\u6240\u4ee5\u53ef\u4ee5\u8bb0\u5f55\uff1a\n1. \u5728\u5b50\u4e32\u4e2d\u7684\u5b57\u7b26\u6709\u6bcf\u79cd\u6709\u591a\u5c11\u4e2a\uff08\u5b9a\u4e49\u4e3a$ch[$\u5143\u7d20\u79cd\u7c7b$][$\u4f4d\u7f6e$]$\uff09\n2. \u5728\u5b50\u4e32\u4e2d\u51fa\u73b0\u7684\u8981\u6c42\u7684\u5b57\u7b26\uff08\u4f46\u672a\u6ee1\u8db3\u8981\u6c42\uff09\u6bcf\u79cd\u6709\u591a\u5c11\u4e2a\u3002\n\n$l$++\u65f6\uff0c\u6211\u4eec\u4ee4$ch[s_l][l]$--\uff0c\u5982\u679c\u8981\u6c42\u7684\u5b57\u7b26\u53d8\u5c11\uff0c\u6211\u4eec\u5c31\u589e\u52a0\u8981\u6c42\u7684\u5b57\u7b26\u4e2a\u6570\u3002\n\n$r$\u7684\u64cd\u4f5c\u540c\u7406\u3002\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86\u7ebf\u6027\u3002",
        "postTime": 1534080788,
        "uid": 52356,
        "name": "Anfangen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4792 \u3010[BalticOI 2018]\u706b\u661f\u4eba\u7684 DNA\u3011\uff08\u8bd1\uff09"
    }
]