[
    {
        "content": "### 20pts:\n\u679a\u4e3e\u4ece\u54ea\u91cc\u5f00\u59cb\u4ee5\u53ca\u6bcf\u4e00\u7b14\u7684\u7ed3\u675f\u4f4d\u7f6e\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n### 40pts:\n\u7ea6\u5b9a\uff1a\n\n$or[i,j] = a_i$ $or$ $a_{i+1}$ $or$ $...$ $or$ $a_j$\n\n$and[i,j] = a_i$ $and$ $a_{i+1}$ $and$ $...$ $and$ $a_j$ \n\n$gcd[i,j] = gcd(a_i, a_{i+1}, a_{i+2}, ... , a_j)$\n\n\u8bbe$f[i]$\u4e3a\u753b\u5230$i$\u4e3a\u6b62\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u5206\u6570\uff0c\n\u5219\u663e\u7136\u6709\u8f6c\u79fb\uff1a\n\n$f[i] = max\\{f[j-1]+or[i,j]+and[i,j]+gcd[i,j]\\}$\n\u5176\u4e2d$j\\le i$\u3002\n\u904d\u5386$i$\u548c$j$\u8fdb\u884cdp\u53ef\u4ee5\u83b7\u5f97\u8fd9\u4e00\u90e8\u5206\u5206\u3002\n\n### 70pts:\n\u89c2\u5bdf\u5230\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\uff1a\n\n\u82e5\u533a\u95f4$[p,q]$\u5305\u542b\u4e8e$[r,s]$,\u5219\u6709\uff1a\n\n$or[p,q]\\le or[r,s]$\n\n$and[r,s]\\le and[p,q]$\n\n$gcd[r,s]\\le gcd[p,q]$\n\n\u5982\u679c\u6211\u4eec\u56fa\u5b9a\u4e00\u4e2a\u53f3\u7aef\u70b9$q$\u5e76\u4e14\u4ece\u5927\u5230\u5c0f\u904d\u5386\u5de6\u7aef\u70b9$p$\uff0c\u5e76\u4e14\u8bbe\u6bcf\u4e2a\u683c\u5b50\u7684\u5206\u6570\u8303\u56f4\u5728$[0,k]$\u4e2d\uff0c\u90a3\u4e48$or[p,q],and[p,q],gcd[p,q]$\u90fd\u4f1a\u6301\u7eed\u4e0d\u4e25\u683c\u5730\u9012\u589e\\\u9012\u51cf\uff0c\n**\u5e76\u4e14\u5728\u9012\u589e\\\u9012\u51cf$O(logk)$\u6b21\u4e4b\u540e\u5c31\u4f1a\u8fbe\u5230\u4e00\u4e2a\u6700\u5927\\\u6700\u5c0f\u503c\u4e0d\u518d\u6539\u53d8**\u3002\n\n\u8fd9\u662f\u4e0d\u96be\u8bc1\u660e\u7684\uff1a\n\n\u5bf9\u4e8e$or$\u548c$and$\uff0c\u7531\u4e8e\u6bcf\u6b21\u53d8\u5316\u90fd\u4f1a\u6539\u53d8\u5176\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6240\u4ee5\u6700\u591a\u5c06\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u90fd\u6539\u53d8\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u603b\u5171\u6539\u53d8$O(logk)$\u6b21\u3002\n\n\u5bf9\u4e8e$gcd$\uff0c\u6bcf\u6b21\u53d8\u5316\u4e4b\u540e\u7684\u503c\u90fd\u662f\u4e4b\u524d\u503c\u7684\u4e00\u4e2a\u56e0\u6570\uff0c\u5fc5\u7136\u662f\u4e0d\u8d85\u8fc7\u4e4b\u524d\u503c\u7684\u4e00\u534a\u7684\uff0c\u6240\u4ee5\u6700\u591a\u53d8\u5316$O(logk)$\u6b21\u5c31\u4f1a\u8fbe\u5230$1$\u3002\n\n**\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001$f[i]$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a$i$\u4e4b\u524d\u7684\u51b3\u7b56\u70b9\u5206\u6210\u81f3\u591a$O(logk)$\u6bb5\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\uff0c\u4efb\u610f\u5c5e\u4e8e\u8fd9\u4e00\u6bb5\u7684$j_1,j_2$\uff0c\u6709$or[j_1,i]=or[j_2,i],and[j_1,i]=and[j_2,i],gcd[j_1,i]=gcd[j_2,i]$**\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$i$\uff0c\u4e8c\u5206\u67e5\u627e\u51fa\u524d\u9762\u6bcf\u4e00\u6bb5\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u5185\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u67e5\u8be2$f$\u7684\u6700\u5927\u503c\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\u4e00\u5171\u679a\u4e3e$O(n)$\u4e2a\u5f85\u8f6c\u79fb\u7684\u72b6\u6001\uff0c\u6bcf\u4e2a\u72b6\u6001\u9700\u8981\u627e\u51fa$O(logk)$\u6bb5\uff0c\u6bcf\u4e00\u6bb5\u9700\u8981$O(logn)$\u65f6\u95f4\u627e\u51fa\u3002\u7531\u4e8e\u6c42\u533a\u95f4$gcd$\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u9700\u8981$O(logk)$\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u603b\u5171\u7684\u590d\u6742\u5ea6\u4e0a\u754c\u662f$O(nlognlog^2k)$\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u7531\u4e8e\u8fd9\u4e2a\u4e0a\u754c\u5341\u5206\u5bbd\u677e\uff0c\u8fd9\u6837\u7684\u7b97\u6cd5\u5e94\u8be5\u53ef\u4ee5\u83b7\u5f97\u63a5\u8fd1\u6ee1\u5206\u6216\u8005\u6ee1\u5206\u3002\n\n### 100pts:\n\n\u6211\u4eec\u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u4e8c\u5206\u627e\u51fa\u6bb5\u843d\uff0c\u8fd9\u662f\u5341\u5206\u6d6a\u8d39\u65f6\u95f4\u7684\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6bcf\u6b21\u8ba1\u7b97\u51fa\u4e00\u4e2a$f[i]$\uff0c\u6211\u4eec\u9700\u8981\u52a0\u5165\u53ef\u7528\u51b3\u7b56\u70b9\u7684\u53ea\u6709$i$\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\u800c\u4e14\u6211\u4eec\u4e0d\u96be\u60f3\u5230\uff0c\u5bf9\u4e8e$f[i]$\u7684\u51b3\u7b56\u70b9\u5206\u51fa\u7684\u6bcf\u4e00\u6bb5\uff0c\u5728$f[i+1]$\u60c5\u51b5\u4e0b\u7684\u5206\u6bb5\u4e2d\u5fc5\u7136\u4e0d\u4f1a\u88ab\u62c6\u6210\u591a\u4e2a\u5c0f\u6bb5\uff0c\u800c\u53ea\u53ef\u80fd\u548c\u5176\u4ed6\u76f8\u90bb\u7684\u6bb5\u843d\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u7684\u6bb5\u843d\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u4ece\u59cb\u81f3\u7ec8\u53ea\u9700\u8981\u7ef4\u62a4\u5f53\u524d\u51b3\u7b56\u70b9\u7684\u5206\u6bb5\u5373\u53ef\u3002\u6bcf\u6b21\u8ba1\u7b97\u51fa$f[i]$\u540e\uff0c\u5c06$[i,i]$\u4f5c\u4e3a\u65b0\u7684\u4e00\u6bb5\u52a0\u5165\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e00\u6bb5\uff0c\u5224\u65ad\u5728$f[i+1]$\u7684\u60c5\u51b5\u4e0b\u76f8\u90bb\u4e24\u6bb5\u7684$or,and,gcd$\u503c\u662f\u5426\u90fd\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\u5c31\u8fdb\u884c\u5408\u5e76\u3002\n\n\u6bcf\u4e00\u6bb5\u9664\u4e86\u7ef4\u62a4$or,and,gcd$\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u7ef4\u62a4\u5f53\u524d\u6bb5\u7684\u6700\u5927$f$\u503c\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u8f6c\u79fb\u65f6\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u53ea\u9700\u8981$O(1)$\u65f6\u95f4\u6765\u67e5\u8be2\u5f53\u524d\u6bb5\u7684\u6700\u4f18\u51b3\u7b56\u70b9\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u6b64\u5916\uff0cstd\u4e2d\u4f7f\u7528\u4e86st\u8868\u6765\u7ef4\u62a4\u533a\u95f4\u7684$or,and,gcd$\u503c\uff0c\u8fd9\u6837\u7684\u8bdd\u533a\u95f4\u5408\u5e76\u5c31\u53ef\u4ee5\u505a\u5230$O(logk)$\u3002\n\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u9884\u5904\u7406st\u8868\uff1a$O(nlognlogk)$\n\n\u7ef4\u62a4\u51b3\u7b56\u70b9\u6bb5\u843d\uff1a\u7531\u4e8e\u6bcf\u4e00\u65f6\u523b\u81f3\u591a\u6709$O(logk)$\u6bb5\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f$O(nlog^2k)$\n\n\u8f6c\u79fb\uff1a\u603b\u7684\u8f6c\u79fb\u590d\u6742\u5ea6\u663e\u7136\u662f$O(nlogk)$\u7684\u3002\n\n\u603b\u590d\u6742\u5ea6\u7684\u4e0a\u754c\u4e3a$O(nlog^2k)$\u3002\u8fd9\u4e2a\u4e0a\u754c\u4e5f\u6bd4\u8f83\u5bbd\u677e\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u6b64\u9898\u5b8c\u7ed3\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n\nusing namespace std;\nconst int MAXN = 300005;\ntypedef long long ll;\nint n,k,a[MAXN],bin[MAXN<<1];\ninline int gcd(int a, int b)\n{\n    int c;\n    while(b)\n    {\n        c = a;\n        a = b;\n        b = c%b;\n    }\n    return a;\n}\nint sto[MAXN][19],sta[MAXN][19],stg[MAXN][19];\ninline int queyro(int l, int r)\n{\n    int kk = bin[r-l+1];\n    return sto[l][kk]|sto[r-(1<<kk)+1][kk];\n}\ninline int querya(int l, int r)\n{\n    int kk = bin[r-l+1];\n    return sta[l][kk]&sta[r-(1<<kk)+1][kk];\n}\ninline int queryg(int l, int r)\n{\n    int kk = bin[r-l+1];\n    return gcd(stg[l][kk],stg[r-(1<<kk)+1][kk]);\n}\nll f[MAXN];\nstruct Node\n{\n    ll val1,val2,val3,maxf;\n}pool[MAXN];\nint tot,front = 0, rear = 0;\nint nxt[MAXN],lst[MAXN];\ninline void insert(Node t)\n{\n    pool[++tot] = t;\n    nxt[rear] = tot, lst[tot] = rear;\n    rear = tot;\n    nxt[rear] = -1;\n}\ninline void remove(int pos)\n{\n    nxt[lst[pos]] = nxt[pos];\n    if(pos!=rear) lst[nxt[pos]] = lst[pos];\n    if(pos==rear) rear = lst[pos];\n}\ninline int read()\n{\n    char c = 0;\n    int res = 0, flag = 1;\n    while(c<'0'||c>'9')\n    {\n        c = getchar();\n        if(c=='-') flag = -1;\n    }\n    while(c>='0'&&c<='9')\n    {\n        res = res*10+c-'0';\n        c = getchar();\n    }\n    return res*flag;\n}\ninline void init()\n{\n    tot = 0;\n    front = rear = 0;\n    memset(nxt,0,sizeof(nxt));\n    memset(lst,0,sizeof(lst));\n    for(int i = 0; i<MAXN; i++)\n        f[i] = -(1ll<<62);\n    nxt[0] = -1;\n}\n\nint main()\n{\n    int T;\n    cin >> T;\n    while(T--)\n    {\n        init();\n    \tcin >> n >> k;\n    \tfor(int i = 1; i<=n; i++)\n        \ta[i] = read();\n    \tfor(int i = 1; i<=k; i++)\n        \tf[i-1] = read();\n    \tfor(int cnt = 0, i = 1; i<=n; i <<= 1, cnt++)\n        \tfor(int j = i; j<(i<<1); j++)\n            \tbin[j] = cnt;\n    \tfor(int i = 1; i<=n; i++)\n        \tsto[i][0] = sta[i][0] = stg[i][0] = a[i];\n    \tfor(int j = 1; (1<<j)<=n; j++)\n        \tfor(int i = 1; i+(1<<j)-1<=n; i++)\n        \t{\n            \tsto[i][j] = sto[i][j-1]|sto[i+(1<<(j-1))][j-1];\n            \tsta[i][j] = sta[i][j-1]&sta[i+(1<<(j-1))][j-1];\n            \tstg[i][j] = gcd(stg[i][j-1],stg[i+(1<<(j-1))][j-1]); \n        \t}\n    \tNode tmpnode;\n    \tfor(int i = k; i<=n; i++)\n    \t{\n        \tint tmppos = nxt[front];\n        \twhile(tmppos>=0)\n        \t{\n            \tpool[tmppos].val1 |= a[i];\n            \tpool[tmppos].val2 &= a[i];\n            \tpool[tmppos].val3 = gcd(pool[tmppos].val3,a[i]);\n            \ttmppos = nxt[tmppos];\n            }\n        \ttmpnode.val1 = queyro(i-k+1,i);\n        \ttmpnode.val2 = querya(i-k+1,i);\n        \ttmpnode.val3 = queryg(i-k+1,i);\n        \ttmpnode.maxf = f[i-k];\n        \tinsert(tmpnode);\n        \ttmppos = nxt[front];\n        \twhile(nxt[tmppos]>=0&&tmppos>=0)\n        \t{\n            \tif(pool[nxt[tmppos]].val1==pool[tmppos].val1&&\n               \t   pool[nxt[tmppos]].val2==pool[tmppos].val2&&\n                   pool[nxt[tmppos]].val3==pool[tmppos].val3)\n            \t{\n                \tpool[tmppos].maxf = max(pool[tmppos].maxf,pool[nxt[tmppos]].maxf);\n                    remove(nxt[tmppos]);\n            \t}\n                tmppos = nxt[tmppos];\n            }\n            tmppos = nxt[front];\n            while(tmppos>=0)\n            {\n            \tf[i] = max(f[i],pool[tmppos].maxf+pool[tmppos].val1+\n                                pool[tmppos].val2+pool[tmppos].val3);\n            \ttmppos = nxt[tmppos];\n        \t}\n        }\n    \tcout << f[n] << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1545147549,
        "uid": 31098,
        "name": "Caro23333",
        "ccfLevel": 8,
        "title": "xtq\u7684\u795e\u7b14-\u8d5b\u540e\u9898\u89e3"
    },
    {
        "content": "\u8349\uff0c\u8c03\u4e86\u534a\u5929\u539f\u6765\u662f\u4e00\u4e2a\u5c0f\u7ec6\u8282\u9519\u8bef\u3002\u3002\n\n\u5148\u8003\u8651\u8fd9\u4e2a\u666e\u901a\u65b9\u7a0b\u600e\u4e48\u5199\u3002\n\n$f_i =\\max\\{ {f_{j-1} + [or] + [and] + [\\gcd]}\\}$\u3002\n\n\n\u8003\u8651\u4e09\u4e2a\u7684\u6027\u8d28\uff0c\u53ea\u4f1a\u53d8\u5316 $\\log$ \u6b21\uff0c\u6211\u4eec\u628a\u53d8\u5316\u7684\u4f4d\u7f6e\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u6700\u591a\u4f1a\u6709 $3 \\log$ \u4e2a\u4f4d\u7f6e\u3002\n\n$b_i$ \u7684\u4f5c\u7528\u662f\u8ba9 $f_{i-1} = b_{i}$\u3002\n\n\u7136\u540e\u679a\u4e3e\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u4e4b\u95f4\u7684\u533a\u95f4\uff0c\u7136\u540e\u533a\u95f4\u6700\u5927\u503c\uff0c\u66f4\u65b0\u5230 $f_i$\uff0c\u7136\u540e\u7528 $f_i$ \u66f4\u65b0\u5230\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n```cpp\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\n#define rep(i,x,y) for(int i=x,I=y+1;i<I;++i)\n#define per(i,x,y) for(int i=x,I=y-1;i>I;--i)\nusing namespace std;\nusing ll=long long;\nvoid cmax(int&x,const int&y){x=x>y?x:y;}\nvoid cmax(ll&x,const ll&y){x=x>y?x:y;}\nvoid cmin(int&x,const int&y){x=x<y?x:y;}\ntemplate<class T>istream&operator>>(istream&in,vector<T>&V){for(auto&x:V)in>>x;return in;}\ntemplate<class T>ostream&operator<<(ostream&out,const vector<T>&V){for(auto x:V)out<<x<<' ';return out;}\ntemplate<class T>void sort(vector<T>&V){sort(V.begin(),V.end());}\ntemplate<class T>void reverse(vector<T>&V){reverse(V.begin(),V.end());}\ntemplate<class T>int SZ(const vector<T>&V){return (int)V.size();}\nvoid debug(){cerr<<\"whxorz\"<<' ';}\nvoid debug(int x){debug();cerr<<x<<'\\n';}\nvoid debug(char x){debug();cerr<<x;}\nint n,k;\nconst int N=3e5+10;\nconst ll LOW=-1e18;\nint a[N];\nint st1[40],top1;\nint st2[40],top2;\nint st3[40],top3;\nll f[N],mx[N<<2];\nvoid build(int l,int r,int p){mx[p]=LOW;if(l==r)return;int mid=l+r>>1;build(l,mid,p<<1);build(mid+1,r,p<<1|1);}\n//void up(const int&p){cmax(mx[p]=mx[p<<1],mx[p<<1|1]);}\nvoid upd(int l,int r,int p,const int&x,const ll&v){\n\tcmax(mx[p],v);if(l==r)return;\n\tint mid=l+r>>1;if(x<=mid)upd(l,mid,p<<1,x,v);else upd(mid+1,r,p<<1|1,x,v);\n//\tup(p);\n}\nll query(const int&ql,const int&qr,int l,int r,int p){\n\tif(ql>qr)return LOW;\n\tif(ql<=l&&r<=qr){return mx[p];}\n\tint mid=l+r>>1;ll res=LOW;\n\tif(ql<=mid)res=query(ql,qr,l,mid,p<<1);\n\tif(qr>mid)cmax(res,query(ql,qr,mid+1,r,p<<1|1));\n\treturn res;\n}\nint p[40],tp;\nusing pii=pair<int,int>;\npii q[120];\n//bool check(int*f,int sz){rep(i,2,sz)if(f[i-1]>f[i])return false;return true;}\nvoid get(const int&id,const int&v,ll&res){\n\tint nv=v;p[tp=1]=id;\n\tper(i,top1,1){if((nv|a[st1[i]])==nv)continue;p[++tp]=st1[i];nv|=a[st1[i]];}\n\ttop1=0;//per(i,tp,1)st1[++top1]=p[i];\n\twhile(tp)st1[++top1]=p[tp--];//assert(check(st1,top1));\n\t\n\tnv=v;p[tp=1]=id;\n\tper(i,top2,1){if((nv&a[st2[i]])==nv)continue;p[++tp]=st2[i];nv&=a[st2[i]];}\n\ttop2=0;//per(i,tp,1)st2[++top2]=p[i];\n\twhile(tp)st2[++top2]=p[tp--];//assert(check(st2,top2));\n\t\n\tnv=v;p[tp=1]=id;\n\tper(i,top3,1){if(__gcd(nv,a[st3[i]])==nv)continue;p[++tp]=st3[i];nv=__gcd(nv,a[st3[i]]);}\n\ttop3=0;//per(i,tp,1)st3[++top3]=p[i];\n\twhile(tp)st3[++top3]=p[tp--];//assert(check(st3,top3));\n\t\n\ttp=0;\n\trep(i,1,top1)q[++tp]=pii(st1[i],1);\n\trep(i,1,top2)q[++tp]=pii(st2[i],2);\n\trep(i,1,top3)q[++tp]=pii(st3[i],3);\n\t\n\tsort(q+1,q+tp+1);int ov=v,av=v,gv=v;\n\tconst int pos=id-k+1;\n\tper(i,tp,1){\n\t\tint val=a[q[i].first];\n\t\tif(q[i].second==1)ov|=val;if(q[i].second==2)av&=val;if(q[i].second==3)gv=__gcd(gv,val);\n\t\tif(q[i-1].first<=q[i].first-1)cmax(res,query(q[i-1].first,min(q[i].first-1,pos-1),0,n,1)+ov+av+gv);\n\t}\n}\n//#define clr(x) memset(x,0,sizeof(x))\nvoid solve(){\n\ttp=top1=top2=top3=0;build(0,n,1);\n\trep(i,k,n)f[i]=LOW;rep(i,0,k-1)upd(0,n,1,i,f[i]);rep(i,1,n){get(i,a[i],f[i]);upd(0,n,1,i,f[i]);}\n}\nint main(){\n\tios::sync_with_stdio(false);cin.tie(NULL);\n//\tfreopen(\"3.in\",\"r\",stdin);\n\tint test;cin>>test;\n\twhile(test--){cin>>n>>k;rep(i,1,n)cin>>a[i];rep(i,0,k-1)cin>>f[i];solve();cout<<f[n]<<'\\n';}\n\treturn 0;\n}\n```",
        "postTime": 1600327871,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5167 \u3010xtq\u7684\u795e\u7b14\u3011"
    }
]