[
    {
        "content": "\u6a21\u62df\u8d5b\u4e0a\u505a\u7684\u9898\n\n\u5c31\u6392\u4e2a\u5e8f\n\n\u7136\u540e\u505a   k   \u6761\u8fb9\u7684\u6700\u5927\u751f\u6210\u6811\n\n\u7136\u540e\u5c31\u83ab\u540d\u5947\u5999\u7684AC\u4e86\n\n\u7136\u540e...\n\n\u5c31\u6ca1\u6709\u7136\u540e\u4e86\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,m,k,f[100100],ans;\nstruct no\n{\n    int x,y,z;\n}a[100100];\nbool comp (const no & a,const no &b)\n{\n    return a.z>b.z;\n}\nint find(int x)\n{\n    if(f[x]!=x)\n        f[x]=find(f[x]);\n    return f[x];\n}\nvoid un(int x,int y)\n{\n    f[x]=y;\n}\nint main()\n{\n    freopen(\"carpet.in\",\"r\",stdin);\n    freopen(\"carpet.out\",\"w\",stdout);\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=m;i++)\n        scanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].z);\n    sort(a+1,a+m+1,comp);\n    for(int i=1;i<=n;i++)//\u5e76\u67e5\u96c6\uff0c\u521d\u59cb\u65f6\u6bcf\u4e2a\u7956\u5148\u90fd\u662f\u81ea\u5df1\n        f[i]=i;\n    for(int i=1,kk=0;i<=m&&kk<k;i++)\n    {\n        int l=find(a[i].x),r=find(a[i].y);\n        if(l!=r)//\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u5c31\u5408\u5e76\n        {\n            un(l,r);\n            kk++;//\u8ba1\u6570\n            ans+=a[i].z;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1504074292,
        "uid": 35360,
        "name": "\u661f\u7235",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2121 \u3010\u62c6\u5730\u6bef\u3011"
    },
    {
        "content": "# [\u987ez](https://www.cnblogs.com/-guz/) \n\n\u9898\u76ee\u63cf\u8ff0--->[p2121 \u62c6\u5730\u6bef](https://www.luogu.org/problemnew/show/P2121)\n\n## \u5206\u6790\n\n\u8fd9\u9898**\u4e3a\u4ec0\u4e48\u662f\u6700\u5927\u751f\u6210\u6811**.\n\n~~\u5148\u6765bb\u4e24\u53e5~~\n\n\u9898\u76ee\u4e3a\u62c6\u5730\u6bef,\u8ba9\u6211\u4eec\u5269\u4e0bk\u4e2a\u5730\u6bef.\n\n\u9898\u76ee\u60f3\u8981\u6211\u4eec**\u6c42\u5f97\u6700\u5927\u7684\u7f8e\u4e3d\u5ea6**.\n\n\u4e14\u8981\u6c42\u6211\u4eec\n\n``\u4fdd\u7559\u7684\u5730\u6bef\u6784\u6210\u7684\u56fe\u4e2d\uff0c\u4efb\u610f\u53ef\u4e92\u76f8\u5230\u8fbe\u7684\u4e24\u70b9\u95f4\u53ea\u80fd\u6709\u4e00\u79cd\u65b9\u5f0f\u4e92\u76f8\u5230\u8fbe``\n\n\u5f88\u660e\u663e,\u8fd9\u4e00\u8981\u6c42\u63d0\u793a\u4e86\u6211\u4eec\u6700\u540e\u7ed3\u6784\u4f1a\u662f\u4e00\u68f5\u6811\n\n(\u56e0\u4e3a\u6811\u4e0a\u8def\u5f84\u552f\u4e00\u554a,qwq.\n\n\u7136\u540e\u6839\u636e**\u6b63\u96be\u5219\u53cd**\u7684\u601d\u60f3.\n\n\u6211\u4eec\u8003\u8651**\u62fc\u5730\u6bef**.\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u60f3\u5230\u4e86**kruskal\u7b97\u6cd5**.(\uff40\u30fb\u03c9\u30fb\u00b4)\n\n\u4e0e\u666e\u901akruskal\u4e0d\u540c\u7684\u662f,\u8fd9\u91cc\u662f\u4e00\u4e2a**\u6700\u5927\u751f\u6210\u6811**\n\n\u6211\u4eec**\u62fc\u5230k\u4e2a\u5f97\u5230\u7684\u6700\u5927\u7f8e\u4e3d\u5ea6\u5c31\u662f\u7b54\u6848**\n\n**\u4e3a\u4ec0\u4e48\u662f\u62fc\u5230k\u4e2a**?\n\n\u7ed9\u5927\u5bb6\u4e00\u4e2a\u56fe.\n\n![](https://i.loli.net/2018/09/14/5b9b21927734f.png)\n\n\u5982\u679c\u6b64\u65f6\u9898\u76ee\u8981\u6c42\u6211\u4eec\u5269\u4e0b6\u4e2a\u5730\u6bef,\u5f88\u660e\u663e\u6211\u4eec\u5c066\u4e2a\u5730\u6bef\u653e\u5165\u540c\u4e00\u4e2a\u5e76\u67e5\u96c6\u4e2d\u5c31\u53ef\u6ee1\u8db3\u6761\u4ef6.\n\n(\u5df2\u7ecf\u9884\u5904\u7406\u51fa\u8f83\u5927\u7f8e\u4e3d\u5ea6\u7684\u60c5\u51b5\u4e0b)\n\n**\u62c6\u5730\u6bef,\u8ba9\u6211\u4eec\u5269\u4e0bk\u4e2a,\u56e0\u6b64\u6211\u4eec\u5408\u5e76\u51fak\u4e2a\u5373\u53ef**\n\n~~\u6240\u4ee5\u5c31\u88f8\u4e86~~\n\n## \u505a\u6cd5\n\n\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6700\u5c0f\u751f\u6210\u6811\u7565\u5fae\u4fee\u6539,\u628a**\u8fb9\u6743\u4ece\u5927\u5230\u5c0f\u6392\u5e8f**\u5373\u53ef.\n\n**\u6ce8\u610f\u5224\u65ad\u5df2\u7ecf\u52a0\u5165\u5230\u540c\u4e00\u4e2a\u5e76\u67e5\u96c6\u4e2d\u7684\u6570\u91cf\u4e3ak.**\n\n------------------\u4ee3\u7801------------------\n\n```cpp\n#include<bits/stdc++.h>\n#define IL inline\n#define RI register int\nusing namespace std;\nIL void in(int &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(s>'9' or s<'0'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0' and s<='9'){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\nint fa[100008],n,m,ans,cnt,k;\nstruct E{int pre,to,w;}edge[400008];\nIL bool cmp(const E&a,const E&b)\n{\n\treturn a.w>b.w;\n}//\u8fb9\u6743\u4ece\u5927\u5230\u5c0f\u6392\u5e8f.\nIL int find(int x)\n{\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n}//\u8def\u5f84\u538b\u7f29\u5e76\u67e5\u96c6\nIL void kruskal()\n{\n    sort(edge+1,edge+m+1,cmp);//\u6392\u5e8f\n    for(RI i=1;i<=m;i++)\n    {\n        RI u=edge[i].pre,v=edge[i].to,w=edge[i].w;\n        int fu=find(u),fv=find(v);\n        if(fu==fv) continue;\n        ans+=w;fa[fv]=fu;\n        cnt++;\n        if(cnt==k) break;//\u5224\u65ad\u5df2\u7ecf\u62fc\u4e86k\u4e2a\u5730\u6bef.\n    }\n}\nint main(){\n    in(n),in(m);in(k);\n    for(RI i=1;i<=n;i++) fa[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316.\n    for(RI i=1;i<=m;i++) \n    in(edge[i].pre),in(edge[i].to),in(edge[i].w);\n    kruskal();//kruskal\u64cd\u4f5c\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1536893761,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2121 \u3010\u62c6\u5730\u6bef\u3011"
    },
    {
        "content": "# P2121 \u62c6\u5730\u6bef \u89e3\u9898\u62a5\u544a\n\n### \u9898\u610f\n\n\u6709\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u6709\u8fb9\u6743\uff0c\u6c42\u4fdd\u7559k\u6761\u8fb9\uff0c\u4e14\u4e0d\u6784\u6210\u73af\u7684\u6700\u5927\u603b\u6743\u503c\u662f\u591a\u5c11\n\n### \u601d\u8def\n\n\u8fd9\u4e2a\u9898\u662f\u6700\u5927\u751f\u6210\u6811~~\uff08\u8fd9\u4e0d\u662f\u5e9f\u8bdd\u4e48~~\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8fb9\u6392\u5e8f\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9kruskal\u5c31\u597d\u4e86,\u6bcf\u5f53\u53d6\u4e00\u6761\u8fb9\u7684\u65f6\u5019\uff0ccnt++\uff0c\u76f4\u5230cnt==k\n\n### \u4ee3\u7801\n\n```c++\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define maxn 110000\nusing namespace std;\nstruct Edge{\n\tint x,y;\n\tdouble v;\n\tbool operator < (const Edge &a)const{\n\t\treturn v>a.v;\n\t}\n}e[maxn];\nint ecnt;\nvoid adde(int x,int y,int v){\n\te[++ecnt].x=x;\n\te[ecnt].y=y;\n\te[ecnt].v=v;\n}\nint p,s;\nint f[maxn];\nint find(int x){\n\tif(x==f[x]){\n\t\treturn x;\n\t}\n\telse{\n\t\treturn f[x]=find(f[x]);\n\t}\n}\nbool merge(int x,int y){\n\tint fx=find(x);\n\tint fy=find(y);\n\tif(fx==fy){\n\t\treturn false;\n\t}\n\telse{\n\t\tf[fx]=fy;\n\t}\n\treturn true;\n}\nint n,m,k;\nint main(){\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tint x,y,z;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\tadde(x,y,z);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tf[i]=i;\n\t}\n\tint tot=0;\n\tint ans=0;\n\tsort(e+1,e+1+m);\n\tfor(int i=1;i<=n-1;i++){\n\t\tx=e[i].x;\n\t\ty=e[i].y;\n\t\tif(merge(x,y)){\n\t\t\ttot++;\n\t\t\tans+=e[i].v;\n\t\t}\n\t\tif(tot==k){\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1569723916,
        "uid": 143418,
        "name": "\u5b51\u5f67",
        "ccfLevel": 0,
        "title": "P2121 \u62c6\u5730\u6bef \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u5f88\u660e\u663e\u662f\u8ba9\u6211\u4eec\u4ece\u56fe\uff08\u4e0d\u4fdd\u8bc1\u8054\u901a\uff09\u91cc\u627e\u51fak\u6761\u8fb9\uff0c\u4f7f\u5f97\u4e24\u70b9\u4e4b\u95f4\u6700\u591a\u53ea\u67091\u6761\u8fb9\uff0c\u90a3\u76f4\u63a5\u4e0akruskal\uff0c\u6c42\u6700\u5927\u751f\u6210\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0d\u77e5\u9053kruskal\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u7bc7\u6587\u7ae0\uff1a\n[\u4f20\u9001\u95e8](https://www.luogu.org/blog/YangZiWen/xue-xi-bi-ji-1-post)\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nstruct node{\u7528\u7ed3\u6784\u4f53\u50a8\u5b58\u8fb9\u7684\u4fe1\u606f\uff0c\u65b9\u4fbf\u6392\u5e8f\n\tint x,y,len;     x\u8868\u793a\u8d77\u70b9\uff0cy\u8868\u793a\u7ec8\u70b9\uff0clen\u8868\u793a\u6b64\u6761\u8fb9\u7684\u957f\u5ea6\n}a[N];\nint n,m,k,fa[N];    fa[x]:\u8868\u793ax\u5c5e\u4e8e\u54ea\u96c6\u5408\uff08\u5b66\u8fc7\u5e76\u67e5\u96c6\u7684\u5e94\u8be5\u90fd\u77e5\u9053\u5427qwq\uff09\nbool cmp(node a,node b){  \u5c06\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u6392\u5e8f\uff0c\u56e0\u4e3a\u662f\u6c42\u6700\u5927\u751f\u6210\u6811\uff0c\u6240\u4ee5\u9700\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\treturn a.len>b.len;\n}\nint _find(int x){  \u627e\u7238\u7238\uff08\u627ex\u7684\u6240\u5c5e\u96c6\u5408\uff09\n\tif(x!=fa[x])\n\t\tfa[x]=_find(fa[x]);\n\treturn fa[x];\n}\nkruskal\u5176\u5b9e\u662f\u8d2a\u5fc3\u548c\u5e76\u67e5\u96c6\u7684\u7ed3\u5408\uff0c\u4ee3\u7801\u4e5f\u5f88\u597d\u5199\uff1a\nvoid kruskal(){\n\tint i=1,cnt=0,tot=0;    i\u8868\u793a\u5f53\u524d\u8fb9\uff0ccnt\u8868\u793a\u5df2\u9009\u51fa\u7684\u8fb9\u7684\u4e2a\u6570\uff0ctot\u8868\u793a\u6700\u5927\u7f8e\u4e3d\u503c\n\twhile(i<=m){\u627e\u51fax\u4e0ey\u7684\u6240\u5c5e\u96c6\u5408\n\t\tint x=_find(a[i].x);\n\t\tint y=_find(a[i].y);\n\t\tif(x!=y){\u82e5\u4e0d\u5728\u540c\u4e00\u96c6\u5408\uff08\u5219\u4e24\u70b9\u672a\u8054\u901a\uff09\u56e0\u4e3a\u4ece\u5927\u5230\u5c0f\u6392\u4e86\u5e8f\uff0c\u6240\u4ee5\u5f97\u5230\u7684\u80af\u5b9a\u662f\u6700\u4f18\u89e3\n\t\t\tfa[x]=y;   \u5c06x\u7684\u6240\u5c5e\u96c6\u5408\u8bbe\u4e3ay\n\t\t\ttot+=a[i].len;  \u52a0\u4e0a\u5f53\u524d\u8fb9\u7684\u7f8e\u4e3d\u503c\n\t\t\tcnt++; \u9009\u51fa\u8fb9\u6570++\n\t\t}\n\t\tif(cnt==k)  \u9009\u5b8c\u4e86\u5c31\u4e0d\u7528\u4e86\u5728\u7ee7\u7eed\u9009\u4e0b\u53bb\u4e86\n\t\t\tbreak;\n\t\ti++;\n\t}\n\tprintf(\"%d\",tot);\n}\nint main(){\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d %d %d\",&a[i].x,&a[i].y,&a[i].len);\n\tfor(int i=1;i<=n;i++)\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316\uff0c\u5c06\u6bcf\u4e2a\u70b9\u7684\u6240\u5c5e\u96c6\u5408\u8bbe\u4e3a\u81ea\u5df1\n\t\tfa[i]=i;\n\tsort(a+1,a+1+m,cmp);\n\tkruskal();\n\treturn 0;\n}\n```",
        "postTime": 1569924416,
        "uid": 156001,
        "name": "TheAutumnGlory",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2121 \u3010\u62c6\u5730\u6bef\u3011"
    },
    {
        "content": "\u6839\u636e\u514b\u9c81\u65af\u5361\u5c14\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u601d\u60f3\uff1a\u8d2a\u5fc3+\u5e76\u67e5\u96c6\u7ef4\u62a4\n\n\u5373\uff0c\u8981\u6c42\u7f8e\u4e3d\u503c\u6700\u5927\uff0c\u90a3\u4e48\u9700\u8981\u6309\u7167\u8fb9\u6743\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f.\n\n\u7136\u540e\uff0c\u6839\u636e\u6392\u5e8f\u987a\u5e8f\u4f9d\u6b21\u5c06\u5f53\u524d\u6700\u5927\u7684\u8fb9\u6743\u52a0\u5165\u56fe\u4e2d\uff08\u8be5\u8d2a\u5fc3\u7b56\u7565\u7684\u8bc1\u660e\u53ef\u4ee5\u53c2\u8003\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\u7684\u8bc1\u660e\uff0c\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u8bba\u8ff0\uff09\n\n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u73af\u7684\u95ee\u9898\uff0c\u9700\u8981\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\uff1a\u5373\uff0c\u5f53\u679a\u4e3e\u7684\u8fb9\u7684\u8d77\u59cb\u70b9\u5904\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408\u65f6\u8bf4\u660e\u5df2\u7ecf\u6709\u8fb9\u76f8\u8fde\uff0c\u4e0d\u80fd\u53d6\u8fd9\u6761\u8fb9.\u5426\u5219\u5c06\u8fd9\u4e24\u4e2a\u70b9\u5408\u5e76.\n\n\u8bf4\u767d\u4e86\u5c31\u662f\u6709\u8fb9\u6570\u9650\u5236\u7684\u6700\u5927\u751f\u6210\u6811..........\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ans=0;\nint Edge_cnt=0,tot=0;\nint father[10000000];\nstruct node\n{\n\tint u,v,w;\n}edge[10000000];\ninline bool cmp(node x,node y)\n{\n\treturn x.w>y.w;\n}//\u6309\u8fb9\u6743\u6392\u5e8f\nint getfather(int x)\n{\n\tif (father[x]==x) return x;\n\telse return father[x]=getfather(father[x]);\n}//\u67e5\u627e\u7956\u5148+\u8def\u5f84\u538b\u7f29\nint main()\n{\n\tint n,m,K;\n\tcin>>n>>m>>K;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint U,V,W;\n\t\tcin>>U>>V>>W;\n\t\tedge[++tot]=(node){U,V,W};\n\t}//\u8fd9\u662f\u4e00\u79cd\u76f4\u63a5\u5bf9\u7ed3\u6784\u4f53\u8d4b\u503c\u7684\u65b9\u6cd5\n\tsort(edge+1,edge+tot+1,cmp);\n\tfor (int i=1;i<=n;i++) father[i]=i;\n\tfor (int i=1;i<=tot;i++)\n\t{\n\t\tint point1=getfather(edge[i].u);\n\t\tint point2=getfather(edge[i].v);\n\t\tif (point1!=point2)//\u82e5\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u65f6\n\t\t{\n\t\t\tfather[point1]=point2;\n\t\t\tans+=edge[i].w;//\u5408\u5e76+\u7d2f\u52a0\u7b54\u6848\n\t\t\tEdge_cnt++;\n\t\t\tif (Edge_cnt>=K) break;//\u82e5\u8d85\u8fc7\u6b21\u6570\u9650\u5236\u5219\u9000\u51fa\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1532341096,
        "uid": 33243,
        "name": "\u5c0f\u5468\u732a\u732a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2121 \u3010\u62c6\u5730\u6bef\u3011"
    },
    {
        "content": "\u9996\u5148\u9898\u76ee\u8981\u6c42\u4e0d\u80fd\u6709\u73af\uff0c\u90a3\u5c31\u4e00\u5b9a\u662f\u6811\uff01\n\n\u7136\u800c\u53ea\u80fd\u4fdd\u7559k\u6761\u5730\u6bef\u2026\u2026\u90a3\u5c31\u628a\u591a\u4f59\u7684\u5220\u6389\u5c31\u53ef\u4ee5\u4e86\n\n\u7531\u4e8e\u8981\u7f8e\u4e3d\u503c\u6700\u5927\uff0c\u6240\u4ee5\u5c31\u662f\u6700\u5927\u751f\u6210\u6811\uff0c\u4f46\u662f\u53ea\u4fdd\u7559\u524dk\u5927\u7684\u8fb9\n\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <vector>\n#include <queue>\n\nstruct Edge//\u8fb9\u6570\u636e\n{\n    int from;\n    int to;\n    int weight;\n};\n\nstruct Cmp//\u4f18\u5148\u961f\u5217\u6bd4\u8f83\u7ed3\u6784\u4f53\uff0c\u6309\u964d\u5e8f\u6392\u5217\n{\n    bool operator() (const Edge& e1, const Edge& e2)\n    {\n        return e1.weight < e2.weight;\n    }\n};\n\nint parent[100010];//\u7236\u8282\u70b9\nstd::priority_queue<Edge, std::vector<Edge>, Cmp> queue;//\u4f18\u5148\u961f\u5217\n\nint find(int);//\u5e76\u67e5\u96c6\n\nint main()\n{\n    int n_count = 0;\n    int e_count = 0;\n    int m_count = 0;\n    std::cin >> n_count >> e_count >> m_count;\n\n    for (int i = 0; i < e_count; i++)//\u8bfb\u6570\u636e\n    {\n        int f = 0;\n        int t = 0;\n        int w = 0;\n        std::cin >> f >> t >> w;\n\n        Edge e;\n        e.from = f;\n        e.to = t;\n        e.weight = w;\n        queue.push(e);\n    }\n\n    for (int i = 0; i <= n_count; i++)//\u521d\u59cb\u5316\uff0c\u81ea\u5df1\u7684\u7236\u8282\u70b9\u662f\u81ea\u5df1\n    {\n        parent[i] = i;\n    }\n\n    int max = 0;\n\n    while (m_count > 0)//\u5982\u679c\u8fd8\u6ca1\u6709\u7559\u591f\n    {\n        Edge e = queue.top();\n        queue.pop();\n\n        int pf = find(e.from);\n        int pt = find(e.to);\n\n        if (pf != pt)//\u4e24\u4e2a\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\u7684\u8bdd\n        {\n            parent[pf] = pt;//\u66b4\u529b\u5408\u5e76\n            max += e.weight;\n\n            m_count--;//\u7559\u4e0b\u4e00\u6761\u5730\u6bef\n        }\n    }\n\n    std::cout << max << std::endl;\n\n    //system(\"pause\");\n    return 0;\n}\n\nint find(int x)//\u5e76\u67e5\u96c6\u5408\u5e76\u51fd\u6570\n{\n    int px = parent[x];\n    while (px != parent[px])//\u4e00\u76f4\u627e\u5230\u7236\u8282\u70b9\u662f\u81ea\u5df1\u7684\u8282\u70b9\u4e3a\u6b62\n    {\n        px = parent[px];\n    }\n\n    int i = x;\n    int j = 0;\n    while (i != px)//\u8def\u5f84\u538b\u7f29\n    {\n        j = parent[i];\n        parent[i] = px;\n        i = j;\n    }\n\n    return px;\n}\n```",
        "postTime": 1488620320,
        "uid": 15854,
        "name": "NeilKleist",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2121 \u3010\u62c6\u5730\u6bef\u3011"
    },
    {
        "content": "## kruskal\n\u5b9e\u9645\u4e0a\u8fd9\u9898\u8fd1\u4f3c\u4e8e\u4e00\u9053\u677f\u5b50\u9898\uff0c\u6211\u592a\u83dc\u53ea\u4f1akruskal\u3002\n\n\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u8fde\u63a5\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u7528\u5730\u6bef\u6765\u4ee3\u66ff\uff0c\u8fb9\u6743\u5c31\u662f\u5730\u6bef\u7684\u7f8e\u4e3d\u5ea6\u3002\n\n\u9898\u76ee\u8fd8\u8981\u6c42\u62c6\u5b8c\u540e\u7684\u5730\u6bef\u8054\u901a\uff0c\u4f46\u4e0d\u80fd\u6709\u73af\uff0c\u8fd9\u4e00\u770b\u5c31\u662f\u751f\u6210\u6811\u4e86\u3002\u6240\u4ee5\u9898\u76ee\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u8fd9\u6837\u7684\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a$n$\u4e2a\u70b9$m$\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u51fa\u6709$k$\u6761\u8fb9\u7684\u6700\u5927\u751f\u6210\u6811\u3002\n\n\u6700\u5927\u751f\u6210\u6811\u7528kruskal\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8ba9\u8fb9\u6309\u8fb9\u6743\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u5373\u53ef\u3002\n\n\u6700\u540e\u6ce8\u610f\u662f\u8981\u8fde$k$\u6761\u8fb9\uff0c\u800c\u4e0d\u662f$k-1$\u6761\u8fb9\u3002\n\n## CODE\n```\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nstruct node\n{\n\tint x, y, w;\n}edge[200002];\n\nint dad[200002];\nint n, m, ans, k;\n\nbool cmp(node xx, node yy)\n{\n\treturn xx.w>yy.w;//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n}\n\nint anc(int x)\n{\n\tif(dad[x] == x)\n\t\treturn x;\n\treturn dad[x] = anc(dad[x]);//\u67e5\u8be2\u7956\u5148\n}\n\nvoid uni(int x, int y)\n{\n\tx = anc(x);\n\ty = anc(y);\n\t\n\tif(x != y)\n\t\tdad[x] = y;//\u5408\u5e76\n}\n\nbool ask(int x, int y)\n{\n\treturn anc(x) == anc(y);\n}//\u8be2\u95ee\n\nvoid work()\n{\n\tcin>>n>>m>>k;\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tdad[i] = i;//dad\u521d\u59cb\u5316\u4e3a\u81ea\u5df1\n\n\tfor(int i=1;i<=m;i++)\n\t\tcin>>edge[i].x>>edge[i].y>>edge[i].w;\n\t\n\tsort(edge+1, edge+m+1, cmp);//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\t\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(anc(edge[i].x) != anc(edge[i].y))\n        //\u5982\u679c\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\n\t\t{\n\t\t\tk--;//\u9700\u8981\u8fde\u7684\u8fb9\u6570-1\n\t\t\tans += edge[i].w;\n\t\t\tdad[anc(edge[i].x)] = edge[i].y;//\u5408\u5e76\t\n\t\t} \n\t\t\n\t\tif(k == 0)//\u8fde\u4e86k\u6761\u8fb9\uff0c\u90fd\u8fde\u5b8c\u4e86\n\t\t\tbreak;//\u7ed3\u675f\u8fde\u8fb9\n\t}\n\t\n\tcout<<ans<<endl;\n}\n\nint main(void)\n{\n\twork();\n\treturn 0;//\u5b8c\u7f8eAC~\n}\n```\n",
        "postTime": 1584840064,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2121 \u3010\u62c6\u5730\u6bef\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u4e0e\u6700\u5c0f\u751f\u6210\u6811\u5f88\u76f8\u4f3c\uff0c\u6709\u5174\u8da3\u7684\u7ae5\u978b\u4eec[\u6233\u6233\u8fd9\u91cc](https://www.luogu.org/blog/Zhouqixuan0211/solution-p3366)\u770b\u770b\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\n------------\n## \u8fd9\u9053\u9898\u4e00\u5171\u6709\u4e24\u79cd\u529e\u6cd5kruskal\u548cprim\uff0c\u8fd9\u91cc\u7ed9\u5927\u5bb6\u8bb2\u4e00\u8bb2\u8f83\u7b80\u5355\u4e00\u70b9\u7684kruskal\u7b97\u6cd5\u3002\n\n\n------------\n### \u6b65\u9aa4\uff1a\n### 1.\u7528\u7ed3\u6784\u4f53\u53d8\u91cfedge\u5b58\u50a8\u8fd9\u6761\u8fb9\u7684\u8d77\u70b9\u3001\u7ec8\u70b9\u53ca\u7f8e\u4e3d\u5ea6\uff1b\n### 2.\u7528father[]\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\u8fd9\u6761\u8fb9\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u5173\u7cfb\uff0c\u5c06\u6240\u6709\u70b9\u7684 father[]\u521d\u59cb\u5316\u4e3a\u81ea\u5df1\uff1b\n### 3.\u8f93\u5165\u540e\u5c06\u6240\u6709\u5730\u6bef\u7684\u7f8e\u4e3d\u5ea6\u7528sort\u5feb\u6392\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff1b\n### 4.\u7528kruskal\u51fd\u6570\u6765\u8ba1\u7b97\u7b54\u6848ans\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848ans\u3002\n\n\n------------\n### \u7136\u540e\u7ed9\u5927\u5bb6\u8bb2\u4e00\u8bb2\u6bd4\u8f83\u91cd\u8981\u7684\u4e24\u4e2a\u51fd\u6570\uff1a\n### 1.find\u51fd\u6570\uff0c\u7528\u6765\u67e5\u627e\u6b64\u7ed3\u70b9\u7684\u6839\u7ed3\u70b9\u3002\n```cpp\nint find(int t)\n{\n\tif(t==father[t])return t;        //\u5982\u679c\u8fd9\u4e2a\u7ed3\u70b9\u7684\u7236\u4eb2\u7ed3\u70b9\u5c31\u662f\n                                            \u4ed6\u81ea\u5df1\uff0c\u8bf4\u660e\u4ed6\u81ea\u5df1\u5c31\u662f\u8fd9\u68f5\u6811\u7684\u6839\u7ed3\u70b9\uff0c\u5219\u8fd4\u56de\u81ea\u5df1\u3002\n\tfather[t]=find(father[t]);       //\u9012\u5f52\u4e0d\u65ad\u67e5\u627e\u6839\u7ed3\u70b9\u3002\n\treturn father[t];\n}\n```\n\n### 2.\u6700\u91cd\u8981\u7684kruskal\u51fd\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u53ea\u662f\u6539\u53d8\u7b54\u6848ans\u7684\u503c\u3002\n```cpp\ninline void kruskal()\n{\n\tint x,y;                  //x\u3001y\u6765\u4e34\u65f6\u5b58\u50a8\u8d77\u70b9\u5173\u952e\u70b9\u548c\u7ec8\u70b9\u5173\u952e\u70b9\u7684\u6839\u7ed3\u70b9\u3002\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tx=find(edge[i].u);\n\t\ty=find(edge[i].v);\n\t\tif(x==y)continue;          //\u5982\u679c\u4ed6\u4eec\u7684\u6839\u7ed3\u70b9\u76f8\u540c\uff0c\u8bf4\u660e\u4f1a\u6784\u6210\u4e00\u4e2a\u73af\uff0c\n                                               \u5219\u8df3\u8fc7\u6b64\u6b21\u5faa\u73af\u3002\n\t\tans+=edge[i].w;              //ans\u4e0d\u65ad\u52a0\u4e0a\u8fd9\u6761\u5730\u6bef\u7684\u7f8e\u4e3d\u5ea6\u3002\n\t\tfather[x]=y;                //\u66f4\u6539\u8d77\u70b9\u5173\u952e\u70b9\u7684\u6839\u7ed3\u70b9\u7684\u7236\u4eb2\u7ed3\u70b9\u4e3ay\u3002\n\t\ttot++;                       //\u5730\u6bef\u6570tot\u81ea\u589e\u3002\n\t\tif(tot==k)break;              //\u5982\u679c\u5df2\u7ecf\u6709\u8db3\u591f\u7684\u5730\u6bef\u4e86\uff0c\u5219\u9000\u51fa\u5faa\u73af\uff0c\n                                                      \u7ed3\u675fkruskal\u51fd\u6570\u3002\n\t}\n}\n```\n\n\n------------\n### \u8fd9\u7bc7\u9898\u89e3\u7684\u91cd\u70b9\u90e8\u5206\u90fd\u8bb2\u89e3\u5b8c\u6bd5\u4e86\uff0c\u90a3\u6211\u4eec\u76f4\u63a5\u4e0a\u5b8c\u6574AC\u4ee3\u7801\uff01\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 200005\nusing namespace std;\nstruct node\n{\n\tint u,v,w;\n}edge[MAXN];                       //edge\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u8d77\u70b9\u3001\u7ec8\u70b9\u53ca\u7f8e\u4e3d\u5ea6\u3002\nint n,m,father[MAXN],tot=0,k;\nlong long ans=0;\nint find(int t)                       //find\u51fd\u6570\uff0c\u67e5\u627e\u6839\u7ed3\u70b9\u3002\n{\n\tif(t==father[t])return t;\n\tfather[t]=find(father[t]);\n\treturn father[t];\n}\nbool cmp(node a,node b)             //sort\u7684cmp\u51fd\u6570\uff0c\u5c06\u7f8e\u4e3d\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n{\n\treturn a.w>b.w;\n}\ninline void kruskal()              //kruskal\u51fd\u6570\uff0c\u5c06\u7b54\u6848ans\u4e0d\u65ad\u6539\u53d8\u3002\n{\n\tint x,y;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tx=find(edge[i].u);\n\t\ty=find(edge[i].v);\n\t\tif(x==y)continue;\n\t\tans+=edge[i].w;\n\t\tfather[x]=y;\n\t\ttot++;\n\t\tif(tot==k)break;\n\t}\n}\nint main()\n{\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=n;i++)\n\t\tfather[i]=i;            //\u5c061~n\u7684\u6240\u6709\u7ed3\u70b9\u7684\u7236\u4eb2\u7ed3\u70b9\u90fd\u521d\u59cb\u5316\u4e3a\u4ed6\u81ea\u5df1\u3002\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>edge[i].u>>edge[i].v>>edge[i].w;\n\t}\n\tsort(edge+1,edge+m+1,cmp);           //\u7528sort\u5c06\u7f8e\u4e3d\u5ea6\u6392\u5e8f\n                                                \uff08\u6b64\u5904\u518d\u4e00\u6b21\u8bc1\u660e\u4e86c++STL\u7684\u5f3a\u5927\uff09\u3002\n\tkruskal();                   //\u5f00\u59cbkruskal\u51fd\u6570\u3002\n\tcout<<ans<<endl;               //\u8f93\u51fa\u7b54\u6848\u3002\n\treturn 0;                   //\u7a0b\u5e8f\u518d\u89c1\uff01\n}\n```\n\n\n------------\n## \u4ee5\u4e0a\u5c31\u662f\u8fd9\u7bc7\u9898\u89e3\u7684\u5185\u5bb9\u4e86\uff0c\u795d\u5927\u5bb6\u5929\u5929\u5f00\u5fc3\u3001\u5929\u5929\u5feb\u4e50\u3001\u5929\u5929AC\uff01\uff01\uff01",
        "postTime": 1564285339,
        "uid": 182930,
        "name": "\u4e00\u6ef4\u5c0f\u6c34\u6ef4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2121 \u3010\u62c6\u5730\u6bef\u3011"
    },
    {
        "content": "\u4e00\u9053\u56fe\u8bba\u7b80\u5355\u9898\uff0c\u4e0d\u6e05\u695a\u8fd9\u4e48\u70b9\u513f\u4eba\u8fc7\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u7528\u5e76\u67e5\u96c6\n\n\u5148\u6309\u7167\u7f8e\u4e3d\u5ea6\u6392\u4e2a\u5e8f\n\n\u4ece\u5927\u5230\u5c0f\n\n\u4e00\u4e2a\u4e00\u4e2a\u6765\uff08\u55ef\u5c31\u662f\u8fd9\u6837\uff09\n\n\u4f60\u5f53\u524d\u7684\u8fb9\u52a0\u5165\u7684\u8bdd\n\n\u53ea\u80fd\u6784\u6210\u4f60\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u7684\u552f\u4e00\u8def\u5f84\uff01\uff01\n\n\u597d\u5427\u5176\u5b9e\u5c31\u662fk\u6761\u8fb9\u7684\u6700\u5927\u751f\u6210\u6811==\n\n\n\n\n\n\n\n```cpp\nvar\n    a,b,c,f:array[0..100000] of longint;\n    n,m,k,i,x,y,ans,t:longint;\nprocedure sort(l,r: longint);\nvar\n    i,j,x,y: longint;\nbegin\n    i:=l;\n    j:=r;\n    x:=a[(l+r) div 2];\n    repeat\n        while a[i]>x do\n            inc(i);\n        while x>a[j] do\n            dec(j);\n        if not(i>j) then\n            begin\n                y:=a[i];\n                a[i]:=a[j];\n                a[j]:=y;\n                y:=b[i];\n                b[i]:=b[j];\n                b[j]:=y;\n                y:=c[i];\n                c[i]:=c[j];\n                c[j]:=y;\n                inc(i);\n                j:=j-1;\n            end;\n    until i>j;\n    if l<j then\n        sort(l,j);\n    if i<r then\n        sort(i,r);\nend;\nfunction find(p:longint):longint;\nbegin\n    if f[p]=p then\n        find:=p else\n        find:=find(f[p]);\n    f[p]:=find;\nend;\nbegin\n    readln(n,m,k);\n    for i:=1 to m do\n        begin\n            readln(b[i],c[i],a[i]);\n        end;\n    sort(1,m);\n    for i:=1 to n do\n        f[i]:=i;\n    for i:=1 to n do\n        begin\n            x:=find(b[i]);\n            y:=find(c[i]);\n            if x<>y then\n                begin\n                    f[x]:=y;\n                    inc(ans,a[i]);\n                    inc(t);\n                    if t=k then\n                        break;\n                end;\n        end;\n    writeln(ans);\nend.\n\n```",
        "postTime": 1505304100,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2121 \u3010\u62c6\u5730\u6bef\u3011"
    },
    {
        "content": "\u5176\u5b9e\u6b64\u9898\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7684\u601d\u60f3\u6765\u5199\n\n\u4f46\u524d\u51e0\u4e2a\u70b9\u66b4\u529b\u7684\u8bdd\u4e5f\u53ef\u4ee5\u7684\u4e03\u5341\u6765\u5206\uff0c\u8fd9\u662f\u6211\u4eec\u8003\u8bd5\u7684\u9898\u76ee\uff1b\n\n\u4e0b\u9762\u53d1\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\uff1b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int asd = 100001;\nstruct edge{\n    int u;\n    int v;\n    int  w;\n}e[asd*2];//\u4f7f\u7528\u7ed3\u6784\u4f53\u6765\u5199\uff0c\u53cc\u5411\u8fb9*2\uff1b\nint n,m,k;\nint head[asd],f[asd];\nlong long ans;\nbool cmp(edge a,edge b)\n{\n    return a.w > b.w;\n    }\nint find(int x)\n    {\n        if(f[x]!=x)\n            f[x]=find(f[x]);\n        return f[x];\n        }\nint main(){\n //freopen(\"carpet.in\",\"r\",stdin);\n //freopen(\"carpet.out\",\"w\",stdout);    \n    int fa,fb;\n    cin>>n>>m>>k;\n  for(int i=1;i<=m;i++)\n    {\n scanf(\"%d%d%d\",&e[i].u,&e[i].v,&e[i].w);\n    }\n    sort(e+1,e+1+m,cmp);//\u5feb\u6392\uff1b\n   for(int i=1;i<=n;i++)\n    f[i] = i;\n   for(int i=1;i<=m;i++)\n    {\n        fa = find(e[i].u);\n        fb=find(e[i].v);\n        if(fa != fb)\n            {\n            f[fa]=fb;\n                ans+=e[i].w;\n            k--;\n        }\n        if(!k) break;\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1504078281,
        "uid": 38457,
        "name": "\u6b64\u7965\u975e\u5f7c\u7fd4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2121 \u3010\u62c6\u5730\u6bef\u3011"
    }
]