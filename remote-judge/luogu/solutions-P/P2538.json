[
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u57fa\u73af\u6811\u68ee\u6797\uff0c\u8d77\u521d\u6709 $m$ \u4e2a\u70b9\u5df2\u88ab\u9009\u8fdb $S$ \u91cc\uff0c\u4f60\u9700\u8981\u518d\u9009 $k$ \u4e2a\u70b9\u52a0\u5165\u5230 $S$ \u4e2d\uff0c\u6700\u5c0f\u5316\u5176\u4f59\u70b9\u5230 $S$ \u8ddd\u79bb\u7684\u6700\u5927\u503c\u3002\r\n\r\n\u4e8c\u5206\uff0c\u6811\u7684\u90e8\u5206\u540c P3523 \u505a dp\u3002\u4f46\u662f\u6839\u7ed3\u70b9\uff08\u4e5f\u5c31\u662f\u5728\u73af\u4e0a\u7684\u70b9\uff09\u7684\u5904\u7406\u8981\u4fdd\u7559\uff0c\u5982\u679c\u5f53\u524d\u5b50\u6811\u4e2d\u6700\u6df1\u7684\u8fd8\u672a\u88ab\u8986\u76d6\u7684\u70b9\u8ddd\u79bb\u6839\u7ed3\u70b9\u7684\u8ddd\u79bb\u4e3a $d$\uff0c\u5b83\u8981\u6c42\u73af\u4e0a\u7684\u67d0\u6bb5\u533a\u95f4 $[l,r]$ \u91cc\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u88ab\u9009\u8fdb $S$ \u91cc\uff0c\u7136\u540e\u6700\u5c0f\u5316\u73af\u4e0a\u88ab\u9009\u8fdb $S$ \u7684\u70b9\u6570\u3002\u8fd9\u4e2a\u95ee\u9898\u548c P4155 \u7684\u5f62\u5f0f\u662f\u4e00\u81f4\u7684\uff0c\u65ad\u73af\u6210\u94fe\u540e\u53d8\u4e3a\u7ecf\u5178\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u4ece\u8fd8\u672a\u88ab\u6ee1\u8db3\u7684\u533a\u95f4\u4e2d\u9009\u4e00\u4e2a\u53f3\u7aef\u70b9\u6700\u9760\u5de6\u7684\u533a\u95f4\uff0c\u628a\u5b83\u7684\u53f3\u7aef\u70b9\u9009\u8fdb $S$ \u91cc\u3002\u590d\u6742\u5ea6 $O(n^2\\log n)$\uff0c\u901a\u8fc7\u500d\u589e\u5e94\u8be5\u80fd\u4f18\u5316\u5230 $O(n\\log^2 n)$\uff0c\u4f46\u662f\u61d2\u5f97\u5199\u4e86\u3002\r\n\r\n\u4ee3\u7801\u5982\u4e0b\uff1a\r\n```cpp\r\n#include<bits/stdc++.h>\r\nnamespace vectorwyx{\r\n#define pii pair<int,int>\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define mk make_pair\r\n#define sml(x,y) (x=min(x,y))\r\n#define big(x,y) (x=max(x,y))\r\n#define ll long long\r\n#define uint unsigned\r\n#define ull unsigned long long\r\n#define umap unordered_map\r\n#define db double\r\n#define fo(i,x,y) for(int i=(x);i<=(y);++i)\r\n#define go(i,x,y) for(int i=(x);i>=(y);--i)\r\n#define ptc putchar\r\n#define emp emplace\r\n#define re return\r\n#define co continue\r\n#define brk break\r\n#define HH (ptc('\\n'))\r\n#define bctz __builtin_ctz\r\n#define bclz __builtin_clz\r\n#define bppc __builtin_popcount\r\nusing namespace std;\r\nll seed=chrono::system_clock::now().time_since_epoch().count();\r\nmt19937 rnd(seed);\r\ninline int rm(int x,int y){return (int)(rnd()%(y-x+1ll)+x);}\r\ninline int read(){signed ch=getchar();int x=0,f=1;while(!isdigit(ch)){if(ch==(int)('-'))f=-1;ch=getchar();}while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}return x*f;}\r\ninline void out(int *a,int l,int r){fo(i,l,r) cout<<*(a+i)<<' ';puts(\"\");}\r\n\r\n//8:36~9:44~\r\nconst int N=105,inf=1e9;\r\nint a[N],num,n,m,k,vis[N],ti,f[N],g[N],stk[N],top,ins[N],rk[N];\r\nint mp[N][N];\r\nvector<pii> e[N];\r\n\r\nvoid dfs1(int x){\r\n\tif(vis[x]==ti) re;\r\n\tvis[x]=ti;\r\n\tfor(auto i:e[x]) dfs1(i.fi);\r\n}\r\n\r\nstruct Ctree{\r\nint cir[N],ct,rvl[N],k,ins[N],ans,l[N],r[N],m,fl,nxt[N],sum[N],R[N];\r\n\r\nvoid insert(int x){\r\n\tcir[++ct]=x;\r\n\trk[x]=ct;ins[x]=1;\r\n}\r\nvoid play_it(){\r\n\tfo(i,1,ct-1) rvl[i]=rvl[i+ct]=mp[cir[i]][cir[i+1]];\r\n\trvl[ct]=mp[cir[ct]][cir[1]];\r\n\tfo(i,1,ct) if(a[cir[i]]){fl=i;brk;}\r\n\tfo(i,1,2*ct-1) sum[i+1]=sum[i]+rvl[i];\r\n//\tcout<<\"rvl:\";out(rvl,1,2*ct);cout<<\"sum:\";out(sum,1,2*ct);\r\n}\r\n\r\nvoid dfs(int x,int fa){\r\n\tf[x]=0,g[x]=inf;\r\n\tfor(auto i:e[x]) if(!ins[i.fi]&&i.fi!=fa){\r\n\t\tdfs(i.fi,x);\r\n\t\tbig(f[x],f[i.fi]+i.se);\r\n\t\tsml(g[x],g[i.fi]+i.se);\r\n\t}\r\n\tif(a[x]) g[x]=0;\r\n\tif(f[x]+g[x]<=k) f[x]=-inf;\r\n\tif(f[x]+mp[x][fa]>k) f[x]=-inf,g[x]=0,ans++;//,printf(\"%d!\\n\",x); \r\n}\r\n\r\nint solve(){\r\n//\tprintf(\"solve(%d)\\n\",k);\r\n\tans=m=0;\r\n\tfo(i,1,ct)\r\n\t\tdfs(cir[i],0);\r\n//\tprintf(\"now ans=%d!\\n\",ans);\r\n//\tfo(i,1,ct) printf(\"%d:(%d,%d)\\n\",i,f[cir[i]],g[cir[i]]);\r\n\tint Fl=0;\r\n\tfo(i,1,2*ct) R[i]=inf;\r\n\tfo(i,1,ct){\r\n\t\tbool flg=0;\r\n\t\tfo(j,1,ct){\r\n\t\t\tint dis=abs(sum[i]-sum[j]);sml(dis,sum[ct+1]-dis);\r\n\t\t\tif(f[cir[i]]+g[cir[j]]+dis<=k){flg=1;brk;}\r\n\t\t}\r\n\t\tif(flg) co;\r\n\t\tint len=k-f[cir[i]];\r\n//\t\tprintf(\"%d:len=%d\\n\",i,len);\r\n\t\tif(2*len>=sum[ct+1]){\r\n//\t\t\tputs(\"qwq\");\r\n\t\t\tif(!fl) Fl=1;\r\n\t\t\tco;\r\n\t\t}\r\n\t\t++m;\r\n\t\tif(sum[i]+rvl[ct]>len){\r\n\t\t\tl[m]=1;r[m]=2*ct;\r\n\t\t\tgo(j,i,1) if(sum[i]-sum[j]>len){l[m]=j+1;brk;}\r\n\t\t\tfo(j,i,2*ct) if(sum[j]-sum[i]>len){r[m]=j-1;brk;}\r\n\t\t\tif(r[m]>ct) co;\r\n\t\t\tl[m+1]=l[m]+ct;r[m+1]=r[m]+ct;\r\n\t\t\t++m;\r\n\t\t}else{\r\n\t\t\tl[m]=1;r[m]=2*ct;\r\n\t\t\tgo(j,i+ct,1) if(sum[i+ct]-sum[j]>len){l[m]=j+1;brk;}\r\n\t\t\tfo(j,i+ct,2*ct) if(sum[j]-sum[i+ct]>len){r[m]=j-1;brk;}\t\t\t\r\n\t\t}\r\n\t}\r\n\tif(!m) re ans+Fl;\r\n//\tfo(i,1,m) printf(\"[%d,%d]\\n\",l[i],r[i]);\r\n\tfo(i,1,m) sml(R[l[i]],r[i]);\r\n\tint c=0,mn=inf;\r\n\tgo(i,2*ct,1){\r\n\t\tnxt[i]=mn;\r\n\t\tsml(mn,R[i]);\r\n\t}\r\n\tif(fl){\r\n\t\tint x=fl;\r\n\t\twhile(nxt[x]<fl+ct){\r\n\t\t\tc++;\r\n\t\t\tx=nxt[x];\r\n\t\t}\r\n\t}else{\r\n\t\tc=inf;\r\n\t\tfo(i,1,ct){\r\n\t\t\tint x=i,rp=1;\r\n\t\t\twhile(nxt[x]<i+ct){\r\n\t\t\t\trp++;\r\n\t\t\t\tx=nxt[x];\r\n\t\t\t}\r\n\t\t\tsml(c,rp);\r\n\t\t}\r\n\t}\r\n\tbig(c,Fl);\r\n\tre ans+c;\r\n}\r\n}tr[N];\r\n\r\nbool dfs2(int x,int fa){\r\n\tstk[++top]=x;vis[x]=ti;\r\n\tbool fl=0;\r\n\tfor(auto i:e[x]){\r\n\t\tif(vis[i.fi]==ti){//\u57fa\u73af\u6811\u627e\u73af\u4e00\u5b9a\u8981\u7279\u5224\u7236\u4eb2\uff01\uff01\r\n\t\t\tif(i.fi==fa){\r\n\t\t\t\tif(!fl){\r\n\t\t\t\t\tfl=1;\r\n\t\t\t\t\tco;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\tdo{\r\n\t\t\t\ttr[num].insert(stk[top]);\r\n\t\t\t}while(stk[top--]!=i.fi);\r\n\t\t\tre 1;\r\n\t\t}\r\n\t\tif(dfs2(i.fi,x)) re 1;\r\n\t}\r\n\ttop--;\r\n\tre 0;\r\n}\r\n\r\nsigned main(){\r\n\tcin>>n;int w=read();cin>>m;\r\n\t{\r\n\tint x[N];fo(i,1,n) x[i]=read()+1;\r\n\tfo(i,1,n) fo(j,1,n) mp[i][j]=inf;\r\n\tfo(i,1,n){\r\n\t\tint v=read();\r\n\t\te[i].eb(x[i],v);\r\n\t\te[x[i]].eb(i,v);\r\n//\t\tprintf(\"%d <-> %d %d\\n\",i,x[i],v);\r\n\t\tsml(mp[i][x[i]],v);\r\n\t\tsml(mp[x[i]][i],v);\r\n\t}\t\t\r\n\t}\r\n\r\n\tfo(i,1,w) a[read()+1]=1;\r\n\tfo(i,1,n) if(!vis[i]){\r\n\t\t++ti;++num;\r\n\t\tdfs1(i);\r\n\t\t++ti;\r\n\t\tdfs2(i,0);\r\n\t\ttr[num].play_it();\r\n//\t\ttr[i].rvl[tr[i].ct]=mp[tr[i]]\r\n\t}\r\n//\ttr[1].k=5;cout<<tr[1].solve()<<'\\n';\r\n//\ttr[2].k=3;cout<<tr[2].solve()<<'\\n';\r\n//\tre 0;\r\n\tint l=0,r=inf,mid,ans=inf;\r\n\twhile(l<=r){\r\n\t\tmid=(l+r)>>1;\r\n\t\tint x=0;\r\n\t\tfo(i,1,num) tr[i].k=mid,x+=tr[i].solve();\r\n\t\tif(x>m) l=mid+1;\r\n\t\telse r=mid-1,ans=mid;\r\n\t}\r\n\tcout<<ans;\r\n\treturn 0;\r\n}\r\n}\r\n/*\r\n-------------------------------------------------\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nsigned main(){re vectorwyx::main();}\r\n\r\n```",
        "postTime": 1671858065,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2538 [SCOI2008]\u57ce\u5821"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u505a\u9ed1\u9898\n~~\uff08\u6fc0\u52a8\uff09~~\n\n\n\u7136\u540e\u770b\u770b\u9898\u89e3\u7684\u9000\u706b\u4e0d\u662f\u592a\u6e05\u6670\uff0c\u4fbf\u6709\u4e86\u8fd9\u7bc7\u9898\u89e3\n\n\n1. \u5148\u770b\u9898\u76ee\u7684\u662f\u8ba9max(dist[c])\u6700\u5c0f\uff0c\u8fd9\u9996\u5148\u8ba9\u6211\u60f3\u8d77\u4e86\u4e8c\u5206\u3002\u518d\u4e00\u770b\u8303\u56f4$n\\le50$\uff0c\u6240\u4ee5\u5c31\u679a\u4e3e\u53ef\u4ee5\u653e\u57ce\u5821\u7684\u70b9\uff0c\u8dd1\u6700\u77ed\u8def\uff0c\u590d\u6742\u5ea6\u4e0d\u5141\u8bb8\u3002$O((n-m)!)$\u662f\u8fc7\u4e0d\u4e86\u7684\n\n2. \u5148\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u518d\u4e8c\u5206\u7b54\u6848\uff0c\u5c06\u4e0d\u80fd\u5230\u8fbe\u7684\u70b9\u503c\u52a0+1\uff0c\u6700\u540e\u5728\u503c\u6700\u5927k\u4e2a\u4e2d\u5efa\u57ce\u5821,\u8fd9\u5e94\u8be5\u662f\u6b63\u89e3\u4e86\uff0c\u4f46\u849f\u84bb\u7684\u6211\u5199\u4e0d\u6765\uff0c\u6240\u4ee5\u53ea\u6709\u5199\u9000\u706b\u4e86\n\n3. \u5173\u4e8e\u9000\u706b\u53ef\u89c1[#60[M_sea]\u6d45\u8c08\u7384\u5b66\u7b97\u6cd5\u2014\u2014\u6a21\u62df\u9000\u706b](https://www.luogu.com.cn/blog/m-sea/qian-tan-SA)\u3002\u8fd9\u91cc\u5f15\u7528\u4e00\u4e0b\n\n\n\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u65b0\u89e3\u7684\u4ea7\u751f\u548c\u63a5\u53d7\u53ef\u5206\u4e3a\u5982\u4e0b\u56db\u4e2a\u6b65\u9aa4\uff1a\n\n\n- \u7b2c\u4e00\u6b65\u662f\u7531\u4e00\u4e2a\u4ea7\u751f\u51fd\u6570\u4ece\u5f53\u524d\u89e3\u4ea7\u751f\u4e00\u4e2a\u4f4d\u4e8e\u89e3\u7a7a\u95f4\u7684\u65b0\u89e3\uff1b\u4e3a\u4fbf\u4e8e\u540e\u7eed\u7684\u8ba1\u7b97\u548c\u63a5\u53d7\uff0c\u51cf\u5c11\u7b97\u6cd5\u8017\u65f6\uff0c\u901a\u5e38\u9009\u62e9\u7531\u5f53\u524d\u65b0\u89e3\u7ecf\u8fc7\u7b80\u5355\u5730\u53d8\u6362\u5373\u53ef\u4ea7\u751f\u65b0\u89e3\u7684\u65b9\u6cd5\uff0c\u5982\u5bf9\u6784\u6210\u65b0\u89e3\u7684\u5168\u90e8\u6216\u90e8\u5206\u5143\u7d20\u8fdb\u884c\u7f6e\u6362\u3001\u4e92\u6362\u7b49\uff0c\u6ce8\u610f\u5230\u4ea7\u751f\u65b0\u89e3\u7684\u53d8\u6362\u65b9\u6cd5\u51b3\u5b9a\u4e86\u5f53\u524d\u65b0\u89e3\u7684\u90bb\u57df\u7ed3\u6784\uff0c\u56e0\u800c\u5bf9\u51b7\u5374\u8fdb\u5ea6\u8868\u7684\u9009\u53d6\u6709\u4e00\u5b9a\u7684\u5f71\u54cd\u3002\n\n- \u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u4e0e\u65b0\u89e3\u6240\u5bf9\u5e94\u7684\u76ee\u6807\u51fd\u6570\u5dee\u3002\u56e0\u4e3a\u76ee\u6807\u51fd\u6570\u5dee\u4ec5\u7531\u53d8\u6362\u90e8\u5206\u4ea7\u751f\uff0c\u6240\u4ee5\u76ee\u6807\u51fd\u6570\u5dee\u7684\u8ba1\u7b97\u6700\u597d\u6309\u589e\u91cf\u8ba1\u7b97\u3002\u4e8b\u5b9e\u8868\u660e\uff0c\u5bf9\u5927\u591a\u6570\u5e94\u7528\u800c\u8a00\uff0c\u8fd9\u662f\u8ba1\u7b97\u76ee\u6807\u51fd\u6570\u5dee\u7684\u6700\u5feb\u65b9\u6cd5\u3002\n\n- \u7b2c\u4e09\u6b65\u662f\u5224\u65ad\u65b0\u89e3\u662f\u5426\u88ab\u63a5\u53d7\uff0c\u5224\u65ad\u7684\u4f9d\u636e\u662f\u4e00\u4e2a\u63a5\u53d7\u51c6\u5219\uff0c\u6700\u5e38\u7528\u7684\u63a5\u53d7\u51c6\u5219\u662fMetropolis\u51c6\u5219: \u82e5\u0394t\u2032<0\u5219\u63a5\u53d7S\u2032\u4f5c\u4e3a\u65b0\u7684\u5f53\u524d\u89e3S\uff0c\u5426\u5219\u4ee5\u6982\u7387exp(-\u0394t\u2032/T)\u63a5\u53d7S\u2032\u4f5c\u4e3a\u65b0\u7684\u5f53\u524d\u89e3S\u3002\n\n- \u7b2c\u56db\u6b65\u662f\u5f53\u65b0\u89e3\u88ab\u786e\u5b9a\u63a5\u53d7\u65f6\uff0c\u7528\u65b0\u89e3\u4ee3\u66ff\u5f53\u524d\u89e3\uff0c\u8fd9\u53ea\u9700\u5c06\u5f53\u524d\u89e3\u4e2d\u5bf9\u5e94\u4e8e\u4ea7\u751f\u65b0\u89e3\u65f6\u7684\u53d8\u6362\u90e8\u5206\u4e88\u4ee5\u5b9e\u73b0\uff0c\u540c\u65f6\u4fee\u6b63\u76ee\u6807\u51fd\u6570\u503c\u5373\u53ef\u3002\u6b64\u65f6\uff0c\u5f53\u524d\u89e3\u5b9e\u73b0\u4e86\u4e00\u6b21\u8fed\u4ee3\u3002\u53ef\u5728\u6b64\u57fa\u7840\u4e0a\u5f00\u59cb\u4e0b\u4e00\u8f6e\u8bd5\u9a8c\u3002\u800c\u5f53\u65b0\u89e3\u88ab\u5224\u5b9a\u4e3a\u820d\u5f03\u65f6\uff0c\u5219\u5728\u539f\u5f53\u524d\u89e3\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u8bd5\u9a8c\n\n- \u6a21\u62df\u9000\u706b\u7b97\u6cd5\u4e0e\u521d\u59cb\u503c\u65e0\u5173\uff0c\u7b97\u6cd5\u6c42\u5f97\u7684\u89e3\u4e0e\u521d\u59cb\u89e3\u72b6\u6001S(\u662f\u7b97\u6cd5\u8fed\u4ee3\u7684\u8d77\u70b9)\u65e0\u5173\uff1b\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u5177\u6709\u6e10\u8fd1\u6536\u655b\u6027\uff0c\u5df2\u5728\u7406\u8bba\u4e0a\u88ab\u8bc1\u660e\u662f\u4e00\u79cd\u4ee5\u6982\u7387\u6536\u655b\u4e8e\u5168\u5c40\u6700\u4f18\u89e3\u7684\u5168\u5c40\u4f18\u5316\u7b97\u6cd5\uff1b\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u5177\u6709\u5e76\u884c\u6027\u3002\n\n\n----\u767e\u5ea6\u767e\u79d1\n\n\n\n\u7528\u4e00\u5f20\u56fe\u6765\u63cf\u8ff0\u5c31\u662f![](https://upload.wikimedia.org/wikipedia/commons/d/d5/Hill_Climbing_with_Simulated_Annealing.gif)\n\n\n\u603b\u7ed3\uff1a\u6a21\u62df\u9000\u706b\u4f1a\u6162\u6162\u903c\u8fd1\u4e00\u4e2a\u51fd\u6570\u7684\u8f83\u5927\uff08\u5c0f\uff09\u503c\n~~(\u9a97\u5206\u795e\u5668)~~\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O$(\u8bc1\u4e0d\u6765) \uff0c\u5f71\u54cd\u901f\u5ea6\u7684\u4e3b\u8981\u662f\uff0c\u964d\u6e29\u7cfb\u6570\uff0c\u521d\u59cb\u6e29\u5ea6,\u672b\u6e29\u5ea6,\u5904\u7406\u51fd\u6570\uff0c\u9000\u706b\u6b21\u6570\u3002\n\n\n\n\u4f18\u70b9\uff1a\u5c06\u4e00\u4e2a\u95ee\u9898\uff0c\u7531\u6c42\u89e3\u8f6c\u53d8\u4e3a\u8bc1\u660e\u95ee\u9898\uff0c\u4f7f\u95ee\u9898\u7b80\u5355\u5316\u3002\u4e5f\u907f\u514d\u4e86 $TLE$ \uff0c\u4e5f\u662f\u89e3\u51b3NPC\u95ee\u9898\u7684\u597d\u65b9\u6cd5\n\n\n\n\u7f3a\u70b9\uff1a\u9000\u706b\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u5bf9\u4e8e\u591a\u5cf0\u51fd\u6570\u5176\u89e3\u7684\u6700\u4f18\u53ef\u80fd\u6027\u8ddf\u4f4e\n\n\n\u5173\u4e8e\u6a21\u677f\uff1a\n\n\n\n```cpp\nvoid EA()\n{\n\tdouble T = 2000;\u521d\u59cb\u6e29\u5ea6\n\twhile(T > 1e-10)\u9000\u51fa\u6e29\u5ea6\n\t{\n      \t\t\u968f\u673a\u751f\u6210\u4e00\u4e2a\u65b0\u89e3\n\t\tT *= 0.987;\u964d\u6e29\n\t\tdouble delta = \u539f\u89e3 - \u65b0\u89e3;\n\t\tif(\u66f4\u4f18)\n\t\t{\n\t\t\tres = new_res;\u63a5\u53d7\n\t\t}\n\t\telse if(exp(-(double)delta*RAND_MAX/T) < rand())\n\t\t{\n\t\t\t\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\n\t\t}\n\t}\n\tans = min(ans,res);\u66f4\u65b0\u7b54\u6848\n}\n```\n\n\n\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff1a\u5c31\u662f\u968f\u673a\u8df3\u54ea\u4e9b\u70b9\u5efa\u57ce\u5e02\uff0c\u4ee3\u7801\u5c31\u975e\u5e38\u7b80\u5355\u4e86\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\n#define P pair<int,int>\nconst double putdown = 0.997;\nconst int inf = 0x3f3f3f3f;\nusing namespace std;\nconst int N = 55;\nint city[N],head[N],ans = inf,n,m,k,ri[N],dist[N],no_city[N],cnt = -1,need_city = 0;\nbool vis[N];\nstruct EDGE{\n\tint to;\n\tint next;\n\tint w;\n}e[N<<1];\nvoid add(int x,int y,int d)\n{\n\te[++cnt].to = y;e[cnt].next = head[x];e[cnt].w = d;head[x] = cnt;\n\te[++cnt].to = x;e[cnt].next = head[y];e[cnt].w = d;head[y] = cnt;\n}\nstruct node{\n    int pos;\n    int dist;\n    bool operator <(const node& S)const{\n    return dist>S.dist;\n    }\n};\n\nvoid solve()\n{\n\tpriority_queue<node> q;\n    memset(dist,0x3f,sizeof(dist));\n    memset(vis,false,sizeof(vis));\n    for(int i = 1;i <= m;i++)\n    {\n    \tdist[city[i]] = 0;\n    \tq.push((node){city[i],dist[city[i]]});\n\t}\n    for(int i = 1;i <= k;i++)\n    {\n    \tdist[no_city[i]] = 0;\n    \tq.push((node){no_city[i],dist[no_city[i]]});\n\t}\n    \n    while(!q.empty())\n    {\n        int x = q.top().pos;\n        q.pop();\n        //cout<<x<<endl;\n        if(vis[x]) continue;\n        vis[x] = true;\n        for(int i = head[x];~i;i = e[i].next)\n        {\n            int y = e[i].to;\n            if(e[i].w<dist[y]-dist[x])\n            {\n                dist[y] = dist[x] + e[i].w;\n                q.push((node){y,dist[y]});\n            }\n        }\n    }\n//    for(int i = 1;i <= n;i++)\n//    {\n//    \tcout<<dist[i]<<endl;\n//    \tsystem(\"pause\");\n//\t}\n}\nvoid EA()\n{\n\tint res = inf;\n\tdouble T = 2000;\n\twhile(T > 1e-10)\n\t{\n\t\tint x = (rand()%k)+1;\n\t\tint y = (rand()%(need_city - k))+k+1;\n\t\tswap(no_city[x],no_city[y]);\n\t\t//cout<<\"debug1\"<<endl;\n\t\tsolve();\n\t\t//cout<<\"debug2\"<<endl;\n\t\tint new_res = -1;\n\t\tfor(int i = 1;i <= need_city;i++)\n\t\t{\n\t\t\t//cout<<\"debug3\"<<endl;\n\t\t\tint yy = dist[no_city[i]];\n\t\t\t//if(yy == inf) cout<<no_city[i]<<endl;\n\t\t\tnew_res = max(new_res,yy);\n\t\t}\n\t\t//cout<<\"debug4 \"<<new_res<<endl;\n\t\tT *= putdown;\n\t\tint delta = res - new_res;\n\t\tif(delta > 0)\n\t\t{\n\t\t\tres = new_res;\n\t\t\tcontinue;\n\t\t}\n\t\telse if(exp(-(double)delta*RAND_MAX/T) < rand())\n\t\t{\n\t\t\t//cout<<\"debug5\"<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tswap(no_city[x],no_city[y]);\n\t}\n\tans = min(ans,res);\n}\n\nint main()\n{\n\tsrand((int)time(0));\n\tmemset(vis,true,sizeof(vis));\n\tmemset(head,-1,sizeof(head));\n\tcin>>n>>m>>k;\n\tfor(int i = 1;i <= n;i++)\n\tcin>>ri[i];\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tint d;\n\t\tcin>>d;\n\t\tadd(i,ri[i]+1,d);\n\t}\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint a;\n\t\tcin>>a;\n\t\tcity[i] = a+1;\n\t\t//cin>>city[i];\n\t\tvis[city[i]] = false;\n\t}\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tif(vis[i])\n\t\t{\n\t\t\tno_city[++need_city] = i;\n\t\t}\n\t}\n\tsolve();\n\tif(need_city == k)\n\t{\n\t\tans = 0;\n\t\tfor(int i = 1;i <= need_city;i++)\n\t\t{\n\t\t\tint y = no_city[i];\n\t\t\tans = max(ans,dist[y]);\n\t\t}\n\t\tcout<<ans<<endl;\n\t\treturn 0;\n\t}\n\tEA();\n\tEA();\n\tEA();\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\u5b89\u5229[\u535a\u5ba2](https://www.luogu.com.cn/blog/xzc/)\n",
        "postTime": 1575940369,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2538"
    },
    {
        "content": "\u770b\u89c1\u8fd9\u9898\u4e4b\u540e\uff0c\u6211\u7b2c\u4e00\u60f3\u6cd5\u662frandom_shuffle\u9a97\u5206\uff0c\u5c31\u662f\u628a\u6240\u6709\u975e\u5173\u952e\u70b9\u63d0\u51fa\u6765random_shuffle\u591a\u6b21\uff0c\u6bcf\u6b21\u53d6\u524dk\u4e2a\u5224\u5b9a\uff0c\u7136\u800c\u8fd9\u6837\u505a\u5b9e\u9645\u6548\u679c\u5e76\u4e0d\u662f\u5f88\u7406\u60f3\u2026\u2026\n\n\u7136\u540e\u628arandom_shuffle\u6539\u6210\u6a21\u62df\u9000\u706b\u4e4b\u540e\u6b63\u786e\u7387\u5c31\u53d8\u5f97\u6781\u9ad8\u4e86\u2026\u2026\u4f46\u662f\u8981\u6ce8\u610f\u9000\u706b\u7684\u65f6\u5019\u6bcf\u6b21\u53ea\u80fd\u968f\u673a\u4ea4\u63622\u4e2a\u5e76\u4e0d\u662f\u6bcf\u6b21\u90fd\u968f\u673a\u6253\u4e71~~\u8981\u4e0d\u5c31\u8ddf\u76f4\u63a5random_shuffle\u6ca1\u533a\u522b\u4e86~~\uff0c\u5927\u6982\u662f\u6bcf\u6b21\u4ece\u4e0a\u4e00\u4e2a\u89e3\u51fa\u53d1\u6240\u4ee5\u6b63\u786e\u7387\u624d\u66f4\u9ad8\u5427\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <ctime>\n#define ll long long\n#define p 998244353\nusing namespace std;\nnamespace ywy {\n\ttypedef struct _b {\n\t    int dest;\n\t    int nxt;\n\t    int len;\n\t} bian;\n\tbian memchi[100001];\n\tint gn = 1, heads[100], dis[55], que[100001];\n\tunsigned char bv[55];\n\tint n, minn = 0;\n\tinline void spfa(int s) {\n\t    dis[s] = 0;\n\t    int head = 0, tail = 1;\n\t    que[0] = s;\n\t    do {\n\t        int me = que[head];\n\t        head++;\n\t        bv[me] = 0;\n\t        for (register int i = heads[me]; i; i = memchi[i].nxt) {\n\t            if (dis[me] + memchi[i].len < dis[memchi[i].dest]) {\n\t                dis[memchi[i].dest] = dis[me] + memchi[i].len;\n\t                if (!bv[memchi[i].dest]) {\n\t                    que[tail] = memchi[i].dest;\n\t                    tail++;\n\t                    bv[memchi[i].dest] = 1;\n\t                }\n\t            }\n\t        }\n\t    } while (head < tail);\n\t}\n\tinline void add(int s, int t, int l) {\n\t    memchi[gn].dest = t;\n\t    memchi[gn].len = l;\n\t    memchi[gn].nxt = heads[s];\n\t    heads[s] = gn;\n\t    gn++;\n\t}\n\tint dst[100], d[100], ints[100], qd[100];\n\tunsigned char orz[100];\n\tint ptr, m, k;\n\tinline int calc() {\n\t    memset(dis, 0x7f, sizeof(dis));\n\t    for (register int i = 1; i <= k; i++) spfa(ints[i]);\n\t    for (register int i = 1; i <= m; i++) spfa(qd[i]);\n\t    int maxn = 0;\n\t    for (register int i = 1; i <= n; i++) maxn = max(maxn, dis[i]);\n\t    return (maxn);\n\t}\n\tinline void SA(double t, double delta) {\n\t    int me = minn;\n\t    while (t >= 1e-10) {\n\t        t *= delta;\n\t        int a = rand() % k + 1, b = rand() % (ptr - k) + 1;\n\t        swap(ints[a], ints[k + b]);\n\t        int cjr = calc();\n\t        if (cjr < me || cjr < minn) {\n\t            minn = min(minn, cjr);\n\t            me = cjr;\n\t            continue;\n\t        }\n\t        if (exp((me - cjr) / t) * RAND_MAX > rand()) {\n\t            minn = min(minn, cjr);\n\t            me = cjr;\n\t            continue;\n\t        }\n\t        swap(ints[a], ints[k + b]);\n\t    }\n\t}\n\tvoid ywymain() {\n\t    srand(19260817);\n\t    cin >> n >> m >> k;\n\t    for (register int i = 1; i <= n; i++) cin >> dst[i], dst[i]++;\n\t    for (register int i = 1; i <= n; i++) {\n\t        cin >> d[i];\n\t        add(i, dst[i], d[i]);\n\t        add(dst[i], i, d[i]);\n\t    }\n\t    for (register int i = 1; i <= m; i++) {\n\t        cin >> qd[i];\n\t        qd[i]++;\n\t        orz[qd[i]] = 1;\n\t    }\n\t    int st = clock();\n\t    minn = 0;\n\t    memset(dis, 0x7f, sizeof(dis));\n\t    for (register int i = 1; i <= m; i++) spfa(qd[i]);\n\t    for (register int i = 1; i <= n; i++) {\n\t        minn = max(minn, dis[i]);\n\t    }\n\t    ptr = 1;\n\t    for (register int i = 1; i <= n; i++) {\n\t        if (!orz[i])\n\t            ints[ptr] = i, ptr++;\n\t    }\n\t    ptr--;\n\t    if (m + k == n) {\n\t        cout << calc() << endl;\n\t        return;\n\t    }\n\t    int t = 30;\n\t    while (clock() - st < 780000) {\n\t        SA(1000, 0.993);\n\t    }\n\t    cout << minn << endl;\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1553645262,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2538 \u3010[SCOI2008]\u57ce\u5821\u3011"
    },
    {
        "content": "# \u6a21\u62df\u9000\u706b\n\n## \\>1.1\n\n\u5148\u4e0d\u63d0\u6a21\u62df\u9000\u706b\uff0c\u6211\u4eec\u6765\u7406\u89e3\u722c\u5c71\u7b97\u6cd5\uff0c\u5df2\u7ecf\u77e5\u6653\u7684\u53ef\u4ee5\u8c03\u81f31.2\n\n\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570$ f(x) $\uff0c\u5df2\u77e5\u5176\u5728\u5b9a\u4e49\u57df\u4e0a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u548c\u5355\u8c03\u9012\u51cf\u533a\u95f4\uff0c\u4e3a\u4e86\u6c42$ f(x) $\u7684\u8fd1\u4f3c\u6781\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u722c\u5c71\u7b97\u6cd5\u3002\u611f\u6027\u7406\u89e3\uff0c\u4f60\u6709\u5982\u4e0b\u7684\u51fd\u6570\uff1a\n\n![Figure 1](https://s2.ax1x.com/2020/01/19/1Cdqwn.png)\n\n\u8089\u773c\u53ef\u89c1\uff0c$ f(x) $\u7684\u6781\u503c\u5728\u533a\u95f46~8\u4e2d\u3002\u4e3a\u4e86\u6c42\u5f97\u5927\u81f4\u7684\u6781\u503c\uff0c\u663e\u800c\u6613\u89c1\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u3002\u4e0d\u8fc7\u6211\u4eec\u5728\u6b64\u5904\u8bb2\u7684\u662f\u722c\u5c71\uff0c\u56e0\u6b64\u5148\u5c06\u4e8c\u5206\u6482\u4e00\u8fb9\u53bb\n\n\u722c\u5c71\u7b97\u6cd5\u5728(\u6bd4\u5982\u8bf4)4\u8fd9\u4e2a\u4f4d\u7f6e\u51fa\u53d1\uff0c\u5411x\u8f74\u8d1f\u534a\u8f74\u65b9\u5411\u548cx\u8f74\u6b63\u534a\u8f74\u65b9\u5411\u8bd5\u63a2\uff0c\u53d1\u73b0\u6b63\u534a\u8f74\u8981\u5c0f\u4e00\u4e9b\uff0c\u53c8\u56e0\u4e3a\u5355\u8c03\u533a\u95f4\u4ec5\u67091\u4e2a\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9009\u62e9\u5411\u53f3\u534a\u8f74\u65b9\u5411\u8d70\u3002(\u5177\u4f53\u8d70\u591a\u5c11\u9700\u8981\u6c42\u5bfc\u4ee5\u786e\u5b9a\u5927\u81f4\uff0c\u8fd9\u91cc\u5927\u6982\u611f\u89c9\u4e00\u4e0b)\u8d8a\u9661\uff0c\u4e00\u6b21\u5c31\u8d70\u7684\u8d8a\u591a\u3002\n\n###### ~~\u5c0f\u58f0bb~~:\u5176\u5b9e\u5bf9\u673a\u5668\u5b66\u4e60\u6709\u6240\u4e86\u89e3\u7684\u8bdd\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5c31\u662f\u68af\u5ea6\u4e0b\u964d\u3002\u5f53\u7136\uff0c\u662f\u66f4\u7b80\u5355\u7684\u68af\u5ea6\u4e0b\u964d\u3002\n\n\u8fd9\u6837\u5c31\u7b97\u5927\u81f4\u7684\u7406\u89e3\u4e86\u722c\u5c71\u7b97\u6cd5\uff0c\u5b9e\u73b0\u5e76\u4e0d\u56f0\u96be\uff0c\u4e0d\u505a\u989d\u5916\u9610\u91ca\u3002\n\n## \\>1.2\n\u6a21\u62df\u9000\u706b\u53ef\u4ee5\u8bf4\u505a\u7279\u6b8a\u7684\u722c\u5c71\uff0c\u9488\u5bf9\u4e8e$ f(x) $\u7684\u5355\u8c03\u533a\u95f4\u5f88\u591a\u7684\u65f6\u5019\u3002\u4f46\u6709\u65f6\u5019\u4e5f\u5f97\u4e0d\u5230\u6b63\u786e\u7b54\u6848\uff0c~~\u6bd5\u7adf\u8fc7\u4e8e\u7384\u5b66~~\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n![Figure 2](https://s2.ax1x.com/2020/01/19/1CdzSU.png)\n\n\u5f88\u660e\u663e\uff0c\u4e00\u822c\u7684\u722c\u5c71\u7b97\u6cd5\u5f88\u5bb9\u6613\u5361\u5728**\u5c40\u90e8\u6700\u4f18\u89e3**\u4e0a\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5b83\u57280\u9644\u8fd1\u627e\u5230\u4e86\u4e00\u4e2a\u201c\u6700\u503c\u201d\uff0c\u5411\u5de6\u3001\u53f3\u8d70\u90fd\u53d1\u73b0\u8981\u66f4\u5927\u4e00\u70b9\uff0c\u6700\u540e\u5c31\u505c\u5728\u4e86\u8fd9\u91cc\u3002\u4f46\u5f88\u660e\u663e\uff0c\u6211\u4eec\u8089\u773c\u53ef\u89c1\uff0c0\u9644\u8fd1\u4e0d\u662f\u6700\u503c\u7684\u6240\u5728\u4f4d\u7f6e\u3002\n\n\u56e0\u6b64\u6211\u4eec\u4f1a\u9700\u8981\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5b83\u5728\u79fb\u52a8\u65f6\u4e0d\u4ec5\u4ec5\u56e0\u4e3a\u8fd9\u79cd\u201c\u503e\u659c\u5173\u7cfb\u201d(\u60f3\u4e0d\u51fa\u66f4\u597d\u7684\u8bcd\u4e86\uff0c\u8bf7\u6a21\u7cca\u7406\u89e3\u4e00\u4e0b)\u6765\u51b3\u5b9a\u600e\u4e48\u79fb\u52a8\uff0c\u8fd8\u6839\u636e\u4e00\u4e9b\u5176\u4ed6\u5173\u7cfb\u3002\n\n\u4ec0\u4e48\u662f\u201c\u5176\u4ed6\u5173\u7cfb\u201d\u5462\uff1f\u4e5f\u5c31\u662f\u52a0\u5165\u968f\u673a\u7684\u56e0\u7d20\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u5728\u6b63\u5e38\u4f7f\u7528\u65f6\u968f\u673a\u5316\u7684\u8868\u73b0\u6548\u679c\u5e76\u4e0d\u662f\u5f88\u597d\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5f15\u5165\u201c\u6e29\u5ea6\u201d\u8fd9\u79cd\u8bf4\u6cd5\uff0c\u4e5f\u662f\u201c\u9000\u706b\u201d\u7684\u6765\u6e90\u3002\n\n>\u5f15\u7528\u81ea\u767e\u5ea6\u767e\u79d1\uff1a(\u5b9e\u9645\u4e0a\u611f\u89c9\u8bf4\u7684\u4e0d\u662f\u5f88\u597d\uff0c\u4e0d\u60f3\u770b\u8fd9\u4e2a\u5f15\u7528\u7684\u8bdd\u5c31pass\u597d\u4e86)\n\n>\u6a21\u62df\u9000\u706b\u7684\u539f\u7406\u4e5f\u548c\u91d1\u5c5e\u9000\u706b\u7684\u539f\u7406\u8fd1\u4f3c\uff1a\u5c06\u70ed\u529b\u5b66\u7684\u7406\u8bba\u5957\u7528\u5230\u7edf\u8ba1\u5b66\u4e0a\uff0c\u5c06\u641c\u5bfb\u7a7a\u95f4\u5185\u6bcf\u4e00\u70b9\u60f3\u50cf\u6210\u7a7a\u6c14\u5185\u7684\u5206\u5b50\uff1b\u5206\u5b50\u7684\u80fd\u91cf\uff0c\u5c31\u662f\u5b83\u672c\u8eab\u7684\u52a8\u80fd\uff1b\u800c\u641c\u5bfb\u7a7a\u95f4\u5185\u7684\u6bcf\u4e00\u70b9\uff0c\u4e5f\u50cf\u7a7a\u6c14\u5206\u5b50\u4e00\u6837\u5e26\u6709\u201c\u80fd\u91cf\u201d\uff0c\u4ee5\u8868\u793a\u8be5\u70b9\u5bf9\u547d\u9898\u7684\u5408\u9002\u7a0b\u5ea6\u3002\u6f14\u7b97\u6cd5\u5148\u4ee5\u641c\u5bfb\u7a7a\u95f4\u5185\u4e00\u4e2a\u4efb\u610f\u70b9\u4f5c\u8d77\u59cb\uff1a\u6bcf\u4e00\u6b65\u5148\u9009\u62e9\u4e00\u4e2a\u201c\u90bb\u5c45\u201d\uff0c\u7136\u540e\u518d\u8ba1\u7b97\u4ece\u73b0\u6709\u4f4d\u7f6e\u5230\u8fbe\u201c\u90bb\u5c45\u201d\u7684\u6982\u7387\u3002\n\n\n\u4e3a\u4e86\u5e2e\u52a9\u4f60\u66f4\u597d\u7406\u89e3\uff0c\u73b0\u5728\u60f3\u8c61\u4f60\u6b63\u5728\u6253\u94c1\uff0c\u94c1\u7684\u6e29\u5ea6\u6b63\u9010\u6b65\u4e0b\u964d\u3002\u8fd9\u5757\u94c1\u4e2d\u7684\u67d0\u4e00\u5206\u5b50\u6b63\u4ece\u6d3b\u8dc3\u53d8\u4e3a\u7a33\u5b9a\uff0c\u6211\u4eec\u628a\u8be5\u5206\u5b50\u7684\u7a33\u5b9a\u8fc7\u7a0b\u6620\u5c04\u4e3a\u4e00\u6761\u5728x\u8f74\u4e0a\u79fb\u52a8\u7684\u70b9\uff0c\u968f\u7740\u6e29\u5ea6\u9010\u6e10\u964d\u4f4e\uff0c\u70b9\u7684\u79fb\u52a8\u7531\u5267\u70c8\u8d8b\u5411\u5e73\u7f13\uff0c\u6700\u7ec8\u505c\u4e0b\u6765\u3002\u5728\u8be5\u70b9\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u505a\u51fa\u4e00\u6761\u5782\u76f4\u4e8ex\u8f74\u4e14\u7ecf\u8fc7\u8be5\u70b9\u7684\u76f4\u7ebf\uff0c\u8be5\u76f4\u7ebf\u4e0e $y = f(x)$ \u4ea4\u4e8e\u4e00\u70b9\uff0c\u5bf9\u5e94\u7740\u6211\u4eec\u7684y\u503c\u3002\n\n\u73b0\u5728\uff0c\u6a21\u62df\u9000\u706b\u7ed3\u5408\u4e0a\u722c\u5c71\u4ee5\u53ca\u9000\u706b\u4e24\u4e2a\u64cd\u4f5c\uff0c\u6210\u529f(\u6709\u65f6\u4e5f\u4e0d\u6210\u529f)\u5730\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u6807\uff1a\u6781\u503c\u3002\n\n## \\>1.3\n\n\u5728\u4f60\u7406\u89e3\u4e86\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u540e\uff0c\u770b\u5230\u53f3\u4fa7\u7684\u56fe\uff0c\u8fd9\u662f\u521a\u624dFigure 2\u5728-1~1\u4e0a\u7684\u56fe\u50cf\u3002\u73b0\u5728\u611f\u53d7\u4e00\u4e0b\u6a21\u62df\u9000\u706b\u7684\u8fc7\u7a0b\uff0c\u4ece-0.5\u51fa\u53d1\uff0c\u5411\u4efb\u610f\u4e24\u4fa7\u8d70\u2026\u5230(\u751a\u81f3\u8fd8\u6ca1\u5230)\u5c40\u90e8\u6700\u4f18\u89e3\u4e0a\uff0c\u7136\u540e\u7a81\u7136\u4e00\u8df3\uff0c\u8df3\u5230\u4e86\u53e6\u4e00\u4fa7\u2026\u6700\u540e\u8fd1\u4f3c\u7684\u6c42\u5f97\u4e86\u6781\u503c\u3002\n\n![Figure 3](https://s2.ax1x.com/2020/01/19/1CwmlD.png)\n\n\u73b0\u5728\uff0c\u7ed9\u51fa\u6a21\u62df\u9000\u706b\u7684\u4ee3\u7801\u3002\n\n```cpp\nvoid SA(){//\u5373\u6a21\u62df\u9000\u706b\n\tregister int ans, \u2026\u2026;//ans\u662f\u5f53\u524d\u89e3\n\twhile (T *= delta_T, T >= \u2026){//T\u662f\u6e29\u5ea6\uff0cdelta_T\u662f\u964d\u6e29\u901f\u7387\n\t\tif (\u2026\u2026)\u2026rand()\u2026//\u901a\u5e38\u6211\u4eec\u4f1arand\u4e00\u6b21\u505a\u4e00\u4e2a\u201c\u5047\u8bbe\u64cd\u4f5c\u201d\n\t\t\u2026\u2026//\u8fd9\u91cc\u662f\u4e00\u4e9b\u9644\u52a0\u5185\u5bb9\uff0c\u901a\u5e38\u7b80\u5355\u7684\u6a21\u62df\u9000\u706b\u4e0d\u9700\u8981\n\t\tif (ans = work(), ans < otp)otp = ans;\n/*SA\u4e00\u822c\u642d\u914d\u4e00\u4e2awork\u51fd\u6570\u4f7f\u7528\uff0c\u53ef\u4ee5\u611f\u6027\u8ba4\u4e3a\u662f\u6c42\u51fa\u5f53\u524d\u7684y\u503c\uff1botp\u662f\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u4e5f\u5c31\u662f\u8fd0\u884c\u5b8c\u6bd5\u540e\u88ab\u8f93\u51fa\u7684\u89e3*/\n\t\telse if (exp((long double)ans - otp)/T > (long double)rand()/0x7fff)\u2026\u2026\n\t\t/*\u5148\u8bf4\u8fd9\u4e00\u6b65\u7684\u4f5c\u7528\uff0c\u5145\u5f53\u968f\u673a\u5316\u64cd\u4f5c\u3002\u5176\u4e2d\uff0c\nexp\u662f \u2147^x(e^x)\uff1b0x7fff\u662frand\u7684\u4e0a\u754c\u3002\n\u6309\u7167\u6211\u7684\u4e60\u60ef\uff0c\u8be5\u6b65\u4e00\u822c\u8868\u793a\u4ee5\u4e00\u5b9a\u6982\u7387\u4e0d\u63a5\u53d7\u672c\u6b21\u64cd\u4f5c\uff0c\u5373\u4e0a\u9762\u7684 if (\u2026\u2026)\u2026rand()\u2026 */\n\t}\n}\n```\n\n## \\>1.4\n\u5927\u81f4\u5c31\u662f\u8fd9\u6837\uff0c\u73b0\u5728\u5bf9\u672c\u9898\u505a\u7b80\u77ed\u7684\u601d\u8def\u8bb2\u89e3\u3002\n\n\u8003\u8651\u6700\u521d\u968f\u673a\u751f\u6210\u4e00\u4e32\u5e8f\u5217\u8868\u793a\u5c06\u8981\u5efa\u57ce\u5821\u7684\u57ce\u5e02\uff0c\u7528$Dijkstra$\u8dd1\u4e2a\u6700\u77ed\u8def\u6765\u4f5c\u4e3a$work$\u51fd\u6570\u7684\u4e3b\u8981\u90e8\u5206\uff0c\u4ee5\u6700\u5927\u8ddd\u79bb\u8868\u793ay\u503c\u3002$if (\u2026\u2026)\u2026rand()\u2026$\u6b65\u9aa4\u968f\u673a\u4ea4\u6362\u4e24\u4e2a\u57ce\u5e02(\u4e00\u4e2a\u5efa\u4e86\u7684\u548c\u6ca1\u5efa\u7684\uff0c\u56e0\u6b64 \u9644\u52a0\u5185\u5bb9 \u90e8\u5206\u8981\u5224\u5b9a\u662f\u5426\u4e3a\u4e00\u4e2a\u6709\u4e00\u4e2a\u65e0\u4ee5\u53ca\u5df2\u7ecf\u6709\u57ce\u5821\u4e0d\u80fd\u4e0d\u5efa\u9020\u7684\u3002\u5b9e\u9645\u4e0a\u5b9e\u73b0\u65f6\u524d\u4e24\u4e2a\u90fd\u65e0\u9700\u6ce8\u610f\uff0c\u5bf9\u7b54\u6848\u5f71\u54cd\u4e0d\u5927\uff0c\u53ea\u987b\u6ce8\u610f\u6700\u540e\u4e00\u4e2a\u5373\u53ef)\uff0c\u4e00\u4e2a\u5efa\u9020\u57ce\u5821\uff0c\u53e6\u4e00\u4e2a\u53d6\u6d88\u5efa\u9020\u57ce\u5821\u3002\n\n```cpp\nvoid SA(){\n\tregister int ans, x, y;//\u9009\u51fa\u57ce\u5821x\u3001y\n//\tDEBUG//\u8c03\u8bd5\u6b65\u9aa4\n\twhile (T *= delta_T, T >= 1e-9){\n\t\tif (x = rand()%n, y = rand()%n, castle[x] == castle[y] || SP_sign[x] || SP_sign[y])x = rand()%n, y = rand()%n;//\u7279\u5224\u7b2c\u4e00\u6b21\uff0cx\u4e0d\u80fd\u548cy\u76f8\u540c\uff0c\u4e14\u4e0d\u80fd\u662f\u5df2\u6709\u57ce\u5821\u7684\u57ce\u5e02\n\t\tif (castle[x] == castle[y] || SP_sign[x] || SP_sign[y])continue;\n//\u5982\u679c\u4e0a\u8ff0\u7279\u5224\u540e\u7684\u65b0x\u3001y\u4ecd\u4e0d\u6ee1\u8db3\uff0c\u5219\u76f4\u63a5\u964d\u6e29\n\t\tswap(castle[x], castle[y]);\n\t\tif (ans = work(), ans < otp)otp = ans;//ans\u4f18\u4e8eotp\uff0c\u66f4\u65b0otp\n\t\telse if (__builtin_exp((long double)ans - otp)/T > (long double)rand()/0x7fff)swap(castle[x], castle[y]);\n\t\t//\u4e0d\u63a5\u53d7\u6b64\u6b21\u8c03\u6362\n//\t\tvar_DEBUG(ans, otp);//\u8c03\u8bd5\u6b65\u9aa4\n\t}\n}\n```\n\n\u8bb2\u89e3\u5b8c\u6bd5\u3002",
        "postTime": 1579427507,
        "uid": 125531,
        "name": "HansLimon",
        "ccfLevel": 0,
        "title": "TJ 2 P2538"
    }
]