[
    {
        "content": "\u770b\u5230\u5927\u5bb6\u7684\u505a\u6cd5\u597d\u6b63\u7ecf\u554a~~\u4e0d\u8981\u88ab\u6570\u636e\u7ed3\u6784\u61f5\u903c\u4e86\u53cc\u773c~~\n\n\u5411\u5927(\u795e)\u5bb6(\u4ed9)\u63a8\u8350\u4e00\u79cd\u8d85\u597d(\u5e7c)\u5199(\u7a1a)\u7684\u505a\u6cd5\uff1a\u533a\u95f4\u968f\u673a\u5316\n\n\u6ce8\u610f\u5230\u533a\u95f4\u51fa\u73b0\u6b21\u6570\u4e25\u683c\u5927\u4e8e\u4e00\u534a\uff0c\u6839\u636e\u6982\u7387\u76f8\u5173\u77e5\u8bc6\uff0c\u6211\u4eec\u6709\u5927\u6982\u5728$\\frac{1}{2}$\u7684\u6982\u7387\u968f\u673a\u5230\u8fd9\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u6211\u4eec\u968f\u673a\u7684\u6b21\u6570\u8f83\u5927\uff0c\u90a3\u4e48\u5c06\u4f1a\u6709\u8f83\u5927\u6982\u7387\u968f\u673a\u5230\u7b54\u6848\n\n\u8003\u8651\u5982\u4f55\u5224\u65ad\u65e0\u89e3\uff0c\u5f53\u968f\u673a\u5316\u6b21\u6570\u8fbe\u5230\u9608\u503c\u8fd8\u6ca1\u6709\u5f97\u5230\u7b54\u6848\uff0c\u5c31\u53ef\u4ee5\u8fd1\u4f3c\u8ba4\u5b9a\u4e3a\u65e0\u89e3\uff0c\u4e0b\u9762\u5b9a\u4e49\u9608\u503c\u4e3a$k=30$\n\n\u5047\u8bbe\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u7684\u662f\u6709\u89e3\uff0c\u90a3\u4e48$\\frac{1}{2^k}$\u6b21\u5224\u65ad\u5931\u8bef\uff0c\u6982\u7387\u76f8\u5f53\u5c0f\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u7b97\u6cd5\uff1a\n\n\u5c0f\u8303\u56f4\u533a\u95f4\u76f4\u63a5\u66b4\u529b\uff0c\u5927\u8303\u56f4\u533a\u95f4\u968f\u673a\u533a\u95f4\u5185\u7684\u4e00\u4e2a\u6570\u5b57\u8fdb\u884c\u68c0\u9a8c\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u68c0\u9a8c\u4e00\u4e2a\u6570\u5b57\u5728\u533a\u95f4\u5185\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u795e\u4ed9\u8bf4\uff1a\u5584\u7528$STL$\n\n\u76f4\u63a5\u628a\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e22\u8fdb$vector$\u4e4b\u540e\u67e5\u8be2\u7528$upper_bound-lower_bound$\u5373\u53ef\n\n\u4e8e\u662f\u505a\u5b8c\u4e86\uff0c\u4f46\u662f\u540c\u65f6\u9700\u8981\u4e00\u4e9b\u5176\u4ed6\u7684\u4f18\u5316\uff0c\u5c3d\u91cf\u51cf\u5c11\u4e8c\u5206\u7684\u6b21\u6570\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline int R_int(){\n\tregister int n=0;\n\tregister char ch=getchar();\n\tregister bool I=false;\n\twhile(ch<'0'||ch>'9')I=(ch=='-'?1:0),ch=getchar();\n\twhile(ch>='0'&&ch<='9')n=(n<<1)+(n<<3)+(ch^'0'),ch=getchar();\n\treturn I?-n:n;\n}\n\nconst int maxn=1000000+10;\n\nvector<int>p[maxn];\nint sta[100],top;\nbool vis[maxn];\nint v[maxn];\nint M[maxn];\nint n,m;\n\nsigned main(){\n\tsrand((long long)new char);\n\tn=R_int(),m=R_int();\n\tfor(int i=1;i<=n;i++)v[i]=R_int(),p[v[i]].push_back(i);\n\tfor(int c=1,L,R,len;c<=m;c++){\n\t\tL=R_int(),R=R_int();len=R-L+1;\n\t\tif(len<=100){\n\t\t\tint tag=0;\n\t\t\tlen=len>>1;\n\t\t\tfor(int i=L;i<=R;i++){\n\t\t\t\tif(++M[v[i]]>len){\n\t\t\t\t\ttag=v[i];\n\t\t\t\t\twhile(i>=L)--M[v[i--]];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!tag)for(int i=L;i<=R;i++)--M[v[i]];\n\t\t\tprintf(\"%d\\n\",tag);\n\t\t}\n\t\telse {\n\t\t\tint tag=0;\n\t\t\tfor(int i=1;i<=30;i++){\n\t\t\t\tint tmp=v[rand()%len+L];\n\t\t\t\tsta[++top]=tmp;\n\t\t\t\tif(!vis[tmp]&&p[tmp].size()>(len>>1)&&std::upper_bound(p[tmp].begin(),p[tmp].end(),R)-std::lower_bound(p[tmp].begin(),p[tmp].end(),L)>(len>>1)){\n\t\t\t\t\ttag=tmp;break;\n\t\t\t\t}\n\t\t\t\tvis[tmp]=1;\n\t\t\t}\n\t\t\twhile(top)vis[sta[top--]]=0;\n\t\t\tprintf(\"%d\\n\",tag);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1554164353,
        "uid": 144006,
        "name": "Vivian_IMproved",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "\u5c5e\u4e8e\u4e00\u4e2a\u88f8\u7684\u4e3b\u5e2d\u6811\u6a21\u677f\uff0c\u96be\u5ea6\u6807\u7b7e\u6253\u7684\u597d\u9ad8\u3002\n\n[\u4e3b\u5e2d\u6811\u57fa\u7840\u4f20\u9001\u95e8\u3002](http://blog.csdn.net/no1\\_terminator/article/details/77601599)\n\n\u8fd9\u9898\u53ef\u4ee5\u8fd9\u4e48\u8003\u8651\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u8bfb\u5165\u7684\u6570\u5b57\u63d2\u5165\u5230\u4e3b\u5e2d\u6811\u4e2d\uff0c\n\n\u7136\u540e\u5bf9\u4e8e\u8be2\u95ee[i,j]\uff0c\n\n\u5728[1..n]\u4e2d\u6211\u4eec\u770b\u770b\u5c0f\u4e8emid\u7684\u6570\u5b57\u6709\u591a\u5c11\u4e2a\uff0c\u663e\u7136\u5982\u679c\u4e2a\u6570\u7684\u4e24\u500d<=j-i+1\u90a3\u4e48[1..mid]\u4e2d\u5c31\u4e0d\u5b58\u5728\uff0c\n\n\u4e0d\u7136\u6211\u4eec\u518d\u770b\u770b\u5927\u4e8emid\u7684\u6570\u5b57\u6709\u591a\u5c11\u4e2a\uff0c\u540c\u7406\uff0c\n\n\u5982\u679c\u4e24\u4e2a\u90fd\u4e0d\u884c\uff0c\u5c31\u8fd4\u56de0\uff0c\u9012\u5f52\u641e\u4e00\u641e\u5c31\u597d\u4e86\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=5e5+5;\nconst int M=N*21;\nstruct Presiedent_Tree{\n    int sum,L,R;\n}T[M];\nint n,m,root[N],T_cnt=1;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nvoid insert(int &now,int x,int l=1,int r=n){\n    T[T_cnt++]=T[now];now=T_cnt-1;\n    T[now].sum++;\n    if (l==r)return;\n    int mid=(l+r)>>1;\n    if (x<=mid)insert(T[now].L,x,l,mid);\n        else insert(T[now].R,x,mid+1,r);\n}\nint query(int i,int j,int x,int l=1,int r=n){\n    if (l==r)return l;\n    int mid=(l+r)>>1;\n    if (2*(T[T[j].L].sum-T[T[i].L].sum)>x)return query(T[i].L,T[j].L,x,l,mid);\n    if (2*(T[T[j].R].sum-T[T[i].R].sum)>x)return query(T[i].R,T[j].R,x,mid+1,r);\n    return 0;\n}\nint main(){\n    n=read(),m=read();\n    root[0]=0;\n    for (int i=1;i<=n;i++){\n        int x=read();\n        root[i]=root[i-1];\n        insert(root[i],x);\n    }\n    for (int i=1;i<=m;i++){\n        int l=read(),r=read();\n        printf(\"%d\\n\",query(root[l-1],root[r],r-l+1));\n    }\n    return 0;\n}\n```",
        "postTime": 1503977641,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "\u548c\u5176\u4ed6\u9898\u89e3\u4e0d\u540c\u7684\u65b9\u6cd5\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u6469\u5c14\u6295\u7968\u6cd5\uff0c\u4e0d\u4f1a\u7684\u5de6\u8f6c[P2397](https://www.luogu.com.cn/problem/P2397)\u5b66\u4e60\u4e00\u4e0b\u3002\n\n\u6469\u5c14\u6295\u7968\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u6211\u4eec\u53ea\u9700\u7ef4\u62a4\u533a\u95f4\u5185\u53ef\u80fd\u7684\u4f17\u6570\u548c\u7968\u6570\u5373\u53ef\uff0c\u5408\u5e76\u65f6\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u3002\u6ce8\u610f\u9009\u51fa\u7684\u6570\u8fd8\u9700\u9a8c\u8bc1\u5176\u51fa\u73b0\u6b21\u6570\u662f\u5426\u8fbe\u5230\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u53ef\u4ee5\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u672c\u9898\u8fd8\u6709\u589e\u5f3a\u7248[P3765](https://www.luogu.com.cn/problem/P3765)\uff0c\u4e0d\u8fc7\u6bd2\u7624\u5361\u7a7a\u95f4\uff0c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u8981\u5199\u7a7a\u95f4\u56de\u6536\u3002\n\n\u8be6\u7ec6\u6ce8\u91ca\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\nstruct T1{\n\tint v,s;//v\u662f\u9009\u51fa\u7684\u6570\uff0cs\u4e3a\u7968\u6570\n}t[2000009];\nstruct T2{\n\tint l,r,v;//v\u4e3a\u533a\u95f4\u5185\u8be5\u6570\u51fa\u73b0\u6b21\u6570\n}s[10000009];\nint u,v,id,p[500009],rt[500009];\nvoid build(int k,int l,int r){\n\tif(l==r){\n\t\tt[k].v=p[l],t[k].s=1;\n\t\treturn;\n\t}\n\tregister int m=l+r>>1,a=k<<1,b=a|1;\n\tbuild(a,l,m),build(b,m+1,r);\n \t//\u4ee5\u4e0b\u4e3a\u6838\u5fc3\u90e8\u5206\n\tif(t[a].v==t[b].v)t[k].v=t[a].v,t[k].s=t[a].s+t[b].s;//\u4f17\u6570\u76f8\u540c\uff0c\u7968\u6570\u76f8\u52a0\n\telse if(t[a].s>t[b].s)t[k].v=t[a].v,t[k].s=t[a].s-t[b].s;//\u4f17\u6570\u4e0d\u540c\uff0c\u53d6\u7968\u6570\u591a\u7684\u4e3a\u4f17\u6570\uff0c\u7968\u6570\u76f8\u51cf\n\telse t[k].v=t[b].v,t[k].s=t[b].s-t[a].s;\n}\nT1 qry(int k,int l,int r){//\u67e5\u8be2\u4f17\u6570\n\tif(u<=l&&r<=v)return t[k];\n\tregister int m=l+r>>1,a=k<<1,b=a|1;\n\tif(m>=v)return qry(a,l,m);\n\tif(u>m)return qry(b,m+1,r);\n\tregister T1 x=qry(a,l,m),y=qry(b,m+1,r);\n\tif(x.v==y.v)x.s+=y.s;\n\telse if(x.s>y.s)x.s-=y.s;\n\telse x.v=y.v,x.s=y.s-x.s;\n\treturn x;\n}\nvoid upd(int&k,int l,int r){//\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u63d2\u5165\n\tif(!k)k=++id;\n\t++s[k].v;\n\tif(l==r)return;\n\tregister int m=l+r>>1;\n\tif(u<=m)upd(s[k].l,l,m);else upd(s[k].r,m+1,r);\n}\nint qnum(int k,int l,int r){//\u67e5\u8be2\u533a\u95f4\u5185\u67d0\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\n\tif(u<=l&&r<=v)return s[k].v;\n\tregister int m=l+r>>1,z=0;\n\tif(u<=m)z=qnum(s[k].l,l,m);\n\tif(m<v)z+=qnum(s[k].r,m+1,r);\n\treturn z;\n}\nint main(){\n\tregister int n,m,i,j,k;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;++i)scanf(\"%d\",p+i),u=i,upd(rt[p[i]],1,n);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tscanf(\"%d%d\",&u,&v),j=qry(1,1,n).v;\n\t\tif((qnum(rt[j],1,n)<<1)>v-u+1)printf(\"%d\\n\",j);//\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u518d\u8f93\u51fa\n\t\telse puts(\"0\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1579705606,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P3567)\n\n~~\u521a\u5b66\u4e3b\u5e2d\u6811\uff0c\u5199\u7bc7\u9898\u89e3\u52a0\u5f3a\u8bb0\u5fc6\u3002~~\n\n\u601d\u8def\uff1a\u548c[\u4e3b\u5e2d\u6811\u6a21\u677f](https://www.luogu.org/problem/P3834)\u4e00\u6837\uff0c\u5148\u79bb\u6563\u5316\uff0c\u518d\u5efa\u6811\uff0c~~\u5176\u5b9e\u53ea\u9700\u8981\u628a[\u4e3b\u5e2d\u6811\u6a21\u677f](https://www.luogu.org/problem/P3834)\u7684AC\u4ee3\u7801\u6700\u540e\u7684\u67e5\u8be2\u8fd8\u6709\u6570\u7ec4\u7684\u5927\u5c0f\u6539\u4e00\u6539~~\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=500001;//\u552f\u4e8c\u548c\u4e3b\u5e2d\u6811\u6a21\u677f\u4e0d\u4e00\u6837\u7684\u5730\u65b9\nint n,q,m,cnt;\nint a[N],b[N],t[N];\nstruct sb\n{\n\tint s,l,r;\n}tre[N<<5];\nint build(int l,int r)//\u4ee5\u4e0b\u5168\u90e8\u548c\u4e3b\u5e2d\u6811\u6a21\u677f\u4e00\u6837\n{\n\tint p=++cnt;\n\tif(l<r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\ttre[p].l=build(l,mid);\n\t\ttre[p].r=build(mid+1,r);\n\t}\n\treturn p;\n}\nint update(int p1,int l,int r,int x)\n{\n\tint p=++cnt;\n\ttre[p].l=tre[p1].l;\n\ttre[p].r=tre[p1].r;\n\ttre[p].s=tre[p1].s+1;\n\tif(l<r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid)tre[p].l=update(tre[p1].l,l,mid,x);else tre[p].r=update(tre[p1].r,mid+1,r,x);\n\t}\n\treturn p;\n}//\u4ee5\u4e0a\u5168\u90e8\u548c\u4e3b\u5e2d\u6811\u6a21\u677f\u4e00\u6837\nint query(int u,int v,int l,int r,int k)//\u552f\u4e8c\u548c\u4e3b\u5e2d\u6811\u6a21\u677f\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff0ck\u8868\u793a\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\n{\n    if(l>=r)return l;\n    int l1=tre[tre[v].l].s-tre[tre[u].l].s,r1=tre[tre[v].r].s-tre[tre[u].r].s;//\u8ba1\u7b97\u5f53\u524d\u533a\u95f4\u5927\u4e8e\u7b49\u4e8el\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u6570\u5b57\u7684\u6570\u91cf\u548c\u5927\u4e8emid\u5c0f\u4e8e\u7b49\u4e8er\u7684\u6570\u5b57\u7684\u6570\u91cf\n    int mid=(l+r)>>1;\n    if(l1>k)return query(tre[u].l,tre[v].l,l,mid,k);//\u5982\u679c\u5927\u4e8e\u7b49\u4e8el\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u6570\u5b57\u7684\u6570\u91cf\u8d85\u8fc7\u4e00\u534a\u5c31\u5f80\u4e0b\u67e5\u8be2\n    if(r1>k)return query(tre[u].r,tre[v].r,mid+1,r,k);//\u540c\u4e0a\n    return 0;//\u5426\u5219\u8bf4\u660e\u8be5\u533a\u95f4\u4e2d\u4e0d\u5b58\u5728\u51fa\u73b0\u6570\u91cf\u8d85\u8fc7\u4e00\u534a\u7684\u6570\uff0c\u8fd4\u56de0\n}\nint main()//\u4ee5\u4e0b\u5168\u90e8\u548c\u4e3b\u5e2d\u6811\u6a21\u677f\u4e00\u6837\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=a[i];\n\t}\n\tsort(b+1,b+n+1);\n\tm=unique(b+1,b+n+1)-b-1;\n\tt[0]=build(1,m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint l=lower_bound(b+1,b+m+1,a[i])-b;\n\t\tt[i]=update(t[i-1],1,m,l);\n\t}\n\twhile(q--)\n\t{\n\t\tint a1,a2;\n\t\tscanf(\"%d%d\",&a1,&a2);\n\t\tprintf(\"%d\\n\",b[query(t[a1-1],t[a2],1,m,(a2-a1+1)/2)]);//\u67e5\u8be2\n\t}\n}//\u4ee5\u4e0a\u5168\u90e8\u548c\u4e3b\u5e2d\u6811\u6a21\u677f\u4e00\u6837\n```\n![](https://www.luogu.org/images/congratulation.png)",
        "postTime": 1567496572,
        "uid": 60075,
        "name": "pzc2004",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "\u8fd9\u9898\u505a\u6cd5\u597d\u591a\u554a\uff0c\u6bd4\u8f83\u65e0\u8111\u7684\u6709\u4e3b\u5e2d\u6811\u548c\u83ab\u961f\u3002  \n\u7279\u70b9\u662f\u597d\u60f3\u4f46\u662f\u4e0d\u592a\u597d\u5199\u3002\n\n\u6bd4\u8f83\u5999\u7684\u505a\u6cd5\u6211\u77e5\u9053\u7684\u6709\u4e24\u4e2a\uff0c  \n\u4e00\u4e2a\u662f\u968f\u673a\u53d6\u70b9\uff0c\u5229\u7528\u7684\u662f\u6709\u81f3\u5c11 1/2 \u7684\u6982\u7387\u53d6\u5230\u4e25\u683c\u4f17\u6570\u7684\u6027\u8d28\u3002  \n\u8fd9\u4e2a\u6709\u4eba\u63d0\u5230\u8fc7\u4e86\uff0c\u518d\u6b21\u4e0d\u8d58\u8ff0\u3002\n\n\u53e6\u4e00\u4e2a\u662f\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u4e5f\u5c31\u662f\u6211\u8981\u4ecb\u7ecd\u7684\u7b97\u6cd5\u3002\n\n\u4e00\u4e2a\u533a\u95f4\u82e5\u5b58\u5728\u4e00\u4e2a\u6570 x \u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u4e00\u534a\uff0c\u90a3\u4e48\u628a\u4e8c\u8fdb\u5236\u7684\u6bcf\u4e2a\u4f4d k \u5355\u72ec\u8003\u8651\uff0c x \u7684\u7b2c k \u4f4d\u51fa\u73b0\u6b21\u6570\u4e5f\u4e00\u5b9a\u5927\u4e8e\u4e00\u534a\u3002  \n\u90a3\u4e48\u679a\u4e3e\u6bcf\u4e00\u4f4d k \u5982\u679c\u80fd\u6c42\u51fa\u7b2c k \u4f4d\u7684\u4e25\u683c\u4f17\u6570\uff0c\u628a\u6bcf\u4e00\u4f4d\u7684\u7ed3\u679c\u62fc\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002  \n\u5982\u4f55\u6c42\u7b2c k \u4f4d\u4e0a\u7684\u4e25\u683c\u4f17\u6570\uff1f\u8fd9\u65f6\u5e8f\u5217\u76f8\u5f53\u4e8e\u53ea\u6709 01 \uff0c\u90a3\u4e48\u53ea\u8981\u6c42\u51fa 1 \u7684\u4e2a\u6570 0 \u7684\u4e2a\u6570\u4e5f\u662f\u786e\u5b9a\u7684\u3002  \n\u800c\u53ea\u9700\u5bf9\u6bcf\u4e00\u4f4d\u7ef4\u62a4\u524d\u7f00\u548c\u5c31\u80fd\u8f7b\u677e\u6c42\u51fa\u8be5\u4f4d\u7684\u4e00\u4e2a\u533a\u95f4\u5185 1 \u7684\u4e2a\u6570\u3002\n\n\u8fd9\u6837\u505a\u4e00\u5b9a\u5bf9\u5417\uff1f  \n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u6837\u65e0\u6cd5\u5904\u7406\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u7279\u5224\u4e00\u4e0b\u65e0\u89e3\uff0c\u6c42\u51fa\u7b54\u6848 x \u540e\u4e8c\u5206\u68c0\u67e5\u4e00\u4e0b x \u7684\u51fa\u73b0\u6b21\u6570\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5e38\u6570\u6709\u70b9\u5927\uff0c\u6709\u4e00\u4e2a\u70b9\u8981\u5f00 O2 \u624d\u80fd\u8fc7\uff09\uff1a\n\n```cpp\n#if 0\n2019.09.19\n\n\u4e00\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u8bdd\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u4f4d\u7684\u6bcf\u4e00\u4f4d\u5355\u72ec\u8003\u8651\u4e5f\u4e00\u5b9a\u8d85\u8fc7\u4e00\u534a\u3002\n\u90a3\u4e48\u95ee\u9898\u8f6c\u6362\u4e3a 01 \u5e8f\u5217\uff0c\u4ee3\u4ef7\u662f\u4e00\u4e2a log \u3002\n01 \u5e8f\u5217\u6c42\u4f17\u6570\u76f4\u63a5\u7528\u524d\u7f00\u548c\u67e5\u533a\u95f4\u503c\u5373\u53ef\u3002\n\u53e6\u5916\u9700\u8981\u5224\u65ad\u65e0\u89e3\uff0c\u6c42\u51fa\u7b54\u6848 x \u540e\u5728 pos[x] \u91cc\u4e8c\u5206\u51fa x \u7684\u6570\u91cf\u5373\u53ef\uff0c\n\u5176\u4e2d pos[x] \u662f x \u7684\u51fa\u73b0\u4f4d\u7f6e\u96c6\u5408\u3002\n\u4e00\u4e2a\u5751\u70b9\u662f\u7b97\u51fa\u6765\u7684 x \u53ef\u80fd\u6839\u672c\u4e0d\u5b58\u5728\u3002\n#endif\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n\ninline int input() { int x; scanf(\"%d\", &x); return x; }\n\nconst int maxn = 500005, maxk = 20;\nint s[maxk][maxn];\nstd::vector<int> pos[maxn];\n\nint main() {\n\tint n = input(), q = input();\n\n\tfor(int i = 1; i <= n; i ++) {\n\t\tint x = input();\n\t\tfor(int k = 0; k < maxk; k ++)\n\t\t\ts[k][i] = s[k][i - 1] + (x >> k & 1);\n\t\tpos[x].push_back(i);\n\t}\n\n\twhile(q --) {\n\t\tint l = input(), r = input(), ans = 0;\n\n\t\tfor(int k = 0; k < maxk; k ++) {\n\t\t\tint x = s[k][r] - s[k][l - 1];\n\t\t\tif((x << 1) > r - l + 1)\n\t\t\t\tans |= 1 << k;\n\t\t}\n\n\t\tif(ans > n) {\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tint lp = int(\n\t\t\t\tstd::lower_bound(pos[ans].begin(), pos[ans].end(), l) - pos[ans].begin());\n\t\tint rp = int(\n\t\t\t\tstd::upper_bound(pos[ans].begin(), pos[ans].end(), r) - pos[ans].begin() - 1);\n\n\t\tif(((rp - lp + 1) << 1) > r - l + 1)\n\t\t\tprintf(\"%d\\n\", ans);\n\t\telse\n\t\t\tputs(\"0\");\n\t}\n}\n```",
        "postTime": 1568901317,
        "uid": 52232,
        "name": "Kewth",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e0b\u9898\u89e3\u533a\uff0c\u57fa\u672c\u4e0a\u4e0d\u662f\u4e3b\u5e2d\u6811\u5c31\u662f\u968f\u673a\u5316\u4e71\u641e\u2026\u2026\r\n\r\n\u6211\u5bfb\u601d\u7740\u770b\u5230\u8fd9\u9898\u60f3\u5230\u56de\u6eda\u83ab\u961f\u4e0d\u662f\u5f88\u81ea\u7136\u5417\uff1f\uff1f\uff1f\r\n\r\n\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u6709\u5982\u4e0b\u7279\u5f81\uff1a\r\n+ \u9759\u6001\uff08\u4e0d\u5e26\u4fee\u6539\uff0c\u591a\u6b21\u67e5\u8be2\uff09\r\n+ \u6bcf\u6b21\u67e5\u8be2\u662f\u533a\u95f4 $[l,r]$\r\n+ \u7edf\u8ba1\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u800c\u8fd9\u4e2a\u662f\u7ecf\u5178\u7684\u53ef\u4ee5\u7528\u83ab\u961f\u505a\u7684\u95ee\u9898\r\n\r\n\u5224\u65ad\u662f\u5426\u5b58\u5728\u6570\u7684\u51fa\u73b0\u6b21\u6570\u4e25\u683c\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u5c31\u7b49\u4ef7\u4e8e\u5224\u65ad\u533a\u95f4\u91cc\u6240\u6709\u6570\u7684\u51fa\u73b0\u6b21\u6570\u6700\u5927\u503c\u662f\u5426\u4e25\u683c\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u4e00\u534a\u3002\r\n\r\n\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5927\u503c\uff0c\u662f\u4e00\u4e2a\u5728\u6dfb\u52a0\u8fc7\u7a0b\u4e2d\u6613\u7ef4\u62a4\uff0c\u800c\u5728\u5220\u9664\u8fc7\u7a0b\u4e2d\u4e0d\u6613\u7ef4\u62a4\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u4f7f\u7528\u56de\u6eda\u83ab\u961f\uff0c\u4e5f\u5c31\u662f\u4e0d\u5220\u9664\u83ab\u961f\u3002\r\n\r\n\u56de\u6eda\u83ab\u961f\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ca\u7ec6\u8282\u4e0d\u4e86\u89e3\u7684\u8bf7\u81ea\u884c\u79fb\u6b65\u6a21\u677f\u9898\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\r\n\r\n\u4e8e\u662f\u8fd9\u9898\u53d8\u6210\u4e86\u4e00\u9053\u677f\u5b50\u9898\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n)$\uff0c\u7531\u4e8e $n,m$ \u540c\u9636\u7edf\u4e00\u4f7f\u7528 $n$\u3002\r\n\r\n\u672c\u4eba\u4e0d\u5927\u4f1a\u5361\u5e38\uff0c\u8fd9\u9898\u7531\u4e8e\u6570\u636e\u8303\u56f4\u662f $5 \\times 10^5$\uff0c\u5728\u4e0d\u5f00 O2 \u7684\u60c5\u51b5\u4e0b\u4f1a T \u6389\u4e24\u4e2a\u70b9\uff0c\u5f00\u4e86 O2 \u4e4b\u540e\u6700\u5927\u89c4\u6a21\u6d4b\u8bd5\u70b9\u5728 600ms \u5185\u53ef\u4ee5\u8dd1\u8fc7\u3002\u601d\u8def\u653e\u5728\u8fd9\u91cc\u7ed9\u5927\u5bb6\u4e00\u4e2a\u53c2\u8003\u3002\r\n\r\n\u4ee3\u7801\uff1a\r\n```cpp\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <cmath>\r\nusing namespace std;\r\nconst int maxn = 5e5 + 10 , maxm = 5e5 + 10, maxb = 715;\r\nint n, m;\r\nint a[maxn];\r\nstruct query {\r\n    int l, r, id;\r\n} q[maxm];\r\nint ans[maxm];\r\nint blen, bnum, bel[maxn];\r\nint cnt[maxn];\r\nint L[maxb], R[maxb];\r\n\r\nbool cmp(const query &x, const query &y) { return bel[x.l] != bel[y.l] ? bel[x.l] < bel[y.l] : x.r < y.r; }\r\n\r\nint main() {\r\n    scanf(\"%d%d\", &n, &m);\r\n    for(int i = 1; i <= n; ++i) scanf(\"%d\", a + i);\r\n    for(int i = 1; i <= m; ++i) {\r\n        scanf(\"%d%d\", &q[i].l, &q[i].r);\r\n        q[i].id = i;\r\n    }\r\n    blen = sqrt(n);\r\n    bnum = n / blen;\r\n    for(int i = 1; i <= bnum; ++i) {\r\n        L[i] = (i - 1) * blen + 1;\r\n        R[i] = i * blen;\r\n    }\r\n    if(R[bnum] != n) {\r\n        L[bnum + 1] = R[bnum] + 1;\r\n        R[++bnum] = n;\r\n    }\r\n    for(int i = 1; i <= bnum; ++i) fill(bel + L[i], bel + R[i] + 1, i);\r\n    sort(q + 1, q + m + 1, cmp);\r\n    int l = 1, r = 0, lst = 0, mx, fr;\r\n    for(int i = 1; i <= m; ++i) {\r\n        if(bel[q[i].l] != lst) {\r\n            while(r >= l) --cnt[a[r--]];\r\n            mx = 0; fr = 0;\r\n            lst = bel[q[i].l];\r\n            r = R[lst];\r\n            l = r + 1;\r\n        }\r\n        if(bel[q[i].l] == bel[q[i].r]) {\r\n            for(int j = q[i].l; j <= q[i].r; ++j)\r\n                if(++cnt[a[j]] > mx)\r\n                    mx = cnt[fr = a[j]];\r\n            ans[q[i].id] = mx > (q[i].r - q[i].l + 1) / 2 ? fr : 0;\r\n            for(int j = q[i].l; j <= q[i].r; ++j) --cnt[a[j]];\r\n            mx = 0; fr = 0;\r\n            continue;\r\n        }\r\n        while(r < q[i].r) {\r\n            if(++cnt[a[++r]] > mx)\r\n                mx = cnt[fr = a[r]];\r\n        }\r\n        int lol = l, tmp = mx, ffr = fr;\r\n        while(lol > q[i].l) {\r\n            if(++cnt[a[--lol]] > tmp)\r\n                tmp = cnt[ffr = a[lol]];\r\n        }\r\n        ans[q[i].id] = tmp > (q[i].r - q[i].l + 1) / 2 ? ffr : 0;\r\n        while(lol < l) --cnt[a[lol++]];\r\n    }\r\n    for(int i = 1; i <= m; ++i) printf(\"%d\\n\", ans[i]);\r\n    return 0;\r\n}\r\n```",
        "postTime": 1660817724,
        "uid": 286770,
        "name": "Andrewzdm",
        "ccfLevel": 7,
        "title": "P3567 [POI2014]KUR-Couriers \u9898\u89e3"
    },
    {
        "content": "\u524d\u7f6e\u829d\u58eb\uff1a[\u83ab\u961f](http://oi-wiki.com/misc/mo-algo/)\u3001[\u968f\u673a\u5316](http://oi-wiki.com/misc/rand-technique/)\n\n\u770b\u5230\u201c\u5728 $[l, r]$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u201d\u5bb9\u6613\u60f3\u5230\u83ab\u961f\u3002\n\n\u4f46\u5982\u679c\u4f60\u5c1d\u8bd5\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u904d\u5386\u533a\u95f4\u5185\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm)$\uff0c\u5728 NKOJ \u4e0a\uff08\u6570\u636e\u8303\u56f4\u4e3a $1 \\leq n, m \\leq 10^5$\uff09\u90fd\u4f1a\u70b8\u6210 $76 \\operatorname{pts}$\uff08\u5982\u679c\u4e0d\u8003\u8651\u5361\u5e38\uff09\u3002\n\n\u4f46\u662f\u2026\u2026\u5982\u679c\u533a\u95f4\u5185\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\uff0c\u96be\u9053\u4e0d\u662f\u5728\u533a\u95f4\u5185\u671f\u671b\u731c $2$ \u6b21\u5c31\u53ef\u4ee5\u731c\u5230\u8fd9\u4e2a\u6570\u5417\uff1f\n\n\u4e8e\u662f\u8003\u8651\u968f\u673a\u5316\u3002\u8bbe\u5b9a\u9600\u503c $M$\uff0c\u6bcf\u6b21\u5728\u533a\u95f4\u5185\u731c $M$ \u6b21\u8fd9\u4e2a\u6570\u7684\u4e0b\u6807\uff0c\u5982\u679c\u6ee1\u8db3\u5219\u6709\u7b54\u6848\uff1b\u5426\u5219\uff0c**\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b**\u65e0\u89e3\u3002\u5982\u679c\u6709\u7b54\u6848\uff0c\u5219\u8fd9\u6837\u505a\u4ecd\u7136\u731c\u4e0d\u5230\u7b54\u6848\u7684\u6982\u7387\u4e3a $\\frac{1}{2^{M - 1}}$\u3002\u6211\u7684\u4ee3\u7801\u4e2d\u53d6 $M = 20$\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5373\u4f7f\u6211\u4eec\u8fd9\u6837\u505a\uff0c\u5728 Luogu \u4e0a\u4ecd\u7136\u53ea\u6709 $60 \\operatorname{pts}$\u3002\u8003\u8651\u5361\u5e38\uff0c\u6211\u91c7\u7528\u4e86\u5feb\u8bfb\u3001\u5947\u5076\u6392\u5e8f\u3001\u524d\u7f6e\u81ea\u589e\u3001\u5c06 int \u6539\u4e3a unsigned int \u7684\u65b9\u6cd5 AC \u4e86\u8fd9\u9053\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m \\log m + n \\sqrt{m} + nM)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n\nusing namespace std;\n\ntypedef unsigned int uint;\n\ntypedef struct {\n\tuint id;\n\tuint pos;\n\tuint l;\n\tuint r;\n} Query;\n\nconst uint N = 5e5 + 7, M = 20;\nuint block;\nuint a[N], cnt[N], ans[N];\nQuery query[N];\n\nbool operator <(const Query a, const Query b){\n\tif (a.pos != b.pos) return a.pos < b.pos;\n\tif (a.pos % 2 == 0) return a.r > b.r;\n\treturn a.r < b.r;\n}\n\ninline uint read(){\n\tuint ans = 0;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9'){\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9'){\n\t\tans = ans * 10 + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn ans;\n}\n\n#define add(x) ++cnt[a[x]]\n#define del(x) --cnt[a[x]]\n\nint main(){\n\tuint n = read(), m = read();\n\tblock = ceil(n / sqrt(m));\n\tsrand(time(NULL));\n\tfor (register uint i = 1; i <= n; ++i){\n\t\ta[i] = read();\n\t}\n\tfor (register uint i = 1; i <= m; ++i){\n\t\tquery[i].l = read();\n\t\tquery[i].r = read();\n\t\tquery[i].id = i;\n\t\tquery[i].pos = (query[i].l - 1) / block + 1;\n\t}\n\tsort(query + 1, query + m + 1);\n\tfor (register uint i = 1, j = 1, k = 0; i <= m; ++i){\n\t\tuint limit = (query[i].r - query[i].l + 1) / 2;\n\t\twhile (j > query[i].l) add(--j);\n\t\twhile (k < query[i].r) add(++k);\n\t\twhile (j < query[i].l) del(j++);\n\t\twhile (k > query[i].r) del(k--);\n\t\tfor (register uint l = 1; l <= M; ++l){\n\t\t\tuint pos = rand() % (query[i].r - query[i].l + 1) + query[i].l;\n\t\t\tif (cnt[a[pos]] > limit){\n\t\t\t\tans[query[i].id] = a[pos];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (register uint i = 1; i <= m; ++i){\n\t\tprintf(\"%u\\n\", ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1625202093,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014] KUR-Couriers\u3011"
    },
    {
        "content": "## P3567 [POI2014]KUR-Couriers \u9898\u89e3\n\n### \u3010\u9898\u610f\u3011\n\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5e8f\u5217$a$\u30021<=$a_i$<=$n$\n\n$m$\u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4[$l,r$]\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u6570\u5728[$l,r$]\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u5927\u4e8e$(r-l+1)/2$\u3002\u5982\u679c\u5b58\u5728\uff0c\u8f93\u51fa\u8fd9\u4e2a\u6570\uff0c\u5426\u5219\u8f93\u51fa0\u3002\n\n### \u3010\u5206\u6790\u3011\n\u770b\u5230\u6c42\u533a\u95f4\u7684\u6570\u503c\u51fa\u73b0\u6b21\u6570\uff0c\u5c31\u77e5\u9053\u7528[\u4e3b\u5e2d\u6811](https://www.luogu.com.cn/problem/P3834)\u3002\n\n$insert$\u8ddf\u6a21\u677f\u4e00\u6837\uff0c\u5728\u6b64\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\n\n$query$\n```cpp\nint query(int l,int r,int x,int y,int k)\n{\n\tif(l==r)\n\t\treturn l;\n\tif(dat[y].sum-dat[x].sum<=k) //\u5982\u679c\u5bf9\u5e94\u533a\u95f4\u51fa\u73b0\u7684\u6570\u5c11\u4e8ek\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n\t\treturn 0;\n\tif(dat[dat[y].l].sum-dat[dat[x].l].sum>k) //\u5982\u679c\u5408\u6cd5\u6570\u5b57\u5728\u5de6\u5b50\u6811\u4e2d\n\t\treturn query(l,mid,dat[x].l,dat[y].l,k);\n\telse if(dat[dat[y].r].sum-dat[dat[x].r].sum>k) //\u5982\u679c\u5408\u6cd5\u6570\u5b57\u5728\u53f3\u5b50\u6811\u4e2d\n\t\treturn query(mid+1,r,dat[x].r,dat[y].r,k);\n\treturn 0; //\u5426\u5219\u4e0d\u5408\u6cd5\n}\n```\n\u4e0b\u9762\u662fAC\u4ee3\u7801\n```cpp\n/*\nluogu P3567\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define mid (l+r>>1)\n\nint n,q;\nint root[500005],cnt;\nstruct hjtree{\n\tint l,r,sum;\n}dat[500005<<5];\n\nvoid insert(int &o,int l,int r,int pre,int x)\n{\n\to = ++cnt;\n\tdat[o] = dat[pre];\n\tdat[o].sum++;\n\tif(l==r)\n\t\treturn;\n\tif(x<=mid)\n\t\tinsert(dat[o].l,l,mid,dat[pre].l,x);\n\telse\n\t\tinsert(dat[o].r,mid+1,r,dat[pre].r,x);\n}\n\nint query(int l,int r,int x,int y,int k)\n{\n\tif(l==r)\n\t\treturn l;\n\tif(dat[y].sum-dat[x].sum<=k)\n\t\treturn 0;\n\tif(dat[dat[y].l].sum-dat[dat[x].l].sum>k)\n\t\treturn query(l,mid,dat[x].l,dat[y].l,k);\n\telse if(dat[dat[y].r].sum-dat[dat[x].r].sum>k)\n\t\treturn query(mid+1,r,dat[x].r,dat[y].r,k);\n\treturn 0;\n}\n\nint main()\n{\n\tcin>>n>>q;\n\tfor(int i=1,x;i<=n&&cin>>x;i++)\n\t\tinsert(root[i],1,n,root[i-1],x);\n\twhile(q--)\n\t{\n\t\tint l,r,k;\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tk = r-l+1>>1;\n\t\tprintf(\"%d\\n\",query(1,n,root[l-1],root[r],k));\n\t}\n\t\n\treturn 0;\n}\n```\n\u795d\u5927\u5bb6AC\u6109\u5feb\uff01",
        "postTime": 1575723467,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "\u8fd8\u6709\u4e00\u79cd\u4e3b\u5e2d\u6811\u505a\u6cd5\uff0c\u6765\u81ea\u4e0a\u8bfe\u8001\u5e08\u7684\u542f\u53d1$qwq$  \n\u524d\u7f6e\u829d\u58eb\uff1a\u9759\u6001\u533a\u95f4\u7b2c$k$\u5927\uff08\u4e3b\u5e2d\u6811\u677f\u5b50\uff09  \n\u4e3b\u8981\u601d\u8def\uff1a  \n**\u82e5\u4e00\u4e2a\u6570\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u4e00\u534a\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u662f\u4e2d\u4f4d\u6570**  \n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u4e2d\u4f4d\u6570\uff08\u533a\u95f4\u7b2c$k$\u5927\uff09\uff0c\u8bb0\u4e3a$tmp$\uff0c\u7136\u540e\u518d\u6c42\u4e00\u4e0b$tmp$\u51fa\u73b0\u6b21\u6570\uff0c\u5982\u679c\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\uff0c$tmp$\u5373\u4e3a\u7b54\u6848\u3002\u5426\u5219\u6ca1\u6709\u7b54\u6848\u3002  \n\u6ce8\u610f\u8ba8\u8bba\u533a\u95f4\u957f\u5ea6\u7684\u5947\u5076\u6027$qwq$\uff0c\u5076\u6570\u65f6\u8981\u5148\u6bd4\u8f83\u662f\u5426\u76f8\u7b49\u518d\u6c42\u51fa\u73b0\u6b21\u6570  \n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#define R register int\nusing namespace std;\n#define ull unsigned long long\n#define ll long long\n#define pause (for(R i=1;i<=10000000000;++i))\n#define In freopen(\"NOIPAK++.in\",\"r\",stdin)\n#define Out freopen(\"out.out\",\"w\",stdout)\nnamespace Fread {\n\tstatic char B[1<<15],*S=B,*D=B;\n#ifndef JACK\n\t#define getchar() (S==D&&(D=(S=B)+fread(B,1,1<<15,stdin),S==D)?EOF:*S++)\n#endif\n\tinline int g() {\n\t\tR ret=0,fix=1; register char ch;\n\t\twhile(!isdigit(ch=getchar()))\n\t\t\tfix=ch=='-'?-1:fix;\n\t\tif(ch==EOF) return EOF;\n\t\tdo\n\t\t\tret=ret*10+(ch^48);\n\t\twhile(isdigit(ch=getchar()));\n\t\treturn ret*fix;\n\t}\n\tinline bool isempty(const char& ch) {\n\t\treturn (ch<=36||ch>=127);\n\t}\n\tinline void gs(char* s) {\n\t\tregister char ch; while(isempty(ch=getchar()));\n\t\tdo *s++=ch; while(!isempty(ch=getchar()));\n\t}\n}\nusing Fread::g;\nusing Fread::gs;\n\nnamespace Luitaryi {\nconst int N=500010,M=N*20;\nint tot,n,m;\nint ls[M],rs[M],sum[M],rt[N];\ninline void build(int& tr,int l,int r) {\n\ttr=++tot; if(l==r) return ;\n\tR md=l+r>>1;\n\tbuild(ls[tr],l,md),build(rs[tr],md+1,r);\n}\ninline void change(int pre,int& tr,int l,int r,int vl) {\n\ttr=++tot; ls[tr]=ls[pre],rs[tr]=rs[pre],sum[tr]=sum[pre]+1;\n\tif(l==r) return ; R md=l+r>>1;\n\tif(vl<=md) change(ls[pre],ls[tr],l,md,vl);\n\telse change(rs[pre],rs[tr],md+1,r,vl);\n}\ninline int query(int lt,int rt,int l,int r,int pos) {\n\tif(l==r) return sum[rt]-sum[lt];\n\tR md=l+r>>1;\n\tif(pos<=md) return query(ls[lt],ls[rt],l,md,pos);\n\telse return query(rs[lt],rs[rt],md+1,r,pos);\n}\ninline int calc(int lt,int rt,int l,int r,int k) {\n\tif(l==r) return l;\n\tR md=l+r>>1,sz=sum[ls[rt]]-sum[ls[lt]];\n\tif(sz>=k) return calc(ls[lt],ls[rt],l,md,k);\n\telse return calc(rs[lt],rs[rt],md+1,r,k-sz);\n}\ninline void solve(int l,int r) {\n\tif((r-l+1)&1) {\n\t\tR tmp=calc(rt[l-1],rt[r],1,n,(r-l+2)/2);\n\t\tif(query(rt[l-1],rt[r],1,n,tmp)>(r-l+1)/2)\n\t\t\tprintf(\"%d\\n\",tmp);\n\t\telse printf(\"0\\n\");\n\t} else {\n\t\tR tmp=calc(rt[l-1],rt[r],1,n,(r-l+1)/2),\n\t\t\ttnp=calc(rt[l-1],rt[r],1,n,(r-l+3)/2);\n\t\tif(tmp==tnp&&query(rt[l-1],rt[r],1,n,tmp)>(r-l+1)/2) \n\t\t\tprintf(\"%d\\n\",tmp);\n\t\telse printf(\"0\\n\");\n\t}\n}\ninline void main() {\n\tn=g(),m=g();\n\tfor(R i=1,x;i<=n;++i) x=g(),change(rt[i-1],rt[i],1,n,x);\n\tfor(R i=1;i<=m;++i) {\n\t\tR l=g(),r=g();\n\t\tsolve(l,r);\n\t}\n}\n}\nsigned main() {\n\tLuitaryi::main(); \n\treturn 0;\n}\n```\n",
        "postTime": 1562927857,
        "uid": 115086,
        "name": "Tari",
        "ccfLevel": 7,
        "title": "Jack\u2019s \u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "# \u9898\u9762\n[\u6233\u6211\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.goldenpotato.cn/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/luogu-p3567-poi2014kur-couriers/)\n\n---\n# Solution\n~~\u5927\u6c34\u9898\u554a\uff0c\u771f\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684~~\n\n\u6211\u4eec\u8003\u8651\u5efa\u4e00\u9897\u6743\u503c\u4e3b\u5e2d\u6811\uff0c\u4ece\u5de6\u5f80\u53f3\u9010\u4e2a\u63d2\u5165\u3002\u56e0\u4e3a\u4e2a\u6570\u6ee1\u8db3\u53ef\u51cf\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u201c\u6263\u201d\u51fa$[L,R]$\u533a\u95f4\u6784\u6210\u7684\u4e3b\u5e2d\u6811\u3002\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u5728\u6811\u4e0a\u4e8c\u5206\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7$K$\u7684\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\n\u5c31\u9171\uff0c\u8fd9\u9898\u5c31\u88ab\u6211\u4eec\u5207\u6389\u5566\ufe3f(\uffe3\ufe36\uffe3)\ufe3f\n\n---\n# Solution\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=500000+100;\nlong long read()\n{\n    long long x=0,f=1; char c=getchar();\n    while(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n    while(isdigit(c)){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\nstruct SegmentTree\n{\n    #define mid ((now_l+now_r)>>1)\n    static const int M=25*N;\n    int size[M],son[M][2],to;\n    inline void update(int now)\n    {\n        size[now]=size[son[now][0]]+size[son[now][1]];\n    }\n    void Add(int now,int pre,int x,int now_l,int now_r)\n    {\n        if(now_l==now_r)\n        {\n            size[now]=size[pre]+1;\n            return;\n        }\n        if(x<=mid)\n        {\n            son[now][1]=son[pre][1];\n            Add(son[now][0]=++to,son[pre][0],x,now_l,mid);\n        }\n        else\n        {\n            son[now][0]=son[pre][0];\n            Add(son[now][1]=++to,son[pre][1],x,mid+1,now_r);\n        }\n        update(now);\n    }\n    int Query(int now,int pre,int x,int now_l,int now_r)\n    {\n        if(now_l==now_r)\n            return now_l;\n        if(size[son[now][0]]-size[son[pre][0]]>=x)\n            return Query(son[now][0],son[pre][0],x,now_l,mid);\n        else if(size[son[now][1]]-size[son[pre][1]]>=x)\n            return Query(son[now][1],son[pre][1],x,mid+1,now_r);\n        return 0;\n    }\n    #undef mid\n}sgt;\nint root[N],n,m;\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=n;i++)\n    {\n        int tmp=read();\n        sgt.Add(root[i]=++sgt.to,root[i-1],tmp,1,n);\n    }\n    \n    for(int i=1;i<=m;i++)\n    {\n        int l=read(),r=read(),mid=(r-l+1)/2+1;\n        printf(\"%d\\n\",sgt.Query(root[r],root[l-1],mid,1,n));\n    }\n    return 0;\n}\n\n```\n\n\n\n",
        "postTime": 1551930730,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "\u8003\u8651\u4e3b\u5e2d\u6811\uff0c\u52a0\u70b9\u64cd\u4f5c\u5c31\u4e0d\u7528\u8bf4\u4e86\u5427\u3002\u3002\u91cd\u70b9\u5f3a\u8c03\u4e00\u4e0b\u67e5\u8be2\u64cd\u4f5c\uff0c\u6211\u4eec\u60f3\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u4e00\u534a\u7684\u8bdd\uff0c\u90a3\u4e48\u5b83\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u53ef\u80fd\u51fa\u73b0\u5728\u5de6\u5b50\u6811\u4e2d\uff0c\u4e5f\u53ef\u80fd\u51fa\u73b0\u5728\u53f3\u5b50\u6811\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u4e3b\u5e2d\u6811\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2asum\u8868\u793a\u6bcf\u4e2a\u533a\u95f4\u4e2d\u6570\u51fa\u73b0\u7684\u6b21\u6570\u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u67e5\u8be2\u5206\u5de6\u53f3\u5b50\u6811\u6765\u67e5\u3002(\u5176\u5b9e\u5c31\u662f\u4e2a\u4e3b\u5e2d\u6811\u677f\u5b50\u9898\u5566\u3002\u3002\u3002)\n\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#define maxn 10000007\nusing namespace std;\nint rt[maxn],sum[maxn],lc[maxn],rc[maxn],n,m,cnt,a[maxn],b[maxn];\ninline int qread() {\n  char c=getchar();int num=0,f=1;\n  for(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n  for(;isdigit(c);c=getchar()) num=num*10+c-'0';\n  return num*f;\n}\nvoid add(int &now, int last, int l, int r, int x) {\n  now=++cnt;\n  lc[now]=lc[last],rc[now]=rc[last],sum[now]=sum[last]+1;\n  if(l==r) return;\n  int mid=(l+r)>>1;\n  if(x<=mid) add(lc[now],lc[last],l,mid,x);\n  else add(rc[now],rc[last],mid+1,r,x);\n}\nint query(int l, int r, int L, int R, int x) {\n  if(l==r) return l;\n  int cyh=sum[lc[R]]-sum[lc[L]],lcy=sum[rc[R]]-sum[rc[L]];\n  int mid=(l+r)>>1;\n  if(cyh>x) return query(l,mid,lc[L],lc[R],x);\n  else if(lcy>x) return query(mid+1,r,rc[L],rc[R],x);\n  else return 0; \n}\nint main() {\n  n=qread(),m=qread();\n  for(int i=1;i<=n;++i) a[i]=qread(),b[i]=a[i];\n  sort(a+1,a+1+n);\n  int len=unique(a+1,a+1+n)-a-1;\n  for(int i=1;i<=n;++i) {\n    int p=lower_bound(a+1,a+1+len,b[i])-a;\n    add(rt[i],rt[i-1],1,len,p);\n  }\n  for(int i=1,l,r;i<=m;++i) {\n    l=qread(),r=qread();\n    printf(\"%d\\n\",a[query(1,len,rt[l-1],rt[r],(r-l+1)>>1)]);\n  }\n  return 0;\n}\n```",
        "postTime": 1550368352,
        "uid": 68622,
        "name": "King\u4e28\u5e1d\u5fa1\u5a01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "\n# [\u987e](https://www.luogu.org/blog/RPdreamer/#)[z](https://www.cnblogs.com/-guz/)\n\n~~\u4f60\u6ca1\u6709\u53d1\u73b0\u4e24\u4e2a\u5b57\u91cc\u7684blog\u90fd\u4e0d\u4e00\u6837\u561b~~ qwq\n\n\u4e3b\u5e2d\u6811\u677f\u5b50\u9898\n\n~~\u8bdd\u8bf4\u4e3a\u5565\u662f\u4e2a\u677f\u5b50\u9898,\u6211\u4e5f\u6ca1\u770b\u51fa\u6765~~\n\n\u67e5\u8be2\u65f6\u9700\u8981\u627e\u51fa\u51fa\u73b0\u6b21\u6570\u4e3a$(r-l+1)/2$\u7684.\n\n\u4e3b\u5e2d\u6811\u57fa\u672c\u64cd\u4f5c,**\u79bb\u6563\u5316**\u662f\u5fc5\u987b\u7684.\n\n\u7136\u540e\u5efa\u6811\u64cd\u4f5c\u4e0e\u4e4b\u524d\u64cd\u4f5c\u76f8\u540c.\n\n\u96be\u70b9\u5728\u4e8e\u67e5\u8be2\u65f6\u5019\u5982\u4f55\u505a.\n\n\u6700\u57fa\u672c\u7684\u67e5\u8be2,\u662f\u5224\u65ad\u5f53\u524d\u6839\u7684\u5de6\u8282\u70b9\u7684$sum$\u4e0e\u67e5\u8be2\u7684\u5927\u5c0f\u7684\u5173\u7cfb.\n\n\u5982\u679c\u5de6\u8fb9\u7684$sum$\u5927\u4e8e\u7b49\u4e8e$(r-l+1)/2$\u5219,\u6b64\u6570\u5728\u5de6\u4fa7.\n\n\u7136\u540e\u5982\u4f55**\u5224\u65ad\u5728\u53f3\u4fa7**?\n\n\u7528\u5f53\u524d\u6839\u603b\u5171\u7684$sum$\u51cf\u53bb\u5de6\u8fb9\u7684$sum$,\u5373\u4e3a\u53f3\u8fb9\u7684$sum$,\u5224\u65ad\u662f\u5426\u5927\u4e8e$(r-l+1)/2$\u5373\u53ef.\n\n\u5426\u5219$return 0$\n\n``\u4ee3\u7801``\n\n```c++\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#define N 500008\n#define R register\nusing namespace std;\ninline void in(int &x)\n{\n\tint f=1;x=0;char s=getchar();\n\twhile(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile(isdigit(s)){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nint n,m,new_n=1;\nint a[N],b[N],cnt;\nint root[N*20],sum[N*20],lson[N*20],rson[N*20];\nvoid build(int lastroot,int &nowroot,int l,int r,int pos)\n{\n\tnowroot=++cnt;\n\tsum[nowroot]=sum[lastroot]+1;\n\tlson[nowroot]=lson[lastroot];\n\trson[nowroot]=rson[lastroot];\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)build(lson[lastroot],lson[nowroot],l,mid,pos);\n\telse build(rson[lastroot],rson[nowroot],mid+1,r,pos);\n}\nint query(int lastroot,int nowroot,int l,int r,int pos)\n{\n\tif(l==r)return l;\n\tint tmp=sum[lson[nowroot]]-sum[lson[lastroot]];\n\tint mid=(l+r)>>1;\n\tif(pos<tmp)return query(lson[lastroot],lson[nowroot],l,mid,pos);\n\tif(sum[nowroot]-sum[lastroot]-tmp>pos)return query(rson[lastroot],rson[nowroot],mid+1,r,pos);\n\treturn 0;\n}\nint main()\n{\n\tin(n),in(m);\n\tfor(R int i=1;i<=n;i++)in(a[i]),b[i]=a[i];\n\tsort(b+1,b+n+1);\n\tfor(R int i=2;i<=n;i++)if(b[i]!=b[new_n])b[++new_n]=b[i];\n\tfor(R int i=1;i<=n;i++)\n\t\tbuild(root[i-1],root[i],1,new_n,lower_bound(b+1,b+new_n+1,a[i])-b);\n\tfor(R int i=1,l,r;i<=m;i++)\n\t{\n\t\tin(l),in(r);\n\t\tint pos=query(root[l-1],root[r],1,new_n,(r-l+1)>>1);\n\t\tprintf(\"%d\\n\",b[pos]);\n\t}\n}\n```\n\n",
        "postTime": 1540537862,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "> ### \u9759\u6001\u4e3b\u5e2d\u6811\n\n\u9898\u9762\u5927\u610f\u5c31\u662f\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4$l,r$,\u8ba9\u4f60\u6c42\u51fa\u4e00\u4e2a\u6570\u5b57$num$\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e$\\frac{r-l+1}{2}$\u3002\u867d\u7136\u662f\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u4e3b\u5e2d\u6811\u88f8\u9898,\u4e0d\u8fc7~~\u600e\u4e48\u80fd\u5361\u6211\u7a7a\u95f4\u5462~~?\n\n\u601d\u8def\u5c31\u662f,\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u4e00\u534a\u80af\u5b9a\u662f\u7edd\u5bf9\u7684\u3002\u5982\u679c\u5de6\u513f\u5b50\u7684\u6743\u503c\u5df2\u7ecf\u5927\u4e8e$\\frac{r-l+1}{2}$,\u90a3\u4e48\u53f3\u513f\u5b50\u80af\u5b9a\u5c0f\u4e8e$\\frac{r-l+1}{2}$\u3002\u4e5f\u53ef\u80fd\u4e24\u8fb9\u90fd\u7b49\u4e8e$\\frac{r-l+1}{2}$,\u4e0d\u8fc7\u8fd9\u6837\u5b50\u5c31\u8bf4\u660e\u6ca1\u6709\u7b54\u6848\u3002\n\n\u5982\u679c\u5de6\u513f\u5b50(\u6216\u8005\u53f3\u513f\u5b50)\u7684\u6743\u503c\u5927\u4e8e$\\frac{r-l+1}{2}$,\u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u5728\u5de6\u5b50\u6811\u4e2d,\u8fd9\u6837\u5c31\u53ef\u4ee5$log\\ n$\u7684\u65f6\u95f4\u6c42\u51fa\u7b54\u6848\u3002\n\n> ### $Code$\n\n```pascal\n// luogu-judger-enable-o2 //\u6ca1\u6709\u8bf4pascal\u4e0d\u80fd\u5f00\n// \u6ce8\u610f\u7a7a\u95f4\nvar\n    left,right,tree:array[-1..10010007] of longint; //\u5206\u522b\u4e3a\u5de6\u513f\u5b50\u7684\u4f4d\u7f6e,\u53f3\u513f\u5b50\u7684\u4f4d\u7f6e,\u672c\u8282\u70b9\u7684\u6743\u503c\n    root:array[-1..10010007] of longint; //\u6bcf\u4e00\u4e2a\u6839\u7684\u7f16\u53f7\n    recf:array[-1..1500007] of longint; //\u6bcf\u4e00\u4e2a\u6570\u7684\u7f16\u53f7,\u76f4\u63a5\u7528\u6876\u6765\u4ee3\u66ff\u79bb\u6563\u5316\n    bucket:array[-1..5001007] of longint; //\u6bcf\u4e00\u4e2a\u7f16\u53f7\u6240\u4ee3\u8868\u7684\u6570\n    i,j,n,m,cnt,now,fa,tail,num,l,r,find:longint;\n    condition:real; //\u6ee1\u8db3\u8981\u6c42,\u5373\u4e3a(r-l+1)/2,\u5176\u5b9e\u53ef\u4ee5\u662f\u6574\u6570\n\nprocedure Build(l,r,key:longint); \nvar\n    mid:longint;\nbegin\n    inc(cnt); //\u52a8\u6001\u5f00\u70b9\n    tree[cnt]:=tree[fa]+1; \n    if l=r then \n        exit;\n\n    mid:=(l+r) div 2;\n    if key<=mid then //\u5f80\u5de6\u8d70\n    begin //\u8bb0\u5f97\u5168\u90e8\u90fd\u8981\u5f80\u5de6\n        left[cnt]:=cnt+1; //\u5de6\u513f\u5b50\u4e00\u5b9a\u662fcnt+1(\u9664\u4e86\u53f6\u5b50\u7ed3\u70b9)\n        right[cnt]:=right[fa];\n        fa:=left[fa];\n        Build(l,mid,key);\n    end;\n    if key>mid then //\u5982\u4e0a\n    begin\n        right[cnt]:=cnt+1;\n        left[cnt]:=left[fa];\n        fa:=right[fa];\n        Build(mid+1,r,key);\n    end;\nend;\n\nprocedure Query(l,r:longint);\nvar\n    mid,value:longint;\nbegin\n    if l=r then\n    begin\n        find:=bucket[l];\n        exit;\n    end;\n\n    value:=tree[left[fa]]-tree[left[now]]; //\u5de6\u8fb9\u7684\u6743\u503c\n        mid:=(l+r) div 2;\n    if value>condition then //\u6ee1\u8db3\n    begin\n        fa:=left[fa];\n        now:=left[now];\n        Query(l,mid);\n    end;\n    value:=tree[right[fa]]-tree[right[now]]; //\u5982\u4e0a\n    if value>condition then\n    begin\n        fa:=right[fa];\n        now:=right[now];\n        Query(mid+1,r);\n    end;\nend;\n\nbegin\n    read(n,m);\n    tail:=0;\n    for i:=1 to n do\n    begin\n        read(num);\n        if recf[num]=0 then //\u7ed9\u4e88\u6bcf\u4e00\u4e2a\u6570\u5b57\u7f16\u53f7\n        begin\n            inc(tail); //\u7ed9\u4e88\u7f16\u53f7\n            recf[num]:=tail; \n            bucket[tail]:=num;\n        end;\n        root[i]:=cnt+1;\n        fa:=root[i-1];\n        Build(1,n,recf[num]); //\u5f80\u7f16\u53f7\u7684\u4f4d\u7f6e\u63d2\u5165,\u4ee3\u66ff\u79bb\u6563\u5316\u3002\u4e0d\u8fc7\u4f60\u662f\u6c42\u533a\u95f4\u7b2cK\u5927\u7684\u8bdd\u8fd9\u6837\u5b50\u662f\u4e0d\u884c\u7684\n    end;\n\n    for i:=1 to m do\n    begin\n        read(l,r); \n        condition:=(r-l+1)/2; //\u6761\u4ef6,\u5c0f\u6570\u7c7b\u578b\n        now:=root[l-1]; \n        fa:=root[r];\n        find:=0;\n        Query(1,n);\n        writeln(find);\n    end;\nend.\n```",
        "postTime": 1534503844,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    },
    {
        "content": "\n\u8fd9\u9898\u5e76\u4e0d\u96be\u5427\u3002\n\n\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u4e3b\u5e2d\u6811(\u867d\u7136\u6211\u624b\u51b7\u8c03\u4e86\u597d\u4e45)\n\n\u6743\u503c\u7ebf\u6bb5\u6811\u5f80\u5dee\u503c\u5927\u4e8e$l-r+1$\u7684\u90a3\u4e00\u8fb9\u8d70\n\n\n\n\n\n\n    \n```cpp\n#include<cstdio>\ntemplate <typename Type> inline void Read( Type& in ){\n    in = 0;char ch=getchar();\n    for(;ch> '9'||ch< '0';ch=getchar());\n    for(;ch>='0'&&ch<='9';ch=getchar())in=in*10+ch-'0';\n}\nconst int MAXN = 5e5 +1;\nint n,m,Ct,u,v,In;\nint Root[MAXN],Lc[MAXN*20],Rc[MAXN*20],Sum[MAXN*20];\nvoid Build( int& Nd,int Pt,int l,int r,int p ){\n    Nd = ++Ct;\n    Sum[Nd] = Sum[Pt]+1;\n    if( l==r )return;\n    Lc[Nd] = Lc[Pt];Rc[Nd] = Rc[Pt];\n    int Mid = l+r >>1;\n    if( p<=Mid )Build( Lc[Nd],Lc[Pt],l,Mid,p );\n    else Build( Rc[Nd],Rc[Pt],Mid+1,r,p );\n}\nint Query( int Nd,int Pt,int l,int r,int k ){\n    if( l==r )return l;\n    int Mid = l+r >>1;\n    if( Sum[Lc[Nd]]-Sum[Lc[Pt]]>k ) return Query( Lc[Nd],Lc[Pt],l,Mid,k );\n    else if( Sum[Rc[Nd]]-Sum[Rc[Pt]]>k ) return Query( Rc[Nd],Rc[Pt],Mid+1,r,k );\n    return 0;\n}\nint main(){\n    Read( n );Read( m );\n    for( int i=1;i<=n;i++ )Read( In ),Build( Root[i],Root[i-1],1,n,In );\n    while( m-- ){\n        Read( u );Read( v );\n        printf(\"%d\\n\",Query( Root[v],Root[u-1],1,n,v-u+1>>1 ));\n    }\n    return 0;\n}\n```",
        "postTime": 1489926741,
        "uid": 20116,
        "name": "never_see",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3567 \u3010[POI2014]KUR-Couriers\u3011"
    }
]